mov
adc
add
inc
outs
outs
ins
gs
outs
add
or
add
(bad)
jmp
add
jb
gs
push
jns
je
ins
add
xor
add
inc
outs
jae
inc
fnsave
jb
inc
xor
add
add
jg
jmp
or
outs
jb
dec
outs
je
sub
jg
test
ins
(bad)
ins
ss
stos
jl
cmp
mov
gs
add
(bad)
out
cmp
das
add
jns
mov
das
push
int3
fs
call
sub
data16
xchg
jb
pop
cld
out
inc
push
fs
jle
xor
pop
sbb
adc
div
xor
add
fbstp
sbb
push
push
inc
add
pop
pop
sar
popa
je
jbe
dec
jae
je
or
push
out
xor
ss
and
cld
sti
mov
push
fs
mov
inc
outs
jne
mov
and
pop
out
ins
jo
aas
aam
or
addr16
jne
jb
arpl
jmp
add
aas
call
jb
fdivr
es
push
xchg
mov
sbb
xor
inc
push
adc
das
push
imul
movs
dec
sub
or
add
daa
jg
adc
jmp
pop
pop
add
js
inc
mov
pop
fist
xor
mov
mov
int3
push
or
ins
push
xchg
sbb
loopne
or
daa
lock
lock
es
push
mov
popa
fld
loope
push
adc
or
and
aas
adc
push
inc
ins
popa
jae
and
add
(bad)
scas
loop
push
dec
push
inc
push
push
dec
push
mov
push
inc
fucomp
xchg
xchg
inc
push
adc
adc
add
out
cs
gs
adc
xchg
inc
enter
xor
adc
sbb
push
and
mov
xor
add
or
pop
inc
jno
push
imul
add
in
add
gs
add
sbb
add
cmp
adc
cmp
pusha
imul
inc
mov
pop
xor
push
fild
popaw
arpl
adc
inc
adc
dec
or
pmulhuw
mov
aaa
sbb
push
adc
dec
es
in
xor
jb
ins
hlt
push
push
push
popa
nop
and
scas
fmul
data16
jo
sbb
sahf
sub
push
ins
inc
and
add
mov
xchg
pop
aam
adc
sub
pop
jnp
mov
dec
je
jmp
popf
and
add
imul
out
add
cld
jl
or
add
in
fs
cmc
add
mov
mov
lock
jmp
adc
or
inc
mov
add
(bad)
clc
push
jp
ins
cmp
pop
push
dec
jb
jnp
cdq
jb
or
push
jecxz
add
fstp
pusha
aas
add
inc
add
sub
pop
das
jl
push
jl
sbb
inc
pop
jp
pusha
push
call
shl
add
push
or
push
xor
cmp
push
mov
and
jbe
iret
leave
repz
dec
inc
ins
xchg
inc
fstp
add
movntps
pop
dec
dec
dec
outs
sets
in
sbb
daa
daa
daa
and
adc
(bad)
popf
xchg
sbb
xchg
ror
ins
test
aas
inc
pcmpeqd
fisttp
cmc
mov
idiv
outs
or
das
clc
dec
stc
(bad)
cli
cli
outs
test
sti
jmp
mov
into
pop
pop
cmp
fsin
dec
push
dec
jne
dec
bound
aas
ds
arpl
ins
inc
push
inc
aas
add
pop
mov
stc
add
gs
data16
and
(bad)
scas
dec
add
inc
sub
xor
inc
imul
dec
and
pop
add
push
jae
stos
mov
test
or
push
mov
add
dec
jnp
imul
cmovae
add
push
jns
push
lahf
cld
add
adc
inc
xor
xchg
js
dec
popa
ins
cmp
cli
nop
out
add
cmp
lods
or
add
inc
cmp
imul
dec
jno
cmp
push
popa
cwde
je
pop
ins
add
jno
fdivr
adc
fisub
add
push
js
or
sub
lods
and
jp
stc
add
xchg
push
or
outs
ins
jae
sub
sub
ja
lock
cmp
call
fs
sub
in
add
je
jle
test
out
or
sbb
inc
aas
add
pop
daa
push
ins
mov
inc
adc
rcl
out
imul
inc
jnp
cmp
movs
add
inc
outs
ins
jns
push
nop
cmp
cmp
jp
mov
rol
sbb
out
push
cdq
push
(bad)
lock
jecxz
test
ficom
jnp
adc
add
sub
ret
imul
dec
mov
xor
push
fmul
push
test
mov
dec
add
mov
gs
arpl
xor
cmp
or
and
sub
cmp
imul
dec
lock
cwde
inc
pop
xor
or
or
and
jo
and
pop
pop
adc
xchg
gs
loop
js
jo
imul
int3
adc
or
lods
sub
or
sub
inc
or
inc
enterw
add
jne
mov
or
add
xor
adc
popa
stos
in
jo
fadd
cmp
add
popa
je
push
mov
test
push
jmp
inc
inc
aas
jecxz
(bad)
xor
jecxz
jne
scas
outs
fs
jge
xor
or
push
add
push
sbb
not
inc
in
add
outs
jns
iret
lea
fwait
xor
sbb
add
pop
add
aas
rcr
das
stos
imul
push
inc
aas
add
jle
mov
fisubr
inc
je
bound
mov
pop
sub
dec
add
inc
and
pop
pop
das
add
aas
dec
pop
mov
clc
or
or
adc
xor
das
test
fdiv
pop
das
loop
shl
cmp
fs
ins
inc
add
sti
mov
pop
jnp
fadd
jl
aas
cwde
and
sub
mov
push
outs
ins
sbb
pop
xchg
sub
sub
pop
adc
xor
or
int
xchg
sub
push
dec
mov
into
inc
cld
or
outs
sub
ins
push
ss
add
and
dec
add
or
add
int
and
add
jmp
adc
and
int3
popa
cmps
imul
add
lahf
popa
aaa
push
and
loope
and
cmps
loopne
and
and
das
and
shl
and
inc
jb
dec
fcom
in
aad
cmps
push
add
inc
push
mov
jnp
pop
cmp
xchg
lock
dec
(bad)
retf
iret
fadd
and
and
cmp
mov
xor
sub
and
in
fcom
popa
add
loopne
sub
sbb
and
jp
ss
and
popa
push
mov
inc
add
cmps
jle
xor
pop
adc
push
leave
push
xchg
jl
das
or
jb
push
or
fnstenv
sub
das
xchg
push
push
sbb
arpl
mov
push
push
push
inc
cmp
jmp
or
xchg
pop
arpl
repz
or
or
fs
jb
jns
sbb
push
adc
push
adc
mov
add
in
add
jmp
lods
int3
daa
xor
push
jno
popa
or
das
add
retf
xchg
pusha
push
jg
xor
iret
je
fiadd
test
xchg
pusha
fcom
jno
das
movs
pop
movs
fild
mov
cmp
push
imul
pop
in
pop
fdivr
in
push
push
inc
cmp
mov
das
popf
int3
pop
dec
push
pushf
or
sbb
mov
sub
lea
sub
inc
es
and
adc
push
call
stos
test
push
and
arpl
add
or
pusha
xor
jo
ins
sbb
inc
ins
popa
addr16
mov
outs
lods
sub
or
ins
arpl
mov
sub
jo
add
nop
daa
or
dec
movs
mov
xchg
retf
push
cmp
pop
and
xchg
fild
(bad)
pusha
or
shl
adc
scas
loopne
push
out
or
rcr
jbe
inc
sub
sub
add
inc
sbb
xchg
fs
hlt
sbb
or
mov
dec
fiadd
lock
push
shl
push
movs
jge
scas
and
pushf
add
sub
and
cmp
and
adc
pop
xchg
imul
fld
add
dec
pop
jae
(bad)
sub
cmc
jne
cli
imul
adc
pop
in
pop
push
adc
int3
and
mul
and
ins
mov
jo
adc
and
icebp
push
and
cmp
add
and
(bad)
gs
enter
fwait
ret
pop
xchg
adc
mov
add
add
and
sbb
outs
and
and
lock
add
lods
xchg
xchg
repz
fldcw
or
adc
push
adc
or
pop
or
outs
mov
or
outs
add
neg
ret
and
rcl
adc
sub
sub
in
scas
pop
mov
sti
inc
pop
in
or
lock
push
inc
jns
dec
dec
xchg
loope
sbb
add
or
mov
xor
pop
add
pop
sub
loopne
pop
adc
jmp
div
(bad)
add
movs
sbb
jp
add
cmp
dec
and
sbb
mov
mov
jae
clc
adc
push
fwait
and
jno
(bad)
pop
mov
outs
mov
sbb
dec
adc
sti
push
dec
sti
retf
lds
or
sub
or
inc
sbb
mov
mov
xor
(bad)
loop
adc
jg
push
sbb
xor
pop
adc
add
rol
add
pop
lea
add
ficom
das
add
js
hlt
jo
pop
shrd
jb
imul
add
jne
in
or
pop
push
mov
imul
fild
call
lods
push
outs
je
loope
and
ret
mov
lahf
add
mov
sub
or
pop
pop
(bad)
sar
sub
imul
xchg
add
add
dec
call
or
(bad)
xor
loopne
je
inc
add
xor
cmp
jns
xor
test
add
(bad)
add
(bad)
cmp
sbb
jb
mov
mov
fild
mov
dec
inc
addr16
sub
daa
out
push
ss
leave
leave
enter
fstp
cmp
in
fs
mov
leave
enter
retf
jo
fs
rol
dec
xchg
jb
repnz
sbb
push
cmp
jns
fcom
cmp
fstp
ds
test
or
pop
pmaxub
xor
mov
push
cmp
jns
inc
mov
inc
outs
dec
dec
inc
fimul
add
inc
imul
and
scas
push
dec
sbb
stos
ss
ins
es
xor
(bad)
out
inc
and
cdq
call
mul
ficom
xchg
or
cs
dec
jne
dec
sub
xchg
dec
sbb
add
xor
loope
scas
cmp
inc
inc
fadd
and
xchg
(bad)
sti
add
ins
outs
arpl
jl
mov
push
gs
add
or
popa
add
sub
dec
ins
ror
popa
or
xor
les
pop
add
ret
sbb
add
add
jo
pop
jnp
ja
add
or
cmp
jb
add
inc
sub
mov
mov
ins
bswap
inc
jmp
ret
jl
fld
push
ins
mov
fwait
or
ret
test
js
js
inc
and
mov
dec
inc
xor
call
and
xchg
pop
add
leave
add
adc
or
xor
pushf
aam
and
xchg
aam
unpckhps
or
fs
inc
enter
cmp
call
add
adc
int
push
add
xor
xor
xchg
test
hlt
adc
xor
xchg
test
cmps
pop
scas
inc
pop
cmp
push
fsub
ja
call
or
add
test
stc
xchg
ss
mov
lds
and
inc
dec
rol
adc
or
sbb
es
jl
mov
push
or
sub
mov
mov
and
xor
rcl
nop
mov
inc
inc
pop
adc
adc
rcl
pusha
dec
dec
dec
outs
jbe
jo
dec
or
push
adc
ss
inc
imul
int
mov
add
cmp
push
mov
outs
cmp
aam
leave
out
jb
fild
adc
dec
pop
pop
xchg
shr
aam
fisubr
aaa
and
pop
icebp
nop
xor
push
add
jnp
sub
add
jo
push
jae
adc
movs
aam
lahf
arpl
adc
adc
mov
ja
xor
add
ds
push
je
cmp
jnp
push
add
or
jo
dec
jp
jns
add
push
int
jl
outs
adc
in
test
add
ins
or
and
xlat
sbb
inc
scas
int
pop
add
xchg
int
jge
lock
lahf
jge
sbb
test
inc
inc
daa
push
jo
outs
das
ret
gs
push
dec
popa
js
pop
pop
xor
loope
inc
sub
inc
nop
call
fwait
call
xor
cmp
xor
les
mov
mov
cmp
pop
jle
dec
jne
retf
js
test
or
in
mov
inc
xchg
int
adc
add
nop
arpl
arpl
stos
inc
or
les
push
jbe
(bad)
nop
imul
add
jae
mov
inc
pop
sbb
sub
cs
or
inc
inc
cmp
pop
in
nop
fbld
dec
add
out
xchg
ins
inc
das
lods
das
adc
sti
adc
arpl
pop
cmp
mov
out
enter
push
aaa
cmc
mov
or
daa
nop
inc
mov
popa
jno
js
test
sub
dec
ret
push
inc
adc
push
jns
fild
sahf
icebp
neg
or
add
adc
(bad)
or
sbb
jl
jnp
mov
inc
dec
outs
test
mov
(bad)
sbb
mov
sub
in
pop
jmp
sbb
ret
dec
sub
mov
lds
daa
shl
fs
(bad)
inc
mov
nop
jbe
jne
add
dec
adc
xor
leave
adc
cs
jne
adc
adc
outs
sbb
out
jp
ins
xchg
jl
jnp
sub
sbb
inc
scas
aas
pop
dec
imul
dec
xor
cwde
push
mov
fldcw
aam
pop
or
mov
jge
sbb
icebp
outs
aaa
jo
xor
fsub
or
das
or
les
cwde
das
adc
cmps
mov
test
outs
and
or
repz
push
ficomp
daa
icebp
inc
in
jb
push
xchg
or
mov
popf
add
or
sub
rol
test
mul
adc
iret
dec
xchg
add
dec
xor
sub
mov
stos
mov
pop
xchg
pop
or
(bad)
inc
cmp
or
pop
sub
outs
jae
jo
enter
nop
addr16
adc
add
add
adc
stc
les
js
dec
cmp
mov
jno
sub
or
in
adc
or
jo
in
scas
shr
dec
add
cmp
icebp
sub
in
xor
add
push
or
(bad)
mov
inc
jne
ins
fs
jo
add
pop
js
pop
push
imul
sub
pop
test
loopne
and
mov
push
rol
das
test
test
add
cmp
ror
xor
add
dec
xchg
mov
dec
sbb
lds
aaa
push
xchg
or
mov
or
das
repz
mov
adc
cmp
dec
loope
mov
cmps
sbb
xor
and
aas
add
jne
bound
aad
shl
jae
in
add
cmp
jp
scas
mov
aas
sub
xchg
lahf
nop
push
sar
and
mov
push
in
call
jb
(bad)
aam
jb
jb
int3
enter
jb
sar
mov
test
jb
jb
mov
jb
jb
and
test
jb
je
ins
push
fs
pop
pop
jb
jb
push
push
sbb
jb
jb
sbb
or
jb
jb
dec
inc
inc
cmp
jns
jb
add
jp
mov
das
push
into
adc
pop
xchg
ret
jmp
cmp
mov
nop
push
add
mov
lods
(bad)
dec
inc
or
data16
test
je
movzx
mov
jge
ret
inc
inc
pop
ret
addr16
sub
sub
stos
mov
inc
outs
and
js
sub
int
mov
add
cwde
imul
jmp
push
arpl
fs
pusha
test
jae
and
(bad)
pop
xchg
adc
arpl
cmp
mov
clc
jp
jle
popa
dec
fld
imul
test
test
cmp
call
inc
sub
sti
pop
inc
in
dec
xor
add
dec
mov
jge
outs
lock
dec
dec
add
inc
push
dec
add
inc
or
fldcw
or
or
adc
addr16
pop
or
adc
or
lods
mov
or
sbb
adc
sbb
sub
push
imul
and
jp
add
cmps
mov
call
sub
pop
imul
dec
nop
inc
add
push
xor
cmp
ins
test
push
add
dec
cmp
arpl
shr
inc
jmp
shr
or
enter
fscale
ins
mov
lods
fild
jl
push
cmp
add
js
fs
and
mov
push
ins
outs
pop
xor
mov
add
nop
es
call
cmp
mov
mov
(bad)
inc
add
movzx
mov
and
jge
jne
pop
mov
and
cmp
xor
mov
inc
sbb
and
add
adc
push
add
retf
push
adc
in
add
xchg
iret
in
pop
not
loopne
(bad)
sbb
push
ret
cmp
or
outs
mov
cld
add
or
fistp
hlt
adc
dec
add
clc
cmp
jo
and
mov
cld
sub
mov
mov
mov
jge
jmp
pusha
push
push
mov
inc
inc
inc
push
push
fld
adc
push
ds
shl
mov
jnp
mov
push
mov
test
push
mov
sub
mov
mov
jge
sub
mov
shl
sub
xchg
ja
sbb
xor
mov
xor
cmp
cmp
fxam
and
sub
cld
cli
sbb
add
aas
adc
adc
pop
in
sbb
xor
xchg
mov
rcr
loope
clc
pop
nop
dec
add
and
inc
shl
je
outs
shr
sti
mov
or
ja
sub
mov
mov
out
mov
add
ss
add
sub
ret
pop
pop
push
(bad)
sbb
fmul
mov
xchg
adc
mov
push
and
or
test
jne
in
outs
mov
mov
and
add
(bad)
jmp
or
cmp
sti
mov
and
push
push
lea
inc
cmp
mov
push
push
mov
cmp
jbe
sub
add
jmp
test
jne
mov
fimul
mov
in
mov
mov
imul
loope
sub
dec
(bad)
loopne
repnz
sub
fisubr
mov
pusha
add
pushf
fiadd
sti
inc
das
dec
mov
outs
add
sar
(bad)
jbe
jmp
out
mov
cmp
and
add
call
push
fimul
aas
cmp
jne
and
sar
adc
shl
fisttp
push
repnz
dec
and
jae
sbb
shr
push
or
cwde
fmul
sub
sbb
push
push
xchg
jo
rol
pop
or
pop
jl
cdq
ins
or
lds
enter
push
mov
or
jbe
ret
push
addr16
lods
rol
lds
dec
dec
adc
fld
shr
cmp
jb
add
das
dec
mov
leave
ror
jle
mov
adc
test
out
add
lock
pop
add
push
(bad)
push
cmp
rol
lea
imul
lds
xchg
inc
adc
jl
cmp
movs
add
and
(bad)
fwait
sub
sub
xor
add
psubusw
(bad)
mov
add
sar
adc
jbe
mov
cmp
addr16
or
or
or
loopne
sub
lahf
adc
sbb
cmp
cmps
rol
aas
je
xchg
icebp
jmp
inc
jmp
inc
and
ins
and
sub
fwait
inc
or
mov
sbb
daa
cld
bsf
lea
cdq
jmp
or
lea
mov
push
add
cmp
jne
mov
test
call
mov
mov
int
jmp
add
dec
jnp
sub
lea
xchg
add
dec
loopne
push
or
sbb
iret
jb
mov
jge
xor
lea
mov
sub
sub
dec
outs
jno
cmp
and
inc
push
mov
enter
bound
retf
and
lea
dec
cld
mov
shr
push
mov
mov
inc
and
call
sub
adc
imul
iret
mov
addr16
cld
out
dec
mov
mov
inc
sub
mov
dec
cli
jle
movs
or
fadd
cmp
mov
lea
fsub
pop
add
shr
mov
arpl
jg
cmps
je
loope
rol
or
jmp
nop
nop
fistp
mov
cmp
push
push
loopne
sub
shl
push
xor
add
and
fadd
sub
add
cld
jmp
mov
lods
or
enter
or
and
mov
cmp
xchg
or
inc
bound
adc
test
push
pop
xor
or
sub
setno
(bad)
neg
neg
mov
test
adc
cli
nop
and
mov
test
rol
test
add
xchg
loop
fisttp
push
jmp
lahf
ror
pop
sbb
cmc
inc
mov
mov
pop
mov
daa
jae
or
xor
mov
push
or
cmp
push
or
ins
push
imul
iret
les
(bad)
shr
sahf
mov
pop
pop
leave
outs
sub
pop
outs
out
push
push
mov
nop
xor
jle
or
call
loop
sbb
mov
push
jb
scas
test
inc
push
jne
or
adc
inc
cld
or
cmp
cli
je
lea
and
mov
xchg
call
pop
and
lock
cmp
sbb
aas
jmp
pop
dec
clc
sub
sub
sahf
into
xor
sub
ret
aad
push
lahf
mov
mov
cmp
sbb
add
jo
mov
inc
cld
cmp
add
(bad)
mov
loopne
mov
xchg
mov
or
rol
in
or
in
pop
or
shl
sbb
or
retf
jb
jns
jb
inc
add
mov
ret
jg
aas
shr
or
lea
push
mov
loop
xlat
mov
sub
adc
and
add
hlt
outs
outs
fneni(8087
xor
clc
iret
mov
jl
push
sbb
add
ret
xchg
fild
div
sbb
push
jle
add
cmp
xor
setae
cmp
jb
lods
les
mov
loopne
push
int3
push
mov
push
jmp
xor
xlat
xor
cmp
push
jbe
fcomp
push
or
mov
cld
or
mov
push
mov
int
dec
mov
jne
or
adc
pop
pop
pop
cmc
(bad)
clc
mov
rol
xlat
sub
mov
jno
clc
add
cmp
and
lea
mov
lds
cld
adc
xchg
out
mov
test
ret
or
xchg
loopne
cmp
cmp
dec
or
inc
fbstp
adc
es
rcl
or
mov
push
sar
mov
ja
cmp
push
dec
(bad)
pop
mov
call
jmp
rol
sbb
fiadd
mov
push
ret
and
push
add
push
ins
fsub
cmp
lea
jl
dec
push
pop
add
outs
cld
bound
sbb
ret
pop
(bad)
(bad)
dec
iret
push
gs
pusha
fcom
loop
shl
xchg
ret
es
nop
push
loop
outs
sar
and
sbb
push
lea
jecxz
(bad)
mov
leave
lea
or
jae
neg
fldz
cli
adc
(bad)
fst
add
js
or
rcr
mov
pop
das
loopne
add
adc
add
mov
mov
sbb
cmp
add
rcr
sbb
mov
cmp
jb
dec
add
pop
dec
xlat
inc
retf
ret
sbb
loop
lods
jmp
mov
push
adc
inc
sbb
mov
pop
adc
sbb
jmp
sbb
cmps
es
add
fmul
cli
div
dec
mov
mov
mov
test
test
pop
xchg
mov
xor
div
mov
ret
add
push
sub
inc
in
jmp
mov
add
mov
adc
test
jne
mov
xor
xchg
ficom
jg
sub
adc
outs
sti
adc
mov
mov
xor
sub
out
rcr
mov
xor
or
ds
xor
jbe
test
push
rcr
xor
es
adc
out
jbe
(bad)
mov
aas
dec
jne
mov
push
in
cmp
ja
mov
add
(bad)
(bad)
mov
jo
jae
xor
leave
mov
push
adc
sti
div
xchg
add
push
adc
jg
add
adc
test
je
adc
ins
add
or
or
add
dec
or
test
xchg
xor
push
mov
jbe
jge
push
push
cmp
test
xchg
ror
pop
es
and
clc
jle
mov
push
cmp
daa
test
daa
dec
iret
neg
mov
inc
adc
lea
mov
and
inc
jne
rol
stc
push
cdq
cmp
add
hlt
sbb
mov
mov
data16
mov
pop
mov
add
push
mov
fidiv
pop
xor
cli
adc
sbb
arpl
sahf
(bad)
mov
pop
gs
loope
mov
in
movs
sub
aas
inc
sbb
icebp
fimul
mov
and
mov
out
add
ror
push
mov
mov
outs
sub
push
jl
sub
scas
xor
fistp
cmp
jne
add
mov
mov
sbb
sbb
or
jne
pop
mov
pop
fadd
jo
bound
add
jg
jmp
call
loopne
and
mov
jl
cmc
push
mov
dec
inc
in
dec
hlt
inc
test
rcl
sbb
pop
imul
call
add
and
inc
aas
sbb
pop
or
cmp
je
aaa
dec
les
icebp
mov
cmp
add
add
jge
adc
inc
hlt
adc
inc
add
pop
(bad)
pop
jle
jge
ret
add
ins
pop
adc
jecxz
dec
dec
aas
int
in
inc
cdq
test
inc
out
fiadd
mov
aas
ror
adc
dec
pusha
js
test
adc
cmp
stos
and
mov
shl
cmp
jae
add
mov
and
dec
fsub
pop
add
jne
cmp
xchg
popa
cmpxchg
xchg
call
and
call
fsub
pop
xlat
and
cdq
fild
xchg
das
mov
lods
sub
je
or
pop
imul
sti
inc
cmp
movq
ror
lock
int
cmp
shl
(bad)
fmul
xchg
pop
mov
jbe
mov
xchg
jne
sub
cwde
in
data16
mul
xchg
(bad)
and
fadd
sub
and
push
push
mov
mov
not
mov
pop
sbb
ret
xor
test
std
mov
push
add
or
push
clc
pop
jmp
ja
popf
pop
mov
and
add
mov
shl
mov
(bad)
(bad)
jnp
sti
sbb
mov
(bad)
push
dec
nop
jecxz
mov
inc
test
jl
jb
mov
cmc
fcmovbe
jmp
inc
adc
fnstenv
in
xchg
mov
pop
xchg
sti
pop
je
dec
push
pop
mov
jl
cmp
not
add
ret
sbb
adc
icebp
cs
fadd
mov
test
adc
mov
dec
out
in
push
icebp
pushf
in
loope
jb
push
mov
mov
lock
ret
scas
cmp
ja
lock
sbb
push
adc
jne
mov
sub
pop
call
sbb
(bad)
rcl
push
mov
inc
push
or
ja
mov
dec
add
cs
pop
push
mov
xor
push
push
in
imul
cld
loopne
xchg
mov
jae
add
je
dec
je
jmp
pop
jnp
jo
jo
inc
mov
pop
repnz
mov
es
or
inc
cld
addr16
js
push
mov
dec
mov
sbb
(bad)
stos
icebp
push
cmp
add
pcmpeqw
dec
loopne
mov
and
mov
mov
cmp
jg
je
pop
shl
pop
pusha
imul
out
and
mov
dec
pop
jb
inc
xor
sbb
es
sub
inc
xlat
add
jge
or
aaa
add
jne
mov
outs
mov
push
sbb
shl
jo
push
mov
pop
test
mov
xor
add
hlt
cmp
out
add
adc
clc
jbe
mov
cmc
call
ret
(bad)
aaa
jne
mov
or
cmp
push
mov
inc
in
inc
retf
mov
inc
clc
mov
pop
cs
sar
mov
add
cmp
or
std
call
jbe
xor
(bad)
cmc
shl
mov
shl
add
cmps
call
fs
(bad)
cmp
loope
lea
add
jne
cli
movs
shl
jae
mov
mov
mov
and
mul
cs
retf
imul
mov
aaa
cmp
adc
jmp
push
(bad)
sub
mov
mov
jmp
dec
ret
mov
ret
repz
mov
pop
push
pop
adc
mov
push
mov
jle
jmp
mov
in
lock
out
push
mov
cmp
jne
mov
mov
dec
or
or
inc
(bad)
aaa
pop
sar
inc
and
stos
mov
enter
mov
or
inc
cmp
loopne
xchg
adc
pop
jmp
dec
add
adc
idiv
mov
cmp
mov
mov
jo
clc
xor
jnp
adc
xchg
test
add
jnp
and
je
lahf
mov
out
ins
test
sbb
pop
and
push
mov
adc
repz
mov
lock
pop
mov
dec
out
and
cmp
cmp
mov
or
pop
adc
addr16
aaa
sti
xor
repz
nop
lahf
pusha
aaa
jne
lahf
mov
lahf
idiv
or
shl
mov
inc
fs
or
pop
mov
mov
inc
mov
mov
jae
jmp
shl
or
rcr
arpl
or
sub
cmp
je
sbb
push
scas
pop
xor
aas
add
ror
mov
out
mov
add
and
jmp
(bad)
daa
retf
out
ret
mov
dec
movs
test
pop
and
mov
out
out
out
jns
mov
jge
test
jne
outs
cwde
shl
or
sbb
or
mov
add
je
push
js
mov
pop
pop
(bad)
(bad)
push
ret
xlat
mov
push
add
or
push
lock
add
sub
pop
jne
loop
fneni(8087
sti
push
out
mov
aas
mov
pop
(bad)
cmp
jge
mov
nop
push
add
mov
shl
stc
and
sub
jg
jmp
pusha
push
mov
jle
mov
push
adc
mov
xchg
sahf
out
push
les
loop
call
and
push
sbb
outs
push
push
mov
dec
or
adc
fld
fsubrp
xor
sbb
cmp
jle
loopne
fisttp
or
shr
retf
adc
jbe
adc
mov
(bad)
add
clc
sub
pop
inc
cmc
pop
jmp
ins
xor
or
mov
mov
adc
and
add
cmp
cmp
push
add
sbb
adc
ret
fild
cmps
(bad)
push
jne
outs
(bad)
add
in
or
push
call
cmp
jne
or
loope
mov
or
adc
loopne
enter
bound
and
inc
imul
ss
cmp
pop
mov
or
xchg
hlt
bound
pop
scas
mov
push
jmp
sub
pop
es
test
xchg
cmp
or
in
dec
cmp
mov
or
mov
sbb
push
inc
add
mov
mov
pop
sub
ret
pop
cmp
mov
inc
jmp
pop
pop
pop
pop
adc
jo
cwde
loopne
test
dec
mov
lock
add
(bad)
movs
mov
xchg
div
push
ror
jg
fsubr
xor
mov
jmp
std
cli
ror
(bad)
jmp
dec
adc
pop
pop
loopne
dec
jmp
mov
scas
add
add
pop
or
or
ins
daa
cmp
test
or
pop
jge
and
clc
and
neg
mov
mov
not
and
add
or
mov
xor
jo
adc
and
aaa
push
add
cwde
dec
pop
jg
mov
sub
movzx
cmp
pop
push
lock
test
scas
sbb
pop
std
fild
or
ds
add
fnstcw
fwait
or
or
cld
fldcw
jbe
fsubrp
dec
mov
pop
jmp
(bad)
lock
rcr
fstp
pop
ret
call
pop
ins
(bad)
pop
in
outs
icebp
daa
test
add
pop
pop
add
movsx
inc
out
cmp
add
push
cli
adc
push
jmp
pop
dec
out
lods
mov
or
lea
push
mov
push
adc
inc
sysenter
add
mov
(bad)
jge
clc
ins
jne
jmp
ins
push
push
push
jae
imul
push
inc
es
push
cmp
or
adc
pop
out
fcom
push
cld
add
inc
pop
pop
mov
add
or
xor
nop
test
nop
xor
aaa
das
adc
mov
mov
mov
je
js
std
pcmpgtd
enter
sub
ja
ins
mov
sbb
jmp
and
push
sub
pop
adc
mov
mov
and
dec
mov
dec
pop
jnp
add
lea
mov
fiadd
sbb
cmp
add
xor
mov
push
cmc
or
imul
jmp
out
in
or
adc
mov
(bad)
loope
jae
xor
jne
xchg
adc
jbe
add
xchg
adc
sub
in
sub
inc
pusha
and
add
jo
add
int
push
dec
mov
pop
inc
sbb
mov
push
imul
aas
cld
push
sbb
push
push
shr
and
pop
(bad)
out
mov
inc
add
cmp
loope
(bad)
je
and
mov
mov
test
je
test
xchg
mov
and
sar
inc
call
jmp
cmp
jne
push
push
(bad)
psraw
sub
leave
or
test
popf
xor
inc
mov
ret
leave
mov
inc
push
ds
fistp
aaa
push
add
adc
pop
xor
neg
add
mov
push
leave
mov
sbb
int
cdq
movzx
fstp
sbb
or
stc
mov
cmp
mov
pop
pop
in
mov
dec
jbe
lods
sbb
add
jae
aam
test
inc
mov
scas
dec
mov
add
inc
mov
rol
sbb
fucomi
pop
cmp
sti
icebp
outs
pop
cmp
mov
not
cmps
rol
mov
sbb
pop
in
ret
(bad)
sahf
icebp
test
inc
mov
and
cmp
jne
je
cld
and
movzx
call
rcl
loopne
lea
stos
push
push
adc
ret
scas
pop
loop
adc
or
cld
mov
and
jne
je
arpl
addr16
and
jp
pop
sub
outs
int3
pop
mov
push
mov
in
in
dec
add
in
ja
gs
arpl
pop
ds
ret
sub
cmps
sar
or
ja
and
push
rcr
retf
adc
pop
je
mov
fucomp
adc
push
or
mov
mov
mov
jl
ins
test
add
add
jg
lock
or
add
adc
fst
jle
mov
pop
call
fidiv
add
fsubr
stos
mov
mov
push
mov
and
inc
lea
mov
xchg
sbb
sbb
cmp
repz
adc
adc
or
inc
cmp
ret
pop
mov
xor
xor
icebp
sqrtps
(bad)
aaa
mov
mov
xor
mov
push
add
jmp
xor
ja
stos
add
mov
sahf
add
ret
or
shl
add
shl
lock
ja
mov
dec
shl
jno
xchg
xchg
push
mov
je
mov
mov
inc
pop
je
mov
loope
retf
sbb
add
daa
cmp
div
pop
sbb
add
pop
test
add
imul
cmp
and
sti
adc
push
or
pop
cmp
in
pusha
(bad)
cmp
mov
shl
mov
sbb
test
push
add
cmp
je
mov
sti
sub
cld
cld
or
je
and
je
je
pop
je
jmp
jne
arpl
push
push
jmp
jmp
xor
or
cmp
ja
fstp
rol
gs
pop
and
cli
or
data16
iret
(bad)
(bad)
jmp
neg
jle
js
pop
sub
jmp
inc
dec
jmp
mov
or
addr16
sahf
popa
jb
mov
mov
jbe
adc
add
or
mov
xor
add
mov
ror
sbb
add
out
mov
mov
jg
icebp
outs
cld
stos
sub
inc
mov
rol
mov
or
mov
inc
dec
mov
and
(bad)
ss
inc
xor
shl
dec
jne
(bad)
(bad)
ret
mov
mov
cmp
repz
sbb
test
in
jg
sub
sub
leave
jne
push
jg
retf
iret
mov
retf
sub
movs
mov
sub
push
pop
nop
inc
pusha
mov
nop
addr16
adc
jl
sbb
sar
cmp
add
mov
nop
pop
xor
jecxz
push
mov
je
sub
in
pcmpeqb
out
or
popa
shl
lahf
pusha
in
xchg
jmp
fcom
cmps
movs
xor
xor
sbb
or
xchg
stc
jmp
fstp
fld
adc
push
std
mov
out
and
add
pushf
pop
enter
fisttp
add
adc
enter
daa
adc
or
mov
je
add
add
idiv
clc
lock
cld
push
mov
and
retf
mov
sahf
movs
push
fninit
fwait
mov
push
add
cmp
enter
repnz
push
xchg
mov
jns
adc
push
mov
xchg
pusha
push
imul
and
mov
pop
and
sete
shl
push
push
mov
ror
fst
(bad)
(bad)
or
mov
sbb
aaa
and
push
aaa
push
(bad)
ffreep
int3
outs
test
mov
pop
sbb
out
outs
cmp
movups
fld
in
jle
adc
pop
mov
mov
call
push
dec
icebp
das
push
xlat
stos
mov
loop
jo
dec
rep
pop
and
sar
mov
sub
dec
cli
push
add
push
jmp
cmp
je
pop
mov
push
pusha
imul
sbb
into
push
mov
mov
push
fild
jl
sbb
cmp
lods
(bad)
mov
or
mov
jbe
sub
aam
inc
pop
dec
jmp
test
cmp
(bad)
jb
movsx
fwait
adc
jmp
pusha
fiadd
shr
rcl
xchg
idiv
pop
add
fisttp
mov
sub
(bad)
jp
shl
scas
add
mov
imul
call
inc
pop
adc
clc
mov
and
add
sub
dec
mov
mov
mov
ins
push
ins
clc
aad
jmp
fsubp
pop
cli
test
test
in
sub
or
cmp
adc
leave
retf
or
pop
cwde
add
leave
lock
mov
cmp
aam
ss
push
cmp
xor
or
js
inc
ror
ss
call
lds
xchg
(bad)
mov
ins
aam
pop
inc
push
mov
rol
movzx
add
lea
cmp
mov
cld
dec
pop
je
mov
mov
mov
or
add
mov
mov
xchg
cmp
mov
pop
cmp
sbb
xor
ja
mov
pop
(bad)
fld
dec
push
dec
sub
enter
cmp
xchg
sub
xchg
cld
je
(bad)
cli
push
pop
mov
imul
shr
(bad)
jne
shl
int
mov
call
push
add
jae
mov
add
push
xchg
push
loopne
jp
xor
movzx
push
add
repnz
aaa
mov
pop
adc
mov
or
pop
ret
pop
push
jbe
jmp
cld
adc
push
xchg
fistp
dec
shr
mov
daa
loope
out
push
pop
lock
aad
outs
in
call
or
je
jmp
into
out
mov
xor
iret
cmps
pop
shl
dec
pop
pop
aaa
pop
push
dec
xchg
mov
sbb
cli
add
jae
push
or
scas
mov
or
mov
pop
int3
pop
adc
jo
xchg
sar
aam
mov
lea
inc
lods
jecxz
push
(bad)
push
lock
mov
int3
test
cmp
cmp
loopne
cmp
aam
test
xchg
stos
jo
mov
xor
ds
jle
jge
repnz
cmp
push
push
add
dec
jne
xchg
out
sbb
xlat
jmp
pop
jmp
push
lea
(bad)
jmp
in
ins
xor
jmp
xor
test
jne
xor
cli
fstp
psubusw
mov
int3
nop
dec
das
addr16
or
icebp
push
hlt
mov
mov
aam
enter
je
mov
cwde
add
push
fcmovu
fcom
or
xor
adc
push
add
jle
mov
add
(bad)
push
(bad)
adc
add
push
mov
ja
mov
nop
out
push
xchg
mov
add
adc
je
clc
in
mov
pop
jmp
pop
xor
call
repz
sbb
jecxz
loopne
xchg
fcmovne
push
pop
add
pop
iret
dec
aaa
dec
repnz
mov
jl
push
sub
xor
lea
mov
mov
mov
mov
inc
mov
pop
xor
mov
mov
mov
or
push
test
pop
(bad)
jle
dec
call
inc
push
xor
sbb
push
push
xor
xor
or
out
inc
in
jae
movs
mov
mov
retf
outs
in
or
pop
sub
sub
cmps
sbb
ja
or
ficom
sbb
cmp
sbb
outs
mov
push
ror
mov
cli
adc
xor
call
add
sbb
sbb
sti
dec
call
jo
inc
xchg
popa
and
add
or
pop
inc
and
inc
push
push
push
push
loope
inc
mov
push
cmp
test
loopne
add
hlt
jmp
ja
lock
xchg
sub
nop
or
nop
dec
push
jg
ret
pop
hlt
rcr
xor
into
call
jmp
xchg
pushf
sbb
ins
add
jne
pop
jp
jno
dec
repnz
xchg
mov
pusha
sti
fiadd
cmp
and
mov
jne
cmp
jne
mov
pop
jg
pop
sub
add
das
enter
clc
sbb
fdiv
ja
shl
pop
clc
add
xor
add
mov
dec
outs
imul
add
test
js
dec
dec
imul
add
outs
or
push
adc
add
push
clc
cmp
mov
call
cmps
pop
or
mov
push
add
or
or
rcl
fstp
adc
sbb
mov
cmp
sbb
or
jne
sbb
je
sbb
dec
mov
or
pop
jo
pusha
or
stos
jb
scas
inc
xlat
mov
or
inc
add
and
push
add
inc
jno
loopne
and
das
jne
mov
cmp
push
dec
dec
mov
push
pop
popa
rcl
xor
and
js
adc
add
lods
clc
shl
pop
cmp
or
inc
adc
dec
clc
cmp
inc
pop
dec
adc
loop
mov
dec
fwait
dec
invd
(bad)
lock
outs
adc
call
mov
add
test
lods
adc
pushfw
test
(bad)
adc
or
dec
cmp
fwait
add
cmp
adc
mov
je
das
sub
or
cmps
add
sahf
(bad)
sti
out
inc
arpl
pop
andps
jns
xlat
pop
popf
mov
inc
add
bound
mov
jp
dec
inc
dec
mov
movs
mov
in
push
lds
clc
iret
push
cmp
xor
ret
shl
push
ins
jno
jo
jb
mov
ins
adc
stos
sete
fsubr
jbe
pop
mov
js
sub
shl
ret
inc
sbb
rol
add
out
add
jb
fldpi
push
ds
adc
jle
ins
lea
test
push
les
scas
mov
jp
xor
jno
dec
add
jle
jne
out
(bad)
cmp
(bad)
pop
mov
ret
(bad)
mov
adc
add
add
and
mov
jbe
arpl
xor
call
or
pop
jnp
jge
fsubr
fucomip
psraw
sub
call
sub
jmp
(bad)
mov
pop
jle
icebp
sbb
jmp
add
jmp
xor
add
cmp
movs
ret
rol
xor
fsubr
jmp
push
rcr
jmp
mov
ins
mov
pop
xlat
xchg
mov
xor
pushf
mov
xchg
push
rcr
jne
jno
fcom
cmp
(bad)
ficom
cmp
inc
push
add
in
aaa
sub
imul
dec
or
xchg
call
pop
dec
sbb
scas
jmp
sub
push
enter
xchg
inc
mov
js
pop
stos
ins
push
test
cmp
je
es
je
stos
add
push
cmp
jne
in
outs
inc
(bad)
fsubr
retf
ins
dec
cld
cmp
jne
(bad)
pop
outs
ficomp
cmp
cmp
jne
jae
adc
(bad)
loopne
fldcw
inc
inc
xchg
xchg
push
add
pop
lock
xchg
pop
daa
adc
pop
inc
add
adc
je
xor
xchg
adc
sbb
iret
add
or
call
daa
cmp
sbb
leave
jno
in
cmp
mov
xor
lds
ins
ss
mov
fadd
test
aam
push
call
jne
sti
nop
cdq
add
xor
sub
pop
clc
cmovne
hlt
retf
sub
(bad)
jno
hlt
cs
mov
mov
push
adc
aas
in
cmp
and
movs
fistp
mov
into
xchg
daa
mov
mov
jp
pop
cmps
inc
(bad)
push
push
iret
pop
push
add
clc
les
fdiv
ins
icebp
aaa
jecxz
cmps
(bad)
in
push
call
mov
push
push
push
push
push
mov
sti
sub
in
pop
retf
and
add
add
pmaddwd
or
jae
js
lahf
dec
outs
es
push
push
and
leave
je
mov
push
jnp
js
jmp
ret
rol
and
and
rol
sti
xchg
xor
jecxz
cmps
ins
sbb
mov
push
aas
loop
dec
mov
pop
cmp
pusha
nop
movs
dec
(bad)
jecxz
je
mov
inc
add
cmp
mov
inc
mov
adc
outs
test
push
test
fs
imul
and
sti
(bad)
lods
sbb
cmp
cli
out
push
je
pop
js
fidiv
jae
js
mov
sub
push
cmp
add
cld
pop
jbe
mov
enter
mov
adc
sub
adc
adc
push
jns
je
or
pop
xchg
inc
dec
mov
push
cmp
sub
push
call
xchg
mov
mov
sbb
jl
(bad)
push
je
mov
pop
add
inc
add
push
or
out
lock
test
jge
cmc
std
(bad)
pop
outs
mov
mov
imul
pop
adc
adc
add
or
jns
or
mov
or
lds
out
push
aas
dec
mov
add
cmp
mov
(bad)
(bad)
inc
enter
xor
mov
cmp
jne
inc
inc
mov
jg
nop
cmp
jne
add
dec
jne
sbb
out
loop
push
xor
inc
jmp
sbb
imul
adc
or
and
cdq
mov
ins
shl
add
mov
inc
adc
pop
adc
dec
mov
or
jo
(bad)
rcl
inc
lock
xchg
and
push
push
jo
adc
test
add
push
call
std
or
popa
lods
les
inc
and
ror
jmp
dec
lock
in
push
dec
test
xchg
test
or
and
add
iret
stos
add
push
pushf
retf
je
cdq
push
inc
mov
adc
je
jg
adc
outs
dec
jbe
aas
out
and
test
xchg
(bad)
cli
imul
jg
or
(bad)
aas
fild
mov
call
mov
stos
inc
aas
fadd
rol
xor
pop
pop
jecxz
adc
lea
pop
jmp
xchg
clc
mov
pop
fwait
test
push
adc
loopne
dec
push
push
add
push
cmps
imul
jo
jo
add
or
cli
or
dec
push
pusha
push
push
mov
pop
xor
test
jns
mov
cs
and
(bad)
cmps
fsubr
jne
or
inc
inc
or
pusha
add
pop
or
cmp
push
arpl
rcr
mov
or
lea
jb
shl
repz
pop
test
xor
push
or
scas
xor
sbb
cmp
out
push
add
add
je
cmp
(bad)
adc
push
sub
je
jmp
add
adc
add
je
jmp
cmp
sub
jmp
cs
adc
jmp
sub
cmp
(bad)
(bad)
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
into
push
gs
out
or
fsubr
push
mov
jmp
mov
fcmove
push
pop
jno
retf
mov
push
or
push
imul
out
mov
or
dec
test
xor
lods
xchg
shl
push
nop
jecxz
adc
cmp
mov
or
inc
sbb
out
pop
ss
nop
mov
jno
push
pop
test
into
inc
(bad)
jns
mov
and
lock
adc
push
(bad)
dec
push
xchg
outs
xor
inc
sub
lock
or
pop
retf
sub
out
imul
shl
and
mov
sbb
cmp
mov
push
out
or
xchg
xchg
cmp
jne
push
bsf
icebp
push
out
mov
mov
dec
adc
add
not
test
jle
dec
mov
je
add
pop
test
push
fdivr
out
mov
adc
mov
aam
pop
ret
nop
out
rcl
fild
mov
lods
sub
sar
mov
mov
xchg
cmp
jle
int3
xor
inc
mov
mov
(bad)
ss
xlat
or
add
mov
lods
mov
into
clc
movs
mov
inc
cmp
xchg
mov
mov
clc
push
or
add
jl
(bad)
mov
inc
mov
inc
cs
aaa
cmps
pop
in
add
(bad)
rol
lods
and
outs
aas
(bad)
xor
push
sub
sbb
add
and
add
add
mov
pop
dec
je
neg
sbb
int3
leave
shr
adc
or
fs
dec
jne
pop
pop
xchg
jg
add
mov
dec
in
inc
pusha
jns
mov
ret
xchg
shl
je
aad
mov
int
mov
mov
sbb
add
sbb
add
mov
push
(bad)
shr
and
(bad)
dec
ins
fdiv
and
lea
xchg
push
or
int3
inc
cmp
inc
shl
das
js
mov
in
adc
ja
add
mov
mov
or
rep
ss
add
rol
test
add
nop
push
scas
pop
adc
arpl
sbb
push
mov
adc
mov
loope
sub
stos
push
push
ins
imul
xor
inc
nop
adc
inc
daa
imul
pop
ret
retf
jne
fcmovu
adc
cmp
in
add
mov
xor
cmp
sbb
add
jmp
xor
mov
add
dec
popf
call
js
jle
add
ins
ja
psrlq
mov
adc
shl
or
clc
out
jne
dec
add
cmp
neg
inc
or
sbb
sbb
dec
and
or
fisttp
scas
ja
and
mov
add
inc
adc
(bad)
int3
mov
push
adc
outs
add
inc
or
in
je
push
arpl
leave
dec
js
mov
call
shl
inc
jnp
fs
sbb
loopne
adc
cmp
dec
mov
cli
pop
das
bt
test
cwde
js
dec
xchg
inc
add
push
add
pop
add
mov
push
mov
ror
sbb
xor
pop
push
mov
add
in
sub
sub
adc
jmp
in
mov
push
jno
jg
enter
pop
je
pop
call
xor
pop
mov
sar
cmps
popa
lock
push
pop
mov
jmp
jge
(bad)
call
push
mov
repnz
adc
sbb
xor
ja
xor
and
mov
mov
fcom
js
mov
mov
mov
fstp
or
adc
je
nop
pop
xchg
cmp
shl
outs
add
push
jo
jecxz
sbb
dec
jp
mov
(bad)
and
and
fs
div
outs
or
push
fsubrp
jbe
inc
push
ja
and
push
push
sub
add
add
xchg
test
ss
or
xchg
cs
mov
mul
pusha
test
loopne
cmp
fild
fmul
xor
pop
mov
dec
jl
cmp
in
adc
dec
hlt
jmp
rol
sub
outs
data16
mov
arpl
add
dec
push
or
dec
jne
scas
pop
mov
mov
aaa
and
xchg
push
clc
inc
adc
fdivr
mov
pop
ja
clc
js
sbb
dec
cld
shr
rol
mov
call
xor
adc
xor
fmul
cwde
shl
in
es
dec
aam
or
mov
adc
je
not
scas
icebp
jle
in
retf
adc
clc
push
ror
xchg
pop
inc
push
dec
or
loope
fimul
(bad)
ret
xchg
daa
pop
lock
lock
and
push
sub
and
mov
fs
outs
lods
movzx
mov
or
push
dec
or
call
xchg
mov
test
data16
(bad)
mov
lea
cmp
push
mov
test
out
fmul
mov
sbb
mov
xchg
xor
mov
pop
loope
retf
lea
sbb
push
hlt
cmp
inc
call
mov
addr16
push
fmul
cmp
lock
mov
inc
xor
cwde
mov
rol
xchg
mov
add
out
clc
clc
lock
pop
cmp
add
ret
je
push
add
xor
out
outs
icebp
adc
push
aam
or
je
(bad)
ins
rcr
leave
aad
mov
push
dec
pop
mov
cli
sbb
pop
scas
dec
pop
aas
sbb
add
jmp
mov
pop
push
dec
cld
lods
pop
pop
jmp
cmps
dec
aas
mov
xchg
adc
push
lods
imul
or
sbb
and
call
shld
mov
repnz
gs
ret
xchg
aaa
push
lods
add
sbb
xchg
aas
cmp
add
xor
jb
or
add
cmp
add
mov
daa
stos
or
xor
cmp
or
out
imul
xor
ret
xor
retf
aaa
pop
adc
dec
inc
aaa
or
add
pop
mov
ja
xchg
or
test
test
mov
(bad)
and
inc
adc
mov
push
mov
inc
inc
sub
ja
add
push
call
mov
cmp
jne
dec
mov
mov
pop
add
aaa
push
add
mov
push
dec
adc
pop
and
je
neg
(bad)
sbb
push
cmp
jne
push
adc
add
adc
add
jg
outs
add
add
jmp
pop
cmp
cmp
jne
shr
shr
sbb
pop
or
into
shr
or
jns
mov
mov
dec
pop
cmp
into
add
loope
add
add
and
cmps
call
dec
dec
sub
dec
dec
sbb
add
in
jecxz
movzx
inc
xchg
jmp
sbb
retf
jbe
cmp
or
sbb
xor
dec
loop
push
cmp
push
je
pop
cld
jmp
sbb
ret
inc
inc
test
jl
cmp
jg
add
mov
inc
rep
jmp
pop
and
in
in
mov
or
dec
jo
mov
mov
nop
push
mov
push
xor
sub
ret
push
mov
dec
pop
movhps
pop
jbe
adc
mov
sub
mov
rcr
std
pusha
out
sub
jmp
cmp
or
out
pusha
pop
or
push
push
outs
mov
lods
or
add
lods
push
aaa
inc
test
push
push
icebp
loopne
pop
(bad)
repnz
xor
pop
add
pop
pop
pop
cmp
out
mov
sub
xor
sbb
rcr
outs
inc
mov
fstp
scas
or
xchg
push
cld
(bad)
push
xchg
jle
fidivr
cld
add
jo
push
je
mov
fisttp
clc
dec
xor
lea
xor
mov
mov
lods
int
inc
ins
mov
cmp
push
push
sub
in
jne
mov
call
push
lea
lea
neg
dec
cmp
or
xchg
add
cmp
je
mov
das
pop
popf
pop
and
shl
cmp
ret
cmp
pop
add
pop
push
clc
inc
add
aaa
add
mov
xchg
push
mov
inc
jmp
mov
outs
rol
cli
add
sbb
pop
dec
cmp
jge
sti
bound
rcl
sbb
adc
sub
cmp
and
xor
icebp
icebp
mov
mov
ficom
jo
call
mov
mov
cmc
add
daa
push
mov
int
dec
push
ucomiss
or
sub
loopne
jo
add
stos
pop
jl
loopne
push
cmp
jo
es
test
push
sub
jg
icebp
loope
scas
jmp
nop
cmp
sbb
test
xchg
cmp
xchg
scas
pop
add
loope
sbb
stc
mov
outs
dec
mov
inc
pusha
lea
sub
cmp
nop
jmp
cmp
loope
or
add
mov
inc
cpuid
xchg
mov
xchg
push
pop
mov
test
mov
pop
dec
loope
call
cmp
pop
cmp
and
scas
aas
mov
movs
lea
mov
xchg
and
pop
xor
xchg
cmp
pop
pop
daa
clc
inc
jmp
jmp
mov
add
(bad)
faddp
out
loope
mov
inc
rcl
imul
or
popa
pop
mov
imul
and
push
hlt
push
cld
pop
bound
stos
rcr
xchg
pop
add
inc
and
sbb
imul
push
cmps
or
pop
das
or
jmp
(bad)
loopne
addr16
in
dec
pop
push
xchg
leave
pop
xchg
jmp
aas
jle
push
dec
pop
rol
ror
gs
lock
and
(bad)
xchg
lock
pop
xchg
or
lock
sub
(bad)
adc
ror
cmp
pop
pop
add
mov
fldenv
lock
add
or
test
cs
mov
rcr
add
mov
mov
retf
and
xchg
mov
gs
xchg
and
scas
popf
and
movs
push
retf
inc
pop
pushf
aam
inc
lods
das
mov
ror
scas
xor
pusha
test
popa
cdq
loope
add
out
add
and
add
les
in
pop
adc
rcl
add
mov
sldt
inc
and
sub
ret
nop
push
je
pop
je
fs
cmp
sbb
add
jo
inc
push
jo
push
leave
pop
sub
imul
xor
jge
je
push
xor
pop
and
fist
cmp
sub
outs
push
mov
inc
pop
scas
hlt
addr16
add
gs
ss
xor
test
mov
lahf
out
outs
stos
pop
cmp
je
cmp
(bad)
jecxz
jnp
push
mov
pop
pop
dec
xchg
je
ror
push
cld
add
ror
pop
mov
dec
push
jmp
push
push
or
popa
pop
inc
jmp
mov
dec
clc
movs
mov
lods
inc
adc
mov
or
out
cmp
rcl
fmul
mov
es
dec
xchg
sbb
or
jbe
iret
mov
or
add
shr
add
jae
iret
jne
into
and
push
mov
cld
cli
push
mov
pop
push
out
aaa
dec
outs
dec
dec
loopne
arpl
(bad)
dec
pushf
sbb
repnz
jne
dec
pop
leave
add
nop
clc
mov
adc
push
nop
pusha
(bad)
or
dec
add
ret
and
lea
jmp
fist
and
leave
sbb
push
mov
cmp
jne
rol
retf
and
scas
mov
sahf
(bad)
cmp
outs
add
push
jno
xchg
xchg
xor
cwde
sub
mul
cli
les
inc
mov
push
std
mov
jl
cmp
jl
nop
jle
dec
mov
out
cwde
sub
sub
mov
cmps
sub
push
ins
add
push
lea
mov
mov
adc
xor
add
out
mov
ret
sbb
imul
push
add
mov
sub
jg
fadd
dec
cmp
repz
push
sete
icebp
add
sbb
jge
rol
ret
pop
js
push
add
ficomp
inc
xor
pusha
test
inc
pop
xor
movs
imul
sub
jo
int
and
addr16
xchg
pop
(bad)
dec
jl
push
jbe
add
inc
inc
mov
retf
jl
enter
fcomip
test
ret
push
(bad)
add
mov
fsub
neg
jns
add
outs
sub
imul
(bad)
in
pop
pop
inc
fstp
retf
(bad)
je
dec
inc
shl
or
mov
cmp
xchg
call
push
sbb
cmp
sar
jge
sub
add
add
sbb
test
ret
or
shl
aad
jns
popa
mov
pop
cld
push
in
mov
shl
addr16
inc
mov
add
add
jecxz
mov
unpcklps
popaw
sbb
ja
adc
jecxz
dec
or
mov
out
ja
dec
cld
je
or
jne
mov
jp
sbb
jne
push
lock
jle
sbb
jne
je
or
jl
jge
stos
test
rol
cmc
fcom
pop
pusha
sahf
sahf
shr
mov
mov
inc
daa
lock
xor
lods
not
push
ror
jbe
or
push
ja
sbb
dec
sti
fwait
pushf
lods
push
xor
lea
in
push
fimul
mov
sub
and
adc
xlat
ret
rcl
dec
js
enter
test
xchg
popa
and
or
add
add
mov
jle
test
cmp
pop
mov
jge
sbb
cmps
mov
push
push
arpl
popa
ss
mov
aas
xor
mov
xlat
out
cmp
inc
mov
inc
add
adc
xor
push
fwait
push
add
adc
pop
movs
jmp
cmp
mov
jle
repz
ret
or
xor
and
push
mov
push
lea
jl
push
sbb
pop
mov
cmps
das
fiadd
ret
out
sbb
add
pop
cmp
push
not
xchg
cmp
es
xchg
call
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
test
dec
xchg
ret
inc
loop
mov
(bad)
adc
or
push
dec
or
mov
out
jmp
push
mov
cld
or
cs
dec
cs
adc
cmp
pop
jmp
xchg
jmp
mov
sbb
push
ret
nop
or
shl
lahf
mov
xchg
out
pop
call
mov
cmp
add
pop
pop
pop
out
mov
out
inc
jb
shl
test
(bad)
push
in
adc
add
pop
xchg
sti
cmp
retf
leave
dec
scas
sub
imul
add
mov
ins
mov
outs
es
add
mov
jnp
jb
shr
test
lds
cmp
and
shl
mov
adc
xlat
lods
xlat
lahf
cmp
and
adc
out
jno
mov
add
cmp
hlt
or
cmp
mov
add
cmp
xchg
outs
mov
xor
mov
lahf
and
push
push
push
push
xor
in
sbb
lds
test
hlt
test
mov
push
push
add
(bad)
scas
adc
ror
pop
outs
cmp
ret
mov
push
fiadd
sub
mov
clc
xchg
cmc
aaa
stos
inc
add
mov
cmp
xchg
clc
sahf
mov
stc
sbb
or
push
imul
or
cmp
and
packssdw
es
fadd
sub
pop
or
adc
push
gs
mov
add
mov
jge
daa
inc
mov
movs
ins
lea
inc
and
in
push
btc
add
pop
dec
loop
inc
mov
(bad)
fsubrp
cmp
add
shl
mov
xchg
ret
mov
push
adc
and
adc
cs
jne
push
jl
or
sbb
lock
dec
ror
cmp
ins
and
mov
sbb
dec
pop
dec
add
ins
jl
mov
jo
adc
mov
bound
sub
mov
dec
jne
sub
imul
jnp
cmp
mov
adc
fmul
sar
cmp
sbb
ja
inc
add
add
inc
call
icebp
jecxz
mov
cmp
add
cmp
add
fcmovne
push
cmp
jmp
iret
push
iret
adc
xor
jae
popa
pop
sub
lea
sbb
xor
cmp
inc
mov
inc
rcr
ficom
sahf
loopne
out
inc
cmp
or
jne
xchg
sub
loope
adc
xor
cmp
and
sbb
mov
(bad)
xlat
inc
jle
xchg
sbb
push
jp
or
outs
jecxz
or
jmp
mov
mov
fidivr
xchg
xchg
call
mov
in
test
inc
fistp
jmp
xchg
mov
mov
cmp
hlt
call
adc
mov
ret
aas
mov
mov
pop
or
or
mul
jge
loope
mov
int
and
add
inc
adc
sbb
(bad)
rcr
inc
push
mov
xchg
adc
(bad)
mov
lock
sub
sbb
sar
(bad)
xor
xor
sub
sbb
jne
cmp
jp
add
jb
mov
xchg
add
retf
mov
xchg
pop
enter
shr
rcr
ror
fisttp
ins
ins
pop
cmp
shl
(bad)
push
mov
inc
jg
add
scas
clc
in
add
cli
sub
enter
aas
pushf
sbb
sbb
cwde
mov
push
add
push
sub
dec
sbb
leave
mov
jcxz
push
sub
(bad)
jg
call
rcl
rcl
cmp
jb
sbb
fidiv
sub
sbb
sbb
out
inc
loop
ret
div
xor
fwait
pop
pop
push
fstp
jg
or
(bad)
fadd
add
jns
neg
neg
sbb
int
or
mov
iret
or
ret
cmp
(bad)
not
lock
nop
(bad)
xor
das
(bad)
aad
jae
mov
out
les
pop
mov
shl
mov
ret
xchg
ret
das
cmp
call
or
ret
pop
addr16
inc
mov
ret
dec
push
inc
push
or
push
or
add
test
inc
or
dec
jmp
jl
(bad)
and
push
in
test
add
pop
sbb
jne
inc
xchg
icebp
xlat
hlt
xor
(bad)
lds
lahf
ror
neg
fiadd
push
pop
je
or
cmp
movs
or
cmp
sti
and
xchg
and
mov
add
jmp
mov
mov
shl
call
scas
push
jb
adc
jb
out
jmp
jg
mov
inc
stc
sub
loopne
inc
add
mov
out
dec
(bad)
jne
or
fld
sub
inc
and
(bad)
sub
jbe
add
test
in
dec
fs
mov
push
inc
xchg
mov
cld
push
clc
or
xor
add
test
ins
cmps
call
xor
and
push
mov
lock
jl
xchg
repnz
and
jl
mov
adc
int3
sub
jg
clc
adc
daa
mov
xor
jmp
xor
jl
je
pop
jmp
div
or
xchg
pusha
add
pushf
sar
and
dec
repz
or
std
arpl
mov
jmp
or
add
cmp
mov
add
call
loope
icebp
jmp
mov
addr16
inc
pusha
hlt
aaa
cli
and
push
ret
adc
add
imul
pop
inc
rcr
jo
(bad)
daa
movs
inc
je
popa
or
aad
xor
outs
adc
adc
stos
enter
into
xchg
and
and
push
shl
add
and
lock
ds
add
add
enter
nop
jecxz
inc
push
mov
pop
nop
add
iret
cdq
add
test
mov
int
cmp
and
addr16
cmps
adc
mov
nop
or
inc
in
sbb
sub
pop
mov
pop
mov
dec
mov
enter
cmp
xor
enter
or
sti
push
jl
movzx
push
clc
mov
add
add
xchg
jbe
js
jmp
sub
aas
sbb
repz
cs
or
sti
cmp
je
scas
sub
lods
cmp
jne
push
jo
add
call
mov
ret
scas
mov
ror
mov
adc
pop
ret
push
add
adc
ret
jmp
ja
sti
push
shl
dec
adc
out
xchg
xor
and
loopne
cmp
mov
shl
inc
or
jmp
sbb
inc
push
pushf
(bad)
push
or
sbb
ins
mov
sub
mov
sub
sbb
outs
push
inc
add
dec
or
out
shl
jae
es
or
enter
addr16
mov
mov
dec
hlt
mov
xor
ss
fst
es
jl
inc
xor
push
out
xchg
inc
dec
jne
lea
add
ja
adc
iret
inc
sub
add
add
add
mov
fcmovu
pop
add
push
jne
pushf
mov
js
push
scas
das
fisub
and
or
push
or
xor
pop
sub
(bad)
jge
fisttp
call
out
cmp
add
sar
cmp
cli
adc
fidivr
fidivr
adc
lock
lea
out
xor
mov
movs
sbb
imul
dec
adc
mov
and
mov
jmp
ins
pop
push
fwait
mov
sar
call
or
or
xor
inc
outs
jmp
add
cmp
ins
std
add
das
lock
jne
add
enter
adc
into
jo
push
xchg
cld
push
or
rcr
call
dec
xchg
ret
jp
jl
rcl
sbb
jnp
adc
dec
cwde
push
add
push
mov
pop
ins
jge
je
push
xchg
xchg
fistp
cmp
adc
jbe
iret
bound
fisubr
adc
push
and
xor
adc
add
or
daa
xchg
mov
push
add
ret
pop
mov
mov
loope
xor
cld
js
add
mov
jne
cmp
test
in
dec
mov
test
xchg
cmp
je
or
add
and
je
icebp
mov
push
sbb
lea
add
xchg
pop
fist
inc
jne
push
enter
inc
sbb
in
pop
and
push
sahf
jno
bound
sub
inc
cmps
rcl
(bad)
sbb
adc
out
push
inc
jge
scas
sub
xchg
ins
jb
xchg
pop
add
sahf
mul
jg
sub
lds
retf
jle
das
adc
pmuludq
jo
mov
leave
add
or
std
call
push
popf
cmp
je
jnp
xor
add
out
lods
pop
ret
dec
js
lds
(bad)
arpl
inc
mov
mov
cmps
sbb
mov
pop
and
cli
cwde
pusha
and
lock
rol
loopne
ds
inc
dec
jne
mov
(bad)
out
jne
(bad)
pop
movs
iret
int3
pop
pop
addr16
xlat
fwait
js
call
add
ins
pop
js
mov
sub
or
std
ds
mov
scas
inc
dec
jne
(bad)
jbe
add
shr
dec
dec
cmp
sbb
stos
push
fistp
into
out
cmp
dec
not
xor
adc
push
inc
icebp
cmp
adc
or
mov
scas
lock
scas
inc
adc
adc
or
fs
or
or
outs
or
or
clc
push
pop
pop
cld
(bad)
jne
push
inc
fsubr
(bad)
mov
push
or
fucomip
mov
pcmpgtw
inc
push
pop
je
popa
outs
ins
mov
outs
bound
add
repnz
fneni(8087
jg
push
sub
sub
mov
ins
or
dec
sub
outs
push
push
xchg
push
popa
ins
data16
mov
inc
pushf
popa
push
shl
dec
(bad)
jno
es
out
(bad)
cs
outs
pop
popa
sub
popa
sub
lock
dec
aaa
jae
outs
pop
outs
cmp
cmp
jb
inc
push
pop
das
sar
pusha
inc
inc
sub
sub
push
cmp
add
aaa
aaa
aaa
outs
outs
mov
sti
and
daa
jg
je
ins
sbb
js
and
ins
sub
jb
dec
inc
and
pop
div
cmps
div
push
inc
dec
pushf
mov
clc
jae
push
or
xchg
in
in
test
in
inc
pop
push
inc
arpl
aaa
popa
xchg
popa
aaa
enter
div
push
inc
bound
bound
sbb
ss
push
push
aaa
cmps
popf
fmul
outs
cmps
push
push
dec
dec
inc
aas
xor
das
pop
push
data16
out
mov
lock
xchg
add
pop
jp
mov
pop
loopne
xor
mov
push
cmp
sbb
test
push
push
gs
jl
out
dec
push
cwde
jne
xchg
jbe
adc
xchg
mov
inc
cmp
mov
loope
cwde
sbb
jle
jne
mov
mov
rcl
movzx
bound
add
sti
and
dec
or
ds
hlt
dec
scas
push
push
add
sub
les
pop
or
sub
clc
cmc
lds
loope
jl
jle
inc
(bad)
sub
jg
sbb
pop
in
jmp
xlat
and
arpl
cmp
and
lahf
(bad)
pop
and
xchg
cwde
and
(bad)
jnp
or
push
(bad)
sub
fs
mov
add
sub
cmp
mov
inc
push
push
add
mov
rcl
vcvttps2dq
in
dec
push
sbb
push
retf
mov
mov
fcomp
retf
test
hlt
lea
dec
jb
mov
cmps
lds
mov
xchg
cmp
mov
inc
cdq
sub
leave
dec
fcomp
mov
lea
cwde
pop
ret
or
cld
jmp
mov
and
sub
push
adc
push
inc
fnsave
mov
test
sub
fild
pop
clc
shr
cmp
fst
sar
or
and
cmp
adc
add
add
sub
mov
jmp
shl
les
cmp
jmp
add
pop
mov
je
test
push
push
lods
mov
ins
ficom
daa
movs
(bad)
pop
and
mov
mov
mov
push
pop
xchg
sbb
repnz
mov
sahf
inc
pushf
movs
inc
dec
cwde
and
paddusb
inc
mov
(bad)
mov
sub
call
or
pop
sub
dec
and
mov
and
sbb
nop
mov
cmp
jne
or
test
stos
rcr
cmc
(bad)
sub
call
or
add
mov
in
cmp
fisttp
rol
pop
inc
add
fdiv
pop
jecxz
and
inc
lock
or
jmp
cs
sbb
stos
sbb
sbb
shr
lock
pop
and
mov
mov
cdq
sbb
mov
inc
adc
adc
inc
cmp
in
ret
push
and
push
ffree
push
and
sbb
leave
or
mov
mov
aad
enter
mov
cmp
mov
add
mov
std
push
fadd
adc
push
shr
xchg
je
add
xor
fsub
or
mov
jno
pop
mov
and
mov
(bad)
rol
push
nop
inc
sbb
sub
dec
mov
mov
mov
in
mov
cmp
and
pop
xor
lock
aas
xchg
je
in
xchg
icebp
dec
dec
and
mov
and
dec
cmp
mov
das
cwde
mov
leave
stc
sub
inc
push
(bad)
add
pushf
xor
cmc
sub
jb
pop
jne
mov
aaa
je
in
or
sbb
stos
addr16
or
dec
cmp
(bad)
jl
and
test
fcomp
mov
rol
add
jle
lea
add
sar
retf
pop
(bad)
xlat
jmp
cmp
add
xchg
scas
jle
lock
fisttp
cmp
clzero
jg
jmp
mov
mov
sub
sar
jns
adc
rol
push
add
ror
je
rcr
mov
scas
xchg
dec
(bad)
mov
sar
outs
rol
add
inc
mov
lds
push
ret
(bad)
std
mov
sub
sar
dec
rol
inc
mov
lea
std
add
call
cmp
dec
outs
push
and
test
cmp
nop
sar
lods
fist
pop
jno
int
shl
mov
ror
cmps
add
idiv
test
mov
stos
mov
push
out
dec
lods
test
jmp
push
popa
adc
push
add
adc
fst
inc
loope
cmp
rcl
out
(bad)
and
sbb
xor
adc
test
add
cmp
sbb
jo
mov
pushf
add
inc
call
add
push
jg
cmp
sbb
ja
cmp
and
loopne
or
jo
mov
and
xor
adc
mov
popf
add
inc
pop
jg
add
aam
jo
xor
xchg
jg
add
clc
push
push
mov
das
xchg
enter
(bad)
dec
mov
add
push
push
cdq
push
stos
xor
or
xor
pop
push
jne
push
xor
cmp
(bad)
cmc
adc
mov
ja
popa
(bad)
hlt
mov
inc
add
bound
arpl
fs
idiv
outs
cs
add
ins
jae
add
mov
outs
arpl
gs
imul
outs
push
inc
and
push
outs
add
xor
add
jmp
imul
iret
pop
xchg
add
push
cmp
dec
cmps
inc
lea
test
adc
mov
push
lahf
je
mov
jne
je
loopne
cld
cmp
add
mov
icebp
mov
sub
push
adc
pop
xor
cmp
mov
push
hlt
mov
pop
sbb
add
bound
adc
xchg
ret
test
je
popf
sbb
and
add
inc
sub
push
push
jmp
adc
or
sub
xchg
dec
pushf
std
pop
loope
mov
jmp
inc
push
mov
mov
push
sbb
sub
call
lods
xor
cmp
(bad)
mov
stos
(bad)
mov
lods
add
mov
jle
leave
sbb
pusha
xchg
rcl
icebp
inc
fs
add
push
add
xor
ja
loopne
sub
push
xchg
movzx
mov
cmps
rcr
add
shl
add
(bad)
in
pop
adc
pop
in
pop
mov
xchg
push
add
xor
in
mov
inc
jno
das
push
add
mov
and
shr
push
mov
lahf
mov
addr16
test
dec
and
aam
sbb
add
push
out
adc
dec
loopne
and
lock
dec
in
push
mov
mov
aaa
in
enter
jecxz
sbb
add
or
cmc
xor
push
es
scas
mov
dec
call
push
push
ficom
or
dec
xchg
(bad)
ror
test
add
fisttp
xchg
sbb
enter
outs
out
inc
or
mov
dec
mov
in
inc
lar
adc
add
mov
sbb
imul
pop
and
loopne
ret
ja
in
jge
aas
cmps
les
add
adc
rcl
adc
scas
popa
mov
adc
cmp
mov
adc
jmp
fbstp
mov
inc
mov
(bad)
outs
dec
imul
test
sbb
inc
push
sub
cmp
inc
dec
addr16
mov
imul
xchg
and
push
cmp
ss
jns
clc
mov
xchg
(bad)
pop
mov
add
or
aaa
stos
xor
(bad)
shl
sbb
in
mov
jno
or
mov
jmp
mov
xchg
rol
(bad)
cwde
pop
pop
adc
or
lods
pop
jmp
inc
fist
sub
and
mov
mov
push
pusha
mov
or
push
inc
cmps
pop
adc
sahf
je
cmp
jo
scas
mov
mov
icebp
adc
jbe
push
push
mov
adc
add
or
pop
ret
sbb
mov
and
adc
push
xadd
mov
imul
sub
mov
call
ins
mov
sub
retf
adc
or
push
jne
jo
or
add
xchg
adc
pop
inc
sub
mov
push
or
jo
inc
pop
add
loop
lods
push
add
xchg
gs
inc
or
pop
call
shl
inc
xor
add
xchg
add
in
or
push
mov
in
popa
push
cwde
call
or
sbb
pop
out
popf
or
dec
xchg
loopne
add
movs
xchg
add
lods
scas
push
add
ds
into
adc
loope
fcmovne
(bad)
retf
pop
cmp
ja
xor
push
xor
dec
cmp
cld
and
jmp
mov
data16
pop
test
adc
mov
push
loop
cmp
mov
inc
(bad)
sub
fimul
push
sub
ret
scas
shl
cmp
and
shl
xor
push
inc
push
daa
jae
loopne
or
loop
push
cmp
jb
xor
sbb
sbb
das
push
and
or
test
loopne
add
push
add
pop
mov
or
test
sbb
adc
hlt
sbb
mov
xor
js
dec
mov
mov
cmps
add
mov
test
cld
(bad)
cmp
ss
adc
push
ret
fild
popf
(bad)
nop
adc
pop
adc
pop
push
pop
cmp
jmp
sahf
pop
or
repnz
xor
int3
sahf
nop
int3
hlt
es
pusha
bound
fsub
je
xor
xor
in
inc
sbb
mov
xchg
push
sub
add
enter
sbb
fmul
mov
add
clc
daa
clc
mov
cwde
into
and
inc
mov
lea
mov
mov
loopne
push
js
retf
pop
icebp
(bad)
push
or
and
cwde
xchg
out
popf
cmp
adc
ret
xor
les
and
sub
mov
xchg
hlt
push
add
dec
add
mov
and
mov
and
sbb
mov
or
mov
add
shl
out
mov
mov
and
int3
add
clc
inc
cmps
push
mov
sbb
test
xlat
std
inc
rol
cmp
daa
loopne
popa
jae
xlat
adc
jbe
push
mov
inc
mov
push
mov
mov
mov
push
call
and
out
xchg
adc
push
push
cmp
dec
mov
push
adc
das
es
aas
sbb
mov
out
ffreep
fcom
loop
sbb
adc
or
std
and
and
or
add
lods
js
add
add
mov
clc
adc
dec
inc
mov
or
dec
add
dec
call
dec
mov
inc
or
add
add
call
(bad)
add
push
mov
inc
add
inc
jmp
neg
sbb
(bad)
jne
mov
(bad)
test
mov
mov
dec
jmp
call
aam
or
popf
enter
retf
lods
popf
(bad)
mov
seta
inc
push
mov
push
ja
mov
pop
push
sbb
push
call
pop
int3
sub
out
dec
and
or
mov
mov
sbb
(bad)
xor
pop
lea
and
mov
lock
and
test
bound
or
mov
xchg
sub
ins
jle
(bad)
sub
out
add
rcl
or
arpl
fstp
dec
add
mov
mov
mov
rol
(bad)
inc
mov
add
(bad)
call
rcl
rol
pop
pop
or
lock
das
outs
mov
iret
unpcklps
dec
dec
adc
add
push
dec
dec
add
mov
mov
ret
call
push
push
call
aad
rcl
nop
jp
sbb
inc
jl
jmp
sbb
sti
mov
sub
or
mov
clc
fiadd
mov
and
adc
sub
cmp
arpl
(bad)
loopne
hlt
mov
dec
add
lock
mov
mov
aam
pop
int
mov
into
mov
mov
or
sahf
fld
ds
mov
lea
js
xor
bound
mov
int3
inc
dec
fst
retf
pusha
dec
je
idiv
push
add
pop
sar
sbb
cmp
or
enter
inc
rcr
movs
mov
dec
adc
sbb
dec
adc
fst
mov
sbb
dec
sbb
dec
jge
inc
test
call
int
sub
lods
mov
inc
xchg
ins
cmp
movs
inc
mov
lea
inc
or
push
push
out
add
add
fwait
ret
pop
add
aam
sub
adc
sbb
add
clc
add
push
clc
shl
add
test
mov
aas
mov
cs
pop
clc
pop
add
loop
adc
mov
cmps
add
mov
cli
cmp
or
shl
mov
mov
call
push
test
dec
push
add
jmp
jge
das
imul
pusha
add
add
cmp
adc
fstp
cmp
or
push
fstp
lock
push
(bad)
mov
lods
retf
jle
add
push
stos
loopne
sub
xor
xor
fadd
dec
lock
pusha
add
pop
adc
push
xor
rol
cmps
jge
test
add
pop
(bad)
scas
or
lods
adc
or
mov
add
cmp
adc
jb
push
or
jp
push
push
pusha
clc
mov
cmp
movs
or
pop
pop
mov
sahf
into
call
adc
mov
shl
or
retf
cmp
in
or
shl
and
std
jg
les
sbb
sbb
enter
loope
xor
sub
nop
nop
pmulhuw
mov
push
inc
or
push
clc
or
or
pop
or
lahf
pop
sbb
dec
push
pop
and
enter
push
or
cmp
test
xchg
fneni(8087
cmp
add
add
popf
cmp
or
sbb
pop
test
jl
dec
add
jns
jae
jnp
inc
or
scas
xor
imul
or
call
ror
inc
in
xchg
in
cmp
add
xchg
push
sbb
or
jb
mov
aaa
and
retf
aam
push
ja
int
(bad)
mov
mov
pop
clc
dec
es
dec
push
mov
or
or
push
les
add
ror
fisttp
mov
loopne
or
mov
fsubr
aaa
push
pop
push
call
cmps
sbb
mov
push
cmp
jne
(bad)
push
or
inc
or
or
mov
adc
cwde
push
ret
je
mov
ror
fwait
adc
loopne
push
push
xchg
iret
or
or
add
mov
push
clc
add
shr
push
jnp
test
gs
pop
pop
scas
ror
(bad)
ret
inc
cs
sub
dec
retf
mov
dec
xor
fcmovnb
(bad)
out
pop
inc
inc
dec
je
mov
cmp
je
movzx
add
pop
adc
pop
inc
rdpmc
rcl
xchg
jle
mov
mov
pop
mov
add
mov
mov
mov
sar
icebp
aad
int
mov
push
jl
xchg
jle
add
jne
cmp
or
mov
inc
(bad)
ud0
dec
mov
sbb
in
andps
mov
out
sar
(bad)
dec
(bad)
lds
mov
jae
out
das
adc
and
cmps
or
xchg
or
or
ror
jnp
sbb
or
add
stos
push
outs
adc
cwde
or
aaa
arpl
imul
push
xor
cmp
out
push
sbb
xchg
ss
push
pop
push
xor
arpl
mov
jns
push
loope
imul
fcomp
add
mov
xchg
pop
add
adc
add
xchg
fchs
outs
adc
adc
ss
and
xchg
mov
in
rcpps
inc
and
jne
je
addr16
int
jb
add
dec
add
add
adc
sbb
fld1
adc
loop
xchg
push
xor
dec
and
dec
pusha
popf
lahf
imul
xor
out
sub
das
adc
add
inc
sub
sbb
popa
mov
fisubr
push
adc
ins
out
cmp
int3
int3
push
or
ror
aad
sub
dec
add
adc
test
inc
in
ins
out
aad
out
popa
adc
inc
icebp
push
adc
lea
or
inc
jmp
pop
add
mov
pop
push
icebp
adc
cmc
sub
pop
jmp
cwde
dec
and
test
inc
pop
jmp
cmc
pop
jmp
das
mov
jmp
push
jg
leave
dec
ins
pop
sub
add
repz
sbb
jmp
pop
stos
dec
jmp
imul
inc
icebp
es
imul
in
jg
xchg
shl
sbb
gs
scas
outs
adc
push
push
popa
clc
jae
test
(bad)
sub
imul
mov
push
push
mov
adc
fcom
and
or
test
xchg
push
pop
shl
cmp
lods
pop
pop
mov
and
mov
add
inc
xor
xchg
push
inc
and
retf
cmp
push
je
or
add
pop
add
dec
(bad)
out
cmp
jae
and
or
mov
xor
add
dec
adc
mov
mov
or
xchg
int3
adc
xchg
dec
cmp
scas
rcl
ds
sbb
in
sbb
add
stos
movs
mov
or
pushf
xor
mov
fsubr
add
add
bound
and
fnstsw
dec
add
test
sbb
dec
jb
and
jecxz
bound
add
add
push
je
sbb
dec
lds
test
jl
pop
(bad)
adc
pop
mov
add
loopne
cmps
or
inc
mov
mov
add
mov
enter
popa
fcom
push
pop
xchg
adc
and
or
int3
in
icebp
sub
in
and
pop
add
and
in
popa
mov
jne
pop
xor
rol
in
repz
cmc
dec
pop
and
xlat
call
popa
fisub
adc
fadd
jo
adc
sub
stos
or
pop
imul
aas
push
outs
jae
jae
push
jae
inc
inc
dec
pop
or
mov
push
xor
adc
mov
mov
outs
test
xchg
dec
mov
loopne
rol
push
jecxz
jae
add
push
pop
movs
sbb
adc
push
or
data16
sti
mov
and
aas
dec
ja
mov
push
push
adc
jnp
fiadd
fiadd
sti
stc
adc
or
lds
ror
sbb
adc
add
mov
mov
mov
push
sbb
or
add
bnd
add
cmp
jae
popa
ror
xor
ja
mov
imul
jbe
or
outs
jne
or
mov
pop
les
inc
outs
outs
sub
push
xchg
push
dec
dec
inc
and
rcl
rcl
and
imul
and
(bad)
hlt
adc
push
jbe
adc
shufps
cli
dec
or
push
sub
retf
shl
add
ret
imul
push
adc
mov
pop
sti
inc
or
cmp
jl
cmp
jge
dec
loopne
int3
ins
mov
jp
icebp
int3
(bad)
push
rcl
pop
(bad)
xchg
iret
jmp
ret
mov
mov
push
sub
push
ds
inc
(bad)
inc
cmp
out
xor
fdivrp
out
mov
movs
add
je
dec
je
push
and
mov
cld
mov
jmp
clc
cmp
sub
adc
sub
or
popf
or
inc
add
inc
or
popa
push
cld
fisubr
lods
pop
scas
cmps
inc
push
pop
jmp
fild
and
fild
dec
or
pop
int3
xor
pop
aaa
sub
sti
test
jmp
cmp
add
ins
out
push
sbb
push
les
dec
leave
or
dec
out
outs
aam
neg
mov
fisttp
imul
sub
std
pop
aad
mov
and
add
das
fiadd
mov
push
iret
sar
sbb
add
mov
test
mov
aaa
xor
pop
sub
stos
imul
sar
push
rcl
mov
or
adc
lods
xchg
inc
(bad)
(bad)
out
sub
pop
mov
push
add
add
sbb
stos
aam
ja
fsubr
xchg
js
mov
add
sbb
neg
cmp
clc
adc
out
sbb
sub
mov
inc
sub
enter
adc
inc
adc
xor
pushf
test
xchg
ret
aaa
add
adc
add
xchg
stos
sub
push
loop
loop
movs
das
lods
call
add
lock
scas
pop
push
loopne
ds
xchg
xor
add
add
out
xor
inc
lock
or
add
cmp
inc
xor
sub
push
push
or
adc
adc
lock
cmps
stos
cmpps
sbb
sub
mov
movs
test
jle
test
jle
outs
jmp
dec
add
xor
inc
or
enter
jne
add
stos
and
dec
loop
push
(bad)
test
mov
dec
arpl
test
xor
imul
shr
sbb
outs
dec
xor
jl
fst
gs
jo
sub
inc
cmp
push
dec
(bad)
stc
fsubr
cmp
mov
add
shl
push
imul
push
adc
cmp
ja
int
mov
sub
adc
fs
jmp
out
push
fsub
cmps
or
mul
jae
mov
arpl
push
xchg
push
loopne
inc
push
dec
add
test
in
add
outs
outs
cmps
jae
je
(bad)
or
mov
in
arpl
add
or
outs
sbb
and
popa
pop
cmps
or
int3
or
push
xchg
xlat
out
push
les
add
mov
jb
data16
aaa
add
adc
mov
inc
scas
fld
fs
mov
iret
adc
mov
jne
ins
adc
jno
inc
or
push
cwde
dec
(bad)
xor
mov
mov
outs
(bad)
outs
fnsave
push
dec
imul
adc
or
test
scas
sbb
cs
lahf
cmp
adc
sub
es
sbb
xchg
add
nop
stc
jg
imul
mov
and
dec
jae
ins
sub
adc
imul
or
mov
loopne
dec
outs
jne
mov
je
or
outs
(bad)
sbb
jecxz
aas
or
xchg
fs
loopne
call
ja
ficom
inc
aam
jbe
adc
cmp
or
dec
adc
add
push
movs
adc
or
jle
pop
pusha
ret
and
sbb
mov
sahf
jmp
add
(bad)
cmp
mov
mov
adc
inc
int
add
ds
addr16
frstor
shl
or
push
popa
mov
push
outs
out
arpl
add
fbld
sti
addr16
mov
test
sbb
jbe
xor
and
mov
pop
xchg
mov
jbe
pop
push
(bad)
je
das
cld
mov
jo
push
imul
jnp
or
aaa
mov
(bad)
pop
dec
fdiv
sbb
jnp
lods
jnp
imul
nop
mov
add
test
push
fist
pop
daa
fcmovu
add
push
lahf
cwde
mov
sub
mov
ss
ins
inc
jnp
jb
dec
inc
adc
or
push
(bad)
sub
adc
outs
es
ficom
mov
adc
adc
xchg
cmps
scas
je
aam
push
movs
imul
mov
daa
or
int3
int
jge
add
mov
test
or
mov
das
push
ins
outs
jb
dec
or
shr
ds
jo
cmp
fwait
inc
mov
pop
jae
xor
gs
std
add
push
or
dec
dec
inc
mov
jg
mov
pop
dec
inc
push
inc
inc
pop
dec
dec
push
inc
or
cmp
push
add
sbb
xor
cld
inc
in
xor
add
mul
or
and
and
add
data16
add
jl
(bad)
ins
inc
inc
sub
nop
std
out
lods
in
fwait
retf
dec
push
push
pop
inc
in
push
pop
pshufw
jns
std
inc
pop
add
pop
pop
mov
dec
fdiv
or
dec
inc
jb
out
das
mov
clc
dec
jnp
dec
mov
bound
sbb
mov
out
sbb
push
sbb
pop
inc
push
es
inc
inc
adc
clc
sbb
inc
inc
inc
pop
inc
inc
inc
push
inc
and
sub
add
cmps
or
xor
mov
inc
test
inc
add
std
mov
pop
xor
jne
or
push
stos
add
std
and
loope
push
push
inc
xchg
shr
aaa
sub
or
fdiv
(bad)
popa
sub
popa
jb
movs
rcr
push
inc
inc
pop
hlt
jecxz
add
popa
or
fldcw
add
pusha
shl
push
into
lock
add
mov
add
inc
mov
jo
sbb
adc
adc
cdq
aas
xor
lea
mov
(bad)
dec
push
dec
inc
out
push
and
int3
das
add
mov
xor
das
pop
dec
inc
inc
mov
dec
add
cld
das
push
dec
inc
inc
inc
inc
dec
popa
ja
xchg
and
inc
push
xor
fimul
push
push
dec
pop
inc
das
add
inc
push
pop
daa
push
inc
xchg
push
data16
and
jo
(bad)
xor
ror
push
das
stos
adc
push
xor
push
add
dec
add
mov
bound
push
in
and
fld
and
sub
dec
push
pop
pop
jl
push
xchg
shl
xor
or
adc
cmp
sub
inc
or
xor
mov
hlt
adc
or
outs
popf
sub
and
xchg
xor
mov
sbb
add
adc
iret
xor
ret
sub
loopne
adc
cwde
out
or
dec
out
dec
jmp
pop
xchg
sub
clc
(bad)
sbb
lock
nop
out
sub
xor
xor
xchg
dec
jmp
dec
stos
adc
add
and
jg
ja
rcl
push
gs
mov
sbb
or
jns
push
gs
sbb
add
mov
or
xchg
or
nop
hlt
jne
cwde
mov
jbe
and
push
loopne
sar
dec
ins
xchg
jae
jae
ss
mov
pop
imul
lods
inc
sbb
ds
lods
push
add
pop
mov
inc
imul
les
sahf
popa
jb
aas
call
inc
sub
jg
push
fidiv
enter
mov
scas
(bad)
cwde
das
(bad)
scas
retf
test
pop
rol
adc
mov
xor
xchg
adc
mov
inc
push
push
add
push
or
pushf
inc
or
mov
mov
mov
aam
xor
xor
xchg
shl
je
jae
aaa
jo
xchg
cmp
fadd
outs
xlat
je
pop
xor
xor
test
push
call
pop
enter
xor
add
stos
sub
arpl
inc
add
add
arpl
xchg
scas
nop
jbe
cmp
add
mov
sbb
aad
shl
sub
xchg
or
add
dec
gs
or
cmps
int3
sbb
push
ins
cli
daa
adc
or
lahf
xor
ins
mov
lds
sub
sbb
add
push
push
inc
inc
jno
mov
dec
mov
bound
and
push
jecxz
inc
cwde
outs
daa
icebp
es
pusha
not
and
or
rcr
mov
adc
shl
mov
inc
hlt
inc
push
sub
or
fidivr
push
cdq
xchg
sbb
imul
sub
sub
movs
mov
je
ret
pop
retf
mov
push
sbb
fs
enter
sub
cvttps2pi
lods
mov
adc
jecxz
sbb
mov
ins
jb
jae
fs
out
mov
push
sub
jb
push
push
or
repnz
pusha
ret
push
push
ret
push
loopne
push
mov
or
xor
test
and
and
sub
call
or
or
bound
fadd
and
and
das
aaa
mov
dec
mov
and
add
inc
dec
inc
ja
(bad)
add
add
add
jae
ins
add
jbe
push
lahf
in
pop
imul
inc
popa
and
in
loop
mov
ret
sbb
cmp
lock
ins
enter
dec
or
and
jae
push
dec
push
inc
sbb
mov
sub
sub
outs
fs
lods
and
pop
ins
mov
and
push
push
(bad)
test
ins
and
rol
hlt
adc
idiv
adc
cld
jo
int3
push
add
cmp
add
popf
adc
or
push
mov
mov
jns
dec
and
or
repnz
fist
push
outs
arpl
(bad)
cmp
outs
je
unpcklps
lea
repnz
loopne
jbe
arpl
ins
add
or
jecxz
xor
(bad)
push
xchg
cli
cmps
sbb
inc
outs
js
push
ds
xchg
pusha
push
imul
cdq
adc
or
pop
fs
or
xchg
add
les
inc
pop
inc
icebp
sub
mov
push
push
push
push
in
sub
test
and
ja
push
pop
mov
inc
in
out
ja
popa
pop
aaa
jbe
lds
adc
(bad)
outs
arpl
ins
or
xchg
xchg
xchg
sub
add
add
add
outs
jl
inc
dec
dec
js
push
nop
(bad)
pop
fs
data16
xor
or
jg
xchg
and
push
pop
cli
inc
xchg
fs
cmps
add
pop
cmovl
xchg
xchg
xchg
xchg
inc
cmp
xor
xchg
xchg
xchg
xor
and
xchg
xchg
xchg
and
adc
xchg
xchg
xchg
adc
add
adc
xchg
add
add
call
daa
loopne
fcom
jb
daa
daa
ror
enter
jb
sar
or
xor
pop
push
bound
or
cld
dec
adc
in
outs
jecxz
cmp
ss
bound
sub
or
and
jo
or
mov
mov
mov
call
cli
lods
(bad)
sbb
mov
dec
test
movs
mov
pushf
cwde
(bad)
loopne
enter
xchg
aas
(bad)
daa
pop
mov
js
daa
cmp
daa
daa
daa
jo
push
daa
pusha
pop
pop
push
daa
daa
daa
daa
push
dec
dec
inc
daa
daa
daa
daa
inc
cmp
xor
daa
daa
daa
xor
and
daa
daa
daa
and
adc
daa
daa
daa
adc
add
mov
adc
add
in
add
or
enter
xchg
(bad)
sar
mov
movs
inc
mov
pusha
call
fcmovne
in
pop
dec
cwde
outs
daa
daa
daa
mov
seto
daa
cmp
daa
daa
daa
jo
push
daa
pusha
pop
pop
push
daa
daa
daa
daa
push
dec
dec
inc
daa
daa
daa
daa
inc
cmp
xor
daa
daa
daa
xor
and
daa
daa
daa
and
adc
daa
daa
daa
adc
add
mov
daa
add
jg
jg
in
in
jg
jg
in
in
jg
jg
in
in
jg
jg
cmp
mov
mov
out
rcr
sub
dec
test
xchg
xchg
xchg
xchg
movs
mov
xchg
xchg
xchg
nop
mov
test
xchg
xchg
je
ins
push
fs
pop
pop
xchg
xchg
xchg
xchg
push
push
dec
dec
xchg
xchg
xchg
xchg
inc
inc
cmp
xchg
xchg
xchg
xchg
xor
sub
xchg
xchg
xchg
xchg
and
sbb
xchg
add
xchg
int3
int3
pop
dec
outs
mov
dec
or
add
push
pop
push
cld
jle
jle
in
in
jle
jle
in
in
jle
jle
in
in
jle
setae
mov
xchg
mov
lods
test
xchg
xchg
xchg
movs
mov
in
jbe
seto
test
dec
dec
je
ins
push
fs
pop
pop
dec
dec
dec
dec
push
push
dec
dec
dec
dec
dec
dec
inc
inc
cmp
dec
dec
dec
dec
xor
sub
dec
dec
dec
dec
and
sbb
dec
dec
dec
dec
adc
or
sbb
add
jge
leave
leave
leave
leave
jge
jge
leave
leave
leave
leave
jge
jge
leave
leave
leave
leave
jge
jge
leave
leave
leave
leave
jge
jge
leave
leave
leave
leave
jge
jge
daa
mov
leave
jge
setl
xchg
nop
mov
mov
pushf
add
clc
push
test
(bad)
js
leave
leave
leave
test
push
fs
pop
push
pushf
pushf
pushf
pushf
pop
push
dec
dec
pushf
pushf
pushf
pushf
inc
inc
cmp
pushf
pushf
pushf
pushf
xor
sub
pushf
pushf
pushf
pushf
and
sbb
pushf
pushf
pushf
pushf
adc
or
cmp
cld
jl
in
ss
pop
hlt
(bad)
in
in
in
call
in
in
aam
int3
mov
enter
enter
cmp
dec
les
rcr
xchg
xchg
fstp
xchg
xchg
xchg
lods
test
mov
pushf
cwde
xchg
nop
xchg
xchg
xchg
xchg
mov
xchg
xchg
jl
je
xchg
xchg
xchg
xchg
ins
push
nop
xchg
pop
pop
push
push
dec
dec
dec
dec
dec
dec
inc
inc
and
cmp
aas
retf
in
inc
mov
dec
retf
xor
jnp
std
mov
test
adc
mul
ror
pop
ret
push
sub
xlat
adc
push
jb
and
int
sub
repz
adc
sbb
and
cld
add
pop
outs
xchg
add
push
pop
ret
cdq
pop
adc
pop
ret
cmps
xchg
lock
aaa
mov
push
sbb
or
jno
jge
add
ret
pop
pop
pop
popa
in
ret
dec
add
sbb
pop
cli
push
pusha
dec
pop
sub
rcr
inc
gs
push
push
das
mov
fsub
push
inc
lods
cmp
cmp
sbb
or
xchg
(bad)
movs
adc
ret
(bad)
cmps
call
neg
and
push
add
inc
idiv
inc
outs
add
jae
pop
pop
xor
pop
fmul
fidiv
inc
aas
dec
add
push
push
add
sti
mov
push
add
push
or
fsubrp
pop
inc
(bad)
pop
push
dec
add
push
push
xchg
xchg
xchg
scas
mov
sbb
jb
pop
(bad)
les
nop
inc
push
jbe
das
sar
(bad)
in
cmps
call
std
push
xchg
sahf
mov
sbb
loopne
rcl
mov
fldenv
(bad)
xor
jl
mov
das
xlat
fadd
sbb
jo
jmp
mov
mov
leave
imul
cmps
push
sbb
inc
psllw
leave
leave
leave
leave
repz
cmc
test
leave
leave
idiv
stc
cli
leave
leave
leave
leave
sti
cld
std
dec
leave
leave
leave
jmp
loope
leave
leave
leave
leave
jecxz
in
leave
leave
leave
leave
out
jmp
leave
jmp
in
out
leave
leave
leave
leave
out
rcl
ror
leave
leave
leave
rcl
aad
leave
leave
leave
leave
xlat
fcomp
fcmove
leave
leave
leave
fcmovnu
fstp
leave
leave
leave
leave
ffreep
rol
leave
leave
leave
ret
(bad)
(bad)
leave
leave
leave
(bad)
enter
leave
leave
leave
retf
int3
int
leave
leave
leave
leave
iret
mov
mov
leave
leave
leave
mov
mov
leave
leave
leave
leave
mov
mov
leave
mov
leave
leave
leave
mov
leave
leave
leave
mov
leave
leave
leave
cmps
test
stos
leave
leave
leave
leave
stos
lods
lods
scas
leave
leave
leave
leave
scas
nop
xchg
xchg
leave
leave
leave
leave
xchg
xchg
xchg
xchg
leave
leave
leave
leave
xchg
cwde
cdq
call
popf
sahf
leave
leave
leave
leave
lahf
add
add
xchg
leave
leave
mov
leave
(bad)
jo
jb
leave
leave
leave
jae
jne
leave
leave
leave
leave
ja
jns
leave
leave
leave
leave
jnp
jge
leave
leave
leave
leave
jg
popa
(bad)
leave
leave
leave
leave
arpl
leave
leave
leave
leave
addr16
leave
leave
imul
leave
leave
leave
outs
push
push
push
leave
leave
leave
leave
push
push
push
push
leave
leave
leave
leave
push
pop
pop
pop
leave
leave
leave
leave
pop
pop
pop
pop
leave
leave
leave
leave
pop
inc
inc
inc
leave
leave
leave
leave
inc
inc
inc
inc
leave
leave
leave
leave
inc
dec
dec
dec
leave
leave
leave
leave
dec
dec
dec
dec
leave
leave
leave
leave
dec
xor
xor
leave
leave
leave
xor
leave
aaa
cmp
cmp
leave
leave
leave
cmp
leave
aas
and
and
leave
leave
leave
and
leave
daa
sub
sub
leave
leave
leave
sub
leave
das
adc
adc
leave
leave
leave
adc
leave
pop
sbb
sbb
leave
leave
leave
sbb
leave
pop
add
ret
into
(bad)
call
sbb
test
movs
cmp
add
add
or
(bad)
(bad)
(bad)
dec
adc
adc
adc
sbb
sbb
push
pop
and
and
and
es
sub
sub
mov
sub
sub
cs
xor
adc
xor
cmp
mov
adc
cmp
or
cmp
inc
inc
test
outs
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
or
les
adc
add
or
pop
pop
pop
aas
or
or
pop
pop
pop
mov
scas
pop
and
sub
pusha
push
add
and
push
inc
push
lock
add
adc
add
arpl
inc
xchg
inc
test
adc
clc
es
xor
in
nop
scas
cmps
rcr
inc
xor
nop
cmc
(bad)
popf
and
mov
add
(bad)
in
sti
xor
and
mov
inc
add
push
add
mov
int
pusha
adc
add
add
mov
add
jle
add
add
add
sti
mov
jle
xor
xor
add
(bad)
add
jo
add
outs
mov
fbstp
cli
rol
loopne
lock
add
add
push
xor
out
jg
inc
push
add
loopne
jo
add
add
fdivr
xor
(bad)
fistp
add
or
add
add
add
add
add
mov
push
add
add
add
add
add
add
add
add
sub
add
add
out
add
add
retf
jo
add
neg
(bad)
cs
add
add
adc
and
xor
iret
push
mov
push
pusha
push
pop
jo
add
push
mov
cld
in
mov
rcr
loopne
lock
mov
xor
inc
pop
cld
cmp
pop
pusha
pop
jo
push
add
pop
mov
fist
mov
mov
add
(bad)
fnstsw
and
xor
inc
or
push
or
jo
or
(bad)
lock
or
or
or
mov
jg
aas
jnp
or
or
or
or
or
push
or
and
imul
or
or
add
nop
or
out
nop
or
pop
xor
adc
xlat
sahf
adc
lock
add
adc
ret
lds
sti
mov
and
or
push
or
mov
cmp
push
mov
or
push
or
idiv
lock
or
daa
adc
or
add
out
sbb
or
jo
in
add
push
out
jbe
fsubr
or
add
ror
mov
lock
cmps
or
adc
or
pop
jnp
xchg
inc
or
or
mov
imul
or
or
mov
in
mov
shl
out
loopne
pop
add
or
out
hlt
fiadd
or
adc
add
sbb
or
or
outs
(bad)
std
pusha
or
nop
or
or
lock
loopne
and
xor
inc
push
push
push
pusha
push
jo
or
sub
call
push
ror
push
loopne
lock
jp
add
add
wrmsr
cmovo
out
push
punpcklbw
jo
mov
pop
in
or
add
out
loope
not
imul
ror
das
add
push
lock
ret
pop
adc
fsubr
add
inc
cmovge
out
pop
sbb
and
or
fdivrp
pusha
adc
adc
mov
adc
rcl
syscall
mov
je
mov
add
ret
mov
adc
add
push
adc
dec
and
outs
add
repz
fdiv
neg
aaa
push
adc
jnp
jae
xor
add
add
shl
(bad)
and
mov
sub
xchg
add
adc
cmps
(bad)
fnstsw
call
and
xor
fisttp
adc
inc
div
push
adc
or
dec
inc
cmp
btc
pop
adc
add
add
jo
or
aaa
test
xor
inc
or
and
sub
ret
fmul
sub
xor
call
movhlps
cs
hlt
jg
add
lahf
adc
adc
adc
add
xor
cmp
adc
add
out
sbb
adc
push
or
out
xlat
stos
sub
sub
es
ror
cli
inc
pop
fnstsw
adc
adc
adc
adc
adc
adc
adc
fdivr
xchg
adc
pusha
adc
add
das
add
out
add
fist
mov
mov
mov
add
pop
mov
scas
in
retf
push
add
pop
or
rol
lock
adc
pusha
fsubr
pop
cmp
fisubr
imul
xlat
jnp
adc
test
cmp
push
adc
adc
div
adc
in
ss
cld
sti
add
adc
mov
add
das
add
out
scas
ss
push
daa
jmp
popa
cli
push
inc
push
lock
mov
scas
jno
mov
add
add
xor
mov
inc
aas
add
retf
dec
or
mov
add
push
or
ss
aas
fiadd
add
jp
adc
pop
es
xor
dec
in
cmp
mov
pusha
aas
nop
sub
push
add
or
ret
mov
or
and
sub
mov
fadd
mov
sub
in
add
add
inc
adc
pop
mov
aam
in
or
pop
jg
pop
mov
mov
pop
div
push
mov
add
adc
and
xor
inc
sbb
and
xor
mov
sbb
sbb
sbb
push
addr16
xor
addr16
sbb
sbb
or
add
lock
add
hlt
sbb
sbb
pop
cmp
ficom
sbb
cld
ss
xor
add
cmp
inc
lock
adc
inc
pop
adc
pusha
sbb
sbb
sbb
dec
adc
sbb
sbb
mov
adc
add
xlat
mov
and
add
jnp
in
rcl
mov
aas
rol
cmp
add
lock
fidivr
mov
sbb
adc
or
add
sbb
or
add
and
push
adc
push
sbb
sbb
pop
add
sbb
sbb
sbb
pcmpgtd
adc
ins
fdiv
lods
adc
mov
adc
add
or
aaa
cdq
add
sbb
pop
fiadd
adc
jmp
pop
add
or
or
adc
(bad)
push
add
pop
jbe
jbe
or
add
pop
fadd
push
sbb
xor
out
push
out
rcr
ja
add
ficom
scas
add
add
bound
mov
fldenv
cmp
fiadd
addr16
or
or
xlat
aaa
sbb
or
imul
add
stc
sbb
adc
cdq
push
or
(bad)
mov
adc
add
adc
adc
in
rcl
sbb
(bad)
and
jg
add
mov
pop
add
adc
sbb
push
shl
xor
jbe
jg
cld
pop
adc
dec
cmp
jns
pop
(bad)
adc
in
add
add
jno
mov
xlat
fcomp
xchg
push
aas
sub
ror
mov
add
call
xor
add
mov
or
pop
jne
pop
xlat
or
sub
push
add
add
pop
pop
movs
pop
fisttp
call
fwait
xchg
mov
pop
or
push
add
or
lmsw
push
mov
sbb
sar
add
xor
mov
mov
cmp
push
cmps
pop
or
pop
rol
(bad)
jle
xor
add
push
add
pop
lds
sbb
add
sbb
ror
dec
mov
pop
fbstp
pop
add
add
aas
(bad)
pop
or
popf
lds
(bad)
add
jae
sbb
pop
or
(bad)
sbb
mov
mov
mov
pop
outs
punpckhwd
test
lahf
pop
lahf
pop
or
cmp
and
lahf
mov
sbb
push
jnp
sbb
or
add
jne
or
ins
pop
ins
cmp
add
add
or
or
sbb
sub
mov
mov
dec
cmp
and
pop
mov
xchg
aas
add
add
mov
cmp
fisttp
in
pop
(bad)
sub
push
adc
or
std
adc
mov
add
sbb
(bad)
add
sbb
sbb
lahf
pop
or
sar
pop
pop
jg
push
movs
cmp
pop
or
pop
pop
sbb
add
ror
xchg
fisttp
add
lahf
pop
or
push
pusha
cmps
and
adc
mov
arpl
xor
stc
invlpg
(bad)
xchg
add
add
call
adc
add
xchg
jl
add
push
in
daa
movs
add
pop
or
or
adc
inc
lahf
pop
xor
shl
popa
js
ror
xchg
(bad)
mov
mov
test
sbb
mov
test
adc
mov
test
mov
ror
and
mov
icebp
push
(bad)
sbb
sub
and
or
sti
adc
fistp
add
inc
pusha
aaa
adc
outs
les
or
pop
ins
test
inc
mov
lods
sbb
cmp
pop
or
add
or
adc
fld
mov
dec
adc
mov
mov
mov
imul
add
aad
add
bound
in
pop
and
aas
or
cwde
sbb
mov
lahf
or
add
test
pop
push
in
sar
sbb
xchg
push
adc
cmp
sbb
sub
fisttp
adc
or
push
adc
adc
and
xor
add
push
jl
jp
cmps
sbb
outs
push
mov
push
cmp
pop
pop
add
into
mov
jg
or
push
and
sub
add
sbb
or
add
call
pop
test
jecxz
dec
add
dec
jb
(bad)
sbb
and
push
add
or
out
in
pop
pop
stos
or
outs
pop
ficomp
sbb
add
aaa
sub
movs
pop
add
(bad)
xchg
jo
xchg
sbb
sbb
push
add
les
pop
fiadd
dec
in
(bad)
btc
add
or
ror
arpl
inc
add
adc
push
adc
ins
sbb
into
push
(bad)
inc
movs
imul
push
aas
sbb
fadd
out
and
sbb
gs
imul
mov
mov
pop
in
adc
adc
mov
daa
add
mov
push
pop
and
push
push
xor
or
popa
adc
adc
mov
(bad)
fldcw
lods
xlat
or
sub
sbb
push
aam
and
adc
stos
cdq
shl
std
adc
cmp
push
push
pop
mov
pop
sbb
ret
mov
add
xlat
jne
or
mov
loope
jns
push
or
xchg
push
mov
int
push
mov
les
or
cmp
or
fnstcw
dec
and
dec
mov
or
rcr
mov
xor
es
dec
repz
or
jae
bound
xor
mov
lea
and
adc
pushf
push
push
add
iret
mov
mov
adc
xchg
(bad)
addr16
loop
xchg
pop
ins
cmc
push
fild
push
pop
jge
or
cs
add
fisub
add
and
stos
push
sbb
mov
or
add
push
popa
aam
sbb
push
adc
or
adc
mov
fwait
push
aad
xor
sbb
bound
pop
adc
mov
pop
out
les
and
push
adc
pop
mov
push
push
ret
punpcklbw
lods
mov
sbb
sbb
push
and
sbb
adc
mov
mov
jo
cwde
icebp
sbb
add
lahf
push
and
adc
aaa
push
mov
mov
jo
add
mov
xlat
je
imul
jecxz
pop
clc
shl
push
and
jno
arpl
sbb
unpckhps
adc
lea
pop
or
pop
add
pop
push
daa
sgdtd
sbb
(bad)
mov
mov
and
xor
sti
mov
mov
std
add
sbb
fwait
addr16
neg
shl
(bad)
ins
sbb
cmp
imul
adc
push
add
inc
inc
pop
inc
push
fadd
sbb
sbb
adc
jbe
nop
add
or
es
push
sbb
jge
pop
sub
sbb
pop
sbb
sbb
fidiv
sbb
sub
adc
aas
add
add
add
neg
jge
add
or
add
sti
push
inc
adc
adc
push
push
add
shr
push
sub
add
add
mov
inc
imul
and
adc
or
or
pop
sub
jecxz
mov
push
sub
stos
test
add
das
adc
adc
and
mov
sbb
adc
xor
mov
aas
pop
mov
push
pop
xchg
mov
loopne
mov
and
daa
pusha
mov
mov
inc
jnp
add
aas
adc
adc
mov
add
ins
lds
mov
dec
or
aam
ins
bnd
add
mov
bound
push
add
xchg
xor
add
adc
cmps
std
mov
push
jp
loopne
pop
lock
add
out
inc
in
inc
fiadd
cmp
ja
adc
inc
or
push
add
stos
sbb
inc
jg
xor
inc
add
or
inc
cwde
fiadd
dec
mov
mov
rol
outs
push
in
or
pop
loopne
add
lock
lds
add
add
add
(bad)
aas
adc
inc
stos
scas
fwait
pop
loope
jbe
jle
add
add
add
fst
shl
inc
mov
(bad)
daa
mov
mov
mov
movups
daa
daa
daa
sbb
and
or
pop
dec
fdivr
das
shr
psubb
in
mov
ror
add
push
xor
add
fldln2
and
pop
cmovo
pop
jg
stos
pop
adc
jmp
push
push
lock
(bad)
in
ss
pop
clc
(bad)
das
xchg
xchg
xchg
fisttp
adc
sbb
mov
mov
(bad)
jg
ss
pop
xor
ds
in
inc
dec
dec
adc
mov
in
push
lahf
mov
lahf
fild
xor
adc
add
ins
or
(bad)
aas
fild
push
ins
(bad)
(bad)
aas
(bad)
(bad)
call
adc
cdq
sbb
ret
sar
aas
lds
aas
call
mov
out
push
push
aad
pop
push
dec
out
outs
fbstp
psubusw
xor
jecxz
jmp
push
and
lds
mov
stos
jmp
pmulhuw
aas
movd
mov
movaps
mov
push
pop
sbb
push
push
push
clc
push
push
loop
jecxz
leave
ins
sub
jmp
cvttps2pi
stos
leave
leave
xor
adc
sub
xor
aas
aam
sub
sub
sldt
mov
stos
and
add
pop
aam
cmovbe
inc
or
ud1
xchg
getsec
cmp
cmp
cmp
cmp
in
and
cmp
mov
sldt
inc
fcmovne
in
and
pop
cs
inc
inc
pushf
fcomp
inc
inc
inc
inc
sub
das
mov
adc
hlt
aam
iret
jb
add
lea
adc
jg
into
dec
push
fild
imul
outs
addr16
rol
adc
into
mov
das
lahf
pshufw
scas
dec
jo
addps
aas
mov
(bad)
mov
(bad)
pop
jecxz
jae
mov
in
pop
pop
icebp
aas
repz
cmc
or
add
xchg
mov
call
ss
jg
mov
and
mov
mov
sub
sub
or
lahf
push
test
ud0
xchg
and
ds
mulps
inc
jg
inc
xor
aas
scas
loopne
mov
inc
push
pop
adc
and
pop
add
or
outs
adc
push
mov
mov
add
pop
pop
or
and
jg
sub
jno
and
adc
(bad)
and
mov
inc
shl
sbb
xchg
sbb
and
rcr
jg
call
sbb
or
pop
test
aas
fist
sbb
push
lahf
mov
jg
jb
sbb
and
inc
shr
aas
movq
push
aas
iret
adc
pop
inc
fadd
pusha
dec
aas
jg
sub
(bad)
adc
push
call
adc
mov
pop
add
add
adc
dec
ror
pop
imul
mov
xchg
add
je
add
mov
ins
cmp
clc
add
mov
add
adc
adc
jg
adc
nop
add
or
jbe
push
aam
or
inc
movzx
setle
or
add
iret
add
inc
xor
dec
cmp
mov
xor
in
add
push
cmp
ret
mov
add
sbb
rcr
call
add
rol
ret
mov
pop
into
or
(bad)
sbb
adc
sbb
adc
sbb
or
xor
mov
push
or
icebp
add
inc
les
pop
in
je
cmps
jb
sub
jne
(bad)
push
add
xor
popa
jmp
inc
jo
mov
mov
xchg
mov
xor
daa
mov
pop
xlat
aam
adc
mov
lea
or
inc
cmp
jle
ret
xor
pusha
sbb
add
jg
lods
add
aaa
and
(bad)
pop
mov
or
mov
mov
mov
sub
xor
or
repz
lods
adc
mov
add
dec
jmp
adc
add
test
mov
(bad)
dec
lock
jle
mov
pop
inc
jp
shl
into
xchg
sub
movs
jl
cmp
mov
xchg
mov
aad
add
push
adc
sbb
sbb
mov
mov
mov
add
fidiv
lods
in
mov
mov
add
mov
cli
jl
cmp
movs
test
or
add
es
int
ds
or
xor
test
hlt
call
add
cmp
test
and
out
pusha
fcomp
pop
loopne
lds
sbb
cmp
out
das
mov
jmp
lahf
ret
pusha
and
cmp
lods
xchg
adc
inc
fimul
cs
push
es
sbb
or
mov
sbb
and
xor
jne
dec
xchg
dec
inc
push
xchg
adc
mov
push
(bad)
dec
dec
scas
adc
sbb
add
add
ror
sbb
cmp
sbb
add
pusha
fcom
adc
add
pop
daa
inc
push
loopne
hlt
daa
rcl
repz
xchg
dec
sbb
add
mov
ret
and
jmp
test
loopne
pusha
cmps
mov
adc
hlt
push
out
mov
push
add
in
and
in
mov
fdiv
mov
sbb
mov
mov
les
outs
in
mov
pop
lods
mov
mov
pushf
push
movs
mov
mov
mov
leave
xor
sbb
sahf
xchg
iret
je
ret
das
fs
repnz
pusha
les
push
repnz
inc
inc
push
push
xor
mov
adc
inc
adc
ret
inc
inc
ds
out
pop
push
dec
sbb
ret
jl
or
ins
rcl
mov
stc
add
or
mov
pop
add
dec
or
lods
mov
das
leave
xor
clc
push
ficom
hlt
dec
and
mov
lahf
fwait
fwait
jne
mov
in
pop
loopne
mov
inc
ds
pop
mov
mov
add
mov
or
xor
idiv
and
xchg
or
and
pop
loopne
daa
cmp
clc
sbb
push
out
ins
fst
cmps
push
test
cmp
mov
jnp
bound
cmp
les
add
or
js
add
cmp
pop
fs
sbb
add
imul
int
call
mov
adc
outs
mov
sub
pop
xor
hlt
loopne
fwait
push
or
inc
mov
push
mov
add
or
adc
add
ret
inc
in
and
inc
fcom
fsubr
inc
inc
js
add
or
mov
inc
mov
rcl
inc
addr16
fild
push
out
add
add
js
loopne
inc
add
jnp
test
inc
add
xor
or
sub
xor
mov
sbb
aam
mov
dec
cld
leave
push
inc
push
or
out
push
cmp
mov
sahf
daa
daa
daa
and
int
jne
xchg
xchg
lahf
dec
movs
push
mov
mov
pushf
inc
rcr
shl
dec
dec
cmps
cs
dec
aas
sbb
or
repz
je
sbb
adc
mov
add
popa
add
or
xor
mov
push
inc
aaa
dec
mov
add
retf
pop
dec
cmp
sub
cmp
dec
add
sub
cs
adc
inc
inc
gs
add
pushf
add
adc
pop
cwde
jl
mov
dec
adc
shl
cdq
sub
sub
sti
fisttp
xchg
inc
mov
cs
pop
fwait
mov
add
add
jge
xor
loop
jns
cmp
cmp
push
cld
and
pop
jmp
shl
adc
arpl
outs
scas
sbb
jmp
adc
test
pop
pop
inc
das
pop
add
adc
add
or
cs
pusha
cmc
jne
adc
scas
add
add
ins
das
je
xor
add
push
adc
cs
fsubr
push
cmp
iret
es
(bad)
fiadd
or
mov
pop
push
scas
inc
cs
add
add
pushf
push
popf
inc
fcom
jo
add
pop
cmp
mov
jge
out
push
pushf
cmps
push
loop
imul
out
js
and
xlat
push
enter
inc
or
div
add
loopne
inc
mov
out
inc
or
dec
adc
in
or
dec
loopne
add
add
sub
or
ds
lods
push
arpl
leave
sbb
aas
add
arpl
int
xor
jb
sti
and
cmp
jns
out
cmp
mov
movs
test
dec
movs
icebp
cs
stos
jp
push
dec
mov
cmps
maskmovq
xor
inc
imul
sub
push
jne
fcomp
and
aas
or
inc
ins
je
inc
inc
add
mov
les
out
jb
jae
sbb
test
repz
add
dec
push
shl
jo
outs
loopne
je
add
or
jge
rcr
add
mov
repz
and
sti
push
add
jbe
xchg
adc
lahf
ins
or
push
pop
das
mov
jge
inc
jns
cmp
or
xor
lahf
adc
add
adc
xor
inc
sub
or
pop
mov
rcl
xor
sbb
dec
dec
xchg
sub
adc
jno
mov
loopne
xor
adc
adc
movups
mov
jmp
pop
sub
add
mov
lea
or
and
xor
fisub
add
add
ja
push
xor
inc
sbb
dec
enter
test
pop
jo
xchg
xchg
out
sbb
cmp
xchg
mov
mov
(bad)
sbb
adc
arpl
(bad)
fcomp
inc
dec
or
cwde
ficomp
push
call
sbb
std
inc
pop
and
mov
inc
sbb
inc
adc
pop
sub
jnp
push
retf
add
fisttp
mov
std
test
push
xor
pop
cmp
jns
(bad)
sbb
mov
iret
or
adc
sbb
loopne
jne
int
shr
pop
xor
test
scas
pusha
mov
sbb
movq
fsub
sbb
sbb
data16
out
out
inc
add
push
test
mov
frstor
xchg
movsx
push
ror
sbb
imul
xchg
sub
jno
ins
stos
ja
fsubr
xchg
pop
je
jp
dec
nop
stos
ja
pusha
and
imul
outs
push
pushf
or
lea
pop
xor
jne
add
stos
ja
stos
xor
xor
ss
pop
les
inc
dec
outs
je
jne
shl
jp
mov
cmp
mov
fnstsw
jo
sbb
and
adc
adc
and
push
inc
clc
sbb
or
ss
pushf
sub
pop
add
into
in
mov
sub
push
stc
test
pop
dec
push
mov
pshufw
nop
pop
js
jle
loop
add
jbe
loope
dec
mov
js
lods
dec
les
or
adc
outs
mov
loopne
scas
jg
pop
cmp
ds
push
jo
push
enter
jbe
(bad)
mov
outs
jnp
inc
xor
aas
inc
scas
push
fsub
cmc
das
adc
jp
scas
imul
mov
bnd
cld
inc
push
push
xor
loopne
pop
sbb
adc
and
push
inc
add
jo
sub
xor
add
xchg
ja
pop
fwait
and
adc
mov
lock
fmul
movs
dec
pop
jo
(bad)
js
add
bound
xchg
mov
inc
rol
js
dec
mov
in
mov
popf
das
mov
rcl
add
rol
or
cmp
pop
and
mov
fnstcw
xchg
fstp
jl
inc
push
addr16
ins
mov
add
in
dec
add
inc
add
les
mul
pop
cmp
mov
adc
test
pop
or
loop
fmul
adc
in
cmps
imul
sub
xlat
pop
xor
outs
pop
rol
pop
les
retf
shl
pop
sbb
mov
out
inc
sbb
ds
in
push
mov
sbb
inc
imul
imul
and
mov
loopne
or
push
jo
movhps
adc
mov
and
add
fild
rcr
mov
ins
jno
or
dec
jbe
dec
add
xor
push
jo
push
pop
mov
adc
pop
pusha
pcmpgtd
add
dec
mov
iret
mov
fld
mov
or
and
call
mov
mov
fs
jbe
fs
jo
pop
adc
je
dec
test
in
jbe
enter
mov
in
sbb
sbb
int3
and
jo
mov
sbb
or
in
ss
pop
pop
divps
xchg
add
push
lods
pop
sbb
hlt
xchg
inc
adc
cld
das
xor
inc
icebp
add
inc
inc
adc
pushf
mov
mov
stos
mov
call
push
lods
or
pop
sub
inc
icebp
inc
add
pop
push
mov
pop
aaa
stos
xchg
adc
mov
dec
mov
shl
adc
(bad)
mov
mov
test
sub
mov
adc
pop
test
scas
adc
mov
push
imul
das
sbb
push
push
mov
pop
jo
pop
divps
pop
push
sub
push
sbb
ins
fadd
pop
and
push
mov
mov
pop
clts
dec
or
cmp
inc
ja
pop
fwait
test
pop
mov
mov
cmovbe
inc
jo
pop
or
jmp
add
ins
inc
mov
mov
push
adc
cmps
xchg
xchg
mov
mov
nop
fisttp
mov
mov
sbb
pop
xcrypt-cbc
cmps
push
add
mov
lods
dec
jp
jb
push
fs
pop
sub
test
test
pop
int3
pop
push
movzx
push
mov
inc
bound
popa
arpl
loope
mov
mov
je
mov
inc
add
into
pop
lods
sbb
popa
xlat
iret
pop
sub
pop
mov
mov
adc
sub
inc
push
call
jne
inc
dec
push
sub
pop
sbb
fild
push
jnp
ja
pop
stos
adc
mov
psrld
and
arpl
pop
xor
rol
shr
test
mov
add
nop
dec
sbb
fidivr
(bad)
sbb
ret
pop
bound
or
add
aas
and
pop
sbb
xor
and
lock
pusha
fst
pop
xor
or
or
jo
xchg
mul
das
out
sub
add
sbb
inc
pop
loopne
add
mov
fcom
and
xrstor
pusha
stos
mov
mov
add
push
mov
gs
pop
sub
adc
mov
pop
pop
add
loopne
divps
rcl
shl
shl
in
iret
pop
sub
out
test
lods
inc
adc
sub
test
xor
cld
call
pop
jg
adc
sbb
div
mov
fidiv
addr16
movs
jecxz
or
add
adc
xchg
stc
add
or
adc
int3
ret
or
das
daa
dec
add
retf
inc
push
or
inc
cmp
cmp
xor
or
add
movs
push
jno
pop
leave
xor
xor
imul
(bad)
xchg
sub
not
test
sbb
in
(bad)
fisttp
jnp
sti
push
pop
daa
out
jle
(bad)
int3
add
jl
or
jb
sbb
unpcklps
sbb
sbb
and
iret
jnp
push
push
mov
test
mov
popa
call
push
popf
pusha
xor
or
inc
push
mov
xor
add
sbb
or
push
inc
mov
shl
or
ret
inc
rcl
pop
sbb
retf
or
xor
bound
sub
xor
mov
test
or
inc
cmp
xor
xor
adc
sub
ror
fs
das
push
sbb
rol
out
xchg
and
xor
imul
stc
test
mov
imul
adc
popf
jns
aas
adc
or
cdq
das
pop
jbe
lods
cmp
pop
pop
push
shl
fadd
ret
adc
int3
les
test
and
imul
cmp
sahf
fs
scas
mov
xchg
or
dec
inc
ffree
adc
xor
call
int
add
mov
fs
mov
inc
sub
jns
fst
inc
nop
addr16
or
pop
js
ror
jno
mov
nop
rcl
aad
sbb
dec
or
popf
enter
sbb
adc
int3
data16
jne
or
xchg
push
retf
dec
mov
hlt
add
(bad)
mov
adc
sbb
push
loopne
sbb
rcr
sub
mov
mov
cs
or
inc
call
adc
jecxz
add
repz
inc
test
lods
xchg
lea
mov
dec
or
dec
lea
sub
retf
jl
out
test
inc
daa
jbe
pushf
push
dec
add
push
inc
gs
clc
xchg
dec
loopne
jmp
jge
inc
add
xor
xchg
mov
push
xchg
cdq
jge
or
cmovno
adc
aaa
imul
mov
or
xor
mov
xchg
dec
add
jo
outs
inc
inc
shl
inc
add
sub
mov
ja
inc
aam
push
mov
gs
imul
inc
xor
mov
iret
pop
push
adc
or
pop
retf
shl
int3
add
mov
out
fadd
mov
lods
xchg
dec
loopne
add
aam
sbb
aam
aad
cmp
repz
mov
enter
hlt
cs
mov
xchg
mov
out
retf
lea
daa
dec
into
das
push
and
or
adc
sbb
xchg
xchg
or
popf
ins
dec
cmps
pop
les
outs
gs
and
inc
test
cmc
sub
call
jg
cmp
arpl
ins
gs
sbb
add
xchg
pop
sub
jae
push
outs
dec
add
pop
and
pop
jb
inc
lods
jnp
fsubr
sub
adc
imul
push
dec
sbb
popf
call
into
lahf
pop
iret
cmovbe
cmps
push
pop
sbb
push
add
cdq
mov
dec
mov
sub
cmps
cwde
iret
xchg
xchg
xor
adc
adc
push
int3
cmp
in
lahf
mov
adc
push
add
xchg
call
mov
push
ins
call
pop
fsub
(bad)
push
add
xor
in
and
mov
inc
jmp
out
cwde
mov
or
lea
pop
add
push
jle
ret
rcl
clc
sbb
daa
test
bound
aaa
sbb
inc
or
and
add
xchg
pop
inc
mov
add
mov
or
popa
fwait
jecxz
sub
jns
cmp
in
cmp
sbb
rcl
jmp
test
aad
xchg
leave
xchg
xchg
daa
daa
(bad)
xor
push
popf
rol
xlat
cmp
leave
leave
leave
jno
fist
fdiv
repnz
pop
mov
fstp
jb
jb
mov
cmp
sbb
inc
sahf
pushf
fmul
mov
and
dec
mov
cmp
jg
xchg
daa
daa
ret
pop
fimul
enter
rcl
fild
fs
aad
loopne
mov
lea
repnz
nop
pusha
ret
mov
sbb
sbb
or
call
das
das
lods
sub
lahf
pushf
loop
or
cdq
cmp
add
nop
mov
jecxz
popa
mov
sbb
and
pop
mov
jno
enter
add
pop
popa
test
mov
in
popa
shr
dec
popf
and
xor
xchg
cmps
call
(bad)
adc
test
add
inc
add
jo
or
push
outs
add
inc
add
imul
add
ss
adc
push
pusha
mov
mov
cdq
dec
or
sbb
cmp
shl
mov
movs
sahf
mov
push
jno
xor
js
or
or
add
imul
xor
dec
rol
or
push
add
rol
je
add
xor
pusha
adc
inc
xchg
cmp
ficom
inc
xchg
add
pop
add
add
in
dec
pop
mov
rol
imul
je
or
dec
xchg
mov
push
ror
fbld
popa
jb
push
pusha
mov
jns
or
mov
rcl
mov
mov
push
or
add
xchg
imul
stc
adc
loopne
adc
xchg
inc
icebp
push
inc
outs
jae
push
test
push
aaa
inc
and
add
nop
loopne
xchg
adc
jno
jo
mov
inc
mov
xchg
gs
(bad)
ret
sub
fisub
cmps
xchg
stos
dec
adc
adc
rcr
xchg
xchg
sbb
push
xor
inc
cmps
adc
test
xchg
dec
xor
pop
or
stos
bound
adc
push
adc
popa
push
sar
pop
pop
les
shl
add
ror
or
arpl
and
rol
add
dec
out
jae
sub
leave
arpl
push
(bad)
rol
pop
imul
push
gs
mov
inc
es
and
add
inc
mov
fcmovne
add
and
dec
xchg
adc
or
retf
or
and
xchg
push
xor
push
cdq
daa
add
dec
and
outs
xlat
ins
inc
mov
sbb
xchg
sbb
sub
sbb
and
sbb
pop
sub
adc
jo
ds
inc
shl
add
mov
ja
movs
test
add
dec
jnp
xor
mov
movs
or
adc
stos
push
aaa
add
push
pop
add
pop
loope
les
pushf
ins
sar
out
movs
hlt
push
add
jecxz
cmp
clc
add
cmp
add
dec
push
ds
mov
mov
add
jp
inc
shr
xchg
inc
icebp
inc
and
iret
or
dec
push
and
out
ror
mov
inc
outs
mov
repnz
loope
mov
push
sub
mov
cmp
adc
dec
inc
fnstenv
ds
or
xor
fadd
xchg
lock
adc
mov
jecxz
push
in
add
xchg
push
pop
hlt
jmp
cmp
fwait
out
mov
mov
out
hlt
outs
pop
pusha
mov
daa
fdiv
fsubr
push
fld
pop
mov
push
push
fs
dec
jae
adc
loopne
shr
mov
pop
sbb
add
retf
pusha
loopne
test
out
xchg
cmp
and
call
cmp
stc
or
push
mov
leave
leave
enter
jmp
and
dec
outs
test
movntq
sbb
out
adc
clts
out
or
sahf
pushf
fnstsw
lock
daa
and
icebp
xchg
adc
js
adc
scas
mov
sub
btc
test
pop
out
(bad)
xor
adc
cli
mov
cmp
pusha
and
jg
add
pop
dec
jae
dec
adc
sbb
add
in
or
aad
pop
xor
les
inc
inc
fsub
add
cdq
adc
jne
retf
adc
and
pop
xchg
mov
inc
sbb
mov
pop
adc
or
nop
add
adc
jecxz
sub
sub
jo
sbb
mov
sbb
outs
fdiv
and
gs
jns
inc
xor
mov
sti
outs
inc
stos
ins
mov
xchg
ror
and
and
loopne
xchg
cmp
jo
mov
movs
sbb
cmp
and
mov
cmp
xchg
push
lods
pop
hlt
pop
and
sub
cmp
arpl
add
jmp
mov
cmps
sub
sbb
sub
nop
sbb
aaa
ja
fiadd
rcr
add
stc
mov
jae
add
or
ins
daa
dec
jne
ins
mov
add
movs
add
or
add
pop
add
inc
dec
js
push
sub
xor
xchg
add
iret
adc
adc
jg
lock
or
cmps
ss
adc
loope
xor
pop
sub
repz
adc
ins
add
std
sub
cld
add
pop
(bad)
ss
scas
inc
jns
dec
xor
xchg
add
sbb
add
jne
jne
adc
popa
xor
or
lods
xor
inc
cmp
inc
inc
shr
and
loopne
inc
sar
fiadd
js
sub
(bad)
gs
inc
or
test
test
ror
jo
inc
js
iret
sub
inc
jmp
push
jg
fwait
sub
sbb
adc
cmc
imul
adc
push
push
ror
jg
mov
pop
cmp
adc
std
das
adc
xchg
add
test
inc
push
outs
loope
dec
es
ins
imul
pop
xchg
or
mov
inc
loope
pop
push
inc
xchg
xor
sub
cmps
mov
sub
sub
or
sbb
cmc
aad
add
inc
jnp
inc
inc
xor
shr
adc
aam
je
pop
push
adc
push
mov
test
movs
push
test
in
int3
mov
add
or
mov
mov
or
add
sbb
(bad)
movs
call
or
retf
add
test
in
inc
nop
das
cmc
mul
out
das
sub
xor
push
mov
ins
out
sahf
out
nop
movs
(bad)
enter
aam
or
mov
popa
jbe
pop
movs
add
or
pop
rol
cmovbe
push
outs
jb
mov
pop
cmp
sub
xchg
xor
cmp
sub
inc
xor
ins
stc
sub
or
or
cdq
mov
test
and
dec
push
push
mov
or
data16
sbb
or
add
mov
adc
pop
push
shl
mov
or
pop
or
mov
mov
mov
loopne
jns
cmp
adc
add
adc
inc
loopne
adc
adc
outs
daa
sub
das
jo
movs
xchg
dec
dec
shrd
add
clc
movups
ins
jo
jbe
mov
mov
iret
pusha
mov
mov
xor
jb
clc
imul
mov
stc
gs
cmp
cmp
mov
stc
scas
and
out
stc
dec
xor
and
test
inc
leave
and
mov
add
inc
lds
idiv
cmp
inc
mov
and
das
call
call
push
sbb
repnz
pop
cli
pop
inc
mov
cli
xor
push
sub
and
lahf
mov
mov
add
dec
inc
jb
cmp
mov
sbb
mov
cdq
sbb
adc
sti
jg
sub
lds
enter
std
cld
mov
add
cld
mov
sbb
mov
push
add
lods
mov
xor
shl
js
add
xchg
and
stos
cld
sar
xor
enter
std
jp
or
add
sbb
nop
rcl
std
nop
add
inc
sar
push
jb
mov
xchg
and
mov
test
std
push
loopne
shr
xor
pushf
sub
(bad)
(bad)
cld
dec
sub
call
aaa
jb
mov
test
push
sbb
add
ds
push
dec
sbb
add
int3
xchg
mov
loop
and
je
loope
ss
(bad)
pusha
les
push
ror
pop
mov
cmps
call
add
pop
out
(bad)
rol
cmps
cs
mov
stos
cwde
cmp
or
sbb
xchg
add
mov
dec
add
inc
pusha
fistp
pop
push
push
pop
outs
ja
and
push
jecxz
or
jmp
mov
fld
mov
push
mov
xor
pop
xor
std
daa
add
mov
call
and
xor
and
mov
mov
stos
ins
jge
adc
fs
lods
lods
imul
jae
jge
pop
popa
add
(bad)
test
push
pop
or
out
iret
clc
out
add
rol
ins
pushf
xlat
popf
jo
jle
pop
pop
add
pop
cmp
sub
add
inc
jmp
jb
inc
scas
fiadd
or
icebp
push
mov
dec
cli
sub
inc
sbb
sbb
(bad)
adc
add
sti
mov
and
jge
add
iret
pop
test
in
and
shufps
add
bound
fisttp
cdq
sbb
mov
xor
inc
loopne
cmc
add
dec
and
ror
imul
popf
push
inc
mov
fcmovb
adc
mov
jb
or
add
call
ja
sub
adc
and
shl
fcom
xchg
cmp
add
and
jnp
inc
cmp
push
test
jns
push
adc
nop
bound
pop
push
rcr
inc
cmp
adc
jo
sub
pop
xor
jo
mov
xchg
xor
or
shl
jecxz
push
ins
je
pop
push
rol
ins
push
ror
retf
pop
or
ins
add
inc
add
dec
inc
cwde
(bad)
clc
popf
add
sbb
syscall
push
rol
retf
hlt
sub
das
es
cmps
(bad)
pop
or
xchg
ret
adc
sub
cmp
lock
add
pop
outs
fmul
xor
mov
pop
ret
cmps
push
push
aas
(bad)
pusha
push
call
mov
retf
sar
mov
lea
mov
cli
nop
mov
cmc
in
das
pop
sub
xor
jne
ins
jne
jmp
data16
adc
push
jmp
sub
dec
iret
nop
xchg
imul
add
or
mov
not
pop
xor
mov
daa
movzx
sub
and
add
mov
and
pop
add
pop
lods
adc
cvtps2pi
push
es
or
(bad)
outs
pop
lahf
jnp
mov
sbb
ror
xchg
add
rcr
(bad)
out
std
movs
sub
add
add
dec
js
mov
inc
cmp
jne
lea
add
mov
(bad)
loop
mov
add
pop
inc
push
mov
pop
inc
push
xchg
sar
push
fdiv
inc
add
ret
pop
pop
(bad)
retf
mov
pop
jmp
and
es
xlat
push
es
add
ins
pusha
ins
add
rcl
add
add
and
mov
call
sbb
dec
in
or
sub
repnz
out
xor
cmp
push
sahf
cmps
or
sbb
retf
push
push
call
or
push
sub
repnz
js
sub
cmp
mov
cmc
xor
(bad)
or
push
mov
adc
out
adc
mov
or
inc
pop
je
rcr
fimul
out
or
or
jbe
pop
mov
pop
adc
mov
test
mov
add
push
movs
sub
sbb
retf
bt
rcl
add
fwait
aam
pop
idiv
or
pop
(bad)
jo
and
or
(bad)
jmp
inc
lock
inc
xchg
pop
mov
cmps
lahf
add
mov
add
push
push
pop
or
shr
push
or
or
jmp
add
pop
add
cld
xor
sub
push
adc
and
sub
in
sub
inc
movs
jmp
bound
call
cmp
add
jns
inc
cwde
add
mov
push
adc
sub
pop
pop
jmp
xor
add
movs
xchg
ret
sub
ret
sub
aas
stos
xor
pushf
add
lods
cs
or
inc
ret
lock
in
jb
push
movs
and
sub
jg
sub
pop
add
adc
add
or
or
out
fstp
sub
cmp
jg
xchg
mov
push
jg
inc
outs
shl
jecxz
pop
jg
pusha
pop
xor
cld
pop
cmp
jne
dec
mov
push
mov
or
ds
ret
add
push
push
pop
add
push
push
mov
cld
pop
je
shr
(bad)
jmp
add
fild
fwait
es
mov
fimul
fdiv
or
and
xchg
and
jo
jl
clc
jp
mov
pusha
imul
fld
and
fdiv
outs
and
and
pop
int
add
dec
sbb
pop
cmp
pop
pop
(bad)
jnp
je
add
add
mov
sti
add
push
aaa
inc
out
or
test
in
loope
clc
mov
or
mov
adc
iret
rol
add
pop
movs
fdivr
loopne
add
add
sub
add
mov
jmp
mov
pop
out
shl
sbb
pop
ja
add
sub
mov
repz
mov
adc
sbb
pop
stos
push
pusha
(bad)
jo
adc
add
sbb
cli
pushf
sub
pop
xchg
sbb
ins
sub
xor
push
adc
xchg
push
push
in
rol
dec
dec
add
adc
ret
(bad)
sbb
and
xchg
cmps
es
sub
and
sbb
or
rol
retf
jmp
inc
cmp
jl
pop
test
in
and
or
fisttp
es
sub
inc
arpl
fimul
mov
aaa
sbb
mov
xor
retf
mov
adc
inc
mov
xor
cmovb
arpl
mov
jl
adc
out
stos
xchg
loope
ins
inc
and
nop
cmc
icebp
jne
lods
xor
push
sar
jne
pop
push
ret
xor
cld
and
mov
cmp
jle
fmul
stos
push
jg
push
push
add
mov
inc
movs
sub
cli
cmp
fdivr
ret
jnp
mov
cmc
inc
sub
ja
aam
add
ins
pusha
sub
mov
cmp
jp
sbb
imul
mov
cdq
jo
push
or
pop
push
push
or
dec
pusha
add
mov
jne
jmp
inc
loopne
sub
add
aad
inc
cmp
test
add
cdq
add
add
jmp
add
push
or
jne
adc
jb
adc
pop
loop
adc
pop
cdq
xchg
jg
daa
or
sahf
and
mov
add
mov
add
shr
aad
xlat
pop
add
mov
stos
add
add
loopne
xchg
jbe
fisubr
push
mov
add
mov
sbb
lock
fs
dec
inc
cmp
add
aad
add
pop
add
call
xor
pop
dec
add
popf
pop
pop
bndldx
scas
mov
lods
cmp
add
fcmovnu
sbb
shr
nop
dec
ret
cmp
lea
mov
or
scas
add
push
pop
je
lea
add
xor
scas
test
and
inc
inc
clc
sub
jl
je
sahf
or
stos
or
mov
fiadd
lahf
jmp
cs
in
das
adc
inc
dec
jne
jmp
lods
jl
movs
and
or
aam
push
shl
mov
xor
jmp
jae
add
jb
push
inc
inc
ud0
loope
add
call
test
adc
jg
(bad)
or
dec
and
xchg
cwde
add
jmp
mov
pop
sub
stos
dec
jnp
das
aam
or
fwait
or
call
pop
es
cmp
add
add
cmp
inc
pusha
jo
xor
mov
cmp
ret
(bad)
and
sub
hlt
test
sbb
mov
add
ror
cwde
sub
cmp
or
iret
xor
add
or
jl
add
fsubr
mov
sub
jbe
sub
clc
dec
retf
jne
cmp
ja
lea
push
call
rol
mov
mov
pop
add
stc
std
fistp
jb
repz
add
adc
and
xchg
stc
leave
lahf
aas
add
outs
jb
mov
loopne
cmps
jb
out
out
lahf
cld
add
(bad)
mov
mov
mov
mov
loop
adc
ds
arpl
mov
ret
add
jmp
cld
cld
jge
cs
add
por
add
mul
fistp
sbb
sbb
mov
sti
pop
sti
or
add
in
push
jb
sbb
xchg
inc
(bad)
imul
jbe
inc
or
adc
adc
dec
push
ret
rol
push
push
and
inc
sti
adc
pop
push
xor
rcl
sbb
out
jbe
jbe
or
jne
inc
xor
loope
iret
sbb
hlt
ds
adc
xor
jae
sbb
loope
imul
or
clc
or
adc
loopne
add
xchg
add
inc
movs
je
scas
mov
adc
not
je
pop
cmp
sbb
sar
pop
mov
in
dec
loopne
sar
idiv
imul
ret
cmp
enter
(bad)
xor
dec
rcl
mov
scas
fdivr
cs
imul
cmps
fsubr
ror
pop
push
pusha
cmps
or
adc
adc
ss
jp
fimul
jbe
jbe
xchg
dec
fadd
jae
mov
mov
or
xor
add
mov
shl
inc
out
mov
add
stos
neg
mov
(bad)
jge
shl
sahf
xchg
sbb
sub
dec
push
sti
sub
jae
clc
jge
sbb
push
jae
lock
mov
add
inc
sbb
xor
and
sub
xchg
push
cs
push
pop
f2xm1
pop
jmp
mov
rol
aaa
adc
mov
adc
std
jmp
add
loopne
ss
daa
pop
dec
add
dec
dec
inc
js
(bad)
sub
fs
push
(bad)
dec
in
push
imul
repz
jmp
push
imul
and
adc
add
leave
lar
sub
shr
adc
inc
mov
or
cmps
or
(bad)
adc
sbb
push
push
jo
stos
jg
or
(bad)
fmul
popf
push
fimul
mov
dec
add
sbb
sbb
inc
sub
mov
cmc
adc
mov
dec
push
add
and
pop
cld
mov
dec
lea
imul
test
push
push
cmps
push
fs
pop
pop
jno
lahf
int
(bad)
aad
lgs
hlt
mov
add
add
gs
cmp
fldenv
out
mov
or
fidiv
pop
pop
mov
inc
and
rol
cmps
outs
sbb
test
fdiv
inc
add
and
jo
into
push
add
arpl
pop
ror
jbe
out
add
and
xor
or
clc
cld
add
scas
dec
mov
pop
ror
push
mov
xor
stos
nop
cmp
add
push
mov
das
inc
(bad)
leave
inc
push
mov
mov
jne
hlt
sub
inc
mov
mov
cld
push
xchg
imul
push
inc
daa
jae
icebp
push
jl
push
in
add
mov
push
in
mov
add
xchg
jle
mov
mov
loop
inc
adc
mov
mov
add
xchg
cmc
cli
movs
adc
fs
ins
pop
or
lods
(bad)
pop
add
push
and
or
cwde
test
pop
pop
call
add
(bad)
fldz
fld
fcompp
fstsw
sahf
setne
jmp
xor
mov
jg
mov
and
mov
enter
mov
ins
imul
pop
ret
shl
xor
sub
add
xchg
(bad)
fsub
jne
jo
adc
jbe
sti
mov
and
and
adc
add
jbe
daa
shl
mov
mov
lock
mov
cli
inc
ja
or
push
adc
xchg
xchg
in
jne
sbb
xor
mov
xchg
scas
outs
dec
fisub
cmp
jge
jnp
jg
shr
mov
sbb
mov
push
shl
rol
mov
xor
clc
and
ss
dec
cmp
push
sub
and
add
rol
pop
inc
cld
outs
mov
add
inc
pop
out
mov
rol
jns
test
outs
lea
push
xlat
ins
or
mov
cli
or
cmp
cwde
sbb
xchg
or
cld
add
fwait
xchg
or
fbstp
add
ins
adc
out
mov
jnp
push
or
adc
dec
idiv
add
(bad)
push
lock
jbe
sbb
clc
push
push
hlt
imul
je
aad
ja
test
add
adc
or
sbb
inc
cmps
jo
into
pop
inc
pop
or
pop
pop
out
xchg
push
cmp
jge
and
cs
daa
sub
add
add
jnp
or
je
add
mov
mov
sbb
sbb
cmp
pop
cmc
adc
(bad)
cmps
jne
pop
mov
xchg
sub
mov
sub
add
pop
push
js
add
addr16
cmps
adc
push
shr
pushf
mov
and
movs
sbb
stos
mov
xor
clc
inc
jmp
fisub
add
jo
inc
sub
mov
push
push
and
lds
mov
and
pop
dec
and
add
push
popf
and
push
sub
sbb
and
mov
inc
or
add
mov
add
push
dec
lds
rol
jge
pop
fbld
sbb
pop
sbb
sbb
adc
add
mov
sub
test
ror
mov
mov
and
mov
in
mov
or
and
mov
lock
sub
and
jne
inc
xor
dec
add
push
test
inc
cmp
cmps
shl
add
pusha
sub
daa
mov
sti
cmp
inc
invd
sub
shr
or
add
fsubr
and
push
or
ss
dec
int3
mov
popf
or
add
xchg
inc
sti
mov
clc
not
and
pop
sbb
rcl
sbb
add
sbb
je
jnp
xor
adc
adc
pop
or
sbb
fmul
je
jae
ret
pop
(bad)
cmp
add
fwait
stos
or
imul
adc
inc
stos
sbb
pop
ss
push
jnp
sbb
or
ins
(bad)
push
sbb
xchg
push
mov
xor
pop
ret
pop
xchg
(bad)
mov
dec
and
cmp
mov
pop
sbb
adc
inc
fadd
sbb
ud0
ja
add
add
aas
add
mov
dec
add
dec
mov
xor
pusha
and
push
mov
or
retf
sbb
je
sub
mov
mov
mov
mov
jl
add
cmp
jb
shr
call
inc
sub
inc
in
add
(bad)
jge
pop
pop
and
cmp
inc
dec
pop
jg
xor
adc
jnp
idiv
movs
xchg
shr
adc
jnp
lock
ret
cmp
xchg
mov
xor
xchg
add
add
dec
sub
imul
shr
mov
stos
cmp
xchg
sbb
mov
imul
or
aaa
jnp
pop
add
and
pop
es
dec
inc
hlt
add
add
(bad)
sbb
and
add
cmp
pop
xchg
nop
imul
mov
sbb
mov
or
jne
mov
and
push
pop
add
jbe
inc
pop
test
pusha
loopne
aad
iret
cdq
cld
daa
jbe
inc
or
loop
fwait
sub
mov
pop
aaa
ins
inc
or
push
iret
fst
adc
push
imul
ret
jle
push
imul
push
rcr
loop
clc
cld
push
aaa
adc
imul
aam
mov
hlt
jae
das
shl
mov
add
cmp
ret
mov
adc
push
add
stc
push
or
rcr
or
mov
or
loopne
push
or
jl
aaa
dec
inc
add
cs
xor
test
mov
je
mov
ret
sti
int3
adc
mov
or
push
retf
xor
stc
popf
mov
aas
pop
ja
pop
ret
inc
pop
ret
nop
pop
or
and
mov
scas
and
cmp
cmp
es
lahf
(bad)
sub
jmp
repnz
add
xchg
add
push
mov
shl
push
add
sti
ror
xlat
cmp
or
and
aad
add
movs
retf
dec
add
jo
cmp
(bad)
add
loopne
mov
(bad)
cmp
jae
jbe
rcr
movzx
jo
div
mov
fucomi
shr
ret
adc
push
jb
push
sar
rcl
test
cwde
add
bound
call
cs
or
add
adc
mov
push
pop
push
das
adc
das
adc
jae
push
mov
add
in
xabort
fdiv
add
jb
in
outs
ret
jmp
xor
loope
lock
add
mov
cmp
adc
shl
xchg
lock
repnz
leave
outs
loop
push
sbb
add
int3
in
dec
aas
dec
mov
jle
inc
xor
dec
adc
mov
cmps
mov
into
mov
and
icebp
arpl
clc
(bad)
push
lea
mov
lods
lods
xchg
cmp
adc
repz
pop
mov
jne
lea
lods
rol
xor
pop
pop
xlat
and
cmps
add
jne
cmp
cld
ins
stc
sub
test
jl
inc
xor
call
and
and
dec
not
mov
and
add
je
je
inc
test
sub
or
xchg
xchg
add
aaa
lock
test
hlt
sbb
push
pop
mov
push
das
adc
js
sbb
invd
shr
xlat
test
adc
xor
jo
mov
pop
mov
in
adc
call
or
add
je
mov
not
call
pop
jbe
mov
jnp
add
jbe
cmp
mov
retf
mov
mov
sub
adc
inc
mov
mov
dec
add
sbb
mov
mov
sbb
push
fwait
cmc
adc
lock
rol
outs
(bad)
je
cmp
icebp
xchg
shr
sub
add
mov
adc
cmc
adc
mov
push
mov
inc
dec
or
add
sbb
mov
popa
out
add
adc
add
adc
shr
inc
cmc
add
imul
pop
mov
pushw
or
sub
mov
adc
pop
add
movs
push
mov
mov
mov
add
jb
xor
fwait
imul
add
add
mov
push
xor
adc
mov
dec
pusha
hlt
js
cmp
jg
jmp
add
xchg
sbb
call
nop
inc
mov
addr16
mov
jle
mov
in
mov
or
xchg
fimul
mov
add
popa
out
fsub
add
cmp
inc
cld
or
lock
je
cmc
(bad)
push
jo
and
push
cmp
ret
lea
or
sub
add
aas
hlt
cmp
sub
add
lds
ss
cld
mov
je
mov
push
cs
in
add
inc
pusha
mov
xlat
mov
pop
pop
xlat
sbb
jge
test
pop
shl
ins
retf
sub
xchg
xor
dec
pop
div
cmps
(bad)
jle
ret
xor
add
and
add
cwde
sub
outs
add
dec
mov
jl
mov
js
sbb
clc
dec
imul
sbb
test
rol
sbb
rol
mov
mov
jle
cdq
cmp
lds
mov
mov
js
je
adc
jo
aas
ins
sbb
add
cld
sub
xor
sar
xchg
idiv
mov
fiadd
push
xor
call
pusha
lods
pop
push
or
clc
inc
add
adc
dec
nop
sub
mov
sub
(bad)
push
jo
call
leave
je
mov
cmp
lock
ret
jb
and
add
cmps
pop
and
cmp
jo
repnz
ret
call
jmp
movs
pop
sub
outs
jge
xchg
or
cs
or
or
mov
mov
adc
in
call
sub
int3
cdq
aaa
mov
pusha
aaa
icebp
mov
imul
fsub
jge
sbb
pop
add
xchg
cs
shr
xchg
inc
fs
int3
pop
fadd
jge
sbb
fdivr
(bad)
out
sbb
fnstenv
add
add
cmp
jbe
fs
cs
xor
js
sub
jne
shl
adc
xchg
jp
mov
mov
mov
or
ss
xor
ja
hlt
loop
pop
jl
sub
shr
shr
add
fcmovnb
jle
jbe
xor
je
push
ret
cmps
dec
shl
sbb
movs
mov
sar
cmp
sbb
and
mov
mov
adc
mov
push
rol
mov
rcl
ror
sti
pop
les
add
mov
sbb
add
rol
or
sub
mov
sub
jae
je
or
inc
add
dec
adc
in
adc
jns
mov
add
sub
adc
sbb
imul
popa
(bad)
int3
sbb
pop
jmp
and
test
imul
xor
inc
mov
aaa
or
jmp
sbb
add
adc
xor
jne
cmp
jl
cmp
add
fistp
frstor
adc
cmp
mov
sar
(bad)
add
jmp
add
inc
jmp
inc
rol
dec
lock
pop
leave
and
movs
pop
push
xchg
mov
mov
dec
retf
add
cmp
ja
sar
test
xor
and
add
iret
xor
push
sahf
hlt
sub
pop
into
xor
mov
aaa
cld
mov
je
inc
push
ss
int3
push
pop
push
repz
popf
push
rol
xchg
das
rcl
test
mov
jg
sar
pushf
add
or
je
loopne
push
adc
(bad)
in
push
add
jmp
lea
xor
sbb
pop
cld
jmp
inc
in
and
cmp
or
leave
add
inc
mov
div
jge
adc
jmp
mov
mov
add
xchg
xchg
lock
and
ja
add
add
(bad)
aad
je
or
adc
out
mov
cvttps2pi
sbb
add
mov
je
mov
mov
loope
pop
xor
push
int3
xor
fsubr
ss
(bad)
out
mov
mov
js
test
sub
xor
js
jle
and
push
dec
jmp
and
mov
jle
pop
inc
mov
push
xor
fmul
mov
pop
and
js
mov
mov
popa
fbld
or
outs
mov
cs
pop
add
or
sub
lea
push
pop
pop
out
dec
pause
or
rol
addr16
adc
test
icebp
movs
sub
popa
movs
and
adc
xor
jbe
push
mov
imul
mov
rcl
push
je
sbb
sub
and
js
shl
ret
jo
cmp
lock
and
or
fs
push
lods
sbb
sti
ins
xor
or
aas
push
dec
jmp
arpl
or
scas
jmp
ds
adc
pushf
out
fadd
dec
pushf
dec
pushf
mov
adc
jl
cmp
xor
dec
aam
dec
inc
adc
push
mov
push
push
mov
call
xchg
(bad)
(bad)
jmp
push
or
ret
sub
pop
xchg
push
jmp
loopne
cmp
mov
stos
or
sub
push
call
cld
mov
push
push
or
(bad)
mov
inc
xchg
push
push
mov
dec
inc
xor
push
and
xchg
push
loopne
pop
xchg
fisttp
das
cmps
mov
inc
dec
add
or
jg
icebp
inc
fiadd
pop
std
cmp
jne
pop
pop
rol
mov
aam
mov
jne
dec
add
adc
mov
sbb
sar
jbe
shl
hlt
push
test
adc
ins
pop
mov
dec
inc
shl
jge
mov
data16
sar
and
cld
adc
dec
(bad)
or
sub
push
fnstsw
(bad)
sub
jae
mov
sub
loope
mov
cmp
je
jne
psllq
or
out
fstp
je
or
ret
add
or
mov
add
xor
or
sar
and
clc
sub
and
sti
ror
cmp
push
or
add
jge
mov
or
add
dec
xor
ret
dec
fcomp
push
push
fcom
mov
stos
ret
sbb
cmp
dec
adc
cmp
jl
mov
ds
jo
add
inc
adc
jo
push
adc
fldenv
shr
mov
inc
movs
je
sahf
and
cmc
adc
ja
loopne
push
stos
sbb
addr16
sub
fisttp
inc
sub
pop
mov
scas
ror
loop
mov
cld
fbld
push
jbe
xor
mov
mov
mov
(bad)
in
xchg
push
cmp
adc
int3
jns
add
adc
mov
mov
or
or
add
repz
inc
mov
je
dec
jne
loop
sbb
ins
test
cmp
in
and
int3
mov
or
and
or
dec
xor
adc
inc
cs
loope
ror
stos
adc
dec
ror
ja
sbb
mov
dec
push
cs
mov
jmp
pushf
fwait
jmp
icebp
and
je
push
push
cmp
adc
sub
or
sub
jmp
or
loop
sbb
adc
ret
mov
inc
out
dec
cld
(bad)
outs
and
inc
add
idiv
and
and
adc
and
sub
inc
sub
frstor
inc
es
sbb
and
sub
sub
into
or
sub
sub
xor
dec
lahf
adc
dec
add
push
adc
pop
cmp
mov
mov
inc
mov
ret
je
cmp
add
bound
or
inc
inc
jg
sbb
push
sbb
jmp
rcl
es
dec
push
push
faddp
pop
sub
inc
ins
push
fabs
pop
and
pop
fstp
rcr
cld
dec
fld
fstsw
fwait
mov
idiv
(bad)
jmp
loope
pop
fbstp
lea
mov
jg
fwait
mov
mov
int3
add
in
pop
mov
add
inc
jmp
mov
lock
call
push
cmp
adc
cmp
jae
cmp
jb
ja
in
and
dec
js
dec
and
pop
or
push
sar
add
leave
jmp
mov
fisttp
inc
xor
push
add
not
fimul
ret
pop
(bad)
xchg
add
out
or
fistp
mov
lods
lock
or
je
inc
or
jns
push
push
mov
mov
sbb
xor
adc
jl
mov
nop
push
jae
dec
add
sbb
mov
fild
cli
mov
push
sub
je
cmp
mov
(bad)
cmp
ja
mov
mov
push
push
sub
mov
and
jne
xchg
fcomp
inc
add
cmp
aas
and
ja
jae
or
jmp
enter
sbb
into
cmp
div
pop
jmp
pusha
sub
je
mov
iret
(bad)
xchg
cs
mov
scas
push
add
add
xor
mov
hlt
fwait
icebp
loop
push
push
pusha
fs
add
sbb
js
dec
jp
adc
pop
cmp
sub
clc
(bad)
mov
xor
xor
loope
(bad)
sub
push
or
and
pop
or
fistp
inc
inc
imul
or
xor
aaa
sbb
lahf
(bad)
mov
bound
pushf
rol
adc
clc
ret
add
loopne
add
shl
add
aas
scas
test
add
adc
jl
add
dec
jmp
lods
pushw
mov
add
aam
and
sub
icebp
mov
or
hlt
add
or
repz
add
jmp
inc
mov
inc
pop
sub
mov
outs
cwde
imul
imul
pop
cmp
add
jecxz
add
or
enter
(bad)
lea
push
xor
jl
lock
leave
mov
mov
pop
adc
ret
test
in
adc
sbb
sar
mov
xor
nop
mov
test
or
add
add
inc
jnp
mov
adc
cwde
test
or
adc
not
mov
cs
adc
jp
push
and
fld
xor
test
cmp
lods
nop
sbb
push
adc
clc
fld
int
mov
mul
ret
nop
imul
push
xchg
aam
adc
fcmovu
sub
xchg
ja
and
dec
push
(bad)
mov
push
fwait
mov
push
ret
jae
fstp
dec
sbb
add
pop
inc
mov
in
or
jg
(bad)
push
leave
(bad)
jle
cdq
nop
jg
lock
xchg
xchg
or
adc
sub
test
fnstsw
pop
sbb
mov
retf
pop
fstp
sbb
div
push
push
add
loopne
pop
pushf
inc
add
or
sar
or
into
aam
adc
pop
or
pop
add
inc
scas
xor
mov
pop
sub
rol
rcl
ds
or
jne
lahf
(bad)
lock
adc
out
(bad)
sub
in
mov
mov
add
jl
mov
nop
push
scas
xor
add
imul
push
out
xchg
jmp
add
lock
pusha
add
fdiv
ffreep
or
sbb
mov
(bad)
or
fst
adc
out
hlt
outs
inc
jo
and
mov
sbb
cli
cmp
xor
outs
add
cmp
jae
enter
jge
rol
cmp
rcr
add
ficom
add
nop
cwde
xchg
cmp
xor
fstp
fwait
or
and
mov
or
xor
cmps
and
iret
in
mov
movq
jbe
aam
sbb
sub
mov
add
and
jg
jo
cs
xor
lea
mov
pop
add
jge
ret
out
pop
mov
cmp
addr16
and
movs
pop
cmc
add
and
lock
enter
loopne
cwde
and
fld
out
or
mov
pop
gs
ret
mov
rol
adc
scas
call
hlt
std
add
sub
pushf
or
inc
jo
nop
and
mov
pop
fcom
es
sub
(bad)
ja
lock
jle
jb
or
adc
and
ins
mov
add
ja
jg
push
rcl
push
mov
shr
fdiv
sub
cmp
aas
ins
inc
sub
imul
rol
scas
ret
cli
add
repnz
shl
xor
pop
add
jmp
sub
clc
inc
std
mov
sbb
std
(bad)
repnz
xlat
rcl
stos
test
repnz
add
pop
pop
xchg
cmp
loopne
in
or
and
call
jg
mov
cmp
data16
jecxz
pmuludq
cmp
xchg
lods
fidiv
adc
sbb
dec
push
loope
push
jp
stc
mov
adc
inc
add
repz
into
call
shl
push
sub
mov
lods
mov
scas
inc
add
dec
cmp
rol
and
fcom
fidiv
sub
pop
mov
pop
sbb
cwde
and
lds
pop
(bad)
mov
es
cmps
daa
push
jl
inc
jbe
dec
cmp
(bad)
(bad)
ins
dec
dec
cmp
jb
adc
sbb
fist
mov
jle
adc
fdiv
rol
adc
ret
sub
sub
xor
sub
push
jecxz
outs
or
aam
(bad)
loope
ret
push
ss
and
outs
fwait
addr16
xchg
inc
pop
push
and
pop
inc
scas
sar
sbb
and
push
cmp
(bad)
add
shl
ficomp
push
stos
out
sub
pop
push
or
cmp
fimul
sbb
push
shl
and
lock
pop
or
fcom
inc
inc
or
cmp
push
or
sub
adc
and
or
pop
lock
add
movs
sub
mov
ret
jge
add
mov
pop
fld
ret
push
add
add
inc
inc
jbe
inc
ins
xor
xchg
jge
jnp
inc
adc
cld
imul
add
sub
retf
add
leave
mov
sbb
mov
jmp
and
inc
sub
fcom
cmp
iret
(bad)
dec
add
mov
mov
push
jle
add
xor
rcl
adc
daa
xchg
sar
mov
or
shl
out
shr
mov
mov
loopne
dec
add
out
rcr
xlat
push
pop
fcom
mov
mov
inc
or
pop
or
js
ret
pusha
cs
or
adc
ja
add
xchg
push
rol
outs
test
xor
pop
push
fadd
inc
jecxz
outs
loop
outs
pop
dec
xor
push
jge
mul
stc
ss
mov
nop
adc
test
dec
scas
xor
pop
std
add
inc
add
in
adc
repnz
sub
xchg
pop
adc
test
sti
push
xor
jmp
mov
jb
aam
js
dec
dec
scas
outs
jbe
xor
adc
not
rcr
or
and
ds
lock
sbb
(bad)
sbb
cmp
pusha
add
mov
jae
add
test
mov
inc
pop
add
test
not
mov
lock
add
inc
das
out
xchg
movs
or
dec
rol
jmp
mov
(bad)
xchg
add
push
fisubr
pop
add
cs
in
fdiv
xlat
xchg
add
imul
test
fabs
or
aam
cmc
lods
dec
mov
or
pop
adc
jne
xor
inc
jne
mov
add
dec
mov
push
or
pop
call
das
out
push
adc
jns
jns
add
add
popa
loopne
daa
sbb
mov
mov
push
push
cmp
inc
or
jmp
inc
(bad)
int3
add
addr16
cmp
popa
xor
loopne
xchg
jecxz
clc
shl
push
loop
loopne
adc
or
jmp
ud0
jbe
xor
ins
icebp
adc
in
fistp
aad
adc
enter
fcmove
push
sbb
mov
mov
mov
scas
xchg
into
add
fstp
add
sti
dec
jne
jge
dec
jne
mul
ins
ss
movzx
xor
pusha
cmp
cmp
xchg
mov
add
retf
fst
test
add
add
xchg
or
test
push
pop
add
or
cmp
or
push
dec
sbb
cmp
push
push
data16
xchg
push
out
and
xor
inc
push
pushf
push
mov
jmp
les
mov
cli
mov
popf
ins
js
cmp
cmp
inc
mov
mov
popf
dec
push
lea
pop
xlat
popa
and
xor
adc
cmp
fs
dec
ins
pop
sbb
ss
add
push
inc
sub
mov
and
aas
push
loope
clc
or
aas
adc
je
dec
je
push
jnp
sub
sti
mov
pop
dec
add
pop
call
pop
cli
push
and
pushf
mov
mov
call
sbb
push
fiadd
inc
test
in
cdq
sub
enter
(bad)
ficom
popa
fiadd
dec
sbb
sub
mov
jle
mov
adc
mul
adc
and
add
mov
jmp
or
mov
add
cmp
dec
mov
and
or
jl
fnstsw
mov
aad
jne
pushf
xor
call
inc
mov
aas
xchg
or
cs
(bad)
in
sbb
fcom
lock
pop
fmul
shr
pop
push
sbb
ins
lods
sbb
push
inc
jle
or
adc
pop
pop
fdiv
xor
shl
pop
adc
add
jne
inc
sbb
test
and
jl
add
push
stos
inc
and
sbb
ret
jne
dec
clc
xor
push
add
test
cmp
cmp
std
xchg
arpl
and
add
out
stos
dec
mov
jns
sbb
pop
in
inc
pop
adc
jmp
das
sbb
leave
mov
imul
add
lahf
pusha
adc
jb
add
cmc
inc
mov
mov
stos
lds
or
sahf
out
and
repnz
fnstsw
mov
pop
jno
(bad)
and
jle
test
add
add
inc
rol
dec
addr16
lds
ja
or
or
xor
pop
or
mov
fadd
cmps
or
or
cmp
imul
sbb
mov
in
sub
fst
sub
cmp
xor
xchg
iret
mov
scas
sub
cs
cmc
pop
jo
sahf
inc
mov
push
jge
push
rcl
sub
mov
add
adc
xchg
xchg
mov
pop
inc
or
and
das
rcr
mov
push
push
adc
call
pop
cld
adc
aam
jno
rdtsc
push
mov
dec
push
sbb
cmps
push
hlt
test
imul
mov
mov
dec
aas
mov
lods
mov
ficomp
pop
sbb
popa
inc
movs
add
pop
jp
cmp
cmps
cmp
sub
inc
mov
test
sbb
push
mov
(bad)
(bad)
jp
ss
jl
clc
adc
daa
(bad)
jne
mov
push
and
mov
xchg
xor
mov
in
jbe
xor
shl
jne
punpckhwd
dec
cmp
cs
inc
inc
inc
enter
dec
push
xchg
loopne
pushf
iret
das
jo
and
ret
popf
xchg
mov
mov
xor
sub
inc
adc
or
push
sbb
ja
rcr
mov
and
les
hlt
rol
out
int3
rol
mov
mov
shl
cld
(bad)
call
ss
(bad)
xchg
add
mov
call
adc
sbb
xchg
pop
shl
sbb
mov
cmp
jle
mov
add
mov
or
jl
xor
adc
idiv
iret
call
dec
clc
push
iret
push
rcr
mov
(bad)
add
(bad)
jmp
push
leave
cmp
xor
mov
or
ins
pop
sbb
inc
add
and
cmps
popa
(bad)
mov
loope
adc
das
lea
xor
mov
inc
mov
pop
jl
call
cmp
jne
inc
mov
mov
(bad)
inc
not
gs
or
js
mov
push
adc
je
or
imul
stos
mov
mov
sbb
adc
fist
sbb
inc
jns
jle
mov
sbb
sbb
or
loopne
jmp
and
ret
sahf
(bad)
popf
adc
jns
mov
xor
add
inc
push
mov
retf
fist
add
inc
in
jne
cmp
jg
test
cli
pop
jne
enter
ret
add
inc
mov
imul
add
push
clc
stos
cli
and
pop
cld
jmp
push
inc
ret
cld
gs
scas
test
sbb
int3
test
add
in
cli
lock
jno
pop
mov
pop
rol
out
or
and
push
jmp
inc
add
dec
and
mov
or
in
fwait
push
in
jne
mov
mov
add
lods
or
dec
add
push
jbe
or
fist
lock
adc
push
mov
mov
push
test
inc
mov
cmp
fdiv
and
(bad)
jne
aam
inc
mov
dec
mov
(bad)
jl
push
inc
call
cmp
daa
push
push
sti
dec
push
sub
and
add
inc
ficomp
je
sahf
retf
fucom
fiadd
mov
sub
jb
and
sahf
inc
xor
in
cmp
push
jl
in
fisttp
clc
mov
push
test
out
push
out
jmp
cmp
call
and
in
inc
inc
scas
push
ret
dec
mov
cld
aaa
fdivrp
jmp
cmp
ja
inc
add
(bad)
adc
push
aas
pop
ja
pop
(bad)
inc
dec
clc
dec
mov
aaa
jnp
jg
cmp
jle
and
fs
jne
mov
add
adc
adc
repz
or
jnp
adc
xchg
icebp
mov
lds
mov
sub
pop
je
mov
mov
adc
dec
cmp
or
lock
ins
add
scas
mov
fwait
pop
and
int
int3
xchg
addr16
adc
adc
inc
pop
jnp
ror
sub
dec
sbb
xchg
pop
int3
mov
and
ror
dec
les
jmp
dec
xchg
xor
mov
test
xchg
gs
cmp
inc
pop
dec
(bad)
shr
mov
test
and
fbld
xor
inc
fcomip
and
sub
push
(bad)
sti
add
add
jge
into
add
sbb
repnz
sub
sar
inc
mov
mov
ins
add
icebp
sahf
imul
mov
cmp
in
or
out
retf
hlt
repnz
shl
aaa
lods
mov
jae
test
add
add
hlt
scas
mov
ret
sbb
loopne
inc
repnz
add
aaa
mov
pop
xchg
sti
cvttps2pi
mov
aaa
or
pop
pop
sbb
mov
lods
push
hlt
neg
adc
pushf
xor
add
add
daa
push
mov
iret
enter
dec
sbb
mov
bound
daa
add
sub
movs
dec
out
lea
adc
sub
inc
dec
pushf
mov
pop
aaa
neg
test
mov
push
adc
mov
(bad)
rol
xor
add
ret
clc
mov
(bad)
(bad)
mov
mov
push
and
jo
and
push
push
cld
sbb
sbb
ror
(bad)
cmp
inc
sar
std
push
pusha
push
push
or
xor
mov
ror
dec
cmp
dec
add
rol
push
push
jle
mov
jge
inc
and
adc
sub
mov
lahf
push
nop
ss
mov
bound
daa
sub
xchg
push
jb
sbb
xchg
in
lods
retf
stos
sti
pop
adc
sbb
jbe
jmp
fild
in
inc
or
mov
scas
mov
in
test
ins
and
and
sbb
jl
adc
xchg
push
or
add
popa
inc
dec
js
mov
mov
and
push
inc
push
jmp
(bad)
loopne
xor
add
ffree
inc
push
inc
mov
sub
outs
enter
xor
fs
or
je
cmp
cmp
push
call
sbb
shr
pop
pop
and
xor
aas
cmps
add
cmp
ja
(bad)
adc
sbb
push
ins
dec
jp
jle
cmps
bound
xor
inc
pop
(bad)
mov
hlt
lock
push
clc
in
mov
add
pop
(bad)
cmps
add
adc
jo
xor
sbb
jo
(bad)
fadd
add
das
call
adc
lea
inc
imul
sub
dec
lea
lds
add
sbb
ficom
push
add
sbb
push
test
add
rol
daa
dec
jne
xor
(bad)
(bad)
adc
ret
push
push
js
fsub
push
idiv
push
lea
adc
test
(bad)
jb
pop
test
mov
(bad)
leave
pop
push
sub
adc
and
mov
add
mov
jge
mov
lahf
or
add
dec
adc
hlt
inc
pop
sbb
add
sbb
cmp
sub
aas
push
int
retf
add
cs
adc
popa
and
ss
outs
cmp
ins
movs
sbb
jmp
add
jno
push
call
add
jl
loopne
add
cwde
loopne
inc
or
movs
adc
fmul
add
fcomp
add
cmp
push
sub
xchg
push
and
fsub
sub
mov
dec
aam
movs
sbb
sbb
ins
(bad)
loopne
sub
(bad)
pop
call
and
sahf
rcl
add
sbb
sar
inc
enter
dec
push
add
mov
in
dec
clc
mov
add
or
push
pusha
add
mov
xchg
or
jnp
push
xor
or
int
jne
mov
add
cmp
pop
push
jmp
xor
mov
push
add
scas
add
add
inc
sub
and
pop
popa
add
mov
mov
xchg
das
ss
bound
sbb
xchg
das
bound
js
push
cmp
pop
daa
or
jae
loope
adc
inc
sub
pop
sub
or
ins
add
xor
or
adc
xor
or
mov
rcr
and
sbb
adc
cdq
add
or
and
ins
jl
push
mov
and
aas
xor
pop
or
inc
das
ins
(bad)
sub
xchg
adc
jne
int3
imul
nop
or
pop
imul
pop
clc
add
cmp
add
aam
shr
xchg
push
push
into
dec
lea
std
and
pop
push
mov
xor
inc
xor
inc
inc
push
dec
jne
or
fstp
imul
adc
jg
imul
adc
je
or
add
inc
dec
mov
clc
dec
movs
pop
and
cmp
mov
or
clc
out
mov
retf
rol
sbb
push
dec
outs
(bad)
and
dec
xchg
mov
inc
sbb
mov
pop
add
push
sar
add
jle
sub
(bad)
pop
add
sbb
and
inc
lahf
test
add
fcom
add
inc
add
popa
data16
movs
outs
loop
fdivr
dec
cld
xchg
test
std
inc
push
mov
inc
call
pushf
push
jae
dec
lea
dec
xor
ret
xchg
inc
mov
cmp
xchg
sbb
xor
adc
cwde
or
ins
jle
add
dec
push
fsub
or
inc
ficomp
or
dec
imul
or
out
or
inc
fwait
ror
clc
mov
and
add
mov
imul
xor
ret
add
lea
fistp
add
cs
outs
and
jo
lods
mov
adc
fs
and
outs
inc
js
adc
xchg
push
cmp
ja
pop
mov
add
mov
push
aad
ins
mov
js
icebp
sti
mov
push
sbb
push
sti
sbb
and
inc
sbb
sbb
aaa
nop
add
jo
fdivr
das
sub
inc
inc
add
jne
push
mov
add
mov
add
push
aas
pop
jae
fadd
sbb
jl
test
ss
sub
push
movs
xor
inc
jl
dec
xor
ffreep
data16
test
iret
cmp
xchg
fs
sar
loopne
ins
fsub
pop
adc
adc
and
inc
ret
jle
dec
mov
pop
lock
inc
inc
or
add
inc
mov
sub
xor
mov
push
cmp
cmp
test
cli
mov
adc
fnstenv
jno
or
lods
nop
test
mov
ret
jno
push
sahf
lods
je
xor
cmp
pop
cwde
lock
xor
dec
add
fiadd
add
lahf
push
dec
and
pop
inc
cli
adc
clc
sub
pop
jge
rcl
nop
xchg
retf
push
jbe
mov
lahf
rcr
pop
test
mov
jmp
adc
jne
imul
mov
fild
jne
xor
cmp
add
xchg
mov
xor
mov
inc
bound
popa
add
push
jge
inc
jno
cmp
pop
(bad)
jnp
adc
icebp
mov
pusha
push
mov
loop
movs
cmp
add
repz
sbb
jmp
arpl
mov
sbb
arpl
je
lea
or
or
outs
xor
or
inc
and
or
rcl
push
mov
or
push
nop
dec
add
(bad)
cmp
adc
(bad)
jg
adc
and
dec
dec
bound
cld
push
pop
cmp
bound
add
jo
cmp
iret
xchg
mov
mov
cmps
std
and
adc
lods
enter
les
fsubr
cmp
mov
pop
xchg
push
inc
lock
mov
dec
push
pop
(bad)
jne
arpl
sub
mov
and
inc
sub
in
xor
adc
bound
retf
inc
and
xor
out
mov
cmp
sub
xor
aaa
add
adc
lahf
retf
dec
pop
in
or
bound
dec
adc
dec
popa
(bad)
dec
into
jle
(bad)
dec
enter
sub
inc
cmp
or
test
mov
add
mov
test
gs
ss
xchg
adc
sub
xor
cmps
add
icebp
jge
add
ret
test
les
das
pushf
stc
mov
ds
cmp
je
sbb
test
cmp
pop
jg
add
or
add
sub
std
test
dec
add
mov
and
test
fild
inc
xor
ret
bound
sub
dec
(bad)
dec
mov
jnp
sub
add
out
cld
pusha
mov
imul
sub
out
and
add
dec
jo
add
fst
push
imul
dec
das
into
or
sub
sub
or
ror
mov
add
fist
add
pop
cmps
add
enter
loope
push
pop
lods
cmp
pop
mov
or
test
and
lods
or
pop
fcmovbe
push
push
mov
or
mov
mov
add
loop
call
mov
mov
inc
and
add
jmp
mov
jno
ja
pop
add
outs
aaa
sahf
aaa
cmp
sub
push
mov
les
js
das
or
test
xchg
inc
std
inc
xor
ins
lock
lods
fiadd
mov
jae
jo
cmp
gs
icebp
add
and
add
push
je
push
aam
inc
loopne
sar
in
icebp
dec
cmp
jmp
rol
nop
das
xor
dec
xor
push
mov
test
std
add
adc
add
dec
jecxz
adc
push
inc
call
adc
es
je
jmp
sub
dec
mov
xor
push
pop
test
mov
adc
adc
inc
mov
dec
ret
mov
push
adc
jbe
ret
adc
or
xchg
jo
cmp
sbb
(bad)
push
mov
sti
add
aas
ja
mov
pop
push
mov
jl
mov
push
ja
pop
ja
jo
add
clc
xchg
or
cmp
pop
adc
add
pop
mov
inc
mov
fld
and
xchg
dec
aaa
in
psraw
push
(bad)
fld
js
fwait
jb
test
mov
mov
call
pop
cld
adc
imul
rcr
loope
or
dec
mov
test
inc
mov
clc
ret
sub
adc
adc
test
dec
and
pop
mov
call
mov
jnp
and
pop
fadd
inc
pop
sbb
test
in
push
mov
adc
sar
inc
add
ss
push
push
push
lds
sub
pop
add
pop
push
or
xchg
add
mov
popa
test
fdiv
fcomi
sar
xor
inc
cmp
jg
dec
adc
aam
push
adc
xchg
add
ja
adc
fwait
shr
call
mov
push
mov
dec
mov
jl
mov
lahf
jmp
sub
sub
add
adc
jmp
adc
and
cmp
call
aaa
push
or
shr
mov
call
cmp
lea
mov
jmp
js
add
sub
shr
mov
int3
ret
shr
loopne
fsub
aam
jl
stc
mov
aam
inc
add
call
mov
pop
aam
push
or
dec
adc
loop
in
ret
ds
or
in
mov
ss
jmp
out
loopne
cmp
dec
sub
sbb
nop
(bad)
movs
xchg
and
jns
jp
aas
or
xchg
push
dec
pop
out
push
add
push
mov
mov
push
cld
and
jb
cmp
je
jmp
xor
inc
mov
sub
jmp
and
sbb
and
imul
je
fwait
cmps
or
push
and
or
push
rol
nop
daa
mov
inc
adc
scas
mov
lods
xor
cmp
fild
adc
add
cmp
adc
and
ret
clc
les
mov
lods
in
or
pusha
les
pop
sbb
mov
mov
or
jno
les
pusha
jne
sbb
(bad)
(bad)
xor
sar
pushf
add
add
test
or
(bad)
clts
pop
bound
sub
pop
adc
fidiv
clc
mov
adc
mov
les
enter
sbb
lods
sbb
sub
or
lea
xor
mov
mov
int
dec
stc
mov
mov
sbb
mov
mov
pop
pop
mov
bound
mov
sbb
out
adc
xor
gs
sbb
cwde
cld
lods
and
mov
jp
cmp
jno
into
or
rcl
std
jo
adc
mov
xchg
jg
push
sbb
imul
xchg
add
rol
inc
clc
out
and
shrd
nop
pop
inc
inc
lock
sbb
push
cdq
lods
in
ins
push
push
ror
inc
sbb
push
(bad)
pusha
xor
jbe
ins
push
gs
icebp
xchg
div
fcomp
mov
mov
pop
scas
fisub
test
mov
jbe
leave
js
mov
add
xor
inc
mov
fld
and
sbb
adc
sahf
fld
inc
mov
jnp
(bad)
mov
mov
mov
pop
inc
cld
loopne
add
mov
mov
test
adc
mov
test
shl
nop
test
inc
call
pop
neg
ffreep
adc
inc
jbe
leave
aam
inc
xor
das
pop
add
cld
add
ret
and
pop
adc
inc
push
inc
dec
clc
pop
cmp
jne
pop
and
adc
xchg
sbb
sbb
out
mov
cmp
out
inc
xor
mov
push
push
shr
mov
ficom
push
or
xor
pusha
jne
lods
sub
adc
xor
bnd
jmp
jo
test
lock
jne
adc
mov
mov
mov
(bad)
mov
sub
jo
mov
pop
rol
jne
clc
test
sub
in
cli
mov
adc
outs
sahf
adc
call
jbe
xchg
sub
int3
jmp
fcom
or
test
lock
sbb
mov
dec
or
loopne
not
sbb
mov
adc
jae
js
or
jmp
or
mov
arpl
pop
and
mov
lahf
or
js
xchg
and
cmp
jg
xor
jmp
fstp
fwait
adc
gs
fld
and
adc
fisttp
sbb
adc
push
push
in
(bad)
xchg
shl
or
push
xlat
(bad)
in
pop
xchg
in
xchg
lock
mov
mov
sbb
enter
push
test
dec
aas
mov
add
mov
cmp
and
pop
adc
ja
add
add
retf
sub
jmp
or
cmp
aaa
mov
jno
or
push
jmp
stc
mov
fdivp
add
inc
pop
or
and
push
clc
adc
aaa
fmul
pop
aaa
pop
xchg
xchg
pop
xchg
and
adc
js
dec
mov
in
ins
lds
jbe
xchg
ret
(bad)
cmc
and
frstor
push
fisttp
sbb
jmp
ja
sbb
or
adc
cdq
xchg
add
adc
cmp
or
adc
jns
fs
mov
rol
outs
lock
push
jne
add
add
or
shl
(bad)
jg
add
dec
push
and
mov
jae
add
rcr
sti
cmp
add
cmps
jne
sub
retf
push
push
mov
xor
jle
rol
push
add
lock
and
mov
out
and
pop
mov
and
push
out
stos
add
mov
mov
test
cmp
push
gs
pcmpgtd
adc
push
cdq
iret
ret
push
xor
cmp
inc
ins
jge
sbb
lock
js
mov
xchg
and
(bad)
in
(bad)
xor
inc
or
test
push
mov
push
and
(bad)
push
out
adc
inc
imul
add
lock
or
popa
es
arpl
fmul
pop
push
mov
ror
mov
ins
add
cmp
setge
or
test
xor
or
stc
stc
push
loopne
sub
cmp
inc
ret
cmp
adc
add
xor
pusha
es
jle
jo
xor
inc
sbb
sti
sub
mov
add
dec
and
jle
sbb
or
loope
je
jmp
test
jg
jmp
lds
cmp
or
adc
xor
sbb
rol
popa
data16
inc
jmp
jge
dec
fwait
adc
daa
xchg
add
in
outs
aad
sar
cmp
mov
push
and
or
mov
sar
dec
dec
(bad)
adc
cmp
jl
or
sbb
dec
inc
xor
jno
cmp
cmp
sbb
ror
mov
xchg
and
pushf
popa
stos
mov
and
xchg
xor
inc
and
sbb
test
cmp
jne
ret
pop
xor
push
mov
jg
inc
add
sub
ret
dec
xor
jg
fimul
in
push
dec
mov
xchg
push
jo
xchg
mov
and
jle
mov
sbb
ret
sti
shr
ret
and
add
loop
adc
or
retf
sti
adc
enter
loopne
mov
into
mov
aad
sub
outs
push
push
ret
cmp
xchg
sub
cmp
adc
push
inc
add
in
ret
xchg
test
add
daa
aam
jb
xor
pop
sub
or
movs
add
in
test
push
add
in
mov
sar
add
xchg
dec
xchg
mov
adc
daa
leave
xlat
sahf
sbb
pop
sete
adc
jne
test
add
inc
xor
aas
adc
and
add
push
leave
cmp
jg
inc
mov
and
jne
sbb
aaa
adc
sbb
pusha
es
jbe
push
or
xchg
imul
add
mov
mov
shr
aas
sub
add
or
xchg
hlt
scas
inc
shl
mov
jne
and
pusha
cmp
das
retf
mov
ficomp
adc
sub
ja
sbb
sbb
xchg
aam
and
xor
inc
loopne
in
pop
ror
je
mov
jge
in
push
test
sti
pushf
movs
sub
cmp
push
mov
aaa
pop
sub
inc
test
fadd
movzx
mov
push
lock
and
sbb
retf
jne
push
dec
jge
or
pop
jne
pop
xchg
mov
cld
mov
cs
add
add
or
std
sbb
sbb
ror
adc
add
inc
movs
mov
or
lea
or
add
add
jmp
ja
movs
mov
mov
add
add
pop
inc
(bad)
rol
add
sbb
js
push
pop
outs
jecxz
xchg
js
xchg
xor
mov
or
mov
mov
fs
mov
xchg
inc
mov
xchg
or
add
popa
sub
loopne
cmp
ja
shl
inc
or
fcom
cmp
cwde
rcl
xchg
in
cmps
ret
adc
lock
add
in
sub
ret
jmp
sbb
ja
rol
cmp
test
out
sbb
mov
hlt
add
ja
dec
in
mov
xor
xor
or
add
mov
mov
stc
push
loopne
and
pop
test
add
test
and
adc
xchg
mov
jle
push
jl
mov
adc
nop
mov
adc
pavgw
xchg
jo
inc
loop
xor
xchg
pop
data16
xor
test
add
xor
xchg
push
test
aas
shr
arpl
mov
cmp
scas
in
adc
adc
in
jb
sub
jge
cmp
dec
jmp
jle
ss
mov
inc
pusha
adc
pop
(bad)
clc
cmp
or
mov
mov
dec
jne
out
push
cmps
pop
rcr
mov
inc
pop
dec
fld
pop
inc
ret
cmp
mov
or
jg
adc
and
push
jae
cmp
mov
imul
or
movs
add
or
mov
stos
push
in
jo
sbb
or
dec
add
add
jl
xor
test
mov
sub
xadd
jl
mov
jle
pop
or
pop
adc
push
xor
jle
jne
push
hlt
add
clc
push
push
push
push
and
add
add
pop
ins
mov
jbe
mov
or
cmps
or
loope
inc
add
frstor
or
and
or
push
mov
gs
dec
add
jo
sub
nop
push
les
mov
test
and
call
add
or
popa
je
inc
(bad)
adc
jo
or
clc
data16
cmp
es
repnz
pop
adc
jne
cmps
addr16
pop
jge
test
les
mov
or
inc
retf
popa
and
add
addps
outs
add
dec
mov
push
pop
inc
inc
bound
add
mov
push
add
pop
inc
pop
retf
shl
shr
or
mov
pop
or
push
push
xor
ins
jmp
or
(bad)
add
add
cld
(bad)
fild
rol
jne
cmp
mov
inc
jl
pop
jg
or
xor
inc
jmp
pop
jle
adc
cmps
pop
push
jp
xor
mov
push
inc
sbb
and
cmp
mov
push
fadd
sbb
sar
ror
imul
jbe
mov
push
sbb
mov
add
sbb
test
mov
xchg
cmp
js
retf
mov
mov
sub
hlt
cmp
or
test
fcom
call
test
cmp
dec
loopne
dec
test
jl
inc
xor
lea
adc
clc
shr
push
adc
add
xor
pop
in
clc
push
enter
cmp
aas
jmp
mov
test
rol
not
es
add
jo
mov
ret
pop
sti
inc
or
inc
push
xor
add
and
ds
je
add
clc
inc
dec
jne
adc
push
outs
sbb
pop
test
sbb
adc
xchg
dec
jmp
add
add
sbb
push
xor
mov
adc
les
lahf
xchg
push
add
push
sbb
pusha
ds
fsubp
loopne
loopne
daa
xor
jo
loope
(bad)
jne
in
add
mov
adc
adc
adc
mov
add
imul
inc
xchg
inc
jae
lock
pop
call
mov
ss
icebp
icebp
call
and
mov
(bad)
test
test
mov
mul
fild
ficom
inc
cmp
ins
cli
rcr
addr16
mov
leave
sbb
and
aas
and
pop
mov
sub
add
inc
mov
add
fistp
adc
pop
push
and
or
pop
push
gs
adc
mov
pushf
or
add
or
xchg
mov
mov
call
add
inc
cmp
jne
movzx
(bad)
and
mov
repz
outs
mov
jle
mov
sti
int3
fisub
(bad)
xor
and
and
lock
mov
push
mov
mov
inc
xchg
ins
test
sub
cmp
jne
add
xchg
jo
and
cmp
inc
dec
mov
dec
mov
lock
add
pop
mov
add
jp
push
add
shr
int
ret
out
pop
add
and
xchg
jmp
sbb
jge
movs
inc
and
xchg
add
sar
mov
in
jmp
xor
push
loopne
push
inc
adc
sbb
add
nop
repnz
jae
dec
xor
sub
test
mov
adc
aas
add
sti
add
adc
imul
(bad)
jo
xchg
retf
ins
dec
pop
nop
adc
cwde
in
pop
push
aaa
call
pop
adc
sub
inc
sbb
mov
xchg
jp
sub
hlt
jnp
jge
xor
inc
push
jmp
movs
cmp
out
or
lahf
add
pop
xchg
inc
sub
cmps
inc
fadd
test
push
(bad)
mov
sbb
fsubr
xchg
lock
mov
xor
mov
dec
lock
xchg
dec
out
jae
dec
cmp
sete
inc
xchg
adc
dec
push
arpl
jg
inc
and
jnp
sar
js
inc
add
jg
xchg
or
jnp
retf
inc
jmp
es
popa
xor
or
inc
pop
add
push
pop
adc
cmp
inc
and
cmps
inc
sbb
add
jmp
mov
shl
add
xchg
(bad)
lock
push
mov
inc
(bad)
xchg
adc
sub
dec
inc
std
inc
aaa
mov
jecxz
xchg
rol
jne
xchg
mov
sbb
adc
sub
les
jo
rol
(bad)
mov
mov
inc
dec
jmp
loopne
jg
push
add
fs
rcr
movs
dec
push
rol
push
push
add
mov
cmp
es
sbb
mov
adc
cmps
and
ins
fild
leave
cmp
lods
rol
into
cdq
inc
call
nop/reserved
jbe
or
sub
sub
aad
jns
jb
or
leave
xor
(bad)
xlat
xor
jo
sbb
push
add
int3
add
pop
lahf
add
pop
and
ficomp
add
mov
sub
sub
add
and
cmc
sahf
dec
mov
ins
aam
ds
mov
sbb
dec
loopne
fmul
and
mov
hlt
inc
jmp
push
add
mov
push
cmp
ret
scas
add
mov
cmc
push
imul
or
(bad)
xor
iret
mov
inc
adc
dec
mov
js
clc
push
ret
ret
lea
jge
sbb
push
hlt
in
push
(bad)
mov
test
test
mov
add
and
adc
jne
shr
push
sub
in
arpl
inc
fs
inc
ret
popf
or
scas
aam
mov
sar
or
in
inc
enter
mov
adc
mov
push
mov
or
ror
dec
mov
push
fidivr
xor
add
or
addr16
cld
stos
jo
pop
sub
adc
pop
sub
mov
cld
cmp
(bad)
and
inc
movs
add
xchg
xchg
inc
add
dec
dec
fdiv
cmps
add
jecxz
add
xor
add
shl
pop
mov
inc
sub
mov
ins
push
fs
push
adc
push
cdq
push
cmp
loope
inc
xlat
add
inc
clc
adc
adc
xor
adc
add
fst
nop
mov
inc
fstp
repnz
sub
and
add
dec
pop
test
mov
data16
repz
ins
xchg
and
cmc
sub
add
mov
mov
ret
adc
or
cmp
add
push
aad
xchg
adc
dec
pop
or
inc
or
fmul
jo
aas
mov
mov
das
and
test
or
adc
xchg
adc
add
sub
out
sbb
adc
nop
daa
aas
lahf
ror
and
(bad)
loope
leave
mov
add
push
xor
dec
cmp
aaa
inc
add
sbb
popa
aad
mov
(bad)
mov
mov
pop
jp
xchg
lahf
mov
xchg
cmp
mov
jb
mov
cmp
js
ror
loopne
pop
mov
push
or
loop
shl
inc
or
inc
push
rol
inc
ret
pop
adc
out
xchg
xor
add
push
fmul
sbb
or
cld
jge
mov
inc
adc
xchg
ins
daa
mov
popa
inc
adc
nop
sub
sub
and
jle
pop
pop
jo
sbb
dec
xor
js
jg
out
pop
inc
or
iret
pushf
cmp
jge
dec
mov
dec
fdivr
and
mov
xchg
add
add
and
std
push
sahf
leave
cmps
sub
jl
inc
or
sub
sbb
adc
inc
cld
mov
jle
mov
xchg
sti
pop
fdivr
xor
in
frstor
sub
popf
jl
add
push
push
pop
pop
movs
lea
inc
and
jp
movs
inc
test
scas
cmps
push
js
cmp
mov
mov
(bad)
push
clc
mov
and
push
or
call
inc
das
xor
mov
popf
lods
inc
jns
test
push
push
push
in
xor
push
mov
add
dec
nop
test
je
mov
mov
pop
xlat
dec
cs
mov
or
xchg
and
or
cmps
sub
sbb
add
mov
dec
or
ss
addr16
push
aaa
or
inc
scas
xchg
rcl
push
add
dec
add
push
mov
sbb
adc
sbb
add
nop
arpl
pop
xor
sub
mov
cmps
cmp
(bad)
(bad)
mov
mov
mov
cmp
ja
(bad)
neg
loopne
bt
les
jecxz
push
les
or
pop
pushf
sbb
test
lock
or
inc
scas
cdq
sub
fistp
or
mov
push
clc
push
pop
(bad)
pop
sbb
xchg
adc
xor
add
jle
jmp
push
sub
jle
enter
xor
sub
mov
out
add
adc
push
and
dec
add
cld
cmp
xor
pop
or
adc
adc
xor
xor
adc
push
push
movzx
int3
push
and
adc
adc
dec
push
lahf
shl
sub
dec
ret
dec
pop
pop
or
sub
add
jo
add
std
pop
clc
call
xlat
mov
ins
jo
ja
clc
lds
mov
mov
ret
nop
pop
pop
mul
ret
lds
or
imul
cmps
enter
rol
cmp
push
mov
inc
xchg
xchg
(bad)
loopne
cmp
dec
mov
push
adc
test
addr16
add
fist
lahf
pop
push
xor
or
xchg
(bad)
pop
test
adc
inc
cwde
lock
pop
xchg
jmp
xchg
add
addr16
jl
mov
inc
and
inc
pop
inc
jno
or
sbb
mov
xor
inc
fist
cmp
sub
jge
inc
jo
jge
mov
xchg
lock
(bad)
sbb
adc
fsubr
xchg
sub
pop
xchg
sub
inc
sub
and
(bad)
call
xor
add
push
push
loope
aad
mov
sub
pop
in
or
sbb
mov
jae
dec
ss
lods
cwde
bound
scas
mov
push
ret
mov
outs
jp
add
pop
push
mov
cs
xchg
sbb
outs
daa
popa
scas
xchg
lock
nop
pop
and
pop
dec
rol
int3
xor
jmp
push
or
fimul
sbb
mov
jno
pop
gs
inc
cmp
(bad)
scas
push
mov
or
lods
sahf
add
mov
jo
imul
sbb
rcl
push
lahf
push
in
or
sbb
jne
and
or
cmp
xor
inc
loopne
adc
mov
loopne
sbb
add
rol
ret
and
adc
out
jg
mov
jo
cmps
lods
cdq
rcr
outs
add
xor
mov
clc
push
outs
sub
xchg
pop
and
sbb
imul
ret
punpcklbw
jmp
out
test
sbb
pushf
std
and
jmp
popa
lock
jmp
sub
pop
dec
pusha
adc
ins
add
push
test
outs
arpl
ins
ds
aad
in
push
mov
adc
nop
(bad)
mov
movs
movs
pushf
pushf
inc
nop
xchg
inc
cwde
cwde
lahf
pop
lahf
iret
dec
nop
jne
and
sub
clc
adc
and
sub
rcr
out
ret
jg
in
test
pop
lahf
dec
bound
push
sbb
and
inc
sub
mov
rcr
pop
fbstp
add
call
nop
inc
cwde
pop
xchg
cmp
fwait
mov
out
pop
fsubr
mov
add
pop
cld
mov
sbb
sbb
inc
add
mov
or
inc
mov
jne
or
imul
add
retf
add
add
adc
js
mov
lods
icebp
adc
test
inc
xchg
mov
outs
add
xor
lea
mov
or
(bad)
out
add
lods
xchg
xchg
in
loopne
inc
pop
or
loopne
adc
and
js
lods
lock
dec
test
aaa
mov
mov
ss
cs
mov
inc
pop
dec
test
outs
fadd
fsubr
out
in
mov
fcomp
adc
in
mov
add
test
les
mov
pop
call
ins
and
popf
rcl
dec
and
mov
ins
mov
call
add
or
jecxz
inc
inc
jp
mov
gs
lods
xchg
jo
sbb
cld
leave
push
pop
cmps
xor
pop
and
mov
or
jo
and
inc
add
aad
popf
shl
add
mov
xor
icebp
(bad)
xlat
retf
or
inc
jl
sbb
adc
push
adc
daa
xchg
cmp
jge
xor
jecxz
dec
fwait
xor
inc
xchg
add
(bad)
xor
fstp
dec
adc
retf
xchg
nop
cmp
ins
add
or
test
pop
push
pop
call
stc
nop
shl
dec
mov
push
and
inc
jno
fst
pop
rol
xor
sub
mov
loop
jmp
mov
and
sahf
pusha
mov
pop
cmp
mov
lods
mov
lds
stc
(bad)
jge
add
and
ins
dec
fbld
jp
fild
mov
push
or
cmp
repnz
jne
pop
adc
iret
cmp
shl
jl
jns
(bad)
cmp
jle
in
mov
add
adc
sub
clc
cmp
scas
cmp
pusha
ds
add
ret
loope
test
stos
arpl
arpl
cwde
mov
mov
or
fadd
in
call
rol
je
adc
add
iret
aaa
stc
pop
sub
xor
sti
das
mov
sbb
clc
cmps
pop
inc
test
sub
stc
mov
cmp
pop
pop
adc
mov
or
lahf
mov
pop
and
jne
bound
push
imul
cmp
add
imul
mov
ins
fstp
push
pop
push
mov
jnp
push
les
aas
push
push
rcl
lgs
iret
or
cmp
iret
sti
pushf
cwde
sbb
pushf
adc
or
lds
movs
test
enter
cmp
movs
test
pushf
sbb
mov
adc
xchg
inc
sub
sub
jmp
push
xor
pop
mov
pop
push
daa
mov
fmul
in
push
inc
sti
mov
call
ret
jne
add
or
dec
and
sub
inc
and
clc
xchg
or
add
pop
pop
jl
sbb
adc
add
jnp
(bad)
add
shr
(bad)
fucomp
push
dec
hlt
mov
sbb
inc
xor
inc
pop
mov
ficom
lahf
mov
push
mov
aad
ss
adc
xchg
mov
push
push
mov
sti
xor
and
fcomp
aaa
inc
add
retf
inc
rep
push
shl
mov
xchg
sbb
jecxz
pop
pmaxub
test
and
xchg
scas
push
jmp
ret
mov
pop
adc
mov
mov
push
mov
adc
push
sub
cmp
inc
sbb
xchg
je
and
xchg
hlt
mov
je
or
mov
or
inc
adc
imul
les
xchg
adc
xor
and
int3
or
xlat
sbb
mov
out
or
sar
mov
xchg
xchg
imul
mov
xchg
mov
sbb
mov
mov
inc
mov
xor
or
mov
pop
xor
or
dec
mov
mov
dec
mov
pop
add
mov
mov
inc
ror
mov
ret
jg
rcr
jae
loop
jb
leave
out
mov
jle
mov
inc
add
and
add
xlat
retf
test
pop
mov
cld
xchg
test
test
add
jle
add
sub
mov
nop
adc
xchg
xchg
retf
pop
sub
test
add
sbb
lea
ds
inc
xchg
push
mov
pop
mov
rol
js
xor
xor
and
aad
test
pop
outs
and
dec
dec
or
sub
inc
mov
mov
ret
loop
jbe
mov
mov
or
or
inc
sub
mov
js
retf
sbb
jmp
jo
add
je
mov
and
adc
xchg
xchg
and
push
mov
dec
test
jl
inc
retf
jmp
std
fistp
inc
out
or
mov
sbb
fadd
xchg
add
xlat
cld
shl
sub
mov
add
enter
lock
and
adc
icebp
call
out
and
dec
and
inc
adc
jo
adc
out
xchg
and
sub
dec
retf
cmps
fs
lock
test
dec
mov
or
rol
repnz
das
jle
rcl
add
fadd
bsr
in
lods
sub
scas
lds
test
scas
ja
test
(bad)
not
out
add
lea
stos
shl
mov
push
stos
fadd
aas
sbb
or
xor
pop
inc
loopne
adc
ret
or
je
sysexit
popf
popa
jmp
(bad)
rol
cmp
jne
sub
mov
test
pushf
xor
test
add
mov
xor
dec
push
dec
and
shr
xchg
ret
push
les
pop
sub
xor
inc
fwait
lahf
aam
iret
jg
test
mov
jl
ins
(bad)
out
push
call
cmp
in
out
jmp
sub
movs
adc
add
sar
pop
outs
sbb
dec
mov
or
add
mov
test
push
push
les
inc
nop
mov
inc
ja
jl
push
mov
nop
shl
add
dec
out
or
in
mov
add
sbb
mov
jl
fwait
sbb
push
inc
shr
je
and
dec
(bad)
addr16
pop
rol
fs
adc
sar
jecxz
push
sbb
in
add
call
xor
mov
mov
jmp
jl
nop
or
pop
add
and
test
adc
stos
int
inc
div
cmp
xchg
ins
call
cmp
cmp
sub
cmp
in
das
mov
mov
and
out
outs
cmp
adc
repnz
mov
sahf
xchg
iret
enter
fadd
adc
cld
ficomp
aas
sub
cwde
push
and
popa
jg
ins
mov
fmul
mov
jl
pop
add
mov
(bad)
pop
and
cld
adc
mov
fucomip
cmp
lock
push
in
mov
call
test
mov
loopne
enter
rcr
(bad)
mov
shl
repnz
sbb
mov
aam
mov
cwde
ja
push
and
mov
fild
mov
inc
mov
mov
das
lods
push
or
test
in
sbb
mov
mov
sbb
pushf
ret
xchg
or
out
xchg
jb
push
repnz
push
clc
(bad)
mov
int3
ror
les
aaa
sbb
daa
mov
je
pop
dec
push
xor
mov
out
dec
pop
out
ret
sahf
cmps
ret
rcr
jne
push
xchg
dec
movs
xchg
rcl
(bad)
std
xchg
jne
test
mov
push
mov
fist
pop
jl
je
adc
sbb
je
in
test
pop
xchg
push
dec
in
nop
outs
push
cld
mov
jae
sti
sbb
std
adc
inc
adc
inc
xchg
ret
stos
sub
test
push
out
mov
push
push
fisttp
leave
rol
sbb
or
inc
push
pop
add
dec
lock
gs
test
rol
add
jg
or
ss
jecxz
aaa
or
pop
ins
sbb
or
add
lock
and
sub
or
xchg
or
xchg
sub
nop
int
rol
daa
pop
sbb
jg
retf
mov
or
jg
dec
ss
cmp
and
daa
mov
sbb
add
ret
scas
xlat
ret
inc
push
push
push
dec
dec
gs
xchg
sub
adc
dec
xlat
xchg
ror
add
fs
push
outs
enter
or
pushf
iret
xchg
ret
or
fdiv
jecxz
and
ss
xchg
loopne
jo
sbb
mov
iret
nop
or
or
push
jae
jb
movs
cwde
mov
adc
sbb
inc
add
xor
add
adc
jmp
dec
add
xchg
mov
lock
and
add
test
fimul
inc
or
xchg
push
jg
daa
popa
and
jle
and
push
lds
add
neg
in
push
pop
push
jp
mov
inc
xor
xor
or
mov
xor
ret
or
sbb
addr16
int
and
dec
push
stc
test
jl
(bad)
push
inc
enter
mov
adc
inc
inc
push
mov
leave
add
push
nop
and
push
dec
inc
ds
mov
cmc
adc
call
push
mov
adc
frstor
xchg
lahf
int3
pop
lods
lss
cld
les
or
or
mov
pop
ja
lods
jae
xlat
pop
xor
jo
stc
lods
retf
fwait
or
mov
adc
jbe
movd
clc
inc
imul
mov
pusha
jbe
inc
and
cli
imul
push
sbb
pmuludq
fisub
jge
test
mov
add
mov
cmp
scas
je
adc
and
sti
fisub
mov
and
pop
jne
mov
push
xchg
pop
or
pop
in
adc
mov
mov
or
ret
push
cs
aaa
adc
mov
mov
mov
enter
lahf
mov
adc
lea
and
and
add
test
sub
sbb
cdq
ss
fist
fwait
add
and
or
xchg
push
and
je
xor
ret
jnp
xor
test
jmp
stc
ds
add
lea
fimul
mov
js
sbb
adc
add
clc
clc
sub
jno
adc
cmp
imul
adc
xor
ror
add
cmp
xor
fld
jo
jmp
enter
pop
inc
scas
xchg
or
adc
pusha
shl
fxch
push
enter
imul
in
pop
push
sbb
int3
mov
xchg
xchg
push
inc
add
add
xchg
or
fcomp
add
clc
push
stc
pop
int
sub
add
add
dec
movs
adc
gs
aaa
pop
mov
jp
dec
and
mov
and
xor
or
or
stc
jge
push
sub
jo
js
int
inc
add
call
add
add
hlt
xor
mov
cmp
loopne
daa
mov
xor
add
jecxz
xor
loopne
cmp
nop
add
dec
cld
(bad)
loopne
xor
lock
pop
adc
jno
and
addr16
add
pusha
shl
jns
and
loopne
push
imul
ret
iret
and
push
push
ret
dec
adc
mov
and
add
loop
xor
mov
and
dec
call
and
inc
cwde
lock
hlt
test
and
dec
xor
cmp
add
rol
fs
enter
retf
dec
fcom
dec
xchg
retf
loopne
pop
call
sbb
clc
sbb
jb
out
leave
or
and
and
retf
dec
in
sub
repz
dec
xor
in
dec
pop
xor
push
cmp
outs
mov
add
jne
je
or
or
jp
dec
out
inc
js
or
adc
adc
movlps
ret
push
and
dec
or
dec
jne
(bad)
psubusw
fincstp
dec
imul
cmovg
rcl
in
out
pop
outs
jb
inc
ins
jo
xor
shr
clc
bound
jb
push
pop
cmp
and
enter
jns
inc
outs
outs
ins
inc
jae
push
imul
pop
dec
add
(bad)
pop
xchg
add
call
jb
adc
adc
and
mov
inc
sbb
cli
or
and
pop
pop
adc
jp
jne
or
sub
xchg
aaa
mov
icebp
push
clc
pop
jle
stos
idiv
and
mov
je
int3
fstp
ins
pushf
div
pop
call
shl
add
push
imul
arpl
ror
(bad)
inc
push
push
fsub
inc
push
sbb
dec
rol
or
inc
scas
add
sub
cmp
cli
mov
mov
add
ficom
lods
push
cld
inc
push
cmp
dec
or
mov
cmps
lods
jecxz
ds
movnti
mov
push
dec
push
cmp
in
sbb
clts
add
push
maskmovq
rcl
sub
sete
jae
add
or
(bad)
(bad)
add
(bad)
sub
adc
add
adc
adc
push
stos
mov
cli
push
sub
add
inc
push
fidivr
arpl
(bad)
(bad)
and
imul
and
fs
dec
sbb
add
pop
test
cmps
out
test
push
popa
adc
add
iret
adc
push
xor
add
popa
jb
push
sbb
aaa
aaa
add
jns
seto
mov
add
push
xor
xchg
cmps
add
or
inc
inc
shl
ins
cmp
je
jg
test
mov
pop
sbb
jo
mov
add
mov
push
mov
or
jb
dec
jo
adc
mov
test
and
fucomi
sub
inc
pop
push
stos
add
jl
nop
add
or
xchg
adc
adc
ins
scas
xchg
pop
scas
jmp
rol
add
or
call
mov
jo
daa
pop
sub
add
add
aad
push
ror
adc
int3
push
ror
pop
add
push
movs
or
shr
shr
daa
inc
leave
jns
je
pusha
mov
jbe
sbb
jbe
and
(bad)
outs
imul
mov
inc
retf
mov
jg
push
mov
retf
ja
nop
shl
mov
ins
and
sbb
shl
add
or
sbb
hlt
hlt
sahf
out
mov
cs
cld
mov
addr16
out
retf
fsub
sbb
or
sbb
pop
mov
mov
xchg
fidiv
lock
push
fld
sub
inc
add
test
aaa
loopne
cmp
fwait
int3
push
jo
push
jl
adc
push
mov
push
push
stc
addr16
xchg
movups
ficom
ja
test
cmp
push
dec
inc
outs
inc
jne
arpl
jne
mov
test
cli
mov
pop
xor
add
jne
sub
and
add
cmc
fs
add
jmp
fiadd
stos
iret
sbb
dec
outs
adc
sub
je
lods
ja
sti
loope
sub
push
lahf
or
jge
adc
or
adc
retf
pusha
std
mov
xchg
aam
unpckhps
jns
data16
(bad)
jmp
int
push
lea
push
lahf
push
cmc
pop
inc
or
or
xchg
xchg
xchg
fcmovnb
lods
fistp
pushf
pop
js
jle
cdq
cli
cmp
hlt
mov
push
out
(bad)
mov
adc
cmp
aaa
push
mov
jg
pop
cmp
ds
cmp
jg
inc
cmp
(bad)
mov
xor
xor
in
sbb
inc
ja
fstp
hlt
das
cli
ja
push
xchg
or
add
inc
(bad)
fnsave
in
add
in
ja
ffree
mov
mov
mov
jmp
xor
inc
lods
pop
or
fild
cmp
sbb
push
loopne
outs
pop
jo
jbe
pop
mov
scas
inc
popa
xchg
jg
ficom
push
inc
push
sub
push
pop
xor
adc
das
add
and
cmp
or
xor
jmp
sbb
shr
bnd
mov
adc
xlat
fisttp
cmp
jae
dec
add
rcr
lods
lss
adc
cmp
xchg
xchg
or
cmp
push
adc
pop
push
adc
jb
adc
and
add
rol
and
fs
frstor
in
sbb
dec
pop
and
add
mov
xor
dec
loop
cmp
jg
(bad)
sbb
or
pop
in
jmp
push
outs
in
or
jo
mov
or
cmp
sub
pushf
jecxz
les
add
rsm
out
call
arpl
sub
jge
(bad)
pushf
xor
in
out
fst
pop
pusha
pcmpgtd
adc
out
sbb
push
and
dec
in
push
sub
(bad)
xlat
out
inc
inc
cmc
cmp
int3
inc
push
or
scas
xchg
outs
data16
jge
lock
add
add
imul
pusha
and
mov
adc
dec
rol
pop
gs
lea
and
out
mov
je
js
jl
pop
addr16
inc
aas
sub
xchg
test
test
and
outs
add
cmps
or
xor
mov
sbb
mov
rol
cmps
mov
sbb
xor
pop
jae
adc
push
dec
out
in
push
add
nop
pop
pop
sbb
jge
je
sub
call
ret
push
add
add
data16
xor
push
ret
test
aas
xchg
(bad)
push
jmp
fs
push
in
rcl
out
mov
pushf
inc
mov
cmps
repnz
push
enter
add
sbb
loope
add
repnz
dec
xchg
xor
in
sahf
out
push
enter
out
mov
cmp
pop
inc
rcr
push
out
add
aad
jmp
sti
jg
je
sbb
cld
mov
ss
sub
pop
jns
pop
add
shr
bound
or
cmp
pop
inc
test
mov
fs
dec
adc
pop
pop
add
js
ficomp
fisttp
enter
sbb
pop
pop
clc
mov
mov
clc
retf
pop
mov
or
dec
hlt
dec
rcr
lock
add
or
xchg
iret
and
in
or
push
(bad)
and
call
ror
mov
mov
dec
jmp
mov
adc
loopne
test
adc
cmp
enter
mov
sub
dec
or
push
dec
cmp
pop
sbb
pop
and
enter
push
jns
mov
stos
xor
shl
mov
outs
fs
das
adc
sar
add
sbb
je
jmp
add
mov
mov
adc
dec
add
sub
mov
xor
xor
add
xchg
mov
and
clc
mov
nop
and
jmp
inc
pushf
mov
out
push
xor
mov
or
rol
jne
xlat
pop
jmp
mov
enter
inc
jecxz
popa
jmp
pop
push
push
pop
fsub
jno
fadd
add
daa
adc
inc
and
jnp
push
sub
mov
xor
inc
inc
dec
mov
test
loop
dec
add
add
fwait
dec
sub
ror
add
pcmpeqb
mov
hlt
or
fs
je
je
xor
fs
(bad)
mov
jge
xor
out
sti
and
ins
(bad)
call
jmp
jl
inc
and
jle
sbb
add
cmp
mov
jne
xchg
mov
inc
movs
mov
xchg
add
in
push
add
pop
enter
mov
mov
sahf
xor
(bad)
adc
or
and
ja
add
mov
ds
mov
inc
pop
je
popa
call
jmp
add
fwait
add
jmp
cdq
inc
xchg
inc
add
sub
dec
addr16
inc
add
addr16
mov
add
or
push
sub
pop
dec
jle
mov
xor
pop
dec
ficom
test
setno
cmp
addr16
or
push
bswap
mov
adc
xor
shr
xor
push
sar
ret
sub
je
imul
dec
add
cmp
cmp
rcl
dec
ret
or
movs
dec
nop
add
xchg
adc
xchg
inc
hlt
mov
jle
outs
adc
pop
fldenv
je
pop
adc
mov
dec
out
test
add
aaa
sahf
icebp
fisttp
add
or
jbe
or
mul
adc
iret
cmp
fld
ins
cmp
inc
ja
jae
mov
js
xchg
push
sbb
rcl
ds
xchg
sub
aaa
xchg
ins
mov
std
mov
sub
clc
(bad)
dec
loopne
leave
(bad)
fiadd
sbb
(bad)
cld
jp
imul
and
cmp
adc
jl
xor
ja
jmp
pop
cmp
scas
push
jle
add
inc
data16
(bad)
(bad)
frstor
sub
mov
and
cmp
jne
sbb
cmp
jne
and
fiadd
adc
adc
push
hlt
or
jo
das
sti
adc
xor
stos
cmp
jne
push
shl
enter
jno
test
adc
and
add
mov
push
or
loopne
cmp
jmp
and
cmp
sbb
sub
push
not
push
or
fdiv
sar
jmp
je
mov
add
add
or
mov
mov
jle
imul
or
loop
xor
jg
cmp
ja
xlat
out
test
popf
inc
add
lock
add
mov
mov
aad
inc
xor
repz
cmp
push
fwait
test
out
cmp
into
loope
sti
pop
icebp
sahf
out
sahf
sbb
loopne
out
test
loopne
pusha
ror
adc
dec
mov
mov
sbb
mov
and
and
es
push
add
xor
adc
add
jnp
mov
icebp
out
xchg
add
add
cmp
mov
adc
enter
in
adc
xchg
and
jne
inc
test
stos
adc
jo
loopne
mov
or
loopne
sbb
cmp
dec
add
lods
ss
mov
in
pop
dec
xchg
and
jle
or
ud1
or
ret
sti
sbb
push
or
pop
or
push
lods
adc
clc
push
jb
or
dec
aaa
lea
or
mov
sub
hlt
stos
in
test
sti
(bad)
push
psubsw
adc
dec
or
lahf
push
add
inc
xchg
add
pop
es
dec
loopne
test
das
xor
add
or
push
mov
pop
mov
pushf
(bad)
xchg
jne
pushf
xchg
jg
out
daa
mov
adc
shr
pop
dec
ins
adc
jle
hlt
pop
pop
inc
xchg
in
scas
adc
fild
clc
adc
push
loope
inc
pop
add
add
in
mov
test
data16
sbb
mov
pop
imul
xor
mov
(bad)
ss
test
fmul
adc
inc
add
(bad)
out
je
push
mov
sbb
inc
(bad)
lahf
adc
mov
inc
add
dec
jne
lea
iret
ins
lock
jno
cmp
adc
mov
fs
or
adc
xchg
imul
in
loope
rol
push
adc
repz
dec
inc
adc
aad
les
dec
add
adc
or
mov
mov
sub
inc
call
(bad)
cdq
mov
jne
jmp
push
cmp
adc
out
adc
jl
jl
test
dec
jmp
dec
imul
push
test
les
mov
jne
mov
push
pop
sub
loop
scas
push
mov
jns
add
add
jmp
lods
pop
adc
cmps
or
add
cmp
daa
mov
add
pop
mov
push
bound
cmp
and
dec
inc
inc
fisub
and
inc
mov
inc
pop
jecxz
pop
ror
(bad)
push
or
aam
bndstx
pop
xor
fpatan
je
jecxz
push
or
lock
add
repnz
mov
mov
pop
jo
add
jle
cmp
arpl
mov
fidiv
loope
pop
mov
xchg
push
daa
dec
dec
popa
ins
add
loopne
call
xchg
sub
(bad)
inc
lds
add
out
pop
outs
sbb
xchg
clc
sbb
test
cld
cli
adc
mov
iret
int3
and
jmp
pop
inc
test
push
push
out
idiv
pop
inc
lds
dec
clc
pop
out
idiv
push
add
adc
and
cmp
pushf
aaa
hlt
or
mov
call
cld
div
add
ins
lea
popa
and
fild
lods
mov
jecxz
ins
mov
add
cld
xor
dec
(bad)
cmp
sbb
push
arpl
rcr
add
mov
add
cwde
sbb
mov
and
or
mov
pop
pop
and
repnz
sub
cmp
dec
and
mov
mov
sub
mov
inc
mov
inc
popa
outs
sub
mov
mov
clc
jns
fiadd
jb
inc
jne
mov
or
dec
push
cmp
or
inc
imul
jo
lock
jecxz
add
inc
pusha
cmps
sar
mov
sbb
cwde
add
ret
or
cmp
shl
mov
dec
jecxz
xor
dec
iret
imul
adc
add
stc
aad
jno
xor
lock
fcom
out
sahf
stc
leave
(bad)
sub
jmp
xchg
outs
mov
mov
cmp
repnz
cli
push
cmp
test
inc
xchg
mov
and
inc
pop
ss
fmul
lds
xor
shl
push
or
aad
jb
sbb
mov
and
sar
push
push
mov
mov
mov
inc
xor
ins
and
sbb
ret
jbe
jae
push
push
push
inc
pop
add
push
(bad)
std
push
push
mov
call
nop
add
jmp
push
call
jp
jmp
lds
aaa
add
xor
sbb
or
aas
rol
or
push
rol
or
adc
add
and
in
out
adc
rol
scas
loope
(bad)
or
nop
pushf
clc
cmp
repz
loopne
adc
cmp
push
(bad)
fdivr
dec
aaa
mov
data16
jbe
pause
mov
repnz
cmp
rcl
push
adc
pop
(bad)
cmc
in
cdq
(bad)
xchg
imul
sub
aaa
test
pop
cmc
and
or
stos
cld
fst
ss
(bad)
pop
pushf
xor
ds
cmp
rcl
fistp
jbe
inc
in
adc
cmp
loopne
xor
jmp
xchg
adc
adc
mov
rol
imul
mov
fucomip
jbe
sti
dec
stc
fs
aam
pop
sbb
not
jmp
jo
mov
(bad)
sub
je
dec
popa
cmovno
jmp
adc
ror
sub
add
sub
or
or
icebp
(bad)
cmp
adc
xchg
cmp
clc
ret
cmp
mov
add
std
jg
dec
jmp
(bad)
sbb
pop
or
fidivr
pop
div
lea
xor
idiv
mov
loopne
xlat
adc
push
mov
mov
pop
leave
rcl
dec
push
in
neg
inc
out
fcom
mov
pop
push
ret
lock
mov
iret
retf
jb
icebp
movs
in
jl
dec
add
lock
dec
pop
or
(bad)
push
pop
mov
das
xchg
pop
push
fdivr
xchg
daa
or
and
outs
cmps
mov
jg
jl
loopne
xchg
or
or
pop
test
add
inc
iret
xchg
pop
das
aaa
stos
ins
sbb
cmp
repz
add
push
jge
lods
mov
(bad)
and
int3
pop
jnp
out
clc
or
push
push
in
pop
sahf
out
scas
arpl
jb
adc
hlt
push
ins
pop
mov
add
aas
shr
or
das
int3
fldcw
clc
pop
cmp
pop
mov
push
push
cmp
fild
fdiv
cmp
jo
sbb
mov
xor
mov
test
jns
shr
mov
xor
cmp
mov
cmp
(bad)
push
add
out
add
test
retf
or
push
jo
jmp
mov
out
cmp
loop
add
ds
mov
or
movs
enter
pop
test
das
add
(bad)
push
xlat
push
into
repz
out
add
jns
inc
mov
pop
pop
call
push
mov
adc
shr
jecxz
pop
in
sub
fxch
inc
(bad)
sub
inc
adc
push
xchg
test
sbb
cmp
xor
imul
pop
arpl
push
cmp
jae
daa
ins
loopne
adc
sbb
mov
jp
aaa
aas
adc
push
pusha
push
xchg
jns
adc
pop
jge
mov
loope
hlt
jb
sbb
add
inc
adc
aaa
or
cld
popa
nop
test
retf
add
or
pop
fst
adc
jnp
adc
mov
pop
adc
fcomp
or
mov
fadd
das
scas
cmp
and
and
sbb
fcmovnb
sub
dec
ins
ret
xchg
leave
leave
inc
push
jbe
pusha
pop
or
push
adc
add
lds
sbb
pusha
outs
sbb
clc
scas
ins
movq
push
rol
or
add
add
add
out
fidivr
jo
or
aam
cmp
jp
mov
inc
lock
xchg
push
add
adc
shl
cmp
and
jb
out
add
ja
or
push
out
pop
push
pop
repz
test
stc
add
addr16
push
xor
push
pop
mul
cdq
xchg
adc
pop
mov
inc
jo
adc
mov
nop
or
cmps
and
neg
push
or
adc
sbb
inc
dec
stos
clc
cdq
iret
cmps
rol
es
sbb
add
hlt
mov
push
inc
adc
scas
dec
sti
dec
test
mov
fcom
pop
mov
jb
inc
call
cmp
dec
ret
nop
sbb
enter
mov
add
jne
pop
aaa
dec
test
mov
adc
jbe
xor
aaa
sbb
adc
ror
stos
push
sbb
dec
inc
and
lea
push
xor
mov
or
jge
test
inc
jge
dec
lahf
dec
inc
out
mov
inc
mov
mov
mov
add
call
loop
ins
cli
pop
push
arpl
mov
jmp
rcr
sub
xchg
fcom
jae
std
push
out
xor
pop
sub
or
pop
sbb
lock
or
xor
add
jecxz
jmp
lea
cmp
pop
push
and
call
repnz
or
call
mov
adc
mov
call
push
push
rcr
mov
xchg
sbb
add
mov
or
jb
cld
iret
popf
pavgw
cdq
cmps
push
out
pop
or
cmp
cmp
repz
push
jmp
mov
ss
jno
jns
rol
out
push
and
pop
aad
inc
adc
dec
aad
push
test
mov
mov
xor
mov
sub
test
in
popf
xlat
aam
inc
add
add
push
and
fsub
and
mov
jge
sub
mov
test
push
or
sub
cmps
arpl
movs
and
lods
sub
mov
and
xchg
pop
xchg
or
mov
out
call
dec
outs
fdivr
jg
mov
enter
jnp
es
frstor
repnz
or
sbb
xor
repz
sub
ins
jmp
ins
int3
or
das
fild
inc
mov
pusha
xchg
push
inc
movsx
push
jnp
sbb
add
movzx
jmp
jecxz
pop
or
dec
dec
neg
add
push
inc
cmp
je
js
sub
or
pusha
cmp
xor
mov
or
jb
test
add
mov
cmp
jl
test
call
fisubr
call
xlat
adc
cmp
xor
es
inc
push
mov
pop
push
add
ss
push
push
ins
mov
stos
dec
leave
ins
daa
mov
and
sub
jb
pop
test
and
adc
pop
cmp
cwde
mov
mov
adc
addr16
sbb
icebp
rcl
add
dec
rcr
pop
push
adc
add
call
lea
aaa
cmps
inc
pop
mov
sti
aaa
jne
cmps
mov
adc
or
stos
or
pop
int3
fisub
add
dec
sbb
cmp
mov
nop
imul
mov
xlat
dec
push
clc
lods
adc
push
popa
pusha
js
adc
out
outs
out
add
loop
and
mov
pop
and
jb
out
imul
aas
enter
pop
or
xor
push
or
sub
test
lahf
pop
das
lods
lock
jns
je
jnp
test
(bad)
xor
out
fldln2
dec
into
repz
jge
pop
push
out
sahf
out
cmp
push
(bad)
jb
push
outs
jne
adc
cmps
in
pop
xchg
or
xchg
sbb
sbb
adc
pop
fldz
fcomp
mov
mov
inc
jb
fild
fcompp
dec
pop
mov
sbb
add
out
xor
mov
sub
mov
fild
sar
ror
adc
sbb
or
or
scas
or
or
jmp
arpl
enter
add
inc
cmp
push
call
iret
xor
in
dec
push
pop
push
adc
ret
into
repz
mov
inc
xlat
ficomp
ss
inc
pop
jmp
arpl
not
push
push
sbb
mov
movs
loope
cmps
iret
push
sbb
xchg
adc
std
dec
fild
fcompp
push
bsf
push
call
mov
add
jge
jno
jmp
add
ja
dec
jmp
pop
sbb
ficom
outs
jne
and
inc
daa
xor
jmp
sub
mov
sbb
inc
xor
pop
ins
neg
imul
neg
aas
fsub
push
pop
push
pop
movs
or
lock
mov
ds
or
adc
mov
ins
loopne
pop
lock
fwait
jmp
add
dec
dec
sub
xor
cmp
pop
or
add
fimul
cdq
add
or
inc
(bad)
ss
mov
cmp
xchg
bound
pop
stc
pop
cmp
jl
jge
add
jl
call
adc
inc
clc
push
sub
pop
pop
out
pop
cmps
add
push
(bad)
sahf
cmps
stc
cmp
push
sbb
push
xor
(bad)
out
inc
push
push
sbb
mov
pop
pop
jns
mov
mov
mov
in
mov
mov
add
xor
sbb
or
leave
and
mov
and
imul
sbb
add
xlat
push
test
mov
add
mov
mov
sub
pop
mov
or
adc
ins
rol
imul
xor
nop
mov
and
add
fiadd
imul
mov
add
pop
pop
pusha
enter
sbb
mov
or
fsubp
push
repnz
add
test
and
or
inc
pop
push
std
pop
sahf
out
outs
pop
jno
mov
lahf
mov
or
ret
mov
bound
pop
cmp
sbb
mov
push
jbe
adc
int
daa
inc
push
loop
sub
dec
std
push
pop
add
fwait
jno
enter
mov
pop
pusha
and
add
clc
add
dec
jnp
adc
pop
aas
cmc
jmp
adc
jmp
add
or
xor
rol
adc
pop
adc
cli
cmps
loopne
pop
dec
fisub
rcr
cwde
fld
or
in
packuswb
jb
push
adc
push
enter
add
and
and
cmp
push
xor
inc
push
pop
jb
cmp
repz
lahf
outs
loopne
sahf
lea
push
or
xor
test
ss
push
sbb
aaa
jmp
mov
sbb
add
mov
jb
mov
in
push
jbe
xor
fild
xor
jb
pop
jno
mov
(bad)
push
cmp
push
cmc
mov
add
mov
inc
mov
pop
xor
sbb
rol
push
cs
test
mov
mov
add
aaa
js
add
add
pop
test
sub
adc
jmp
or
in
fild
imul
cmp
nop
loopne
xor
push
rcl
in
jmp
hlt
xchg
pop
rol
dec
sbb
adc
or
jnp
mul
adc
push
jecxz
sub
or
or
xor
adc
ret
and
cmp
dec
pop
and
xchg
push
and
test
add
pop
jnp
add
in
cwde
(bad)
lock
and
and
mov
ds
dec
pop
inc
and
fsubrp
sar
pop
pop
and
pushf
out
rcr
pop
loopne
jne
adc
xor
dec
movs
lea
ss
dec
push
fild
(bad)
pop
ret
les
inc
push
and
adc
adc
or
xchg
pushf
adc
adc
add
outs
iret
adc
pop
push
fwait
push
pop
daa
mov
aaa
jo
int
call
jne
rol
loop
pop
push
and
sbb
pop
bswap
pop
mov
mov
mov
fld
pop
adc
dec
push
xor
aaa
in
cmp
inc
fs
xor
pop
jnp
xchg
push
test
ret
pop
adc
loop
and
push
pop
push
inc
mov
adc
and
nop
fs
adc
and
dec
inc
add
jmp
add
jmp
or
jmp
and
outs
adc
jl
inc
gs
pop
ret
cmps
in
in
in
enter
and
loop
xor
mov
xor
push
rol
push
test
and
(bad)
shr
aas
xchg
or
push
push
push
and
mov
aas
push
and
or
xchg
cld
inc
jb
mov
add
jge
dec
cmp
call
mov
cmp
jae
push
inc
push
data16
lods
iret
xrelease
mov
push
(bad)
ret
fiadd
or
xor
push
test
clc
aas
push
mov
push
fadd
fmul
sub
lahf
inc
rcr
adc
pushf
pop
push
inc
jne
enter
je
enter
mov
sbb
cmps
add
push
or
mov
sbb
in
adc
inc
bound
scas
sub
(bad)
sub
(bad)
jns
pop
mov
push
sub
fisubr
push
add
mov
mov
leave
jns
or
adc
xor
dec
push
setl
jo
mov
pop
push
sbb
retf
push
movs
cmp
arpl
push
fisubr
cmp
mov
add
popa
shl
sbb
daa
jns
pop
mov
jmp
jae
and
popa
daa
push
dec
xor
daa
xchg
rol
sub
jbe
sti
mov
xor
xlat
data16
mov
push
nop
or
cmp
aaa
lahf
lahf
cmp
daa
push
or
popf
push
mov
pop
adc
or
mov
fst
lea
xchg
dec
je
xchg
and
loope
shr
dec
adc
test
lds
push
dec
push
lock
lock
movs
aaa
retf
lea
xchg
mov
inc
sbb
and
repnz
cmp
xor
(bad)
aad
push
and
inc
lock
inc
sub
enter
clc
pop
mov
sbb
mov
or
cmp
xor
inc
mov
fisttp
movs
pop
adc
imul
sub
or
jle
sbb
mov
jl
xor
in
int
add
sbb
sti
in
push
mov
pop
jmp
test
pusha
push
fild
inc
pop
mov
rcl
or
hlt
cmp
popa
mov
jle
in
push
jno
imul
pop
(bad)
sub
in
xor
xor
cs
imul
push
mov
push
call
jle
ret
mov
imul
pop
pop
jmp
push
sub
dec
ins
pop
scas
xchg
adc
je
and
or
add
xlat
fcmovbe
push
loope
cdq
dec
mov
mov
ja
add
adc
mov
sub
dec
aas
test
cmp
test
fstp
fwait
(bad)
and
ins
dec
push
retf
inc
mov
push
test
gs
fmul
mul
repnz
inc
inc
sti
inc
push
add
and
sbb
movs
jg
and
inc
mov
mul
sbb
pushf
movs
jne
pushf
push
cwde
cmps
xchg
jl
cwde
push
xchg
xchg
gs
sbb
nop
movzx
nop
mov
mov
adc
add
inc
lock
ins
or
test
add
inc
add
or
dec
cdq
lea
clc
das
xor
add
sbb
sbb
inc
call
inc
xor
xchg
movs
sub
cld
js
mov
add
test
jb
or
test
push
xor
jmp
sahf
out
sub
ins
mov
out
inc
or
inc
jle
jg
xchg
xor
rcl
adc
xchg
mov
test
leave
jmp
jl
inc
adc
jmp
test
inc
sar
add
pop
inc
xchg
je
or
lock
xchg
je
sbb
rol
dec
jo
dec
jo
adc
pusha
mov
cmp
add
enter
dec
and
imul
push
mov
xchg
ficom
sti
xchg
jb
pop
rcl
push
inc
push
ret
sub
sub
add
pusha
shl
daa
mov
sbb
ss
dec
mov
or
dec
pop
out
xchg
hlt
ror
pop
jbe
cmp
push
push
adc
and
sbb
in
xchg
dec
push
imul
sbb
push
pop
ins
mov
dec
scas
jmp
lods
hlt
cmp
add
inc
ret
movs
push
int
fistp
xor
movs
lea
push
add
xchg
jo
aas
mov
adc
jno
pop
jl
pop
add
and
add
cmp
nop
pop
and
cmc
push
fnsave
mov
rcl
mov
and
add
mov
inc
dec
push
jp
ss
mov
add
adc
bound
mov
fsubr
xor
pop
fcom
fsub
fstp
aaa
nop
mov
outs
sbb
sbb
push
pushf
cmp
and
jne
inc
loop
fdiv
loop
lock
ja
aaa
jg
loopne
ins
cmp
les
mov
pop
ja
arpl
mov
mov
fld
jmp
iret
shr
je
mov
fmul
cmp
hlt
push
mov
sahf
cs
cvtpi2ps
pop
int
sahf
jle
mov
inc
dec
dec
and
inc
and
dec
mov
mov
and
lahf
pop
xchg
dec
lea
pop
mov
pusha
push
add
imul
fdiv
pushf
push
pushf
and
inc
sbb
dec
cwde
sti
cwde
fdiv
xchg
aas
xchg
xor
lea
lock
mov
mov
ror
add
pop
test
pusha
out
pop
and
sbb
mov
not
arpl
movs
or
in
loop
ins
ror
leave
movs
stos
pusha
cmp
cmp
fucom
pop
cmp
and
loop
jns
inc
cmp
int3
push
(bad)
in
add
jnp
xchg
fs
mov
add
or
add
and
mov
adc
or
je
je
fadd
inc
sub
pop
and
test
jo
ror
push
and
cs
xchg
and
in
popf
fs
test
sbb
xchg
pusha
ret
inc
mov
lea
jno
push
jg
sub
dec
in
pop
dec
iret
leave
adc
test
imul
jo
push
dec
jmp
adc
das
call
pop
jns
dec
lea
xchg
and
cs
inc
push
cmp
pushf
inc
cmps
and
mov
xor
add
mov
push
(bad)
and
and
push
and
or
icebp
jne
pushf
mov
test
arpl
inc
ds
or
(bad)
cs
or
dec
ds
sub
add
pop
es
lock
dec
inc
and
aas
iret
repz
out
push
jp
mov
ds
mov
in
push
addr16
xchg
dec
fcomp
iret
repz
mov
xor
dec
push
imul
sub
xor
(bad)
push
adc
push
fadd
and
adc
mov
jo
inc
movs
and
rol
cwde
adc
xor
pushf
xor
popa
cwde
or
fsubr
xchg
cmp
inc
nop
scas
int
inc
popf
shr
mov
daa
pop
movs
mov
ret
fisttp
je
test
cmp
repnz
xor
xor
popa
dec
cmp
xchg
test
xor
xchg
and
in
lods
add
outs
push
test
inc
pop
test
cmps
push
leave
pushf
idiv
cmp
pop
inc
inc
outs
inc
sub
sub
loope
sub
pop
std
or
xor
pop
dec
push
test
and
push
lds
ins
add
push
push
inc
add
jo
dec
ins
dec
push
dec
push
nop
or
fs
dec
inc
push
test
pusha
dec
sbb
shl
pop
dec
pop
pop
cwde
push
cmp
dec
pop
fisttp
mov
xor
sbb
or
add
and
pop
test
dec
sbb
sub
test
dec
js
dec
in
xchg
pop
sbb
push
inc
pop
shl
inc
xchg
inc
adc
add
or
loop
mov
xor
push
xchg
xlat
mov
imul
ds
or
loope
or
add
cmp
or
jmp
push
clc
or
ficomp
add
arpl
xchg
je
jmp
sub
pop
je
sub
pop
dec
adc
loope
jmp
xor
sub
xchg
cmp
test
aas
sbb
or
xor
add
loop
inc
xor
ret
js
push
xor
adc
push
nop
smsw
xchg
mov
xor
pop
lea
data16
inc
jo
inc
xor
or
enter
inc
enter
pop
cmp
or
add
sub
test
dec
adc
or
pop
and
add
loopne
lods
pop
or
add
mov
repnz
xor
ret
pop
adc
add
jmp
adc
ret
add
and
jg
or
cmp
push
test
adc
xchg
inc
or
out
and
and
pop
adc
xlat
adc
pop
add
adc
hlt
pop
das
inc
adc
fst
push
and
push
push
pop
add
or
sti
mov
sub
fadd
sub
cmc
aaa
adc
add
xor
pop
or
adc
adc
xchg
fistp
rcl
dec
mov
js
idiv
cmp
rcr
(bad)
(bad)
sub
popa
or
mov
add
dec
adc
int3
leave
xlat
gs
mov
dec
inc
add
push
or
or
and
xchg
jo
arpl
add
or
mov
nop
mov
inc
or
dec
pop
nop
xchg
adc
adc
(bad)
(bad)
outs
jmp
nop
inc
mov
pusha
sub
fadd
out
dec
push
push
cmp
inc
xadd
mov
xchg
cmp
mov
pop
push
cmp
push
cmp
cmp
fidivr
je
mov
jb
je
dec
je
sbb
or
adc
mov
jl
jbe
or
jmp
test
je
xor
push
inc
out
aaa
xor
jnp
ja
jmp
jg
and
or
sub
jb
and
stos
adc
cmp
out
aaa
adc
cmc
jmp
mov
and
adc
sub
daa
ret
jne
jmp
lea
pop
add
fwait
ror
pop
aas
add
and
mwait
cmp
and
pop
(bad)
mov
xor
icebp
and
xchg
inc
popf
mov
arpl
(bad)
sbb
(bad)
dec
xchg
dec
rcl
js
pop
test
add
mov
mov
stos
jge
xlat
(bad)
(bad)
jae
pop
mov
je
add
adc
jmp
adc
ror
hlt
sbb
mov
mov
(bad)
cmp
(bad)
sub
loopne
xchg
pop
daa
dec
or
mov
call
push
in
loop
shl
or
push
cmps
loopne
loop
xchg
xlat
rcl
push
push
jp
push
pop
or
ret
add
add
fcomp
les
pop
jge
enter
(bad)
adc
mov
loopne
ret
xchg
mov
shl
icebp
inc
std
xlat
cmp
aad
(bad)
je
pop
cmovs
rcl
scas
outs
push
cld
cmp
or
push
into
fsubr
jns
dec
jp
es
xchg
mov
mov
or
cld
or
jmp
jp
mov
or
cmp
fadd
jnp
dec
adc
add
dec
in
adc
(bad)
push
cmc
or
add
or
cmp
je
ds
je
sub
cmp
and
mov
jns
and
shr
add
mov
rol
mov
retf
cmp
sub
sbb
(bad)
cmp
xchg
jno
test
adc
add
jo
pusha
add
shl
pop
push
call
jg
and
push
scas
push
adc
nop
push
push
inc
add
mul
push
or
jbe
xlat
aaa
or
jl
pop
adc
push
xor
add
ret
mov
stc
inc
cmp
nop
aaa
xchg
pop
cmp
sbb
imul
jo
dec
jnp
ins
mov
sub
nop
mov
inc
push
stc
xchg
fcom
and
mov
adc
pop
fwait
sub
jb
je
dec
je
add
ja
aam
and
pop
sub
xchg
xchg
retf
pop
dec
adc
or
neg
add
cmp
push
add
nop
xchg
je
jmp
pusha
add
or
adc
cs
dec
push
pop
pop
or
and
inc
(bad)
(bad)
adc
clc
or
xchg
sahf
cmps
aam
enter
push
pusha
push
and
jns
out
cmp
push
pop
clc
dec
adc
data16
add
seto
aas
add
sub
imul
dec
sbb
dec
out
sbb
imul
jnp
dec
movs
push
and
dec
adc
iret
or
mov
add
jmp
cmc
dec
pop
int3
(bad)
cld
inc
add
pop
push
add
daa
pop
loopne
cdq
pop
sub
mov
clc
sbb
inc
in
shl
hlt
dec
jo
jmp
pop
push
pop
ds
xor
push
ins
je
xlat
push
sbb
sub
loope
push
ja
mov
clc
pop
je
pop
cdq
adc
dec
je
rcl
(bad)
adc
imul
sub
sub
gs
ss
in
jecxz
loope
loop
movs
inc
push
jg
adc
or
popf
cmp
pop
rcr
outs
mov
push
mov
or
enter
rcl
cmp
push
retf
das
movs
mov
fxch
test
inc
call
or
pop
test
daa
add
mov
in
add
pop
lods
mov
sub
push
je
jne
mov
fwait
jo
pop
mov
or
ret
sbb
pop
das
pop
in
(bad)
aam
aam
pop
sbb
jecxz
xorps
movs
ds
repz
(bad)
loopne
adc
adc
popf
push
cmp
push
cmp
inc
inc
out
dec
dec
xchg
push
pop
fmul
xchg
push
push
out
ins
adc
test
je
aaa
sbb
out
adc
(bad)
jmp
aad
rol
and
dec
add
scas
adc
js
sbb
pusha
stos
xchg
pop
shr
loope
push
mov
cmp
dec
sbb
ror
mov
leave
in
xchg
and
adc
and
mov
jbe
rol
or
jb
jmp
cli
mov
gs
ret
xchg
inc
push
add
sub
adc
xchg
push
test
cmps
lock
in
aam
inc
popf
mov
mov
mov
or
test
lock
jge
lea
pop
ja
adc
ror
shr
int
dec
pusha
push
add
arpl
push
cmp
popa
fcom
in
aas
leave
fdiv
lods
icebp
fmul
aaa
lods
push
sbb
pop
mov
mov
lock
jmp
jno
mov
rol
mov
dec
mov
dec
mov
dec
mov
jne
loope
cmp
inc
mov
pop
gs
and
push
cmp
jb
loope
mov
pop
mov
enter
sbb
push
cmps
test
scas
mov
adc
add
jmp
push
ffreep
in
inc
mov
pop
out
iret
jae
push
adc
into
repz
lods
push
pop
scas
into
in
jle
js
(bad)
dec
sti
xchg
sti
in
dec
xchg
pop
dec
inc
cmp
jne
sub
dec
dec
xor
pop
inc
dec
repnz
inc
mov
sbb
dec
and
rcr
test
jne
jbe
sar
cmp
jge
push
lods
mov
or
xor
scas
pop
or
clc
xchg
call
cmp
fcomp
jmp
fmul
or
popa
or
adc
mov
and
mov
call
(bad)
loop
mov
push
xor
push
sbb
xor
(bad)
sbb
jmp
inc
hlt
pop
mov
mov
and
mov
mov
or
mov
pusha
jmp
cdq
push
ja
mov
(bad)
call
pop
mov
inc
enter
add
pop
call
test
cmps
dec
imul
or
pop
pop
adc
cmc
inc
fistp
movs
pop
or
leave
mov
das
shl
jmp
cmp
pop
push
les
inc
push
mov
(bad)
(bad)
mov
or
add
or
cli
or
mov
daa
add
push
push
or
outs
xchg
rol
dec
je
mov
mov
lods
xchg
mov
adc
sbb
jmp
out
pop
je
ins
xor
jl
cmp
push
cwde
add
pusha
adc
fcom
cmp
adc
sub
jnp
xchg
jmp
mov
pop
test
jne
jns
inc
aaa
inc
jle
jns
ins
in
jmp
and
dec
sbb
adc
push
loope
mov
stc
idiv
shl
dec
adc
or
mov
add
(bad)
mov
push
or
pop
cmp
jae
jmp
jge
adc
xor
outs
popf
fwait
or
push
mov
ins
bound
jbe
fnstsw
fcomp
imul
test
fild
or
rol
(bad)
pop
adc
jae
sbb
dec
aaa
fcmovnu
popa
arpl
pop
shl
mov
and
xchg
push
je
test
pop
cmp
popa
and
pop
ja
imul
cmp
(bad)
jmp
adc
cmp
sub
push
outs
sbb
adc
pop
add
loope
jecxz
fwait
lods
lods
dec
ins
sar
imul
dec
and
xor
into
xchg
out
in
pop
pop
out
jmp
shl
cmp
adc
xchg
outs
aaa
mov
aam
aam
or
les
(bad)
sbb
adc
lahf
in
adc
and
pop
mov
cs
or
adc
push
jmp
rcl
jmp
pop
jo
mov
mov
popf
jmp
mov
jl
cmp
jmp
inc
sbb
mov
fcom
xchg
and
hlt
push
cmp
(bad)
sub
jl
in
cmp
xor
ds
mov
push
bswap
int3
aad
(bad)
loop
je
add
xor
fnsave
fcom
mov
adc
dec
push
mov
out
or
cmp
jl
daa
cmp
fbstp
cmp
jge
in
or
clc
rcl
xchg
ja
adc
adc
jp
shl
pop
lds
inc
mov
addr16
mov
xchg
pusha
rcl
test
add
ins
jnp
dec
(bad)
dec
adc
icebp
add
add
and
stc
mov
xor
in
mov
stc
push
outs
lock
aad
in
or
lahf
js
inc
sbb
data16
pop
ret
adc
repnz
push
inc
or
js
sbb
call
mov
xchg
cmps
push
jae
imul
sbb
dec
adc
and
scas
ror
mov
adc
inc
add
(bad)
xor
loop
adc
imul
or
ds
push
(bad)
jmp
jne
(bad)
fsub
adc
xor
imul
or
add
cmp
push
movs
pop
lds
or
xor
loope
dec
jmp
mov
loope
and
inc
loop
in
sbb
jo
je
jns
add
dec
add
ret
addr16
push
neg
sti
push
push
pop
popa
xor
outs
add
repnz
not
dec
sub
addr16
mov
xor
push
xor
xchg
cwde
and
aaa
inc
add
or
aaa
out
xor
call
xchg
jbe
add
fwait
add
cmp
jae
inc
jecxz
xchg
cmp
outs
loop
(bad)
bound
scas
jb
mov
mov
imul
ja
inc
call
adc
aas
and
inc
inc
add
push
loop
add
add
jns
mov
push
imul
mov
dec
cs
aas
add
pop
add
push
xor
add
xor
outs
jge
imul
shl
push
pop
test
ja
push
xchg
fld
dec
xlat
add
xor
pop
sahf
mov
inc
jb
cmp
mov
push
jmp
sub
push
push
sbb
inc
push
cmp
and
aad
adc
cmp
mov
xchg
or
and
sbb
icebp
movs
test
popf
and
adc
and
pop
and
mov
inc
jp
sbb
je
jb
cmp
ins
daa
out
add
jo
xchg
cmp
bound
inc
add
jns
inc
ja
idiv
cmps
and
aaa
push
mov
dec
ret
pop
pop
out
pop
add
movs
add
push
jo
pop
adc
add
movs
int3
test
test
pop
or
cmp
jo
(bad)
fldcw
outs
push
add
and
sbb
dec
imul
jge
adc
add
sti
cmp
push
mov
dec
sbb
loopne
dec
mov
je
adc
mov
dec
add
and
sbb
daa
add
sub
mov
sub
sbb
iret
cmps
icebp
mov
arpl
sbb
adc
mov
push
push
sbb
xor
push
jo
fnstenv
adc
popf
mov
push
and
mov
pop
daa
dec
ret
and
xchg
movs
mov
mov
push
adc
pop
mov
and
pushf
push
dec
aaa
adc
int3
or
jmp
repz
sbb
jge
mov
push
mov
cld
pop
push
or
add
dec
ins
loopne
mov
and
inc
adc
aad
jo
jmp
add
pop
das
pop
(bad)
mov
sbb
pop
icebp
adc
cwde
jge
aas
and
movs
or
xchg
pop
mov
inc
mov
sbb
popa
xchg
bound
(bad)
push
sbb
movs
push
add
and
push
mov
or
or
xor
push
inc
or
add
sbb
loop
adc
cmp
sti
test
jbe
nop
jg
clc
xor
popa
dec
pop
adc
sar
sahf
xlat
mov
cli
pop
clc
(bad)
test
adc
and
xchg
pop
mov
adc
in
mov
add
or
xor
push
xchg
loopne
dec
jne
(bad)
sar
push
add
or
pop
fisttp
sub
xlat
mov
gs
ins
xor
push
loopne
dec
push
cwde
or
mov
cs
and
pop
add
out
rcr
ror
in
pop
ret
dec
sbb
add
sbb
add
push
push
add
pop
jle
or
pop
push
push
dec
pusha
dec
inc
sub
and
pop
inc
ins
and
stos
adc
push
aas
je
ins
daa
lea
clc
mov
mov
mov
ret
pop
pop
or
and
push
popa
pop
cmc
cli
sbb
add
dec
das
sbb
pop
and
xor
dec
push
mov
jae
jl
push
pop
dec
ficom
add
mov
cmp
and
push
pusha
call
push
adc
jl
scas
cwde
mov
push
adc
jp
xchg
in
out
lea
or
xor
or
adc
mov
mov
shr
inc
mov
pop
xchg
ffreep
mov
adc
or
and
adc
call
and
inc
and
sbb
xchg
test
icebp
and
pop
cmp
out
xchg
cmp
dec
loop
retf
inc
jle
push
dec
jns
push
out
lea
lea
pop
out
push
or
out
mov
mov
mov
mov
xor
popf
in
push
xchg
push
out
adc
add
inc
sub
ins
inc
push
push
sub
inc
jg
mov
enter
mov
shl
sbb
arpl
push
and
arpl
arpl
test
shr
loopne
std
fstp
sar
push
mov
daa
push
mov
retf
mov
movs
rcl
jb
or
cs
clc
inc
xchg
(bad)
fild
lea
mov
mov
arpl
inc
cmp
jae
push
retf
fmul
cmp
xor
cli
cdq
dec
sbb
xor
popa
or
cmps
je
add
sbb
push
xchg
cmp
cwde
call
out
pushf
adc
sub
sar
loopne
mov
xchg
mov
sbb
push
retf
mov
inc
xchg
inc
sbb
mov
inc
fadd
out
loopne
sub
dec
cmp
jo
mov
sbb
cld
dec
xchg
jo
or
jmp
mov
jle
(bad)
in
sbb
dec
das
out
push
pop
push
movzx
(bad)
fsubr
scas
adc
cmp
sub
mov
iret
sbb
mov
adc
sub
xor
add
or
sub
mov
mov
mov
es
mov
jbe
xlat
add
cmp
jl
cld
and
frstor
mov
adc
push
push
icebp
pop
add
add
mov
mov
repnz
mov
dec
add
jle
or
jae
push
je
pcmpeqb
xchg
bound
loope
je
(bad)
js
mov
cdq
daa
inc
icebp
es
xchg
or
scas
inc
sub
sbb
cmp
adc
inc
inc
jl
aam
or
out
jne
sbb
rol
push
mov
ss
mov
repz
jle
mov
mov
adc
cmp
add
mov
xor
lock
mov
jne
or
call
(bad)
add
arpl
adc
aam
clc
or
inc
and
pusha
lock
ins
mov
das
pop
aaa
movs
js
lea
(bad)
dec
jmp
loopne
mov
out
mov
add
add
nop
xor
movs
mov
cmc
hlt
in
sbb
rcl
mov
imul
in
sar
inc
das
add
std
or
test
ja
js
sahf
out
outs
mov
ret
push
aam
repnz
jns
imul
ret
pop
xor
aam
retf
sub
add
std
mov
ds
clc
or
push
sbb
sgdtd
pop
sub
cs
ret
inc
mov
mov
add
and
inc
push
mov
and
repnz
push
ins
sbb
adc
lods
cmp
lods
fdiv
popa
mov
ror
pop
sbb
in
mov
ja
or
jmp
sbb
and
sti
(bad)
mov
mov
in
sbb
push
or
rcl
clc
cmp
daa
add
sub
dec
jmp
pop
cdq
cli
pop
xor
or
sbb
(bad)
in
dec
or
loopne
dec
arpl
xchg
adc
scas
adc
nop
jne
movs
jae
xchg
mov
add
mov
mov
sar
push
pop
aam
inc
inc
fsub
mov
or
adc
aaa
xchg
xlat
xor
push
adc
dec
xlat
mov
lahf
ds
je
pusha
sub
inc
ins
xor
(bad)
pop
pusha
jo
or
ins
ins
imul
icebp
stos
push
xchg
fisttp
jp
jp
adc
fmul
jg
push
adc
daa
loope
rol
adc
jmp
retf
add
pusha
mov
and
jo
daa
int3
out
and
pushf
inc
push
xchg
pop
clc
mov
pop
dec
pop
and
dec
bound
mov
jle
rol
add
cli
or
sbb
xchg
lock
add
push
ficom
repz
add
aaa
mov
add
popf
jnp
or
lods
into
push
fmul
stos
ss
add
int3
pop
es
ret
cmps
push
jnp
jl
sahf
mul
fist
out
push
dec
push
push
push
jne
out
cs
push
ds
pop
mov
sbb
jg
mov
mov
or
cmp
sub
add
xor
push
pop
out
rol
adc
add
sbb
add
fstp
fwait
pop
fld
cmp
mov
call
mov
pop
repnz
dec
push
js
pop
adc
xchg
jge
xor
loopne
call
fisubr
jns
dec
mov
inc
pop
ss
ror
xor
push
pop
pop
adc
leave
or
mov
pop
and
adc
aad
push
xchg
call
aad
push
fnsave
lds
or
jmp
xor
loope
or
mov
fidiv
push
arpl
das
sar
daa
fucomip
(bad)
gs
retfw
pop
push
stos
jb
cmp
ins
xor
in
xor
xor
inc
jmp
add
cwde
movs
xchg
in
in
sub
jne
sbb
xchg
(bad)
jbe
mov
js
addr16
cmp
jmp
add
push
movzx
xchg
test
inc
mov
mov
rol
jp
add
in
add
mov
inc
xor
sub
cmp
rcl
(bad)
xchg
rcl
dec
scas
mov
adc
fiadd
mov
clc
xchg
mov
mov
test
in
push
sbb
adc
movs
lock
jns
xor
push
je
jle
pop
shl
sub
add
imul
fsubr
rcl
sub
sbb
stos
mov
mov
ror
adc
sub
xchg
icebp
inc
fsin
cmps
aas
sub
leave
fsub
jo
sub
leave
jmp
adc
push
in
pop
js
in
add
push
and
test
fcom
mov
mov
mov
bound
mov
ins
mov
mov
inc
dec
add
xchg
push
add
sbb
fneni(8087
es
sbb
inc
push
mov
clc
inc
in
int
movs
add
add
adc
rcl
ret
leave
sub
fstp
add
pusha
mov
xor
sub
loop
fwait
mov
ss
jle
sbb
xchg
adc
mov
push
or
adc
iret
dec
or
jl
inc
popa
add
or
xchg
pop
iret
jb
pop
adc
movzx
lock
mov
cmp
je
push
fcmovnbe
mov
into
adc
xchg
in
xor
jne
sub
cmp
daa
lods
mov
rcl
ret
add
cmp
jae
xchg
xor
inc
popa
das
jns
(bad)
jp
or
call
jmp
jnp
ja
(bad)
mov
rdpmc
shl
or
mov
cs
add
cmp
inc
pand
push
inc
retf
mov
sbb
shl
jb
mov
outs
sbb
mov
mov
sahf
daa
xor
pop
fadd
addr16
xor
cmp
fidiv
int3
cmp
push
pop
cmp
mov
and
xor
adc
mov
mov
adc
inc
pop
adc
pop
adc
or
(bad)
ss
xchg
add
add
pop
test
jo
outs
div
mov
or
daa
adc
mov
mov
pushf
add
nop
cmp
jae
inc
in
aam
in
cmp
jo
jo
lea
push
hlt
das
push
xor
xchg
push
hlt
mov
inc
push
xor
icebp
push
into
sbb
movs
xor
and
mov
inc
or
int3
ror
mov
inc
cmp
add
loopne
sbb
jo
(bad)
lock
cli
push
push
or
add
pop
aaa
add
adc
inc
sbb
sub
xchg
cmp
adc
(bad)
(bad)
xchg
call
clc
add
call
cmp
jecxz
xor
test
test
xor
cs
sbb
mov
inc
(bad)
lea
test
mov
out
lods
adc
xor
pop
mov
out
mov
jo
push
lock
add
sar
inc
retf
add
pop
xchg
mov
xchg
in
imul
ins
leave
adc
mov
in
or
push
sub
dec
sub
sbb
push
xchg
sub
jne
mov
dec
popf
not
or
mov
jp
adc
sub
jmp
jnp
sub
sbb
ret
or
jne
std
dec
mov
add
and
cmc
popf
ror
ret
mov
dec
or
dec
push
lods
nop
sbb
add
rol
sbb
jo
sub
cmp
rcl
pop
add
nop
hlt
or
pop
aad
mov
test
add
fild
pop
xchg
mov
das
jbe
jo
retf
js
cmp
setg
or
push
test
pusha
mov
test
fistp
mov
hlt
or
inc
inc
add
pop
(bad)
in
xor
mov
xor
(bad)
and
and
inc
push
jmp
push
sbb
nop
cs
cmp
lahf
inc
and
xor
aas
pop
mov
and
push
(bad)
mov
inc
adc
call
add
xchg
mov
push
adc
xor
jne
add
mov
inc
mov
xchg
sbb
fwait
test
jmp
and
push
aas
sbb
cli
dec
add
nop
mov
lock
into
cmp
and
jmp
dec
nop
xor
scas
cld
lahf
test
jnp
inc
inc
ins
movs
arpl
or
xchg
jecxz
sbb
addr16
inc
push
rol
mov
and
or
dec
push
dec
xor
pop
push
dec
add
test
inc
adc
mov
fidiv
jle
aaa
sbb
data16
adc
push
dec
inc
add
add
push
dec
mov
add
push
cwde
add
jg
dec
dec
push
push
dec
dec
dec
dec
inc
dec
push
cs
xor
push
and
fsubr
je
pop
push
arpl
pop
shr
inc
add
fs
(bad)
mov
(bad)
invd
dec
push
gs
pop
and
jae
adc
jo
aad
mov
popa
jo
cs
out
das
adc
and
inc
or
or
inc
push
push
inc
dec
aas
or
adc
rcr
lahf
or
arpl
inc
xor
push
add
adc
adc
(bad)
pusha
add
mov
add
add
(bad)
aam
and
arpl
std
pop
pop
in
lods
sub
outs
fs
sub
push
mov
ret
add
push
xor
js
fs
pop
add
push
mov
test
jae
inc
xchg
jae
jbe
jg
mov
and
(bad)
dec
push
out
or
add
les
inc
or
sub
adc
ja
dec
ja
mov
add
xchg
jbe
lock
jae
sbb
or
in
or
mov
outs
pushf
push
adc
lahf
sti
mov
fs
cs
or
or
dec
push
cmp
fdiv
push
outs
dec
xchg
xor
test
mov
add
cs
inc
pop
jnp
icebp
and
fild
cmp
add
aam
push
je
loop
call
inc
pop
inc
inc
push
xchg
loop
lea
pop
enter
mov
or
or
int3
jae
jecxz
jno
ja
lahf
add
ja
sbb
xchg
test
or
xchg
ins
dec
mov
add
sub
jb
shr
jb
(bad)
mov
or
mov
test
call
imul
sar
jbe
in
mov
dec
xchg
sbb
adc
outs
sbb
push
jne
add
push
inc
das
mov
dec
mov
mov
xchg
adc
push
ja
pop
xchg
mov
or
call
cld
aas
mul
mul
or
(bad)
push
sbb
mov
add
rcr
jns
in
lods
sbb
mov
dec
inc
imul
sbb
push
and
xchg
or
inc
dec
es
adc
add
ja
push
sub
adc
pushf
adc
movlps
in
lock
dec
mov
xor
mov
mov
xchg
ins
dec
pop
cmp
mov
sub
das
inc
jb
cwde
adc
add
adc
es
adc
pop
sub
pop
xchg
inc
repnz
in
jg
icebp
ins
add
andnps
add
jg
mov
sbb
mov
mov
mov
sub
and
in
mov
push
jle
inc
outs
sar
div
add
sub
mov
fld
(bad)
or
sbb
push
mov
xchg
or
mov
and
jg
dec
sub
popa
cmp
test
xchg
aad
cmps
adc
cmp
push
push
imul
ror
sti
fwait
icebp
out
mov
sub
xchg
xchg
lea
test
outs
mov
adc
inc
cmp
adc
je
or
jne
pop
sbb
or
jnp
mov
push
ins
add
je
jg
xor
jb
rol
mov
je
adc
adc
xor
jb
jb
fs
pop
pop
jb
jb
push
push
dec
dec
jb
jb
inc
inc
cmp
jb
jb
xor
sub
jb
jb
and
adc
aam
jb
or
inc
shl
and
xor
mov
clc
pop
call
and
adc
adc
or
ds
xor
rcl
push
xchg
add
retf
popa
jne
and
jmp
mov
mov
push
mov
mov
mov
or
inc
mov
in
inc
xchg
data16
lock
sbb
scas
mov
sbb
hlt
and
adc
dec
fbld
lods
in
xor
and
addr16
xlat
xchg
cdq
cmp
inc
test
inc
adc
jmp
aam
les
in
rcl
movs
aaa
mov
je
mov
push
xchg
sbb
std
fs
push
aad
ror
cmp
lea
cmp
jne
jno
fisub
and
pop
test
mov
pop
test
into
outs
or
add
add
push
mov
sub
hlt
(bad)
dec
pop
inc
push
xor
dec
jmp
mov
sub
pop
lock
fwait
shl
inc
cmps
jb
pop
pop
(bad)
mov
outs
add
adc
inc
popa
xchg
pop
pop
jp
cmp
or
sbb
jmp
cmp
jp
lea
(bad)
cli
mov
mov
sub
jmp
push
add
sub
sub
jo
loopne
xor
mov
and
jle
and
movs
and
xchg
sti
jg
mov
inc
xchg
xchg
(bad)
fcom
and
(bad)
mov
dec
xchg
cmp
je
xor
rcr
xchg
sub
pop
add
repz
ret
sbb
pop
scas
sbb
in
add
pusha
or
xor
push
fld
fadd
in
test
adc
in
fwait
sahf
mov
fxtract
fxch
fistp
fld1
fchs
push
fprem
add
fstp
cmp
aaa
xchg
lea
rcr
fld
jmp
pavgb
add
sub
pop
shr
rcr
inc
bound
fmul
shr
jae
fmul
jne
fstp
add
xor
fstp
mov
sub
out
in
push
fldln2
fdiv
push
fiadd
jmp
push
ror
push
add
sbb
sbb
outs
ins
and
cdq
sbb
or
xchg
in
mov
addr16
ret
inc
loop
mov
enter
add
shl
add
add
add
cs
dec
in
adc
add
dec
push
add
inc
sub
pop
outs
fadd
scas
movs
iret
add
or
sub
adc
sub
mov
cld
and
aas
in
lahf
pushf
adc
ror
add
mov
adc
inc
and
fist
sbb
dec
int3
pop
or
mov
xsave
mov
fwait
sbb
lock
outs
outs
fucomp
sahf
add
bswap
pop
cmp
sti
sti
sbb
outs
jae
mov
imul
cdq
ret
mov
call
(bad)
cld
lea
test
lahf
inc
jge
inc
add
cmp
ror
push
shl
aas
dec
loopne
daa
in
dec
jb
xchg
es
xchg
ins
rcr
pop
aaa
pop
jge
or
inc
jo
lahf
inc
fstp
xlat
add
jbe
mov
fs
pop
cmp
sbb
add
aaa
lea
js
pop
jge
(bad)
in
inc
lock
fist
pop
push
das
pushf
or
shl
adc
cld
scas
pop
adc
fdiv
or
into
sets
adc
fcmove
push
add
pop
push
ror
inc
xchg
xor
or
or
mov
mov
in
add
sub
or
sbb
adc
outs
dec
addr16
and
test
or
bound
icebp
rcr
cwde
mov
and
push
ret
mov
xchg
xchg
inc
sub
ins
ja
mov
dec
cmps
add
inc
inc
arpl
xchg
sbb
(bad)
repz
sbb
xchg
enter
clc
adc
cwde
mov
inc
lock
enter
adc
int3
pop
sahf
jns
adc
inc
push
loopne
sahf
out
xchg
popf
jge
cmp
(bad)
test
inc
add
add
mov
pop
pop
add
mov
hlt
xchg
int3
sahf
inc
mov
jp
jne
je
push
cdq
pop
inc
inc
sbb
mov
mov
test
ins
pop
enter
adc
and
movs
mov
push
into
sub
or
sub
mov
dec
pop
mov
or
xor
jns
push
pop
ret
call
enter
dec
pop
(bad)
cmps
test
jnp
mov
pop
adc
cmp
sub
add
push
cld
les
leave
sbb
add
mov
mov
push
add
retf
aam
call
jge
add
xchg
mov
imul
add
data16
out
push
jb
aas
pop
dec
push
adc
mov
dec
int3
cmp
add
push
pop
arpl
sti
repz
js
adc
jbe
sub
adc
scas
pop
mov
push
mov
adc
push
or
rcr
ins
pushf
imul
jb
push
or
dec
inc
data16
ins
nop
inc
inc
test
out
pop
and
test
xor
mov
inc
or
or
movs
ror
pop
movs
das
les
fbstp
adc
xchg
sbb
outs
(bad)
xor
add
push
mov
jne
rol
jae
jmp
or
fiadd
iret
fld
fsub
pop
dec
movntq
int
(bad)
cmp
xorps
and
fnsave
jo
pop
add
pop
imul
fabs
fisttp
sub
and
enter
(bad)
das
xchg
pop
mov
dec
push
dec
nop
dec
inc
aaa
dec
or
movs
dec
xchg
pop
fstp
(bad)
enter
rcr
push
adc
add
(bad)
aaa
(bad)
mov
add
jecxz
mov
inc
mov
fisubr
push
jmp
dec
or
nop
xchg
push
sub
outs
inc
pop
mov
inc
pusha
jno
inc
pop
adc
out
(bad)
stc
loop
adc
sahf
daa
mov
push
mov
xchg
popf
mov
pop
mov
inc
sbb
sahf
test
fld
in
retf
xchg
out
jns
stc
mov
add
nop
xchg
xchg
xchg
xor
fimul
adc
add
sub
mov
add
inc
push
jge
push
in
jecxz
xchg
hlt
mov
or
pop
add
ins
test
addr16
sbb
pop
add
or
pop
call
cmc
ret
mov
mov
out
push
(bad)
fsub
sti
aas
push
push
sub
push
xchg
and
daa
mov
sbb
xor
mov
sub
nop
out
out
mov
ja
test
and
jmp
mov
add
(bad)
loopne
push
and
scas
(bad)
xchg
xchg
movs
xchg
push
das
and
xchg
dec
xchg
sti
cmp
movs
push
retf
or
sbb
cmp
leave
push
retf
and
inc
shl
aas
push
jbe
push
push
mov
pop
ret
das
ror
adc
aad
push
push
fiadd
sub
ret
std
dec
push
or
movs
dec
rcl
mov
(bad)
inc
push
stos
pop
stos
mov
(bad)
push
and
mov
mov
cmp
mov
push
sub
xchg
add
pop
inc
jnp
push
dec
mov
and
mov
sub
out
pushw
and
fist
mov
or
lea
ret
ret
sete
mov
xor
or
aaa
add
xchg
pop
aaa
add
mov
jo
push
enter
scas
and
xor
sub
push
or
inc
jg
inc
cwde
or
adc
cmp
and
jmp
lea
in
sar
or
fmul
push
and
dec
ins
xchg
out
cmp
aaa
push
or
dec
arpl
into
inc
mov
xchg
maskmovq
not
mov
mov
pop
pop
nop
sbb
inc
push
add
add
pop
pusha
cmp
out
adc
adc
sbb
cmp
jl
pcmpeqw
cmp
cmc
and
jg
paddw
sbb
mov
test
mov
jge
mov
cmps
add
outs
out
in
rol
and
loope
push
mov
xchg
loopne
dec
xchg
xchg
adc
sub
mov
jbe
adc
inc
mov
lods
leave
fisttp
adc
fcomp
add
fcom
cwde
push
add
hlt
das
add
xlat
inc
fsubr
sbb
sbb
and
call
sahf
inc
dec
cmp
or
pop
rcr
in
add
fwait
movs
in
adc
pop
pop
je
push
push
mov
jmp
adc
xchg
push
dec
(bad)
cmp
xchg
jno
(bad)
clc
sub
fwait
dec
add
sub
loope
add
repz
inc
jno
inc
sub
push
aaa
xchg
ror
mov
inc
sbb
inc
test
mov
fistp
imul
xchg
jmp
mov
sub
ret
adc
dec
sbb
adc
ret
mul
mov
pusha
mov
jne
push
or
mov
push
xchg
out
scas
ins
outs
pop
pusha
or
dec
sbb
mov
inc
lahf
mov
inc
cli
scas
inc
add
mov
mov
shr
xchg
or
inc
xor
imul
lea
imul
lds
clc
test
aas
xchg
je
mov
call
sbb
je
mov
ins
test
fwait
jmp
xor
mov
sbb
and
adc
test
add
cmp
add
push
aas
xlat
push
mov
xchg
and
fadd
xor
xor
pop
inc
xchg
push
test
pop
pop
test
or
mov
adc
xchg
pusha
mov
retf
or
loopne
push
xor
push
and
mov
mov
aas
mov
or
cmp
sub
jne
aaa
push
rol
sahf
jecxz
rcr
inc
mov
pop
leave
adc
cmps
add
dec
adc
cld
mov
scas
addr16
cwde
lea
pop
retf
jo
out
and
jo
cmp
outs
jg
fwait
inc
sub
xor
daa
imul
mov
retf
test
(bad)
out
mov
xor
sub
push
xor
jecxz
loop
jne
js
mov
add
or
jl
xor
or
pop
xor
es
out
jge
push
jg
shr
or
xor
sub
sub
sub
mov
sbb
xor
sub
imul
dec
add
xor
adc
add
mov
and
popf
mov
push
(bad)
push
ficom
xchg
adc
cmc
mov
mov
cmp
or
iretw
repz
jb
mov
jmp
add
add
cmps
sahf
adc
adc
add
xor
push
add
adc
add
mov
push
adc
aaa
push
sub
sbb
clc
lds
jg
xchg
add
xor
not
add
add
fwait
cmp
ret
dec
sbb
pop
and
xchg
pop
push
pop
xor
enter
sub
pop
or
das
pop
mov
out
ja
and
mov
xchg
push
sbb
mov
add
push
in
push
loope
jns
out
leave
shl
xlat
rcl
sbb
and
int3
hlt
pop
or
or
fnsavew
adc
push
ret
outs
out
out
pop
add
add
adc
add
add
push
push
adc
mov
out
adc
(bad)
fld
adc
sub
and
push
adc
mov
adc
cmps
adc
sbb
pop
and
imul
push
sbb
adc
lock
shr
add
(bad)
mov
loopne
je
or
ret
add
sbb
es
mov
mov
pop
push
inc
outs
les
adc
or
sbb
aad
mov
dec
pop
arpl
gs
fdivr
add
or
inc
js
xor
dec
inc
push
sbb
pop
idiv
jbe
and
xor
fs
nop
mov
outs
dec
ja
dec
gs
adc
lods
jae
ins
jb
adc
outs
and
dec
add
push
or
add
inc
(bad)
push
push
(bad)
test
in
jge
dec
movs
push
sbb
adc
cmp
jle
lea
or
push
add
jle
mov
pop
mov
rcl
push
clc
jne
loopne
or
jge
fsub
cmp
pop
mov
mov
pop
punpckhdq
push
add
push
pop
fdiv
dec
push
push
je
dec
lods
xor
iret
pop
sub
ins
sub
movs
sub
adc
xor
sbb
into
in
adc
sbb
adc
add
test
add
add
mov
pop
fcomp
ror
push
fild
or
push
add
jne
ins
data16
jno
loope
sub
mov
pop
popf
rol
shl
mov
dec
outs
push
dec
sbb
imul
loopne
mov
adc
loopne
inc
(bad)
fisttp
pop
or
add
or
jnp
or
or
fsubr
or
nop
push
sti
add
int3
daa
imul
or
or
es
jbe
imul
push
inc
ins
popa
jae
fs
or
push
leave
and
pushf
ret
shl
mov
ret
add
in
mov
outs
jmp
sub
lock
sbb
push
sbb
pop
and
sbb
add
shl
sbb
add
push
xchg
arpl
test
je
outs
fs
or
push
outs
dec
je
sub
sahf
mov
inc
xchg
mov
stos
or
push
inc
lods
sahf
ret
outs
jo
mov
fs
clc
xchg
rcr
lock
adc
jb
popa
popf
dec
loopne
and
in
adc
push
mov
inc
enter
dec
enter
shl
xor
or
mov
enter
pop
out
adc
sbb
push
xor
adc
xor
and
adc
adc
and
jmp
std
push
inc
in
push
mov
mov
dec
ins
or
or
push
xor
cmp
or
or
nop
dec
mov
add
enter
arpl
enter
dec
data16
push
mov
push
pop
dec
fist
enter
adc
sbb
or
jmp
mov
inc
or
jb
inc
and
add
inc
addps
dec
aad
inc
ret
inc
or
push
xchg
es
cmp
lock
jo
jnp
jl
add
outs
jb
dec
push
js
aaa
mov
xor
push
cmp
inc
cdq
inc
push
mov
xchg
adc
mov
hlt
cs
push
pusha
in
pop
xor
test
add
hlt
pop
or
jb
popa
arpl
ret
rol
rcr
cmp
ja
mov
lock
lock
(bad)
nop
lock
shl
mov
fild
adc
push
inc
gs
test
sub
addr16
sbb
std
cmp
or
pop
dec
or
sub
push
push
scas
jmp
xchg
or
jle
gs
add
mov
pusha
ins
shl
sahf
mov
push
pop
or
add
push
sar
or
ror
push
imul
adc
pop
pop
add
add
mov
js
sbb
cmp
das
push
mov
mov
pop
sub
sbb
fsub
leave
in
mov
scas
gs
add
or
inc
ret
pop
into
fs
dec
push
jo
sub
jno
outs
sbb
enter
pop
sbb
and
xor
jne
jmp
jbe
ror
xlat
add
inc
rol
or
adc
aas
push
inc
cmp
enter
into
and
cdq
test
mov
xor
inc
push
call
ins
pop
and
or
popa
cmp
je
out
sbb
or
adc
cmps
mul
gs
pop
pop
sub
add
jbe
sub
push
clc
xor
sub
push
stc
or
jl
leave
daa
cdq
push
inc
cmp
(bad)
ins
(bad)
jmp
ins
cwde
rol
(bad)
jae
jl
mov
jno
inc
pop
inc
sub
and
cmp
sub
and
mov
push
or
jmp
lds
lahf
enter
dec
push
rol
aam
mov
enter
fwait
(bad)
mov
sbb
inc
pop
cmp
lds
test
cmp
in
ret
or
scas
clc
test
mov
jns
fs
dec
xor
pop
sub
or
mov
sti
loopne
rcr
xchg
jae
mov
(bad)
scas
jb
mov
test
pop
mov
inc
lds
and
and
cmp
xor
sbb
push
push
jge
int
es
out
push
aam
lods
icebp
call
mov
cwde
out
push
push
and
xor
popa
jo
add
mov
shl
push
add
pop
(bad)
enter
mov
das
jg
or
xchg
add
add
test
cmp
or
test
mov
inc
ss
or
movups
fst
ret
outs
xor
inc
pusha
cmp
or
loopne
push
adc
ror
daa
imul
dec
jb
cmp
enter
and
inc
xor
into
mov
inc
imul
dec
push
cmp
ret
outs
test
pop
cmp
nop
cmp
in
nop
loopne
push
in
in
aam
push
es
jb
mov
mov
cdq
fnstenv
push
jno
add
aaa
pop
add
add
cmp
in
inc
aad
inc
sub
and
push
add
mov
aam
cmp
je
(bad)
push
ins
fisub
mov
jns
cmp
sbb
lahf
(bad)
adc
mov
call
pop
scas
xor
xor
shl
pusha
rol
cvtps2pd
retf
sbb
cdq
cmp
xchg
int3
lock
cmp
sbb
sbb
movs
enter
sbb
or
xor
ss
add
add
xchg
pushf
test
push
add
test
add
mov
in
sub
xchg
mov
fstp
movs
xor
sub
dec
sub
outs
or
(bad)
ins
aaa
ret
cwde
fld
add
imul
sbb
lea
jae
xchg
inc
pop
fdiv
in
lea
inc
rol
rol
xor
fisub
fadd
nop
cwde
imul
lods
ror
adc
int3
add
inc
ror
and
fadd
xor
out
in
aas
inc
mov
int
lods
pop
xchg
jne
pop
dec
jl
inc
iret
cmp
mov
gs
pop
and
test
push
and
or
mov
xor
inc
clc
and
inc
popf
retf
je
inc
xchg
loopne
or
and
push
dec
ds
in
ss
pop
int3
psrld
(bad)
jo
push
pop
pop
add
add
cmc
xchg
lds
and
push
pop
xor
test
sub
data16
or
mov
pop
cwde
das
mov
push
cmp
or
sub
xor
jns
cmp
inc
dec
cwde
push
mov
add
iret
xchg
push
rcl
test
or
pop
gs
mov
push
stos
sbb
das
jo
push
inc
adc
or
stos
out
mov
mov
and
cmps
dec
add
sub
push
test
cmps
pop
inc
mov
or
pop
adc
ja
push
or
mov
js
add
or
sbb
inc
std
mov
data16
push
rcr
push
mov
mov
dec
adc
pusha
ins
les
adc
out
add
pop
push
fcom
inc
or
push
in
punpckhbw
inc
mov
aad
fstp
es
das
jmp
dec
inc
(bad)
je
inc
sar
sbb
in
mov
inc
les
xchg
test
cmps
or
imul
jle
fsubr
xor
pop
ror
shl
cs
adc
and
and
cmp
in
lods
sar
adc
jns
movs
sub
cmp
adc
pop
xchg
aad
rol
add
jbe
or
cmp
pop
add
aam
aad
nop
or
mov
mov
stos
mov
hlt
outs
inc
pop
pop
sbb
xor
cmc
push
pushf
xor
jo
mov
cmp
fld
add
adc
and
inc
fld
aas
and
mov
pop
inc
push
lds
lods
or
and
xor
xchg
or
hlt
adc
popa
fs
dec
jle
inc
dec
sbb
je
push
(bad)
out
fwait
sub
loopne
test
xchg
inc
cmp
iret
test
scas
fidivr
adc
iret
or
push
lods
repz
repz
and
cmp
jo
ret
aas
test
mov
add
cdq
jmp
cmp
sti
scas
(bad)
push
or
and
add
inc
aad
inc
cmp
(bad)
xlat
ror
lds
mov
push
dec
pop
add
and
mov
dec
jge
retf
rcr
mov
dec
inc
add
pop
add
test
frstor
mov
fild
or
and
ja
test
sbb
fadd
mov
pusha
pop
dec
fisubr
xor
scas
movs
fcom
sbb
(bad)
mov
fadd
cmp
dec
add
push
sbb
mov
add
js
fist
push
mov
and
jmp
add
imul
arpl
push
lds
adc
jp
or
adc
or
or
xchg
ds
xchg
sbb
loopne
jns
mov
loopne
add
add
lods
loopne
repnz
push
pop
cs
loop
adc
popa
mov
or
movs
lahf
xor
sub
into
or
dec
cmp
and
in
and
(bad)
and
pop
stos
aad
add
inc
push
mov
add
inc
lock
mov
fcmove
sub
shr
add
ret
sbb
outs
sbb
xor
outs
xor
es
aam
inc
xchg
inc
push
adc
push
jl
mov
and
jmp
xchg
lods
outs
out
mov
or
les
lock
xor
lea
or
sub
jb
jmp
out
jb
or
outs
add
xchg
or
out
out
add
xor
setb
fucomi
dec
outs
jbe
inc
push
push
xor
cmp
sbb
or
pop
xchg
pop
cmp
or
and
movs
lds
dec
push
(bad)
addr16
je
mov
loope
dec
pusha
jp
push
repnz
add
xchg
lods
fmul
push
je
daa
in
cld
fiadd
loopne
sub
stos
popa
and
test
rcr
fnstsw
vpminsb
add
add
add
or
jns
gs
and
jecxz
mov
jmp
and
pop
cmps
mov
rol
add
cs
adc
xchg
push
push
ror
push
fsub
inc
or
pop
test
dec
xchg
ja
jbe
mov
pusha
popa
stos
inc
jmp
out
jno
add
lock
push
sbb
inc
cmps
adc
cwde
fisubr
pop
mov
fisttp
sahf
push
sub
cmps
loope
push
ds
rol
inc
add
aas
scas
adc
loop
jmp
sbb
jae
arpl
push
xlat
imul
dec
inc
add
cwde
lods
push
jae
dec
movs
and
jae
sub
lock
or
cmc
xlat
sbb
and
in
xor
cmps
adc
fisttp
mov
jg
xor
inc
add
imul
or
pop
shl
cmp
test
test
jmp
shl
cwde
sbb
or
sub
shl
cmp
int
add
(bad)
or
mov
jne
add
cmp
dec
cmp
push
sbb
sbb
xchg
cmp
pop
dec
int3
and
pop
fmul
movq
push
iret
sbb
jnp
mov
or
jmp
add
inc
repz
loope
mov
test
aaa
mov
stos
add
fs
cmp
inc
aam
bound
pop
xchg
loope
adc
ins
jle
push
in
das
repnz
iret
loopne
icebp
push
inc
rcr
or
call
jne
pop
mov
shl
ins
mov
test
add
jae
and
loop
pusha
sub
pop
xchg
nop
cmp
pop
push
cmp
xchg
dec
mov
mov
pop
pop
aad
loope
or
loope
or
jmp
ret
les
cmp
cld
fs
or
mul
sub
jecxz
cli
mov
cmps
iret
clc
movs
inc
out
add
sub
push
xor
movs
dec
ret
sub
movs
lds
scas
push
sbb
add
jecxz
hlt
jecxz
inc
in
dec
dec
data16
inc
pushf
retf
sbb
push
dec
push
sbb
or
loopne
cmp
push
rcl
xchg
pop
adc
and
test
stc
push
out
and
mov
sbb
adc
or
push
mov
adc
mov
mov
add
inc
xchg
or
in
or
inc
cdq
cmps
inc
xlat
or
rcr
or
sbb
sbb
rcl
inc
dec
and
cmp
shrd
pop
lock
xchg
mov
sub
shl
mov
mov
ja
xchg
and
and
jmp
out
and
and
pop
test
dec
fild
dec
mov
adc
loop
dec
popa
test
and
add
in
mov
dec
cvtps2pd
scas
sbb
mov
stos
ror
jmp
movs
mov
(bad)
outs
cmp
movs
jnp
fisubr
dec
jl
push
pusha
fwait
or
gs
loope
mov
inc
inc
daa
cwde
in
jmp
test
pop
cmp
push
sub
popa
ins
jge
dec
retf
lods
adc
mov
outs
pop
in
add
mov
add
add
jmp
pop
push
cmp
xor
cmp
psubb
fild
clc
add
inc
cvttps2pi
retf
(bad)
or
jle
lods
in
adc
loop
xor
sub
(bad)
fsub
stos
call
cmps
std
andps
cmps
add
and
mov
repz
adc
(bad)
imul
(bad)
add
movs
pop
adc
ret
xor
sub
xchg
mov
(bad)
cli
push
lods
mov
stos
pop
add
aas
pop
out
xor
leave
stos
mov
icebp
sahf
add
sbb
cdq
mov
test
into
mov
fsub
leave
sbb
mov
push
dec
pop
rcl
dec
mov
xor
mov
mov
jne
xchg
cld
xchg
pusha
rcr
lods
adc
dec
add
add
mov
or
mov
mov
inc
xchg
push
je
adc
pop
mov
pop
in
das
xchg
push
xor
pop
add
(bad)
sbb
mov
adc
cwde
adc
ins
pop
and
and
dec
cld
pop
push
clc
sbb
inc
push
daa
sbb
fsubr
pop
test
ficom
mov
pop
inc
push
inc
jne
cmps
ins
aaa
jae
push
push
das
jae
adc
inc
mov
test
jmp
scas
jecxz
inc
fbstp
clc
aas
inc
mov
or
push
scas
pop
pushf
jo
outs
sub
pop
push
std
or
mov
sar
sub
test
xchg
rsm
push
dec
pusha
and
adc
in
scas
add
cmps
icebp
repz
out
push
adc
fld
mov
inc
(bad)
push
add
pop
cmp
inc
push
jo
cmp
add
jo
add
ret
movs
push
pop
pop
xor
pop
and
fs
stc
ret
nop
and
dec
inc
sbb
and
jo
xlat
pop
icebp
retf
mov
test
adc
out
in
mov
out
test
jo
fldenv
pop
test
inc
sub
cdq
dec
sbb
dec
les
pusha
popa
pop
jae
loope
ins
sbb
ins
je
shl
sbb
mov
iret
cld
push
lods
lock
jns
scas
push
inc
add
and
test
inc
pop
ret
sbb
mov
jne
or
push
fmul
loope
mov
(bad)
lock
mov
inc
push
outs
adc
jmp
cmp
pop
push
jl
mov
jns
hlt
sti
jmp
pop
add
scas
(bad)
ja
inc
or
jp
and
fistp
mov
or
mov
cmp
mov
inc
add
push
dec
inc
mov
sar
dec
lods
xchg
mov
test
add
mul
icebp
aaa
or
ss
repnz
xor
cmp
and
sbb
and
sbb
jl
mov
adc
movs
and
pop
inc
sti
mov
repnz
sub
shr
mov
repnz
cmp
add
sub
mov
sbb
dec
stc
dec
add
sub
lock
dec
or
repnz
js
pop
repz
add
cmps
out
xchg
dec
jb
es
pushf
(bad)
int3
rcl
retf
test
cmp
pop
adc
sub
clc
repz
ret
movzx
hlt
lds
adc
inc
add
cmp
add
cwde
hlt
jg
popf
push
cmp
cmc
ins
daa
cmc
das
push
cmc
mov
jg
pop
xor
iret
daa
adc
mov
push
call
pop
arpl
adc
cli
adc
push
inc
retf
cmc
bsf
mov
adc
or
xor
or
jb
xor
xor
inc
or
lock
cmp
lea
jg
lock
sbb
dec
daa
hlt
cmc
(bad)
mov
pop
inc
lods
cwde
hlt
ja
xchg
(bad)
xor
jle
movs
add
cmc
pop
mov
inc
test
dec
test
cs
dec
test
inc
hlt
pop
sub
inc
sub
pop
cmp
xchg
mov
sqrtps
push
push
mov
dec
or
push
cwde
xchg
inc
mov
mov
adc
cmp
cmp
int
neg
pop
xor
cmp
icebp
push
mov
mov
xor
push
(bad)
xchg
stc
pop
fsubr
repnz
pop
adc
inc
repnz
inc
pop
aaa
jb
push
mov
add
sub
cmps
pop
leave
sub
mov
stc
xor
xchg
xchg
aad
in
nop
stc
xchg
stc
aas
inc
icebp
and
inc
nop
clc
jne
icebp
sub
ja
cli
jg
and
adc
cli
cli
add
cmp
jg
scas
jno
(bad)
icebp
scas
je
xchg
sbb
outs
pop
sub
or
add
mov
sbb
aam
or
xlat
pop
aaa
lds
or
add
sbb
out
das
retf
dec
pushf
or
mov
cmp
prefetch
jbe
push
(bad)
fild
addr16
and
loopne
retf
mov
bound
ins
hlt
test
cld
jmp
mov
cld
fisub
adc
popf
xor
add
adc
ret
sub
push
push
hlt
jb
jns
xchg
add
xor
mov
sbb
and
loop
sbb
mov
aam
div
jl
pop
or
adc
xor
and
enter
addr16
mov
je
or
scas
xchg
add
adc
push
nop
data16
(bad)
cmp
je
or
ins
or
sbb
sbb
sbb
loopne
mov
sbb
(bad)
lock
(bad)
div
pop
push
add
in
mov
imul
(bad)
scas
sub
push
inc
and
ja
mov
and
das
rcr
mov
lock
movzx
std
das
test
icebp
push
inc
jecxz
aaa
sar
(bad)
xor
test
aam
lods
leave
add
xchg
mov
adc
(bad)
sbb
mov
loope
add
pop
ror
(bad)
xor
push
jne
mov
mov
xor
les
mov
scas
dec
pop
sub
xchg
ins
and
fs
adc
sub
js
sar
sub
pop
ss
leave
dec
dec
shr
loopne
mov
test
es
xor
hlt
(bad)
aas
xor
dec
popa
cmp
cmp
jo
push
push
jae
xor
popa
enter
add
dec
retf
inc
add
popf
mov
rsm
loop
add
fsub
or
outs
pushf
or
das
pushf
jl
xor
push
add
ins
rol
lods
jl
lea
dec
push
icebp
fld
clc
popf
ins
add
mov
push
pushf
mov
xor
xchg
mov
(bad)
nop
xchg
vxorps
add
cdq
pusha
xor
fsubr
or
sbb
mov
loopne
jge
lods
push
sub
int3
dec
push
xchg
adc
dec
inc
jne
outs
jecxz
sbb
js
jae
fwait
sub
pop
push
out
aaa
jge
xor
add
add
dec
outs
mov
cmp
popa
add
rol
cmp
pop
popf
and
loop
add
add
add
mov
jl
mov
pop
push
xchg
es
or
out
dec
sub
out
or
sbb
shr
or
inc
aam
xor
dec
lea
mov
into
sub
icebp
rol
jge
lods
cmps
lds
add
cmp
adc
loop
call
syscall
add
mov
push
cmps
xchg
xchg
daa
sub
xchg
cld
push
add
cmp
push
pop
and
inc
nop
inc
add
jg
push
gs
imul
mov
or
pop
add
sbb
and
add
pop
sub
out
mov
mov
push
mov
inc
and
outs
or
push
cmpxchg
gs
loope
sbb
mov
push
imul
add
inc
daa
jno
dec
aad
mov
fild
inc
call
and
dec
fcmovnu
or
jo
xor
jb
pop
popa
icebp
dec
or
cmp
cmc
inc
and
repz
(bad)
test
add
inc
xor
fisubr
inc
in
lock
mov
mov
nop
adc
daa
jno
and
fisttp
sub
pop
inc
mov
adc
sub
push
and
cwde
ds
arpl
xor
lock
inc
stc
cs
sbb
mov
test
inc
adc
push
inc
or
repnz
adc
test
fcom
mov
xchg
inc
dec
sub
adc
cmp
xchg
mov
(bad)
lock
lods
xchg
xchg
and
push
cdq
push
pushf
add
(bad)
sbb
jnp
sbb
pop
mov
mov
mov
jg
inc
xchg
adc
enter
ds
adc
mov
fstp
sub
iret
pop
js
sub
lahf
xchg
add
inc
mov
(bad)
jbe
push
shr
add
cmp
and
test
pop
gs
push
in
inc
mov
in
jg
xchg
lods
pop
int
push
adc
mov
push
sbb
jmp
mov
or
or
(bad)
pop
loopne
dec
jns
int
push
(bad)
aaa
push
ret
and
lock
push
fisttp
add
mov
ja
leave
push
ror
and
push
sub
xor
push
dec
add
inc
pop
xor
xor
outs
cdq
cmps
or
pusha
dec
cmps
lds
or
pop
(bad)
fmul
add
(bad)
cmp
lods
mov
cs
mov
outs
push
out
rol
ja
adc
pusha
mov
stos
sub
xchg
ror
xchg
adc
mov
dec
adc
jp
sub
cmp
add
mov
pop
cmp
les
inc
inc
fidiv
lahf
push
add
add
shl
sbb
lock
outs
mov
pop
pop
das
jbe
mov
inc
or
retf
mov
in
push
mov
cmp
loopne
popa
dec
test
or
fs
adc
in
adc
jo
inc
adc
nop
push
add
test
cmp
or
and
inc
and
(bad)
add
sbb
int
outs
mov
test
mov
(bad)
push
pop
and
sub
or
add
mov
adc
jmp
dec
sub
add
clc
jnp
push
movs
inc
dec
push
sar
pop
push
inc
xor
jns
add
icebp
popw
mov
das
nop
adc
jp
daa
sar
es
das
(bad)
adc
sbb
or
mov
aam
add
ins
sbb
or
inc
icebp
or
jae
inc
aad
lods
cmp
lods
adc
mov
mov
push
xchg
mov
xor
sub
outs
shl
add
imul
jo
add
pop
pop
or
xchg
inc
test
dec
int
icebp
adc
hlt
shl
sub
jl
cmp
xchg
cld
dec
pushf
jge
add
jne
or
mov
shl
ror
push
jl
sbb
mov
iret
sub
mov
mov
inc
jno
dec
fdivr
cmp
retf
icebp
or
not
jmp
mov
inc
dec
test
adc
add
(bad)
stos
or
add
in
(bad)
mov
xor
js
jns
push
dec
je
push
inc
cmp
rol
sbb
cmp
cmp
mov
sbb
(bad)
xor
and
dec
mov
xor
jne
xchg
daa
daa
int
push
pop
rcl
pop
pop
bswap
leave
leave
ins
pcmpeqb
sti
in
fs
and
(bad)
test
mov
mov
pop
lock
and
jge
mov
lock
jmp
pop
mov
jl
and
add
ret
jecxz
stos
aaa
dec
or
xchg
xor
aam
xchg
mov
inc
push
call
sub
or
fbstp
inc
nop
xchg
add
das
sub
retf
add
add
jmp
mov
sbb
push
jg
xor
call
add
xor
jo
inc
adc
test
and
push
add
fldcw
outs
push
pop
inc
add
ja
push
inc
xchg
add
inc
std
sub
add
dec
jl
cmp
out
dec
xchg
pop
mov
mov
mov
mov
dec
xchg
shl
adc
and
inc
mov
gs
hlt
aam
xor
cmp
xor
jns
or
(bad)
addr16
add
imul
fist
dec
imul
test
jno
js
stos
shl
ror
imul
add
(bad)
div
push
or
dec
add
xor
imul
inc
xchg
sbb
test
xchg
inc
mov
sbb
cmp
cmp
movs
xchg
push
adc
mov
mov
retf
jb
sbb
je
repnz
dec
adc
lock
pop
mov
adc
ror
loopne
or
dec
gs
inc
pop
arpl
ret
mov
or
aad
dec
mov
xchg
pop
jg
das
out
dec
popa
pop
movs
dec
pop
adc
adc
xchg
es
inc
inc
jo
add
pop
aaa
jae
popa
imul
stos
xor
arpl
adc
dec
popw
dec
das
push
inc
dec
iret
imul
push
fld
cdq
addr16
daa
jns
sbb
mov
dec
mov
out
(bad)
push
outs
jb
inc
aaa
es
inc
pop
add
sar
adc
sti
push
dec
adc
cwde
dec
add
fcom
mov
or
mov
pop
enter
push
jb
ins
inc
or
sub
xor
retf
sbb
data16
add
js
jge
push
inc
inc
in
dec
iret
mov
xor
sub
loope
cmp
pop
cmc
inc
sub
scas
test
scas
cdq
pop
jb
or
or
inc
in
cmp
add
add
and
or
into
inc
dec
sub
test
mov
jns
dec
mov
inc
pusha
sub
jb
std
add
xor
cdq
call
pop
ja
sub
or
test
and
pop
scas
sbb
in
adc
and
mov
fcomp
xchg
sbb
lock
lock
push
sub
xor
mov
ds
xchg
mov
movs
out
add
add
add
dec
movs
ret
sbb
inc
mov
and
fild
cwde
add
les
je
inc
adc
mov
and
dec
cmc
fsub
inc
pop
mov
sub
aaa
mov
pop
xor
inc
ja
mov
rol
adc
dec
mov
and
lahf
pop
in
jmp
and
add
mov
popf
sub
mov
pop
test
pop
mov
js
es
sub
clc
dec
das
pop
scas
pop
aad
daa
xor
add
inc
push
bound
jno
cmp
or
hlt
in
movs
daa
jns
loopne
retf
push
aad
mov
push
sbb
ins
pop
xor
or
dec
inc
jo
add
retf
test
fbld
mov
xchg
clc
jp
sub
inc
mov
cs
cmp
or
dec
dec
cmps
ss
sbb
aaa
(bad)
or
adc
rcl
cmp
cmc
and
inc
sti
sub
jmp
test
xor
mov
mov
sti
adc
mov
es
sbb
inc
fadd
xchg
add
add
jg
inc
gs
sbb
ror
sub
or
mov
adc
or
das
das
call
mov
mov
add
jns
and
adc
shl
shl
jns
push
push
out
dec
or
mov
in
or
adc
jmp
(bad)
fcomp
or
aam
jae
xchg
stos
sub
push
add
jo
pusha
imul
inc
lods
inc
inc
push
aam
inc
pop
xchg
push
inc
add
sub
inc
cs
sbb
cmp
pushf
movs
sub
jo
pop
lods
das
add
sub
dec
fsubp
into
lock
out
or
nop
sbb
out
inc
adc
daa
(bad)
mov
pushf
sub
sub
jo
in
sub
daa
gs
sub
push
loopne
dec
inc
in
xchg
jo
add
dec
movs
sub
jno
cmp
adc
fist
das
add
cmp
das
arpl
sbb
or
pop
and
pop
mov
into
rcr
dec
inc
add
inc
pop
jle
pop
push
adc
add
test
or
sbb
cmp
enter
cmp
or
ret
inc
push
dec
ror
inc
push
dec
das
and
or
sar
pop
pop
push
mov
sub
loopne
hlt
push
movs
fist
lds
fbstp
in
or
das
push
xor
sub
sbb
ror
adc
xor
shl
(bad)
xor
cmp
add
fiadd
xor
fisttp
add
inc
mov
xor
xor
xor
inc
sbb
movs
and
xchg
ins
sub
add
mov
inc
lea
aam
popa
ror
repnz
adc
pop
and
call
je
sub
inc
cmp
cmps
xor
and
arpl
add
mov
pusha
or
ins
xor
or
das
xor
ret
test
cmps
lods
xor
mov
jg
shl
aas
loope
or
shl
paddb
jmp
xor
xor
dec
xor
adc
xchg
and
stc
repnz
and
adc
loopne
shl
dec
rol
lds
cmp
xchg
add
dec
inc
shl
mov
xor
or
inc
inc
lods
xor
mov
xor
lock
xor
adc
xor
push
loop
les
push
stc
inc
xchg
mov
cmp
stos
or
cmp
jns
hlt
xchg
loop
sub
xor
or
pop
pop
hlt
add
ins
xor
xor
cmps
or
shr
loop
addr16
adc
push
aaa
out
cmp
push
cld
test
aas
push
xor
test
push
dec
shl
loop
sub
aas
mov
push
xor
jmp
pop
adc
loope
push
cmp
stos
es
add
test
xchg
ss
cmp
jmp
cmp
mov
retf
mov
cmp
push
sar
dec
mov
test
dec
cmp
nop
jae
mov
fwait
cmp
aam
inc
push
cmps
mov
xchg
jecxz
xor
fistp
pop
sbb
aaa
inc
mov
sbb
adc
dec
inc
cmp
push
jecxz
add
add
or
add
mov
mov
ffree
cmp
jne
sbb
xor
mov
dec
fisub
sub
or
xor
fild
pop
xor
(bad)
fiadd
push
fst
jl
mov
mov
lahf
movs
pop
add
sub
sbb
lahf
or
inc
movs
xor
adc
ret
push
inc
inc
test
ss
out
push
fisubr
xor
sbb
or
bound
jno
gs
sub
mov
dec
lahf
xor
les
mov
ja
push
pushf
bound
adc
popf
call
add
cmp
xor
cmp
cmp
inc
ds
call
xchg
cmps
psubusw
cmp
jns
aas
inc
imul
xor
mov
mov
inc
inc
mov
xor
cmp
lock
inc
sbb
push
add
in
imul
loopne
outs
loope
sbb
dec
fiadd
mov
and
xchg
rol
loop
xchg
or
daa
xor
sbb
gs
cmps
add
popa
mov
xchg
fwait
fs
clc
lods
xchg
(bad)
inc
add
pop
add
add
mov
xor
adc
in
adc
push
retf
inc
mov
pop
popa
(bad)
iret
add
cmp
or
fsub
mov
add
movs
cmp
add
and
sub
xchg
fldenv
or
or
xchg
dec
jb
mov
cmc
or
test
out
in
sub
inc
ret
mov
add
inc
and
add
loopne
adc
xor
mov
or
imul
pop
inc
sti
sub
mov
cmp
xor
add
ret
es
icebp
popf
push
sub
adc
pop
or
test
(bad)
cmp
jb
sti
add
add
or
shl
fst
aaa
pop
push
xor
pop
adc
add
ins
ffree
push
in
add
push
mov
or
mov
jne
xor
sbb
push
and
test
das
adc
es
mov
sbb
jg
or
mov
inc
and
and
cwde
add
push
cmp
outs
push
pushf
push
add
aas
mov
xlat
push
jo
mov
mov
push
mov
inc
mov
jo
and
mov
inc
adc
fcomi
or
dec
xor
repz
or
nop
or
mov
or
jo
push
inc
inc
outs
push
push
cmps
inc
mov
rol
add
sub
pop
adc
mov
add
add
and
jmp
inc
inc
scas
jg
mov
add
or
adc
pop
sub
inc
daa
pop
pop
pop
pushf
add
ins
inc
inc
(bad)
out
adc
sbb
je
lock
jmp
jle
and
in
mov
xor
dec
int3
ret
call
ret
stos
mov
adc
fld
loop
pop
popa
clc
mov
adc
cmp
std
fcomp
lock
add
(bad)
call
adc
fdiv
push
sub
push
sbb
fild
rol
sbb
rol
lock
ficom
dec
sub
add
dec
pop
daa
inc
mov
neg
dec
mov
mov
test
popa
push
push
push
mov
push
xor
clc
fist
cwde
xchg
(bad)
out
mov
(bad)
xor
pop
mov
ss
sbb
inc
mov
dec
inc
fst
mov
inc
fs
fisttp
cmp
adc
lds
jb
clc
(bad)
and
movs
mov
cmp
mov
jl
sub
inc
mov
inc
adc
or
push
bound
mov
aad
int
movs
push
sbb
and
int3
and
fadd
in
aad
sbb
or
mov
pop
xor
and
adc
das
and
inc
cmc
(bad)
inc
arpl
xchg
sar
daa
leave
test
dec
mov
jl
inc
fld
inc
adc
add
sbb
pop
shl
in
add
push
jmp
inc
add
adc
adc
mov
adc
add
dec
pop
cmp
xor
icebp
lahf
pop
jne
add
int3
fmul
and
adc
movs
or
dec
movs
popa
mov
add
ret
jmp
cmp
or
mov
add
das
rol
push
adc
adc
add
sub
or
cld
xor
inc
or
fld
(bad)
push
sar
add
enter
and
push
dec
test
test
imul
jb
pop
and
xchg
and
jg
call
add
dec
aaa
loop
or
ss
add
sub
fisubr
push
sbb
add
adc
push
mov
mov
add
or
push
into
repz
adc
ss
ret
inc
in
xor
call
dec
loopne
inc
rol
int3
mov
push
xor
lea
mov
sahf
inc
dec
mov
xchg
pop
data16
mov
in
in
fstp
push
dec
pop
pop
dec
pop
cmps
mov
sbb
dec
aaa
inc
mov
repz
jb
pop
sub
cmp
and
imul
add
test
out
sahf
and
cs
fadd
or
or
or
pop
mul
out
fadd
out
mov
sbb
mov
outs
scas
sti
retf
mov
(bad)
ja
scas
int3
dec
scas
sbb
add
mov
dec
and
sub
inc
imul
shr
dec
jb
fld
mov
push
or
xor
scas
inc
cs
mov
push
sub
je
sub
je
dec
add
jmp
call
fwait
push
push
pop
je
add
push
add
test
mov
mov
ja
inc
sub
loop
cs
sbb
adc
(bad)
imul
add
pop
jno
js
mov
cli
mov
fnstsw
inc
add
or
jne
and
dec
cld
pop
mov
shr
xlat
(bad)
cmp
sti
ins
pop
loopne
push
pop
or
add
pop
and
je
lea
and
xchg
inc
in
cmp
cwde
or
pop
and
hlt
mov
or
shr
enter
mov
mov
adc
xor
pop
fstp
add
mov
xlat
rcl
shr
arpl
les
mov
jbe
or
dec
mov
and
inc
or
push
mov
or
mov
data16
and
fist
mov
mov
dec
mov
ror
mov
not
and
mov
fiadd
add
cld
ret
aas
inc
loopne
dec
mov
psubb
outs
jns
rol
push
icebp
mov
vpmullw
cld
dec
jb
in
ds
mov
pop
dec
push
mov
outs
scas
push
cmps
push
aam
sbb
xor
xchg
cmp
push
inc
inc
inc
add
inc
aaa
pop
or
iret
dec
jle
adc
push
xchg
xor
sahf
fmul
shl
push
mov
leave
in
mov
(bad)
or
jmp
test
or
mov
clc
pop
add
lds
test
es
push
inc
add
movs
jne
sub
jg
pop
push
push
lock
dec
add
mov
push
cmp
sub
mov
gs
or
adc
nop
gs
dec
fisub
adc
mov
into
mov
imul
leave
inc
sub
fisttp
add
or
push
popf
inc
ins
inc
gs
add
xor
inc
lock
add
jno
daa
pop
sbb
out
pop
pop
xchg
dec
jg
xor
shr
inc
xchg
add
cmp
push
mov
xor
sub
mov
(bad)
call
je
jl
sbb
dec
xor
dec
(bad)
push
out
dec
adc
add
add
es
sbb
ret
loopne
add
retf
or
lea
xor
add
stc
nop
xchg
icebp
rcl
fwait
and
dec
div
(bad)
mov
arpl
sub
dec
shl
in
or
mov
inc
rol
pop
pop
mov
or
adc
mov
add
inc
cmps
ret
jnp
cmp
mov
mov
sbb
(bad)
adc
dec
test
dec
or
and
fldcw
cli
mov
(bad)
mov
sbb
inc
sub
popa
mov
sbb
sbb
and
imul
dec
cmp
push
mov
push
vmwrite
mov
sub
sahf
and
je
sbb
cmp
adc
or
js
dec
fsub
mov
ja
inc
mov
add
pop
inc
adc
mov
pusha
xor
inc
and
and
or
xor
aam
add
add
cmc
or
jnp
sub
pop
xor
sbb
ja
push
cs
push
or
add
add
add
push
add
pop
push
repz
cmp
(bad)
push
sub
adc
ds
dec
push
mov
lds
adc
jmp
lds
pop
fdiv
adc
and
inc
(bad)
in
mov
cmp
pushf
or
adc
and
mov
(bad)
pop
or
or
dec
mov
ss
add
sbb
ds
cmps
mov
daa
pop
inc
mov
pop
je
push
add
cs
mov
xchg
push
add
adc
or
pop
pop
and
dec
jbe
pushf
adc
jbe
add
ins
jecxz
test
and
stc
aas
mov
push
add
shr
pop
ficom
gs
push
rcr
inc
scas
xor
mov
jne
sbb
jo
xor
add
adc
mov
mov
repz
and
mov
dec
dec
shr
shl
or
pop
mov
or
xchg
mov
xchg
aad
adc
mov
stos
loope
and
push
xchg
mov
jne
cmp
sbb
aad
add
dec
mov
dec
sbb
or
cmp
cmc
inc
mov
inc
adc
call
add
xor
test
cmps
dec
lds
dec
sub
jb
and
sub
ja
mov
dec
cmp
sbb
retf
or
cmps
int3
rcl
arpl
je
fcmovb
pop
add
inc
add
mov
and
test
sbb
adc
mov
shl
je
sbb
mov
jae
xlat
or
mov
in
shl
jns
std
or
mov
imul
rol
test
sahf
sbb
movsx
in
in
mov
xor
mov
pop
mov
push
pop
shl
and
push
sbb
or
cmp
fwait
mov
lahf
sub
jo
arpl
bound
xor
xor
mov
cmp
cmp
xor
inc
mov
test
adc
adc
mov
mov
or
pop
ret
out
stos
mov
add
or
inc
imul
jbe
ja
pop
addr16
jp
sbb
push
rcl
cli
mov
jmp
xor
or
jne
popf
inc
jge
inc
inc
adc
sub
shr
into
sub
adc
mov
pop
jl
inc
nop
arpl
mov
sbb
push
jge
jne
xchg
and
sub
and
cmp
sbb
icebp
pop
shl
sbb
(bad)
sbb
adc
mov
jne
mov
jne
xor
adc
arpl
push
ficom
adc
cmp
nop
dec
add
movs
pop
loope
retf
adc
dec
cmps
cmp
xor
adc
pop
and
pop
or
loopne
stc
pop
ret
in
pop
add
push
imul
rol
pushf
test
data16
in
out
mov
mov
rol
jo
and
sbb
xchg
mov
push
adc
or
add
enter
ret
das
ss
mov
aam
adc
and
jle
push
cmp
jg
add
mov
mov
jno
iret
mov
inc
pop
pop
add
add
fldcw
ret
mov
jmp
inc
pop
(bad)
pop
test
jle
fdivp
sub
scas
and
push
dec
xor
ror
or
push
add
fnstenv
lock
enter
mov
cmp
xor
xor
neg
push
push
mov
int
inc
std
pop
xlat
or
push
dec
adc
retf
jl
lea
shr
(bad)
mov
aad
cmp
inc
cld
add
sbb
dec
sbb
xchg
fsub
xchg
cmp
sbb
mov
mov
sbb
and
ror
sub
out
mov
mov
jbe
and
adc
mov
xchg
lds
push
mov
js
add
mov
push
inc
aas
dec
dec
push
mov
add
pusha
add
pop
pusha
pushf
mov
and
sub
and
out
movsx
pop
mov
pop
data16
pop
push
pop
sbb
adc
sahf
out
inc
mov
ror
cmc
push
dec
div
add
(bad)
fstp
fwait
ja
and
or
add
inc
dec
add
test
ja
push
dec
fstp
mov
and
push
inc
(bad)
cmp
jmp
dec
pusha
sar
mov
pushf
dec
cdq
fmul
push
dec
outs
mov
push
pushf
test
jge
sub
out
adc
shl
pop
mov
int3
jp
xor
movs
popa
pop
or
(bad)
or
test
xor
arpl
ins
scas
clc
mov
jo
in
aaa
mov
pop
mov
cmp
test
lods
jb
add
clc
scas
push
add
add
fs
call
adc
and
arpl
pop
inc
mov
or
(bad)
mov
add
push
idiv
xor
push
sti
daa
push
aaa
or
mov
push
movzx
dec
mov
das
dec
test
movs
push
inc
cld
jg
and
cmp
add
pop
test
fld
add
xchg
hlt
dec
sbb
mov
add
xchg
aas
adc
dec
mov
pop
fsub
lea
enter
add
rcl
scas
imul
xchg
pop
in
mov
lea
dec
js
dec
ret
jne
ret
out
add
daa
test
shl
nop
jge
inc
in
int
push
lods
sub
je
pop
push
inc
clc
sub
aad
sub
test
mov
sub
xchg
data16
fiadd
in
outs
and
sahf
pushf
neg
fcom
push
popa
push
xchg
rcr
push
xor
or
sub
xchg
mov
add
jb
add
push
test
ss
or
adc
pop
ins
repnz
inc
inc
js
pop
inc
mov
loopne
pop
retf
outs
addr16
adc
int3
inc
call
pop
sbb
adc
retf
lea
addr16
test
push
imul
enter
aaa
sbb
cmp
je
(bad)
aam
push
cmp
mov
jmp
inc
hlt
push
push
xor
mov
or
data16
popf
outs
xor
in
(bad)
pop
pop
mov
clc
adc
ret
sub
sbb
rcr
lock
mov
adc
rol
test
adc
inc
(bad)
cmp
cmp
and
or
js
sub
cmps
mov
or
add
xor
clc
sbb
sbb
aad
jmp
inc
jae
adc
inc
arpl
and
add
bound
add
mov
add
add
hlt
jns
pop
mov
mov
cmps
or
jbe
mov
push
push
sbb
sbb
sbb
(bad)
add
inc
add
add
std
mov
or
pop
cmp
je
(bad)
jmp
int
push
test
in
mov
(bad)
ror
dec
rcl
iret
push
dec
pop
outs
mov
inc
pop
jns
sahf
add
outs
push
loope
adc
jl
aam
push
jmp
outs
ss
jo
popf
push
mov
ror
and
push
dec
push
mov
jg
add
inc
dec
int3
test
fwait
or
int3
dec
loope
(bad)
int3
xor
ud2
leave
jno
enter
push
outs
mov
out
pop
pop
jnp
xchg
shl
int
push
pusha
mov
mov
aam
push
lods
in
ret
add
fmul
test
inc
push
rcr
dec
ret
fst
test
pop
jo
or
adc
popf
sbb
and
test
or
movs
mov
out
pop
pop
pop
add
push
imul
imul
rcr
lock
lock
data16
out
in
sar
aam
push
adc
int
fadd
jo
ss
(bad)
pop
mov
rcr
mov
les
sbb
jns
mov
mov
add
dec
sti
push
das
ins
pop
(bad)
shl
cmp
mov
jno
push
ror
ss
fild
test
push
ins
sbb
pop
mov
adc
xchg
inc
(bad)
popa
sub
mov
xor
sub
jb
adc
add
xlat
pop
add
pop
push
dec
jg
xor
out
int
cld
or
ret
retf
clc
std
aaa
clc
std
sub
inc
loopne
enter
loopne
dec
enter
(bad)
jbe
addr16
leave
cmc
xor
pop
mov
and
stos
cwde
std
inc
cwde
std
push
adc
mov
push
or
test
(bad)
sub
ins
inc
and
add
and
test
lock
sbb
or
lock
jecxz
repnz
inc
push
xlat
dec
mov
popa
jmp
and
call
xchg
xchg
adc
jmp
pop
jmp
mov
mov
test
and
outs
add
adc
repz
cs
xor
dec
push
sub
inc
push
mov
movs
mov
jne
and
ret
jns
pop
xchg
lods
add
retf
mov
into
mov
(bad)
sbb
out
or
sbb
inc
ins
imul
pop
stos
mov
imul
jg
or
ja
fwait
inc
cmp
add
fsub
cmp
add
imul
adc
xchg
mov
add
dec
xor
pop
addr16
mov
jmp
stc
clc
fisttp
loopne
les
pop
cli
or
cmp
lock
or
xor
ror
inc
xlat
jno
ret
xchg
lods
sub
mov
add
int
sbb
(bad)
pop
adc
add
mov
push
(bad)
icebp
pop
es
lea
aaa
(bad)
lock
jo
lea
cmp
push
mov
clc
xchg
add
(bad)
in
sub
xchg
inc
aam
pusha
or
push
jmp
call
ror
mov
push
add
sti
cmp
out
daa
inc
mov
mov
mov
inc
lock
and
adc
das
sbb
lods
adc
dec
das
xchg
or
hlt
ds
jmp
adc
call
cmp
cld
int3
sub
jae
repz
ret
push
mov
shr
adc
std
xchg
movsx
xlat
popw
xchg
fst
pop
inc
mov
pop
cmp
mov
inc
mov
in
and
sti
clc
cld
and
mov
into
xor
iret
repz
mov
ins
les
add
movsx
clc
in
sub
add
clc
xor
push
jno
aaa
pop
mov
nop
jmp
add
or
xchg
inc
sbb
leave
test
mov
add
(bad)
jb
das
in
mov
jnp
or
les
xlat
sub
das
ret
mov
pop
into
fsub
lods
mov
mov
mov
push
jp
std
inc
push
imul
lock
iret
cdq
std
mov
not
xchg
jbe
inc
jecxz
jmp
fdivr
mov
jns
pushf
test
xor
jecxz
pop
adc
ss
fdivrp
cmp
push
aam
add
fdivrp
push
add
ins
enter
jns
dec
rol
xor
and
ins
xlat
sbb
mov
fstp
es
mov
test
retf
lods
xor
test
mov
jge
test
cmps
je
cmps
sbb
push
jns
pop
rol
jo
xchg
mov
cmps
shl
idiv
mov
inc
push
jb
cwde
je
pop
push
repz
add
in
inc
iret
popa
enter
in
pop
int3
add
sub
cmp
sbb
jmp
loopne
push
adc
jmp
sub
cld
jg
or
rcl
fisttp
mov
(bad)
in
xor
jmp
xor
mov
sar
jno
mov
loopne
or
xchg
lahf
loopne
lock
test
push
add
mov
icebp
xchg
pop
gs
cmp
jne
push
or
mov
add
inc
add
sar
push
hlt
movs
lods
xor
jle
ja
jg
and
addr16
call
fdivrp
imul
or
adc
arpl
add
or
test
jbe
pop
dec
pop
sub
jge
xchg
jne
jmp
jne
xchg
mov
add
mov
aad
popf
sbb
sub
pushf
loopne
and
imul
sbb
ret
cmp
mov
ins
es
lods
adc
(bad)
push
add
ret
lds
mov
pop
sbb
sbb
push
pop
ror
cwde
rol
push
pop
sub
(bad)
shr
aam
inc
fsub
retf
gs
sbb
ret
dec
jbe
movzx
and
pop
add
addr16
test
pop
jae
pop
cmps
lahf
out
sahf
mov
xlat
jmp
xor
cmp
in
xchg
fisub
mov
sbb
jmp
pop
dec
push
sbb
xchg
ins
(bad)
daa
cmp
dec
mov
sub
add
pop
dec
daa
dec
push
or
pop
mov
sbb
pop
jbe
es
lea
dec
xor
in
pop
jecxz
mov
mov
mov
push
lods
fcomp
and
fs
and
push
sub
inc
rcr
imul
and
pop
pop
sbb
test
ret
or
push
add
push
adc
xor
sub
xchg
xchg
out
sub
adc
rcl
cwde
add
pop
inc
push
mov
fdivr
mov
jle
int3
sbb
imul
push
jne
outs
aad
sbb
inc
push
pop
icebp
and
pop
fimul
in
das
ins
and
sbb
aam
and
popf
adc
jge
sbb
push
fld
sar
jge
fnstsw
dec
das
in
bound
fdiv
xchg
jle
aaa
push
ins
cmp
retf
dec
sub
cmp
loopne
inc
jmp
push
call
cmp
cmp
imul
(bad)
mov
xor
xchg
cmp
retf
add
imul
dec
sub
and
xor
sub
test
adc
sub
mov
mov
aas
loopne
push
mov
adc
jmp
out
jmp
mov
add
xor
adc
lea
jnp
mov
pop
pusha
adc
mov
push
shl
add
or
add
xchg
xor
add
fsubr
mov
int
ret
lahf
dec
inc
xchg
add
push
mov
adc
or
xchg
pop
pop
cwde
pop
ret
adc
aaa
mov
dec
fsub
cmps
neg
inc
in
push
jle
push
dec
jo
rol
add
sbb
push
jne
mov
and
jmp
or
mov
push
cmp
or
sbb
int3
jae
pop
inc
ret
inc
add
data16
imul
lea
and
std
adc
call
inc
mov
lea
test
add
mov
xor
js
nop
sbb
dec
ret
test
aam
and
xchg
xchg
daa
jmp
movzx
nop
daa
add
dec
push
push
mov
xor
and
sbb
adc
xchg
pop
xchg
mov
lds
aas
push
jns
xor
fiadd
push
es
leave
js
sub
sub
inc
les
test
xor
inc
rcr
ins
pushf
mov
inc
mov
dec
(bad)
sub
in
cld
mov
mov
leave
aas
imul
inc
xchg
ret
cmp
(bad)
jb
cmp
into
add
pop
pop
(bad)
cmp
pop
mov
stos
rol
adc
push
(bad)
clc
shr
mov
mov
and
jg
mov
test
mov
ja
iret
fwait
jge
out
or
loope
mov
mov
mov
mov
xchg
inc
inc
bound
mov
xor
inc
test
mov
dec
xor
ficom
jle
ror
sub
jbe
popf
sub
sub
sub
ins
mov
ror
mov
nop
sysret
jns
or
popa
ins
pusha
mov
jmp
test
shl
push
dec
and
aam
dec
add
push
stos
push
add
xchg
fild
push
sbb
adc
iret
jbe
js
adc
pop
je
pop
inc
xchg
loope
jo
xchg
test
or
push
jo
jl
xor
mov
mov
or
cmovne
mov
xor
and
mov
test
add
lods
push
add
inc
xchg
sub
pop
pusha
jecxz
nop
xlat
dec
dec
add
dec
and
xor
sbb
test
adc
mov
inc
adc
xchg
lods
inc
push
mov
xchg
das
add
push
adc
in
scas
or
mov
add
adc
sahf
jbe
and
inc
dec
in
and
xor
ds
inc
(bad)
jo
or
jns
daa
push
mov
cld
xor
push
push
into
je
xchg
cli
xchg
mov
setle
arpl
sbb
add
push
sub
mov
inc
stos
push
push
in
mov
cmp
das
xchg
dec
cmp
dec
lds
call
adc
dec
rol
(bad)
sti
aaa
cmp
xor
call
jno
mov
add
add
shr
aad
loope
fst
sbb
and
pop
jmp
adc
sub
or
iret
out
inc
xchg
pop
cs
outs
sub
and
dec
ins
stos
es
pusha
pop
add
test
loope
int
xor
or
push
add
call
scas
add
mov
sub
pop
xor
jnp
inc
xchg
inc
inc
mov
rol
adc
retf
sub
sub
add
test
adc
fbld
sub
sub
mov
mov
mov
push
sbb
pushf
mov
or
movs
mov
add
imul
fisub
mov
das
inc
mov
shr
add
stc
out
jmp
or
ins
mov
fistp
or
or
pop
add
ror
sub
and
jo
pop
xor
sbb
mov
(bad)
loopne
and
add
test
movs
and
xchg
lea
adc
ror
cmp
arpl
scas
or
add
lea
out
xlat
in
inc
and
and
pop
sar
jno
(bad)
jmp
aas
out
cwde
push
bound
lock
out
sti
or
or
clc
push
cmps
adc
push
sbb
sbb
add
or
add
and
dec
xchg
jo
pop
mov
pusha
iret
push
sub
push
pusha
iret
cdq
ins
add
fidiv
ficom
and
add
push
outs
nop
nop
and
push
arpl
jmp
mov
rcr
pop
movs
push
nop
in
xor
add
xchg
pop
ret
or
jg
outs
mov
ins
xchg
pop
pushf
das
mov
loopne
inc
repnz
repnz
or
xchg
pop
xchg
out
shr
and
push
cdq
js
inc
xchg
in
pushf
sbb
sbb
mov
xor
movs
add
fdiv
mov
pop
js
daa
ins
xchg
pop
gs
xor
inc
xchg
xchg
gs
outs
and
sbb
not
cmp
out
imul
cld
pop
mov
adc
adc
or
fucomip
xchg
lar
add
push
xadd
popf
loopne
pop
cmps
adc
out
mov
popf
add
mov
sbb
ss
jg
add
pop
das
mov
sub
loop
test
mov
ror
es
mov
xchg
fild
xor
test
add
inc
and
iret
sahf
xchg
or
mov
sgdtd
sbb
sbb
mov
cmp
mov
pop
enter
xchg
test
jmp
xchg
inc
arpl
push
add
ret
sbb
and
sub
wrmsr
xchg
xchg
call
iret
cmc
mul
imul
and
pop
ror
cmps
adc
les
aad
cmp
hlt
cwde
sub
cmc
dec
data16
jns
jg
pop
mov
sbb
push
jecxz
mov
pop
cmps
cwde
ds
test
call
call
loop
sub
das
xchg
es
mov
lahf
dec
lock
hlt
das
mov
and
cdq
call
xor
sbb
call
hlt
call
and
call
inc
jg
pushf
cmp
pop
call
push
shl
js
daa
push
rcr
cmp
jmp
push
movs
or
jp
test
fwait
fwait
aaa
inc
mov
mov
xchg
mov
aaa
xor
call
jne
das
dec
(bad)
mov
or
xor
aaa
sbb
jg
pop
push
or
and
and
inc
scas
push
pop
pushf
cmp
pop
xchg
or
or
push
fisub
sub
pop
add
enter
mov
add
push
dec
icebp
push
or
adc
push
pop
out
jmp
add
icebp
xchg
mov
or
pushf
sbb
xchg
mov
mov
and
or
cmp
xchg
sahf
lahf
lahf
psllq
dec
inc
mov
fs
xchg
xchg
xchg
imul
cdq
push
jmp
add
stos
jmp
add
aaa
xchg
mov
push
movs
or
xchg
mov
test
mov
xchg
or
push
or
or
sub
je
xor
or
hlt
adc
fs
leave
dec
ins
inc
jmp
add
test
adc
cwde
(bad)
inc
lock
outs
push
inc
mov
sbb
stos
inc
lock
mov
call
push
shl
ret
adc
and
pop
sbb
xchg
add
test
cmp
icebp
inc
add
push
call
(bad)
lock
das
nop
push
add
add
test
call
add
mov
adc
lods
add
adc
test
adc
test
lea
repnz
add
out
add
movs
or
xor
sbb
les
and
icebp
fadd
test
dec
dec
jno
paddb
and
stos
pushf
movs
cmps
adc
outs
popa
mov
sbb
add
add
in
and
add
push
sbb
jae
test
push
leave
cmp
pop
pop
cwde
movs
xor
mov
movs
fwait
dec
mov
mov
cmp
add
cmps
aaa
dec
cmps
sub
les
mov
sub
clc
jmp
xchg
cmps
cmps
cmps
add
lock
shl
cmp
cmps
ins
cwde
movs
adc
mov
mov
test
jl
call
adc
mov
add
test
xor
xor
pop
lock
test
adc
adc
rol
jge
cmp
sbb
xor
add
xor
cwde
adc
cmps
add
movs
je
int3
rol
data16
adc
cmps
inc
cwde
inc
lea
and
inc
dec
int3
rcl
cmps
je
dec
inc
nop
inc
pop
loopne
xchg
cmps
in
jno
test
jae
cmps
aas
out
inc
stos
xor
adc
stos
jo
punpckhbw
fstp
(bad)
inc
mov
out
mov
shr
add
add
xor
jmp
add
sub
jg
shl
cmp
mov
adc
stos
in
xchg
mov
adc
adc
xor
xor
in
or
es
das
jg
pop
dec
mov
pop
test
inc
es
pop
ins
mov
ret
std
lods
sbb
shr
inc
adc
(bad)
fist
xchg
dec
pop
pop
lods
inc
dec
add
cmp
jp
cld
(bad)
adc
jne
inc
pusha
lods
inc
and
lods
or
lods
mov
les
scas
inc
push
scas
xor
outs
iret
ret
das
mov
pop
pop
push
pop
pop
add
jae
mov
and
inc
sub
add
cmp
dec
scas
sub
or
dec
scas
push
scas
out
shl
mov
retf
scas
inc
add
push
mov
adc
les
push
push
mov
aam
sbb
add
out
jo
adc
fdiv
mov
xchg
add
xlat
xor
adc
mov
sbb
inc
or
jb
dec
scas
js
repz
push
mov
xchg
pop
jl
push
pusha
push
dec
inc
retf
dec
mov
inc
push
pop
xchg
mov
int3
jmp
div
jo
test
cwde
movs
je
cmp
adc
push
sub
aaa
adc
pop
add
add
jmp
push
add
add
outs
cmp
jg
pop
push
inc
mov
xor
fucom
mov
je
sbb
jge
outs
sub
jo
jo
mov
dec
mov
cld
add
das
jmp
inc
sbb
fild
call
or
mov
or
push
pusha
sti
cmp
and
inc
jo
mov
cmp
add
lock
cld
mov
in
pop
lods
js
leave
ins
mov
pop
setno
in
fst
mov
xor
mov
leave
leave
leave
int3
pop
pcmpgtw
in
mov
loopne
jbe
pop
repnz
sbb
cmp
test
test
mov
dec
inc
jno
xchg
inc
adc
inc
mov
or
xchg
jecxz
loopne
nop
add
test
fimul
es
jae
cmp
adc
xchg
cmp
fwait
ror
inc
ins
mov
fwait
add
pop
mov
adc
fdiv
or
movs
outs
repnz
or
bound
nop
inc
ins
mov
shl
add
and
add
test
nop
inc
add
mov
rol
mov
ins
mov
lods
xchg
push
push
lds
mov
and
xor
add
push
xor
mov
popa
xchg
loop
or
dec
shl
cmp
aaa
int3
sbb
add
mov
or
add
mov
aaa
adc
inc
push
jo
inc
push
movs
cwde
aaa
stc
and
inc
in
pusha
add
out
jl
sbb
stos
enter
and
(bad)
pop
push
add
popf
add
call
xchg
push
xor
xchg
inc
mov
retf
scas
xor
hlt
sbb
outs
push
shr
shl
and
xor
adc
cmp
jnp
and
dec
je
and
dec
aam
and
push
add
mov
push
enter
ret
inc
add
js
fs
push
hlt
pop
mov
push
addr16
jno
mov
jne
jl
adc
or
mov
push
adc
sub
shl
loop
mov
das
and
jle
out
inc
mov
mov
imul
dec
and
adc
daa
add
js
lock
dec
dec
nop
mov
push
sub
or
addr16
or
add
lock
in
in
pop
inc
repz
test
jnp
mov
inc
mov
inc
xchg
cmc
xchg
pop
int
sbb
add
mov
mov
lods
xchg
aam
push
cmp
div
jge
pop
and
dec
jb
mov
cmp
xor
pop
adc
mov
sbb
and
sbb
xor
out
pop
xor
sub
nop
push
add
shl
xlat
push
mov
adc
inc
fadd
lods
int3
aaa
sbb
adc
add
inc
add
test
scas
mov
add
(bad)
hlt
mov
mov
mov
add
cmps
and
adc
jmp
lock
mov
sbb
sar
push
push
xor
and
xchg
imul
push
dec
dec
ins
leave
dec
scas
adc
iret
test
inc
or
jno
mov
cmp
jmp
ret
add
rcl
sub
and
cwde
add
movs
movs
xor
hlt
pop
xchg
ret
push
mov
fwait
ja
mov
movs
movs
mov
xchg
pop
jg
cli
jno
mov
push
popa
jge
fmul
jae
into
jno
xor
cmc
mov
jg
shrd
or
cmp
jno
js
jne
pusha
loopne
add
xor
mov
or
or
leave
loop
jg
mov
sbb
jne
push
int
sub
cld
push
adc
inc
stos
push
push
sbb
xchg
inc
add
pop
xchg
daa
lock
add
pop
mov
fadd
in
fs
aad
push
inc
aad
sbb
popa
in
inc
xor
inc
add
shl
loop
xor
(bad)
or
mov
movs
xchg
je
clc
hlt
mov
les
mov
clc
mov
test
push
or
xor
and
js
loop
cmc
lods
mov
into
xchg
pop
test
ins
(bad)
adc
shl
(bad)
ins
mov
je
cdq
add
sahf
add
loopne
add
or
out
xor
fmul
rol
xchg
sbb
inc
or
cmps
or
inc
les
push
mov
or
cmp
je
push
mov
or
jnp
mov
ret
dec
lods
sbb
mov
inc
int
adc
cld
mov
mov
or
(bad)
sbb
int
dec
mov
or
aam
sbb
mov
xor
add
mov
sbb
mov
fidiv
add
jl
sub
outs
add
in
dec
jg
addr16
push
mov
or
sbb
jmp
aas
pop
or
mov
repz
cld
pop
sbb
xor
sub
xlat
push
inc
(bad)
movs
adc
dec
and
enter
lea
push
cld
cmp
xor
bound
xchg
or
(bad)
hlt
ficomp
dec
push
(bad)
retf
mov
or
ret
fstp
cmp
sti
adc
sub
xor
add
(bad)
(bad)
pop
das
and
iret
cmp
(bad)
(bad)
aas
add
and
ja
nop
mov
test
add
xor
aam
mov
(bad)
pusha
(bad)
pop
ins
and
mov
xlat
outs
pop
mov
add
sub
mov
or
mov
jns
inc
ins
inc
sbb
stos
mov
js
loopne
daa
mov
adc
mov
sub
jb
xor
dec
cmc
dec
or
mov
aam
nop
jno
mov
and
lods
inc
inc
or
fistp
xor
jl
cmp
add
lds
cwde
lds
aaa
push
das
mov
psubb
int3
pusha
lea
xchg
pusha
cli
adc
repnz
rol
out
scas
ds
jne
inc
rcr
inc
and
add
mov
loop
int3
cmc
mov
ins
sbb
rcl
fsubr
std
add
add
cdq
add
add
cld
inc
pop
cld
add
adc
pop
clc
iret
js
dec
and
mov
or
mov
gs
outs
add
adc
sub
push
out
cmp
or
(bad)
push
xor
enter
inc
jmp
lods
xchg
sar
mov
xchg
inc
sbb
or
ss
and
dec
mov
or
add
nop
mov
or
out
loopne
push
add
xchg
ds
cmp
add
or
add
pop
add
mov
adc
ror
or
or
adc
aad
add
or
rcr
adc
jo
jnp
test
xor
push
jne
pusha
addr16
jecxz
ret
test
pop
data16
add
lea
ja
dec
rol
adc
shr
mov
gs
mov
sub
lea
outs
pushf
mov
imul
dec
adc
adc
mov
fld
mov
sbb
dec
dec
mov
push
add
js
jnp
mov
mov
in
ret
adc
xor
mov
fs
dec
adc
mov
pop
rcl
add
adc
xor
adc
out
dec
push
or
popa
stos
int
or
icebp
xchg
icebp
cld
xchg
loopne
push
mov
push
inc
dec
xadd
leave
ret
les
and
cmps
out
inc
cmp
xor
jne
or
inc
pop
fwait
out
inc
cmp
or
add
and
movs
int
hlt
sub
xchg
pop
std
xor
pop
pop
scas
cwde
fidiv
inc
imul
jl
shl
pop
jbe
and
lea
add
xchg
add
cwde
xchg
clc
in
sbb
clc
clc
xor
int
add
sub
xor
mov
dec
int3
add
xor
inc
gs
in
fist
jge
mov
mov
movs
dec
pusha
hlt
jmp
mov
dec
adc
mov
or
and
push
add
add
sub
mov
shr
outs
jmp
xchg
push
iret
add
int3
or
ret
or
push
dec
mov
sbb
sahf
int3
std
xor
mov
adc
lock
mov
sub
add
cmp
or
or
inc
or
add
and
xor
add
ret
mov
xchg
sbb
add
push
sub
lods
and
rcr
push
or
call
test
arpl
mov
(bad)
sbb
and
out
shl
lds
jmp
adc
call
ds
cld
add
pop
mov
mov
mov
push
xchg
(bad)
cmp
pop
mov
mov
test
mov
mov
jecxz
loopne
test
xchg
mov
imul
pushf
xor
push
pop
mov
ins
outs
jae
jl
mov
and
aaa
cmp
xchg
add
mov
pushf
pop
cmp
dec
loop
popf
les
inc
and
stc
fiadd
cmovle
popa
cwde
shl
shr
or
(bad)
movs
cmp
not
or
inc
and
sub
dec
ror
rcl
jg
jne
sahf
push
add
jl
fidivr
sbb
out
(bad)
adc
sbb
stc
daa
(bad)
aam
loope
std
shr
adc
xchg
mov
rol
cwde
rol
cmp
arpl
dec
dec
test
adc
gs
es
scas
adc
xor
pop
xlat
mov
mov
mov
add
into
and
(bad)
pop
lds
mov
pusha
rcl
inc
lea
rcr
add
push
and
mov
retf
xchg
les
retf
jb
shl
mov
adc
(bad)
pop
sub
pusha
xchg
icebp
sahf
aam
pop
(bad)
pop
rol
(bad)
sub
push
retf
dec
cmps
aad
pop
pop
(bad)
push
je
daa
add
pop
adc
sbb
int
sbb
daa
inc
les
and
or
daa
or
pop
or
pop
int
mov
je
push
(bad)
dec
daa
mov
xchg
sub
je
bound
scas
push
inc
out
lock
fwait
das
and
jle
mov
out
fmul
out
add
xchg
or
scas
mov
cwde
in
(bad)
ret
dec
clc
push
push
adc
int
pop
dec
mov
push
xchg
and
and
les
pop
cwde
in
mov
jo
add
adc
pop
mov
add
bound
inc
and
stos
push
sub
stos
ja
cmps
loop
fldenv
push
pushf
movs
inc
push
icebp
mov
mov
das
or
pop
sbb
ins
push
dec
inc
addr16
add
push
rol
popf
add
xlat
inc
push
mov
inc
ja
ror
rcr
push
inc
pushf
mov
inc
push
sub
xchg
pop
rcr
(bad)
and
add
sub
xor
out
or
in
ret
mov
(bad)
xor
fcom
mov
sbb
dec
sub
cmp
jns
fidiv
iret
pushf
pushf
mov
fist
ror
inc
sahf
push
loopne
fwait
jecxz
daa
and
loope
push
ja
daa
daa
daa
scas
in
loop
dec
outs
mov
in
les
aas
bsf
jnp
out
pop
sbb
fimul
push
dec
adc
push
xchg
es
add
adc
in
sahf
nop
test
dec
add
add
mov
les
aaa
jno
adc
cmp
aaa
js
mov
xor
adc
lahf
or
bnd
pop
inc
add
bound
aaa
ins
mov
inc
cmp
jmp
push
fstp
sub
aaa
adc
jae
das
dec
sbb
pop
inc
add
xchg
add
xchg
push
aaa
sub
inc
inc
and
dec
inc
aaa
fwait
add
add
adc
pop
inc
pop
aaa
xchg
jno
or
test
dec
je
and
iret
inc
dec
adc
aaa
jno
add
pop
inc
mov
inc
gs
add
inc
cmps
mov
ss
rol
and
push
xor
mov
inc
les
xchg
pusha
mov
sub
mov
lods
(bad)
ins
popf
xor
inc
lds
pushf
xor
dec
out
cmps
mov
cmp
cmp
fbstp
dec
push
dec
fbld
mov
add
fistp
fisttp
fbstp
dec
push
adc
push
mov
mov
mov
jns
inc
cmps
mov
xchg
cmps
mov
mov
add
sub
push
cwde
in
inc
cmps
jle
add
(bad)
fadd
cli
mov
ss
xchg
adc
rcl
or
push
mov
pop
pop
and
rcr
sahf
adc
lahf
ss
mov
cmp
jo
repnz
add
cld
movs
shr
add
shl
pop
rcl
mov
xchg
push
xor
inc
jl
call
or
mov
cdq
and
in
pop
jmp
dec
out
mov
repz
enter
cmp
push
and
pop
aas
fs
imul
lsl
dec
mov
rol
dec
add
mov
add
adc
adc
sub
inc
and
js
cmp
jo
inc
pop
loope
push
xchg
sti
(bad)
call
mov
push
dec
inc
xor
adc
lods
js
mov
sub
pop
jecxz
sub
xchg
adc
call
add
ins
sub
imul
in
push
add
clc
inc
or
mov
and
call
push
sbb
sbb
or
add
mov
xchg
or
adc
inc
sub
sub
lahf
arpl
aad
push
add
cmp
lahf
ret
ins
mov
and
dec
clc
xchg
or
mov
add
hlt
in
mov
or
test
scas
pop
mov
mov
and
or
cmp
and
add
pop
stos
dec
pusha
sbb
add
cmp
adc
push
push
daa
push
test
inc
and
cwde
ret
sub
ret
out
sbb
pusha
out
push
fisubr
adc
push
call
xor
lock
push
push
pop
not
jno
ret
adc
or
adc
or
adc
xor
and
(bad)
sub
test
sbb
inc
mov
and
add
add
dec
adc
popa
pop
push
jbe
jecxz
cmp
mov
jnp
cvttps2pi
pop
ror
or
mov
xchg
adc
ret
dec
mov
clc
sub
adc
out
adc
xor
dec
inc
or
add
pop
mov
xchg
jmp
cmp
loopne
sub
rcl
mov
test
mov
pop
add
test
inc
adc
push
adc
mov
cmp
in
mov
or
adc
jo
outs
aaa
(bad)
fst
out
xor
xchg
out
mov
test
movs
and
sbb
adc
retf
nop
push
adc
inc
jmp
pop
mov
dec
mov
mul
dec
mov
xchg
add
imul
push
leave
hlt
leave
jmp
outs
add
sub
cmp
addr16
hlt
pop
shr
or
outs
loope
or
ins
add
jmp
ret
inc
adc
mov
inc
clc
test
cs
in
sub
cmp
inc
or
push
mov
fisubr
jne
adc
shr
adc
das
mov
nop
out
test
das
pop
or
test
in
sub
icebp
daa
adc
adc
and
jo
popa
adc
xor
in
xor
xor
jmp
adc
cmp
sbb
push
add
pop
sbb
jne
mov
jmp
pop
inc
add
neg
add
sub
mov
mov
and
ret
dec
xchg
pop
adc
jmp
inc
add
jl
or
and
jle
test
aaa
lods
lods
nop
inc
dec
jns
adc
imul
xlat
sub
adc
xchg
mov
ja
inc
cmp
fbstp
not
inc
lds
pop
or
repnz
cmp
push
inc
cmp
div
sub
or
pminub
ins
or
pusha
mov
mov
test
sbb
test
dec
shr
mov
out
and
cmp
inc
or
add
outs
scas
and
enter
xchg
inc
in
stc
mov
inc
dec
push
(bad)
out
in
enter
and
pop
lock
and
and
add
test
mov
cmp
mov
push
and
jg
dec
scas
in
aam
inc
jb
cmp
icebp
ja
or
or
stos
and
add
call
(bad)
pusha
xchg
loopne
xchg
inc
rol
xchg
lock
or
mov
mov
or
inc
cwde
push
(bad)
loopne
cmp
into
repz
cmp
xlat
out
sbb
cmps
(bad)
fistp
repz
nop
cld
repz
adc
scas
or
call
pop
bnd
cmp
xor
pop
ds
lock
nop
jecxz
js
lea
sub
and
mov
or
call
shl
gs
xor
leave
fcomp
out
inc
rcr
out
adc
mov
inc
pop
or
xor
mov
popa
pop
repz
add
add
aaa
and
hlt
enter
and
cmp
ror
xor
inc
add
inc
or
mov
ja
adc
or
loope
in
inc
shr
push
out
and
sbb
xor
sbb
mov
sub
test
scas
inc
push
loopne
aaa
stc
cmc
mov
sbb
sub
daa
add
test
dec
mov
ret
std
pop
daa
test
pop
leave
xchg
fs
sub
aaa
dec
mov
adc
outs
movs
add
sbb
dec
xchg
sub
iret
hlt
leave
es
push
adc
jns
into
push
lock
sar
call
fdiv
mov
jne
xor
add
ins
pushf
cld
adc
ds
outs
add
pusha
mov
test
jo
sbb
or
pop
das
adc
add
or
rcl
add
add
lods
dec
xchg
add
setne
pop
pop
pop
pop
jno
inc
test
xor
sub
jg
and
sub
cdq
out
in
add
add
addr16
push
adc
mov
xchg
popa
sub
repnz
sbb
in
and
add
daa
cwde
(bad)
cmps
xor
test
inc
mov
test
and
(bad)
cs
pusha
push
sbb
push
push
mov
or
ja
push
sub
loop
mov
cld
xchg
or
pop
rol
mov
fidivr
xchg
call
movs
push
inc
int
add
sahf
std
sub
dec
add
dec
and
call
pop
or
pop
stos
cwde
sbb
inc
push
popa
imul
jno
ja
push
sub
ltr
and
sub
call
add
mov
pop
mov
jne
mov
fisub
ds
mov
lods
in
or
je
test
push
cmc
inc
inc
push
dec
jno
in
xor
int3
loope
inc
or
fwait
mov
mov
sub
js
sti
mov
xor
cmp
out
mov
push
and
jo
mov
es
add
add
sbb
jno
mov
sub
scas
dec
gs
int3
adc
enter
or
add
push
pop
mov
aaa
mov
jbe
movs
fmul
loope
pop
xor
adc
inc
adc
and
push
adc
(bad)
iret
jp
add
xchg
mov
shl
cmp
ds
call
fs
push
clc
cmp
je
jnp
mov
dec
xor
inc
sbb
pushf
or
and
and
sub
xchg
cmp
inc
inc
inc
pop
int
adc
int3
push
jl
inc
push
arpl
enter
je
cli
xchg
inc
inc
cmps
push
int3
sbb
push
and
mov
call
jne
adc
int
mov
call
(bad)
out
aas
imul
adc
mov
das
inc
je
inc
and
int
in
push
ins
inc
xor
loopne
sub
daa
push
jle
mov
stos
nop
or
or
cmp
fdivr
push
push
or
ss
ja
adc
jle
les
test
inc
mov
or
inc
(bad)
in
sub
pop
sbb
les
test
inc
or
loopne
dec
pop
or
xchg
pop
xchg
dec
mov
mov
lods
imul
push
mov
xor
adc
mov
add
daa
pop
jne
push
inc
and
inc
lods
mov
out
pshufw
test
jp
sub
fisubr
jbe
and
xchg
and
sub
pop
jg
cs
mov
mov
fcom
ss
xor
ret
mov
lds
inc
add
add
ins
push
ret
or
outs
arpl
inc
push
xchg
sbb
or
pop
add
inc
sub
dec
mov
xchg
add
cli
test
ds
ins
and
(bad)
popf
js
push
(bad)
popa
mov
ja
mov
lahf
ins
ins
cmp
lds
ret
sbb
retf
in
mov
add
cwde
and
or
mov
xor
cwde
rcl
inc
add
lods
and
xor
xchg
add
cmp
xor
jne
sub
push
cmps
sbb
cmps
adc
sub
cmp
daa
sbb
sbb
sub
scas
inc
or
adc
nop
cwde
(bad)
ins
js
cld
jmp
mov
mov
mov
push
add
test
aam
(bad)
jo
sub
push
ins
js
pop
gs
adc
xchg
leave
loope
jecxz
test
shl
push
cmp
aaa
sub
ret
pop
rol
xor
sbb
aas
add
cld
repnz
mov
xor
into
cmp
sub
dec
sahf
lahf
and
mov
jge
lahf
dec
adc
lock
jno
outs
data16
push
cmp
aaa
pop
add
cs
pop
mov
add
and
fwait
das
sub
add
push
push
push
pop
pop
ss
out
cmp
push
fs
mov
mov
lods
push
rol
xor
movs
push
inc
shr
aaa
xor
mov
(bad)
neg
sti
(bad)
loopne
xor
jnp
pop
str
pop
inc
js
test
leave
mov
inc
cmp
out
xchg
imul
inc
pop
pop
fstp
mov
and
add
add
xor
pop
inc
imul
or
or
push
imul
cli
add
and
sbb
int3
clc
mov
sbb
imul
sbb
mov
pop
or
dec
add
ror
pop
idiv
loop
jae
push
xor
mov
mov
inc
add
das
mov
pop
xor
pop
(bad)
push
popa
dec
push
sbb
jmp
in
mov
mov
jmp
mov
jmp
ja
push
cmps
cmp
add
sbb
sub
aas
mov
jmp
mov
jmp
daa
ja
mov
inc
xor
adc
(bad)
sub
add
ja
add
test
push
or
add
pop
ret
out
xor
sahf
mov
gs
mov
pop
sub
mov
outs
adc
inc
cmp
sete
jo
ins
inc
pop
pop
sar
inc
or
push
xchg
or
mov
or
jg
add
xchg
push
les
or
cmp
mov
sbb
jne
sbb
and
jo
push
pop
out
mov
repz
xlat
adc
fadd
add
sub
and
jns
add
adc
jle
cmp
ret
xchg
jmp
gs
cmp
inc
adc
pop
or
jmp
sbb
push
cdq
ins
iret
dec
or
cwde
sbb
adc
cdq
and
fsub
mov
jb
jle
shl
mov
push
movzx
sahf
arpl
aad
dec
shl
sti
sub
jg
inc
push
bound
ins
imul
add
mov
xor
and
jb
mov
sbb
mov
ja
inc
cmp
and
sbb
jmp
movs
ss
or
jne
hlt
sbb
xor
pushf
xor
xchg
and
mov
shl
adc
adc
mov
ror
std
xchg
adc
jnp
jmp
(bad)
clts
xor
cmp
mov
dec
and
sub
imul
add
ret
push
jecxz
xchg
sub
inc
aad
jo
std
or
or
dec
add
loopne
and
pop
inc
test
lea
jo
icebp
mov
xor
xlat
push
aad
xchg
and
out
pop
cdq
push
sbb
jge
xor
add
sub
cmc
sbb
aaa
cmc
mov
sub
je
lock
and
(bad)
sbb
js
cmp
sbb
pxor
punpckhdq
aad
stc
and
xor
mov
or
add
aas
xor
sbb
mov
(bad)
in
iret
(bad)
cmps
mov
adc
das
xchg
dec
mov
das
xchg
mov
and
xor
or
fadd
pop
cmp
jo
inc
ficom
pop
dec
xchg
mov
push
fcmovnb
mov
js
jle
mov
cmp
and
mov
inc
scas
pop
cwde
scas
dec
rol
gs
in
scas
mov
sub
mov
iret
fisttp
pop
cmp
pop
test
std
jecxz
ins
push
ret
pop
sti
add
or
scas
test
cmp
mov
sbb
out
fwait
sbb
pop
mov
add
push
cld
dec
or
jns
loopne
dec
adc
cmp
js
pop
xor
adc
dec
add
and
sub
mov
sub
fcomp
add
add
sahf
je
mov
loop
or
add
add
cmp
jl
fcomi
cmp
pushf
xchg
pop
bound
scas
add
xor
ins
outs
sar
jne
add
js
add
mov
xor
rcl
push
inc
ins
jo
les
dec
push
adc
imul
cdq
add
inc
rcr
jge
mov
dec
pop
jb
or
pop
daa
lock
xor
cmp
cmp
mov
xlat
or
pop
lds
pop
enter
dec
sbb
neg
push
mov
mov
dec
jne
xor
ror
push
psubb
out
call
xchg
in
aad
mov
push
push
ret
test
enter
inc
mov
fwait
cdq
or
scas
and
nop
icebp
jnp
inc
add
pop
lds
add
add
gs
fidivr
jmp
jb
aaa
push
inc
std
loop
add
loop
xlat
aaa
and
push
sub
in
das
xor
(bad)
pop
fsub
es
add
mov
icebp
pop
and
rcl
dec
jne
sbb
int3
cld
shr
repnz
mov
push
push
arpl
xchg
dec
sbb
push
movs
out
(bad)
mov
mov
xor
ins
add
xor
xor
dec
sub
mov
jnp
cmp
out
ficomp
inc
xchg
rcl
lea
add
fcom
adc
cmc
scas
fdivr
add
and
and
inc
sub
inc
cmps
pop
clc
les
xchg
stos
lods
inc
clc
xchg
cs
xchg
mov
out
daa
mov
pop
mov
or
pop
mov
pop
into
ret
xchg
iret
popa
mov
lods
ror
dec
in
or
push
lahf
retf
adc
test
retf
ret
les
std
aam
mov
and
push
fwait
jp
mov
or
cld
jp
add
(bad)
jmp
test
inc
mov
add
push
adc
inc
adc
inc
and
sbb
imul
mov
inc
ss
stc
inc
push
add
or
cwde
pop
das
sub
mov
xor
setb
mov
sbb
pop
add
push
xchg
lods
sub
pushf
dec
add
pop
inc
or
push
xchg
int
sbb
mov
inc
das
sahf
add
add
sbb
inc
sub
or
push
cmp
or
add
scas
mov
add
ss
or
pusha
push
mov
mov
fisub
wbinvd
hlt
sbb
sbb
pushf
in
mov
lock
pop
pop
push
loopne
lea
mov
ror
push
inc
mov
pop
xchg
fs
inc
inc
sbb
mov
add
and
inc
xchg
add
sub
out
addr16
add
or
shl
nop
mov
lahf
jb
jns
or
xchg
xor
add
xor
adc
jmp
sbb
dec
xor
sub
in
jmp
(bad)
in
dec
or
cmps
mov
shr
mov
xor
dec
in
or
aas
rcr
sar
shl
jns
xor
ret
(bad)
mov
inc
and
pop
pop
pop
push
ret
cld
or
and
shl
fs
call
or
stos
and
push
sub
scas
inc
dec
(bad)
aas
(bad)
mov
and
add
mov
push
fisttp
xchg
shl
call
xchg
pop
push
push
inc
or
jo
arpl
in
mov
cmp
push
rol
fwait
jo
mov
(bad)
cmps
pop
add
and
and
jo
movsx
add
ins
dec
loopne
mov
jnp
clc
(bad)
lods
add
lock
push
jno
jle
jo
(bad)
xchg
push
loopne
and
dec
arpl
inc
cwde
add
sti
clc
rcl
sti
pop
cmp
sub
add
enter
dec
ror
cld
sbb
data16
and
push
int
add
jecxz
xlat
movs
dec
pusha
aam
pop
add
xor
cli
inc
xchg
sub
jae
mov
add
or
pop
add
sbb
loopne
xor
add
xor
xchg
nop
pop
pop
adc
jnp
mov
nop
sub
les
cmp
inc
shrd
movs
and
mov
or
mov
push
cmc
outs
pop
jl
test
div
xchg
fs
rol
xchg
rol
xor
add
pop
xchg
dec
xor
or
push
pop
cmps
pop
xor
add
jp
out
shl
sbb
add
jno
aaa
(bad)
cmp
push
jo
loope
cdq
add
cld
push
sbb
or
cmps
adc
fcomip
and
clc
rol
push
jg
jo
or
out
or
mov
aas
jge
pop
xchg
dec
clc
and
das
adc
test
push
cmc
add
or
or
push
test
ret
(bad)
scas
sub
and
sub
mov
test
add
xlat
or
in
and
test
loopne
pop
movzx
push
and
cmp
pop
ret
nop
xchg
xlat
adc
xor
dec
add
xchg
rcr
ficom
ja
add
jecxz
pop
sbb
push
sbb
lds
or
test
daa
jbe
pop
sub
mov
ficomp
sbb
data16
sbb
push
iret
inc
adc
bound
dec
ret
pop
out
add
fbld
daa
test
mov
inc
jns
mov
sbb
dec
popf
cmp
popf
rcr
sub
jae
mov
sub
ret
aaa
xchg
cmp
cmp
in
sub
xchg
mov
in
lahf
sar
or
jne
movlps
cmovl
push
js
sbb
xor
sub
xchg
cmp
sub
xor
ins
arpl
cmp
ror
(bad)
mov
jle
xchg
pop
jae
jg
xchg
test
jge
add
push
dec
ror
xchg
cmp
pop
aam
xchg
add
das
inc
cli
imul
xchg
or
mov
add
add
sub
pop
rcr
pop
pop
lods
adc
xor
cmp
sub
inc
aad
les
retf
adc
xchg
test
hlt
push
sbb
sub
fmul
aaa
or
pop
xchg
test
xchg
mov
inc
nop
pop
add
es
pop
out
or
stc
daa
movs
loope
js
xor
sub
add
sub
pop
xor
jmp
fs
push
out
sub
add
add
adc
pop
dec
dec
mov
mov
dec
pop
stos
push
in
add
inc
aad
leave
loopne
xchg
mov
(bad)
and
daa
iret
push
push
shl
or
les
and
add
add
dec
rcr
sbb
hlt
xchg
sub
adc
inc
aad
xor
pop
lods
das
pop
dec
aam
sub
inc
cs
mov
outs
cs
(bad)
pmaddwd
shl
rcl
add
adc
inc
aad
and
push
adc
jnp
nop
sub
pusha
push
pop
int
inc
push
(bad)
sbb
mov
xor
sbb
cmc
mov
dec
sbb
jmp
daa
pop
mov
xor
in
push
sbb
jle
in
push
inc
das
pop
push
adc
out
or
inc
push
adc
leave
push
push
dec
ds
mov
loope
mov
cmc
sub
adc
stos
pop
pop
adc
and
js
(bad)
shr
ds
add
pop
pop
adc
and
ins
or
pop
push
jo
inc
pop
mov
or
xor
adc
int3
xor
ffreep
fcom
dec
test
push
xor
mov
sbb
mov
mov
add
call
clc
ror
cmp
loopne
pop
and
movs
sub
xor
mov
and
add
pop
push
add
pushf
xchg
fnstcw
cmp
xor
add
pop
fdiv
sub
mov
xchg
enter
inc
mov
fs
fisubr
cmp
xor
in
add
aaa
cmp
jns
mov
mov
cmp
sahf
pushf
pushf
pushf
pusha
xchg
jecxz
cmp
dec
dec
inc
inc
push
retw
aas
cmp
sub
push
add
punpckhdq
add
xchg
sbb
dec
ds
add
js
ins
xor
bound
sub
arpl
adc
inc
sbb
packssdw
dec
add
inc
mov
test
outs
push
daa
inc
aad
enter
and
loopne
cmc
push
inc
aad
inc
or
mov
add
inc
arpl
inc
stos
dec
adc
and
or
aad
xchg
mov
inc
arpl
push
arpl
inc
inc
add
rol
push
add
adc
sub
push
push
and
sub
xchg
arpl
push
xor
inc
or
ror
arpl
add
push
enter
adc
inc
or
arpl
add
add
push
and
add
adc
arpl
arpl
(bad)
add
inc
arpl
add
call
mov
inc
or
adc
add
inc
mov
pop
or
arpl
add
es
add
sub
add
add
arpl
push
mov
xchg
dec
xchg
add
test
xor
xor
jns
cli
add
add
adc
jbe
mov
call
or
arpl
arpl
sbb
(bad)
xlat
or
repnz
push
or
cmps
(bad)
lds
xchg
mov
iret
add
or
pop
xchg
add
sub
adc
fmul
or
add
lea
adc
fst
lea
js
cmp
pop
lods
das
mov
add
mov
rol
adc
add
or
push
adc
add
movs
movs
aas
mov
addr16
das
lods
in
loope
sub
jg
xchg
in
das
or
hlt
repnz
lock
inc
pop
jp
pop
fst
pop
add
outs
stc
daa
mov
test
push
aad
mov
inc
cmps
jmp
bound
cmp
and
or
inc
and
sub
cmc
and
pop
mov
fs
inc
inc
fbld
fwait
lods
in
rcl
inc
adc
push
and
inc
sub
test
xor
das
scas
sub
adc
loopne
test
inc
inc
inc
das
das
jo
inc
adc
mov
pop
rol
pusha
sub
js
mov
in
adc
and
push
lods
in
push
dec
push
push
xlat
loopne
or
cmps
pop
int
inc
sbb
and
int3
inc
inc
add
xor
mov
xlat
aas
stos
sbb
inc
add
sub
cmp
adc
mov
outs
inc
movs
sbb
das
sbb
test
sub
in
sbb
sbb
cmps
add
push
dec
inc
xchg
inc
lds
pop
jmp
or
cmp
test
jg
push
loope
add
sbb
xor
inc
push
test
aaa
pop
add
inc
pop
mov
inc
scas
or
mov
loopne
sub
push
add
dec
addr16
jge
outs
cwde
push
or
ja
push
push
jl
ja
inc
addr16
neg
adc
hlt
mov
shl
adc
jo
sub
push
add
inc
pushf
xchg
push
bnd
int3
inc
ins
inc
fsub
js
xchg
dec
xor
sahf
das
dec
cdq
dec
ja
into
icebp
repnz
dec
(bad)
dec
or
cmovo
mov
dec
dec
inc
xchg
loop
dec
cmp
daa
daa
daa
jo
icebp
cmp
xchg
xchg
xchg
dec
jb
pop
push
leave
leave
leave
leave
dec
je
mov
jecxz
push
push
popf
xor
in
xlat
(bad)
and
(bad)
js
jb
(bad)
sub
loopne
rcr
push
pop
xchg
mov
shl
push
add
adc
ins
xor
dec
or
les
add
les
or
mov
inc
pop
shr
adc
pop
add
adc
lods
in
add
mov
pop
ins
ins
add
jae
lods
mov
jae
or
push
adc
cmps
mov
add
lods
in
add
jae
pop
xchg
inc
add
jae
cmp
dec
and
dec
inc
jae
mov
or
push
push
add
mov
adc
jae
and
adc
add
sub
and
mov
sbb
xchg
mov
ret
and
aad
inc
mov
xor
and
pusha
adc
leave
add
add
add
add
sub
jae
outs
test
jae
push
cmp
shr
inc
add
dec
jae
xor
sub
push
adc
or
jae
push
rol
add
sub
add
jae
jo
adc
add
sub
dec
add
mov
add
sbb
test
inc
sub
adc
xlat
xchg
jae
mov
and
imul
push
inc
add
and
rol
adc
mov
mov
ss
add
sub
adc
push
push
add
adc
cmp
inc
jbe
mov
pinsrw
movhps
out
outs
xchg
rol
fsub
push
jnp
and
sub
add
adc
add
movs
pop
push
ins
xor
push
push
and
ins
cwde
push
ja
push
xor
push
ja
das
adc
fcomp
loop
xor
mov
xchg
push
add
sub
and
xor
daa
lahf
add
rcr
pop
rol
cmps
rcl
aaa
push
fwait
dec
xlat
sbb
adc
add
push
sub
mov
les
push
add
mov
mov
dec
icebp
and
sub
mov
or
icebp
sub
mov
cs
rcl
sub
pop
mov
push
pop
mov
push
and
mov
pop
add
loopne
pushf
das
mov
mov
pop
ret
or
xchg
pop
adc
sbb
xchg
and
loopne
rcr
cmp
add
ror
lods
or
mov
lahf
pop
inc
add
dec
jne
push
add
mov
pop
stos
outs
stos
cdq
fld
xchg
sub
push
push
add
stos
push
pop
fist
outs
scas
mov
leave
pop
cmps
add
and
add
and
add
lods
imul
pop
add
pop
lods
sub
push
cmp
aam
and
pop
xchg
ret
sbb
sub
pop
push
push
mov
pop
pusha
xchg
pop
lods
rcl
add
dec
mov
sub
inc
xor
enter
pop
mov
lock
pop
inc
push
mov
pop
push
leave
das
pop
or
inc
push
pop
shl
jbe
push
out
sbb
push
or
add
push
jno
pop
repnz
push
dec
rcl
test
pop
pushf
fsub
js
pusha
sub
pushf
(bad)
mov
std
pusha
dec
cmp
pop
jge
jnp
movntq
xchg
xchg
xchg
xchg
bound
in
leave
leave
leave
enter
lods
loop
in
in
arpl
repnz
scas
idiv
cmp
jns
data16
mov
inc
addr16
sahf
pushf
pushf
movs
leave
add
pop
jno
dec
movs
iret
nop
add
in
mov
cs
lock
sbb
push
lods
imul
pop
ins
dec
or
pop
dec
or
les
push
les
aam
out
push
add
inc
test
sub
adc
mov
cmp
lock
push
test
dec
add
add
je
and
mov
add
dec
lods
imul
ror
pop
inc
push
fiadd
xchg
push
sub
add
dec
inc
add
pop
dec
fwait
add
loopne
push
push
repnz
imul
push
add
sub
jno
mov
imul
or
add
adc
push
leave
and
dec
lods
imul
imul
mov
imul
dec
and
inc
adc
dec
and
dec
mov
dec
mov
dec
inc
add
or
jns
imul
add
jns
add
add
mov
movs
jle
cmp
imul
push
pop
inc
fsubr
xlat
sub
and
or
pop
mov
add
push
and
push
sub
push
dec
add
imul
sbb
sbb
fcomp
push
push
xor
jl
shr
adc
add
pop
cld
pop
or
mov
add
xor
test
rcl
pop
and
outs
lahf
mov
sub
setbe
push
jo
ret
fidiv
inc
add
pop
add
pop
xchg
and
cmp
push
clc
imul
outs
movs
or
lea
add
pop
outs
inc
sar
or
mov
(bad)
shl
bound
popa
jo
inc
aas
add
inc
shl
xchg
mov
je
sbb
in
sub
test
inc
add
pop
fsubr
lds
movsx
movs
xor
cmps
js
jo
call
fcmovnb
ror
or
xor
xchg
add
ins
stos
and
jo
and
mov
xchg
xor
inc
add
or
push
sbb
stos
mov
xchg
or
pop
mov
out
(bad)
pop
push
mov
inc
jmp
sbb
movzx
push
or
adc
aas
in
in
sub
add
dec
jne
inc
add
(bad)
sub
mov
pop
(bad)
rol
mov
push
add
cmp
mov
pop
iret
mov
cmp
cmps
(bad)
push
(bad)
mov
mov
xor
push
inc
hlt
xchg
and
(bad)
mov
das
cmps
(bad)
sbb
fmul
je
unpcklps
hlt
mov
xchg
xchg
cmp
dec
hlt
jne
and
mov
push
add
stos
and
xor
dec
addr16
push
xchg
(bad)
leave
and
ficomp
aam
add
add
in
dec
rcl
inc
movs
out
sbb
sbb
fstp
pop
jg
call
sub
add
scas
xchg
daa
pop
mov
xor
outs
push
mov
pop
jnp
add
jmp
jno
push
jp
jecxz
call
sbb
add
inc
popa
mov
ins
loopne
push
call
mov
or
mov
push
add
call
mov
int3
aam
mov
pusha
adc
mov
push
test
js
dec
jl
jno
aad
adc
sub
sbb
sti
push
test
sbb
add
mov
aam
jge
push
mov
movups
jl
adc
pushf
mov
mov
outs
add
mov
ror
and
out
not
or
pop
ja
inc
sub
xchg
sub
or
and
out
mov
xchg
enter
ins
mov
rol
(bad)
retf
jmp
js
push
sub
out
ds
pop
mov
pop
das
dec
push
adc
mov
arpl
adc
mov
push
out
and
dec
es
inc
xchg
xor
add
inc
push
cmp
inc
cmp
mov
ds
pop
pusha
loopne
out
jge
ins
push
je
nop
pop
push
xor
adc
ja
fld
sub
clc
xchg
popa
lldt
cmp
cmp
push
or
and
xor
cmp
iret
bound
push
pop
je
inc
adc
push
in
data16
popa
in
sbb
push
fist
jne
cdq
lods
or
xor
and
retf
inc
or
push
push
add
adc
jmp
js
xchg
ja
sbb
ret
sub
adc
push
sbb
pop
mov
(bad)
mov
push
mov
add
cwde
or
xchg
xchg
add
aaa
or
test
shl
mov
mov
push
jge
cmp
js
adc
add
loope
ja
inc
call
pop
inc
add
add
push
inc
sbb
(bad)
sbb
ret
mov
je
fadd
adc
(bad)
adc
sub
in
inc
stos
jmp
(bad)
in
fcom
aaa
popa
dec
cld
or
inc
xchg
mov
enter
pop
ins
stos
or
mov
loope
lods
mov
aad
inc
lods
sar
cmp
mov
mov
ja
imul
or
push
ror
pop
jbe
add
xlat
jne
dec
and
dec
loopne
or
mov
out
(bad)
mov
dec
add
daa
mov
pop
and
dec
inc
mov
mov
and
inc
inc
imul
inc
add
xor
mov
daa
inc
nop
mov
aaa
adc
inc
sbb
xor
cmp
and
push
mov
cwde
sub
xor
sahf
adc
push
or
sar
arpl
add
jb
pop
aas
and
inc
xchg
adc
add
adc
lods
cdq
les
add
loope
jno
mov
jle
xchg
jne
inc
push
in
rol
cmp
mov
(bad)
adc
pop
sub
sar
and
mov
jns
or
dec
sub
test
lock
or
sbb
stos
jp
pop
xor
add
adc
rol
sub
and
add
or
jae
dec
xor
pop
das
add
or
push
dec
pushf
xchg
add
jno
and
out
daa
add
aam
js
adc
ret
inc
imul
jnp
add
dec
mov
lock
daa
xchg
ret
mov
mov
retf
sbb
cdq
add
push
repnz
sbb
xor
sub
or
pop
aaa
push
xchg
es
ret
data16
inc
sbb
enter
adc
sbb
jo
fsubr
add
lock
dec
adc
sbb
(bad)
jns
xlat
mov
xor
jae
shl
cmp
push
inc
cdq
js
ret
adc
jnp
imul
and
sub
fcmovnb
addr16
inc
sub
and
mov
sar
mov
pop
sbb
jl
sub
dec
inc
adc
(bad)
stc
mov
(bad)
test
adc
sbb
xchg
inc
add
lea
add
or
dec
mov
jge
sbb
pusha
inc
repnz
rcl
mov
push
pop
add
xchg
pop
sbb
pop
mov
or
mov
xchg
aaa
in
dec
pop
sub
clc
sbb
jle
jne
pop
or
test
sbb
adc
daa
or
or
movs
out
pop
pop
pushf
sub
(bad)
nop
add
push
sub
xor
int
ret
push
cli
sbb
cmp
xor
pop
adc
sbb
push
mov
mov
popa
inc
in
pop
sbb
push
popa
add
aam
xchg
xor
into
jg
jp
pop
popf
fucomi
or
adc
outs
int3
je
xchg
aam
push
xchg
clc
push
lock
jns
and
inc
dec
and
inc
jo
arpl
or
jl
inc
or
mov
aaa
mov
add
push
retf
arpl
push
inc
cmp
dec
data16
idiv
outs
dec
je
imul
jmp
mov
cwde
jbe
adc
mov
sbb
and
mov
push
add
adc
jmp
imul
fdivr
idiv
inc
je
cmp
jne
xor
jbe
mov
sbb
icebp
add
iret
mov
mov
pusha
movs
sti
icebp
mov
pop
add
repz
fwait
pop
xlat
pushf
js
inc
stos
das
adc
fisubr
push
mov
jmp
lods
pop
and
shr
test
mov
cld
xor
adc
mov
pop
inc
movs
and
or
(bad)
or
pushf
inc
or
add
or
adc
movs
or
test
push
scas
or
and
shl
aam
mov
xor
xor
(bad)
in
push
xchg
pusha
test
or
leave
popf
add
pop
data16
pop
cmp
or
js
push
or
arpl
sbb
push
adc
cmps
(bad)
pop
cmp
dec
pop
(bad)
mov
outs
or
add
mov
adc
js
inc
cmp
daa
or
out
jmp
sti
outs
add
bound
sub
add
pop
test
lahf
and
dec
(bad)
sti
or
and
aad
bound
in
into
inc
dec
jecxz
popa
inc
sbb
adc
and
out
or
xor
js
dec
fmul
xor
js
xchg
fsub
and
fmul
jae
cmp
mov
ret
cmp
div
fcom
xchg
nop
aam
or
fld
and
fld
jbe
inc
pop
imul
out
xchg
xchg
stos
inc
push
mov
ins
ret
call
ret
cmc
movs
movs
jmp
and
shl
xchg
push
fcom
imul
xor
mov
dec
pop
fadd
or
cmp
dec
sbb
lahf
pop
lods
and
dec
xor
jecxz
nop
inc
and
xchg
push
enter
inc
pop
inc
add
mov
aam
xor
push
lahf
adc
and
jo
dec
xor
and
and
lods
cdq
adc
xor
add
bts
push
sbb
iret
xor
jmp
mov
mov
shl
ret
mov
pop
ins
cmp
jne
xchg
inc
mov
outs
pushf
sub
jg
xchg
add
push
mov
push
push
jl
sbb
ret
pop
or
inc
jo
xor
in
jno
shl
inc
ror
fbld
pop
ins
(bad)
int3
ror
mov
(bad)
(bad)
and
int3
and
push
xor
stc
ror
dec
aam
mov
adc
mov
cmc
and
les
mov
xchg
mov
xchg
and
shl
cmps
mov
sub
test
call
push
loope
add
and
ror
xor
or
lock
cdq
or
dec
inc
cmp
mov
ins
mov
jmp
in
mov
inc
sub
mov
add
lods
mov
movs
push
mov
xlat
pop
and
or
pusha
loope
adc
or
push
in
adc
mov
pop
aam
inc
push
pusha
sbb
dec
retf
sub
sub
sbb
xchg
sbb
jecxz
add
les
mov
push
sub
int
adc
adc
push
repz
pop
and
mov
enter
dec
ja
jnp
sub
pop
test
push
xchg
jo
xchg
mov
xor
xchg
das
and
push
sbb
add
repnz
iret
(bad)
pop
push
fsubr
xchg
adc
pop
push
xor
dec
xchg
(bad)
imul
xchg
or
jmp
or
add
mov
mov
pop
daa
add
push
retf
ror
loope
xchg
shl
mov
pushf
xchg
jg
push
and
(bad)
push
xor
dec
fisttp
icebp
pop
mov
es
add
pop
adc
mov
hlt
xlat
call
adc
push
(bad)
xlat
call
and
inc
(bad)
nop
push
fs
mov
jno
fidiv
mov
setbe
pop
call
(bad)
mov
xchg
fstp
cvtps2pd
xchg
xchg
xchg
rcl
cwde
icebp
in
xchg
(bad)
(bad)
cld
and
(bad)
mov
or
push
mov
and
imul
pushf
push
jmp
pop
rcl
sbb
dec
sahf
cmp
inc
adc
fisttp
push
mov
add
dec
enter
dec
sbb
in
add
mov
mov
sbb
pushf
or
repnz
mov
add
push
xor
push
adc
or
call
in
adc
in
jno
das
sbb
fld
add
xor
adc
adc
adc
in
mov
pop
push
add
mov
add
sbb
ror
in
add
jno
(bad)
mov
push
sub
adc
in
add
test
sub
or
mov
xchg
lods
(bad)
inc
fadd
out
add
add
mov
add
mov
or
in
and
adc
xchg
add
jge
and
inc
in
inc
and
push
mov
movs
pusha
xchg
dec
jecxz
dec
shl
xor
(bad)
fstp
call
add
xchg
mov
push
push
adc
in
push
add
inc
or
or
imul
fild
mov
popf
jmp
ror
adc
jl
push
push
repnz
and
les
and
call
cmp
push
push
mov
mov
sti
mov
nop
jmp
mov
jmp
mov
mov
in
jg
or
sub
test
pop
lock
loop
pop
jmp
jne
add
call
mov
outs
xchg
sub
and
sbb
or
fist
jnp
jmp
fstp
or
add
sbb
inc
lods
mov
add
arpl
pop
pop
scas
mov
mov
mov
les
clc
pop
pushf
add
les
inc
and
adc
sbb
and
mov
xchg
sbb
adc
pop
aaa
add
pop
adc
mov
outs
mov
(bad)
mov
mov
inc
pop
mov
dec
sub
inc
ins
push
jl
add
mov
add
inc
ret
lahf
ds
xor
or
jle
mov
lea
pop
push
stc
(bad)
cmc
mov
xor
inc
inc
adc
js
add
sub
bound
cmovne
add
mov
inc
sbb
add
and
int3
fmul
rcr
push
push
mov
lahf
mov
adc
mov
pop
mov
mov
in
mov
(bad)
xor
loopne
xchg
mov
push
cmc
jne
pushf
pop
je
popa
adc
fsubr
and
add
inc
cld
pop
jmp
or
pop
jmp
or
cmp
or
or
cmp
rol
inc
mov
pop
pop
mov
imul
mov
scas
cmp
into
or
add
mov
sub
je
add
sub
jae
jne
test
mov
mov
shl
cmp
mov
sbb
add
sub
jmp
sub
inc
ins
movs
lods
in
push
(bad)
mov
stos
fstp
dec
mov
imul
out
mov
or
aaa
dec
or
xchg
push
mov
movs
test
and
shl
lea
inc
sbb
cmp
and
and
add
int3
call
push
(bad)
sub
lock
es
add
aas
pusha
push
jmp
(bad)
jmp
or
adc
adc
and
icebp
sub
enter
sub
mov
or
shl
dec
jne
adc
cmp
je
cmc
cmps
div
(bad)
inc
dec
in
jmp
aaa
enter
movs
scas
test
in
movs
mov
mov
ret
mov
inc
sbb
call
(bad)
lahf
push
pop
jecxz
mov
pop
je
and
(bad)
sub
leave
mov
cmova
cmp
jb
shl
inc
add
adc
push
out
es
mov
and
cmps
adc
adc
pop
adc
cmp
dec
adc
add
mov
jg
adc
and
xchg
or
add
pop
sbb
add
inc
sub
adc
mov
mov
mov
inc
or
adc
ret
mul
out
popf
pop
dec
sbb
or
adc
js
mov
dec
faddp
ins
cwde
mov
cmp
cmp
es
imul
cmp
xchg
push
mov
xchg
add
enter
and
shr
fmul
jmp
icebp
or
mov
call
cmp
push
dec
movs
int3
test
imul
jmp
fucomi
test
sbb
xlat
rol
enter
das
mov
test
and
inc
out
loopne
dec
jne
psrlw
ins
mov
jmp
sbb
push
(bad)
inc
or
mov
pop
add
pop
mov
sbb
(bad)
sbb
add
xchg
sub
and
addr16
push
cmp
shl
jae
or
xor
jle
jbe
jg
add
or
add
sbb
push
mov
cmp
sub
dec
out
aas
mov
repz
and
cmp
in
jl
adc
inc
jle
xchg
xor
stos
adc
add
js
test
loope
or
je
push
push
retf
inc
mov
fcmovne
stos
or
inc
adc
fistp
push
cld
loope
xchg
je
lds
mov
add
or
add
and
stos
imul
inc
sbb
push
or
xor
adc
add
adc
outs
jb
add
sub
xchg
cmp
cdq
hlt
out
add
lea
xor
push
loope
cmps
push
xlat
mov
movzx
ret
and
xchg
ret
inc
inc
adc
das
mov
jo
and
mov
jge
mov
mov
call
or
(bad)
push
xchg
lds
pop
pop
(bad)
pop
pop
mov
shr
mov
aam
shr
jecxz
xor
mov
ins
push
in
add
push
adc
add
call
dec
ins
inc
movs
xor
and
stos
div
rol
adc
push
outs
adc
adc
add
cld
mov
jge
add
jle
and
fwait
(bad)
cdq
push
and
in
in
add
inc
cld
stos
in
mov
cmp
movs
push
mov
dec
or
pop
dec
or
sahf
ss
aas
sub
mov
inc
stos
aas
ins
adc
add
pop
push
dec
push
ss
movzx
adc
sub
inc
in
ins
sbb
lahf
cmp
push
add
or
out
lahf
xchg
out
scas
fcom
jne
pop
rcl
ret
dec
aaa
inc
ss
xchg
lahf
pop
push
add
aaa
pusha
outs
inc
adc
lea
test
xchg
mov
inc
test
push
scas
imul
inc
test
inc
push
mov
mov
push
int3
push
push
das
mov
hlt
sub
jmp
jns
test
clc
add
add
add
mov
fs
sbb
pop
je
pop
shl
xor
movs
fadd
jno
ja
mov
mov
xchg
cmps
push
fs
stos
push
or
dec
out
add
push
xor
xchg
je
pop
or
sahf
out
out
test
xchg
push
pushf
mov
ss
mov
inc
mov
inc
sbb
ss
adc
sub
test
mov
add
inc
push
and
test
loope
jmp
mov
cmovb
dec
adc
cmp
add
mov
jns
popf
add
mov
movs
aam
jmp
popa
or
xchg
inc
sbb
mov
movs
lods
lock
test
test
cmp
lea
xor
sar
je
push
mov
sbb
sti
mov
fistp
dec
cwde
inc
fadd
adc
pop
adc
leave
add
cmc
sbb
ret
or
and
mov
jo
inc
inc
dec
jne
mov
neg
cmp
leave
or
inc
mov
fadd
xor
xor
jb
movs
dec
mov
mov
(bad)
adc
mov
pop
jne
inc
ret
xchg
or
pop
and
sbb
daa
jb
mov
mov
out
mov
xlat
dec
push
push
lahf
mov
lea
rcl
(bad)
fucomip
into
gs
into
adc
in
push
leave
cmp
leave
ffreep
and
stos
mov
inc
bound
ja
call
fimul
xor
stc
mov
arpl
xlat
jecxz
jmp
test
loopne
stc
pushf
loop
and
mov
or
pop
jne
clc
into
mov
add
adc
or
inc
add
mov
in
and
cmps
mov
dec
popf
jns
popa
sub
clc
add
dec
adc
push
cmp
xor
xchg
add
pushf
xchg
add
mov
add
popa
xlat
cwde
pop
jmp
arpl
adc
or
movs
mov
sub
mov
inc
xchg
nop
rcl
dec
push
mov
mov
pop
mov
out
cmp
bound
ret
(bad)
mov
inc
int3
in
pop
mov
inc
adc
xchg
sahf
mov
mov
cmc
pop
jp
adc
dec
pop
pushf
sar
or
mov
icebp
aam
sub
sbb
cmp
icebp
fadd
add
aam
jbe
sbb
clc
jbe
icebp
fsubr
sub
pop
fidiv
sbb
adc
movs
shr
and
sbb
cmp
mov
mov
cdq
inc
(bad)
and
es
jg
pop
cld
nop
and
sbb
mov
pop
or
es
add
je
sbb
add
aam
mov
jo
or
add
dec
ins
dec
jnp
mov
sbb
xadd
and
imul
mov
aam
out
das
pop
jo
test
add
jo
mov
inc
ja
dec
add
xor
nop
inc
fstp
test
add
xor
stos
add
dec
or
push
repz
xchg
shl
add
rcr
xor
inc
popf
xchg
call
sub
xchg
sahf
ss
nop
(bad)
je
pop
mov
mov
add
sub
pop
push
call
push
sub
repnz
add
fnstcw
lahf
add
movs
lea
xchg
add
in
rcr
fcom
add
jo
(bad)
xor
(bad)
bound
das
pusha
enter
add
and
jno
pusha
push
xchg
fmul
jecxz
sub
inc
jns
mov
shl
push
lds
in
test
add
ja
(bad)
or
add
xor
lods
sub
aam
sbb
popf
movs
push
pop
pop
iret
mov
call
xchg
xor
fistp
sbb
shl
and
cld
mov
inc
pop
into
int3
push
daa
nop
xchg
sub
xchg
or
ds
push
push
imul
js
mov
or
sub
pop
pop
stos
ret
(bad)
xor
cmc
mov
inc
sub
loopne
pop
daa
lea
add
lahf
sbb
arpl
or
push
sub
(bad)
sub
or
sbb
or
movs
out
pop
pop
push
or
aad
les
pop
lea
mov
cmp
pop
dec
mov
mov
sub
aaa
pushf
or
adc
push
inc
and
cmp
loope
pop
add
push
add
and
jg
fnsave
hlt
stos
mov
lea
or
shl
mov
fisubr
and
mov
iret
jl
(bad)
int3
add
je
pop
add
add
inc
cmc
mov
push
je
mov
mov
jge
lock
dec
test
les
clc
mov
loop
std
out
inc
or
in
mov
push
loope
dec
xor
cmps
daa
mov
fistp
dec
jno
xchg
call
sbb
sbb
sub
fild
in
lock
jmp
lods
push
mov
and
add
out
sub
test
and
dec
scas
fistp
arpl
adc
push
cld
xchg
clc
test
sub
sbb
pop
sbb
cld
sub
pop
mov
lea
xlat
mov
push
push
addr16
jp
in
mov
cmp
popf
cmp
xor
aad
or
bound
lea
add
les
js
xchg
jne
ret
mov
sub
sbb
sub
shr
aam
jnp
les
or
dec
or
nop
xor
mov
and
ret
push
(bad)
in
adc
test
fcom
push
jg
add
lock
movs
adc
scas
add
fdiv
jno
pop
pop
sub
add
aam
add
lock
mov
cmps
mov
cld
inc
test
mov
enter
jne
sbb
sbb
dec
cwde
out
xchg
push
in
(bad)
xor
mov
and
jae
sbb
xor
add
sti
sbb
cld
je
dec
je
add
aaa
mov
add
jmp
adc
or
jmp
sub
shl
js
add
mov
repz
jmp
push
ror
jbe
mov
jns
add
jo
mov
jns
add
js
sbb
and
fadd
test
(bad)
sbb
pop
(bad)
or
mov
aaa
push
mov
jle
outs
lods
cmps
add
push
inc
dec
ja
adc
jo
inc
jecxz
dec
pop
aam
lods
psubw
es
push
jg
mov
mov
inc
adc
(bad)
cmp
adc
bound
pop
scas
inc
xchg
push
xchg
cmps
sub
pusha
aam
cdq
inc
rol
test
pusha
bound
adc
sub
shl
or
push
dec
add
jnp
push
xor
dec
inc
mov
shr
cld
xor
ja
xor
add
and
jl
mov
daa
(bad)
gs
sub
and
out
xlat
fcom
dec
test
fmul
add
rcr
cdq
sbb
cwde
test
js
shl
or
or
popa
popa
mov
mov
jl
fsubr
dec
cld
mov
cmp
and
outs
adc
(bad)
fdiv
jmp
mov
mov
lock
out
ret
inc
(bad)
sbb
test
adc
xchg
xor
push
cmp
jne
sbb
ins
or
mov
out
mov
mov
in
sub
(bad)
adc
sti
je
call
adc
mov
inc
aam
pusha
xlat
add
shl
call
add
arpl
mov
sbb
inc
add
add
inc
add
pusha
int3
add
jmp
mov
push
rol
mov
pop
ret
dec
xor
xchg
sbb
sbb
sbb
add
push
test
fimul
sub
jmp
xchg
pop
sbb
das
xchg
push
push
add
push
pop
mov
and
lods
sub
jbe
xor
sbb
adc
stos
ins
es
cmp
sub
cdq
xchg
mov
dec
or
retf
shr
xor
or
test
call
sub
(bad)
leave
fmul
sti
test
fdiv
adc
sbb
adc
inc
add
xlat
pop
cmp
jne
add
lods
xchg
int
data16
(bad)
shr
enter
pop
cmp
push
mov
and
push
call
xchg
add
add
push
or
xor
mov
test
int
add
sub
xchg
and
dec
mov
push
in
in
mov
mov
int
sbb
test
mov
and
stos
test
xor
(bad)
fisttp
ret
mov
sub
mov
inc
add
inc
aaa
or
inc
paddd
inc
push
imul
in
add
test
addr16
mov
inc
dec
popa
adc
add
shl
and
xor
arpl
sbb
in
addr16
inc
dec
rsm
into
imul
ins
jbe
jmp
std
hlt
adc
adc
adc
dec
sar
call
pop
fucomip
hlt
imul
sbb
add
es
cld
pop
cmp
sbb
ret
js
into
and
sub
je
mov
pusha
xor
add
cmp
or
mov
je
sub
movs
or
scas
pop
pop
add
ss
lods
rcl
push
xchg
pop
mov
pop
sub
mov
sub
daa
shl
(bad)
fild
mov
test
jl
cmp
jl
hlt
scas
daa
cmp
or
or
jmp
retf
or
aad
rol
idiv
dec
pop
in
mov
jmp
add
adc
mov
mov
jg
mov
sub
cmp
xchg
hlt
dec
int3
cmp
movs
adc
cld
or
inc
adc
push
adc
inc
sub
push
mov
(bad)
cmps
push
mov
sbb
fidivr
mov
xchg
rol
add
dec
out
or
cmp
imul
push
repz
out
add
retf
pop
cwde
je
pop
xlat
add
push
inc
xchg
(bad)
dec
add
pop
mov
jne
inc
push
cld
inc
jo
loope
fucomip
inc
test
and
(bad)
mov
jecxz
enter
adc
add
xor
push
jg
sbb
sbb
hlt
outs
mov
sub
jle
mov
into
mov
lods
cvttps2pi
mov
jle
xchg
(bad)
shl
add
out
cwde
mov
inc
ret
ror
jg
mov
out
jbe
pop
inc
stc
xchg
ins
fist
je
adc
or
test
ror
inc
(bad)
xor
add
jnp
stc
adc
pop
pop
pop
jp
outs
cmps
fmul
mov
int
and
outs
rcr
jbe
(bad)
jo
adc
jg
popf
sbb
std
adc
cmc
xor
cmps
or
stos
loopne
sbb
jge
in
mov
sub
or
adc
mov
pusha
mov
xlat
ret
stos
push
je
call
in
sub
pop
jle
mov
xor
or
fs
add
fcmovnu
xor
push
hlt
ins
pop
xor
fucomi
dec
xor
mov
push
mov
add
push
in
and
test
mov
sub
cli
idiv
and
call
add
stos
mov
jne
xor
inc
inc
dec
and
sbb
and
or
push
aaa
pop
cmc
xchg
mov
jge
cmove
into
jo
mov
je
sub
mov
add
or
push
inc
imul
sar
jae
mov
mov
outs
cmp
les
push
xchg
pop
into
xor
cdq
inc
das
inc
sbb
stos
ret
lock
pop
(bad)
(bad)
fs
stos
jne
mov
mov
out
(bad)
mov
or
aam
sub
inc
and
dec
test
(bad)
mov
pop
dec
add
adc
rcpps
jo
push
fist
adc
(bad)
out
sbb
push
(bad)
sbb
ret
scas
jp
mov
rcr
inc
inc
fcom
loope
(bad)
or
xlat
pop
and
jns
daa
add
xor
add
jo
mov
inc
into
test
push
push
mov
add
adc
add
fcmovbe
(bad)
sbb
adc
jle
adc
jns
mov
in
in
(bad)
mov
and
test
(bad)
sub
ss
ror
mov
jle
add
or
mov
sub
add
sbb
pop
pop
push
mov
lea
cdq
add
mov
cmp
mov
loope
add
test
movs
sub
push
lea
sbb
jns
sub
ja
loop
and
jne
call
mov
out
inc
xchg
xchg
fidiv
inc
add
out
add
fist
outs
or
inc
cs
add
or
or
add
jo
loopne
js
add
fstp
sbb
adc
movs
sub
xchg
jp
add
add
(bad)
add
rol
lods
test
callw
xchg
pop
fimul
push
ins
or
push
outs
loope
xor
dec
add
adc
test
sbb
bswap
fcom
fadd
or
jl
jb
stc
push
div
shr
inc
push
and
sbb
sbb
cmps
or
xor
mul
iret
out
sbb
adc
or
or
sbb
int3
sbb
add
inc
jbe
xor
jg
or
repz
clc
and
lods
not
lea
add
xor
adc
jmp
inc
add
rcl
jl
inc
jle
dec
xor
sbb
adc
adc
and
pushf
cmp
int3
mov
call
push
or
pop
pop
cs
add
add
clc
aad
add
xor
or
mov
retf
mov
sbb
dec
push
xchg
into
pop
shr
jle
mov
cmp
sub
(bad)
xchg
ficom
jle
cli
sbb
in
lea
adc
ror
mov
mov
test
jb
test
popf
jl
sub
jae
fmul
inc
adc
adc
and
dec
add
ss
inc
or
adc
out
imul
sbb
and
add
iret
js
mov
test
setae
loopne
lods
jge
lea
jnp
or
adc
mov
retf
lods
push
mov
push
pop
mov
push
pop
and
or
jae
mov
pushf
or
mov
push
imul
pop
push
sbb
xor
xchg
xor
pop
add
into
dec
or
sbb
xor
sbb
popf
pop
and
fsubr
js
cmp
or
ja
(bad)
sbb
sbb
and
cmp
outs
das
fisttp
and
xchg
mov
(bad)
je
sahf
aas
push
and
xor
pop
add
fild
jp
daa
xchg
ret
lock
in
loope
es
or
rol
test
sahf
cs
adc
jl
xor
enter
sbb
iret
sbb
fidiv
add
push
or
pop
mov
not
mov
jne
mov
rcr
xchg
ins
or
test
retf
or
mov
sbb
inc
cmp
arpl
leave
adc
std
lea
fld
stos
rol
cld
mov
push
adc
and
emms
enter
nop
in
mov
add
ds
add
dec
jne
mov
sbb
add
and
or
(bad)
js
enter
xchg
js
(bad)
movs
sub
or
or
pop
pop
xlat
inc
pop
ret
xor
enter
ret
and
fiadd
mov
call
pop
and
mov
imul
sub
retf
ins
das
cmp
ins
and
cmp
inc
xchg
xor
shl
sub
jle
bound
out
hlt
cmp
and
dec
in
into
push
cmc
cmp
lds
pop
jmp
lock
inc
arpl
pop
pop
iret
loop
imul
fs
nop
sbb
out
retf
bound
hlt
in
test
mov
and
inc
sbb
aaa
cwde
sbb
jno
jno
lock
or
je
pop
jns
movs
xchg
loope
pop
pop
push
sti
sti
push
sub
icebp
fsub
int3
pop
and
xor
xchg
inc
inc
das
xchg
lods
call
and
sub
mov
ret
jno
sub
and
push
jne
mov
hlt
retf
outs
add
nop
add
iret
mov
aas
ror
(bad)
daa
mov
push
mov
inc
ss
or
xlat
add
add
inc
add
mov
add
dec
cmp
(bad)
mov
pop
push
leave
and
shr
int
loopne
shr
loopne
cwde
jns
mov
movs
loope
shl
sbb
test
loope
pop
shr
loope
inc
sub
vmwrite
enter
xor
dec
daa
push
jb
rol
shl
leave
xchg
sub
nop
outs
push
sti
daa
push
lea
mov
pop
push
mov
or
pop
ins
and
or
dec
sbb
ror
iret
rcl
mov
popf
inc
inc
movhps
hlt
add
fisubr
push
and
aaa
push
push
rcr
lods
add
and
test
add
pop
popa
leave
mov
adc
or
and
or
pop
sub
pop
push
sub
(bad)
inc
dec
add
popa
pop
jns
sti
push
ret
lods
sub
cmp
jl
addr16
cs
sub
jnp
movzx
cmp
sti
test
outs
adc
and
xor
fld
sbb
lock
sub
jo
inc
dec
push
or
jb
cmp
ja
sub
sbb
ror
mov
adc
jbe
(bad)
ja
inc
mov
or
ja
in
mov
aaa
xor
inc
push
add
mov
mov
xchg
fs
pushf
adc
shr
rcl
aas
in
inc
adc
xchg
adc
adc
mov
mov
unpcklps
or
hlt
mov
loope
mov
jmp
les
loopne
pop
(bad)
add
fisubr
addr16
adc
xchg
add
clc
addr16
fsub
or
mov
outs
fld
js
push
and
push
fsubr
outs
dec
xchg
add
cmp
pop
dec
int3
inc
(bad)
add
hlt
mov
or
cmps
adc
lods
pusha
les
jbe
xor
loope
jmp
out
shr
sbb
jb
clc
jmp
sbb
pxor
sub
jmp
aaa
mov
arpl
xchg
stos
adc
jno
jmp
xor
popa
and
aaa
and
nop
push
(bad)
jo
xchg
xchg
in
sbb
cmp
inc
fst
sbb
pusha
mov
aaa
push
jle
cmps
push
cmp
xor
not
lea
js
lods
xor
adc
cmp
inc
mov
jle
mov
pop
dec
dec
xchg
xchg
icebp
mov
outs
imul
push
or
pop
mov
outs
sub
xchg
cmps
dec
test
fisub
cmova
in
out
cmp
fld
pop
ds
lar
adc
(bad)
fiadd
(bad)
or
ja
je
jns
mov
sub
fucom
or
imul
repnz
push
leave
sbb
sbb
(bad)
and
adc
lock
add
push
imul
dec
arpl
enter
popf
inc
xor
adc
add
movs
add
jmp
or
inc
fs
inc
outs
lea
sub
inc
lods
shr
sub
xchg
iret
jecxz
out
fild
cwde
aas
in
out
call
mov
mov
mov
xor
fild
cmp
ins
in
test
mov
pop
fadd
aaa
loop
retf
sub
sub
repnz
enter
enter
repnz
imul
cmp
les
push
(bad)
mov
xchg
jp
inc
jecxz
pop
in
sbb
inc
pop
add
(bad)
imul
test
loopne
popa
mov
push
xchg
mov
(bad)
stos
ds
stos
mov
xchg
jp
or
test
in
das
inc
add
test
imul
or
xchg
add
mov
in
xchg
clc
adc
cwde
aam
ror
paddusb
loopne
movs
aaa
out
sub
(bad)
sets
xor
test
add
add
inc
add
sbb
pusha
pop
or
pshufw
xlat
inc
mov
add
pop
sub
xlat
out
push
ret
push
cmova
xor
test
dec
cmp
clc
jae
clc
dec
(bad)
add
inc
call
mov
adc
enter
jo
jo
ret
add
adc
pushf
movs
stc
in
inc
or
test
sub
nop
ins
mov
inc
lahf
das
or
or
adc
dec
imul
out
mov
lods
mov
cld
je
mov
add
inc
cld
inc
enter
in
add
addr16
or
test
jmp
sub
enter
jmp
pop
jo
jo
call
cmp
std
jo
or
jmp
inc
popa
jg
leave
add
sub
mov
pop
fsubr
pop
cmp
fcom
sbb
ror
sub
out
call
call
mov
enter
adc
push
and
call
add
sbb
adc
lods
jb
sbb
sbb
lock
lock
out
xor
sbb
or
sbb
sub
mov
xchg
push
dec
aas
test
gs
ret
pop
and
xor
in
fs
dec
je
pop
adc
mov
xlat
dec
or
pushf
test
rol
lods
and
rol
ja
mov
dec
shl
xor
inc
pop
jp
mov
add
bswap
retf
inc
add
add
inc
(bad)
push
adc
pop
sub
in
(bad)
and
repz
ror
jb
repz
dec
mov
sub
idiv
add
nop
ret
nop
xlat
dec
mov
and
xlat
clc
sbb
or
and
adc
adc
push
adc
push
call
inc
sbb
icebp
rcl
hlt
(bad)
test
mov
xchg
scas
adc
add
movs
pusha
nop
inc
jns
repnz
pop
add
add
jb
sbb
push
mov
sub
shl
hlt
sbb
mov
ins
jl
icebp
adc
pop
dec
xchg
jl
cmps
mov
mov
or
mov
jmp
mov
shr
sbb
js
push
mov
ins
or
sbb
fist
jne
jmp
pop
adc
pop
sbb
popa
imul
ret
xor
out
dec
inc
mov
clc
mov
xchg
stos
pusha
fmul
mov
into
add
push
cmc
dec
push
inc
loop
mov
fisttp
loopne
leave
fisub
pop
adc
jne
push
out
push
mov
jnp
add
cmps
or
push
lahf
jle
(bad)
adc
jle
mov
sti
div
cmp
mov
ins
add
dec
jne
mov
xor
rol
das
cs
mov
add
addr16
cmps
mov
cmp
sub
add
adc
adc
cmp
pop
shr
pop
or
aaa
add
cmc
jno
ja
or
and
add
ret
pop
and
les
pop
dec
cld
adc
nop
and
sti
cld
mov
jo
cmp
das
cld
mov
push
clc
push
add
dec
jb
std
or
push
xchg
pop
in
cld
rol
pushf
cld
fadd
add
inc
or
cld
pop
fs
jns
and
stc
icebp
sub
adc
fcom
(bad)
pop
add
inc
pop
inc
push
pop
fisub
mov
and
pop
in
xchg
sbb
push
cld
fdivr
fmul
sub
jecxz
fld1
test
loopne
push
call
xchg
loopne
pop
jle
cmp
or
inc
cld
int3
jne
and
(bad)
mov
and
or
aas
adc
lods
je
addr16
and
addr16
test
shr
mov
adc
mov
inc
in
and
dec
lods
push
ins
hlt
push
mov
and
jne
dec
pusha
add
scas
rol
sub
inc
add
dec
lock
cld
sub
add
mov
out
popa
ret
jo
clc
adc
xchg
add
in
inc
mov
add
mov
xchg
mov
repnz
dec
dec
lock
xchg
adc
or
lock
test
fistp
(bad)
sub
pop
xchg
mov
add
add
xchg
call
hlt
xchg
xor
sub
xor
add
popa
or
dec
test
iret
jo
and
inc
push
pop
pop
push
add
cmp
cmp
or
mov
push
and
adc
test
sbb
iret
fadd
xchg
inc
or
cld
push
nop
pushf
sub
or
and
adc
dec
mov
push
push
inc
call
iret
stc
dec
push
add
push
or
inc
push
dec
inc
and
pop
mov
int
lods
sub
iret
stos
rcl
or
hlt
ror
popa
adc
inc
jae
push
add
jp
loope
sub
and
dec
pop
xor
out
test
push
iret
jl
stos
or
adc
pop
ret
and
push
repnz
push
mov
add
popa
or
test
push
iret
or
pop
sbb
add
cmovo
pop
sbb
into
mov
adc
xchg
leave
dec
dec
add
rcl
in
or
or
or
and
aam
xchg
pop
and
iret
adc
sti
mov
inc
cdq
dec
adc
push
sub
inc
test
adc
iret
scas
pusha
nop
mov
and
iret
mov
xchg
sbb
push
or
or
or
and
or
enter
or
in
stos
bound
test
adc
pop
or
loope
sub
loopne
test
and
add
adc
or
sbb
lock
mov
pushf
inc
mov
pop
sub
fsubr
sbb
pop
daa
or
outs
iret
adc
jb
in
call
repnz
dec
adc
pop
jl
push
add
pop
dec
js
add
and
push
inc
test
inc
push
loope
and
sbb
ror
inc
push
leave
test
inc
and
in
nop
adc
adc
push
jb
mov
push
push
enter
sub
push
adc
loopne
or
pop
loopne
test
test
and
add
adc
or
mov
inc
js
sbb
adc
adc
js
xchg
dec
jae
sub
mov
adc
add
ja
retf
mov
dec
(bad)
jne
test
je
les
int
pop
test
cmps
push
or
out
dec
inc
mov
adc
scas
rcr
sub
arpl
adc
xchg
adc
sbb
jb
mov
ror
pop
mov
inc
adc
push
add
or
inc
and
mov
icebp
add
adc
movs
xor
mov
push
and
out
bound
xchg
or
adc
mov
aad
mov
(bad)
cmp
cmp
push
pop
pop
sub
inc
leave
sbb
mov
dec
aas
dec
rol
mov
ret
xor
push
and
leave
and
mov
inc
leave
dec
pop
test
inc
add
and
lahf
cmps
xchg
or
pop
ret
inc
xor
and
adc
and
pop
and
loopne
xlat
mov
xchg
or
or
and
icebp
cwde
ja
xlat
les
mov
adc
push
xor
xlat
inc
xlat
ret
push
mov
sbb
test
sub
adc
add
les
add
test
push
div
adc
add
sub
and
adc
push
xor
adc
and
pushf
sti
jo
rcl
and
sub
inc
and
xchg
loope
mov
xor
dec
jne
xchg
pop
and
imul
jno
and
pop
mov
mov
pop
adc
mov
pop
adc
leave
in
mov
nop
pushf
in
jl
and
gs
dec
and
xchg
inc
push
inc
and
sub
sub
xor
rcl
pop
push
sub
push
push
lahf
jo
rcl
inc
push
lahf
and
xchg
jno
inc
ja
dec
or
aaa
jg
adc
scas
test
aaa
jg
sbb
push
inc
ja
sub
and
dec
test
mov
push
sub
push
and
or
inc
xor
out
cmp
xchg
lock
sub
sub
sub
shr
cmp
clc
sbb
mov
adc
and
add
xor
and
cmp
out
shl
sub
push
xor
out
cmp
dec
push
(bad)
cmp
loopne
out
xor
and
sub
dec
pop
ret
and
push
lods
add
(bad)
push
jb
cmp
jmp
jmp
fwait
ds
nop
mov
aas
dec
repnz
sub
fistp
aas
pushf
dec
xchg
pushf
adc
jns
jl
mov
and
xchg
xchg
pushf
and
sub
daa
inc
inc
es
mov
dec
ds
(bad)
ror
fs
cmp
sbb
repnz
and
xchg
pushf
in
cmp
jl
inc
inc
cdq
and
into
xchg
push
jb
mov
adc
leave
sub
rcr
lods
mov
add
inc
aas
xchg
sbb
cmps
outs
inc
lock
aas
es
xor
jne
adc
xor
es
mov
not
xor
or
cmps
xor
test
dec
dec
xor
sub
bound
int3
(bad)
(bad)
idiv
jae
pop
lea
dec
daa
xor
pop
pop
popf
adc
mov
pop
nop
inc
bound
dec
xlat
je
xchg
push
fs
(bad)
jno
xor
xchg
inc
sub
adc
push
leave
ins
and
push
jb
xlat
cmp
adc
add
push
cli
and
aam
or
cwde
cld
add
xlat
add
xlat
(bad)
repnz
or
add
and
push
adc
pop
mov
mov
inc
into
div
and
(bad)
aam
mov
dec
sbb
ret
add
mov
mov
sub
dec
hlt
not
mov
mul
(bad)
ins
loope
jne
add
mov
inc
dec
xchg
push
add
cmp
add
cmp
fdivr
test
push
pop
pop
push
add
cmp
and
dec
dec
lods
mov
(bad)
in
xor
(bad)
jmp
cmp
call
pushf
es
fadd
rcl
mov
cmp
or
or
push
jb
dec
dec
sub
aam
adc
pop
cmp
stos
cmp
loop
stos
xchg
pop
rcr
cmp
leave
mov
xchg
sub
or
stos
adc
dec
or
repnz
mov
dec
pop
loopne
mov
add
pop
ret
and
xor
push
inc
(bad)
ds
dec
jb
in
retf
mov
movs
add
pop
and
call
and
jb
cmovae
sbb
dec
add
jno
cmp
cmovo
and
mov
scas
nop
sub
add
lds
lea
in
movs
push
xchg
adc
add
inc
aas
pusha
in
xlat
call
or
inc
nop
das
daa
aaa
push
jb
nop
push
shr
(bad)
xchg
push
ds
shr
and
add
push
adc
in
adc
push
(bad)
or
sub
push
mov
clc
repz
and
adc
cwde
sbb
jb
and
add
inc
int
aam
adc
mov
push
inc
loopne
pop
xlat
and
leave
mov
cmp
js
nop
inc
movs
add
mov
cwde
movs
test
gs
das
dec
int3
pop
add
push
fbstp
xor
sub
fild
add
or
push
add
stos
mov
pop
(bad)
push
adc
je
or
xor
push
push
fild
test
movs
sub
and
xor
div
pop
out
inc
mov
mov
test
push
jecxz
movs
idiv
pop
in
adc
cmp
loop
repnz
dec
leave
dec
adc
dec
fcomp
adc
dec
hlt
mov
push
inc
mov
mov
pop
inc
call
xchg
pop
rol
or
shr
add
push
sub
xchg
stos
push
jmp
inc
jne
adc
xor
sahf
popa
fcom
cs
movs
das
dec
or
aas
jg
cmp
jl
push
je
or
push
inc
mov
mov
adc
mov
dec
cmp
cmp
jle
das
add
pushf
ror
shl
or
pop
jle
adc
pusha
mov
add
adc
retf
jmp
mov
(bad)
pop
add
jb
mov
cmc
test
js
pop
lahf
mov
or
cdq
daa
lahf
iret
add
fnclex
jbe
mov
pop
pop
adc
xchg
icebp
and
sub
add
jecxz
xor
adc
scas
mov
dec
(bad)
xchg
out
or
mov
add
mov
ins
add
loopne
test
clc
xor
repz
pop
add
sbb
push
and
push
lahf
inc
sub
enter
inc
dec
adc
lods
in
rol
jb
adc
dec
mov
pusha
adc
and
push
mov
rol
fsub
mov
cmps
pop
adc
or
scas
and
sbb
enter
pop
cmps
out
in
aaa
inc
adc
sub
ins
les
add
adc
addr16
push
enter
sub
adc
shr
bound
add
xchg
les
dec
ins
add
sub
or
cmp
xchg
mov
aaa
adc
add
sub
and
mov
adc
mov
add
sub
fadd
into
(bad)
fisub
and
enter
and
(bad)
es
push
xchg
add
dec
ret
xor
lea
sbb
scas
push
inc
or
iret
mov
lea
mov
adc
push
aam
inc
aas
ins
adc
mov
push
jb
out
mov
test
(bad)
in
fisttp
and
(bad)
ror
and
ror
mov
movaps
sub
loopne
mov
cmovs
xorps
mov
punpckhbw
mov
xor
adc
mov
mov
sub
mov
pop
cmc
add
or
fstp
sub
out
shr
xor
imul
or
adc
cmp
clc
cld
push
xor
mov
adc
(bad)
jae
xor
pushf
inc
inc
push
sbb
jp
add
imul
add
int3
push
mov
retf
adc
or
cld
sub
int
jb
add
adc
jne
jb
mov
adc
mov
mov
in
adc
mov
sbb
cmps
imul
jnp
sar
or
mov
mov
xor
jo
push
lods
jne
or
push
ins
xchg
adc
mov
adc
es
jg
jecxz
and
push
or
shl
push
idiv
xor
and
inc
inc
punpckhbw
inc
add
es
sbb
mov
pop
sub
sub
sub
xchg
push
or
dec
into
loopne
inc
daa
inc
and
daa
int
or
push
pop
je
push
cmp
sbb
dec
cmp
outs
pop
inc
outs
psubd
movd
inc
sbb
out
xlat
add
pop
adc
mov
add
add
in
pop
adc
xchg
sbb
inc
mov
pop
or
mov
push
jle
cmovbe
stos
add
(bad)
iret
push
add
fimul
cmp
pop
loopne
ds
jb
adc
(bad)
out
das
sub
adc
and
inc
lods
xchg
push
cwde
out
xor
adc
sbb
or
mov
or
aas
mov
loopne
dec
add
or
shl
cwde
loope
add
ja
rcl
and
mov
add
xor
imul
xor
test
jae
call
rcr
jmp
(bad)
jne
call
test
out
mov
mov
je
loopne
iret
icebp
mov
add
cs
ja
test
dec
push
mov
inc
jo
xor
add
pop
or
packuswb
jbe
jbe
or
es
inc
jns
ja
jp
mov
inc
sahf
pushf
out
sub
mov
push
jns
js
xchg
xchg
daa
daa
loop
jp
leave
enter
out
inc
jnp
in
in
xlat
pop
jl
pop
repnz
in
mov
jb
xor
shl
into
ins
jnp
jle
shufps
test
(bad)
pop
and
sub
punpckhdq
push
add
cs
jg
stos
sbb
das
in
mov
xchg
dec
or
sub
push
adc
test
or
adc
xchg
xor
cmp
add
adc
adc
or
pop
stos
dec
scas
ins
push
push
add
or
mov
jo
xchg
mov
sub
mov
out
ins
add
adc
and
xchg
das
cmp
push
push
xchg
fwait
movs
daa
rol
bound
mov
push
xchg
adc
sub
add
xchg
push
or
or
add
pop
scas
jl
mov
jae
enter
inc
mov
sub
gs
push
fsub
xchg
xchg
mov
aas
adc
test
lods
das
scas
or
add
shr
inc
rol
xor
push
fsub
das
add
aad
icebp
pop
push
mov
inc
in
lds
jg
dec
push
xor
add
stos
sub
imul
mov
mov
push
add
inc
adc
xor
in
jge
inc
add
in
adc
or
pusha
jns
pop
and
adc
in
or
enter
xlat
mov
jo
add
hlt
dec
pop
mov
jb
mov
inc
inc
in
hlt
sub
pop
in
out
add
cwde
adc
add
sub
sbb
pop
ror
and
sbb
movs
daa
imul
call
ins
or
mov
jo
dec
je
push
or
push
movs
sub
inc
push
cmp
aam
popa
xor
adc
inc
and
cmp
ss
adc
xchg
adc
sub
pop
sub
mov
dec
pop
call
lods
mov
and
sbb
das
inc
xlat
sbb
add
sbb
test
cwde
shr
in
lods
int3
or
rol
adc
retf
adc
pop
mov
repz
shr
xor
mov
f2xm1
xchg
aaa
pop
aad
sub
test
popf
mov
xlat
das
cwde
rcr
test
sub
adc
ja
cmp
mov
test
cs
inc
test
or
cmp
pop
scas
or
xchg
rol
mov
mov
ins
inc
stos
loopne
add
pop
pop
(bad)
leave
add
mov
sub
enter
push
inc
sub
fld
pop
outs
sub
push
push
mov
das
cwde
rcr
sub
mov
xor
cmp
out
mov
inc
shl
fmul
mov
cmp
xlat
xlat
rol
sub
pushf
rol
(bad)
in
sub
dec
mov
daa
mov
or
test
repnz
jp
test
cmp
int
mov
das
mov
scas
stc
inc
mov
dec
inc
xchg
mov
daa
daa
and
out
and
lea
add
daa
dec
jo
in
in
int
(bad)
push
mov
repnz
mov
or
push
sti
test
(bad)
or
ja
cmp
fimul
push
push
adc
adc
test
aam
dec
enter
or
add
jno
sub
cmp
mov
inc
xor
shl
xor
pusha
xor
loopne
ins
push
in
cmp
cdq
test
adc
cs
jns
xor
jo
xor
xchg
push
sub
das
jp
add
fwait
ins
sub
cmp
and
add
mov
adc
adc
mov
mov
test
add
push
mov
or
inc
(bad)
shr
fmul
jns
xchg
cmp
and
test
loopne
sub
sub
sub
sub
sub
rol
sub
cmp
sbb
sub
xchg
shl
adc
clc
in
inc
adc
sub
push
push
cmp
mov
mov
xor
ins
push
dec
or
or
jbe
adc
dec
mov
rol
jno
xchg
jg
or
dec
inc
sar
push
xor
pusha
add
sub
rol
rol
lea
ins
aas
lds
push
mov
inc
pop
(bad)
and
or
push
(bad)
es
aas
push
xchg
add
das
out
xchg
fisttp
pop
push
adc
xchg
push
sub
ins
stc
mov
icebp
push
xchg
and
ins
(bad)
sar
push
sub
int
ins
les
retf
sbb
test
mov
(bad)
pop
les
mov
inc
ins
mov
pop
(bad)
mov
jmp
dec
sbb
xchg
inc
dec
test
(bad)
(bad)
je
mov
push
ror
jp
es
add
adc
inc
lods
cs
jmp
call
mov
xchg
daa
sub
mov
cmp
pushf
mov
pop
or
das
add
ins
add
xor
pop
pop
cmp
cmps
jbe
shl
push
icebp
xchg
or
push
out
loopne
lds
jl
in
movs
xchg
push
add
cdq
das
pop
call
add
pop
mov
clc
icebp
cmp
mov
cmp
xchg
xchg
adc
dec
mov
sub
and
sub
inc
enter
call
leave
fst
fwait
dec
cmp
sbb
mov
and
loop
leave
leave
pusha
pushf
loopne
popf
xchg
xchg
pop
add
shufps
mov
les
sahf
push
push
aad
xchg
xchg
daa
and
enter
mov
leave
leave
mov
xchg
xchg
pop
add
mov
enter
xchg
xchg
pop
jg
or
dec
mov
ja
fimul
(bad)
push
mov
lea
test
xor
popa
dec
cmp
cwde
pop
sub
pop
out
xchg
inc
jbe
cmp
xchg
add
xor
in
cmp
iret
popa
and
cmp
popa
je
jp
inc
shl
(bad)
aad
and
mov
les
outs
loope
xchg
adc
or
jbe
sbb
sbb
push
adc
mov
aaa
adc
sub
sbb
xchg
jmp
popa
call
pop
xor
mov
popa
inc
mov
or
xchg
popa
ins
lds
popa
dec
sub
adc
push
fisttp
(bad)
pop
popa
cmps
mov
jae
popa
xchg
pusha
inc
gs
lods
dec
lea
add
bound
jae
(bad)
push
add
popa
xchg
pusha
popa
mov
movs
popa
cmp
dec
mov
add
scas
and
jnp
push
fisttp
popa
call
test
dec
test
pushf
sbb
popa
cmp
mov
add
clc
push
pushf
popa
cwde
fadd
aad
cmp
aad
cmp
fwait
popa
adc
mov
cmp
(bad)
jns
add
nop
fld
jne
add
mov
mov
jmp
popa
cmp
xor
mov
inc
fcmovb
cmc
mov
xchg
fisub
es
cmp
pop
or
xchg
and
xor
int3
jp
add
lahf
xchg
mov
(bad)
aam
ror
cmp
cmp
xchg
sub
push
and
movs
mov
call
xor
cmp
test
pop
dec
mov
(bad)
mov
jo
add
and
sub
or
mov
(bad)
enter
mov
mov
inc
mov
mov
adc
test
push
das
outs
cmps
xchg
xchg
pop
sar
cmps
push
test
or
mov
jmp
mov
inc
lock
inc
call
mov
pop
add
test
inc
mov
retf
inc
hlt
test
dec
inc
or
cmp
test
mov
xchg
mov
test
out
ror
mov
cld
lods
mov
sbb
out
das
add
fstp
push
test
nop
dec
pop
das
cmc
sub
mov
or
or
shr
in
jmp
arpl
inc
push
and
fmul
stos
adc
stos
mov
mov
and
mov
leave
add
lods
in
fs
dec
lds
out
les
mov
fimul
dec
lods
das
mov
std
(bad)
ja
or
inc
jbe
mov
das
movs
add
vpmacssdqh
jns
movs
in
movs
inc
lock
cmp
and
scas
mov
outs
popf
xchg
inc
jge
movs
scas
mov
scas
and
scas
jle
retf
dec
xchg
sub
xor
leave
leave
mov
cmc
in
mov
and
btr
adc
daa
pop
xchg
retf
xchg
xchg
xchg
mov
js
jne
fist
cpuid
inc
cmp
pop
add
sub
mov
adc
inc
rcl
es
mov
pop
dec
enter
movs
rol
adc
rcl
pusha
push
jne
inc
imul
(bad)
rol
retf
shl
pop
enter
inc
xchg
adc
adc
ins
or
mov
mov
outs
pop
adc
test
lds
rol
mov
mov
loopne
rcl
push
shl
(bad)
inc
mov
cmc
mov
rcr
pop
inc
or
outs
popf
sub
or
test
add
mov
sub
push
mov
ins
cmp
sbb
inc
unpckhps
sub
mov
add
inc
call
adc
and
adc
jg
mov
and
add
vsubpd
add
cmp
test
sub
fiadd
imul
xor
mov
bound
sub
or
add
push
test
add
or
jns
add
add
sub
mov
or
xlat
push
adc
inc
loopne
add
dec
sub
mov
pop
add
inc
mov
in
popa
xchg
mov
nop
aaa
add
jns
push
and
add
(bad)
loop
lea
and
push
xchg
clc
dec
sbb
dec
inc
inc
call
movs
in
movs
add
adc
mov
bound
stc
add
and
dec
adc
mov
xor
adc
push
xor
mov
add
mov
clc
mov
or
rol
jmp
add
adc
int
xor
and
add
mov
xor
add
xor
les
xor
mov
or
sahf
sub
or
cmp
pop
adc
das
(bad)
cld
(bad)
call
push
lods
xchg
dec
(bad)
in
retf
push
scas
xor
push
lods
push
ret
sub
mov
movs
dec
dec
nop
mov
push
retf
dec
lock
and
nop
mov
or
mov
cmp
idiv
lds
bound
mov
out
loopne
lock
das
pop
shl
addr16
dec
data16
imul
shl
dec
bound
mov
dec
push
and
mov
cld
mov
mov
ja
shl
pmaxub
in
cmp
ret
sbb
jecxz
ret
movaps
mov
cmp
inc
sahf
pushf
pushf
retf
out
and
pop
push
dec
dec
dec
movs
fisub
xor
push
lock
leave
leave
sub
cmps
in
in
int3
add
cmp
shl
leave
inc
(bad)
jp
jb
out
retf
mov
daa
in
fimul
jmp
test
push
xchg
or
adc
in
retf
xor
or
(bad)
mov
xchg
in
sbb
xor
in
and
dec
sbb
and
test
xchg
icebp
xor
daa
lods
mov
push
adc
adc
sub
mov
mov
cmc
adc
xor
fwait
push
push
repnz
retf
mov
xor
sub
lods
xor
cmp
push
or
ss
push
push
or
lods
push
or
or
retf
inc
add
pusha
and
inc
enter
fucomp
retf
out
cmp
cmps
adc
add
adc
fnstsw
fisttp
fucomp
retf
mov
and
jns
or
test
jmp
pushf
nop
retf
mov
ror
(bad)
fld
dec
mov
mov
ss
dec
fst
or
test
imul
and
push
outs
sbb
retf
lahf
mov
xchg
retf
repnz
xor
test
je
jns
mov
mov
sbb
pop
jns
in
adc
psrld
cmp
ins
mul
(bad)
and
pop
lods
das
retf
in
push
mov
int3
dec
int
jo
in
int
jmp
mov
(bad)
aam
aad
adc
int
mov
adc
push
mov
pop
mov
int3
mov
sbb
adc
jmp
cmp
and
pop
(bad)
jp
outs
lock
sub
push
das
ins
iret
iret
jmp
pop
cld
push
outs
push
shr
fmul
jle
ret
iret
iret
and
push
call
push
rcl
and
out
nop
add
mov
xor
call
inc
lea
out
mov
push
lahf
mov
inc
shr
dec
lds
push
jo
test
out
nop
out
push
pop
shr
mov
cmps
xchg
xlat
mov
push
aas
in
data16
push
dec
clc
sub
mov
cmps
lock
push
sub
jmp
jns
push
fsubr
hlt
and
inc
enter
enter
(bad)
call
rol
rcl
das
aas
cmps
mov
enter
pushf
pushf
fdiv
out
(bad)
scas
jmp
(bad)
shufps
pop
(bad)
inc
rcl
xor
in
imul
fmul
jb
jb
(bad)
neg
fnstcw
cmp
sbb
scas
sti
pushf
pushf
mov
test
fistp
xchg
mov
fdiv
adc
or
cmps
inc
xchg
ins
fadd
bound
ret
or
adc
retf
jno
mov
push
xchg
in
inc
and
sbb
cmp
sub
push
push
inc
mov
xchg
std
ins
push
mov
adc
cdq
xchg
adc
in
xchg
pop
shr
dec
jmp
inc
push
fimul
xchg
push
add
add
xchg
pop
and
das
xchg
fwait
mov
adc
xchg
add
mov
cmp
xchg
iret
pop
mov
xchg
jno
or
xchg
ins
fmul
or
inc
mov
ins
fmul
dec
enter
adc
inc
ja
(bad)
lock
sbb
inc
sbb
ret
(bad)
ins
inc
push
aad
fdivr
inc
xchg
mov
xor
aam
pop
fmul
jns
jmp
les
pusha
push
mov
mov
jmp
adc
das
sbb
fdiv
dec
push
and
xor
mov
test
adc
xchg
dec
jb
dec
shr
fmul
sub
pop
cmp
dec
push
mov
push
test
inc
hlt
in
iret
inc
ins
sub
or
(bad)
jmp
jo
in
dec
aaa
add
lea
jne
mov
out
frstor
(bad)
fsub
fisttp
push
jmp
add
push
mov
aaa
add
lock
sbb
jmp
(bad)
int
adc
jns
jo
neg
cmp
and
popa
push
nop
psubw
fdivp
pop
shr
or
sbb
neg
lock
movs
rcr
fld
loope
int3
das
jmp
xor
call
loope
out
or
hlt
cmp
retf
cwde
movs
imul
cs
div
sub
retf
xchg
movs
loopne
pop
jo
test
or
in
loope
repz
xor
loop
nop
jmp
movs
daa
cmp
jp
test
xor
inc
mov
imul
jecxz
or
fbld
cwde
movs
idiv
adc
daa
pop
jmp
sti
add
sbb
jo
test
pop
imul
push
mov
repnz
add
jg
pop
jne
pmulhuw
xor
neg
and
cmp
lods
add
jns
in
mov
fcmovbe
in
loopne
xlat
ja
cmps
loop
in
inc
push
or
pop
push
push
cld
lods
mov
das
pop
out
sbb
out
inc
add
push
aam
inc
clc
push
faddp
jmp
idiv
mov
fld
(bad)
mov
fs
dec
ds
inc
add
and
nop
ins
loope
out
pop
out
xchg
mov
repnz
and
pusha
call
pushf
pushf
mov
(bad)
dec
dec
inc
sahf
adc
pop
lods
rcr
adc
dec
add
dec
add
push
xchg
daa
daa
mov
lahf
out
in
xchg
xchg
xchg
xchg
pop
mov
rcl
dec
setae
pop
add
leave
hlt
sbb
xchg
paddd
xchg
xchg
cwde
hlt
push
lock
push
lock
mov
and
lock
mov
pop
neg
or
rol
push
adc
xchg
or
loop
dec
or
ffree
inc
inc
pushf
pop
jno
test
add
adc
aam
xchg
add
inc
retf
or
adc
push
or
xchg
inc
adc
xor
lds
cs
or
adc
loope
add
nop
sub
xchg
xor
adc
mov
add
jo
das
xchg
inc
add
add
movntps
sbb
xchg
fwait
add
loop
push
add
add
das
or
adc
daa
pop
loop
or
adc
adc
add
in
test
inc
add
mov
xchg
retf
sub
push
cwde
movs
neg
or
scas
cmp
cmp
icebp
add
push
and
xchg
push
dec
add
loopne
jg
add
nop
push
jmp
adc
adc
das
cmp
mov
dec
jmp
or
inc
stos
sbb
add
adc
push
adc
jmp
das
push
popa
xchg
cmp
icebp
pop
or
pusha
jmp
adc
jns
pop
and
adc
jmp
sbb
or
xlat
sub
movs
add
adc
pop
das
mov
in
in
adc
add
sub
inc
neg
ret
dec
test
icebp
sbb
mov
xor
mov
in
or
cmps
lods
stos
dec
push
add
push
push
xchg
pop
xchg
(bad)
div
sbb
lahf
test
js
mov
push
mov
enter
adc
sub
(bad)
test
inc
xlat
lock
arpl
and
or
call
cmc
repnz
mov
cld
push
or
sub
push
addr16
sbb
ror
fs
inc
(bad)
pop
sub
cmp
add
jo
fnsave
dec
mov
hlt
cli
inc
icebp
push
lea
push
pop
adc
test
pop
push
data16
adc
adc
xchg
pop
ja
popa
sti
pop
xor
inc
add
add
xor
mov
xchg
outs
ins
fst
popa
and
inc
loope
iret
mov
xor
aaa
pusha
hlt
arpl
sbb
in
push
jo
fcomip
cmc
pop
stos
mov
ss
push
cmc
aaa
out
dec
rdtsc
cmc
std
arpl
stos
rol
or
and
or
sub
aam
lldt
and
rol
rol
and
repz
lock
mov
call
pop
int
sbb
in
hlt
out
ins
(bad)
(bad)
pushf
test
pop
test
(bad)
(bad)
inc
rol
mov
aam
mov
push
push
xor
pop
push
mov
sub
pop
imul
sqrtps
add
sub
mov
lods
scas
add
adc
clc
scas
mov
adc
pop
int
rol
int
adc
and
pop
adc
pusha
loope
mov
inc
stos
and
and
aad
pop
clc
mov
(bad)
xchg
or
inc
nop
mov
ret
loope
scas
mov
outs
jns
push
or
imul
or
ds
mov
add
or
les
rcl
push
jns
cmps
push
mov
mov
sbb
repnz
push
fisttp
push
int3
stc
pop
push
sti
pop
dec
cli
divps
xor
mov
cli
aaa
loopne
add
mov
xchg
inc
test
xor
rcl
push
push
add
fnstsw
push
mov
and
inc
add
movmskps
inc
aad
inc
aad
or
or
sbb
add
ret
mov
inc
jp
cld
xchg
pop
or
clc
add
sub
mov
dec
inc
add
psubusb
cmp
pop
jg
cld
(bad)
rol
leave
retf
mov
push
fadd
mov
mov
pop
retf
nop
std
inc
adc
adc
add
or
int
mov
adc
pop
pop
retf
retf
mov
xor
retf
scas
pop
cmp
das
int
jmp
mov
mov
adc
test
loope
(bad)
pop
ins
jge
inc
aad
sub
and
xor
xchg
add
push
xchg
out
push
add
stc
inc
cmp
iret
and
sahf
stos
out
fwait
shl
mov
js
lfs
sar
iret
jno
aas
loopne
(bad)
mov
outs
jle
sub
xchg
add
dec
pop
add
jo
jo
and
in
jo
cwde
(bad)
pop
sti
sub
inc
mov
inc
mov
retf
lods
in
sbb
stos
mov
ret
fld
inc
lahf
hlt
add
sbb
jns
ins
das
mov
or
xchg
hlt
mov
mov
inc
sbb
inc
xchg
add
stos
nop
adc
pushf
mov
inc
and
pop
enter
add
xor
hlt
dec
adc
or
push
lds
pusha
(bad)
adc
adc
push
inc
inc
xchg
push
pop
push
mov
js
jns
lods
in
inc
mov
add
or
mov
bound
push
jne
stos
add
push
mov
add
mov
and
push
add
jbe
stos
pop
adc
pop
adc
mov
cmps
xlat
pop
pushf
fild
jmp
xor
pop
and
pop
and
stc
dec
pop
and
add
xchg
inc
leave
and
push
test
sbb
rol
push
add
or
add
push
mov
or
pop
mov
out
mov
pop
cmp
loope
cmp
fs
nop
repnz
ja
repnz
and
jne
loope
xor
test
pop
mov
or
cwde
inc
loopne
pop
sub
loopne
fs
mov
add
add
add
nop
pop
mov
and
adc
rcl
pop
int
sbb
jnp
add
jns
add
xor
adc
add
inc
adc
or
push
lds
sub
dec
mov
sti
aas
into
repz
scas
mov
mov
nop
push
add
jle
push
push
adc
or
in
add
aam
mov
cmps
in
mov
aaa
loopne
or
add
ins
inc
in
sbb
lds
push
lea
leave
sub
dec
or
je
adc
shl
cmps
or
add
pop
(bad)
aad
add
rcr
ror
xlat
jl
nop
mov
add
jle
xchg
push
(bad)
pop
push
pop
xlat
or
pop
pop
jmp
nop
adc
js
loopne
in
or
or
add
int
xor
scas
sub
xor
sub
in
pop
lods
mov
push
mov
nop
mov
and
out
xchg
add
adc
mov
test
pop
or
adc
js
jns
rcl
pop
cmovbe
push
pushf
and
adc
aas
pop
orps
repz
aas
jne
xor
jl
inc
adc
mov
(bad)
xor
pop
or
cvtpi2ps
adc
adc
fcomp
mov
push
push
jne
jns
add
add
in
ja
(bad)
push
push
arpl
addr16
sbb
ror
adc
or
xor
add
inc
mov
test
loope
and
pop
sub
add
adc
add
mov
loopne
mov
out
adc
scas
adc
mov
aam
xchg
das
lock
scas
ja
ficom
pop
adc
shr
jo
push
movs
pop
out
mov
sbb
adc
push
add
push
mov
mov
aaa
or
push
add
out
sub
and
pop
out
pop
adc
test
inc
adc
pop
xor
mov
mov
pop
les
push
mov
dec
xor
adc
xchg
sbb
push
mov
jge
xchg
into
repz
xchg
jno
pushf
test
push
push
int3
into
dec
xlat
lods
adc
sub
cmovp
fs
clc
xor
aas
sbb
xor
pusha
in
mov
sub
sub
push
repnz
add
adc
adc
inc
rol
xchg
jnp
loopne
enter
sbb
sub
loopne
sbb
(bad)
dec
ret
movs
xchg
xchg
xchg
push
(bad)
adc
jnp
neg
or
and
xchg
cmp
pusha
cmp
or
sub
js
cmp
scas
add
out
movs
test
retf
mov
xchg
pop
sbb
push
and
loopne
or
test
adc
and
push
inc
test
xchg
xor
inc
cmp
add
add
inc
aas
and
push
push
push
adc
call
scas
aam
into
repz
mov
add
sbb
push
ins
mov
aam
pop
pop
sbb
inc
add
in
push
sbb
jb
xor
sbb
lods
stos
aas
gs
add
int3
loopne
adc
adc
push
leave
cmp
adc
mov
ins
les
push
or
pusha
or
mov
sbb
outs
xchg
push
call
sbb
pop
je
pop
rcl
es
outs
push
in
push
sbb
aas
xchg
add
inc
add
add
sub
popa
test
inc
mov
add
pusha
push
xor
sti
retf
add
sub
push
lock
xchg
aad
and
cdq
hlt
push
aas
push
test
adc
jns
pop
or
add
or
adc
cwde
pop
xchg
xchg
or
and
push
sub
xor
adc
out
xchg
rcl
push
push
and
clc
and
shl
out
and
fdivr
loopne
xor
out
shrd
inc
adc
xchg
xor
push
xchg
mov
ins
movs
push
and
ins
movs
hlt
and
dec
pop
mov
mov
and
int3
and
push
adc
js
out
and
jl
and
add
pop
sbb
push
or
jp
add
test
and
xor
pop
cmp
mov
je
push
inc
or
pop
sub
loopne
mov
aam
add
or
adc
call
sub
movs
retf
js
test
retf
pop
rol
clc
and
popa
push
mov
aam
xchg
xchg
jo
mov
jmp
(bad)
jecxz
xor
jo
and
sbb
mov
push
lock
es
push
push
pop
cmp
dec
push
pop
mov
push
js
addr16
daa
pop
pminsw
(bad)
daa
push
daa
dec
cmp
add
test
ins
lfs
inc
mov
gs
cmps
xor
fs
or
or
or
and
and
mov
and
mov
and
sbb
push
inc
int
es
adc
movs
sub
push
pusha
push
das
into
sub
mov
xor
pop
push
mov
xchg
das
mov
sub
or
or
pushf
sub
xor
sub
add
or
pop
fs
ret
int
inc
add
mov
and
push
dec
test
shr
mov
dec
cwde
mov
adc
xchg
inc
lods
loopne
inc
adc
mov
jns
fs
add
rol
inc
imul
idiv
cmps
push
mov
call
rol
cmps
fldcw
sub
(bad)
sub
sub
(bad)
push
jo
pop
lock
paddw
pop
pop
cmps
sbb
dec
xor
push
lods
rol
push
add
or
addr16
adc
dec
pop
cmp
dec
push
xor
mov
add
adc
xchg
mov
push
xor
fs
jg
das
das
hlt
dec
adc
ret
inc
enter
int3
int3
les
add
clc
push
and
xchg
cs
das
and
xchg
int3
jno
add
xchg
sbb
int
mov
add
pop
and
jno
or
(bad)
jp
lds
pop
mov
add
pop
les
dec
inc
or
and
inc
xor
push
mov
sub
jae
adc
adc
loopne
sbb
push
out
icebp
jns
loopne
sar
xor
sti
sub
xor
mov
pop
mov
stos
xor
add
aam
out
xor
xor
xor
rol
pusha
aam
shl
sub
sbb
call
inc
and
in
call
test
lds
(bad)
xor
xchg
push
ja
movs
cwde
movs
mov
or
mov
pop
inc
xor
loopne
mov
xor
out
xor
pop
pop
and
push
in
adc
push
enter
pop
xor
push
adc
fnstenv
xchg
pushf
stos
xchg
xchg
xor
mov
add
mov
pusha
inc
or
mov
ja
push
inc
and
pusha
ins
loope
mov
test
pop
push
ja
stos
add
add
sub
push
loopne
push
xchg
lock
lock
xor
xchg
add
adc
ss
jo
xlat
cs
mov
mov
pop
mov
lea
push
lahf
push
cmc
or
xchg
enter
in
push
ins
jg
fiadd
push
aaa
push
fdiv
scas
cmp
mov
movsx
(bad)
and
add
mov
push
enter
push
mov
add
push
je
inc
lods
push
cld
cmps
jge
jnp
push
cmp
push
jo
push
jl
push
sub
or
pop
inc
aaa
sub
scas
inc
(bad)
push
push
adc
sub
movlps
inc
mov
add
hlt
jne
mov
add
push
adc
jne
push
ja
pop
mov
xchg
xor
pop
daa
mov
or
sbb
test
mov
dec
add
sbb
and
push
adc
enter
adc
das
xor
out
fbld
test
nop
nop
cmp
ror
xchg
cs
sub
sar
jb
fld
loopne
jnp
in
outs
into
ds
je
inc
jns
push
push
push
push
outs
push
pop
cwde
jae
outs
rcpps
pop
vmptrst
xor
inc
ins
neg
je
(bad)
sbb
or
jnp
or
pop
adc
or
aas
add
sub
or
push
add
lea
cmp
sbb
push
dec
sub
or
or
nop
push
hlt
imul
or
or
shr
mov
shl
cld
mov
xor
mov
push
pop
arpl
adc
cmp
fdivr
mov
mov
push
aam
je
xor
pop
sbb
jne
pusha
or
sbb
imul
mov
or
sbb
xor
popa
jae
ins
btc
adc
adc
ins
mov
jo
dec
sbb
push
mov
mov
gs
push
cmp
adc
cmp
mov
les
loopne
rcr
push
pop
or
push
ins
add
push
fs
gs
pop
mov
jb
gs
dec
jne
or
jae
ins
pop
cwde
(bad)
xlat
and
movs
push
or
jae
sbb
add
push
and
mov
clc
jae
or
dec
in
inc
jne
mov
adc
je
popaw
or
lods
mov
push
cmps
dec
mov
xor
mov
mov
add
dec
cmp
aam
push
in
pusha
ins
rcl
fnsave
arpl
popa
dec
enter
xor
cmp
mov
inc
ss
mov
popf
(bad)
mov
out
push
add
inc
or
es
inc
jno
mov
scas
dec
adc
add
cmp
xchg
jo
dec
pop
ins
stos
and
pop
ror
push
cwde
cmp
sub
push
out
sahf
lods
xor
inc
fnsave
pop
adc
xor
adc
aas
in
aam
xchg
cdq
or
stos
adc
xor
js
lds
pop
inc
mov
ins
xor
in
add
add
inc
je
imul
fsubr
fidiv
push
or
call
lea
inc
js
ja
inc
sbb
push
mov
cmps
jbe
push
adc
ins
je
adc
jns
or
inc
(bad)
dec
add
daa
pop
fs
mov
pop
and
fldcw
or
adc
jb
adc
or
jne
pop
sub
(bad)
sub
bound
adc
or
pop
mov
add
inc
pop
add
enter
jle
lahf
out
loop
sbb
rol
je
pop
(bad)
mov
inc
sub
pushf
cmp
or
push
and
enter
sub
dec
add
int3
adc
add
iret
pushf
pop
sbb
jl
adc
push
jg
js
mov
and
fsubr
xchg
or
pop
shl
cmp
xor
enter
cmp
out
pop
adc
add
data16
je
or
add
or
cmp
pusha
je
ins
xchg
clc
add
aas
pushw
out
jmp
imul
mov
push
imul
imul
or
or
nop
xor
sub
sub
enter
inc
add
push
adc
std
outs
mov
(bad)
sbb
push
adc
xor
iret
pxor
lea
add
pop
rcr
fist
nop
mov
getsec
cmp
bound
inc
or
pusha
xor
push
lock
sub
push
inc
xor
dec
pop
inc
adc
xor
adc
pop
add
mov
icebp
sbb
mov
mov
(bad)
cmp
mov
cmp
clc
out
test
push
sahf
js
jge
mov
ret
sub
inc
aas
push
pushf
push
inc
aas
mov
inc
aas
or
imul
icebp
push
cdq
or
and
sub
adc
pop
or
inc
lahf
in
in
add
push
cmp
ins
je
add
sahf
aaa
add
or
dec
or
paddusw
sub
pop
push
jb
je
inc
lds
add
adc
xor
popf
scas
or
aaa
and
shl
aad
inc
jno
inc
dec
pop
bound
adc
aaa
mov
sub
sub
and
enter
and
pop
inc
dec
adc
in
push
lock
dec
push
adc
pop
add
add
add
jo
sub
imul
mov
nop
ins
sub
test
adc
adc
push
prefetchwt1
or
std
or
test
aam
in
aam
and
xlat
lock
in
xor
bsf
sub
xor
and
test
xchg
ja
js
push
inc
mov
and
and
mov
test
or
push
add
std
call
add
mov
cwde
or
gs
push
and
or
push
loopne
imul
xchg
lock
xor
loop
sti
mov
jns
dec
jmp
dec
inc
mov
or
rol
sub
rol
xchg
dec
sti
fs
or
inc
scas
cmp
es
add
cmovl
add
cmp
push
pop
cmp
mov
loop
or
inc
or
xchg
ins
pop
sbb
jno
enter
push
mov
add
cdq
or
jmp
in
ins
jo
sbb
in
dec
(bad)
jo
or
add
adc
enter
adc
sbb
scas
das
jns
cmc
add
sbb
ret
sub
inc
add
lods
pop
pusha
or
and
push
push
outs
imul
mov
outs
std
add
or
and
movs
outs
inc
or
int3
inc
imul
loope
or
jmp
stc
or
mov
mov
sbb
inc
add
cmps
rol
adc
dec
jge
(bad)
in
adc
sbb
or
loopne
adc
xor
push
lock
xor
xor
xor
xchg
call
xchg
xchg
mov
pop
stos
pop
jbe
in
dec
xor
and
shl
das
lds
inc
jns
int
pop
inc
mov
cvtdq2ps
lock
jmp
in
pop
pusha
test
outs
arpl
les
sar
mul
or
push
lods
inc
loope
adc
or
cmps
adc
pop
out
mov
pusha
and
popf
xor
xor
or
aam
jecxz
add
popf
(bad)
cmp
or
(bad)
fs
add
fcomp
call
cdq
and
rol
jle
aad
jb
lock
cmp
add
fist
add
xchg
mov
add
xor
shl
xchg
add
xor
in
dec
pop
mov
add
push
xchg
jbe
pop
sbb
(bad)
das
pop
and
sbb
das
popf
push
sub
lds
lea
jb
mov
push
cdq
ret
test
pop
or
mov
adc
cmp
jne
and
and
retf
adc
pop
jae
sbb
cmps
pop
sbb
push
push
aaa
sbb
mov
dec
fstp
nop
or
in
mul
or
or
ror
and
sbb
dec
js
push
and
adc
inc
pop
sub
xchg
clc
jns
jo
inc
xchg
cwde
js
imul
inc
enter
inc
or
inc
or
fiadd
push
inc
sti
push
mov
or
iret
pop
sub
lock
cmps
inc
add
jo
pop
add
clc
pop
fmul
fisubr
pop
inc
pop
adc
sbb
push
aas
xlat
pop
xor
shl
adc
mov
pop
mov
gs
dec
push
ins
rol
cmp
movs
push
add
fstp
mov
mov
push
push
add
ret
push
mov
inc
lea
enter
push
cmp
mov
dec
ja
adc
jp
stos
nop
rol
pop
sahf
inc
pop
adc
aaa
test
mov
das
add
xor
mov
push
sbb
add
add
inc
mov
enter
cmp
jg
push
enter
add
push
push
dec
xchg
and
mov
out
enter
jg
adc
push
nop
or
adc
and
ret
daa
sbb
push
in
fdivr
sbb
(bad)
xor
push
jmp
inc
jno
dec
inc
call
cmps
pop
ret
xor
ret
sub
ins
lods
cmps
push
sbb
mov
jle
or
sbb
push
xor
out
sbb
fld
inc
mov
iret
cdq
add
sbb
les
xchg
mov
xlat
adc
add
jp
clc
adc
pop
adc
add
adc
dec
add
add
aas
dec
dec
jo
push
xchg
clc
add
dec
add
mov
dec
jge
jns
add
sub
ds
ja
test
sti
mov
xchg
push
cmp
push
pop
cli
pop
ja
out
push
into
popa
daa
mov
addr16
div
jmp
pop
sub
pop
jl
cmp
pop
call
mov
mov
in
aaa
dec
jmp
jnp
aam
sbb
inc
pop
in
mov
add
test
dec
aaa
xor
mov
pop
jne
lahf
je
and
pop
cmp
push
and
ss
dec
pop
pusha
mov
sar
lock
xor
aad
sub
or
sbb
xchg
movs
aaa
pop
or
gs
call
or
in
movs
call
out
mov
jle
imul
pop
adc
inc
jmp
jecxz
cmp
dec
daa
jae
adc
add
sub
gs
jmp
inc
fadd
aam
rcr
loopne
lea
popf
adc
addr16
popf
or
lds
inc
shl
xchg
inc
in
lea
psubsb
mov
or
dec
mov
shl
jle
and
adc
int
ja
sbb
mov
cld
data16
sbb
or
pop
dec
xchg
rcl
mov
das
add
dec
and
jns
cmp
sahf
cmp
jb
jmp
jl
daa
or
jne
sub
jbe
jle
(bad)
mov
add
adc
adc
add
xor
push
sub
push
and
add
jle
sbb
je
lock
sub
or
add
inc
jp
push
push
dec
cs
push
add
lods
jne
sbb
fst
lods
sub
gs
mov
adc
add
dec
in
xchg
or
jmp
(bad)
jmp
lea
clc
xchg
clc
movs
xchg
mov
lods
add
das
jle
(bad)
enter
jae
adc
jecxz
daa
xchg
es
movs
jne
adc
add
and
xchg
daa
neg
pop
push
add
lock
pop
add
push
out
addr16
sbb
pop
out
xchg
xchg
pop
mov
cs
fwait
daa
or
inc
pop
das
pop
push
outs
sti
je
jns
xor
cdq
mov
js
mov
mov
ret
pop
pop
ins
dec
shl
mov
cmp
and
in
inc
in
addr16
test
dec
sub
clc
sub
cmp
jne
add
add
jmp
mov
fst
cmp
dec
jp
and
push
pop
push
(bad)
fiadd
mov
jne
mov
sub
(bad)
fadd
loopne
neg
xor
jge
mov
jne
add
in
inc
loopne
add
sbb
or
popa
outs
aaa
pop
loopne
(bad)
sbb
mov
fwait
add
in
leave
in
or
aaa
call
xchg
mov
cwde
aaa
in
xchg
add
in
mov
push
push
push
or
or
push
dec
and
push
stc
clc
dec
daa
or
ins
cmp
jg
imul
(bad)
pop
or
xor
add
push
into
xchg
sub
arpl
or
xchg
sbb
loope
add
push
mov
jae
inc
sbb
add
out
mov
adc
lock
dec
add
pop
jp
inc
cs
stos
ret
inc
(bad)
mov
imul
add
les
mov
inc
dec
aas
cmp
nop
xor
mov
lea
ret
cmps
jmp
movs
cmp
inc
and
dec
and
jne
pop
repz
ror
ss
inc
push
ins
enter
int3
pop
xor
add
xor
inc
lahf
pop
sub
push
or
pop
dec
(bad)
cmp
mov
lods
or
pop
mov
add
(bad)
pop
scas
dec
push
mov
fld
mov
jle
fisttp
inc
adc
sbb
js
xchg
add
pop
jge
mov
xchg
mov
(bad)
ret
jg
adc
pop
daa
jbe
mov
mov
pop
cmp
sub
call
jge
add
mov
test
jmp
push
mov
fild
add
xor
fs
sub
pop
pop
and
mov
push
lock
lea
xchg
pop
push
test
call
cmps
fcmovb
jne
mov
dec
lock
sub
inc
data16
inc
add
or
scas
xor
js
add
push
add
aam
out
inc
or
pop
or
popa
jae
add
sbb
mov
sub
ror
inc
push
sub
pop
mov
lock
retf
mov
cli
sahf
scas
pop
loopne
idiv
es
jns
jae
lea
loopne
jl
adc
fld
mov
jnp
fnop
iret
gs
pop
inc
ror
push
pop
adc
test
imul
pop
and
add
cmp
in
mov
out
rcl
(bad)
jg
shr
mov
and
xor
inc
cmp
ss
test
je
jp
mov
push
lds
inc
inc
or
adc
inc
dec
cmp
je
cmp
xor
cmp
lods
jecxz
cmp
shl
pop
lea
test
and
aas
push
and
inc
xor
fisttp
xchg
call
(bad)
pop
pop
cmp
mov
fld
imul
xor
dec
ins
pop
test
out
jo
and
shr
sbb
mov
mov
add
push
sub
int
clc
leave
aam
xchg
jb
mov
cmovp
add
(bad)
cmp
mov
cmp
test
dec
inc
xchg
adc
cwde
adc
mov
or
sar
inc
mov
or
or
jne
or
add
aam
push
(bad)
shr
add
push
lea
mov
adc
mul
push
movs
mov
icebp
lods
adc
pusha
outs
nop
in
or
xor
mov
push
or
call
jl
pop
xor
push
cmp
out
and
dec
cld
jne
idiv
pop
adc
test
jne
xor
outs
fstp
movups
fbstp
dec
jne
jmp
mov
loopne
in
pop
dec
cwde
mov
add
(bad)
sar
add
clc
jle
mov
ret
nop
out
js
cmp
retf
cdq
(bad)
in
dec
mov
test
cld
(bad)
jne
or
push
adc
fmul
nop
pusha
je
daa
movs
fwait
add
mov
loopne
add
jnp
dec
mov
repz
sbb
cmp
add
mov
xchg
sub
mov
pusha
aad
bound
add
adc
pop
lock
clc
jmp
or
or
(bad)
push
in
push
jo
xlat
push
test
or
in
mov
xor
mov
mov
call
pop
or
mov
push
or
stos
push
or
pop
pop
mov
test
push
test
dec
xor
fild
je
mov
dec
push
rcr
add
sbb
jne
in
dec
out
in
jbe
mov
scas
movs
and
cmps
sbb
loop
mov
imul
test
adc
ins
sbb
adc
out
sbb
sbb
dec
call
or
and
jmp
adc
add
jge
test
add
stos
js
push
and
push
xor
adc
push
inc
(bad)
push
jge
and
or
dec
push
or
stos
mov
push
dec
inc
push
je
sti
add
sbb
mov
rcr
mov
bndstx
retf
jbe
data16
test
cmp
lds
or
shl
pop
cmp
fwait
or
dec
ja
movsx
add
add
mov
mov
jecxz
or
mov
adc
fmul
sbb
pop
push
and
ins
cmp
sbb
adc
repz
sbb
icebp
add
ret
or
cmp
std
pop
and
mov
add
jle
add
push
jbe
test
sbb
and
inc
dec
xor
push
clc
fdiv
inc
jbe
dec
sub
mov
xor
push
sub
outs
neg
xor
xor
cmp
cmp
cmp
cmp
inc
cmp
mov
int3
pop
mov
sbb
cmp
jne
cvtpi2ps
adc
mov
pop
js
cli
ins
test
add
add
or
dec
add
add
mov
sub
std
add
cli
sub
push
mov
lds
fsub
xchg
inc
shl
jecxz
sbb
mov
mov
cmp
test
or
dec
iret
int3
sub
loope
daa
js
mov
xchg
fwait
rol
mov
shr
jns
adc
and
cmp
in
sbb
xor
push
cmp
outs
sub
sub
dec
add
mov
ficomp
inc
adc
pusha
push
push
rol
jb
sub
clc
add
iret
cmp
add
aas
add
mov
mov
cdq
(bad)
inc
cld
mov
dec
sub
xchg
hlt
add
and
jo
cmp
cmp
ror
add
pop
adc
adc
out
mov
loopne
push
mov
fadd
lock
dec
lock
in
inc
inc
cmp
add
inc
or
jbe
(bad)
xor
in
lea
ds
clc
add
add
and
jmp
inc
jl
data16
daa
sti
mov
and
jne
pop
movs
push
inc
fs
xor
sub
or
loop
push
sbb
mov
addr16
inc
add
rol
pop
test
cmp
sub
mov
jmp
aad
or
mov
cld
(bad)
loopne
leave
(bad)
adc
rcr
and
(bad)
dec
retf
xchg
addr16
bound
sbb
or
lea
add
nop
xchg
cwde
pushf
adc
leave
push
mov
push
mov
or
adc
gs
mov
ret
test
xchg
mov
ds
mov
mov
add
add
(bad)
aad
xor
or
add
mov
cwde
cld
pusha
cld
cs
sbb
and
repz
movs
out
add
call
add
nop
rol
pop
pop
jmp
inc
adc
inc
rol
test
mov
cmp
inc
hlt
sub
and
or
xor
inc
jmp
pop
and
ret
push
inc
mov
xor
add
or
adc
add
call
dec
pop
push
mov
cmp
inc
mov
cwde
or
lock
movs
ds
dec
xchg
mov
sbb
add
dec
add
mov
push
jae
xor
adc
and
dec
mov
cmp
(bad)
rol
outs
cmp
mov
push
cmp
xor
cdq
add
xor
test
scas
xchg
or
and
mov
mov
pop
add
sub
pop
or
sbb
jns
mov
fcom
jg
sub
push
cmp
aas
pop
je
out
add
pop
(bad)
dec
and
and
ja
daa
cld
xchg
or
jmp
daa
add
mov
out
imul
adc
or
push
add
add
jae
es
or
adc
mov
and
daa
js
dec
mov
mov
mov
in
ds
jg
iret
mov
mov
cmp
mov
mov
cmp
in
clc
div
jb
xor
xor
push
add
out
ins
cmp
lock
mov
or
mov
xchg
push
push
xor
sahf
xor
add
enter
movs
fwait
adc
jo
jmp
dec
push
ret
add
rcl
pop
dec
mov
imul
jmp
add
enter
add
mov
loopne
adc
xor
push
cmp
bound
fsubrp
push
fild
aaa
retf
dec
sahf
mov
or
das
cwde
cmp
sbb
fst
mov
fadd
mov
stos
pusha
out
sub
in
enter
out
jecxz
push
or
imul
icebp
mov
inc
dec
jae
mov
adc
ja
mov
mov
push
sub
push
aas
xor
cli
aas
xor
inc
xchg
mov
pop
or
sti
loopne
retf
add
or
or
mov
xchg
scas
rep
mov
mov
addr16
add
adc
daa
ins
cld
sahf
cmp
and
push
bt
jae
cmp
mov
mov
and
and
inc
cmp
(bad)
and
cmp
push
sub
stos
sbb
inc
imul
cmp
les
adc
not
out
adc
mov
fcmovbe
pop
add
lock
push
movzx
pushw
adc
daa
call
or
push
mul
(bad)
xor
mov
mov
push
push
test
in
je
mov
ss
adc
out
jnp
outs
add
and
add
mov
xchg
adc
stos
inc
or
mov
sti
scas
aad
lock
je
sub
pusha
inc
fdivr
(bad)
iret
pop
pop
lods
jmp
or
sub
jmp
test
rcl
lock
or
mov
stos
ficom
and
sub
outs
out
lahf
sub
outs
out
pop
mov
mov
cdq
or
push
sub
jns
movs
pop
adc
repnz
ja
fisttp
xchg
js
add
pusha
cmp
dec
adc
cmp
(bad)
lds
jl
push
ret
call
or
loopne
movs
and
into
dec
cmp
(bad)
cs
pop
mov
shl
pop
pop
pop
pop
pop
pop
jl
fldcw
fdiv
lods
pop
push
add
aam
add
mov
mov
arpl
(bad)
out
dec
sbb
add
jo
xor
icebp
outs
icebp
cmp
out
adc
repz
in
and
out
clc
inc
add
add
shl
dec
cld
and
test
add
fdiv
add
inc
inc
mov
mov
jno
imul
mov
ror
and
pmulhuw
xchg
add
pusha
xchg
arpl
and
fcom
and
or
(bad)
call
mov
inc
push
adc
cmp
jmp
lea
jo
shl
jmp
repnz
test
jne
lock
jo
push
loopne
sbb
xlat
mov
js
(bad)
and
dec
nop
jb
and
dec
pusha
loopne
call
sbb
(bad)
in
and
cmp
or
retf
cmp
fsub
sbb
(bad)
pusha
and
pushf
rcl
or
neg
add
mov
add
mov
sbb
pop
loop
loopne
add
xor
mov
pop
popa
lock
jg
xchg
lock
adc
fwait
pop
xor
shl
(bad)
hlt
(bad)
and
or
cmc
rcl
loopne
imul
out
xchg
push
adc
or
fwait
inc
mov
popf
adc
mov
adc
sub
lea
and
xchg
jl
lea
neg
mov
cmp
jmp
pop
rcr
(bad)
js
iret
ins
mov
jmp
lods
jo
xorps
mov
(bad)
imul
outs
sub
mov
inc
or
inc
mov
leave
je
adc
jmp
pusha
leave
and
ret
adc
and
xchg
popa
xor
inc
sti
cmps
fdivr
neg
mov
xchg
sbb
retf
je
adc
jmp
(bad)
int3
inc
jns
jmp
fsub
pop
rcpps
mov
sysret
in
add
ins
popa
call
ins
call
dec
push
cwde
xadd
and
dec
sbb
js
fld
adc
jecxz
and
mov
ret
fisubr
lock
jp
cmp
xchg
jbe
scas
daa
inc
sub
add
mov
or
ja
jge
cmp
repz
xchg
movs
mov
ret
jnp
pop
jmp
daa
aam
pop
pop
inc
cs
inc
jle
les
mov
jge
sub
mov
jns
cmp
adc
push
ds
into
push
movs
aaa
add
add
sub
pop
mov
int3
idiv
sbb
jb
mov
lahf
test
sub
inc
push
pop
ja
scas
and
or
cmp
inc
cdq
jnp
jmp
xor
pop
hlt
and
sar
stos
inc
imul
cmp
push
inc
adc
or
or
jge
jmp
outs
fistp
sti
adc
push
cmp
or
xchg
push
inc
fistp
daa
rcr
mov
push
aas
push
test
sahf
in
adc
(bad)
enter
pop
fdivr
(bad)
sar
pop
dec
add
das
fidivr
sbb
ror
setbe
out
push
div
dec
jns
or
push
gs
mov
pushf
mov
popf
sub
ret
pop
or
add
add
es
add
sub
jnp
int
mov
inc
add
push
stos
add
add
dec
pop
popf
jns
loop
test
and
out
sub
das
xchg
cmp
jp
jb
fist
test
enter
add
or
push
imul
nop
and
popa
and
or
cmp
push
pop
movs
inc
jp
psadbw
inc
das
(bad)
jnp
loope
or
cmp
sbb
out
pop
ds
sub
xchg
mov
mov
inc
add
xchg
xchg
dec
cmp
enter
mov
cwde
jl
test
jns
lock
jge
sbb
in
add
inc
das
inc
jge
xor
cmp
pop
jge
movs
jge
push
movs
ret
mov
xlat
mov
inc
mov
nop
inc
jb
mov
jle
xchg
add
sub
xlat
lock
dec
enter
jg
das
scas
jle
sbb
xlat
enter
jg
push
sub
sbb
dec
push
in
fcmove
mov
lea
sbb
pushf
aas
pop
(bad)
loope
ret
sub
xchg
mov
fnstsw
pop
das
push
sbb
int
mov
iret
jg
es
or
add
(bad)
rol
rcl
and
sub
jl
iret
jo
inc
dec
sbb
mov
or
mov
scas
add
loope
xchg
arpl
or
rol
nop
add
cmps
ror
js
lock
push
cmc
enter
pop
add
jle
fild
sbb
jle
ror
and
test
ss
add
adc
dec
push
mov
jp
pop
xor
push
push
jb
outs
ins
imul
pusha
shl
add
pop
cmc
dec
add
ja
jb
sbb
add
fstp
mov
aaa
add
ret
jne
or
pop
add
dec
adc
popa
sub
sub
test
sbb
out
mov
iret
mov
and
pop
out
cli
test
inc
ss
mov
(bad)
pop
cmps
sbb
clc
adc
mov
out
dec
adc
add
pusha
adc
or
add
add
out
jle
dec
ret
stc
or
xchg
rol
lods
data16
add
mov
adc
and
mov
(bad)
data16
outs
dec
(bad)
pushf
xor
add
mov
shr
clc
cmp
(bad)
and
push
xor
sbb
rcr
in
pop
pusha
loopne
aam
test
cmp
lahf
es
loop
fsubr
inc
pop
cmp
mov
mov
mov
int
add
pusha
loopne
inc
sub
xchg
pop
das
push
cmps
test
dec
test
or
out
sub
nop
mov
and
dec
les
jp
sub
test
add
mov
mov
aam
push
movs
xor
aaa
pusha
xchg
icebp
push
adc
imul
xor
(bad)
das
add
inc
bound
inc
or
pop
ins
jge
xchg
mov
add
sub
xchg
ret
popf
nop
pop
and
cs
sub
add
fs
test
mov
std
stos
imul
pop
sub
in
xchg
faddp
sub
sbb
xor
inc
test
and
push
dec
inc
stos
push
bound
rol
das
mov
fimul
add
shl
push
and
add
pop
test
es
pop
mov
sub
or
push
clc
mov
mov
movs
out
add
mov
adc
add
rcr
popf
nop
(bad)
or
add
cli
mov
add
add
gs
and
cmp
pop
pop
add
nop
push
pop
mov
sbb
movs
sbb
adc
jno
(bad)
stos
loopne
shl
adc
jmp
jmp
push
fdiv
xchg
ret
or
stc
push
pop
neg
push
fstp
mov
pop
fld
push
xchg
pop
outs
aaa
jno
or
xchg
adc
inc
loopne
sbb
mov
or
or
xor
and
icebp
adc
add
js
xor
(bad)
shl
loopne
in
or
or
mov
movups
add
pminub
jmp
sbb
push
loopne
dec
and
and
in
xchg
jne
sbb
pushw
pusha
mov
shl
cmp
ret
shl
adc
adc
or
cmp
add
(bad)
cmp
mov
or
dec
jne
push
aaa
les
adc
jmp
inc
sbb
add
push
icebp
add
pop
or
mov
xchg
nop
add
xchg
cmp
or
and
xchg
adc
ret
jns
push
lds
mov
or
daa
aam
mov
rcl
dec
jb
and
lock
or
or
fiadd
sub
or
or
xor
in
test
sub
jo
lock
scas
sbb
mov
dec
xchg
or
or
in
add
sbb
jae
add
mov
or
out
push
jb
pusha
cmps
or
inc
imul
fs
jne
out
lods
push
outs
xchg
sbb
sbb
adc
in
rol
sub
clc
ror
scas
dec
outs
ins
jns
or
push
cmp
aaa
adc
aam
icebp
ins
jnp
or
jo
adc
xor
add
adc
jae
and
mov
jbe
pop
ss
push
sbb
ins
cwde
je
sbb
or
fild
or
dec
imul
lds
add
push
fsubr
outs
add
ins
ins
popa
inc
or
dec
outs
adc
jp
ins
ret
mov
push
or
test
or
add
dec
gs
jo
js
add
adc
dec
sbb
mov
das
js
add
lock
gs
cmp
mov
adc
idiv
xchg
(bad)
jo
add
or
cmp
fimul
nop
aas
(bad)
push
push
add
(bad)
mov
push
add
inc
add
jo
out
add
adc
mov
add
add
mov
or
push
push
fldcw
add
inc
sub
add
popf
fld
xor
or
sub
ins
inc
cmp
pop
and
xchg
test
push
or
or
dec
xchg
pop
and
sbb
dec
int3
xchg
inc
adc
mov
clc
push
stos
inc
inc
imul
dec
addr16
test
mov
sbb
daa
(bad)
adc
add
pop
daa
in
inc
das
or
pusha
jg
int
inc
pop
repnz
aam
inc
hlt
loope
fsubr
fmul
loop
je
add
mov
aad
(bad)
fld
mov
adc
jl
dec
push
jo
mov
pop
test
mov
or
dec
or
outs
push
lods
retf
dec
mov
pop
and
sub
(bad)
leave
leave
inc
call
mov
push
dec
shl
pop
dec
inc
cwde
and
mov
inc
dec
pop
aam
or
fimul
pop
dec
cmp
dec
(bad)
sub
pusha
lods
pop
and
loop
push
xor
mov
pop
jl
or
xor
push
push
mov
outs
adc
mov
pop
and
stos
loopne
cvtpi2ps
inc
push
fs
loopne
mov
repnz
cmps
sbb
pop
sub
lock
or
pop
aam
ficomp
dec
push
gs
push
add
int3
call
fwait
call
loopne
dec
sub
in
push
(bad)
jae
xchg
fwait
and
je
dec
(bad)
pushf
adc
dec
push
inc
adc
xchg
pusha
les
pop
sub
mov
pop
inc
jo
pop
aam
ficomp
outs
shr
outs
pop
iret
bound
pop
sub
push
mov
popf
add
inc
xor
pop
pop
mov
or
pop
and
jl
push
and
scas
out
fst
pop
sub
xor
mov
scas
dec
lock
cld
mov
outs
dec
fwait
mov
jb
gs
pop
sub
sbb
scas
scas
mov
pop
clc
pop
fmul
loop
aas
push
ret
scas
adc
outs
jbe
mov
bound
sti
addr16
inc
pusha
iret
pop
sub
or
or
adc
push
loope
bound
neg
adc
xor
xor
ja
lahf
xchg
jo
pushf
dec
push
in
add
xor
push
unpcklps
les
and
fbld
add
add
inc
sub
in
fwait
mov
ss
pop
scas
jo
mov
mov
add
add
dec
jb
pop
fimul
or
push
add
jb
jne
or
jne
pop
adc
cmp
daa
iret
das
adc
jo
in
push
adc
mov
bound
dec
ds
adc
jmp
std
mov
cmc
xor
mov
jecxz
ins
(bad)
ud0
inc
xor
pop
adc
mov
push
test
shl
dec
add
sub
movs
nop
xor
cwde
and
jo
jo
sbb
mov
dec
pop
mov
cmp
movs
mov
inc
sbb
shl
ss
and
add
rcr
dec
push
hlt
mov
pop
push
sahf
das
ins
mov
adc
fsub
mov
dec
pop
rcl
retf
mov
inc
and
in
fadd
add
add
pusha
daa
adc
cmps
jo
icebp
pusha
repz
mov
icebp
inc
(bad)
pusha
add
js
mov
(bad)
retf
out
pop
add
push
test
movs
and
scas
mov
movlps
daa
xchg
mov
xchg
xchg
cmps
test
leave
leave
enter
xchg
mov
in
es
and
or
add
sbb
ja
lock
(bad)
pop
sbb
xor
clc
into
dec
ins
jmp
add
ja
dec
jecxz
lds
loop
iret
dec
and
mov
add
mov
jg
inc
aaa
mov
add
mov
sbb
es
jb
or
ror
ja
add
je
xor
dec
je
dec
adc
jno
add
mov
add
and
lock
mov
movs
aam
dec
test
movs
clc
ror
adc
movs
sub
ror
add
leave
or
(bad)
and
dec
popa
sub
inc
add
inc
add
mov
mov
push
fdiv
cs
ror
add
mov
pop
adc
dec
or
sbb
shl
add
add
imul
jno
movs
push
add
or
mov
push
das
mov
sbb
or
jl
add
or
inc
or
(bad)
pop
xor
gs
ror
sbb
(bad)
push
jne
test
adc
ret
and
ds
or
mov
add
cmp
xor
inc
dec
dec
stc
xor
push
add
dec
cmp
popf
xor
jecxz
adc
ret
lods
push
daa
cmp
test
dec
xor
mov
and
and
or
sub
in
or
jne
dec
loopne
mov
scas
lock
stos
inc
fdivr
cdq
jge
stos
cmc
or
aaa
cmp
mov
cmps
push
push
push
cli
mul
dec
(bad)
and
push
add
loope
jge
shl
push
or
inc
adc
add
mov
dec
or
push
fild
sbb
mov
stos
cdq
stos
fiadd
cmp
lods
sub
push
outs
arpl
sub
loop
icebp
lahf
pop
or
test
pop
cmp
inc
daa
imul
aaa
push
loop
or
push
outs
(bad)
jg
push
mov
pop
sub
rcl
stos
cmps
add
dec
mov
pushf
push
cs
retf
adc
(bad)
cmp
adc
pusha
sub
jo
mov
mov
gs
dec
xchg
ss
test
lods
(bad)
add
scas
inc
daa
ins
das
retf
mov
daa
in
mov
add
cmp
into
gs
add
push
jge
nop
or
lods
add
sbb
inc
scas
stc
mov
mov
jmp
mov
push
pushf
fistp
call
dec
les
mov
add
adc
jo
lahf
pop
jne
lods
mov
xchg
ret
mov
dec
into
(bad)
push
jmp
bswap
and
das
sub
dec
mov
(bad)
int3
cmp
mov
daa
lods
rcr
jg
nop
outs
daa
inc
outs
psubb
push
inc
js
outs
scas
sar
enter
lock
hlt
cmp
into
cmp
repz
rcr
loope
cmp
stc
add
push
adc
repz
and
xor
push
add
jmp
imul
imul
fldcw
ds
daa
lock
popa
mov
xchg
jo
dec
sbb
pop
sub
lahf
dec
add
or
lahf
push
push
mov
cli
add
jmp
mov
add
fmul
mov
and
dec
mov
add
daa
daa
ja
neg
jns
xchg
xchg
mov
ins
and
sub
es
in
test
add
sbb
cmp
mov
mov
mov
sub
sub
in
mov
sbb
dec
sbb
pop
or
pushf
lods
mov
inc
xor
sbb
adc
adc
dec
pop
jns
mov
mov
test
push
mov
or
push
ins
sbb
cmp
ror
fisub
stc
inc
add
inc
inc
sub
mov
fistp
inc
xor
loopne
or
dec
dec
or
outs
push
pop
loopne
inc
inc
add
xlat
xor
mov
cmp
test
mov
add
cmovo
stc
cmp
and
or
and
mov
mov
das
stos
or
xlat
pop
jecxz
mov
ret
or
(bad)
or
cmp
inc
pop
or
mov
fsub
push
stos
sti
xor
loope
inc
mov
cld
mov
daa
add
adc
adc
adc
jle
cmp
jl
jne
or
cmp
mov
fiadd
jl
push
mov
jl
add
cvtps2pd
ja
shr
jecxz
push
mov
dec
dec
test
dec
add
clc
mov
sbb
add
sbb
inc
inc
xchg
pop
iret
pop
test
fdiv
fs
imul
jmp
loop
mov
mov
sbb
mov
mov
sbb
in
in
dec
(bad)
push
mov
sahf
hlt
mov
sti
test
push
push
push
add
inc
push
es
mov
push
add
dec
push
pusha
in
mov
call
movs
ja
cmp
les
add
jmp
imul
inc
push
fsubr
and
mov
adc
and
sub
adc
loop
sar
and
pusha
or
out
jge
and
jo
fst
push
icebp
addr16
adc
or
arpl
test
mov
je
push
cmps
push
leave
daa
fistp
push
pop
mov
cmps
add
dec
mov
loopne
xchg
out
jmp
in
cwde
add
add
nop
jnp
add
cmc
add
cmp
arpl
dec
lock
cmp
and
add
js
jo
jl
outs
ficom
lahf
push
sub
dec
inc
add
pusha
or
les
outs
lock
mov
lods
adc
mov
loope
imul
pop
inc
loopne
cmp
xchg
pop
addr16
and
mov
adc
jne
mov
fisubr
push
sub
pusha
push
xchg
cmps
inc
call
(bad)
mov
lods
movs
mov
add
or
js
stos
das
add
pop
or
aam
mov
cmp
and
add
add
fisub
loopne
movs
cs
mov
push
cmps
push
add
mov
repz
js
int3
andps
aam
or
fs
adc
push
mov
call
dec
or
mov
lds
popa
jae
dec
cmp
and
test
fs
dec
pop
test
out
inc
cmp
fs
or
inc
sbb
and
stc
retf
loop
shl
test
pushf
xor
je
lods
inc
cmp
adc
ss
jo
pop
sbb
dec
or
push
jns
(bad)
js
or
adc
xchg
fs
mov
imul
ins
add
mov
and
(bad)
cmp
inc
jl
mov
addps
int
(bad)
push
xor
xchg
cmp
(bad)
test
icebp
or
and
adc
add
jmp
retf
and
xlat
dec
ja
cmp
pop
push
mov
mov
mov
cmp
jge
scas
ds
mov
addr16
push
xchg
ret
push
rcl
cmp
sbb
xor
mov
xchg
jmp
and
or
jmp
test
xor
or
mov
pop
stos
push
inc
mov
adc
enter
dec
add
je
clc
sub
push
jo
js
neg
leave
fld
inc
xlat
adc
(bad)
or
jno
mov
out
add
pop
repz
pop
aas
in
jge
fmul
(bad)
cwde
paddb
or
fisubr
call
mov
ret
xchg
adc
hlt
(bad)
jmp
pop
adc
sbb
or
std
(bad)
cld
(bad)
sti
and
sbb
push
xor
out
hlt
sub
mov
cmp
test
sub
jmp
pop
clc
pop
push
push
pop
(bad)
sub
scas
xor
jae
or
add
iret
add
rcr
mov
je
aad
mov
jno
fisttp
xor
inc
nop
ret
push
pusha
jmp
xor
pop
iret
nop
ret
xlat
lds
xlat
inc
cmp
push
add
imul
push
pusha
popa
jo
aad
sbb
inc
and
nop
inc
lods
mov
inc
pop
enter
xor
mov
sub
aam
mov
or
and
imul
mov
inc
xlat
pop
int
les
ja
push
(bad)
in
add
les
movs
clc
or
jo
dec
das
nop
in
dec
adc
lock
push
add
sahf
cmps
add
movs
les
mov
adc
fs
mov
push
inc
push
adc
les
pop
je
pop
sbb
jnp
mov
pop
lds
or
add
stos
rcl
mov
dec
push
test
xor
pusha
lds
mov
(bad)
sbb
pop
mov
cwde
mov
dec
pushf
outs
(bad)
cmovns
cli
dec
mov
mov
xor
xor
pushf
jae
push
rcl
sahf
cmps
or
mov
sbb
inc
or
cmp
jle
add
xor
fcmovnu
std
cmc
sbb
and
jae
add
imul
xor
ins
adc
stos
mov
mov
dec
ins
add
mov
gs
push
imul
adc
cmps
or
push
mov
lahf
adc
adc
fs
mov
out
cmp
(bad)
aaa
mov
ror
lfs
adc
pop
(bad)
mov
push
(bad)
dec
test
jne
pop
cmp
xor
mov
psrlw
int
adc
adc
out
std
pop
mov
and
mov
adc
add
pop
xchg
push
mov
(bad)
or
(bad)
lea
stos
jbe
mov
fld
or
(bad)
test
add
and
fnstenv
push
push
sub
das
xchg
push
xor
ins
cmps
cmp
in
out
xchg
mov
push
jo
imul
sub
movmskps
test
xchg
mov
adc
dec
out
fldcw
xor
int3
add
or
inc
or
cdq
ds
mov
test
outs
jo
push
cld
sar
aaa
sahf
out
in
add
push
xor
mov
cld
add
stc
or
scas
lods
es
dec
and
call
pop
pop
inc
jo
cwde
data16
or
hlt
pop
mov
pop
or
arpl
jbe
cmp
xlat
add
cmp
adc
rcr
adc
mov
mov
sub
mov
mov
dec
sub
mov
pop
iret
mov
stc
pop
aas
and
dec
popf
and
mov
outs
mov
cmps
add
inc
dec
dec
sub
fs
jne
jo
jno
retf
and
aaa
rol
xlat
inc
int3
lfs
xchg
sbb
adc
mov
gs
add
int
movs
push
retf
xadd
in
in
adc
(bad)
das
daa
into
divps
out
retf
lods
cmp
cli
movhps
xchg
cmp
gs
mov
push
mov
add
pop
push
cmp
bndstx
js
cmc
xor
sbb
popa
stc
jb
add
add
fsubr
and
and
mov
adc
out
nop
xorps
out
add
cmp
push
sub
or
or
aam
pop
sar
mov
aad
push
std
icebp
push
adc
push
sub
test
movs
out
add
popa
in
out
test
add
cs
xchg
fadd
push
xor
pop
dec
mov
test
lods
mov
inc
popa
sub
inc
jo
fs
dec
add
cmp
or
add
xchg
push
or
aad
cmp
add
jne
add
sbb
movs
mov
in
mov
ss
rcr
leave
mov
repnz
stos
dec
push
inc
sub
aad
mov
mov
repz
cmp
out
push
movs
dec
xchg
inc
dec
nop
or
aas
push
sub
and
push
shl
sbb
mov
cmp
pop
inc
and
bound
dec
xor
dec
push
and
inc
test
add
and
jae
sub
dec
dec
mov
push
movs
inc
sbb
inc
mov
rsqrtps
jns
push
cmp
or
stc
mov
or
test
mov
add
setl
fild
add
jnp
or
test
enter
(bad)
push
fcom
js
inc
push
sbb
dec
dec
inc
xor
es
jnp
loope
add
sbb
xor
aad
xor
adc
or
inc
or
push
popa
mov
dec
add
ja
add
les
mov
lds
bound
xor
addr16
push
mov
or
add
ror
adc
pusha
mov
int
inc
arpl
cs
mov
push
outs
sub
ins
popa
outs
xor
pop
dec
inc
sbb
mov
popf
xor
jecxz
and
inc
arpl
add
and
inc
mov
jnp
push
jne
cmc
rol
cli
adc
mov
inc
dec
add
shl
xor
shr
push
sub
or
dec
(bad)
pop
and
lock
add
dec
xchg
adc
rol
mov
xchg
add
cmp
or
inc
pop
pop
arpl
push
fiadd
xchg
(bad)
jmp
and
mov
or
dec
and
and
jno
mov
and
fdiv
push
jnp
sub
and
and
test
add
add
dec
call
add
rol
ror
sub
sub
movs
or
(bad)
sub
push
test
mov
dec
or
dec
xchg
mov
adc
sahf
cwde
adc
add
cmps
mov
mov
or
pop
xchg
sub
in
mov
imul
or
mov
push
imul
shl
aaa
add
addr16
pop
aam
hlt
add
ds
or
popa
inc
push
mov
jno
push
inc
pop
setns
lock
cmp
out
add
mov
xor
fwait
mov
jmp
out
sysexit
mov
in
dec
inc
cmp
push
or
mov
dec
sbb
add
add
and
sub
sahf
adc
dec
out
pop
test
add
xchg
pop
xchg
nop
pop
and
and
lea
cmp
fwait
xchg
and
and
test
sbb
mov
lock
add
fxch
test
jb
xchg
test
fwait
jge
pop
fld
fisttp
pop
sbb
jmp
dec
lods
or
cmps
xor
loopne
xor
imul
adc
mov
or
imul
push
pusha
adc
cmp
dec
push
xor
scas
mov
and
or
push
aas
lods
cmp
dec
iret
js
mov
dec
jnp
or
call
adc
shr
sbb
sub
dec
push
pop
or
test
mov
out
sub
cmp
push
sbb
cmp
add
sub
adc
jae
imul
push
xchg
inc
add
dec
outs
inc
movs
mov
xor
dec
mov
mov
ret
data16
loope
(bad)
cli
or
out
addr16
inc
popf
dec
jbe
fcomp
mov
(bad)
mov
fnsave
mov
add
movhps
sub
je
repnz
add
add
sub
in
xchg
dec
add
lods
test
mov
adc
data16
test
jmp
ret
push
test
mov
fisttp
gs
or
mov
or
and
and
repz
fistp
xor
sub
dec
push
xchg
inc
dec
xchg
rol
test
xchg
inc
addr16
out
xor
xor
add
jmp
push
bound
inc
fist
and
and
cli
call
sub
cdq
scas
rol
jecxz
adc
dec
gs
sub
cwde
cs
repz
pop
xchg
adc
adc
aad
and
jl
ins
mov
and
add
xor
(bad)
and
cmp
xchg
dec
adc
add
cmp
pusha
adc
mov
test
adc
mov
or
push
dec
sub
shl
out
les
add
paddq
call
and
retf
out
call
lods
mov
cmp
dec
adc
ret
mov
adc
(bad)
add
in
add
add
in
leave
sub
xchg
setle
fs
in
out
pushf
sub
sbb
sbb
fs
leave
call
in
cwde
fist
jmp
xchg
fst
inc
mov
xchg
fcmovne
leave
leave
enter
xchg
ftst
in
in
in
pop
nop
xlat
leave
sub
inc
setle
fs
out
out
addr16
repnz
and
imul
movs
dec
imul
nop
jb
out
daa
rep
mov
cmp
inc
sahf
pushf
pushf
stos
repnz
jae
dec
dec
dec
lods
hlt
sub
or
rdmsr
std
jb
or
psrlq
cmp
jns
clc
push
cmc
jb
ins
cmp
stc
lds
int
mov
pop
setbe
pushf
pushf
mov
sti
outs
lods
stc
dec
dec
inc
sahf
aaa
cld
test
paddw
daa
daa
and
fsub
(bad)
arpl
enter
mov
repnz
in
fwait
in
add
jns
xor
mov
cmp
aam
sahf
pushf
cli
inc
add
add
push
mov
pop
std
or
add
imul
push
dec
ins
and
jle
mov
inc
jne
data16
jle
xchg
mov
imul
cs
aaa
stos
xchg
lea
dec
or
add
and
pop
add
pop
cdq
push
add
inc
add
or
push
dec
movs
pop
inc
ins
xchg
or
xchg
sbb
xchg
or
mov
stos
lea
cmp
add
sub
add
adc
xor
pop
and
dec
dec
enter
fs
xor
mov
pop
nop
dec
add
or
add
inc
xor
enter
dec
add
adc
leave
add
daa
adc
xor
add
add
jb
mov
mov
add
pop
and
or
repnz
dec
outs
std
test
xor
outs
sub
fcom
aad
(bad)
cmp
bound
pop
pop
add
and
add
add
inc
and
mov
add
call
or
and
push
add
add
inc
xor
xchg
pop
je
add
mov
test
adc
adc
pushf
and
and
mov
and
add
push
shl
jae
add
sbb
adc
inc
adc
xor
pop
and
xor
inc
xor
jb
or
inc
jb
or
mov
sbb
adc
rcr
add
jno
mov
pop
cwde
mov
or
cmp
inc
push
pop
imul
iret
add
int3
out
cmps
rcl
retf
xchg
pop
pop
add
xchg
jbe
sub
cmps
sub
dec
add
push
mov
fist
imul
push
jle
xchg
pusha
pop
xor
imul
cmp
jge
ds
push
mov
mov
add
cdq
inc
mov
mov
jnp
mov
xor
les
sbb
(bad)
xchg
or
adc
sbb
bound
adc
adc
dec
add
inc
add
int3
mov
mov
adc
pushf
sub
clc
add
aas
adc
adc
push
and
jge
xor
dec
or
inc
add
mov
adc
mov
or
xor
push
sbb
pusha
push
sub
jmp
adc
inc
cmp
or
or
(bad)
adc
js
xchg
xchg
test
and
stos
sbb
xor
xor
mov
adc
pop
or
clc
adc
daa
or
add
dec
dec
or
lea
add
sub
sub
xlat
outs
jmp
or
mov
add
add
jge
loopne
mov
sub
sub
sbb
jg
push
or
mov
push
gs
mov
lock
aas
and
push
add
adc
outs
sub
call
inc
sbb
push
xor
fild
addr16
adc
dec
mov
test
adc
dec
cmp
add
gs
xchg
iret
sub
inc
imul
fmul
lods
daa
lods
add
or
mov
mov
stos
mov
add
jp
lock
je
pop
mov
loopne
pop
mov
pop
lods
push
or
pop
les
iret
(bad)
adc
adc
ror
push
outs
popf
sbb
(bad)
jo
push
pop
mov
pushf
push
es
push
es
popf
movs
lods
mov
es
add
dec
pusha
mov
lods
neg
cmp
add
mov
(bad)
das
mov
push
or
loopne
es
inc
mov
int
pop
push
mov
rol
std
movs
pop
in
sbb
push
mov
pop
inc
jo
pop
inc
dec
or
sub
push
cmp
push
cmps
cld
imul
test
dec
leave
syscall
add
dec
bound
mov
and
xor
aaa
sbb
add
push
xlat
pop
pop
cmc
mov
icebp
loop
sbb
pop
cmc
pop
pop
ret
fucom
mov
adc
add
inc
sbb
inc
test
ja
and
mov
pop
rol
adc
or
pop
ins
sbb
ja
sbb
movs
xor
inc
mov
jae
mov
popf
push
mov
cli
jns
xlat
push
sahf
push
mov
xor
and
jo
push
out
or
add
sbb
dec
(bad)
or
sub
jbe
stos
arpl
push
add
pop
mov
sbb
push
shl
or
lock
pop
ror
add
push
cwde
lea
lea
add
ja
clc
test
jb
jne
sbb
mov
sbb
pop
mov
jmp
or
adc
dec
mov
xchg
jmp
or
fs
mov
leave
das
test
mov
fldcw
jns
sbb
add
test
add
fnstenv
outs
jb
cs
add
add
dec
add
repz
cmp
in
nop
and
or
adc
sar
sub
ror
adc
sub
test
or
and
scas
xchg
pusha
or
inc
sysret
cmp
jns
test
dec
xchg
jns
xor
jo
add
loope
or
add
lds
pop
fisttp
or
or
xchg
lea
jo
adc
mov
push
or
dec
add
das
mov
mov
push
rcr
ret
jb
and
pop
mov
aas
mov
xor
or
pop
std
(bad)
push
jns
sub
data16
loop
wrmsr
xor
daa
pmulhuw
jne
pop
dec
(bad)
add
sbb
dec
ds
sbb
dec
shld
sbb
sbb
getsec
cmp
inc
lgs
movs
cmp
in
rol
ins
and
cld
or
dec
andps
mov
and
dec
pxor
sbb
pusha
or
add
emms
add
jne
jns
out
push
xor
ds
adc
out
sbb
or
mov
adc
inc
inc
fist
and
inc
inc
jns
sub
sub
fnstenv
push
sub
xlat
ss
mov
test
sbb
out
xchg
sub
and
adc
aad
cmp
dec
pop
add
adc
fs
push
and
movsx
dec
test
jne
cmp
add
imul
not
rcr
rcpps
xor
(bad)
leave
xchg
adc
fdiv
mov
stos
add
cmp
adc
mov
mov
ss
pop
pop
inc
out
pop
mov
mov
xor
cmp
mov
fisttp
mov
inc
mov
or
loopne
inc
popf
call
or
iret
or
rcr
aaa
cmp
push
ret
shl
jno
xchg
jae
xor
sub
adc
mov
mov
pop
bound
jge
adc
dec
or
pop
popa
jnp
stos
popf
lea
pop
daa
movs
and
cmp
dec
(bad)
jno
pop
scas
loope
push
imul
mov
jg
(bad)
or
push
and
adc
aas
mov
dec
cmp
mov
jg
and
das
icebp
adc
dec
xchg
or
pop
jecxz
add
pop
dec
inc
ins
outs
bound
or
push
sbb
cmovne
sub
or
mov
push
or
inc
fsubr
icebp
retf
sub
add
mov
lea
push
fucom
push
xor
and
jge
popf
mov
int3
test
lods
inc
mov
rcr
inc
mov
jmp
test
lock
add
adc
and
inc
(bad)
cmps
pop
pop
clc
adc
jae
push
jae
outs
add
test
mov
xchg
or
imul
cmp
or
pop
push
or
mov
in
push
in
daa
or
or
inc
push
in
adc
in
push
in
and
pop
inc
push
sub
sbb
nop
ror
repz
sbb
sub
xor
out
call
scas
pushf
out
sahf
mov
add
cmp
xlat
cmp
dec
repz
mov
push
je
idiv
push
addr16
push
into
sbb
out
jge
and
xor
out
sbb
pop
sbb
pop
sbb
sbb
fsubr
hlt
xlat
call
test
pop
inc
sti
mov
xchg
icebp
sub
xlat
lea
lea
add
sbb
scas
not
cvtpi2ps
(bad)
adc
xchg
mov
pop
add
sub
wbinvd
add
sbb
repz
sbb
inc
lea
mov
loope
enter
push
push
push
sub
add
dec
xchg
push
add
mov
scas
out
sbb
add
or
and
add
pushf
jge
jmp
jnp
lods
mov
lods
fwait
outs
inc
fnstsw
or
test
jnp
lds
ins
lahf
sbb
jmp
ins
imul
stos
adc
ja
and
and
adc
fld
jnp
pusha
xor
or
lds
pop
sub
or
(bad)
jmp
push
retf
jae
add
or
jl
loope
add
and
and
or
dec
sub
ret
ret
std
add
adc
ja
addr16
or
dec
jecxz
xor
scas
lock
jnp
mov
jl
add
add
or
add
or
add
xchg
int
add
add
adc
or
add
out
mov
sar
pop
ins
push
lds
add
lods
inc
mov
mov
pop
jae
push
jcxz
cmp
or
mov
push
int3
outs
outs
gs
mov
xchg
add
push
aad
xchg
pop
jnp
out
mov
aam
xor
or
add
mov
fldcw
lods
aas
adc
es
loopne
sbb
or
or
fimul
push
adc
jb
cmp
dec
add
and
test
loopne
test
aad
sti
push
dec
add
inc
add
outs
cmp
dec
aas
inc
push
adc
push
cmp
jmp
shl
inc
or
pop
pop
sub
pop
sbb
mov
aam
push
mov
inc
push
add
loope
pop
xor
and
fist
(bad)
call
arpl
and
into
sub
add
jp
pop
sub
scas
xlat
pop
in
add
add
ficomp
mov
pop
push
cmc
adc
sbb
push
mov
xor
add
pop
add
adc
add
and
fcomi
or
ins
pop
pop
sahf
ret
dec
ror
(bad)
jnp
pop
xor
jbe
dec
jne
ins
or
std
jbe
mov
or
popa
sahf
rdpmc
xor
sub
xchg
sbb
(bad)
into
mov
adc
push
jb
imul
adc
scas
pushw
hlt
mov
push
dec
in
or
data16
xchg
mov
xchg
mov
js
inc
in
outs
push
iret
jno
mov
sub
pop
mov
mov
fisttp
sub
popa
adc
xor
xor
sub
fist
inc
push
sub
jo
mov
lahf
not
and
or
into
pusha
loope
clc
gs
or
stos
fidivr
add
cmp
fisub
dec
mov
mov
or
dec
add
fld
fistp
pusha
inc
and
xchg
sti
ret
dec
jo
xchg
mov
pop
mov
dec
xchg
xor
pop
stc
xor
sbb
push
or
inc
enter
sbb
inc
(bad)
int
dec
cmp
add
inc
push
in
iret
and
imul
push
shl
mov
xor
sub
mov
int3
mov
shl
sbb
push
inc
or
add
daa
add
add
fmul
and
(bad)
push
outs
jae
and
ds
jp
in
aas
add
outs
je
sbb
mov
and
jo
mov
int
inc
mov
into
push
addr16
loopne
shr
pop
jb
jno
xchg
pop
jo
and
jle
movs
push
lock
(bad)
xchg
jp
and
xor
dec
je
push
and
aam
mov
or
out
pop
out
or
xchg
pop
inc
mov
cmp
inc
je
jp
retf
push
add
loopne
add
jp
mov
inc
dec
movs
mov
dec
jo
js
adc
out
cmp
sbb
and
and
or
jne
push
xor
add
pop
add
or
mov
inc
pushf
add
dec
(bad)
jecxz
sbb
inc
jbe
or
loope
cmps
iret
and
icebp
mov
jmp
mov
adc
jmp
add
(bad)
cmp
andps
add
add
or
out
sub
dec
or
iret
iret
add
dec
shl
xchg
inc
out
pusha
and
inc
popa
push
pop
pop
mov
adc
test
cmp
add
cdq
adc
es
jg
sbb
add
jecxz
adc
int3
pop
clc
imul
mov
test
or
cdq
scas
sub
or
out
std
or
jo
add
dec
push
jp
outs
inc
scas
pusha
mov
push
imul
sub
adc
pop
dec
cmps
sub
call
inc
sub
add
mov
mov
push
adc
lods
add
arpl
adc
xor
cmp
push
imul
lahf
dec
mov
adc
out
shl
cmps
mov
lock
imul
xor
test
cmp
aaa
test
call
dec
(bad)
popa
addr16
jp
(bad)
mov
mov
sub
cdq
xor
xor
ret
rol
sub
sbb
sbb
or
sub
mov
push
cwde
mov
or
popa
adc
js
inc
add
addr16
ret
popa
loop
adc
add
mov
ja
sub
mov
ret
xchg
sub
cmps
inc
adc
(bad)
add
add
pop
push
(bad)
and
(bad)
and
fcom
ret
jno
push
add
push
xchg
or
dec
xor
add
sbb
shl
push
inc
and
push
or
inc
sub
fld
fincstp
je
push
sbb
das
(bad)
xor
add
pop
iret
ins
std
mov
and
push
dec
iret
push
pop
fwait
dec
movs
dec
dec
jno
mov
cmp
mov
mov
push
clc
push
loopne
test
jl
and
sub
movs
inc
or
arpl
pusha
pop
inc
aas
enter
cmc
xor
fcmovne
and
and
or
sar
mov
cmp
outs
das
cwde
das
sbb
inc
pop
scas
popa
mov
xor
xchg
push
and
or
sbb
xor
sub
sub
imul
ss
add
sbb
mov
cmp
sub
stos
push
jo
push
mov
adc
jne
les
(bad)
jge
xchg
push
and
mov
add
outs
fs
or
add
aad
inc
js
push
jo
xor
(bad)
into
xor
cmc
xor
xor
pop
pop
add
xchg
iret
xor
sar
int
jo
popf
int3
dec
outs
pop
(bad)
neg
and
packsswb
stc
aas
xor
retf
xchg
xchg
xchg
daa
adc
enter
outs
mov
fs
sti
inc
aaa
xchg
jb
repnz
and
dec
mov
sbb
into
sub
push
jle
cmp
cmp
pushf
pushf
pushf
mov
mov
mov
and
test
cmp
sete
daa
(bad)
sti
xor
out
xlat
xchg
xchg
fisttp
xchg
int3
or
xchg
cmps
inc
pop
or
xlat
mov
xor
sbb
mul
mov
stos
or
and
lock
add
pop
xchg
pop
inc
add
mov
xor
nop
cmp
sub
cmp
xor
ret
cmp
cld
nop
dec
data16
inc
xchg
jo
mov
pop
push
xchg
mov
aad
dec
inc
enter
pop
sub
or
sbb
jns
pop
pop
dec
lods
cmp
cmp
mov
ja
adc
mov
test
test
imul
add
retf
xor
sub
add
inc
push
mov
mov
test
jb
dec
rcl
stc
mov
fsub
pop
je
in
pusha
mov
pop
mov
and
mov
xchg
or
mov
test
mov
test
mov
fsub
pop
je
mov
inc
call
rol
xchg
inc
adc
xchg
movaps
les
push
imul
dec
sub
dec
rcr
mov
loopne
inc
add
dec
test
add
fbld
pop
aas
rcl
ret
inc
add
adc
aam
inc
ficom
cmp
mov
pop
add
xor
add
xchg
bound
or
rol
mov
xor
xor
pop
inc
add
jo
fisttp
addr16
nop
jae
add
fmul
ret
inc
leave
ud2
dec
sub
sub
xor
add
and
aad
push
lock
jl
xchg
pop
mov
pop
adc
pop
dec
mov
sbb
dec
pop
adc
(bad)
dec
pusha
lods
push
and
mov
stos
pop
mov
add
cmp
(bad)
les
adc
mov
(bad)
xor
or
(bad)
cwde
jge
js
pop
jno
pop
jmp
jo
or
leave
jl
les
pop
add
fs
sub
sbb
dec
jmp
xchg
and
cwde
and
nop
dec
mov
add
inc
dec
add
push
data16
add
iret
fidivr
sub
mov
or
fs
push
jae
sbb
outs
rcr
sub
icebp
add
addr16
xor
imul
test
mov
dec
ins
jns
push
dec
pop
push
mov
inc
rol
and
mov
scas
mov
jns
or
mov
das
or
sti
mov
outs
push
imul
das
jbe
dec
aaa
add
pop
ins
add
loop
cmp
mov
pop
jp
dec
call
fiadd
ds
push
sbb
sbb
jp
sar
add
add
sub
jmp
std
out
mov
sub
push
ror
dec
inc
dec
inc
mov
ins
cmp
jmp
mov
and
pop
cmp
(bad)
cmp
dec
dec
sbb
adc
lods
cs
xchg
ret
inc
xchg
or
scas
(bad)
out
loop
psrlw
call
je
push
je
jae
push
adc
pop
jmp
mov
idiv
and
pop
pop
sbb
lods
pop
inc
inc
fimul
adc
push
loope
inc
push
or
add
cmp
xchg
inc
test
mov
xor
add
dec
push
jp
idiv
mov
add
sar
or
pusha
push
sub
pop
repz
adc
add
add
adc
adc
adc
mov
and
outs
fmul
scas
inc
repz
add
jno
and
add
mov
mov
sub
push
cmp
das
stos
push
push
jmp
inc
push
pop
dec
daa
sbb
dec
push
js
push
ins
push
lock
adc
or
ja
(bad)
pop
(bad)
cs
or
or
or
push
outs
fwait
pop
and
(bad)
movs
mov
push
adc
test
jae
mov
out
cmp
gs
imul
ins
jmp
inc
adc
sub
jno
clc
adc
jae
push
cmp
jge
loopne
imul
jle
retf
mov
fld
dec
inc
ret
int3
pop
jmp
xor
xchg
xor
pop
lahf
xchg
xchg
daa
daa
out
inc
je
leave
enter
dec
dec
nop
in
in
xlat
push
dec
lods
jb
repnz
and
aam
jb
sub
setge
adc
xchg
xchg
xchg
test
cmp
aad
dec
pushf
pushf
pushf
mov
jne
in
jmp
cwde
sahf
push
add
out
mov
adc
sub
sbb
xchg
push
ins
ja
dec
mov
icebp
in
cmp
mov
jecxz
jnp
dec
scas
mov
popf
push
dec
pop
sub
dec
mov
push
lods
fdivr
add
sbb
xchg
push
mov
aam
lea
mov
aam
lea
mov
aam
lea
mov
aam
lea
mov
aam
(bad)
rol
pop
(bad)
rcl
sbb
jb
mov
(bad)
add
rcl
or
mov
mov
sbb
mov
adc
aam
test
mov
add
jnp
fldcw
aaa
pop
pop
or
adc
add
sti
aaa
sub
ss
dec
jnp
add
lahf
sub
add
and
fs
push
pop
popa
jb
dec
aam
add
(bad)
or
jecxz
ja
add
loope
dec
pop
stos
test
sub
jp
std
cmp
jl
(bad)
lahf
inc
add
dec
in
movs
cmp
mov
add
shr
sub
lea
sbb
enter
jno
dec
dec
push
les
mov
or
pop
cld
sbb
xor
jmp
and
adc
inc
dec
fs
inc
jecxz
xor
inc
xchg
adc
push
push
xor
pushf
je
adc
add
adc
jmp
xchg
inc
sub
xchg
shl
push
out
push
pop
jp
test
xchg
add
jae
movs
sbb
(bad)
movs
adc
fild
nop
mov
mov
movs
pop
aaa
cmp
je
add
adc
pusha
test
push
movs
and
push
mov
loope
enter
rcl
les
dec
sbb
jnp
enter
ins
lahf
inc
push
mov
and
lock
inc
inc
mov
add
movs
mov
push
std
push
mov
push
ja
loop
mov
or
cwde
icebp
pusha
aas
aaa
push
jmp
sub
or
cmc
inc
xchg
add
loop
dec
test
adc
ret
or
and
and
inc
xchg
jecxz
inc
inc
loopne
pop
sub
in
movs
push
xlat
pop
mov
dec
rol
push
das
inc
push
(bad)
add
adc
sahf
ja
(bad)
arpl
or
js
xor
out
out
add
adc
xchg
mov
lea
adc
retf
cli
je
sbb
inc
or
xchg
mov
sbb
push
sbb
push
outs
imul
test
cdq
jbe
sub
or
fiadd
push
dec
loope
sbb
jnp
adc
and
cmps
(bad)
and
xchg
jg
or
and
push
inc
cli
and
add
or
push
aaa
scas
shld
cmps
je
cmp
retf
imul
not
sbb
xchg
fist
(bad)
rol
daa
daa
mov
fisttp
jp
int3
outs
cmp
subps
dec
dec
xchg
int3
xor
call
xor
fs
call
or
retf
sbb
pop
and
in
inc
jp
cmps
dec
(bad)
adc
add
mov
fimul
push
or
call
popa
jle
and
icebp
retf
pop
add
test
clc
leave
pop
stos
mov
cmp
les
shr
retf
push
pop
pop
sahf
loope
jns
push
data16
je
mov
push
les
inc
mov
adc
jbe
inc
jb
cmp
lods
mov
push
in
push
je
out
fldenv
cli
scas
mov
or
js
outs
in
loope
adc
lods
push
popa
inc
bound
pop
lds
sub
fcomp
jae
push
js
or
fs
inc
or
push
dec
pusha
mov
stos
sub
mov
fdivr
imul
mov
push
out
pop
push
dec
outs
je
dec
add
sahf
das
ss
or
jnp
and
(bad)
clc
push
adc
jae
jno
push
cmp
dec
dec
add
in
sbb
jl
push
push
and
push
mov
ficom
or
adc
mov
adc
popa
shr
add
xchg
xlat
test
sbb
lods
dec
add
cmp
sbb
pop
cmove
inc
arpl
mov
outs
pop
and
js
fs
or
fmul
push
data16
pop
inc
leave
mov
ret
(bad)
cmp
test
or
(bad)
iret
rol
int3
sbb
adc
adc
push
ret
push
inc
(bad)
pusha
aas
or
jle
jne
test
jg
outs
jb
push
add
je
xchg
outs
(bad)
sbb
jo
adc
dec
push
pop
out
add
ins
adc
and
jge
pop
or
inc
push
adc
gs
cwde
imul
test
movs
mov
cs
inc
outs
arpl
ds
sbb
lock
stos
aas
shl
inc
or
lea
inc
and
(bad)
lock
inc
and
ja
sub
cwde
pop
out
or
xchg
sbb
pop
cs
or
jae
(bad)
adc
cmp
aas
add
or
movs
jne
push
jb
pop
dec
loope
push
fs
ins
sub
push
dec
cmps
call
movs
lock
daa
cld
lods
or
clc
push
adc
pop
cmps
pop
das
pop
xchg
pop
loope
pop
out
cmp
pop
push
shl
dec
lahf
neg
ss
dec
xchg
sub
inc
mov
scas
add
loope
imul
add
inc
or
xchg
dec
shl
or
xchg
jg
jne
jo
aaa
in
rcr
mov
scas
push
ins
pusha
psllq
adc
pop
mov
push
gs
gs
adc
push
xchg
sbb
movs
nop
jecxz
push
or
js
or
imul
das
mov
or
bound
cmp
sti
(bad)
rol
ins
cmp
cmp
mov
(bad)
sar
les
add
xchg
dec
push
inc
(bad)
sub
mov
movs
jl
fistp
push
pop
pop
sub
jb
mov
sbb
pop
jae
stos
sar
outs
sbb
dec
dec
cmovp
daa
daa
and
leave
or
xchg
xchg
xchg
popa
inc
jbe
leave
leave
leave
enter
ins
sbb
leave
leave
mov
xor
xchg
or
adc
nop
cmc
xchg
dec
call
punpckhwd
mov
dec
neg
jnp
mov
cmp
adc
popf
shr
dec
add
pop
push
sar
push
jne
mov
cmps
xor
push
xor
es
(bad)
mov
push
ins
out
mov
push
inc
jae
dec
sub
int3
std
adc
hlt
fidivr
addr16
sub
fs
hlt
jns
inc
jg
mov
push
popa
cmp
mov
mov
adc
stos
arpl
xchg
dec
sbb
mov
(bad)
fs
push
xchg
fwait
jmp
sbb
lds
mov
sbb
or
pop
inc
and
pusha
dec
dec
push
and
and
not
test
xlat
scas
jge
jae
sub
jmp
aas
push
test
arpl
jge
push
mov
(bad)
or
mov
stc
adc
mov
or
enter
cmp
or
inc
sub
test
movs
sub
xor
adc
or
push
rcl
fst
xchg
add
jl
push
lods
sub
stos
mov
fwait
add
inc
lock
dec
xchg
lea
das
add
inc
xor
add
lahf
mov
cmp
or
jl
popa
imul
dec
je
jae
mov
pop
retf
gs
push
adc
pop
stos
or
xor
les
cli
dec
fdiv
jmp
bound
retf
jno
pop
das
sbb
sbb
or
hlt
mov
(bad)
mov
clc
lock
push
push
xor
push
sub
(bad)
mov
imul
or
inc
rcr
cmp
dec
imul
pop
mov
sbb
pop
btr
pusha
or
mov
xchg
and
cld
pop
fs
arpl
and
and
push
or
push
adc
daa
push
pop
push
adc
mov
dec
jge
xchg
mov
mov
xchg
sbb
add
xor
stc
push
cli
mov
mov
mov
sbb
xchg
imul
call
dec
psubb
pushf
adc
sbb
jae
call
push
nop
or
xor
add
sti
and
dec
fild
dec
daa
jl
les
and
call
pop
dec
or
loope
in
clc
scas
gs
jmp
ja
cmps
adc
or
adc
or
cmp
add
or
inc
add
sub
dec
adc
add
push
inc
and
xchg
dec
dec
gs
les
push
xchg
jle
pop
add
xor
frstor
inc
dec
add
xor
outs
jo
pop
mov
fcmovb
mov
add
xor
loop
std
xchg
and
arpl
add
push
gs
inc
cwde
mov
adc
adc
push
or
or
adc
adc
dec
enter
adc
or
fst
adc
jae
pop
push
mov
lds
lea
pop
nop
addr16
nop
inc
retf
jle
ins
scas
loopne
lods
addr16
xor
repz
or
push
mov
mov
or
out
jbe
lods
leave
stos
push
push
and
lahf
mov
mov
outs
or
mov
sbb
(bad)
jns
add
cmps
ss
xchg
in
js
stos
mov
adc
add
inc
xlat
or
je
push
sysret
xchg
fidiv
add
jo
imul
push
mov
adc
loop
popa
pop
jae
xchg
loopne
xlat
outs
add
mov
shl
jno
sbb
jo
(bad)
adc
movs
pop
(bad)
or
dec
cli
mov
outs
adc
push
sub
outs
cs
inc
xchg
inc
xchg
mov
ret
test
pop
call
loopne
clc
push
push
mov
mov
cld
sub
jl
loopne
mov
adc
and
or
pop
shl
add
add
add
add
aam
inc
lock
mov
xchg
add
add
inc
and
xchg
cmp
fsub
dec
sbb
mov
js
sbb
adc
rol
pop
mov
sar
push
xchg
add
mov
dec
aad
push
in
and
in
pusha
wbinvd
dec
ss
jbe
std
jmp
fcom
mov
ja
dec
mov
jecxz
fwait
xchg
in
rcl
jl
add
jbe
dec
outs
cwde
jge
ja
popa
inc
mov
test
sbb
cmp
stos
push
adc
sub
add
stos
jmp
ins
xchg
dec
inc
shl
stc
(bad)
aas
xchg
mov
pop
jl
dec
fwait
add
sbb
xchg
push
ja
bound
sbb
or
les
sbb
fnsave
xchg
push
adc
jl
fs
add
ins
push
les
push
jo
les
sahf
jge
sub
dec
dec
mov
jmp
loopne
push
sub
xchg
sub
ds
imul
xor
push
dec
js
dec
xor
adc
sub
xchg
loopne
mov
dec
push
mov
stos
pop
xor
dec
shr
in
or
add
inc
xchg
ja
loope
add
inc
daa
ror
xchg
jo
jne
ins
xor
push
in
loop
inc
sbb
pop
outs
fcmovu
fsubp
cmps
outs
out
psadbw
outs
adc
stc
mov
add
push
sbb
sbb
add
sbb
xchg
jo
loopne
mov
lods
sub
ss
daa
push
daa
ss
pushf
adc
sbb
jl
inc
in
or
mov
or
sub
sbb
ret
add
or
inc
jno
test
sbb
pop
mov
andps
push
(bad)
pop
dec
add
adc
and
pop
or
iret
lods
stos
std
rcl
push
push
jb
jae
or
dec
mov
adc
data16
sbb
cmp
jmp
pusha
lods
inc
inc
xchg
es
mov
fwait
mov
mov
(bad)
cmp
push
sub
aad
cmovg
cmp
mov
rol
test
inc
jmp
or
jno
fwait
sub
lods
and
ret
or
pop
sahf
rol
or
or
fcom
add
adc
lods
les
(bad)
int3
iret
repz
mov
shl
cmp
cmc
(bad)
in
dec
js
jno
add
icebp
push
add
jb
add
mov
dec
jmp
dec
call
mov
es
clc
push
ds
dec
(bad)
lock
adc
fild
dec
not
(bad)
call
add
int
in
push
push
adc
fidivr
std
push
inc
adc
push
dec
ss
cs
sub
not
nop
jbe
adc
inc
imul
or
add
xchg
add
adc
pusha
dec
jecxz
popa
addr16
ret
sub
movs
jno
and
sbb
or
lea
push
jecxz
or
in
fst
jg
push
inc
dec
cmp
pop
test
mov
jge
inc
push
jecxz
push
inc
or
xor
jns
xchg
inc
nop
adc
adc
ret
inc
pop
mov
dec
jb
mov
push
loope
jne
cmps
push
dec
mov
xlat
jne
dec
jecxz
arpl
jbe
push
push
add
xchg
fucomi
repnz
stos
pxor
ja
cmp
pop
icebp
inc
bswap
sub
sti
lock
cmp
sub
mov
fsubr
add
adc
adc
adc
xchg
mov
pop
dec
stc
jmp
push
push
jmp
add
mov
ds
sti
push
push
jo
inc
setle
fadd
and
mov
xchg
cwde
mov
jl
xchg
push
pusha
adc
push
arpl
je
je
pusha
repz
cmp
aad
push
jp
sub
and
enter
xor
adc
pushf
gs
gs
popa
sbb
jo
lds
pop
popa
sub
pusha
or
push
adc
lock
or
add
dec
inc
movups
pop
rol
sub
push
xor
int3
push
test
mov
shl
cwde
hlt
shr
adc
mov
xor
mov
jl
(bad)
jo
call
xchg
movs
sbb
mov
and
jg
dec
sbb
xor
pop
xor
adc
iret
push
add
call
adc
aaa
push
jp
xor
or
movs
sar
adc
pop
sbb
sbb
pop
or
xor
or
mov
pcmpgtb
test
add
add
push
aad
cmps
fs
rcl
enter
dec
bound
pop
or
xchg
lea
and
lods
adc
loopne
jmp
or
adc
mov
pop
dec
fs
adc
sti
inc
arpl
call
dec
ret
add
and
arpl
stos
jns
test
mov
mov
inc
gs
lods
stos
and
push
dec
pop
imul
pop
sbb
movs
sub
shr
dec
mov
and
mov
xchg
adc
xor
hlt
or
cmp
imul
xchg
cs
inc
inc
mov
pop
cs
inc
push
add
call
add
adc
push
loopne
xchg
sub
mov
ins
je
inc
(bad)
xchg
js
shl
push
test
dec
xchg
mov
ret
fisttp
cmp
mov
xor
jmp
xor
or
xchg
pop
cmps
or
or
ror
pop
and
sub
inc
mov
push
jmp
dec
xlat
push
aam
push
sar
jle
lock
fldcw
jge
push
jge
jns
add
scas
adc
out
jns
repz
in
push
sbb
rol
and
dec
mov
push
cmps
push
mov
add
test
inc
mov
push
push
inc
cmp
dec
mov
dec
aas
bound
cdq
cli
jge
add
push
lock
shl
std
cmps
pop
or
jle
push
cs
shl
imul
and
adc
mov
sbb
and
xchg
les
adc
push
pop
test
sar
data16
add
and
lods
dec
xor
je
add
pop
mov
sbb
xor
mov
add
inc
add
push
inc
push
mov
lods
or
push
ret
cmc
jle
sub
lods
mov
push
adc
jg
xchg
dec
imul
and
inc
(bad)
pop
xor
ja
jns
and
pop
jg
and
mov
mov
jae
jg
mul
pop
xor
add
adc
inc
push
fs
jb
push
leave
and
mov
imul
cmovo
in
mov
popf
out
cmps
cld
outs
push
dec
push
add
mov
add
dec
or
mov
fcmovne
adc
jno
(bad)
out
lahf
push
adc
dec
xchg
mov
push
test
inc
mov
mov
add
add
pop
sbb
fild
js
movlps
adc
lahf
stos
sub
or
jle
push
add
dec
ror
push
cmp
jo
pop
xchg
inc
add
push
mov
jo
and
sbb
mov
push
test
mov
ins
or
lea
mov
jno
push
cmp
sbb
sbb
cmp
jno
imul
push
dec
test
pop
and
add
(bad)
ja
add
sbb
jns
mov
pop
inc
mov
ds
dec
inc
addr16
add
pop
jae
or
jle
pop
push
mov
jbe
push
adc
jg
mov
xor
cmps
pop
inc
pop
or
xor
push
xor
cmp
faddp
pop
dec
or
lock
prefetch
bound
inc
cmps
xor
pop
jmp
mov
ja
sbb
test
xchg
mov
or
out
inc
ins
(bad)
cmps
mov
mov
scas
pop
movs
das
lods
and
iret
inc
jmp
and
xor
cmps
pop
jmp
mov
or
popf
imul
xchg
xlat
xchg
pop
das
pusha
add
ins
jnp
cvtpi2ps
dec
jb
fwait
imul
repnz
test
mov
test
jp
push
out
mov
call
or
cmp
mov
or
sub
mov
ds
(bad)
pop
xchg
or
jo
enter
shl
add
ins
ins
jns
mov
shl
ds
fbld
sub
and
ja
pop
xor
mov
das
adc
sub
mov
inc
pop
ins
cwde
and
stc
cmp
bound
and
or
xchg
and
mov
mov
add
jmp
imul
inc
jmp
ficom
sbb
stos
sti
mov
push
jmp
push
inc
xchg
mov
pop
or
sbb
pop
or
pusha
cmp
or
dec
push
sub
int3
cmp
test
mov
loopne
(bad)
and
popf
add
dec
add
mov
xchg
inc
sub
mov
aaa
adc
test
mov
das
pop
mov
jo
sahf
mov
push
sar
or
movs
mov
mov
xchg
jmp
push
or
dec
add
nop
mov
xor
gs
or
pop
mov
xchg
or
mov
pop
push
cmp
aas
addr16
mov
pop
cmps
adc
push
fwait
add
cdq
add
or
add
add
inc
dec
loopne
add
mov
lods
or
add
shl
or
or
fsub
mov
add
pop
sub
sub
addr16
sbb
mov
inc
mov
pop
add
das
arpl
sbb
jnp
retf
punpckldq
dec
add
lods
and
dec
scas
call
lea
mov
pop
add
mov
int
add
xlat
les
movs
or
test
xlat
xchg
mov
push
inc
pop
mov
push
cmc
sbb
cmps
nop
jp
stos
dec
mov
aad
xor
call
ror
and
add
inc
xchg
test
inc
inc
cmove
dec
add
outs
ret
fsubr
xchg
(bad)
cmp
or
rol
cmp
inc
pop
mov
pusha
mov
pop
in
adc
test
mov
pop
or
or
pop
sysexit
loope
push
fwait
das
mov
sbb
test
nop
dec
test
dec
xor
xor
cmps
loopne
lock
pop
cmp
call
xchg
push
mov
(bad)
pop
mov
and
stos
test
lods
cwde
dec
iret
imul
or
dec
data16
ss
or
push
je
lock
adc
and
xchg
dec
loopne
xor
int3
cmovp
dec
dec
inc
push
sahf
in
adc
inc
jp
sti
sub
xchg
loope
retf
sub
leave
fbld
cwde
push
vmread
jb
into
repz
(bad)
jbe
jb
and
addps
fdivr
fwait
int
das
test
mov
adc
punpckhdq
mov
add
adc
dec
daa
dec
inc
ins
cmp
dec
dec
add
pop
or
sub
jno
dec
sbb
add
je
lods
xor
jl
int
jg
cmp
pusha
loope
pushf
push
adc
push
xchg
ins
push
cdq
mov
adc
and
lock
jg
or
(bad)
push
loopne
dec
das
or
(bad)
pushf
push
cwde
dec
and
jg
sbb
xchg
push
add
jg
rcl
xor
leave
fwait
xor
sbb
inc
adc
scas
pop
inc
adc
jg
push
add
cmp
xchg
iret
inc
mov
sbb
xchg
jg
ds
or
dec
adc
adc
mov
les
dec
jg
adc
jae
loopne
int3
jg
and
add
sub
cmps
movs
push
or
inc
or
add
inc
dec
add
adc
rol
les
pop
bound
cmp
sbb
dec
and
lds
test
jmp
shl
or
add
jae
jmp
dec
inc
push
mov
popa
cld
ss
inc
dec
scas
imul
cli
mov
sbb
sti
or
adc
ror
dec
add
and
add
and
les
add
and
jg
push
push
mov
dec
lds
push
xchg
xor
xor
add
shl
inc
push
or
scas
in
ins
cmp
sub
out
inc
or
in
addr16
out
or
pop
add
jbe
lea
sub
in
adc
fmul
data16
das
aam
or
add
cmp
cmc
sbb
inc
sub
inc
and
mov
jo
jecxz
xchg
or
xor
sub
test
fild
xchg
dec
cwde
popf
dec
mov
inc
adc
outs
das
pop
sahf
out
or
aas
add
cmp
das
mov
sahf
mov
lahf
pushf
mov
lahf
cmp
test
dec
inc
xor
sar
and
lahf
add
or
mov
jne
stos
pop
mov
mov
push
bound
inc
sbb
stos
stos
ss
data16
dec
gs
dec
sbb
and
add
xor
dec
push
sbb
lods
cmp
and
and
or
xor
xor
sbb
sbb
cmp
popf
out
cs
xor
or
test
imul
out
cli
push
add
add
mov
jbe
mov
mov
test
mov
nop
or
jae
cmp
mov
shl
fsub
cmp
(bad)
fldenv
js
popf
sbb
das
dec
mov
xchg
enter
adc
(bad)
jbe
xchg
popf
mov
(bad)
mov
inc
jmp
pushf
mov
call
pop
bound
cmp
pusha
dec
cwde
mov
mov
icebp
mov
push
ins
and
or
loope
pusha
mov
adc
inc
jb
mov
test
movaps
xlat
loope
lea
sub
bound
aaa
loope
add
push
and
and
shr
mov
loopne
inc
or
push
movs
inc
fsub
pop
push
das
jb
pop
daa
das
das
push
movs
pop
cmps
and
mov
adc
cmps
xor
mov
adc
xor
sbb
jns
mov
adc
inc
mov
jns
pop
aad
inc
cmp
dec
movs
(bad)
aam
cwde
cmps
out
sub
aaa
aad
movs
mov
cmps
or
add
addr16
push
xor
xor
bound
ror
mov
mov
push
inc
mov
lods
dec
scas
push
jb
or
pop
jecxz
test
or
test
jmp
or
test
mov
dec
sysret
or
ins
add
mov
sub
mov
add
js
dec
add
stos
fstp
js
jg
push
mov
das
add
lods
dec
mov
cmp
div
push
mov
call
les
pop
mov
les
sbb
inc
sub
dec
outs
jl
add
aas
add
sub
sahf
fcom
fisttp
xlat
adc
dec
xchg
(bad)
scas
xchg
xchg
pop
or
setge
leave
leave
leave
enter
mov
in
fs
mov
sahf
out
jb
repnz
jns
jb
out
mov
cmp
mov
adc
mov
movsx
pop
push
mov
rcr
stc
fimul
push
push
mov
add
dec
loopne
mov
add
xchg
rol
dec
or
mov
adc
mov
sbb
inc
xor
sbb
jns
adc
mov
fs
xchg
ins
push
fs
pop
fnstsw
movs
mov
add
or
test
lahf
pop
fimul
inc
or
sbb
cmp
dec
and
dec
inc
sbb
add
pop
inc
adc
(bad)
cmps
sbb
dec
dec
and
xor
sbb
sbb
in
mov
sub
inc
sbb
inc
sub
pop
jge
or
mov
pop
jae
add
add
xchg
mov
and
dec
and
inc
xchg
adc
pop
jo
loop
push
(bad)
cld
dec
dec
mov
ins
and
inc
in
pusha
mov
dec
rcl
or
test
add
dec
mov
rol
mov
add
ror
adc
xchg
or
jge
and
add
mov
add
add
pusha
xchg
dec
jecxz
dec
rol
xor
(bad)
jmp
test
dec
cmps
xor
inc
lock
dec
inc
add
adc
stos
or
xchg
pop
sbb
cld
mov
leave
push
mov
or
or
rcl
mov
enter
xchg
leave
clc
inc
pop
mov
sub
cmp
push
(bad)
xor
pop
and
jecxz
pop
popa
mov
add
mov
cwde
pop
inc
push
pop
jo
cmovle
push
pop
sbb
movs
inc
and
ret
sbb
add
xor
mov
jecxz
cmp
mov
and
test
mov
pop
fs
dec
mov
mov
cmps
and
dec
dec
cmps
mov
inc
int
ret
mov
jg
adc
hlt
xchg
loope
(bad)
xchg
cmp
push
mov
sub
stos
mov
mov
xor
je
daa
jne
mov
jno
and
xor
das
dec
fs
add
xor
cmp
mov
clc
xchg
fsubr
mov
(bad)
and
jmp
cmp
call
adc
fadd
fist
mov
pop
sbb
cmps
mov
iret
and
inc
xor
xchg
mov
pop
cmp
pop
mov
iret
js
fist
pop
mov
pusha
or
cmps
or
scas
mov
adc
rcl
add
int
push
add
scas
and
add
or
scas
retf
push
pop
inc
add
mov
mov
push
add
and
dec
out
dec
inc
scas
add
push
xor
clc
pop
outs
das
dec
mov
push
push
sahf
push
mov
adc
imul
mov
aam
add
adc
jno
das
enter
retf
rol
or
sbb
ins
add
pop
pop
push
add
movs
lea
add
jae
push
aaa
adc
mov
into
mov
push
cmp
das
pop
(bad)
sub
mov
cwde
dec
shl
test
cli
mul
dec
add
mov
sub
push
(bad)
mov
and
mov
retf
(bad)
ret
add
enter
movs
ret
cmp
ret
ret
out
mov
mov
or
leave
leave
sub
icebp
xchg
pop
es
lds
ret
add
cmp
xchg
icebp
in
or
leave
leave
sub
in
in
repnz
pop
lods
jb
repnz
or
sbb
mov
retf
add
fsubr
xchg
retf
lldt
mov
pop
or
lds
cmps
dec
out
adc
test
hlt
dec
add
add
or
mov
mov
sub
cwde
adc
das
xor
push
mov
jno
pop
enter
and
pop
sub
xchg
or
and
les
xor
or
lds
push
loopne
mov
add
adc
xchg
jno
inc
jecxz
pop
or
add
xchg
push
adc
pusha
add
and
add
out
add
lock
adc
sub
retf
or
or
xchg
bound
adc
jno
or
or
or
pop
dec
adc
add
and
pop
add
rol
mov
retf
add
adc
call
lods
fisttp
mov
jecxz
mov
lock
mov
retf
push
jae
push
out
cmp
adc
out
dec
sub
add
xor
push
push
mov
adc
out
or
out
adc
adc
xor
and
add
jns
add
add
push
dec
out
mov
movs
or
sub
nop
inc
mov
add
test
push
push
aaa
enter
ror
dec
out
add
loopne
xchg
out
dec
dec
leave
push
enter
adc
mov
add
mov
iret
xchg
or
leave
call
mov
iret
inc
repnz
push
dec
jl
sub
inc
leave
mov
mov
es
daa
inc
add
mov
xor
xchg
dec
adc
pop
mov
mov
add
in
pusha
ror
es
arpl
push
push
mov
sub
jmp
add
lods
test
or
jno
stc
add
xchg
add
(bad)
into
test
hlt
das
adc
xchg
retf
pop
shl
pushf
push
cmp
cwde
sbb
add
into
inc
into
mov
and
sar
movs
cmc
aad
add
into
and
bound
xor
and
int3
dec
sub
icebp
inc
or
test
into
pop
pushf
cmp
gs
int
inc
loopne
inc
and
push
sub
push
add
stos
push
mov
or
leave
dec
add
and
lods
test
and
iret
icebp
sbb
mov
add
outs
fldcw
add
add
nop
mov
push
add
add
ins
ror
icebp
mov
dec
dec
scas
hlt
ror
test
pop
rcl
rcr
in
inc
shr
and
dec
sbb
adc
add
add
test
or
add
movs
(bad)
test
rcl
pop
int
rol
loopne
(bad)
dec
aaa
adc
rol
pop
fisttp
push
in
sar
aam
imul
or
es
aam
xor
scas
dec
push
int3
xlat
push
add
ror
pop
scas
pop
xlat
mov
loope
aam
xchg
aam
aad
adc
sub
cmps
bound
sub
push
pop
and
in
cmp
pop
and
rcl
or
aaa
pop
pop
add
mov
mov
jp
cmp
aad
rcr
jno
pop
movs
aad
mov
and
loopne
cmp
das
xchg
xlat
pop
rcr
outs
pushf
push
dec
dec
push
pop
lock
push
aam
pop
sbb
sub
iret
add
or
and
shl
cmp
(bad)
fmul
pop
shr
je
pop
mov
xchg
add
(bad)
hlt
fmul
xor
in
call
jl
mov
fisttp
pop
mov
cmp
inc
sahf
pushf
pushf
nop
frstor
dec
dec
xchg
mov
add
daa
daa
daa
and
outs
mov
daa
sbb
inc
ja
adc
xchg
rcr
loopne
add
loopne
fisttp
bound
fwait
and
sbb
cmps
ss
dec
add
or
push
add
jno
into
add
jo
sbb
add
imul
cmp
mov
mov
fadd
push
sbb
add
sbb
mov
(bad)
sbb
adc
pusha
push
daa
and
add
inc
mov
and
sbb
jo
sbb
paddusb
sbb
fwait
ror
cmp
add
push
add
sub
je
in
sbb
pop
mov
dec
sbb
add
push
pop
add
ins
xor
movs
loopne
add
test
or
jmp
adc
add
adc
xchg
xchg
cdq
(bad)
lock
or
inc
or
dec
sbb
xor
sbb
dec
mov
mov
or
add
pusha
sbb
adc
adc
jge
dec
sbb
(bad)
sbb
jns
adc
xchg
dec
or
cmp
arpl
jno
cmc
or
and
sub
add
adc
(bad)
add
push
sbb
or
sbb
lods
or
pop
and
push
into
sub
sbb
add
or
aad
sub
pop
enter
mov
pop
xchg
iret
loopne
mov
loop
xor
mov
retf
xlat
add
and
pop
ds
pusha
lods
push
mov
imul
shl
gs
aaa
add
pushf
and
pusha
imul
imul
imul
sub
inc
adc
mov
inc
ja
add
cmps
out
loop
cli
mov
nop
jecxz
add
int
and
pop
cwde
das
cmps
jecxz
xchg
push
push
iret
mul
loope
sub
push
xor
enter
and
lods
inc
bound
and
cmp
jecxz
add
loop
push
mov
daa
out
xor
mov
in
daa
pop
jle
dec
sbb
outs
dec
pop
call
shl
out
in
and
outs
outs
dec
or
daa
neg
out
inc
pop
cwde
pop
in
xchg
and
pop
xor
adc
(bad)
dec
enter
or
dec
inc
enter
out
and
push
push
add
test
push
inc
and
idiv
push
inc
imul
inc
out
or
add
in
inc
add
or
push
les
mov
or
cmp
mov
pop
fiadd
add
movs
out
movs
out
or
ins
aas
mov
mov
add
inc
push
push
and
popa
ins
push
popa
pushf
rcl
ror
fsubr
iret
inc
inc
(bad)
adc
(bad)
fcom
das
sub
or
pushf
adc
or
sbb
les
push
or
add
pop
mov
inc
pusha
(bad)
push
dec
loopne
and
dec
xor
ins
xor
mov
cdq
fmul
or
fxch
jo
loopne
inc
cmp
pop
in
add
push
adc
out
inc
ins
cmp
xchg
push
jmp
sub
shl
jecxz
sbb
jmp
or
cmp
jmp
or
sub
mov
pop
adc
cs
retf
retf
retf
mov
gs
dec
jmp
(bad)
push
shl
ins
jmp
add
push
loope
(bad)
mov
data16
pop
xor
(bad)
jl
pop
pusha
inc
inc
dec
inc
pusha
mov
cwde
lods
inc
add
jmp
push
sbb
add
or
imul
les
js
fistp
push
cmp
js
es
(bad)
in
pop
test
sar
mov
pop
push
addr16
pop
addr16
dec
pop
xchg
inc
or
add
add
adc
add
test
dec
adc
add
add
jecxz
imul
sbb
add
addr16
je
enter
pop
arpl
mov
inc
cmp
lahf
loopne
je
imul
sar
adc
mov
je
imul
inc
movs
das
ret
out
push
push
cld
add
jb
inc
popf
inc
shl
mov
aaa
inc
xchg
je
push
jne
xchg
pop
leave
mov
neg
data16
sub
dec
stos
adc
and
in
je
test
and
enter
test
test
and
addr16
bound
in
xchg
pusha
inc
mov
and
mov
add
or
sbb
(bad)
pop
icebp
jmp
add
mov
icebp
jne
dec
adc
mov
aad
mov
pop
icebp
xor
mov
or
mov
gs
lods
and
xor
pop
repz
repnz
mov
push
repnz
int
mov
xor
sub
nop
inc
adc
daa
lods
jge
repz
cmp
pop
icebp
pop
jns
push
xor
dec
lock
je
pop
ins
dec
inc
dec
lock
push
add
outs
ins
cmp
cmp
in
pop
dec
adc
hlt
adc
add
das
adc
aas
loope
hlt
lahf
xchg
lock
es
inc
push
sbb
mov
hlt
sub
pop
lods
call
mov
in
hlt
sub
push
call
fisttp
and
pop
icebp
push
push
pop
pusha
inc
dec
cmc
pop
xor
jmp
adc
in
sub
stc
das
pop
mul
loopne
push
es
les
sbb
dec
ins
pop
jno
imul
neg
push
jno
test
imul
test
or
das
stos
test
fstp
push
inc
push
and
div
and
or
loopne
mov
repz
stos
mov
sahf
add
jno
cld
clc
cmps
push
xor
add
addr16
pop
int
dec
sbb
out
imul
jecxz
xchg
clc
ja
clc
addr16
inc
ret
dec
xchg
mov
xor
out
imul
sub
clc
gs
or
sbb
jns
xchg
arpl
inc
or
in
clc
sub
push
jl
mov
jmp
mov
or
stc
test
sub
in
das
add
test
imul
test
bound
push
je
push
push
les
shr
cmps
cmp
shr
cmps
or
or
lea
out
dec
and
cmps
push
mov
ins
jae
pop
mov
xor
cld
and
enter
and
inc
loope
mov
sbb
cs
loopne
mov
sub
inc
aad
bound
sbb
scas
sub
adc
test
mov
mov
cld
xchg
xor
add
cdq
daa
mov
shr
std
xchg
setnp
xchg
xchg
retf
daa
add
dec
sub
xchg
mov
arpl
xchg
out
and
push
add
adc
or
or
popa
jecxz
adc
pop
add
ror
and
sbb
push
jno
mov
push
xlat
shr
pop
push
push
leave
jecxz
add
or
or
imul
jae
dec
pop
add
daa
pop
mov
sub
xchg
inc
or
cmp
or
aaa
xor
(bad)
xor
ins
bound
mov
xchg
mov
adc
inc
loopne
cwde
push
inc
and
ret
pop
arpl
push
sbb
test
pushf
movs
inc
push
js
inc
adc
push
shl
pop
stc
or
sub
xchg
sbb
cmp
mov
adc
fwait
mov
add
or
outs
xchg
add
push
push
pusha
lods
test
ins
push
sbb
push
pusha
add
sub
or
adc
or
aad
popf
add
pusha
dec
jo
cmc
test
add
pop
sub
and
pop
pop
mov
xchg
ror
inc
adc
aaa
add
mov
jmp
sbb
add
pop
cmp
jae
and
adc
pusha
cmp
push
and
pop
mov
inc
icebp
add
loope
add
daa
das
add
push
loope
mov
jle
and
ins
pusha
mov
add
psubb
inc
add
and
mov
xchg
ins
in
cmp
add
xor
ds
or
add
add
jle
xchg
adc
push
js
popf
sbb
das
jp
stc
push
cmps
bound
imul
or
xchg
dec
mov
inc
lds
inc
js
ret
or
mov
fnstenv
mov
push
sub
pop
xor
add
sbb
loopne
inc
sub
inc
pop
jne
add
std
inc
add
xchg
mov
add
add
repz
cmp
cvtpi2ps
test
(bad)
out
xlat
sbb
(bad)
add
and
mov
push
push
or
adc
jmp
mov
add
jbe
cmp
or
xchg
test
ins
mov
cmps
push
out
push
scas
jl
pmullw
dec
cmp
dec
mov
dec
sbb
cs
add
push
cmp
jle
add
sbb
mov
push
das
bound
mov
fnstsw
add
loopne
(bad)
cvttps2pi
add
push
cmp
cmps
xor
stos
push
and
les
jo
push
cwde
es
das
(bad)
mov
or
add
movs
sbb
cmp
jb
jb
mov
push
inc
push
loope
out
or
jp
or
sub
pushfw
cmp
popf
ins
or
pop
add
mov
jb
ins
or
ror
das
mov
pop
mov
or
pop
cmp
jno
or
jle
sub
inc
or
xchg
sub
dec
es
xlat
test
xchg
push
enter
add
popa
add
clc
add
pop
xor
push
mov
mov
pop
add
inc
pop
or
or
push
nop
bswap
add
xchg
das
mov
pop
push
dec
stos
fs
mov
mov
push
xor
in
mov
sbb
push
mov
movups
cmp
nop
lds
adc
sahf
pushf
pushf
xchg
(bad)
adc
dec
dec
dec
ins
xchg
mov
daa
daa
and
adc
stos
rcl
sub
pushf
xchg
sar
pusha
cs
pop
test
mov
punpckhdq
add
and
shr
cmp
in
dec
and
adc
or
imul
sbb
mov
je
adc
push
add
push
add
pop
dec
inc
add
push
mov
adc
and
fisttp
add
add
mov
and
jae
and
inc
push
inc
imul
imul
inc
inc
and
inc
adc
imul
imul
inc
pop
imul
push
or
or
iret
inc
adc
jo
inc
pop
inc
sub
jae
movs
sbb
add
mov
add
add
imul
xor
xchg
imul
xor
adc
add
mov
mov
dec
test
push
inc
imul
xor
adc
add
inc
mov
xchg
sub
imul
mov
push
imul
and
mov
jns
add
mov
sbb
jecxz
dec
or
dec
pop
and
sub
test
mov
inc
cmp
fdiv
scas
xchg
jns
bound
or
adc
xor
jne
aaa
push
xor
add
mov
pop
pop
mov
rcl
jnp
xchg
mov
jnp
ins
mov
push
push
sub
mov
adc
in
adc
leave
push
or
ret
xchg
popa
sub
fwait
sub
sbb
inc
xlat
jbe
jmp
sbb
aas
das
sbb
push
and
push
nop
pop
mov
adc
daa
dec
jo
scas
or
mov
push
push
xor
push
add
or
lock
pop
push
scas
inc
sbb
sub
mov
outs
addr16
jo
sbb
bound
imul
(bad)
push
cs
or
mov
and
mov
mov
outs
loopne
and
jl
or
sbb
inc
cmp
or
popa
xchg
or
sub
or
jmp
push
xor
adc
(bad)
sub
das
out
pop
popa
sbb
imul
add
imul
jne
add
cmp
and
dec
pop
mov
clc
aad
sbb
jge
or
aad
cdq
cmp
sbb
mov
sbb
dec
das
pop
sbb
sub
or
ret
push
scas
shl
or
add
xor
push
xor
sbb
xor
daa
cmp
xchg
sub
mov
sbb
bound
inc
repz
push
pop
out
sbb
jl
rol
dec
das
mov
adc
pop
(bad)
jbe
pusha
pop
sbb
daa
and
push
push
lods
add
dec
add
fldln2
add
lock
add
(bad)
mov
dec
push
movs
adc
sub
cld
leave
stos
mov
push
aas
scas
dec
add
dec
pop
push
outs
jb
sub
mov
test
ins
lahf
inc
or
in
pop
test
push
adc
or
xor
das
or
push
jge
and
int
scas
xor
int3
sbb
sbb
mov
adc
or
and
jnp
mov
add
jp
sbb
or
add
pop
lds
jg
add
mov
cld
add
nop
or
inc
or
push
mov
adc
jle
adc
iret
icebp
add
cwde
pop
pop
lods
xchg
sbb
jne
add
cmp
shl
rol
add
jb
inc
ror
sub
mov
shl
jmp
or
cmp
ja
mov
adc
add
ret
popa
xor
scas
xor
push
jmp
pop
call
cmp
je
ret
(bad)
pop
and
cmp
mov
dec
daa
mov
jmp
and
mov
inc
add
ss
mov
xor
sub
xchg
push
add
push
inc
sbb
pop
popa
stos
inc
das
jbe
jo
and
pop
and
jge
jo
push
push
and
cmp
cdq
rsqrtps
mov
and
add
add
add
adc
pushf
xchg
push
sub
push
cmps
movs
pop
fs
add
and
sbb
add
idiv
fld
add
lods
fsubr
xor
or
in
in
xor
or
xchg
les
push
outs
outs
rcr
mov
sbb
xchg
ds
and
and
bound
sub
mov
out
add
mov
or
loop
or
mov
jno
push
jb
dec
sub
xor
inc
mov
gs
js
psrlq
sbb
lock
jge
sub
jecxz
lea
out
ror
xchg
inc
push
(bad)
ds
inc
add
inc
in
pop
and
mov
push
inc
and
cmp
mov
jmp
pop
cmps
arpl
and
loopne
push
daa
mov
mov
das
jno
dec
out
cmp
sbb
outs
dec
add
xor
out
jo
(bad)
jl
jne
and
stos
and
inc
xor
daa
imul
jb
mov
jo
xor
xchg
lock
mov
xor
stos
add
fsubr
cmp
push
xlat
shl
xchg
sbb
cmps
in
xor
or
inc
add
sbb
inc
lds
mov
popa
loope
outs
add
int
sub
pop
pop
jbe
sub
pop
and
pop
mov
pop
push
imul
jl
add
ja
jne
pop
mov
xor
or
or
pop
leave
or
fcmovne
dec
and
fsubr
adc
xchg
sub
pop
adc
nop
js
jb
sbb
jns
add
fcomp
mov
add
sub
adc
leave
add
mov
sbb
jns
test
sub
pop
jb
add
adc
dec
adc
ret
loope
inc
jmp
xchg
xor
movs
mov
mov
ins
test
dec
or
mov
shl
adc
mov
es
adc
push
sub
dec
jae
cmp
xchg
jne
test
add
push
arpl
fld
pop
mov
mov
sub
sub
push
xor
push
or
test
add
scas
pop
std
xchg
and
test
xlat
ret
sub
shl
inc
pop
cmc
add
(bad)
das
inc
sub
mov
das
data16
cld
test
sub
fisubr
or
xlat
push
adc
cmp
fisub
stc
sub
test
jae
add
push
fsubr
dec
pop
xor
sbb
loopne
add
adc
mov
js
add
inc
sub
es
inc
dec
push
enter
mov
cmc
pop
cs
inc
daa
mov
les
mov
xchg
adc
imul
shr
idiv
dec
cmp
inc
mov
fwait
outs
inc
jne
xchg
idiv
das
outs
iret
cmp
out
clc
xor
push
xor
das
inc
xor
add
loopne
and
dec
data16
je
adc
inc
test
xor
xor
sub
pop
cmp
jo
add
jp
shl
sub
div
cmp
pop
arpl
sbb
push
imul
mov
icebp
inc
icebp
mov
sub
dec
test
mov
es
push
push
cld
pop
xchg
test
test
push
add
xor
enter
mov
xchg
push
xchg
mov
imul
xor
shl
sub
xor
xor
pusha
mov
add
dec
icebp
adc
sub
aad
shl
mov
lods
xor
jno
pop
pop
sar
xor
loop
xlat
and
mov
(bad)
aaa
cwde
xor
fld
jbe
(bad)
mov
xlat
mov
and
jae
loopne
pop
and
xor
loopne
sub
mov
xchg
jo
inc
ret
mov
shl
mov
out
lahf
das
aas
loop
js
jmp
or
cmp
scas
xlat
js
inc
add
daa
mov
xor
push
cmp
fdiv
jns
push
xor
int3
xor
adc
ins
dec
inc
int3
xor
mov
or
shl
loopne
daa
pop
cmp
sbb
loope
lea
mov
test
push
xchg
cmp
jle
add
mov
aaa
iret
sub
movs
inc
pop
ret
cmp
cmps
push
sbb
sbb
jle
push
cmp
hlt
stos
or
wbinvd
jns
cmp
adc
push
fdiv
test
rol
cmp
sub
ret
push
cmp
nop
aas
loope
popf
cmp
test
mov
pop
cmps
adc
push
jmp
mov
aad
stos
and
jns
inc
jno
dec
ret
jo
stos
push
dec
cmp
mov
cmp
cmp
inc
or
shr
adc
shl
retf
mov
jle
mov
les
jo
outs
cmp
inc
into
cmc
mul
lds
fstp
outs
push
sub
mov
jo
jecxz
cmp
popa
cmp
dec
xchg
das
push
push
and
jg
pop
add
add
or
adc
imul
and
std
adc
mov
cmp
dec
pushf
push
mov
ds
pop
add
dec
daa
call
enter
fidiv
pop
and
icebp
push
mov
out
xchg
sahf
arpl
adc
cmps
icebp
pop
outs
imul
hlt
and
xchg
ret
daa
(bad)
stos
xchg
mov
daa
stos
add
inc
cmps
test
daa
push
aas
addr16
add
fisttp
dec
mov
loop
xchg
mov
inc
mov
xchg
xchg
mov
wrmsr
inc
jae
enter
ret
add
(bad)
shufps
add
jae
cvttps2pi
or
pushf
inc
sub
js
jno
cdq
pop
dec
push
aad
push
js
add
test
inc
or
dec
add
adc
bound
jle
sbb
inc
mov
push
icebp
mov
mov
or
sub
dec
dec
rol
xor
mov
adc
add
js
sub
sub
sub
ret
or
sub
hlt
add
ror
pop
jnp
inc
pop
adc
test
adc
jnp
mov
push
dec
add
add
aas
push
sbb
test
xchg
adc
add
scas
pop
adc
inc
sub
sbb
call
jns
inc
inc
inc
call
adc
jo
jmp
xor
jnp
or
push
cmovp
je
pop
adc
inc
scas
movs
rol
mov
inc
lea
je
jno
inc
scas
sub
sub
icebp
or
jmp
or
inc
pop
gs
adc
das
das
int3
inc
inc
inc
add
inc
mov
push
mov
or
and
or
mov
sub
and
movs
inc
ret
fisttp
pop
rcl
leave
or
ret
and
dec
dec
sbb
sbb
les
stos
pop
and
imul
es
das
imul
or
xchg
xchg
icebp
stos
dec
cmp
pop
pushf
dec
and
movs
(bad)
jae
dec
pop
popf
sub
pop
pop
sbb
imul
ins
jae
mov
push
fisttp
in
cld
dec
add
sub
push
pop
das
and
jo
dec
sbb
mov
in
cmps
cmp
push
ins
mov
dec
push
jge
mov
dec
pop
pop
aad
jecxz
rol
bound
push
or
scas
call
pop
stc
test
daa
call
dec
dec
push
shl
fsubr
pop
mov
inc
cli
dec
push
and
pop
je
cmp
xchg
out
push
dec
cli
ficom
cmp
in
xchg
out
shld
dec
jns
jb
pusha
stos
clc
inc
push
cmp
cmp
push
aam
push
sahf
pushf
pushf
mov
(bad)
and
mov
mov
pushf
mov
cld
and
jle
inc
sahf
pushf
mov
push
cmp
dec
dec
dec
xchg
mov
jbe
pop
jmp
adc
pop
and
aad
adc
cmp
pop
push
aad
add
or
dec
sub
xchg
pop
jno
add
xor
je
lods
xor
inc
pop
push
xchg
pop
inc
and
dec
adc
sub
pop
ins
push
mov
inc
cdq
cdq
add
sub
mov
dec
dec
pop
jae
inc
or
sbb
cdq
xchg
and
xchg
hlt
adc
das
pop
mov
sub
sub
(bad)
add
pusha
adc
test
mov
inc
or
and
iret
add
mov
xchg
mov
sbb
pop
dec
or
xchg
sbb
add
stos
xchg
adc
jae
movs
push
or
pop
dec
sbb
test
pop
xchg
lods
fld
push
sbb
push
nop
push
xchg
dec
pop
mov
test
add
sahf
xchg
add
sub
push
pop
mov
pop
or
pop
adc
dec
or
dec
push
rol
sbb
pop
sub
inc
adc
pop
sub
xchg
dec
sbb
dec
pop
or
(bad)
mov
sbb
ins
dec
imul
add
xchg
mov
sbb
fadd
inc
add
dec
pop
or
mov
add
xor
add
sbb
outs
mov
jmp
push
push
or
xchg
adc
inc
add
xchg
adc
sbb
je
adc
inc
test
inc
inc
push
cmp
and
jno
sub
sub
adc
and
pop
push
aaa
dec
pop
jno
xor
adc
sbb
cmp
mov
pop
xor
movs
push
inc
sub
rcr
sar
adc
fucomi
(bad)
lock
pop
jg
pop
pop
push
das
pop
cmp
add
lods
xchg
(bad)
pop
mov
popf
and
mov
ret
sti
pop
or
add
xchg
pop
dec
xchg
jno
rcr
ds
scas
sub
push
mov
add
stos
adc
and
pop
mov
or
pop
in
or
adc
daa
(bad)
add
sbb
and
lock
push
mov
mov
add
inc
xor
outs
loop
xor
fldlg2
add
mov
inc
inc
add
stos
lds
(bad)
pop
mov
inc
outs
xor
daa
push
pop
mov
add
pop
pop
retf
retf
add
xchg
add
daa
test
pop
jns
int3
rcr
sbb
fsubr
cmp
add
and
jns
and
add
cmps
pop
int
pop
jnp
jmp
cmp
and
cmps
adc
jbe
sub
daa
mov
pop
out
and
(bad)
fld
push
es
xchg
pop
jg
push
repnz
add
mov
sub
imul
pop
fist
aaa
loope
pop
(bad)
pop
sub
jmp
cmp
lock
inc
sub
test
js
push
ins
inc
add
sbb
aaa
pop
pop
add
pusha
xchg
lock
jo
pusha
arpl
mov
add
addr16
mov
inc
inc
mov
das
jmp
mov
and
pop
xchg
js
mov
mov
dec
and
sbb
push
xchg
mov
cmps
jns
pop
das
jl
xchg
push
repnz
pop
cmp
out
test
xor
pushf
fmul
push
mov
arpl
pop
inc
das
or
add
mov
sub
add
btc
xchg
xchg
pop
fisttp
jnp
leave
leave
enter
addr16
fs
out
push
repnz
or
jns
jb
lds
push
cmp
xchg
into
pop
imul
mov
setge
cmp
aaa
pop
cld
imul
ins
scas
mov
mov
mov
js
loopne
cdq
fidivr
pop
cdq
pop
or
and
adc
mov
inc
mov
int3
mov
inc
mov
xor
pop
and
dec
jne
mov
and
sub
adc
pop
and
and
lds
mov
rol
adc
xchg
and
cmp
push
and
or
add
or
pop
inc
add
jo
or
mov
and
push
jno
xor
in
and
or
mov
rcl
and
inc
or
and
mov
adc
pusha
adc
push
add
xchg
inc
and
inc
sbb
lods
fistp
add
inc
or
cmp
mov
js
xchg
test
add
push
add
dec
inc
add
pop
mov
and
and
and
sbb
pop
nop
and
les
or
cmp
call
and
add
pop
and
cmp
mov
cmp
test
mov
add
sub
pusha
inc
ss
mov
add
inc
or
inc
or
pop
and
scas
mov
and
or
adc
hlt
int
pop
ins
add
push
add
sub
push
and
jne
mov
dec
jl
das
xchg
sbb
cmp
sbb
test
inc
movs
ins
pop
sub
es
(bad)
push
sub
pop
push
push
mov
add
and
and
adc
push
mov
fld
dec
dec
outs
mov
fs
sbb
push
inc
jb
dec
loopne
add
cmp
outs
sub
or
ja
(bad)
dec
jae
outs
sbb
aad
movs
mov
push
dec
test
sub
ret
mov
das
pop
or
movs
js
add
mov
jmp
rol
adc
or
xchg
or
inc
cwde
dec
adc
push
popa
sub
and
or
mov
or
xor
mov
cmp
jo
dec
test
jl
lods
out
idiv
inc
xor
and
bound
into
shr
mov
xchg
xor
inc
push
test
je
mov
mov
and
inc
clc
inc
mov
inc
dec
jne
mov
pop
pop
pop
sub
mul
ficom
mov
cli
mov
or
leave
or
mov
jmp
xor
cmp
cmp
push
sub
sub
(bad)
jne
test
jne
out
sti
mov
and
jmp
sbb
adc
fldenv
and
(bad)
add
sbb
cmp
mov
fild
outs
(bad)
lock
outs
cmp
stc
mov
fdiv
ror
loopne
adc
push
xor
push
mov
mov
(bad)
mov
loope
stos
jge
je
ins
xchg
pop
popf
sbb
scas
xor
adc
mov
imul
mov
imul
fstp
inc
outs
mov
jbe
sti
cmp
or
mov
test
mov
mov
in
scas
mov
cmp
jne
cmp
or
or
outs
push
push
pmuludq
inc
jp
mov
(bad)
or
fsubr
add
dec
sbb
push
inc
js
sbb
shr
das
jne
xchg
in
scas
add
mov
aaa
xor
or
pop
pop
adc
jb
daa
nop
test
imul
jl
mov
dec
or
nop
xor
ja
cli
push
stos
jne
mov
je
jl
lock
cmp
mov
jg
jg
arpl
push
imul
and
call
or
jl
add
outs
jl
and
jo
callw
adc
or
and
push
or
popa
and
push
mov
lock
push
jo
jae
push
pop
or
dec
xor
adc
mov
enter
adc
and
inc
ss
mov
test
and
push
lock
pop
mov
dec
in
pop
outs
or
push
push
add
jbe
outs
sti
and
cmp
nop
clc
sbb
neg
mov
fidiv
xor
adc
inc
cmp
cmp
or
push
in
jb
or
jb
enterw
inc
hlt
dec
cld
mov
jb
and
icebp
push
inc
je
xor
cmps
push
pop
dec
data16
in
jbe
cmps
sbb
inc
lock
lods
mov
mov
xchg
xor
outs
jo
xchg
push
scas
mov
and
div
jp
dec
lock
fcompp
pop
jo
xor
sub
movs
icebp
iret
mov
cli
inc
mov
call
shr
cmp
push
rol
mov
je
call
or
xor
add
cmp
cmps
push
add
or
pop
mov
xor
loopne
je
cmp
je
push
jb
loopne
or
fmul
add
fmul
jmp
dec
rcr
js
dec
sti
add
dec
jg
in
loop
xchg
setge
mov
stos
fild
cmp
xor
out
push
mov
add
and
in
sbb
adc
pop
cmp
mov
call
inc
adc
jne
mov
pusha
pop
fisubr
and
jl
jle
mov
popf
ins
sub
and
pusha
test
xchg
jnp
mov
mov
ror
dec
add
pop
out
loopne
cs
call
shl
sbb
scas
cmp
sbb
rcr
and
mov
pop
xor
rol
jo
adc
mov
call
push
inc
push
xor
fwait
add
adc
lock
test
add
and
adc
inc
add
out
inc
neg
inc
clc
xchg
cld
clc
mov
lock
retf
lock
adc
lock
js
cmp
mov
jmp
pop
rcl
add
ror
sbb
js
sar
data16
mov
add
push
add
sub
test
xor
dec
movs
cmp
cs
add
jl
inc
inc
test
fidivr
push
loopne
pop
mov
cmp
inc
aad
pop
fistp
in
rcl
cwde
scas
stos
fsub
icebp
aam
jno
aad
xchg
inc
jne
push
and
mov
sub
inc
clc
sar
or
push
push
(bad)
retf
mov
jnp
push
jo
xor
aam
rol
ror
add
rcr
or
adc
adc
add
sbb
popf
mov
test
(bad)
(bad)
jmp
and
lock
popa
mov
adc
xor
pop
mov
leave
pop
cmp
pop
bound
inc
cmps
adc
cmps
push
stos
adc
int
jge
inc
or
mov
idiv
adc
out
rcl
pop
pop
aas
lahf
lds
mov
adc
shl
push
aad
and
or
adc
outs
pop
push
loopne
inc
sub
xchg
cld
push
rol
mov
sar
inc
cld
(bad)
idiv
inc
or
mov
jecxz
jecxz
mov
(bad)
cmp
js
iret
jp
scas
push
add
hlt
loopne
inc
adc
popf
in
lea
loopne
xlat
cwde
(bad)
and
ja
or
js
out
cmp
aas
mov
fmul
jge
cmp
sub
fmul
les
loopne
pusha
jnp
je
pop
out
daa
push
daa
fimul
sti
and
xor
mov
xchg
adc
push
xor
cmp
clc
sbb
jp
jns
jnp
inc
add
jb
cmp
jmp
mov
jg
jmp
adc
and
push
fisub
cwde
adc
fidiv
mov
mov
mov
add
add
loop
enter
and
or
mov
adc
hlt
sbb
cdq
add
daa
add
shr
jo
mov
jno
lds
(bad)
pop
mov
movs
jl
dec
ds
test
pop
lahf
cli
lock
sysret
add
mov
xchg
inc
in
or
test
add
cmp
dec
je
ins
and
fdivr
in
nop
inc
jo
shr
and
in
add
out
adc
mov
imul
fcom
xor
mov
repnz
jb
and
addr16
sbb
push
or
pop
mov
(bad)
popa
stos
and
cld
mov
jmp
out
cmp
jge
jg
daa
adc
and
nop
push
push
das
call
cmp
pop
adc
ror
sbb
sbb
push
or
(bad)
sub
or
pushw
push
inc
or
mov
std
mov
jg
std
cmps
sbb
sub
sti
add
xor
inc
stc
add
sub
add
pop
out
enter
mov
fcmovne
jg
loopne
ret
cmps
adc
or
jg
mov
das
mov
dec
enter
jbe
enter
pushf
or
xchg
add
adc
push
les
(bad)
or
loop
movs
pusha
and
cmp
daa
xchg
cmp
test
cmp
pop
cmps
sbb
in
xor
adc
add
adc
daa
mov
mov
cmps
xchg
inc
pop
jo
xchg
xchg
add
pop
xor
inc
pop
in
add
jg
dec
inc
les
in
adc
js
mov
test
add
cmps
xchg
jg
pop
les
daa
call
xchg
and
push
and
pop
adc
loop
inc
cmps
or
add
adc
xchg
jg
test
icebp
xchg
adc
xor
imul
into
test
add
cmps
test
fadd
mov
loop
fist
xchg
int
adc
jg
jb
mov
xor
push
cmp
test
mov
cmps
push
rol
cmps
loopne
and
xor
(bad)
xchg
neg
xor
mov
iret
das
cs
out
in
adc
and
xchg
push
xchg
pop
and
xchg
adc
ja
mov
pop
cmps
dec
or
mov
xchg
cmps
nop
xchg
or
inc
gs
ins
add
pop
pop
mov
les
pop
icebp
stos
arpl
xchg
cmps
ja
cmps
loop
mov
push
shl
add
ret
aas
mov
dec
and
shr
xchg
inc
xchg
mov
push
js
cmps
rol
jns
and
xchg
xor
inc
dec
xor
mov
mov
sbb
jg
cmps
pop
mov
rcr
wbinvd
lea
lea
repnz
pextrw
jle
jb
iret
add
cmp
cmp
add
retf
daa
js
cmp
sbb
dec
cmp
jecxz
xchg
addr16
jb
jb
(bad)
jmp
xchg
out
xchg
dec
cmps
rdrand
and
and
in
outs
sub
sub
cmps
xchg
jb
and
enter
xchg
daa
fs
pushf
dec
add
xor
mov
loop
pop
jno
and
jne
xor
repnz
inc
pushf
or
mov
dec
shl
mov
pop
cmps
fisttp
cmps
adc
or
mov
xchg
jg
adc
push
and
pop
cmps
and
mov
mov
je
cmps
or
mov
inc
or
xchg
iret
dec
adc
inc
fadd
stc
inc
cmps
add
jae
rol
xchg
jg
jmp
push
or
jae
sbb
test
mov
jno
cmps
lods
or
inc
cmps
daa
bound
adc
xor
cmps
movs
adc
cwde
xchg
sbb
cmp
mov
cmps
mov
cmps
or
cmps
or
and
cmps
mov
jno
mov
add
add
add
inc
or
loop
cmps
or
pop
xor
jns
xchg
sub
cmps
dec
(bad)
mov
loopne
pop
shl
xchg
cmps
xchg
and
xor
or
push
and
je
cmc
mov
cmps
dec
xchg
lahf
imul
sbb
pop
mov
push
fcom
lock
cmps
leave
add
push
and
xchg
add
mov
adc
cwde
dec
daa
imul
mov
and
inc
sub
pop
aad
(bad)
xchg
leave
in
xor
xchg
scas
push
vmread
repnz
leave
mov
xchg
jmp
inc
je
pop
or
push
rol
mov
inc
cmp
dec
xor
fdiv
mov
cwde
pop
pop
mov
and
pop
ins
add
dec
adc
test
dec
sub
or
push
xlat
pop
test
adc
sub
and
or
and
dec
add
dec
or
or
cmp
sub
fcom
ss
adc
push
retf
ds
sub
mov
jno
rol
rol
fcomp
mov
push
pop
(bad)
inc
jo
adc
mov
test
or
xor
push
push
mov
mov
pop
adc
sub
jne
mov
ins
sti
sub
fild
test
mov
xor
cmp
and
add
sub
out
inc
pushf
test
sbb
(bad)
xchg
jl
jo
lea
test
ret
cmp
jne
mov
jmp
push
ret
push
(bad)
in
mov
mov
call
add
ins
lahf
inc
mov
xchg
ror
push
fdivr
int
sbb
or
dec
clc
jne
pop
xor
inc
and
outs
lea
jl
inc
popa
add
ja
cmp
jne
mov
mov
out
fild
jbe
xor
out
loopne
or
call
mov
ss
mov
ret
dec
or
sbb
adc
pushf
pop
xchg
(bad)
das
mov
mov
mov
push
lods
add
jnp
cwde
push
aad
cmps
add
push
outs
pop
mov
cmp
and
push
sbb
xlat
test
aam
pop
bound
dec
popf
pop
in
das
or
cmps
mov
xchg
xchg
cmp
cmc
bound
mov
pop
fiadd
ret
adc
mov
inc
les
dec
lea
pop
xor
(bad)
adc
push
cmp
call
inc
in
outs
and
adc
enter
push
push
add
ins
ror
mov
sub
jl
or
(bad)
ucomiss
ins
les
fistp
push
push
cmp
jmp
dec
adc
add
pop
retf
rcl
sbb
popf
lahf
add
lock
sbb
mov
mov
and
jg
mov
repnz
mov
call
xor
add
push
push
adc
inc
aam
push
sbb
add
or
or
add
mov
cmc
jmp
xor
sbb
mov
out
sub
adc
mov
cmp
(bad)
mov
and
mov
scas
sahf
push
add
ja
push
stos
lock
and
mov
xchg
pop
ins
jo
sbb
rcr
add
mov
pop
or
add
push
ins
add
aaa
add
fwait
test
js
cmp
outs
sub
je
adc
xchg
and
mov
mov
add
xchg
call
pop
push
les
xchg
sahf
setle
inc
or
xor
xchg
js
pushf
xchg
sahf
mov
pushf
fsub
arpl
(bad)
pop
mov
cmps
xchg
test
test
leave
sub
adc
xchg
xchg
pop
bound
leave
leave
enter
sahf
shl
in
in
stos
push
mov
leave
sub
scas
setg
loopne
out
lods
xchg
jb
jb
push
jnp
call
xor
out
cmp
aas
xadd
shr
adc
repnz
pop
pop
fimul
push
mov
push
stos
add
push
xor
ss
popf
call
sbb
xchg
sahf
popf
jno
push
add
les
add
xor
lahf
popf
test
scas
cld
fwait
add
push
sbb
ins
push
push
sbb
cdq
and
sub
mov
ror
sbb
inc
std
push
sbb
xchg
push
lods
fadd
add
das
add
sbb
fwait
les
pop
pop
add
jl
call
add
shl
lds
jno
and
add
shl
aad
int3
nop
add
add
dec
pusha
mov
push
pause
adc
sbb
add
inc
int3
add
popf
xchg
xchg
(bad)
repz
xor
ror
inc
add
inc
dec
sub
add
add
xchg
add
add
push
pushf
sahf
add
movs
add
add
mov
mov
add
add
and
dec
add
xor
xor
or
xor
(bad)
shr
sbb
add
mov
sbb
ror
mov
or
push
mov
pushf
mov
add
pop
sub
fdiv
cdq
xrelease
sub
adc
push
cmp
les
sbb
mov
inc
or
xchg
test
add
xchg
pop
enter
sahf
cld
sahf
mov
cmp
sub
jne
xor
fcom
pop
call
cmp
push
or
or
in
out
dec
mov
ds
rcl
jmp
add
ret
int3
mov
pop
or
mov
cmc
add
pop
in
imul
daa
mov
or
mov
scas
add
pop
ret
pop
ret
dec
icebp
cmp
push
mov
push
rol
leave
pusha
(bad)
xchg
pusha
push
sar
fdivrp
fs
xchg
push
dec
push
xor
fisttp
repnz
lea
and
rcl
mov
push
lahf
mov
or
push
fstp
mov
call
xchg
adc
imul
imul
hlt
jb
loope
cwde
mov
or
cmp
das
scas
mov
cs
cmp
add
nop
add
fisub
imul
pop
aad
mov
sbb
or
mov
imul
ins
bound
or
jo
fbld
cld
movs
xchg
mov
mov
xchg
mov
mov
mov
cmp
xor
daa
or
call
repnz
mov
lahf
aas
adc
adc
xor
lock
mov
dec
inc
in
add
add
pop
clc
mov
shr
xor
dec
movs
mov
loope
adc
add
push
in
adc
inc
cmps
mov
mov
sbb
pushf
jo
dec
adc
dec
rcr
adc
add
adc
jb
and
stos
adc
mov
das
(bad)
mov
retf
adc
mov
dec
sub
daa
push
mov
pop
and
jg
adc
xchg
int
add
retf
xor
add
daa
add
push
xlat
pop
std
lods
mov
aas
enter
inc
sub
add
mov
mov
add
cmps
test
sbb
pop
mov
mul
dec
das
gs
jp
and
or
cmps
mov
scas
mov
and
mov
ins
dec
dec
push
sub
adc
in
out
test
stos
sar
mov
and
cmps
std
ins
push
adc
xor
jg
add
mov
mov
and
sbb
mov
lock
loop
sbb
pop
xor
pop
mov
jo
mov
sahf
add
push
repnz
push
cmp
pop
fs
call
inc
pop
fs
mov
push
jb
ins
mov
mov
dec
rol
rsm
pop
dec
pushf
in
or
pop
xchg
rol
retf
dec
ror
repnz
xor
ins
mov
add
sti
dec
ret
test
mov
daa
mov
cmps
(bad)
icebp
daa
enter
lds
(bad)
leave
leave
leave
leave
sub
cwde
dec
sub
leave
iret
add
jb
jb
mov
push
enter
adc
btr
out
imul
pop
cmp
fisubr
push
(bad)
jb
add
sub
lods
stos
adc
dec
pop
or
or
mov
jno
ror
hlt
mov
add
icebp
xor
mov
jo
adc
add
add
ins
push
and
mov
les
rcr
adc
les
push
adc
mov
sar
ins
add
rcl
cmp
push
adc
les
and
lds
jns
mov
mov
bound
sbb
adc
mov
in
mov
adc
mov
shl
adc
and
leave
(bad)
cs
mov
bound
mov
and
shl
or
inc
cmp
leave
cmp
and
cmp
or
adc
add
sub
or
cmp
cmp
dec
sbb
adc
jns
add
xchg
xor
pop
sub
(bad)
mov
test
enter
mov
pop
inc
push
movs
stc
mov
add
movs
mov
add
dec
xchg
mov
or
or
pop
imul
mov
imul
retf
or
xor
add
cmp
imul
mov
mov
xchg
inc
sub
mov
cs
jo
cwde
adc
push
sbb
pop
je
mov
repnz
fdivr
mov
retf
pusha
sbb
aad
pop
pop
outs
enter
jg
xchg
jne
popa
mov
std
jno
in
mov
call
retf
push
mov
mov
das
fist
(bad)
push
or
rcl
or
jne
aaa
(bad)
nop
add
js
arpl
lods
aaa
aas
push
cwde
sub
stc
pusha
dec
int3
xor
cmp
inc
movs
dec
cmp
je
add
adc
enter
ja
cmps
xchg
inc
cld
cmp
rcr
cld
pop
loopne
add
mov
dec
int3
scas
lods
push
or
fs
pop
ins
cld
or
push
hlt
mov
lea
lods
adc
sti
mov
(bad)
ss
xor
mov
sbb
and
push
cmp
sete
cmp
add
out
mov
push
adc
ficom
jno
inc
not
or
or
sti
daa
icebp
aam
mov
out
fadd
in
aas
sbb
(bad)
and
or
arpl
sbb
test
jmp
xchg
mov
mov
push
xor
dec
adc
and
mov
or
adc
mov
nop
pop
sbb
mov
ins
shl
(bad)
inc
imul
sbb
imul
push
adc
mov
mov
lds
dec
fcom
pop
jo
popf
out
push
pop
das
shl
gs
and
popf
into
iret
dec
clc
bound
sub
or
maskmovq
neg
gs
push
bound
adc
sbb
adc
in
jne
jnp
add
pop
pop
jne
cmp
add
add
fadd
cli
mov
fisttp
mov
(bad)
mov
add
clc
xchg
pop
adc
and
jb
sti
(bad)
jmp
dec
test
jle
cmp
jne
or
inc
mov
ret
nop
stc
push
or
add
js
sub
loop
(bad)
scas
or
aas
and
cmp
sub
mov
inc
mov
fnstsw
add
push
rcl
call
and
or
sbb
or
adc
daa
pop
add
add
mov
into
fwait
loope
fisttp
ret
mov
cmp
jbe
mov
ss
lea
or
adc
sbb
jp
add
das
lock
jo
fs
sbb
call
js
das
pop
or
mov
add
scas
shr
data16
cli
outs
in
push
mov
or
xchg
jge
mov
in
push
adc
lods
jne
mov
or
push
fld
push
xor
cmp
dec
jb
mov
jmp
cmp
jle
mov
test
jns
add
sar
jmp
aam
test
and
cwde
mov
inc
jae
jmp
add
mov
add
sti
lahf
adc
idiv
adc
add
dec
cmp
or
jle
test
jmp
push
test
sbb
lea
and
dec
cdq
cld
stc
jns
add
or
repz
pop
ret
sbb
jle
retf
or
or
pop
(bad)
sub
fimul
stos
inc
xchg
cld
and
div
jmp
std
push
call
clc
je
mov
clc
sti
cli
in
mov
or
sar
out
call
test
add
inc
fmul
rol
(bad)
or
(bad)
sbb
aas
xchg
jge
fdivr
mov
cld
mov
outs
cmp
inc
in
ins
push
push
add
(bad)
jns
ds
pop
jge
mov
jle
xor
inc
adc
mov
sbb
data16
sub
add
xchg
scas
fs
aas
mov
dec
ins
sub
jg
xchg
pop
shr
cmc
sub
rcl
add
in
pop
sbb
std
cmp
push
add
or
inc
scas
fsubr
or
or
ret
sar
pop
scas
adc
mov
sub
jg
aam
hlt
mov
inc
jl
hlt
test
cmp
pop
add
call
ss
mov
dec
fimul
std
add
mov
jmp
outs
mov
je
cmp
lea
in
xchg
add
dec
adc
jo
mov
dec
cmp
inc
sub
lods
cmp
jle
cdq
into
add
add
sbb
push
lock
in
cmp
jl
arpl
std
lods
nop
lea
add
loop
add
outs
cmp
hlt
push
ud0
add
add
and
xor
and
and
add
aaa
push
(bad)
jbe
sahf
lds
ret
or
repz
lock
fisubr
jns
add
add
mov
add
and
aam
in
adc
dec
aad
sub
xor
jo
rol
aas
sbb
dec
aaa
xchg
nop
sbb
das
and
test
push
or
test
sub
in
and
call
or
mov
mov
call
scas
jo
ret
mov
test
push
mov
xchg
shr
fiadd
cmp
mov
xchg
mov
pop
add
jle
test
sub
lock
enter
pop
mov
add
adc
(bad)
adc
mov
add
aaa
dec
push
push
mov
cs
movzx
in
sub
sub
or
mov
cmc
adc
jl
aas
add
test
jnp
(bad)
fldenv
or
(bad)
push
je
mov
push
jmp
or
pop
sbb
cld
in
faddp
pop
pop
jle
ja
test
pushf
out
jl
xlat
jno
fcom
cmps
mov
es
loopne
dec
add
add
hlt
xor
aad
dec
inc
pop
sar
inc
mov
gs
outs
inc
jne
lock
sub
pop
sbb
push
gs
test
rol
or
enter
fsub
leave
out
mov
mov
xchg
cmp
jnp
add
js
or
mov
sbb
inc
clc
rcl
mov
and
je
or
pop
or
pop
or
cmp
loope
inc
xchg
add
inc
clc
lods
out
and
jns
mov
add
dec
or
inc
pop
sbb
pop
add
sbb
ins
aas
shl
idiv
jg
(bad)
mov
mov
lock
lea
call
jg
or
pop
add
inc
or
xor
adc
jg
outs
in
add
gs
retf
adc
adc
rol
dec
and
adc
adc
jl
add
cdq
pushf
jge
xor
es
imul
add
xchg
fcomip
das
jns
fucompp
jl
cmp
je
mov
mov
pop
sub
fld
add
mov
mov
inc
inc
xor
sbb
ud2
enter
(bad)
fwait
lods
in
xchg
jecxz
int
lock
add
add
mov
jne
xchg
push
sub
jae
neg
push
jns
test
xchg
(bad)
jp
out
(bad)
xlat
and
inc
fld
xchg
jmp
adc
or
ds
mov
inc
add
add
movs
sub
aas
or
mov
int
sub
mov
pop
daa
lods
lock
inc
bound
sub
inc
mov
cmp
sub
add
adc
pop
icebp
adc
pop
pop
sub
or
push
inc
mov
adc
push
push
sbb
sbb
xor
(bad)
cli
std
lds
icebp
dec
xor
rol
or
fdiv
xchg
stc
jmp
dec
push
push
mov
jmp
sub
popf
pop
jp
xor
cs
and
and
out
stos
adc
or
inc
xlat
inc
jb
stc
add
add
fisttp
scas
adc
pop
inc
clc
add
pop
ror
mov
pop
in
cmp
retf
loopne
push
sub
xchg
dec
mov
jle
lea
lea
out
pushf
add
dec
fldenv
xor
push
das
and
add
lock
push
test
inc
std
fsubp
xor
adc
cmps
je
leave
xor
mov
jnp
dec
pop
in
test
xchg
loopne
pop
movs
push
(bad)
lock
jp
into
cwde
out
sbb
dec
jecxz
retf
sbb
into
add
mov
jo
pop
pop
xchg
push
push
mov
mov
pop
fistp
ud2
sub
ror
test
(bad)
push
pop
or
mov
xlat
in
mov
xlat
fnop
pop
push
adc
call
sub
ds
sbb
lds
or
das
loopne
cmp
push
xor
fsub
mov
add
jmp
loopne
movs
loopne
cmps
shr
ja
pop
mov
and
loope
mov
pop
inc
and
pop
(bad)
jle
mov
jo
adc
jno
jno
mov
loope
pop
shl
fisub
enter
call
jmp
pop
cmps
push
loop
cmp
sub
sbb
push
mov
lods
addr16
sbb
xchg
mov
push
outs
add
movsx
dec
mov
mov
cs
inc
and
dec
ret
ins
push
lods
or
push
sub
enter
add
ficom
out
xor
aam
add
pop
scas
sar
loopne
out
test
pop
sar
(bad)
and
(bad)
(bad)
jns
dec
or
inc
add
enter
add
add
cmp
inc
sti
shr
and
loopne
mov
dec
fwait
add
mov
add
sub
outs
add
out
je
ja
test
pop
pop
leave
mov
inc
sbb
(bad)
inc
es
xlat
sbb
jbe
inc
sbb
aad
pop
inc
and
cmps
scas
mov
inc
cmp
jae
jp
leave
je
arpl
mov
out
btr
cmp
jecxz
ret
fwait
or
push
push
inc
sbb
jmp
and
test
or
inc
xor
out
sub
retf
pop
in
cmp
je
sbb
(bad)
mov
cli
pop
ja
and
bt
jb
dec
shl
mov
loopne
mov
ret
adc
push
inc
cmp
adc
cmc
and
inc
xor
cmp
or
add
js
aaa
shl
nop
pushf
push
xchg
jle
rol
cld
je
pushf
xchg
imul
add
cmp
xor
je
outs
xchg
push
push
jp
jmp
mov
push
cmp
sbb
movs
es
in
mov
shr
lock
add
call
int
push
push
mov
out
sub
lock
mov
and
into
push
sub
pusha
call
adc
fistp
inc
add
xchg
imul
add
push
mov
das
ret
mov
imul
hlt
mov
xchg
ss
jmp
jle
push
push
test
out
xchg
inc
and
in
(bad)
xor
xor
jge
xor
mov
cld
pop
add
(bad)
and
jae
lahf
jmp
cwde
sbb
movs
shr
rol
ror
inc
int3
xor
add
dec
inc
add
push
push
cdq
ror
cld
enter
add
out
aas
or
mov
mov
xor
mov
xchg
add
xor
or
mov
rol
cmp
cmp
sar
mov
jge
mov
and
aam
clc
mov
test
test
je
addr16
push
mov
and
sub
adc
into
test
(bad)
mov
iret
stos
pop
or
xchg
adc
fiadd
scas
pop
add
bound
test
in
sub
and
cwde
or
jmp
xchg
jg
ror
mov
std
out
retf
adc
neg
mov
jg
and
xchg
and
xchg
inc
mov
rcl
les
xchg
loop
sbb
mov
and
or
ja
shr
lds
jns
jne
cld
mov
jmp
sar
cmps
sub
mov
call
add
(bad)
ja
mov
sar
cs
cmps
scas
pop
in
ror
and
pusha
mov
sahf
add
mov
and
fcom
fcomp
data16
scas
fisttp
arpl
pusha
jmp
and
sbb
lahf
push
jmp
inc
pop
sub
push
mov
jp
std
and
or
dec
out
ret
xor
adc
push
clc
sbb
or
imul
mov
ficomp
fdivp
sbb
jl
jp
dec
adc
sbb
stos
inc
mov
cmp
into
cmp
jae
cmp
fmul
push
lds
ret
mov
dec
add
test
pop
xor
or
ffreep
inc
or
outs
test
jbe
pop
mov
(bad)
call
or
jmp
or
sbb
aam
ret
neg
xor
enter
sbb
lods
adc
jge
pop
js
mov
pop
inc
sbb
sbb
js
jl
and
push
pop
cli
sub
or
jecxz
aaa
push
outs
add
call
xor
push
or
or
sub
and
dec
add
mov
popa
aam
rcl
ret
jg
inc
or
js
pop
mov
sbb
mov
inc
jmp
push
jno
jo
cld
ret
je
adc
in
xor
mov
in
mov
pop
leave
mov
dec
or
pop
mov
scas
mov
jnp
jle
and
pop
aaa
or
lods
and
dec
lahf
lods
fsub
cmp
push
or
pop
pop
add
add
nop
addr16
jg
jb
inc
cmp
inc
daa
inc
or
adc
or
fsubr
jne
movs
ret
mov
nop
sub
pop
scas
push
add
pop
xchg
inc
lock
out
test
fmul
dec
fdivr
sbb
mov
stos
pop
clc
pop
inc
icebp
cmp
sbb
pop
neg
xchg
or
and
test
stos
(bad)
mov
imul
test
movs
adc
hlt
movsx
xor
sbb
loopne
mov
in
dec
ins
and
jge
adc
or
and
std
div
push
add
add
sbb
pop
(bad)
dec
pop
call
inc
or
and
fdivr
add
sbb
cmc
in
fistp
jne
shl
in
inc
adc
popa
cs
push
mov
inc
shl
mov
adc
lods
iret
and
retf
adc
dec
push
xor
jo
movsx
mov
pop
and
lds
push
aad
(bad)
and
pop
pop
pop
jg
add
test
clc
fdiv
xor
jbe
push
or
test
or
fs
in
add
add
int3
add
push
add
xchg
dec
outs
adc
push
test
pop
ret
daa
dec
pop
inc
jb
dec
je
mov
dec
or
xor
and
pop
dec
test
stos
dec
adc
dec
mov
mov
mov
sbb
stos
jne
inc
fild
fbld
call
add
inc
sub
jno
jbe
push
(bad)
out
cs
sbb
add
das
sahf
pop
lea
add
cbw
dec
pop
inc
sbb
wbinvd
js
(bad)
int
(bad)
or
mov
aas
mov
mov
fistp
test
or
cmp
xchg
fldenv
pop
or
pxor
inc
ret
iret
adc
xor
mov
das
test
pop
jne
mov
pop
icebp
xchg
je
push
add
inc
clc
cmp
sub
or
out
mov
xchg
sbb
cld
pop
xor
cmp
cmps
inc
cmps
(bad)
push
dec
icebp
jo
push
fiadd
jecxz
and
shr
jge
xchg
loopne
xor
adc
enter
add
add
xor
popf
push
or
mov
inc
clc
inc
movzx
sti
mov
or
repz
sub
mov
sbb
and
enter
inc
sbb
sbb
adc
movs
mov
dec
(bad)
test
sub
push
and
das
imul
push
ret
(bad)
jnp
add
mov
fbstp
and
xchg
jo
adc
test
mov
mov
stc
je
jmp
pop
loopne
inc
clc
(bad)
and
xor
jmp
and
push
cs
in
lahf
ret
test
xchg
push
out
sti
and
imul
push
adc
in
pusha
clc
jl
dec
les
push
inc
cmp
sub
test
nop
dec
inc
pop
out
add
add
add
pop
or
dec
cmp
sbb
sbb
xor
in
xchg
test
repz
loope
pop
and
fdiv
and
rol
int
arpl
mov
and
out
push
in
mov
jge
mov
rcl
mov
inc
jo
into
(bad)
rep
ror
mov
ds
int3
or
mov
daa
cmp
and
xor
pop
jo
retf
call
ret
xor
inc
cwde
hlt
stos
push
retf
inc
hlt
sbb
push
aam
retf
mov
fistp
push
pop
cld
jne
stos
fiadd
daa
cmc
add
pop
shl
jbe
sub
cld
cmovg
mov
stos
cli
fsub
dec
lock
and
mov
sub
nop
dec
cld
xor
add
sub
mov
sbb
or
sar
lea
pop
cs
or
push
push
push
cmps
adc
ret
ret
or
add
mov
idiv
scas
ror
cvtps2pi
(bad)
xchg
mov
adc
jge
or
mov
pop
sbb
or
(bad)
(bad)
or
or
mov
jmp
jnp
xchg
clc
inc
or
data16
adc
sbb
mov
clc
mov
and
inc
imul
and
das
out
dec
cmp
mov
neg
cmps
arpl
(bad)
in
sti
mov
fmul
add
jl
ins
lea
pop
les
enter
rcr
gs
clc
icebp
sbb
cmp
jne
in
ret
push
std
jecxz
jge
and
clc
or
pusha
dec
push
inc
add
ins
xchg
ins
xor
(bad)
shl
in
les
rcl
xchg
jge
ficom
xchg
int3
ins
xchg
je
push
mov
mov
out
sti
fisub
and
in
div
inc
repnz
mov
cmp
push
lea
jl
sub
cmovbe
mov
adc
xor
enter
ja
(bad)
adc
test
imul
hlt
xchg
addr16
adc
xchg
pusha
psubsb
lods
sub
add
inc
ja
adc
hlt
sub
add
and
pop
and
xchg
sbb
test
into
(bad)
mov
(bad)
call
inc
daa
loop
push
test
lock
adc
retf
aam
xchg
and
jno
sub
aaa
mov
test
aad
adc
mov
jmp
repz
mov
add
inc
pushf
outs
sbb
inc
stc
adc
neg
adc
jo
sub
inc
mov
xor
add
stc
rcr
rcl
add
cdq
inc
icebp
or
push
cld
sub
enter
pop
sbb
cld
sub
mov
lahf
fcomp
pop
paddusb
dec
dec
imul
mov
cmp
mov
call
cmp
or
inc
cmps
in
sbb
and
test
inc
fcom
sub
scas
clc
int
push
adc
rol
push
call
iret
call
dec
call
sbb
dec
jb
push
lock
ins
cld
or
leave
cmp
jo
push
adc
add
mov
mov
dec
clc
adc
fdivrp
fdivr
jb
sbb
loope
mov
mov
jae
arpl
push
clc
je
fisttp
pop
std
jl
sbb
fist
cmp
or
dec
add
add
jmp
mov
push
mov
outs
dec
rcr
dec
call
cwde
bound
sub
clc
hlt
out
push
pop
hlt
sub
icebp
call
clc
fcom
xor
in
sti
adc
xchg
push
loopne
xor
mov
cld
push
dec
add
loopne
inc
pop
and
dec
ret
shr
or
xlat
shl
sub
pop
mul
jno
dec
dec
mov
inc
mov
inc
test
(bad)
clts
pop
sar
lock
les
scas
in
add
data16
jecxz
lahf
and
(bad)
xor
xchg
add
das
movs
daa
push
cmp
je
inc
popa
outs
mov
pop
(bad)
cmp
adc
ret
lock
xchg
pop
and
jnp
add
push
adc
adc
add
pushf
adc
mov
push
loope
std
(bad)
test
retf
in
data16
mov
ins
xchg
(bad)
iret
mov
js
pop
sub
pop
lahf
or
mov
int
es
das
lock
mov
pop
idiv
int3
dec
pop
sbb
add
adc
push
es
jl
xor
lods
ret
push
xor
mov
sbb
xchg
lock
push
add
clc
arpl
aas
mov
dec
into
out
ss
push
clc
mov
xor
xlat
or
leave
push
mov
sar
xchg
cmp
sbb
test
dec
out
fist
and
imul
adc
mov
xor
xor
adc
ret
inc
push
loopne
call
loop
add
xchg
inc
lock
sbb
add
push
jns
or
dec
jo
ffree
or
jnp
dec
jmp
lahf
push
pop
hlt
mov
cld
ins
and
or
mov
mov
cmps
sub
int
cmps
add
dec
rcl
(bad)
mov
adc
xchg
rol
sbb
add
xchg
mov
dec
fistp
mov
dec
add
mov
ret
sbb
in
ret
push
add
clc
jg
xchg
jns
sahf
push
je
lea
inc
or
inc
mov
sbb
push
scas
or
je
enter
xchg
pop
jmp
add
mov
movs
push
loope
(bad)
mov
mov
add
pop
pop
test
sub
lahf
mov
mov
cmp
gs
pop
nop
and
adc
push
sbb
or
inc
and
push
sub
lahf
push
popf
push
or
daa
add
daa
scas
(bad)
ret
mov
add
dec
adc
seta
and
call
fadd
and
das
dec
addr16
ds
out
adc
test
mov
jne
jmp
mov
push
xchg
clc
jg
jl
mov
push
or
jne
mov
sub
sar
mov
dec
test
add
lods
(bad)
scas
lds
or
ins
cld
and
jne
jmp
xchg
in
add
sbb
ins
pop
jmp
loopne
(bad)
mov
add
ins
fild
add
clc
jmp
je
cmp
jne
jp
xor
inc
pop
adc
pop
adc
fdivr
mov
loopne
dec
iret
mov
or
inc
mov
clc
push
jmp
(bad)
mov
scas
add
dec
push
xchg
mov
push
adc
xchg
sbb
or
rcr
push
imul
xchg
mov
jne
or
lock
mov
xchg
jmp
ret
pop
mov
jae
test
and
popa
jo
add
pop
xchg
add
add
mov
mov
outs
or
(bad)
jmp
jb
xor
adc
jne
mov
sbb
pop
dec
and
sub
mov
add
and
fimul
test
adc
add
inc
mov
dec
js
jb
mov
mov
cld
imul
jo
cmp
jne
sbb
rcl
aaa
ror
adc
adc
lahf
inc
cmp
in
int
cmps
or
test
and
and
and
shl
mov
or
pusha
bound
adc
popf
aaa
(bad)
fcompp
xchg
dec
dec
fnstenv
xor
(bad)
adc
inc
or
loop
jp
push
sbb
(bad)
mov
mov
dec
(bad)
mov
add
stc
ret
or
outs
push
not
inc
adc
cmp
rcl
or
mov
push
xor
pop
pop
pop
push
cdq
add
and
(bad)
xchg
ja
sbb
sbb
adc
test
addr16
cmp
mov
sbb
(bad)
or
add
sbb
mov
dec
lods
test
aad
xlat
ror
in
sbb
inc
or
outs
mov
ret
push
mov
jb
data16
(bad)
cdq
xchg
imul
iret
add
mov
nop
and
jbe
or
cwde
add
push
push
fimul
lea
mov
sbb
adc
jnp
daa
add
aas
mov
ret
mov
cmp
ss
or
sbb
and
dec
inc
sub
cld
mov
xchg
push
(bad)
ja
scas
cmp
cmp
out
sbb
add
sbb
mov
xlat
(bad)
push
iret
(bad)
xchg
sbb
or
sbb
and
mov
clc
and
clc
imul
cmp
cs
enter
add
jmp
push
add
add
add
lods
aaa
pop
push
push
and
pop
inc
and
cmp
push
cmp
cmovs
xor
dec
mov
push
imul
icebp
xchg
pop
imul
sbb
adc
sub
inc
fadd
call
test
xor
xor
loopne
mov
std
imul
div
sbb
stos
jae
cmp
xchg
test
repz
sbb
lea
pop
push
jmp
rol
add
test
mov
push
add
mov
jmp
add
jns
xor
call
pusha
mov
sbb
jb
dec
je
jmp
fdiv
dec
push
jecxz
push
add
cmp
pushf
xor
and
adc
add
xor
fwait
sbb
cmp
cmp
xor
push
cmp
ins
ja
ins
inc
and
push
adc
stos
inc
inc
ja
dec
push
cmp
dec
(bad)
icebp
and
or
jnp
xchg
mov
icebp
sub
xchg
cwde
hlt
jnp
inc
mov
test
stos
inc
xor
lock
dec
fst
mov
mov
rcr
(bad)
mov
icebp
adc
xor
mov
and
xor
loopne
outs
jl
lock
mov
call
fcom
popf
cmp
xor
xchg
push
mul
aaa
add
dec
adc
adc
addr16
inc
sti
adc
rcl
inc
rcr
dec
lds
push
pop
mov
cmp
push
and
jnp
mov
lds
inc
mov
inc
xlat
dec
and
enter
mov
mov
dec
add
add
pop
add
add
ret
and
mov
mov
int3
test
or
je
jg
mov
add
jmp
inc
jb
addr16
and
lock
out
std
outs
mov
jl
add
lea
jmp
mov
imul
and
add
adc
test
xchg
jle
mov
daa
cmp
call
add
push
or
bnd
mov
xor
push
xor
imul
sub
push
lods
fidiv
fisttp
mov
ins
jmp
lock
lods
es
jne
mov
(bad)
aaa
jo
push
stos
rol
and
inc
mov
mov
mov
jle
(bad)
ret
adc
pop
pop
and
pusha
and
leave
inc
mov
inc
xor
pop
cmp
dec
enter
or
adc
adc
(bad)
data16
mov
mov
push
or
or
out
call
mov
mov
add
xor
outs
mov
call
mov
test
dec
gs
adc
je
(bad)
jg
dec
and
imul
pop
lock
mov
pop
or
or
mov
repnz
mov
mov
add
jl
and
push
imul
(bad)
xor
mov
fmul
xor
pop
cmp
or
call
popf
add
sub
and
aaa
(bad)
jbe
jb
pop
retf
or
and
pop
mov
add
outs
rcl
pop
and
jle
shl
add
daa
paddusb
(bad)
mov
cmp
adc
daa
inc
cmp
sub
or
mov
call
cmp
je
in
neg
bt
test
dec
push
je
jp
stos
retf
lock
cmp
cmp
dec
mov
xchg
push
fcmovbe
cmp
add
adc
pop
sbb
and
pop
xchg
sub
or
add
ins
fistp
pop
out
sbb
rcr
pop
test
and
fistp
jb
jmp
jl
and
jge
sbb
pop
mov
inc
and
mov
push
loopne
arpl
addr16
mov
inc
or
inc
ds
inc
les
call
push
ret
jmp
and
cmp
dec
fisttp
cmps
out
cmp
jg
in
lea
mov
or
inc
jmp
mov
iret
(bad)
ins
outs
pop
xor
or
cmp
call
push
dec
or
aam
jnp
sti
test
jae
cmp
dec
pop
test
xor
cdq
push
push
adc
cmp
push
xor
movs
mov
retf
inc
sbb
jp
loop
or
popa
or
inc
inc
iret
out
push
cmp
mov
adc
sahf
lea
movs
ret
add
adc
push
and
mov
inc
rol
rcpps
rol
mov
jle
or
cdq
aaa
push
sbb
push
add
fucom
add
in
outs
add
inc
loope
push
adc
push
ds
adc
jge
sar
cwde
inc
pop
or
push
jo
imul
ret
push
fs
jns
mov
xchg
inc
adc
jg
jae
xor
fiadd
fidivr
ret
sub
cmp
test
(bad)
inc
sti
jle
push
sub
gs
sub
push
adc
sti
jg
cmp
and
not
aam
sbb
dec
mov
add
jb
mul
test
pusha
mov
and
sbb
cmp
sbb
push
les
pusha
es
sbb
add
lahf
mov
or
cli
ja
jg
add
xor
or
add
or
imul
imul
cs
or
pop
mov
cmps
call
stos
push
shr
or
cmp
cmp
(bad)
cmp
push
fidivr
dec
cmp
inc
out
clc
sub
sbb
cwde
ds
sti
rol
inc
enter
xor
and
hlt
xor
jne
mov
in
add
jle
jb
sub
les
imul
inc
push
push
sbb
sbb
hlt
(bad)
(bad)
inc
cld
iret
push
or
adc
shl
loopne
test
mov
in
inc
xchg
xor
mov
inc
adc
div
sbb
loope
jnp
mov
push
aam
xchg
pusha
repz
scas
sbb
mov
pop
cmp
rol
ss
mov
adc
cwde
fsubr
in
pop
dec
xor
hlt
test
mov
push
and
jp
dec
xchg
shl
dec
pop
push
(bad)
outs
adc
popa
mov
push
outs
ret
pop
inc
jge
pop
loop
add
mov
push
ret
or
sub
mov
(bad)
loopne
fsub
xchg
sub
pop
in
inc
jbe
jne
mov
fwait
mov
mov
and
cmp
and
or
jne
mov
xlat
into
mov
lock
or
jae
add
add
dec
test
add
cmp
sub
cld
adc
in
push
xor
daa
es
inc
jg
les
jl
arpl
arpl
xchg
or
shl
xchg
loopne
loopne
pop
jb
(bad)
mov
pop
nop
xchg
lea
mov
mov
pusha
jnp
jmp
lea
add
lods
mov
and
push
xchg
mov
push
aas
add
jp
push
mov
inc
test
add
pop
sbb
ror
and
leave
jl
mov
test
or
mov
jne
aas
cwde
xchg
sub
or
add
inc
push
add
dec
test
cmp
div
jp
dec
enter
int
dec
(bad)
and
or
mov
pop
lahf
pop
rol
adc
mov
sub
shl
mov
(bad)
sbb
mov
add
add
cwde
push
push
and
xchg
sub
sub
inc
aad
or
lock
dec
push
retf
femms
lock
imul
xchg
out
or
or
sub
pop
daa
lock
jl
mov
push
add
mov
cdq
cmp
jl
dec
inc
jo
push
outs
mov
mov
jmp
xchg
pop
mov
scas
int3
fdivr
sub
xchg
inc
movups
repnz
mov
movs
jl
and
adc
idiv
cmp
push
fist
mov
in
cmp
adc
ret
xchg
mov
add
inc
adc
sub
out
adc
lock
rcr
jecxz
je
jmp
test
push
or
leave
inc
xlat
push
data16
adc
fs
pop
or
push
xchg
aaa
jne
add
mov
das
sub
cmps
shr
sahf
jle
cmp
inc
lock
or
or
jle
mov
xchg
and
aam
inc
adc
push
lds
enter
pop
outs
enter
jne
mov
cmp
(bad)
push
and
xchg
inc
ret
(bad)
mov
mov
push
add
xor
and
cmps
jo
cwde
and
adc
sbb
cmps
enter
sbb
cmp
xchg
add
or
adc
sbb
add
daa
jo
or
call
and
sbb
aas
(bad)
sbb
pusha
test
cmp
into
outs
adc
sub
cmovs
adc
fsub
cmp
aas
or
xor
sbb
cmp
xchg
sub
or
cs
push
ror
adc
nop
mov
jge
add
jle
test
xchg
ds
sbb
mov
out
or
scas
xchg
pop
inc
push
add
push
les
hlt
dec
clc
jo
stos
inc
or
enter
cmps
fisttp
adc
fxch
pusha
and
mov
mov
inc
and
cmp
pusha
loop
adc
and
add
shr
in
push
push
push
cld
fbld
adc
nop
cmovo
pop
mov
cmp
(bad)
push
xchg
cld
push
ror
cli
(bad)
sar
pop
hlt
sub
xor
or
sbb
adc
jl
test
sbb
adc
sbb
pop
shr
std
push
dec
sti
mov
xlat
push
in
mov
xlat
add
push
xchg
xchg
pusha
pop
pop
or
add
mov
movs
dec
or
loopne
add
push
adc
ds
adc
dec
add
mov
push
les
push
cs
lahf
das
mov
xchg
add
mov
add
dec
xlat
mov
mov
fcom
unpcklps
add
or
or
xchg
adc
adc
sub
pop
dec
pop
test
push
ins
add
add
cmp
popa
adc
and
and
push
dec
xor
xor
inc
push
leave
push
pop
mov
mov
ror
sbb
or
mov
sbb
loopne
test
pusha
adc
gs
retf
fimul
add
add
pop
add
mov
or
cmovb
or
mov
popa
imul
inc
sub
push
lea
loope
fst
test
lods
or
ins
jbe
pop
add
adc
sub
pop
dec
pop
inc
mov
out
pop
cmovg
das
popf
add
jbe
fmul
add
ins
jmp
ja
and
push
sbb
sub
clc
rcr
xor
inc
add
and
xor
sub
push
pop
lods
lahf
push
adc
sub
(bad)
xor
mov
mov
movs
push
push
adc
nop
test
outs
lock
mov
call
adc
inc
mov
xchg
dec
arpl
sahf
test
lods
in
sub
ret
pop
pop
pop
lods
test
dec
fs
sub
ret
add
enter
xchg
xchg
out
sub
ret
xchg
test
add
jg
test
cmps
or
add
cmp
xchg
imul
adc
movs
or
test
push
inc
mov
push
mov
mov
pop
call
or
inc
sub
add
add
gs
dec
inc
pop
and
sub
test
add
stos
pop
add
and
retf
shr
mov
sub
dec
or
mov
rol
inc
mov
inc
adc
mov
fmul
adc
and
dec
sub
or
inc
cmp
sbb
punpcklbw
pop
dec
aam
fsubr
cli
sub
inc
inc
and
dec
mov
and
stos
add
imul
rol
push
sbb
adc
and
sbb
and
int
adc
add
and
sbb
add
bound
cmps
jne
push
add
and
cmove
and
add
or
dec
mov
mov
adc
mov
xchg
pop
enter
fsubr
mov
push
shl
sti
das
adc
sub
sub
cmp
add
fwait
lock
dec
xor
or
mov
scas
shl
add
jmp
or
adc
inc
test
mov
or
aaa
pop
pop
push
mov
imul
sub
fst
pop
xor
nop
pop
ds
in
imul
push
sbb
das
outs
xor
push
jo
vunpcklpd
xor
call
add
push
pop
scas
clc
stos
fisubr
clc
sub
popa
sbb
xor
popa
sub
imul
loopne
pusha
(bad)
xor
dec
outs
jae
mov
out
sub
rcl
nop
xor
arpl
xor
jbe
jns
jb
test
leave
dec
xor
fcomp
leave
leave
push
jmp
cmp
repnz
ins
mov
jb
jb
xchg
mov
cmp
sbb
cmp
rcr
cmp
pushf
mul
sahf
pushf
clc
and
add
out
push
xor
add
ss
sbb
add
cdq
fiadd
mov
(bad)
sbb
sub
pushf
sub
cmp
lods
gs
add
xor
repnz
mov
rcl
mov
or
mov
mov
inc
stos
dec
ror
mov
inc
xor
add
push
add
push
and
and
shl
add
or
inc
cmp
or
xor
iret
pop
mov
inc
mov
mov
lods
inc
mov
add
lods
jae
jo
or
add
jae
and
ins
pusha
mov
mov
add
inc
and
or
inc
fadd
jbe
ss
cld
cmp
add
dec
mov
lods
push
ret
mov
mov
mov
push
adc
sub
adc
xor
les
(bad)
and
mov
mov
mov
inc
or
xchg
dec
lds
push
xchg
xor
xor
jno
cmp
sub
ror
fdiv
fisttp
sbb
adc
sbb
out
mov
mov
inc
or
or
sbb
xor
inc
pusha
test
adc
xchg
dec
(bad)
frstor
pop
xchg
push
pop
aas
pop
add
cdq
adc
mov
fistp
dec
pop
test
and
(bad)
sub
dec
pop
push
inc
in
xor
fild
push
inc
scas
test
fs
leave
test
push
push
and
xchg
sbb
xor
dec
cmps
jl
push
daa
mov
xchg
sub
cmps
xor
inc
pop
sbb
stos
jbe
add
popa
out
xchg
pop
ins
dec
popa
and
sub
adc
xchg
bound
adc
or
and
push
int3
mov
push
xlat
pop
inc
and
pop
sbb
rcr
inc
mov
or
pop
add
push
retf
cmps
adc
or
das
imul
loopne
push
dec
mov
retf
adc
sub
mov
movs
pusha
or
(bad)
ror
shl
out
add
dec
sbb
not
cs
or
sub
sti
jns
shr
lea
dec
adc
mov
adc
aas
lods
cs
push
jbe
dec
mov
and
leave
mov
pop
pop
pop
ret
nop
iret
inc
inc
sub
or
icebp
cs
add
inc
mov
addr16
push
add
ret
or
enter
push
or
mov
dec
pop
xchg
xor
and
push
dec
inc
dec
jo
mov
call
push
cmps
nop
inc
call
test
mov
mov
add
mov
xor
mov
jmp
sub
rol
jae
fmul
movs
and
adc
das
aam
sub
jne
aam
std
ins
retf
shl
mov
cld
out
mov
mov
adc
enter
add
or
xor
aas
pop
cs
xchg
addr16
xor
test
hlt
or
push
sbb
pop
xor
mov
dec
dec
add
add
test
pop
jle
enter
movs
in
pop
lds
loop
push
stos
std
mov
and
mov
outs
sti
sub
or
xchg
and
dec
mov
inc
or
aas
test
shr
mov
addr16
clc
or
xor
in
add
cmp
inc
nop
sub
pop
sbb
jge
lea
scas
dec
cmp
(bad)
cmp
test
xor
cmp
mov
hlt
bound
pop
call
das
jg
test
test
jne
inc
imul
sbb
sbb
jmp
push
in
mov
jp
push
in
inc
jmp
sbb
rcr
push
cmp
jl
xchg
push
arpl
push
xor
or
sub
jnp
cmovge
mov
xchg
(bad)
sar
jg
xchg
mov
mov
cmp
mov
push
mov
mov
and
sub
or
pop
or
cmp
pop
mov
add
add
aad
mov
ret
imul
or
out
jo
dec
jae
push
adc
mov
adc
xor
cs
mov
mov
enter
adc
xchg
cmc
inc
jmp
push
dec
or
out
je
sub
pop
cmp
popa
dec
test
cdq
test
mov
cmps
adc
(bad)
pusha
repnz
sub
and
xor
add
xchg
or
mov
cmp
hlt
dec
loop
rcr
mov
or
mov
add
push
push
push
call
jecxz
xchg
test
dec
jae
jg
mov
ret
ins
scas
adc
inc
adc
inc
(bad)
push
mov
cmc
xchg
sub
cmc
loope
pop
pop
inc
cmp
(bad)
push
push
fisubr
adc
pop
cmp
xchg
cwde
imul
repz
sub
cmps
add
mov
std
add
mov
adc
push
adc
add
adc
iret
ins
imul
mov
jo
pushf
scas
icebp
stos
cmp
sub
and
pop
dec
adc
mov
xor
push
mov
push
aaa
pop
jb
push
inc
dec
cmp
ds
add
mov
jo
clc
dec
hlt
aaa
scas
cmp
(bad)
std
xlat
push
and
adc
cmp
mov
dec
mov
jne
pop
or
stos
mov
dec
pop
push
push
mov
dec
jp
es
inc
retf
fldcw
arpl
cmp
jo
add
push
inc
pusha
cs
mov
icebp
aaa
movs
shr
mov
repnz
mov
add
idiv
cmp
aam
push
cdq
sbb
add
or
add
mov
adc
xor
invd
jp
outs
or
ja
mov
mov
mov
mov
repnz
and
shl
mov
and
jl
add
sub
jmp
popf
push
mov
mov
sti
dec
dec
add
add
movs
xchg
sub
push
push
add
push
add
mov
fld
jae
pushf
push
(bad)
loop
aad
pop
add
add
push
outs
rcl
mov
pusha
icebp
jecxz
fild
fiadd
fnstenv
and
inc
test
mov
pop
xor
test
(bad)
out
or
cs
adc
jp
ds
cmp
sub
jge
jge
std
pop
inc
inc
jl
push
js
outs
cmp
xor
cmp
xchg
xor
leave
xor
(bad)
jmp
ja
inc
pop
adc
mov
jne
cmp
or
dec
xchg
popa
adc
cmp
cmp
add
dec
add
or
or
sbb
push
xchg
je
add
pop
xlat
es
bound
mov
sub
adc
and
dec
fimul
sbb
call
sahf
add
imul
xor
mov
fmulp
push
jne
push
xchg
mov
mov
xchg
xor
cmp
jle
dec
jne
stc
imul
inc
sbb
mov
mov
test
in
shl
pop
loope
jmp
mov
jno
clc
and
rol
lods
xchg
push
adc
ret
sub
sbb
std
sub
jl
shl
xor
data16
in
add
push
test
test
shl
cmp
push
aas
shr
fistp
popa
pop
sbb
push
add
mov
push
(bad)
retf
mov
sti
xor
inc
int
lds
sbb
xchg
lock
movs
test
cmp
fiadd
jnp
mov
adc
clc
sahf
(bad)
sbb
dec
rol
jmp
pop
clc
in
mov
repz
mov
sar
mov
pop
mov
sbb
(bad)
fimul
int3
mov
or
push
sbb
in
xlat
and
or
inc
mov
sbb
pop
and
cmp
(bad)
sub
add
ret
pushf
lock
adc
mov
dec
dec
lock
fwait
adc
and
push
jne
pusha
mov
mov
adc
and
fmul
mov
mov
lock
add
xchg
mov
call
nop
mov
es
jg
clc
das
xor
ret
jmp
cmp
xor
and
or
in
push
jns
es
(bad)
pop
sbb
dec
jle
push
push
push
not
cwde
add
sbb
cmc
sub
and
imul
add
aad
jmp
jne
or
sti
cmps
clc
fistp
mov
sub
jae
sbb
jg
and
mov
and
jmp
push
jnp
stos
or
mov
js
adc
mov
retf
push
dec
out
inc
call
xor
loopne
or
or
push
test
jb
cmp
and
loopne
add
fild
mov
and
(bad)
mov
adc
add
xor
fs
call
das
mov
or
jo
push
jl
jo
daa
inc
test
je
fnstsw
out
sar
test
fsubrp
aas
inc
push
jl
hlt
dec
cmp
sub
push
dec
rcr
(bad)
pusha
test
hlt
cmc
pop
dec
sbb
cld
sbb
xchg
iret
data16
into
ss
or
dec
push
cmp
cmc
cmp
dec
(bad)
or
call
cmps
cmp
mul
inc
(bad)
out
shl
outs
jmp
or
jmp
add
push
fs
sahf
lea
jae
call
push
sti
loopne
fsubr
fs
sbb
cmp
pop
mov
das
push
shrd
adc
pusha
js
push
add
inc
add
mov
pop
ins
into
push
cli
and
and
mov
dec
inc
add
sub
test
test
jb
sbb
loopne
outs
jo
imul
call
xchg
clc
sub
jno
push
hlt
daa
push
and
es
clc
iret
mov
outs
mov
dec
sbb
adc
add
or
sub
inc
enter
inc
xchg
add
jmp
mov
lods
jmp
xchg
or
mov
jb
push
test
ds
outs
pop
pop
jo
or
mov
test
dec
rol
mov
pop
pop
hlt
adc
fdivr
cmp
in
adc
and
adc
lds
push
enter
adc
iret
inc
sbb
mov
sahf
xchg
sbb
or
sub
cmps
fadd
and
iret
in
cmp
fwait
pop
pop
clc
sar
or
lea
mov
sub
xor
unpckhps
aam
push
leave
sub
xor
enter
xchg
sub
pandn
or
jne
test
or
inc
xchg
fucomp
out
out
pop
jmp
adc
pop
aaa
je
mov
nop
push
push
lea
pop
out
push
std
loope
push
push
mov
ds
pop
jle
loopne
lahf
jne
inc
hlt
cmp
push
cmpps
jg
fmul
js
mov
add
clc
xor
push
sbb
add
and
adc
pusha
sbb
push
jo
shr
inc
loop
adc
mov
cmp
inc
fbstp
xor
or
sbb
lahf
add
sbb
mov
or
sbb
mov
pop
mov
or
cmp
xor
lock
fsub
aaa
and
jae
out
dec
or
jecxz
inc
in
hlt
adc
add
sub
add
pop
test
sbb
cmp
mov
rcr
and
stos
push
in
cmp
adc
popa
inc
pop
mov
cmp
hlt
pop
cld
jmp
pop
daa
xchg
dec
lods
bswap
jmp
inc
cld
and
adc
ss
sti
fwait
sub
pushf
or
fs
fwait
inc
sbb
add
sti
sub
sub
sbb
popa
or
xor
mov
ret
add
add
shr
sub
and
mov
pushf
jo
push
cmp
push
aam
or
cdq
jno
jmp
jmp
in
pop
dec
in
fstp
push
imul
bound
cs
adc
aam
dec
sub
fild
mov
xchg
add
test
in
add
add
lahf
movs
repnz
adc
(bad)
clc
movs
inc
jo
adc
adc
pusha
ja
ss
add
stos
adc
adc
add
aam
pop
ffreep
fistp
adc
sbb
xchg
adc
or
jne
mov
shl
mov
add
(bad)
icebp
mov
push
cmp
lds
or
(bad)
std
or
cmp
ja
sub
push
inc
sar
jns
add
adc
add
xor
sub
add
pop
push
adc
idiv
inc
and
push
inc
jo
mov
xor
neg
add
adc
lea
mov
mov
mov
cmp
sbb
jae
xor
mov
movs
cmp
mov
adc
pop
cmp
xor
lds
inc
mov
popa
(bad)
push
add
ds
gs
jg
js
inc
push
ret
jnp
sbb
lahf
push
dec
push
ins
sub
sbb
jmp
je
xchg
push
ss
jmp
mov
movs
mov
mov
dec
movs
push
push
pop
ret
nop
xlat
adc
add
ds
cmp
jne
dec
lea
mov
loope
inc
sbb
pop
aas
cmp
add
pop
sbb
pop
adc
mov
mov
test
in
lock
ret
and
test
mov
enter
pop
int
shl
lock
rcr
push
(bad)
cmc
xchg
loope
push
fst
daa
mov
lahf
js
jne
push
jecxz
jne
add
pop
mov
fadd
inc
loopne
mov
test
call
and
dec
fcom
add
push
lea
mov
mov
dec
mov
ret
jne
mov
leave
test
cmp
(bad)
push
popa
dec
add
pusha
pop
cmp
mov
sbb
pop
pop
xchg
xchg
ret
xor
fmul
sbb
adc
pop
(bad)
cs
ins
or
and
sub
xor
lock
rcr
pop
add
lds
in
popa
and
and
jge
and
in
sbb
push
fdiv
jno
inc
inc
adc
add
in
sub
mov
ret
push
lds
ror
jnp
test
pop
rol
shl
daa
jo
inc
sub
test
lahf
sbb
pop
add
dec
sbb
pop
xchg
aad
mov
iret
in
push
(bad)
jmp
mov
pop
cmp
and
in
fsub
and
stos
sub
pop
out
pop
inc
push
jmp
dec
rcl
ret
xchg
cmp
sbb
jo
mov
jo
or
popa
loopne
call
fld
jae
xor
mov
cmc
mov
jnp
(bad)
call
mov
xchg
dec
dec
mov
rol
inc
jecxz
dec
rol
push
push
or
and
fstp
xchg
call
sar
and
add
pop
add
aaa
out
inc
rcl
or
(bad)
ror
fs
lea
sub
add
dec
sahf
pop
push
sub
jns
and
jg
mov
and
aad
jne
cwde
add
(bad)
sbb
lock
aad
dec
out
jae
jmp
mov
pop
clc
jge
jns
js
sub
dec
clc
push
ret
out
hlt
daa
adc
pop
mov
(bad)
retf
setl
push
mov
push
mov
stc
push
xchg
push
inc
sub
xor
sahf
add
(bad)
pusha
hlt
mov
ror
xor
sub
lahf
sub
or
sbb
mov
movs
cvttps2pi
cmp
ja
sar
push
fisub
ds
cmp
pop
mov
inc
gs
daa
mov
retf
mov
addr16
mov
mov
mov
dec
push
add
adc
dec
call
icebp
push
and
shl
enter
outs
in
mov
mov
lea
movs
adc
movs
mul
xor
cmp
lea
imul
neg
adc
pop
add
pushf
mov
sar
arpl
xchg
(bad)
fmul
pop
lea
fadd
or
jmp
cmp
fimul
xor
push
pop
inc
xor
ins
mov
movs
push
in
and
push
adc
jecxz
push
jnp
inc
sbb
add
jb
jmp
mov
mov
mov
cmp
and
daa
push
arpl
lea
test
jmp
inc
sub
push
aas
jns
aas
shl
sti
push
add
dec
out
inc
and
cmc
imul
xchg
inc
arpl
test
mov
test
mov
stc
and
sbb
ins
and
mov
inc
sub
mov
push
push
call
pop
cmps
stos
or
and
jne
xor
cmp
pop
lea
dec
xchg
push
sbb
sbb
int3
scas
and
movs
cld
jno
xchg
add
movs
in
add
rol
pop
sar
cmp
push
cmp
loopne
xchg
cmp
jne
cmps
or
add
jmp
sub
loop
cdq
popa
rol
mov
push
aam
jno
add
inc
mov
push
leave
push
push
test
mov
out
shr
test
fstp
push
sbb
mov
push
and
jae
je
cmp
xor
adc
add
mov
je
cmp
sub
aas
pop
push
fadd
xchg
cmps
adc
xchg
inc
inc
pushf
pop
loope
inc
lock
sub
cs
sbb
push
dec
push
or
aaa
cwde
pushf
push
or
mov
enter
cmp
(bad)
push
add
mov
mov
sbb
jmp
lods
xor
xor
inc
repnz
cmc
cmp
sbb
pop
xor
adc
ds
int
cld
mov
push
cmp
test
pop
imul
push
and
cs
jne
outs
add
jo
cmp
push
add
loopne
mov
or
mov
ins
or
(bad)
(bad)
sub
xor
lea
cmp
push
sbb
and
push
pop
ja
bts
jmp
lds
scas
sub
js
cmp
dec
popa
xor
lahf
xchg
inc
arpl
cwde
daa
movs
cmp
add
in
mov
test
ja
adc
adc
test
dec
and
(bad)
lods
add
cmp
imul
jo
rcl
push
adc
call
cmc
push
ins
cmovns
sub
jb
cmp
lea
sub
pusha
and
push
push
leave
adc
leave
jo
bound
mov
shr
mov
cmps
inc
pop
enter
call
lock
in
cmp
in
xor
and
mov
cs
popa
(bad)
jmp
fstp
or
imul
shr
loope
xchg
sbb
test
and
arpl
(bad)
push
dec
out
add
jmp
mov
int3
add
out
adc
out
lods
sub
in
jno
cmp
mov
dec
bound
adc
movs
rol
out
(bad)
std
pusha
xor
dec
ret
add
movhps
xor
imul
or
out
xor
fadd
mov
fmul
outs
sub
ss
repz
pop
ins
adc
ja
outs
jl
lea
xchg
daa
movs
push
scas
push
mov
int3
fucomi
clc
push
ds
mov
scas
rcr
ins
xor
(bad)
and
or
xchg
sbb
or
in
mov
mov
jae
in
rcr
js
jl
xor
pop
sbb
gs
ins
inc
push
imul
push
mov
xchg
pop
fsub
cmp
ror
loope
jo
pop
sbb
repnz
jo
test
xor
dec
add
test
pusha
jl
hlt
push
sbb
xor
push
and
mov
jl
scas
add
sub
(bad)
mov
adc
pop
adc
mov
and
(bad)
cmp
jecxz
xchg
adc
js
push
inc
cli
or
jno
jmp
sbb
or
rcl
cld
mov
adc
pop
popa
mov
js
inc
xchg
outs
(bad)
mov
repz
pop
or
icebp
std
sub
inc
add
push
xchg
xor
cmp
(bad)
mov
int3
jp
xchg
or
inc
lods
sbb
rcr
imul
add
rol
out
es
movs
or
pop
pop
loop
sbb
pushf
mov
scas
cmp
mov
sbb
inc
sbb
sbb
mov
je
push
mov
push
lock
ins
retf
daa
xor
add
push
shr
add
add
xor
xchg
xchg
sub
sbb
lods
lea
push
or
adc
cmp
out
jle
mov
sub
retf
add
fld
xor
pusha
jg
repz
mov
inc
(bad)
icebp
pusha
aam
dec
shl
or
mov
lods
test
lods
pop
cmp
test
sbb
or
add
loop
test
dec
call
jl
dec
hlt
fucomi
ror
xor
cmp
mov
ret
lock
daa
lock
call
sbb
push
push
jb
sti
loopne
add
sbb
mov
sub
inc
lock
add
dec
lock
sbb
sbb
out
(bad)
clc
push
sub
push
sbb
fsubr
and
mov
mov
sub
aas
sbb
inc
sub
(bad)
xor
mov
mov
xchg
mov
in
call
dec
mov
lds
push
rol
fwait
jge
fdiv
pop
jbe
xchg
pushf
pop
cmp
fwait
neg
or
outs
(bad)
call
dec
gs
jecxz
inc
add
add
xor
in
ds
scas
ror
mov
xor
dec
das
adc
cs
mov
mov
cmp
xor
in
dec
je
lods
adc
xlat
(bad)
jge
or
clc
xor
test
ins
pop
test
not
sbb
sub
inc
clc
lods
ret
inc
jmp
push
mov
lea
add
adc
sub
mov
adc
push
cmp
add
ja
mov
and
inc
pop
imul
inc
or
test
or
leave
je
add
add
or
xchg
pusha
dec
or
pop
inc
mov
adc
mov
push
xor
imul
mov
lea
movs
movs
and
mov
ja
fimul
ret
int3
adc
pusha
pop
loopne
rol
sbb
sbb
(bad)
mov
aaa
jno
xor
shr
lods
pop
lds
(bad)
jg
dec
add
cmp
jle
sub
(bad)
jno
sub
fucomi
fcom
adc
mov
push
adc
or
mov
xor
mov
or
push
xor
xor
lds
push
aam
xchg
jns
int
mov
loopne
or
xchg
loopne
adc
xor
xchg
hlt
xchg
sub
inc
cmp
shl
pop
add
add
nop
pop
xor
dec
adc
outs
pop
push
dec
adc
add
(bad)
jp
sbb
add
stos
xlat
mov
cmp
jle
aaa
mov
mov
dec
add
adc
sub
and
icebp
push
adc
call
sub
inc
push
sub
daa
imul
inc
loopne
or
loopne
loopne
cmp
enter
sbb
popa
mov
push
adc
add
push
mov
mov
add
cmps
fsub
fsubr
fcom
jae
cmps
fcomp
fadd
call
pop
rol
pushf
pop
rcl
sar
jne
jle
xor
js
enter
and
dec
mov
mov
adc
in
adc
dec
mov
(bad)
js
into
jp
sub
dec
aad
pusha
es
outs
xlat
and
pop
js
xchg
imul
jg
test
dec
mov
int
mov
loop
mov
pxor
cmp
les
adc
push
out
(bad)
outs
aam
mov
or
not
and
and
adc
mov
mov
jbe
mov
outs
push
push
into
shl
and
add
pop
xor
adc
add
aaa
out
into
inc
mov
js
xor
lahf
push
and
mov
push
ror
adc
xchg
pop
or
jne
call
xor
pop
and
sub
aas
ficom
stos
test
push
imul
int
xchg
add
jb
jno
sbb
clc
dec
loop
sbb
inc
loop
mov
cmp
and
loopne
pop
cmp
popa
cmp
push
mov
jo
add
mov
xor
in
jg
add
lea
pop
cld
mov
mul
in
cmp
xchg
pop
and
fcom
popf
hlt
mov
adc
mov
mov
push
mov
pusha
jo
js
sub
jae
dec
jo
xchg
jns
cmp
or
sub
push
add
pushf
dec
sar
inc
or
addr16
bound
movs
add
cmc
daa
out
and
clc
sbb
je
adc
or
adc
iret
or
in
add
or
xor
ins
add
cmps
cmp
jge
inc
add
sub
xor
add
jo
int3
cmp
sbb
dec
cmp
out
xor
cmp
inc
ror
sbb
push
push
push
inc
dec
inc
enter
(bad)
cs
pushf
adc
popa
scas
mov
sbb
pop
push
les
sbb
cmp
or
and
jecxz
pusha
lock
stos
pop
push
add
dec
push
xchg
push
adc
out
inc
or
xchg
cmp
mov
and
mov
adc
cmp
xor
(bad)
add
sub
test
pop
hlt
sbb
inc
jmp
cmc
fs
xor
sub
add
ja
adc
ja
push
adc
mov
fwait
add
pop
(bad)
int3
arpl
mov
pop
pop
or
ins
inc
cmps
(bad)
scas
shr
cmp
fbld
nop
test
xchg
cmp
xor
jne
in
cmp
mov
push
pushf
cmp
add
adc
add
cmp
fadd
loopne
std
addr16
cmc
push
jo
cmp
add
inc
pusha
and
pop
pop
adc
das
sub
or
inc
jbe
icebp
mov
ins
or
daa
add
mov
xchg
mov
mov
cmp
or
mov
test
ins
mov
dec
cmp
outs
test
inc
jnp
cmp
adc
adc
arpl
jg
mov
push
and
ins
push
or
(bad)
and
inc
(bad)
or
pop
test
stc
fs
clc
js
(bad)
jbe
mov
imul
or
and
push
call
cmp
(bad)
and
xor
test
push
mov
fiadd
mov
out
mov
cwde
and
enter
cmp
mov
mov
cmp
loopne
push
enter
test
mov
stc
or
shr
dec
js
test
scas
in
test
or
adc
adc
sub
rol
mov
ins
rol
das
fidivr
ins
adc
lods
adc
inc
jg
cmp
and
jg
sbb
call
pop
and
in
fistp
and
(bad)
jg
jg
mov
push
fdiv
mov
xor
or
pop
movs
cmp
jmp
and
cmps
or
nop
imul
jns
push
jmp
mov
mov
cmp
pop
xchg
loopne
push
mov
mov
fidivr
add
repz
mov
adc
mov
ret
div
inc
mov
rol
je
fcomp
adc
push
sub
dec
call
movsx
xor
loop
js
mov
rcl
sbb
stos
and
mov
pushf
mov
lock
loop
mov
ficomp
dec
pop
pop
mov
cwde
rol
inc
retf
jg
adc
dec
sub
and
xor
and
adc
sub
jmp
cld
ja
push
adc
enter
mov
pop
add
les
adc
xor
test
cmp
add
(bad)
push
adc
jns
repz
push
sbb
adc
rcr
xchg
add
or
or
mov
push
and
push
sub
iret
repz
sbb
(bad)
rcl
and
movzx
jl
jbe
out
iret
sti
mov
lea
cmp
push
xor
jae
enter
pop
ins
push
mov
aad
aas
mov
int3
sbb
mov
dec
or
lea
lea
lods
movs
mov
cmp
jmp
test
cmp
add
add
xchg
shr
ret
mov
cwde
pop
add
popf
mov
adc
cmp
dec
cmp
push
fwait
shl
or
mov
pop
push
or
mov
loopne
test
mov
shl
or
arpl
push
fwait
pop
call
stos
and
jmp
inc
add
or
loope
jl
inc
test
shr
pop
test
in
push
inc
sbb
cmp
push
xchg
dec
fwait
adc
xor
xor
lock
dec
aam
add
or
loop
mov
inc
popf
in
ret
add
push
inc
daa
(bad)
cld
popf
or
push
mov
ficom
jns
or
aaa
and
addr16
shl
out
loop
mov
js
pop
inc
xchg
push
test
bswap
cs
adc
push
xchg
push
int3
into
mov
dec
lea
push
popa
ret
jecxz
dec
inc
mov
(bad)
sbb
sbb
or
xor
cs
in
jne
pop
push
daa
push
mov
or
jmp
sbb
pusha
(bad)
cmps
leave
lds
pushf
xchg
cmp
inc
pop
lahf
push
cmp
pop
push
push
pop
ins
bound
add
fst
cmp
xlat
pop
sbb
lds
xor
popa
jl
and
sub
das
and
pop
cmp
sbb
shl
(bad)
test
add
pop
push
lea
jns
lds
es
cmp
sub
ret
cmp
xor
push
xchg
adc
inc
(bad)
push
cmp
daa
and
popa
popf
mov
test
mov
loopne
iret
pop
or
clc
mov
fstp
ret
jmp
(bad)
dec
push
sub
pop
sbb
push
xlat
loopne
pop
fcom
js
add
or
add
xchg
int
sbb
nop
sub
and
jo
mov
fcmovne
mov
nop
push
cmp
sbb
or
fldcw
mov
out
push
or
or
fcomp
loop
sub
dec
adc
stc
out
test
add
(bad)
shl
loopne
mov
lea
or
call
and
fnsave
rol
inc
sbb
pop
call
leave
call
add
lea
in
inc
icebp
dec
pop
sbb
push
push
push
add
mov
bound
pop
push
loop
add
mov
push
or
or
cmp
inc
(bad)
cmp
cmc
sub
call
fcmovnb
(bad)
xchg
sbb
clc
test
in
or
push
popa
enter
arpl
pop
arpl
arpl
or
xchg
mov
push
and
inc
xchg
jne
cmp
push
inc
xlat
popa
div
movs
mov
aam
jg
cmp
adc
push
inc
mov
xor
imul
test
and
sbb
add
and
push
(bad)
fisttp
add
(bad)
aas
pop
cli
jmp
sub
cmp
ret
test
jne
xor
jo
nop
lea
mov
cmp
mov
cmp
xor
clc
inc
movs
hlt
mov
(bad)
lds
pop
and
outs
pop
sbb
inc
pop
test
dec
inc
push
in
xchg
xchg
mov
and
sbb
rol
stc
push
test
jb
fisub
jnp
loop
push
or
cwde
and
clc
fucomip
xor
xor
fistp
jl
dec
lds
je
test
mov
adc
mov
lock
push
push
test
(bad)
daa
jne
outs
or
shl
inc
mov
and
or
add
push
pusha
adc
retf
jae
out
ret
ss
mov
add
xchg
pop
clc
dec
xchg
or
pop
test
fld
pop
and
ins
mov
int3
lock
test
jnp
mov
dec
sar
inc
movs
hlt
adc
xor
xchg
adc
or
inc
mov
and
rol
call
sbb
mov
rcr
add
or
pop
nop
jmp
mov
inc
add
imul
cmp
push
inc
adc
ror
or
outs
jecxz
jne
addr16
pop
sbb
outs
dec
call
dec
jge
call
imul
or
xchg
xchg
pop
sbb
add
mov
fdiv
mov
daa
cmp
dec
dec
mov
mov
adc
add
not
mov
add
add
pop
add
leave
sub
push
jle
cmp
xrelease
popf
into
shl
add
dec
adc
xchg
aam
jge
xor
lods
je
sub
pop
movs
mov
adc
ror
ins
mov
ret
fcomp
xchg
ret
dec
dec
jno
mov
add
lea
std
ds
mov
lock
lods
xor
xchg
fistp
jecxz
int
daa
popf
or
mov
jnp
imul
push
add
mov
and
inc
jnp
pop
mov
push
jecxz
mov
xchg
dec
inc
cmp
jne
and
loopne
icebp
dec
daa
leave
imul
pop
and
xor
xor
pop
xor
rcl
adc
div
jmp
pop
(bad)
dec
(bad)
xchg
or
push
mov
or
sbb
call
es
xor
adc
or
ror
loopne
sub
and
add
pop
mov
pop
mov
or
dec
fst
rol
xchg
dec
adc
xor
jns
or
jb
sub
push
push
pop
jmp
out
xchg
pop
pop
mov
jns
loopne
test
pop
fild
add
test
pop
jmp
mov
mov
fbstp
scas
add
push
cmp
sti
hlt
aas
pop
dec
mov
jae
rcl
inc
add
add
xlat
push
push
imul
lock
jecxz
push
clc
jmp
mov
ret
or
jne
jns
enter
mov
or
add
out
shl
sub
inc
mov
mov
(bad)
mov
jb
push
in
cmp
cmps
mov
push
and
push
or
mov
inc
les
add
(bad)
mov
mov
mov
xor
cdq
das
jnp
fidivr
adc
je
ret
and
push
push
sbb
js
add
mov
sub
aaa
mov
and
mov
or
inc
sub
loopne
(bad)
aaa
push
mov
dec
add
xchg
int3
mov
adc
stos
pop
ret
mov
outs
or
pop
push
jae
jle
aam
in
in
inc
mov
dec
out
daa
sub
lea
mov
mov
pop
jns
sbb
cli
je
mov
sbb
mov
aaa
pop
cmp
enter
fwait
xlat
dec
imul
imul
add
cmp
ja
call
push
dec
sub
lea
jns
jmp
push
sbb
cld
or
add
hlt
mov
xrelease
fmul
jbe
fsub
cmps
xor
das
and
(bad)
dec
jbe
jo
xor
rcr
and
mov
and
or
mov
jmp
test
cmps
mul
xor
sbb
push
inc
mov
jo
add
cmp
jmp
mov
adc
xor
popa
lea
sub
test
or
(bad)
fldcw
fistp
sbb
mov
mov
lods
mov
dec
adc
cmps
arpl
mov
popf
dec
add
mov
setae
data16
sahf
inc
lock
mov
(bad)
loopne
push
adc
and
mov
mov
nop
aas
icebp
test
adc
out
lock
daa
imul
std
push
push
jmp
xor
lds
sti
call
inc
pop
leave
mov
out
pop
jecxz
pop
or
pop
mov
and
das
jmp
lahf
out
sahf
xlat
sub
push
sub
cmp
jns
dec
push
pop
mov
shr
aam
mov
cs
mov
sbb
lea
sbb
adc
aas
mov
and
or
rol
and
rcr
lock
into
hlt
ret
inc
mov
push
fisub
add
or
retf
xchg
mov
and
fcom
push
or
xor
cmp
cmp
or
mov
inc
push
lea
fcom
jge
sub
je
push
cmp
jae
jl
test
lahf
call
imul
jb
je
or
cmp
push
sti
xchg
or
rcr
and
leave
in
cmp
aas
add
sti
dec
push
push
sub
test
or
fstp
fwait
cli
aaa
jb
or
sub
dec
push
cwde
nop
fbstp
shl
sub
les
clc
adc
mov
mov
or
jnp
or
dec
push
test
push
fdivr
dec
fisub
jmp
pop
or
jl
gs
xor
xchg
inc
add
xor
sub
mov
hlt
xchg
imul
xchg
fst
pusha
and
jnp
ss
mov
fisub
movs
cmc
push
xchg
pop
add
lea
and
adc
call
(bad)
int3
call
sub
test
sbb
adc
add
push
in
xchg
(bad)
loopne
pop
add
dec
sbb
mov
mov
leave
clc
in
clc
loope
out
cs
jmp
retf
lea
sbb
push
fisttp
dec
bound
mov
lock
(bad)
shr
and
sar
xlat
inc
movs
push
out
stos
and
test
int3
inc
iret
aam
pusha
shl
or
pop
adc
call
aad
movs
add
mov
jge
jo
(bad)
test
cmp
ret
(bad)
push
add
push
(bad)
cmp
jge
adc
cli
push
inc
push
lock
clc
cmp
jbe
dec
fsubr
jmp
jmp
jne
cdq
or
mov
lock
mov
cmovge
sbb
inc
fld
jmp
ret
jo
dec
push
gs
and
xor
pop
jmp
pop
pusha
fadd
sub
mov
sub
inc
add
rol
int3
and
fadd
inc
ins
and
rep
adc
or
retf
jl
aad
mov
jle
mov
pop
shl
fdivr
inc
or
or
mov
cmp
sbb
and
js
sbb
or
add
(bad)
or
xchg
scas
xchg
or
pusha
lahf
ret
test
xchg
push
inc
out
jl
mov
add
out
std
out
push
or
jmp
stc
push
jb
sub
mov
out
addr16
dec
or
dec
or
push
dec
cmp
shl
std
test
add
add
and
or
add
or
icebp
inc
jge
mov
repnz
add
hlt
jne
sbb
test
push
mov
fldenv
ret
inc
push
test
ror
or
push
push
add
out
jne
and
loop
sti
aas
adc
(bad)
push
mov
mov
mov
aaa
sbb
sbb
sub
mov
or
add
cmp
adc
push
inc
mov
hlt
(bad)
mov
je
push
pushf
cmp
je
jne
popf
xor
and
pop
ret
inc
jecxz
mov
cld
xor
int3
or
push
call
and
dec
and
pminub
pop
sub
push
in
dec
add
sbb
add
mov
mov
cmp
jo
loopne
test
or
sub
jb
add
push
push
jb
or
jb
and
inc
sbb
push
scas
fdivr
or
mov
adc
in
jle
dec
push
xor
cdq
pop
mov
cmp
jecxz
or
shl
sbb
fsubr
and
pop
or
jmp
cmp
(bad)
sbb
leave
inc
push
cdq
fstp
push
or
popa
add
jb
xchg
pop
adc
stos
aas
dec
xor
sti
call
sbb
test
ins
add
adc
add
lea
(bad)
mov
jp
inc
add
loop
inc
jbe
shr
and
xor
add
jecxz
or
je
jmp
add
in
sti
mov
imul
mov
sar
movs
sar
add
add
add
out
adc
inc
inc
jne
iret
les
(bad)
fild
dec
(bad)
fcomp
add
push
ret
pop
inc
adc
sub
push
stos
stos
jge
pop
adc
jo
adc
mov
sub
ja
dec
enter
mov
jmp
xor
sub
lods
pop
dec
dec
stos
std
dec
jg
lahf
cmp
je
dec
je
jmp
and
add
je
jmp
sub
cmp
pop
cmp
mov
jb
xchg
test
xor
mov
sub
adc
shl
mov
mov
lea
dec
repz
loop
call
add
test
add
cmp
adc
ret
stos
test
jo
mov
mov
lock
mov
dec
mov
jbe
pop
repz
outs
jne
dec
pushf
xor
stc
push
jmp
lods
in
and
push
or
cmc
sbb
rol
xor
adc
fisubr
cld
test
add
ret
mov
sub
push
push
lods
mov
inc
sub
or
popf
test
aam
pusha
jl
test
and
or
sub
ret
adc
xchg
xchg
lods
aas
dec
jne
dec
int
mov
mov
dec
push
mov
push
and
cmps
xchg
sbb
sbb
cmp
sbb
mov
iret
add
shl
dec
pusha
enter
dec
and
jge
xchg
mov
push
push
fs
cwde
lods
dec
add
and
arpl
das
rcl
outs
fst
mov
(bad)
jecxz
ins
pop
outs
nop
sub
hlt
inc
cdq
mov
mov
push
xor
in
jge
out
out
ins
push
scas
mov
cs
pop
fsubr
sti
scas
pop
mov
add
jb
ins
and
mov
mov
pushf
mov
jmp
std
cmp
inc
out
add
or
or
int
mov
sahf
shr
sbb
sbb
add
mov
in
cdq
(bad)
scas
adc
jmp
or
add
sub
fld
loopne
fdivr
add
push
mov
mov
push
adc
push
sub
je
in
je
sub
jle
clc
sbb
cs
fdiv
stc
in
mov
xlat
ss
mov
test
cwde
inc
jmp
out
aam
xchg
cmp
sbb
pop
mov
adc
lock
xchg
lahf
fnstenv
leave
ror
fisub
mov
call
push
iret
mov
nop
or
inc
shr
mov
call
cli
push
mov
jb
fist
or
out
adc
icebp
or
push
mov
lds
inc
and
or
pop
inc
mov
fwait
repnz
sub
jb
add
out
push
dec
jnp
out
add
jmp
inc
dec
jmp
add
clc
mov
test
in
or
and
sar
sti
neg
jl
mov
loope
sub
add
add
bt
jae
xchg
mov
mov
sub
adc
push
push
or
shl
cmc
pushf
lea
jl
mov
adc
or
(bad)
fidiv
pop
js
mov
sbb
scas
pop
sbb
dec
sub
hlt
adc
fwait
xor
sbb
aaa
pop
and
mov
sub
sbb
cdq
adc
out
mov
out
add
mov
mov
(bad)
dec
jg
cmp
adc
mov
ret
mov
sbb
push
add
shl
mov
repnz
ret
add
aas
sbb
jb
jmp
mov
mov
push
es
fisubr
loopne
inc
add
jmp
pop
outs
ret
hlt
mov
das
pop
mov
cli
(bad)
pop
and
je
dec
lea
(bad)
mov
inc
in
lea
pop
das
lods
xor
sbb
mov
lea
mov
fld
inc
mov
xchg
xorps
xor
mov
xchg
retf
fsub
lock
mov
inc
adc
add
pop
push
xchg
cmp
lods
es
lds
scas
or
sub
jmp
push
sbb
and
sub
jmp
or
mov
std
loop
loopne
fsubr
mov
mov
inc
mov
mov
xlat
cdq
lds
mov
or
add
pop
fwait
movs
xor
or
cdq
and
dec
sbb
cmp
or
mov
pusha
add
mov
inc
(bad)
adc
sbb
aaa
inc
mov
aad
mov
add
ja
mov
jl
ds
test
xor
inc
xor
mov
stos
adc
test
add
aaa
add
xchg
and
sub
pop
je
ret
pop
adc
push
mov
inc
mov
pavgb
sub
cwde
push
mov
mov
nop
test
out
pop
lods
push
sbb
add
mov
xchg
adc
xor
sbb
mov
dec
(bad)
push
das
jb
xchg
movq
scas
dec
mov
loope
xchg
dec
mov
out
mov
xchg
add
pop
daa
mov
ds
cmps
add
cmps
xor
aam
(bad)
pop
mov
aas
xchg
pop
in
adc
push
push
or
lock
add
push
mov
sub
mov
or
add
sbb
popa
in
(bad)
xor
or
js
inc
inc
mov
sub
dec
popa
ins
mov
or
xor
inc
or
inc
aam
ds
mov
dec
add
ds
mov
fs
cmp
lods
mov
push
push
sbb
sub
adc
mov
inc
mov
int
add
xor
add
(bad)
retf
lock
test
adc
js
dec
push
dec
ror
mov
inc
add
(bad)
daa
xor
sbb
fst
lahf
sub
mov
pop
mov
push
mov
das
mov
push
push
mov
push
pop
cpuid
pop
mov
test
xchg
mov
add
dec
xor
js
adc
mov
js
push
and
mov
loopne
rol
add
pop
sub
nop
mov
mov
add
icebp
mov
and
mov
outs
and
xchg
cmps
cmp
test
ret
pop
hlt
mov
jl
outs
cmps
mov
outs
not
mov
add
in
dec
loope
mov
jl
dec
dec
leave
mov
fwait
jecxz
jb
mov
maskmovq
test
retf
imul
and
popa
ror
bswap
pop
ret
jns
jb
rcr
ret
ins
cmp
cmp
xchg
(bad)
sti
inc
les
(bad)
std
dec
lds
mov
adc
pminub
xchg
xchg
xchg
daa
and
dec
outs
leave
enter
fld
(bad)
(bad)
in
leave
leave
leave
mov
outs
xchg
mov
mov
in
adc
fimul
push
fwait
jmp
mov
ins
mov
and
dec
cmps
lock
loopne
xchg
mov
daa
push
aad
and
or
inc
(bad)
in
push
push
and
mov
xor
sub
mov
add
mov
add
sub
and
dec
adc
test
nop
leave
adc
mov
and
rcl
inc
and
test
and
and
inc
pop
and
xchg
mov
and
inc
dec
push
push
and
add
test
dec
mov
or
inc
push
aam
ds
push
mov
inc
dec
and
jae
nop
push
dec
add
stos
cmps
and
adc
or
adc
xchg
lods
fist
test
mov
inc
add
or
cmp
dec
and
adc
jae
dec
and
sub
mov
aad
and
and
adc
push
mov
push
or
and
and
and
mov
or
add
and
dec
and
mov
cmps
jle
cmp
leave
sub
mov
mov
xor
and
and
xor
add
dec
sub
and
sub
retf
fs
scas
xor
stos
call
mov
mov
xchg
add
add
mov
out
retf
inc
cld
adc
jne
ja
adc
mov
das
cld
lods
nop
stos
jge
xor
pop
adc
xor
mov
call
int
aad
ja
xchg
add
mov
or
cmp
or
popa
call
adc
sub
dec
push
adc
in
push
xchg
enter
add
out
lea
sub
sub
inc
mov
xchg
call
cmp
cmp
test
cmp
and
add
inc
les
rcl
jnp
mov
mov
mov
out
pop
and
xor
out
mov
lock
mov
in
or
pop
in
pop
mov
(bad)
in
lock
mov
inc
mov
fmul
(bad)
iret
jmp
or
out
mov
hlt
jmp
adc
push
add
dec
dec
sbb
inc
xchg
mov
test
mov
(bad)
test
sub
dec
sbb
dec
mov
data16
and
mov
or
push
jmp
sbb
rcl
mov
cdq
or
mov
jnp
xchg
sub
je
pop
jmp
sub
pop
sbb
imul
jbe
pop
or
inc
mov
mov
aad
in
mov
xor
arpl
jne
add
mov
arpl
je
mov
in
(bad)
pcmpeqb
jg
fs
push
jne
lea
ret
clc
fstp
mov
xchg
jb
shl
fcom
inc
fdiv
or
pop
shl
fcomp
ret
or
clc
in
push
inc
xchg
sti
hlt
ret
adc
and
mov
add
rcr
sub
ins
loopne
inc
cld
jns
in
adc
dec
popa
shrd
adc
repz
mov
cli
add
sti
dec
popa
xlat
sbb
jmp
adc
addr16
dec
add
jge
in
stos
pushf
inc
call
xchg
inc
hlt
hlt
(bad)
scas
push
xor
das
test
add
sbb
sbb
jno
ja
jo
or
mov
rol
cmp
xchg
pop
lods
clc
lock
(bad)
sbb
lock
lock
ror
jge
shl
jecxz
sub
xor
or
cmps
mov
sti
sub
dec
popf
repnz
jne
push
push
mov
fadd
hlt
sbb
or
call
or
xor
sbb
push
ret
adc
push
adc
mov
je
imul
adc
or
lds
mov
shl
ret
and
shl
int3
mov
popa
inc
les
jmp
pop
inc
lds
adc
or
retf
inc
sub
jecxz
dec
or
adc
imul
add
fisttp
or
outs
jg
jo
je
mov
sbb
jmp
add
test
cmp
cld
rcl
loopne
mov
sub
sub
xchg
inc
push
xchg
ret
repz
mov
movs
(bad)
fcom
test
xor
lea
arpl
and
mov
repz
dec
xchg
out
dec
add
es
out
push
dec
sub
fwait
pop
sub
or
cmp
fild
ror
fnstsw
add
mov
pop
repnz
jne
push
adc
xor
push
je
pop
pop
stos
sbb
mov
test
push
out
hlt
add
out
and
dec
xchg
imul
retf
push
push
inc
aas
push
add
or
add
dec
clc
in
(bad)
mov
add
add
inc
pop
pop
mov
mov
sub
loope
mov
lea
push
es
xor
sub
push
je
mov
mov
ror
int3
xor
push
outs
fiadd
cli
fs
aam
test
fwait
or
cmp
into
icebp
hlt
inc
loop
rcl
push
and
xlat
dec
ins
push
pusha
loope
pop
xlat
ret
mov
mov
jo
out
jnp
cmp
es
push
ret
sti
lahf
hlt
xlat
lar
xchg
or
cmp
dec
daa
and
inc
pop
idiv
(bad)
or
clc
lahf
mov
jmp
hlt
cs
aam
mov
ins
adc
mov
(bad)
fmul
cmp
shl
add
sbb
dec
or
dec
add
add
lds
shl
dec
cli
mov
inc
add
movs
adc
dec
in
push
or
adc
mov
and
jo
adc
jmp
test
(bad)
or
jbe
mov
or
mov
lods
test
and
arpl
ret
loope
enter
fld
push
pop
movs
push
shr
fimul
push
out
push
sti
or
or
mov
ja
or
mov
pop
xchg
das
mov
ja
in
loope
mov
fisubr
std
fiadd
sub
push
popf
sar
fstp
jne
push
ja
mov
cmp
fstp
aaa
pop
pop
push
cmps
in
mov
dec
inc
add
jecxz
mov
in
pusha
fisttp
or
jecxz
or
mov
sub
push
shl
sar
fmul
and
je
fcmovnb
pop
je
shr
shl
pop
inc
sbb
push
dec
mov
div
fmul
hlt
add
or
dec
sbb
fadd
fcomi
or
dec
jl
jns
jns
rcr
aaa
fidiv
cmp
outs
popa
inc
or
adc
arpl
or
aam
inc
or
jne
dec
adc
inc
mov
pop
lds
sub
push
mov
and
aaa
adc
push
mov
sub
inc
scas
jmp
mov
dec
inc
loope
js
mov
jg
mov
clc
fsubr
xor
dec
add
dec
in
ret
aad
jecxz
pop
sbb
sub
sub
pushf
or
aaa
inc
loope
sbb
dec
aad
push
mov
mov
pop
push
add
pop
pop
add
xchg
lock
jo
loope
sub
inc
and
pop
xor
mov
sahf
dec
push
mov
xor
jnp
mov
pop
cmp
mov
idiv
jo
pop
cmp
jmp
mov
jno
fcom
mov
adc
and
xchg
pushf
jo
or
out
ss
sub
mov
cld
push
out
or
push
push
sub
mov
(bad)
adc
daa
daa
daa
and
(bad)
xchg
xchg
xchg
xchg
out
popf
shl
xchg
leave
les
call
xor
in
or
push
sahf
cmp
jns
out
jmp
jp
out
jmp
jb
sub
into
ins
jnp
lock
aas
movsx
icebp
pop
push
jmp
test
push
xchg
add
pop
mov
adc
mov
pop
xchg
dec
add
mov
fadd
adc
pop
jno
sbb
fist
cmp
xor
ret
test
and
jp
mov
cmp
setbe
or
ret
push
dec
ins
add
fild
push
lods
loopne
adc
or
and
in
push
mov
lds
or
ret
sub
rol
push
sub
and
and
fist
fwait
add
inc
pop
fist
add
push
rcr
sub
mov
xchg
call
sub
pop
inc
or
fwait
jmp
adc
push
cld
mov
std
jae
nop
sbb
lods
outs
and
add
enter
jae
adc
xchg
stos
sub
or
jno
pop
lods
sbb
nop
mov
inc
std
or
dec
std
inc
push
cmp
lds
add
mov
sub
std
nop
adc
push
adc
std
or
std
adc
inc
(bad)
std
jge
add
add
adc
or
std
nop
mov
push
jns
or
nop
jne
std
movs
mov
xor
xor
sub
das
nop
inc
pushf
in
sub
inc
hlt
test
inc
loope
ss
mov
(bad)
mov
nop
xor
or
xchg
push
mov
and
pop
fistp
pop
loopne
movlhps
inc
fs
lahf
cmp
pop
fisttp
rcr
call
fisttp
sbb
push
and
fdivr
test
sbb
dec
daa
inc
gs
xor
aaa
adc
dec
push
pop
mov
in
sbb
jg
lahf
out
xlat
(bad)
out
jb
xor
cmps
sbb
sahf
adc
popa
jb
sub
sbb
or
jecxz
mov
cdq
cmp
bound
pop
mov
retf
bound
add
adc
icebp
push
sbb
inc
fld
jmp
fisttp
sub
xor
sub
enter
xor
mov
push
iret
pop
xor
pop
mov
adc
sub
jmp
xor
and
out
(bad)
xor
les
ins
cmp
or
add
xor
push
mov
cmps
cmp
aaa
xor
lock
pop
xchg
cmp
test
push
cmp
repz
repnz
add
push
inc
sub
or
dec
xchg
lods
push
inc
and
adc
rcr
mov
or
fist
pop
jo
sbb
js
add
loop
pop
ja
nop
inc
lock
mov
(bad)
or
mov
or
jmp
call
xchg
xchg
adc
push
cwde
sbb
dec
sbb
jle
ja
pop
dec
lds
adc
or
add
loop
jmp
stos
ss
add
fld
dec
adc
xor
mul
adc
addr16
adc
leave
or
nop
call
mov
in
je
add
in
xor
inc
js
fcomp
dec
icebp
je
adc
sbb
repz
sbb
mov
lock
repz
push
or
adc
xor
xchg
adc
scas
movs
stos
xor
and
add
push
imul
inc
adc
sbb
out
mov
and
push
call
pusha
mov
dec
and
sbb
inc
push
test
or
or
pop
adc
jmp
lds
and
pop
popa
mov
scas
rcl
(bad)
lock
xor
rol
cmp
adc
inc
dec
xor
adc
rcl
cmp
adc
inc
or
sub
sbb
bound
jp
mov
fild
adc
add
cmp
loopne
popa
cmps
cmc
sbb
clc
and
adc
retf
adc
ror
not
test
les
fmul
mov
or
dec
mov
lock
xor
fadd
mov
mov
(bad)
jbe
in
cmp
in
bswap
push
cmp
ja
int3
sti
and
sbb
add
jbe
cmp
cmp
xor
xchg
and
pop
adc
cs
sbb
inc
push
clc
lock
push
ror
jmp
aas
xchg
sti
les
mov
sbb
adc
dec
xchg
push
sbb
(bad)
jle
pop
mov
cmp
inc
ror
jo
or
xor
out
pusha
sbb
cli
push
adc
and
push
dec
shl
or
mov
call
add
cmp
(bad)
push
mov
sar
mov
push
add
loopne
enter
fiadd
mov
lea
dec
(bad)
in
pop
mov
xchg
push
xor
leave
mov
dec
fmul
(bad)
aam
test
mov
test
retf
addr16
push
xchg
jmp
pop
scas
jp
push
rcl
mov
push
xchg
int3
cmp
sahf
push
mov
and
dec
push
push
dec
push
add
xchg
add
jle
push
lds
xchg
sub
cld
sub
sbb
jb
xor
in
push
sub
push
adc
add
adc
jl
or
or
xor
mov
bound
out
inc
inc
fstp
retf
jg
pushw
inc
cmp
push
adc
and
pop
lock
jp
into
sbb
mov
lock
mov
fcomp
and
out
aam
push
popf
dec
popa
push
std
cmp
jne
cmps
nop
xlat
fxch
ins
(bad)
xchg
sub
mov
and
push
push
add
mov
cmps
(bad)
shr
cmpxchg
jge
push
pop
shl
cmps
mov
mov
(bad)
mov
stc
out
fnsave
je
cmp
or
mov
push
adc
push
lods
push
aad
in
ins
je
xor
mov
(bad)
cld
pop
sub
and
pop
(bad)
dec
icebp
stc
dec
pop
xor
add
xchg
hlt
xor
or
outs
jg
xchg
ret
mov
or
sbb
cmp
jne
or
ret
jle
cli
pop
jne
aas
loopne
cmp
mov
inc
push
mov
jnp
cdq
(bad)
mov
rol
xchg
and
out
or
adc
cld
fsub
and
jae
xchg
fidiv
jbe
mov
push
or
or
rol
sbb
push
in
inc
add
int
pop
jnp
adc
sbb
adc
imul
or
mov
in
pop
pop
mov
je
mov
xor
sub
pop
sbb
test
pop
dec
cld
fbstp
or
add
add
or
mov
test
sub
mov
cmp
mov
ror
push
lea
nop
pop
sti
and
jo
jmp
pop
dec
pop
pop
inc
or
imul
mov
dec
(bad)
mov
inc
movs
and
or
cld
xor
and
inc
jge
ja
ja
add
daa
dec
cld
mov
fsub
jmp
mov
xchg
hlt
adc
jo
xchg
nop
or
add
dec
test
push
mov
js
outs
cld
push
jo
and
cmp
pop
add
xchg
mov
fist
out
adc
adc
cmp
add
inc
adc
inc
or
pop
clc
add
ret
mov
sub
sub
addr16
lods
adc
ss
frstor
inc
add
jmp
xchg
mov
mov
ret
sbb
pop
je
and
ret
ja
arpl
inc
sub
fsub
sub
xor
jne
adc
add
mov
fcmovnb
fnstenv
cmp
sahf
ja
add
or
pcmpeqb
and
or
pop
scas
enter
shr
cmp
bound
aas
fnsave
nop
dec
push
jg
push
out
ret
nop
or
and
xor
lgs
(bad)
jmp
ja
add
add
enter
popf
in
popf
ret
xchg
adc
fistp
jge
adc
inc
shl
cli
dec
popf
jg
jne
adc
or
leave
pop
pop
dec
sbb
and
xor
repz
into
outs
scas
lock
add
add
lock
mov
aam
loopne
(bad)
xor
test
test
push
adc
aas
clc
pop
sbb
sbb
add
sbb
push
rol
adc
add
push
clc
xor
out
addr16
(bad)
nop
ret
mov
jmp
push
mov
sbb
inc
test
in
shl
cmp
stos
jb
aas
clc
push
cmp
mov
mov
lods
add
inc
adc
adc
loopne
mov
call
cs
xchg
adc
loopne
pop
xchg
in
mov
and
je
mov
add
jae
dec
arpl
ins
adc
inc
pop
xchg
add
or
add
retf
test
rol
cmp
sub
cmp
nop
add
lea
inc
ja
or
adc
xchg
pop
push
imul
pop
test
jp
sbb
add
or
cmp
or
bswap
fmul
popf
inc
std
sahf
mov
xor
mov
repz
jnp
push
lock
hlt
test
icebp
xor
rol
mov
cmp
repz
and
push
mov
or
xchg
add
xor
mov
cmp
fcom
push
jmp
in
or
mov
pop
push
cs
lahf
inc
xor
inc
nop
scas
inc
dec
mov
loopne
dec
test
xor
sub
(bad)
and
(bad)
or
in
dec
adc
es
push
dec
pop
icebp
and
sbb
cmps
add
test
jne
dec
aas
sub
and
hlt
mov
sub
js
addr16
jmp
inc
cs
ret
dec
shl
pop
ret
pop
xchg
into
shl
sbb
movs
and
in
addr16
push
sbb
push
jo
push
adc
mov
adc
add
adc
pop
inc
jl
xor
add
jle
adc
call
dec
xchg
dec
push
fisttp
pop
xor
xor
xlat
sbb
xor
xor
pop
push
sub
test
pop
test
adc
sbb
cmp
aam
pop
mov
sbb
outs
xlat
shl
retf
rol
push
shl
cmp
dec
(bad)
addr16
hlt
lsl
outs
push
aas
(bad)
or
xor
or
aam
add
pop
cmps
inc
push
sub
fadd
dec
gs
(bad)
outs
aam
push
out
fcomp
imul
add
mov
xchg
and
xchg
sbb
cmp
dec
in
mov
inc
sbb
sub
pusha
rol
cld
push
ror
inc
pop
sub
into
jmp
mov
mov
mov
test
adc
push
push
pop
shr
or
xchg
inc
sbb
adc
out
add
ja
pushf
push
sub
sub
xchg
fldcw
push
xchg
nop
or
aas
xchg
mov
js
pop
test
jle
and
jae
jge
cdq
call
fcmovnbe
pop
xor
jge
lea
or
das
hlt
in
push
pusha
sbb
sub
add
or
xchg
cmc
dec
mov
loopne
movs
xor
je
and
iret
outs
jnp
mov
dec
cmp
pop
push
push
jge
pop
and
xchg
xchg
inc
pop
inc
and
mov
push
aad
ret
cld
int3
sbb
and
mov
inc
cwde
fwait
jecxz
cmp
xchg
sar
add
cmps
xor
pop
xor
inc
(bad)
mov
and
icebp
add
inc
das
je
add
je
add
sbb
push
push
jo
cmps
pusha
add
rol
fisttp
inc
popa
or
add
outs
mov
jns
jg
aas
in
dec
out
pop
arpl
dec
push
add
xlat
dec
je
popf
xor
mov
fsqrt
aad
std
pop
or
es
dec
mov
push
mov
test
cmp
sub
sahf
add
pop
sbb
mov
loope
xchg
std
sub
and
pop
xor
push
mov
xchg
mov
mov
inc
add
dec
add
cs
pop
repz
pop
pop
or
cbw
pop
push
sbb
dec
cs
inc
and
xor
out
sub
psubsb
es
jb
jae
pop
push
rcl
sbb
mov
dec
xor
add
cmps
scas
scas
hlt
xlat
hlt
out
mov
add
gs
push
jo
dec
idiv
loope
mov
cld
push
or
aas
jmp
or
push
adc
cdq
sbb
xlat
fdivr
mov
jne
mov
retf
push
or
stos
or
inc
mov
cs
les
(bad)
lods
adc
or
sub
mov
or
ret
sbb
or
jo
sub
pop
test
inc
inc
pop
sti
mov
adc
scas
ds
jl
mov
into
push
imul
je
pop
aad
inc
sbb
mov
and
mov
out
mov
addr16
push
lods
or
push
sbb
or
add
mov
push
or
jnp
adc
test
and
inc
jne
xor
cmps
dec
loope
push
dec
push
sub
dec
loop
and
enter
mov
popa
pusha
xor
test
pop
inc
and
push
dec
test
ja
nop
mov
mov
enter
mov
push
or
and
or
sbb
push
popf
out
and
cmp
mov
push
popf
fld
pop
mov
or
add
push
mov
xlat
pop
inc
sub
jns
xor
push
dec
mov
dec
pop
inc
mov
jo
or
test
xchg
push
test
push
xor
adc
pushf
sbb
es
mov
in
aaa
and
inc
adc
cmp
pop
test
jne
out
add
movs
daa
dec
xchg
int3
pop
std
iret
fadd
mov
and
add
dec
add
adc
sti
scas
mov
cmp
jl
lea
shr
and
pop
add
mov
mov
xchg
je
adc
xor
mov
dec
in
or
sbb
adc
pushf
add
pop
xor
xchg
fsub
add
pop
lock
or
and
into
xchg
inc
pop
pop
pop
push
sbb
cwde
jo
xor
xor
fld
pop
cmp
mov
mov
mov
sbb
push
mov
mov
pop
jmp
sbb
pushf
sbb
popa
(bad)
in
(bad)
pop
pop
pop
xlat
xlat
sbb
cmp
sbb
shl
dec
jp
loope
lahf
inc
pop
adc
add
add
push
mov
or
sub
pop
das
adc
jecxz
dec
inc
add
ror
jl
or
rcl
push
lea
jg
push
dec
cmp
inc
xlat
cmovge
cmp
push
pop
call
ret
out
out
mov
and
xchg
jb
adc
xor
push
enter
adc
lods
inc
or
and
(bad)
push
fimul
sbb
in
dec
in
inc
adc
or
inc
sahf
out
ficom
mov
jns
add
add
adc
add
adc
inc
rol
scas
mov
pushf
popf
add
lahf
aam
daa
movs
adc
loopne
stos
push
sbb
add
or
inc
or
pop
add
inc
add
pop
pop
push
xor
jmp
aaa
xchg
or
or
or
push
pop
push
mov
fst
dec
jecxz
add
(bad)
xor
dec
add
pop
xor
out
iret
mov
ins
and
jo
cli
mov
inc
bound
xor
sub
hlt
mov
xor
gs
jmp
dec
cdq
sbb
or
jmp
or
sbb
inc
pop
jecxz
push
je
ret
cmp
dec
test
jl
inc
xor
cmp
inc
add
xchg
dec
pop
stc
inc
dec
jne
push
dec
sbb
add
sbb
dec
adc
mov
je
mov
iret
inc
fstp
daa
or
xchg
xor
sbb
inc
or
push
int
mov
ja
xor
js
sbb
inc
or
or
push
rcr
dec
cmp
add
xor
xchg
movs
xchg
es
dec
ss
loopne
rol
stos
loop
xchg
push
adc
adc
dec
jg
dec
sbb
sub
xchg
arpl
or
fiadd
fisttp
ins
fsub
xchg
or
(bad)
popa
sbb
ret
pop
mov
jmp
push
push
sbb
xchg
pop
push
mov
nop
jmp
mov
push
add
mov
or
and
dec
push
or
or
add
add
or
loope
fsubr
or
add
or
mov
push
ss
pop
lahf
sub
sbb
int3
pop
aaa
sub
test
or
hlt
ror
jbe
mov
mov
add
or
xchg
hlt
mov
pop
aas
mov
dec
cld
or
pop
jo
inc
inc
daa
xor
sbb
pop
fwait
in
and
popf
or
mov
push
popa
sbb
sahf
cmc
(bad)
jmp
or
in
mov
add
lea
dec
and
push
imul
loopne
add
inc
mov
pop
leave
push
test
inc
aas
sub
add
in
and
add
fiadd
inc
cmp
and
inc
bound
fisttp
fistp
sbb
addr16
aaa
sub
aaa
lahf
ds
cld
inc
push
cmp
fimul
je
fmul
push
je
inc
outs
lock
imul
xlat
mov
cmp
pop
lea
mov
or
and
pop
aam
cmps
mov
mov
clc
rol
add
and
xlat
push
mov
repz
sbb
retf
xor
adc
sti
test
and
and
inc
scas
push
stos
rcr
inc
pop
icebp
add
add
je
add
mov
or
imul
aam
adc
sbb
sbb
xchg
mov
dec
test
sbb
movlps
add
xor
ror
cmp
mov
fadd
add
adc
jmp
sti
mov
aas
jle
jmp
inc
xchg
iret
stos
adc
and
add
scas
push
push
jb
aad
dec
leave
adc
outs
cmp
jle
cmp
rcr
add
xchg
adc
push
cmp
jno
loope
rcl
ja
adc
hlt
lods
sbb
aas
test
fcom
dec
push
add
inc
dec
add
or
cmp
adc
neg
mov
add
in
mov
fcom
add
push
pusha
mov
shr
pop
jmp
test
cmp
mov
inc
out
adc
add
xlat
(bad)
adc
jecxz
mov
add
ret
inc
jmp
loop
dec
adc
or
aad
or
sbb
or
adc
ja
ja
sub
sbb
(bad)
xchg
cmp
retf
adc
retf
mov
inc
cli
mov
mov
inc
or
add
pop
div
in
adc
movs
cs
jg
mov
mov
in
(bad)
(bad)
dec
push
fadd
push
push
pop
(bad)
lock
mov
fcomp
and
pop
in
sbb
add
xchg
mov
xchg
pop
int
(bad)
sub
imul
push
jp
loope
or
push
jle
and
jle
dec
add
and
push
dec
inc
loopne
in
mov
call
lods
mov
int
xor
sub
shl
ret
mov
xor
icebp
lea
stos
sub
xor
rol
pop
xlat
push
mov
xor
pop
ins
push
aam
aaa
fdivr
not
and
jmp
dec
lahf
fs
inc
add
inc
jge
adc
push
frstor
sub
add
add
mov
mov
xor
or
add
xor
add
rcr
sbb
rcr
imul
imul
and
jl
call
shl
dec
(bad)
sti
xlat
cli
push
and
fcomp
inc
or
xor
clc
sub
aas
dec
sub
add
sbb
or
sub
ret
(bad)
popa
mov
lods
pop
adc
dec
les
cmp
or
and
leave
adc
or
xchg
pop
pusha
fistp
pop
inc
retf
sti
push
dec
push
scas
sub
add
mov
add
test
add
add
mov
add
add
push
aad
jne
mov
push
adc
movups
fidivr
ins
shl
popf
addr16
xor
dec
aas
or
jnp
pop
mov
adc
and
xor
or
sub
mov
and
inc
inc
pop
jb
jnp
cmp
xor
mov
or
pop
inc
and
inc
pop
lods
add
out
dec
and
jo
cld
aas
mov
(bad)
dec
loope
jecxz
xchg
out
pop
push
call
in
dec
jecxz
xchg
mov
inc
mov
jmp
and
or
jp
outs
mov
inc
mov
pop
sar
inc
pop
fcomp
sub
pop
dec
inc
popa
sbb
add
xor
js
sbb
fs
dec
dec
dec
or
imul
rcl
mov
sar
cli
xor
jp
ret
push
and
or
xor
push
and
pushf
and
sbb
(bad)
cmp
dec
sbb
enter
mov
movs
xor
rol
adc
push
sub
mov
jne
pusha
gs
addr16
or
aaa
outs
loop
sub
jp
outs
ds
sti
std
and
jae
gs
sbb
add
stos
je
push
xor
arpl
push
dec
shr
icebp
cs
ret
mov
mov
scas
(bad)
loope
pop
push
ss
in
int3
rol
aas
dec
clc
push
lock
jp
call
and
fcmovbe
mov
xor
add
ucomiss
xor
in
or
icebp
add
xchg
mov
inc
inc
pop
pop
daa
dec
das
test
mov
push
push
or
dec
xor
xchg
imul
inc
dec
cld
ds
push
sub
mov
mov
call
je
loope
scas
pop
pop
je
push
les
push
ret
mov
pop
outs
sub
fwait
inc
into
ins
push
pop
adc
(bad)
call
xchg
(bad)
cmp
push
lea
xor
jbe
add
ds
sub
sti
xor
fadd
or
add
dec
neg
in
mov
and
add
or
lock
cmp
mov
add
mov
fcom
add
dec
push
or
xchg
cmp
push
add
and
mov
lods
mov
jmp
cmp
dec
inc
(bad)
xor
pop
mov
or
iret
dec
jne
cmp
leave
push
push
mov
or
xchg
loope
or
(bad)
jne
inc
jmp
dec
cmp
repnz
add
lock
pop
add
sbb
cmp
icebp
je
mov
fdivr
mov
std
cmp
ret
sbb
adc
jae
dec
mov
sub
add
xor
fisttp
add
mov
retf
add
add
and
imul
dec
call
and
call
lea
fcmovb
inc
cmps
or
cmp
fstp
je
xor
pop
popf
out
dec
cld
push
or
push
dec
jns
scas
outs
pop
fisubr
add
mov
lods
test
addr16
pop
stos
push
cdq
pushf
dec
and
pop
mov
push
cld
mov
dec
mov
ja
cmps
and
cld
push
or
add
cmp
xor
cld
das
inc
or
stos
dec
data16
ret
loopne
push
or
sbb
mov
xchg
adc
mov
lea
mov
push
aas
fcomp
sub
rcl
push
or
xlat
sbb
xor
or
dec
and
mov
or
aam
jne
js
ret
pop
(bad)
cmp
or
jmp
mov
dec
or
cmc
(bad)
push
ja
jnp
and
fst
and
jge
cmp
adc
cvtps2pi
add
add
xlat
add
push
scas
pushf
cwde
lods
inc
sbb
sbb
(bad)
fsub
xchg
rol
add
mov
call
cli
xchg
sub
mov
mov
(bad)
or
inc
retf
xchg
aaa
push
aas
adc
mov
adc
push
cld
daa
movs
inc
outs
add
sub
sar
dec
add
fstp
jo
sbb
daa
adc
loop
or
add
mov
fiadd
xor
jne
fnstsw
cld
dec
jmp
push
lea
jae
sub
inc
adc
add
ror
mov
jo
adc
inc
out
xchg
adc
loopne
pop
ret
push
xchg
in
ror
sub
sub
lahf
mov
cmp
push
push
sub
adc
cwde
sub
fs
push
adc
sub
clc
or
loopne
sbb
scas
call
sub
cld
adc
adc
mov
push
inc
call
mov
or
test
add
je
sub
add
in
push
ret
cmp
jle
cwde
ret
mov
loopne
add
sub
push
gs
sub
push
jne
mov
inc
and
cwde
shr
test
out
in
mov
repnz
ins
or
and
aam
push
lods
cwde
call
in
stos
jmp
inc
jmp
and
scas
inc
inc
loopne
xchg
mov
rcr
js
xor
mov
cmp
mov
scas
push
or
and
add
cli
jbe
in
xchg
out
ret
add
mov
xor
pop
pusha
cmp
or
fwait
mov
call
mov
ja
dec
mov
jecxz
fwait
xchg
in
rcl
pop
cmp
stos
push
adc
sub
add
(bad)
jmp
mov
pop
jl
dec
fwait
add
push
push
sahf
lea
push
or
xor
(bad)
loopne
call
or
inc
push
xor
subps
jno
adc
ja
push
hlt
jae
xchg
popf
dec
cmp
in
leave
and
in
sub
adc
sbb
adc
fcom
imul
gs
cli
sbb
(bad)
in
test
sbb
add
loop
in
adc
xor
mov
loop
ror
les
add
adc
jns
aad
(bad)
aas
data16
push
mov
shl
add
xchg
sub
nop
xor
test
jbe
jp
dec
dec
das
jns
mov
lock
adc
cld
mov
add
xchg
push
xor
dec
push
enter
pop
das
pusha
hlt
sub
dec
lea
push
pushf
jp
rcr
fst
adc
jo
imul
ror
mov
lock
cmp
mov
inc
mov
push
shl
out
jmp
rcr
mov
or
je
sub
inc
cmovg
mov
mov
jno
mov
mov
ret
mov
add
sub
cmps
sbb
inc
call
ss
mov
repz
mov
xchg
add
and
and
loop
mov
lds
mov
sbb
dec
add
aad
jb
push
cmp
clc
adc
add
pop
fucomi
mov
inc
loopne
add
jne
adc
inc
clc
repz
sub
or
inc
xchg
add
jge
adc
cmp
mov
xor
inc
test
or
xchg
or
ins
test
(bad)
rcl
push
lea
nop
inc
retf
jae
inc
fnsave
adc
mov
cmp
xor
and
inc
push
shl
lock
stos
fcomi
jne
adc
and
xchg
sbb
dec
inc
xchg
jmp
push
push
test
mov
pop
xor
xor
out
(bad)
dec
pop
ret
and
inc
cdq
loope
mov
lahf
xchg
loope
xor
pop
xchg
pop
or
shl
das
jns
ret
popa
lods
lock
stc
cld
sub
popa
cld
add
mov
sub
je
mov
lahf
adc
cmp
xor
push
ss
cmp
add
shr
mov
rol
call
(bad)
call
or
cwde
out
push
or
add
test
or
inc
cli
fucomi
ret
and
call
jb
inc
pop
imul
in
sbb
push
fnstcw
test
xchg
sbb
scas
ds
xchg
push
add
cld
(bad)
fisub
mov
inc
fsub
adc
outs
mov
add
xchg
pop
test
daa
fwait
inc
or
xchg
ss
bound
shr
jns
shl
(bad)
aad
inc
xor
aam
fbld
pmaxub
into
lahf
xor
or
mov
jnp
lea
es
sub
psrld
push
sbb
test
lock
std
xor
push
cli
xor
dec
cmps
shl
mov
fsub
fsubr
add
test
test
popa
enter
sbb
int3
and
mov
mov
sbb
aam
arpl
in
aam
or
imul
add
jnp
inc
inc
pop
inc
nop
dec
sub
pop
push
and
pop
inc
pop
or
fdivr
or
cmp
sub
jno
adc
adc
add
sub
addr16
adc
xor
call
mov
pop
dec
loope
shl
leave
sbb
(bad)
xlat
pop
mov
mov
push
mov
cmp
sub
sbb
(bad)
inc
or
std
lock
add
dec
adc
add
jo
fwait
sub
test
mov
push
mov
pusha
sbb
lock
xor
ret
add
cmp
sahf
mov
movs
test
push
inc
add
ror
pop
fild
adc
sbb
sbb
pop
mov
test
push
scas
and
lods
or
mov
xchg
ret
mov
jle
sub
fbstp
jmp
inc
sub
daa
ror
pop
inc
pusha
les
inc
scas
or
add
sbb
sub
mov
push
xchg
stos
mov
add
icebp
sbb
enter
inc
nop
lahf
and
test
xchg
sbb
aas
mov
icebp
(bad)
cmp
xor
mov
xor
xor
sub
mov
push
dec
mov
scas
enter
lea
push
nop
lods
imul
or
(bad)
cmp
dec
jbe
retf
push
add
pop
sti
stos
or
adc
fiadd
bound
sbb
adc
adc
add
(bad)
cmp
out
(bad)
gs
or
sbb
adc
push
gs
pop
js
ins
das
test
lea
pusha
mov
jmp
or
cmp
int
sub
xchg
sbb
push
inc
and
ret
aaa
aam
adc
daa
jmp
test
sub
inc
sbb
iret
adc
mov
call
imul
add
cmc
add
pop
jecxz
call
adc
mov
sub
pop
psubd
inc
hlt
inc
mov
cmp
jge
(bad)
mov
jmp
test
mov
cmc
stc
add
or
test
push
adc
pop
xor
or
js
mov
outs
mov
les
xor
or
xchg
inc
fist
xor
push
in
cmp
pop
mov
pop
adc
cmp
and
push
push
or
ret
jo
and
adc
mov
dec
mov
add
or
push
push
loopne
mov
cmp
cli
pop
(bad)
fadd
cld
ss
fisub
mov
push
test
xor
dec
adc
inc
in
dec
sbb
pop
test
aam
arpl
gs
cld
stos
add
push
cmc
push
dec
cld
adc
jnp
or
in
cmp
and
sub
jle
dec
mov
adc
cli
loopne
jge
mov
into
push
js
or
xor
push
cmp
xchg
mov
sub
sahf
imul
ins
xchg
xor
or
adc
add
movs
je
pop
lea
adc
mov
mov
inc
cmps
(bad)
or
call
bound
add
adc
mov
mov
dec
mov
jmp
inc
mov
retf
add
dec
push
lahf
xor
out
ins
dec
arpl
mov
or
lods
inc
rcr
ss
mov
pop
ret
jmp
inc
dec
jne
inc
push
and
mov
test
add
mov
or
(bad)
fdiv
sub
daa
lods
dec
pop
push
sbb
mov
jmp
fidiv
push
loopne
add
or
mov
xor
pop
or
leave
inc
daa
inc
mov
push
and
fimul
bnd
dec
shl
daa
test
push
and
cwde
test
arpl
sbb
add
outs
ror
cmp
adc
push
and
mov
push
movs
ja
sub
mov
inc
cwde
or
inc
xor
pop
retf
clc
sub
outs
adc
adc
push
inc
and
loopne
mov
pop
or
pop
pmuludq
dec
jl
rol
fwait
adc
xor
sub
adc
popf
add
jnp
stos
push
aaa
adc
lea
push
loope
adc
adc
cmc
hlt
cld
or
pop
mov
(bad)
mov
adc
hlt
pop
mov
xor
add
inc
nop
ret
nop
sub
cld
xchg
xchg
mov
xchg
jb
jl
push
inc
inc
push
pusha
xchg
mov
jbe
adc
fist
dec
pusha
je
mov
je
push
jo
adc
mov
retf
(bad)
push
enter
push
sub
push
mov
and
pop
or
adc
inc
mov
dec
jmp
les
add
push
jecxz
daa
jle
add
or
inc
xchg
pushf
sub
jb
dec
xor
xor
xchg
push
xchg
pop
and
or
or
or
mov
imul
jg
or
pusha
mov
jns
ins
mov
push
and
sub
in
fimul
imul
cmp
mov
mov
(bad)
or
in
adc
in
mov
out
xor
mov
mov
lock
sbb
js
rol
sub
dec
pop
test
mov
into
or
xchg
xor
dec
ror
push
and
jne
inc
and
retf
js
mov
jmp
xchg
popa
in
cmps
adc
call
ins
test
pop
mov
and
add
jae
les
inc
mov
inc
int3
dec
aas
add
in
mov
or
fadd
pop
sti
scas
and
daa
cmp
jl
repnz
dec
jb
add
sbb
pop
add
icebp
and
add
push
xor
mov
and
les
push
and
and
xchg
add
push
out
dec
sbb
out
mov
push
popa
call
in
jb
push
sbb
xchg
push
leave
jns
cmp
cmp
in
and
adc
sbb
inc
xchg
fist
stos
xchg
adc
inc
mov
inc
mov
sbb
and
cmp
mov
sti
inc
jl
leave
inc
fcomp
fild
xchg
xchg
jbe
add
and
or
mov
xor
movs
inc
nop
pop
bound
or
movs
or
loopne
adc
inc
ret
inc
xor
cmp
js
mov
ror
dec
clc
imul
jg
xor
lahf
push
enter
nop
sbb
inc
xchg
sbb
xchg
or
and
loope
cmp
pop
dec
lahf
nop
pushf
in
inc
pushf
sbb
sbb
dec
push
inc
push
inc
ins
dec
dec
adc
pushf
call
dec
lods
pop
cmp
and
or
scas
movs
fdiv
mov
pop
inc
mov
adc
push
pop
jbe
or
leave
sub
repz
push
jb
inc
pop
jge
adc
and
inc
ins
inc
ins
add
inc
repnz
inc
add
pop
push
cmc
add
test
xchg
dec
clc
push
test
leave
dec
push
inc
test
pop
add
inc
and
inc
enter
js
adc
cmp
clc
sub
push
jo
and
test
push
jmp
push
or
xchg
xor
mov
pop
div
or
inc
in
movs
adc
xchg
rcl
dec
fdiv
mov
sbb
daa
lods
adc
add
and
dec
inc
hlt
test
add
xlat
lea
and
hlt
repz
out
push
dec
cmp
jmp
test
jne
or
mov
shl
inc
gs
dec
mov
fild
pop
mov
add
dec
add
mov
in
gs
sbb
mov
or
pop
das
fadd
push
sub
loope
pop
sbb
adc
inc
arpl
jae
adc
xor
and
mov
shr
fldln2
icebp
rcl
pop
cmp
mov
pop
adc
inc
add
pop
and
lahf
fist
pusha
and
inc
popa
sbb
test
fidivr
sbb
cmp
jle
add
or
mov
and
retf
les
popf
test
or
hlt
int
clc
adc
mov
and
sub
pusha
push
sub
cmp
cmps
ja
ds
cmp
jmp
std
or
retf
mov
xor
in
or
mov
cmp
shr
add
add
adc
pop
or
xchg
bound
mov
dec
or
js
call
aad
outs
ret
push
jmp
inc
add
fbstp
in
dec
push
pop
add
loop
lds
add
sbb
mov
mov
rol
icebp
push
jae
inc
cmp
or
mov
xchg
lods
add
mov
mov
shr
inc
in
and
sub
add
sbb
or
lock
add
add
lods
adc
mov
lock
ret
xchg
inc
xor
sbb
imul
jg
out
add
outs
imul
lods
dec
push
mov
sahf
sub
mov
not
lea
mov
loopne
adc
push
mov
in
mov
dec
lea
pop
push
xor
or
mov
test
push
or
pop
dec
cdq
mov
mov
dec
aaa
imul
shl
(bad)
aas
outs
or
test
fst
push
xchg
in
pop
xor
ret
push
call
or
loope
inc
call
cmc
fwait
dec
lds
cmp
jne
xor
sub
imul
add
mov
adc
mov
lock
loope
push
dec
mov
adc
adc
or
ins
fstp
lea
dec
add
xchg
retf
dec
push
movs
out
mov
cmp
gs
sbb
cwde
add
ins
fst
outs
cwde
add
addr16
mov
cwde
add
dec
aaa
push
add
or
das
sub
or
mov
scas
sbb
mov
and
dec
add
sub
loop
push
adc
aaa
adc
inc
jb
bound
dec
push
or
aaa
jle
add
mov
cwde
add
(bad)
and
stos
bound
or
fisubr
pop
aaa
call
lea
test
pop
push
push
je
or
mov
jl
sub
(bad)
int3
scas
mov
dec
mov
push
dec
fdivr
inc
es
mov
lods
push
outs
mov
not
mov
jne
pop
loope
sub
pop
pop
pop
aas
mov
xor
sbb
ror
ret
fcmovne
adc
arpl
rcl
test
jg
test
push
sbb
loope
lahf
cmp
lea
pop
lods
nop
sub
ss
call
mov
sbb
add
mov
mov
je
arpl
inc
xor
shl
aas
les
sub
jns
dec
xchg
or
outs
xor
add
sbb
ficom
jecxz
push
jne
and
call
or
sub
retf
xor
dec
pop
mov
add
add
jne
mov
sahf
fdivr
out
mov
or
stos
add
jnp
aas
pop
add
push
jo
pop
enter
arpl
add
movs
imul
jmp
ret
nop
fbld
inc
pop
daa
(bad)
mov
push
add
repnz
push
mov
clc
mov
mov
pop
xchg
mov
dec
push
cmps
cwde
cmc
or
fistp
das
push
mov
cmp
jo
mov
adc
push
or
test
dec
add
push
adc
push
pop
das
xor
push
push
shr
add
jmp
jbe
add
push
cmp
lea
ds
push
mov
inc
inc
sbb
push
jmp
jmp
outs
add
push
add
pop
sbb
pop
nop
adc
stos
dec
or
fisttp
inc
jg
(bad)
rol
popa
das
adc
popf
call
inc
sbb
and
mov
ret
jbe
(bad)
push
pop
sbb
bound
push
push
sub
pushf
bound
pop
mov
out
out
mov
push
icebp
test
pop
ret
iret
cmp
cmp
cmc
les
pop
ror
movs
mov
movs
pop
xchg
icebp
inc
add
popa
imul
rcl
pop
mov
push
mov
sub
push
or
nop
imul
lods
imul
pop
add
repz
push
push
fdivr
add
jo
mov
loop
jmp
aas
dec
pop
push
aad
mov
rol
push
or
xchg
bound
xchg
pop
cdq
or
nop
xchg
in
js
adc
or
outs
jp
jge
mov
aam
pusha
ins
mov
pop
or
pop
or
adc
(bad)
pop
pop
pop
loopne
add
jb
daa
jns
cwde
pop
mov
add
out
inc
or
out
repnz
inc
enter
adc
add
cmp
pop
and
pop
imul
leave
sub
add
sbb
nop
pushf
sub
jno
pop
mov
mov
pop
pop
or
or
pop
pushf
dec
sahf
or
xor
sbb
call
or
call
repnz
add
add
and
adc
xor
or
add
mov
and
push
ja
mov
inc
or
cmps
sub
movs
jae
loopne
dec
xor
or
daa
xor
shr
jb
push
fs
jae
sbb
dec
push
movs
test
das
or
cmp
js
je
dec
cmp
rol
loope
je
and
or
das
jle
sbb
icebp
jb
pushf
fs
test
push
add
loope
adc
je
push
inc
mov
push
enter
sbb
sbb
xchg
and
pop
add
xchg
dec
mov
das
addr16
dec
jbe
add
das
push
adc
adc
mov
test
push
add
das
mov
mov
nop
pop
imul
or
lods
jg
rdtsc
add
xor
mov
les
or
jecxz
jg
shl
adc
pop
jmp
imul
jnp
and
sub
in
sbb
addr16
mov
inc
add
mov
and
iret
fadd
arpl
jno
jp
out
(bad)
or
iret
adc
lods
loope
cmp
jge
xchg
jp
sub
pop
mov
pop
jmp
ret
push
and
das
sub
scas
xchg
mov
push
loopne
or
ror
and
aad
cmps
xor
aad
dec
or
push
push
push
pop
pop
movs
sbb
stos
mov
jmp
cmp
cmp
xchg
cmp
aam
xor
int3
cld
dec
jo
xlat
cld
cmp
outs
ins
cmc
out
rol
xor
sub
push
add
pop
ins
or
std
mov
xchg
mov
or
sbb
loop
ins
xor
mov
pusha
push
or
les
int3
xor
ins
cwde
inc
push
rcr
push
das
outs
push
test
push
jno
mov
loopne
dec
inc
jno
inc
dec
jle
push
sbb
inc
and
inc
pop
dec
push
xchg
outs
push
jae
push
jb
jle
mov
test
das
outs
test
sbb
hlt
push
add
call
aam
daa
outs
ror
outs
cmp
cmps
push
push
jg
adc
adc
inc
lock
sbb
jo
or
shl
(bad)
mov
test
in
call
icebp
dec
dec
jo
je
iret
ins
or
pushf
push
shr
or
je
mov
sub
sbb
push
jb
cwde
jg
xor
or
dec
inc
jb
in
jg
xor
and
dec
inc
imul
outs
repz
sahf
sub
push
dec
lea
push
lea
cmp
jae
cli
xor
jo
xchg
pusha
pusha
mov
popf
hlt
add
dec
sbb
pop
test
cmp
add
jnp
enter
xor
inc
inc
cmp
and
dec
and
push
loopne
dec
cmp
xor
jecxz
rcl
(bad)
je
add
xlat
sub
inc
push
mov
sbb
aam
adc
ret
inc
add
lea
ror
mov
loope
icebp
push
jp
or
and
add
sub
adc
pop
cmps
mov
jl
mov
mov
add
inc
pop
in
repnz
jo
add
ret
dec
test
daa
ins
pusha
sub
push
jbe
scas
(bad)
ja
mov
les
mov
int
and
pushf
emms
mov
pop
dec
jnp
js
xor
jge
pop
pop
aaa
je
test
js
mov
pop
dec
js
xor
jl
and
test
or
xchg
add
jle
pop
mov
pop
repnz
mov
push
ror
mov
dec
loope
pop
jp
fwait
xchg
add
mov
mov
inc
push
and
mov
xchg
sbb
jl
jl
enter
and
jns
adc
test
(bad)
xlat
in
mov
in
push
daa
cwde
xor
jo
sbb
pop
and
lock
mov
popa
bt
das
pop
ret
or
das
jle
test
add
retf
test
xor
jle
cmp
repnz
xlat
cwde
add
or
neg
psrlq
jmp
cmp
pop
and
jbe
mov
inc
dec
add
add
dec
and
and
(bad)
dec
dec
rol
pop
and
(bad)
push
xor
out
or
or
xchg
sub
nop
das
or
or
jmp
icebp
fcmove
inc
mov
das
sbb
aaa
add
ins
add
inc
inc
imul
add
inc
call
fnstenv
and
(bad)
mov
outs
fild
inc
sub
ffreep
xchg
inc
or
jb
adc
or
or
in
test
retf
jb
adc
fild
daa
cmp
aam
in
add
(bad)
aam
and
add
dec
repz
shl
add
adc
adc
shl
inc
and
mov
xchg
mov
(bad)
adc
mov
dec
(bad)
adc
loope
cwde
call
(bad)
sbb
mov
and
in
sub
push
adc
xchg
mov
pop
lods
nop
and
inc
sbb
cs
les
add
xchg
inc
ins
xrelease
pop
outs
or
std
mov
xchg
and
in
jg
cwde
xchg
pop
and
cmps
nop
cwde
mov
mov
cwde
mov
leave
or
ret
fcom
sahf
mov
lods
mov
jno
cld
pop
mov
xchg
les
ret
call
rol
nop
mov
and
xchg
ins
fwait
xchg
sbb
push
mov
pop
mov
sbb
ins
nop
inc
dec
cmp
push
push
jb
call
leave
xchg
sahf
call
or
or
call
pop
add
mov
fild
inc
int
add
out
lahf
pop
push
enter
ins
nop
add
xchg
sbb
lahf
xchg
push
xor
out
push
dec
push
nop
pushf
fs
or
dec
push
leave
nop
and
pusha
cld
out
mov
dec
push
nop
cmp
adc
mov
pop
jg
and
fisub
test
stos
in
test
loope
and
(bad)
and
adc
xchg
or
nop
inc
dec
cmps
dec
movs
xchg
push
push
jb
push
int
adc
fist
cmps
in
inc
je
shl
inc
les
mov
and
inc
repnz
and
or
xor
fwait
adc
scas
and
cmps
pop
jo
es
cmps
(bad)
pushf
mov
jg
cmps
adc
adc
pmulhuw
or
dec
push
call
sar
(bad)
jmp
and
enter
push
fsubr
je
cdq
or
cmp
int3
pop
or
pop
cdq
pop
dec
repnz
clc
sub
adc
sub
inc
repnz
pushf
cld
cld
adc
sub
sbb
and
imul
mov
addr16
cmc
cmp
mov
stos
addr16
lods
or
leave
sub
push
jb
inc
addr16
cmp
mov
call
scas
les
sbb
les
adc
push
mov
sub
ss
cdq
lods
jo
imul
(bad)
pop
jg
inc
add
mov
ret
add
jb
neg
add
jb
hlt
mov
into
mov
cmps
and
pop
xchg
jmp
dec
add
rol
dec
push
leave
mov
mov
in
dec
push
mov
ret
xor
popa
mov
and
bound
add
dec
dec
xchg
pushf
imul
mov
das
mov
push
leave
mov
jae
mov
adc
scas
jae
or
sub
xor
inc
xlat
rol
jl
add
outs
enter
and
stos
sbb
adc
adc
mov
mov
mov
test
outs
add
cmp
mov
jmp
in
repnz
movs
stos
rol
push
jo
mov
xor
nop
mov
and
mov
push
enter
ja
and
fwait
mov
cmp
pop
ret
ja
and
cmp
xchg
inc
jb
int3
test
inc
pop
or
out
jp
and
adc
jo
in
test
iret
pop
loop
cmp
pop
stos
nop
addr16
scas
in
adc
mov
add
dec
inc
jb
in
pop
sbb
inc
test
stos
mov
mov
adc
enter
js
fdiv
jns
stos
fs
retf
push
mov
pop
add
dec
scas
test
pop
cmps
push
adc
cmp
test
xor
add
stos
xchg
pop
ret
pop
xor
nop
mov
push
stos
loopne
les
inc
rcl
or
push
jnp
iret
xlat
mov
les
lock
test
adc
pop
sub
push
sbb
push
inc
stos
xor
or
mov
push
das
(bad)
push
inc
sahf
add
aaa
fs
mov
outs
xor
push
mov
push
inc
jo
sbb
fisttp
(bad)
adc
fidivr
and
jl
mov
mov
cmp
jle
push
add
dec
push
pop
iret
hlt
sub
xchg
inc
sti
fistp
cmp
mov
and
dec
mov
adc
leave
dec
mov
mov
add
adc
inc
and
sub
adc
popf
(bad)
mov
ror
jno
cmp
movs
retf
adc
inc
adc
ds
mov
push
les
jp
rol
push
test
push
les
add
mov
inc
repnz
xchg
pushf
or
call
sbb
push
add
mov
mov
xor
sbb
les
inc
pop
outs
(bad)
fisttp
inc
leave
mov
jle
adc
mov
bnd
int3
jle
popa
lods
shr
test
test
ror
loop
loope
pusha
popa
sub
(bad)
inc
mov
pusha
add
shl
dec
jne
sub
pusha
or
add
sub
fcmovb
mov
dec
adc
out
pop
push
(bad)
mov
xchg
or
daa
fsub
sub
jl
cmps
mov
out
repnz
aaa
mov
jb
push
and
shl
jmp
mov
add
sbb
push
in
rcl
pop
mov
lds
pop
and
sbb
retf
cmp
add
jmp
lock
fsubr
mov
lock
out
test
inc
push
(bad)
test
push
loopne
int
push
test
add
mov
jo
push
pop
dec
xchg
ds
mov
and
add
mov
push
out
xchg
xor
mov
outs
or
push
inc
adc
ret
push
loopne
or
jo
clc
loop
test
rol
mov
dec
and
loopne
(bad)
xchg
dec
rol
test
mov
push
pop
pushf
pop
mov
push
daa
xor
cmp
shr
stos
stos
rol
xor
shr
mov
push
mov
pop
js
(bad)
rcl
dec
lock
dec
xor
mov
jle
xchg
add
mov
aam
sahf
cmp
push
mov
sbb
mov
jle
inc
popf
pop
out
jb
inc
adc
lds
xor
(bad)
aam
in
adc
jp
add
inc
popf
or
adc
(bad)
in
pop
retf
adc
pop
mov
inc
js
mov
test
add
pop
or
dec
dec
leave
xlat
dec
lea
pop
adc
or
test
inc
and
push
pop
lds
sbb
xchg
mov
add
ret
test
mov
cmp
push
daa
pop
add
das
push
fidiv
and
loopne
dec
das
mov
push
lds
dec
lea
and
adc
loopne
cmp
das
jo
dec
dec
lds
retf
stos
adc
das
or
stc
and
(bad)
outs
mov
sub
das
loopne
rol
adc
or
aaa
jg
and
cmp
cmps
or
adc
sbb
loope
mov
or
and
aaa
push
inc
xor
push
cmp
aaa
or
cmps
push
ret
jg
add
adc
test
sub
in
mov
sbb
jnp
leave
push
mov
or
add
xchg
inc
hlt
cwde
add
adc
shl
jl
sbb
push
and
sar
push
pop
adc
sbb
jno
scas
adc
mov
popf
ins
loopne
adc
rol
jle
or
push
ja
leave
push
jle
test
lock
push
or
jl
cwde
add
cmp
or
lock
lods
loop
shr
jnp
ror
or
rcl
dec
cmp
outs
pushf
adc
add
pusha
lods
cmp
pusha
(bad)
mov
push
adc
sbb
add
ds
sbb
iret
dec
sub
jb
popa
arpl
call
push
mov
in
add
(bad)
fst
call
jecxz
aas
pusha
in
je
addr16
pusha
in
jle
call
jle
push
hlt
imul
mov
sub
leave
imul
xor
adc
scas
mov
xchg
mov
mov
pop
and
mov
pop
in
dec
inc
push
imul
aaa
sbb
pop
lds
jl
xor
aas
out
ss
out
adc
cs
or
mov
and
dec
daa
xor
mov
out
int3
pop
push
mov
mov
mov
pinsrw
mov
and
adc
sub
dec
test
or
add
and
mov
jl
ror
adc
and
add
nop
add
push
pop
lahf
out
xor
pushf
lea
out
add
add
nop
scas
fsubr
push
jge
pop
rcr
shr
cmp
xor
mov
dec
sbb
pop
or
and
sub
or
dec
mov
pop
push
cld
out
sbb
inc
or
jmp
ins
pushf
fisttp
pop
fld
inc
loope
adc
cdq
daa
ss
cmp
inc
add
lods
ret
fnstenv
js
jmp
data16
pop
xchg
jno
rol
jne
add
les
or
jo
or
mov
les
mov
stos
mov
add
xor
adc
jmp
rol
ins
das
push
inc
jle
mov
mov
movs
int3
retf
psubb
loop
push
and
mov
jmp
aad
retf
and
sahf
in
xor
xor
and
shl
in
add
push
popf
pop
clc
rol
push
add
int
fs
pop
and
push
add
inc
mov
shl
and
push
in
out
mov
mov
or
icebp
dec
mov
adc
xchg
add
adc
arpl
fist
mov
repz
push
lds
stos
sbb
jns
mov
add
js
xchg
out
aam
sub
out
jbe
stos
sbb
out
xchg
lock
and
bsf
pop
out
pop
pushf
fild
out
mov
(bad)
dec
ret
sub
sbb
push
xor
dec
mov
(bad)
mov
jns
aam
adc
(bad)
sbb
sub
lock
and
pop
inc
cmp
and
pmulhuw
mov
repnz
popw
int3
das
jmp
jo
push
dec
pop
pop
into
mov
out
icebp
and
adc
pop
scas
adc
lahf
inc
repnz
push
mov
rcr
lahf
pusha
add
rcl
sbb
sbb
add
add
or
pushf
mov
add
rcr
inc
push
sbb
jbe
cmp
aas
mov
(bad)
sbb
pop
test
repz
pushf
ror
xchg
pop
dec
in
adc
ss
in
(bad)
fcomip
inc
hlt
shl
push
adc
sub
cmp
add
movs
sbb
jmp
sbb
adc
movs
int
push
cpuid
movs
push
jp
sbb
sbb
lods
sub
sbb
pop
aad
ret
rol
adc
test
mov
cmp
push
jo
add
not
xchg
dec
adc
lds
adc
inc
inc
sub
mov
add
jmp
or
outs
aas
add
and
shl
mov
pop
pop
pop
pop
sub
adc
sub
push
or
out
aam
(bad)
mov
sbb
and
pop
clc
sbb
cwde
or
and
mov
adc
mov
pusha
das
pop
cli
pop
lods
das
retf
les
pusha
push
aas
sbb
add
(bad)
dec
and
jmp
push
shl
mov
xchg
mov
cli
push
loop
sub
int3
xchg
int
push
pop
pop
pop
loop
and
and
push
mov
xor
pop
sbb
(bad)
jp
adc
push
cmovg
or
stos
inc
inc
pop
sti
out
push
or
popf
test
push
lahf
inc
cld
aas
inc
std
loop
outs
scas
push
dec
es
mov
adc
jecxz
mov
adc
enter
aaa
xchg
cmp
lahf
and
dec
(bad)
push
or
adc
or
imul
xor
enter
push
imul
pushf
enter
pop
ins
add
mov
sbb
add
or
sbb
push
dec
and
dec
cmp
icebp
dec
dec
pop
push
sub
jb
mov
cs
adc
lds
ret
cli
(bad)
pop
aaa
test
push
in
push
lds
mov
mov
dec
or
xor
imul
cmp
dec
arpl
sbb
dec
and
(bad)
cmp
iret
mov
push
mov
xchg
xchg
xchg
daa
sub
addr16
enter
add
in
in
icebp
es
cmps
jb
repnz
daa
add
sbb
push
push
sub
cli
xor
dec
inc
sahf
pushf
fmul
mov
adc
dec
dec
jo
adc
fistp
call
add
mov
dec
jmp
pop
jmp
or
jecxz
stos
jmp
ror
sbb
adc
out
cmps
add
rcl
sbb
test
pop
inc
frstor
mov
inc
add
mov
cmps
mov
push
and
cmps
push
dec
or
cdq
fdivr
dec
push
inc
or
adc
jae
les
push
out
add
test
xchg
fsub
jp
mov
xchg
das
rol
jno
cmps
fwait
sbb
sub
push
push
and
cmps
or
mov
fsub
push
mov
jno
pop
or
inc
push
fsub
cmps
lds
or
xor
xchg
jmp
and
mov
clc
push
xor
sbb
add
sbb
movs
shr
adc
xchg
xor
or
adc
push
dec
jg
fidivr
pop
or
les
outs
push
stos
mov
adc
stos
inc
xor
lds
push
xor
push
mov
dec
push
(bad)
jge
fsub
sbb
inc
or
jns
pusha
add
inc
sbb
pop
or
xor
push
adc
inc
enter
dec
sub
jbe
test
mov
imul
(bad)
in
push
xlat
and
out
in
adc
add
adc
adc
jecxz
sysenter
add
out
inc
in
test
add
retf
in
or
or
rcl
adc
ret
push
and
inc
and
push
mov
ret
push
cmp
push
das
stos
dec
sbb
cmp
add
or
pop
(bad)
sub
add
jnp
add
xchg
pop
lods
outs
mov
fmul
or
in
add
pushf
or
add
jb
or
shr
push
sub
pushf
adc
add
int
add
call
add
xchg
bound
retf
jmp
push
cmc
(bad)
mov
pop
push
mov
fwait
jo
and
dec
inc
scas
sub
and
lahf
lock
outs
out
push
sub
push
das
ins
push
adc
(bad)
fsub
dec
mov
cmp
jb
les
mov
add
test
int
imul
iret
in
imul
sbb
test
and
into
add
ins
add
pop
cmp
cmp
not
in
dec
adc
cmp
arpl
test
xor
push
cmp
out
push
pop
adc
mov
dec
inc
icebp
cmps
div
dec
popf
cli
pop
imul
push
je
call
shr
test
dec
imul
mov
imul
sub
neg
dec
fnsave
pop
ss
or
leave
adc
out
psubw
(bad)
test
leave
adc
adc
cmp
jae
sahf
pushf
pushf
scas
jmp
adc
dec
(bad)
adc
in
in
mov
jb
xor
repnz
cmp
cmp
and
cmp
sbb
ror
sub
aaa
andnps
imul
mov
aas
sbb
aas
cmc
not
lea
mov
adc
punpckhdq
retf
(bad)
cmp
xor
or
(bad)
jno
adc
jmp
sbb
xchg
pushf
nop
push
cmp
retf
inc
mov
pop
mov
inc
inc
popf
retf
(bad)
dec
and
jns
push
dec
or
cdq
sub
dec
test
adc
pop
ror
retf
(bad)
pushf
jp
mov
or
xchg
das
push
mov
pushf
(bad)
fwait
shr
sub
cmps
(bad)
cmp
aam
lds
ins
push
dec
(bad)
pushf
dec
je
iret
(bad)
jo
rcl
(bad)
and
xchg
push
cmp
retf
inc
push
inc
pop
cmp
sub
inc
add
mov
xchg
sbb
arpl
sbb
sbb
inc
xchg
lods
and
and
aaa
loopne
add
cmp
sbb
sbb
sbb
push
xor
dec
or
mov
aaa
mov
aaa
or
aaa
cmp
ret
cmp
adc
aam
jns
add
cmps
push
push
dec
aaa
js
or
cmp
int
inc
(bad)
push
out
stos
or
int
aam
or
fiadd
ss
xor
and
test
add
mov
pop
adc
movs
pop
int3
shr
mov
or
in
or
push
fwait
xor
hlt
enter
test
and
xor
mov
jmp
push
pop
add
iret
xchg
movs
adc
pop
mov
movntps
inc
inc
jl
mov
iret
inc
inc
pop
sub
jg
cwde
hlt
adc
int
mov
pop
sub
das
jle
in
add
stos
push
adc
sub
dec
add
pop
add
std
adc
add
push
pusha
lods
push
and
std
int
jo
aam
pusha
lods
test
push
add
retf
into
push
(bad)
les
aam
sbb
push
push
cmp
dec
and
iret
rcl
push
dec
mov
pop
pushf
cmps
das
iret
dec
xchg
aam
pop
and
test
and
fs
das
movs
and
test
outs
xchg
lock
enter
aam
fsubr
inc
or
outs
xor
push
xor
(bad)
fcom
push
test
int
and
test
and
aas
pop
daa
adc
retf
pop
icebp
lods
adc
call
push
jno
shl
sbb
jg
aam
cmp
fdiv
or
scas
loopne
jg
shr
push
push
sbb
jo
(bad)
scas
dec
pushf
cmp
xor
xor
cwde
sbb
in
not
rcl
pop
int
mov
xor
cmp
lock
xor
jo
fwait
mov
and
daa
push
xchg
loopne
xchg
xchg
daa
sub
leave
enter
sub
fdiv
leave
(bad)
pop
sub
movzx
sahf
pushf
jmp
sub
and
dec
test
daa
daa
daa
daa
popf
(bad)
call
mov
xchg
pop
aas
jne
and
pop
sub
add
push
cmp
add
iret
int
jmp
add
call
pushf
cli
pusha
dec
or
cmp
movs
in
mov
(bad)
add
rol
pusha
lods
sbb
ins
push
pusha
lods
jmp
and
adc
aam
or
add
add
push
int
mov
and
fwait
adc
push
repnz
aam
add
int
push
mov
push
adc
je
adc
adc
aam
inc
cmp
dec
ja
sbb
adc
les
jo
sbb
pop
aam
stc
inc
xchg
aam
xor
mov
inc
push
dec
jg
or
adc
or
lods
and
aad
cmp
and
sub
mov
and
sbb
or
das
aam
aam
mov
mov
add
jns
adc
xchg
dec
inc
dec
inc
lods
and
pop
jb
ror
adc
lock
adc
and
xor
inc
sub
cli
into
and
shr
les
mov
or
pop
fwait
inc
lods
fisttp
jb
repz
enter
push
das
daa
js
cwde
ret
push
lods
enter
adc
adc
cwde
into
jle
nop
cmp
sbb
mov
fcom
sub
inc
push
movs
in
or
(bad)
mov
or
mov
and
es
push
gs
xor
inc
jmp
stos
clc
cwde
cld
push
mov
mov
or
pop
xor
push
mov
dec
xor
popf
fild
inc
jnp
ret
ret
mov
jne
dec
fwait
inc
mov
aam
aaa
sub
cdq
lea
and
movs
hlt
or
fsubr
dec
(bad)
inc
movs
in
(bad)
xor
jle
or
jns
jle
pop
fst
jnp
jmp
pop
aam
cmc
ss
iret
and
dec
repz
push
bound
mov
pop
push
les
shld
fdivr
bswap
xor
adc
sub
mov
movsx
stc
mov
dec
mov
fild
inc
or
lea
add
aam
retf
ret
adc
outs
fstp
arpl
sbb
into
adc
or
aam
xor
xchg
mov
and
pop
pop
cmps
jmp
push
(bad)
sbb
sub
das
fadd
or
dec
mov
jae
jge
push
sbb
inc
dec
lahf
inc
or
push
test
mov
or
inc
sub
lahf
sub
fwait
add
xchg
add
ret
dec
imul
xchg
adc
inc
xor
add
and
cmp
cld
das
sbb
aaa
out
adc
add
xlat
aam
movs
sub
aaa
push
adc
sub
add
and
add
add
and
add
inc
mov
pop
and
loop
adc
pop
push
or
xor
or
lods
add
push
aaa
adc
mov
cwde
cmp
pushf
mov
cmp
sub
push
adc
pop
and
dec
xor
out
add
add
imul
sbb
les
mov
shr
or
fiadd
cmp
pop
sub
pusha
pop
ja
cmp
(bad)
or
or
cmp
rcr
mov
test
pop
add
retf
ds
(bad)
aas
pop
call
sbb
xor
xor
pop
cld
push
push
add
je
sub
mov
je
xor
dec
leave
add
mov
dec
scas
icebp
mov
js
cmp
fidivr
loopne
int3
into
jecxz
inc
(bad)
jae
ror
arpl
call
daa
daa
mov
xor
sar
xchg
xchg
daa
inc
inc
mov
leave
leave
leave
enter
jg
jb
xor
sar
sbb
inc
popa
test
cmp
inc
sub
sahf
pushf
ror
dec
dec
xchg
leave
adc
js
sar
pop
test
cmp
dec
xor
sub
jmp
add
push
push
fwait
nop
push
or
add
cmp
or
ss
vmovlps
jno
sub
dec
pop
xor
or
repnz
add
or
mov
pop
dec
adc
push
xor
adc
daa
xor
push
add
nop
sub
push
push
inc
int3
jp
dec
(bad)
mov
xchg
add
inc
fs
push
sbb
mov
das
inc
adc
push
fwait
gs
push
push
push
or
bound
add
push
iret
inc
dec
adc
push
jno
sub
and
fadd
add
push
cmp
sub
sub
push
aas
outs
adc
or
adc
or
and
sbb
pop
adc
jg
movs
pop
adc
or
push
or
mov
sbb
stos
push
inc
or
fisubr
xor
mov
push
add
dec
pop
adc
dec
or
popa
xchg
pop
add
bound
pusha
add
or
movs
dec
push
pop
jb
dec
or
loopne
dec
push
adc
sub
add
cmp
xlat
mov
push
in
mov
movs
add
in
push
outs
pop
and
jns
dec
adc
sbb
adc
inc
or
daa
dec
mov
rcl
mov
sbb
and
adc
and
adc
mov
shl
lock
sbb
push
xor
mov
push
inc
ss
xchg
pop
fmul
push
push
or
daa
out
dec
lahf
sbb
in
sbb
setae
rcl
sub
pop
leave
sub
lahf
push
inc
push
inc
in
mov
dec
test
and
dec
test
add
sbb
and
lahf
fmul
xchg
in
inc
test
sub
aam
rcr
das
mov
aaa
mov
inc
pop
cpuid
out
adc
dec
xor
(bad)
mov
ins
retf
dec
lahf
loopne
add
adc
and
sub
jo
sar
fistp
inc
idiv
ins
(bad)
push
adc
lahf
retf
(bad)
rol
jnp
xchg
in
mov
add
cs
fistp
cs
and
xor
or
add
dec
outs
loopne
in
pop
retf
mov
or
scas
ds
push
and
cvttps2pi
xchg
mov
jmp
cmp
pop
adc
daa
shl
push
dec
(bad)
push
mov
push
push
loope
push
push
shr
push
test
mov
push
jg
mov
add
pop
add
jg
mov
mov
mov
xchg
inc
je
push
push
popa
jne
add
sahf
ja
add
mov
dec
cmp
daa
rcl
in
movs
jno
mov
into
in
in
adc
push
push
pop
push
push
movd
inc
adc
xchg
push
out
and
test
jmp
and
jle
and
add
pop
fcomp
pop
jns
scas
in
pop
xor
fcomp
xor
and
pop
cmp
add
je
xchg
pop
int
adc
rol
mov
pop
nop
push
pop
or
es
inc
dec
clc
clc
pop
(bad)
test
push
sub
push
push
or
xor
sub
es
mov
ror
scas
or
and
adc
rol
add
adc
sub
adc
retf
sub
scas
pop
popa
pop
aad
fcomp
jl
xor
lock
rcr
rol
lods
add
push
cmp
ret
fwait
cwde
jb
rol
push
or
fstp
iret
sub
or
adc
add
xor
pop
rcr
push
addr16
pop
mov
into
pop
sti
add
push
repnz
scas
and
mov
xor
mov
xor
and
xor
inc
leave
and
push
xor
xchg
pop
xchg
jg
jg
add
pop
int
pop
xor
push
mov
fisub
pop
pop
push
div
repnz
test
pushf
push
pop
pop
into
or
mov
sbb
pop
clc
adc
fcomp
push
or
xchg
jg
in
push
mov
or
xchg
jg
or
sbb
inc
stos
retf
mov
sbb
pusha
shl
mov
(bad)
adc
mov
jnp
xchg
jg
ror
dec
wrmsr
xchg
xor
outs
(bad)
(bad)
sbb
add
xor
ins
pop
cs
cmp
mov
or
sete
addr16
or
pop
pop
sbb
(bad)
sub
jo
imul
fwait
pavgw
add
add
jge
xchg
sbb
pusha
mov
leave
sub
xchg
sahf
xchg
sahf
hlt
pop
jmp
pop
and
jne
push
sbb
sbb
inc
shl
pop
in
pop
adc
add
cmps
loopne
pop
or
in
das
or
daa
clc
and
int3
lahf
or
dec
cld
push
stc
add
fs
inc
pusha
pop
test
nop
jmp
inc
xor
sbb
jl
push
push
sbb
push
and
ror
enter
sbb
or
retf
scas
add
and
mov
pop
mov
add
mov
add
push
add
adc
sbb
les
adc
bound
movs
movs
add
add
or
test
cmp
stos
add
jns
dec
sub
enter
mov
in
push
cmps
movups
mov
jge
xchg
dec
xor
bswap
push
inc
mov
add
(bad)
adc
mov
mov
and
in
mov
(bad)
call
sub
xor
loope
pop
adc
add
adc
push
loopne
fsub
xchg
addr16
retf
mov
mov
test
aam
mov
not
mov
and
pushf
dec
or
cmp
lock
add
mov
lods
loope
fsubr
rcl
int
shr
add
add
fisubr
or
adc
mov
test
in
rcl
sbb
add
cmp
lds
cmp
ins
test
and
call
leave
loope
or
shl
shr
aas
push
xor
and
push
aam
mov
outs
jno
jnp
test
stos
add
outs
nop
imul
jbe
cmp
imul
add
outs
arpl
pushf
fisttp
pop
xchg
paddusw
xor
jmp
fisubr
gs
mov
outs
and
push
sub
push
pop
repnz
shl
sub
mov
and
nop
lahf
pop
aad
push
xor
mul
ins
pop
loopne
dec
add
(bad)
imul
sub
mov
xchg
push
out
sub
or
or
mov
addr16
fs
sub
test
jo
int
mov
test
pushf
retf
mov
xchg
add
aad
add
xchg
xor
inc
js
push
xchg
enter
rol
je
loope
lods
or
and
ror
cmp
daa
adc
push
or
xlat
loope
jmp
mov
aad
add
mov
je
push
adc
popf
stos
outs
ja
jo
nop
daa
scas
outs
aas
loopne
or
push
jo
pop
jo
cmovle
and
mov
sub
loopne
loopne
loopne
xchg
mov
loopne
xchg
jl
mov
inc
mov
je
enter
pop
aad
rol
jno
dec
add
fbstp
pop
mov
jno
add
loopne
or
into
fcomip
repnz
pushf
jno
jb
jb
add
ds
inc
add
aam
adc
fild
push
int
adc
add
lock
add
(bad)
js
add
dec
(bad)
aad
in
loope
sub
cmp
out
dec
and
in
ins
stc
(bad)
shl
ror
push
mov
adc
out
arpl
je
push
or
pop
push
gs
arpl
add
test
je
dec
sub
pop
jne
jne
lock
iret
jb
pop
jo
(bad)
fbld
add
mov
xor
pop
(bad)
adc
fcom
jns
scas
in
fsub
jae
fsub
repnz
jbe
arpl
sbb
dec
xchg
pop
int
rol
jbe
ins
test
pop
mov
pop
and
iret
sub
jl
test
in
js
aam
add
ja
stos
jmp
loopne
sbb
mov
add
pop
test
and
add
int
add
pop
add
push
add
inc
mov
or
and
js
dec
lds
shl
mov
pop
push
mov
or
dec
inc
add
mov
inc
jns
dec
sub
cwde
sub
or
aad
cmp
cmp
push
jmp
inc
pop
hlt
jns
dec
popa
add
sub
ss
jnp
test
mov
rol
punpckhdq
push
pop
loopne
dec
push
cmp
or
add
loopne
shr
std
jo
pusha
push
pop
jae
nop
sub
xor
add
xchg
ret
or
xchg
adc
add
and
add
add
pop
adc
xor
ret
test
sub
sbb
sub
mov
and
outs
jge
jge
mov
mov
push
xlat
add
sbb
inc
jle
add
pop
xlat
add
loopne
loope
int
adc
loope
or
sbb
retf
mov
sub
ud0
and
aad
add
cmp
sar
pop
lds
push
pop
ja
ret
iret
xor
push
gs
int3
jg
push
push
xchg
push
outs
inc
jno
fld
loopne
scas
loopne
add
push
inc
and
or
jne
dec
sbb
cli
push
mov
cmps
fadd
mov
daa
cli
sub
pop
lahf
inc
jle
outs
push
xor
ins
loope
and
adc
inc
or
or
inc
addr16
popa
pusha
and
enter
cmp
fild
or
pushf
adc
push
outs
xchg
add
fadd
cmp
add
inc
sbb
or
and
aas
ret
in
jns
add
and
mov
shl
dec
mov
ja
adc
jo
sub
mov
mov
dec
xor
sub
and
xor
and
lock
mov
add
unpcklps
or
test
or
push
jo
xor
push
sub
popf
aas
inc
lea
xor
in
cvtpi2ps
aam
and
iret
pop
test
arpl
mov
dec
push
js
mov
add
mov
xchg
xchg
push
aam
xchg
xchg
into
in
add
bswap
push
bound
jno
sub
ins
and
shl
cwde
sbb
cwde
sbb
xchg
cmp
test
sub
clc
mov
sub
and
add
fucomip
rol
mov
pusha
fs
xchg
pop
and
in
push
adc
mov
push
mov
loopne
dec
out
loop
push
xor
cmp
out
sub
loopne
loop
int
adc
loop
or
or
retf
xchg
sub
mov
pop
fstp
mov
sub
pop
aad
xor
xchg
mov
pusha
dec
add
inc
xchg
test
and
sub
retf
or
or
je
jle
imul
jcxz
adc
or
or
outs
adc
sbb
jp
pop
sub
aad
push
mov
cmp
mov
(bad)
stc
push
mov
into
in
add
push
setg
jo
add
loopne
sbb
push
enter
add
add
xchg
mov
add
dec
add
(bad)
or
mov
sub
adc
lock
pop
and
add
xchg
mov
cmp
(bad)
dec
(bad)
out
cwde
aaa
les
hlt
push
and
out
cmp
xchg
xchg
mov
(bad)
push
inc
inc
push
add
lahf
les
shl
pop
mov
add
ror
and
adc
inc
stos
retf
mul
adc
pop
pop
sub
fild
push
mov
lahf
aam
adc
sbb
xor
and
bound
daa
push
punpckhdq
xchg
push
adc
mov
arpl
push
sub
add
sub
sub
cld
(bad)
call
push
adc
dec
push
dec
inc
pop
dec
inc
dec
dec
inc
inc
push
inc
push
mov
sbb
push
clc
adc
push
jne
push
fistp
mov
js
add
add
aaa
repnz
or
jne
fidiv
mov
addr16
adc
jne
fisubr
inc
stos
dec
clc
dec
dec
xor
paddusb
ins
add
add
dec
sbb
jae
push
imul
fs
dec
sub
and
int
int3
jae
jne
sub
inc
fild
mov
push
and
ins
gs
je
int3
loope
daa
push
mov
mov
pop
je
iret
movs
add
lahf
push
adc
and
dec
jmp
daa
or
dec
lock
outs
outs
outs
popf
add
xchg
and
push
or
imul
(bad)
aas
jmp
je
(bad)
in
(bad)
mov
mov
push
cmps
add
std
push
mov
out
sub
ins
mov
fs
adc
bound
cmp
push
jl
mov
add
pusha
xchg
sahf
fld
movd
syscall
jle
mov
inc
addr16
ds
inc
or
fisttp
mov
sti
mov
inc
add
inc
pop
adc
push
mov
push
cdq
jne
cmp
ret
adc
popa
mov
retfw
or
jbe
ret
inc
cmp
and
adc
jno
ins
pop
das
jmp
gs
pop
pop
adc
(bad)
out
add
fs
jl
adc
jle
xor
mov
or
outs
jmp
popa
je
jecxz
lock
push
dec
je
push
jae
inc
movhps
xchg
out
pop
dec
call
mov
test
inc
or
xor
shl
inc
ret
or
lods
push
xchg
push
pop
fstp
iret
loopne
test
cs
mov
mov
push
xor
in
push
pusha
adc
cmp
ja
fdivr
dec
and
or
imul
(bad)
sti
push
sar
push
js
mov
fsub
jns
xor
push
mov
in
add
out
shr
es
xchg
push
in
dec
outs
jnp
out
cmp
data16
sbb
sub
add
daa
xchg
or
outs
das
in
fisttp
sbb
in
adc
aaa
cld
sub
adc
je
ins
push
push
rcl
or
and
out
xor
jp
and
daa
xor
xor
pop
or
sldt
adc
popa
test
dec
sub
or
test
lods
sbb
fild
and
jecxz
mov
xchg
cld
xchg
jge
adc
fwait
push
mov
clc
sahf
cmps
push
int3
out
test
jl
push
mov
ds
pusha
sti
jo
jg
mov
mov
sub
sub
xchg
mov
push
mov
shl
lods
add
aam
push
inc
adc
ret
pop
add
jnp
sar
enter
mov
pushf
ds
mov
jl
xchg
push
dec
out
mov
ins
hlt
es
and
test
fstp
xor
dec
sahf
les
mov
retf
imul
sbb
nop
push
xchg
enter
shl
(bad)
jb
imul
sub
ins
jl
imul
push
and
dec
sahf
es
rol
lock
repnz
mov
dec
jns
cmc
out
retf
or
inc
push
popa
jbe
outs
mov
arpl
imul
xor
mov
sub
ins
gs
push
or
aad
inc
fisub
add
or
jo
div
and
ja
retf
int
daa
jno
jne
inc
cmp
dec
dec
mov
shl
rcl
dec
les
aas
lods
jo
gs
add
ds
gs
fmul
fsub
jns
add
sub
inc
rol
mov
xor
jae
add
inc
jge
test
call
loope
nop
imul
push
or
inc
add
sub
lock
sub
sbb
cwde
xor
rol
push
fidivr
pop
add
call
call
cld
push
add
inc
push
int3
push
ja
scas
adc
sbb
bound
jecxz
pop
int
push
inc
repnz
push
ins
cdq
and
sbb
sti
inc
and
jnp
pop
mov
inc
inc
rcl
jmp
ja
jge
ins
(bad)
pusha
mov
cli
jmp
fisubr
ja
lea
add
jo
pop
or
jae
rol
and
push
inc
movs
dec
adc
jae
xor
xlat
jl
bound
push
lds
inc
ins
xlat
dec
sar
jne
inc
outs
dec
imul
pop
add
inc
mov
dec
add
pop
in
or
ror
cs
push
shl
sbb
xchg
pop
dec
imul
xor
xchg
xchg
xchg
movs
leave
jmp
popf
xchg
xchg
xchg
xchg
das
push
jp
xchg
retf
xchg
xchg
ret
loop
sahf
daa
rcl
add
dec
sbb
(bad)
and
or
(bad)
dec
inc
pop
rol
sahf
jbe
mov
xchg
(bad)
mov
emms
push
jmp
jmp
dec
mov
add
pop
mov
pusha
add
and
ins
inc
jnp
adc
cmp
add
sub
rcr
push
jnp
mov
js
or
add
xchg
(bad)
jl
in
add
inc
sbb
iret
leave
add
test
sub
loopne
mov
sbb
dec
inc
sbb
ins
sbb
dec
enter
loopne
popf
adc
add
mov
cmp
nop
lahf
inc
or
stc
call
inc
push
sbb
xor
sub
(bad)
mov
adc
add
xchg
jns
(bad)
sbb
jl
add
sahf
push
cmp
mov
mov
sbb
sti
fdivp
cmp
push
and
(bad)
shr
jns
jl
ror
push
and
sahf
out
sahf
inc
push
pusha
jo
nop
jns
out
xchg
cwde
pushf
mov
out
lods
mov
mov
mov
adc
fadd
pop
xor
and
jle
add
cld
lahf
inc
popa
cmc
sbb
or
add
clc
cmp
popa
jae
add
add
ins
or
pop
adc
dec
imul
loope
out
mov
lods
mov
daa
(bad)
xrelease
ja
out
mov
gs
adc
or
add
add
mov
rol
jmp
lock
lahf
ins
mov
fwait
int
or
mov
add
loope
lea
add
xchg
sysret
sti
lods
mov
or
mov
idiv
pop
leave
lea
dec
adc
fcomp
push
and
jbe
add
push
and
cmp
pop
inc
outs
outs
mov
jmp
add
ror
and
jns
sub
or
imul
rol
pop
in
movhlps
push
add
mov
sbb
pop
in
outs
aam
sub
or
push
or
inc
lea
lods
pop
lahf
pop
xor
into
mov
dec
(bad)
in
sbb
pusha
push
dec
sbb
int3
xchg
retf
xchg
aaa
push
adc
or
inc
leave
and
rcl
jmp
sub
push
pop
sub
arpl
sub
(bad)
mov
push
push
jo
out
jecxz
push
(bad)
cmps
adc
mov
dec
daa
lods
mov
xor
push
add
dec
mov
shr
std
call
xor
mov
out
push
xchg
and
inc
push
movlps
jge
shr
jle
and
fs
int
jp
or
jo
xor
cmp
push
lods
leave
pop
sbb
add
mov
pop
jmp
and
call
inc
inc
imul
fs
fcom
add
or
and
cmp
sub
xchg
ins
mov
popa
cmp
or
mov
push
push
retf
inc
jns
inc
mov
sar
dec
dec
sahf
or
mov
mov
fild
imul
outs
arpl
gs
jne
aaa
shr
jmp
add
inc
enter
or
xor
add
push
or
lea
scas
imul
xchg
push
outs
lods
xor
inc
add
dec
js
add
jns
push
jmp
(bad)
das
cmps
lds
jo
pop
push
or
test
test
pop
int
or
add
aad
or
aad
mov
inc
xchg
or
jmp
or
aad
movs
adc
daa
jo
and
mov
push
retf
jmp
push
popa
inc
in
pusha
inc
xor
pop
xchg
or
pop
out
adc
xchg
add
pop
dec
clc
and
add
ror
test
sbb
add
addr16
mov
mov
mov
add
pop
test
or
js
popf
sbb
das
mov
bound
or
xchg
out
mov
mov
mov
or
push
or
sti
jo
adc
cmp
mov
repz
cs
jns
test
xor
jp
add
cmps
iret
xor
loope
dec
inc
mov
adc
inc
pop
jne
test
inc
aam
adc
push
daa
outs
mov
add
ins
dec
repz
js
mov
mov
and
out
xlat
push
xor
daa
mov
(bad)
or
daa
xor
ror
pop
icebp
adc
adc
pop
ds
loopne
cmp
mov
adc
cdq
jmp
add
rcl
(bad)
adc
fnstenv
loope
add
mov
jecxz
adc
and
and
xchg
scas
and
dec
retf
push
mov
add
das
(bad)
fnstsw
and
xchg
ins
pusha
mov
pusha
add
xor
cwde
dec
aad
shr
mov
add
das
sbb
inc
in
cmps
daa
rcr
or
mov
push
jmp
dec
mov
mov
mov
xor
jno
or
push
dec
pushf
mov
sbb
das
adc
or
cmp
lods
mov
fsub
rol
xlat
mov
ins
ret
pop
stos
sbb
add
lds
mov
push
sub
mov
xor
dec
inc
xchg
fcmovb
out
hlt
mov
hlt
aad
out
stos
inc
ins
loopne
cdq
cmp
in
stos
cmp
jb
push
scas
stos
mov
sbb
push
ror
or
push
push
out
push
inc
xor
mov
mov
push
sbb
jb
int3
adc
cmp
es
pushf
pushf
test
add
int3
push
jbe
xchg
in
leave
leave
lods
shl
cs
fs
adc
ss
mov
mov
cmp
outs
pop
fwait
mov
loope
punpckhdq
mov
add
sub
in
mov
pop
mov
movzx
cmp
add
jo
dec
sbb
(bad)
aad
imul
sub
dec
sbb
adc
fild
ins
push
sbb
test
dec
lahf
mov
adc
mov
lahf
add
xchg
cmps
push
adc
sbb
jg
xor
push
lahf
ins
loopne
inc
and
dec
inc
lahf
fwait
add
add
pop
lahf
ss
or
or
lahf
push
xlat
dec
iret
push
aam
adc
jno
add
imul
jl
dec
and
pusha
jae
inc
ret
dec
movs
stc
add
push
mov
or
sbb
adc
jae
and
inc
sub
lods
sbb
adc
dec
ins
pusha
rcl
sbb
inc
inc
dec
add
mov
mov
dec
test
sbb
dec
inc
mov
add
inc
shr
add
inc
or
inc
adc
inc
ins
pusha
sar
adc
and
jns
push
mov
fcmovb
inc
dec
inc
xor
lds
inc
push
popf
add
mov
add
mov
inc
push
ins
loopne
fsub
dec
inc
or
mov
or
or
dec
inc
mov
xchg
pop
xor
(bad)
fisttp
jo
mov
ins
mov
or
ss
enter
aaa
ret
dec
add
add
sub
adc
dec
add
stos
pushf
and
xchg
stos
outs
push
aam
imul
cwde
bound
mov
or
cs
jge
call
and
mov
or
xchg
push
sub
(bad)
jp
inc
or
inc
mov
mov
add
add
add
pusha
inc
sbb
xchg
push
fs
push
xchg
sar
mov
push
repz
inc
inc
push
(bad)
sub
pop
dec
push
mov
dec
push
adc
dec
lds
inc
sbb
aam
pop
scas
sub
push
push
sti
xor
dec
out
mov
adc
jo
ins
ror
mov
jno
push
je
je
add
dec
xor
jl
xchg
arpl
xchg
adc
fdiv
inc
mov
mov
loopne
mov
(bad)
mov
adc
mov
xchg
and
mov
imul
xor
retf
nop
imul
mov
retf
xchg
and
or
jbe
add
cmp
out
mov
push
call
pop
pop
or
fwait
cmps
imul
dec
loopne
xor
xor
push
adc
xchg
push
nop
mov
jmp
aad
rol
stc
mov
and
add
add
inc
adc
push
and
lock
outs
inc
adc
inc
add
or
sbb
or
adc
es
rcl
ror
xchg
inc
inc
inc
retf
loope
jl
jae
or
(bad)
push
ret
jp
and
nop
adc
mov
retf
or
enter
xor
cmp
js
add
movs
loopne
mov
mov
xchg
mov
(bad)
popf
xlat
adc
sub
dec
push
sbb
mov
out
xor
cli
test
or
or
pop
ins
add
pusha
xchg
push
push
lea
cmp
rcl
or
leave
sar
push
sub
cmp
je
pop
test
cmp
pop
cwde
clc
ret
xor
add
mov
les
inc
es
in
es
dec
jne
mov
sub
add
fsubr
ins
adc
mov
(bad)
daa
adc
nop
adc
xor
xchg
or
mov
pop
pop
ss
loope
or
push
add
adc
mov
jmp
ret
int3
xor
or
cmp
(bad)
sbb
pop
dec
mov
dec
jmp
lods
and
jl
inc
add
xor
retf
push
lods
pop
adc
xchg
pop
int3
shl
inc
add
and
xchg
cmp
sar
and
inc
mov
hlt
icebp
and
int3
pop
fdivr
ja
add
idiv
jbe
dec
cld
cmp
push
lock
jne
xor
ins
mov
and
cmp
dec
lods
(bad)
mov
fdiv
dec
jg
jno
arpl
sar
push
pusha
cmp
add
jbe
jmp
adc
jne
dec
inc
xchg
ja
jno
pop
leave
rcr
xchg
mov
inc
jo
xor
dec
mov
inc
or
push
and
push
xor
lock
icebp
daa
or
ret
mov
jl
cld
or
push
push
test
out
jmp
(bad)
or
ins
imul
call
adc
adc
mov
pusha
scas
mov
dec
mov
push
cmps
inc
or
fstp
fs
mov
mov
jl
jl
cwde
arpl
mov
in
mov
push
cs
and
xchg
push
jo
sbb
adc
fwait
outs
in
in
lahf
mov
test
push
cmp
push
and
xchg
mov
je
add
cmp
inc
lock
js
mov
jmp
ror
jp
(bad)
push
push
cmp
jmp
lahf
dec
xor
push
aad
out
or
add
and
or
adc
add
xor
ret
pop
js
out
cmp
add
cwde
sub
or
out
add
je
stos
nop
add
and
xor
pop
les
mov
xchg
mov
shl
scas
test
cmp
ret
or
pushf
adc
mov
aas
cmp
jmp
or
xor
rol
cmps
rcr
sbb
mov
rol
jecxz
gs
and
das
mov
mov
xor
mov
ins
adc
lock
dec
add
inc
jmp
add
loope
sbb
sbb
push
nop
and
xchg
pop
push
inc
add
adc
sbb
pop
enter
push
add
push
push
add
jnp
add
and
dec
xchg
push
js
xchg
cmp
adc
mov
sbb
mov
cmps
mov
and
dec
add
and
mov
xor
fisttp
sub
or
pusha
es
dec
add
call
and
das
add
add
and
stos
es
push
test
mov
push
int
inc
pop
or
int
jp
pop
mov
fcomp
int
or
add
add
push
movs
xor
ja
jmp
nop
dec
adc
shl
or
into
add
dec
xchg
into
xchg
sbb
push
in
sub
outs
add
mov
add
cmc
dec
dec
add
inc
xor
add
mov
cmp
ret
nop
push
dec
ror
movs
(bad)
mov
push
aas
cdq
rcl
or
daa
aas
or
mov
push
add
arpl
cmps
add
movs
add
push
ins
iret
adc
sbb
stos
bound
xchg
add
jnp
(bad)
push
or
add
push
mov
dec
inc
sub
test
or
div
leave
sbb
call
mov
scas
sub
imul
lock
sbb
rcl
sbb
mov
mov
adc
ret
add
idiv
stc
lea
aam
cld
mov
(bad)
jp
cmp
je
mov
pop
pop
dec
mov
jo
aam
clc
aas
fs
sub
jb
dec
enter
jge
add
jecxz
(bad)
clc
mov
mov
ret
mov
mov
fisubr
add
sbb
add
cmps
icebp
add
dec
xchg
push
push
cdq
sub
sbb
gs
push
inc
ffree
xor
cmp
scas
add
stos
or
mov
adc
pushf
pop
mov
mov
mov
pop
fisttp
xor
cmp
inc
and
adc
lods
adc
bound
add
cmps
es
add
inc
dec
add
ror
adc
out
pusha
mov
sbb
cmp
dec
out
or
sbb
mov
(bad)
pop
inc
out
or
or
adc
scas
fild
sbb
inc
push
(bad)
call
cld
or
dec
push
add
sub
mov
(bad)
hlt
aam
rcr
(bad)
pop
retf
or
adc
inc
dec
add
aam
and
xchg
aad
dec
shl
pop
fld
cmp
dec
pop
popf
aad
adc
or
cmp
aas
push
and
bound
cmc
retf
test
aas
inc
cmc
add
or
or
xchg
push
enter
push
(bad)
fmul
pop
shr
fistp
push
fnstenv
sbb
adc
pop
daa
dec
stos
cmp
cmps
adc
sub
(bad)
test
xlat
or
js
jns
int3
jb
mov
add
cmp
scas
adc
out
jmp
outs
lock
rol
xchg
loopne
inc
xor
popf
out
loopne
out
dec
push
pop
cmp
aad
ja
(bad)
sub
push
je
dec
inc
mov
pop
hlt
daa
adc
ja
xchg
mov
outs
movhps
mov
cs
sbb
add
dec
das
sub
xchg
pushf
cmp
pop
leave
cmp
movs
inc
loope
cld
fdiv
push
or
add
leave
mov
adc
inc
adc
inc
(bad)
(bad)
or
mov
mov
dec
fistp
mov
push
mov
mov
push
xor
fimul
or
sub
je
fsubr
ficom
sbb
test
fild
in
inc
sbb
dec
fisttp
and
or
retf
retf
ret
out
dec
fisttp
in
lock
imul
mov
fs
mov
or
imul
punpckldq
ja
addr16
in
push
addr16
ror
dec
push
dec
inc
inc
imul
arpl
and
adc
repnz
dec
mov
jl
cld
inc
sti
xchg
xorps
jo
cs
outs
loopne
add
pop
mov
or
push
and
nop
push
or
or
into
adc
fs
push
push
push
xchg
mov
shl
xchg
add
xchg
fistp
xchg
or
es
push
xchg
jae
add
adc
and
mov
arpl
and
xor
sar
jo
mov
ret
or
add
stos
mov
dec
jb
je
sbb
mov
jl
pop
inc
loopne
xchg
imul
sbb
cmp
js
mov
push
ficomp
push
mov
or
push
push
aaa
or
fdivr
js
or
aaa
hlt
ret
sub
rcl
cmp
xor
pop
pop
xchg
or
stc
push
inc
in
push
adc
inc
or
push
in
inc
mov
rcl
dec
dec
out
inc
in
ins
add
sub
push
dec
pop
or
sbb
add
mov
mov
(bad)
add
adc
push
add
in
pop
mov
mov
or
aas
outs
mov
cwde
aas
xor
or
outs
jo
xchg
imul
add
addr16
add
es
cmp
pop
pusha
and
mov
adc
packuswb
test
ins
sbb
inc
jno
outs
test
fdivr
jns
aad
stos
retf
dec
outs
imul
cmp
pusha
add
jb
mov
add
inc
dec
jb
jnp
shl
or
jae
jecxz
call
fst
jne
push
(bad)
test
jnp
adc
pop
push
sub
push
add
bswap
jo
fadd
jl
out
xchg
js
xor
daa
or
adc
push
add
and
aaa
xor
or
cld
daa
push
pop
test
inc
sar
clc
cmp
dec
pop
cmp
dec
dec
call
les
xor
dec
ds
jmp
or
add
inc
dec
outs
inc
ret
and
pop
dec
cmp
enter
sbb
(bad)
push
loop
sbb
fild
fmul
fstp
fld
test
sahf
jae
dec
sub
inc
jmp
in
test
ret
fstp
pop
sti
inc
pop
ret
add
loop
pop
mov
xor
rol
cwde
sti
xor
neg
mov
leave
jecxz
xor
lock
mov
adc
loope
out
in
popf
data16
ja
cmc
dec
jmp
popf
mov
ror
fadd
cmps
inc
add
aaa
clc
call
fmul
fstp
fldz
fcomp
xor
xor
clc
fadd
or
repz
fcom
sbb
ror
jbe
in
mov
mov
in
adc
add
movs
sbb
push
mov
cwde
push
push
cmp
sbb
loope
adc
jmp
sub
icebp
call
cmps
add
cmps
cwde
cmp
and
repnz
pop
arpl
cmp
stos
mov
punpckhdq
shl
mov
imul
adc
neg
xor
xchg
test
loopne
dec
and
mov
rcr
outs
jmp
mov
add
xchg
mov
aas
ds
leave
mov
imul
mov
sub
and
das
xchg
cmp
and
mov
cmp
jae
jmp
jge
lock
data16
inc
call
retf
int3
lahf
adc
add
add
or
adc
mov
mov
test
popa
imul
sub
lea
inc
rcl
mov
sbb
mov
fsub
fsub
or
push
call
in
inc
call
mov
push
lea
sbb
jne
pop
or
push
frstor
mov
sbb
xor
nop
xor
add
ror
xor
inc
movs
xchg
out
dec
xor
aaa
inc
in
cmp
pop
dec
cmovle
inc
add
xchg
ins
push
push
cs
iret
pop
sub
add
adc
xor
je
ins
xlat
hlt
rcr
inc
addr16
pop
cld
das
add
addr16
loopne
add
inc
cmc
aaa
mov
jo
mov
mov
hlt
jno
jbe
push
push
lea
imul
add
and
cmp
ins
je
out
leave
cmp
push
pop
jge
cmp
or
inc
ins
bound
test
ins
ret
sbb
cmp
cmp
xchg
icebp
dec
inc
pop
aad
mov
or
mov
fisttp
ss
and
inc
je
cmp
jle
xchg
daa
daa
(bad)
push
icebp
pop
outs
jmp
das
or
and
arpl
data16
sub
mov
sbb
rcr
adc
sbb
or
mov
outs
mov
add
add
pop
ins
call
outs
push
outs
imul
sbb
mov
add
mov
xchg
popa
mov
ins
or
js
jp
out
rcl
pop
aam
ins
scas
dec
popa
add
inc
inc
push
repz
push
sub
sub
repnz
cld
bound
gs
mov
lds
adc
rol
dec
and
cmp
adc
shr
sbb
inc
adc
add
fs
sub
and
lds
xor
mov
je
pop
iret
pop
test
out
jne
jbe
pusha
sbb
ins
mov
or
mov
int
sub
fs
inc
cmp
dec
add
outs
sbb
dec
mov
cmp
sub
ret
aam
stc
loope
adc
cmps
data16
push
test
add
retf
cmp
ret
adc
xchg
ret
rol
push
(bad)
xlat
out
inc
cld
adc
lea
jl
xor
xor
iret
fild
sub
enter
mov
mov
sahf
dec
mov
mov
inc
push
xor
inc
xchg
test
push
inc
push
clc
pop
int3
pop
es
repz
mov
and
jno
xchg
js
lahf
mov
xor
ret
int
sbb
jle
pop
pop
or
adc
jecxz
adc
psubb
test
or
xchg
int
pop
xchg
add
inc
push
or
fisttp
ficom
pop
inc
leave
adc
enter
lods
or
mov
addr16
lsl
idiv
xor
jge
fild
add
faddp
pop
(bad)
fiadd
cmp
and
in
jmp
in
or
adc
or
or
js
or
cli
push
or
fs
dec
out
mov
test
dec
call
inc
add
inc
clc
push
mov
sub
push
mov
and
pop
xor
cs
push
push
adc
sbb
aas
sbb
jnp
adc
fld
fmul
jmp
add
sub
push
or
in
mov
push
test
fucom
pop
je
sub
mov
and
pop
adc
jae
dec
xchg
movs
sbb
out
clc
inc
cdq
push
inc
sti
cld
cmp
or
sar
dec
clc
push
lock
push
outs
mov
mov
ret
adc
cmp
and
and
sbb
mov
es
cmp
cmp
xchg
cmp
fwait
cmp
pop
shr
call
xchg
in
xchg
add
mov
and
inc
lock
jl
test
int3
inc
lock
push
addr16
mov
dec
dec
outs
or
push
push
inc
cmps
cmps
sbb
dec
push
cmps
pop
jg
fcomp
xor
shl
sbb
ret
xlat
mov
ficomp
xor
and
jno
and
push
stos
arpl
jnp
or
fisub
cmp
cmp
inc
inc
xlat
pop
sub
dec
movs
ja
(bad)
mov
sbb
(bad)
jl
enter
ret
test
lock
xor
mov
jne
push
xchg
xchg
push
pop
xor
push
add
mov
hlt
div
inc
push
sbb
cmp
test
sbb
loopne
xchg
dec
push
fdiv
in
rcl
xchg
mov
fmul
daa
inc
cld
iret
xchg
xor
dec
fcom
aam
outs
lock
mov
cli
shr
xor
int3
rol
jns
cs
clc
int3
or
out
sbb
enter
idiv
fimul
or
inc
or
push
push
jns
xchg
push
xchg
ret
mov
out
repnz
mov
into
dec
xchg
push
(bad)
xchg
sbb
fs
and
or
mov
mov
or
xchg
mov
push
test
(bad)
mov
clc
scas
xor
push
nop
cli
(bad)
mov
push
sti
push
stos
push
sub
xor
mov
in
test
sub
adc
add
lock
xlat
push
je
inc
push
push
mov
xchg
inc
outs
fs
jle
adc
popa
jae
and
xchg
std
repnz
imul
in
adc
inc
daa
pop
bound
add
pop
mov
ins
jns
jae
cmp
cmp
pop
inc
nop
cli
or
push
div
sti
int
adc
inc
cld
das
pop
add
shl
push
dec
dec
in
jg
iret
xor
dec
dec
push
push
cmp
daa
mov
add
hlt
push
inc
inc
lods
pop
sbb
in
add
cwde
jmp
popa
arpl
movs
add
aaa
cmc
add
pop
xchg
ins
(bad)
clc
repnz
cld
add
push
(bad)
mov
and
cmp
daa
dec
popf
mov
push
sbb
pop
(bad)
xor
popa
outs
mov
dec
clc
outs
push
inc
test
push
aam
popa
cs
push
sub
js
pop
stc
loopne
cmc
loope
dec
gs
push
sti
pop
add
add
sub
mov
inc
or
inc
add
test
mov
sub
adc
cmp
xor
hlt
cld
mov
cmp
pop
adc
push
inc
sbb
pop
jl
(bad)
mov
pop
jmp
pop
test
fstp
test
dec
rcl
mov
adc
iret
pop
sbb
je
sub
js
pop
hlt
cld
sub
retf
cmp
pop
pop
inc
icebp
ins
xor
dec
add
les
dec
aad
mov
pop
scas
xchg
or
movs
mov
mov
lock
pop
mov
jne
or
daa
pop
aaa
pop
xor
xor
dec
test
retf
mov
pop
cmp
scas
mov
int
inc
pushf
std
mov
pop
aad
ins
pop
test
dec
int3
es
dec
push
inc
imul
jne
adc
or
adc
(bad)
dec
push
and
repnz
add
enter
into
add
adc
loopne
adc
outs
shl
ja
add
aas
sub
push
dec
jg
pusha
push
adc
and
add
and
add
push
dec
mov
daa
add
add
sbb
push
add
in
ror
mov
rol
jo
dec
inc
add
and
or
mov
mov
adc
(bad)
outs
mov
add
push
pushf
or
add
add
test
(bad)
addr16
add
adc
fldlg2
shl
add
add
push
add
fcomip
rol
dec
or
or
push
dec
sbb
push
xor
push
dec
inc
mov
dec
jo
pop
mov
push
fadd
dec
sbb
cmc
push
movs
loope
mov
pop
shr
sbb
add
fwait
jp
shl
mov
lar
dec
push
push
cmp
mov
xlat
int3
or
ds
pop
les
cmc
das
or
jb
add
fmul
les
inc
sub
mov
jno
(bad)
call
inc
or
xor
(bad)
imul
sbb
les
mov
cli
enter
cmp
xor
outs
shl
inc
or
ror
enter
and
jo
push
push
or
mov
adc
or
or
sbb
push
fsub
add
movs
loopne
test
clc
add
cmp
in
mov
add
pusha
pusha
dec
mov
and
ins
enter
jp
pop
mov
or
xchg
or
or
movs
and
stos
push
leave
add
cld
js
test
and
inc
enter
aas
adc
sbb
or
add
xchg
movs
or
sbb
cmp
pop
fstp
ss
dec
or
inc
inc
cmp
sub
in
adc
pop
test
js
adc
xchg
cmps
into
or
sbb
or
sbb
pusha
lods
inc
mov
or
or
pop
aad
inc
test
jl
xor
je
xchg
push
sti
jg
imul
dec
sahf
xlat
aam
(bad)
cmps
bound
cmp
or
int3
inc
js
stc
or
clc
inc
dec
push
jno
or
addr16
push
aad
test
and
iret
mov
push
jne
in
jne
inc
ja
or
xor
cmp
aaa
and
or
inc
sub
and
aam
scas
lea
mov
vmread
les
test
push
mov
pavgb
push
mov
or
inc
jo
sub
mov
adc
cmps
das
xchg
jnp
test
push
cmps
or
jns
cmc
stos
mov
adc
or
cmps
pop
add
ins
xor
loope
jne
adc
add
or
mov
pop
es
add
cmp
or
push
loope
(bad)
adc
pop
mov
daa
xchg
adc
adc
push
popa
adc
ret
stos
ret
les
clc
adc
sbb
jne
add
movs
adc
adc
add
test
inc
clc
adc
sub
cmps
sbb
movs
and
repz
cmps
in
loope
mov
retf
mov
(bad)
adc
sub
lahf
adc
jle
out
jnp
cmp
sbb
scas
push
pop
jno
hlt
or
icebp
sub
lea
stos
mov
adc
adc
aad
inc
mov
xchg
add
pop
test
add
mov
aaa
sbb
push
das
sub
out
mov
push
or
das
cmps
push
xor
cmp
movs
cmp
jle
lods
push
cmp
push
cmp
dec
or
test
in
add
and
invd
xor
ins
inc
punpckhwd
add
pop
mov
nop
or
jae
push
xor
test
int3
adc
inc
xchg
xchg
mov
and
std
(bad)
mov
sub
aad
inc
pusha
cmc
enter
scas
sub
adc
out
pop
xchg
sub
punpcklwd
icebp
in
lods
out
sbb
mov
int
sbb
in
fs
xor
push
xchg
pop
ins
fild
out
ret
test
add
and
add
sbb
sbb
add
push
xor
jb
retf
scas
or
mov
pushw
cmp
cmp
add
add
or
xchg
adc
or
add
dec
jae
add
mov
mov
sub
aas
ror
mul
inc
add
xor
add
add
push
pop
mov
adc
scas
lea
push
and
push
add
push
hlt
cld
adc
sar
mov
lds
inc
push
inc
aam
cmp
xchg
xor
add
mov
adc
inc
and
pop
dec
sti
loope
jno
xchg
dec
jb
xchg
add
cmps
bound
fadd
dec
cmc
sub
inc
ret
mov
add
inc
and
add
pop
sbb
add
xor
shr
ror
sub
jmp
adc
and
dec
push
sti
dec
xchg
add
sbb
add
add
ds
pop
xor
mov
xor
gs
test
mov
inc
add
sbb
adc
adc
or
clc
add
nop
add
jae
adc
sbb
or
adc
sbb
or
jmp
and
mov
sbb
clc
mov
pop
add
push
test
fdiv
mov
mov
push
mov
xchg
adc
sub
out
ret
lock
imul
(bad)
mov
and
pop
add
push
cmc
add
test
sub
ror
sbb
add
or
add
mov
loope
inc
inc
mov
cwde
inc
dec
mov
or
or
mov
bound
rcr
test
mov
movs
dec
mov
push
or
not
add
scas
dec
loopne
mov
xchg
outs
inc
fnstsw
ret
mov
xchg
enter
push
adc
xchg
in
add
push
sbb
push
pop
add
mov
sbb
mov
dec
fdivr
cli
ins
std
jnp
in
repz
sub
movs
push
test
mov
sahf
mov
add
mov
ins
pop
sub
sti
add
jne
mov
and
cmp
pop
jg
mov
(bad)
popf
aam
adc
push
pop
cld
inc
or
lea
add
xchg
and
stc
pop
(bad)
fmul
mov
ror
(bad)
adc
push
and
nop
out
and
mov
or
out
inc
jmp
test
xor
or
sub
or
mov
pop
mov
loop
and
inc
sbb
sbb
popa
std
sub
add
lea
xor
sbb
inc
add
std
jecxz
xor
mov
and
ror
xor
retf
xor
iret
pop
js
mov
mov
sub
dec
lea
(bad)
mov
bound
jb
or
or
movzx
in
or
inc
adc
shr
jg
rcl
test
adc
aaa
lea
stc
adc
push
rcl
xchg
out
jae
inc
inc
dec
clc
inc
shl
sub
sti
adc
nop
mov
jnp
int
inc
loop
hlt
mov
pop
inc
(bad)
push
adc
cmp
or
stos
adc
ds
jne
ficomp
mov
fidiv
(bad)
push
xchg
add
xchg
cld
and
pushf
mov
sub
add
push
lahf
test
jecxz
enter
sti
cmp
jae
and
js
shr
add
adc
call
nop
cdq
jl
xor
xor
jbe
iret
add
ret
out
imul
cmp
jbe
in
pop
inc
adc
pop
sahf
add
in
pop
jge
xlat
and
jmp
or
inc
(bad)
mov
fcomp
mov
in
les
arpl
jb
fnsave
fadd
or
lahf
cmp
loopne
fs
cmp
leave
das
push
or
lods
add
pop
cld
mov
inc
jbe
js
xchg
jle
aaa
cld
mov
cmp
jg
adc
mov
arpl
jg
daa
adc
push
sar
sbb
push
je
push
push
and
stos
add
pushf
sbb
push
pop
mov
jmp
push
push
(bad)
xor
outs
push
test
jbe
inc
dec
push
mov
es
mov
push
push
push
dec
sbb
lods
out
movs
and
loopne
cmps
inc
dec
adc
fstp
and
cmp
xchg
in
jle
(bad)
movs
adc
mov
aaa
cmp
call
or
imul
cdq
mov
cmp
std
int
test
lea
lea
dec
shl
mov
xchg
dec
sbb
add
pop
repnz
jo
frstpm(287
adc
setge
scas
dec
test
(bad)
iret
(bad)
mov
dec
or
sub
pop
iret
pushf
dec
and
add
xchg
fsub
push
js
ss
dec
pop
push
push
dec
xchg
xor
mov
cmp
mov
pop
or
sar
outs
loop
imul
or
xor
adc
or
sbb
sub
sbb
cmp
fld
sub
sub
out
call
mov
inc
push
and
push
sub
nop
xor
ss
jmp
mov
pusha
adc
push
dec
imul
adc
seto
push
cs
rcl
arpl
push
gs
mov
jecxz
sub
xchg
mov
sbb
popf
mov
adc
out
push
sub
mov
mov
sbb
mov
ror
or
rol
(bad)
mov
xor
xor
popa
adc
add
push
or
push
inc
arpl
(bad)
and
stos
pushf
fisttp
inc
loopne
sbb
(bad)
aas
test
add
je
sbb
or
sbb
dec
add
xor
inc
not
inc
daa
adc
fst
or
mov
cmp
adc
and
inc
pop
aam
push
fdivr
imul
ret
cmp
jmp
add
icebp
push
inc
add
(bad)
push
pop
and
dec
push
or
and
and
retf
call
shl
lock
jne
adc
push
sub
mov
inc
xor
in
inc
sub
fmul
outs
pusha
cdq
movs
pop
loopne
clc
imul
movs
xchg
outs
mul
jae
fwait
add
movs
push
mov
or
add
leave
out
test
mov
hlt
adc
jne
or
mov
and
mov
in
pop
jmp
jae
mov
mov
mov
pop
mov
xchg
mov
inc
nop
mov
add
call
repnz
daa
push
shl
mov
jae
retf
push
fisubr
imul
fmul
aaa
aam
xchg
or
mov
clc
sub
stos
sbb
cmp
push
xor
push
jne
adc
and
clc
push
cld
sbb
fdiv
add
adc
adc
or
lock
sbb
sub
and
xchg
mov
test
je
add
sub
cmp
mov
dec
div
and
adc
ins
push
fstp
inc
shl
xor
inc
mov
lock
push
div
adc
pusha
sahf
and
bound
mov
das
rol
inc
call
sbb
scas
inc
rol
pushf
in
lods
pop
pop
add
push
push
clc
clc
mov
sbb
dec
or
mov
sub
add
sahf
jmp
dec
add
adc
push
or
xchg
je
add
cmp
jb
mov
and
repnz
cmp
or
out
test
in
add
lea
and
xchg
and
sbb
cmp
sar
lock
mov
inc
sbb
adc
je
push
adc
sbb
push
xchg
or
push
adc
sub
test
adc
sbb
cdq
add
arpl
mov
inc
xchg
pusha
iret
inc
mov
add
add
xor
sbb
fst
or
mov
add
mov
mov
push
popa
lock
xchg
mov
addr16
and
jb
in
nop
in
lea
into
or
nop
sbb
add
cdq
stos
xlat
and
push
fwait
xor
(bad)
sar
add
(bad)
in
jo
mov
hlt
pop
scas
loope
xor
imul
data16
cmp
rcl
cmp
or
aam
cmc
pop
jo
cmp
das
push
inc
add
mov
xchg
nop
jmp
int3
push
mov
mov
add
call
add
xor
call
xor
in
cmp
jg
push
jmp
or
push
or
call
push
mov
xchg
pop
adc
outs
cmp
jecxz
xor
(bad)
dec
into
retf
adc
adc
sub
jo
jmp
or
(bad)
or
clc
popa
jg
mov
jg
mov
(bad)
jg
mov
or
call
jecxz
cmp
call
enter
in
in
test
cmc
sbb
xor
pop
mov
cmp
hlt
div
xchg
fdiv
sub
mov
fwait
sbb
data16
outs
or
rcl
lock
add
push
lock
fstp
sbb
lahf
gs
xor
jp
aad
or
mov
jnp
push
add
call
cwde
cmp
push
add
aam
pop
mov
mov
loop
shr
push
and
jbe
pop
xchg
and
xor
lea
popa
sbb
mov
cmps
outs
sub
fwait
ins
or
adc
sub
jle
pop
xor
out
and
push
or
test
je
add
loope
sbb
and
cdq
xor
sub
leave
inc
adc
pop
pop
jmp
cmps
ficomp
imul
add
push
jle
push
inc
mov
and
cmp
call
les
push
sti
nop
jb
pop
fild
dec
mov
mov
add
adc
pop
add
cmp
loopne
(bad)
push
or
je
or
jmp
pop
jae
jg
imul
add
out
scas
add
adc
jno
cs
add
dec
retf
push
jle
pop
xor
push
loop
xor
add
aaa
movs
shr
inc
mov
cs
loopne
daa
jbe
jp
mov
loopne
movs
ja
xor
icebp
pop
pop
lock
daa
xchg
int3
pop
int3
push
ror
imul
xor
sbb
add
jle
sub
vmread
pusha
and
mov
cmp
and
leave
hlt
aam
ror
(bad)
add
pop
sbb
add
fidiv
fiadd
add
clc
cmps
mov
push
mov
push
loop
in
addr16
jmp
jb
fisub
jmp
loopne
and
movs
repnz
or
push
or
fcom
push
dec
scas
loop
in
out
sbb
adc
call
and
jbe
add
stc
mov
pop
or
mov
push
and
adc
(bad)
shl
lock
enter
sbb
les
fiadd
sbb
les
ss
add
fstp
and
sub
dec
add
pusha
int
lock
pop
ret
cmps
add
sbb
pushf
std
aas
ret
stos
jg
add
mov
jmp
int3
xor
or
and
loop
mov
adc
dec
loope
xor
daa
movs
loopne
inc
js
out
ss
add
and
and
xchg
ss
call
ret
mov
enter
das
out
add
aaa
xchg
jno
sbb
xor
jns
mov
or
cld
ja
mov
add
into
mov
sub
lahf
lods
bound
sub
lahf
cmps
mov
sub
or
or
add
add
jne
adc
rcr
lahf
push
mov
mov
enter
js
mov
mov
aam
xor
or
fidiv
loopne
mov
les
lahf
test
gs
and
inc
cmps
jne
xor
mov
inc
mov
or
rol
movs
stos
or
movs
xchg
xor
sub
push
retf
cmps
cmp
push
inc
not
lea
in
xchg
adc
jne
push
je
ss
cmp
test
nop
or
mov
push
popf
pop
push
and
fs
fild
add
jge
cmp
adc
add
retf
ror
push
and
lahf
xor
add
add
cmps
push
push
repnz
jnp
dec
dec
push
mov
or
inc
inc
inc
lods
out
cmp
inc
and
leave
sbb
adc
js
pop
adc
das
pusha
rcr
sub
das
mov
int3
scas
test
(bad)
adc
das
les
mov
mov
xchg
and
add
xchg
das
movs
add
xchg
das
and
das
push
ins
dec
cmps
bound
aas
daa
pop
scas
mov
movzx
mov
pop
cmp
retf
xor
bound
cmp
retf
shr
and
sbb
and
pop
shr
adc
in
das
cmp
sub
ja
adc
xor
out
sbb
and
adc
or
loope
inc
xchg
mov
inc
pop
adc
inc
js
fs
adc
rcl
call
inc
and
and
gs
push
ds
cdq
sub
pop
lock
cmp
inc
sbb
inc
dec
test
cs
ds
sbb
and
or
shl
test
or
aas
dec
add
sub
xor
cwde
jecxz
mov
rol
inc
sbb
xor
pushf
wrmsr
mov
sub
jmp
nop
cmp
bswap
or
in
xchg
adc
xor
pusha
cmps
clc
test
mov
int3
cmps
lds
pop
sub
hlt
sub
inc
push
inc
mov
repnz
in
js
inc
fsubr
test
inc
inc
les
popf
arpl
rdtsc
or
add
cmove
cmp
cmovo
std
xor
bound
cmps
dec
pusha
mov
xor
cmps
mul
dec
adc
pop
or
mov
pusha
jmp
cmps
pop
push
dec
mov
cmp
add
adc
inc
shl
or
xor
adc
mov
fnstcw
xchg
jg
popa
cmps
imul
inc
xor
mov
mov
mov
sbb
cs
pop
mov
push
xor
rol
sbb
stos
add
shl
pop
stos
jge
mov
adc
adc
add
xchg
cs
mov
outs
xchg
sub
test
and
jle
test
cmp
je
pusha
les
mov
hlt
mov
inc
in
rcl
mov
cmp
(bad)
dec
or
cmp
inc
jo
or
shr
jno
aad
pusha
sbb
mov
dec
aaa
pop
push
frndint
push
popf
push
sub
mov
retf
test
out
and
sahf
or
in
jmp
sbb
pusha
inc
dec
xlat
dec
xchg
js
push
lock
inc
out
or
inc
sbb
dec
cmps
in
pusha
xlat
add
jo
adc
lea
xlat
or
jl
sbb
xlat
or
mov
mov
rol
test
xor
push
out
push
adc
movs
fnstsw
call
outs
dec
pop
and
push
in
(bad)
add
xchg
je
xor
cwde
dec
jmp
sub
sbb
cs
jecxz
xchg
add
xchg
xor
sbb
(bad)
fdiv
and
jne
pushf
std
sub
mov
enter
movs
rcl
mov
lods
lahf
lods
push
and
scas
dec
jne
xchg
dec
add
outs
push
sbb
cmp
xchg
or
cld
cmp
adc
mov
push
dec
rcr
adc
add
mov
ins
in
pop
dec
cmp
(bad)
cmp
or
movzx
lahf
cld
call
ja
stos
rol
dec
lahf
add
lock
dec
lahf
cmp
in
push
loopne
dec
lahf
ror
and
cwde
fwait
inc
push
leave
test
or
inc
ja
dec
sahf
mov
cmp
add
cwde
and
loopne
aaa
xchg
inc
dec
xchg
jns
pop
or
popf
push
div
and
adc
jmp
mov
popf
xor
adc
sbb
mov
dec
sbb
add
fs
aam
stc
aas
enter
and
pop
ret
and
pop
das
inc
or
xor
pusha
adc
out
dec
jb
in
jg
sub
inc
push
xor
jb
jo
cld
out
inc
adc
das
jns
test
xor
test
or
push
xlat
scas
push
out
repnz
sub
out
adc
inc
out
dec
dec
xchg
pushf
push
push
inc
inc
add
jb
enter
mov
push
outs
mov
pushf
or
and
mov
sar
mov
shl
and
pop
fistp
les
in
(bad)
fild
xlat
rol
pop
ret
and
and
inc
sbb
jl
add
add
call
and
dec
push
out
out
inc
push
adc
push
aas
push
or
xor
test
test
(bad)
rol
xor
xchg
push
pushf
mov
cs
lock
add
or
adc
push
popa
add
add
jns
or
adc
jo
sbb
inc
jne
(bad)
in
add
hlt
cld
mov
ror
in
adc
cld
cmp
mov
add
pop
dec
das
pop
dec
sbb
adc
enter
das
pop
(bad)
stos
ror
lar
popa
and
and
push
inc
pop
sub
pop
inc
mov
gs
adc
int
xor
jne
cld
adc
sub
adc
push
add
pop
pop
cmp
cmp
stos
add
pusha
adc
maxps
lods
inc
xor
adc
loopne
and
push
fs
push
xchg
lods
adc
out
jo
jp
pop
mov
dec
pop
je
outs
das
gs
das
sbb
jmp
xchg
dec
das
xor
aaa
aad
xchg
retf
fadd
popf
push
das
sub
gs
cwde
or
xor
aas
sub
or
add
dec
xor
xchg
pop
pop
dec
enter
jmp
add
out
loope
mov
outs
push
fnsave
pop
outs
das
xor
add
add
sub
push
pop
adc
dec
inc
es
jecxz
push
popa
and
pop
cmp
movs
push
test
and
xor
xchg
mov
xor
add
outs
adc
paddsb
arpl
push
xchg
push
add
lea
dec
arpl
fisub
imul
aaa
fs
daa
and
repz
xchg
daa
daa
std
xor
leave
enter
call
fs
int3
adc
pop
mov
in
mov
vmwrite
jb
sar
push
cmp
sbb
lds
imul
jge
stos
adc
push
jmp
push
inc
pusha
inc
dec
or
stos
push
rol
xor
lahf
nop
test
or
pop
dec
cmp
xchg
mov
lds
ins
jmp
je
mov
xor
sub
jno
lds
in
inc
dec
inc
adc
cld
pusha
or
adc
lds
sbb
inc
movs
mov
aam
or
mov
jmp
cld
xchg
xor
pop
add
adc
xchg
mov
das
lds
push
inc
fs
lds
and
mov
bound
dec
(bad)
pop
dec
add
inc
inc
add
or
push
adc
dec
add
cld
inc
dec
pop
push
and
gs
or
mov
adc
inc
or
js
scas
adc
adc
sub
xchg
push
and
push
dec
sub
gs
push
dec
es
sbb
lds
cmp
push
mov
or
imul
bound
sbb
sbb
or
mov
sbb
jge
sub
sbb
dec
sbb
add
xchg
dec
xchg
sbb
xchg
xor
iret
dec
jb
mov
iret
lock
pop
add
in
loopne
xchg
aad
dec
iret
in
xlat
and
xor
add
jl
adc
jns
pop
gs
pusha
adc
mov
enter
xchg
add
ins
or
xchg
mov
push
test
inc
dec
xchg
inc
add
jmp
inc
dec
inc
mov
xor
pop
or
and
ret
xor
sbb
push
add
fwait
inc
aaa
push
push
int3
adc
aas
adc
les
mov
push
fwait
cmp
das
xchg
outs
push
jns
jns
lods
outs
adc
(bad)
outs
push
add
cmp
sbb
leave
adc
std
int3
shr
push
sub
leave
int
test
nop
cdq
leave
int3
lods
add
rol
cld
lods
sbb
push
add
(bad)
mov
mov
outs
inc
and
out
sbb
ja
lods
add
jl
push
mov
push
sbb
and
sub
xchg
push
xor
pop
das
pop
xor
js
jno
mov
hlt
les
cmp
das
mov
leave
jno
push
add
pop
push
out
xchg
test
dec
int3
dec
shl
in
lods
xlat
mov
push
xchg
pusha
add
pop
pop
inc
add
or
sub
out
pop
jb
dec
jb
dec
or
cmps
loop
enter
push
cmp
(bad)
fnstenv
repnz
popa
jae
mov
pop
adc
adc
clc
addr16
mov
dec
aas
push
cmp
sub
xor
ins
ins
dec
shr
dec
les
ins
ins
shr
in
inc
add
outs
xchg
mov
push
retf
lock
retf
arpl
retf
in
(bad)
or
cmp
je
jb
repnz
xor
enter
jns
js
outs
movs
pushf
mov
lock
inc
sahf
pushf
repz
test
dec
dec
dec
int3
icebp
pop
jnp
lods
daa
daa
daa
test
or
jb
pop
orps
les
jge
jge
mov
mov
push
aam
dec
inc
jnp
add
dec
jns
xchg
and
mov
cmp
ror
ins
jns
cmp
jno
pop
jns
dec
leave
or
cmp
dec
add
jns
push
add
adc
adc
pop
mov
push
int3
adc
test
add
adc
add
add
jle
add
enter
add
add
rol
xchg
das
cmp
push
jno
fwait
sbb
mov
cmp
cmps
dec
adc
js
jns
inc
mov
pop
jno
jno
push
loop
add
enter
ror
xor
ss
add
push
aas
int3
push
add
add
add
cmp
nop
mov
shr
lods
fild
push
sub
add
push
push
add
add
or
inc
pushf
add
adc
or
add
test
inc
cmps
add
add
and
jle
add
dec
mov
jns
mov
or
ror
cwde
sbb
xor
or
pop
dec
add
sub
inc
hlt
call
add
cmp
xchg
and
mov
rcr
add
or
outs
pop
mov
jb
sbb
add
mov
or
jg
stos
aam
popa
mov
and
sbb
dec
ins
ins
jmp
push
jb
add
adc
je
pop
adc
adc
fistp
aad
sti
out
repnz
test
push
lods
test
cmp
mul
add
mov
les
sbb
das
call
fadd
xchg
cmp
push
icebp
sbb
push
sti
add
pop
pop
int
pop
mov
adc
mov
iret
pop
inc
inc
pushf
test
jo
xlat
push
sbb
dec
mov
(bad)
dec
addr16
stos
and
in
mov
jp
rol
or
repz
or
xor
push
daa
pmaddwd
cmp
dec
test
add
lods
test
inc
aaa
push
xchg
dec
mov
inc
push
mov
les
test
test
inc
pop
test
add
push
add
rol
and
mov
or
mov
rcr
push
cmp
ins
loopne
scas
xlat
icebp
fsubr
mov
pop
pop
mov
push
scas
sub
cmp
jmp
shl
push
repnz
jns
add
mov
push
jmp
mov
scas
test
lds
cmp
mov
sub
jne
adc
scas
punpckhdq
daa
and
xchg
out
lea
fs
leave
(bad)
in
adc
in
int3
push
(bad)
sub
push
mov
aas
nop
pmaddwd
xor
mov
mov
adc
ins
(bad)
lahf
in
punpckhdq
pop
add
xor
adc
mov
int3
dec
add
mov
cmc
jno
sbb
(bad)
ror
cmc
jo
xor
add
pop
xor
mov
push
inc
pushf
or
mov
dec
shr
push
sti
cmp
test
cmc
adc
cmc
add
xor
xor
adc
sub
rcl
or
and
xchg
mov
fwait
ror
sbb
xchg
or
xor
mov
sbb
or
in
xchg
xor
xor
add
lods
inc
ret
add
pop
stos
sbb
jb
cmc
xor
xor
call
fld
inc
push
enter
xor
and
out
dec
cmc
add
cmc
and
add
inc
adc
push
or
or
xor
bound
lods
add
jns
add
nop
push
adc
dec
cmc
xor
mov
and
enter
adc
and
and
cs
cmc
or
add
test
inc
mov
cmps
add
xor
cmc
jno
cwde
mov
add
and
mov
dec
xor
into
jbe
(bad)
push
add
or
pop
int
cmp
add
push
mov
js
sbb
in
xor
cmp
pop
div
pusha
push
xchg
and
ins
or
out
mov
push
or
mov
sbb
xchg
jmp
(bad)
mov
and
pop
in
pop
movs
push
adc
xchg
dec
pop
cmp
(bad)
xchg
test
call
pop
push
cmp
arpl
xor
sar
lds
jle
pop
dec
add
mov
dec
xchg
dec
lds
lds
push
adc
loopne
lahf
push
xor
popa
leave
hlt
cld
lds
pop
sysret
inc
add
and
push
pushf
cmp
xchg
sete
add
pop
jne
dec
hlt
push
and
and
hlt
adc
xor
inc
cmp
adc
mov
gs
shl
mov
retf
xchg
add
pop
hlt
int
stos
jns
add
sub
mov
push
xchg
add
shl
lds
call
pop
or
pop
mov
add
aas
add
and
icebp
ins
mov
inc
inc
adc
pop
mov
xchg
lea
push
cdq
es
adc
adc
mov
lods
adc
mov
shl
int3
cdq
mov
sub
push
test
cmp
jp
loope
adc
call
or
xor
pop
leave
jmp
dec
push
loope
ins
shr
mov
or
push
fwait
into
or
jne
stc
int3
adc
pop
mov
and
lock
call
loopne
js
pop
cld
das
sbb
adc
mov
js
les
pushf
mov
in
popf
push
or
ins
push
shl
add
loopne
cwde
push
ror
mov
pusha
inc
add
adc
xor
or
or
cmps
adc
inc
fcom
loopne
test
inc
push
jo
and
and
pop
imul
mov
iret
fld
push
add
repz
icebp
rcr
jmp
lahf
push
lahf
add
cmps
aaa
test
pop
mov
stos
lahf
pop
(bad)
js
in
dec
push
mov
pushf
pop
pop
cmp
and
xor
movs
scas
nop
push
jb
jg
jg
jg
and
pop
sahf
movs
jg
push
test
movs
mov
mov
push
sti
xchg
pop
std
mov
aas
push
xchg
mov
ins
sbb
cld
out
sbb
xlat
jl
push
pusha
(bad)
mov
out
cmp
adc
xchg
stc
test
push
xor
push
adc
xor
xor
int
adc
xor
retf
xor
xlat
pop
std
test
icebp
dec
ror
adc
add
int
cmps
add
je
rol
or
outs
pop
add
add
shl
inc
sub
inc
pop
mov
scas
lods
adc
or
adc
add
sub
xor
lahf
test
mov
retf
inc
into
mov
cmp
movs
or
dec
out
pop
popa
sbb
ss
or
xlat
cvttps2pi
mov
add
dec
out
xchg
xor
and
in
inc
cmps
mov
jo
sbb
test
mov
stos
mov
sbb
std
xor
and
std
dec
mov
repnz
aad
xchg
mov
mov
cs
add
mov
sbb
cmps
dec
xchg
add
ss
hlt
je
mov
fisttp
js
add
jnp
rcl
jo
daa
call
jo
pop
pop
ret
push
inc
js
add
add
add
push
mov
cmps
xchg
mov
enter
lahf
and
in
xchg
dec
cmps
pop
cmps
adc
add
push
pop
pop
adc
dec
mov
pop
js
loopne
jmp
jp
mov
fcom
dec
mov
sbb
aam
mov
or
inc
mov
fsub
xor
add
xchg
push
jge
mov
repz
cld
das
push
sub
adc
cmp
je
sbb
add
jne
cmp
push
xor
adc
das
out
or
and
or
sbb
inc
nop
or
mov
lods
fwait
adc
mov
dec
add
push
(bad)
jno
xchg
inc
inc
push
sbb
(bad)
hlt
(bad)
mov
pop
or
adc
test
adc
sbb
sbb
or
mov
adc
clc
mov
fwait
cmp
pop
cld
test
lock
add
ficomp
sub
push
mov
int
ins
cmp
sti
adc
stos
adc
add
pusha
xchg
adc
into
or
cmp
fdivr
and
push
(bad)
je
add
pmaxub
or
inc
outs
enter
je
xor
sbb
xlat
pop
sahf
push
inc
addr16
add
add
sbb
jl
outs
ror
in
pop
add
or
nop
mov
lds
hlt
cmps
adc
adc
mov
push
js
jle
retf
fldcw
ror
cmp
and
pop
lods
mov
fimul
add
sub
neg
push
sbb
push
stos
push
bound
pop
or
mov
shl
push
inc
cmp
repz
sbb
add
sbb
dec
lock
sar
add
rol
pop
adc
ror
and
mov
pop
add
jmp
aaa
push
out
add
(bad)
(bad)
lods
call
je
mov
xchg
inc
ret
(bad)
loopne
test
push
or
jnp
pop
jmp
int3
fisttp
cs
inc
(bad)
data16
rcl
xchg
dec
mov
adc
ret
push
int3
jle
xchg
push
cmp
bts
retf
adc
test
add
das
push
push
ja
jbe
or
add
add
add
jmp
inc
adc
or
mov
inc
sbb
jp
sbb
test
pop
jg
test
rcl
inc
icebp
pop
pop
in
mov
pusha
pusha
jo
add
mov
fild
test
je
push
ja
stos
clc
sbb
inc
dec
repz
push
pusha
in
lea
mov
sbb
pop
mov
mov
pop
in
dec
adc
jne
in
fadd
fild
cmp
add
and
rcr
push
add
or
jmp
cmp
mov
outs
jle
adc
outs
fsubr
jne
jge
neg
fwait
xor
pop
pop
jne
ss
pop
pop
jge
and
inc
cmp
pusha
test
adc
sti
and
rol
lock
and
fwait
out
adc
jmp
xor
or
mov
rol
scas
fdivr
mov
and
in
xchg
inc
daa
jns
ret
push
(bad)
mov
sbb
adc
repz
fs
and
push
add
nop
pandn
stos
inc
or
cmp
inc
frstor
jno
mov
mov
lock
jno
and
jae
in
mov
sbb
xchg
stos
jo
pop
js
dec
jne
cmp
clc
add
sub
dec
loope
sub
add
fld
pop
imul
and
je
mov
jmp
out
inc
mov
jecxz
ret
sbb
not
dec
add
xor
adc
dec
pop
je
and
mov
out
jae
loopne
loope
xchg
test
mov
mov
cwde
cmp
add
or
push
je
sbb
xchg
xchg
ret
jp
dec
mov
sahf
add
jnp
cmp
and
aaa
mov
mov
mov
outs
add
andps
dec
(bad)
pop
inc
shr
(bad)
(bad)
mov
test
into
jl
bound
hlt
xchg
pop
or
push
ret
and
jmp
jl
inc
(bad)
push
or
sbb
push
inc
pop
sbb
mov
jne
inc
push
inc
cmp
hlt
rcr
jmp
push
push
retf
out
test
mov
cwde
mov
ins
clc
dec
and
scas
pop
rol
mov
add
sub
jae
sbb
loop
mov
outs
sbb
inc
jb
or
cvttps2pi
shr
xor
cmp
sete
fsubp
mov
and
jbe
je
mov
push
xchg
out
xchg
sbb
sub
or
sub
and
push
inc
pop
sbb
aaa
movs
pop
pusha
and
pop
mov
ret
xsave
jbe
dec
mov
aad
addr16
mov
mov
clc
jo
add
inc
sbb
push
adc
out
imul
push
or
add
push
cmp
js
add
leave
xor
pop
push
ficom
sbb
cmp
popa
mov
aaa
sbb
sub
(bad)
iret
add
ret
add
clc
add
inc
and
test
pop
movs
mov
call
or
sbb
inc
dec
and
adc
fcmovb
mov
cmps
fistp
sahf
or
push
add
jb
or
xor
add
sti
sub
sar
jns
xlat
add
stc
clc
sub
push
rcr
ss
mov
dec
jmp
adc
lea
add
add
push
daa
adc
icebp
jge
movzx
adc
xor
ret
xor
lock
(bad)
mov
shl
or
push
rcl
fistp
add
cmp
bt
cmp
mov
push
inc
add
adc
inc
hlt
fadd
mov
pop
push
mov
sub
adc
rol
cmp
sub
xor
mov
pop
jle
ret
sbb
pop
lods
mov
or
jns
cdq
sahf
add
pusha
xlat
ror
jne
or
aam
push
push
scas
and
push
inc
retf
jne
dec
xlat
push
push
mov
pop
sub
fwait
mov
fisttp
outs
(bad)
adc
xor
sub
inc
mov
dec
sub
xchg
shl
mov
out
aad
xchg
adc
push
and
cmp
or
mov
mov
cmp
sbb
mov
sub
mov
xor
dec
js
mov
mov
fisttp
add
dec
mov
je
push
stos
xchg
(bad)
mov
inc
add
dec
arpl
scas
xlat
pop
xor
daa
scas
sub
mov
outs
cs
cmp
push
or
jl
xor
push
add
push
add
dec
jne
jne
inc
imul
dec
popa
js
dec
outs
or
cmp
mov
pop
cmp
mov
sub
cmc
jnp
div
add
movs
and
adc
xor
mov
xchg
xchg
call
std
call
test
or
fs
outs
imul
outs
or
imul
mov
retf
xor
and
inc
fwait
xor
pop
pop
fcmovne
mov
or
xor
fdiv
pop
add
jae
jno
xchg
(bad)
inc
div
mov
inc
pop
pop
mov
push
and
or
push
sbb
mov
adc
inc
and
sbb
out
icebp
sub
lods
sub
or
shr
dec
popa
jp
push
pop
je
add
mov
push
mov
cs
outs
jae
mov
clc
dec
add
push
add
pushf
out
mov
jae
mov
js
add
add
(bad)
sub
leave
leave
xchg
xchg
pop
or
psrad
mov
pop
xchg
sar
repnz
in
mov
jns
jb
push
(bad)
in
and
cmp
cmp
pop
xchg
leave
add
dec
outs
mov
mov
or
imul
pmulhuw
les
setnp
sub
(bad)
syscall
push
in
mov
sub
ds
leave
add
xor
(bad)
repz
pop
and
add
or
inc
lea
xor
(bad)
inc
sub
adc
jecxz
enter
dec
gs
mov
or
les
xchg
mov
fcom
and
mov
in
int
sub
mov
daa
cmp
add
ror
mov
cmp
inc
jae
add
dec
jl
dec
jns
mov
adc
or
imul
iret
fld
add
in
dec
add
shl
mov
loop
mov
in
pop
rcl
add
cdq
pop
scas
sub
inc
ins
cdq
jnp
mov
push
ins
inc
and
sub
inc
or
mov
adc
ds
cmp
je
in
cmc
add
jae
or
je
pop
jae
sbb
push
add
jnp
or
dec
dec
popa
jae
mov
dec
add
cmp
js
es
shl
inc
inc
mov
outs
popa
fs
add
and
test
dec
je
mov
mov
mov
fild
pop
dec
ins
outs
push
fs
xchg
pop
mov
or
and
sbb
stos
int3
lahf
dec
inc
cmp
fwait
popaw
outs
or
add
test
mov
adc
dec
outs
ins
das
jo
lea
stos
mov
rcl
xor
jo
ss
jae
and
cmp
adc
push
inc
jne
stos
jo
mov
adc
ficom
imul
push
imul
in
mov
and
push
fldcw
out
adc
jae
ins
outs
jbe
add
add
rcr
ins
mov
push
inc
outs
dec
jno
add
cmc
inc
add
mov
cmp
and
pusha
adc
sub
add
daa
sub
sub
outs
arpl
push
mov
inc
fmul
jg
jle
popa
ins
cwde
adc
mov
mov
mov
mov
or
mov
scas
arpl
jmp
scas
jne
aad
call
jo
dec
xlat
outs
push
popa
shl
gs
mov
popa
jbe
adc
add
lea
xor
loope
ror
push
add
dec
and
cmp
sub
mov
ror
ins
scas
add
xchg
jecxz
imul
jg
je
ins
xchg
add
add
cmp
mov
and
ror
add
add
mov
xchg
cmps
lea
sub
pop
mov
inc
add
mov
aaa
les
xor
inc
stos
push
scas
out
(bad)
jp
mov
(bad)
sbb
push
xor
xlat
loopne
cmp
jnp
mov
pop
mov
rol
out
bound
or
inc
inc
inc
inc
jnp
ret
add
outs
sub
lea
dec
sbb
push
or
or
jb
sbb
or
aas
ja
rcl
fisttp
popa
fstp
dec
dec
sbb
mov
mov
push
or
xchg
lods
iret
or
mov
or
test
cld
and
xor
sbb
mov
xor
xor
pop
jb
lods
or
cmp
cmps
je
or
pop
dec
xchg
adc
adc
jle
jmp
dec
ret
mov
adc
add
clc
add
lahf
or
fwait
je
mov
jmp
mov
add
(bad)
pop
iret
lods
or
adc
pusha
xor
xlat
dec
aam
lods
sub
sub
mov
cmp
or
xchg
push
aam
mov
sbb
mov
stc
push
js
pop
mov
xor
clc
(bad)
jne
mov
test
sete
test
cmp
fild
push
push
dec
cli
ins
and
inc
inc
push
or
test
xchg
test
sbb
lods
sbb
or
inc
push
mov
or
adc
clc
pop
pop
pop
dec
jo
add
add
stos
mov
inc
dec
jnp
sub
out
jne
mov
mov
pop
sub
dec
mov
(bad)
adc
ret
mov
jg
or
adc
fadd
jecxz
add
pop
cwde
test
sbb
sub
xor
push
push
push
rcr
cmp
pusha
push
mov
aas
sti
je
rcr
jmp
shl
jle
hlt
pop
imul
pop
dec
jp
add
cli
xor
mov
jecxz
je
ss
les
ret
add
popa
int3
pop
mov
cmp
retf
adc
mov
xchg
rcr
and
dec
iret
arpl
int3
aas
pushf
mov
out
pop
(bad)
or
sbb
sti
pop
xor
ds
in
and
int3
outs
mov
adc
cmp
iret
push
and
in
enter
pop
(bad)
add
add
push
nop
inc
push
retf
retf
mov
iret
and
adc
jg
sub
jp
mov
xor
imul
(bad)
hlt
push
push
or
test
ret
inc
fldln2
push
cmp
in
cmp
jo
jo
mov
in
cmp
bound
add
or
mov
aam
aam
adc
or
clc
inc
and
ret
test
int
lea
(bad)
mov
mov
out
sub
and
add
mov
cld
xor
adc
and
mov
push
fs
fadd
inc
aam
dec
xor
enter
cmps
cmp
sub
shl
inc
xchg
test
call
pop
(bad)
sbb
arpl
popf
xchg
or
add
add
push
push
jp
push
iret
adc
test
out
test
push
push
push
add
rol
mov
dec
iret
pop
mov
neg
push
inc
push
sbb
pop
add
push
pop
jnp
sbb
inc
ret
dec
push
inc
scas
std
fiadd
dec
jbe
add
or
fsub
out
jnp
push
inc
inc
mov
inc
cs
push
cmp
mov
outs
adc
add
fmul
es
addr16
inc
or
sub
(bad)
inc
dec
dec
js
jb
push
push
ja
pop
cld
or
adc
push
cmp
out
xchg
mov
jne
jle
xchg
or
adc
jp
jo
cmp
and
push
mov
fisttp
sar
sub
and
push
add
add
pop
pop
dec
cli
test
xor
add
pop
jo
xor
(bad)
stc
mov
push
fist
mov
pusha
add
push
push
or
adc
rol
fs
mov
imul
shl
xchg
retf
sar
sbb
xor
cld
shr
test
xchg
fadd
add
stos
mov
cmp
mov
imul
xchg
hlt
jmp
lds
loopne
pop
push
or
enter
push
repnz
fst
push
or
pop
ja
add
push
xlat
jg
ret
add
or
bound
pop
ret
inc
dec
or
and
jge
mov
ins
mov
mov
mov
fcom
fisubr
mov
jecxz
cmp
cmps
and
sub
std
xor
mov
pop
pop
(bad)
jmp
nop
arpl
jb
pop
push
dec
jmp
je
mov
aas
inc
push
mov
ja
inc
xor
aad
imul
push
mov
imul
jbe
std
jmp
iret
or
add
leave
pop
mov
xchg
push
add
inc
xlat
in
aas
or
jo
loope
fild
or
dec
cs
inc
cmp
iret
push
jg
lods
mov
dec
add
or
shr
mov
add
leave
add
imul
push
jo
or
sbb
adc
add
imul
bnd
loopne
out
jp
jb
inc
jg
add
out
and
add
dec
outs
outs
or
(bad)
push
mov
imul
ret
push
aas
inc
mov
sbb
add
add
mov
pushf
pop
sbb
call
sbb
adc
cs
cmps
mov
mov
mov
add
dec
pop
fidiv
gs
cs
scas
xor
(bad)
mov
xchg
ss
xchg
fwait
sti
aam
inc
gs
sub
aaa
and
lds
inc
mov
cmp
pop
jb
add
push
add
cmps
dec
outs
ins
add
push
pop
sbb
scas
ins
sub
pop
lods
inc
mov
ja
aaa
inc
xor
push
je
or
(bad)
jno
jne
popa
out
push
outs
sbb
shl
or
aam
inc
mov
xor
inc
rol
loop
inc
mov
jb
or
or
aas
push
ja
loope
rcr
fcmovnb
outs
pop
in
push
xorps
push
pusha
jmp
inc
push
pop
cmps
xlat
push
mov
xor
or
stos
pop
or
push
outs
add
sub
mov
fidiv
inc
xchg
out
pop
fcmovnb
ror
jmp
add
ds
add
mov
js
and
and
push
(bad)
pop
pop
out
pusha
mov
gs
fadd
or
sbb
sub
stos
test
jg
wrmsr
movs
xchg
push
mov
aaa
inc
adc
fcom
pop
or
cs
aas
sub
pop
adc
or
ins
mov
adc
sub
rol
ja
or
inc
inc
add
push
and
sub
aaa
sub
pop
pusha
inc
lahf
iret
aas
pop
ins
mov
mov
pop
out
sub
push
arpl
ins
add
rcl
ja
mov
movs
add
scas
dec
dec
dec
sbb
mov
jg
aas
inc
ins
and
imul
lock
adc
in
int
jne
push
mov
push
test
pop
and
adc
add
(bad)
mov
jl
pop
pop
mov
test
cmp
js
push
mov
mov
clc
inc
ins
jno
cmp
and
xor
clc
push
mov
xor
mov
cld
inc
sbb
mov
and
dec
das
sbb
cmps
das
or
out
(bad)
sub
movups
(bad)
jno
ja
mov
imul
stos
inc
mov
pop
aaa
ins
sub
outs
add
inc
mov
cmps
dec
jp
ret
sbb
push
daa
popa
lahf
fwait
sbb
shl
aas
cmp
pop
and
in
jno
jne
and
pop
jmp
adc
push
sbb
outs
add
fs
mov
aaa
or
icebp
jne
inc
out
daa
inc
test
not
or
and
jns
out
jmp
dec
inc
lahf
retf
mov
adc
or
jae
lahf
iret
dec
jae
gs
adc
movd
add
popa
add
xchg
jo
inc
shr
cmp
add
mov
or
mov
mov
ja
inc
mov
neg
ins
add
xchg
neg
jns
popa
add
inc
add
mov
shr
arpl
adc
dec
sti
bound
jb
or
add
mov
mov
(bad)
or
fcmovb
fcmovb
imul
imul
xor
loope
mov
push
outs
or
push
or
push
(bad)
add
arpl
test
push
test
add
xchg
or
mov
dec
add
xor
pop
iret
sub
inc
or
xchg
dec
xchg
gs
inc
clc
aas
out
add
jae
gs
sbb
add
scas
add
sbb
mov
(bad)
imul
add
rcl
pop
add
dec
dec
cs
scas
addr16
inc
add
sub
cmc
(bad)
bound
push
dec
mov
add
mov
(bad)
fcom
cmps
jae
je
push
test
or
and
jo
lock
out
push
call
or
aaa
mov
daa
mov
pusha
mov
aaa
out
aas
lds
cwde
je
outs
pop
push
and
add
jns
dec
ret
sbb
xchg
pop
ja
or
movs
call
push
push
pop
sub
outs
dec
or
and
push
out
ds
shl
dec
dec
inc
add
lahf
dec
sbb
retf
gs
push
and
mov
inc
mov
push
mov
ja
outs
xadd
pop
mov
pusha
mov
jg
data16
cmps
sub
inc
shl
push
test
arpl
lahf
push
movs
xor
jnp
arpl
mov
add
push
mov
or
or
pop
mov
dec
jns
add
push
sbb
pop
push
dec
or
dec
push
sub
adc
dec
add
adc
sbb
outs
xchg
dec
rcr
pusha
dec
add
push
sub
adc
or
push
sub
sbb
or
pop
push
mov
out
inc
xor
scas
cmp
xlat
mov
gs
jne
sbb
and
pop
cmovg
add
push
jo
movs
mov
fld
push
in
mov
call
pop
fcom
jo
or
xlat
or
add
inc
(bad)
inc
je
or
xchg
outs
sti
adc
dec
xchg
dec
add
arpl
push
lahf
rcl
mov
adc
arpl
sbb
popa
test
push
outs
inc
sub
adc
push
jns
push
cmp
dec
mov
cmps
mov
sbb
stos
cli
xor
fs
add
mov
or
test
pusha
aas
aaa
dec
cmp
or
xlat
addr16
shl
or
push
or
imul
out
pop
out
loopne
adc
mov
sub
jo
gs
inc
mov
aad
xchg
jp
xor
jb
jne
xchg
cld
rcl
ins
add
ins
inc
add
neg
fs
fadd
xlat
fimul
dec
mov
clc
push
add
push
cmp
dec
add
sub
add
push
fadd
jmp
or
shl
aas
sub
sub
push
cmp
push
outs
inc
test
xchg
or
add
pop
outs
inc
or
fadd
popa
aas
ret
inc
adc
stos
mov
mov
imul
mov
mov
fs
outs
push
add
inc
xchg
call
mov
out
add
sbb
or
cmp
jae
add
inc
outs
scas
je
outs
inc
mov
xlat
add
cld
cwde
call
pop
popa
and
and
aas
(bad)
scas
jbe
pop
or
aad
pop
push
jg
add
dec
push
or
push
aas
aas
pop
pop
je
push
and
test
scas
hlt
xchg
sbb
cs
add
int3
xchg
shl
lahf
sbb
icebp
xor
xor
aad
movs
xor
fsub
dec
add
pop
adc
and
dec
mov
and
fsub
xchg
cld
pop
push
pop
push
mov
call
pop
lahf
ja
(bad)
jmp
ds
add
dec
mov
xchg
fwait
ins
add
jg
push
(bad)
or
and
dec
pushf
xor
add
push
xchg
dec
mov
cmp
test
nop
sbb
xchg
cmp
shr
add
cs
dec
and
inc
cmp
std
adc
(bad)
xor
js
cs
mov
in
mov
xchg
mov
aad
add
shl
mov
test
jle
xchg
push
mov
push
js
movs
ja
xchg
dec
retf
jecxz
mov
add
or
xor
cmp
push
cs
cmp
push
fcomp
inc
xchg
pop
outs
jp
or
test
mov
sbb
xchg
add
sbb
pop
mov
into
dec
addr16
push
cld
fiadd
loop
add
leave
leave
leave
add
leave
pop
or
or
leave
leave
leave
or
leave
(bad)
(bad)
icebp
repnz
in
repz
cmc
mul
in
in
clc
stc
cli
in
in
sti
cld
std
(bad)
in
in
jmp
loope
in
in
jecxz
in
in
in
out
jmp
in
in
in
out
in
in
out
rcl
shl
in
in
aam
(bad)
in
in
xlat
fcomp
(bad)
in
in
(bad)
fsubp
in
in
rol
in
in
ret
(bad)
(bad)
in
in
enter
in
in
int3
int
in
in
iret
mov
mov
in
in
mov
mov
in
in
mov
in
mov
in
in
mov
in
mov
out
in
test
inc
cli
jae
sbb
dec
rsqrtps
mov
inc
sub
xchg
jmp
arpl
shl
pop
sub
add
dec
arpl
sub
lock
sbb
pop
clc
das
dec
sbb
adc
inc
rcl
fild
cmp
hlt
mov
or
jae
and
cmp
(bad)
in
jo
jnp
add
add
(bad)
inc
outs
outs
je
nop
add
push
add
rol
xchg
rol
or
imul
aas
add
arpl
jo
xchg
mov
shl
or
loopne
sub
adc
mov
inc
(bad)
or
jnp
iret
dec
mov
lock
inc
cld
into
fist
jl
push
fcom
pop
jo
or
loope
push
outs
jp
push
sahf
jae
add
jo
in
sbb
or
push
rol
push
imul
or
push
push
fstp
stos
mov
inc
ins
je
outs
popa
or
or
invd
mov
outs
fs
sbb
or
push
push
pop
js
int
add
jo
je
inc
push
jns
jnp
ins
out
sbb
(bad)
ins
dec
(bad)
addr16
and
pop
data16
frstor
pop
adc
xor
lahf
retf
mov
(bad)
adc
loopne
outs
(bad)
mov
fidiv
pop
adc
inc
pop
fcom
mov
cmc
mov
retf
cs
outs
jb
add
push
add
std
or
sub
cmp
push
inc
jb
jmp
in
xor
bound
bound
imul
push
dec
mov
jp
es
push
ins
or
push
inc
(bad)
or
sahf
xor
adc
enter
popa
outs
outs
pop
inc
outs
push
lds
jb
jae
es
inc
add
add
push
sub
and
dec
push
add
aad
mov
mov
fdiv
(bad)
hlt
(bad)
adc
push
fisttp
add
dec
or
sbb
movs
sub
jne
inc
and
imul
sar
add
jne
jne
xchg
ret
and
sbb
xchg
add
or
xchg
int
ins
mov
or
mov
lock
pop
xor
(bad)
sbb
add
sbb
dec
push
enter
jl
in
push
je
or
pop
mov
jl
xor
pop
mov
dec
fs
mov
xor
add
lock
jnp
aam
xchg
mov
inc
loope
imul
mov
es
adc
call
loope
mov
scas
or
add
jmp
or
stos
adc
adc
add
cld
inc
xor
std
inc
push
xor
inc
dec
call
cmp
imul
push
ja
dec
mov
or
sbb
pop
mov
cmovns
adc
push
and
mov
clc
push
frstor
and
adc
cmp
xchg
(bad)
lock
add
add
push
adc
pop
add
ja
or
lahf
sub
dec
push
mov
dec
cmps
adc
dec
sbb
pop
loop
in
dec
ins
cli
cmp
sbb
inc
imul
lock
cmp
inc
push
imul
outs
push
les
mov
aam
lea
test
push
mov
add
push
enter
test
add
ss
or
push
scas
jb
daa
fsubr
dec
test
ds
jmp
sbb
or
cs
push
aas
add
adc
in
or
popa
daa
dec
or
dec
fadd
pop
add
mov
push
(bad)
mov
outs
cmp
push
pusha
push
add
fsubr
push
jns
fcom
loope
xchg
jg
cli
push
cmp
movs
add
popa
rcl
imul
dec
add
add
mov
imul
push
cmp
int3
mov
xor
jge
pop
sar
add
or
add
fadd
in
in
shl
out
add
enter
inc
xchg
int3
in
or
mov
jae
sub
or
cmp
or
sbb
add
int
sub
jnp
push
inc
call
or
add
in
inc
push
push
and
das
mov
and
add
and
outs
ins
outs
dec
cwde
shl
cmps
cmps
add
sub
push
idiv
jb
add
inc
pop
leave
cmps
jl
ins
inc
push
jo
add
cmp
ss
je
jge
push
daa
xchg
arpl
jg
dec
add
(bad)
mov
outs
or
dec
sbb
add
repz
xor
call
add
mov
test
mov
jge
sub
cmps
loopne
call
pop
and
gs
popf
arpl
or
lock
je
cmp
loopne
test
daa
inc
or
cmp
mov
iret
daa
add
leave
sub
enter
mov
push
or
jns
movs
jno
in
mov
push
adc
idiv
cmp
das
push
sbb
enter
add
inc
test
stos
inc
lds
sti
jl
je
je
dec
adc
adc
adc
lds
in
add
or
jl
or
mov
dec
pop
(bad)
stc
lods
enter
mov
sub
mov
or
add
cwde
mov
add
ins
ins
xor
or
xor
xchg
adc
and
or
inc
ja
push
adc
add
push
inc
jmp
je
jae
jnp
or
dec
xlat
add
add
iret
or
out
cdq
iret
ins
pop
or
or
data16
ja
pop
jb
sti
mov
or
add
jne
adc
daa
(bad)
pop
sbb
or
push
outs
mov
sub
sub
push
or
dec
lock
add
je
pop
sbb
out
push
sbb
je
push
je
inc
adc
adc
mov
jnp
xor
inc
in
ss
mov
call
rcr
inc
ins
movs
jo
mov
xchg
inc
push
sbb
sbb
or
jno
popa
bound
sbb
ins
and
outs
addr16
and
pop
scas
xor
push
sbb
ror
inc
cmp
ja
(bad)
sub
pop
adc
mov
push
je
push
jge
push
or
ins
adc
add
or
shr
xor
hlt
mov
push
mov
inc
aas
xor
or
rol
push
nop
lea
xor
js
mov
xlat
out
or
in
mov
and
out
push
icebp
inc
aad
fiadd
pop
push
enter
fild
div
outs
inc
pop
inc
jne
pop
jne
aas
sbb
adc
pop
adc
sub
or
ins
add
pushf
add
pushf
fisubr
inc
xchg
or
daa
(bad)
cmp
inc
int
xor
loope
mov
cmc
and
push
call
prefetch
xor
stc
imul
lldt
adc
xchg
movups
loope
push
push
jle
add
adc
iret
cld
fnsave
adc
add
push
ror
push
push
adc
lds
xor
push
sbb
outs
bndldx
jg
retf
jbe
nop
call
(bad)
pop
add
adc
and
lea
stc
mov
(bad)
das
dec
push
pop
and
xchg
mov
fidiv
mov
jg
pop
and
pop
(bad)
adc
es
loopne
mov
ins
xchg
stos
xchg
bndldx
ss
add
or
test
inc
adc
cmp
or
and
inc
neg
and
imul
pop
xor
lds
sbb
xor
pop
sub
add
adc
xor
test
cs
jo
mov
test
sbb
sub
pop
sub
adc
ins
add
add
ins
or
cmp
pop
add
push
push
test
mov
mov
retf
or
fcomp
or
gs
dec
stos
dec
add
pop
dec
(bad)
in
push
aas
add
in
adc
in
aas
test
push
popa
out
cmp
add
clc
ret
or
lods
and
shl
aaa
fisubr
ror
jg
mov
ja
ds
push
ret
mov
pop
(bad)
sub
add
pop
sub
sbb
xchg
popa
xchg
pop
sub
xchg
or
pop
dec
push
xor
leave
push
mov
mov
ret
sbb
dec
or
or
cmp
inc
jne
sbb
xor
or
add
push
(bad)
lods
pop
and
pop
mov
or
or
sbb
(bad)
enter
retf
or
jmp
std
adc
js
adc
imul
stos
loopne
test
sub
loope
ret
push
add
outs
or
jae
or
mov
adc
xor
outs
outs
add
jg
cmps
push
pop
jmp
push
dec
push
dec
mov
sub
ins
imul
sti
ins
(bad)
outs
inc
gs
gs
imul
or
(bad)
and
ja
pop
pop
jmp
and
jl
ror
add
daa
mov
xchg
scas
mov
ss
test
mov
jo
leave
adc
mov
and
add
push
popf
loope
ret
adc
inc
pop
popf
inc
pop
push
xor
gs
rcr
loopne
in
adc
add
aad
imul
mov
and
xor
push
pop
sbb
mov
pusha
lods
in
bound
dec
test
out
ror
and
pop
out
sbb
xor
pop
imul
mov
xchg
(bad)
add
sub
or
push
add
scas
pop
mov
adc
arpl
cmovne
mov
mov
addr16
aam
data16
jne
inc
jo
ds
mov
hlt
push
outs
ins
add
scas
sbb
ds
jl
add
es
inc
lds
push
adc
sub
mov
cdq
push
pop
pop
rol
cdq
mov
xchg
pop
jo
or
sbb
sbb
call
push
mov
add
imul
push
or
cdq
push
sbb
scas
pop
sbb
fmul
cs
jl
or
sbb
ror
shr
or
push
outs
jae
ret
or
or
daa
jne
dec
mov
sub
mov
ins
fild
mov
push
adc
adc
mov
mov
dec
xadd
push
sbb
dec
push
sbb
repz
push
js
movs
int
out
dec
paddsb
sub
out
ins
ds
adc
enter
sahf
dec
lahf
mov
mov
repz
lock
push
test
cmp
lods
iret
cld
cmp
add
(bad)
adc
mov
fadd
mov
xchg
test
push
jbe
fld
adc
push
add
or
add
dec
push
lods
test
sbb
xor
call
pop
enter
inc
dec
push
push
inc
push
sub
(bad)
lods
lods
fidiv
inc
not
(bad)
(bad)
out
add
pop
add
sbb
xlat
jno
sbb
prefetch
outs
push
sub
push
add
clts
pop
cmpxchg
pop
lahf
mov
and
adc
cs
inc
stos
(bad)
fdivr
or
ja
adc
pop
adc
cmc
add
imul
push
cld
bnd
mov
rcr
add
loopne
pop
scas
sbb
lea
nop
nop
cmp
xchg
mov
imul
add
mov
paddsb
(bad)
add
jne
sub
pop
xchg
pop
jbe
in
add
jge
ins
and
and
es
es
mov
jp
mov
jno
add
enter
mov
imul
sbb
mov
or
cs
jecxz
mov
es
cmp
rol
scas
or
dec
in
movs
push
inc
mov
cmp
sbb
adc
push
imul
sub
aaa
push
push
jge
dec
dec
repnz
mov
es
xchg
add
lods
dec
mov
cmp
jle
push
xchg
ret
xor
or
add
cmp
shr
dec
ficomp
jg
leave
ja
lods
jo
add
loope
stos
push
or
pop
dec
or
ins
adc
or
pop
or
leave
int3
cmp
adc
mov
push
dec
leave
or
add
mov
imul
pop
mov
and
or
les
and
jae
mov
or
and
sbb
dec
jge
add
xor
sub
dec
and
es
dec
mov
es
pop
or
and
ret
jne
pop
jmp
jecxz
pop
aam
cmp
int3
add
icebp
test
test
iret
into
sbb
dec
cmp
jmp
sbb
inc
(bad)
test
pop
fisub
or
daa
(bad)
xor
adc
inc
and
add
test
push
sub
dec
pop
cmps
or
push
es
addr16
mov
or
xor
je
push
imul
arpl
inc
outs
mov
adc
cdq
pop
add
or
jecxz
mov
shl
add
inc
arpl
fldcw
sub
add
jns
and
fild
aas
push
dec
outs
ja
adc
push
loopne
(bad)
lds
sahf
add
ror
pop
js
dec
and
popa
div
inc
ss
pusha
scas
pop
rcl
por
sub
sub
cmp
ret
inc
fadd
xchg
ret
xor
pusha
ja
add
jmp
sbb
adc
(bad)
push
adc
add
sub
int
adc
jmp
push
mov
es
sbb
ror
(bad)
ds
hlt
jne
xchg
lock
mov
jns
imul
jo
sub
push
movs
repz
dec
mov
sub
out
popf
dec
or
out
cmps
inc
clc
sbb
les
pop
fwait
ja
ret
sbb
fstp
pop
sub
int3
push
loope
out
push
pushf
and
push
xor
(bad)
mov
mov
inc
and
ret
dec
push
adc
xor
push
jge
bound
rol
sub
mov
xor
and
push
ja
inc
push
popa
xchg
je
addr16
sub
sub
in
repnz
sub
dec
add
call
add
xchg
cmpps
sub
nop
mov
sbb
sub
rcr
or
sti
cmp
rcl
ins
sub
sbb
aas
push
jnp
sub
add
dec
jne
adc
jae
jp
add
les
inc
imul
sub
add
out
addr16
or
fadd
push
outs
ja
(bad)
adc
xchg
repz
ins
jg
ret
dec
dec
mov
dec
adc
dec
cmc
repz
mov
inc
imul
jbe
bound
jb
sub
ins
lea
push
sub
dec
jns
das
adc
lahf
dec
fmul
cmp
or
loopne
in
xor
int
xchg
add
mov
cmps
cdq
rcr
push
imul
mov
std
sub
xor
add
pop
jmp
or
(bad)
jo
lea
pop
fbstp
jb
(bad)
dec
xor
xor
(bad)
mov
clc
(bad)
stos
sbb
add
(bad)
jmp
imul
cmp
jne
mov
sub
xor
mov
imul
jp
xchg
(bad)
mov
and
mov
xlat
push
sub
inc
fidivr
pop
pushf
dec
xor
mov
mov
dec
in
inc
or
add
movs
or
xchg
sub
push
mov
sbb
jo
les
in
ret
cmps
loopne
ins
cmp
add
adc
iret
fnstenv
add
fsubr
xchg
push
fwait
nop
push
xor
add
fdivr
fdivr
mov
pop
cdq
jno
stos
add
jns
movs
sub
xor
into
das
out
in
jnp
inc
push
fdiv
push
push
mov
pop
xor
and
sahf
and
or
sub
test
data16
mov
clc
push
sub
loope
xor
sub
movs
adc
mov
jne
inc
inc
and
jo
jnp
sbb
sti
imul
(bad)
xor
xchg
xchg
mov
unpckhps
add
out
mov
call
pop
push
sbb
and
aam
pop
add
add
push
fdiv
sub
jno
test
fdiv
sbb
test
cmp
loopne
test
mov
cmp
nop
mov
fsubr
jl
pop
daa
bound
cmps
push
rcl
inc
loope
push
mov
inc
push
or
es
clc
rol
mov
xchg
fsub
ret
icebp
and
inc
cmp
add
or
or
push
shl
push
jp
or
or
inc
sahf
pop
sub
pop
mov
int
push
add
cmp
push
push
outs
jb
inc
das
in
add
fdivr
push
jno
stc
das
push
gs
lods
pusha
xor
jl
xor
add
push
aad
xlat
pop
outs
xor
xlat
in
or
add
pop
inc
xor
enter
shl
mov
xor
xor
lock
stos
(bad)
stos
ficomp
nop
and
or
rol
ret
sub
sbb
push
test
sub
dec
jecxz
ficom
or
rcl
adc
add
mov
outs
jp
out
xor
cmp
imul
xor
add
mov
popa
mov
xor
dec
aaa
push
xchg
aam
out
add
iret
sub
in
dec
mov
or
lock
adc
inc
cmp
setbe
sub
push
repz
test
dec
int
cmp
push
add
adc
ins
cmps
leave
inc
mov
fadd
sbb
adc
adc
gs
imul
ds
adc
push
pusha
movups
adc
or
or
sahf
mov
inc
jns
or
pop
leave
daa
or
dec
mov
shl
sbb
add
sub
je
(bad)
mov
es
pop
ficomp
cmp
mov
push
push
ins
push
ret
das
jnp
imul
in
(bad)
dec
lahf
or
add
inc
ret
mov
cmp
jne
add
dec
enter
jecxz
cmp
push
xor
mov
cmp
sbb
movs
rol
loopne
outs
hlt
cmp
xchg
and
popf
add
xchg
xor
scas
inc
outs
xchg
xchg
push
inc
sub
retf
imul
or
sbb
pop
mov
sub
jo
packsswb
adc
mov
arpl
add
nop
pop
nop
mov
cmp
sbb
sti
inc
pop
jns
pop
xchg
or
movs
cmp
mov
lods
adc
cmp
test
aas
fbld
dec
xlat
fdiv
and
dec
cwde
mov
das
jne
jecxz
mov
push
enter
ins
test
scas
mov
jp
push
fild
push
clc
mov
mov
dec
push
int3
mov
call
ret
sub
rcl
sub
lds
shl
enter
push
cmp
fnstcw
add
(bad)
andps
bnd
xchg
movhps
into
(bad)
or
add
in
mov
lds
outs
cmp
xchg
sbb
or
xor
sbb
cdq
pop
jno
mov
push
push
icebp
pop
adc
stc
mov
aas
cld
mov
pushf
mov
sub
jno
imul
sub
test
sub
ss
or
mov
sub
add
gs
cmps
mov
dec
pop
sub
shr
movs
test
push
pop
(bad)
xchg
ins
sub
aad
out
inc
mov
inc
or
inc
inc
inc
xchg
mov
cmp
daa
cmps
sbb
pop
stos
ret
add
stos
inc
loopne
sub
or
push
loope
pop
adc
call
sbb
sub
rcr
dec
dec
dec
inc
cwde
enter
lods
inc
or
mov
cmc
and
rcr
adc
xor
pop
sub
ret
and
hlt
push
js
add
and
xor
xchg
enter
pop
and
adc
inc
out
lods
movs
inc
jo
out
or
adc
es
or
adc
or
dec
inc
push
or
lock
sub
xlat
mov
imul
or
mov
je
jno
dec
push
ret
stos
xor
or
loope
jecxz
sub
aad
enter
aad
js
push
ja
jno
inc
sbb
push
into
add
and
adc
mov
add
ds
inc
cwde
mov
mov
loopne
xor
mov
mov
xchg
fild
(bad)
enter
pop
cmp
imul
xor
xor
and
jp
iret
pop
imul
ins
and
out
aaa
adc
scas
adc
or
mov
pushf
(bad)
adc
push
movlps
ins
or
shl
dec
mov
in
cmps
adc
mov
push
cmp
dec
call
inc
imul
inc
lahf
sub
and
inc
das
cmp
pop
(bad)
push
inc
mov
das
vmread
adc
(bad)
or
das
adc
fdivr
adc
fcom
ror
push
adc
(bad)
pop
(bad)
je
inc
and
pop
scas
push
rcr
push
ror
js
xchg
mov
or
cs
aam
hlt
inc
mov
jmp
sub
push
adc
in
es
mov
call
push
inc
add
xor
out
jae
jmp
xor
xor
mov
aaa
adc
sbb
adc
cmp
pop
add
cmp
mov
inc
aas
int
scas
jno
jnp
inc
or
xor
outs
xchg
setns
nop
ud1
ss
adc
aas
sbb
push
inc
cmp
mov
repnz
sub
(bad)
mov
cmovo
bndstx
dec
aas
dec
aas
iret
ins
cdq
paddsb
pop
add
stc
jb
(bad)
lds
daa
gs
bound
scas
adc
adc
jecxz
push
mov
dec
cmp
pop
and
je
and
bound
cmp
xor
out
push
(bad)
les
pop
test
inc
pop
imul
repnz
ds
adc
or
add
loope
jo
pusha
inc
push
addr16
mov
hlt
ins
sbb
and
js
repz
sti
xchg
jo
and
jns
sbb
popa
test
popa
in
add
gs
inc
mov
jns
dec
push
leave
clc
cmp
mov
sbb
(bad)
(bad)
dec
repnz
add
jns
dec
lds
push
les
popa
ins
test
scas
jb
mov
xor
arpl
adc
adc
inc
test
sbb
fadd
or
cmp
arpl
inc
in
inc
(bad)
scas
(bad)
dec
jmp
push
outs
ja
into
pop
xchg
or
bound
inc
xor
cmps
gs
or
push
or
jg
mov
js
pop
sbb
sahf
dec
dec
or
cld
fucomi
add
or
xor
jmp
call
push
gs
adc
push
loopne
call
mov
nop
sub
fisttp
(bad)
fcmovnbe
pop
xchg
cdq
mov
cwde
arpl
out
adc
stos
gs
dec
nop
out
shr
test
or
in
mov
or
hlt
dec
dec
lea
ror
dec
inc
and
inc
mov
xchg
adc
mov
xchg
call
cmc
mov
pusha
jo
js
out
jecxz
sahf
add
push
sbb
pop
adc
xchg
test
cmc
adc
dec
stos
or
add
ins
mov
inc
in
add
sbb
push
ret
rol
add
xor
or
jbe
dec
mov
lock
loopne
dec
scas
fdiv
imul
sbb
dec
(bad)
lock
pop
icebp
data16
hlt
push
sub
sub
das
call
pop
ins
clc
jbe
repnz
adc
cwde
clc
(bad)
hlt
clc
sub
stc
push
stc
dec
mov
nop
stc
dec
in
(bad)
sbb
inc
sub
dec
lahf
sbb
mov
call
push
je
pushf
dec
jge
cld
mov
xchg
das
pop
jmp
jne
lea
std
lock
adc
(bad)
dec
out
dec
not
fwait
sti
(bad)
and
add
pop
mov
xchg
sti
neg
add
movhps
das
push
das
pop
push
xchg
push
std
push
inc
push
aas
pushf
movups
das
cmp
sub
mov
clc
(bad)
ss
jae
push
cmp
(bad)
imul
inc
test
cmps
aas
lock
sub
pushf
pusha
std
lock
dec
cmp
push
imul
arpl
cmps
(bad)
dec
pop
je
lock
cmp
pushf
dec
push
and
push
cld
cld
pushf
or
xchg
lock
lock
adc
into
hlt
add
mov
dec
xchg
mov
fild
push
and
les
push
push
fcom
jns
or
add
push
fistp
push
push
inc
cmp
ja
(bad)
mov
ins
jo
push
outs
addr16
dec
jo
addr16
fstp
sbb
push
push
dec
push
push
adc
and
sbb
loopne
push
(bad)
js
pusha
push
push
mov
adc
fsubrp
inc
push
das
test
push
(bad)
stc
add
lock
fdivrp
dec
pavgb
dec
mov
popa
rol
jmp
dec
sub
dec
xchg
mov
xor
dec
dec
ins
fbld
nop
push
in
add
mov
add
(bad)
(bad)
sahf
out
lods
loopne
add
cmps
and
add
sub
ins
adc
add
clc
jmp
mov
xor
inc
dec
movs
add
pop
sti
mov
nop
arpl
sub
rcr
or
pop
push
shr
adc
cmp
loopne
add
push
inc
movs
stos
fnstenv
push
dec
pop
or
retf
pop
js
leave
pop
add
cld
std
ror
push
adc
dec
prefetchnta
mov
pop
mov
mov
add
ret
jne
outs
fcmovnu
dec
dec
enter
dec
adc
fistp
mov
aas
mov
mov
inc
sbb
imul
add
xor
or
sub
das
pop
push
add
pop
mov
pop
pop
fild
pop
lahf
push
data16
cdq
or
les
dec
fimul
jmp
inc
test
or
dec
xor
(bad)
imul
das
ret
adc
add
add
adc
out
scas
test
mov
add
lock
(bad)
inc
inc
inc
dec
mov
pusha
aam
sbb
out
rcl
sbb
or
jecxz
and
adc
sub
xor
shl
or
gs
ins
push
lock
pusha
mov
das
pop
add
or
loope
push
daa
push
push
and
es
xor
adc
div
dec
pusha
shl
xor
cmps
pop
jnp
loopne
aaa
mov
es
das
inc
adc
js
pop
movs
aaa
cmp
sbb
pop
daa
add
add
sbb
lds
mov
add
and
and
dec
out
or
jnp
dec
jns
sub
sbb
fild
mov
test
pop
mov
sbb
and
leave
pop
dec
jns
xor
sbb
sti
add
mov
mov
add
or
pop
sar
pop
push
cs
nop
mov
jns
movs
mov
adc
push
ds
ret
les
movs
add
sar
or
js
mov
in
inc
jecxz
add
subps
mov
xor
push
push
pop
(bad)
imul
xchg
inc
mov
pusha
loope
push
xor
or
hlt
mov
scas
adc
cmp
fcmovnb
(bad)
sbb
push
sub
pop
aaa
dec
imul
adc
xor
pop
xor
adc
pop
jge
ror
lock
shl
add
jne
aas
mov
ret
mov
or
aam
fcmovb
std
call
push
aaa
popa
sti
add
dec
sub
mov
push
mov
ret
dec
ins
test
add
adc
fdivr
inc
ins
loop
pop
dec
movs
or
fmul
pop
or
jmp
add
and
push
mov
adc
or
jo
jne
ret
dec
fs
(bad)
mov
inc
rcl
add
xchg
sub
pop
jne
dec
stos
call
xor
mov
add
shr
push
mov
dec
mov
adc
or
xchg
or
mov
mov
push
adc
pop
sub
mov
inc
inc
clc
dec
push
inc
push
pop
and
loopne
or
std
clc
test
mov
xchg
add
mov
stc
rcl
mov
jns
adc
adc
out
gs
sbb
(bad)
pop
xor
and
mov
mov
and
or
mov
push
add
cmp
test
cmp
sub
ret
rcl
mov
mov
pop
push
pusha
dec
push
xchg
pop
call
add
mov
inc
push
out
pusha
retf
into
push
mov
jns
mov
pop
mov
mov
movs
sub
cmp
fstp
mov
and
outs
in
jnp
div
and
push
dec
lock
mov
pop
mov
jo
iret
mov
ror
adc
and
je
mov
sbb
or
adc
jmp
lea
xlat
sbb
sub
jb
fldcw
jo
test
cmp
lea
push
pop
sbb
jb
pusha
inc
aaa
pop
jp
cmp
je
rol
mov
adc
push
inc
xchg
push
lock
mov
sbb
sub
and
inc
dec
mov
xor
sbb
mov
(bad)
jmp
jns
sar
daa
adc
gs
jne
(bad)
mov
cmp
jg
mov
add
popa
adc
das
popa
pop
cld
das
in
jns
jle
(bad)
cmps
dec
data16
sub
in
or
fs
add
jne
and
in
jb
add
pusha
add
mov
in
sub
jae
dec
or
mov
add
dec
or
cmp
jb
sahf
adc
rol
not
xchg
or
lahf
push
push
into
push
mov
outs
dec
sbb
sbb
std
jnp
add
push
add
mov
add
mov
sbb
add
mov
cmp
push
sbb
dec
inc
inc
cs
push
push
push
loopne
add
ss
add
push
mov
hlt
or
ins
loope
jbe
add
call
add
adc
out
and
outs
dec
jp
orps
add
rol
xor
dec
addr16
fiadd
sti
scas
push
addr16
cmp
push
xor
inc
push
or
or
add
xor
test
sub
or
pop
or
fimul
mov
es
add
mov
aam
jb
dec
sub
mov
or
adc
or
or
xor
add
adc
adc
stos
ret
gs
sti
mov
jg
add
movs
rep
pop
test
sbb
mov
loopne
pop
push
jge
test
es
pop
inc
mov
cmp
out
(bad)
jl
or
cmp
jne
add
imul
inc
push
lea
push
jle
fstp
xchg
movs
or
enter
inc
cmpxchg
icebp
sti
push
(bad)
call
cmps
or
clc
stc
fnsave
or
ds
or
add
add
mov
rcl
sub
mov
jno
mov
int
in
sub
pop
sub
xchg
fdiv
mov
inc
test
inc
mov
mov
aam
das
pusha
fisttp
mov
xchg
ja
lahf
add
dec
push
pusha
cmp
test
mov
inc
and
aaa
sbb
adc
sub
cld
jns
popf
cmp
inc
test
pop
clc
mov
das
push
aas
add
dec
dec
xor
mov
mov
push
mov
sbb
adc
dec
rcr
pop
fs
inc
repz
mov
lds
mov
sbb
push
shl
xchg
in
clc
stos
clc
inc
adc
xlat
test
das
dec
mov
inc
(bad)
pusha
xchg
and
jne
retf
push
fwait
sub
loop
sbb
cmp
cwde
mov
cdq
int
lock
xchg
push
arpl
std
loop
add
mov
(bad)
or
push
mov
shr
out
sar
icebp
test
test
loope
push
arpl
cmp
adc
push
add
jb
test
or
repnz
imul
push
adc
pop
mov
mov
pop
test
sbb
nop
add
push
test
dec
pop
nop
sahf
mov
nop
mov
xor
sub
gs
add
or
hlt
xor
xchg
or
out
sub
add
lods
test
add
or
test
xor
and
jmp
ret
cmp
mov
push
mov
push
push
mov
mov
outs
call
sub
retf
cmp
sbb
cli
mov
clc
or
ins
adc
enter
push
dec
(bad)
push
sbb
sub
fbld
lock
inc
mov
sti
jge
mov
push
mov
push
push
or
or
pop
call
or
add
inc
mov
loop
test
cmp
pop
(bad)
daa
mov
mov
jp
dec
imul
pop
or
or
lahf
sbb
add
das
xor
add
rol
shl
push
bound
ret
ret
nop
pop
enter
mov
push
lods
pop
stos
jne
add
daa
fdivr
dec
xchg
xchg
in
shr
clc
jae
daa
mov
sub
mov
xchg
aad
xor
cmp
push
dec
and
inc
pop
ds
xor
xchg
and
loopne
or
mov
sub
add
popa
lock
sbb
push
mov
pop
(bad)
sub
fdiv
xor
mov
xor
neg
test
pop
(bad)
int
and
push
bswap
sbb
ins
data16
(bad)
mov
and
sbb
sbb
add
xchg
sbb
and
adc
inc
sub
rol
xchg
pop
rcr
cmp
je
test
xor
sahf
mov
test
fcomp
mov
sbb
pushf
and
dec
jne
in
xor
pop
pop
aas
add
shl
push
xchg
fisub
arpl
lock
(bad)
rol
sbb
mov
(bad)
mov
lahf
fst
pop
test
je
pushf
and
repz
adc
(bad)
call
jne
fstp
or
and
ins
ss
push
mov
lods
nop
dec
add
push
push
push
jmp
loop
fbstp
jl
jle
mov
pusha
pop
sbb
push
sbb
xor
cld
push
push
mov
(bad)
call
xchg
mov
push
push
shr
fsub
mov
jecxz
and
sub
fsubr
pop
out
sbb
push
mov
js
and
aam
xchg
les
lahf
cs
xor
mov
or
lods
xchg
or
and
sbb
test
out
outs
pushf
xor
xchg
or
mov
push
cmp
xor
cdq
inc
dec
push
in
lahf
sub
mov
rol
sub
pop
cmp
or
outs
sbb
dec
iret
jmp
cs
bound
jne
jl
add
jg
add
sahf
xor
mov
pop
cld
pop
call
push
push
jecxz
movs
cmp
lds
imul
xchg
add
mov
inc
and
ja
popa
leave
loope
pusha
movs
cmp
pop
popa
sub
inc
or
or
or
jecxz
xchg
jns
jecxz
cld
div
push
arpl
and
call
and
or
je
jmp
jo
xchg
jmp
xchg
xor
mov
xlat
push
ret
lahf
jge
fidiv
and
or
(bad)
pop
shr
mov
mov
movs
pop
aad
push
and
mov
and
mov
sub
je
icebp
mov
in
dec
push
pop
xchg
jb
sub
jb
sub
jb
cmp
pop
push
push
mov
sub
(bad)
fs
mov
ret
out
das
mov
jmp
(bad)
out
inc
mov
xchg
or
stos
cmps
mov
adc
fmul
xchg
xchg
mov
ret
(bad)
out
mov
xor
add
xor
pop
sub
mov
xor
loopne
push
jecxz
mov
fiadd
or
das
adc
add
rcl
rcr
mov
sub
add
or
adc
sbb
fwait
ja
push
adc
lods
jmp
(bad)
in
lds
mov
cmps
mov
out
je
popa
sbb
pop
xchg
mov
and
push
add
js
xchg
test
push
and
xchg
cmp
mov
jae
or
xor
(bad)
mov
aaa
daa
push
(bad)
dec
jl
ds
loop
push
inc
sbb
sub
sub
(bad)
push
xor
xchg
inc
pop
nop
add
xchg
dec
sub
rcr
nop
(bad)
frstor
jbe
add
push
add
inc
or
sbb
daa
dec
xor
fisubr
mov
pop
add
dec
ja
push
pusha
imul
or
push
xchg
lock
mov
mov
inc
xchg
inc
cwde
adc
dec
in
cmps
add
pusha
mov
sub
popa
mov
(bad)
xchg
inc
push
mov
push
sbb
mov
xlat
mov
les
mov
dec
add
add
adc
(bad)
sub
out
je
std
push
jne
cwde
inc
xchg
pusha
mov
inc
lahf
add
ror
xor
es
sub
cmc
je
adc
repz
jo
xor
push
adc
jmp
pushf
cmp
or
cwde
outs
and
in
jnp
inc
or
and
fs
or
xchg
mov
inc
adc
dec
test
mov
or
pop
sbb
sbb
add
fcom
mov
xor
pop
xchg
pusha
retf
clc
arpl
fidiv
in
jp
sub
in
or
push
sbb
mov
lock
mov
hlt
jae
test
push
jne
xor
(bad)
je
movs
and
mov
jmp
pop
sbb
loopne
cmc
test
cmp
add
jmp
lea
fmul
pop
push
or
dec
adc
sub
sub
sbb
cs
xor
enter
sbb
mov
stos
popf
movs
inc
fsub
inc
clc
imul
dec
add
xchg
mov
push
pop
lods
dec
mov
call
sub
hlt
jge
hlt
mov
cmp
push
adc
cmp
inc
add
mov
inc
xor
push
ja
nop
push
sbb
mov
push
jge
shl
jmp
cmp
or
xor
jno
outs
push
fisttp
(bad)
cmp
mov
inc
popa
movs
cmp
add
pop
and
int3
cmp
pop
data16
pop
test
out
and
and
dec
loope
ficomp
add
or
add
bound
mov
add
in
push
add
or
ret
movs
mov
push
mov
push
mov
push
add
enter
imul
mov
push
xor
and
fcmovu
mov
push
push
push
or
leave
add
cmc
or
test
add
(bad)
outs
dec
sar
mov
mov
adc
push
sbb
cdq
cmp
mov
arpl
adc
fist
jae
adc
arpl
movs
and
stc
call
sbb
xor
(bad)
in
fucomi
xchg
sbb
pop
push
or
gs
imul
daa
addr16
pop
movs
jb
xchg
jne
lds
jge
test
mov
or
sbb
cmp
or
push
xchg
mov
fcomp
cmps
das
push
fld
enter
cmp
jge
test
sbb
push
add
out
idiv
or
cmp
in
les
nop
add
add
or
ds
mov
add
inc
sbb
xchg
stos
loopne
pop
les
add
sbb
popf
in
out
add
or
jl
sub
and
out
cmp
aad
xchg
cwde
out
test
mov
push
nop
sub
and
inc
xor
test
sbb
mov
daa
sbb
mov
nop
push
add
mov
and
neg
adc
mov
add
mov
imul
dec
(bad)
jnp
loopne
sbb
out
cmps
mov
fdiv
inc
sbb
fdivr
jle
adc
dec
xchg
fdiv
mov
popa
outs
and
push
loopne
in
sbb
aad
arpl
add
fldl2e
sar
gs
add
mul
adc
inc
mov
add
and
imul
stc
pusha
mov
sbb
adc
cdq
fs
add
inc
or
(bad)
lea
sub
in
dec
pop
aam
pop
pop
mov
or
pushf
inc
shl
inc
jns
add
retf
xor
sbb
sbb
xchg
add
in
lea
mov
sbb
out
ss
in
xor
or
cmp
or
and
dec
add
add
das
outs
push
fdivr
out
dec
adc
lar
push
rcr
adc
add
push
mov
clc
js
test
adc
mov
dec
loope
adc
js
or
push
add
cli
fdivrp
or
into
mov
or
cmp
cmp
push
push
movs
lahf
xor
or
xor
xor
xlat
ds
sbb
xchg
ja
and
push
inc
stos
pop
adc
cwde
(bad)
push
push
and
in
or
cwde
add
pop
or
test
add
lock
out
lods
jo
jbe
imul
jge
push
mov
push
repnz
mov
mov
and
mov
adc
jmp
push
cmp
mov
dec
not
and
loopne
pop
add
cmp
shl
pop
push
or
mov
pop
xor
sbb
dec
pusha
jnp
push
xchg
xchg
ret
pop
push
test
aas
sub
pop
dec
jo
(bad)
adc
mov
inc
loop
and
mov
adc
lea
push
cmp
mov
movs
lock
(bad)
in
cmp
shl
sbb
mul
cmp
je
test
jge
inc
or
jl
pushf
push
jle
push
mov
mov
and
jbe
push
jbe
sbb
add
or
les
push
inc
or
add
sbb
push
inc
push
pop
clc
sbb
rcl
sbb
xor
ss
in
inc
cmp
mov
xor
sub
adc
test
(bad)
into
add
push
adc
pusha
dec
ss
add
ror
test
fisub
hlt
std
mov
retf
add
mov
add
mul
push
je
cli
dec
stos
das
ds
jb
stc
mov
ja
sbb
call
leave
pop
js
iret
push
mov
lods
aam
mov
sbb
ror
inc
mov
push
mov
push
(bad)
pop
addr16
inc
cmp
test
shl
adc
inc
gs
mov
add
add
push
push
cmp
adc
pop
idiv
sti
ins
aam
lea
pop
mov
lea
aaa
jo
add
add
cwde
test
add
mov
sub
rol
int3
and
add
mov
push
fldenv
ins
jo
mov
popf
dec
mov
add
ja
xlat
adc
ja
mov
push
inc
pop
add
out
add
mov
bound
add
lea
fcomp
mov
rcr
out
xor
movs
popf
ins
test
pop
push
pop
hlt
or
call
dec
movs
fnsetpm(287
sbb
rcr
cmovo
call
sbb
fs
sbb
rcr
mov
xchg
call
push
push
push
mov
and
repz
pop
or
in
add
rol
out
add
add
enter
gs
shl
push
dec
div
shl
and
dec
sbb
pop
sar
add
and
mov
or
mov
fld
pusha
push
(bad)
jne
sub
popf
jne
nop
popa
mov
pop
loop
call
pop
fldenv
(bad)
in
stc
pop
mov
repz
int3
inc
push
sbb
and
inc
cmp
and
sub
push
jle
mov
data16
lea
mov
mov
test
xchg
sub
xor
popa
pop
add
lock
adc
dec
cmp
or
and
inc
adc
jmp
lock
push
jbe
dec
jmp
jns
pop
mov
cld
icebp
add
xor
inc
sbb
sti
enter
push
das
loopne
pop
dec
inc
push
push
xor
sbb
loopne
mov
mov
movs
mov
add
dec
rcl
std
add
je
bound
adc
jae
add
inc
inc
mov
jne
call
retf
sub
mov
add
lea
add
dec
pop
add
add
test
mov
mov
sbb
inc
or
mov
pop
jg
mov
jno
adc
push
ror
add
mov
pop
lods
adc
jo
cmps
sub
mov
shr
push
inc
dec
jne
add
cmp
arpl
adc
adc
xchg
adc
mov
daa
sub
xchg
xchg
and
jnp
jge
dec
movs
daa
hlt
ins
mov
add
rcl
fisttp
das
and
mov
add
bswap
shr
mov
dec
jns
jmp
push
xor
and
(bad)
mov
aad
mov
sub
shl
mov
mov
jmp
pop
xbegin
sldt
adc
lahf
test
adc
xchg
cld
push
mov
add
sub
cld
xlat
(bad)
lods
sbb
aad
push
jl
loop
adc
mov
sti
mov
push
or
cmp
sbb
rol
jne
inc
xchg
ret
sub
push
neg
mov
std
lea
jmp
push
cmp
sbb
daa
jmp
and
cmps
addr16
data16
sbb
push
(bad)
dec
pop
xlat
sbb
push
clc
or
xor
lahf
clc
mov
ret
jmp
aad
ja
cmp
retf
xchg
push
sub
add
cmp
jl
pop
test
retf
or
sti
add
inc
and
or
add
clc
pop
fstp
xchg
add
jmp
sbb
push
pop
pop
push
push
addr16
mov
add
out
mov
mov
aas
and
jmp
cmp
ret
iret
dec
pop
mov
mov
sbb
or
std
jmp
jl
or
movups
cmc
adc
inc
jo
sti
pushf
popf
push
and
and
xor
mov
jno
or
push
or
ret
add
sub
push
push
(bad)
adc
sub
cmp
jge
add
je
inc
push
lahf
push
jne
xor
mov
mov
add
in
ins
jl
push
add
jp
xlat
(bad)
frstor
inc
adc
test
mov
mov
pusha
mov
ja
leave
nop
xchg
popf
inc
rcl
sbb
add
push
shl
dec
dec
mov
inc
ja
push
lock
add
in
fcomp
fs
xchg
and
inc
jae
in
inc
hlt
cmp
add
ret
xchg
clts
push
push
hlt
mov
test
add
xor
pop
mov
inc
rcl
jb
add
imul
scas
or
jnp
and
push
pop
cld
repnz
addr16
popa
jo
sbb
inc
pop
mov
add
ja
cmp
lock
rol
daa
stos
or
mov
or
xor
mov
and
or
dec
pop
sub
sub
shl
mov
pop
pop
add
pop
sar
or
outs
inc
push
test
test
jne
dec
adc
std
xor
dec
rcl
sbb
jbe
push
call
scas
je
retf
dec
jo
or
das
add
mov
and
call
adc
clc
jg
test
jle
cmp
iret
sahf
std
dec
cld
jg
mov
cmp
mov
cmp
jg
mov
bound
or
repz
pop
nop
das
cmp
dec
and
clc
ret
adc
and
jecxz
js
outs
xchg
(bad)
movs
sub
fs
dec
jmp
mov
add
nop
jne
push
push
ror
push
pop
pop
push
add
or
mov
adc
push
add
fcom
ins
xchg
push
and
cwde
lods
rcr
xchg
sbb
scas
mov
dec
sub
jbe
mov
stos
jle
push
jg
or
mov
test
push
stc
xchg
int3
shl
les
lock
add
mov
cmp
mov
rcl
enter
pop
ret
pop
in
sub
jl
push
inc
lea
movs
adc
add
mov
ins
lds
test
mov
scas
into
lods
ds
push
push
rcr
sbb
jle
in
daa
addr16
and
cmp
iret
xchg
cmp
adc
or
push
mov
aam
mov
(bad)
mov
sbb
adc
rol
call
sbb
dec
clc
pop
aam
sar
mov
enter
jmp
sbb
fcmovbe
sbb
dec
push
jmp
clc
mov
ins
mov
sub
scas
sbb
imul
or
loop
sub
cmp
xchg
xor
addr16
mov
or
add
push
push
mov
xor
js
xor
(bad)
mov
inc
mov
sbb
fist
or
stos
xchg
call
ds
cmp
not
mov
sub
jno
and
xchg
pop
add
adc
cli
fiadd
mov
pop
je
dec
(bad)
loop
inc
lods
mov
pushf
or
jmp
jns
out
test
push
or
or
mov
adc
call
cmps
fsubr
lods
or
add
dec
ficom
push
push
retf
out
mov
add
jmp
and
mov
sbb
jb
(bad)
dec
add
or
xchg
(bad)
lahf
jno
and
inc
dec
jl
push
mov
add
in
aas
mov
mov
adc
dec
or
jle
(bad)
outs
sub
jmp
mov
and
mov
rcl
jge
jae
jmp
adc
cld
sahf
and
neg
(bad)
icebp
xor
inc
and
inc
and
add
and
add
jne
dec
push
sub
lods
sbb
fadd
xor
push
inc
stos
loopne
dec
adc
push
inc
pop
lahf
xor
retf
xchg
js
jmp
out
adc
lds
cmp
sub
call
xchg
js
xchg
lea
and
pop
add
pop
mov
ficom
or
sbb
and
fs
push
mov
inc
cwde
xchg
jno
cwde
xor
push
sbb
hlt
lods
or
pop
add
or
sbb
icebp
push
cmp
cs
inc
dec
mov
out
in
xchg
adc
push
and
xchg
popa
mov
mov
lods
paddq
sbb
adc
mov
inc
sub
lods
scas
ins
mov
sbb
(bad)
test
leave
cmp
inc
lods
sbb
mov
shl
adc
add
add
sbb
packuswb
neg
xlat
pop
and
pop
jg
sbb
jmp
sub
shr
call
outs
adc
call
pop
push
mov
sub
dec
mov
in
sbb
loopne
shl
and
add
pop
pop
push
iret
push
add
inc
add
shl
add
rol
stos
xchg
fwait
sbb
push
or
mov
push
stos
in
push
add
push
lods
or
push
mov
inc
mov
mov
scas
mov
mov
mov
lods
aam
mov
test
push
mov
push
fist
fdiv
shl
add
lock
or
loopne
(bad)
jmp
adc
adc
xor
adc
jecxz
cmp
pop
jge
adc
or
sub
adc
and
dec
test
inc
and
pop
xor
sahf
cld
and
aaa
and
sub
jl
and
clc
mov
jg
adc
adc
das
test
add
shl
ja
push
jne
mov
xor
stos
das
(bad)
mov
mov
adc
add
xor
sbb
pop
adc
dec
adc
fistp
outs
movlps
or
(bad)
retf
lock
in
mov
imul
mov
je
sub
leave
push
xor
int3
out
adc
jp
cmp
and
stc
push
popf
retf
clc
sub
jnp
lahf
dec
dec
hlt
cmp
and
hlt
mov
dec
or
push
push
add
push
adc
pop
pop
jne
daa
leave
fisttp
push
xchg
adc
mov
inc
arpl
sar
xchg
xlat
stc
pop
popf
dec
ins
and
jno
ror
pop
loopne
and
cmp
mov
xchg
out
jns
push
jle
rol
push
xchg
and
fsubr
retf
sahf
xchg
mov
repnz
sub
cld
mov
(bad)
setge
lahf
mov
test
int3
pop
adc
or
push
push
sub
sahf
int3
les
and
xor
adc
jnp
pusha
sbb
add
cmp
rcl
adc
add
ret
sbb
pop
cmp
ret
inc
and
xlat
or
mov
push
daa
loope
add
sbb
mov
adc
xchg
adc
jo
pop
add
mov
mov
sbb
sbb
inc
and
sub
fcmovnbe
lahf
cmc
ss
inc
loopne
pop
enter
mov
in
cmps
and
(bad)
fsub
cmp
(bad)
and
push
mov
add
xchg
call
cmp
leave
enter
div
mov
or
pop
(bad)
sub
cmp
fsub
bound
add
movs
dec
mov
inc
lods
inc
push
inc
retf
rol
popa
cwde
adc
push
adc
mov
sbb
or
or
call
fs
sbb
les
add
add
mov
or
in
retf
add
lock
dec
adc
push
adc
in
or
pop
and
fisubr
push
call
add
push
mov
cmc
or
sub
add
inc
inc
(bad)
xchg
mov
xlat
pop
mov
or
lea
lock
add
sub
push
mov
(bad)
pop
shr
inc
mov
mov
mov
cmps
in
mov
xchg
and
clc
mov
cmp
mov
dec
hlt
mov
mov
add
and
mov
and
in
mov
mov
cmps
xlat
call
inc
adc
inc
cdq
jmp
sti
pop
add
ffreep
ja
ins
add
add
and
and
mov
sub
je
imul
xor
adc
mov
dec
test
jl
inc
clc
mov
pop
fld
jg
aam
daa
and
inc
sbb
call
jl
mov
sbb
jl
rcr
stos
movs
loope
mov
sbb
test
or
add
add
dec
fild
jge
rol
dec
push
clc
pop
(bad)
sub
mov
das
mov
or
movs
dec
jmp
push
or
leave
and
mov
dec
cmp
sub
add
ror
movs
or
jo
inc
mov
(bad)
or
es
sub
ins
and
jbe
scas
dec
push
cmps
lds
push
add
or
ret
xchg
xchg
push
sub
retf
clc
fimul
dec
(bad)
mov
femms
adc
movs
inc
dec
cmps
dec
daa
or
or
adc
or
pop
fisttp
jae
mov
mov
add
in
xchg
cdq
cmps
inc
fstp
add
cmps
jb
xchg
inc
loop
jne
pushf
cmp
dec
cmps
add
dec
cmps
(bad)
and
push
repz
cmps
add
ss
fnstenv
add
pop
or
add
lea
loopne
dec
cmps
dec
popf
sbb
movs
or
mov
(bad)
sub
inc
add
add
sbb
mov
add
cwde
cmp
push
lods
inc
xchg
adc
push
mov
add
xor
or
cwde
dec
and
or
jbe
rcl
stos
or
rol
adc
xlat
imul
inc
shr
mov
mov
test
aam
add
pop
mov
shl
and
xlat
cmp
mov
fnsave
and
xchg
ffree
push
add
jne
mov
das
push
mov
dec
adc
adc
mov
rcr
jl
pop
cmp
hlt
pop
adc
or
and
xlat
mov
ds
add
test
xchg
jl
in
iret
cmp
inc
sbb
mov
jecxz
mov
push
fidivr
push
mov
mov
(bad)
add
(bad)
or
xchg
xchg
adc
lods
enter
or
or
dec
lock
dec
cwde
inc
js
hlt
ror
call
in
adc
fwait
mov
mov
cmp
lods
hlt
and
popf
mov
and
xchg
push
mov
push
das
dec
fst
in
call
inc
adc
cmp
inc
stos
sbb
int3
(bad)
cmovo
sub
test
mov
jo
sbb
jno
loopne
xchg
mov
mov
call
mov
das
sbb
sbb
mov
lahf
pop
stos
cmp
pop
inc
or
inc
das
enter
push
lods
sub
dec
xchg
stos
sar
rol
xor
enter
xchg
(bad)
das
xlat
or
or
sbb
lods
xchg
sbb
cdq
jmp
xlat
mov
fsubr
xlat
push
or
jmp
and
shl
lods
push
js
stc
aam
out
rol
mov
into
arpl
and
nop
inc
xchg
cmps
(bad)
rcr
cwde
cmp
fisubr
jge
out
adc
xchg
xor
lock
fdivr
or
and
pop
aad
retf
sbb
pop
xchg
push
mov
sbb
lods
or
sub
push
adc
add
add
daa
sar
test
add
push
pusha
add
cdq
cmps
sbb
inc
jmp
push
mov
clc
xor
pusha
shl
out
xor
dec
sbb
inc
dec
jne
lock
sbb
mov
push
adc
lods
jns
sbb
out
push
xor
in
inc
rcr
in
loope
pop
mov
add
add
jo
mov
xor
clc
popa
popf
addr16
hlt
(bad)
xchg
push
pop
inc
mov
pop
mov
dec
push
mov
lea
and
cdq
pop
push
cld
not
push
hlt
xor
fcomp
neg
cli
sbb
push
test
push
add
push
test
jo
inc
dec
push
(bad)
mov
mov
std
inc
or
loopne
and
jo
sbb
movs
push
jmp
(bad)
push
or
(bad)
ins
xlat
add
test
cmp
pop
lock
imul
push
lock
scas
push
or
test
add
ja
sub
pop
or
leave
add
lea
rcr
das
and
mov
mov
sub
cld
dec
pushf
rcl
mov
aas
adc
or
in
push
fisub
inc
daa
dec
scas
lds
push
out
(bad)
cwde
movs
sub
dec
sub
sbb
add
or
and
sbb
add
dec
ror
loopne
mov
sbb
push
cs
jbe
stc
mov
jle
sub
xor
js
adc
ror
or
and
xor
mov
sub
inc
inc
pop
push
and
jnp
sbb
add
sbb
imul
push
lods
pop
jmp
push
xor
or
(bad)
lea
or
xchg
jge
jb
nop
imul
and
push
pop
xor
inc
and
mov
retf
xor
add
adc
mov
shl
pop
and
xor
test
loop
lahf
aam
push
push
dec
ja
push
adc
push
cdq
xchg
pusha
aaa
adc
add
adc
(bad)
movs
jne
jecxz
inc
cmp
mov
dec
add
movs
call
cld
and
sar
add
popf
retf
cmp
aad
adc
rcr
xchg
sar
pushf
inc
imul
sbb
(bad)
pop
dec
push
mov
inc
sub
push
push
jecxz
outs
and
and
pop
sub
adc
add
lods
adc
dec
cmp
nop
adc
imul
lods
js
mov
sub
outs
cmp
sub
inc
sub
mov
ja
add
pop
(bad)
add
jo
dec
xchg
cmp
je
adc
pop
push
inc
and
jnp
or
pop
aam
mov
out
test
cli
loopne
sti
or
je
and
cmps
push
ss
or
push
push
rcr
call
sbb
pop
mov
movs
add
jle
jp
adc
inc
mov
push
cmps
add
push
movs
pop
and
xchg
xchg
mov
ds
xor
dec
ins
je
add
xchg
xchg
sar
cmp
or
ret
arpl
fild
xor
cdq
dec
in
(bad)
(bad)
fimul
gs
mov
inc
sahf
xchg
pusha
dec
mov
add
add
mov
adc
sbb
ins
call
sub
xchg
daa
push
or
pop
test
sub
mov
ret
adc
jne
cmp
clc
jge
push
jmp
push
push
sti
enter
jge
xchg
mov
cdq
jmp
push
add
ins
adc
jmp
push
test
sub
loope
adc
js
pusha
das
or
fadd
imul
and
push
or
dec
cmp
xchg
push
and
adc
dec
stos
clc
mov
cs
push
push
jns
push
mov
jo
sbb
add
ss
jo
nop
sbb
dec
xor
adc
pop
or
imul
scas
adc
addr16
jmp
shr
jmp
pop
sub
aaa
test
lea
nop
std
pop
xor
ins
adc
pop
sub
fisubr
or
and
mov
and
iret
xlat
and
or
shl
or
daa
cmp
adc
jmp
call
cmc
cwde
icebp
jmp
mov
push
jl
jge
and
inc
je
addr16
jge
ins
jae
mov
sbb
mov
jae
mov
adc
cmp
ror
ins
cmc
mov
jle
ret
dec
rol
add
(bad)
inc
movs
nop
adc
sbb
mov
inc
test
inc
mov
lods
adc
add
jbe
mov
inc
(bad)
stos
add
outs
pusha
sub
xchg
loope
aad
jg
xchg
clc
fidivr
or
(bad)
int
call
push
cmovno
clc
push
or
jb
aam
jmp
js
xor
jo
mov
push
sbb
push
mov
test
shr
pusha
rcl
jecxz
aas
jecxz
mov
in
ret
repnz
sar
out
pop
or
jl
nop
jge
popa
mov
test
fwait
ror
test
inc
ins
mov
mov
cmps
inc
mov
xchg
pop
adc
xchg
inc
sub
inc
repnz
sub
or
dec
push
sbb
ret
dec
xor
movs
mov
and
inc
sti
das
or
add
hlt
adc
retf
pop
push
mov
xor
bnd
jg
add
pop
mov
mov
push
sti
mov
mov
xor
or
mov
cs
cli
jle
jae
mov
call
js
pop
dec
test
and
or
jecxz
shl
aaa
adc
rol
inc
mov
loopne
enter
or
pop
xor
or
sub
sub
push
jp
into
stos
adc
add
mov
loopne
cmp
sub
mov
retf
jmp
pop
push
rcr
add
inc
push
pop
fs
adc
test
test
inc
aaa
in
push
xor
xchg
sbb
add
sbb
mov
sub
jbe
dec
dec
jb
je
je
out
add
xor
ja
outs
adc
aam
dec
sbb
sub
push
pop
in
sub
mov
push
lea
inc
ins
jle
mov
and
psubw
xor
ret
jmp
xchg
cmp
sbb
add
jne
cmp
xor
and
cmp
jmp
add
or
icebp
and
or
xchg
cmps
shr
mov
imul
or
add
sub
daa
sbb
adc
mov
mov
pop
xchg
sbb
popf
adc
lahf
inc
or
je
cmp
cmp
js
mov
sbb
retf
in
sbb
add
lahf
mov
les
dec
sbb
int3
adc
repnz
adc
add
cmp
pop
mov
repnz
mov
adc
lds
push
xor
sbb
xor
lahf
movnti
sub
daa
je
inc
inc
inc
fidivr
mov
inc
adc
cs
inc
fidivr
jns
push
add
or
rol
push
pop
xchg
pop
sub
sbb
mov
repnz
scas
or
mov
or
add
sub
add
test
fstp
in
fcomp
pop
aas
cld
push
cmp
jae
xor
inc
jne
cmp
xor
inc
xor
push
sub
cmp
aas
dec
add
xor
push
push
test
imul
mov
pop
test
test
sbb
mov
and
mov
loopne
mov
popa
nop
(bad)
aaa
pop
fmul
rol
outs
adc
push
add
xchg
popf
cmp
pop
cmp
dec
xor
or
pop
test
(bad)
push
add
mov
sub
aas
and
mov
jmp
adc
sub
mov
add
imul
mov
xchg
mov
and
cwde
les
es
das
sbb
loope
cmp
xor
test
nop
add
jae
cmps
test
sub
mov
dec
xchg
mov
adc
imul
in
xor
ins
sub
cmps
bound
adc
adc
pop
cmp
add
jno
push
and
outs
add
pop
in
ret
clc
test
aas
mov
cmp
jno
lds
sbb
adc
outs
add
mov
rcl
xor
xor
mov
(bad)
adc
xor
scas
jmp
dec
jp
stos
dec
mov
sbb
jmp
inc
dec
inc
jmp
stc
cld
xor
imul
out
lock
call
and
bound
xor
mov
add
inc
and
cmp
adc
(bad)
out
xor
ss
pop
dec
mov
ja
push
loopne
xor
cmp
sbb
pop
dec
push
dec
pop
cmp
test
(bad)
sbb
add
pop
add
pop
add
pusha
sub
push
sub
pop
cmp
shr
push
jne
cmp
add
cld
popf
lea
call
pushf
and
push
push
dec
pop
rol
and
ffreep
add
add
jmp
jl
in
packuswb
inc
sub
push
mov
aaa
shl
cmps
test
mov
jo
add
add
push
aad
ds
lock
jmp
push
pop
dec
adc
pop
data16
pop
push
push
or
add
pop
or
sbb
std
fnstenv
push
repnz
cld
out
pop
pop
add
pop
push
dec
and
inc
adc
icebp
adc
lods
add
adc
adc
push
out
mov
aaa
into
or
fs
add
xchg
lea
and
or
mov
and
inc
or
xchg
inc
or
or
shr
(bad)
stc
and
imul
add
das
cmp
jle
xlat
aam
icebp
dec
inc
sahf
fisub
jns
or
xchg
mov
aas
mov
ds
jl
jp
cmc
mov
sub
add
fwait
leave
inc
test
push
push
xchg
inc
fmul
movs
cmp
cs
push
scas
xlat
and
cmp
je
sbb
jo
jne
push
add
add
cli
adc
mov
inc
loopne
or
mov
and
add
add
inc
loope
out
push
in
or
lock
mov
sbb
and
out
sbb
sbb
enter
inc
add
add
sbb
or
cmc
add
push
sub
js
push
mov
cmp
jge
int3
xchg
xor
mov
mov
lods
in
jne
rcl
push
inc
rcl
out
xchg
jmp
jae
adc
mov
outs
adc
or
test
jo
je
jne
pop
or
and
dec
popf
or
mov
out
jmp
ffreep
push
dec
cld
rol
add
add
ins
pop
rcl
sbb
js
nop
jge
idiv
adc
outs
sub
sub
push
sub
push
mov
pop
es
push
fmul
and
pop
mov
pop
and
lods
ds
jbe
(bad)
fistp
int3
sub
(bad)
or
sub
cdq
sub
add
xchg
nop
push
js
mov
dec
jmp
xor
adc
pusha
cmps
add
dec
jecxz
push
push
nop
xchg
in
dec
es
mov
dec
imul
sub
std
inc
cmp
and
not
add
push
add
xchg
mov
jge
pop
push
daa
add
out
shl
push
adc
mov
jp
aad
inc
mov
sub
add
inc
fsubr
push
adc
rcr
(bad)
bswap
lock
inc
push
lods
cmp
sbb
dec
inc
cmp
jne
scas
jbe
xchg
out
pop
adc
push
or
ds
movd
inc
lea
dec
jge
xchg
sar
sbb
std
mov
inc
repz
rcr
pop
sbb
(bad)
movs
je
pop
gs
in
popa
dec
test
mov
lods
and
xchg
mov
xchg
cmps
call
dec
add
addr16
mov
pop
jno
mov
push
fld
adc
adc
mov
loopne
popa
sbb
mov
int3
jge
jecxz
add
xlat
or
sub
and
add
add
pop
or
shl
and
das
loopne
iret
mov
loopne
mov
mov
push
daa
jnp
sub
or
mov
adc
add
or
js
inc
adc
adc
loopne
aas
sub
adc
mov
or
call
adc
mov
sti
push
inc
add
(bad)
adc
iret
dec
cmp
mov
sub
arpl
jae
jmp
pop
mov
mov
pushf
ret
lock
lea
dec
shl
and
iret
lar
xchg
loopne
iret
mov
jmp
push
push
push
adc
sbb
dec
jb
xor
sbb
jp
push
rcl
or
leave
sbb
add
add
xchg
je
lahf
nop
push
mov
mov
jae
cmc
test
or
xchg
rol
lock
clc
adc
and
shr
scas
push
and
bswap
mov
mov
jo
stos
sar
add
lock
inc
pop
jne
push
addr16
mov
mov
jb
mov
lea
inc
out
add
test
add
mov
add
cmp
test
call
inc
arpl
add
sub
adc
sub
dec
add
lock
hlt
push
imul
stos
out
sbb
jge
je
push
cmc
jbe
inc
aas
jbe
dec
add
out
js
ss
xor
adc
jmp
(bad)
clc
lea
aaa
fcom
inc
dec
ret
pop
adc
mov
push
mov
inc
ror
dec
xor
mov
fadd
lds
les
xor
jmp
shl
inc
dec
xor
nop/reserved
adc
and
shr
and
sub
in
adc
imul
push
inc
adc
mov
pop
mov
fsubr
imul
adc
aam
xor
cmp
ja
imul
adc
and
cmp
cmp
in
das
out
or
cmp
jmp
mov
push
mov
or
xor
out
add
mov
pop
push
push
push
gs
iret
pop
push
lods
and
cld
adc
hlt
dec
fisttp
(bad)
js
(bad)
movs
pop
or
lahf
and
push
mov
adc
pop
ja
push
dec
mov
adc
jo
push
rcr
or
push
add
xor
clc
jae
je
mov
add
mov
loopne
add
lods
lock
or
jmp
push
clc
xchg
or
or
das
cwde
dec
sub
push
dec
retf
js
ja
add
push
or
fcom
sub
mov
dec
ror
mov
mov
hlt
or
jmp
pusha
mov
sub
js
push
mov
outs
push
pop
sub
and
push
lea
add
jmp
cmc
push
jmp
aad
pop
dec
loopne
add
add
sub
push
shl
push
push
pop
or
inc
add
and
test
xchg
neg
or
and
fadd
add
sbb
imul
movzx
push
dec
in
scas
mul
lock
ret
cmp
pop
(bad)
pusha
cmp
das
and
sbb
jmp
pushf
adc
jg
pop
push
fmul
mov
lock
xor
imul
add
dec
dec
stos
movs
nop
es
in
add
xlat
mov
sbb
outs
inc
jle
test
inc
or
pop
and
sub
push
jl
xor
retf
gs
fistp
inc
inc
and
dec
rcl
(bad)
xchg
or
popf
test
mov
inc
daa
pop
jno
rcl
dec
mov
push
and
fwait
dec
loope
jmp
add
loope
sbb
daa
dec
or
pop
mov
mov
push
test
bound
xor
aam
cmp
ret
adc
rol
xchg
or
add
push
inc
dec
adc
js
fist
pop
js
xchg
fisub
adc
inc
fisttp
ror
inc
inc
and
dec
sub
jge
xchg
mov
inc
leave
aam
dec
mov
test
(bad)
cmp
sbb
add
lock
mov
add
sub
jnp
fcomi
inc
adc
sbb
cmp
push
addr16
stos
sbb
or
or
xchg
xchg
push
cmp
sub
sub
mov
dec
mov
or
and
(bad)
fucomip
xor
gs
sub
xor
xchg
adc
pop
mov
outs
push
pop
adc
or
sub
mul
(bad)
mov
adc
dec
das
xchg
nop
add
paddd
adc
pop
sbb
or
add
push
pop
mov
pop
test
inc
sub
xor
pop
aaa
mov
fistp
adc
jne
scas
test
push
into
add
in
and
lock
daa
xor
int3
repnz
inc
addr16
lea
lea
jg
pop
mov
sbb
adc
je
dec
jbe
add
je
jmp
inc
or
je
or
je
jmp
mov
xor
xor
add
lods
push
call
push
xor
jmp
mov
jmp
cmp
xor
sub
add
ins
cmp
add
or
xchg
cmp
ret
mov
neg
clc
sbb
jge
jl
mov
dec
mov
clc
mov
sub
and
jmp
adc
mov
out
add
mov
movs
stos
lock
and
jo
sar
aaa
xchg
jmp
pop
inc
jne
icebp
xchg
sbb
pop
xchg
mov
dec
adc
cmps
lods
jne
mov
dec
cmp
lods
cmp
mov
test
push
fincstp
test
daa
push
ds
mov
js
mov
sub
add
add
mov
push
sub
inc
cmp
inc
inc
cmp
ja
test
jnp
cmp
and
mov
sbb
add
and
out
add
dec
jns
add
cmp
jg
test
xchg
outs
inc
sub
jg
inc
mov
cmp
je
cs
enter
inc
dec
push
cli
push
lock
sbb
call
scas
sar
mov
mov
xor
inc
cmp
inc
mov
dec
adc
ret
mov
sub
xor
dec
aas
xor
pop
mov
sbb
push
xor
cdq
and
xor
daa
mov
fst
stos
push
gs
adc
pop
sub
push
repz
add
jge
mov
push
mov
mov
cld
dec
sbb
inc
mov
push
and
adc
neg
add
and
ja
jae
or
or
push
test
sub
xor
ret
adc
pop
ret
dec
sbb
push
jne
loope
jle
outs
push
imul
ins
in
push
sub
or
or
push
push
sbb
aam
push
add
add
gs
cmp
adc
dec
ins
pop
sti
ret
pop
or
xor
push
hlt
pop
aaa
xchg
mov
sub
push
mov
enter
xor
loope
push
sub
loope
add
test
sar
test
adc
pop
cmp
(bad)
ror
pop
adc
mov
inc
fmul
jnp
jbe
xor
dec
outs
inc
js
xor
mov
inc
or
add
and
push
dec
test
enter
inc
xlat
dec
mov
push
xor
jb
and
pop
add
cmp
retf
pop
test
adc
add
add
xor
mov
ffree
ss
fcomp
jne
push
dec
fs
push
pop
sub
add
add
dec
icebp
adc
test
cmp
sub
jmp
mov
ror
jmp
xchg
sub
adc
cwde
test
mov
pop
xchg
add
add
mov
not
adc
sub
les
xor
jp
les
jo
push
mov
pop
add
push
das
clc
sbb
repnz
ret
popa
ficomp
push
xchg
push
test
int3
ror
dec
cmp
mov
or
inc
test
lea
pop
dec
pop
push
test
sub
mov
ret
mov
xchg
or
pop
pop
dec
jno
call
adc
ins
push
inc
xchg
cmp
and
in
sub
and
inc
inc
pusha
mov
and
lods
outs
xor
retf
sbb
outs
and
xor
xchg
sbb
xchg
inc
push
jne
add
in
rcr
or
inc
xchg
push
loopne
clc
push
push
sbb
mov
or
dec
push
(bad)
shl
test
daa
lock
mov
or
add
lds
sbb
mov
xor
jmp
sub
stos
mov
(bad)
(bad)
xchg
or
mov
inc
or
or
shl
push
ret
out
or
sbb
(bad)
xchg
mov
xor
push
pop
add
popa
mov
test
test
and
out
and
rcl
push
and
push
data16
and
inc
or
xchg
mov
in
sbb
int3
mov
push
pusha
stos
xchg
or
daa
and
push
cmp
or
neg
mov
sbb
enter
mov
loope
add
add
push
sbb
int3
push
sub
popf
shr
push
outs
sbb
rcl
dec
push
in
or
ret
xor
je
inc
lock
dec
(bad)
jne
gs
pop
inc
lea
mov
add
call
push
xchg
lock
cmp
xor
dec
inc
outs
retf
xchg
xchg
out
or
imul
or
mov
jbe
inc
inc
add
in
jge
xlat
xchg
cmps
cmp
xor
jno
mov
add
mov
add
fisttp
outs
fucomi
in
jno
call
and
mov
imul
jg
sub
inc
rol
aam
int3
jmp
imul
jg
outs
add
sar
shl
test
mov
or
sbb
sbb
add
inc
jmp
lds
and
and
xor
mov
(bad)
loopne
add
pop
cmp
inc
popa
dec
shl
jns
jmp
addr16
xor
jns
push
push
ror
cmp
or
call
cld
jmp
xor
stos
adc
and
jmp
add
inc
in
in
mov
sbb
jae
and
adc
jbe
rcr
adc
mov
and
push
fs
push
fcomp
dec
fst
sbb
ret
sub
pop
pop
adc
or
enter
fsub
lods
inc
xchg
mov
or
call
mov
mov
cmp
dec
mov
jle
or
xor
add
mov
iret
add
sbb
sbb
or
std
push
jecxz
les
mov
mov
dec
dec
cmp
or
popa
dec
into
push
push
push
or
mov
fs
rol
test
sub
jle
lock
add
add
das
adc
add
or
and
loope
add
dec
mov
mov
jmp
mov
jno
add
or
adc
mov
stos
jmp
adc
dec
stos
retf
dec
mov
(bad)
sub
mov
fwait
mov
sbb
adc
das
int3
fs
js
push
loopne
inc
jle
cmp
or
rcl
sbb
or
call
fld
(bad)
push
or
maxps
pop
adc
inc
mov
cmp
fidivr
hlt
or
pusha
das
iret
clc
xchg
loop
push
add
push
mov
adc
adc
fsub
cmps
push
jno
cwde
int
rcl
popa
shl
xchg
mov
stc
pop
adc
or
aam
js
fcmovnbe
adc
jne
add
lds
(bad)
jmp
pop
and
in
jge
pop
loopne
adc
push
mov
outs
out
inc
ror
adc
adc
movs
rcr
sub
pop
jecxz
mov
iret
jns
inc
push
and
cmp
je
mov
pusha
adc
je
ret
(bad)
adc
add
inc
xor
or
push
add
mov
dec
sub
sbb
adc
sbb
inc
add
add
adc
sahf
dec
nop
or
ficom
jns
es
pop
sbb
mov
aas
push
inc
les
cmp
xchg
lock
loop
fucom
adc
adc
test
adc
jl
and
or
jge
sbb
mov
adc
pop
cmp
out
push
inc
sub
adc
adc
mov
adc
sbb
adc
mov
mov
push
test
sbb
add
cmps
inc
jg
ja
mov
sub
ja
je
jmp
mov
pop
js
fucomip
mov
push
mov
adc
sbb
mov
sbb
push
or
adc
add
stos
push
movs
sbb
test
test
les
xchg
adc
in
data16
and
dec
je
adc
jmp
movs
clc
jmp
add
inc
and
push
mov
jbe
cld
in
push
out
sbb
enter
fnsave
or
clc
or
and
jl
fbld
push
xchg
mov
dec
sub
pop
ret
popa
les
nop
add
sti
or
dec
jmp
scas
out
push
xor
inc
cmp
lahf
push
sbb
mov
test
or
mov
inc
jae
mov
ins
inc
cs
inc
sbb
ret
inc
shl
cmp
mov
mov
push
aam
xchg
shl
daa
cmp
scas
xlat
(bad)
mov
push
sar
add
out
ja
loope
inc
aam
mov
push
cmp
pop
mov
add
fdiv
clc
dec
pop
ins
push
add
mov
lock
test
fdivr
add
or
aaa
inc
push
inc
xchg
add
sub
mov
aad
push
loopne
mov
mov
aam
jno
lock
or
add
lock
ja
xchg
jle
mov
xor
shl
cdq
lods
adc
push
outs
pop
cmc
mov
or
test
adc
inc
sub
movs
cmp
xor
test
inc
add
pop
or
jmp
fchs
mov
int3
or
adc
add
aam
add
fiadd
aaa
or
or
xchg
cmp
dec
add
jp
jbe
adc
pusha
or
sahf
mov
push
lds
adc
adc
aad
in
out
pushf
clc
sub
je
add
ss
ror
and
lock
leave
push
and
ret
inc
xor
fst
test
or
xor
push
xchg
sub
movs
mov
sub
or
push
and
and
cmp
xor
jg
fist
je
ss
jns
lea
mov
popa
ins
(bad)
and
dec
inc
sbb
mov
inc
adc
push
mov
cmps
loopne
cmp
adc
sar
iret
or
sar
mov
mov
mov
mov
push
push
leave
xor
push
fs
sub
add
pop
jle
push
loopne
jecxz
inc
shl
call
jle
or
xlat
xchg
les
mov
hlt
or
nop
not
sub
fistp
sbb
and
xor
(bad)
and
call
shl
lds
jp
sbb
ins
adc
inc
cmp
scas
jbe
ja
add
mov
push
sbb
popa
adc
shr
push
adc
das
cmp
outs
bound
push
scas
aad
xchg
ret
adc
repz
and
outs
or
inc
and
cmp
sar
mul
pop
add
sbb
jne
dec
jne
shr
in
and
lea
add
push
cmova
pop
push
dec
inc
hlt
pop
xchg
ins
jbe
xchg
les
mov
adc
dec
lsl
inc
cs
test
jns
in
push
arpl
xchg
sbb
pusha
mov
add
rcr
sar
loope
mov
out
loopne
inc
mov
dec
js
mul
add
test
ins
sbb
js
idiv
cmp
and
imul
call
or
inc
daa
push
clc
jae
inc
daa
test
lock
dec
sbb
gs
add
lock
loope
add
addr16
pop
pusha
in
add
add
or
jecxz
ss
xor
enter
xor
gs
cmp
out
mov
and
scas
sub
mov
pop
sbb
cmp
retf
retf
xor
inc
ss
xchg
inc
sti
dec
jne
dec
ficom
dec
xor
aas
adc
add
int
out
xor
(bad)
outs
shl
dec
jmp
sbb
call
(bad)
imul
adc
adc
add
xor
mov
rol
adc
imul
adc
mov
sbb
jecxz
rcl
ss
mov
or
ror
mov
jmp
mov
movs
div
and
and
inc
and
add
dec
loope
(bad)
ins
pusha
cmps
cmp
lock
or
dec
jmp
and
push
sbb
pop
test
cmp
inc
add
or
pop
push
and
dec
xchg
iret
push
or
cmp
or
or
adc
aaa
pop
sub
push
add
(bad)
icebp
pop
or
mov
je
jmp
mov
mov
jmp
push
lea
retf
push
leave
jb
pusha
add
inc
test
push
xor
lods
adc
out
add
xor
cdq
add
or
sbb
cli
sbb
xor
(bad)
mov
and
inc
add
mul
loope
ins
inc
cld
inc
adc
jmp
lods
aam
leave
or
pop
mov
pusha
mov
imul
loopne
xor
pop
sub
jns
sbb
loope
and
(bad)
stos
ret
xchg
mov
inc
clc
enter
add
cld
and
imul
rol
jmp
outs
loopne
jo
or
add
mov
cmp
jns
pop
sub
xchg
inc
scas
push
idiv
mov
cmp
add
inc
mov
popa
dec
push
inc
adc
pop
movs
xchg
leave
push
lock
retf
push
mov
dec
pop
jbe
cld
or
enter
ja
dec
or
mov
cmp
add
mov
fmul
and
or
in
and
jns
or
inc
xor
test
dec
mov
pop
jae
and
xlat
(bad)
mov
pop
cmp
imul
inc
jmp
cdq
mov
xor
lods
mov
adc
test
std
ret
repz
sub
cmp
loopne
jmp
sub
push
inc
xchg
dec
or
rol
cdq
les
sub
popa
push
pusha
xchg
(bad)
arpl
xchg
cmp
or
push
in
ins
sub
xor
movaps
mov
xchg
mov
cmp
cs
xor
dec
xor
lock
push
add
sub
xor
push
lock
es
outs
sbb
es
dec
jle
mov
mov
dec
or
mov
dec
jmp
cmp
je
or
clc
push
pop
pop
mov
mov
mov
or
loop
dec
pop
push
push
imul
mov
jmp
lods
es
outs
pop
pop
addr16
mov
cmp
pop
push
or
(bad)
mov
rol
mov
cmps
add
fidivr
adc
mov
push
lea
nop
or
shl
(bad)
mov
xor
push
shr
add
ror
arpl
push
dec
cmp
sbb
outs
pop
mov
outs
pop
jecxz
dec
adc
xchg
adc
add
pushw
outs
jne
push
test
and
xchg
fdiv
jo
pop
jno
ins
rol
dec
jmp
mov
inc
dec
add
xor
push
mov
in
inc
jmp
ss
sbb
pop
mov
mov
push
mov
fcmovb
div
jno
sub
sub
jb
out
push
aam
(bad)
pusha
jmp
pop
popa
sub
mov
lods
and
mov
fadd
hlt
int3
mov
dec
add
into
and
mov
rol
sub
ins
and
xor
mov
stos
mov
movs
gs
jnp
or
xor
and
add
loope
xor
push
pop
in
add
lods
jmp
jnp
jae
out
aad
into
push
xchg
mov
xor
imul
ret
call
add
mov
mov
aaa
xchg
add
add
inc
and
loopne
les
add
pop
pop
daa
test
mov
adc
gs
add
or
or
lock
mov
sbb
sbb
outs
xchg
mov
and
inc
mov
xchg
jmp
cmps
call
dec
xor
fsubrp
sbb
sbb
mov
xchg
leave
push
jbe
in
inc
rol
loopne
fbld
jg
sub
push
repnz
inc
loopne
and
push
loopne
cs
imul
popa
ret
fadd
in
push
adc
xor
or
sub
arpl
add
out
dec
add
dec
js
or
add
test
mov
add
gs
push
lock
adc
loopne
dec
dec
cmp
inc
sbb
push
pusha
nop
test
push
ret
xchg
cmps
adc
movs
sbb
or
xchg
push
sub
inc
fsub
mov
inc
sbb
xor
mov
cmp
aaa
test
jge
in
cmp
add
sbb
sub
xor
jo
call
mov
sbb
nop
sub
inc
adc
cmp
enter
adc
mov
ins
xor
push
ror
adc
adc
mov
jecxz
test
sbb
or
add
aad
pop
mov
push
mov
and
adc
and
jg
fldenv
lods
dec
add
jnp
mov
loope
jmp
in
das
xor
jmp
mov
jmp
mov
xacquire
jmp
mov
xor
mov
push
or
add
add
push
cmp
and
call
mov
and
cmp
ja
xchg
inc
pop
int3
sahf
out
pop
pop
push
outs
jg
mov
jl
adc
jmp
add
add
mov
add
repnz
ret
add
or
mov
add
xchg
adc
iret
jne
xlat
call
mov
mov
loope
pop
cmc
nop
pop
add
popa
jb
jb
les
lahf
xor
and
inc
fist
data16
fsubr
jge
test
shr
aad
mov
inc
and
push
loope
add
add
test
cld
sub
xchg
or
push
pusha
push
scas
and
mov
pop
(bad)
add
sbb
dec
test
sbb
les
les
and
jmp
int3
push
shl
fisttp
sub
and
inc
push
stc
jmp
in
ret
jle
inc
cmp
or
mov
cmp
pop
call
push
inc
inc
xor
mov
push
iret
dec
mov
xor
cmp
ins
xor
or
add
das
cmp
dec
lds
cmp
test
push
xlat
mov
outs
mov
add
mov
cld
nop
mov
sub
jle
mov
mov
push
mov
int
add
pusha
rcr
pop
pop
adc
add
jae
mov
fcmovb
neg
push
mov
cmp
mov
(bad)
push
dec
mov
or
push
mov
inc
bound
and
mov
add
in
call
icebp
sbb
bound
add
jl
sub
js
cmp
fs
cld
(bad)
jge
cli
enter
daa
sar
xor
stos
or
dec
and
and
mov
inc
adc
shr
out
icebp
push
shl
data16
or
ret
add
cmp
test
mov
push
sbb
sbb
call
push
fistp
je
pop
fwait
sbb
add
or
sub
jb
test
inc
(bad)
push
mov
imul
test
ret
dec
or
adc
jnp
xchg
inc
and
xor
scas
pop
or
inc
or
hlt
ret
test
adc
push
mov
xchg
in
js
sbb
dec
fxch
ror
sahf
daa
sub
pop
es
les
pop
xchg
push
push
sub
mov
sbb
inc
fiadd
ins
xchg
xchg
cdq
test
or
add
add
mov
and
dec
daa
leave
das
dec
dec
pop
mov
mov
add
add
sbb
sub
sub
femms
inc
das
test
add
dec
stos
das
(bad)
psubd
inc
mov
cmps
push
jg
call
mov
xor
cmc
ret
sub
push
sbb
add
es
loopne
call
and
inc
arpl
ins
jne
ror
add
adc
xor
mov
jae
sar
test
inc
cmp
push
mov
sub
xchg
and
sub
dec
and
shl
xchg
cwde
sidtd
mov
xchg
adc
mov
or
jl
mov
jno
mov
pop
adc
add
gs
fadd
push
pop
jge
jge
push
add
or
fmul
mov
mov
out
or
cmovl
cwde
movs
ror
sbb
ret
pusha
add
ffreep
adc
shr
ss
sbb
rcr
fs
cmps
add
int
call
into
rcr
pop
push
inc
pop
or
and
cli
jns
dec
or
xchg
retf
loope
jo
jmp
or
and
sti
or
inc
cmp
xor
or
and
mov
jmp
(bad)
js
and
pusha
mov
mov
mov
sbb
adc
retf
call
mov
ret
adc
dec
jo
push
ss
test
jge
jo
adc
test
mov
pop
mov
pop
(bad)
scas
pop
push
pop
mov
ret
inc
push
repnz
das
(bad)
lods
test
sbb
cmp
pop
or
push
and
bt
jae
or
inc
call
clc
test
push
test
(bad)
clc
pop
dec
add
dec
mov
nop
jne
dec
push
and
pop
movs
lea
adc
xchg
push
mov
sar
imul
(bad)
fucomp
pop
cmp
add
add
xchg
xchg
and
or
add
inc
inc
and
mov
add
push
or
xor
in
jnp
add
add
add
or
mov
push
mov
aas
(bad)
shl
or
or
fldenv
sbb
mov
add
dec
fadd
out
div
and
and
outs
fistp
aaa
add
loopne
adc
adc
sbb
inc
add
and
or
or
clc
imul
adc
fadd
sub
add
sub
and
or
push
mov
loope
pop
pop
not
call
aad
and
add
pusha
jns
xchg
sbb
rcr
outs
sahf
add
jne
adc
inc
fsubr
aas
inc
add
shr
xor
mov
scas
and
adc
or
mov
rol
leave
scas
or
sti
pop
mov
add
mov
mov
nop
arpl
pop
cwde
adc
(bad)
xor
or
and
adc
lock
lea
xchg
test
dec
pop
pop
push
dec
inc
(bad)
push
rep
dec
mov
out
es
mov
sbb
test
test
mov
dec
add
inc
ins
adc
popa
pushf
xchg
sbb
dec
int3
mov
daa
mov
js
pop
movs
push
jns
daa
or
pop
xchg
dec
outs
fist
(bad)
shl
or
je
push
adc
xor
test
xor
fcomp
xchg
or
or
bound
or
shr
pop
test
xor
test
dec
add
sub
sub
lds
and
outs
pop
dec
add
bound
iret
jno
xor
and
add
add
and
ss
jne
movs
add
xor
and
adc
xadd
mov
(bad)
rcl
xor
dec
adc
in
arpl
inc
mov
inc
adc
popa
cmp
into
xchg
add
inc
mov
and
xor
bound
rcl
xchg
adc
pop
loopne
inc
ss
sbb
inc
pop
sti
nop
mov
add
adc
daa
rol
jmp
add
mov
xor
outs
jb
lock
ss
xchg
pop
in
or
test
icebp
scas
push
push
lds
aas
adc
cmps
mov
or
mov
das
mov
dec
dec
push
push
rcr
dec
adc
push
jp
pop
push
inc
sti
xor
jb
adc
sbb
icebp
mov
(bad)
sub
or
ror
dec
shl
push
dec
outs
jl
cmp
mov
push
adc
pop
xor
pop
cmps
xchg
push
jb
and
pop
daa
dec
fst
pusha
test
inc
pusha
inc
enter
int3
int3
lods
push
mov
dec
jne
inc
add
jno
push
or
and
add
jne
mov
push
push
jae
or
mov
loopne
and
jns
push
sub
dec
xor
mov
mov
in
inc
push
push
dec
mov
dec
push
or
retf
xchg
add
scas
jo
sbb
dec
gs
add
mov
pop
movs
push
popf
cmp
push
mov
pusha
add
stos
add
fld
iret
fimul
xchg
push
in
adc
mul
std
das
cmp
dec
pop
popa
fcmovne
inc
int3
and
clc
and
test
paddsb
dec
and
cmp
ins
outs
and
inc
sahf
fmul
icebp
and
inc
xlat
daa
push
aaa
je
push
dec
adc
stc
inc
dec
xchg
cmp
pop
sub
jne
and
push
or
push
xor
mov
adc
in
gs
jae
push
lds
ins
and
or
add
add
jne
push
sti
addr16
shl
sti
inc
(bad)
and
test
sbb
cmp
gs
or
mov
imul
xchg
sbb
and
clc
and
(bad)
mov
pop
add
or
push
and
pop
mov
dec
aas
push
push
rcr
pop
cmps
arpl
pop
sbb
inc
push
mov
imul
ds
lds
or
arpl
rcl
cmp
push
mov
sub
or
(bad)
pop
inc
bound
lods
mov
inc
push
inc
mov
mov
push
shr
ins
repz
shr
fwait
add
sbb
aas
push
sub
and
imul
daa
or
int3
es
das
jl
cld
mov
jb
daa
cwde
adc
sbb
adc
retf
push
xor
enter
(bad)
fidiv
ror
adc
fadd
fidivr
fldenv
mov
shr
enter
nop
pop
push
std
jbe
adc
mov
test
or
xchg
mov
mul
jae
pop
xor
xchg
add
fcos
jg
cmp
mov
inc
gs
adc
xchg
iret
add
xchg
aam
adc
inc
inc
adc
inc
or
inc
inc
call
xlat
jp
test
add
add
adc
aam
mov
jecxz
inc
shr
mov
or
inc
add
adc
cmp
cmp
xor
xor
adc
(bad)
aas
lock
mov
mov
inc
test
jg
jb
jmp
mov
and
icebp
sub
jo
cmc
test
retf
cmp
push
lahf
xlat
push
xor
adc
rol
test
adc
push
ins
and
or
mov
popa
sar
fadd
daa
pop
mov
mov
add
and
push
clc
cmps
cmp
jp
cmp
push
adc
dec
inc
dec
inc
dec
dec
inc
pop
cmp
jmp
dec
icebp
ds
push
adc
or
jne
or
mov
push
test
lods
mov
push
sar
stos
add
test
adc
mov
dec
cdq
mov
cmp
icebp
pop
jbe
inc
outs
cmp
movs
mov
pop
inc
mov
or
adc
sbb
add
mov
arpl
imul
add
into
xor
or
pop
data16
and
lods
test
cdq
push
(bad)
loopne
inc
mov
mov
add
jmp
ror
xchg
xchg
xchg
in
call
xchg
xchg
(bad)
aam
xchg
xchg
xchg
xchg
int3
enter
xchg
xchg
xchg
mov
xchg
xchg
xchg
lods
test
mov
pushf
cwde
xchg
nop
xchg
xchg
xchg
xchg
mov
mov
adc
test
fdivr
adc
push
lods
mov
adc
push
ret
pop
push
mov
xor
into
ins
and
add
sbb
cmp
mov
shr
pop
mov
or
jl
out
out
sbb
mov
add
in
jp
std
popa
sti
pop
jg
sub
fmul
cmp
jo
sbb
nop
xchg
or
mov
daa
cmps
nop/reserved
push
sbb
mov
sub
test
pop
sbb
scas
in
icebp
push
add
adc
inc
adc
push
adc
jg
xchg
je
or
jmp
sar
ins
jmp
sbb
shr
cwde
fisub
mov
dec
rol
dec
push
jne
fstp
out
mov
xchg
cwde
adc
fst
fstp
add
sub
loop
hlt
sub
aaa
sub
mov
dec
(bad)
rol
inc
or
aaa
jnp
adc
adc
push
sbb
movd
retf
or
lahf
sub
sbb
or
sub
rcr
push
sub
mov
(bad)
push
mov
jno
addr16
jo
jge
out
je
in
dec
jnp
cmp
mov
pop
arpl
cmp
sub
outs
jg
jo
ret
test
inc
arpl
jb
icebp
jno
imul
add
retf
pop
mov
jo
adc
push
popa
imul
dec
sbb
mov
movs
nop
outs
jne
enter
pop
outs
adc
loope
js
jl
pop
movs
movs
sub
movs
ret
cvtps2pi
ss
loopne
adc
push
push
inc
jbe
xor
adc
xor
dec
push
in
fsubr
daa
xor
mov
and
das
out
push
adc
adc
ror
lahf
add
les
sti
mov
add
mov
fiadd
push
cdq
stos
scas
add
int
loope
push
dec
inc
dec
dec
lahf
pop
js
jae
jl
sub
ss
jle
cld
js
inc
das
or
cmp
xchg
push
mov
xlat
mov
cmp
bound
in
pusha
and
push
xor
cwde
test
or
outs
dec
ins
ret
mov
stos
gs
add
imul
fmul
add
or
push
pop
cmps
adc
add
mov
stos
or
mov
cmp
mov
es
fs
add
mov
outs
jo
add
adc
pop
lea
test
inc
adc
xchg
or
sub
mov
push
fwait
popf
mov
cmc
adc
aaa
push
add
aaa
sbb
xlat
fistp
add
das
cmps
aad
wrmsr
(bad)
mov
movd
mov
cmp
xor
cld
jmp
jl
inc
jo
imul
pop
adc
in
jne
hlt
mov
push
and
addr16
or
outs
imul
and
and
cmp
sub
xor
add
push
je
test
aas
inc
mov
xor
shl
dec
push
and
ror
push
aaa
pop
add
outs
xor
dec
add
daa
mov
in
xor
data16
dec
es
das
push
push
and
scas
out
pop
mov
fdiv
sahf
imul
add
(bad)
out
or
(bad)
sub
push
arpl
fisttp
pop
cmp
(bad)
xor
(bad)
cs
lea
pop
add
ds
add
movs
dec
push
xchg
dec
mov
add
fcom
jne
xchg
test
sub
inc
fisttp
aam
cmp
add
jecxz
inc
mov
pop
inc
in
les
sub
jnp
dec
or
xor
mov
inc
js
xor
daa
aaa
in
push
sbb
inc
mov
ins
(bad)
pop
inc
dec
xchg
sbb
stos
out
or
or
and
imul
popf
and
daa
adc
ins
jl
fs
sub
sti
lods
mov
ins
loope
sbb
out
(bad)
xchg
xor
mov
clc
imul
or
sbb
push
adc
dec
pop
add
push
and
ja
ficomp
push
nop
ja
pop
push
aaa
arpl
dec
cmc
daa
inc
stos
and
jecxz
arpl
imul
sub
jl
inc
jno
add
pop
dec
cmp
mov
je
mov
add
fnstcw
jb
push
xchg
or
mov
xor
cwde
or
movs
enter
pusha
fucom
test
fimul
shl
loope
outs
dec
test
mov
loop
xor
mov
jg
dec
addr16
and
sbb
lahf
xchg
jmp
inc
adc
sbb
pop
and
ret
imul
repnz
aaa
cmovge
fsubr
pushf
xchg
inc
mov
xchg
sub
add
jno
push
mov
dec
(bad)
ins
loopne
cmp
dec
hlt
cmp
shl
test
add
cmp
imul
xor
xchg
js
inc
inc
pusha
dec
push
mov
mov
add
fld
sbb
add
inc
jno
fs
pusha
add
and
adc
dec
mov
inc
test
pop
adc
mov
dec
hlt
cmp
pop
jp
jne
sub
cmp
sbb
mov
xchg
adc
adc
cmp
dec
icebp
pusha
pusha
test
pop
adc
mov
cmp
loope
xor
sub
add
iret
cld
cmp
mov
mov
mov
dec
push
js
jno
sti
fwait
dec
fnsave
mov
jl
adc
add
sbb
mov
stc
jge
xlat
add
mov
xchg
mov
adc
rcr
mov
pop
adc
sti
int3
cmp
jne
aaa
lock
dec
pop
lods
adc
ja
sahf
cli
xchg
sub
add
xchg
sbb
adc
sub
les
mov
push
icebp
enter
pop
inc
mov
ja
lea
cmp
cmp
xor
push
lea
fistp
icebp
pop
sbb
out
outs
and
mov
shl
sbb
push
popf
push
js
imul
mov
add
pop
mov
xchg
push
cmp
add
(bad)
mov
and
(bad)
fidiv
sub
adc
push
sbb
add
bound
jns
outs
push
sbb
xor
addr16
retf
aam
mov
jb
fadd
add
add
(bad)
outs
repz
add
pusha
mov
add
or
das
ret
mov
rcl
add
jecxz
lods
imul
aam
push
ds
adc
sbb
dec
loopne
pop
add
nop
addr16
add
xchg
or
adc
fild
(bad)
ror
or
mov
inc
lea
clc
xor
cvttps2pi
sub
in
loope
(bad)
jg
and
jmp
mov
lock
adc
dec
mov
cmp
jmp
push
push
push
mov
add
push
je
or
je
sub
sbb
and
xchg
jle
add
mov
or
sub
push
stos
retf
inc
sbb
pop
loope
je
jno
mov
cmc
loop
sub
(bad)
push
adc
cli
les
sub
adc
xor
loop
in
fbld
test
lahf
cmp
nop
pop
add
and
jo
jecxz
or
mov
or
adc
inc
cmps
aaa
push
sbb
adc
lds
fwait
add
not
rcr
mov
std
clc
push
adc
and
xor
lahf
and
enter
push
add
dec
adc
xor
mov
out
je
call
test
cmp
dec
push
hlt
aaa
mov
daa
mov
mov
or
clc
loopne
pop
sbb
out
add
add
ds
dec
jb
or
out
inc
jecxz
xor
sub
ds
pop
mov
ret
cmp
ds
mov
or
out
lock
or
cdq
loop
movs
adc
sub
rcl
(bad)
cld
repz
mov
nop
dec
jmp
addr16
pop
jns
push
inc
popf
clc
pop
inc
enter
adc
add
and
sub
mov
gs
scas
retf
clc
iret
clc
mov
dec
and
fdiv
sti
or
jb
inc
dec
push
push
or
adc
ret
sub
or
inc
mov
int
cmp
cs
movs
shl
jne
mov
add
dec
adc
add
jmp
inc
adc
or
test
cmp
or
inc
in
inc
icebp
xchg
or
or
pop
mov
adc
mov
or
sti
dec
fdivp
fmul
mov
cmp
inc
add
shr
and
mov
lock
ins
push
imul
mov
lods
sti
xchg
jmp
sub
test
mov
push
cli
retf
add
or
add
jle
cli
xchg
adc
pusha
jmp
push
add
xor
cmc
sub
scas
icebp
push
sbb
xchg
inc
lea
fs
clc
cmp
fisttp
pop
push
inc
imul
aas
xchg
adc
ror
adc
test
xchg
mov
test
xor
test
or
inc
das
je
adc
xchg
mov
or
jb
sahf
enter
(bad)
enter
xchg
icebp
jg
cdq
idiv
cmp
jne
lods
aaa
xchg
in
adc
sub
add
or
jecxz
fnstenv
shr
or
or
shl
pop
test
scas
xchg
mov
push
scas
or
push
adc
pop
push
rdpmc
fcom
ja
mov
dec
paddsb
(bad)
xor
cmp
loope
cdq
mov
pushf
mov
xor
rol
mov
xor
sbb
jp
das
inc
outs
clc
push
rol
pop
mov
hlt
adc
dec
les
push
sbb
or
or
sbb
or
pop
test
sbb
pop
cmp
sub
add
je
inc
cmp
mov
push
popa
sbb
jle
sub
cld
jle
jno
mov
jne
mov
jae
inc
cmp
mov
mov
outs
xor
xchg
arpl
mov
(bad)
mov
hlt
sahf
mov
add
jmp
adc
pop
push
cmp
not
and
or
add
stos
fmul
rcr
cmp
fdiv
in
jmp
cmp
adc
sbb
push
sbb
fist
or
add
sub
aas
test
jns
rcl
dec
push
sub
add
lods
retf
sbb
xor
fwait
and
in
stos
je
add
sbb
mov
aas
sbb
pop
xor
mov
or
mov
xchg
jg
sbb
push
jmp
ja
and
in
sbb
in
push
fisub
and
inc
sub
sub
mov
test
pushf
inc
sbb
adc
sbb
inc
test
movs
out
(bad)
(bad)
sar
movs
jns
pop
and
add
add
dec
repnz
adc
daa
lock
mov
aaa
test
xor
mov
push
jge
add
bound
jmp
push
mov
(bad)
jge
xor
xor
cmp
inc
jmp
push
xor
daa
fmul
sti
push
in
push
push
push
sub
inc
mov
je
mov
jg
sar
or
sub
mov
inc
dec
shr
jnp
les
xor
outs
or
cmc
jle
ins
adc
ins
and
adc
loopne
or
pop
add
shl
and
and
scas
aad
(bad)
jmp
bswap
mov
pushf
adc
call
xchg
or
cwde
movs
scas
adc
jmp
and
and
enter
rol
inc
cvtps2pd
cmc
inc
sbb
add
and
cmc
icebp
push
sub
push
call
push
pop
cmp
or
in
mov
adc
cld
in
popf
cmps
repnz
fcomp
cmps
retf
pop
dec
test
inc
pop
in
test
imul
mov
add
or
ret
das
pop
push
add
add
sub
js
adc
and
imul
arpl
out
and
ins
inc
sahf
pop
inc
inc
add
pop
inc
call
or
inc
push
inc
dec
dec
push
jp
test
in
arpl
inc
jp
jb
mov
xchg
xchg
sbb
or
jmp
imul
or
push
outs
jo
je
fs
or
push
stos
cmps
je
int
sub
xchg
nop
push
mov
sub
bound
adc
pop
mov
and
or
cmp
inc
or
inc
push
in
or
and
cmp
in
push
cmp
mov
clc
in
add
hlt
hlt
lock
in
sub
pushf
retf
inc
inc
out
sub
dec
dec
inc
out
inc
(bad)
lods
and
or
jae
sbb
aaa
jne
inc
xchg
xor
mov
sbb
and
fs
lock
clc
xchg
fldcw
add
or
xchg
or
adc
xchg
xchg
xchg
xchg
sbb
and
xchg
xchg
xchg
xchg
sub
xor
xchg
xchg
xchg
xchg
cmp
inc
dec
xchg
xchg
xchg
xchg
dec
push
push
pop
xchg
xchg
xchg
xchg
pop
pusha
fs
ins
jo
js
xchg
xchg
xchg
jl
test
mov
xchg
xchg
pushf
mov
xchg
dec
push
add
ja
aam
addr16
mov
mov
inc
add
int
mov
cmp
cmp
push
enter
xchg
lods
or
xchg
mov
inc
jl
add
cdq
dec
push
push
cmp
in
sbb
sbb
and
inc
sub
push
pusha
clc
pushf
jns
dec
gs
rol
and
add
push
or
test
js
xor
xchg
adc
push
push
sbb
sbb
movs
jb
or
and
retf
jo
nop
sub
push
sbb
xor
or
in
add
idiv
push
and
inc
dec
gs
sub
fs
add
movs
push
movs
xor
push
aam
leave
retf
repz
push
push
push
movs
jb
cmp
push
mov
sub
mov
lods
or
gs
je
push
gs
sub
test
pusha
jbe
and
and
adc
nop
push
movs
jb
and
xchg
dec
cwde
nop
retf
shl
pushf
mov
mov
adc
cmp
add
sbb
add
pusha
xor
jae
dec
adc
push
jnp
adc
pop
cmp
rol
mov
imul
or
dec
ins
dec
stos
xor
add
inc
fild
xlat
or
add
dec
retf
ja
add
call
addr16
xchg
je
add
ret
inc
sub
dec
mov
sub
and
jae
stos
xor
inc
or
ins
inc
or
ja
sub
inc
in
add
add
and
add
stos
xchg
cmp
dec
or
adc
ja
add
lahf
xchg
ss
and
ret
sbb
retf
jb
pop
in
retf
mov
pusha
dec
xchg
out
popa
add
push
cmp
sbb
push
outs
mov
mov
pop
(bad)
jne
sbb
js
push
xchg
jne
outs
add
xor
or
or
out
addr16
nop
rol
sbb
int3
add
dec
xor
js
add
mov
and
mov
lahf
sbb
sar
adc
ja
imul
outs
add
push
into
jae
dec
mov
xchg
inc
(bad)
retf
or
sub
sub
imul
sub
test
jnp
mov
adc
pop
enter
ret
aaa
fdiv
cmps
or
adc
xlat
inc
add
adc
imul
xchg
adc
scas
stos
pop
xchg
bound
dec
mov
push
fs
loop
imul
mov
dec
imul
hlt
ins
add
rcl
adc
inc
adc
push
xchg
add
cmps
sub
xlat
cmc
jbe
test
and
je
call
and
add
pop
mov
es
or
outs
ja
(bad)
xor
jg
repz
jne
sbb
fcom
(bad)
inc
pop
inc
std
aaa
adc
or
dec
dec
dec
push
dec
push
push
mov
ja
sbb
push
cmp
sbb
xchg
pusha
inc
mov
sub
sub
nop
add
in
and
nop
inc
push
in
and
inc
push
cmp
sbb
adc
pop
mov
cmp
push
aam
or
sub
jl
mov
dec
push
or
fadd
lods
popa
push
int3
or
fs
pop
iret
sub
addr16
popf
pusha
cmp
xchg
pop
adc
rcl
jns
scas
retf
mov
je
ss
add
jl
test
push
out
push
add
fcomp
mov
pop
inc
js
nop
and
ss
or
mov
lds
rcl
test
xor
std
bound
or
popa
sub
or
xchg
sar
adc
adc
ds
dec
mov
rcl
pop
jne
mov
dec
add
sub
(bad)
adc
push
push
outs
das
dec
popf
cmp
xor
pop
pop
sub
iret
jae
pop
adc
push
sbb
sahf
adc
test
repz
mov
sbb
aas
scas
jge
rol
and
(bad)
rcr
ror
sahf
fiadd
inc
push
sahf
out
sahf
pusha
jo
nop
xchg
cwde
jns
out
pushf
mov
jns
out
mov
mov
je
and
push
mov
pop
or
mov
mov
clc
push
lods
pop
divps
pop
shl
outs
pcmpgtd
aas
call
inc
mov
push
lods
or
mov
out
fsub
in
stc
dec
sahf
adc
mov
nop
adc
or
xor
in
push
pusha
adc
cs
outs
mov
ins
fistp
push
push
outs
cmp
push
cld
sti
mov
pop
fcmovnbe
cld
push
js
mov
xor
mov
jns
es
in
add
out
add
enter
aad
xchg
dec
in
call
sar
data16
sbb
sub
icebp
sub
stos
je
cmp
call
lea
rol
movs
pop
std
ror
xor
out
push
and
jg
test
pop
xchg
mov
inc
adc
(bad)
(bad)
mov
pusha
outs
sub
mul
repz
sbb
and
lods
movs
xchg
add
dec
inc
dec
aam
adc
sbb
dec
and
push
cwde
ror
inc
repnz
dec
mov
ds
mov
mov
(bad)
js
dec
push
add
scas
sbb
inc
jl
and
push
xor
scas
les
out
ds
mov
in
(bad)
jbe
imul
hlt
dec
jl
mov
dec
lahf
and
add
pusha
cmp
inc
dec
iret
gs
mov
push
add
push
ds
sbb
or
(bad)
ss
out
in
repnz
arpl
dec
loope
lds
jl
arpl
sbb
(bad)
es
push
push
jo
popa
dec
mov
and
push
fwait
add
outs
fs
pop
adc
popa
adc
and
push
adc
or
inc
fsub
in
mov
(bad)
cmp
cmp
ss
cli
dec
push
test
jo
add
rcr
sbb
mov
xchg
mov
push
xor
pop
pop
ret
nop
outs
add
sub
or
pusha
or
xchg
pop
mov
jo
push
dec
nop
push
push
inc
push
xchg
adc
jo
cld
push
sub
cmp
jne
ins
sub
sbb
xlat
shl
dec
loopne
lock
int3
cmp
dec
sbb
mov
call
les
sbb
add
or
jl
loope
pop
cdq
cmps
push
inc
xor
mov
daa
mov
sub
adc
dec
aas
je
cmp
mov
fild
xor
pop
adc
push
icebp
scas
sbb
je
push
pusha
mov
jg
xor
and
ret
movs
out
nop
(bad)
out
repz
mov
xor
cmp
or
dec
push
push
je
push
jbe
pop
push
jo
test
lahf
jl
push
mov
adc
inc
cwde
xchg
mov
push
or
cmp
pop
inc
sub
enter
jmp
(bad)
pop
pop
pop
ja
mov
push
add
out
push
push
mov
js
xchg
sub
jle
lea
bound
pusha
xor
xor
fcmovnbe
test
mov
dec
imul
sbb
adc
or
call
mov
aaa
ficom
test
jg
mov
test
repnz
sbb
sahf
jnp
xchg
mov
andps
jp
adc
and
mov
fmul
xor
out
fisubr
and
dec
or
dec
adc
loopne
(bad)
ss
mov
ret
and
sbb
fwait
dec
popf
push
sub
shl
enter
popf
daa
fs
je
mov
fs
xor
stos
or
movs
adc
in
test
div
in
push
sbb
pop
ja
push
jecxz
loopne
mov
ds
xchg
lahf
xor
push
push
xor
retf
rol
add
push
jl
push
sub
push
push
rol
jbe
adc
pop
leave
ins
add
push
mov
outs
push
fstp
pop
je
movs
xlat
(bad)
adc
push
dec
js
lock
gs
fstcw
fwait
data16
or
sbb
fldcw
fistp
adc
(bad)
std
mov
bound
aaa
add
and
(bad)
push
imul
pop
jae
fsubr
xor
adc
push
push
cld
fidivr
xor
xor
cmp
sbb
or
sbb
add
add
inc
movs
xor
push
outs
jo
jno
gs
push
pop
jmp
bnd
jmp
fisub
sbb
popa
fs
sbb
xchg
or
js
xor
in
sbb
imul
outs
pop
test
outs
sbb
outs
add
and
sti
popa
jbe
imul
lock
jmp
or
jne
sub
sub
iret
or
cmps
fnstenvw
jns
adc
pop
rol
add
shl
data16
sahf
div
add
push
jp
(bad)
push
jno
mov
inc
jp
imul
inc
cmc
pushf
fild
ins
pop
rol
je
jo
outs
js
gs
xor
ins
gs
xor
jo
sbb
inc
and
outs
lock
scas
les
push
sbb
ror
cmp
movs
add
inc
push
arpl
and
or
push
mov
popf
sbb
dec
or
pop
dec
imul
popa
mov
sbb
arpl
shr
adc
mov
cmp
clc
push
dec
std
sar
aam
loop
pop
loopne
sbb
push
and
dec
repz
daa
pop
push
test
inc
dec
add
iret
lods
dec
adc
or
jg
pop
cmovp
cmp
dec
xchg
leave
aam
xchg
push
adc
das
imul
cmp
test
xor
jmp
sub
lea
aam
in
sbb
inc
pop
mov
inc
add
inc
mov
add
ss
jmp
add
jmp
pop
arpl
dec
pop
sub
xchg
jno
add
jnp
jecxz
rol
ss
lock
das
repnz
mov
loopne
dec
ja
xlat
test
loope
data16
dec
jns
push
dec
jp
mov
into
sbb
call
mov
setl
adc
sub
(bad)
orps
or
add
sub
ins
or
shr
invd
xchg
adc
test
test
cli
mov
add
mov
sbb
cmp
dec
add
addr16
bound
outs
or
arpl
ror
sub
or
outs
fisub
imul
jo
xor
jmp
sti
jno
cmps
test
popa
daa
fild
bound
popf
xor
sbb
and
imul
add
rcr
add
push
jb
push
or
or
icebp
add
dec
test
in
dec
mov
sbb
gs
or
mov
add
aad
mov
mov
mov
xchg
inc
lds
inc
inc
dec
or
jl
xchg
pop
stos
cmp
imul
push
data16
inc
mov
add
test
pop
jbe
scas
sub
mov
pop
inc
mov
jo
fild
jno
xchg
das
fisubr
test
push
les
ror
movs
jle
jg
loopne
das
jmp
outs
pshufw
fxch
xchg
outs
fisubr
jo
jo
popa
nop
and
jo
mov
inc
arpl
pop
call
push
push
test
(bad)
jl
nop
mov
push
jb
jp
daa
or
or
test
pop
mov
or
adc
dec
les
jno
leave
and
and
jno
and
or
loopne
test
jg
jno
daa
cmp
mov
push
ins
add
je
jno
dec
fild
cmps
mov
int3
jno
xor
in
pop
aam
fiadd
(bad)
or
pop
mov
pop
and
pop
adc
pusha
inc
(bad)
inc
cwde
fsub
fsubr
js
jle
je
dec
and
or
(bad)
test
adc
push
xlat
pop
xor
daa
push
mov
frstor
and
dec
pop
sub
push
sar
mov
inc
loop
imul
xor
and
imul
adc
aam
data16
add
mov
and
xchg
mov
sbb
xor
sbb
test
dec
add
inc
push
pop
mov
and
imul
pop
imul
aam
cmps
ror
mov
adc
fbld
mov
cmp
lahf
adc
push
push
adc
jne
jb
and
or
fadd
pop
mov
leave
inc
repz
jge
lahf
sbb
ror
xchg
sub
cmps
sbb
test
jne
in
push
out
adc
and
add
sti
sti
je
sbb
and
aad
nop
or
int3
test
xor
mov
loope
dec
and
cmc
loope
dec
jno
aam
sbb
jl
lea
fdivr
loop
push
sahf
or
loopne
ret
push
mov
adc
repz
stos
mov
pop
jmp
ja
retf
fstp
add
ins
js
xchg
pcmpgtw
push
pop
stos
xor
clc
xor
sub
cmp
or
mov
inc
jl
xchg
shl
mov
push
pop
loope
mov
jp
jmp
cmc
push
push
sti
dec
or
aaa
inc
and
fcomp
or
and
and
push
cli
loop
cdq
mov
imul
je
(bad)
jo
add
inc
lock
add
jmp
inc
aam
jle
adc
mov
out
dec
cdq
js
inc
leave
push
pop
pop
pop
je
mov
jb
jmp
xor
dec
sub
jne
mov
push
xor
add
add
and
add
lods
dec
jne
mul
push
pop
es
ins
and
xor
cmp
cmp
movs
or
enter
icebp
mov
sub
repnz
sub
xor
loop
jno
sbb
pushf
mov
outs
mov
mov
push
sbb
jbe
or
iret
cli
and
pop
call
and
add
(bad)
test
aad
aaa
(bad)
push
fsubr
call
inc
xor
push
xor
mov
pop
js
jae
jae
aaa
dec
or
das
cs
jecxz
xor
xor
jl
mov
out
rcr
and
pop
ja
je
adc
fimul
ins
push
popa
pop
fadd
dec
push
mov
sti
scas
imul
jp
add
mov
mov
pop
push
add
pop
or
adc
dec
add
push
jo
fild
jp
or
ret
ror
clc
xor
fmul
sbb
loopne
or
fs
cmc
cmp
scas
push
ret
jge
(bad)
aas
call
hlt
pop
hlt
lahf
add
shr
mov
or
or
mov
inc
daa
add
or
icebp
add
or
cmp
mov
inc
stos
aad
(bad)
add
mov
pop
shl
push
sub
iret
je
mov
mov
icebp
in
mov
or
jle
xlat
xchg
inc
cmps
mov
adc
jnp
sar
fdivrp
fld1
fsubp
fmul
and
fldenv
ret
enter
xchg
enter
sub
and
sub
push
inc
add
sahf
test
mov
lea
add
xor
inc
sbb
pop
jmp
rol
push
sbb
xor
je
rcl
lahf
cmp
xor
jmp
shl
out
fld
add
mov
fist
sub
xchg
cmp
add
mov
and
test
test
clc
mov
jmp
dec
jne
sub
fisubr
mov
inc
jo
sbb
inc
sbb
or
(bad)
mov
fst
push
sbb
mov
test
cld
push
(bad)
mov
add
add
adc
scas
xchg
adc
stos
ror
sbb
(bad)
or
cwde
adc
or
aas
xchg
ins
lock
sub
(bad)
test
push
(bad)
or
pop
and
inc
or
test
sub
pop
adc
or
jg
adc
jmp
imul
or
icebp
cmc
jg
movs
aas
jno
lahf
mov
mov
xor
cmp
sar
cwde
ins
pop
push
mov
lea
jae
cmp
test
mov
push
xor
out
clc
mov
pop
xchg
or
jmp
jl
cmp
je
push
sbb
jg
xor
test
mov
mov
cmps
mov
inc
shl
xor
aam
sbb
(bad)
sbb
xchg
push
jmp
jle
mov
out
fild
pusha
aaa
mov
jle
das
sbb
adc
bound
inc
sti
add
push
movs
ror
outs
inc
jmp
cmp
jne
jmp
xor
mov
or
sar
lods
sbb
and
add
arpl
add
adc
outs
xchg
ror
cmovbe
push
jecxz
pop
sbb
cli
nop
lahf
and
or
add
mov
mov
cmp
jge
cmp
cli
lahf
inc
mov
cmp
inc
add
popa
sbb
push
in
xchg
lods
and
clc
dec
dec
mov
and
ret
fldcw
cwde
sar
sbb
push
mov
fucomip
scas
cmp
(bad)
movd
jmp
out
adc
add
or
mov
or
inc
or
jg
pop
jl
mov
mov
sbb
xor
jle
(bad)
fisttp
adc
or
push
sub
push
ss
push
test
and
add
push
nop
cld
jo
xor
(bad)
call
mov
mov
pop
push
cwde
shl
les
jmp
inc
repnz
push
dec
mov
add
mov
dec
div
shr
xchg
shl
pop
movs
dec
sub
loope
in
adc
xor
mov
push
loop
shl
dec
inc
xlat
mov
sub
sub
push
inc
cld
sub
cli
xor
cmp
add
popa
or
pushf
add
shl
add
add
adc
sub
rcr
je
inc
andnps
(bad)
pop
call
inc
push
inc
sbb
fcom
fld
icebp
jmp
adc
fstp
and
dec
add
mov
and
mov
mov
jmp
push
and
jbe
pop
pop
inc
mov
in
loop
push
or
je
add
mov
aas
jne
mov
inc
aas
(bad)
fcmovnu
add
add
adc
je
aaa
adc
ret
pop
out
ret
push
or
xor
fucomi
inc
xor
sbb
dec
sbb
jnp
jb
and
push
inc
mov
out
push
and
dec
dec
dec
js
push
mov
push
jbe
push
fst
ins
pop
xchg
xor
add
cmp
mov
cmp
inc
fnstcw
add
push
push
outs
mov
jmp
dec
and
adc
jmp
mov
dec
add
ud0
shl
adc
cmps
repnz
dec
cs
dec
dec
mov
icebp
(bad)
cmp
mov
sub
push
in
xchg
ss
pop
ins
adc
mov
enter
je
cli
add
mov
or
add
shl
lods
and
add
cwde
lock
adc
nop
pusha
xor
adc
inc
and
xor
pop
outs
xchg
xchg
inc
icebp
adc
and
test
sahf
jmp
jmp
(bad)
movhps
adc
mov
gs
sub
lods
pop
inc
bound
push
(bad)
push
sub
out
inc
inc
idiv
neg
mov
test
mov
jno
inc
add
add
xor
loope
dec
fisub
ror
sub
mov
mov
jno
dec
movs
mov
loopne
inc
pop
repz
xchg
lock
mov
push
sti
adc
int
cli
je
push
int3
dec
sbb
push
xchg
mov
inc
push
xchg
ret
jne
push
stos
test
sbb
jo
pop
clc
sbb
pop
ss
mov
mov
pop
jg
or
repz
jae
popa
movs
jge
out
cmp
cs
dec
mov
push
(bad)
jge
mul
and
pop
add
ret
jnp
out
xor
inc
adc
or
xor
pop
mov
sbb
into
rcr
inc
sub
dec
mov
pop
ret
(bad)
jge
hlt
add
mov
loope
xor
sbb
js
mov
mov
xchg
add
mov
ret
out
or
or
jle
add
push
mov
or
retf
mov
ins
mov
cmp
pop
cmp
and
mov
sbb
popa
adc
cli
sti
xchg
call
(bad)
mov
je
mov
lea
movzx
movs
sbb
rcr
mov
retf
sbb
jl
stc
(bad)
mov
xlat
mov
imul
adc
mov
and
and
dec
jl
outs
test
push
jg
or
shr
shr
add
add
icebp
add
add
adc
ficomp
and
mov
dec
mov
outs
je
dec
loop
popa
add
jmp
inc
ins
(bad)
mov
fidivr
mov
and
pusha
js
or
push
push
mov
mov
mov
sub
inc
inc
cmp
clc
inc
and
mov
fisub
cwde
nop
add
loope
mov
dec
ret
les
pcmpeqb
jp
es
or
shl
shr
add
adc
rol
add
sbb
stc
dec
adc
fs
cli
in
add
push
mov
mov
sub
and
xor
(bad)
jl
mov
outs
fs
push
int
dec
inc
adc
fdiv
adc
cmps
inc
add
into
jp
or
fmul
add
add
std
cli
ret
pop
adc
pop
adc
pop
out
mov
cmp
jge
test
pop
out
je
(bad)
push
mov
xor
je
adc
ds
shl
sbb
push
cmp
or
sbb
dec
mul
adc
mov
adc
retf
pop
sub
jnp
dec
pslld
adc
dec
repnz
call
mov
sbb
mov
or
push
add
adc
popa
add
jmp
test
cmp
mov
in
inc
push
call
jge
xor
sub
rcl
inc
jo
or
mov
les
jnp
jge
and
cmp
fisttp
lock
cs
fisubr
mov
pushf
es
and
jl
add
pop
jns
gs
xchg
popa
and
and
(bad)
outs
in
aas
aad
or
mov
imul
and
das
sbb
sbb
sub
xchg
dec
xchg
push
adc
sbb
jle
ror
outs
loopne
push
pop
mov
pop
rol
and
add
adc
push
les
push
cmp
xor
jo
jne
mul
into
inc
adc
shl
sub
add
or
icebp
fstp
and
push
jge
or
mov
cmps
loope
push
xor
shl
or
xchg
mov
or
push
mov
fisubr
mov
enter
pop
loopne
out
xchg
scas
pop
or
div
push
sub
and
(bad)
call
test
data16
iret
pop
push
mov
jp
ret
sbb
push
ficomp
sbb
push
or
inc
cmp
out
xor
sub
inc
inc
mov
add
cmp
inc
fldcw
(bad)
pop
mov
sub
dec
adc
mov
add
ins
adc
xor
clc
mov
in
and
xlat
jge
jne
mov
sub
fwait
pop
adc
mov
aad
sbb
mov
rcr
dec
hlt
ret
xor
push
cmp
dec
sub
ins
lahf
adc
inc
xor
push
hlt
fadd
ror
hlt
jg
pop
lds
pusha
and
icebp
ja
movs
js
dec
sbb
mov
adc
inc
lock
fisttp
push
hlt
icebp
test
hlt
addr16
in
mov
mov
mov
jg
jnp
fucomi
push
sub
in
in
jnp
int
jl
mov
dec
inc
pop
imul
sbb
adc
xchg
divps
add
ds
pushf
jbe
inc
dec
and
aad
ror
dec
mov
loope
out
xchg
mov
and
mov
mov
xchg
jmp
nop
mov
mov
add
mov
jp
jne
xor
dec
mov
cmp
dec
cmc
inc
mov
add
les
push
sbb
rcl
add
cld
inc
jo
sub
cmp
test
ja
push
adc
sbb
xor
sbb
(bad)
jl
int3
cmp
sbb
arpl
jne
push
leave
in
mov
(bad)
xchg
sbb
sub
add
xchg
pop
dec
xchg
not
sbb
int
dec
xor
jbe
inc
or
pop
mov
push
mov
lea
and
add
cli
or
sub
jmp
loopne
movs
scas
push
dec
push
bswap
or
push
adc
cmps
cmp
inc
movlhps
dec
rcl
or
mov
in
(bad)
in
popa
cmps
pop
pop
ret
jg
mov
cmp
xchg
pushf
add
mov
adc
and
inc
daa
adc
pop
in
push
cdq
or
xor
xchg
or
pop
mov
mov
fadd
scas
les
sbb
cmp
pop
xor
add
(bad)
sub
outs
outs
outs
or
and
push
pop
je
addr16
into
and
cmp
xchg
push
iret
call
data16
(bad)
retf
and
out
inc
sub
push
nop
inc
cmp
cs
ins
xchg
sub
pop
sbb
sbb
adc
icebp
rcl
and
inc
mov
push
test
mov
mov
cmp
xlat
movnti
pop
pop
push
inc
push
push
mov
shr
inc
cmp
inc
imul
movs
jo
xor
stos
mov
pop
adc
ss
and
dec
cmp
inc
cmp
out
imul
fisub
inc
or
or
and
jns
ss
push
popf
hlt
sub
add
(bad)
in
add
shr
mov
and
cld
psrld
add
add
and
out
test
mov
xor
xor
mov
ret
mov
fs
add
ret
jae
fld
pop
mov
and
and
push
push
push
inc
jmp
inc
adc
shl
sub
xlat
xchg
inc
push
in
adc
push
push
lea
add
pop
or
cmc
adc
inc
je
add
sub
ds
cmp
ret
test
add
pop
xchg
jle
test
mov
add
xchg
test
movs
mov
aas
aam
sbb
rcl
jnp
(bad)
ror
fisub
shr
add
dec
sahf
or
push
pusha
sahf
jg
push
add
inc
sub
push
jl
loopne
pusha
pop
xor
or
cmps
js
sub
adc
lods
adc
inc
mov
ror
scas
sub
es
mov
mov
mov
push
cmp
(bad)
add
add
mov
dec
out
or
jge
shr
mov
cld
add
mov
push
sub
jo
dec
or
sbb
cmp
(bad)
test
mov
pop
xor
sbb
loop
in
lahf
(bad)
xchg
pop
outs
fbstp
mov
inc
sbb
cmp
jne
sysexit
dec
dec
dec
dec
sub
clc
dec
dec
or
jb
mov
push
mov
arpl
mov
ret
sub
fadd
pop
jo
inc
mov
mov
cmp
xchg
mov
and
in
cld
cmp
jl
or
cli
cmp
jbe
in
xor
clc
lahf
es
je
into
cmp
into
mov
jmp
les
pop
cmps
pusha
sbb
sub
add
xchg
loopne
jle
iret
adc
or
gs
mov
add
mov
aam
clc
test
push
ins
ja
rcr
inc
xlat
push
out
add
sub
add
sub
mov
ret
inc
nop
mov
or
or
sub
mov
mov
or
mov
dec
dec
inc
loopne
ror
cmp
stos
lds
or
add
clc
jo
xor
adc
add
mov
pushf
loope
mov
add
cmp
jb
sbb
pop
in
retf
or
or
mov
shl
push
movs
add
outs
add
fbstp
xchg
fld
retf
fsub
add
adc
fldcw
add
test
add
lds
out
cmp
jbe
push
xchg
jae
jnp
test
fs
sub
cmp
push
and
add
cwde
jnp
loope
add
mov
xchg
inc
mov
mov
test
sub
iret
add
adc
or
add
es
mov
out
mov
push
add
and
jg
add
jle
mov
dec
adc
(bad)
retf
out
push
aam
dec
pop
out
lock
cli
cmp
ja
and
or
stos
xor
es
jbe
pop
push
test
add
sbb
rol
test
add
fadd
xlat
stos
push
icebp
stos
jmp
shr
mov
jno
push
sub
clc
ins
and
or
pop
mov
mov
ret
add
dec
push
and
xchg
inc
scas
rcl
ss
push
or
adc
div
jmp
sbb
(bad)
and
sar
bound
ror
and
or
push
stos
es
mov
adc
(bad)
mov
cvtpi2ps
xor
xchg
sub
cmp
cmp
push
or
ret
push
hlt
dec
mov
add
xor
rcr
pop
pop
xchg
push
xor
or
call
sbb
jl
push
cmp
ja
push
or
cmps
mul
pusha
aam
cli
daa
cmp
or
test
mov
out
into
(bad)
jle
mov
scas
jno
jmp
or
cmp
mov
and
mov
gs
add
and
cwde
test
sbb
mov
mov
fist
sar
mov
mov
push
or
mov
cmp
push
adc
ins
mov
pushf
in
sub
pusha
cmp
mov
pop
and
and
inc
ins
stc
inc
pop
lods
push
xor
clc
xor
test
sti
dec
sub
pop
sbb
mov
mov
mov
inc
push
xchg
xor
sbb
icebp
pop
div
inc
pusha
push
dec
popf
pop
fisub
or
xchg
and
adc
dec
push
xchg
inc
mov
push
push
pop
add
and
pop
or
push
sbb
sbb
aad
(bad)
in
dec
inc
xchg
std
nop
clc
out
inc
daa
dec
inc
inc
add
call
shl
push
jb
movs
pusha
retf
popa
push
inc
add
cmp
cmp
mov
push
dec
sbb
(bad)
jno
imul
js
jo
fs
fisub
mov
push
xchg
sbb
xchg
jo
xchg
lock
popa
daa
ret
jne
aas
jo
adc
lods
mov
popw
cmp
sbb
adc
cmp
dec
pop
push
dec
xor
dec
and
sub
js
dec
and
jmp
or
sahf
stos
push
inc
sbb
mov
adc
imul
inc
outs
or
sbb
inc
and
push
xlat
or
cmp
inc
xchg
sub
lods
push
test
ins
pop
enter
add
adc
xor
icebp
push
dec
mov
and
sbb
push
inc
mov
mov
ja
and
add
xchg
pop
movs
icebp
add
mov
mov
xchg
dec
rol
ins
xchg
cmp
ins
dec
lock
or
shl
rol
and
adc
pop
leave
in
mov
ins
inc
fdiv
cmp
jne
sysenter
leave
leave
leave
leave
sub
sbb
mov
xlat
leave
or
outs
mov
sub
push
call
xor
daa
stos
and
jne
call
inc
test
in
sti
dec
mov
stos
mov
mov
pop
jl
and
clc
or
or
(bad)
daa
inc
cwde
scas
in
xchg
out
or
call
daa
or
adc
mov
dec
dec
or
cs
jo
stos
xchg
loopne
in
add
push
lea
and
jo
adc
cs
cmp
or
jae
xchg
dec
inc
inc
push
dec
inc
cwde
test
sub
cmp
mov
dec
adc
or
dec
sbb
add
xor
xor
lock
cmovo
and
dec
cmp
pop
pusha
sbb
push
add
mov
les
sub
pop
pop
ret
mov
mov
xchg
call
sub
sub
inc
jnp
sbb
push
and
sbb
fisttp
sar
or
cmp
mov
mov
sbb
ds
dec
loop
sti
movd
mov
or
mov
cmp
je
dec
jb
adc
inc
push
fistp
js
jecxz
ds
push
jmp
lock
sbb
push
das
outs
and
test
or
cmp
cmp
lock
jmp
test
aaa
outs
(bad)
adc
mov
sbb
mov
dec
sub
inc
push
rol
ins
loop
add
dec
and
sbb
sub
xor
add
loope
mov
ss
or
sub
test
jmp
dec
into
sbb
(bad)
pop
lea
push
add
shl
call
sub
sar
mov
cmp
mov
or
stc
and
sbb
push
dec
shl
dec
and
cmp
jecxz
pop
cmp
push
cmp
mov
jecxz
pop
dec
xchg
mov
or
ror
xchg
cmp
xor
xchg
push
pop
ss
popa
je
push
adc
mov
je
loope
fimul
mov
xlat
nop
rcr
mov
sbb
dec
sbb
dec
ret
cmp
jb
or
mov
cmp
sub
sbb
mov
idiv
(bad)
sti
dec
cmp
mov
push
pop
test
push
sub
retf
sub
push
(bad)
(bad)
push
push
add
mov
add
mov
shl
mov
add
sub
xchg
lods
aam
pop
cmp
add
and
out
mov
push
adc
adc
mov
jne
xor
adc
imul
sbb
fdiv
mov
add
cli
cmp
lea
push
loope
rcl
and
add
lods
mov
jge
adc
push
fdiv
dec
aam
add
ja
(bad)
stos
call
push
(bad)
lods
mov
das
scas
scas
repz
aaa
mov
push
xor
and
jp
mov
iret
mov
push
int
xchg
mov
mov
data16
mov
cmps
cli
mov
xor
cmp
mov
shr
or
es
add
mov
jp
dec
mov
mov
jg
ror
add
inc
jb
test
je
cmp
or
icebp
(bad)
sbb
dec
shl
or
mov
push
sbb
sbb
xor
test
adc
clc
add
adc
rol
xchg
cmc
or
add
aam
lock
xor
ret
clc
ror
shl
add
ds
dec
fisub
add
movs
mov
or
(bad)
jo
loope
out
aas
push
aad
add
add
mov
loop
ret
std
fcmovu
push
fdiv
or
mov
inc
fdivr
jbe
push
or
aaa
inc
sbb
fdiv
adc
in
adc
inc
sbb
xor
inc
icebp
mov
ss
add
adc
or
fst
xor
in
aas
sti
cmp
je
xchg
jb
ss
adc
xor
inc
sbb
cmps
push
cdq
and
lods
or
mov
es
repnz
sub
bound
sbb
sbb
push
leave
pusha
cmp
add
cmp
mov
and
adc
outs
and
sahf
jecxz
jno
inc
add
fimul
fnstenv
mov
(bad)
les
mov
add
fdivr
shr
push
sbb
shl
cmp
add
and
sub
sbb
push
push
or
outs
call
jb
sti
adc
sub
and
std
lds
clc
fld
ins
add
outs
or
inc
bound
adc
out
icebp
xchg
(bad)
sub
pushf
ins
test
adc
(bad)
lahf
(bad)
pop
cmp
cmp
dec
or
push
pop
and
jp
dec
cli
pusha
adc
repnz
and
out
adc
sbb
bound
jbe
int3
xchg
mov
and
es
xor
push
popf
adc
cwde
popf
and
js
jp
pop
ror
dec
sub
xor
push
in
push
fidivr
je
push
add
inc
pop
push
add
jne
push
int
ins
loop
inc
in
add
jo
call
es
sbb
daa
aam
xchg
jno
jmp
sbb
lods
mov
fdivr
add
rol
arpl
mov
push
cld
popa
sbb
or
xchg
mov
inc
sub
cmp
adc
or
imul
pop
add
es
inc
inc
push
cwde
cmp
pop
xor
fwait
in
imul
and
xor
or
(bad)
ror
rcl
mov
xlat
adc
mov
push
rol
clc
or
(bad)
nop
sbb
dec
and
push
add
cmps
rcl
xchg
ja
add
clc
add
jne
outs
shr
shl
cmp
dec
out
(bad)
jg
aad
or
loop
add
add
jo
loopne
mov
mov
cmp
cmp
mov
jo
loop
xor
scas
or
ret
(bad)
movs
inc
adc
out
sbb
or
mov
dec
cmp
cmp
mov
sub
bound
inc
adc
jnp
sbb
loope
shr
(bad)
icebp
pop
sbb
inc
cmps
test
mov
mov
dec
add
mov
jg
clc
mov
je
dec
je
add
inc
pop
(bad)
inc
cmps
or
push
pop
mov
adc
push
jne
sub
sub
js
scas
std
fisubr
adc
in
lods
or
movs
dec
adc
shl
sub
cmp
push
leave
add
jle
jno
push
imul
jne
push
call
sub
mov
xor
popa
push
pop
sub
push
(bad)
lock
leave
inc
dec
mov
push
or
xchg
cmp
mov
(bad)
aaa
bound
js
cmp
mov
sub
cli
cwde
inc
hlt
adc
sub
out
adc
cmp
jo
iret
sbb
push
xor
rcr
push
add
test
add
jo
sub
xor
cs
fs
jbe
(bad)
mov
xor
adc
aaa
xchg
mov
lods
xor
push
int
mov
retf
test
mov
repnz
push
in
(bad)
push
sbb
dec
pop
jb
jmp
dec
inc
mov
adc
lea
movs
aaa
jo
mov
lea
or
or
mov
push
push
lea
dec
ret
lock
push
add
test
and
fwait
adc
test
push
push
xor
cmp
ror
cld
dec
push
sub
or
test
xchg
inc
loope
lock
pusha
pop
and
xlat
call
jg
shl
mov
mov
xlat
mov
mov
mov
fsubr
inc
dec
jo
movzx
inc
mov
sbb
adc
es
loope
icebp
jb
or
add
mov
and
jne
cmp
pop
jg
mov
jg
movzx
outs
cwde
push
add
rol
mov
in
test
cmp
add
fadd
stc
adc
ret
pop
or
sar
out
ret
mov
dec
in
jmp
cmps
pop
leave
inc
xor
jg
inc
xor
or
lds
add
ret
lahf
push
dec
xchg
jecxz
in
jmp
jmp
jns
and
xor
int3
fisubr
leave
jne
xor
ds
cmp
cmp
cmp
enter
loop
xchg
jbe
outs
aas
mov
inc
inc
in
mov
xor
push
jmp
sub
xor
mov
pop
sbb
bound
aam
push
push
dec
mov
pusha
fadd
movs
dec
mov
inc
rcr
cdq
lods
cli
bound
stos
mov
adc
sbb
and
hlt
jno
jl
es
(bad)
clc
mov
repnz
push
lea
push
cld
std
inc
inc
inc
loope
dec
jo
enter
gs
mov
sbb
test
repnz
or
sub
shl
ret
cmp
ret
into
in
push
ret
cmp
cmp
jle
inc
loopne
xor
lock
fcom
mov
cmp
jl
add
mov
mov
shr
(bad)
fiadd
ror
xor
int
lods
and
jnp
xlat
int3
ds
push
push
add
out
add
push
lea
cmps
dec
add
xchg
fld
push
aaa
push
jl
fld
mov
into
pop
das
xchg
pop
rol
xchg
das
fs
xchg
mov
cmp
and
shl
sub
dec
(bad)
xor
mov
inc
jmp
and
push
add
adc
inc
cmp
xor
dec
not
and
retf
dec
sbb
mov
enter
scas
pop
js
pop
add
push
pushf
add
push
mov
cmp
mov
(bad)
test
add
rol
inc
pop
enter
inc
les
inc
hlt
popa
cwde
(bad)
sahf
movs
mov
cmps
and
cmp
add
add
dec
add
cmp
or
clc
xchg
mov
push
jae
sub
jb
xor
rsm
cmp
out
call
rcr
xchg
or
stc
lahf
js
pop
into
dec
hlt
lea
ins
ror
mov
lock
cmp
(bad)
(bad)
js
mov
sbb
mov
pop
hlt
inc
mov
or
outs
push
imul
call
aad
add
push
add
imul
loopne
add
jo
clc
sub
xchg
fiadd
xor
sbb
mov
jmp
and
bnd
push
jecxz
(bad)
jmp
xor
xor
loop
cmc
and
adc
or
and
cmp
jbe
dec
push
mov
push
arpl
push
or
add
jb
pushf
add
push
ds
fwait
mov
and
inc
aam
adc
retf
xchg
adc
sbb
mov
mov
sahf
clc
mov
mov
pop
xor
or
ret
fmul
loope
popf
pop
je
add
jl
lods
sub
add
xor
inc
stos
jo
pop
call
mov
push
sub
out
or
push
call
pop
in
add
xchg
add
(bad)
push
sbb
xchg
pop
push
dec
mov
pop
mov
inc
call
out
jmp
aaa
call
cmp
aaa
ror
mov
push
jne
mov
cdq
rcr
adc
sbb
ret
imul
in
push
sub
jo
inc
sub
stc
sbb
add
(bad)
pusha
cld
fs
inc
aam
iret
cli
jl
xchg
or
push
jnp
xor
inc
out
mov
(bad)
push
or
ds
add
mov
sbb
add
sbb
jne
lahf
add
sbb
(bad)
push
inc
sub
dec
add
add
mov
mov
jnp
add
in
sub
push
mov
int
mov
add
xlat
cwde
push
rcr
cs
icebp
ins
mov
movs
cmp
je
push
xor
push
jne
fwait
xor
push
sbb
inc
and
xor
xlat
push
push
cmp
jmp
loopne
(bad)
out
sbb
adc
pop
push
add
loop
xchg
dec
cmps
sub
sub
dec
pop
inc
mov
gs
out
stos
jae
xor
add
outs
jae
div
inc
jmp
cmp
or
nop
dec
mov
fnstenv
(bad)
dec
add
retf
test
(bad)
test
xor
adc
pop
mov
jbe
lock
dec
jne
cmp
jae
mov
cmp
(bad)
pop
add
xchg
cmp
mov
add
aad
bound
sub
not
fbstp
jmp
mov
inc
mov
inc
shr
xchg
test
dec
ss
mov
adc
jb
das
sbb
sub
push
mov
push
add
inc
ins
pop
add
and
clc
test
add
in
mov
loop
push
jmp
les
mov
push
out
cmp
shr
add
rol
push
sub
popf
shl
aaa
mov
mov
int
xchg
mov
inc
shl
je
(bad)
leave
sbb
xchg
mov
jmp
push
movs
push
and
cmp
inc
imul
fist
sbb
lea
mov
icebp
shl
sub
repnz
test
cli
add
add
imul
cmp
jle
xchg
sub
test
cmp
stc
loope
cld
push
inc
add
sar
ins
test
add
scas
sbb
cmp
push
movs
leave
call
aas
lock
or
sbb
neg
mov
loop
aad
pop
push
cmp
nop
mov
add
sub
unpcklps
mov
dec
out
sbb
mov
sub
sub
test
iret
mov
imul
or
sub
add
mov
cmp
cmp
mov
jmp
fsubr
fld
mov
fcom
mov
jl
sub
adc
adc
pusha
fdivr
pushf
clc
adc
adc
mov
adc
adc
out
rcl
daa
xchg
icebp
or
mov
shr
mov
les
(bad)
sub
dec
adc
sub
adc
add
sub
and
push
(bad)
or
rol
fisttp
shr
sub
pop
jg
rcr
rcr
mov
mov
mov
mov
outs
jmp
add
pusha
mov
jbe
rcr
dec
retf
test
es
inc
push
les
int3
push
ror
and
mov
adc
and
rol
pop
mov
sub
jae
sub
push
mov
lock
sbb
inc
ds
sub
mov
sbb
dec
or
or
cld
fcmovne
shl
jb
mov
mov
dec
fwait
dec
jge
hlt
shr
(bad)
jmp
data16
shl
loopne
in
push
dec
mov
repz
xchg
mov
jge
xor
mov
sbb
ja
adc
arpl
add
inc
xchg
or
or
call
ins
mov
or
das
dec
sti
jno
add
xchg
adc
xchg
mov
cdq
push
inc
jne
xor
call
ret
int3
lock
add
dec
mov
jmp
cmps
(bad)
enter
jmp
jmp
jge
jmp
sar
imul
dec
and
inc
add
jmp
jmp
js
lea
loope
sub
mov
or
sbb
sar
in
mov
sub
jg
ja
sub
aam
and
jns
mov
test
dec
or
jge
mov
mov
ret
or
and
cmp
scas
adc
int3
jae
in
or
rol
sub
mov
xchg
xchg
clc
adc
lock
les
lahf
add
xchg
xchg
sbb
push
ror
fmul
jbe
xor
inc
or
adc
sub
inc
sub
sub
inc
and
ss
dec
add
test
push
pop
add
mov
push
(bad)
mov
add
test
mov
xchg
(bad)
xor
push
aad
pushw
(bad)
mov
jnp
add
sbb
sbb
out
fcmove
std
mov
lea
xor
adc
cmp
test
xor
sub
or
movs
sbb
jecxz
jae
lock
pop
jmp
test
add
mov
retf
jge
pop
rcr
enter
loope
mov
stos
call
mov
mov
add
xchg
(bad)
xchg
xchg
test
sbb
or
add
mov
ds
lea
icebp
adc
cmp
dec
cmp
ror
adc
inc
dec
test
xor
adc
sbb
sbb
inc
je
adc
xchg
stc
and
aaa
outs
sbb
lahf
jb
push
cmp
mov
cld
inc
daa
lea
loopne
mov
inc
mov
aas
sbb
les
adc
or
or
or
fs
push
mov
outs
loopne
fmul
mov
xchg
sbb
call
shl
cmp
mov
add
mov
or
daa
movs
sbb
adc
mov
sub
in
mov
(bad)
sbb
or
aad
sub
retf
and
sar
add
mov
mov
pop
int3
dec
or
mov
popf
imul
sar
aad
jne
out
test
movs
clc
cli
adc
mul
shr
add
cmp
mov
(bad)
in
jne
jecxz
dec
jae
add
jmp
pop
in
stc
dec
add
retf
dec
and
sbb
ss
add
dec
dec
retf
cmp
mov
les
cmp
fstp
pop
stos
cmp
nop
cmp
xor
mov
clc
mov
and
sbb
dec
adc
jo
rcr
aas
fs
shl
add
cmp
enter
sbb
inc
pop
pop
movs
sub
test
inc
lock
add
sub
sub
inc
call
ret
leave
imul
out
adc
stc
jbe
and
test
(bad)
fnstsw
fmul
mov
adc
push
mov
pop
mov
add
push
sbb
sub
lock
add
sti
add
fs
mov
jmp
pop
icebp
mov
sub
(bad)
xchg
and
add
mov
and
adc
cwde
test
std
adc
rcl
inc
in
jno
or
cmp
adc
dec
retf
dec
mov
shl
mov
and
dec
out
push
cmp
and
push
sbb
or
es
test
aad
pusha
or
(bad)
nop
xchg
popa
lods
sub
fnstcw
mov
lock
mov
sbb
out
das
cmp
jl
sub
ret
int
adc
lods
push
loopne
test
xor
jno
xor
je
xchg
nop
pop
or
jg
push
pop
cld
and
ror
and
jno
pop
pop
adc
(bad)
cmp
cmp
mov
neg
cmp
jb
das
out
sahf
dec
enter
mov
ja
inc
mov
das
jmp
jmp
and
mov
sbb
and
dec
xor
mov
mov
out
push
inc
movs
mov
test
pop
aam
sub
mov
cmp
cld
xor
add
clc
adc
mov
dec
loopne
push
loopne
or
add
jecxz
fndisi(8087
rol
jle
jg
push
fdiv
aas
js
test
add
xor
cmp
lea
mov
in
cmp
loopne
add
xchg
mov
add
je
cmp
jge
mov
(bad)
jmp
enter
scas
push
retf
inc
jmp
call
or
push
icebp
sub
les
mov
out
out
mov
mov
scas
lock
or
and
fst
fnsave
add
inc
mov
(bad)
sbb
add
pop
push
xchg
mov
call
pop
(bad)
cmc
inc
xor
js
std
jmp
dec
loopne
test
idiv
data16
sub
sahf
ja
sub
add
sub
jg
inc
push
mov
mov
not
das
sbb
je
mov
or
jne
js
ror
xchg
mov
aam
cmp
aaa
ins
sub
xor
dec
je
adc
je
syscall
fwait
jg
mov
sub
xor
test
xor
pop
push
push
xor
ret
push
inc
fdivr
jne
scas
add
sub
cli
lea
or
sub
test
add
add
cmp
xchg
out
(bad)
jle
pop
adc
test
jg
retf
sbb
and
pusha
data16
or
lds
xor
cmp
mov
inc
bound
mov
outs
xor
push
adc
pop
xchg
xchg
xchg
jnp
enter
scas
dec
out
test
imul
cmp
inc
sub
mov
or
adc
mov
mov
clc
les
inc
inc
pop
cli
jae
cmp
iret
jmp
lea
mov
call
pop
les
mov
lods
cli
shl
fdiv
clc
mov
push
mov
mov
add
mov
mov
(bad)
stc
add
and
dec
(bad)
fiadd
and
push
inc
mov
sbb
sbb
dec
dec
es
cmp
leave
popf
rcr
or
add
arpl
dec
cld
push
outs
push
sub
sar
or
xchg
pop
and
jo
stc
sbb
das
fidivr
mov
mov
mov
out
retf
pop
mov
xor
mov
push
(bad)
xor
xchg
fisttp
add
femms
mov
mov
test
lea
js
or
jge
aam
adc
xchg
shl
lock
gs
mov
mov
loope
(bad)
lock
push
data16
sbb
js
mov
jno
push
add
cwde
add
xor
add
or
mov
sub
and
not
adc
cld
cmp
loope
lods
mov
inc
and
pusha
xlat
jle
mov
pop
lds
ds
lock
push
add
inc
and
mov
ins
sub
sbb
or
ror
les
enter
inc
clc
xor
jmp
cmp
or
shl
push
or
mov
push
jnp
push
xor
mov
rol
inc
test
xchg
jb
neg
add
adc
inc
mov
xchg
or
into
dec
je
(bad)
fstp
jle
cmp
jne
or
out
mov
adc
add
stos
add
lock
popa
cmp
jl
push
clc
(bad)
mov
sub
or
mov
js
sqrtps
or
daa
mov
in
lahf
mov
sar
pop
xor
(bad)
fisttp
call
xchg
dec
shl
fcmovnbe
pop
sti
xor
and
mov
xor
mov
dec
jne
mov
inc
inc
test
mov
call
in
in
add
and
pop
sub
or
nop
or
addr16
mov
mov
and
cmp
fcomp
mov
add
mov
cmp
leave
fdiv
ret
std
gs
dec
or
sub
rcr
inc
sbb
and
xor
jge
add
sbb
lock
dec
test
imul
pandn
(bad)
rcl
jb
push
rcl
rcl
add
cmp
loope
cmp
scas
mov
pop
enter
les
(bad)
enter
adc
enter
pusha
xchg
pop
rcr
cmc
popa
or
or
inc
push
sub
in
cmc
ror
clc
test
jne
aad
repnz
pop
shl
mov
cwde
lock
mov
stc
(bad)
dec
sub
sbb
adc
daa
push
pop
les
mov
sub
and
cmp
lea
pop
inc
jg
inc
adc
inc
jbe
or
push
mov
dec
dec
dec
shr
hlt
outs
push
jge
lea
adc
xchg
test
test
js
scas
jo
inc
clc
lock
das
sar
xchg
fnsave
add
(bad)
xchg
mov
ds
(bad)
in
mov
cmp
jnp
mov
xchg
mov
in
mov
or
cli
xchg
cmp
pop
add
add
jno
fnstenv
int
(bad)
inc
inc
dec
mov
dec
aas
in
sbb
inc
push
movs
mov
loop
inc
dec
push
sbb
add
xor
mov
adc
lea
pop
or
ins
jge
pop
mov
mov
rol
xor
dec
mov
and
and
jmp
cmp
in
mov
or
inc
inc
xor
inc
or
dec
ins
or
movs
adc
push
das
xor
daa
inc
jo
xor
in
loopne
scas
retf
mov
repz
mov
rcl
enter
cmps
das
xchg
xor
jbe
mov
sub
movs
pop
out
adc
add
add
add
xchg
or
sbb
add
fwait
mov
fld
inc
(bad)
cmp
int
mov
push
sar
in
test
dec
test
iret
pop
jne
add
pop
daa
add
mov
push
xlat
gs
js
gs
fs
rcr
or
add
lea
add
add
xlat
and
xchg
lods
test
stos
push
cmp
pop
or
call
fild
mov
jmp
lea
lea
cmp
jb
cs
pop
stos
je
adc
push
cmp
stos
adc
sbb
jne
jmp
add
push
push
add
cli
push
xlat
adc
pop
rcl
sbb
cmp
outs
int
data16
or
mov
push
adc
stos
push
or
push
and
sub
test
inc
push
or
and
inc
xchg
int3
adc
adc
in
xchg
xor
mov
fisub
pop
and
or
ins
push
push
test
mov
test
adc
push
ja
mov
out
add
test
lea
jl
jne
mov
mov
mov
jmp
inc
adc
and
or
cli
xor
jae
mov
leave
or
mov
mov
dec
jp
nop
ret
nop
pushf
jne
nop
adc
sbb
add
in
fwait
pushf
xlat
sbb
mov
retf
add
jo
adc
inc
nop
add
gs
and
mov
test
mov
add
jno
jo
push
lods
mov
dec
mov
sahf
fadd
pop
dec
sbb
dec
pop
pop
test
inc
xchg
lods
ret
shld
and
hlt
repz
add
mov
jl
lock
pavgb
and
lock
repz
xor
out
adc
inc
imul
jbe
leave
test
adc
add
sub
xor
je
shl
jo
add
div
shl
dec
xchg
shl
sti
inc
xchg
jmp
dec
xchg
xchg
(bad)
jne
pop
xchg
add
out
mov
std
es
or
add
and
xchg
add
inc
pop
movs
push
xor
xchg
lahf
sbb
js
xor
sub
or
stos
add
test
xor
add
test
lds
sub
(bad)
or
sbb
pop
adc
rcpps
and
dec
cmp
mov
rol
or
mov
call
jmp
cmp
jle
dec
fadd
mov
pop
fidiv
adc
add
pusha
in
aaa
aad
adc
cmp
dec
les
arpl
out
sar
mov
push
jmp
add
js
xchg
mov
call
outs
and
adc
mov
dec
int3
xor
jecxz
sbb
sub
out
sbb
sar
mov
icebp
popf
(bad)
or
or
push
(bad)
pop
xchg
shr
aam
inc
pop
jnp
repnz
or
jmp
imul
test
jle
xor
push
adc
pop
or
inc
pop
je
rol
inc
cmp
xchg
enter
cld
ds
mov
pop
neg
out
xchg
sbb
cli
or
adc
rcr
add
and
push
es
iret
not
in
add
push
jmp
add
mov
das
push
push
inc
mov
(bad)
push
call
aaa
ja
cmp
shr
and
inc
and
and
in
hlt
icebp
and
sub
fsubr
sti
cmp
shl
or
iret
inc
sub
not
fcomp
or
jo
ss
jecxz
inc
adc
cmps
mov
push
in
mov
mov
xchg
shl
ins
sbb
pop
ss
mov
inc
xchg
dec
add
fst
and
and
push
sbb
add
nop
inc
or
or
push
or
push
jae
test
adc
xchg
add
rol
rcl
mov
stos
adc
push
(bad)
nop
aaa
inc
or
push
sbb
pop
xor
pop
add
xor
or
or
mov
and
and
rcr
xchg
pop
add
aas
jmp
add
add
daa
xor
xchg
adc
aam
pushf
call
adc
mov
sub
and
(bad)
rcl
inc
es
(bad)
xchg
or
or
mov
stos
and
xchg
loop
shr
add
add
imul
sbb
sbb
ins
add
lock
scas
out
bndldx
out
cmp
cmps
push
test
mov
dec
dec
jmp
nop
(bad)
mov
sbb
jne
add
or
mov
jo
pop
mov
pop
sahf
or
and
fnstsw
push
or
sbb
push
push
pushf
fnstenv
in
pop
loop
add
xor
xor
mov
fisttp
pusha
sub
outs
clc
shr
sbb
xor
mov
sub
sub
xchg
push
aam
dec
dec
pop
sbb
xchg
dec
jne
(bad)
mov
js
jne
pop
adc
shr
mov
cs
pop
xor
inc
and
dec
or
pop
push
addr16
int
test
cmp
pop
or
aaa
movs
and
popa
inc
push
add
or
add
fistp
call
mov
cmp
fwait
sbb
add
xor
mov
jg
adc
mov
xor
aad
cmp
dec
mov
scas
add
mov
adc
fwait
inc
cmp
jne
dec
pop
pop
pop
jg
ds
shr
rol
dec
add
and
lods
adc
cwde
mov
ins
jmp
aam
je
xor
or
call
add
inc
jmp
inc
(bad)
and
add
fcmovu
or
sbb
add
test
sub
je
je
xor
cmps
shl
add
cmp
mov
sub
call
ret
sbb
jno
leave
shl
daa
mov
xor
shr
jecxz
jne
mov
out
fistp
int
lock
fmul
sub
add
push
inc
add
ret
into
shl
add
and
add
and
xor
ja
add
(bad)
jp
test
cmp
xor
or
mov
inc
cmp
fidivr
lea
sub
test
jge
push
lea
and
dec
aaa
and
push
rol
jp
inc
cmp
or
lock
shrd
sar
adc
out
add
lea
les
mov
lea
mov
test
inc
aaa
(bad)
adc
ret
ss
pop
lea
out
aaa
push
and
mov
add
je
inc
mov
je
jmp
jmp
inc
mov
rol
rol
inc
dec
inc
jae
jmp
jmp
data16
or
(bad)
push
mov
adc
or
xor
ficomp
add
add
je
jbe
aas
pop
sub
call
pusha
fild
mov
mov
dec
jo
xor
scas
pop
fucomp
xor
push
and
enter
dec
push
sar
pop
into
jo
mov
jne
sbb
mov
or
addr16
xor
mov
retf
and
clc
and
cmps
pop
popf
or
jmp
mov
(bad)
fild
dec
pop
callw
clc
fcmovbe
ins
dec
push
xlat
add
dec
push
in
int3
and
neg
ficom
push
mov
cs
ficom
fild
fstp
fwait
mov
jl
das
sti
and
inc
aas
pop
and
aas
enter
rcr
inc
enter
sti
pop
add
int3
or
pop
add
pusha
fnstsw
sahf
jne
(bad)
or
jmp
mov
push
or
aaa
add
mov
aam
pop
ja
jno
lds
xor
sbb
stc
fsub
fwait
jmp
in
cdq
rol
and
xchg
daa
addr16
fsubr
add
mov
js
mov
or
adc
arpl
pop
rcl
ret
or
repnz
ret
aam
mov
dec
and
(bad)
jne
loopne
fdivp
div
jmp
fistp
mov
fmul
xchg
jbe
je
pusha
add
and
sbb
aaa
and
push
fisttp
pop
jo
jecxz
mov
add
adc
nop
and
clc
(bad)
xchg
dec
inc
and
and
mov
jo
movs
lock
push
push
push
cmp
add
push
mov
lock
cmps
rol
or
sbb
aaa
and
push
mov
sbb
push
sbb
dec
jp
sub
jmp
xor
sbb
rcr
inc
dec
sub
jmp
cmp
out
fldenv
es
loopne
adc
add
or
leave
mov
adc
inc
cmp
xchg
pop
pop
add
vmwrite
mov
iret
int
cdq
pop
mov
(bad)
jp
ja
sbb
inc
inc
push
in
add
push
push
mov
loopne
sub
enter
adc
add
mov
jno
dec
xor
sti
mov
or
adc
mov
gs
ror
mov
rcr
imul
shl
sbb
or
scas
rol
mov
and
clc
xor
(bad)
(bad)
mov
jb
mov
ja
loope
jmp
add
daa
fsub
sbb
dec
push
sub
mov
inc
cmp
xor
inc
dec
inc
pop
or
push
in
in
xor
sbb
mov
push
shl
xchg
pop
adc
pop
in
aam
mov
pop
fcom
pop
sbb
pop
sub
adc
and
push
pusha
and
lock
dec
xor
ins
cli
or
mov
scas
(bad)
bound
xor
and
cwde
inc
add
push
cmps
jmp
mov
and
loopne
test
xor
je
adc
shr
cmp
and
mov
lea
out
mov
adc
cmps
mov
(bad)
aaa
dec
jo
aad
sub
jo
ja
sbb
pop
xor
push
aas
xchg
mov
jae
mov
sbb
xlat
add
adc
(bad)
push
xchg
mov
add
add
jle
neg
mov
ret
js
adc
push
leave
or
in
jbe
or
add
xor
cmp
mov
arpl
jne
mov
rol
cmps
or
xchg
call
adc
sbb
xor
add
lds
pop
movs
movs
(bad)
or
icebp
lea
retf
aam
add
loopne
mov
cmp
test
pop
jnp
inc
inc
sbb
xchg
mov
mov
js
sti
lea
rcl
(bad)
lock
dec
pusha
mov
out
dec
lock
scas
jne
jne
mov
mov
mov
call
dec
jne
inc
mov
mov
sub
push
pusha
in
mov
or
cmp
dec
add
inc
or
cli
xor
gs
inc
jo
loopne
dec
clc
dec
ret
or
adc
sbb
lock
lock
test
cli
add
add
(bad)
add
inc
sub
sbb
cli
nop
or
loop
or
push
pop
call
add
shl
jae
sar
jo
inc
out
outs
repnz
rcr
mov
xor
xchg
outs
add
ins
cmp
cmp
pusha
scas
inc
mov
shr
add
cmp
lods
scas
int3
push
repnz
cmp
std
je
add
clc
(bad)
and
cmps
(bad)
push
cmp
sar
xor
push
mov
fmul
dec
add
repz
push
add
arpl
lahf
test
ins
ja
mov
or
mov
pusha
cmp
sbb
mov
sub
rcr
mov
push
sti
push
bound
add
or
push
ds
les
push
xchg
in
and
jl
es
push
int
mov
pop
lods
add
add
repz
out
xor
inc
fistp
aad
and
mov
js
or
xchg
ror
jg
and
add
and
jo
movd
ss
outs
outs
push
sub
rcr
pop
push
xor
sbb
sar
je
jns
jg
fisub
or
ret
pop
pop
add
out
add
pop
or
clc
sbb
int3
and
enter
sub
jo
push
mov
mov
jg
and
adc
add
jp
adc
or
or
cmp
jecxz
push
popa
pushw
add
arpl
jnp
pop
cmp
fld
jge
dec
pop
add
add
and
jl
and
jae
or
fcomp
in
and
mov
nop
add
push
ss
ds
cmp
imul
xor
or
popa
sub
cwde
ficom
das
push
pop
ins
inc
cmc
dec
pop
pop
add
push
push
add
fcomp
enter
stos
add
out
inc
dec
ins
imul
sbb
jo
fst
jae
or
fld
or
push
ins
mov
cwde
push
and
inc
adc
push
sub
sub
test
jg
inc
rcl
movs
pop
pop
mov
sub
pop
mov
mov
inc
xor
fwait
mov
adc
adc
pop
retf
or
or
mov
aam
jno
dec
bound
rcr
adc
iret
pop
loope
shl
fadd
push
pop
add
and
inc
or
mov
repz
test
mov
push
loop
adc
daa
push
out
or
mov
add
(bad)
and
out
and
xchg
sbb
inc
and
test
push
jns
or
sub
adc
mov
adc
adc
bound
or
outs
pop
sub
add
pop
push
or
mov
pop
sbb
addr16
or
push
cmp
out
pop
call
rol
mov
adc
push
push
push
popa
jb
popa
outs
mov
adc
movaps
ret
adc
mov
lods
test
loope
add
or
movs
dec
dec
cmp
cmp
les
shr
aam
sub
ja
in
scas
xchg
push
test
popa
dec
enter
sbb
dec
in
adc
or
test
pop
mov
aam
dec
xchg
xchg
mov
push
aas
enter
mov
pusha
sub
adc
inc
xchg
xor
sub
call
and
mov
sbb
pop
inc
sbb
inc
das
loopne
in
or
rcl
aaa
and
repz
shl
inc
cwde
xchg
adc
xchg
sbb
pop
pop
xchg
mov
sub
lods
mov
pop
mov
sbb
sub
or
adc
or
sbb
lahf
rol
mov
aaa
psubd
inc
cmps
cmp
fdiv
add
add
mov
or
add
push
pop
sbb
rol
and
xchg
sar
jmp
sub
sbb
lea
movs
add
dec
test
fiadd
adc
jge
jno
test
nop
ret
dec
pop
ja
call
fadd
mov
or
xchg
xchg
mov
(bad)
out
lea
in
cmps
xor
test
int3
mul
add
mov
jbe
sub
and
sbb
push
imul
adc
rol
shr
int
jl
idiv
and
out
inc
clc
int3
test
dec
daa
test
pop
pop
retf
btc
xor
sti
pop
lods
adc
mov
fistp
xor
adc
or
je
sar
loopne
xchg
adc
adc
jnp
add
inc
inc
mov
add
push
jle
mov
push
jmp
nop
ret
ins
arpl
mov
sbb
add
out
ror
jp
or
js
xor
lahf
push
push
fidiv
add
sub
push
mov
in
(bad)
jmp
lock
cmc
add
mov
lahf
dec
add
mov
rol
loope
push
push
add
mov
pushf
movs
scas
and
ret
iret
scas
enter
or
and
or
and
(bad)
and
icebp
jo
into
les
adc
and
adc
cmp
push
inc
sub
or
loop
push
xor
ds
das
xchg
ret
ret
ja
call
mov
mov
ret
in
call
outs
sbb
push
(bad)
adc
ss
es
cmp
dec
ins
pop
cs
mov
push
push
add
daa
adc
push
pop
shl
jge
in
pop
xchg
loopne
and
test
adc
push
nop
push
adc
sbb
add
in
and
or
xchg
adc
or
sti
adc
and
cmps
mov
fist
mov
adc
push
add
sub
xchg
add
fisttp
cmp
add
inc
cld
xchg
and
add
rcl
ret
mov
add
and
mov
cmp
adc
popa
add
(bad)
in
dec
add
push
push
adc
mov
inc
jmp
call
retf
cwde
push
lea
jge
call
add
dec
and
outs
add
jecxz
cmp
and
bound
add
xor
movs
test
movs
dec
out
xor
mov
mov
push
setl
dec
adc
dec
cmp
fcomp
in
movs
or
ret
and
inc
js
movs
in
pop
jmp
lock
jmp
mov
lods
xchg
ror
and
(bad)
push
mov
(bad)
cmp
xchg
xor
lods
pop
push
jp
sbb
adc
pop
mov
test
movs
gs
jmp
mov
pop
pushf
mov
add
sbb
adc
and
jne
add
lods
xor
dec
stc
add
rcl
adc
and
or
lods
popa
clc
shl
add
pop
out
push
add
sub
popf
add
push
lahf
pop
inc
hlt
cwde
cmp
call
jmp
sbb
xor
inc
dec
xor
jns
cmp
pop
adc
and
fs
sub
sub
loop
loope
sub
in
fsub
je
xchg
mov
loopne
rcr
push
dec
test
aaa
mov
adc
mov
xchg
addr16
push
loope
and
and
pop
loopne
add
cmp
mov
ja
jno
mov
sub
jno
or
adc
je
imul
push
int
xchg
cmp
push
push
xor
dec
sbb
fld
test
sbb
mov
add
inc
inc
arpl
xchg
or
mov
pop
sub
cmp
dec
dec
add
push
sbb
add
xlat
(bad)
pop
das
add
rol
loopne
iret
xor
jns
adc
adc
ja
push
sahf
bound
pusha
push
dec
pusha
pop
shr
pop
dec
xchg
retf
sbb
push
dec
movs
xor
push
js
movs
and
hlt
cdq
pop
pop
ret
scas
sbb
sbb
das
je
push
inc
inc
lahf
xchg
popa
push
arpl
test
rol
gs
dec
aaa
mov
pusha
aas
aas
inc
stos
dec
(bad)
imul
enterw
stos
jbe
out
fwait
icebp
cmp
or
jmp
xor
and
imul
bound
push
push
add
jae
das
adc
ss
cmps
or
(bad)
push
push
sbb
sub
iret
out
loope
in
test
pushf
xchg
inc
add
popa
mov
pop
cmp
sbb
jne
cmp
loopne
and
in
out
xchg
pop
or
inc
fsub
and
out
or
in
outs
aas
jmp
sbb
fsubr
mov
cmc
ds
jl
in
scas
push
mov
add
mov
adc
cmp
inc
and
bound
xchg
adc
jmp
sub
(bad)
cld
(bad)
call
or
mov
xor
pop
(bad)
retf
test
mov
fadd
sbb
or
adc
dec
add
data16
movs
lea
arpl
ins
push
or
ficomp
add
pop
add
inc
or
or
neg
xor
inc
add
enter
lods
jnp
adc
mov
shl
xor
push
mov
sub
adc
cld
sar
fwait
pop
or
mov
nop
mov
scas
xchg
loopne
fdiv
cmp
movs
and
ins
and
mov
pop
adc
add
je
and
mov
fcom
and
loopne
push
xchg
es
sbb
clc
or
push
fadd
push
pop
jle
or
pop
or
inc
fsub
inc
pusha
div
jmp
pop
retf
jnp
sub
or
into
pop
movntq
clc
sbb
and
sbb
add
jnp
sbb
inc
iret
cmc
mov
or
and
cmp
xor
test
sub
add
adc
fadd
cmp
in
mov
cmp
mov
sbb
add
fmul
inc
loop
sbb
inc
adc
adc
jge
repnz
mov
cs
pop
div
cmp
xchg
lea
adc
(bad)
mov
add
ins
repnz
loopne
loopne
push
hlt
push
add
call
pop
cmp
mov
movs
and
dec
jne
loopne
test
push
dec
cmc
mov
repz
jns
lock
xchg
and
sbb
rol
(bad)
ror
ins
gs
ret
in
add
loopne
repnz
xor
call
or
rcr
enter
retf
enter
std
iret
daa
add
sbb
icebp
jecxz
mov
sub
mov
sub
or
test
or
sbb
or
mul
jae
outs
adc
xchg
test
scas
dec
add
lea
sbb
hlt
adc
xor
add
cmp
mov
rcl
or
jge
add
adc
lock
push
cmp
rol
clc
repz
add
fcom
loope
and
fidiv
retf
hlt
call
icebp
hlt
shr
adc
popa
add
inc
sub
add
loopne
sub
or
xchg
rol
stc
or
movs
cmp
fs
outs
inc
cmp
ja
cmp
mov
xor
and
adc
lea
push
add
cmp
mov
sbb
or
ja
pop
loop
and
push
and
into
xor
iret
repz
fsub
repnz
inc
lods
mov
inc
adc
pushf
pop
iret
repz
sub
xor
dec
pop
add
mov
les
popa
rol
adc
imul
add
lahf
movs
mov
or
mov
jecxz
fcompp
(bad)
push
mov
lds
retf
call
out
sar
xor
pop
sub
shr
out
xlat
jo
push
and
xor
mov
jns
inc
inc
dec
lahf
test
test
pop
pop
pop
gs
iret
repz
test
adc
xor
or
jbe
jne
outs
adc
ins
fild
adc
jns
(bad)
push
jmp
movsx
cmovs
nop
mov
xchg
add
mov
test
sbb
pop
test
or
xchg
movs
lds
jle
addr16
push
adc
xor
and
add
xchg
adc
add
xor
repnz
clc
inc
sbb
add
adc
lock
pop
adc
jle
movs
in
sub
jl
fnstsw
cmp
cmp
jbe
add
and
nop
popa
dec
inc
dec
jne
jmp
addr16
es
pop
fsubr
push
(bad)
xlat
imul
adc
in
lods
nop
xor
sbb
pop
push
mov
stos
lds
xchg
test
aas
pop
and
cmp
xor
adc
push
cmp
mov
retf
jle
xchg
dec
mov
sub
push
test
add
inc
mov
jmp
or
xor
mov
push
daa
inc
and
shl
add
jp
mov
scas
and
in
mov
add
add
clc
add
push
cmp
icebp
or
imul
pusha
mov
inc
ins
popa
add
and
addr16
sbb
sbb
pop
gs
xor
outs
cmps
and
aas
add
or
cmps
and
stc
fdiv
cdq
dec
sub
adc
out
mov
xchg
imul
or
(bad)
or
push
outs
mov
adc
inc
inc
or
jb
popa
jo
cmp
(bad)
pop
add
push
sbb
push
dec
push
lods
push
sub
mov
stos
inc
dec
pop
and
cmp
mov
sbb
outs
push
push
clc
ins
gs
dec
outs
jb
jp
ins
sbb
test
xor
call
or
inc
jne
in
sbb
or
add
pop
and
sbb
and
dec
adc
push
into
xchg
ss
jns
and
adc
imul
mov
js
mov
sbb
add
rcl
xor
inc
jle
fcomp
fbstp
loope
fnsave
cmp
btr
ret
jge
add
sbb
scas
xor
or
add
enter
ins
test
mov
in
in
dec
ret
fwait
or
jae
jb
or
pop
cmps
pop
jmp
adc
mov
xor
inc
pusha
dec
mov
jae
add
arpl
call
gs
and
push
cmp
or
or
inc
and
loop
cmp
jle
sbb
sub
and
inc
xchg
mov
pop
outs
jo
or
sub
ins
push
dec
sar
mov
(bad)
int3
xor
inc
jnp
or
dec
sub
inc
cli
pop
mov
scas
daa
das
in
push
inc
add
push
iret
mov
push
sahf
or
sbb
int3
fdivr
mov
je
aam
push
push
push
pop
fs
in
add
cmp
popa
jns
imul
fwait
add
mov
shl
ins
mov
xor
loope
jo
repnz
dec
jnp
pop
enter
in
lds
stos
mov
push
jb
je
sub
jne
js
pop
add
push
mov
fisttp
fist
add
adc
mov
es
test
jae
ins
dec
lds
mov
das
xor
iret
and
inc
sbb
imul
pop
add
mov
imul
pinsrw
xchg
jg
(bad)
call
sub
dec
lahf
add
mov
xchg
mov
jo
sub
je
xor
cmp
pop
dec
adc
mov
arpl
test
ins
inc
add
xchg
xor
add
mov
popa
jnp
xchg
cmp
outs
mov
loope
add
sub
jg
xor
inc
out
dec
fsub
or
aas
mov
out
inc
ret
popa
imul
and
sub
inc
xchg
push
dec
outs
jb
popa
xchg
push
pusha
push
test
movs
adc
jne
fidiv
inc
mov
push
sub
jp
adc
adc
sbb
inc
ficom
sbb
sbb
test
cmp
imul
dec
pop
rcl
fimul
sbb
or
pop
ja
cmp
gs
push
fsubr
lea
mov
cmps
or
pop
js
add
cmps
lds
rcr
dec
mov
std
(bad)
cmp
add
stos
adc
xchg
sub
aas
out
neg
jl
push
shl
das
repnz
dec
xor
push
sbb
sbb
mov
add
xor
enter
push
popa
add
inc
not
rol
or
es
aad
xlat
push
out
inc
sub
or
push
push
inc
popa
jae
xor
inc
fist
cmp
xor
and
pop
inc
sbb
inc
(bad)
xchg
push
push
fist
or
push
pop
adc
xor
jge
sub
xchg
push
test
loope
and
dec
pop
arpl
jbe
ins
sbb
pusha
das
jbe
aas
cmp
mov
cmps
inc
cwde
push
mov
adc
fnsetpm(287
fstp
sub
loopne
add
jmp
pop
xor
sub
lea
cmp
js
iret
xor
jg
iret
in
ss
pop
mov
sub
and
sbb
fsubr
ret
ret
sub
sar
inc
js
rcr
pusha
xor
xchg
adc
push
add
in
and
daa
and
cmp
in
sbb
push
xor
je
jl
test
fcom
add
out
out
dec
leave
mov
cs
push
fadd
ficom
jl
in
adc
fisub
push
lock
popf
fwait
adc
adc
ins
aas
ins
sub
dec
dec
mov
or
les
add
and
jno
mov
cmps
shl
mov
dec
outs
xchg
nop
data16
jmp
xor
addr16
lock
push
bound
ins
outs
popa
je
mov
xor
mov
movs
jb
xor
sbb
mul
cmc
test
or
xchg
daa
jae
inc
mov
xchg
ins
add
sbb
inc
rcl
pop
pop
mov
imul
or
aas
mov
mov
ins
lds
fst
(bad)
dec
js
mov
dec
jmp
pop
movs
bound
pop
scas
(bad)
mov
xor
push
test
(bad)
cmp
pop
or
(bad)
stc
add
push
mov
lahf
cmovg
outs
dec
outs
jbe
cmp
cmp
je
outs
inc
stos
cmp
dec
stos
push
push
ficomp
xor
out
frstor
movs
pop
dec
cvtps2pd
add
xor
pop
sbb
mov
ins
xor
add
adc
sbb
shl
mov
cmp
xor
(bad)
lock
xor
shl
sahf
jge
pop
xor
mov
ins
lock
cwde
add
cwde
lock
xchg
pop
mov
inc
adc
sbb
mov
or
push
icebp
or
ss
jae
test
push
push
popf
movaps
push
or
imul
daa
inc
pop
mov
push
pushf
int3
xor
and
push
inc
cmp
or
les
xor
push
rcl
pop
arpl
mov
mov
ror
jg
jb
xchg
push
ss
jmp
ror
out
cmp
jno
aaa
push
push
cmp
jo
clc
mov
pop
pop
adc
ds
out
jge
pop
cmc
xchg
push
adc
enter
out
hlt
push
nop
hlt
push
inc
or
aaa
cmp
int3
hlt
push
out
push
scas
cmp
cmc
push
xor
movs
cmc
push
mov
xor
nop
push
shl
push
out
fisubr
jl
mov
jo
clc
fisub
enter
mov
in
mov
inc
cmp
push
adc
lods
(bad)
popa
pushf
cmp
and
dec
imul
xor
add
arpl
fs
pop
or
ja
or
push
mov
adc
push
xor
push
adc
add
adc
push
imul
ins
dec
dec
gs
add
and
out
cmp
outs
jne
inc
adc
adc
xor
jns
xlat
and
pop
fst
sbb
mov
cmp
cmp
outs
imul
pop
mov
mov
mov
rol
push
jb
mov
push
adc
or
or
cmp
xor
push
lods
and
arpl
test
inc
mov
pop
es
push
fdiv
adc
or
(bad)
cmc
jae
ds
or
fs
push
mov
mov
sub
jecxz
neg
call
ins
lea
inc
sbb
ds
push
dec
outs
fst
test
bound
outs
cmp
pop
sbb
fs
iret
aam
xor
cmp
jecxz
pop
aaa
or
push
dec
outs
jb
(bad)
pop
fist
or
jne
sub
pop
test
pop
add
dec
addr16
outs
or
repz
push
dec
mov
cmp
or
out
mov
ins
jbe
dec
outs
sbb
adc
push
jb
iret
or
aam
jns
dec
outs
mov
dec
dec
cmp
lods
cmp
xor
or
xlat
mov
jae
or
cmp
or
or
pop
mov
mov
inc
outs
sbb
in
mov
or
sbb
adc
fcom
xor
(bad)
scas
mov
and
dec
cmp
mov
es
das
or
mov
mov
pop
mov
pusha
outs
cwde
jo
inc
and
push
pop
in
in
mov
cmps
add
dec
or
and
adc
add
mov
cwde
and
inc
add
adc
push
sbb
cmp
push
inc
inc
out
lahf
or
rcr
lods
dec
push
cmp
push
and
jae
dec
push
aad
push
sub
xchg
sub
lahf
daa
inc
jo
ret
ficomp
or
push
pop
stc
add
add
inc
add
mov
popa
and
inc
add
(bad)
lock
or
ret
test
pop
or
jl
mov
test
cmps
retf
mov
out
fcomi
jnp
cmp
(bad)
sbb
xchg
add
push
adc
loop
jecxz
aam
or
mov
add
lea
out
push
jns
js
push
rcl
add
pop
aam
xor
push
mul
push
int
add
add
jbe
mov
jg
and
pop
ins
(bad)
icebp
cdq
xlat
(bad)
xchg
pushf
dec
leave
in
inc
jl
int
jg
aas
setle
push
fdivp
pop
add
dec
jae
push
div
inc
(bad)
cmp
ins
cmp
dec
loopne
push
fld
sub
push
xor
inc
(bad)
rcr
add
aad
in
xor
xchg
out
or
cwde
mov
outs
call
call
ins
or
in
mov
and
cmp
adc
dec
jle
or
pop
adc
gs
inc
(bad)
xor
popa
add
pop
call
cli
sbb
inc
push
add
fadd
pop
sub
pop
xor
add
push
inc
cwde
sbb
jnp
add
aaa
xchg
aas
or
push
push
or
pusha
inc
push
fs
cmc
sbb
in
add
inc
dec
ins
dec
xor
push
loopne
inc
add
or
xchg
cwde
sbb
fmul
push
mov
retf
xor
add
imul
imul
or
push
jmp
or
pop
dec
push
punpcklbw
cmp
les
mov
add
hlt
pop
loopne
out
add
cmp
xchg
in
push
mov
popa
fs
pushf
or
mov
xchg
es
add
and
dec
add
push
pop
inc
mov
ss
inc
push
dec
cld
adc
or
cld
and
inc
js
enter
push
adc
callw
sbb
inc
aaa
or
and
xor
mov
nop
pop
sbb
cld
and
add
adc
inc
ins
cwde
dec
test
mov
jmp
dec
pop
push
jnp
xchg
in
xchg
sbb
dec
adc
daa
and
or
sete
test
inc
call
add
add
cdq
push
ror
adc
mov
jge
pop
pop
fs
sub
or
add
inc
push
mov
mov
add
pop
test
ja
inc
mov
int
das
sub
push
push
inc
and
pop
mov
out
mov
outs
inc
mov
sub
je
add
dec
ss
and
dec
xor
(bad)
add
int
mov
out
and
jecxz
call
jne
push
lods
sbb
and
or
and
adc
or
inc
mov
addr16
push
push
ins
add
sahf
mov
adc
dec
gs
add
das
data16
inc
(bad)
push
xchg
or
push
jae
jns
add
pop
dec
popa
loope
pop
xchg
push
jne
xor
addr16
adc
cmp
fs
or
push
fiadd
sbb
jmp
jg
sbb
cmp
outs
push
outs
imul
jl
mov
daa
mov
imul
outs
inc
fidiv
mov
adc
imul
mov
lahf
vmread
ja
mov
add
push
jecxz
sub
and
iret
xor
outs
dec
ds
enter
jns
add
and
scas
adc
cmps
fsub
movs
inc
dec
pop
and
sub
loop
adc
mov
mov
xchg
movs
or
js
stos
jb
ficomp
pop
add
sbb
or
popa
cmc
inc
scas
and
rcr
fiadd
inc
sti
fs
pop
dec
jno
mov
dec
inc
inc
inc
cs
push
ja
inc
sub
gs
(bad)
pop
adc
pop
imul
mov
pop
dec
out
add
xor
push
test
inc
repz
or
xor
xor
(bad)
scas
imul
pop
xchg
adc
mov
or
dec
in
push
xlat
inc
mov
call
out
(bad)
pop
dec
clc
(bad)
push
or
jae
or
dec
dec
sub
lock
lods
dec
pop
lods
das
sub
mov
mov
inc
adc
add
pusha
adc
mov
ror
cs
pop
lds
mov
add
add
sub
nop
jae
add
xchg
pop
mov
sbb
scas
cld
mov
test
adc
pop
add
mov
add
dec
jmp
xchg
cmp
push
dec
xchg
shl
cmps
jg
jg
ins
sbb
dec
dec
sub
mov
les
inc
mov
inc
(bad)
in
shr
jg
rol
add
pusha
aad
and
dec
enter
mov
sub
inc
sbb
cmp
test
adc
cmp
push
ins
and
xchg
gs
mov
or
aas
or
inc
sbb
movs
ret
jae
or
outs
jb
inc
dec
jno
push
imul
or
push
inc
gs
dec
cmp
sbb
inc
mov
dec
add
push
xchg
adc
pop
inc
lahf
and
xchg
jl
sub
push
into
and
out
lahf
adc
cs
pop
inc
or
add
daa
in
dec
lea
mov
mov
push
scas
out
add
adc
daa
push
mov
add
push
daa
iret
inc
outs
xor
mov
push
sbb
out
adc
gs
mov
sbb
(bad)
add
jl
push
sub
jae
pusha
iret
jae
shr
mov
pop
and
ds
adc
adc
pusha
pop
jle
push
scas
inc
iret
jnp
int3
push
mov
push
enter
xchg
mov
add
add
xchg
inc
std
adc
cwde
cli
outs
or
imul
xor
lock
pop
adc
sub
push
jne
jo
jb
and
ins
shl
sbb
adc
jno
fcom
pop
jb
push
in
push
or
icebp
lods
add
dec
pop
add
push
lock
add
jne
clc
inc
xchg
aam
xchg
je
add
ds
es
das
xor
mov
call
or
add
lea
add
fild
mov
inc
or
aam
add
mov
and
inc
icebp
es
xchg
dec
cmp
dec
pop
xchg
aam
sti
dec
adc
daa
push
fbstp
mov
adc
dec
xchg
pop
add
loopne
cli
push
aaa
sbb
adc
or
mov
popf
ins
add
test
push
fwait
cmps
and
adc
sub
xchg
daa
daa
daa
lods
out
sub
stos
sbb
mov
and
loope
popa
jo
test
jmp
adc
retf
adc
jge
inc
jo
and
aas
daa
jns
add
sub
cmp
inc
and
dec
jae
loope
sub
test
and
int
cmp
sub
or
adc
sbb
mov
cmp
push
or
cs
test
out
pop
dec
lds
add
inc
push
pop
or
popa
cmp
mov
sub
ja
scas
push
dec
dec
inc
add
push
ja
scas
imul
call
xlat
shl
sbb
xchg
mov
scas
push
(bad)
cld
mov
pop
stos
jne
mov
and
jno
adc
call
ror
push
sub
or
stos
push
pop
jg
pop
mov
(bad)
lahf
push
test
(bad)
add
iret
pop
and
xchg
add
jno
add
add
arpl
add
push
adc
add
nop
nop
inc
adc
add
mov
les
loopne
add
pop
or
mov
cdq
jmp
push
ret
add
adc
xor
xchg
mov
mov
jae
clc
adc
mov
xchg
imul
mov
mov
add
shl
loop
add
or
add
jae
push
lea
imul
push
push
or
fisttp
pop
mov
and
adc
cs
in
sub
mov
les
and
mov
jnp
jecxz
add
pop
loopne
aaa
in
pop
adc
or
jle
xor
outs
jbe
add
and
inc
pop
push
outs
pop
mov
in
mov
test
adc
or
aas
pop
mov
or
jmp
fsubr
push
pop
and
pop
pop
fisttp
pop
mov
das
adc
inc
push
call
retf
int3
fmul
or
ja
or
add
add
mov
push
add
xchg
outs
mov
cmp
pop
dec
add
push
sub
ins
(bad)
push
adc
and
adc
push
or
call
xchg
dec
lods
mov
imul
push
shl
or
or
jmp
push
ror
adc
loop
pop
mov
xor
adc
push
push
lds
xchg
mov
adc
cld
mov
lahf
mov
and
or
cmp
jnp
pop
idiv
cmp
and
das
push
sbb
popa
cmp
or
sti
aas
mov
outs
pop
pop
jae
adc
or
jg
rol
push
(bad)
jmp
add
and
cli
pop
lds
xor
dec
push
adc
adc
inc
in
or
call
sub
aam
push
dec
sub
dec
aas
add
pop
and
add
imul
lock
mov
push
outs
jns
scas
and
mov
inc
call
in
add
fidiv
lds
ret
adc
or
stos
cli
mov
imul
bound
ins
xchg
je
inc
lds
mov
lds
sub
and
je
and
pusha
fisttp
or
fs
xlat
(bad)
push
inc
add
or
inc
pusha
sub
pop
push
inc
ret
lds
pop
xchg
inc
mov
rcr
and
imul
fwait
call
jae
mov
xchg
stc
or
and
neg
arpl
and
jp
add
push
push
mov
ja
mov
mov
or
and
jbe
imul
or
pop
lds
sub
push
xor
cmp
fs
mov
and
pop
les
shl
sub
mov
push
sbb
and
add
and
mov
mov
pop
sub
jmp
jl
mov
js
pop
lahf
dec
gs
cmps
inc
sub
imul
popa
pop
sbb
sub
adc
mov
data16
mov
arpl
inc
pop
pop
cwde
cli
or
mov
add
ss
and
fwait
rol
ja
addr16
jecxz
cmp
loopne
or
jne
test
dec
inc
push
adc
les
mov
jp
ret
je
adc
jne
adc
mov
outs
dec
outs
outs
aam
int
or
retf
cs
add
add
push
jmp
imul
out
add
push
mov
jno
push
popa
stos
push
jae
mov
push
jmp
js
push
(bad)
xlat
dec
mov
push
test
push
xchg
inc
std
push
cmp
pop
or
pop
jns
adc
push
dec
sbb
push
dec
mov
or
xor
add
or
jl
cmp
add
push
xor
mov
(bad)
scas
add
cmp
pop
mov
data16
scas
push
push
enter
mov
fistp
cmp
data16
adc
or
les
push
adc
pop
sub
inc
mov
daa
and
inc
movs
aas
sbb
or
or
mov
mov
add
dec
in
rcl
popf
les
scas
cvttps2pi
or
dec
dec
cmp
(bad)
fs
or
adc
cmp
xor
or
imul
ins
and
inc
(bad)
in
shl
daa
push
add
mov
inc
fs
imul
jge
lods
sub
jmp
jmp
inc
xchg
or
and
add
mov
popa
pop
loope
push
sub
dec
outs
fs
cmc
test
mov
dec
jae
pop
xchg
xlat
aam
push
push
jno
inc
in
push
jb
jno
jnp
paddw
es
jns
loope
xchg
xchg
dec
add
lea
push
add
sbb
call
rcr
jecxz
jne
or
addr16
cdq
js
inc
pop
jp
cs
mov
and
call
out
jecxz
mov
mov
retf
dec
dec
imul
xchg
jnp
or
lea
mov
hlt
jo
sub
call
push
xor
jo
fwait
or
add
loop
out
pushf
ins
inc
mov
frstor
push
imul
movs
xor
inc
inc
rol
mov
sub
cmps
comiss
test
push
and
enter
lods
fwait
das
ror
cld
jne
mov
dec
push
inc
mov
mov
in
inc
inc
cmp
xor
sub
xchg
aaa
mov
pop
ins
outs
mov
mov
mov
popa
cmp
mov
and
dec
outs
inc
adc
jmp
test
enter
push
push
mov
adc
shr
adc
movs
pop
pushf
xor
push
sub
fsubr
jp
(bad)
outs
pop
loopne
das
push
jmp
xchg
adc
ret
sub
pop
stos
xchg
lds
mov
mov
lods
clc
pop
dec
pushf
adc
adc
ins
bound
loope
ror
xor
loope
xor
ins
sub
adc
dec
outs
aaa
mov
jnp
xlat
loope
sub
or
imul
(bad)
popa
scas
xor
sub
imul
maxps
jnp
popa
push
xor
and
xor
cmc
mov
fwait
inc
ss
pop
xor
sbb
fnstenv
js
or
enter
rcr
pop
xor
pop
shr
cmp
or
inc
xor
cmc
and
ret
adc
or
inc
jo
adc
mov
dec
div
pushf
stos
adc
rcr
cmp
mov
push
add
xor
loopne
and
jmp
sar
mov
ffreep
sub
mov
push
inc
rol
jae
daa
mov
mov
add
fld
lods
popf
sub
das
xchg
jae
fbld
dec
fnstenv
pushf
adc
fsub
retf
push
ret
(bad)
popa
mov
mov
push
jecxz
xor
push
jecxz
lods
arpl
ret
mov
popa
sub
jp
in
loope
mov
inc
mov
or
sub
je
jle
pop
push
xor
icebp
or
pushf
outs
sahf
pushf
not
push
add
call
iret
pop
retf
jbe
into
leave
ins
push
setb
ds
(bad)
sti
scas
cmp
psllw
sub
aas
jp
std
or
xchg
xchg
movaps
rcr
call
inc
rsm
call
cmp
or
daa
mov
mov
push
jp
push
scas
(bad)
fld
cmp
inc
jnp
(bad)
(bad)
jg
test
sub
jl
mov
jmp
(bad)
out
jl
jbe
lods
int3
ficom
outs
(bad)
in
pop
aaa
jge
popa
and
pushf
mov
jle
sbb
outs
adc
add
add
add
add
outs
cs
add
add
mov
(bad)
(bad)
dec
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
inc
mov
mov
scas
mov
mov
(bad)
out
(bad)
in
out
(bad)
jmp
jmp
(bad)
jmp
jmp
jmp
pop
jmp
jmp
jmp
jmp
(bad)
(bad)
fdivrp
(bad)
call
cld
(bad)
fdivr
(bad)
fcmove
(bad)
fdivr
xlat
call
call
call
call
call
call
call
call
adc
iret
dec
dec
dec
jmp
push
add
mov
xlat
add
(bad)
sub
pushf
jb
cmp
pusha
push
mov
jns
data16
pushf
mov
jns
dec
jo
das
push
pusha
jo
fidivr
xor
push
call
loop
pop
push
sbb
add
out
out
push
hlt
sbb
push
push
sbb
mov
clc
int
fisttp
pop
xor
data16
push
je
fs
jl
sub
cmp
and
mov
stc
pop
sti
push
sub
push
ins
push
rol
mov
ds
adc
and
in
sbb
push
mov
sti
push
xor
shl
cmp
push
out
(bad)
jnp
shl
mov
jo
mov
push
push
test
(bad)
push
add
mov
push
enter
push
jbe
dec
int3
addr16
out
push
cmp
popa
ss
and
add
inc
jle
aad
(bad)
ret
dec
js
xor
ins
mov
sti
xchg
sub
(bad)
or
ins
add
add
push
xchg
dec
dec
ins
test
imul
and
lock
int3
or
adc
mov
repnz
je
push
movs
mov
sub
and
pop
mov
out
bound
adc
adc
add
xor
mov
pop
les
pop
pop
adc
pop
(bad)
sbb
push
add
pop
or
data16
inc
pop
mov
outs
add
xchg
adc
add
cmps
sub
jg
or
sub
mov
cmp
loope
adc
xlat
or
cmp
fcom
ret
and
mov
lock
xchg
out
jge
dec
aad
ret
push
add
mov
and
adc
xchg
mov
retf
in
jmp
test
mov
xor
sahf
xchg
dec
add
dec
outs
ins
jns
add
or
mov
jno
add
cwde
mov
adc
repz
push
add
ror
je
push
xor
inc
bound
push
jnp
sub
or
jae
and
popa
sub
inc
je
scas
xor
xchg
or
je
pop
push
std
les
xchg
je
inc
(bad)
pop
ja
xor
pop
jbe
fs
je
cld
call
pop
or
xor
jb
adc
jno
adc
add
cwde
or
or
aad
add
imul
add
push
in
xor
pop
int3
and
ss
aas
cmps
or
jecxz
arpl
lods
jg
add
inc
sub
in
jae
test
scas
cmps
xchg
out
cmp
in
xchg
pop
jp
push
add
retf
ins
add
jecxz
lods
pop
add
mov
sar
(bad)
lods
jae
shl
push
dec
test
mov
movs
and
add
loopne
leave
dec
jo
imul
popa
arpl
adc
fs
adc
mov
push
xor
xor
in
jmp
push
jae
cmp
mov
pusha
dec
dec
push
push
push
nop
cvttps2pi
scas
add
inc
add
lds
sub
lods
aaa
push
xchg
cmp
inc
popa
arpl
lods
adc
inc
jne
shl
mov
or
fst
push
stos
(bad)
adc
cmp
inc
in
ins
add
sub
push
mov
stos
add
addr16
rcl
mov
mov
adc
int3
mov
cmps
aad
adc
or
in
mov
pop
add
iret
imul
mov
ins
aas
enter
int
daa
and
adc
pop
add
or
and
loopne
jne
sub
adc
hlt
mov
push
inc
mov
pop
imul
xchg
dec
outs
popf
in
dec
push
lock
mov
cmps
aas
cwde
daa
scas
cmps
cmp
dec
call
and
push
cmp
cmp
ds
cmc
mov
dec
jo
or
push
pop
sub
add
mov
aas
fdiv
jns
sbb
push
add
add
or
retf
push
cmp
add
add
push
add
xchg
add
shl
pop
push
test
cmc
inc
lock
add
jbe
mov
mov
xor
push
cmp
in
xchg
fisttp
add
wbinvd
add
sbb
shr
mov
call
sub
mov
dec
nop
dec
jmp
add
das
adc
adc
xor
or
sbb
popf
sub
or
push
inc
test
les
or
dec
push
psrad
xchg
retf
push
imul
jbe
scas
cwde
or
enter
add
enter
mov
enter
add
enter
(bad)
out
sbb
imul
fild
test
dec
enter
outs
xchg
mov
enter
inc
imul
enter
shl
adc
xor
push
ja
ret
mov
jecxz
in
xor
inc
adc
test
push
xlat
xchg
or
inc
adc
adc
sti
push
add
mov
add
icebp
inc
std
inc
xor
dec
outs
test
or
jbe
movs
sti
push
aas
add
cdq
or
xchg
xor
inc
mov
mov
pop
lea
call
mov
or
pop
lahf
mov
add
add
dec
or
xchg
jmp
pop
(bad)
push
loopne
sbb
cs
cmp
in
or
in
fsub
nop
or
push
rcl
cmp
mov
xchg
aad
(bad)
or
test
bound
pop
rcl
add
call
dec
mov
xor
test
mov
lods
dec
mov
mov
mov
fisttp
pop
or
loopne
lock
adc
add
lods
jne
inc
or
sub
loopne
or
push
add
xor
mov
pushf
cmc
jmp
scas
jns
and
add
adc
mov
popf
inc
shl
(bad)
call
fstp
jne
cld
or
lea
push
and
ins
or
sbb
and
or
or
ss
jae
or
fcomp
ret
mov
call
imul
add
inc
loopne
mov
test
lock
pop
jmp
jnp
cmp
jl
repz
les
xchg
push
aaa
or
repz
sub
iret
enter
test
cmp
repnz
ins
cmp
mov
sbb
push
loop
not
and
aas
pop
aaa
mov
push
aaa
outs
sbb
clc
fwait
xchg
jbe
or
(bad)
jmpw
and
or
mov
or
add
pop
adc
fs
pop
mov
jo
or
nop
inc
repnz
ja
adc
inc
ins
jo
popa
inc
cmove
jb
push
cmps
mov
or
int
es
addr16
ins
sub
mov
adc
mov
xor
push
jg
pop
cmp
inc
push
imul
sub
je
xor
or
mov
loop
shl
push
or
or
and
addr16
inc
(bad)
add
aas
aas
xchg
add
lea
jne
fwait
daa
sbb
pop
inc
or
fsubr
xor
add
out
inc
mov
call
inc
fld
adc
mov
xchg
aam
mov
push
bound
push
int
aas
or
or
and
or
push
popa
xor
xor
push
jo
arpl
(bad)
in
inc
cmp
mov
(bad)
gs
in
push
jnp
bound
test
or
mov
push
xchg
jae
mov
inc
pop
imul
(bad)
test
push
pushf
shl
imul
ins
(bad)
aad
fisttp
push
je
sbb
push
(bad)
xor
add
(bad)
dec
ins
jmp
adc
xchg
aaa
std
add
call
add
daa
inc
inc
push
add
push
sahf
add
sub
or
mov
or
mov
cmp
xor
ror
ret
mov
mov
mov
jne
ror
das
dec
imul
ror
daa
aam
or
pop
adc
add
mov
pusha
shl
js
test
outs
jo
aad
mov
lds
cwde
cmps
mov
mov
and
cmp
push
cmp
jl
ror
mov
xor
sub
or
mov
movs
sar
mov
mov
mov
xor
push
pop
xchg
xor
lock
scas
push
or
sub
xor
cmp
ret
scas
or
push
mov
push
inc
push
scas
jl
push
mov
cmp
cld
cmps
scas
outs
loope
inc
cwde
fwait
ss
push
xchg
(bad)
jle
add
addr16
cmps
scas
hlt
jle
cdq
cmp
push
cwde
xor
jmp
push
ds
xchg
pop
push
push
out
jnp
bound
push
out
pop
jle
rcl
add
lods
pop
push
push
xchg
mov
stos
call
pop
xchg
adc
mov
push
test
aad
mov
loop
jno
ffree
and
loopne
daa
pop
lock
loopne
xor
sar
xchg
cwde
mov
pop
lds
lods
sets
rol
add
mov
cs
repnz
(bad)
ror
movs
sbb
pop
lods
add
loope
lock
scas
adc
call
push
sbb
rol
rol
mov
(bad)
aam
jae
add
or
cmp
imul
cdq
lock
fsubr
adc
pushf
or
push
loope
hlt
daa
in
cmps
add
call
inc
adc
jo
and
ret
jmp
sub
sub
imul
test
push
fwait
pop
push
or
rcl
jl
xor
daa
(bad)
es
push
mov
xchg
push
addr16
je
xor
dec
sbb
push
sub
sub
push
cmovbe
mov
push
jae
daa
fild
test
leave
dec
add
out
adc
adc
clc
aam
xchg
and
inc
inc
xor
(bad)
push
or
pop
gs
adc
scas
jns
and
pop
shr
adc
popf
ret
xor
sbb
inc
test
call
cmp
push
push
mov
mov
enter
xlat
inc
cmp
or
mov
dec
dec
lock
fndisi(8087
mov
push
pop
dec
fld
dec
inc
dec
ins
mov
mov
aad
mov
mov
cmp
pusha
dec
aas
pusha
adc
jo
dec
loopne
push
dec
outs
mov
pop
adc
push
imul
xor
xor
pop
out
hlt
push
dec
add
ins
xchg
or
loope
pop
push
jl
push
pop
popa
dec
sti
outs
xor
mov
and
pop
inc
dec
lods
cmps
adc
xchg
popf
test
shl
xor
and
mov
test
sti
clc
out
inc
xor
sub
add
pop
or
ja
(bad)
mov
pop
loop
fucomi
in
push
dec
mov
xor
pop
scas
cld
mov
cmpxchg
push
call
imul
imul
leave
pop
clc
(bad)
fwait
dec
loope
or
(bad)
mov
outs
mov
pop
(bad)
mov
outs
scas
jmp
iret
mov
loope
(bad)
(bad)
out
pop
sub
push
cmp
ficomp
sbb
add
dec
cdq
push
add
cmovno
aaa
ret
push
push
add
xadd
mov
adc
cmp
sub
mov
add
sahf
(bad)
test
add
add
add
jp
jp
add
mov
add
test
ins
loop
jg
cmp
push
add
add
add
add
mov
mov
mov
mov
movs
jo
(bad)
or
adc
lock
sbb
sbb
and
(bad)
call
mov
mov
mov
mov
add
push
mov
(bad)
jg
cli
dec
mov
mov
add
pop
mov
mov
mov
mov
(bad)
(bad)
call
(bad)
inc
inc
inc
inc
(bad)
mov
(bad)
mov
push
or
mov
jno
push
inc
mov
outs
sub
test
sub
adc
es
xor
cmp
mov
js
push
enter
clc
sbb
push
pop
jl
clc
dec
clc
cmp
sbb
push
mov
or
jl
push
cmps
ret
mov
push
push
in
sahf
mov
xor
ffree
test
cmps
lock
xchg
fidivr
pop
mov
push
rcl
mov
out
clc
sti
mov
inc
sub
push
les
mov
scas
push
cwde
mov
mov
or
scas
mov
or
out
and
call
cmp
repnz
movs
in
(bad)
push
out
jns
mov
outs
mov
rcl
cmp
mov
pusha
push
test
lods
xchg
not
pop
pop
js
loope
push
adc
dec
push
dec
ss
scas
push
pop
sbb
inc
test
lahf
adc
test
inc
cmps
(bad)
fwait
shl
divps
sbb
lahf
neg
add
jl
dec
inc
push
mov
push
push
push
aam
aam
or
push
push
push
scas
and
pusha
jle
ds
mov
fcom
mov
sbb
mov
mov
add
and
fcom
outs
call
push
push
imul
fs
jmp
or
jae
cs
bound
mov
add
xor
daa
or
sbb
pushf
enter
test
popa
arpl
je
popa
sub
push
dec
sub
or
addr16
ins
int3
sbb
add
push
jnp
mov
lods
mov
add
ror
fs
add
call
add
inc
inc
mov
leave
push
nop
leave
ret
out
stos
nop
push
pop
out
add
sub
mov
or
enter
ret
jae
sub
cdq
xchg
push
inc
sub
stos
or
ins
mov
inc
inc
inc
dec
dec
inc
or
mov
lds
jne
sub
sbb
push
inc
sub
fimul
repnz
icebp
je
ret
adc
push
lea
xchg
retf
mov
dec
enter
scas
(bad)
je
mov
or
mov
jb
outs
neg
pop
scas
push
xchg
daa
xor
xchg
loope
adc
gs
inc
ja
or
pusha
addr16
adc
add
aam
push
add
outs
outs
loope
mov
sbb
adc
inc
push
jmp
push
pop
shl
add
add
jge
mov
das
add
popf
mov
add
je
xchg
jecxz
sub
sahf
add
push
push
lods
mov
push
mov
push
push
sbb
test
sub
push
or
jne
rol
jl
push
or
mov
push
inc
hlt
add
jp
inc
dec
pop
sub
xchg
or
lar
in
cwde
bound
push
cdq
ds
aad
ret
ss
adc
cld
sub
inc
or
popf
sbb
push
adc
jns
lods
mov
js
xlat
shr
jmp
addr16
dec
lds
rol
es
jns
adc
push
(bad)
and
popa
sbb
pop
mov
ret
jnp
rcl
sub
adc
imul
adc
adc
pop
xor
lahf
sub
cmc
shr
aad
jl
add
lds
cs
cmp
mov
and
dec
adc
push
cld
aam
adc
ja
stos
and
int
add
push
pop
or
push
push
shl
mov
packsswb
mov
push
add
or
daa
dec
jbe
enter
(bad)
not
mov
enter
xlat
cmp
sbb
popa
or
pop
pop
test
adc
inc
inc
data16
shl
mov
fs
add
add
outs
push
or
add
clc
call
adc
sbb
xor
dec
jae
pop
sbb
xchg
cmp
sbb
pop
pushf
sub
and
push
xchg
adc
xchg
or
scas
inc
xor
or
and
test
push
mov
mov
(bad)
xor
mov
loop
inc
sub
dec
push
add
into
mov
mov
loopne
cdq
push
xchg
imul
or
sub
mov
push
push
push
std
rcl
fbstp
adc
xchg
inc
or
mov
sti
sti
(bad)
popf
cmps
adc
das
pop
sbb
cmp
mov
lds
outs
loopne
shl
cmps
push
and
les
add
jl
in
adc
mov
fdivr
sbb
or
inc
(bad)
jp
sub
mov
sar
mov
and
inc
mov
(bad)
cmp
and
in
mov
mov
push
add
out
mov
daa
add
movs
xlat
sahf
(bad)
and
iret
in
or
jns
pushf
inc
mov
leave
and
mov
ror
leave
nop
mov
ja
add
xor
cld
movs
xor
cmp
jo
adc
mov
xchg
pop
cmps
sbb
jnp
nop
add
pop
out
mov
jne
xlat
icebp
or
aaa
ja
stos
jecxz
sahf
push
ins
test
ds
movs
pushf
or
mov
dec
mov
or
jle
adc
mov
les
sets
push
jbe
daa
mov
mov
rcl
inc
loopne
icebp
out
mov
test
fmul
dec
out
fisttp
mov
add
add
out
pop
inc
push
stos
pandn
pop
or
add
adc
cmp
mov
mov
sub
mov
dec
sbb
bswap
or
dec
mov
add
data16
add
xchg
sar
mov
sub
dec
jae
jae
jo
cmp
jmp
stos
cs
(bad)
dec
clc
mov
fs
xor
sbb
fisub
fsub
ss
pop
sub
adc
adc
hlt
leave
mov
push
jle
sub
pop
or
jae
and
arpl
add
js
movsx
js
jae
movs
sbb
mov
fwait
cmp
loope
add
sub
aaa
scas
pop
int
popa
pusha
jne
pop
pop
cmps
xor
retf
stos
out
out
or
les
and
add
lahf
inc
push
adc
mov
mov
enter
jmp
cmp
jnp
cs
inc
inc
nop
or
test
lods
add
enter
mov
dec
cwde
or
enter
pop
adc
sub
pop
lods
push
stos
add
stc
push
movs
int3
xchg
pop
ins
(bad)
sub
jo
push
lock
push
mov
pusha
mov
das
pop
fild
mov
mov
or
ds
push
int3
push
mov
adc
shr
mov
mov
mov
xlat
mov
sub
outs
stos
cwde
cs
jge
mov
loope
sub
fs
pusha
movs
fild
cmp
mov
scas
cmp
jbe
jmp
adc
outs
pop
pushf
psubq
cld
adc
mov
push
test
(bad)
cmps
cmp
scas
rol
test
mov
mov
pop
pusha
and
push
sti
add
push
outs
jae
add
and
enter
and
scas
or
movs
push
jnp
and
mov
sbb
or
or
mov
jg
fsub
add
inc
dec
mov
(bad)
call
sahf
pop
push
pop
test
movs
sbb
push
enter
test
mov
pop
add
or
push
mov
(bad)
shl
xor
sub
push
cmp
and
and
shr
pop
addr16
sub
xchg
mov
ins
add
pop
outs
xchg
or
jl
xchg
push
and
xchg
cmps
mov
call
xchg
jnp
ret
or
and
mov
xlat
iret
jae
pop
mov
xchg
movs
jo
push
fisttp
push
add
or
pop
mov
lahf
add
push
out
xchg
popa
or
add
add
push
or
neg
pop
pusha
outs
fs
lock
repnz
pop
add
pop
add
add
ffreep
dec
js
std
add
add
add
inc
jns
xor
rcr
stos
inc
xchg
push
(bad)
test
push
add
and
dec
in
mov
push
and
xor
sbb
test
adc
adc
pop
add
and
or
cld
dec
inc
popa
arpl
dec
sub
mov
mov
and
xor
xor
mov
add
jns
sti
loopne
jmp
test
xor
fs
icebp
push
mov
or
cmps
icebp
inc
pop
push
jmp
pop
add
fild
inc
test
pop
dec
movs
ss
sbb
leave
mov
or
xchg
mov
push
jle
xchg
and
and
in
push
mov
dec
or
sub
sti
dec
inc
adc
mov
daa
(bad)
das
sub
sar
pop
and
add
sub
mov
dec
loope
mov
inc
mov
gs
or
clc
adc
inc
loop
imul
dec
aam
adc
or
add
(bad)
push
add
pop
push
jbe
xchg
push
dec
pushf
lock
in
xor
and
adc
cmp
ins
imul
loopne
test
daa
jl
sub
dec
mov
xor
pmuludq
mov
pop
xchg
leave
ja
and
aad
call
int3
mov
pop
inc
sub
jo
and
xor
lods
cld
popa
outs
fs
rol
in
push
dec
xor
lods
mov
pop
pop
hlt
adc
pop
icebp
and
add
pop
add
or
push
rcl
push
ds
xchg
fcomp
push
sub
data16
add
loopne
pop
das
add
out
stos
and
pop
es
sbb
iret
pop
mov
sub
cdq
imul
or
mov
ins
or
fs
clc
sbb
fs
pop
mov
add
fdiv
pop
ins
add
lods
add
xchg
mov
push
and
aad
xchg
retf
inc
add
or
pop
int
pop
fs
ret
dec
inc
jae
push
or
iret
add
add
and
push
not
in
sub
sbb
adc
ret
and
inc
sbb
cmps
jmp
hlt
iret
(bad)
adc
push
cmps
rcl
jg
mov
ss
ror
ret
shl
add
sbb
mov
add
sbb
add
nop
add
xchg
add
nop
sub
xor
push
pusha
jl
fidiv
xor
mov
and
pop
int
aad
cmp
repz
repnz
or
repz
inc
xlat
add
loop
leave
push
and
outs
jl
inc
cmp
shl
push
push
test
add
aas
push
sub
adc
jle
aam
aam
outs
push
movs
fmul
ins
aam
cmps
push
je
mov
push
xchg
idiv
push
sub
jbe
cmps
cs
sub
hlt
pop
fsub
ror
loop
adc
add
sub
push
and
add
mov
xchg
icebp
sub
pop
pop
inc
bound
cmp
jns
xchg
jg
push
das
jae
outs
mov
in
sub
aad
repz
scas
xlat
mov
inc
adc
or
inc
js
in
inc
lea
mov
mov
adc
xor
cmp
cmp
fnstenv
sahf
popa
mov
daa
ins
pop
inc
ret
pushf
pop
int
rol
je
inc
xor
enter
sub
nop
sbb
sub
scas
fild
outs
fs
loop
sti
push
jl
pop
pop
pop
lea
jne
jo
js
cmc
test
movs
je
adc
jbe
(bad)
mov
pop
cmps
fiadd
loopne
mov
leave
mov
pop
push
dec
adc
inc
adc
mov
sub
cmp
ret
hlt
pop
push
or
mov
leave
push
imul
pop
add
pop
inc
add
pop
dec
pop
lock
mov
cmp
pop
sar
inc
cwde
mov
or
pushf
iret
mov
loopne
xlat
pop
push
inc
adc
add
cld
adc
or
jae
sti
mov
mov
add
mov
adc
or
stc
stos
les
pop
outs
jmp
inc
or
inc
add
(bad)
push
sub
adc
dec
pushf
aam
mov
and
aaa
push
push
add
add
sub
imul
pop
test
jo
outs
pop
push
lock
ins
mov
cmps
test
push
daa
mov
adc
push
xor
je
das
sub
mov
lahf
sbb
cwde
test
inc
movs
cdq
dec
out
lods
and
sbb
push
gs
outs
mov
inc
dec
dec
retf
popa
ror
jl
(bad)
jno
imul
sbb
push
adc
mov
xchg
mov
imul
or
xor
or
xabort
adc
das
jno
sbb
dec
mov
jge
outs
xor
mov
aam
add
jecxz
rol
or
xor
and
or
jno
cwde
sub
pop
adc
and
scas
rcr
ror
clc
or
mov
gs
cmp
mul
pop
pop
pop
jge
adc
retf
mov
mov
ret
add
jecxz
pop
ins
sbb
xchg
ins
mov
xchg
fnstenv
imul
mov
inc
data16
loope
push
jle
cmp
inc
iret
add
test
je
xchg
adc
inc
pushf
inc
mov
jecxz
mov
or
or
js
dec
scas
dec
add
and
icebp
inc
add
mov
dec
fdivr
sbb
test
mov
dec
in
inc
add
std
push
sbb
sar
(bad)
or
das
ins
jmp
adc
lahf
mov
mov
or
jmp
adc
xlat
js
push
and
outs
adc
mov
movups
mov
jns
test
cld
add
bound
mov
xchg
call
lods
(bad)
loope
fcmovbe
push
(bad)
push
cmp
push
imul
push
mov
retf
pop
push
mov
es
or
push
xor
shld
or
or
add
mov
inc
jg
mov
inc
bound
adc
push
fs
gs
in
lock
mov
push
imul
call
fwait
add
retf
loopne
(bad)
fild
jl
stc
retf
(bad)
in
unpckhps
leave
enter
inc
fstp
xchg
call
or
push
sub
test
fwait
xchg
(bad)
cmp
lea
mov
jp
sub
test
xchg
inc
je
push
pop
jno
xor
sti
ret
add
cmp
push
jno
clts
and
add
add
jge
outs
sub
xchg
ja
sub
or
fs
xchg
out
shr
enter
xchg
mov
cwde
add
dec
inc
call
mov
add
mov
jae
add
xchg
(bad)
(bad)
aas
or
stos
ror
int
push
xchg
cmp
enter
xchg
lods
add
leave
das
ret
push
pop
enter
cwde
pop
dec
pop
cmp
dec
fdivr
mov
ss
push
rcl
stos
xor
daa
sub
lock
(bad)
adc
push
jne
or
push
sahf
fwait
ja
add
mov
movs
adc
inc
loope
sub
pop
inc
push
clc
dec
gs
sbb
jecxz
or
mov
xor
jo
pushf
and
popa
imul
(bad)
mov
add
retf
dec
(bad)
shl
mov
push
loopne
mov
popa
fs
sar
mov
retf
arpl
xchg
jne
jne
inc
add
sbb
or
or
xor
and
push
add
test
and
add
imul
add
nop
pusha
dec
cmp
jg
cmp
pop
adc
jmp
pusha
retf
jg
ffreep
dec
push
mov
(bad)
push
ret
mov
push
sbb
adc
push
lods
loope
int3
ror
dec
hlt
or
fcomp
push
jo
jmp
inc
outs
or
jp
(bad)
cmps
inc
add
xchg
ja
call
cld
inc
int
push
sar
push
cmps
stc
lods
sbb
jmp
push
and
mov
push
je
call
pop
popf
fcmovbe
sub
lods
outs
jns
js
jecxz
dec
add
or
mov
xchg
dec
mov
cmps
nop
sub
push
xchg
imul
inc
mov
mov
cmp
dec
out
sub
xor
int
mov
cmp
psubsb
into
jge
jmp
mov
(bad)
jecxz
std
adc
inc
iret
fwait
or
sub
daa
call
push
add
and
add
adc
sbb
sbb
ret
jbe
(bad)
jae
push
lods
popa
cmp
inc
jmp
add
mov
fwait
aas
add
ror
cmp
aas
add
sbb
add
or
sub
cmp
add
add
aas
or
and
(bad)
sti
adc
pop
aaa
add
pop
fld
inc
lsl
xchg
push
xor
mov
inc
push
lock
sbb
stos
pop
call
shl
push
and
cmp
retf
adc
popa
cmp
xor
adc
jp
shr
fwait
mov
mov
or
iret
xchg
jne
jl
iret
or
adc
jo
cmp
xchg
pop
push
mov
ror
sti
adc
mov
push
pop
retf
jno
dec
pop
push
retf
outs
or
and
add
or
hlt
push
push
push
add
cmp
cmp
sbb
adc
outs
fild
cmove
jmp
push
inc
(bad)
rcl
mov
(bad)
mov
pop
cld
mov
mov
xchg
out
push
dec
mov
add
je
xor
pop
sbb
cld
xor
test
imul
or
test
push
and
add
pop
es
jmp
xchg
push
sgdtd
fild
push
ret
in
inc
ss
arpl
sub
jle
mov
add
js
nop
adc
pop
rol
xchg
call
adc
mov
push
push
jo
jg
movs
push
cmp
jne
push
mov
sub
daa
test
jo
jecxz
pop
mov
dec
xor
fist
adc
mov
add
xor
call
mov
arpl
or
jne
xchg
nop
ds
inc
or
adc
fs
clc
pop
push
mov
pop
pop
and
ss
inc
es
push
dec
xor
test
adc
les
cmp
mov
aam
call
add
sbb
add
enter
rol
push
sbb
test
push
xor
lahf
(bad)
mov
sbb
adc
adc
mov
xchg
shl
(bad)
jmp
inc
retf
dec
inc
xor
div
(bad)
and
adc
in
mov
in
xchg
sub
ins
or
pop
(bad)
lods
inc
sub
mov
mov
fdiv
ret
in
inc
push
push
(bad)
imul
adc
retf
outs
sbb
seto
inc
dec
sub
sbb
push
xchg
xor
(bad)
and
daa
mov
or
add
add
mov
lods
arpl
sbb
cmp
ins
and
push
dec
push
and
mov
in
enter
xor
shl
jmp
mov
and
in
aas
hlt
popf
xor
xchg
aaa
cld
push
iret
push
dec
dec
adc
add
jmp
jl
jle
dec
rcl
mov
jne
mov
and
ja
movs
jno
sub
push
push
sub
outs
pop
mov
jg
push
mov
scas
adc
cmp
(bad)
mov
int3
das
repnz
imul
sub
outs
pop
(bad)
push
mov
popa
loopne
xlat
push
dec
add
aad
leave
in
inc
mov
mov
ins
inc
or
mov
jb
loopne
or
(bad)
loopne
and
inc
cmp
push
sar
inc
add
ds
test
pusha
mov
jmp
mov
es
fcom
xchg
std
or
movups
add
push
mov
popa
gs
xchg
pop
cmps
pop
mov
add
aam
lock
add
dec
or
xor
push
sbb
pop
(bad)
add
jb
mov
dec
sar
add
out
dec
or
mov
cmp
jl
pop
add
movs
xlat
pop
pop
cmp
mov
cld
retf
mov
mov
push
or
mov
repnz
add
xor
xor
pop
mov
das
mov
inc
add
add
pop
loope
jecxz
add
xlat
call
(bad)
hlt
or
cli
sbb
mov
mov
pop
lahf
mov
scas
push
xchg
movs
pop
inc
pop
add
inc
xor
push
shr
mov
hlt
xchg
push
add
sub
adc
rcr
fistp
inc
dec
jne
pop
mov
mov
js
icebp
pop
xchg
dec
dec
jne
repz
or
cmp
cmp
fdiv
add
lods
es
mov
xchg
add
adc
std
adc
or
push
dec
and
test
lods
daa
inc
test
rol
pop
nop
jo
push
mov
jge
push
inc
push
xchg
test
or
push
loop
push
dec
jnp
dec
sbb
sbb
fiadd
mov
push
add
xchg
nop
shr
xor
xor
inc
pop
(bad)
daa
inc
inc
mov
into
(bad)
loope
add
scas
dec
and
outs
sbb
nop
ins
add
scas
(bad)
sbb
push
mov
call
shl
(bad)
(bad)
js
fiadd
cmp
je
sub
popa
je
into
or
je
jmp
fcmove
repnz
shr
je
and
adc
mov
add
call
test
xchg
aas
mov
or
cld
test
inc
sbb
adc
or
outs
xor
adc
cwde
jmp
cmp
ret
add
ret
mov
pushf
or
inc
jp
adc
mov
add
dec
inc
add
adc
test
ret
sbb
jp
mov
ss
cld
lock
rcl
icebp
pop
cmp
pop
push
(bad)
sbb
shr
adc
xor
out
push
mov
adc
repz
dec
cmp
mov
fadd
xchg
test
mov
mov
jmp
ror
sbb
xchg
mov
and
add
ins
cld
add
xchg
inc
adc
adc
and
jo
cmp
xchg
or
fs
push
xor
push
aam
mov
add
call
sub
(bad)
mov
mov
add
shl
cmp
cwde
inc
loopne
or
or
iret
adc
mov
test
adc
mov
sbb
in
inc
test
and
sbb
adc
inc
adc
ss
xor
lea
add
js
ret
cmp
mov
jbe
sub
dec
popa
mov
(bad)
dec
mov
clc
add
or
arpl
outs
or
je
jg
pop
and
dec
call
retf
xor
cmp
movzx
mov
shl
jg
sbb
lea
lea
pop
or
imul
inc
add
or
sbb
test
add
adc
and
(bad)
pop
out
inc
mov
adc
xor
shl
gs
aad
adc
lock
sbb
add
mov
xchg
jecxz
loop
cmp
jno
push
mov
or
and
lods
loope
test
or
sub
push
sub
xchg
mov
dec
and
inc
inc
ds
dec
pushf
xchg
in
or
adc
nop
lock
sahf
add
enter
jmp
inc
dec
inc
out
adc
cmp
lea
cmps
jne
pop
daa
cmp
rcl
push
cmps
adc
mov
das
pop
(bad)
aas
xchg
pop
or
jae
xchg
cmps
jp
cmps
inc
imul
movs
(bad)
clc
add
or
jecxz
fs
adc
(bad)
sbb
pop
adc
jmp
cmp
jne
into
mov
fs
push
test
adc
add
(bad)
inc
or
inc
adc
pop
mov
shl
pop
in
push
movs
loopne
adc
or
mov
jne
and
shl
ret
cmps
imul
or
sub
push
call
inc
add
dec
scas
sbb
scas
adc
jmp
dec
stc
je
sub
ftst
sub
lods
inc
cmp
push
and
mov
hlt
mov
pop
ss
sbb
jae
int3
je
push
clc
inc
and
inc
xor
sbb
push
add
push
or
xlat
ret
je
mov
mov
dec
add
je
and
cmp
clc
out
mov
je
mov
je
call
idiv
(bad)
popa
jmp
clc
push
or
and
push
xchg
sub
mov
sbb
inc
inc
and
jno
(bad)
fdiv
rol
xchg
cmp
(bad)
jmp
adc
add
jg
jge
xchg
xor
or
sbb
and
adc
scas
xor
dec
xlat
sub
push
or
cmp
lock
adc
add
popf
fwait
inc
push
test
jo
inc
in
pop
loop
or
fcomp
rcl
pop
sbb
nop
push
mov
retf
popf
inc
loopne
pop
inc
in
push
cmp
fadd
xor
enter
dec
push
push
add
loopne
imul
pop
inc
sahf
add
xchg
sbb
inc
and
adc
into
jle
cmp
or
cmovne
pop
into
adc
aas
or
inc
xchg
or
test
and
popa
push
add
div
jne
xor
daa
mov
mov
inc
jne
and
mov
ret
mov
and
sub
sbb
mov
push
(bad)
sbb
cld
pop
add
imul
push
dec
hlt
mov
lock
ror
cmp
cmps
add
shr
mov
test
push
imul
fld
dec
inc
movs
dec
fld
jp
sub
jl
loopne
arpl
mov
jns
add
into
mov
xor
sbb
inc
add
xor
loopne
pmuludq
push
in
push
jecxz
or
jmp
sub
test
jne
dec
mov
push
adc
das
dec
push
mov
rcl
add
push
jb
test
mov
push
lods
or
push
ret
imul
mov
push
fst
mov
fnsave
shr
or
cmps
xchg
mov
cmp
rol
push
xchg
push
je
call
cmp
aam
adc
mov
sbb
adc
ins
bound
mov
aas
and
jnp
mov
std
xor
(bad)
hlt
sub
xchg
pop
rcl
fistp
and
push
je
(bad)
sbb
pop
inc
bound
les
repz
nop
bound
cmp
addr16
fist
mov
add
sub
mov
add
mov
sub
pop
and
mov
inc
mov
pop
sbb
or
in
test
mov
je
xchg
xlat
sbb
or
test
int3
(bad)
or
ss
add
jbe
ins
jmp
xchg
push
sbb
add
pop
push
dec
push
into
loopne
(bad)
xor
and
or
mov
jmp
aam
mov
pop
movs
push
add
bound
mov
nop
popa
ins
inc
rcl
ret
je
lea
xlat
fist
push
nop
jge
neg
sbb
mov
xchg
xchg
sbb
add
shr
lock
mov
inc
popa
and
cmp
(bad)
cs
adc
mov
ss
minps
sar
mov
stos
pop
and
mov
pushfw
mov
jo
mov
inc
test
in
loopne
iret
cmp
jns
fld
pusha
mov
mov
add
jmp
scas
ins
mov
loopne
outs
mov
lea
adc
dec
adc
pop
fstp
inc
pop
ss
or
sbb
push
mov
pcmpeqb
sbb
adc
cli
ins
int
adc
cmp
push
add
xor
inc
and
sub
js
xchg
adc
rol
mov
xchg
push
(bad)
push
pop
gs
ret
ret
push
loope
out
fcmovnb
pop
adc
aaa
mov
or
imul
cld
pop
cmp
xchg
stos
push
dec
mov
mov
sub
test
jle
mov
sub
mov
fild
add
stos
pushf
(bad)
lock
sub
xchg
out
hlt
dec
sub
inc
push
add
sbb
jle
jle
mov
loopne
jmp
pop
xor
inc
or
cli
xor
in
xchg
jne
adc
mov
add
sbb
cmps
je
cmp
cdq
jmp
sub
icebp
sbb
mov
inc
dec
or
and
jbe
add
jno
add
mov
pop
enter
(bad)
cli
in
ds
add
ror
pop
fisub
mov
rol
ds
or
jne
adc
push
imul
xchg
fdiv
test
pushf
iret
xor
outs
fbstp
sub
in
stc
sbb
mov
int3
or
lahf
imul
pop
clc
out
pusha
cmp
dec
push
mov
shr
add
jecxz
cmp
sub
iret
xor
jne
lods
les
into
xor
inc
ret
or
or
es
pop
dec
fadd
jae
repnz
fcomp
sbb
sti
dec
inc
add
jo
add
mov
xchg
and
outs
push
add
pop
add
sti
hlt
and
(bad)
cld
adc
gs
push
add
scas
jo
xor
loopne
xor
test
cmp
push
pop
jne
mov
jo
mov
add
in
add
and
push
into
icebp
push
in
adc
or
push
and
add
mov
pop
push
mov
fild
xor
out
mov
add
fwait
cld
add
daa
movs
repz
das
aas
mov
adc
mov
add
dec
ds
mov
and
clc
mov
sbb
xor
sbb
movs
(bad)
mov
sbb
add
dec
push
mov
sti
or
jmp
and
clc
sbb
and
mov
push
or
add
adc
sbb
xchg
sub
mul
sub
scas
xor
pop
outs
je
jp
bound
faddp
xor
popf
hlt
push
pop
push
cdq
cmp
inc
sbb
clc
add
mov
nop
or
jmp
and
in
js
and
daa
lea
mov
pop
jle
out
(bad)
test
jne
mov
mov
adc
rcr
or
sub
test
xchg
in
xor
sub
imul
retf
mov
and
in
in
push
sbb
clc
clc
arpl
out
sub
in
pop
jecxz
sub
es
inc
push
daa
push
fnstenv
xor
sbb
ins
shl
push
jae
inc
mov
push
cmc
adc
daa
jmp
daa
adc
xor
or
push
jecxz
popa
xor
inc
mov
jne
mov
popf
xor
mov
dec
out
(bad)
scas
ficom
jg
cmp
xor
imul
mov
mov
ja
push
sbb
and
add
fisttp
cmp
adc
push
add
xor
sub
sbb
dec
fdivr
out
dec
mov
mov
sub
fld
sbb
cmc
xor
ret
mov
cmp
add
pop
xchg
pop
stc
adc
not
add
sub
push
or
les
lock
pop
sub
int3
mov
adc
pop
clc
fidivr
ins
inc
mov
add
sbb
in
cmp
rol
shl
mov
jnp
adc
push
jmp
addr16
push
add
dec
jne
sub
shl
cmc
cmp
jne
dec
mov
cmp
(bad)
je
jmp
jns
or
jg
lock
(bad)
cmp
pop
inc
dec
sbb
jno
cmps
shl
ss
jno
fstp
pop
pop
gs
imul
stos
dec
push
test
and
addr16
nop
sbb
push
out
movs
ret
fistp
ds
push
xchg
jne
jmp
push
js
add
nop
sbb
push
push
inc
and
(bad)
cwde
add
add
mov
fcompp
lea
cmps
sub
cmp
mov
(bad)
loopne
ret
addr16
push
icebp
pop
cmp
or
loopne
sbb
mov
dec
or
nop
mov
je
and
mov
mov
add
adc
retf
test
add
pop
add
mov
pop
aaa
cmp
(bad)
jo
jae
je
jge
mov
das
pushf
pusha
pop
fmul
loope
scas
dec
pusha
add
dec
or
inc
and
xor
(bad)
sub
cmp
sub
and
push
repnz
push
or
pop
rcr
ins
adc
or
or
push
adc
aad
outs
lea
outs
dec
je
in
dec
loopne
add
jmp
cmp
je
cld
test
jbe
dec
mov
jae
cld
jae
sbb
dec
and
adc
das
ss
adc
adc
jbe
cmp
inc
mov
je
push
add
or
mov
(bad)
push
push
mov
pop
cmps
adc
dec
mov
or
dec
in
imul
inc
adc
add
inc
pop
jns
es
add
push
jge
cmps
cmp
add
aas
xor
add
(bad)
xor
add
mov
and
adc
dec
inc
mov
ret
mov
data16
hlt
fadd
clc
mov
fild
sbb
rep
dec
add
ret
scas
not
bound
add
wbinvd
mov
inc
in
or
xlat
outs
hlt
and
rcr
sbb
pop
sbb
jo
(bad)
adc
push
ins
loop
push
xor
jne
or
add
lock
or
mov
cld
mov
lahf
mov
les
inc
jno
bound
ja
jbe
cmp
or
ja
nop
push
fimul
ret
xchg
test
cwde
add
add
adc
pop
cld
mov
cmp
sbb
mov
push
adc
fadd
sbb
mov
daa
clc
cmp
adc
mov
push
inc
jnp
sar
arpl
ror
cs
repz
and
loope
(bad)
mov
pop
pop
pop
sub
sub
add
inc
xchg
stos
mov
and
aaa
imul
add
pop
out
dec
sub
jge
fist
js
mov
push
or
adc
jne
jnp
loope
sbb
adc
cmp
adc
js
add
(bad)
cmp
jne
and
xchg
sti
jne
xor
xor
cmp
or
test
repz
pop
aas
test
mov
or
add
or
pop
ret
pop
pop
inc
xchg
(bad)
xor
pop
movlhps
dec
sbb
mov
pop
adc
mov
addr16
or
cwde
add
add
sti
sti
mov
imul
inc
jae
retf
dec
loopne
inc
dec
mov
iret
fadd
add
push
sbb
sbb
retf
adc
xor
mov
mov
push
push
push
push
loop
mov
push
jo
xor
jmp
mov
mov
or
hlt
test
mov
ror
sub
mov
lods
cmp
(bad)
push
loopne
adc
mov
cs
push
push
add
out
push
mov
add
push
pop
sub
mov
xchg
lea
fcomp
clc
pop
ret
rol
push
pop
mov
mov
and
pop
mov
add
jle
sar
mov
adc
adc
mov
nop
inc
test
sbb
retf
ret
and
dec
sar
or
inc
js
lds
mov
loopne
inc
(bad)
ss
fwait
shr
je
sbb
pusha
lods
retf
repz
loopne
xchg
test
in
or
or
xchg
out
pop
jmp
mov
or
mov
sub
jb
push
sbb
and
clc
in
cmps
push
cmp
or
ret
into
and
ret
add
cmp
sbb
adc
cmp
or
mov
push
test
fmul
adc
shl
or
pop
xor
adc
or
cmp
inc
call
and
cmps
(bad)
cmps
movs
mov
jno
xchg
pop
popf
leave
add
mov
add
js
sbb
add
adc
sbb
mov
std
(bad)
cmp
push
sbb
and
test
jne
in
and
add
je
adc
mov
adc
and
push
jne
sti
sar
pop
jne
mov
je
sub
in
pop
ss
and
pop
mov
ret
loop
xor
sbb
adc
ins
mov
add
fadd
mov
adc
jmp
or
and
ins
sub
pushf
fimul
or
(bad)
aaa
adc
push
mov
pusha
mov
push
test
arpl
push
inc
rcr
or
icebp
sbb
and
push
fisubr
je
cmp
xor
mov
pop
mov
or
pop
dec
je
push
cmp
inc
xchg
retf
ds
cld
cmp
adc
adc
xor
sbb
add
push
mov
mov
or
bound
cmp
rcl
ja
repnz
add
add
inc
xchg
jo
and
mov
pusha
pop
pop
outs
mov
mov
xchg
es
push
scas
sub
cld
cli
adc
test
sbb
add
imul
ror
mov
(bad)
jmp
or
mov
add
push
test
or
seto
or
test
xor
pop
push
pop
pop
ror
fwait
outs
xchg
and
jp
icebp
rcr
cld
popa
pop
push
and
dec
sti
mov
xor
clc
sub
and
cmp
fs
(bad)
push
and
sub
pop
adc
rol
clc
or
js
dec
inc
or
xchg
and
cmp
mov
dec
mov
fs
pop
cmp
mov
jmp
test
cmp
xchg
mov
sti
push
adc
mov
sub
setb
push
add
rcl
das
fdivr
adc
cmp
jne
xor
sub
jle
ret
adc
sbb
(bad)
hlt
sbb
xchg
push
mov
mov
fwait
cmp
inc
cwde
jne
inc
mov
cli
xchg
jecxz
pop
or
std
add
je
jp
inc
cwde
(bad)
push
out
or
das
adc
xchg
movs
mov
pop
cli
adc
gs
adc
jmp
dec
jecxz
fs
push
imul
dec
mov
sub
repnz
mov
inc
aad
sub
mov
mov
xor
sub
push
xor
(bad)
jae
adc
sub
or
stos
enter
inc
ret
mov
aas
fisttp
les
ins
sbb
cmp
push
jne
or
in
test
rcr
add
mov
cs
movs
mov
clc
mov
les
mov
mov
and
call
aad
and
pop
push
add
lock
xchg
push
test
mov
pushf
cmp
shr
ror
fdiv
push
test
je
or
je
adc
outs
aam
dec
mov
fwait
cmp
mov
je
xchg
mov
or
enter
dec
mov
shr
or
mov
out
or
mov
lock
jb
mov
mov
stos
rol
std
ja
fistp
cmp
adc
sahf
inc
scas
dec
push
mov
add
pop
inc
or
add
movs
rcl
xor
outs
outs
xchg
and
iret
mov
add
fwait
nop
test
fldcw
mov
int
pop
lods
mov
fistp
outs
or
pop
or
mov
call
and
loopne
gs
sbb
or
and
dec
add
test
dec
imul
sbb
push
fwait
push
pop
cmp
mov
dec
add
sbb
push
fldenv
movs
je
or
sub
mov
cwde
jp
jnp
addr16
dec
(bad)
das
gs
mov
test
ret
imul
popf
and
sbb
sub
sbb
mov
or
or
or
cmc
sbb
pusha
es
rcr
rcl
pop
pop
xchg
adc
jecxz
mov
lds
add
mov
(bad)
cmp
hlt
add
js
adc
add
and
inc
pop
std
lods
pop
(bad)
xor
pop
push
mov
test
mov
je
lahf
sbb
inc
pop
add
test
inc
jg
repz
int3
push
std
add
popa
and
out
push
stos
push
or
loop
add
add
push
mov
sbb
sub
dec
xchg
or
inc
inc
sub
lds
sub
mov
aad
fisub
add
push
xor
xchg
loopne
dec
sti
lea
inc
adc
call
pusha
clc
cli
mov
addr16
mov
dec
adc
pop
pop
aaa
jg
cmp
sbb
dec
mov
test
lods
das
xor
dec
add
inc
rol
jp
je
test
add
add
ror
inc
ror
pusha
lock
inc
and
test
fstp
push
add
add
arpl
push
add
or
pop
aaa
or
mov
and
pusha
push
add
add
jmp
fist
xchg
add
or
test
jbe
or
push
push
mov
sub
or
test
repnz
test
or
xor
fmul
shl
pop
pop
test
or
pop
adc
lock
add
scas
mov
and
pop
sbb
hlt
ret
pop
inc
jg
and
push
sub
dec
add
add
and
clc
ja
adc
inc
popf
or
ss
add
jne
push
test
and
mov
or
inc
mov
add
and
je
sub
pusha
adc
xchg
xor
ss
cmp
mov
es
push
mov
cmp
add
aaa
outs
pop
cmp
mov
outs
cmp
add
cld
xchg
or
je
mov
jmp
jecxz
sbb
cmp
adc
push
push
ja
lock
add
push
hlt
add
add
je
popa
inc
fadd
adc
es
xchg
pop
add
pop
pop
mov
pop
ja
sub
test
pop
adc
je
test
retf
in
add
fstp
test
cmps
aaa
xchg
inc
daa
push
pop
sbb
js
cmc
test
or
loope
pop
dec
inc
test
not
mov
xor
adc
sbb
adc
inc
lds
push
cmp
pop
cmp
test
je
mov
mov
adc
shl
mov
push
lea
sub
aaa
add
cmps
or
sahf
cmp
pushf
mov
out
mov
pop
daa
mov
pop
test
loopne
xchg
pop
das
out
or
test
je
add
sub
cmp
pushf
adc
push
push
mov
jecxz
adc
or
push
fist
sub
clc
into
(bad)
pop
test
sbb
push
loopne
js
arpl
add
adc
add
push
dec
cmp
pop
fs
lock
stc
cmc
in
aaa
les
pop
mov
push
loop
lds
add
inc
dec
xchg
rcl
in
cmp
cmp
jb
ror
(bad)
lahf
sbb
inc
int3
cmp
mov
inc
adc
push
out
ins
pop
test
dec
pop
xchg
cmp
push
stos
int
imul
push
into
or
mov
(bad)
lahf
cmp
pop
rcl
add
clc
fcom
sbb
add
push
mov
aad
push
mov
inc
jo
mov
and
daa
pop
mov
push
and
sahf
mov
ins
nop
mov
sti
or
cmp
xchg
adc
pop
mov
lock
xor
pop
cli
fdiv
add
xchg
push
nop
retf
stc
mov
das
ficomp
in
lea
inc
in
sub
jle
xchg
xchg
push
mov
shr
inc
stos
xchg
cwde
add
jno
or
adc
adc
pop
jecxz
popa
sti
adc
pop
lea
and
cld
lahf
rcr
jno
adc
inc
mov
iret
not
add
push
push
je
cmp
pop
cmps
neg
je
or
imul
aaa
xor
ins
push
xchg
pop
cmp
or
jl
and
cmp
jbe
int3
xor
or
nop
push
addr16
sbb
push
add
mov
jmp
sbb
cmp
shufps
mov
and
call
fwait
and
test
je
mov
imul
push
jl
inc
mov
sbb
es
mov
and
js
push
je
adc
add
and
ins
(bad)
cmp
adc
scas
push
jb
jb
dec
jb
cmp
xor
sbb
adc
out
outs
and
pop
(bad)
hlt
cmp
and
aas
sub
cld
cmp
lods
fcom
lds
leave
adc
push
jge
push
mov
xor
sub
repnz
out
cwde
add
popa
aad
je
lock
or
push
retf
test
retf
jg
bound
(bad)
je
mov
xchg
jo
mov
int
inc
jno
xchg
mov
shr
add
adc
rcr
(bad)
dec
test
sbb
xchg
or
or
leave
je
xchg
xchg
lahf
push
nop
adc
inc
adc
mov
mov
daa
jmp
cmp
je
and
push
push
ror
leave
sub
mov
retf
bswap
jle
loopne
sub
int3
and
test
int
xchg
adc
mov
cmp
loope
add
ror
sti
inc
cmp
lea
fdivr
js
mov
das
movs
in
pop
rol
add
dec
aaa
sbb
adc
sbb
dec
push
sub
pusha
and
ins
retf
pop
dec
mov
loopne
push
add
xor
shr
sbb
xchg
icebp
ret
adc
leave
push
adc
mov
mov
pop
xchg
mov
or
call
adc
jne
popa
add
xchg
mov
jne
mov
ror
push
(bad)
clc
mov
hlt
add
cmc
jo
mov
inc
aas
push
push
or
ss
fcomp
rol
popa
xchg
xor
mov
mov
daa
ins
or
bound
out
data16
inc
inc
add
pop
daa
movzx
push
ins
pop
mov
adc
out
iret
pop
rcr
std
push
mov
jge
add
cmp
fmul
inc
mov
push
push
les
(bad)
shl
sbb
adc
or
ret
jne
jmp
cmp
pop
cmp
sub
je
add
mov
mov
test
cli
mov
push
not
adc
mov
test
add
adc
and
inc
sbb
outs
inc
sbb
adc
fmul
js
jne
adc
pusha
pop
dec
push
cmps
add
push
cmp
cwde
(bad)
sbb
enter
mov
mov
test
mov
inc
clc
and
sub
xchg
and
add
loope
push
stos
pop
cld
mov
js
call
and
jp
add
xchg
fcom
clc
mov
and
adc
fldcw
mov
mov
adc
lock
xchg
mov
sub
jp
mov
jno
jne
jb
mov
das
add
push
mov
jb
mov
adc
dec
or
cmp
add
pop
mov
clc
pop
dec
loope
cmp
loopne
hlt
popa
pop
imul
test
(bad)
mov
and
mov
adc
pop
adc
adc
pop
or
or
sub
in
in
jne
pop
test
xor
mov
int
mov
js
pop
inc
ds
pop
imul
or
add
add
or
or
jle
jecxz
inc
xor
mov
fsub
inc
push
fisttp
in
div
cmp
add
loope
push
jmp
and
add
movzx
inc
cmps
sub
int
add
in
dec
(bad)
jns
nop
ja
jmp
push
in
call
cmp
inc
push
adc
adc
add
add
out
cwde
ror
adc
push
mov
sbb
cwde
inc
imul
add
call
adc
adc
jne
ds
fist
clc
adc
push
call
aaa
cmp
adc
dec
sub
adc
daa
enter
mov
into
and
dec
lea
jmp
jne
pop
pop
or
ds
(bad)
cmp
add
mov
lea
dec
add
and
inc
adc
mov
add
mov
fdiv
dec
js
sbb
and
or
add
xchg
pusha
add
lock
dec
push
push
inc
mov
or
or
in
or
pop
add
lods
ins
push
or
xchg
add
sbb
call
push
xchg
push
push
push
call
adc
inc
pop
dec
adc
dec
or
(bad)
loopne
mov
xor
or
pop
pop
movs
add
scas
icebp
jle
inc
mov
(bad)
cmp
retf
sub
adc
repz
pop
jp
push
pop
push
inc
jge
rcr
jne
add
ss
aaa
fs
inc
repnz
sub
jo
enter
das
inc
pop
je
call
sub
fdivr
lea
mov
pushf
loop
pop
fist
jnp
jmp
sub
(bad)
test
mov
xor
(bad)
lea
xchg
xchg
xor
bound
loopne
jge
pop
xchg
pop
push
adc
or
test
jmp
or
pop
fwait
pop
dec
mov
xor
or
xchg
bound
jb
fs
fadd
push
cs
dec
sti
push
movs
inc
loope
in
sti
into
push
ret
pop
and
add
(bad)
fsubr
jns
inc
fsubrp
or
dec
cdq
jmp
push
and
outs
sbb
or
xchg
aaa
push
arpl
and
or
aaa
add
mov
dec
bound
(bad)
in
sub
sub
sub
cmp
(bad)
mov
dec
add
inc
cld
(bad)
cmp
(bad)
aaa
mov
sub
adc
cs
push
jg
xor
pop
inc
mov
pop
in
pop
sbb
xchg
push
jl
push
xchg
int
fisubr
jns
leave
jge
jb
enter
mov
sbb
adc
inc
cmp
xchg
mov
add
clc
xchg
sbb
adc
cmp
fsubr
test
inc
dec
pop
push
lock
jle
add
add
pop
and
js
add
js
add
xchg
fstp
push
lea
clc
adc
inc
or
or
in
and
inc
movs
pop
adc
fistp
sub
xor
or
fiadd
xor
retf
and
xor
shr
rcl
jne
xor
adc
jnp
sub
add
mov
push
push
ins
xchg
cmps
add
fdivr
inc
push
xchg
ins
xchg
fs
bound
shl
sbb
sbb
mov
aam
jmp
add
aas
and
mov
ja
and
add
test
mov
arpl
pop
(bad)
cwde
lea
cdq
xor
aad
xchg
xchg
sti
ror
or
sbb
test
inc
mov
movs
push
loope
pop
je
mov
in
fild
popa
and
or
inc
cmp
xor
mov
adc
outs
add
js
rol
pushf
stos
pop
adc
cld
mov
push
popf
mov
pop
stos
ja
test
in
push
xchg
jle
pusha
mov
push
xchg
in
cmp
dec
ins
sbb
cmp
add
ds
lock
out
adc
sub
ins
jo
test
imul
push
rol
add
dec
xchg
aam
mov
call
mov
mov
pusha
mov
hlt
mov
mov
mov
mov
inc
fsubp
imul
movs
push
inc
call
cmp
fisttp
push
mov
bound
xchg
adc
sbb
or
fcom
aam
push
sub
ins
cs
xor
and
lock
loopne
adc
or
xor
idiv
pop
xchg
cwde
ins
cmps
test
je
add
sub
jae
mov
mov
mov
inc
mov
jbe
or
mov
or
mov
and
xchg
cmp
fdiv
and
ret
and
mov
xchg
retf
clc
mov
adc
add
push
test
mov
cdq
int3
out
dec
push
popa
sahf
fild
addr16
xor
xor
pop
push
adc
mov
push
stos
add
adc
lock
jmp
inc
xor
jbe
adc
xor
add
sub
jne
add
xchg
inc
dec
dec
or
or
add
or
fmul
push
add
dec
cmp
popa
adc
pop
or
or
pop
rcr
sub
pop
in
jle
sub
jge
jecxz
sub
jmp
mov
or
add
out
mov
jge
xor
sbb
out
sub
and
sbb
mov
and
xor
or
add
xchg
(bad)
inc
inc
pop
push
xor
jmp
cmc
push
jp
mov
or
lock
xor
mov
xchg
je
sub
dec
add
pop
shl
pop
mov
adc
outs
jmp
popf
inc
cmp
add
mov
add
inc
stc
fisubr
pop
inc
add
inc
or
ins
out
mov
add
pop
shr
xchg
sbb
or
and
push
cmp
fwait
sub
data16
pop
pusha
sub
test
mov
hlt
(bad)
int3
out
push
sahf
add
mov
test
repnz
add
jb
(bad)
call
ja
outs
jb
add
(bad)
(bad)
fimul
jb
cmp
mov
(bad)
je
xchg
xor
sub
sub
adc
(bad)
leave
sbb
cmp
imul
xor
sub
inc
cdq
ret
or
fadd
push
les
add
and
inc
loop
pop
push
push
and
movs
int
add
and
test
scas
pop
mov
in
(bad)
retf
jno
ins
sbb
add
and
mov
outs
aaa
mov
aam
test
mov
mov
je
adc
jge
sbb
clc
and
mov
mov
stc
or
xlat
cwde
mov
push
ror
inc
inc
xor
pop
pusha
outs
xchg
out
shl
inc
sub
add
outs
jns
and
int3
scas
mov
jp
pop
add
icebp
das
dec
adc
cmp
or
(bad)
jge
sub
dec
add
jmp
mov
cmp
jb
sbb
mov
push
xchg
(bad)
scas
or
inc
sbb
pop
lea
jp
sub
ret
xchg
nop
and
xor
push
test
sub
jge
in
or
dec
and
cmp
push
push
dec
add
pop
cld
mov
adc
hlt
adc
sbb
jecxz
in
stc
adc
(bad)
add
je
dec
push
mov
mov
cmp
add
inc
add
cdq
mov
(bad)
sbb
add
dec
hlt
movs
add
shl
mov
sub
lock
popa
es
pop
or
and
add
add
mov
fadd
inc
pop
mov
enter
inc
and
mov
sbb
inc
jo
in
xchg
cmc
mov
imul
xchg
int3
pusha
sbb
adc
and
fcom
inc
jo
and
in
pop
ret
cmp
push
sbb
dec
dec
push
sti
add
int
push
gs
pop
fistp
or
aas
(bad)
mov
push
inc
and
pop
pushf
jne
mov
sbb
neg
sbb
jae
add
es
xor
push
cdq
inc
push
bound
mov
and
hlt
pop
ret
in
cmp
mov
and
add
in
lods
dec
and
jl
xor
dec
jnp
mov
cmp
mov
in
or
add
push
imul
or
push
xor
pop
shr
push
scas
add
xor
adc
pop
out
add
pop
mov
push
xor
(bad)
xor
add
mov
test
ins
pop
xor
jmp
mov
mov
shr
test
enter
add
fdivr
xchg
sbb
lock
xchg
sbb
sbb
mov
xor
inc
aam
out
push
mov
push
or
dec
sbb
push
and
push
push
jbe
or
rcl
mov
dec
scas
fnsave
add
dec
or
cmp
jnp
or
retf
xor
add
dec
push
dec
ins
(bad)
ss
push
push
ins
into
hlt
and
and
pop
shl
stos
and
cmp
aam
mov
xor
sbb
adc
and
dec
pop
jecxz
lock
push
mov
sbb
sbb
push
mov
add
dec
fild
sub
add
pop
rcl
das
push
out
rol
pop
jb
and
or
mov
jno
dec
paddb
and
shr
xor
inc
pop
imul
jle
mov
sbb
scas
inc
cmp
in
dec
mov
or
mov
add
adc
cmp
cwde
aam
movsx
imul
or
pop
dec
push
and
xor
mov
mov
adc
push
jecxz
dec
or
adc
fmul
call
sub
(bad)
jl
sbb
and
jbe
xchg
push
call
cmp
ror
pop
pop
push
pop
(bad)
jmp
pop
xchg
lea
ret
nop
fbld
adc
inc
fadd
in
test
popa
push
lock
or
jecxz
inc
cmp
outs
lods
mov
mov
lods
icebp
inc
clc
or
clc
push
mov
dec
in
lea
enter
mov
jno
ret
inc
mov
fisttp
cdq
fimul
stc
jnp
add
add
xchg
add
add
fadd
loopne
scas
push
das
xchg
mov
push
ficomp
push
sbb
and
popf
mov
sbb
sbb
dec
xchg
add
xor
xchg
xor
imul
sbb
cdq
aam
ret
xchg
gs
pop
js
push
pop
and
stos
push
mov
or
pop
daa
rcl
adc
fmul
outs
sub
fiadd
repnz
pushf
mov
in
mov
sar
inc
(bad)
std
lea
mov
movsx
inc
add
adc
inc
das
mov
test
mov
push
sub
jno
push
cmp
aam
sbb
and
(bad)
sbb
addr16
or
add
xchg
clc
jne
(bad)
jecxz
call
mov
fadd
retf
lds
inc
mov
out
test
mov
std
push
and
sbb
push
push
dec
or
push
or
mov
outs
and
(bad)
and
xor
or
mov
lods
aaa
mov
outs
pop
lods
sbb
or
call
jle
adc
and
pop
mov
adc
loope
adc
pop
sbb
test
lods
add
sbb
add
adc
or
mov
add
inc
push
loope
fcomp
outs
mov
pop
(bad)
cmps
jns
add
pop
add
pop
ret
mov
je
adc
add
push
ins
inc
pop
push
pop
(bad)
push
cdq
pop
adc
adc
add
cmps
sub
addr16
fld
inc
or
jl
jmp
push
push
inc
jl
and
and
add
pop
dec
rcl
lock
or
jp
(bad)
sub
aam
ror
jecxz
jle
inc
mov
in
mov
add
jecxz
push
adc
std
rol
sub
mov
in
sar
ins
fnstsw
dec
xchg
or
leave
or
and
mov
jne
add
cmp
mov
pop
push
sbb
je
push
add
and
repz
and
mov
xor
sbb
mov
icebp
inc
inc
repz
xor
test
push
mov
or
mov
inc
push
mov
aas
pop
sub
cmp
inc
adc
sbb
movs
test
dec
leave
cld
loopne
jno
sbb
dec
into
imul
xor
mov
bound
outs
aam
je
mov
pop
inc
mov
pop
fcom
lea
sub
add
fimul
cmps
(bad)
jecxz
mov
pop
cmp
dec
xchg
cmp
jle
lods
jl
inc
and
cdq
mov
mov
stc
xchg
sbb
lods
mov
and
adc
mov
sub
(bad)
pop
cmp
sub
sbb
sti
xor
ret
and
ja
xchg
add
adc
or
push
or
(bad)
xor
mov
and
or
or
adc
mov
lock
or
push
pop
sbb
mov
retf
je
sbb
mov
call
arpl
das
mov
icebp
dec
jo
cmp
jp
cwde
sbb
sbb
pusha
mov
cmp
out
sub
mov
or
mov
test
lock
push
pop
pusha
mov
jg
dec
fs
retf
xor
or
mov
dec
ja
inc
or
or
jg
daa
test
mov
add
loop
xor
movs
xchg
xchg
pop
push
(bad)
cld
add
pop
cwde
or
push
adc
mov
push
cmp
iret
mov
mov
push
add
push
add
push
and
(bad)
sub
add
loopne
add
adc
clc
push
jno
ret
std
adc
xchg
call
rcr
or
adc
movs
dec
sbb
mov
add
inc
ret
adc
adc
xor
(bad)
sbb
inc
jae
test
inc
push
push
(bad)
in
(bad)
add
clc
push
data16
xor
pusha
fsubr
sub
cmp
xchg
out
gs
jno
(bad)
push
jp
ins
xor
jne
fdivp
jne
lea
dec
adc
jle
imul
inc
(bad)
fadd
push
sbb
adc
mov
pushf
push
inc
sub
lea
test
sbb
movlps
aad
mov
push
push
push
js
popa
inc
dec
xchg
je
icebp
aas
sub
xchg
pop
and
xor
pop
leave
inc
dec
or
lods
rcl
shl
test
(bad)
js
xor
and
inc
xor
cwde
movs
(bad)
mov
and
and
sbb
sub
fild
add
(bad)
in
adc
xlat
push
cld
inc
push
sub
vmwrite
out
(bad)
lahf
inc
jmp
adc
inc
push
mov
sbb
les
aaa
or
movs
xor
shld
push
and
pusha
popf
xor
fdiv
fld
fcomp
mov
push
enter
dec
jne
(bad)
mov
arpl
outs
and
adc
adc
sub
mov
jns
test
push
add
ins
cmp
push
add
gs
mov
sub
loop
lock
repz
popa
mov
je
sbb
aaa
iret
jae
and
xor
and
xor
mov
out
sbb
adc
sub
or
je
add
cmp
jmp
in
aam
adc
fs
into
cmp
mov
ror
add
mov
jae
inc
or
xchg
sbb
add
pop
aaa
hlt
leave
sbb
dec
jp
and
clc
add
and
jmp
mov
adc
add
mov
out
and
maskmovq
test
sahf
movs
add
xchg
sbb
add
int
jmp
enter
push
cmp
xchg
xor
xchg
and
test
push
fs
sahf
sbb
aaa
ds
mov
shl
xor
pusha
sub
inc
sub
jge
sbb
aas
cmp
mov
ins
(bad)
into
sets
leave
push
mov
sbb
retf
outs
mov
lea
inc
addr16
pop
ins
jne
mov
lock
movs
adc
out
fistp
cmp
xor
or
cmp
or
pop
sahf
mov
loope
mov
cmp
cmps
push
pop
or
or
ret
mov
ss
pusha
ss
push
arpl
or
or
jg
mov
jle
pop
adc
inc
ror
lock
out
rol
inc
sub
adc
ja
jo
mov
pop
test
or
pushf
cmp
(bad)
push
pusha
sahf
push
xchg
adc
fwait
test
out
or
adc
psllq
in
(bad)
in
mov
pop
adc
loop
add
andps
inc
and
jmp
xor
dec
ss
push
mov
arpl
jne
pusha
sub
dec
repz
sbb
and
out
add
dec
popf
adc
test
movs
xchg
cwde
cmp
and
pop
aas
pop
pop
das
ficomp
scas
cmp
pop
test
inc
inc
pop
push
ins
sub
mov
out
jmp
xchg
loopne
test
push
sub
into
cwde
adc
pop
outs
bound
mov
in
cmps
test
sbb
or
ss
inc
es
jmp
mul
jne
or
ins
xor
cwde
mov
int
adc
pop
cmp
in
pop
loopne
jmp
sbb
dec
ror
sub
inc
test
mov
push
jb
movs
push
rol
and
inc
and
mul
adc
lods
push
push
mov
repnz
ds
xor
dec
mov
adc
or
sub
sub
mov
mov
and
pop
or
fs
call
or
xor
and
cmps
add
add
jg
jne
lea
jmp
cld
inc
cmp
mov
cmp
mov
adc
adc
mov
or
or
add
les
test
gs
inc
mov
int3
add
mov
in
or
mov
pop
xor
rcr
mov
popf
(bad)
xchg
rol
mov
sar
leave
sub
pop
jae
ret
test
call
cmp
fist
mov
xor
shl
lds
aam
dec
jmp
test
sbb
adc
test
cmp
jge
or
sbb
test
retf
in
clc
cmp
test
lock
jbe
inc
movs
jecxz
imul
lods
adc
pop
push
fs
mov
push
jne
xor
add
movs
jmp
push
leave
lock
pop
dec
push
movs
push
int3
or
inc
cmp
adc
rcl
push
sub
pop
call
rol
mov
cli
mov
or
adc
or
sbb
jmp
std
pop
test
ret
sahf
mov
xor
mov
push
test
jl
cmp
jp
addr16
les
shr
sub
adc
bound
div
imul
mov
pop
add
dec
inc
mov
push
push
mov
adc
scas
cmp
aas
sbb
mov
jnp
mov
mov
mov
pop
xor
sub
jg
mov
push
loop
rcr
seto
push
xor
mov
aas
mov
add
adc
pop
adc
dec
cld
xlat
popa
repnz
adc
inc
or
int3
mov
(bad)
mov
test
or
mov
test
xor
jp
pushf
add
fist
mov
mov
movs
pop
inc
xchg
mov
lea
dec
and
sbb
std
hlt
outs
(bad)
add
xor
add
add
mov
push
ror
ret
sub
daa
mov
clc
jmp
pop
jne
inc
test
jp
(bad)
xchg
mov
jnp
push
or
add
lods
test
inc
xchg
mov
inc
sub
fimul
es
cs
mov
(bad)
nop
in
ss
xor
add
dec
mov
jp
adc
or
or
jb
or
xchg
ret
mov
dec
mov
mov
push
hlt
cmp
xchg
stos
or
pop
stc
lock
jno
push
rcl
add
dec
lods
or
and
dec
inc
and
stos
cmp
jl
pop
dec
pop
add
mov
adc
jnp
js
sahf
out
and
xchg
pushf
stos
mov
push
rcr
mov
push
lods
inc
jmp
sub
mov
rol
in
inc
sahf
add
jmp
or
ja
mov
xchg
jmp
add
mov
inc
hlt
movs
lock
mov
call
or
test
fwait
mov
and
adc
or
mov
add
mov
(bad)
inc
movs
mov
cmp
enter
xchg
scas
enter
cmp
xor
push
mov
or
arpl
and
popw
jmp
xor
jmp
xor
adc
dec
aad
add
cmps
inc
mov
stos
cmp
in
rol
cmp
add
xchg
pushf
adc
mov
sub
dec
test
jle
stos
and
dec
fwait
repnz
hlt
pop
adc
xor
pop
add
xor
jb
test
dec
pop
loopne
xor
or
push
mov
pop
push
sbb
push
add
ret
sbb
and
cdq
push
bound
cmp
imul
push
sbb
add
push
repnz
mov
inc
push
jns
daa
out
push
into
add
pop
or
lds
pushf
dec
aaa
std
add
jmp
ss
mov
sub
push
lock
scas
xor
pop
in
lds
xor
add
bound
add
pop
jb
inc
xor
out
add
cmp
in
cld
in
int3
xor
pop
pop
inc
test
and
adc
shl
xchg
out
ss
lea
dec
jmp
pop
cmp
fst
pop
(bad)
fadd
push
imul
inc
mov
mov
pop
psubsb
sbb
jmp
ret
sub
or
pop
inc
add
cmp
jne
stc
cdq
sbb
inc
mov
sub
mov
int3
xchg
xor
das
push
inc
clc
cmp
pop
mov
sbb
jne
mov
fmul
inc
es
add
gs
pop
cmp
ffree
rol
jne
pushf
ror
xchg
imul
add
cmp
jge
mov
aad
mov
mov
push
lods
pop
jl
cmp
mov
nop
sbb
add
push
(bad)
xor
mov
sbb
cld
nop
mov
or
scas
int
cld
iret
ror
xor
movs
test
pop
cmps
jne
fsub
jecxz
add
out
jge
push
loop
test
mov
mov
in
inc
mov
sub
pop
or
cli
mul
dec
push
jae
or
jne
xor
fisttp
ins
lods
add
lahf
shr
or
fwait
dec
movs
push
cmps
push
dec
push
clc
lds
inc
push
cdq
rcl
or
adc
and
fmul
or
mov
jg
sbb
lock
sbb
movs
push
hlt
shl
jne
ror
je
ss
out
push
cmp
or
lea
fadd
lds
ds
inc
dec
push
call
aas
test
fstp
dec
cmp
push
outs
cmp
inc
jns
mov
fist
and
rcl
jmp
push
clc
mov
cmp
je
push
push
sbb
gs
arpl
nop
sbb
and
(bad)
(bad)
std
jecxz
lock
xor
clc
not
dec
mov
das
leave
das
(bad)
enter
test
add
add
add
mov
xchg
jbe
outs
add
nop
sbb
add
jge
adc
div
fnstsw
pop
adc
cmp
cmp
add
adc
loope
push
je
sub
pop
sub
lea
adc
dec
inc
sbb
sbb
fcom
xchg
pop
adc
sbb
lock
mov
mov
jg
sbb
pop
adc
or
cvttps2pi
js
add
cdq
loopne
shl
dec
add
inc
cmps
add
inc
sbb
ret
test
je
push
mov
dec
int
fist
cli
ins
rol
xchg
mov
cmp
or
sbb
cmp
and
add
(bad)
push
in
push
xor
dec
push
popf
sub
and
pop
mov
pop
daa
cmp
push
sbb
pusha
and
(bad)
sub
sub
test
inc
sbb
jmp
cld
out
jae
push
in
mov
adc
aas
mov
(bad)
pop
outs
jo
push
fsubrp
pop
jg
adc
je
xor
adc
outs
pop
test
stos
cdq
or
jmp
mov
push
add
pop
sbb
pushf
adc
dec
in
mov
xlat
mov
ror
pop
lea
out
mov
jmp
ffreep
push
mov
jne
and
pop
push
inc
add
(bad)
adc
fstp
bound
add
popa
inc
clc
idiv
fwait
adc
push
fadd
inc
inc
pop
add
jne
js
mov
sub
mov
add
outs
mov
rcr
pop
cwde
push
sbb
inc
ds
test
in
adc
fidiv
inc
push
add
jmp
xchg
fidivr
inc
inc
mov
xchg
and
adc
mov
xor
nop
push
sti
clc
or
jg
int3
das
inc
xor
mov
int
add
cmc
inc
dec
cs
add
or
retf
pop
sub
ins
add
add
in
sbb
mov
adc
mov
dec
sbb
mov
or
xor
sbb
dec
cmp
jo
loopne
xor
and
fadd
jmp
push
movs
mov
fisubr
jne
test
adc
mov
out
cmp
xchg
repz
or
aaa
adc
shr
add
lea
aam
adc
push
sbb
jmp
sbb
add
lock
das
push
ss
test
les
dec
add
jb
jo
hlt
ror
or
scas
mov
mov
test
pushf
fbstp
jmp
rcl
inc
add
dec
test
pusha
adc
dec
shl
out
or
and
jmp
adc
dec
ror
push
add
cwde
xchg
ss
and
jne
loope
je
inc
lock
(bad)
out
les
add
inc
clc
sbb
jmp
mov
(bad)
mov
pusha
imul
sub
dec
and
push
mul
adc
dec
add
sub
adc
mov
push
add
je
cld
mov
idiv
inc
mov
unpcklps
cwde
adc
dec
dec
(bad)
sahf
xchg
mov
je
add
sbb
mov
mov
xor
rcl
shl
and
dec
loopne
sbb
rcl
dec
jne
inc
fs
pop
test
loope
add
mov
mov
jne
lods
pop
or
xchg
mov
ins
add
sbb
sub
adc
int3
jo
sti
rcr
or
aam
inc
sbb
sub
movs
hlt
das
mov
into
adc
jnp
lea
push
push
inc
add
sbb
push
daa
in
xchg
push
push
pop
push
data16
sbb
inc
mov
outs
jecxz
xchg
mov
and
add
push
adc
daa
xchg
fstp
jle
or
push
and
mov
sbb
ror
rol
jmp
sub
mov
or
loopne
popa
test
fisubr
mov
dec
call
fs
mov
mov
inc
lea
inc
enter
pusha
inc
inc
or
or
inc
test
adc
mov
or
add
xchg
add
dec
loop
or
aam
and
in
mov
inc
sbb
sbb
or
xchg
call
inc
or
daa
lods
jle
push
mov
clc
adc
inc
movs
sbb
scas
mov
sub
jp
jle
test
add
inc
jmp
bound
das
push
and
and
adc
lods
icebp
push
imul
xor
cmc
std
xor
test
test
adc
pop
call
sub
rcr
mov
ins
or
lods
hlt
mov
or
adc
add
sti
in
lea
or
pop
add
push
xchg
jbe
push
add
push
cmp
jnp
ja
add
xchg
adc
int3
pop
shl
push
dec
js
scas
sub
imul
fwait
dec
and
jl
test
xchg
sub
sbb
xchg
add
cmp
pop
pop
les
test
push
outs
jns
and
sahf
adc
fisttp
ret
pop
movs
dec
adc
imul
mov
pop
je
imul
add
aas
or
cmp
je
test
das
lock
test
dec
or
jp
dec
shl
xchg
out
ins
je
lods
add
xchg
push
je
xchg
add
or
cmps
adc
adc
jmp
mov
mov
cmp
add
add
scas
xor
into
jne
shl
mov
fs
inc
addr16
dec
loopne
inc
inc
repz
xor
pop
add
dec
xchg
sbb
or
imul
ret
jmp
pop
sbb
addr16
xchg
or
cdq
loop
jo
sahf
out
push
sbb
xor
pushw
or
psubsb
add
add
xchg
pop
mov
test
jg
out
add
sbb
test
mov
and
arpl
mov
loopne
xchg
test
jne
sbb
in
or
or
sub
add
popa
adc
test
(bad)
retf
push
lea
jge
jle
dec
in
call
pusha
popa
dec
sbb
out
sub
(bad)
into
or
jecxz
pop
mov
jae
dec
cmp
inc
xor
xchg
mov
aam
push
retf
pop
add
shr
sbb
jmp
jmp
cmp
add
pop
rcl
cwde
(bad)
add
dec
add
ins
mov
neg
push
mov
ss
pop
xor
push
mov
push
push
test
cmp
mov
das
xchg
ss
lods
ror
mov
jge
mov
pop
or
cmp
inc
add
test
mov
xor
daa
cli
in
test
or
fistp
sbb
sbb
mov
cmp
call
xchg
adc
lock
jmp
mov
add
inc
xchg
rcr
bound
inc
mov
mov
inc
adc
mov
ins
inc
pop
push
inc
mov
mov
mov
rol
sbb
add
ret
std
xchg
enter
push
js
xchg
and
push
(bad)
movs
mov
imul
xchg
in
int3
push
imul
push
add
mov
(bad)
mov
jmp
sahf
adc
pusha
adc
inc
in
(bad)
mov
mov
sbb
or
das
mov
xchg
in
pop
inc
lock
mov
cmc
xor
xor
xchg
fild
jmp
or
(bad)
xchg
xchg
pop
loopne
pusha
jg
adc
xor
out
sysexit
test
cmp
je
pop
jne
push
mov
cmp
jne
popf
pop
or
out
adc
mov
loopne
loope
mov
xchg
pop
leave
dec
mov
mov
cld
les
xchg
xbegin
(bad)
dec
add
mov
pop
adc
aam
push
cmp
fadd
inc
lods
(bad)
push
jbe
mov
pop
inc
sbb
dec
inc
mov
sti
mov
adc
mov
pop
xor
sbb
sub
sub
cmp
inc
das
sbb
and
cpuid
bsr
lock
pop
pop
or
dec
(bad)
(bad)
clc
inc
fwait
mov
adc
or
xor
xchg
jne
pop
and
int
or
cmps
loopne
dec
or
xchg
mov
mov
clc
and
(bad)
and
cmps
add
cmp
and
js
scas
cli
push
sti
mov
xchg
add
out
push
push
das
add
(bad)
nop
es
push
mov
test
xor
out
add
sbb
test
and
adc
adc
pop
(bad)
clc
mov
cmp
xor
aas
adc
mov
add
pop
adc
jae
imul
sbb
adc
adc
in
add
test
add
cmp
add
mov
mov
adc
cwde
sbb
mov
or
or
mov
ins
or
add
dec
and
add
les
or
inc
mov
mov
dec
and
cmps
push
cmps
add
mov
inc
or
mov
in
push
pop
cld
push
les
sub
or
mov
test
ret
push
data16
out
push
imul
inc
and
imul
sub
test
fcom
add
ins
mov
jg
xchg
mov
or
pop
ja
imul
mov
xor
pop
mov
scas
dec
test
mov
mov
adc
and
pop
pop
xchg
mov
in
adc
or
pop
sbb
call
mov
das
in
in
aaa
es
sub
dec
repz
lock
in
add
fidivr
cmp
and
daa
adc
adc
dec
mov
push
push
pop
adc
fnstcw
repz
sbb
cld
jnp
mov
push
mov
jne
mov
and
push
ins
lock
lods
pop
and
mov
sub
mov
jmp
sub
sub
mov
das
or
adc
pop
inc
fimul
in
cmp
js
lea
outs
add
aas
movsx
or
loop
and
pop
mov
dec
fnop
test
dec
inc
outs
call
push
adc
push
pop
in
es
mov
pop
imul
pop
xchg
inc
push
sub
mov
sbb
cs
add
(bad)
jo
cmp
jno
sub
pop
sahf
popa
pusha
mov
adc
ror
leave
jae
xchg
push
adc
mov
cmp
inc
shl
mov
test
cdq
rol
inc
sbb
xor
sbb
adc
sar
push
(bad)
cmc
dec
and
cmp
add
adc
call
or
jmp
add
mov
das
push
and
or
push
mov
jmp
adc
jmp
imul
lods
(bad)
or
lea
add
mov
(bad)
mov
rol
lock
adc
add
xlat
sbb
sub
add
sub
pop
inc
or
ret
dec
dec
mov
icebp
cmp
sahf
adc
xor
cwde
adc
or
outs
data16
aam
mov
sbb
in
sub
(bad)
sbb
clc
and
test
mov
jnp
clc
pop
adc
jo
or
add
pop
adc
loopne
ret
pop
clc
sub
popa
inc
in
xor
jb
xchg
cmp
pop
sti
mov
adc
(bad)
ror
add
push
jg
ret
fwait
dec
mov
xor
push
add
adc
sub
xchg
mov
fs
or
add
pushf
sub
js
imul
ins
push
or
bound
mov
jns
sbb
in
push
ins
mov
ret
sub
popa
xchg
sahf
add
jbe
inc
add
inc
test
cmp
cmp
jne
add
or
or
xchg
jmp
scas
scas
test
lods
and
lock
and
test
and
fild
or
add
or
cmc
in
in
loopne
sub
in
call
sbb
les
add
adc
xor
inc
(bad)
sar
sbb
xlat
add
xchg
not
push
std
jmp
rol
verr
mov
pop
mov
jae
repz
ret
push
into
or
ins
lahf
pop
clc
cmp
add
or
adc
xor
test
add
loopne
retf
pop
add
sbb
add
xor
lock
jmp
adc
or
and
or
ins
or
ins
test
cmp
push
(bad)
sar
sub
add
adc
push
pusha
pusha
or
pop
or
mov
mov
loopne
sbb
adc
pop
xor
mov
push
jne
imul
mov
jl
dec
inc
aam
add
xor
iret
inc
int3
adc
or
pop
fsub
push
adc
jno
mov
or
cs
gs
cs
aas
popf
jne
fisttp
pop
cmps
push
add
push
clc
nop
xor
sbb
mov
add
ins
or
add
in
rcr
cmp
rol
add
(bad)
js
mov
mov
fadd
(bad)
pop
xor
push
bound
and
mov
xchg
sub
ins
rcr
jae
in
mov
pop
es
add
adc
add
push
add
cwde
push
and
pop
ror
push
xlat
in
bnd
cmp
aad
cli
cmp
jne
sub
add
xlat
ins
mov
mov
repz
mov
adc
pop
fsubr
adc
mov
add
sbb
mov
ins
jp
push
add
or
imul
mov
cmp
add
jg
mov
adc
mov
lgdtd
in
cdq
test
jae
and
add
test
je
add
mov
mov
jne
push
adc
push
dec
clc
adc
js
push
xor
jnp
cmp
xor
or
lock
mov
cmp
jecxz
mov
out
or
mov
push
ror
mov
add
mov
adc
clc
xlat
outs
ror
adc
push
lock
call
arpl
imul
imul
dec
or
push
daa
or
dec
pop
daa
jne
sbb
pop
aaa
jle
popf
aam
xor
or
(bad)
iret
add
push
xchg
mov
or
push
push
push
add
add
ins
pop
aam
dec
je
adc
mov
test
outs
call
sti
xor
arpl
and
push
ficomp
pop
or
pop
add
or
push
data16
fiadd
rcr
adc
sbb
adc
ja
mov
fadd
aad
fs
fwait
adc
sbb
add
aaa
lods
test
loop
xor
or
adc
add
out
hlt
pop
pop
sub
loop
or
cmp
sahf
test
arpl
out
lds
adc
push
out
mov
loope
adc
xlat
and
popa
sbb
(bad)
push
jmp
jmp
and
js
push
pushf
or
jmp
dec
xor
(bad)
fwait
call
xor
and
fs
retf
cmp
push
xchg
sub
push
sbb
out
test
movs
leave
xlat
pop
xchg
adc
adc
clc
mov
jno
add
cmps
pop
clc
pop
ret
paddusb
or
inc
hlt
jnp
movs
fidivr
ret
add
cmp
jnp
bound
add
or
jns
cld
mov
fistp
(bad)
adc
das
push
outs
inc
test
test
lods
xchg
adc
loop
adc
adc
ja
sbb
pop
sub
outs
xlat
dec
push
ret
inc
inc
adc
iret
add
cs
jo
xor
inc
mov
adc
mov
imul
inc
call
popa
shl
sbb
sbb
or
mov
(bad)
jge
or
add
rol
xchg
inc
data16
add
ins
(bad)
sbb
test
cmp
fsubr
call
pop
adc
cld
jb
unpckhps
mov
dec
xchg
pop
ja
push
push
xor
sti
xchg
lock
xor
shr
cld
cld
add
xor
lahf
push
loope
lock
shl
les
je
mov
push
(bad)
ss
jmp
inc
cmp
cli
or
mov
add
jne
jmp
pop
jp
mov
sbb
jecxz
adc
ror
inc
mov
mov
sbb
ja
add
mov
(bad)
clc
jmp
push
adc
inc
sbb
pusha
xor
not
and
repz
add
sbb
ss
in
jmp
adc
add
and
out
push
push
adc
test
lea
adc
jae
push
pusha
les
cld
cdq
xor
sub
push
pshufw
push
sbb
add
jne
pop
inc
xor
cld
dec
push
(bad)
and
loopne
cmc
test
push
int
mov
movs
and
and
fwait
add
adc
dec
inc
les
icebp
and
fimul
mov
pop
je
cmp
loop
test
push
mov
mov
or
or
add
or
cmps
mov
dec
and
das
pop
jne
sbb
xor
add
std
xor
xchg
pop
inc
jne
sahf
jmp
push
add
js
jns
ja
jl
push
jge
and
out
sahf
loopne
push
sub
sub
aaa
cmp
sbb
test
push
inc
dec
add
frstor
(bad)
fdivr
imul
inc
mov
jmp
push
add
jmp
xor
mov
and
push
fimul
shl
loopne
dec
pusha
retf
enter
and
(bad)
pusha
mov
inc
js
xchg
(bad)
add
pop
add
inc
int3
push
xchg
addr16
push
inc
punpcklwd
rol
ins
inc
das
sbb
test
imul
add
or
(bad)
push
cmp
test
and
and
cwde
cmps
fisubr
xchg
push
pop
test
add
and
xchg
inc
nop
data16
daa
fadd
sub
inc
nop
inc
mov
adc
dec
and
inc
movs
xchg
sub
loopne
test
pop
add
sub
xchg
lods
test
add
dec
push
xchg
jg
test
sbb
icebp
jo
or
push
sbb
in
jmp
xor
sub
in
out
(bad)
sbb
adc
cmp
call
mov
rcl
dec
jmp
pop
jecxz
mov
(bad)
cmp
ror
jmp
or
adc
(bad)
mov
rcl
push
inc
shl
(bad)
adc
or
xchg
cmp
rcl
test
into
ins
add
push
or
je
leave
mov
(bad)
daa
or
mov
sbb
adc
ins
push
pop
jne
rol
cli
or
add
nop
leave
ins
rcl
inc
loop
sbb
lea
jg
add
adc
or
mov
movs
dec
sub
sub
cmp
add
xchg
xchg
inc
add
mov
das
les
xor
push
mov
ret
lock
sbb
sbb
rcl
jne
pop
jnp
dec
or
retf
and
sar
ret
mov
mov
adc
test
in
call
xchg
inc
add
adc
add
and
data16
push
push
or
sbb
mov
adc
adc
inc
ins
mov
jbe
daa
add
mov
test
je
push
mov
cld
frstor
or
jne
add
mov
rol
push
scas
sbb
push
or
cs
call
and
movs
xchg
pusha
leave
mov
dec
outs
shr
cli
and
cmps
test
dec
outs
mov
sahf
cli
fdiv
xor
aaa
pop
or
cmc
lock
les
ds
push
push
dec
pop
xor
sar
add
in
das
push
mov
ret
add
sub
jl
inc
iretw
add
mov
je
mov
mov
pop
lods
inc
cmp
adc
fs
and
xor
shr
mov
or
retf
xlat
and
lahf
movs
jg
pop
sub
inc
inc
in
inc
mov
mov
xchg
shl
xor
imul
scas
mov
(bad)
je
xor
cmp
div
dec
xchg
test
pop
test
adc
ss
sbb
add
sar
xchg
inc
(bad)
sub
fdiv
adc
or
pop
les
rep
jg
rcr
sbb
clc
loopne
je
cmp
or
in
adc
movs
loopne
pop
loope
dec
stos
rol
ss
inc
mov
fdiv
test
sub
ret
sbb
outs
mov
rcr
and
cmps
hlt
adc
and
sub
sbb
add
repnz
(bad)
rcl
or
into
mov
adc
jne
jmp
jnp
inc
pop
adc
xchg
and
sbb
fist
mov
inc
bound
add
ret
push
out
sar
adc
or
xchg
sbb
and
rol
push
daa
push
xchg
adc
clc
pop
inc
mov
cdq
push
imul
sub
mov
cmp
inc
test
je
adc
(bad)
stc
lds
or
add
std
sub
cmps
aam
mov
or
adc
adc
pmuludq
imul
and
lock
leave
inc
pop
or
adc
xchg
xchg
mov
addr16
leave
paddsb
nop
mov
mov
mov
xor
pop
mov
test
inc
or
xor
or
pop
xlat
(bad)
mov
test
in
jle
mov
dec
xor
xchg
jne
dec
xor
jne
mov
pop
lods
(bad)
imul
mov
add
add
push
add
in
inc
mov
ror
xor
inc
clc
add
scas
xchg
call
or
and
jne
cmp
mov
mov
shl
pop
adc
sbb
mov
xlat
ficomp
or
les
lahf
push
je
mov
cmp
imul
test
adc
(bad)
cs
ja
lea
cmp
aaa
retf
jne
xor
push
cwde
adc
les
add
pop
dec
push
cld
jno
adc
add
dec
cmp
push
out
shufps
cmp
out
(bad)
push
xchg
add
ret
dec
out
xor
call
push
sbb
and
jmp
loopne
pop
movq
pop
pop
push
pusha
add
cmps
push
ss
inc
add
adc
adc
jne
test
clc
add
(bad)
xor
and
popa
xchg
xor
icebp
adc
scas
iret
mov
dec
addr16
mov
mov
cmc
dec
add
mov
adc
mov
jo
jne
inc
mov
pusha
nop
add
dec
mov
cwde
or
dec
imul
adc
dec
dec
inc
aas
scas
and
popa
and
not
or
sub
inc
mov
push
movzx
popa
push
cmp
rol
shl
sub
jne
dec
mov
loopne
mov
jno
fdiv
mov
sub
fist
rcl
fisttp
lods
adc
mov
fmul
or
add
(bad)
push
add
push
push
push
or
jb
adc
xor
dec
add
xchg
xor
(bad)
aam
pop
pop
pop
iret
mov
jno
fstp
xchg
lahf
ins
push
addr16
inc
and
sub
add
ja
and
leave
mov
xor
or
ss
sub
add
jg
mov
xchg
push
sbb
mov
sbb
xchg
xchg
push
js
xor
sub
loopne
add
pop
mov
fwait
pop
inc
and
or
and
inc
and
mov
sub
cmp
push
push
add
and
adc
in
adc
inc
imul
push
out
dec
shl
(bad)
icebp
adc
in
add
pop
push
or
popa
xchg
pop
fsub
aas
mov
test
lock
xor
or
je
out
push
adc
adc
jo
cmp
pop
or
adc
ret
cmp
jmp
je
std
push
rol
add
test
pusha
sub
or
add
push
or
mov
and
mov
or
xor
jmp
mov
vlddqu
repnz
call
(bad)
aad
in
push
retf
adc
pop
mov
retf
test
xchg
in
add
mov
mov
mov
jbe
push
add
mov
push
mov
dec
enter
scas
cmps
or
aas
and
push
or
inc
sbb
or
mov
ret
pop
pop
xlat
popa
int3
mov
push
jecxz
lock
das
test
adc
aas
je
cmps
jecxz
data16
cld
aas
add
cmp
cmp
xor
add
push
mov
lods
retf
jp
xor
inc
lahf
rcl
sbb
mul
mov
jmp
sbb
fwait
or
out
xlat
and
mov
pop
daa
sbb
mov
mov
fldenv
dec
sub
jb
int
rcpps
sub
nop
data16
mov
mov
into
pop
push
xor
movzx
mov
push
mov
adc
sub
ret
fisttp
lods
rcl
or
sub
popa
(bad)
movhps
iret
adc
ins
xor
pop
pop
out
fs
push
push
push
add
mov
dec
pop
mov
add
cdq
js
xchg
inc
xchg
or
jle
jo
sub
mov
lods
data16
xlat
cmp
inc
add
cmp
mov
das
xor
sub
xor
gs
add
add
loope
mov
je
dec
and
or
and
mov
jle
push
or
xor
rcr
adc
mov
ror
sub
adc
add
movs
je
jg
out
ret
gs
adc
call
lea
or
pop
mov
addr16
cld
sub
fcom
or
sub
jb
dec
(bad)
push
mov
or
lahf
cdq
jmp
nop
inc
cmps
push
(bad)
jmp
and
aas
test
push
icebp
jne
adc
sbb
pusha
or
adc
cmps
adc
shl
mov
inc
das
adc
push
adc
cdq
sar
rol
scas
jne
cmp
and
pop
push
adc
mov
adc
xor
jg
jne
mov
fstp
mov
sbb
lock
(bad)
fidivr
and
call
sti
pop
movs
(bad)
and
pop
nop
dec
mov
xchg
dec
cmp
add
jecxz
cmps
dec
dec
add
cs
inc
add
xor
adc
sbb
retf
xchg
add
push
sbb
jmp
add
adc
add
dec
loope
jmp
lahf
bound
inc
add
dec
push
mov
xor
xchg
daa
ret
adc
pop
imul
mov
inc
push
jle
sub
xchg
dec
gs
sbb
jmp
xor
add
pop
cwde
mov
mov
xchg
adc
xchg
or
xlat
ret
addr16
idiv
add
jo
jle
out
(bad)
and
push
mov
ins
inc
das
addr16
sub
jg
jns
dec
sbb
je
les
add
mov
xchg
jp
push
add
push
push
push
cmp
fcom
mov
jmp
cmps
inc
mov
int3
xchg
cmp
fiadd
icebp
aam
imul
les
gs
sbb
ins
test
or
mov
inc
(bad)
push
je
pop
imul
popf
pop
pop
push
and
and
dec
xchg
add
ins
mov
nop
sub
test
test
or
or
icebp
es
ror
out
and
enter
add
mov
xchg
or
mov
xchg
inc
(bad)
sar
mov
add
push
inc
outs
into
jbe
xor
push
mov
div
test
push
add
pop
or
adc
loope
or
or
add
sbb
ret
or
sub
rol
clc
adc
mov
inc
xor
sbb
inc
push
dec
enter
mov
inc
cdq
add
push
jmp
retf
jne
movs
or
pop
ins
and
sub
pop
push
push
add
adc
nop
jne
add
fistp
call
mov
adc
push
xor
push
xor
push
mov
nop
lock
sub
mov
inc
cwde
jl
push
push
clc
push
(bad)
nop
sub
mov
sub
les
(bad)
push
push
adc
and
stc
add
stc
mov
je
sbb
scas
cmp
test
dec
cmp
mov
dec
fisub
mov
push
add
std
mov
xchg
jmp
sub
mov
mov
daa
push
add
mov
fild
and
add
adc
jmp
lds
sub
xor
sub
mov
mov
fmul
pusha
movs
mov
hlt
sahf
mov
mov
push
not
shl
stos
and
popf
lods
mov
push
aas
push
dec
sub
ja
xchg
test
inc
(bad)
cs
and
daa
mov
cmp
loopne
xor
cmp
pop
aaa
jbe
(bad)
lea
or
jo
cmp
mov
and
inc
cmp
jo
adc
dec
dec
or
push
popf
push
adc
inc
jnp
push
outs
movs
loopne
pop
scas
arpl
push
ror
fmul
push
mov
inc
shl
xor
or
loop
xor
dec
push
adc
add
add
pop
inc
or
pop
rcr
xor
or
adc
adc
pop
add
jl
les
cmps
scas
cmp
inc
inc
mov
or
test
mov
sbb
push
add
xor
call
sahf
jmp
(bad)
jae
ret
sbb
mov
mov
test
lock
cmps
pop
data16
xchg
icebp
and
sbb
sbb
in
inc
out
xchg
lods
jne
xor
xchg
push
and
addr16
pop
repnz
mov
push
test
add
mov
dec
jl
mov
sbb
jp
movs
and
push
or
adc
or
jge
and
or
adc
jecxz
outs
sub
(bad)
add
outs
or
dec
fld
xor
and
push
fimul
daa
push
sub
or
and
loope
inc
movs
sub
sub
xor
xor
add
pop
movs
nop
icebp
sub
test
sbb
dec
mov
jl
add
pop
sar
jle
das
add
cmp
add
push
test
adc
fsubr
inc
or
xchg
dec
enter
into
or
add
mov
mov
mov
adc
call
cvtdq2ps
cmp
prefetchnta
arpl
xor
cmp
aad
(bad)
cmp
push
aas
lock
xchg
loope
push
fimul
(bad)
pop
retf
loope
je
test
or
push
bound
mov
sahf
cld
cmc
xor
sbb
int
mov
pop
dec
call
or
sar
adc
adc
add
test
dec
xchg
sbb
mov
mov
add
repnz
mov
(bad)
bound
fs
fisub
sbb
jo
dec
loope
es
(bad)
mov
sbb
mov
inc
jno
add
mov
shr
adc
int
pop
ja
jbe
mov
add
xor
sbb
ins
push
push
dec
and
push
xor
inc
sub
nop
sbb
dec
and
repnz
movs
mov
sub
and
(bad)
xchg
int3
dec
adc
adc
inc
scas
sti
mov
sub
pop
ins
sub
inc
ret
push
or
and
test
push
adc
sub
out
mov
pop
mov
mov
or
(bad)
or
cmps
inc
aas
ror
lods
test
cmc
jl
xor
js
adc
add
mov
xor
pop
adc
scas
hlt
scas
mov
ror
shr
xor
sti
test
inc
or
cmp
int
mov
int3
shr
adc
xor
jle
lock
add
daa
jmp
enter
cmc
lock
push
lock
pop
adc
push
mov
test
ins
push
push
ds
xchg
js
pushf
push
jnp
fdiv
aaa
wbinvd
cmp
adc
retf
sub
(bad)
sbb
add
pop
sbb
lods
aaa
jle
mov
or
dec
adc
xor
mov
repnz
pushf
cli
fmul
mov
pop
dec
or
adc
cmp
lods
in
imul
dec
jne
in
das
add
inc
or
mov
shl
movs
adc
sbb
fadd
pusha
inc
or
lock
or
dec
or
jo
stc
das
mov
fadd
iret
push
jmp
fadd
movs
inc
pop
mov
xchg
sbb
jmp
fs
icebp
push
mov
loope
xor
lods
push
sub
add
out
adc
ror
cmp
ds
xor
cmp
inc
adc
jle
add
and
add
or
add
mov
adc
cmp
add
loope
pop
sahf
cmp
cmp
sub
mov
add
sbb
test
xchg
iret
cmps
mov
aas
cmp
add
jl
fnstenv
mov
fsubr
js
frstor
and
ins
mov
mov
add
add
add
adc
ror
mov
adc
movs
cmp
enter
or
ins
inc
test
add
ds
je
sub
or
or
mov
push
shl
cmps
movs
cmp
shl
rcl
dec
fmul
fmul
aam
pop
and
jne
and
stos
rcr
sub
aas
mov
xchg
push
inc
add
push
inc
inc
xchg
xor
lock
xchg
test
push
or
push
cmp
push
mov
jmp
mov
or
jmp
cmp
test
xchg
call
push
mov
add
or
test
push
jle
inc
add
dec
dec
dec
jecxz
mov
jmp
call
add
add
push
and
mov
clc
mov
and
sbb
mov
sub
inc
adc
mov
or
movs
mov
push
dec
or
aad
shr
xlat
and
add
sar
mov
adc
loopne
add
sub
sub
jecxz
jmp
mov
mov
(bad)
mov
jle
adc
adc
das
adc
leave
rcl
int3
adc
out
clc
cdq
mov
adc
pop
pop
das
rcr
add
jg
je
mov
lock
adc
aam
or
push
aam
es
outs
inc
cwde
pop
enter
pop
xor
shl
cmp
add
neg
int
add
sbb
es
or
pop
mov
scas
int3
fmul
dec
fadd
mov
cmp
cmp
xchg
mov
aad
aam
les
test
push
add
call
mov
add
cmp
or
push
mov
fucomip
add
add
sub
iret
jne
dec
and
test
xlat
add
outs
cs
add
and
jae
push
ret
mov
cmp
icebp
or
sbb
or
mov
out
jl
push
sahf
fcom
pop
xchg
js
ins
or
add
push
mov
cmps
arpl
add
cmp
inc
adc
add
retf
xor
mov
test
mov
or
pusha
mov
or
inc
in
(bad)
lock
js
jne
imul
add
push
adc
rol
and
out
mov
cmp
jmp
ror
add
xchg
add
mov
popf
sub
push
push
sub
ret
add
dec
jne
(bad)
(bad)
test
pop
and
add
cmc
add
adc
inc
sbb
push
push
shl
add
int3
loopne
inc
mov
jp
cmp
popa
push
push
movs
je
clc
imul
jle
fadd
ss
movs
adc
loop
hlt
add
in
pop
or
ret
nop
jmp
jmp
cmp
mov
mov
mov
rcl
sar
or
mov
je
lahf
mov
add
inc
cmp
into
fwait
nop
shr
nop
(bad)
fcomp
mov
das
les
adc
sar
aam
sub
or
mov
mov
rcl
jae
xchg
stos
add
cmp
mov
push
push
arpl
push
adc
add
pop
add
push
cdq
pop
sub
pop
or
(bad)
shl
xchg
arpl
movs
fbld
jne
cmp
add
into
add
cmp
add
mov
xchg
add
sar
mov
mov
add
daa
add
dec
fdiv
(bad)
jl
out
repz
jge
scas
adc
lea
pusha
add
pop
xchg
xor
fcmove
sar
outs
pop
cmp
aam
add
xor
fdiv
ret
add
sbb
adc
or
adc
shr
cld
or
ror
sub
adc
daa
mov
cmp
add
pop
fwait
loop
shr
add
lds
fadd
sbb
cld
sbb
call
outs
lock
dec
pop
or
mov
sahf
retf
add
ror
fisttp
or
test
fld
test
or
rcr
(bad)
mov
(bad)
in
fst
rcl
or
mov
push
sbb
fdiv
add
ror
dec
rcr
icebp
clc
add
pop
aam
inc
sub
test
add
mov
rcr
add
or
push
xor
lods
dec
pop
mov
fist
push
cs
dec
sbb
adc
sbb
aaa
push
jl
jmp
or
mov
arpl
je
aad
xchg
fwait
call
or
dec
push
inc
or
movs
sub
sbb
add
out
fwait
or
rcl
sub
mov
bound
or
imul
mov
popa
cli
ror
test
adc
xor
pop
dec
or
jnp
lock
push
or
ins
int
adc
sub
adc
xor
mov
sub
je
or
ret
in
adc
rcr
push
mov
retf
and
add
loop
xor
rol
addr16
adc
les
lea
loope
data16
adc
adc
xor
fcom
outs
dec
cwde
lods
fwait
movs
push
pop
imul
daa
hlt
ins
mov
jno
stos
mov
jmp
sbb
out
jns
iret
loopne
int3
push
or
(bad)
(bad)
call
pop
add
aam
sbb
inc
or
add
movs
cmovb
into
jle
fs
sbb
sub
enter
and
sub
sub
lock
inc
jmp
inc
and
or
mov
mov
sbb
cmp
test
adc
sub
cmp
push
jo
cmp
dec
sub
je
mov
jmp
xor
and
outs
and
imul
movs
mov
cli
pop
ja
or
jg
xor
jae
inc
xchg
mov
sahf
mov
mov
or
lods
or
div
lea
rol
nop
mov
das
stos
loopne
cmp
xor
push
jle
test
in
sbb
mov
mov
push
test
jle
pop
pop
or
add
add
and
or
inc
or
jmp
std
xchg
sbb
(bad)
add
stos
rcr
sub
push
sbb
or
mov
xchg
sbb
into
or
adc
adc
fisubr
jnp
adc
adc
test
pop
stos
push
aam
fsubr
inc
add
or
hlt
psrlq
cmp
adc
cwde
shl
mov
jmp
and
dec
int3
imul
int3
sbb
push
ror
int3
enter
movhlps
aas
push
push
mov
cmp
clc
imul
or
xor
and
fld
sti
fmulp
push
xor
adc
fwait
je
test
test
bound
cmp
sbb
add
add
std
jo
dec
je
movs
or
mov
sub
jge
(bad)
retf
mov
add
inc
xchg
shr
jne
add
stos
(bad)
mov
(bad)
jg
cs
cmp
test
leave
jl
inc
xchg
pop
xor
add
mov
inc
pop
bound
leave
or
retf
retf
loopne
mov
int3
and
imul
(bad)
ror
aas
jle
mov
and
cmps
in
xchg
dec
pop
in
add
lock
jg
jbe
in
int3
push
shl
mov
inc
movs
push
push
xor
xchg
pop
inc
mov
adc
call
(bad)
ins
retf
inc
add
jmp
nop
cdq
or
cmp
mov
int3
mov
add
xchg
jg
sahf
rcr
jmp
dec
mov
in
dec
out
add
shr
pop
out
and
imul
ret
inc
out
add
add
and
or
in
outs
mov
or
je
call
scas
lahf
inc
test
mov
pop
mov
fdiv
jne
sar
push
xchg
dec
mov
imul
jo
or
out
push
xor
dec
mov
(bad)
push
rol
add
pop
and
ret
push
xor
clc
and
add
and
xchg
add
mov
push
xor
add
xor
mov
(bad)
mov
fcmovb
daa
retf
daa
es
loope
ror
add
mov
fild
imul
xor
xor
fs
adc
sbb
mov
add
sbb
and
jae
lock
sub
xor
xor
xor
adc
(bad)
sub
push
cmp
cmp
aam
retf
mov
mov
add
std
mov
cmp
shl
inc
or
lock
or
jno
mov
movs
jnp
push
inc
stos
sub
cwde
lods
push
data16
jmp
test
inc
or
sbb
mov
sbb
sti
emms
or
jecxz
bt
jae
mov
not
and
adc
or
or
data16
adc
aam
add
or
lds
or
jmp
(bad)
and
xor
lods
cwde
cmp
add
push
inc
jmp
ins
push
ins
or
ss
pop
dec
dec
call
xchg
and
xchg
test
jle
pop
faddp
mov
pop
not
or
inc
aaa
and
pop
ret
cmp
clc
push
sahf
sub
dec
mov
aaa
sbb
dec
jg
mov
pop
test
loope
and
sbb
arpl
pop
or
or
jle
inc
add
and
jb
clc
push
test
push
(bad)
push
push
rcr
sbb
adc
call
add
add
mov
adc
leave
xchg
cmp
mov
mov
inc
sub
push
pop
test
adc
sti
iret
sbb
bound
cmp
mov
add
sbb
rcl
pop
pop
jmp
adc
xchg
cmps
inc
and
cmp
loopne
cwde
cmp
popf
and
jmp
test
mov
pop
fst
sbb
loopne
pop
xchg
in
cmp
sub
inc
add
add
push
xor
or
icebp
push
jae
div
push
mov
sbb
xor
push
sbb
mov
or
add
pop
jmp
imul
jp
pop
das
bound
lahf
cli
inc
add
xchg
add
mov
jns
call
pop
test
adc
mov
outs
mov
sbb
loope
xor
sub
nop
ret
fucomp
cmp
fs
aad
add
sub
inc
push
test
(bad)
adc
push
inc
or
test
ss
ret
jbe
mov
xchg
push
gs
ds
jne
and
aad
pop
mov
push
movs
sbb
ret
cmp
shr
dec
rcr
sub
aam
jb
out
in
xchg
rcl
sahf
gs
or
ret
dec
sbb
ret
std
inc
fild
out
push
cmp
je
adc
inc
ins
push
adc
pop
fnsave
(bad)
pop
pop
mov
cs
mov
(bad)
(bad)
add
inc
mov
and
(bad)
leave
xor
cmp
add
lahf
xor
aaa
lods
xchg
add
lods
jne
iret
arpl
popf
mov
js
pop
add
das
sbb
pop
xchg
sbb
das
test
test
add
xchg
rcl
retf
xor
packuswb
push
hlt
xor
inc
sub
pop
xchg
ror
shl
sub
jg
or
pop
mov
hlt
add
push
setge
(bad)
adc
int
test
pop
or
push
into
adc
lods
mov
sbb
hlt
jae
sbb
inc
mov
mov
outs
jmp
sbb
add
push
cwde
push
out
push
shl
sub
jge
pop
or
xor
adc
in
adc
adc
pop
xchg
arpl
into
pop
(bad)
or
hlt
jmp
sbb
sub
pushf
jmp
ret
repnz
inc
shl
pop
add
xor
add
imul
ret
jecxz
push
mov
fimul
jge
mov
or
ret
add
push
std
dec
jno
xchg
add
(bad)
dec
call
iret
je
mov
jb
pop
jbe
pop
mov
add
push
add
cmp
sbb
adc
out
jb
mov
push
or
push
or
loop
add
scas
aam
out
push
xor
ret
jmp
cwde
aad
popa
sbb
adc
sbb
int3
shl
loope
test
clc
arpl
test
cmovb
imul
adc
out
shl
dec
scas
aaa
mov
xrelease
adc
(bad)
not
shr
in
sti
les
dec
fs
add
sub
push
pop
push
jl
mov
mov
ins
sbb
mov
or
adc
fwait
or
stos
pop
retf
push
mov
add
jecxz
div
inc
pop
add
cmp
jge
cmp
ins
fsubr
mov
loopne
ins
mov
cmp
fild
pop
mov
xchg
xchg
sbb
cld
sub
rcr
aad
mov
sbb
xchg
push
sub
mov
adc
ror
hlt
sub
cmc
loop
push
jbe
cli
mov
clc
setl
add
push
sbb
dec
cmp
arpl
push
adc
or
fistp
sbb
aaa
movs
xchg
fcomp
or
xor
push
or
aaa
sbb
pusha
cmp
or
or
dec
call
pusha
push
ins
mov
lock
fild
mov
movs
jno
xchg
fnstsw
in
cmp
add
stos
test
add
push
outs
cmp
ficom
arpl
and
fsub
dec
out
punpcklbw
push
or
add
(bad)
mov
(bad)
dec
lods
dec
pop
leave
adc
add
xlat
in
sbb
xchg
icebp
dec
or
mov
push
add
xor
inc
push
rcr
adc
inc
inc
push
xchg
psrad
cmp
add
retf
loopne
popf
nop
mov
mov
and
sbb
push
inc
jg
dec
test
pop
bound
jmp
push
call
jmp
inc
aas
xor
mov
cwde
in
retf
ret
mov
pop
ret
xlat
inc
cdq
test
clc
add
xor
nop
sti
mov
and
push
push
dec
pushf
push
int
jb
dec
inc
ss
sub
jp
push
nop
jnp
mov
jne
(bad)
push
adc
sub
inc
mov
xor
add
or
jno
dec
(bad)
mov
pop
(bad)
xor
add
(bad)
popa
pop
cmp
out
mov
xchg
add
repz
mov
test
push
mov
in
test
inc
push
pop
xchg
xchg
jnp
xor
popa
call
shl
mov
inc
cmp
ja
jp
mov
fimul
mov
or
or
jo
arpl
xchg
shr
ret
pop
push
sub
sbb
or
icebp
inc
cmp
sbb
cmps
jno
sub
daa
push
leave
dec
sti
retf
inc
out
jecxz
test
mov
ja
rcr
dec
lods
mov
xchg
das
add
xor
je
sar
mov
mov
pop
fstp
fisttp
jns
outs
adc
fmul
add
and
or
add
es
sbb
js
push
inc
(bad)
ror
push
dec
popa
or
fdivr
or
rcr
add
leave
cmp
in
add
leave
push
add
pop
jo
jnp
retf
ss
aaa
jnp
dec
js
and
bound
pop
ja
mov
xor
(bad)
pop
push
jp
sub
mov
fs
mov
enter
out
sbb
popa
loopne
dec
mov
xor
fs
pop
mov
shl
mov
rcr
in
push
add
mov
fbstp
movzx
jmp
mov
popa
or
mov
xchg
jbe
mul
imul
push
xchg
ss
iret
mov
popa
add
jp
adc
or
adc
cvtdq2ps
mov
xor
xor
and
(bad)
dec
enter
(bad)
mov
dec
xor
and
fsubrp
pop
pop
imul
and
mov
rcr
js
mov
clc
dec
mov
mov
pop
fst
cmp
push
inc
pusha
inc
ror
sbb
xchg
pushf
or
pop
iret
rcr
push
unpcklps
outs
xor
sub
pop
cli
add
mov
sbb
mov
cmp
jne
arpl
sbb
inc
cmps
test
jne
mov
mov
cmp
ins
imul
test
mov
and
jmp
adc
sub
xor
fucomip
dec
mov
jmp
mov
and
fild
mov
sbb
(bad)
jbe
sti
jmp
cmp
ret
dec
mov
popa
lds
lahf
xor
add
cmps
add
cwde
sbb
mov
adc
push
push
adc
and
and
and
adc
(bad)
xor
or
mov
cdq
idiv
xor
push
rcr
shr
scas
call
daa
inc
inc
and
or
leave
or
xor
xor
mov
sub
push
push
mov
mov
cmp
inc
les
ja
cmp
xchg
ret
sbb
adc
inc
hlt
add
mov
ds
adc
lock
inc
jmp
inc
cmp
cmp
dec
rol
fdiv
or
and
sub
inc
pop
push
cmp
and
cwde
push
push
push
dec
js
enter
sar
jle
sbb
mov
nop
out
mov
xor
dec
nop
aaa
in
mov
add
aas
xchg
push
pop
lods
(bad)
js
sub
sbb
jp
into
ds
xchg
adc
cld
push
pop
not
fdivr
jmp
inc
out
and
adc
fidivr
push
loope
sbb
pop
or
or
ss
jo
cmc
gs
inc
not
adc
push
jbe
test
fs
adc
lock
push
pushf
inc
je
clc
in
sbb
loopne
or
dec
sub
shl
push
out
or
retf
pop
ret
dec
mov
ins
inc
pop
push
add
dec
test
mov
sub
aam
add
push
cmp
and
mov
and
cmp
or
or
jp
pop
or
and
and
data16
loopne
rcr
add
inc
shr
sub
dec
ss
ins
dec
mov
fiadd
adc
adc
jg
dec
gs
dec
jle
add
mov
push
push
sbb
push
add
ret
test
push
arpl
jbe
mov
js
loope
add
and
and
pusha
and
fnsave
mov
test
daa
sub
add
inc
fbstp
jnp
mov
or
hlt
push
fsub
cmp
loope
shr
inc
in
sub
mov
add
add
inc
fs
rcr
stos
das
xchg
mov
popa
lea
popa
or
or
outs
adc
or
aas
xchg
adc
fs
jp
setg
push
lods
movs
cmp
out
dec
dec
push
dec
inc
sar
sub
sub
inc
and
xchg
or
es
je
call
jne
xor
pop
icebp
mov
out
ret
call
aaa
xlat
pusha
inc
add
add
add
mov
inc
ins
ret
dec
push
fsub
jo
or
sahf
fucomip
fs
adc
sar
cmp
fdivrp
and
xor
mov
cmp
ss
ret
aaa
ins
pusha
in
or
pop
mov
loop
clc
add
inc
and
fs
clc
mov
dec
jo
sub
jle
sbb
call
aam
and
ins
pop
push
mov
pop
pop
(bad)
retf
push
or
xlat
xor
inc
fild
and
movs
scas
ret
push
mov
jmp
hlt
test
inc
pop
mov
in
mov
add
cmp
push
dec
jl
push
ret
mov
sbb
xor
retf
mov
dec
add
add
and
xor
aas
call
mul
icebp
loopne
test
inc
cmp
jo
pop
retf
add
jo
loope
pop
(bad)
enter
xchg
mov
xor
das
test
fsubr
jge
rcl
cs
xchg
push
sbb
pop
or
mov
push
(bad)
jae
lea
jb
add
mov
rol
mov
mov
aas
add
rcl
inc
or
push
test
push
sub
xor
add
loop
loopne
sbb
out
sub
fs
inc
cs
out
cmp
inc
inc
mul
push
dec
jne
movzx
test
mul
adc
or
jmp
mov
dec
ins
xor
or
mov
mov
push
adc
jo
cmp
push
sub
pusha
leave
mov
repz
add
mov
or
pushf
pusha
sub
dec
pop
adc
out
adc
mov
adc
push
idiv
add
jl
add
push
mov
lds
idiv
sub
sbb
(bad)
jo
and
out
and
push
outs
jecxz
add
mov
dec
jl
push
ret
into
icebp
xor
mov
call
test
or
push
inc
repnz
rcl
mov
mov
mov
inc
mov
jmp
xchg
xor
or
pop
add
fistp
xor
mov
mov
loopne
ins
push
out
pop
fld
test
outs
xor
test
ins
add
dec
inc
int3
out
adc
in
cmp
pop
and
xor
std
jge
sbb
loope
pop
lock
scas
pop
sub
cmp
mov
push
je
pop
clc
add
pop
sbb
sbb
pop
lock
or
adc
mov
mov
inc
jecxz
mov
add
jmp
leave
daa
sbb
shl
pushf
and
or
imul
ins
pusha
daa
jg
lock
inc
xor
add
sbb
neg
sub
jl
push
sbb
inc
push
push
push
add
or
ins
add
cmp
sbb
mov
cmp
arpl
inc
idiv
xchg
xchg
or
xor
pop
mov
je
adc
mov
cmp
jg
mov
(bad)
sahf
add
cmp
and
xchg
shr
(bad)
rol
xor
add
addr16
adc
pop
sub
cmp
jge
or
clc
push
stc
mov
jmp
adc
dec
mov
jecxz
imul
inc
idiv
gs
clc
and
sub
stos
mov
add
ret
pusha
nop
xor
loope
push
movs
pop
mov
call
xchg
outs
push
mov
adc
push
push
test
test
adc
rol
pop
scas
push
mov
je
iret
or
or
or
xchg
push
jo
xchg
adc
bound
pusha
pop
fsubr
test
xchg
pop
mov
cmps
push
sti
ror
das
and
sub
xor
inc
adc
fcom
sahf
nop
addr16
mov
jmp
xchg
add
add
add
xchg
add
imul
jecxz
mov
sbb
push
and
test
jne
inc
std
ins
movs
gs
jae
or
cmp
sbb
lock
rcr
pop
pop
lock
xor
inc
addr16
aam
xchg
jo
adc
inc
xor
sub
add
jne
aas
loopne
rol
pop
add
es
mov
fisubr
call
or
push
daa
xchg
or
rcl
loop
add
xchg
fdiv
jmp
data16
mov
gs
inc
clc
jle
hlt
mov
inc
inc
stc
push
mov
mov
popa
and
clc
test
and
es
cmp
jp
push
test
fisttp
add
mov
test
mov
pop
imul
dec
push
sar
rcr
adc
xor
aad
packsswb
inc
fbld
jno
pop
pop
xbegin
mov
xchg
jge
int
jne
pop
(bad)
outs
stos
es
sub
ret
call
push
je
pcmpgtd
pop
jmp
pop
mov
jl
retf
mov
retf
sub
aas
out
shl
push
cmps
dec
mov
mov
mov
or
adc
lods
lock
stos
push
popa
adc
fcomp
aaa
push
movs
push
jmp
push
clc
iret
adc
retf
push
jmp
call
pop
in
shl
push
rcl
cmps
fisubr
loope
or
xchg
out
cmp
push
jge
jbe
pop
in
cmp
push
cmp
add
xor
and
scas
sub
adc
push
and
adc
cwde
or
adc
mov
adc
imul
imul
or
pop
fs
cmp
jne
cmp
test
jo
loope
mov
jbe
adc
pop
es
mov
sub
jge
imul
or
sbb
jle
lds
dec
mov
loopne
push
mov
inc
sbb
xor
mov
cli
jmp
cs
or
inc
sbb
sub
sti
mov
push
pop
push
fisttp
mov
adc
cmp
test
jno
mov
into
call
adc
mov
cmc
mov
mov
add
and
and
mov
cmp
adc
mov
popf
mov
sti
or
inc
clc
jmp
push
arpl
jmp
fstp
mov
sbb
add
inc
inc
sar
dec
cmps
xor
adc
fadd
inc
or
inc
mov
fistp
and
jmp
scas
pusha
pop
dec
or
test
or
inc
retf
dec
and
xor
add
push
stc
pop
xchg
popa
inc
dec
or
cmp
add
mov
adc
adc
pop
pop
or
(bad)
cld
(bad)
rol
inc
mov
inc
retf
fcomp
ss
sti
sub
add
push
adc
popa
ins
inc
dec
push
inc
lods
sub
sbb
inc
xchg
shl
adc
(bad)
or
rol
push
inc
fnsave
(bad)
xchg
inc
push
sbb
ror
imul
or
loope
retf
sub
inc
cmp
clc
cdq
imul
sub
inc
add
adc
cs
enter
imul
mov
aaa
ret
add
js
js
and
add
cmp
push
pop
jb
push
push
cs
and
test
xchg
xchg
mov
adc
sar
fwait
loope
movups
and
loop
jecxz
shl
dec
add
xchg
mov
scas
adc
xor
inc
or
cmp
mov
and
cmp
jne
add
movs
inc
outs
jnp
adc
xchg
mov
push
push
add
scas
cmc
ins
enter
jmp
test
shl
fadd
mov
movs
out
and
jecxz
inc
sub
sti
aad
xor
xor
mov
ret
sbb
(bad)
dec
mov
adc
xor
xor
xchg
pop
inc
adc
popf
push
adc
ret
test
mov
adc
or
cmp
push
dec
or
lods
aad
and
ror
or
cdq
arpl
sub
and
cmp
sub
lea
leave
or
inc
add
jle
add
and
adc
inc
pop
cmp
push
push
pmaxub
clc
sar
jns
adc
inc
and
movs
cmp
adc
scas
pop
push
loop
sub
jne
add
jl
add
test
and
sbb
das
cmp
jmp
lock
push
push
or
nop
pop
movs
sahf
push
mov
repz
sub
xchg
and
or
outs
sbb
or
sbb
fxam
sbb
adc
push
or
iret
(bad)
adc
cmp
mov
fs
call
daa
cmp
mov
(bad)
dec
sub
mov
adc
add
rdpmc
leave
push
add
push
cmps
xor
call
int3
mov
or
fsubr
mov
lock
adc
pusha
push
pop
call
in
call
lea
in
mov
mov
fiadd
scas
or
inc
adc
fdiv
(bad)
jne
ror
xor
jp
mul
sahf
hlt
movs
fwait
rcl
jne
cmp
mov
push
test
mov
adc
inc
xchg
cmp
je
mov
inc
js
icebp
cwde
ror
fcmovnb
test
ret
cli
cdq
dec
adc
adc
test
adc
xor
add
fucomip
inc
or
mov
push
aad
js
shr
(bad)
or
sbb
push
adc
or
cs
or
movs
jnp
out
jne
sbb
sbb
outs
push
movs
aam
inc
and
jmp
xchg
loope
and
pop
fwait
sbb
inc
sbb
sub
jbe
inc
sbb
add
or
sar
push
push
pushf
rol
cmc
call
adc
dec
adc
lods
sub
ja
jnp
ret
cmps
jg
xor
xor
fs
(bad)
pop
jb
cmp
xor
inc
add
and
add
lea
lea
inc
adc
xchg
pushf
cs
cli
pusha
jecxz
fadd
pop
test
cmp
push
and
ret
and
push
repz
aam
repz
push
xchg
fld
sbb
aas
movs
rcr
dec
ds
cmp
jmp
sub
arpl
sub
push
outs
mov
aaa
(bad)
push
sbb
push
jl
sub
inc
cmp
pop
imul
or
jg
nop
fmul
xchg
pop
pop
or
pop
xor
into
or
loope
cmp
add
push
mov
mov
and
popa
jg
loopne
daa
outs
sub
adc
push
aam
clc
xor
movs
xlat
fdivr
add
sub
movntq
out
push
add
adc
mov
mov
pop
repz
xor
into
das
mov
loope
or
fisttp
aas
cld
sbb
jb
adc
popa
aaa
leave
mov
sub
push
arpl
jns
xchg
sbb
adc
lods
mov
pop
sub
xchg
push
xor
mov
dec
push
rcl
inc
sub
or
jbe
retf
daa
xor
pop
jns
jmp
call
popa
mul
in
xor
arpl
loop
adc
lea
dec
in
jae
xchg
mov
sub
push
sub
pusha
call
sbb
add
cmpps
lods
shl
or
ror
pop
inc
mov
in
pop
add
inc
cmp
mov
add
add
xchg
test
(bad)
xor
push
dec
fmul
test
icebp
cmp
pop
rol
shr
lock
cmps
push
in
mov
or
jo
ss
lock
in
add
stc
xchg
loop
mov
and
cmp
inc
and
popf
xor
pop
idiv
clc
xchg
clc
push
(bad)
not
dec
push
rcr
mov
dec
push
popf
mov
cmp
jmp
vmovaps
xchg
lahf
sbb
(bad)
cli
cli
jl
jne
sbb
jo
das
cli
inc
pop
cmp
dec
or
mov
cmp
jne
les
push
dec
xchg
push
adc
mov
dec
sbb
or
jl
sbb
mov
cmp
in
pop
add
outs
xor
xchg
or
sbb
(bad)
push
or
into
add
fstp
ins
(bad)
bound
es
mov
shl
enter
into
je
aad
xchg
add
dec
mov
xchg
psubusb
dec
dec
mov
xchg
rol
push
in
jo
mov
pop
push
mov
push
jb
pop
popf
add
shl
xor
aas
or
jg
rcl
inc
xor
push
push
adc
das
(bad)
adc
push
leave
add
pusha
ret
adc
mov
fiadd
jmp
and
pop
pop
loopne
dec
add
mov
fcmovnu
jo
packsswb
rcr
icebp
inc
pop
mov
jne
or
gs
xchg
pop
mov
inc
pusha
shl
ins
(bad)
sub
test
push
std
inc
adc
test
retf
mov
sar
inc
sbb
add
add
push
hlt
sub
mov
dec
sub
adc
in
outs
mov
push
jbe
jnp
jecxz
stos
mov
ret
xchg
push
push
add
or
lahf
cmp
inc
test
je
stos
cmovne
add
mov
pop
adc
xor
or
add
jbe
pushf
add
gs
cmp
add
push
fistp
push
jmp
mov
daa
in
(bad)
clc
cmp
sbb
sbb
lods
and
sub
push
mov
pop
aad
test
jmp
sbb
shr
lods
mov
clc
push
pop
aam
mov
addr16
or
mov
in
xchg
adc
stos
mov
shl
jg
add
adc
jge
jle
jl
and
out
adc
sti
mov
adc
jge
inc
ss
es
push
sbb
jg
pop
and
mov
pop
push
inc
adc
loop
or
push
addr16
inc
mov
test
rcr
pop
jmp
mov
sub
push
ss
push
imul
and
push
les
inc
jo
pop
std
add
icebp
fscale
jecxz
pop
rol
or
and
add
in
xor
inc
sbb
inc
or
ror
(bad)
mov
adc
adc
push
popa
adc
cmp
add
inc
sub
jecxz
outs
loopne
aaa
sub
mov
add
xchg
mov
nop
add
sbb
cmp
stos
push
jge
and
popa
imul
pop
mov
inc
and
rcl
push
bswap
imul
cmp
and
fist
enter
sbb
cwde
out
mov
les
jmp
inc
cmp
mov
popa
bound
(bad)
js
add
push
adc
ret
loop
pop
gs
adc
lea
push
lock
xor
test
inc
or
fdivr
mov
jle
mov
and
mov
clc
loope
test
out
sub
pushf
test
and
mov
sub
add
imul
cmp
in
jge
popa
push
dec
mov
in
sbb
cmp
movsx
in
movs
adc
sbb
dec
or
in
cmps
aas
sbb
push
push
adc
inc
clc
xchg
enter
test
outs
pop
add
or
lds
lods
lahf
sbb
sub
dec
and
nop
inc
aas
cmp
sub
mov
popa
add
mov
call
aam
lods
fdiv
inc
push
sbb
test
add
adc
mov
jle
add
pop
ins
jbe
sbb
dec
popf
adc
jns
inc
daa
jle
call
loopne
repnz
push
repnz
add
dec
sbb
push
fadd
loop
push
pxor
imul
popf
adc
lods
pop
push
lods
mov
fmulp
and
pop
inc
iret
mov
rcr
enter
pop
pop
sbb
mov
outs
pop
push
aaa
je
or
outs
(bad)
xor
lahf
jge
mov
mov
sub
add
mov
jbe
sbb
add
push
push
adc
cmps
shr
push
pop
pop
sub
and
or
or
sub
sub
xor
add
or
(bad)
call
adc
pop
push
jmp
sbb
inc
hlt
test
xchg
fiadd
sub
out
jle
outs
cmps
hlt
or
rcl
add
add
mov
jmp
sub
mov
stc
push
loopne
loopne
fbstp
jmp
push
pop
or
push
ret
in
mov
sbb
loop
inc
add
mov
push
call
jne
add
adc
fs
or
add
cs
ds
lea
or
icebp
(bad)
clc
ss
pop
sbb
jo
xchg
ss
sub
sbb
stc
add
rep
add
pop
mov
push
pop
dec
nop
mov
xor
xor
(bad)
mov
add
push
push
test
mov
xor
loopne
or
into
mov
movs
pusha
loope
ror
pop
hlt
lea
icebp
jnp
call
push
inc
mov
js
rcl
sbb
ret
cmp
outs
jmp
sbb
push
inc
outs
mov
push
hlt
push
test
xor
xchg
sub
dec
aam
dec
sbb
jmp
mov
mov
add
jae
xchg
outs
fcomp
xor
popw
rcr
push
sti
jmp
xchg
clc
mov
adc
enter
pushf
jmp
and
jge
mov
inc
dec
test
cmp
push
loopne
xor
xchg
mov
inc
aas
inc
mov
inc
push
adc
fucomip
sub
push
pop
pop
and
and
mov
and
ret
pop
pop
push
fdiv
mov
inc
or
jne
xor
sbb
mov
movs
xchg
ss
(bad)
push
dec
or
mov
(bad)
and
add
or
and
in
sbb
add
sub
xchg
mov
jg
adc
rcl
jge
test
icebp
inc
or
shr
fadd
imul
jnp
je
jnp
into
lea
push
fwait
in
test
xchg
(bad)
pop
aaa
inc
sub
dec
movs
nop
cmp
or
add
xlat
mov
pminub
add
or
popa
ret
xchg
inc
add
or
ror
rcl
sub
cmp
outs
shl
push
cmp
xlat
mov
scas
nop
ret
pop
sti
lock
xor
inc
mov
or
mov
adc
xchg
aaa
scas
add
mov
push
lea
adc
lea
adc
mov
sbb
adc
sbb
test
pop
ror
arpl
cmp
mov
lea
inc
cmp
push
rcl
adc
daa
jo
push
inc
js
add
call
nop
cwde
sub
in
les
xchg
lods
fadd
addr16
pop
sti
xchg
or
and
push
pop
xchg
jnp
add
sbb
or
adc
ins
sub
mov
pop
add
lea
mov
xlat
cmp
and
jno
or
jg
dec
loopne
jecxz
push
lock
fistp
xor
cmp
out
mov
out
movs
(bad)
push
inc
add
jmp
jge
out
inc
mov
imul
hlt
ins
in
ds
adc
push
into
adc
push
rcl
push
push
push
idiv
mov
je
les
mov
mov
and
sbb
aaa
test
sti
add
mov
loope
sub
sub
shl
inc
out
xchg
pop
add
push
call
jne
jg
adc
or
rcr
mov
pop
pop
bound
cmovns
and
pop
sub
pushf
pop
iret
out
sbb
push
add
scas
cmp
push
sub
dec
or
outs
mov
and
aaa
push
adc
outs
pushf
loopne
dec
dec
adc
sar
or
mov
outs
sbb
pop
push
inc
cmp
out
ret
push
add
mov
and
and
int3
xchg
sahf
pushf
jo
enter
ret
pop
mov
inc
popf
repz
sti
pop
nop
mov
cmp
sub
or
xor
clc
push
pop
(bad)
(bad)
imul
inc
pop
dec
mov
lock
int
jmp
ds
cld
daa
and
mov
dec
mov
int3
into
rcl
pop
fild
out
ret
int3
jno
loopne
dec
jnp
repz
lock
leave
call
add
fcomp
fs
mov
mov
mov
hlt
mov
sub
push
pop
jmp
jns
lahf
mov
inc
sbb
popa
mov
sbb
pushf
aas
mov
jle
push
mov
cmp
pop
xchg
sbb
add
cmps
pop
inc
daa
add
pop
xor
mov
sbb
add
cld
jmp
or
rcl
pop
or
loope
aam
test
pop
aad
or
push
push
test
fisttp
xor
cmps
jo
push
stos
and
xor
add
add
out
add
sub
cmps
jae
addr16
add
or
sbb
dec
or
jne
and
frstor
jne
retf
add
outs
out
addr16
mov
out
push
lea
add
cli
mov
call
mov
xchg
adc
push
bound
addr16
push
mov
mov
xor
dec
sub
(bad)
rcl
dec
cs
add
mov
xor
or
and
rcl
ja
push
xchg
add
imul
and
cmps
movs
clc
jge
sbb
cmp
loopne
push
call
mov
aaa
add
add
mov
sub
cmps
jle
pusha
sub
inc
or
fidiv
sub
sub
or
or
arpl
and
dec
xor
and
pop
(bad)
sub
dec
lock
push
es
mov
add
xchg
xor
fimul
mov
adc
mov
fs
mov
sub
scas
stc
iret
repz
outs
push
popf
int3
(bad)
xor
gs
xchg
(bad)
sbb
push
jg
(bad)
test
test
ret
or
push
sub
adc
adc
pop
sbb
call
in
ins
pop
add
leave
dec
popa
mov
pop
lods
fisub
outs
add
push
mov
push
add
or
push
jmp
ror
(bad)
(bad)
jle
push
cmp
jmp
arpl
xchg
jmp
sbb
inc
inc
ja
sbb
mov
mov
inc
retf
cmps
test
dec
dec
and
mov
ins
adc
test
cli
mov
in
shr
xchg
adc
and
pushf
dec
mov
or
inc
inc
add
add
and
fcmovnbe
sbb
mov
add
mov
pop
mov
test
aam
xchg
jmp
cmps
xor
pusha
cli
adc
add
mov
dec
outs
add
icebp
dec
mov
add
sub
fldcw
sbb
ror
dec
ja
mov
cmp
adc
dec
xchg
add
xor
fdivr
push
loopne
adc
push
setl
mov
sbb
push
pop
popa
inc
dec
and
movs
pushf
push
or
inc
repnz
or
or
stos
movs
push
push
dec
cmp
jns
or
pop
out
cmps
fs
jmp
xchg
xchg
sbb
mov
cs
push
xor
inc
and
mov
test
in
and
adc
cmp
cmp
add
lods
sti
arpl
and
pop
nop
mov
mov
cmp
mov
call
cmp
aas
das
stc
(bad)
cmp
(bad)
sbb
sbb
aaa
mov
add
clc
out
add
xor
add
add
xchg
push
xchg
loop
inc
cwde
mov
cmps
ss
jns
out
mov
push
jle
adc
add
fadd
or
test
nop
sub
mov
sahf
pushf
or
add
pop
add
cmp
cli
pop
ret
bound
je
out
sar
aad
inc
push
mov
mov
sub
mov
dec
push
push
pop
rcr
bound
stos
add
aam
mov
adc
pushf
pop
push
sub
sbb
push
push
mov
out
pusha
seta
ror
mov
iret
cmps
and
in
inc
pop
jne
movs
ss
pop
add
push
dec
mov
add
push
cmp
jne
aas
cli
fsubr
and
ss
ds
lea
stos
inc
adc
sub
js
ins
add
xor
dec
movs
sbb
shl
movs
inc
sub
movs
inc
and
ret
push
or
xlat
les
movs
push
stos
xlat
mov
push
mov
pop
or
(bad)
fild
xor
fistp
push
mov
ins
pop
add
test
loopne
and
add
(bad)
jmp
jne
cs
push
push
les
sbb
or
adc
mov
mov
fadd
jb
or
mov
pushf
movs
sub
jnp
aas
stc
in
call
inc
jb
and
movs
int3
push
xor
(bad)
les
lock
xchg
int
push
bound
and
push
sbb
das
xlat
mov
or
jg
add
inc
push
add
adc
call
adc
repnz
or
or
test
add
xchg
xchg
arpl
cmp
in
mov
cs
pop
lea
or
inc
je
jbe
mov
lods
cmp
cmp
mov
inc
jmp
adc
inc
mov
imul
and
cmp
add
pop
dec
pop
mov
dec
jb
dec
xor
mov
test
retf
sti
mov
mov
mov
lock
push
pop
div
pop
fild
sbb
add
outs
adc
or
test
add
call
push
mov
jl
and
mov
or
(bad)
ins
dec
les
not
sbb
add
mov
ins
xchg
nop
popa
imul
mov
mov
and
mov
paddsw
cmp
ja
ds
jne
push
jmp
or
push
mov
add
shl
jg
sub
xchg
pop
push
or
xor
lock
push
popa
push
sub
call
xlat
scas
test
add
stc
pop
leave
jl
inc
push
mov
movs
sbb
sub
jl
(bad)
sub
lock
mov
mov
dec
jo
inc
dec
sub
aaa
ret
add
or
ret
les
xor
js
fcom
and
add
das
push
or
lods
inc
jmp
add
jbe
jg
jecxz
pusha
scas
imul
pop
jmp
adc
sti
mov
adc
(bad)
div
stos
push
hlt
mov
add
add
adc
push
inc
arpl
(bad)
popa
sub
imul
ret
clc
mov
or
rcr
dec
sbb
nop
xor
ror
pop
add
repnz
jecxz
out
jecxz
gs
and
inc
jns
int3
(bad)
sti
mov
loopne
mov
loope
arpl
js
push
cmps
cld
xchg
push
and
(bad)
adc
mov
add
add
adc
wbinvd
mov
or
repz
adc
call
out
and
and
div
mov
inc
mov
in
mov
mov
mov
adc
je
out
add
and
mov
or
hlt
sub
enter
daa
jmp
add
cs
sub
xor
mov
inc
or
int3
push
pop
adc
mov
mov
fistp
adc
mov
jp
xchg
adc
inc
inc
add
loope
push
inc
add
movs
sar
sbb
and
pop
mov
pop
outs
and
push
js
xchg
or
test
mov
or
pop
add
jmp
mov
cmp
mov
aam
and
mov
add
sbb
inc
movs
cmps
jmp
mov
inc
adc
add
movs
xchg
bound
push
sub
xchg
xor
inc
pusha
jbe
dec
loopne
popa
mov
test
pop
sub
stc
sbb
push
inc
fwait
loop
jmp
adc
adc
aam
push
mov
jo
mov
jne
lahf
loopne
mov
or
loopne
jb
and
add
stos
nop
into
push
mov
mov
jmp
retf
adc
lock
sbb
jmp
fdivr
fidiv
dec
mov
and
mov
bswap
adc
ss
mov
pusha
pop
fnstenv
loopne
dec
xor
adc
bound
cwde
inc
jge
cwde
sti
call
inc
cmps
fs
inc
leave
cld
dec
test
inc
and
push
out
icebp
dec
test
jo
or
fnstcw
xlat
mov
cmp
mov
mov
inc
sbb
je
adc
test
inc
adc
or
or
pop
pop
aas
xchg
push
sub
dec
push
inc
dec
cmp
adc
mov
inc
or
mov
lea
adc
pop
xchg
jle
leave
rcr
mov
fwait
or
pop
inc
sbb
mov
xor
inc
inc
ins
movs
mov
in
add
sub
and
or
aam
push
pop
and
pop
test
mov
xchg
mov
inc
(bad)
int3
adc
hlt
fisub
cmps
movs
xlat
icebp
pop
out
dec
movs
inc
loopne
ds
inc
scas
sbb
or
das
xor
and
push
mov
add
imul
mov
inc
sub
mov
add
add
push
fisub
js
ret
adc
stos
push
or
jmp
push
push
dec
fld
inc
or
je
or
pop
cmp
adc
test
inc
es
icebp
dec
add
or
push
mov
or
sbb
ret
xchg
daa
push
andnps
push
gs
in
push
mov
(bad)
cmp
je
mov
push
add
jp
xchg
mov
xlat
push
test
mov
lds
lea
mov
mov
push
or
leave
add
or
xchg
aam
and
push
mov
or
fucomp
bound
cli
gs
or
push
mov
push
pushf
clc
pop
adc
add
pop
aas
es
fs
mov
fadd
pushf
rol
sub
add
popf
outs
push
scas
jno
pop
or
les
in
sbb
push
and
add
push
pop
popa
jns
cmp
sub
nop
lock
or
adc
pop
inc
mov
jb
xor
mov
push
inc
mov
add
test
jae
jae
imul
push
gs
imul
in
or
popa
je
push
data16
sbb
and
pop
cmp
sbb
rcr
adc
add
imul
fadd
dec
int
ins
xlat
loopne
pop
push
jae
push
adc
xchg
add
add
add
adc
imul
mov
sar
inc
(bad)
mov
mov
cli
sti
ins
mov
add
adc
mov
inc
mov
add
jnp
rol
add
enter
push
loopne
repz
inc
push
push
push
jle
xor
(bad)
sub
cmps
fdiv
pusha
jbe
mov
mov
in
xchg
push
dec
jne
ret
shl
lods
jbe
fdiv
outs
pop
shl
adc
retf
inc
or
inc
pop
(bad)
mov
les
or
or
fwait
mov
adc
xchg
ins
add
or
jl
inc
fcomp
adc
xchg
aam
pop
inc
ret
stos
aad
(bad)
jecxz
fst
popa
jo
(bad)
push
outs
sbb
lahf
fild
push
cmovbe
jae
xchg
sti
popa
add
gs
scas
rol
inc
cmc
outs
rcl
inc
sub
(bad)
add
das
dec
pushf
adc
daa
ret
push
(bad)
mov
xor
adc
nop
jbe
repz
inc
inc
and
pusha
bound
mov
cmp
mov
xchg
xor
movs
or
add
fld
add
or
stc
add
dec
mov
shr
add
sub
call
xor
pop
addr16
and
in
out
test
mov
sbb
cs
mov
cmp
pop
sbb
add
adc
sub
cmp
mov
int
pop
and
arpl
adc
or
pop
xor
add
dec
add
adc
add
add
jb
jns
in
adc
adc
add
mov
pop
inc
and
in
xchg
push
jae
rcl
movs
lods
mov
xor
add
or
fwait
ins
fadd
add
add
sub
sub
pop
push
add
or
or
ret
mov
sbb
adc
mov
or
sbb
push
imul
retfw
sbb
or
jns
add
mov
add
jb
dec
sti
push
add
sbb
or
pop
add
scas
or
ret
mov
and
or
adc
or
mov
dec
and
or
sub
sbb
adc
and
push
inc
sahf
or
push
dec
dec
push
sahf
sub
and
or
ja
mov
push
cdq
inc
and
and
or
cwde
cmp
mov
in
add
int3
loopne
add
rol
xlat
jmp
daa
add
or
xor
inc
loopne
dec
sub
push
or
das
mov
sub
pop
in
inc
fmul
push
sbb
or
in
sub
cmps
pusha
aaa
adc
pop
sub
in
sub
mov
fsub
ins
push
add
pop
mov
add
and
push
cs
add
cdq
shl
add
popf
or
push
daa
mov
nop
mov
jbe
sbb
les
or
adc
clc
popf
jbe
sbb
call
inc
and
xor
mov
push
sar
cmp
add
push
adc
pushf
adc
call
jne
inc
sbb
push
or
xor
add
add
sbb
(bad)
and
loopne
aaa
add
pusha
and
mov
jne
add
sub
add
xor
in
stos
(bad)
add
add
lea
lock
or
fcomp
popa
inc
call
dec
cmp
in
cmp
add
mov
or
std
pop
and
mov
mov
repnz
mov
mov
bound
scas
xlat
cli
sbb
mov
pop
mov
mov
ror
es
push
mov
daa
inc
mov
mov
in
ds
mov
push
ret
shl
int3
add
lods
mov
fmul
shl
or
or
and
inc
loopne
leave
inc
sar
test
sub
test
mov
inc
xor
add
or
jbe
loope
js
inc
push
pusha
push
js
ss
add
add
mov
push
xor
jge
or
sbb
inc
out
push
mov
nop
add
add
pop
sub
xchg
or
es
sbb
push
mov
add
mov
sbb
xor
pop
jae
ja
shl
adc
cs
cs
loope
xor
gs
add
push
add
add
inc
mov
jl
push
mov
adc
add
mov
sbb
mov
in
es
and
add
or
dec
mov
ins
icebp
imul
lock
or
test
daa
adc
(bad)
mov
add
xchg
or
inc
dec
arpl
arpl
stos
iret
mov
das
dec
jne
sbb
aaa
cmp
shl
popa
adc
scas
call
ror
dec
(bad)
adc
(bad)
cmc
push
jg
invd
add
fs
xor
add
sahf
mov
in
mul
stos
sub
outs
mov
push
fisttp
add
sbb
push
mov
cmp
or
adc
mov
add
scas
ror
test
push
sbb
mov
out
mov
push
push
push
mov
cmp
mov
sbb
adc
ss
sbb
pusha
das
and
add
dec
pusha
sub
icebp
mov
inc
xor
lea
add
add
push
sti
bound
jb
mov
adc
sar
adc
ret
pop
cmp
push
push
adc
xor
pop
mov
stos
inc
inc
mov
sub
scas
inc
fs
dec
and
mov
inc
push
mov
sub
sbb
jne
push
cmp
shl
mov
fild
rol
add
ret
bound
mov
popa
inc
ins
ins
ret
dec
call
ret
adc
sub
aad
add
test
add
ins
addr16
or
or
or
sbb
cmp
adc
xchg
xlat
fistp
sub
sbb
or
add
stos
lods
test
xor
ds
test
retf
in
or
sbb
xchg
das
loope
lods
jns
sbb
jp
stos
adc
daa
cmp
loop
fmul
std
fadd
jnp
or
add
or
into
add
movs
ss
sbb
icebp
push
adc
test
mov
sbb
or
adc
xchg
test
pop
adc
push
jae
inc
lock
add
in
dec
add
punpckldq
mov
adc
xor
mov
mov
enter
ins
sub
inc
jmp
pop
fs
adc
cwde
stos
inc
dec
adc
adc
aad
adc
pop
mov
in
add
cmp
xchg
add
or
adc
add
adc
call
test
and
mov
pop
ror
add
call
scas
movs
push
dec
xor
mov
add
aad
add
sub
or
ss
pop
sbb
xchg
jmp
or
add
sub
jg
sbb
mov
inc
cmp
inc
jae
add
lea
pop
adc
jno
clc
sbb
xchg
adc
xchg
inc
sbb
push
push
or
add
arpl
sub
dec
shl
pushf
arpl
mov
adc
nop
int3
xchg
int3
dec
enter
out
pop
and
int3
sbb
xchg
and
shr
(bad)
(bad)
dec
pop
add
add
movs
dec
addr16
(bad)
fsub
dec
rcl
pop
xchg
into
inc
pop
jmp
imul
sub
(bad)
adc
into
ja
pop
cdq
sub
or
pushf
sbb
cdq
(bad)
dec
ror
(bad)
xor
xchg
sub
or
and
sub
push
stos
pop
or
arpl
shr
jmp
dec
dec
mov
das
add
sbb
push
jb
xor
cli
bound
and
pop
jo
or
push
test
mov
rol
mov
inc
and
cmp
add
add
add
cmp
cmp
mov
bound
sub
sub
pop
or
pop
add
cmp
cmp
and
inc
xchg
add
dec
inc
in
xor
add
bound
fwait
sub
sub
add
or
dec
add
inc
add
lds
(bad)
cmp
nop
xchg
(bad)
dec
add
inc
dec
add
popf
xchg
add
sti
cmc
dec
add
in
add
pop
jge
add
or
add
jmp
add
sbb
and
add
add
jge
push
ins
mov
loopne
add
xor
or
cmp
xor
mov
cld
and
enter
or
in
enter
xor
enter
into
enter
in
adc
enter
mov
or
pop
aaa
xor
and
mov
and
and
dec
outs
nop
scas
xchg
and
and
repnz
cmp
and
and
stos
iret
pop
and
hlt
sbb
and
xchg
popa
and
adc
xor
xchg
xchg
xchg
sub
ret
sbb
sub
pop
sbb
jne
push
push
add
xor
xchg
or
enter
and
sub
push
sbb
adc
lea
inc
push
jno
adc
js
push
leave
mov
jmp
das
cs
and
sbb
sbb
adc
mov
out
push
inc
push
ins
dec
pusha
adc
cmps
xchg
jo
and
inc
mov
xor
(bad)
push
lahf
xor
inc
cmp
inc
mov
aad
setg
xor
push
mov
and
xchg
add
push
jnp
add
cmp
icebp
push
push
pop
mov
push
xor
push
cmp
pop
in
sbb
add
mov
ffreep
bound
aas
cmp
mov
lahf
jecxz
jmp
add
(bad)
and
adc
mov
cmp
imul
or
add
mov
adc
inc
inc
cmp
aaa
push
test
inc
das
data16
mul
or
sbb
xchg
nop
jo
pusha
in
push
push
sti
jo
jle
pop
add
adc
and
and
or
xlat
adc
lahf
nop
dec
inc
sbb
push
add
daa
sbb
sbb
pop
dec
or
add
add
or
jae
and
push
inc
push
jmp
test
sbb
xchg
call
dec
jmp
or
inc
mov
sbb
scas
or
inc
add
add
add
or
call
mov
push
in
xchg
inc
xchg
xchg
outs
or
leave
add
xchg
jmp
sbb
add
mov
dec
jbe
das
jo
pop
sbb
push
push
enter
sub
push
and
repnz
nop
push
sbb
adc
xor
pop
jo
push
jmp
add
(bad)
jnp
add
push
test
(bad)
cmps
std
push
or
jae
or
outs
sub
mov
into
je
xchg
xchg
adc
cmp
inc
outs
add
mov
xchg
push
fwait
dec
push
rol
push
inc
push
add
dec
fwait
push
jo
pop
jno
pushf
adc
add
je
add
push
cld
xchg
test
adc
xchg
into
xchg
daa
inc
and
pushf
adc
cwde
add
inc
add
or
add
or
retf
gs
or
or
add
ret
leave
mov
dec
or
inc
stos
cmps
dec
sbb
(bad)
pop
mov
xchg
xor
outs
adc
lods
push
adc
gs
mov
gs
imul
mov
cmp
test
mov
xchg
neg
loope
and
xchg
pop
std
adc
jne
test
or
mov
cmp
pop
loopne
mov
and
les
add
add
popf
sbb
shl
enter
jo
add
mov
pusha
xchg
inc
push
or
and
push
lock
add
sbb
push
cmp
jnp
adc
fadd
jmp
push
adc
ret
add
sub
adc
lock
outs
jecxz
or
mov
sahf
adc
dec
push
outs
ja
add
call
shufps
clc
cs
shl
mov
test
popf
mov
push
add
sahf
loopne
loop
cmp
adc
cmp
or
add
mov
das
daa
int
lea
or
ins
bound
or
call
dec
and
cmp
aaa
sub
ins
push
pop
inc
sbb
adc
mov
jl
mov
popf
or
enter
cmp
jl
enter
daa
dec
mov
hlt
cmps
or
fwait
call
aad
lahf
(bad)
rcl
mov
mov
pop
psubusw
push
sbb
cmc
out
and
xchg
push
cmp
or
xor
scas
or
inc
xlat
sar
jmp
dec
pusha
cmp
mov
or
aad
inc
cmc
push
mov
pop
mov
push
ret
test
xchg
cmp
push
jecxz
ffree
jne
ja
push
icebp
scas
pop
dec
push
or
sub
ja
nop
cwde
(bad)
adc
fidiv
rcl
push
xlat
adc
jne
add
push
call
add
(bad)
call
jmp
push
adc
add
dec
cwde
dec
enter
iret
les
dec
add
ret
adc
sub
add
pop
cmc
fistp
inc
fadd
sbb
push
dec
add
cmp
in
repnz
pop
leave
adc
adc
inc
xor
adc
adc
dec
sbb
jns
and
xor
pop
leave
mov
pop
add
add
sbb
sbb
sbb
add
xchg
sbb
add
add
xchg
pop
adc
pop
and
and
add
adc
xchg
pushf
and
and
and
or
and
jo
add
daa
cmp
mov
add
jecxz
sub
mov
lods
xchg
inc
and
sub
sub
nop
test
popa
repz
add
test
add
dec
xor
mov
xor
xchg
sub
enter
mov
add
xor
aaa
or
xchg
cmp
push
inc
repnz
loopne
cmp
xchg
jb
or
push
leave
inc
inc
inc
or
or
inc
inc
sbb
sbb
inc
inc
xor
cmp
xor
dec
and
out
repnz
lods
dec
rol
push
or
xor
ins
lea
xor
and
ja
xor
xor
xor
jb
push
jbe
lahf
sub
xor
in
xchg
or
and
mov
int3
push
test
add
push
mov
out
xor
add
xor
ret
cdq
and
or
sbb
cmps
leave
jmp
ret
push
or
fs
repz
jecxz
xchg
(bad)
loope
add
xchg
or
xchg
cwde
or
inc
adc
ins
adc
or
add
sub
rol
jo
cld
mov
inc
and
xchg
inc
lods
add
lea
pop
(bad)
jmp
cwde
xor
push
xor
les
add
push
pcmpeqb
loopne
sbb
fsub
add
test
lahf
dec
xchg
dec
inc
or
pushf
enter
outs
add
dec
imul
in
js
imul
repz
in
inc
push
push
dec
jo
cwde
add
sbb
loopne
adc
popa
ins
ins
pop
mov
stos
dec
popa
jb
cmp
enter
mov
fcmovnb
inc
sub
addr16
add
inc
mov
mov
outs
mov
(bad)
adc
adc
lock
jl
jmp
push
mov
push
fcomp
mov
mov
hlt
ss
push
pop
or
mov
xchg
loop
aam
lock
ins
jae
jno
outs
adc
jns
inc
lock
add
jo
mov
sbb
adc
cmp
cmp
movs
add
ja
or
test
adc
add
loop
movlps
mov
adc
push
pop
test
xchg
(bad)
std
loopne
les
push
push
mov
stos
pop
dec
sub
dec
sbb
outs
imul
movs
mov
add
loopne
bound
mov
push
cmp
inc
mov
mov
ror
jmp
bound
push
inc
and
inc
and
dec
and
and
mov
xchg
into
mov
add
or
nop
stos
sbb
and
jmp
mov
and
in
sbb
xchg
daa
sub
aam
fcomp
sub
sti
jo
adc
sub
nop
cwde
mov
inc
imul
or
pop
inc
sub
jmp
and
xor
inc
xor
push
xor
enter
xor
ss
(bad)
mov
pop
aaa
add
(bad)
inc
inc
cmp
in
jno
push
add
pop
divps
and
mov
pop
and
out
adc
or
push
jne
mov
xlat
cli
and
mov
(bad)
mov
popa
xor
mov
bound
xor
retf
popa
or
cmp
xor
loope
arpl
xor
xor
dec
jae
mov
jecxz
xchg
gs
cmps
ins
punpcklbw
cwde
pushw
fucomip
add
add
loopne
add
adc
out
test
mul
daa
add
add
loope
adc
gs
outs
inc
add
or
das
adc
outs
outs
imul
xchg
lock
or
sar
cmps
and
inc
pushf
test
bndldx
push
push
and
cs
push
loop
and
loopne
leave
(bad)
mov
dec
pop
sub
xchg
gs
jnp
add
std
sub
call
sbb
dec
inc
call
or
arpl
ret
aam
pop
or
mov
es
imul
jbe
cmp
push
in
iret
sti
sbb
push
fcomp
pusha
push
in
popa
push
adc
pop
mov
pushf
aaa
pop
push
fdivr
mov
ins
push
repz
movs
data16
push
jo
push
es
fs
sbb
or
sub
inc
cmps
xor
sub
sub
mov
shl
int3
xor
sub
or
aaa
mov
sbb
das
mov
or
dec
jecxz
and
pop
inc
inc
loopne
lock
adc
aam
test
mov
stos
or
pop
fcomp
push
add
adc
or
or
push
enter
test
push
push
mov
call
mov
jnp
sahf
out
inc
pop
shl
sbb
ret
push
hlt
fsubp
outs
nop
push
adc
cmp
adc
mov
push
cmp
lahf
inc
daa
fsubr
jno
mov
cmp
pop
pop
cmc
daa
or
push
add
lock
int
sbb
xchg
imul
push
ds
inc
pop
pop
jno
sub
les
mov
pop
pusha
push
out
fadd
cmps
clc
cmps
mov
enter
outs
mov
out
push
push
imul
hlt
or
xor
or
cmp
nop
imul
in
or
popf
lock
push
daa
xchg
add
push
pop
ins
xchg
aam
sahf
mul
lds
ror
push
xor
dec
add
sub
dec
push
mov
xchg
inc
adc
push
dec
(bad)
push
mov
sbb
push
pop
retf
push
add
arpl
pop
dec
add
jns
pop
inc
inc
and
sub
mov
sub
sub
fild
sub
mov
js
ror
sbb
xchg
push
mov
jo
dec
mov
loope
add
out
loopne
sub
xlat
cmp
sbb
push
mov
faddp
jnp
test
fsubr
adc
lahf
lea
push
ins
mov
pop
fwait
xchg
mov
sbb
mov
sar
lods
test
mov
or
mov
jbe
adc
mov
or
daa
sbb
movs
and
(bad)
jge
sbb
sbb
cmp
jmp
pop
mov
adc
sbb
xchg
gs
cs
shr
pop
or
dec
inc
fs
idiv
jo
int3
inc
ret
push
mov
pop
add
add
add
sbb
mov
dec
lock
or
sub
mov
sbb
loopne
and
dec
mov
inc
xor
add
or
lea
mov
sti
sub
fmul
mov
jecxz
push
jae
hlt
pop
mov
inc
sti
and
out
sub
fidivr
mov
add
add
clc
and
ins
pusha
fsubr
movs
xor
sbb
push
add
push
jno
cli
out
mov
test
out
mov
and
cmp
cmp
dec
sete
in
lds
or
jb
sbb
cmp
adc
jae
xchg
je
and
outs
and
je
push
fxch
out
dec
fadd
push
add
out
test
or
sbb
ja
xchg
sub
out
movzx
jl
jbe
and
aad
in
xor
jae
push
pusha
arpl
aaa
add
sbb
xor
cmp
gs
arpl
push
or
push
xor
daa
or
repnz
jno
adc
call
sub
and
(bad)
mov
and
js
setg
xchg
sub
or
adc
pop
stos
jne
arpl
add
js
pusha
adc
add
mov
movs
xor
pop
lods
icebp
add
pop
in
xchg
int3
mov
add
cmp
push
clc
and
and
sub
es
test
cld
sahf
popa
ror
adc
and
jnp
mov
mov
cmps
sbb
inc
cmp
jno
add
or
movs
push
xchg
push
pop
aaa
in
xor
daa
add
cmp
sub
pop
xacquire
test
and
dec
fucomip
stos
or
mov
inc
push
inc
sub
dec
out
loopne
movs
inc
and
push
push
fsubr
das
popa
sbb
xor
js
rol
xchg
enter
(bad)
push
inc
in
fs
adc
or
popa
clc
xor
scas
inc
aam
out
je
sti
adc
mov
dec
inc
pop
movzx
xchg
jp
iret
inc
and
or
sar
jmp
or
dec
or
dec
add
or
iret
fxtract
mov
add
pop
sub
jge
js
(bad)
and
arpl
or
add
dec
adc
xor
xor
scas
push
inc
jmp
xor
pop
add
mov
add
pushf
jmp
mov
push
in
add
cs
push
outs
push
add
and
mov
nop
or
xor
mov
in
xor
mov
ret
inc
xchg
or
xchg
and
sbb
push
mov
stos
test
cmps
push
pop
or
push
mov
mov
and
or
test
mov
add
xor
or
cmc
push
push
arpl
add
inc
adc
push
mov
les
sub
outs
fcom
btc
test
push
cmp
rol
mov
mov
add
mov
inc
dec
shl
xchg
ror
mov
xchg
rcl
dec
(bad)
aas
push
add
les
repnz
adc
adc
and
outs
xchg
stc
inc
and
out
pop
(bad)
aam
ret
aam
out
fs
cmp
add
loopne
(bad)
retf
or
pop
pop
aas
pop
adc
mov
mov
scas
adc
push
push
xor
ror
ins
iret
rol
or
mov
out
ja
and
nop
sub
mov
mov
push
adc
add
sbb
mov
dec
inc
add
sub
inc
push
jmp
mov
sbb
or
jnp
bound
mov
pusha
xchg
sub
xor
or
push
mov
rol
mov
sub
and
jo
dec
fwait
sbb
adc
pop
jbe
mov
cmp
pop
push
jmp
and
inc
inc
or
xchg
mov
dec
es
mov
or
push
jl
jns
addr16
push
mov
cmps
xchg
sub
sub
and
add
popf
sbb
imul
mov
rol
mov
mov
mov
and
jg
or
mov
add
inc
add
sub
push
push
sub
pusha
daa
or
mov
pop
push
inc
pop
and
add
pop
movs
mov
aaa
jno
ret
dec
add
cmp
mov
push
jb
push
ins
mov
add
(bad)
mov
je
mov
dec
pop
dec
call
sbb
push
xchg
jae
mov
push
movs
pavgw
in
jbe
popa
outs
xchg
mov
push
push
arpl
fisub
and
or
shr
sahf
lahf
mov
cmp
bswap
in
sbb
nop
fild
mov
into
sahf
mov
iret
push
add
(bad)
inc
jecxz
add
sti
loopne
das
pop
or
or
(bad)
push
movs
nop
mov
sbb
js
sbb
pop
mov
ja
jmp
mov
fist
sbb
sbb
add
mov
sbb
dec
sbb
jmp
dec
and
arpl
cmp
fucomip
sbb
xchg
call
and
cmp
shl
mov
add
inc
jb
xchg
xor
popf
es
mov
mov
add
push
ret
mov
(bad)
push
rol
call
daa
pop
xchg
ret
mov
mov
cwde
pop
pop
mov
mov
ret
sbb
xor
pop
test
std
je
cmp
xchg
pusha
sub
mov
sub
adc
adc
movs
inc
call
xchg
or
push
push
(bad)
popa
add
inc
and
mov
pop
cmps
lock
lods
mov
arpl
aaa
cli
fadd
je
cmp
hlt
bound
lea
(bad)
loope
mov
cmp
jg
dec
mov
cwde
add
add
add
or
inc
or
push
add
ret
inc
inc
dec
adc
mov
(bad)
cli
cmp
cmp
mov
sub
das
ss
div
ror
jle
or
in
push
cld
inc
jl
icebp
aas
lea
add
mov
xchg
pop
sub
cmp
je
in
push
test
dec
nop
outs
push
adc
hlt
lock
fdivr
jl
in
pusha
ins
jmp
xchg
div
xchg
(bad)
and
and
adc
adc
cs
sub
xchg
add
dec
xlat
cmps
pushf
sub
pusha
loopne
and
push
test
sbb
lock
adc
lds
cmps
sub
cmp
inc
lea
sub
dec
add
hlt
rol
ud1
movs
mov
dec
jne
push
push
lods
adc
shl
inc
lock
pop
js
mov
lds
mov
and
cmp
shr
inc
cld
jae
jno
shl
push
jg
push
push
push
cmp
jg
pop
push
sbb
call
add
xchg
xor
add
sti
sub
cmp
out
add
and
clc
add
ss
ftst
mov
ficomp
sub
sbb
xor
mov
lds
call
(bad)
hlt
ficomp
(bad)
xchg
movs
ins
imul
(bad)
popf
adc
and
lahf
xor
inc
fsub
cmp
sub
mov
jmp
dec
add
pop
sbb
in
mov
jg
and
adc
lock
inc
or
nop
fdiv
(bad)
inc
aam
push
adc
and
ror
add
add
mov
or
jmp
fs
dec
inc
and
(bad)
cmps
and
and
cmp
and
les
inc
add
xchg
mov
xchg
fdiv
aam
pop
and
lock
or
sub
mov
and
add
lock
adc
int3
push
aam
pop
sbb
and
repnz
xchg
xor
push
sbb
outs
push
mov
lea
clc
mov
or
push
rcl
add
add
pop
pop
push
or
pop
add
inc
add
daa
jl
lods
ror
or
fwait
ins
xor
cmp
mov
aam
mov
pop
mov
lds
mov
or
test
movs
cmp
sbb
fldcw
jbe
cmp
xchg
sub
add
rcl
ror
es
push
jae
cmp
jle
fbstp
mov
daa
pop
test
cdq
sbb
aaa
or
or
jl
dec
fwait
add
shl
inc
mov
adc
mov
ret
xlat
inc
and
inc
mov
sbb
mov
inc
lea
add
pushf
mov
and
xor
add
retf
ret
mov
xchg
jo
xchg
xchg
mov
xor
fwait
int
mov
mov
mov
xor
dec
ret
and
and
je
int
adc
addr16
inc
or
das
cmp
dec
add
dec
pop
mov
es
inc
mov
je
test
je
outs
cld
mov
and
movs
neg
das
dec
sbb
xchg
clc
dec
dec
test
push
ins
fild
pop
inc
ror
xor
add
push
push
mov
rcl
mov
loope
adc
jbe
mov
(bad)
js
aaa
adc
dec
lods
xlat
mov
xchg
adc
jle
xor
or
push
mov
inc
lods
add
sbb
xlat
xor
cld
xor
outs
das
push
je
mov
jmp
pushf
jl
xor
or
and
mov
iret
scas
(bad)
adc
inc
mov
mov
adc
sub
pop
loopne
retf
or
repz
out
jo
pop
ret
and
jle
push
adc
mov
sbb
sbb
call
imul
sbb
xor
mov
add
imul
mov
or
add
cmp
push
cmp
std
push
call
sub
mov
fsubr
add
cmp
cld
loope
add
sar
add
adc
shr
sub
das
stos
push
dec
sar
add
xchg
or
push
xchg
lea
sub
clc
je
sub
pop
sbb
or
jae
push
jbe
pop
retf
add
neg
adc
jne
mov
neg
dec
mov
xor
daa
dec
jmp
push
inc
pop
xchg
inc
mul
cmp
add
or
pop
sub
shl
test
(bad)
sub
clc
jge
sub
mov
jge
imul
add
ins
pop
stos
ins
jl
inc
xlat
xlat
sbb
mov
das
dec
jle
pop
(bad)
aam
and
(bad)
das
ror
jne
out
sub
fld
mov
jmp
push
fstp
add
and
and
sbb
add
mov
xor
or
daa
xchg
jecxz
cld
push
and
jne
imul
ins
inc
xchg
jl
pop
pop
add
stos
and
ficom
bnd
xchg
mov
pop
inc
mov
mov
push
sub
addr16
ret
add
sub
adc
jl
jecxz
enter
popf
inc
cld
ret
push
call
cwde
cmc
cdq
test
pop
(bad)
lds
adc
push
adc
ret
mov
aas
add
dec
cmp
mov
add
test
mov
ficomp
add
jo
(bad)
pop
adc
stos
dec
add
gs
dec
sub
fistp
imul
lahf
push
les
adc
or
ror
mov
cmc
sbb
lods
push
dec
js
ficom
and
sahf
and
or
popf
adc
pop
jmp
add
adc
sahf
lods
cmps
xor
inc
sub
mov
loope
daa
sub
mov
jmp
js
loopne
addr16
in
movaps
add
retf
ja
pusha
ss
jo
ret
pop
push
dec
icebp
rol
mov
(bad)
in
push
jbe
adc
jge
inc
mov
shr
lea
arpl
cwde
imul
push
gs
sub
mov
adc
add
adc
pop
inc
test
xchg
cmp
pop
sbb
mov
mov
mov
ja
rol
xchg
test
mov
test
nop
and
cmc
push
pop
pop
sub
jecxz
xor
sub
dec
push
pop
inc
pop
or
stos
xor
int
add
add
sbb
dec
hlt
js
cmp
lds
push
mov
cli
and
pop
add
or
sub
movs
inc
shl
or
popf
xchg
push
sbb
adc
or
or
mov
cmp
out
adc
inc
shl
popa
or
in
lds
test
cmp
and
cmp
adc
add
fiadd
ror
or
mov
popa
inc
and
xlat
adc
test
fs
fild
or
jnp
sbb
je
xor
and
fild
mov
aam
adc
add
pop
or
adc
adc
sub
xchg
pop
fbstp
dec
das
adc
or
mov
dec
dec
inc
cmp
cs
ret
ret
lea
sub
xchg
pop
arpl
add
pushf
inc
cli
repz
cmp
cmp
fdiv
sbb
lea
enter
pushf
ret
mov
jge
enter
add
xor
in
pop
aad
rcl
aam
fadd
popf
sbb
xlat
pop
lock
mov
(bad)
test
repnz
imul
lahf
rcl
mov
rcr
xchg
(bad)
xor
loope
mov
xor
mov
fadd
pusha
pop
mov
sub
sub
lock
sub
nop
xchg
ret
and
std
rol
je
dec
adc
jns
adc
add
and
add
iret
dec
ret
out
xchg
adc
sbb
out
cmp
mov
fcom
add
sbb
mov
mov
push
push
push
push
push
cmps
call
and
fdiv
dec
inc
clc
push
popf
movs
dec
add
les
dec
cmps
push
inc
inc
push
push
inc
lea
aam
and
push
push
nop
cmp
add
inc
pop
loopne
js
push
mov
jbe
or
outs
mov
sbb
sub
push
lea
sbb
mov
lea
jo
mov
sub
or
cmp
and
in
jmp
ins
shl
fdivr
lods
pop
imul
adc
sub
je
xor
nop
xchg
jmp
jmp
sbb
test
inc
sub
pop
clc
push
call
or
xchg
and
lods
adc
hlt
add
cmp
scas
adc
inc
xor
xchg
adc
inc
sub
imul
jl
leave
adc
scas
inc
fsubr
xchg
mov
repz
adc
test
and
push
call
out
fcomip
push
mov
mov
cmp
out
imul
mov
cmp
adc
adc
lods
cmp
sub
add
push
dec
xchg
sahf
mov
(bad)
dec
pop
ja
xor
fwait
ss
dec
inc
sub
out
mov
sub
cmc
sbb
push
bound
jnp
sub
mov
loope
sub
sbb
loope
jnp
ret
imul
push
outs
popa
push
outs
inc
sbb
pop
mov
popa
retf
mov
mov
xchg
lods
xchg
mov
xlat
fcmovnbe
mov
inc
push
sbb
stos
int
stos
jmp
ret
ror
xchg
and
adc
movzx
dec
adc
mov
je
push
cs
sbb
clc
pop
mov
test
ins
jbe
push
add
(bad)
xchg
movs
call
inc
loope
(bad)
pop
je
sbb
test
mov
les
add
wbinvd
gs
mov
test
addr16
adc
adc
xchg
mov
mov
mov
ret
popa
aam
ret
sub
add
cmp
movs
xchg
rcr
aam
sub
mov
cmp
dec
(bad)
cmp
and
ins
cvttps2pi
cwde
xor
ja
and
dec
dec
movs
loope
out
jne
xor
hlt
xor
adc
(bad)
jp
add
xchg
lods
dec
mov
dec
dec
xor
(bad)
sbb
aam
or
jne
addr16
xchg
cmp
push
fs
call
jne
xchg
retf
adc
sbb
daa
inc
inc
jle
cmp
mov
(bad)
fisttp
cmp
or
adc
add
xor
fcom
jnp
hlt
sub
mov
pop
push
xchg
mov
sub
pop
fadd
fdivr
test
cwde
xor
jg
mov
loop
ficom
add
mov
jmp
and
lods
push
pop
add
test
and
sub
sbb
push
sbb
loope
clc
push
jmp
mov
pop
mov
test
and
pop
jo
inc
or
add
lock
jecxz
cmps
or
lea
add
push
les
inc
or
sub
scas
aas
mov
or
xchg
out
adc
popf
cs
fwait
pushf
mov
pop
mov
bound
pop
inc
xchg
movs
loopne
jmp
aaa
test
cmp
dec
rcl
xchg
test
test
lea
jmp
push
inc
iret
inc
add
sub
mov
xchg
dec
jae
add
push
les
les
test
or
jmp
daa
cmp
jmp
mov
rol
add
jne
and
add
out
sub
test
push
mov
mov
mov
jp
ret
scas
mov
fwait
jge
mov
push
cdq
sahf
sbb
xor
or
imul
pop
or
cmps
xchg
(bad)
mov
inc
fucomp
(bad)
adc
or
cmp
out
jmp
and
xor
loopne
popf
or
sub
add
jg
inc
fadd
inc
mov
movs
cmps
cmps
push
sub
push
cmp
cmps
dec
or
cdq
inc
xlat
mov
pop
or
mov
xchg
inc
cmp
loop
loopne
or
(bad)
inc
jo
mov
adc
push
ror
dec
es
add
test
push
add
xor
pop
cmp
xchg
aaa
push
clc
bound
jbe
mov
aas
mov
ret
das
lock
pop
mov
add
cwde
(bad)
addr16
xchg
mov
push
data16
sub
pop
add
stos
scas
and
dec
sbb
out
cmp
push
sbb
ror
(bad)
inc
pop
dec
xchg
push
mov
add
add
add
or
xchg
nop
mov
cdq
inc
movs
inc
mov
aaa
xchg
adc
dec
add
push
push
adc
jp
or
sbb
push
and
ficomp
pop
pop
xor
pop
aas
mov
add
push
jmp
iret
cs
popa
sub
cmc
mov
cwde
pop
pop
sub
int
push
sub
push
push
in
ficom
cmp
sub
adc
push
add
in
dec
inc
cwde
or
xor
xor
cdq
ror
inc
sbb
les
xor
movs
dec
push
je
ret
sti
dec
aam
adc
loopne
add
lds
stc
push
ins
lock
ficomp
jl
cmp
shl
(bad)
xor
test
cmp
jge
mov
cmp
jge
and
fwait
xchg
arpl
push
les
mov
mov
inc
and
mov
adc
(bad)
or
and
mov
shl
scas
xchg
int3
test
or
or
and
inc
jb
push
stos
mov
inc
leave
mov
push
adc
pop
dec
test
lods
push
adc
or
movs
mov
pop
cmps
mov
pusha
or
sbb
or
fdivr
std
jnp
xor
jns
mov
xchg
mov
or
jg
mov
and
and
sub
or
test
add
xor
sahf
mov
or
add
push
sub
mov
mov
test
inc
clc
daa
cmp
or
mov
and
int
add
mov
push
aam
sar
mov
enter
out
push
cmp
imul
movzx
mov
inc
sub
jmp
js
mov
jmp
and
push
mov
test
add
out
js
inc
sbb
jne
xchg
(bad)
mov
repnz
push
mov
retf
lock
dec
push
jle
adc
cmc
xor
mov
ja
mov
cmps
xchg
lods
cmp
xchg
fsubr
xchg
mov
vphsubwd
and
rol
imul
test
(bad)
jmp
jnp
dec
add
jge
dec
rcl
pop
pop
pop
inc
inc
call
push
cmps
or
adc
add
test
pop
test
cmp
add
aas
cld
xchg
fiadd
cmp
pop
jmp
sbb
pop
cmps
pop
adc
inc
mov
inc
mov
test
rcl
pop
cmp
push
in
stc
scas
or
push
adc
nop
jmp
and
adc
hlt
test
lods
rcl
or
sbb
sub
add
sub
pop
inc
aam
push
adc
xchg
add
aad
shl
ja
push
fsub
xor
mov
fs
or
dec
cdq
mov
mov
jmp
or
mov
pop
in
popf
xor
pop
ss
or
jnp
push
jno
sbb
pop
cmp
sbb
loope
fisttp
ins
jmp
sub
push
sub
les
das
push
xor
xor
cmps
rol
addr16
mov
jmp
sub
lea
push
inc
imul
sub
scas
xchg
sbb
dec
(bad)
pop
push
lock
ja
loope
(bad)
enter
cmp
add
test
mov
pusha
cmp
jb
arpl
xchg
pushf
jmp
add
mov
ss
das
popa
xor
repz
inc
and
jmp
push
and
mov
pushf
cmp
and
jg
imul
and
(bad)
sub
test
cli
mov
fwait
inc
or
ret
arpl
fwait
in
sbb
iret
xlat
push
push
fs
nop
das
sub
rol
fs
mov
or
not
movs
or
push
js
sahf
test
pusha
xor
mov
mov
xchg
pop
adc
sbb
cmp
fsub
les
mov
mov
jo
fist
adc
and
pop
or
nop
push
cmp
dec
aas
cmp
cmp
inc
add
sub
repnz
inc
loope
xchg
movhps
push
aaa
test
sete
push
jae
push
xor
xchg
xchg
(bad)
cmps
adc
rep
das
add
push
lea
sbb
sub
jecxz
and
outs
rcr
rcl
out
push
(bad)
push
xchg
or
(bad)
call
jne
push
fs
lahf
push
add
mov
pop
mov
sub
ins
add
test
loope
and
pop
lahf
jle
and
(bad)
call
call
pop
popa
pop
sar
jl
adc
outs
inc
inc
mov
xor
fsubr
and
push
scas
fisttp
jbe
test
(bad)
add
cmps
add
and
sub
sub
mov
dec
sub
inc
in
inc
xor
aam
cmp
add
jnp
pop
ror
or
shr
cmp
jle
or
fistp
inc
dec
cmps
or
je
dec
sub
dec
or
adc
mov
mov
daa
dec
out
js
pop
dec
xchg
and
in
in
sub
sti
lods
add
push
pop
add
ins
sub
mov
loopne
cmp
das
xor
rcr
xchg
push
add
inc
sub
jmp
push
adc
xor
mov
pop
cmps
ror
jno
sub
or
sbb
ret
mov
dec
les
ret
int3
inc
cmp
inc
lea
add
ret
pushf
push
jae
inc
fild
or
xchg
mov
push
popf
and
xor
jmp
sbb
sub
and
call
cs
mov
fwait
push
inc
sbb
fwait
xor
add
or
sbb
add
sub
enter
movs
scas
pop
xor
daa
and
add
sbb
mov
jl
daa
cs
xor
push
lods
adc
test
test
(bad)
cmp
push
mov
nop
pop
mov
cs
mov
adc
and
jmp
mov
dec
dec
call
sbb
js
std
movs
les
cmp
jge
daa
or
jmp
movs
cld
nop
dec
or
sbb
arpl
test
adc
mov
or
nop
xchg
lahf
add
or
pop
push
loopne
mov
push
add
add
fist
adc
xor
adc
mov
pop
aad
adc
add
add
loopne
call
xchg
idiv
or
daa
push
mov
push
jl
ret
int3
dec
call
test
movnti
fadd
add
lods
imul
sbb
stos
jno
test
dec
loopne
add
int
jbe
sbb
jg
pushf
and
gs
clc
pop
add
cvtps2pd
xchg
mov
push
retf
clc
(bad)
pop
add
and
lea
(bad)
push
or
pop
xor
dec
cli
jne
daa
mov
mov
lahf
in
inc
fimul
push
mov
or
inc
and
das
pop
jp
jmp
adc
les
in
add
inc
sub
dec
push
arpl
mov
frstor
gs
or
cmps
xor
mov
mov
xchg
or
in
fwait
imul
cmp
iret
enter
daa
mov
cwde
popa
and
nop
sbb
test
and
xchg
das
sbb
dec
mov
push
and
out
mov
jno
cmp
out
sbb
mov
jbe
ja
inc
test
inc
test
or
and
dec
push
mov
push
mov
mov
mov
cwde
and
mov
hlt
fisttp
and
hlt
hlt
js
movs
mov
xor
in
xchg
js
pop
(bad)
push
sbb
and
cmp
out
gs
push
fdiv
in
xchg
shl
(bad)
fist
xor
ins
fldcw
stc
shl
mov
jno
add
ror
xor
cvtps2pi
mov
or
push
enter
adc
push
mov
les
pop
mov
push
mov
jp
adc
lods
push
jg
pop
adc
sbb
les
nop
cmps
lods
or
bound
aaa
ins
fiadd
push
test
lods
mov
mov
mov
in
dec
lods
cmps
jnp
push
enter
and
or
mul
xor
fs
sbb
pop
inc
je
inc
xchg
or
dec
xor
push
stc
or
inc
pop
dec
push
xor
and
pusha
sbb
push
inc
jo
or
(bad)
iret
cmp
inc
push
ret
jne
arpl
sti
mov
jmp
or
sbb
(bad)
mov
jne
jnp
in
push
dec
enter
sub
mov
mov
jae
pop
cs
or
or
jne
mov
lods
fdiv
lods
jl
das
pop
das
push
outs
fs
sbb
(bad)
jne
leave
movs
cld
pusha
push
pop
stc
xor
xor
xor
arpl
out
jne
loope
les
popa
in
rdtsc
push
in
dec
rcl
sbb
add
shl
push
in
adc
jb
push
sbb
mov
std
pop
test
xor
mov
mov
adc
lea
xchg
jo
loop
push
adc
add
and
ret
add
es
or
iret
iret
jne
pop
jne
push
cmp
and
movs
(bad)
int3
loopne
and
retf
add
int3
(bad)
movs
les
pop
or
es
retf
xor
xchg
nop
fadd
into
adc
and
ret
jne
cmp
adc
sahf
adc
test
imul
or
add
and
leave
sub
add
fidivr
add
inc
mov
in
cmps
dec
push
retf
mov
adc
mov
inc
retf
pop
retf
pusha
sbb
sub
pusha
sub
retf
push
retf
lahf
in
and
inc
inc
retf
pop
(bad)
outs
mov
cmps
pop
retf
cmp
adc
add
das
aam
sub
cmp
cmp
cmc
gs
push
pusha
sub
jmp
pop
and
pop
adc
add
push
push
mul
cmp
or
lock
jne
inc
test
push
addps
pop
pop
les
xchg
popf
add
rcl
or
cs
xor
or
adc
push
fbld
add
adc
cmp
je
sub
outs
cmp
das
sbb
push
jns
pusha
inc
dec
std
in
pop
pop
imul
mov
dec
push
pop
sbb
push
push
add
hlt
call
dec
xchg
mov
sub
mov
add
mov
adc
add
adc
ins
push
push
nop
cmp
rcr
xor
inc
sub
xchg
xor
add
mov
xchg
inc
sahf
ret
jecxz
popa
int3
mov
jle
mov
xchg
add
dec
repnz
xor
dec
sbb
adc
adc
xor
pop
int
dec
mov
inc
stos
mov
in
sbb
int
push
or
mov
dec
xchg
cwde
add
and
push
ins
dec
mov
ins
add
pop
test
mov
jp
ins
(bad)
pop
inc
cmp
mov
jnp
test
in
mov
pop
ds
add
inc
mov
adc
push
sub
sub
(bad)
pop
add
or
jae
dec
push
xor
shl
or
add
sbb
add
inc
or
mov
ror
les
sbb
lea
sub
lock
sbb
mov
clc
ds
inc
xor
or
jae
jbe
popa
xor
sbb
cmp
imul
imul
xor
sbb
cdq
int
xor
dec
loop
add
mov
jb
das
pop
push
or
push
fisubr
add
jp
ret
pusha
(bad)
loopne
jne
lods
rol
gs
ins
jne
cmp
sbb
call
hlt
xor
adc
xor
cmc
out
or
popf
into
popf
add
and
sbb
cli
cmps
xor
push
inc
sub
inc
and
clc
push
ret
xchg
in
xchg
cmp
inc
(bad)
std
adc
rol
push
lahf
xor
push
mov
popf
(bad)
pusha
int
push
lods
dec
call
cld
addr16
sbb
push
or
xor
stc
mov
dec
loopne
mov
cmp
outs
aaa
push
push
cmps
cmp
push
and
xor
aas
xchg
inc
hlt
mov
lds
int
cmps
retf
or
mov
aam
movs
and
adc
xchg
dec
repz
pop
fild
inc
sub
adc
clc
lea
add
pop
popa
pop
add
test
mov
sub
cmp
sub
xor
cmp
cdq
enter
xchg
(bad)
in
dec
mov
sub
(bad)
sbb
in
leave
push
lods
xor
xchg
retf
out
pop
popf
mov
mov
std
fidiv
inc
mov
dec
push
pop
data16
repz
int
leave
pop
shl
sti
and
std
sub
or
out
push
stos
rol
icebp
cmp
and
aam
std
jne
lea
push
jne
dec
dec
jmp
add
(bad)
adc
push
dec
dec
enter
inc
retf
jp
sub
jge
rcr
push
test
adc
outs
les
lock
push
xchg
dec
xor
inc
lock
inc
in
xor
mov
or
sbb
cs
and
adc
mov
cld
inc
and
and
and
inc
jge
loop
cmps
jo
cmp
pop
in
and
mov
cwde
sbb
mov
adc
cld
push
push
dec
test
mov
push
or
(bad)
add
xchg
test
cmp
sbb
pop
fdiv
dec
cmp
cdq
ret
cdq
and
xchg
enter
pop
ds
fwait
jmp
fisubr
je
add
pop
push
add
aaa
add
inc
lds
or
mov
add
ss
inc
add
add
pop
and
inc
push
sub
jp
xchg
sub
push
gs
in
mov
scas
mov
mov
push
pop
inc
call
bound
mov
hlt
ins
inc
fmul
imul
and
test
xor
inc
call
add
jge
in
sbb
push
out
ret
(bad)
and
mov
fstp
sub
stos
icebp
fst
pop
adc
movs
je
mov
mov
add
sbb
sbb
fisubr
push
lock
sub
nop
retf
leave
mov
pop
rol
stos
lods
enter
ret
mov
nop
stos
test
pop
mov
inc
sub
or
cmp
and
or
pop
push
mov
retw
leave
mov
xor
in
out
pop
(bad)
in
xchg
pop
add
rol
add
in
jmp
ret
mov
add
cmc
hlt
nop
rcl
js
sub
add
mov
xchg
cmp
jbe
mov
fadd
add
mov
ins
mov
rcr
lock
cmp
add
jne
sub
cmp
test
(bad)
xor
or
clc
jecxz
mov
jmp
pop
or
inc
test
push
arpl
sbb
adc
mov
push
dec
pop
adc
push
cwde
femms
add
leave
push
je
ins
stos
add
adc
adc
add
and
pop
fs
mov
or
je
or
inc
sbb
cld
out
lods
sub
add
sbb
cmp
fild
xor
jno
(bad)
and
push
sub
inc
(bad)
cmp
cmp
stos
dec
or
add
xchg
xchg
dec
shl
hlt
inc
ret
pop
test
outs
xchg
into
and
or
fmul
lock
pusha
or
or
mov
adc
adc
add
and
inc
shl
nop
add
dec
jb
mov
add
push
inc
repz
xor
xchg
imul
xor
ficom
mov
jbe
cmps
pop
pusha
in
adc
inc
cmps
sub
and
add
mov
sbb
movs
shl
mov
ret
pop
ret
(bad)
jl
mov
ins
pushf
jge
and
(bad)
mov
xor
loope
das
and
push
fs
clc
xchg
pop
addr16
dec
dec
stos
sub
mov
rcr
test
push
push
ror
clc
ret
pop
dec
add
(bad)
cld
pop
pop
rcr
push
mov
imul
pop
sbb
xchg
pop
mov
sbb
pop
xor
sbb
pop
cld
mov
retf
or
xor
outs
imul
adc
dec
inc
sub
pop
add
stos
mov
pushf
ss
sub
add
xor
push
mov
adc
adc
push
sbb
dec
es
or
push
add
lea
out
xchg
jp
popa
movs
xchg
rol
mov
xchg
push
push
sub
gs
mov
pop
and
outs
push
jmp
gs
mov
and
and
pop
jo
jmp
dec
add
pop
or
inc
or
cmp
add
loopne
movs
and
push
add
(bad)
rol
jno
pop
lds
jg
sub
or
xchg
push
jns
cdq
sbb
add
cmp
test
hlt
ja
jns
mov
pop
xor
sub
pop
push
sub
loop
test
(bad)
add
and
push
rol
sub
hlt
adc
inc
or
push
retf
hlt
jno
mov
je
pop
aad
jmp
cld
and
adc
inc
and
jmp
test
pop
jno
add
je
mov
retf
(bad)
outs
jge
jb
sub
jne
sub
loopne
pop
xor
ja
lods
jmp
xor
and
or
jmp
lods
jg
je
mov
mov
(bad)
mov
inc
or
mov
jno
jl
js
cmp
imul
popf
je
jno
push
imul
in
jg
push
je
dec
and
(bad)
or
inc
jp
and
mov
and
ins
and
std
sub
clc
aas
outs
es
aaa
push
mov
dec
pop
cmp
adc
and
push
push
jmp
jge
sbb
in
test
nop
(bad)
iret
or
add
add
rcr
mov
mov
jp
push
mov
(bad)
fs
adc
add
xchg
mov
aaa
and
retf
ret
iret
jne
and
push
inc
loopne
xchg
sub
setge
(bad)
cmp
add
es
mov
xchg
lock
ds
inc
stos
mov
adc
(bad)
call
push
loopne
dec
or
dec
xchg
clc
and
stos
and
push
rol
test
push
in
scas
data16
ror
inc
bound
popa
adc
jo
das
pop
das
js
loope
pop
das
inc
or
xor
or
mov
and
jb
jae
dec
sysenter
xor
jb
sub
and
xor
jb
sbb
dec
fnstenv
adc
dec
dec
inc
dec
inc
pop
inc
dec
dec
push
inc
push
push
push
inc
test
mov
outs
mov
sub
pop
jo
jp
and
mov
add
arpl
jg
sbb
pushf
sahf
(bad)
dec
push
push
je
ins
(bad)
jmp
add
ins
add
out
inc
mov
ret
jnp
mov
and
cs
ins
scas
add
and
add
daa
jmp
jb
jns
ins
cmps
ds
pop
outs
inc
jnp
and
mov
cli
test
ss
inc
loope
dec
xchg
enter
inc
jns
push
(bad)
outs
retf
pop
pop
sbb
in
fisttp
adc
imul
scas
xchg
test
jae
fist
xor
inc
xlat
sbb
mov
test
sub
push
sti
xchg
jle
push
cwde
fs
mov
pop
push
es
sub
and
dec
(bad)
jg
dec
mov
dec
adc
add
push
mov
inc
jle
pushf
inc
test
in
pop
adc
jae
repz
adc
inc
cmps
cmp
mov
or
inc
gs
or
sub
(bad)
popa
add
pusha
repnz
fild
lods
ds
mov
cmps
lods
lea
fwait
js
push
adc
ret
push
in
inc
test
dec
jne
jnp
fist
mov
adc
dec
arpl
cmc
rcr
or
push
pop
hlt
cmp
aas
test
or
mov
and
pop
loopne
(bad)
adc
dec
dec
es
fdiv
fstp
add
adc
or
lods
iret
pop
dec
scas
mov
aam
push
adc
add
fcom
inc
data16
push
cwde
ror
mov
fnstsw
jge
in
mov
jl
inc
add
dec
push
add
fidivr
hlt
scas
les
jl
xor
repz
jle
mov
in
(bad)
popf
out
dec
lods
sbb
nop
push
xchg
enter
test
xchg
out
add
mov
add
mov
cmp
lea
and
outs
jae
ins
add
push
pushf
sub
test
aam
jnp
adc
adc
in
inc
aas
and
rcpps
cmp
in
mov
inc
xchg
or
addr16
popa
je
clc
fbstp
call
jae
outs
jb
mov
adc
push
jb
push
popa
xor
mov
add
ficomp
iret
mov
pushf
das
mov
adc
push
inc
out
push
mov
loopne
push
sbb
(bad)
pop
scas
lds
in
push
dec
dec
dec
les
xor
push
mov
lock
jae
outs
dec
add
mov
sbb
bound
xchg
mov
bound
sbb
popa
lods
inc
sub
or
dec
dec
stos
add
fs
push
or
sub
adc
push
jb
sbb
add
or
or
pop
pop
xchg
outs
adc
dec
mov
adc
imul
inc
adc
out
jno
and
adc
inc
add
sbb
and
add
in
in
bound
add
or
sbb
or
outs
xor
xor
data16
sbb
daa
and
mov
scas
lock
nop
cmps
mov
lock
or
std
cld
adc
lods
and
pop
jp
or
or
adc
push
push
dec
jo
push
mov
nop
or
lods
xchg
dec
push
adc
sbb
outs
(bad)
mov
push
inc
push
dec
mov
xor
call
pop
mov
dec
sbb
mov
dec
ss
mov
lock
sub
lock
scas
inc
cmp
nop
or
mov
(bad)
push
es
pop
pop
rol
push
cmp
je
clc
jmp
movs
xchg
hlt
or
xor
cmovb
loopne
xor
(bad)
aam
or
ja
mov
jnp
loopne
lods
sahf
test
iret
adc
stos
lock
loop
or
out
add
pop
pop
xchg
cld
mov
clc
push
std
push
pop
rcl
mov
lods
cmp
push
jns
inc
cs
push
or
xor
add
pushf
jg
inc
jnp
rcr
mov
or
(bad)
call
cwde
and
outs
xor
dec
loop
push
inc
mov
movs
leave
aam
repnz
add
jg
fcomp
(bad)
mov
pop
call
xlat
popf
rol
add
pop
adc
test
xchg
cmp
gs
pop
fs
dec
shr
pop
dec
popa
outs
popa
addr16
and
inc
ret
dec
inc
cdq
(bad)
icebp
sbb
xchg
cmp
outs
pop
add
inc
pop
pop
cmp
movs
repz
inc
sbb
push
and
add
xchg
jecxz
ds
inc
or
inc
lods
adc
dec
pop
pop
pop
xchg
clc
arpl
ret
not
pop
xor
inc
ror
jno
sbb
pop
add
ja
mov
add
xor
inc
push
adc
xchg
mov
sti
pop
jecxz
add
add
pop
inc
push
ficom
ret
pop
inc
loope
jg
dec
inc
add
cli
inc
ret
enter
mov
sbb
add
in
or
retf
mov
pop
cdq
mov
push
loopne
in
push
outs
push
nop
xor
out
or
xor
stos
sub
sub
or
xor
out
call
dec
imul
sar
jg
jmp
mov
adc
pop
xchg
and
jo
jbe
or
(bad)
or
jo
clc
outs
fcom
xor
dec
fadd
push
(bad)
mov
and
push
adc
and
or
enter
das
adc
xchg
paddb
call
mov
rcr
mov
fcomp
aam
neg
sbb
and
dec
aam
cmp
jne
iret
repz
inc
jg
mov
ins
test
std
pop
out
iret
repz
push
retf
push
rcr
jecxz
mov
xchg
fwait
mov
mov
push
sub
push
fnstcw
cs
xor
add
push
sub
add
or
aaa
mov
mov
in
sub
mov
js
sbb
out
dec
mov
out
pushw
inc
in
mov
mov
dec
fucomp
adc
xchg
cmp
in
push
push
dec
cmps
ror
in
test
adc
or
sbb
push
aaa
or
movs
adc
sub
sbb
adc
mov
dec
cmp
shl
outs
imul
jo
mov
cwde
adc
enter
pop
aaa
add
or
inc
imul
mov
jmp
push
inc
push
or
daa
daa
and
jmp
mov
enter
pop
in
mov
leave
leave
push
mov
(bad)
in
dec
test
push
inc
mov
stos
ja
push
push
ror
nop
out
daa
sti
push
pop
ins
push
mov
dec
nop
pop
cwde
ror
dec
push
gs
xchg
add
cmp
clc
inc
(bad)
pop
add
outs
inc
jecxz
and
or
adc
or
popa
out
ret
std
sbb
mov
ins
mov
jge
lock
ret
sub
sysret
mov
or
add
push
dec
push
call
xchg
movlps
scas
sub
dec
imul
imul
or
outs
jo
arpl
add
inc
or
adc
adc
add
and
cmc
fst
bound
jmp
or
cmp
dec
add
xchg
pop
inc
mov
popf
adc
imul
repz
mov
or
int3
movs
xor
clc
cmps
scas
mov
inc
shl
sahf
out
movs
test
jae
inc
jae
movs
mov
sbb
add
xor
mov
push
call
outs
push
xor
popa
jb
push
push
jnp
inc
jmp
leave
ret
pop
or
fs
call
mov
dec
add
push
not
retfw
mov
pusha
rcl
and
mov
lock
sbb
cmp
push
sub
jne
in
push
or
xlat
or
das
or
out
ds
sub
jae
sub
vmread
adc
dec
loopne
add
cwde
call
and
out
jno
xor
pop
and
add
call
pop
adc
daa
stc
loope
mov
add
sbb
cld
push
add
sub
out
mov
fldenv
dec
(bad)
or
arpl
push
jo
and
out
outs
lock
pop
hlt
das
add
mov
cld
inc
div
outs
pop
ss
dec
pop
add
mov
sub
test
xor
mov
jo
pop
and
pop
or
gs
push
(bad)
test
addr16
mov
in
out
fistp
push
int3
fs
arpl
xor
add
shl
shr
iret
mov
(bad)
jecxz
add
inc
add
js
popf
sbb
das
(bad)
bound
loopne
sbb
icebp
jmp
imul
in
pop
mov
pop
or
mov
mov
repnz
popa
imul
pop
xsave
pop
xor
ret
(bad)
add
or
jb
and
jne
mov
jg
icebp
sbb
mov
stos
mov
push
ja
dec
adc
movntps
inc
test
data16
std
stos
adc
and
add
iret
sbb
sub
inc
xchg
mul
xor
repz
cmp
test
data16
jmp
xchg
or
pop
sbb
jp
dec
jp
push
gs
shr
popa
cmc
inc
cld
push
push
pop
icebp
mov
inc
add
repz
out
sbb
add
les
pop
add
pop
and
fstp
xchg
hlt
(bad)
mov
mov
retf
cmc
cs
jl
xor
mov
dec
addr16
sub
xor
idiv
adc
dec
xor
cwde
fst
xchg
cs
pop
inc
push
and
sbb
sbb
jge
sbb
int
shl
xor
cmc
push
or
fisttp
sahf
imul
mov
retf
scas
add
cmps
mov
(bad)
mov
ja
push
xchg
cdq
adc
add
ja
ffreep
scas
xor
scas
adc
xchg
cld
je
inc
repnz
add
std
xchg
jmp
mov
push
gs
ds
fist
cs
int
daa
xchg
out
cmps
adc
cmps
das
nop
dec
(bad)
and
and
push
popf
push
movs
or
jecxz
or
dec
jp
ret
push
clc
inc
fbstp
clc
xchg
xor
cli
jo
add
and
dec
lds
clc
adc
fwait
xor
nop
inc
sbb
add
add
fdiv
inc
pop
das
jmp
test
dec
xchg
mov
dec
stc
xchg
sar
jmp
das
aaa
sti
mov
adc
xchg
push
lock
jmp
jmp
jl
(bad)
push
jg
in
pop
add
inc
test
jae
pop
test
push
inc
imul
adc
mov
(bad)
pop
or
push
xchg
xor
add
push
test
jno
outs
movsx
push
or
pop
push
inc
cs
cld
cmp
jns
mov
inc
sbb
inc
sahf
pushf
iret
add
cmp
mov
sbb
jb
rcr
add
popa
xchg
sbb
data16
pushf
jmp
add
data16
jno
icebp
js
add
push
mov
fimul
push
mov
es
push
sbb
jmp
aam
in
dec
add
rcl
mov
adc
add
jmp
jno
or
dec
movs
imul
sbb
pusha
xor
add
pop
and
rcr
dec
jae
add
add
jg
dec
mov
mov
jg
or
add
inc
sub
cmp
sbb
jnp
bound
sub
gs
push
ins
jae
xor
dec
cmp
neg
ja
repnz
xchg
loop
test
mov
jae
sub
adc
(bad)
out
in
in
dec
xchg
add
or
push
or
sbb
and
fs
adc
sbb
or
in
mov
popa
arpl
xor
test
mov
pop
popa
or
imul
repnz
ror
imul
add
push
lock
verw
ror
imul
add
sbb
mov
xor
add
adc
or
push
or
or
ss
pop
sub
popa
cmps
sbb
dec
enter
mov
cdq
scas
bound
adc
xchg
xor
pop
xor
dec
xchg
and
or
ja
and
jno
inc
jae
fistp
pop
lea
dec
popa
inc
xchg
mov
add
dec
popf
sub
es
jo
add
pop
int
dec
inc
push
jbe
adc
dec
mov
mov
mov
push
cmp
push
or
and
pop
xor
adc
jb
inc
aad
xchg
sbb
(bad)
or
dec
ins
or
bnd
inc
cmp
jb
movs
cmps
and
ins
pop
xchg
repz
push
mov
dec
or
adc
sub
push
jb
shl
(bad)
adc
jae
or
dec
cmps
push
sbb
je
add
pusha
clc
jmp
xor
fstp
xor
mov
add
dec
or
add
pop
xor
clc
lea
sbb
mov
ins
mov
add
xchg
call
inc
add
xchg
add
mov
push
and
mov
arpl
jns
sbb
push
pop
push
ret
mov
sti
call
std
pop
xchg
mov
adc
(bad)
jne
add
pusha
add
xor
test
fmul
cmp
push
sahf
mov
call
add
and
cmp
xchg
push
xchg
jg
test
add
(bad)
xlat
sub
add
test
and
mov
inc
and
sub
or
xor
ss
adc
and
push
or
or
lods
push
sub
cwde
sub
jne
rcr
adc
mov
xor
inc
aas
(bad)
push
pop
adc
sbb
out
pmaxsw
aam
(bad)
iret
movs
cwde
in
(bad)
rcl
inc
sbb
jmp
adc
sbb
dec
mov
and
adc
jp
scas
xchg
dec
or
inc
sub
mov
mov
push
adc
dec
dec
pop
ret
fs
adc
or
push
xor
mov
or
inc
shl
pushf
cmp
cmp
xchg
das
sbb
add
add
xchg
inc
or
mov
ja
into
rcl
clc
sub
adc
jl
sbb
(bad)
push
inc
push
and
es
add
add
ret
pusha
ja
loope
or
xlat
je
test
adc
adc
inc
and
loopne
sar
dec
push
out
mov
pop
in
inc
dec
ret
inc
add
hlt
adc
push
cs
(bad)
loope
rcr
add
mov
or
(bad)
jg
sbb
and
scas
push
adc
(bad)
cmp
clc
div
pop
add
adc
xor
push
rol
mov
rcl
xchg
pop
dec
push
sbb
xlat
inc
add
or
lds
add
and
imul
mov
test
sbb
pop
hlt
mov
lds
jb
pop
dec
jne
or
add
rol
hlt
xchg
pusha
xchg
fmul
mov
xchg
or
movs
adc
pop
fsubr
adc
xor
enter
adc
icebp
je
xor
lahf
mov
shl
cmp
add
push
mul
sbb
xchg
pop
fwait
push
jbe
lock
adc
arpl
pop
in
rep
les
lock
inc
pop
out
pop
dec
push
in
cmp
mov
out
sub
sbb
inc
dec
jne
mov
jp
mov
add
mov
sbb
mov
mov
movs
add
or
stos
call
hlt
cmps
pop
dec
mov
out
dec
and
sbb
jae
push
cld
lods
in
(bad)
das
jmp
xor
dec
xor
xor
call
or
loopne
dec
jmp
shr
lea
pop
(bad)
push
xchg
sbb
or
dec
dec
sahf
xor
dec
xchg
sbb
sbb
mov
into
xchg
and
sbb
nop
cmp
mov
dec
outs
jg
or
jmp
dec
add
ja
add
sub
dec
enter
sbb
ds
dec
xchg
pushf
rcl
xor
cli
mov
pop
aaa
call
jbe
push
call
shl
mov
lods
add
cmps
add
adc
(bad)
(bad)
adc
je
fnstsw
imul
js
add
inc
pop
dec
push
lods
ins
mov
dec
xchg
or
jmp
pushf
aam
cmc
push
repnz
popf
pop
shr
hlt
xor
mov
mov
cld
cmp
adc
test
lea
or
inc
or
mov
mov
and
leave
add
and
clc
fsub
lock
push
add
int3
add
in
int3
sbb
xor
xchg
inc
pop
inc
add
sbb
sahf
ds
loopne
or
jo
fst
in
jno
push
mov
sar
in
fcom
push
iret
(bad)
(bad)
les
jmp
pop
mov
mov
pop
sub
push
jno
cs
enter
dec
cmp
pop
fmul
lock
imul
sbb
cmp
sub
stos
sar
ret
test
aas
sbb
mov
mov
dec
hlt
cmp
xchg
add
mov
inc
inc
mov
dec
mov
aad
or
mov
enter
aam
lock
adc
sub
dec
adc
mov
inc
pop
lahf
or
ret
popa
sbb
ret
dec
jmp
(bad)
out
xchg
xor
or
xchg
pusha
adc
or
mov
jne
movs
mov
ret
dec
retf
push
ret
shr
adc
stc
cmp
out
adc
mov
loopne
adc
and
div
inc
adc
retf
inc
cmps
and
mov
push
mov
pop
jge
xchg
pop
lods
in
inc
and
mov
or
sub
mov
into
push
mov
enter
xor
and
pushf
jmp
(bad)
cmp
mov
cld
aaa
int3
mov
xor
bound
arpl
cmp
hlt
lock
adc
out
add
out
or
hlt
jmp
scas
cmp
stos
mov
ins
adc
outs
cmp
mov
movs
pop
ret
fs
mov
ret
dec
sub
mov
adc
iret
into
out
rcr
inc
sbb
int3
and
push
xchg
mov
xor
pop
mov
or
dec
(bad)
out
sbb
push
test
jne
es
cmp
test
sub
or
cdq
dec
sahf
xor
lahf
jecxz
dec
jne
scas
(bad)
les
jecxz
cdq
adc
es
adc
jno
or
arpl
push
mov
popa
(bad)
push
es
in
in
mov
shl
lock
xchg
xor
xlat
sbb
xor
adc
in
inc
aam
and
std
sub
pop
lea
pop
cmps
loopne
jns
inc
fstp
in
lods
cmps
xor
or
mov
scas
dec
push
xchg
or
cdq
adc
or
inc
inc
leave
and
scas
enter
pop
push
call
inc
pop
inc
inc
jae
inc
add
inc
adc
ins
xchg
sub
xor
sbb
(bad)
mov
adc
out
pop
adc
cwde
dec
lock
jmp
ins
add
jne
(bad)
mov
inc
repz
mov
aad
pop
(bad)
pusha
mov
xchg
push
lock
xchg
in
or
add
sbb
rol
ror
call
sbb
retf
dec
xchg
test
xchg
xchg
loopne
popa
ror
sbb
inc
sbb
sub
shl
shl
push
jo
sbb
dec
rcl
and
test
ffree
inc
or
xor
and
and
add
pop
add
std
add
ins
cmp
jne
mov
or
(bad)
fisttp
mov
pop
sub
adc
clc
cmp
ss
pusha
add
cmp
sbb
test
and
xor
or
ror
movs
rcr
pop
pop
xor
adc
adc
xchg
pop
test
nop
das
mov
or
pop
pop
(bad)
dec
(bad)
pusha
das
jmp
call
mov
sub
adc
adc
out
or
add
(bad)
jmp
add
cmovns
sbb
cmp
cld
ja
in
pop
(bad)
mov
jl
add
stos
cmp
push
mov
sub
and
cdq
sahf
inc
add
pop
mov
add
adc
push
lea
ja
adc
sub
push
pop
pop
cld
jo
inc
sbb
lods
rcl
ins
mov
jmp
and
cli
mov
in
fld
into
daa
push
pop
mov
push
push
add
popf
(bad)
fld
push
mov
inc
pop
ror
add
sar
add
adc
rcr
in
sti
jg
jns
ror
stc
mov
fsubr
push
cwde
test
in
std
adc
out
cmp
dec
or
pop
mov
je
sub
lds
lea
push
addr16
inc
pop
mov
(bad)
enter
nop
or
nop
and
popa
dec
mov
sbb
push
and
push
push
sub
adc
mov
sub
add
adc
xchg
cwde
push
add
inc
adc
and
cwde
dec
pop
mov
mov
sbb
inc
add
std
je
and
adc
retf
xor
cmp
iret
sbb
mov
pop
xchg
jmp
hlt
push
dec
mov
scas
mov
inc
inc
sbb
sbb
or
sbb
push
cld
ds
repz
inc
mov
or
pop
mov
loopne
add
call
sti
dec
mov
inc
push
add
pop
inc
clc
ror
clc
outs
pop
retf
arpl
and
jmp
jge
inc
inc
fadd
inc
mov
xchg
call
jge
test
push
fbld
mov
inc
icebp
popa
add
xlat
add
fdivr
and
add
ret
adc
jg
pop
jnp
fistp
aad
and
sbb
jg
clc
add
cmp
retf
ror
jmp
es
aas
dec
or
add
rcr
xor
cld
test
push
jmp
dec
push
retf
test
imul
lahf
xlat
fwait
inc
add
or
in
push
mov
or
pop
call
js
jge
test
xor
out
inc
aas
jg
iret
and
popa
mov
push
hlt
ins
pop
addr16
jo
pop
sub
push
cmps
hlt
jge
mov
jmp
push
in
mov
sbb
pop
push
pop
es
in
sub
das
or
sbb
cmp
mov
add
dec
call
and
out
fstp
and
dec
sbb
xor
sub
scas
inc
add
push
jle
ret
push
cmp
sbb
mov
adc
call
and
mov
add
adc
neg
and
lahf
push
test
push
push
xor
mov
inc
add
cmp
bnd
arpl
(bad)
inc
and
lahf
iret
cmps
int3
or
cmps
cmp
cld
cmp
or
xor
add
push
xor
adc
dec
dec
cli
mov
add
pop
pop
adc
sub
add
leave
mov
push
sbb
ss
das
sbb
inc
mov
rol
inc
dec
or
dec
jb
sbb
mov
call
sub
xchg
icebp
imul
test
or
hlt
loopne
xchg
add
xchg
xchg
hlt
fst
out
pop
es
icebp
ror
mov
push
imul
pop
inc
lock
push
and
cwde
mov
outs
mov
pop
mov
stos
push
adc
arpl
xchg
addr16
cdq
cmp
add
and
push
sub
loope
adc
push
and
popa
xor
or
jae
adc
or
add
popa
outs
or
test
xor
add
push
dec
or
lock
(bad)
gs
and
sbb
lahf
add
push
sub
jno
xchg
dec
and
mov
in
pop
push
das
jb
or
iret
or
xchg
ficomp
ss
push
(bad)
cmps
fisub
jno
mov
or
lods
test
call
pop
inc
gs
push
mov
adc
stc
sbb
push
int
pop
add
add
push
mov
push
xchg
xor
(bad)
dec
popa
pop
mov
in
lea
jge
sbb
cmp
ss
adc
adc
addr16
mov
pop
daa
daa
clc
sub
imul
jle
cdq
sub
(bad)
out
cs
inc
xor
push
jb
fist
rol
daa
shl
xchg
cmc
mov
rol
fild
bswap
add
dec
mov
adc
loopne
sahf
adc
push
fs
sub
pop
lock
inc
inc
pop
shl
pop
add
or
pop
add
inc
add
and
pushf
xor
mov
in
mov
dec
dec
add
jo
and
and
jb
sbb
cmp
fst
push
push
jo
popa
xor
xchg
push
jne
mov
movs
push
jo
dec
mov
outs
jae
pusha
mov
or
gs
fdivr
cmp
sti
clc
push
fisub
or
add
shl
or
sub
(bad)
fadd
call
cmps
lds
cmc
lock
and
mov
jns
fstp
mov
cld
call
push
aaa
adc
fs
add
or
cmp
push
xor
ret
xor
push
or
xor
daa
lds
sub
mov
sub
ret
rcl
shl
ins
ror
dec
dec
cwde
mov
je
xor
mov
out
add
js
and
fcom
mov
nop
cmp
shl
test
inc
and
add
push
push
pushf
cmp
add
jecxz
movs
icebp
inc
daa
add
dec
dec
cmp
adc
add
add
adc
icebp
call
mov
fcom
scas
pop
clc
and
scas
rcl
push
sbb
inc
inc
or
xchg
add
inc
and
or
test
mov
cvtps2pd
call
inc
push
xchg
data16
push
push
mov
add
pop
cmp
push
inc
pop
(bad)
mov
mov
(bad)
dec
outs
lea
mov
adc
outs
scas
or
and
xor
into
inc
and
dec
jecxz
mov
push
and
outs
cmp
jno
pusha
sbb
adc
fs
pshufw
sbb
pop
jns
xor
mov
les
nop
lea
jl
in
or
mov
adc
dec
cmp
int3
push
mov
and
xor
fimul
and
add
and
push
test
sbb
imul
push
gs
dec
cmp
ins
in
loope
push
push
mov
lods
rcr
daa
adc
shl
xor
data16
xor
mov
push
shr
outs
je
retf
in
fild
mov
dec
repz
ins
pop
dec
outs
inc
adc
mov
pushf
jbe
rcl
scas
das
add
sub
mov
outs
jae
popa
inc
nop
ds
add
add
ja
out
test
sub
push
pop
mov
mov
or
mov
pop
div
pop
data16
std
in
push
xchg
je
and
lds
mov
call
jae
jae
test
ds
mov
add
dec
pop
les
or
or
in
popa
jecxz
das
cs
push
add
dec
mov
dec
(bad)
out
and
mov
outs
addr16
leave
mov
in
sti
sbb
loop
rcl
jne
inc
pop
or
xchg
inc
and
loop
push
adc
sbb
retf
cmps
sbb
dec
sbb
das
pop
(bad)
test
push
(bad)
and
sub
mov
call
mov
fnstsw
push
lock
cli
mov
add
and
inc
or
push
(bad)
sub
inc
push
jl
push
lods
adc
int3
call
push
and
daa
mov
or
adc
add
or
mov
jns
inc
xchg
sub
adc
add
or
shl
add
add
sub
mov
dec
lock
pop
ret
or
or
sub
das
cmp
inc
lods
inc
mov
sub
jne
out
pop
in
adc
mov
ret
dec
ret
and
sbb
call
popa
js
sti
add
or
add
xor
enter
lods
or
push
and
pusha
lsl
out
push
mov
inc
add
fisub
cvtpi2ps
xor
icebp
adc
xor
dec
out
fbld
mov
sbb
(bad)
jnp
sahf
add
dec
jmp
push
stos
sahf
pop
inc
push
out
push
adc
jl
xor
add
adc
push
inc
nop
daa
pop
shl
loop
push
test
loopne
les
loopne
movntps
jnp
cmp
fcmovb
pop
inc
xchg
icebp
and
nop
fidivr
sub
pop
sub
shl
push
sub
or
sub
pop
adc
mov
inc
popf
fs
push
fisubr
xor
and
into
repz
xor
push
xor
scas
jg
call
enter
call
dec
fwait
test
dec
add
and
lock
push
dec
outs
cmc
and
dec
test
ss
jbe
pushf
push
or
mov
addr16
das
and
or
add
add
inc
cwde
ss
fs
xor
adc
out
aaa
push
daa
push
das
outs
add
sbb
ss
vmovsd
dec
mov
or
(bad)
pop
and
mov
mov
mov
(bad)
imul
and
sbb
xor
add
pop
inc
or
dec
jne
sub
retf
mov
dec
iret
jl
xor
xchg
push
jne
or
sub
xchg
arpl
sub
or
adc
adc
inc
mov
and
ret
ficom
mov
mov
adc
pop
or
ja
addr16
cmp
pushf
fist
test
pcmpgtd
sbb
or
add
or
shr
pusha
xchg
sub
add
in
sbb
pop
push
add
adc
push
rol
add
or
stos
mov
pop
lds
aaa
push
test
vphaddudq
clc
push
and
push
pop
cmp
push
dec
cmp
cmp
vpmacsdql
push
retf
mov
outs
sar
lods
ins
add
dec
push
jle
aas
or
jae
mov
dec
rcr
outs
mov
or
cmp
inc
add
(bad)
outs
scas
xchg
jge
fnstcw
jae
push
js
jl
fidiv
fcomp
pop
sbb
or
iret
or
inc
jne
fs
adc
ins
cmp
or
or
cmp
add
add
pop
jne
add
mov
cmp
inc
ja
retf
fmul
sub
ja
mov
or
enter
(bad)
mov
jmp
jnp
or
xor
jae
push
imul
jp
xchg
in
jo
out
or
add
mov
or
inc
inc
sbb
add
pop
push
call
inc
cmp
mov
inc
dec
sub
mov
xor
adc
(bad)
mov
cmps
sbb
cwde
aas
xor
ins
inc
aam
or
ja
inc
jmp
adc
movs
int3
push
movs
int3
sbb
jnp
push
cmp
sbb
imul
pushf
jne
adc
fs
cmp
lock
pop
out
mov
movlps
mov
daa
in
(bad)
in
(bad)
(bad)
push
sub
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
ds
test
mov
loopne
ins
jl
out
sub
ins
mov
frndint
ja
jae
push
sbb
or
add
jp
jnp
and
mov
cmp
in
test
stc
mov
inc
popf
ds
aaa
fsubr
ins
dec
pop
ins
jne
lods
ins
retf
dec
cmp
outs
pop
fxch
sbb
push
lock
pop
dec
scas
or
pusha
add
sbb
sbb
stc
bound
aas
or
fs
mov
jb
inc
and
fs
mov
xchg
xchg
xchg
pop
or
retf
xchg
xchg
mov
mov
in
dec
jp
lock
or
sub
inc
mov
xchg
push
add
or
test
fs
xchg
inc
xchg
fwait
or
idiv
push
xchg
cmp
(bad)
loopne
or
or
add
add
pop
pop
test
out
clc
ja
add
add
dec
and
or
push
add
add
inc
push
test
inc
ins
inc
ins
imul
add
sysret
popf
rcl
and
add
mov
or
or
add
iret
(bad)
jl
loopne
mov
test
inc
sar
adc
jbe
pop
dec
cmp
dec
push
popf
add
cwde
add
test
jmp
mov
test
adc
dec
adc
push
pusha
push
and
jo
mov
nop
xchg
or
mov
dec
sub
cmp
push
mov
adc
sub
dec
outs
jb
or
push
jb
nop
(bad)
ror
and
sbb
rcr
dec
inc
or
iret
xor
push
ins
jae
movs
in
mov
xchg
in
xor
movs
inc
mov
inc
jns
or
add
push
adc
push
push
rcr
aam
in
ins
ss
adc
gs
inc
add
dec
mov
loope
push
xor
enter
gs
dec
add
pop
push
outs
sub
xor
push
int
push
dec
fwait
leave
mov
fs
push
adc
outs
inc
gs
ins
scas
and
inc
inc
add
das
xchg
out
add
dec
pusha
leave
xlat
pop
and
add
imul
das
mov
aaa
add
ror
shl
xchg
or
sbb
mov
or
or
or
mov
jb
adc
cld
xor
jae
and
js
pop
mov
add
mov
lahf
(bad)
jg
inc
jnp
loope
pop
es
das
bound
jp
inc
xlat
pop
inc
jbe
cmp
rol
pop
dec
movs
cmps
cmps
sub
test
adc
gs
cmovbe
or
add
add
inc
inc
xchg
call
pop
test
inc
xchg
daa
mov
add
pop
adc
aaa
add
add
sub
inc
inc
xchg
mov
inc
adc
fmul
or
or
jne
mov
cmp
ret
xor
rol
loopne
and
sar
sub
xchg
imul
or
dec
dec
lods
jns
add
add
inc
mov
sub
lds
mov
and
call
add
inc
je
xchg
and
cli
fidiv
sbb
rcl
dec
dec
push
loop
popf
aaa
sti
push
push
dec
das
js
and
pop
adc
or
jg
test
aas
mov
js
xchg
hlt
repz
sub
inc
push
mov
loop
fbld
ror
or
add
adc
adc
adc
cdq
sar
sub
dec
inc
mov
push
mov
and
push
add
sub
fild
xor
sub
clc
loopne
xor
or
push
mov
add
mov
mov
dec
dec
pop
int
aad
in
jg
jne
test
mov
fwait
mov
hlt
ror
mov
mov
mov
scas
in
and
aam
cwde
adc
push
pop
dec
sbb
mov
mov
popa
(bad)
js
inc
push
cmp
gs
neg
or
ret
sub
(bad)
loop
add
mov
push
stos
cwde
or
jmp
and
or
fnstsw
fwait
in
aam
push
test
add
cwde
idiv
sub
inc
push
daa
push
pop
pop
repnz
add
add
dec
imul
shl
jecxz
fs
cmp
dec
stos
adc
adc
xchg
adc
xchg
das
jg
push
pop
sbb
or
or
mov
mov
retf
sbb
push
cld
and
mov
add
les
xchg
add
or
add
loope
pusha
cdq
or
out
jnp
xchg
nop
dec
pop
sub
mov
adc
push
sub
push
dec
(bad)
sbb
dec
dec
xchg
inc
fcmovnu
in
fadd
mov
adc
hlt
dec
add
adc
jle
idiv
push
dec
pusha
jne
es
(bad)
lock
sbb
pop
rcr
fs
push
daa
xchg
das
mov
xchg
add
adc
push
ror
sti
or
xor
das
xchg
stos
or
add
std
pushf
push
xchg
test
or
int3
or
lock
std
dec
pop
add
arpl
mov
dec
sbb
adc
and
jg
push
mov
out
jns
mov
idiv
sub
les
pop
inc
(bad)
push
xchg
add
int3
dec
dec
xchg
cmp
add
into
(bad)
add
movs
daa
jecxz
dec
std
push
sub
push
mov
and
lock
adc
ins
mov
pop
jae
ret
lock
add
call
fistp
sbb
push
mov
(bad)
dec
sub
pop
cmp
mov
sub
pushf
push
mov
sub
pop
cmp
add
dec
inc
sbb
push
push
add
mov
call
adc
lods
nop
cmp
inc
mov
add
cld
and
dec
daa
das
add
bound
push
mov
dec
mov
fiadd
dec
and
imul
jno
shr
iret
pusha
lds
popa
sbb
sub
mov
pop
sub
xor
inc
mov
mov
mov
addr16
test
inc
rol
mov
mov
popa
das
mov
test
ja
or
jecxz
sbb
dec
inc
dec
inc
pusha
inc
add
or
or
sub
sbb
pop
and
adc
push
enter
push
mov
popa
popf
xor
push
push
(bad)
push
shl
sbb
outs
mov
push
push
jae
mov
or
out
(bad)
in
leave
lods
xchg
test
stc
dec
aaa
dec
pusha
movs
subps
leave
leave
leave
fs
xchg
es
leave
cwde
pushf
mov
int3
and
mov
push
lahf
pop
inc
daa
movs
mov
iret
and
das
mov
add
adc
stos
mov
mov
adc
jns
out
test
outs
cmp
mov
xor
sbb
iret
adc
and
fbld
push
mov
add
add
sub
add
into
push
xchg
push
pop
pop
sbb
popf
sub
add
je
xor
mov
(bad)
js
push
popf
push
jo
mov
xor
xor
add
and
icebp
sahf
dec
inc
sbb
in
mov
mov
jo
shr
or
sub
(bad)
jo
sbb
push
dec
add
inc
cmp
in
pop
jp
fidivr
push
inc
add
pop
mov
cdq
gs
mov
xor
outs
(bad)
aas
mov
aas
push
push
xor
lahf
aaa
mov
jnp
aaa
push
cmp
cmps
pop
lds
sti
dec
outs
lods
sub
pushf
adc
mov
pop
and
addr16
repz
xlat
fsubr
adc
cmp
dec
outs
jno
call
mov
imul
jo
lock
pop
xchg
push
inc
mov
lods
or
xchg
pavgb
aad
les
xchg
hlt
push
xor
push
cmp
out
push
mov
pop
clc
push
pop
clc
aam
inc
xchg
push
fmul
arpl
clc
ins
popf
pop
and
inc
xor
or
xchg
ins
dec
mov
arpl
add
push
and
arpl
aad
add
pop
pop
sbb
cmps
stos
mov
ret
add
pop
pop
adc
xor
sbb
sbb
shl
sbb
clc
es
pop
or
jo
mov
fs
fs
and
push
fs
mov
cld
fs
sbb
cmp
in
fs
fs
pusha
add
inc
shl
dec
xor
mov
push
mov
sub
ror
pushf
scas
dec
jb
adc
gs
dec
push
and
or
sbb
fiadd
(bad)
xlat
adc
add
sbb
xor
xor
pop
in
add
push
inc
cmp
pop
dec
adc
xor
xor
retf
jae
and
jne
and
retf
xor
or
mov
push
add
(bad)
(bad)
fmul
and
pop
shl
shl
add
(bad)
(bad)
js
mov
or
aaa
in
call
xlat
add
out
xor
inc
aaa
inc
inc
push
inc
and
or
adc
adc
nop
sbb
or
cmps
adc
xor
and
adc
ret
fist
daa
or
add
sti
call
sbb
adc
mov
and
cmp
into
test
test
push
dec
push
scas
jno
test
add
adc
xchg
rcl
popf
or
mov
test
test
lds
nop
sub
loope
loope
addr16
fmul
std
jo
xor
jmp
pop
pop
mov
adc
call
test
jnp
jle
adc
dec
outs
jo
fist
dec
xor
bound
arpl
cld
nop
push
cli
lea
fdivr
mov
push
js
je
push
test
ret
push
add
sbb
out
data16
inc
inc
outs
enter
or
mov
rol
jecxz
cmps
ins
sbb
cld
push
dec
push
enter
nop
add
add
and
xchg
mov
mov
pop
cmps
push
xor
mov
or
push
dec
jmp
or
mov
test
ret
dec
adc
adc
adc
fisttp
add
bound
xchg
lods
dec
jmp
(bad)
call
jmp
sub
push
lea
and
(bad)
clc
out
mov
popa
cmp
dec
(bad)
and
adc
add
mov
scas
pusha
in
iret
add
loope
sbb
mov
inc
movntps
xchg
das
scas
xchg
add
dec
inc
dec
or
or
test
outs
and
ret
movs
call
call
shl
lods
out
sbb
cmps
outs
dec
test
pop
ins
xchg
(bad)
fwait
pop
xor
dec
sub
fnclex
fldcw
jmp
xor
adc
add
int3
loopne
ins
popf
fld
pop
enter
add
outs
jecxz
jo
and
sbb
mov
enter
ins
mov
call
inc
fiadd
push
mov
pop
ret
xchg
push
or
mov
arpl
repz
adc
pop
sub
je
xor
push
pop
fst
test
push
and
into
popf
xor
pop
jne
mov
arpl
imul
or
jne
sbb
push
imul
jnp
or
int3
push
xor
movs
jl
nop
(bad)
or
popa
sub
fwait
push
jg
inc
addr16
popa
xlat
or
inc
pop
push
je
mov
pop
pop
sar
dec
call
pusha
daa
add
nop
inc
cmps
in
adc
adc
aam
scas
fimul
xor
jecxz
(bad)
adc
sbb
sub
inc
or
add
push
(bad)
enter
inc
fiadd
and
sbb
(bad)
or
push
add
fcomp
pop
pop
out
inc
add
aam
add
ja
out
push
mov
cld
ret
mov
fild
lahf
ret
inc
ret
mov
enter
movs
cmp
pop
ret
nop
outs
in
mul
xchg
push
adc
jl
or
outs
imul
adc
sbb
fs
in
add
sahf
out
shl
outs
adc
sahf
out
cmp
mov
push
mov
sbb
mov
and
movs
data16
ja
pop
imul
mov
xchg
aas
push
cmp
bound
adc
inc
enter
adc
cmovbe
dec
mov
ins
mov
mov
addr16
pushf
int3
out
push
ret
sahf
dec
imul
xchg
cmp
push
mov
push
dec
fsubr
or
and
push
jle
icebp
mov
add
sub
inc
inc
int
jnp
or
in
and
and
je
cmp
shrd
push
cmps
jns
add
dec
sub
or
adc
imul
jle
sahf
cdq
cdq
mov
or
inc
test
pop
xor
imul
into
push
shl
add
adc
push
adc
sbb
xor
(bad)
or
test
and
pop
add
sbb
add
cmp
pop
pop
and
mov
lea
jle
dec
outs
or
inc
adc
imul
in
jo
pop
and
mov
or
add
es
mov
scas
push
xchg
in
pusha
sbb
add
cmp
cdq
xchg
retf
das
pop
mov
sbb
nop
fsub
adc
adc
cmp
(bad)
lock
enter
mov
stos
and
inc
ficom
loope
pop
inc
mov
push
push
push
(bad)
out
out
add
dec
mov
push
add
inc
pop
xchg
adc
test
ror
add
test
call
std
or
not
push
push
jo
jle
add
mov
mov
mov
push
lea
mov
js
shl
push
sbb
mov
aas
inc
fs
movs
and
inc
pop
jno
cmps
cmp
mov
xchg
add
xor
pop
xchg
xchg
fnstenv
imul
into
ss
jmp
xchg
xchg
adc
outs
xchg
dec
nop
xchg
call
cwde
xchg
mov
lods
sti
mov
xlat
lods
aaa
mov
idiv
test
ds
mov
sti
push
fidiv
mov
or
dec
enter
mov
add
sbb
adc
add
sbb
movs
in
das
mov
and
jmp
ja
pop
mov
mov
xor
or
pop
or
adc
jnp
sub
pop
sar
ins
mov
inc
mov
and
xor
xchg
adc
push
jb
push
test
push
push
mov
or
inc
pusha
adc
(bad)
hlt
scas
dec
mov
clc
mov
inc
mov
ins
pop
sbb
xchg
loopne
pop
nop
xchg
retf
in
mov
mov
in
cdq
cmp
mov
jb
dec
enter
lods
pop
es
ins
lods
dec
jl
jb
mov
push
xchg
and
push
shl
popf
lahf
push
repnz
imul
into
movs
mov
sub
sub
repnz
ja
push
add
mov
pop
fs
xor
loopne
mov
push
and
adc
add
jge
sahf
jno
dec
adc
pusha
xchg
sar
adc
iret
and
je
jo
mov
(bad)
(bad)
inc
and
bt
jae
or
inc
add
cmp
jne
push
arpl
add
mov
push
in
xor
dec
test
or
add
fnstsw
mov
add
pushf
dec
test
cmp
push
loope
mov
or
inc
cli
and
arpl
les
and
enter
adc
sbb
pop
ret
xor
xor
into
fcomp
ret
or
push
add
and
sub
add
fsubr
push
or
dec
xchg
jne
out
pop
rcl
bound
hlt
mov
(bad)
dec
shr
lock
or
shl
mov
pop
je
fdiv
push
imul
xchg
inc
mov
mov
shl
in
fwait
pop
fist
xchg
add
retf
in
rcl
test
cwde
cmp
fnstenv
adc
cmp
mov
sbb
xchg
add
daa
in
es
push
and
mov
xor
mov
sub
xor
inc
scas
pop
xchg
cmc
daa
inc
stos
xor
test
out
jne
xor
xor
inc
and
adc
data16
mov
mov
mov
inc
pop
lods
pushf
mov
fwait
adc
xchg
mov
data16
je
push
push
inc
mov
inc
das
xor
clc
test
inc
frstor
jnp
push
mov
in
mov
add
ins
aad
sub
je
pop
test
aas
dec
push
sti
pop
mov
push
fnstsw
in
shl
add
je
add
and
dec
dec
outs
add
rol
ins
cmp
inc
in
cmp
mov
jle
in
mov
sbb
xor
in
lahf
xor
adc
adc
mov
inc
push
je
mov
mov
mov
adc
(bad)
jne
cwde
push
sbb
shr
lds
sbb
adc
push
enter
xchg
adc
loopne
add
xor
xchg
fistp
ret
lock
jmp
aas
or
xor
pop
pop
or
mov
sub
fdivr
push
push
pop
push
push
fild
scas
cli
cdq
inc
lea
sbb
cmp
mov
cmps
call
cmp
lods
rcr
call
or
xor
(bad)
loopne
mov
sti
push
and
lock
pop
daa
add
ror
inc
rol
cs
jnp
sbb
and
push
fwait
or
jbe
add
add
hlt
add
shl
out
scas
add
xor
dec
cmp
jo
push
or
in
adc
sub
rcl
and
cmp
rcr
bound
pop
lds
push
loopne
inc
inc
out
ja
shl
hlt
ja
nop
jge
add
xor
xor
call
cld
xlat
mov
movs
push
loop
push
ret
or
hlt
test
jecxz
cs
push
xchg
pop
xchg
jecxz
call
xchg
and
jge
sar
add
sbb
and
fsub
sbb
mov
mov
pop
inc
test
nop
sub
outs
add
xor
push
or
loope
les
push
push
push
dec
fucom
push
pop
call
adc
push
or
cdq
daa
add
push
ret
sub
inc
mov
inc
or
inc
div
inc
add
sub
ror
(bad)
addr16
jp
(bad)
cmp
push
push
mov
outs
inc
or
push
imul
jae
cmp
outs
pop
jp
dec
pusha
adc
and
addr16
rol
cdq
jmp
or
xchg
sbb
fldcw
inc
mov
pop
sub
adc
dec
and
ficomp
or
or
jne
push
aas
push
sahf
add
sbb
sub
xchg
or
repz
push
pop
and
daa
and
loop
or
ret
sbb
call
(bad)
pop
or
or
sbb
inc
adc
dec
jno
xor
add
pop
addr16
mov
clc
fwait
dec
jge
ins
aas
or
cmp
je
or
jge
adc
pop
stos
mov
add
add
push
cld
test
adc
pop
and
mov
add
xchg
xchg
or
pusha
movs
jle
(bad)
scas
sub
sub
inc
imul
jbe
push
rol
shl
or
xchg
nop
cmp
lock
loop
je
stos
push
mov
xchg
jge
mov
xlat
xchg
adc
dec
push
xchg
dec
adc
jle
add
xchg
movs
cmp
cld
enter
sar
cli
in
jle
xor
or
test
sti
je
add
daa
cdq
push
xor
cmp
or
push
adc
or
jp
jb
sbb
test
inc
inc
dec
adc
push
and
stos
and
daa
mov
sbb
add
mov
push
pusha
mov
pop
xchg
mov
pushf
pop
bound
fs
and
daa
cli
in
mov
pop
jle
or
push
push
push
push
xor
out
adc
add
xor
neg
cwde
push
rcr
cmp
jge
and
cmp
cmp
push
mov
add
and
ins
imul
aam
sbb
push
xchg
rcr
loopne
into
xlat
fmul
ficomp
clc
push
mov
or
nop
jno
mov
add
and
sbb
mov
sbb
cmps
push
push
aam
(bad)
mov
loop
mov
sbb
or
mov
les
xchg
outs
cmps
cmp
adc
sub
mov
idiv
push
push
and
hlt
or
(bad)
or
sbb
add
test
dec
and
repnz
lock
sub
sub
and
fdivp
push
adc
mov
daa
add
and
dec
and
adc
jge
sar
sbb
ret
movs
in
add
dec
shl
sbb
pop
lods
sub
js
inc
shl
sbb
add
adc
movs
pop
xor
mov
push
xchg
mov
inc
or
inc
mov
fild
fmul
leave
xlat
gs
push
xor
rol
adc
mul
inc
xor
jmp
sub
sub
mov
push
and
pushf
push
and
add
int
cmp
jne
jo
outs
or
push
es
push
sbb
and
jb
and
add
push
ror
pop
pop
sbb
daa
inc
enter
imul
or
iret
and
outs
jo
in
jo
fbstp
pop
xor
movs
dec
push
rcr
(bad)
daa
enter
cs
mov
xchg
pushf
inc
or
sub
jae
or
or
cs
push
add
fs
sbb
ret
mov
and
movs
daa
inc
repnz
pop
push
adc
and
inc
or
clc
jecxz
(bad)
mov
je
dec
xlat
cmp
rcr
(bad)
popf
add
fmul
in
cmps
adc
add
jne
fwait
inc
test
clc
fimul
xlat
cld
addr16
dec
pop
dec
ret
jae
mov
inc
inc
inc
(bad)
outs
add
pop
addr16
cld
aam
dec
or
je
dec
sub
xor
sub
jb
cld
xor
sbb
lahf
or
pop
rcl
shl
push
stc
int3
dec
sub
hlt
xchg
repz
inc
test
sahf
mov
xor
dec
es
ss
call
mov
pop
xor
dec
ror
movs
ins
or
ret
into
loop
jl
mov
rol
cmp
cmps
jbe
inc
jmp
xchg
stc
or
jno
inc
(bad)
sbb
add
mov
nop
fstp
mov
add
rol
or
test
inc
scas
adc
pop
sub
mov
ja
xor
jns
push
pop
inc
pop
push
add
push
call
iret
stos
pusha
mul
push
push
jmp
fcomp
mov
jl
xor
mov
outs
mov
cmp
jmp
sar
and
inc
inc
es
std
jle
xor
icebp
adc
mov
jg
or
add
rol
(bad)
loope
xchg
jmp
mov
imul
add
push
or
mov
(bad)
shr
push
jge
inc
mov
pop
ss
test
sub
and
sbb
xchg
ret
jo
push
inc
movs
dec
add
ret
xor
or
arpl
test
mov
sbb
js
xor
les
fdiv
leave
mov
pop
cs
retf
push
push
mov
test
cmps
mov
adc
leave
cmp
popa
cmp
add
cld
adc
inc
or
rcr
inc
mov
mov
scas
push
rol
adc
add
ins
loopne
mov
cmp
add
dec
loop
push
mov
imul
fs
ja
sub
inc
adc
fistp
dec
push
adc
ret
pop
push
les
push
adc
(bad)
jmp
xor
fst
dec
add
mov
dec
xchg
fs
retf
and
jo
dec
dec
cwde
sbb
sbb
ins
adc
inc
ins
inc
xor
push
push
push
jmp
sbb
sub
ds
jno
jnp
cld
sub
movzx
xchg
push
stc
call
mov
dec
cs
push
add
test
ins
or
dec
ins
adc
dec
fwait
ss
pushf
fs
cmp
fs
pusha
inc
pop
daa
cmp
dec
mov
nop
push
or
or
je
icebp
pusha
mov
xchg
push
pop
pop
lock
int
cmp
int3
imul
or
pop
add
mov
pop
pop
mov
xor
add
pop
hlt
adc
push
sar
xchg
ss
repz
in
addr16
scas
jb
nop/reserved
or
adc
add
retf
pop
xor
jo
test
inc
inc
fist
and
jg
push
or
dec
push
push
arpl
xor
fisttp
dec
cld
call
mov
mov
mov
dec
sbb
or
stc
test
pusha
and
out
push
cmp
lock
pop
pop
pop
pop
es
bound
iret
adc
adc
iret
adc
stos
test
mov
inc
(bad)
sar
sbb
mov
jle
(bad)
shr
push
or
mov
sbb
jp
jo
cwde
push
out
mov
xor
push
push
and
sbb
retf
lea
ret
mov
enter
shl
fbstp
cmps
lahf
fimul
cmp
inc
add
sbb
stos
fsubr
stos
cmps
loop
sti
pop
imul
loopne
test
jmp
xchg
xlat
lahf
in
pop
call
arpl
adc
int3
add
jns
or
push
inc
mov
inc
push
dec
sbb
dec
dec
out
sub
sar
dec
jnp
rol
push
push
sub
mov
inc
movs
add
jle
hlt
sbb
xor
inc
jb
add
les
add
lock
push
pop
aas
test
sbb
add
lock
and
add
cmp
stos
std
add
leave
jmp
mov
cmp
adc
loopne
push
sbb
jno
inc
icebp
adc
xor
or
pusha
mov
push
ins
cmp
adc
adc
cs
stos
movs
je
je
inc
jb
add
jo
mov
jl
push
enter
mov
xchg
pop
(bad)
ins
dec
ror
nop
add
cmp
mov
sbb
add
sub
inc
add
and
fadd
cmp
pop
xchg
mov
jle
cdq
fcom
push
add
sub
mov
pop
sub
js
fimul
popf
icebp
jmp
out
and
cmc
lds
(bad)
cs
cs
or
lock
jmp
adc
cmp
or
push
sar
lea
call
mov
inc
(bad)
aas
push
add
test
inc
ins
ret
jle
bound
inc
xchg
clc
sbb
and
nop
push
dec
xchg
xor
popa
push
push
pop
sbb
cmp
sub
xchg
sahf
push
mov
or
xchg
push
rcl
xchg
das
jmp
pop
test
mov
pop
add
or
cmp
iret
mov
cmp
push
nop
in
sub
cmps
int3
mov
mov
or
pop
or
xlat
adc
mov
ins
imul
add
xlat
test
aam
mov
pop
xlat
retf
stos
inc
pop
xlat
test
pop
xchg
ins
xchg
and
les
es
push
ja
stc
rcl
pop
pop
enter
push
cwde
mov
xor
in
xor
cmp
inc
pusha
jmp
pop
xlat
pop
or
pop
xlat
mov
ins
cs
or
push
loopne
xchg
push
push
lods
or
cmp
sub
pop
jbe
push
test
jge
addr16
out
popa
inc
inc
push
js
rcl
loopne
xor
cli
xchg
dec
and
add
aad
mov
lock
dec
nop
or
xor
dec
xchg
or
les
mov
jp
pop
inc
xchg
xlat
mov
jne
ins
jns
pusha
cmp
mov
add
push
mov
(bad)
mov
or
xlat
and
adc
adc
inc
je
rol
jo
mov
jmp
cmp
std
lods
push
push
cmp
add
cmp
jne
jne
test
pusha
inc
jne
neg
adc
mov
pop
inc
xchg
popa
add
xchg
sub
mov
pop
xchg
sub
xchg
mov
mov
mov
je
cmp
sub
pop
loop
lahf
(bad)
mov
and
mov
mov
in
add
xor
sub
xor
add
mov
add
add
jg
sub
pop
sar
call
xchg
jno
mov
cmps
hlt
bound
std
jmp
mov
popf
and
mov
jle
xor
repz
movs
jae
popa
nop
or
out
mov
nop
add
adc
hlt
jecxz
jmp
int3
cld
popf
hlt
mov
sub
icebp
ss
js
mov
fcmovb
or
or
adc
movs
dec
sbb
les
loope
punpckhwd
test
ins
and
inc
dec
adc
jne
xor
nop
mul
in
shl
push
mov
into
push
lds
add
lods
rcl
scas
cmp
add
push
mov
jl
xchg
rol
in
mov
mov
inc
cwde
adc
sub
ret
inc
fadd
fwait
cwde
(bad)
mov
pushf
jb
push
test
fwait
aad
jge
lods
adc
rcr
movs
mov
xor
cs
rol
sbb
and
or
aas
and
aas
fcom
loopne
inc
adc
nop
add
aam
and
retf
sbb
ins
inc
inc
outs
lock
push
fcmovnb
fild
add
imul
fild
es
in
add
pop
cmp
movs
jg
push
and
mov
cmp
out
jno
gs
fcom
rol
inc
dec
add
daa
adc
jb
add
push
inc
add
sbb
mov
jo
pop
xchg
call
je
push
pop
imul
cs
dec
loopne
call
gs
inc
and
out
daa
pop
inc
ins
add
sti
push
add
or
or
push
dec
aaa
adc
add
inc
sub
inc
mov
add
cmps
push
scas
ins
jle
add
inc
xor
add
xor
lahf
stos
push
push
movs
(bad)
or
or
std
test
adc
sub
ins
cld
mov
mov
(bad)
dec
jl
and
add
sbb
jg
jmp
je
mov
sbb
mov
sbb
mov
cmp
mov
or
int3
fadd
and
pop
lock
push
(bad)
sub
pushf
int3
sub
repz
call
ins
mov
sbb
cmp
loopne
xor
and
push
(bad)
sbb
jmp
ret
cmp
loopne
push
inc
jae
stos
inc
test
in
ins
pop
push
push
lea
inc
jb
inc
or
repnz
aaa
add
or
push
dec
nop
adc
mov
sbb
xchg
sub
dec
jb
mov
cmovs
sbb
dec
push
inc
add
pop
je
cld
outs
cmp
repz
iret
push
or
dec
add
push
add
jns
push
jbe
xchg
or
or
mov
cmps
ins
pushf
and
push
inc
mov
sahf
in
inc
push
mov
sbb
arpl
add
push
les
push
push
ss
pop
lock
enter
outs
aaa
retf
add
jge
and
xchg
or
enter
rol
add
mov
call
mov
sbb
in
scas
ror
push
shl
mov
adc
jle
push
inc
pop
pop
cmp
jnp
push
xor
rol
push
fadd
std
and
add
sub
sbb
mov
cs
daa
dec
mov
pop
rcr
dec
test
test
add
cmp
fcom
push
test
add
pop
cmps
push
mov
sti
(bad)
jmp
cmp
std
cmp
sbb
and
or
movs
mov
mov
cld
lahf
pusha
mov
mov
les
push
dec
mov
jmp
pop
dec
fs
in
dec
push
add
cmp
das
and
ds
add
mov
outs
mov
or
mov
add
mov
mov
mov
lock
pop
pop
nop
jle
lock
call
add
test
xchg
add
pop
and
dec
sub
push
mov
mov
pop
inc
xchg
sbb
rcl
pop
test
inc
mov
add
jmp
or
(bad)
adc
mov
sahf
mov
mov
xor
mov
das
jae
jl
ret
adc
push
mov
mov
inc
sub
inc
movs
cmp
mov
sar
call
adc
or
sti
jecxz
push
pop
cmp
test
cs
xor
xor
sbb
ja
jne
sub
sbb
sbb
jno
jp
sub
mov
ret
fdivr
add
xor
sti
inc
jmp
or
xchg
aad
xor
fistp
push
pusha
loope
dec
loop
adc
add
call
iret
ret
sbb
add
cmc
rol
dec
ja
aaa
mov
or
test
add
add
or
add
jmp
mov
and
mov
pop
push
aaa
dec
aam
aam
hlt
sbb
add
push
and
xchg
add
mov
(bad)
mov
push
shl
inc
push
test
mov
and
push
add
adc
sub
or
push
cmp
(bad)
test
push
test
sbb
jle
mov
and
sbb
push
xor
nop
cmp
sbb
mov
add
daa
push
arpl
push
xchg
sbb
xchg
xchg
movs
daa
mov
sbb
jne
mov
int3
mov
scas
sub
pop
mov
lods
push
inc
pop
movs
and
mov
mov
add
adc
sbb
pop
adc
cli
adc
call
adc
push
mov
addr16
arpl
mov
mov
pop
push
add
push
push
mov
push
in
xchg
mov
mov
or
lods
cmp
add
mov
fbld
push
inc
or
es
mov
jmp
add
dec
push
push
xchg
scas
add
or
in
add
pop
cli
or
test
mov
movs
xchg
aas
(bad)
jmp
into
add
stos
cmp
in
out
and
mov
popf
(bad)
out
mov
dec
mov
mov
push
dec
dec
je
sbb
(bad)
js
scas
movs
es
or
sbb
or
fs
movs
lods
xor
adc
daa
xor
inc
mov
push
xchg
xor
add
inc
push
(bad)
sub
fadd
add
sbb
or
dec
dec
mov
mov
lods
dec
pusha
add
push
mov
repnz
call
xchg
push
sub
pop
inc
enter
stos
(bad)
lea
sbb
sub
adc
lahf
add
sub
(bad)
jge
add
cs
sbb
sub
sub
xchg
ja
mov
push
icebp
mov
adc
pop
nop
cmps
out
cmp
loope
push
test
inc
mov
popa
and
mov
sbb
jmp
jb
pop
push
fs
adc
jae
adc
hlt
mov
mov
adc
pop
movs
adc
inc
inc
dec
js
push
rol
adc
cld
jb
or
movs
cmp
or
hlt
inc
cmps
movs
add
or
js
jno
fisttp
fmul
bound
push
mov
mov
lods
cmps
cmps
sbb
test
jne
or
inc
dec
test
mov
nop
mov
jae
stos
loopne
js
stc
mov
cwde
adc
movs
rol
rcr
or
adc
(bad)
outs
adc
sbb
sbb
sbb
inc
sbb
add
and
adc
stos
clc
add
sbb
les
popa
addr16
mov
push
fcom
pop
add
xlat
adc
add
test
mov
sub
mov
push
inc
mov
adc
jnp
mov
and
js
add
mov
xchg
cmc
adc
adc
push
add
xlat
lock
xor
outs
loopne
clc
or
cld
clc
push
dec
aam
rcl
fst
mov
in
and
cmps
addr16
jle
fisttp
call
(bad)
scas
clc
sbb
scas
test
jnp
jo
mov
sbb
and
jmp
ds
rol
imul
push
adc
add
or
movs
push
adc
or
cmp
mov
or
push
pusha
je
xchg
mov
mov
sub
pop
test
test
push
mov
push
(bad)
add
sub
stos
push
loopne
inc
mov
dec
mov
add
shl
add
and
jmp
rol
pusha
dec
push
and
aas
mov
mov
or
sbb
and
sub
push
sysret
sub
ret
aad
mov
jle
add
addr16
ja
and
mov
pop
outs
movs
mov
in
ret
push
sub
jecxz
cli
nop
out
inc
pop
inc
inc
mov
add
inc
mov
inc
push
ins
out
cmps
in
sbb
ds
inc
xor
sub
fadd
pop
retw
lahf
clc
xchg
adc
cmp
xor
xchg
dec
inc
inc
and
jnp
verr
es
xchg
cli
xor
xor
mov
mov
add
add
fidivr
ins
(bad)
ja
sub
mov
pop
lods
inc
repz
pop
xchg
push
sub
cmp
add
and
out
sbb
pusha
rcl
lock
out
xchg
jo
pop
xchg
outs
jb
add
ret
push
fwait
mov
inc
or
add
icebp
jg
aaa
or
outs
sbb
sbb
scas
(bad)
(bad)
jle
cmp
setb
adc
and
mov
cmp
(bad)
int3
les
neg
or
jmp
sbb
xor
mov
mov
mov
xor
jo
jle
adc
pop
push
add
enter
push
cmp
loop
test
jle
inc
lock
gs
xchg
(bad)
fisttp
cld
add
dec
jne
add
push
pop
push
sub
(bad)
shrd
mov
imul
push
inc
fs
dec
and
push
es
add
or
ja
mov
or
and
mov
mov
cmp
inc
hlt
stos
adc
mov
add
enter
cdq
push
adc
inc
inc
or
add
outs
push
inc
ret
push
or
pop
aas
xor
hlt
lea
xor
jmp
adc
inc
adc
xchg
test
xchg
test
and
or
adc
bound
out
ror
gs
sub
jno
or
mov
ret
or
stos
pop
mov
in
inc
test
jge
pop
ss
push
xchg
adc
test
or
sar
popa
cmp
test
fild
pop
fsub
dec
jge
dec
mov
mov
rol
jo
test
push
daa
in
jns
loope
or
adc
fldcw
call
add
pusha
in
add
xor
les
push
daa
and
xchg
rol
mov
pop
pop
(bad)
test
arpl
out
mov
xchg
sub
fild
sbb
sub
sub
in
fld
jnp
clc
cmp
lahf
and
aas
movs
dec
jmp
popa
push
or
(bad)
fwait
cmp
in
mov
lods
loopne
mov
inc
retf
xchg
sahf
pop
ins
mov
in
dec
mov
adc
loop
fcomp
xchg
in
adc
sbb
mov
ret
ror
std
loope
loopne
imul
or
xchg
pushf
add
icebp
adc
inc
adc
adc
fimul
call
add
sub
pop
sub
push
popa
pop
ror
inc
push
push
xchg
pop
dec
xadd
loopne
mov
pop
sub
mov
aam
movs
les
jne
xchg
inc
pop
lea
and
add
mov
inc
or
mov
xchg
int
xor
pusha
clc
(bad)
sub
sub
lods
mov
push
enter
paddb
xchg
add
mov
leave
test
ins
lock
add
ror
lds
add
inc
mov
xor
or
int
sti
clc
not
fwait
cmps
call
or
mov
pop
pop
dec
jne
xor
cmp
push
xchg
xor
jno
push
sbb
sbb
sub
movs
les
push
shr
jo
das
sar
jge
ror
inc
inc
out
popa
aas
add
cmc
call
loopne
pop
push
in
xor
and
les
sbb
in
cmc
or
sbb
jmp
gs
add
pop
inc
xchg
mov
aaa
dec
or
and
mov
out
mov
cpuid
push
mov
dec
outs
out
jecxz
pusha
push
fs
jae
add
jbe
stos
push
pop
adc
popa
das
or
adc
add
mov
sbb
or
or
push
jne
outs
imul
jmp
jae
push
ja
outs
pop
push
add
daa
pop
add
add
adc
and
outs
and
cmp
and
sbb
adc
pop
push
adc
xchg
std
sbb
enter
adc
mov
(bad)
ja
mov
les
dec
mov
sub
adc
popf
int3
daa
repnz
push
and
xor
into
push
add
add
adc
ss
add
les
and
push
pop
imul
xor
shl
jmp
test
push
push
or
mov
dec
pop
adc
je
xchg
cmp
in
pop
nop
cdq
js
rol
adc
ins
mov
fwait
jp
je
jnp
pushf
dec
and
enter
or
ret
jg
in
or
out
jge
jo
cld
dec
add
inc
shr
(bad)
pop
push
dec
push
test
mov
les
lahf
inc
in
(bad)
call
mov
and
loopne
in
mov
adc
lds
mov
push
mov
call
cmc
aaa
fwait
adc
add
cmc
aad
adc
sbb
or
int
dec
or
icebp
mov
rdpmc
(bad)
xchg
mov
loop
cwde
xor
jg
cmp
push
xor
jg
mov
lock
add
mov
jg
mov
mov
jg
add
jno
imul
shr
mov
dec
pop
push
bound
lea
mov
lods
mov
enter
loopne
(bad)
hlt
pop
sbb
out
and
dec
addr16
mov
test
add
outs
and
mov
jnp
pusha
or
xchg
sbb
jo
add
out
fisub
dec
mov
int3
sbb
jo
push
and
fisttp
test
pusha
ins
jbe
cs
jle
push
ret
add
inc
and
push
or
sub
or
aaa
and
es
out
mov
and
jb
arpl
je
jo
rol
inc
fld
sbb
xchg
xchg
ret
jbe
iret
enter
push
ins
mov
push
mov
mov
ret
enter
inc
xchg
push
xor
lahf
xchg
ror
lahf
pop
ja
pop
mov
fs
inc
ds
pop
push
adc
pop
inc
mov
jg
mov
mov
jbe
push
mov
sbb
fild
push
xor
and
cmp
xchg
mov
nop
add
pop
push
das
jmp
xor
fwait
adc
sub
popf
or
mov
adc
daa
pop
pop
pop
pop
inc
sub
jne
clc
mov
mov
add
mov
(bad)
push
dec
cs
push
cld
sub
ror
addr16
pop
or
push
dec
rcr
pushf
fadd
pop
les
add
pop
in
ffreep
and
addr16
push
inc
std
add
adc
cmp
or
(bad)
and
xchg
addr16
push
and
sub
daa
loope
repnz
cmp
out
add
pop
push
fdiv
mov
mov
(bad)
push
jnp
lods
stos
jne
clc
clc
daa
es
add
scas
mov
rcl
out
xchg
(bad)
je
push
loopne
pop
dec
mov
rcl
push
mov
dec
ins
cs
ins
or
adc
cmp
pop
cmps
inc
das
aam
or
xor
push
mov
and
or
mov
and
pusha
mov
clc
lock
inc
ss
fdivr
vsqrtsd
or
dec
mov
push
adc
ret
pop
ins
ss
mov
mov
mov
ins
add
pop
ror
and
xor
mov
and
dec
aad
pop
sbb
je
ret
or
scas
sbb
nop
movs
js
dec
xchg
adc
out
adc
push
cmp
mov
mov
adc
jb
sub
adc
push
pop
dec
in
cmp
or
iret
sbb
inc
jmp
jo
sbb
mov
clc
lock
sbb
add
imul
jmp
add
add
popa
dec
inc
cmp
mov
jp
out
push
fxch
add
shl
and
add
cmp
push
jb
popa
pop
and
jo
shl
and
add
arpl
daa
push
xchg
or
popa
add
sub
or
or
cmp
movs
add
sub
cmp
add
adc
mov
loope
add
aaa
and
pushf
add
add
in
add
mov
lea
mov
test
pop
mov
(bad)
cli
and
mov
lods
pop
mov
mov
shl
retf
mov
imul
xor
xchg
mov
mov
jb
inc
es
jo
shr
scas
push
push
test
dec
stos
(bad)
cmps
hlt
enter
add
outs
test
add
mov
loop
in
xlat
aam
ins
and
push
cmps
ret
dec
add
je
loop
or
lods
lock
jne
jo
inc
test
adc
add
xchg
adc
add
ret
loopne
xchg
cmp
pop
test
jmp
mov
jne
sbb
lods
in
jb
enter
fild
pop
rol
or
sub
fild
jae
dec
inc
push
mov
mov
cmp
js
call
jnp
sbb
dec
and
add
aas
cs
or
adc
pop
add
jno
push
lock
aas
call
out
jns
sub
push
ds
push
push
push
(bad)
loopne
and
and
out
push
syscall
xchg
add
not
sqrtps
(bad)
hlt
push
je
sub
push
add
rol
(bad)
inc
not
xchg
fdiv
dec
loopne
adc
cwde
add
pop
mov
sbb
adc
or
ins
call
add
sub
xchg
dec
jne
or
pushf
inc
jo
sbb
mov
mov
xor
mov
add
inc
jne
mov
add
mov
push
pop
or
sbb
inc
cmps
push
adc
stos
aam
std
inc
ins
addr16
hlt
xchg
test
ret
jo
jo
and
adc
adc
stos
ins
xor
push
ja
jae
push
or
dec
add
inc
in
push
and
ret
adc
jns
add
adc
ds
mov
cmp
out
fdivr
cmc
push
icebp
dec
inc
sub
cmp
in
cmc
mov
xchg
or
je
xchg
ja
std
or
mov
mov
sub
sub
popf
sbb
jp
test
sbb
dec
(bad)
mov
or
int
ins
jbe
pop
mov
scas
inc
adc
lods
pop
cwde
leave
push
inc
jbe
test
inc
jge
pop
sbb
imul
push
fwait
add
xor
adc
test
inc
stos
cmp
add
sub
adc
xchg
fmul
adc
adc
scas
adc
loopne
hlt
lods
push
inc
test
mov
cmc
(bad)
pop
push
add
scas
sbb
xchg
or
inc
lock
mov
bound
shr
adc
pop
push
call
lock
ror
sbb
adc
and
sbb
jmp
or
loop
ret
test
push
push
jae
lds
pop
sbb
sub
adc
add
dec
hlt
je
add
ins
and
and
add
sub
and
xor
ror
jmp
cmp
add
dec
daa
and
jl
frstor
imul
dec
ss
lock
dec
adc
xor
mov
loope
nop
popa
fs
or
sub
cmps
or
add
mov
fadd
push
sub
sbb
ja
sub
cs
xor
fadd
mov
add
stos
inc
loopne
leave
xor
xor
inc
ins
add
or
mov
add
(bad)
jl
jae
add
pop
xor
adc
sbb
enter
xchg
add
push
dec
fs
jmp
call
fild
mov
pop
pusha
push
pusha
pop
cmp
je
aam
push
je
add
xchg
cmp
add
imul
mov
or
cmp
ds
lods
mov
lahf
ret
mov
xor
push
xchg
add
add
fidivr
ror
inc
sbb
add
dec
jne
xchg
add
push
push
leave
push
jb
inc
inc
xor
and
inc
inc
or
vpaddq
call
cmp
lds
dec
add
mov
add
adc
dec
dec
add
add
dec
dec
call
add
push
leave
das
add
dec
daa
sub
enter
push
mov
add
hlt
push
std
sub
xchg
fisttp
sbb
fiadd
(bad)
or
jb
iret
inc
mov
fs
stc
push
shl
in
lea
fs
cmc
adc
mov
or
inc
sub
push
cmp
inc
jge
enter
xchg
inc
sbb
push
aas
outs
xchg
xchg
and
and
and
and
mov
fadd
and
and
and
sub
fs
mov
cld
xor
dec
jo
xlat
jns
arpl
mov
add
jns
sbb
cdq
or
or
loop
sub
xchg
jg
or
mov
push
ins
or
test
aad
fs
bound
or
lods
adc
hlt
outs
js
adc
sub
fistp
fsubr
jmp
fldenv
das
inc
push
mov
xchg
push
push
idiv
ins
add
pop
inc
xchg
not
xchg
add
xor
mov
push
dec
movd
inc
test
push
add
aas
xor
inc
mov
push
inc
cmp
sbb
inc
inc
fsub
sub
or
xchg
mov
mov
or
das
(bad)
lahf
pop
xor
pop
dec
xor
outs
or
mov
dec
jae
sub
ins
mov
or
and
cs
or
ficomp
inc
retf
cmp
mov
dec
pop
mov
movs
mov
ja
aad
inc
add
xor
or
dec
sub
mov
push
js
inc
sub
mov
lds
out
sub
sbb
mov
inc
xchg
cmp
jo
or
out
loope
mov
pop
cs
cwde
das
sub
pop
sub
aas
or
movntps
push
push
(bad)
inc
mov
inc
lods
push
cs
mov
add
adc
rol
push
adc
xor
fwait
mov
fist
ja
stc
retf
shr
imul
mov
ror
jo
dec
adc
push
mov
lahf
pop
ror
outs
outs
pop
das
adc
push
inc
adc
sbb
cmps
ss
cmp
fcmovnb
popf
into
ins
add
adc
and
or
mov
mov
loope
push
js
mov
loop
xor
jp
mov
inc
cmp
or
fld
cmc
cmps
clc
cli
ficom
mov
inc
mov
or
cli
push
xchg
add
or
aam
cmp
inc
popa
pop
add
jge
shl
push
add
sub
sub
test
jmp
scas
les
xchg
adc
mov
xor
inc
lock
stos
mov
sar
inc
xchg
dec
inc
bound
in
sbb
sbb
adc
(bad)
xchg
mov
cmp
adc
mov
pop
sti
pop
dec
inc
push
lea
xchg
idiv
movs
adc
sub
rcl
cmp
bound
adc
sbb
sbb
fsubr
add
mov
sar
and
push
add
add
jns
jns
scas
and
cmps
or
push
lock
cmc
jne
xchg
fcom
imul
mov
es
or
js
jo
xchg
shl
cmp
fsubr
inc
pop
mov
leave
call
and
cmovno
mov
scas
inc
mov
mov
dec
jno
and
dec
sbb
loope
rcr
pop
pop
xor
inc
pop
test
inc
or
add
retf
push
in
pusha
mov
cmps
mov
ja
cdq
sbb
fsub
jmp
adc
inc
adc
jmp
mov
fld
mov
inc
mov
cmp
or
or
rol
nop
sub
sub
loopne
mov
mov
or
adc
mov
jo
dec
ret
mov
fadd
push
jmp
lahf
inc
lock
mov
hlt
dec
mov
mov
cmp
aaa
add
lds
jg
cmp
mov
cmp
mov
je
test
jle
test
jle
loopne
push
push
jmp
or
stc
fstp
fwait
cmp
jge
mov
fdiv
push
jp
pop
mov
jle
xor
inc
mov
lea
jno
cmp
repnz
pop
and
add
mov
enter
fdivr
xor
add
inc
jmp
cmps
sub
pop
dec
std
dec
or
sub
xor
nop
add
jp
adc
xor
fwait
ins
loopne
call
inc
das
stos
or
shr
adc
mov
rol
ins
sbb
mov
test
push
sbb
cmp
les
lock
xor
mov
xor
punpcklbw
xor
mov
enter
inc
mov
jl
aam
inc
add
fsub
cmp
jae
out
fmul
iret
jmp
xchg
mov
jbe
adc
mov
rcr
aad
pop
jmp
xor
ret
pop
push
pop
daa
call
sbb
movs
adc
(bad)
push
sti
mov
fimul
pop
mov
sub
test
sub
inc
out
sub
jne
jno
jle
add
pop
push
imul
sub
jmp
mov
adc
mov
cmp
add
mov
aaa
cmp
adc
add
iret
imul
rcr
adc
pop
sti
mov
mov
pop
lea
adc
std
sbb
pop
ret
mov
test
and
(bad)
mov
pop
mov
sbb
mov
push
cmc
xchg
push
push
mov
xlat
outs
and
jo
gs
enter
add
push
cmps
push
ret
arpl
hlt
xchg
sub
push
lods
mov
fcom
sbb
push
pop
daa
pop
cmp
cmp
pop
cmp
imul
leave
test
adc
xor
inc
xor
mov
loopne
mov
dec
hlt
dec
pop
popa
pushf
arpl
mov
jmp
nop
jl
loopne
aad
or
fprem
add
mov
cmp
retf
inc
rcl
xchg
or
imul
clc
xor
inc
rcr
aas
aam
fcomp
fld
into
(bad)
loopne
imul
inc
xchg
add
add
xchg
add
xchg
jl
cld
jg
cwde
or
fdivr
sub
jnp
sub
movs
add
push
loopne
xchg
cmp
imul
sub
cmp
and
and
dec
cmp
sub
xchg
cmp
push
cmps
scas
ret
mov
sub
es
ja
ret
jg
in
cmp
mov
pop
jl
mov
jl
mov
mov
cdq
jmp
add
nop
push
mov
and
ret
or
loopne
or
mov
ds
(bad)
add
add
shl
sub
sbb
hlt
stc
cmps
xchg
add
std
jmp
fwait
add
sub
dec
add
stos
lods
jle
imul
inc
jns
mov
xchg
mov
xor
imul
add
sub
jae
push
mov
xor
arpl
loope
mov
aas
scas
clc
shl
adc
push
dec
xchg
daa
mov
je
mov
jg
mov
or
pop
nop
repz
mov
mov
adc
inc
mov
adc
push
mov
ss
add
sbb
lods
push
push
or
aad
inc
outs
inc
ret
xchg
jle
mov
ds
mov
fstp
push
jo
add
or
mov
je
mov
loopne
or
adc
jne
shl
and
push
xchg
call
dec
sbb
lock
rcl
jmp
adc
test
adc
fild
popf
sub
test
lock
mov
mov
and
shl
out
cmp
xor
push
or
jle
pop
shl
and
das
sbb
sbb
cmp
out
inc
xlat
add
or
push
pop
push
inc
inc
add
imul
or
adc
mov
dec
inc
push
dec
sub
fild
sbb
lds
add
mov
pop
lods
add
std
test
or
aas
aaa
cld
or
shl
dec
push
pusha
mov
lahf
push
add
mov
dec
ret
mov
shl
lock
lock
adc
or
adc
add
add
test
repnz
fsubr
ss
iret
aam
push
loope
or
push
pop
xchg
mov
add
add
jb
ror
add
outs
pusha
jecxz
fld
or
pop
(bad)
jle
stos
add
pop
ss
inc
xchg
adc
test
mov
pop
jo
mov
ror
addr16
rcl
scas
test
dec
icebp
icebp
sahf
movs
sbb
xchg
rcr
mov
pcmpeqw
xor
mov
pop
call
add
and
push
aad
fs
(bad)
xor
adc
sbb
and
xchg
sbb
sub
mov
and
enter
movs
idiv
jecxz
dec
push
adc
push
sub
push
hlt
xlat
sbb
push
push
icebp
xchg
or
sub
inc
adc
(bad)
xchg
scas
loope
fimul
or
hlt
test
imul
aaa
lods
mov
xchg
hlt
lock
mov
shl
mov
sbb
movs
hlt
cmc
ror
push
dec
lods
mov
shr
jl
or
pop
cdq
inc
test
xchg
in
add
xchg
lds
adc
cmp
lea
mov
ss
inc
loopne
push
xchg
in
mov
add
dec
mov
hlt
push
add
enter
push
out
hlt
loope
cli
adc
push
xchg
inc
leave
dec
clc
mov
add
pusha
or
pusha
fsubr
ins
bound
fistp
ret
cmp
dec
mov
jmp
xor
movs
enter
enter
out
loopne
(bad)
arpl
mov
pop
test
inc
mov
jbe
xchg
mov
push
xchg
xchg
push
in
adc
inc
aam
jne
in
shl
test
adc
jecxz
call
mov
dec
test
sti
push
sbb
mov
and
test
jo
push
neg
aas
adc
xchg
lds
sbb
push
add
push
mov
push
cs
in
or
popa
int
loopne
mov
fisttp
xor
cld
mov
mov
mov
add
lock
push
jns
hlt
mov
inc
scas
push
xchg
add
mov
add
ret
shr
call
mov
xchg
sahf
inc
scas
nop
pushf
mov
das
or
xor
inc
add
test
adc
push
sub
cwde
add
pop
and
int3
pop
add
das
test
out
or
dec
xchg
ret
ficom
mov
neg
push
fimul
movs
xchg
call
or
cmp
or
cld
xor
push
movs
push
dec
shl
stos
push
add
ins
add
test
cmp
jne
and
test
jne
std
xor
sub
sahf
jmp
mov
or
jne
pop
push
add
pop
inc
sub
fbld
jmp
arpl
push
xor
hlt
xchg
in
mov
xchg
daa
xchg
hlt
in
adc
xchg
sub
adc
arpl
sub
xchg
adc
sub
push
lock
add
movs
(bad)
ror
rcl
icebp
sub
int
jnp
or
cmp
stos
xchg
sar
add
pop
or
mov
jo
cmps
stc
icebp
test
adc
cs
mov
ret
test
mov
scas
mov
pop
outs
mov
adc
xchg
dec
add
lods
daa
imul
mov
stos
js
mov
lods
(bad)
sub
shl
jg
xlat
jle
inc
ins
xchg
dec
add
fs
mov
cdq
mov
add
xchg
add
fidivr
into
jb
lahf
mov
jp
mov
fs
into
clc
mov
push
push
mov
jge
push
out
push
pop
fimul
clc
ffreep
std
jmp
jg
add
push
adc
push
or
xor
xor
or
loopne
adc
mov
jg
mov
add
popf
inc
push
mov
arpl
or
and
fisttp
pushf
sbb
(bad)
mov
dec
rol
mov
jne
mov
daa
inc
out
fcom
js
add
sbb
bound
call
cmp
ins
adc
adc
dec
pop
cli
cmc
cmp
bound
comiss
cmp
fbstp
adc
pop
cmp
adc
fisttp
push
mov
sar
jmp
sub
jne
xor
test
call
or
and
add
push
cli
stc
adc
add
push
pop
clc
repnz
dec
outs
hlt
es
and
mov
or
inc
ror
in
mov
scas
sbb
pop
pop
das
inc
jnp
inc
adc
add
or
add
mov
push
mov
push
loope
jmp
pusha
or
mov
nop
inc
inc
invlpg
or
jnp
pop
sbb
and
pop
inc
je
stos
inc
ins
aas
addr16
pop
add
popa
or
dec
stos
adc
fsub
jne
out
cmps
lea
push
push
(bad)
pop
out
adc
mov
das
adc
add
add
or
push
pop
cmp
pop
add
adc
and
and
add
test
adc
mov
adc
ret
call
jmp
movs
jle
add
out
mov
out
rol
inc
add
(bad)
mov
inc
or
xor
test
clc
add
pop
shl
xchg
adc
dec
addr16
mov
loop
inc
retf
fnstsw
cmp
test
sub
inc
stos
adc
les
add
add
dec
movs
cmp
jb
data16
xor
mov
jmp
sar
ficom
or
ret
add
ds
fwait
or
xchg
test
jno
int3
push
mov
or
pshufw
ror
mov
or
add
sub
stos
je
jmp
lock
adc
ror
fsub
add
in
mov
sub
(bad)
iret
fadd
sar
sbb
js
mov
add
sbb
or
leave
sar
jnp
in
or
pop
add
mov
pusha
mov
pop
and
or
add
add
mov
and
shl
das
xor
enter
add
outs
add
or
aam
popf
jmp
jns
jmp
inc
jp
pusha
cmp
and
inc
jl
js
xchg
pop
or
jmp
jo
frstor
pop
test
xlat
dec
sub
fdiv
and
pop
test
and
outs
or
add
and
imul
sbb
and
jb
inc
sub
and
and
scas
ins
movs
out
xlat
add
loopne
or
inc
sbb
add
jnp
add
jg
adc
xor
cmc
or
and
inc
jmp
scas
aad
mov
aad
pop
adc
inc
adc
outs
outs
sub
loopne
and
lods
mov
cmp
add
pop
mov
sub
iret
jmp
out
les
sbb
loope
fbstp
xor
mov
or
ja
jne
mov
add
fisub
pop
pop
xchg
mov
add
nop
push
push
test
add
xchg
movs
add
loopne
inc
sbb
dec
cs
dec
scas
fisttp
add
dec
mov
add
add
adc
push
push
mov
sub
clc
cmp
cmp
je
pop
(bad)
add
mov
imul
outs
ins
bound
lods
adc
or
sbb
add
fsub
gs
xlat
and
dec
add
or
(bad)
js
mov
dec
mov
dec
adc
mov
dec
mov
add
and
mul
outs
fs
jo
or
add
out
popa
imul
push
call
pop
sub
(bad)
into
or
pushf
jge
in
push
jo
jb
scas
mov
daa
or
je
jae
adc
sbb
mov
mov
or
mov
xchg
test
outs
outs
mov
push
imul
or
cli
push
and
xor
cmp
sub
imul
ja
es
and
push
adc
cmp
xchg
push
jo
sub
sbb
mov
lock
adc
popa
adc
enter
mov
imul
or
bnd
inc
iret
push
(bad)
jno
dec
(bad)
ret
adc
jb
or
pop
sub
(bad)
sbb
push
dec
xchg
mov
or
(bad)
out
push
adc
and
push
adc
gs
push
outs
call
sbb
lods
or
and
ins
and
or
adc
in
dec
adc
mov
sub
in
sbb
sub
cs
sbb
icebp
je
mov
cmp
push
outs
arpl
cmp
adc
and
sbb
dec
mov
cmp
cmp
inc
jecxz
xor
push
pusha
das
fistp
shl
ret
and
mov
push
xor
sbb
rcr
xor
mov
and
bound
xor
mov
lods
mov
mov
mov
mov
and
push
adc
add
call
ins
adc
rol
mov
fs
xor
popa
mov
sub
xor
int3
sysenter
dec
popa
popa
arpl
lds
push
stos
jae
adc
jbe
fsubr
adc
adc
and
pusha
pop
or
adc
dec
ins
push
sub
pop
sub
call
aas
inc
ins
jns
push
aaa
xor
pop
ins
or
test
and
add
add
cmp
test
out
push
loopne
fsub
aas
mov
push
xor
fidiv
inc
stos
adc
aad
mov
adc
test
test
pop
repz
outs
sub
lds
test
cs
pop
xor
mov
xchg
adc
push
sbb
ret
mov
pop
adc
or
sbb
pop
jo
arpl
cmp
sbb
xor
inc
dec
add
xor
loopne
sbb
push
xchg
bound
add
mov
fist
fiadd
pop
daa
lea
jmp
sub
test
adc
push
pusha
inc
push
adc
inc
adc
mov
add
sbb
inc
xor
bound
test
fcomp
cmp
push
inc
xor
ds
dec
and
jo
cmp
inc
and
mov
jo
adc
sbb
ins
sbb
xor
popa
or
dec
adc
dec
inc
lahf
loopne
adc
test
ja
ror
mov
push
adc
mov
adc
push
popf
sbb
jecxz
jb
test
push
or
popf
adc
fimul
aad
push
(bad)
mov
leave
or
xor
mov
(bad)
ins
or
dec
pop
adc
xor
fisttp
mov
pop
in
push
mov
das
pushf
pop
fidiv
cmp
pusha
xchg
or
adc
in
sub
push
jne
aad
or
push
xchg
das
fistp
cmp
ins
rcr
pop
xor
dec
or
jae
ss
push
faddp
ror
sbb
mov
pop
push
adc
lea
in
add
jnp
and
inc
dec
mov
push
arpl
popa
cmp
mov
pusha
xor
xor
add
leave
sbb
lea
cmp
and
das
or
pop
stos
aaa
xlat
or
inc
jne
push
mov
lods
and
and
ins
add
sbb
xchg
cmp
stos
outs
fs
outs
bound
or
and
xchg
scas
mov
mov
ret
daa
sbb
fwait
nop
mul
jnp
adc
and
adc
or
sbb
popa
das
lds
inc
shl
mov
nop
bound
mov
inc
rol
add
or
test
and
cld
adc
jg
or
cmps
adc
shl
jmp
(bad)
pop
and
lods
ins
ins
dec
mov
inc
test
and
add
mov
and
cmp
gs
rol
sbb
rol
mov
aam
rol
mov
push
add
cmp
xor
ss
cmp
add
push
push
sbb
jbe
in
mov
shr
aad
cmp
ficom
xor
sub
rcr
xor
cmp
push
inc
nop
nop
sub
or
adc
push
ja
push
shl
enter
xlat
iret
pop
inc
sahf
adc
adc
cmp
sbb
cmp
dec
imul
bound
in
adc
std
pusha
(bad)
cmc
xchg
xchg
pop
sbb
and
lea
sub
dec
in
adc
xchg
cmp
shl
rcr
cdq
daa
fisubr
ret
adc
adc
or
js
lock
inc
ss
or
or
lock
int3
inc
imul
cmps
lock
xor
inc
lods
popa
jo
xchg
pusha
ret
xor
lods
pusha
shl
cmp
sahf
pusha
mov
xor
out
out
add
mov
loopne
imul
cmp
ja
and
cmp
cwde
and
mov
sbb
cs
cmp
gs
aaa
jnp
adc
add
mov
loopne
ret
and
and
sbb
stos
mov
cdq
adc
sbb
inc
push
xchg
push
adc
or
push
pusha
rol
fwait
sub
sub
or
dec
add
and
xchg
and
imul
punpcklbw
mov
gs
add
inc
sub
xor
xor
sbb
mov
ds
ret
and
sub
daa
das
sbb
mov
cmps
push
sbb
imul
pop
adc
or
push
push
inc
mov
aad
das
lea
mov
ror
and
xor
cmc
sbb
mov
outs
ins
push
sub
inc
(bad)
leave
sbb
dec
xor
imul
sar
mov
xor
test
arpl
ror
sub
and
mov
mov
mov
movs
jbe
mov
popf
adc
imul
aas
sub
and
addr16
nop
addr16
pop
or
sbb
les
aaa
or
fs
push
imul
(bad)
jb
ja
and
push
or
pop
push
ror
rcr
adc
or
mov
sub
or
nop
sbb
aas
and
mov
mov
adc
jge
mov
mov
out
push
dec
(bad)
(bad)
(bad)
mov
nop
daa
pop
sbb
inc
sub
adc
xor
adc
mov
call
push
xor
shr
adc
push
jo
xor
jge
sbb
bound
add
mov
push
das
and
mov
fild
scas
test
adc
pusha
data16
mov
lods
sub
loopne
xchg
push
test
stc
add
nop
xor
jl
outs
fiadd
pop
sub
sbb
outs
test
sbb
xchg
retf
hlt
paddusb
push
ret
(bad)
xor
lock
dec
test
ins
das
addr16
jmp
push
or
ficom
push
jmp
setge
adc
jp
sbb
sub
or
inc
pop
sbb
xor
push
mov
mov
aas
ins
adc
mov
adc
xchg
sub
sbb
inc
xor
ins
and
xchg
adc
lods
pop
es
int
adc
shr
aas
icebp
inc
adc
and
mov
add
and
cmp
daa
dec
cwde
and
push
inc
movs
and
mov
or
inc
mov
lea
jmp
sbb
dec
xor
and
fwait
add
daa
inc
mov
arpl
test
stos
dec
add
es
out
sti
adc
dec
sbb
add
data16
shl
inc
jnp
and
add
adc
push
dec
add
mov
sbb
ins
pusha
sub
adc
jae
or
sbb
mov
pop
inc
add
int
push
sub
inc
sub
fld
mov
fild
add
(bad)
fistp
fild
pop
sub
mov
cld
cdq
loopne
ins
daa
fiadd
(bad)
adc
(bad)
adc
imul
inc
ficom
and
lahf
lods
jo
adc
or
adc
mov
arpl
aas
or
and
jmp
cmp
imul
fist
and
sbb
dec
outs
popa
aaa
adc
pop
daa
adc
pop
and
and
sbb
shr
movs
add
fs
ret
cmps
ret
push
and
adc
cmovns
inc
ins
pop
or
daa
pop
sbb
adc
jge
mov
add
sbb
mov
cmp
je
or
inc
xchg
jb
mov
xor
not
xor
daa
push
adc
loope
push
jne
(bad)
nop
fcom
push
sub
cmps
pop
xlat
nop
adc
xor
push
(bad)
or
xor
ss
pop
imul
mov
sub
add
sub
aaa
or
push
js
shl
inc
jno
mov
(bad)
dec
push
bound
add
add
jo
adc
repz
and
jae
pop
ss
fsubr
jae
fstp
test
mov
lahf
pop
mov
pop
adc
daa
lds
sub
in
shl
stos
shr
cmps
xor
mov
adc
loope
sub
cmp
(bad)
daa
inc
ins
jmp
jns
adc
xor
aam
jl
sub
inc
retf
lods
imul
pusha
sbb
mov
sbb
inc
repz
test
sbb
imul
push
xor
adc
popa
jae
push
daa
push
test
addr16
pop
add
push
out
daa
or
xor
or
pop
addr16
mov
add
sbb
or
or
sbb
fcom
push
mov
inc
dec
xchg
data16
and
cwde
xchg
pop
sbb
popa
sub
(bad)
and
mov
movs
aaa
and
imul
jp
in
fld1
sub
adc
cmc
cmp
jecxz
and
in
cmp
bound
push
sbb
popa
aam
pop
in
in
or
pop
mov
fist
and
sbb
imul
sub
out
neg
ja
pop
inc
pop
fmul
sbb
or
(bad)
sbb
out
adc
cdq
nop
mov
addr16
in
cs
popa
out
(bad)
arpl
sbb
lea
pop
inc
popa
cmp
mov
fsubr
outs
jb
inc
and
pop
mov
inc
and
mov
loop
loop
pop
pop
pop
inc
js
loop
pop
and
dec
das
fist
popa
adc
mov
in
mov
jb
jns
sub
add
xchg
outs
fisttp
mov
mov
or
(bad)
pop
cdq
daa
imul
cwde
shr
fs
sub
mov
and
and
inc
sub
cmp
inc
and
inc
pop
inc
aad
xchg
sbb
push
fcom
xchg
inc
data16
bound
sbb
push
scas
mov
lds
jbe
push
pop
lds
pop
cmp
inc
lds
inc
and
pop
mov
jg
jg
jmp
outs
or
leave
sub
neg
outs
and
ja
cmp
jae
popa
cmps
or
movs
outs
and
cmp
and
(bad)
cmp
fisub
adc
sbb
cmp
sbb
repnz
imul
xchg
cmp
outs
push
outs
push
outs
xchg
in
test
pop
shl
adc
inc
nop
sbb
and
rcr
and
sbb
sub
xchg
es
ins
lock
leave
gs
jae
adc
mov
sub
mov
(bad)
bound
aas
popa
mov
lea
adc
jo
mov
hlt
sub
xor
inc
call
xchg
sub
cmp
(bad)
push
cmp
aaa
sbb
ja
pop
outs
pop
adc
or
inc
rcr
inc
or
or
arpl
dec
inc
jbe
sbb
jb
arpl
fadd
push
sbb
mov
push
pop
push
lds
jge
or
inc
xor
movs
xchg
cmp
jnp
icebp
pusha
cmc
push
les
lea
pop
sbb
add
pop
add
mov
and
adc
stc
arpl
gs
sub
das
push
ins
fsub
adc
sub
das
pop
sbb
xchg
push
sub
mov
sbb
adc
inc
jmp
mov
push
adc
jo
xchg
or
lods
fist
cld
push
inc
push
daa
push
push
into
gs
mov
or
add
jne
sub
push
jbe
sbb
je
jne
cmp
inc
and
sbb
inc
ret
dec
pusha
push
nop
fsubr
nop
inc
sbb
scas
(bad)
fadd
ins
sbb
(bad)
jno
aaa
aas
push
(bad)
jmp
arpl
sub
mov
dec
inc
jb
arpl
xor
in
adc
jb
je
int3
or
pop
pop
pop
sbb
and
adc
jns
dec
cmps
inc
adc
arpl
test
test
shr
test
out
push
ins
jne
pop
sbb
out
daa
out
and
add
sti
mov
mov
movs
mov
out
inc
push
mov
loopne
rol
daa
aad
ins
or
mov
(bad)
adc
or
test
bound
lea
sub
pusha
push
arpl
or
sub
aaa
adc
cmps
mov
cmps
inc
das
push
sub
adc
(bad)
and
bound
or
loopne
xor
inc
bound
sub
maskmovq
sub
jne
bound
inc
adc
xchg
add
cmc
and
sub
sub
fwait
adc
cmps
add
adc
lds
adc
inc
or
std
push
lds
daa
mov
inc
test
das
push
jmp
xchg
pop
push
repz
jecxz
xchg
xchg
pop
daa
jecxz
adc
mov
(bad)
inc
fwait
xchg
sub
adc
das
(bad)
push
or
or
jecxz
add
das
(bad)
or
mov
movs
mov
or
adc
xor
add
sub
ja
pop
pusha
add
pusha
push
xor
test
mov
xchg
pop
adc
ins
or
(bad)
push
imul
push
cmp
mov
sub
mov
dec
sub
pop
addr16
cmp
sbb
xor
fcmovb
xlat
sbb
sbb
ret
test
push
mov
fidivr
icebp
jo
outs
neg
in
jae
jae
in
dec
jae
jae
cmp
es
jae
jae
inc
cs
jae
inc
mov
aas
pop
jl
test
out
add
ds
sbb
sbb
ja
push
cwde
jo
and
je
leave
add
sbb
ja
stos
ins
test
mov
das
mov
xor
pop
imul
fisttp
sar
push
sbb
fmul
data16
adc
jne
push
and
sub
shl
inc
inc
cmp
or
mov
xchg
xor
dec
loopne
popa
bound
xor
sub
ins
sbb
push
and
sbb
mov
repnz
or
popa
jb
sbb
xchg
ret
jno
adc
movs
pop
sub
push
aaa
push
push
outs
and
sbb
adc
or
and
je
ins
int3
adc
mov
lods
mov
push
push
ja
mov
push
jne
cmp
test
(bad)
xlat
repnz
adc
pop
or
test
cmp
push
push
aad
inc
or
push
dec
lea
fabs
xchg
xor
sub
rcr
mov
je
test
or
rcr
test
mov
fisttp
shr
mov
popa
loopne
cmc
xchg
or
repz
sbb
mov
inc
and
sbb
add
and
pop
add
push
inc
(bad)
inc
repz
sub
xor
fidivr
test
xor
dec
repz
fidiv
jne
adc
xor
sub
pop
call
test
icebp
mov
and
inc
icebp
das
icebp
or
popa
sub
xor
inc
pop
sub
xor
je
(bad)
(bad)
sub
xchg
sbb
mov
sub
pop
push
daa
adc
ss
lods
pop
xor
push
das
push
ss
(bad)
inc
ins
lods
imul
add
or
ror
lea
add
cmp
adc
mov
sub
jmp
pusha
mov
mov
sub
lods
mov
inc
add
bnd
pushf
mov
int3
inc
daa
and
add
add
bound
loope
ror
fld
mov
fwait
push
je
push
dec
movs
dec
ins
xlat
cmp
fcomp
mov
outs
add
ss
bound
cmc
daa
mov
add
aaa
popa
push
sbb
lods
cmp
jo
pop
add
jmp
test
push
push
imul
mov
shl
cmc
and
rcl
adc
in
(bad)
pusha
daa
cmp
push
mov
imul
mov
cmp
and
add
adc
mov
mov
jo
rol
push
pushf
or
dec
lods
xor
push
push
and
or
cdq
or
jg
or
sub
adc
shl
and
mov
sbb
fisubr
sbb
jo
mov
adc
popa
popa
icebp
lea
pop
or
sbb
mov
or
test
dec
sbb
push
shr
push
mov
inc
movs
sbb
cmp
pop
sub
pop
mov
sub
pop
pop
mov
call
std
inc
add
dec
mov
pop
mov
pop
movs
mov
(bad)
test
clc
push
je
shr
inc
dec
jo
pop
in
inc
pop
or
jmp
jg
dec
ja
dec
inc
sbb
sbb
pop
push
ins
xor
addr16
(bad)
ret
push
iret
xchg
pop
in
js
jmp
add
je
push
mov
imul
push
sar
or
cmc
es
xchg
or
sbb
lea
push
xor
xchg
scas
jae
jne
mov
dec
pop
sub
imul
adc
add
das
push
xchg
dec
pop
getsec
or
cmp
mov
xlat
cmp
loopne
mov
ins
add
cmp
dec
div
and
outs
outs
ins
and
mov
or
bound
and
ins
inc
sbb
pop
or
and
xchg
mov
dec
jb
(bad)
or
cli
fs
bound
sbb
mov
je
mov
sbb
add
xor
add
and
mov
xor
addr16
sub
sbb
adc
lea
test
sub
fadd
sub
ins
sbb
cmps
mov
inc
addr16
cdq
fist
adc
add
add
cmp
sub
pop
mov
cmp
adc
add
inc
inc
pop
and
leave
xchg
dec
enter
sub
daa
cmps
add
or
daa
inc
xor
or
sub
xchg
add
das
in
add
jg
inc
sbb
mov
jg
das
les
inc
mov
adc
daa
sbb
xlat
dec
or
mov
xchg
pusha
cmp
arpl
jne
mov
rol
push
inc
inc
jns
push
push
imul
cmp
je
sti
adc
push
push
and
shl
test
adc
add
and
push
ja
outs
cmp
(bad)
lea
sbb
adc
dec
adc
mov
push
jg
daa
or
push
push
inc
fdiv
sbb
shl
sbb
fwait
push
and
inc
addr16
sub
les
sbb
sbb
mov
push
xor
add
test
pop
pop
adc
ins
fs
mov
mov
push
xor
push
and
pop
or
adc
ret
sbb
ins
inc
xchg
and
mov
imul
inc
and
jns
shl
push
inc
pusha
dec
sub
mov
mov
sub
push
jmp
popa
sub
sbb
mov
mov
mov
das
daa
arpl
xor
pop
or
fisubr
sbb
daa
mov
daa
(bad)
mov
pop
daa
mov
inc
push
pop
sbb
adc
int
push
test
mov
test
jecxz
and
sbb
jg
lods
dec
xchg
pop
mov
imul
push
fisubr
pop
sub
outs
pop
jmp
jbe
shl
pop
ja
adc
sbb
frstor
mov
xchg
and
xchg
pop
or
mov
je
lea
dec
add
je
sub
adc
sub
aaa
mov
bndstx
inc
ss
dec
add
push
and
sub
lahf
mov
jecxz
cwde
sbb
nop
mov
ja
(bad)
and
sub
mov
(bad)
jle
jno
pop
ret
in
pop
and
ja
sbb
sub
sub
div
imul
adc
sub
rol
and
adc
pop
leave
popa
js
js
js
or
and
xor
push
movs
movs
or
and
inc
fadd
inc
add
shl
sub
mov
sub
pop
pop
xor
sbb
arpl
and
xor
(bad)
push
inc
jmp
and
dec
xor
sbb
movs
adc
push
dec
inc
dec
xchg
cwde
add
mov
sbb
mov
stos
dec
dec
imul
add
sbb
les
push
inc
xchg
adc
les
xor
push
sub
jo
xor
xor
js
js
js
div
lea
jmp
test
daa
imul
cmp
in
sbb
cmps
adc
sub
mov
adc
rol
adc
lds
mov
mov
xchg
xor
sub
popa
mov
bound
mov
mov
xor
inc
push
xor
pop
add
imul
fsubr
ins
pop
mov
(bad)
adc
retf
popa
mov
mov
or
or
inc
ss
cwde
push
mov
push
add
pop
inc
xchg
pop
and
mov
mov
and
sbb
cmc
and
sub
and
and
and
fmul
shl
dec
xor
popa
arpl
and
lea
je
push
cwde
dec
sbb
lods
das
or
sbb
es
mov
add
dec
xor
mov
cmp
push
sub
pop
iret
aas
sbb
les
pop
retf
aaa
and
sahf
fsubr
ja
or
pop
add
xchg
dec
mov
lods
sub
or
add
repz
cmp
dec
movs
inc
push
ret
dec
adc
push
ja
cmp
sbb
outs
ret
cmp
out
add
push
pop
adc
sbb
mov
mov
adc
enter
sub
xchg
iret
or
cmp
and
out
in
inc
imul
iret
adc
frstor
sbb
pop
xor
xor
xor
or
or
fidiv
and
ror
adc
and
ret
jne
mov
shl
mov
lods
adc
and
dec
enter
pop
adc
nop
imul
xor
pop
add
inc
sub
pop
mov
adc
hlt
and
add
xor
in
iret
add
push
mov
jae
push
push
sbb
jl
push
and
aaa
sbb
inc
sub
shl
inc
ret
xchg
in
sbb
dec
inc
mov
or
sub
push
or
loopne
add
add
inc
add
sbb
sub
pop
sub
pop
add
and
mov
cdq
push
or
xchg
or
inc
out
xchg
sbb
test
adc
push
outs
fs
adc
ins
fisub
lds
das
add
lods
and
out
mov
in
push
push
inc
fs
jae
adc
push
ror
pop
ret
xchg
daa
jae
inc
gs
add
push
movs
push
cmp
cmp
test
sbb
or
les
xchg
aam
fsub
jae
ds
xor
jge
dec
sub
lock
push
adc
mov
das
xchg
sbb
or
or
je
pop
push
sbb
sbb
retf
cmp
aad
pop
jb
pusha
or
jge
fwait
or
movsx
sbb
pop
(bad)
cmp
inc
movs
shl
int
ja
and
sahf
sub
sbb
sub
jae
or
mov
add
sub
add
xchg
pop
adc
and
mov
pop
jl
ror
add
or
mov
inc
ret
lahf
fcom
and
add
neg
sub
push
push
adc
or
or
add
cmp
dec
icebp
rcr
repnz
leave
pop
mov
cmp
lock
outs
push
cmp
rcr
add
dec
sbb
imul
popa
pop
pop
sbb
push
jl
or
adc
sub
mov
or
add
arpl
sbb
mov
sbb
jbe
jmp
mov
jae
xor
add
or
adc
jne
and
dec
mov
call
sub
pop
(bad)
jge
adc
jg
daa
sub
push
mov
fadd
dec
adc
arpl
or
adc
and
pop
adc
imul
movs
(bad)
cmovne
and
or
add
fsub
xor
call
cmp
xchg
imul
xlat
sub
sub
daa
popa
test
mov
sub
(bad)
sub
sbb
xlat
pop
jb
pusha
and
inc
pushf
push
sbb
fwait
jae
mul
push
in
je
cmp
sub
inc
addr16
bound
mov
int
aas
inc
or
xor
inc
or
add
and
sbb
jbe
cmp
push
cmps
mov
adc
adc
test
cmp
call
dec
sub
or
(bad)
xlat
lods
xor
sbb
ficomp
sub
and
sub
add
dec
sub
add
cmp
cmps
adc
fmul
lods
push
sub
(bad)
inc
xor
popa
jmp
pop
imul
and
sub
mov
adc
call
jmp
arpl
push
bound
lods
xchg
or
xor
fwait
lods
push
xchg
xchg
gs
sub
pop
sub
dec
adc
adc
sub
push
sub
sbb
sub
test
add
fsub
sub
pop
sbb
ss
aaa
fwait
sub
cdq
mov
mov
sbb
push
add
mov
stos
imul
fnstenv
in
pop
in
sub
push
ins
fst
jecxz
fnsave
sub
jbe
xor
cs
pushf
add
push
inc
int
retf
mov
mov
and
mov
sub
push
add
add
fcmovbe
jns
daa
lods
mov
call
jno
mov
pusha
sub
mov
add
and
ins
xor
imul
aad
aad
movs
add
arpl
and
sub
push
pop
shl
pop
cmps
(bad)
adc
mov
in
cmp
pop
jnp
retf
add
loop
pop
lods
add
mov
sub
cwde
and
jge
or
inc
add
add
mov
or
popa
mov
pop
retf
fs
neg
add
inc
test
ror
data16
rol
mov
(bad)
jge
pop
mov
leave
prefetchnta
adc
jb
add
add
add
repnz
xchg
sub
fstp
add
jns
mov
jne
add
and
or
in
xchg
pop
and
movs
and
cmp
pop
daa
add
cmp
repnz
add
add
pop
shl
sub
popf
mov
wrmsr
jo
jb
add
xor
int
jl
jb
mov
gs
std
retf
xchg
sub
cmp
xchg
cmp
loope
mov
or
add
cmp
retf
xchg
cmp
pop
aas
add
mov
or
cs
jmp
add
cmove
test
mov
mov
push
push
inc
bound
dec
sbb
arpl
jb
imul
dec
adc
rol
shl
cmp
ss
(bad)
fwait
adc
jle
add
push
dec
xor
rcr
add
pop
or
pop
inc
dec
add
or
xor
mov
fadd
and
add
in
das
in
mov
seta
adc
pushf
add
add
nop
pop
adc
enter
mov
push
cmps
add
add
in
or
loopne
cmps
cmp
pushf
add
adc
das
sub
nop
push
adc
dec
add
ss
cmp
movs
ds
sub
mov
add
xor
mov
enter
or
mov
add
pushf
dec
hlt
dec
pop
add
sub
dec
add
xchg
dec
add
dec
push
mov
jo
xchg
lock
sub
cwde
pop
ds
dec
outs
popa
fs
add
add
mov
jo
push
jecxz
inc
sub
xor
xor
and
pop
pop
cmp
add
outs
cmp
aaa
mov
inc
mov
push
cs
and
enter
push
popa
int3
inc
lock
push
sbb
add
jmp
sbb
ja
addr16
mov
dec
movs
mov
and
mov
xor
jl
add
and
or
jae
mov
stc
add
shl
or
push
frstor
ins
loopne
mov
int3
inc
push
and
push
inc
jge
push
test
je
jl
mov
(bad)
sahf
add
xchg
inc
fucomp
js
push
call
js
mov
push
pop
jo
cmp
mov
jle
adc
push
pusha
repnz
repz
fmul
xor
mov
jl
add
adc
pop
mov
xchg
fist
or
inc
setno
leave
enter
mov
dec
mov
repnz
adc
adc
sahf
mov
mov
mov
push
(bad)
jg
stc
inc
sahf
mov
mov
daa
and
xchg
ins
lods
jmp
fs
cmc
cmp
iret
or
fcmovnu
inc
stos
adc
out
movq
ss
stos
pop
out
xor
aaa
stos
add
xchg
or
(bad)
xor
mov
inc
ins
adc
mov
push
push
inc
adc
retf
add
pusha
hlt
adc
push
js
ins
xchg
pop
call
xchg
xchg
cmp
dec
push
adc
enter
or
aad
mov
repnz
pop
in
inc
inc
(bad)
adc
mov
adc
mov
push
je
cmp
xor
sub
das
adc
fs
jo
mov
xchg
pop
retf
adc
push
add
aaa
outs
popa
jo
inc
iret
sbb
test
popf
add
dec
adc
leave
add
and
push
push
push
lock
mov
and
cmp
xor
push
leave
xor
add
cdq
jmp
aaa
mov
xor
ret
test
jo
fld
mov
retf
jge
inc
pop
pop
nop
jno
mov
or
fst
add
adc
lods
push
call
push
add
gs
adc
int
inc
dec
jecxz
stos
dec
data16
lock
jae
xor
push
or
inc
and
nop
inc
and
add
xchg
pop
jp
nop
xor
out
repnz
dec
xlat
add
push
aad
push
aad
add
fnsave
push
sbb
dec
in
push
or
xchg
sbb
je
dec
add
loopne
aas
mov
add
xchg
xor
icebp
adc
ins
xor
imul
adc
lahf
neg
loopne
lahf
xor
cmps
sbb
cmp
clc
mov
or
aad
sub
(bad)
test
pop
mov
clc
out
push
sbb
add
and
clc
pusha
mov
jge
add
dec
dec
sub
mov
test
jmp
inc
add
add
cmps
and
ins
pop
pop
add
adc
inc
add
outs
outs
push
repnz
in
add
shl
cmp
imul
mov
sbb
sbb
outs
and
push
ret
add
gs
in
or
aaa
adc
mov
jl
push
fcmovnb
push
push
test
js
cmp
cmp
nop
fidiv
add
cmc
mov
add
aas
add
sbb
addr16
out
(bad)
imul
cmp
add
fnsave
adc
cmp
test
inc
imul
push
ret
cmp
fs
mov
or
add
in
or
inc
cmc
adc
add
and
adc
lock
jb
inc
xor
mov
ins
push
std
jns
push
nop
fcomp
mov
cmp
jb
test
call
movhlps
jg
mov
shl
or
in
jg
xchg
js
xchg
adc
or
rol
sbb
push
rcr
or
inc
jbe
popa
bound
adc
sub
retf
mov
pop
and
push
push
dec
jae
arpl
iret
or
int
ja
cwde
test
adc
jb
or
fld
pop
or
sbb
jno
mov
inc
add
inc
movs
pop
xor
jg
ss
arpl
ins
fisub
xchg
xchg
xchg
out
add
and
jg
add
jnp
lds
mov
cmp
mov
pop
or
loopne
sub
inc
stc
push
mov
push
add
or
loop
rcr
shr
inc
jns
or
xor
add
fcom
sbb
ret
jo
add
(bad)
jbe
ins
cvttps2pi
fld
arpl
push
in
clc
test
xchg
aad
mov
push
cld
pushf
hlt
sub
call
cld
div
outs
out
sar
lock
cs
push
int3
add
xor
shl
fsubr
xor
sbb
and
push
movs
push
push
adc
jge
jnp
and
xor
push
push
clts
in
push
lahf
adc
push
push
fcom
jnp
fnsave
push
aam
es
or
inc
dec
push
frstor
push
inc
or
or
mov
out
mov
cld
push
lods
adc
sbb
jge
imul
idiv
push
hlt
jle
and
es
rcr
test
push
push
push
pushf
adc
loopne
mov
mov
(bad)
scas
movs
push
sub
push
(bad)
mov
pop
add
or
ja
push
mov
sub
or
or
or
in
(bad)
mov
pop
push
jae
mov
jl
cmp
ds
cwde
popf
push
xor
jno
jge
lea
jecxz
xchg
mov
frstor
add
add
sbb
out
sbb
popf
nop
xchg
xchg
rcr
add
and
mov
mov
lahf
mov
dec
and
call
out
xor
retf
xchg
pop
mov
add
mov
cld
repnz
add
add
sub
cs
cs
das
push
mov
xchg
mov
ret
push
movs
xor
pop
sub
cmps
xor
movs
aaa
add
lock
shl
cmps
prefetchw
or
outs
(bad)
add
xchg
mov
push
add
iret
fisttp
inc
add
scas
and
pop
inc
ror
inc
es
ds
pop
sub
cmp
inc
sub
mov
sub
jmp
or
adc
xchg
add
and
and
inc
or
xor
dec
push
test
js
inc
or
pop
add
xchg
mov
in
adc
and
inc
push
inc
in
push
das
seta
test
adc
adc
test
adc
sbb
sbb
xchg
and
mov
jmp
mov
dec
xor
or
or
xchg
lock
inc
and
sbb
or
das
in
in
inc
dec
or
nop
or
push
sbb
adc
add
cmp
mov
and
mov
mov
inc
rcr
and
sbb
adc
xor
cmp
or
hlt
pop
add
leave
or
or
mov
sbb
mov
push
adc
add
and
jnp
and
xchg
xchg
pushf
adc
push
push
inc
adc
add
leave
sub
mov
or
xchg
movs
xor
push
rol
xor
or
sti
fild
bound
and
fist
adc
lods
push
(bad)
shl
cld
push
add
jo
push
add
pop
pop
adc
and
sub
pop
xor
jecxz
add
or
jnp
aam
xchg
pop
add
je
ins
sub
bound
push
outs
dec
cmp
js
jmp
xor
iret
repz
cmp
scas
adc
cmp
add
sbb
push
mov
scas
sbb
xor
or
pop
inc
push
pop
fisttp
fcmovbe
sar
adc
adc
stos
or
stos
dec
fidivr
jns
push
push
push
xchg
aam
mov
fisttp
or
cmp
sbb
mov
fdiv
adc
imul
add
push
add
dec
push
div
lahf
pop
inc
outs
sbb
xchg
inc
add
and
in
mov
jbe
cmp
jns
test
and
loopne
add
outs
pop
push
jae
movs
dec
shr
outs
gs
pop
add
cmc
inc
and
mov
inc
push
xchg
jg
les
jno
xchg
adc
jo
mov
mov
and
ins
or
mov
push
push
fs
lods
or
mov
mov
scas
and
mov
in
mov
xchg
mov
stos
add
xchg
movs
jno
addr16
jmp
cmp
adc
scas
add
add
adc
jo
adc
rol
cmp
pop
add
ficom
int3
test
push
cmc
leave
repz
ds
cwde
(bad)
adc
xor
adc
mov
jae
add
xor
cld
jo
dec
gs
pop
sbb
jge
push
xor
scas
cmp
cs
xor
mov
sbb
(bad)
cmp
fcomp
pushf
xchg
enter
dec
push
add
mov
jo
cwde
xchg
or
bound
add
shl
mov
mov
out
mov
dec
cmp
fidiv
xor
iret
aam
fbstp
inc
ss
inc
sar
inc
mov
mov
xlat
mov
fdiv
push
xchg
jno
jns
cmp
pop
mov
mov
in
cmp
jle
jp
push
xchg
mov
jl
jns
out
mov
mov
push
in
ds
sbb
push
pop
ss
pushf
or
xor
rol
fwait
xchg
adc
in
jae
jmp
push
or
cmp
clc
sti
ins
add
addr16
inc
or
int
sub
mov
adc
outs
and
cmp
push
fisttp
or
ja
mov
pop
aaa
aaa
inc
outs
imul
ror
inc
and
or
outs
cmovns
xchg
mov
inc
push
clc
and
pop
xor
dec
mov
pop
cmps
push
inc
inc
jb
jae
mov
add
ret
ss
mov
or
inc
loopne
inc
mov
es
and
mov
fld
or
or
push
dec
sub
adc
inc
jno
pop
popa
dec
sbb
sub
mov
or
shl
push
mov
prefetch
or
sub
mov
pop
in
and
(bad)
add
icebp
mov
sub
clc
sbb
retf
ins
mov
fdiv
xchg
outs
add
out
adc
jbe
push
cmps
dec
jnp
sub
or
lock
add
popa
pop
ret
dec
jne
push
(bad)
or
ins
leave
sbb
cmp
outs
inc
mov
(bad)
and
inc
inc
loop
mov
or
or
jb
adc
mov
sub
stc
test
(bad)
fprem
mov
add
push
fs
cwde
mov
fcom
and
rol
pop
add
adc
dec
mov
retf
mov
enter
cmps
or
enter
cmp
enter
or
xor
enter
jo
mov
push
loop
fiadd
sbb
mov
add
inc
pop
js
mov
mov
sbb
dec
mov
push
jmp
popa
or
shr
add
lds
out
or
in
sbb
mov
loopne
or
nop
stos
mov
sbb
call
stos
sub
xor
cmc
add
adc
dec
xor
test
in
sti
cwde
mov
sbb
enter
cmps
or
stc
inc
xchg
lock
add
xor
pusha
sub
inc
jns
out
lea
test
sub
pop
xor
or
cmp
outs
fs
dec
add
pop
and
xor
movs
and
shl
bound
add
dec
adc
enter
xchg
mov
cmc
add
xchg
pop
popa
inc
inc
mov
or
pop
add
add
push
push
mov
call
shl
ja
bound
add
fldcw
test
add
test
gs
sbb
sbb
lods
sbb
jae
sbb
pop
inc
fist
and
ss
push
outs
jb
movs
inc
mov
add
pop
nop
das
(bad)
mov
pop
push
ins
es
add
mov
fst
pcmpeqd
push
dec
cld
call
xchg
jp
push
cmps
arpl
and
aaa
hlt
cmp
adc
rol
xchg
test
dec
or
mov
pop
xor
inc
push
add
add
and
test
jb
in
xchg
add
adc
daa
mov
adc
inc
or
pop
sbb
and
sub
mov
xor
pop
mov
add
out
xor
mov
jle
mov
into
push
push
outs
rol
pop
mov
mov
mov
outs
adc
jmp
pop
or
and
adc
imul
cmc
dec
cmp
push
dec
in
push
add
add
add
inc
dec
and
fwait
xchg
arpl
sub
jne
sbb
jb
aaa
push
lock
or
xchg
jge
or
dec
mov
adc
push
out
jl
cmp
push
sbb
pop
mov
test
and
adc
add
into
add
ret
mov
mov
pop
das
retf
adc
pop
and
mov
cmps
sbb
leave
leave
enter
shl
in
in
ror
jns
into
add
cmp
mov
hlt
inc
les
outs
sbb
pushf
clc
inc
out
test
add
or
mov
xor
stos
fs
pop
mov
inc
push
inc
xor
cmp
arpl
cmp
push
xchg
movs
xor
das
add
fld
ds
push
adc
or
sub
push
add
daa
xchg
pop
jnp
push
aam
sbb
es
pop
sti
jnp
or
push
adc
push
jo
sbb
ret
icebp
jno
outs
adc
and
add
ficom
add
or
popa
or
ret
ds
dec
or
cwde
or
test
fldlg2
not
clc
(bad)
add
add
je
nop
adc
imul
adc
adc
icebp
xchg
add
cmc
sbb
aad
push
gs
jecxz
push
aaa
add
sbb
dec
inc
push
imul
fld
loope
add
sub
neg
adc
dec
mov
or
add
mov
fdiv
jb
xchg
leave
arpl
add
adc
sbb
cli
inc
xchg
outs
mov
andnps
mov
inc
int3
push
outs
iret
hlt
dec
adc
sub
lock
dec
add
adc
inc
dec
xchg
push
mov
dec
and
inc
pop
adc
jmp
inc
inc
dec
mov
bound
fisub
popf
cmp
js
ror
stos
ins
sub
cmp
aad
mov
pop
mov
push
push
push
pop
adc
pop
xor
lahf
sbb
pop
add
out
lahf
rol
mov
push
clc
push
les
adc
repz
inc
xor
pop
fs
and
cmp
adc
into
pop
pop
loopne
dec
adc
enter
(bad)
mov
add
ror
add
xchg
mov
lock
add
push
xor
wbinvd
add
push
scas
inc
pusha
jmp
jp
nop
imul
or
sbb
daa
xor
inc
push
add
jo
mov
mov
mov
ds
sbb
pop
inc
dec
or
nop
adc
and
xor
test
sbb
or
sbb
inc
push
adc
dec
or
imul
mov
push
stc
dec
pop
adc
and
cwde
pop
adc
popf
das
adc
mov
dec
pop
add
inc
add
and
les
xor
sub
mov
call
push
mov
test
push
add
cmp
push
push
and
rol
xchg
pop
xchg
test
push
mov
xor
fisttp
or
enter
pop
ins
mov
fldcw
push
inc
xlat
or
add
sahf
nop
push
pop
ins
adc
adc
pop
(bad)
jmp
pop
adc
pop
fsubr
out
int
mov
mov
or
pop
or
dec
dec
sub
inc
adc
push
add
mov
lock
lahf
cmp
sbb
push
pop
dec
mov
sbb
push
dec
mov
das
dec
(bad)
cmp
or
movs
push
mov
and
cmp
ror
mov
dec
jmp
movzx
or
pcmpeqb
and
cmp
nop
push
adc
aad
inc
movhps
xor
cmp
inc
xchg
fld
xlat
pop
lods
and
call
dec
out
cmp
rcr
sbb
sub
daa
lock
push
ins
pop
xor
stos
push
mov
push
dec
lock
jae
adc
sbb
pop
inc
lock
pop
sbb
pusha
aam
cmp
adc
mov
call
push
and
stos
add
inc
scas
or
aas
pop
inc
pusha
aam
ss
xlat
pop
cld
das
inc
dec
shl
sbb
fisttp
test
inc
rcl
inc
scas
(bad)
inc
xlat
or
jne
xor
shl
mov
add
inc
rol
shl
inc
pop
jg
sbb
rcl
adc
mov
les
das
xchg
or
test
adc
or
test
sbb
add
sub
mov
inc
push
xor
mov
push
ret
fnsetpm(287
das
cli
fnstcw
outs
sbb
push
pop
adc
mov
cmps
fcmove
adc
lods
cmp
dec
dec
add
xchg
outs
pop
gs
loop
mov
pushf
add
mov
cmp
mov
mov
dec
ret
push
mov
sar
xchg
push
cmp
cmp
cmp
(bad)
in
fistp
dec
das
xchg
dec
aad
jb
iret
push
in
pop
dec
push
cs
iret
add
cmp
arpl
mov
iret
and
inc
rol
cmp
daa
dec
pusha
add
(bad)
sbb
add
imul
inc
add
cwde
out
push
stos
call
lods
push
adc
sub
and
mov
jl
mov
pop
in
shl
pop
mov
push
mov
dec
loopne
pushf
aas
clc
pop
push
lock
js
or
dec
lahf
out
mov
adc
clc
fs
sbb
repz
cwde
fdivr
mov
dec
or
inc
jo
daa
cs
movs
xor
jecxz
and
push
push
stos
loope
inc
in
add
xchg
jmp
xor
or
push
inc
push
xchg
add
daa
(bad)
or
retf
icebp
xchg
add
mov
adc
or
mov
adc
mov
cmp
mov
or
cs
jo
xor
mov
xchg
mov
or
test
bound
mov
int3
cmps
(bad)
add
or
sbb
and
loop
mov
sub
and
cwde
cwde
mov
dec
out
cmp
arpl
push
enter
cmp
or
jmp
gs
repz
jecxz
loop
or
retf
fdivr
pop
xlat
enter
jno
push
pop
push
push
jecxz
adc
outs
loope
xchg
mov
add
jae
jecxz
mov
inc
dec
enter
mov
sbb
push
push
pop
out
mov
adc
jl
scas
fwait
push
sbb
lods
add
adc
mov
pop
call
aaa
into
es
push
pop
push
addr16
and
pop
les
jno
loope
push
sbb
pop
cmp
push
clc
gs
push
mov
shl
lea
mov
push
or
outs
popa
fcomp
les
imul
ja
cmp
dec
mov
mov
xor
cmp
sbb
movs
xchg
push
repnz
jl
in
pop
or
pop
gs
mov
or
fmul
xor
jecxz
sub
xor
and
and
inc
adc
add
add
sahf
mov
add
out
ins
jbe
das
xor
pop
int3
das
(bad)
loopne
mov
pop
and
adc
stc
pusha
mov
xchg
cdq
sub
(bad)
js
(bad)
pusha
pop
pop
lods
(bad)
out
hlt
add
dec
fwait
mov
add
sbb
fsubr
sub
push
adc
push
pop
pop
fdiv
loopne
push
adc
sbb
sub
push
sbb
xchg
adc
and
or
rcl
mov
ret
or
stc
and
ret
push
push
sar
dec
adc
lods
(bad)
call
adc
test
jae
pop
icebp
and
fisttp
add
sbb
data16
and
pop
loopne
pop
inc
icebp
mov
pop
add
dec
sub
sub
sub
sbb
imul
test
add
(bad)
(bad)
add
sbb
or
dec
js
xor
and
adc
add
add
dec
dec
push
jle
add
(bad)
cmp
inc
push
(bad)
cmps
test
pop
push
adc
(bad)
loope
xlat
imul
ror
lock
scas
or
sub
or
jns
add
dec
movs
dec
xor
rol
push
and
dec
int
inc
inc
add
and
inc
xor
sub
mov
sub
push
xor
xor
test
lahf
into
daa
dec
dec
stos
fwait
sub
adc
and
mov
out
lock
and
ja
push
dec
das
popa
push
adc
inc
cmp
out
lods
mov
fsub
sti
xor
sbb
fdiv
push
push
loopne
out
or
ror
sbb
mov
in
out
jge
nop
pusha
jo
adc
push
add
clc
jo
aaa
pop
pop
push
test
cmp
das
cmp
mov
pop
shr
sti
push
ficom
push
push
cmps
cli
push
imul
cmp
outs
and
or
xchg
not
xchg
sbb
aas
cmp
xchg
sbb
js
push
and
dec
test
and
imul
fsubr
and
xchg
jb
setl
into
icebp
loope
cmp
repnz
mov
loope
mov
inc
dec
outs
jae
cs
mov
mov
pop
inc
add
hlt
in
leave
enter
fild
leave
leave
xchg
repnz
xchg
jb
jb
mov
cmp
sbb
gs
call
and
dec
ins
movs
loop
xchg
jae
fnstsw
ror
add
sti
pminsw
es
test
or
xor
cmp
in
add
add
dec
clc
or
loop
add
pushf
pop
jno
call
xchg
pop
mov
or
inc
lea
mov
push
ret
inc
inc
fwait
pop
dec
adc
inc
nop
nop
or
add
sbb
add
xor
nop
lock
adc
pusha
mov
jae
mov
or
xchg
inc
add
xchg
push
add
mov
fwait
inc
nop
mov
gs
add
cwde
sub
inc
add
push
mov
mov
and
xor
mov
add
adc
add
shl
adc
add
and
pop
jae
stos
shl
add
inc
add
ret
add
add
add
add
mov
pop
mov
add
inc
bound
and
dec
cmp
inc
ret
sti
xchg
and
and
dec
mov
movs
and
mov
add
popa
adc
mov
add
add
or
adc
or
push
or
loope
or
out
sub
or
add
mov
dec
sbb
mov
and
or
pop
xor
sete
ins
dec
xchg
sub
shr
inc
test
(bad)
fsubr
sub
adc
inc
adc
stos
les
sub
arpl
ror
jne
sti
into
fldenv
repnz
add
or
add
cwde
cmp
sti
xchg
adc
mov
call
add
fadd
ret
loope
in
addr16
or
out
xchg
sbb
cmp
pop
cmp
push
push
push
inc
jo
(bad)
iret
pop
adc
push
in
sub
shl
xchg
jle
adc
inc
pop
add
jns
cmp
push
sbb
cmp
add
inc
addr16
push
lods
mov
std
or
push
cmps
gs
xchg
fistp
shr
sbb
push
pop
cwde
cmp
adc
push
std
cmps
pushf
(bad)
pop
push
adc
ss
das
add
dec
inc
rcl
inc
mov
jmp
add
push
imul
out
xor
in
std
pop
cmp
call
push
cld
pop
sti
sahf
sub
aam
push
xadd
add
xchg
mov
pop
pop
in
dec
cmps
jl
cwde
or
add
push
ret
or
or
inc
add
mov
sub
repnz
cwde
(bad)
pop
xor
js
cmp
push
or
xchg
movs
sbb
pusha
dec
inc
or
inc
cmc
or
cmp
enter
fnstenv
push
loope
sbb
imul
pusha
and
inc
xor
shl
adc
nop
push
mov
fs
push
jle
cmp
add
add
push
add
pop
arpl
pop
test
mov
sbb
push
femms
fsub
ss
xor
lock
inc
jno
shl
push
push
sub
add
add
xor
mov
adc
pusha
add
sbb
or
xchg
add
scas
inc
loopne
arpl
les
push
inc
jno
adc
push
adc
or
add
add
or
mov
adc
adc
xor
lods
nop
retf
mov
cmp
in
jbe
pop
push
divps
jns
push
sbb
dec
sub
add
pop
movs
add
sbb
pop
xchg
enter
cmps
ja
add
mov
je
data16
xchg
push
inc
pop
pop
jl
call
nop
xchg
ja
xchg
ret
pop
mov
fadd
or
and
cs
mov
enter
daa
(bad)
xlat
cmp
add
dec
dec
mov
movs
add
rol
and
add
add
and
xlat
inc
cmp
dec
je
lock
and
das
aaa
in
iret
fs
fild
xchg
es
or
xor
adc
add
pop
xchg
rcl
sub
or
push
add
mov
(bad)
or
sbb
sbb
mov
xchg
or
loop
daa
add
and
xchg
add
push
add
xchg
push
xor
add
push
xchg
mov
ret
inc
mov
test
mov
(bad)
mov
(bad)
icebp
mov
or
out
fsubrp
es
das
imul
sbb
outs
mov
sub
repz
outs
mov
and
and
rcl
ror
or
xchg
jae
push
or
or
retf
outs
mov
xchg
mov
enter
(bad)
les
sbb
pop
aam
jo
push
lds
mov
pop
fbld
adc
repnz
fild
es
pusha
push
adc
jl
sbb
push
adc
dec
cmp
(bad)
pusha
or
or
shl
test
shl
xlat
mov
inc
cmps
push
int
or
sbb
or
unpckhps
push
sti
and
xor
push
das
jb
iret
mov
xchg
scas
inc
xchg
lods
push
sbb
fild
prefetch
mov
push
adc
and
test
lock
in
xor
mov
test
pop
or
jo
arpl
cli
pusha
dec
inc
xor
mov
(bad)
sub
push
adc
cmp
pop
add
adc
xor
popa
dec
adc
mov
inc
pop
mov
das
or
pop
cmp
mov
add
pop
xor
jp
test
xor
xchg
ja
pop
push
ss
mov
add
ret
add
mov
popf
iret
cmp
ja
adc
ret
push
inc
imul
or
ja
or
pop
xchg
out
adc
aaa
icebp
adc
adc
adc
shl
pop
inc
cmp
ja
push
pop
push
mov
cmp
in
test
adc
inc
push
and
push
jno
imul
adc
loop
test
add
mov
loope
not
jge
adc
std
pop
cmp
push
mov
adc
push
cwde
push
pusha
adc
jo
adc
add
(bad)
push
inc
adc
cwde
ffree
adc
push
pushf
cwde
jns
xor
mov
ret
cwde
(bad)
and
loopne
add
cwde
push
xchg
sbb
ja
push
sbb
push
push
rol
outs
sbb
cmps
loopne
push
xchg
push
scas
(bad)
sbb
cmp
into
xchg
(bad)
sbb
mov
push
add
daa
sbb
mov
dec
ss
xor
imul
add
int
push
inc
fdiv
add
lock
dec
into
popa
add
mov
outs
dec
gs
shr
fistp
mov
inc
xor
js
stos
xor
sub
adc
test
jne
sbb
add
(bad)
jge
daa
daa
ror
dec
outs
xor
jae
cmps
jmp
daa
and
jg
mov
(bad)
sahf
outs
pop
mov
adc
push
dec
iret
syscall
inc
inc
aam
pop
dec
cmp
nop
sub
push
add
inc
xchg
xor
inc
pop
and
mov
push
push
jno
aad
add
xchg
mov
sahf
jecxz
ins
inc
test
jecxz
or
xchg
or
or
test
add
test
cmps
add
popa
mov
rcr
dec
xchg
and
add
ja
loopne
test
retf
dec
xor
(bad)
test
fadd
pop
or
repz
push
sahf
push
push
cld
int
add
or
mov
dec
adc
mov
mov
sbb
inc
sub
sbb
dec
sti
loope
xchg
dec
jb
xchg
test
cmp
js
or
sbb
jl
gs
mov
popa
or
cmp
outs
xchg
mov
sub
add
xor
add
xor
(bad)
adc
sub
pop
les
jbe
sub
push
sub
push
lea
or
inc
sbb
add
shr
in
add
das
das
add
or
jo
enter
add
add
mov
loopne
cs
cmps
mov
jge
and
sbb
mov
test
outs
sbb
inc
ret
and
or
lock
push
xor
push
and
add
pushf
sub
mov
rol
or
repz
adc
and
and
loopne
mov
cmps
push
lods
add
(bad)
inc
daa
rol
inc
arpl
aaa
(bad)
loopne
fdivr
nop
dec
stc
adc
fld
pusha
fs
(bad)
neg
test
std
dec
mov
es
mov
cmp
ins
and
cmps
pop
cmc
loopne
pop
mov
inc
icebp
and
lds
inc
ins
and
adc
mov
push
xchg
and
imul
mov
clc
adc
aas
frstor
cmc
add
daa
xor
stos
push
mov
test
add
inc
daa
in
cs
loope
lahf
and
cdq
lds
and
mov
jmp
sahf
fadd
dec
inc
and
scas
push
sub
lods
ins
and
ja
mov
call
add
lahf
fst
adc
nop
pop
mov
jp
sbb
mov
ret
sub
daa
ja
inc
mov
in
ja
jo
mov
test
push
or
inc
aas
shl
xchg
loopne
and
and
enter
mov
or
push
jae
fwait
sbb
adc
push
add
(bad)
xchg
aaa
add
adc
cmp
mov
mov
shl
das
(bad)
adc
push
and
mov
ret
inc
pop
sbb
and
add
adc
shl
jno
mov
aam
in
es
mov
loope
hlt
das
adc
push
test
push
daa
pusha
lds
out
repnz
lea
xchg
adc
sbb
push
xor
add
sahf
dec
ret
cmp
lahf
mov
pop
out
dec
in
es
or
bound
pop
sub
pop
sub
xlat
push
fs
das
stos
sub
and
mov
aad
movs
addr16
xchg
inc
cmp
sub
add
shr
push
pop
sub
loopne
and
push
xor
sub
pop
arpl
cmps
add
push
fisubr
shl
mov
adc
in
sub
loopne
out
mov
or
test
add
sub
xchg
es
or
aad
inc
test
cld
movs
sub
and
jmp
fbstp
sub
and
repz
out
push
movs
xchg
push
mov
mov
jb
pop
sub
enter
sub
pop
ror
loopne
and
sub
loope
add
mov
adc
cmc
jns
adc
adc
rcr
int3
sub
fwait
popf
cmp
cmp
pop
aam
loop
xchg
push
dec
pop
or
adc
push
adc
(bad)
pusha
xor
cmp
and
push
stos
adc
lds
cdq
in
xor
cs
hlt
pop
and
ret
into
ds
pop
cmps
sbb
jle
test
cmps
les
aad
cs
mov
mov
push
add
xchg
push
sar
cmp
loopne
inc
shr
push
jno
hlt
ror
sub
hlt
cs
inc
outs
ins
sbb
jno
punpckldq
dec
xor
xor
das
das
das
cmp
stc
or
and
xor
cmps
xchg
inc
xor
sbb
sub
loopne
and
push
dec
cmp
sbb
or
jns
add
xchg
xchg
arpl
add
mov
cmp
xor
adc
fimul
fdiv
push
lods
es
or
lahf
shr
imul
enter
xor
js
movs
xor
inc
xor
adc
push
pop
push
neg
xor
mov
enter
xor
fdiv
fdiv
arpl
shl
cmp
addr16
xor
js
aam
pop
aam
push
ret
mov
das
and
mov
xlat
cmps
inc
aam
stos
pushf
test
pop
out
inc
ins
xor
cmps
xor
dec
dec
shl
dec
mov
movs
test
shl
call
loope
xchg
arpl
lds
inc
ins
and
push
xor
ret
push
test
cmp
jno
xor
in
cli
push
loop
loope
mov
xlat
adc
push
fistp
push
retf
pop
mov
mov
mov
pop
xchg
lock
xchg
popf
inc
xlat
js
test
inc
dec
inc
xlat
hlt
and
or
aaa
pop
int
push
cmp
cmp
sbb
(bad)
adc
aas
(bad)
mov
and
fiadd
dec
xchg
std
and
int3
or
lahf
cmp
fwait
dec
cmp
psubd
inc
or
add
push
loopne
xchg
and
sbb
jno
xchg
test
in
xchg
lock
jecxz
and
pop
xchg
xchg
or
or
pop
add
ss
daa
pusha
mov
fwait
mov
inc
ret
mov
daa
mov
ss
das
and
or
or
xchg
lahf
rol
push
dec
xor
mov
mov
pop
adc
mov
and
sahf
and
and
xchg
add
lods
test
mov
sub
add
daa
and
xchg
pop
mov
lods
imul
test
cmp
xchg
shl
retf
sub
xchg
and
push
ret
sub
push
xchg
xchg
add
pop
or
and
add
push
jl
call
mov
aas
adc
test
or
push
xor
mov
and
inc
cmp
add
das
ror
add
ret
xor
mul
test
push
fcomp
(bad)
rcr
jae
imul
stos
pop
or
add
xlat
inc
add
aas
adc
and
and
in
sub
pop
cdq
imul
loopne
xor
mov
pop
jg
aad
mov
jl
pop
test
push
xor
push
imul
pop
dec
push
dec
inc
push
int3
ror
add
adc
fdiv
call
fdiv
add
inc
fiadd
add
(bad)
shl
cmp
cdq
and
inc
int
dec
test
inc
test
add
cmp
inc
movs
add
inc
loope
or
sub
stos
add
imul
test
repnz
cmp
mov
inc
jno
and
inc
inc
aas
clc
pop
and
stos
cmps
fiadd
cmp
xlat
sbb
inc
cmp
dec
push
inc
aam
mov
sub
inc
arpl
add
xor
call
sbb
add
mov
adc
lods
ins
inc
pop
mov
dec
aas
pop
dec
imul
mov
icebp
fadd
je
cmps
inc
pop
sbb
movs
inc
imul
sub
mov
test
addr16
add
jl
push
inc
adc
push
and
sub
inc
add
or
int
pusha
adc
adc
mov
mov
sub
add
xor
sub
and
jnp
push
jno
sbb
mov
fdiv
shr
add
aas
mov
xchg
pop
mov
adc
sub
jmp
push
lods
add
das
mov
icebp
push
je
adc
mov
xchg
xor
inc
dec
pop
and
lock
push
inc
cmp
dec
mov
cmp
or
dec
sub
xchg
das
mov
outs
xchg
xchg
aas
jo
mov
nop
mov
dec
cli
cmp
xchg
daa
dec
aas
and
push
or
xchg
icebp
daa
cdq
in
cmp
jmp
or
xor
rcl
dec
mov
test
inc
mov
dec
add
mov
jo
js
or
or
mov
inc
das
push
dec
jle
test
addr16
inc
aam
fdiv
sbb
jg
mov
test
or
cmps
popfw
sub
mov
add
jo
scas
push
daa
sbb
sets
sub
mov
cmp
dec
arpl
inc
inc
mov
addr16
je
xchg
shl
dec
outs
or
jo
dec
loopne
push
das
push
dec
mov
xchg
xor
push
lock
dec
and
loopne
das
pushf
dec
out
dec
pop
push
xor
xchg
add
mul
dec
mov
sbb
add
cmp
mov
push
enter
cmp
addr16
inc
stos
shl
add
addr16
push
js
mov
loopne
adc
and
test
pop
add
in
push
fdiv
js
out
pop
or
aam
jae
inc
mov
stos
inc
popa
mov
inc
mov
push
int3
mov
fmul
lods
shl
inc
xor
js
pop
cmp
add
sub
dec
test
push
jmp
push
or
das
fimul
in
mov
das
das
aas
push
sbb
(bad)
jmp
xor
mov
mov
push
ror
adc
rcl
xor
cmps
fmul
and
lds
adc
dec
(bad)
dec
xchg
imul
push
cmove
dec
es
cmovb
(bad)
push
outs
and
mov
test
mov
add
push
xchg
call
loopne
xor
inc
push
add
mov
or
pop
imul
lds
dec
fmul
test
aad
lds
dec
mov
mov
push
(bad)
js
loop
mov
(bad)
push
ja
dec
cmp
xchg
cmp
fmul
xor
ja
push
out
push
or
push
stc
xchg
mov
test
in
push
stos
or
mov
jb
push
rol
je
xor
and
nop
mov
push
js
dec
inc
add
addr16
add
mov
mov
stc
push
push
test
imul
fld
fs
int3
aam
push
scas
push
dec
loope
or
push
aas
leave
lahf
mov
adc
and
inc
pushf
jecxz
or
mov
and
xchg
call
jae
pop
loopne
push
gs
or
sbb
xchg
arpl
xchg
add
inc
cmc
rcr
pop
hlt
push
add
inc
test
jo
neg
push
test
call
movs
jo
pop
aas
inc
div
ds
push
mov
sub
mov
into
icebp
jo
or
inc
pop
mov
movs
jo
inc
aas
imul
dec
inc
and
nop
pop
cld
inc
cmp
sbb
xor
dec
dec
outs
(bad)
repz
adc
pop
pop
scas
xchg
xchg
xchg
mov
movlps
jnp
enter
in
xor
add
test
ins
aam
or
scas
cmps
pop
push
or
add
scas
dec
sbb
push
or
test
hlt
or
inc
(bad)
mov
mov
xchg
inc
nop
adc
fimul
dec
loope
inc
inc
jae
sbb
pop
or
popf
fadd
inc
cld
mov
mov
sub
mov
dec
mov
mov
adc
outs
in
or
cmp
xor
inc
xchg
ret
push
inc
test
fdiv
test
cmp
mov
push
sub
mov
xchg
ret
(bad)
fdiv
jo
in
imul
and
in
sub
popa
jns
mov
lds
movs
lock
push
inc
movs
nop
jmp
xchg
scas
pop
lock
or
dec
fs
inc
cmp
movs
inc
sbb
and
mov
inc
sub
inc
xchg
ret
inc
xor
sub
test
inc
dec
inc
les
nop
push
cld
inc
and
in
test
pusha
inc
es
das
sub
fidiv
cmp
push
addr16
loop
ret
aas
lock
mov
stos
dec
dec
pusha
inc
xchg
jo
aas
aas
mov
jecxz
dec
add
cdq
and
push
mov
inc
xor
sub
or
lahf
pop
or
push
dec
sbb
inc
push
inc
and
jbe
dec
or
adc
adc
adc
inc
cmp
dec
movs
mov
adc
push
js
les
adc
xor
gs
jae
mov
adc
adc
das
sahf
bound
out
bound
dec
pop
mov
sub
sti
xor
mov
pop
sbb
std
mov
movs
lock
popa
pop
mov
loop
sbb
daa
gs
and
push
adc
das
inc
fs
movs
mov
(bad)
sar
fs
mov
fs
(bad)
adc
or
gs
push
imul
pop
add
(bad)
jns
popa
jno
sub
add
loop
push
sbb
imul
push
inc
aaa
in
shl
push
jge
add
xor
sub
add
out
popa
scas
adc
rcr
jg
dec
(bad)
rcl
ret
pop
in
dec
cmp
test
inc
sub
push
inc
pop
push
inc
mov
mov
int3
addr16
shr
addr16
xchg
call
sbb
mov
ret
push
ret
pop
cmps
scas
nop
jnp
push
inc
mov
cs
xchg
gs
push
cwde
movs
jnp
ret
imul
push
and
imul
xchg
sbb
cmp
imul
jmp
or
loope
xor
xchg
add
pop
push
lock
rol
cmp
push
jnp
sub
test
ins
push
push
push
or
mov
and
ret
mov
in
imul
das
(bad)
int3
push
ret
inc
lahf
dec
add
dec
adc
or
ja
adc
fcmovnbe
imul
ret
mov
and
pop
adc
or
inc
and
loop
pushf
ins
(bad)
mov
mov
nop
ins
rol
imul
inc
sub
or
pusha
push
(bad)
pop
pop
lods
lds
sbb
ins
repz
sbb
or
ins
mov
les
das
mov
ins
(bad)
ins
(bad)
neg
(bad)
call
adc
xor
lea
ret
add
stos
stos
aam
inc
push
jo
nop
(bad)
iret
je
xor
inc
sub
adc
mov
add
push
dec
cmovo
outs
inc
js
adc
ins
cmp
mov
sub
xor
repnz
pop
xor
popa
das
ja
mov
imul
adc
sub
mov
add
pop
jo
push
xlat
xor
dec
shr
or
mov
mov
mov
or
xchg
push
mov
sbb
jae
push
pop
pusha
sar
jecxz
adc
int3
(bad)
jno
push
ror
es
das
or
mov
test
mov
mov
into
jno
or
jb
add
test
xlat
ret
push
stos
movs
lock
ret
movs
lds
in
pushf
push
repz
inc
enter
ins
jb
sub
(bad)
jo
lock
ret
jecxz
test
pop
(bad)
jae
and
pop
je
inc
into
cmc
mul
movs
das
mov
and
aam
xchg
cmp
or
je
dec
fwait
pop
adc
mov
push
jo
ins
je
mov
jns
xchg
or
sbb
sbb
je
push
inc
mov
das
adc
push
xchg
repnz
jbe
jbe
arpl
xchg
rcl
and
shl
leave
or
push
jmp
sub
repnz
add
data16
and
ja
repnz
ss
stos
div
js
jp
xor
movs
js
in
dec
inc
fimul
pop
jns
jg
daa
and
lock
lods
mov
cmp
fistp
or
push
ret
cmps
add
cpuid
cmp
push
cmp
movs
mov
dec
shl
pop
jno
pushf
loopne
pop
fdivr
jecxz
push
loope
mov
sbb
and
cmp
pop
xchg
shr
test
adc
push
rol
ror
data16
jnp
adc
push
push
dec
xor
pop
shl
pop
add
push
ins
jns
popa
outs
push
and
and
pop
pusha
shl
push
adc
push
shr
xor
jmp
add
(bad)
call
inc
add
push
dec
dec
push
ret
enter
jnp
test
mov
push
int
push
loope
clc
mov
add
ret
add
test
add
pop
or
sbb
test
jo
xor
or
jo
mov
shl
daa
push
push
and
pop
mov
and
data16
mov
cmp
enter
jnp
out
es
test
add
daa
jne
pop
push
shl
repnz
daa
leave
jge
not
rcl
jle
arpl
push
add
jb
jmp
or
mov
les
sub
adc
jmp
push
loopne
sbb
nop
jnp
inc
jg
add
or
sbb
adc
push
mov
adc
call
loopne
dec
xchg
jne
stos
cli
test
push
adc
jbe
out
sbb
fsub
or
inc
adc
lahf
imul
jo
sbb
dec
add
mov
cmps
cmp
push
je
or
icebp
cmp
pop
dec
das
push
das
pop
add
enter
mov
xor
adc
jo
add
xor
sti
jnp
mov
js
and
call
xor
cmp
jecxz
add
inc
in
cmps
dec
cmp
or
cwde
mov
not
push
push
inc
adc
inc
xlat
in
lods
add
test
aaa
ret
add
push
dec
sbb
push
pop
add
das
sub
mov
cmp
xor
or
jle
sub
push
xlat
add
add
sbb
loopne
inc
xchg
or
test
and
jno
push
mov
inc
xchg
and
es
das
xchg
add
ja
iret
or
adc
sahf
iret
push
sbb
mov
mov
xchg
adc
push
add
popf
call
sbb
add
pop
jo
sub
enter
or
xchg
dec
push
mov
sbb
xchg
movs
xchg
dec
rol
dec
test
es
das
outs
mov
or
xchg
fmul
shr
add
jb
inc
inc
fistp
inc
or
es
fwait
push
add
inc
(bad)
into
jne
push
add
add
iret
inc
inc
push
dec
xchg
pop
mov
stos
adc
iret
movs
dec
jno
adc
movs
pop
mov
inc
shl
mov
mov
inc
adc
adc
into
fild
mov
sub
pop
or
sub
mov
xor
jge
adc
mov
daa
mov
jmp
leave
enter
mov
aad
xchg
add
shr
outs
pop
mov
lods
mov
and
test
js
xlat
add
scas
loope
mov
xor
sub
cwde
sar
rcl
loope
pop
mov
jne
mov
adc
fiadd
daa
mov
dec
mov
mov
mov
xor
mov
push
adc
push
dec
inc
add
mov
mov
call
inc
adc
mov
iret
sahf
sub
lea
lods
mov
fisttp
stc
or
repz
push
mov
sar
cmp
mov
jg
popa
ret
or
sub
push
sbb
test
jp
test
sbb
ss
xchg
pop
jae
ins
xor
arpl
mov
xor
(bad)
mov
mov
loope
mov
dec
pop
lods
mov
fwait
pushf
mov
pop
mov
loopne
pop
push
nop
or
xchg
jae
mov
or
pusha
mov
scas
dec
adc
jmp
rcl
push
mov
and
in
nop
loopne
in
nop
adc
pushf
inc
lock
xchg
xchg
and
in
xchg
xchg
sub
lock
jg
xchg
push
clc
adc
fldcw
xchg
das
aas
xchg
xchg
or
cmc
xor
fdivr
xchg
(bad)
xchg
popa
push
(bad)
cmp
xchg
adc
pop
scas
mov
jge
xchg
xchg
loope
add
inc
sar
push
mov
jae
xchg
jp
(bad)
cmp
or
sbb
jp
rcl
cmp
loopne
xchg
pop
mul
push
in
das
dec
loop
loope
xchg
paddsb
or
push
repnz
xchg
adc
pop
int3
(bad)
add
test
test
adc
inc
call
cmp
xchg
ja
sysexit
xchg
xor
or
cmp
mov
pushf
pushf
mov
jp
sti
jo
add
cdq
pop
xchg
cdq
push
hlt
in
xchg
aad
add
aas
adc
test
add
call
loope
xchg
test
and
jecxz
mov
inc
pop
or
or
loope
adc
daa
cmp
pop
fs
or
jmp
mov
push
inc
out
stos
add
inc
pop
add
dec
clc
adc
add
and
adc
sahf
(bad)
retf
cmp
outs
push
cmp
and
leave
sub
mov
inc
ret
adc
adc
dec
xor
xchg
movs
sub
test
dec
sbb
mov
sub
add
jae
and
or
add
add
call
mov
ss
pop
push
xchg
adc
popa
push
and
push
mov
sub
and
xor
cmps
add
or
cli
sbb
inc
adc
cld
inc
mov
pop
movs
into
enter
jge
test
cmc
loopne
add
adc
iret
xchg
call
and
cmp
adc
loop
pop
mov
push
mov
pushf
and
aam
in
cmp
dec
adc
adc
xor
pushf
xchg
or
test
and
adc
rol
mov
bound
cdq
add
popf
popf
xlat
js
push
cmps
jl
push
shr
popf
rcr
inc
sahf
and
mov
mov
daa
iret
retf
or
aam
sahf
and
xchg
aas
pop
xor
movs
push
add
dec
jmp
sahf
js
inc
mov
clc
push
adc
(bad)
ficom
ds
dec
push
dec
xor
push
jmp
push
add
lahf
mov
cmp
sbb
sub
iret
push
add
add
ins
and
xor
rcl
loopne
repnz
js
adc
mov
inc
or
pop
and
ror
mov
push
idiv
jecxz
rcr
icebp
add
into
idiv
sub
pop
mov
ins
adc
add
adc
add
ror
push
mov
in
mov
and
add
ror
pop
cmc
adc
adc
mov
mov
ror
outs
or
ror
mov
xchg
movs
jnp
jmp
lahf
push
movs
mov
enter
movs
out
fwait
sahf
dec
jne
pop
fcmovnbe
(bad)
or
push
movs
push
sbb
mov
and
in
inc
aaa
shr
adc
je
sar
push
dec
movs
addr16
mov
push
and
add
push
push
add
push
mov
jo
enter
adc
sub
mov
push
adc
outs
push
(bad)
xor
sub
xor
mov
push
add
(bad)
(bad)
ficom
scas
push
lahf
push
push
push
fcom
mov
cmps
add
pushf
xchg
pop
lahf
push
rcr
pop
out
cmp
fwait
out
test
xchg
fistp
(bad)
bswap
add
shr
out
test
pop
test
adc
dec
mov
sbb
dec
mov
leave
leave
leave
enter
pop
in
fs
lods
push
test
jb
xor
cmp
sub
scas
dec
setl
cmp
cmp
std
and
dec
pop
std
daa
mov
cmp
adc
pop
mov
xchg
mov
punpckhdq
mov
sbb
(bad)
test
test
nop
dec
push
or
daa
xchg
loopne
lea
sahf
mov
xchg
xor
jns
inc
xor
mov
sbb
add
inc
adc
ds
add
(bad)
push
js
xchg
adc
sub
(bad)
test
add
or
jae
nop
test
add
mov
xchg
or
fs
prefetcht0
adc
adc
sbb
gs
(bad)
and
pop
xchg
adc
ud2
mov
jl
iret
or
dec
adc
pmuludq
adc
pusha
or
cld
fdiv
cdq
and
sub
xchg
or
xor
push
js
cmc
pop
cmp
ret
sub
and
add
rcl
mov
sbb
cmp
jg
inc
inc
mov
inc
xor
mov
inc
xor
pop
and
adc
mov
add
imul
sbb
sbb
xchg
sub
mov
mov
addr16
addr16
and
sbb
or
mov
mov
inc
mov
inc
adc
adc
or
pop
inc
mov
or
add
retf
ror
mov
xor
jmp
dec
movs
sbb
inc
jbe
repz
sub
inc
xor
xlat
in
jge
adc
push
jns
or
pop
mov
mov
sahf
addr16
sahf
loopne
ins
pop
mov
add
lds
test
rcl
add
lahf
lock
adc
enter
adc
jmp
or
and
mov
sbb
mov
xor
dec
int3
mov
mov
test
loopne
aam
loop
push
cwde
test
hlt
adc
adc
adc
sti
mov
pop
add
mov
int3
mov
cmps
mov
adc
test
mov
and
jo
xchg
fcomp
aas
hlt
repnz
mov
popf
jne
jo
mov
retf
das
or
cwde
mov
daa
mov
mov
scas
mov
paddb
lds
pop
xor
jle
sbb
dec
add
inc
and
and
and
mov
movs
scas
outs
and
xor
mov
pusha
push
fbstp
rcl
cvtps2pi
and
rcr
push
mov
mov
(bad)
sbb
jmp
pop
pop
popa
pop
cdq
add
xlat
mov
loopne
rcl
push
xchg
dec
sbb
and
fistp
pop
ins
das
mov
bsf
xor
push
add
mov
hlt
mov
mov
jg
inc
sub
or
retf
and
add
jg
dec
(bad)
pop
frstor
scas
push
daa
bound
mov
push
dec
inc
and
add
jne
xor
dec
dec
scas
push
cmp
daa
xchg
mov
mov
leave
push
adc
adc
je
aaa
mov
pushf
mov
ror
clc
add
(bad)
mov
adc
push
int
pop
cmps
popfw
es
pushf
jecxz
pop
mov
mov
adc
ins
add
das
add
mov
fnstsw
pop
or
cmp
mov
push
icebp
mov
pop
push
aam
rcr
mov
push
loope
aaa
mov
(bad)
(bad)
mov
add
iret
push
pushf
ficom
test
mov
pop
pusha
mov
int3
mov
and
mov
mov
enter
mov
mov
mov
cli
in
loopne
mov
rcr
fwait
jecxz
shr
mov
cmp
es
pushf
pushf
lods
rol
ret
daa
daa
mov
pop
ja
xchg
xchg
les
mov
sbb
addr16
in
in
scas
in
(bad)
leave
leave
sub
leave
retf
inc
loopne
in
and
addr16
mov
leave
repz
enter
div
add
punpckhdq
and
inc
adc
out
push
cmp
cmps
ror
adc
add
ins
xor
mov
les
out
jno
mov
mov
out
mov
inc
adc
popa
xor
in
adc
adc
adc
ins
add
push
cmp
test
out
cdq
pop
mov
out
adc
mov
rcl
ror
out
or
adc
out
xchg
push
xchg
or
out
xchg
adc
jno
rol
fwait
cld
mov
xchg
mov
add
ror
add
add
out
and
and
enter
repnz
loope
enter
fs
mov
push
sbb
jae
or
add
jb
enter
add
sbb
ins
mov
inc
push
adc
or
mov
cmp
adc
lods
push
sbb
mov
add
push
mov
adc
xchg
or
xchg
ror
ror
xor
and
adc
inc
xchg
xchg
and
push
push
dec
xchg
mov
movs
or
push
das
nop
inc
cmps
push
ror
sub
(bad)
jo
mov
sbb
xchg
or
xor
add
or
jecxz
sahf
pop
cmp
cld
(bad)
sbb
mov
enter
push
leave
iret
jns
cdq
mov
outs
rol
fsubr
fstp
push
and
xor
or
xchg
loopne
adc
mov
shl
add
imul
cdq
or
adc
mov
mov
xchg
rol
ret
retf
ror
push
sbb
add
sbb
std
retf
inc
add
addr16
mov
inc
rol
pop
jmp
xchg
xchg
data16
xchg
mov
pop
fadd
test
retf
lahf
add
mov
sub
and
mov
rcr
ja
pop
sub
sbb
jmp
shl
dec
xchg
ss
and
dec
retf
jo
rcr
pop
dec
sub
leave
pop
dec
inc
lds
lahf
mov
jg
add
add
retf
pop
dec
scas
and
int
das
ja
add
push
mov
mov
xchg
cdq
js
arpl
dec
xlat
jl
adc
dec
fadd
or
sbb
inc
add
loope
pop
push
push
lds
in
inc
inc
cmp
js
inc
loope
into
shl
les
cmp
into
push
add
in
in
xchg
rcr
or
(bad)
das
das
scas
sub
push
iret
mov
xor
daa
cs
add
jg
nop
adc
sub
xor
push
test
xor
inc
add
or
xor
bound
cld
into
jl
adc
xor
(bad)
cvttps2pi
push
add
ret
mov
dec
shl
add
and
in
mov
push
sbb
inc
das
adc
jg
pop
rol
retf
and
cs
fisttp
mov
pop
shr
add
xor
mov
rol
fist
inc
add
js
sti
pusha
xchg
add
mov
das
xlat
in
retf
push
inc
sbb
or
jmp
rol
in
pop
mov
push
ins
aam
ret
aad
mov
retf
xchg
out
and
(bad)
in
jmp
push
push
pusha
out
mov
cmp
or
cdq
je
pop
pushf
xchg
inc
leave
or
je
fmul
(bad)
and
xchg
nop
shr
aad
mov
cmp
(bad)
cmovns
pop
stos
(bad)
pop
jmp
out
pop
sete
or
cmp
call
fnstcw
(bad)
daa
and
les
fiadd
xchg
xchg
daa
daa
(bad)
adc
pop
rcl
in
adc
daa
daa
mov
fisttp
outs
movs
icebp
outs
cmp
pcmpeqd
dec
dec
lods
idiv
fimul
jl
fisubr
jno
scas
pop
fcmovnu
mov
add
pop
adc
pop
mov
es
adc
fild
or
je
adc
pushf
pop
jno
int3
adc
pop
popf
cmp
out
xor
xchg
adc
add
xchg
rcl
add
ins
ins
add
lock
jo
adc
lods
and
dec
hlt
rcl
add
and
add
adc
lock
fisttp
xchg
push
fimul
and
xchg
push
dec
inc
add
adc
sub
loopne
dec
fwait
lods
int3
adc
fisttp
adc
add
dec
rcl
inc
add
cmp
adc
add
sub
jo
add
pop
pop
and
xchg
fucomip
out
fistp
dec
add
push
or
or
jae
inc
and
fistp
push
mov
inc
inc
fist
inc
add
pop
inc
adc
fmul
jns
fistp
dec
push
test
add
dec
mov
rol
mov
add
adc
adc
inc
adc
pop
ffreep
adc
add
jns
mov
inc
rol
adc
xchg
xor
bnd
inc
push
cmps
fisubr
inc
sub
ds
fsub
adc
add
pop
xchg
adc
test
add
add
push
and
jle
lods
int3
or
push
jns
and
push
loopne
cmp
or
es
in
xor
sbb
push
and
cmp
shl
pop
ror
sbb
mov
add
cwde
js
enter
shr
js
mov
inc
popf
inc
(bad)
push
mov
jo
xlat
pop
and
cdq
pusha
xor
add
ins
loope
and
outs
pop
je
jp
or
add
xor
cdq
pusha
pop
xlat
pop
xor
in
and
dec
pop
sub
cs
loope
jcxz
or
adc
and
aaa
fild
cmp
cmp
bound
dec
and
add
outs
iret
arpl
mov
add
or
adc
outs
pop
mov
aas
add
inc
imul
jb
xor
js
jo
mov
(bad)
jb
bound
popa
dec
data16
outs
add
push
cmp
xchg
add
jae
div
ds
ins
adc
jne
xlat
pusha
mov
fs
mov
lock
mov
outs
add
outs
imul
jo
add
jb
addr16
cmp
aaa
pop
outs
jae
shl
mov
ins
daa
jo
imul
outs
add
ins
das
push
jne
mov
(bad)
imul
or
stos
popa
sti
cmp
addr16
mov
or
fbld
outs
add
pop
mov
div
xor
daa
ret
(bad)
(bad)
fidivr
outs
dec
data16
add
(bad)
in
pop
pop
ja
add
arpl
in
loopne
jno
ret
jns
jae
test
jne
jo
or
fild
arpl
xor
popa
scas
repz
imul
xor
jae
add
out
pusha
cmps
ins
das
inc
ins
and
sbb
or
and
or
push
cmp
xor
xchg
test
cmp
out
rol
pop
mov
mov
mov
inc
or
cmp
sete
aam
stos
retf
inc
mov
call
cmps
fs
sbb
xor
or
dec
cmps
and
fisttp
mov
add
call
xor
mov
pop
and
cmp
and
and
add
push
mov
inc
inc
inc
in
adc
push
xor
adc
inc
jo
xlat
and
les
ds
int3
repnz
sbb
or
push
mov
hlt
out
dec
loope
nop
jo
sub
jne
and
aas
and
mov
add
jo
mov
and
fidiv
sti
pop
xor
push
add
cmp
pop
dec
pop
ret
fiadd
dec
clc
out
int3
bswap
add
mov
leave
adc
push
sbb
lods
xor
or
dec
and
stc
jle
mov
adc
pop
nop
rcl
adc
iret
int
adc
(bad)
xor
inc
mov
nop
jmp
sub
sbb
inc
or
nop
lock
je
sti
in
mov
inc
fcom
fmul
jle
nop
lock
loopne
push
xchg
fldcw
add
mov
fadd
mov
jb
jle
ror
add
and
sbb
push
jne
mov
pop
call
inc
clc
sub
mov
je
dec
inc
sar
or
jo
jl
loopne
or
mov
retf
dec
dec
add
mov
in
enter
pop
cs
xchg
or
cld
in
lock
xor
add
in
and
dec
ins
das
ror
mov
pusha
nop
test
dec
adc
dec
xchg
pop
mov
mov
xchg
xor
ror
jne
mov
dec
inc
js
mov
pop
push
inc
add
js
xor
test
movs
push
inc
mov
test
push
mov
jmp
jns
test
push
or
aam
sbb
cmp
cmp
cwde
inc
pushf
cmp
ins
or
add
leave
in
rcr
and
xchg
retf
xor
sbb
shl
mov
rcl
inc
lods
loop
pop
xchg
mov
pushf
cld
add
pop
fwait
pop
popa
sbb
or
jge
fistp
test
jmp
mov
mov
fild
adc
inc
push
or
push
ret
xlat
add
or
and
repnz
mov
enter
dec
test
xchg
add
or
pop
dec
clc
dec
es
or
pop
and
out
mov
mov
sbb
jo
sub
push
ins
mov
ins
sbb
and
inc
clc
add
mov
lock
inc
retf
mov
add
bswap
add
adc
sub
loopne
adc
dec
add
sbb
add
push
push
or
pop
add
add
push
add
push
or
xchg
or
push
imul
pop
pop
or
cmps
or
pop
mov
mov
or
inc
in
pop
inc
ret
adc
adc
fcmove
sbb
clc
adc
or
push
sahf
or
and
or
dec
fild
hlt
or
add
call
xchg
ficom
push
adc
or
dec
hlt
jns
dec
leave
rcl
add
rcl
or
mov
push
mov
sub
pop
pop
pop
adc
pop
or
(bad)
fucom
adc
ja
adc
nop
aaa
mov
and
aaa
into
rcr
inc
test
lock
out
inc
cmp
mov
dec
inc
dec
xor
icebp
lock
or
jbe
cmp
stos
inc
int3
in
mov
aam
or
test
push
adc
test
jo
fs
xor
(bad)
loope
adc
inc
jo
push
lahf
(bad)
aam
jne
adc
push
mov
mov
movs
pop
mov
push
xchg
aam
xchg
div
repnz
xchg
push
rcr
mov
nop/reserved
dec
push
movzx
mov
inc
xor
outs
arpl
or
push
gs
(bad)
loope
push
addr16
(bad)
push
push
add
ret
fbld
inc
and
and
sub
add
cmp
js
test
cmp
push
xor
mov
push
mov
sub
xor
pusha
fsub
(bad)
loop
lock
ins
or
jo
ins
aad
sti
nop
cmp
ja
or
nop
stos
or
cmovl
mov
cmps
les
xchg
movs
or
push
sbb
mov
call
xor
lea
lock
mov
pop
pop
pop
sbb
xor
mov
xchg
mov
mov
inc
push
loop
clc
test
add
scas
jle
inc
fcom
xchg
and
cmp
fadd
fldl2e
fdiv
fidiv
add
add
repnz
test
js
or
pop
in
lods
mov
sbb
lock
jge
ja
and
inc
sub
add
mov
loopne
(bad)
mov
scas
mov
jge
add
sub
loopne
push
mov
pusha
dec
call
mov
cld
mov
push
cmp
jmp
dec
inc
lock
ret
jmp
lods
(bad)
lock
push
jmp
or
mov
clc
push
add
test
adc
pop
test
fadd
(bad)
mov
int3
mov
mov
test
xchg
cs
push
sub
fdiv
push
repnz
outs
mov
addr16
sbb
fwait
fs
cld
stos
repnz
out
retf
mov
mov
mov
popa
jle
scas
dec
test
or
push
mov
adc
push
iret
repnz
adc
cwde
rcr
mov
js
imul
add
sub
xchg
and
pop
xor
call
enter
cmp
pop
mov
test
mov
je
cmp
mov
mov
jo
ret
(bad)
popa
or
dec
sbb
push
push
scas
mov
arpl
push
cli
push
mov
add
jmp
push
cld
jmp
mov
cmp
jne
push
cmp
and
adc
or
div
je
test
jne
lock
or
jmp
and
imul
mov
push
push
mov
cmp
call
pop
aas
lock
adc
in
ret
add
ror
sub
jae
(bad)
adc
lods
mov
adc
xchg
mov
(bad)
call
jmp
aaa
sti
pop
test
mov
or
adc
add
mov
mov
add
sub
das
cmc
stos
dec
leave
and
rcl
jmp
xchg
sbb
shl
adc
mov
retf
mov
mov
je
test
pop
pop
mov
xchg
bound
mov
cwde
push
mov
add
mov
enter
sub
add
sub
push
dec
ret
push
in
push
mov
clc
sub
adc
or
enter
jg
and
hlt
xlat
femms
or
loopne
and
cmp
setge
(bad)
enter
jns
or
aas
mov
pop
mov
and
enter
(bad)
(bad)
jg
ja
and
lods
enter
jae
mov
or
inc
add
cmp
jne
call
push
xor
push
shl
not
fcom
mov
and
mov
jb
or
or
adc
mov
dec
ins
fcom
push
call
push
or
inc
push
inc
push
dec
enter
pop
xchg
pusha
sbb
push
in
leave
mov
cmp
sti
scas
enter
fiadd
mov
add
hlt
pop
sbb
int
pop
pusha
loope
lds
lock
inc
fbld
lea
adc
adc
inc
stos
push
jge
in
shl
dec
and
xchg
adc
mov
loopne
push
popf
fst
jmp
sub
add
mov
sub
sub
out
loopne
xor
movzx
stc
sub
jmp
inc
mov
aad
xchg
add
shl
mul
add
nop
mov
add
inc
add
leave
lods
mov
or
cmp
ja
push
dec
clc
(bad)
cli
test
push
add
adc
repz
repz
and
repz
cmp
pop
cmp
repz
ins
addr16
repz
repz
mov
iret
popf
mov
imul
push
add
mov
add
(bad)
out
stc
pop
lock
mov
or
cmps
push
imul
sbb
pop
adc
ja
cmp
mov
pop
ret
xchg
cmovae
mov
mov
lea
jae
loope
jne
mov
cmp
xchg
fcom
outs
push
adc
pop
ss
or
cld
xchg
std
push
mov
shl
adc
ss
out
sahf
pop
outs
js
mov
jns
mov
repz
dec
add
imul
push
repz
mov
add
iret
repz
dec
ins
xchg
mov
std
jns
cmps
jne
add
inc
imul
add
iret
repz
push
jns
shl
sahf
out
call
xor
out
rcr
out
add
sahf
out
in
pop
push
push
pop
data16
mov
ret
add
push
dec
jo
mov
rol
push
jp
jb
add
xchg
mov
add
in
rol
mov
rol
or
add
pop
mov
xchg
inc
adc
in
mov
inc
or
mov
rcl
jbe
or
pop
or
in
adc
and
xor
mov
inc
or
push
leave
inc
pop
inc
add
test
and
and
or
sbb
push
fisubr
mov
scas
sub
outs
add
leave
add
adc
sbb
pop
or
cmp
leave
push
push
push
aad
or
push
pusha
stos
jbe
inc
(bad)
or
inc
add
or
xchg
sbb
inc
or
push
cmps
add
inc
add
mov
aam
aam
das
fsubr
inc
mov
adc
sub
adc
add
shr
add
(bad)
jmp
popa
push
rcl
inc
push
pop
pop
xchg
aad
xor
adc
xchg
jmp
or
xchg
add
mov
ret
(bad)
jo
sbb
jg
mov
add
sub
jae
mov
mov
fadd
clc
push
and
nop
add
std
imul
call
jmp
shl
test
sti
std
mov
push
mov
or
push
and
sbb
pop
mov
outs
fdiv
dec
push
fsubr
jmp
sub
or
add
shr
sbb
add
xor
jo
or
add
mov
mov
ficom
lea
push
xchg
mov
cmp
or
or
loope
aam
dec
stos
push
icebp
mov
mov
mov
out
popf
pop
xor
xchg
sbb
or
push
add
data16
add
add
push
imul
or
add
or
(bad)
lods
je
push
shl
iret
retf
(bad)
cmc
add
iret
cmp
ss
pop
sub
test
sbb
ds
xchg
repnz
mov
ja
add
imul
in
or
or
dec
in
aas
pop
sbb
or
test
das
imul
pop
int3
mov
test
push
or
rol
push
or
ss
push
or
ret
sub
jae
push
push
dec
repz
(bad)
adc
xor
in
xchg
or
out
mov
mov
or
retf
push
out
mov
adc
push
in
shl
pop
xor
or
xor
xor
rol
add
xchg
loope
adc
(bad)
mov
sub
leave
fld
cmp
pop
add
repz
xor
and
inc
push
cmp
enter
mov
lods
mov
jae
out
add
(bad)
in
adc
sub
pop
sti
add
jb
push
add
add
mov
mov
sbb
push
sbb
and
adc
xchg
retf
stc
and
adc
or
or
inc
push
sbb
call
mov
ror
add
and
sbb
idiv
jb
sub
cli
push
adc
sbb
adc
dec
daa
or
and
pop
retf
retf
cdq
daa
test
jns
out
jb
popf
or
mov
cli
push
or
sbb
sub
repz
repz
push
bound
adc
popf
aas
or
and
add
add
or
xor
or
push
xlat
push
mov
mov
or
adc
sbb
cwde
pusha
js
sbb
pusha
clc
jns
mov
adc
jmp
mov
xchg
mov
test
pop
pandn
(bad)
xchg
inc
rcl
or
sahf
out
push
push
arpl
je
xchg
mov
scas
mov
pop
ret
in
scas
inc
xchg
and
ja
pop
xchg
cmp
mov
sbb
(bad)
mov
add
or
adc
outs
push
das
push
iret
sbb
ja
push
sbb
sub
cmp
cmp
adc
mov
add
add
push
push
and
fwait
mov
sar
call
and
adc
fst
or
xor
movs
jb
je
dec
aaa
dec
jns
sub
bound
or
push
fs
adc
test
daa
add
add
cmps
rol
das
mov
aas
lods
mov
add
xchg
cdq
and
pop
xchg
add
dec
mov
cmp
(bad)
test
adc
imul
retf
aas
adc
mov
or
stos
pop
(bad)
or
adc
(bad)
(bad)
and
pop
jnp
adc
das
sub
add
dec
add
or
add
loope
add
push
xor
data16
xor
pop
das
or
push
push
push
iret
repz
daa
cmp
gs
iret
repz
(bad)
popf
stos
mov
xchg
add
daa
or
ret
ins
and
mov
sub
xchg
adc
pop
jb
adc
jb
sbb
and
addr16
retf
retf
xchg
add
adc
adc
xchg
dec
add
jns
neg
or
rcl
push
pop
ins
out
sahf
out
mov
sbb
mov
push
xchg
inc
or
pop
inc
adc
inc
aas
adc
icebp
pop
or
mov
icebp
or
adc
scas
mov
sahf
fld
pop
sub
inc
sahf
out
inc
push
bound
xor
xor
mov
add
add
add
inc
push
in
add
imul
ret
adc
out
popw
or
es
in
in
push
pop
ins
and
adc
add
and
jb
or
adc
pop
or
xor
call
ins
inc
inc
jl
int
push
or
cdq
push
or
adc
push
xor
push
pop
loopne
jne
ins
jp
add
and
imul
adc
add
in
sbb
add
call
sbb
sar
int3
mov
add
movs
xchg
loope
xchg
push
push
ds
push
sahf
out
ficom
dec
pop
in
aad
imul
pop
push
add
fld
ins
push
jne
add
or
unpckhps
sbb
sbb
jmp
xchg
out
or
or
aaa
jmp
es
cmp
mov
dec
movs
inc
dec
retf
pusha
inc
push
or
sbb
cmp
lds
pop
push
imul
jg
push
pop
mov
adc
jns
jns
out
sbb
or
add
movups
out
sahf
out
adc
sahf
pop
sbb
sbb
sbb
or
jg
push
pop
and
and
and
es
sbb
cmp
jae
push
jns
fwait
lods
loope
cmp
mov
sbb
cmp
jae
push
and
iret
addr16
call
int
out
add
out
ins
pop
push
and
iret
repz
pusha
outs
jl
iret
repz
cwde
cmps
mov
cwde
lock
lds
adc
or
push
pop
and
and
dec
fmul
arpl
pop
adc
popa
mov
or
and
or
push
les
and
xchg
push
xchg
pop
and
sub
and
adc
dec
in
retf
adc
push
mov
adc
pop
push
inc
pop
dec
xchg
dec
sub
in
retf
push
sbb
sbb
sbb
pusha
push
popa
xchg
mov
mov
xchg
outs
mov
inc
aas
and
fs
and
or
push
aas
and
data16
stos
outs
test
mov
sbb
jecxz
stos
sbb
sbb
es
cs
and
sub
inc
cs
and
push
in
and
and
ret
mov
inc
mov
mov
mov
out
or
dec
sub
or
mov
or
add
xchg
sbb
or
jmp
mov
fisttp
lahf
jae
or
cmp
pop
(bad)
iret
repz
jo
mov
loope
les
xchg
add
or
loopne
arpl
pop
adc
out
shl
cli
cs
jns
dec
sahf
cmps
mov
scas
mov
push
pop
das
inc
sub
in
pop
push
in
xchg
js
xchg
mov
mov
push
shl
xchg
stos
xchg
and
and
xchg
movs
daa
and
and
and
add
and
mov
fsubr
cmps
and
cmps
sbb
ins
shl
or
sbb
pop
imul
mov
in
jmp
and
adc
aaa
mov
jo
and
inc
test
adc
scas
sbb
pop
lahf
sub
pusha
adc
push
data16
int
shl
adc
pop
sbb
pop
ja
fs
or
clc
xor
mov
jb
jnp
into
sbb
add
mov
xchg
cmp
or
sbb
xor
xor
push
sbb
les
sub
and
push
or
or
cmp
mov
push
mov
fild
xor
xor
add
add
sbb
cmps
xor
sbb
mov
call
cmp
repz
cmp
pop
outs
xor
iret
repz
mov
cmp
add
iret
repz
cmp
in
cmc
(bad)
in
adc
adc
add
and
test
fmul
adc
and
inc
cdq
and
push
test
pop
test
mov
je
or
xchg
ret
xor
rdtsc
pop
test
arpl
addr16
adc
mov
adc
push
xchg
call
test
movs
and
add
add
out
mov
and
push
and
repz
ds
pop
push
jbe
scas
adc
pop
and
lahf
jb
sbb
out
cmps
add
push
iret
out
sahf
in
push
and
add
add
in
sub
add
xchg
cmp
push
push
cmps
dec
out
mov
je
pop
not
add
adc
and
repnz
cmp
pop
pop
push
push
add
test
and
add
mov
in
and
aas
(bad)
in
push
sub
or
add
and
or
cmps
pop
lea
sub
and
and
cmp
es
xchg
icebp
inc
test
sbb
sti
and
mov
jmp
jl
add
inc
mov
push
pop
cmp
adc
cmp
in
pop
mov
or
mov
or
add
and
sahf
js
in
(bad)
cld
popa
add
cld
mov
es
daa
adc
jl
popf
(bad)
pop
xor
add
gs
es
neg
ins
ins
xlat
xchg
ret
and
jnp
jo
lods
out
and
and
pop
or
pop
xor
repz
test
je
push
mov
dec
push
and
cmp
jne
mov
jle
fadd
stos
test
dec
aam
inc
cmp
fsub
xchg
hlt
push
cmp
adc
(bad)
cs
frstor
xor
push
jne
sti
jl
lea
pop
ja
mov
clc
std
repnz
test
pop
mov
push
ret
outs
cwde
add
add
and
fldenv
pop
xor
outs
stos
aaa
dec
sbb
mov
push
pop
popf
inc
mov
icebp
outs
add
add
push
adc
inc
pop
pop
jmp
xor
pop
fld
outs
mov
push
add
mov
or
outs
scas
adc
call
pop
xor
std
add
shr
mov
jg
sub
xchg
jae
push
sbb
cmp
jg
sub
loope
jbe
sub
cwde
das
mov
outs
or
pushf
cwde
jmp
jg
xchg
sub
sub
push
pop
sar
add
daa
cdq
or
ret
mov
sub
movs
lahf
mov
ret
(bad)
sti
es
or
dec
add
add
sub
aaa
add
and
cmp
mov
fwait
adc
inc
inc
aaa
test
shr
adc
sub
dec
add
dec
movs
lahf
mov
pop
ins
sub
bound
aaa
leave
mov
dec
or
push
aas
add
mov
out
loopne
add
or
jmp
pop
jmp
sub
sub
aam
ss
pop
sub
sub
retf
dec
out
shr
push
xor
sub
mov
add
pusha
adc
call
sub
adc
mov
sbb
xlat
cs
push
dec
int
test
and
sbb
xlat
add
mov
std
sbb
jo
lahf
pop
lds
stos
push
je
cmp
mov
mov
out
out
test
cmps
mov
outs
add
(bad)
fst
inc
je
cs
sub
pusha
inc
mov
das
mov
push
mov
and
cmp
fwait
lock
fcomp
std
cs
add
pushf
or
pushf
cmp
outs
sub
sbb
pop
sbb
ret
xor
sub
and
das
pop
pop
adc
jmp
aaa
in
mov
hlt
repnz
loop
aaa
pop
add
push
adc
mov
lock
mov
das
repz
push
push
jl
cmp
push
shr
lahf
bound
icebp
push
and
or
push
mov
sub
popa
sbb
sub
xor
outs
add
xchg
pop
outs
add
sub
push
pusha
xor
jae
push
xor
xor
ins
cmps
or
into
push
outs
jae
cld
pop
push
xor
xor
(bad)
daa
and
hlt
xor
mov
or
pop
jle
enter
call
in
leave
mov
dec
aaa
xchg
jb
repnz
or
jb
jb
mov
cmp
sbb
(bad)
std
adc
mov
inc
cmp
bswap
dec
fcmovbe
in
dec
(bad)
pop
sub
push
ins
push
dec
adc
sbb
lahf
mov
push
add
fsubr
sub
xlat
dec
or
jo
mov
inc
aaa
add
les
sub
xor
add
jg
jns
fld
out
shl
add
adc
mov
sub
pop
or
push
ins
push
jmp
inc
cdq
push
sub
push
inc
add
test
xor
jae
mov
and
inc
push
pop
add
mov
or
push
lock
das
shl
add
add
mov
inc
inc
cmp
or
inc
iret
push
sbb
sbb
push
fadd
scas
push
inc
outs
add
rcl
out
jae
dec
inc
dec
dec
fs
daa
push
dec
or
or
sub
adc
sub
cmp
and
dec
add
popa
test
dec
dec
stc
add
inc
and
outs
add
sub
push
lds
push
sub
test
dec
pop
pop
and
je
jb
mov
mov
scas
lds
mov
cmp
aaa
adc
lahf
dec
or
dec
push
jo
mov
stos
or
pop
sub
lods
xor
ror
cmp
add
push
inc
and
push
sub
mov
and
add
add
pop
xor
in
cmp
in
sbb
cmp
sbb
clc
adc
fs
sub
mov
sub
dec
jns
adc
cmp
jecxz
sbb
dec
pop
out
pop
mov
mov
inc
sub
and
outs
lea
pop
fld
lahf
test
jne
pop
cmp
mov
sbb
outs
lahf
cmp
mov
cmp
mov
mov
(bad)
jo
mov
inc
mov
pop
add
push
mov
fcom
mov
add
adc
mov
call
mov
ins
mov
xchg
scas
loopne
dec
aam
or
test
out
lock
pop
cmc
repnz
test
je
inc
inc
and
push
fcomp
sub
jne
add
mov
pop
mov
rol
inc
push
fsubr
adc
in
dec
out
fcomp
ds
mov
xlat
or
ret
rcr
adc
leave
fisub
adc
jo
sub
fcom
xor
jb
in
movs
(bad)
cld
mov
in
xchg
pop
(bad)
or
pop
fs
test
add
or
ret
add
(bad)
fsub
cmovs
ds
mov
inc
jne
rcl
xchg
jmp
xchg
ret
pop
cmc
adc
adc
add
adc
enter
push
mov
enter
or
repz
(bad)
ds
ror
pop
lahf
fcom
fisttp
nop
or
cmp
dec
push
sub
js
jmp
daa
cmp
push
cmp
aas
mov
cmp
xor
out
ins
imul
mov
in
add
pop
inc
push
sti
les
xor
dec
dec
mov
rol
pop
sahf
sbb
loopne
jl
adc
dec
mov
xchg
mov
cmps
addr16
adc
in
pop
inc
xlat
loopne
push
adc
push
loop
xchg
ss
call
out
or
add
add
sub
arpl
pop
jne
xor
popf
or
and
nop
mov
je
mov
add
shl
addr16
shl
xor
or
sar
cli
addr16
test
cmp
(bad)
scas
int3
sbb
sbb
add
and
add
fldenv
mov
push
mov
dec
test
jl
cmp
ins
clc
(bad)
clc
push
(bad)
push
out
dec
rcl
cld
and
push
jg
jle
dec
pop
xor
and
inc
dec
jne
je
pop
add
xchg
sar
xor
push
shl
ror
sbb
jae
and
xor
fisubr
int
or
dec
adc
push
push
pop
addr16
rcr
rcl
std
inc
fnsetpm(287
push
mov
or
inc
xor
fs
shl
jmp
and
sbb
sub
stos
call
aam
jb
(bad)
jno
mov
sub
inc
and
arpl
or
dec
lock
fmul
shl
int
fsub
shr
test
movs
xor
adc
fdivr
and
in
enter
in
mov
loope
and
pop
sbb
xor
xor
jmp
push
xchg
push
or
cli
push
call
inc
jno
jo
es
inc
push
or
push
(bad)
in
pextrw
cmp
cmp
shl
and
lock
pop
inc
cmp
in
aam
inc
sbb
inc
stos
mov
jo
mov
movs
loopne
movs
call
in
les
jecxz
int
push
gs
mov
ins
loop
(bad)
leave
cmp
push
ror
or
das
loopne
rol
rol
idiv
or
das
rcr
add
(bad)
or
mov
add
std
sub
jle
in
add
and
add
or
shl
push
inc
pop
or
popf
add
popf
adc
or
(bad)
jmp
sbb
aaa
push
jmp
out
mov
in
movs
add
sbb
push
add
hlt
or
add
or
adc
jmp
jne
fs
inc
and
xchg
or
movs
sbb
sub
xor
xchg
sub
arpl
sbb
or
loopne
rcr
popa
mov
je
push
pop
push
and
cdq
mov
mov
pop
xchg
jmp
and
(bad)
sbb
je
cmp
xor
aas
or
test
out
sbb
outs
and
sub
or
ss
bndldx
xchg
xchg
sbb
sbb
vorps
adc
sub
jmp
fwait
sbb
shl
add
daa
dec
add
xor
paddq
cmp
inc
popa
mov
mov
sbb
adc
or
sbb
add
jae
cmps
loopne
lds
pop
pop
xor
call
xor
mov
scas
jecxz
xchg
mov
mov
scas
adc
adc
add
cmps
and
push
or
in
fdiv
mov
popa
in
jae
add
pop
(bad)
in
or
cmp
ret
mov
xor
test
stos
ds
jb
je
mov
jmp
adc
add
sub
pop
mov
add
cmp
ds
(bad)
sbb
jmp
jge
push
push
rcl
mov
loope
adc
out
sub
fadd
sahf
jne
add
add
addr16
gs
dec
push
or
and
xchg
xchg
pop
pop
push
lock
sbb
(bad)
mov
fst
ret
dec
adc
push
or
xchg
add
mov
dec
jnp
mov
jle
xchg
cmp
dec
sub
or
mov
adc
adc
add
jmp
aas
inc
adc
xchg
cs
mov
add
cmp
add
xchg
(bad)
inc
mov
or
mov
xor
imul
add
push
pop
test
enter
je
xor
in
and
test
repz
sub
packssdw
push
test
add
(bad)
adc
or
mov
mov
(bad)
(bad)
push
sbb
int3
(bad)
add
(bad)
lock
sbb
js
cmp
jecxz
pop
sub
lock
aaa
add
mov
pop
mov
inc
nop
xchg
mov
inc
inc
mov
daa
push
add
add
mov
rcl
add
add
enter
push
mov
inc
add
jo
sub
push
mov
lock
inc
mov
dec
jp
test
and
mov
mov
aaa
sti
popf
mov
jo
clc
push
cmp
cli
jl
or
lods
or
add
xor
mov
xor
cmp
mov
xor
jp
fstp
jg
dec
adc
push
add
ins
add
imul
sub
or
push
mov
jb
fld
sbb
dec
or
mov
dec
js
mov
mov
mov
push
xchg
xor
jmp
cmps
xor
imul
sbb
je
jmp
and
mov
jmp
mov
mov
mov
jne
inc
sub
inc
inc
rcr
cli
daa
mov
into
aaa
jmp
loopne
inc
cmps
adc
repnz
dec
loopne
xor
jmp
mov
in
xor
add
ret
mov
(bad)
push
push
je
xor
call
or
dec
dec
fldcw
add
or
popa
hlt
or
jmp
jne
(bad)
adc
hlt
mov
xor
pop
dec
hlt
xor
push
daa
dec
or
test
or
xchg
lods
or
push
pop
cmp
push
sar
loopne
es
aas
pop
dec
js
jns
jb
fwait
es
add
inc
xchg
or
mov
jl
daa
sub
cmc
push
push
rol
sbb
shl
sbb
jmp
cmps
dec
add
adc
fiadd
adc
arpl
or
test
sub
pop
push
pop
test
cmp
pop
cmp
dec
dec
push
pop
stc
leave
inc
mov
push
push
or
fidivr
or
ss
cmp
fs
out
mov
cmp
sbb
add
mov
dec
adc
in
add
add
jno
add
or
dec
push
enter
daa
pop
or
push
xchg
pop
js
mov
push
sub
jmp
gs
add
add
rol
sbb
mov
push
jl
loopne
mov
fist
in
loopne
xor
mov
inc
xor
pop
inc
push
(bad)
jmp
sub
adc
es
loopne
inc
shl
jne
or
push
pop
push
dec
dec
cmp
xor
push
cmp
jecxz
sub
add
sub
stos
mov
nop
dec
pop
pop
mov
inc
mov
retf
sti
add
sbb
dec
cdq
add
push
lods
pop
dec
sahf
pop
rcl
loopne
iret
repz
call
cld
pop
and
push
cld
adc
adc
mov
lock
ret
(bad)
fwait
add
enter
jle
pop
cmp
adc
jmp
or
jmp
or
adc
js
jle
jmp
push
jmp
pop
mov
xchg
push
scas
je
push
jno
push
xlat
push
sti
and
in
cmp
inc
cmp
push
cmps
or
add
xchg
xchg
adc
and
mov
pop
lods
or
cdq
test
jnp
je
add
add
jno
cmps
sbb
out
jb
in
adc
nop
fadd
sbb
ret
sbb
or
add
das
fcom
popa
sbb
and
jmp
loope
(bad)
pushf
ins
jno
cli
pop
ja
pop
mov
adc
mov
sahf
cmps
fisttp
pop
les
ins
fidivr
adc
sub
mov
addr16
add
cmp
inc
mov
out
outs
outs
cmp
jnp
push
push
push
adc
cmps
push
mov
mov
push
push
inc
and
or
movs
push
ror
sub
neg
daa
sbb
add
xor
or
sbb
xchg
out
sbb
pop
push
add
outs
mov
and
js
add
or
add
add
stc
jb
in
or
or
add
or
daa
pop
dec
or
add
sub
adc
sbb
push
mov
mov
adc
(bad)
clc
sbb
shr
pop
sub
push
mov
jo
ja
push
add
jne
sbb
pusha
retf
adc
pop
inc
iret
add
js
int
add
sbb
push
dec
jle
leave
sbb
mov
daa
mov
mov
gs
xchg
or
jne
or
mov
pop
mov
cs
je
xchg
and
add
jmp
adc
inc
xchg
cs
and
adc
and
push
sbb
or
jns
push
cmp
and
fs
inc
xor
and
pop
jno
fadd
pop
pop
imul
push
je
cmp
pop
pop
or
push
iret
mov
push
movs
fcom
adc
iret
rol
ror
mov
in
lds
out
mov
in
sub
out
sbb
lods
pop
sahf
xlat
popf
xlat
mov
inc
push
xor
imul
es
out
popa
mov
daa
jne
xor
mov
fisttp
ins
ds
xor
les
and
xchg
retf
fimul
dec
jne
jns
or
add
or
push
or
mov
inc
or
neg
mov
or
inc
iret
repz
outs
push
pop
push
sbb
cmp
adc
in
sub
mov
popa
mov
ds
xchg
mov
ror
push
arpl
sbb
pop
adc
inc
push
(bad)
mov
(bad)
sub
mov
and
xchg
rol
mov
and
add
cmp
fwait
mov
pop
or
dec
sub
pop
mov
mov
inc
push
dec
sbb
(bad)
daa
add
test
mov
(bad)
mov
add
add
cld
pop
xchg
mov
imul
pop
cmp
in
mov
push
gs
push
pop
push
test
rol
push
push
mov
mov
jg
test
sahf
scas
mov
mov
push
fld
mov
mov
jmp
sub
sub
xchg
imul
push
cmp
xor
jnp
nop
jmp
mov
scas
mov
fs
sar
jg
je
sub
je
(bad)
je
add
mov
jb
jmp
sub
jmp
and
jg
pop
aas
cli
inc
jle
rol
adc
jle
mov
or
dec
mov
cmp
scas
je
mov
jmp
add
pop
fldenv
inc
adc
mov
push
dec
les
xchg
out
adc
ja
jo
ret
sbb
inc
test
xchg
jnp
in
sub
pop
icebp
mov
or
xchg
adc
jo
mov
sar
outs
clc
ja
sbb
mov
inc
pop
popa
call
add
test
jo
jo
in
inc
add
sti
push
push
xor
ins
loopne
outs
push
mov
jmp
mov
mov
push
cmp
or
inc
pop
push
in
fcmovb
jns
mov
push
adc
mov
lods
mov
and
sbb
push
push
inc
or
push
inc
call
gs
int
or
inc
and
push
(bad)
ins
pop
arpl
and
or
inc
pop
ret
cmp
or
aaa
or
test
pop
inc
dec
pop
bound
test
jg
add
inc
pop
xor
pop
push
adc
stos
dec
add
sbb
dec
int
ds
xchg
(bad)
push
fwait
mov
push
adc
outs
div
es
add
js
ret
rol
inc
push
xor
mov
adc
bound
push
inc
sub
or
or
pop
sub
test
mov
inc
add
fisttp
adc
cld
adc
sahf
aaa
mov
test
xor
or
push
loope
sub
adc
pop
inc
out
inc
inc
les
je
adc
inc
mov
push
xor
push
pop
retf
clc
ret
adc
and
or
sbb
aad
je
sub
leave
outs
pusha
das
push
pop
out
and
inc
dec
add
xchg
mov
imul
push
lock
shr
stos
jne
inc
add
mov
clc
xor
pop
and
movs
sbb
outs
mov
adc
xchg
xor
lock
jp
addr16
pusha
js
add
jo
and
add
push
clc
mov
adc
pop
lahf
jo
and
push
in
push
push
inc
iret
dec
pop
pop
pop
pop
jno
xchg
leave
lock
mov
test
js
mov
pop
in
stc
pop
mov
push
hlt
dec
add
pop
lds
je
sub
bound
(bad)
pop
int3
jmp
test
sub
inc
imul
inc
loop
and
add
add
add
dec
and
mov
adc
add
push
cmp
xor
or
mov
jmp
imul
add
mov
dec
push
push
test
jo
add
mov
adc
inc
add
shl
inc
sbb
bnd
adc
adc
or
ja
pop
ror
add
mov
push
dec
pusha
pop
and
push
and
dec
sbb
icebp
add
xchg
cmp
inc
pop
mov
sahf
hlt
test
and
sbb
ds
outs
mov
pop
or
or
mov
aaa
cmp
loop
sub
sbb
inc
and
pop
jae
aas
out
inc
repz
push
scas
adc
shr
jae
xchg
ret
rcl
fidiv
and
mov
xchg
sbb
sbb
fs
jge
rcl
sbb
push
xor
sub
sbb
mov
adc
xchg
mov
push
pop
inc
bound
loopne
mov
dec
mov
and
icebp
cmp
out
dec
lock
sbb
and
or
ins
sub
push
xor
je
daa
xchg
loope
pusha
add
mov
clc
mov
hlt
xchg
push
inc
pop
push
pusha
stc
pop
mov
outs
push
xor
frstor
jmp
sbb
lea
jne
fild
adc
cwde
int3
loope
and
and
cmp
hlt
jbe
fadd
sub
mov
cmove
mov
mov
sbb
popa
push
cld
inc
push
cmps
inc
fadd
mov
fbld
sbb
push
ret
rol
call
leave
mov
jo
adc
hlt
jnp
mov
inc
adc
mov
mov
lock
pop
mov
in
inc
shl
mov
fbstp
test
pop
mov
mov
push
mov
dec
mov
adc
daa
jle
pop
inc
pop
adc
jge
jne
pop
or
enter
push
push
push
mov
aas
cld
das
call
inc
dec
test
cmp
push
or
push
adc
arpl
cmps
sub
inc
(bad)
mov
adc
mov
pop
add
mov
push
mul
mov
and
pop
ret
mov
and
add
add
push
pop
or
add
xchg
xor
jae
das
or
push
hlt
stos
bnd
mov
sbb
(bad)
cmp
pop
lock
dec
xor
and
jge
push
dec
dec
or
jae
dec
lods
dec
idiv
mov
push
or
ds
or
pusha
call
in
ret
fdiv
adc
jne
jne
stos
addr16
mov
adc
repz
xor
jmp
loop
sbb
int3
int3
neg
add
mov
add
jo
sub
push
cmp
sub
sar
add
scas
mov
or
xchg
xor
push
imul
and
lods
or
xor
hlt
xchg
loopne
xchg
test
das
adc
xor
(bad)
mov
imul
add
xchg
xchg
pop
xor
mov
inc
ins
sar
mov
dec
mov
inc
mov
(bad)
out
mov
add
cmp
inc
(bad)
and
cmp
push
and
ffree
sbb
sub
or
jbe
pop
inc
pop
pop
xlat
mov
(bad)
arpl
push
jg
dec
jp
out
cdq
hlt
pop
or
inc
rcr
scas
cmp
in
add
mov
es
fs
call
and
or
xor
sahf
test
(bad)
(bad)
lock
pop
cli
adc
or
loope
pop
fsubr
xchg
adc
or
add
adc
sub
and
dec
les
add
movs
add
lods
mov
clc
js
sbb
je
pop
js
mov
dec
lea
rcr
push
sbb
into
pop
fdivr
sbb
(bad)
sub
dec
(bad)
xor
xchg
pop
push
(bad)
es
push
loopne
jl
sbb
push
push
movs
mov
mov
add
jg
push
mov
dec
aaa
sbb
ss
cmp
dec
adc
xchg
mov
sub
cwde
ret
imul
loopne
ss
push
mov
mov
pop
and
push
sub
jbe
add
or
pop
sub
add
or
mov
lods
sbb
add
fild
fcomp
dec
cli
mov
cmp
je
stos
mov
pop
cmp
outs
sub
mov
into
adc
enter
je
and
mov
or
mov
mov
pop
inc
and
inc
je
mov
pop
and
xchg
test
repnz
adc
push
adc
loope
outs
or
add
mov
sub
es
dec
(bad)
sub
not
mov
rol
sbb
adc
mov
mov
daa
(bad)
scas
stos
cmp
inc
dec
or
inc
fdiv
je
jae
js
or
push
xchg
fsub
add
aam
mov
inc
movs
dec
mov
pop
shl
add
loope
test
and
mov
ss
test
lock
or
nop
push
add
add
lock
push
pop
xlat
loop
pop
(bad)
pushf
ror
mov
jnp
adc
cmp
stc
xor
sub
pop
mov
lock
add
push
mov
ret
sbb
scas
and
cs
push
mul
lea
sub
js
retf
movs
std
add
adc
hlt
inc
not
sar
mov
or
cld
test
push
inc
nop
cmp
inc
and
inc
(bad)
in
or
mov
add
pop
sahf
add
mov
or
dec
mov
and
mov
clts
jne
mov
sub
add
mov
jb
std
mov
dec
ret
ret
add
pop
(bad)
adc
and
mov
loopne
unpcklps
rcl
mov
push
nop
jo
jo
mov
enter
push
add
jnp
cmp
jg
push
mov
mov
pop
push
ror
cli
mov
cld
popf
inc
scas
jg
in
mov
or
lods
cmp
sub
stos
add
imul
stos
sahf
ja
(bad)
mov
icebp
mov
fdiv
jae
adc
sub
or
and
sbb
(bad)
adc
jne
imul
inc
sbb
sbb
xchg
and
pop
add
ins
sub
mov
fs
mov
ja
pusha
test
jnp
cmp
ror
or
mov
imul
and
mov
jne
test
hlt
sub
adc
sahf
push
pop
mov
leave
popf
adc
mov
sbb
stc
sbb
and
push
or
cmp
mov
pop
push
sbb
sar
or
dec
retf
push
push
add
push
mov
add
adc
add
out
push
cmp
mov
jl
or
or
xor
bndstx
jmp
int
test
add
mov
or
and
loopne
mov
pop
mov
xor
push
test
add
push
in
or
xor
mov
pusha
addr16
push
ja
sub
out
sbb
arpl
mov
ins
inc
add
lods
jg
adc
sbb
(bad)
push
sub
test
cmp
dec
inc
ret
cmp
lock
call
les
mov
add
mov
adc
push
mov
jns
or
push
cwde
pop
push
outs
push
jae
rol
ja
ins
add
or
nop
push
sbb
out
pop
cmps
xchg
inc
loope
movs
test
mov
js
push
sub
xchg
ret
xchg
aas
outs
in
(bad)
jne
xor
cmp
mov
push
inc
pushf
pop
popa
inc
or
mov
adc
pusha
loope
jne
rol
ret
cmp
push
cld
sbb
jmp
popa
lea
(bad)
stos
and
fild
call
cmp
sub
sub
add
add
jp
inc
popa
sbb
les
add
adc
push
sub
adc
or
pop
xor
push
mov
add
loope
adc
dec
and
cmp
setne
dec
(bad)
add
push
sub
pop
add
push
dec
sub
rcr
in
or
push
and
mov
add
xor
dec
rcl
dec
sbb
jbe
ds
add
(bad)
push
mov
in
cli
push
in
inc
cmp
sub
pop
mov
(bad)
push
test
pop
mov
or
pop
push
adc
pop
out
(bad)
xor
adc
outs
adc
sub
add
shl
cwde
sysret
ret
adc
jbe
pusha
inc
push
or
push
add
cmpxchg
gs
sbb
sbb
inc
sbb
xcrypt-cbc
cmps
adc
inc
add
xchg
inc
addr16
and
shl
out
jae
add
push
mov
or
pop
jle
sbb
mov
adc
push
clc
mov
inc
lods
mov
sub
dec
or
inc
(bad)
retf
(bad)
xchg
punpckhdq
movs
daa
add
or
mov
pop
pop
cmp
nop
push
mov
test
fwait
add
stc
add
nop
add
push
(bad)
shufps
and
or
push
lock
push
(bad)
jae
lods
fdecstp
sbb
and
inc
sub
pop
or
mov
fstp
pusha
out
inc
enter
fadd
inc
inc
jno
push
dec
icebp
xchg
ret
pop
ret
mov
sub
push
jo
fmul
arpl
ins
cwde
jl
jl
lea
inc
push
xor
scas
adc
leave
xchg
gs
ret
xchg
setle
xor
dec
test
test
add
push
enter
adc
and
sub
and
cmp
fs
retf
add
hlt
das
push
mov
jle
sbb
xor
or
push
loopne
pop
stc
xchg
and
xor
jbe
jns
and
(bad)
sub
or
cmp
or
or
sbb
or
clc
add
add
xor
jmp
scas
dec
mov
mov
mov
adc
mov
test
or
adc
jmp
ds
mov
or
add
xchg
or
jbe
lds
jg
jmp
rcr
imul
adc
adc
and
adc
ret
ret
shr
pop
pop
(bad)
mov
cmp
bound
sub
push
and
shr
out
adc
adc
sub
lods
sbb
pop
jmp
cmp
inc
cmp
nop
mov
pop
test
cmp
mov
or
xchg
xor
push
adc
push
loope
and
adc
push
enter
xlat
es
ja
sub
adc
aam
sub
push
push
cmp
inc
dec
xor
test
call
dec
pusha
test
test
add
outs
pop
jb
add
es
out
cmp
xor
test
stos
xchg
or
add
pop
lods
sbb
or
mov
add
jb
xor
rol
cmp
mov
std
clc
sbb
push
xor
pop
xlat
jge
push
in
scas
or
mov
pop
mov
imul
dec
add
mov
inc
push
push
ds
add
rol
int
or
inc
test
add
xor
cmp
(bad)
in
movs
adc
add
or
clc
loopne
test
add
cmc
gs
jle
xor
inc
ret
popa
adc
fld
jne
or
fcmovu
jmp
or
sbb
dec
retf
or
add
ror
cmp
sub
pop
mov
push
movs
shl
in
xor
push
jne
dec
aaa
ret
mov
add
adc
loopne
pop
or
mov
xor
xor
cwde
mov
pop
ror
popa
push
and
inc
xor
and
and
push
inc
lock
dec
(bad)
or
cmp
adc
ror
iret
push
int
adc
adc
ror
mov
test
push
(bad)
pop
jmp
dec
call
ja
cmc
mov
pop
test
ret
pop
ja
inc
pshufw
lods
xor
stos
jb
fiadd
pusha
and
aas
inc
fst
cmp
jge
inc
movs
pop
push
cld
je
push
lea
daa
adc
or
das
fadd
clc
ja
test
jge
mov
test
imul
sub
lock
mov
pop
xor
or
dec
cmc
js
pop
mov
or
xor
ins
xchg
mov
test
mov
xor
fucomip
ret
in
lsl
adc
add
cmp
jg
mov
pop
(bad)
in
add
or
mov
jmp
cs
xchg
xchg
inc
in
xchg
call
dec
or
pop
mov
je
pushf
xor
ins
pop
loopne
add
inc
sub
or
enter
xchg
into
daa
aam
push
and
adc
popa
mov
add
and
push
push
mov
out
loopne
movzx
push
fdivp
inc
sbb
and
push
adc
int
out
or
and
adc
retf
sub
test
jl
push
add
xchg
fdivr
mov
inc
push
cdq
loop
sbb
jbe
inc
add
lds
mov
pop
cmp
mov
out
xchg
rol
xchg
lahf
rol
push
inc
add
jmp
fst
or
sbb
js
mov
cmp
cwde
pop
leave
imul
jecxz
shr
dec
xchg
adc
test
(bad)
test
add
cmp
mov
sbb
pop
push
hlt
lds
inc
fadd
inc
mov
inc
mov
jge
div
jmp
add
adc
push
pop
cmp
(bad)
ds
aad
leave
mov
add
xor
jp
add
loope
test
mov
mov
xchg
ret
das
cld
lock
adc
mov
fisttp
jo
loop
or
add
cmp
jg
push
and
ret
pop
mov
inc
test
stc
scas
and
inc
mov
mov
mov
outs
test
push
jmp
xor
push
(bad)
fcmovnu
ds
dec
sub
pop
jle
(bad)
(bad)
mov
add
mov
jnp
lods
cmp
xor
push
hlt
ins
pop
push
xor
fadd
fwait
sub
push
mov
jmp
inc
cmps
int3
jp
int3
and
cmp
pop
mov
sub
(bad)
in
fcomp
sbb
idiv
sbb
mov
push
inc
dec
jne
inc
(bad)
push
sub
xor
sbb
mov
jle
dec
mov
and
aaa
popa
jne
call
call
push
and
mov
inc
dec
jne
or
adc
push
jne
fist
and
stos
js
mov
adc
and
jmp
call
cmp
in
pop
jp
not
pop
iret
or
pop
mov
push
push
or
mov
movs
mov
cmp
inc
or
add
lds
jl
or
inc
or
setg
sbb
push
sub
adc
cmp
fdivr
mov
and
pop
mov
enter
jl
(bad)
mov
inc
(bad)
jl
les
mov
pop
mov
(bad)
adc
imul
in
and
in
adc
mov
das
push
jmp
das
in
dec
mov
mov
sub
or
xchg
and
sbb
in
add
pushf
arpl
sbb
fadd
loopne
add
ror
mov
sar
add
or
rcr
mov
les
sbb
cld
push
mov
fld
inc
(bad)
hlt
sub
dec
or
cmp
jo
adc
push
dec
mov
or
aam
adc
dec
inc
and
movs
retf
jle
adc
jge
xchg
push
add
hlt
mov
dec
lock
out
add
mov
dec
xor
shr
add
push
or
aad
adc
xchg
cs
sub
sbb
fs
or
cmp
(bad)
aad
or
add
daa
inc
add
iret
jp
sbb
lahf
add
xchg
add
nop
adc
mov
mov
test
fst
pop
mov
add
mov
xchg
add
sub
add
ror
jmp
inc
cmp
jne
push
add
addr16
push
int3
or
sbb
push
and
mov
aam
test
sbb
ror
inc
mov
and
xor
aas
(bad)
imul
jle
enter
add
xchg
int3
and
or
sub
or
shr
test
push
clc
ret
dec
sti
in
lds
push
clc
(bad)
not
lea
dec
jne
mov
inc
add
adc
xchg
push
cli
mov
test
out
xchg
js
push
imul
cmp
jmp
lock
loope
mov
or
bound
jl
mov
xor
shl
sub
mov
les
(bad)
add
adc
daa
cmp
adc
inc
movs
test
mul
adc
les
out
pop
jl
xor
jmp
pop
out
or
sub
adc
jno
adc
mov
mov
xor
lds
adc
adc
pop
(bad)
shl
mov
mov
add
add
sar
nop
pop
pop
sbb
inc
xbegin
add
jno
xchg
ss
add
movs
inc
xor
or
push
sub
lods
nop
jnp
mov
or
jae
cdq
ds
mov
ret
dec
enter
out
push
jb
jmp
or
cmp
pop
and
jne
sti
outs
xchg
jmp
out
fist
cmps
enter
or
adc
into
mov
xor
cmp
ds
add
js
or
test
or
loopne
xchg
ret
and
sub
(bad)
push
adc
or
sub
pushf
or
in
add
xor
sbb
cmp
lods
push
imul
jmp
loop
mov
cmp
lock
bound
sbb
lock
scas
xor
cmp
(bad)
jmp
test
cmp
inc
xchg
in
lods
pop
adc
sar
imul
addr16
sahf
push
inc
xchg
aad
cmps
sub
dec
(bad)
das
mov
mov
out
sbb
sbb
dec
sub
outs
sbb
nop
add
loopne
pushf
addr16
cmps
test
dec
adc
les
add
inc
inc
lahf
sti
xor
add
add
inc
add
dec
cmp
dec
fs
jg
int
push
lds
int
xchg
jns
cmps
mov
xchg
adc
cwde
jne
lods
inc
pop
sub
ret
jno
les
icebp
cmp
jns
xchg
repz
nop
push
adc
adc
cmc
add
fs
push
test
sub
cmp
imul
mov
pop
add
mov
or
gs
sar
mov
pop
ret
xchg
sub
xor
rcl
add
add
ret
push
push
cmps
adc
add
or
pop
mov
test
and
scas
mov
or
shl
adc
mov
dec
scas
or
cmp
xchg
sub
or
or
call
xor
ja
cmp
sbb
call
repnz
jg
test
mov
mov
hlt
ja
mov
sub
or
loope
inc
add
inc
sbb
mov
and
inc
pushf
scas
dec
push
leave
js
js
js
pop
in
and
jne
or
jp
lea
inc
xchg
lahf
mov
or
cmp
mov
push
js
mov
cwde
ss
test
scas
pusha
mov
cmc
iret
add
jg
or
xchg
sbb
test
icebp
mov
outs
imul
push
or
xor
push
pop
fcom
push
sub
bound
fld
sub
or
mov
or
movs
(bad)
ins
in
xor
pop
push
stc
int3
mov
in
call
call
cmp
cmp
jne
xor
movs
inc
lock
dec
or
add
add
fsubr
fmul
(bad)
push
xor
cmp
loopne
fdivr
push
xor
push
xchg
jle
sbb
and
test
fwait
cmps
pop
pop
mov
adc
mov
imul
adc
push
in
xor
add
xchg
and
cwde
stos
adc
add
cwde
mov
dec
inc
mov
fld
movs
fs
hlt
cmp
dec
adc
mov
out
xchg
lods
dec
push
add
aaa
(bad)
in
leave
inc
and
ror
mov
mov
aaa
xchg
mov
push
pop
retf
sub
(bad)
fmul
push
sbb
das
in
xchg
ja
mov
cmp
and
push
sub
add
xlat
ja
mov
cld
sub
dec
push
imul
cvtpi2ps
xor
adc
pop
pop
xchg
dec
pushf
sbb
mov
loop
nop
mov
(bad)
fcom
movs
xchg
pop
popa
jmp
lea
xchg
cmp
aaa
mov
pop
test
push
push
inc
sub
jbe
out
mov
sub
cmp
push
dec
adc
jno
dec
xchg
lock
adc
mov
ret
enter
ins
movs
test
push
test
inc
inc
das
cmp
cmp
adc
adc
sbb
cmp
(bad)
dec
movs
jg
pop
cmp
sahf
push
push
inc
inc
pop
je
pushf
arpl
or
pop
sbb
jge
call
mov
xor
sub
or
xchg
cdq
or
mov
add
xchg
and
jg
je
shr
cmps
xchg
js
cmp
dec
cmps
jg
xor
mov
and
pusha
sti
sbb
sub
adc
jg
test
add
jg
cmps
cs
arpl
jg
inc
hlt
add
adc
das
out
aas
xchg
enter
xchg
jg
mov
cwde
sbb
mov
cs
out
in
mov
push
and
imul
push
cwde
in
hlt
push
adc
cmp
or
test
test
popf
aam
add
scas
xchg
or
pop
pushf
adc
pop
movs
mov
call
adc
or
adc
push
repnz
add
mov
xchg
stos
mov
pop
add
xchg
push
loope
stos
mov
ret
cmc
stos
mov
fwait
inc
aas
fwait
inc
xchg
inc
and
lods
jo
inc
pop
xchg
cmp
inc
jo
inc
push
enter
ins
lods
jo
sbb
and
jp
cwde
mov
jo
mov
inc
mov
fdivr
sub
fcom
push
xchg
into
in
sub
push
leave
or
adc
inc
or
cmp
mov
xchg
sub
lea
jae
mov
popf
rcr
xor
pop
loopne
neg
fisub
fcom
and
iret
xchg
outs
adc
cmp
inc
sar
cmp
(bad)
les
add
ins
test
lea
jnp
or
lods
loopne
cwde
adc
mov
push
mov
push
pop
mov
or
cwde
fimul
jae
xor
sahf
mov
push
pop
imul
xor
jge
dec
cs
frstor
lea
hlt
mov
das
jns
enter
mov
and
mov
xlat
and
das
mov
push
call
jno
das
pushf
cwde
mov
lock
inc
pop
enter
cmp
jb
jo
fwait
add
cmp
inc
mov
inc
mov
das
into
js
das
cdq
jl
dec
pop
cli
popf
loopne
movs
pop
das
call
push
std
push
pop
das
sbb
sub
push
scas
mov
or
mov
movs
inc
mov
mov
les
pusha
inc
xchg
push
ins
inc
cmp
jno
adc
pop
pop
clc
movs
inc
test
sub
pop
mov
or
and
hlt
aas
mov
movs
xchg
and
add
(bad)
mov
adc
jg
and
push
cmp
push
fmul
cmps
or
ficomp
enter
xsha1
in
ror
inc
jl
or
inc
jns
and
mov
cmps
or
mov
cmp
or
sbb
lahf
mov
mov
(bad)
mov
cmps
sbb
nop
xchg
pop
call
pop
dec
hlt
mov
cmps
inc
xcrypt-ofb
cmps
lods
dec
pop
push
xchg
(bad)
lock
push
ins
push
xchg
inc
push
jg
lahf
push
inc
movs
and
lahf
mov
sbb
and
stos
push
shl
and
aad
mov
ds
add
jae
in
std
adc
xlat
imul
call
pop
xlat
in
adc
fs
jp
imul
les
ror
pop
push
in
adc
add
jae
test
pop
out
stos
stos
mov
add
or
stos
int3
repz
shr
data16
jb
fwait
sub
xchg
and
add
xchg
sbb
ret
dec
pop
adc
xchg
push
push
mov
xlat
je
test
lods
dec
inc
dec
aad
mov
sbb
xchg
(bad)
pop
mov
or
add
or
fwait
bound
aam
movs
sub
adc
push
call
or
dec
sbb
push
push
sub
pop
inc
aas
test
inc
or
sahf
out
or
or
or
addr16
or
inc
mov
adc
movs
cmps
shr
or
inc
xor
mov
adc
mov
in
mov
xchg
ja
inc
and
imul
add
or
scas
pop
cdq
scas
dec
ins
stos
xchg
jne
jl
or
retf
jo
and
or
imul
add
test
mov
or
pusha
call
ror
cmp
mov
adc
sti
sub
sbb
mov
imul
stc
call
imul
(bad)
jmp
and
lock
scas
test
int
lock
sbb
and
rcl
test
paddw
int3
mov
mov
pop
lea
movs
jnp
and
add
scas
popa
ss
js
xor
inc
mov
lods
aam
mov
scas
hlt
mov
lods
or
adc
xor
dec
loope
ret
pop
fwait
or
xor
jle
into
push
push
imul
pushf
and
and
imul
adc
add
mov
push
push
cmps
mov
test
and
test
lods
sub
xor
push
pop
xchg
add
xchg
cmps
cmps
imul
sbb
nop
mov
sub
xchg
sbb
rsm
mov
and
imul
repnz
xchg
sbb
popa
mov
test
cli
popf
mov
fdiv
mov
sbb
push
push
mov
fadd
nop
out
add
cmps
(bad)
mov
je
mov
mov
xlat
xchg
inc
and
sub
(bad)
cmp
in
jno
(bad)
sub
and
cmc
daa
cmp
adc
ror
inc
cs
enter
sbb
ret
repnz
ret
mov
and
and
add
jb
xor
(bad)
adc
add
pop
mov
xor
inc
lds
cdq
leave
sbb
clc
sbb
pop
sbb
dec
push
enter
dec
and
jecxz
add
sub
adc
mov
jp
shr
or
das
hlt
adc
mov
(bad)
mov
pop
mov
mov
adc
iret
mov
push
push
hlt
or
and
ja
fwait
cmp
add
jo
add
mov
lahf
mov
shr
sbb
pop
push
data16
add
retf
pop
mov
arpl
(bad)
xchg
jno
xlat
lock
les
add
dec
fidiv
mov
test
xchg
push
pinsrw
enter
sub
test
cmp
jo
out
enter
into
mov
mov
loope
mov
fdivr
test
pop
sub
jnp
sbb
xchg
mov
pop
xchg
movs
pop
movups
xchg
pop
out
loopne
fstp
pushf
and
pop
add
xor
icebp
into
mov
lock
cwde
pop
lea
adc
leave
push
mov
sbb
sar
or
and
push
leave
test
inc
movs
dec
inc
cmp
pusha
ret
pushf
fs
test
in
lea
loope
fs
int3
shr
sub
inc
and
dec
arpl
and
xor
jne
dec
cmp
adc
dec
xchg
push
ret
mov
icebp
out
xchg
add
clc
xor
cs
pop
ror
clc
or
pop
test
js
or
iret
in
adc
rcr
mov
int
mov
and
sbb
pop
push
lahf
mov
aad
test
into
add
and
test
sub
inc
popa
add
jmp
outs
cmp
and
test
add
lds
into
test
lea
jb
test
fcom
scas
in
mov
xchg
mov
fdiv
pop
(bad)
aas
rcl
cwde
xchg
sub
add
inc
test
mov
adc
and
shl
inc
cmp
out
mov
into
mov
add
arpl
enter
fwait
dec
xlat
or
mov
sbb
mov
mov
nop
add
sar
lea
iret
and
test
adc
iret
sar
inc
sar
and
cmp
inc
ret
sar
shl
push
cmp
add
jne
push
ror
inc
xor
sub
xor
lea
mov
mov
enter
mov
jb
hlt
ret
mov
inc
xchg
push
mov
inc
mov
sahf
dec
or
mov
lahf
ret
xchg
shr
icebp
push
in
mov
stos
add
xchg
aam
inc
je
test
lahf
outs
aam
mov
loop
pushf
fild
inc
or
xor
add
mov
call
aaa
cmps
inc
add
push
jbe
cmp
sbb
pop
outs
sub
mov
iret
cwde
cmp
add
aaa
iret
(bad)
loopne
inc
daa
add
in
dec
shl
daa
les
mov
ret
repnz
adc
dec
(bad)
je
lea
mov
xchg
pusha
inc
xchg
pop
xor
test
int
pop
mov
mov
add
cmp
(bad)
jmp
push
ja
mov
loopne
push
push
cli
cmp
or
mov
stos
ins
das
dec
jo
jl
cmps
je
jmp
push
cdq
call
cs
add
sti
cmps
retf
push
movs
call
imul
out
sbb
lods
push
mov
adc
dec
retf
repnz
inc
sahf
pop
adc
mov
adc
adc
imul
in
xlat
inc
xor
daa
xchg
jmp
cmp
daa
(bad)
je
pop
xlat
bound
inc
daa
not
xchg
sar
push
ror
mov
leave
test
mov
ret
js
call
sub
cmc
mov
sub
ret
popa
mov
adc
out
push
aad
mov
pop
dec
pop
pop
jnp
les
nop
or
cmp
jg
in
(bad)
dec
adc
lea
adc
out
mov
push
push
pop
rcr
mov
or
jl
dec
sbb
hlt
mov
or
ins
fwait
mov
cwde
pop
push
retf
sub
sub
sbb
jle
or
cmps
push
js
inc
inc
dec
sbb
and
add
ret
popa
outs
lods
aaa
xlat
or
ret
retf
jo
or
rol
nop
cmps
jl
aad
inc
test
retf
daa
adc
mov
stc
pop
cs
sbb
fdivr
clc
lds
popf
push
inc
test
inc
and
int3
mov
or
fdivr
rcr
mov
pop
mov
cmp
add
add
pusha
mov
xchg
sbb
int3
mov
add
push
push
test
add
push
adc
ins
in
fisubr
test
adc
cmp
sub
das
sub
fisubr
in
sbb
mov
clc
cmp
add
pushf
sub
xchg
(bad)
aam
rol
int
add
rol
dec
and
int3
add
adc
ins
or
pop
mov
or
arpl
push
or
imul
inc
and
adc
or
loopne
sub
mov
movs
adc
in
add
scas
int
adc
js
xlat
loop
push
je
inc
push
ds
push
inc
or
mov
cmp
cmps
push
ds
push
mov
mov
add
int
sbb
rcr
mov
adc
fmul
mov
aam
dec
and
aam
lods
in
xchg
push
jb
pop
aam
mov
rol
fisttp
jb
adc
sub
int
jmp
aam
popa
and
xlat
call
ret
fiadd
ret
in
out
aas
mov
arpl
(bad)
adc
out
repnz
push
add
out
inc
call
dec
xchg
pushf
or
aam
inc
pop
inc
jb
cld
aad
enter
das
outs
jmp
in
inc
sbb
in
jbe
in
inc
fmul
jo
jns
aad
mov
sub
pop
ret
and
adc
fidiv
adc
in
mov
(bad)
jmp
ficom
push
add
jmp
or
fucomi
and
dec
adc
and
cdq
dec
repnz
enter
cmp
leave
xchg
pushf
fistp
mov
mov
mov
rol
add
adc
loope
sub
add
addr16
dec
push
adc
rcr
jo
(bad)
and
in
dec
or
push
jb
in
add
in
test
inc
jb
fistp
inc
or
repnz
test
push
cmc
push
add
push
fmul
lods
push
add
mov
repnz
pop
rol
pop
(bad)
ds
cmp
inc
aaa
leave
add
xchg
call
pop
add
out
cmp
xchg
fstp
pop
(bad)
rcr
adc
add
push
int
jo
pusha
and
mov
pop
lods
je
addr16
outs
sbb
pop
je
dec
(bad)
add
mov
jp
sar
retf
mov
sbb
in
pop
push
es
mov
es
popf
daa
inc
mov
dec
arpl
dec
out
cli
fstp
mov
cmp
into
add
add
dec
lock
or
in
inc
or
and
sbb
je
mov
out
add
in
cmps
and
pop
push
xchg
lea
inc
xchg
in
or
push
mov
adc
enter
scas
xor
repnz
mov
or
mov
lods
add
outs
or
pop
dec
jne
sbb
mov
add
add
push
loop
(bad)
in
add
mov
mov
cmps
mov
pop
out
fdiv
neg
jo
loope
lahf
xor
push
and
mov
aad
push
or
push
adc
add
pop
pop
push
dec
jg
pop
cwde
dec
pop
sub
scas
pop
cs
fst
adc
call
rol
or
mov
inc
adc
adc
outs
scas
inc
sahf
in
add
cmp
push
out
cmps
or
dec
lock
pop
and
hlt
in
add
popf
sub
sbb
push
add
or
push
adc
test
nop
pushf
stos
or
push
nop
pushf
mov
jnp
in
nop
inc
sbb
(bad)
not
jb
hlt
dec
out
loop
xchg
div
dec
fbld
xchg
daa
cmp
shl
xlat
adc
loopne
push
sbb
scas
mov
xchg
pop
call
add
sbb
mov
add
adc
(bad)
and
jmp
jne
pusha
and
lahf
in
clc
stos
rol
pop
nop
cli
lahf
cmp
push
pop
rcr
adc
cli
lahf
sbb
in
sti
jo
leave
test
cmp
pop
xchg
push
jmp
and
aam
xchg
adc
std
jg
push
cmps
mov
std
imul
mov
mov
push
cmp
pop
mov
ret
and
rol
dec
push
out
ror
out
mov
mov
push
cmp
repz
adc
add
push
push
jl
shl
add
mov
sbb
cmp
and
add
stc
or
out
add
or
leave
fcomp
cmp
jns
out
add
mov
xchg
dec
inc
and
adc
push
xchg
scas
stos
in
pop
sbb
push
dec
push
enter
xor
out
and
xchg
cwde
fs
mov
ret
and
mov
out
and
leave
hlt
inc
cwde
xor
fs
xchg
hlt
adc
sub
enter
dec
repnz
ror
cmp
stc
push
push
loopne
test
add
loopne
pop
sar
pop
cmc
or
dec
xor
add
sbb
push
cld
pop
jo
and
leave
test
mov
ja
and
hlt
aam
arpl
xlat
sub
scas
or
dec
dec
add
popa
or
aaa
mov
push
sahf
push
and
push
xchg
sbb
and
popa
sub
push
cmc
xor
not
daa
pushf
jno
pop
xchg
xchg
dec
jne
add
(bad)
mov
rol
mov
xor
xchg
movs
inc
lods
stc
xchg
pop
int3
xor
repnz
and
xor
call
inc
jb
add
clc
cli
adc
rol
cld
(bad)
pop
xor
push
(bad)
(bad)
(bad)
je
adc
mov
dec
cmp
(bad)
sti
or
and
push
or
and
inc
push
and
or
mov
xchg
adc
xchg
mov
cmps
or
add
or
fisttp
cwde
jno
fild
sub
xchg
fwait
cmp
dec
fistp
test
cli
sub
(bad)
dec
mov
out
mov
sbb
cmp
stos
jmp
push
push
xchg
test
add
adc
pop
add
push
cmp
sbb
hlt
adc
xor
add
inc
add
sti
adc
adc
push
movs
pusha
nop
inc
call
adc
test
test
call
pop
add
daa
add
adc
jl
xor
add
(bad)
sbb
add
jl
test
pushf
mov
inc
and
adc
jmp
mov
sbb
pop
dec
ds
ror
add
xchg
inc
mov
fs
lods
inc
scas
add
mov
pusha
mov
mov
lahf
push
lahf
or
add
lahf
sub
lock
pop
in
push
in
inc
and
pusha
nop
mov
and
lahf
ins
pop
pop
add
mov
pusha
lahf
in
or
push
xor
sub
adc
jae
jo
sbb
xchg
adc
mov
dec
mul
lahf
cwde
aaa
data16
add
pop
cwde
icebp
add
daa
or
pop
or
adc
rol
and
leave
or
or
leave
or
push
cmp
jl
xchg
ins
je
cs
test
cmp
pop
call
in
xor
ficomp
jbe
sub
and
in
leave
test
aam
inc
and
movs
call
or
out
daa
add
inc
pop
fs
sbb
push
dec
pop
fs
mov
or
pop
cmp
aam
int3
pop
ret
and
mov
adc
push
nop
pushf
in
js
jecxz
xor
push
leave
dec
adc
push
jo
push
jmp
sub
jl
lea
mov
pop
ffree
push
inc
sbb
adc
add
and
hlt
jns
pop
pop
shr
pop
adc
cmc
cmp
adc
ret
and
pop
and
sbb
pop
test
pop
xchg
push
leave
and
dec
test
and
adc
rcl
ret
fld
(bad)
push
fild
daa
or
and
cmp
and
cwde
jle
sbb
test
or
xor
add
enter
ret
inc
mov
lea
mov
pop
xlat
or
sbb
adc
pop
nop
lahf
adc
push
add
pop
push
sbb
add
test
(bad)
adc
xchg
push
adc
sub
sbb
inc
pop
xlat
or
ja
adc
push
adc
sbb
rol
in
daa
push
sbb
mov
mov
daa
dec
push
add
lahf
sub
add
pushf
sub
inc
adc
mov
das
adc
dec
push
rcr
(bad)
xor
or
or
push
dec
repz
add
xchg
pop
jb
or
bound
push
rol
add
sub
pop
pusha
cmps
lock
or
inc
xor
nop
icebp
xchg
sbb
movs
shl
in
or
add
pop
es
stos
or
add
xchg
push
mov
ins
push
nop
sbb
jb
inc
sahf
sbb
and
or
shr
call
add
aad
mov
jecxz
cmps
add
xor
pop
and
sub
rol
sub
cmp
outs
sub
and
cs
xchg
mov
test
sbb
mov
scas
jl
adc
lods
scas
lea
sub
add
mov
mov
xor
pushf
mov
xor
jge
and
scas
jp
jge
lock
pop
add
push
mov
or
xchg
dec
sahf
add
cmp
cmps
add
push
les
mov
fild
adc
mov
and
xchg
in
mov
and
and
fsub
lock
cmps
lock
and
xlat
jb
xor
out
es
pop
das
jns
pusha
xor
or
and
in
push
pusha
xor
add
sbb
sub
inc
sub
pop
push
inc
or
rcl
shr
mov
lahf
sub
jo
nop
out
add
mov
ret
xlat
add
pushf
add
and
lahf
add
je
push
xor
pusha
test
cld
inc
push
pusha
popf
daa
(bad)
jle
sub
add
push
xor
stos
or
js
add
add
rcl
jmp
dec
or
loope
push
pop
sub
xchg
or
xlat
pop
sbb
pop
push
dec
loop
add
repnz
jb
push
aaa
jo
add
cmps
jmp
ins
push
rcr
jecxz
cmp
push
lock
aas
pop
adc
add
enter
add
cld
xchg
push
add
xor
xlat
adc
je
aaa
push
sti
lldt
lea
cmp
xchg
adc
mov
inc
adc
sub
mov
dec
adc
scas
mov
push
or
pop
clc
dec
mov
push
out
lods
xor
fsub
call
je
add
push
nop
addr16
lock
jb
dec
xor
pop
lods
and
cmp
push
pop
inc
fadd
add
daa
add
mov
outs
outs
push
adc
fwait
movs
xor
adc
cdq
add
jae
enter
inc
sbb
mov
xchg
ret
add
jmp
and
cmp
loopne
inc
inc
push
dec
push
pop
cmp
add
xchg
rcl
inc
push
ret
pushf
jmp
mov
push
aas
cld
inc
pop
hlt
or
imul
adc
adc
mov
ins
test
aad
push
aad
adc
div
jle
fdiv
pop
push
mov
xor
inc
mov
push
popa
mov
imul
repnz
xor
das
add
pop
xor
inc
imul
push
cmp
sbb
rcl
rol
leave
shl
test
aam
inc
sahf
test
in
jnp
sbb
cld
movs
add
dec
lods
imul
push
mov
inc
add
dec
ds
inc
dec
pop
je
int3
push
imul
stc
lahf
pop
aad
jecxz
or
push
cmp
inc
jg
test
push
scas
aas
out
ss
inc
pop
mov
ror
or
jmp
scas
jge
jnp
in
push
sbb
push
jg
inc
mov
movs
out
sub
shl
lar
sub
sub
jp
xor
cmp
jge
inc
xchg
adc
jge
repnz
add
pusha
or
sub
loopne
jge
push
adc
add
sub
pop
aad
js
inc
xor
fsubr
outs
jg
(bad)
adc
add
jge
pusha
test
pop
jmp
lods
ret
sub
ret
dec
or
sbb
inc
dec
ins
xchg
jl
sub
sub
xchg
pop
adc
cs
push
cld
sar
add
add
js
punpckhbw
sub
loopne
add
mov
xchg
dec
ds
movs
mov
outs
popa
add
pop
inc
sub
push
xlat
inc
sub
adc
dec
push
jnp
loopne
repnz
cld
push
xor
mov
ss
dec
pop
cmp
pop
dec
push
aas
loope
adc
dec
outs
cs
mov
mov
and
mov
and
adc
cmp
dec
rcl
mov
jecxz
jo
pop
inc
adc
adc
mov
stos
retf
or
pop
push
and
sbb
and
add
movs
cmp
inc
add
outs
fild
mov
ret
cmp
and
dec
lss
inc
mov
fld
or
push
inc
pop
js
push
push
clc
fst
mov
fadd
inc
jp
or
add
sub
cmps
push
push
dec
lea
fwait
add
mov
clc
or
pop
ins
add
lds
retf
cwde
(bad)
mov
or
mov
inc
sti
inc
xor
sub
fwait
mov
test
push
push
addr16
je
mov
addr16
call
(bad)
jg
sub
cmp
mov
cs
pop
and
push
shl
dec
aam
mov
inc
push
or
popa
and
je
cmp
cmova
jmp
ins
es
and
repnz
fimul
sub
hlt
xchg
out
push
push
int3
push
jns
push
cmp
mov
jbe
out
sahf
pushf
mov
push
jl
sbb
dec
dec
inc
cmp
cmps
repnz
daa
and
push
jb
or
push
fwait
retf
leave
leave
enter
pop
inc
jl
in
leave
mov
cmp
fcomi
in
test
jne
or
jmp
adc
sub
fs
add
and
add
sub
jnp
pop
inc
cmp
in
xchg
mov
jno
add
inc
and
ret
mov
add
push
inc
stc
xor
inc
cmp
or
repnz
cmc
inc
add
adc
nop
or
ins
push
push
cld
cmp
cdq
mov
or
adc
adc
test
jae
push
lea
nop
cmp
push
push
mov
xchg
cmp
pop
and
jnp
inc
and
(bad)
add
push
aam
pop
pop
aam
inc
cmp
dec
push
shl
adc
sub
jno
test
add
jae
dec
inc
sub
xchg
add
sub
ret
repnz
aam
add
lds
and
push
add
inc
and
push
dec
add
mov
add
rol
push
rol
dec
test
and
push
stos
jnp
mov
push
mov
add
sbb
test
adc
jnp
sub
jge
mov
jnp
and
jns
push
mov
push
aam
dec
jnp
mov
or
pop
stos
call
std
or
std
sub
jp
jnp
dec
inc
pop
push
fsubr
aam
sub
test
xor
mov
and
jg
sbb
rol
inc
pop
pusha
nop
stos
xor
fs
daa
push
or
stos
push
or
push
repz
push
or
xchg
or
mov
add
sbb
sub
inc
or
mov
adc
mov
adc
aad
pop
and
push
pop
pop
add
ins
test
enter
pop
mov
pop
push
in
or
dec
popf
sbb
jmp
pop
or
xchg
sub
add
ja
mov
and
adc
or
mov
inc
xlat
nop
sahf
bndldx
shr
cwde
cmp
inc
enter
je
or
popa
jp
in
inc
(bad)
push
bound
mov
mov
int
xor
pop
iret
lock
push
test
test
leave
imul
sub
bound
sub
imul
(bad)
cmc
call
outs
or
std
int3
xor
pop
add
adc
bound
bound
mov
push
and
mov
xor
cwde
nop
dec
push
mov
das
adc
sbb
aas
or
pop
hlt
sbb
adc
ss
nop
sti
lods
push
mov
push
adc
mov
pop
adc
jns
dec
adc
push
cmp
cmp
or
xchg
mov
call
and
jae
call
daa
daa
daa
mov
es
je
int
imul
or
push
in
fs
cdq
loope
imul
xor
dec
jne
cmp
jns
loop
ins
imul
aas
psrlw
pop
out
push
in
pop
sbb
inc
push
mov
fimul
push
sbb
mov
outs
or
add
inc
jo
or
pop
mov
dec
push
jo
cmp
mov
sti
mov
outs
nop
sti
nop
or
repnz
push
cmps
ds
mov
stos
push
mov
imul
loopne
stos
pop
adc
xchg
outs
scas
mov
pushf
jp
mov
add
mov
mov
jp
mov
das
mov
push
mov
fwait
cmp
mov
sub
xchg
outs
or
test
movs
cmp
loopne
mov
mov
cld
xchg
outs
loope
or
ss
dec
push
adc
sbb
adc
mov
sbb
and
mov
jnp
push
add
xor
outs
cmp
or
pop
dec
push
sub
xchg
pop
mov
pop
mov
pop
pop
jo
push
or
xchg
cmp
xchg
outs
add
xor
pop
or
jns
push
pop
sub
dec
in
pushf
sbb
mov
shl
xor
push
lock
mov
mov
inc
xlat
cmp
push
ss
mov
add
and
test
xor
pop
or
lea
push
jmp
xor
jmp
sub
jo
cmps
sbb
xor
cmps
and
nop
inc
pusha
stc
mov
push
adc
pop
sbb
jp
add
add
jo
cs
sti
sub
xchg
inc
jo
aaa
daa
cmp
jnp
jmp
(bad)
jo
pop
add
cmc
fsubr
div
jno
repnz
jno
jb
mov
jmp
pop
ins
jb
dec
adc
icebp
push
sti
aad
loop
test
push
mov
push
aad
and
inc
sub
cmps
push
aam
iret
pop
cmc
int3
jo
adc
(bad)
test
(bad)
add
ds
jns
je
mov
jne
sbb
inc
das
pop
je
popa
loopne
pop
mov
cli
ret
add
add
movs
push
lds
popf
je
shl
loope
pop
aas
das
dec
jp
xor
add
mov
adc
add
loopne
push
cld
je
stos
loopne
pop
pop
inc
jb
bound
pop
or
fcmovbe
imul
mov
lock
jbe
test
clc
pop
fistp
push
mov
fbstp
hlt
or
mov
add
dec
repnz
push
add
xchg
mov
adc
adc
add
mov
push
repnz
jo
int
or
jb
js
cmp
cmp
sar
jae
mov
rol
dec
dec
stc
xor
xchg
xchg
daa
adc
or
xchg
xchg
mov
push
loop
leave
mov
enter
bswap
icebp
adc
leave
cmp
int
in
in
jg
jnp
popf
fcomi
in
pop
cmp
movs
jbe
mov
xchg
xlat
pop
add
fimul
jle
push
lds
mov
popf
nop
push
mov
add
push
aaa
dec
or
jo
daa
push
adc
xor
sub
aad
mov
repnz
push
cmp
push
add
les
rol
ins
push
push
sti
lea
adc
fdiv
and
pop
adc
jno
push
das
add
add
lea
and
mov
jb
add
push
daa
mov
add
sbb
inc
dec
adc
aad
dec
pop
inc
lods
aad
adc
push
or
adc
jae
dec
push
adc
add
sub
inc
lods
add
aad
or
dec
push
mov
sbb
and
mov
aad
inc
ror
inc
lods
aad
adc
add
aad
pusha
add
bound
xor
jb
and
or
inc
xor
mov
test
arpl
push
aad
add
fsub
aad
bound
(bad)
aad
mov
pop
dec
pusha
(bad)
outs
lods
inc
xor
adc
adc
loope
push
fs
mov
(bad)
shl
and
mov
adc
add
push
cmp
dec
inc
inc
sbb
sbb
lods
xor
or
xchg
aas
and
push
ins
sbb
jnp
or
add
data16
dec
addr16
sbb
lods
add
test
bound
daa
and
bound
adc
(bad)
nop
inc
add
mov
aam
bound
jmp
idiv
test
in
add
loop
pop
xchg
add
dec
push
imul
jo
mov
xchg
adc
std
int
add
inc
mov
lds
inc
shr
pop
adc
pop
shl
add
mov
out
pop
push
aad
add
mov
js
das
inc
enter
mov
mov
mov
mov
or
jg
push
jb
xchg
mov
mov
pusha
mov
adc
cwde
or
add
cmp
add
mov
fmul
test
jg
add
rcl
ins
and
add
adc
sub
call
pop
lock
and
dec
rol
and
push
lock
jbe
push
ror
push
nop
push
sar
add
cwde
adc
cmp
add
cwde
and
cmps
dec
call
mov
cmp
adc
aaa
ror
nop
jns
or
in
xchg
out
push
loop
jb
repnz
jo
or
cmp
cmp
xor
out
pushf
mov
xchg
cmps
dec
inc
sahf
inc
xchg
(bad)
mov
dec
adc
sahf
pushf
pushf
cmps
repz
and
clc
aas
pop
rcr
mov
pop
add
fst
add
inc
jecxz
lea
les
fisub
or
loopne
or
sbb
pushf
pop
jno
and
nop
push
add
pop
fs
nop
pop
xchg
pushf
nop
push
enter
inc
mov
adc
cmp
add
push
movs
or
add
xor
adc
xor
dec
ins
add
jo
pop
xchg
and
and
push
pop
rol
xchg
das
push
mov
add
fwait
and
fs
add
sbb
test
pop
inc
mov
rcl
pop
jno
repnz
pop
fs
inc
enter
pop
fs
sub
dec
enter
lods
sub
push
add
sub
or
shl
xchg
sub
push
add
adc
xor
add
add
mov
mov
mov
cmp
or
add
nop
mov
ror
sub
pusha
adc
and
adc
xchg
mov
add
test
pop
mov
add
add
xchg
pushf
add
dec
mov
xchg
adc
or
pop
adc
pop
mov
or
sbb
cmp
cwde
add
push
pop
sub
mov
add
mov
mov
add
jns
rcr
cmp
inc
add
and
sbb
call
add
xchg
jmp
stos
test
dec
add
sbb
and
nop
cmp
sub
cmc
adc
or
addr16
movaps
sub
cs
cwde
inc
mov
cmove
cwde
push
pop
pop
push
add
cdq
outs
cdq
jmp
dec
sub
add
sub
adc
and
test
int
push
les
mov
pop
punpckldq
scas
pop
aad
cwde
clc
add
(bad)
mov
es
out
mov
xchg
clc
cmps
das
mov
push
dec
test
sar
(bad)
es
cli
push
outs
das
add
jmp
inc
cld
push
fimul
push
ds
in
test
pushf
imul
shl
xor
dec
dec
cmp
pop
or
xchg
nop
pushf
pop
mov
adc
push
popa
and
nop
seto
pop
daa
retf
cmp
xlat
sti
pushf
(bad)
mov
aad
push
xlat
js
jge
das
add
mov
arpl
call
loopne
cmp
jbe
pushw
sub
jnp
or
je
seta
les
xchg
hlt
xchg
seta
mov
mov
jns
inc
call
dec
mov
jmp
mov
in
mov
fwait
dec
in
sar
dec
xrstor
cmp
outs
movhlps
leave
leave
fdivr
xor
fmul
mov
xor
mov
inc
movs
in
in
out
mov
repnz
sbb
hlt
sbb
in
cwde
hlt
push
test
push
lds
mov
pop
jge
fimul
push
add
mov
xchg
push
fwait
nop
push
clc
test
dec
add
bound
xchg
add
pop
jno
cs
jb
pop
leave
cmp
clc
test
or
inc
push
push
lods
or
or
icebp
or
mov
mov
mov
sub
xchg
pushf
and
or
test
and
inc
sbb
inc
icebp
xchg
dec
inc
lods
enter
inc
lods
xchg
xchg
adc
inc
or
lea
sbb
xchg
iret
mov
mov
xchg
jno
adc
test
pop
enter
clc
test
nop
nop
xor
aad
icebp
les
nop
jae
imul
xchg
inc
clc
test
test
or
push
and
je
icebp
cmp
(bad)
add
test
push
test
dec
sub
and
dec
or
mov
aas
mov
aas
or
aas
clc
test
ret
clc
test
adc
(bad)
aas
jns
add
or
xchg
add
aas
jns
or
clc
test
push
sub
scas
pop
pop
ins
dec
inc
sub
aas
loopne
cmp
jp
nop
pushf
inc
ss
or
xchg
test
icebp
or
sub
cs
jp
add
mov
or
mov
out
sbb
aam
xchg
adc
out
or
jns
mov
push
adc
add
xchg
dec
out
(bad)
push
cli
jo
cs
adc
sub
dec
inc
inc
inc
pushf
and
cmp
rcl
aas
mov
cmovns
adc
pop
inc
pop
sub
adc
xor
iret
and
adc
mov
cdq
ror
adc
jb
out
aas
test
outs
push
int
and
pop
jl
call
call
lods
and
pushf
dec
rol
xchg
mov
shl
adc
adc
or
dec
adc
lods
or
cwde
fnstcw
push
aam
adc
adc
out
pop
adc
mov
mov
add
add
cmovnp
stos
pop
mov
add
rol
das
mov
add
pop
cld
push
or
xor
dec
mov
outs
int
out
blsic
lods
adc
adc
std
test
fwait
mov
shl
(bad)
push
push
scas
inc
popf
outs
ror
adc
mov
mov
and
or
add
mov
add
ins
inc
adc
and
adc
jmp
xor
adc
out
int3
inc
mov
das
out
mov
inc
out
mov
push
(bad)
mov
outs
test
hlt
adc
add
jo
stos
verw
mov
les
in
scas
xor
daa
mov
xchg
into
adc
repnz
cmc
mov
mov
mov
fs
sub
push
xor
in
fwait
in
mov
sbb
jb
fimul
mov
cmp
jp
retf
aaa
bsf
in
in
pop
packsswb
in
sbb
leave
leave
mov
or
in
ins
leave
repz
add
pop
push
cmp
punpckhdq
push
add
add
add
daa
in
mov
adc
pop
or
cmp
pushf
nop
push
jb
adc
mov
pop
xchg
sub
add
icebp
inc
inc
adc
pop
sub
push
cmp
add
inc
stos
pop
inc
push
adc
add
inc
add
sbb
push
add
and
adc
push
xchg
pop
and
loopne
push
fwait
pop
adc
pcmpgtb
fdivr
push
mov
rcl
push
jno
add
mov
nop
adc
mov
inc
gs
unpckhps
pop
les
add
jmp
mov
push
and
enter
add
loop
jg
add
xor
test
fdivr
and
test
and
nop
test
sub
or
jns
mov
push
test
test
jns
add
add
test
leave
or
sbb
and
clc
inc
sbb
test
and
mov
inc
sub
push
pop
push
dec
jmp
add
in
mov
jns
sbb
mov
add
lock
fs
add
and
mov
cmps
popf
or
push
add
nop
inc
or
mov
verw
ds
add
push
bound
inc
add
pop
mov
fwait
inc
loopne
xor
add
sbb
adc
rcl
(bad)
fucomi
cwde
rcr
das
shl
retf
retf
add
rol
rol
sub
shr
js
adc
or
mov
push
mov
stos
add
retf
xor
lahf
pop
lds
pop
or
xchg
lock
add
das
stos
add
xor
push
or
addr16
je
(bad)
lock
popf
jge
(bad)
es
das
cmp
xchg
mov
adc
cld
inc
fisttp
push
sbb
adc
pusha
ret
add
xchg
ret
fbld
call
pop
sbb
lods
xlat
test
ret
jmp
in
mov
xchg
add
pop
pop
pop
and
push
cmps
mov
cmp
les
lea
jge
sbb
sbb
les
push
sbb
push
xor
aaa
xor
push
imul
push
push
in
pop
push
dec
xor
jmp
pop
aaa
mov
and
pop
mov
dec
inc
push
xchg
shl
mov
(bad)
and
syscall
(bad)
repnz
addr16
ss
cmps
(bad)
fs
icebp
out
xchg
enter
repnz
mov
or
push
sbb
jb
repnz
retf
cmp
cmp
mov
pushf
pushf
or
int3
cmp
mov
test
dec
fs
ja
mov
jb
out
into
repnz
xchg
daa
punpckhwd
lods
xor
ss
xchg
iret
add
ins
(bad)
daa
int
das
push
pop
and
mov
add
test
adc
call
nop
add
pop
mov
sub
dec
loope
inc
pop
leave
mov
adc
les
rol
cld
pop
inc
add
sti
inc
add
sub
push
mov
sti
test
in
rcl
loope
mov
loopne
adc
(bad)
(bad)
sti
loopne
mov
inc
mov
mov
pop
dec
inc
leave
or
loope
rol
dec
popf
sub
xor
loope
test
add
loope
repnz
rcl
daa
fs
adc
ss
call
push
xor
mov
add
adc
adc
or
xor
sbb
mov
inc
mov
mov
pop
and
dec
dec
push
test
mov
sub
pushf
mov
mov
mov
mov
call
add
cmp
cmps
add
adc
mov
inc
dec
adc
in
mov
pop
dec
inc
mov
push
leave
xor
rol
ss
cmp
mov
and
sbb
cmps
pop
and
ficomp
mov
xor
mov
push
cmps
and
in
and
test
and
mov
inc
dec
and
push
sub
mov
sbb
aas
enter
pop
je
mov
lods
pop
xor
mov
shl
ss
sbb
pop
xor
push
shl
repnz
aaa
jp
loope
add
je
pop
shl
sbb
rol
fdiv
int
fdiv
retf
inc
mov
dec
sbb
sub
dec
or
mov
sub
fistp
sub
aam
fs
sub
popa
and
out
clc
cld
test
push
push
das
imul
ficomp
test
pop
outs
enter
hlt
sub
push
loop
aad
retf
fsubr
dec
inc
cmp
hlt
aad
or
imul
hlt
aad
mov
jb
dec
in
mov
(bad)
push
pushf
fisubr
mov
jno
ffreep
fwait
mov
addr16
push
mov
bound
or
ret
fdiv
and
push
sbb
int3
push
cmp
les
outs
adc
xchg
dec
leave
mov
(bad)
and
mov
jecxz
xor
(bad)
stc
test
outs
mov
jns
fldenv
fiadd
inc
sahf
pushf
leave
add
or
loope
fdiv
in
xchg
pop
js
jmp
or
xchg
xchg
pop
push
setl
mov
(bad)
xchg
in
fistp
lods
daa
daa
daa
popf
jmp
jg
outs
cmps
out
aas
push
push
sbb
loope
loope
aas
cmc
imul
pop
aam
pop
or
jne
adc
outs
pop
xchg
es
dec
jns
loop
sbb
fsubr
dec
or
jns
dec
sub
jno
push
jns
scas
in
add
sub
cmp
mov
fdiv
ins
push
fdiv
fst
aam
stos
pop
sar
push
das
loopne
push
loop
ins
add
je
mov
xchg
add
cmp
mov
jns
cmp
push
jns
push
repnz
or
aam
dec
jno
ror
jns
pop
shr
cmp
aad
adc
add
jae
sbb
aam
jns
loop
dec
push
xchg
push
loop
xor
jns
push
or
inc
jns
mov
cmp
inc
mov
dec
and
jns
push
add
xor
cmps
inc
jns
repnz
push
loop
mov
adc
add
jns
pushf
cmp
xchg
dec
jns
daa
in
push
loop
pop
dec
jge
in
dec
dec
inc
fmul
sub
mov
inc
jo
push
in
ss
adc
les
xchg
cmps
pop
arpl
lock
mov
xor
int3
int
out
or
xchg
jecxz
add
(bad)
fcomp
or
and
sar
adc
fisubr
sbb
cmp
push
call
inc
push
jb
adc
pusha
adc
outs
scas
adc
and
mov
popa
in
cmovge
dec
ror
scas
pop
inc
pop
sub
ins
in
pop
add
ror
mov
rol
in
popa
dec
in
popa
in
inc
test
aam
addr16
pop
add
(bad)
in
ror
retf
retf
push
out
out
out
movs
mov
(bad)
(bad)
add
mov
fild
mov
and
int
add
push
ror
inc
lods
stos
test
sbb
dec
ror
inc
(bad)
xlat
or
mov
out
push
stos
adc
add
fisub
adc
imul
inc
jl
push
cmps
das
lea
mov
jae
fst
mov
and
mov
adc
push
adc
jmp
jmp
and
and
adc
cmp
shr
or
sbb
ins
add
bound
dec
ins
xor
dec
fs
idiv
into
mov
pop
mul
imul
cmp
add
arpl
fst
dec
cwde
lock
push
cmp
lock
mov
and
add
loopne
dec
push
jecxz
repnz
cmp
jecxz
in
mov
sbb
nop
out
in
fcmovnu
ltr
iret
out
daa
jp
stc
dec
jne
mov
cmc
out
sub
out
pushf
fdiv
mov
test
sahf
sbb
lahf
btr
icebp
and
xchg
(bad)
fist
repnz
mov
daa
mov
pushf
hlt
cmp
dec
dec
outs
mov
hlt
daa
daa
daa
and
gs
call
and
scas
(bad)
retw
dec
dec
movs
in
aas
test
rcr
jo
movs
pop
shl
rol
test
add
pushf
and
es
mov
adc
dec
enter
jecxz
add
les
sbb
inc
pop
leave
add
push
jb
and
and
and
or
add
push
and
bound
call
fs
fbld
adc
pop
not
out
add
mov
or
not
push
adc
mov
js
mov
bound
add
iret
sub
jno
and
add
push
and
and
add
mov
popa
inc
retf
and
sbb
aam
mov
test
add
pop
test
dec
pusha
test
push
jg
adc
test
mov
push
pop
idiv
dec
inc
and
pusha
sti
stos
mov
add
sti
imul
mov
inc
add
mov
(bad)
xchg
pop
pop
neg
add
push
sbb
and
mov
jns
pop
add
xchg
push
adc
pop
dec
sti
pop
inc
xchg
pushf
nop
div
and
adc
add
inc
pop
mov
jmp
int3
and
xor
scas
in
jmp
sub
popa
jns
mov
inc
pop
jecxz
loopne
inc
add
arpl
loope
and
or
inc
pusha
arpl
pop
dec
and
xchg
pop
enter
jecxz
in
sbb
inc
pop
mov
adc
rcl
ins
push
sbb
daa
xchg
sub
adc
pusha
add
(bad)
(bad)
inc
mov
iret
div
stc
lahf
cmp
pop
mov
sbb
into
stc
lahf
cli
stc
push
daa
das
das
popa
cli
fdivr
sub
leave
push
rcl
inc
sub
pusha
mov
or
inc
in
shl
rol
pop
adc
stc
or
mov
or
in
int
rcl
cs
jae
mov
push
lods
cld
js
pop
out
fild
cmc
cld
pop
clc
push
push
les
cmps
pop
popf
(bad)
sub
or
cli
push
cmps
and
outs
xor
add
das
mov
push
ins
loopne
sub
std
sbb
jae
and
sbb
mov
std
ins
mov
aas
pop
daa
pop
and
push
leave
mov
inc
lods
lea
aad
sub
sbb
(bad)
ja
push
and
xchg
mov
inc
test
jmp
mov
adc
mov
ins
ja
sub
ins
adc
rol
sub
and
mov
jmp
mov
movs
call
adc
test
call
push
lods
push
xor
jb
xor
jnp
inc
mov
xchg
jns
add
cmp
pop
jnp
pop
mov
push
pop
(bad)
add
popf
loope
add
dec
inc
jns
jmp
add
daa
daa
and
(bad)
and
xchg
xchg
xchg
add
leave
leave
leave
leave
dec
jp
into
in
loopne
hlt
sub
dec
xsaveopt
repnz
invd
xor
sbb
mov
or
in
pop
ja
(bad)
imul
push
(bad)
(bad)
sbb
fwait
retf
sub
pop
adc
adc
jp
call
add
cmp
mov
rol
xor
pop
enter
les
and
and
inc
fst
sub
adc
push
lds
sub
adc
ins
add
pop
aam
inc
fst
push
adc
mov
icebp
das
das
fwait
pop
inc
lods
pop
jo
mov
(bad)
and
add
(bad)
lds
mov
add
lods
inc
ret
inc
mov
sub
fadd
jae
sub
inc
mov
mov
pop
inc
mov
sbb
inc
ror
mov
dec
pop
sbb
mov
add
mov
call
adc
mov
les
imul
sub
lea
adc
sub
mov
mov
and
mov
mov
mov
dec
mov
or
or
popf
rcl
dec
ss
inc
mov
mov
pop
add
jne
push
mov
push
lods
es
or
das
bound
mov
mov
mov
inc
fwait
xor
mov
jo
outs
inc
mov
push
add
or
add
mov
es
test
stos
and
and
cmps
or
cmp
sub
adc
sbb
mov
and
sbb
gs
dec
loope
adc
outs
push
inc
jl
cmp
stos
aas
test
add
pusha
inc
and
pop
add
sub
out
or
push
dec
mov
adc
push
adc
fidivr
movs
mov
enter
jg
or
xchg
xchg
ins
jo
mov
pop
scas
js
pop
cs
pop
xchg
cvttps2pi
addps
xor
sbb
pop
and
push
jg
pusha
or
sbb
addr16
mov
retf
and
inc
and
shl
hlt
push
sqrtps
pusha
inc
mov
pop
rol
push
xchg
pop
adc
pop
adc
pusha
mov
mov
push
adc
adc
dec
js
xor
push
(bad)
aam
in
pop
stc
adc
adc
add
outs
loope
add
pop
and
pop
mov
repnz
adc
jo
pop
ja
add
imul
jns
adc
inc
xor
adc
je
dec
add
in
sbb
das
push
adc
jecxz
adc
ss
hlt
sub
pushf
fdivr
push
jae
add
push
sub
pop
div
inc
fmul
and
add
inc
or
js
add
ja
lahf
adc
jecxz
paddd
push
mov
neg
lahf
push
fist
xor
pop
cmovns
enter
popf
jmp
in
in
sbb
jb
repnz
inc
sbb
jns
sbb
int
push
cmp
repnz
jne
ror
mov
aas
push
outs
pop
rcr
mov
add
std
punpckhdq
lock
jmp
add
push
inc
pop
mov
add
xor
or
add
add
and
sbb
inc
xor
inc
pop
in
and
cs
jl
sub
adc
les
dec
inc
shr
cmp
daa
xchg
unpckhps
sbb
add
inc
inc
pop
push
les
or
cmp
ror
push
adc
das
inc
add
rcr
bound
add
loopne
adc
iret
movs
sbb
inc
mov
and
pop
or
inc
add
gs
pop
push
les
cmp
sar
mov
xchg
jg
scas
push
jb
add
pop
dec
nop
sub
pop
push
or
shl
aad
pop
inc
xchg
push
enter
inc
pop
inc
adc
nop
pop
stos
mov
bound
add
pusha
lds
mov
or
mov
and
pop
mov
sbb
inc
push
and
jns
pop
sub
xchg
dec
nop
push
xor
inc
inc
pop
add
pushf
xor
add
cld
xchg
in
add
inc
pusha
xlat
sub
adc
ins
sub
shl
das
push
inc
cmp
rol
inc
dec
sbb
mov
dec
hlt
dec
pop
jmp
xor
movups
in
xor
fld
add
and
push
and
sub
in
sub
rol
das
add
rcl
xchg
js
xor
rcl
inc
or
mov
ds
(bad)
comiss
add
and
fild
and
inc
and
mov
into
and
xchg
xchg
xchg
pop
add
imul
cmp
retf
or
and
inc
mov
(bad)
sub
adc
inc
pop
(bad)
push
push
stos
pusha
retf
cmps
pop
push
in
and
sbb
rdtsc
adc
retf
test
add
ss
cmp
int3
and
pop
cmp
dec
mov
push
aam
jmp
adc
mov
mov
aaa
push
push
int
xor
dec
and
jecxz
and
je
xchg
cmps
xor
pcmpgtd
out
pop
xor
js
lods
and
dec
pop
aaa
jb
in
jmp
es
int3
fisubr
add
addr16
ffreep
fwait
mov
xchg
test
pop
mov
mov
xchg
lods
mov
sub
xor
lods
iret
lods
ss
pusha
xor
je
cwde
jne
and
and
sub
loopne
call
pop
out
addr16
fsubp
js
sub
movlps
dec
das
das
lahf
jne
jae
mov
repz
sub
in
aad
sub
jns
jb
jmp
sub
mov
cmp
inc
sahf
pushf
pushf
call
dec
dec
mov
push
das
sub
daa
daa
daa
arpl
xchg
xchg
xor
mov
jmp
xor
jno
data16
lods
mov
pop
shl
push
adc
stos
mov
xor
lods
stos
sbb
xor
jmp
cdq
fiadd
jmp
inc
xor
jno
mov
xchg
xor
sub
(bad)
rol
inc
mov
daa
cwde
xor
mov
or
push
mov
outs
ins
push
push
mov
outs
cdq
movs
and
adc
inc
adc
xor
jno
lods
push
mov
ins
xchg
push
ret
mov
mov
fwait
xor
mov
xor
mov
and
mov
iret
lds
push
sti
jno
and
sti
xor
xchg
xor
cld
xor
add
xor
gs
mov
mov
int
push
(bad)
call
sti
push
aad
mov
sub
and
push
dec
mov
int
inc
mov
sub
xor
cmp
and
push
xor
imul
push
sub
or
or
sti
xor
pop
xor
push
sbb
sbb
jns
add
or
mov
sbb
pop
or
lods
sahf
sbb
data16
add
push
adc
mov
dec
pop
mov
lock
and
inc
in
je
daa
lds
mov
outs
mov
sbb
lods
fistp
stos
nop
in
ja
or
out
ins
add
xor
and
mov
movs
hlt
xor
pop
xchg
pop
enter
and
test
pop
jne
jg
cmp
cmp
add
sahf
adc
sbb
xchg
xchg
lods
xchg
arpl
loopne
int
jo
in
inc
test
push
imul
or
mov
pop
lahf
repnz
push
sbb
mov
mov
mov
push
movs
dec
hlt
xor
lods
das
sahf
fldenv
xor
cmp
popa
push
test
ins
add
push
ja
pop
adc
mov
pop
lahf
push
imul
cmp
mov
add
push
sbb
lahf
das
sub
xor
sti
js
ja
dec
inc
das
sbb
sub
cmp
pop
std
gs
dec
inc
lahf
js
js
cmp
pop
test
mov
add
mov
lds
cmp
in
dec
add
push
(bad)
seto
xor
leave
or
fcmovnb
add
js
ins
and
ret
call
and
add
js
rol
xor
cmp
sub
ret
retf
inc
mov
ret
xlat
pop
std
adc
mov
mov
and
test
outs
adc
xchg
je
dec
inc
(bad)
sub
aas
or
push
add
lahf
(bad)
or
inc
jne
xor
lds
and
repz
xchg
cs
icebp
shl
nop
push
add
mov
dec
xlat
pop
mov
pushf
cmp
mov
mov
cmp
fdivr
pop
cmp
rsqrtps
and
sub
(bad)
or
(bad)
pop
and
mov
mov
inc
repnz
fs
mov
scas
adc
(bad)
mov
push
scas
pop
or
pushf
mov
mov
scas
outs
mov
jb
cmp
cmp
cmp
cwde
clc
add
xor
mov
mov
mov
cmp
loopne
adc
addr16
shl
xchg
test
(bad)
xchg
push
rol
push
shl
pop
xchg
ror
jmp
retf
xchg
cmp
pop
in
hlt
push
jg
ds
pop
mov
or
stc
sbb
sub
push
inc
(bad)
push
dec
dec
add
aas
dec
sub
add
jbe
sub
mov
dec
inc
xor
mov
xchg
jne
cmp
push
inc
mov
sub
(bad)
test
mov
inc
(bad)
mov
pushf
dec
inc
jns
das
jo
das
aaa
stos
psllq
sbb
jne
push
jb
or
je
je
and
int
aas
movs
inc
leave
and
inc
das
adc
inc
sbb
cmps
pop
frstor
sub
or
cmp
mov
mov
clc
das
pop
and
push
inc
aaa
movs
into
clc
repnz
cmp
cmp
dec
inc
shl
mov
sub
push
push
loopne
sbb
addr16
xor
inc
std
jo
xor
cmp
add
inc
xor
push
adc
push
cmp
bound
and
neg
sar
rol
ja
add
mov
mov
mov
and
add
xchg
loope
inc
cmp
movs
add
and
push
jns
adc
call
je
iret
sub
push
or
adc
sbb
add
push
lahf
or
inc
mov
mov
cmp
jmp
inc
movq
push
adc
push
xor
imul
xor
je
neg
jo
add
sub
pop
or
inc
mul
mov
sub
pop
fdiv
xlat
rol
sbb
in
adc
sbb
inc
adc
push
rcr
inc
pop
dec
stc
add
popw
push
sbb
push
sar
xchg
enter
jae
das
fild
dec
test
stos
mov
test
add
nop
or
mov
mov
(bad)
dec
aaa
xchg
mov
int
mov
and
loopne
cmp
sbb
icebp
clc
mov
pop
int
add
pop
pop
cld
sub
scas
movs
sbb
sbb
dec
jae
add
xchg
mov
bound
xchg
hlt
mov
xor
add
sbb
ss
mov
(bad)
punpckhdq
jmp
shr
mov
xchg
dec
sahf
stos
sar
push
movs
test
pop
sbb
repnz
es
(bad)
test
(bad)
mov
dec
(bad)
mov
pushf
pop
cmpxchg8b
add
(bad)
stc
cmovno
push
and
and
stos
xor
mov
adc
or
add
dec
adc
mov
mov
mov
or
add
dec
sbb
or
add
bsf
push
push
dec
pop
mov
cmps
dec
aas
ja
adc
fmul
cmp
ins
push
stc
add
pushf
(bad)
pop
dec
aas
jle
push
popf
cmp
dec
jo
js
int3
xchg
lahf
cmp
pusha
es
sbb
pop
sbb
ins
cmp
mov
stos
pusha
xchg
lahf
pushf
cmp
push
adc
ror
push
hlt
pop
jno
aaa
pop
pop
adc
mov
arpl
adc
inc
adc
test
dec
and
add
and
dec
sbb
push
pusha
jne
or
mul
ret
inc
xlat
jo
imul
xchg
jno
outs
mov
out
mov
push
sahf
sub
lods
push
pop
or
jbe
push
pop
sub
cmovp
and
xchg
push
(bad)
and
ret
adc
push
jb
pop
adc
pop
dec
fnstsw
sbb
fistp
shl
or
push
xchg
adc
call
sub
repnz
xchg
enter
add
push
pop
aam
repnz
xchg
fs
inc
jl
or
les
cmp
mov
xchg
adc
cmc
push
add
pushfw
and
shl
dec
push
add
dec
imul
add
int
add
pop
cmp
push
inc
add
retf
shl
xor
arpl
mov
ror
inc
xchg
or
ins
sbb
dec
test
adc
lock
sbb
cmp
arpl
add
sbb
ja
mov
adc
mov
stos
mov
xor
loopne
das
js
pop
mov
push
movd
fild
mov
wrmsr
pop
xchg
xor
aaa
loope
xlat
add
add
mov
add
push
leave
sub
push
add
xlat
add
je
jns
sti
call
sti
fnstsw
sub
pop
push
fld
push
sbb
pop
xlat
fcomp
prefetcht2
je
add
ret
inc
xor
push
fcom
cmp
cmp
pop
aas
pop
test
popf
adc
loopne
adc
rol
dec
xlat
pusha
mov
int
loopne
adc
stos
pusha
inc
sbb
test
loope
pop
add
push
sub
ds
push
movs
inc
sub
xor
(bad)
push
pusha
aad
rcl
push
stos
shr
dec
test
push
les
jns
pop
mov
mov
stos
out
enter
imul
pop
push
fcomp
pop
pop
pop
pop
sub
jo
pcmpeqd
or
icebp
(bad)
pop
out
pusha
sbb
cmp
es
adc
adc
and
sbb
inc
sbb
ja
push
sbb
lods
sbb
test
or
test
pop
aas
or
out
sub
pop
test
les
sbb
mov
push
jl
iret
pop
aas
ss
or
mov
push
push
das
loopne
xor
sbb
imul
add
popa
xchg
cmp
dec
inc
cmps
dec
cmp
add
adc
jl
adc
(bad)
lds
pop
sbb
ret
mov
add
adc
sub
add
adc
push
sub
inc
fcmovnb
add
xchg
mov
mov
add
bound
xchg
lock
scas
in
push
test
dec
dec
loope
jmp
ret
sbb
xchg
hlt
push
sbb
pop
mov
arpl
cmp
ja
minps
mov
xchg
add
jle
ins
xor
movs
cmp
hlt
xchg
in
repnz
hlt
xchg
hlt
xchg
sub
scas
jl
hlt
xchg
daa
stc
sbb
movs
jmp
push
and
shl
je
aaa
cmps
pop
add
cwde
arpl
mov
add
gs
fs
sbb
and
aas
lock
cmp
sbb
xor
cwde
or
les
add
adc
jo
add
push
lock
ss
int
mov
cmp
add
(bad)
adc
mov
adc
arpl
call
addr16
mov
mov
push
test
mov
nop
add
push
mov
push
xor
or
or
push
xor
mov
es
mov
pop
inc
imul
push
inc
imul
cmp
imul
(bad)
push
dec
adc
movs
mov
add
stos
push
repnz
stos
mov
xchg
push
enter
fnstcw
aas
adc
je
out
sbb
inc
imul
in
inc
iret
clc
ins
pop
dec
das
push
cs
inc
mov
and
push
ror
imul
xchg
jmp
add
and
pusha
(bad)
mov
add
or
cmp
adc
rol
loop
stos
pusha
retf
adc
pop
sbb
lds
scas
pop
test
and
and
sbb
inc
loope
arpl
sbb
in
dec
loop
push
jecxz
jo
xchg
sub
dec
sub
pop
pop
inc
dec
xchg
aad
fild
jmp
(bad)
outs
iret
test
adc
outs
pop
fidiv
(bad)
mov
js
shr
sbb
icebp
cmp
pop
cmp
push
xor
sub
push
enter
pop
mov
ins
outs
pop
pop
mov
cmps
jo
mov
inc
adc
push
loope
(bad)
mov
pusha
push
xchg
lds
sub
sub
pop
loopne
idiv
push
jno
mov
out
pop
and
ds
push
push
pusha
repnz
iret
loopne
mov
push
loopne
mov
call
push
loopne
xor
xor
jns
add
adc
dec
movs
or
xchg
add
add
jb
inc
push
pusha
(bad)
pop
xchg
shr
adc
sub
add
(bad)
fsub
fdiv
mov
jnp
aam
retf
popf
sub
(bad)
pop
push
adc
je
into
repz
and
sub
nop
push
cmp
stos
out
pusha
les
dec
je
int3
jne
enter
or
or
loopne
ds
je
push
xchg
jns
test
or
das
jo
jo
cmp
push
bnd
lods
jae
shr
jne
fdiv
mov
add
inc
rcl
cdq
push
or
add
jbe
or
pop
mov
sahf
jbe
rcl
add
loope
movs
into
rol
cld
popf
mov
jbe
ja
ja
push
cld
or
pop
add
or
js
push
shl
int
sbb
loopne
cld
mov
retf
mov
scas
pop
aad
cli
xchg
mov
test
aam
adc
mov
sbb
fdiv
or
cmps
add
adc
test
pop
mov
outs
stos
push
mov
sub
sar
push
je
jp
sar
cmp
jp
sub
movd
or
out
(bad)
jnp
sbb
jmp
scas
add
arpl
jecxz
repnz
jecxz
jecxz
jp
cmp
jns
jecxz
jnp
das
jns
pop
and
popa
adc
shl
pop
and
test
daa
push
jl
xchg
or
sbb
jl
jl
jl
inc
rcr
pop
sub
mov
dec
pop
mov
jge
or
and
or
aas
adc
inc
pop
inc
add
pop
jo
mov
cmp
adc
sub
jo
retf
sub
cmp
inc
and
aad
out
and
sub
push
adc
outs
movs
outs
or
inc
aas
iret
adc
xor
test
xchg
jg
sub
or
inc
pop
push
sbb
push
iret
add
push
or
adc
adc
lods
add
jge
xor
fs
add
or
sar
and
repnz
push
sbb
call
scas
in
call
lock
clc
mov
adc
inc
sub
inc
and
aad
or
sbb
and
cmp
cmp
cld
sbb
das
mov
pop
dec
stc
aaa
pop
call
inc
out
inc
pop
ror
retf
retf
mov
sub
adc
dec
or
in
clc
add
sub
lock
int
or
xchg
add
inc
mov
out
pop
fst
and
xor
mov
test
les
pop
sub
sub
and
cwde
xor
jo
xor
mov
and
fist
ror
stos
aas
jns
rol
stos
push
mov
adc
mov
aad
inc
pusha
mov
ror
and
xchg
aas
mov
stos
mov
lock
inc
or
mov
shl
push
(bad)
pop
loopne
shl
push
(bad)
add
xor
xor
js
add
mov
cmp
push
or
and
dec
xchg
push
mov
dec
sub
or
jo
cwde
es
(bad)
inc
fbstp
repnz
mov
or
push
adc
push
sbb
inc
das
adc
dec
int3
or
cmp
int
mov
inc
das
pop
push
add
inc
pop
pop
sub
loope
inc
jae
push
jg
mov
add
or
(bad)
test
mov
xor
out
adc
pop
dec
pushf
mov
add
add
pop
sbb
mov
fist
mov
sbb
and
jmp
and
mov
outs
mov
xlat
ror
mov
(bad)
test
push
(bad)
iret
inc
wbinvd
ror
mov
das
adc
or
adc
pop
sbb
pop
and
cwde
mov
test
int3
lea
loopne
lea
mov
ret
scas
pop
in
mov
jb
push
pop
test
mov
pop
nop
das
scas
mov
and
ret
inc
sbb
dec
out
push
lods
jns
cmp
pop
out
dec
(bad)
adc
cmp
sbb
dec
inc
pop
adc
push
push
and
js
inc
pop
int
add
push
add
inc
mov
pop
mov
inc
popa
cmp
fist
nop
xchg
inc
push
dec
pusha
push
stc
mov
push
add
xchg
shl
xor
xor
(bad)
cli
push
pop
or
out
jnp
xchg
pop
daa
rol
out
adc
mov
push
sbb
pusha
shl
pop
movs
mov
jbe
std
inc
xchg
inc
fild
inc
cdq
add
cwde
sar
(bad)
or
div
push
adc
xchg
call
inc
imul
daa
mov
inc
dec
xchg
xor
jno
inc
pop
dec
loopne
push
mov
pop
mov
pop
fs
or
ins
addr16
repnz
add
test
push
xchg
add
or
movs
std
inc
nop
pop
scas
mov
dec
ja
js
sub
popf
push
imul
cmp
inc
outs
arpl
or
outs
adc
jmp
adc
outs
jb
or
outs
inc
and
shr
mul
pop
test
push
push
scas
jnp
jmp
pop
mov
mov
imul
aaa
neg
push
push
gs
sub
pusha
or
inc
push
mov
push
inc
jae
push
adc
cmp
test
loop
dec
ret
hlt
test
xchg
les
das
jo
out
outs
popa
fs
addr16
push
loopne
ret
ss
ins
jb
div
(bad)
clc
ret
push
dec
or
rcr
pop
leave
push
xor
inc
dec
jae
sbb
pop
rcl
outs
adc
cmp
mov
xchg
cmp
push
icebp
ss
mul
idiv
or
jo
push
fadd
arpl
adc
push
imul
dec
xchg
loop
and
in
repz
ss
xor
xchg
and
pop
shl
dec
pusha
data16
pop
xchg
push
ins
cwde
stos
cmp
mov
jb
pop
push
leave
xchg
sets
sub
dec
jo
mov
jbe
data16
push
mov
push
inc
push
sar
push
fadd
pusha
push
mov
neg
jnp
shr
enter
and
pushf
ds
mov
add
fisub
push
sbb
ret
xor
in
scas
dec
gs
loope
xchg
and
imul
dec
repz
inc
add
jo
jb
fild
push
push
and
inc
fidiv
dec
pop
xor
mov
and
fwait
call
xchg
cmps
push
cs
clc
(bad)
call
mov
inc
add
mov
jl
inc
imul
aaa
es
add
inc
nop
inc
mov
popa
cmp
mov
lock
pusha
lea
imul
loope
dec
dec
aaa
sbb
push
mov
arpl
mov
ror
lds
fs
push
sbb
mov
(bad)
mov
pop
scas
sub
xchg
call
les
js
pop
cdq
mov
leave
int
les
xor
fidiv
gs
call
jb
repz
cmp
pushf
cmp
pusha
popf
mov
jecxz
sahf
call
xchg
xchg
mov
pop
sahf
unpcklps
xchg
outs
out
jle
jb
xor
nop
fdivr
sbb
mov
inc
sahf
pushf
mov
daa
movs
jo
and
rcr
movs
adc
out
sub
adc
rcl
ret
jnp
push
jmp
pop
movs
leave
clc
cdq
sub
push
jp
les
outs
xor
adc
dec
imul
inc
or
inc
jae
mov
or
jecxz
stos
or
int3
jo
sbb
xchg
pop
nop
jae
and
and
outs
dec
mov
lock
adc
add
inc
jo
pusha
je
mov
xchg
retf
pop
sbb
xchg
add
cmp
sbb
push
add
sub
add
(bad)
into
imul
daa
jnp
adc
pop
sbb
cmc
or
add
lea
add
pop
outs
jecxz
in
jb
sub
lock
push
inc
mov
xchg
aas
inc
xor
cld
scas
pop
fldenv
(bad)
xor
movs
mov
xor
(bad)
loopne
xor
add
add
xchg
mov
data16
cmp
pop
mov
ret
add
mov
scas
rcl
and
dec
(bad)
rcr
adc
mov
cmp
add
push
or
dec
pusha
sub
xchg
ja
aaa
leave
inc
add
outs
aaa
adc
add
and
or
inc
movs
in
pusha
jnp
pop
mov
mov
and
push
xor
sbb
adc
cmp
test
and
and
cwde
inc
and
xor
(bad)
jo
add
lahf
fs
dec
push
push
dec
popa
ins
jg
in
test
fld
sbb
in
jmp
xor
outs
or
push
add
xchg
and
fld
cmp
xor
hlt
sbb
in
or
lock
jo
adc
and
add
or
into
jge
or
cs
push
fild
imul
jno
pop
int
jl
or
int
inc
sbb
push
fwait
rcr
mov
mov
or
push
jae
sbb
nop
arpl
mov
sti
mov
cmp
arpl
add
mov
rcl
and
and
jle
das
add
sahf
mov
push
mov
daa
popf
push
push
aad
adc
test
or
xlat
inc
push
xchg
loope
and
jo
(bad)
add
push
push
cmc
push
ins
and
test
and
pop
xchg
adc
dec
inc
rcl
push
popa
dec
push
sbb
paddb
sub
adc
scas
scas
pop
dec
xchg
and
pop
pop
sub
aad
push
add
sub
enter
mov
or
fidiv
adc
pop
add
sub
loopne
mov
pop
inc
mov
xor
aaa
test
pop
jg
adc
sbb
and
sub
sahf
adc
mov
inc
xlat
sbb
xor
add
add
inc
stos
dec
xchg
adc
or
int3
cmp
and
sbb
cmps
ins
aaa
or
mov
leave
jmp
mov
cmps
xor
mov
mov
and
popa
pop
dec
scas
pop
add
add
add
ins
mov
stos
ds
pop
dec
test
pop
push
ja
dec
add
pop
jl
and
jge
add
mov
pop
sbb
mov
push
in
mov
mov
popf
lock
jge
pop
in
sbb
in
mov
push
jmp
aaa
add
adc
mov
dec
push
cmp
or
test
call
or
loope
push
inc
iret
test
fld
mov
std
(bad)
fsubr
add
push
adc
call
mov
js
inc
ror
pop
inc
add
jmp
xor
je
jmp
mov
mov
or
xor
je
inc
push
jne
mov
or
or
outs
add
inc
inc
pop
push
add
(bad)
adc
test
sbb
test
fsubr
xchg
rcr
add
jl
adc
add
adc
call
test
mov
cmp
out
inc
not
jl
lds
pushf
mov
sbb
pop
pusha
sbb
inc
ins
inc
inc
ror
sbb
or
sbb
push
add
scas
ss
add
xchg
inc
xchg
cmp
jl
cmp
jg
push
cmp
jge
call
in
dec
retf
jl
addr16
inc
fbld
and
mov
add
add
sbb
xchg
out
cs
lea
and
sbb
mov
mov
sub
gs
add
mov
leave
cmps
cmp
adc
add
sbb
cmp
setne
ret
pcmpeqw
sub
pop
loopne
mov
mov
add
jmp
das
add
dec
pop
enter
sbb
inc
push
or
ins
dec
mov
fisttp
retf
clc
cmp
rcl
arpl
xchg
mov
pop
mov
push
adc
push
pop
xor
outs
xchg
or
fxam
or
gs
add
fcomp
lock
out
sub
lock
adc
into
sub
je
ror
jge
das
inc
call
lock
inc
daa
mov
fdivr
inc
add
(bad)
jno
fisttp
lock
dec
(bad)
ret
lock
mov
mov
or
pop
pop
pop
pop
cmp
inc
sbb
je
mov
out
nop
adc
je
mov
mov
inc
dec
jle
jg
fs
ret
mov
push
push
push
xchg
aam
sahf
clc
imul
mov
adc
pop
xchg
xchg
inc
inc
push
mov
div
adc
cmp
std
and
(bad)
sbb
dec
sar
mov
xchg
push
sbb
fdivr
lea
inc
and
jo
out
icebp
das
call
mov
mov
pop
jno
inc
pop
jne
addr16
jns
xchg
and
test
pusha
xchg
arpl
test
mov
rsm
or
lods
rol
push
(bad)
pop
sub
mov
jbe
neg
mov
shr
pop
test
je
cmp
or
shr
dec
dec
adc
xlat
adc
dec
jae
push
push
adc
icebp
jle
lods
xchg
test
and
push
push
or
jne
outs
jmp
repnz
cmc
mov
repnz
aas
mov
sahf
call
sbb
aam
adc
cmp
ja
push
dec
xchg
dec
add
mov
jge
retf
lods
xchg
cmp
jnp
xchg
sub
mov
sbb
and
cmp
adc
xor
xchg
or
inc
mov
pop
lea
(bad)
loope
repnz
nop
out
bound
adc
or
fild
push
or
ficomp
dec
call
mov
imul
inc
or
retf
or
push
or
push
ret
push
pop
sbb
push
in
dec
bound
and
rcl
call
sbb
jno
repnz
scas
inc
outs
pop
adc
shl
dec
pop
and
push
push
int
arpl
je
inc
imul
push
pop
lahf
retf
ins
(bad)
push
cs
xor
je
sbb
push
fnsave
push
mov
cmp
push
cmp
je
ins
jo
dec
test
scas
or
pop
adc
mov
mov
ins
sub
not
push
mov
cmp
jg
add
into
cmp
jne
cmp
fnstenv
adc
pop
mov
push
add
and
mov
mov
adc
add
xor
pushf
and
hlt
lock
ds
test
dec
cmp
test
mov
lock
popa
push
int
mov
dec
xor
gs
jb
add
nop
mov
clc
add
aam
fmulp
and
xchg
popa
in
gs
shl
and
add
pop
retf
mov
xor
xor
mov
add
mov
add
dec
jne
dec
dec
jne
daa
add
sub
xchg
lahf
push
push
cdq
std
aas
push
outs
adc
xchg
(bad)
mov
aam
jmp
into
loopne
mov
xor
adc
fimul
fdiv
cmp
inc
arpl
xchg
add
cmp
xchg
and
in
sbb
add
clc
int3
sub
stos
fisub
push
lods
mov
fdivr
ins
loop
repnz
js
mov
xor
aam
add
outs
mov
push
pusha
mov
sbb
shl
inc
sbb
ds
mov
adc
inc
xor
cs
cmp
mov
lock
pop
ror
int
scas
jp
fcmove
cmp
and
ss
push
xor
and
imul
and
add
add
dec
xchg
push
inc
sbb
adc
pop
mov
popa
lock
(bad)
lea
xchg
xor
dec
adc
pop
fnstsw
mov
sbb
loop
push
mov
cmp
retf
(bad)
fisubr
les
dec
fcom
and
cmp
mov
and
sub
aaa
pop
ss
adc
or
mov
push
aam
cmp
(bad)
sub
push
popa
cld
add
push
push
pop
in
pop
loop
push
inc
adc
popf
jne
adc
dec
xchg
mov
in
sub
outs
adc
or
mov
add
pop
or
and
and
loope
sub
cmp
push
nop
push
adc
ins
push
dec
adc
or
add
sub
sbb
add
loop
xchg
std
inc
pop
pop
lahf
xchg
add
sbb
jp
inc
mov
push
clc
mov
xor
cli
mov
inc
dec
add
test
inc
lock
dec
inc
mov
lock
dec
lods
ins
xchg
in
fisttp
and
fcomp
pop
push
inc
sbb
adc
shl
lea
ror
add
cmp
jne
stc
pop
clc
lea
mov
stc
int
cmp
fcmovnbe
and
adc
mov
aaa
and
add
test
outs
inc
cmp
add
pop
or
pcmpeqb
xor
or
mov
add
aas
jno
pushf
pop
push
outs
jne
out
jmp
pop
je
loopne
imul
pop
adc
dec
adc
mov
frstpm(287
test
js
(bad)
and
lock
and
add
sub
mov
inc
xchg
pop
add
or
mov
pop
sbb
add
pop
enter
mov
adc
or
pop
ffreep
fmul
xor
lahf
mov
xchg
inc
inc
jl
pop
xor
sub
or
inc
mov
push
je
mov
push
xchg
and
add
xor
mov
mov
inc
add
pop
out
fadd
inc
jo
cmp
jg
ror
push
and
pop
add
inc
xor
mov
es
mov
fisttp
pop
jp
je
sar
jl
mov
pop
lahf
jmp
aaa
daa
test
jge
xchg
mov
cmps
fisttp
cmps
xor
jl
je
mov
cmp
sub
add
daa
push
push
jno
cmp
das
mov
cmps
pop
pop
jne
xor
push
idiv
or
add
dec
sbb
add
hlt
adc
and
jge
div
cmp
je
(bad)
outs
mov
mov
cwde
test
adc
adc
rcr
adc
add
daa
call
test
and
sub
push
in
popa
out
mov
ret
sbb
ss
xor
jg
aad
js
push
xor
mov
out
mov
and
shl
add
push
(bad)
adc
das
lds
pusha
xor
je
xor
test
or
lock
or
les
mov
dec
push
adc
movs
clc
pop
cs
test
jno
dec
mov
mov
add
bound
(bad)
jmp
int
dec
pop
jl
rcl
lea
mov
daa
or
jl
in
push
and
mov
(bad)
adc
add
cmps
or
add
pop
sub
pop
rol
cdq
push
push
xor
jmp
push
and
cmp
mov
lea
cmp
movs
add
daa
sub
icebp
dec
rol
and
popa
mov
inc
cdq
idiv
inc
mov
or
shr
xor
(bad)
adc
mov
sbb
ret
push
xor
xor
and
mov
pusha
xor
add
xlat
pminub
retf
adc
and
cwde
inc
clc
lods
pop
sahf
adc
pop
sbb
adc
mov
in
clc
in
or
hlt
dec
pushf
(bad)
outs
mov
inc
push
loopne
push
xor
and
inc
fadd
pop
mov
dec
inc
and
movs
cmps
mov
and
scas
mov
sbb
mov
mov
or
push
pop
lds
push
add
les
repz
sub
push
add
inc
and
mov
mov
push
arpl
clc
mov
adc
sub
out
sbb
xor
cwde
jl
and
fist
add
dec
cmp
or
out
or
xchg
or
cmp
ret
push
gs
dec
cmp
lock
js
iret
mov
movs
mov
add
or
cwde
inc
push
ins
or
dec
xchg
xchg
(bad)
cli
lods
or
dec
rcl
pop
dec
ret
mov
pop
retf
sbb
movzx
scas
inc
xor
call
xchg
ficom
sub
(bad)
std
cs
jmp
dec
jne
cmp
or
js
enter
mov
daa
ret
sub
mov
xor
lahf
push
sbb
add
aas
mov
cmps
cmc
lea
cmp
cmp
std
add
and
aad
jb
push
add
scas
ins
jo
test
rcr
and
mov
inc
cld
sbb
dec
add
inc
popa
xor
call
cmp
dec
rcr
mov
(bad)
push
jmp
outs
adc
test
imul
mov
push
mov
or
or
cs
es
add
add
aaa
dec
mov
add
imul
pop
(bad)
pop
div
jae
dec
mov
inc
je
push
mov
jg
add
dec
je
js
test
sbb
xchg
or
adc
loopne
test
mov
sub
add
push
pop
or
pop
bound
ds
ret
pusha
cld
cmp
or
adc
mov
inc
mov
enter
mov
ds
inc
or
inc
xchg
inc
jbe
add
dec
outs
jne
mov
mov
cwde
cmps
inc
xor
jp
inc
imul
dec
daa
inc
imul
idiv
xor
bound
outs
gs
or
or
mov
jb
xchg
push
xchg
push
or
xchg
xor
mov
sbb
or
or
sti
or
xchg
loopne
jne
pop
inc
outs
outs
ins
scas
loopne
add
mov
(bad)
data16
ret
push
adc
inc
pop
pop
xor
ret
push
adc
and
and
inc
(bad)
movups
xor
cs
mov
dec
int3
in
inc
jmp
xor
pop
xchg
cmp
add
mov
ins
mov
push
inc
fs
test
fs
cdq
mov
add
addps
xchg
mov
inc
lock
add
xor
inc
push
inc
sbb
add
ins
sti
sub
addr16
add
ret
pop
arpl
pop
add
arpl
pop
div
mov
dec
mov
adc
inc
jne
outs
(bad)
mov
inc
or
das
or
or
sbb
(bad)
dec
lods
jne
ins
adc
sub
mov
xchg
adc
neg
les
fcomp
mov
push
and
bound
xor
dec
aaa
hlt
mov
jecxz
(bad)
icebp
outs
mov
cmp
cmp
js
xchg
push
mov
test
out
ror
in
repz
in
or
test
shr
pop
sahf
jnp
jnp
mov
fmul
jle
daa
push
js
jnp
repz
cwde
mov
test
fcomip
fidivr
hlt
push
sbb
cmp
pop
shl
icebp
adc
xor
add
shl
pop
jne
and
sbb
push
xchg
dec
stos
xchg
outs
js
pop
pop
das
push
sub
jo
pop
dec
jno
mov
das
enter
loop
fisttp
dec
and
ja
ret
push
jmp
jno
add
mov
jge
pop
retf
cmp
add
mov
xchg
into
cli
push
arpl
mov
loope
pop
(bad)
and
jno
adc
pop
loope
sub
dec
enter
xchg
ss
rcl
dec
cmp
movs
hlt
lahf
and
and
jns
arpl
inc
xor
add
sbb
inc
pusha
mov
enter
cmp
hlt
movs
hlt
loope
inc
and
add
inc
inc
clc
ficomp
jbe
ds
out
int
jecxz
pop
mov
les
mov
xor
jbe
pop
cmp
sbb
mov
add
xor
xchg
add
mov
push
pop
cwde
int
xor
push
mov
shr
ins
dec
pop
add
movs
sbb
xchg
xor
pop
ins
ins
popa
jo
pusha
ins
movs
ss
xchg
icebp
mov
adc
pop
inc
daa
mov
daa
inc
jge
scas
sbb
inc
mov
dec
js
push
jl
jae
in
sar
adc
push
gs
xchg
in
fbstp
or
popa
fs
mov
call
dec
mov
call
and
jne
mov
mov
pop
or
add
pop
sub
mov
sbb
ret
or
mov
add
add
ss
and
jecxz
xchg
sub
clc
jge
dec
in
stos
dec
ret
rol
sbb
lods
add
outs
jecxz
into
push
scas
adc
fcom
outs
loopne
cmc
add
je
jo
mov
and
push
pop
outs
lea
mov
mul
gs
jmp
push
pop
or
cmp
not
loope
inc
dec
sahf
mov
and
outs
jne
jns
pop
scas
adc
push
nop
add
out
xor
ins
imul
cmp
push
mov
aad
sub
pop
fild
nop
imul
mov
pop
or
push
cmps
mov
add
add
add
fld
je
cmp
push
cwde
add
sub
int
into
in
fcom
fdivr
lahf
xchg
mov
add
iret
xor
fnstcw
ja
movs
(bad)
das
icebp
inc
rcr
leave
in
in
das
shl
call
imul
loop
icebp
xor
cdq
(bad)
jb
jb
retf
rcr
idiv
gs
and
push
into
outs
data16
notrack
jmp
fwait
int
sub
adc
fsubr
js
inc
daa
scas
and
lods
fimul
(bad)
das
add
push
and
je
and
rol
rcl
rol
mov
sub
inc
jbe
pop
sbb
ror
out
ror
push
add
xor
sub
test
dec
and
out
push
mov
dec
imul
cmc
add
pop
test
lods
fs
and
or
aam
loop
imul
add
es
push
pop
in
pop
jae
das
adc
and
or
int3
jb
mov
or
scas
sub
push
push
xor
adc
loope
loopne
(bad)
fcom
outs
je
add
push
or
mov
and
or
je
scas
dec
pop
add
xor
cmp
push
movs
aad
lods
lock
mov
adc
pop
in
add
sub
stos
push
loope
(bad)
jae
dec
dec
adc
and
push
outs
jo
pushf
push
int
ret
fist
pop
ja
cs
inc
adc
sub
outs
jb
retf
add
enter
adc
je
sub
mov
mov
jecxz
inc
scas
fsub
push
lds
arpl
mov
xor
sub
jnp
ins
or
int
data16
je
scas
cmc
aas
js
mov
sub
pop
rcl
push
inc
ret
adc
or
ds
inc
add
pop
push
sub
sub
inc
mov
outs
mov
mov
mov
les
and
sub
arpl
jno
sbb
loop
xchg
(bad)
mov
adc
or
in
push
fdiv
and
cmp
sahf
add
cwde
mov
rol
pusha
iret
mov
or
dec
daa
inc
adc
sub
or
pusha
ds
daa
push
sar
mov
test
jno
mov
mov
or
fcomp
xchg
push
sub
adc
(bad)
jmp
shl
adc
xor
mov
bound
fcom
pop
in
push
aam
sub
pop
les
nop
(bad)
les
pop
rcr
lahf
movs
sbb
loope
lock
add
adc
daa
in
jbe
outs
repnz
and
adc
or
sahf
and
pop
dec
inc
inc
and
adc
sub
inc
mov
adc
cmp
mov
dec
adc
cmps
les
test
shl
jno
mov
test
bound
ficom
sbb
or
inc
adc
xor
rcl
inc
inc
cs
push
shr
jns
inc
inc
inc
cdq
mov
inc
inc
cs
dec
outs
xchg
inc
inc
inc
inc
mov
cld
pop
aad
inc
inc
cs
arpl
pop
cdq
sbb
xor
jb
stos
push
adc
dec
arpl
xor
lea
cld
sub
test
in
push
mov
js
nop
sub
xchg
ror
pop
mov
xchg
push
jo
or
test
mov
jo
ret
test
pop
pop
or
ret
es
or
xor
dec
test
pop
cld
xlat
push
jo
(bad)
out
dec
fadd
sub
push
sub
add
add
pusha
ds
cmps
in
enter
clc
dec
push
xchg
dec
push
stc
add
out
mov
pop
loopne
retf
mov
xlat
lds
pop
or
inc
or
adc
inc
imul
je
rol
inc
fdivr
lock
lods
aas
je
mov
or
sub
ja
pusha
push
jmpw
fld
pop
inc
retf
add
pop
mov
inc
inc
or
ret
call
(bad)
push
push
inc
pop
(bad)
cmp
fimul
fld
fld
popf
push
push
mov
aam
fisttp
into
das
out
lods
fmul
in
ror
jne
ds
mov
(bad)
enter
rol
add
push
dec
push
fst
enter
xchg
fiadd
cmp
sbb
push
mov
inc
sub
lar
arpl
xor
xchg
xor
nop
ja
lods
mov
pop
or
outs
jo
jo
mov
push
inc
retf
xor
aas
jp
fstp
movs
pop
jo
ret
pop
(bad)
cld
add
add
imul
(bad)
shl
js
inc
dec
adc
pop
push
mov
push
(bad)
out
xor
jae
sbb
not
mul
mov
pop
xchg
mov
adc
inc
push
inc
pop
(bad)
jae
mov
mov
bound
add
add
sti
cmp
xchg
lods
inc
inc
dec
jl
adc
cmp
jo
loopne
adc
ja
dec
rcr
cld
xlat
shl
mov
add
mov
push
add
jmp
or
and
in
fisubr
push
pop
or
mov
call
jnp
fst
mov
in
scas
dec
daa
push
ror
inc
lock
push
jle
mov
inc
pop
in
and
(bad)
in
sbb
es
call
dec
fistp
adc
or
in
mov
or
daa
add
std
push
jmp
push
pusha
or
and
ficomp
or
sbb
cmp
mov
pop
loop
adc
movs
xlat
pop
scas
in
rcr
es
pop
xor
push
dec
js
in
add
cmp
jnp
fisttp
loopne
lahf
cmp
(bad)
adc
sub
mov
inc
loopne
mov
div
jmp
fdivr
adc
pushf
fs
push
outs
ins
imul
add
(bad)
ins
add
lods
push
jnp
or
xchg
mov
mov
adc
test
stos
jbe
sbb
or
dec
js
mov
ds
imul
pop
fisub
ficom
add
and
adc
push
jl
nop
movs
adc
dec
cs
xor
leave
and
pop
xor
pop
pop
push
das
mov
mov
enter
add
fdiv
in
add
adc
cmp
ret
cmp
xor
pop
add
cmp
or
cmp
push
jb
add
pop
loope
dec
fdivr
or
jmp
sbb
loope
push
or
inc
mov
push
or
xor
inc
push
cld
sbb
andps
inc
ins
(bad)
xchg
sub
cwde
cmp
jo
mov
mov
push
pop
or
or
inc
ffree
or
inc
xchg
ja
(bad)
or
xchg
imul
outs
mov
loopne
or
xchg
cmp
sbb
add
pop
cmps
outs
imul
jg
jl
and
or
mov
(bad)
movs
or
or
cmp
sbb
and
push
add
sbb
(bad)
sbb
push
fild
int
in
test
add
out
mov
outs
mul
or
das
xor
mov
push
xchg
pushf
cld
push
test
add
push
push
jg
sbb
inc
sub
outs
push
test
add
adc
popa
push
(bad)
add
bnd
pop
jne
or
mov
sar
inc
cmp
xor
xchg
lea
ins
rcl
or
lods
call
movs
inc
stos
push
scas
add
cmp
cld
push
cmps
ins
add
push
aam
inc
cmp
gs
push
stc
ss
cmp
add
xchg
pop
or
or
add
movs
loop
or
or
icebp
adc
dec
push
ins
sbb
add
aaa
or
push
add
sub
cmp
hlt
push
sub
xchg
push
push
mul
add
jmp
js
xchg
(bad)
jns
rol
pop
enter
or
inc
and
add
shl
mov
inc
call
adc
jns
xchg
sbb
add
add
cdq
mov
es
dec
or
sbb
shl
out
sbb
sbb
push
jbe
(bad)
jp
call
je
push
or
jmp
fisttp
xchg
mov
fdiv
push
dec
das
cmp
gs
or
fld
mov
movs
jg
into
dec
add
nop
dec
sub
(bad)
cmp
ret
pushf
aam
add
retf
gs
mov
sbb
loope
syscall
gs
add
jnp
test
pop
jno
or
push
adc
test
dec
ret
inc
out
and
sub
test
add
stos
pop
or
sub
test
dec
pop
nop
mov
jns
setle
and
aas
ins
jnp
int3
and
or
and
jle
lods
jmp
and
adc
cmp
rcr
loope
push
and
add
or
cmp
sub
mov
or
push
pop
popf
add
sbb
ja
xchg
xor
adc
adc
mov
arpl
test
jle
inc
stos
inc
add
(bad)
dec
mov
pop
adc
add
fcom
dec
mov
aam
data16
pop
fdivr
clc
ret
test
sbb
fst
sbb
push
jbe
pop
xor
sub
fs
inc
sbb
repz
xchg
or
int3
clc
jl
addr16
out
lods
rcr
add
inc
(bad)
(bad)
mov
mov
shr
test
jne
mov
test
je
add
in
jns
add
add
mov
or
add
and
les
mov
adc
xchg
cmp
clc
push
rol
loopne
inc
sub
and
or
add
add
test
cmp
push
sbb
pop
add
mov
sahf
sbb
dec
(bad)
fstp
in
aaa
out
mov
sub
jge
add
sub
jb
or
je
push
je
push
sub
push
or
or
mov
push
inc
jge
sub
push
sub
call
sbb
pop
cmp
push
or
pop
xor
inc
ror
out
sar
js
mov
xor
and
and
inc
data16
jmp
sub
fldenv
arpl
sub
add
and
mov
push
or
pop
in
lock
lea
cmp
enter
xor
ds
int3
jmp
inc
cmp
cld
cmp
fcomip
cld
add
test
or
mov
ins
xchg
je
inc
push
or
xor
adc
lds
mov
xchg
ds
mov
or
mov
jmp
mov
jno
add
jecxz
aas
clc
push
push
cmp
pusha
mov
jge
popa
loopne
jecxz
sar
cwde
inc
repz
fadd
jle
mov
push
pop
adc
std
adc
jmp
sub
xchg
add
jne
and
enter
push
cwde
test
inc
mov
push
rcl
dec
enter
mov
mov
xor
xor
adc
(bad)
ficom
xchg
sbb
mov
out
shr
sbb
inc
jmp
jg
jb
mov
and
jmp
dec
sub
mov
fbld
add
mov
xor
out
or
jmp
inc
(bad)
sti
push
add
test
out
mov
pop
pop
dec
neg
push
divps
mov
cmp
jmp
mov
and
inc
pop
aaa
into
mov
ss
ret
cmps
test
xor
loop
mov
repz
or
push
adc
inc
cld
jg
and
adc
push
outs
lea
dec
jge
jne
cwde
lea
cmp
jg
cli
not
add
sbb
call
and
jmp
into
fninit
frstor
out
or
ret
inc
pop
jge
cmp
xchg
sbb
pop
lock
push
loope
(bad)
sbb
(bad)
sahf
push
jmp
cmp
jle
pop
sbb
fsubr
imul
(bad)
push
ret
sar
inc
hlt
sub
ss
jmp
cmp
push
rol
dec
nop
retf
ja
idiv
jmp
cmp
push
or
in
mov
aaa
add
pop
rcr
pop
dec
xlat
jge
jle
cmp
fist
push
mov
jmp
mov
adc
sub
call
lods
enter
aam
sub
scas
mov
mov
add
cmp
pop
dec
jmp
mov
pop
test
push
cmp
je
es
inc
push
pop
lods
mov
rcr
inc
loopne
or
jp
ins
ds
inc
sub
icebp
xor
pusha
add
rcr
fidivr
(bad)
push
in
stos
inc
inc
mov
cmp
je
ins
pusha
arpl
cld
dec
inc
(bad)
rol
in
rcr
mov
sti
jmp
dec
dec
js
inc
mov
iret
cmp
mov
mov
or
cmp
arpl
mov
pop
mov
pop
xor
dec
dec
adc
pop
cmps
rcr
popf
mov
ins
push
push
outs
and
dec
mov
mov
data16
dec
test
push
adc
sbb
ss
or
jbe
mov
pop
loopne
sbb
push
popf
aas
scas
call
and
cld
(bad)
cwde
fisttp
pop
(bad)
jg
pop
dec
push
sub
ror
bswap
sub
and
pop
pop
cmp
out
cmp
mov
cmp
inc
(bad)
add
(bad)
ins
xor
je
nop
dec
inc
inc
aas
sbb
cmp
inc
shr
sbb
mov
or
jmp
pushf
and
push
aam
dec
add
loope
sbb
dec
test
mov
inc
dec
add
inc
inc
add
dec
pop
ins
dec
add
mov
inc
lea
mov
dec
xchg
pop
nop
push
push
test
mov
mov
pop
or
inc
or
pusha
lods
mov
jno
add
shl
fadd
pop
mov
(bad)
mov
mov
les
sbb
sbb
push
push
mov
push
xor
stos
imul
add
pop
dec
jg
cmp
add
inc
sbb
mov
and
xor
(bad)
test
lea
ror
xor
sub
ss
pop
je
in
dec
aad
xchg
out
cmp
hlt
sbb
pop
ss
sub
add
pop
xchg
add
pusha
jns
add
fadd
out
mov
dec
mov
jo
dec
not
dec
call
xchg
cmp
and
inc
test
push
inc
or
bnd
arpl
xor
dec
mov
jmp
cmp
inc
mov
test
clc
jnp
jp
sbb
push
add
faddp
and
xchg
jne
push
push
mov
popa
inc
ins
ins
or
jae
xchg
push
or
pusha
cmp
jb
xor
cmp
jne
mov
jle
mov
xor
pop
adc
les
(bad)
adc
fmul
mov
or
shl
jge
mov
push
ror
pop
pop
cmp
dec
inc
stos
or
inc
pusha
lds
pop
je
mov
std
sub
je
push
xor
adc
jnp
sub
adc
pop
les
(bad)
inc
mov
mov
jg
mov
mov
push
dec
mov
adc
dec
push
or
neg
jns
mov
rcl
mov
inc
sahf
fstp
jns
mov
cwde
adc
jnp
inc
int3
movs
pop
or
es
xchg
dec
inc
movs
fcomp
popa
or
xchg
pusha
adc
sub
arpl
inc
xor
add
cmp
call
test
sbb
adc
inc
pop
cmps
std
or
fadd
add
and
or
call
push
in
xor
xor
sbb
push
mov
inc
mov
bound
sbb
call
pop
in
or
sub
add
sti
or
push
into
mov
lds
and
div
mov
and
les
xor
jg
es
adc
sub
lock
fisub
cmp
xor
mov
sbb
push
pop
pop
sbb
cli
sbb
xor
jno
aam
mov
add
je
(bad)
cli
push
cli
stos
loope
mov
jne
jmp
shl
mov
mov
ret
sbb
mov
ror
icebp
adc
and
test
test
pop
push
push
adc
call
je
pop
pop
mov
sbb
jne
ret
movs
or
pop
pop
add
dec
mov
std
call
(bad)
push
add
cmp
mov
jle
push
pop
idiv
inc
pop
test
jne
xor
stos
in
mov
dec
data16
push
dec
cmp
arpl
jae
iret
out
mov
push
ins
push
arpl
dec
or
inc
sbb
fsub
cmp
xchg
fnstcw
vpunpckhqdq
xor
cmp
jge
aas
daa
mov
jae
mov
mov
xchg
(bad)
sbb
inc
dec
jne
pop
shl
movs
jne
cdq
mov
jne
sub
or
or
pop
mov
ret
and
mov
sbb
cmp
(bad)
arpl
les
ror
and
pop
cld
and
add
push
callw
not
scas
push
int
outs
data16
jne
push
fs
sub
cmp
loopne
inc
sub
inc
sbb
pop
or
jnp
dec
(bad)
dec
xchg
rol
add
mov
jne
and
xor
jmp
mov
movs
and
std
add
add
or
add
es
fs
adc
cmp
jne
adc
dec
aas
mov
jne
mov
sub
mov
fnstcw
xor
or
pop
pusha
movs
push
cld
add
loopne
push
addr16
add
add
or
pushf
outs
cmps
rcr
popa
pop
sti
test
cs
jle
jmp
push
mov
push
das
sti
enter
xor
inc
add
mov
call
in
push
and
sbb
iret
xchg
mov
mov
jne
xchg
push
std
sbb
inc
push
xor
es
mov
addr16
shl
xchg
jge
sbb
adc
cmp
jne
push
mov
mov
adc
add
(bad)
fld
add
and
mov
lock
lock
ins
loopne
mov
push
bound
cmps
or
call
movs
sub
xchg
mov
in
push
pop
jmp
xchg
inc
clc
out
shl
jmpw
pop
jns
inc
outs
inc
(bad)
and
sbb
test
fucomi
mov
in
add
sbb
adc
ror
sub
shl
add
pop
leave
add
and
ret
add
jmp
xchg
mov
pop
sbb
js
pop
and
push
add
adc
fisttp
add
jae
xor
xchg
xor
adc
inc
push
in
push
inc
mov
fst
movs
mov
sub
adc
inc
fst
add
xchg
and
aaa
inc
or
jo
or
push
(bad)
mov
test
jne
adc
cwde
dec
push
pop
mov
hlt
(bad)
fsubr
inc
xor
mov
in
call
add
call
iret
push
clc
inc
dec
ror
setne
(bad)
pop
imul
sbb
xchg
ret
jg
adc
iret
and
add
retf
popa
scas
jbe
shl
fdiv
xchg
xchg
jmp
or
lea
xor
fsubr
jp
jo
mov
adc
push
mov
mov
aad
adc
adc
sbb
lock
xchg
or
push
fsubr
or
mov
sbb
jg
jmp
mov
xor
test
and
pop
pop
hlt
add
add
enter
pop
test
js
iret
add
add
and
hlt
pop
in
jmp
ror
dec
clc
push
popf
sub
push
int3
sub
sub
push
lea
lea
cmp
cmp
in
js
je
ds
pop
jl
aam
in
cmp
jle
sub
in
add
pop
cld
imul
inc
sbb
sbb
leave
je
(bad)
mov
jmp
sub
imul
sub
sar
jns
adc
icebp
inc
push
mov
cli
push
rcl
pop
ss
sbb
add
jge
ds
pop
inc
or
loopne
shl
sbb
or
fcomp
pusha
das
sbb
enter
icebp
neg
push
or
mov
sub
fsubr
sub
outs
jne
xchg
mov
rcl
pop
clc
jle
inc
iret
add
cs
shr
xchg
sub
and
pop
add
mov
retf
into
jle
fld
adc
mov
ins
mov
jge
mov
add
mov
or
js
xor
int3
stc
jl
fcomp
inc
push
push
pop
or
push
push
mov
push
add
push
movs
movs
int
add
mov
add
gs
jne
mov
add
add
jle
mov
add
jge
cs
mov
dec
mov
dec
in
jae
sub
add
inc
fisttp
jg
sub
xor
retf
add
cli
movs
push
push
mov
sub
ins
sbb
push
inc
enter
ror
loopne
mov
cmc
bound
add
add
rol
mov
dec
xor
ds
push
xchg
push
dec
out
xor
sub
jae
mov
sub
jno
ror
sbb
jge
and
xchg
add
aas
sbb
xchg
int3
mov
movs
mov
and
pushf
pop
rcl
mov
movs
daa
cmc
xchg
ret
in
dec
pop
(bad)
int
das
enter
enter
pop
fidiv
xor
scas
inc
mov
mov
imul
jmp
adc
push
clc
inc
or
ins
(bad)
jne
add
mov
(bad)
jl
or
jbe
push
inc
aad
or
or
mov
pop
test
(bad)
jl
or
loopne
lock
sub
push
push
push
arpl
add
sbb
pop
shr
mov
shl
mov
xor
adc
and
(bad)
iret
ret
cmp
ja
out
ja
mov
mov
loope
sub
add
add
imul
test
cmp
mov
mov
mov
mov
pop
or
add
cvtps2pd
lea
popa
rcr
loopne
scas
loopne
push
mov
iret
mov
sbb
sub
fcomp
inc
out
in
push
sbb
cmp
inc
test
inc
sub
push
stos
sub
popa
aaa
jge
sub
shr
ss
div
push
out
inc
clc
adc
data16
icebp
or
lds
sbb
jl
icebp
pusha
mov
adc
or
xor
add
fwait
cmp
addr16
sbb
add
ret
sbb
add
inc
mov
push
inc
call
or
test
lock
add
pop
sub
pop
std
in
je
outs
out
fisttp
int3
pop
out
rol
cmp
and
and
or
jmp
inc
adc
adc
xor
inc
or
mov
pop
dec
popa
adc
das
lds
hlt
sbb
adc
add
mov
mov
inc
outs
jns
inc
xchg
(bad)
adc
or
inc
mov
jmp
sub
mov
sub
cli
lods
mov
je
or
popa
push
push
or
mov
pop
bound
lock
leave
test
in
loopne
pop
add
adc
mov
sbb
icebp
mov
fist
pusha
xchg
push
add
ds
sti
(bad)
fdivr
loope
mov
pop
test
(bad)
jo
add
pop
mov
je
in
mov
inc
xor
mov
sbb
pop
je
scas
jo
sub
fwait
cs
xor
adc
aad
in
inc
or
push
jbe
dec
sbb
in
gs
clc
sahf
adc
add
in
clc
call
jnp
pop
sbb
cmp
mov
sbb
dec
(bad)
dec
mov
loopne
jmp
jnp
push
push
dec
movq
push
(bad)
xchg
dec
inc
xchg
dec
or
dec
push
sbb
leave
adc
dec
jge
sbb
inc
dec
mov
icebp
loopne
aam
add
add
xchg
lods
sbb
mov
push
adc
mov
lock
add
push
adc
mov
fwait
(bad)
adc
inc
mov
test
xchg
pop
xor
xchg
(bad)
in
jmp
xchg
mov
dec
xor
dec
(bad)
adc
dec
pop
loopne
rcl
inc
leave
pop
ret
mov
pop
jg
inc
or
js
xchg
and
pop
add
jo
push
(bad)
in
test
jno
sbb
clc
mov
sub
or
dec
mov
cmp
inc
add
shr
(bad)
das
mov
pop
add
ins
dec
and
lahf
or
push
sbb
iret
cmps
ss
in
pop
into
in
sbb
add
imul
sbb
mov
loopne
mov
dec
shl
mov
ins
xor
inc
ins
sbb
and
inc
cmp
pop
inc
xor
loopne
xchg
xor
in
out
push
pushf
add
jne
cmc
adc
sbb
pmullw
test
add
(bad)
enter
call
bound
in
inc
lods
inc
or
add
sbb
shr
test
movs
inc
mov
adc
test
gs
push
inc
xor
sub
push
test
and
adc
fstp
jne
inc
loopne
adc
mov
inc
ret
xor
dec
xlat
(bad)
lock
mov
inc
loop
or
push
(bad)
and
(bad)
shl
addr16
lock
push
adc
dec
and
inc
dec
and
mov
push
add
mov
add
xchg
cmp
mov
and
je
and
push
push
sub
xchg
jge
adc
sar
leave
mov
push
add
adc
jo
or
cmp
cmps
sbb
push
or
les
mov
in
pop
xlat
mov
stc
ja
test
jl
adc
jne
and
add
or
sub
inc
push
adc
imul
pushf
clc
dec
xor
push
sbb
mov
inc
mov
adc
arpl
call
and
xor
jno
jge
inc
rol
pop
nop
pusha
loope
call
add
loope
dec
loopne
jb
inc
dec
call
or
in
mov
dec
sbb
rol
sub
ret
xchg
sub
xchg
arpl
rol
inc
adc
adc
inc
(bad)
cdq
mov
sbb
dec
mov
or
and
iret
dec
dec
add
call
test
inc
xor
sub
add
in
jns
xor
in
pop
xchg
sub
lock
ret
out
daa
(bad)
les
or
inc
test
pushf
test
rol
push
inc
adc
imul
loop
push
mov
(bad)
jg
adc
outs
mov
push
nop
rcl
jg
adc
fisttp
cmpxchg8b
(bad)
into
inc
add
(bad)
push
les
cmp
pop
ds
adc
push
cmp
mov
mov
mov
and
sbb
inc
pop
mov
movs
popa
sub
jge
ins
inc
rcr
xor
adc
pop
fs
inc
xchg
cld
stos
jg
sbb
popa
cmp
pop
inc
retf
sbb
fadd
aad
push
dec
pop
push
push
adc
loopne
fadd
sub
mov
mov
xchg
mov
or
mov
int3
push
loop
xor
mov
repz
jno
out
and
or
dec
mov
pop
jmp
aas
adc
or
sti
test
adc
add
pop
aad
inc
dec
test
push
adc
jo
add
cmp
fdiv
sbb
call
pop
or
pop
push
lahf
xor
(bad)
clc
add
pushf
mov
add
(bad)
or
mov
xchg
in
mov
sbb
sbb
adc
outs
pushf
push
sbb
push
mov
or
das
lods
enter
mov
cwde
ret
movs
jg
adc
adc
or
cli
or
mov
jo
xor
dec
push
adc
aam
ret
or
push
push
lahf
dec
or
add
sbb
rcr
stos
cmp
rcr
inc
inc
lock
ds
mov
xchg
sub
inc
jg
inc
retf
push
xor
in
pop
add
rol
inc
stos
loopne
clc
push
aam
or
popa
mov
xor
xchg
push
ret
(bad)
lahf
loopne
addr16
and
call
adc
jmp
add
sbb
or
mov
in
push
push
push
add
push
pop
outs
sbb
sub
dec
mov
and
ins
mov
dec
cmps
pusha
xchg
dec
and
ret
arpl
cld
mov
add
add
inc
loopne
xor
lods
call
jne
lea
in
fdiv
daa
push
lods
fcmovnu
fcomp
mov
pop
adc
pop
add
push
add
push
ror
das
add
dec
adc
leave
mov
pop
push
hlt
aam
adc
pop
movsx
add
xchg
aam
(bad)
lock
sar
pop
cmp
pusha
(bad)
dec
xor
lds
sbb
addr16
pushf
mov
pop
pop
mov
mov
rcl
push
add
cmp
clc
mov
(bad)
xor
iret
loope
mov
pop
sbb
fild
int3
push
mov
aam
dec
in
mov
mov
xchg
in
inc
cdq
and
movs
and
push
lock
inc
adc
mov
jecxz
push
adc
push
push
inc
in
and
and
sub
push
mov
test
idiv
daa
push
or
mov
add
sub
adc
(bad)
js
jmp
je
pop
addr16
cmp
sub
sbb
sub
push
or
and
cmp
fdiv
jge
loope
jne
lods
xchg
or
out
jnp
fstp
in
or
or
jge
push
sub
add
pusha
inc
inc
dec
das
cmp
mov
and
push
and
mov
movs
xor
or
stc
mov
fninit
call
sbb
out
ja
push
or
lock
push
adc
loope
or
sahf
sub
jle
mov
out
xor
sahf
adc
enter
data16
add
shl
nop
xchg
push
xor
mov
mov
lock
add
rol
imul
add
mov
sbb
ret
ins
ror
xor
leave
cdq
ret
test
sub
int3
gs
jbe
add
cmps
add
nop
cmp
dec
ins
add
(bad)
ins
dec
jmp
(bad)
sti
add
lea
mov
push
and
dec
dec
mov
or
(bad)
mov
sub
jmp
rcl
or
cs
cmp
je
cmp
mov
dec
cmp
jne
call
(bad)
leave
shl
jmp
inc
jecxz
fdiv
stos
push
or
pushf
nop
mov
add
dec
and
sub
loopne
loope
mov
dec
or
adc
inc
sti
or
test
ror
mov
dec
inc
clc
lods
push
or
js
mov
jmp
add
and
addr16
and
cmp
je
(bad)
adc
(bad)
sbb
pop
sbb
test
ja
and
add
or
add
les
pop
mov
add
inc
adc
push
sbb
mov
(bad)
out
push
push
inc
or
cmp
mov
js
mov
das
push
cs
pop
iret
cmp
shl
or
xchg
pop
stos
sar
dec
dec
xor
push
dec
cs
dec
add
adc
add
or
adc
and
ret
pmaxub
mov
jge
xor
cmp
jg
adc
cmp
je
lock
jo
rcl
mov
cwde
outs
dec
stos
cmp
out
int
add
sbb
dec
and
inc
xor
add
pop
mov
add
inc
ret
jb
add
ret
dec
inc
sub
jg
(bad)
leave
clc
clc
inc
je
pop
cmp
adc
retf
inc
jl
fisub
retf
pop
arpl
pop
mov
inc
cmps
inc
fisub
and
mov
js
rcr
sbb
fst
inc
je
mov
(bad)
call
jl
jnp
push
xor
or
jle
cmp
jge
loope
sbb
inc
dec
jbe
and
push
and
fldln2
jmp
retf
mov
inc
shr
sbb
neg
bound
pop
sbb
and
jmp
sete
xchg
xchg
cmp
pop
in
pop
je
add
popa
dec
fdivr
and
adc
cmp
mov
jnp
xchg
or
test
jnp
in
jbe
mov
jp
sbb
cmp
and
sub
cmp
xchg
dec
fiadd
add
mul
mov
and
push
je
inc
push
cmp
sbb
jmp
test
jne
out
adc
or
or
sbb
push
(bad)
(bad)
popf
push
arpl
jl
jo
xor
adc
mov
enter
and
inc
mov
into
adc
xchg
call
repnz
jmp
ret
push
sub
or
push
test
add
lods
movs
xlat
inc
add
inc
cmp
xchg
aaa
adc
js
xchg
test
jecxz
xchg
nop
cmp
sub
sbb
shl
retf
add
jno
or
add
fsubp
mov
mov
jcxz
and
iret
mov
fst
adc
add
xor
icebp
push
add
dec
ror
mov
adc
test
adc
dec
shr
(bad)
mov
out
icebp
frstor
call
cmp
pop
add
mov
mov
fwait
je
inc
sbb
ror
push
xchg
nop
jg
push
nop
popa
outs
xor
lock
and
mov
adc
(bad)
fld
sar
xlat
jo
cmp
xor
ret
and
xchg
pop
mov
jg
mov
aaa
mov
ins
imul
cmp
loop
and
ss
shr
loop
mov
push
movs
push
fsub
mov
popa
(bad)
pop
nop
or
std
mov
push
push
mov
ja
push
cmp
inc
imul
xchg
mov
lods
lods
or
mov
or
jo
ss
enter
jno
and
ss
cmp
clc
xor
pusha
xor
fs
(bad)
cld
xchg
bswap
and
xor
test
sub
pushf
gs
or
pop
test
pop
addr16
(bad)
fiadd
data16
xchg
movzx
dec
add
add
mov
mov
fisttp
rol
xchg
mov
push
adc
lahf
clc
dec
jecxz
cs
xor
mov
and
push
(bad)
mov
cmc
adc
push
and
aas
sub
cmp
leave
inc
jb
inc
inc
jb
pop
and
or
inc
out
or
and
(bad)
push
dec
fdiv
pop
push
pusha
in
int
rcl
fs
sbb
dec
nop
mov
int
inc
inc
push
lock
add
inc
and
test
cmc
fs
and
inc
mov
stos
mov
enter
or
cmp
jmp
cmp
jne
xchg
pop
mov
push
movs
or
dec
or
(bad)
mov
sahf
mov
rcr
sbb
and
ja
fmul
cmp
ins
pusha
outs
into
adc
pop
add
jl
das
stos
sbb
xchg
rcr
js
pop
test
or
xchg
dec
add
xor
inc
jbe
nop
adc
jb
and
fild
pop
dec
add
hlt
ret
jns
push
cmp
dec
lea
sbb
xor
mov
je
mov
push
(bad)
sub
mov
inc
cmp
nop
scas
aad
mov
mov
dec
push
int3
add
imul
and
or
cmp
inc
xchg
push
cmp
sub
xchg
adc
in
and
inc
inc
sub
fwait
jb
rol
push
sbb
ficom
push
and
push
inc
xchg
cmp
mov
pop
mov
paddsb
in
add
ja
sahf
mov
xor
ret
loop
js
es
sbb
jo
int3
hlt
xchg
inc
add
pcmpeqw
add
aaa
add
test
test
jmp
adc
xor
inc
mov
movs
cmp
mov
jbe
lea
in
retf
sub
idiv
inc
jle
mov
push
pop
rcl
sbb
push
push
rcl
mov
push
or
adc
push
ins
call
or
mov
inc
or
and
imul
add
sub
sub
or
pop
xchg
dec
stos
test
fistp
mov
xor
in
fdivr
mov
paddd
mov
sub
mov
adc
add
ja
adc
sbb
lods
movs
pop
aas
add
ret
add
dec
rcl
sub
rep
xor
cli
sbb
dec
enter
add
sbb
rol
retf
sar
(bad)
push
push
sbb
jmp
daa
dec
cmp
sti
pusha
inc
jnp
cmp
or
jp
lea
adc
cmp
sti
test
stc
pusha
nop
jne
dec
jl
scas
dec
push
popa
dec
inc
clc
aam
xor
push
inc
outs
add
jmp
add
push
sbb
pop
mov
dec
sti
rol
rcl
inc
les
rcr
stos
loop
test
enter
jg
pop
loop
inc
fdiv
mov
adc
jl
nop
jo
ja
aas
push
aam
clc
mov
dec
pop
gs
ins
pop
ins
es
pusha
mov
dec
sbb
in
or
xor
das
ss
je
(bad)
cmp
jb
xor
mov
jbe
loopne
ret
add
mov
idiv
pop
xlat
mov
pusha
daa
je
mov
add
nop
psubd
dec
sbb
jmp
push
es
add
dec
sbb
enter
push
adc
js
das
dec
jbe
mov
jmp
inc
fisttp
fmul
mov
dec
ror
push
dec
sub
leave
fcmovnbe
xchg
inc
jo
outs
and
pop
idiv
pop
add
push
mov
cmp
or
pop
fdiv
adc
pusha
mov
sar
mov
xlat
sub
into
int
cmp
das
mov
aad
ret
clc
setg
sbb
retf
xor
add
xor
mov
inc
jne
shr
push
mov
sbb
mov
sbb
push
mov
ins
xor
sub
lea
xchg
and
and
icebp
ret
frstor
xor
push
test
pop
cmps
loop
jo
push
dec
mov
sbb
fsubr
add
into
data16
or
das
shr
adc
out
and
pop
lods
dec
xor
inc
movs
jmp
rcl
outs
lock
sar
rcr
ror
add
or
leave
imul
outs
or
mov
scas
aam
pop
pushf
pop
and
fwait
(bad)
sub
jl
imul
rol
sbb
arpl
mov
mov
inc
rol
jmp
mov
mov
pop
sbb
in
je
cmp
and
mov
call
mov
add
pop
jne
mul
or
fsub
and
fcmovb
outs
fdivr
dec
jnp
sti
adc
jg
inc
jne
xchg
adc
xchg
pop
(bad)
fisttp
dec
dec
mov
inc
cmp
jne
mov
xor
je
clts
inc
and
outs
or
jns
aam
adc
dec
pop
dec
and
nop
and
iret
sub
dec
push
jb
or
dec
std
sbb
in
scas
jae
mov
loope
add
jl
jne
movs
stc
jae
repz
hlt
mov
iret
mov
ret
out
sbb
or
inc
sub
sbb
mov
or
inc
popf
imul
push
test
sub
in
jb
inc
xlat
test
mov
add
inc
cwde
push
aaa
xor
jbe
push
clc
dec
sbb
or
inc
mov
push
adc
push
xchg
xchg
sbb
daa
add
jno
xor
aas
xchg
sub
cmp
je
sub
or
sub
pusha
sbb
mov
mov
push
jmp
outs
jnp
outs
and
call
mov
leave
cs
mov
pop
add
push
test
jl
cmp
cld
xor
pmuludq
dec
call
out
aas
dec
mov
mov
pop
push
push
arpl
or
test
pop
push
push
mov
hlt
stos
mov
mov
aam
add
xor
cmp
sub
dec
push
push
sub
inc
lea
call
pop
pop
clc
jmp
adc
das
xchg
jmp
and
cmc
pop
or
pusha
mov
fsubr
(bad)
pop
pop
mov
jmp
pop
mov
jns
push
clc
mov
ins
or
ja
mov
test
push
dec
add
ror
adc
add
rcr
(bad)
mov
pop
es
mov
adc
je
mov
cmp
xor
push
cmp
sbb
sbb
and
in
jne
add
push
add
sbb
mov
mov
mov
ret
call
add
fucomp
sub
sbb
and
push
ror
add
xchg
or
dec
mov
scas
dec
cld
push
push
test
imul
(bad)
(bad)
mov
or
push
inc
dec
xchg
push
add
push
mov
push
arpl
gs
push
ret
add
outs
add
aam
test
cmp
dec
out
add
aaa
fcom
out
add
mov
(bad)
loopne
sbb
sbb
pop
cmp
fld
or
cwde
sub
(bad)
lock
ret
mov
add
mov
call
aaa
xor
cld
iret
out
push
clc
sub
retf
cld
mov
mov
rol
or
lea
push
shl
out
push
ror
rol
push
clc
sar
xchg
or
inc
sub
add
adc
push
add
xchg
mov
ret
inc
mov
test
cmp
mov
jo
pop
and
dec
push
loope
clc
sar
faddp
and
sub
sub
add
faddp
cmp
dec
je
outs
sub
jb
dec
add
sub
dec
cs
bound
popa
cmps
and
dec
adc
push
jne
jae
pop
aas
or
add
jnp
sar
inc
add
gs
xchg
hlt
fdivr
push
inc
ja
push
fdivr
outs
adc
loopne
sbb
jle
movs
lds
push
mov
and
mov
cmp
mov
je
xlat
mov
mov
mov
jg
pusha
xlat
cmc
out
lea
add
jbe
mov
outs
cs
popf
jg
aaa
mov
adc
inc
test
add
dec
mov
adc
movs
inc
or
mov
aaa
fndisi(8087
cmp
pop
rcl
adc
lea
inc
jecxz
push
xor
and
and
imul
sub
push
add
dec
in
out
xor
pop
pop
aaa
sbb
mov
or
test
cmp
xchg
push
push
cli
mov
in
inc
mov
test
adc
add
mov
add
addr16
pushf
popa
jo
adc
test
dec
div
popa
es
call
jbe
xchg
inc
and
test
scas
pop
cmps
add
fcom
dec
sbb
shl
shl
jns
loope
sub
jecxz
mov
add
aam
push
add
mov
cmp
(bad)
fcmovnb
xchg
icebp
or
int3
(bad)
rol
sbb
xchg
xor
xor
hlt
or
shr
pop
cmps
add
je
xchg
inc
mov
xor
clc
mov
cli
mov
mov
cmc
rcl
dec
xchg
clc
imul
xor
arpl
fild
addr16
mov
leave
out
pushf
in
in
sub
repz
call
popa
add
jmp
aad
aad
lods
dec
sahf
dec
ret
cmp
xor
test
ror
icebp
xor
add
inc
mov
mov
mov
sar
and
aaa
mov
or
mov
cmps
outs
jle
or
je
pusha
adc
and
ins
cmp
sbb
inc
cmp
push
ins
out
push
(bad)
sti
jg
jmp
inc
mov
loopne
lea
push
pop
mov
out
mov
lahf
add
or
mov
imul
inc
clc
or
push
lods
push
push
cmp
lea
cld
inc
add
sub
div
cmp
les
xchg
sub
sar
je
push
hlt
(bad)
js
inc
loopne
cld
sti
push
into
sti
mov
cmp
mov
mov
dec
add
pop
mov
jle
pop
outs
rcr
mov
ret
add
cli
enter
es
inc
add
arpl
sbb
cs
add
or
pop
int3
sub
mov
push
mov
sbb
test
ins
xchg
add
push
sbb
pusha
aaa
rcr
jecxz
add
adc
in
test
mov
shl
add
ret
mov
ret
pop
cmp
je
mov
jecxz
xor
(bad)
in
inc
add
inc
cmp
adc
mov
pushf
dec
and
test
jb
mov
sbb
ds
jmp
xor
pop
mov
(bad)
pop
mov
xor
xor
dec
int
iret
cmps
loopne
aas
xchg
mov
xchg
cmp
js
hlt
push
cmp
js
clc
mov
cmp
cdq
pop
jl
xchg
pop
push
sbb
cmp
pop
aaa
aad
test
inc
rol
pop
ret
pop
mov
(bad)
lea
add
inc
sbb
adc
pop
cmp
jne
mov
adc
or
lods
lock
mov
xchg
outs
adc
jmp
adc
and
or
dec
fdiv
fldenv
mov
js
stos
push
jae
sbb
ja
push
cwde
or
cmp
ins
mov
adc
xchg
fsubr
(bad)
shr
(bad)
ret
sbb
ror
mov
xchg
arpl
sbb
scas
adc
xor
push
data16
pushw
cmp
dec
sub
and
adc
inc
pop
and
ret
add
sub
push
(bad)
in
or
(bad)
out
sbb
fsubr
sub
test
inc
ret
cmp
cmp
jge
jge
dec
sub
or
dec
xchg
scas
inc
pop
add
sub
test
add
mov
rcr
hlt
pop
xchg
adc
mov
mov
dec
in
or
fist
add
mov
xchg
scas
or
xor
ret
fmul
rcr
or
in
fimul
push
les
out
outs
fdivp
inc
sub
aam
jae
or
bound
push
and
xlat
cwde
jmp
sub
mov
or
stos
jmp
sbb
mov
add
adc
or
add
jbe
icebp
mov
adc
inc
dec
jne
cli
data16
and
cmp
mov
cmp
and
test
popa
and
sub
xor
pop
add
add
sbb
adc
add
mov
push
js
loope
sbb
adc
adc
xchg
push
cmp
outs
sbb
pop
xor
and
shl
fdivr
push
push
push
xchg
rcl
inc
push
cmp
jne
inc
popa
shl
inc
pushf
push
sub
mov
lock
mov
data16
aas
fild
out
and
dec
push
loop
mov
pop
jp
test
icebp
pusha
push
movups
adc
cmp
rol
jg
inc
mov
ss
aam
push
jle
and
sub
test
inc
sbb
ret
mov
jno
add
dec
addr16
dec
add
push
or
pop
sub
inc
inc
adc
stos
inc
push
xchg
or
test
sahf
loop
xchg
add
pop
test
inc
test
dec
push
ins
mov
add
sbb
pop
mov
push
and
mov
xchg
rol
je
clc
cmp
pop
cmp
xor
arpl
pop
push
adc
inc
sbb
jae
ja
loopne
or
sub
lods
test
mov
xor
mov
nop
ss
cmp
mov
test
or
dec
or
ja
dec
scas
pop
and
rol
xchg
mov
iret
add
movs
push
jbe
mov
cmps
mov
jo
jl
inc
adc
cli
mov
xor
pop
or
add
movs
push
mov
(bad)
std
ror
sub
and
aad
push
sbb
pop
pop
xlat
lock
das
adc
and
mov
mov
adc
hlt
jl
or
cwde
or
mov
imul
and
adc
and
mov
ja
cmp
push
out
push
push
scas
(bad)
adc
xchg
xor
sbb
push
cld
test
mov
popa
xchg
mov
adc
enter
test
nop
push
push
cmp
ss
push
in
add
nop
or
mov
push
daa
adc
cmp
adc
sub
sub
je
inc
jno
das
adc
jmp
adc
pop
ins
test
mov
add
ja
pop
lods
xor
mov
inc
xor
pop
scas
mov
push
ins
loop
test
std
mov
je
add
call
pop
inc
jle
pop
and
ss
inc
add
pusha
add
dec
add
cmp
pop
cmc
(bad)
jnp
and
(bad)
or
cmp
and
or
and
sub
shr
sbb
mov
mov
daa
push
fdivr
inc
or
adc
dec
hlt
jmp
and
push
rcl
or
xor
test
inc
or
jge
les
ins
sbb
les
je
mov
mov
push
mov
mov
in
not
cmp
or
sbb
mov
mov
add
aam
add
les
adc
lods
aam
add
ret
fdiv
daa
adc
xlat
push
push
sbb
inc
sub
pushf
sbb
add
xchg
cmp
in
loopne
and
xchg
mov
sti
mov
inc
and
lock
adc
lea
xor
int
pushf
xor
mov
rcr
mov
mov
aaa
ficomp
push
pop
push
movs
inc
call
xchg
sbb
dec
xchg
add
push
int
loop
add
adc
sub
(bad)
sbb
cmp
imul
xor
inc
cmp
hlt
loopne
and
lock
dec
or
pop
dec
sar
xor
adc
adc
cmps
xchg
pop
push
jge
ja
loop
cmp
push
xchg
and
in
pop
cmp
mov
cmps
push
xor
dec
in
cmps
sub
push
sub
sub
add
out
sub
(bad)
sbb
lahf
sbb
jmp
jbe
dec
aam
xlat
les
mov
adc
and
and
loope
repz
mov
push
push
push
lock
mov
inc
adc
inc
test
(bad)
ret
cwde
clc
xor
loop
push
push
mov
ret
sti
rcr
mov
inc
dec
jne
inc
ins
rol
mov
lahf
add
das
js
add
or
jno
push
rol
inc
cmp
sbb
cdq
sbb
sub
les
or
xchg
mov
les
js
call
icebp
sbb
ucomiss
push
ret
fcom
cmps
and
xor
mov
fld
popf
jmp
or
and
mov
cmp
inc
xchg
lahf
movs
cwde
sub
dec
loop
sbb
mov
pop
pusha
sar
dec
mov
and
xchg
ret
scas
add
push
imul
movs
xor
mov
mov
jmp
pushf
or
rol
inc
inc
ret
adc
inc
(bad)
in
inc
arpl
int
mov
aad
fiadd
movs
add
in
push
cld
fucomip
pop
mov
or
sbb
shl
or
push
or
cmp
jecxz
push
push
add
gs
or
test
adc
add
iret
and
rol
dec
and
or
out
mov
pop
ins
inc
pop
mov
lahf
inc
inc
test
aam
icebp
faddp
and
sbb
js
imul
sbb
and
inc
(bad)
mov
xchg
jp
cli
ret
ret
or
jb
icebp
jle
test
(bad)
mov
je
pushf
add
ds
mov
jge
inc
sar
hlt
sbb
inc
inc
dec
push
xor
in
xor
sbb
pop
push
push
push
pop
jmp
adc
loope
ret
mov
idiv
sub
cs
ja
lea
(bad)
inc
inc
dec
adc
mov
dec
es
(bad)
stos
ins
cmp
jle
cmp
add
or
adc
jne
or
hlt
sub
hlt
setge
into
mov
or
cld
sub
in
xchg
scas
sub
sub
dec
push
push
cwde
pop
push
jp
or
and
dec
mov
aad
test
push
sbb
pop
mov
mov
mov
jle
push
jbe
aas
mov
sub
mov
jecxz
pop
call
push
pop
and
popf
std
int
lds
ret
dec
jl
inc
pop
je
stos
je
and
pop
leave
adc
inc
xchg
jge
out
adc
clc
leave
push
or
jo
iret
pop
pop
lock
sbb
push
pop
fcmovu
mov
sbb
jne
cmp
nop
dec
inc
adc
mov
movs
mov
(bad)
pop
pop
add
or
fistp
push
enter
rol
jbe
lahf
xchg
out
in
push
lods
mov
sbb
adc
pop
inc
test
lea
inc
adc
push
sbb
cmp
enter
mov
xor
ds
sub
mov
out
test
les
sbb
in
cmp
jae
outs
ja
push
jl
fs
jp
sbb
pop
inc
cld
cmps
jne
push
mov
mov
adc
add
scas
and
fwait
mov
cmp
inc
sub
adc
xchg
xor
adc
neg
pop
fxch
pop
pop
outs
cmps
mov
add
sbb
jl
fadd
dec
jmp
nop
push
mov
adc
pop
push
and
in
stos
cmp
movups
pop
cld
adc
adc
adc
outs
push
adc
in
add
inc
ret
push
popa
jb
mov
sub
sbb
cwde
adc
gs
sbb
icebp
je
enter
sti
cmps
jnp
lock
imul
and
pop
out
or
das
or
das
push
xchg
push
xor
sahf
and
(bad)
cmp
or
ret
push
sub
fld
adc
popa
jl
xchg
jo
jns
inc
(bad)
push
nop
scas
sub
sub
ret
sti
push
test
jb
popa
sbb
xchg
retf
mov
push
sahf
out
jbe
push
push
xor
cmp
inc
pop
pop
daa
add
push
dec
push
std
mov
adc
aaa
and
outs
or
mov
or
jle
js
ds
cmp
xchg
imul
enter
bound
sub
outs
cmps
xor
xor
shl
mov
mov
adc
dec
in
test
adc
sbb
adc
xor
sbb
sbb
push
sub
or
sbb
inc
and
sbb
inc
push
movs
xor
sub
sbb
loopne
mov
cmp
inc
shr
xor
fild
shr
and
jp
pop
mov
pop
inc
adc
push
add
push
jle
test
pop
add
gs
cwde
dec
clc
pop
arpl
ins
push
and
sti
jo
push
inc
cwde
xchg
rol
adc
bound
arpl
sbb
add
push
xor
xchg
fst
fisub
gs
xchg
inc
pop
shl
outs
pop
push
jae
mov
ins
add
pop
pop
adc
push
cmps
inc
sub
(bad)
nop
xchg
xchg
add
push
push
arpl
fcom
and
pop
stos
mov
or
bound
enter
mov
ins
or
push
mov
imul
ins
movs
jge
and
fcom
(bad)
outs
stos
out
add
arpl
add
jg
cld
iret
sbb
pop
cmp
jecxz
clc
or
hlt
jne
ror
push
je
jae
xchg
loope
test
pushf
fs
inc
addr16
dec
imul
push
dec
(bad)
pusha
xchg
pop
mov
pusha
in
in
jmp
dec
pop
fs
in
out
mov
or
pop
in
inc
xchg
mov
add
inc
add
inc
int3
stos
gs
retf
mov
or
inc
push
clc
xchg
nop
out
xor
test
xchg
push
outs
jae
and
xor
push
cmp
push
pop
test
inc
mov
clc
pop
or
sub
inc
jno
and
jb
imul
sbb
sti
test
sub
ja
popa
jecxz
push
sub
call
and
jl
add
and
inc
lds
and
lea
sub
fwait
aad
push
or
call
mov
adc
aaa
inc
fucom
test
sub
in
push
pop
mov
inc
imul
or
cmp
stc
dec
gs
dec
and
and
jo
jb
push
pop
adc
xor
push
stos
xor
std
in
sbb
cmp
add
add
or
lds
adc
ins
dec
or
and
in
mov
repnz
jae
jne
mov
cwde
jmp
adc
add
adc
dec
or
movs
loop
mov
lods
mov
jg
dec
dec
(bad)
mov
jno
inc
mov
test
or
js
sbb
out
dec
xor
aas
and
push
dec
jo
push
inc
loope
loopne
inc
inc
sbb
aaa
test
mov
pop
inc
push
add
pop
sar
adc
add
mov
xchg
adc
xor
mov
cmp
and
add
push
inc
call
call
mov
loopne
sbb
mov
(bad)
call
fcmovb
(bad)
xadd
cmp
mov
add
mov
xchg
xchg
xchg
scas
shl
sbb
xchg
xchg
xchg
cmp
jge
pop
mov
xchg
mov
ret
scas
aad
imul
push
ins
popa
add
test
test
and
or
lods
push
ss
daa
push
ins
inc
imul
dec
push
sahf
out
ins
cmp
or
inc
sub
push
daa
push
mov
mov
push
fcomp
inc
add
push
or
pop
inc
push
inc
pop
imul
leave
or
sti
pop
and
mov
cmp
push
std
pop
(bad)
(bad)
fild
cwde
fwait
push
push
push
ss
fistp
sbb
push
dec
push
cmp
nop
push
push
scas
push
ins
int
(bad)
push
cmps
or
mov
ds
cmps
mov
fcomp
add
adc
cwde
push
enter
cld
sti
xor
ins
(bad)
jo
cs
sbb
and
pop
jle
cmps
stc
mov
inc
xchg
mov
fwait
call
push
sbb
test
into
push
test
xor
mov
pop
loope
add
push
pop
nop
mov
inc
gs
jnp
or
xor
push
or
cs
cwde
push
push
inc
mov
jp
sub
inc
sahf
push
ins
mov
push
mov
movs
push
adc
pop
gs
test
pop
add
push
fiadd
sub
push
stos
xchg
ins
(bad)
cmp
prefetch
add
pop
adc
adc
push
push
(bad)
in
(bad)
mov
mov
pop
js
ficomp
mov
data16
adc
or
cs
ins
pop
add
and
sbb
push
fwait
adc
adc
sbb
cmp
pop
das
and
add
cmovne
rol
dec
push
lods
or
dec
outs
cli
gs
mov
ret
jle
mov
xchg
pop
sub
cmps
dec
pop
ficom
lahf
bound
and
not
push
adc
pop
add
or
or
dec
outs
scas
test
pop
shl
mov
adc
js
mov
sar
sbb
adc
or
pop
in
(bad)
fmul
xchg
add
stos
or
sbb
add
outs
sahf
adc
ins
or
mov
call
jae
mov
fimul
or
cmp
sti
mov
xor
outs
addr16
mov
xchg
ins
push
outs
jmp
pop
daa
out
fisttp
xlat
jecxz
mov
add
and
or
ret
mov
imul
movs
sbb
out
mov
das
mov
imul
xor
outs
outs
or
sub
cmp
add
inc
cmp
scas
cmp
or
xchg
push
pushw
or
and
fs
test
pop
add
mov
mov
and
or
fwait
cwde
pushf
add
stc
xchg
push
out
and
add
outs
sar
and
or
or
or
icebp
enter
inc
ror
retfw
or
dec
inc
dec
mov
xor
pop
or
push
je
sbb
outs
and
sti
ret
or
pop
push
sbb
or
ret
outs
lahf
xchg
adc
dec
adc
data16
ins
jns
and
ret
je
xchg
and
scas
gs
cdq
std
pop
pop
pop
jge
data16
jo
add
and
jge
or
and
andps
dec
dec
fucomi
or
stc
sar
fs
(bad)
leave
jp
push
inc
mov
or
int
adc
sti
pushf
fadd
or
inc
(bad)
mov
cmp
dec
lock
xor
sbb
js
jb
inc
or
pop
adc
je
jo
xor
inc
arpl
dec
ins
xor
cmps
dec
pushf
xor
or
push
push
adc
dec
pusha
retf
outs
adc
sbb
push
ins
ja
dec
or
shr
nop
jmp
or
push
je
jb
mov
push
retf
adc
push
pop
or
cdq
inc
fs
stos
sbb
push
mov
push
inc
jb
test
push
add
aas
mov
outs
sbb
push
jne
jns
dec
push
mov
xor
dec
daa
add
adc
popa
(bad)
pop
mov
fisttp
cmp
cld
jne
loopne
add
cmp
or
and
ror
add
add
jno
jno
rcl
ficomp
or
pop
sub
inc
adc
fs
lods
push
cwde
popa
dec
adc
push
mov
jae
test
fmul
or
push
xchg
(bad)
add
or
jmp
push
push
push
dec
dec
gs
pop
push
shl
xchg
sahf
jae
shl
rcl
sub
retf
imul
mul
inc
push
nop
mov
xor
or
sti
loope
pop
in
or
jbe
dec
outs
mov
ins
pop
xor
pop
cwde
in
cmp
xchg
js
adc
and
imul
mov
cmp
or
jo
cmps
sub
scas
or
or
pop
jbe
push
or
push
dec
adc
lock
mov
jbe
jne
mov
add
jne
cmps
ror
clc
retf
pop
es
jg
mov
ins
mov
data16
pop
out
jmp
jne
inc
or
pop
mov
jl
inc
dec
xchg
imul
rol
fwait
sbb
gs
and
jae
les
pop
adc
pop
pop
add
inc
or
pop
pop
mov
aas
dec
or
inc
jbe
test
jbe
pop
inc
dec
jl
mov
add
adc
add
mov
adc
sbb
in
shl
cmp
add
fsubr
mov
(bad)
add
push
pop
js
jge
dec
mov
jae
push
xchg
or
dec
xor
push
pop
leave
cmp
inc
(bad)
sysret
xlat
push
sub
and
es
hlt
int3
pop
fild
xchg
push
lea
inc
mov
add
mov
adc
in
into
leave
xchg
ror
mov
add
cwde
sbb
xchg
sbb
aas
add
push
in
dec
push
pop
xlat
(bad)
jl
aas
add
adc
stc
pop
xchg
outs
inc
ins
mov
ja
xlat
jbe
stc
pop
inc
data16
sub
or
loop
icebp
cmp
in
xor
push
js
nop
jns
xor
mov
push
mov
dec
cmp
je
add
pop
aas
rol
jge
lahf
cs
cwde
inc
pop
add
or
mov
(bad)
in
cvtps2pd
jmp
adc
add
je
ins
imul
add
aas
scas
cmp
push
pop
aas
test
pop
and
jnp
jbe
les
es
pop
aas
rcl
xchg
xchg
push
fwait
mov
or
aam
xchg
cmp
pop
aas
lock
ja
pop
cmp
mov
xchg
ja
ins
mov
push
lods
or
or
push
idiv
xor
test
xchg
cmp
push
push
dec
sub
lds
int3
call
test
sbb
lock
push
add
add
ret
xchg
hlt
mov
sti
pop
jmp
retf
outs
or
and
xor
and
stos
sub
sbb
add
hlt
mov
or
scas
mov
out
dec
cmp
das
ins
push
inc
movs
adc
xor
jecxz
shl
jge
jno
mov
push
add
popa
adc
push
or
cmp
cmps
ret
add
dec
sbb
rol
popf
adc
pop
shl
(bad)
loop
(bad)
or
icebp
sahf
imul
mov
(bad)
sub
jmp
sbb
push
aaa
lahf
call
stos
call
lock
fcom
push
add
aam
mov
js
sbb
inc
dec
mov
adc
out
bound
or
add
test
and
or
mov
adc
ror
in
std
xchg
call
inc
jae
ret
in
mov
outs
arpl
in
push
mov
(bad)
mov
sbb
hlt
adc
clc
push
or
std
pusha
cld
and
sub
test
add
inc
gs
mov
add
adc
dec
imul
mov
ins
push
jmp
cmp
xor
add
fs
rcl
cmp
dec
or
out
cmp
sbb
test
sbb
inc
inc
sahf
not
sbb
or
add
pushf
xlat
mov
shl
inc
mov
cmp
pop
jmp
pop
jb
mov
fst
test
fidivr
and
in
adc
icebp
sub
and
mov
push
and
popf
lock
in
imul
lahf
loopne
add
mov
add
jo
or
pop
adc
inc
pop
adc
sbb
frstor
(bad)
js
add
dec
bound
fisttp
pusha
jae
xor
lods
lock
fnstenv
movs
add
sbb
pop
rol
(bad)
rcl
mov
das
mov
outs
popa
ror
lock
rcl
es
mov
leave
mov
aaa
fidiv
pop
adc
inc
pop
jmp
out
addr16
sub
into
shl
cmp
adc
stc
movs
add
and
imul
mov
xor
push
inc
cmps
lods
add
test
pop
mov
xor
cmp
(bad)
inc
in
mov
cld
dec
test
test
arpl
jmp
mov
bnd
in
test
(bad)
mov
sub
ficomp
pop
shl
das
pop
xchg
dec
xor
mov
xchg
xchg
retf
(bad)
sti
psubd
inc
lods
test
add
mov
jmp
mov
add
add
add
cmp
mov
xchg
repnz
add
add
adc
push
and
loop
or
add
add
(bad)
(bad)
(bad)
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
inc
mov
mov
mov
mov
jmp
stos
repnz
jmp
jmp
jmp
dec
push
cs
mov
stos
jmp
dec
shl
lock
ret
push
dec
fwait
iret
repz
push
mov
push
lahf
out
xor
xchg
sbb
aam
push
lods
or
push
or
inc
out
or
cld
push
xor
push
jo
(bad)
cmp
cmp
sub
cmps
push
loopne
xor
cmp
push
(bad)
in
pop
push
sahf
add
in
pop
fisub
push
fild
jnp
pop
ins
push
pop
and
ror
movs
push
sbb
mov
ss
ds
sahf
inc
push
test
cmp
mov
push
cld
adc
adc
push
sbb
lods
les
adc
cmp
pop
xor
push
fstp
les
into
call
or
push
hlt
cmps
test
or
dec
and
inc
cmps
push
loopne
and
sub
adc
jmp
or
dec
push
cld
lds
ins
ins
jns
mov
add
shl
jl
loopne
pop
outs
jae
dec
sub
pop
pop
dec
or
inc
addr16
ins
push
aas
pop
push
add
maskmovq
not
(bad)
xchg
enter
inc
jge
inc
ret
sbb
pop
mov
mov
lock
or
ffreep
sar
arpl
ret
imul
aam
push
imul
lds
mov
cmp
sub
add
loope
dec
inc
mov
dec
or
ja
jno
dec
or
mov
cmps
fdiv
push
and
lods
xor
inc
stos
cmp
push
movs
inc
adc
stos
and
inc
into
ins
jns
xor
pop
bound
or
and
and
push
adc
rcl
ins
push
adc
rol
enter
dec
aaa
or
add
inc
push
adc
jae
int
mov
popf
push
or
in
popf
arpl
aam
ds
inc
jp
inc
imul
dec
outs
fs
xor
push
mov
jbe
pop
(bad)
out
or
arpl
retf
push
jmp
and
adc
test
mov
add
lods
loope
call
add
and
cmp
push
loopne
dec
add
popa
and
add
mov
mov
nop
das
pop
cmps
je
sbb
adc
sbb
pop
jmp
adc
bound
xchg
sbb
jecxz
xor
adc
add
inc
pop
lds
cmp
das
mov
and
pop
inc
in
test
ins
mov
add
pop
mov
pop
inc
ins
sbb
mov
xchg
xchg
pushf
mov
xchg
xchg
xchg
das
push
jno
retf
xchg
xchg
xchg
mov
xchg
xchg
xchg
xchg
inc
imul
mov
xchg
xchg
xchg
data16
outs
add
jmp
mov
sub
cld
push
int3
sub
or
dec
mov
in
dec
and
xchg
pop
in
xor
dec
jno
mov
jnp
sub
loopne
out
pop
xor
add
out
cmp
movs
shl
repz
or
jne
sbb
lods
sub
js
aam
and
mov
push
test
adc
test
or
test
inc
add
test
adc
pop
loop
dec
mov
mov
cwde
or
mov
sbb
inc
in
or
or
scas
or
mov
in
ins
adc
pushf
dec
sar
int3
sbb
mov
repz
es
sub
lds
dec
jmp
xor
(bad)
fsub
ds
cs
sub
push
sub
pop
mov
cmp
(bad)
or
dec
jmp
cmp
add
and
dec
adc
test
sbb
inc
mov
aam
mov
sbb
pop
ins
or
sahf
inc
jmp
das
pop
adc
or
call
les
fidiv
dec
push
inc
xor
jbe
jno
xchg
inc
push
add
xabort
call
mov
dec
inc
ficomp
fmul
add
jns
jae
stos
add
ror
add
shr
pop
mov
inc
dec
add
adc
dec
fs
pusha
mov
ja
inc
pop
mov
jne
bound
mov
xchg
push
imul
shr
addr16
pushf
mov
daa
dec
sub
cmps
and
jae
mov
retf
xchg
adc
xor
jo
arpl
imul
push
enter
and
cmps
xor
std
xchg
cs
fistp
loop
sbb
add
adc
in
les
jmp
dec
es
xchg
shl
lock
mov
movs
sti
push
push
test
inc
outs
outs
jb
mov
call
lea
scas
dec
adc
xor
sub
es
sbb
or
cmp
mov
nop
mov
bound
mov
jmp
and
dec
dec
adc
imul
lock
xor
or
push
dec
push
dec
pusha
add
mov
mov
jmp
std
and
pop
adc
add
shr
dec
cwde
and
jg
das
test
dec
and
aas
cwde
jo
fwait
dec
xor
pushf
pop
mov
mov
hlt
xor
adc
push
push
cmp
cmp
pop
add
push
and
sbb
fldcw
mov
and
push
pushf
inc
call
fisttp
inc
je
xor
mov
xchg
out
push
jae
xchg
jo
and
or
sub
push
idiv
or
and
add
xor
jb
pop
ret
inc
sbb
pop
pushf
push
sub
push
std
or
xor
fs
dec
sbb
cwde
fwait
(bad)
fwait
jmp
dec
adc
sub
sbb
push
lock
push
xor
pop
sub
js
clc
mov
add
pop
mov
push
das
add
push
sub
or
xor
or
cwde
in
and
add
rol
mov
scas
repz
push
inc
add
rcl
push
jne
mov
shl
rcl
inc
xchg
mov
fcmovbe
dec
xor
add
and
jo
pop
xor
lock
cli
int3
ins
push
jp
add
inc
fst
popa
fs
adc
repnz
jmp
cmc
aaa
sbb
imul
or
les
(bad)
sbb
add
mov
cmp
xlat
mov
cwde
sub
test
pusha
dec
fnstsw
cli
fisubr
cwde
dec
cmp
pop
pushf
mov
cmp
mov
cmp
xchg
xor
sbb
shl
addr16
push
jno
ret
inc
xor
push
arpl
in
hlt
xchg
sub
stos
sbb
sbb
cdq
push
out
fist
adc
dec
ficomp
fist
jns
or
jl
sbb
dec
mov
and
push
add
or
xor
in
mov
add
jmp
pop
imul
mov
imul
jbe
ss
inc
adc
sbb
ror
dec
mov
push
in
xchg
gs
fadd
in
xchg
lods
mov
aas
and
dec
add
mov
pop
dec
dec
pop
call
add
or
inc
(bad)
les
push
jnp
arpl
out
stc
dec
sbb
outs
ins
push
cmp
sub
pop
xchg
and
test
les
inc
mov
call
mov
jae
or
lock
or
inc
push
or
inc
test
mov
enter
inc
cmc
dec
sar
gs
pop
xor
xor
ss
pop
bound
push
pop
sti
sbb
xor
mov
mov
jno
loopne
or
xchg
iret
mov
jmp
push
add
xor
loope
xlat
and
xlat
and
inc
push
add
xor
mov
inc
adc
mov
bound
dec
sbb
sbb
cmp
test
or
jno
mov
addr16
int3
test
dec
lock
dec
pop
loope
in
adc
or
pop
mov
cmp
mov
ds
lock
inc
add
pushf
call
fst
shr
or
xchg
rcr
xor
inc
or
push
sar
cmovno
outs
loop
pop
inc
call
mov
cmp
cmp
pop
sbb
bound
hlt
inc
and
in
ds
inc
pop
add
sahf
mov
jae
dec
push
dec
pusha
add
mov
mov
pop
aam
inc
test
add
mov
loope
dec
hlt
ror
rcl
pop
add
push
sub
pusha
fdivr
or
loop
pushf
add
push
inc
inc
inc
dec
adc
dec
cmps
jbe
and
jnp
cmp
(bad)
out
pop
xor
loopne
pusha
repnz
add
into
js
inc
rcl
loope
mov
ror
data16
pop
dec
xor
dec
je
stos
dec
rcl
stc
bound
imul
stos
push
dec
inc
aam
pop
push
mov
cmp
js
in
mov
sub
dec
ins
add
jae
jecxz
popf
xchg
dec
shr
mov
mov
xor
sbb
or
mov
push
push
add
ret
push
push
inc
push
add
mov
lods
cmp
arpl
in
ror
enter
pop
mov
enter
pop
or
and
and
jb
xchg
and
and
and
and
push
jns
mov
jecxz
xchg
es
and
and
ins
(bad)
mov
pop
and
sti
sbb
xchg
xchg
xchg
mov
retf
add
xchg
xchg
xchg
xchg
mov
(bad)
xchg
xchg
xchg
retf
and
xchg
xchg
xchg
scas
iret
cmc
sbb
sub
addr16
mov
in
cdq
sub
enter
cmps
retf
push
cdq
loop
call
fs
fs
pop
and
adc
fs
jb
cli
and
fs
mov
das
test
add
or
mov
xchg
lar
leave
and
push
push
push
inc
pop
dec
sbb
or
adc
scas
sub
lock
add
dec
mov
jmp
fbld
ret
lahf
popf
and
jo
lds
jnp
add
mov
mov
aaa
ins
push
jp
mov
jns
repnz
popa
lds
add
mov
pop
pop
or
push
cmp
mov
push
les
xchg
inc
add
push
xor
sbb
test
smsw
inc
shl
iret
js
cmc
or
clc
mov
push
mov
pop
jo
je
add
xlat
adc
lods
ins
movs
scas
xchg
or
sub
movs
xor
stos
(bad)
cmp
and
pop
int
add
sub
imul
and
xor
inc
test
data16
ins
movs
pop
cmps
enter
cmp
dec
cmps
add
sub
dec
jne
cmps
push
fld
arpl
xchg
push
push
fwait
pop
pop
and
or
into
add
movs
sbb
stc
jle
add
sbb
sbb
test
and
add
sbb
arpl
or
add
adc
inc
or
or
push
mov
cmp
sub
inc
sbb
stos
lock
inc
movs
sbb
sbb
fs
dec
fsub
adc
jl
pop
push
popa
cdq
mov
push
sub
or
cmp
push
push
shl
cwde
mov
push
mov
push
test
(bad)
fmul
push
das
xchg
sbb
icebp
adc
test
xchg
mov
icebp
jecxz
mov
add
clc
push
jmp
mov
ins
sbb
add
and
sar
cmp
ins
cmps
jle
or
sub
loopne
push
sub
xor
imul
mov
push
jbe
inc
stos
das
shr
aas
pop
js
jno
inc
adc
mov
loopne
aaa
dec
inc
jg
pop
and
push
inc
jecxz
push
add
add
inc
ret
push
xchg
jae
or
inc
mov
cs
dec
inc
add
rep
sub
js
rol
add
pushf
fcom
test
pop
and
or
pop
xor
mov
xchg
push
mov
sbb
lods
clc
movs
adc
push
mov
cld
ins
add
xchg
or
leave
sbb
hlt
push
sub
fwait
pop
inc
shl
adc
mov
jl
adc
adc
prefetch
test
push
popa
jbe
aaa
int
lock
pop
pushf
mov
add
sub
and
sub
mov
cwde
push
fild
mov
or
pushf
icebp
lock
mov
rcr
mov
cmp
sahf
sub
adc
test
or
xor
xor
and
pop
xor
and
imul
adc
mov
fistp
mov
or
push
stos
dec
mul
cmp
in
in
lods
sub
cmovs
jns
jb
int
scas
adc
(bad)
xchg
or
in
fsubr
dec
pop
js
ins
push
loop
xor
inc
sbb
add
push
in
out
push
sub
dec
or
push
push
cmp
adc
data16
fadd
pop
jmp
pushf
in
add
pop
xor
mov
lods
push
jmp
pop
out
stos
xor
js
retf
test
pop
jae
rol
add
dec
mov
loopne
aad
inc
inc
jnp
add
pop
pop
(bad)
popa
push
mov
dec
cmp
out
push
cmp
add
push
lods
test
test
or
mov
push
dec
outs
jno
shl
pop
shl
aas
add
test
cmp
cld
xor
dec
sar
sbb
mov
push
ins
mov
jp
cmp
imul
jno
jo
pop
fisubr
imul
add
jne
fsub
and
mov
pop
fs
fisttp
sbb
mov
in
push
mov
sbb
sbb
arpl
sbb
std
and
dec
je
sbb
sbb
mov
ja
mov
sub
dec
jb
mov
jmp
add
inc
pop
lods
jb
add
sar
or
adc
xor
or
sbb
push
or
push
mov
sub
popf
cwde
jge
pop
dec
adc
adc
adc
and
inc
jbe
bound
setae
pop
popf
or
pop
hlt
inc
adc
inc
(bad)
push
lods
xor
and
dec
and
push
mov
push
mov
bswap
cmp
cmp
aad
sar
lods
sub
jbe
mov
and
cdq
aaa
mov
movs
xor
dec
inc
ja
rcr
sub
fwait
aad
mov
or
cmp
dec
scas
xchg
and
mov
jne
push
dec
push
inc
nop
push
test
ins
dec
xchg
sbb
dec
or
and
mov
inc
cmp
dec
inc
dec
mov
push
xchg
pop
mov
inc
jns
xchg
dec
sbb
jmp
or
(bad)
jmp
add
mov
jecxz
arpl
or
cmps
add
retf
xchg
aaa
fimul
adc
je
outs
jl
in
mov
add
or
in
mov
lods
in
add
es
push
sub
or
mov
loopne
test
test
jp
mov
jmp
mov
call
sbb
dec
and
xchg
add
sbb
push
je
mov
out
les
pop
test
rcr
push
cmp
div
outs
sbb
add
mov
xchg
mov
inc
add
jmp
mov
popa
xchg
sbb
in
and
sub
xor
push
mov
sub
pop
outs
in
or
inc
sub
xchg
ds
movs
inc
add
push
sub
sub
add
mov
adc
lock
mov
or
add
push
fst
or
pushf
and
inc
gs
mov
retf
test
add
xchg
(bad)
or
adc
mov
and
or
fs
aad
stos
fisttp
push
outs
jmp
inc
add
sub
adc
imul
add
inc
dec
loope
jae
scas
push
push
push
mov
push
dec
push
inc
popa
test
or
inc
int
dec
enter
pushf
or
pop
imul
and
stos
std
pushf
mov
test
xor
addr16
pop
lahf
adc
sbb
daa
or
shl
out
mov
add
cs
cmc
xor
ret
fstp
dec
push
or
xchg
loopne
or
into
push
scas
or
adc
add
add
sbb
fdivr
cmp
ret
pusha
pop
adc
or
aas
dec
mov
pushf
shld
fsub
add
sbb
mov
cmp
jo
ret
cs
scas
sbb
bound
outs
inc
push
dec
add
add
pusha
fisttp
movs
add
xor
ins
add
dec
sahf
xor
mov
xor
dec
dec
dec
xor
sub
imul
ror
push
mov
(bad)
mov
popf
iret
jecxz
bound
push
adc
test
inc
mov
push
pusha
out
fmul
mov
int3
sbb
sbb
dec
pop
or
aaa
dec
lods
mov
mov
sbb
push
or
mov
or
mov
mov
mov
cmp
cld
into
push
mov
mov
das
sub
sub
jo
adc
xor
add
loop
sti
cwde
loop
add
pushf
fsubr
and
lock
in
js
lock
dec
les
dec
jmp
(bad)
push
aam
ds
pop
inc
xlat
or
in
fwait
into
or
fidiv
pop
mov
test
(bad)
sub
loope
xchg
jg
dec
imul
movs
loopne
test
mov
idiv
pop
aaa
or
lock
ins
or
xchg
sbb
pop
or
inc
mov
outs
dec
xor
add
je
xor
pop
cmp
(bad)
adc
mov
jno
imul
enter
mov
clc
je
das
test
jg
adc
adc
popa
jne
fwait
or
mov
in
inc
popa
int3
pop
pop
inc
jae
lock
(bad)
xchg
leave
xor
stos
push
add
aas
sub
or
add
test
and
popf
in
and
ret
lock
mov
movs
outs
cmp
push
cs
adc
add
mov
push
outs
jo
jae
mov
push
cmps
pop
lods
xchg
das
mov
popa
mov
sbb
and
lahf
mov
leave
pop
pop
outs
or
push
mov
outs
popa
inc
inc
sbb
add
(bad)
mov
add
lods
cs
pop
jae
mov
(bad)
loopne
pop
bound
iret
fild
xor
pop
push
or
in
jne
outs
add
sti
jae
int3
add
pop
ret
rcl
mov
call
add
aam
jge
add
pop
outs
jg
rol
sbb
add
ret
gs
popa
xor
pop
test
loopne
mov
sub
xchg
imul
pushf
fcom
mov
bound
xchg
addr16
sub
cmp
add
dec
mov
sbb
ins
and
mov
jae
adc
jmp
jnp
movs
sub
rol
pop
in
add
addr16
aaa
and
or
mov
adc
pop
ret
xor
push
lods
jle
add
stos
sbb
jo
(bad)
jne
fmul
adc
(bad)
aaa
mov
inc
cmp
mov
popf
jne
clc
jns
adc
inc
gs
enter
xchg
inc
sbb
cmp
sbb
loopne
and
xor
movs
out
fld
pop
sub
scas
aas
sti
sahf
fwait
adc
or
jmp
add
add
in
push
push
fs
and
sbb
test
xchg
retf
xchg
fdiv
pop
popa
dec
push
mov
and
js
shl
fbstp
add
add
jbe
adc
mov
jmp
push
arpl
pop
xchg
pop
nop
xchg
stos
dec
ret
aad
add
jl
adc
add
ret
push
outs
imul
jae
enter
xchg
jae
dec
xor
outs
outs
mov
lds
daa
daa
daa
and
mov
xchg
xchg
xchg
daa
sbb
jo
leave
leave
enter
enter
in
leave
leave
sar
leave
(bad)
xcrypt-cbc
cmps
xchg
xchg
daa
daa
iret
and
pop
enter
xchg
mov
leave
leave
leave
cmp
fs
inc
push
in
repnz
pop
sbb
jb
int3
add
cmp
sahf
adc
or
sbb
jmp
mov
xor
ins
mov
ror
xor
fiadd
ret
add
or
sub
jmp
jmp
mov
xor
movs
lds
xor
mov
push
dec
mov
fwait
in
push
and
clc
into
imul
push
inc
out
dec
pusha
mov
pop
add
es
outs
xlat
pushf
inc
add
mov
or
fs
sub
ins
sub
dec
imul
push
mov
push
(bad)
cmp
push
add
cwde
es
inc
jne
push
or
and
cmp
jl
cmp
gs
mov
inc
sub
cmp
pusha
adc
inc
loopne
in
dec
popa
cmp
loope
xchg
add
adc
and
adc
cmp
push
mov
sbb
add
or
test
idiv
mov
jb
push
dec
mov
mov
push
pop
std
add
inc
loopne
mov
mov
jp
icebp
arpl
and
cmp
mov
adc
arpl
popa
popa
push
rcl
add
in
pop
ja
jne
jo
fs
dec
pop
push
inc
dec
inc
out
ss
adc
ja
jb
jne
dec
loope
sub
aaa
xor
and
mov
and
dec
sub
add
popa
pop
inc
lgs
gs
js
fsubr
add
inc
shl
adc
cmp
fmul
or
test
rcl
loopne
push
nop
sti
fiadd
add
jne
leave
jbe
or
jns
mov
ss
inc
mov
ins
jne
test
add
lea
scas
pop
fwait
xor
and
sub
sub
test
inc
in
xchg
mov
dec
gs
sub
jge
xchg
out
inc
mov
push
xchg
pop
adc
xor
sbb
jae
nop
ja
add
popa
es
or
xchg
xor
lahf
jae
popa
addr16
inc
pushf
mov
movzx
add
stos
out
ret
inc
movs
movs
jg
pop
adc
shl
lods
ror
stos
mov
scas
pop
add
cmp
pop
mov
add
jo
pop
or
add
xchg
mov
test
shl
rcl
fs
adc
push
not
dec
not
jnp
xchg
sub
fmul
test
and
mov
in
call
aas
xor
cmp
ins
mov
and
push
add
mov
sbb
and
dec
and
inc
push
pop
mov
inc
outs
js
push
cwde
fcom
push
test
mov
add
sbb
adc
push
repz
and
mov
shl
shl
xor
ror
xor
xor
mov
cmp
rcr
pop
sbb
in
adc
sbb
sbb
dec
sbb
sbb
cmc
and
fs
fs
fs
aad
push
fs
sar
fs
and
dec
outs
xchg
in
fs
xor
push
jp
(bad)
fs
fs
fdiv
xor
and
cdq
add
and
(bad)
fcomp
adc
pop
sub
xor
push
adc
call
or
xor
push
aaa
call
mov
and
xchg
nop
pop
xchg
lds
lods
(bad)
test
mov
lock
inc
cmp
sar
test
and
inc
xchg
pop
jecxz
sar
adc
dec
or
pushf
push
stos
leave
dec
(bad)
jmp
outs
pop
dec
mov
bound
pop
add
aam
dec
cdq
jns
add
dec
jns
add
cs
mov
cmps
add
adc
push
pushf
add
pop
dec
jo
jg
loopne
daa
jns
mov
fwait
add
add
xchg
call
xor
call
shl
adc
adc
sub
and
or
xor
sub
fstp
test
add
sbb
push
cmp
test
add
mov
push
popa
sub
mov
(bad)
and
test
sahf
adc
add
inc
pop
(bad)
ror
je
add
adc
push
shld
outs
pusha
dec
inc
stos
fcmovnb
test
inc
or
ret
mov
and
push
xlat
adc
mov
lods
mov
pop
inc
aas
test
(bad)
clc
pop
bswap
or
outs
lds
xor
std
dec
test
call
rcr
in
aam
call
xchg
add
inc
test
ins
fwait
mov
call
dec
add
adc
mov
sbb
rcr
dec
pop
push
cmp
jo
pop
cmp
inc
xor
outs
movs
add
add
ror
xchg
jmp
inc
or
jge
pusha
lods
stos
nop
push
sub
mov
sbb
dec
add
or
or
xor
push
sub
test
ror
(bad)
js
pop
pusha
ror
xchg
push
ror
add
inc
test
or
or
xcrypt-ofb
cmps
sub
xchg
mov
add
xchg
bound
push
test
cmps
jb
xor
(bad)
sbb
sbb
ins
add
jge
mov
lock
add
scas
and
sub
aad
and
add
lea
and
xchg
xchg
jne
or
jnp
(bad)
jns
or
pop
or
push
push
(bad)
sub
sub
xor
inc
rcr
test
popf
mov
cmp
div
or
das
ja
lods
xor
add
adc
pop
shl
bound
(bad)
sbb
gs
jnp
or
in
fisttp
jae
repnz
mov
add
hlt
out
sbb
mov
cmp
inc
daa
pop
adc
push
and
adc
out
jge
and
and
and
inc
sub
or
popa
jmp
sub
inc
xor
adc
add
loopne
xor
or
pop
sub
dec
push
lods
add
inc
(bad)
ins
fs
(bad)
fnsave
cmp
add
arpl
or
inc
outs
dec
dec
lods
inc
mov
mov
aam
mov
or
aam
adc
add
push
push
or
js
test
or
sub
movs
adc
sub
jae
(bad)
loope
push
pop
jns
dec
outs
mov
shr
aaa
mov
ins
adc
je
arpl
or
dec
add
push
fwait
inc
leave
adc
cmp
push
or
xor
pushf
cwde
jmp
sub
gs
pop
or
xor
sub
fisttp
sbb
cmp
xchg
movs
or
push
xchg
or
sbb
adc
add
add
retf
aam
cmps
sti
fisttp
adc
fimul
jp
loope
daa
and
fistp
rcr
xchg
xchg
daa
adc
inc
push
add
push
or
mov
jl
or
or
pusha
stos
or
adc
retf
jno
cmc
or
xchg
mov
and
lea
mov
sbb
adc
and
jmp
fs
loopne
inc
shl
loopne
ret
xchg
jecxz
inc
jns
into
lock
xchg
xor
fcmove
in
bound
or
lock
je
jb
pop
and
inc
lods
ds
fstp
int3
idiv
add
add
nop
inc
jl
neg
and
jp
add
pop
mov
jns
push
and
push
popa
call
retf
dec
adc
iret
pop
mov
sub
or
inc
gs
inc
shl
ficom
into
daa
push
cmps
sbb
clc
in
les
xor
lea
outs
pop
adc
or
or
aas
add
sbb
cdq
cmc
push
es
push
push
sbb
add
pop
das
pop
push
adc
mul
inc
call
jecxz
add
stos
daa
ret
or
xor
push
and
mov
xor
mov
add
dec
mov
or
push
sar
and
mov
and
stos
or
loop
div
repz
out
push
stos
out
pop
push
sbb
cs
in
lahf
je
out
fimul
sbb
pusha
push
cwde
or
(bad)
adc
or
pusha
das
push
cld
pop
jge
add
jb
movs
data16
mov
add
gs
ss
jo
add
outs
aam
xor
inc
movs
adc
sub
addr16
jmp
inc
cwde
cmp
dec
jmp
pop
and
mov
mov
xchg
xchg
xor
sbb
xchg
shl
js
adc
dec
add
ja
nop
adc
jns
dec
or
xchg
mov
ins
test
mov
and
loope
inc
loop
out
push
scas
push
ss
in
cmp
lods
adc
shr
imul
cmp
stc
jne
rol
jle
xchg
jne
loope
pop
ins
in
outs
js
cwde
mov
jno
mov
fidiv
dec
inc
xor
mov
sar
frstor
add
add
push
shl
fidiv
rcl
call
inc
or
mov
push
ret
inc
shl
jno
popf
or
xor
call
sbb
inc
das
sbb
or
enter
push
and
sub
sub
in
std
cdq
xor
ins
popa
je
in
les
imul
(bad)
call
xchg
outs
and
sub
adc
pop
mov
jne
jo
shr
sbb
enter
scas
inc
inc
daa
fiadd
add
test
bound
rcl
mov
add
adc
mov
iret
fdiv
sub
sub
fld
cld
dec
adc
push
fdiv
test
repz
out
inc
push
sbb
(bad)
lock
ss
jnp
pushw
adc
les
je
push
inc
mov
mov
fbld
hlt
out
push
dec
or
add
add
pop
xor
add
mov
clc
add
in
push
ret
shl
dec
ds
xchg
sbb
jl
dec
ret
mov
push
dec
add
inc
dec
mov
push
fsubr
add
jne
mov
pop
lock
sbb
popf
jo
jnp
xchg
mul
jb
mov
and
aas
push
mov
or
fcomip
push
dec
or
int3
or
les
jne
or
pop
jmp
push
je
and
fcos
push
dec
inc
or
aaa
push
add
sbb
pop
pop
jo
adc
cmps
push
call
lods
ss
mov
xchg
ins
mov
sbb
and
and
add
nop
mov
mov
or
cwde
frstor
or
mov
or
ds
jmp
and
out
fwait
les
jb
pop
cmp
iret
or
sbb
jmp
add
popa
pop
out
cmp
add
xor
pop
in
imul
cmps
pop
adc
hlt
test
pop
mov
adc
loope
xchg
mov
inc
(bad)
push
fs
sub
or
les
pop
pop
pop
pop
pusha
xor
mov
mov
mov
or
inc
dec
sbb
jb
or
fstp
push
hlt
mov
or
std
mov
push
push
xchg
xor
sub
sub
jbe
dec
mov
inc
add
add
retf
sbb
fst
and
stc
shl
add
fisttp
test
mov
fisubr
adc
not
call
imul
ins
fnstcw
popa
mov
mov
and
inc
mov
loope
loopne
fsubr
cmp
mov
int
and
adc
push
jns
or
pop
loopne
and
je
mov
pop
cmp
and
scas
xchg
je
bound
mov
cmc
cmps
mov
mov
mov
cmp
add
mov
adc
js
scas
jne
shl
or
jb
ss
pop
mov
adc
mov
imul
pop
inc
pop
push
js
pop
pop
push
int3
scas
fstp
loopne
(bad)
mov
push
push
jmp
sbb
sub
add
es
je
dec
cld
call
or
sahf
cmovge
xlat
sub
xlat
cbw
inc
sbb
or
xchg
push
fiadd
or
jmp
lock
je
push
loopne
adc
jmp
xchg
mov
stos
es
and
repnz
aam
jecxz
fdiv
jae
das
xchg
adc
add
test
adc
dec
mov
adc
sub
add
fwait
push
dec
xchg
aas
cmps
sbb
pop
sti
ror
push
pop
add
(bad)
pop
and
retf
add
out
inc
adc
sub
adc
sbb
call
lea
add
and
outs
pop
je
inc
push
sbb
bound
mov
push
pop
and
mov
dec
movs
nop
pop
jnp
call
sub
mov
jbe
push
adc
cs
pop
in
clc
ja
or
popf
loop
je
pop
ds
dec
icebp
xor
lahf
cli
je
mov
xchg
fiadd
daa
out
hlt
xlat
imul
pop
stos
fimul
xchg
test
into
jne
lods
imul
adc
jmp
or
test
pop
shr
ret
add
hlt
data16
fild
add
hlt
int
add
xor
adc
xchg
mov
mov
sbb
add
jnp
ja
jno
call
mov
mov
mov
ins
mov
push
test
pop
inc
div
push
inc
fwait
mov
dec
mov
pop
adc
das
cmp
sub
and
add
inc
xor
adc
lods
push
pop
jmp
mov
pop
xor
ret
nop
(bad)
shl
iret
inc
fs
sub
dec
jl
or
jmp
push
adc
ror
fmul
add
mov
ins
call
mov
inc
iret
fild
loop
pop
ja
cmc
xchg
and
or
or
xor
jg
push
adc
or
es
clc
jnp
pop
mov
xchg
imul
fidiv
sub
push
dec
je
push
cs
add
sub
ins
add
jae
les
mov
adc
shl
nop
icebp
sub
jge
mov
inc
or
inc
push
add
cmc
cld
or
or
push
xchg
inc
sub
mov
push
push
pop
add
and
ss
push
add
pop
mov
arpl
jb
add
ins
or
enter
icebp
push
add
mov
inc
add
push
push
pop
add
push
inc
clc
pop
and
push
pop
adc
test
stc
outs
xchg
add
push
icebp
xor
outs
out
lods
or
out
mov
cmp
adc
push
cmp
mov
loopne
pop
jmp
sub
pop
inc
adc
xor
leave
push
rcr
mov
sbb
call
fwait
nop
pop
xchg
sti
mov
add
cli
das
lock
adc
or
test
setne
mov
xchg
dec
test
clc
ins
fist
sar
pusha
ins
pop
daa
fld
rol
cli
jo
rcl
leave
sti
test
adc
(bad)
xor
jns
pop
sub
mov
push
inc
jb
mov
add
pop
hlt
neg
jmp
pop
jne
movs
mov
jmp
sub
pop
pop
mov
mov
imul
test
data16
jg
xor
adc
jb
mov
fdiv
hlt
mov
fdivr
in
push
mov
dec
js
fs
mov
cdq
mov
adc
bound
aas
push
xor
jns
add
inc
adc
pushf
lahf
add
add
ja
inc
in
fs
jle
aas
into
int
test
mov
aaa
mov
sbb
jbe
enter
sub
out
in
lds
mov
mov
pop
pop
and
sbb
stos
sahf
aas
xor
add
sbb
pop
or
and
inc
jo
pop
sbb
ret
loope
ret
jle
xchg
jo
and
jmp
inc
inc
or
ror
cmp
nop
icebp
das
push
adc
sti
jmp
xor
mov
mov
pusha
mov
mov
or
sub
in
jmp
pxor
jo
jae
movs
and
(bad)
scas
add
mov
test
je
jmp
out
or
jmp
int
sub
nop
or
aaa
and
dec
and
adc
dec
push
sub
cmp
clc
dec
(bad)
pop
jmp
stos
sub
popa
fld
jl
inc
lock
rol
mov
add
dec
mov
in
jmp
test
dec
jmp
mov
cmp
repz
ds
xor
cmc
cdq
inc
xor
push
inc
outs
stos
shl
add
or
push
or
xchg
bound
add
mov
mov
adc
jle
push
dec
test
mov
jmp
jp
push
push
and
imul
push
jno
push
xchg
sub
add
push
adc
inc
ins
push
rcr
and
inc
aaa
cmp
repnz
adc
sbb
adc
push
cmp
ror
add
sbb
in
add
sub
inc
inc
sahf
mov
adc
add
dec
inc
lods
add
mov
xchg
adc
and
stos
hlt
dec
mov
dec
daa
fcomp
jae
mov
and
sar
adc
mov
sar
iret
add
test
mov
mov
mov
pop
das
adc
ret
pop
aas
popa
xor
cmc
test
enter
xor
ds
pop
mov
adc
shr
shl
push
test
or
in
jne
mov
dec
in
cmp
je
outs
pop
adc
dec
or
xor
pop
and
rcl
pop
xor
enter
xor
xor
je
xor
mov
movs
adc
cmp
jne
mov
out
adc
adc
pushf
lock
xor
xor
mov
out
dec
mov
int3
sbb
mov
jmp
sti
inc
add
in
adc
jl
sbb
lea
and
jge
out
push
and
sub
or
pop
jmp
and
dec
cmp
jb
xchg
push
and
jb
xor
push
mov
xor
push
sub
pop
pop
out
adc
sub
repz
je
ror
mov
mov
dec
fadd
movzx
push
adc
icebp
push
mov
clc
or
pop
movs
cld
adc
mov
aas
loopne
pushf
mov
fwait
lods
inc
and
jmp
cmp
lahf
inc
fadd
shrd
inc
inc
add
push
push
dec
ret
xchg
pop
dec
push
mul
cwde
loope
leave
jb
inc
cli
rcr
fadd
mov
stos
je
mov
aad
xor
pop
jo
jp
sqrtps
jo
jmp
mov
aas
jecxz
jecxz
aam
sbb
inc
jnp
loope
mov
test
xchg
mov
mov
adc
inc
xchg
jle
adc
jno
and
movs
pop
pop
inc
leave
loope
pop
adc
fsub
and
idiv
ins
lea
xchg
dec
xchg
nop
dec
jo
push
(bad)
cmp
pop
ret
adc
sub
pop
cmps
test
inc
xor
je
dec
cmp
inc
inc
popf
jne
mov
adc
sbb
xchg
mov
rcl
xchg
stc
mov
out
ins
mov
test
rcr
(bad)
outs
xchg
test
mov
or
push
and
xor
fidivr
cli
xchg
lods
push
(bad)
test
pop
ret
mov
inc
push
pop
or
adc
dec
fidiv
pop
cmp
idiv
movlhps
add
sub
push
inc
das
popf
icebp
mov
in
pop
xchg
shl
mov
ret
xor
sub
add
and
mov
icebp
adc
int3
add
arpl
pop
push
xchg
jge
pop
adc
out
push
out
dec
mov
seto
or
sbb
and
xchg
lahf
mov
cmp
push
inc
popa
mov
test
xor
adc
stos
sbb
and
or
inc
dec
add
mov
sub
fld
xchg
data16
mov
jg
add
outs
enter
sub
adc
xchg
xchg
lds
push
test
inc
nop
adc
pop
loope
lea
fucomp
movntq
xchg
addr16
mov
test
je
ds
or
jg
outs
call
rcr
jae
inc
xchg
imul
pop
mov
jl
movs
arpl
dec
in
leave
test
dec
mov
lock
repz
cmps
sti
push
sbb
shl
daa
cmp
(bad)
nop
mov
scas
clc
sbb
jmp
jmp
mov
pop
mov
inc
ins
in
inc
and
dec
js
sar
js
xchg
push
rcl
sar
mov
movs
ds
or
pop
or
(bad)
aas
test
pop
test
jns
fs
test
or
cdq
ins
ins
cdq
lock
xchg
sbb
jmp
sub
dec
sbb
sub
add
xchg
and
ins
adc
dec
add
loopne
pop
nop
jle
cld
shl
xchg
loop
mov
jnp
mov
xchg
loop
sbb
pop
add
mov
inc
add
or
aas
mov
lea
cmp
cmc
pop
lea
add
shl
scas
adc
cwde
int3
xchg
sub
pop
pop
or
push
push
lea
push
es
inc
fld
push
clc
aaa
mov
adc
(bad)
inc
inc
pop
leave
jnp
mov
cmp
jge
sbb
out
sbb
pop
scas
out
add
mov
sti
je
mov
ja
mov
adc
test
pop
mov
sti
mov
sbb
or
sbb
aaa
mov
mov
imul
cmp
je
test
mov
push
std
adc
jl
pop
mov
sbb
inc
add
stos
inc
sub
scas
mov
lds
ficomp
faddp
daa
stos
test
mov
and
jb
adc
smsw
icebp
rcl
test
clc
mov
inc
pop
or
(bad)
mov
push
add
jmp
ins
loope
or
push
mov
ret
stos
add
shl
push
dec
fidivr
ja
stos
cs
stos
in
cmp
jne
dec
add
sbb
ins
xchg
push
xor
call
inc
push
fs
xchg
loopne
pop
inc
or
in
jp
xchg
jge
cmp
test
popa
jns
or
mov
add
imul
and
mov
mov
test
add
xor
cmp
xor
jmp
je
add
imul
shl
test
jmp
mov
push
mov
test
lea
neg
retf
push
adc
adc
into
xchg
cwde
(bad)
call
(bad)
std
(bad)
aad
inc
mov
pop
xor
fisub
loope
lods
leave
add
mov
cmp
or
add
push
mov
add
adc
mov
leave
lods
push
add
dec
adc
add
repz
sbb
ss
in
cmp
sub
jge
or
pop
je
icebp
gs
lock
ins
xor
dec
mov
aas
clc
xchg
jmp
cwde
add
mov
(bad)
cs
ins
ins
mov
adc
mov
fcom
pop
pop
jne
lods
add
sbb
sbb
jmp
lea
adc
push
add
inc
mov
mov
pop
call
out
add
mov
mov
(bad)
adc
or
imul
adc
pop
push
hlt
sti
pusha
mov
lods
cmp
push
pusha
(bad)
jp
xor
(bad)
xchg
mov
jge
cwde
imul
and
push
pop
inc
cmp
test
add
mov
movs
xchg
xchg
pop
daa
push
rcr
call
test
and
ret
cli
push
aaa
aaa
movs
lods
cmc
mov
mov
pop
sub
push
add
or
rol
adc
icebp
test
cli
xor
mov
xchg
xor
dec
dec
cmp
call
or
cmps
inc
push
cmp
adc
cmp
inc
ins
pop
mov
mov
mov
popf
enter
(bad)
clc
in
loope
xchg
js
mov
cmc
cmps
mov
into
sub
or
aam
or
push
inc
mov
div
and
stos
pushf
jmp
clc
push
inc
jl
ins
cmc
mov
adc
pop
div
sbb
in
or
adc
xchg
cld
mov
add
lock
add
mov
ins
mov
mov
sub
test
shl
inc
ror
test
sub
cld
lock
mov
sub
es
pop
shl
pushf
push
aas
xor
lock
cwde
lahf
add
mov
ds
jne
in
jl
or
ret
pop
push
or
add
cmp
in
push
cld
shl
push
aas
xchg
or
cmps
cmps
adc
xchg
or
out
xlat
sbb
ins
fwait
sbb
fdivr
add
jecxz
add
js
add
dec
(bad)
in
aaa
push
jle
nop
in
js
mov
call
pushf
in
inc
in
mov
fnstsw
mov
loopne
aaa
popa
add
push
and
xlat
push
retf
cwde
lea
scas
add
jle
xor
inc
cmp
(bad)
retf
push
pop
bound
ss
or
fsubr
jnp
pop
add
sbb
jmp
mov
mov
mov
pop
mov
xchg
mov
je
inc
or
jb
xchg
outs
outs
mul
inc
cs
mov
or
dec
inc
fs
inc
daa
cmp
ror
movs
call
xor
jbe
aam
push
movs
mov
or
addr16
push
clc
inc
or
clc
cmp
shr
push
xchg
sti
sub
mov
push
mov
ins
push
(bad)
and
mov
inc
inc
sub
cmp
jbe
aaa
jno
mov
cmp
jle
adc
xor
out
das
(bad)
out
iret
jge
test
sub
cmp
xor
add
sbb
in
sbb
je
imul
shr
cld
and
jle
adc
pop
rcl
mov
sub
add
inc
pop
sbb
js
sub
outs
dec
jae
adc
push
add
ds
or
xchg
pop
xchg
fnstenv
(bad)
loopne
mov
fwait
mov
mov
push
add
fmul
xor
hlt
ins
adc
and
xlat
(bad)
test
cld
push
addr16
popa
xor
mov
xor
and
mov
or
cmp
mov
xchg
outs
or
push
and
neg
je
jns
and
cmp
mov
xor
js
div
or
push
sbb
xchg
scas
icebp
or
adc
adc
and
cmp
std
sar
mov
mov
test
push
lock
cmp
sbb
je
push
out
icebp
sar
stc
adc
test
cmp
out
mov
mov
sbb
sti
hlt
pop
or
leave
add
and
and
enter
test
and
jb
mov
xchg
lea
pusha
add
in
ja
call
xchg
sub
and
push
pop
cmp
and
and
mov
jge
fisttp
pop
sub
mov
dec
(bad)
and
push
sub
aam
push
test
sub
or
test
push
add
scas
mov
xor
sbb
or
mov
fcom
lods
adc
pusha
ret
push
push
or
out
mov
xor
xor
rol
dec
(bad)
test
aaa
dec
test
fimul
bound
push
inc
ss
mov
jbe
inc
es
shl
fsub
adc
iret
aas
mov
nop
pop
rcr
jns
fwait
or
xor
inc
xchg
iret
inc
sub
(bad)
aas
dec
sahf
mov
cmps
mov
inc
jne
iret
aam
pop
in
sbb
test
mov
add
push
dec
and
jbe
call
or
data16
iret
push
aas
adc
inc
inc
pusha
mul
loopne
cmp
sbb
sbb
push
jmp
push
iret
loopne
xor
xchg
add
cs
xor
push
push
add
jns
xchg
movs
out
pusha
inc
in
rcl
sub
dec
jnp
push
pop
push
sbb
add
dec
iret
mov
add
jle
inc
add
mov
movs
aaa
test
add
pop
xor
mov
in
pop
ret
sbb
and
fs
movs
push
pop
pop
xor
mov
jmp
sbb
adc
or
mov
sub
outs
sbb
adc
rcr
mov
add
shld
stos
adc
sbb
sbb
mov
jle
sbb
sbb
xor
cmp
cmp
cmp
in
pop
ds
and
retf
push
push
mov
dec
dec
ja
js
dec
ds
daa
jae
and
enter
sub
je
pop
xlat
mov
push
pop
jmp
push
adc
imul
adc
push
mov
and
push
dec
(bad)
push
cmp
out
movs
mov
rcl
add
adc
inc
or
fcmovu
or
hlt
inc
pop
adc
add
push
cmps
test
aad
iret
adc
and
jg
daa
aas
nop
hlt
cmp
jne
cmps
push
or
mov
(bad)
test
ins
add
inc
popa
les
test
mov
dec
inc
or
icebp
and
scas
push
call
dec
clc
jne
fwait
iret
mov
mov
or
mov
jo
addr16
mov
adc
mov
add
ret
cmp
jmp
in
jo
push
mov
cmp
sete
(bad)
push
and
xor
iret
hlt
mov
xchg
pusha
bnd
dec
mov
repnz
xor
lds
out
cmp
pop
adc
dec
(bad)
or
inc
nop
lds
aad
(bad)
add
sbb
in
mov
jne
inc
add
dec
or
jne
or
add
or
add
mov
fdiv
cdq
jbe
seto
test
lods
mov
movs
out
ror
jp
sub
cmp
cmps
push
clc
and
inc
in
mov
lock
xchg
test
and
mov
jmp
cmp
mov
add
pop
imul
sbb
cmp
cli
mov
gs
mov
dec
mov
jb
or
mov
loope
les
xlat
mov
sbb
jne
cmp
add
daa
push
sub
sub
sub
movs
or
mov
xchg
mov
rol
addr16
add
test
jmp
cld
adc
push
mov
stos
popa
mov
push
jnp
les
pop
jne
sub
aas
mov
mov
inc
loop
mov
stc
mov
jmp
rcr
dec
xor
mov
sti
mov
adc
or
repz
popf
ss
xor
cmp
cmp
cmp
jg
bound
mov
xchg
push
ror
sbb
and
test
aas
dec
fld
or
sub
jne
dec
sub
fild
lods
cdq
ins
jl
loop
push
add
mov
inc
loope
xchg
aaa
mov
sbb
mov
or
xor
and
icebp
jecxz
js
mov
sbb
add
fisubr
dec
jl
sbb
shr
dec
rcl
inc
ss
sbb
movs
gs
out
dec
or
xchg
push
xor
adc
mov
cmp
ins
pop
je
hlt
dec
cmp
int3
loope
jmp
sahf
mov
popa
popa
inc
pop
jecxz
jne
test
pop
pop
mov
sbb
cdq
and
sbb
mov
xchg
sahf
pop
lock
pop
outs
inc
sbb
adc
ret
clc
jnp
add
push
out
and
psubusb
cwde
cmp
cmp
cmp
into
fnstcw
js
inc
xor
inc
jnp
jne
xor
xchg
xchg
jecxz
mov
ss
mov
add
jne
sbb
jecxz
mov
mov
sub
stos
stos
inc
mov
lods
movs
sbb
or
sbb
or
push
sbb
fld
fcomi
pop
data16
dec
add
lock
dec
sbb
add
sbb
test
mov
add
mov
xchg
xor
dec
sbb
idiv
inc
mov
fiadd
and
pop
fld
xchg
or
(bad)
push
pop
add
xlat
jmp
mov
pop
mov
cmps
mov
and
jmp
jmp
inc
jecxz
pop
mov
xchg
adc
mov
mov
xchg
call
push
add
mov
sbb
rcr
and
jecxz
sbb
add
jae
cmp
fld
pop
push
out
cmp
adc
call
xchg
in
pop
(bad)
lock
add
lock
shl
xor
and
inc
add
inc
or
or
lea
adc
add
add
jns
sbb
or
xor
mov
jge
jmp
pop
hlt
jae
mov
inc
or
mov
push
add
mov
inc
les
lea
add
in
add
mov
jns
and
and
or
cmp
push
jmp
add
nop
or
icebp
push
das
dec
int3
and
adc
xor
pusha
pop
(bad)
ins
nop
popa
adc
adc
and
dec
in
mov
or
bswap
inc
ja
dec
dec
adc
cmp
retf
sub
cmp
pusha
gs
or
xchg
inc
pop
sbb
ins
lock
pop
lods
jne
fdivr
call
mov
sbb
fucomip
adc
sahf
or
js
push
mov
adc
aaa
mov
js
adc
daa
rcr
inc
jecxz
jl
adc
add
pusha
lea
adc
inc
pop
cmc
test
cmp
cmps
sbb
push
mov
push
mov
inc
inc
movs
lea
test
push
mov
pop
lahf
dec
(bad)
rcr
jo
push
dec
dec
pop
arpl
push
outs
jmp
mov
fcomi
jl
dec
and
cdq
push
jne
loop
and
inc
mov
js
enter
inc
add
pop
and
or
mov
loope
or
mov
mov
sbb
test
(bad)
sub
int3
pop
ja
sub
or
mov
adc
add
icebp
fisttp
scas
loopne
or
std
loope
shr
pop
pop
push
inc
push
mov
vmovdqu
add
iret
push
mov
sub
push
push
push
push
dec
push
das
sbb
push
and
mov
push
inc
test
add
loope
je
pmullw
lock
push
(bad)
xadd
enter
or
sub
sub
inc
or
dec
fcomp
retf
lea
pusha
sub
fs
and
dec
inc
xchg
hlt
fs
cmp
jecxz
push
ja
pop
imul
or
inc
je
(bad)
in
inc
enter
pop
or
shl
sbb
sub
packssdw
push
das
mov
nop
mov
data16
pop
test
add
or
jne
(bad)
aam
add
push
dec
and
movs
sahf
shr
or
adc
imul
mov
js
in
xor
mov
dec
ret
icebp
push
and
rol
mov
lahf
push
cmps
inc
add
imul
jg
or
or
lock
pushf
or
jae
lea
inc
jecxz
fimul
jg
mov
les
xchg
xchg
add
sbb
mov
les
lock
clc
add
(bad)
jmp
imul
xor
dec
lahf
adc
adc
jg
aaa
push
mov
and
mov
fdivr
push
movs
pop
mov
add
nop
pop
add
sub
sub
adc
push
dec
enter
push
call
mov
sub
aam
arpl
dec
mov
jmp
sbb
hlt
loopne
adc
fcom
and
jmp
adc
pop
shl
scas
add
jg
call
fild
out
add
or
push
dec
je
or
in
wbinvd
(bad)
push
movs
inc
cmps
pop
mov
fdivr
cmp
aas
shr
mov
mov
adc
push
lahf
in
cdq
or
das
dec
stos
mov
nop
or
xlat
and
std
adc
ret
push
push
xor
mov
sbb
push
(bad)
xor
shr
sbb
push
stos
xchg
xchg
mov
and
pop
sbb
scas
jo
xchg
pop
and
cmp
sub
and
and
xlat
imul
clc
cld
mov
jmp
enter
ja
idiv
and
sbb
push
lock
test
sub
or
add
mov
pinsrw
push
mov
or
cmps
mov
or
or
sbb
mov
mov
dec
jb
jbe
out
sub
dec
rcl
or
inc
pop
outs
movs
retf
and
clc
adc
mov
mov
and
mov
push
pop
push
fdiv
(bad)
fimul
mov
pop
cmp
jnp
xchg
sbb
or
pop
out
nop
mov
pop
dec
ret
dec
mov
shl
or
sub
sbb
mov
add
add
out
or
mov
add
imul
(bad)
jae
in
cmp
daa
or
push
ror
adc
and
cmp
fsub
cmp
push
das
mov
imul
call
xchg
sbb
xchg
nop
pop
(bad)
mov
shl
pop
or
pop
inc
test
cdq
int3
leave
xor
adc
push
hlt
lods
add
cmp
je
adc
ss
xor
pusha
sub
es
in
retf
mov
jmp
inc
mov
jne
sub
pop
add
repz
fwait
jo
push
xor
in
and
ds
or
sbb
outs
les
xor
fcom
test
inc
push
mov
add
dec
mov
out
mov
test
fs
and
mov
push
and
sub
enter
add
outs
push
mov
add
push
adc
mov
sub
(bad)
shl
xor
push
mov
dec
push
call
xchg
sub
inc
cmp
jne
and
add
fist
push
test
lds
sub
mov
and
(bad)
adc
sub
cs
pop
cmpxchg
(bad)
cmps
xlat
inc
jmp
and
xlat
cmp
outs
sahf
push
add
or
aaa
test
pop
dec
adc
and
adc
mov
bound
xchg
popf
or
movs
jmp
lahf
and
mov
cwde
push
pop
inc
rcr
addr16
push
pop
ret
(bad)
pop
sbb
xchg
rcl
mov
and
fsub
or
movs
test
inc
ret
adc
push
cs
and
push
fild
jp
push
into
(bad)
pusha
pop
std
inc
xchg
shl
rol
jmp
xchg
pop
sub
hlt
outs
add
push
mov
push
daa
xchg
(bad)
call
pop
jp
xchg
adc
pop
movs
test
adc
cmp
rol
imul
mov
fbld
dec
add
push
push
push
xor
adc
call
mov
cwde
in
mov
leave
push
or
sbb
and
fcomp
popa
das
cmp
jmp
inc
or
cmps
lock
imul
add
icebp
js
mul
push
repz
cld
cmc
adc
push
fnstsw
mov
inc
inc
pop
rol
push
mov
hlt
lock
cmp
add
pusha
test
add
inc
sahf
or
jmp
pop
test
fsub
ins
cmps
mov
xchg
sbb
and
adc
pop
push
jo
and
(bad)
bound
je
jg
push
and
sub
dec
clc
je
test
sub
jle
mov
push
imul
test
out
jae
(bad)
mov
cwde
jmp
mov
adc
pop
sub
and
jmp
aaa
mov
mov
and
pop
enter
mov
loopne
icebp
inc
mov
or
push
mov
push
stos
add
aaa
jg
lea
das
loope
add
pusha
xchg
jo
inc
or
push
mov
xlat
or
mov
add
dec
dec
js
js
push
or
(bad)
push
add
jl
push
mov
or
xor
cmp
hlt
add
add
not
jmp
xor
cli
push
adc
int
mov
(bad)
xlat
ret
jns
add
pusha
adc
popf
dec
jg
scas
inc
add
dec
or
ret
xor
and
xor
sar
mov
sub
jbe
nop
cmc
xchg
dec
and
cmp
sbb
cmp
test
jge
test
mov
bound
add
push
jl
stc
cmp
lods
sbb
sbb
add
ds
sti
sbb
out
je
in
cmp
jne
mov
into
or
cmp
or
fiadd
shl
xchg
xor
je
and
inc
sub
mov
leave
sub
jp
(bad)
sahf
mov
sar
cmp
inc
js
test
icebp
mov
aaa
mov
inc
(bad)
sbb
loope
jl
les
movs
sbb
add
pop
add
mov
or
adc
cli
sbb
sbb
jns
add
adc
jo
adc
push
adc
fadd
into
xchg
(bad)
pushf
sub
add
loopne
push
inc
sti
mov
cs
fmul
add
inc
pop
xor
test
pop
lock
cmp
aaa
push
push
sub
xor
or
push
xchg
jbe
(bad)
jno
and
ror
test
pop
rcl
adc
cmc
out
jmp
push
push
pop
dec
and
sub
dec
pop
outs
fild
sub
push
and
push
pop
dec
fld
retf
sbb
lods
xchg
and
cmp
jne
lea
mov
mov
mov
cmp
pop
int
fcom
xor
mov
or
std
sub
mov
add
xor
add
or
int
lods
mov
clc
sahf
sub
popa
sub
mov
adc
pop
add
jne
adc
push
inc
popa
and
mov
sbb
xchg
nop
dec
dec
pop
mov
xchg
jmp
rcr
cmp
aad
jne
cmp
aad
inc
dec
ror
popa
xchg
push
cmp
test
test
or
in
scas
test
cli
mov
lock
(bad)
cmp
inc
and
lahf
xchg
jb
pop
test
shl
add
or
inc
inc
sahf
push
pop
mov
invd
cmp
fmul
pushf
mov
or
pop
inc
rol
add
mov
movs
sbb
test
mov
loop
jecxz
jmp
daa
or
pop
sahf
add
sar
add
cvttps2pi
sbb
mov
and
mov
or
test
mov
lods
mov
adc
(bad)
dec
ds
leave
stos
cwde
cmp
pop
leave
cwde
jecxz
jb
cli
out
pop
pop
cli
lock
pop
mov
in
je
mov
xlat
sbb
test
shl
sbb
sbb
test
iret
add
push
cwde
push
mov
daa
add
das
mov
xor
hlt
mov
in
sub
cmc
aad
sbb
popa
std
mov
sbb
jg
das
js
jmp
pop
icebp
sbb
or
jg
push
ins
mov
sub
or
push
aad
sbb
xor
in
(bad)
cmc
push
inc
jne
or
aam
cmp
lods
je
add
or
cmp
add
jo
dec
pop
inc
ret
test
mov
daa
jns
xchg
arpl
adc
push
xor
xor
push
xor
push
aaa
and
inc
cmp
jmp
xchg
arpl
or
daa
leave
je
pop
push
sbb
or
rol
pop
jmp
bound
scas
or
sbb
jmp
add
ret
inc
dec
movs
mov
aaa
push
cmp
(bad)
gs
and
or
mov
mov
je
pop
fadd
cld
test
mov
mov
or
pop
pop
mov
out
int
in
add
inc
or
sbb
fild
lea
lea
adc
loopne
mov
add
xor
call
(bad)
sbb
pop
and
push
jo
out
add
adc
or
push
dec
popa
dec
mov
sub
cs
mov
xor
and
(bad)
inc
add
test
enter
sbb
pop
pop
pop
pop
mov
aas
or
mov
sub
cmps
loope
dec
mov
xor
mov
fst
jne
mov
mov
test
adc
mov
popa
fisttp
les
adc
je
mov
push
or
enter
clc
push
adc
xor
mov
pop
pop
or
movaps
push
add
xchg
in
sbb
mov
sub
das
pop
test
add
mov
stos
sbb
(bad)
or
dec
mov
mov
inc
test
repz
xor
push
shl
dec
bound
push
or
xchg
adc
cld
jbe
dec
clc
rdpmc
and
js
outs
leave
mov
sahf
mov
pop
push
pop
mov
adc
adc
sbb
hlt
lock
xor
push
jmp
cmp
sbb
aas
push
xor
ficomp
push
sar
mov
test
xchg
fcomp
cwde
pop
add
dec
cmp
pop
sub
call
or
aad
sbb
nop
cmp
xchg
sbb
add
or
(bad)
lock
push
sbb
mov
lea
daa
lods
nop
adc
or
mov
fistp
adc
(bad)
aas
add
sub
test
or
or
pop
ror
dec
or
add
adc
in
inc
push
or
leave
mov
pop
(bad)
mov
dec
xchg
shl
adc
mov
ja
push
jne
lea
push
mov
retf
lea
mov
push
loopne
ret
mov
inc
jle
mov
adc
inc
sbb
jp
mov
inc
and
sbb
mov
hlt
and
pop
(bad)
pop
add
push
and
scas
ss
repnz
sbb
xor
rep
and
mov
dec
sbb
and
out
jg
test
xchg
ror
imul
(bad)
push
mov
sbb
cli
cmp
je
imul
mov
je
shl
cmp
dec
mov
fsubr
mov
push
cmps
push
pop
jae
rol
or
js
or
adc
push
rol
test
movs
adc
add
mov
jo
scas
add
push
xchg
push
mov
(bad)
out
aas
imul
mov
jl
hlt
mov
lahf
inc
cmc
aas
pop
fild
push
add
ins
enter
fs
xchg
jb
push
fisttp
xor
lock
ds
sub
add
loopne
dec
pop
mov
sub
mov
test
mov
mov
push
add
mov
daa
push
cmps
pop
push
(bad)
dec
dec
pop
test
dec
rcr
jmp
xor
or
test
pop
out
cmp
jne
pop
test
imul
das
test
xor
loop
sub
mov
fs
inc
and
xchg
mov
push
test
dec
lea
fbstp
ficom
xor
jne
and
adc
fisubr
sbb
add
or
xor
lock
ins
jns
inc
pop
push
mov
nop
or
test
pop
iret
test
pop
xchg
and
in
ja
retf
and
sbb
mov
js
in
dec
xchg
mov
mov
cmps
xchg
popa
pop
shl
clc
mov
or
push
push
popf
pop
call
xor
das
cmp
aas
daa
leave
sbb
mov
call
or
or
xor
mov
test
ins
cmp
push
inc
and
jge
cmp
adc
xlat
mov
mov
push
push
ins
jge
mov
xlat
dec
or
push
cs
stc
and
iret
sbb
sub
xchg
lds
xchg
jns
push
pop
jne
jl
movs
fsubrp
or
xor
cmp
inc
cmp
or
push
pop
outs
jb
add
pop
in
test
xchg
nop
aaa
mov
xor
mov
add
add
xor
movs
popa
mov
push
add
mov
mov
mov
pop
or
pusha
ins
(bad)
mov
movs
sbb
mov
cmp
sbb
cld
jmp
jle
add
inc
cmp
mov
shl
fisttp
sbb
cmp
sub
gs
js
push
aaa
fldcw
inc
adc
sub
js
ret
jbe
movs
(bad)
pop
sbb
test
clc
and
pop
inc
cld
loop
mov
inc
pop
aam
mov
push
mov
lock
or
push
add
shl
or
or
push
xor
jmp
aam
mov
dec
and
mov
sub
(bad)
mov
pop
or
push
(bad)
and
and
(bad)
or
test
fsubr
add
or
cs
cmps
retf
mov
fild
mov
push
mov
pop
inc
in
or
jnp
jle
dec
(bad)
mov
adc
ins
or
or
mov
imul
add
xor
mov
inc
add
mov
sti
pop
jecxz
ja
sbb
pop
push
adc
cmp
rol
stos
mov
xchg
or
fadd
dec
xchg
mov
cmp
test
je
scas
je
dec
dec
cld
clc
test
pop
add
push
jns
or
fadd
sbb
idiv
jl
pop
adc
xchg
push
out
ss
(bad)
mov
cld
ret
xor
out
aam
xchg
cmp
sub
and
lea
or
cld
lds
sub
mov
sbb
adc
add
xor
or
faddp
adc
adc
pop
xchg
pop
xor
add
sub
and
or
cmp
dec
mov
or
xchg
or
pop
cmp
pop
or
gs
mov
(bad)
xchg
call
mov
clc
sub
inc
loopne
jno
pushf
and
dec
jne
stos
loopne
fimul
and
jnp
mov
inc
inc
pop
xor
sub
das
add
dec
inc
mov
mov
inc
xchg
in
or
jmp
pop
mov
push
or
cmc
add
jnp
loop
sbb
jne
push
dec
and
push
and
mov
fwait
push
push
sub
add
jmp
mov
nop
add
mov
xchg
aad
movs
adc
leave
or
sub
imul
xchg
or
and
ret
lock
push
call
icebp
sbb
pop
imul
mov
pop
sub
xchg
leave
xor
mov
inc
mov
pusha
mov
mov
test
retf
cmps
sbb
add
mov
add
sti
inc
lods
or
pop
push
cmp
test
sub
or
adc
or
or
cmp
sbb
xchg
test
pop
loopne
out
lock
sub
cmp
or
ja
mov
adc
gs
adc
sbb
ror
push
inc
call
pop
lea
jne
mov
stos
outs
jg
movs
data16
not
and
xor
dec
int
sub
lahf
in
ror
add
inc
add
mov
aas
adc
add
xchg
call
scas
or
adc
dec
aam
dec
pop
call
jp
xor
inc
mov
or
(bad)
jmp
mov
add
loope
adc
jmp
or
push
inc
mov
idiv
mov
aam
dec
(bad)
mov
fnstsw
mov
fcmovnbe
xor
and
push
paddsb
xlat
mov
fwait
add
hlt
xor
xor
mov
jbe
scas
push
sbb
dec
lock
and
mov
xor
mov
jle
jne
push
outs
add
aaa
add
dec
cmp
xor
das
adc
xchg
nop
fmul
mov
in
push
sbb
fcom
inc
inc
pop
push
or
jl
ret
loope
fild
mov
jle
mov
je
fwait
add
dec
and
dec
push
(bad)
push
xchg
jp
adc
mov
dec
xor
scas
push
sbb
add
push
popf
jo
jae
xchg
rol
xchg
cmp
je
jns
pusha
call
test
push
xlat
shl
push
xor
loope
rcr
mov
xor
add
fadd
ins
out
loope
jno
lea
aas
cmp
xor
fld
mov
jne
cmp
mov
test
imul
xchg
xchg
inc
cmp
sbb
data16
sub
add
sub
jge
push
xchg
sti
mov
pop
dec
push
mov
mov
loope
lea
xchg
and
out
mov
cmp
imul
cmp
jne
bound
arpl
ja
(bad)
jg
sbb
mov
mov
inc
jne
xor
inc
xchg
jg
std
and
mov
mov
pop
xor
push
push
and
retf
sbb
sbb
add
pop
pop
sbb
push
clc
xor
icebp
fs
mov
dec
das
js
push
(bad)
push
cmp
gs
add
inc
push
ss
mov
mov
mov
movs
xor
rcl
ins
dec
cli
adc
sbb
loopne
mov
add
sub
stos
pusha
inc
movs
inc
add
dec
and
pop
mov
test
or
dec
pop
stos
scas
pop
pcmpgtd
ret
mov
dec
or
add
xchg
les
je
aad
add
adc
xchg
pop
or
jle
add
inc
sbb
or
push
stos
repnz
mov
ins
pusha
es
inc
ret
mov
inc
ss
mov
sbb
push
add
pop
mov
push
cli
sub
add
sub
movups
in
ret
rol
ror
dec
ret
jb
adc
ins
add
lds
cmp
enter
jns
cmps
call
outs
jne
addr16
add
pop
push
imul
inc
ret
daa
and
jmp
mov
and
push
cwde
xor
jmp
adc
adc
push
loopne
xor
out
dec
movzx
ret
call
outs
add
add
jle
xchg
mov
xchg
inc
sub
jg
icebp
call
loopne
je
sar
inc
or
hlt
enter
push
ins
and
xchg
inc
or
push
inc
sbb
mov
loopne
mov
or
push
add
add
lock
fimul
aam
cld
add
stc
add
leave
pop
nop
adc
enter
or
or
pop
jb
mov
int
push
aaa
ror
(bad)
push
rcl
test
leave
pop
pop
mov
adc
cmp
nop
xchg
js
adc
sub
xchg
es
je
in
pop
shr
jne
jmp
add
jne
outs
adc
add
mov
inc
and
xlat
pop
shr
push
je
addr16
or
repz
call
inc
or
sub
xor
fmul
pop
inc
sbb
sbb
call
inc
mov
jmp
add
adc
push
bound
pop
xchg
movs
jnp
addr16
pop
jmp
mov
shl
pop
pusha
leave
ja
pop
adc
mov
retf
fisttp
add
test
mov
xchg
hlt
push
shl
xchg
jb
fcom
shr
xor
leave
dec
aam
and
mov
movs
movs
jo
push
enter
repz
and
sub
stc
mov
mov
mov
sub
cmp
add
push
clc
sub
sbb
mov
pusha
mov
add
add
xadd
sub
xchg
push
shl
adc
jle
cld
aas
inc
xor
push
sbb
jbe
jae
and
add
jbe
mov
sub
and
pop
and
or
or
xchg
fsubr
sahf
inc
hlt
dec
sbb
loope
jecxz
das
adc
cmc
pop
div
add
shr
cdq
xor
adc
push
cmp
(bad)
jge
sub
mov
pop
int3
retf
or
pop
add
mov
push
enter
mov
ror
lods
and
shl
aas
mov
dec
pop
addr16
fbld
jne
adc
xchg
sbb
pop
or
push
inc
std
push
lea
in
sbb
or
fisttp
shl
pop
inc
mov
xor
mov
jmp
test
mov
add
inc
add
or
jb
sub
addr16
or
mov
bound
mov
push
jo
mov
cmps
clc
sub
dec
push
scas
out
mov
pop
shl
xor
mov
in
pop
add
pop
les
movs
add
dec
adc
jo
fidivr
cmp
jg
ins
jle
loopne
ret
leave
shl
(bad)
stos
adc
adc
add
pop
call
call
push
and
stos
mov
xor
mov
(bad)
cmp
push
in
(bad)
jge
sub
in
push
adc
or
dec
jo
add
jae
call
cmp
xor
add
mov
loop
clc
xor
or
rcr
popa
pop
es
mov
xchg
ds
not
jno
addr16
(bad)
jbe
push
sbb
scas
scas
push
lock
rcr
movzx
push
or
mov
and
sub
push
arpl
mov
xchg
pop
stos
mov
es
xchg
pop
inc
and
add
loopne
or
shl
lock
lock
jmp
iret
jl
push
pop
jmp
adc
adc
mov
or
push
movs
cli
add
sbb
daa
je
or
xchg
jmp
rcr
mov
imul
mov
daa
call
out
in
pop
outs
shl
ds
das
add
add
jmp
ret
pushf
les
ret
stc
lods
inc
push
add
ins
jnp
adc
pop
pop
sbb
add
jnp
add
inc
out
mov
xor
xor
add
or
adc
and
and
test
add
push
js
or
pop
jne
pop
push
dec
sub
cmp
adc
(bad)
add
mov
scas
js
sar
jns
cmp
pop
xor
jl
jne
push
cmps
jge
sub
jge
jge
add
mov
imul
movs
sub
or
out
xchg
shl
xor
pop
dec
xor
pop
push
pop
fdiv
cld
shl
cmp
jp
mov
cmp
dec
test
mov
or
cli
scas
or
pop
pop
inc
pop
jne
mov
aad
ffree
mov
sub
js
les
sub
mov
jl
xor
sub
lock
pusha
push
inc
pop
xor
cwde
(bad)
jmp
sbb
xor
mov
dec
or
sub
js
cmp
and
sbb
mov
lock
sub
lock
xor
sub
sbb
inc
add
xchg
sub
sub
cmp
mov
pop
pop
ss
xor
pop
push
data16
add
int
xor
pushf
retf
push
add
or
xor
mov
std
pop
shl
or
xor
shl
sar
popa
adc
jp
mul
mov
dec
movs
in
add
inc
idiv
rcl
pop
je
or
push
add
test
aad
adc
and
fnsave
xchg
add
push
aaa
push
fld
retf
and
pushf
and
mov
and
js
and
imul
fmul
pcmpeqb
xor
sbb
cmp
sbb
mov
lea
retf
adc
mov
fidivr
push
add
aas
add
test
je
or
mov
xor
daa
pop
inc
dec
dec
pop
aam
jp
ds
or
add
rcr
pminub
je
pop
std
inc
mov
jmp
mov
inc
or
out
adc
pop
or
loope
push
push
cmps
ja
dec
or
mov
jns
pushf
jb
push
xchg
mov
adc
movs
mov
jmp
inc
jmp
pop
sub
and
shr
jge
cmp
aaa
or
mov
fistp
dec
in
jge
sbb
jne
ret
or
and
loope
or
pop
pop
(bad)
push
jge
pop
or
inc
clc
add
test
cwde
and
add
and
jl
push
dec
cmp
movs
imul
or
pop
push
out
mov
or
or
dec
je
ret
es
ret
sbb
inc
por
or
inc
xchg
call
in
shr
dec
daa
add
pop
mov
sbb
in
les
or
pop
pusha
pop
jne
call
je
adc
xor
push
movs
and
add
arpl
dec
add
enter
test
or
in
inc
ins
test
push
xor
adc
mov
inc
or
adc
loopne
stos
add
mov
and
pop
call
and
mov
je
mov
aas
add
loopne
nop
mov
loopne
mov
adc
sbb
jae
pusha
cmp
and
and
mov
xchg
or
jecxz
js
add
fild
inc
je
pop
push
aam
(bad)
add
pop
and
in
or
rol
popf
call
mov
sbb
pop
(bad)
xor
nop
aas
inc
add
push
data16
fcmovbe
xor
xchg
inc
pop
jge
mov
in
sbb
and
das
or
add
lahf
jno
test
lods
gs
add
inc
mov
push
outs
(bad)
add
sub
loopne
or
mov
sbb
inc
mov
daa
in
adc
out
data16
rcl
sti
js
into
add
fdiv
in
test
add
add
fist
pop
add
cmp
dec
ret
lds
push
out
xor
or
sbb
loopne
icebp
ret
push
adc
ffree
js
inc
icebp
xchg
sub
mov
sbb
or
arpl
pop
jl
das
push
or
fcmovnbe
cmp
adc
enter
add
xchg
xor
mov
push
mov
test
xchg
adc
enter
sbb
adc
fld
inc
mov
cmp
ins
xlat
mov
movs
fdivr
xchg
mov
inc
inc
rcl
hlt
xor
popa
xor
xchg
xchg
add
push
fcomp
gs
retf
rol
in
xchg
nop
mov
cs
int3
pop
jmp
add
lock
xchg
pop
mov
stos
push
ret
or
sahf
addr16
or
pop
movs
sbb
cdq
cs
push
cdq
hlt
loopne
add
xor
xchg
jl
mov
test
dec
nop
std
dec
jne
push
mov
sti
les
mov
cmp
sub
mov
ror
add
adc
mov
pop
jecxz
jmp
adc
pop
xchg
xchg
push
(bad)
ja
ret
add
inc
or
ret
nop
aaa
dec
pop
lock
jnp
das
jne
mov
iret
xor
test
cld
jmp
inc
cmp
mov
pop
out
call
lods
lock
pop
jge
scas
and
sbb
pop
ins
xchg
mov
pop
adc
xchg
fstp
mov
jmp
lea
jmp
pop
inc
push
xchg
jge
cmp
xor
push
jmp
or
and
cmps
push
adc
mov
cmp
enter
add
xchg
and
xchg
adc
lock
or
les
pop
push
or
nop
pop
shl
adc
ud1
dec
movs
loop
ret
adc
das
ret
stos
outs
xor
dec
or
mov
sbb
mov
sbb
test
mov
xchg
and
add
inc
dec
adc
adc
jo
outs
mov
push
call
jmp
xor
in
adc
xchg
push
jo
jno
test
rcr
adc
and
xor
and
ja
or
ficomp
push
add
rcr
pop
inc
pushf
ror
shl
mov
add
inc
std
pop
add
add
cdq
and
cmp
push
mov
test
adc
pop
pop
leave
cmp
xor
mov
inc
sub
xor
in
push
pop
or
nop
pop
pop
sbb
mov
push
or
pusha
add
dec
add
and
add
pop
xchg
imul
add
cmp
rcr
arpl
push
das
dec
call
out
lock
push
lods
push
add
pop
pop
inc
xlat
cmp
scas
stos
mov
xchg
imul
nop
xchg
out
push
push
rcl
(bad)
xchg
xor
sbb
mov
loope
fisub
and
xchg
mov
mov
loope
mov
or
add
inc
ret
push
(bad)
mov
add
add
add
push
sub
cmp
jecxz
adc
jb
push
xchg
ja
sub
loop
jge
fsubr
add
or
sub
push
nop
xchg
inc
shl
mov
adc
out
push
or
sbb
adc
push
or
mov
push
adc
jnp
bound
jmp
sub
or
dec
outs
invd
or
and
test
jmp
adc
mov
xchg
adc
in
jg
lock
push
mov
mov
jo
jmp
test
adc
clc
dec
test
adc
dec
out
sub
lahf
jl
dec
push
lods
adc
sbb
jmp
adc
mov
add
lea
idiv
daa
bound
test
loopne
in
enter
aas
lock
add
add
imul
ins
inc
cmp
inc
cmp
and
mov
xchg
jge
and
gs
cmc
fs
jne
sub
cmp
or
daa
imul
xchg
cdq
pop
in
clc
dec
popa
and
add
jno
ja
push
mov
jbe
in
adc
sbb
add
nop
add
mov
push
mov
xchg
sub
jmp
sub
out
nop
mov
and
jae
mov
xlat
sbb
clc
fild
ss
dec
mov
inc
sbb
mov
ds
test
dec
repnz
pop
xchg
cli
aad
pop
adc
fmul
mov
ret
add
pop
and
(bad)
xchg
sbb
pusha
cmp
retf
pop
cli
nop
rol
pop
add
pop
(bad)
data16
mov
clc
fmul
repnz
mov
fs
adc
bt
setb
push
or
adc
hlt
loop
jne
sub
mov
add
bound
jo
mov
jmp
push
adc
cs
out
or
sbb
jno
push
push
lds
xchg
jo
sub
shl
xchg
push
ins
out
lock
sahf
adc
sahf
mov
(bad)
in
mov
sub
or
xchg
pop
mov
fld
fwait
test
cdq
sti
test
in
aas
push
mov
clc
movs
movs
stos
jmp
add
mov
cmp
or
cmp
mov
add
add
pop
jl
jae
mov
pop
xlat
arpl
jne
fs
clc
outs
mov
jno
adc
push
and
adc
call
retf
mov
cmp
sub
or
lahf
and
outs
push
call
repz
(bad)
movs
cmps
(bad)
mov
xor
sub
push
fisub
cmps
add
mov
or
jb
ror
add
scas
add
adc
inc
xlat
sub
imul
arpl
push
sub
pusha
iret
sti
sub
aas
sub
mov
inc
out
inc
add
out
(bad)
dec
lea
jae
ror
movs
cmps
lock
loopne
loopne
cmps
jbe
inc
das
jmp
and
sbb
std
or
adc
mov
adc
lds
shl
mov
loop
das
les
cmp
cmp
das
inc
repz
or
lahf
jg
fimul
sub
adc
push
test
rol
push
shr
inc
adc
dec
int
add
div
and
dec
ret
in
adc
or
lods
test
or
adc
out
xchg
gs
outs
sbb
and
xchg
sbb
adc
and
adc
add
ror
mov
xchg
or
jmp
or
lock
pop
dec
rcr
imul
push
loopne
dec
je
mov
das
mov
mov
sbb
xor
bound
enter
rol
adc
jno
sbb
aam
jmp
push
sbb
fiadd
mov
push
sbb
pusha
push
xchg
aam
push
ficomp
js
add
cwde
add
push
int3
or
mov
push
sbb
mov
add
nop
pop
mov
mov
sbb
mov
das
nop
xor
push
call
imul
add
nop
pop
lds
adc
dec
mov
pop
cmp
dec
sar
cmp
inc
je
mov
and
repnz
pusha
sbb
sbb
sbb
sbb
mov
and
inc
push
and
and
jmp
sbb
cmp
sub
(bad)
shl
xor
adc
push
ja
xchg
iret
imul
inc
clc
in
mov
jl
sub
mov
mov
std
test
push
aam
ret
test
and
adc
aaa
sbb
xchg
fist
push
cmovge
xchg
xchg
xchg
dec
dec
dec
push
sbb
daa
dec
cmps
and
fcom
into
outs
in
or
dec
mov
xchg
xchg
data16
push
mov
inc
test
lods
ret
mov
pusha
aaa
xchg
aaa
lods
enter
sub
popf
cs
mov
pop
mov
inc
ins
sub
sbb
inc
ins
js
stos
push
pop
iret
jo
int
mov
inc
jo
cmp
cmps
xchg
(bad)
dec
inc
and
mov
or
adc
loop
and
movs
test
mov
push
shl
push
jl
call
jne
add
pop
fs
aaa
push
add
mov
add
ins
jg
xor
out
jl
or
jg
cmp
je
push
push
push
push
add
das
(bad)
pop
mov
mov
sbb
inc
add
ret
mov
jne
pop
and
jmp
lods
xor
nop
add
jmp
xchg
adc
push
int
lahf
cmp
mov
fisttp
adc
rcr
mov
dec
push
push
push
loopne
adc
lahf
push
repz
cmp
test
not
jne
adc
mov
mov
mov
ror
lock
scas
popf
lods
fwait
lods
jo
pop
xor
jge
mov
mov
or
mov
clc
jo
mov
(bad)
xchg
adc
sub
pop
jo
pop
mov
pop
add
sub
or
lahf
or
mov
mov
push
ja
les
dec
rol
xchg
adc
adc
stos
repz
inc
jmp
adc
add
fdivr
inc
inc
cmp
pop
xchg
jne
jne
jae
mov
add
and
dec
sub
mov
adc
dec
and
shl
push
cmp
jmp
mov
mov
jbe
lea
mov
push
xchg
add
sbb
cmp
cli
je
or
xchg
xchg
scas
and
ins
test
imul
and
invd
(bad)
add
cmps
cmp
lea
shr
mov
add
add
out
(bad)
pusha
pop
inc
dec
jo
jne
out
jno
dec
or
push
mov
rcl
mov
add
dec
lock
idiv
(bad)
push
dec
cmp
test
add
mov
dec
dec
jo
cmp
push
out
les
push
cli
inc
push
sbb
ret
ins
(bad)
adc
retf
and
fs
push
or
je
ret
sub
cmp
test
push
sbb
and
cmp
cmp
das
das
cmp
into
push
pushf
loope
inc
(bad)
add
add
push
sbb
adc
aad
dec
cdq
fs
cmp
push
mov
dec
xchg
retf
clc
add
cmc
in
outs
and
mov
adc
(bad)
adc
sbb
and
dec
loop
jae
or
adc
outs
sbb
mov
xchg
and
pop
call
push
mov
push
sbb
inc
add
adc
(bad)
xlat
add
or
les
ret
push
or
cmp
adc
and
test
adc
mov
sbb
push
mov
iret
lahf
xor
ins
adc
fwait
cli
jle
and
jo
or
push
pop
or
push
ins
add
sahf
jbe
adc
xlat
mov
nop
dec
cs
xchg
xlat
pop
test
ja
mov
punpckhbw
bound
mov
xlat
sbb
add
adc
dec
or
mov
jo
inc
mov
loopne
or
sbb
mov
push
cs
mov
std
push
xor
push
sbb
mov
pushf
cmp
and
(bad)
into
ss
mov
cwde
adc
inc
dec
xor
xchg
sar
enter
cmp
pop
push
adc
pop
lods
in
fsubr
mov
or
ss
pop
test
jmp
sub
cmp
(bad)
sub
xlat
mov
test
ret
push
mov
repz
sbb
fs
mov
ja
ret
mov
std
cmp
mov
and
dec
jmp
rol
dec
ins
and
adc
jmp
mov
dec
sbb
pop
pop
mov
cs
pop
cmp
sti
addr16
sub
jecxz
lock
inc
inc
pop
cmp
lods
sub
pop
outs
daa
(bad)
aam
mov
jnp
fs
or
add
push
int3
jae
cmp
pop
sbb
imul
lock
dec
dec
dec
push
jmp
add
push
inc
loop
xchg
pop
imul
and
ins
dec
outs
jg
mov
push
and
add
push
adc
dec
sahf
jbe
pop
inc
cmps
dec
inc
push
sbb
aaa
add
jg
jmp
mov
aam
test
sbb
push
or
cmp
in
sar
sbb
xor
adc
js
sub
mov
push
adc
addr16
xchg
js
sahf
mov
cmp
sub
dec
add
hlt
sub
ins
xlat
push
sbb
jb
(bad)
je
jns
(bad)
jnp
cmp
ja
jmp
push
push
sar
out
je
(bad)
fsub
push
inc
pop
dec
sub
inc
and
loopne
add
jmp
sub
sub
lods
sub
sbb
imul
clc
outs
cmp
retf
adc
jl
shl
push
sub
imul
fs
das
cmp
sti
das
ins
mov
ins
cmp
pop
mov
loope
je
add
test
xlat
stc
and
or
sahf
pushf
jmp
xchg
cmp
mov
outs
xchg
mov
mov
push
das
dec
(bad)
jg
les
cmp
je
cmp
inc
add
in
push
mov
(bad)
out
jbe
loopne
jmp
mov
cmp
ret
aas
shr
jne
push
lock
fisubr
and
sub
enter
add
push
aam
mov
pop
outs
fisub
mov
add
lock
cmp
xor
lock
rcl
mov
ds
mov
xchg
or
mov
fcmove
ficomp
lock
push
push
push
hlt
sub
or
adc
fist
imul
mov
jne
enter
pop
adc
add
and
xor
cmps
sbb
imul
sar
cld
or
jmp
sti
jae
pop
adc
xchg
loopne
pop
push
xor
arpl
cmc
pop
pop
xchg
xor
xchg
inc
in
shr
mov
icebp
fcomp
add
aam
add
inc
cwde
call
or
sbb
sub
push
cmps
add
daa
lock
add
test
push
or
sbb
xor
clc
jns
sub
cmps
push
push
push
fisub
sub
add
mov
pop
js
add
loop
inc
and
ins
or
ret
retf
mov
inc
xchg
stos
call
push
add
jp
adc
bound
inc
add
popa
sar
ret
pop
fisttp
scas
js
retf
push
adc
sbb
inc
inc
lahf
mov
adc
sub
je
add
sbb
movs
mov
add
inc
and
push
test
jle
das
sbb
scas
and
mov
pop
pop
cdq
sbb
and
mov
add
fild
or
out
push
push
mov
add
test
push
and
mov
pop
push
movs
jge
sbb
jo
lods
arpl
sbb
push
adc
sub
push
inc
pusha
mov
cmp
xchg
mov
les
push
das
mov
ja
push
cld
mov
lock
iret
je
arpl
shl
mov
ret
test
test
loope
push
ret
inc
pop
(bad)
nop
test
ficomp
xchg
push
inc
or
shl
popa
inc
fld
clc
mov
add
int
pop
pop
push
clc
mov
test
jmp
and
add
aam
dec
add
in
lods
mov
cmp
pushf
ins
ins
add
or
jne
and
cmps
push
sbb
mov
xor
sbb
push
push
cmp
adc
mov
sbb
sub
fs
push
mov
add
pop
adc
jo
xchg
push
adc
loopne
test
push
jnp
add
shl
xchg
cwde
adc
icebp
sbb
xor
arpl
adc
sub
jbe
push
(bad)
pop
jmp
jmp
inc
push
lea
xchg
outs
add
mov
(bad)
jo
test
(bad)
outs
mov
hlt
sub
aam
add
jne
mov
add
movs
xchg
aad
xchg
pop
or
jle
dec
push
and
dec
mov
test
arpl
imul
cmps
loopne
and
out
cmp
cmp
jns
jle
inc
dec
xchg
cmp
push
sub
inc
add
cmp
in
cmp
pop
aaa
xchg
pusha
mov
ret
inc
mov
add
xchg
lock
rcr
mov
or
pushf
sbb
jnp
add
fidiv
jb
cli
mov
rol
ret
fadd
mov
scas
and
push
lsl
xor
imul
pop
add
inc
dec
xchg
loop
hlt
mov
jne
or
add
mov
das
add
xor
daa
or
mov
stc
push
pop
aas
shl
add
mov
leave
imul
add
lock
pop
shr
test
pop
add
cmp
bound
test
add
enter
add
xor
inc
push
cli
xor
mov
outs
mov
push
add
ror
add
or
or
sar
adc
sub
or
imul
mov
stos
ret
mov
pop
mov
or
mov
mov
inc
cmps
dec
cwde
cmp
data16
jbe
mov
inc
pop
adc
lea
sub
xchg
popa
pop
push
int3
inc
cs
jns
jp
mov
lods
call
and
jmp
push
pop
and
sbb
adc
adc
clc
dec
sbb
and
xchg
push
outs
outs
or
sbb
push
int
hlt
add
sub
test
sbb
sub
mov
cli
jmp
add
dec
add
or
ss
pushf
call
jmp
mov
cmp
or
imul
sbb
pop
jmp
inc
ds
pop
mov
xor
fild
jne
sbb
xchg
fstp
nop
pop
ret
mov
add
scas
and
ss
dec
nop
jno
std
push
push
push
dec
iret
imul
xor
mov
call
xchg
mov
imul
cmp
pop
xchg
adc
test
cmp
fdiv
(bad)
jge
pop
jbe
adc
and
mov
nop
arpl
add
cmps
jge
(bad)
xor
xor
add
xor
add
pop
or
sbb
push
mov
and
push
xchg
and
shr
retf
and
push
scas
add
(bad)
inc
mov
out
add
or
mov
aam
retf
cwde
adc
scas
xor
retf
rol
das
dec
and
dec
push
add
push
ret
jl
cmp
out
js
pop
fsub
inc
cmp
jb
jb
sbb
mov
or
dec
data16
or
sub
mov
(bad)
outs
mov
popf
jnp
mov
retf
ins
sub
adc
add
mov
and
loopne
inc
sub
adc
sub
cmp
cmp
out
adc
test
add
push
and
or
(bad)
sub
iret
or
xchg
or
outs
xor
xor
add
fistp
repnz
aam
pop
and
add
leave
or
adc
call
iret
lock
jo
addr16
lods
push
pop
xor
mov
adc
dec
bound
ins
adc
enter
jl
ins
sbb
push
jnp
mov
sub
jne
(bad)
ins
imul
and
adc
mov
mov
sbb
cdq
mov
or
int
or
xchg
lock
sbb
mov
push
cmp
mov
adc
mov
das
fsub
xor
shr
or
jmp
xchg
pop
add
inc
addr16
xor
inc
sbb
data16
push
mov
jl
js
ret
adc
cmp
cmp
add
js
or
arpl
xor
push
sbb
xor
pop
stos
and
push
pop
mov
xor
lods
xchg
mov
xor
push
sub
and
(bad)
rcl
cmc
mov
mov
sbb
mov
and
fstp
sub
add
add
mov
push
mov
xor
in
xor
mov
inc
ret
mov
mov
mov
getsec
mov
retf
mov
je
cdq
add
or
fdivrp
leave
lea
mov
add
or
pop
mov
pop
lock
xchg
and
(bad)
jmp
inc
ret
cwde
movs
data16
lods
xor
loope
mov
cmp
inc
push
sub
bound
dec
ins
es
sbb
pop
jne
sub
mov
mov
xor
jo
and
es
jg
or
sub
jmp
rol
scas
jg
jne
cmp
je
push
shl
movs
sbb
lock
clc
sub
push
aaa
add
mov
jno
outs
outs
add
inc
rcl
xchg
je
cld
rcl
cmp
xchg
clc
fisub
fs
sbb
mov
call
popa
mov
loopne
cwde
push
lahf
or
je
shr
xchg
add
dec
cmp
pop
push
cmp
lds
sub
jmp
(bad)
fmul
jns
jg
mov
sub
inc
sub
mov
loopne
iret
dec
ret
sbb
ss
cmps
adc
add
lea
mov
repz
inc
sbb
bound
add
adc
loope
imul
or
pusha
cmp
sub
pop
sub
add
mov
or
das
mov
xor
jns
cmp
push
mov
mov
mov
mov
push
push
inc
pushf
mov
pop
clc
loope
push
xor
ret
fwait
mov
xor
add
gs
fwait
dec
push
or
xchg
retf
cld
mov
test
stos
cmp
retf
inc
inc
outs
or
lahf
or
mov
and
adc
push
dec
test
pop
push
mov
call
add
xchg
adc
popa
or
lods
add
mov
arpl
and
cmc
test
js
xor
rol
add
push
aam
pop
push
mov
mov
add
mov
ror
arpl
dec
pop
adc
stos
pop
jbe
stos
push
bound
jg
dec
push
clc
adc
pop
into
fimul
ja
popf
pop
cmp
and
je
in
es
maskmovq
test
ret
movs
lea
mov
pop
scas
sbb
push
xchg
push
push
adc
add
xor
scas
mov
dec
jo
cmc
xchg
fstp
aaa
cmps
outs
pop
mov
add
sub
std
sub
and
cmp
dec
inc
sub
sbb
sub
pop
jb
mov
(bad)
mov
xchg
sub
stos
adc
xor
in
cmps
cmps
cld
xor
sbb
add
mov
dec
or
add
add
ins
rcr
add
dec
outs
jmp
mov
je
sub
and
dec
in
xchg
sub
jmp
xor
dec
dec
sbb
add
adc
push
mov
cmp
pop
dec
xor
and
stos
sbb
pop
mov
add
sub
or
xor
or
xchg
mov
in
call
shl
fcomp
adc
and
jge
aam
inc
mov
stc
xor
inc
rol
jmp
add
fld
add
xchg
ins
fnstsw
ins
popf
inc
dec
or
xor
cmp
push
leave
ins
int3
les
aad
ror
push
ret
int3
pop
mov
push
loope
ins
aaa
mov
sbb
aad
sbb
xor
mov
add
xchg
dec
pop
jne
add
jbe
push
movmskps
and
push
in
call
xchg
or
lds
outs
add
(bad)
je
imul
push
or
test
dec
add
mov
es
dec
les
(bad)
test
mov
retf
mov
xchg
in
or
mov
popa
mov
xor
lods
repz
add
gs
jecxz
mov
add
push
sub
ret
dec
in
nop
fwait
mov
adc
scas
dec
lock
mov
jae
xor
ror
int3
pop
adc
mov
add
stos
jo
xchg
test
jno
lea
jp
ins
push
out
sub
psubusw
shl
div
pop
in
das
sbb
add
sar
push
or
add
add
popa
pop
xor
or
add
es
pop
sub
out
lock
scas
adc
cmp
mov
sbb
fnstcw
push
push
inc
popf
dec
add
push
push
pop
adc
dec
inc
(bad)
add
arpl
aad
jb
clc
xor
fsub
mov
arpl
add
and
and
dec
bound
inc
ror
out
bound
(bad)
shl
push
push
adc
inc
lea
or
call
mov
lock
or
nop
jmp
dec
pusha
shl
jmp
adc
ins
mov
mov
xor
dec
(bad)
add
ret
inc
or
sbb
ret
push
(bad)
lahf
in
or
movs
jp
mov
fwait
or
enter
adc
sahf
dec
add
mov
inc
xchg
or
loopne
(bad)
xchg
adc
pop
jo
les
jnp
or
mov
inc
pop
movs
je
push
mov
inc
movs
inc
pop
mov
or
dec
sbb
(bad)
mov
int
js
adc
test
in
lock
bound
call
lods
pusha
mov
sbb
push
or
cmp
rol
icebp
mov
mov
rol
in
adc
and
rol
adc
sbb
popa
push
test
sbb
pusha
pop
sub
and
xor
push
adc
cmp
pop
mov
test
add
push
ins
je
xchg
xchg
mov
inc
add
gs
push
js
or
adc
out
shr
push
imul
mov
rcl
in
pop
or
adc
push
arpl
pop
pop
aam
les
ja
sbb
xchg
je
(bad)
or
adc
gs
push
mov
inc
mov
lods
aam
pushf
push
in
cmp
pop
jne
cmp
or
sbb
xchg
mul
inc
mov
or
push
scas
and
add
movs
add
and
xchg
iret
dec
ins
ins
xor
cmps
retf
jmp
mov
rcl
or
ret
dec
cmc
mov
shl
push
pop
pop
mov
test
or
inc
mov
hlt
mov
jle
fsub
or
jg
jle
and
js
push
xor
and
inc
dec
sub
adc
pop
xchg
fidiv
pusha
mov
mov
add
cmp
sbb
pop
lahf
jne
pop
sub
ror
cmp
adc
test
test
shr
push
push
inc
cli
adc
xor
push
imul
adc
pusha
add
retf
cli
xchg
repz
dec
movs
cmp
and
cmp
xchg
mov
cdq
jg
push
(bad)
addr16
mov
cmp
repnz
or
or
mov
jg
fdiv
mov
mov
sbb
test
add
pop
popa
jne
fld1
jmp
push
xchg
hlt
xchg
xlat
call
cmp
add
mov
push
pop
add
sbb
add
mov
mov
mov
cmp
hlt
jge
push
xchg
and
xchg
or
or
lea
pushf
test
pop
pop
das
add
inc
fisubr
lds
call
pop
mov
adc
sbb
ret
pop
push
push
loopne
lea
jb
push
push
int3
add
je
jo
pusha
jne
dec
mov
and
push
xlat
adc
pop
mov
push
add
mov
idiv
xchg
push
pop
or
xchg
fsubr
lea
push
jmp
add
add
xchg
lds
mov
(bad)
fnstenv
sbb
addr16
jl
ds
nop
cdq
mov
xchg
add
jae
ror
sub
sbb
push
xor
push
jle
sub
sub
xor
clc
add
pop
xchg
mov
add
les
retf
js
jno
aad
sbb
sbb
cmp
movs
inc
and
retf
sbb
xlat
push
add
add
inc
popf
adc
fcom
and
sbb
adc
jg
adc
adc
sub
and
outs
adc
xchg
and
cmp
pop
iret
mov
call
xchg
dec
and
sahf
cmp
sbb
xlat
add
push
and
jmp
cmpxchg
pusha
add
xor
mov
adc
inc
scas
sbb
fwait
clc
xor
sbb
ret
das
sbb
mov
rol
or
es
daa
sbb
or
push
xchg
or
push
dec
push
ins
cmp
pusha
pop
add
mov
push
(bad)
adc
inc
mov
add
push
and
inc
jg
ror
jmp
adc
fs
dec
add
fdivr
jne
push
dec
dec
mov
add
jnp
pop
pop
not
aam
mov
jbe
adc
or
jo
dec
dec
clc
mov
and
cs
or
test
lods
or
jmp
and
es
icebp
ret
call
lds
adc
jo
popf
outs
scas
or
bound
sbb
mov
sbb
xchg
adc
push
icebp
test
sbb
je
(bad)
bound
mov
lea
jno
loope
int
pop
xchg
and
ret
in
or
xor
shl
or
dec
sbb
xchg
xchg
scas
pop
add
inc
clc
mov
and
or
sbb
rcr
pop
ret
or
inc
lds
paddb
pushf
popf
lods
mov
mov
sbb
sbb
xor
cmp
jmp
mov
sbb
dec
cld
out
pop
mov
jecxz
outs
daa
icebp
xchg
xor
push
pop
outs
(bad)
cmc
jne
mov
jae
xchg
aaa
add
adc
add
adc
aaa
(bad)
jmp
popa
popa
rcr
add
jle
cmp
ret
and
(bad)
xor
inc
mov
mov
loope
add
and
push
add
xchg
and
add
cdq
inc
addr16
push
or
sbb
pop
gs
xor
adc
pusha
nop
jl
mov
mov
mov
(bad)
in
xchg
aad
fcomp
cmp
out
test
jne
cmp
sti
sub
or
jmp
dec
call
push
jmp
lahf
cld
sbb
add
test
add
push
das
cli
test
and
mov
nop
pusha
scas
dec
adc
inc
mov
add
push
imul
sub
daa
cmps
in
cmp
jbe
add
mov
pusha
cmp
popa
xchg
in
or
or
shr
mov
push
mov
cdq
rcl
out
jmp
sbb
xchg
addr16
push
imul
dec
mov
xor
adc
cmp
nop
mov
push
push
js
push
or
mov
cmp
dec
mov
and
jmp
mov
cmps
lock
sub
pop
xchg
in
pushf
xchg
add
jmp
inc
add
fiadd
loope
iret
or
fiadd
js
dec
add
add
popa
cmps
stos
ror
rcr
jl
add
jmp
cmp
mov
es
inc
(bad)
cs
cli
mov
push
xchg
je
adc
(bad)
xchg
cmp
dec
clc
xor
pop
fcmovnbe
xor
pop
add
or
mov
ja
jbe
shl
retf
popa
loope
push
repnz
cli
inc
jl
pop
aad
movs
pop
movs
jne
mov
js
or
add
outs
add
test
out
push
cmp
mov
in
dec
lods
in
cmp
add
ss
jg
in
mul
das
mov
stos
push
mov
(bad)
push
loopne
aas
add
pusha
add
add
push
fsubr
inc
fs
xchg
dec
adc
push
mov
mov
lea
xchg
xchg
push
adc
and
movzx
sub
pop
data16
mov
fist
mov
mov
div
push
out
lea
mov
sti
and
xor
nop
je
mov
arpl
retw
mov
xchg
jg
loope
add
pop
imul
push
sub
mov
sti
add
pop
add
imul
adc
pop
clc
cmp
adc
lea
xchg
sub
stos
mov
or
in
scas
add
dec
inc
pop
(bad)
int
mov
add
sbb
push
inc
ret
inc
dec
add
ds
push
(bad)
(bad)
loopne
mov
mov
enter
(bad)
pop
xor
iret
mov
nop
test
xchg
add
daa
fistp
jo
mov
mov
xchg
pushf
sub
inc
dec
jmp
adc
xor
add
dec
cmp
xchg
push
push
lock
and
fstp
hlt
add
push
jo
rol
loop
nop
inc
inc
jp
inc
rcl
jg
or
add
ins
adc
dec
and
(bad)
sub
sub
push
leave
sub
(bad)
mov
mov
fdiv
mov
dec
lds
int3
daa
call
or
mov
adc
fimul
cmp
je
mov
pop
pop
aas
jg
sbb
push
pop
mov
jg
(bad)
mov
js
ja
push
mov
adc
imul
push
inc
or
adc
(bad)
inc
daa
test
inc
cld
or
sbb
inc
pop
jo
jmp
jns
and
hlt
cmps
hlt
icebp
and
popa
sbb
adc
cmps
scas
or
xchg
dec
adc
call
rol
aas
popa
sti
fdiv
push
xchg
retf
cmp
in
push
or
fcom
fadd
dec
mov
xchg
es
add
inc
push
jae
push
fisttp
adc
pop
push
push
loopne
jne
ja
test
mov
inc
add
and
inc
jl
arpl
bound
mov
(bad)
ja
sar
and
push
sbb
(bad)
daa
(bad)
xlat
cdq
add
retf
stos
and
mov
inc
jne
adc
xor
aas
jmp
dec
adc
popf
imul
mov
stos
dec
xchg
xchg
inc
or
mov
pop
jns
pop
and
dec
movs
lods
inc
dec
test
inc
cdq
inc
jb
mov
lock
fcom
adc
test
(bad)
cmovnp
clc
pop
aas
cmp
inc
and
mov
mov
popf
xchg
mov
mov
(bad)
bound
mov
scas
and
cmps
jne
cmp
mov
aaa
cmp
add
jg
adc
pop
push
ja
add
arpl
inc
cld
in
dec
jae
movs
push
pop
push
pop
scas
test
jmp
ins
pop
ins
and
inc
and
inc
adc
sub
in
and
inc
add
in
pop
xor
push
xchg
inc
push
add
cmp
or
add
push
xor
sbb
inc
cli
pusha
mov
mov
jecxz
mov
aas
dec
or
sub
xor
xchg
jp
xchg
mov
add
and
loope
out
xor
rcl
pop
test
mov
xchg
neg
push
das
mov
movsx
cmp
daa
adc
add
fmul
(bad)
sbb
pop
and
jg
ja
jp
mov
cmp
mov
fcom
jo
int3
sbb
popa
cmp
ins
ret
sbb
sbb
xchg
sar
inc
retf
pop
pop
adc
ins
test
pop
inc
dec
jmp
scas
cli
xor
xchg
push
enter
(bad)
ror
push
and
push
adc
ins
mov
lea
mov
rol
jmp
push
adc
push
push
inc
js
and
stos
loope
out
call
mov
sbb
sbb
sbb
imul
jmp
mov
outs
ret
scas
mov
jo
jno
pop
jbe
enter
sub
pusha
mov
add
push
and
shl
xor
js
mov
loope
call
je
and
ds
push
pop
pop
in
push
out
test
push
mov
or
adc
(bad)
adc
dec
(bad)
pop
repz
mov
mov
daa
fmul
add
xor
fcom
xchg
mov
lock
movs
and
inc
icebp
sbb
aaa
cmp
pop
jne
clc
(bad)
push
aad
push
mov
add
pop
and
ins
inc
or
push
sti
adc
pop
mov
xor
arpl
shl
jns
add
and
push
add
and
or
jmp
push
push
imul
add
and
test
jmp
sar
xor
cs
mov
sub
mov
push
add
push
cmp
pop
jg
jl
sar
ret
sub
mov
outs
jmp
add
das
imul
loopne
or
push
js
xor
or
inc
arpl
add
xor
sbb
add
mov
push
mov
sub
xor
lods
ret
cmp
or
xor
push
and
loopne
xor
loopne
cmp
mov
cmp
mov
rol
ret
mov
jmp
imul
add
loope
mov
stc
mov
out
retf
sub
int
shl
stos
(bad)
icebp
fwait
add
fs
rcl
cmp
in
push
cwde
ins
or
or
adc
add
push
int
push
call
ja
(bad)
pop
pop
and
shl
xlat
je
cmp
ror
mov
movs
cmp
and
pushf
test
pop
mov
cdq
add
inc
ins
lea
add
inc
xor
jg
xchg
sbb
mov
fdiv
inc
outs
jmp
mov
ins
loopne
(bad)
adc
jne
enter
sub
inc
xor
js
dec
add
mov
mov
sbb
enter
push
xor
pop
adc
hlt
popf
ror
xchg
inc
mov
xchg
mov
shl
aam
sub
(bad)
xor
ins
movs
or
popa
jo
or
test
jnp
(bad)
aas
jmp
cs
add
jbe
jno
out
adc
outs
add
jp
ror
lods
lahf
xor
lea
push
imul
xor
cmp
adc
lea
xchg
inc
aam
pop
sub
mov
not
loopne
mov
shl
in
inc
shr
jp
add
rcr
jo
shl
hlt
push
es
mov
sub
jns
add
mov
movs
sbb
jl
js
syscall
nop
loop
or
adc
sub
es
sbb
mov
inc
ins
or
mov
add
add
xchg
retf
xor
and
mov
mov
xchg
in
push
xor
xor
cmp
adc
xchg
push
push
lock
add
xchg
popa
lods
aam
pop
adc
ret
push
inc
xchg
mov
jl
fdiv
and
sub
nop
xchg
aas
les
ret
or
rcl
mov
sub
fistp
in
(bad)
lock
rol
hlt
ror
lods
call
popa
cmp
lock
inc
lea
mov
pop
cmp
(bad)
(bad)
jmp
cwde
inc
or
cmps
inc
imul
sub
fucomi
sub
or
cmp
jne
aas
jge
adc
add
jle
pushf
cs
inc
popf
and
sbb
scas
shr
mov
sbb
repz
xchg
sbb
cdq
or
in
pop
cmp
jg
xor
mov
add
xchg
loopne
pop
pop
test
lea
iret
(bad)
(bad)
stc
or
mov
pop
mov
ds
mov
jo
ficom
xchg
cdq
nop
push
push
sub
scas
in
pop
add
cmc
retf
jae
pop
pxor
loope
cs
int3
add
sbb
and
pop
adc
cs
cmps
mov
adc
mov
sbb
add
ud0
pushf
cwde
adc
adc
pop
add
xchg
mov
rcr
inc
sti
es
loope
xchg
xchg
push
dec
jg
mov
ffreep
adc
ja
inc
dec
jb
adc
adc
mov
in
add
aaa
or
sub
call
stc
sar
inc
call
pop
cmp
je
test
aaa
lds
add
add
outs
pop
jne
mov
sub
xor
and
dec
adc
enter
push
push
mov
pop
push
int3
cwde
cld
sbb
mov
or
jo
clc
add
inc
and
dec
add
loopne
push
pop
add
add
push
add
fisttp
nop
mov
outs
push
add
push
add
jne
or
push
adc
jnp
arpl
push
add
ins
dec
fst
xor
cmps
and
add
aaa
gs
adc
xchg
aaa
pop
and
out
jl
clc
test
pop
cld
inc
add
add
add
mov
movs
mov
sbb
lods
(bad)
mov
loope
clc
xchg
nop
dec
inc
ins
es
xchg
lock
sub
mov
or
rcl
leave
scas
adc
loope
mov
or
push
inc
inc
mov
add
(bad)
jne
mov
je
sub
outs
push
add
loope
pop
xor
cmps
stos
int
inc
dec
fbstp
or
test
ja
cmp
add
mov
movs
sbb
rcr
inc
add
cmp
jno
inc
daa
adc
cmp
mov
push
shl
fsubr
imul
mov
adc
and
mov
xchg
lds
add
lea
push
jp
xor
int
add
jecxz
mov
test
sbb
jo
or
xchg
mov
mov
add
xchg
xchg
movs
rcr
add
adc
mov
ins
test
cwde
je
adc
and
xchg
sub
mov
jb
dec
lods
adc
push
adc
cmp
sub
adc
outs
movs
inc
sub
or
cli
add
add
cmp
ror
pop
movs
shl
and
pop
dec
ret
or
inc
xor
jae
adc
dec
enter
sub
or
dec
or
test
std
adc
dec
je
out
pop
mov
adc
pop
test
adc
retf
xor
jne
or
adc
or
or
sbb
jne
cmp
add
ret
dec
shl
int3
lahf
push
sub
xor
pop
add
push
adc
(bad)
pop
dec
dec
ret
sbb
add
jmp
cmp
je
mov
fimul
aaa
(bad)
sbb
jmp
and
adc
imul
and
sbb
add
movs
adc
ror
pop
or
add
add
es
enter
sbb
inc
or
pop
cmp
cdq
ins
fisub
lods
je
or
or
dec
add
and
icebp
(bad)
dec
add
adc
or
or
fiadd
std
mov
les
push
pop
pop
push
xor
and
loope
dec
pop
jg
xor
lock
adc
shr
and
jmp
jne
rcl
frstor
shl
or
xchg
sar
sub
push
inc
mov
mov
add
nop
sbb
mov
or
clc
int
xchg
jae
inc
cld
mov
cmps
mov
fwait
or
and
sbb
dec
(bad)
or
inc
sbb
scas
push
push
gs
cmp
push
add
outs
test
nop
or
stos
push
push
add
pop
adc
inc
jne
xchg
nop
(bad)
push
clc
mov
inc
add
imul
(bad)
out
shr
cmp
scas
jo
sbb
std
ret
inc
xchg
adc
hlt
mov
mov
jg
mov
and
out
inc
loop
dec
push
sub
rcl
add
stos
xor
mov
cli
cmp
sub
sbb
push
dec
imul
push
sbb
jne
xor
mov
stos
mov
or
and
push
and
mov
mov
in
or
sbb
push
inc
cdq
sbb
xor
pop
and
push
mov
sub
lods
mov
scas
clc
adc
icebp
inc
daa
mov
add
imul
and
or
add
fidiv
cmp
imul
test
stos
adc
push
cs
xchg
je
mov
mov
jb
adc
jp
fimul
add
inc
popa
int
pop
pop
(bad)
sbb
dec
sub
test
jl
inc
xchg
cs
fiadd
fild
sub
mov
mov
popf
or
pop
jo
sar
sub
ret
or
gs
pop
and
xchg
adc
sysexit
clc
test
add
dec
sbb
cdq
test
inc
sub
cmps
dec
jo
ret
lock
jno
js
jmp
pop
mov
ja
inc
xor
inc
dec
mov
aad
ret
inc
sbb
and
pusha
inc
mov
push
dec
jmp
dec
in
test
lock
mov
das
sub
push
rcr
dec
fstp
ror
sbb
je
adc
or
jmp
inc
adc
pop
inc
clc
imul
ret
add
fwait
jmp
adc
xchg
std
bswap
outs
cmp
jne
mov
call
rol
dec
push
test
iret
jbe
fbstp
arpl
out
add
add
out
pop
inc
test
mov
sub
mov
jns
stos
mov
test
or
inc
sbb
jmp
jg
cmp
adc
add
mov
pop
mov
xor
cmp
mov
fild
xor
test
into
xchg
jg
push
cmp
jg
je
daa
xor
cmp
add
sub
jb
cmp
pop
in
daa
mov
imul
push
add
mov
add
jge
add
pop
mov
je
push
mov
pop
arpl
outs
syscall
(bad)
std
dec
adc
and
sub
mov
je
pop
pop
adc
xlat
test
retf
adc
mov
pop
cmp
cmp
inc
adc
loop
(bad)
mov
add
lds
jle
in
push
gs
push
inc
mov
out
out
pop
cdq
sub
lds
lock
(bad)
clc
and
sub
and
je
sub
adc
add
gs
inc
or
mov
es
push
lahf
leave
sbb
sbb
pop
inc
push
mov
dec
(bad)
mov
inc
lock
mov
mov
mov
jmp
jne
or
ja
sbb
inc
outs
push
mov
das
je
push
jmp
dec
scas
add
jmp
xchg
jmp
stc
add
in
or
add
sbb
push
pusha
cmps
lea
inc
bound
adc
ss
ins
dec
push
add
add
sbb
lea
cli
jl
or
sbb
inc
inc
pop
jecxz
or
pop
jo
jmp
lds
push
pop
mov
add
mov
dec
cmp
mov
mov
(bad)
and
retf
ret
mov
sbb
dec
jle
cmp
shr
out
pop
adc
int
cwde
push
inc
inc
lahf
mov
gs
retf
sub
ret
retf
dec
inc
aam
ret
adc
adc
dec
jl
push
sub
push
dec
jbe
adc
pop
jle
in
inc
add
loopne
or
dec
jne
and
fsub
test
and
add
lods
je
inc
sub
scas
in
sub
sub
jl
adc
inc
(bad)
mov
fnstcw
ds
jp
sbb
lock
leave
fild
inc
retf
mov
inc
dec
jne
sub
sbb
mov
out
(bad)
ins
loopne
jl
adc
test
dec
(bad)
ja
lods
jecxz
jne
add
adc
loopne
sbb
inc
sti
sbb
in
mov
dec
sub
and
mov
ins
outs
add
jmp
inc
add
pop
loope
pop
xor
push
xor
and
shr
xor
xchg
sbb
rcr
xchg
mov
or
cs
sbb
cmp
sub
dec
mov
cmp
xor
in
add
iret
inc
(bad)
adc
jmp
outs
xlat
push
dec
push
pop
mov
adc
(bad)
int3
test
pop
mov
add
add
pop
cwde
scas
cmps
xlat
jne
mov
je
dec
jne
and
push
(bad)
fld
ret
in
and
test
xchg
adc
nop
or
add
pop
jl
mov
inc
push
jae
inc
nop
pop
xor
jmp
jge
pop
je
loopne
adc
sbb
jge
and
mov
or
outs
inc
(bad)
into
push
adc
icebp
jnp
push
mov
pop
mov
mov
loop
add
add
pushw
or
add
jbe
aaa
adc
adc
add
sub
outs
stc
and
inc
xchg
sahf
add
mov
inc
dec
mov
jo
sbb
shl
shl
enter
adc
add
jl
xchg
ja
adc
pop
cmp
fisub
cwde
xor
jmp
mov
cmp
jle
sbb
clc
dec
mov
cmp
sbb
fwait
or
add
push
inc
mov
(bad)
adc
inc
or
mov
sbb
mov
lods
and
jmp
adc
adc
push
je
push
cmps
fisubr
sub
retf
add
or
popa
xor
sub
int
xchg
je
push
fmul
call
mov
iret
sbb
pop
pop
inc
sub
mov
xchg
push
add
inc
sti
dec
pop
mov
jg
and
mov
sub
iret
fbstp
dec
ins
or
call
pop
inc
in
sub
sbb
loop
or
fwait
ins
shl
dec
arpl
mov
or
shr
inc
movs
ret
scas
jmp
jmp
adc
das
out
pop
add
inc
adc
or
shr
add
sub
push
shl
mov
jo
jbe
add
ret
test
sub
ret
adc
inc
sub
or
shl
xor
sbb
lahf
call
adc
pop
add
fnstcw
dec
mov
outs
pop
imul
add
xor
je
mov
xor
cwde
mov
dec
inc
jne
scas
sub
inc
sbb
pusha
or
dec
jle
add
cmp
sbb
in
es
inc
sbb
add
push
cmp
inc
xor
dec
fiadd
and
fld
xor
fcomip
pushf
and
stos
jecxz
popa
add
in
je
(bad)
pop
inc
int
inc
out
fcom
or
test
shl
fstp
push
icebp
mov
jne
shr
and
mov
cmp
scas
mov
inc
fdiv
dec
xor
ds
pop
fsubr
cmps
jl
mov
inc
jae
into
mov
ins
add
ja
lds
sub
inc
cwde
hlt
jg
or
mov
pop
xchg
xlat
ror
jb
daa
adc
sub
hlt
lds
pop
stos
adc
xor
in
enter
or
pop
ins
jne
fcomp
push
xor
movs
push
das
sbb
ror
inc
or
fstp
cmps
call
inc
and
mov
test
jmp
dec
arpl
adc
push
cmp
mov
test
test
mov
popa
cmp
mov
pop
gs
cmp
xchg
mov
mov
and
out
popa
mov
inc
cmp
or
js
inc
cmp
add
sbb
aad
push
pop
or
or
xchg
push
retf
xchg
add
add
adc
or
sar
jmpw
in
xchg
test
push
jmp
mov
std
cmp
or
rcl
push
je
cmp
jle
pop
inc
imul
or
push
jnp
xor
test
test
inc
pop
outs
loop
jge
adc
sub
call
push
or
ror
add
iret
jecxz
in
test
dec
loopne
adc
xchg
sar
sbb
mov
mov
mov
push
push
mov
fbstp
push
mov
call
and
(bad)
or
inc
pop
mov
fdiv
or
xchg
dec
pop
and
mov
rol
jle
lds
lods
fnsave
add
ins
push
out
hlt
sub
sbb
test
mov
or
ds
aam
movs
mov
xchg
fs
sub
das
loop
add
and
aas
shl
mov
push
jmp
and
adc
test
or
xlat
add
or
adc
or
push
enter
sbb
mov
sbb
mov
inc
pop
jge
(bad)
mov
fcom
inc
inc
fmul
push
bound
rcpps
xchg
xchg
add
push
xchg
lahf
out
pop
rol
fs
mov
or
inc
cmp
mov
sub
cmp
into
and
into
sbb
add
sub
or
inc
add
xor
inc
shl
mov
mov
shl
push
push
test
or
add
push
jno
xchg
xor
dec
push
jmp
jnp
pushf
fwait
cwde
movs
pop
fist
and
popa
xchg
inc
add
fmul
cld
adc
push
cld
push
sbb
add
mov
jle
lock
scas
dec
fdiv
mov
lea
fdivp
push
or
push
lock
mov
mov
jnp
add
inc
jge
fld
pop
ds
inc
mov
jmp
jle
pushf
daa
mov
push
out
push
push
inc
ret
pusha
or
mov
nop
or
jmp
mov
push
test
call
add
sub
dec
rcl
or
shl
mov
movs
and
lahf
mov
pop
xchg
pop
test
add
inc
xchg
adc
popf
fimul
xor
dec
scas
add
mov
or
and
add
and
les
scas
ror
add
aam
mov
push
loope
inc
or
cmpps
mov
pop
je
or
dec
in
fnstsw
fdiv
mov
sbb
ins
loope
pop
cmp
jae
pop
lock
or
in
push
push
cmp
lods
(bad)
sar
test
cmp
fsub
shl
mov
scas
xchg
mov
xor
sbb
enter
add
lahf
shr
lock
add
test
or
ret
mov
test
sbb
(bad)
das
push
pop
add
jmp
sub
call
loopne
inc
and
adc
push
lods
push
cmp
sbb
int3
xlat
rcr
or
jo
pop
sbb
push
fmul
adc
mov
xchg
adc
outs
push
cmp
arpl
pop
mov
call
ds
push
jmp
int3
arpl
cmps
scas
add
pushf
push
repz
add
je
sub
sbb
pop
or
mov
jns
pop
xchg
cwde
hlt
loopne
sub
mov
add
jl
or
jne
pop
repnz
rcr
and
add
sti
dec
inc
mov
add
pop
sbb
clc
jl
or
cmp
inc
mov
sar
sub
inc
push
loopne
paddsb
sbb
adc
xchg
sbb
add
jge
inc
loopne
repz
jge
frstor
fsubr
sbb
lahf
jmp
cmp
mov
shl
or
or
adc
push
mov
inc
and
lods
adc
test
add
and
inc
dec
or
lock
fadd
scas
add
movs
add
sub
mov
mov
or
jecxz
imul
cs
xor
adc
iret
cmp
push
dec
int3
sub
dec
packsswb
mov
sbb
pop
xor
dec
mov
sub
sub
aas
push
lea
mov
sbb
popf
cwde
push
cmp
cmc
adc
les
fcomp
sbb
shl
pop
cmp
mov
iret
inc
sti
adc
push
dec
mov
inc
add
fild
(bad)
sbb
add
cmp
inc
ds
cmp
daa
cmp
pop
cmp
jle
sbb
dec
inc
jmp
cmp
and
dec
sbb
das
(bad)
ds
jmp
sub
mov
adc
out
fld
sub
je
jge
pop
or
loop
pop
mov
push
mov
inc
pop
inc
arpl
(bad)
push
lock
out
fiadd
xor
dec
cmp
fld1
sbb
arpl
cmp
loop
push
rol
call
(bad)
fstp
push
shl
ret
push
aaa
pop
xchg
cmc
es
mov
or
mov
mov
xchg
jnp
in
add
cmp
xor
xor
test
cli
in
add
xor
mov
mov
mov
inc
scas
mov
sub
mov
in
add
lea
test
push
adc
sbb
sub
push
rol
jne
add
and
lock
rcr
inc
rol
xchg
inc
(bad)
pop
inc
mov
hlt
imul
push
retf
pop
or
sub
pop
clc
and
dec
test
push
clc
pop
pop
in
inc
sub
les
sub
out
mov
sbb
add
sbb
inc
or
aad
push
xchg
add
or
and
push
push
sub
add
adc
and
mov
mov
add
adc
popf
dec
loopne
fwait
inc
or
mov
add
and
add
sub
mov
push
and
int3
ror
add
xlat
or
sbb
jne
(bad)
push
fisttp
loope
push
jmp
jne
sbb
gs
cli
popw
jae
adc
jmp
sub
or
ja
adc
mov
fstp
clc
push
sbb
add
test
mov
jnp
cdq
pusha
push
xchg
add
in
pusha
stos
rol
cmp
jne
loope
mov
or
(bad)
js
pop
inc
and
fmul
mul
mov
call
xor
add
inc
sbb
xchg
nop
leave
in
lods
ss
leave
fld
add
xor
bound
jmp
and
sbb
push
leave
int3
loopne
loop
or
or
and
add
jne
adc
mov
(bad)
ficomp
fucomp
pop
push
push
repz
fimul
es
ret
inc
add
test
ins
mov
loope
ret
int
xor
movs
jo
xor
sbb
inc
clc
xchg
nop
push
cdq
mov
dec
xchg
cmp
cmp
push
sbb
xchg
sbb
mov
inc
sbb
loopne
jbe
ret
cmp
outs
loope
mov
je
dec
je
jmp
jg
jmp
adc
jmp
fsubr
or
push
js
clc
adc
loopne
push
cld
mov
mov
sbb
push
or
add
add
shl
sub
and
fstp
add
inc
popa
sub
inc
sbb
xchg
ror
sub
mov
xchg
fidivr
hlt
aam
pop
loop
call
push
or
add
pop
adc
add
push
cmp
cmp
add
cwde
and
mov
push
or
inc
sbb
jmp
pop
push
cmp
jmp
jne
adc
jnp
stos
inc
fidiv
mov
xor
dec
(bad)
mov
xor
imul
or
cmp
cmp
jne
les
mov
mov
xchg
mov
add
shr
mov
out
sbb
jl
mov
shl
sbb
jecxz
inc
push
pop
jmp
(bad)
cmp
jae
or
int3
in
push
not
inc
or
add
cli
movs
xchg
adc
lahf
mov
clc
xchg
sub
call
lahf
sub
call
test
inc
push
and
scas
retf
add
add
dec
call
push
add
or
dec
jl
lock
mov
and
cmp
mov
mov
xor
xor
pusha
outs
ret
fist
sbb
or
pop
sub
cmp
sbb
add
dec
aaa
fsub
xlat
mov
xchg
dec
xlat
push
in
enter
xor
clc
xlat
mov
inc
add
not
repz
lea
mov
jns
dec
mov
retf
mov
push
aas
push
pop
adc
and
jg
push
xlat
lods
ror
mov
and
inc
or
mov
sub
adc
and
adc
(bad)
push
scas
mov
push
push
mov
pop
pop
jmp
repz
add
das
std
add
inc
sub
aaa
mov
lahf
xor
push
js
inc
bndstx
icebp
mov
add
push
add
out
xchg
xor
push
push
xchg
cmp
in
repz
pushf
xchg
mov
js
nop
inc
cmp
pop
fcmovnu
aam
daa
mov
add
cdq
inc
cwde
push
push
push
cmp
or
les
xor
ret
push
fcomp
add
jne
dec
hlt
mov
sbb
mov
retf
in
in
add
mov
add
xchg
retf
sbb
rcl
inc
lock
imul
push
test
xor
js
xchg
nop
add
cdq
rcl
lods
sbb
je
and
push
sbb
in
push
mov
dec
pushf
pushf
enter
jmp
xchg
xchg
xor
sub
ja
shl
(bad)
mov
fcomp
sub
mov
cli
dec
enter
push
call
or
rcl
jmp
mov
add
sub
add
push
sub
inc
shr
pop
inc
add
ror
dec
lock
add
sub
pop
pmulhuw
cdq
pusha
test
add
pop
or
xchg
or
or
fisttp
mov
or
adc
gs
push
(bad)
adc
add
pop
pop
xchg
cdq
cmp
sbb
mov
and
or
lods
adc
adc
jbe
jle
shrd
(bad)
mov
inc
adc
adc
addr16
jo
add
lods
sbb
pushf
add
mov
punpckhdq
or
shl
jb
add
loop
pop
xchg
dec
clc
and
sbb
jo
repnz
out
jle
cli
movs
iret
jg
sub
in
paddsb
push
mov
mov
inc
stc
je
xor
aaa
and
jecxz
aad
repnz
fild
das
retf
pop
fild
sbb
pop
dec
sub
push
test
sbb
loopne
xchg
xor
aas
outs
and
adc
mov
pop
jne
jo
xchg
mov
cmp
xor
mov
sbb
dec
test
add
fdivr
and
fstp
adc
sub
cwde
mov
les
ficom
inc
pop
stos
jl
sbb
or
mov
sbb
and
and
and
lea
mov
sbb
xor
push
pop
lea
(bad)
inc
pop
jbe
test
sub
push
or
xchg
cmp
push
jmp
imul
loopne
pushf
mov
xor
or
shr
sub
and
mov
adc
sub
push
mov
jg
mov
and
pop
push
sbb
push
ds
je
das
fwait
jle
test
cmp
loopne
jle
sbb
push
arpl
or
add
jb
push
pop
rcl
inc
or
adc
adc
lock
push
dec
add
leave
xor
xchg
movs
add
cmps
and
dec
mov
pop
xor
loope
add
add
or
push
adc
mov
pop
(bad)
sti
rol
adc
call
or
(bad)
mov
adc
or
sub
mov
xchg
xchg
xchg
pusha
call
pop
ret
addr16
push
sbb
ja
adc
add
lds
xchg
and
es
sbb
cmp
mov
mov
dec
or
lock
les
and
clc
dec
addr16
push
out
inc
sbb
push
test
in
pop
rcr
mov
mov
mov
push
dec
add
dec
mov
inc
dec
and
in
inc
in
cmp
jmp
add
ins
push
add
movs
xchg
and
arpl
jns
cmp
sub
ins
add
mov
cmps
in
xlat
xchg
xchg
or
and
mov
movs
dec
test
dec
cmp
push
mov
nop
push
push
add
cwde
pop
inc
lds
jo
outs
push
cmp
xor
fiadd
adc
jnp
adc
fs
inc
adc
add
shl
loop
xchg
dec
sub
push
pop
jo
push
pusha
push
adc
sub
(bad)
jnp
adc
lods
jb
jg
mov
pop
test
je
xchg
jge
jno
push
cmp
rol
sub
pop
push
pop
sbb
or
adc
and
sbb
or
and
xor
and
push
jecxz
pop
xchg
(bad)
sub
movs
and
mov
call
outs
je
mov
je
fwait
jno
cmp
mov
rcr
sbb
jmp
aad
or
dec
adc
xor
fucomip
data16
pop
xchg
fsub
pop
and
xor
daa
sbb
rcl
inc
adc
rcr
cmp
xchg
dec
mov
sub
adc
push
and
push
add
and
(bad)
loopne
sbb
xchg
or
ins
fs
xor
ret
cmp
pop
cmp
xor
mov
xchg
adc
inc
fsub
dec
mov
loopne
push
sub
sub
xlat
pop
cli
(bad)
push
(bad)
test
inc
pop
cmp
js
add
add
push
cmovnp
adc
adc
rcr
loop
cmovb
ror
mov
or
sub
sbb
cmp
fdivr
pop
dec
adc
pop
add
popf
or
push
sbb
or
xchg
test
sbb
add
lock
cli
test
enter
or
mov
jg
add
xchg
adc
push
inc
sub
mov
icebp
mov
and
cmp
sbb
xor
gs
dec
push
(bad)
sti
icebp
dec
dec
mov
pop
cli
mov
inc
test
xchg
test
add
pop
icebp
pop
rol
gs
xor
sbb
cmp
arpl
push
sahf
dec
and
stos
add
sub
mov
adc
add
pop
mov
xor
sbb
add
shl
(bad)
sbb
xchg
aam
hlt
sub
cmp
sub
mov
ins
test
add
dec
xor
pop
push
lea
lea
push
sar
and
imul
sbb
jb
jbe
push
push
aaa
add
mov
inc
inc
das
adc
sbb
and
and
inc
mov
and
inc
bound
jns
clc
cmps
aaa
add
hlt
test
mov
lahf
xchg
ins
cli
add
cli
cmp
dec
and
pushf
push
cmp
dec
mov
lods
repz
shl
rcl
mov
pusha
jnp
nop
sub
loope
adc
add
inc
jo
adc
repz
ficomp
ins
inc
int
sub
xor
retf
xor
jnp
and
mov
push
ds
sub
int
shl
push
sbb
dec
jg
xor
dec
mov
mov
xor
mov
adc
mov
push
(bad)
cdq
iret
inc
cmp
inc
sbb
out
mov
dec
(bad)
fldcw
cmps
loope
sbb
loopne
outs
xor
cmp
mov
dec
xchg
dec
cs
adc
or
xchg
dec
cs
sub
mov
pop
pop
fisub
sub
mov
add
movs
jmp
add
int3
das
adc
adc
adc
inc
inc
sbb
inc
adc
cmp
xchg
sahf
or
xor
or
mov
xor
mov
push
(bad)
or
pop
das
movs
test
arpl
mov
pop
aam
sbb
mov
pop
cld
push
sbb
inc
pop
bound
push
push
fstp
inc
or
ret
inc
xchg
mov
adc
aas
cmp
pop
aaa
ins
add
pusha
sbb
pop
xchg
mov
(bad)
iret
inc
add
xor
shl
cmp
sbb
fwait
mov
xor
push
in
or
outs
out
pop
jne
sbb
pop
shl
daa
push
jne
les
jnp
je
sbb
adc
lock
push
sbb
in
push
test
call
add
sbb
sub
pop
pop
xor
nop
xlat
inc
call
mov
pop
sub
and
mov
js
mov
in
or
add
pusha
(bad)
jecxz
mov
hlt
push
push
push
push
icebp
jmp
push
adc
push
retf
xchg
push
sub
mov
add
shl
les
int
or
pop
lock
xor
push
jne
jge
cmp
fidiv
push
mov
inc
es
mov
jecxz
ror
mov
or
mov
inc
popa
call
shl
mov
add
scas
xchg
or
popa
ror
sub
lea
cwde
leave
in
je
inc
ins
xor
call
lods
adc
je
setg
sub
fbld
adc
or
jmp
popa
and
addr16
in
jnp
ja
adc
cmp
xchg
dec
call
dec
test
ja
adc
and
cmp
jge
cld
pop
mov
mov
sub
clc
inc
shl
or
enter
add
and
sbb
mov
cmp
mov
cld
cmps
cmp
lea
adc
mov
imul
or
push
or
push
fisub
ds
ds
call
add
pop
inc
pop
xchg
out
pop
push
in
aad
pop
jle
pop
jo
mov
pop
rcr
mov
mov
mov
popa
arpl
or
xchg
loopne
push
cdq
xor
or
je
test
je
ins
inc
cmps
loop
push
push
aas
push
fcomp
dec
cmp
jo
add
or
movs
and
dec
adc
shl
ret
fst
test
pop
sbb
pop
enter
or
push
call
jmp
mov
cmp
jle
and
xchg
xchg
xchg
(bad)
pop
arpl
or
inc
je
test
icebp
add
icebp
push
lea
pop
dec
mov
addr16
or
sbb
pushf
pop
or
dec
add
cmp
or
sti
sar
rcl
shl
ret
adc
jge
inc
inc
hlt
adc
enter
or
sbb
nop
aaa
pusha
adc
push
enter
add
movs
test
cmp
addr16
les
nop
adc
jge
inc
jecxz
mov
xchg
and
inc
push
inc
or
pop
mov
or
jle
mov
gs
loopne
add
xchg
aam
mov
jp
je
xor
mov
and
rol
mov
inc
dec
mov
sbb
fs
mov
push
movs
adc
add
mov
push
jecxz
pop
push
pop
and
cmc
push
push
les
mov
stos
xor
jle
push
inc
jb
sti
lods
mov
call
nop
xchg
add
stos
test
call
cmps
push
ja
in
adc
or
or
mov
xchg
add
movs
sbb
jle
or
sysenter
xchg
inc
clc
das
add
xchg
dec
or
xchg
hlt
or
retf
xchg
mov
dec
push
in
call
mov
add
inc
fld1
or
in
lea
inc
mov
daa
fld
inc
in
nop
jne
jbe
bound
jno
enter
leave
pop
imul
(bad)
int3
push
inc
enter
int3
pop
(bad)
and
push
sbb
add
sub
jbe
fsub
fstp
push
aad
pop
add
inc
inc
sbb
stos
cmp
mov
lea
cmp
dec
xor
js
mov
repz
pop
sub
xor
sub
mov
xchg
div
mov
add
adc
daa
sub
add
test
add
sbb
add
adc
add
xor
ret
push
mov
sar
(bad)
in
xchg
ret
jmp
jge
mov
(bad)
rcl
(bad)
fisttp
and
dec
mov
adc
rol
mov
ret
(bad)
ror
add
pop
mov
inc
daa
dec
or
aam
mov
add
dec
ins
std
jmp
test
and
aaa
or
inc
jo
leave
cli
cwde
mov
inc
inc
dec
test
sbb
loope
es
shl
adc
mov
ja
push
pop
push
mov
loopne
pop
sub
xchg
jo
mov
mov
xchg
xor
or
jno
sbb
push
loope
mov
std
mov
clc
hlt
mov
mov
pop
sti
ss
mov
ret
add
call
xor
xor
loope
push
fstp
push
add
test
xor
rcr
outs
push
call
cdq
dec
loopne
and
imul
add
mov
mov
shl
sbb
mov
ss
sbb
cmp
ret
aas
or
jmp
jne
jmp
sbb
adc
pop
ret
cmp
nop
loope
ret
fs
and
or
aam
sbb
pop
fbld
pop
ror
jle
mov
scas
xor
scas
cdq
jne
gs
adc
push
pop
sub
or
test
sbb
icebp
or
pop
inc
jmp
jb
sbb
inc
loope
adc
xor
and
xor
xor
xor
and
jmp
sbb
xchg
add
adc
jo
(bad)
or
jmp
sbb
and
sub
mov
adc
sbb
mov
adc
push
sub
add
adc
xor
imul
arpl
movs
test
xchg
mov
adc
sbb
enter
dec
dec
xor
sbb
js
mov
addr16
adc
imul
outs
les
ror
test
xor
sub
pushf
mov
pop
je
les
or
mov
ret
ror
jb
pop
clc
push
xchg
lea
push
push
lods
pop
cmps
mul
add
xchg
sub
sbb
lea
scas
push
xchg
inc
enter
pop
mov
and
sub
in
adc
xchg
xchg
pop
mov
icebp
imul
push
aam
pushf
adc
out
sbb
pop
xchg
or
push
pop
xchg
nop
retf
sbb
cmp
mov
push
sbb
jb
push
rol
jle
loopne
pop
dec
mov
sub
dec
or
sbb
and
je
xor
sub
push
call
jnp
inc
add
inc
sbb
cmc
and
ror
mov
sbb
fcmovbe
call
jecxz
ss
adc
dec
dec
add
cld
arpl
cld
popf
push
dec
and
dec
das
push
push
in
mov
cmp
push
sbb
sub
dec
pop
push
loopne
xor
retf
mov
dec
inc
dec
adc
inc
call
push
mov
sbb
add
sub
pop
mov
das
loopne
inc
dec
sub
or
or
movs
inc
or
pop
(bad)
push
sbb
cmp
inc
sbb
push
js
lods
mov
and
fmulp
xor
and
pop
cmp
pop
enter
sub
ret
or
movs
mov
push
loope
je
inc
xchg
cli
hlt
add
das
adc
xchg
push
les
or
sub
sbb
fdiv
xchg
test
xor
xor
mov
sbb
loope
add
xchg
loopne
pop
and
jmp
nop
xchg
fsubr
mov
adc
ror
sar
pop
dec
jecxz
iret
mov
mov
sub
add
cwde
xor
mov
add
cmp
icebp
fadd
jo
int3
add
lock
cmp
mov
inc
mov
sbb
or
in
ror
and
nop
jecxz
mov
nop
xchg
or
dec
and
sub
clc
dec
inc
movs
mov
sbb
or
dec
stos
je
scas
xor
leave
jmp
inc
mov
lock
mov
inc
sbb
(bad)
mov
pop
jg
jmp
inc
popa
and
jl
inc
or
ins
adc
adc
or
gs
fild
mov
dec
mov
scas
fcom
or
push
aam
and
mov
enter
stos
dec
ins
xor
dec
inc
mul
and
xchg
retf
ror
jno
sbb
pop
shl
dec
pop
daa
cmp
mov
mov
jne
jbe
call
push
std
push
cmp
cmp
jnp
and
in
in
retf
iret
or
push
push
jl
and
js
js
dec
int3
lock
mov
mov
pop
into
push
sbb
ret
dec
js
ins
pop
push
or
push
push
imul
test
adc
sub
xor
jp
cmp
or
adc
jle
push
aaa
sub
in
fwait
sbb
xor
pop
jae
je
sbb
add
sbb
test
in
push
fs
inc
jne
aad
jae
xlat
fmul
inc
leave
mov
hlt
test
xor
fdivr
push
js
or
enter
fcom
jbe
and
xor
cmp
pop
dec
pop
ret
nop
aam
xchg
dec
jae
or
xor
and
gs
rol
inc
mov
(bad)
push
ss
je
or
xor
push
dec
and
xlat
cmp
stos
sub
test
xor
adc
clc
leave
jmp
dec
int
je
or
je
mov
add
push
je
mov
mov
or
push
jae
dec
lock
adc
pop
inc
and
sbb
cmps
xlat
nop
or
mov
sbb
daa
and
jno
and
sbb
gs
pop
jo
movs
call
fs
xchg
nop
jmp
pop
and
mov
lock
dec
ret
inc
test
cmp
fnstcw
inc
cmp
cs
aad
movs
xchg
adc
xor
and
mov
jge
out
push
inc
es
repnz
rcl
rcr
or
loope
or
push
mov
inc
lock
and
or
inc
and
inc
jo
(bad)
lods
or
sub
jle
cmp
pop
sbb
push
js
enter
or
add
cmp
ror
xor
add
adc
sub
or
cs
mov
or
ror
retf
adc
push
sbb
jle
jne
cdq
and
add
movs
sub
not
xor
das
and
ja
test
test
arpl
pop
and
push
addr16
add
enter
push
jmp
sbb
or
inc
mov
push
inc
jg
add
enter
in
mov
ret
xchg
addr16
je
inc
je
cmp
ret
pop
shl
je
sub
je
sbb
sti
lock
pop
adc
je
stos
adc
adc
cmps
pop
mov
pop
ret
daa
pusha
lea
add
scas
dec
mov
push
popa
adc
jmp
mov
mov
sub
outs
or
pushf
sub
adc
inc
dec
repz
in
add
and
mov
(bad)
push
inc
mov
fstp
xchg
jmp
xor
inc
add
add
loopne
sub
movs
or
inc
or
mov
mov
sar
or
nop
and
add
sbb
rcl
pushf
sbb
test
inc
popa
imul
add
push
sbb
sbb
dec
push
pop
fcom
dec
ret
pop
dec
sub
dec
jl
fwait
add
loope
rol
or
cli
xchg
mov
pop
fadd
or
pop
mov
xor
or
or
push
jns
xlat
push
nop
cmp
ins
fsubr
out
push
sbb
jo
shl
pop
data16
add
fwait
push
inc
or
mov
dec
and
ror
sbb
pop
xor
mov
fst
ss
xor
lods
push
out
sbb
push
pcmpeqd
push
jo
sahf
mov
xchg
push
inc
add
cmp
ret
and
sub
add
mov
dec
loope
adc
adc
ins
or
add
mov
add
test
xlat
pop
inc
inc
imul
sub
outs
push
xor
push
or
mov
add
cmp
xchg
pop
and
out
adc
xor
push
add
lods
pop
addr16
nop
bound
jno
pop
or
fsubr
fcomp
add
push
fs
xor
add
pusha
addr16
int3
pusha
inc
or
in
inc
add
jne
dec
test
add
pop
pop
jne
pusha
add
ins
cmp
push
xchg
outs
dec
sub
and
add
add
aam
rcl
jp
rcl
pusha
clc
mov
pop
and
inc
imul
cmps
cmp
test
push
adc
push
enter
sahf
out
fcomi
scas
add
and
xor
(bad)
and
nop
jp
jne
fcmovnbe
outs
inc
push
pop
push
jl
inc
jns
fcom
in
ds
fisubr
cwde
es
push
pop
inc
jl
pushf
ds
pop
add
pop
test
add
test
xor
fnsave
add
or
inc
aad
sbb
outs
mov
loopne
add
or
cmp
pop
inc
pop
mov
hlt
(bad)
pop
inc
popa
jne
sub
mov
dec
shl
pop
loopne
cli
hlt
jle
or
cmp
fistp
sub
pop
add
mov
push
adc
aaa
sbb
movs
cmp
shl
inc
xor
pop
sub
push
mov
or
push
and
scas
add
lds
test
ror
aas
fcom
mov
adc
ds
add
push
or
add
pop
mov
lods
in
cmp
add
add
adc
mov
sbb
sbb
push
push
xchg
push
mov
popf
mov
or
dec
inc
xor
out
loopne
leave
push
shr
pop
ins
inc
call
clc
push
sub
test
movs
sbb
inc
outs
ret
fist
push
call
rol
ds
sbb
sar
sbb
aam
and
add
(bad)
add
inc
add
pop
add
push
dec
cmp
stc
jecxz
push
rcr
and
fadd
add
and
add
jg
pop
xchg
inc
test
inc
(bad)
push
call
fstp
fwait
and
pushf
clc
fwait
pop
inc
(bad)
mov
add
cmp
(bad)
pop
in
movs
push
pop
sub
adc
lahf
jno
dec
pop
js
test
push
fild
popf
in
test
push
cmp
loopne
mov
cmp
inc
inc
lods
and
(bad)
loope
fdivr
fistp
inc
pop
fild
cld
fld
fmulp
fstp
fwait
push
das
clc
in
pop
sbb
faddp
jae
mov
jg
jb
pop
clc
cld
imul
jae
(bad)
mov
fmul
imul
dec
ret
loope
xor
popf
fdiv
hlt
and
push
aas
xchg
clc
mov
xchg
xchg
lock
mov
pusha
mov
shl
(bad)
jae
jno
add
and
add
sub
lock
or
daa
das
xor
add
jge
mov
scas
or
xor
outs
mov
inc
inc
sbb
mov
adc
adc
push
imul
cmp
inc
xor
sub
dec
inc
sub
xchg
cmp
jecxz
xchg
cmps
lea
popa
fimul
mov
pop
das
inc
ja
pusha
dec
add
fcmovb
daa
and
dec
xor
retf
xchg
push
push
adc
push
ss
enter
jb
sbb
add
xchg
es
or
ret
mov
add
outs
and
iret
shr
shl
mov
in
les
inc
cmps
cmp
push
in
xchg
enter
(bad)
dec
add
inc
shr
int3
and
inc
test
mov
lds
inc
cmp
add
dec
out
sub
daa
das
fucom
sbb
loopne
pop
call
out
push
sub
fcmovnu
dec
cmp
jg
enter
popa
jnp
or
add
and
rcr
jno
loopne
inc
shl
or
mov
inc
in
cmovne
movs
push
ret
push
xor
test
scas
adc
aam
push
call
or
retf
cmp
popf
popa
add
sbb
dec
ss
or
aas
mov
jo
out
or
xchg
sub
lds
jle
or
inc
or
int3
and
or
pop
call
inc
lock
das
pusha
dec
push
push
sar
aas
cmp
sub
sub
or
and
inc
clc
cli
ins
rcr
ss
sub
cwde
js
inc
sbb
sbb
out
(bad)
xor
retf
callw
jo
cs
cmp
cld
ds
in
ins
inc
sbb
inc
cld
scas
rcr
pop
cld
fnstcw
fadd
jmp
in
shl
rcl
mov
pop
mov
push
mov
pop
push
pop
add
sbb
loopne
inc
ret
fcmovnbe
je
mov
clc
ja
fisttp
dec
inc
push
mov
sahf
das
sbb
mov
and
stos
mov
inc
aam
dec
mov
je
add
or
scas
or
push
xor
ds
and
push
mov
jmp
sbb
jnp
jg
clc
cmp
jae
pop
adc
and
cmp
add
mov
popf
adc
sub
leave
hlt
aaa
mov
ret
dec
adc
push
int
and
rcr
test
mov
and
nop
enter
cmp
daa
sbb
xchg
std
jns
stc
xchg
add
fwait
add
(bad)
movs
mov
push
or
test
inc
mov
inc
push
leave
push
add
push
add
inc
leave
mov
inc
xlat
imul
lea
stos
in
xor
mov
sub
push
out
test
lock
cdq
ret
arpl
mov
out
jmp
ror
jg
mov
mov
push
push
inc
inc
sub
and
add
dec
pop
test
in
pop
les
shr
and
push
(bad)
iret
nop
lock
xor
inc
rcr
sbb
xchg
jne
rcl
add
ret
xchg
mov
fwait
inc
mov
test
adc
sti
jo
push
add
adc
mov
add
(bad)
enter
into
outs
out
fwait
cmp
je
sti
push
je
lea
adc
dec
push
cld
(bad)
pop
jmp
push
xor
jo
mov
sub
mov
iret
clc
pop
cdq
in
add
adc
bound
mov
add
pop
dec
stos
inc
add
push
add
clc
lods
loopne
les
or
test
enter
pop
lods
push
lahf
lods
test
or
jge
test
xchg
test
fidiv
fisttp
jl
ret
dec
or
xor
push
mov
add
push
lea
das
and
push
pop
jno
pop
mov
(bad)
jo
push
add
aaa
jmp
xchg
push
cwde
inc
jl
fsubr
rol
jbe
arpl
or
nop
sbb
ficom
call
ds
ret
or
or
or
mov
dec
mov
fdivr
add
stos
adc
inc
dec
and
adc
(bad)
or
inc
test
add
mov
popf
das
dec
inc
push
ss
add
gs
sbb
fcomp
mov
sbb
loop
adc
jmp
xchg
pop
or
cmp
mov
test
outs
and
fucomi
fsub
dec
sub
push
mov
mov
mov
or
push
xor
xor
or
sbb
js
data16
push
mov
popa
loope
push
ficomp
or
(bad)
fwait
or
xchg
adc
add
mov
(bad)
addr16
dec
mov
xchg
and
mov
jne
sbb
or
ror
jmp
mov
call
imul
adc
push
push
jmp
lock
aaa
test
jge
call
adc
(bad)
clc
push
jno
cmp
retf
dec
sub
adc
shr
ror
ret
lock
stos
pusha
adc
iret
push
popa
pop
lods
adc
mov
icebp
sub
lea
mov
dec
dec
xor
pop
mov
add
sbb
xor
sub
test
sbb
lea
sub
add
mov
ror
adc
fisttp
adc
inc
inc
mov
(bad)
sbb
mov
call
adc
cmp
inc
call
clc
stc
sahf
or
push
or
mov
add
cwde
cmc
xchg
cmps
jb
imul
dec
push
cmp
add
and
cmp
mov
rcr
sahf
nop
add
mov
jmp
jno
push
loopne
addr16
mov
ins
mov
xchg
test
push
in
pop
mov
and
or
cmp
les
sbb
scas
out
and
push
(bad)
push
sub
mov
rol
mov
mov
adc
ret
lahf
call
add
std
inc
inc
add
xor
xor
in
xor
and
outs
jae
or
mov
clc
push
lea
adc
arpl
pop
dec
jmp
aas
int
push
adc
mov
cld
(bad)
imul
push
cmp
lea
loop
adc
daa
scas
dec
fcmovnb
add
fwait
push
dec
pop
xor
mov
cmps
jo
in
loope
push
sbb
test
xchg
adc
pop
mov
pop
inc
xchg
rol
loop
cli
or
add
movs
xchg
popa
outs
inc
cli
mov
jecxz
jle
cmp
jg
imul
pop
out
push
or
or
adc
mov
sbb
mov
arpl
and
pop
loop
mov
and
mov
pop
(bad)
mov
sub
inc
out
mov
test
ja
dec
jmp
mov
movs
dec
mov
jo
adc
adc
stos
fs
add
or
and
adc
ins
inc
loopne
ror
adc
cmp
popf
mov
mov
jae
pop
aas
and
and
outs
inc
mov
std
test
nop
mov
ret
add
or
aad
push
daa
ror
inc
and
add
icebp
push
jne
rcl
jno
push
adc
mov
pusha
gs
loope
push
sub
and
clc
adc
inc
call
fmul
clc
mov
add
cs
push
lds
mov
scas
add
mov
add
inc
xchg
rol
inc
push
jne
add
pop
(bad)
fbstp
js
mov
ins
fbstp
outs
xor
loopne
mov
jge
cmp
sbb
jg
mov
or
mov
dec
mov
add
jb
pushf
lock
inc
data16
adc
add
dec
inc
push
dec
jne
and
sub
add
dec
jne
fsubr
clc
inc
lods
in
or
jmp
sub
je
jnp
test
out
enter
xor
or
mov
pop
push
mov
xor
push
and
cmc
popf
jne
push
or
xchg
rol
adc
sbb
sbb
ror
jle
in
sbb
sub
xor
hlt
mov
or
je
jmp
mov
cmc
push
xchg
push
ret
dec
nop
jmp
das
dec
stos
lea
sub
inc
and
hlt
das
jmp
and
push
mov
sbb
sbb
ret
or
xor
daa
cmp
cmp
clc
adc
inc
and
and
jp
and
mov
inc
mov
pop
daa
sbb
xor
cmp
movs
stos
xlat
lock
fstp
imul
aam
sbb
mov
pop
adc
lea
push
push
pop
imul
or
and
pop
push
or
sub
or
and
gs
sub
daa
push
(bad)
es
(bad)
popa
xor
jmp
adc
ds
add
push
pusha
push
push
std
and
pusha
retf
les
mov
mov
cmp
fiadd
jg
adc
pusha
inc
jnp
clc
call
xlat
add
dec
js
sub
xor
jnp
sub
xor
cld
inc
shl
or
cs
sar
sbb
adc
imul
lahf
cmp
dec
inc
xor
or
cli
or
jo
pop
mov
xor
in
dec
(bad)
xor
xor
fld
jae
push
mov
cmp
jae
inc
xchg
add
push
retf
inc
jmp
inc
aaa
xchg
in
fidiv
jne
jle
cmp
sub
mov
push
test
mov
lock
les
jbe
inc
dec
mov
push
inc
sub
fs
or
sub
cmp
cmp
add
sbb
pop
push
pop
add
js
das
jge
test
add
imul
mov
add
jbe
jmp
push
cmp
xor
cs
test
mov
xor
das
cmp
out
jl
inc
mov
inc
jne
add
mov
jnp
add
inc
js
xchg
xor
outs
enter
xor
and
mov
or
sar
dec
repz
dec
(bad)
mov
push
arpl
lds
jmp
pop
add
mov
ja
and
sbb
xor
in
pop
push
mov
jmp
cmp
jno
push
push
test
rcr
xchg
mov
or
mov
mov
xor
or
pushf
fild
not
mov
std
test
xor
push
dec
xchg
(bad)
nop
xchg
add
inc
xchg
jne
xor
sar
hlt
jne
and
or
sub
or
sbb
pop
pop
(bad)
daa
add
pop
sbb
sub
sub
sahf
add
and
push
aaa
(bad)
fwait
pop
inc
jbe
loopne
or
xor
push
aad
test
mov
(bad)
stc
jnp
adc
or
(bad)
or
and
dec
loop
add
nop
in
push
jnp
sub
add
syscall
das
and
inc
leave
add
test
sahf
lock
add
and
in
pop
pop
cmp
jns
adc
in
lock
ret
cld
lahf
add
loopne
inc
ins
icebp
dec
in
jb
out
mov
or
call
pop
mov
lea
ja
mov
daa
mov
imul
sub
shl
jmp
xor
nop
les
or
sbb
or
nop
ror
lea
loope
ret
sbb
or
add
inc
int
jg
cmp
icebp
fs
ror
cmps
mov
ret
mov
inc
or
xlat
cmps
and
std
clc
jno
ss
pushf
lea
mov
inc
adc
aas
mov
mov
sub
shl
popa
sub
enter
add
add
jge
pop
push
movs
push
pop
jg
jle
in
in
pop
test
inc
sti
mov
adc
push
aad
xchg
dec
pop
mov
cmp
imul
in
call
lods
adc
add
push
push
cs
neg
inc
(bad)
rol
add
mov
dec
add
sbb
mov
xchg
push
add
xor
add
dec
add
cmp
push
push
add
add
mov
(bad)
mov
dec
sti
adc
fcom
xchg
ror
dec
movs
and
adc
inc
rol
ror
ror
das
mov
dec
cld
fisttp
lock
retf
inc
add
mov
push
jno
movs
out
add
mov
into
out
cmp
mov
inc
dec
jo
mov
cld
popa
pop
sub
pop
int3
mov
xchg
jmp
pop
xor
add
push
push
and
aaa
add
push
add
bound
jo
or
push
mov
gs
or
bound
clc
test
int
imul
sbb
push
dec
rol
jl
sbb
xchg
and
into
int
mov
es
push
lock
movs
dec
xor
mov
es
push
push
jle
push
pushf
loopne
push
imul
inc
push
inc
push
hlt
xchg
dec
push
scas
fnstcw
push
sub
mov
call
mov
push
in
int3
fcomp
out
mov
pushf
xchg
push
cld
rcr
push
jl
mov
ja
(bad)
in
pop
dec
mov
pushf
js
pop
jnp
test
ss
push
shr
scas
push
clc
add
push
add
push
(bad)
loopne
jl
xchg
mov
cmps
push
fs
out
mov
lock
or
es
jo
fstp
ret
in
push
cs
sub
push
lock
pusha
repnz
push
cs
(bad)
add
nop
adc
fld
xchg
mov
xchg
push
pop
inc
or
ret
pop
cmp
push
inc
jmp
pop
stc
xlat
mov
movhps
data16
jb
add
sbb
or
add
add
sbb
cmp
add
push
xlat
and
imul
add
scas
xchg
mov
push
add
add
daa
add
sub
imul
add
in
das
sub
retf
push
ins
sub
bound
mov
scas
cs
das
add
mov
loopne
int3
xchg
pmaxub
rdmsr
sub
scas
enter
sysenter
add
xor
inc
scas
dec
mov
bswap
cmps
maxps
(bad)
add
jo
add
in
cs
jno
and
or
aam
aas
add
jb
push
adc
add
add
inc
jae
inc
es
mov
es
mov
or
inc
pop
icebp
xor
push
xchg
add
outs
rcl
sti
jae
push
push
push
dec
aaa
mov
cs
call
imul
nop
push
adc
add
cs
cwde
dec
pusha
leave
adc
pop
and
cmp
or
inc
push
sub
or
inc
push
shl
inc
push
enter
push
and
or
fcom
cmps
xchg
xchg
xor
jns
xor
in
mov
not
jb
fwait
cld
adc
adc
das
mov
xchg
and
adc
in
enter
sbb
mul
mov
(bad)
nop
push
xchg
xor
adc
xchg
xor
and
loopne
xchg
add
loopne
scas
loopne
jmp
add
mov
sbb
out
int3
sub
dec
das
fiadd
sub
fiadd
push
xor
push
mov
inc
ss
sbb
aaa
cmp
sbb
test
mov
cwde
pop
movs
ds
je
mov
add
xchg
adc
test
xor
outs
lods
xchg
adc
inc
xor
inc
jnp
inc
xchg
clc
pop
jno
inc
jnp
dec
xchg
add
lahf
adc
add
jns
dec
loopne
bound
aaa
xchg
cwde
push
and
je
xchg
mov
or
outs
in
mov
popf
xchg
add
das
test
xchg
fs
or
movs
imul
push
dec
outs
popa
fs
jbe
or
gs
ins
nop
jo
push
and
jo
mov
dec
jnp
add
test
fisttp
sub
pop
pop
add
mov
xchg
or
push
cs
xor
or
clc
sub
pop
push
outs
sbb
cmps
add
lahf
pop
cmp
cdq
jbe
push
inc
pop
xlat
jge
int
xchg
cmp
jae
in
pop
or
aam
mov
mov
mov
mov
ins
push
add
js
mov
sbb
movd
(bad)
or
retf
icebp
pop
push
inc
push
add
dec
loopne
pop
adc
daa
add
and
in
retf
dec
aaa
or
outs
je
lea
add
push
add
jne
dec
jo
ja
cmp
in
loopne
loopne
cmp
push
add
data16
in
jne
jl
cwde
das
div
inc
enter
(bad)
pop
std
cmp
ds
cmps
mov
lock
into
push
mov
call
push
lods
test
sbb
out
pop
add
outs
inc
ret
jbe
js
out
enter
ja
dec
mov
sub
paddsb
syscall
push
push
(bad)
push
mov
sysret
add
sub
or
(bad)
or
push
push
js
xor
xchg
sahf
dec
dec
pextrw
lahf
cld
ja
fs
and
or
adc
cmp
jmp
jge
add
inc
inc
movs
and
sbb
push
into
out
jbe
jb
sbb
push
popa
je
lods
(bad)
xchg
rcl
push
and
(bad)
jne
fiadd
push
add
add
inc
push
adc
or
or
mov
test
and
add
dec
enter
adc
add
mov
lods
retf
mov
lock
inc
in
sub
sbb
or
enter
sbb
dec
fidivr
mov
imul
test
adc
inc
xor
gs
or
dec
push
pop
and
pop
loopne
inc
adc
push
shl
adc
jmp
dec
lods
inc
pusha
or
inc
xor
and
mov
imul
das
mov
outs
jb
rol
popa
inc
nop
imul
sbb
lods
stos
ins
pop
mov
and
push
lock
ret
sbb
jb
jae
shl
cmp
adc
imul
push
xlat
and
test
push
add
cmp
sub
sub
jp
cmp
sar
push
add
std
sub
push
imul
cdq
ror
dec
lods
in
adc
mov
xor
rol
outs
(bad)
or
sbb
int
adc
jle
adc
jae
lea
hlt
sbb
add
clc
test
or
pop
loope
push
sbb
fs
pop
adc
mov
stc
or
jle
in
cli
jl
push
int
or
or
inc
push
rol
inc
push
mov
repz
cmp
push
pop
push
fs
clc
ds
adc
jge
popf
syscall
push
scas
adc
and
inc
into
addr16
add
bound
mov
lock
adc
jns
stos
loope
pop
pop
push
iret
cmp
sbb
jle
cmp
ins
sbb
inc
dec
test
bswap
rol
retf
sub
inc
int3
or
pop
ss
jg
mov
ror
cmp
iret
movd
es
xchg
inc
jb
or
mov
or
cmp
xchg
test
push
pop
loope
cmps
add
mov
adc
imul
(bad)
fsubr
cmp
inc
xlat
or
rol
push
cmps
or
sbb
fcom
adc
push
mov
pop
xchg
pop
dec
jb
popa
xchg
add
adc
add
mov
pop
and
in
shr
xchg
loope
daa
shr
xchg
(bad)
clc
dec
and
add
xchg
call
sbb
cwde
stos
aas
cmps
sbb
xchg
jge
add
mov
(bad)
pushf
test
inc
(bad)
fucomi
sbb
pop
enter
das
dec
and
cmp
clc
sub
add
add
add
add
push
xor
test
and
mov
icebp
ss
inc
je
daa
adc
popa
cmp
js
mov
pop
mov
mov
and
inc
jb
fs
add
cmp
pop
push
lea
cmp
pop
jge
test
xchg
fwait
dec
adc
dec
mov
mov
js
stos
or
jp
mov
add
jg
jp
cmp
ficomp
xor
push
or
shl
sbb
cmp
and
xchg
mov
das
repnz
adc
nop
xchg
add
fabs
push
mov
cmps
add
cs
gs
xchg
fist
popa
inc
inc
pop
inc
pop
xor
popa
stos
sub
sub
and
das
shl
lock
xchg
cmp
iret
jo
push
jmp
fdiv
out
pop
into
fwait
(bad)
in
std
ror
xlat
sbb
xor
mov
ror
loopne
mov
in
add
jo
or
inc
push
mov
mov
lds
aad
mov
pop
sub
adc
cmps
aam
pop
sub
and
fstp
inc
enter
cmp
push
xchg
sub
add
imul
xchg
pop
cmp
(bad)
lock
xchg
iret
inc
xchg
pop
mov
das
sahf
xchg
iret
fld
in
ret
mov
xchg
rol
sbb
xchg
adc
xor
push
lods
jae
test
cmp
pop
aas
pop
inc
mov
lods
lahf
mov
lahf
fldln2
(bad)
lock
fist
pop
xchg
rcpps
pushf
push
(bad)
fcomp
fmul
(bad)
xlat
xchg
dec
push
mov
fisttp
dec
outs
xor
inc
retf
sbb
js
and
xchg
stos
cmp
add
and
pop
jne
adc
ficom
ins
loop
add
xchg
pop
cdq
pop
mov
xchg
scas
xchg
ja
push
ins
cmp
loopne
(bad)
(bad)
mov
push
and
mov
add
xchg
ja
pmaddwd
push
clc
bsf
add
(bad)
out
(bad)
inc
jo
push
sbb
outs
mov
rcr
in
inc
hlt
enter
loope
cli
sbb
sbb
add
inc
inc
(bad)
sahf
add
push
pop
popf
jmp
inc
sbb
xchg
push
add
call
fwait
pop
pop
das
call
out
add
call
push
out
add
adc
in
fwait
inc
sub
out
jle
ss
loopne
or
into
jb
icebp
outs
(bad)
mov
test
jo
outs
sub
test
test
int3
inc
sub
mov
push
sub
jecxz
inc
xor
add
arpl
add
or
inc
popa
sbb
adc
pop
cmp
push
xor
in
mov
inc
mov
adc
movs
pushf
idiv
popf
pop
lods
das
cwde
and
(bad)
mov
push
(bad)
or
test
dec
push
push
lods
mov
repnz
mov
pushf
fcmovnb
adc
dec
or
or
add
pushf
(bad)
inc
pop
mov
jo
dec
push
ins
mov
jl
add
mov
stos
dec
inc
mov
imul
sub
push
sahf
daa
lahf
pop
inc
das
and
inc
icebp
pop
sahf
daa
mov
je
sar
xchg
fwait
loop
loop
sahf
aaa
add
dec
push
jo
dec
test
and
scas
push
daa
cmc
dec
or
mov
lahf
inc
sub
jmp
or
dec
aas
mov
pop
push
outs
inc
shr
ins
dec
loopne
daa
dec
pop
adc
fld
add
xchg
mov
cmp
and
mov
inc
imul
push
sbb
dec
je
aas
mov
push
retf
mov
or
xlat
das
and
dec
mov
or
push
scas
ret
or
pop
and
dec
(bad)
cvttps2pi
jno
adc
cmp
cld
cmps
fnstenv
mov
push
les
inc
add
sbb
push
and
sub
mov
and
dec
adc
lods
ror
or
stos
ins
and
push
and
xor
mov
mov
sub
mov
ins
loopne
mov
jnp
les
mov
dec
es
adc
test
push
adc
dec
aaa
inc
mov
js
or
and
or
push
and
dec
movs
pop
adc
pop
fucomi
test
or
mov
cmps
push
inc
in
js
pop
push
(bad)
inc
mov
jo
pop
or
inc
pop
cmp
or
pop
and
sbb
and
pop
inc
mov
add
push
adc
dec
mov
mov
dec
mov
or
inc
movs
out
test
(bad)
jl
es
(bad)
push
jnp
mov
jo
dec
push
adc
push
cmp
movs
inc
xlat
es
fdiv
inc
rol
inc
scas
js
movs
out
movs
inc
movs
imul
dec
push
and
push
sbb
or
inc
pop
js
movs
or
dec
test
outs
push
inc
sub
jmp
pavgb
and
ror
(bad)
movs
add
and
dec
outs
mov
push
cmps
push
nop
dec
push
scas
sbb
pop
mov
inc
jo
call
mov
shr
cmps
loope
push
daa
daa
icebp
cmps
jge
add
sub
cmp
push
mov
or
aad
sub
pop
movs
mov
xchg
ja
cmps
cmc
ret
mov
cmp
or
mov
enter
das
sbb
push
call
cmp
das
fs
xchg
test
and
icebp
daa
popf
adc
test
pop
les
cmps
or
sub
xor
loop
loop
dec
inc
and
push
add
dec
pop
hlt
cmps
popf
sbb
(bad)
(bad)
je
(bad)
js
cli
or
push
jl
lods
das
ret
test
loopne
dec
xchg
pop
push
shl
ror
adc
stos
xchg
test
mov
dec
mov
pop
adc
imul
jp
test
stos
imul
jns
pop
retf
add
push
add
xchg
add
imul
js
test
mov
pop
inc
es
add
cmps
pop
inc
dec
js
imul
test
pushf
loop
lods
not
jge
pop
dec
or
inc
fwait
jae
lock
jae
dec
push
scas
sbb
xlat
je
mov
jb
jns
sub
mov
sub
jecxz
mov
ja
arpl
test
test
ror
mov
outs
scas
push
mov
xchg
pop
lods
ja
pop
fisttp
out
emms
jo
jecxz
dec
scas
jg
scas
ja
sub
dec
xchg
(bad)
xor
sub
ins
scas
ss
push
shl
jns
sbb
add
ins
xor
popf
std
aaa
push
pop
xlat
test
repz
pop
outs
cmp
push
scas
pop
les
int3
hlt
ficomp
popf
jge
mov
repnz
loopne
pop
call
or
loopne
adc
push
mov
push
sub
push
pop
add
sbb
movs
sbb
add
or
mov
pop
add
or
movs
pusha
xchg
push
pop
imul
adc
mov
xor
jb
push
sub
iret
dec
add
out
dec
bound
mul
cmp
arpl
shl
mov
sahf
xor
sub
jae
mov
sub
adc
fild
test
outs
mov
into
leave
enter
mov
rcr
mov
daa
mov
pop
cmp
cmp
popf
ret
mov
pushf
pushf
mov
movs
sbb
mov
dec
ja
xor
push
ret
mov
mov
pop
enter
mov
sbb
inc
div
data16
jo
mov
add
jno
and
jno
test
test
js
loop
jecxz
jo
fist
push
push
push
xor
or
ret
jmp
or
jecxz
pop
fwait
or
dec
add
movs
rol
inc
loope
mov
mov
lock
cs
jns
add
jl
inc
add
test
mov
add
or
or
jp
xor
ins
repz
ret
push
xchg
(bad)
loopne
jmp
and
ja
iret
or
in
and
jae
push
inc
pop
sub
mov
push
mov
iret
and
cmp
ret
dec
in
push
or
aas
xchg
dec
jb
xchg
test
cmp
mov
mov
pop
mov
inc
pop
cmp
xchg
or
jae
add
nop
inc
add
mov
jne
cs
push
lds
fadd
scas
and
pop
or
pop
loopne
pop
push
addr16
add
rcl
pop
sbb
cmp
mov
lods
adc
mov
mov
cmps
enter
adc
inc
adc
and
jbe
fst
jle
les
jmp
inc
sbb
ds
push
push
or
cwde
sbb
and
or
jmp
dec
movs
adc
push
mov
inc
mov
or
fiadd
push
(bad)
inc
int
mov
or
sbb
dec
mov
add
push
dec
fsubr
dec
cmp
out
cmp
dec
mov
xchg
les
sti
test
or
aad
adc
push
rcl
fsubr
pushf
loopne
xchg
(bad)
(bad)
or
hlt
fild
(bad)
in
in
push
repz
lock
rcr
ins
loopne
ins
xor
mov
fsubr
push
sbb
jle
dec
hlt
push
inc
mov
jmp
idiv
es
sub
adc
add
nop
sbb
sbb
popa
inc
ss
fsubp
repz
mov
jo
mov
jno
bts
pop
add
orps
mov
btc
test
daa
mov
jl
jb
xchg
push
ds
pop
je
cmovno
mov
cmp
ret
ss
inc
push
imul
ss
or
push
push
add
(bad)
rcr
push
dec
adc
imul
xchg
fnstsw
bound
out
or
jno
adc
dec
aam
inc
sbb
sbb
or
push
sti
cmp
push
sub
jo
push
sub
add
add
stos
pop
add
lds
or
loope
pop
shl
nop
jo
clc
xchg
retf
inc
dec
and
mov
test
jnp
push
adc
inc
xchg
xchg
adc
jae
mov
rcl
sub
sub
jg
shl
gs
inc
xlat
adc
stos
dec
xor
or
lahf
pop
inc
cmp
(bad)
xlat
jo
fadd
xchg
fcmovbe
inc
mov
cmp
dec
loope
dec
fldenv
or
add
xor
in
xchg
(bad)
(bad)
sbb
shl
je
pop
sbb
xor
imul
pop
cmp
dec
imul
in
rcr
cmp
imul
mov
xchg
(bad)
jne
pop
pop
mov
xchg
cmp
dec
add
popa
ror
jb
or
add
push
add
inc
into
xor
out
inc
outs
and
mov
pop
sbb
mov
cs
sbb
jns
scas
das
in
push
and
mov
mov
(bad)
lock
dec
pop
fs
xor
pop
or
pop
daa
sbb
dec
or
mov
xor
add
push
sub
or
or
xor
xor
xor
inc
outs
ins
gs
cld
xor
add
mov
xchg
pop
push
jns
stos
(bad)
shl
pop
adc
ss
in
sbb
lods
sar
and
lods
rol
sar
add
or
cs
fist
ss
int
imul
sub
pop
pop
(bad)
cmps
lds
xor
mov
jo
shrd
push
dec
mov
xchg
cmps
push
xor
lds
push
or
add
neg
out
rol
inc
sbb
adc
adc
(bad)
pusha
cdq
xor
cmp
add
fadd
xor
cmp
add
inc
add
aas
add
mov
ret
rcr
inc
inc
cs
jo
inc
cs
add
shl
shl
subps
shl
dec
xchg
push
hlt
jo
je
arpl
add
add
or
aas
add
jnp
push
fstp
xor
cmp
sbb
mov
sbb
stos
adc
sbb
ret
mov
outs
lds
add
cmovp
in
mov
and
mov
mov
imul
dec
inc
jle
jae
test
leave
retf
sahf
out
jbe
les
pop
cmps
add
icebp
ds
je
mov
add
cmp
sbb
in
mov
sub
xchg
push
cs
ret
dec
lahf
add
adc
adc
icebp
outs
or
ret
sub
loopne
or
adc
lods
mov
loopne
add
mov
or
add
lea
jae
neg
or
ud0
mov
jnp
adc
icebp
inc
mov
pop
lods
sub
sub
push
daa
adc
ret
fwait
hlt
inc
pop
and
add
add
and
push
add
mov
(bad)
xchg
and
sub
sub
or
arpl
rcl
mov
dec
cwde
test
push
inc
inc
(bad)
mov
lods
in
mov
cmp
bt
setb
test
cwde
and
sbb
xor
cmp
jmp
sbb
call
div
pusha
add
cwde
fiadd
std
xor
xor
inc
mov
mov
sub
add
rol
mov
arpl
mov
add
sub
add
adc
sub
fs
shl
and
xchg
rcr
or
mov
and
pop
add
cmps
jp
call
adc
inc
push
call
push
repz
sub
and
push
loopne
mov
(bad)
loopne
add
inc
dec
add
pop
sub
add
popa
jmp
push
xchg
sbb
hlt
nop
add
nop
mov
cs
frstor
(bad)
mov
adc
xor
adc
adc
jmp
mov
pop
push
js
les
std
cmp
mov
push
xor
test
or
jne
add
push
lea
out
push
adc
xchg
cmp
cmp
imul
jnp
cwde
bound
call
mov
mov
(bad)
dec
sub
sahf
popa
and
out
lea
mov
pop
int3
movs
add
add
arpl
std
ret
dec
lods
xor
sbb
or
push
sahf
add
adc
(bad)
cdq
sub
aaa
retf
or
int3
jmp
xor
or
je
cdq
and
or
lock
lods
push
sbb
test
mov
imul
pop
inc
mov
add
add
fld
mov
out
outs
or
push
mov
add
or
add
pop
sbb
popa
xchg
scas
mov
xchg
and
and
inc
xor
pop
mov
sbb
fdiv
fcmovnu
xchg
shl
mov
cdq
ins
mov
xchg
mov
inc
push
xchg
and
dec
sub
jae
rcr
mov
imul
cmp
dec
call
int
inc
dec
jne
push
loopne
xor
inc
aad
stc
cmp
mov
idiv
sub
adc
mov
sti
test
test
pop
mov
shl
je
add
or
daa
jmp
popf
aas
mov
or
and
sub
sub
and
pop
dec
mov
cmp
fs
xlat
add
mov
imul
cmp
pusha
lods
mov
pop
nop
or
inc
mov
sbb
xor
push
or
rol
sbb
xor
push
push
cdq
xchg
add
sahf
xchg
clc
imul
cmp
pop
xchg
std
mov
inc
or
arpl
clc
arpl
dec
pop
test
cmp
adc
fcomp
jmp
aad
out
ins
je
mov
sbb
ins
aas
ins
loopne
(bad)
hlt
and
pop
in
or
xor
push
push
dec
das
in
jne
add
ffreep
sbb
jne
mov
mov
jecxz
and
mov
pop
outs
or
or
nop
aaa
mov
fadd
inc
add
or
dec
mov
push
clc
add
inc
call
adc
sbb
or
xchg
frstor
jo
test
mov
cmp
inc
pop
inc
call
lock
inc
inc
test
cmp
push
push
stos
dec
sub
cmp
xchg
push
nop
mov
add
mov
inc
lahf
cmp
sub
sub
jne
sbb
mov
fnstsw
shl
mov
adc
imul
add
out
clc
adc
cmp
fsub
and
cmovo
jmp
or
call
pop
out
jg
inc
js
or
push
int
push
retf
push
sbb
and
cwde
mov
int
adc
push
lods
cmp
sti
inc
sbb
fistp
imul
lock
jmp
add
cmp
xor
adc
clc
loope
xlat
call
push
add
cmp
cwde
xor
and
ror
inc
ins
jg
inc
test
stc
in
outs
call
xchg
sub
or
mov
add
(bad)
mov
cmps
pop
pop
js
push
or
lea
stos
(bad)
lock
or
push
sub
test
lock
mov
sub
mov
and
hlt
or
xor
push
inc
jecxz
daa
sub
mov
not
rcl
add
lock
pop
std
or
mov
mov
(bad)
pop
dec
push
mov
movzx
inc
(bad)
cli
daa
dec
dec
or
scas
and
sbb
fcom
adc
adc
push
push
pop
cli
imul
or
test
test
clc
popa
mov
inc
and
bswap
cld
dec
ret
sub
push
and
mov
mov
xor
ins
and
mov
jns
(bad)
pop
pop
icebp
sbb
push
ret
je
fidivr
cmps
das
sbb
adc
add
xor
or
adc
dec
and
pop
xchg
push
jmp
push
ret
mov
push
or
inc
dec
jne
cmp
adc
sub
pop
js
and
xor
cmp
xchg
lods
mov
adc
mov
sbb
pop
js
js
sbb
out
mov
adc
popf
in
fadd
ds
and
(bad)
pop
inc
mov
xor
xchg
dec
dec
fadd
icebp
sbb
cmc
sbb
js
and
stc
sbb
cmp
test
pop
fcomp
out
mov
or
(bad)
mov
xchg
or
(bad)
stc
mov
push
rcr
push
add
push
popa
and
inc
(bad)
daa
cld
cmps
push
ret
jne
push
outs
add
xchg
lea
fs
xor
xor
lods
stos
push
stc
cli
jmp
cmps
js
loop
push
inc
or
rol
inc
fidivr
push
add
stos
mov
add
inc
inc
mov
les
mov
push
les
jo
dec
mov
sahf
and
pop
movs
add
shl
lods
addr16
xchg
ror
les
in
(bad)
push
lock
cmp
sub
add
or
scas
jle
xor
hlt
and
mov
mov
mov
sbb
xor
add
les
dec
mov
mov
mov
mov
jne
mul
adc
in
and
add
fimul
scas
push
in
fst
int3
sbb
(bad)
loope
in
xchg
lods
add
xchg
dec
out
push
clc
xchg
out
in
adc
add
das
aam
and
pop
sub
dec
pusha
loopne
push
enter
inc
sub
jmp
daa
inc
loopne
cmp
push
inc
adc
cwde
or
xchg
push
xor
and
xchg
add
xor
xor
ss
add
add
sub
ret
nop
fadd
add
cdq
pop
enter
ss
daa
mov
test
pop
test
loop
nop
adc
push
adc
pop
inc
mov
pop
adc
adc
cs
mov
je
loope
xor
xlat
sub
mov
dec
enter
(bad)
mov
es
dec
xchg
fcmovb
push
adc
fild
mov
adc
fisttp
xchg
out
sub
cmp
fdivr
push
hlt
and
pushf
xchg
lea
xor
mov
test
cwde
loopne
jb
ret
ins
and
clc
jmp
rcr
and
add
pushf
mov
xor
sbb
sbb
push
out
mov
cmp
lock
pop
clc
cmp
inc
mov
dec
pop
ss
inc
sub
push
test
js
inc
lods
aam
aam
adc
pop
inc
jo
sbb
pop
pop
push
nop
or
adc
iret
xor
scas
ss
mov
mov
stos
inc
mov
sub
rcr
ja
stos
aad
ret
pop
js
aad
mov
sub
mov
add
dec
aas
add
jne
rcr
cs
fs
adc
outs
or
and
cmp
and
pop
add
xor
xchg
ror
adc
xor
inc
cmp
les
sti
dec
add
je
xor
lock
int
mov
clc
daa
mov
push
lods
leave
mov
sub
xchg
cmp
mov
add
inc
lock
ret
daa
pop
je
push
and
cmps
mov
mov
inc
inc
and
and
pushf
pop
and
ja
jns
jb
xchg
cld
push
sbb
mov
mov
or
sbb
sbb
ret
jmp
push
(bad)
mov
jg
add
sbb
add
es
xchg
movs
sub
movs
cmp
mov
rcr
aas
sub
ret
add
in
je
mov
adc
jge
adc
icebp
add
(bad)
lods
cmp
pop
jae
push
and
jnp
xchg
add
clc
jle
sbb
sar
dec
add
push
mov
add
jge
pop
ja
push
jae
jp
clc
cwde
les
push
push
out
iret
fild
add
dec
jl
xchg
mov
and
add
jb
ds
rol
adc
mov
xlat
add
mov
xchg
push
rcl
sti
or
add
push
mov
push
loopne
dec
stos
jge
test
jl
add
jne
vmovq
or
add
adc
vmread
mov
loop
adc
or
rol
jg
sub
adc
jb
test
xor
jg
and
repnz
or
mov
imul
jb
pop
adc
sub
cmps
sub
popf
or
push
adc
or
and
call
std
(bad)
inc
stos
jo
cdq
fdivr
movs
mov
gs
cmc
push
stos
sahf
sub
adc
dec
or
rol
cld
test
jg
jp
call
repz
aam
push
or
mov
or
popf
adc
ror
push
aad
and
ret
push
call
pop
leave
cmp
xchg
xor
push
mov
pusha
std
cmps
ficomp
out
pop
mov
mov
jae
jge
ins
sub
sbb
xor
pop
dec
sbb
iret
clc
jg
sbb
add
lods
ja
mov
cmovs
cmps
dec
sti
fcom
aad
cmp
push
cmc
adc
push
cmp
in
mov
scas
inc
arpl
and
out
jbe
inc
jns
push
inc
fs
adc
bound
xorps
mov
inc
push
jo
push
std
ficomp
cs
dec
arpl
gs
loopne
scas
aas
push
dec
pusha
mov
sbb
ja
jp
sbb
push
push
ds
ins
and
adc
fild
imul
push
daa
push
dec
dec
or
or
mov
and
imul
pop
push
out
push
dec
add
popa
mov
push
adc
add
inc
pop
adc
imul
inc
push
imul
rcl
sbb
push
or
inc
dec
pop
jne
adc
pusha
jg
xlat
jno
add
push
or
daa
xlat
outs
(bad)
popa
add
or
add
mov
inc
dec
dec
mov
fbstp
add
xor
ins
add
dec
loopne
adc
mov
or
jno
or
sub
mov
or
arpl
adc
mov
adc
ficomp
sub
bound
xchg
pop
fld
adc
xchg
nop
(bad)
fdiv
movs
or
mov
enter
inc
outs
arpl
xchg
or
pop
and
imul
add
push
xchg
inc
popa
xchg
adc
sub
xchg
or
es
ins
ret
ror
jl
adc
emms
dec
mov
adc
data16
out
fld
dec
or
jb
mov
push
ins
and
sbb
or
sub
pop
adc
xor
not
pop
sub
icebp
dec
push
and
dec
loope
jmp
data16
sbb
inc
ins
ret
xor
push
outs
test
test
jmp
inc
ins
pop
out
fist
ret
movs
das
add
fimul
mov
fdivr
jle
sub
jg
jno
inc
fld
or
sbb
adc
sub
jbe
inc
leave
loop
inc
dec
sub
out
(bad)
call
das
push
vmread
or
xchg
sbb
jmp
or
dec
inc
jae
add
pop
inc
fcomp
ins
pop
and
or
inc
icebp
ror
pushf
sub
inc
nop
bound
imul
aad
jnp
loope
bound
dec
and
(bad)
aaa
add
push
fsubr
lods
sbb
fldcw
test
ret
fs
pop
aad
jmp
ins
push
mov
add
mov
cmp
pop
in
loopne
neg
mov
pop
xchg
add
push
push
mov
dec
push
jmp
cld
cmps
sub
(bad)
mov
sysenter
add
ja
(bad)
fmul
js
pop
or
pusha
je
stos
jmp
push
jmp
push
adc
punpckldq
and
adc
data16
jmp
adc
xor
fsubr
pop
les
mov
fsubr
and
adc
adc
outs
sub
adc
pop
mov
cmc
lock
cmps
in
sbb
inc
ret
call
sar
xor
inc
popa
pop
add
add
mov
push
cld
push
sub
sbb
imul
add
pop
adc
je
dec
sbb
pop
adc
cli
adc
retw
loope
sub
ret
lahf
adc
rcr
and
bound
push
daa
mov
imul
xchg
mov
sbb
leave
sub
adc
jae
mov
adc
aam
fst
sub
(bad)
add
mov
xor
adc
xor
pop
cmc
sbb
sbb
or
lds
push
cmp
fst
sub
pusha
sar
daa
jbe
inc
fcom
jl
inc
mov
push
adc
xchg
sub
mov
sub
inc
and
sti
test
add
pop
adc
or
fstp
push
aaa
sub
aam
fidiv
add
das
mov
xchg
sub
push
add
gs
sbb
in
push
aaa
inc
lods
mov
ss
mov
cmp
mov
add
ja
das
push
outs
push
jae
dec
popa
mov
jno
xchg
sbb
addr16
pop
cmp
xchg
adc
jbe
cmp
sub
or
fisubr
sub
ficomp
daa
shl
loop
rcl
fcom
mov
and
rcl
sub
add
pop
fdiv
int
cmp
mov
dec
outs
je
aad
ret
mov
ss
xchg
xor
xchg
fidiv
xor
ja
and
inc
mov
scas
mov
lods
fsubr
push
inc
add
aad
sub
push
sub
add
sub
test
mov
popa
adc
imul
jnp
daa
inc
imul
mov
add
cdq
pusha
test
sub
pop
or
and
pop
das
or
loope
inc
dec
sub
adc
sub
and
hlt
inc
mov
push
adc
outs
adc
fucomip
cdq
icebp
mov
das
mov
test
inc
mov
pop
xor
pop
xor
mov
pop
mov
push
jb
or
jns
nop
rcr
add
dec
add
jge
cmp
push
sub
add
cmc
mov
cld
mov
neg
mov
push
fsub
not
push
clts
add
js
ss
mov
sbb
fnstcw
mov
or
in
pushf
not
and
xchg
push
pushf
imul
ja
add
push
jb
jno
add
add
cmp
sbb
add
cmp
std
nop
popa
fcmovnb
fcom
popf
mov
push
cmp
mov
mov
add
imul
sbb
mov
lahf
pop
sub
sub
adc
jg
test
sbb
dec
test
mov
in
inc
ins
je
lods
xor
push
sahf
xor
gs
inc
ror
or
adc
or
adc
imul
stos
or
pop
sub
add
or
stos
xchg
mov
or
ja
addr16
or
mov
inc
ins
gs
(bad)
sbb
imul
sub
clc
mov
jnp
shl
jp
and
adc
ins
sbb
pop
nop
sbb
je
imul
sub
imul
jae
jns
imul
add
imul
mov
imul
lods
adc
or
push
dec
adc
xlat
jl
mov
dec
mov
pop
and
pop
sub
inc
add
jp
std
dec
outs
ins
jns
and
jo
test
and
dec
lock
jp
pop
ds
dec
pop
outs
adc
call
push
jo
gs
inc
or
or
enter
pusha
addr16
mov
and
arpl
nop
mov
sub
pop
or
in
adc
add
jae
xchg
popf
and
inc
and
div
push
ja
call
push
fdivr
pop
cs
std
sub
not
pop
rol
mov
js
ins
int3
loope
or
fs
dec
pop
lods
shl
xor
add
lock
add
xor
leave
adc
shl
cli
sbb
je
cmp
adc
je
jmp
je
pop
je
or
rcr
xor
or
sbb
and
sti
add
dec
enter
pop
ja
jmp
fisub
inc
sbb
adc
pusha
push
pusha
mov
add
out
and
xor
pop
adc
jae
lods
jae
sbb
xchg
dec
rcl
or
add
adc
outs
dec
pop
pop
push
dec
daa
dec
add
or
and
or
add
cs
bound
push
mov
jmp
enter
dec
jle
or
ficom
jmp
daa
xor
mov
adc
push
jo
adc
and
push
test
or
repz
and
push
cmp
dec
push
arpl
outs
add
sbb
je
add
loop
(bad)
dec
gs
test
sti
ror
out
xchg
pusha
xor
rcr
push
jb
add
push
loopne
push
jb
xchg
sbb
cmp
pop
inc
mov
mov
in
xor
or
inc
dec
(bad)
outs
mov
cmps
lock
mov
fnstsw
sbb
mov
sbb
cmps
mov
push
loopne
push
sbb
outs
popf
mov
xor
pop
xchg
cmp
int3
std
test
or
or
dec
(bad)
(bad)
xchg
adc
adc
inc
add
push
dec
(bad)
adc
cmps
pop
or
fnstcw
out
pop
or
jae
popa
add
xchg
rcl
jae
repz
pop
fnstsw
pop
or
push
arpl
lds
or
jb
rcl
pop
inc
inc
repnz
push
jb
je
jne
daa
bound
(bad)
fild
mov
inc
fbstp
call
jmp
and
push
movs
mov
pop
ret
or
loopne
rol
mov
imul
out
push
cmp
push
mov
cmp
pop
cwde
adc
dec
sub
dec
enter
mov
pop
enter
push
es
push
push
mov
push
fadd
pusha
push
mov
sti
fidivr
shr
enter
mov
push
add
test
dec
xor
movs
inc
dec
dec
push
push
dec
dec
rcl
mov
or
test
jbe
push
dec
add
arpl
mov
add
pop
push
add
or
inc
dec
push
xor
pop
xchg
push
pop
retf
cmp
popa
jns
mov
pop
adc
outs
(bad)
fsubrp
mov
inc
push
ss
pusha
xor
xor
mov
jae
or
ret
jo
stos
pop
jo
lock
and
or
dec
imul
xor
sbb
push
jo
add
inc
or
inc
mov
dec
je
inc
jo
inc
xchg
aam
pop
popa
sub
or
dec
push
push
mov
sub
and
call
call
inc
push
push
add
(bad)
jle
jmp
repz
xchg
mov
push
fucomi
inc
ja
pushw
in
pop
ror
leave
enter
add
xor
stc
cmps
add
mov
mov
pop
sbb
enter
jo
jge
xchg
scas
pop
sbb
test
cmp
mov
mov
gs
pusha
sub
adc
cmp
pop
sbb
push
inc
dec
add
js
or
imul
or
jo
and
repnz
or
xor
xor
jecxz
ins
addr16
outs
fs
dec
inc
xchg
sbb
xchg
or
xchg
ss
pop
in
mov
movs
jne
cmp
mov
xchg
add
inc
mov
pop
push
aam
scas
std
rol
sub
mov
xor
imul
jns
(bad)
out
jo
pop
xchg
inc
data16
and
inc
jns
movs
add
rol
sub
inc
jmp
and
sub
mov
sub
lods
inc
or
mov
cmps
(bad)
cli
and
inc
pop
add
leave
sbb
xchg
out
push
nop
jp
add
or
mov
sub
add
add
sbb
dec
inc
pop
fcomp
lock
idiv
push
inc
sub
xchg
mov
sbb
adc
cmps
inc
sub
cmps
or
sub
pop
or
push
xchg
bound
call
adc
adc
pop
add
pop
in
call
push
pop
xor
or
add
or
xchg
xchg
xchg
scas
int
add
xchg
xchg
xchg
xchg
jle
shl
xchg
xchg
retf
or
xor
push
test
arpl
movs
cmc
pop
retf
fcomp
dec
test
aas
pop
sub
inc
push
nop
sbb
jo
or
repz
pop
stos
ror
inc
popa
movs
add
pop
and
xor
loopne
mov
jne
lods
or
fwait
push
inc
xor
add
add
sti
sti
pushf
lods
imul
imul
out
fistp
or
bound
rcr
push
stc
and
or
sti
xchg
ins
or
arpl
push
psubusb
push
outs
jo
xchg
(bad)
add
sub
adc
jb
push
loopne
push
adc
mov
addr16
and
mov
mov
cld
pop
or
xor
cmps
pop
jbe
adc
jmp
xor
inc
mov
bsf
neg
or
jo
push
push
ror
das
ror
adc
push
int3
(bad)
xor
or
cmp
mov
imul
cmp
cwde
inc
push
pop
jo
xor
pop
pop
mov
push
xor
xchg
cmp
sbb
repz
push
push
push
sub
cmp
imul
xor
inc
jo
mov
loop
into
push
inc
pop
clc
and
sbb
mov
fnstenv
sahf
fsub
call
pop
dec
fadd
js
dec
fs
and
ss
fimul
shl
cmps
les
inc
push
push
ror
pushf
js
bound
pop
dec
push
das
mov
jmp
inc
or
bound
mov
add
inc
adc
add
or
fs
mov
sub
sub
mov
sub
adc
cld
fisub
js
addr16
mov
sub
shrd
sbb
aaa
loope
xchg
xor
out
inc
mov
jnp
mov
in
add
mov
adc
jmp
push
gs
fnstsw
outs
pop
in
adc
or
sub
mov
xlat
push
pop
adc
pop
xchg
les
add
mov
add
scas
push
es
fsubr
or
adc
add
dec
test
dec
sbb
test
rcr
stos
or
imul
mov
sbb
cmp
and
add
imul
adc
adc
pop
mov
cmovnp
push
pop
add
jmp
push
mov
add
call
lock
add
mov
push
push
jne
ret
sbb
jnp
add
sub
ins
scas
inc
xchg
push
cmovbe
fcmovnb
pmaxsw
adc
fcmovne
ror
adc
aam
adc
das
adc
or
pop
test
add
jmp
sbb
repnz
and
sbb
mov
leave
leave
ins
(bad)
es
js
mov
out
fs
adc
jge
or
push
or
scas
xor
cmp
ins
push
xor
pop
mov
push
ins
add
dec
(bad)
out
xchg
bound
inc
cld
shr
fs
inc
xor
fild
pop
xchg
push
cmp
sub
es
lods
dec
ja
jo
daa
ins
push
rcl
xor
adc
cs
jbe
xor
or
and
add
lods
dec
mov
push
xchg
ja
inc
adc
add
jno
mov
mov
dec
dec
add
mov
inc
shr
pmulhw
ds
push
sub
inc
jno
or
mov
or
sub
cmp
adc
sbb
popf
jo
pop
repz
icebp
push
sub
or
push
(bad)
scas
sub
sbb
push
cwde
mov
dec
int
imul
or
push
pushf
lods
(bad)
push
add
stc
dec
inc
(bad)
(bad)
add
call
dec
mov
cmp
fwait
sbb
dec
test
or
loop
push
mov
shr
mov
mov
repnz
push
mov
pop
pop
cmp
shl
xchg
cld
outs
jmp
fsub
rol
sbb
sub
adc
(bad)
push
add
nop
mov
pusha
xchg
jl
std
xor
outs
imul
jg
pop
movs
add
sbb
jg
push
in
add
and
arpl
(bad)
popa
jb
jo
and
pop
fidiv
outs
or
xchg
adc
add
push
xchg
cld
rcr
jge
or
sbb
mov
mov
jns
xor
mov
add
les
cmp
add
or
jb
(bad)
mov
sbb
rcr
dec
test
popf
push
inc
fwait
inc
xchg
into
or
jmp
add
sub
mov
push
xor
mov
test
int
dec
cmp
sbb
mov
ret
jo
add
xor
adc
ud0
inc
aas
or
or
and
int
dec
bound
cmp
mov
jbe
cld
dec
push
add
cdq
sbb
cmp
xchg
jmp
inc
divps
aam
xor
push
jecxz
imul
icebp
lds
dec
push
clc
bound
dec
adc
push
in
les
fmul
jns
stos
push
(bad)
and
retf
out
(bad)
jl
int3
dec
int3
push
cli
pop
pop
test
adc
bound
rcl
inc
int3
or
fwait
jmp
pop
pop
add
mov
js
add
fstp
add
jae
xor
push
(bad)
mov
out
push
sbb
adc
jl
sbb
or
sbb
sbb
sbb
mov
loop
xchg
push
mov
sbb
sbb
std
sbb
cmp
sbb
sbb
mov
(bad)
and
sbb
jo
mov
sbb
sbb
push
sbb
xchg
dec
add
sbb
test
dec
int3
mov
jmp
jbe
inc
inc
cmp
or
push
jmp
pop
mov
mov
inc
dec
cmp
or
sbb
add
lea
xor
jmp
nop
repz
add
and
jnp
mov
jb
ror
sbb
fimul
inc
jge
mov
imul
push
test
or
out
call
dec
add
add
xchg
mov
pop
test
add
mov
and
push
push
fcomp
sub
or
lock
in
enter
adc
and
rol
inc
aam
sub
dec
cdq
xchg
push
xchg
or
arpl
loopne
das
or
add
hlt
popa
pop
sbb
add
cwde
std
sti
movs
xchg
push
mov
adc
cmp
xor
lock
push
add
xor
adc
pop
sbb
lock
ins
nop
pushf
xchg
pop
shr
js
popf
sub
xor
arpl
loop
and
mov
push
xor
xor
mov
inc
cmp
push
sbb
lea
pop
sar
enter
or
test
sbb
bound
jmp
add
mov
add
in
retf
add
and
jne
daa
push
and
mov
jne
ror
pop
mov
mov
inc
mov
sbb
mov
push
dec
push
int3
push
jo
test
lahf
add
adc
pop
pop
inc
dec
pop
and
or
or
sub
adc
iret
aaa
fistp
inc
sub
into
add
iret
add
hlt
sub
add
and
jmp
push
cmovbe
scas
int3
ror
adc
xor
xor
call
inc
xchg
push
or
ins
mov
enter
ss
inc
pop
mov
enter
das
mov
dec
and
aam
inc
dec
jmp
pop
xchg
sub
dec
mov
inc
das
jecxz
pusha
stos
inc
lds
pop
mov
cmps
and
mov
inc
aad
mov
mov
aad
out
(bad)
inc
pushf
movntq
xlat
cmp
loope
into
cmp
add
iret
inc
iret
dec
push
mov
loope
add
jnp
int3
dec
movs
jbe
or
jecxz
add
or
ret
jmp
daa
scas
and
lock
xor
adc
sahf
and
inc
enter
push
adc
cmc
dec
jb
mov
xchg
push
nop
sahf
mov
movs
mov
aad
je
jg
and
sbb
arpl
aam
enter
push
add
or
dec
cmp
xor
push
mov
xchg
push
jne
sbb
enter
es
push
in
sub
mov
push
jns
cmp
in
test
and
inc
push
vpcmpeqb
or
lock
pop
sbb
inc
xchg
and
mov
mov
push
pop
std
jnp
pusha
push
mov
fcos
pusha
dec
lods
or
and
and
daa
lds
xor
daa
shl
das
jns
imul
push
stos
add
push
in
dec
dec
shl
and
int3
pop
nop
in
enter
pop
hlt
mov
jo
or
pop
loopne
or
fadd
mov
hlt
outs
shr
(bad)
push
mov
inc
lods
arpl
loopne
test
or
arpl
in
cdq
ds
call
jb
enter
sub
movs
sub
(bad)
fs
cwde
mov
lds
and
enter
sub
in
jns
pop
sub
pop
jns
or
sub
pop
pop
mov
sbb
jae
call
(bad)
inc
pop
adc
and
in
call
inc
and
sbb
in
adc
and
or
sbb
sub
or
inc
pop
add
and
test
mov
mov
sub
scas
push
sub
sub
psrad
aaa
cmp
in
fbld
pushf
or
dec
scas
and
(bad)
clc
mov
mov
add
aaa
dec
jecxz
adc
push
inc
and
aam
(bad)
jmp
arpl
rdpmc
icebp
ret
cmp
enter
sub
sub
sub
xchg
dec
pop
dec
out
repz
ret
push
sub
pusha
pusha
push
sub
mov
push
ss
das
xchg
inc
rol
push
sub
jns
push
sub
fild
xor
sub
js
push
cmps
and
add
inc
inc
bound
mov
add
sub
dec
aad
mov
ins
push
and
dec
sbb
cmp
jl
out
xor
sti
scas
or
shl
xlat
enter
das
push
jno
mov
add
jb
in
xlat
sub
gs
push
mov
dec
imul
cmp
retf
jl
or
lea
daa
sti
daa
rcl
and
cmps
ja
das
(bad)
lods
das
jecxz
cmp
xchg
das
or
mov
xor
dec
add
sbb
les
cmps
rol
fsub
jno
and
sub
xor
les
stos
shr
les
xchg
mov
pop
push
xor
jmp
cli
call
das
jbe
mov
out
pop
enter
test
or
cmp
loop
shr
xor
fisttp
adc
or
(bad)
xor
js
push
xor
fld
mov
stos
das
shl
nop
xlat
inc
mov
repnz
adc
ins
mov
mov
and
pushf
imul
push
or
push
fsub
and
adc
dec
mov
cld
imul
sub
or
inc
das
pop
sub
imul
adc
add
les
in
rol
aam
push
test
mov
xchg
imul
and
imul
add
add
ins
add
mov
jae
cld
xor
xor
mov
nop
xor
test
xchg
shl
xchg
imul
pop
leave
stos
jecxz
imul
xor
xchg
ins
shl
inc
jo
or
add
sar
in
ins
add
adc
ss
ss
mov
mov
cmp
aaa
push
mul
mov
cmp
push
daa
inc
dec
jb
outs
enter
push
inc
dec
and
outs
sub
dec
or
outs
je
or
or
out
or
sub
jne
mov
inc
shl
mov
fadd
shr
cmp
dec
xchg
shl
cmp
jb
enter
cmp
cmp
retf
clc
ins
jne
repnz
cmp
jns
das
in
cmp
outs
or
lea
and
cmp
adc
ja
mov
ja
mov
ja
jno
leave
popa
or
or
jno
jno
cmp
pop
inc
aas
jmp
inc
add
add
bound
dec
dec
or
lods
pop
cmps
inc
dec
pop
add
mov
dec
dec
stos
push
lods
jecxz
add
dec
psubsb
mov
div
pushf
rol
sti
push
dec
and
sub
or
not
pop
retf
dec
inc
inc
cmp
test
xchg
dec
cmp
es
lea
fbld
cmp
(bad)
jmp
cwde
or
sbb
ret
xchg
mov
pop
inc
int3
or
push
jmp
data16
shr
adc
cmps
cli
inc
in
cmp
cmp
push
mov
mov
mov
xchg
adc
loop
imul
pop
pop
in
rol
std
adc
or
jb
dec
add
sbb
adc
jb
mov
jnp
dec
add
or
test
dec
iret
push
fdivr
das
fcom
mov
ss
xchg
mov
mov
push
mov
pushf
sbb
xlat
push
push
pop
dec
jnp
adc
(bad)
pop
fsubr
minps
cdq
push
sbb
mov
xor
adc
xor
jae
rcr
movs
fs
sbb
daa
xor
fimul
test
js
jae
mov
inc
inc
imul
ins
or
arpl
gs
jae
and
repnz
xchg
stos
and
popa
and
jae
mov
loopne
and
jle
daa
pop
pop
add
add
retf
cmp
add
jmp
jb
popa
jmp
mov
push
loopne
jp
cmp
stc
outs
or
sar
arpl
dec
adc
fidivr
test
(bad)
fwait
outs
pop
adc
sbb
shl
mov
xchg
jmp
pop
cmp
test
jecxz
pop
jae
not
lods
adc
sub
push
and
xchg
inc
in
js
cdq
and
xchg
pop
sbb
and
push
fnstenv
xchg
addr16
shl
sbb
jb
stc
pop
inc
xor
or
jmp
push
fld
fild
pop
add
ror
(bad)
(bad)
xor
test
xlat
jp
or
arpl
or
ds
jae
nop
mov
xlat
rol
jp
sbb
outs
addr16
mov
adc
sbb
jb
loope
mov
mov
(bad)
cmp
inc
ja
icebp
pop
xchg
jecxz
je
call
jb
mov
adc
pushf
sbb
dec
pop
retf
add
sbb
xor
add
jge
call
cli
(bad)
push
push
loopne
in
push
adc
dec
or
shr
jae
adc
scas
sub
inc
inc
sbb
or
test
mov
inc
mov
push
rcl
adc
js
je
pop
pop
pop
arpl
(bad)
pop
pop
sbb
mov
pop
fadd
mov
sbb
popa
int
pop
push
inc
sbb
mov
in
jnp
dec
outs
outs
clts
ja
iret
mov
xchg
xor
aad
or
ds
sub
sub
push
mov
fwait
test
jmp
sahf
and
dec
jnp
sub
sbb
jge
sub
fld
and
rcl
dec
inc
inc
rcl
aam
or
xchg
push
rol
add
sbb
or
adc
(bad)
cmp
jno
fild
dec
arpl
inc
out
push
lods
mov
push
jo
aam
in
sbb
int
ins
bound
dec
xchg
mov
cwde
sahf
add
sar
xchg
fld
jae
cmp
add
xor
fadd
inc
push
shl
or
cmps
inc
pop
into
enter
jmp
iret
mov
adc
enter
sub
imul
ins
aad
cmc
push
inc
add
jno
test
jmp
xor
adc
pop
and
shl
gs
cmps
rol
pop
test
movs
add
lock
add
and
or
sti
rol
pop
bound
aas
unpckhps
cs
jge
sub
dec
or
sbb
jbe
das
jae
jo
push
jo
adc
aaa
sbb
xchg
icebp
sbb
jne
xor
mov
out
inc
shl
dec
or
test
jns
mov
or
movs
loope
inc
fsubr
push
(bad)
pop
sub
add
push
pop
xor
jecxz
pop
stos
push
dec
mov
(bad)
daa
lods
sbb
mov
call
inc
call
mov
or
mov
ret
cmp
arpl
dec
prefetch
add
sbb
bound
push
and
popa
in
jnp
inc
jle
adc
xor
push
imul
lea
imul
xor
dec
add
ins
pusha
mov
cmp
and
mov
sub
movaps
add
mov
pop
mov
sbb
adc
inc
mov
mov
mov
sbb
pop
sbb
add
sbb
mov
ror
jae
cmp
loope
mov
pop
sbb
sbb
sbb
adc
test
adc
inc
dec
jmp
jno
xchg
test
sbb
or
pusha
dec
pop
popa
jo
or
jge
test
cmp
imul
jmp
or
gs
movs
sbb
out
pushf
or
rol
scas
inc
call
push
dec
test
in
sub
bound
pop
xchg
or
adc
cmp
and
test
jge
jnp
add
jmp
xchg
or
popf
sbb
push
pop
jl
mov
sti
or
adc
gs
test
or
jl
imul
hlt
dec
cmc
test
gs
out
pop
dec
push
sar
fstp
mov
ja
pop
leave
rcr
add
ror
xor
lock
mov
mov
or
outs
call
ds
jnp
jecxz
and
inc
popa
xchg
add
jg
mov
movs
adc
fdiv
xor
inc
ret
or
mov
mov
adc
repz
aas
jmp
ins
cdq
aad
pop
sbb
mov
gs
xor
retf
push
(bad)
sbb
pop
jo
jae
test
bound
adc
(bad)
dec
icebp
jno
mov
or
jae
push
jle
inc
or
dec
outs
dec
cmp
mov
das
adc
iret
lods
cli
outs
loopne
inc
or
popa
arpl
xchg
fadd
push
sbb
nop
mov
test
dec
mov
push
imul
(bad)
les
add
and
pop
es
dec
xchg
inc
data16
jecxz
dec
dec
cmps
sbb
dec
push
dec
leave
mov
dec
pop
aam
mov
pusha
dec
inc
inc
fcom
cmp
dec
add
pop
dec
mov
rol
cli
or
mov
loopne
add
push
adc
(bad)
push
outs
sub
sbb
or
or
jnp
scas
out
cmp
mov
mov
adc
push
jne
imul
xor
xor
ret
xor
xor
les
imul
or
jo
xor
in
push
(bad)
sbb
push
add
dec
jo
loop
test
push
mov
(bad)
add
cmp
stc
cmp
rol
xchg
pop
push
dec
(bad)
(bad)
jmp
test
jmp
adc
mov
pop
sbb
cli
add
jns
push
push
inc
fiadd
not
dec
add
or
jo
test
dec
sbb
ins
push
inc
mov
sub
adc
jge
inc
aad
test
add
or
mov
push
jg
mov
cld
outs
mov
test
scas
sbb
fwait
call
loopne
xor
ds
push
xchg
(bad)
or
xor
je
cwde
push
jmp
sub
lahf
jb
cmps
in
sub
push
sbb
stos
mov
push
lahf
push
and
sub
dec
sbb
in
ins
dec
test
retf
sbb
sbb
push
popa
dec
or
mov
add
push
stos
call
and
pop
pop
xlat
push
dec
xchg
je
je
sub
dec
je
xlat
je
icebp
jbe
loopne
loopne
out
fsub
shl
pop
xchg
inc
sbb
push
or
pop
mov
popa
mov
in
jo
pop
pop
mov
in
pop
add
pop
out
mov
les
inc
arpl
inc
or
test
adc
push
sub
idiv
ja
shl
mov
inc
cmp
mov
cwde
xor
loope
sbb
cmp
out
and
test
out
icebp
mov
ds
add
test
dec
loopne
inc
inc
add
aad
inc
adc
int3
in
pop
or
adc
sub
and
inc
inc
sub
test
dec
mov
sub
sub
adc
pop
cmp
push
mov
xor
sbb
jb
sub
ins
das
ins
ins
xchg
imul
jmp
imul
movs
(bad)
and
ins
lock
test
je
mov
call
in
xor
pop
mov
jo
pop
jmp
cmp
ficom
xor
js
or
sti
xchg
add
push
imul
lea
or
pop
add
or
pusha
ror
cmps
add
arpl
fsubr
mov
inc
cmp
add
or
fsubr
fistp
inc
imul
popaw
mov
in
repnz
ror
add
test
or
push
nop
push
push
pop
push
or
mov
pop
prefetch
push
pop
dec
popa
jae
iret
mov
pop
cmps
mov
cmps
and
imul
je
jnp
pop
add
sbb
fild
or
inc
test
or
(bad)
outs
inc
fisttp
adc
lock
adc
inc
daa
sbb
aas
je
add
ror
adc
loopne
pop
jmp
and
jp
(bad)
je
je
xchg
cwde
pushf
sbb
nop
mov
add
mov
push
pop
mov
xchg
add
test
or
adc
adc
mov
test
fist
push
adc
jne
or
adc
je
dec
lods
pop
iret
out
pusha
add
dec
mov
cmp
jae
xchg
or
scas
cld
pop
push
adc
sbb
or
lods
push
pop
push
or
add
enter
sbb
push
or
(bad)
and
mov
adc
mov
add
jnp
pop
cmp
or
mov
(bad)
and
sbb
test
xlat
pop
sbb
call
push
int
aas
sub
(bad)
push
(bad)
rol
mov
movs
stc
inc
out
jo
mov
test
adc
imul
sbb
stos
hlt
pusha
ror
pop
dec
in
add
mov
aam
adc
or
ret
call
scas
mov
outs
arpl
ins
mov
stc
arpl
lods
cmp
dec
mov
cmp
push
rcl
pop
punpcklwd
mov
test
inc
inc
ins
outs
outs
xchg
mov
fsub
add
sub
sbb
pop
xchg
popa
jo
xlat
dec
dec
inc
pop
sbb
push
add
arpl
push
inc
loopne
bound
arpl
out
adc
pop
mov
test
les
push
adc
pop
movs
das
lock
ror
(bad)
xlat
pop
or
call
cmps
cdq
loopne
rcl
inc
bound
adc
mov
jb
jge
cmovae
jp
inc
lds
imul
push
mov
dec
ja
test
or
leave
imul
imul
push
add
sbb
or
std
sub
push
or
sbb
pop
inc
or
push
sbb
xor
pop
outs
pop
inc
js
imul
adc
mov
jb
es
push
aaa
push
mov
mov
bound
outs
jne
js
daa
test
or
lea
or
scas
movs
bound
and
ret
push
outs
jne
or
cmp
mov
fidiv
mov
mov
sbb
mov
adc
lock
or
add
fist
sbb
sti
sub
pop
pop
xchg
inc
mov
imul
push
pop
dec
aad
push
arpl
pushf
mov
arpl
inc
out
les
imul
gs
push
outs
xchg
out
aam
mov
sbb
xlat
or
fidiv
addr16
xchg
sbb
jo
stc
xor
xor
loopne
add
push
loopne
push
or
popa
js
xchg
test
sub
sbb
push
inc
rol
xchg
sbb
adc
in
seto
hlt
and
jne
ror
cmp
shl
cmp
daa
in
bound
gs
popa
or
(bad)
cmp
mov
mov
adc
sbb
cmps
gs
jns
cmp
or
dec
fdiv
gs
xlat
cmp
loopne
imul
aad
adc
push
pop
pop
(bad)
arpl
in
push
sbb
div
bound
shr
or
xchg
mov
dec
dec
push
out
xchg
cmp
cdq
sub
sub
jge
or
in
imul
push
imul
inc
daa
xchg
or
je
je
dec
mov
imul
outs
add
out
jge
adc
jg
dec
inc
or
push
cdq
push
fldcw
ins
je
pop
pop
push
dec
ins
rep
je
mov
test
nop
add
sub
pop
xchg
pusha
xor
fbstp
dec
in
adc
inc
fbstp
xor
sbb
cmc
(bad)
loope
jecxz
int
xor
xchg
adc
xlat
xchg
sbb
mov
lahf
xlat
mov
or
repz
outs
or
dec
pop
ins
add
pop
stc
je
imul
je
cmp
mov
imul
cmp
add
inc
mov
jno
mov
test
or
cdq
and
or
lock
cmp
dec
and
out
jmp
push
xchg
loope
xor
jbe
test
mov
cmps
addr16
cmp
or
jbe
or
and
imul
sbb
stos
jne
outs
jae
xchg
outs
pop
and
nop
imul
cdq
sbb
(bad)
(bad)
in
and
pop
xor
inc
jns
sbb
dec
sbb
shl
imul
xor
sbb
loopne
ins
aas
gs
and
jb
enter
jb
jb
fild
out
xchg
cmp
loopne
xchg
gs
add
xor
loope
popa
ret
sub
pop
ret
mov
or
imul
fs
aaa
imul
cmp
and
adc
ja
test
out
out
jb
mov
addr16
test
enter
add
out
dec
test
push
outs
dec
and
ins
out
ins
push
js
nop
mov
test
xor
addr16
jns
or
pop
leave
mov
dec
jae
adc
add
out
outs
sub
xchg
faddp
mov
jb
push
push
fisttp
js
adc
ficom
add
popa
and
or
out
fs
or
add
dec
and
jnp
(bad)
pop
ins
dec
or
sub
dec
add
aas
and
adc
mov
jmp
add
pop
enter
xchg
jmp
stc
inc
imul
mov
das
jg
imul
pop
cmp
jo
sub
mov
cmp
jae
cmps
mov
inc
mov
xor
mov
addr16
cmp
push
cs
dec
pop
dec
and
(bad)
cmp
bound
repz
sbb
sbb
push
push
jecxz
iret
mov
pop
xchg
es
pop
das
mov
loopne
pusha
mov
mov
inc
shl
je
je
sbb
stos
sbb
xchg
(bad)
pop
outs
add
sub
inc
(bad)
aam
sub
mov
or
addr16
outs
in
mov
pusha
test
aad
pop
push
(bad)
sub
mov
test
ins
adc
rol
retf
outs
cli
push
ja
or
and
bound
les
ins
iret
adc
xlat
adc
mov
outs
packsswb
addr16
(bad)
adc
rol
mov
pusha
adc
push
sub
inc
xor
ss
das
adc
mov
add
add
pop
pop
jl
jg
push
imul
adc
inc
ror
mov
sar
add
push
popa
stos
mov
and
xchg
push
adc
nop
push
pop
push
ja
dec
mov
lods
les
pop
mov
push
mov
adc
pop
add
add
pop
rcl
ins
mov
adc
inc
inc
sbb
adc
mov
pop
fild
scas
xchg
mov
daa
mov
sub
out
add
inc
xchg
sbb
dec
bextr
bound
add
push
mov
call
and
and
adc
inc
dec
sub
test
jmp
rol
sbb
sub
jg
add
pop
rcr
addr16
add
sbb
out
outs
pusha
push
push
stos
jg
sbb
or
aas
add
xor
ja
adc
jg
das
adc
cs
outs
out
add
xchg
js
iret
lahf
push
mov
outs
mov
jbe
xor
addr16
cmp
pop
cmp
ret
lods
fcom
pop
xchg
scas
adc
jo
push
fild
jmp
out
jo
or
cmps
jo
inc
test
ja
in
mov
daa
adc
xchg
and
sub
ja
xchg
sub
sub
ja
aam
sbb
aas
sbb
imul
ins
pop
(bad)
daa
push
or
(bad)
push
add
lahf
sub
les
inc
rol
adc
push
or
jg
adc
addr16
push
lods
out
push
adc
outs
pusha
aam
rcr
add
add
adc
lock
inc
pop
inc
sbb
push
mov
sbb
push
adc
(bad)
mov
jg
inc
mov
or
push
addr16
push
and
outs
jg
ins
shr
add
add
push
sbb
pop
push
and
aas
adc
pop
pop
in
inc
pusha
dec
xchg
mov
shr
ja
fisubr
call
sub
mov
add
sub
retf
cmps
test
add
punpckhdq
or
dec
jmp
xor
adc
adc
or
sub
push
data16
ins
or
add
cmc
or
mov
push
out
mov
add
inc
cmp
and
ins
cmp
pop
sti
xor
retf
push
leave
int3
mov
pushf
in
or
fs
jnp
adc
ins
imul
rcl
push
rcr
imul
adc
dec
lods
and
sub
pop
xlat
adc
sbb
sub
sub
dec
sub
sub
sbb
outs
mov
test
mov
mov
jbe
mov
call
rcr
sbb
adc
inc
bnd
mov
rcl
lds
jo
cmp
pop
or
pop
jno
cmp
push
cmp
xchg
add
sub
adc
or
call
int3
nop
xchg
add
add
mov
add
pop
inc
jo
or
leave
pop
outs
sub
inc
sub
sar
mov
xchg
lea
mov
loop
jno
mov
addr16
xchg
and
adc
outs
fisub
push
mov
push
test
outs
or
xchg
mov
or
push
push
lahf
pop
push
dec
push
cmc
mov
jb
pcmpeqb
syscall
cmp
iret
inc
clts
add
xor
push
xchg
add
nop
lea
jb
mov
ja
nop
lea
shl
mov
jb
cmps
test
ja
push
fistp
cs
or
in
lods
and
jae
or
in
mov
dec
adc
in
add
outs
jl
inc
daa
xchg
lea
cmp
sub
pop
add
lds
lea
movd
or
loopne
mov
mov
jmp
or
dec
in
jo
arpl
jbe
sbb
nop
outs
jb
daa
add
js
arpl
or
test
push
pop
or
mov
ret
inc
js
int3
mov
ins
jbe
pop
xor
inc
push
jo
cmp
fadd
test
ret
scas
(bad)
in
test
(bad)
nop
add
fstp
adc
loopne
sub
outs
imul
inc
add
lahf
jecxz
das
es
push
pop
sub
adc
jmp
(bad)
daa
pop
xchg
push
cmp
ficomp
jb
sbb
das
repnz
push
sub
mov
pop
dec
mov
mov
or
sub
xor
xor
out
cmp
cmp
xchg
in
mov
xor
mov
fwait
pushw
dec
pushf
sahf
addr16
lahf
outs
push
lock
repz
fistp
mov
test
iret
repz
pusha
fs
out
or
add
out
(bad)
loopne
mov
xchg
push
pushf
mov
sahf
ja
ja
push
dec
and
jns
out
pusha
jl
test
cmps
outs
push
movs
rcr
mov
inc
test
test
out
sahf
cs
cmp
fidivr
test
enter
jl
jns
ror
(bad)
and
push
movs
push
aaa
clc
cmp
pop
and
out
sahf
sub
jo
je
fistp
jge
lods
xchg
aam
lods
pop
push
ins
mov
ret
out
in
call
xor
sahf
div
jo
btr
iret
push
xchg
clc
push
pop
stos
jbe
pop
mov
iret
repz
mov
sbb
push
pop
sbb
dec
push
and
fidivr
dec
push
test
fs
sahf
ja
push
fdivr
out
shl
mov
lock
sahf
out
sub
dec
in
out
ds
push
lock
hlt
sub
setle
into
clc
mov
daa
sub
psllq
mov
sbb
cmp
pop
pop
pushf
neg
adc
pop
push
mov
ins
loope
jmp
xor
jmp
mov
mov
test
sbb
scas
add
ror
daa
loope
xchg
or
dec
and
cmp
xchg
add
or
push
dec
dec
cwde
mov
test
(bad)
mov
addr16
wbinvd
add
cdq
aas
or
(bad)
or
jb
push
call
(bad)
lldt
mov
fwait
movlps
ret
imul
push
ss
sbb
push
mov
dec
sub
movhps
sahf
loope
sahf
das
das
das
das
adc
push
mov
movs
iret
movntps
push
stos
mov
loop
and
and
bound
retf
pop
xor
mov
and
jl
es
movs
(bad)
scas
psubw
add
das
movs
movaps
xchg
add
sbb
push
jle
add
sub
sti
sub
pop
out
ucomiss
mov
xor
pop
iret
cld
pinsrw
imul
xor
cdq
xor
stos
jb
add
out
getsec
and
lock
(bad)
loop
packssdw
(bad)
add
lds
clc
lods
cmp
(bad)
data16
add
push
cmovno
call
inc
mov
bswap
lahf
rol
add
push
mov
inc
add
neg
pmaxsw
add
mov
mov
icebp
cmp
pop
jb
or
cmp
cmovle
scas
dec
cs
push
add
jb
xchg
mov
add
push
add
adc
test
push
adc
in
or
scas
mov
push
xlat
lds
mulps
out
inc
cmp
push
mov
push
mov
divps
mov
and
punpcklbw
movlps
in
loop
ret
add
pop
out
or
pcmpgtd
mov
push
adc
push
ror
mov
mov
ins
dec
ror
mov
movq
ret
das
ja
lahf
dec
jno
ret
(bad)
add
imul
jne
fidiv
jecxz
xlat
ret
ja
jle
mov
jne
push
(bad)
(bad)
sahf
(bad)
pop
(bad)
in
xor
(bad)
add
jge
enter
addr16
push
jle
jg
jo
pop
leave
jno
retf
add
ja
xchg
mov
mov
xchg
fild
lahf
aas
jmp
mov
jp
adc
in
mov
into
jge
scas
call
(bad)
out
seto
jmp
jb
cs
dec
ror
xchg
add
xchg
pop
shl
scas
ret
xchg
add
xchg
rcl
setbe
addr16
cwde
dec
ror
cdq
fsubr
outs
inc
aam
fwait
add
les
mov
popf
add
loope
and
or
aad
sub
pop
sbb
cdq
jg
test
push
jecxz
push
rcl
mov
adc
bound
mov
lds
push
sbb
(bad)
leave
sub
push
sub
pop
or
inc
sbb
aaa
adc
pop
add
mov
adc
or
retf
xchg
ja
add
and
add
sar
dec
or
push
ja
rdtsc
mov
je
sahf
cmp
add
dec
pop
add
scas
mov
(bad)
mov
add
dec
adc
push
test
xchg
cli
call
test
and
je
gs
repz
rcr
inc
jo
les
mov
sbb
mov
clts
and
aam
adc
movs
adc
sub
inc
push
mov
rol
inc
adc
daa
cmp
mov
jnp
(bad)
call
inc
pop
imul
fld
inc
sub
cmc
jno
add
xor
cmc
jge
aam
movs
xchg
cmps
je
add
aaa
data16
add
mov
or
adc
xor
rol
and
jecxz
or
or
ror
sub
push
call
test
pop
sbb
xor
outs
out
lahf
or
shr
or
lea
mov
push
add
or
call
sub
mov
fnstsw
adc
pop
je
cmc
rcr
and
push
retf
adc
mov
rcl
or
dec
mov
or
jno
jne
push
movs
pop
and
or
jmp
xchg
jnp
jmp
pop
jmp
inc
or
loopne
cmp
push
popa
or
loopne
push
rcl
jg
adc
and
adc
(bad)
aam
rcl
mov
cmps
dec
imul
hlt
icebp
or
jb
or
add
push
je
mov
inc
rcl
push
push
push
pop
adc
jmp
mov
or
imul
ret
xchg
mov
mov
sub
movs
jns
jnp
aaa
mov
add
rol
inc
ret
dec
cmp
loope
inc
in
sti
in
pop
stos
dec
stos
jno
loopne
ret
xor
stos
adc
mov
cmp
lods
ins
adc
sub
pop
cmp
out
or
imul
mov
add
fldenv
pop
pushf
cmps
and
out
dec
jb
inc
leave
adc
ficomp
cmovns
mov
or
cdq
push
pop
adc
imul
outs
dec
inc
test
mov
in
inc
add
stos
clc
adc
push
xchg
(bad)
aad
fnsave
in
(bad)
leave
add
or
ror
add
add
pop
add
mov
shl
xor
jecxz
cmp
inc
xor
js
add
add
test
or
aaa
or
sbb
int3
inc
dec
pusha
dec
sub
push
mov
fld
loope
stos
and
adc
pop
test
push
sub
or
gs
ins
and
jnp
sub
test
and
and
push
mov
cmp
in
cmp
sub
jmp
jae
or
add
or
icebp
loope
lds
(bad)
push
adc
fucomi
or
pop
and
pop
cmp
pushf
dec
pop
and
fsubr
lods
add
test
xchg
inc
test
and
pushf
inc
movs
fnstsw
leave
push
sbb
clc
lods
xor
inc
dec
jno
push
jmp
and
gs
jmp
pushf
pushf
sub
in
add
dec
aas
and
add
bnd
test
add
bound
push
mov
(bad)
and
sbb
dec
sti
das
and
sub
sub
sbb
or
cld
push
dec
mov
mov
add
mov
inc
or
cld
push
loope
loope
fcom
xchg
inc
or
sub
stos
or
mov
adc
add
xor
sbb
jg
mov
mov
ins
push
inc
add
popf
cmc
mov
sti
xor
push
sbb
lahf
hlt
push
jmp
adc
adc
push
push
inc
(bad)
mov
push
mov
loopne
pop
pop
cld
cmps
add
lods
arpl
loope
xchg
or
aam
mov
ins
pop
inc
test
gs
sub
xchg
mov
ins
jnp
mov
xchg
in
mov
pop
add
push
enter
xor
adc
inc
xchg
or
cmp
add
adc
imul
inc
mov
add
outs
das
sbb
pop
hlt
test
add
stos
call
adc
in
add
test
sub
pop
mov
or
inc
cmp
or
adc
jb
sub
mov
jae
fmul
xchg
sub
(bad)
ret
lea
mov
in
jecxz
and
sub
add
out
add
push
shr
add
push
and
dec
xor
lods
add
and
repnz
test
loopne
pushf
movs
adc
or
out
pop
loopne
adc
cmps
adc
push
add
sub
and
mov
or
cmp
aaa
pop
mov
loope
dec
aaa
adc
les
jmp
dec
pop
retf
jno
push
and
jmp
dec
stc
jno
pop
cmps
add
stos
adc
push
cmps
ficom
lock
and
add
stos
mov
push
adc
mov
add
and
adc
adc
adc
mov
mov
mov
sub
add
test
jg
sub
adc
push
push
in
push
adc
adc
mov
or
add
dec
push
jecxz
push
push
mov
outs
js
xor
jae
xlat
xchg
mov
sbb
add
and
sbb
mov
add
sar
adc
inc
xchg
cmp
out
sbb
add
js
int3
lods
outs
jne
push
bound
pop
xor
shr
pop
test
rol
sbb
je
push
pop
test
cmps
test
jne
lods
adc
mov
push
bound
or
jmp
jne
outs
xchg
ret
mov
aad
add
scas
fnstsw
lahf
and
fnsave
pop
push
pop
in
icebp
stos
adc
lahf
in
mov
add
popf
cmp
das
jne
mov
inc
outs
dec
sbb
mov
test
ss
and
popf
aas
test
mov
inc
outs
arpl
test
inc
outs
jge
nop
push
test
push
jmp
cmp
push
xor
push
push
lock
add
adc
pushf
xchg
add
push
lock
out
or
push
or
jnp
lock
and
xchg
inc
push
nop
aaa
mov
or
(bad)
fld
xchg
jo
add
xchg
dec
inc
mov
in
test
add
sbb
xchg
push
stos
pop
rcl
repnz
jb
sbb
scas
inc
pop
inc
add
fdivr
adc
sti
adc
pop
mov
lea
test
outs
jae
pop
push
and
cmp
add
push
inc
and
inc
or
xchg
icebp
add
jg
add
mov
jge
mov
ficomp
mov
pushf
call
sbb
imul
mov
lods
add
cmp
ror
popf
add
inc
(bad)
adc
add
loopne
or
ss
add
rcl
pop
cwde
popa
inc
outs
adc
or
imul
pop
mov
clc
imul
movs
mov
popa
aam
add
inc
adc
or
pop
adc
xchg
pusha
test
add
push
loope
and
pop
mov
adc
inc
push
popa
(bad)
in
dec
xor
aaa
push
lds
jae
sbb
iret
push
mov
stos
fldenv
stos
jb
xor
mov
(bad)
test
push
or
imul
ror
push
push
popa
add
jg
fdivr
inc
xor
out
dec
lds
sti
xor
mov
cmp
xchg
imul
dec
mov
cmp
outs
add
pusha
xor
test
adc
push
outs
(bad)
inc
xor
mov
xor
add
add
sbb
or
ret
lea
pop
loope
imul
add
mov
mov
stos
ret
or
lahf
sub
lahf
and
lods
mov
add
test
fnstsw
sub
sub
ror
pop
xor
add
leave
sub
mov
mov
aam
xor
movs
mov
hlt
adc
sub
or
(bad)
pop
test
(bad)
jmp
movs
push
xchg
fld
ret
fstp
adc
je
add
(bad)
arpl
mov
test
std
jo
stos
add
push
mov
or
sub
mov
add
mov
fst
add
push
sbb
movs
fldcw
rcr
fld
xchg
pop
or
mov
or
aaa
adc
fld
pop
mov
push
(bad)
push
add
fnsave
adc
dec
inc
fldenv
or
fscale
fldenv
in
test
stos
adc
imul
loop
add
ins
dec
inc
rsqrtps
xor
aad
and
inc
jp
inc
push
dec
inc
pop
add
mov
(bad)
ins
cmp
jnp
mov
or
sbb
sbb
ss
pop
xchg
push
push
dec
and
or
ss
inc
inc
(bad)
aas
sub
xchg
cmps
pop
arpl
inc
iret
sub
xor
inc
jmp
or
imul
mov
adc
std
jo
enter
cmp
cmp
add
inc
push
and
cli
call
push
xlat
(bad)
fst
mov
push
clc
fimul
sub
das
jbe
push
xor
(bad)
test
fbld
jp
mov
test
jle
mov
pop
scas
fdivr
out
push
mov
push
pop
mov
(bad)
inc
fild
outs
iret
es
push
adc
outs
retf
or
xchg
(bad)
out
sbb
cmc
pop
pop
sahf
fcom
push
loop
fwait
test
cmp
adc
fbld
fmulp
mov
jecxz
push
adc
fdivrp
in
in
out
call
fnstsw
jmp
jmp
mov
fistp
mov
fbld
mov
mov
jp
inc
ss
cmc
sahf
div
dec
aam
(bad)
push
push
cli
dec
push
int3
les
cld
fild
xor
push
in
pop
push
fadd
pop
fist
mov
icebp
or
pop
in
cwde
add
loope
or
push
add
add
add
es
scas
in
pop
inc
push
add
or
push
sahf
push
stos
ret
adc
scas
push
push
cmp
sub
fsub
push
sub
xor
or
repz
xchg
lods
or
adc
push
loope
pop
dec
push
nop
jl
cwde
test
cld
push
lock
pop
pop
jns
adc
test
jo
sub
sub
pop
outs
and
and
mov
pop
test
mov
sub
mov
pop
jge
sbb
sahf
sub
test
pop
call
cs
cmp
out
repz
push
mov
call
jge
cmp
aam
cmp
pop
sbb
lock
cmp
or
cmc
mov
fistp
add
dec
and
mov
(bad)
pop
or
sub
add
and
fld
push
add
retf
mov
jge
sar
jne
lahf
test
pop
movs
fmulp
push
daa
jmp
fbstp
daa
jmp
push
es
retf
retf
retf
rcr
adc
dec
loopne
loopne
mov
int3
sbb
pop
jnp
mov
addr16
(bad)
loop
jge
pop
dec
jecxz
mov
in
pop
jle
aaa
fucom
inc
in
pop
pop
jle
mov
out
out
neg
ins
out
mov
call
xlat
sub
(bad)
inc
jmp
mov
jmp
mov
jecxz
into
ucomiss
jmp
std
repnz
cli
xor
dec
in
mov
ret
in
ins
in
fucomi
mov
out
shr
out
outs
jg
add
ds
lock
jp
xchg
xchg
lock
gs
xlat
bsr
repnz
push
cdq
repnz
pop
lds
aaa
arpl
xchg
(bad)
comiss
push
sub
hlt
cmp
stos
clc
push
push
pop
mov
push
xor
jns
mov
je
out
cmp
aad
shl
mulps
pop
mov
pop
xlat
int3
clc
aaa
stc
xchg
aas
test
out
fisttp
arpl
cli
cmps
fwait
xchg
xchg
xchg
xchg
cli
push
sti
jne
idiv
jnp
xchg
xchg
xchg
cld
int3
cld
cmp
cmps
std
idiv
jg
outs
add
xchg
ror
jae
cld
inc
push
cmp
cmps
call
loopne
gs
aas
inc
push
icebp
vmread
add
jns
(bad)
add
repnz
and
jnp
xchg
jle
jecxz
test
mov
add
sub
add
pop
add
cmps
addr16
js
push
jnp
add
mov
sub
xor
mulps
test
or
cdq
mov
setge
lds
fwait
xor
psubusb
or
fs
cmps
or
jns
repnz
or
sahf
mov
fiadd
lods
adc
and
inc
jp
dec
adc
push
adc
test
lahf
add
push
es
inc
pop
in
sti
mov
pop
pop
in
imul
mov
jb
lds
xor
nop
cmp
or
or
rcl
test
adc
shl
push
push
cmp
int
jns
and
xchg
cmp
dec
push
inc
dec
in
mov
pop
sub
ja
sbb
push
retf
dec
add
ror
test
nop
mov
inc
cmp
sbb
test
gs
lds
mov
add
pop
and
cmp
xor
inc
test
cmps
iret
push
dec
push
push
cmps
mov
jmp
cmps
jb
es
sub
cmps
adc
in
sahf
adc
scas
mov
ins
dec
inc
xor
rcl
push
push
test
or
retf
jne
gs
adc
sbb
leave
add
gs
add
fmul
cdq
loop
and
add
gs
inc
test
test
dec
adc
jmp
adc
push
push
mov
jmp
add
push
bound
in
jecxz
add
add
test
iret
or
push
add
in
mov
lods
jo
xchg
mov
movs
push
or
add
cmp
or
(bad)
nop
push
and
sbb
push
jmp
dec
sbb
push
sbb
pop
sbb
shl
jns
inc
repnz
mov
add
mov
imul
adc
mov
mov
sbb
jmp
push
ins
xchg
pushf
dec
icebp
lods
adc
shr
mov
lds
leave
add
jmp
imul
push
sub
in
and
mov
cmc
out
and
jo
sbb
xchg
adc
or
lahf
jge
mov
repnz
cli
jmp
jge
cli
jns
push
mov
ins
ja
mov
sub
test
push
jge
cli
cmp
adc
and
mov
mov
in
shr
iret
add
inc
sub
fwait
iret
bound
shr
mov
iret
and
xor
ins
les
adc
push
test
mov
push
pop
adc
adc
nop
psubsb
xchg
xor
movs
out
and
movs
add
test
and
inc
shl
push
dec
rcr
popa
test
popa
pop
push
push
aam
jmp
xor
add
dec
rol
popa
or
loope
cwde
movs
xchg
and
mov
adc
sbb
or
inc
stos
ins
mov
and
mov
dec
or
or
leave
dec
cmp
mov
aad
mov
push
adc
inc
or
sahf
test
and
pop
jmp
push
dec
add
adc
dec
fcom
or
movs
(bad)
fst
scas
bound
in
cmp
bound
push
jmp
mov
pop
nop
adc
inc
test
pop
add
pop
retf
pop
inc
and
push
ss
stos
inc
sbb
fstp
nop
mov
test
adc
inc
and
pop
pop
add
pop
les
push
push
or
movs
pop
fimul
test
pop
dec
add
retf
stos
or
in
pop
pop
fild
les
add
imul
sub
inc
lods
loop
and
fnsave
aam
lea
add
adc
xchg
jne
call
xor
mov
push
or
sbb
jne
or
mov
mov
mov
jne
push
enter
pop
cmps
xor
jge
jne
or
xor
xor
mov
shl
mov
inc
(bad)
xor
adc
jne
sub
adc
shl
and
or
cdq
mov
dec
adc
sub
cmps
adc
cli
or
rcl
sbb
push
pushf
adc
adc
test
rcl
add
pusha
cmp
adc
(bad)
xor
sbb
mov
test
mov
ins
mov
or
sar
lea
fst
sbb
push
pop
mov
inc
sahf
mov
mov
cmp
add
adc
fld
sub
aam
xchg
add
shr
xchg
mov
inc
push
add
dec
ins
inc
add
(bad)
sbb
movs
or
sti
jg
repnz
adc
jg
cmp
add
ffree
retf
jg
xchg
stc
xor
outs
arpl
inc
pusha
stos
add
or
or
sbb
push
jb
cmp
clc
dec
jl
popa
or
mov
inc
mov
xor
int
sub
push
daa
int
add
test
dec
push
or
int
stos
push
or
add
jmp
adc
ss
test
mov
int
and
aad
jecxz
pusha
test
dec
xor
stos
adc
add
inc
add
adc
add
inc
push
arpl
add
push
movs
mov
movs
add
int
adc
sub
or
xor
int
daa
add
push
int
add
push
int
jo
cmp
or
imul
pop
test
inc
sti
movs
test
std
test
and
push
pop
jmp
nop
pop
ret
fild
hlt
std
(bad)
std
punpcklwd
jne
push
cwde
sbb
repnz
hlt
jns
mov
rcr
outs
test
inc
mov
hlt
test
dec
rol
lods
jmp
mov
outs
mov
jae
add
pop
add
jge
(bad)
sub
or
mov
call
pop
mov
mov
jg
arpl
cmove
inc
pop
xchg
cmc
push
mov
push
pop
cs
pop
pop
xor
in
mov
imul
sbb
ret
imul
fs
and
iret
ins
mov
push
mov
outs
aam
mov
out
test
sbb
or
js
push
and
adc
(bad)
aad
cli
push
lock
je
xchg
inc
pop
xor
xor
add
lods
mov
dec
jmp
sub
pop
ret
jb
dec
xor
sbb
(bad)
xchg
pop
xor
cmp
popa
add
or
add
xor
sbb
push
adc
fisub
xlat
(bad)
pop
outs
and
push
mov
or
aad
inc
jno
pusha
out
adc
xlat
inc
dec
jne
inc
push
ret
sbb
sub
xor
rol
sbb
addr16
fsubr
mov
xchg
loop
mov
jbe
sub
push
or
sbb
pop
xchg
pop
pop
je
jbe
pop
jg
inc
mov
mov
inc
dec
adc
dec
call
dec
or
mov
mov
pop
or
pop
xor
add
push
repnz
stc
mov
push
imul
jb
ret
inc
or
lods
pop
cmp
add
in
adc
fadd
add
cmp
and
shl
in
lock
mov
pusha
pusha
jmp
push
lahf
test
sbb
adc
pop
add
mov
mov
xor
sub
xchg
mov
xor
daa
in
add
push
push
lock
pop
aam
pop
pop
xor
lahf
push
add
mov
cdq
loop
std
or
mov
out
mov
add
xchg
imul
push
stc
sbb
movs
push
ret
popf
sar
inc
dec
nop
xlat
mov
or
and
and
pop
push
jnp
cmc
call
call
data16
bound
mov
test
test
sub
inc
or
aam
cmp
rol
popf
gs
test
pop
jae
push
sub
call
out
push
loopne
lods
inc
lea
cli
xchg
int3
dec
jnp
gs
adc
sbb
retf
not
jne
push
xchg
cmp
lock
jb
mov
popf
mov
div
icebp
push
hlt
xchg
inc
xor
sbb
sahf
xchg
jne
aas
sbb
mov
dec
jmp
lahf
imul
out
or
mov
out
ret
jae
nop
push
clc
and
retf
jno
sbb
xor
nop
out
lock
pop
mov
repnz
imul
adc
scas
movs
cmc
and
pop
(bad)
fidiv
ins
and
arpl
mov
cmp
jne
sbb
push
inc
dec
jne
(bad)
push
leave
sub
pop
jg
clc
mov
mov
ins
mov
fnsave
add
push
(bad)
jle
add
shl
mov
inc
jmp
hlt
add
cmps
(bad)
inc
push
lock
mov
cmp
js
enter
push
and
xchg
add
fwait
adc
sahf
idiv
cmp
sub
fisub
adc
pop
sbb
std
push
inc
dec
jne
mov
sub
add
and
test
or
dec
mov
dec
out
stos
mov
arpl
sbb
and
outs
adc
inc
test
mov
or
pusha
sbb
mov
ror
push
inc
pusha
or
repz
xchg
les
ficom
jnp
sub
add
mov
dec
push
jae
mov
mov
and
push
retf
pop
pop
add
or
or
and
pusha
lea
daa
adc
mov
mov
outs
dec
push
packssdw
mov
add
push
cld
retf
or
movs
mov
daa
ror
xchg
call
sti
retf
test
aam
push
mov
leave
add
push
adc
inc
enter
rcr
lods
pop
aam
cmps
aad
fcomp
arpl
std
and
into
mov
loopne
ds
in
cmp
push
push
adc
add
xchg
xchg
retf
mov
xor
dec
aam
leave
leave
gs
rcl
jb
in
push
int3
int3
inc
cmps
fbld
cmp
push
pop
stc
popa
and
pop
imul
pop
mov
pop
cdq
repnz
mov
inc
pop
add
mov
sbb
add
pusha
inc
xchg
or
pop
mov
add
les
adc
xchg
and
mov
call
cli
add
add
sti
jecxz
add
xchg
push
cmp
loop
mov
ret
test
addr16
xor
jp
pop
stc
xlat
pop
(bad)
adc
clc
inc
add
ret
mov
xchg
adc
inc
add
mov
ret
imul
out
shl
inc
test
xchg
dec
jne
ror
(bad)
sti
pusha
xor
rcr
sbb
xchg
add
dec
xlat
adc
clc
push
sub
push
fs
sub
ror
push
and
add
popa
add
push
enter
mov
aaa
imul
inc
adc
int3
test
sti
mov
rol
enter
push
inc
and
repnz
aam
dec
dec
mov
icebp
imul
pop
pop
getsec
jno
ins
lock
popa
(bad)
jnp
jle
mov
sbb
adc
inc
adc
push
add
xchg
pop
adc
jo
sbb
(bad)
mov
and
and
mov
sbb
or
data16
xor
(bad)
jmp
std
pusha
sub
xchg
inc
idiv
in
pop
adc
scas
or
push
pusha
pop
pusha
ret
dec
sbb
inc
in
mov
sbb
push
nop
add
xchg
sbb
xor
inc
lahf
mov
adc
xor
cmp
dec
fdiv
cmp
bsf
je
test
jns
add
add
pop
mov
and
jmp
aaa
imul
scas
shl
xor
scas
push
add
cmp
mov
aas
clts
xchg
and
dec
mov
push
inc
test
and
dec
scas
call
cmp
and
lock
add
(bad)
in
add
sub
jne
sbb
xor
jo
lods
jle
(bad)
sti
fidivr
mov
sbb
jb
push
ja
add
imul
les
sub
and
inc
cld
dec
cwde
or
adc
(bad)
sahf
adc
in
cmps
pop
inc
mov
cmp
loope
or
repnz
in
jo
jo
ret
ds
sbb
sbb
jl
add
sub
inc
ja
or
jae
inc
jl
jno
or
xchg
pushf
or
fwait
pop
cmp
add
inc
lock
clc
std
mov
pop
sbb
pop
mov
dec
or
pop
xor
(bad)
or
jb
jne
aaa
aaa
jbe
mov
paddb
xlat
sub
push
add
cmp
jbe
sbb
push
call
ins
lods
js
pop
and
nop
jecxz
pop
xchg
(bad)
pop
lds
jg
dec
daa
(bad)
inc
cld
mov
cmp
add
fadd
cld
jne
add
nop
push
ja
mov
jbe
cmp
mov
test
dec
xor
(bad)
and
pusha
jnp
and
into
push
inc
hlt
dec
add
test
ror
add
out
es
add
push
mov
mov
add
cdq
jns
imul
fadd
fcomp
stos
add
cmp
add
add
adc
xor
xchg
(bad)
pop
daa
pop
in
mov
dec
std
push
pop
mov
movs
lahf
fdiv
adc
cmps
lea
ja
push
and
push
mov
jo
ss
scas
popa
pop
retf
add
lea
jne
sub
mov
push
sbb
cs
sub
aam
adc
lock
adc
mov
dec
out
mov
jmp
push
lahf
inc
or
xchg
and
mov
sbb
or
or
or
out
lock
inc
pop
mov
mov
dec
in
std
dec
xchg
rol
jnp
or
push
mov
outs
ja
aas
xchg
jl
outs
jbe
and
sbb
stos
outs
xchg
dec
xchg
pop
cwde
cwde
jbe
pop
mov
sbb
mov
mov
mov
push
xchg
jle
ret
mov
sbb
(bad)
outs
lock
call
dec
jne
and
inc
mov
pushf
or
xchg
call
mov
jle
jmp
stc
pusha
movs
add
sahf
push
add
add
mov
jnp
(bad)
adc
nop
or
mov
pop
loopne
pop
inc
push
or
sub
add
test
test
lock
dec
pop
(bad)
fisub
and
pop
sbb
ret
jmp
sti
std
jmp
mov
add
or
cdq
sbb
movs
add
in
sbb
loope
adc
pop
xor
dec
cmps
inc
aaa
sub
jo
or
dec
stos
rol
mov
jne
in
ret
add
add
add
adc
cmp
aad
add
aaa
cmps
mov
rcl
xchg
push
lods
out
xor
pusha
inc
mov
imul
ret
in
add
xor
pop
xor
push
test
inc
mov
cmps
clc
push
call
in
imul
dec
jl
mov
sbb
add
cmp
jne
or
outs
fs
cwde
xor
add
add
inc
add
shl
dec
pop
add
push
mov
sbb
cwde
cdq
dec
add
call
sub
mov
in
cmp
lock
jne
outs
inc
aas
cwde
add
in
adc
dec
add
aas
lods
pusha
fild
dec
les
push
jne
xor
call
outs
imul
adc
jl
push
sub
int3
imul
test
pop
sbb
js
test
inc
in
cmps
pop
or
pop
mov
inc
ret
ins
and
loopne
loopne
es
jbe
add
sbb
sbb
mov
test
fmul
pop
clc
cmp
add
sbb
fist
cmp
in
dec
pcmpeqw
add
mov
mov
fbld
and
mov
xor
inc
add
mov
and
mov
in
pop
mov
stc
pusha
(bad)
leave
std
dec
aam
inc
jl
and
jl
adc
in
aas
ins
aas
pop
push
pop
adc
dec
call
and
push
jo
push
jo
mov
sub
mov
loopne
sbb
ror
sti
xchg
lods
sub
sar
xor
sbb
imul
push
inc
inc
vmptrld
daa
les
(bad)
jg
push
lds
jp
jl
scas
inc
jno
push
or
test
jge
xchg
cmp
dec
lahf
and
mov
inc
adc
and
and
dec
fld
fist
not
jne
pop
mov
push
mov
call
mov
jne
cmp
jle
dec
sub
jge
ret
add
adc
inc
sub
frstor
sahf
imul
imul
dec
inc
ins
pop
inc
pop
repz
or
inc
jb
mov
ret
or
or
sub
ret
les
test
add
push
dec
pop
adc
sbb
add
sub
cmp
push
dec
dec
or
sub
inc
fmul
push
jo
data16
jb
inc
arpl
popf
jmp
and
test
arpl
mov
cmp
push
sub
add
test
and
adc
adc
fwait
arpl
and
sub
add
out
pop
or
or
les
icebp
mov
push
cdq
fld
rol
mov
jmp
add
jne
add
sbb
into
mov
imul
inc
cmp
push
xchg
loopne
mov
mov
je
mov
imul
dec
pop
pop
jne
cmp
data16
iret
inc
adc
mov
dec
dec
shl
add
mov
sub
sbb
les
xchg
and
and
cmp
and
in
mov
mov
jne
xlat
add
or
xchg
mov
das
icebp
sbb
xchg
pop
cmp
jge
es
mov
clc
jl
and
mov
or
cmps
add
pop
xor
mov
add
mov
add
iret
fisubr
xor
mov
mov
cmp
adc
dec
add
dec
mov
mov
fs
sub
xchg
xchg
in
and
jns
mov
or
sub
popa
jno
push
inc
bound
sub
jmp
mov
mov
lahf
clc
pusha
cmp
dec
movlhps
mov
mov
sahf
call
add
cdq
aaa
sub
icebp
jl
inc
(bad)
test
sub
lods
xor
cld
mov
jle
jle
or
fsub
sub
sbb
ins
loopne
sub
fcomp
ret
ja
cmp
or
cmp
clc
dec
jmp
dec
jne
xor
push
pop
arpl
jnp
adc
cmp
mov
jne
in
adc
jmp
dec
lds
or
fldenv
idiv
push
dec
inc
sub
pop
in
ror
in
ret
dec
dec
sbb
scas
jle
std
sub
int
inc
pop
add
push
push
inc
ror
ss
stos
jns
out
mov
rol
out
setg
aad
mov
mov
jb
ss
sub
xchg
sub
sbb
or
sub
inc
cdq
mov
dec
add
add
mov
lock
pusha
and
mov
mov
pop
add
fadd
jne
aaa
shr
add
dec
sub
mov
loopne
ja
jecxz
sbb
or
cmp
(bad)
jmp
pushf
or
(bad)
cld
xor
iret
test
je
jmp
push
lea
mov
js
pop
ficomp
mov
inc
iret
sub
xchg
adc
out
imul
add
scas
idiv
or
dec
cmp
adc
add
loopne
push
xor
ds
dec
mov
repz
pop
popa
mov
inc
push
and
and
inc
push
sub
inc
pusha
rcr
add
or
je
lock
sub
xchg
mov
mov
pop
int
pop
sub
fild
sub
pop
push
pop
inc
inc
cmp
add
mov
(bad)
cmp
je
cmp
jne
stos
mov
sub
test
test
lods
movs
in
or
or
movs
clc
push
add
or
pop
pop
jmp
adc
bound
popa
lahf
push
inc
sbb
call
sbb
inc
repz
dec
js
jge
sub
push
sbb
push
jp
ret
push
arpl
or
outs
adc
outs
and
in
pop
pop
pushf
inc
pop
jne
mov
mov
cwde
js
cwde
xchg
or
lods
or
add
inc
adc
dec
push
push
ffree
ret
adc
cmp
xor
in
lahf
pop
data16
push
mov
pop
nop
cmc
test
pop
fadd
jle
or
xchg
pop
stos
pop
sti
shl
scas
in
aas
add
dec
pop
repz
push
mov
push
out
mov
pop
push
push
push
sbb
adc
fdiv
xchg
dec
(bad)
jmp
xchg
adc
pop
in
pop
inc
fild
outs
mov
push
nop
sub
or
pop
(bad)
and
aam
in
sub
(bad)
cmp
sub
test
les
mov
sbb
test
in
pop
mov
jmp
xchg
loopne
push
clc
mov
es
jo
pop
inc
inc
idiv
push
fisubr
in
push
inc
mov
jmp
sub
push
cmp
popa
sub
push
inc
cmp
mov
sub
xlat
sbb
adc
jns
jle
add
in
arpl
adc
push
adc
outs
rol
jne
jbe
jno
cmps
pop
stc
jne
addr16
clc
and
test
push
stos
pop
xchg
add
inc
pop
in
sbb
adc
adc
add
clc
pop
pusha
push
scas
addr16
les
mov
xchg
lock
or
pop
rol
or
mov
movs
cmp
es
aaa
inc
aaa
add
rol
or
jae
mov
rol
(bad)
dec
retf
imul
outs
lock
push
out
cmps
scas
jmp
adc
imul
pop
inc
add
cmp
aaa
inc
hlt
and
push
(bad)
cmp
or
and
retf
sbb
inc
mov
inc
cmp
(bad)
cwde
hlt
jmp
sub
test
loope
clc
ja
outs
add
mov
bound
ret
mov
add
pop
add
add
imul
xchg
sbb
cpuid
inc
fnop
xchg
adc
add
pop
scas
mov
enter
mov
and
dec
jne
push
or
jae
cmp
mov
dec
mov
sbb
mov
imul
fwait
cmps
fs
push
inc
idiv
test
inc
or
sbb
std
inc
fisttp
and
jge
xor
es
push
push
iret
ins
mov
out
push
jo
shr
pop
fistp
add
jae
adc
or
into
add
fbstp
lock
add
ss
push
mov
pop
cs
bound
jne
jae
outs
add
bnd
ins
les
outs
(bad)
and
xlat
cmps
imul
add
lock
add
jb
jmp
pop
mov
aad
inc
dec
jne
mov
jbe
sahf
movs
movs
adc
retf
aaa
test
sbb
test
dec
inc
pop
push
sub
mov
pop
pop
lds
mov
mov
mov
mov
pop
clc
and
lds
and
rcl
repnz
dec
rcl
ret
shl
add
xlat
pop
pop
shr
dec
rol
add
add
adc
cmps
gs
jmp
jp
add
xchg
inc
out
jmp
nop
xchg
jbe
xchg
sar
cmp
push
push
lods
rol
shl
pop
or
pop
les
int3
sub
pop
les
or
xchg
or
loopne
mov
sbb
jo
add
and
mov
jl
jne
sbb
mov
out
dec
lea
les
lods
cld
and
enter
or
or
in
inc
fidiv
jmp
jg
add
sub
ror
leave
mov
cmp
sar
pop
add
sub
jae
xor
sbb
fcomip
push
push
ja
cs
cmp
xor
add
cmp
aas
sbb
add
sub
jg
and
ss
repnz
mov
jo
jecxz
xor
inc
cmp
bound
xchg
sbb
add
adc
dec
outs
add
sub
inc
mov
nop
jge
ss
add
sub
jne
pand
inc
or
cmps
and
shl
lock
arpl
div
or
xor
jg
inc
(bad)
lock
rol
add
adc
cmp
inc
push
and
mov
sbb
or
pop
push
inc
mov
dec
ret
les
mov
aaa
cmc
loop
in
push
lea
mov
cmp
mov
enter
xchg
cwde
das
xchg
push
pop
cmp
adc
add
dec
shl
and
xor
aad
ret
imul
or
xchg
int
outs
jns
dec
inc
test
into
or
iret
test
outs
or
lods
mov
inc
and
js
clc
test
inc
push
sbb
xchg
add
in
test
inc
in
div
sub
inc
sti
and
inc
push
cli
xchg
out
out
adc
clc
push
ja
dec
popa
pusha
xor
mov
jmp
and
mov
lock
add
jle
inc
daa
pop
pop
jbe
dec
adc
xor
xor
test
mov
fadd
movs
addr16
jo
dec
popf
jne
inc
or
mov
jae
and
jo
mov
inc
inc
jecxz
push
xor
fwait
add
push
push
xor
repnz
dec
inc
mov
iret
ret
mov
sub
aas
xor
int3
(bad)
add
jg
or
rcl
or
sub
cmp
and
xchg
sbb
cmp
push
icebp
in
pop
jns
outs
add
add
sub
and
mov
sub
mov
call
push
xchg
das
mov
adc
out
int
jns
dec
into
push
mov
adc
imul
(bad)
jecxz
push
and
push
lods
or
sub
and
jb
push
pop
into
sbb
and
cvtdq2ps
mov
test
movs
out
mov
mov
jg
inc
push
mov
jo
jl
adc
shl
test
lea
adc
test
and
in
xor
sub
retf
adc
test
and
and
adc
xchg
sahf
add
lea
push
add
js
add
aad
movs
add
and
dec
or
and
iret
movs
stos
test
sub
cpuid
xor
std
mov
mov
pusha
cmp
add
in
and
les
(bad)
jnp
add
pop
fcom
or
cmp
jl
popa
les
or
enter
jne
mov
nop
pop
add
pusha
inc
pop
std
cmc
adc
test
mov
sub
ror
mov
or
rcr
scas
sub
and
jnp
or
add
push
ja
adc
sub
int
mov
mov
jl
and
jbe
loop
or
stos
cmp
lock
pop
mov
adc
add
adc
movs
fistp
retf
pop
push
pop
cmp
mov
leave
sub
stos
mov
das
jo
(bad)
sub
jno
addr16
push
inc
mov
add
inc
or
add
mov
ins
jnp
xchg
xor
or
inc
or
bound
sub
mov
in
xor
pop
add
inc
pop
sbb
inc
xchg
add
aad
fisttp
push
test
lods
loopne
cmp
rcl
mov
sub
jge
push
or
sti
mov
dec
xor
adc
or
pop
sti
push
or
push
out
xlat
add
adc
sti
inc
icebp
and
add
add
push
push
pop
aad
(bad)
std
add
add
inc
int3
add
fs
fsubr
jge
(bad)
dec
and
scas
and
lds
sbb
mov
adc
out
inc
pop
sbb
hlt
and
cli
cmp
rol
jno
or
mov
adc
mov
mov
add
lea
jae
cs
rcl
icebp
jmp
push
mov
mov
mov
fisttp
fld
inc
add
add
scas
shl
mov
dec
or
(bad)
mov
push
and
adc
pop
inc
xchg
ss
ret
push
push
mov
cmps
adc
jne
add
sub
sti
inc
or
mov
es
dec
pop
mov
xchg
lock
push
stos
mov
sbb
loopne
push
push
iret
rol
add
sbb
aam
add
lock
pushf
pop
mov
dec
retf
aam
cs
and
xor
fiadd
lea
or
lock
inc
xor
sbb
inc
inc
add
mov
sbb
pop
pop
shr
sbb
and
mov
jnp
in
sbb
mov
popf
(bad)
js
jno
cmp
cs
push
xchg
shr
pop
sub
mov
or
sub
xor
pop
mov
aam
push
xchg
add
dec
pop
enter
xor
push
(bad)
xor
enter
aaa
loopne
push
pusha
and
in
sub
push
pusha
xor
jo
and
jae
pop
jmp
xchg
and
outs
mov
pop
jmp
adc
pushf
(bad)
test
inc
stos
jne
push
cli
fcmove
xchg
aaa
sub
cmp
lahf
pop
nop
push
imul
pop
inc
aaa
jno
jae
sbb
hlt
es
dec
dec
in
nop
popa
(bad)
pop
pop
outs
enter
mov
or
dec
xor
sar
mov
dec
je
jmp
inc
or
loopne
and
loopne
pop
fadd
cmps
jecxz
pop
xlat
xchg
out
fmul
add
dec
inc
push
call
inc
mov
test
loopne
push
in
cdq
loopne
or
ss
movs
cdq
jbe
lea
push
sbb
rcl
ror
fadd
add
call
xchg
int
cmp
dec
rol
(bad)
push
inc
stos
mov
sbb
cmp
lds
push
or
adc
(bad)
push
cmp
enter
dec
jg
dec
daa
(bad)
mov
mov
sbb
pop
jne
es
add
push
xor
pop
ror
pop
sub
jmp
pop
mov
xchg
xchg
movzx
cmp
ja
xlat
push
test
sub
fisubr
test
xchg
push
movs
mov
mov
cli
or
sbb
push
ret
test
add
xchg
ror
and
or
cmp
inc
pop
push
movntps
push
sbb
lds
pop
cmps
sub
inc
shl
aas
pop
lahf
mov
mov
dec
push
pop
ror
or
mov
int3
jp
(bad)
mov
(bad)
xchg
loope
mov
pop
jmp
std
xor
das
sbb
inc
mul
sbb
add
jmp
jl
push
mov
add
das
mov
sub
push
imul
push
into
add
jnp
ret
sar
or
sub
adc
pop
adc
jb
les
add
inc
loopne
mov
mov
in
or
jbe
loope
loopne
or
call
pop
outs
nop
enter
jp
sub
sbb
xchg
add
out
(bad)
pop
ins
cmp
inc
lods
or
push
xor
inc
fiadd
push
and
out
test
je
xchg
fadd
pop
out
ror
loopne
lods
pop
loopne
pop
(bad)
cmps
ins
adc
cmp
neg
iret
pop
mov
ja
fadd
xchg
xor
fs
adc
add
neg
add
push
shl
out
and
add
and
dec
pop
or
and
push
or
and
xchg
sub
xchg
dec
(bad)
mov
and
popa
dec
scas
mov
inc
jle
nop
addr16
rol
nop
leave
out
add
and
pop
mov
aam
shl
and
daa
fild
sub
fcom
sbb
add
daa
aas
test
adc
test
lds
dec
aam
push
xchg
and
aam
sub
pop
fcomp
or
push
fcomp
push
test
mov
lods
pop
pop
mov
popf
(bad)
(bad)
xor
add
cmps
call
sub
or
push
jb
sub
enter
fcomp
sub
xchg
pop
xor
outs
imul
fcomp
jne
mov
adc
dec
test
gs
out
aam
fs
mov
inc
push
xchg
fcomp
mov
sbb
or
fadd
dec
or
mov
pop
les
pop
(bad)
cmp
and
xchg
dec
int3
addr16
rcl
aam
or
fs
test
jb
add
add
or
mov
jbe
cmp
aaa
pop
cwde
pop
cmp
test
movs
push
add
xchg
loopne
data16
retf
(bad)
stc
and
sbb
sub
je
in
idiv
nop
bound
add
jmp
test
push
xor
test
mov
jns
xor
inc
imul
mov
xchg
inc
es
(bad)
fisubr
add
imul
add
clc
jns
movs
addr16
dec
je
push
or
movs
and
ret
dec
add
pop
adc
scas
or
les
jg
pop
mov
sbb
mov
retf
sbb
lods
push
int
push
xor
jo
xor
ret
inc
(bad)
int3
mov
test
and
movs
lock
test
es
out
in
xor
movs
xor
mov
mov
popa
add
push
sbb
pop
nop
xor
adc
mov
ja
and
cdq
xchg
ins
sub
sbb
(bad)
and
xor
inc
push
test
dec
push
dec
fadd
push
out
imul
add
ja
test
sbb
or
xor
mov
mov
das
pop
call
add
adc
scas
add
add
test
sbb
add
test
shr
pop
les
push
cdq
and
test
xchg
and
mov
sub
ins
loopne
push
adc
push
push
loope
xchg
int3
add
or
outs
outs
leave
adc
mov
addr16
dec
xor
dec
in
push
push
and
in
ins
add
mov
ss
cmps
(bad)
inc
pushf
sub
mul
popa
popa
adc
sbb
popa
and
adc
add
pusha
cld
mov
sbb
out
add
jl
call
cdq
(bad)
fild
lds
gs
jmp
cmp
ret
sbb
or
adc
sbb
pop
stc
add
call
xchg
sub
pop
jb
pop
in
push
and
jb
(bad)
jb
pop
jb
loopne
stos
sbb
or
fstp
add
aam
test
pop
xchg
dec
sbb
inc
pop
jb
enter
xor
jne
out
cmp
xor
or
fidivr
or
sub
cmp
mov
movntq
js
and
and
je
sub
bound
in
pop
(bad)
das
xchg
(bad)
scas
out
xchg
xchg
sar
ror
movs
imul
loopne
cmp
pop
jnp
ja
ins
sar
xor
sbb
(bad)
sbb
mov
and
and
push
loopne
and
cdq
cmp
in
hlt
dec
in
add
fcomp
repnz
sbb
sbb
mov
mov
clc
jmp
jne
rcl
adc
or
lahf
mov
lea
xor
adc
bound
pop
call
mov
push
adc
int3
inc
mov
pop
hlt
rcl
push
lods
repz
pop
mov
repz
and
call
push
mov
iret
mov
movs
mov
pushf
ret
jmp
jae
ins
addr16
jns
stos
pusha
and
in
jmp
cmp
fs
mov
fdivr
test
out
in
push
mov
push
fs
dec
pop
mov
jne
adc
mov
add
jecxz
inc
mov
or
ret
fadd
jge
inc
sbb
ret
packsswb
jns
ret
add
fsubr
cmp
pop
mov
(bad)
lgs
fisubr
add
iret
push
aas
adc
aad
add
js
lods
or
mov
pop
outs
add
lods
sub
sub
sar
mov
push
xor
add
sub
mov
mov
daa
lea
or
std
xor
in
sbb
adc
adc
and
or
dec
out
scas
cmove
cmp
inc
mov
pop
ja
pop
cmp
inc
inc
add
push
add
fistp
xlat
mov
xchg
shl
stos
outs
push
lods
fwait
pop
push
add
jo
push
xchg
add
add
jl
inc
packuswb
dec
fsub
add
test
inc
pop
push
sbb
test
xor
adc
pop
jg
cmp
cmp
sbb
ror
cmp
adc
add
in
cmp
add
add
or
aam
pop
shr
adc
mov
pusha
pop
add
xor
and
ds
movzx
mov
inc
cmp
aam
push
jmp
xchg
aad
(bad)
outs
enter
out
add
pop
(bad)
mov
push
and
jb
inc
mov
in
in
xchg
lea
inc
cmp
(bad)
es
jne
pop
pop
add
dec
inc
jo
xchg
adc
fld
adc
out
loopne
dec
add
daa
imul
jmp
mov
jbe
adc
(bad)
and
push
mov
mov
dec
cmp
push
jns
sub
mov
mov
nop
loop
jo
stos
sbb
dec
adc
add
inc
outs
sub
push
sar
ja
sti
xor
push
leave
ja
ds
call
xchg
out
in
mov
adc
loopne
dec
xor
cmp
dec
idiv
sub
xor
inc
and
shl
cmp
add
mov
hlt
or
jp
mov
push
adc
jmp
mov
adc
out
pop
pop
lahf
mov
add
pop
add
fisubr
sbb
mov
sub
sbb
jbe
dec
cmp
es
outs
add
sbb
dec
pop
ror
outs
push
fwait
inc
push
arpl
push
adc
sbb
push
sbb
cmp
sbb
shl
into
psubw
aaa
dec
nop
pop
sbb
popa
je
jae
xor
dec
adc
cld
ror
jg
leave
sbb
mov
test
fisttp
jo
js
jnp
or
xchg
and
ja
pusha
adc
repnz
pop
out
add
dec
movs
xor
ss
lock
leave
adc
push
in
push
in
(bad)
imul
add
xchg
in
into
or
inc
cmp
loope
or
or
loopne
or
shl
pop
mov
out
in
pop
pop
mov
ins
inc
xlat
daa
pop
add
in
jl
sbb
cld
jl
gs
mov
fistp
cmp
cmp
inc
cmp
inc
es
jo
sub
cmp
adc
dec
(bad)
mov
add
dec
lahf
add
add
or
or
inc
adc
test
loope
or
(bad)
shl
dec
xchg
add
cmp
jne
mov
nop
pop
pop
adc
xchg
inc
and
(bad)
lock
inc
mov
lods
loopne
push
pop
inc
lea
dec
and
push
jg
mov
sub
ret
mov
clc
add
cmp
jle
inc
sti
mov
mov
pop
sbb
idiv
add
(bad)
outs
adc
mov
mov
inc
adc
jbe
push
cli
xchg
ds
add
imul
enter
jbe
dec
push
sbb
test
sub
mov
in
jecxz
mov
loopne
fidiv
adc
add
sbb
add
xchg
jbe
lock
enter
test
adc
js
dec
clc
sahf
mov
inc
cld
push
sbb
sti
dec
add
les
add
ret
sbb
add
sub
mov
outs
cmp
(bad)
cmp
and
inc
lock
inc
and
sti
mov
adc
inc
sub
nop
add
pushf
pop
mov
push
ret
lahf
jae
push
mov
test
xchg
add
add
push
(bad)
rcl
div
mov
lods
pop
xor
and
sbb
cwde
mov
add
mov
mov
daa
xchg
loopne
mov
(bad)
dec
adc
and
cmps
mov
shl
pop
add
adc
or
or
out
mov
adc
ret
adc
mov
mov
adc
cmp
or
or
sub
jl
inc
ins
xor
movs
ret
adc
or
sub
xor
mov
add
xor
idiv
push
and
pop
aam
xchg
cmp
test
cmp
sub
bound
xor
mov
adc
jns
push
sbb
mov
popa
lea
shr
in
and
or
or
mov
add
push
xor
and
push
(bad)
fnstcw
and
iret
mov
and
xchg
mov
cmp
and
inc
mov
mov
sbb
cmp
rol
jne
jno
test
(bad)
retf
(bad)
pop
mov
push
push
aam
cmp
mov
sbb
das
and
and
repz
or
sub
sbb
xor
and
inc
push
mov
mov
shl
pusha
call
scas
mul
xor
pop
div
movs
test
pop
sbb
push
sbb
inc
inc
sub
mov
dec
out
xlat
cmp
lea
adc
pop
push
mov
mov
sub
daa
mov
sbb
in
xchg
mov
sub
imul
jbe
push
mov
cmp
mov
test
dec
push
push
sbb
cmp
jbe
sbb
pop
sub
jb
dec
push
pop
lods
or
xchg
mov
jne
sub
test
adc
das
test
mov
pcmpgtb
aam
dec
xor
sbb
test
mov
adc
inc
or
pushf
xchg
repnz
push
add
into
cld
sbb
into
or
nop
mov
shr
gs
dec
dec
sbb
xchg
push
push
div
aam
aaa
or
out
leave
shl
or
push
add
mov
mov
enter
sbb
inc
dec
xor
ja
or
aam
add
xor
jns
mov
add
or
popa
push
xor
idiv
loopne
je
add
jo
cmp
mov
or
pop
ret
sbb
xchg
aas
push
scas
ret
xchg
mov
ins
cmp
sub
or
adc
or
and
push
sub
nop
or
nop
pop
aam
aaa
inc
or
rol
mov
in
in
lock
push
int3
mov
sbb
push
pop
or
adc
inc
es
ss
sbb
or
sbb
push
xor
adc
add
add
add
(bad)
call
pop
push
or
adc
sbb
rol
jne
mov
push
sbb
retf
or
push
clc
loopne
cdq
ror
push
mov
mov
loopne
inc
jb
movlps
dec
or
retf
add
add
cdq
fdiv
xchg
sub
mov
das
push
(bad)
or
push
xor
push
or
and
mov
dec
bound
aam
cmovne
push
jb
scas
adc
adc
pop
or
inc
adc
and
inc
adc
xor
push
adc
adc
cwde
push
xor
push
xor
push
sbb
sbb
mov
dec
sbb
das
and
and
sbb
bound
ins
inc
xchg
sbb
pop
xchg
mov
inc
js
or
xchg
or
mov
call
or
pop
les
and
jge
leave
cmp
and
inc
es
pop
and
or
nop
mov
lods
shr
push
jmp
mov
inc
and
and
mov
pusha
pusha
push
mov
push
aaa
or
les
add
mov
and
call
arpl
fwait
xchg
cwde
cmp
je
adc
pop
rol
retf
mov
push
adc
pop
add
sar
or
je
push
push
sub
or
adc
add
in
and
add
rol
lds
inc
(bad)
cmp
ret
loopne
loopne
dec
jae
push
xchg
add
out
mov
push
jmp
sahf
pop
iret
fsubrp
cld
push
inc
or
dec
clc
push
jg
push
lea
aad
push
cs
sbb
aas
or
jo
xor
add
inc
outs
loop
mov
mov
(bad)
push
rol
js
push
call
gs
fwait
sbb
aaa
cmps
clc
das
sub
sar
fcomp
aam
pop
xlat
add
push
sbb
lea
adc
in
jns
pop
leave
repnz
dec
sbb
sahf
xlat
lock
xchg
stos
inc
push
arpl
iret
shr
push
xchg
cmps
adc
repz
js
sbb
xor
imul
outs
sub
xchg
adc
adc
and
xor
mov
mov
stos
mul
js
fcomp
fcom
sti
mov
mov
in
pop
jmp
sbb
dec
adc
inc
sub
lods
sbb
shr
jl
dec
mov
xchg
or
push
loopne
jno
mov
lahf
scas
and
rep
mov
mov
ficom
add
rol
imul
es
mov
sti
stos
iretw
cmp
adc
int3
repnz
jb
push
push
sub
jne
fwait
das
mov
rol
imul
inc
dec
fwait
mov
inc
mov
aam
fld
aaa
mov
nop
fcom
ins
jo
arpl
mov
jnp
inc
fdivr
inc
or
mov
add
and
rcr
popf
sub
xchg
pop
inc
pop
in
and
push
ror
xchg
pop
bound
popf
adc
push
sub
pop
fsubr
add
fist
dec
gs
sbb
push
gs
adc
lea
jb
cmp
(bad)
icebp
sti
or
cld
sub
in
nop
mov
adc
xchg
aaa
ja
mov
pop
adc
mov
pop
pop
adc
call
xchg
mov
adc
sub
push
or
or
mov
das
rcl
dec
dec
add
jb
cmp
pushf
push
mov
fstp
cdq
xor
nop
push
inc
pusha
or
or
test
pushf
inc
mov
and
shl
pop
lahf
je
pop
rcl
shr
pop
jge
dec
push
daa
mov
and
sub
dec
jg
add
outs
mov
dec
pop
mov
mov
sbb
mov
and
and
daa
mov
mov
icebp
aas
test
je
int
add
or
loop
add
mov
jmp
and
or
or
dec
leave
retf
out
out
in
popa
sbb
xchg
adc
or
and
das
mov
inc
lahf
pop
or
fadd
lahf
and
imul
push
mov
cmp
cmps
add
mov
ret
sbb
mov
sub
jmp
sub
push
push
and
rcl
cdq
mov
ret
repz
test
outs
daa
xor
test
je
shl
xchg
pop
jnp
data16
fild
or
or
add
mov
out
daa
or
add
jl
pop
ror
sar
adc
icebp
mov
xor
cmp
in
sbb
rcl
push
dec
jmp
mov
sub
adc
test
fisttp
mov
es
rol
jmp
fcom
adc
inc
jo
(bad)
and
sub
add
aas
in
movs
jge
enter
iret
jo
xor
push
aas
adc
mov
icebp
jae
jb
pop
mov
fist
out
xor
lock
sbb
xchg
dec
xor
cmp
mov
mov
mov
push
dec
call
add
loopne
jo
aaa
icebp
movs
pop
pop
inc
xor
imul
popa
outs
aaa
fsubr
dec
mov
leave
and
stos
mov
add
(bad)
aas
jo
xchg
or
dec
inc
aam
repnz
inc
inc
dec
mov
aad
nop
xchg
push
add
add
fcom
rol
and
icebp
ss
push
ss
jmp
push
stos
nop
outs
(bad)
mov
cmp
in
dec
xor
movs
inc
test
ffreep
shl
out
fdivr
mov
jo
pop
dec
push
or
stos
ins
fcom
les
dec
repnz
add
pop
lahf
cmp
shld
movs
adc
aas
pop
ror
or
and
sbb
push
push
pop
adc
dec
add
add
pop
inc
sbb
pop
mov
dec
adc
push
jne
xchg
aaa
rol
mov
xchg
push
add
daa
inc
mov
and
and
das
and
enter
test
add
stos
test
in
lods
mov
sbb
push
stos
lahf
scas
cmp
lahf
pop
mov
pop
(bad)
sti
and
sbb
pop
pushf
add
iret
push
add
stos
lods
loop
nop
adc
xchg
push
or
mov
and
sub
adc
lahf
add
or
adc
add
lea
iret
les
inc
bound
mov
pop
lds
adc
adc
mov
mov
pop
or
sti
mov
or
mov
fldl2t
es
pop
fiadd
je
xor
call
ds
xlat
sbb
cmp
jne
sub
test
pop
mov
aad
cmp
xchg
sub
or
fdiv
mov
nop
outs
cmp
jmp
lea
adc
adc
sub
push
or
xchg
popa
movs
and
inc
movs
dec
dec
or
jo
jo
lock
dec
daa
mov
inc
bound
pusha
inc
(bad)
fwait
mov
test
ins
inc
mov
lea
mov
shl
rcl
mov
lds
rcr
adc
push
fisub
push
aam
movs
mov
mov
adc
ja
jg
push
add
mov
out
push
std
aas
pop
xor
push
sub
je
jmp
mov
lods
adc
daa
cmp
ficomp
jmp
mov
xor
mov
cmp
and
add
push
shl
mov
retf
push
add
and
sub
fist
arpl
inc
sbb
mov
add
mov
sbb
inc
or
mov
sub
mov
in
or
mov
push
rcr
mov
psllw
inc
inc
adc
cmp
adc
loope
add
xchg
cld
push
add
dec
scas
pop
and
mov
or
ret
mov
sub
or
(bad)
xor
fwait
xchg
(bad)
push
pop
pop
sti
push
mov
(bad)
sub
add
xlat
movs
push
adc
dec
push
or
int3
in
loope
leave
leave
push
adc
retf
pusha
lds
or
aad
mov
adc
add
clc
pop
mov
pop
cld
clc
jmp
inc
popa
mov
dec
push
mov
repz
sub
push
ss
inc
jg
test
xor
fdiv
mov
jge
retf
out
add
sub
(bad)
jne
jmp
mov
mov
sbb
popf
pop
or
dec
mov
mov
and
and
mov
mov
xchg
and
idiv
nop
(bad)
ror
xlat
xchg
adc
or
aaa
div
mov
or
aam
mov
leave
fbstp
sub
dec
mul
mov
mov
(bad)
movs
push
nop
xor
inc
mov
xchg
fmul
push
movzx
clc
sbb
or
jbe
pushf
dec
add
push
mov
cmp
jns
cld
sub
adc
add
cmp
push
mov
sbb
pop
lea
fisttp
lock
int
and
clc
add
adc
mov
std
aaa
add
mov
jmp
pop
add
pop
pop
jmp
or
jmp
sub
pmulhuw
jmp
or
add
pusha
mov
and
add
adc
out
push
out
push
jmp
or
mov
test
cmp
dec
sbb
imul
cmp
mov
or
or
jl
or
jl
and
daa
or
adc
test
mov
mov
and
cmp
and
push
add
xchg
add
sbb
cdq
sahf
mul
push
mov
(bad)
lock
add
add
shl
or
adc
mov
adc
adc
and
xor
xor
push
xor
add
xchg
mov
pop
ret
xchg
mov
xchg
push
adc
jbe
dec
mov
inc
or
daa
call
nop
dec
adc
dec
mov
sub
out
dec
mov
mov
add
xchg
push
xchg
xchg
loopne
lock
fst
mov
inc
mov
retf
cmps
jmp
ret
or
mov
sti
imul
daa
dec
mov
stc
mov
add
push
iret
out
sub
stos
inc
inc
jg
ja
cmp
push
and
fistp
iret
repz
or
cmps
std
repz
pop
mov
ret
mov
add
fisubr
call
jp
sbb
lock
jne
mov
and
fild
sbb
sub
and
or
mov
xor
(bad)
xor
inc
popf
xor
mov
in
mov
mov
outs
loope
es
fidivr
xor
adc
add
sbb
cmp
adc
add
popa
dec
mov
jecxz
cmp
jae
push
call
cmp
mov
(bad)
cmp
dec
iret
ja
or
inc
sub
cmp
clc
cmps
ins
int3
lods
dec
pop
dec
inc
daa
fs
les
aam
xchg
or
mov
out
mov
mov
mov
add
aaa
(bad)
adc
mov
ins
mov
cs
sub
mov
test
push
pop
and
pop
jb
int
push
inc
sbb
push
add
xchg
jbe
(bad)
push
sahf
out
mov
xchg
arpl
in
fld
dec
and
(bad)
into
aad
ss
or
pop
(bad)
in
add
in
ja
mov
push
push
xchg
add
loope
loop
jns
addr16
push
add
xchg
adc
pop
arpl
cmps
bound
sub
xor
push
inc
dec
outs
fcom
mov
adc
jbe
add
jnp
adc
mov
test
lock
les
mov
or
sub
cmp
mov
jecxz
test
cs
mov
cmp
(bad)
loopne
or
push
xor
outs
add
inc
dec
push
ins
sbb
jo
repnz
jl
test
iret
fisub
pop
inc
mov
add
test
fsub
or
xchg
mov
mov
ja
cmp
mov
and
xor
mov
and
inc
div
mov
xlat
nop
daa
je
push
nop
and
inc
push
add
add
or
inc
xchg
add
nop
and
pop
lds
sbb
mov
mov
js
jne
pop
push
sbb
and
jl
sub
js
add
cmp
xchg
inc
inc
js
inc
adc
and
inc
inc
jno
loop
js
inc
js
push
sbb
cmp
dec
inc
js
jnp
sbb
adc
sbb
and
sbb
inc
repnz
cmp
mov
sub
rcl
sub
and
xor
and
xchg
mov
mov
push
inc
mov
push
xchg
xchg
dec
mov
push
mov
dec
push
mov
and
leave
inc
pop
mov
xor
nop
cmp
mov
xor
nop
cmp
mov
call
add
pop
sti
fidivr
sub
inc
loop
aas
sub
(bad)
pop
das
mov
push
add
or
ret
add
jmp
(bad)
or
daa
jno
dec
ins
xchg
add
jmp
push
xchg
daa
(bad)
push
cmp
rol
mov
fnsave
inc
fsub
rcr
xchg
mov
push
inc
jmp
out
add
gs
mov
shl
mov
pusha
lahf
in
mov
pop
jae
inc
mov
and
push
inc
adc
add
jbe
add
or
jecxz
or
iret
and
dec
or
add
(bad)
mov
jp
add
push
sbb
cs
pop
inc
add
inc
cmps
icebp
mov
ret
push
(bad)
in
in
ficomp
cs
js
rcr
adc
adc
add
sbb
or
dec
or
adc
pusha
daa
mov
dec
add
add
dec
xchg
dec
or
xchg
outs
push
test
push
and
icebp
dec
clc
xor
add
cmovo
dec
sub
neg
call
hlt
cmp
pusha
sbb
iret
pop
push
dec
test
sbb
xchg
(bad)
out
es
push
dec
sar
push
jo
inc
push
mul
mov
cmps
mov
jae
mov
mov
(bad)
cwde
xor
mov
fisttp
xchg
inc
xor
mov
mov
fdiv
mov
jmp
cmps
cmp
xor
clc
mov
js
pop
add
arpl
pop
pop
sub
outs
adc
movs
or
cmp
add
leave
and
add
jmp
mov
rol
push
arpl
outs
iret
repz
jno
js
sbb
cdq
std
and
sbb
or
js
ret
add
pop
xchg
add
adc
add
xchg
pop
or
add
std
add
cmp
pop
dec
push
repz
movs
retf
dec
push
sub
dec
fdivr
rcr
cmovb
mov
jmp
nop
test
pushf
adc
ins
mov
cdq
je
faddp
stos
ins
pop
scas
add
or
xchg
push
mov
push
lods
(bad)
mov
cmp
out
sti
pop
sahf
test
mov
sbb
add
in
pop
mov
dec
mov
in
push
nop
aas
xor
xor
dec
sahf
sbb
sbb
and
xchg
scas
jno
sbb
push
gs
inc
push
gs
push
cld
sbb
jns
ret
and
push
or
rol
test
jl
(bad)
push
lock
inc
push
mov
int
jne
daa
xor
fs
popa
pop
pusha
loope
mov
xchg
sbb
add
adc
dec
movzx
inc
lea
inc
push
lock
rol
or
sahf
cmps
stc
fisubr
into
cs
test
out
scas
(bad)
call
mov
add
sahf
cwde
rol
cmp
sbb
not
cmp
xchg
mov
or
pop
push
add
adc
xor
add
nop
scas
cs
es
adc
inc
aad
mov
cs
push
push
ja
lods
in
sub
pop
mov
dec
jmp
xchg
or
pop
test
fs
aas
push
dec
jecxz
pop
sbb
inc
cmp
jne
xor
xor
mov
mov
adc
push
cmps
ret
xchg
xchg
mov
or
xor
fcmovnu
sub
or
frstor
mov
aam
cmp
aam
sbb
inc
dec
or
pop
push
mov
gs
retf
ja
add
arpl
je
push
inc
in
outs
iret
repz
je
punpckhbw
sahf
ror
test
jo
push
sbb
or
sbb
pop
xor
mov
mul
aam
dec
adc
inc
sbb
loopne
dec
jmp
sbb
in
nop
lock
add
test
stos
inc
adc
inc
sbb
xchg
es
lods
fild
adc
dec
imul
test
lea
mov
popf
shld
shr
dec
push
jle
or
ret
jb
push
inc
repnz
repnz
dec
out
and
pop
xor
cmps
or
push
lea
lods
cmp
ror
inc
add
sub
jae
mov
adc
shr
add
and
add
add
add
dec
enter
or
dec
cwde
cmp
or
inc
or
imul
sub
call
add
or
inc
sahf
ja
in
or
sub
push
cs
push
cmp
jle
out
dec
push
pop
mov
retf
mov
sbb
or
and
push
inc
push
add
jae
rcl
add
or
xchg
ret
add
je
aas
outs
out
loopne
inc
sub
push
dec
rsqrtps
cmp
repz
push
pop
pop
bound
mov
ret
push
ds
cmp
dec
and
inc
push
or
cmp
cmp
jmp
cmps
push
mov
and
sbb
sbb
aam
ret
outs
call
arpl
stos
xlat
inc
(bad)
das
clc
push
ror
leave
pop
sti
pusha
(bad)
mov
push
int3
dec
shl
dec
cmp
out
mov
aad
lock
dec
jne
push
pop
add
data16
push
cmp
ret
jne
(bad)
push
popa
cmps
sub
and
lea
or
rol
test
or
ins
push
leave
cmp
jmp
dec
(bad)
xor
fist
push
push
or
adc
mov
jmp
push
sbb
xlat
out
and
pop
adc
or
push
adc
mov
shl
dec
adc
add
inc
push
add
adc
idiv
test
push
and
sub
das
push
mov
add
jmp
or
test
or
neg
and
cmc
mov
or
push
push
ret
add
lods
or
loope
adc
dec
push
mov
mov
cmp
pop
sub
into
cwde
in
(bad)
sbb
dec
dec
push
cld
jge
or
push
sub
push
and
icebp
mov
pop
pop
fist
jmp
cmp
jne
mov
daa
addr16
sbb
lods
ins
and
or
push
ret
xor
fsubr
lock
push
sti
mov
rcr
test
icebp
push
jb
cmp
fimul
inc
bound
adc
add
xor
clc
hlt
adc
push
sub
pop
aas
cmovp
jg
xchg
imul
sbb
test
(bad)
test
loope
add
scas
(bad)
fst
jl
xlat
push
sahf
push
push
fiadd
mov
fstp
jge
iret
imul
out
fst
mov
jge
add
xchg
ret
add
adc
jne
cdq
shr
in
call
popa
fild
add
add
pop
adc
inc
rcl
pop
leave
rcr
es
pop
mov
out
xor
mov
or
and
add
in
fiadd
out
push
enter
fild
pop
and
sbb
or
and
add
movs
inc
test
je
out
add
inc
fcom
jmp
nop
enter
push
and
fild
mov
lea
scas
outs
loopne
cmp
pusha
inc
mov
or
mov
adc
in
rcl
adc
jo
mov
jo
das
adc
pop
cmp
adc
movs
loope
das
cs
or
lock
out
sahf
pop
push
push
call
test
scas
(bad)
pop
movs
xchg
jmp
and
nop
(bad)
xchg
cmps
mov
push
adc
outs
cmp
mov
inc
sbb
inc
add
iret
dec
mov
xor
add
das
jae
and
mov
sti
dec
jmp
xor
adc
cmp
cmp
dec
lea
push
adc
cmps
outs
pop
loop
pop
push
inc
jl
push
nop
add
idiv
bound
adc
enter
shl
mov
ret
call
inc
retf
xchg
mov
adc
retf
push
push
inc
fisttp
push
cwde
or
inc
mov
inc
inc
jle
cmp
mov
jge
jbe
ins
xor
or
sbb
dec
xor
pop
js
cmp
stos
pop
adc
ja
jne
ror
dec
jno
(bad)
retf
scas
lea
mov
test
pop
fild
mov
je
js
setne
and
sbb
adc
test
neg
hlt
les
and
rcr
jmp
add
push
(bad)
xchg
lock
pop
shr
addr16
stos
or
jae
add
push
enter
adc
push
fld
sbb
add
add
rcl
aaa
xchg
sbb
sbb
stos
(bad)
sub
and
dec
and
fnstsw
adc
add
add
mov
sbb
add
add
lahf
test
mov
stc
and
fiadd
xchg
jge
and
xlat
sbb
mov
xlat
mov
mov
ss
lock
in
shl
push
lahf
pop
push
mov
data16
icebp
push
mov
pop
mov
push
xchg
mov
cmp
les
jb
sbb
in
jb
sub
je
jno
test
xchg
sbb
and
adc
aad
ja
pop
pop
or
adc
ja
je
cmp
cmps
in
adc
out
adc
lods
call
loopne
sub
or
or
dec
je
mov
fistp
push
pop
jmp
repnz
jge
icebp
mov
xor
mov
sub
pop
push
cmps
test
add
test
mov
out
rol
aaa
and
outs
in
lea
mov
ror
or
je
fld
jne
lock
in
add
pop
push
push
jmp
into
jmp
daa
sbb
dec
loope
jp
out
inc
pop
xchg
cmp
sbb
loope
ror
cdq
and
pop
xor
lea
hlt
mov
out
dec
test
inc
sbb
push
jmp
cmps
cmp
jbe
je
or
add
and
ds
gs
popa
and
fwait
les
push
aam
or
and
and
mov
je
push
or
pop
imul
push
pop
sbb
xchg
adc
out
int
or
jmp
aaa
push
test
jmp
mov
retf
sbb
int3
mov
push
ret
lock
out
xchg
fadd
fnstenv
int3
pop
xchg
adc
inc
adc
inc
and
jns
stos
cmp
lods
cmp
inc
inc
dec
into
xor
push
pop
pop
xor
push
call
add
sub
aas
add
jmp
or
jmp
add
push
adc
adc
add
sbb
cld
or
loopne
sub
outs
sahf
jmp
add
iret
inc
jmp
adc
or
sbb
dec
and
add
stc
sub
ret
xchg
pushf
iret
jmp
sbb
sti
push
js
or
push
nop
and
test
shr
dec
mov
(bad)
push
xchg
rcr
pop
pop
ja
or
mov
fild
mov
pop
mov
loopne
or
and
and
and
mov
(bad)
jo
mov
mov
xchg
cmc
push
into
or
sub
cmp
mov
retf
in
ja
cmps
jne
in
push
sub
into
repz
jb
mov
mov
pusha
dec
out
and
and
pop
add
pop
xor
add
pop
enter
out
inc
out
cmp
and
adc
out
pop
pop
and
sbb
int3
add
jns
out
mov
push
inc
push
imul
jge
movs
mov
xor
(bad)
jmp
mov
mov
cld
arpl
dec
mov
sti
mov
lock
cmps
lock
mov
cmp
mov
(bad)
enter
jae
imul
push
add
inc
xor
aaa
or
add
cmps
arpl
and
dec
scas
pusha
dec
add
sbb
add
test
pop
add
mov
into
jo
and
cmp
dec
sbb
inc
sbb
and
ja
xor
add
push
hlt
bound
sbb
push
pcmpeqw
push
mov
sub
repz
xor
add
pop
mov
push
das
pop
mov
dec
sbb
xchg
repz
inc
jge
sti
sub
and
jge
repnz
js
(bad)
lock
cmp
aaa
arpl
cmc
cmp
sbb
add
cmp
or
call
inc
inc
dec
mov
inc
outs
or
je
ret
adc
hlt
jns
xchg
aas
aas
or
xchg
jmp
add
jns
out
sub
dec
dec
push
pop
jnp
clc
mov
mov
pusha
mov
push
push
mov
js
psadbw
ss
xor
cs
loope
ja
rcr
inc
or
push
and
mov
sahf
add
clc
and
jmp
jecxz
and
sbb
add
pop
ins
inc
add
(bad)
lea
fs
mov
mov
aas
pop
in
adc
out
xor
push
and
or
or
shr
test
pop
sub
sub
fcmovnu
add
or
pop
mov
cs
add
ret
pop
pop
(bad)
dec
pop
inc
mov
leave
arpl
mov
ds
dec
add
jns
mov
imul
mov
add
ds
sub
push
inc
jnp
push
hlt
push
out
push
adc
push
movs
jb
(bad)
sub
(bad)
dec
dec
gs
cmps
pop
popf
js
sti
test
push
mov
cmp
loopne
inc
xchg
mov
adc
and
add
cmp
bound
dec
sbb
dec
dec
and
or
or
add
ret
outs
push
or
inc
mov
add
iret
or
pop
and
sar
outs
mov
aas
das
iret
mov
iret
xchg
mov
and
fistp
add
add
div
xor
mov
mov
dec
inc
jb
sub
sar
sbb
xchg
ret
xchg
call
and
inc
mov
cli
shl
mov
mov
call
jb
cld
xor
or
xor
lods
add
out
pop
and
outs
add
test
mov
sbb
addr16
adc
push
jb
(bad)
mov
jns
xchg
sub
ins
enter
cmp
icebp
sbb
inc
push
pop
xor
sbb
mov
test
test
pushf
mov
fcom
lds
adc
outs
je
cmp
add
bound
jmp
mov
test
call
push
xchg
lock
add
cmp
xchg
and
jnp
fadd
ja
xor
add
push
arpl
cmp
jmp
push
jns
(bad)
(bad)
jmp
mov
adc
(bad)
leave
test
adc
xchg
xchg
scas
loopne
lea
enter
adc
push
mov
sar
mov
push
adc
inc
mov
retf
push
ins
dec
xchg
ret
add
daa
xor
outs
dec
dec
mov
add
adc
or
jmp
(bad)
push
sbb
or
push
jb
out
jl
std
add
fmul
pop
(bad)
cdq
ret
pop
lea
push
jmp
dec
fst
mov
mov
push
pop
or
nop
dec
out
stos
cmp
xchg
or
cs
test
pop
sbb
je
add
and
add
jge
aas
cmps
dec
jmp
adc
in
adc
call
cmps
xlat
jmp
sub
add
sbb
push
jb
jae
add
jo
dec
dec
add
jae
and
cmp
sbb
mov
and
xchg
xchg
dec
add
lock
cs
aam
lods
inc
add
jmp
ret
xor
add
inc
lock
inc
outs
scas
sbb
xchg
mov
daa
sub
xchg
jo
imul
add
push
cdq
push
aam
mov
lahf
cmp
sub
mov
call
hlt
inc
scas
xor
xor
and
das
in
inc
inc
fisttp
mov
ficom
sub
xor
xor
repz
ja
add
add
cdq
pushf
inc
leave
inc
or
inc
add
nop
mov
mov
arpl
lea
cwde
hlt
mov
std
adc
and
add
and
jmp
jge
mov
xor
aaa
xor
push
mov
mov
stos
inc
or
push
and
scas
ss
add
in
sbb
xchg
pop
xor
in
unpcklps
adc
les
xchg
aad
sahf
out
jle
push
mov
out
sahf
out
jno
cdq
lods
int3
(bad)
or
in
xor
and
ret
push
stc
out
idiv
neg
pop
sub
cmp
dec
xchg
xchg
dec
dec
mov
movs
cmp
adc
add
and
and
push
mov
and
pop
mov
add
jb
sbb
and
add
pop
or
test
(bad)
out
dec
inc
push
jno
test
inc
mov
or
push
(bad)
stc
ins
cmp
cmp
outs
hlt
push
xor
loop
in
je
leave
arpl
mov
push
add
pop
inc
les
jmp
sbb
or
push
inc
fcom
sbb
sub
sub
add
or
sbb
jecxz
in
and
adc
push
xchg
clc
push
add
clc
inc
xchg
dec
inc
test
imul
pop
xchg
call
mov
xlat
sub
adc
or
pop
cwde
pop
pop
add
clc
add
push
in
test
dec
adc
or
cmp
das
lahf
mov
or
mov
add
pop
cmp
shr
adc
les
mov
(bad)
sub
cmp
test
rcr
or
jle
pop
gs
add
cmp
xchg
jno
clc
push
add
or
cmp
or
adc
sbb
popf
sbb
leave
rcl
enter
add
cli
or
adc
sbb
mov
and
mov
pop
lock
ins
cwde
push
jl
inc
jo
mov
pop
int
cmp
(bad)
(bad)
test
and
xor
mov
mov
aas
retf
dec
sbb
mov
mov
imul
inc
lock
cmp
cmp
pop
xchg
jns
pop
dec
inc
ror
adc
inc
mov
icebp
and
ficom
pop
dec
or
pusha
adc
sbb
push
xchg
(bad)
jae
lss
imul
imul
or
xlat
push
or
pop
push
xor
jns
mov
or
inc
mov
mov
ins
pusha
lods
sbb
pop
nop
sbb
fisttp
fs
xor
dec
rcr
push
adc
jno
lods
dec
mov
adc
xchg
test
mov
or
mov
rol
cwde
adc
fisttp
xchg
es
test
imul
test
adc
sub
test
or
xor
xchg
dec
lea
ja
xchg
or
xor
add
mov
(bad)
mov
ficomp
sub
sub
or
aam
fmul
rcl
or
enter
and
push
mov
cwde
movs
arpl
sbb
sbb
shl
add
test
call
lds
add
imul
push
mov
bound
xor
nop
and
repnz
sbb
push
push
adc
xor
add
add
sbb
add
call
ds
sub
inc
ins
mov
jae
jo
div
add
jae
outs
xchg
sub
push
ds
xor
out
push
cwde
nop
cmp
mov
ret
inc
sahf
outs
add
jo
dec
loopne
push
push
inc
icebp
mov
push
in
push
adc
and
popf
loopne
add
jne
ret
xor
cmp
(bad)
in
sub
mov
das
add
and
jge
mov
je
js
pop
jge
xor
movs
ja
mov
adc
pop
jns
adc
cld
js
sbb
movs
push
and
pop
cmp
cld
add
push
mov
shr
and
cmp
dec
jmp
pop
xchg
add
jo
mov
and
inc
xor
push
mov
inc
xor
sbb
je
and
xor
inc
jmp
pop
and
xchg
out
jmp
sub
and
inc
sub
add
sbb
cmc
mov
ret
fldenv
in
push
out
inc
mov
test
lea
and
push
aas
jmp
loope
or
mov
inc
push
cmc
fsubr
push
daa
cmp
pop
mov
int3
shl
add
call
scas
xchg
mov
pop
(bad)
or
xor
data16
adc
(bad)
mov
xor
adc
pop
xchg
and
xor
das
or
adc
scas
inc
pop
pop
add
rol
adc
ret
pop
pop
pop
xchg
or
add
sub
add
sbb
in
xchg
or
jo
lock
sub
inc
gs
push
lods
mov
pop
jg
sbb
clc
les
fcomp
sbb
ret
cmp
push
cdq
mov
inc
in
jmp
xor
and
std
and
enter
loope
sbb
cli
fsub
sbb
or
push
sub
xor
mov
aam
or
inc
sub
icebp
push
ja
push
sbb
push
inc
sbb
sbb
bound
pop
test
pop
aad
repnz
ins
fdiv
dec
iret
loopne
pop
pop
loop
add
xor
and
cld
mov
push
bound
je
push
clc
add
sbb
lea
call
cmc
adc
sbb
push
adc
add
push
add
inc
xor
js
xchg
push
or
retf
adc
rol
adc
ins
sbb
cmp
mov
inc
push
test
xor
daa
adc
inc
xor
sbb
or
fs
push
mov
jbe
mov
xchg
mov
cmp
cmp
or
jno
push
mov
push
std
inc
dec
enter
push
jne
mov
mov
and
aam
pop
mov
add
dec
pop
inc
mov
bound
arpl
sub
adc
scas
aas
cmp
shl
inc
imul
add
adc
and
or
adc
mov
add
inc
fs
inc
xchg
test
les
test
mov
add
pop
pop
das
test
cmp
jno
das
sbb
stos
das
andps
push
xchg
mov
jo
retf
or
and
mov
mov
pop
lds
sub
mov
and
lahf
jb
je
dec
jne
data16
rcr
and
cmp
sahf
or
out
add
mov
mov
aad
add
sti
test
lods
adc
xor
inc
in
and
xchg
cmp
imul
cmp
sub
clc
sub
push
test
pop
dec
jmp
aaa
bound
vpshad
or
push
sub
xor
push
add
je
cmp
push
inc
js
or
mov
imul
fsub
sub
and
push
and
adc
cmp
mov
mov
xchg
jae
mov
pop
and
dec
cmp
sbb
xchg
mov
shl
inc
and
cmp
mov
cmps
inc
arpl
je
push
int
push
mov
dec
dec
sub
wrmsr
lock
add
test
or
mov
adc
add
outs
mov
cmps
or
and
inc
add
aaa
imul
cmp
stc
mov
push
js
xor
scas
adc
inc
aaa
je
fdiv
outs
fdiv
sbb
pop
xor
add
jns
pop
dec
es
inc
mov
inc
sbb
sbb
aas
inc
loopne
dec
cmps
inc
je
and
sbb
not
adc
leave
and
mov
test
popa
sbb
add
jne
xchg
mov
(bad)
or
sbb
call
mov
icebp
sub
addr16
add
jno
or
or
sub
outs
add
push
and
adc
add
xlat
pop
add
fisttp
bound
adc
dec
dec
xchg
pop
mov
fld
and
dec
jl
pop
mov
daa
and
xchg
cmp
xor
mov
mov
sbb
push
inc
pop
or
ss
mov
imul
sbb
push
dec
inc
mov
add
(bad)
dec
adc
aas
or
pop
add
lea
(bad)
nop
push
int3
mov
sub
sub
lahf
sub
in
or
or
push
inc
ja
bnd
cmc
in
popa
hlt
add
sub
and
aad
dec
adc
push
adc
loope
sub
or
sbb
dec
test
sub
inc
xor
addr16
sbb
add
nop
out
xor
test
mov
pop
pop
push
lock
jmp
sbb
cmp
or
xchg
rcr
sahf
out
push
das
inc
push
gs
jns
out
xchg
movs
mov
inc
inc
jl
aad
sub
mov
repz
fs
cmps
neg
fistp
inc
fadd
jmp
mov
mov
in
stc
pop
mov
ds
adc
cs
sub
pop
retf
cmc
xlat
ret
in
add
add
xor
movs
rcr
jp
mov
outs
fisub
in
pop
rol
dec
je
mov
add
aam
sbb
or
push
or
jae
mov
mov
in
int3
xor
mov
or
fsub
mov
jb
push
and
pop
movs
cmp
inc
or
or
push
dec
cmp
or
mov
mov
jg
rol
and
pop
jb
xchg
push
movs
or
lds
mov
xor
icebp
inc
inc
and
mov
push
lea
nop
icebp
scas
lods
sbb
shr
add
mov
xor
push
loope
mov
jo
loopne
mov
call
push
daa
or
mov
xchg
jmp
neg
mov
inc
push
in
ja
leave
leave
push
cmp
in
add
jns
jecxz
sub
daa
jnp
test
mov
inc
xchg
or
xor
adc
movs
pop
jae
xor
dec
(bad)
push
out
xor
jo
sub
pop
aam
dec
jne
sub
add
ss
mov
neg
inc
mov
aas
nop
or
inc
add
add
out
and
adc
(bad)
fld
sub
or
add
inc
xor
fcmovb
std
rol
mov
add
enter
push
aam
or
int
retf
call
inc
xor
movs
loop
xor
or
das
dec
lahf
fdiv
nop
push
or
(bad)
pushf
xor
cmp
mov
ss
xchg
or
adc
xor
push
or
mov
cmp
jnp
clc
add
cmp
push
pop
or
sbb
push
fist
or
xchg
and
scas
xchg
test
arpl
jmp
addr16
(bad)
mov
push
call
shr
(bad)
ror
test
test
and
sub
push
cmp
sbb
pop
or
sub
mov
outs
ja
sbb
(bad)
and
mov
lods
mov
mov
dec
call
enter
mov
ins
and
cmp
xlat
not
adc
add
pop
movs
test
sbb
add
loopne
mov
cwde
mov
pusha
and
sub
stc
inc
push
aad
out
daa
mov
scas
push
add
add
shl
cmp
add
or
arpl
test
movs
or
sub
inc
outs
sub
outs
leave
in
and
imul
push
mov
push
push
adc
mov
ja
dec
imul
pusha
maxps
xchg
les
pop
adc
iret
cmp
xchg
jns
out
mov
mov
mov
xor
jnp
popa
sub
add
inc
push
and
popa
lahf
push
pushf
mov
push
add
inc
add
or
mov
pop
dec
or
xchg
dec
les
cmp
cmp
mov
inc
push
push
int
sbb
sbb
inc
in
sbb
cmp
or
xchg
xor
and
inc
ins
(bad)
jae
(bad)
xor
pop
sbb
stc
inc
ins
cmp
cmp
add
sub
xchg
cmp
or
inc
or
and
pop
dec
sub
inc
std
pop
hlt
dec
outs
in
xchg
adc
dec
adc
jne
ins
or
sbb
stos
mov
(bad)
scas
fstp
or
enter
fdiv
maskmovq
div
add
xor
nop
rcl
jae
mov
or
sub
push
push
mov
or
jl
add
adc
ret
stos
add
pop
rol
mov
or
out
mov
cwde
arpl
jg
fcom
and
mov
daa
cmps
lds
add
fbld
popa
adc
mov
inc
push
jb
and
js
in
pop
cmp
sub
test
xchg
ret
mov
adc
ret
nop
or
nop
mov
mov
cmp
cmps
adc
dec
dec
push
add
fbld
push
lds
and
test
or
pop
ret
mov
push
les
lods
(bad)
aam
pop
mov
and
xor
loopne
mov
xchg
stos
(bad)
call
mov
rcl
push
leave
add
test
mov
inc
mov
(bad)
mov
ins
mov
repz
hlt
cmp
xchg
dec
mov
dec
sbb
cwde
frstor
mov
clc
xchg
xchg
or
add
dec
cld
pop
aad
pop
outs
inc
pop
cmp
dec
ret
sbb
inc
add
fld
retf
adc
stos
shl
and
push
aad
stc
mov
or
test
dec
pusha
imul
adc
pop
addr16
pop
dec
adc
in
inc
adc
pop
cmp
inc
xlat
loopne
or
call
add
(bad)
sbb
adc
pop
add
paddsw
mov
xchg
movs
mov
adc
mov
enter
pushf
cwde
rcl
mov
sub
hlt
mov
lods
push
test
nop
lods
or
movs
mov
mov
xchg
mov
test
push
mov
and
daa
mov
loop
adc
mov
inc
fisub
push
inc
mov
xchg
mov
test
inc
jecxz
xor
push
ror
ret
lock
push
or
movs
jg
call
jmp
sub
jmp
jne
jmp
mov
and
and
aam
sub
fsub
inc
adc
pop
fnstcw
inc
inc
jmp
ffree
inc
inc
sbb
adc
jecxz
ss
loopne
mov
ror
loope
mov
mov
add
lods
xor
sbb
xchg
dec
pushf
mov
lods
add
loopne
inc
adc
or
rol
xor
fsubr
jl
or
sub
lea
push
aas
test
adc
inc
pop
add
cmp
ret
inc
jmp
push
or
daa
test
sub
(bad)
mov
mov
push
mov
push
inc
or
dec
sbb
dec
and
add
xor
adc
add
mov
push
or
push
dec
stos
cmp
xor
nop
and
sbb
jo
lock
shr
or
mov
pop
jmp
push
fstp
fst
cli
mov
mov
jl
or
adc
fs
mov
mov
ss
mov
inc
sti
cmp
sbb
cmp
imul
add
dec
pop
out
dec
mov
add
push
and
push
sahf
add
std
into
enter
mov
inc
xor
sub
into
mov
dec
adc
or
into
inc
aaa
inc
mov
sbb
adc
lds
mov
adc
lea
adc
pop
push
xchg
mov
mov
enter
fmul
fsub
fstp
lea
pop
mov
popf
mov
lock
push
sub
jmp
je
popf
popf
leave
jmp
ret
jmp
mov
mov
xlat
(bad)
jnp
je
scas
or
enter
daa
daa
daa
push
push
push
mov
data16
xor
sub
shl
cmp
push
sub
mov
or
fs
push
adc
mov
loope
jno
cmp
adc
mov
push
or
call
push
inc
es
jno
xor
mov
fnsave
rcl
push
in
push
in
inc
push
push
or
push
inc
in
and
fiadd
or
aas
and
leave
inc
mov
imul
push
pusha
push
gs
push
adc
jmp
push
adc
inc
mov
xchg
sub
inc
or
fiadd
es
pusha
or
test
out
mov
inc
sub
aaa
bound
add
ja
repz
lock
dec
hlt
push
push
iret
repz
bound
xchg
cmps
mov
iret
repz
fldl2e
sti
or
jns
out
sbb
out
sahf
out
adc
(bad)
fsubr
cli
or
pop
jecxz
jl
sbb
das
xchg
sbb
mov
fs
xchg
add
pop
add
dec
xchg
add
add
xchg
or
dec
xchg
or
nop
xchg
adc
adc
fs
adc
fs
xchg
adc
push
imul
dec
ret
push
or
jns
sahf
dec
push
mov
(bad)
pop
dec
cmp
repz
ins
push
xor
jo
cmp
repz
jns
iret
out
add
sub
sahf
push
ins
adc
call
sub
cmp
repz
push
cmp
cmps
mov
sahf
out
call
jns
out
mov
cmp
out
or
and
dec
iret
repz
pusha
jne
lahf
mov
fsubrp
repz
repz
xor
out
inc
pop
jno
fwait
repz
out
(bad)
add
iret
repz
sbb
inc
pop
ins
and
adc
ins
inc
or
ins
pop
ret
sub
or
test
or
xor
push
or
dec
sub
enter
inc
inc
xor
and
enter
add
or
or
add
adc
add
or
or
add
add
add
push
pop
sbb
and
add
add
add
or
or
add
sbb
xor
add
sub
or
sub
cmp
cmp
or
and
and
add
or
or
add
or
enter
ds
or
sbb
add
add
push
adc
xor
and
enter
add
or
or
add
ss
xor
or
push
add
add
sub
or
daa
and
enter
add
or
or
add
push
sbb
sbb
test
icebp
pop
fimul
xchg
mov
js
pop
add
push
test
cmp
jns
inc
ret
(bad)
clc
test
cmc
adc
push
mov
dec
and
jo
sbb
(bad)
lock
push
xchg
scas
fdivr
adc
jne
add
or
add
(bad)
mov
push
cmp
sub
xor
mov
add
and
and
or
or
lds
xchg
dec
push
movs
inc
leave
mov
xchg
mov
scas
add
adc
(bad)
adc
mov
sub
out
xor
fdiv
mov
leave
or
ins
push
xor
idiv
adc
adc
or
mov
into
xchg
xchg
call
(bad)
jmp
xchg
or
add
lock
mov
cmp
aam
xchg
inc
(bad)
mov
adc
lock
ret
mov
adc
add
adc
or
adc
mov
pushf
test
mov
repnz
aad
cmps
push
iret
test
mov
out
pop
rol
or
add
shl
fs
sbb
push
cwde
dec
jae
mov
les
push
mov
icebp
out
mov
mov
lea
test
or
add
add
mov
push
or
or
or
cmps
in
add
icebp
dec
clc
pop
xchg
pop
pop
jb
mov
call
add
pusha
push
ret
adc
adc
sbb
push
add
add
(bad)
push
pop
sub
ror
fcomp
mov
fsubr
in
mov
cmps
ds
fs
popa
es
nop
retf
xor
mov
inc
adc
add
jne
iret
dec
sti
push
rol
dec
das
(bad)
cmp
jne
add
fimul
pop
push
cmps
out
push
cmp
dec
or
int3
cwde
and
loop
aad
and
sub
xchg
out
mov
add
jne
pop
xor
pop
das
nop
imul
add
gs
inc
cmp
dec
or
inc
call
test
sbb
sub
lods
push
ret
cmp
push
int3
add
adc
shr
clc
sub
lea
push
out
fs
in
loop
inc
iret
int3
sbb
or
imul
xchg
fsub
add
neg
test
call
inc
not
sub
mov
xchg
cmp
enter
je
rol
jae
leave
push
jbe
jge
jl
bound
clc
sub
mov
sti
loop
sbb
or
mov
push
cmp
xchg
pop
fwait
mov
push
addr16
ss
fs
bswap
add
mov
push
std
add
cmc
pop
xor
xchg
jnp
mov
test
push
push
ret
push
dec
push
mov
push
xchg
or
cmp
pop
lods
pop
fst
cwde
stos
leave
add
mov
pop
or
leave
push
xor
push
add
cdq
sub
sbb
stos
dec
jb
sar
mov
push
xor
add
mov
inc
xor
mov
push
and
jmp
leave
mov
pop
fwait
mov
arpl
ror
aaa
jne
inc
fisub
clc
mov
addr16
mov
and
imul
xor
sbb
mov
xor
dec
enter
push
ins
push
sbb
pop
pop
inc
enter
addr16
(bad)
adc
mov
adc
adc
popf
xor
enter
movs
cmps
hlt
add
sbb
arpl
xor
mov
mov
dec
xor
add
adc
pusha
cmp
lock
adc
xor
cdq
fdiv
mov
cmp
and
sbb
mov
dec
xor
leave
pop
sbb
add
add
or
and
int
add
jmp
scas
out
xchg
test
out
mov
push
dec
jne
repz
mov
push
sub
repz
fisttp
gs
pushf
out
mov
pop
mov
cmp
loopne
xchg
int3
push
lds
sbb
dec
jb
mov
dec
fdiv
inc
ins
hlt
pop
adc
cdq
fs
add
and
and
mov
addr16
addr16
and
ins
sbb
pop
leave
and
add
add
aam
jmp
push
in
add
popa
lock
push
xor
jnp
and
in
jae
push
sbb
push
mov
arpl
mov
dec
xor
pusha
and
jl
adc
leave
in
cwde
es
inc
and
leave
mov
or
inc
and
cwde
test
mov
rol
inc
xor
loopne
gs
ins
popa
sbb
inc
(bad)
or
leave
add
cmp
popa
and
sbb
and
push
sbb
test
loopne
cs
stos
test
test
sar
adc
pcmpeqw
or
add
ins
and
add
enter
sub
xchg
int3
gs
adc
sub
xor
push
inc
and
xor
mov
mov
retf
push
jmp
sbb
inc
cld
jl
or
sub
rcl
sbb
mov
(bad)
xchg
and
jne
inc
pop
sub
jp
push
ret
popa
xchg
pushf
and
push
jg
jg
mov
bound
xchg
dec
xor
inc
pusha
add
and
or
sbb
fstp
add
(bad)
jo
or
mov
ret
inc
in
push
sub
jnp
iret
push
lea
ss
stos
cmp
neg
or
inc
cmp
nop
mov
or
nop
add
enter
add
sub
inc
mov
loopne
adc
xchg
popa
lock
jns
inc
push
add
adc
inc
xchg
add
cmp
xchg
pop
fstp
bound
or
or
shl
mov
mov
(bad)
mov
rol
add
mov
and
in
pop
or
not
and
xor
push
and
xchg
add
pop
inc
outs
test
mov
add
add
xor
in
inc
(bad)
sub
mov
pop
sbb
or
push
jne
inc
lods
mov
and
add
pop
pop
stos
aam
movs
retf
aam
jle
es
inc
mov
dec
pop
mov
xor
loop
add
jne
lock
push
push
add
dec
cwde
add
adc
iret
pop
aam
and
and
loopne
out
pushf
neg
(bad)
xchg
inc
push
sub
inc
nop
imul
jae
mov
pop
js
cwde
sub
cwde
neg
add
add
int
stos
add
pop
repz
and
in
and
ins
add
das
add
test
pop
nop
push
sub
push
push
jp
xchg
sbb
and
cwde
or
fs
add
pop
lds
push
push
shl
jae
aad
push
xchg
xchg
add
mov
xchg
mov
scas
mov
scas
inc
push
mov
jo
inc
or
cmp
mov
movs
and
mov
add
cmp
les
or
movups
sbb
mov
jmp
mov
add
jns
jo
push
xchg
es
adc
add
out
lods
inc
sbb
cs
leave
inc
inc
add
inc
inc
pop
add
adc
cmps
daa
pop
ins
nop
movs
and
mov
xor
in
imul
mov
aam
cmc
es
or
aam
or
inc
(bad)
int3
push
and
or
add
cmp
sti
xor
jl
lock
xchg
mov
mov
push
fwait
dec
into
adc
push
adc
and
rol
xor
js
add
aaa
xor
scas
aam
jne
or
js
ret
pop
mov
je
jo
cmp
sbb
in
call
and
call
dec
mov
int
mov
xchg
(bad)
test
sub
push
adc
push
jge
jle
pop
add
mov
neg
add
(bad)
clc
(bad)
xchg
add
adc
mov
add
push
outs
test
mov
or
jb
pop
sbb
inc
xchg
(bad)
movs
out
inc
inc
or
dec
(bad)
fld
inc
adc
mov
pop
pop
push
xor
call
enter
add
call
adc
or
push
test
inc
enter
mov
push
mov
outs
sbb
jmp
icebp
mov
retf
and
mov
adc
(bad)
xchg
test
ins
xor
scas
fimul
sbb
movs
sub
repz
xchg
hlt
push
jno
pop
lahf
(bad)
inc
add
sbb
dec
or
dec
loop
sbb
lock
and
jne
rcl
inc
ret
adc
adc
movs
enter
add
push
loop
and
and
inc
nop
mov
in
sub
jg
mov
cmps
add
call
push
sbb
frstor
sbb
adc
add
sub
xchg
in
cwde
or
cwde
leave
sti
sahf
ins
or
push
adc
cmps
xor
mov
mov
xor
pop
les
mov
lods
add
push
jnp
retf
xor
leave
ror
push
cs
add
sti
dec
pop
mov
add
push
inc
sub
dec
fcomp
or
imul
or
scas
adc
mov
push
or
xchg
dec
leave
push
test
mov
sub
mov
mov
or
enter
(bad)
add
add
aam
mov
pop
ja
sar
test
push
pop
test
fidivr
jo
fist
xchg
push
imul
pop
add
adc
sbb
retf
add
sbb
cmp
add
enter
mov
xchg
sbb
test
pop
ins
inc
leave
add
xchg
add
xchg
rcl
nop
imul
add
push
cmp
or
xor
add
xchg
test
and
xlat
add
cmp
jne
imul
scas
hlt
std
sub
or
icebp
pusha
scas
cmp
cmp
retf
lods
dec
sub
push
fidiv
jne
add
les
jne
mov
sub
loopne
movs
adc
pop
jb
imul
outs
adc
jmp
dec
or
push
jb
push
gs
cmp
shl
test
jge
add
mov
test
inc
(bad)
rcl
add
or
or
test
xlat
retf
pusha
mov
lea
mov
dec
cmp
outs
cmp
mov
cmps
add
hlt
mov
inc
mov
call
add
mov
adc
push
adc
imul
lods
aas
repnz
adc
int3
mov
sbb
mov
fwait
sbb
adc
sbb
popa
dec
hlt
add
rol
aam
stos
test
adc
ror
adc
lock
add
adc
mov
ret
mov
mov
sbb
add
push
jmp
dec
ret
or
neg
xchg
push
sti
pop
pop
pop
jne
hlt
or
jle
mov
iret
jnp
push
or
int3
les
(bad)
outs
sbb
jns
out
push
dec
pop
jbe
movs
add
hlt
mov
movs
sbb
shl
adc
popf
xchg
and
fstp
pop
pop
cmp
xor
(bad)
ffreep
enter
loop
inc
adc
cmp
mov
pop
cmp
mov
gs
push
xchg
cmp
xchg
or
or
mov
dec
out
repnz
or
or
lea
add
add
mul
test
shl
in
cvtps2pi
xchg
pop
leave
adc
adc
and
sub
sahf
out
and
push
jge
inc
mov
in
scas
in
adc
or
add
dec
mov
sbb
inc
add
adc
add
call
je
or
adc
rcr
test
or
add
sub
push
jo
or
int
call
(bad)
daa
jl
jg
jnp
jmp
out
fcmovbe
xor
mov
ss
pop
push
dec
aaa
hlt
add
inc
sub
aaa
js
imul
dec
je
dec
je
jmp
mov
xchg
mov
pop
dec
mov
rol
in
add
pop
(bad)
shl
mov
add
sub
inc
push
jmp
test
push
adc
cld
repnz
rol
int3
aam
mov
sbb
loopne
add
inc
or
adc
test
sub
push
and
push
or
fistp
cli
lds
mov
stc
pop
xchg
aas
mov
xchg
xchg
mov
jbe
lea
or
add
add
jo
jnp
ins
add
and
push
imul
mov
push
test
dec
push
jno
imul
xchg
shr
jbe
adc
das
xor
pop
push
xor
inc
push
in
cs
test
leave
mov
popf
mov
call
add
xchg
ret
cmc
gs
mov
xchg
xchg
cmps
enter
xor
push
mov
rol
retf
pop
retf
not
test
jo
imul
mov
sbb
xchg
test
std
ins
mov
add
test
inc
sbb
jns
xchg
cmp
push
push
mov
mov
pop
mov
(bad)
jae
call
add
sbb
mov
add
dec
clc
xor
sub
mov
xchg
adc
mov
and
or
lods
test
clc
daa
mov
aam
shl
sub
movs
add
pusha
dec
push
leave
add
add
pop
inc
cmps
and
push
scas
jmp
add
add
add
push
icebp
push
inc
add
js
add
adc
fwait
xchg
pop
add
or
cmps
add
pop
shl
cmps
dec
(bad)
adc
dec
mov
daa
xchg
add
cs
and
add
jp
add
mov
ret
dec
jb
sbb
xchg
dec
fiadd
adc
sbb
jbe
inc
or
inc
or
mov
add
ins
push
add
adc
push
adc
jno
jmp
popa
mov
popa
pop
invd
inc
xchg
dec
push
sbb
adc
mov
push
push
or
sbb
inc
sbb
cld
daa
ret
nop
mov
cmps
or
pop
seta
push
and
jmp
movs
xor
sbb
xor
fisubr
add
scas
enter
adc
adc
stos
dec
adc
call
mov
fsub
xor
outs
mov
sar
add
ss
pop
xchg
rcl
repz
fisubr
jne
and
mov
xchg
je
or
mov
mov
(bad)
out
fnstenv
mov
fist
in
icebp
fcmovb
and
add
add
add
fild
mov
clc
in
add
movs
dec
out
sahf
out
pop
data16
mov
jo
xchg
mov
and
inc
mov
add
jnp
adc
adc
repz
sub
pop
cmp
repz
jo
or
lea
xchg
jb
jmp
in
mov
adc
push
or
sub
or
or
pusha
sbb
mov
add
and
push
push
sub
js
inc
nop
repz
jae
js
outs
pop
push
mov
pop
cmp
push
outs
sbb
add
add
icebp
jns
jmp
xlat
cmp
push
xor
dec
fwait
pushf
or
rcr
sub
clc
xchg
pop
add
fist
fild
clc
sbb
lock
mov
aad
push
test
xchg
pop
int
jns
idiv
movs
push
stos
mov
(bad)
cmc
fnstenv
mov
sbb
inc
adc
or
add
rol
pop
jb
xlat
add
adc
lods
dec
adc
sbb
iret
jae
loop
pushf
add
cmp
cmp
push
pop
fs
xchg
ss
jbe
or
sub
pop
xor
loopne
inc
or
mov
data16
lock
fst
push
push
jl
sub
or
ins
or
sbb
adc
pop
adc
mov
int
mov
sbb
cs
and
or
sbb
push
push
dec
pusha
cmp
add
inc
pop
adc
arpl
pop
sbb
lahf
and
add
test
pop
add
push
pop
or
pop
adc
or
push
push
sahf
cli
cmp
dec
fiadd
jp
dec
lahf
pushf
neg
ds
push
jp
adc
xor
add
mov
mov
jmp
xor
jb
xchg
ret
je
nop
lea
dec
nop
(bad)
rcl
xor
cmp
test
sahf
out
push
mov
int
int
or
call
movs
adc
sbb
sub
cmp
in
cmp
lea
movs
jns
or
cmps
int
repz
gs
loopne
jmp
les
mov
shl
je
les
idiv
jnp
inc
push
dec
push
pop
lds
mov
std
xor
mov
cmp
sub
ds
sbb
ds
mov
pop
das
imul
retf
dec
das
shl
add
add
sub
jle
cmps
and
sbb
or
or
or
cmp
movups
adc
adc
iret
repz
push
pop
sbb
(bad)
aas
iret
repz
sbb
push
pop
and
and
and
es
xor
jnp
cmps
push
repz
pop
mov
cmp
ja
iret
clc
and
ds
jae
lds
pop
sahf
out
mov
movs
outs
mov
test
cmps
or
sar
out
sbb
es
xor
pop
out
sahf
out
je
mov
test
ret
dec
sbb
ficom
jne
ret
xchg
aad
icebp
inc
mov
into
enter
dec
xchg
push
mov
push
not
xor
or
dec
fs
retf
adc
adc
test
sub
je
scas
cmp
push
push
sub
dec
cs
leave
sbb
retf
push
jb
pop
push
pop
idiv
js
push
daa
dec
popa
add
scas
add
mov
mov
lea
sub
xchg
pop
sub
xor
sub
gs
xor
pusha
xchg
retf
push
leave
cmp
inc
inc
and
arpl
cs
fs
mov
push
sbb
xor
add
imul
imul
add
ins
ins
outs
add
and
outs
jo
cs
xor
jb
and
pop
ins
inc
sub
es
and
and
pop
and
daa
adc
enter
popf
lods
xor
mov
(bad)
(bad)
mov
lahf
push
adc
sbb
pop
jbe
dec
jo
mov
sbb
adc
(bad)
mov
push
popa
adc
pop
shl
in
sbb
and
or
imul
push
adc
sbb
and
retf
sbb
and
shr
lahf
mov
ja
adc
jge
out
sbb
(bad)
sub
mov
jo
test
popf
mov
out
pop
addr16
mov
inc
enter
clc
xor
push
fsubr
outs
aas
stos
out
in
jnp
into
and
xor
jbe
loopne
dec
dec
mov
retf
sbb
or
xchg
stos
iret
repz
int3
push
fsub
lock
clc
cmp
or
cmp
and
inc
push
pop
mov
push
leave
adc
leave
push
retf
in
dec
cs
iret
xchg
dec
cs
cs
scas
mov
fsubr
push
popa
mov
dec
mov
ret
icebp
popf
leave
cmp
jne
popf
leave
jnp
icebp
mov
mov
lea
and
pop
mov
pop
mov
cs
jnp
sbb
and
xlat
xchg
and
jne
xor
ret
xlat
or
jmp
fld
and
cmp
add
lods
sbb
pop
add
cmp
push
sbb
mov
dec
mov
push
sbb
jb
xor
inc
ficomp
jb
mov
jnp
test
xchg
cmp
jns
test
and
imul
xchg
sub
das
sbb
cmp
stc
add
ins
into
movs
loop
and
push
in
clc
add
adc
sub
hlt
ins
cmp
movs
dec
push
push
pop
imul
sbb
repz
lea
shl
sbb
jns
(bad)
add
xchg
pop
push
and
cmp
sub
lea
aaa
push
jle
mov
mov
gs
sub
movs
in
pop
iret
repz
out
sti
pop
repnz
push
fisttp
ins
iret
jnp
add
pushf
dec
push
dec
pop
push
sbb
(bad)
jnp
test
aam
idiv
mov
lods
sbb
jns
das
push
sbb
xor
add
or
sbb
daa
pop
push
icebp
pop
ret
rcr
or
ret
pop
inc
fldcw
rcpps
ficom
or
pop
add
and
(bad)
xchg
nop
xchg
arpl
aaa
sar
add
add
push
sub
cmp
add
hlt
add
sub
outs
jmp
lock
cs
and
bound
xchg
or
(bad)
jecxz
lahf
mov
jno
and
or
push
and
fxch
jg
mov
leave
push
and
push
or
inc
sub
mov
xor
mov
sar
add
push
and
leave
rcr
lock
jne
xchg
shl
xor
xchg
mov
add
inc
push
out
das
test
int3
neg
ss
pop
push
mov
aas
add
xor
jp
mov
ret
dec
push
mov
jmp
mov
add
and
lea
add
push
push
ins
and
add
inc
sar
inc
fcom
jo
es
push
es
jbe
dec
pop
mov
sbb
inc
daa
mov
adc
mov
into
int3
sub
sbb
fwait
sbb
xor
and
and
jge
sub
mov
dec
add
ss
hlt
ins
sub
xor
mov
pop
add
ja
mov
pushf
jo
xor
jno
add
jno
mov
adc
dec
retf
dec
mul
test
or
shl
int3
hlt
rol
jle
sub
mov
adc
test
pop
push
sub
(bad)
fdiv
dec
enter
mov
and
mov
push
sbb
inc
and
push
lods
pop
lahf
and
int3
leave
cmps
mov
pop
ds
push
imul
leave
pop
push
dec
out
push
inc
mov
or
adc
pop
std
in
je
lods
adc
pop
mov
(bad)
aas
sub
(bad)
inc
jne
mov
mov
mov
neg
ud1
push
pop
sbb
ss
pop
cli
cld
cmp
out
lock
mov
inc
movs
and
add
fild
inc
add
ins
das
add
repnz
mov
adc
add
into
fadd
xchg
cmc
aam
and
int3
pop
pop
ret
push
mov
jge
inc
sti
xor
lock
mov
or
(bad)
loopne
pop
mov
add
inc
popa
out
dec
popa
inc
sbb
xchg
push
sbb
shl
xor
xor
push
and
add
or
add
and
jne
cld
test
mov
adc
xor
(bad)
(bad)
xor
sub
add
popa
pop
xchg
aaa
cmp
(bad)
jo
hlt
iret
sahf
mov
lods
or
jle
lock
xchg
push
jne
test
push
dec
cld
lods
jmp
push
into
inc
pop
shr
int3
cmp
fimul
cmp
pop
mov
or
pusha
loopne
inc
add
leave
mov
adc
ror
add
jno
lock
pop
pop
aaa
in
dec
or
push
out
pop
add
jno
loopne
pop
push
ja
test
js
add
mov
mov
mov
xor
push
xor
jbe
adc
jmp
xor
xor
mov
mov
(bad)
sub
in
mov
xchg
jmp
call
loop
in
xchg
xchg
or
cwde
sbb
in
loop
lds
adc
xor
adc
test
je
push
jo
add
fisttp
push
sbb
push
pop
cmp
clc
pop
or
sub
ror
jo
ror
sbb
mov
jge
dec
iret
jbe
push
adc
ss
je
push
rcr
jmp
mov
sbb
sbb
ret
sbb
lods
mov
push
retf
cld
sbb
dec
xor
fsubr
pop
lock
pop
mov
outs
cmps
add
test
jbe
jmp
stc
pop
pop
lds
fild
test
loope
or
adc
cmp
add
xor
icebp
mov
push
cmps
inc
jp
push
out
aaa
sbb
push
jbe
loopne
add
xchg
sbb
pop
mov
xor
out
mov
xor
jns
add
cmp
jecxz
xchg
adc
and
adc
ins
test
push
cli
jbe
or
and
sub
and
inc
mul
je
and
add
cmp
clc
inc
sub
out
sahf
pop
push
mov
out
mov
out
mov
adc
sbb
xchg
out
ffreep
xchg
mov
jae
js
sbb
in
pop
mov
inc
xchg
add
in
or
inc
sahf
mov
adc
pop
or
pop
aam
push
dec
xor
daa
adc
rol
and
inc
add
fisubr
scas
or
arpl
jne
inc
push
jb
push
pusha
test
ja
adc
nop
pop
mov
push
sbb
adc
push
test
and
or
add
pop
mov
fidivr
or
or
xor
jecxz
add
and
fcmovu
mov
cmps
or
push
or
xor
les
pop
add
mov
je
ds
mov
rol
ret
popa
jl
xor
lds
mov
test
or
jne
retf
shr
test
fidivr
adc
clc
sub
push
and
scas
or
mov
mov
cmp
xor
mov
cmp
jno
je
aaa
sub
loopne
and
push
ja
dec
test
fisttp
in
mov
xchg
ins
push
adc
push
ja
in
pushf
sub
mov
xor
in
inc
je
or
cmp
mov
scas
test
jmp
or
sbb
popa
fisttp
or
fmul
(bad)
xchg
sub
sbb
mov
pop
je
pop
fnstenv
or
pop
xchg
je
or
es
imul
inc
cmp
je
sbb
push
push
mov
inc
mov
mov
dec
add
push
pop
jmp
popa
dec
sub
sbb
mov
push
inc
xor
mov
add
imul
jmp
scas
jmp
test
mov
ret
in
jmp
mov
popf
dec
pop
pop
pop
(bad)
jb
adc
mov
ss
push
fcomp
cmp
call
dec
pop
cld
or
add
sahf
nop
clc
cmp
pop
(bad)
cli
push
cmp
out
push
jno
cmps
ret
test
add
xor
fsubr
call
push
push
test
lods
loopne
xchg
and
push
jmp
xor
sar
pusha
fs
test
inc
shl
out
dec
mov
push
retf
mov
xchg
lods
inc
lods
mov
sahf
sahf
adc
sub
addr16
dec
dec
add
mov
ja
mov
mov
lahf
or
add
mov
maxps
or
push
sbb
jns
call
dec
dec
pop
sbb
sub
lock
lods
dec
adc
aaa
jle
xchg
sub
add
adc
test
test
out
out
cmp
rcr
es
(bad)
push
pop
arpl
clc
push
or
push
fwait
xchg
ja
shl
in
add
add
retf
lahf
xor
pop
add
add
sbb
xchg
and
mov
or
int
jnp
int
cdq
push
rol
dec
push
add
jo
sub
sub
mov
sbb
mov
sub
sub
or
icebp
sub
sub
or
jne
jne
rcl
shr
shr
pop
addr16
nop
pop
inc
dec
in
mov
xchg
sbb
mov
aam
das
jo
adc
mov
jmp
pop
adc
mov
not
rol
and
push
or
mov
mov
out
gs
clc
rol
mov
jl
lea
out
inc
iret
ror
loop
sub
rol
lods
ins
aaa
scas
loope
cmps
cmp
rol
cmp
pop
dec
cmp
inc
mov
cmp
sbb
mov
rcr
mov
fnstsw
push
mov
add
mov
xchg
repnz
jmp
test
mov
loope
clc
lods
or
repz
mov
sysret
xchg
mov
(bad)
lods
iret
retf
cmp
ret
bound
xchg
push
jmp
cmp
sub
jmp
lods
aam
add
retf
shl
sti
out
inc
xchg
sahf
push
les
call
inc
or
cmp
test
xchg
dec
jl
pop
xchg
xchg
retf
and
rol
fadd
mov
es
icebp
mov
and
sub
cmps
jae
inc
mov
mov
xchg
push
adc
(bad)
cmps
or
pop
dec
movq
mov
in
lds
int
add
cmps
push
jecxz
mov
(bad)
push
js
adc
add
rol
mov
stos
in
jnp
jnp
mov
jnp
retf
retf
ja
into
shr
pop
inc
pop
xor
rcr
sbb
sbb
test
add
cwde
and
cmc
bound
jne
jnp
test
(bad)
pop
add
and
jge
add
in
inc
mov
xchg
push
enter
sti
and
cmp
inc
and
mov
mov
mov
adc
rcr
jo
mov
call
dec
imul
or
jge
xor
jmp
les
adc
mov
add
fiadd
mov
or
ins
lea
jecxz
inc
call
out
retf
in
push
cld
sbb
fisttp
les
je
sub
je
data16
adc
mov
push
and
sahf
ins
(bad)
ja
push
dec
add
mov
lock
inc
out
(bad)
mov
imul
test
add
add
or
inc
clc
(bad)
aad
sbb
add
push
push
push
test
and
push
outs
movs
adc
test
mov
cmp
sub
push
daa
mov
jp
mov
ja
or
ds
ins
loop
pop
sbb
scas
jbe
add
es
aam
gs
bound
js
push
sub
cmps
or
adc
pop
dec
fs
fs
add
jle
aaa
and
adc
rol
test
xor
push
or
scas
in
movs
mov
addr16
call
cwde
dec
cmp
xor
pop
(bad)
xor
(bad)
outs
push
adc
sub
push
and
inc
jb
test
sbb
or
(bad)
push
(bad)
daa
adc
mov
pop
jle
inc
adc
clc
adc
or
sub
fild
mov
pop
add
out
dec
add
mov
pop
xchg
movs
shr
out
jmp
inc
stc
pop
pop
adc
lea
or
push
lahf
inc
sub
ret
movs
fbld
pop
js
ja
adc
fwait
jne
fild
out
test
iret
jae
push
daa
aaa
aas
inc
(bad)
cmp
push
push
push
addr16
xchg
aas
sahf
out
out
cmps
push
mov
(bad)
xlat
out
mov
pop
fisubr
adc
mov
push
aas
fiadd
add
push
sar
fiadd
push
lock
mov
jl
pop
mov
sub
test
pop
add
dec
enter
push
mov
mov
pop
add
add
or
or
mov
nop
or
inc
pusha
or
rcr
adc
push
pop
je
out
mov
das
pusha
mov
sub
je
mov
je
scas
sbb
dec
xor
or
jle
add
jmp
cmp
add
out
pusha
push
mov
dec
sbb
add
xchg
dec
push
sub
loopne
daa
mov
in
sbb
inc
shl
loopne
add
pop
push
dec
fbld
xor
inc
or
sub
adc
xchg
lock
add
sub
and
xchg
and
inc
mov
xor
mov
mov
inc
nop
xchg
xor
fimul
sub
mov
inc
and
jmp
loopne
repnz
jg
inc
fadd
je
imul
sub
push
test
add
fisttp
arpl
fild
loope
test
les
adc
out
sub
in
les
or
mov
pop
adc
sbb
(bad)
mov
cmp
jno
add
punpcklbw
inc
push
and
pop
iret
repz
stc
push
mov
daa
ds
aad
in
sub
mov
mov
pop
out
fadd
mov
dec
or
sbb
stc
or
cmp
in
mov
adc
adc
dec
push
in
outs
fcom
faddp
cdq
clc
sbb
pop
cmp
add
inc
or
push
in
nop
out
pusha
std
(bad)
sub
push
sbb
fsubr
dec
xchg
hlt
imul
xchg
jl
js
js
adc
adc
call
xor
aas
mov
pop
xor
sub
inc
(bad)
cmp
int
js
test
stos
push
cdq
stc
test
adc
pop
add
movs
add
or
outs
dec
ret
push
add
sbb
mov
push
mov
lock
xor
jns
aad
sub
aam
test
and
dec
ficomp
ins
sahf
addr16
rcr
push
in
gs
out
cs
lods
int
mov
sti
or
sahf
xchg
out
aas
push
arpl
jns
out
mov
jns
mov
aam
ja
clc
or
(bad)
in
cdq
push
xchg
sbb
fcmovnbe
movs
and
pop
enter
cs
lds
add
sub
jnp
pushf
pop
pushf
fadd
jns
add
test
imul
and
(bad)
or
mov
mov
iret
jmp
push
adc
inc
je
ins
stos
sbb
arpl
inc
sbb
xor
xor
fld
cmp
sbb
mov
sbb
or
adc
xor
test
das
push
out
pop
mov
pop
fcom
jae
mov
adc
imul
jno
mov
adc
fisttp
mul
add
adc
fcomp
push
xor
cmp
es
xor
stos
lsl
jmp
ret
icebp
adc
nop
stos
push
(bad)
mov
xor
jo
cmc
aad
xor
sub
sub
inc
sbb
fld
inc
mov
popf
xchg
pop
jmp
sbb
mov
stos
ins
mov
push
pop
inc
pop
add
jnp
jnp
jb
inc
jbe
ss
cmc
add
dec
sar
adc
and
jecxz
or
pop
call
xlat
push
xchg
cmps
cs
out
aam
test
sbb
and
or
popa
jmp
pop
pop
jg
xchg
aam
or
into
retf
pop
out
fwait
jmp
inc
mov
xor
pop
test
call
jnp
out
or
jno
stc
sbb
sbb
fdivr
push
es
pusha
ror
scas
pop
push
push
inc
adc
mov
loope
fist
fisttp
nop
add
xchg
add
pushf
add
adc
(bad)
cmp
dec
add
sbb
push
daa
jmp
jno
das
mov
bound
adc
ds
inc
ficom
inc
ds
and
cmp
cmp
and
add
dec
mov
ret
mov
add
movs
xchg
push
dec
inc
std
repnz
icebp
mov
sub
ret
jmp
pop
shl
leave
jmp
add
das
movs
sub
pop
or
ds
sar
stos
mov
idiv
or
xchg
or
out
aaa
sbb
add
test
push
adc
mov
or
mov
loopne
pop
mov
lahf
rcr
bound
add
inc
jmp
mov
cmp
js
or
xchg
clc
cmp
mov
push
dec
lock
mov
or
out
add
add
pop
add
mov
mov
fs
xor
rcl
sub
add
add
sbb
std
sub
jno
push
lds
push
rcr
je
shl
mov
ret
mov
leave
cmp
ret
or
(bad)
outs
xchg
pop
push
add
jbe
fdiv
xor
jg
sti
dec
mov
adc
add
les
push
ja
add
test
ins
xor
div
cs
add
stos
clc
dec
adc
and
cld
shl
shl
mov
pop
out
mov
out
arpl
rol
add
push
int3
ret
pop
adc
jecxz
and
ret
repnz
fs
sub
(bad)
out
sub
cld
dec
icebp
pushf
neg
inc
dec
mov
stos
shr
push
iret
and
inc
mov
sub
das
push
mov
shl
test
inc
jge
lods
pop
je
outs
or
sbb
push
popa
push
movs
adc
movs
mov
inc
adc
add
inc
stos
sbb
and
push
xchg
sub
mov
dec
xchg
outs
pop
movs
add
xchg
jmp
add
dec
test
adc
mov
mov
inc
ret
cmp
jmp
jns
inc
ins
ret
nop
and
js
scas
or
inc
cmps
lods
dec
clc
or
add
or
ja
sbb
rol
stos
xor
pop
add
repz
jb
push
push
fld
add
or
cmc
into
dec
lahf
out
jb
push
retf
cmc
pop
hlt
repz
jae
push
jae
(bad)
out
jge
or
adc
je
push
aam
ret
ins
mov
int3
push
jl
push
add
mov
and
test
and
pusha
test
jl
dec
and
adc
in
lahf
add
push
add
sub
sbb
test
push
leave
dec
and
dec
jno
dec
in
xor
in
dec
adc
cs
xor
lock
dec
sub
push
test
mov
xlat
push
inc
adc
mov
jbe
push
add
stos
or
je
fisttp
call
jb
or
dec
add
je
inc
sbb
jg
push
or
bound
sub
mov
jae
add
(bad)
push
or
inc
pcmpgtd
and
outs
add
ja
sbb
icebp
rcl
mov
inc
loop
add
mov
push
push
rol
aaa
jae
adc
mov
pop
mov
inc
lock
add
loop
std
rcr
and
add
sar
aad
iret
jnp
add
xchg
push
mov
cmp
bound
scas
pop
call
mov
fcom
and
push
add
sub
leave
dec
nop
or
or
adc
mov
and
adc
push
xor
and
sti
adc
pop
scas
in
rcr
lods
adc
and
jmp
(bad)
or
gs
aas
lods
and
or
(bad)
inc
add
add
cmps
push
dec
jo
sub
ret
sbb
sbb
sar
jbe
gs
test
jg
or
add
(bad)
arpl
sub
xchg
inc
outs
dec
adc
inc
ja
push
mov
sub
dec
aam
dec
(bad)
in
push
pop
cld
inc
test
(bad)
lock
push
or
movq
sahf
xor
adc
adc
pop
stos
xor
and
inc
add
mov
cmps
sbb
dec
cwde
xor
jno
mov
aam
ror
lods
ror
pop
mov
and
and
js
adc
leave
sbb
das
fidivr
ss
sbb
adc
adc
push
movzx
xlat
cwde
jmp
xor
push
adc
inc
lock
fistp
leave
ins
and
or
xchg
lea
cdq
ret
icebp
aam
sbb
cmp
pop
or
jns
lods
fbstp
loopne
and
push
add
pop
inc
sub
scas
dec
bound
es
add
push
icebp
xlat
xor
jb
call
inc
iret
jp
test
aad
push
adc
mov
and
xchg
push
ret
nop
(bad)
cdq
sub
inc
cmp
mov
and
push
mov
adc
push
or
xor
add
test
sbb
inc
cmp
ret
loopne
adc
shl
cmc
les
sbb
inc
jg
stc
cmp
jl
mov
inc
push
fadd
or
add
repz
xlat
pop
push
aaa
sub
jp
or
inc
adc
(bad)
mov
call
movs
rcr
push
mov
and
test
sahf
jno
add
ins
jl
xlat
mov
das
ss
lea
adc
clc
jle
pop
push
push
repnz
jns
cmp
sbb
pop
gs
pop
mov
mov
jge
add
cmp
jge
mov
jo
jb
test
lods
test
jne
inc
sub
ret
popf
cmp
jle
add
mov
enter
cli
mov
sub
and
adc
aad
mov
sar
and
mov
add
jp
mov
sub
mov
enter
cmp
(bad)
stos
xchg
and
sbb
add
hlt
mov
sbb
test
imul
mov
jb
in
jnp
shr
add
push
inc
adc
mov
add
gs
or
lock
mov
neg
(bad)
aad
fmul
adc
fcomp
mov
sub
sbb
xchg
inc
lock
ss
shr
jmp
xchg
test
mov
and
add
popf
lock
out
jmp
test
sbb
xchg
or
sub
sbb
mov
mov
mov
sbb
inc
jne
push
add
pop
dec
sbb
enter
jl
mov
inc
lods
adc
push
test
lods
out
inc
aas
cmp
jg
xor
test
ret
jno
mov
push
inc
jbe
loope
adc
and
ret
fisubr
mov
add
adc
add
stc
int3
mov
inc
adc
inc
xor
mov
xchg
sbb
(bad)
test
adc
dec
sbb
mov
add
adc
xchg
lods
sbb
mov
push
jge
push
cld
in
mov
shld
retf
jge
cmp
adc
push
retf
push
or
lock
inc
pop
push
or
mov
push
or
mov
sbb
xor
cdq
inc
cmp
and
cmc
dec
inc
xchg
fcom
xchg
into
in
sub
nop
mov
ss
xchg
in
or
push
cmp
jne
mov
mov
add
loopne
inc
loopne
add
leave
xlat
mov
fdiv
fcom
and
add
int3
lock
int
or
cmp
jle
sbb
and
pusha
lock
mov
add
test
push
cmps
lea
fdivr
or
adc
mov
push
mov
int3
out
retf
mov
or
inc
jae
sbb
pop
nop
mov
imul
je
inc
adc
jbe
xor
xchg
dec
add
and
or
xor
popf
mov
daa
mov
outs
cmp
push
sub
je
stos
retf
inc
jnp
sbb
sbb
and
lea
and
addr16
mov
sbb
xor
clc
je
add
inc
sbb
cwde
add
jo
lea
clc
mov
push
cmp
jne
mov
lods
cmp
xor
xchg
rol
jno
push
or
cmp
add
and
mov
loope
fwait
pop
dec
mov
push
and
push
nop
push
repnz
xor
dec
push
imul
cmp
jl
addr16
loopne
push
cmp
iret
push
jl
mov
jmp
cld
push
std
sti
enter
xlat
pop
mul
pop
(bad)
mov
shr
in
test
mov
stos
or
push
push
loopne
xor
sbb
out
loop
pop
lods
nop
mov
add
stos
sub
add
fwait
add
push
mov
(bad)
fadd
mov
add
inc
dec
inc
dec
repz
out
or
sahf
and
bound
(bad)
setge
mov
into
jbe
push
retf
icebp
in
pop
cmp
sysret
xor
retf
mov
or
cli
push
mov
xchg
cmp
ds
stos
std
(bad)
xor
fsubr
add
enter
add
lods
sub
lock
add
add
iret
pop
rol
rcr
inc
jo
mov
jns
sti
inc
push
lea
inc
loopne
sbb
push
push
shl
nop
add
(bad)
mov
(bad)
and
mov
jns
cmps
lock
push
push
rcr
loop
or
jle
inc
inc
push
add
add
inc
test
adc
add
out
sub
stos
dec
dec
cmp
(bad)
and
mov
adc
or
or
dec
sbb
adc
sbb
arpl
cwde
inc
mov
or
int
mov
sbb
nop
cmp
inc
clc
rcr
adc
mov
pop
mov
push
mov
loop
mov
cmp
xchg
das
es
hlt
jno
daa
ss
xor
add
add
std
les
daa
inc
mov
jno
dec
dec
mov
(bad)
sbb
retf
add
(bad)
fs
(bad)
pop
invd
inc
sub
(bad)
test
nop
jge
add
pop
or
bound
dec
mov
or
push
pop
mov
mov
scas
ret
lahf
inc
jg
pop
jecxz
xchg
push
pop
or
pop
inc
jae
jge
imul
add
xor
fwait
leave
cmp
pop
jge
bound
xchg
lock
jge
fisubr
into
add
fsub
pop
add
mov
scas
fld
or
popa
je
pushf
jl
adc
cld
popa
mov
jmp
cmp
ja
fwait
cmps
lea
mov
and
adc
icebp
mov
jae
mov
pushf
or
xor
cmp
cmp
adc
push
ins
add
pop
mov
mov
sub
aad
push
inc
mov
lock
test
add
das
adc
icebp
adc
pop
pop
cmps
icebp
and
retf
jo
adc
inc
sbb
mov
sbb
rcr
dec
dec
adc
push
xchg
les
jae
mov
sub
dec
push
and
push
jno
movs
and
inc
sub
dec
mov
or
add
dec
pop
paddsb
daa
ret
lods
add
ret
jecxz
ret
jmp
push
mov
mov
dec
ret
shl
fdivr
xor
adc
lea
dec
fdiv
cld
pop
add
inc
adc
jp
or
cmp
mov
cmp
adc
(bad)
cmp
ror
sub
add
mov
push
mov
pop
adc
jge
jae
cli
adc
sbb
and
pop
inc
xchg
dec
enter
loop
add
add
(bad)
mul
in
sbb
rcr
push
xchg
hlt
inc
mov
loopne
push
mov
cmp
iret
push
hlt
ins
pop
jne
fldenv
adc
mov
ret
test
sub
in
or
ins
fdivr
clc
push
push
inc
xor
jge
loop
jae
call
adc
ss
dec
cmp
call
dec
jne
in
dec
adc
cmp
enter
xchg
hlt
(bad)
inc
xchg
add
cwde
xchg
sub
xchg
lods
hlt
fwait
push
cmp
rcl
mov
mov
dec
sub
dec
jne
xchg
clc
cmps
(bad)
cmp
add
ret
nop
push
inc
add
(bad)
cmp
pop
push
les
sub
or
push
or
(bad)
std
dec
or
inc
and
lahf
or
xchg
cld
imul
outs
add
and
xchg
add
les
nop
push
mov
xor
adc
sbb
or
nop
add
cld
lahf
cmp
dec
or
adc
in
add
adc
clc
push
pop
jg
mov
lahf
pop
sbb
adc
inc
ins
call
lahf
push
leave
sub
call
or
mov
push
lods
lahf
pop
movs
add
in
add
nop
inc
cdq
push
cmp
push
loopne
push
sar
mov
loope
sbb
jg
sbb
mov
sub
lods
dec
push
adc
cmps
sbb
push
test
in
adc
data16
dec
loopne
push
icebp
add
data16
pop
ret
and
or
and
gs
pop
add
push
xor
add
daa
pop
add
add
cli
cmp
into
sub
and
fdivr
pop
sub
sbb
in
adc
push
dec
rol
pop
add
enter
fadd
and
mov
mov
cld
jecxz
dec
nop
out
or
ins
jmp
dec
inc
or
aas
jecxz
or
cmp
clc
ja
adc
dec
imul
sti
aas
cs
push
popa
imul
ins
cs
ins
popa
jae
sub
jg
jbe
ins
jo
outs
outs
je
push
push
push
outs
outs
lds
ds
jb
popa
jns
push
or
add
cmp
xchg
inc
js
jb
arpl
ins
push
fidiv
jae
add
push
cmovl
jle
sbb
inc
rcl
sbb
inc
gs
jne
je
add
or
push
or
add
outs
cmps
inc
dec
outs
or
inc
jbe
outs
dec
adc
fimul
add
or
push
ds
pop
push
adc
dec
test
lahf
add
inc
dec
pop
popa
mov
pop
sub
jo
in
(bad)
daa
mov
inc
add
or
jge
fiadd
adc
add
push
or
in
push
scas
sbb
mov
mov
fimul
or
lahf
out
push
pusha
call
inc
test
lahf
cmps
jge
or
push
xor
push
push
mov
outs
in
mov
and
das
pop
mov
scas
pop
lds
xchg
bndldx
into
push
add
push
add
mov
dec
popa
outs
popa
xor
adc
cmp
xor
cmps
add
pop
add
and
jo
xchg
add
repz
test
inc
jb
dec
bound
and
fiadd
or
hlt
add
int
aaa
inc
push
sbb
push
lods
rcl
sbb
fidiv
inc
imul
retf
das
inc
lods
lods
scas
add
arpl
sbb
dec
cmp
bndldx
cmp
cmovle
outs
jne
pop
push
pusha
add
clc
ret
xchg
or
das
push
and
push
push
push
inc
call
mov
dec
std
popf
and
xor
and
xchg
xor
dec
adc
aad
(bad)
xchg
push
adc
pushf
pop
das
pop
popa
cmp
hlt
adc
repnz
add
sbb
test
push
dec
jmp
jo
pop
or
push
and
nop
bound
add
push
inc
jb
sbb
push
lods
adc
or
lods
or
mov
arpl
mov
adc
je
cbw
fadd
xchg
mov
pop
xor
pop
xor
sub
mov
xlat
or
cmp
sbb
in
add
ja
dec
enter
hlt
sbb
outs
out
loopne
fs
xor
jle
in
das
inc
cmps
loopne
dec
mov
lock
jnp
mov
mov
push
pop
clc
mov
push
jnp
cmp
pop
add
sbb
les
or
cmp
sbb
jae
ins
xlat
loopne
mov
inc
sub
out
sbb
add
sbb
inc
or
fild
sub
int
fistp
mov
jmp
daa
dec
jnp
js
cmp
push
dec
je
push
inc
sbb
call
(bad)
sub
cmp
cmp
inc
sahf
pushf
pushf
fdivr
xor
and
dec
mov
xor
jae
xchg
daa
daa
retf
adc
rcl
add
leave
ins
(bad)
mov
in
cs
jnp
fcmovnb
xor
and
dec
dec
xchg
(bad)
add
push
inc
aad
sub
add
adc
jno
fwait
aam
xor
out
out
mov
(bad)
dec
or
xor
(bad)
or
add
mov
xor
loop
xor
test
mov
or
inc
pop
je
outs
jns
jle
inc
xor
add
dec
and
mov
int3
dec
jae
sbb
mov
out
push
adc
add
push
popa
jg
push
lods
imul
xor
inc
inc
fs
call
mov
fldenv
inc
movs
ret
sub
add
ins
jae
cmp
in
and
rcl
cdq
ja
adc
mov
ja
test
(bad)
push
and
movs
je
jae
and
xor
adc
xchg
add
or
or
push
or
or
xchg
and
das
leave
fwait
cli
les
shl
sub
imul
ret
adc
pop
dec
jae
test
repz
push
push
jp
xchg
outs
add
iret
dec
imul
ret
push
loopne
call
or
sbb
or
inc
pusha
lea
add
les
imul
bound
xchg
inc
inc
inc
js
dec
fsub
push
jo
add
xchg
mov
sbb
push
ja
add
or
sbb
stc
inc
xor
scas
or
push
mov
mov
arpl
dec
sti
push
lock
(bad)
or
(bad)
xchg
mov
adc
gs
xor
push
xor
popf
inc
pop
jae
cmp
sub
add
out
bound
add
dec
popa
pop
and
inc
mov
popa
jb
es
int
pusha
push
cmp
sub
pop
aaa
jae
ret
push
ror
dec
stos
pusha
cli
and
ss
dec
popw
call
sbb
sbb
mov
cdq
addr16
daa
jns
retf
adc
fisttp
push
outs
jb
inc
aaa
outs
inc
scas
sub
add
adc
shl
dec
or
adc
repz
mov
retf
xlat
mov
bound
mov
pop
dec
or
jae
sbb
push
jb
ins
mov
jae
or
test
xchg
xor
sti
dec
loopne
pop
jb
add
add
lea
add
outs
dec
and
mov
inc
inc
in
cmp
mov
push
sbb
ret
inc
loope
cmp
pop
jecxz
pop
or
add
ins
mov
hlt
aad
add
outs
adc
aaa
arpl
add
add
jns
movs
verr
pop
sti
(bad)
popa
mov
inc
mov
arpl
mov
add
mov
add
in
mov
mov
sbb
ret
and
and
add
out
mov
out
fcom
pop
rcr
push
sbb
mov
(bad)
dec
movaps
xchg
jo
lods
mov
add
pop
jl
call
mov
adc
xchg
xor
mov
pop
clc
xor
pop
pop
mov
pop
sbb
mov
and
sub
pop
(bad)
add
pop
lahf
pop
lds
pop
inc
scas
pusha
(bad)
push
xor
and
push
(bad)
stos
outs
(bad)
mov
daa
jg
inc
xchg
pop
xor
movs
mov
push
pusha
mov
mov
data16
popw
add
leave
imul
inc
retf
jge
xor
sub
sub
mov
cmc
stos
jo
das
sub
jo
mov
or
pop
add
cmps
addr16
mov
je
addr16
outs
sub
aaa
pop
sbb
test
jnp
mov
pushf
cmps
pop
mov
pop
mov
sbb
sub
idiv
mov
clc
pop
addr16
xor
dec
les
mov
inc
repnz
cmp
xor
mov
(bad)
nop
xor
sub
bswap
arpl
aam
in
(bad)
retf
adc
push
cmp
movsx
repnz
cmp
cmp
sbb
cmp
test
out
cmp
sahf
pushf
lock
and
repnz
aas
cmp
daa
daa
daa
cwde
into
sbb
xchg
xchg
xchg
push
jl
xlat
mov
(bad)
inc
aas
(bad)
data16
add
sbb
jmp
inc
xchg
add
cmp
and
mov
jne
jno
test
rcl
or
add
add
jns
xor
mov
pop
shrd
push
leave
mov
sub
paddusw
addps
dec
mov
dec
push
adc
adc
adc
xor
xchg
push
addps
or
and
xchg
mov
fwait
les
jo
mov
adc
adc
or
in
inc
test
adc
cmp
dec
stc
push
inc
xchg
jae
(bad)
jecxz
inc
add
inc
and
lods
(bad)
inc
mov
inc
mov
pop
and
dec
dec
push
test
mov
add
push
pushf
mov
adc
adc
sub
push
or
mov
inc
call
add
cmp
cmps
add
adc
mov
jb
dec
add
and
dec
inc
and
leave
sbb
ss
ss
cmp
mov
test
xor
jle
adc
les
inc
stc
mov
add
or
test
adc
inc
enter
cmp
pop
mov
push
test
cmovle
and
jnp
dec
test
adc
or
and
ret
sbb
mov
adc
and
adc
es
push
sub
add
add
xor
popf
xor
pop
scas
pop
rcr
inc
ja
inc
pop
(bad)
call
loop
adc
and
int3
aad
fsubr
aad
pop
xor
lahf
pop
inc
jl
fcomp
cmc
popa
pop
retf
push
gs
rol
mov
push
fsub
ja
mov
inc
rol
out
(bad)
or
sahf
nop
arpl
add
add
and
inc
adc
xor
pop
xchg
cwde
mov
mov
sub
je
push
imul
jmp
pop
and
mov
and
cmovbe
xchg
add
inc
fild
pop
aam
repnz
scas
pop
push
pop
fsubp
inc
mov
adc
mov
in
jno
inc
inc
add
scas
cmpxchg
into
dec
scas
push
push
inc
rol
das
jno
add
jo
pop
das
inc
int
add
add
int
ret
sub
dec
add
adc
and
shl
outs
or
pop
mov
xchg
adc
jnp
jge
push
int
mov
or
jns
dec
pop
add
pusha
jno
mov
scas
mov
cmps
imul
repz
jge
cmps
mov
jl
nop
dec
sahf
adc
jl
popf
popf
scas
dec
lahf
sbb
pop
sbb
add
dec
clc
add
not
and
mov
sbb
scas
in
dec
mov
repnz
pop
mov
test
sbb
push
loop
dec
sub
adc
int
dec
add
add
xor
neg
xor
cmp
call
xchg
xchg
das
not
dec
jle
stc
dec
jne
or
cmp
jo
lahf
push
dec
mov
call
pusha
int
add
pop
adc
lahf
retf
lds
in
xor
clc
xor
add
inc
mov
ja
or
jns
add
sub
or
inc
xchg
xchg
sub
rcl
inc
cmp
cmp
nop
xchg
xchg
xchg
add
shl
pop
push
add
jp
add
fs
(bad)
scas
jae
dec
(bad)
ins
mov
sbb
push
je
xor
fimul
add
dec
es
mov
push
(bad)
ja
jmp
das
mov
pop
aaa
les
mov
add
adc
jo
pusha
adc
dec
ja
fs
push
add
pop
add
dec
adc
js
or
dec
cmp
mov
mov
pop
scas
pop
push
add
push
dec
leave
movs
jg
outs
mov
dec
dec
inc
outs
inc
popf
stos
adc
add
cmp
push
xchg
push
and
in
push
fisttp
adc
inc
sub
lock
ins
xor
inc
sbb
ins
ret
scas
fs
jns
push
imul
sar
dec
ins
or
push
jae
dec
inc
inc
adc
loopne
xor
dec
xor
jae
je
test
adc
and
loop
jo
hlt
add
dec
xor
hlt
sbb
pushf
std
inc
pop
inc
test
cmps
sub
push
enter
cmp
pop
sub
das
lds
retf
add
add
std
je
int
dec
jne
cmp
nop
cwde
jnp
out
cmps
mov
push
inc
push
mov
push
xchg
and
push
xchg
dec
mov
mov
mov
push
ins
mov
lahf
and
loop
arpl
pop
xor
push
xor
push
mov
add
in
jmp
adc
jae
push
inc
cmp
mov
inc
push
je
mov
popa
fidivr
fs
sbb
int
ss
cwde
test
push
push
(bad)
fcom
das
push
setb
retf
and
mov
dec
loopne
jo
setne
push
ss
inc
das
xor
rol
inc
push
inc
pusha
leave
or
push
mov
sar
fs
adc
movs
adc
jl
cs
push
jns
and
add
ja
adc
fwait
into
mov
iret
push
fidivr
or
imul
jns
aas
or
push
dec
xor
jae
outs
jb
mov
sbb
jp
fstp
xor
addr16
nop
pusha
cmp
aam
mov
imul
xor
push
(bad)
(bad)
mov
pop
cld
das
or
ja
leave
(bad)
je
mov
inc
enter
mov
ds
inc
or
inc
out
sbb
jo
sbb
push
inc
dec
adc
and
sahf
and
pop
push
mov
xor
inc
outs
push
dec
and
pop
in
adc
lahf
cwde
cmps
inc
loopne
sbb
dec
imul
fistp
ss
push
cmp
imul
xchg
aam
aas
and
mov
pop
fistp
or
push
push
jo
dec
mov
outs
push
jl
add
mov
mov
je
imul
mov
or
gs
mov
adc
enter
pop
jge
jp
mov
aad
push
sbb
add
dec
push
xor
shl
add
push
shl
js
dec
add
popf
sbb
inc
or
mov
mov
xchg
ins
imul
nop
and
pop
add
sbb
adc
lahf
fldcw
mov
arpl
popa
(bad)
inc
mov
pop
push
and
mov
mov
je
pusha
push
shl
dec
lds
scas
pop
jecxz
or
in
xor
xor
enter
or
add
mov
inc
mov
xor
push
lods
mov
jp
adc
hlt
mov
out
dec
pop
loope
adc
or
inc
ins
mov
and
mov
and
enter
adc
pop
and
js
pop
cmp
push
xchg
pop
mov
rcr
pop
sbb
jns
sub
xor
lods
or
(bad)
pop
loope
jmp
push
add
mov
stos
lds
xor
push
pop
xor
or
inc
enter
xor
xchg
hlt
xor
push
pop
and
push
call
mov
pop
int
imul
push
das
mov
popf
inc
add
out
dec
and
shl
push
iret
adc
retw
cmp
and
xchg
push
iret
or
in
shl
pushf
loop
inc
or
inc
jne
or
mov
pop
nop
xor
pop
stc
repnz
jnp
lock
pop
or
dec
dec
or
bound
pop
sub
ins
in
pop
or
inc
pop
push
inc
cld
loope
add
retf
add
pop
inc
imul
es
pushf
cmp
pop
iret
pusha
pop
pop
enter
ins
ins
and
shl
push
pop
cmps
inc
push
sbb
dec
xchg
inc
mov
rcl
mov
in
je
inc
inc
sbb
dec
lock
dec
inc
lds
dec
dec
and
jl
adc
call
adc
inc
adc
and
pusha
cmovl
adc
pop
xor
jle
cmovge
xbegin
pop
mov
xchg
enter
add
in
ror
in
popa
jb
mov
popa
ret
test
cmc
popa
and
bound
adc
jmp
test
cmps
rol
adc
daa
mov
mov
adc
in
pushf
adc
dec
inc
in
adc
inc
movhps
jns
dec
cmp
(bad)
dec
bound
pushf
add
(bad)
dec
(bad)
lds
or
(bad)
pop
adc
and
adc
sub
fwait
mov
popa
jl
lahf
add
mov
enter
or
leave
outs
inc
call
inc
jae
push
sbb
outs
jne
std
je
test
push
mov
sbb
push
das
pop
lods
les
pop
ss
fidivr
cmp
jnp
cdq
arpl
test
(bad)
sbb
lea
add
lods
arpl
arpl
inc
retf
ds
or
(bad)
adc
inc
mov
ret
cmp
jmp
lea
mov
and
sbb
jo
pop
add
dec
xor
pop
ins
je
sbb
push
adc
aas
push
arpl
fadd
ret
stc
enter
xor
dec
push
popa
loop
ins
ds
loopne
test
fbstp
iret
aam
paddb
pushf
add
cs
in
dec
add
bound
hlt
int
aaa
push
inc
dec
gs
jae
sbb
and
jnp
ror
popf
cld
xchg
out
jns
addr16
inc
jle
and
push
unpckhps
outs
mov
xor
pop
jno
mov
(bad)
dec
xor
jo
mov
imul
dec
ds
fmul
xchg
into
out
add
cmp
push
mov
cmp
xchg
ficomp
and
das
mov
movs
retf
jb
push
repnz
loop
jo
ins
fwait
add
mov
add
fcom
push
sub
aam
adc
pop
jns
add
inc
mov
add
add
push
adc
and
fwait
cwde
push
xchg
add
dec
cmps
mov
cs
retf
movs
cmp
mov
pop
mov
pop
cmp
and
push
adc
add
fwait
push
ins
xchg
xor
dec
add
popa
pushf
aad
push
pop
test
push
mov
fs
shl
ror
inc
lock
push
arpl
add
in
cs
aam
cs
mov
jb
lock
ins
pop
jge
cs
inc
dec
jge
add
xchg
repnz
jl
icebp
leave
mov
or
add
xor
sub
mov
je
xchg
dec
xor
in
pop
mov
add
daa
dec
into
push
ins
mov
pop
mov
push
(bad)
(bad)
int
mov
leave
push
outs
jae
dec
mov
bound
cdq
mov
or
jo
mov
jae
cmps
or
or
xlat
xor
test
movhps
pop
dec
sub
mov
push
cld
sbb
inc
gs
adc
int3
cld
ja
or
in
lds
mov
pusha
jns
xchg
mov
mov
sub
or
inc
gs
clc
or
ins
add
push
ins
inc
jg
pushf
pop
jge
fs
ret
mov
push
mov
sbb
mov
mov
and
int3
fcmovnbe
int
cs
and
outs
pop
inc
and
jb
shrd
mov
mov
push
iret
jo
enter
jg
scas
lock
aaa
lods
ins
(bad)
jmp
outs
out
outs
(bad)
movs
test
pop
add
outs
scas
fist
xor
int
mov
lods
(bad)
outs
adc
rcr
dec
cmova
and
mov
daa
cmp
sbb
outs
mov
push
pop
outs
add
cmp
dec
fstp
jns
fwait
loop
fcmovne
pusha
pop
add
or
mov
iret
call
outs
in
xchg
and
outs
push
jo
jo
loope
adc
pop
sub
movs
shl
jb
jns
frstor
repnz
frstor
mov
and
inc
rcr
dec
pop
sbb
test
pop
daa
sbb
push
push
push
or
and
push
inc
ror
clc
sbb
xchg
dec
jno
xor
stos
pslld
sbb
cmp
add
jno
rol
enter
lahf
cmp
sub
pop
push
dec
push
cmp
mov
jo
test
aaa
cmp
jb
aam
pop
adc
pop
sbb
mov
es
mov
je
mov
enter
ficom
mov
inc
cwde
fild
fdivr
(bad)
adc
jns
fimul
jae
inc
inc
ins
gs
inc
push
or
jae
xor
in
mov
(bad)
fisub
je
jmp
es
dec
dec
inc
pop
mov
div
cmp
dec
sub
and
pop
leave
xor
ja
(bad)
mov
scas
and
aas
nop
(bad)
out
mov
cmp
or
add
jnp
js
or
loopne
loope
pop
pop
push
inc
aad
mov
adc
push
mov
inc
arpl
fs
in
add
or
mov
mov
fcomp
pop
stc
sbb
sti
ret
xor
nop
or
fist
adc
clc
outs
je
fdiv
hlt
test
dec
dec
and
mov
and
popf
sub
dec
dec
pushf
adc
int3
adc
adc
add
push
xor
ins
aaa
or
mov
push
ins
pop
and
or
xor
out
push
rcl
cmp
je
dec
dec
mov
cmc
inc
dec
gs
js
xor
test
and
xchg
cmp
(bad)
jl
cmps
fadd
sub
aas
push
dec
ficomp
add
xor
push
fimul
mov
mov
mov
add
or
ins
scas
pop
xor
adc
bound
lods
icebp
push
rol
rcl
pop
fiadd
mov
adc
lds
rcr
mov
sti
or
dec
jno
aas
sub
popf
fld
xchg
ss
push
push
outs
push
jns
sub
pop
sbb
sub
stos
jnp
cwde
jno
jns
push
pop
movs
add
jmp
loopne
push
fnstsw
add
xchg
ins
and
pop
cmp
jle
ja
loop
adc
dec
out
dec
push
mov
lahf
aad
jp
cmc
push
dec
push
add
sub
sbb
and
jnp
dec
mov
pop
cmp
pop
sub
xor
popf
test
ret
test
js
das
pop
add
pop
jp
ss
jmp
jo
or
cmps
inc
mov
shl
in
adc
inc
(bad)
pfmax
inc
inc
jl
sub
(bad)
call
or
pop
addr16
or
pusha
adc
add
aam
jl
add
fld
lea
pop
add
jbe
mov
jne
out
fwait
mov
sar
in
jle
gs
cmps
mov
jle
jp
push
cmp
mov
les
inc
stos
pusha
inc
retf
mov
jle
mov
dec
jge
ins
adc
xor
stos
mov
jl
dec
sub
mov
push
mov
or
cmp
cmp
addr16
jge
inc
les
cmp
call
and
xor
pop
mov
repz
mov
xor
sbb
dec
loopne
inc
cmp
icebp
sub
push
mov
sub
xor
addr16
adc
adc
inc
xchg
cmps
in
aas
dec
rol
push
and
adc
sbb
rol
es
es
mov
adc
and
cmp
test
mov
jnp
sub
loopne
cmp
pop
cmp
and
sub
mov
ret
jns
mov
xor
push
push
inc
pushf
fsub
clc
xor
(bad)
dec
dec
inc
sahf
adc
adc
cmp
(bad)
setne
sahf
pushf
retf
dec
xchg
adc
dec
int3
sbb
fmul
test
cmp
je
pushf
mov
div
mov
int3
xchg
mov
sbb
cmp
loope
add
lea
xchg
and
sub
mov
lea
cmps
movs
dec
add
loopne
es
sbb
cwde
pop
mov
in
pop
shr
adc
in
and
sub
pop
sbb
push
dec
mov
push
push
lds
mov
(bad)
jmp
cmps
push
lds
mov
mov
pop
lea
inc
mov
adc
mov
mov
jg
sub
inc
dec
or
push
mov
pop
mov
jne
or
js
mov
mov
rcl
mov
inc
ret
or
inc
pop
and
jae
mov
jbe
repz
mov
dec
mov
add
mov
xor
cmps
add
mov
pop
inc
add
fild
inc
mov
add
adc
pop
lea
mov
lds
add
add
mov
lods
or
mov
push
xor
and
mov
and
inc
dec
mov
sub
xor
adc
arpl
or
aaa
or
push
sub
pop
lea
cmp
in
out
add
inc
mov
stos
sbb
or
rcl
or
arpl
adc
pop
loop
jnp
cs
retf
cmp
cmp
or
and
add
push
dec
mov
jecxz
loopne
repnz
add
cmp
push
scas
sub
sti
add
sbb
pop
stc
add
adc
clc
mov
das
stos
add
push
mov
(bad)
mov
and
xor
lods
jmp
pop
(bad)
mov
mov
movs
clc
mov
mov
jmp
nop
jmp
sub
das
pop
nop
jp
pushf
mov
call
adc
cdq
clc
jle
dec
movs
nop
rcl
mov
mov
icebp
daa
lahf
push
add
mov
mov
pop
jne
sbb
lahf
pop
mov
pop
dec
loope
inc
pop
mov
adc
dec
pop
xor
jmp
adc
push
add
cmp
mov
mov
shr
mov
ret
add
cmp
adc
cs
adc
retf
repnz
add
mov
in
repnz
adc
push
xchg
out
mov
lock
push
xchg
mov
jl
jecxz
pop
xchg
and
stc
pop
or
xchg
cmc
dec
adc
int
sub
movs
or
retf
shl
inc
add
lahf
pop
mov
sub
sbb
add
cmps
and
aaa
push
add
inc
push
sub
leave
mov
fcomip
jl
mov
push
and
dec
das
gs
daa
mov
add
jl
loopne
dec
dec
cs
aas
dec
mov
iret
(bad)
xchg
add
and
jo
lods
sub
cmps
dec
popf
or
mov
icebp
in
xchg
or
or
rcr
or
shr
and
adc
das
pop
pop
add
sbb
shr
out
rol
fwait
mov
int3
xchg
pop
fcom
dec
sahf
pop
add
test
cwde
das
mov
dec
jmp
in
push
sub
sub
mul
nop
in
and
add
rcl
iret
adc
dec
sbb
sub
fstp
add
ret
sbb
iret
fstp
jns
jb
cmp
cmp
mov
and
pushf
pushf
jle
push
add
inc
jg
add
dec
xchg
mov
and
stos
outs
cmp
cmp
sbb
inc
gs
in
loop
xchg
mov
add
pop
retf
add
iret
sbb
jmp
test
dec
or
or
shl
pop
or
stos
adc
out
sbb
add
inc
test
enter
loopne
mov
add
pop
ins
push
mov
adc
mov
add
pop
inc
ror
(bad)
or
mov
xchg
inc
add
rol
cmp
dec
and
dec
inc
rcr
add
rcr
adc
(bad)
xchg
rcr
xor
rol
rcr
inc
repnz
in
pop
inc
add
add
inc
in
inc
add
jae
shl
sub
or
ror
add
adc
and
rcl
dec
mov
push
add
inc
mov
add
push
add
dec
mov
adc
stos
add
pop
ror
pusha
add
rol
dec
adc
sub
or
rcl
shl
adc
es
pusha
rol
or
rol
adc
jns
add
or
sub
or
in
sub
xor
cmp
add
out
in
xchg
add
sbb
inc
fdivr
jmp
rcl
ror
mov
xchg
and
mov
fxam
ins
dec
or
leave
add
or
or
fldenv
(bad)
aas
bnd
xchg
and
push
fldcw
or
dec
push
sbb
jo
cmp
or
(bad)
mov
cld
jnp
movs
add
lods
fstp
(bad)
mov
in
push
pop
push
clc
add
in
leave
add
add
inc
adc
xchg
lock
xchg
ins
std
jmp
or
push
sbb
pop
cmp
jb
xchg
popa
mov
jl
daa
adc
jbe
jle
jb
loope
mov
adc
push
aam
mov
mov
mov
cmp
xor
jp
popf
retf
cmp
push
cld
cmps
mov
cwde
inc
xchg
mov
inc
jl
mov
inc
sbb
mov
jmp
push
mov
inc
clc
xchg
scas
add
in
sub
or
jge
sbb
hlt
push
push
aaa
int
jge
push
or
xor
cmps
push
ficomp
jo
stos
out
pop
dec
mov
xchg
or
add
test
cmps
sub
fcomip
mov
jp
jmp
bound
inc
idiv
cdq
push
lea
xchg
ins
adc
sar
dec
add
jo
xchg
adc
outs
js
adc
pop
fwait
or
das
mov
(bad)
jg
add
mov
mov
mov
rcl
(bad)
fiadd
jo
in
cdq
push
jbe
cdq
pop
push
sub
sub
sub
mov
not
or
movs
movs
mov
or
sti
out
xchg
fbstp
cmp
xor
daa
fisttp
inc
leave
sub
sbb
adc
je
or
in
inc
mov
lea
rcl
cmp
ds
cmp
lock
loope
and
aas
push
and
mov
add
test
shr
add
sub
jmp
xor
sub
nop
loopne
sub
mov
pop
jo
xor
cli
imul
imul
sahf
cs
add
add
icebp
dec
int
icebp
sub
shl
loopne
mul
hlt
fstp
lea
inc
loopne
and
loopne
or
or
xor
xor
ror
shl
addr16
nop
and
xchg
mov
sbb
cwde
dec
jb
nop
fild
mov
push
push
push
xor
sub
add
add
pusha
loop
xor
ja
cmp
jno
pop
xlat
inc
in
dec
sti
sub
mov
movzx
jbe
mov
lds
pop
adc
sub
xor
pop
mov
call
dec
int
fldcw
int
cmp
adc
ret
arpl
mov
add
sub
xchg
(bad)
adc
cdq
(bad)
bound
pop
jb
sti
mov
add
adc
mov
das
call
int3
je
cmc
lods
lock
and
push
outs
imul
mov
loop
gs
or
inc
gs
pop
mov
sub
add
inc
(bad)
inc
add
mov
mov
and
pop
adc
aam
mov
add
add
xlat
ror
mov
sbb
(bad)
out
cmp
add
inc
or
jae
pop
or
adc
iret
fld
add
das
fld
lock
add
and
outs
pop
adc
adc
add
movs
ins
or
or
aad
xor
shr
mov
sub
fst
out
rcl
sub
jmp
lock
adc
jg
jns
sub
test
jp
pop
add
mov
pop
push
(bad)
test
enter
push
popa
bound
or
enter
mov
dec
and
sbb
cmps
dec
repz
push
push
sub
stos
lods
add
add
add
jns
pop
sar
sbb
adc
icebp
adc
out
lea
sub
test
lock
xor
cmp
mov
or
and
mov
in
mov
and
popa
jecxz
or
mov
mov
setle
das
dec
pop
mov
xor
sub
(bad)
cld
xchg
jno
scas
fdivr
adc
push
in
push
push
inc
jo
xchg
and
and
push
xchg
or
cmp
jg
int3
mov
xlat
adc
or
sbb
je
fwait
xchg
mov
push
or
ror
mov
push
push
lods
sub
jmp
dec
dec
sub
ret
inc
xor
pop
ret
jmp
and
cmp
jne
mov
inc
cmp
pop
(bad)
arpl
js
xchg
fsub
cmp
enter
sub
dec
and
(bad)
imul
xchg
shl
pop
loopne
xchg
sar
js
xor
std
std
cmp
add
jne
pop
add
and
shr
test
add
pop
shl
and
test
in
add
hlt
js
sbb
jg
push
add
xor
and
and
loop
xor
push
add
inc
jne
mov
les
shl
js
pushf
ins
sub
leave
lock
or
mov
call
adc
inc
jb
fild
mov
push
call
jbe
mov
mov
adc
xor
adc
jo
xor
div
and
sbb
pop
mov
dec
call
int
fimul
jmp
ins
mov
mov
bound
pop
icebp
jp
bound
into
mov
(bad)
mov
pop
sahf
in
shl
mov
addr16
repz
ins
or
cdq
pop
mov
push
pop
xor
imul
mov
inc
sbb
or
pop
fld
push
add
push
mov
or
sub
fnstsw
out
mov
xlat
jp
dec
into
pop
mov
jns
push
mov
sub
ins
push
xchg
leave
and
push
add
fisttp
push
cmps
mov
daa
je
aam
or
jne
jmp
xor
jg
outs
mov
xchg
push
push
mov
pusha
xor
lahf
add
das
add
mov
mov
(bad)
xchg
add
scas
and
or
cs
add
and
inc
scas
lds
dec
adc
jg
das
inc
xchg
repnz
or
pop
jbe
add
mov
adc
xlat
mov
ret
cmps
jno
sub
jge
aam
xchg
adc
jne
push
cmp
jne
adc
mov
dec
test
push
mov
out
jmp
inc
ret
sti
adc
inc
and
xchg
lock
jg
or
ret
(bad)
push
jmp
sub
(bad)
addr16
jne
(bad)
mov
or
sbb
push
stos
lods
imul
es
ds
cmp
inc
add
test
stos
or
adc
xchg
and
adc
inc
sub
add
or
popf
shl
loopne
stc
pushf
sub
or
xor
rcr
inc
push
in
mov
push
pop
retf
inc
fisttp
das
lock
cmp
je
mov
cwde
xor
adc
fdiv
shl
push
not
mov
push
inc
adc
inc
push
adc
or
sub
mov
daa
mov
jne
pop
mov
in
in
adc
in
inc
add
and
or
shr
cmp
jae
and
add
add
sti
in
mov
push
xor
and
push
rol
jmp
pushf
adc
call
outs
lock
mov
rol
aam
add
ins
inc
cmps
rcl
fwait
add
dec
lahf
inc
adc
adc
stos
mov
shl
inc
xor
sub
xchg
mov
mov
mov
nop
or
enter
sbb
add
mov
daa
xor
lahf
shl
enter
sbb
add
mov
pop
outs
or
ds
imul
loope
(bad)
or
aas
sub
popf
lock
and
movs
ret
loopne
or
mov
jb
les
pop
add
and
and
sti
fld
clc
cmp
daa
mov
imul
jbe
lods
ror
dec
or
add
and
xchg
and
push
lea
mov
(bad)
dec
mov
mov
invd
ja
adc
mov
add
(bad)
pushf
int3
mov
mov
(bad)
sbb
enter
or
repnz
call
mov
sub
push
jmp
stc
inc
inc
lods
and
mov
mov
sbb
jae
cdq
mov
and
sar
jl
les
mov
popa
leave
ret
dec
add
iret
pop
scas
retf
or
and
inc
(bad)
and
je
inc
mov
sub
pcmpgtw
mov
scas
push
inc
or
ficomp
xchg
nop
adc
outs
add
enter
in
adc
dec
or
mov
xbegin
add
adc
lea
cmp
loope
ja
bound
lods
les
lods
sbb
sbb
dec
inc
(bad)
retf
inc
pop
outs
mov
outs
mov
popa
push
lds
retf
mov
push
push
mov
jo
push
ja
or
pushf
lock
mov
adc
xor
mov
ss
dec
rcl
inc
sub
arpl
std
mov
fcom
mov
and
jae
out
js
inc
adc
jg
mov
jg
sub
pop
jnp
add
cmp
add
je
mov
fdivr
jne
push
mov
push
inc
or
mov
aas
xchg
push
jmp
in
inc
adc
pop
les
fcom
test
mov
push
push
add
js
mov
xlat
sbb
sbb
jle
push
scas
cwde
leave
adc
fdivr
cmps
fs
xchg
cmps
bound
popa
add
cli
pop
and
out
sti
mov
pop
cmp
mov
test
sbb
cld
mov
lods
push
mov
pop
mov
ret
nop
jg
push
add
clc
and
add
add
push
pop
gs
fisubr
dec
push
add
add
call
inc
adc
jns
mov
jne
jl
xchg
mov
xchg
adc
and
loopne
and
xchg
aad
add
int3
popa
mov
add
push
dec
lods
lock
jle
inc
int3
or
xor
xchg
add
mov
sar
jg
or
add
mov
leave
and
sub
add
movs
pop
mov
push
(bad)
or
xchg
pop
jl
cs
lea
fucomi
loope
inc
xor
idiv
js
outs
fidiv
add
mov
int3
sbb
dec
sbb
int
and
xor
ss
mov
pop
sub
stos
inc
push
ds
rol
wrmsr
test
repz
mov
add
nop
sbb
scas
adc
add
push
lea
mov
add
mov
xchg
movs
xchg
dec
out
and
xchg
push
xor
mov
add
(bad)
or
fcomp
add
fmul
add
sub
repnz
mov
mov
lds
inc
xchg
push
(bad)
jecxz
dec
cs
pop
mov
cwde
jne
ret
and
out
sbb
in
sbb
pop
ret
fstp
and
inc
pop
mov
push
ror
dec
adc
lods
(bad)
pop
xor
outs
dec
mov
lods
sbb
popa
loop
xor
mov
cmp
mov
jle
xchg
add
adc
inc
sub
(bad)
push
ret
frstor
ja
or
dec
sti
inc
stc
dec
or
test
fild
test
mov
push
in
fstp
adc
or
and
stc
pusha
or
das
sbb
sub
pop
das
cdq
inc
cmps
nop
bound
xchg
sub
je
rcr
jb
or
xchg
loope
jne
das
or
loop
and
or
adc
cmp
movs
jb
add
mov
and
pushf
push
or
cmp
cmp
adc
(bad)
call
in
enter
sub
pop
pop
pop
pop
rol
adc
jne
mov
cmp
xor
aam
inc
pop
dec
(bad)
dec
mov
in
sub
test
(bad)
adc
aas
cmp
lds
das
xchg
or
add
mov
and
inc
push
rol
or
ins
imul
daa
xchg
(bad)
dec
loope
add
movs
sbb
and
sbb
xchg
clc
xor
jae
lods
aad
add
push
or
dec
shl
aad
jo
sti
mov
lahf
jecxz
add
mov
pop
xor
inc
dec
xchg
or
in
lock
mov
(bad)
mov
mov
inc
movs
outs
(bad)
xor
adc
fwait
push
lock
pop
aaa
mov
push
sbb
xchg
cmp
mov
jl
jle
repz
inc
addr16
cmp
cmp
jg
gs
add
sar
xor
aaa
(bad)
mov
call
imul
je
jl
or
je
std
rol
fadd
add
sub
lods
mov
xchg
and
or
(bad)
xchg
dec
(bad)
jl
cmp
call
or
movs
nop
add
push
xlat
xor
xchg
mov
out
jecxz
push
and
adc
mov
rep
pop
mov
push
leave
jb
or
(bad)
ss
xchg
or
jg
inc
shl
mov
pop
clc
fwait
stos
inc
jo
xchg
ins
hlt
fld
call
scas
pusha
xchg
dec
mov
mov
dec
bswap
xchg
pushf
inc
or
adc
push
xor
xor
adc
out
inc
cmp
jbe
or
or
sub
add
(bad)
and
or
adc
push
ret
daa
sub
fimul
nop
mov
xor
sbb
das
int3
into
sbb
jb
xor
cmp
mov
jl
and
cmp
and
jmp
lds
ror
mov
adc
jne
or
pop
dec
jne
add
test
xchg
mov
retf
pop
cmp
les
add
fisubr
push
mov
sbb
test
mov
sti
add
adc
adc
and
pop
lds
inc
jmp
pop
add
aam
sbb
lds
dec
jl
js
or
sbb
mov
or
movs
retf
addr16
aas
jl
jns
sar
mov
sbb
hlt
sbb
pushf
gs
sub
jns
pop
bound
ins
loopne
xor
mov
jmp
inc
xchg
int
xchg
mov
rcl
lods
movs
cmp
inc
hlt
mul
push
inc
dec
jne
add
int3
aas
das
pop
xor
push
lahf
test
jo
add
sbb
es
sub
inc
inc
or
(bad)
pop
and
aad
lock
sub
dec
add
pop
cli
jne
lea
cmp
xor
and
int3
xor
ja
nop
add
sbb
loope
dec
lahf
xor
inc
test
ret
jg
and
jo
pop
add
aas
es
ret
sbb
dec
mov
rcr
add
lahf
mov
xor
mov
sti
shr
xchg
pop
push
xchg
push
adc
pop
pop
add
clc
sbb
sahf
test
inc
lods
sbb
movs
lds
jno
imul
or
jmp
mov
rcr
adc
out
inc
add
and
inc
xchg
popa
or
jnp
sbb
popa
xor
shr
xor
adc
inc
imul
ins
pusha
(bad)
jle
mov
jg
aas
xlat
ja
cmp
sub
push
xor
pop
jge
pop
ror
pop
pop
aas
repz
shr
ins
push
loop
push
xor
jg
or
fstp
xor
inc
mov
test
dec
jne
adc
sub
xchg
outs
repnz
or
test
jnp
loopne
mov
cmps
neg
jmp
inc
bound
jnp
sbb
jae
jne
or
jg
out
lock
cs
ja
jmp
xor
pusha
daa
test
jne
in
add
sub
push
idiv
jnp
stos
mov
or
ret
test
ins
mov
cmp
(bad)
rol
sbb
jnp
ret
not
pop
sbb
pop
retf
es
adc
aaa
out
sub
push
cmp
cmp
mov
(bad)
fdivr
mov
or
mov
dec
adc
dec
ret
fisttp
xor
jmp
mov
sbb
xor
add
sbb
dec
inc
adc
ret
mov
add
jge
icebp
or
fisttp
jbe
mov
or
and
leave
jne
ret
inc
ret
icebp
mov
xor
pop
je
xchg
loope
add
jae
ror
icebp
mov
pusha
les
test
jg
je
dec
daa
and
or
sar
mov
xor
and
pop
adc
mov
in
retf
push
je
or
je
das
mov
sar
and
lods
sbb
push
retf
add
sub
mov
push
cwde
int
add
mov
or
pop
jne
adc
mov
fld
pop
mov
ja
icebp
sbb
sub
pop
ins
in
jb
adc
outs
jbe
ror
je
push
imul
enter
add
repnz
ins
je
and
les
cmp
add
aaa
ja
or
stos
xlat
in
cli
jle
mov
test
call
call
(bad)
movs
imul
xor
pop
xchg
and
add
shr
jae
ins
pusha
dec
xchg
stos
cmp
aas
sub
adc
icebp
mov
push
xor
add
add
(bad)
or
movzx
jne
mov
sub
pop
adc
xor
add
loopne
add
btc
pop
stos
ret
inc
jne
sub
lock
popf
scas
or
cmp
sbb
fbld
rcl
mov
arpl
sub
addr16
add
movs
dec
cmp
adc
addr16
cmp
pop
or
cmp
cld
icebp
add
add
adc
sub
sub
pop
bound
push
dec
push
cmp
test
shl
ret
sub
or
ret
push
or
mov
mov
mov
aad
clc
and
ret
ror
lods
sub
sbb
inc
xor
and
lds
cmp
pop
mov
add
add
mov
je
scas
sub
cmp
xor
inc
add
test
aas
js
inc
shr
inc
dec
je
sub
pop
or
pop
das
or
xor
and
or
mov
loope
pop
xor
mov
shl
sbb
or
add
stos
pop
push
or
xor
jmp
mov
(bad)
xor
sub
cmp
jae
popa
and
(bad)
test
arpl
call
(bad)
push
lock
rcr
add
cmp
enter
mov
test
dec
test
jle
mov
ja
mov
jmp
(bad)
out
into
lds
mov
sbb
(bad)
rcr
rcr
sbb
push
dec
pop
adc
jmp
pop
js
ja
sbb
stos
add
clc
and
mov
add
push
fist
or
jnp
call
jb
sub
xchg
xor
adc
pop
fild
push
test
push
and
mov
adc
ins
jb
cmps
and
add
fdivr
into
repz
sbb
adc
mov
dec
mov
lods
or
cmp
fsub
mov
popa
sub
push
sub
jae
enter
pop
or
or
push
dec
pop
lods
outs
daa
pop
je
div
fstp
daa
and
add
xlat
xor
iret
ret
pop
push
js
movs
fiadd
int3
xor
push
jg
cs
jl
mov
pop
cmp
jl
fsubr
or
fadd
cld
adc
out
(bad)
ror
jnp
mov
sbb
fstp
mov
mov
dec
repz
repnz
cmps
call
mov
jns
or
retf
scas
add
push
pushf
xchg
jmp
adc
ret
pop
pop
inc
xor
mov
inc
mov
outs
cmp
adc
popa
push
pop
pop
rcr
add
daa
fprem
pop
arpl
mov
das
xchg
inc
xchg
cmp
fprem
mov
jg
in
jb
loope
loope
int3
sub
fsub
pop
or
jg
lock
and
adc
push
loope
nop
pushf
inc
jne
(bad)
loop
outs
pop
clc
add
fsub
pop
call
cmps
shl
outs
shr
xor
out
aas
push
arpl
je
add
rcr
lock
mov
xor
adc
inc
adc
and
push
push
clc
pop
ret
mov
dec
shr
cli
push
pop
aad
inc
cmps
nop
xor
outs
int3
loop
mov
inc
pop
add
dec
and
pushf
pop
sti
or
cmp
inc
push
fmul
ror
inc
jb
jnp
add
sbb
and
(bad)
or
stos
push
mov
pop
repnz
and
icebp
push
test
paddq
pop
xchg
cmovs
and
ss
xor
and
rcr
popa
mov
enter
rol
(bad)
out
sub
adc
cmc
popa
jecxz
rcl
sbb
inc
je
mov
fcom
jecxz
jg
fcom
mov
idiv
ja
pop
pusha
add
inc
je
sub
enter
jmp
inc
pop
dec
and
(bad)
fstp
in
push
jb
jmp
lea
rol
pop
mov
xchg
mov
dec
dec
jb
pusha
fnstcw
inc
adc
or
idiv
in
mov
fsubr
push
sbb
inc
inc
jns
inc
or
xchg
or
pop
dec
sub
lea
push
push
mov
retf
jle
mov
call
ror
mov
adc
push
jbe
nop
add
and
push
add
cs
and
sbb
pop
and
or
fistp
jl
xchg
jmp
neg
mov
xor
jno
(bad)
and
in
xor
in
test
pop
xchg
push
leave
cmp
fnstcw
js
in
and
and
mov
(bad)
jg
xchg
stos
jl
fnstsw
mov
es
outs
(bad)
out
stos
sub
adc
sti
test
in
into
out
sub
push
or
dec
enter
xchg
xor
pop
in
adc
jecxz
outs
ret
mov
ret
jmp
dec
jecxz
enter
adc
xchg
adc
or
pop
mov
clc
dec
adc
les
add
or
and
rol
adc
add
sbb
pop
pop
cmps
sbb
bound
icebp
inc
add
dec
les
scas
mov
dec
and
repz
movs
test
xchg
add
icebp
retf
push
push
js
ss
push
icebp
pop
cmp
repz
inc
divsd
xor
dec
jg
mov
add
mov
stc
daa
sbb
dec
pop
xor
and
out
dec
loopne
push
repnz
jnp
jnp
js
cmp
icebp
loopne
inc
repz
and
adc
dec
rol
dec
dec
inc
repz
adc
jnp
or
repz
jl
pop
ds
ss
das
push
hlt
jg
jl
inc
adc
lahf
adc
fisubr
ficom
push
push
adc
bswap
and
dec
pop
adc
inc
adc
adc
dec
and
js
and
adc
inc
cmp
inc
or
or
push
es
retf
mov
adc
cmc
or
inc
popf
(bad)
push
and
jle
or
dec
xchg
and
push
dec
jne
pop
xor
jo
or
js
or
jo
xchg
das
(bad)
ror
cdq
add
cmp
mov
lahf
loope
jmp
pop
or
lahf
add
push
sub
and
sub
adc
inc
xchg
clc
pop
nop
daa
scas
test
shl
(bad)
lock
in
add
cmovp
test
fnstenv
xchg
lock
nop
sbb
mov
sub
and
xchg
nop
clc
addr16
jmp
shl
xchg
pop
int
adc
cmp
ss
lahf
int3
cli
pop
dec
das
data16
xchg
xchg
lods
ror
punpckhbw
nop
stc
push
aad
retf
idiv
jb
sub
sbb
and
or
cli
daa
add
fsub
add
add
movs
or
or
retf
xchg
sub
mov
mov
or
fnstsw
add
adc
or
xor
test
loop
cmp
dec
mov
and
iret
dec
pushf
fld
pop
xor
inc
mul
sub
pop
mov
mov
loopne
dec
push
xchg
test
mov
push
js
xchg
inc
mov
add
or
ss
or
icebp
data16
jg
push
push
add
push
in
xor
cld
bound
pushf
dec
cld
xchg
push
test
cld
or
cmp
jg
into
in
ss
pop
jo
jbe
int3
inc
scas
adc
adc
push
dec
loop
imul
aad
fild
xor
add
jbe
outs
out
frstor
dec
pop
sub
cs
xor
std
outs
pop
cmp
mov
je
outs
loopne
gs
stos
mov
dec
cli
gs
out
push
and
pop
cmp
mov
rcl
jg
call
shl
and
dec
fwait
push
out
(bad)
out
add
push
inc
adc
outs
arpl
je
iret
fdiv
mov
enter
sbb
mov
xor
jmp
jbe
dec
fistp
mov
add
sbb
(bad)
outs
push
sbb
sub
jp
dec
outs
inc
imul
or
mov
pusha
outs
js
pop
sete
xor
loopne
push
pusha
cdq
inc
inc
push
mov
movs
sub
or
jmp
pop
xor
jl
adc
outs
xor
add
into
in
adc
push
outs
add
inc
mov
xchg
xor
pop
xor
add
push
mov
lock
int3
psrld
and
ja
inc
test
push
out
outs
inc
in
mov
dec
out
cmp
add
lods
add
mov
xchg
jg
sub
dec
adc
jbe
cmp
cmp
pop
xor
add
cmp
outs
adc
cmovp
xor
add
mov
shr
xchg
cwde
push
push
push
cmp
adc
mov
shl
mov
pop
push
cmp
lods
and
or
adc
lock
add
xchg
push
dec
fimul
add
outs
jns
outs
ss
add
in
in
xchg
cwde
cdq
call
popf
sahf
in
in
lahf
add
add
xchg
in
mov
in
jo
jb
in
in
je
jbe
in
in
js
jp
in
in
jl
jle
in
in
pusha
popa
(bad)
in
in
arpl
in
in
addr16
in
imul
in
in
push
push
push
in
in
push
push
push
push
shl
in
pop
pop
nop
push
lock
and
push
pusha
cmp
rcr
sub
setae
cli
dec
push
popa
adc
mov
dec
gs
jo
adc
outs
ins
push
inc
dec
imul
or
lock
add
inc
icebp
jo
dec
clc
inc
or
and
push
ss
lea
imul
mov
ret
ffreep
add
pusha
mov
add
div
je
int
inc
lock
pusha
or
int3
mov
jmp
add
adc
mov
pop
imul
inc
pop
test
mov
xlat
sub
pop
add
or
and
cmp
mov
sub
or
add
xor
loopne
iret
or
fsubr
mov
cmp
xchg
aam
adc
and
cmp
xchg
adc
inc
push
mov
mov
retf
repz
loopne
or
clc
ror
jmp
jnp
add
mov
dec
and
outs
add
push
or
mov
rcr
lock
or
(bad)
in
pop
adc
push
mov
push
add
add
dec
add
and
ret
or
pop
adc
aas
sub
or
mov
adc
mov
mov
inc
ins
outs
bound
sbb
pop
pop
or
adc
imul
pop
xchg
jl
addr16
sbb
sbb
mov
add
outs
fs
loopne
(bad)
inc
in
xchg
jecxz
xor
retf
xchg
push
inc
ins
dec
pop
movs
pop
jae
pop
inc
cmovle
adc
ins
dec
stos
dec
pop
adc
push
sbb
jns
out
sub
sbb
inc
sar
adc
push
sub
lods
push
pop
or
add
call
add
ins
jne
imul
ss
or
inc
outs
adc
ins
jg
sbb
imul
dec
add
cmps
div
out
cmp
das
pusha
or
inc
dec
inc
sbb
ds
aas
scas
push
les
fdiv
iret
and
pusha
inc
mov
mov
pop
imul
add
or
test
rcr
adc
hlt
addr16
or
cli
or
push
outs
sbb
outs
bound
hlt
lds
push
jbe
sbb
or
rcr
rdtsc
add
cmps
push
adc
icebp
dec
push
jbe
fmul
add
push
ss
fild
xor
or
or
test
pop
divps
hlt
pusha
add
cmp
push
mov
and
pop
fwait
sub
outs
test
push
dec
or
and
stc
adc
add
in
dec
add
jnp
pusha
dec
js
imul
ins
popa
sar
(bad)
mov
pop
push
push
jo
je
add
les
xor
xchg
gs
jbe
fisubr
pop
xor
xor
ss
pusha
mov
out
adc
jp
imul
jge
shr
push
inc
cli
shr
and
rol
ret
pusha
push
arpl
fld
das
pop
sgdtd
and
neg
inc
(bad)
out
scas
ins
push
adc
jle
push
lods
dec
adc
adc
pusha
pop
fidivr
fimul
scas
add
cs
add
repz
lock
stos
add
or
cmp
add
mov
add
test
cmp
inc
sub
sbb
cmp
les
inc
dec
test
xor
inc
xchg
pop
mov
sub
ret
mov
adc
loop
into
das
sub
out
push
pusha
addr16
mov
aam
jns
test
sbb
imul
pusha
or
push
mov
mov
mov
test
or
and
mov
mov
rcl
jo
inc
in
push
lods
or
and
movs
ret
sbb
adc
rol
outs
fucomi
jmp
pop
psrad
sbb
xchg
pinsrw
cmp
jb
lods
in
dec
xchg
mov
sbb
mov
imul
xchg
xchg
mov
sub
sub
cvttps2pi
or
leave
mov
imul
adc
pop
sbb
xor
out
sbb
shr
sti
in
in
ds
popa
pop
add
adc
adc
out
aad
jmp
jns
add
or
adc
and
jns
out
ss
dec
push
out
sahf
out
imul
sahf
out
sahf
mov
adc
jns
xlat
jmp
sub
mov
add
pusha
cmp
sbb
test
xchg
cdq
mov
pop
es
adc
adc
add
pop
dec
add
lock
adc
outs
ins
js
pop
leave
sub
cmp
test
gs
add
add
fmul
mov
push
pop
mov
jmp
pop
iret
leave
enter
sbb
dec
outs
mov
adc
sbb
xchg
paddd
and
sbb
nop
stc
jmp
loopne
imul
or
add
syscall
add
mov
push
aas
pop
aas
xor
add
push
jnp
push
ficomp
xor
inc
aaa
ds
fild
sub
add
push
retf
arpl
popa
add
or
ja
or
push
in
pop
sub
add
pop
push
xor
test
add
adc
inc
add
lahf
cmp
fbld
and
es
and
fist
add
fiadd
cmp
ret
push
or
loopne
in
xchg
pop
imul
or
or
aad
or
cmp
bswap
push
aad
or
push
add
arpl
push
or
cmp
mov
fstp
cld
and
xor
stos
movs
xchg
add
lea
jge
cmp
add
jnp
sbb
mov
inc
push
shr
lea
aas
cmp
imul
and
bswap
add
xchg
sub
sbb
lds
in
mov
popa
and
pusha
pop
ins
(bad)
xchg
inc
ja
mov
xchg
inc
ja
mov
bound
add
add
mov
(bad)
or
pop
sbb
cmp
int
add
rol
xchg
fiadd
aam
cmp
or
or
and
inc
push
or
xor
jo
aad
xor
adc
inc
jecxz
add
or
test
sti
shl
loopne
movs
xchg
lods
adc
add
lea
pop
rol
fild
test
jecxz
sub
call
test
sbb
bound
nop
aaa
in
inc
or
add
pop
xchg
xor
push
ja
stos
(bad)
inc
adc
lea
dec
adc
mov
clc
and
jns
mov
add
adc
jae
outs
test
add
stos
ja
dec
nop
and
cwde
sub
shr
movs
scas
stos
sbb
or
pop
or
les
js
ret
mov
and
mov
jmp
shr
sub
scas
push
rol
pusha
scas
dec
inc
out
sahf
daa
mov
(bad)
fldcw
lahf
enter
aas
je
ret
inc
sub
adc
inc
ret
mov
mov
clc
lahf
iret
xchg
sub
inc
dec
inc
push
outs
push
test
jb
xor
and
es
cmp
mov
cmovo
wbinvd
add
push
aam
sbb
and
neg
syscall
and
mov
pcmpeqd
push
scas
es
shl
and
adc
pop
pop
cmp
jmp
dec
sbb
or
mov
or
add
je
fdiv
repz
push
add
ds
mov
loop
sub
cmp
jo
mov
xor
pop
rcl
add
jne
add
sub
dec
inc
xor
xchg
dec
adc
mov
jmp
rol
add
and
inc
rcr
pop
das
mov
lods
pop
jmp
jmp
jbe
daa
pop
in
das
sub
xlat
dec
test
(bad)
xlat
push
out
fsub
lods
pusha
inc
xlat
jmp
mov
xor
and
pushf
adc
es
scas
enter
daa
add
aaa
add
cmps
add
fs
push
cmp
in
enter
movs
inc
xor
and
fs
mov
xchg
dec
push
shl
inc
and
xchg
sbb
daa
in
mov
push
jb
daa
push
cmps
sar
and
(bad)
add
in
daa
pusha
xor
pop
adc
movlps
ins
and
sub
cmps
inc
ss
xor
dec
into
je
inc
out
dec
sub
sub
mov
popa
lods
or
sub
add
xor
pushf
pop
call
nop
sub
pop
add
test
inc
sub
cmp
sub
xor
movs
loop
jb
sub
sub
in
pop
fs
(bad)
outs
mov
repnz
pushf
sub
aam
sbb
and
add
repz
loopne
jp
push
mov
in
loope
iret
in
cld
fs
aaa
sub
pop
sub
lods
sub
inc
ins
sub
movsx
sub
mov
sbb
ss
imul
popa
outs
fst
loopne
pushf
fs
cwde
sub
adc
inc
cwde
sub
fadd
jns
inc
xchg
test
add
mov
cmp
inc
adc
stc
dec
push
xor
in
cwde
sub
repnz
nop
inc
enter
or
mov
push
pop
add
push
mov
push
sub
es
push
das
outs
sub
test
pop
inc
dec
or
mov
fdivrp
nop
cmps
sbb
inc
fwait
jo
in
hlt
stos
mov
cs
pop
inc
aas
jo
pop
inc
adc
loope
ss
or
mov
sbb
movs
sbb
cwde
sub
data16
mov
xor
pop
aam
pop
push
jo
add
das
xchg
das
(bad)
cld
jns
cmp
inc
out
dec
xchg
add
push
out
jbe
aaa
mov
das
dec
das
sbb
daa
ins
js
outs
mov
(bad)
push
dec
xor
xchg
pop
dec
pop
dec
inc
push
inc
dec
dec
xlat
rol
jb
dec
shl
cld
inc
inc
je
in
xor
inc
and
adc
xlat
test
pop
inc
inc
shl
mov
rcl
inc
or
xlat
shl
pusha
add
cwde
inc
fld
jmp
pop
pop
xor
rol
xor
popf
cwde
dec
cld
xor
jl
mov
push
push
adc
jns
dec
xchg
push
dec
push
dec
mov
mov
inc
retf
xor
enter
mov
add
xor
cs
mov
adc
and
jb
dec
pushf
inc
clc
xor
jns
mov
mov
xchg
and
adc
inc
add
push
enter
inc
inc
xor
pop
and
xor
inc
sub
mov
shl
mov
or
pop
aam
and
push
cwde
test
mov
cmp
jg
mov
mov
push
and
je
jbe
push
inc
rcr
cmps
dec
xor
mov
sub
cmp
jle
jne
lock
add
adc
push
add
xor
test
mov
aaa
repz
add
cmp
jle
cmp
mov
aad
jle
add
rcl
int3
add
fcomp
and
fsub
cdq
dec
mov
jne
jge
ret
ins
xor
fxch
cmp
pop
sbb
fcmovnu
jge
push
xor
mov
pop
adc
inc
cmp
jle
mov
xor
inc
jo
and
mov
mov
test
js
mov
jmp
dec
and
jg
into
or
inc
add
daa
cmc
mov
shr
daa
add
adc
push
adc
es
fs
mov
imul
dec
mov
xlat
mov
mov
fstp
sub
nop
loopne
ds
push
adc
(bad)
push
add
xchg
nop
xor
(bad)
push
add
mov
ret
adc
cmp
stos
or
data16
push
dec
icebp
pop
jle
cmp
cmp
lea
add
rol
daa
out
ins
test
adc
cld
pop
sbb
push
push
mov
sbb
adc
dec
sbb
add
adc
add
sub
lods
std
add
ins
add
pop
adc
mov
fadd
mov
js
cmp
jne
sbb
and
pop
add
popf
inc
or
inc
ror
ror
(bad)
push
outs
imul
cmp
xlat
and
xchg
adc
push
fld
sbb
imul
movs
add
addr16
xchg
or
cmps
jle
cmp
push
arpl
ret
std
lods
xor
pop
js
mov
xor
daa
xor
test
fidivr
or
xor
cs
out
adc
in
sub
test
pop
fwait
in
dec
mov
adc
xchg
dec
cmp
adc
jmp
push
or
daa
add
aad
and
push
mov
sub
pop
enter
push
sub
add
scas
sbb
jb
(bad)
and
and
aas
mov
or
push
or
cmps
adc
and
or
cwde
cwde
pop
dec
jnp
repz
mov
cs
pushf
shr
test
sub
sbb
sti
adc
movs
add
loope
retf
add
cmp
pop
mov
sbb
(bad)
sbb
push
xchg
or
dec
and
adc
ds
mov
add
pop
ret
jmp
xchg
jmp
sbb
add
ffreep
rol
dec
inc
mov
sbb
sar
xchg
hlt
mov
or
mov
das
and
mov
mov
sbb
mov
(bad)
(bad)
popa
pop
mov
dec
dec
adc
mov
sbb
rcl
mov
in
cmp
ret
mov
adc
xor
ret
pop
test
mov
jecxz
push
inc
sbb
inc
fisttp
and
fs
sbb
sti
pushf
jg
and
mov
cmp
lahf
div
mov
fnsave
mov
push
push
dec
sbb
cmps
call
loopne
loopne
ss
mov
mov
cmp
jae
or
lods
leave
push
pop
lock
pop
mov
inc
and
pop
or
call
mov
dec
or
pusha
inc
cmps
in
xor
adc
jl
fdiv
push
inc
ret
sub
mov
sub
jmp
je
dec
je
sub
push
cmp
std
jle
sub
mov
or
mov
in
lods
mov
add
inc
dec
pop
push
(bad)
call
mov
dec
mov
sub
pop
or
imul
mov
sar
or
pusha
jg
test
xchg
stos
aas
cwde
inc
test
or
ret
nop
mov
lea
xor
inc
jb
pop
jo
cwde
xchg
sbb
into
scas
outs
sbb
add
inc
sti
pop
push
data16
rcr
jg
test
push
rol
scas
mov
add
mov
shr
ret
pop
mov
cmp
inc
sar
jns
adc
neg
sar
adc
mov
retf
add
popa
pop
(bad)
sub
ins
jbe
test
ret
adc
add
ret
jmp
mov
icebp
dec
idiv
call
jl
movzx
shr
mov
inc
movzx
and
adc
push
bound
test
pop
pop
pop
retf
inc
and
add
sub
push
dec
xor
ins
and
sub
sbb
(bad)
pop
cld
dec
adc
shl
or
mov
add
push
inc
(bad)
jmp
jne
or
sbb
nop
xlat
add
in
add
or
fmul
pushf
dec
es
imul
jb
pop
cmp
jbe
mov
jmp
int3
nop
std
das
dec
or
inc
dec
jne
cmp
mov
xlat
xchg
scas
mov
xchg
jge
(bad)
in
not
cli
call
jmp
xlat
push
or
loopne
aam
mov
xchg
mov
add
adc
cmp
add
inc
cmps
call
jo
adc
push
pop
and
ss
outs
push
add
shl
jbe
data16
push
lea
pop
xchg
lds
cwde
mov
jle
mov
ss
pop
ret
adc
add
xor
xchg
pushf
cmp
cmp
dec
push
cld
ss
inc
rcr
xor
ret
cmp
(bad)
cli
addr16
sbb
and
ds
sub
xor
sbb
xor
jb
mov
xor
adc
or
into
cld
stos
push
popf
xchg
add
jne
fsub
xor
jmp
test
cmp
xor
dec
add
dec
(bad)
xor
adc
mov
push
xor
fbld
in
cmp
ds
cs
mov
push
scas
mov
push
xor
sub
rol
add
aas
arpl
add
inc
jae
add
pop
daa
das
xchg
inc
enter
inc
add
xor
xchg
pop
and
inc
inc
cdq
in
enter
inc
dec
and
paddusb
xor
inc
nop
inc
jb
inc
xor
in
mov
dec
fsubr
add
push
dec
or
xchg
mov
in
xchg
sbb
dec
dec
pop
sub
xchg
or
adc
popa
dec
repnz
es
xchg
xchg
pop
push
nop
and
xor
mov
daa
and
sbb
dec
test
je
or
aas
and
enter
xchg
pop
or
add
jne
jge
je
jle
mov
and
push
add
fst
or
sbb
mov
inc
or
pop
cmp
leave
shr
or
push
lock
inc
mov
sbb
jne
pop
pop
mul
adc
push
popa
or
push
add
mov
adc
add
mov
je
in
adc
inc
jmp
ficomp
jmp
adc
jmp
nop
jle
or
ret
js
or
pop
add
sub
sar
test
xchg
hlt
jmp
ja
mov
mov
and
adc
mov
outs
adc
and
lar
das
push
add
test
test
and
fidiv
test
ja
rol
ror
into
sti
enter
lmsw
lea
inc
add
or
and
(bad)
mov
add
xlat
pop
fadd
pop
cmp
push
inc
hlt
pop
xor
pop
or
dec
push
sbb
add
or
pusha
inc
xor
inc
(bad)
movs
jecxz
mov
sub
lods
or
inc
xlat
inc
mov
(bad)
dec
mov
jo
sahf
into
pop
add
dec
mov
cdq
lods
fld
cmp
call
dec
js
dec
inc
mov
adc
push
mov
add
add
or
dec
adc
add
int3
ret
mov
mov
aaa
jmp
or
or
in
jge
sub
pusha
sub
jo
push
dec
adc
and
inc
fsubr
or
(bad)
call
jp
fdiv
aam
mov
push
sbb
push
mov
mov
inc
sub
mov
rcl
ds
inc
ret
push
cmp
bound
jl
call
sub
sbb
adc
add
xor
cli
jno
adc
sub
xchg
nop
ret
(bad)
lock
add
shl
stc
pusha
outs
pop
push
pop
enter
hlt
pop
xor
add
xor
and
call
add
shl
inc
popa
loopne
dec
(bad)
and
add
dec
std
add
icebp
(bad)
mov
ret
sub
ret
sbb
sbb
enter
mov
jne
add
sar
js
add
mov
pop
adc
adc
xchg
mov
mov
cmp
popa
inc
mov
add
or
ins
xor
mov
aaa
add
sbb
lock
add
xchg
addr16
clc
ret
xlat
add
push
movs
mov
inc
push
cmp
pop
cmps
jmp
fst
int
int
push
mov
xlat
cmp
stos
ret
inc
inc
and
sbb
or
jmp
ret
jo
xchg
nop
add
neg
loopne
push
or
jbe
push
pop
test
addr16
ret
lods
and
push
push
stos
sti
mov
add
xchg
in
mov
dec
xchg
rcl
sub
aas
or
mov
adc
or
fmul
(bad)
cmp
ss
retf
dec
inc
mov
std
adc
jl
fisttp
adc
sbb
sub
or
sbb
xor
or
add
pushf
mov
inc
pushf
in
sub
pop
mov
shl
jmp
dec
in
popa
or
lods
rcl
mov
loope
jne
jb
xlat
mov
lock
sub
ffreep
xor
and
call
inc
ror
dec
aas
inc
add
jmp
dec
inc
jle
sbb
adc
popa
pop
data16
adc
rol
fmul
int3
hlt
cs
mov
or
fld
lock
shl
and
je
mov
dec
mov
jmp
and
pop
add
adc
add
or
dec
add
jl
sbb
adc
aas
enter
icebp
push
or
dec
xor
lods
cld
xor
adc
pop
sub
inc
(bad)
bound
push
jmp
retf
je
inc
dec
jne
add
push
jne
lea
xchg
enter
dec
enter
xor
inc
add
push
cmp
rol
mov
jmp
xchg
add
cmp
push
fadd
fwait
add
test
mov
fadd
pop
lock
out
dec
mov
inc
xor
retf
sub
push
jg
jbe
pusha
gs
and
jp
loop
xchg
iret
add
add
adc
lahf
add
cld
mov
dec
mov
and
push
push
inc
add
xbegin
push
dec
jne
(bad)
sub
and
add
rol
aas
xor
add
ja
push
sbb
imul
aaa
popa
cld
(bad)
and
mov
std
(bad)
ja
pop
xchg
int3
mov
cmps
inc
js
xor
cmp
mov
idiv
jmp
push
dec
push
mov
mov
outs
(bad)
cmp
and
jb
loop
out
sbb
push
jb
push
out
sub
mov
out
adc
cmp
(bad)
rcr
test
inc
xchg
mov
dec
jnp
pop
pop
or
stos
hlt
enter
jg
cwde
and
jle
jne
mov
mov
add
mov
dec
(bad)
xchg
loopne
enter
div
enter
pop
push
jmp
inc
pushf
and
cld
sub
add
int3
rol
push
mov
mov
jle
lock
ja
hlt
dec
mov
jb
shl
mov
(bad)
ins
dec
mov
mov
jge
cmp
add
bswap
and
inc
push
add
mov
jae
mov
cmp
jne
mov
xchg
or
push
lock
mov
dec
sub
lock
dec
repz
jnp
xchg
xor
icebp
jmp
call
fisubr
xchg
inc
mov
mov
test
mov
pop
fwait
loopne
or
xchg
or
nop
test
test
mov
add
imul
cmp
push
add
shl
inc
and
inc
cmps
loopne
mov
or
pushf
push
push
sbb
sahf
pop
push
clc
pop
int
xor
jbe
retf
or
fist
nop
sbb
ficom
loope
xchg
cmp
jb
add
pop
stos
nop
pop
adc
mov
dec
repz
ret
les
add
or
outs
test
ret
test
pop
in
pusha
popa
and
add
jl
imul
out
add
jl
and
and
xchg
adc
(bad)
loopne
pop
or
sub
out
fsub
mov
add
add
add
add
pop
sub
adc
or
ins
pop
push
jnp
dec
je
and
fdivr
adc
rol
nop
lock
push
icebp
cmp
pusha
iret
jae
jno
inc
add
dec
sbb
test
hlt
pcmpgtd
jg
jne
pusha
shl
outs
or
inc
dec
xchg
add
outs
add
or
and
mov
adc
icebp
jb
mov
push
xor
daa
dec
fwait
jmp
or
into
jg
adc
xchg
or
adc
cld
add
add
dec
je
jg
sub
mov
adc
loope
lahf
mov
jle
xor
sar
dec
idiv
add
add
mov
lods
mov
dec
inc
rcl
jge
icebp
adc
cmp
jbe
xor
push
mov
sbb
sbb
sbb
rol
pusha
add
out
(bad)
dec
ds
jb
inc
xchg
cmp
je
inc
dec
jne
popa
mov
mov
ret
loope
inc
out
movs
sub
jb
inc
xchg
fild
ja
movzx
mov
sub
jb
ja
mov
mov
jo
jne
pop
sub
arpl
inc
icebp
mov
call
xor
mov
shr
lds
pop
mov
js
in
je
pop
int
mov
out
add
addr16
into
add
xchg
dec
dec
sub
inc
jo
xor
xor
push
xor
outs
hlt
mov
scas
addr16
ins
dec
cmp
adc
jmp
es
mov
cmp
dec
xchg
fsubrp
add
push
jp
or
adc
inc
adc
mov
add
test
inc
sbb
pop
add
mov
fdivr
ins
and
cmp
(bad)
sbb
mov
retf
in
dec
pop
stos
shl
inc
in
mov
std
xor
pop
inc
ror
push
push
push
xchg
fisub
loopne
stos
push
and
mov
nop
dec
frstor
mov
push
imul
ins
sbb
add
cmc
sbb
sar
mov
dec
cmps
xor
sbb
or
adc
cmp
fdiv
call
pusha
sar
clc
push
jg
ret
cmp
jl
and
inc
outs
jno
aaa
and
cmp
or
shl
dec
ins
and
and
gs
loopne
loopne
cmps
rcr
pop
sbb
push
hlt
sub
or
sub
pop
add
enter
sbb
shl
inc
sti
pop
ror
retf
shl
mov
mov
popa
inc
sbb
inc
(bad)
fisttp
pop
jns
cmp
repz
ret
inc
fidivr
(bad)
push
sub
lock
jne
cmp
dec
pop
pusha
xchg
add
or
dec
rcr
mov
not
je
call
fld
repnz
pop
repnz
outs
add
addr16
adc
dec
imul
add
shr
into
sbb
add
push
inc
xchg
mov
jge
inc
jge
add
test
mov
out
in
inc
lock
dec
cmp
cld
adc
dec
adc
mov
fcomi
outs
adc
outs
mov
add
xchg
rcl
jnp
fsubr
fdiv
push
ins
or
or
inc
jl
add
stc
and
outs
push
add
gs
or
ja
pop
in
pop
dec
push
bound
xor
add
js
sti
dec
add
inc
(bad)
bound
outs
xor
rcl
jbe
add
dec
jns
sbb
rol
jne
ins
lahf
add
sbb
addr16
daa
dec
add
add
fcomp
dec
add
jbe
sar
xlat
sub
add
add
adc
lea
or
adc
pushf
test
(bad)
and
add
shl
adc
pop
mov
jmp
inc
cmp
sahf
idiv
imul
sub
add
sub
inc
sub
push
outs
xor
bound
or
push
js
push
jo
cmp
daa
jbe
test
sbb
xchg
dec
sub
retf
and
cdq
adc
nop
cs
xchg
fist
sbb
pop
dec
pushf
adc
cmp
leave
in
and
xchg
mov
mov
nop
or
pop
xor
xor
popa
les
enter
push
cdq
int3
test
cwde
sub
fmul
retf
dec
fsub
loopne
movs
jb
add
in
call
inc
in
addr16
ja
and
gs
retf
lock
hlt
pusha
mov
int
cld
push
add
ins
add
loopne
test
mov
cmps
or
cwde
xchg
dec
sub
gs
retf
hlt
and
push
inc
sub
imul
xchg
push
or
nop
jmp
(bad)
and
pusha
sbb
mov
jae
inc
cwde
and
test
mov
push
xchg
adc
fs
(bad)
fadd
push
and
dec
add
and
mov
inc
add
sbb
inc
mov
push
bound
or
and
xchg
fcom
add
out
mov
add
div
add
psubb
push
ins
test
adc
inc
pop
das
daa
out
xor
push
das
jne
or
or
inc
push
push
outs
aaa
mov
inc
or
sbb
aas
push
test
xor
movlps
scas
jae
sbb
pop
or
or
ret
xlat
jb
jae
cwde
ficom
push
out
aaa
or
imul
mov
add
mov
push
arpl
imul
clc
lea
scas
lea
sahf
ss
ror
mov
gs
inc
jo
xor
movzx
mov
mov
enter
add
mov
shr
(bad)
mov
jo
and
cmp
or
jne
call
mov
or
mov
mov
(bad)
mov
test
inc
mov
jmp
ja
add
push
ret
mov
cs
outs
add
jae
jae
mov
inc
jb
daa
push
push
and
dec
jnp
add
add
pop
xor
shl
jae
mov
das
(bad)
dec
(bad)
cld
stos
imul
push
mov
jmp
or
leave
mov
imul
or
leave
mov
inc
xchg
xor
or
imul
xchg
sbb
imul
xor
out
jno
nop
out
pop
out
clc
pop
les
test
pop
pop
dec
fsubr
jg
pop
lock
jne
adc
pop
pop
aaa
push
add
jmp
pop
(bad)
popa
pop
je
(bad)
das
add
mov
xor
bound
xor
and
dec
adc
and
xor
xor
jo
jmp
hlt
ret
mov
sub
aam
pop
repz
mov
test
sbb
cmp
jo
push
ins
add
jmp
and
aaa
and
inc
adc
or
ret
cdq
xor
sub
mov
mov
(bad)
push
adc
add
mov
xor
add
ret
out
fsub
jmp
imul
dec
add
call
add
push
xor
jp
xchg
xlat
jg
scas
jo
xchg
scas
mov
push
iret
adc
or
jl
stc
add
imul
loop
add
fbld
repnz
mov
adc
or
mov
enter
test
les
dec
fmul
outs
rcl
add
pop
sbb
in
cmp
shl
or
nop
mov
adc
clc
and
fist
(bad)
cdq
add
mov
imul
add
jo
stos
adc
sbb
(bad)
fadd
mov
hlt
cmps
sub
sar
ret
daa
xor
loope
inc
icebp
dec
inc
inc
or
or
and
add
sbb
aas
ins
(bad)
xlat
or
and
jnp
sbb
lods
push
and
ds
vorps
add
or
iret
js
pusha
lods
fdiv
push
mov
add
or
shr
clc
mov
mov
mov
inc
mov
loop
xor
lahf
inc
out
push
popf
sbb
add
sbb
cmp
fisttp
add
pusha
fist
pop
mov
push
inc
push
mov
mov
xor
js
inc
push
aaa
dec
les
pop
aaa
or
adc
retf
mov
sar
clc
xchg
and
adc
popa
clc
or
xchg
lods
add
(bad)
xor
sub
sbb
and
xchg
sahf
ret
mov
or
xor
gs
movzx
push
mov
add
mov
in
adc
sbb
ret
pop
jb
xlat
or
pusha
inc
cmp
xor
xor
sub
push
xchg
retf
daa
hlt
push
or
push
or
pop
add
and
lock
push
or
ja
jl
rcl
outs
call
outs
popa
jo
mov
lahf
les
rcr
adc
bound
cmps
cmps
imul
loop
and
sub
push
pop
jl
or
inc
pop
je
and
mov
adc
scas
mov
jl
cmps
mov
dec
jle
xchg
push
jne
iret
add
push
cmp
ror
adc
lock
neg
push
sbb
mov
mov
and
add
add
push
ins
xchg
dec
push
or
loop
mov
mov
mov
rol
lds
fwait
cdq
sti
clc
mov
pop
ret
out
lods
sysexit
test
fild
xchg
cdq
sbb
xchg
push
xor
int
ja
mov
daa
mov
pop
inc
jbe
xor
add
push
test
cmp
dec
jbe
dec
bound
aaa
pop
add
retf
lock
jne
inc
add
and
and
or
xlat
(bad)
(bad)
mov
aad
into
retf
js
fadd
jo
push
xor
sbb
or
dec
out
cmp
bound
mov
movs
xor
add
lods
cmp
loope
and
or
add
repz
adc
or
sub
rol
or
js
mov
not
push
xor
popa
xor
adc
fcom
adc
pop
xor
push
mov
add
mov
jg
cmp
xor
rcl
div
stos
dec
test
sub
cdq
add
adc
push
add
arpl
push
clc
inc
adc
cmp
cmps
(bad)
daa
mov
out
sar
pop
pop
outs
push
and
enter
movs
add
mov
or
inc
or
mov
sti
sbb
adc
or
add
xchg
push
adc
cmp
ror
jmp
(bad)
sub
call
or
test
clc
arpl
inc
ja
xlat
cs
xchg
je
cmp
adc
push
rol
jae
jge
sbb
jp
or
adc
jo
or
ds
pop
adc
inc
nop
push
rol
cmc
xor
mov
adc
loopne
mov
hlt
pop
addps
ins
es
pop
rol
lods
pop
movs
inc
and
sahf
push
stos
shl
lds
retf
inc
lahf
mov
pop
enter
jnp
nop
sub
xchg
xchg
inc
or
sbb
jl
inc
sbb
adc
push
mov
push
(bad)
nop
jo
daa
adc
movs
add
mov
add
jb
iret
out
inc
dec
fcom
cmp
inc
and
out
sub
cmp
sahf
xchg
sahf
lds
inc
add
cmp
std
(bad)
fiadd
cli
shl
sub
dec
sub
jl
inc
xchg
lea
les
(bad)
mov
jae
adc
sub
push
inc
inc
adc
icebp
inc
movs
(bad)
ja
cwde
test
add
mov
xchg
mov
sub
dec
je
add
outs
add
adc
adc
xor
or
cmps
sar
inc
inc
jmp
sub
call
dec
sub
jp
push
into
adc
adc
adc
xor
push
test
sbb
out
(bad)
cmp
hlt
aas
mov
mov
add
repz
adc
mov
sub
cmc
push
jo
mov
pop
call
mov
cmp
jle
jmp
inc
dec
jne
ret
icebp
push
lahf
rcr
js
xor
sbb
jbe
and
add
add
adc
add
mov
pop
aaa
add
cmp
nop
nop
push
sub
xchg
or
jl
(bad)
test
pop
clc
push
mov
jmp
xchg
icebp
dec
sub
jl
inc
mov
cmp
les
and
inc
dec
jne
add
pop
and
ret
(bad)
adc
jle
stos
mov
push
rol
xchg
test
inc
setg
push
enter
and
js
loopne
or
out
loopne
loop
jg
or
cs
cli
jmp
pusha
movs
jo
xor
test
je
xor
dec
and
aam
xor
test
mov
(bad)
xlat
test
and
out
in
ss
xchg
shl
jnp
xor
lods
pop
int
nop
mov
pusha
aad
lock
xor
xor
loopne
xchg
dec
xchg
mov
or
(bad)
and
enter
inc
add
sar
jmp
sbb
je
sub
or
mov
in
es
ins
lea
push
pop
push
add
jb
and
lds
inc
push
cli
dec
or
cdq
adc
and
mov
cmp
sbb
jle
test
pusha
pushf
or
lahf
adc
jns
ja
sahf
(bad)
or
(bad)
data16
adc
pushf
and
xchg
dec
pop
das
jo
xchg
rcl
lock
xchg
jl
adc
adc
mov
dec
add
add
add
hlt
and
mov
xor
nop
or
sbb
mov
mov
adc
fdiv
das
inc
fld
popa
sub
jb
mov
push
or
xlat
jp
mov
outs
pop
sub
cmp
es
cmps
push
add
sbb
repz
in
push
inc
adc
xor
adc
xchg
call
addr16
(bad)
test
les
or
inc
pushf
icebp
rcl
les
xor
mov
adc
ret
cwde
(bad)
enter
mov
sub
push
pushf
data16
add
sbb
arpl
adc
xor
shl
inc
add
adc
lea
push
test
cmp
mov
sbb
xchg
shl
test
je
or
add
inc
pop
sbb
dec
js
xor
xchg
xor
xchg
and
mov
push
pop
sbb
add
mov
movs
cmp
add
mov
push
pop
add
jb
cmp
push
jne
inc
mov
(bad)
arpl
push
neg
jmp
mov
add
inc
jb
out
xchg
xor
loop
cwde
mov
jb
mov
adc
and
and
mov
xchg
mov
inc
cmp
sahf
push
inc
sahf
jb
or
adc
imul
fisttp
leave
add
add
pop
in
add
add
mov
push
adc
(bad)
jnp
out
adc
mov
shr
enter
sahf
sar
push
fs
mov
and
fadd
push
dec
stos
adc
pop
adc
push
cs
daa
lods
xchg
inc
jb
add
pushf
sbb
inc
inc
cmps
div
add
cwde
xor
and
dec
das
(bad)
loope
cli
push
jb
das
pop
cmc
push
pushw
and
arpl
jmp
and
pushf
fld
iret
les
push
xchg
cmp
and
rcr
xchg
into
adc
adc
sbb
sbb
test
mov
pusha
mov
xor
fstp
sub
cmp
jl
enter
cmp
mov
push
lds
and
dec
xor
or
mov
sub
add
push
jnp
xor
stos
(bad)
test
setne
pop
ret
jbe
out
loop
aam
mov
aaa
pop
pop
add
pop
in
mov
loop
push
adc
xor
sub
xor
je
lahf
adc
jbe
fisubr
push
call
push
xor
adc
sub
dec
mov
mov
mov
add
xor
push
imul
dec
push
imul
adc
sbb
mov
mov
ins
xchg
ins
sar
cmp
inc
push
je
bound
or
mov
inc
jne
ins
test
xor
or
adc
or
add
sub
adc
rcl
sub
add
push
je
adc
mov
outs
pop
jecxz
xchg
or
lock
scas
fs
or
inc
xchg
adc
and
popa
jmp
mov
mov
push
adc
jnp
and
push
push
push
inc
inc
push
enter
sub
adc
or
pop
arpl
sbb
add
fild
push
ret
add
add
gs
or
xchg
pushf
push
je
pop
push
arpl
out
sbb
pop
and
jge
fiadd
cmp
pop
cmp
add
clc
and
ins
(bad)
fstp
dec
(bad)
push
test
sbb
mov
lods
mov
mov
jge
push
out
inc
call
je
jmp
dec
or
pop
mov
jmp
sbb
adc
(bad)
scas
dec
push
xchg
loope
mov
arpl
push
mov
fistp
sub
fwait
adc
sahf
stos
sbb
jnp
outs
loop
push
mov
xor
sbb
loope
or
pushf
and
mov
mov
and
inc
xor
jl
fcomp
adc
cmp
cmp
push
or
jp
xchg
pop
or
add
inc
test
js
mov
dec
push
jns
mov
sub
cwde
inc
cdq
push
fistp
loopne
jno
adc
mov
mov
mov
push
shl
and
jmp
data16
pusha
mov
pop
inc
sbb
test
sbb
push
push
sbb
push
sbb
or
dec
hlt
jne
test
sbb
call
push
jno
lea
cmp
mov
pop
sub
mov
mov
adc
cmp
and
and
cmp
ja
sbb
jg
mov
mov
mov
push
push
dec
adc
in
xor
jns
loop
add
dec
adc
xor
push
mov
or
cmps
bnd
mov
mov
pop
int
ja
mov
loopne
add
mov
ret
lds
mov
jl
add
cld
or
mov
adc
push
ins
xlat
mov
cmp
jl
add
sti
jno
cld
push
test
movs
lock
nop
ins
and
mov
in
in
or
add
lds
xchg
loope
mov
xchg
push
or
rol
pop
fidiv
mov
pop
inc
push
repnz
(bad)
sbb
xor
pop
(bad)
gs
add
(bad)
mov
leave
imul
and
or
mov
inc
addr16
jns
mov
pushf
nop
push
sbb
cmp
test
shl
cmp
xlat
test
test
fist
jo
push
arpl
aam
ja
lahf
add
push
repnz
in
xchg
add
jb
xchg
sbb
pushf
nop
and
pop
adc
out
add
mov
outs
ja
dec
pop
or
inc
dec
cmp
and
jb
cmp
adc
add
mov
xor
in
and
ss
leave
stos
popa
mov
enter
lods
xchg
mov
xchg
dec
inc
inc
inc
daa
xchg
js
inc
(bad)
ffreep
ret
pop
aas
outs
add
adc
pushf
jg
stos
push
leave
stos
lahf
rcl
loope
xchg
lahf
sub
dec
dec
jp
inc
dec
enter
lods
mov
ds
and
aad
test
iret
sub
dec
xchg
ins
xchg
xor
repnz
and
xor
addr16
lods
cmp
jb
popa
add
gs
repnz
iret
xchg
cwde
mov
cmp
cmp
aam
clc
cwde
enter
push
push
adc
pop
and
add
call
inc
call
pop
sbb
pop
xor
fistp
enter
call
dec
outs
fild
push
inc
test
popa
fwait
nop
adc
scas
sbb
and
xchg
scas
pop
mov
xor
bound
ret
mov
das
cmc
sub
ja
pushf
mov
shl
ja
dec
xchg
nop
pushf
pusha
bound
jb
cwde
mov
push
ins
and
das
pop
and
popf
clc
popf
inc
and
inc
sbb
nop
sahf
fs
fs
les
jne
popf
out
or
loope
sub
stos
fimul
aas
cmps
ret
push
pop
pop
sub
pop
lahf
cmps
cmp
cmp
push
das
dec
sub
or
adc
bound
test
add
scas
xchg
push
ret
lahf
and
and
mov
or
dec
ins
test
push
sub
xchg
mov
inc
dec
push
cmps
add
aaa
xchg
mov
mov
call
call
add
xchg
mov
iret
stos
push
jns
lods
ja
mov
and
cmp
push
dec
cmp
je
cmp
cmp
mov
mov
xchg
push
ret
ja
movs
ins
movs
and
(bad)
mov
leave
mov
loop
js
push
movs
adc
ins
movs
push
cmps
jb
jbe
das
adc
popf
movs
xlat
nop
adc
pop
movs
(bad)
fsub
cld
movs
jl
cmp
jl
add
push
jb
movs
sbb
or
outs
mov
aas
sub
pusha
mov
cmps
iret
inc
adc
(bad)
pop
cmps
add
mov
and
jae
jmp
dec
pop
or
inc
dec
cmp
and
mov
cmps
pop
test
jne
push
test
add
movs
test
les
adc
pop
pop
jo
xor
imul
push
aas
or
aaa
mov
mov
sbb
and
fs
or
push
adc
mov
jae
test
or
or
lods
lods
push
sbb
inc
nop
mov
push
jmp
sbb
push
shl
fs
outs
add
and
mov
push
imul
and
les
xor
push
xchg
mov
sub
loope
lods
jg
inc
sbb
nop
push
leave
stos
lahf
or
push
ret
scas
iret
inc
xor
ret
scas
lahf
cwde
cwde
cwde
or
and
or
xchg
push
mov
jns
dec
xchg
mov
mov
pushf
add
mov
mov
es
push
call
cmp
or
xlat
xor
aaa
and
push
(bad)
dec
nop
push
leave
stos
xlat
jmp
adc
or
push
mov
push
pusha
add
loopne
fcomip
mov
or
stos
dec
or
inc
wbinvd
sbb
add
adc
xchg
mov
mov
xchg
push
movs
movs
push
mov
(bad)
jbe
jo
outs
add
xor
or
mov
add
es
push
rcr
mov
xor
loope
test
mov
mov
push
xchg
nop
test
movzx
pop
adc
enter
js
test
test
lods
inc
adc
mov
mov
jp
inc
ret
xchg
xchg
loope
xchg
cmp
mov
mov
pop
pop
and
mov
mov
add
xor
mov
xchg
mov
or
and
bound
push
push
or
push
out
in
and
cmp
in
nop
inc
xor
xchg
mov
mov
pusha
lds
out
mov
dec
aas
verw
lds
loopne
cmp
mov
inc
ret
jb
push
mov
mov
loope
mov
pop
mov
call
mov
xor
inc
xchg
add
daa
or
mov
or
jo
mov
in
mov
dec
add
mov
jo
das
dec
push
inc
add
fadd
inc
dec
add
dec
aad
push
ret
(bad)
gs
jno
out
es
push
rol
mov
pop
shr
mov
daa
push
or
in
push
dec
das
add
jmp
sbb
mov
test
les
les
dec
xor
addr16
repnz
dec
pop
mov
imul
loopne
rol
add
inc
adc
loop
enter
nop
rol
and
mov
inc
ret
dec
aaa
ins
add
outs
and
xor
pop
push
ret
add
and
daa
(bad)
test
int3
pop
int3
push
or
add
cmp
pop
inc
dec
mov
jg
jae
arpl
push
outs
inc
sub
adc
pop
and
les
sub
and
add
je
rcl
push
or
and
ret
push
inc
rol
jmp
sbb
xlat
(bad)
adc
lds
lds
mov
test
(bad)
pop
mov
bound
daa
aam
(bad)
rol
mov
ja
aaa
dec
push
dec
inc
(bad)
push
repnz
outs
dec
(bad)
push
add
inc
jno
outs
fmul
push
(bad)
and
or
adc
pop
and
and
mov
fs
ja
add
cwde
sub
sub
and
dec
mov
or
add
pop
and
or
retf
or
adc
loopne
push
es
mov
inc
mov
addr16
or
push
aaa
outs
scas
xchg
push
inc
addr16
int3
jl
test
adc
mov
jg
add
mov
in
fs
push
int3
sbb
mov
sbb
push
jno
stos
bound
dec
push
(bad)
into
out
or
test
cmp
aaa
call
pop
call
je
add
adc
out
push
in
xor
iret
jne
mov
add
pop
xor
bound
xchg
and
and
iret
xchg
ret
out
or
pop
add
inc
add
or
xchg
pop
xchg
or
rol
aaa
rcr
xor
repnz
adc
call
sub
mov
fisttp
aas
inc
mov
dec
fwait
aas
jp
mov
jo
sbb
pusha
cmp
loope
push
cmp
add
movs
push
xchg
ret
scas
or
pop
add
add
push
repnz
aad
hlt
rcl
or
xor
aam
mov
in
aam
loop
jno
daa
add
(bad)
jmp
push
xor
out
add
inc
push
leave
stos
and
xor
dec
mov
cwde
test
pop
aad
xchg
or
aad
dec
dec
ret
popa
or
sbb
pop
inc
adc
scas
adc
add
mov
popa
add
call
cmp
xor
or
mov
mov
ret
inc
push
les
in
sbb
and
arpl
lahf
inc
jns
lods
mov
or
lock
add
or
cmp
inc
xor
adc
shl
or
jns
mov
cld
fld
pushf
add
fcmove
and
push
sbb
das
adc
xchg
adc
in
add
cmp
fist
int3
fld
push
das
sbb
xchg
adc
jl
cmp
mov
adc
repz
outs
stos
ret
out
ret
fld
fstp
jns
lds
and
dec
test
xor
push
lds
stos
in
adc
adc
mov
pop
hlt
(bad)
dec
inc
jno
fist
and
enter
fimul
in
lds
loopne
push
loopne
add
and
xchg
dec
inc
jno
pop
and
bound
(bad)
and
loopne
push
add
mul
xor
add
pop
or
pop
adc
inc
loop
enter
pop
xor
loope
pop
ret
inc
push
push
add
push
lods
pop
push
push
jb
and
jecxz
add
shl
scas
jecxz
cdq
add
fsub
cmp
cmp
mov
inc
cwde
jecxz
test
loope
adc
jb
lods
test
test
adc
jae
jns
movs
test
outs
cmc
in
and
push
and
in
in
xor
inc
outs
cmp
cmp
mov
inc
pop
cld
in
add
pop
daa
pop
push
jb
or
jo
pop
vcvtpd2dq
add
add
pop
out
sbb
dec
les
xchg
pop
pop
jmp
jne
adc
dec
dec
dec
and
xor
aas
nop
push
leave
stos
mov
out
out
adc
or
call
add
mov
mov
pushf
nop
arpl
sahf
bound
aaa
jae
add
xchg
pop
adc
add
jne
(bad)
jmp
fucomip
mov
loopne
gs
sub
add
and
dec
and
sub
cmp
push
leave
stos
out
jmp
xlat
jmp
lahf
fs
and
fbstp
sbb
daa
mov
loop
xor
dec
pop
sub
or
sub
pop
or
or
pusha
mov
add
inc
jo
in
test
cs
and
dec
dec
xor
aas
mov
stos
inc
jp
in
out
in
add
cs
cwde
and
in
mov
cmp
sbb
dec
xchg
mov
add
dec
aaa
jae
add
test
out
mov
adc
shl
pop
out
mov
xor
add
ret
cwde
aad
out
pop
xchg
cmp
mov
aaa
pop
add
sub
or
mov
pushf
xchg
pushf
inc
adc
adc
pop
adc
sbb
and
and
icebp
adc
pop
icebp
repnz
adc
push
repnz
test
add
pop
mov
adc
pop
or
push
push
push
mov
adc
pop
and
sbb
mov
pop
repz
adc
adc
or
push
pop
call
mov
mov
mov
fdiv
inc
xor
hlt
xlat
adc
or
movs
cmc
out
ror
shl
cmps
cs
push
jae
inc
test
movups
leave
div
test
mul
mov
test
mov
xchg
or
cmps
inc
xor
dec
add
pop
lar
push
repnz
jp
jb
test
or
mov
daa
mov
sti
push
add
dec
scas
bound
clc
ret
mov
ret
adc
out
popa
sub
mov
mov
pop
adc
inc
push
inc
and
pop
push
leave
cli
cli
ffreep
adc
cli
xlat
cli
mov
enter
adc
enter
pop
mov
add
mov
inc
pop
and
cld
and
cld
pop
leave
add
dec
cld
int3
int3
add
out
mov
sbb
inc
scas
xchg
push
inc
out
std
js
mov
out
add
test
push
and
add
(bad)
fisttp
pop
inc
je
iret
(bad)
mov
call
or
add
pop
loopne
or
xor
sar
jmp
popa
mov
inc
arpl
add
int3
ret
inc
jg
mov
add
add
adc
add
test
loop
popa
xchg
js
in
cmp
js
add
push
add
push
mov
movs
arpl
jb
inc
addr16
sub
pop
dec
add
inc
mov
clc
adc
mov
xor
or
addr16
add
in
add
add
add
and
and
cld
js
inc
repnz
aam
ins
adc
scas
xchg
add
enter
hlt
add
aam
aam
je
and
test
adc
pop
stos
mov
aas
inc
dec
cmp
and
in
sbb
adc
rcr
fwait
push
addr16
out
or
int3
or
or
add
or
in
xor
(bad)
jns
inc
and
mov
inc
or
add
sub
or
add
or
shl
dec
je
sbb
jmp
mov
jle
in
gs
adc
addr16
inc
add
and
aad
inc
repnz
loop
pop
adc
cmp
push
or
or
les
ret
inc
push
dec
or
out
push
ins
inc
ja
stos
mov
les
dec
pop
xchg
dec
cmp
jl
dec
inc
(bad)
jl
or
adc
js
cmp
cmp
mov
call
add
(bad)
mov
test
cmps
adc
ja
push
js
add
mov
and
pop
sbb
adc
adc
mov
or
push
outs
stos
sbb
daa
and
stos
mov
dec
enter
and
adc
adc
pop
enter
push
push
xor
call
dec
loop
adc
sbb
inc
or
call
pop
xor
push
inc
push
mov
and
scas
mov
icebp
adc
daa
inc
xor
pop
int
or
and
jp
clc
adc
ja
or
sub
adc
inc
sbb
test
xor
pop
pop
mul
jne
pop
call
sbb
inc
dec
pop
pop
das
dec
jb
call
aam
xchg
mov
popa
inc
sub
outs
ja
and
sbb
sbb
test
push
sbb
sbb
and
push
dec
push
dec
add
push
ja
scas
mov
daa
inc
pop
rcr
sbb
mov
dec
ins
xchg
pushf
nop
inc
ins
test
aam
in
dec
sbb
sbb
sub
loopne
sbb
jb
add
fcomp
movs
adc
fwait
js
mov
ins
add
xor
outs
xchg
pop
pop
dec
pop
sbb
push
aaa
dec
push
sbb
and
mov
pop
clc
sbb
(bad)
scas
adc
push
and
mov
jmp
add
inc
ja
push
leave
push
neg
pop
adc
add
add
and
mov
aam
call
movs
push
aam
push
ja
push
pop
and
enter
mov
lock
enter
cpuid
mov
and
inc
pop
and
or
or
or
mov
sbb
sub
fsubr
pop
es
popa
jae
jl
jo
(bad)
mov
inc
pop
xchg
xchg
and
inc
dec
sub
and
add
xchg
pop
aad
push
inc
pop
es
scas
es
es
adc
daa
xchg
and
xor
xor
push
sub
sub
sub
sub
or
dec
(bad)
pop
test
and
dec
inc
pop
stos
sbb
cmp
fs
push
test
xchg
lahf
xlat
xor
sub
sub
xlat
push
inc
xor
sub
add
in
es
push
push
lds
daa
dec
sub
dec
adc
lahf
scas
xchg
stos
xchg
cvttps2pi
enter
pushf
sub
fs
in
sub
push
adc
inc
xor
add
stos
in
cmp
loop
push
loopne
cs
cs
xlat
mov
inc
push
and
lds
mov
push
xchg
mov
das
sbb
push
adc
rol
in
mov
ret
push
cmps
push
add
sub
mov
xor
(bad)
les
xor
xor
hlt
cdq
xor
xor
enter
hlt
xor
xor
sbb
inc
(bad)
and
xor
xchg
add
jnp
pushw
addr16
ror
ja
fdivr
shl
or
mov
cwde
movs
ja
xchg
jl
mov
mov
cmp
mov
jb
jae
ins
pop
push
add
add
xlat
fnsave
leave
retf
xor
cwde
mov
xchg
aam
in
pop
pop
add
or
and
add
sub
add
sbb
add
or
es
xor
not
xchg
iret
xor
pop
pop
imul
imul
cmp
mov
pop
mov
sub
ret
ret
ss
adc
or
pop
jb
in
movs
in
dec
rol
xchg
or
popa
(bad)
xor
in
leave
imul
inc
lea
push
daa
dec
inc
jg
inc
dec
and
pop
pop
and
add
out
xchg
aas
ja
dec
sbb
add
retf
mov
mov
xor
cld
jmp
xor
adc
cmp
adc
js
je
loopne
add
add
pop
les
xchg
out
fimul
addr16
add
(bad)
sbb
aad
and
(bad)
push
add
scas
or
and
cmp
nop
dec
or
and
loope
cmps
(bad)
movs
ror
lahf
add
mov
gs
or
add
outs
jns
cmps
adc
add
pusha
adc
retf
in
inc
sub
test
xchg
push
inc
xchg
sub
xchg
pop
adc
jl
call
lahf
retf
push
lahf
retf
test
and
scas
jmp
lahf
js
mov
add
test
test
mov
cmps
mov
nop
jl
xchg
lahf
scas
stos
jl
lods
cwde
mov
adc
sub
mov
push
ds
sub
mov
out
imul
mov
addr16
adc
push
stc
xor
xor
clc
mov
cld
in
icebp
sahf
retf
in
call
aaa
xlat
mov
aas
shl
aas
retf
adc
dec
loopne
leave
fcomp
aam
in
stc
mov
int3
jecxz
sub
lock
int
shl
adc
cmp
jmp
adc
add
lods
mov
add
adc
jo
adc
(bad)
or
lahf
retf
(bad)
aad
pop
xlat
adc
fmul
sar
and
mov
sti
push
ds
and
xor
dec
push
ds
scas
sbb
xor
and
stc
dec
fbstp
loopne
js
scas
rol
mov
cmp
in
sar
adc
fnstsw
and
dec
in
push
pop
sub
pop
mov
daa
adc
out
cmps
bnd
repz
cmp
sbb
ins
cmc
call
pusha
ja
dec
mov
aam
cmp
jmp
scas
inc
xlat
mov
jl
or
je
sub
sub
adc
adc
mov
adc
rcl
std
loopne
adc
nop
es
dec
adc
maskmovq
idiv
jl
loopne
xor
mov
adc
dec
out
inc
xchg
mov
cmp
jge
fidiv
xlat
movs
es
xor
lahf
retf
repz
(bad)
pop
xor
bound
(bad)
mul
les
mov
imul
jne
mov
inc
mov
pop
pop
xlat
mov
les
xor
jo
sbb
arpl
lock
arpl
cld
out
mov
cmp
dec
add
fadd
push
adc
inc
pop
sar
cmc
mov
mov
test
pop
push
pop
push
push
mov
hlt
popa
inc
sub
popa
or
dec
and
cld
fist
mov
dec
add
not
and
daa
sbb
fild
arpl
dec
or
add
sub
loopne
add
and
test
push
adc
push
adc
ret
(bad)
fwait
inc
or
pop
pop
cmp
cmps
jno
inc
inc
xor
mov
xor
inc
or
push
or
(bad)
jmp
popa
js
jg
push
aas
mov
cmp
ja
xchg
daa
ds
cmp
repz
bound
repz
repz
test
call
xchg
and
cmp
sti
sbb
mov
jmp
mov
sar
mov
cmp
or
cmp
mov
jnp
xor
sub
scas
dec
cmp
es
xor
enter
or
and
enter
sub
xor
enter
cmp
inc
dec
adc
les
mov
mov
pop
jo
jno
ins
sub
pop
pop
pop
iret
mov
leave
jae
or
add
mov
fadd
mov
xor
sbb
iret
xchg
xor
jne
sub
xor
js
mov
add
cwde
das
cmp
pushf
fidivr
or
outs
or
and
mov
inc
sub
aaa
inc
rol
repnz
cs
(bad)
and
mov
test
jne
cmp
je
pop
and
push
fimul
adc
cmp
sub
clc
(bad)
call
push
aam
add
inc
rcr
popa
or
ret
fbld
add
push
mov
mov
mov
adc
xor
data16
dec
add
jb
push
inc
sbb
inc
add
movs
ret
mov
jmp
and
add
lods
add
loope
dec
(bad)
mov
bound
fcom
push
clc
nop
adc
adc
clc
sar
jae
jle
add
movsx
das
add
or
jne
mov
jbe
jmp
or
xor
pop
xor
add
mov
push
in
or
push
rcr
mov
lea
jp
push
cwde
push
push
cli
adc
(bad)
mov
and
dec
lock
mov
rcr
add
daa
adc
jge
dec
ja
jmp
mov
and
mov
sub
adc
adc
and
out
inc
popa
adc
or
dec
lahf
inc
push
inc
push
xor
sbb
add
aas
cwde
push
or
lea
(bad)
aam
add
pop
pop
pop
sbb
xor
xchg
xor
sbb
mov
add
push
retf
inc
xchg
push
and
dec
cmp
mov
mov
add
jne
fwait
pop
xchg
and
add
adc
adc
pop
or
pop
leave
add
push
jmp
scas
pop
dec
shl
mov
pop
add
xor
add
(bad)
mov
inc
pop
jge
cwde
je
add
push
and
std
mov
shl
adc
sbb
inc
add
jl
inc
jae
pop
sbb
xlat
pop
pop
mov
sub
adc
out
je
(bad)
cmp
movs
(bad)
cmp
mov
hlt
ja
sbb
jne
mov
mov
sub
or
cmps
iret
aam
(bad)
sub
jbe
loopne
or
sbb
inc
popa
xor
dec
mov
or
jne
sbb
push
or
lds
dec
rcr
or
xor
or
jg
or
jmp
shl
mov
js
adc
adc
dec
adc
sbb
sbb
sbb
je
lds
in
or
shl
add
push
push
cdq
add
xor
nop
push
psubusb
pusha
aas
sub
push
push
pop
or
test
js
repz
or
ds
add
or
ins
mov
xor
rcl
enter
add
mov
jmp
xor
lock
pop
mov
sbb
in
idiv
and
mov
inc
jmp
jne
push
loopne
lods
mov
add
pusha
mov
jmp
or
xchg
dec
enter
data16
and
add
push
or
jmp
xor
fstp
add
add
push
add
repnz
rol
retf
jo
loop
xchg
fdiv
fcomp
lock
sub
xchg
add
std
scas
das
int3
mov
cmp
inc
je
xor
cmp
pop
add
movups
dec
inc
mov
jle
push
push
xlat
inc
nop
adc
clc
add
push
add
mov
and
or
ins
idiv
xor
retf
enter
in
fisttp
punpcklbw
fsubr
pop
adc
add
fistp
test
lods
mov
shl
or
xor
cmovb
adc
dec
in
xor
sub
pop
add
sbb
xor
jge
das
fcomp
arpl
xchg
loopne
sbb
fstp
aam
imul
jo
pop
es
in
or
adc
call
dec
idiv
or
int3
push
sar
test
adc
cmp
mov
lods
pop
push
aas
push
add
ror
ja
popf
jle
mov
ss
ja
ds
or
mov
addr16
add
mov
fsubr
pop
pop
jbe
add
repnz
sbb
sub
pop
mov
sbb
dec
push
fcom
mov
jl
neg
sub
jno
adc
adc
popa
inc
mov
mov
ins
adc
sub
and
adc
push
sbb
mov
scas
mul
std
cld
bnd
in
adc
call
cs
shl
sbb
add
adc
jmp
or
bound
cmp
jbe
hlt
mov
add
and
add
sete
or
sar
push
je
add
imul
cs
add
je
or
jmp
add
jecxz
mov
add
jmp
iret
push
int3
push
loope
xor
dec
sub
pushf
or
jbe
adc
ret
xchg
repz
adc
stc
cmp
ss
dec
mov
cmp
mov
xor
nop
call
mov
mov
add
mov
pop
out
push
pop
fild
adc
xor
(bad)
out
sbb
addr16
push
xor
push
push
fisub
repnz
inc
sbb
push
xchg
pop
movs
sbb
mov
and
push
retf
inc
mov
pop
push
mov
xor
mov
sub
aaa
xchg
lock
(bad)
xchg
jo
adc
pop
nop
retf
cmp
dec
sub
movhps
inc
mov
(bad)
bound
mul
mov
test
movs
inc
popa
add
mov
cmp
xor
sub
rol
leave
addr16
adc
aaa
ret
xchg
mov
push
mov
and
fs
test
pop
jg
dec
ins
xchg
cmp
aaa
pusha
pop
repnz
pop
in
pop
shl
mov
mov
(bad)
push
aas
xor
icebp
fisubr
xchg
jmp
outs
add
xor
jmp
xchg
shr
ins
loopne
ins
outs
inc
sbb
ror
push
mov
mov
sbb
push
jge
sbb
add
jns
push
or
jne
add
pop
cmps
jbe
jno
push
fdiv
adc
inc
cmps
push
add
into
push
in
dec
popa
add
cwde
pop
pop
pusha
dec
ucomiss
sub
imul
jge
aam
popa
test
pusha
das
pop
in
les
aad
or
in
pop
das
neg
or
and
push
xchg
es
ins
scas
movs
push
push
fld
clc
dec
popa
dec
cmp
push
nop
bound
push
adc
fild
mov
mov
pop
lock
mov
ds
fs
js
retf
push
dec
add
jle
repnz
add
sbb
pop
push
sbb
jno
outs
xchg
pop
push
outs
in
pop
cmp
pop
adc
fist
add
push
jbe
out
in
in
rdtsc
push
das
xor
dec
xor
pop
xor
push
push
rdpmc
add
xor
push
sysexit
add
mov
adc
aaa
adc
das
ja
fild
jb
mov
xchg
and
retf
retf
pushf
mov
push
je
inc
push
mov
lea
push
lea
cmp
adc
aaa
pop
(bad)
xcrypt-ofb
cmps
sub
adc
jne
jne
ins
sub
jo
jb
add
jp
pop
mov
ins
pop
xchg
test
push
mov
cwde
dec
pusha
imul
dec
test
inc
cmp
sahf
mov
shr
gs
inc
and
sti
punpcklbw
jecxz
jb
ror
and
rol
dec
mov
add
jecxz
ror
pop
xor
pop
daa
dec
sbb
add
add
add
push
push
sbb
pop
inc
cmp
loope
push
sbb
cmp
sbb
push
push
cwde
lds
mov
push
outs
out
sbb
leave
inc
xchg
and
sbb
fs
jb
add
mov
jae
mov
jmp
test
ins
add
push
mov
inc
mov
pop
dec
mov
or
and
xchg
pop
or
in
pop
sub
pop
in
scas
loopne
aaa
add
dec
mov
push
mov
arpl
add
push
js
retf
jb
outs
jae
inc
sbb
jmp
push
(bad)
repnz
inc
imul
or
xor
add
ficomp
sbb
sub
mov
fadd
iret
adc
sbb
sub
jmp
jns
stos
push
push
popf
sub
inc
jns
shl
inc
int3
(bad)
ror
push
sbb
push
imul
pusha
pusha
mov
mov
inc
mov
adc
lods
inc
ins
add
mov
adc
or
push
push
and
and
fwait
push
or
mov
xchg
rol
popa
pop
jb
add
ins
mov
mov
xchg
and
jge
dec
add
stos
add
mov
jo
mov
mov
fsubr
or
push
or
rol
pop
fisttp
push
jb
cmc
add
lds
dec
ja
imul
cmps
jne
je
or
add
jno
xchg
outs
cmps
leave
or
or
add
jo
gs
sahf
out
xor
ins
out
add
xor
jno
rol
cmp
add
das
inc
fst
add
or
sbb
movnti
add
xchg
add
jg
sbb
sub
inc
jo
jmp
or
cmp
adc
imul
in
and
jae
push
dec
sti
sbb
dec
xor
mov
and
mov
loopne
js
pusha
dec
fisttp
jo
scas
pop
test
fistp
inc
add
inc
fist
inc
push
(bad)
jo
mov
pop
sahf
std
push
jnp
xor
jne
dec
push
and
xor
arpl
dec
push
push
(bad)
sbb
push
push
std
pushf
cwde
sbb
mov
aad
mov
leave
out
xor
pop
stos
mov
and
inc
fnstcw
mov
push
pop
xor
ss
adc
add
fild
xor
(bad)
sar
ja
mov
pop
in
das
bnd
movs
push
sbb
add
(bad)
popa
retf
repz
out
pop
inc
add
movs
adc
xchg
fcomp
mov
add
xchg
pop
push
fst
arpl
sub
fs
cmp
lods
pop
test
sub
and
adc
xor
retf
lock
sub
jb
ds
dec
or
add
pop
pusha
bound
adc
je
cld
outs
push
dec
sub
mov
(bad)
ss
inc
xchg
sub
or
fisub
jmp
clc
cdq
and
push
movzx
or
sahf
dec
in
sub
dec
cdq
in
sbb
dec
lahf
cwde
das
add
leave
xor
jmp
and
fcomp
add
mov
pop
xor
cmps
fdivr
push
aam
add
call
cld
and
pushf
pop
fnsave
clc
mov
sub
or
test
clc
jmp
aam
js
call
mov
shl
mov
pop
mov
add
in
in
add
cmp
aas
loopne
loopne
daa
xchg
pushf
push
fsubr
fadd
mov
mov
(bad)
dec
push
push
push
int3
sbb
cli
cmp
xor
mov
jecxz
je
mov
imul
shl
or
add
cmp
or
lahf
mov
loop
mov
xchg
pop
cmp
aad
xchg
aam
lock
pop
es
inc
and
call
adc
sti
mov
mov
add
pop
div
cli
push
imul
push
cmpps
test
shl
xchg
cmps
xlat
jae
add
fimul
push
pop
call
rcr
scas
mov
add
add
ror
lods
push
adc
jno
sbb
sub
outs
sbb
es
and
lock
inc
xchg
add
movs
push
dec
inc
jg
ds
rcr
adc
scas
es
add
inc
sbb
push
in
shr
push
dec
sub
inc
test
push
test
jmp
das
cdq
(bad)
aad
sbb
sbb
imul
clc
push
push
mov
rcr
push
push
or
cmps
sub
add
mov
imul
xchg
shl
loopne
mov
jae
mov
aam
xchg
or
pop
pop
jg
ror
or
mov
loope
stos
or
fld
or
adc
mov
sub
or
jmp
push
pop
sti
push
popf
or
adc
push
fwait
scas
or
sub
or
lock
sti
inc
cli
stos
pop
je
xor
test
clc
mov
and
pusha
jo
adc
retf
popa
inc
and
cwde
jb
out
adc
cmp
(bad)
fidivr
retf
sbb
pop
and
xchg
jae
rol
ss
jnp
pop
adc
or
mov
clc
sbb
sbb
add
xchg
lock
nop
xor
mov
cmp
add
sbb
push
mov
imul
jle
mov
adc
pop
sbb
add
cmp
ror
adc
adc
push
xchg
mov
aam
mov
test
dec
push
idiv
xchg
and
(bad)
test
dec
cmp
jl
xchg
or
mov
lds
mov
add
movs
je
cdq
push
loopne
and
dec
gs
add
fsubr
cmp
add
mov
pop
pop
xchg
and
je
push
test
je
mov
test
(bad)
cwde
jnp
mov
add
fbld
imul
rol
push
out
sub
dec
in
into
popa
sub
pop
xor
add
or
(bad)
bound
js
ret
(bad)
mov
xchg
cwde
adc
ins
out
sti
push
xor
and
packuswb
addr16
sti
jnp
add
data16
push
loopne
aaa
dec
xor
add
adc
jp
add
fwait
and
and
adc
aaa
scas
sbb
in
jge
add
push
inc
fisubr
das
jae
add
cmp
xlat
add
inc
sbb
pop
mov
and
loop
xor
cmps
or
mov
cmp
ret
inc
dec
pop
push
rcl
push
push
aam
push
mov
imul
push
stos
pop
sub
retf
and
push
xchg
mov
movs
xchg
fld
cmps
push
dec
push
clc
xchg
fcom
mov
add
and
rol
inc
inc
in
or
inc
idiv
sbb
jp
syscall
stos
mov
add
aad
cli
bswap
pop
xor
pop
add
jae
add
xchg
bswap
dec
lods
imul
jp
or
in
and
rcr
cmp
cs
outs
ja
xor
xor
xorps
pop
pop
pop
stos
pop
imul
add
ins
add
ds
sub
or
inc
sbb
fcom
xchg
xchg
ja
scas
popa
xor
popa
or
push
popf
pop
lods
xchg
icebp
movs
pop
mov
ss
scas
retf
mov
and
adc
and
push
je
or
arpl
rcl
or
imul
ror
push
xor
add
call
push
add
xlat
sbb
inc
pop
into
nop
fild
iret
(bad)
inc
ds
inc
add
cld
out
xor
or
scas
dec
lods
add
xor
inc
pop
push
(bad)
push
ja
bound
jne
jg
sbb
or
hlt
push
xor
pop
pop
inc
fisubr
dec
imul
sub
ins
xor
cmp
cmp
sub
inc
ins
punpckldq
mov
dec
scas
xchg
jle
out
mov
push
xor
push
clc
jg
(bad)
jge
push
fwait
test
call
or
mov
lock
lock
xchg
ret
test
int3
aas
push
inc
mov
mov
sahf
dec
into
or
(bad)
cmp
js
jmp
jge
aam
ds
shl
imul
push
lock
xchg
xchg
inc
add
pop
xor
es
jle
mov
push
outs
xlat
fwait
imul
(bad)
dec
push
outs
packuswb
prefetch
or
bswap
ds
adc
movhps
(bad)
in
jp
repnz
cmp
jno
js
retf
wrmsr
add
xor
adc
pop
xchg
jae
add
sysexit
add
je
add
mov
movups
fnstsw
inc
ret
daa
ror
and
mov
push
ret
add
repnz
ucomiss
test
(bad)
js
bound
push
jle
repnz
mov
popa
jns
add
and
push
add
(bad)
divps
pop
jo
xor
or
lahf
loopne
push
jo
cmp
and
outs
dec
xchg
imul
adc
(bad)
scas
in
add
js
clc
xchg
sub
inc
clc
lock
mov
call
push
loopne
add
outs
lea
add
push
adc
xchg
or
sbb
or
call
pusha
and
sbb
add
jns
inc
mov
and
dec
stos
test
add
and
adc
dec
inc
xchg
cmp
inc
jb
jp
pop
and
lea
cmp
stos
add
push
xor
stos
lea
add
or
jp
outs
rol
add
pop
and
rol
stos
or
xor
adc
icebp
push
or
outs
rol
out
mov
or
add
inc
sar
jp
test
inc
push
in
sbb
test
cwde
add
cmc
imul
fld
sbb
dec
mov
xor
aad
mov
inc
cmc
cs
sub
inc
xchg
lea
nop
fldenv
add
mov
push
test
add
arpl
call
mov
add
nop
shl
or
les
add
or
xor
inc
pop
daa
jecxz
mov
cmp
add
inc
push
arpl
xchg
cwde
mov
ins
pop
add
pop
xchg
cmp
and
dec
imul
outs
das
or
jae
test
dec
test
or
dec
adc
sahf
cwde
test
rcpps
jecxz
pop
or
mov
or
in
mov
sbb
cmps
jl
xor
out
add
add
lods
lock
dec
add
add
sar
or
jae
sbb
sahf
xor
and
inc
and
call
xor
push
mov
iret
cmps
fwait
jae
ins
mov
and
xor
mov
or
inc
fild
ret
inc
adc
lock
mov
mov
or
mov
sbb
or
jmp
and
ja
push
xor
outs
and
or
dec
jle
push
adc
add
ins
pop
sub
lea
pop
lea
lds
popf
ins
mov
or
sti
repnz
cmc
push
inc
mov
mov
or
sub
lods
cmp
and
and
and
jo
into
adc
call
or
dec
jnp
adc
or
movs
pop
inc
push
jns
or
mov
push
jb
movs
push
imul
and
mov
aas
jns
pop
inc
aas
call
push
in
mov
pop
rol
or
xchg
cmp
sbb
jl
lock
or
jbe
cmp
or
pop
out
sbb
cwde
xchg
jae
(bad)
ja
mov
in
and
mov
and
pop
mov
push
sbb
xchg
adc
cmc
inc
pop
add
add
es
dec
ja
adc
repnz
outs
xlat
scas
rol
fidiv
imul
jecxz
mov
mov
cwde
jnp
sbb
fist
adc
nop
pop
jne
test
jge
ret
das
mov
inc
add
loopne
jo
imul
in
adc
push
push
add
scas
sbb
adc
adc
pop
add
cmp
cmp
mov
and
adc
push
dec
add
js
retf
mov
mov
dec
push
pop
jp
lods
mov
add
xor
mov
sbb
sbb
rcl
call
pop
and
or
popa
movs
mov
or
and
mov
push
xlat
cmp
inc
push
or
js
aad
cmp
push
(bad)
loop
movzx
push
mov
or
mov
test
jne
push
add
leave
and
mov
lahf
lea
and
push
jle
jno
sbb
(bad)
pop
pop
lea
rcl
ja
dec
loop
mov
push
imul
retf
out
out
rol
imul
inc
and
sub
push
movs
adc
add
xchg
cmp
jmp
xor
data16
adc
and
inc
clc
or
xor
push
push
mov
mov
push
cmp
pop
add
and
sbb
xor
sar
inc
push
mov
test
sbb
and
push
adc
dec
fcomp
mov
sub
fstp
enter
mov
mov
int
sub
mov
js
cmp
xchg
xchg
xchg
mov
push
push
mov
inc
inc
cmp
add
adc
adc
xchg
idiv
adc
hlt
push
pop
daa
leave
sbb
push
xchg
mov
jle
mov
adc
cli
adc
sbb
fcmovnu
mov
sbb
ss
jg
rcr
inc
push
fidivr
add
inc
add
cli
nop
mov
jmp
adc
push
jp
xchg
or
sbb
mov
adc
push
push
mov
push
pop
sbb
mov
push
xchg
pop
push
mov
cmp
ud0
cld
into
adc
repnz
imul
enter
sub
add
jmp
add
ret
loopne
xchg
leave
adc
lods
mov
sbb
push
loope
mov
mov
jne
mov
cld
xchg
jge
jmp
cmp
add
fiadd
aad
push
stc
xchg
pop
xor
sub
jge
add
pop
and
sbb
and
call
mov
cmp
add
pop
sub
sub
lock
xchg
sbb
push
xor
call
je
sbb
lds
lea
jo
sbb
lods
cmp
push
xchg
pop
(bad)
loopne
jbe
lea
sub
mov
ins
mov
push
mov
(bad)
lds
mov
add
sub
in
aad
mov
fidiv
es
pop
xlat
jno
push
rcl
mov
jae
jmp
mov
xchg
mov
inc
sub
sub
loope
jmp
arpl
add
jg
mov
cmp
int3
pop
popa
add
cdq
xchg
fiadd
popa
lds
sbb
or
call
sub
adc
jo
xchg
xchg
sbb
das
imul
or
or
dec
shl
lea
ja
sub
xchg
lods
retf
mov
jbe
mov
int
pop
mov
cmp
fsubp
xchg
add
xchg
xchg
adc
jecxz
xchg
lods
popa
gs
push
leave
imul
jno
push
mov
imul
movs
mov
cmp
xor
pop
arpl
mov
scas
push
sub
mov
sbb
sti
mov
inc
es
cmps
scas
push
fistp
imul
cmp
push
and
cmp
inc
add
fwait
push
xor
mov
inc
cmp
call
enter
push
call
cmp
or
cmp
or
jo
jge
mov
je
call
and
pop
dec
add
in
rcl
sub
jg
pop
jns
jle
popa
movs
adc
pop
mov
mov
mov
cwde
cli
push
(bad)
mov
jae
inc
addr16
jbe
add
sbb
add
jb
inc
dec
or
(bad)
dec
shl
(bad)
sbb
adc
dec
adc
pop
call
ret
nop
add
lahf
add
dec
sbb
movs
jne
in
in
call
je
pop
mov
mov
and
and
cmp
and
adc
mov
js
add
ss
out
jmp
pop
pop
rol
jmp
nop
or
push
and
clc
outs
mov
inc
fst
and
inc
sub
(bad)
jmp
and
xor
sbb
ja
add
adc
push
std
or
sbb
nop
and
pushf
inc
int
(bad)
loopne
or
xbegin
dec
shl
cmp
cmp
je
std
sbb
inc
cmp
test
mov
pop
imul
jnp
add
enter
popf
pop
call
mov
ins
inc
add
add
test
xchg
imul
sub
mov
not
xchg
xchg
inc
sub
js
pop
jmp
pop
adc
sbb
call
xchg
sbb
mov
test
push
sbb
push
loopne
loopne
fwait
rol
mov
push
(bad)
aas
and
fwait
in
psllw
push
and
psrlw
push
pop
or
inc
jbe
test
(bad)
popf
xchg
cmps
loope
inc
cmp
loopne
fcom
call
dec
adc
sbb
sbb
dec
aaa
movs
pop
mov
pop
fcomip
cmp
push
iret
ret
mov
xor
clc
rcr
add
push
cmp
mov
adc
push
jmp
mov
sub
rcl
lds
inc
xor
mov
loopne
hlt
jb
inc
cmc
(bad)
add
(bad)
lock
add
jne
adc
shr
lea
adc
inc
movs
clc
sub
lea
or
retf
add
xor
xchg
cmps
ja
adc
or
mov
jns
adc
jg
enter
adc
aaa
mov
push
jnp
movs
cmps
sbb
mov
add
jmp
test
pop
pop
cmp
dec
xchg
or
cli
and
stos
pop
imul
lea
xchg
jns
lea
sti
jge
dec
push
call
mov
inc
mov
daa
jno
dec
(bad)
hlt
sbb
je
dec
fcmove
imul
adc
test
adc
test
jne
mov
dec
xchg
mov
xchg
or
cmp
add
or
(bad)
fist
mov
(bad)
fisttp
push
jp
stos
pop
cmp
push
mov
mov
inc
adc
cmp
pop
adc
jge
pop
fbld
pop
das
je
cmp
je
test
xchg
(bad)
cld
adc
test
mov
call
mov
jl
mov
clc
jno
jl
adc
cli
xor
cmp
addr16
cmp
or
jl
dec
hlt
mov
test
add
sub
inc
sbb
inc
int3
mov
or
arpl
dec
push
xchg
mov
fist
std
mov
je
sub
jb
xor
inc
js
cmp
xor
in
rcl
mov
xchg
pop
or
dec
dec
adc
push
sbb
outs
clc
xchg
mov
enter
jl
ret
push
sbb
add
adc
ds
test
and
ror
mov
cdq
jmp
nop
nop
and
sti
sbb
mov
cmp
iret
test
fisub
mov
ins
adc
call
jns
hlt
aas
hlt
xchg
xchg
push
pusha
cmp
push
aad
ret
jbe
mov
movs
and
cmp
xchg
pop
hlt
xor
mov
fwait
xchg
dec
ret
adc
imul
push
cmp
xchg
xor
mov
hlt
inc
icebp
jecxz
sbb
cmp
pop
or
imul
sti
mov
or
mov
push
xor
or
cmps
lods
sub
sub
ja
pop
sub
sub
xor
pop
pop
xchg
gs
lock
push
cdq
xor
js
push
mov
xchg
mov
pop
shl
xchg
or
rcl
mov
rcr
lds
xchg
lea
push
inc
xchg
aad
gs
ins
push
test
call
add
test
xchg
rol
add
xchg
sbb
cmp
(bad)
sbb
cmp
mov
idiv
inc
ret
mov
adc
adc
dec
sbb
or
(bad)
mul
cmp
cmc
add
test
out
fadd
outs
retf
test
cld
fnstcw
or
xor
add
xchg
jbe
dec
add
(bad)
fild
sahf
xchg
hlt
sub
loopne
jmp
test
mov
pop
loopne
(bad)
call
or
or
jp
test
push
lock
(bad)
mov
pop
in
lea
dec
or
lock
pop
mov
add
div
and
adc
scas
adc
popa
xchg
dec
lahf
movs
andps
lea
jno
or
xchg
into
cmp
mov
jno
inc
cmps
xor
loopne
xor
xchg
and
cmps
cmp
cmps
mov
add
xchg
push
rol
data16
push
mov
mov
pushf
push
xor
lds
rcl
mov
pop
inc
test
xchg
add
loope
rol
aam
seta
ror
push
gs
xlat
loopne
inc
sub
add
add
je
push
les
and
sbb
into
and
xchg
ror
add
cmp
inc
in
ds
mov
pop
push
push
add
dec
push
lea
retf
sbb
or
adc
add
adc
(bad)
ins
imul
xor
push
sbb
mov
add
add
mov
cdq
cmp
pop
sbb
(bad)
and
nop
push
lahf
xlat
or
repnz
jmp
iret
inc
(bad)
shl
(bad)
stos
adc
in
mov
add
adc
mov
pop
add
fwait
or
movs
mov
sbb
mov
adc
xchg
movs
add
adc
push
pop
mov
fs
ror
addr16
or
inc
call
sbb
mov
arpl
jno
imul
test
pushf
xor
sbb
movs
and
or
push
mov
add
jo
push
inc
cmp
jne
ret
add
fwait
popa
jmp
adc
jns
lods
in
inc
xchg
push
push
(bad)
loopne
ret
(bad)
fld
outs
sbb
inc
test
mov
jmp
stos
sub
inc
int3
lock
push
jmp
adc
je
add
push
aas
add
pop
xor
sbb
or
push
push
and
jle
mov
jo
popf
or
mov
fwait
mov
mov
(bad)
pop
jmp
mov
adc
sub
cwde
leave
cmp
in
pusha
jmp
fild
adc
das
dec
into
(bad)
lea
xor
aam
mov
xchg
or
mov
sahf
add
dec
sbb
ror
push
clc
test
ret
sub
inc
jnp
dec
fdivr
pop
mov
push
imul
sbb
add
or
inc
retf
lods
push
(bad)
bound
push
mov
mov
scas
std
push
sar
mov
inc
adc
fiadd
add
mov
xor
test
movs
aaa
adc
add
movs
sub
cmps
fnsave
movs
jg
add
dec
inc
mov
dec
aas
and
cmp
or
mov
test
sar
int
leave
sub
xor
mov
adc
fisttp
cmp
ds
sbb
and
sar
or
push
pusha
movs
xor
fbstp
mov
nop
mov
add
xchg
fdiv
jp
leave
inc
lock
shl
jmp
jo
inc
pop
loopne
ror
mov
inc
add
imul
fs
mov
mov
or
inc
cs
js
xor
sub
sbb
scas
adc
push
or
sub
add
push
mov
scas
call
mov
mov
fstp
jmp
addr16
retf
add
add
dec
rol
fdiv
or
add
push
jo
(bad)
pop
fcmovne
inc
sbb
and
js
stos
movs
push
or
xchg
xor
add
add
aad
mov
nop
push
and
call
rol
imul
out
popf
add
or
movs
dec
cmova
clc
pusha
or
add
push
cld
imul
push
inc
out
ins
in
adc
mov
push
jmp
sbb
inc
xchg
test
jg
push
movs
push
add
call
jo
cld
or
ror
jb
cmp
fist
mov
cmp
mov
or
mov
sub
add
sub
adc
add
push
les
push
sbb
mov
mov
xor
lahf
adc
inc
xor
adc
pusha
inc
clc
jo
out
xchg
push
mov
cmp
xchg
jmp
inc
and
add
pop
sub
xchg
add
jg
xchg
or
cmp
add
or
sub
cmp
in
push
gs
jne
xchg
mov
adc
pop
xor
shl
add
xchg
inc
xor
pop
ss
mov
sbb
jmp
pop
ja
and
jb
scas
movs
ret
adc
xchg
lock
cli
outs
ret
out
mov
dec
xlat
mov
xchg
sahf
mov
add
jp
add
pop
jp
and
pinsrw
pop
add
jnp
mov
adc
xor
push
dec
popf
ja
push
and
ror
mov
and
mov
repz
dec
ror
mov
ins
jno
jl
cmp
and
xchg
push
or
sbb
push
add
adc
xor
nop
mov
mov
mov
mov
in
mov
and
and
loop
or
in
xor
pop
test
or
add
iret
pop
and
loopne
fistp
inc
das
hlt
dec
and
pop
invd
sbb
cmp
(bad)
imul
jmp
out
cmp
rol
mov
ja
mov
ror
and
mov
add
cwde
pop
jl
ins
cmp
cmps
iret
and
or
adc
jns
xchg
and
jbe
inc
xor
fld
dec
push
sub
aas
pop
and
shl
unpcklps
or
add
or
repnz
js
jb
gs
or
or
push
inc
arpl
mov
inc
xchg
adc
adc
popa
mov
(bad)
sahf
mov
sbb
sbb
call
fcmovbe
cmp
pop
and
movs
jae
lods
inc
mov
pop
test
or
lahf
imul
push
add
adc
mov
sbb
call
or
xchg
push
in
fild
jne
and
or
adc
push
push
xor
or
loope
xor
(bad)
out
stos
inc
sbb
fadd
sub
mov
cmp
inc
and
loop
scas
cmp
or
mov
push
dec
pop
vdivpd
adc
xchg
adc
shr
call
push
cmp
test
cwde
(bad)
test
inc
and
scas
loope
and
add
adc
mov
cmps
psubsw
es
dec
stos
inc
push
jle
jo
and
jg
retf
int3
add
rol
aas
pop
or
add
outs
mov
mov
dec
cmp
out
loop
dec
mov
push
retf
mov
(bad)
and
push
pop
and
test
push
mov
jl
push
or
pop
add
test
adc
jp
xchg
loopne
aas
ds
stos
pusha
pusha
xchg
mov
add
or
popf
pop
js
jmp
sub
and
dec
xor
cmp
scas
popa
add
addr16
xchg
mov
loopne
popf
dec
xor
inc
add
adc
lods
sbb
pop
aaa
test
mov
mov
adc
pop
sub
dec
and
in
(bad)
inc
and
xchg
add
outs
arpl
je
pop
inc
je
xchg
xchg
add
pop
popf
xchg
js
popa
add
cmp
adc
add
out
push
jl
or
ins
push
icebp
add
pop
enter
arpl
sbb
addr16
inc
pop
adc
arpl
push
out
add
scas
nop
add
scas
pop
in
push
or
pop
push
inc
push
jbe
mov
and
test
enter
aam
push
inc
cmp
stos
fmul
fs
mov
lods
movs
adc
push
js
xchg
das
lahf
ja
xchg
inc
es
adc
ins
pop
adc
or
sub
call
cdq
dec
sbb
mov
(bad)
inc
arpl
popa
push
call
scas
push
and
nop
ret
jb
adc
adc
or
sbb
outs
pop
stc
ret
fs
push
lds
or
aad
add
mov
inc
test
add
mov
mov
add
push
les
push
cli
sbb
mov
mov
inc
xor
inc
inc
push
mov
(bad)
mov
test
inc
mov
jmp
pusha
sbb
sub
xchg
into
adc
pop
shl
pop
test
inc
adc
xchg
add
arpl
pop
inc
jno
(bad)
mov
mov
mov
bound
or
jl
hlt
ss
out
mov
mov
stos
mov
mov
mov
(bad)
mov
ss
add
push
xor
push
in
mov
les
call
jl
jl
shr
xor
mov
shr
div
(bad)
adc
aaa
xor
iret
sar
sbb
push
sbb
add
cmps
stc
cmp
dec
jmp
in
and
lock
mov
xor
dec
xor
mov
or
imul
add
ss
xchg
xchg
add
not
inc
cs
pop
add
add
test
cmp
and
ins
dec
or
or
sub
pushf
cmp
repz
mov
test
nop
ret
inc
add
xor
push
add
icebp
movs
and
lods
imul
dec
mov
adc
mov
add
jbe
sbb
xchg
cmp
inc
dec
test
pop
sbb
xlat
js
push
punpcklwd
out
xor
mov
ja
stc
or
mov
icebp
out
xor
pop
out
das
push
add
mov
or
dec
lahf
xsaves
mov
jnp
pop
retf
in
push
mov
mov
stc
or
out
or
mov
imul
mov
mov
add
mov
inc
adc
mov
daa
mov
(bad)
mov
mov
jg
ja
ja
adc
icebp
push
pop
adc
jno
unpckhps
scas
out
out
xchg
das
push
add
pop
add
ror
jo
fcmovne
(bad)
fstp
sbb
jecxz
sbb
push
ret
push
push
sbb
ja
jbe
clc
wrmsr
pop
ret
nop
fstp
scas
jge
outs
les
push
inc
nop
bsr
pop
out
add
stos
mov
dec
fisttp
ud1
cld
and
dec
(bad)
and
iret
and
int
ficom
mov
push
daa
or
pop
popa
xor
fimul
push
sub
cmps
aaa
xchg
adc
into
dec
sbb
sub
add
leave
jmp
add
cmc
movs
ja
sub
xchg
test
in
leave
push
push
push
dec
in
adc
add
dec
ins
push
pusha
nop
and
mov
int
dec
aad
dec
add
pop
aas
add
and
popf
push
sub
mov
adc
ror
aas
sar
outs
arpl
ins
jno
add
xchg
dec
or
inc
adc
scas
dec
pop
test
jmp
adc
jp
inc
ins
pop
xlat
fcom
stos
(bad)
adc
xor
test
xlat
scas
pusha
cmps
inc
jno
inc
stos
mov
mov
mov
scas
jns
cmp
clc
clc
dec
ins
adc
cmp
sub
xchg
or
out
adc
repz
ror
xor
js
or
push
adc
xchg
add
and
cli
rcl
mov
xlat
sub
pop
mov
test
test
ins
push
mov
daa
gs
lea
inc
inc
jmp
sub
xchg
inc
mov
mov
add
jl
add
push
or
sti
xchg
outs
push
xor
in
test
push
popa
or
push
cmp
dec
stos
mov
imul
pop
cs
mov
mov
add
inc
add
add
test
mov
stos
add
das
jg
adc
pop
or
stos
sar
stos
jg
fisub
jg
fs
sub
sbb
push
and
push
add
adc
jae
xchg
add
in
sbb
sub
jae
and
add
inc
sti
mov
add
inc
mov
adc
mov
add
pop
pop
lds
jge
add
add
sbb
jo
mov
add
leave
adc
cwde
adc
add
or
adc
sub
jge
shr
push
pusha
inc
out
test
lock
mov
sbb
push
xchg
test
add
pushf
jns
jae
test
inc
sbb
(bad)
ss
xchg
es
jns
inc
aaa
add
rcl
add
adc
inc
dec
jns
popa
and
jmp
push
sbb
add
add
mov
movs
test
jns
inc
sub
popa
jns
add
cmp
sub
loop
dec
add
retf
or
inc
inc
popa
je
arpl
retf
test
sub
mov
xchg
mov
sbb
mov
or
inc
stc
lea
add
xchg
mov
pop
cmp
dec
add
enter
inc
or
retf
or
sub
mov
inc
enter
or
shr
retf
mov
or
loopne
pop
(bad)
jle
(bad)
scas
add
xchg
mov
lock
adc
leave
mul
mov
inc
adc
inc
adc
(bad)
mov
or
shl
jae
lahf
xchg
mov
std
dec
ins
and
fmul
jp
cs
lock
or
add
cmp
pop
dec
lds
pop
cmps
add
mov
and
add
xchg
add
lea
inc
ftst
or
pop
dec
stos
aad
inc
add
mov
cwde
mov
loop
and
idiv
sbb
mov
out
imul
aas
lock
mov
xor
outs
mov
or
sub
mov
push
add
adc
loope
pop
mov
dec
dec
or
push
or
add
pop
and
push
pop
cmps
inc
or
or
or
adc
loopne
xchg
mov
cmps
ret
sub
loopne
addr16
add
icebp
mov
and
mov
pop
and
nop
fdivr
mov
mov
jo
ftst
iret
hlt
mov
in
push
clc
ins
fcomp
(bad)
sub
(bad)
mov
mov
xchg
add
cs
inc
jnp
pop
and
mov
pushf
movs
pop
add
or
aas
bound
aas
or
push
mov
test
fld
lock
das
xchg
mov
push
in
mov
add
push
jmp
test
mov
shl
sub
xchg
dec
push
mov
pop
rcl
mov
ret
loope
push
jae
mov
sbb
cmp
inc
hlt
xor
sub
test
or
sbb
mov
add
ins
fnsetpm(287
jmp
xor
iret
xor
and
inc
ss
aam
in
and
fxam
mov
pop
add
scas
ins
shl
or
xor
and
mov
call
movs
sub
mov
loopne
jo
cs
add
call
call
sbb
xchg
and
xor
in
shr
or
fadd
adc
(bad)
jle
cmp
push
sahf
mov
inc
mul
jne
push
rcl
mov
and
leave
inc
enter
dec
cs
xor
adc
data16
add
push
dec
cs
cmps
jecxz
pop
mov
push
and
movaps
addr16
out
(bad)
jmp
scas
test
jmp
mov
shl
or
inc
mov
dec
sar
aad
nop
add
and
inc
or
ss
int
test
adc
sub
pusha
call
call
dec
mov
add
or
or
pop
inc
retf
push
aas
xor
sub
adc
push
pop
nop
add
mov
rcr
int3
or
dec
sub
jne
mov
add
(bad)
mov
fst
jbe
movs
push
add
sub
push
shr
add
or
add
xor
push
adc
sahf
ins
rcr
clc
scas
lea
add
inc
enter
and
hlt
mov
std
rcr
inc
call
ja
add
jo
sbb
aam
cmp
push
xor
add
adc
pop
icebp
mov
jne
(bad)
call
mov
clc
retf
push
xchg
pusha
inc
fucomi
add
sub
mov
push
jmp
adc
cmp
cmps
jmp
adc
in
in
loop
push
call
ret
dec
and
xchg
shl
and
inc
not
inc
sbb
and
fwait
aad
push
adc
sub
dec
sahf
(bad)
adc
dec
mov
xchg
hlt
adc
pop
cmps
sub
sbb
lea
dec
lock
mov
cmc
aad
sbb
mov
pop
loopne
imul
ds
in
jecxz
lock
fldcw
xor
pop
clc
ds
sbb
push
out
bound
(bad)
cmps
fld
stos
xor
cld
daa
push
xlat
xor
dec
mov
rcl
aas
inc
dec
iret
jnp
pop
pop
push
push
push
iret
repz
mov
aam
jns
loope
clc
or
inc
push
cs
sahf
out
push
fs
sahf
out
sahf
call
jns
jnp
(bad)
adc
and
aas
test
pop
ins
cmc
lods
mov
mov
jne
js
mov
cmp
mov
inc
jnp
mov
dec
push
leave
and
inc
jb
shl
sbb
mov
inc
inc
dec
push
mov
mov
loopne
shl
ret
loopne
inc
mov
(bad)
idiv
sbb
iret
or
mov
inc
pop
shl
add
inc
neg
jmp
sbb
xchg
loopne
jmp
pop
in
jmp
arpl
mov
pop
(bad)
mov
sbb
cmp
jmp
shl
xchg
in
in
push
std
add
and
ret
in
ret
add
add
(bad)
sub
mov
jns
(bad)
mov
scas
lea
xor
scas
clc
nop
mov
or
dec
and
or
jb
add
jp
inc
call
pop
xchg
outs
std
fiadd
add
mov
test
fdivr
test
push
cmp
adc
jle
fisttp
gs
mov
lock
or
lock
imul
in
lock
push
mov
xchg
fstp
adc
jp
jmp
ret
shr
cmp
imul
add
jmp
jmp
call
arpl
push
in
loope
popa
adc
add
jle
mov
loopne
xor
pushf
add
fimul
xor
loope
nop
loop
or
adc
and
inc
call
pop
cld
scas
xchg
xchg
ret
cmp
and
leave
adc
mov
das
or
iret
or
iret
add
and
ror
xor
or
pop
jl
or
or
loopne
nop
or
pusha
pop
repnz
sbb
gs
fcomp
mov
ss
pop
cmp
enter
mov
or
pop
mov
test
dec
or
and
sti
fs
jns
adc
xchg
and
or
dec
push
inc
adc
mov
adc
or
jbe
or
fistp
mov
inc
jb
push
dec
bound
add
dec
jnp
mov
inc
lea
or
push
jae
pop
xchg
pop
jbe
aas
retf
lods
int3
jns
popa
repz
mov
xor
pop
dec
cmps
jns
ret
das
mov
outs
mov
or
outs
ins
or
cs
ja
mov
or
pop
add
xchg
stos
and
emms
inc
gs
test
rcl
js
rol
or
pusha
adc
ss
cmc
movs
or
or
fidiv
dec
lods
retf
movs
sar
mov
or
mov
cdq
inc
add
fiadd
add
(bad)
or
or
gs
scas
test
add
(bad)
rol
scas
cmp
add
push
pushf
int3
test
sbb
cmps
test
popa
sbb
jns
cwde
in
mov
loopne
loopne
jecxz
push
dec
in
push
jle
or
push
sbb
outs
adc
mov
pop
sbb
xor
dec
push
icebp
faddp
cmp
and
pop
or
adc
add
in
pop
nop
jnp
daa
inc
lods
cld
loope
cs
dec
pop
sub
push
adc
and
add
xor
mov
in
push
push
pop
shl
scas
js
adc
ror
inc
or
cmp
cmps
push
xor
pusha
lds
xchg
push
fs
loope
push
add
xor
rcl
xchg
popa
and
ss
nop
xor
fnsave
inc
outs
fnstsw
jl
pushf
jge
cmp
pop
dec
xchg
mov
or
xchg
lock
xchg
pop
pand
outs
add
mov
inc
scas
mov
test
adc
add
sub
fild
jbe
loop
aas
or
in
pop
ror
mov
mov
mov
add
std
adc
and
push
lea
xor
mov
pop
push
xor
pop
test
pop
imul
mov
mov
or
mov
pop
sbb
test
test
clc
leave
lds
daa
add
hlt
inc
inc
call
jmp
xchg
dec
and
dec
lock
push
or
or
adc
test
js
xor
inc
jmp
fcmove
lea
mov
dec
inc
cmp
aaa
sbb
pop
enter
dec
or
ins
(bad)
xor
inc
jns
jns
fs
aaa
and
inc
push
add
retf
dec
jo
dec
push
call
dec
imul
and
cmp
push
fistp
mov
icebp
jo
jle
dec
or
inc
icebp
pusha
jp
cmps
not
push
icebp
fs
push
pusha
adc
(bad)
mov
fstp
or
ret
pop
lock
mov
scas
dec
jmp
cmp
mov
sbb
adc
imul
pop
dec
sahf
fucomp
(bad)
loop
pushf
in
ret
push
cmp
adc
nop
popf
jne
jle
mov
mov
fs
out
scas
push
pop
push
sub
out
jle
mov
aas
dec
mov
add
icebp
or
mov
jl
mov
jl
mov
cmp
ret
mov
addr16
fcomp
out
cmp
in
mov
sub
or
arpl
in
(bad)
mov
pop
lock
fwait
dec
int3
out
pop
cld
das
add
add
push
inc
and
test
inc
ins
jb
add
xor
movs
in
andps
sub
cmp
jmp
inc
ret
pop
mov
movsx
das
inc
cmp
nop
fldenv
xlat
pop
sub
lods
out
pusha
out
add
mov
jb
mov
xor
inc
js
pop
inc
(bad)
pop
sub
cmp
add
fcomp
xchg
sub
add
aaa
es
sbb
cmp
sbb
enter
sbb
cwde
(bad)
xchg
inc
stos
loopne
call
jns
mov
(bad)
fldcw
loop
xor
jl
inc
inc
cmps
and
popa
imul
inc
je
and
push
sbb
or
rcl
stos
mov
jmp
pandn
cwde
ss
jmp
adc
gs
imul
sub
mov
or
pop
jl
inc
jo
jb
adc
addr16
jmp
jmp
fild
ss
adc
call
popf
xor
add
pop
push
rcr
int
add
push
jg
in
pop
lock
jg
(bad)
inc
or
push
imul
movs
out
cmp
inc
shr
(bad)
lods
in
popa
fadd
mov
push
push
or
loope
cld
call
repz
cmp
push
adc
in
and
cmp
in
in
xchg
or
rol
or
mov
cmp
xlat
pop
sub
jo
addr16
inc
jo
mov
pop
xor
ss
pop
adc
xor
ss
inc
adc
sub
inc
add
pop
add
cmc
ss
jmp
xor
out
test
mov
iret
sub
fild
out
addr16
or
and
fsub
popa
pop
push
push
dec
shr
ins
jns
out
cmp
mov
mov
xchg
fsubr
js
pop
punpckldq
adc
add
sub
inc
or
or
outs
xor
adc
sbb
inc
jne
xor
jo
xor
add
fild
clc
pop
ror
(bad)
ja
mov
sbb
pop
pop
and
mov
inc
js
xchg
and
jns
sbb
out
dec
adc
les
ins
inc
mov
pushf
cpuid
xor
mov
fst
mov
pop
and
sbb
ins
shl
fstp
dec
rsqrtps
repnz
or
push
adc
xor
iret
add
fild
xor
and
shl
or
cmp
cmp
dec
mov
xchg
or
or
int3
xchg
inc
jo
mov
das
ficom
sbb
outs
add
out
pop
inc
int3
xchg
fwait
or
push
cs
xchg
les
add
jbe
rsm
xchg
lahf
clc
inc
xor
push
outs
imul
scas
push
lock
xor
dec
inc
cmp
pop
pusha
packsswb
adc
pmullw
mov
pop
mov
test
xor
test
div
sar
xor
pop
push
inc
jne
push
inc
rol
outs
xchg
out
cmp
and
mov
xchg
inc
cmps
(bad)
or
push
xchg
add
adc
dec
cmp
xlat
pop
sub
inc
add
pop
test
mov
fmul
scas
pop
mov
and
popa
ins
(bad)
rol
inc
pushf
clc
cdq
adc
adc
mov
je
jp
hlt
adc
push
add
imul
popa
out
pop
inc
push
aaa
cmp
xlat
sar
dec
lahf
sub
dec
add
pop
out
xchg
add
sbb
popa
bound
test
push
cmp
fucomi
inc
dec
pop
sbb
and
rol
and
test
pop
push
pusha
stos
loopne
adc
mov
mov
das
(bad)
mov
inc
jo
and
pop
and
inc
imul
mov
push
in
fwait
or
adc
cld
pop
inc
dec
out
aam
fidivr
xchg
and
jb
mov
cld
mov
push
ror
cwde
std
lahf
or
mov
pop
movs
rsm
test
mov
cwde
std
cdq
fs
out
jae
and
xchg
and
sub
xchg
(bad)
and
pusha
pop
add
inc
aas
cwde
push
into
sbb
and
add
sub
in
add
out
cmp
xor
inc
or
sub
cmp
dec
add
push
or
push
lock
add
dec
xor
cmp
ja
ret
xchg
mov
fcom
in
add
add
xchg
cmp
lahf
adc
dec
pop
push
ss
add
cmps
jbe
cmp
loopne
mov
xor
add
or
dec
adc
mov
vpand
jne
fwait
sub
push
addr16
in
mov
bound
iret
arpl
jo
rcl
push
xor
jb
pop
(bad)
xor
push
add
inc
or
pop
push
out
loope
cwde
adc
sbb
sbb
jae
add
cmp
xor
add
daa
xchg
xchg
or
(bad)
mov
mov
mul
push
aas
or
inc
mov
outs
mov
cmp
scas
jg
inc
rcl
pop
jno
dec
push
or
push
ja
aaa
aas
js
inc
xchg
inc
pop
cs
add
add
sysenter
add
fild
cli
or
inc
add
add
add
jo
sbb
imul
ja
vpcmov
add
fs
minps
test
mov
inc
add
or
in
loop
cmp
sub
push
xchg
movs
mov
ja
jbe
aam
add
rol
ins
mov
xchg
fist
mov
lahf
dec
xlat
nop
sub
cmp
inc
mov
mov
fsubr
sbb
fwait
xchg
cmp
sbb
push
out
ss
inc
xor
fidiv
push
xor
inc
mov
xchg
sbb
aaa
sbb
hlt
(bad)
dec
pop
inc
aas
(bad)
mov
and
cmps
jae
mov
mov
aaa
cmp
ja
cmp
add
inc
xor
push
push
sub
pop
sub
xor
push
push
xor
mov
inc
arpl
fsub
jae
dec
inc
test
sti
cmovae
xor
pop
aaa
pusha
mov
mov
add
lahf
pusha
xchg
mov
loopne
inc
inc
imul
scas
and
out
add
jnp
dec
out
lds
das
xor
xor
pop
add
shr
xchg
xchg
add
dec
inc
pop
push
ins
xor
in
push
add
das
aas
and
dec
push
cmp
sbb
(bad)
sub
pop
or
(bad)
mov
jp
rcl
push
cmps
inc
or
pop
xlat
mov
loop
repz
xor
outs
push
jo
pop
lds
aam
outs
xor
jbe
add
outs
add
push
sub
aaa
add
push
pop
das
scas
sub
dec
add
daa
outs
iret
mov
add
xor
les
jo
rdmsr
adc
mov
addr16
fwait
or
add
test
xor
add
xor
push
cdq
push
and
push
mov
add
push
adc
sar
gs
inc
add
pop
and
aaa
inc
add
pusha
add
aaa
(bad)
outs
cs
jl
dec
xor
imul
add
and
cmp
fbstp
inc
mov
mov
ins
aaa
outs
add
jmp
cmp
mov
dec
mov
rcr
sub
sub
add
jge
jl
fbstp
add
dec
add
sub
inc
jg
xor
aaa
or
inc
out
ins
aaa
adc
add
cmp
push
mov
sub
adc
daa
xor
xor
push
addr16
inc
inc
aas
xor
jo
add
dec
pusha
rol
push
rol
daa
aaa
iret
add
rcr
addr16
mov
(bad)
push
xor
xor
lds
xor
and
add
jmp
imul
push
sub
ss
aaa
add
neg
or
les
ss
out
add
cmps
inc
retf
sbb
sub
jae
and
mov
cmova
dec
add
outs
rol
aas
aaa
or
lahf
sub
jg
cmps
or
mov
ja
xchg
cmp
(bad)
arpl
add
pop
aaa
stos
sub
aas
jb
outs
ror
and
and
fs
cmp
test
pop
xchg
movs
les
ins
sti
imul
sub
test
add
push
dec
and
pop
out
and
mov
pop
xchg
or
add
xchg
and
sbb
jg
rol
(bad)
(bad)
push
jnp
xlat
out
dec
test
sbb
pop
cwde
xor
js
add
daa
out
xor
out
xor
test
lahf
inc
repz
outs
adc
push
addr16
fwait
sbb
adc
adc
inc
shl
xor
pop
pop
push
xor
jg
pop
ss
add
test
or
and
mov
stc
mov
pop
add
test
dec
cmp
or
mov
dec
out
outs
iret
js
jo
push
mov
rcr
(bad)
fcmovnb
mov
mov
scas
fcmove
cmp
xlat
popa
or
xor
or
jg
xor
push
xchg
mov
pop
xor
xor
inc
shl
ja
mov
add
pop
add
pop
jno
ror
push
xor
adc
data16
popa
add
inc
lods
stos
jb
pop
scas
add
add
dec
pop
cmp
pop
aas
or
(bad)
aaa
mov
push
mov
mul
cmps
inc
add
add
inc
aam
rcl
inc
dec
dec
xor
xor
outs
inc
stos
xlat
xchg
daa
push
sbb
and
test
loope
shl
cmp
scas
sub
sbb
sahf
pop
xchg
cmp
xor
xchg
mov
adc
cmp
retf
ror
loope
daa
not
rcl
push
arpl
jb
adc
xor
mov
sbb
add
sbb
dec
bound
mov
test
xlat
pop
or
push
or
mov
inc
cmps
(bad)
ficom
outs
aam
push
nop
cmps
jg
add
pop
or
add
pop
(bad)
push
outs
mov
adc
jo
bound
ja
sub
jmp
outs
xor
sub
outs
xchg
sub
xor
dec
inc
imul
addr16
ja
push
mov
test
xor
jg
mov
jg
add
popa
ss
daa
ss
push
sbb
mov
mov
xor
xor
push
add
rol
add
push
scas
add
aas
js
and
xor
pop
shl
out
push
cmps
call
xor
add
add
jmp
mov
lahf
cmp
push
popa
je
dec
xor
dec
mov
sar
aaa
fadd
lahf
xor
or
add
fdiv
add
and
dec
idiv
add
aas
add
lahf
push
add
punpckhbw
in
loopne
dec
fstp
or
sub
stos
in
xor
sbb
mov
and
dec
push
scas
add
repz
push
ja
fisubr
aas
push
mov
mov
cmp
add
xchg
mov
xor
or
scas
(bad)
jo
push
xor
xor
jb
jno
aas
cmp
xor
xor
xlat
xor
jne
jb
xor
xchg
pop
adc
xlat
xor
loopne
enter
pop
and
add
fwait
mov
dec
shr
inc
hlt
(bad)
dec
jnp
dec
out
sti
jmp
iret
pop
loopne
add
dec
xor
xor
bound
pop
outs
mov
scas
inc
(bad)
push
popa
add
add
aam
sub
inc
test
fild
add
cmps
or
jg
or
xchg
mov
xor
inc
xor
adc
add
add
pusha
push
rdpmc
iret
retf
xor
adc
outs
or
pusha
cmovno
out
jmp
(bad)
push
inc
sti
xor
xor
xor
jae
xor
pop
fistp
outs
inc
dec
push
sbb
mov
or
pop
rcl
add
or
dec
mov
and
add
and
and
dec
dec
and
pop
aaa
xchg
pop
sbb
aaa
dec
inc
push
and
add
push
aas
add
pusha
adc
cmp
iret
inc
pop
mov
lahf
mov
dec
iret
and
mov
pandn
adc
(bad)
sub
outs
stos
mov
xadd
dec
js
call
pop
xor
ja
dec
pop
shl
pop
or
jb
jb
cmp
aam
lods
push
into
cmp
adc
mov
out
fdiv
or
cmp
nop
xchg
mov
outs
add
add
ja
aam
stos
xor
pop
adc
inc
add
mov
add
iret
adc
or
dec
aas
cmp
test
shl
cmps
scas
mov
inc
daa
ror
(bad)
aas
mov
ins
cmps
push
xor
mov
ins
(bad)
rol
fwait
out
push
add
jecxz
cdq
sbb
aas
cmps
mov
push
mov
stos
test
adc
and
add
add
or
icebp
add
add
adc
out
inc
xor
ja
inc
rcl
add
or
daa
bound
pop
jae
iret
rcr
pcmpeqd
arpl
jo
aaa
and
sub
outs
add
jg
lods
sbb
aaa
(bad)
aas
dec
scas
dec
cmps
mov
cmp
dec
push
bound
adc
mov
sub
call
rol
adc
inc
lods
mov
lahf
loopne
adc
aas
inc
inc
jecxz
pop
inc
iret
push
jmp
dec
dec
ja
adc
pop
into
push
or
xor
cmp
clc
outs
and
mov
add
popa
aas
adc
add
and
(bad)
sub
jo
xlat
or
rol
daa
popa
mov
add
out
rcr
test
mov
out
lock
lock
into
push
pop
xor
adc
scas
or
adc
and
push
test
and
push
pop
(bad)
mov
mov
sub
rcr
das
(bad)
lea
inc
imul
add
pop
ins
pop
mov
or
push
cmp
add
add
(bad)
iret
mov
add
add
push
ss
fisttp
aaa
sub
outs
out
dec
adc
cmp
adc
aas
dec
add
mov
scas
pop
dec
pop
or
mov
iret
mov
out
pop
push
adc
sti
jo
test
out
inc
cmp
loope
dec
cmp
add
dec
or
inc
out
xchg
outs
inc
add
scas
ret
cmp
jne
sub
pop
test
xchg
cmp
push
inc
je
addr16
push
xlat
push
mov
cmps
xor
dec
push
jp
ja
data16
je
dec
add
xor
xlat
sbb
add
bound
(bad)
jg
pop
inc
fistp
inc
add
ss
sbb
arpl
push
daa
adc
xchg
neg
push
pop
es
pop
test
pop
in
push
add
or
dec
je
outs
add
push
lods
add
dec
outs
and
push
add
dec
int3
les
jg
(bad)
xchg
inc
mov
arpl
arpl
sub
dec
sub
add
pop
dec
ins
or
je
enter
xchg
scas
cmps
mov
pop
inc
mov
inc
xor
add
push
jb
mov
das
cmp
cmp
xor
div
cmps
outs
mov
mov
mul
cmp
out
dec
scas
nop
xor
ja
out
mov
das
or
stos
sub
or
push
enter
aaa
cmp
cmp
ja
xor
call
out
cdq
or
inc
cmp
les
stc
cmp
xor
inc
repnz
imul
je
dec
sub
mov
push
sbb
pop
dec
inc
(bad)
mov
or
inc
stos
in
div
dec
ins
div
xor
pop
div
outs
xchg
sub
push
(bad)
mov
add
(bad)
cmp
xor
sub
pop
arpl
call
iret
and
add
popa
xor
les
mov
adc
xor
out
cdq
pop
push
mov
ror
xlat
push
in
div
and
and
(bad)
dec
inc
push
pop
xchg
lock
cmp
adc
and
add
xor
ins
inc
cmps
xor
and
bound
add
(bad)
clc
sub
add
add
dec
inc
test
je
or
xlat
jae
int3
(bad)
cmp
pop
out
daa
xchg
sbb
adc
aaa
daa
xchg
mov
add
inc
in
popa
add
xor
cmps
xchg
cmps
xchg
in
cdq
pop
iret
xor
lods
ror
(bad)
jo
sbb
adc
xor
xchg
xor
cmp
aaa
aaa
cmp
xchg
aaa
aaa
bound
cmp
aaa
ss
mov
add
xor
scas
in
xor
push
nop
xor
mov
cmp
xor
movs
imul
mov
idiv
xor
enter
(bad)
xor
xor
cmp
xor
xor
and
xor
adc
ss
jb
inc
ss
and
aam
adc
cmp
cmps
cmp
xchg
add
jmp
adc
aaa
out
cmp
lea
out
lahf
adc
mov
inc
mov
shl
dec
aaa
add
stos
sbb
mul
in
stc
imul
inc
cmp
cmp
mov
mov
mov
call
pop
scas
(bad)
cmps
cmp
xor
fimul
xor
xchg
cmps
xor
xor
shl
add
ss
pop
xor
test
aaa
mov
div
add
push
fcomp
test
xor
xchg
test
jae
xor
add
mov
sbb
out
(bad)
arpl
lds
inc
pop
push
cmps
sub
addr16
fsub
dec
dec
ror
test
aas
push
pusha
cs
push
dec
lahf
mov
addr16
pusha
lahf
push
dec
push
lahf
mov
add
out
aas
push
mov
inc
jae
add
dec
push
or
bound
jno
inc
mov
aad
or
fsub
push
iret
xchg
xchg
push
xor
add
xchg
fadd
inc
lahf
or
ins
mov
inc
pop
jo
pop
push
push
cmps
xor
xchg
jl
add
add
push
jb
pop
push
push
dec
pop
aam
inc
es
retf
push
ret
out
jg
add
out
fld
mov
imul
add
test
push
imul
sahf
dec
add
xchg
and
cmp
ins
fwait
arpl
xchg
pop
adc
iret
ja
add
shl
push
shl
mov
xchg
sbb
push
add
aaa
cmps
inc
test
out
push
outs
in
add
push
dec
xchg
mov
xor
out
add
dec
inc
inc
pop
aaa
sub
sbb
cmp
sbb
or
push
sub
lock
jmp
jne
jb
outs
pop
and
inc
aas
cmp
xor
xor
les
or
cmp
test
dec
adc
inc
pop
rcl
adc
daa
imul
add
mov
shl
add
mov
pop
and
leave
add
xor
popf
sbb
lock
xchg
stos
outs
xor
jb
dec
adc
xor
push
enter
aaa
dec
xor
aam
cmps
addr16
stos
sub
or
xor
(bad)
and
(bad)
jae
sub
gs
xor
push
xchg
stos
xor
daa
and
sub
and
xor
xor
and
and
dec
scas
ss
or
dec
scas
xchg
and
aaa
xor
mov
mov
cmp
jmp
and
scas
mov
pop
aaa
movs
mov
add
and
loopne
dec
cmp
ja
(bad)
adc
shl
ja
pushf
inc
add
xchg
dec
cmps
pushf
add
push
mov
jg
add
inc
aas
dec
dec
test
test
pop
(bad)
push
mov
mov
scas
xor
xor
or
adc
addr16
and
movs
dec
adc
mov
push
pop
jle
inc
xor
outs
shl
add
push
add
inc
pop
lods
mov
sub
mov
out
iret
xor
adc
(bad)
call
mov
dec
mov
inc
mov
mov
add
pop
daa
mov
je
add
push
fs
sub
sub
cmp
cmps
xchg
adc
loope
adc
jmp
push
add
adc
jmp
ja
jno
lods
jbe
daa
sbb
sti
test
mov
test
cmps
push
das
lahf
lock
ja
sti
dec
mov
sub
cmps
mov
ret
pop
sub
mov
sbb
pop
mov
xor
push
push
lock
xchg
iret
ds
shl
push
pop
pop
out
dec
lea
add
mov
sub
iret
xchg
add
mov
out
cli
movs
and
add
pop
add
sub
jmp
or
sbb
ret
xor
scas
jle
add
xchg
je
inc
jo
sub
inc
sbb
mov
idiv
inc
pop
xchg
movs
and
pop
movs
pop
dec
cmp
xor
lds
call
or
pop
mov
mov
mov
mov
add
lods
sbb
bound
inc
sub
pop
inc
rcl
mov
push
push
push
(bad)
xor
ror
pop
ja
xchg
ins
dec
popa
add
add
aad
sub
test
inc
ror
pop
in
aaa
inc
xor
jae
ins
add
sbb
and
dec
add
xorps
sti
imul
push
je
out
pop
in
sub
imul
pop
and
sbb
(bad)
fist
imul
mov
or
push
inc
xchg
push
js
ds
or
adc
pop
push
fsubr
xchg
xchg
sar
xor
mov
adc
push
aas
xor
das
sub
adc
dec
inc
lds
stos
mov
dec
stos
addr16
push
ret
aaa
aas
imul
cmp
add
dec
add
xor
push
mov
xlat
dec
mov
aas
xor
mov
inc
xor
add
jo
popa
xlat
add
and
pop
out
push
shl
test
jo
xchg
sub
pop
inc
bound
in
test
add
add
add
pop
dec
mov
add
(bad)
push
xor
mov
xor
movs
xor
adc
push
xchg
inc
jae
and
inc
push
shl
push
repz
push
nop
popa
lahf
push
inc
(bad)
inc
lock
jge
imul
add
imul
rcl
rol
mov
ud0
mov
data16
(bad)
mov
pop
push
sbb
or
imul
popa
or
sbb
addr16
mov
add
adc
ins
int
mov
sub
mov
imul
mov
xchg
test
dec
inc
mov
add
fadd
inc
push
push
dec
sub
and
je
dec
pop
fadd
mov
sbb
push
pusha
cmp
inc
iret
dec
scas
push
push
sub
nop
imul
cmp
out
push
rol
adc
sbb
xchg
and
push
push
or
arpl
and
lahf
sbb
or
jne
dec
dec
imul
cmps
shl
pop
xchg
and
jo
pop
jae
or
mov
or
sbb
or
dec
aas
imul
pusha
mov
call
xor
push
and
inc
push
and
inc
xchg
or
xchg
add
pop
pop
push
fidiv
mov
add
add
movs
xor
dec
movs
pop
bound
iret
fucomip
mov
cmp
sub
pop
pop
push
push
inc
xchg
mov
add
daa
and
or
push
inc
daa
pop
ja
fcom
mov
pop
push
add
adc
xor
mov
fsub
in
xchg
pop
aas
cmp
inc
test
sub
pop
or
fist
outs
xchg
pusha
je
cs
aas
dec
or
xor
mov
test
pusha
mov
adc
xor
aaa
punpckhbw
pusha
jg
push
nop
cmp
aas
pop
psubusb
mov
scas
sbb
ja
fwait
lods
inc
adc
mov
or
or
add
mov
dec
iret
sub
pop
adc
dec
and
dec
jge
jecxz
jbe
add
and
aam
iret
cmp
pop
and
cmp
add
and
inc
pop
lahf
inc
mov
iret
inc
bound
jb
fnstsw
sbb
mov
aas
lock
sub
adc
and
ins
sbb
pusha
add
ror
dec
push
sysret
and
mov
xor
jb
pop
and
xor
rcl
pop
and
leave
xor
xor
xor
and
(bad)
out
mov
sti
jb
mov
xor
sub
mov
jnp
fcomip
les
push
test
loop
add
xchg
fmul
adc
(bad)
push
sbb
jae
sbb
inc
pusha
mov
sar
rcl
add
(bad)
or
pusha
adc
push
(bad)
or
ret
(bad)
xlat
mov
rol
mov
mov
push
inc
arpl
ror
fld1
ret
out
push
jb
sbb
jg
mov
repz
add
sbb
mov
add
cmp
pop
mov
xchg
mov
cmovge
push
inc
add
inc
pop
cmps
and
add
adc
call
and
(bad)
dec
jae
add
outs
add
dec
dec
push
mov
dec
pusha
cmp
inc
fisttp
xchg
push
push
xchg
dec
mov
fdivp
sti
xchg
push
sub
ins
jbe
or
xrelease
fidiv
(bad)
enter
jmp
add
(bad)
outs
test
add
mov
mov
aas
or
ret
jmp
(bad)
aaa
xchg
push
lods
jnp
stos
sub
loopne
xor
sbb
pop
xor
(bad)
xor
inc
push
ja
add
aas
add
ja
pop
push
add
pop
and
add
int
xor
ins
and
mov
and
xor
sub
cmp
push
dec
or
or
dec
mov
or
jb
(bad)
pop
add
add
push
add
lahf
das
sbb
add
adc
aaa
or
jg
inc
sbb
dec
inc
cs
cmps
xor
inc
cs
xor
cs
cs
cs
dec
ja
push
daa
push
sub
push
cmps
mov
lods
push
ja
bound
xchg
fwait
add
mov
jl
xlat
mov
scas
add
out
jmp
inc
test
mov
nop
add
mov
pop
pop
cmp
cmp
adc
sar
mov
add
inc
cmp
and
add
push
mov
or
pop
jno
cmp
mov
scas
cmp
xor
and
pop
xchg
loope
push
shl
sub
popa
add
cli
dec
sahf
imul
xchg
(bad)
in
fmul
out
xor
sub
sbb
imul
inc
cld
xchg
adc
mov
adc
imul
pusha
push
ss
mov
pop
sbb
push
ins
and
add
popa
arpl
xchg
out
ins
ins
(bad)
and
add
and
pop
(bad)
and
push
sar
xchg
jge
lods
cld
or
lock
inc
jns
xchg
fild
xchg
and
mov
dec
sbb
xor
sub
jnp
lds
add
std
mov
test
clc
adc
ret
push
adc
ins
loopne
xor
fwait
cmp
mov
aas
dec
pop
xchg
sub
mov
mov
arpl
(bad)
test
loope
dec
push
(bad)
mov
mov
and
adc
mov
rol
(bad)
push
sbb
xchg
cmc
cmp
push
pop
sbb
mov
stos
xor
call
jmp
push
ins
cmps
push
inc
mov
(bad)
arpl
push
ds
pop
or
retf
add
ins
xchg
or
cmp
jne
fwait
scas
out
push
cmp
(bad)
lods
jne
sti
pop
fidivr
outs
cli
dec
adc
addr16
push
xlat
sbb
jbe
sbb
jne
sti
add
call
push
jnp
cli
cmps
adc
add
cs
jle
pusha
ss
int3
push
dec
adc
push
fistp
jne
push
in
ds
hlt
hlt
push
inc
push
dec
lock
lock
inc
sbb
mov
dec
fsub
add
mov
jno
mov
or
ja
sbb
inc
inc
test
dec
jg
add
pop
icebp
jne
mov
sbb
(bad)
ss
pop
mov
clc
adc
cmp
adc
cld
mov
pop
ror
mov
cmp
push
xchg
sbb
out
xlat
frstor
mov
cs
and
jmp
xchg
dec
xchg
imul
or
mov
dec
je
jne
or
or
sub
pop
lea
inc
inc
dec
jmp
xor
scas
cli
or
adc
je
mov
add
cvtdq2ps
pushf
pushf
pushf
pop
pop
inc
inc
pushf
pushf
pushf
pushf
inc
inc
inc
inc
pushf
pushf
pushf
pushf
inc
inc
dec
dec
pushf
pushf
pushf
pushf
dec
dec
dec
dec
pushf
pushf
pushf
pushf
dec
dec
xor
pushf
pushf
pushf
pushf
xor
xor
pushf
pushf
pushf
pushf
ss
cmp
pushf
pushf
pushf
pushf
cmp
cmp
pushf
pushf
pushf
pushf
ds
and
pushf
pushf
pushf
pushf
and
and
pushf
pushf
pushf
pushf
es
sub
pushf
pushf
pushf
pushf
sub
sub
pushf
pushf
pushf
pushf
cs
adc
pushf
pushf
pushf
pushf
adc
adc
pushf
pushf
pushf
pushf
push
pop
sbb
pushf
pushf
pushf
pushf
sbb
sbb
push
pop
clc
pushf
push
xor
js
xlat
push
cmp
mov
div
mov
dec
dec
dec
test
aam
inc
pusha
mov
push
dec
adc
popa
or
(bad)
dec
push
and
push
xchg
inc
sbb
push
jle
jne
ins
fs
sbb
add
pop
shl
dec
dec
inc
jle
sbb
or
adc
and
sbb
dec
into
pop
mov
and
dec
outs
bswap
sbb
ds
add
loop
add
sub
adc
test
sbb
(bad)
addr16
popa
add
push
or
jns
jo
cs
sub
sub
cmp
retf
or
add
or
cmps
imul
jecxz
loopne
cmp
loopne
loope
mov
rol
or
sbb
cmp
stc
mov
dec
outs
cwde
inc
data16
jne
je
popf
dec
mov
movzx
xor
fdivr
or
mov
test
dec
inc
dec
or
ins
test
jno
in
popa
je
push
sar
sbb
push
popa
jbe
push
outs
stos
mov
inc
inc
cmp
mov
lahf
xor
js
jne
xor
pop
ss
dec
sbb
adc
sub
xchg
mov
ins
outs
bound
mov
xchg
data16
fs
dec
mov
and
sub
jecxz
or
mov
mov
mov
cs
and
jne
pop
xor
xchg
outs
lahf
rol
imul
gs
ins
popa
cmp
adc
xor
or
dec
add
dec
push
push
push
fwait
je
pop
or
mov
and
and
aaa
dec
dec
mov
shl
enter
and
dec
push
xchg
dec
sbb
sub
cmovs
and
mov
sbb
leave
js
mov
in
out
jg
popf
cmp
jg
movzx
dec
mov
cmp
jne
rcl
sbb
xchg
test
shl
cwde
mov
and
mov
cmp
ins
mov
std
add
mov
jmp
cmp
mov
jbe
scas
inc
scas
mov
or
sti
(bad)
mov
add
bound
push
fadd
sbb
push
jne
mov
fbstp
mov
push
js
repnz
and
loop
sar
or
ss
mov
or
xor
out
jle
in
adc
mov
int3
sub
dec
in
inc
into
xor
mov
int3
inc
xchg
je
jge
in
push
inc
enter
and
mov
dec
jmp
inc
mov
push
xor
push
call
pusha
mov
dec
les
iret
das
adc
test
jge
sub
ins
popa
and
jnp
mov
ins
mov
mov
in
cmp
or
nop
in
sar
arpl
inc
loopne
and
jecxz
pop
enter
jmp
sbb
sbb
add
sub
inc
mov
push
cld
or
icebp
les
div
inc
(bad)
sti
aam
sti
sti
and
and
inc
dec
jne
pop
hlt
nop
mov
iret
sbb
sub
clc
cld
inc
inc
imul
xor
cld
call
shl
mov
or
jl
push
inc
mov
std
cmp
dec
ja
rcr
inc
xor
adc
cwde
or
adc
ins
xchg
fs
or
or
and
mov
stc
inc
and
fst
push
push
or
push
aas
imul
lock
xchg
in
pushf
imul
adc
fdiv
enter
hlt
repnz
mov
xor
or
std
mov
mov
movhps
add
icebp
jmp
cmp
jl
sub
cld
sti
ins
nop
imul
add
jge
or
push
das
mov
fscale
xchg
cmp
mov
add
or
cmc
add
mov
arpl
in
pop
push
mov
mov
das
push
add
add
in
fstp
(bad)
shl
xor
sbb
cmp
pop
or
jns
xchg
push
pop
sbb
sahf
add
pop
pusha
add
xchg
das
jbe
pop
mov
mov
xor
push
xor
scas
ror
inc
mov
pusha
movs
fcomip
cmp
loopne
fisubr
fisttp
mov
in
inc
add
in
jmp
push
hlt
inc
jmp
movs
fstp
fwait
pop
in
push
dec
out
(bad)
hlt
outs
ss
dec
xor
fadd
mov
xor
in
mov
pop
(bad)
jmp
push
rcr
push
add
xor
and
jo
push
xchg
or
push
in
xor
test
cwde
mov
add
bound
lea
xor
sub
xor
and
dec
cmp
push
rcr
mov
xchg
pop
adc
dec
ins
and
mov
add
leave
shl
mov
fidiv
aas
jbe
push
xchg
out
sub
shl
fwait
bound
xor
and
mov
enter
enter
hlt
sbb
adc
xor
dec
jle
sub
pop
dec
xor
cmp
nop
cmp
or
std
nop
jmp
sub
sbb
xor
push
cmp
or
les
adc
pop
or
push
adc
jl
fsubr
sbb
and
lock
inc
jmp
pop
sbb
neg
es
loopne
jno
pop
movs
mov
mov
adc
mov
inc
mov
aaa
aam
aad
icebp
mov
mov
in
cmp
jne
xchg
jmp
pop
jmp
pop
push
stc
fistp
ja
ins
push
imul
push
das
adc
imul
sbb
mov
jno
inc
sbb
pop
and
mov
sub
inc
fild
inc
dec
sbb
add
and
mov
fcomp
mov
mov
and
xchg
cmp
pushf
cmp
pop
fsub
sbb
cmp
arpl
mov
out
add
out
xor
clc
jbe
pushf
sub
xor
mov
shl
dec
gs
lods
lock
inc
lods
loopne
and
inc
test
lock
(bad)
(bad)
push
movs
std
movs
(bad)
enter
jge
in
jge
or
sbb
ss
mov
adc
fimul
add
fidivr
push
pop
pop
(bad)
jae
mov
mov
cmp
add
retf
mov
imul
xchg
sbb
sti
xchg
and
mov
xor
pop
sub
or
xor
and
or
adc
aas
in
out
mov
lahf
jno
rcl
pop
add
push
and
xchg
cmp
retf
adc
cdq
pushf
aaa
(bad)
cmp
mov
dec
sbb
inc
xor
popf
les
lods
and
addr16
inc
mov
out
(bad)
pop
jb
fbld
mov
jle
adc
push
das
daa
mov
sub
rol
test
cmps
(bad)
test
iret
pop
add
fsubr
add
xchg
icebp
adc
and
call
add
jle
dec
fchs
fstp
fld
pop
pop
ret
push
or
sbb
cs
cmp
in
mov
inc
and
mov
cmp
dec
cdq
or
test
rcr
in
mov
sbb
push
jb
add
mov
bound
or
sbb
ret
add
imul
out
dec
daa
inc
jg
aas
mov
push
add
inc
push
add
inc
or
in
ret
jb
jle
out
inc
add
sti
bound
dec
add
push
sti
sub
inc
inc
aas
inc
add
in
push
adc
push
dec
pop
(bad)
sar
dec
lahf
mov
mov
inc
addr16
add
jle
cmp
call
ret
lds
xchg
inc
repnz
mov
sub
add
add
repnz
xchg
mov
push
dec
adc
data16
ja
inc
mov
inc
inc
add
mov
push
aas
lock
push
xor
inc
call
push
cmps
scas
pop
dec
das
dec
cs
or
xchg
daa
inc
aaa
inc
cmp
cmps
fwait
push
add
daa
push
push
bound
inc
inc
add
push
aaa
push
in
xchg
dec
add
add
dec
scas
jl
inc
shl
inc
add
inc
fwait
pusha
je
xchg
cmp
fbstp
out
mov
add
inc
aas
xor
pusha
mov
mov
mov
add
mov
or
mov
sti
or
adc
cmp
jne
xor
add
dec
cmp
gs
or
push
push
or
aas
inc
mov
push
pusha
or
sub
loope
sahf
push
ret
and
lsl
add
and
dec
imul
xchg
xchg
cmova
xor
xor
pop
push
ret
add
fbstp
ja
mov
push
push
sub
adc
xor
fmul
dec
or
pusha
sar
cs
push
cmp
psubusb
rcl
mov
add
(bad)
pop
push
pop
sub
add
inc
push
rcl
xor
push
and
inc
dec
arpl
inc
add
bound
ror
mov
and
push
pop
push
add
sbb
pop
push
push
adc
or
(bad)
cmp
cmp
push
pop
ss
push
jno
push
pop
scas
aaa
ja
sub
inc
pop
adc
mov
xor
sub
in
pop
push
(bad)
xor
and
add
push
pop
sbb
or
pop
and
inc
push
out
sub
pop
inc
push
ss
lock
jne
inc
lsl
mov
xor
(bad)
scas
add
add
xor
push
rol
dec
rol
fsubr
sub
inc
push
ss
nop
or
pusha
pop
and
add
add
push
adc
cmp
dec
loopne
sbb
stos
(bad)
fsubr
mov
push
pop
push
add
mov
cmp
fdiv
push
pop
jg
and
iret
scas
push
xor
addr16
add
mov
je
dec
dec
lahf
add
or
add
dec
add
push
inc
push
xor
cmovle
pop
add
punpcklbw
pop
pop
(bad)
dec
add
pop
pop
push
push
adc
push
dec
addr16
jne
pop
push
push
mov
(bad)
dec
dec
push
dec
or
aad
inc
ja
sbb
push
xchg
push
(bad)
pusha
add
push
mov
dec
add
pop
and
cmps
push
aaa
sbb
in
push
push
outs
push
sub
sub
adc
mov
push
rcl
dec
xlat
mov
push
inc
pop
dec
mov
call
push
dec
add
(bad)
les
aaa
mov
out
enter
pop
push
ins
aad
leave
add
push
add
rcl
mov
push
cmp
pop
outs
and
pop
dec
xor
inc
jo
lahf
(bad)
jge
mov
mov
xchg
sbb
js
movs
jo
push
lds
inc
inc
adc
loope
mov
dec
pop
jge
inc
pop
(bad)
and
popa
mov
jl
mov
ja
arpl
add
test
loopne
lea
ins
add
add
mov
seta
loopne
out
dec
nop
cs
mov
dec
jg
cli
mov
sbb
pop
and
movs
movs
add
test
push
jne
movs
test
inc
or
adc
add
cdq
cmps
ins
outs
loopne
add
je
adc
adc
or
cmc
and
daa
pop
cmc
aaa
add
xchg
jne
xchg
jo
adc
xchg
jge
dec
ret
push
and
push
xchg
mov
ror
inc
loope
sbb
push
fadd
cdq
or
into
fchs
cmp
adc
lods
js
add
lds
sub
sub
ja
sub
cmp
pop
or
outs
inc
aad
mov
push
(bad)
xchg
sub
cmp
sti
sub
call
out
fmul
fnstsw
sahf
jbe
jnp
cmp
or
fsub
or
mov
jnp
cmp
ja
mov
je
pop
jae
nop
mov
sbb
or
pushf
fcmovnbe
adc
inc
cmp
inc
mov
inc
fmul
mov
add
sti
jg
sbb
cli
(bad)
jl
test
cwde
test
pop
push
lea
and
fstp
sub
rol
add
inc
push
push
aam
sub
outs
mov
mov
inc
frndint
test
sub
inc
pop
adc
out
xor
call
push
adc
rol
pop
sbb
in
adc
add
add
jne
and
aad
mov
and
sub
in
loope
dec
je
mov
aam
test
inc
xchg
xchg
sti
repnz
sub
cmp
jle
add
cmp
push
cmp
cmp
hlt
ins
jno
test
cmp
je
pop
jg
sbb
jp
push
add
outs
sbb
cmc
nop
and
push
add
and
pop
inc
inc
pop
mov
in
mov
mov
js
lock
lock
pop
dec
mov
cmp
pop
and
xchg
xor
jns
nop
adc
inc
or
inc
add
jp
sbb
scas
aam
out
jle
add
fs
add
push
xchg
call
repnz
les
test
mov
xchg
pop
mov
fdivr
mov
retf
mov
call
pop
and
lock
mov
adc
out
in
andps
push
in
add
cmp
in
in
daa
xchg
iret
inc
in
or
mov
nop
sub
mov
aad
inc
push
sbb
add
bound
pop
adc
daa
out
jb
ins
mov
dec
jns
(bad)
jne
jge
outs
daa
ins
lahf
jne
addr16
ror
outs
add
rol
out
jbe
jg
lea
das
scas
adc
outs
jg
mov
daa
scas
push
fdiv
sbb
jne
push
imul
lods
inc
ds
(bad)
arpl
call
arpl
add
mov
jmp
sub
adc
inc
jg
jbe
je
cmp
sar
mov
sar
pop
add
push
mov
js
int
bound
leave
movs
in
repnz
xchg
cmc
push
push
mov
es
nop
dec
push
enter
out
and
in
test
and
pop
inc
lods
push
pop
cs
rol
in
jbe
repz
mov
sbb
xor
shl
dec
repz
cdq
mov
out
loop
sbb
in
mov
push
xchg
les
dec
push
ficom
rcl
sub
xor
lods
pusha
sbb
push
fs
mov
jecxz
inc
add
aam
lods
clc
pop
jmp
cmp
js
mov
inc
retf
cmp
xchg
sub
or
je
sbb
pop
nop
or
push
or
mov
rcl
and
icebp
enter
push
adc
repz
clc
cld
ror
dec
loop
loop
jge
test
rol
test
xor
and
cli
adc
jno
les
loopne
mov
jmp
push
or
push
and
mov
inc
pop
es
push
jb
jle
movs
movs
dec
pop
add
mov
inc
adc
and
xchg
lods
pop
add
dec
push
and
jnp
or
outs
lahf
fild
inc
sbb
out
adc
xchg
add
pop
idiv
icebp
xchg
mov
add
xchg
adc
call
movs
pop
mov
jmp
pop
xchg
pop
xor
sbb
dec
jl
es
and
mov
pushf
enter
cs
sub
pop
leave
and
hlt
xchg
dec
es
fldenv
leave
adc
fcmovu
ficom
lods
fcom
cs
mov
in
fimul
fcomp
nop
imul
fmul
in
jo
int3
cld
pop
xor
dec
sub
pop
test
and
(bad)
xchg
dec
mov
xor
dec
pop
mov
call
or
aam
loop
xchg
pop
jb
pop
js
in
cdq
in
adc
push
test
and
jb
mov
dec
pop
mov
or
lahf
pop
xchg
dec
cs
xlat
push
lock
addr16
mov
pop
jb
mov
cs
pushf
les
stc
xchg
dec
clc
sub
bound
xchg
dec
mov
sbb
pop
jmp
xchg
pop
enter
leave
and
test
dec
pop
jb
sbb
dec
dec
cs
dec
cs
adc
bound
xlat
push
icebp
xchg
rcl
jns
and
dec
repnz
dec
rcl
fs
and
lock
xchg
imul
pop
enter
and
pushf
fcom
repnz
enter
icebp
add
mov
jl
int3
sbb
bound
jns
mov
mov
sbb
bound
mov
call
imul
mov
mov
ror
xor
pop
mov
sub
in
sub
mov
in
hlt
cmp
pop
sub
ins
pop
les
pop
das
mov
in
std
in
imul
mov
leave
and
push
jb
sub
bound
nop
pop
jb
add
arpl
push
leave
dec
cs
xchg
xchg
pop
xor
das
mov
add
nop
aam
cs
mov
in
fimul
add
and
mov
xchg
dec
pop
jb
add
dec
and
mov
or
cwde
rol
mov
adc
xlat
xor
dec
scas
pop
in
pusha
or
mov
xlat
pop
dec
or
or
imul
in
or
pop
xor
imul
push
loopne
mov
xchg
cmp
lahf
pop
aam
imul
adc
shl
aas
pop
mov
jp
enter
pop
xchg
mov
sub
jo
jns
and
mov
shr
jns
mov
scas
pop
mov
dec
es
sub
leave
and
hlt
xchg
dec
es
sbb
cmp
inc
pop
hlt
xor
fcmovu
imul
add
pop
nop
das
mov
sbb
in
mov
xchg
pop
pop
lds
xlat
pop
pushf
aam
lods
loop
adc
das
pop
movs
push
lock
dec
cld
pusha
and
mov
xlat
pop
sub
xchg
pop
loopne
ins
sbb
pop
mov
or
xlat
pop
mov
scas
lods
loopne
and
pop
lods
dec
cs
adc
dec
repnz
les
es
nop
xchg
in
dec
daa
arpl
hlt
xor
daa
mov
mov
leave
mov
dec
pop
loopne
sub
ficom
cld
leave
mov
mov
loopne
xchg
pop
jnp
sub
sub
add
mov
pop
nop
rcr
dec
adc
outs
pop
pushf
lods
loopne
xchg
in
das
pop
pop
ror
mov
xor
pop
loope
xchg
pop
mov
sub
ret
dec
scas
lods
call
rcl
xor
and
pushf
fmul
lods
call
test
cs
add
sub
das
mov
in
and
arpl
push
lock
dec
in
ss
jb
and
loopne
fidivr
pop
or
jg
push
xchg
fsub
cmp
and
mov
jecxz
cmp
js
xchg
in
movs
shl
pop
xchg
jmp
pop
sub
mov
outs
jmp
pop
add
sbb
push
gs
add
or
arpl
sbb
shl
xchg
push
in
sbb
xchg
outs
inc
xor
or
out
sahf
mov
jl
push
ret
mov
call
inc
cmp
push
or
cdq
sbb
and
adc
ffreep
ss
(bad)
mov
xchg
mov
aas
or
lea
dec
xor
or
xchg
hlt
fnstenv
push
adc
pop
jp
adc
lock
int3
sub
add
test
adc
aam
fadd
fist
dec
lahf
sub
push
mov
add
lahf
mov
jb
mov
inc
int
adc
mov
fcomp
push
adc
inc
clc
mov
xchg
cmp
je
dec
data16
jnp
mov
int3
loope
int3
adc
add
jnp
out
mov
or
invd
ja
inc
jmp
cmp
xchg
(bad)
loopne
pop
push
sbb
or
aaa
sbb
or
ins
add
sub
or
outs
and
add
jbe
sbb
mov
jae
adc
push
adc
add
pop
jle
mov
dec
scas
int
pop
adc
add
add
leave
pcmpeqw
add
cmp
cs
mov
das
mov
xchg
sub
mov
add
xor
(bad)
lods
xchg
pop
jne
outs
adc
addr16
push
shr
addr16
xlat
xchg
mov
pop
adc
adc
jg
cmp
add
adc
pop
jb
jb
xor
aaa
nop
sub
and
adc
es
and
neg
push
cmp
jae
(bad)
jo
test
add
xlat
jno
sbb
cwde
fsub
aaa
pop
jnp
nop
aaa
jbe
outs
adc
jb
nop
imul
sbb
(bad)
outs
jg
mov
in
jnp
enter
jae
xlat
das
or
push
jp
lea
outs
add
mov
fwait
pop
ja
jbe
shl
in
jbe
jno
aas
jae
js
and
add
add
or
das
punpckhdq
aas
inc
das
inc
ret
or
sub
cmp
lahf
or
sbb
dec
stos
dec
pusha
or
sub
cmps
fist
and
xlat
push
fcom
or
bound
push
js
inc
xchg
daa
push
push
push
sub
aaa
xchg
ins
aas
popa
add
mov
outs
push
ja
aas
or
cmp
add
ja
xchg
jo
add
xchg
adc
add
loop
add
mov
aaa
jne
rcl
push
das
imul
and
inc
sbb
test
sbb
sub
pop
retf
pop
das
outs
aas
push
inc
add
jnp
cmp
mov
retf
and
mov
retf
das
pop
mov
mov
jo
sbb
add
add
push
jnp
ret
mov
bound
in
imul
adc
add
or
sub
dec
outs
ja
mov
xchg
rcr
daa
stos
je
or
imul
mov
inc
add
mov
loopne
add
push
(bad)
scas
and
je
lahf
enter
das
pop
jo
inc
add
inc
or
adc
jae
inc
or
push
aad
dec
arpl
or
icebp
imul
outs
pop
test
xchg
jae
ins
jbe
aas
or
pop
test
rcl
data16
jb
pusha
outs
adc
data16
ins
add
or
or
fcom
jo
ret
data16
jnp
mov
div
mov
call
push
in
fiadd
adc
imul
pop
add
sub
aaa
push
repz
cwde
and
jg
jae
push
and
jge
and
add
and
fwait
or
bound
push
lea
lock
les
rol
sbb
add
lods
pop
aaa
or
ins
mov
rol
cmp
cmps
cmp
mov
xor
sbb
mov
je
cmps
jne
lds
cmps
dec
imul
clc
inc
pusha
outs
inc
push
sti
(bad)
inc
adc
(bad)
std
sbb
and
mov
imul
and
jae
ret
and
sbb
mov
cmp
mov
jl
cmps
pop
sub
sbb
(bad)
xor
outs
outs
arpl
retf
ja
cmps
inc
pusha
or
or
jbe
arpl
add
xor
into
(bad)
pop
push
sbb
call
cmp
adc
bound
dec
daa
jg
add
bound
ins
imul
pusha
adc
mov
rcl
imul
add
xchg
ins
adc
fild
rcl
ins
addr16
ret
pop
push
lahf
(bad)
(bad)
pop
imul
nop
xor
or
imul
add
or
popa
ja
pop
inc
leave
adc
push
aad
mov
add
addr16
ins
adc
mov
outs
imul
add
sub
or
(bad)
and
push
sbb
or
arpl
das
add
out
jbe
xor
cmp
cmp
pop
or
mov
das
out
and
push
mov
ds
inc
ja
ins
jecxz
add
test
sbb
sub
in
dec
jo
jbe
dec
push
nop
jbe
js
push
xchg
sub
and
mov
and
dec
inc
loopne
inc
jae
pop
adc
(bad)
and
imul
mov
sahf
daa
imul
inc
xor
add
pop
aaa
scas
add
test
daa
imul
push
push
mov
loopne
or
pop
mov
pop
popa
xchg
add
lahf
adc
out
push
cmp
add
jne
outs
or
push
fcom
out
outs
lahf
ins
cmps
sub
jae
add
dec
jae
adc
jmp
ja
mov
pop
or
ja
arpl
xchg
mov
daa
rcl
sub
imul
or
inc
daa
cs
xchg
outs
push
daa
xor
ret
sub
pop
pop
sub
dec
sbb
push
push
sbb
inc
mov
stos
adc
and
add
sub
cmp
ins
(bad)
and
(bad)
jnp
push
cmp
movs
dec
(bad)
bound
outs
addr16
add
bound
cmps
pop
or
idiv
add
es
sub
sub
outs
daa
pop
mov
and
mov
imul
out
push
push
je
sub
outs
fild
sbb
xor
iret
inc
aam
pusha
popf
pop
popa
mul
jg
fwait
mov
ja
add
xchg
ins
xchg
push
mov
pusha
xor
outs
iret
sub
inc
xor
scas
dec
rcl
jo
ja
jb
ret
push
imul
add
popf
addr16
add
je
imul
or
sti
push
add
arpl
cmps
pop
test
cmps
push
cmp
mov
ins
daa
outs
or
fist
sbb
jo
arpl
jo
loopne
inc
pop
jmp
mov
arpl
push
test
je
jo
sub
add
imul
mov
sbb
loope
cmps
fs
ss
mov
(bad)
mov
mov
stos
jmp
add
sub
mov
inc
iret
push
ja
add
mov
mov
bound
dec
and
mov
shr
test
inc
popf
mov
pop
cmp
enter
das
nop
sbb
imul
pop
arpl
inc
daa
imul
fwait
(bad)
and
jnp
imul
add
daa
push
mov
jp
pop
in
add
add
adc
daa
push
dec
add
sub
inc
aad
add
outs
add
fs
(bad)
jae
ja
jne
in
push
jbe
arpl
js
or
push
inc
test
pop
cmp
or
push
pop
pop
xchg
pop
add
inc
push
jecxz
add
pop
adc
xchg
stos
jecxz
xchg
jbe
outs
add
dec
add
mov
xor
fs
sbb
xor
sbb
aad
fild
repz
add
out
adc
lods
dec
imul
outs
inc
and
ret
push
inc
dec
imul
add
mov
stos
or
aam
addr16
and
or
xlat
gs
(bad)
stos
pusha
bound
sub
xor
pop
addr16
mov
or
xchg
ja
push
bound
cmp
in
adc
adc
and
test
push
add
daa
jno
sub
sub
mov
jae
dec
bound
je
push
imul
add
and
and
loope
mov
daa
pop
mov
ja
jmp
test
pop
push
jg
add
sub
popa
imul
in
push
les
or
sbb
inc
cmp
sub
inc
dec
push
inc
lods
push
arpl
jnp
jmp
xchg
aas
bound
outs
add
push
(bad)
xchg
push
mov
cmp
outs
fwait
shl
or
ja
push
shr
in
scas
add
outs
add
jb
imul
add
jno
movs
inc
(bad)
inc
adc
mov
mov
lahf
or
cmps
push
ja
rcl
push
fist
aas
xchg
sbb
js
shr
fimul
lods
inc
add
out
loopne
jo
rcl
ja
inc
imul
shl
test
jb
inc
xchg
add
pop
aas
ins
lock
add
sbb
jae
test
xor
jg
push
xor
cwde
inc
jo
out
jg
cmp
add
ins
add
add
adc
stos
pop
ins
cmp
xchg
xor
(bad)
daa
inc
pop
jo
jo
sub
add
test
inc
nop
das
jbe
lods
fist
sbb
popa
mov
je
data16
sub
and
fs
mov
arpl
mov
adc
ins
and
jae
and
shr
inc
frstor
pop
iret
imul
pop
adc
inc
mov
jmp
xchg
ins
add
cmp
xchg
popa
cmp
xchg
outs
add
mov
fs
sbb
xor
stos
or
outs
outs
and
rsm
pop
jo
push
scas
icebp
and
ja
nop
mov
sbb
aas
sub
add
or
je
(bad)
outs
(bad)
or
pusha
iret
cmps
xor
ss
mov
(bad)
jae
xor
cs
pop
iret
xor
iret
xchg
inc
add
jmp
out
or
and
out
or
test
xlat
sub
mov
popa
stos
mov
popa
nop
jl
addr16
or
bound
push
dec
inc
mov
jmp
iret
inc
inc
daa
add
je
call
ret
push
je
push
lahf
ret
fistp
jno
out
inc
inc
xor
cmp
pop
sub
add
add
and
adc
das
lock
ja
xor
call
test
jno
and
push
xchg
mov
adc
out
ret
mov
scas
ins
cmps
aaa
fadd
in
cmps
and
inc
mov
(bad)
or
aad
aam
sti
jno
pop
mov
mov
mov
aas
cmps
mov
and
sbb
arpl
aad
pop
outs
pusha
push
lea
les
arpl
ret
fs
lahf
mov
ja
dec
je
jo
jo
push
cs
jg
lahf
and
push
ret
push
add
inc
jl
add
sbb
add
push
jno
push
xor
jo
(bad)
out
mov
adc
or
sbb
pop
fsub
mov
sbb
mov
pop
and
adc
pcmpgtw
jb
jno
jo
dec
or
xor
aam
cmp
repz
cdq
inc
sar
jb
or
sbb
jb
pop
sub
sbb
ret
(bad)
es
xlat
mov
dec
add
bound
test
sub
add
(bad)
jmp
push
and
cmps
mov
xor
add
or
nop
cmp
mov
or
jae
sub
jl
pop
aas
es
js
ins
out
adc
outs
(bad)
mov
sub
out
inc
xchg
add
iret
test
push
sbb
jb
jae
and
push
nop
imul
js
inc
push
add
mov
or
add
and
inc
pop
adc
sahf
or
xchg
add
pushf
or
add
test
cmps
neg
aas
adc
dec
push
adc
inc
ins
pop
and
dec
jbe
imul
movs
mov
mov
call
(bad)
fsubr
mov
and
imul
iret
jae
fs
inc
je
add
sub
je
lods
cwde
cmc
outs
ror
dec
mov
mov
scas
sbb
das
(bad)
jb
and
stos
in
add
test
pop
jnp
jb
fisttp
sub
pop
mov
push
adc
mov
push
cs
jae
imul
idiv
jne
and
sub
mov
add
push
or
pop
(bad)
imul
sbb
test
das
test
rol
cmps
or
ja
adc
push
jno
push
ins
add
je
sub
adc
scas
stos
outs
aas
ins
mov
sbb
not
pop
add
jne
adc
push
push
popa
add
sbb
(bad)
jae
jae
inc
pop
push
ret
popa
adc
push
imul
pop
pop
add
add
gs
je
bound
or
or
jae
out
add
mov
dec
ins
(bad)
repz
jmp
push
test
arpl
mov
pop
iret
inc
(bad)
or
jg
loopne
inc
je
inc
sub
ja
pop
mov
mov
aaa
sbb
jbe
and
test
mov
sbb
and
push
iret
pop
test
cwde
aas
jb
push
and
call
test
and
inc
pop
mov
sbb
iret
and
mov
cmps
xor
fbstp
js
stos
enter
lahf
xlat
sub
cwde
add
mov
mov
push
xor
xchg
js
add
pusha
jmp
push
addr16
cvttps2pi
out
ja
popa
rol
ss
add
adc
inc
ja
test
or
and
sbb
dec
and
dec
adc
cmp
cmp
dec
les
inc
add
fiadd
ret
sbb
daa
mov
add
dec
bound
jg
sub
test
inc
sub
cmps
pusha
movhps
xchg
retf
aas
je
sbb
mov
inc
ins
inc
loope
test
mov
add
xor
(bad)
ret
fistp
mov
mov
shl
and
jo
jb
and
das
jb
sahf
and
cmps
xchg
arpl
add
loop
add
js
add
dec
scas
push
xchg
(bad)
jne
fild
add
movs
push
test
push
fisttp
arpl
add
loopne
add
dec
aad
retf
rol
sub
ins
fild
sub
dec
loop
push
xor
push
pop
mov
jae
push
fldcw
arpl
inc
pop
pop
adc
or
ja
arpl
dec
mov
es
mov
xlat
mov
add
fmul
pop
(bad)
pop
(bad)
push
ret
add
imul
sbb
(bad)
sbb
push
ins
imul
mov
mov
xchg
dec
aaa
xor
pop
jg
inc
ja
dec
add
mov
jo
xchg
add
mov
add
push
xchg
fs
cmps
cmps
push
(bad)
ja
cwde
xchg
mov
sub
jo
sbb
adc
lar
xchg
jecxz
add
add
aas
imul
push
add
push
xor
xor
sbb
aaa
mov
and
inc
scas
or
js
pop
push
movs
nop
pop
mov
pop
js
jae
add
add
(bad)
sbb
jecxz
pop
shl
and
sub
jg
adc
jp
push
stos
mov
xchg
or
inc
mov
and
sbb
ja
push
daa
xchg
cmps
sub
les
imul
push
xor
sbb
or
(bad)
xchg
and
punpcklwd
push
sub
mov
push
arpl
adc
add
adc
arpl
(bad)
test
and
add
mov
push
add
push
sub
mov
add
pop
sub
add
enter
add
sub
leave
adc
out
stos
loopne
ss
add
nop
bound
sub
or
inc
out
addr16
mov
test
arpl
adc
scas
mov
mov
lahf
and
les
mov
mov
adc
add
pop
je
sbb
and
ret
pop
xor
ins
xor
pop
xchg
mov
sbb
sub
push
dec
pop
push
pop
push
mov
das
fs
imul
test
jbe
adc
dec
sub
adc
adc
ins
jno
jae
addr16
ja
pusha
popa
add
pop
cdq
jo
les
out
scas
pop
pushf
mov
imul
cmp
xor
add
pop
pop
inc
push
pop
jb
or
movs
test
or
shr
test
or
bound
and
mov
xchg
and
arpl
stos
xlat
cmps
adc
lock
mov
daa
cmp
loopne
test
and
loope
inc
jns
daa
in
mov
mov
push
cmps
add
mov
xchg
les
adc
jmp
pusha
sub
shl
add
adc
jnp
jmp
and
jo
sub
cld
cld
mov
shl
inc
adc
cs
mov
inc
jne
sbb
adc
and
dec
mov
sub
and
sub
lock
leave
sub
out
add
nop
dec
jnp
mov
xor
rcl
adc
or
ret
push
adc
or
jne
mov
ret
neg
or
leave
fist
mov
mov
push
add
mov
mov
loopne
inc
sub
test
add
jecxz
pop
inc
add
push
loope
pop
xor
xlat
(bad)
mov
fld
add
js
adc
sti
add
cmp
add
adc
sub
mov
(bad)
imul
xor
test
bound
jo
test
inc
(bad)
(bad)
(bad)
fcom
xor
or
arpl
out
add
add
cmp
loopne
rcr
pop
pop
inc
pusha
sbb
ret
dec
sar
hlt
adc
mov
or
mov
pop
push
lea
adc
bound
js
retf
adc
xor
test
cmps
add
jmp
pop
aam
out
mov
arpl
or
add
out
pop
push
sbb
arpl
je
mov
xchg
adc
pop
inc
sub
data16
pop
call
sbb
inc
nop
aas
pop
adc
stc
jle
dec
adc
in
rol
cmp
aad
sbb
dec
mov
in
aas
ds
pop
(bad)
call
inc
test
dec
xlat
loopne
add
adc
or
add
mov
fmul
cmps
retf
add
push
or
stos
add
ins
add
dec
in
jo
adc
push
fnstcw
add
dec
inc
or
mov
dec
loopne
ret
xlat
jne
or
pop
test
inc
push
adc
pop
adc
pushf
xchg
sar
add
add
pop
test
sbb
adc
sbb
mov
lahf
push
mov
ja
push
rcr
inc
xor
popa
fwait
inc
rol
inc
mov
mov
not
mov
adc
je
ds
or
js
sbb
ret
or
pusha
stos
dec
pushf
jle
and
mov
xchg
je
or
sub
pop
mov
verw
int3
fidivr
in
xchg
jb
add
jne
xchg
inc
cmp
jne
xlat
sub
fstp
mov
clc
jne
jg
in
enter
pop
pop
jl
imul
jo
cs
mov
jge
mov
jno
or
(bad)
mov
push
lock
inc
jmp
mov
push
shl
sub
push
lock
test
and
mov
pop
or
jle
pop
xchg
clc
sub
je
inc
jmp
fucomi
xchg
(bad)
fdiv
sbb
(bad)
(bad)
es
fcom
and
inc
imul
shl
lahf
or
in
je
ret
push
push
sub
pop
into
rol
push
xor
mov
out
add
ret
add
out
add
out
pop
retf
or
dec
push
dec
or
(bad)
or
ins
call
pop
les
push
add
or
inc
mov
push
imul
push
add
mov
pop
push
sbb
push
mov
or
push
mov
jmp
test
inc
scas
xor
jecxz
pop
adc
mov
jmp
pop
and
loopne
or
adc
add
cmc
xchg
mov
jge
sbb
push
cmc
add
jae
or
test
mov
push
and
(bad)
jmp
jbe
jno
push
mov
cmp
xlat
sbb
sbb
dec
add
data16
push
pop
clc
aas
jne
push
shl
ds
sbb
xor
in
sbb
ins
clc
dec
cmc
in
lea
loopne
mov
outs
mov
cli
mov
pushf
test
add
je
xor
sti
aam
jle
xor
inc
cmp
call
jne
sahf
fcom
cwde
ret
inc
jmp
xor
jne
mov
shl
mov
ins
mov
xor
sub
and
pop
arpl
das
xor
mov
enter
xor
and
inc
add
iret
jp
aad
lock
mov
mov
hlt
pop
lock
loopne
imul
push
jae
add
inc
xchg
shr
lahf
mov
adc
fistp
add
fdivr
jbe
add
cmp
pop
and
je
stos
ret
add
add
push
jns
add
rol
push
dec
or
and
mov
icebp
adc
adc
sbb
test
mov
test
rol
or
pop
in
gs
or
cmp
mov
mov
(bad)
add
dec
cmp
add
mov
add
leave
leave
leave
ins
loopne
(bad)
aam
fld
leave
ror
cmp
fs
mov
mov
pop
mov
mov
add
and
sbb
mov
mov
xchg
and
cmp
dec
sbb
icebp
(bad)
outs
xchg
es
mov
in
xchg
mov
imul
enter
loopne
pusha
shl
repnz
inc
call
push
inc
xchg
int3
rol
pop
cmp
clc
loop
pusha
add
jne
lods
adc
and
add
ror
or
mov
fmul
add
jecxz
mov
pusha
adc
add
inc
push
shl
xor
dec
pop
mov
sbb
inc
in
aam
sbb
add
aam
xchg
adc
push
aam
aas
aad
jno
in
cmp
aam
add
mov
nop
ins
movs
call
sub
movs
bound
test
test
jo
and
out
sbb
adc
je
ror
sub
fwait
cld
(bad)
jmp
mov
fcom
sub
adc
mov
cdq
mov
test
cmp
push
shl
sbb
sub
ror
outs
bsf
add
push
cmps
pusha
mov
call
cwde
imul
rcr
and
fist
shl
adc
in
inc
mov
xchg
aas
in
pop
push
pusha
inc
xor
cld
adc
adc
adc
mov
pusha
les
pop
and
mov
and
arpl
mov
pusha
mov
lock
test
inc
das
dec
popa
and
inc
add
cmps
jecxz
pusha
inc
les
cmp
adc
pop
jb
or
push
(bad)
mov
or
imul
mov
mov
test
std
pop
dec
pop
shl
nop
or
push
loopne
enter
loope
std
pop
ret
xchg
and
rcl
inc
push
pusha
xchg
add
mov
jb
fwait
push
push
jmp
fsubr
out
add
sbb
fisttp
pushf
ret
add
pop
push
(bad)
sbb
mov
xor
ret
sbb
mov
push
scas
in
push
test
bound
push
jecxz
sbb
xlat
inc
push
inc
dec
adc
inc
movs
xlat
inc
push
das
jg
iret
cmp
dec
rol
mov
pop
adc
out
inc
movs
mov
adc
inc
xlat
sahf
add
xor
adc
or
add
mov
mov
jnp
mov
fist
mov
aas
(bad)
sbb
push
test
das
xor
xor
fucomip
(bad)
(bad)
jmp
mov
in
xlat
or
push
je
sub
mov
seto
out
pop
xchg
inc
add
add
pop
mov
enter
or
sar
nop
xchg
mov
mov
test
pop
aaa
mov
popf
push
mov
test
outs
or
xor
sub
inc
fsubr
or
in
xor
push
xor
(bad)
jmp
fild
pop
pop
stos
out
cmp
dec
sub
inc
mov
in
jbe
xchg
test
or
xor
loop
and
fwait
test
cmp
cwde
or
in
pop
xor
mov
or
xchg
arpl
sbb
icebp
and
(bad)
or
lock
sbb
es
mov
xchg
mov
mov
and
aad
add
movs
call
pop
nop
call
mov
add
or
sbb
pop
add
or
clc
sbb
call
xchg
scas
inc
fbld
fwait
nop
xlat
cmp
push
imul
shl
outs
jmp
xchg
and
and
jbe
js
adc
inc
inc
or
mov
mov
mov
dec
pop
xor
xchg
xchg
sahf
dec
cs
cmp
inc
push
cs
cs
add
pop
or
xor
or
add
add
out
mov
clc
adc
or
push
add
add
add
scas
test
pushf
xor
add
ficom
mov
outs
(bad)
inc
xchg
dec
int3
es
pcmpeqd
aaa
pop
scas
das
add
pop
or
push
aaa
and
push
sbb
jg
pop
imul
cmp
das
xchg
stos
dec
pop
adc
add
stos
pop
pop
and
pushf
xor
jecxz
mov
outs
dec
imul
cld
pop
cwde
cwde
(bad)
ds
clc
adc
adc
in
std
push
jmp
push
pop
scas
mov
sbb
add
add
xor
sub
add
fiadd
dec
dec
pop
in
add
cmp
loop
jnp
jge
or
xor
ret
xor
jmp
cld
mov
add
pop
arpl
xchg
mov
loope
mov
pop
sahf
mov
cmp
mov
mov
jb
(bad)
pop
jne
mov
ret
inc
or
cmp
jle
mov
imul
fistp
push
and
cmps
or
jge
dec
mov
mov
inc
push
mov
jmp
inc
fwait
xchg
jge
pop
mov
lds
or
and
je
pop
add
repnz
cmp
add
mov
mov
and
sbb
(bad)
imul
cmps
push
push
mov
cld
pop
or
push
and
add
test
jmp
add
sub
lock
push
xlat
adc
arpl
(bad)
dec
or
add
int
inc
or
jo
fsubr
add
(bad)
ds
fdivr
sbb
sub
sbb
call
ins
push
cmp
push
test
pop
and
sti
push
fwait
jmp
rcl
test
push
dec
mov
or
loope
adc
repnz
xor
jne
jmp
dec
fldcw
adc
adc
push
push
cmp
cmp
enter
fld
cmp
rol
sti
test
test
xor
rol
cmp
and
pop
and
sbb
inc
ins
mov
add
rcr
(bad)
lock
(bad)
xchg
push
xor
imul
jg
adc
xlat
pop
or
loopne
stos
sub
inc
inc
add
inc
xor
aaa
push
cmc
xor
or
ror
pop
mov
mov
fild
xor
mov
imul
add
lock
add
push
jge
mov
adc
mov
inc
and
or
mov
or
ja
push
pushf
ss
inc
or
fsubr
mov
xchg
mov
fnstsw
popf
pop
dec
sub
jae
xor
xchg
mov
fstp
in
mov
dec
(bad)
mov
pop
adc
sbb
inc
fidiv
or
ins
jmp
lods
inc
bound
adc
xchg
xchg
ja
dec
jne
mov
sbb
test
push
adc
sbb
cmp
mov
and
add
mov
and
loopne
pop
or
addr16
lods
in
lds
adc
(bad)
jno
fisttp
(bad)
rcr
inc
jo
add
inc
aam
clc
jae
pusha
pop
fstp
inc
sub
mov
repnz
shl
ret
push
call
add
sbb
push
mul
add
jmp
cmp
add
arpl
div
mov
xor
mov
sub
ins
cld
shr
jo
xchg
popf
dec
loopne
ins
and
push
jge
pop
jbe
or
ins
dec
mov
arpl
inc
mov
dec
test
jl
inc
xor
sub
test
fsubr
ins
jecxz
add
in
test
sub
xor
stc
mov
xchg
xchg
pop
jo
inc
fmul
dec
sbb
mov
(bad)
jmp
and
adc
in
cmp
cmp
xchg
or
daa
xor
cmp
and
push
pop
test
icebp
pop
and
(bad)
sar
jno
stos
std
rcl
push
sbb
mov
adc
cmp
(bad)
cld
pop
adc
ins
mov
push
bound
fstp
out
mov
jns
outs
mov
push
ins
xchg
ret
imul
mov
sbb
and
sbb
iret
repz
adc
mov
mov
out
cmc
jbe
jl
inc
out
inc
cld
iret
cmp
in
dec
inc
hlt
dec
jne
out
or
add
inc
xchg
adc
outs
ss
xchg
mov
adc
xor
outs
cmp
into
cmp
jmp
adc
popf
ret
and
pop
sbb
rol
not
and
arpl
daa
or
push
and
lods
mov
cmp
movs
or
mov
add
movs
rcr
scas
mov
aas
dec
inc
add
clc
adc
xor
imul
jmp
jmp
or
je
or
sbb
sub
add
and
mov
or
ret
or
cmp
ds
test
xor
ret
or
xor
test
xchg
leave
xchg
cwde
ins
movs
jmp
adc
xchg
jo
xchg
push
mov
push
(bad)
fcmovnb
add
dec
clc
and
jl
inc
xor
dec
add
call
repnz
(bad)
push
or
cmps
or
sbb
ins
jecxz
adc
cdq
jo
adc
sub
pop
and
add
aas
rcr
rol
adc
xor
push
(bad)
or
nop
jno
lds
(bad)
mov
or
pop
and
cmp
adc
mov
imul
les
mov
add
loop
outs
or
and
or
call
push
or
inc
mov
loope
add
mov
cs
push
pop
sbb
mov
(bad)
xor
pop
rol
nop
mov
cdq
inc
fdivr
mov
mov
stc
pop
pop
in
pop
add
lock
jb
push
add
and
lock
scas
push
scas
push
xor
ins
sbb
adc
inc
or
sub
cs
outs
mov
into
or
lods
push
add
fsub
in
stc
dec
nop
adc
ins
out
imul
push
nop
adc
or
xor
in
push
test
neg
pusha
adc
cmp
dec
push
clc
jp
and
or
test
outs
cmp
push
cld
sti
mov
cld
dec
push
push
mov
xor
sar
xlat
push
mov
in
add
out
scas
stc
out
imul
push
in
call
sar
data16
sbb
sub
push
ret
lds
jo
das
pop
pop
mov
popa
pop
add
inc
or
cwde
ror
and
ins
add
call
aas
mov
add
jae
pop
or
and
sahf
imul
pusha
adc
fnsave
and
ds
arpl
push
jle
dec
add
add
fnsave
jns
popw
in
jne
jne
inc
cmp
in
in
lock
xor
mov
inc
sahf
pushf
repnz
loop
shl
dec
sub
add
retf
pop
cmp
inc
xor
add
je
xor
test
pop
sbb
jns
or
fs
cmpxchg
push
sbb
neg
or
ins
push
sbb
mov
fadd
push
adc
and
adc
mov
or
or
push
je
outs
or
pop
gs
push
and
fld
mov
jne
inc
jno
test
add
jge
add
pushf
test
push
arpl
inc
mov
adc
clc
test
lea
repnz
push
ficomp
inc
pop
cmp
sub
das
jae
adc
push
retf
sub
or
sub
ins
lds
or
and
xchg
test
push
push
cld
js
push
gs
and
pusha
and
pusha
loopne
mov
add
xor
inc
add
ds
shl
lods
(bad)
clc
dec
jae
xor
not
jae
stos
add
add
clc
add
and
inc
loope
out
mov
cld
pop
outs
sub
dec
jl
xchg
dec
jae
add
xor
fnstenv
or
pusha
jle
or
or
xchg
jp
mov
or
stos
call
xor
retf
adc
movs
call
mov
and
dec
addr16
sbb
mov
jmp
shl
add
add
cmc
mov
aam
cli
xlat
inc
jp
clc
rol
sub
test
jl
inc
sbb
add
xor
pushf
or
pop
call
or
jge
push
sbb
lock
dec
jne
adc
ins
or
dec
jp
test
outs
adc
and
inc
aad
shr
and
inc
loop
adc
sar
xchg
cmp
and
jae
push
retf
push
lods
das
clc
push
jno
mov
jmp
inc
hlt
inc
hlt
sbb
xchg
sbb
inc
push
lock
mov
out
adc
sbb
imul
aas
adc
out
dec
or
mov
and
pop
pop
mov
adc
mov
inc
inc
psadbw
sbb
or
ror
std
retf
and
adc
adc
fmul
push
jne
jl
adc
mov
push
(bad)
push
sbb
lea
xor
push
jp
add
push
add
mov
fwait
hlt
mov
lock
jg
cmp
fs
je
ret
jl
retf
inc
stos
xor
push
shr
aam
out
hlt
lea
mov
sti
sbb
mov
push
pop
add
sar
sahf
fld
jle
jl
inc
pusha
mov
cmc
push
in
xor
cmp
das
jle
xchg
jge
inc
adc
jge
jmp
cmps
popf
push
adc
push
dec
sub
loop
adc
pop
add
inc
es
mov
push
or
shl
inc
dec
ror
outs
and
push
or
getsec
jle
and
xchg
mov
sti
mov
mov
xlat
adc
movs
jnp
aas
jmp
push
mov
lods
or
sbb
jbe
or
cmp
jmp
sub
jb
jecxz
jg
mov
sbb
arpl
or
jle
aaa
dec
or
pop
in
ret
(bad)
pop
lock
and
lea
sub
gs
dec
stos
es
mov
add
adc
cmp
adc
xchg
call
shl
sbb
dec
or
add
jle
es
in
mov
jg
rol
or
std
push
cmp
adc
sub
nop
rcr
ret
nop
jg
sbb
hlt
test
adc
adc
mov
cld
out
fwait
push
mov
sbb
jle
loopne
aad
push
fs
in
inc
es
int
mov
cs
cmp
lea
add
dec
mov
(bad)
mov
jg
add
sub
add
push
inc
push
mov
loope
inc
pop
xchg
sub
daa
or
test
outs
daa
add
xchg
and
lods
cmps
cs
sub
xor
shr
sub
rol
imul
lock
and
inc
clc
push
adc
(bad)
test
ficom
xor
dec
retf
xchg
hlt
mov
js
xor
adc
cmps
scas
movs
pop
imul
dec
mov
pop
iret
push
cmps
push
call
dec
enter
cmp
jmp
mov
sbb
adc
ss
cmp
dec
inc
aad
call
cwde
ret
mov
sub
add
daa
mov
rcr
out
mov
popa
jmp
sar
jno
retf
je
hlt
imul
es
test
fisttp
adc
adc
(bad)
jns
xchg
add
jns
sbb
frstor
jmp
lods
loope
mov
ror
ret
dec
xchg
mov
add
add
popw
xor
and
pop
and
pop
sbb
push
rol
or
adc
mov
ja
stos
adc
hlt
aaa
leave
adc
inc
(bad)
stos
test
pop
ds
daa
adc
fs
inc
hlt
or
xor
jmp
inc
dec
not
or
add
out
sbb
pushf
sub
shl
jecxz
mov
inc
sub
add
or
jl
inc
sbb
lock
ins
int3
push
inc
pop
add
fcmovnbe
xor
es
aad
inc
loopne
cwde
sbb
(bad)
xlat
jmp
popa
ret
retf
or
cmc
test
cmps
or
push
ja
add
mov
xor
mov
dec
and
sti
cs
ret
dec
je
push
sub
dec
clc
fild
cmp
mov
and
ficomp
jmp
dec
enter
jb
jne
mov
push
test
dec
outs
xlat
div
cmp
dec
or
pop
adc
adc
adc
test
adc
data16
inc
cmps
cwde
test
push
sbb
dec
inc
add
mov
aas
jae
adc
jo
arpl
add
test
xchg
fadd
dec
push
nop
dec
mov
das
dec
add
movs
xchg
psadbw
xchg
xchg
daa
push
mov
retf
imul
cmp
sbb
mov
sahf
pushf
mov
aaa
mov
add
pop
movs
or
outs
arpl
push
movs
jecxz
cmps
push
xchg
adc
or
push
xchg
or
stos
mov
lods
not
ins
and
cs
dec
test
movs
push
inc
or
and
inc
aad
or
pop
mov
adc
arpl
ret
ja
gs
ins
push
mov
lds
xchg
or
mov
int3
mov
add
adc
daa
and
add
popa
sub
or
aad
xchg
jae
push
xchg
call
and
adc
adc
adc
(bad)
les
xor
loop
jae
add
enter
push
mov
push
cmp
pop
sub
rol
sub
pop
push
bound
push
pop
jo
pop
mov
push
xor
sbb
mov
clc
sbb
gs
ins
sbb
sbb
mov
sbb
mov
js
popa
ins
dec
pop
dec
shr
or
mov
arpl
or
pusha
gs
adc
arpl
cmp
add
inc
and
loope
iret
add
and
fist
outs
mov
leave
push
dec
ds
mov
fmul
adc
mov
adc
inc
add
push
lea
out
inc
stos
adc
movlps
cmp
test
adc
mov
(bad)
ins
test
gs
inc
or
and
jecxz
sbb
fisttp
push
cmp
pop
or
inc
outs
fs
add
rol
sbb
loopne
push
inc
gs
daa
and
sbb
sbb
pop
ins
add
out
xchg
nop
add
gs
sbb
xchg
pop
xor
add
repnz
adc
mov
pop
lahf
inc
dec
scas
bound
(bad)
and
in
inc
mov
ret
xor
or
jbe
jne
jecxz
nop
pop
les
int
cmp
leave
push
cmp
jno
lahf
gs
pop
and
or
lea
inc
jo
sahf
xchg
rep
nop
and
cmp
lds
ret
data16
inc
mov
mov
cmp
add
add
mov
rcl
lock
loop
add
fisttp
and
jecxz
xchg
outs
inc
xchg
push
add
ret
adc
(bad)
and
movs
fcom
bound
ffree
xchg
in
mov
add
or
push
add
xor
shl
int
xchg
nop
and
stc
das
fnstenv
js
cmp
xor
test
jmp
into
pop
dec
xchg
inc
(bad)
xor
je
xor
fisub
sar
aaa
xchg
fstp
cli
push
xchg
arpl
sbb
mov
add
jge
xchg
push
xchg
inc
lds
jo
mov
pop
inc
repnz
in
push
mov
pop
mov
ds
inc
mov
js
add
sbb
cmc
adc
sbb
xchg
iret
pop
adc
inc
ja
lds
leave
setns
or
mov
mov
mov
cmps
hlt
fisttp
test
fcmovnb
and
fdiv
push
mov
xchg
inc
ret
adc
mov
ins
xchg
push
fbld
pop
aas
adc
jmp
(bad)
cld
je
(bad)
mov
xchg
outs
sbb
or
out
and
daa
les
fsubr
push
cmp
pop
repz
pop
sub
shl
mov
dec
and
lds
jmp
mov
loopne
lea
xchg
push
movs
ss
push
adc
fs
add
test
xchg
xchg
xchg
sub
pop
pop
and
les
ficom
clc
bound
cmp
popa
adc
data16
lods
xchg
xor
pop
mov
inc
add
add
or
loope
or
imul
iret
sar
add
loope
lahf
mov
in
cmp
int
xchg
(bad)
push
mov
mov
jns
pop
add
arpl
mov
ja
or
and
xor
and
inc
stc
dec
or
dec
mov
movs
or
ins
inc
push
push
cmp
daa
adc
push
push
xor
pop
shl
xor
in
cmps
pop
out
xchg
sbb
out
and
mov
add
jns
mov
inc
scas
mov
mov
add
dec
test
mov
(bad)
push
add
outs
div
das
call
out
inc
sub
fistp
or
out
dec
add
add
xchg
call
xchg
push
and
int3
or
outs
ins
push
push
call
and
xor
jno
int3
pop
adc
jae
setp
lods
pop
or
mov
dec
dec
jb
jns
mov
adc
add
mov
and
test
(bad)
and
icebp
and
dec
(bad)
nop
push
cmp
sub
mov
xchg
mov
add
inc
dec
jne
xor
sti
sbb
(bad)
call
or
popf
xchg
and
lea
mov
nop
and
add
dec
jne
fwait
or
and
jecxz
sbb
adc
and
cdq
push
push
lea
fisttp
dec
inc
fs
aaa
push
cmp
sub
clc
and
xor
xlat
mov
mov
enter
addr16
inc
cs
mov
add
ret
(bad)
jne
or
mov
inc
pop
add
movs
in
inc
lock
sti
xchg
inc
and
sahf
rol
add
fstp
push
adc
cmp
or
inc
scas
adc
mov
rol
clc
add
or
in
jmp
pusha
pushf
add
jne
clc
mov
cmps
cmp
mov
cmp
jge
sbb
add
pop
add
add
mov
adc
jae
sub
add
(bad)
neg
data16
pusha
push
push
dec
shr
sbb
and
add
fldenv
or
add
shl
pop
add
in
dec
call
add
add
pusha
movs
or
ret
add
fcomp
xor
sar
inc
cwde
mov
movs
ds
pop
cmp
jne
adc
jg
mov
pop
mov
(bad)
lock
xchg
cmp
loopne
xchg
and
add
pop
mov
push
dec
mov
push
cmp
or
nop
pop
inc
and
rol
pop
imul
and
xor
lahf
or
and
xchg
fdivr
movs
pusha
mov
jo
icebp
mov
or
stos
xchg
add
movs
adc
adc
rol
cdq
idiv
xchg
or
stos
ins
add
add
(bad)
adc
xor
sub
mov
mov
jl
add
mov
mov
adc
or
outs
imul
and
les
lahf
jmp
inc
(bad)
ss
add
xor
sub
fstp
shr
loope
mov
sbb
mov
xor
loope
leave
shl
mov
jo
in
call
or
push
add
jnp
add
push
add
push
aas
xor
cmp
jge
dec
dec
inc
and
dec
aas
sub
fidiv
sbb
je
(bad)
imul
cmp
mov
sbb
jb
cmp
pop
push
test
push
pusha
test
add
lock
pop
sub
xchg
pushf
cwde
pop
pop
ins
and
add
adc
jl
(bad)
data16
cdq
xlat
pop
and
inc
cmp
add
loopne
inc
lea
sbb
fwait
mov
shr
and
inc
and
jb
push
sub
rcr
dec
and
mov
jbe
or
arpl
clc
add
sti
lea
mov
movs
movs
xchg
xor
mov
pop
adc
and
mov
jl
jnp
mov
mov
xor
push
fsub
add
inc
sub
movs
pop
rol
pop
mov
outs
cmp
add
jbe
push
push
popa
je
dec
xor
mov
cmp
ja
inc
jae
push
push
adc
push
inc
outs
or
dec
es
push
push
fs
xchg
mov
sub
fisubr
test
jnp
test
movs
push
bound
scas
cmp
mov
xor
(bad)
mov
adc
xlat
push
shr
push
mov
push
cld
xor
test
pop
add
add
jne
jb
popa
(bad)
cvtps2pd
gs
out
adc
or
adc
stc
and
sub
lods
mov
dec
push
fmul
jne
xor
cmps
wbinvd
add
cld
cmp
test
or
iret
cmps
inc
ret
jbe
in
call
push
pop
pop
add
cmps
jne
push
add
sub
dec
cmp
inc
sub
xchg
push
inc
adc
out
cmps
aad
and
js
inc
in
mov
jle
test
cmp
adc
ror
dec
in
add
icebp
fwait
sub
or
pusha
mov
mov
add
add
inc
cmps
pop
mov
pop
cld
cmps
call
mov
inc
mov
pop
cmps
fs
mov
or
sbb
not
jmp
arpl
sbb
cmp
mov
adc
mov
(bad)
pop
inc
or
jb
dec
ficom
jno
inc
adc
inc
or
jae
pop
fs
int
add
lds
loopne
xchg
mov
push
outs
inc
ins
into
(bad)
jge
aam
out
test
das
push
push
inc
cs
add
test
fwait
add
lods
scas
mov
jg
push
in
arpl
daa
add
shl
loopne
ss
ins
ins
leave
sub
dec
add
lds
rol
mov
dec
add
cmp
repnz
sbb
aas
jmp
add
mov
(bad)
adc
xchg
icebp
rcl
(bad)
mov
cmps
pushf
mov
in
loopne
mov
mov
or
cld
test
jge
mov
and
inc
test
shl
sti
int
cmps
fwait
je
mov
jns
adc
out
mov
pop
dec
ret
div
test
mul
mov
mov
cmp
or
mov
push
and
dec
or
and
dec
mov
or
mov
add
or
pop
bound
(bad)
mov
xchg
or
pop
add
inc
mov
test
aad
cmp
ret
ja
cmp
loop
lock
rol
jns
push
cmp
mov
fsubr
arpl
xlat
ret
nop
pop
mov
jle
fsubr
add
aaa
add
icebp
rcl
inc
(bad)
into
mov
or
xor
pop
out
or
inc
les
inc
cmps
pop
cmps
xor
outs
pop
add
sbb
push
pop
or
outs
sbb
or
movs
iret
pop
or
or
(bad)
dec
pop
fist
aam
sbb
jbe
gs
cmc
daa
push
pop
mov
outs
add
lods
ss
lods
adc
and
jne
inc
push
shl
hlt
inc
sub
push
pop
mov
add
inc
lods
dec
in
cmps
test
call
cwde
jmp
mov
add
dec
ins
push
dec
add
cmp
mov
scas
mov
xlat
imul
push
pop
(bad)
xor
hlt
lahf
adc
gs
or
in
mov
jmp
xor
push
push
or
and
add
repnz
sub
jg
pop
dec
mov
sub
dec
pop
fiadd
sub
push
push
dec
sub
jle
js
and
jnp
and
add
repnz
push
jnp
inc
add
lea
ins
call
add
ja
add
sub
xchg
lds
and
das
dec
addr16
sub
xchg
ja
adc
adc
adc
cmps
mov
cmp
sti
pop
mov
push
mov
mov
loope
(bad)
imul
retf
arpl
sub
int3
arpl
int
cmps
and
pop
aam
push
jl
call
or
push
dec
inc
cmc
nop/reserved
cmp
cmp
dec
dec
cmp
cmp
push
push
loop
lods
pop
add
mov
add
jo
ja
mov
push
cmc
inc
inc
lods
pusha
inc
push
dec
ret
mov
push
popa
ja
jae
and
jbe
pop
out
pusha
loopne
add
push
push
sahf
fisttp
xor
fisubr
es
imul
test
shl
shl
dec
popa
ins
loopne
fsubr
jne
addr16
sbb
scas
or
ss
loopne
pop
mov
xor
imul
call
cmp
ins
mov
shl
jb
add
in
cmp
dec
or
fsub
push
arpl
out
mov
or
adc
movs
xor
cdq
cmp
add
push
fcom
comiss
leave
push
xchg
jne
outs
ins
clc
xchg
mov
retf
add
(bad)
(bad)
and
repnz
fadd
push
jecxz
dec
inc
push
popa
mov
jge
in
setl
gs
js
jb
aaa
xchg
mov
ins
popa
and
inc
dec
push
rol
sbb
sub
jno
leave
std
cmps
dec
xor
push
dec
add
jmp
mov
jge
or
push
add
push
fcmovb
mov
mov
push
mov
(bad)
cmps
dec
sbb
data16
jb
or
add
xor
aaa
ret
mov
push
sbb
int
ins
test
ss
and
and
je
add
push
add
mov
add
pop
popf
movs
sahf
call
nop
sub
mov
lds
dec
jecxz
or
lds
ror
call
dec
imul
push
pop
in
call
dec
add
adc
push
lds
add
sbb
mov
stos
push
pop
jmp
push
add
inc
cmp
cmp
push
cmp
or
xor
jnp
mov
jns
(bad)
cmp
stos
sbb
mov
sbb
pop
or
loopne
sub
dec
push
mov
add
int
stos
dec
mov
dec
or
push
lods
jmp
or
push
inc
mov
jno
jmp
pop
or
inc
add
add
(bad)
out
repnz
lar
pop
xor
fiadd
xchg
outs
push
push
loopne
pop
adc
sub
pop
jnp
js
adc
push
lods
call
inc
addr16
mov
rcr
pop
mov
xor
out
or
cs
push
sub
push
inc
inc
inc
inc
mov
inc
sub
mov
rol
cmp
jp
jl
arpl
xchg
inc
inc
sub
mov
outs
push
dec
push
retf
adc
mov
(bad)
sub
push
cmp
mov
sub
adc
arpl
stos
loopne
pop
and
les
inc
sbb
ja
enter
and
and
into
repnz
inc
fdiv
xlat
add
push
dec
and
add
add
inc
mov
xchg
pop
or
adc
or
xchg
add
mov
inc
gs
xor
jo
fwait
or
ja
sbb
lods
adc
idiv
inc
jns
test
lock
adc
cdq
ss
xor
test
sbb
imul
add
or
in
fcmovnb
mov
jge
add
call
dec
daa
lds
add
repz
sar
imul
or
adc
add
adc
mov
loopne
or
xchg
dec
and
adc
pop
or
dec
jmp
add
icebp
pop
jb
xor
arpl
mov
dec
outs
jb
retf
sub
dec
or
jge
inc
jbe
test
rol
mov
or
xchg
icebp
mov
inc
stc
mov
jae
enter
arpl
or
std
fiadd
(bad)
cmp
push
cwde
add
out
mul
loope
out
push
sub
mov
pop
inc
call
mov
mov
xchg
movs
sub
enter
lods
fbld
push
dec
mov
xor
mov
ss
jbe
mov
imul
lahf
cmp
and
cmp
icebp
shl
cmp
fmul
lods
add
pop
sbb
lds
add
call
adc
push
or
and
add
push
int
adc
jp
or
and
rol
adc
sub
lods
aam
popa
jo
idiv
push
fdivr
das
jmp
dec
(bad)
div
jns
test
sbb
push
sbb
add
adc
jmp
jmp
mov
sbb
add
dec
mov
jmp
cmp
push
and
add
pop
jae
aad
push
adc
loope
aam
push
out
fiadd
and
mov
add
fs
add
dec
mov
push
ja
add
and
mov
push
ins
jne
push
push
adc
adc
inc
push
pop
test
js
mov
adc
push
fs
add
in
mov
cmp
rcl
inc
inc
neg
rcr
in
jl
push
dec
rol
das
loopne
int3
fisub
or
mov
mov
pop
lock
test
cs
mov
lock
or
pushf
fmul
mov
pushf
pushf
pushf
mov
pushf
pushf
lods
mov
les
adc
adc
inc
inc
arpl
sub
mov
pusha
adc
test
aam
sbb
xor
xchg
xor
add
sbb
js
arpl
loop
mov
mov
pusha
test
inc
cwde
push
aaa
ror
xchg
outs
lahf
lods
arpl
inc
mov
dec
test
add
adc
mov
ja
dec
nop
xchg
(bad)
adc
mov
jmp
les
mov
fidiv
or
cmc
ret
les
sub
das
push
ret
and
add
stos
cmps
sub
ss
cmp
in
xor
sub
cmp
ins
and
inc
push
jb
adc
push
out
and
adc
push
setno
mov
jb
jno
adc
push
inc
retf
xor
mov
adc
hlt
(bad)
call
or
mul
pop
and
mov
sbb
(bad)
lds
fs
pushf
cmp
lds
jmp
add
adc
jmp
mov
in
out
test
outs
sbb
add
lods
add
add
mov
inc
pop
jnp
mov
pop
push
pop
push
cmp
mov
push
ds
jmp
add
aas
fidiv
or
les
vpmullw
push
sub
add
add
scas
ret
or
mov
and
fisttp
js
mov
xchg
xchg
retf
xchg
sti
pop
lds
push
xchg
xchg
mov
icebp
jl
shl
sti
push
fist
nop
enter
aad
les
lods
pop
call
add
pusha
lock
shr
repnz
cmc
es
pop
add
add
lahf
rcr
je
push
test
call
inc
dec
outs
mov
sub
add
pushf
adc
xchg
cmp
sbb
add
enter
jl
add
xor
jmp
mov
mov
or
xor
xor
fs
jno
jb
cmp
pop
mov
dec
ds
(bad)
sub
pop
push
jno
pop
loopne
arpl
or
das
jbe
xor
dec
adc
and
add
or
call
pop
adc
lock
sbb
adc
pop
sbb
in
call
in
add
fldcw
enter
adc
xchg
xchg
xchg
xchg
xor
mov
jge
fs
xchg
and
out
push
jge
outs
das
mov
jmp
mov
add
inc
retf
mov
xchg
popa
ret
inc
pop
push
inc
and
xor
mov
jae
cmp
in
icebp
pop
inc
inc
jnp
or
call
and
adc
stos
push
xchg
inc
(bad)
add
and
add
add
add
je
jg
xor
fs
or
scas
dec
das
out
loopne
push
enter
add
mov
inc
push
push
shr
mul
adc
mov
and
mov
jg
push
push
xor
mov
xchg
add
xor
mov
arpl
push
lds
mov
jb
dec
loope
sbb
shl
rcr
sbb
int
jae
and
imul
inc
sub
sub
dec
jnp
xor
xor
xor
cmp
xor
sar
inc
inc
inc
pop
cmp
inc
je
dec
pop
and
pop
pop
daa
dec
imul
pusha
shl
fs
lods
jo
dec
je
inc
xor
push
cs
leave
in
movs
or
adc
adc
or
leave
sbb
lea
add
sbb
sbb
sub
cmp
pop
sbb
sbb
inc
lea
daa
sbb
sub
mov
add
cs
xchg
add
cmp
add
inc
dec
retf
shl
push
mov
es
or
call
xchg
jne
and
loopne
pushf
pop
push
jns
shl
adc
dec
cs
pushf
xor
push
fsub
xchg
dec
dec
pusha
fcomp
aam
retf
and
xchg
aam
leave
gs
xchg
rol
shl
or
leave
leave
int3
hlt
xchg
jbe
jle
and
dec
mov
sub
enter
and
inc
xchg
push
mov
sub
xor
sub
js
add
or
setae
jmp
setge
lock
xor
inc
push
inc
mov
repnz
xor
inc
ror
cwde
cmp
lahf
push
nop
fnstcw
adc
cmc
js
leave
xchg
adc
push
les
xor
xor
outs
xor
mov
sub
xor
mov
lods
rcr
inc
push
fnstcw
cmp
inc
clc
sub
dec
xor
inc
cmp
push
rol
je
push
(bad)
sti
sar
pop
pop
fwait
jmp
jo
mov
inc
ss
sbb
enter
shl
mov
lock
sub
add
lods
ss
pop
pop
mov
outs
cmp
jne
or
add
jmp
jl
aad
outs
pop
(bad)
fild
fdiv
cmps
pusha
push
shr
cmp
fs
and
popa
xlat
pop
add
mov
pusha
jmp
cdq
mov
fld
ret
push
loopne
fisttp
jne
sbb
and
dec
or
mov
inc
mov
shl
and
scas
mov
or
sbb
pop
test
ror
dec
dec
add
xchg
or
arpl
jl
rep
daa
ffreep
add
scas
inc
aaa
outs
or
adc
aas
sldt
inc
add
add
ins
aaa
pop
dec
rcr
loop
test
push
jg
mov
scas
aad
add
gs
pop
xor
stos
and
loop
ja
mov
(bad)
jg
imul
outs
mov
dec
pusha
add
ins
push
not
movs
shr
jg
adc
shl
shr
(bad)
clc
mov
push
inc
cs
xlat
inc
add
fbld
push
push
add
ins
add
and
sbb
and
aas
push
add
adc
(bad)
dec
pop
and
std
stos
and
adc
dec
ds
out
adc
push
aas
push
mov
fs
sbb
add
mov
sbb
push
and
mov
fwait
add
dec
mov
lock
ret
jle
mov
add
mov
and
jae
add
push
inc
mov
test
fadd
pusha
aas
imul
mov
pop
pop
jae
jp
sub
and
mov
mov
jl
mov
mov
push
jae
inc
xchg
shr
cmp
xchg
js
mov
add
imul
mov
pop
(bad)
das
popa
loopne
jno
das
fdiv
pop
push
dec
clc
cmc
sbb
aas
sti
rol
mov
xor
inc
inc
loop
and
rcl
ins
add
in
add
cmps
push
mov
mov
mov
and
(bad)
xor
or
aas
mov
cmp
mov
or
jp
cmps
or
cmp
inc
sbb
loope
inc
jl
and
fcmove
sub
loop
test
call
ss
pop
int3
inc
ja
dec
sbb
jecxz
iret
or
inc
sub
add
test
outs
ds
fdivr
pop
cld
pop
add
push
add
sbb
jmp
fisub
mov
inc
cmp
clc
xchg
in
add
arpl
mov
and
add
mov
cmp
xor
add
(bad)
and
cmc
push
pop
popa
fisub
and
fbstp
push
ins
ret
cmps
fbld
sub
arpl
ins
mov
adc
push
dec
xor
sub
mov
loopne
add
push
sbb
aas
ret
mov
xchg
mov
xor
ds
add
mov
inc
add
xchg
lock
xor
mov
mov
mov
push
jb
pop
sub
jmp
sub
ficomp
(bad)
movs
xchg
xor
out
dec
aas
ror
jbe
cwde
sqrtps
lods
fs
inc
ret
pop
pop
xor
pop
movs
(bad)
mov
shl
mov
xchg
sahf
lds
adc
push
jg
mov
sbb
adc
bound
sbb
mov
jo
fstp
retf
or
test
jnp
fsubr
jle
test
or
jle
mov
xchg
mov
xchg
fst
pop
and
mov
inc
jle
mov
or
ss
inc
inc
aam
dec
adc
pop
pop
sbb
xor
sbb
inc
and
dec
aas
push
add
xchg
jle
dec
xchg
jae
sub
sub
pop
sub
imul
mov
pop
test
xchg
push
or
(bad)
mov
(bad)
scas
pop
in
inc
mov
or
or
sbb
cdq
cmp
inc
dec
sbb
and
mov
fistp
add
jnp
scas
jge
inc
in
pusha
adc
add
adc
mov
jb
add
pop
cmp
dec
and
rcl
jae
jae
add
push
add
adc
sub
mov
sbb
and
pop
push
movs
jae
arpl
push
add
dec
lock
movs
mov
xchg
add
pop
push
mov
pop
pop
sub
(bad)
xchg
push
movzx
test
mov
cmp
shl
push
dec
push
add
mov
or
iret
add
out
mov
popa
mov
dec
sbb
inc
mov
jnp
mov
adc
adc
sbb
sub
sbb
lock
mov
xchg
dec
lock
sub
loope
sbb
mov
xchg
and
inc
in
test
mov
rol
fild
mov
inc
je
test
mov
pop
sub
and
jne
js
arpl
sbb
push
jo
jmp
push
shl
cmp
mov
adc
shl
add
into
rcl
cld
clc
ret
mov
in
or
cld
adc
pop
mov
stos
or
div
push
xchg
xor
jo
loop
mov
push
xlat
add
cmps
inc
sbb
mov
call
clc
fstp
add
outs
and
push
lock
and
out
push
clc
mov
mov
cmp
int3
cli
xor
sbb
mov
cli
push
fild
push
jmp
bound
loop
cmp
dec
cmp
pop
inc
inc
sbb
inc
clc
jl
inc
xor
jp
sub
fucomp
popf
add
xchg
inc
rcl
lods
mov
mov
push
push
jo
rcr
in
call
jle
dec
jne
or
arpl
sbb
pop
prefetch
into
shr
and
aaa
add
or
and
inc
adc
dec
ror
in
je
dec
les
sbb
mov
rcl
adc
test
and
outs
test
mov
xchg
or
jbe
mov
xchg
add
ins
imul
xor
out
mov
inc
xchg
and
call
es
mov
sar
clc
mov
repnz
mov
sbb
xchg
lock
jae
dec
in
mov
int
cmp
mov
xor
repnz
hlt
in
loopne
imul
loopne
fdivr
xor
cmp
jbe
int3
fdivr
les
jno
add
adc
in
or
scas
mov
inc
add
mov
es
push
aaa
or
sub
mov
nop
fsub
rol
push
aam
fadd
push
xor
test
sbb
outs
inc
pop
add
push
jmp
daa
push
scas
ret
movs
adc
or
jb
or
mov
lahf
clc
pop
add
pop
add
scas
dec
pop
push
ret
into
jbe
arpl
fwait
outs
loopne
addr16
dec
rol
or
and
dec
cs
pushf
pushf
leave
gs
retf
lods
lods
mov
xor
mov
mov
das
inc
jecxz
and
push
xchg
xchg
sub
fisttp
pop
add
cmp
mov
xchg
push
push
add
and
inc
jg
add
rol
popf
je
cmp
xchg
inc
pop
pop
aas
mov
inc
call
add
add
or
cmp
xor
dec
idiv
push
sub
sub
cmp
(bad)
addr16
(bad)
lock
xchg
mov
mov
shr
mov
jo
mov
aam
pop
ja
mov
dec
sub
nop
retf
mov
and
movs
in
sub
ret
dec
xchg
sub
nop
xchg
xchg
add
pushf
push
jb
xchg
pushf
sub
xchg
sbb
loopne
adc
jno
xchg
retf
loopne
push
xchg
push
inc
mov
inc
jo
add
sub
jbe
xlat
pushf
stc
mov
jmp
popa
cmp
das
xor
pop
repnz
mov
xor
hlt
push
adc
or
(bad)
out
daa
les
imul
sub
in
mov
fisttp
sub
adc
stos
add
iret
add
or
push
dec
add
outs
or
xchg
ret
outs
cli
mov
add
push
adc
lea
add
jno
out
inc
add
mov
lahf
inc
iret
frstor
inc
dec
aas
daa
pushf
test
mov
aas
jne
jge
sbb
inc
inc
push
pop
dec
xchg
sub
inc
sbb
mov
cmps
bound
icebp
nop
add
cmp
daa
test
xchg
add
icebp
inc
adc
out
outs
loopne
popf
(bad)
hlt
push
push
outs
vmread
jecxz
pushf
and
adc
sbb
pop
repnz
xor
add
(bad)
loopne
leave
jbe
dec
loope
adc
dec
add
mov
push
sub
add
xor
pop
push
add
call
adc
addr16
add
shr
aam
dec
sub
adc
loope
test
hlt
inc
inc
pusha
jno
arpl
add
adc
pop
jmp
push
setne
mov
mov
xlat
and
inc
popf
ss
jo
sub
loopne
inc
and
jp
xor
adc
push
loopne
mov
int3
add
push
test
mov
mov
fadd
mov
jb
aam
mov
stc
fsub
mov
mov
sbb
add
jnp
dec
sbb
hlt
popa
or
sub
mov
fild
call
xadd
pusha
dec
adc
dec
movs
fist
les
ja
mov
movs
imul
and
pop
and
(bad)
jmp
pop
add
inc
push
pop
xor
cmps
inc
inc
mov
aaa
addr16
mov
xor
add
add
xchg
xchg
mov
push
pop
sbb
mov
adc
jnp
enter
pop
das
mov
rcr
adc
clc
mov
mov
xor
and
hlt
push
pop
or
add
je
inc
mov
pop
add
lds
test
xor
mov
adc
mov
aaa
mov
test
xchg
not
push
retf
clc
push
call
enter
mov
data16
add
sbb
jne
sub
cs
mov
mov
neg
sub
inc
push
lods
pop
shr
add
mov
fs
xor
inc
xchg
add
and
add
and
or
jo
jb
popa
je
or
jns
(bad)
(bad)
test
(bad)
in
inc
and
jae
sbb
cmp
add
repnz
loop
adc
loopne
femms
out
mov
(bad)
push
clc
push
stc
push
dec
dec
sar
fidiv
mov
out
mov
movlps
adc
cs
sbb
fisubr
and
or
and
gs
pop
cli
xchg
cmp
daa
mov
aas
pop
cli
int3
shl
mov
pop
lea
(bad)
out
adc
xchg
jo
pop
or
push
add
jns
add
(bad)
jg
mov
or
fimul
cmp
jb
dec
js
add
add
pop
mov
or
pop
sbb
sub
shr
push
or
adc
js
jae
jae
push
pushf
daa
hlt
jno
lahf
das
pop
push
(bad)
sub
pushf
das
inc
lahf
repz
in
jb
sbb
mov
mov
push
jo
aad
shr
pop
lea
fs
loopne
pop
scas
pop
pushf
shr
jmp
movs
adc
mov
add
add
(bad)
aam
sti
lea
ja
scas
jp
add
xor
loop
xor
jne
dec
add
lds
pop
ins
and
sar
dec
jne
shl
jbe
imul
or
or
pop
cli
add
push
aam
les
and
pop
loop
push
pop
enter
test
cld
or
retf
clc
cmc
dec
push
adc
dec
push
icebp
femms
xchg
push
dec
leave
mov
add
shr
and
mov
cli
adc
fistp
ror
inc
inc
add
mov
inc
xor
dec
pop
test
aaa
sub
aas
je
jmp
mov
inc
inc
or
push
mov
sti
pop
cld
cli
inc
mov
outs
jb
cmp
push
add
or
test
jo
inc
dec
jb
xchg
push
fmul
inc
inc
jg
push
imul
or
push
xor
xchg
pop
cmc
test
and
scas
ins
add
push
je
mov
mov
rol
mov
pop
xchg
and
fld
pop
add
dec
cmp
jmp
pop
and
daa
scas
add
ss
cmp
dec
mov
sbb
icebp
pushf
mov
dec
les
mov
fld
mov
adc
push
inc
xchg
aas
mov
lds
adc
adc
inc
inc
or
inc
add
sbb
(bad)
adc
inc
daa
push
sub
adc
sbb
icebp
push
add
jo
dec
or
pop
push
push
xor
das
xor
push
inc
shl
dec
mov
mov
and
sar
pop
push
or
pop
ret
push
cmp
and
fcomi
add
es
fdiv
mov
ret
rol
inc
inc
test
in
bound
iret
aaa
mov
setnp
pop
outs
ss
mov
add
add
ret
nop
adc
jecxz
iret
neg
push
jnp
into
aad
add
or
or
mov
mov
rcr
pop
sub
test
mov
(bad)
into
adc
push
sbb
sub
push
hlt
mov
push
sbb
xchg
mov
adc
data16
add
inc
jl
mov
jp
pop
dec
sbb
mov
lock
in
lea
dec
clc
sub
rcl
or
pmovmskb
xor
dec
cmp
lock
(bad)
sbb
and
push
push
pop
push
push
pop
ret
pop
ss
push
cmc
icebp
xlat
add
call
jmp
jmp
test
aam
js
int3
adc
add
ins
cs
fwait
mov
out
sbb
bndstx
dec
jo
les
retf
cmp
sbb
sub
test
mov
sbb
lea
retf
and
push
sub
jle
add
mov
mov
in
rol
fbld
(bad)
jle
pop
mov
std
mov
int3
iret
inc
lods
push
fs
add
pop
lock
pop
pop
push
pop
or
ficomp
fs
mov
xor
sbb
pop
bound
fucomip
les
dec
jmp
or
scas
or
jg
jl
or
jmp
and
xor
ret
scas
pop
dec
icebp
sbb
or
rcl
add
dec
mov
add
les
jge
ret
mov
(bad)
jmp
xor
ror
pop
push
out
inc
push
sbb
icebp
jge
push
test
push
pop
and
jl
pop
dec
push
add
std
dec
arpl
inc
mov
jp
cmp
or
push
xchg
sub
add
pop
fld
das
je
and
or
push
push
add
push
fs
mov
cmps
push
imul
or
fs
xlat
add
xor
loopne
sub
and
in
pop
pop
cmp
push
addr16
sbb
add
push
nop
outs
fs
cmp
jl
jl
sub
jmp
cmps
adc
outs
pop
scas
nop
fs
fld
test
das
test
outs
push
imul
inc
clc
sbb
xchg
nop
mov
pusha
jecxz
xor
lods
repz
sub
mov
les
pushf
(bad)
xor
jb
dec
or
add
cmp
cs
xor
in
inc
xchg
and
sti
(bad)
push
clc
or
mov
jne
jmp
xor
sbb
or
xor
mov
in
adc
or
fild
add
loopne
add
fwait
ret
jl
cmp
mov
mov
ret
mov
mov
and
arpl
pop
sbb
clc
inc
add
enter
cli
inc
jmp
add
or
fs
or
ja
jp
adc
add
adc
jg
(bad)
mov
pop
ret
mov
div
xchg
lds
or
(bad)
bound
sbb
push
dec
rol
xor
xor
add
xor
lock
ins
fwait
ror
stc
cmp
inc
fnstsw
popf
call
in
clc
arpl
cwde
icebp
in
mov
addr16
xlat
cmp
push
jne
add
push
icebp
aas
or
inc
shl
mov
popf
dec
adc
fimul
repz
ja
cmp
cdq
or
out
fwait
imul
or
xor
push
lahf
sub
fld
int
push
add
ror
adc
push
fs
or
and
jmp
and
add
int
jo
ins
xlat
pushf
(bad)
data16
sub
push
add
jns
dec
sar
rol
fs
gs
and
dec
jne
jne
cs
sub
push
xchg
aas
jo
inc
dec
or
js
add
loope
mov
inc
(bad)
js
mov
mulps
inc
jb
gs
inc
repnz
inc
js
jmp
out
fmul
sbb
int
shl
bound
add
inc
outs
push
mov
add
adc
sub
addr16
out
and
jne
fs
jae
xchg
or
adc
xchg
mov
xchg
gs
dec
test
cmp
outs
add
xor
call
and
adc
xchg
fsubr
sub
sar
inc
popa
add
cld
jecxz
loop
push
add
cli
jg
lea
add
mov
mov
sbb
or
lds
enter
test
inc
pop
mov
lock
call
lds
lock
into
mov
daa
push
mov
mov
idiv
shr
mov
add
fdiv
cmp
mov
int
or
loopne
pop
pop
iret
mov
fs
push
mov
ss
jae
jl
push
sub
paddb
inc
add
inc
sub
inc
add
cmp
pop
add
add
mov
iret
ror
mov
dec
test
or
ror
push
inc
getsec
or
mov
pop
push
orps
ss
sbb
dec
outs
add
xchg
addr16
stos
push
add
jmp
cmp
aas
jne
dec
arpl
adc
xor
adc
push
pop
dec
add
jg
inc
push
outs
outs
shl
dec
jne
jnp
pop
cmp
add
jnp
or
adc
push
gs
outs
test
push
push
inc
js
pop
(bad)
fs
cs
pop
push
rol
scas
fst
mov
pop
rcr
ret
ins
sub
sbb
test
mov
in
mov
pop
sbb
push
dec
push
fsubr
loop
fs
add
popa
and
scas
adc
fadd
popa
inc
popf
add
add
xor
inc
cmps
test
cs
icebp
sub
xor
or
push
ja
push
mov
and
cmps
(bad)
xor
push
xor
push
int
push
add
jns
in
(bad)
iret
xchg
mov
push
ds
ja
dec
outs
pcmpeqd
jg
cmp
pusha
adc
mov
dec
dec
inc
xchg
pop
push
pushf
xchg
xchg
daa
daa
fstp
pop
pop
outs
fist
sbb
aam
daa
and
sbb
cmc
xchg
xchg
xchg
daa
pusha
sbb
enter
into
pusha
lds
add
and
or
(bad)
ins
xor
clc
add
and
add
mov
aas
in
dec
adc
add
or
add
or
and
div
mov
or
inc
sub
rol
or
adc
aad
jp
xor
add
cmp
or
(bad)
and
adc
outs
popa
mov
into
imul
cs
rcr
push
sbb
mov
sub
dec
and
aad
or
ret
pop
and
je
jbe
add
les
dec
lock
mov
mov
test
and
bound
sti
mov
inc
or
aad
dec
and
adc
mov
and
arpl
sbb
xchg
mov
cwde
ret
xor
add
add
loopne
sub
popf
ret
and
aas
push
xor
clc
push
dec
in
fadd
fwait
ror
inc
int
pop
dec
and
push
or
int3
int3
adc
xchg
dec
outs
mov
clc
push
or
nop
ins
inc
sub
in
xor
adc
add
ja
sub
lds
add
adc
add
pop
rcl
and
bound
add
xor
out
retf
or
lock
push
inc
in
pop
jbe
and
add
mov
mov
sbb
xchg
add
pop
sbb
loope
jecxz
and
imul
sbb
mov
mov
fisttp
sbb
xor
or
push
push
dec
and
rcl
ret
add
push
xchg
jb
je
jno
push
or
mov
ja
rol
cmp
or
shl
test
xchg
imul
and
ss
adc
xchg
ret
add
adc
addr16
sub
and
rcl
add
adc
adc
push
mov
adc
leave
(bad)
lea
mov
cmps
xchg
add
mov
test
or
rcl
jne
cmps
sbb
fnstenv
xlat
push
gs
pop
mov
xor
icebp
add
and
mov
or
cli
loop
or
add
adc
mov
xor
ror
enter
or
xor
xchg
add
push
adc
jnp
and
(bad)
mov
add
scas
xor
push
push
mov
mov
fs
add
cmp
jge
pop
les
and
mov
xlat
mov
pop
push
add
add
mov
clc
push
adc
sar
es
test
mov
lahf
jbe
pop
clc
push
ja
ret
add
cmp
push
rol
xchg
cmp
push
push
push
fs
jle
aad
mov
and
push
dec
daa
test
add
popa
xchg
hlt
push
adc
and
pop
pop
clc
or
std
and
and
push
ror
or
sbb
xor
(bad)
std
inc
push
push
mov
mov
and
add
or
dec
mov
ret
lock
aaa
fwait
or
cmps
pop
inc
jle
mov
clc
add
cs
mov
push
or
adc
mov
je
add
lock
adc
mov
pop
es
outs
arpl
xor
pop
lods
pop
fs
xchg
adc
xchg
cmp
cmps
xor
aaa
push
jo
ret
add
push
lds
mov
add
jg
dec
mov
fiadd
popf
mov
enter
iret
mov
or
je
mov
sbb
xchg
mov
cmps
adc
das
xor
pop
cmp
mov
or
pop
push
cmp
cwde
push
rep
inc
(bad)
jle
or
adc
inc
les
dec
aas
dec
movs
out
hlt
rcr
pusha
pop
mov
jl
push
cmp
hlt
in
mov
sub
xor
div
mov
iret
enter
popa
rcl
jl
push
dec
add
add
inc
cmp
dec
pop
lea
push
aaa
jne
adc
and
push
int
sbb
jae
jl
sub
das
cmp
jbe
pop
add
sub
add
inc
or
or
dec
sbb
mov
adc
cld
inc
and
and
dec
rcl
mov
adc
rol
mov
pop
adc
and
inc
mov
in
xor
add
adc
adc
add
out
mov
mov
jno
aaa
je
ret
push
fsubr
dec
fcomp
mov
add
mov
aas
and
and
enter
idiv
cmp
into
leave
fiadd
loopne
xchg
rol
inc
loopne
stc
xor
pop
cmp
dec
fsub
dec
push
fsub
mov
inc
mov
add
shl
enter
mov
test
sub
sar
(bad)
pop
cld
push
rol
push
jl
inc
pusha
lea
mov
(bad)
cmc
cmp
jge
pop
jb
cli
jg
add
xor
push
push
add
add
mov
jmp
adc
shr
push
adc
jg
mov
push
inc
dec
jne
xlat
outs
and
sbb
xor
daa
jp
xor
add
pop
(bad)
and
(bad)
fmul
not
inc
inc
dec
addr16
pop
dec
xchg
mul
push
cmp
fiadd
or
rcl
mov
outs
adc
jp
pusha
add
push
and
add
ffree
js
xor
shl
push
cld
xor
dec
or
and
pop
call
and
sbb
or
xchg
pop
push
clc
inc
mov
imul
mov
or
sub
mov
popa
mov
inc
add
sub
stc
mov
sub
pop
enter
jle
lods
retf
sahf
xchg
popa
or
hlt
push
cld
ins
mov
jae
push
xor
and
sahf
mov
sub
sbb
add
xor
pop
or
stos
mov
mov
sbb
cmp
dec
loop
mov
int3
and
dec
and
(bad)
aas
jge
adc
push
xchg
xchg
pusha
add
in
push
cvtps2pd
add
jb
outs
cmp
ins
popa
test
add
mov
dec
es
or
mov
jl
mov
or
push
xor
jbe
add
mov
adc
fnstcw
sub
sub
mov
cmp
adc
mov
sub
mov
daa
hlt
and
out
jecxz
jo
jne
inc
and
mov
lock
dec
or
inc
inc
call
test
jl
xor
lahf
add
and
sbb
or
out
es
in
adc
dec
test
inc
add
or
adc
xor
or
in
inc
loopne
or
jae
ins
imul
(bad)
dec
add
popa
and
push
push
ja
outs
test
ins
loopne
pop
xchg
arpl
or
(bad)
cmp
daa
pusha
pop
push
and
sbb
rcr
sub
in
les
or
jo
adc
call
add
jo
leave
cmp
pop
xor
or
stos
sbb
or
adc
xor
mov
jge
push
ins
inc
xchg
loope
mov
pop
push
jne
xor
daa
outs
imul
cmp
push
push
scas
jmp
sub
mov
xor
pop
xor
jnp
add
fwait
mov
inc
or
mov
lods
sbb
inc
add
xor
movs
test
push
cmc
sbb
lods
jb
xor
out
or
pusha
shl
xor
fprem1
pop
or
xor
or
aam
popf
dec
or
push
inc
add
int
dec
jge
test
inc
inc
push
push
and
mov
lock
ficomp
pop
rol
daa
out
imul
push
push
push
mov
inc
cwde
jns
inc
faddp
add
bound
or
pusha
call
ins
push
jno
pop
pop
out
adc
in
rcl
stos
push
loope
sub
mov
cmp
xor
or
jmp
repz
dec
stos
mov
nop
push
jo
inc
push
or
lea
fdivr
mov
add
push
(bad)
fimul
push
sbb
mov
jle
call
mov
push
icebp
sbb
js
clc
sub
movd
dec
stc
add
cmp
jne
adc
popf
sbb
sub
ins
and
and
mov
movs
pop
mov
xchg
outs
mov
xor
popa
push
dec
js
out
ins
gs
pop
and
xor
push
aas
sub
dec
sar
(bad)
and
fs
sub
ret
mov
dec
popa
jb
gs
pop
dec
pop
add
or
sub
data16
cmp
xor
pop
add
or
es
push
push
dec
mov
adc
pop
pop
mov
or
clc
in
daa
dec
adc
push
adc
push
aaa
jb
dec
arpl
mov
ins
mov
rcl
add
lahf
jbe
out
xor
push
jmp
mov
mov
dec
icebp
and
cmp
dec
out
add
cmps
inc
aaa
push
jecxz
push
dec
in
outs
lock
pushf
push
mov
nop
aaa
mov
jno
inc
pop
cmp
fstp
(bad)
test
aaa
in
mov
clc
jb
cmp
pop
ds
inc
ss
push
xchg
arpl
int3
mov
push
out
push
les
jo
push
push
mov
dec
bound
pop
neg
mov
loopne
mov
mov
mov
enter
or
jg
mov
xchg
adc
mov
pop
in
or
adc
mov
sub
jae
inc
or
data16
ins
jns
add
fcomp
sahf
inc
test
xchg
sbb
nop
add
sub
fild
outs
jo
add
lods
jecxz
or
js
je
dec
add
or
ins
call
nop
mov
push
sub
or
movs
inc
ins
xor
stc
adc
imul
inc
xchg
inc
or
les
loop
loope
sub
mov
mov
popa
das
vcomisd
fs
mov
enter
jmp
lods
das
int3
arpl
or
ja
aaa
xor
fsubr
outs
or
xchg
inc
fsubr
adc
push
push
add
(bad)
int
or
jmp
jo
arpl
leave
and
test
push
xor
and
sbb
lock
retf
ss
and
and
xchg
mov
and
cmp
jns
(bad)
test
aaa
ja
sbb
inc
inc
cmp
test
pop
neg
add
cmp
daa
add
mov
retf
pop
sti
data16
(bad)
pop
sub
cmp
sub
jno
or
out
add
(bad)
cmp
daa
mov
mov
lahf
out
fs
xchg
xchg
cmp
mov
mov
sbb
push
into
pop
sti
ucomiss
comiss
mov
inc
xor
jae
xchg
pop
pminub
outs
xor
inc
mov
addr16
adc
ins
xor
pop
adc
pmullw
outs
sub
movlps
daa
daa
and
xchg
aad
cmp
xchg
sub
xor
cdq
out
leave
xlat
add
xor
xor
ja
add
add
dec
jb
mov
add
pmaxub
pushf
pop
js
dec
sbb
or
xor
fwait
pusha
loopne
and
sbb
dec
jnp
jno
out
jp
or
lds
sub
mov
daa
cmp
cmp
inc
or
pop
mov
inc
push
and
je
add
daa
or
loope
js
shr
jae
fs
(bad)
and
push
(bad)
jno
imul
fistp
xor
fdiv
mov
xchg
push
cwde
sub
and
inc
loopne
mov
sbb
inc
ins
or
dec
fistp
fwait
inc
add
sub
js
jae
test
fldenv
aas
cmps
enter
and
call
add
test
jno
out
sub
fild
cdq
lahf
add
loopne
add
adc
mov
pop
fistp
dec
add
push
out
dec
push
mov
pop
fwait
pop
push
jl
xlat
push
xchg
je
popa
xor
pop
rcr
pop
xor
xlat
mov
push
sahf
adc
aas
rol
xor
dec
outs
arpl
jo
jne
dec
pop
adc
adc
scas
push
sbb
inc
js
or
mov
mov
xchg
mov
cdq
or
shl
or
or
loop
mov
and
test
mov
add
inc
xchg
lock
jecxz
push
dec
add
pop
sub
inc
dec
jne
test
adc
mov
jmp
dec
xchg
jnp
jae
add
fcmovu
pop
bound
or
jbe
mov
arpl
pop
fld
(bad)
adc
pop
add
or
sub
or
and
bound
sub
push
push
jae
dec
imul
dec
enter
clc
pop
push
sbb
int
inc
das
lea
fcom
mov
add
inc
leave
int3
push
int3
or
cmps
or
mov
add
test
lea
dec
int3
sbb
xchg
cmp
popf
inc
mov
add
cdq
inc
cmp
mov
rol
sub
jb
loopne
xor
call
push
arpl
inc
sub
push
fs
mov
outs
jb
call
shl
(bad)
pushf
and
mov
xchg
add
ins
test
pusha
and
pop
xchg
mov
sbb
add
sbb
imul
add
push
push
push
push
adc
imul
je
and
inc
and
xor
sub
or
ja
in
mov
jnp
cmp
fiadd
and
das
push
sbb
imul
adc
sahf
jae
outs
je
mov
jns
push
call
cmc
and
push
imul
sbb
lods
mov
popa
adc
lods
inc
inc
and
adc
cmc
lods
mov
sbb
pop
test
call
inc
int3
inc
test
icebp
or
mov
add
cld
pop
mov
fs
outs
int
add
pop
pop
add
sub
xchg
xchg
mov
fdiv
or
mov
pop
(bad)
adc
mov
pop
icebp
out
dec
jae
inc
outs
lds
or
ins
test
pop
(bad)
jmp
and
cmc
std
rcl
(bad)
add
or
adc
mov
push
ss
push
(bad)
xor
or
movs
push
cmp
add
jae
nop
stos
and
imul
jno
mov
xchg
fiadd
add
jno
imul
mov
and
in
aas
push
xchg
icebp
nop
(bad)
retf
icebp
daa
mov
and
stos
popa
ret
stc
adc
mov
sbb
add
push
sbb
mov
mov
aas
jns
add
sub
in
ret
pop
sbb
popa
jne
test
sub
fist
in
rcr
popa
ins
ins
cmp
push
shr
and
adc
imul
jmp
cmp
adc
push
push
sub
inc
mov
adc
mov
pushf
fadd
out
test
jb
retf
push
arpl
sbb
daa
sub
nop
imul
xchg
cli
retf
xor
or
mov
int3
arpl
xor
jmp
adc
adc
cld
push
adc
test
inc
dec
jno
push
inc
push
or
pop
add
(bad)
pop
jo
pop
das
cmps
jae
add
xchg
inc
xchg
xor
add
push
bound
cli
mov
in
xchg
imul
adc
call
retf
push
xor
inc
adc
(bad)
fiadd
ins
jo
jns
pop
mov
pop
jnp
adc
push
sbb
rcl
shr
rol
pop
cmc
add
sbb
xlat
pop
loope
mov
cld
loope
add
fimul
bound
or
(bad)
pop
add
and
add
or
test
add
adc
add
cwde
mov
fs
add
jge
(bad)
mov
push
mov
add
xor
sbb
add
cmp
jmp
js
or
movs
add
pushf
push
outs
jne
ret
inc
shl
jo
rcr
call
push
or
sbb
inc
popf
adc
mov
sbb
or
mov
mov
pop
mov
mov
fdivr
pop
dec
mov
mov
popa
xchg
mov
or
lods
push
ret
cmp
test
inc
or
xor
cdq
cmp
add
jge
ror
adc
inc
adc
test
repz
xor
or
push
retf
cmp
dec
xchg
or
sbb
or
lds
shl
push
sqrtps
stos
sbb
cmp
sub
fs
adc
mov
popa
or
xchg
outs
cmps
imul
popa
fldenv
inc
sub
je
sbb
xchg
fisub
and
out
fs
cmps
sbb
fs
and
mov
mov
outs
loopne
push
sbb
xchg
cwde
lods
pop
(bad)
or
mov
mov
in
xchg
jecxz
add
rol
cdq
xchg
inc
or
sub
ret
sub
cdq
xor
sub
pop
xchg
popa
lock
fist
cmp
clc
jnp
mov
xchg
inc
adc
or
sub
lock
jecxz
mov
mov
div
add
sub
into
pop
addr16
push
pop
ja
and
inc
movaps
and
je
sub
pop
dec
push
adc
sbb
test
push
fs
out
retf
and
sub
cmc
pop
cmp
icebp
in
inc
std
mov
daa
or
loop
rol
or
mov
mov
bound
inc
mov
bound
shl
ret
cmp
scas
adc
pop
jge
loope
rcl
fcom
fs
mov
sbb
xchg
xor
add
pop
out
mov
arpl
dec
xor
add
jge
dec
push
clc
mov
outs
pop
pop
pop
add
xchg
daa
scas
push
or
das
and
jle
sahf
(bad)
jnp
xor
xchg
das
movs
lea
(bad)
push
out
out
int3
add
fs
mov
push
ds
ret
sbb
add
mov
fild
mov
push
mov
les
mov
and
inc
or
xor
jo
mul
add
push
ret
sar
cli
push
mov
cld
neg
xchg
inc
xor
jns
xchg
add
cdq
xchg
push
mov
ins
inc
stc
pop
sbb
jae
adc
or
add
and
outs
loope
inc
add
hlt
jnp
clc
and
pop
xchg
push
add
add
daa
and
add
inc
and
adc
sub
inc
ins
or
test
(bad)
subps
clc
or
retf
xor
and
xchg
xor
ret
add
in
jle
ret
int3
fisub
or
lea
jns
sub
cdq
aas
lahf
and
cmps
xor
fistp
sbb
or
or
lea
movs
dec
xor
xor
mov
stos
daa
and
or
mov
movs
jne
adc
call
dec
inc
xchg
movs
or
movs
push
mov
push
pop
push
push
sbb
or
imul
push
push
sbb
jns
sar
push
and
fs
xchg
adc
adc
pop
xor
loopne
push
sbb
xor
nop
add
sub
cmp
sbb
cmp
cmp
push
add
adc
cwde
es
xchg
js
leave
and
push
push
in
cld
dec
adc
shl
cdq
lahf
shr
fcom
inc
mov
or
hlt
das
push
or
callw
in
adc
sbb
inc
test
fs
add
jno
add
es
retf
rol
ret
pop
std
out
jl
inc
xor
hlt
cmp
add
shr
add
dec
jne
(bad)
neg
jp
dec
call
movzx
or
les
sub
sub
or
sbb
push
out
push
rcr
sbb
and
movzx
inc
add
and
outs
and
fst
leave
push
pop
add
push
cmp
fadd
jg
mov
add
inc
shl
pop
out
add
and
pop
add
jle
sub
(bad)
sub
mov
enter
pop
in
outs
sbb
es
hlt
out
adc
xchg
mov
mov
mov
pop
sub
adc
xchg
mov
shr
les
pop
pusha
xchg
mov
add
xor
add
dec
jbe
add
pop
adc
add
lock
cmp
lods
pop
jne
rcl
and
or
or
ret
cmp
jge
mov
push
adc
or
xchg
jo
fwait
loopne
or
sbb
in
mov
pusha
pop
push
push
mov
inc
in
stos
sbb
rol
cdq
dec
vmread
test
jle
sahf
add
xor
jge
jle
movs
xchg
adc
or
pusha
xlat
dec
sub
sahf
jo
jbe
dec
mov
mov
jle
cmp
jle
cmp
and
popa
rcr
add
mov
pop
pop
xchg
adc
rol
add
or
cmp
arpl
pop
fdiv
xchg
test
cmc
dec
shl
shl
and
pop
fiadd
lock
pop
(bad)
or
mov
ror
cmp
jb
in
and
add
or
mov
out
jmp
into
jle
mov
or
or
sub
mov
or
mov
cli
jmp
adc
inc
xor
or
cmp
xor
mov
xchg
repnz
sbb
dec
xor
imul
(bad)
mov
lds
push
mov
and
jmp
sbb
or
cmp
icebp
(bad)
xchg
loope
inc
dec
inc
or
retf
hlt
push
pop
push
jmp
test
popf
and
pop
mov
pop
repz
pop
test
nop
jmp
adc
cmp
xor
and
js
mov
call
retf
mov
push
cmp
nop
mov
in
lods
(bad)
adc
ins
inc
nop
(bad)
pop
add
addr16
(bad)
push
sub
scas
and
xchg
push
cmp
pop
test
cmp
enter
je
test
pop
jne
(bad)
int3
dec
outs
into
sbb
push
test
xchg
ror
aad
outs
ja
call
add
mov
popf
push
jmp
int3
adc
and
add
add
xchg
lea
aaa
test
cmp
movs
pop
pusha
inc
std
ja
loopne
enter
jne
jmp
in
inc
sbb
enter
sub
inc
sub
lock
icebp
xlat
push
sub
inc
cmp
or
out
jmp
inc
sbb
push
mov
mov
dec
sbb
jo
aaa
js
dec
xor
cmp
xchg
jbe
sub
mov
ins
jecxz
je
dec
cdq
xchg
mov
jae
clc
das
sbb
and
and
inc
div
js
rol
push
xchg
(bad)
mov
jno
or
or
or
fadd
test
cmp
test
std
fs
icebp
push
fdiv
jo
icebp
dec
fucomip
push
push
pop
adc
fcomp
pop
gs
test
fisttp
sub
cmps
aas
xchg
add
xor
repz
sub
bound
mov
in
dec
repnz
or
sar
movs
and
xchg
aam
div
bound
sub
rcl
sub
mov
out
xor
or
sbb
xchg
test
shl
sti
repz
sbb
test
bound
repnz
sbb
popa
out
(bad)
xlat
push
dec
pop
cli
cmc
test
scas
adc
leave
cld
lds
jmp
lea
and
jbe
adc
retf
jl
cmp
or
jns
clc
fwait
cmc
imul
shl
cmp
jmp
stc
or
mov
mov
mov
retf
clc
dec
ror
push
sbb
jno
jp
jp
mov
jecxz
sub
sbb
retf
test
add
les
mov
sub
cmp
and
sub
xlat
jo
shl
jbe
dec
jno
je
sbb
nop
call
dec
or
sub
sub
enter
push
mov
(bad)
adc
sbb
xor
movzx
xchg
shr
into
in
jmp
mov
in
adc
cli
mov
cmp
sub
sbb
ins
movs
jns
jno
inc
sub
mov
mov
ror
aad
inc
arpl
mov
jne
stos
arpl
les
dec
int3
sbb
mov
jo
sti
jecxz
mov
inc
and
fbld
xchg
push
andps
mov
inc
and
sub
sub
add
mov
jmp
or
dec
pop
fs
daa
push
jmp
es
xor
jg
pop
pop
adc
xlat
mov
adc
fdiv
leave
xor
iret
adc
sbb
mov
push
aas
mov
popa
sub
sub
test
fild
rcr
aaa
mov
mov
xchg
lock
ins
xor
sub
add
adc
cmp
sbb
gs
aam
sbb
cwde
(bad)
aam
repz
mov
cmp
push
lock
cmp
xor
cwde
ins
or
push
retf
ins
xchg
cwde
jmp
and
cdq
and
cwde
sbb
aam
or
nop
in
or
push
mov
adc
add
fdivr
out
rcr
sbb
fadd
aam
aam
sbb
add
fcomp
push
adc
jbe
fist
cmps
and
call
jg
jge
mov
shl
inc
push
cmp
push
das
jmp
push
push
nop
neg
and
out
sbb
pop
sub
cmp
add
xor
cmp
add
add
cwde
loopne
push
loopne
mov
jae
aaa
adc
mov
xchg
dec
jmp
movs
pop
push
or
loope
jmp
add
mov
call
jbe
addr16
or
dec
imul
push
add
(bad)
out
jp
pop
push
dec
shl
mov
jg
and
dec
mov
sbb
dec
cmp
add
pop
mov
fidiv
neg
lock
or
jmp
inc
lea
arpl
or
imul
or
push
sbb
data16
es
enter
hlt
jbe
shl
mov
mov
cwde
mov
add
jmp
adc
sub
cwde
mov
pop
pop
jae
mov
jge
xor
add
dec
stos
lds
loope
loop
or
pop
movs
dec
inc
cld
cli
or
jbe
mov
add
push
add
fsub
xor
xchg
adc
or
stc
jo
pop
cmp
xchg
pop
pushf
sar
sbb
aas
inc
lea
dec
ret
aas
and
adc
ret
push
loope
inc
add
sub
mov
mov
dec
jge
pop
inc
cld
inc
mov
cmp
pop
(bad)
inc
imul
pop
or
pusha
xor
leave
sub
and
pop
rcr
sbb
inc
mov
jmp
inc
add
xchg
pop
pop
push
inc
sbb
add
test
sbb
and
xor
loopne
out
sub
inc
sbb
pop
cdq
(bad)
or
sbb
adc
add
sbb
aaa
push
pop
add
(bad)
in
daa
mov
int
mov
sbb
add
add
imul
push
cmp
pmuludq
gs
sub
je
ret
hlt
xchg
dec
ds
xor
lods
push
ins
or
je
xor
sbb
mov
(bad)
loopne
sub
ins
fs
ret
push
fimul
loop
or
pop
fdiv
loope
pop
popa
inc
xchg
scas
jae
xor
jnp
dec
test
test
cmp
push
scas
add
daa
mov
jmp
sbb
dec
inc
das
and
or
leave
out
fucomip
xor
pop
loopne
mov
jmp
mov
mov
mov
sbb
adc
pop
nop
or
retf
lahf
leave
add
mov
adc
or
and
pop
inc
jle
nop
sbb
jge
int3
mov
mov
leave
inc
and
sub
mov
or
or
out
add
ret
scas
psrlq
scas
inc
inc
and
fdiv
fld
aam
mov
sub
pop
sub
mov
gs
pop
sti
lea
xchg
mov
mov
xchg
rol
push
push
ja
and
arpl
inc
mov
jno
add
or
ror
in
inc
or
enter
dec
pop
inc
fadd
pop
ins
inc
cmp
xor
inc
cli
sbb
add
mov
add
cmp
ja
mov
and
push
or
add
add
add
repnz
imul
arpl
lds
xchg
hlt
jp
jl
and
or
or
clc
add
mov
pusha
addr16
ins
adc
inc
jo
adc
pop
fadd
cli
adc
ret
out
mov
fwait
ret
add
sbb
je
and
shr
jmp
daa
push
bnd
and
popa
pusha
or
and
jmp
(bad)
arpl
pop
in
add
jbe
jne
jge
and
inc
jmp
prefetch
or
jne
shr
add
ret
scas
inc
pop
adc
(bad)
(bad)
(bad)
sub
push
je
inc
pusha
loope
gs
pop
cmc
or
add
adc
nop
or
adc
push
inc
fild
movs
or
and
or
shl
mov
jb
rcr
adc
bswap
dec
or
push
scas
adc
push
and
mov
xor
push
mov
aas
add
push
push
push
push
cdq
leave
xor
ret
push
inc
pop
ret
dec
dec
cmp
jl
adc
jnp
and
movs
xchg
and
dec
inc
and
jge
or
out
es
inc
in
fnstenv
ret
dec
xor
clc
or
add
mov
mov
jb
add
call
and
or
jle
jle
icebp
and
adc
js
in
push
(bad)
sar
sub
ret
retf
sub
fcom
xchg
cmp
jo
ja
hlt
push
jmp
(bad)
bound
fs
mov
ret
inc
lock
test
loopne
xchg
mov
xchg
mov
rol
jmp
ss
nop
mov
pop
call
and
test
mov
sar
xor
ret
or
aam
sub
push
push
stc
push
test
adc
arpl
fcomp
push
add
popf
mov
mov
sbb
pop
xlat
daa
loopne
arpl
xor
mov
adc
rol
repz
or
in
push
cmc
xor
sbb
jb
ins
pause
sbb
mov
push
jmp
enter
dec
ins
jnp
or
iret
push
dec
jl
add
push
and
(bad)
push
out
jl
sub
(bad)
jge
fsubr
cmp
jg
mov
je
mov
test
js
aam
icebp
adc
and
push
sbb
pop
xor
lods
mov
and
adc
pop
in
ins
mov
je
sbb
push
xor
inc
cmp
pushf
jne
scas
jge
inc
int3
push
sub
ja
jne
rcl
js
dec
dec
or
pop
or
xor
hlt
mov
pop
sbb
mov
add
outs
sbb
xor
add
sub
int3
(bad)
inc
std
xchg
cmp
outs
add
popa
js
adc
inc
adc
and
or
retf
sbb
or
add
push
ret
fidivr
gs
push
aad
add
je
xchg
jecxz
and
inc
leave
or
mov
js
popa
ret
es
outs
fst
imul
fincstp
out
pushf
pop
sub
inc
sub
(bad)
sub
ror
jo
test
push
(bad)
jl
or
in
jmp
or
xor
cmp
push
fs
mov
add
inc
jb
clc
mov
mov
cmp
test
fbld
arpl
sub
jne
cmps
xchg
shr
test
mov
movlps
mov
call
ins
pmovmskb
push
jne
sub
or
ud2
jmp
mov
add
jp
jnp
jns
jb
push
mov
sub
mov
sbb
inc
jge
dec
dec
inc
sahf
xor
jg
daa
daa
and
dec
outs
test
xor
daa
daa
daa
and
in
inc
push
dec
sbb
sub
aaa
sbb
icebp
cwde
movs
iret
and
(bad)
ror
pop
or
mov
nop
mov
sub
stc
xor
jge
or
add
sbb
dec
or
je
cmp
push
addr16
push
cmps
fwait
xchg
aam
aaa
(bad)
movs
mov
dec
jp
mov
dec
add
es
add
imul
xor
lods
callw
and
mov
or
push
inc
nop
lock
cmp
rol
push
bound
inc
aad
sbb
fcmovnbe
or
sbb
sub
ror
mov
shl
pop
mov
add
inc
dec
inc
loopne
inc
cmp
or
cmp
inc
test
or
hlt
xor
mov
jne
jne
cmp
sub
and
push
dec
mov
scas
sar
cmp
ins
xchg
imul
dec
sub
imul
rcl
jno
push
pop
(bad)
rol
fnstcw
mov
mov
test
enter
adc
push
adc
cmp
mov
xchg
mov
sub
push
jno
fcom
jne
push
mov
mov
lock
or
push
stos
fisubr
sub
xchg
add
jbe
xlat
test
mov
add
movs
fld
xor
adc
jnp
mov
inc
xchg
fist
mov
scas
not
nop
push
or
or
fiadd
int
adc
stos
and
nop
or
or
sbb
or
or
pop
push
gs
movntq
out
add
lods
fcmovnbe
add
mov
add
rol
jo
fst
gs
out
test
xor
fs
and
xor
push
sub
adc
and
inc
bound
cmps
sar
add
loop
arpl
pop
cmp
dec
retf
push
sbb
std
popf
xchg
inc
sahf
bound
adc
dec
lds
jne
test
ss
inc
int3
dec
gs
(bad)
jmp
test
in
ror
test
jo
push
xor
pop
inc
and
push
inc
adc
xor
xchg
fmul
movs
xchg
mov
cmp
leave
push
fadd
jp
inc
and
ins
test
or
mov
sbb
lds
fdiv
aad
xchg
and
push
push
dec
jge
and
push
mov
pop
push
fs
xchg
pop
dec
jo
and
enter
pop
sub
add
adc
push
xor
add
mov
or
add
int3
cmps
or
inc
push
inc
shl
add
dec
out
jno
cmp
lock
add
call
lea
add
or
adc
add
lds
sbb
push
mov
into
lea
call
out
sysret
add
gs
add
and
pop
or
gs
add
jb
fs
iret
in
adc
das
push
mov
stos
cmps
icebp
pop
lea
add
jne
xor
adc
cmp
cld
lods
outs
sbb
clc
fist
test
and
pop
mov
xor
jnp
int3
adc
lea
add
(bad)
and
je
inc
loop
inc
jnp
test
push
or
outs
loop
push
pop
icebp
mov
push
mov
inc
jl
push
shl
cmps
mov
or
push
xchg
push
ret
add
inc
test
nop
cmp
push
imul
test
ss
mov
sbb
mov
in
arpl
push
add
pushf
rcr
push
push
shl
and
(bad)
test
push
popa
dec
sbb
push
shr
adc
cli
push
adc
and
pcmpgtb
mov
xchg
sub
cmp
lea
and
fisttp
call
push
(bad)
xlat
dec
adc
mov
push
or
dec
dec
push
adc
xor
mov
adc
lods
shl
add
cmp
imul
mov
xchg
ss
push
adc
je
or
jecxz
or
push
push
add
sbb
xadd
xchg
lahf
pop
add
test
data16
ret
test
aas
aam
pushf
mov
or
cmp
jbe
adc
mov
push
sbb
inc
dec
inc
or
xor
adc
cmp
jmp
test
inc
stos
add
call
sbb
adc
adc
add
inc
shr
jnp
xchg
and
inc
pop
ficomp
lods
add
pushf
shr
bound
imul
push
xor
js
das
mov
lds
jnp
test
mov
pop
mov
bound
add
fs
cmp
add
mov
ret
push
push
clc
inc
dec
add
ret
dec
sbb
or
sbb
mov
jl
ret
aaa
ret
and
mov
add
lea
mov
setne
cmp
pop
mov
dec
jmp
cmp
stc
jnp
dec
dec
ret
ds
xor
add
movs
clc
mov
push
ss
outs
rcr
cmp
inc
xor
push
sbb
(bad)
mov
es
or
fsubr
dec
pop
jo
sbb
cmp
inc
and
call
mov
push
mov
sbb
push
cld
adc
lea
push
inc
(bad)
add
jo
xor
jmp
push
push
repnz
sub
mov
mov
std
lock
add
cs
jne
push
mov
inc
imul
add
ror
and
aas
in
(bad)
dec
sub
popa
js
cmp
jg
push
mov
dec
adc
push
adc
push
jns
pop
fst
xchg
in
pusha
and
inc
fadd
push
sbb
and
outs
or
mov
sbb
ins
push
sub
and
adc
xchg
xchg
and
push
sbb
add
ret
shufps
inc
sbb
sbb
ret
jbe
sbb
jle
rol
add
adc
pop
loopne
xor
ja
mov
rol
push
push
pop
push
mov
hlt
cmp
mov
or
scas
inc
dec
add
test
lock
cmps
push
fld
ja
sub
ja
push
xchg
sub
outs
je
out
ja
dec
sar
inc
aam
arpl
jne
add
sub
dec
loope
(bad)
and
jmp
jnp
xchg
ret
loop
push
mov
adc
fistp
retf
inc
pop
adc
mov
aaa
and
mov
cmp
pop
sub
or
sub
fmul
loop
add
add
push
dec
dec
sti
dec
imul
das
add
jo
xor
adc
mov
(bad)
and
push
pop
fs
sub
cmp
mov
pop
sbb
adc
mov
(bad)
cld
sbb
les
cmps
xchg
sbb
js
sub
pop
sub
xor
and
push
cmp
and
ret
call
sub
mov
mov
and
jo
add
pop
loopne
outs
pop
cmp
adc
push
add
inc
sub
lea
mov
push
rol
test
mov
add
push
sbb
xchg
pop
and
mov
mov
shr
(bad)
pop
in
das
repnz
jl
sbb
imul
mov
jo
gs
push
cmp
rcl
add
(bad)
(bad)
and
adc
cmp
ror
mov
das
sub
add
popa
or
inc
enter
test
mov
popa
fist
add
xchg
psubsb
xchg
sbb
push
push
pop
dec
add
inc
jo
fnstenv
iret
push
mov
inc
sbb
and
add
ror
cld
inc
mov
loopne
pop
mov
add
das
inc
lahf
add
or
dec
and
dec
add
mov
jl
pop
add
sbb
mov
sbb
mov
add
xchg
into
sub
cmp
sbb
xchg
pop
dec
xchg
adc
push
hlt
sbb
pop
rol
cmc
gs
xchg
sbb
lock
pop
inc
addr16
icebp
xchg
ds
sub
outs
add
movs
add
fwait
add
ror
or
arpl
aad
aad
ror
sub
sub
movs
adc
sub
sbb
or
add
add
fld
iret
ret
jge
or
and
or
aam
adc
jmp
pop
aam
xchg
push
lds
add
mov
mov
gs
dec
loopne
sub
add
and
mov
xlat
mov
pop
test
mov
fst
inc
xchg
add
push
dec
sbb
pop
jmp
ds
cmc
(bad)
push
fist
sbb
or
pop
jnp
mov
loope
imul
icebp
rcl
fdiv
jae
jmp
add
jo
add
(bad)
mov
adc
xchg
jp
movs
aas
aaa
dec
xchg
imul
daa
pop
dec
sbb
ins
(bad)
push
fwait
mov
cmps
dec
sbb
pop
xchg
pushf
movzx
out
cmp
or
mov
xor
xchg
movs
push
xor
pop
and
add
test
cwde
sahf
sbb
push
add
mov
xor
push
retf
pop
mov
inc
(bad)
fcomi
push
sbb
xor
js
pop
xor
ins
xor
xlat
pop
cmp
pop
aas
xchg
rol
mov
add
inc
add
stos
and
xchg
sahf
in
packsswb
pop
outs
test
test
mov
xchg
cdq
add
sbb
or
mov
rcr
and
sub
cwde
in
jo
pmaxub
pop
nop
js
bound
xor
cmps
cmp
and
ss
cli
xchg
ret
mov
mov
addr16
dec
call
pushf
pop
dec
fwait
jb
adc
xchg
icebp
fs
cmp
sbb
stc
mov
pcmpgtb
fs
jle
mov
cli
jnp
jnp
je
(bad)
push
sbb
lods
cmp
js
loopne
pop
sahf
es
clc
add
jno
(bad)
je
push
mov
(bad)
mov
out
or
(bad)
mov
lock
movs
cld
iret
js
dec
or
jmp
mov
mov
adc
aas
add
rol
adc
arpl
push
add
sbb
dec
sub
pop
jns
or
int
push
mov
dec
pushf
xchg
int
enter
push
xor
mov
add
call
das
or
sahf
not
hlt
push
es
das
cmps
push
push
mov
pop
dec
xlat
cmp
dec
jecxz
cmp
dec
mov
movs
mov
dec
push
shl
adc
add
cmps
inc
imul
inc
add
push
cmps
adc
inc
inc
and
inc
imul
inc
gs
or
arpl
loop
dec
arpl
jb
cmp
xchg
add
adc
lods
ss
call
lock
add
sub
add
outs
lods
pop
pop
popf
stos
mov
mov
arpl
loopne
mov
push
xor
add
mov
jl
mov
jmp
and
cmps
sar
imul
sbb
xchg
cmp
xchg
out
loopne
imul
add
rol
test
mov
dec
jmp
sbb
push
push
dec
xor
mov
je
jmp
dec
shl
aaa
sub
mov
pop
dec
or
adc
es
call
sbb
out
dec
push
push
lods
loopne
das
and
or
mov
cld
test
sub
std
ds
mov
sub
lea
push
sbb
out
popa
or
out
fs
aam
cmp
add
add
dec
mov
sbb
xor
cld
push
mov
fld
mov
lods
dec
mov
fs
or
(bad)
and
pop
mov
mov
mov
js
mov
lds
inc
popa
addr16
xchg
movs
inc
pushf
mov
aaa
pop
dec
add
(bad)
jmp
inc
jmp
xor
(bad)
movs
outs
adc
cmp
and
cmovnp
adc
loopne
les
add
inc
lock
je
sar
add
popa
add
ret
and
aam
sar
or
xchg
add
or
and
popf
popa
pop
inc
xchg
js
stos
and
inc
sbb
mov
cmp
mov
sub
push
push
mov
aam
xor
mov
xchg
pop
inc
imul
pop
push
das
pop
sub
mov
movs
push
cmps
or
push
retf
nop
mov
jb
pop
test
jmp
sahf
and
lar
ret
repnz
daa
jbe
jno
cmp
stc
pop
push
or
cmp
pushf
ins
pusha
jmp
sub
stc
mov
or
adc
inc
adc
mov
sbb
or
or
adc
jecxz
mov
jmp
pop
inc
outs
mov
das
mov
addr16
dec
dec
sub
add
mov
and
sar
inc
call
mov
push
sub
adc
add
ins
cmp
or
or
mov
ror
bound
maxps
mov
or
add
and
sbb
add
push
es
das
sbb
jno
outs
cmps
xor
cmp
mov
mov
pop
stos
lock
add
scas
push
aam
fdiv
out
mov
lods
push
shr
cwde
es
inc
clc
fdivr
jl
sbb
push
sub
xlat
push
rcl
inc
or
je
fld
dec
add
mov
push
ror
ins
ss
inc
ins
jmp
shr
(bad)
push
push
pop
fs
push
xchg
inc
and
pmaddwd
add
adc
sbb
mov
mov
pop
mov
mov
lods
cmps
dec
bndstx
sub
fisttp
jmp
pop
or
mov
push
push
xchg
mov
ret
mov
jae
and
(bad)
and
stos
in
fwait
jge
xchg
data16
dec
rcr
shr
pop
or
es
push
inc
push
cmp
jo
jmp
or
mov
call
inc
fistp
jmp
adc
and
add
or
sbb
sub
sbb
fld
dec
or
sbb
inc
dec
and
aas
or
add
ja
fs
push
popa
xor
call
add
mov
jb
adc
adc
out
sub
pop
aad
or
add
or
sbb
stos
sub
mov
loop
lds
push
aas
cmc
or
and
inc
out
push
movs
mov
xor
adc
icebp
jmp
adc
fs
ins
fs
rcl
idiv
and
(bad)
or
mov
or
pop
adc
es
dec
scas
pop
jmp
or
imul
pop
mov
mov
mov
sub
(bad)
hlt
add
pushw
pop
adc
add
int3
add
fstp
add
mov
jno
cmp
cmp
or
add
pop
add
rcr
adc
pop
or
inc
inc
push
arpl
imul
in
mov
cmp
test
mov
push
add
or
or
cld
ret
dec
add
add
mov
adc
int3
mov
push
add
pushf
sbb
add
add
or
outs
pop
mov
dec
push
mov
adc
sbb
push
add
pushf
dec
pop
add
add
dec
sbb
or
lods
aad
or
movs
rol
xor
jp
(bad)
jmp
(bad)
mov
shr
arpl
cdq
or
lldt
push
mov
inc
add
push
and
clc
inc
shl
jbe
mov
add
lods
adc
ret
mov
aaa
scas
aas
push
popf
push
sub
ret
and
push
inc
test
adc
shl
xchg
loope
mov
nop
bound
(bad)
mov
and
sub
adc
je
or
mov
mov
pop
(bad)
xorps
je
sbb
mov
aaa
push
add
stos
mov
test
mov
add
out
add
add
mov
mov
mov
adc
rcl
test
sbb
inc
pop
push
stos
or
and
adc
icebp
dec
ins
mov
xchg
mov
or
rcr
mov
adc
(bad)
inc
loope
and
jmp
xchg
sahf
dec
or
mov
push
inc
fild
test
loope
sbb
mov
pusha
inc
add
lods
pop
mov
movs
pusha
lea
nop
dec
mov
xor
mov
movs
push
cmp
dec
ret
push
xor
sub
mov
ret
xchg
sar
das
xor
nop
pushf
add
pop
out
mov
cmp
movs
out
mov
mov
ins
add
pop
sbb
lea
pop
or
lahf
cmp
je
jge
mov
es
scas
sub
sub
cmp
mov
in
les
mov
sbb
add
dec
lds
push
or
ja
mov
arpl
jne
pop
das
rcl
sub
xchg
adc
add
and
xor
mov
and
and
ds
int
adc
lock
aaa
aam
mov
xor
xlat
xchg
inc
jmp
ds
xor
push
es
mov
pop
popa
mov
and
or
into
mov
leave
or
aam
nop
cmp
loopne
sbb
leave
out
and
jle
push
mov
stos
int3
sti
pop
inc
mov
mov
add
xchg
add
sahf
retf
add
retf
(bad)
jle
pop
icebp
add
mov
(bad)
adc
cmp
inc
lods
mov
ret
jne
pop
xchg
clc
fisub
add
(bad)
sbb
push
je
add
mov
ins
mov
test
inc
mov
jae
pop
lahf
sub
cld
inc
xor
push
clc
je
pop
loope
pop
and
mov
push
hlt
stc
jp
sub
mov
aam
retf
das
out
sbb
jo
cmc
fcomp
shr
push
cld
pop
arpl
loopne
and
push
jo
sbb
add
push
popa
lahf
stos
push
or
enter
mov
or
or
or
add
fbstp
ret
push
push
cwde
or
(bad)
stc
and
outs
pop
add
sbb
push
aaa
in
pop
xor
and
cmp
push
outs
sub
pop
jp
mov
and
int3
test
mov
sub
mov
adc
(bad)
sahf
sar
shl
iret
lock
jbe
(bad)
xor
test
int
sbb
push
push
mov
mov
pop
js
sbb
shl
das
mov
and
adc
sbb
les
inc
mov
(bad)
mov
fs
pushf
pushf
fsub
ror
aam
adc
xor
popa
and
movs
in
pop
and
or
movs
and
or
or
push
jge
enter
or
pop
enter
aam
mov
fadd
lock
mov
dec
mov
jge
dec
popa
mov
xor
call
push
inc
popa
sub
add
sub
add
push
sub
and
add
les
in
lods
xchg
add
popa
or
das
sub
inc
gs
imul
or
or
das
jp
or
adc
jo
js
movs
push
shl
hlt
mov
popa
sbb
fmul
xchg
adc
inc
mov
mov
cmp
or
fxch
aam
push
add
stos
inc
fld
inc
mov
imul
cmp
outs
adc
push
les
mov
fnstsw
pop
out
daa
sbb
or
or
jo
(bad)
push
inc
jmp
jg
or
test
inc
cs
inc
icebp
sbb
inc
inc
lea
retf
add
sub
cwde
ret
leave
inc
or
das
fcom
rcr
mov
in
enter
jmp
inc
or
fst
and
scas
xor
imul
enter
push
push
adc
dec
push
mov
pop
cmps
dec
push
jns
pop
outs
mov
add
test
pop
outs
test
pusha
or
cmps
dec
inc
jnp
mov
ret
cmps
mov
in
dec
adc
and
mov
ins
mov
cmps
mov
mov
sub
inc
pusha
leave
pop
pop
and
arpl
jecxz
jb
jns
jecxz
add
add
or
int3
push
into
sub
mov
or
pushw
push
das
in
add
sti
and
inc
(bad)
shl
or
add
sbb
add
add
cmp
add
and
cdq
cmp
mov
sbb
mov
sbb
ins
xchg
mov
les
dec
sbb
mov
call
and
sbb
add
add
xor
jnp
push
add
enter
lahf
lock
lock
icebp
cmps
ret
jmp
pop
cmp
jno
sub
in
cmc
rcr
dec
aas
jne
shr
mov
mov
arpl
pop
in
xor
mov
dec
and
aaa
mov
inc
test
push
and
mov
mov
or
sub
push
ret
shl
lods
mov
or
das
add
jmp
pop
push
das
aad
aam
add
icebp
xchg
int3
sub
stos
xchg
mov
xchg
lock
ss
jnp
adc
rol
popa
fistp
push
hlt
xchg
les
mov
xor
and
(bad)
fiadd
inc
jmp
mov
mov
in
mov
sti
add
out
stc
mov
out
and
imul
aaa
mov
out
sbb
xor
or
cld
pop
call
push
adc
add
jo
sbb
cwde
outs
add
xchg
mov
fsubr
stc
mov
xor
mov
add
int3
cmp
shl
cmp
ret
jo
clc
and
test
lods
ret
adc
aam
push
fisubr
lods
adc
jp
hlt
ret
out
sub
fmul
sti
retf
aas
xor
or
inc
aam
jl
les
loop
add
and
add
lahf
mov
fild
lock
mov
lods
mov
cmc
ret
out
mov
out
mov
mov
mov
outs
pop
mov
mov
ret
test
xlat
(bad)
add
dec
(bad)
xchg
sub
scas
rol
xchg
and
cmp
(bad)
jmp
lds
add
add
in
sbb
stc
js
add
loopne
shl
cmp
pop
das
dec
pop
movs
jge
js
push
or
add
dec
sar
mov
push
add
sub
ss
xor
or
xor
xchg
or
adc
enter
add
push
sbb
ja
and
mov
in
scas
xlat
(bad)
mov
pop
shl
adc
fist
retf
adc
pop
jmp
cmp
(bad)
sbb
sbb
jbe
mov
pop
aas
outs
pop
scas
push
mov
gs
adc
add
in
stc
pop
hlt
or
or
aas
sub
cld
adc
xchg
adc
imul
nop
das
mov
mov
ret
mov
cmp
retf
int
xchg
je
and
or
jo
frstor
cs
imul
lahf
out
or
cmp
cmp
xchg
or
lsl
or
aas
test
pop
aam
inc
lahf
jae
jmp
loop
inc
jns
dec
inc
dec
push
pop
inc
push
and
fild
pop
mov
add
add
mov
jle
or
mov
or
sysenter
or
scas
test
mov
aam
or
jmp
lods
or
inc
adc
lods
aas
fisubr
lods
shl
cmp
push
enter
mov
es
leave
das
xchg
push
mov
inc
push
not
int
js
and
fincstp
xchg
movs
xchg
fcom
push
sbb
scas
out
ror
(bad)
loopne
loope
sbb
sbb
mov
pop
xchg
pop
fcomip
mov
or
or
push
lods
mov
xchg
dec
fcom
faddp
dec
push
or
or
jnp
sub
leave
fcmovnbe
push
xlat
inc
aad
push
pop
sbb
out
pop
aam
mov
pop
adc
sti
mov
jns
and
sbb
sub
hlt
jo
jmp
push
xchg
inc
pop
mov
int3
daa
fsubr
adc
mov
outs
xchg
pop
xor
in
loopne
int3
rol
push
and
push
or
cwde
cmp
push
inc
push
shl
mov
xchg
jae
mov
add
test
mov
inc
sub
call
lea
movs
neg
mov
scas
inc
mov
cmp
dec
stos
push
add
movs
xchg
sub
add
jge
push
inc
sti
add
rol
cmp
push
pop
add
jns
or
(bad)
call
inc
or
pop
mov
cmp
in
or
pop
mov
cmp
test
xor
sbb
fs
loope
popa
sbb
mov
js
sbb
and
add
xlat
xor
mov
or
cld
cmp
sub
ret
nop
inc
gs
inc
jg
inc
dec
add
xor
clc
ror
xchg
cwde
movzx
or
inc
push
mov
movzx
inc
mov
loopne
cmp
and
mov
and
adc
sbb
sbb
aad
out
cmp
xlat
inc
cmp
ret
inc
inc
and
mov
rcr
dec
in
fs
xchg
sub
pop
call
in
in
(bad)
and
loopne
popa
xchg
mov
xchg
cmp
sbb
movs
test
inc
daa
test
and
xchg
lea
inc
clc
or
or
add
inc
push
sbb
cmp
add
push
addr16
xchg
xor
push
adc
clc
or
push
inc
fdiv
add
ins
xchg
lahf
xlat
dec
jmp
push
or
sub
xchg
test
mov
xlat
or
sub
repnz
pop
in
lea
pop
mov
repz
jecxz
inc
inc
enter
xor
add
pusha
mov
mov
mov
pop
sub
push
dec
push
push
lea
sub
sbb
je
inc
xor
add
pop
mov
add
inc
retf
out
inc
stos
pop
and
mov
mov
shl
cmp
jne
jno
cmp
xor
add
or
push
and
je
(bad)
jnp
test
aaa
and
add
loope
shl
shl
xor
jmp
xor
inc
mov
xchg
ror
mov
add
push
jbe
push
add
inc
adc
add
sub
clc
adc
ret
sub
call
inc
adc
add
adc
or
test
push
ins
add
push
add
shr
and
(bad)
sub
add
jg
leave
push
push
dec
add
lds
test
outs
adc
dec
bound
sub
cmps
cmp
mov
rcr
inc
and
mov
jb
popf
cld
mov
jmp
in
add
or
xchg
mov
and
retf
push
dec
push
outs
push
xchg
mov
loope
sub
dec
add
imul
cmp
inc
clc
retf
dec
call
pop
in
inc
sbb
stc
dec
in
sbb
ror
jecxz
dec
loopne
mov
mov
mov
cmps
inc
add
das
fadd
xchg
sti
fsub
jne
push
jno
mov
mov
std
jno
es
xlat
out
ret
inc
ror
jno
sub
and
lar
add
sub
je
push
sbb
pop
mov
(bad)
aam
pop
jmp
cmp
or
push
out
pop
adc
lock
inc
scas
cmp
dec
lea
and
jns
or
pop
(bad)
imul
enter
aad
mov
popf
pop
xor
inc
mov
stc
dec
add
ffree
fdiv
shr
(bad)
loopne
mov
fadd
ret
sub
jge
or
mov
pusha
imul
adc
leave
(bad)
mov
xchg
mov
push
int
fimul
add
rcl
ret
adc
add
hlt
dec
push
nop
dec
hlt
lock
dec
push
nop
lock
in
inc
sbb
push
call
push
add
fcomp
xor
es
xchg
adc
dec
cmp
in
sub
add
sbb
pop
cld
xor
or
add
mov
jae
mov
push
loopne
fdiv
pusha
cmp
pusha
pop
loope
and
cmp
test
and
inc
stos
dec
in
loopne
inc
je
jmp
cmps
pop
or
jb
push
or
mov
pop
adc
inc
add
dec
sub
dec
shr
(bad)
in
mov
fadd
adc
cmp
mov
call
mov
imul
sbb
icebp
gs
shl
aad
popf
xor
loopne
add
jp
jne
fsubrp
pop
fnsave
call
and
dec
mov
mov
ins
xchg
adc
fisub
lahf
je
jns
adc
ins
je
adc
mov
les
and
pop
adc
out
add
push
enter
test
mov
jne
sbb
sub
(bad)
pop
sbb
inc
ins
loopne
pop
clc
jg
mov
lock
jge
cdq
or
and
outs
test
ins
add
ret
add
in
push
dec
mov
mov
jnp
xchg
popa
or
sbb
ret
xchg
mov
inc
cmp
jbe
xchg
popa
iret
add
repnz
hlt
pusha
cmp
popa
push
cmp
sahf
fcomi
or
nop
in
cmp
lods
sbb
mov
or
add
adc
mov
sub
fsub
inc
or
js
add
ror
or
shr
sub
mov
xchg
fld
sbb
push
add
mov
popf
lock
lock
mov
dec
push
mov
das
mov
cmp
push
das
add
add
repz
push
cdq
and
ret
pop
(bad)
push
test
xchg
sub
adc
fist
fistp
push
jmp
iret
repz
pop
and
cmp
repz
rcl
lods
in
repz
shr
dec
enter
sbb
enter
lods
in
repz
xchg
add
sbb
sar
mov
mov
mov
push
xlat
xor
out
test
jns
in
add
hlt
hlt
ret
arpl
pop
loopne
jns
clc
mov
inc
dec
pop
es
test
cli
ror
xor
out
enter
mov
icebp
add
outs
mov
shl
dec
add
popa
repnz
inc
push
test
sub
add
mov
mov
mov
xchg
ds
xor
xlat
mov
jle
mov
int
inc
mov
jg
cmp
rcl
mov
sub
cmp
lock
add
in
movs
les
and
comiss
mov
pusha
jmp
pop
inc
pop
or
int3
sub
mov
sbb
icebp
xor
jae
jmp
fisttp
movs
enter
sar
cmps
sbb
adc
scas
push
mov
inc
ja
jmp
add
icebp
popf
in
or
or
and
movs
add
mov
outs
jg
mov
mov
adc
push
sub
fwait
rol
out
jns
pop
ds
rol
mov
mov
add
jg
dec
add
jg
add
rcl
aam
aam
fs
dec
sar
add
jo
dec
int3
jg
jb
or
enter
sbb
add
rol
push
enter
not
fmul
jmp
jns
mov
jge
xlat
and
cmp
mov
mov
adc
rol
mov
inc
add
mov
ja
and
inc
mov
xchg
pop
and
fcom
adc
add
mov
mov
mov
xor
jmp
(bad)
pusha
sbb
cmps
add
add
retf
and
push
fwait
jne
mov
fcom
sbb
and
adc
es
and
inc
fstp
test
dec
mov
add
cmp
(bad)
clc
push
mov
imul
mov
inc
jge
movzx
bound
mov
and
leave
dec
test
adc
push
push
or
fist
cli
add
mov
shl
add
idiv
ror
sub
test
push
popa
or
push
daa
push
push
hlt
pop
pop
push
xor
repz
call
repz
nop
mov
jmp
ds
test
fldenv
mov
xor
shr
xor
loopne
fdiv
fmul
xor
fmul
xor
aam
rol
in
add
int3
xchg
inc
push
stos
enter
mov
inc
scas
inc
fst
push
push
jmp
fnstsw
mov
fimul
or
int
sub
lds
fild
adc
cmc
add
push
push
sbb
mov
dec
mov
les
cmp
jmp
mov
mov
pop
jp
and
mov
dec
rcl
add
or
ret
and
xor
iret
mov
add
daa
das
xchg
cmp
nop
enter
ror
sub
jmp
ds
adc
push
mov
sti
jmp
cld
adc
(bad)
cmp
gs
inc
sub
push
retf
jmp
jb
dec
fmul
xchg
sbb
push
rcl
xchg
inc
mov
daa
push
scas
sub
movs
adc
or
in
ja
cld
call
or
inc
add
jmp
mov
add
inc
or
inc
or
fdivr
and
sti
add
stos
rcl
pop
lea
cmp
scas
into
xor
fiadd
mov
ret
push
add
xchg
jmp
mov
fcomp
ins
loop
inc
pop
dec
add
xor
sbb
mov
lods
mov
dec
jne
ins
lea
adc
add
xor
dec
add
shl
ins
mov
bound
push
dec
pop
shl
inc
add
push
add
inc
mov
add
movs
pop
daa
js
(bad)
push
jl
pop
jl
xlat
das
cmp
add
test
mov
mov
lahf
popf
jo
xor
cmp
out
adc
or
sub
add
cmovo
adc
loope
and
gs
adc
pop
out
in
loope
cmp
or
pushf
add
ds
add
stos
repz
inc
hlt
pusha
push
call
pop
cmp
push
or
push
pusha
and
or
inc
or
or
lods
aad
push
cmp
or
cmp
push
lods
shl
add
leave
lds
in
retf
mov
sbb
sub
ins
popa
jno
iret
adc
push
pop
fstp
push
cld
add
add
lock
loopne
push
lock
sbb
fiadd
add
lahf
lods
sbb
xor
push
fcmovne
add
push
jmp
push
and
mov
test
pop
loope
jbe
mov
stos
pop
pop
add
iret
mov
aam
pop
mov
mov
lods
jne
cmp
push
cmp
xchg
mov
push
xchg
add
call
pop
aam
or
or
daa
leave
xor
cwde
jmp
icebp
mov
imul
clc
clc
test
rcl
in
or
frstor
sub
inc
jp
add
icebp
add
sbb
xchg
lods
sbb
xchg
movs
inc
sub
shr
icebp
add
xor
xlat
call
inc
pop
out
cli
push
pop
hlt
das
xchg
adc
or
push
add
mov
adc
push
add
cmps
pop
aas
and
add
fs
sbb
(bad)
mov
inc
or
dec
and
add
add
ds
dec
xor
or
cmp
xchg
push
lock
cmp
or
clc
add
or
add
add
sub
add
push
dec
sub
jnp
call
imul
ror
add
out
test
loope
cs
adc
hlt
xlat
sar
adc
and
xchg
jne
and
cmc
jno
call
dec
mov
cvtps2pi
aas
add
cmp
add
(bad)
shl
fwait
les
ret
mov
adc
sbb
mov
(bad)
rol
dec
sub
sbb
pop
push
and
mov
inc
push
mov
leave
enter
mov
inc
leave
stos
mov
pop
jno
cmp
pop
xchg
mov
dec
inc
jae
aaa
pop
pop
jmp
or
pop
dec
(bad)
sbb
cmp
mov
out
ds
(bad)
mov
or
inc
mov
fs
invlpg
cmc
sbb
mov
cld
add
movups
sbb
sub
mov
adc
adc
cmp
int3
cld
sub
pop
xor
loopne
adc
arpl
xor
jmp
push
test
xor
cli
and
and
xchg
(bad)
cmc
or
mov
and
mov
add
inc
push
and
push
sub
hlt
scas
xchg
jmp
in
inc
in
dec
test
(bad)
push
dec
icebp
popa
xor
cmp
mov
stos
and
cmp
add
dec
pushf
test
or
data16
and
add
xor
mov
(bad)
loopne
pop
push
inc
loopne
mov
jns
retf
(bad)
jge
imul
clc
sub
sbb
mov
add
and
fnsave
add
in
or
mov
push
push
inc
fisubr
fmul
inc
ss
lock
xchg
shr
fisttp
pop
add
or
ret
sub
xor
dec
fild
or
int3
and
mov
fdivp
add
inc
mov
lock
cli
dec
push
enter
add
pusha
(bad)
aam
add
add
pop
or
cli
cmc
xchg
sbb
iret
outs
inc
ror
and
cmp
je
call
and
mov
push
nop
push
ins
and
cmps
sub
pop
cli
or
or
jo
xchg
xlat
aas
cmp
xchg
add
loope
push
pop
sbb
and
or
sub
sbb
inc
inc
mov
int3
xchg
push
push
mov
cmp
or
in
aaa
push
xchg
add
cmp
mov
adc
ss
cmp
cmc
es
xor
xor
sbb
(bad)
mov
push
jo
lock
ss
mov
sub
push
lock
cmps
pusha
aad
outs
pushf
sbb
or
xchg
push
or
leave
or
xchg
fcom
pop
aam
add
ret
xchg
ret
cld
mov
sbb
pusha
add
fstp
outs
dec
popa
adc
add
add
mov
sbb
pop
je
xchg
(bad)
call
inc
add
and
mov
pop
cwde
call
add
adc
lods
loope
push
adc
mov
add
add
inc
dec
test
xchg
adc
adc
inc
push
adc
mov
cmps
sub
mov
or
ss
add
fild
adc
je
mov
pop
enter
xchg
aas
mov
test
add
jp
xchg
inc
jle
test
(bad)
or
xchg
dec
sbb
fnsave
mov
adc
or
mul
clc
dec
daa
mov
retf
mov
sbb
sbb
xchg
mov
xor
cmp
add
fcomp
retf
pop
or
lds
add
sub
in
fidivr
adc
mov
mov
and
iret
aam
jmp
(bad)
cmp
pop
or
mov
rcr
or
sbb
sub
xor
pop
aaa
xor
or
sbb
jge
ret
call
cmp
mov
bswap
mov
push
lods
(bad)
ins
out
cmp
xchg
(bad)
(bad)
cld
ror
dec
test
pop
in
push
mov
adc
les
add
out
sbb
push
inc
dec
cmovae
sbb
inc
rcl
daa
sub
das
adc
into
sbb
push
or
mov
fwait
pop
cwde
pop
popa
jb
jb
mov
scas
pop
sbb
adc
aas
idiv
and
add
mov
and
adc
inc
add
jnp
mov
jbe
push
add
gs
ret
jecxz
dec
or
mov
add
outs
shl
xchg
or
and
loopne
or
or
outs
cmp
xchg
scas
jno
es
sub
xchg
add
mov
outs
por
add
mov
movups
mov
lea
fmul
in
loope
xor
(bad)
shr
fmul
jne
push
sub
(bad)
jnp
sti
mov
jnp
outs
or
inc
into
dec
adc
lahf
and
mov
loopne
cmps
inc
shl
cs
ret
pop
inc
movs
push
and
pop
and
adc
adc
mov
(bad)
and
or
add
mov
mov
dec
mov
cli
mov
pop
or
inc
add
jo
pop
jno
outs
or
stc
push
add
add
rcr
xchg
add
add
fsub
add
hlt
data16
es
or
sub
scas
sub
data16
scas
add
adc
or
and
adc
adc
dec
adc
shr
pop
add
pop
or
cmc
push
push
inc
xchg
mov
es
push
mov
xchg
daa
pmullw
lahf
das
xchg
dec
and
push
imul
xchg
inc
cmp
push
outs
ins
dec
and
jl
ja
push
add
fwait
enter
sub
or
(bad)
jnp
sbb
jl
call
ja
push
adc
gs
fnop
and
sbb
xchg
mov
mov
cmp
shl
push
add
cwde
adc
xchg
mov
xor
mov
xor
les
add
push
add
ret
pop
and
outs
add
or
push
inc
or
scas
push
add
mov
lock
adc
gs
fiadd
add
pushf
push
xor
push
icebp
test
das
pop
push
scas
add
sub
jg
outs
clc
add
fld
adc
test
rol
mov
mov
push
aas
xor
xor
fadd
cdq
int3
or
sbb
aas
push
pop
mov
or
push
das
call
xchg
push
addr16
xor
xlat
sub
or
lock
cmc
ss
pop
or
nop
mov
pop
or
xor
add
adc
jno
(bad)
in
sbb
ins
inc
js
or
mov
js
push
ss
jne
test
xchg
fwait
aam
inc
add
adc
arpl
dec
popf
dec
gs
hlt
popa
xchg
or
rol
push
or
imul
fisttp
adc
dec
push
outs
jo
in
inc
cwde
inc
and
push
jne
jp
fsubr
pop
pop
std
and
cld
xchg
lods
inc
xchg
fstp
enter
test
enter
cli
mov
push
out
jmp
out
or
push
shl
outs
jae
lock
lock
movs
pushf
dec
jo
test
and
(bad)
dec
or
pop
cdq
imul
js
sti
sub
loopne
stos
or
xor
adc
dec
adc
xchg
rol
jb
push
or
mov
mov
and
je
xor
pusha
xchg
mov
cdq
sbb
add
inc
xor
iret
addr16
mov
add
xor
in
and
push
sti
fs
or
mov
outs
inc
or
aaa
dec
cli
dec
mov
and
fcomp
pusha
and
mov
adc
sub
pusha
aas
inc
sub
ja
pop
in
test
mov
shld
push
leave
sub
adc
leave
test
cmc
adc
mov
inc
adc
adc
jle
push
adc
jmp
adc
sbb
(bad)
xchg
(bad)
and
aaa
mov
jl
push
out
adc
lahf
xchg
add
sub
loope
pop
(bad)
or
inc
loope
hlt
mov
push
adc
pop
or
(bad)
fisub
mov
or
shr
pop
sti
sub
ss
push
pop
mov
add
push
das
push
(bad)
ins
inc
and
das
into
push
gs
add
ja
inc
pop
stos
cmp
mov
dec
push
das
pop
aaa
adc
mov
movs
lock
jl
sbb
adc
xor
jp
sar
inc
sahf
sbb
push
mov
xor
add
je
ret
inc
sbb
cwde
sbb
outs
(bad)
jle
or
scas
or
push
jne
test
(bad)
push
stos
fwait
xchg
sub
gs
or
das
jnp
(bad)
popaw
and
pop
or
or
cmps
dec
xor
nop
ja
clc
dec
je
adc
jl
dec
retf
test
push
add
mov
jg
jb
loop
add
add
cmp
sbb
xor
clc
and
mov
sbb
mov
push
pop
cwde
outs
jne
or
xchg
sbb
add
mov
pushf
dec
adc
dec
(bad)
and
jae
clc
add
adc
mov
push
push
sbb
das
push
or
or
push
je
add
cmp
mov
cs
cmps
and
outs
test
out
cmp
jns
cwde
sbb
idiv
jle
les
push
cmp
dec
fsub
jle
add
outs
dec
cld
test
pop
or
xchg
xchg
movs
inc
and
dec
and
sub
adc
cli
jp
mov
aad
and
inc
push
sub
push
ja
test
ins
gs
adc
or
inc
sbb
adc
sbb
inc
mov
xor
leave
fstp
and
push
add
sbb
outs
popf
pushf
test
or
mov
sbb
add
test
jne
icebp
or
mov
pop
mov
jge
or
ins
das
adc
push
or
add
xchg
push
cmps
adc
push
cwde
or
mul
xor
dec
add
or
dec
test
add
daa
or
pop
push
das
mov
enter
cmp
cmp
and
add
mov
cmc
jns
arpl
js
jp
inc
(bad)
mov
movs
movs
pop
sbb
out
(bad)
loope
add
mov
xor
mov
lock
aad
jo
ret
cmps
add
push
sbb
mov
int3
jp
inc
adc
mov
leave
in
push
push
xor
mov
and
pop
xchg
push
imul
fisub
push
sar
jo
sbb
cmp
add
inc
sbb
fsub
mov
ret
xor
fisttp
(bad)
sbb
xchg
inc
pop
in
adc
xor
lds
mov
inc
sbb
push
lea
test
mov
xchg
aad
pop
xor
or
pop
add
jg
pop
xchg
adc
adc
mov
push
call
rcl
xor
inc
lds
add
mov
pop
gs
add
adc
dec
and
sub
sbb
jne
add
mov
dec
sbb
xchg
out
cmp
add
cmp
movs
adc
clc
xchg
mov
xor
or
push
loopne
or
and
push
cmps
cmp
gs
or
test
mov
loopne
(bad)
fisttp
in
nop
sub
call
dec
push
add
fist
mov
pop
in
arpl
xchg
ret
pop
mov
loopne
xchg
push
mov
outs
adc
gs
add
mov
fs
(bad)
mov
sti
cwde
lea
add
or
in
test
adc
pushf
popa
or
sbb
mov
mov
adc
inc
cmp
ret
pop
pop
or
test
pop
push
lds
and
das
aam
mov
push
bound
mov
push
or
add
pop
cmovs
or
mov
pop
jge
mov
mov
lods
dec
mov
xchg
push
xchg
mov
push
add
jo
or
dec
pop
push
or
adc
aas
retf
std
mov
lea
cld
sbb
sub
(bad)
xor
pop
mov
dec
fs
cmp
mov
cdq
sbb
inc
jl
bound
das
sbb
inc
mov
mov
les
ret
xchg
add
sub
gs
xor
out
dec
add
fisttp
ret
nop
lock
mov
mov
sti
loop
and
(bad)
mov
adc
out
or
add
dec
inc
inc
add
sub
ror
stos
push
and
stos
or
stos
add
and
(bad)
clc
mov
mov
repnz
jno
inc
sbb
xchg
jne
sub
mov
push
sub
jae
cmp
xchg
inc
enter
cmps
ret
mov
push
fild
dec
mov
xchg
sbb
add
mov
pop
popf
and
add
in
cmp
mov
mov
cmc
scas
js
mov
push
and
in
sbb
es
jo
js
pop
push
push
cmp
scas
pop
mov
dec
push
mov
out
pop
xchg
sbb
pop
push
jmp
jne
lea
fcomi
inc
push
add
xchg
adc
pop
pop
push
daa
test
push
cmps
sub
je
push
mov
push
movs
xchg
inc
shl
gs
cmp
adc
aaa
hlt
xor
outs
and
cmp
mov
add
push
mov
out
xor
pop
sti
mov
or
shr
std
adc
add
unpckhps
ds
add
mov
loopne
fsin
fs
sbb
adc
daa
cdq
xchg
pusha
jne
(bad)
jo
jecxz
rcl
or
rcl
pop
push
and
add
outs
imul
in
test
mov
shl
push
add
and
test
sbb
sub
popa
nop
mov
push
nop
mov
inc
adc
ins
dec
inc
add
mov
cs
ins
ins
das
(bad)
sbb
pop
in
sub
or
lods
fmul
sti
(bad)
mov
ins
mov
jb
xor
movs
adc
add
cs
not
test
nop
inc
dec
lock
or
hlt
ret
nop
pop
jmp
and
inc
in
inc
lds
sub
push
mov
inc
xchg
pop
add
int3
sbb
sar
mov
or
dec
jne
(bad)
out
add
and
js
mov
jo
mov
add
dec
xor
xor
xchg
and
xor
push
test
mov
(bad)
push
movs
mov
lock
sub
sahf
test
pop
push
dec
mov
sbb
jns
(bad)
pop
cwde
add
pop
inc
sbb
jp
inc
and
sbb
jb
pop
repnz
xor
prefetchnta
sbb
or
adc
adc
test
adc
adc
lahf
add
ret
pop
push
test
data16
xlat
es
pusha
call
and
xchg
mov
sbb
jmp
and
dec
gs
pop
or
jne
add
inc
in
outs
ja
dec
inc
mov
dec
test
inc
cmp
or
add
add
pop
or
mov
fst
aaa
adc
test
add
xor
fucomip
add
push
lods
outs
cwde
add
cwde
add
mov
add
sti
fcmovb
sub
and
jp
push
ss
and
mov
xchg
push
push
hlt
cdq
lea
adc
inc
cmp
inc
dec
loope
das
xchg
sub
xor
movnti
add
adc
sbb
data16
inc
(bad)
sbb
pop
data16
push
lock
jae
add
inc
push
push
cld
call
outs
pop
jae
lock
shufps
cmps
sbb
push
dec
js
dec
test
xchg
cmp
mov
and
push
xchg
pop
sub
aas
xor
dec
pop
dec
pop
shl
sahf
and
(bad)
or
jge
lock
add
in
pop
dec
data16
or
cs
or
sbb
add
imul
cmp
xchg
dec
lea
and
ror
adc
fld
mov
push
and
(bad)
and
and
ror
shr
xchg
in
mov
sbb
cmp
sbb
push
sbb
sbb
dec
push
xor
mov
loopne
rcr
mov
push
lea
jo
leave
lea
cs
dec
dec
aas
gs
push
push
push
jbe
or
mov
add
mov
pop
lahf
pop
in
rol
add
movs
fwait
adc
jecxz
outs
mov
and
xchg
add
hlt
scas
aas
outs
cmp
sub
ja
mov
push
mov
sub
inc
inc
popa
out
call
ss
add
dec
or
xor
add
push
and
or
dec
add
fs
je
adc
or
mov
sbb
js
stos
aaa
in
jo
jb
and
xor
sub
push
fiadd
mov
push
rcl
add
mov
xchg
int
lock
ret
add
ins
call
mov
stos
or
jb
cmps
pop
daa
icebp
dec
ret
pushf
add
jno
inc
mov
sbb
or
sbb
bound
cmps
jne
sbb
xor
or
ror
add
or
push
sbb
cmp
ins
fadd
mov
ror
lahf
xor
and
xchg
ss
loopne
sub
dec
das
xor
test
jb
addr16
xlat
add
mov
lahf
shr
cmps
sub
mov
cs
lods
ret
sbb
cmp
or
mov
cmp
inc
or
sub
cmps
ins
dec
add
cdq
dec
ins
xchg
sub
shr
mov
pop
add
push
xlat
pop
mov
adc
ret
cmps
inc
inc
nop
out
add
add
test
dec
and
mov
inc
pop
cmp
dec
mov
lea
xlat
adc
and
retf
bound
inc
sbb
add
and
je
xchg
retf
or
nop
cmp
sub
jo
adc
jne
in
out
mov
aas
or
pop
jmp
sub
mov
js
mov
adc
imul
test
cwde
dec
popa
aas
and
mov
cmp
in
dec
push
leave
pop
inc
dec
fistp
(bad)
adc
sub
mov
adc
push
pushf
pop
mov
setg
outs
mov
shl
xor
test
pop
cwde
das
(bad)
xor
stos
and
gs
shl
inc
xor
inc
xchg
add
dec
xor
adc
js
adc
(bad)
rcl
(bad)
fdiv
or
xor
frstpm(287
es
push
cs
add
bswap
in
ins
add
out
xor
pop
xor
test
and
outs
sbb
adc
bound
out
mov
mov
je
arpl
nop
mov
sub
mov
and
xor
mov
or
imul
fs
push
xor
inc
or
mov
add
(bad)
cdq
test
fs
cld
mov
and
imul
ja
imul
pusha
dec
push
cs
mov
adc
retf
inc
adc
mov
and
std
js
pop
mov
shl
sbb
mov
mov
mov
inc
pop
aad
adc
mov
adc
push
sub
xchg
pop
inc
or
icebp
mov
inc
inc
inc
sbb
or
dec
dec
and
popf
add
lea
jo
jo
adc
xor
push
jae
sbb
lds
dec
push
ja
test
mov
rcl
sub
and
jmp
das
add
inc
pop
or
sbb
adc
inc
mov
imul
ss
inc
add
adc
leave
ins
mov
xchg
or
inc
sub
or
cmp
add
or
push
pusha
xchg
das
ret
fs
sbb
lock
add
push
rcl
pop
or
ror
xor
and
cmp
jne
in
clc
adc
cwde
mov
pusha
pop
rcr
push
jnp
cmp
jne
(bad)
add
add
(bad)
inc
cs
adc
and
add
push
add
sbb
inc
ins
stc
cmp
or
loope
outs
in
inc
loope
shl
inc
pop
dec
enter
out
add
call
adc
inc
or
ret
fisttp
add
inc
add
int
lds
adc
sbb
add
sbb
or
push
fmulp
jecxz
push
add
clc
cmp
test
ret
stc
ss
xlat
fimul
into
(bad)
int
mov
popf
cli
adc
int3
dec
inc
and
adc
scas
sub
popa
dec
or
and
add
cmc
shr
or
ror
nop
cmp
setg
dec
mov
call
mov
out
nop
call
push
add
and
std
adc
popa
ins
inc
imul
loope
in
or
enter
add
adc
cmps
push
add
ins
or
ins
ret
inc
adc
(bad)
mov
fwait
jmp
add
lods
jle
(bad)
push
cwde
cmp
jecxz
sub
(bad)
mov
add
dec
pop
dec
or
add
push
xchg
push
movs
(bad)
pop
in
mov
loopne
adc
paddd
shr
or
add
arpl
icebp
mov
add
jecxz
dec
jecxz
inc
add
dec
(bad)
shl
adc
jo
je
or
nop
add
jmp
inc
or
and
loopne
or
(bad)
adc
push
test
jmp
in
xor
add
ds
in
inc
sub
and
ds
or
adc
xchg
adc
lock
xor
and
(bad)
inc
in
(bad)
dec
outs
dec
sbb
arpl
ror
inc
mov
dec
cmp
add
mov
icebp
scas
add
xchg
mov
push
pop
gs
add
dec
sub
and
cld
ins
jbe
push
aam
xchg
cmps
add
adc
push
add
jb
fs
xchg
mov
push
push
push
nop
mov
nop
shl
ret
das
mov
test
inc
cmp
shl
cwde
mov
sub
fidiv
pop
fild
push
add
dec
add
and
lea
in
cmovo
push
cmp
inc
or
xor
test
mov
inc
push
sbb
daa
jmp
xchg
mov
pop
jmp
push
loope
sub
aam
pop
pop
stos
add
fsubr
lods
add
scas
fiadd
add
mov
inc
fld
add
jmp
xchg
inc
into
in
jbe
aaa
hlt
pop
fmul
faddp
add
xor
cmovne
cs
(bad)
sbb
pop
sub
int3
inc
adc
sub
add
sub
cmp
xor
dec
and
lds
cli
mov
rol
pop
retf
or
call
pop
sub
pop
mov
ins
loopne
sbb
lea
sub
and
add
jg
sub
je
dec
(bad)
aas
je
or
je
std
sbb
mov
mov
shl
ja
adc
fdivr
pop
push
xor
mov
add
cmc
pop
out
inc
and
and
add
jbe
or
adc
sub
mov
js
push
add
or
inc
rol
and
xchg
cld
jb
and
sub
inc
sub
sub
or
(bad)
sub
adc
mov
loope
sbb
push
push
cwde
addr16
sbb
add
jle
cwde
lea
ficomp
sub
clc
lahf
jg
ja
aas
push
sub
add
sub
pop
and
jb
dec
fadd
push
hlt
lea
or
in
mov
ror
or
in
or
out
jle
adc
mov
movs
pop
sub
jbe
jge
movs
sbb
movs
rcl
xchg
push
sbb
addr16
call
icebp
pusha
xor
loopne
or
mov
sub
gs
scas
gs
jp
cmp
call
dec
daa
add
cwde
ss
pop
out
in
pop
cmp
xor
aas
fcom
or
jl
fstp
inc
xor
jmp
loopne
mov
pop
inc
cmps
lahf
loopne
ret
lahf
es
jge
pushf
push
call
inc
into
sar
mov
mov
nop
or
mov
ss
inc
mov
mov
and
and
inc
fadd
pushf
loopne
sub
fmul
cld
inc
and
test
dec
or
popa
xor
fadd
add
mov
js
inc
outs
test
inc
add
sub
add
addr16
inc
jmp
or
test
mov
fcmovb
pop
pop
aas
cmp
pusha
pop
test
daa
adc
lahf
imul
xchg
mov
push
lea
cmp
mov
into
xor
add
jb
gs
shl
lahf
push
xor
addr16
ror
add
dec
xchg
jl
ror
and
jecxz
je
sub
out
xchg
add
dec
lock
or
rol
fcomp
mov
fwait
clc
pop
xchg
mov
je
mov
je
sbb
sub
and
lock
add
dec
add
xlat
xchg
cwde
mov
add
je
jnp
scas
in
jbe
jne
push
adc
push
leave
ja
mov
mov
adc
int
mov
outs
mov
mov
pusha
jl
test
shl
pop
pop
add
dec
xchg
mov
push
std
je
dec
je
jmp
js
je
ficom
push
mov
test
clc
mov
jmp
pop
cwde
retf
sbb
inc
(bad)
push
(bad)
nop
mov
mov
add
loopne
or
push
mov
call
sbb
fcomi
and
cdq
jno
xchg
jnp
or
push
lock
adc
push
jne
out
add
ja
imul
out
aaa
add
rcl
pop
(bad)
jne
cmp
das
outs
xor
dec
push
loop
xor
add
(bad)
or
add
pop
and
scas
or
xor
dec
add
and
sub
push
stos
imul
jno
cli
pop
pop
ret
iret
nop
dec
xchg
mov
enter
push
repnz
fmul
push
dec
push
pop
shr
push
dec
sub
cmps
lock
xlat
enter
fimul
rol
pop
gs
ins
mov
test
push
pop
mov
sbb
pop
or
push
xchg
add
pop
(bad)
ins
popa
xor
mov
mov
add
lods
fs
jp
inc
jmp
dec
jne
inc
inc
and
push
out
sti
shl
and
call
inc
sub
pop
(bad)
test
pop
fist
or
fs
je
cmp
jecxz
adc
stos
jp
mov
gs
or
ret
push
mov
push
jo
push
add
sbb
jp
ins
js
out
cmp
add
dec
aam
jp
lods
push
ins
inc
push
test
gs
iret
mov
sub
cwde
dec
retf
aad
mov
(bad)
push
inc
popa
mov
pop
(bad)
dec
sub
push
and
add
dec
jmp
dec
jae
test
daa
cdq
(bad)
cmps
adc
jno
add
or
add
movlps
mov
shl
sbb
xchg
cmc
jne
push
mov
push
xor
sti
mov
mov
cmp
pop
mov
je
(bad)
rcr
ffree
test
nop
dec
cmp
or
sbb
jle
les
or
or
and
mov
and
push
inc
pop
mov
(bad)
rcl
add
cmps
or
and
or
jne
and
mov
daa
or
in
mov
sub
fst
sub
test
sbb
add
inc
add
mov
push
stos
xchg
adc
xchg
add
test
jns
inc
push
pop
pusha
add
es
adc
add
addr16
xor
xchg
mov
and
xor
adc
fsubrp
mov
stos
adc
aam
rcl
and
push
sub
rcl
or
jl
out
push
adc
mov
icebp
fmul
sar
(bad)
aam
mov
push
fidivr
mov
cmp
and
jb
xor
mov
ret
cmp
mov
imul
jnp
dec
adc
push
or
ins
inc
jae
or
(bad)
add
dec
ins
outs
cmc
add
add
dec
add
adc
mov
dec
jmp
fld
and
daa
bound
movq
or
cld
mov
sub
je
or
cwde
scas
ds
cmp
pop
mov
out
add
push
gs
test
out
jno
or
dec
les
fbstp
jno
or
mov
sub
sub
iret
inc
daa
inc
loopne
jmp
aas
or
dec
out
sub
push
pop
pop
push
pcmpeqb
aaa
push
test
fwait
std
test
adc
inc
pop
pop
ins
(bad)
sbb
mov
pop
les
pop
xor
adc
lds
adc
ret
std
sbb
or
mov
in
mov
push
adc
ins
lds
jb
dec
inc
loope
adc
or
pop
sub
xchg
add
mov
aam
test
mov
popa
jg
pop
popa
repz
and
jmp
jg
ins
shl
add
outs
add
pusha
dec
ja
test
test
mov
fist
inc
pusha
and
fwait
push
pop
lahf
push
or
jae
xchg
jne
adc
aaa
jmp
rol
leave
sbb
add
push
test
sub
sbb
push
add
inc
xchg
push
ror
mov
nop
dec
bound
push
sub
xchg
or
ret
shl
push
jnp
ret
and
arpl
jecxz
add
adc
pop
ins
rcl
mov
lock
pop
rcr
inc
jns
inc
inc
add
pop
and
sub
mov
enter
cwde
dec
lock
and
ror
cmps
pusha
lds
mov
(bad)
xor
add
or
lds
or
movs
inc
adc
sub
pop
in
fs
adc
cmp
inc
jle
push
add
and
sbb
dec
dec
mov
pop
add
lea
push
add
(bad)
cmp
ret
and
xlat
mov
(bad)
adc
xor
jns
push
(bad)
ret
inc
xor
pusha
loopne
ss
and
adc
cdq
lods
sub
add
sbb
sub
jnp
mov
je
pop
add
dec
cld
or
nop
test
pop
gs
push
test
loope
ret
pop
imul
inc
sbb
or
mov
(bad)
movs
mov
lahf
and
mov
and
adc
mov
push
push
add
das
add
nop
jmp
xor
dec
call
hlt
test
and
pushf
cld
mov
fdiv
leave
enter
mov
movs
inc
mov
pop
pop
xchg
inc
dec
mov
jo
add
xchg
push
xchg
or
xor
adc
fmul
lods
fisttp
pop
(bad)
push
push
push
ret
adc
pop
pop
push
arpl
or
ja
les
add
and
ror
sar
sub
imul
fstp
fld
or
fwait
pop
push
pusha
xchg
push
out
mov
pop
pop
inc
add
scas
add
and
rcr
call
cmp
call
add
outs
call
mov
cs
sub
xchg
outs
inc
jmp
inc
ins
cmps
cmp
inc
push
push
adc
inc
and
mov
mov
fadd
or
adc
mov
mov
push
mov
sbb
jne
push
or
cmp
cmp
in
int3
cmp
and
inc
and
dec
mov
jg
pop
push
add
add
add
es
stos
or
cmp
sbb
ret
les
or
sbb
push
sbb
cli
stos
push
jbe
or
pop
popa
fcomp
or
add
fild
adc
mov
xor
adc
cmc
or
push
shl
sub
pop
adc
cmc
pop
and
add
and
je
xchg
sbb
adc
jae
inc
pop
frstor
aad
and
mov
or
jecxz
call
and
xchg
int
add
das
and
outs
inc
test
fist
das
lock
aas
rcr
inc
dec
sbb
ss
xchg
add
and
mov
ins
pusha
inc
inc
cdq
xor
loopne
jge
push
enter
push
sbb
test
jne
in
push
mov
and
scas
xor
rcl
daa
sub
in
push
scas
inc
cmp
cmps
xor
mov
cmp
xchg
mov
sub
les
dec
or
or
push
popf
push
jns
jns
loopne
mov
std
dec
or
popa
sbb
push
addr16
movs
push
and
mov
or
hlt
adc
imul
push
cmp
or
jo
jl
inc
nop
and
mov
in
cs
nop
inc
sahf
movs
mov
dec
test
enter
mov
cld
mov
and
movs
loope
clc
leave
dec
inc
lock
adc
add
xchg
int
or
push
adc
ret
dec
mov
xchg
ret
call
nop
mov
fadd
inc
in
sbb
cmp
or
call
mov
cwde
ficomp
fdiv
nop
(bad)
push
faddp
fstp
fwait
jmp
mov
(bad)
data16
add
ss
sub
lock
rcr
cmp
fwait
lock
jbe
and
xor
idiv
test
int3
mov
cmp
aas
and
jno
ret
faddp
or
mov
mov
dec
mov
or
add
test
inc
push
inc
cmps
pusha
mov
neg
retf
loopne
pushf
lds
hlt
xor
inc
inc
adc
pop
mov
sbb
mov
(bad)
ins
xchg
jl
or
lea
sbb
mov
fs
adc
fmul
or
push
lea
pop
dec
dec
jmp
add
les
call
sbb
mov
rcr
push
adc
adc
mov
pop
pop
movs
imul
and
jb
jnp
ja
push
mov
cmp
xor
lahf
scas
and
mov
popa
add
inc
inc
mov
adc
xor
imul
or
in
movs
xchg
push
push
cmps
arpl
jne
jb
int
test
sahf
ins
add
mov
movs
dec
inc
(bad)
idiv
adc
add
push
add
test
dec
xchg
pop
lahf
inc
add
or
mov
add
jg
mov
inc
add
ret
and
mov
push
dec
push
std
scas
sbb
add
push
repnz
add
push
add
add
xor
add
sub
dec
add
add
pop
hlt
push
stos
jo
push
shr
es
xor
or
ror
sti
xlat
test
idiv
lock
mov
gs
aam
push
sub
push
sbb
lock
xchg
test
imul
dec
call
pop
shl
push
mov
and
repz
js
imul
dec
das
nop
test
test
test
push
and
nop
test
and
xor
xor
push
dec
pop
sub
xlat
sbb
inc
xor
fwait
mov
sub
pop
sub
mov
xor
add
adc
inc
mov
fwait
jmp
push
pushf
ss
dec
add
add
pop
dec
daa
lahf
cmps
sub
fcomp
cmp
pop
add
adc
aas
xor
fadd
outs
mov
add
loop
or
jle
sbb
scas
imul
test
idiv
add
lock
test
sbb
xor
repz
fadd
inc
shr
cdq
xlat
aam
or
cmp
lea
popf
in
inc
test
mov
xchg
or
test
test
push
mov
mov
cmps
dec
enter
lahf
add
movs
in
call
xchg
jo
loopne
and
pop
dec
sbb
lea
pop
pop
sub
push
mov
nop
sub
add
xlat
fistp
lahf
push
std
ret
bound
sahf
je
xor
mov
pop
pop
cdq
movs
pop
dec
and
fmul
nop
clc
fdiv
int3
addr16
sub
mov
(bad)
adc
lods
sub
ds
push
mov
or
dec
add
and
in
and
popf
inc
jl
mov
push
or
stos
and
fisttp
sbb
and
jno
sub
pop
and
mov
sbb
pop
cmp
dec
jecxz
stos
sti
or
jb
lock
sti
ud2
mov
imul
cmp
ret
push
add
xchg
ds
adc
and
adc
pusha
call
fisttp
call
cmovbe
lea
pusha
dec
or
add
cmp
(bad)
das
or
stos
ret
xchg
adc
mov
mov
fist
pop
or
mov
enter
ins
xor
scas
pop
add
pusha
or
add
aaa
push
dec
mov
and
(bad)
aas
dec
fdiv
mov
cmp
sete
lds
and
push
push
shl
aam
pop
xchg
push
or
cwde
mov
dec
and
movs
test
inc
xchg
mov
movs
movs
gs
js
push
lock
je
mov
sub
cmp
loopne
dec
mov
jmp
es
sar
movs
ss
xchg
fsub
fmul
leave
out
(bad)
stos
(bad)
cmp
xchg
push
test
push
mov
inc
leave
mov
cmp
push
scas
test
aaa
sbb
or
jbe
(bad)
and
push
jno
or
cmps
mov
nop
pop
loope
and
sbb
jge
in
jo
sub
mov
cmp
jno
fisttp
call
bound
inc
(bad)
cs
add
movs
nop
js
cmovbe
xor
inc
cmp
inc
out
push
lds
mov
push
push
sti
fcom
lea
add
fidiv
or
inc
sub
inc
adc
sbb
sub
xor
daa
gs
cwde
add
mov
aad
dec
cmc
xchg
lods
test
adc
sub
mov
add
lock
das
xlat
pop
enter
jnp
push
push
inc
sbb
imul
inc
or
pop
cmp
and
dec
repz
add
loopne
in
jo
mov
inc
dec
ror
mov
adc
adc
in
inc
dec
ins
outs
add
fiadd
inc
sbb
pop
xchg
ss
jae
jmp
out
or
inc
mov
push
lea
adc
add
xchg
cmp
jg
sti
ss
sub
mov
adc
sbb
arpl
in
repnz
shr
inc
cmc
push
test
mov
push
test
add
mov
add
jne
xor
out
rol
mov
adc
add
hlt
outs
loopne
add
mov
push
sbb
rcr
sub
lahf
push
lock
inc
or
mov
fild
ror
rcr
add
pop
sbb
pop
and
je
cmp
sbb
mov
lods
add
xor
adc
sbb
or
das
cmps
fistp
lea
cmp
xchg
push
push
clc
sub
int3
or
adc
jg
inc
mov
or
xchg
pop
xlat
inc
imul
inc
lock
in
lods
ret
adc
or
push
dec
outs
dec
gs
add
jmp
or
pop
pop
push
push
add
sbb
dec
movs
das
shl
pop
or
add
and
adc
add
add
lea
addr16
js
adc
jmp
sbb
cmp
cmp
xor
sub
loopne
jle
and
movs
adc
inc
lea
add
bound
or
push
push
fsubr
adc
mov
stos
adc
mov
mov
cmp
xchg
mov
add
cmp
inc
jbe
or
add
push
aad
sub
push
or
sbb
inc
jne
or
cmp
dec
sbb
ds
adc
push
add
js
lahf
ret
dec
push
cli
cwde
psubsb
xor
and
unpcklps
adc
bound
cdq
daa
or
jns
sbb
jge
and
xor
jns
jl
and
mov
dec
add
and
xchg
sbb
jne
cmps
sbb
inc
push
add
adc
xchg
adc
dec
enter
mov
dec
or
shl
adc
pop
aas
dec
dec
mov
add
add
fsub
cli
stc
adc
or
mov
push
lock
sub
test
loopne
ds
add
or
aaa
sti
outs
mov
mov
add
jns
sbb
aam
add
int
push
pop
popa
xchg
(bad)
adc
add
and
ds
push
mov
cmp
adc
jp
out
or
(bad)
test
sbb
pop
rol
aaa
or
enter
jmp
jg
adc
gs
inc
jne
fld
adc
ret
aam
pop
or
push
push
imul
shl
jge
clc
mov
adc
xor
or
or
fistp
ss
es
dec
jbe
and
jl
pop
jbe
rol
shl
mov
in
xor
movzx
mov
pop
(bad)
mov
lods
add
shl
js
bound
inc
popf
(bad)
(bad)
mov
mov
mov
xor
arpl
(bad)
sbb
xor
xor
fdivr
and
pushf
out
rcr
sbb
(bad)
xor
jae
shl
jle
mov
pop
(bad)
retf
mov
xor
scas
mov
pushf
imul
sbb
push
mov
xor
or
arpl
add
jge
push
nop
jo
pop
fwait
call
lds
mov
into
(bad)
xor
imul
iret
outs
xor
or
push
jns
bound
jle
adc
xor
add
ror
pop
xlat
(bad)
inc
push
jb
clc
jge
and
xor
add
ror
xor
in
xor
ret
loopne
or
bound
cmp
push
lock
pop
rol
or
inc
loope
cmp
inc
ins
add
push
setge
push
push
(bad)
jb
shl
enter
xor
or
lods
mov
and
fucomip
mov
cmp
cmp
inc
je
cs
or
fwait
add
inc
or
cmp
or
dec
xor
inc
pusha
lock
inc
jbe
leave
je
sub
(bad)
sbb
rdpmc
jg
jge
mov
add
addr16
add
sub
and
inc
mov
cld
xor
popa
test
adc
(bad)
in
jg
or
adc
mov
sbb
xchg
inc
xchg
nop
xchg
jo
jmp
test
or
mov
fstp
lea
(bad)
aam
add
test
sti
test
jl
add
dec
loopne
(bad)
mov
or
lods
call
arpl
call
or
adc
pop
addr16
jg
mov
cmp
cdq
aas
pop
or
loope
cs
cmp
xchg
lock
dec
sub
cdq
(bad)
cmovo
fstp
cmovb
inc
pop
and
das
xor
inc
mov
ret
pop
repnz
add
xchg
mov
and
das
out
es
push
ror
cmp
pop
mov
xor
pusha
sar
add
push
mov
retf
or
shl
mov
mov
dec
or
jne
adc
pop
or
cmp
pop
std
hlt
sub
jae
adc
add
add
in
sub
cmp
or
test
adc
push
dec
xor
pop
push
push
jbe
inc
scas
in
sub
mov
push
add
test
rcl
pop
push
pop
daa
add
mov
test
sti
or
pop
push
and
inc
mov
popa
ret
js
push
jmp
popa
jno
push
mov
fs
cmp
mov
add
xchg
test
cmp
push
sub
andnps
cmps
outs
and
push
adc
sub
and
xor
ret
push
cld
mov
cmp
push
push
mov
es
cmp
xchg
nop
test
add
add
inc
call
les
ficom
loopne
add
or
inc
adc
sub
inc
push
inc
or
adc
push
aas
adc
pushf
cwde
addr16
stos
jno
cmp
nop
jg
and
xor
add
add
sbb
and
cmp
push
pop
adc
mov
add
adc
add
mov
mov
nop
mov
inc
and
gs
movs
mov
push
int3
fiadd
fcom
mov
jo
push
into
push
and
cmp
jne
inc
gs
inc
add
xchg
add
pop
rol
lods
scas
fist
movs
adc
ret
movs
fidiv
ins
sbb
sub
cmp
push
dec
sub
or
mov
(bad)
pusha
pop
push
call
das
or
mov
enter
jl
or
stos
xor
mov
in
ss
(bad)
cmovle
add
fist
or
sti
fild
xor
fcom
mov
out
jnp
mov
or
sbb
mov
jo
and
aas
pop
add
adc
add
mov
jns
loopne
mov
les
mov
jp
push
addr16
movs
cld
mov
mov
add
retf
mov
push
push
mov
adc
fild
or
xchg
pop
push
mov
mov
and
xchg
xchg
fisub
ins
and
or
xor
or
int
fbstp
loopne
cmp
mov
adc
ret
xor
jg
loope
add
clc
push
add
mov
adc
inc
inc
adc
jmp
loop
test
mov
dec
cmp
push
push
xor
cmp
adc
call
or
ja
into
mov
dec
mov
lock
and
mov
or
jmp
mov
test
sub
or
add
jo
leave
std
dec
ret
dec
inc
sub
sbb
addr16
in
add
(bad)
lea
xor
push
mov
icebp
cmp
rcl
sbb
jb
(bad)
add
add
xchg
adc
push
mov
das
jle
adc
add
fiadd
int3
push
sbb
leave
retf
retf
pop
mov
ss
fmulp
inc
sub
outs
push
jg
push
add
leave
int3
pop
nop
iret
add
pop
cmc
and
xor
cmp
(bad)
mov
sbb
ds
and
pop
mov
or
ret
in
imul
cli
mov
jnp
nop
gs
xor
imul
cs
mov
mov
in
push
inc
sub
enter
mov
jne
mov
cld
inc
inc
sbb
xchg
xchg
dec
jnp
sub
xor
xor
dec
mov
xor
pop
push
push
add
adc
sub
add
add
loopne
das
inc
rcl
sbb
or
ficomp
dec
xchg
mov
cmps
div
aas
xchg
mov
aaa
inc
mov
les
in
test
xchg
xchg
mov
xchg
cmp
dec
xchg
xchg
sub
cmp
adc
xor
xor
dec
push
push
add
jl
sbb
xchg
iret
pop
sbb
xchg
mov
cmp
dec
adc
push
sub
xchg
repz
inc
and
pusha
imul
mov
mov
jle
mov
cmp
sbb
inc
lea
cmp
and
jmp
das
add
(bad)
and
adc
jle
pusha
adc
add
jne
aad
dec
repnz
sbb
mov
xchg
test
xchg
mov
mov
inc
mov
mov
stc
(bad)
cli
dec
shr
adc
in
out
fnstsw
push
adc
jmp
or
mov
(bad)
ss
pusha
stc
pop
jmp
or
inc
stc
jle
rol
movzx
cmc
push
ss
xchg
mov
lock
imul
mov
ss
sbb
call
movs
pop
pop
xlat
xchg
je
dec
dec
sub
xchg
sbb
push
pop
aad
add
pop
pop
ret
xchg
cld
test
in
add
inc
xchg
psubq
mov
pop
(bad)
cmp
jae
das
popa
mov
mov
push
int
xchg
inc
cdq
fs
mov
and
xchg
push
add
mov
cwde
inc
inc
adc
add
je
push
and
icebp
dec
gs
ss
and
scas
add
inc
ficom
(bad)
mov
fistp
push
pop
and
fimul
jp
mov
div
pop
xor
ja
xor
push
mov
jb
add
adc
jb
out
fstp
jb
subps
inc
or
fwait
dec
push
clc
shr
mov
out
and
xlat
jmp
(bad)
pusha
xor
jbe
cwde
xchg
daa
sar
or
sahf
cmps
mov
mov
int
cmp
inc
dec
adc
inc
and
cdq
push
mov
cmp
jo
push
pop
mov
sahf
add
test
nop
inc
push
repnz
xchg
push
loopne
test
xchg
lahf
xchg
or
mov
sahf
cdq
movs
sbb
xchg
dec
cwde
xor
nop
pop
inc
fwait
inc
cdq
sbb
cdq
mov
xor
push
or
adc
(bad)
and
sbb
or
lea
iret
popa
and
ds
(bad)
and
add
inc
test
(bad)
loop
and
cdq
fild
imul
inc
and
mov
or
cmp
iret
imul
psrld
or
sbb
call
ror
jmp
call
xchg
adc
mov
jecxz
cmp
inc
inc
and
inc
jne
movs
shl
push
sbb
dec
clc
sub
lock
and
xchg
adc
sbb
(bad)
adc
xchg
add
mov
fnstsw
mov
dec
xor
(bad)
in
pop
mov
inc
dec
add
jle
jg
inc
mov
cmp
je
ds
or
cld
lock
inc
sub
pushf
mov
sbb
lock
test
icebp
retf
dec
mov
add
fidivr
jo
into
dec
mov
and
aam
sub
xlat
adc
loope
adc
adc
dec
lods
ror
retf
pop
mov
aas
add
(bad)
int3
outs
rol
or
xchg
adc
or
mov
jecxz
mov
js
cmp
mov
(bad)
in
mov
ret
imul
test
sub
dec
or
and
jg
pop
in
mov
repz
or
cmp
jne
les
and
jne
mov
loope
dec
sbb
inc
add
test
setle
jmp
jmp
adc
push
aam
mov
cmc
mov
mov
loop
pop
sbb
add
cmp
xlat
sbb
mov
push
jne
popa
outs
sar
add
xchg
jno
sar
add
jmp
js
mov
(bad)
sub
or
or
sti
add
add
clc
test
jle
mov
inc
jle
test
cmc
add
push
jnp
dec
cmp
xor
add
add
dec
lock
shr
or
xchg
mov
shl
test
xchg
lock
mov
inc
popa
sbb
push
inc
(bad)
dec
jnp
sub
add
cwde
scas
rcr
cmp
jmp
clc
xor
(bad)
mov
jmp
push
and
loopne
(bad)
outs
cmp
jmp
or
cs
repnz
ror
mov
packuswb
mov
jmp
xor
shr
push
call
in
and
inc
(bad)
adc
cmp
mov
mov
cmps
xlat
les
out
cmp
mov
loop
mov
adc
xchg
cmp
xor
mov
movs
idiv
popa
popf
mov
pop
hlt
inc
sub
mov
les
fwait
mov
cmp
adc
push
sbb
aas
and
daa
(bad)
and
mov
aas
or
mov
pusha
and
pusha
mov
pop
lods
adc
inc
repnz
jecxz
xchg
add
jne
inc
les
inc
ret
fdiv
push
loopne
pop
xor
inc
sub
sbb
cmp
push
jo
aam
aam
aam
mov
add
jmp
xchg
xchg
pop
cs
mov
mov
mov
outs
fwait
out
in
jmp
pop
loopne
jp
int3
cwde
push
imul
sub
out
add
mov
mov
inc
les
jo
(bad)
daa
push
ins
in
add
arpl
clc
movs
aas
inc
loop
xchg
popa
and
adc
pop
sar
pop
ja
or
pop
mov
das
popf
and
movs
add
cmc
clc
xor
(bad)
jbe
jge
js
jle
adc
lock
inc
lock
mov
movs
jl
and
lea
and
mov
cmp
rcl
pop
sbb
pop
call
or
inc
cmp
pop
mov
test
sbb
mov
jno
repz
cmp
mov
sub
repz
loopne
mov
lahf
mov
pop
cld
or
call
push
mov
adc
push
adc
and
in
xchg
pop
popa
ins
adc
xor
dec
jle
mov
jo
or
push
clc
out
push
test
or
fisubr
pop
adc
lock
jne
mov
cld
shld
in
add
add
lock
sub
das
cmp
add
hlt
or
cmps
call
sub
in
ss
aam
in
mov
adc
(bad)
sub
dec
je
add
add
loope
in
xchg
gs
mov
movs
and
add
adc
jb
addr16
dec
and
loop
shl
cmp
int3
push
div
sub
inc
sbb
cmc
scas
and
xlat
enter
cmp
pusha
xlat
cmp
aam
int
mov
les
dec
int3
or
sub
add
and
mov
(bad)
mov
inc
sub
dec
push
rol
inc
rol
mov
or
(bad)
jl
sar
aaa
mov
out
mov
adc
ret
jmp
fadd
push
(bad)
arpl
es
cmc
mov
add
das
adc
mov
pop
xchg
inc
aas
inc
cmp
xchg
cmp
add
clc
fadd
add
pop
inc
shr
ret
push
popa
shl
repz
sar
rol
adc
enter
mov
cwde
repz
sbb
inc
iret
addr16
das
or
mov
mov
fmul
push
loopne
mov
test
sbb
cwde
fisubr
and
inc
sbb
pusha
push
or
cld
in
sub
fs
enter
and
push
js
cmp
and
inc
ds
das
add
test
mov
das
inc
sbb
imul
movs
call
jl
xor
sar
mov
aaa
rcr
push
test
shr
out
cmc
push
xchg
daa
clc
shl
lock
sbb
mov
dec
cld
out
add
sbb
add
pop
fidiv
xchg
cs
fwait
sbb
ret
loope
sub
test
cmp
jge
add
inc
neg
jge
fs
xor
sub
jb
push
jmp
mov
xchg
stos
in
and
jnp
test
and
mov
push
fdivr
or
stos
sbb
arpl
enter
sti
cs
iret
mov
jg
push
jne
lods
movs
and
mov
cmc
jnp
pop
je
mov
xchg
or
and
test
rol
fwait
mov
lods
ins
mov
das
pop
les
lahf
mov
(bad)
mov
(bad)
rcl
add
clts
push
mov
mov
popf
cmp
sbb
add
jae
sbb
dec
cvtps2pd
sbb
push
xchg
push
add
push
test
loopne
sub
jb
jne
sbb
sub
dec
mov
pop
stc
add
or
stos
fiadd
outs
or
add
test
mov
xor
add
js
dec
mov
std
lea
xchg
fcmovbe
sub
loope
mov
add
ret
lea
cmp
loop
jl
das
fild
mov
xor
cld
lea
push
addr16
inc
pop
(bad)
mov
mov
out
test
in
or
and
adc
mov
dec
push
or
mov
inc
push
lea
pop
sub
imul
xor
in
and
and
pop
mov
pop
loopne
add
mov
sti
push
mov
adc
cmc
ret
setg
push
xor
adc
dec
cli
xchg
jmp
mov
lods
jg
and
push
inc
sbb
xchg
sahf
cs
dec
adc
push
add
das
add
fistp
mov
dec
fiadd
fmul
test
in
dec
daa
push
or
inc
ret
pop
xchg
mov
imul
pop
sub
gs
mov
pop
inc
and
jb
add
mov
mov
xchg
sub
sub
push
inc
xor
out
xor
mov
mov
loop
ret
add
push
sub
test
add
sbb
lock
scas
or
call
je
call
add
out
push
pop
jp
add
pop
or
and
arpl
and
pop
or
cli
cld
imul
jo
jp
rol
jg
rcr
push
scas
(bad)
jbe
ja
jp
inc
adc
jg
shl
or
lock
lods
scas
dec
sub
push
pushf
mov
adc
inc
(bad)
mul
es
cmp
jg
xchg
xor
pusha
les
cwde
ret
gs
pop
ret
pop
add
fmul
loop
and
sub
sbb
or
outs
or
mov
cmc
jae
push
and
add
jmp
cmps
push
rol
ins
enter
xchg
test
fisubr
sub
inc
or
jge
enter
pcmpeqd
popa
and
add
movs
mov
xchg
adc
dec
jo
shl
out
rdpmc
inc
pop
xor
mov
xchg
jo
add
daa
push
out
(bad)
cmp
push
gs
cmp
push
(bad)
or
add
xor
in
pop
in
lods
scas
adc
mov
mov
stos
test
je
imul
mov
int3
pop
adc
inc
or
mov
jmp
push
vpunpckhbw
(bad)
mov
in
xchg
push
push
ins
dec
iret
push
sub
dec
or
cmp
lahf
pop
xchg
xchg
inc
add
rol
mov
(bad)
cmp
fmul
rol
pusha
adc
or
rcr
gs
xchg
or
mov
or
and
lock
fstp
mov
mov
or
xor
(bad)
call
fs
or
in
mov
(bad)
les
push
mov
(bad)
iret
(bad)
adc
test
(bad)
lea
not
js
and
sahf
push
lea
dec
lahf
mov
adc
jae
xor
pop
fld
das
dec
jb
push
pop
adc
cmp
jo
sub
or
pop
fsub
pop
retf
sbb
mov
push
dec
pop
movs
or
ss
ins
jp
mov
cmp
dec
outs
add
or
ins
pop
(bad)
pop
jnp
push
jno
mov
adc
jb
ss
sub
in
sub
mov
pusha
out
sti
(bad)
and
add
ja
sub
idiv
lods
dec
adc
adc
imul
push
js
push
mov
push
sub
gs
xchg
adc
sbb
or
add
outs
std
add
inc
(bad)
cmp
je
rol
jns
add
or
shl
rol
jb
movs
nop
add
sar
imul
cmovbe
push
mov
adc
int
out
xchg
outs
jae
mov
clc
xchg
jne
mov
jl
imul
add
cmp
rol
and
daa
cli
xor
mov
pusha
mov
clc
leave
enter
mov
push
pusha
cmp
out
xchg
cmp
cwde
js
add
or
sar
mov
inc
cwde
nop
jmp
dec
push
push
clc
dec
dec
adc
inc
add
or
sbb
pushf
loop
aaa
or
add
push
test
jno
aam
or
pop
add
mov
shl
add
outs
cs
add
jo
or
cmp
add
out
adc
enter
cmp
pop
xor
adc
push
adc
pop
or
es
mov
das
add
xlat
pop
inc
aaa
loopne
sbb
adc
xchg
test
mov
add
push
jmp
adc
adc
das
inc
adc
add
pop
sub
or
adc
xor
jbe
mov
std
fild
xor
mov
jl
xchg
sar
sbb
shr
psrld
push
das
and
or
jb
and
out
cmp
or
or
add
jbe
setp
or
pop
push
loopne
mov
cmp
or
sar
(bad)
fsubr
sbb
out
cmp
push
mov
stos
iret
aaa
loop
loopne
push
add
cmp
push
xor
daa
retf
(bad)
sub
adc
push
jno
mov
pusha
cs
popf
hlt
std
ret
jecxz
add
je
ins
push
xor
fiadd
gs
(bad)
dec
sbb
add
pop
adc
sub
mov
mov
mov
mov
es
or
and
fs
sbb
inc
xor
mov
or
push
sub
retf
or
xchg
add
mov
add
sbb
xchg
mov
adc
and
retf
fdivr
add
add
jno
push
scas
pop
(bad)
test
test
or
aad
lods
mov
adc
repz
cs
push
pop
mov
sub
shl
xor
xchg
or
mov
bound
add
pop
lock
(bad)
push
bound
mov
cmp
in
jne
mov
mov
add
and
xchg
stos
mov
jl
in
ss
fimul
add
js
push
or
sti
jmp
cmp
div
cmp
inc
adc
add
fmul
mov
fadd
out
xchg
ret
and
mov
(bad)
pusha
adc
or
add
push
add
shr
dec
sbb
outs
scas
mov
and
outs
fiadd
xchg
enter
lock
pop
inc
pop
mov
cmp
and
jmp
call
in
test
and
out
add
lock
or
fcom
push
and
add
xchg
mov
sub
push
rol
daa
jmp
push
mov
mov
shl
test
inc
jb
fld
sbb
jle
ret
mov
imul
iret
hlt
push
retf
test
add
add
jmp
psrlw
or
js
mov
add
add
sub
repz
or
test
jp
add
imul
hlt
out
mov
xchg
mov
xchg
ror
les
daa
mov
sub
mov
xor
fadd
or
cwde
jae
push
push
and
cld
push
push
ret
icebp
push
jmp
sbb
cdq
sub
shl
(bad)
aaa
sbb
jp
or
push
pop
pop
mov
and
les
sar
jecxz
mov
daa
add
add
add
mov
fcom
loopne
rcr
or
retf
jmp
sub
sbb
loopne
outs
arpl
mov
and
arpl
dec
cmp
(bad)
push
dec
mov
mov
jmp
sbb
in
adc
shr
inc
sub
or
mov
pop
pop
pop
xchg
dec
and
ret
jmp
hlt
adc
mov
mov
push
and
xchg
sahf
(bad)
sbb
scas
bound
inc
clc
mov
push
(bad)
and
adc
lods
push
jmp
dec
sbb
pusha
xchg
mov
cmp
loope
ret
sub
pop
push
addr16
je
sub
mov
jbe
fimul
push
add
mov
xchg
push
add
movzx
or
adc
ss
xor
outs
movs
inc
mov
add
aaa
sbb
inc
sbb
aaa
add
jno
stos
push
nop
rcr
popa
push
push
add
sub
bound
rol
inc
push
inc
loopne
add
push
test
inc
sbb
shl
mov
push
addr16
lahf
or
add
call
test
pushf
in
and
or
cmps
retf
xchg
ss
inc
mov
mov
sbb
mov
mov
or
xor
dec
fsubr
mov
fadd
arpl
push
in
pop
add
lods
test
sbb
sub
jge
and
lahf
push
sbb
call
cmps
xor
daa
bound
leave
cmp
iret
lds
cdq
mov
test
sbb
int3
call
mov
sbb
and
mov
inc
xlat
stos
pop
(bad)
sbb
adc
test
cmp
int
shr
inc
fs
push
cmp
push
add
add
out
cmp
sar
and
sldt
inc
sbb
push
gs
adc
adc
aas
mov
cmp
fbld
rcl
(bad)
inc
es
fistp
or
inc
xchg
es
xchg
inc
aaa
ror
int3
add
aam
add
adc
(bad)
std
retf
jl
pop
xchg
jb
fcom
add
push
popf
dec
inc
xchg
test
xchg
jl
sub
sbb
and
add
and
adc
ror
mov
pop
pusha
jge
adc
in
adc
xor
and
test
xlat
add
ffreep
sub
cmp
push
out
sub
dec
in
mov
mov
ins
push
add
fucomi
adc
arpl
loopne
imul
cmp
fcomp
aam
xchg
outs
sub
mov
pop
xor
or
and
dec
arpl
xor
pop
icebp
add
push
and
or
inc
mov
adc
cdq
sub
or
rcr
cmp
or
pop
(bad)
lock
sbb
pop
adc
cmp
lock
mov
push
xchg
and
sbb
sub
int3
pop
mov
pusha
jae
or
dec
mov
sbb
add
pop
and
pop
add
xchg
cdq
add
add
cmp
movs
push
ins
int
arpl
mov
je
and
mov
or
enter
dec
xchg
sub
adc
or
xchg
aam
dec
pop
or
aad
ss
adc
retf
rcl
lods
popa
pop
aam
dec
push
inc
mov
dec
sar
cdq
jmp
daa
ins
test
inc
ret
cmp
sub
sbb
sbb
mov
jb
dec
call
xchg
dec
pop
adc
pop
xor
cmp
scas
pop
and
adc
test
jg
(bad)
in
mov
test
and
(bad)
test
pop
cmp
nop
pusha
sbb
and
inc
push
dec
lock
fmul
pop
push
mov
cld
(bad)
cli
push
and
mov
call
call
cmc
mov
add
xchg
aaa
push
sbb
xchg
cld
std
sub
adc
cmp
nop
sbb
nop
into
mov
pop
push
cld
mov
cmp
xor
stos
pop
fstp
sbb
into
mov
ret
fistp
push
and
je
(bad)
or
ret
dec
mov
and
out
adc
loope
mov
pop
js
mov
mov
aaa
inc
dec
add
or
jo
(bad)
sar
add
sar
inc
iret
inc
jecxz
movs
mov
sbb
daa
inc
mov
xor
add
dec
pushf
loope
lea
xchg
nop
mov
test
and
sbb
xchg
and
outs
shl
jno
dec
jae
add
and
inc
add
lods
add
inc
test
add
lock
xchg
(bad)
fcom
push
sbb
aas
or
les
pop
push
lock
sub
sbb
and
call
push
pop
push
push
fwait
inc
mov
inc
sub
ror
cmc
inc
nop
pop
sbb
jnp
and
shl
stos
daa
inc
add
mov
adc
sub
adc
xor
ret
test
inc
inc
mov
enter
es
clc
fldcw
sub
call
push
sbb
push
push
inc
mov
and
xor
add
xchg
mov
repnz
xchg
xchg
mov
mov
inc
cmp
gs
sub
inc
adc
pop
sldt
pushf
pushf
pushf
pushf
add
add
pushf
pushf
pushf
pushf
push
pop
or
pushf
pushf
pushf
pushf
or
or
or
pushf
pushf
push
addps
jo
mov
jl
add
add
bndldx
pop
add
inc
ins
addr16
inc
outs
je
add
bound
shl
nop
fstp
push
inc
add
fdivrp
adc
sbb
call
scas
imul
dec
add
mov
aam
push
lock
cwde
and
xchg
aam
jnp
xchg
inc
push
sub
mov
mov
dec
(bad)
push
popa
mov
iret
cmp
xor
add
sub
add
sbb
ret
cmp
pop
push
pop
daa
sbb
inc
lock
add
clc
push
inc
inc
dec
adc
je
ret
shl
clc
inc
clc
daa
mov
pop
add
add
ret
xchg
xchg
add
jae
push
cdq
sbb
or
pusha
pop
popa
mov
xor
ins
iret
sub
aad
sti
ss
push
push
jmp
popf
xor
daa
add
dec
nop
adc
xchg
adc
inc
push
pop
push
push
dec
pop
inc
pop
pop
inc
inc
pop
or
fnstenv
aad
pop
add
sti
aas
mov
data16
rcr
cmps
(bad)
mov
push
nop
aad
hlt
aaa
or
dec
pop
push
dec
dec
dec
inc
clc
adc
sbb
(bad)
out
push
inc
dec
inc
dec
push
dec
and
(bad)
lock
je
jo
(bad)
popa
js
js
addr16
or
(bad)
xor
pop
push
(bad)
(bad)
das
cld
add
dec
sub
push
pop
dec
dec
add
adc
push
sub
sub
pop
mov
mov
push
push
sbb
inc
scas
sar
sbb
sbb
xor
inc
mul
fimul
icebp
mov
sbb
add
fist
pop
sub
push
inc
push
dec
dec
inc
pusha
(bad)
rol
inc
xlat
or
xchg
add
movs
ret
and
loope
popf
bound
sbb
jle
and
mov
and
jae
adc
jbe
inc
nop
gs
je
ins
pop
cs
sub
arpl
mov
mov
mov
or
pop
add
fs
sbb
push
add
inc
mov
or
add
or
pop
js
fwait
and
xor
add
pop
xchg
jae
sbb
adc
daa
adc
dec
inc
lock
fwait
imul
push
sbb
pop
dec
add
pop
xor
(bad)
dec
add
gs
push
js
pop
bound
(bad)
cs
daa
sub
jbe
mov
and
or
addr16
add
jae
xor
ins
bound
pop
add
xor
push
jnp
mov
popf
cmp
aaa
cli
and
push
(bad)
pop
dec
inc
dec
inc
pop
cmp
jne
sbb
xor
outs
cdq
lods
add
pop
scas
imul
adc
inc
xlat
pusha
xor
aam
sahf
sbb
out
or
push
and
das
adc
cs
pop
aas
mov
add
rol
xchg
cmps
sub
adc
test
inc
outs
adc
ret
sub
xor
add
test
add
lahf
scas
sub
jl
mov
mov
adc
sub
mov
imul
das
or
inc
push
xor
sbb
pop
add
aaa
adc
xor
movs
popf
mov
inc
inc
cmp
push
add
and
adc
push
bound
(bad)
aas
adc
loope
inc
inc
dec
inc
inc
add
movsx
inc
push
xor
test
dec
inc
xor
mov
dec
add
cmps
mov
xor
pop
pushf
dec
dec
pop
mov
mov
or
xor
das
adc
cmps
cmp
mov
dec
dec
push
inc
push
or
lods
lds
fsubr
mov
jnp
dec
push
cmp
mov
or
jo
and
fild
outs
pusha
cmp
push
inc
pusha
sbb
add
and
mov
mov
stos
and
fisub
adc
fldcw
or
and
mov
cmc
in
in
and
xchg
es
and
mov
push
add
push
or
je
and
or
arpl
lea
fwait
int3
jno
popa
xor
sub
and
xor
ret
jp
cmp
cmp
sbb
mov
pop
bound
sub
jne
or
jae
add
pop
jne
add
mov
mov
pusha
xor
imul
fdiv
mov
sub
cmp
cmp
pop
in
pop
or
mov
sahf
popa
push
mov
mov
test
push
and
ret
popa
dec
add
call
gs
or
xor
popf
bound
gs
add
push
mov
loopne
call
sub
fdivr
leave
push
and
retf
or
pop
stc
loope
mov
push
sub
lods
rcr
adc
or
adc
jo
inc
stos
mov
js
test
outs
sub
dec
cwde
sbb
lea
data16
and
and
jno
(bad)
push
add
das
add
xchg
add
daa
out
daa
xor
aas
out
or
es
mov
fwait
sub
imul
outs
test
jle
adc
push
mov
fdivrp
add
lock
cs
push
mov
pop
scas
adc
fistp
jae
jbe
loopne
dec
das
sub
fisttp
xchg
jecxz
push
add
inc
mov
(bad)
gs
retf
in
or
add
adc
and
sbb
and
inc
cs
inc
setae
sub
cmp
call
dec
sub
add
or
add
sbb
js
xor
inc
mov
dec
pop
cld
cwde
loop
xchg
push
jne
stos
mov
or
cmp
frstor
inc
dec
daa
push
push
ins
je
aas
pushf
or
dec
loopne
bound
push
inc
jns
mul
dec
in
loope
lock
add
add
enter
(bad)
inc
pop
mov
xor
push
leave
add
adc
add
add
dec
and
mov
pop
add
(bad)
in
cwde
push
pusha
cwde
mov
scas
or
pop
sbb
outs
rcl
cmc
lds
fs
push
xor
popa
sti
cmp
xor
adc
pop
add
sbb
xor
and
add
out
lock
adc
or
sbb
push
mov
in
inc
push
cmp
jecxz
shr
push
add
adc
xor
int
jae
or
adc
xchg
mov
(bad)
addr16
add
js
pop
ror
xor
daa
or
add
dec
jbe
lods
call
jb
movs
rol
icebp
sub
jmp
cmp
iret
nop
aad
mov
mov
add
xchg
pop
sbb
jmp
daa
mov
push
push
pop
push
dec
inc
pop
lock
and
push
push
or
mov
inc
and
sbb
push
sbb
jecxz
fsub
gs
and
fs
jg
ror
pop
xor
add
inc
push
push
inc
dec
mov
adc
push
pop
dec
ror
fld
(bad)
or
cmp
or
push
sub
pusha
xor
or
and
popa
aad
out
add
cmc
outs
inc
mov
or
push
or
push
outs
loopne
out
sub
push
call
int3
mov
sub
out
mov
das
or
xor
nop
out
sub
je
pop
call
test
scas
jl
loope
std
movs
pop
ins
fs
pop
mov
scas
test
add
add
jne
mov
pop
call
and
xor
ret
dec
enter
ret
icebp
jae
jp
or
imul
std
mov
and
adc
lods
xor
das
add
sub
sub
xor
mov
lods
add
sub
popa
loopne
jb
fs
jne
or
xor
push
ret
test
push
mov
jmp
out
push
inc
dec
push
dec
inc
push
jno
jmp
push
push
mov
cs
ret
xor
lds
or
iret
outs
imul
mov
xor
clc
or
shl
cmp
popa
mov
jo
gs
inc
sbb
ret
mov
add
outs
push
mov
pop
push
fistp
gs
(bad)
and
sbb
adc
sub
pop
inc
test
lods
and
sbb
jmp
mov
cwde
or
push
adc
dec
das
pop
aam
push
jne
adc
mov
ret
and
pop
pop
add
mov
cmp
inc
add
mov
(bad)
push
add
jg
and
inc
pop
inc
and
ret
pusha
pop
jns
(bad)
cs
jne
jmp
or
dec
push
and
clc
icebp
sbb
sbb
test
int
hlt
pop
sub
or
inc
dec
inc
sub
loopne
test
jmp
push
sbb
adc
mov
mov
add
mov
push
mov
mov
pop
mov
adc
je
mov
in
(bad)
adc
mov
into
bound
adc
les
popa
js
imul
mov
cmps
adc
push
inc
push
fmul
dec
or
cmps
ret
iret
or
or
pop
sub
sbb
dec
add
enter
and
push
or
cmp
and
arpl
mov
or
ja
ins
push
add
or
cmps
aaa
or
adc
(bad)
adc
ds
xor
int
jle
adc
xor
out
leave
js
adc
dec
adc
out
stos
std
pop
push
dec
dec
dec
push
ret
mov
adc
mov
mov
push
push
fadd
push
pop
pop
enter
or
add
sbb
push
out
shr
jae
adc
pop
(bad)
xor
outs
mov
shr
dec
out
paddsw
inc
rcpps
add
mov
hlt
add
out
pop
jg
scas
inc
mov
dec
dec
pop
dec
loopne
jp
cld
push
dec
mov
and
sub
mov
hlt
add
push
jne
call
out
loope
gs
in
add
sbb
push
adc
jo
rol
mov
cmp
xchg
loop
sahf
add
mov
js
lahf
push
outs
scas
or
pushf
or
and
fdivr
lahf
or
jo
and
stos
or
shl
jecxz
fisttp
push
cdq
cwde
retf
icebp
push
nop
mov
aas
lea
and
icebp
vmwrite
mov
pop
mov
sub
jnp
fstp
outs
je
add
mov
sub
jns
jo
out
movs
iret
or
pop
icebp
call
cmp
push
cmp
js
repnz
in
inc
add
add
or
pop
add
test
xlat
push
lods
jo
(bad)
repnz
mov
mov
or
adc
in
cs
jb
gs
cmc
jbe
xchg
inc
pop
in
jecxz
bound
lock
arpl
adc
pop
sar
scas
inc
(bad)
sub
dec
test
inc
inc
pop
push
pop
push
dec
pop
ja
jne
push
clc
repnz
xor
dec
dec
js
or
std
add
xor
pop
repz
add
dec
mov
add
dec
fidivr
mov
jecxz
(bad)
(bad)
mov
pop
or
popa
push
jmp
lea
pusha
and
test
int
or
add
jne
xlat
dec
adc
inc
aas
nop
dec
daa
jmp
add
cwde
int
(bad)
lock
enter
ins
sub
int3
shr
sub
sbb
jl
inc
or
or
push
hlt
cmps
fcom
out
js
and
pop
cmp
test
repz
mov
and
dec
je
inc
xchg
popa
jae
push
loopne
(bad)
cmp
scas
push
xor
int
es
adc
push
stc
push
sub
das
add
push
jp
inc
repz
arpl
cwde
inc
or
pop
imul
xor
movs
mov
sub
aas
sbb
ret
jmp
push
test
dec
and
cs
arpl
mov
test
mul
aam
jmp
mov
adc
cs
popf
or
imul
clc
add
fwait
sub
push
(bad)
lods
js
xor
mov
pop
xor
icebp
(bad)
cmp
imul
out
stc
add
pop
in
push
mov
outs
jle
pop
xor
cwde
mov
clc
test
xchg
jmp
arpl
fs
dec
push
daa
push
loope
lock
dec
and
sbb
pop
sub
aas
gs
pop
int3
hlt
xor
xchg
popa
jne
mov
call
dec
push
push
loopne
jne
xchg
test
sbb
mov
sub
inc
pop
in
push
mov
outs
and
and
jle
(bad)
or
sbb
ret
add
sub
not
add
ins
adc
xchg
mov
stos
loopne
mov
add
or
and
in
push
cmps
add
sbb
das
sbb
gs
fs
nop
dec
adc
mov
inc
outs
adc
mov
pop
cmp
test
mov
add
cmp
ins
mov
test
das
add
cmp
xor
aad
or
lock
clc
xchg
mov
test
rol
sbb
and
add
or
movs
das
leave
jmp
or
loopne
pusha
lods
icebp
lds
adc
sub
stos
shld
add
push
retf
imul
cmp
(bad)
dec
inc
push
push
pop
mov
nop
adc
mov
pop
mov
adc
mov
ins
pop
jo
leave
and
not
sbb
xchg
xor
inc
push
iret
loopne
jb
stc
sbb
inc
inc
mov
inc
xor
mov
dec
push
pusha
push
inc
outs
mov
cmp
(bad)
add
ja
cs
or
mov
push
test
or
in
push
push
pop
add
push
xor
outs
fs
sub
adc
and
adc
push
imul
cs
or
fistp
test
and
xor
ret
icebp
adc
pop
imul
or
arpl
mov
iret
in
popa
pop
or
push
aam
push
add
addr16
xor
mov
das
icebp
in
add
mov
or
adc
cdq
adc
pop
add
dec
add
(bad)
push
add
lock
push
xor
adc
movs
cmp
jno
pop
or
popa
xor
sbb
pop
ret
inc
dec
ins
xor
popa
xchg
dec
ret
outs
stos
arpl
or
and
pop
push
jbe
popa
push
or
arpl
daa
and
aaa
imul
in
mov
js
or
push
inc
or
mov
nop
out
sub
ret
xlat
push
inc
or
pop
dec
(bad)
adc
mov
(bad)
out
out
stos
and
mov
popa
jb
cs
test
dec
xchg
jbe
sub
cmp
inc
gs
push
sub
cmp
gs
cmp
mov
shr
push
out
pop
aaa
(bad)
jbe
ins
and
push
inc
or
jo
imul
lods
jge
imul
outs
je
nop
jmp
add
(bad)
xchg
lahf
pop
test
sub
jae
fs
or
mov
js
adc
pushf
xchg
jo
gs
or
shl
pop
cmps
inc
ins
jno
call
test
je
xlat
jno
jne
lods
mov
push
test
xchg
not
in
dec
call
push
mov
pop
ins
arpl
xor
sub
inc
mov
dec
enter
stos
cdq
mov
int3
inc
gs
mov
fadd
pcmpeqb
mov
outs
jae
xor
(bad)
fidiv
sub
push
sub
neg
xor
test
bound
pop
lods
mov
jo
jne
test
inc
or
pusha
dec
push
ret
inc
cmp
pop
push
push
inc
(bad)
adc
ja
rol
sti
or
fdivr
jb
dec
add
pop
jmp
lods
pop
ror
jge
mov
or
addr16
lock
xor
arpl
pop
pop
bound
fs
mov
ins
outs
sbb
or
in
dec
jae
add
ret
jge
pop
popa
jns
jge
sub
jbe
xor
outs
loopne
stos
outs
or
add
cmp
xor
gs
add
adc
xlat
enter
retf
popa
ja
fsub
pop
push
mov
cld
adc
fdiv
scas
dec
jle
cmp
or
push
inc
add
es
push
(bad)
int3
cmp
xor
in
add
dec
add
loop
(bad)
jo
popa
gs
pop
dec
pop
inc
data16
jo
data16
test
imul
out
clc
scas
mov
mov
aaa
xor
push
mov
enter
and
add
sub
cmp
imul
or
stos
arpl
pop
pop
in
pop
push
mov
stos
xor
test
aad
add
sub
je
sbb
sub
push
aad
push
ja
or
es
or
data16
gs
or
adc
or
popa
icebp
xor
push
cmp
adc
mov
mov
pop
arpl
dec
jg
daa
loopne
outs
loop
sbb
sti
repz
sub
mov
xchg
sbb
xchg
pop
or
or
bound
xor
lods
adc
shl
ins
sti
aam
pop
call
pop
xchg
xor
in
add
imul
xor
jae
pop
and
gs
inc
and
stos
hlt
cmps
lea
push
das
dec
xchg
sbb
add
jo
and
jo
push
outs
add
xor
jo
outs
jne
jecxz
movs
push
sbb
adc
out
loopne
push
pop
std
sub
mov
ret
add
in
ret
or
and
and
mov
jo
pop
sbb
sbb
and
push
adc
test
inc
xor
aad
add
adc
fisttp
and
and
mov
push
imul
inc
pusha
aaa
inc
stos
sub
aad
add
and
pop
inc
in
ret
xor
jb
mov
push
or
in
outs
adc
push
jno
popa
push
pop
(bad)
and
inc
pop
adc
pop
jecxz
jbe
xlat
jo
cmc
xor
add
add
arpl
mov
outs
xor
sbb
fs
dec
lods
inc
push
aas
rcr
and
fwait
sub
add
or
dec
adc
xchg
adc
das
icebp
inc
and
xor
xchg
inc
(bad)
lods
jg
jbe
(bad)
and
gs
repnz
push
push
pop
mov
or
adc
jne
into
xor
js
pop
pop
or
mov
shl
mov
icebp
and
and
scas
rol
pusha
ret
or
rcl
inc
mov
outs
or
mov
mov
jmp
sub
lods
mov
les
jae
dec
and
mov
inc
pop
add
(bad)
lods
or
inc
jg
popf
or
xor
bound
xchg
lock
nop
ret
or
pop
das
add
popf
outs
arpl
add
shl
jns
xor
dec
or
mov
inc
push
stos
inc
fwait
test
dec
cld
inc
push
xlat
adc
add
adc
dec
dec
outs
dec
mov
(bad)
and
clc
icebp
add
fcomp
icebp
pop
push
pop
aas
mov
fwait
hlt
inc
cmc
add
add
push
std
gs
xor
or
pop
pusha
sub
lea
clc
mov
pop
jae
lock
or
adc
xor
and
mov
std
dec
mov
push
je
sbb
imul
adc
push
(bad)
mov
adc
mov
icebp
fisttp
cmp
(bad)
push
pop
jns
fist
jb
xor
sbb
fidivr
lahf
xor
or
dec
adc
pusha
add
push
call
adc
data16
(bad)
or
inc
in
push
adc
cmp
jne
jmp
shl
fs
and
pop
test
test
xchg
xor
inc
mov
lds
rol
inc
adc
aas
pushf
push
adc
in
add
pop
sbb
fs
inc
jge
add
cmp
in
or
add
popa
out
push
inc
add
jmp
or
rol
out
or
hlt
pusha
in
add
mov
pop
movs
sbb
test
pop
ret
ins
lods
mov
sbb
sbb
adc
mov
jle
pushf
fdiv
dec
ins
jae
pusha
cmp
adc
xchg
in
push
fisub
rcl
les
lds
nop
pop
enter
inc
js
cmp
mov
hlt
sar
sti
sub
adc
fdiv
add
scas
inc
call
xor
gs
xor
imul
push
data16
fiadd
xchg
sar
stos
test
jno
mov
mov
rol
sbb
shl
push
inc
inc
dec
adc
lea
inc
adc
mov
call
sbb
popa
sub
and
push
add
adc
fcmovb
int3
sbb
lods
dec
cmp
stos
inc
mov
aas
adc
mov
or
shl
adc
cmp
inc
xchg
and
popa
nop
into
adc
adc
sbb
and
xor
add
out
rcr
lahf
loope
ss
sub
xchg
push
cmp
(bad)
inc
pop
pop
push
fbld
(bad)
mov
psllq
dec
or
mov
mov
dec
enter
xor
xchg
xchg
mov
pop
pop
jge
pop
aam
movs
and
pop
mov
dec
add
movs
cli
inc
fs
dec
ja
mov
dec
sbb
retf
lods
jge
out
fcom
test
xchg
mov
dec
cwde
add
xor
je
inc
imul
test
dec
pop
add
push
into
and
repz
enter
xor
adc
push
inc
sbb
xor
sub
jecxz
adc
retf
outs
sbb
(bad)
xor
bound
jae
test
inc
mov
jg
cdq
lea
push
movs
fist
lock
jge
pop
add
jnp
jae
ror
nop
outs
cmp
ja
pushf
shl
adc
and
xor
jae
das
xchg
inc
adc
push
push
cwde
pop
xor
add
imul
sub
outs
arpl
push
add
xor
cmc
sub
les
pushf
mov
dec
mov
xor
lock
jb
pop
in
mov
and
pop
cdq
(bad)
push
ins
daa
ins
jae
sbb
daa
outs
jne
dec
inc
dec
mov
sahf
data16
jo
fld
jae
and
xchg
jmp
add
mov
xor
mov
stc
dec
and
adc
fs
out
add
sub
add
jb
mov
add
ret
jl
jne
push
xor
sub
lock
lock
mov
fnstsw
(bad)
push
in
imul
unpckhps
adc
push
test
cmp
std
xchg
test
sbb
fcmovb
or
add
out
fisttp
sub
jge
rcl
aaa
ins
pop
fst
outs
sbb
add
pop
arpl
cmp
add
add
mov
in
loope
call
and
in
add
ret
fist
xor
xor
call
ins
push
sbb
add
cmp
movs
in
add
or
adc
nop
pop
ret
or
dec
adc
inc
iret
adc
scas
sbb
xchg
sub
or
dec
add
adc
sub
add
popa
jnp
icebp
push
lea
xor
sub
mov
sub
push
inc
inc
add
sbb
popa
fwait
je
call
jo
push
or
int
int
sbb
popf
cmp
add
test
nop
mov
test
inc
mov
stc
jo
sbb
aam
data16
bound
cmp
adc
sub
outs
add
and
(bad)
les
(bad)
call
lea
sbb
ret
or
imul
dec
pusha
mov
test
test
adc
fs
shr
fild
jae
in
adc
xor
dec
xor
adc
ins
aaa
mov
retf
mov
sbb
lea
push
and
inc
jno
loope
push
shr
sbb
xlat
xchg
cmp
mov
mov
sbb
jb
add
repnz
xor
xchg
les
mov
adc
and
inc
sbb
push
mov
sbb
bound
sub
pop
jb
ficomp
outs
data16
add
fwait
xor
data16
adc
movs
xor
fcom
cwd
ja
sbb
sub
fwait
pop
sbb
push
pop
jb
xor
cmp
dec
adc
je
(bad)
xchg
cmp
or
and
and
xor
sbb
(bad)
daa
pop
les
ror
sub
popa
adc
and
scas
push
call
add
mov
or
das
push
push
mov
mov
outs
outs
adc
mov
xor
les
or
sar
mov
or
je
test
sbb
xor
sub
test
inc
adc
pop
ja
xor
popa
push
test
push
sbb
xor
sub
clc
or
push
dec
or
mov
lock
or
push
and
mov
fist
push
clc
add
or
aam
clc
adc
sti
ror
fwait
rcr
loope
or
pop
xor
dec
push
inc
cmp
dec
push
or
and
add
mov
jo
icebp
imul
sbb
inc
push
icebp
xchg
js
test
outs
add
inc
add
add
(bad)
in
xchg
inc
inc
push
add
add
push
and
sub
or
popf
jo
add
push
dec
add
outs
sbb
cdq
add
in
icebp
and
jnp
add
dec
dec
add
pop
call
jns
sbb
pusha
xchg
outs
outs
jo
mov
popf
(bad)
push
and
adc
jge
sub
popa
sbb
jne
aas
cmp
pushf
push
sub
add
adc
push
aaa
mov
scas
popa
inc
fs
xchg
fldcw
xor
(bad)
xor
loope
outs
gs
inc
(bad)
leave
adc
add
cmps
das
jmp
ret
add
lock
push
sub
inc
and
fwait
cmp
jb
arpl
stc
aas
pop
loope
cmp
add
cmp
jns
inc
cmp
sti
add
mov
and
cmp
dec
xchg
inc
ja
xchg
push
push
fistp
inc
sti
and
sub
or
adc
adc
lock
add
mov
add
hlt
or
xor
jae
pop
xchg
sbb
jno
jns
clc
push
int3
mov
in
fs
xor
add
cmp
mov
push
dec
out
sub
inc
inc
fbld
ins
sub
dec
add
aad
jns
int
dec
lea
pop
dec
pop
inc
xor
lea
cld
push
outs
je
inc
pop
sbb
push
arpl
sbb
pop
cmp
out
(bad)
daa
inc
or
pop
add
jb
mov
imul
arpl
cdq
pusha
fisub
dec
xchg
imul
ins
inc
in
add
gs
ins
adc
out
add
push
sti
shr
outs
add
xor
jae
pop
bound
add
push
(bad)
test
sti
adc
aaa
ja
and
xchg
aaa
pop
ret
push
jo
fadd
lahf
movs
mov
add
xor
pop
add
ficomp
rcl
fs
or
jg
adc
(bad)
sub
lea
test
retf
das
pop
or
pop
mov
xor
dec
or
and
popa
pop
js
adc
mov
clc
or
pop
sub
sub
adc
and
xor
pop
mov
mov
je
ret
jns
retf
adc
xor
lds
add
sub
test
adc
cmp
push
mov
das
(bad)
adc
jae
popa
or
gs
dec
test
inc
je
sbb
jae
push
in
shl
mov
adc
nop
sbb
lea
xor
pop
sub
pop
into
dec
mov
pop
mov
cmc
bound
inc
shr
add
mov
dec
push
sub
push
inc
out
jnp
fcom
ins
pusha
sub
fs
push
add
or
call
dec
jns
pop
test
xchg
shl
xchg
fwait
mov
jae
(bad)
movs
add
pop
(bad)
xlat
adc
add
fidivr
sbb
(bad)
rol
push
imul
xchg
xchg
sbb
rol
ret
ins
je
pop
mov
int3
or
arpl
mov
es
xchg
or
dec
push
adc
jo
popf
call
les
or
repz
or
sub
xchg
clc
add
fsubr
jo
mov
or
leave
retf
add
rcl
in
adc
movs
out
loope
and
lock
and
pop
xor
sahf
cwde
fs
pop
xchg
sub
and
js
aas
daa
fmul
arpl
or
pop
dec
jae
pop
dec
mov
adc
add
loope
mov
push
nop
push
fs
mov
sub
std
popa
mov
test
mov
or
xchg
jge
fdiv
pop
rcr
or
cmp
add
and
in
sub
arpl
dec
and
loopne
adc
popf
sub
sub
pushf
xor
or
cli
or
je
and
and
fldcw
xor
xor
sub
push
xchg
pop
cmp
push
loop
cmp
loope
mov
cmp
cmp
int3
pop
and
pop
rol
test
pop
sub
adc
outs
lahf
mov
arpl
dec
adc
xor
push
jae
mov
and
cmp
lods
cmp
xor
inc
and
(bad)
mov
jp
sbb
je
sar
jne
loopne
js
or
cmp
dec
push
jb
mov
add
outs
sbb
(bad)
push
and
mov
ins
out
jne
sbb
add
add
sub
adc
add
add
push
bound
je
and
adc
lea
mov
out
sbb
data16
fcomp
ror
xor
inc
cmp
(bad)
or
sti
mov
and
cs
push
test
xor
xchg
in
ins
das
outs
outs
jno
outs
pushf
xor
es
das
rcr
lock
and
outs
fnstsw
outs
mov
inc
inc
outs
fs
adc
ins
sub
inc
xlat
gs
pop
(bad)
repnz
add
pslld
add
clc
adc
pop
add
es
or
sbb
push
stc
and
in
inc
push
dec
add
js
sub
js
in
inc
ins
pop
mov
inc
dec
ins
adc
pushf
movs
fiadd
jb
(bad)
sub
pop
mov
adc
mov
xor
push
or
add
mov
xor
or
pushf
adc
add
adc
push
xor
daa
add
loopne
mov
das
enter
or
add
clc
aaa
shl
xor
sub
xor
prefetcht1
fist
jne
push
outs
imul
ret
fild
shr
jo
pop
mov
cmp
aas
mov
frstor
or
mov
pop
pop
adc
xor
lds
cmps
clc
add
xor
in
ss
pop
ins
pop
inc
cmovp
push
mov
xor
pop
lock
imul
ins
jns
mov
out
pop
inc
inc
add
pusha
push
jo
data16
outs
mov
loopne
xor
xor
adc
sbb
adc
lahf
push
pop
inc
pop
push
js
pop
movs
xlat
pop
or
bound
mov
or
outs
or
ins
fmul
outs
sbb
xor
inc
inc
sbb
(bad)
outs
push
rol
sub
outs
mov
loopne
xor
jp
outs
cmovno
jnp
popa
xchg
inc
js
pop
sub
js
ins
nop
cmp
dec
push
adc
push
xchg
ins
jne
cmp
shl
sub
into
xor
loop
and
mov
dec
add
dec
pop
std
cmp
scas
mov
popf
addr16
push
call
sbb
add
push
pop
xor
sub
jp
lods
rol
dec
mov
ror
das
or
sbb
pop
add
or
out
clc
add
stos
xchg
outs
xchg
sbb
sub
xor
outs
push
enter
retf
pop
fdivr
or
adc
aaa
enter
add
movs
inc
push
fs
ror
and
dec
sbb
push
mov
cmp
mov
fs
mov
jnp
or
push
push
push
(bad)
imul
dec
push
sub
jo
or
sub
gs
(bad)
mov
mov
cmp
add
push
shr
add
adc
push
jno
shl
push
je
or
xchg
sbb
add
adc
imul
js
mov
mov
fsubr
imul
mov
retf
mov
les
clc
and
add
(bad)
or
mov
mov
lock
out
mov
push
xor
inc
dec
mov
push
cmp
imul
rcr
jmp
and
xor
adc
mov
nop
push
daa
out
fs
enter
test
sar
sub
mov
fs
dec
mov
or
ret
or
leave
aaa
or
les
imul
fdiv
clc
sbb
aad
push
dec
sub
mov
xor
int3
adc
mov
nop
xor
mov
gs
rol
and
sti
das
push
sub
fild
or
(bad)
sbb
add
inc
sbb
clc
add
adc
push
push
ds
add
or
sbb
push
inc
test
add
push
adc
aam
lea
das
mov
push
push
dec
dec
inc
ret
cmp
ja
fimul
jp
sub
mov
rol
nop
mov
dec
js
pusha
push
push
fst
ret
int3
add
cmovo
adc
sub
xchg
adc
sub
popa
push
or
clc
xor
pop
pop
pop
pop
xor
enter
call
cdq
inc
mov
in
lock
jge
(bad)
into
inc
adc
imul
in
and
cmp
in
or
mov
(bad)
dec
je
push
jne
mov
int3
add
xor
and
inc
loope
sbb
sbb
xor
push
sbb
sub
sbb
jno
popa
mov
cmp
cmp
mov
xlat
ror
fst
adc
add
in
addr16
inc
imul
mov
mov
jns
sub
mov
dec
dec
mov
add
push
push
cld
push
push
inc
stos
jno
fadd
loopne
mov
lea
xor
pop
push
outs
out
dec
or
or
call
mov
xor
pusha
pusha
and
or
add
arpl
and
clc
mov
pop
outs
cld
mov
push
adc
xor
and
sub
bound
jns
dec
scas
add
fs
pop
in
cmp
or
and
fisub
push
aam
pusha
cmp
fstp
pop
adc
add
pop
pop
scas
hlt
xchg
lds
cmp
ret
aam
cmp
mov
cmps
call
es
aas
sub
jne
sbb
out
shl
xchg
ja
push
lock
mov
in
mov
dec
inc
loopne
pop
cld
cld
pop
lock
jmp
mov
mov
in
pop
inc
shl
mov
loopne
push
xor
push
stc
(bad)
ja
shl
lock
and
nop
nop
xchg
inc
inc
cmp
cwde
test
mov
xor
inc
test
lods
and
xchg
mov
mov
outs
and
fdiv
xchg
sar
ret
cs
mov
jb
enter
rol
push
cmp
aam
and
(bad)
mov
xchg
fcomp
loopne
in
enter
call
jno
jb
jbe
and
gs
and
(bad)
ss
fs
pop
and
mov
and
fsub
fs
add
adc
and
cmp
push
sbb
or
adc
adc
sbb
sbb
jae
enter
pop
and
mov
xor
mov
sbb
sbb
xor
(bad)
push
into
and
test
and
cmp
and
dec
and
mov
dec
test
enter
in
mov
push
cmp
pop
push
push
and
enter
inc
jl
fs
jo
jbe
gs
and
xchg
arpl
xchg
jo
and
in
nop
js
jl
sub
push
js
xor
enter
cld
cdq
push
and
js
jo
fwait
sbb
inc
inc
rol
xchg
mov
jns
fild
int
and
pop
in
xchg
cwde
pop
and
jp
gs
and
mov
dec
and
lods
into
mov
and
inc
and
data16
retw
and
inc
fs
inc
movs
jmp
cld
lock
mov
and
mov
fwait
in
add
push
fcom
jo
inc
loopne
je
pusha
pushf
nop
xchg
inc
cs
fs
push
fnstenv
and
enter
and
jl
pushf
sbb
and
xor
xchg
inc
and
je
xchg
jb
enter
lock
mov
cld
hlt
and
or
adc
rol
cmp
movs
and
add
cmp
and
pop
sbb
inc
and
sub
sub
enter
and
nop
cmp
cmp
enter
and
and
cmp
enter
push
sbb
and
pop
mov
push
shl
fld
loopne
or
data16
and
fsubr
nop
je
xchg
cmp
add
and
pop
sbb
fs
pushf
jl
ins
push
inc
push
adc
add
enter
test
mov
mov
nop
and
adc
xor
adc
mov
arpl
adc
and
inc
xchg
jmp
cdq
sub
mov
sbb
nop
sub
xor
pop
jb
enter
test
mov
pushf
cmp
and
hlt
mov
fsubr
inc
inc
and
push
sbb
fs
in
jl
nop
xchg
inc
inc
pushf
lock
hlt
retf
loopne
lods
cld
inc
dec
push
cmp
xchg
arpl
and
sar
ss
enter
and
xchg
or
ss
and
out
and
mov
fcomp
in
and
(bad)
loopne
call
(bad)
jecxz
cmp
inc
pusha
and
nop
or
call
in
test
in
shr
xor
adc
test
cmp
ror
mov
enter
push
cdq
(bad)
loope
cmps
and
ins
add
loopne
pushf
and
jb
jbe
inc
enter
ret
sbb
sbb
adc
hlt
inc
push
mov
leave
lods
and
adc
js
movs
cdq
xor
test
fsubr
fadd
and
mov
das
shl
call
and
xchg
xor
and
(bad)
and
push
enter
cmp
popa
ja
xchg
and
xor
nop
xchg
arpl
inc
cwde
push
cmp
int3
dec
gs
enter
sub
pop
pop
mov
lods
cld
stc
and
call
enter
nop
or
mov
xchg
and
test
cmp
mov
or
and
xchg
xchg
and
cmp
xchg
xor
and
cwde
das
xchg
rol
and
dec
xor
das
and
popa
pop
pushf
inc
push
cli
dec
add
and
(bad)
ins
aad
and
and
aam
mov
call
(bad)
data16
ds
and
inc
pusha
and
sbb
xchg
inc
lahf
and
cwde
xchg
inc
inc
push
sar
nop
fcomp
retf
clc
and
inc
push
cdq
(bad)
jmp
pushf
jg
xor
arpl
xchg
xchg
in
movs
lock
cmp
mov
clc
ins
ror
and
sahf
and
add
fs
cwde
or
or
inc
push
sbb
adc
sahf
mov
jb
ins
and
push
sbb
and
and
sub
jecxz
or
in
xchg
xor
xor
cmp
mov
inc
lock
enter
sbb
sbb
push
retf
xchg
and
(bad)
push
sbb
mov
jno
and
pop
fs
pop
and
pop
inc
mov
ins
movs
in
xchg
inc
jo
je
daa
cmp
jne
mov
std
and
fs
xchg
inc
test
mov
and
inc
adc
sub
or
pushf
xchg
inc
mov
mov
mov
cld
in
xchg
inc
test
movs
data16
mov
fs
mov
and
mov
loop
das
movs
and
ins
jbe
enter
in
cwde
and
xor
(bad)
int3
(bad)
ins
pop
addr16
and
xchg
mov
enter
fsub
and
ss
and
aam
(bad)
jne
in
cmps
mov
inc
mov
in
pusha
lock
mov
mov
lods
mov
cld
or
data16
rol
lahf
jno
add
adc
and
pop
cmp
lfs
pusha
adc
call
stc
and
inc
inc
push
ins
je
cmp
mov
mov
sbb
cmp
jb
enter
xchg
and
mov
(bad)
call
stos
stc
inc
inc
push
cdq
and
fs
xchg
pushf
mov
pop
cmp
repz
sub
test
jo
adc
mov
sbb
mov
lods
sbb
sbb
test
and
and
test
xor
and
in
int3
enter
jne
stc
and
sbb
and
retf
and
push
sbb
fmul
loopne
and
jb
and
and
stc
sbb
xchg
adc
and
jl
inc
inc
push
lock
jne
je
fsub
clc
and
int3
and
push
and
(bad)
jb
add
and
adc
enter
data16
adc
and
sbb
fs
rcr
xor
push
and
mov
cmps
cmp
push
lds
or
inc
(bad)
and
mov
push
sbb
cmp
and
mov
inc
pusha
enter
inc
test
dec
jo
test
push
fsub
push
or
into
inc
add
push
sbb
pop
push
pop
mov
nop
xchg
inc
pusha
les
jne
fdivr
and
mov
(bad)
xchg
and
xchg
mov
and
mov
xor
ins
and
push
sbb
sbb
mov
jecxz
inc
(bad)
and
(bad)
xchg
or
movs
cmp
enter
add
popa
and
cmp
push
inc
push
sbb
sub
mov
or
and
pop
jb
enter
cmp
cmp
inc
fs
or
and
inc
push
sbb
dec
ins
dec
pushf
in
xchg
inc
push
int3
push
jno
cmp
sub
xor
pusha
jne
fisttp
sbb
les
and
cmp
and
fs
dec
je
js
inc
push
sbb
jl
mov
pusha
std
and
jb
test
loopne
leave
and
xchg
sbb
cwde
sti
and
and
nop
xchg
arpl
arpl
test
pushf
sbb
int3
and
fist
push
loope
and
jo
test
arpl
mov
(bad)
retf
add
int
int
loope
xor
int3
inc
pop
sub
inc
test
aam
in
xchg
arpl
fdiv
fmul
sbb
jns
ret
fs
xchg
arpl
push
and
aam
sbb
jmp
push
sbb
mov
and
je
fsub
cld
pop
and
push
dec
icebp
add
push
sbb
fs
or
inc
aam
adc
jg
sbb
sbb
inc
sbb
and
and
enter
and
mov
lea
dec
sub
add
mov
xor
(bad)
adc
jg
sbb
sbb
inc
inc
js
and
xchg
push
cdq
(bad)
jmp
enter
push
nop
xchg
arpl
(bad)
push
lods
sbb
call
and
fs
jb
test
fsubr
pop
pop
xor
jg
and
jo
cmp
js
and
xchg
ins
pop
jae
retf
jg
push
and
inc
mov
mov
inc
push
sbb
nop
hlt
xchg
xor
jno
ins
pop
jg
pusha
xor
pushf
and
data16
loopne
fcmovne
ret
and
arpl
test
pop
and
xchg
and
cmp
shl
and
xor
jne
fsub
mov
mov
fild
enter
in
sbb
in
cmp
ins
aam
fnstenv
paddsb
fadd
adc
shr
push
push
loopne
stos
test
mov
adc
aaa
mov
lock
aas
dec
in
or
in
pop
push
enter
and
xor
mov
icebp
xchg
push
jmp
rcl
inc
sub
ror
jbe
fnstsw
mov
add
scas
mov
inc
les
movs
(bad)
xchg
inc
inc
call
bound
sbb
xor
and
push
sbb
mov
xchg
movs
sbb
femms
sbb
not
pop
and
pop
nop
xchg
inc
inc
movs
pusha
aam
(bad)
jne
fs
mov
(bad)
jb
xchg
mov
inc
and
int
lds
les
mov
xchg
enter
cmp
movs
and
rol
scas
and
and
sbb
fs
push
jl
xchg
inc
inc
ins
or
jg
and
xchg
loopne
lods
outs
push
jg
mov
fdiv
and
sete
or
fcomp
in
adc
dec
arpl
push
push
add
push
push
push
jecxz
sahf
inc
xlat
push
arpl
jo
push
fistp
jae
or
aad
or
pop
ja
adc
test
gs
(bad)
es
or
data16
cmp
add
xchg
jne
cmp
jbe
mul
xor
dec
push
jns
sbb
mov
and
push
ja
idiv
popa
arpl
add
arpl
fs
ins
stos
and
cmp
jnp
add
add
push
xchg
iret
cdq
out
shl
outs
sbb
fiadd
pop
push
cmps
fimul
xchg
dec
and
xchg
inc
outs
(bad)
and
add
and
inc
xchg
jbe
adc
(bad)
ja
out
push
sbb
jg
sub
pop
pop
retf
into
jne
ins
loope
aad
pop
popa
out
daa
push
bound
xchg
xchg
jne
add
ss
scas
pop
add
sub
pop
xchg
mov
mov
or
outs
inc
xor
popa
fisub
add
dec
or
xor
retf
arpl
je
sbb
mov
ss
out
(bad)
aas
outs
xchg
push
sbb
scas
xchg
dec
inc
ja
inc
add
jb
cmp
inc
push
adc
popa
xchg
sbb
popa
retf
arpl
push
ins
sub
xor
or
call
call
outs
(bad)
adc
stos
cmp
jecxz
mov
xchg
arpl
adc
or
test
xor
xor
pop
sbb
xor
adc
add
mov
push
push
outs
xor
add
dec
dec
dec
add
and
or
addr16
adc
push
das
outs
inc
push
sub
aaa
xor
inc
adc
and
inc
xchg
add
shl
add
mov
pop
ds
fs
test
or
pusha
xor
(bad)
movs
add
outs
dec
and
push
inc
imul
test
outs
aas
xchg
pop
push
or
adc
popa
retf
das
push
pop
mov
setg
pop
shl
inc
add
xchg
or
imul
dec
add
add
xlat
imul
cmp
add
imul
out
call
ins
adc
push
add
xor
js
push
sahf
xor
jge
adc
add
inc
dec
imul
push
sti
ret
sbb
sub
scas
and
ins
add
test
push
imul
fwait
jne
xlat
cmp
cdq
bound
adc
add
push
or
rol
adc
inc
repnz
ss
mov
dec
add
push
aaa
adc
or
push
push
stos
shr
ret
mov
sub
sbb
mov
ins
sbb
add
sbb
jg
lds
xchg
sub
jmp
fcomp
pop
xchg
add
sub
sub
xor
fistp
adc
sub
jne
mov
shl
sbb
lahf
adc
pop
or
jle
ret
pop
or
ret
pop
push
fiadd
xchg
ja
push
or
bound
imul
cmp
inc
xor
pop
cwde
or
add
dec
stos
loope
xchg
outs
add
call
ja
push
push
add
push
jl
adc
sbb
shl
dec
jecxz
xchg
push
ror
xor
dec
cmp
test
or
sbb
mov
ins
pop
jmp
sbb
inc
(bad)
dec
xor
inc
mov
push
or
scas
mov
push
call
inc
jo
bound
fwait
jne
arpl
pusha
call
gs
and
jg
std
adc
add
mov
dec
outs
mov
lea
add
mov
pop
scas
dec
outs
mov
sahf
fstp
mov
aaa
cmova
pop
sti
dec
jns
cmp
xlat
add
out
jmp
jp
add
adc
add
add
and
mov
and
mov
xor
lods
mov
sub
add
inc
add
(bad)
sbb
inc
push
and
adc
xchg
inc
(bad)
lds
aam
cmp
lahf
imul
cmp
add
dec
cld
loopne
cs
push
ret
arpl
jo
je
sub
sbb
mov
push
aam
out
xchg
mov
push
mov
push
addr16
push
outs
pop
fisttp
addr16
fadd
pop
or
mov
jne
ins
inc
fwait
sub
push
ja
pop
inc
inc
pop
sub
xor
lds
xor
add
mov
test
adc
sbb
push
lahf
out
pop
in
xor
push
ins
sub
arpl
cmp
push
adc
mov
add
xchg
mov
adc
fcom
ror
lock
outs
data16
jae
or
dec
mov
nop
ja
and
push
ja
sbb
mov
inc
(bad)
repz
or
or
jnp
pop
ins
fidiv
je
pusha
push
sub
shr
mov
jg
out
jo
pop
ror
inc
aam
pop
push
add
div
lods
push
mov
shr
dec
jae
outs
add
adc
dec
pop
xchg
inc
add
loopne
mov
jl
adc
xchg
aam
inc
and
sub
pop
push
and
push
ret
aaa
ror
or
xchg
pop
add
xor
ins
adc
add
or
push
or
inc
add
faddp
les
inc
add
outs
inc
aas
sbb
mov
shl
add
out
push
in
bound
outs
aas
das
xor
push
mov
mov
or
in
dec
dec
mov
push
cmp
aaa
inc
emms
adc
pusha
mov
add
pusha
(bad)
fsubr
dec
xlat
push
xchg
fdivr
pop
(bad)
stos
les
pop
push
adc
adc
iret
mov
or
imul
jo
dec
inc
adc
in
(bad)
or
jae
add
stos
push
ja
mov
or
xchg
stos
mov
adc
loopne
push
xchg
pop
sub
mov
mov
adc
inc
aaa
aas
mov
lea
aas
or
or
mov
adc
pop
jmp
mov
dec
dec
lahf
xchg
fisubr
dec
pop
and
sub
push
pop
xor
add
mov
test
push
xlat
push
pop
das
and
or
mov
mov
pop
mov
dec
lds
fwait
or
dec
dec
outs
scas
or
lahf
dec
push
dec
xchg
ds
push
stos
pop
add
loop
mul
push
add
xchg
jmp
add
lea
pusha
inc
pop
pop
add
sub
sub
adc
push
xchg
inc
aad
mov
mov
adc
push
scas
inc
mov
scas
(bad)
movs
cmps
lahf
push
pop
push
inc
(bad)
je
outs
mov
lahf
add
lahf
sub
sbb
mov
push
inc
jb
mov
movs
or
cmp
dec
mov
adc
mov
adc
ror
push
dec
daa
bound
sub
ins
retf
and
pop
jo
add
push
sub
push
test
cmc
mov
sub
ins
adc
bound
adc
pop
and
push
sbb
adc
sub
sub
push
and
jb
adc
ret
pop
imul
sbb
imul
dec
pop
and
lds
push
stos
outs
add
outs
mov
inc
mov
add
enter
ret
pop
inc
es
add
xchg
pop
mov
adc
cmp
and
push
ror
inc
test
and
xor
mov
and
adc
mov
ins
xor
fcmovbe
(bad)
sbb
sbb
stos
sbb
xlat
sbb
xchg
jg
and
outs
(bad)
adc
pop
sub
mov
mov
sbb
sbb
or
das
ja
push
push
jo
sub
test
sti
adc
inc
(bad)
adc
pop
or
or
popa
add
ja
or
and
xor
cmp
xor
pop
ins
test
push
inc
xor
mov
sbb
scas
push
(bad)
fnstenv
scas
or
jle
lods
pop
retf
jg
cmp
xor
(bad)
lea
das
aas
xor
mov
aaa
fdivr
push
gs
xor
add
dec
ja
dec
push
xchg
dec
mov
xchg
mov
xlat
mov
sub
ins
inc
or
ror
or
push
xlat
aam
ins
pusha
aaa
cmovg
or
mov
xlat
ret
inc
dec
add
sbb
mov
adc
adc
adc
dec
xchg
pop
dec
pop
lahf
jge
pop
cmp
or
xor
fwait
mov
push
(bad)
adc
xor
add
sbb
cmp
cmps
outs
add
add
add
or
pop
xor
inc
xchg
adc
and
xchg
pusha
add
jg
push
add
add
inc
or
adc
adc
cs
ins
sub
inc
daa
or
movs
push
mov
and
mov
pop
dec
xor
inc
inc
(bad)
cmovg
sub
outs
push
outs
das
ins
sbb
popa
mov
cmp
push
push
sbb
push
cmp
adc
xor
sub
adc
das
push
or
adc
add
test
sub
push
js
and
xchg
push
cmp
xor
cmp
xor
add
sub
cmp
xor
(bad)
or
xchg
push
(bad)
scas
push
inc
icebp
mov
add
aaa
les
push
movs
push
aaa
pop
inc
push
aaa
and
add
sub
xchg
push
mov
and
scas
push
pop
inc
push
or
aaa
cmp
mov
xlat
pop
pusha
pop
mov
dec
mov
or
dec
pop
rcl
inc
push
inc
push
mov
push
pop
mov
cmp
cmps
sbb
jno
xlat
sbb
pop
jno
xlat
inc
mov
xlat
adc
mov
adc
mov
and
adc
rol
inc
add
nop
pop
mov
and
inc
out
pop
jg
mov
adc
pop
inc
test
inc
das
and
inc
inc
dec
push
inc
adc
mov
add
ss
or
push
call
push
push
sbb
add
orps
adc
add
pusha
mov
(bad)
ins
sub
add
aas
xlat
add
mov
outs
ffreep
jb
xlat
daa
dec
stos
mov
or
cmp
dec
lahf
mov
outs
pop
cmps
and
add
push
cmovb
dec
popf
(bad)
rcl
push
xchg
and
addr16
rol
add
pop
inc
pusha
mov
es
rol
adc
in
mov
imul
addr16
add
mov
shr
sbb
cmps
and
adc
pop
sbb
or
pop
inc
enter
(bad)
jo
push
add
inc
in
sub
sbb
movsx
loop
add
xor
aas
xor
jo
dec
sub
mov
pop
sub
les
icebp
push
add
cmp
add
mov
mov
pop
or
pop
inc
sub
dec
ins
dec
fisttp
dec
add
xchg
push
xlat
sbb
addr16
sub
xor
adc
or
outs
or
pop
inc
rcl
ins
jne
aas
inc
bound
pop
or
pop
aaa
loope
imul
iret
ins
jmp
add
sub
ror
push
adc
xchg
outs
dec
adc
xor
bound
imul
xor
xchg
les
sbb
pop
cmps
push
xlat
test
repz
or
add
(bad)
xor
sbb
sbb
jg
sbb
(bad)
aam
cmpps
inc
sbb
addr16
cdq
cmp
adc
sub
jae
sbb
in
xchg
sbb
movs
rol
(bad)
push
sub
xor
or
mov
in
pusha
mov
pop
adc
pop
ins
and
adc
adc
mov
or
mov
and
ss
outs
mov
outs
xchg
shr
dec
pop
push
popa
ror
inc
jecxz
in
test
das
or
or
pusha
or
dec
add
bound
test
mov
pop
call
inc
xor
pop
xor
and
out
fisub
fidivr
push
sbb
mov
imul
nop
addr16
cmps
fidiv
jb
das
outs
addr16
aaa
xor
ffree
mov
add
adc
lods
lahf
outs
jg
mov
adc
(bad)
sub
gs
fisubr
ins
adc
or
pop
jae
and
xchg
in
or
jo
or
xchg
xor
mov
sbb
xchg
push
test
sbb
or
xor
dec
pop
adc
fimul
idiv
add
xor
add
pop
jnp
sub
jg
mov
lea
aaa
(bad)
ja
sbb
or
xchg
outs
xor
sbb
pop
add
mov
inc
outs
pop
or
mov
inc
dec
adc
adc
add
pop
mov
add
dec
xchg
inc
sub
scas
retf
inc
fsubr
cmova
push
or
and
jmp
ins
shl
test
push
popw
xlat
(bad)
test
jae
and
xor
pop
jne
outs
push
ja
or
adc
add
addr16
or
fadd
push
addr16
cmp
(bad)
mov
and
lahf
adc
test
popa
(bad)
rol
je
jmp
outs
push
add
mov
pop
mov
fist
sbb
push
push
inc
gs
sbb
push
sbb
xor
jg
shr
inc
jo
repz
pusha
pop
xchg
out
ja
push
or
dec
or
aaa
mov
jmp
mov
pop
aas
or
movs
ja
cmps
or
or
adc
rol
pop
or
shl
push
add
adc
mov
xor
sbb
add
mov
mov
jecxz
(bad)
cmp
add
sbb
or
mov
adc
fmul
jo
jg
adc
nop
jecxz
lods
ficom
mov
scas
inc
addr16
push
push
fistp
shr
push
inc
jge
out
das
mov
adc
sbb
fdivr
jg
lods
inc
rol
(bad)
ror
cmp
or
test
xor
movq
and
jo
(bad)
jb
fadd
pop
add
out
(bad)
cmps
inc
sbb
push
outs
bound
movs
adc
sub
mov
aaa
push
mov
xchg
outs
adc
inc
test
gs
test
mov
add
lods
ret
push
ins
lds
daa
ja
add
adc
(bad)
outs
jbe
pop
inc
addr16
addr16
add
or
ret
add
mov
add
push
(bad)
pusha
test
ja
scas
cs
sbb
pop
or
daa
sbb
sub
sbb
add
sar
bound
sub
movs
aas
and
pop
lds
lods
adc
pop
sub
iret
pop
and
inc
xchg
mov
xchg
adc
mov
or
xchg
mov
push
push
sub
add
inc
mov
jbe
fisttp
dec
inc
or
inc
(bad)
or
adc
inc
scas
fist
and
popa
ror
loopne
inc
jne
dec
jle
sbb
fnstsw
add
xor
inc
mov
add
xor
mov
xor
inc
sub
test
jg
cmc
shl
push
sub
jmp
push
inc
daa
pop
sbb
or
ficom
push
imul
mov
inc
adc
sub
cwde
lods
inc
sbb
outs
mov
fimul
and
stos
add
jg
push
add
ins
xlat
outs
add
mov
mov
or
inc
xchg
jo
add
push
jo
sub
iret
or
sbb
addr16
add
sbb
or
push
add
cmp
or
aas
and
add
add
das
or
aas
ins
packuswb
add
(bad)
imul
aaa
fucomip
and
adc
fbstp
dec
xchg
adc
ja
jne
mov
mov
cmp
pop
mov
add
sar
add
bound
mov
xchg
sub
scas
pop
inc
dec
aaa
sbb
add
cmp
sti
(bad)
xor
push
(bad)
aaa
jbe
jne
gs
cmp
sub
and
sbb
or
popa
dec
or
mov
nop
inc
inc
inc
inc
xchg
cwde
pushf
mov
movs
test
mov
xchg
fld
sbb
xchg
xchg
xchg
(bad)
enter
xchg
xchg
xchg
aam
fsub
xchg
xchg
xchg
xchg
in
in
hlt
mov
xchg
xchg
lock
add
inc
and
or
inc
inc
inc
sbb
and
inc
inc
inc
sub
xor
inc
inc
inc
cmp
inc
inc
inc
inc
inc
dec
dec
push
push
inc
inc
inc
inc
pop
pop
pusha
fs
inc
inc
inc
push
inc
inc
inc
js
adc
enter
or
nop
enter
xchg
cwde
pushf
mov
push
cdq
loope
mov
jbe
fs
clc
cld
add
inc
mov
fs
bound
jl
shl
or
fs
or
fs
sbb
fs
cmp
fs
inc
dec
dec
fs
push
pop
add
fs
push
ins
jo
pop
mov
jl
xchg
mov
or
ins
fs
pushf
mov
enter
mov
cwde
pushf
mov
enter
mov
rol
enter
enter
fmul
enter
loopne
lock
loop
fwait
fwait
or
fs
adc
adc
xor
lods
sti
sub
or
cdq
in
call
or
or
aaa
mov
mov
jbe
mov
add
ins
ss
pusha
xchg
or
sub
xor
enter
cmp
inc
ror
enter
push
int3
adc
or
mov
adc
mov
sub
xor
mov
dec
mov
pop
out
mov
pop
mov
mov
int3
or
mov
fdiv
fsubr
in
call
in
lock
int3
jo
xchg
fisttp
sahf
mov
sahf
mov
sahf
xor
xor
xor
xor
cmp
inc
xor
xor
dec
dec
push
push
xor
xor
pop
pop
pusha
xor
xor
push
xor
xor
add
nop
xchg
xor
xor
cwde
pushf
mov
xor
pop
xor
mov
and
and
int3
rcl
and
and
fcomp
loopne
and
and
call
and
and
cld
add
fs
or
xor
fwait
stc
fs
xor
xor
xor
xor
test
xor
xchg
cwde
pushf
mov
movs
out
js
call
call
rol
int3
mov
fmul
call
mov
hlt
clc
cld
xchg
add
mov
dec
add
or
or
adc
sbb
xlat
or
sub
xor
fs
inc
fs
dec
push
push
fs
pop
pusha
fs
fs
add
nop
xchg
fs
pushf
mov
fs
mov
fs
fs
fs
loopne
fs
popa
fs
cld
add
add
mov
adc
mov
mov
xor
mov
mov
push
mov
mov
je
mov
mov
xchg
int
pop
mov
pushf
mov
sub
lods
or
inc
mov
mov
data16
sbb
or
sbb
int3
rcl
dec
mov
outs
fcomp
fmul
fwait
fwait
xor
or
sub
xor
xor
cmp
inc
dec
xor
xor
dec
push
push
pop
inc
sbb
pop
sbb
inc
inc
inc
ins
jo
js
inc
inc
inc
jl
test
mov
dec
enter
xchg
push
(bad)
addr16
fldcw
and
pop
movs
or
mov
or
mov
sbb
sbb
cdq
cdq
cdq
cdq
(bad)
fldcw
sub
xor
dec
in
cmp
inc
inc
fs
js
movs
(bad)
ins
and
data16
lea
fisubr
bound
retf
dec
adc
shl
xchg
push
fsin
cmp
jne
sub
jo
repz
mov
xchg
movs
aas
int
and
into
cmp
mov
test
fstp
push
and
pop
ins
dec
daa
xor
daa
xchg
and
add
icebp
sti
je
aam
mov
fmul
and
shl
lock
add
cmp
xor
stc
aam
jmp
add
add
(bad)
adc
leave
frstor
jg
mov
shr
scas
lds
cmp
xchg
sti
or
or
fs
in
xchg
or
out
or
add
and
mov
mov
add
add
push
loope
add
cmp
in
mov
jb
out
cmps
sub
jb
inc
ror
push
push
ss
mov
mov
inc
in
pushf
pop
dec
sbb
or
adc
or
(bad)
cmp
fcom
cmp
jae
add
xor
mov
gs
mov
pusha
mov
hlt
mov
mov
lahf
ss
nop
addr16
adc
std
aas
cmp
sti
adc
cmp
cmovs
pop
inc
push
inc
sub
jne
cmp
das
push
fdiv
out
dec
movs
xor
aam
adc
inc
xor
imul
xlat
pop
inc
mov
and
je
and
jno
and
sbb
inc
mov
add
into
and
out
fsub
in
out
inc
xor
lahf
lock
adc
push
mov
bound
mov
cmp
out
lock
mov
and
mov
mov
cwde
mov
ja
xchg
rol
ret
cmovo
mov
outs
cmp
mul
mov
adc
pop
and
add
add
xchg
cdq
sbb
pop
or
cld
pop
call
enter
call
ficomp
push
push
inc
dec
popa
bound
add
daa
in
fist
xor
push
mov
mov
sbb
push
and
inc
adc
inc
or
mov
(bad)
mov
inc
xchg
cmps
js
sbb
pop
sbb
jl
rol
pop
jmp
xor
dec
ss
pop
mov
xor
adc
(bad)
xor
adc
jbe
or
pop
pop
xor
mov
and
je
loopne
cmp
jae
sar
(bad)
pop
or
loope
(bad)
pop
scas
aas
fdiv
push
cmps
ins
push
outs
popa
add
fwait
inc
gs
add
mov
adc
jecxz
adc
sub
cmp
mov
out
fstp
cmp
cmp
jb
mov
push
adc
dec
outs
sub
xchg
shl
in
cmp
or
add
nop
push
adc
(bad)
lock
mov
inc
je
out
or
ss
push
mov
lds
mov
jo
xchg
jno
out
xchg
push
aam
addr16
mov
mov
inc
xor
sbb
mov
add
mov
xor
add
outs
push
int3
push
mul
jge
dec
xor
add
sbb
out
cmp
pop
mov
pop
movs
fwait
inc
sub
add
push
push
dec
or
add
xchg
outs
pop
xchg
cmovb
jb
jns
cs
mov
inc
xor
xchg
sub
data16
jb
jmp
inc
repz
mov
(bad)
mov
sbb
push
out
popw
cmp
xchg
je
test
mov
loop
adc
dec
add
inc
inc
sbb
inc
sbb
cmp
ss
push
ret
adc
gs
inc
out
ins
pusha
dec
sub
sbb
push
sub
daa
ret
mov
nop
movs
aad
fstp
mov
loopne
inc
or
add
push
xor
arpl
or
pop
fistp
add
xchg
rcr
add
pusha
lock
sub
cmp
outs
mov
sbb
and
aad
lods
xchg
adc
adc
js
add
push
inc
add
bound
jae
mov
shl
xor
repz
adc
cmp
ins
inc
icebp
das
stos
aas
mov
cmp
or
leave
cmp
arpl
(bad)
sub
inc
xchg
dec
imul
inc
inc
mov
push
dec
aas
cmp
add
inc
or
imul
or
fild
xor
lea
and
inc
jecxz
push
jg
adc
sbb
mov
lds
sub
ja
pop
add
dec
bnd
and
add
fistp
push
(bad)
repnz
or
sub
pop
mov
or
pop
jo
mov
addr16
pop
xor
ror
mov
das
stos
add
fs
push
data16
add
xchg
je
pop
int3
xchg
add
cmp
gs
adc
dec
add
scas
test
lock
add
(bad)
daa
cmp
fcom
push
mov
sbb
cld
inc
mov
jnp
inc
and
push
aaa
adc
mov
sub
inc
imul
js
inc
pop
mov
rcl
push
mov
xchg
nop
cmc
push
or
add
addr16
out
test
inc
pop
ja
and
and
xchg
adc
shl
or
and
mov
and
add
sbb
adc
in
scas
or
inc
test
dec
sbb
rcr
inc
or
sub
call
ret
or
nop
sub
push
call
add
cmp
mov
shl
pusha
adc
dec
or
xor
lods
dec
test
sti
push
add
movs
pop
js
or
mov
fs
jmp
cmc
inc
gs
gs
push
cmc
test
fist
int3
stc
push
loop
pusha
xchg
jl
clc
das
sahf
push
inc
add
push
jge
xor
addr16
push
sub
enter
adc
add
sub
pop
push
jmp
aas
or
inc
xor
stos
add
add
sub
rol
data16
js
lock
xor
cmp
pop
mov
xor
sub
and
push
enter
xchg
dec
jns
xor
hlt
and
pop
push
push
popa
fstp
sub
lods
clc
ret
ror
fincstp
ds
push
inc
push
push
stc
jo
jb
add
outs
and
push
enter
mov
mov
cmp
mov
stos
dec
inc
adc
xchg
or
outs
popa
fs
ss
or
push
xor
xor
or
xor
sbb
dec
pop
or
inc
in
dec
gs
hlt
xchg
shl
loope
push
add
stc
add
or
mov
mov
add
fldcw
addr16
lahf
lds
add
xchg
xchg
xchg
je
mov
xlat
pop
cld
movups
and
xor
dec
loopne
sub
ret
inc
icebp
arpl
mov
dec
mov
inc
lahf
mov
xor
test
xor
add
mov
push
ret
inc
dec
mov
adc
add
or
rol
test
(bad)
call
lea
(bad)
jmp
mov
pop
add
pop
jmp
cmc
das
inc
std
in
sub
nop
arpl
or
add
sbb
add
jmp
and
lock
add
push
shl
jecxz
mov
xlat
sub
cwde
cmps
pmulhuw
data16
add
and
rcl
xchg
lods
std
jmp
in
sbb
jae
push
or
in
push
dec
clc
addr16
xor
add
stos
pop
add
pusha
jmp
add
lea
inc
daa
in
add
sbb
clc
cmp
push
addr16
and
pop
mov
xor
pop
add
pop
leave
mov
ret
adc
mov
push
mov
or
pusha
and
dec
cld
shr
add
mov
dec
and
cmp
add
fwait
mov
xor
jbe
or
jb
lods
add
bound
mov
int3
push
jb
or
push
ret
jo
jecxz
rcr
cmp
push
push
cmp
popa
shr
cmp
cld
and
stos
add
jnp
test
gs
icebp
or
(bad)
dec
xlat
cmc
add
pop
inc
mov
inc
cmp
or
out
mov
xchg
sbb
cmp
icebp
rol
add
or
add
mul
add
movs
push
fs
and
inc
jo
push
push
inc
xor
fdivr
repnz
inc
addr16
push
shl
dec
sbb
out
inc
inc
or
inc
addr16
push
in
push
jl
rol
mov
inc
addr16
(bad)
shl
pop
out
push
loopne
xor
add
or
iret
pop
cwde
int3
adc
test
push
fdivr
adc
ds
dec
and
jle
sbb
sub
data16
(bad)
sbb
add
sbb
out
or
or
xor
and
js
cmps
mov
push
pushw
push
jns
cmp
cmp
mov
inc
icebp
mov
mov
push
push
sar
add
in
jmp
add
and
pop
lahf
fidiv
imul
ret
jecxz
push
dec
in
fld
mov
add
pop
add
push
jecxz
and
xchg
add
push
ja
xchg
sbb
fild
jno
test
std
mov
sub
or
add
and
aad
jl
jae
dec
lea
add
inc
scas
push
or
rol
nop
mov
out
pop
adc
add
in
(bad)
out
dec
stos
jmp
dec
adc
vmovss
adc
fwait
(bad)
push
dec
ja
push
lds
add
mov
push
push
call
inc
pop
mov
and
dec
sbb
dec
add
add
jnp
add
push
xor
or
xor
xchg
ret
xor
test
or
or
sar
pop
inc
pmaddwd
push
sbb
or
movs
mov
pop
xchg
push
aaa
xlat
(bad)
pushf
in
push
push
and
xchg
cmp
add
push
xchg
scas
fadd
push
enter
fild
cmp
jae
add
sahf
je
xchg
push
mov
fsubrp
mov
push
inc
add
xchg
inc
ds
test
movs
push
shr
inc
mov
mov
or
add
add
sbb
movs
imul
mov
pop
shl
and
add
sub
xchg
dec
push
inc
pop
mov
bndstx
and
adc
test
and
icebp
in
adc
or
push
add
dec
add
mov
or
dec
push
retf
daa
mov
lock
mov
xor
lds
dec
or
cs
nop
nop
inc
or
inc
push
or
pop
scas
or
sbb
or
or
or
push
jmp
test
jmp
std
or
mov
add
addr16
jp
add
inc
shl
enter
xor
je
addr16
and
push
fcomp
add
addr16
and
nop
mov
cmp
stos
arpl
sti
and
xor
addr16
(bad)
jmp
or
cmp
jns
fwait
loopne
inc
stos
pop
sub
sub
add
imul
pop
or
div
(bad)
movs
or
cmp
pop
dec
dec
jmp
jecxz
or
movs
add
xor
outs
pop
xchg
mov
fild
xor
or
in
mov
or
pop
and
jae
push
push
(bad)
fs
pop
and
imul
mov
loope
rol
outs
xchg
or
mov
or
daa
push
das
pop
or
into
loopne
in
add
or
lods
push
dec
mov
xor
pop
mov
lods
popa
xchg
or
mov
or
test
or
fisttp
das
cs
cmp
or
adc
dec
cdq
push
cld
lds
shl
xor
adc
shl
xchg
mov
or
jnp
and
and
and
pushf
and
add
mov
pop
add
xor
jne
or
add
cs
xchg
pop
cmp
push
dec
inc
xor
mov
inc
pop
addr16
dec
xor
xor
sbb
(bad)
inc
xchg
lods
cmp
push
and
les
shr
mov
and
cmp
add
mov
in
cmp
bound
and
mov
or
mov
clc
pop
das
loop
addr16
mov
push
imul
mov
push
cdq
std
js
mov
mov
rol
lds
fimul
or
loopne
sbb
gs
pop
inc
push
fcomp
mov
adc
popa
fadd
add
dec
cmp
fstp
pop
cs
das
mov
pop
adc
aas
inc
cmc
add
or
fmul
or
inc
es
or
movs
add
cwde
movs
add
ins
sub
add
inc
gs
mov
jns
push
sbb
daa
sbb
inc
dec
mov
xlat
rol
leave
sbb
inc
cdq
rcl
sbb
add
adc
add
stos
dec
sub
or
sub
bound
pushf
or
fmul
retf
xchg
add
sbb
popa
test
push
ins
add
push
mov
jb
xor
ror
xor
xor
jo
mov
imul
shl
and
push
cs
push
push
jae
inc
or
fcom
jmp
or
nop
(bad)
(bad)
dec
jg
imul
dec
xchg
movs
nop
outs
inc
cmp
loopne
add
push
push
dec
adc
pusha
jp
sub
adc
inc
and
rol
adc
outs
movs
sub
xor
add
inc
and
test
adc
ret
das
aam
iret
pop
ins
ins
cmc
lods
popa
cmps
add
das
or
push
xchg
adc
adc
nop
jmp
xor
pop
inc
or
add
ins
jmp
(bad)
mov
mov
xchg
pop
ins
adc
pusha
and
inc
adc
push
dec
push
adc
xor
sbb
lea
xor
xor
mov
and
mov
enter
or
sub
inc
clc
ins
jnp
arpl
sub
ins
jnp
icebp
xor
xchg
call
pop
js
jle
push
push
inc
(bad)
lods
sbb
and
jne
and
cmp
bound
out
pop
mov
xor
inc
ins
popa
mov
loopne
sbb
pop
out
fwait
or
dec
pop
xor
add
adc
add
pushf
dec
push
jo
(bad)
xlat
pop
sub
pop
jb
sbb
pop
clc
das
(bad)
mov
or
addr16
cmp
das
sub
xor
test
sbb
pop
mov
mov
ja
xor
sbb
mov
or
adc
inc
inc
test
xchg
jo
jae
and
jb
iret
pop
fs
sub
(bad)
movs
sbb
xchg
sbb
jo
fwait
nop
inc
add
cmp
ins
pop
adc
jbe
cmovp
inc
inc
jno
pop
repnz
mov
mov
xor
or
adc
pop
dec
xchg
mov
out
cmp
test
lock
int3
psrld
add
push
inc
stos
or
loopne
jne
pop
cmp
and
sbb
pop
mov
test
jno
xchg
(bad)
or
mov
pusha
inc
sbb
sbb
(bad)
js
push
cvtps2pd
add
aas
sbb
or
loop
cmp
dec
mov
inc
out
cmp
xor
or
xchg
ret
fstp
sbb
push
and
das
dec
hlt
or
cmps
inc
inc
push
gs
push
clc
dec
dec
adc
mov
mov
pop
int3
aad
or
shl
add
retf
inc
fisubr
lock
jg
adc
pop
jg
into
in
lods
pop
mov
xchg
jg
mov
add
inc
xchg
pop
lods
or
ja
pop
xor
daa
sbb
cmp
outs
add
cmovp
and
pusha
fld
jno
pop
xor
sbb
pop
add
xchg
xchg
dec
push
in
and
push
es
push
inc
loopne
mov
xor
mov
cmp
nop
sub
mov
mov
adc
and
add
mov
lahf
rol
mov
lods
popa
loopne
inc
xchg
sbb
in
dec
jo
cmp
nop
add
cmp
xor
push
js
or
or
push
je
mov
mov
ret
pop
push
fs
adc
inc
mov
and
ins
inc
scas
inc
loopne
and
cmp
mov
and
add
xor
xchg
pop
sub
push
add
movmskps
xlat
dec
push
or
inc
lock
hlt
cli
sbb
pusha
add
sbb
xchg
push
lock
inc
ret
inc
jmp
dec
dec
sbb
add
fiadd
jl
cmp
or
adc
jne
lds
xchg
test
nop
(bad)
cmp
sub
xchg
or
mov
es
xchg
adc
push
mov
test
mov
shr
or
xchg
cwde
ret
rol
nop
adc
ins
mov
adc
xlat
add
or
sbb
rol
loopne
repnz
add
sbb
sbb
mov
cmp
loopne
(bad)
cmp
sbb
leave
mov
inc
inc
call
inc
sub
loope
push
lahf
cmp
jbe
test
jo
mov
add
lds
add
je
outs
mov
sub
je
test
jg
sbb
mov
push
pop
lock
leave
test
daa
scas
push
lea
xor
aas
or
mov
in
nop
ret
fadd
nop
fsub
sub
mov
fwait
push
dec
scas
adc
sahf
jl
and
pop
mov
test
push
jns
mov
sbb
push
mov
dec
cld
mov
add
in
hlt
mov
and
inc
inc
test
sub
rol
inc
imul
cld
push
clc
push
popa
iret
jo
adc
mov
pop
mov
lahf
mov
mov
repnz
sbb
aam
and
push
mov
sbb
test
mov
inc
ins
int3
mov
pop
dec
lahf
sbb
sbb
test
or
and
mov
xchg
sahf
pop
adc
int3
pop
add
ret
xchg
test
mov
jb
int3
mov
repnz
and
mov
adc
or
sbb
sbb
xor
fiadd
add
lods
adc
push
cmp
int
add
pop
mov
adc
jo
shr
pop
inc
add
(bad)
jle
mov
xchg
cmp
jge
xor
inc
ret
out
or
out
dec
jne
or
mov
(bad)
aas
or
and
sbb
call
push
xor
out
es
xchg
fimul
sub
(bad)
sbb
loope
sub
pop
mov
push
pusha
mov
push
hlt
call
or
cmp
sub
repz
mov
(bad)
loop
jmp
fbld
or
mov
adc
or
xchg
test
shl
outs
and
add
cmps
leave
add
addr16
add
cmps
add
test
inc
cmp
retf
xchg
sbb
mov
xchg
add
inc
pop
clc
ret
inc
sub
mov
sbb
jbe
lods
(bad)
pop
and
shl
push
add
ret
and
jmp
mov
and
jnp
push
hlt
pop
pop
pop
push
out
(bad)
and
mov
stos
fcmovnbe
cmp
push
adc
leave
mov
mov
and
adc
rol
in
in
jns
sub
pop
push
fnstcw
push
xor
aas
pop
add
test
xchg
in
inc
not
xor
or
sbb
or
clc
add
test
fisubr
pop
hlt
in
sbb
out
cmovo
sub
xchg
cmps
mov
outs
int
xor
aam
adc
and
shl
sub
dec
sub
inc
add
sar
dec
add
sbb
stos
sahf
cmp
je
add
jno
test
xor
mov
cmp
fwait
ja
mov
neg
mov
xchg
or
dec
mov
loopne
push
mov
sub
aaa
mov
cmp
push
mov
clc
dec
and
mov
jmp
rcpps
rcr
les
push
mov
cwde
or
aaa
dec
pop
jmp
data16
imul
into
ds
sub
shl
adc
or
add
ror
inc
xor
sbb
cmp
je
or
and
(bad)
sbb
jb
(bad)
popa
and
aas
sub
add
ins
jmp
sahf
mov
sbb
outs
add
sbb
repnz
das
in
fs
inc
unpcklps
das
xchg
sbb
jmp
scas
jns
xor
push
push
xor
pop
mov
or
push
inc
icebp
jns
adc
inc
sbb
enter
add
push
scas
pop
xlat
jno
xor
cli
mov
lods
xor
mov
push
iret
adc
pop
xor
pop
outs
xchg
or
or
mov
push
mov
lock
arpl
sbb
pop
rcr
sbb
mov
nop
sbb
xor
and
xor
mov
dec
xor
iret
aam
cmp
and
adc
(bad)
arpl
sbb
imul
dec
clc
stos
aaa
in
add
add
xor
push
sbb
nop
mov
test
mul
cmp
aaa
mov
pushf
add
in
loopne
pop
add
push
sbb
cmp
call
nop
sub
add
sbb
cld
and
ret
mov
push
mov
xchg
push
ins
pop
add
add
push
lahf
mul
and
test
sbb
rcr
adc
add
add
imul
mov
and
sub
sbb
lock
push
adc
xor
xor
scas
sub
dec
inc
rol
cmps
popa
or
mov
loope
arpl
pop
xchg
xlat
arpl
in
sbb
retf
in
xor
push
enter
mov
jns
pop
(bad)
and
mov
sbb
inc
rcl
push
sahf
mov
into
aam
je
add
jmp
mov
dec
ins
add
sub
dec
jno
mov
shr
adc
xor
mov
jo
add
jb
mov
aaa
popa
jbe
lods
mov
arpl
push
push
mov
sbb
push
pop
std
xor
mov
loope
xor
or
lods
test
adc
mov
ss
dec
lods
sahf
dec
nop
cmp
sub
dec
jne
daa
lods
les
fs
pop
enter
lods
je
nop
pushf
nop
mov
rcl
mov
inc
dec
daa
icebp
shl
xor
mov
aaa
push
add
or
imul
ins
xchg
pusha
mov
add
test
dec
jne
stos
pop
inc
test
sub
pop
bound
xlat
xchg
add
nop
adc
push
add
pusha
or
loopne
js
xchg
xchg
jg
outs
inc
pop
xchg
jae
out
bound
sbb
outs
cdq
and
(bad)
(bad)
aaa
aad
push
jb
sub
(bad)
cmp
pop
dec
cmps
aad
dec
fnstsw
mov
jne
mov
mov
js
cs
test
sub
push
ret
in
add
mov
jmp
mov
cmp
ds
cmp
add
or
popa
push
test
jge
inc
outs
adc
hlt
leave
or
adc
xchg
rcr
or
push
add
mov
mov
add
lock
and
popa
and
push
ror
fmul
sbb
xchg
shr
cmp
out
inc
dec
jo
rol
(bad)
mov
sbb
add
xchg
cld
in
cmp
mov
mov
sub
inc
or
or
dec
mov
fs
test
xchg
xor
addr16
sbb
out
sar
enter
inc
inc
inc
sub
adc
jp
adc
sbb
sbb
jne
inc
mov
inc
dec
in
ficomp
push
add
loope
and
mov
sub
fld
jle
or
rcl
sbb
daa
fadd
bound
jmp
or
test
pop
cmp
jmp
mov
sub
cdq
mov
enter
add
add
or
sub
inc
xchg
and
mov
add
jl
inc
enter
or
push
sbb
xlat
mov
movs
rol
lods
les
mov
push
add
adc
xor
(bad)
dec
mov
loop
cmp
ja
jmp
pushf
out
sahf
mov
ficomp
and
lock
push
adc
fs
dec
clc
cld
add
add
cmp
out
or
and
mov
inc
adc
outs
out
mov
pusha
cmp
jne
mov
pop
pop
xchg
pushf
and
and
iret
jmp
movs
push
sti
xchg
test
jmp
or
neg
je
and
addr16
out
in
lods
or
mov
push
fsub
inc
add
sbb
inc
pusha
repnz
addps
cwde
mov
mov
add
xor
scas
adc
or
adc
adc
outs
mov
(bad)
push
adc
daa
sub
adc
xor
vshufi32x4
push
or
sbb
loopne
add
inc
sbb
add
and
jg
inc
pop
add
and
xlat
aad
iret
or
shr
cmp
mov
mov
aam
and
xchg
nop
nop
scas
or
and
cmp
jo
fdivr
div
lods
fmul
cmp
xchg
mov
mov
xor
jb
sbb
adc
rcr
cmp
iret
inc
sbb
cmp
pusha
aaa
pop
sub
sub
and
cmp
push
ficomp
sub
adc
add
jmp
mov
mov
mov
imul
push
push
das
sbb
adc
and
daa
cmp
pop
mov
sbb
push
fbld
jbe
pop
dec
sub
pop
xchg
inc
lea
mov
inc
or
add
xchg
cwde
addr16
jge
or
std
and
cld
stos
pop
loopne
and
and
mov
mov
mov
cmp
pop
add
mov
jl
mov
push
inc
lods
sub
lods
and
lock
dec
rol
scas
dec
into
xor
mov
pop
fsubr
test
push
out
mov
push
mov
push
or
cmps
or
or
or
mov
or
pop
test
mov
lahf
aaa
ret
jnp
adc
fadd
mov
in
fbstp
pop
or
mov
int3
dec
enter
lock
inc
fmul
add
adc
sbb
sar
mov
pop
sub
mov
mov
inc
sbb
pop
inc
xor
ret
xor
leave
sbb
inc
push
add
retf
add
or
into
pushf
lea
lods
and
adc
pop
pop
ret
fistp
and
or
nop
adc
mov
and
adc
adc
pop
pop
or
and
pusha
popa
push
mov
add
pop
adc
sbb
and
add
add
idiv
inc
jno
add
cmp
push
xchg
sbb
jns
fidivr
sbb
or
or
sub
and
xor
adc
sub
xchg
adc
lea
sti
ret
adc
adc
loop
inc
loope
adc
(bad)
nop
test
loope
jae
sti
mov
inc
xchg
add
icebp
inc
pop
lock
add
scas
push
jl
push
and
ret
daa
aaa
cmp
push
fist
daa
mov
push
dec
inc
inc
inc
shl
jle
cmp
mov
(bad)
sbb
ja
cmp
or
sbb
mov
int
dec
pop
pop
test
mov
stos
add
and
inc
test
mov
pop
add
inc
sbb
pushf
add
test
adc
xor
ins
inc
sub
push
ret
(bad)
scas
push
dec
lea
push
inc
sub
aas
adc
cs
mov
das
lea
jbe
mov
add
push
les
add
push
lock
mov
ins
pop
daa
dec
or
mov
push
movs
dec
mov
inc
jnp
mov
sbb
sbb
lods
mov
cmc
mov
pop
mov
cmp
mov
sbb
sbb
cmp
xchg
add
add
sbb
cmp
xchg
and
sbb
sbb
enter
sbb
sbb
sbb
in
dec
push
sbb
sbb
sbb
leave
xchg
daa
pop
dec
add
add
add
add
add
(bad)
fcom
pop
sbb
sbb
rol
xor
dec
jg
test
mov
adc
xchg
sub
sbb
xor
xor
mov
outs
cmp
cmp
cmp
outs
inc
add
in
inc
inc
inc
outs
dec
stos
lock
add
clc
xor
xlat
and
adc
jg
pop
sbb
test
pop
dec
add
dec
push
test
add
push
push
sti
mov
mov
fnstcw
mov
xlat
clc
inc
in
xor
inc
mov
sbb
add
jge
or
sub
ret
pop
or
cmp
je
mov
dec
push
imul
mov
inc
test
out
nop
sub
and
inc
add
popf
mov
and
mov
xchg
pop
xor
aaa
xchg
xlat
popa
sbb
xor
xlat
xchg
mov
mov
and
popf
adc
retf
adc
mov
add
not
pop
xor
dec
and
ffreep
sbb
cmps
rcr
push
inc
or
push
push
mov
ja
test
push
pop
or
add
sbb
dec
movs
or
add
dec
mov
pop
sub
test
jne
and
std
mov
sbb
inc
sbb
inc
xor
adc
inc
push
sbb
rol
cmp
call
std
mov
sub
or
or
sbb
mov
je
mov
inc
imul
dec
add
loopne
sbb
xchg
dec
in
mov
sub
add
jmp
cli
push
mov
aaa
mov
fdivr
and
ret
xor
loopne
in
test
or
leave
enter
and
add
ins
add
xor
pop
xor
push
mov
adc
mov
ins
xor
dec
nop
xchg
mov
fdivr
or
or
sbb
mov
test
out
mov
pop
aaa
add
mov
int3
dec
xor
aaa
and
jne
adc
je
mov
sbb
and
jmp
mov
stc
enter
mov
push
(bad)
inc
push
cmp
pop
in
cmp
sbb
push
adc
mov
dec
push
call
sbb
ins
or
in
sub
mov
sbb
test
push
setbe
fcom
aas
or
lods
dec
add
cmps
dec
lock
push
jg
loopne
jne
cli
pop
dec
aas
inc
lock
aam
cmp
ds
dec
sub
aam
xor
(bad)
adc
push
lea
in
ins
fild
or
int
inc
or
dec
ret
sbb
hlt
stos
cmps
fisttp
and
loopne
fild
jb
inc
dec
dec
mov
fwait
test
out
inc
cmp
dec
cmp
popa
dec
push
or
xor
inc
add
sub
dec
inc
dec
inc
push
cmp
pushf
mov
cmp
je
mov
sub
add
shl
adc
and
test
push
push
call
xchg
jo
pop
pop
pop
mov
aam
dec
rcl
loopne
dec
cmc
cmp
add
rcl
adc
xchg
ins
mov
pop
lock
push
cmp
dec
repz
push
pop
xchg
xor
lock
popa
loopne
push
or
jne
mov
fmul
inc
dec
lods
arpl
mov
pop
jl
fmul
mov
mov
pop
es
popf
fs
movs
mov
test
mov
jns
inc
fisubr
movhps
(bad)
add
mov
jno
test
mov
clc
mov
les
mov
push
push
cmp
clc
ja
js
pushf
mov
aas
enter
(bad)
(bad)
xor
fdivr
fsubr
adc
jmp
mov
cmp
jmp
sub
lock
jns
jmp
mov
in
hlt
or
and
ficom
cmp
add
sub
das
hlt
mov
sub
sub
ror
or
add
ret
cmc
xchg
xchg
inc
rcl
dec
jb
mov
lock
mov
daa
and
sub
and
and
ins
pop
dec
mov
adc
push
movs
popf
addr16
test
inc
or
mov
mov
lods
sub
and
rol
sub
add
jle
sub
fs
ins
add
adc
sub
fsubr
or
pop
sbb
test
xchg
add
push
pop
adc
or
sahf
rol
push
mov
test
loopne
ins
inc
jg
cli
push
ja
ss
jns
push
add
mov
jne
out
(bad)
pop
ficom
or
push
adc
test
xor
mov
ret
push
fist
mov
mov
and
jl
cs
mov
shl
and
mov
jns
mov
push
sbb
adc
add
mov
fiadd
loopne
mov
adc
mov
fmul
add
sub
loope
sub
mov
in
mov
xchg
in
mov
imul
stc
sub
inc
addr16
or
push
xchg
lds
and
add
(bad)
out
or
mov
and
loopne
dec
mov
dec
aaa
pusha
or
imul
push
ds
jl
jns
adc
and
fsubr
sub
xchg
sub
or
push
or
push
sbb
ins
retf
dec
pusha
adc
and
or
adc
cmp
call
add
add
out
fstp
sub
jg
adc
push
sbb
push
sbb
add
repz
dec
adc
(bad)
pop
cmp
cmp
je
cmp
xchg
test
and
leave
xchg
cmp
add
retf
pop
pop
pop
jb
push
es
pop
pop
and
mov
pop
(bad)
cmp
and
ror
or
inc
ret
push
mov
pop
into
ss
jmp
add
mov
int3
cmp
je
or
je
push
out
scas
test
jecxz
ret
cmps
clts
xchg
rcl
pop
and
push
adc
lods
cmp
sar
jb
(bad)
in
add
add
sub
cmp
jl
jmp
xlat
ret
sbb
pop
movs
mov
and
call
inc
daa
je
and
je
je
rcl
shr
mov
gs
adc
outs
inc
pop
dec
adc
pop
sbb
adc
sbb
add
add
cld
idiv
push
add
or
js
adc
jp
and
movs
lea
enter
test
popf
xchg
cwde
jb
inc
scas
mov
adc
pop
xor
xor
and
fs
push
push
clc
cmp
or
pop
ds
sub
jnp
pop
rol
out
mov
sbb
aad
aaa
or
mov
loop
adc
or
add
test
jns
popa
adc
call
cwde
sbb
sbb
xchg
pop
adc
inc
pop
inc
call
sbb
loopne
mov
call
minps
sub
mov
mov
sub
sub
jl
inc
ins
pop
mov
add
sbb
dec
adc
aam
xchg
xor
and
jle
or
inc
test
inc
lods
add
mov
outs
xor
ds
dec
inc
inc
dec
jne
and
add
pop
mov
adc
ret
mov
inc
sbb
cmp
add
movhps
xor
enter
or
and
and
xor
pop
repnz
adc
dec
inc
pop
add
ret
push
mov
and
je
xchg
or
push
mov
dec
jae
test
pusha
mov
jb
xchg
imul
push
leave
sub
fs
je
jmp
push
mov
enter
dec
pusha
ja
mov
or
or
or
mov
jl
pop
and
nop
popa
mov
mov
repnz
arpl
sbb
mov
pop
enter
mov
jns
in
(bad)
(bad)
bound
push
or
movs
adc
leave
mov
mov
pop
and
nop
sub
inc
and
xor
out
hlt
sbb
aaa
icebp
add
fs
jo
lods
mov
add
fsin
xchg
or
imul
pop
jns
and
add
xchg
rcr
or
je
inc
popf
loope
inc
mov
or
mov
add
inc
stos
sub
imul
add
das
push
pop
cmp
mov
and
ja
inc
or
lods
lods
les
inc
ror
in
add
mov
or
or
inc
pop
bound
push
or
ret
pop
inc
sub
adc
inc
adc
sbb
dec
pop
sahf
cmps
stos
xor
or
inc
loope
adc
adc
pop
dec
adc
xor
aad
push
(bad)
fisttp
dec
add
les
jl
jo
mov
xchg
or
cmp
add
xor
jmp
mov
mov
test
adc
sbb
inc
cmp
xchg
xchg
imul
daa
lea
pop
jecxz
push
fist
sub
lea
loop
es
dec
sbb
cmp
mov
inc
sbb
push
push
fld
rcr
mov
test
in
sbb
fwait
mov
lock
ret
mov
fbld
adc
add
push
mov
cmps
int
mov
idiv
movs
xchg
push
mov
shl
(bad)
sub
adc
push
popf
inc
sbb
add
push
sub
adc
ins
xor
cmp
test
push
xchg
inc
(bad)
ja
inc
xor
or
ja
xor
adc
repnz
out
imul
sti
or
ret
jno
push
imul
add
mov
repnz
mov
lods
push
pop
comiss
dec
call
sub
push
or
and
adc
xor
and
hlt
sub
push
sbb
fsubr
jl
mov
jp
outs
es
mov
adc
mov
je
push
test
pop
and
fwait
push
xor
mov
fadd
fstp
and
cmp
sbb
xor
sahf
lea
or
push
jp
repz
pusha
or
adc
fst
hlt
xor
dec
mov
rol
or
xchg
mov
ins
sub
and
jmp
push
add
or
xor
cmp
cwde
cli
add
js
push
ja
cld
mov
imul
dec
(bad)
pop
push
pop
test
mov
xor
mov
mov
inc
xor
scas
fsubr
add
sar
int3
ins
adc
push
adc
cmp
xor
ret
xor
scas
mov
outs
pop
cmp
jne
or
xchg
dec
mov
add
dec
mov
ins
xchg
xchg
xchg
mov
cmove
int
leave
leave
enter
mov
rcr
or
iret
add
lock
or
inc
jbe
and
popa
bound
faddp
push
sbb
sti
push
pop
add
or
lods
xor
mov
ret
pop
sub
das
test
cmps
xor
inc
js
ss
or
retf
inc
or
xchg
(bad)
aaa
rcr
pop
pop
add
je
mov
sub
xor
dec
gs
mov
je
adc
adc
push
fdivr
nop
outs
and
stos
outs
pusha
enter
add
test
aas
lea
imul
add
add
adc
pop
inc
mov
sbb
inc
shr
push
and
and
mov
sbb
add
div
and
add
and
dec
or
push
and
and
and
and
jg
add
add
test
pop
pop
or
addr16
fld
and
add
mov
pop
daa
stos
jno
dec
jb
push
shr
je
lahf
jle
mov
jmp
push
std
outs
jne
out
ja
out
out
jno
sbb
clc
jbe
push
add
push
push
mov
sub
das
inc
stos
cmp
outs
pop
mov
xor
lods
pop
aad
in
(bad)
jns
das
int3
jb
jae
cmp
mov
pop
leave
dec
out
jb
pop
jno
sbb
cmp
add
dec
mov
in
xor
jbe
inc
outs
fs
inc
xor
push
dec
jb
nop
add
cmove
adc
cld
test
test
push
shl
enter
repz
add
or
js
and
and
pop
cmovs
mov
jp
cdq
push
dec
inc
clc
pop
je
lds
pop
ud1
push
mov
imul
pop
adc
sub
arpl
fst
(bad)
cmc
loop
and
sbb
add
cmp
aaa
fild
or
adc
clc
arpl
and
or
pop
cld
sbb
jbe
and
add
pop
push
inc
push
(bad)
pop
les
fbld
in
pop
jb
jmp
jl
push
add
and
mov
push
(bad)
not
push
push
sbb
and
ficomp
fwait
or
mov
cmps
or
je
push
adc
outs
push
jmp
mov
add
fisubr
call
sbb
add
outs
or
pop
inc
jl
adc
adc
fwait
out
sbb
push
ds
(bad)
movs
inc
and
(bad)
xor
mov
lock
add
or
push
aas
mov
xlat
dec
in
push
mov
pusha
popf
or
cmp
imul
xor
pop
or
inc
loopne
add
ins
push
cmp
pop
les
mov
in
(bad)
out
or
push
dec
pop
or
xor
jae
push
sub
pusha
ror
mov
addr16
adc
mov
out
mov
cmp
mov
or
fwait
and
or
push
jno
xchg
or
movs
scas
push
adc
push
mov
or
sbb
rcl
dec
mov
cmp
sbb
adc
call
clc
jmp
jmp
pop
inc
mov
inc
shld
push
xor
xor
add
cmp
adc
push
daa
rol
sahf
test
sbb
(bad)
jl
int3
je
and
pop
inc
jnp
push
push
sub
adc
ret
add
and
test
and
jmp
(bad)
push
sbb
test
xor
shl
add
adc
and
jne
jns
das
jno
xlat
push
push
push
push
lds
ja
push
sbb
ja
mov
add
test
aam
add
push
inc
jg
es
jnp
mov
and
push
lock
xchg
jns
mov
scas
cmp
xor
mov
mov
mov
das
sti
inc
and
test
pop
loope
pop
push
gs
js
add
add
das
mov
sub
aam
cld
push
or
or
xor
cmps
sar
push
xor
add
or
aad
jns
adc
push
mov
jo
int3
dec
(bad)
add
add
push
or
sub
ret
daa
cmp
ret
push
mov
adc
daa
arpl
inc
add
and
or
xchg
push
add
inc
push
push
sbb
fistp
sub
mov
js
push
js
xchg
adc
pusha
dec
xlat
add
rol
cli
loope
adc
les
push
jmp
add
adc
shl
add
add
jne
pop
call
(bad)
out
mov
adc
jne
(bad)
push
loope
cld
pop
ins
push
lds
(bad)
and
xor
add
loopne
add
xchg
add
mov
je
mov
(bad)
ss
xor
and
cmp
lds
inc
add
pop
xor
enter
aam
ret
and
(bad)
xor
mov
iret
outs
dec
mov
add
xor
adc
add
adc
dec
div
dec
fidivr
(bad)
or
and
or
test
cdq
jns
pop
add
push
pusha
or
and
inc
lds
or
add
shl
(bad)
dec
test
xchg
(bad)
or
cmp
jns
adc
xchg
(bad)
or
ud2
es
pop
add
fadd
cmp
mov
pusha
movs
cdq
ja
add
xor
int3
sub
mov
xor
add
xor
aaa
xchg
cmp
ins
sbb
in
iret
sbb
inc
enter
enter
adc
test
inc
and
inc
enter
cmp
mov
pop
ds
pop
retf
add
add
push
pop
pshufw
loopne
gs
lods
xchg
push
and
or
add
cmp
inc
mov
sti
pop
icebp
jmp
inc
mov
push
and
mov
or
cdq
sub
push
push
jl
inc
jae
pop
int
pop
bound
imul
outs
loope
lods
add
hlt
push
fucomi
scas
pusha
add
jg
mov
sbb
inc
sbb
inc
mov
sar
cmp
or
rcl
push
rol
sub
loopne
gs
in
ss
jmp
ror
shr
push
or
repnz
push
sub
scas
mov
mov
imul
lds
fsub
push
xor
in
lea
and
out
les
lods
mov
mov
inc
adc
or
aam
js
mov
fadd
add
mov
xchg
outs
cwde
les
pop
and
mov
mov
jbe
xchg
cld
add
sbb
add
jmp
xor
dec
or
cmc
sbb
push
adc
sub
imul
mov
mov
(bad)
mov
neg
pop
imul
lods
pop
and
mul
pusha
div
ficom
sub
push
lods
pop
mov
div
cmp
test
add
je
lods
pop
mov
cmp
js
inc
cmp
neg
adc
xor
cmp
jge
into
vshufps
ja
pop
movs
cmp
add
cmp
mov
or
(bad)
(bad)
sbb
cmp
out
jecxz
(bad)
neg
xchg
imul
pushf
div
mov
cwde
movs
mul
xchg
(bad)
adc
cwde
mov
cmps
adc
test
div
(bad)
not
fdiv
pop
mul
enter
iret
in
sbb
out
retf
es
pop
rcl
cmp
jmp
inc
adc
aam
out
mov
fcomp
out
fsub
jge
fadd
shl
out
in
fadd
mov
ret
fadd
mov
lock
mov
mov
clc
out
cld
out
inc
in
rcl
add
pop
cmp
out
not
or
xchg
cwde
or
jne
cmp
xchg
js
jmp
cmp
(bad)
aad
in
xchg
jo
cmp
fdiv
cmp
xchg
pop
adc
adc
adc
push
in
xchg
sbb
and
mov
arpl
pop
sub
popa
(bad)
sub
in
arpl
cs
xor
jl
imul
mov
cmp
lds
push
in
push
cmp
mov
in
arpl
sub
mov
data16
jmp
push
jnp
push
call
jmp
in
call
(bad)
jle
push
mov
dec
mov
sub
mov
lea
mov
das
jmp
sar
retf
lds
movs
lock
pop
pop
pop
pop
push
pop
adc
aaa
mov
pop
and
mov
push
loop
cwde
lock
movs
movs
adc
in
or
shl
and
push
push
add
retf
sbb
neg
or
es
loop
and
inc
add
fcomip
cmp
add
ror
add
inc
or
push
or
inc
call
or
add
neg
call
shr
or
push
or
loopne
iret
movs
push
push
push
sub
jge
and
and
int
sub
xchg
ret
cmps
add
inc
sbb
inc
or
dec
mov
out
sub
or
jg
arpl
push
add
adc
mov
lods
and
pop
test
mov
pop
add
push
push
(bad)
lds
sub
sbb
push
add
adc
lock
sub
icebp
das
lea
aaa
dec
add
stc
pusha
mov
sbb
test
jl
ret
lea
pop
femms
dec
xchg
and
and
sub
sbb
jp
jle
and
or
rol
fst
or
rol
inc
sbb
jne
mov
adc
test
xor
push
lods
and
pop
test
test
out
xor
pusha
xor
stc
cmc
fisub
int3
jge
xchg
daa
jnp
push
sbb
jbe
mov
adc
or
lea
sub
sub
adc
mov
aam
daa
pusha
sub
mov
inc
nop
pop
xor
ins
ror
push
add
adc
into
push
xchg
add
xchg
mov
loopne
or
xchg
xor
ds
xchg
sub
mov
ret
and
sub
xor
cmp
sub
or
add
add
les
add
lea
bound
pop
lock
inc
ltr
lea
cmp
sbb
xchg
or
call
inc
enter
mov
arpl
les
int
hlt
push
pop
or
adc
js
pop
cmp
push
mov
adc
inc
or
dec
push
jg
xor
mov
push
push
adc
inc
adc
push
jbe
jns
sub
(bad)
fs
inc
adc
sbb
or
cld
cmp
fidiv
pop
xchg
inc
sbb
adc
adc
and
add
or
sbb
jo
or
jl
lds
push
xor
fst
and
sbb
hlt
mov
xor
xor
rol
mov
mov
xchg
jmp
mov
mov
dec
push
pop
add
xchg
rcr
ins
loopne
push
fwait
push
push
rcr
add
rcl
xchg
pop
push
jno
mov
lods
pop
pop
jge
dec
cwde
mov
dec
jne
out
xor
add
inc
sbb
mov
mov
dec
call
mov
dec
inc
test
test
ror
push
fcom
mov
or
clc
push
lds
and
adc
pop
adc
adc
iret
shl
adc
imul
and
test
jns
and
and
or
or
ja
int3
ss
adc
data16
add
fiadd
mov
push
push
sub
ret
mov
mov
mul
sbb
or
aaa
int
test
inc
adc
adc
cmp
aaa
lods
shl
push
mov
cmp
sbb
sbb
dec
jae
rcr
sub
and
cmp
psubsw
es
cmp
sub
ss
xlat
loopne
bnd
xor
push
ss
dec
push
and
fcom
mov
adc
cld
cld
sbb
lock
or
mov
fcom
dec
rol
mov
mov
pop
cwde
pop
call
es
or
test
sub
cmp
ins
push
and
xchg
push
xchg
push
mov
nop
inc
add
sbb
arpl
ret
shr
mov
xchg
addr16
cwde
mov
lods
arpl
push
call
cld
push
adc
mov
cwde
inc
add
fist
and
add
aas
outs
adc
dec
mov
sub
jmp
add
je
and
lahf
adc
imul
inc
push
jae
imul
add
es
lock
inc
mov
jnp
or
or
add
or
loopne
aaa
inc
mov
jnp
and
push
jne
or
adc
sbb
jmp
or
gs
ins
imul
ret
pop
pop
inc
and
hlt
cmps
arpl
cmp
and
dec
rcr
sar
xchg
and
and
xchg
dec
xchg
xor
rol
add
push
or
je
add
bound
pushf
xor
cmp
(bad)
push
inc
adc
and
push
sbb
sbb
adc
add
or
(bad)
pop
or
ret
sbb
and
pop
add
test
mov
mov
mov
and
cmp
xchg
hlt
pop
ins
or
add
jmp
popf
and
xchg
push
mov
adc
push
adc
mov
daa
jle
mov
hlt
mov
movs
sub
xchg
jo
push
stc
jne
jbe
mov
in
mov
fwait
cmp
mov
dec
gs
ret
cwde
mov
ret
or
and
fadd
gs
enter
xchg
mov
and
xlat
add
sbb
pop
or
shl
pusha
jge
dec
test
popa
xchg
dec
sar
test
adc
add
jnp
push
add
scas
test
pop
ret
out
pop
(bad)
dec
sbb
jg
adc
dec
xor
inc
and
adc
ret
push
inc
call
add
xlat
and
add
popa
les
pop
jg
pop
dec
dec
mul
pop
rcr
sub
and
xor
and
and
lea
cmp
push
lock
sub
jns
popa
cwde
addr16
sbb
int
cmp
mov
add
gs
or
loopne
ds
push
dec
dec
inc
leave
xchg
and
mov
push
inc
inc
push
in
jge
add
inc
aaa
sti
xchg
test
arpl
daa
mov
or
add
pop
fs
outs
ja
jb
cld
ror
stos
and
jo
add
mov
outs
and
ins
jo
std
daa
std
rcr
mov
push
imul
rcr
mov
or
call
sbb
or
cld
mov
inc
popa
jo
bound
imul
adc
or
mov
adc
add
pop
xchg
add
ja
push
inc
dec
inc
mov
adc
std
popa
js
outs
imul
adc
adc
xchg
test
xchg
or
stc
or
inc
outs
ins
ins
outs
je
call
pushf
call
ss
sub
add
in
clc
(bad)
and
and
and
fsub
push
and
or
lahf
adc
mov
push
rcr
neg
or
mov
or
push
gs
push
pop
or
test
ss
daa
std
add
push
mov
push
dec
add
push
call
pop
inc
dec
xchg
(bad)
fild
das
inc
jb
xor
sbb
or
or
fsub
clc
or
mov
add
adc
push
jg
clc
mov
cli
(bad)
pop
inc
inc
push
push
dec
push
add
add
shl
pushf
pop
test
dec
inc
dec
inc
in
push
or
je
cmp
daa
or
and
outs
jge
popa
imul
fs
or
in
push
jae
dec
into
(bad)
dec
and
rol
xor
cmp
and
aam
inc
adc
sar
(bad)
jne
add
or
xchg
es
inc
xchg
jae
js
imul
sbb
inc
fcom
mov
cmps
mov
inc
or
popf
xchg
inc
inc
test
and
jnp
jns
push
or
pop
aaa
pop
push
inc
or
xchg
out
xchg
pop
and
mov
push
xchg
xor
je
sub
shr
sbb
sub
push
popa
loop
ins
fs
sub
lods
ret
ja
in
bound
push
jb
or
and
mov
sbb
mov
dec
cld
inc
pop
jo
adc
mov
cwde
sahf
xchg
and
dec
push
sub
push
adc
sbb
sbb
sub
inc
push
scas
rcr
mov
or
int
popa
(bad)
add
xchg
mov
mov
mov
and
or
imul
imul
dec
outs
push
je
add
xor
adc
add
add
inc
icebp
popa
push
pop
test
scas
xor
lahf
mov
add
lahf
jge
aad
or
ja
adc
mov
and
mov
mov
jns
pop
cmps
pop
push
dec
dec
inc
dec
sahf
call
ja
les
pop
dec
mov
mov
push
pop
jmp
or
pusha
mov
push
inc
push
jnp
push
xor
dec
jg
dec
dec
mov
pop
test
outs
mov
or
cwde
pop
adc
ja
add
jg
inc
push
jb
iret
or
imul
or
inc
das
and
test
fimul
or
mov
jg
mov
ins
inc
xor
add
pop
inc
neg
(bad)
sbb
push
ret
cmps
adc
xchg
dec
add
test
cmp
out
test
jecxz
test
mov
push
sbb
stos
stc
add
mov
ror
pop
int
out
push
imul
lock
mov
sbb
scas
mov
(bad)
pshufw
call
movs
adc
dec
add
push
jl
call
movs
sbb
jl
pop
add
push
dec
push
xchg
or
outs
or
push
add
pop
mov
test
adc
xchg
call
xchg
mov
test
inc
dec
pop
sub
dec
sub
push
inc
inc
fld
int
movs
mov
xor
into
ror
outs
inc
ja
sbb
scas
adc
xchg
dec
push
jbe
push
or
mov
jmp
push
clc
mov
arpl
mov
jge
jp
push
or
add
out
fstp
cmps
mov
scas
jle
imul
cmps
ss
inc
scas
mov
js
and
dec
ds
js
fistp
inc
sahf
xchg
inc
push
das
mov
hlt
ret
pop
popf
inc
enter
call
test
pusha
or
xchg
or
leave
iret
fild
add
adc
(bad)
and
sbb
pusha
je
sub
fdiv
jnp
push
and
or
push
inc
js
add
loope
fs
and
movs
addr16
retf
push
cmp
mov
aaa
scas
adc
inc
jns
lahf
dec
sbb
das
arpl
fwait
cmp
ja
xor
dec
push
and
rcr
mov
dec
sbb
cmp
xor
adc
popa
jl
inc
push
arpl
or
ja
rol
dec
pusha
jo
arpl
rcr
leave
add
xor
gs
add
mov
mov
gs
aam
sub
jo
mov
addr16
fdivr
xchg
loope
inc
sub
pop
inc
xor
jg
sar
mov
and
retf
add
add
movs
add
cmp
cmp
xlat
mov
retf
popf
xor
andps
ficom
inc
push
or
jne
push
adc
push
mov
add
mov
nop
fld
popa
sub
stos
xchg
data16
push
sub
outs
and
xchg
sub
dec
ins
fadd
xchg
in
xchg
mov
inc
subps
rol
inc
pushaw
or
ficom
mov
loopne
push
jbe
push
inc
adc
xor
movs
addr16
inc
jae
mov
xor
sbb
cmps
pusha
mov
repz
cs
fadd
enter
and
psraw
push
mov
push
mov
mov
cmps
lock
in
test
icebp
pslld
in
in
hlt
cmc
div
in
in
clc
stc
cli
sti
in
in
cld
std
(bad)
jmp
in
in
loope
jecxz
in
in
in
out
in
in
jmp
in
in
in
out
out
in
in
rcl
rcl
in
in
aam
(bad)
xlat
in
in
fcomp
fcmovu
in
in
(bad)
(bad)
in
in
rol
ret
in
in
(bad)
(bad)
in
in
enter
in
in
int3
int
iret
in
in
mov
mov
in
in
mov
mov
in
in
mov
in
in
mov
in
mov
in
in
movs
cmps
cmps
out
in
test
stos
stos
jge
aam
test
jl
das
mov
inc
test
mov
fnstcw
mov
push
and
add
fcom
push
and
rcl
int3
xor
nop
fisubr
inc
and
ret
xchg
in
dec
sar
scas
outs
xchg
jbe
dec
dec
outs
retf
xchg
xor
sub
push
daa
test
fsubr
push
enter
mov
and
jns
pop
or
inc
add
mov
dec
mov
sbb
cwde
cmps
inc
add
add
push
and
jmp
fwait
dec
mov
hlt
das
cli
scas
iret
sub
sbb
or
inc
mov
and
popaw
inc
and
gs
xor
fild
cmp
cmp
mov
mov
and
addr16
(bad)
jmp
das
inc
push
adc
lahf
sbb
or
cmps
add
loopne
inc
mov
data16
mov
test
adc
das
mov
sub
adc
push
rol
icebp
dec
sbb
lea
mov
leave
push
mov
cmps
push
inc
cmp
repz
sbb
jg
push
push
push
push
sahf
int
and
inc
nop
cmp
mov
popa
xchg
add
add
xor
or
lock
push
jle
outs
or
mov
push
adc
loop
bound
bound
mov
pop
ret
mov
in
in
and
je
mov
push
arpl
arpl
add
test
xor
mov
mov
adc
add
addr16
adc
pop
add
cdq
addr16
inc
dec
ins
or
and
pop
mov
mov
jnp
add
dec
or
mov
lea
sti
adc
or
test
cmp
pop
popf
in
jae
add
loope
mov
(bad)
mov
jo
push
jmp
adc
fldcw
inc
mov
adc
js
sahf
sbb
pop
das
outs
mov
xchg
rcl
scas
mov
lock
addr16
xchg
mov
test
mov
inc
mov
outs
ins
daa
cmp
pop
adc
stos
(bad)
daa
outs
cwde
push
adc
daa
inc
inc
dec
inc
test
mov
add
pop
in
pop
repz
mov
loope
jl
ja
pop
adc
xchg
das
mov
ret
mov
outs
fwait
mov
adc
sub
xchg
mov
adc
les
xor
jge
in
dec
js
shr
adc
cmp
add
add
fild
or
jne
stc
adc
xor
pop
pop
or
leave
adc
pop
mov
loop
imul
and
pop
push
inc
addr16
outs
aad
pop
mov
mov
push
jmp
data16
add
add
movs
out
add
or
lock
push
sbb
xchg
ins
sbb
xor
clc
push
mov
pushf
loop
sti
jns
pop
mov
adc
xchg
or
outs
cs
sbb
or
ss
leave
mov
push
or
in
js
add
mov
jp
jecxz
aaa
mov
imul
push
or
fs
add
bndstx
mov
add
mov
adc
addr16
add
mov
ror
clc
inc
adc
mov
adc
scas
das
sub
sub
mov
loope
movlps
xor
cmp
mov
fld
and
jge
inc
ror
or
add
sbb
and
imul
aas
pusha
add
popa
ret
mov
(bad)
and
or
sbb
and
push
or
jge
mov
push
xlat
fdiv
inc
cmc
neg
test
push
nop
es
das
or
dec
or
cmp
outs
jo
sub
outs
push
add
sub
pusha
adc
xor
arpl
jno
push
dec
popa
jae
xchg
pop
mov
lahf
ds
aad
movs
out
dec
retf
cmc
sub
movs
mov
(bad)
loope
mov
mov
mov
and
(bad)
xchg
or
mov
xlat
pop
aaa
push
cmc
and
push
xor
jge
pop
mov
sub
or
push
enter
fldcw
cwde
fcmove
add
inc
or
popa
sahf
sbb
pop
sbb
mov
aaa
sti
aam
es
mov
sub
cmps
(bad)
loopne
adc
scas
(bad)
fldenv
sbb
pop
or
(bad)
or
cmp
movs
pusha
retf
xor
mov
sub
jno
cmpxchg
les
loope
add
inc
fcom
add
mov
push
repnz
mov
fs
xor
push
and
inc
xchg
push
and
mov
rol
mov
call
clc
ins
inc
int3
retf
add
int
sub
pop
pop
sub
mov
(bad)
iret
loopne
sbb
push
repnz
inc
mov
das
pop
push
pop
mov
movs
mov
mov
dec
out
add
and
pop
push
or
sahf
fld
adc
xor
rcl
inc
jae
mov
js
iret
js
dec
jno
mov
xor
ror
adc
sbb
push
in
adc
inc
cmp
pop
sbb
aaa
or
rcl
mov
pop
adc
cmp
pop
or
sub
mov
in
ja
addr16
or
das
ror
xor
add
mov
dec
xor
push
in
ret
les
add
or
and
ins
mov
push
rol
addr16
ret
mov
popf
call
popa
xor
push
outs
add
pop
jo
push
lahf
movs
mov
ret
dec
sub
and
enter
dec
sbb
cmp
jb
jns
jecxz
arpl
repnz
pop
adc
ja
mov
push
xor
add
inc
pop
mov
adc
test
loope
xor
mov
popa
or
cs
sbb
hlt
inc
imul
push
ja
daa
or
add
add
push
mov
daa
dec
test
lods
push
ficomp
scas
push
repnz
sbb
adc
jg
lsl
cld
loop
test
lods
loope
gs
jg
ss
jg
sbb
jo
fild
mov
dec
push
lea
or
sbb
sub
(bad)
stc
fadd
push
and
cmp
movs
push
dec
sbb
fidiv
or
loop
inc
pop
mov
mov
rcr
loope
pop
ins
add
and
jecxz
rol
jl
xchg
xchg
popf
xor
sbb
mov
mov
addr16
inc
movs
call
cmp
add
dec
clc
or
cmc
cmp
or
cld
add
cmp
xchg
push
cmp
imul
jg
mov
jns
iret
repz
and
jns
out
cmp
pop
data16
out
sahf
je
nop
sahf
lods
cmp
fcmovb
aaa
and
es
mov
aaa
mov
push
xchg
pop
sbb
sub
push
dec
jo
cmp
jnp
jle
mov
out
sub
rol
loopne
cld
cmp
jnp
or
mov
xchg
xchg
xchg
push
es
mov
pop
pop
ss
xchg
add
add
cmp
push
mov
jns
ror
fmul
and
cli
mov
retf
int3
retf
inc
out
ficomp
ds
pop
mov
jbe
push
dec
sbb
movs
test
and
sbb
dec
mov
fmul
out
add
pop
adc
push
sub
and
dec
xor
adc
push
sub
rcr
pop
xchg
mov
cmp
mov
fisubr
or
jmp
sub
add
add
add
jl
adc
mov
mov
sbb
and
in
aam
fdiv
ret
pushf
ror
jb
sub
test
mov
or
sti
sub
xor
mov
nop
pop
int3
mov
add
outs
xchg
dec
and
adc
sbb
mov
adc
mov
pusha
push
jnp
cmp
push
in
pusha
add
fnstsw
aaa
add
pusha
(bad)
sbb
mov
sbb
sbb
and
mov
xchg
ret
inc
fcmovne
das
clc
mov
or
cmp
js
and
or
call
add
inc
inc
bound
sbb
jecxz
pop
test
dec
mov
push
jbe
pop
outs
jl
push
addr16
pusha
pop
cmp
loopne
ins
sbb
jbe
sbb
xchg
mov
cmp
adc
imul
and
nop
sbb
pop
rol
pushf
jbe
sbb
pop
dec
xchg
sbb
cmp
or
xchg
adc
loopne
mov
movs
iret
add
shl
xor
add
in
pusha
pop
lds
push
test
cmp
mul
or
dec
psubusb
pusha
and
sbb
aam
(bad)
addr16
mov
iret
jmp
lock
mov
mov
mov
or
add
add
or
dec
mov
outs
adc
mov
clc
sub
(bad)
adc
push
xor
ins
mov
add
push
dec
aam
data16
adc
sub
jp
dec
xchg
fst
cmp
adc
cmp
jb
rol
or
test
cmp
cmp
mov
adc
test
push
rol
loopne
lea
cmc
out
sbb
movs
mov
test
and
lock
and
or
cs
setge
loop
psraw
adc
retf
enter
inc
sbb
pop
add
adc
into
popa
pop
push
adc
inc
shl
movs
dec
jne
test
iret
sti
ret
ret
cmp
and
cwde
add
add
lock
jo
push
fadd
sbb
xchg
push
dec
loop
dec
add
call
mov
mov
shl
js
bound
inc
cmp
shl
or
mov
and
je
add
inc
mov
xor
or
inc
clc
or
and
push
or
xchg
pop
sbb
scas
mov
nop
in
out
xor
push
push
not
or
fs
push
and
add
xor
pop
enter
xlat
gs
retf
ret
push
ficomp
ja
shr
in
mov
das
cmp
push
arpl
push
push
out
adc
(bad)
dec
arpl
adc
or
cmps
sub
mov
out
aas
mov
loop
or
js
jne
adc
cwde
ret
je
jns
sbb
jno
ret
cld
add
loopne
cmps
aas
adc
pop
sub
push
mov
adc
sub
lds
loopne
inc
pop
sti
je
adc
inc
inc
leave
push
add
or
and
pop
jb
adc
mov
add
pop
std
adc
or
push
or
and
push
xchg
shl
mov
and
inc
js
enter
and
clc
add
and
pop
xchg
inc
nop
push
xchg
jnp
and
addr16
test
dec
or
or
add
cmp
lahf
sbb
push
ins
sbb
jmp
pop
rcr
scas
pop
dec
cmp
loopne
push
repz
movs
cmp
mov
sub
mov
push
cmp
cmp
mov
js
adc
(bad)
int3
nop
and
adc
data16
dec
sub
ud1
rol
jno
add
inc
adc
add
mov
adc
push
inc
or
cmp
aad
shl
out
cmp
adc
adc
dec
leave
jecxz
iret
jnp
pop
pop
cmp
shl
add
mov
cld
add
xchg
test
inc
sbb
lds
in
adc
jb
je
lock
adc
dec
cmp
mov
add
or
das
lea
push
xor
dec
xchg
loop
mov
pop
shl
push
lea
add
mov
loopne
mov
test
or
retf
and
sbb
dec
daa
inc
out
jno
imul
or
pop
pop
jae
dec
adc
ins
sbb
test
fadd
and
sbb
aad
fsubr
std
mov
(bad)
out
adc
adc
xlat
aam
jl
adc
adc
data16
rol
or
or
pop
das
ret
and
lahf
push
cmp
push
(bad)
das
jl
push
sub
push
and
das
lds
dec
pop
or
(bad)
bound
(bad)
adc
js
outs
add
mul
adc
push
rcl
inc
sbb
sub
push
mov
test
loopne
retf
call
xchg
cld
add
adc
add
xchg
pop
and
les
push
xor
leave
push
cmp
sub
fcomp
iret
sbb
test
xor
fcom
ret
loope
mov
mov
sbb
test
jl
inc
sbb
pop
xor
cld
cmp
fwait
push
add
popf
add
sbb
dec
jne
inc
mov
adc
mov
imul
jmp
xor
add
out
leave
xchg
inc
adc
push
push
push
xchg
rol
add
out
push
add
into
jmp
mov
adc
push
xchg
inc
nop
sub
add
lock
(bad)
xor
test
jmp
adc
lea
mov
adc
jl
jecxz
nop
cmps
inc
or
scas
mov
push
in
sub
pusha
mov
sbb
ins
fwait
out
xchg
fwait
adc
adc
add
(bad)
inc
fnstenv
or
lahf
dec
fld
fadd
mov
mov
push
cmp
enter
mov
add
das
enter
stos
nop
mov
int3
mov
mov
(bad)
xor
pop
xor
adc
inc
add
adc
sbb
sbb
ins
rcr
ret
repnz
mov
or
pop
shr
sti
add
or
xor
jbe
mov
add
mov
dec
dec
fs
loop
in
mov
cmps
inc
and
add
adc
sub
add
xor
imul
jb
dec
and
adc
test
sbb
push
cld
inc
and
add
sub
jae
lea
push
add
xchg
sub
mov
adc
int3
push
xchg
mov
call
fisttp
dec
sbb
fstp
mov
stos
je
cmp
ja
fdiv
and
je
lea
test
(bad)
sbb
bound
ret
aad
aam
call
pop
je
cmp
xor
fimul
add
shl
fmul
sti
scas
xor
cmc
test
xor
xchg
test
push
add
repz
adc
mov
rol
push
xor
jecxz
je
inc
cmp
cmp
and
in
add
int3
add
dec
mov
fisttp
mov
push
into
cdq
mov
or
mov
push
xchg
pop
xchg
sub
adc
imul
mov
retf
push
pop
push
adc
push
in
pop
aas
sbb
dec
push
push
and
aad
ins
mov
add
mov
cwde
and
and
mov
int3
pusha
ret
inc
test
mov
mov
or
cmp
pop
xor
mov
add
and
ret
dec
mov
clc
mov
add
mov
pop
or
fisttp
das
test
and
inc
and
shr
add
loope
or
inc
cld
(bad)
jno
fiadd
mov
not
pop
fstp
loop
je
movs
je
dec
je
jmp
sub
into
dec
das
jmp
and
add
ja
add
adc
jnp
xor
sbb
es
fwait
cld
sbb
pop
popa
adc
mov
pop
fild
test
mov
adc
xchg
pop
or
adc
cdq
jp
xor
and
xchg
mov
pop
or
xor
jl
out
in
scas
hlt
cld
fstp
lock
sub
xor
test
fidivr
test
in
dec
cmp
inc
test
cs
pop
add
cmc
rcr
inc
xchg
das
retf
outs
jo
mov
xchg
loopne
sub
push
sbb
mov
and
or
ret
adc
push
adc
lock
aam
adc
adc
ss
cwde
cmp
xor
cwde
mov
jmp
adc
inc
inc
inc
inc
pusha
shr
rcr
in
push
mov
aaa
(bad)
(bad)
ficom
dec
pop
xchg
sub
test
scas
add
popf
push
add
ret
es
dec
jg
jbe
ror
and
ret
(bad)
fs
popa
add
lock
dec
ja
into
mov
or
fcomp
addr16
xor
or
stos
lods
loop
mov
lds
and
mov
(bad)
(bad)
push
push
sub
clc
push
and
dec
test
inc
push
push
xchg
dec
jno
sub
dec
ja
mov
pop
test
js
mov
loop
or
pop
pop
add
stos
pop
daa
inc
adc
sub
adc
stos
inc
inc
mov
test
adc
cmp
inc
test
and
pop
ret
mov
arpl
add
pop
mov
outs
or
gs
sbb
jp
xchg
jae
and
movhps
pusha
add
pusha
dec
outs
mov
adc
inc
(bad)
fild
or
ins
pop
xor
add
pushf
add
enter
or
clc
push
inc
out
in
or
pop
shl
addr16
push
push
inc
xchg
and
nop
adc
call
mov
mov
add
mov
sub
push
fild
add
cmp
or
sbb
jg
cmova
jb
xor
or
shl
test
push
sub
sub
js
cmps
ins
gs
sub
add
and
dec
imul
fild
sbb
and
push
outs
dec
jb
xor
pushw
xchg
lock
xchg
add
or
and
sub
sar
inc
push
dec
pop
xor
push
add
jns
cmp
pop
cmp
sbb
sub
pop
dec
jns
sub
jbe
out
out
ret
ja
mov
and
push
jno
or
jae
enter
out
out
call
dec
cmp
jae
out
push
loop
dec
(bad)
je
test
mov
push
adc
inc
sbb
setne
inc
mov
fst
ror
enter
inc
data16
fiadd
mov
pop
and
adc
inc
mov
mov
rol
cmp
push
(bad)
xor
(bad)
adc
das
push
inc
dec
rol
cmps
test
sbb
idiv
mul
mov
mov
lea
sub
inc
clc
ss
xlat
adc
arpl
(bad)
or
jmp
xor
xchg
or
inc
xor
loop
mov
xchg
fs
int3
add
ror
jmp
inc
xchg
outs
test
dec
cmp
scas
sar
add
inc
in
mov
outs
mov
pop
je
mov
adc
je
in
adc
mov
ss
fstp
fwait
dec
sub
add
or
pop
pop
mov
xchg
shl
loope
mov
daa
or
inc
mov
push
fadd
cmp
gs
pushf
add
jae
cmp
inc
sub
pop
arpl
sub
ja
or
push
enter
sbb
ja
sub
fdivr
xor
cmps
call
out
inc
jle
cmp
enter
sub
fsubr
xor
sar
xor
cmp
or
dec
xor
mov
or
push
sub
hlt
paddsb
iret
inc
ins
test
mov
push
shr
test
lock
cmp
jno
push
enter
div
jge
(bad)
cmp
call
and
scas
stos
out
sbb
test
dec
sbb
adc
lods
push
out
fld
jo
add
inc
push
push
pop
in
or
inc
xor
retf
push
icebp
popf
loopne
out
repz
xchg
or
repnz
mov
lock
enter
push
sbb
jae
push
pop
dec
xor
xor
jp
dec
xchg
inc
add
aas
push
inc
jl
and
lock
xor
scas
push
ret
dec
scas
inc
push
dec
jp
mov
adc
add
rol
popa
out
push
sbb
sub
int
inc
aaa
pop
adc
stos
or
or
sub
pop
or
ficom
cmp
push
sub
and
aaa
(bad)
bnd
sti
and
ins
add
outs
cmc
add
add
movs
pop
jmp
js
mov
push
call
lods
xor
daa
or
and
arpl
lds
xchg
push
cmps
xchg
adc
outs
add
adc
mov
and
sbb
cmp
sar
and
sbb
frstor
clc
and
fidiv
add
xor
retfw
sub
cmp
pop
sti
pop
xor
push
add
mov
inc
cmp
sbb
or
pop
mov
sar
xchg
inc
cmp
jae
aaa
(bad)
sbb
dec
and
jle
sbb
add
in
cmp
sub
cmp
lods
sub
pop
add
(bad)
mov
repz
jnp
jbe
arpl
inc
and
es
loope
ins
loopne
mov
inc
(bad)
xor
ins
or
ret
jl
mov
movs
mov
(bad)
and
(bad)
shl
(bad)
inc
dec
mov
jmp
sub
daa
add
rcl
jb
mov
adc
ret
pop
shr
jmp
outs
int3
pop
loop
or
aas
adc
and
sbb
mov
and
aas
or
loopne
sbb
shl
cmps
push
sub
rcl
adc
shr
je
push
mov
mov
push
outs
jmp
mov
dec
jo
les
xlat
xor
mov
sub
mov
add
push
mov
ins
or
sub
into
mov
daa
xchg
mov
cmp
sbb
adc
rcr
icebp
ins
jne
arpl
dec
ins
cs
sbb
lods
mov
dec
lods
jne
mov
inc
or
and
test
int3
mov
loopne
jecxz
sub
dec
cld
icebp
aaa
fmul
test
cmp
push
movs
pop
mov
push
in
adc
xor
cdq
xchg
(bad)
movs
ror
push
sub
lock
lock
ror
mov
and
cmp
jb
pop
cmp
adc
push
sbb
dec
push
fs
mov
jno
push
push
shl
inc
mov
sub
add
mov
add
or
test
dec
mov
and
daa
pop
and
test
mov
xchg
outs
add
push
fs
dec
aaa
inc
adc
dec
xchg
adc
jg
push
push
push
push
push
sub
dec
inc
in
call
mov
outs
inc
outs
push
outs
push
push
dec
or
dec
pop
add
imul
ja
mov
fsub
or
push
mov
call
push
out
ins
mov
(bad)
pop
add
mov
dec
mov
add
pop
or
outs
js
or
out
mov
sbb
or
push
xchg
inc
xor
punpckhbw
push
dec
sbb
in
std
shl
jb
sub
outs
dec
adc
fisubr
inc
fadd
mov
jne
es
lock
push
jae
pop
push
and
mov
bound
aaa
dec
sub
popa
out
mov
outs
jbe
sub
popa
imul
adc
push
adc
push
ret
xor
gs
xchg
add
sti
and
aaa
push
and
jne
push
or
je
dec
dec
inc
xchg
sub
mul
fcomip
lods
fs
add
(bad)
add
push
dec
sub
push
dec
jmp
add
mov
fidiv
mov
xor
jg
mov
sbb
dec
jno
mov
mov
cmp
fs
xchg
ret
popa
arpl
pop
daa
mov
and
xchg
ror
sbb
mov
jp
not
pop
or
addr16
call
inc
push
std
in
mov
dec
lods
adc
sub
mov
clc
mov
sbb
inc
test
add
call
or
ret
adc
xor
push
xor
push
sub
je
(bad)
retf
test
out
in
or
pop
add
addr16
(bad)
stc
inc
gs
adc
mov
sub
add
add
cmp
lahf
inc
movs
ror
push
dec
fs
or
and
mov
mov
jg
inc
push
inc
sbb
mov
push
(bad)
adc
or
jns
shr
xchg
popa
hlt
cmps
xor
cli
inc
mov
push
push
cli
dec
jnp
jno
lock
push
mov
js
jmp
ror
int3
push
(bad)
inc
in
paddsb
arpl
int3
arpl
imul
pusha
lock
pushf
repnz
loopne
fs
push
inc
add
test
enter
and
aad
inc
inc
add
hlt
push
jo
mov
jo
gs
je
arpl
cmp
or
movs
jo
xor
fidivr
call
lea
cmp
inc
ins
mov
in
(bad)
shr
push
add
(bad)
loope
jmp
cmp
pop
push
adc
fucomip
xchg
xchg
xor
fs
cmc
mov
adc
icebp
push
rol
xchg
pop
imul
movs
mov
mov
jbe
mov
popa
jb
add
pop
das
add
rcr
and
add
add
or
je
xchg
push
sbb
not
add
imul
mov
jle
pusha
cwde
or
push
push
sbb
mov
mov
and
mov
adc
inc
inc
scas
(bad)
mov
dec
psrlw
hlt
loopne
(bad)
mov
dec
add
rcr
push
xor
mov
fisub
lock
das
call
pop
fbstp
jl
pop
pushf
push
test
ret
mov
ins
push
jo
lock
push
pop
add
(bad)
fdivr
popa
add
enter
fidiv
push
dec
pop
rol
aas
cs
test
push
outs
jne
loopne
bound
fdiv
or
js
dec
jle
push
xor
mov
push
inc
pop
imul
clc
dec
and
or
test
and
sub
fsub
push
out
xchg
das
js
imul
and
and
or
ret
stos
add
add
pop
add
dec
dec
mov
outs
imul
add
enter
stc
cmps
xchg
inc
ins
xchg
mov
adc
rcr
ror
(bad)
fcom
or
sar
test
push
sub
pop
cmp
add
out
jbe
sub
cmps
add
add
nop
inc
inc
rol
mov
das
and
sbb
rol
add
and
mov
push
jns
mov
movlps
add
(bad)
adc
data16
pop
pop
add
inc
xlat
mov
pop
xor
aas
sub
and
ficomp
or
outs
add
aad
xor
dec
outs
outs
push
add
movs
jb
pop
and
mov
adc
sub
loope
and
iret
imul
lahf
sub
mov
ror
rcr
xor
in
movs
jbe
jae
xchg
jne
imul
or
push
inc
f2xm1
or
sbb
popa
pop
cwde
xor
inc
ficom
cmp
lods
pop
adc
popa
or
lods
jns
cmp
ins
jnp
adc
int3
inc
add
jge
das
or
jle
inc
pop
push
mov
fs
enter
cmp
push
add
inc
mov
push
hlt
lods
fs
add
mov
and
aam
pop
mov
int
mov
mov
mov
adc
sti
mov
shr
cwde
es
scas
xchg
sbb
fs
mov
push
adc
push
inc
(bad)
es
fnstsw
test
les
ins
fild
inc
dec
push
int3
dec
dec
daa
and
add
adc
cdq
sti
jae
retf
pop
add
adc
(bad)
stc
imul
and
or
fiadd
ins
xor
jg
addr16
mov
or
mov
push
inc
adc
enter
imul
cmovbe
xor
es
stos
xor
or
test
xor
and
loope
cmp
adc
pop
mov
test
inc
mov
jmp
pushf
xor
add
adc
dec
inc
fdiv
fnstcw
popf
es
cmp
ss
lds
dec
add
imul
or
inc
or
test
add
add
and
gs
pop
outs
xor
sub
pop
adc
cmp
popa
sbb
js
pusha
adc
add
push
outs
add
sbb
or
test
sbb
jns
add
push
pop
adc
outs
pop
cmc
(bad)
syscall
or
xchg
daa
daa
fild
jle
leave
enter
or
daa
mov
leave
loope
or
enter
mov
or
leave
mov
lds
gs
das
gs
jmp
add
mov
sub
push
(bad)
dec
add
or
ror
inc
shl
movs
in
int
lods
fsubr
adc
jmp
pop
mov
or
mov
sbb
imul
je
or
bound
push
ror
loope
cmp
fsub
lds
mov
rcl
popa
ja
add
or
xor
or
and
(bad)
sbb
mov
cdq
add
xchg
mov
(bad)
ret
jns
inc
jb
mov
arpl
jae
or
cmp
fld
fisttp
inc
aad
popa
xor
stos
pushf
and
and
xchg
or
push
popa
out
or
and
ins
aam
ss
leave
fwait
or
mov
xor
add
adc
je
aaa
mov
mov
rol
and
add
test
add
sbb
push
push
push
mov
dec
add
push
or
cdq
or
dec
or
push
in
mov
dec
adc
pop
adc
scas
xor
aam
add
shl
fistp
push
stos
pextrw
mul
jb
adc
xchg
jb
lods
xlat
add
daa
fs
jnp
int
in
neg
ds
fs
mov
sbb
push
fs
je
daa
movs
lahf
xor
dec
sbb
inc
lds
dec
push
adc
aas
int
inc
mov
dec
fild
and
(bad)
mov
mov
mov
add
test
stc
sub
pop
add
aad
adc
or
sub
add
sbb
js
push
lods
jno
inc
push
push
xchg
sbb
ror
xchg
imul
popf
(bad)
cmp
add
mov
xor
aaa
aad
inc
mov
(bad)
imul
inc
popa
xor
jmp
jae
or
xchg
sub
jae
dec
push
jmp
push
push
add
dec
rcl
pop
inc
mov
adc
xchg
mov
jmp
sub
jmp
adc
popf
xchg
push
inc
and
sbb
sub
mov
js
push
rcl
pop
mov
inc
shr
icebp
imul
dec
scas
xchg
add
inc
movs
mov
dec
adc
cmp
xlat
add
inc
mov
loopne
push
xor
pop
push
sbb
pop
loopne
push
popa
sbb
and
mov
add
add
add
push
add
add
add
push
test
add
add
inc
add
or
sbb
enter
adc
push
repnz
adc
adc
adc
add
jns
add
add
add
inc
sub
add
add
sbb
imul
adc
xor
sbb
sbb
pusha
sbb
mov
loop
ins
push
sbb
pushf
fist
xchg
imul
inc
(bad)
(bad)
pop
xor
das
std
sbb
add
fld
adc
dec
push
sbb
push
pop
push
jg
inc
adc
mov
add
inc
pop
test
sbb
sbb
add
or
int
dec
cmps
sbb
cmp
inc
(bad)
push
dec
inc
xor
xor
mov
and
jmp
push
jge
popa
jae
add
pop
cmc
scas
clc
xor
pop
cs
out
xor
pop
mov
mov
pusha
sbb
push
dec
lea
rcl
out
add
add
daa
xor
xlat
pop
pop
les
(bad)
jbe
cli
inc
(bad)
mov
fld
mov
imul
or
fdivr
mov
jo
cmp
test
or
jnp
outs
dec
mov
sub
dec
jmp
add
add
cmc
or
adc
das
test
xor
bound
xor
fist
push
rep
add
jge
sub
jmp
add
sub
js
lods
xor
sbb
pop
inc
sbb
mov
mov
adc
mov
loop
clc
mov
or
enter
mov
jp
xor
pop
aam
repz
or
lea
dec
mov
adc
mov
cmps
and
pop
pop
cmps
mov
lock
les
push
push
sbb
mov
mov
and
jae
sub
(bad)
je
lds
je
mov
add
jbe
pop
add
add
pop
push
rcl
cmps
xchg
imul
dec
jns
or
push
add
cmp
cmp
lea
jb
pop
sahf
sub
lock
or
clc
mov
xor
push
or
dec
das
(bad)
jb
dec
jns
iret
(bad)
fwait
push
push
fwait
or
sub
fisttp
fsubr
add
and
sar
inc
loope
test
shl
pusha
fdiv
movs
les
test
pusha
add
or
adc
add
int3
movs
fwait
or
add
cs
out
xchg
cmp
add
cdq
loopne
and
pop
adc
mov
push
push
mov
inc
push
inc
test
push
and
inc
and
inc
inc
pop
pop
dec
push
mov
dec
iret
push
add
push
add
pop
mov
push
enter
loopne
add
arpl
inc
dec
sub
out
mov
mov
push
mov
push
pop
dec
jbe
ja
inc
jp
push
shl
push
aam
add
inc
test
loop
mov
jne
add
iret
lahf
aam
dec
jne
movs
fdivr
and
leave
fldcw
jmp
push
inc
inc
loope
xlat
nop
pop
xor
and
je
sbb
push
and
loop
push
lea
popa
(bad)
mov
push
add
callw
push
fst
or
mov
sti
and
je
dec
ss
out
ins
dec
inc
jmp
or
push
mov
lea
adc
nop
push
jne
pusha
cmc
in
and
push
rcr
push
mov
push
push
shr
pop
inc
call
cmp
mov
sbb
aas
je
mov
dec
inc
pop
cmc
mov
inc
loopne
add
js
out
jno
mov
inc
aas
dec
fs
in
sti
test
or
cmp
dec
loopne
loop
dec
ins
jbe
in
push
push
jnp
push
sbb
sahf
push
push
(bad)
dec
jb
sahf
xchg
sub
sub
jge
mov
mov
test
or
dec
inc
out
push
clc
pop
push
lsl
ret
mov
fmul
mov
shr
inc
mov
sub
mov
inc
aad
cmp
scas
sub
add
lds
add
add
inc
mov
xlat
mov
lahf
test
push
sbb
push
or
push
and
(bad)
es
jae
sbb
jge
and
mov
or
jl
jmp
scas
push
movs
cmp
div
mov
dec
loope
and
rcl
bound
add
daa
xchg
lahf
push
mov
or
pop
inc
dec
dec
and
shl
cmps
test
add
or
mov
add
adc
ins
call
or
cmps
lock
push
inc
xor
ds
push
mov
fild
dec
mov
inc
pop
pop
and
rcr
(bad)
(bad)
sar
fst
(bad)
jl
(bad)
call
loopne
in
pushf
(bad)
retf
cwde
in
test
dec
lock
jmp
push
fdiv
sar
sbb
fdivr
inc
dec
jne
pop
je
or
add
ja
call
popa
std
mov
jmp
and
ret
push
dec
lods
popa
mov
call
mov
inc
mov
cmp
iret
ja
fadd
fld
jg
mov
xor
cmp
arpl
sbb
or
mov
xor
pop
sbb
push
mov
call
shr
pushf
pop
and
lock
jge
mov
push
or
iret
dec
fbstp
dec
push
es
jo
push
rcl
leave
pop
popf
loope
inc
(bad)
pop
lea
push
mov
adc
sub
ja
sub
mov
adc
sti
pop
fs
xor
(bad)
out
in
out
aad
in
(bad)
sub
call
xor
ret
adc
or
js
retf
sub
xchg
mov
cld
add
mov
pushf
sub
es
or
mov
adc
pop
push
sar
scas
push
test
push
fmul
jno
clc
sbb
dec
loope
pop
pop
movzx
cmps
mov
loop
xchg
xchg
xchg
dec
mov
push
call
fs
adc
pop
je
bound
xlat
cwde
and
movq
xor
and
sbb
inc
lods
inc
cmps
imul
adc
mov
enter
ins
dec
lods
stos
sbb
inc
push
add
mov
loopne
in
pop
sub
loope
movd
rol
xchg
add
pop
aas
xor
jnp
xchg
cmp
adc
push
cmp
mov
(bad)
cli
or
jge
mov
push
adc
cmp
sub
call
jle
adc
aas
mov
add
mov
loopne
mov
or
jns
cmp
dec
dec
sub
dec
sub
or
inc
adc
lock
(bad)
or
lock
shl
inc
xchg
add
inc
arpl
loope
sub
pop
(bad)
pop
movs
imul
arpl
call
push
pop
fistp
add
push
xchg
sbb
inc
pop
into
and
out
push
popa
add
sub
adc
push
jae
mov
push
mov
(bad)
or
sub
inc
or
cld
popa
clc
adc
imul
push
cmp
imul
push
cmp
or
or
pop
add
xchg
shr
mov
sub
jp
xor
loope
(bad)
xor
or
inc
shufps
cs
pop
sbb
loope
sub
mov
popa
(bad)
std
jne
xor
int3
aaa
rcl
shl
loopne
cmps
cdq
idiv
xor
sub
inc
mov
pop
add
je
(bad)
fdiv
cli
mov
pop
mov
jmp
mov
lods
mov
mov
push
mov
and
das
add
dec
pop
or
stos
add
loop
pop
add
clc
push
(bad)
ins
aas
inc
mov
je
ja
clc
adc
scas
das
test
inc
pop
ins
sub
mov
scas
push
pusha
mov
ja
push
mov
rcl
or
aad
out
or
push
gs
icebp
add
dec
hlt
push
cwde
sub
jno
shl
or
shl
dec
adc
xchg
hlt
jae
push
mov
pop
and
mov
outs
pop
jge
inc
sub
jne
inc
sub
lock
inc
xor
dec
hlt
retf
adc
clc
mov
sar
and
xor
mov
aas
fcmovu
pop
cmp
inc
pusha
push
mov
cdq
push
or
lahf
gs
movs
nop
and
jmp
cmp
fstp
mov
daa
xchg
pop
scas
jne
stc
jmp
cmps
mov
cmp
les
test
sub
sub
rol
inc
push
fld
mov
lea
hlt
stos
pop
pslld
cmp
push
(bad)
push
jp
aas
mov
mov
nop
lea
fmul
clc
adc
cld
add
inc
scas
mov
or
push
lar
sub
call
push
add
popa
ss
jo
cli
xchg
cmp
(bad)
xor
(bad)
bound
neg
mov
(bad)
push
pop
mov
add
mul
and
jl
cs
sbb
mov
or
(bad)
shr
sar
ja
inc
inc
call
jnp
pop
neg
dec
inc
rol
pop
add
enter
and
(bad)
jmp
mov
lock
push
push
mov
nop
int3
out
xor
xchg
popf
inc
iret
lock
inc
lods
sub
xchg
add
aas
xchg
sbb
stos
dec
mov
or
inc
add
hlt
mov
or
div
dec
push
add
pop
jno
xor
jle
inc
scas
add
mov
mov
jo
and
xlat
adc
pushf
sar
dec
inc
fmul
xchg
or
pop
dec
inc
adc
jmp
adc
ret
jge
jbe
mov
add
nop
data16
pop
xor
sub
das
sub
mov
dec
es
fsubr
fisub
inc
rcr
pop
xor
lock
cmp
sbb
aam
pop
sub
sbb
in
mov
mov
or
sbb
pop
or
repz
ret
push
(bad)
mov
mov
inc
test
leave
or
mov
push
jle
jbe
rcl
jnp
je
pop
push
add
mov
push
lock
pop
inc
pop
rcr
mov
push
jmp
sub
xor
or
test
sbb
mov
rol
inc
push
nop
xchg
inc
jns
dec
scas
mov
out
add
jmp
ror
adc
push
xor
adc
mov
push
data16
loopne
aaa
mov
ret
inc
xlat
jmp
imul
and
cmp
pop
lea
scas
jae
nop
lds
inc
or
fnstenv
push
(bad)
sbb
jg
mov
fsubr
and
mov
test
aaa
rcl
xchg
(bad)
sub
add
ins
ja
xor
inc
(bad)
xor
imul
lahf
adc
add
div
retf
or
add
inc
inc
inc
add
xchg
or
clc
pop
nop
jmp
out
movzx
shl
adc
inc
pop
or
push
adc
ret
or
push
sbb
sbb
or
or
out
jecxz
cmp
cmp
in
mov
cmp
dec
jmp
fsubr
sub
loopne
sbb
sbb
enter
popf
mov
enter
xor
clc
loope
lock
scas
xor
xor
data16
jae
mov
aaa
inc
sub
jecxz
and
or
inc
retf
pop
mov
(bad)
cmp
cld
jb
clc
cdq
add
jbe
loope
jo
push
hlt
pop
jae
iret
neg
dec
retf
jne
mov
add
scas
std
repz
in
inc
mov
add
test
add
pop
data16
jmp
cmp
jae
jbe
add
adc
ret
add
shl
lahf
hlt
aaa
sub
retf
cmp
ja
sar
stc
pop
bound
sbb
mov
add
push
mov
push
int3
sbb
hlt
mov
mov
add
loopne
les
or
mov
jb
adc
data16
sar
push
js
inc
dec
jne
mov
mov
xor
dec
loop
in
push
sar
cmp
dec
sti
mov
mov
bound
cmp
icebp
call
loopne
jo
sar
cdq
rcl
add
fdivr
add
push
jp
movzx
inc
adc
jmp
rol
jecxz
mov
lock
loop
mov
jne
call
pop
stc
push
add
and
(bad)
push
loopne
mov
push
add
ror
or
int
ds
sub
clc
add
or
fs
and
xchg
aas
mov
test
sbb
inc
test
push
or
movs
mov
test
dec
xor
popf
test
mov
mov
retf
pop
je
nop
test
xchg
out
sti
popf
pushf
push
mov
inc
inc
nop
xchg
mov
cmp
aam
xor
daa
jne
cmp
test
hlt
and
or
movs
mov
jne
and
fs
gs
stos
loopne
jb
scas
push
cwde
jp
sbb
pop
hlt
pop
jmp
adc
mov
pop
scas
xchg
push
sub
shr
jmp
dec
fdiv
les
xchg
pop
popf
cmps
lods
fld
or
add
hlt
test
mov
mov
lahf
cmovbe
mov
test
out
mov
inc
sbb
or
xchg
fcomp
adc
arpl
dec
jne
add
push
adc
(bad)
aam
ins
pop
pop
xlat
mov
cmp
es
addr16
adc
shl
into
push
push
retf
aaa
push
hlt
ror
inc
xchg
push
lahf
lock
(bad)
dec
lahf
stos
and
sub
mov
and
aas
mov
pop
xchg
mov
xchg
aas
mov
sub
fcmovbe
cmps
pop
and
loopne
nop
mov
lahf
and
sub
mov
and
mov
(bad)
daa
and
pop
(bad)
adc
xor
mov
dec
push
clc
cmp
adc
add
add
jb
or
sbb
pop
dec
sbb
push
or
sub
jmp
sub
mov
aam
xchg
or
sub
aaa
ins
pusha
(bad)
iret
sbb
iret
add
sahf
test
daa
pop
sbb
iret
(bad)
hlt
mov
cmps
mov
jns
in
or
imul
mov
mov
test
push
xor
mov
clc
shr
push
dec
cmp
add
jae
cmp
adc
jne
popf
aad
add
imul
and
daa
adc
push
lea
cmp
jmp
push
sub
ficom
mov
sbb
les
cmp
add
mov
in
or
pusha
cmp
js
jmp
scas
mov
scas
sbb
les
dec
pop
imul
shr
mov
sbb
sbb
cmp
ins
xor
xchg
jne
xor
inc
outs
jmp
mov
mov
lods
cwde
push
adc
dec
mov
or
(bad)
cdq
aas
mov
add
cmps
bound
das
fild
mov
cmp
jo
jae
mov
cs
mov
and
aaa
pop
rcr
add
sub
popa
and
fld
test
(bad)
dec
(bad)
loopne
cmp
mov
mov
lea
fimul
and
rcl
call
out
add
test
mov
inc
hlt
and
or
int
xchg
or
or
xor
std
push
call
jl
cwde
daa
ret
mov
imul
mov
xor
or
cmp
push
sub
xor
push
ds
in
popa
push
cmp
test
dec
dec
lahf
lods
push
xchg
dec
and
jmp
cmps
xor
add
sbb
mov
inc
push
clc
mov
popa
and
inc
push
mov
dec
dec
pop
(bad)
call
mov
icebp
sub
fs
mov
or
jmp
loopne
add
nop
adc
shl
fsubr
ins
add
mov
cmp
jnp
ffree
je
jno
jmp
inc
lock
clc
loope
mov
sbb
movs
add
xor
fcomip
add
clc
mov
add
dec
jl
push
ret
rol
call
and
sub
sub
pusha
inc
fild
mov
inc
fbstp
mov
push
mov
adc
imul
mov
movs
cmp
adc
mov
inc
imul
add
adc
xor
popa
mov
in
aad
test
or
test
inc
mov
loopne
test
or
nop
nop
adc
jo
fs
int3
xor
mov
nop
adc
xchg
hlt
xchg
je
adc
adc
or
fwait
xor
dec
xchg
dec
and
jl
and
pushf
rol
push
clc
ja
enter
lock
lock
mov
cmp
std
loop
xor
xchg
mov
sbb
sub
out
mov
int3
mov
bound
dec
push
fimul
sub
inc
cmps
pop
or
dec
jne
movs
(bad)
dec
or
push
ret
das
jl
jo
lods
scas
lock
neg
enter
psubusb
inc
fsub
xor
or
dec
pop
mov
ins
and
mov
rcl
dec
mov
imul
cmp
push
and
das
popa
xor
xor
push
adc
pop
in
hlt
enter
outs
push
inc
mov
mov
and
hlt
pop
ret
aad
push
mov
sbb
inc
(bad)
fnsave
mov
push
rcr
(bad)
xor
mov
rcr
inc
mov
cmp
stc
mov
mov
scas
or
jle
mov
mov
add
mov
sub
pusha
inc
xchg
or
pop
push
out
aas
in
sub
inc
cmps
adc
inc
dec
cmp
push
outs
test
fidiv
or
and
aas
add
dec
or
add
pop
xor
cli
inc
add
add
jecxz
push
das
and
xor
mov
outs
dec
sub
fild
jae
mov
pop
ja
fdiv
div
jne
cmp
ret
int3
jbe
and
lock
aam
or
xor
jne
adc
or
pop
add
hlt
int
and
shl
sub
js
in
mov
sub
dec
dec
and
adc
inc
pusha
outs
cs
cmp
inc
add
ret
jg
lods
inc
push
cmp
jne
cmp
mov
adc
cwde
adc
or
cmp
cmp
adc
adc
and
adc
pop
sbb
mov
in
jg
and
je
cmp
xor
fisubr
or
ror
add
dec
mov
mov
jp
sti
ret
and
dec
in
adc
pop
sbb
sbb
add
mov
repnz
popf
inc
mov
or
aad
sbb
ret
lds
mov
dec
in
aas
push
lock
popa
in
imul
jne
int3
les
jns
push
inc
dec
jne
out
es
pop
sub
sub
clc
aad
add
ins
das
push
push
sub
pop
mov
call
xchg
jp
ss
daa
sbb
mov
(bad)
push
mov
int3
jae
enter
xchg
xor
jmp
sahf
jae
add
push
cmc
sub
or
adc
mov
sub
mov
pushf
cwde
ror
jae
in
push
fild
xor
sub
or
adc
adc
dec
pop
jmp
inc
or
out
push
sub
out
retf
stc
xchg
js
sub
or
push
add
xor
or
popa
aam
xchg
sbb
or
pop
idiv
sub
push
jl
repz
xchg
inc
and
xor
rol
add
or
(bad)
lods
xor
retf
jp
rol
push
ss
in
sub
(bad)
inc
cld
mov
(bad)
dec
icebp
inc
imul
push
and
dec
cmps
and
outs
dec
inc
pop
je
or
aas
push
lock
daa
inc
or
call
or
in
inc
pop
and
leave
inc
arpl
je
in
stc
std
jo
idiv
mov
in
test
sub
fcmovnb
mov
add
mov
call
cdq
or
iret
jne
xchg
in
mov
not
sub
mov
je
xchg
mov
xor
clc
div
mov
(bad)
mov
fdiv
mov
pop
out
push
loopne
cld
pop
xor
or
imul
in
dec
into
dec
loopne
add
add
add
add
ret
mov
add
cmp
cmp
rol
shr
out
pop
or
sub
add
xor
lahf
sub
retf
jo
leave
je
pop
push
loop
jnp
movs
mov
daa
cmp
inc
mov
(bad)
jo
aaa
nop
pop
sub
pusha
imul
pop
cmp
sub
rcl
pop
dec
mov
(bad)
fnstcw
inc
mov
xchg
loope
sub
and
neg
mov
in
mov
cmp
sbb
sbb
ret
nop
out
(bad)
dec
rcl
and
pusha
mov
jbe
xchg
fcomp
js
cmp
xchg
sub
pop
outs
rol
int3
xchg
(bad)
in
xor
cmps
and
not
add
nop
sbb
pop
shl
ja
inc
test
hlt
push
das
mov
or
je
iret
inc
or
add
xor
xlat
sbb
imul
fs
xor
lds
(bad)
leave
dec
inc
mov
dec
xchg
inc
cdq
push
mov
cmp
cs
shl
jecxz
jmp
add
pop
imul
and
ins
mov
fwait
adc
push
fld
and
(bad)
out
push
rcl
pop
push
rol
sbb
repnz
gs
fisttp
movs
test
mov
pop
and
xor
sub
jne
jle
inc
adc
or
sbb
mov
add
cwde
or
mov
stc
fmul
mov
jbe
and
xchg
lock
int3
cmp
loopne
or
lock
fwait
jmp
ret
pop
jbe
inc
push
add
shr
adc
push
les
cld
cmp
inc
dec
add
dec
test
push
xchg
mov
das
mov
je
xchg
cdq
js
(bad)
mov
daa
movs
mov
push
daa
lock
mov
clc
sub
push
sub
adc
lods
cmps
sub
mov
push
lock
jecxz
add
or
xor
lods
and
das
pop
push
xlat
inc
sub
out
inc
xchg
mov
xor
xor
add
fstp
mov
retf
cli
inc
mov
(bad)
fstp
cmp
push
push
mov
push
or
mov
add
and
imul
inc
imul
in
mov
shr
mov
push
xchg
stc
scas
test
mov
test
or
dec
add
sub
or
in
jle
add
js
inc
cmp
fs
push
mov
bound
enter
pusha
or
sub
mov
push
mov
pop
xchg
js
adc
fsubr
adc
adc
ins
xchg
dec
and
xor
or
gs
ror
int3
mov
rcl
dec
or
dec
dec
js
and
call
adc
mov
inc
pop
inc
pop
or
mov
push
mov
aaa
jo
fmul
xchg
or
xor
jo
xor
xchg
movs
loopne
cmc
mov
sbb
jmp
leave
add
pop
push
outs
pop
inc
push
in
aaa
shl
or
aad
stos
dec
mov
fisubr
into
fsubr
inc
cmps
fmulp
inc
dec
jne
aaa
fadd
or
adc
cmc
stos
mov
jmp
mov
sar
rol
add
sub
test
dec
xor
out
inc
loopne
jmp
pop
jo
hlt
mov
cld
loope
pop
dec
ins
pop
adc
dec
call
or
or
pop
jg
or
inc
hlt
push
push
arpl
or
(bad)
cmp
jg
ret
adc
mov
add
jns
add
pop
or
rcr
mov
add
push
rdtsc
pop
dec
add
adc
ror
mov
mov
xor
cld
mov
ret
fst
pop
enter
addr16
xor
movs
sbb
pop
xor
sar
iret
clc
dec
jle
mov
jg
jge
sbb
sub
lock
mov
in
cmp
jne
add
dec
jne
jnp
sub
out
aas
mov
in
sub
je
pop
outs
in
lea
outs
xchg
sahf
mov
lods
ds
cmp
sub
mov
(bad)
stc
pop
push
cmp
jo
aas
out
sbb
push
and
inc
dec
mov
rol
pop
mov
retf
fld
xor
dec
ftst
and
(bad)
ret
xlat
les
ror
fdiv
lock
or
or
and
out
adc
daa
ins
fist
dec
cli
out
cmp
add
inc
test
js
rcl
call
jns
mov
lock
repz
mov
jecxz
add
or
adc
xchg
xor
lds
adc
hlt
add
add
or
ins
or
cmp
daa
add
gs
or
jne
mov
add
fwait
add
or
xchg
mov
dec
cmps
xchg
nop
adc
xor
push
push
aaa
xor
cmp
add
or
fst
in
xchg
pusha
cmps
cmp
rol
neg
stos
jmp
ja
(bad)
push
cmp
jge
xor
lahf
lock
xchg
in
ins
dec
ror
cmp
inc
inc
jne
nop
sbb
cs
push
jo
cmp
xchg
inc
sub
pusha
push
cmps
rcr
daa
add
xor
push
jmp
mov
cmp
inc
enter
imul
xor
pop
lahf
shr
call
jne
xchg
cmp
sbb
cmp
aaa
sbb
daa
push
sbb
add
xor
and
ja
jne
xchg
and
jnp
scas
in
sbb
jmp
lds
add
push
popa
cmp
retf
xchg
or
jmp
cli
or
retf
xchg
cld
mov
jmp
imul
sbb
xor
pushf
aaa
mov
pop
imul
push
adc
inc
dec
jecxz
cmp
push
std
lea
jne
pop
in
jo
inc
out
jg
add
sub
pop
loopne
jo
dec
add
inc
mov
ret
nop
xlat
scas
mov
leave
or
ins
loope
test
dec
rol
pusha
cmp
jne
mov
pusha
popa
cwde
data16
mov
outs
pusha
arpl
or
mov
inc
jmp
into
mov
jne
mov
clc
dec
in
int3
cwde
(bad)
iret
ret
adc
pop
sub
loope
les
sbb
push
aaa
fiadd
(bad)
adc
sub
push
js
or
popa
add
adc
pop
xor
ror
mov
retf
cdq
int3
inc
or
(bad)
jmp
rcl
push
in
call
(bad)
out
inc
jb
xchg
bound
lea
call
adc
mov
test
enter
dec
push
mov
arpl
pop
add
adc
push
pop
xor
push
rol
mov
push
or
mov
push
xlat
add
daa
lods
xchg
xor
dec
movs
or
pop
or
pop
adc
data16
movs
adc
push
movs
mov
ffreep
popa
sub
dec
add
xchg
jmp
test
pushf
adc
inc
js
test
ret
sub
(bad)
xchg
pusha
test
cwde
mov
cs
pop
rcl
sub
popf
icebp
add
mov
mov
jo
retf
push
stc
fdiv
add
push
movs
mov
adc
sub
inc
call
inc
sbb
gs
push
or
cmp
test
gs
je
ret
sahf
mov
jnp
jecxz
fsubp
in
and
xor
ja
cmp
into
jnp
out
push
push
data16
push
push
push
ror
sbb
gs
pop
sbb
xchg
sbb
mov
jno
enter
mov
cmc
dec
pop
data16
movs
cmp
(bad)
scas
pop
fistp
lea
or
dec
jne
mov
push
cdq
scas
loopne
fnstenv
shl
push
popf
push
mov
jb
ja
inc
repnz
add
add
add
loopne
dec
mov
adc
into
mov
js
arpl
add
mov
aaa
dec
stos
aaa
sub
les
adc
mov
dec
dec
outs
cmps
stc
ret
cs
pop
mov
popa
popf
or
shl
push
ins
jo
push
xchg
inc
add
fdivp
and
je
cmps
jo
dec
iret
jmp
dec
(bad)
and
inc
lock
shl
jbe
xor
pop
xor
imul
xchg
or
xor
pop
mov
sub
inc
jne
dec
fiadd
or
ja
cwde
(bad)
xchg
xor
sub
push
jo
nop
mov
ins
mov
pop
dec
and
inc
imul
mov
fs
pop
psrlq
lock
mov
imul
(bad)
sbb
call
add
jae
jnp
mov
jmp
jp
add
push
push
in
add
xchg
and
dec
add
sub
or
dec
dec
inc
add
movs
jo
or
ins
add
push
push
inc
pop
pop
push
jmp
or
push
arpl
cs
push
mov
imul
pop
push
cmp
les
cmps
or
sub
adc
stos
pop
xor
xor
push
cmp
jp
and
inc
add
invlpg
(bad)
(bad)
dec
cwde
xchg
push
cmc
mov
inc
cmps
or
imul
add
or
test
adc
push
daa
adc
or
push
adc
push
dec
mov
jmp
pop
jnp
stos
push
fcmovnbe
jmp
or
cmp
inc
in
push
jecxz
or
or
mov
push
pop
or
or
andps
lds
sbb
mov
or
cmp
stos
push
or
call
pop
push
add
mov
inc
mov
xchg
str
ja
(bad)
out
dec
int
cwde
dec
adc
mov
fist
add
fisttp
push
dec
test
add
enter
fdivr
and
dec
enter
imul
neg
sbb
enter
jge
adc
pop
sub
es
outs
daa
and
fwait
das
xchg
push
push
(bad)
lock
(bad)
mov
rcr
cmp
dec
(bad)
pop
ins
cmc
jmp
add
sub
add
popa
xor
cmp
adc
jbe
adc
rcr
fwait
or
out
outs
shr
div
push
sar
pushf
pushf
int3
mov
jne
out
test
push
sbb
fwait
dec
cwde
fdivp
jb
test
leave
mov
daa
lea
add
imul
ins
add
out
jo
sar
sub
push
add
sub
mov
sub
shl
and
inc
pop
adc
arpl
jecxz
push
dec
mov
or
pop
inc
jge
sbb
loop
jp
add
jge
adc
mov
or
gs
xchg
es
mov
add
fisub
add
mov
jge
add
cld
sub
pop
or
mov
retf
and
mov
xchg
arpl
sbb
add
add
dec
push
(bad)
jbe
call
daa
movs
daa
int
dec
dec
dec
mov
in
xchg
xchg
rol
dec
mov
jp
jl
add
pop
aas
dec
cmps
add
lods
inc
add
pop
jnp
adc
icebp
fmulp
add
push
mov
mov
mov
call
push
cmp
xchg
adc
push
mov
jp
sbb
jno
mov
sub
and
out
mov
mov
and
loope
leave
sub
or
mov
das
in
sbb
je
jo
pop
daa
sbb
xchg
je
test
xchg
mov
xchg
retf
xchg
nop
call
fbld
cmp
mov
pop
xchg
movs
xchg
fst
dec
and
push
or
fist
rcl
iret
ret
nop
push
adc
push
jno
inc
call
aas
push
inc
jne
sbb
inc
sbb
jge
push
sub
mov
lea
dec
je
adc
mov
push
mov
clc
or
jne
and
mov
jbe
adc
xchg
xchg
fist
push
fsub
push
adc
dec
retf
in
push
ja
or
les
int3
push
or
cmp
cmp
pop
mov
and
dec
nop
pop
outs
(bad)
mov
fisub
mov
jp
fs
or
mov
jl
or
sub
lock
and
in
or
jl
sub
scas
mov
sbb
jge
xor
aam
add
xchg
adc
mov
aad
adc
out
add
add
nop
retf
and
add
pop
pop
in
enter
or
sbb
cmp
cmp
inc
xchg
dec
and
and
jb
in
ins
js
jo
jb
in
add
repz
or
or
fcomp
push
pop
and
cmc
das
adc
arpl
fwait
push
jbe
xchg
clc
shl
cmp
fdivr
shl
inc
sbb
pusha
push
inc
lds
out
dec
xchg
clc
in
std
inc
push
mov
lock
dec
int
int3
or
repnz
dec
enter
in
popa
add
add
xchg
xchg
add
pusha
popa
addr16
and
pop
add
adc
(bad)
icebp
ja
jae
mov
in
lock
dec
inc
es
xor
or
nop
mov
lock
test
jmp
clc
add
leave
adc
sub
clc
inc
or
outs
stc
ja
or
cmp
jne
add
mov
pop
popa
pusha
pop
sbb
xor
imul
jns
pop
cmps
cmp
add
inc
enter
or
xchg
add
repnz
add
jp
jl
test
adc
icebp
repz
push
sbb
cli
jp
and
pop
addr16
inc
ret
test
mov
adc
add
cmp
and
test
xor
or
addr16
add
nop
push
add
in
xor
pop
mov
cmp
or
mov
std
jg
dec
add
dec
mov
jne
or
dec
adc
jbe
loop
inc
idiv
aaa
mov
push
adc
or
sar
ret
leave
sub
pop
(bad)
fadd
and
scas
mov
xchg
inc
fwait
fwait
(bad)
pop
sub
sub
out
inc
push
inc
or
add
mov
inc
je
into
jge
cmp
test
out
inc
jle
push
js
inc
jnp
push
jle
cmp
lock
xor
nop
or
mov
add
or
cwde
inc
pop
cmp
xchg
inc
jecxz
pop
add
or
dec
(bad)
adc
inc
mov
mov
gs
inc
pop
dec
mov
jg
push
add
pop
cmps
pop
jne
shr
in
fmul
push
add
and
mov
mov
pushf
fsub
dec
jl
movs
push
add
inc
or
xchg
xchg
std
es
popf
or
and
add
cmps
jne
je
pop
mov
lods
fidiv
sbb
ins
dec
sbb
bswap
leave
leave
leave
scas
scas
nop
xchg
leave
leave
leave
leave
xchg
xchg
xchg
xchg
leave
leave
leave
leave
xchg
xchg
cwde
cdq
leave
leave
leave
leave
call
leave
sahf
lahf
xor
jne
pop
imul
xchg
xlat
imul
or
sub
out
sbb
and
fs
dec
lahf
pop
xor
sbb
jae
rcr
jb
push
xchg
mov
sbb
push
shl
adc
xor
sub
ret
sbb
aad
dec
ins
pop
xor
das
push
pop
xor
enter
xor
ja
push
cmp
fild
inc
xor
dec
loopne
(bad)
aas
add
stos
adc
xor
frstor
test
ins
(bad)
and
test
mov
cld
or
mov
gs
outs
jb
(bad)
fld
cdq
pop
pop
and
xchg
dec
xchg
ins
popa
adc
cs
fsub
push
imul
ins
xor
sbb
and
add
or
inc
jo
xchg
inc
mov
dec
mov
test
pop
les
retf
add
adc
push
add
adc
dec
lods
pop
sub
jbe
nop
test
test
push
add
fstp
inc
iret
pop
sub
je
imul
fld
pop
xor
ss
add
dec
inc
push
iret
pop
jo
shl
sbb
inc
or
das
jmp
leave
dec
imul
or
ins
gs
mov
call
fild
rcr
loopne
mov
xsaveopt
push
add
pop
dec
dec
inc
xchg
sar
push
and
and
xchg
pop
pop
clts
push
adc
cmp
push
adc
xlat
add
scas
jbe
xor
mov
loopne
mov
pop
adc
sbb
adc
out
imul
shl
loopne
jg
pop
aam
(bad)
loopne
or
dec
xor
ror
dec
jb
je
add
sti
iret
pop
sub
inc
lock
setb
loopne
mov
(bad)
adc
in
mov
fs
shl
mov
mov
cmp
stos
loopne
cmovbe
adc
xor
sub
push
or
sbb
cmp
lahf
adc
pop
cmp
inc
xor
add
mov
push
(bad)
mov
inc
xor
push
fstp
in
push
cmp
mov
(bad)
in
pop
int3
psrld
adc
imul
and
xlat
pop
xor
les
pushf
pushf
pop
enter
mov
test
cmp
mov
iret
pop
sub
test
mov
push
addr16
cmps
sbb
pushf
(bad)
adc
imul
ror
sbb
cmp
out
inc
cmp
(bad)
mov
pop
or
pusha
add
adc
mov
push
(bad)
mov
mov
add
jg
mov
les
pop
int3
ret
outs
psrld
and
mov
inc
jo
(bad)
xor
adc
(bad)
mov
pop
inc
dec
sub
push
or
add
or
inc
rol
imul
sub
bound
push
mov
add
push
(bad)
cmp
arpl
cmp
jo
ins
xor
push
or
sub
jp
or
pusha
popa
inc
dec
ficomp
lahf
mov
enter
push
cmp
ror
pop
mov
aaa
movs
add
inc
adc
inc
ror
jle
adc
outs
imul
not
inc
(bad)
adc
test
adc
popa
mov
nop
(bad)
je
lock
pop
es
add
dec
sbb
pop
xchg
push
clc
ins
mov
data16
pusha
and
sahf
movs
inc
push
stos
mov
stos
adc
add
js
call
shr
ss
lds
test
fbstp
(bad)
dec
pushf
add
fisttp
outs
cmp
dec
ins
add
pop
xchg
or
jge
lods
mov
jle
retf
xlat
(bad)
mov
sbb
push
adc
push
ret
clc
bound
adc
movs
mov
fwait
dec
adc
xchg
pop
dec
das
jbe
out
stos
nop
cmps
aaa
push
nop
push
jns
mov
imul
sbb
add
add
cmp
add
fs
jb
adc
add
xchg
push
xor
aam
or
mov
mov
jbe
jge
daa
push
fadd
jge
test
aam
jae
xor
(bad)
jp
push
(bad)
mov
ins
ins
ins
das
test
xor
pop
or
test
(bad)
shl
push
add
add
sub
lods
arpl
ins
cwde
in
add
mov
mov
push
js
jmp
jle
ffree
jge
call
pop
mov
mov
ins
aaa
shl
mov
push
add
add
ins
cdq
or
inc
add
push
cmp
xor
add
int
or
fisubr
push
jo
or
add
pushf
sbb
pop
adc
div
mov
das
and
and
mul
je
das
dec
xchg
lock
sub
dec
jl
dec
mov
out
and
inc
and
push
les
xchg
dec
pop
imul
push
inc
adc
pushf
push
sub
cwde
or
dec
pop
sti
add
cmps
sub
push
sub
ins
hlt
pop
push
cld
sub
mov
int3
fcomp
pusha
jge
xor
xor
sbb
jl
jnp
sub
ds
mov
sub
out
rcl
or
add
lds
loop
inc
xor
or
daa
cmp
add
mov
test
mov
mov
xchg
inc
or
sbb
mov
pop
cs
adc
xor
or
inc
push
dec
cdq
mov
(bad)
adc
sbb
cli
cmp
movs
cmp
data16
inc
push
adc
add
inc
add
mov
pop
ins
xchg
mov
rcr
dec
outs
jae
enter
xchg
bsr
out
cmp
jnp
pop
loop
out
leave
ins
neg
add
das
fwait
bswap
es
push
movhps
or
pop
ss
fwait
sbb
data16
add
fwait
cmc
push
fdivr
pushf
prefetchnta
outs
dec
xor
popf
addr16
push
loop
mov
pop
sbb
nop
clc
inc
inc
inc
mov
add
test
add
adc
push
lods
inc
push
or
pop
xor
adc
xchg
fdivr
lock
jo
popa
popf
test
add
mov
(bad)
jmp
arpl
lock
je
pop
je
inc
cmp
fdiv
jmp
add
fbld
add
fadd
push
sbb
xchg
addr16
pop
jo
mov
outs
jp
inc
adc
sbb
popa
mov
int
repnz
movs
frstor
mov
push
sub
xor
or
dec
mov
add
shl
and
add
add
clc
or
in
cmp
jbe
add
jae
or
inc
cmp
and
adc
push
imul
enter
push
sub
fnstcw
mov
sbb
push
nop
jno
pop
add
or
aas
pop
xchg
adc
xchg
sub
ins
and
inc
inc
bound
and
test
inc
out
in
add
aas
imul
mov
add
push
mov
imul
sbb
pop
or
cmp
dec
adc
loop
add
add
lods
mov
adc
adc
xchg
add
xor
xor
adc
xor
add
jle
push
arpl
mov
cmps
das
push
cmps
inc
fcom
mov
pop
dec
cmp
out
push
mov
ror
cld
fs
and
arpl
cmp
mov
push
imul
sbb
jp
push
and
xor
cli
pop
push
pop
add
bound
ja
and
inc
add
repz
cli
xor
inc
and
bound
rol
inc
mov
arpl
mov
add
mov
jnp
push
or
test
je
inc
inc
inc
add
xor
mov
bound
in
inc
ret
adc
movs
lea
dec
inc
popa
call
test
adc
jmp
call
push
aas
xchg
or
or
cld
mov
inc
test
add
mov
sbb
add
jge
ins
inc
xchg
pop
jge
(bad)
(bad)
add
inc
pop
pop
mov
xor
inc
pop
ins
sub
inc
mov
push
sbb
sbb
or
sub
push
push
sbb
mov
sub
test
mov
add
or
or
and
push
or
in
pop
adc
sbb
rdpmc
adc
push
cmp
mov
and
and
aaa
repz
test
lods
or
imul
inc
adc
test
push
pusha
test
mov
push
or
mov
fst
retf
or
cmps
ss
push
add
icebp
add
xor
(bad)
xlat
imul
cmp
xor
popf
sbb
sub
dec
mov
xchg
lahf
or
add
dec
loopne
gs
cmp
mov
ins
jo
jns
jmp
pop
int3
sbb
sbb
rol
sbb
xchg
add
push
mov
test
cmp
xor
add
dec
sbb
pop
xchg
fsub
sub
sbb
pop
shr
push
xchg
ret
sub
outs
push
(bad)
int3
push
int3
iret
add
aaa
sub
into
dec
add
push
aam
and
scas
or
add
shl
neg
mov
jb
xor
or
push
dec
add
mov
jbe
mov
sahf
mov
push
js
mov
inc
xchg
add
push
or
std
add
jecxz
jns
movs
mov
push
jmp
or
sub
popa
or
stos
xlat
or
jmp
push
test
xor
loope
inc
add
xchg
ret
pusha
pop
adc
lods
loopne
bound
mov
jo
fwait
add
ret
or
xor
jbe
or
push
stos
ret
adc
inc
fsub
ja
lds
pop
pop
enter
adc
xor
xchg
xchg
xchg
fld
xchg
or
sbb
adc
jnp
int3
leave
add
jo
jne
add
mov
in
push
sub
test
fwait
cmp
aad
rol
mov
inc
cmp
pushf
retf
cmp
mov
lahf
out
mov
mov
pop
je
dec
inc
dec
inc
fild
and
pop
adc
and
lock
cld
dec
push
or
or
jg
add
xlat
xchg
jnp
add
mov
outs
cmp
inc
movs
pop
xor
or
dec
mov
imul
push
jbe
or
das
or
pop
pop
sbb
mov
(bad)
dec
adc
cli
das
daa
bound
sub
rcr
div
xchg
push
jl
push
lock
or
jle
or
shl
aaa
int
sub
outs
repnz
arpl
inc
sbb
test
shr
add
cmps
cmp
add
mov
psubsw
nop
pop
jo
or
jge
test
xor
test
sti
shl
in
fidiv
or
push
or
ss
mov
push
mov
push
mov
or
mov
pop
xor
pop
xchg
cmove
test
add
sub
in
add
push
out
test
cmp
ja
loop
pop
mov
add
aad
sub
xchg
push
repnz
add
pusha
test
popa
push
push
push
cmps
push
pushf
mov
data16
or
sbb
adc
sbb
aad
arpl
xchg
jmp
sub
add
call
in
jne
fnstsw
pop
ss
aas
(bad)
neg
and
cmp
(bad)
idiv
cmp
inc
(bad)
idiv
bound
mov
arpl
push
mov
fs
fs
mov
stos
dec
ret
lock
bound
bound
loope
or
or
pop
pop
adc
jo
ss
stos
xor
loopne
stos
aas
hlt
enter
cmc
mul
cmc
das
adc
push
ins
sub
push
adc
and
cmp
add
shl
sahf
stos
push
push
sbb
cwde
loopne
sbb
pop
add
cli
jne
add
lods
cmc
jge
mov
lods
aad
dec
pop
jae
sub
mov
adc
imul
and
sbb
push
scas
loopne
ret
mov
inc
add
lods
cmc
or
add
push
nop
push
movs
dec
adc
pop
clc
lods
adc
or
xor
cmp
daa
es
dec
pop
inc
lods
aas
scas
pop
adc
ucomiss
xor
and
jle
mov
icebp
pop
into
mov
cmp
int
adc
addr16
dec
inc
mov
pusha
mov
sub
or
push
xchg
add
ss
mov
scas
or
mov
xchg
scas
mov
lods
daa
add
sub
inc
scas
or
add
and
xchg
add
call
mov
es
shl
jmp
out
jg
add
pop
xchg
sub
into
es
sub
jmp
cmps
js
enter
jp
push
lds
mov
mov
pop
in
mov
ret
pop
and
inc
mov
sub
inc
enter
call
das
xchg
mov
add
sub
pusha
xor
dec
cmp
pushf
dec
cmp
or
jnp
mov
shl
push
inc
mov
scas
dec
jbe
push
rol
cmp
test
cmp
mov
dec
cmp
inc
add
sbb
addr16
(bad)
or
push
iret
push
mov
or
popa
popf
cmp
ja
pop
jp
xchg
push
jno
jmp
(bad)
mov
cmp
js
je
dec
push
pop
fistp
setne
push
mov
cmp
push
jmp
mov
ret
fidivr
pop
push
data16
push
(bad)
sbb
out
movsx
pop
adc
cdq
fcmovnb
fisubr
mov
mov
jecxz
or
enter
push
mov
mov
push
out
mov
dec
inc
mov
push
sub
iret
adc
cmp
out
nop
adc
mov
sbb
cmp
and
xchg
and
pusha
rcr
and
mov
add
or
sbb
mov
sub
sub
push
test
jl
cmp
mov
mov
pop
(bad)
lds
repnz
mov
les
sub
mov
mov
pop
xor
push
mov
sbb
mov
push
push
and
jno
add
out
into
iret
(bad)
icebp
inc
sbb
mov
pop
pop
fisttp
xor
gs
jb
push
push
dec
outs
outs
je
sub
or
and
in
jns
pop
or
ja
gs
outs
jne
movs
sub
imul
stos
and
mov
jo
adc
bound
adc
pop
dec
dec
inc
pop
dec
mov
inc
enter
inc
into
add
add
(bad)
xor
cmp
push
aam
fdiv
mov
push
mov
test
xchg
je
fs
mov
add
bound
cmp
sub
(bad)
push
aas
add
mov
pop
or
addr16
idiv
inc
stos
nop
sbb
js
adc
sbb
cmps
test
and
jnp
push
lock
test
jp
cmps
das
and
out
xor
push
sbb
shl
jne
dec
pop
retf
imul
sbb
xor
push
mov
in
in
xchg
lea
imul
pop
repz
in
leave
and
leave
and
es
aas
push
adc
pop
(bad)
dec
mov
loopne
mov
test
xchg
or
into
add
mov
adc
add
sub
sub
(bad)
mov
pop
mov
mov
in
mov
push
xor
and
pop
push
rol
xchg
cmp
mov
mov
mov
and
mov
movs
mov
push
(bad)
mov
or
jge
movs
add
mov
scas
dec
mov
inc
or
dec
add
sub
push
inc
or
add
xor
sub
pop
push
add
mov
fst
inc
mov
mov
fcmovb
(bad)
mov
pop
rcr
aam
lods
inc
mov
retf
push
or
and
cdq
jl
jae
or
data16
call
inc
aam
in
popa
lahf
sub
fwait
push
mov
pop
sbb
inc
(bad)
test
jne
mov
mov
push
fdiv
add
dec
in
cwde
shl
call
cmp
rol
fadd
add
xor
enter
out
inc
fdivr
ror
xchg
push
push
movnti
mov
adc
or
sub
bound
pop
dec
and
loopne
and
ins
outs
cmps
aaa
cmp
xchg
and
adc
outs
sub
cs
idiv
test
mov
call
inc
je
shr
xor
jmp
adc
out
add
rol
fs
call
mov
rol
add
pop
and
cmp
sub
and
sub
mov
sub
inc
xor
popf
call
or
xor
and
rcl
pop
fldpi
or
jp
dec
jne
cmp
retf
and
mov
mov
fnsave
dec
add
or
add
and
cld
(bad)
jl
cmp
jl
or
(bad)
jl
push
push
and
add
enter
cmp
xor
data16
dec
or
jl
mov
shr
mov
rcr
push
ror
in
mov
ret
sar
or
cli
add
add
ins
(bad)
dec
mov
sar
daa
cmp
shr
add
sub
adc
adc
dec
inc
adc
nop
mov
je
outs
mov
mov
cmps
and
pop
pop
mov
call
mov
add
je
xor
add
sub
mov
pop
add
jmp
mov
(bad)
mov
enter
mov
mov
scas
sbb
and
movs
lods
cwde
mov
stos
push
jb
cmp
hlt
mov
and
(bad)
fs
add
lock
push
adc
xchg
shl
popa
cwde
iret
cmp
rcl
lahf
add
ror
adc
lea
aaa
dec
xchg
fdiv
pop
or
arpl
jmp
enter
add
mov
call
inc
or
add
movs
cmp
in
add
mov
outs
inc
ja
call
mov
add
cmp
push
cmp
shl
mov
sahf
cdq
shr
aaa
mov
imul
lea
fmul
mov
inc
or
inc
and
cwd
adc
and
or
jno
pop
pop
out
aam
arpl
sub
test
rcr
daa
mov
dec
add
sar
loop
add
or
movs
xchg
fimul
(bad)
enter
mov
sar
test
movs
and
xor
out
ror
mov
jge
pop
or
push
sbb
add
fwait
pop
jmp
or
(bad)
sbb
out
sub
mov
fwait
fs
lods
add
neg
jge
add
cwde
cwde
adc
inc
add
or
cmp
shr
adc
test
and
mov
ret
mov
cmps
cdq
ja
sub
(bad)
mov
mov
call
or
dec
mov
or
lds
outs
test
mov
cmp
movs
and
pop
mov
push
imul
adc
test
xor
les
jp
sub
push
push
shl
nop
xchg
inc
ret
add
mov
sub
xor
or
mov
lahf
mov
inc
pop
sub
xor
(bad)
xor
cs
int3
pop
arpl
popf
xchg
and
sbb
jmp
dec
mov
mov
jnp
sub
adc
xchg
lds
scas
in
hlt
imul
jmp
jbe
or
jae
in
ins
movs
(bad)
push
push
retf
scas
cmp
clc
or
ja
pop
outs
mov
jb
les
mov
push
retf
in
jl
mov
das
mov
dec
mov
mov
aaa
mov
mov
lea
mov
dec
test
std
mov
inc
add
(bad)
add
mov
mov
mov
mov
adc
mov
sbb
inc
dec
js
jp
cli
lock
in
fistp
sbb
sbb
push
adc
shl
pop
add
pop
add
in
mov
dec
lock
shl
sar
cmp
sub
adc
mov
add
add
mov
push
mov
or
ror
cmp
rol
adc
shl
enter
pop
adc
cs
xchg
jbe
es
jmp
fsub
sti
or
push
daa
(bad)
or
or
rol
xor
sbb
pop
pop
call
pushf
add
leave
jle
inc
sbb
cmp
stos
je
push
cmps
je
push
aas
pusha
mov
mov
sub
pop
sbb
popa
adc
(bad)
adc
stos
movs
adc
in
dec
add
clc
movs
jmp
pushw
and
adc
psubusw
lea
mov
(bad)
cwde
sbb
das
xor
sbb
in
or
pop
push
or
movs
sbb
add
das
jnp
fcmovu
push
push
call
jo
lock
aas
cmp
repnz
in
stos
xor
fiadd
loop
enter
mov
sbb
adc
mov
pop
jne
xor
xor
imul
jbe
xor
fs
shl
add
add
adc
add
fdivr
aaa
sub
push
mov
sbb
xor
mov
push
mov
cmp
jmp
push
icebp
sub
outs
and
daa
push
xchg
add
stos
mov
lods
mov
mov
lock
das
mov
xchg
jo
add
sbb
in
pop
add
pop
inc
xor
daa
rcr
(bad)
jne
jmp
dec
jne
lds
jnp
lahf
push
cdq
dec
xor
adc
clc
pop
pop
sub
and
inc
adc
push
les
test
or
aad
rol
push
add
jns
add
inc
into
hlt
sar
inc
retf
or
push
popa
mov
sub
nop
inc
adc
inc
lock
or
push
push
pop
dec
push
test
xchg
and
test
jo
pop
(bad)
std
pusha
and
arpl
sbb
pop
pusha
mov
inc
jo
adc
xor
pop
icebp
or
mov
and
dec
pop
inc
xor
fsub
xor
popa
or
inc
sbb
pusha
outs
mov
clc
or
iret
lea
ss
adc
mov
adc
push
and
lds
clc
adc
aam
test
mov
jmp
les
add
or
daa
int3
or
inc
mov
or
and
cmps
cmc
test
or
jno
or
and
pop
sbb
inc
adc
push
lock
inc
and
or
sti
dec
jmp
and
push
push
xor
in
xor
add
mov
(bad)
lock
mov
adc
inc
inc
or
jbe
add
jle
aad
or
or
mov
popf
hlt
cmc
push
xchg
push
add
cs
jo
dec
(bad)
dec
jle
lock
sete
push
pop
mov
rcr
mov
int
sbb
adc
dec
xchg
movs
mov
pusha
dec
stc
mov
mov
cmp
jne
or
or
loope
jle
out
or
add
mov
es
push
mov
xchg
retf
in
pop
add
add
add
sbb
sbb
repz
mov
adc
pop
adc
pop
push
mov
or
dec
repz
pop
sbb
sbb
push
and
push
sbb
mov
movs
retf
mov
inc
les
lods
and
add
inc
xchg
push
mov
jo
out
sub
adc
pushf
cmp
iret
add
add
shl
xlat
in
mov
iret
iret
lods
adc
and
clc
rcl
fistp
cmp
mov
xor
push
fwait
adc
cmc
mov
out
(bad)
imul
push
popa
add
outs
adc
add
fcmovbe
mov
das
lea
fldenv
cmc
jae
iret
push
mov
fs
pusha
popa
mov
out
inc
sahf
inc
loopne
sub
fiadd
in
push
push
js
sub
sub
jmp
mov
inc
shl
mov
or
lock
dec
jo
inc
test
xlat
lock
add
dec
shr
lea
add
adc
sub
shl
hlt
cmp
adc
add
bound
in
cmp
mov
sbb
ret
mov
push
xchg
loopne
ret
push
pop
inc
adc
lea
add
pop
inc
add
ret
sub
pop
xor
and
or
aad
imul
inc
push
xor
cmps
test
add
shr
pop
pop
xor
push
pop
shl
adc
add
imul
in
add
dec
mov
mov
xchg
push
xchg
adc
mov
add
mov
pop
sub
jl
and
pusha
or
ror
mov
jecxz
aaa
lock
cmp
mov
mov
(bad)
or
pusha
and
(bad)
jne
push
add
fmulp
push
adc
jnp
(bad)
hlt
push
test
sub
fimul
outs
sbb
inc
es
xlat
jno
(bad)
int
fcmovbe
sub
pop
adc
jo
sbb
push
xchg
adc
hlt
dec
js
lahf
sub
add
sub
xchg
jl
jns
shr
or
test
adc
pop
lea
inc
adc
(bad)
(bad)
pushf
mov
jge
mov
scas
mov
ja
mov
add
jmp
pop
neg
nop
pop
clc
pop
dec
enter
jge
hlt
lea
mov
inc
sbb
push
rcl
je
or
jmp
sbb
pusha
mov
pushf
cmp
add
fwait
(bad)
mov
add
add
ret
inc
sbb
and
jae
in
xor
dec
aaa
jnp
sub
adc
mov
dec
iret
bound
cmp
push
inc
push
dec
in
sub
cmp
ret
imul
popa
or
outs
outs
cli
or
cwde
les
jle
or
mov
cwde
sub
outs
and
fiadd
push
sbb
int3
push
lea
out
or
adc
xlat
and
ja
push
nop
or
and
rol
mov
sub
fucomip
jae
mov
out
push
lock
mov
adc
xchg
in
mov
idiv
popa
in
mov
jnp
mov
pop
mov
adc
ins
loopne
xor
(bad)
pushf
mov
in
dec
add
jp
test
out
cdq
add
pusha
dec
add
adc
mov
pusha
sar
dec
rcl
bound
cmp
mov
xor
outs
inc
add
jae
add
cmp
mov
or
mov
push
or
cmp
mov
loopne
outs
in
dec
loopne
mov
nop
retf
adc
loopne
loop
movzx
sbb
pop
and
lock
sbb
mov
dec
push
push
out
cmp
mov
test
cmp
inc
add
add
ret
add
jne
(bad)
lock
add
adc
cmp
xchg
nop
(bad)
mov
call
cmps
ror
and
std
jns
test
dec
dec
dec
add
dec
mov
in
aad
lock
mov
cld
mov
push
cld
add
mov
addr16
das
mov
pop
inc
sub
adc
or
add
add
adc
inc
adc
scas
popa
mov
xchg
push
nop
and
and
sub
test
push
popa
sub
inc
or
mov
pusha
push
out
imul
jb
adc
jl
ret
or
fcmovne
adc
xchg
call
mov
and
adc
and
add
add
push
(bad)
sub
sahf
sbb
and
cs
pop
shl
das
adc
rcl
jmp
push
adc
stc
push
add
push
or
in
pop
pop
sbb
outs
div
imul
loopne
push
mov
aam
mov
or
cmp
je
cmp
ss
movs
push
stos
mov
in
std
mul
nop
cmp
ret
mov
xor
jo
add
outs
rol
shr
arpl
sbb
add
push
add
pushf
test
(bad)
js
add
(bad)
inc
ja
jno
jne
dec
sbb
jo
fiadd
pop
(bad)
mov
pop
or
pop
sub
sbb
add
add
xor
and
inc
push
cmp
addr16
idiv
enter
call
pusha
add
imul
push
shr
rcl
xor
or
xor
mov
(bad)
jne
mov
dec
jle
add
mov
xlat
mov
push
push
lock
sub
data16
or
mov
or
cdq
or
out
cmp
or
or
lahf
dec
dec
outs
and
pop
stos
ins
gs
mov
push
mov
xor
jmp
mov
inc
inc
dec
test
jb
inc
es
xor
mov
xchg
cmp
and
inc
(bad)
loopne
sti
adc
loop
shl
fisub
rcr
and
rcl
push
inc
fdiv
in
mov
fbld
rol
push
(bad)
mov
jmp
lock
push
cmp
repnz
sbb
adc
mov
mov
call
or
rcl
adc
pop
jae
or
mov
xlat
js
(bad)
cld
cmp
test
add
and
sbb
mov
mov
inc
movs
xor
std
inc
dec
jne
mov
(bad)
idiv
or
lea
icebp
push
adc
stc
mov
xchg
aas
sub
data16
inc
(bad)
je
mov
inc
xor
and
adc
mov
movs
xor
movs
push
test
mov
(bad)
xchg
(bad)
mov
xchg
shl
or
pop
jle
fs
adc
es
clc
xchg
lea
nop
mov
adc
dec
into
jge
js
adc
dec
or
jmp
lock
adc
jmp
mov
popf
bswap
or
inc
inc
hlt
dec
es
dec
cmp
and
popa
xchg
out
mov
and
enter
loope
add
dec
mov
in
dec
inc
and
xor
mov
sbb
sbb
es
adc
adc
dec
add
pop
test
jo
add
inc
lea
inc
mov
je
add
dec
sub
mov
aaa
inc
mov
iret
or
pop
xchg
jge
xchg
mov
fcom
fcom
mov
sub
pushf
sbb
retf
leave
push
ret
adc
adc
jl
mov
retf
rdpmc
add
scas
mov
adc
clc
in
out
push
call
pushf
popa
sbb
les
dec
adc
je
push
and
(bad)
cli
xchg
xor
leave
(bad)
pusha
mov
mov
lahf
xor
mov
inc
loopne
mov
mov
rol
jb
xor
test
dec
push
test
inc
cmp
cmp
mov
jno
out
or
inc
fild
jg
add
push
or
mov
cmc
jae
or
lea
sub
push
add
push
cwde
cmp
mov
(bad)
jmp
pushf
sbb
mov
jmp
adc
xchg
add
ror
ficom
rol
ins
jge
inc
xchg
fsub
adc
xchg
mov
and
xchg
je
pop
dec
xchg
stos
xchg
in
and
int
lods
inc
xor
mov
adc
push
dec
sbb
inc
enter
das
mov
mov
dec
pop
clc
lahf
enter
add
lea
sbb
and
(bad)
in
pop
push
inc
add
sbb
add
pop
xchg
sbb
add
cmp
sub
add
add
cmp
jl
or
or
or
sti
push
inc
sbb
xchg
dec
cmp
mov
mov
add
jp
and
sub
inc
add
call
lock
call
dec
inc
mov
sub
xchg
cld
daa
cdq
test
retf
imul
test
mov
pop
sar
aaa
lahf
inc
mov
mov
clc
ss
(bad)
dec
imul
data16
push
fiadd
out
add
retf
clc
inc
sub
shl
mov
out
add
lea
cmps
jecxz
jge
sbb
nop
push
jge
inc
hlt
outs
and
pmuludq
or
int3
loop
outs
mov
xchg
sar
ss
push
adc
clc
pusha
xchg
xchg
jne
sub
cld
push
movs
and
clc
inc
rol
xchg
inc
pop
sub
daa
or
dec
push
jg
xor
sbb
and
lock
fs
jge
or
jbe
mov
or
adc
test
wrmsr
nop
dec
scas
scas
lahf
lock
ret
ds
sbb
sbb
jge
mov
mov
or
fidiv
pop
xchg
mov
popf
add
mov
ror
pop
lods
cld
push
lods
push
push
or
jge
mov
dec
push
or
add
lods
loopne
int3
cmp
jg
sub
out
cmp
inc
push
test
or
adc
stos
cmp
pop
or
sub
add
push
push
xchg
sbb
or
inc
into
test
add
ds
int
add
in
xor
rol
(bad)
fcomp
pop
mov
lahf
lea
(bad)
mov
rol
and
mov
popa
mov
push
push
pop
aam
cmp
dec
inc
add
adc
nop
scas
dec
add
push
push
stc
or
in
jmp
popa
out
jmp
lods
imul
pop
adc
ret
dec
adc
je
push
adc
xlat
pop
mov
(bad)
stos
pushf
dec
sbb
add
jge
cmps
add
(bad)
int3
out
xlat
movs
and
fdiv
call
lahf
fst
fwait
in
jns
cli
add
and
push
movs
mov
push
dec
push
push
push
jmp
cmp
xchg
pushf
push
xor
mov
daa
push
push
test
jnp
cmp
pop
mov
ficom
cmp
add
aam
sbb
(bad)
popf
and
hlt
(bad)
or
dec
loope
ror
clc
leave
fcomp
imul
int3
dec
clc
or
cld
mov
dec
xor
movs
bound
pop
and
cli
add
or
adc
add
sbb
sub
scas
ror
or
or
and
cdq
jnp
sub
hlt
add
cmps
add
shl
ret
xchg
int3
inc
push
lock
cdq
inc
dec
repz
dec
add
jo
test
cmp
fnstsw
adc
scas
(bad)
call
xor
add
mov
mov
push
add
xor
sub
pop
adc
imul
test
ja
cmp
jbe
mov
fcomp
add
and
outs
cmp
jne
fld
invd
xchg
pushf
test
adc
pop
div
inc
add
and
clc
data16
jne
pop
pop
mov
sub
or
bt
leave
aad
dec
xchg
add
add
add
push
xor
dec
pop
pusha
pusha
jne
mov
ss
sub
fs
psubusb
mov
adc
add
and
and
or
mov
inc
and
std
sahf
test
and
loopne
sub
xchg
in
shl
mov
cmp
shr
add
jecxz
or
mov
xor
pop
mov
and
add
add
ret
mov
push
jae
mov
popa
adc
push
pop
mov
add
jmp
pop
addr16
mov
dec
lea
lea
out
or
mov
xchg
fist
add
ror
mov
jno
enter
jg
adc
push
movs
mov
inc
js
ja
mov
lea
ins
mov
repz
jo
jne
pop
ja
rol
dec
add
mov
jb
das
in
ins
push
pop
ja
int
in
dec
pop
push
pop
repz
das
loopne
(bad)
in
sub
je
or
fld
mov
or
(bad)
scas
enter
sbb
sbb
ret
mov
xchg
in
scas
in
aad
xor
add
mov
push
out
mov
add
ins
pop
rcr
aaa
jmp
pusha
pop
pop
das
push
dec
pop
gs
cdq
fisttp
push
jmp
cmp
pop
cmp
cmp
push
clc
je
ror
movs
loopne
aaa
mov
add
in
xor
mov
test
pop
cmp
inc
mov
inc
clc
mov
mov
push
add
es
call
mov
sub
sub
add
call
add
addr16
xchg
lea
and
xor
in
rcr
mov
or
adc
and
dec
sub
or
push
lods
dec
push
mov
adc
rol
add
pop
mov
inc
fidiv
pop
fisttp
retf
ins
mov
in
jg
enter
and
jnp
xor
xchg
repnz
add
js
xor
js
js
and
xchg
add
add
or
mov
mov
cmp
jae
xor
jmp
sbb
retf
fsubr
out
push
sub
add
sar
and
add
retf
xor
jle
add
and
sbb
push
pusha
jp
loope
jnp
ins
mov
cmp
sti
cmp
mov
sub
xor
loop
inc
and
cmp
and
adc
mov
call
jo
pop
jp
sbb
mov
pop
outs
lods
test
and
and
cld
mov
pop
pusha
adc
jg
add
in
add
sbb
pop
cs
push
idiv
pop
push
iret
mov
cmp
cmp
icebp
cmp
inc
or
and
or
pop
inc
and
xor
dec
mov
mov
or
lock
cmps
or
mov
cmps
idiv
adc
(bad)
sbb
cmp
fld
mov
movs
mov
push
xchg
out
jecxz
inc
pop
pop
push
sub
jmp
cmps
scas
pop
mov
and
lods
and
mov
or
ret
les
xchg
add
xchg
ret
fstp
mov
add
and
mov
test
sub
sub
add
dec
fs
add
or
nop
inc
push
xor
cmp
pop
or
jae
mov
adc
test
adc
mov
mov
pop
pop
jmp
lods
shr
pop
jmp
lea
js
push
dec
popa
cmp
push
loopne
ja
sub
or
or
adc
mov
cmps
test
sbb
inc
scas
and
cmp
inc
cmps
(bad)
jmp
dec
ret
mov
call
mov
adc
or
mov
mov
stos
mov
in
aas
ret
lahf
jle
jmp
mov
jmp
add
mov
adc
ins
es
lods
in
mov
add
loopne
in
shl
add
ja
std
or
pop
scas
popf
mov
xor
ror
xor
stos
sub
or
jnp
add
add
not
mov
ret
mov
sub
retf
mov
js
ja
sub
xor
sbb
sbb
aaa
sbb
push
sbb
(bad)
imul
xchg
ss
je
sub
xor
add
xor
mov
test
jne
nop
pop
loopne
ret
sbb
ficomp
push
adc
enter
lahf
cmps
inc
sbb
movs
push
stos
xchg
mov
mov
cmp
jne
ss
pop
ror
icebp
mov
cwde
scas
adc
push
inc
mov
dec
pop
pop
retf
mov
inc
inc
pop
jmp
(bad)
fsubrp
mov
jno
dec
dec
mov
push
adc
lahf
mov
xchg
push
and
mov
sub
xor
rol
pop
in
test
test
shl
push
mov
scas
and
push
fld
outs
dec
je
ins
add
add
sbb
inc
loope
jmp
pop
shr
sbb
pop
aas
sub
test
add
cmp
aam
ret
sbb
pop
sbb
addr16
gs
sbb
adc
ret
or
retf
aam
pop
nop
pop
inc
mov
push
int
aam
inc
push
adc
pop
add
adc
add
pushf
nop
push
pop
in
pop
mov
and
sub
adc
lds
mov
sbb
pop
or
(bad)
and
lea
cmp
sti
sbb
adc
mov
iret
add
add
sahf
push
pop
xchg
cwde
xchg
mov
push
pop
fsub
jmp
add
push
inc
sbb
aad
enter
add
mov
adc
mov
inc
jmp
adc
aaa
or
ins
hlt
sub
call
mov
out
dec
or
inc
sub
rcr
xchg
and
sub
inc
mov
inc
sub
push
or
cmp
push
imul
popa
add
lods
in
retf
fstp
xor
add
mov
shr
into
add
rol
add
inc
adc
out
or
or
inc
sub
add
mov
pop
movaps
(bad)
test
pop
pop
adc
leave
adc
pop
sahf
add
inc
adc
xlat
sahf
pop
pop
jge
add
cmp
add
ret
dec
push
cmp
ds
(bad)
mov
or
cdq
loopne
sbb
add
push
je
xor
add
jbe
lods
xchg
pop
add
sbb
enter
ficomp
leave
jmp
push
and
psubusb
sbb
ds
push
sbb
out
jmp
loop
push
imul
push
pusha
ja
pop
inc
pop
adc
jns
rol
scas
in
addr16
sbb
in
(bad)
sbb
clc
imul
inc
enter
je
sub
push
fsub
add
je
nop
jmp
sbb
add
jae
stc
pop
mov
jae
gs
inc
cmp
cli
stos
or
fisubr
pop
sbb
xchg
lock
mov
cmp
mov
push
adc
add
movups
cmp
sbb
stos
xchg
mov
mov
add
pusha
or
fs
inc
dec
add
sub
inc
cld
add
bnd
jmp
cld
push
mov
add
push
jle
stos
cmps
and
or
stos
add
das
push
add
add
cld
add
sub
pop
or
retf
(bad)
cmp
mov
and
jl
enter
rol
adc
adc
pop
cmp
les
es
fwait
popa
add
jle
fidivr
mov
jb
and
fdiv
mov
sub
adc
mov
push
xor
adc
and
sub
push
sub
jmp
adc
push
into
xchg
(bad)
jb
inc
and
sub
push
xor
xor
out
pop
add
in
dec
in
sub
outs
or
ret
push
push
adc
sub
mov
mov
inc
adc
or
add
push
dec
clc
pop
push
sbb
or
mov
inc
out
pusha
mov
jmp
fucomi
lea
add
push
dec
mov
and
adc
xchg
add
mov
adc
imul
imul
shr
jmp
rcl
cmp
ja
cmp
mov
jae
pop
lea
mov
rol
fild
mov
in
pop
inc
jl
xchg
or
and
dec
loopne
int
out
add
inc
fwait
pop
add
cmp
dec
push
cmp
das
test
je
and
jne
push
out
shl
cmp
jbe
xchg
sbb
xchg
add
cmp
repnz
ins
xor
xchg
dec
sub
xor
pop
cmp
jl
add
inc
adc
cmp
sub
in
mov
mov
(bad)
or
push
shl
nop
dec
nop
icebp
xor
imul
jmp
sbb
rol
imul
or
(bad)
fldcw
shl
sbb
sub
fwait
outs
xchg
lea
xchg
pusha
movs
mov
jnp
mov
dec
(bad)
ret
dec
and
fidivr
mov
jge
loop
xchg
lea
ret
sub
jnp
pusha
add
loope
dec
add
cmp
dec
dec
add
xor
mov
clc
push
add
cmp
adc
jmp
cmps
sbb
in
mov
in
jnp
jp
pop
pop
shl
stos
pushf
mov
jmp
jge
xor
mov
lea
push
ror
mov
dec
ja
cmp
and
lea
or
(bad)
add
mov
or
add
mov
dec
or
dec
add
push
add
pop
adc
and
adc
jp
pop
mov
mov
adc
and
imul
fs
dec
(bad)
bound
push
cld
les
enter
add
pop
mov
out
js
leave
add
mov
fiadd
or
in
aaa
shl
sbb
adc
lock
jecxz
shl
mov
int
je
mov
sbb
mov
outs
popa
inc
add
rcl
scas
cli
push
fldz
fld
fcompp
fstsw
sahf
or
call
jmp
sub
or
dec
adc
or
shr
sbb
inc
dec
and
xor
jne
inc
sbb
scas
jnp
rcl
mov
and
mov
popa
sub
adc
in
pop
cmc
adc
ins
inc
sbb
call
mov
fcomi
fdiv
push
fld
int
daa
inc
jo
in
fild
cs
sub
test
sub
adc
or
or
test
fwait
push
mov
sub
sti
addr16
outs
push
das
add
cmps
ret
inc
int
add
push
sar
mov
inc
test
xchg
call
sub
mov
invd
test
jne
call
div
jmp
loop
xchg
sti
(bad)
xor
push
jl
inc
aaa
sbb
push
mov
sbb
iret
test
push
xor
add
fisttp
sub
jo
fldenv
cmp
or
sbb
dec
xchg
stos
sub
inc
sbb
adc
xchg
jl
sbb
xlat
and
aaa
xor
jne
add
neg
xor
sub
or
mov
rol
outs
dec
push
push
mov
add
xchg
xchg
inc
xchg
mov
sub
sbb
in
xchg
ror
mov
inc
jo
jle
and
scas
push
sbb
push
push
or
and
dec
sub
daa
in
xor
sbb
inc
inc
push
sbb
pop
inc
hlt
jecxz
mov
in
ja
jnp
test
cmp
repnz
mov
or
pop
and
imul
adc
mov
adc
lea
and
push
jmp
das
add
push
popa
and
pop
mov
or
push
pop
pop
xlat
mov
jg
add
ror
test
xor
fldenv
(bad)
dec
cmovae
daa
sbb
ja
inc
dec
lods
add
cmovo
adc
mov
out
or
pushf
call
or
or
ins
popa
cmp
outs
jge
mov
mov
mov
pop
mov
sbb
pop
inc
add
sub
or
aas
jno
ja
lock
je
mov
jmp
mov
ret
cmp
jne
jmp
movs
shl
jmp
(bad)
xor
mov
or
retf
mov
push
aaa
scas
sbb
mov
or
push
or
push
mov
xchg
test
(bad)
pop
ret
xor
xor
icebp
lea
je
movs
add
fbld
lea
inc
mov
loopne
sub
sbb
(bad)
loop
sub
push
push
retf
imul
nop
mov
sub
jne
mov
cmp
in
cmp
mov
pop
mov
ja
xchg
scas
cmp
mov
test
ss
pop
into
test
lods
sbb
mov
cmp
fdivrp
fstp
fwait
jmp
fld1
seto
fs
(bad)
mov
pop
or
inc
leave
mov
test
mov
movs
push
cmc
mov
fsub
cmp
mov
mov
loope
ins
xchg
mov
jle
bound
add
or
push
push
out
je
mov
push
xor
cmp
or
xor
xor
dec
push
inc
fs
lods
xchg
sbb
xchg
and
jns
test
stc
mov
cwde
and
mov
clc
std
imul
test
imul
(bad)
sub
test
inc
inc
dec
aam
(bad)
std
push
in
xchg
ret
dec
mov
xlat
mov
pop
push
adc
jle
imul
push
add
add
or
add
xchg
call
lods
sbb
lea
add
arpl
ss
jbe
mov
mov
mov
outs
cmps
jg
dec
nop
xor
aaa
sbb
or
or
mov
fild
scas
or
or
push
mov
mov
mov
les
adc
or
or
aas
xor
mov
xor
test
dec
les
or
inc
shl
jmp
or
xchg
mov
jg
ret
jbe
fsubr
icebp
push
mov
jae
inc
outs
ficomp
ins
imul
test
inc
add
sbb
pop
stos
ss
fnstenv
mov
ret
mov
push
into
dec
and
test
xchg
mov
and
loop
test
dec
shr
mov
mov
dec
cmp
mov
ror
xchg
push
sub
enter
sub
(bad)
bound
mov
repnz
clc
aaa
or
je
dec
dec
shr
stc
dec
or
call
push
in
loopne
sar
aam
mov
(bad)
jmp
mov
shr
and
mov
test
aaa
in
pop
add
fucomi
push
mov
push
cld
pop
popa
frstor
sti
rol
mov
xor
inc
sbb
mov
pusha
retf
pop
push
mov
sub
sbb
xlat
enter
push
xchg
sbb
adc
xor
cmps
mov
mov
enter
adc
mov
jb
add
push
cmc
std
cld
cmp
lods
enter
cld
sbb
test
sub
xchg
setle
push
add
movs
arpl
pop
dec
xchg
add
mov
mov
mov
adc
or
push
push
mov
add
pop
addr16
adc
push
add
or
push
out
ror
add
cdq
inc
or
add
mov
arpl
popa
push
int3
add
sbb
add
push
add
pop
cmp
test
mov
hlt
imul
inc
adc
ret
jge
jo
popa
fnstsw
mov
inc
sub
xchg
sub
call
mov
inc
(bad)
call
or
lods
and
push
call
xor
stc
call
add
ficom
dec
jl
inc
sub
dec
lea
lock
sti
fist
lods
lods
mov
push
push
xor
fisttp
jge
xchg
sub
lea
inc
clc
inc
or
inc
ins
inc
pop
inc
or
push
push
push
mov
aam
fst
pop
pop
cmp
outs
pop
imul
ss
pop
js
adc
xchg
adc
bound
scas
loopne
pushf
mov
adc
and
test
dec
sar
and
in
push
push
and
rcl
cld
mov
enterw
aas
lea
xor
xchg
pop
xor
outs
arpl
fsub
xor
mov
data16
add
and
sub
jae
popa
add
add
repnz
fst
mov
adc
je
(bad)
jmp
outs
enter
mov
cmp
jne
add
or
dec
cmps
call
out
pop
pop
push
inc
and
sbb
test
mov
sbb
add
test
mov
xchg
xchg
add
jne
test
pusha
mov
in
inc
lea
fstp
das
outs
push
in
mov
in
das
shl
or
test
push
stc
fs
or
dec
pop
dec
in
or
mov
or
dec
adc
sbb
or
sbb
add
mov
push
inc
or
cli
xor
push
and
sub
jnp
xlat
sub
jne
repnz
xor
iret
push
adc
or
dec
repnz
fadd
das
ins
add
sbb
push
add
inc
mov
(bad)
repnz
inc
out
pop
pop
or
retf
adc
push
inc
(bad)
aaa
and
adc
jbe
aaa
pop
push
pop
push
mov
add
fcomp
xlat
sbb
fwait
sbb
mov
xchg
or
dec
add
mov
sbb
adc
andps
je
push
mov
adc
(bad)
sub
test
push
mov
pop
mov
fdivp
mov
lock
mov
add
out
arpl
dec
jae
dec
sbb
ret
pop
cdq
add
fs
sbb
and
arpl
push
sbb
lock
sub
or
xchg
rol
arpl
jle
dec
test
xchg
call
(bad)
adc
ret
and
sahf
or
lahf
jmp
and
xor
pusha
add
in
fisub
jns
hlt
mov
adc
jb
mov
sbb
and
add
pop
adc
or
or
adc
jo
(bad)
pushf
sub
mov
into
xchg
sbb
pop
test
and
xor
addr16
mov
stc
inc
mov
sbb
cmp
jne
mov
clc
pop
add
clc
adc
scas
pop
xchg
shl
dec
(bad)
fisub
add
sub
add
dec
mov
inc
test
sbb
jmp
cmps
ficom
jmp
aad
jmp
sub
ret
out
loopne
or
es
add
sar
adc
fs
test
mov
fld
repz
sbb
add
not
arpl
push
mov
push
fimul
cmps
push
mov
dec
pop
push
arpl
cwde
sar
lea
lahf
dec
jo
jl
cmp
push
jmp
or
dec
nop
das
xchg
or
add
sbb
pop
and
pop
adc
push
mov
movs
add
add
add
xor
xchg
adc
adc
fcomip
mov
jge
push
sub
repz
adc
add
push
pop
repz
add
sub
arpl
cwde
push
clc
aam
ret
push
inc
jmp
dec
adc
mov
cmp
add
outs
(bad)
mov
xor
jle
sbb
pop
shl
pop
and
push
loopne
ja
clc
or
daa
retf
adc
or
sbb
inc
stos
adc
xor
mov
pop
inc
jge
xor
push
das
fdiv
sbb
xor
hlt
(bad)
xchg
fcomi
fidiv
mov
int
and
jne
push
and
clc
add
test
jb
jg
movzx
jecxz
inc
mov
aam
adc
push
cmps
(bad)
inc
mov
clc
jb
inc
or
stos
pop
inc
push
or
test
push
sbb
inc
clc
inc
enter
mov
xor
sbb
and
sub
js
or
ffree
add
adc
xor
js
test
and
xchg
leave
pop
fimul
lock
clc
xor
sahf
sbb
inc
test
popa
inc
dec
sub
mov
adc
mov
pop
inc
add
add
mov
push
les
jl
jbe
test
test
daa
pop
sbb
add
dec
jne
lea
lea
call
push
arpl
adc
xchg
addr16
icebp
add
je
or
dec
add
xchg
outs
pop
ret
addr16
iret
popa
mov
mov
xor
mov
adc
sub
push
clc
repz
mov
aas
push
push
mov
fimul
xchg
psraw
add
loop
mov
jle
adc
inc
cmp
push
or
fist
es
inc
xchg
outs
ja
mov
inc
scas
pusha
push
js
ja
mov
pop
btr
jmp
or
mov
cmps
cmp
nop
add
inc
add
inc
mov
jne
jbe
iret
cwde
mov
pop
add
pop
lock
loope
and
xor
retf
ins
and
mov
pop
sub
jns
ins
neg
repnz
sub
or
cs
jmp
sbb
jo
pop
cmp
ret
mov
jo
imul
push
xor
sub
push
dec
pop
pop
stc
jae
imul
pop
(bad)
(bad)
cld
or
ror
and
add
test
(bad)
loopne
and
inc
daa
and
xchg
mov
pop
out
add
or
(bad)
xchg
dec
(bad)
or
je
push
cwde
mov
push
sub
retf
adc
imul
out
pop
mov
jo
inc
xchg
mov
or
cmp
rcl
test
mov
loop
add
test
cmp
pop
mov
stos
sar
fwait
inc
in
out
mov
inc
jecxz
in
sbb
push
rcl
pop
sbb
loop
adc
push
pop
mov
fwait
cs
push
mov
jg
push
add
bound
and
and
lahf
add
inc
jecxz
nop
arpl
mov
add
cmps
inc
iret
dec
movs
or
push
fdivr
mov
out
out
mov
xchg
adc
and
xchg
out
mov
and
sar
mov
and
lea
shl
jp
add
pop
inc
test
xchg
xchg
outs
dec
xchg
add
xlat
xchg
ror
adc
add
mov
or
rcl
(bad)
add
push
xchg
adc
sub
add
pop
or
or
sbb
daa
cmp
mov
push
add
or
popf
inc
scas
jge
push
add
or
add
mov
cmps
mov
lods
and
lfs
inc
out
sub
jle
leave
mov
mov
add
cmp
enter
mov
lock
pop
adc
lock
lock
pop
in
jmp
mov
imul
or
sbb
imul
inc
jecxz
lock
push
mov
dec
dec
adc
xchg
pop
pusha
push
repnz
push
in
push
push
adc
or
lock
adc
cmps
call
push
xchg
cwde
dec
push
call
shr
xor
mov
jbe
ror
cdq
jg
neg
jne
jbe
push
je
inc
ret
pop
add
jmp
sub
clc
sahf
retf
sbb
mov
dec
movs
xor
jo
ds
mov
inc
push
push
pop
nop
or
(bad)
(bad)
(bad)
push
add
adc
inc
jns
add
add
mov
xor
aam
leave
pop
or
rol
es
data16
mov
test
loop
dec
test
enter
inc
or
fadd
mov
in
jl
pop
call
pop
push
cs
retf
hlt
pop
fcom
sub
in
paddb
adc
sbb
mov
adc
ins
pop
mov
cmc
sub
mov
or
imul
add
xor
jl
arpl
or
jl
ja
jmp
jne
(bad)
mov
push
nop
clc
scas
adc
xor
add
mov
push
aam
sub
inc
test
jo
pusha
add
aad
(bad)
mov
mov
add
ret
cmp
les
clc
xchg
adc
pop
pop
add
arpl
clc
cmps
vshufps
mov
ds
adc
mov
mov
adc
(bad)
jp
mov
dec
xor
inc
dec
jo
and
cmps
icebp
or
jne
fwait
sbb
pop
jbe
movs
and
adc
mov
fisttp
loop
loope
or
neg
mov
in
and
pusha
jle
mov
or
dec
add
aam
push
pop
ds
mov
pop
cmp
je
inc
adc
push
xchg
popa
in
mov
inc
and
enter
or
sti
xchg
mov
mov
pop
adc
mov
add
lahf
pop
loopne
or
dec
sub
mov
xor
cli
xchg
xor
repnz
lahf
cli
movs
sub
pop
(bad)
test
pop
inc
sub
js
mov
pushf
pop
and
inc
xchg
clc
mov
stos
out
mov
sar
mov
dec
ret
scas
cmp
or
and
faddp
add
xchg
sbb
dec
add
hlt
cmp
lock
fdiv
aaa
data16
scas
xor
dec
mov
xchg
mov
imul
test
mov
stos
or
fadd
or
popa
inc
les
mov
or
inc
inc
test
loopne
sbb
(bad)
xchg
mov
inc
add
mov
dec
fld
push
gs
div
add
addr16
jne
adc
xchg
push
je
push
adc
mov
outs
(bad)
mov
inc
add
xor
mov
add
or
stos
inc
cmp
or
push
shl
shl
lahf
or
loopne
or
xor
push
inc
jne
ins
iret
mov
imul
or
jb
(bad)
mov
adc
push
pop
mov
add
fcmovne
adc
cmp
push
xor
mov
cmp
pop
das
outs
shl
jl
scas
push
enter
das
push
mov
jo
dec
js
adc
aaa
jo
jne
inc
adc
inc
outs
xor
inc
jp
jnp
ds
pop
mov
dec
push
dec
ror
ja
push
outs
fmul
jno
clc
fimul
ds
outs
sbb
inc
sub
and
sahf
dec
jnp
mov
sub
dec
xchg
push
dec
inc
cmp
clc
mov
mov
or
sub
aad
xor
push
pop
nop
test
adc
jo
add
jb
popa
ins
scas
cmp
ins
outs
outs
je
jb
(bad)
and
cmp
xlat
bound
inc
loope
mov
movs
pop
pop
inc
scas
popf
mov
fild
add
push
adc
cld
push
ins
popa
cmp
int3
push
cmp
mov
add
dec
xor
xchg
push
test
js
gs
push
out
xchg
arpl
add
push
push
inc
push
outs
ror
call
cmp
cmp
jno
pop
mov
scas
sbb
jmp
cmp
xor
repnz
adc
cdq
gs
push
ret
daa
add
dec
aam
mov
adc
adc
sub
inc
dec
inc
xlat
gs
call
or
push
adc
pop
and
or
cmp
sbb
or
push
adc
enter
popa
and
sbb
(bad)
(bad)
aad
pushf
adc
xor
mov
lods
and
mov
rol
mov
imul
or
bound
xor
jo
or
sub
fs
inc
push
add
push
js
xlat
push
test
pop
or
xor
push
inc
pop
adc
push
dec
sti
cmp
jmp
imul
test
movs
mov
pop
inc
jge
lock
dec
add
ins
add
mov
mov
inc
cs
add
push
xchg
rol
xchg
pop
push
xchg
push
and
inc
bound
(bad)
das
adc
inc
xchg
leave
rcl
ss
sahf
fucomi
xor
and
es
stc
dec
jecxz
dec
and
add
into
leave
mov
adc
add
mov
test
dec
jmp
xlat
out
hlt
mov
fnstenv
cdq
fimul
push
and
hlt
arpl
aaa
fs
mov
data16
or
shl
imul
test
cmps
dec
ins
arpl
xor
(bad)
adc
or
nop
pop
sub
push
mov
ret
and
push
sbb
lahf
push
int3
ficom
lock
add
or
pop
jo
mov
inc
add
or
inc
dec
mov
inc
test
inc
mov
sbb
pop
push
sub
add
push
adc
mov
adc
ret
jns
das
imul
sub
inc
sub
sbb
add
jg
push
jmp
mov
sbb
and
jmp
mov
ss
jbe
xchg
sbb
push
(bad)
push
jl
dec
cmp
dec
aam
pop
pop
mov
adc
lock
or
setge
sub
ret
dec
add
mov
je
fnstcw
pop
loopne
mov
jg
adc
mov
sbb
movs
cmp
add
dec
xor
inc
xor
or
movs
sub
mov
xchg
inc
pop
dec
jo
(bad)
sbb
adc
jge
jle
xchg
ss
jmp
push
dec
xor
fucomi
and
or
stc
or
adc
or
adc
in
daa
and
jno
cmp
lock
xchg
iret
mov
sub
adc
div
lea
or
push
mov
mov
adc
cmp
enter
cmc
pop
movs
jg
adc
mov
mov
fs
push
push
add
enter
fmul
push
sbb
and
cld
xchg
jge
mov
jmp
fcmovnb
sub
push
add
cwde
jne
and
xor
test
inc
or
fdiv
mov
lods
push
and
gs
or
sub
jl
call
dec
aam
sub
neg
retf
movs
push
cmp
cmc
sbb
pop
or
xor
push
inc
cmp
pop
push
pop
mov
add
sbb
jne
cmp
in
xlat
mov
dec
ds
add
or
movs
in
cmp
adc
fcomip
lods
and
dec
add
and
mov
mov
adc
addr16
inc
push
out
inc
enter
pop
mov
adc
rcr
test
wrmsr
dec
push
jg
(bad)
(bad)
jnp
push
lods
call
inc
cmp
sbb
js
and
jle
pop
and
sbb
arpl
lahf
cdq
cmp
adc
movaps
adc
mov
cmp
cmp
add
pusha
fldcw
xchg
inc
js
and
push
mov
and
push
pop
adc
push
aaa
pop
daa
mov
push
jge
dec
lea
jbe
inc
cmp
or
inc
js
add
aas
xchg
call
sbb
test
js
clc
jge
test
xchg
lahf
sub
enter
rol
add
xchg
add
iret
fmul
mov
mov
add
xchg
loope
mov
push
lods
jne
pop
mov
sub
fld
inc
pop
(bad)
push
call
or
aaa
outs
push
dec
sti
push
shl
xor
and
imul
mov
mov
and
adc
mov
xor
test
add
or
adc
mov
mov
ds
mov
mov
dec
jmp
cmps
clc
mov
and
inc
and
into
jo
and
mov
nop
mov
(bad)
push
ret
cli
adc
inc
clc
xchg
inc
xor
ror
lods
mov
je
jbe
arpl
add
dec
fstp
sub
xchg
test
clc
test
inc
js
mov
add
xchg
(bad)
dec
xor
adc
fistp
xchg
xchg
outs
stos
sbb
push
add
pop
popf
push
cdq
adc
adc
rol
scas
daa
xchg
fimul
and
add
push
adc
add
je
loop
icebp
cmp
jb
cmps
cmp
cmp
add
popf
mov
das
sahf
or
retf
fs
inc
inc
xchg
out
push
inc
inc
aaa
sub
mov
or
push
(bad)
imul
jnp
adc
aad
cmp
xor
in
add
add
das
aas
add
add
(bad)
mov
enter
jecxz
cs
shl
rcl
pop
outs
inc
clc
xor
and
inc
and
adc
pop
inc
std
sub
mov
jmp
cmp
dec
pop
sub
xchg
ret
pop
fld
or
mov
imul
mov
add
shl
dec
daa
movzx
or
and
sbb
jne
and
pop
stos
jmp
and
leave
call
mov
push
add
jbe
add
test
jne
dec
enter
dec
pop
inc
inc
or
pusha
cmp
xchg
clc
ror
popf
pop
pop
ret
nop
xchg
rcl
fcomp
js
scas
jns
sbb
cmp
pop
push
jbe
test
cmp
into
mov
add
mov
add
fbstp
mov
dec
mov
mov
dec
push
add
rcr
dec
add
push
lea
(bad)
push
movs
cwde
shl
mov
rol
push
dec
pop
inc
loop
out
dec
and
idiv
xchg
xor
lock
xrelease
in
adc
movs
add
aas
daa
mov
add
or
push
pop
les
nop
sub
rol
cdq
and
pop
sbb
outs
loope
push
jecxz
je
push
add
jne
int
jno
inc
out
add
add
xchg
jecxz
shr
mov
imul
mov
ins
or
jmp
js
or
rcr
jne
mov
push
data16
sar
ss
call
or
sbb
dec
enter
cs
inc
jo
hlt
inc
dec
imul
jne
mov
and
mov
mov
ins
stos
cmp
sbb
push
adc
cmps
cmp
js
lock
ret
push
mov
sti
jno
test
cmp
in
and
xor
jbe
sar
sub
inc
jle
mul
je
adc
hlt
jmp
(bad)
or
adc
mov
xlat
mov
mov
sbb
mov
mov
xor
mov
sbb
add
mov
cwde
outs
mov
sub
int3
in
int3
and
add
ret
cmps
xor
fist
inc
and
lods
test
push
lock
sbb
hlt
ins
push
nop
xor
pusha
lock
fdiv
in
jp
xor
movs
rcr
mov
mov
loopne
adc
cmp
jl
stos
ror
div
ins
lock
aas
jb
daa
test
push
push
mov
clc
mov
test
test
cld
mov
pop
push
rcl
mov
ins
(bad)
inc
ss
outs
pop
add
inc
scas
cmps
je
ret
inc
xor
shl
add
pop
xchg
xor
addr16
ret
inc
adc
pop
jae
adc
lea
test
aam
inc
mov
popa
inc
in
cmp
mov
cmp
pop
xchg
sub
pushf
and
or
xchg
pop
sar
jne
mov
adc
cli
imul
add
and
or
test
outs
mov
cmp
or
sub
adc
push
mov
mov
add
and
fidivr
shl
xlat
bound
pop
fsubr
inc
sub
and
(bad)
ret
or
jp
out
mov
add
cmp
dec
loope
mov
add
into
mov
adc
push
adc
scas
lock
loopne
push
std
or
push
lds
clc
in
add
cmp
pop
push
lea
push
push
ret
and
or
xor
clc
loopne
jmp
mov
loopne
in
push
pop
push
xor
xor
and
mov
add
(bad)
pop
or
adc
xlat
sub
or
push
or
rcl
push
or
adc
fcomp
(bad)
mov
inc
imul
jg
ins
test
inc
enter
and
and
adc
xchg
push
cmps
sub
or
fs
pop
ficomp
lea
adc
mov
sbb
add
and
pop
sub
or
retf
call
inc
push
add
pop
inc
ins
inc
int
jl
mov
add
je
dec
jp
daa
pop
test
lea
mov
imul
gs
jbe
pop
push
or
adc
push
test
push
push
adc
arpl
push
pop
enter
outs
nop
xchg
mov
aaa
mov
cmp
and
movs
sub
xlat
inc
add
popa
xor
pushf
mov
icebp
jne
mov
icebp
and
or
cmp
test
mov
sbb
push
and
test
jo
addr16
test
mov
mov
add
xchg
sub
sub
pop
rcl
cmps
xchg
xchg
es
mov
in
inc
inc
sbb
ja
je
mov
adc
in
or
cmp
fistp
popa
iret
cmps
pop
or
inc
ret
mov
adc
ds
cmp
scas
cmp
adc
jo
push
mov
mov
(bad)
adc
inc
inc
pop
dec
jae
dec
dec
push
adc
and
cmp
adc
adc
in
dec
and
test
push
or
js
mov
mov
cli
sub
jle
not
clc
push
or
jmp
push
push
fldenv
int
xor
push
lock
das
sbb
fmul
add
aam
jbe
jmp
call
fs
jmp
adc
cli
ds
push
add
sub
mov
out
(bad)
push
ret
(bad)
loope
test
pop
in
and
mov
push
xor
inc
clc
inc
fsubr
mov
pop
leave
jno
(bad)
mov
inc
mov
nop
fldcw
cmp
sbb
jle
(bad)
xchg
push
leave
es
inc
pop
sbb
xor
xor
fcomip
lock
pop
imul
movs
nop
add
add
pushf
loopne
(bad)
cmp
or
adc
add
stc
pop
xor
movs
gs
sub
pop
fnstsw
and
pop
je
sub
sub
add
call
sub
inc
(bad)
jbe
jmp
inc
add
lar
ret
push
arpl
movs
sub
jp
fs
mov
jmp
push
push
das
jb
sub
push
mov
jmp
jne
push
add
rol
jne
push
inc
cs
inc
or
loop
(bad)
out
lds
and
add
dec
or
outs
cs
or
test
(bad)
arpl
xchg
or
outs
xchg
dec
push
in
out
cs
or
adc
inc
cmp
add
xor
jne
cs
out
enter
dec
mov
jo
repnz
adc
fwait
ret
cmp
push
sti
mov
mov
lock
inc
in
inc
inc
sbb
inc
dec
push
xor
pop
cmp
cmp
adc
dec
push
push
dec
ins
xchg
mov
cmp
and
leave
or
fsub
call
pop
jns
call
sub
je
dec
inc
jl
mov
and
popa
out
dec
ror
mov
inc
adc
ins
pop
scas
test
sbb
aas
push
mov
cmc
adc
adc
mov
std
jne
dec
ja
mov
or
add
add
jns
loopne
pop
jnp
ins
push
inc
jp
push
pushf
sub
nop
mov
push
sti
test
inc
test
push
or
jle
sub
sbb
cmc
cmp
idiv
stc
sub
or
daa
fdivr
xchg
pop
sub
ror
popa
and
mov
pop
ret
addr16
and
int
data16
pop
jecxz
clc
or
xor
mov
inc
jmp
inc
mov
mov
sub
mov
jne
jmp
cmp
xor
shl
and
add
cmp
add
sub
mov
push
rol
adc
mov
loopne
or
(bad)
push
xchg
inc
mov
lock
call
inc
hlt
add
or
ret
and
inc
lods
mov
fwait
and
or
sub
add
pop
jl
or
jl
pop
add
out
dec
push
pop
jl
xchg
mov
sub
cmp
fwait
push
aad
jbe
call
jp
push
xchg
test
test
mov
neg
ret
add
test
inc
inc
sub
cmp
jbe
in
sbb
sub
nop
and
inc
mov
ret
adc
add
jae
mov
std
adc
add
add
add
and
sbb
sbb
or
sub
jne
dec
adc
xchg
push
mov
pop
mov
inc
inc
clc
adc
cmp
sub
ret
and
fist
pop
xchg
pop
or
add
lds
push
or
ja
bound
lea
jnp
call
loopne
movs
jne
dec
dec
add
add
pop
adc
inc
(bad)
cmp
dec
add
imul
test
adc
and
mov
das
add
mov
push
ja
mov
sar
jo
adc
inc
add
push
cmp
jge
sub
xchg
dec
xor
jge
mov
sub
and
push
shl
sbb
(bad)
das
ret
add
out
call
push
sar
adc
jbe
mov
inc
push
jbe
hlt
inc
sbb
imul
jae
in
inc
dec
or
fdivr
add
repnz
out
and
adc
hlt
dec
push
ja
or
push
dec
add
shl
or
and
adc
jp
mov
adc
push
leave
sub
jo
and
dec
(bad)
and
or
inc
push
cmp
ins
cmp
es
mov
push
or
js
mov
mov
and
pop
adc
or
dec
push
or
lods
mov
cld
sbb
adc
mov
adc
shr
mov
dec
iret
inc
inc
adc
adc
outs
add
cmps
jbe
repz
inc
xor
fisub
or
or
stos
loop
adc
(bad)
cmp
mov
repnz
pop
mov
cld
add
sub
push
shl
push
xor
cmp
push
shr
push
in
(bad)
test
sub
or
adc
adc
enter
pop
mov
mov
(bad)
cdq
add
lods
sub
popa
std
dec
or
cmp
jl
fimul
stos
inc
pop
into
fld
ja
xchg
dec
or
lods
pop
dec
or
adc
cmp
inc
nop
mov
stos
mov
dec
je
dec
sbb
loopne
adc
jo
or
add
sbb
in
inc
rcr
test
shl
fisub
or
mov
mov
pop
stos
imul
ja
jnp
mov
add
sbb
push
pusha
cmp
and
retf
int3
mov
mov
sbb
fcomp
clc
mov
xchg
mov
test
push
mov
push
loope
fst
mov
push
xor
inc
fidiv
add
push
push
xor
mov
xchg
sub
add
jae
aam
xor
fadd
out
adc
jecxz
add
clc
add
cmp
ja
inc
or
add
cmp
je
ja
test
mov
pop
cmp
sahf
or
dec
xchg
push
fs
dec
xor
jae
mov
adc
in
inc
rol
dec
sbb
sbb
or
add
leave
pop
sbb
jae
cmp
mov
jne
and
bound
inc
lock
xchg
add
pop
movzx
or
sub
sub
(bad)
jbe
pusha
add
in
mov
hlt
rol
ja
jmp
addr16
pop
jnp
or
or
mov
loopne
cmp
sbb
sbb
adc
sbb
xchg
ret
mov
add
dec
sbb
inc
fist
xchg
je
or
pop
adc
jl
jae
test
stc
adc
sbb
lahf
inc
add
mov
sbb
or
sub
add
movs
in
push
dec
sti
rcl
dec
dec
dec
jg
add
int
cmp
dec
xchg
cmp
sub
and
add
rol
ret
adc
retf
(bad)
call
retf
mov
fld
xor
test
sub
mov
mov
push
fimul
dec
jge
mov
mov
push
add
jb
(bad)
ins
adc
adc
sbb
jnp
aam
fadd
lea
cmp
lods
je
add
popf
dec
mov
not
push
shr
nop
xor
xor
add
push
imul
or
pop
mov
or
push
adc
mov
sub
sbb
sbb
pop
and
xchg
retf
sub
or
push
js
lea
jle
dec
or
enter
test
jge
call
movs
dec
push
dec
mov
mov
stc
ds
nop
mov
ret
pinsrw
js
mov
shr
aaa
js
add
xor
or
adc
or
add
daa
mov
fdivr
jg
test
pop
imul
sub
inc
cmp
push
mov
idiv
xor
into
jo
ja
jle
cmp
adc
test
add
jmp
mov
sub
arpl
jle
outs
pop
and
mov
jle
or
jecxz
ins
mov
test
or
push
stc
dec
popa
int
or
xchg
cmp
mov
add
adc
ss
cwde
idiv
lock
push
or
and
inc
adc
mov
loop
xor
inc
pop
hlt
dec
and
das
and
dec
imul
pop
(bad)
out
xchg
imul
inc
es
daa
mov
loope
addr16
adc
mov
scas
push
add
or
xchg
or
inc
inc
mov
div
(bad)
sub
push
xchg
pop
push
pop
pop
mov
mov
in
and
inc
sbb
pop
ret
out
mov
add
inc
loop
in
inc
fwait
inc
cmp
mov
sbb
jno
adc
inc
jp
jne
inc
je
mov
or
pop
mov
adc
or
(bad)
popf
mov
add
dec
and
ret
nop
mov
add
push
dec
rcr
inc
sbb
mov
or
push
add
push
cld
in
or
aaa
jo
or
bound
loopne
mov
dec
add
jns
jns
in
test
in
xor
dec
inc
lods
cmp
cmp
ins
lods
bound
add
outs
and
or
fnstsw
out
inc
mov
icebp
mov
add
test
jg
inc
sub
push
pop
and
mov
packuswb
loope
pop
out
push
sbb
or
lea
jne
jmp
stos
xor
or
jle
sub
cmp
jge
cmp
lds
xor
aad
add
test
in
cmp
call
inc
(bad)
xor
imul
aad
xchg
outs
dec
cwde
and
push
jmp
rol
sbb
inc
nop
push
cmc
cmp
fs
loope
fisub
verw
inc
enter
jmp
xchg
push
adc
imul
add
mov
jle
mov
iret
push
in
(bad)
mov
sub
cmps
shl
jo
sbb
jg
aaa
stos
repz
adc
sbb
pop
adc
jne
and
push
cld
jmp
pop
sub
jno
mov
out
sbb
scas
cmp
popa
cmp
push
xor
adc
nop
jle
cwde
aam
lock
jge
mov
xlat
sub
aaa
movs
cmp
leave
mov
inc
sub
test
jp
shl
push
adc
jmp
movs
add
mov
pop
add
(bad)
stc
mov
or
test
repz
das
mov
aas
sbb
adc
sub
adc
and
push
inc
sub
mov
aaa
fild
add
(bad)
mov
sti
add
out
jge
add
(bad)
pop
loopne
inc
push
(bad)
push
fnstenv
or
inc
xor
adc
adc
aam
xchg
xor
jle
jmp
sub
iret
push
xor
xor
fdivr
add
sub
add
(bad)
cli
cdq
loopne
ret
(bad)
mov
pusha
inc
xchg
adc
loop
adc
fld1
jge
sub
push
popa
add
xor
(bad)
js
sub
push
test
arpl
push
rol
jnp
inc
dec
jnp
adc
xchg
cmp
(bad)
pop
jmp
push
retf
lods
mov
adc
retf
adc
jle
jne
jne
dec
loope
shl
inc
push
adc
xchg
mov
inc
(bad)
sbb
or
dec
not
inc
jp
test
jo
jl
pushf
fadd
sbb
sbb
jle
mov
push
loopne
add
push
pop
xor
cmps
xchg
movs
jle
arpl
inc
inc
test
cld
cmp
jmp
push
out
dec
je
jo
jo
mov
fnsave
lahf
jl
mov
add
add
arpl
xor
add
jb
inc
in
mov
pop
cmp
jo
mov
into
or
jl
jg
sbb
mov
xchg
cmp
push
jl
cmp
adc
inc
rol
cmp
lds
sbb
(bad)
loop
add
mov
cmps
inc
and
mov
add
pop
lahf
push
jmp
sub
inc
inc
ret
pop
in
cli
imul
adc
cmc
jbe
leave
pop
imul
push
mov
push
or
jmp
add
imul
mov
jno
push
mov
jne
jecxz
test
sub
idiv
mov
mov
cwde
and
je
add
ja
add
rol
mov
daa
pusha
xlat
adc
gs
push
pop
xor
sbb
cmp
or
sub
sub
xchg
add
push
fucomi
and
or
aaa
mov
mov
xor
lods
sub
pop
add
jbe
adc
(bad)
pusha
add
sbb
cwde
mov
jmp
loopne
js
pop
mov
out
(bad)
mov
sbb
fdiv
push
dec
xor
loope
cmp
ja
mov
xor
jo
and
adc
je
(bad)
in
ja
mov
add
add
scas
and
inc
std
dec
ins
add
jb
mov
imul
call
sbb
dec
jo
and
push
xor
dec
mov
jmp
add
and
cs
or
stos
out
inc
sbb
add
stc
call
jg
add
cmp
or
and
and
adc
mov
cmp
mov
(bad)
cld
imul
imul
jmp
ja
or
and
sbb
mov
lea
dec
je
in
test
jb
or
sbb
push
pop
arpl
sbb
add
add
inc
add
mov
push
test
sbb
or
jl
xor
cli
iret
pop
inc
inc
push
xlat
mov
rcr
and
inc
popa
adc
pop
add
and
lock
xchg
les
xchg
pop
sub
add
cmp
inc
cmc
pusha
stos
mov
fucomp
sub
cmp
hlt
push
push
jne
and
mov
ins
(bad)
push
jmp
sub
pop
shl
pop
mov
mov
cmp
je
adc
test
or
sbb
test
push
adc
or
inc
push
xor
neg
push
into
fs
push
xchg
push
test
movs
das
ret
dec
sub
add
add
dec
push
loope
lods
jmp
cmp
ret
add
fs
sbb
stos
ins
ja
fld
(bad)
push
adc
sub
pop
nop
stos
jnp
aaa
mov
adc
jne
jmp
aaa
jge
jmp
or
(bad)
mov
mov
mov
adc
add
fld
pop
mov
xor
pop
adc
loope
loope
clc
stc
jne
inc
bswap
lock
sbb
js
or
pop
aas
adc
test
pop
or
mov
rcl
pop
jg
xlat
jo
test
or
shl
test
inc
adc
pop
leave
add
push
inc
lock
js
or
sahf
jo
and
adc
or
in
and
and
pop
test
inc
in
enter
mov
adc
mov
test
pop
push
sar
inc
ins
jne
pop
sbb
or
shl
scas
call
jns
inc
rol
imul
mov
cmovae
mov
ror
sbb
pop
pop
push
out
pop
xlat
sbb
or
pop
lods
loopne
add
pop
mov
in
add
rol
xchg
ds
dec
lock
or
imul
xor
pusha
push
add
cmp
and
mov
jne
pusha
cwde
aaa
pop
pop
push
add
js
js
mov
add
sbb
xchg
pop
aaa
push
and
nop
in
and
(bad)
lea
and
or
jecxz
cdq
mov
out
adc
jo
pop
mov
icebp
mov
outs
and
daa
call
cmps
fdivr
sbb
cmp
lock
stc
xchg
rol
or
fldenv
mov
mov
xchg
mov
mov
cmp
cli
inc
jl
movs
aaa
dec
movs
fnstenv
cwde
pop
out
jle
shl
push
pushf
add
fiadd
sbb
xor
adc
test
loopne
xor
mov
ret
movs
imul
ror
iret
test
(bad)
or
pusha
in
fadd
add
push
sub
mov
shl
add
pop
mov
jge
xor
fdiv
mov
fmul
inc
loop
inc
push
mov
lea
dec
or
inc
mov
cmp
pop
in
sbb
sbb
retf
push
loope
add
push
and
cmp
and
test
faddp
cmp
maskmovq
test
fisttp
jb
jmp
adc
jnp
das
adc
sbb
adc
xchg
pusha
add
add
je
sti
mov
cmps
xor
adc
mov
lea
push
out
loopne
sbb
dec
ins
aaa
div
shr
nop
push
or
cmp
adc
test
xor
xchg
adc
pop
sub
or
inc
adc
dec
adc
pusha
sub
cmp
pop
cli
xchg
(bad)
dec
in
add
dec
jl
xor
loop
ds
test
mov
mov
jae
inc
mov
lahf
rcl
ror
mov
rol
mov
test
sub
xor
jns
xchg
pop
push
add
hlt
or
jns
cmp
lahf
add
popa
aam
mov
fs
mov
test
imul
retf
loopne
je
retf
dec
fild
push
inc
fadd
jns
push
adc
jl
inc
(bad)
(bad)
or
mov
adc
jb
pusha
sbb
xor
cdq
ins
and
add
xlat
or
sub
dec
push
mov
xor
adc
push
jge
retf
rcl
call
push
inc
ja
add
sub
xor
test
aad
shl
fist
mov
xchg
inc
adc
xor
jnp
(bad)
ficom
sub
not
fisttp
xor
sahf
jge
scas
or
into
push
push
sub
mov
clc
in
sub
sar
sbb
push
cmp
jle
push
cmp
(bad)
push
fsubr
repz
mov
or
loop
and
cmp
or
jge
adc
fcom
add
or
bound
popa
hlt
fwait
add
pop
test
pop
mov
add
call
shl
mov
sbb
cmps
das
mov
das
or
xchg
and
hlt
loope
and
jg
and
mov
sub
and
jmp
ss
cmp
lea
scas
dec
sub
call
pop
aas
sbb
mov
cmps
nop
mov
mov
mov
lahf
into
xor
xor
cmps
sbb
mov
addr16
shrd
cmps
cmp
pushf
enter
outs
icebp
add
jmp
data16
outs
inc
ins
jb
icebp
sub
jecxz
jbe
adc
sub
lods
repnz
in
add
dec
xor
pushf
ret
and
aaa
jo
sti
inc
cs
dec
adc
cmp
test
pop
movs
mov
lea
lds
mov
fisub
jg
mov
ja
push
push
sbb
ds
outs
clc
mov
test
push
je
sti
mov
push
xor
fistp
cmc
sar
cmp
aam
mov
pop
dec
and
cmp
gs
jg
test
inc
out
and
inc
mov
push
cmp
jmp
cdq
fadd
(bad)
push
movzx
icebp
jne
mov
xor
repz
or
adc
imul
sub
push
or
adc
pop
sbb
pop
adc
or
jne
aaa
and
mov
or
adc
xor
stos
dec
or
push
xor
push
push
fadd
jo
jbe
mov
or
scas
mov
xchg
ret
out
push
inc
outs
or
out
or
(bad)
lds
jmp
jmp
mov
jle
or
mov
add
pusha
sbb
icebp
push
and
test
in
das
or
or
inc
mov
loopne
ret
jl
mov
into
mov
xor
pop
mov
das
inc
adc
rol
inc
add
cmp
and
je
and
and
enter
xchg
aad
loopne
add
pusha
mov
xor
ins
sub
mov
pop
mov
shl
imul
jbe
jl
jge
push
add
stos
inc
cmp
or
and
sub
int
loopne
clc
hlt
ret
popf
sub
das
lock
in
adc
fs
cmp
enter
add
add
push
es
sbb
xor
stos
xchg
inc
imul
in
frstor
in
repnz
sub
cmp
dec
ins
aad
ret
dec
imul
cmp
add
jecxz
push
dec
je
shl
sbb
bound
or
shr
and
jg
xor
dec
test
push
push
jmp
or
jmp
sub
je
out
pop
fwait
sbb
fst
aam
sbb
cdq
adc
jmp
(bad)
push
jo
loope
dec
sbb
push
add
rcl
stos
fmulp
sub
in
add
xchg
pop
jg
push
fiadd
mov
and
xchg
or
dec
mov
adc
pop
push
cmp
js
(bad)
sti
scas
xchg
ret
add
add
add
add
xor
add
inc
jo
imul
outs
sub
(bad)
sar
mov
add
shr
jg
mov
inc
push
sub
push
es
cs
sbb
sbb
add
(bad)
mov
imul
ss
or
pop
add
adc
sbb
push
pop
dec
mov
sbb
scas
sub
jbe
inc
aam
jle
cwde
sbb
cld
mov
cmc
fnstsw
inc
data16
push
add
cmp
push
daa
in
and
out
inc
push
sub
inc
(bad)
jnp
mov
xchg
popa
mov
sbb
ror
cmp
sbb
shl
sbb
xchg
pop
mov
aaa
call
jl
(bad)
or
fs
inc
jl
inc
lods
movs
dec
cmp
jmp
nop
xor
call
jne
in
or
mov
rcl
aaa
cmp
lea
sub
pop
push
add
or
xchg
enter
sub
cs
mov
push
mov
iret
pop
jl
add
or
mov
cmp
or
dec
lea
inc
(bad)
jnp
fiadd
push
cwde
sti
neg
sub
js
dec
rol
and
sub
daa
jp
mov
ret
add
js
jp
sub
sub
test
sahf
adc
add
movs
or
dec
cmp
inc
or
cli
push
xor
sub
mov
(bad)
sub
xor
xchg
int3
jo
inc
clc
ret
lods
fisttp
mov
mov
dec
inc
in
xor
cmp
push
jmp
xor
push
mov
mov
or
push
lds
xchg
js
mov
mov
jp
pop
add
jg
push
loope
cmp
add
inc
jle
pop
sbb
or
dec
in
aam
mov
int3
into
or
dec
in
fidivr
or
nop
jo
mov
push
in
inc
inc
mov
dec
add
xor
mov
shl
movsx
loopne
dec
add
lea
xchg
xchg
or
sbb
mov
icebp
je
mov
xor
add
ret
jg
sbb
clc
mov
cmp
adc
cmps
xchg
and
push
dec
retf
mov
jo
add
pop
enter
mov
cmps
hlt
xor
push
jo
daa
int
push
dec
in
xor
les
out
imul
fimul
sar
inc
inc
stos
mov
xchg
mov
pop
mov
push
add
add
or
stos
dec
push
add
repnz
sbb
xchg
add
nop
or
xchg
add
add
or
mov
sub
push
inc
test
shl
retf
cmps
jb
adc
aam
leave
and
adc
mov
or
jl
jle
mov
sub
mov
mov
push
cmp
es
jg
jl
fcom
or
loopne
mov
dec
jge
inc
push
loopne
jle
ret
mov
inc
add
pop
adc
in
xor
retf
xor
adc
mov
loop
or
inc
jl
out
es
mov
div
ror
(bad)
cmp
jecxz
dec
stc
mov
jge
mov
or
sbb
jns
test
mov
inc
lea
mov
dec
les
rol
adc
xor
or
sbb
and
xchg
ret
ficom
sbb
pusha
sub
jle
mov
or
sbb
jne
add
add
mov
outs
push
jnp
inc
sbb
shl
(bad)
push
add
mov
jge
or
jb
cmp
ins
call
pop
or
fdiv
test
scas
mov
xchg
jge
push
jecxz
sbb
jle
push
mov
adc
mov
bound
or
adc
pop
dec
bound
xchg
jne
sar
sbb
lea
imul
lock
fisub
aas
fs
push
mov
ret
or
inc
dec
cmp
inc
loopne
or
inc
push
icebp
pusha
lock
jb
or
mov
or
sbb
ret
xlat
adc
jno
mov
adc
(bad)
mov
dec
mov
or
inc
sbb
dec
(bad)
in
sahf
adc
popa
rcr
jne
and
(bad)
jle
and
mov
dec
inc
or
and
xor
jno
jae
in
lock
sar
in
add
mov
jmp
sub
ja
push
mov
or
dec
xor
test
or
sbb
and
sahf
into
adc
xor
push
adc
push
sub
sbb
mov
xor
xor
shl
xor
cmp
and
outs
inc
es
adc
ret
scas
lock
push
and
mov
cmp
xchg
mov
sbb
add
xor
push
dec
fucomp
lock
je
inc
mov
int3
imul
mov
sub
test
xchg
sbb
add
sti
iret
and
dec
(bad)
iret
cmp
mov
int
sbb
mov
mov
push
mov
lock
push
add
je
pop
loopne
push
repnz
inc
jmp
out
ror
daa
lds
inc
cmp
or
fbstp
ja
push
daa
inc
leave
add
sbb
adc
sbb
mov
sub
or
loop
or
daa
test
iret
sub
jp
mov
call
xor
jecxz
jns
mov
xor
jp
cmp
and
push
pop
and
inc
ja
pop
and
gs
(bad)
push
std
(bad)
lock
cmp
and
das
mov
push
sbb
sahf
les
lea
test
xor
mov
sbb
outs
adc
add
clc
addr16
retf
sub
rcl
adc
stc
nop
dec
mov
jo
xchg
mov
mov
sbb
out
mov
inc
and
scas
dec
sbb
push
ja
or
mov
inc
mov
dec
xchg
(bad)
test
imul
pop
outs
sbb
mov
push
sub
push
jbe
enter
and
xchg
xor
hlt
je
scas
sbb
mov
inc
sar
repnz
mov
jnp
cmp
jae
icebp
je
jp
sub
jbe
inc
in
or
adc
lea
and
and
outs
add
sub
add
shl
jne
mov
jmp
(bad)
fnstcw
rol
xor
adc
sub
inc
mov
cmp
jmp
adc
ror
fadd
fmul
mov
pop
sbb
ins
cmp
dec
jmp
call
test
out
lods
mov
xor
shr
push
loopne
sub
xchg
jbe
mov
enter
sub
inc
fisttp
push
in
jne
xchg
mov
jge
xor
mov
ja
add
or
sar
mov
sbb
jge
mov
je
fdivp
push
nop
dec
mov
mov
adc
(bad)
pusha
cwde
pop
hlt
mov
mov
push
sbb
or
pop
mov
cmp
rol
inc
jo
je
adc
or
push
dec
retf
sub
add
jmp
dec
loop
les
in
xchg
daa
add
stc
mov
jo
int3
mov
clts
loopne
mov
mov
push
xchg
mov
icebp
push
inc
xchg
mov
ins
mov
inc
sahf
shl
push
add
xor
ds
dec
jo
jmp
aam
or
adc
or
fmul
jne
in
ins
int
dec
fdivr
xor
adc
js
mov
in
adc
push
in
test
lea
rcr
mov
adc
aas
cwde
xor
lock
bound
sbb
push
loopne
or
mov
push
inc
xchg
fist
arpl
mov
or
fiadd
imul
pop
jno
inc
push
repz
lock
cbw
adc
cmp
leave
inc
aas
pop
add
mov
rcr
je
int3
cmp
add
xor
push
mov
shl
and
push
add
adc
add
xor
add
mov
fs
loopne
jo
scas
push
js
icebp
mov
add
mov
lea
imul
or
js
sbb
sub
dec
ret
push
adc
push
mov
fwait
mov
sub
jg
inc
cmps
add
enter
ss
mov
xchg
or
push
adc
and
adc
or
dec
(bad)
paddusw
movs
mov
fisubr
or
cmps
mov
inc
xchg
js
or
shl
adc
mov
sbb
xlat
mov
mov
lock
mov
rcr
push
add
js
lock
call
(bad)
enter
add
daa
add
fidivr
in
cs
rcr
jo
adc
mov
mov
ret
in
inc
xchg
(bad)
dec
push
lock
mov
sub
fnstcw
mov
lea
nop
loopne
adc
jae
cmp
aaa
daa
mov
fbstp
mov
xor
mov
dec
nop
shl
pop
dec
and
stos
xchg
icebp
mov
inc
add
dec
and
pop
pop
rol
dec
cmp
xor
ins
mov
push
mov
fadd
mov
mov
inc
and
mov
sbb
dec
push
ja
pop
icebp
sbb
fdiv
add
jl
inc
repz
das
sbb
push
loopne
and
add
inc
pop
add
paddb
and
lock
pop
ret
mov
repz
cmp
sbb
add
sbb
add
inc
es
ror
leave
add
inc
xchg
les
jb
(bad)
aam
out
jo
pop
and
mov
fucomp
les
inc
stos
out
push
rol
or
or
scas
loop
push
sbb
int3
icebp
enter
xchg
loopne
push
add
add
jb
xor
mov
sti
fdivr
inc
test
add
mov
mov
push
or
mov
push
push
add
les
(bad)
dec
pop
in
sbb
gs
or
push
add
adc
mov
mov
push
or
je
dec
cs
fld
cs
or
jmp
and
je
cld
dec
cmps
and
inc
sub
je
cld
sbb
sub
sub
bound
jge
sub
xchg
adc
xchg
les
je
push
scas
test
add
and
sub
jne
pop
ins
mov
nop
imul
je
dec
mov
xor
sub
inc
ins
mov
add
test
mov
das
sbb
pop
daa
or
sti
add
sbb
sahf
call
sub
out
sbb
mov
adc
fcmove
ret
and
jne
lock
add
sbb
neg
out
jne
enter
inc
sub
les
or
aaa
es
cmp
jne
sub
popa
pop
(bad)
xchg
inc
imul
sar
mov
jl
and
dec
(bad)
ja
pop
popa
add
jl
cmp
ds
mov
xchg
jge
imul
inc
adc
inc
jle
jo
pop
add
add
data16
sub
inc
dec
loopne
fist
fcmovne
sti
dec
addr16
jns
xrelease
inc
add
or
mov
ss
(bad)
stos
jbe
(bad)
sbb
jne
and
or
sbb
fnstenv
xor
push
pop
mov
cdq
idiv
dec
adc
inc
pushf
ret
out
or
and
add
or
in
int3
sub
retf
mov
and
mov
mov
mov
mov
sub
push
lods
jbe
aas
ret
dec
loope
(bad)
add
leave
dec
dec
push
dec
inc
add
add
pop
mov
sub
inc
call
add
mov
inc
mov
pop
adc
test
add
je
inc
or
mov
mov
push
cmp
es
mov
push
add
adc
adc
rcl
or
or
and
pop
popa
push
sbb
cmp
push
push
les
push
pop
cs
or
add
shr
rcr
adc
push
popa
repz
push
xchg
lods
and
lock
sub
sahf
ds
retf
imul
cmp
xor
hlt
dec
mov
and
xchg
cmp
cmp
sub
into
mov
das
xchg
xor
xor
test
sbb
mov
add
inc
rcr
pop
sbb
pop
add
add
mov
(bad)
inc
xchg
mov
pushf
test
sahf
aas
mov
or
cmc
hlt
dec
js
ret
push
adc
(bad)
dec
inc
jne
push
adc
mov
lds
adc
gs
sub
std
rcr
ss
inc
cmp
push
dec
adc
jl
sbb
mov
mov
call
xor
aas
xchg
xor
lea
xchg
loope
clc
lock
and
call
mov
fnstenv
fild
add
inc
ret
imul
xlat
sbb
jl
outs
push
(bad)
ss
pop
lods
push
jno
ins
ret
jge
lea
test
into
inc
cs
mov
cld
lock
jmp
mov
inc
nop
sbb
sti
js
pop
inc
add
repz
fdivr
lahf
sar
neg
add
mov
pop
adc
mov
inc
jns
inc
adc
mov
js
jl
add
adc
lock
sbb
call
add
shl
add
mov
or
jecxz
add
and
(bad)
lock
mov
xchg
dec
inc
sub
mov
std
or
rcl
push
mov
mov
jl
inc
fisub
movs
popa
or
mov
cmp
adc
clc
or
lds
xor
popa
jo
jmp
mov
std
popf
add
cmps
and
fidivr
cmp
ins
test
es
jmp
int3
and
adc
sub
mov
(bad)
mov
mov
into
mov
daa
xchg
pop
js
mov
cmp
inc
pop
cwde
jl
and
push
pop
sbb
je
and
outs
mov
and
jge
push
adc
inc
test
fcom
inc
or
jns
add
fimul
jbe
xor
add
ds
dec
sbb
pop
add
inc
add
popa
cmp
jle
push
or
add
dec
ja
test
loopne
push
in
pusha
mov
or
outs
in
pop
add
mov
jle
inc
ins
inc
outs
neg
es
add
(bad)
mov
push
pop
adc
mov
pop
jo
and
xor
mov
adc
fadd
inc
sbb
rcl
sub
sbb
pushf
xor
sub
lods
or
adc
adc
(bad)
js
mov
sbb
shr
in
jge
movs
aaa
sub
rol
push
cwde
pop
es
xor
lods
sbb
mov
xor
inc
retf
jmp
out
ins
pusha
syscall
jge
pushf
sub
lahf
or
data16
test
cwde
push
popa
adc
xchg
push
lock
loop
push
les
and
add
cmp
fmul
add
pop
mov
inc
mov
jl
(bad)
mov
rcr
retf
rol
push
add
in
jl
and
loope
mov
test
push
xor
mov
test
enter
or
add
pop
add
mov
mov
push
sub
xchg
movhps
cmp
fdivr
fist
cmp
pop
dec
sbb
outs
pop
int
adc
xor
in
add
lock
shl
cli
ss
jns
mov
out
adc
in
sbb
cmps
fcom
push
imul
lea
ret
push
jbe
or
lds
ret
mov
call
popf
loop
div
inc
xor
inc
xor
mov
mov
inc
and
jmp
rcl
pop
jecxz
adc
and
loopne
inc
pop
sub
rol
mov
ret
xor
cmp
ret
enter
loope
inc
les
ds
stc
popa
out
ja
sbb
enter
pop
mov
inc
push
mov
mov
mov
rcl
ins
fcom
(bad)
(bad)
sbb
add
mov
mov
cmp
enter
icebp
or
dec
mov
inc
test
add
inc
xor
or
es
add
mov
retf
jmp
sti
fdiv
or
add
iret
add
sbb
mov
adc
test
add
dec
add
add
arpl
enter
mov
ins
movsx
add
inc
sbb
mov
cmps
loopne
(bad)
and
cmp
adc
adc
adc
pop
sub
loopne
or
or
mov
xchg
loop
rol
and
push
retf
rcr
ds
add
sbb
dec
aam
mov
xchg
sub
int3
rol
outs
adc
jmp
mov
test
mov
inc
out
jp
pop
shr
fs
push
mov
dec
mov
fisubr
add
jo
rol
inc
and
es
mov
in
pop
add
inc
adc
push
mov
fst
dec
add
es
je
(bad)
sbb
fwait
clc
(bad)
pop
fimul
inc
fmulp
in
(bad)
outs
push
inc
cmp
mov
punpcklbw
cmp
jne
rcl
mov
sbb
fsubr
dec
mov
xchg
icebp
dec
movs
pushf
outs
push
push
xor
dec
and
dec
lea
add
in
lds
mov
jg
inc
xchg
ror
push
jp
aam
aaa
ret
xor
add
pop
inc
sub
adc
movs
sub
js
jl
pushf
push
cmp
ss
add
aaa
add
cmp
cmp
or
mov
pop
test
jnp
add
sbb
mov
imul
sbb
cwde
retf
mov
or
jp
clc
adc
xor
jo
xchg
adc
shl
cmp
not
add
sub
inc
add
adc
inc
into
xor
push
push
shl
or
(bad)
inc
int
cmp
mov
dec
cmps
inc
(bad)
add
add
out
mov
adc
jo
cmp
jge
js
jle
push
clc
and
jg
fwait
rcl
(bad)
push
es
inc
mov
jbe
dec
in
mov
ja
mov
and
mov
loope
push
mov
addr16
push
add
pop
push
inc
loop
inc
or
pushf
mov
jns
adc
js
jno
or
je
jb
xchg
cmp
data16
cmp
pop
or
cld
loope
fwait
mov
fldenv
cmps
or
loopne
add
mov
xor
push
sbb
cmp
push
sub
stos
inc
dec
or
mov
sbb
jmp
inc
xor
in
jge
rol
jns
aas
mov
jl
xchg
jne
not
js
mov
pusha
jl
sti
data16
retf
in
sub
sti
out
popa
xchg
or
add
imul
adc
in
dec
inc
fdiv
adc
inc
adc
rol
popa
or
sbb
fiadd
xor
popa
call
pop
or
xor
add
adc
adc
nop
mov
xor
ja
leave
in
or
dec
rcr
je
jle
jns
aad
xchg
icebp
fnstsw
fld
or
xchg
cmp
add
add
ss
das
loopne
add
shr
sbb
push
and
inc
inc
movs
loope
mov
popa
ffree
cmp
cmp
pop
or
mov
out
retf
sbb
mov
fst
sbb
push
cmp
dec
rcr
jo
mov
imul
mov
fcom
loop
sub
xchg
fs
rcl
dec
ret
add
ret
enter
fimul
dec
pusha
add
loop
xchg
cmp
inc
sti
jg
push
inc
dec
loop
mov
adc
pusha
mov
adc
out
or
addr16
stos
pop
fimul
stos
sbb
dec
pop
lock
push
pop
push
loope
mov
or
hlt
mov
mov
(bad)
inc
nop
mov
inc
test
fiadd
mov
xor
dec
rcr
push
test
or
fisubr
push
pop
push
sub
dec
adc
lods
int
sbb
loop
sti
dec
sub
outs
xor
cli
es
ins
push
adc
mov
stos
push
aam
dec
cmp
add
hlt
(bad)
or
push
leave
pop
pop
je
dec
je
jmp
xchg
add
add
les
adc
sbb
mov
or
jmp
fwait
adc
push
adc
adc
xchg
mov
adc
lock
or
(bad)
fisubr
xchg
dec
sbb
leave
and
push
jnp
xchg
scas
sbb
and
inc
pop
pushf
pop
or
jmp
push
jb
cmp
mov
stc
pop
das
jns
or
adc
mov
xchg
vpackuswb
rcr
aaa
std
jmp
inc
test
(bad)
jmp
jbe
xor
fsub
and
shl
lds
add
sbb
sbb
and
sar
inc
test
inc
int
cdq
aas
xor
mov
movs
sar
mov
pop
ds
test
mov
call
xchg
enter
cmp
push
add
and
push
mov
dec
shr
adc
aaa
mov
ror
add
lods
mov
test
sub
rcl
(bad)
(bad)
or
cs
push
push
xchg
retf
dec
adc
clc
test
outs
xor
mov
xchg
les
jmp
adc
pop
add
xchg
loopne
jmp
sbb
scas
retf
pop
or
pop
cmp
push
add
push
adc
loopne
repz
push
mov
nop
inc
add
cli
inc
es
push
adc
cmps
xchg
in
daa
loopne
add
and
dec
adc
cmp
clc
push
call
test
push
pusha
ds
sbb
and
mov
mov
sbb
iret
and
push
sahf
sbb
xor
rcr
hlt
fcomp
cld
popa
retf
sbb
inc
mov
push
into
xchg
ret
sub
pop
dec
retf
xor
sbb
fnstenv
jmp
xor
jle
cld
mov
scas
cmp
jg
pop
or
mov
inc
clc
jge
add
jbe
clc
sub
lock
pop
stos
mov
jbe
fmul
inc
inc
sbb
int
in
jle
clc
and
sbb
fucom
jg
sbb
cmps
inc
out
or
jbe
out
pop
ror
inc
cdq
in
mov
fucomi
inc
or
inc
bound
mov
push
dec
cmp
dec
aam
into
or
push
add
shl
aas
ror
loope
pop
add
mov
outs
rcr
push
aam
pop
mov
inc
js
add
jl
adc
adc
daa
xchg
test
fnstsw
push
call
or
jmp
pusha
push
add
or
push
out
loopne
pusha
je
push
adc
mov
adc
inc
test
clc
pop
sub
jge
mov
dec
movs
js
sub
inc
hlt
adc
shr
ds
sub
lea
cmps
jo
mov
add
push
test
or
adc
retf
mov
or
push
push
add
hlt
adc
cmp
nop
in
loopne
mov
loop
addr16
xor
add
es
and
add
pop
inc
clc
fstp
xor
fsubr
or
data16
lock
mov
add
je
push
cmp
and
inc
loopne
and
cmp
ror
out
dec
add
and
aam
add
lahf
imul
das
pop
adc
inc
mov
push
push
mov
adc
sub
adc
jge
sub
(bad)
(bad)
(bad)
test
int3
sar
push
pop
mov
jl
add
add
ror
cmp
and
cmp
in
ret
fcom
jnp
hlt
daa
cmp
xchg
mov
adc
mov
mov
gs
gs
fs
dec
popa
cmps
add
cs
mov
shr
sbb
fimul
mov
ffreep
arpl
jg
adc
jae
outs
adc
or
push
mov
push
int3
add
in
js
outs
cmp
mov
in
push
lods
fs
movups
adc
sbb
les
out
nop
in
in
jbe
(bad)
fisttp
int3
jp
hlt
mov
inc
sar
mov
sti
add
lds
pop
jbe
retf
test
into
leave
or
je
prefetchnta
mov
das
rcr
add
mov
ins
xchg
push
push
das
mov
outs
add
(bad)
(bad)
jmp
add
les
fstp
adc
push
call
cmp
test
sbb
cmps
sbb
mov
or
add
sub
or
call
add
sbb
push
cmp
sub
add
pop
dec
xor
mov
inc
add
mov
mov
mov
in
push
lahf
push
adc
dec
sbb
mov
dec
adc
mov
push
and
and
push
push
ja
test
lock
lock
cwde
and
sbb
retf
sahf
mov
bsf
ins
add
jbe
mov
inc
jae
add
push
mov
add
repnz
pop
add
and
dec
jl
add
cwde
nop
jnp
test
cmp
sar
adc
test
outs
xchg
scas
in
or
mov
inc
stc
inc
int
dec
pop
mov
test
lods
shl
mov
or
xchg
sub
imul
jp
xor
push
in
mov
cld
cli
sti
or
rol
jne
sub
mov
test
shl
and
adc
fcmovu
inc
jmp
dec
movs
mov
or
int3
push
mov
mov
push
jge
(bad)
data16
mov
clc
mov
push
adc
(bad)
cmp
adc
sub
cmp
mov
das
into
jne
push
fadd
lock
(bad)
adc
push
mov
cs
imul
pop
ret
push
push
imul
mov
loopne
adc
adc
mov
dec
fcomp
mov
jo
shl
mov
ja
pop
in
shl
adc
dec
or
push
push
mov
not
(bad)
xchg
out
mov
jnp
aad
(bad)
mov
scas
gs
adc
mov
push
add
push
or
cmps
data16
not
shr
fdivp
fcomip
cmp
push
inc
push
clc
adc
sbb
push
xor
cmp
test
imul
add
dec
jl
pop
jg
pop
or
sbb
pop
scas
call
xcrypt-cbc
cmps
push
pusha
or
add
push
adc
mov
sbb
mov
js
mov
xchg
pop
mov
xor
mov
jle
pop
or
imul
and
imul
outs
mov
loope
sar
sub
adc
in
mov
add
push
mov
xchg
or
inc
push
dec
jg
jnp
mov
jle
add
lea
push
mov
push
xor
jne
cmp
xor
stos
pop
pop
adc
dec
test
add
shr
scas
sub
or
stos
test
xor
ror
push
mov
jmp
add
sysenter
and
aaa
mov
pushf
retf
adc
and
mov
cmc
push
push
icebp
ffree
cmp
or
mov
inc
mov
push
sub
fstp
sbb
xlat
inc
sbb
ret
mov
dec
add
inc
mov
pusha
or
ret
jo
ins
add
jge
lds
(bad)
fst
add
pop
push
imul
sub
cmp
pop
pop
fld
and
mov
add
pop
es
pinsrw
adc
and
sub
ficom
neg
sub
test
xor
popf
or
and
and
push
js
popf
dec
cli
inc
std
nop
jo
dec
or
je
xor
jno
retf
sahf
adc
fstp
ins
push
inc
or
imul
mov
mov
dec
test
or
imul
pop
mov
movs
ret
cmp
mov
dec
fs
fadd
dec
xor
xchg
je
shl
mov
xor
aad
(bad)
push
cmp
jl
pop
ret
fimul
push
fsub
pop
jo
aam
rol
add
mov
mov
movs
sbb
rol
add
sar
js
nop
add
cmp
jae
bound
sub
pop
in
pop
or
aas
sti
shl
bnd
out
pop
mov
sbb
and
mov
add
and
mov
or
in
movs
push
ins
or
sbb
cli
jbe
sbb
sbb
int3
push
div
cmp
push
pop
mov
pop
aaa
int
pop
mov
xor
sar
scas
xchg
adc
mov
clc
popa
js
(bad)
mov
lods
gs
pop
js
and
adc
in
add
and
inc
and
js
inc
cs
cmps
adc
inc
inc
dec
push
or
jne
(bad)
cmp
or
push
cwde
or
jle
mov
mov
cli
scas
mov
dec
mov
xchg
arpl
mov
dec
and
inc
in
push
mov
mul
xchg
pop
push
inc
sbb
or
sbb
nop
push
fimul
and
retf
aam
sbb
out
pop
or
pop
mov
mov
stc
repz
sub
repz
adc
ror
mov
lea
mov
setg
dec
adc
stc
sbb
ins
sbb
lea
in
or
jmp
lea
sub
das
scas
out
test
adc
and
jle
cwde
jecxz
add
jmp
mov
imul
js
outs
pop
mov
jo
or
(bad)
adc
cmp
xor
sar
add
mov
jo
call
clts
cmp
ja
out
sbb
lea
xor
(bad)
jae
mov
dec
adc
push
pop
xchg
div
mov
arpl
inc
xor
inc
jb
retf
add
add
adc
add
and
nop
out
xchg
xchg
sbb
test
xchg
cmp
sbb
cmp
pop
add
clc
mov
sub
push
inc
les
je
loopne
fs
test
ror
loopne
and
push
clc
push
adc
xchg
mov
dec
jb
mov
call
push
outs
bound
or
dec
cmp
ret
xchg
cmps
repnz
ss
cld
fdivrp
push
push
xlat
jb
or
std
push
jl
and
mov
ret
inc
sub
nop
push
dec
and
mov
mov
loopne
aaa
push
push
leave
and
mov
push
mov
sbb
adc
push
inc
pop
jl
add
test
imul
sub
jns
or
lods
mov
outs
sub
push
ins
mov
fdiv
add
aam
rol
mov
mov
cmp
imul
and
add
cmps
add
push
cwde
dec
sbb
ficom
add
add
shl
ret
sbb
inc
and
mov
or
pop
jecxz
jmp
or
clc
sub
sub
sub
rol
push
inc
lods
push
rcr
out
mov
lahf
add
pop
fadd
or
pop
outs
pop
pop
mov
or
or
das
ds
sbb
test
inc
in
or
or
mov
mov
ja
mov
dec
inc
jge
pop
loopne
dec
loopne
dec
and
dec
sub
(bad)
in
test
out
lods
jb
inc
adc
or
retf
pop
ja
ss
and
xchg
lods
mov
pop
xchg
rol
rcl
xor
loopne
push
stos
and
xor
or
leave
inc
cmp
sbb
nop
cmp
(bad)
push
das
mov
je
sub
xchg
aaa
daa
sbb
sbb
add
xor
adc
add
jae
cmp
add
inc
add
inc
dec
rol
or
add
ror
cmps
retf
jl
mov
jmp
push
jl
pop
pop
or
adc
or
call
mov
push
mov
cmps
sub
sub
fs
lock
xchg
push
jbe
cmp
jmp
cmp
jnp
inc
dec
jl
adc
rol
jp
mov
mov
cmp
jl
inc
call
in
dec
add
pop
sbb
rol
or
jbe
(bad)
(bad)
cmp
fs
lds
sbb
adc
push
rcr
pop
inc
test
or
add
cmp
mov
adc
jne
adc
xchg
daa
fs
pop
popa
push
xor
test
cmp
pushf
mov
xchg
ficom
mov
in
lock
push
mov
push
push
sbb
test
into
iret
xor
sbb
scas
push
and
xchg
ret
add
scas
mov
mov
mov
adc
pop
push
jl
sub
pop
loop
fld
rol
mov
push
inc
xor
ins
and
add
or
adc
test
fdivr
mov
mov
adc
or
movs
(bad)
and
inc
xchg
or
push
adc
(bad)
js
inc
ret
xor
jmp
jo
mov
xor
cmps
add
movs
and
fs
adc
cmp
or
in
test
mov
out
mov
jae
adc
pop
fs
sti
adc
(bad)
adc
call
or
lahf
aam
inc
rcl
mov
pop
imul
jo
mov
or
cmp
popa
pusha
nop
add
int
ins
int
(bad)
rcl
mov
adc
push
jbe
xor
or
mov
ror
dec
pop
ret
add
jmp
inc
add
jp
inc
sbb
scas
mov
xchg
loope
or
movs
rcl
out
test
add
mov
out
pop
retf
retf
jae
imul
mov
nop
ins
or
sub
or
or
pop
adc
adc
push
in
es
inc
pop
inc
test
push
push
jp
shr
adc
and
cmc
pop
jne
push
fwait
mov
scas
push
sbb
and
mov
inc
mov
pop
ds
lea
fmulp
cmp
idiv
loope
xor
jmp
or
ins
mov
push
mov
sub
fwait
cwde
mov
sub
jle
xlat
(bad)
mov
add
pop
cdq
mov
fidiv
sbb
push
add
cmp
lahf
xchg
cmp
mov
jae
xor
push
or
mov
arpl
and
add
cs
adc
mov
cmp
mov
add
pop
or
adc
cmp
outs
add
jbe
xor
not
push
mov
cmp
outs
sub
stc
add
push
data16
dec
or
ss
and
mov
pop
dec
sbb
out
add
shl
pop
inc
or
arpl
mov
xor
mov
es
dec
mov
push
cmp
enter
mov
dec
imul
add
ficomp
fs
sbb
jp
pop
mov
inc
cmp
push
add
push
cmp
or
sbb
ror
dec
and
and
cmp
jne
mov
sub
fldcw
ror
inc
jae
dec
inc
(bad)
jmp
sbb
fbstp
dec
push
or
push
adc
push
(bad)
pop
mov
mov
dec
retf
in
cmps
shl
mov
jge
sbb
dec
jmp
mov
mov
mov
jno
xchg
pusha
push
dec
daa
dec
push
add
xor
jae
mov
adc
inc
push
fisubr
mov
adc
add
pop
inc
push
jae
cmp
inc
inc
mov
inc
adc
iret
leave
push
inc
clc
stos
(bad)
add
add
nop
jns
push
lock
gs
retf
and
rol
out
cld
lea
push
mov
sub
sub
dec
rcl
jb
add
outs
sub
(bad)
jmp
dec
dec
cld
loopne
dec
repz
dec
or
push
add
dec
mov
push
mov
xor
xor
mov
jo
fnstsw
call
jl
push
bnd
push
data16
mov
test
ror
(bad)
jns
dec
add
jne
unpcklps
pop
push
ds
pop
add
hlt
ins
sub
xlat
fs
pop
jae
cmp
nop
xchg
cmps
outs
jecxz
push
sbb
mov
sysret
inc
or
fs
add
mov
jae
xchg
sbb
push
sar
test
sub
sbb
or
xor
cmp
pop
xor
sbb
hlt
push
shl
pop
inc
fmul
test
push
xchg
and
sbb
mov
sub
push
add
test
rcr
xchg
add
ror
xchg
sub
js
fs
inc
and
lods
arpl
xchg
xchg
xchg
retf
mov
jl
jl
dec
add
sub
push
or
movs
push
imul
adc
arpl
fs
jb
popf
stos
mov
sub
sub
ret
mov
or
jb
adc
stos
adc
pusha
in
xchg
pushf
xchg
mov
add
scas
leave
sub
dec
je
sbb
pusha
js
dec
arpl
and
pushf
cmp
imul
out
lea
and
inc
cmp
add
push
je
jo
push
xchg
pop
mov
and
sbb
aaa
inc
adc
mov
mov
cmp
fistp
and
cmp
hlt
sbb
sti
(bad)
jmp
pop
push
mov
dec
or
sbb
and
mov
cli
mov
mov
mov
dec
inc
push
das
and
sbb
push
add
or
mov
mov
pop
add
loope
cmps
cmps
mov
xor
stc
mov
js
add
xchg
mov
pop
mov
stos
test
ret
push
lahf
sbb
adc
or
push
inc
mov
gs
or
popf
dec
inc
xchg
sbb
push
add
cmp
dec
push
mov
jne
jb
pusha
cmp
pop
fcomp
jb
adc
(bad)
fdivr
sub
dec
repnz
adc
mov
bound
mov
int3
cmps
fdivr
xchg
add
mov
add
scas
add
aam
pushf
xor
daa
out
fwait
clc
mul
sahf
mov
dec
je
add
jmp
cmp
aaa
stos
hlt
and
nop
inc
imul
dec
(bad)
pusha
jo
call
xor
call
inc
cmp
(bad)
jmp
shl
add
add
xchg
fiadd
inc
cmp
imul
fmul
push
bound
pop
int3
xlat
das
sbb
clc
push
sbb
jne
sub
jge
cld
xor
ds
pop
dec
sbb
dec
mov
push
cld
shr
pop
xor
push
lea
and
xchg
pop
and
mov
push
or
or
inc
sub
add
enter
hlt
add
imul
inc
adc
pop
sub
pop
push
xchg
scas
adc
cmps
xor
xchg
push
in
movs
lods
loopne
adc
or
cmp
das
mov
js
(bad)
hlt
jbe
sub
or
push
mov
adc
push
sub
xor
gs
sub
fs
add
sbb
push
sbb
push
aaa
xor
push
add
sbb
pop
push
cmp
xchg
lea
sub
jg
and
imul
scas
or
sub
shl
sub
or
add
add
xor
cmps
or
mov
pop
add
dec
fadd
nop
retf
mov
icebp
clc
mov
mov
je
mov
or
movs
dec
mov
js
or
aaa
lods
push
inc
je
(bad)
cdq
retf
(bad)
push
sbb
leave
cmps
adc
sbb
sbb
cmp
loopne
stos
mov
inc
ss
dec
pop
jecxz
mov
aaa
sub
rcl
jg
fcomp
arpl
xchg
arpl
mov
gs
push
out
(bad)
rcr
adc
jl
js
imul
add
mov
cmp
jp
fneni(8087
jmp
mov
mov
aaa
scas
add
popa
dec
dec
je
lods
jbe
add
cmp
sbb
cmc
pop
inc
and
xor
xor
xor
mov
out
jmp
jmp
push
mov
pop
movs
inc
dec
and
dec
sbb
xor
jmp
js
daa
jge
mov
sub
push
dec
or
jecxz
inc
add
in
loopne
test
or
call
xlat
mov
fist
mov
movzx
int3
mov
mov
xchg
es
out
dec
neg
mov
cmp
push
rcr
inc
(bad)
and
ret
jle
test
inc
cmp
pusha
fild
rcr
movs
ds
pushf
lods
out
cmp
std
lea
mov
lea
adc
adc
shr
sub
fstp
xchg
push
cmp
fmul
fstp
add
inc
int3
lods
add
fistp
and
adc
int
or
add
and
add
(bad)
icebp
ds
adc
les
xchg
sbb
push
inc
pop
sar
inc
into
mov
int
add
dec
xchg
mov
sbb
fimul
(bad)
mov
mov
or
push
xchg
adc
add
pop
mov
mov
jl
pop
xchg
adc
dec
pop
(bad)
xor
aaa
mov
(bad)
imul
add
inc
pop
cmp
cmp
or
sub
imul
xor
pop
push
add
retf
dec
mov
sub
psubsb
pop
mov
dec
xor
or
pop
xchg
push
rol
(bad)
push
lock
inc
push
es
inc
mov
sbb
call
xlat
pusha
cmp
jae
jae
or
fmul
bound
ret
ficom
dec
sub
daa
xchg
inc
in
aad
mov
enter
mov
int
ins
sub
xchg
je
loopne
loopne
mov
pop
lock
push
jne
mov
or
pop
call
out
test
sub
mov
lea
and
bound
nop
and
stos
cmp
rol
adc
ror
sub
sbb
call
or
inc
add
mov
jo
mov
jbe
mov
inc
xchg
test
jle
mov
inc
dec
push
jg
mov
jmp
cmp
jle
retf
adc
inc
comiss
dec
hlt
je
pop
les
shl
and
or
or
hlt
inc
jnp
xchg
adc
or
loopne
adc
das
sbb
jl
xlat
rcr
add
cli
cmp
jbe
jmp
fscale
mov
inc
add
xchg
sub
rol
xchg
movs
push
adc
imul
add
and
pop
adc
jmp
mov
fisttp
jl
or
cmp
xor
in
(bad)
loop
inc
mov
inc
add
loop
pop
pop
cwde
and
dec
sub
push
ffree
mul
hlt
lock
add
in
or
xor
hlt
jg
scas
push
xchg
or
fcmovnbe
in
xor
js
push
lock
inc
dec
cwde
pusha
mov
shl
inc
add
jmp
add
(bad)
or
and
pop
nop
sar
sub
fstp
mov
cmp
inc
clc
sahf
movs
mov
inc
sbb
arpl
(bad)
pop
add
mov
fisub
mov
nop
dec
lods
adc
and
cmp
(bad)
(bad)
dec
inc
clc
inc
ret
adc
test
inc
inc
lds
cwde
or
adc
adc
fld
add
pop
loopne
jmp
sbb
jecxz
adc
or
or
fsub
scas
mov
mov
lea
popf
dec
rcr
adc
and
lock
inc
fs
mov
mov
in
jbe
mov
sbb
sub
jbe
add
idiv
jno
sub
jb
mov
fwait
inc
(bad)
fidivr
rol
nop
inc
lea
icebp
test
jecxz
xor
xor
jmp
mov
xchg
outs
clc
push
sub
xlat
mov
mov
frstor
jmp
push
shr
mov
add
adc
pusha
loopne
jo
or
scas
xor
sbb
clc
sbb
ins
sub
add
adc
inc
jo
imul
pop
mov
das
xchg
icebp
loop
and
mov
dec
and
jmp
aad
inc
or
enter
add
mov
push
adc
nop
sahf
sub
add
inc
or
std
jg
sbb
jl
pusha
mov
test
jne
rol
mov
mov
sub
adc
(bad)
mov
or
cmp
imul
imul
daa
mov
add
ds
mov
jge
mov
sbb
pop
lock
xchg
test
push
and
add
jmp
leave
std
out
add
mov
and
mov
cmp
mov
cmp
cli
mov
jmp
es
fmul
stc
je
xlat
clc
sub
xchg
mov
xchg
ror
test
loope
adc
push
sbb
cmp
inc
and
test
adc
popf
(bad)
(bad)
mov
outs
arpl
popf
daa
add
daa
mov
bound
jne
jne
or
ins
inc
adc
cmps
gs
pop
pusha
cmp
jo
(bad)
add
mov
dec
or
fld
xchg
retf
mov
dec
mov
or
dec
and
inc
pusha
mov
dec
icebp
adc
sbb
leave
mov
leave
xchg
cwde
xchg
cld
fild
fmul
adc
inc
fmul
call
repz
call
fmul
mov
clc
and
pop
rcl
lock
fisub
sbb
aam
fdiv
cld
ja
imul
jl
and
mov
call
in
xor
dec
shr
lods
push
fsub
jns
lods
mov
fs
call
call
pop
les
gs
or
adc
sbb
clc
movs
mov
rcr
fld
lock
mov
gs
xchg
add
sbb
push
int3
jns
cmps
in
cmp
xor
pop
in
mov
fwait
inc
or
dec
pop
and
hlt
arpl
dec
mov
inc
adc
lods
pop
sub
mov
sub
pop
pusha
push
daa
adc
mov
mov
inc
or
mov
enter
imul
xor
jne
or
sbb
test
or
lock
adc
repz
repz
adc
or
adc
ret
jns
or
inc
sbb
adc
mov
and
mov
cmp
or
inc
and
jb
or
xchg
xor
push
mov
pop
dec
pop
in
add
cmp
pop
mov
add
add
mov
fadd
and
xor
imul
mov
mov
pop
sub
aam
mov
jne
dec
cmp
(bad)
call
adc
xchg
mov
clc
jns
dec
push
mov
lea
mov
add
jp
out
xchg
xor
or
dec
pusha
test
out
inc
jo
sbb
gs
scas
or
in
(bad)
and
pusha
mov
jmp
xor
mov
shl
lock
out
repnz
stos
sbb
dec
in
sbb
mov
inc
fimul
and
in
fs
in
add
ds
test
pop
jge
sub
pop
mov
(bad)
dec
sbb
lock
in
sbb
sub
jle
in
mov
pusha
dec
loopne
xor
add
frstor
mov
retf
and
sub
jns
xchg
mov
mov
std
xlat
ret
jge
sub
or
ror
sbb
xchg
push
add
imul
adc
stos
arpl
sti
shl
sub
or
push
inc
movs
aam
sar
adc
sub
pop
sub
xor
fiadd
fbstp
add
sub
sbb
add
mov
push
sub
add
cmp
or
mov
in
sub
cwde
shl
pusha
and
sbb
cwde
ja
xchg
mov
or
ins
push
sub
dec
mov
push
jp
test
cmp
xchg
les
push
push
add
add
sbb
cmps
dec
call
dec
out
inc
jb
js
ficom
jne
or
mov
rol
or
cmps
imul
pop
sbb
or
inc
xor
fimul
das
(bad)
add
xchg
inc
add
(bad)
jns
sbb
xor
fldcw
add
inc
and
sti
dec
sbb
pop
or
add
adc
enter
cdq
pop
pop
dec
jecxz
sbb
or
cmp
sub
add
enter
test
test
add
sbb
pop
pop
mov
popa
loope
add
sub
lods
ja
xor
test
jmp
pop
iret
ret
pop
clc
ret
loopne
or
cmp
test
sub
mov
js
or
data16
aas
or
jne
neg
or
xor
or
sahf
test
and
mov
test
or
mov
inc
sar
or
add
pusha
push
shr
cmp
push
push
cdq
jmp
pusha
sub
pop
pop
icebp
shl
mov
or
std
pop
std
adc
add
out
(bad)
neg
lea
shl
div
mov
cs
sub
cs
sub
push
jo
xchg
xchg
push
hlt
and
mov
mov
adc
mov
hlt
xor
fimul
sti
mov
sbb
stos
imul
add
add
in
jns
(bad)
(bad)
adc
mov
cmps
inc
pop
mov
hlt
neg
and
jne
out
imul
lock
dec
push
in
int
mov
jb
jl
js
push
ja
not
ja
cld
add
add
xor
sub
mov
clc
add
add
enter
sub
daa
stos
clc
add
xchg
xchg
stos
in
pop
(bad)
fmul
inc
xchg
add
add
inc
jb
jne
aas
cmp
xor
daa
mov
call
aad
loop
fimul
mov
add
movs
adc
(bad)
shr
shl
pop
(bad)
arpl
cmc
retf
adc
stos
mov
sub
ins
fdiv
fcmovnb
sub
xchg
pop
cmp
push
lea
pop
test
push
sbb
adc
adc
add
mov
jge
and
mov
into
hlt
iret
shr
mov
out
stc
or
stc
sub
pushf
and
pop
and
lods
cmps
mov
retf
pop
sti
sbb
adc
dec
shl
mov
add
test
mov
push
dec
add
pop
cli
add
ds
inc
cmp
cmp
cli
pop
pop
sub
cmp
rcr
add
mov
mov
dec
add
aad
hlt
xchg
mov
push
jp
push
cli
push
add
pop
mov
adc
cmps
jns
loop
enter
dec
dec
inc
push
pop
push
neg
popw
push
ins
shr
pushf
aam
mov
mov
sub
inc
sbb
mov
int3
jge
sahf
cmps
imul
cmp
jle
mov
mov
int
sub
pop
pusha
and
xlat
(bad)
(bad)
cmp
add
add
loopne
xchg
sub
fidivr
ret
add
pushf
adc
or
call
push
xchg
pop
inc
scas
cmps
adc
pop
add
clc
dec
inc
adc
jno
push
or
dec
xchg
cmp
xor
jne
cmp
pop
mov
repz
sbb
pop
add
sbb
imul
lock
sar
or
pop
add
or
pusha
cmp
push
enter
fiadd
aaa
add
inc
mov
inc
cmps
test
mov
loope
xlat
nop
push
dec
mov
xor
mov
adc
inc
ret
clc
inc
test
or
push
nop
jbe
xor
lods
(bad)
aad
pop
popa
xor
jno
and
sub
or
out
std
(bad)
loopne
ja
lea
ja
sbb
push
push
and
jl
push
lods
mov
xchg
cmp
mov
sbb
ss
or
sbb
(bad)
mov
add
sbb
or
cmp
add
sbb
sbb
fmul
mov
add
push
inc
push
push
mov
cld
xor
pop
lock
sbb
inc
xchg
loopne
or
adc
and
push
jg
std
sbb
ja
dec
movzx
shl
loopne
adc
dec
ror
call
inc
and
or
aam
popa
ror
mov
inc
and
add
push
and
cmp
and
in
or
xchg
cmp
push
pop
add
or
dec
mov
add
adc
adc
cmps
inc
cmp
or
dec
ror
push
xchg
and
adc
xchg
jo
push
cmp
jne
sahf
push
jo
or
pop
jl
and
rcl
test
add
mov
add
fdiv
add
pop
mov
or
inc
add
inc
inc
xchg
xor
and
repnz
or
push
and
add
add
int
mov
je
mov
or
dec
adc
mov
shr
fnsave
dec
rcl
dec
into
jno
pop
adc
xor
mov
call
adc
pop
sbb
icebp
adc
add
mov
pop
mov
ds
test
mov
inc
sbb
fstp
push
xchg
sub
dec
add
into
inc
pop
jl
pop
push
enter
add
pop
sub
(bad)
adc
dec
pop
inc
icebp
or
cmp
hlt
xchg
popa
ins
cmp
inc
sub
xchg
xchg
sub
icebp
jne
ror
mov
inc
add
or
or
jno
jl
jmp
dec
out
and
and
(bad)
out
(bad)
in
inc
adc
or
imul
enter
push
je
inc
test
mov
jbe
out
loopne
test
pop
add
sbb
adc
xor
sar
jnp
sbb
dec
fldpi
inc
sbb
mov
ror
sbb
sbb
sbb
pop
adc
cmp
shl
xchg
sbb
push
dec
inc
jnp
in
out
inc
jno
or
cwde
push
adc
pop
or
sbb
nop
xor
es
add
movs
imul
xchg
jecxz
adc
adc
stos
dec
sbb
(bad)
aam
inc
loopne
ret
sbb
push
mov
(bad)
call
movs
(bad)
mov
loopne
stc
jo
sbb
dec
mov
jl
xor
fwait
shr
shl
inc
sub
pop
sub
adc
pop
fnstenv
jbe
jne
adc
leave
mov
add
xchg
out
add
(bad)
dec
inc
jnp
out
dec
sub
mov
add
xor
icebp
sar
adc
sub
adc
cmp
sbb
scas
add
and
push
inc
sbb
and
cmp
xchg
jnp
and
sbb
push
sub
and
and
and
fs
sub
es
jg
out
clc
mov
fld
cmovg
inc
mov
lea
lock
or
or
sti
loope
shl
adc
inc
push
mov
sub
bound
je
sub
dec
fisttp
add
shl
mov
das
shl
jl
xor
iret
add
or
aam
pusha
(bad)
fcom
push
(bad)
sti
dec
add
or
sub
and
mov
mov
adc
in
call
pop
cmp
enter
dec
aam
ret
sbb
add
imul
loope
add
xor
jmp
lock
dec
loop
or
add
popa
(bad)
aam
fist
add
add
add
add
rcr
fadd
pop
and
stos
adc
psllq
or
rcr
adc
(bad)
lock
jns
fs
jo
sti
jmp
pop
clc
in
popf
jne
dec
xor
(bad)
mov
aam
xor
mov
rcl
mov
sbb
jecxz
lock
add
inc
jmp
ss
or
pop
and
sub
mov
push
xchg
fst
int3
dec
dec
ror
dec
xchg
sbb
and
push
ficom
rcr
jns
movzx
push
or
adc
push
adc
sbb
sbb
mov
sbb
ds
mov
(bad)
dec
xchg
shl
adc
jl
jle
mov
push
add
inc
mov
gs
cmp
xchg
jge
adc
or
xor
mov
fwait
daa
clc
add
mov
xor
lds
dec
mov
imul
adc
popa
outs
mov
mov
es
inc
inc
scas
les
lock
push
mov
pusha
add
lea
pop
cmc
lods
pop
adc
xchg
dec
and
add
jge
add
sbb
jb
clc
dec
jne
fcomip
mov
cmp
sbb
mov
pushf
mov
mov
add
rol
aam
ins
sbb
cld
xchg
mov
mov
iret
jle
push
mov
mov
xor
fcomi
mov
mov
mov
or
loope
enter
push
add
or
sbb
ja
sub
rol
lods
xor
mov
mov
int3
pop
push
pop
inc
shr
or
and
lock
adc
cs
or
fcom
or
dec
or
stc
xchg
mov
or
adc
or
adc
sbb
cli
je
or
aad
pop
mov
js
mov
push
js
clc
mov
add
in
or
rol
aaa
lods
xor
push
push
pusha
mov
sub
cli
sbb
xchg
fidivr
dec
add
leave
je
adc
fiadd
cdq
div
dec
cmc
ins
jmp
xor
push
outs
sub
cmp
pop
add
in
jmp
jmp
jnp
xor
adc
or
dec
push
lock
idiv
pop
xor
mov
sbb
outs
sbb
push
jge
add
jne
std
dec
add
sbb
test
mov
and
clc
fimul
dec
or
xchg
movzx
(bad)
or
clc
hlt
dec
hlt
test
les
and
test
ror
sar
add
out
add
pushf
mov
daa
xlat
adc
or
js
add
adc
and
scas
shr
xor
jl
or
or
pop
pop
dec
pop
jnp
jle
pop
sbb
lock
jo
icebp
push
lea
mov
pop
jae
pop
and
xor
cli
sahf
lock
xchg
jb
(bad)
dec
dec
push
rcl
test
scas
jecxz
jmp
call
in
adc
push
rcl
adc
(bad)
frstor
dec
jecxz
jmp
jne
das
out
jmp
in
shr
and
mov
loope
daa
jle
ins
rol
mov
fwait
pop
pop
mov
call
mov
pop
mov
cmp
inc
cmp
jmp
adc
test
jg
adc
or
push
imul
jb
cmp
xor
xor
xor
retf
sub
jmp
or
pop
pusha
inc
mov
dec
fcmovne
gs
and
dec
dec
pop
inc
jbe
or
adc
mov
popf
loopne
xchg
cmp
sbb
sti
add
jmp
sbb
jb
gs
test
rcr
jl
xor
dec
add
ins
out
cmp
and
mov
ror
adc
adc
adc
or
dec
retf
or
cwde
add
nop
movs
(bad)
xor
mov
mov
dec
mov
clc
mov
cli
jmp
pop
mov
mov
mov
pop
pop
or
xchg
ss
jne
jae
out
mov
and
dec
inc
fwait
add
ja
sahf
shr
in
adc
xor
jbe
sbb
jne
in
mov
pop
jmp
mov
rol
adc
aaa
push
or
pop
loop
jle
sub
push
push
add
jnp
mov
cmp
jno
jmp
and
lea
aad
sbb
dec
inc
sub
xor
adc
xchg
mov
sub
pop
xchg
pop
imul
ret
sbb
mov
adc
cmps
mov
push
out
pop
ret
xchg
push
mov
in
mov
mov
les
pop
push
addr16
push
inc
xchg
inc
xchg
push
or
mov
popa
xchg
pop
fadd
test
adc
mov
mov
dec
lods
dec
in
or
mov
das
push
loope
push
xor
movzx
dec
inc
cmp
inc
cmp
in
add
or
mov
dec
pop
lds
adc
popf
mov
sbb
xor
mov
inc
ins
push
sbb
push
or
xchg
mov
mov
jg
mov
sbb
icebp
adc
jnp
adc
mov
jp
gs
and
int3
add
mov
lock
jbe
xor
imul
mov
out
pop
pop
inc
xor
add
popa
in
js
mul
jmp
and
fs
inc
mov
test
int
jge
push
lds
stos
rcr
icebp
jg
je
into
add
inc
mov
lock
sti
rcl
dec
push
mov
add
ret
cli
sbb
inc
je
shr
(bad)
imul
dec
add
cmp
push
xor
xchg
or
pop
ins
add
iret
add
imul
push
push
mov
fcom
cmp
call
adc
hlt
and
dec
aad
arpl
xor
test
adc
and
fs
dec
shr
xchg
rcr
mov
ins
mov
fcom
jno
cmp
scas
scas
and
sub
xor
icebp
adc
in
pop
loopne
in
mov
sub
pop
loop
fnstenv
jmp
jbe
mov
enter
daa
frstor
in
push
test
xchg
hlt
add
mov
add
sbb
cmps
loopne
and
sbb
dec
retf
pop
sub
inc
inc
sub
sbb
inc
sub
leave
add
pop
adc
mov
xor
and
dec
dec
dec
mov
cmp
sub
pop
aas
cmp
(bad)
jmp
add
test
adc
xor
xor
mov
adc
adc
daa
jmp
mov
fdivr
sub
mov
cmp
fdivr
pop
mov
jmp
or
xlat
jle
add
inc
push
ds
ins
out
add
cdq
scas
pop
int3
add
push
pop
fidiv
test
sub
(bad)
loopne
mov
aaa
mov
jl
popa
sbb
mov
movs
lock
je
mov
icebp
fiadd
or
xor
add
ror
mov
pop
mov
fadd
pop
cmps
dec
data16
movs
std
mov
inc
popa
dec
ret
ins
mov
inc
inc
fistp
adc
nop
dec
adc
nop
xchg
jmp
cld
mov
mov
inc
mov
add
enter
ja
sub
push
sbb
sti
xor
mov
add
push
and
call
fstp
and
pop
or
clc
repnz
inc
jmp
mov
sub
cmp
jge
test
je
mov
adc
pop
dec
lods
jne
nop
push
jae
mov
sub
out
(bad)
ficomp
and
int3
sti
pop
je
inc
xchg
fistp
dec
mov
mov
inc
jmp
jl
push
out
add
mov
xchg
test
les
add
xchg
sbb
pop
mov
es
pushf
xchg
adc
mov
call
cmp
add
call
mov
ret
test
aas
push
out
push
adc
sub
icebp
movs
jge
dec
mov
cmp
mov
loopne
push
push
inc
ins
pop
add
imul
test
nop
in
cmp
test
adc
push
xchg
push
rcr
scas
adc
and
loop
xor
cmps
adc
test
sbb
pop
mov
jg
inc
sbb
enter
sub
pop
and
neg
or
fisttp
in
dec
add
adc
mov
sbb
cdq
sbb
mov
js
push
ds
(bad)
adc
pop
sbb
aam
xchg
mov
or
adc
aas
xor
xor
adc
mov
sbb
fbld
xchg
pop
clc
mov
mov
fstp
mov
jbe
loopne
pop
and
into
push
mov
cmp
fdivr
inc
adc
mov
mov
adc
mov
clc
ret
adc
lds
sbb
add
pop
movs
jle
or
adc
ret
mov
mov
xchg
or
sbb
adc
in
jo
add
outs
xor
jp
or
out
push
add
imul
ficomp
ins
dec
adc
mov
mov
sar
jg
inc
cmp
xor
push
or
(bad)
mov
push
push
dec
dec
dec
rol
jl
mov
dec
add
pop
loopne
sub
ss
xchg
addr16
ret
test
jbe
test
pop
and
xchg
(bad)
pop
lahf
enter
lea
mov
xor
mov
mov
jmp
add
mov
and
retf
fs
shl
pop
ret
sbb
ins
idiv
pop
pop
sbb
or
xchg
jae
push
push
mov
push
cmp
add
add
mov
inc
add
rol
or
in
lock
sub
add
inc
mov
imul
scas
out
ds
xchg
mov
fwait
sbb
mov
ss
or
and
daa
loop
(bad)
retf
xchg
lds
xchg
scas
ret
xchg
ins
mov
(bad)
cmp
inc
add
dec
add
arpl
sub
popa
jo
cmp
dec
loop
mul
sub
sub
add
pop
mov
mov
sbb
add
xor
fidivr
pop
add
aas
cmp
popf
in
pusha
add
ret
movs
enter
mov
(bad)
add
inc
jle
fadd
ficom
dec
stc
mov
xor
cli
add
repz
test
push
retf
push
(bad)
push
loope
jge
xor
imul
ret
mov
adc
push
or
or
dec
bnd
push
and
sub
out
lock
daa
inc
push
mov
ficom
add
dec
push
or
jmp
(bad)
or
adc
(bad)
pop
fild
inc
cmp
inc
mov
jbe
or
outs
dec
bound
nop
dec
ficom
or
fadd
rol
dec
arpl
sub
dec
leave
sub
leave
inc
push
dec
scas
add
inc
(bad)
dec
push
adc
(bad)
out
push
inc
cmps
mov
ror
xchg
add
pop
mov
add
push
mov
xchg
ret
or
sbb
and
or
rcl
or
hlt
test
add
stos
aad
sub
jno
bound
mov
shl
lods
sub
add
mov
pop
adc
mov
ret
ds
pop
enter
pop
stos
test
mov
or
xor
mov
mov
or
test
adc
ins
(bad)
xlat
leave
cmp
enter
sub
mov
push
adc
adc
js
dec
sub
xchg
mov
sar
addr16
sub
sahf
sahf
jge
js
js
add
jg
or
aaa
mov
sbb
add
sub
pop
or
push
xor
adc
xchg
mov
push
mov
push
mov
and
mov
sub
hlt
pop
iret
imul
jle
jle
sbb
in
push
push
adc
mov
inc
jne
inc
inc
je
and
push
adc
jecxz
sbb
jle
mov
pop
add
mov
cmp
mov
ins
mov
mov
je
push
mov
cmp
add
sti
push
add
fist
cmp
addr16
popf
movs
sbb
jge
sahf
xlat
mov
mov
xor
xor
xor
sbb
(bad)
sub
and
push
movs
test
fsubr
push
dec
std
dec
push
loope
int3
sub
push
adc
mov
mov
add
add
add
cmp
inc
mov
add
dec
adc
add
sub
sbb
adc
push
dec
inc
adc
inc
mov
adc
xchg
xor
adc
mov
add
xor
lods
movs
arpl
adc
mov
adc
push
cli
jmp
adc
adc
mov
mov
add
add
shl
add
jmp
sub
inc
xlat
mov
test
iret
push
mov
cmp
or
and
and
pop
mov
sbb
mov
and
pop
adc
shl
pop
xchg
or
jbe
aas
ja
and
xlat
repnz
dec
inc
(bad)
js
js
add
xchg
inc
js
arpl
clc
jmp
jle
inc
lea
sbb
or
(bad)
push
pop
mov
clc
jo
push
xor
outs
sbb
adc
sbb
rol
inc
cmp
xchg
pop
dec
es
mov
rcl
pop
lock
xor
loop
xchg
dec
fiadd
inc
mov
lds
daa
cmp
ret
sahf
and
sub
addr16
int
pop
rol
pop
and
jmp
out
ret
add
in
xchg
lock
xchg
les
rol
jecxz
inc
cmp
movs
jo
cmc
push
sahf
cwde
sub
pop
or
or
mov
gs
or
jne
dec
mov
add
or
jge
cwde
int
dec
fidivr
rcl
out
es
jmp
mov
adc
clc
add
in
pop
sbb
push
fabs
pop
sti
xchg
loope
cwde
fistp
gs
sbb
sub
movs
dec
dec
and
jo
das
push
adc
cmps
daa
mov
jle
push
jne
pop
sub
or
mov
jno
or
add
arpl
xchg
dec
sahf
in
add
inc
test
pop
mov
and
mov
stos
and
sbb
xchg
xor
sub
mov
outs
adc
mov
add
xchg
call
and
arpl
(bad)
pop
ins
pop
idiv
mov
dec
push
cmp
dec
or
push
shr
hlt
cli
or
sbb
loopne
sbb
xchg
test
clc
or
add
jg
add
jg
fisttp
sub
sbb
inc
jl
cmp
or
fild
push
cs
mov
shr
in
sub
loop
add
sbb
pop
xchg
push
loop
lea
inc
loop
fsubr
arpl
or
sbb
or
lods
add
mov
iret
test
dec
pop
or
or
pop
sbb
push
xor
loopne
cmp
lock
rol
sub
cwde
add
cmp
lea
or
xchg
adc
adc
push
mov
mov
test
fcom
mov
adc
xchg
xchg
fadd
add
dec
sub
nop
push
clc
jg
mov
mov
add
cs
jle
mov
dec
ret
push
mov
adc
clc
pusha
sbb
sub
nop
pushf
(bad)
inc
not
rcl
sub
cmp
shl
ret
cli
push
pop
mov
jmp
pop
adc
xor
fs
nop
movs
pusha
sbb
movs
fcmovb
xor
push
mov
and
je
add
mov
jnp
dec
mov
inc
push
mov
sbb
jge
adc
clc
adc
scas
ficom
je
jmp
push
sti
movs
fs
xor
adc
shr
inc
xor
stos
(bad)
jl
pusha
xchg
mov
xchg
inc
sbb
or
cmp
sahf
sub
loopne
pushf
mov
dec
jnp
or
mov
xor
adc
and
mov
dec
fist
(bad)
mov
inc
cmp
fidiv
shl
in
push
inc
aaa
xchg
pop
jb
fs
outs
bound
ss
pop
repz
and
add
call
and
xchg
mov
adc
xor
test
addr16
pusha
sub
mov
in
ret
jg
arpl
or
imul
dec
sbb
rol
mov
es
or
pop
enter
add
sbb
mov
xlat
adc
mov
stos
jmp
sbb
cmp
retf
stos
pop
in
jmp
push
jnp
inc
xchg
mov
jg
bound
jle
ss
xor
or
adc
in
lds
xchg
inc
outs
ret
mov
jne
mov
jmp
icebp
xchg
jbe
mov
ret
and
sub
dec
sti
or
rcr
push
loope
mov
push
mov
xor
or
ins
loope
int
xor
fwait
out
je
ret
pop
mov
outs
xor
pushf
jmp
aas
push
sub
and
cmp
xor
cmp
imul
popa
adc
aad
dec
icebp
or
or
lds
clc
push
jl
mov
mov
cmp
shl
xor
and
ror
sar
or
leave
dec
mov
push
div
jne
mov
add
add
add
add
or
stos
ins
add
or
(bad)
xchg
out
sbb
jmp
adc
test
push
call
xor
or
fld
daa
sbb
imul
push
or
inc
sbb
add
mov
cmp
and
adc
add
add
loopne
call
inc
sbb
in
add
add
cwde
(bad)
inc
push
xchg
or
call
cmp
add
add
and
stc
icebp
pusha
xchg
xchg
or
or
jo
add
inc
mov
cmc
xchg
cmp
inc
test
adc
in
or
adc
in
cli
inc
call
and
js
aas
je
mov
sti
adc
loopne
les
or
add
sub
jmp
gs
jae
cwde
sub
mov
sbb
mov
mov
inc
xor
push
in
mov
inc
sub
mov
xchg
mul
mov
pop
mov
loope
pop
sbb
push
(bad)
xchg
jns
ss
ds
dec
ins
mov
mov
pop
es
mov
dec
movs
xor
addps
sbb
pop
cld
jg
sbb
mov
(bad)
js
or
cmp
adc
lds
aas
and
sbb
inc
je
les
inc
jge
fcmovu
jp
out
jl
and
adc
fnsave
or
retf
rcr
push
shr
cwde
jmp
pop
ficomp
daa
fmul
xor
xor
push
popa
add
adc
sub
lea
das
adc
cmp
cmp
mov
inc
push
dec
push
dec
add
fild
cmp
jge
jbe
test
push
jg
pop
add
call
aaa
and
(bad)
cmp
test
dec
inc
inc
fstp
mov
and
jle
and
sub
push
push
data16
stos
jge
adc
jne
test
sbb
jns
repz
mov
inc
and
adc
cmp
bswap
xchg
aas
int
bound
(bad)
cmp
pop
icebp
inc
std
(bad)
push
cmp
cli
cmp
dec
push
sub
add
mov
mov
cmps
or
and
jo
jmp
imul
or
add
or
and
ss
sub
and
lea
dec
dec
test
mov
dec
inc
sbb
not
or
mov
mov
lea
or
ja
shl
add
mov
inc
enter
int3
inc
loop
jl
mov
sbb
aaa
and
(bad)
lea
push
and
pop
dec
add
inc
sub
lea
mov
push
and
dec
out
mov
or
cmp
add
push
imul
mov
xor
dec
inc
fild
push
push
movsx
jne
mov
js
push
adc
or
lea
xor
inc
or
in
add
add
ss
or
dec
hlt
add
xor
jne
shl
aaa
pop
push
shl
aam
dec
clc
add
inc
mov
les
and
inc
pop
mov
pop
adc
cmp
inc
mov
mov
inc
stos
xor
add
push
iret
ror
stos
scas
cmp
pusha
jl
mov
add
push
add
mov
mov
ds
or
mov
sub
pop
add
adc
lods
addr16
pusha
adc
mov
imul
pop
adc
push
arpl
test
ins
xor
add
in
or
fisttp
sub
js
or
and
inc
or
push
or
inc
sub
fist
lahf
xor
pop
jecxz
push
and
popa
loope
add
mov
les
inc
bound
jbe
or
xor
test
inc
inc
xor
mov
add
or
jge
movs
mov
dec
dec
sbb
(bad)
punpcklwd
mov
imul
jmp
ror
mov
mov
push
xor
das
ror
mov
lods
adc
pop
cld
aas
aaa
sbb
and
xor
inc
rol
mul
inc
sbb
sub
pushf
ret
cmp
pop
scas
add
add
outs
sbb
add
sub
or
xchg
sbb
into
fs
pop
pop
adc
jmp
mov
inc
out
mov
and
push
adc
sbb
or
push
pop
jge
faddp
add
es
push
push
or
or
push
or
jmp
mov
jecxz
add
loop
cmp
mov
or
cmps
inc
push
adc
add
or
add
sub
pop
cmp
dec
cdq
jmp
pusha
xchg
sub
jae
rol
pop
je
push
sbb
mov
mov
push
and
and
add
dec
inc
mov
(bad)
jge
test
dec
sbb
jmp
daa
rol
mov
pusha
es
adc
or
mov
or
xchg
bound
cmp
test
xchg
ret
dec
repnz
dec
add
pop
or
stos
dec
mov
dec
cmp
cmp
jmp
jo
adc
ds
xor
inc
add
add
and
sbb
add
xchg
loopne
mov
ror
or
push
lock
in
sub
and
lea
inc
dec
in
enter
fbld
xchg
fild
sbb
ja
jo
mov
call
into
add
jp
lea
jl
ret
(bad)
stc
xlat
clc
xchg
mov
cmp
movs
mov
xchg
push
adc
dec
xor
ret
inc
add
jne
ror
xor
jl
jmp
hlt
push
lea
lods
lods
inc
mov
add
and
xor
mov
hlt
add
dec
add
sub
cwde
xor
mov
pop
pop
es
loop
jmp
dec
int3
ins
push
ins
inc
pop
add
xor
ficomp
xor
push
shl
fistp
mov
cmp
outs
add
arpl
push
mov
dec
or
hlt
dec
add
xchg
mov
inc
and
ret
out
and
mov
dec
xchg
add
in
push
inc
or
and
fs
or
add
add
je
push
add
mov
fcom
xchg
cli
mov
push
push
adc
pop
mov
cmp
cwde
stos
adc
(bad)
in
adc
shr
jg
shl
movs
jae
jmp
dec
leave
mov
lock
lock
lock
test
add
cmp
push
mov
fwait
out
adc
lea
xor
jl
push
lock
sub
scas
jmp
and
cld
data16
xchg
sbb
aas
scas
sar
push
sbb
inc
push
mov
push
inc
popa
add
nop
mov
add
adc
loope
cmp
mov
mov
sbb
mov
or
mov
xor
inc
mov
cmps
add
inc
jbe
xor
fdiv
out
pop
cmp
sbb
lea
mov
enter
cmps
(bad)
push
pop
aam
adc
or
push
adc
imul
mov
call
mov
cmp
call
jl
mov
push
add
int
mov
push
cmp
pusha
push
add
cmps
in
or
retf
adc
or
inc
mov
adc
(bad)
pavgw
add
fld
loope
mov
or
rcl
sbb
pop
outs
loope
pop
inc
pop
push
mov
jle
enter
add
imul
je
idiv
inc
and
test
or
fadd
rcl
fwait
sar
sar
mov
popf
jle
lea
mov
stos
movs
idiv
mov
push
cwde
add
rcr
stos
xchg
pop
inc
hlt
dec
jecxz
mov
add
sbb
inc
adc
push
lock
(bad)
leave
inc
mov
adc
xor
imul
shr
das
adc
mov
test
je
fisttp
dec
ror
ds
mov
adc
add
sub
in
jg
and
push
ins
sub
pop
or
add
sbb
stos
test
sub
jle
lds
xor
jae
add
jecxz
xchg
cmp
daa
lock
in
push
adc
mov
dec
cmp
push
mov
invd
neg
movs
dec
sbb
inc
fs
pusha
test
fdivr
ja
ret
inc
or
and
out
add
sub
test
je
add
jmp
pop
push
inc
pusha
xor
dec
adc
or
xor
mov
add
sub
lods
xor
mov
sub
jecxz
pop
inc
nop
cmp
add
fcomp
mov
push
adc
or
daa
sub
cld
cwde
dec
add
pop
ror
xchg
add
mov
shl
sbb
test
sub
sbb
add
add
cmps
mov
jns
sub
imul
sbb
push
rol
mov
mov
xchg
mov
adc
and
add
jge
test
push
push
jo
mov
xor
inc
retf
cmp
or
mov
out
mov
mov
mov
cmp
or
add
adc
mov
inc
jmp
sar
adc
imul
adc
mov
data16
jle
out
aaa
or
fmul
push
inc
xchg
test
popa
cmp
adc
push
adc
add
inc
jp
cmp
mov
adc
daa
sbb
shl
call
movsx
sub
call
push
dec
xor
imul
or
or
icebp
mov
xchg
push
nop
and
inc
or
jmp
jp
xchg
int
or
into
fwait
jle
cwde
and
or
mov
std
test
into
add
xor
pop
and
rol
mov
inc
and
pop
dec
lahf
sbb
inc
dec
sbb
pop
add
fadd
sub
sbb
lea
xor
or
ret
les
gs
jp
sahf
pop
shl
adc
js
mov
shr
int
fdivr
outs
jae
imul
and
pop
add
xchg
mov
sub
sbb
pop
pop
adc
and
adc
xor
jle
add
mov
shl
js
mov
mov
inc
dec
and
(bad)
cmp
mov
lea
jo
neg
mov
outs
push
mov
push
stos
sbb
lahf
dec
mov
cmp
jae
enter
jp
push
mov
xor
lahf
js
cmp
(bad)
fisttp
pop
jle
xchg
or
(bad)
stos
sub
inc
jns
mov
mov
mov
mov
or
mov
xchg
fwait
js
pop
push
in
push
test
push
mov
and
inc
pusha
push
test
rol
sbb
or
pop
inc
dec
icebp
loopne
js
jle
cmp
pop
and
in
js
es
sub
dec
sti
add
mov
lock
lds
lds
jns
add
dec
or
in
mov
add
add
pop
call
sub
sbb
push
mov
call
lds
pop
or
cmps
pop
add
cmps
ins
dec
dec
dec
add
and
popa
xchg
dec
hlt
add
add
shl
inc
shr
jmp
and
and
sbb
add
pop
stc
xchg
sub
or
xchg
sbb
and
(bad)
and
cdq
cmp
or
mov
pop
push
int3
fcmovnu
out
xor
data16
push
test
jge
mov
pop
retf
js
jmp
mov
ds
push
push
inc
adc
loope
(bad)
pop
inc
adc
jg
jmp
mov
imul
ret
push
shr
pop
popf
inc
sub
adc
clc
imul
add
adc
inc
arpl
ret
ret
or
inc
sbb
push
inc
xchg
jbe
fiadd
jo
push
retf
loop
sbb
lods
cmp
test
ficom
or
stos
pop
xor
movs
movmskps
jg
pop
jbe
adc
xchg
sbb
and
sbb
mov
adc
mov
ins
mov
inc
jb
push
add
data16
sub
inc
fst
sbb
(bad)
jns
add
or
xchg
push
mov
mov
(bad)
mov
pop
adc
xor
inc
sar
loop
add
and
push
lock
push
add
mov
int
xchg
fadd
sub
hlt
nop
sbb
push
int
outs
add
mov
or
leave
sub
and
xchg
nop
aaa
jb
clc
mov
mov
and
cdq
pop
in
xchg
sbb
rcl
push
cmp
cli
ds
sbb
je
popa
loopne
inc
xchg
cmp
cmp
inc
sub
pusha
js
fdiv
psubsb
pop
or
lock
add
aam
push
dec
ret
inc
movs
pop
add
lmsw
or
daa
push
sahf
ja
les
retf
test
inc
inc
jo
loop
or
dec
popf
test
add
mov
pop
xchg
sub
ja
daa
mov
clc
pop
pop
mov
in
sub
mov
cmp
shl
movs
mov
push
stos
jl
bound
adc
movzx
pop
fild
shl
iret
mov
and
scas
push
xor
sub
xchg
cwde
mov
xchg
loopne
or
pushf
dec
test
xlat
and
mov
in
adc
mov
icebp
sub
inc
xchg
pushf
pusha
xlat
mov
pop
mov
xchg
or
iret
xor
clc
inc
inc
dec
mov
es
repnz
pavgb
gs
or
loop
ret
pop
nop
sahf
je
jb
test
lock
ret
mov
xchg
hlt
les
mov
mov
cmc
movs
xor
retf
dec
lods
test
or
scas
pop
lahf
pop
jb
iret
or
pusha
add
pop
ins
test
jno
iret
sub
iret
sub
iret
sub
test
je
push
and
pop
idiv
ds
das
push
mov
ret
adc
es
mov
je
xchg
les
dec
xor
mov
cmp
mov
adc
ret
mov
sub
dec
sar
mov
inc
cmp
mov
add
pop
or
test
mov
add
jo
add
mov
hlt
mov
mov
je
aaa
mov
xchg
xchg
jne
mul
or
cmps
movs
push
or
push
adc
jle
push
clc
rol
test
or
xchg
bound
test
mov
push
adc
loope
adc
inc
pop
push
push
adc
jl
pop
pop
pop
call
dec
xchg
test
stos
test
or
cdq
mov
test
xor
push
push
xor
inc
js
adc
adc
mov
std
sbb
ror
outs
(bad)
call
add
xor
shr
ret
inc
dec
push
aas
inc
cmp
mov
push
test
sub
enter
sub
or
dec
cdq
in
push
es
les
xor
in
imul
in
add
add
in
cmp
sahf
sub
push
adc
sbb
mov
jge
loope
jmp
dec
sub
icebp
test
mov
inc
cmp
je
fsub
ss
push
jle
ins
(bad)
pusha
sub
jge
aas
add
add
or
sub
and
add
inc
inc
call
hlt
inc
dec
jl
loopne
or
mov
sub
xor
ss
mov
add
call
into
xchg
push
jge
add
cmp
push
int3
lea
fld
sub
js
pop
mov
pop
xchg
and
cli
or
adc
push
xchg
in
je
dec
jo
mov
cld
rdtsc
jne
sbb
(bad)
leave
pop
inc
es
pop
in
inc
add
dec
gs
or
jmp
or
rcl
mov
add
pop
cmp
sub
inc
into
test
bound
push
pop
jmp
sub
add
sbb
xchg
cmp
sbb
add
sti
add
sbb
in
add
aad
call
mov
and
lods
daa
push
sub
jge
push
adc
jmp
or
xchg
sub
call
leave
inc
int3
jae
add
push
and
dec
loopne
cmp
pusha
fiadd
lock
xchg
(bad)
inc
push
sbb
popa
jb
inc
or
rol
bound
pop
inc
cmps
ins
icebp
dec
lea
sub
jno
xor
leave
push
adc
mov
movhps
add
adc
jp
adc
push
dec
(bad)
cmp
jge
aam
add
clc
mov
ins
and
add
sbb
sbb
es
jae
xor
xor
test
mov
inc
jns
mov
xlat
daa
and
or
mov
inc
js
movlps
or
cs
mov
mov
pop
in
mov
jl
inc
mov
mov
or
mov
dec
clc
ficomp
aad
in
adc
adc
push
aas
add
sub
rol
icebp
lods
and
mov
dec
adc
push
pop
lock
jp
push
pop
call
jmp
add
cmp
dec
lock
dec
xchg
dec
enter
cmp
call
lahf
adc
fidiv
ror
push
outs
inc
lds
call
mov
sbb
sbb
dec
shr
cwde
mov
jno
jmp
bndldx
inc
inc
rol
adc
xor
retf
sbb
std
mov
int3
pop
sbb
add
push
add
or
and
sbb
adc
mov
test
lods
int3
mov
inc
in
xor
(bad)
cld
xor
inc
add
add
call
icebp
dec
sbb
push
cmp
outs
inc
mov
add
mov
mov
inc
adc
scas
loopne
ficom
adc
pop
and
fs
loop
hlt
inc
retf
in
(bad)
and
into
ins
dec
and
pusha
daa
fadd
aam
or
sub
(bad)
sti
ja
stos
fisubr
cmp
inc
add
je
push
je
push
es
arpl
sbb
(bad)
jae
and
ja
add
aas
sub
dec
adc
test
ss
clc
aam
jnp
shr
push
add
pop
cmp
cmp
push
or
mov
jge
movs
and
mov
or
sub
or
ss
or
dec
call
sar
pop
rol
inc
cmp
popf
and
call
and
cmp
cmp
jne
hlt
push
mov
sbb
dec
sub
retf
jle
arpl
andps
retf
jmp
sbb
inc
jb
mov
leave
in
mov
sbb
scas
push
bound
icebp
add
sbb
cli
push
dec
cmp
mov
arpl
leave
call
into
cmp
imul
inc
push
push
push
inc
loopne
cmp
cmp
pop
xor
sti
pop
sar
mov
cwde
dec
ret
xchg
retf
pop
cmc
inc
sub
(bad)
lock
cdq
dec
mov
mov
cmp
or
popf
push
xlat
dec
mov
and
pop
sbb
xchg
or
or
idiv
pop
ins
test
fisubr
sbb
mov
cmps
test
retf
mov
inc
test
aaa
mov
inc
jl
ret
retf
adc
leave
cwde
and
mov
dec
dec
rcr
or
mov
sub
lea
mov
add
xchg
jg
(bad)
sub
fstp
jl
fmul
fmul
fmul
mov
fdivr
push
push
inc
mov
iret
sti
and
add
rcr
push
inc
adc
mov
fdiv
add
and
inc
sub
dec
and
cmp
inc
pop
out
mov
adc
pop
inc
nop
xor
rol
inc
cld
scas
in
adc
iret
or
lea
sub
sub
or
and
adc
inc
and
aas
cmp
or
dec
xor
jo
lock
imul
in
adc
and
jo
mov
ds
add
cwde
pop
inc
(bad)
sar
cmp
xchg
push
dec
int
ret
ss
test
fcmovne
push
and
mov
loopne
sub
jne
retf
inc
(bad)
jge
xor
je
mov
sbb
sbb
or
and
mov
inc
mov
sub
mov
mov
and
fiadd
loopne
fsub
xchg
fcom
dec
inc
xchg
rcr
int3
dec
das
test
fiadd
addr16
adc
call
icebp
nop
push
outs
lea
add
popf
push
jmp
in
fadd
inc
lds
mov
sbb
or
pop
lock
mov
test
fiadd
or
mov
dec
mov
js
sahf
das
mov
stos
xor
push
adc
and
stos
test
hlt
pusha
int3
push
mov
pop
push
call
jae
pop
jle
cmp
cmp
in
xchg
jo
lea
out
or
out
clc
cmp
add
xchg
mov
das
sete
lock
pop
idiv
add
push
fidivr
adc
fisubr
fcom
xor
push
dec
call
adc
inc
xor
cs
add
enter
jecxz
add
adc
loopne
xchg
add
add
pop
enter
ds
cs
push
push
or
push
xor
push
(bad)
jno
aam
push
xchg
dec
test
pop
xor
sbb
test
adc
push
sub
add
inc
sub
scas
xor
push
adc
lea
mov
mov
inc
or
ret
cmp
loopne
mov
lock
adc
pop
cwde
push
jo
lods
sub
jbe
inc
popf
add
cmp
xor
fwait
and
enter
sbb
pop
loope
push
je
mov
sbb
imul
dec
add
les
das
stc
cs
imul
movs
repnz
sub
test
push
mov
out
mov
int
out
jae
lods
sar
xchg
jl
mov
sar
and
ins
inc
inc
lods
adc
mov
sub
adc
mov
cmp
add
cmp
sub
fidiv
adc
lahf
mov
ret
mov
ds
dec
inc
jp
popf
or
stos
cld
xchg
rcr
mov
push
nop
stos
sbb
movsx
jne
mov
addr16
or
pusha
jp
cmp
shr
test
adc
mov
out
(bad)
dec
inc
loop
xchg
ror
fadd
jbe
xchg
jmp
inc
sar
jne
cli
push
jle
xchg
or
test
outs
and
sub
xor
aas
lods
or
into
pop
sbb
pop
push
outs
neg
push
inc
inc
nop
and
jl
mov
xor
sbb
mov
sar
data16
sub
ret
adc
push
and
nop
out
sbb
movs
xor
xor
enter
cmp
pop
mov
fimul
dec
add
int3
and
push
scas
or
dec
loopne
out
dec
lods
inc
push
cmps
or
shl
dec
adc
dec
or
add
mov
add
pushf
test
fwait
inc
mov
dec
sbb
xchg
repz
(bad)
movsx
add
mov
dec
or
lea
fdivr
rcr
sbb
sub
cmp
cmp
or
push
add
push
(bad)
xchg
mov
in
xor
fcmovne
mov
or
cmp
mov
mov
jne
mov
lea
mov
pusha
mov
inc
dec
pop
dec
jecxz
add
pop
mov
popa
jg
ins
test
xchg
inc
add
mov
mov
dec
adc
pushf
jmp
mov
jnp
dec
mov
mov
fs
test
hlt
pop
and
lea
leave
movs
inc
fcom
(bad)
in
pop
mov
push
inc
add
scas
xor
loopne
mul
and
mov
call
hlt
call
inc
jmp
int
or
loope
jle
add
mov
cmps
inc
xchg
add
inc
sar
std
or
sbb
xchg
pop
push
repz
or
int
mov
stos
adc
sbb
mov
cmp
jl
add
and
mov
inc
or
xchg
pusha
or
pop
jnp
cmp
jae
inc
arpl
js
adc
mov
adc
cli
mov
dec
or
clc
cwde
sub
and
pop
lock
fwait
inc
or
mov
inc
pop
pop
addr16
and
push
adc
jo
pop
sub
addr16
aaa
aas
lods
jge
popa
lock
xor
or
and
sbb
add
cmp
sbb
out
add
adc
bound
push
test
cs
jg
ret
xor
jl
or
xchg
add
mov
jge
neg
sar
fimul
mov
mov
mov
mov
imul
cmp
jmp
ficom
cmc
add
inc
ror
ja
(bad)
cmp
mov
shl
inc
or
cmp
inc
add
sub
out
shl
sbb
fucomi
(bad)
cmp
or
jle
mov
jle
mov
xor
push
jns
ja
mov
or
cmp
add
loopne
inc
call
mov
mov
jecxz
sub
mov
add
push
pop
hlt
fisttp
cmp
je
adc
add
add
call
and
sub
pop
cdq
add
test
push
inc
push
dec
adc
add
inc
rcr
test
ins
les
push
mov
movs
push
push
adc
inc
test
xchg
push
inc
mov
jne
pop
push
icebp
sbb
inc
ret
mov
sbb
mov
pop
sbb
clc
aaa
add
lea
jmp
or
(bad)
fadd
mov
dec
cmp
loop
aaa
call
pop
cmp
push
test
aad
sbb
xlat
xchg
ja
enter
ins
enter
and
add
dec
mov
mov
push
dec
cli
sbb
clc
jmp
jl
scas
call
and
jo
mov
add
pusha
jne
sub
push
dec
add
stos
stos
fdivr
jmp
test
push
mov
js
mov
int
cmp
call
stc
vmovntps
inc
mov
pop
mov
movs
sub
sub
push
or
ss
cmp
cmp
mov
pop
int3
int3
fsubp
cmp
(bad)
add
outs
dec
jge
call
loop
inc
aad
jmp
les
nop
add
lea
or
jo
and
add
inc
and
dec
js
or
imul
dec
or
jmp
or
and
dec
and
cmp
mov
shl
dec
sub
xor
add
xor
push
push
and
add
nop
rol
push
es
mov
addr16
sbb
push
pusha
add
popa
std
mov
movs
inc
addr16
mov
push
push
ins
mov
add
dec
pusha
jae
mov
push
rol
(bad)
pop
add
mov
shl
out
fistp
jecxz
add
inc
sbb
sbb
push
bound
push
pop
fild
inc
add
sbb
add
sbb
es
or
popa
dec
in
or
adc
or
push
ror
inc
and
cs
or
sub
push
and
out
neg
cs
fs
ficomp
adc
sub
or
dec
xor
sub
push
stc
mov
pop
or
adc
ja
not
push
push
sbb
sbb
sbb
jge
fbld
or
add
icebp
inc
mov
xor
sub
and
mov
sbb
cmp
inc
fs
jae
dec
cs
adc
fs
mov
sub
ret
or
inc
pop
adc
loopne
jge
psllq
gs
add
add
sbb
movs
xor
mov
bound
mov
xor
lds
and
call
or
cmps
inc
and
xbegin
dec
into
repz
aas
adc
mov
or
or
cdq
lock
rol
cmc
or
add
movs
call
out
ficomp
hlt
arpl
add
and
push
movs
add
adc
mov
and
sbb
push
je
or
sbb
adc
dec
push
aaa
jl
ss
sbb
mov
or
test
jmp
inc
mov
jl
(bad)
xor
or
xchg
sub
aas
sbb
xchg
jle
add
mov
xchg
scas
cwde
lock
push
sbb
dec
jg
sub
add
cmp
lock
data16
xlat
xor
or
adc
adc
std
sub
frstor
in
std
or
mov
jmp
or
ficomp
rcr
std
daa
xor
hlt
dec
mov
jmp
or
add
push
xchg
add
(bad)
cwde
dec
mov
or
pop
push
or
fdivrp
sub
xlat
lea
movs
call
jbe
clc
add
icebp
inc
pop
xor
mov
ins
add
test
jns
clc
mov
test
xor
test
or
dec
call
push
pop
enter
retf
mov
mov
fiadd
and
add
cmp
inc
jmp
clc
jmp
pop
xor
push
aad
lea
fadd
pop
add
xchg
or
cwde
repnz
pop
aad
jo
adc
aaa
not
mov
ret
jne
jg
sar
aad
or
xor
xor
mov
inc
pop
fadd
lods
jno
jo
xlat
fbld
sub
pop
push
push
inc
and
aam
rol
dec
lods
movs
cmps
iret
or
cli
inc
sahf
and
push
adc
add
das
add
inc
int
cdq
sub
cmp
sbb
retf
inc
push
pop
or
(bad)
fld
cmp
out
mov
jae
dec
rcl
or
adc
mov
or
in
adc
mul
fiadd
xor
jbe
push
inc
add
or
and
push
pusha
mov
jae
mov
repz
inc
ja
sub
push
add
mov
push
enter
sbb
inc
in
ins
adc
or
ins
dec
jle
sub
push
loop
inc
dec
aaa
cmp
jle
adc
push
mov
or
mov
add
test
mov
add
mov
jg
cld
xor
mov
add
cmp
mov
inc
jb
test
add
shl
or
pusha
add
mov
add
or
sbb
test
dec
mov
adc
mov
cld
dec
shl
push
mov
mov
or
pop
mov
add
les
jbe
sub
mov
mov
xor
and
pop
pop
das
push
jne
cmps
and
sub
pop
mov
fisub
add
enter
lea
jl
or
push
adc
lods
add
rol
mov
pop
cmp
or
rcl
inc
push
adc
lea
mov
cmp
add
and
rol
xchg
ins
mov
lock
jge
adc
sub
aad
jb
xchg
add
cs
jl
jge
inc
and
xchg
pop
mov
or
add
push
jl
sbb
jo
in
sbb
pop
shl
xchg
add
pop
sub
xchg
sub
mov
add
rcr
jns
jne
mov
or
cmp
imul
inc
sbb
sbb
stos
xchg
inc
dec
and
ret
or
sbb
cmps
add
rcr
inc
mov
popa
pop
nop
imul
push
add
or
stos
sbb
into
mov
jl
loop
adc
dec
pop
addr16
xchg
pop
call
add
les
and
inc
push
rol
pop
ss
mov
cwde
(bad)
lock
adc
push
inc
inc
js
lea
xor
dec
inc
xor
ret
pop
mov
pop
sbb
and
xor
sbb
sub
push
inc
fs
rcr
mov
movzx
sbb
or
inc
das
inc
pop
int
and
adc
xchg
adc
mov
jo
cmp
fisttp
(bad)
hlt
mov
cmp
push
or
enter
sbb
retf
xchg
or
push
lock
es
jp
xor
cmp
cmc
out
retf
lods
and
xor
loopne
adc
dec
out
outs
push
loop
sar
bound
xchg
add
mov
in
test
ss
mov
mov
cwde
out
mov
pavgb
cmp
jle
(bad)
call
xor
push
test
clc
and
jo
mov
or
inc
or
jp
add
xchg
aam
mov
into
lds
dec
or
add
cmp
dec
(bad)
jg
add
inc
add
dec
mov
movs
pop
ret
cs
dec
dec
jb
iret
les
dec
dec
xchg
int3
into
cmp
sbb
test
mov
bswap
sar
xor
or
add
cmp
cmp
push
add
ds
in
inc
movs
(bad)
fabs
loope
pusha
jmp
adc
cmp
lahf
xchg
push
inc
dec
loop
aas
pop
lods
test
fs
das
and
call
add
js
add
push
rol
imul
loop
mov
cs
mov
xchg
xchg
sbb
push
jb
push
popa
jne
cmp
adc
mov
jns
jo
sub
ja
mov
push
je
sub
xchg
sbb
cmp
dec
test
ja
cld
cdq
sbb
xchg
add
xor
mov
neg
aaa
int3
test
adc
imul
push
clc
das
movs
sub
lock
aad
aad
cmp
push
mov
xor
shr
inc
aas
pop
mul
jmp
and
cli
aas
in
add
or
ins
gs
bound
arpl
inc
inc
outs
outs
outs
imul
sti
or
outs
and
imul
outs
sbb
or
jo
rcl
ret
dec
push
sbb
ins
push
inc
push
xchg
and
jo
add
push
inc
jne
mov
jo
je
add
mov
ins
pop
pop
push
adc
lea
dec
add
out
mov
pop
lds
popa
fistp
adc
jae
and
xchg
add
stc
in
push
vshufps
mov
mov
mov
push
stos
add
out
sbb
test
add
aam
and
iret
call
sub
jge
sub
jl
fsubr
ins
xlat
fist
push
mov
mov
fwait
sub
or
add
(bad)
das
lahf
ins
cpuid
or
xor
nop
ja
(bad)
lock
ins
mov
shr
cmp
or
cmps
add
popf
lock
loope
ins
fist
ins
cmp
or
xor
mov
out
icebp
add
add
push
rcl
mov
lods
clc
sbb
pop
xor
adc
into
pop
cs
sub
ins
pushf
pop
loopne
div
dec
fcom
add
in
push
add
fdivr
push
add
pop
push
iret
repz
imul
or
cmp
(bad)
out
push
mov
das
add
and
(bad)
cmp
or
mov
cld
push
pop
add
outs
push
les
aam
jmp
jnp
push
push
sub
ins
jnp
aad
push
test
mov
fsubr
or
dec
pop
adc
xchg
inc
iret
add
pushf
push
sti
imul
stos
clc
xor
jl
stc
shr
cwde
test
add
mov
mov
iret
add
push
dec
push
imul
dec
pop
jns
inc
push
sub
out
outs
ror
jno
mov
dec
cs
push
iret
repz
popa
cmp
mov
jg
pushf
in
lds
add
test
push
mov
pusha
or
jbe
push
jl
mov
xchg
push
icebp
add
xor
adc
push
not
cmc
call
push
or
or
stos
bound
sti
aam
stos
or
movs
add
mov
scas
jnp
fwait
xchg
rcl
xor
push
(bad)
das
les
imul
push
xor
jge
in
outs
jle
aas
gs
push
sub
add
and
repz
test
loopne
test
push
dec
sahf
neg
repz
int3
pushf
out
sbb
nop
push
xor
in
push
dec
cmp
jo
inc
add
cmps
add
or
pop
mov
gs
outs
push
dec
sbb
adc
jae
sbb
shl
xchg
nop
cwde
or
xchg
or
out
jo
sahf
loope
test
je
lock
pop
lss
sbb
pop
pop
gs
or
imul
gs
aaa
call
inc
outs
popa
ins
jnp
pop
mov
xchg
loope
xchg
lods
(bad)
mul
adc
ret
loope
jne
shl
xor
jmp
loope
(bad)
pusha
mov
loope
call
daa
pop
dec
xchg
push
mov
mov
loope
add
push
xchg
mov
mov
or
add
sub
shl
fucom
sbb
inc
pop
lock
pop
push
xchg
jmp
daa
dec
dec
xor
mov
push
adc
and
cwde
or
ss
adc
hlt
enter
add
and
add
das
jmp
mov
or
push
inc
sbb
sub
lea
sub
pop
lds
mov
jne
mov
xor
imul
cmps
or
nop
nop
nop/reserved
push
mov
out
push
inc
dec
add
sub
mov
pop
dec
(bad)
test
les
dec
cdq
call
clc
push
nop
rol
inc
es
dec
mov
dec
jbe
daa
sub
dec
mov
dec
in
mov
scas
add
call
jbe
xchg
sbb
outs
push
cmps
jbe
add
addr16
jo
push
into
int3
or
int3
xchg
jns
call
add
int
adc
iret
add
cs
cmp
dec
ret
add
xchg
pop
jns
ja
data16
and
sub
out
push
clc
sub
mov
in
(bad)
repnz
xor
xor
ja
(bad)
jg
inc
test
lea
fild
or
add
jbe
outs
pop
ret
fbld
fwait
outs
or
or
and
pop
int3
push
js
mov
mov
inc
ds
xchg
add
add
jmp
dec
pop
push
mov
out
fs
rcl
add
inc
mov
pop
sub
sbb
aaa
lea
lods
test
out
test
xor
inc
mov
pop
jp
add
add
inc
add
hlt
mov
mov
outs
and
test
cmp
cwde
fst
push
or
sbb
outs
cmps
mov
es
and
push
or
push
fs
sub
sbb
iret
mov
imul
adc
dec
call
sbb
and
xor
inc
and
add
jecxz
arpl
pop
lock
popa
(bad)
out
pop
in
fild
test
adc
pop
ror
jge
fs
adc
mov
pop
pop
pusha
mov
xchg
mov
cmp
ret
inc
gs
add
xor
call
sbb
ins
dec
(bad)
push
loopne
mov
xor
jo
xor
jno
inc
daa
leave
push
add
dec
add
mov
adc
cmp
clc
sti
nop
push
pushf
mov
sbb
leave
pop
xchg
je
fistp
and
push
retf
lea
mov
in
sub
ins
cmp
cld
in
adc
dec
outs
xchg
push
or
fcmovne
or
inc
add
dec
jb
mov
nop
adc
aaa
enter
ret
mov
scas
stos
neg
sbb
(bad)
and
inc
jb
inc
sub
add
jb
or
push
rcl
pop
push
das
dec
adc
out
push
add
bound
clc
fdiv
aaa
adc
mov
cwde
xlat
lds
push
dec
aam
push
sub
outs
int3
sub
push
cld
dec
clc
xor
jge
ins
sbb
xor
int3
mov
int3
retf
ror
xchg
push
rol
addr16
sbb
fldenv
dec
icebp
enter
push
sub
fsubr
sub
add
sar
or
and
or
mov
jmp
seto
mov
(bad)
out
call
sbb
push
pop
push
and
repz
xlat
pop
bnd
sbb
xor
sbb
call
mov
enter
lea
rol
pop
sbb
push
dec
mov
int3
mov
jge
sbb
xor
int3
pop
cmps
adc
sbb
iret
add
xchg
nop
adc
jge
mov
xchg
mov
add
and
jge
adc
sbb
pop
loope
push
das
mov
jno
mov
in
stos
mov
add
adc
les
ror
mov
int3
jg
add
sbb
fcom
inc
mov
clc
jnp
sbb
shl
mov
retf
daa
pop
imul
pop
add
mov
jo
pop
or
mov
fadd
add
in
test
mov
cmp
push
inc
in
popa
add
sbb
push
push
jecxz
dec
(bad)
test
pop
cmp
movs
xchg
lahf
sub
add
xor
ss
sbb
cmp
test
jmp
fwait
xor
inc
jle
add
dec
cmp
enter
add
daa
push
mov
pushf
lds
ror
jae
inc
sub
cmp
ror
test
mov
or
pop
out
add
enter
cs
pusha
push
loopne
fs
retf
mov
mov
and
xor
pushf
mov
jp
or
cmp
sbb
inc
pop
adc
call
test
cmp
push
icebp
adc
cld
stos
clc
and
inc
sbb
mov
pushf
cwde
pop
fbld
(bad)
xor
rcr
xchg
and
xlat
add
dec
(bad)
mov
sub
rcr
cld
outs
inc
adc
pop
push
gs
stc
mov
mov
sub
xchg
inc
inc
in
int
div
fdiv
jo
push
or
ror
jbe
add
dec
je
mov
hlt
invd
push
adc
loope
inc
popa
daa
movs
lock
jno
mov
frstor
sub
push
adc
sub
jl
aaa
sar
inc
or
inc
pop
inc
or
push
or
add
xchg
inc
mov
or
ror
xchg
sub
sub
daa
cmp
and
push
push
inc
popa
xor
xor
pop
xor
mov
xor
fisub
lock
push
fisttp
lock
mov
sub
add
shl
pop
add
adc
stos
mov
pop
pop
sbb
pop
pop
cmps
lock
test
imul
cs
jb
mov
adc
push
cmp
xchg
out
cmp
inc
cmp
sub
pop
pop
aaa
sbb
sbb
or
jbe
jmp
pop
out
aaa
adc
pop
nop
lea
cmp
dec
cdq
or
or
lds
xlat
nop
dec
inc
push
mov
mov
mov
daa
and
pop
pop
pop
mov
and
push
mov
ror
inc
iretw
xchg
jg
aam
inc
popa
cmp
outs
sbb
into
mov
or
rol
pop
leave
dec
test
adc
add
cs
sub
lods
push
mov
push
sub
int
adc
ror
es
das
ror
jmp
test
arpl
outs
xchg
adc
jb
cli
aam
xor
cmp
out
or
xchg
add
je
mov
jmp
push
push
xchg
push
mov
xor
bound
jl
sub
xor
adc
inc
or
outs
add
sbb
sti
add
jb
xor
repz
and
aaa
inc
or
jnp
adc
or
jo
jb
jns
inc
push
mov
ins
add
inc
pop
outs
adc
sar
or
je
imul
jne
arpl
cmps
popa
add
jnp
mov
pop
adc
jl
std
or
push
call
nop
cs
push
or
add
test
xchg
pop
xchg
pop
add
into
movs
inc
popa
(bad)
rol
hlt
push
cmp
cmps
sbb
and
cmp
pop
inc
push
mov
(bad)
pop
fiadd
push
ds
and
mov
mov
add
je
cld
push
push
enter
ret
cmp
mov
je
(bad)
maxps
cli
pop
es
sbb
mov
add
fs
ja
cdq
in
push
aas
xchg
test
jne
cmp
pop
mov
hlt
nop
jl
mov
mov
and
(bad)
adc
int3
enter
out
ins
rol
fcomp
fimul
cmp
add
pop
add
out
call
aaa
sub
fistp
ret
out
mov
add
jnp
loopne
xchg
mov
loope
js
mov
or
test
jbe
mov
xchg
xchg
pusha
and
ins
and
jle
xchg
mov
pop
add
xor
test
add
lahf
test
xor
outs
inc
ins
test
push
sbb
ja
xchg
mov
(bad)
xor
push
pusha
aam
jg
ret
dec
pushw
or
ins
add
or
inc
sbb
add
pushf
leave
mov
test
xor
out
pop
add
add
or
(bad)
mov
ja
fist
mov
or
xchg
and
dec
mov
jge
adc
xor
push
jne
sbb
mov
cmovno
add
mov
inc
inc
dec
inc
and
jo
xor
loope
mov
pop
sub
push
cmc
mov
imul
inc
push
ins
shld
rol
fist
jo
js
mov
xchg
cmps
adc
scas
add
out
pop
sbb
xchg
push
inc
push
xor
xor
sub
or
mov
test
inc
js
add
clc
mov
loopne
mov
add
dec
cmp
jae
or
inc
fwait
jbe
mov
je
outs
or
cmp
add
jne
pop
xchg
add
out
leave
adc
outs
pop
push
outs
xchg
and
add
mov
or
push
adc
or
add
sub
xchg
xor
movs
mov
ror
inc
or
xor
jno
aaa
mov
push
or
das
push
pop
jge
ret
push
adc
pop
addr16
ins
or
cmps
dec
adc
test
and
daa
or
and
add
mov
aaa
sub
arpl
jae
pop
adc
ret
lahf
jg
aam
jae
xor
scas
int3
adc
daa
and
mov
xchg
int
mov
jne
xor
out
cmp
xchg
js
ins
jnp
das
pop
inc
mov
xchg
aam
fs
dec
or
mov
lock
add
and
add
adc
ss
mov
loopne
sbb
push
enter
add
add
fs
lds
imul
push
push
dec
push
scas
ret
nop
loope
adc
out
mov
jle
pop
xor
(bad)
icebp
jne
inc
add
sbb
cdq
mov
and
sub
cmp
push
cmp
mov
dec
or
push
or
mov
fiadd
mov
shl
sbb
xor
mov
or
add
xor
sbb
nop
pop
or
and
and
sbb
and
mov
fs
push
pusha
sbb
sbb
das
sbb
pop
inc
push
and
add
popw
fs
cld
outs
nop
sbb
mov
sbb
nop
add
lods
mov
das
mov
or
or
jmp
xchg
cmp
(bad)
cld
cld
cld
cld
inc
push
in
clc
sbb
fs
mov
xor
push
fs
push
clc
clc
hlt
or
sbb
fs
or
mov
enter
pop
aad
enter
push
(bad)
loopne
push
sub
sahf
out
add
jno
out
sahf
out
cmps
mov
jle
repz
xchg
add
push
fmulp
jnp
repz
jmp
int3
fld
jmp
jle
cwde
movs
repz
repz
dec
mov
jno
xchg
out
push
mov
sahf
neg
repz
cs
adc
push
sub
out
cmp
pop
ins
out
cmp
sub
mov
jnp
repz
repnz
xchg
push
iret
repz
mov
imul
repz
test
rol
ss
adc
cli
shr
add
push
sub
sbb
xchg
dec
inc
rcl
aaa
xor
hlt
outs
in
cwde
xor
clc
dec
clc
ss
ror
cld
push
out
xchg
push
sbb
xchg
sbb
push
xchg
in
lahf
cmp
mov
fidiv
mov
outs
mov
or
add
inc
fsub
aaa
mov
or
push
call
inc
and
push
test
and
loopne
inc
addr16
lahf
shl
mov
outs
xor
pop
xor
mov
jmp
ficomp
inc
push
adc
pop
mov
nop
sub
cwde
adc
sub
dec
les
jbe
mov
repnz
push
dec
push
or
mov
fisub
inc
fcom
pop
fadd
inc
adc
mov
clc
mov
jle
rol
push
enter
mov
pop
pushf
and
push
cmp
add
stc
outs
shl
js
push
cwde
fwait
ss
push
mov
stc
push
sbb
push
dec
push
cmp
nop
push
push
ffree
(bad)
cs
jle
fidivr
ins
push
sub
push
clc
mov
fcomp
pminub
sti
jle
cdq
(bad)
mov
cwde
push
sar
adc
inc
mov
ins
push
jo
xor
sbb
and
or
push
sar
ficomp
jnp
ins
mov
push
inc
call
pop
xchg
push
cmp
pusha
test
call
mov
mov
add
icebp
push
inc
retf
push
mov
(bad)
adc
mov
punpckhdq
stos
lods
jp
out
push
fs
pop
mov
adc
sbb
adc
adc
and
sbb
loope
dec
or
push
gs
out
cwde
push
push
inc
outs
and
mov
pushf
push
or
fdivr
cmp
repz
lods
push
mov
je
sbb
ins
gs
nop
and
adc
(bad)
test
inc
push
ja
jo
add
aas
in
xchg
dec
outs
push
ret
or
xchg
punpckhbw
scas
or
jbe
mov
push
cmpxchg
xor
cmp
fidiv
les
push
sub
mov
jne
test
and
enter
and
xor
cmp
das
mov
mov
(bad)
mov
cmp
jno
adc
lock
adc
ror
xor
outs
daa
cmp
shl
inc
imul
outs
popa
bound
push
jmp
stos
(bad)
fsubr
or
or
(bad)
sub
inc
inc
rcl
mov
pop
hlt
call
cdq
jmp
call
push
dec
sbb
jg
mov
xchg
clc
pop
fwait
xchg
in
out
in
pushf
ja
mov
or
ss
popf
pop
jae
dec
sar
mov
mov
mov
mov
mov
mov
mov
mov
xor
jg
jl
ds
test
int3
push
rol
ss
push
xchg
ret
test
push
jmp
mov
das
push
jp
add
inc
cmps
ror
movs
mov
pusha
ins
(bad)
xlat
or
adc
jp
fild
sbb
jae
aas
sti
push
lods
popaw
add
or
jne
je
jb
sbb
out
arpl
xor
(bad)
xor
add
fisttp
outs
outs
push
bound
add
push
xchg
shl
jae
enter
aaa
cmps
js
mov
xlat
ret
add
push
dec
inc
fsub
fs
cmp
daa
ss
mov
push
outs
ins
bound
mov
and
or
popa
pop
les
inc
xor
aad
and
inc
sbb
adc
xchg
dec
push
movs
and
xor
inc
out
rcl
mov
adc
and
jae
inc
dec
dec
jae
jecxz
test
push
jns
and
inc
inc
mov
jbe
jle
push
popa
and
ror
ds
mov
push
add
jno
add
inc
dec
inc
sub
mov
outs
jo
fmul
mov
sbb
test
mov
mov
out
ja
push
adc
jne
adc
pop
sub
or
popf
out
push
jle
stos
xchg
xor
cli
inc
add
adc
lods
or
mov
sbb
stc
outs
xchg
add
sahf
or
adc
mov
lock
scas
or
or
inc
and
adc
test
fwait
push
mov
jmp
das
and
popf
push
push
add
pop
push
icebp
shl
popa
bound
dec
fisub
outs
sub
mov
cmp
cmc
(bad)
fadd
pand
inc
pop
adc
and
pop
or
lahf
pop
aaa
daa
add
mov
fmul
add
lahf
sti
mov
test
or
jecxz
jmp
add
rcl
ficomp
pop
aaa
(bad)
f2xm1
lds
jne
add
add
bound
fsub
fsub
daa
mov
inc
mov
loope
mov
ret
mov
cmp
add
jg
shr
push
pop
shl
mov
pusha
inc
or
cmp
xor
add
xchg
int3
xor
add
mov
inc
add
pop
mov
arpl
add
sub
dec
xchg
mov
push
mov
mov
push
or
imul
loop
adc
outs
ins
loopne
mov
sbb
add
movs
add
movs
out
push
jp
or
cmp
add
adc
push
ror
mov
add
and
mov
and
and
mov
push
test
xlat
pop
test
fimul
or
popf
shr
add
push
repz
push
test
pusha
mov
ret
addr16
pop
adc
and
push
pop
or
aam
adc
add
add
and
ja
jg
js
add
lock
inc
js
inc
or
mov
pop
inc
dec
add
and
or
(bad)
and
test
jmp
mov
cmp
dec
xor
imul
xchg
or
cmp
push
jns
xor
fsubr
cdq
fs
fild
pop
dec
sbb
js
mov
aam
in
(bad)
ret
retf
mov
ret
sti
pop
mov
xchg
hlt
mov
popf
mov
push
adc
xchg
xor
sub
xchg
aaa
test
mov
mov
jne
test
add
jbe
dec
add
sub
aaa
ins
mov
les
pop
push
inc
out
mov
fisub
cli
jge
fnsave
mov
jmp
mov
xchg
adc
push
add
sub
ror
add
inc
and
jg
dec
sbb
scas
sub
sahf
sub
(bad)
adc
mov
add
pusha
dec
or
adc
bound
inc
pop
out
mov
push
add
fwait
xor
pop
inc
cmp
ss
loope
pop
mov
or
dec
cmps
lea
pop
add
int
push
sub
adc
sub
xor
inc
jne
test
mov
arpl
xchg
push
adc
sub
bound
scas
popf
(bad)
imul
cmps
add
cmp
adc
hlt
cmps
mov
movs
mov
aaa
icebp
adc
add
es
or
or
(bad)
sub
xchg
push
bound
mov
pop
jge
(bad)
and
jmp
xchg
sub
scas
ror
jmp
push
push
dec
in
in
sahf
mov
push
pop
adc
hlt
pop
test
xor
push
cmp
push
or
adc
sbb
fs
sbb
cmp
lods
xchg
xor
adc
dec
add
loope
inc
inc
mov
je
sub
into
push
mov
arpl
cmp
js
js
out
jmp
push
adc
dec
push
fnstenv
bound
adc
cmp
nop
sbb
add
aas
test
(bad)
std
add
jg
mov
jg
jmp
ins
add
adc
adc
xor
js
sub
mov
jb
aas
xor
cmp
pop
jmp
jmp
cmp
test
push
inc
js
fiadd
aaa
cmp
sar
fs
add
jne
(bad)
call
js
xchg
rol
scas
add
repnz
out
push
push
and
shr
cmp
inc
add
lock
push
xchg
xor
not
test
aam
add
mov
fild
sbb
popa
in
(bad)
pop
add
adc
or
add
outs
enter
push
repnz
xchg
adc
add
pop
cld
add
arpl
test
add
pop
jmp
push
mov
mov
jge
jne
push
push
ret
adc
or
daa
sbb
in
cdq
sbb
mov
or
rcr
loope
cwde
call
mov
pop
pushf
cwde
cmp
cld
rcl
stos
shr
sbb
cmp
aad
adc
mov
sbb
pop
or
(bad)
xor
test
sbb
and
sbb
push
add
add
sbb
loope
mov
sbb
add
cdq
jo
(bad)
(bad)
lock
dec
mov
aam
in
cmp
test
sbb
sub
mov
outs
mov
xchg
mov
mov
inc
sub
ins
std
push
nop
cmps
sbb
and
sbb
sub
ja
mov
bound
pop
mov
jae
jle
mov
cmp
add
jae
push
mov
dec
mov
je
or
or
aad
je
add
std
sbb
lock
cdq
sbb
add
mov
ret
out
pop
sbb
(bad)
repz
inc
test
outs
and
inc
shl
scas
or
aad
ins
sub
adc
mov
rol
scas
adc
mov
xchg
lods
cmp
or
or
or
cs
neg
stos
mov
mov
add
cs
dec
add
cmp
or
push
mov
into
ins
clc
ins
fsubr
cs
ror
and
add
inc
cli
mov
imul
sbb
add
inc
es
ret
push
loope
scas
add
push
sub
push
inc
out
imul
int
add
or
sub
push
aad
adc
inc
mov
xor
pop
fsub
xchg
loope
push
out
sbb
ss
mov
arpl
mov
dec
test
js
lock
ret
jns
jno
xor
neg
add
adc
je
inc
cmp
jne
sbb
mov
jmp
push
cmp
inc
push
test
rcr
dec
add
or
test
push
loopne
add
fisub
cld
dec
adc
ret
pop
mov
mov
loop
push
sbb
pop
(bad)
popa
and
and
pop
and
cmp
in
mov
and
enter
xchg
mov
adc
sbb
or
mov
das
or
mov
xor
ret
cmp
movs
mov
movzx
nop
sbb
rol
pop
and
scas
test
je
sbb
add
icebp
call
lds
call
and
xchg
jl
pop
mov
add
pop
xor
dec
cmp
mov
sbb
cmps
scas
stos
call
xchg
fucom
push
push
push
(bad)
mov
loopne
mov
sub
or
sar
lea
add
pop
mov
adc
mov
or
xor
test
rol
shl
jb
cs
jmp
add
sub
iret
sbb
xor
dec
and
jmp
sub
jo
(bad)
rol
in
or
mov
bound
mov
adc
in
cdq
xor
xchg
loope
add
loopne
clc
mov
mov
fiadd
sbb
and
mov
pop
int
dec
aaa
outs
push
mov
clc
sub
pop
inc
or
push
cmp
ja
sbb
stos
or
dec
add
add
pusha
cmp
jbe
add
or
in
push
or
inc
outs
or
outs
add
mov
pop
cmps
mov
pop
inc
div
add
lods
int3
lea
(bad)
in
cdq
sbb
jl
push
aaa
(bad)
data16
fdivr
lods
sti
movs
ins
ins
ret
sub
push
mov
adc
je
scas
retf
sar
repnz
test
or
(bad)
sub
jne
(bad)
mov
cld
fcmovb
aad
jns
test
jno
pop
push
aam
std
mov
cmp
rcr
fistp
add
adc
sub
shl
cmp
mov
cmps
add
imul
adc
push
jmp
scas
add
mov
adc
(bad)
or
jge
inc
cmp
jmp
mov
fs
push
fisub
je
sbb
inc
fcom
and
cmp
lar
lahf
jne
xor
push
mov
jmp
frstor
add
ss
or
mov
mov
mov
cwde
loop
sbb
mov
data16
jle
(bad)
adc
je
loopne
add
test
lds
and
push
jge
add
sub
mov
jb
pop
js
lock
cwde
(bad)
ror
adc
mov
clc
inc
mov
mov
adc
rcl
out
adc
fbld
sbb
test
jne
mov
inc
test
bound
push
pop
push
inc
shr
rcl
or
pop
fsubr
sbb
stc
call
xchg
push
ins
in
clc
xor
dec
add
sub
cmp
sub
rcl
je
adc
(bad)
(bad)
fldcw
add
and
cld
push
ror
adc
or
mov
sub
pop
jmp
les
(bad)
ins
cld
mov
mov
or
inc
je
mov
cmps
cmp
push
call
add
mov
mov
add
in
add
int3
dec
and
xchg
add
loopne
aam
mov
pop
or
add
fcomip
adc
xor
fbld
lods
inc
test
bound
xchg
add
mov
sub
mov
or
das
jns
mov
mov
dec
mov
inc
cmp
or
mov
pop
inc
pop
fadd
cwde
dec
pop
push
pop
add
or
cmp
push
pop
jmp
mov
popf
push
mov
dec
mov
push
push
lock
add
sbb
rcr
xor
arpl
mov
add
scas
inc
xchg
mov
shl
add
xchg
mov
mov
sbb
dec
push
push
push
sbb
sub
fsubr
jno
ret
sbb
push
iret
and
xchg
cmc
adc
loopne
js
cmps
add
or
lods
and
aam
das
add
ret
out
or
mov
test
pop
test
xchg
adc
push
cmp
loopne
push
es
(bad)
mov
xor
adc
cli
inc
clc
pusha
add
pusha
sti
cmp
clc
mov
aam
fst
and
or
mov
and
int
push
das
dec
mov
add
pop
or
rol
mov
mov
jle
fiadd
pop
push
mov
push
cmp
out
sbb
inc
(bad)
aas
add
sub
jmp
dec
cld
clc
int3
call
dec
ret
sti
je
push
inc
scas
sub
fbstp
int3
inc
cld
xchg
xlat
and
mov
jp
shr
xchg
stc
clc
mov
add
mov
xchg
dec
jbe
movs
pop
xor
pop
rcl
pop
js
xor
shl
push
pop
stos
daa
xor
ins
dec
mov
ret
popa
ins
hlt
imul
mov
push
cs
push
or
shr
jecxz
mov
cmps
jg
bound
sbb
dec
fcomp
dec
leave
jge
fmul
sub
or
jmp
test
or
push
push
and
xchg
pop
dec
xchg
rcl
lock
fbstp
adc
loopne
or
test
out
jg
or
ds
and
test
cmp
and
or
mov
jo
cli
ja
or
pop
or
mov
adc
nop
jb
arpl
sbb
mov
dec
add
pop
dec
cmps
bound
push
lock
cmp
ins
cmps
mov
ins
add
arpl
aaa
mov
das
mov
add
pop
pop
sbb
loopne
push
mov
jno
push
or
cmp
mov
mov
inc
inc
aaa
mov
mov
fisttp
test
pop
push
adc
in
fidivr
outs
pop
xchg
push
pop
jmp
lods
(bad)
and
inc
inc
mov
inc
adc
out
jbe
bnd
xor
inc
pop
dec
jmp
clc
sbb
repnz
jne
fdivrp
mov
jne
push
je
xchg
mov
jmp
aaa
mov
inc
adc
int3
into
pusha
aaa
inc
sbb
rcl
mov
add
nop
out
(bad)
enter
repz
and
ret
add
lock
inc
rol
add
pop
mov
sbb
xor
xor
and
and
and
sbb
sub
mov
lock
push
dec
(bad)
out
lock
in
cmp
rcr
jp
dec
push
in
adc
pop
cmp
or
aam
xor
cdq
or
das
rcr
gs
and
push
shl
fst
cmp
mov
mov
or
pop
add
sar
cmp
sbb
inc
add
inc
fiadd
sar
add
fild
mov
push
mov
or
inc
xor
sub
jp
adc
push
or
test
jmp
cmp
dec
addr16
push
test
and
and
(bad)
dec
dec
sbb
push
mov
cmp
xchg
in
das
jge
test
pushf
ja
sti
fdiv
mov
cmp
sar
jnp
sub
cdq
cmp
mov
pop
mov
mov
sub
add
cmps
inc
out
pushf
adc
fiadd
jge
movs
xchg
mov
clc
ror
clc
lock
push
jo
loope
ja
mov
sbb
je
xor
push
inc
cwde
add
call
push
loop
xor
push
add
pop
cmp
imul
jmp
adc
data16
add
add
(bad)
aaa
mov
xor
jbe
arpl
movs
inc
xor
test
adc
xchg
loopne
or
push
push
mov
rcl
fist
adc
add
dec
adc
sbb
mov
xchg
add
xor
mov
mov
dec
cli
dec
jl
or
sbb
push
popa
in
dec
outs
das
add
cmp
and
rcr
rcl
iret
push
mov
xor
mov
and
cmps
rcl
(bad)
shr
push
or
rol
mov
add
pusha
aas
in
sbb
or
rol
cdq
pop
dec
inc
shl
push
mov
lds
movs
xor
inc
dec
mov
push
ss
add
mov
int3
outs
dec
cmp
push
cmp
mov
mov
in
or
or
jne
sbb
xchg
xor
mov
inc
xchg
dec
fadd
fcom
sar
imul
fs
push
clc
ror
lods
in
sbb
or
ficom
call
dec
add
fs
add
or
jne
adc
inc
out
dec
dec
adc
adc
loopne
enter
inc
pushf
cs
cwde
xor
add
mov
add
push
fwait
and
sahf
push
cmps
inc
aaa
test
xchg
or
sbb
into
push
mov
inc
pop
jne
fcom
push
popf
mov
data16
ret
push
or
inc
js
or
pop
bound
inc
enter
mov
sub
das
mov
shl
test
mov
iret
stos
das
pusha
mov
cmp
or
cmp
inc
inc
xchg
rol
mov
cmp
mov
adc
hlt
mov
aam
dec
adc
outs
sbb
mov
xor
push
sub
sbb
add
clc
sub
daa
mov
(bad)
and
mov
mov
dec
pop
push
push
xor
sub
inc
sub
pop
shr
add
or
out
sub
movs
and
pop
mov
inc
add
add
fwait
inc
fdivr
psadbw
inc
pop
add
jmp
fld
fmul
jo
add
inc
xchg
lea
cwde
fld
aaa
inc
add
push
xor
xchg
and
or
add
sbb
mov
loopne
pusha
movs
adc
add
mov
pop
das
iret
add
lea
pop
lea
pop
js
lds
cmp
adc
clc
xor
lahf
add
add
outs
(bad)
push
and
(bad)
push
fdivr
bound
test
je
push
and
adc
fmul
repnz
jmp
jge
(bad)
push
lock
ficom
jnp
clc
mov
sbb
movs
add
xchg
lods
adc
popa
xchg
adc
add
rol
out
popa
js
or
ret
bound
rcl
daa
in
jmp
add
and
lds
movq
mov
sbb
cmc
and
adc
cmp
push
fs
pop
mov
cmp
mov
jecxz
or
add
adc
pusha
pop
ja
rol
sbb
add
mov
add
lock
and
push
mov
lods
mov
add
cmp
add
ret
pop
aaa
jno
je
mov
sub
bound
or
test
pop
sbb
or
or
rcl
jo
add
push
ror
mov
dec
(bad)
(bad)
addr16
test
fild
add
and
fwait
jo
retf
sbb
mov
xor
test
add
call
lock
aaa
or
push
add
push
(bad)
idiv
mov
pop
test
xchg
push
add
jns
test
sub
hlt
xchg
clc
mov
aaa
dec
dec
mov
inc
mov
aad
out
push
jecxz
div
sub
xor
cmp
mov
imul
fild
xchg
rol
div
sbb
mov
sbb
jbe
data16
add
xchg
pop
test
xor
adc
in
pop
dec
fwait
fs
xor
adc
out
push
xor
adc
jmp
or
movs
ss
addr16
aaa
dec
mov
les
(bad)
and
iret
sbb
aam
mov
(bad)
scas
cmps
sbb
add
icebp
je
dec
dec
cmp
or
lods
add
or
mov
sbb
jbe
(bad)
sub
xchg
sbb
pusha
and
adc
int3
push
inc
inc
mov
sbb
jb
ror
(bad)
std
xchg
add
outs
js
xchg
inc
daa
ret
mov
(bad)
rcl
fs
xchg
and
add
xor
sbb
xor
(bad)
xor
jne
ror
mov
lock
push
push
mov
mov
nop
je
pop
jp
xor
ins
sbb
push
dec
sbb
rcl
or
das
aam
ficom
sbb
lock
push
or
loopne
xchg
inc
add
lea
enter
(bad)
add
lea
outs
add
test
add
(bad)
fsub
push
jne
jmp
dec
jb
gs
sbb
xor
inc
adc
and
add
(bad)
gs
outs
je
adc
inc
je
arpl
outs
xor
ins
aaa
and
or
xor
jge
jnp
add
ret
cld
adc
or
jbe
inc
and
fmul
adc
fmul
imul
xchg
push
jge
dec
push
pop
(bad)
pusha
cmp
mov
inc
add
or
test
inc
into
mov
push
mov
into
test
push
shr
pop
mov
jo
aaa
pop
inc
ret
int
sbb
pop
adc
movs
or
outs
popa
ins
pop
in
xchg
add
hlt
into
in
adc
add
test
sub
int3
add
xchg
mov
add
cmp
lahf
inc
into
ins
inc
mov
or
ds
iret
push
or
cwde
idiv
lock
iret
stc
sub
or
pop
xchg
shl
push
add
pop
dec
retf
repnz
and
je
in
or
(bad)
rol
mov
push
and
(bad)
std
js
pop
sbb
int3
aad
mov
push
fld
addr16
fcomp
call
jo
mov
iret
push
push
je
(bad)
push
(bad)
shl
out
daa
mov
fs
jb
aaa
loopne
sbb
pop
mov
(bad)
enter
or
xor
adc
ret
push
dec
aaa
out
push
enter
dec
(bad)
fmul
pushf
mov
sahf
xor
xor
push
sbb
(bad)
mov
or
rcr
test
inc
jnp
pushf
ror
shr
div
and
inc
and
popa
imul
adc
jne
outs
xor
add
adc
dec
xchg
add
fisubr
dec
sub
xor
ins
push
loope
and
rcl
not
sbb
hlt
retf
pusha
cmovs
cwde
jnp
xor
sbb
dec
jo
sbb
xchg
pushf
mov
push
sbb
push
pop
inc
dec
fcmovb
pop
jne
pop
pusha
arpl
add
pop
jg
inc
aad
iret
cmp
pop
aas
push
repnz
mov
mov
ror
in
inc
movs
dec
add
pop
call
sub
fcom
cmp
call
ror
ret
out
popa
xor
mov
cmp
jge
in
pop
mov
iret
jecxz
xchg
ret
inc
inc
dec
fsubr
int3
aad
mov
les
or
outs
mov
and
icebp
mov
mov
ja
inc
lea
pop
add
pop
and
pop
sub
imul
and
and
lods
pop
or
jmp
add
inc
pusha
mov
push
dec
loopne
inc
les
(bad)
not
add
ja
add
lods
aam
xor
bound
dec
sar
aad
aam
or
fwait
aad
push
aad
aad
ret
cmps
ror
(bad)
add
adc
push
fiadd
pop
push
cmp
sbb
popa
and
xchg
push
arpl
addps
jb
pop
test
push
push
addr16
mov
cmp
loopne
push
ret
mov
add
mov
or
inc
sbb
inc
xchg
popa
aas
fdivp
jl
and
adc
adc
(bad)
dec
(bad)
mov
je
add
ret
or
push
lock
mov
frstor
cmp
or
xchg
ret
sbb
and
rcl
push
push
dec
add
out
sbb
xor
cmp
arpl
lock
pop
shl
pop
adc
call
loopne
jmp
pop
ins
in
inc
dec
pop
ret
scas
cwde
pop
push
pushf
(bad)
das
push
jo
(bad)
nop
std
sbb
or
sar
mov
jb
adc
inc
sbb
retf
test
ret
inc
(bad)
test
mov
mov
retf
fucom
and
sub
xor
test
gs
test
push
(bad)
adc
jae
jae
mov
mov
xchg
sub
call
into
xchg
and
js
jo
inc
loopne
xor
pusha
push
mov
cld
jo
mov
push
push
inc
or
pop
test
adc
jae
sbb
lock
cli
push
push
mov
adc
xor
dec
test
mov
aas
fs
rol
loopne
or
mov
icebp
pop
fild
dec
inc
xor
int3
mov
fcomp
ins
loopne
pop
into
mov
mov
adc
cmp
or
int3
or
and
sub
inc
mov
es
lea
lahf
sbb
mov
mov
or
dec
jmp
cli
pop
scas
or
push
jo
fld
jl
arpl
sbb
sub
sti
inc
jo
adc
add
fld
adc
test
fcomp
(bad)
out
xor
popa
push
or
scas
int
adc
loop
imul
inc
fs
dec
jmp
sbb
push
pop
xchg
shl
inc
push
pop
or
inc
dec
outs
fs
push
push
and
sub
je
add
fcmove
inc
sub
jae
test
inc
jae
xor
or
movs
ret
ins
jmp
add
inc
mov
fdiv
sbb
push
and
popa
js
jmp
adc
pop
in
sbb
mov
das
mov
pop
mov
dec
pusha
dec
sbb
and
pusha
or
pop
dec
call
or
loopne
adc
jb
inc
outs
outs
ins
dec
pop
sub
mov
fsub
pop
cdq
loop
loopne
gs
or
aas
push
imul
jne
fild
lock
dec
dec
adc
pop
fcom
jae
dec
stc
inc
fcomp
pop
and
and
or
outs
test
imul
data16
call
mov
cmp
or
out
dec
xor
fadd
add
adc
in
enter
adc
and
push
cwde
and
je
jb
ins
mov
adc
jae
sub
scas
push
or
pop
xchg
rol
arpl
out
mov
test
adc
mov
inc
cmps
popa
dec
fst
mov
stos
lods
ins
mov
pop
sub
ins
pop
shld
arpl
scas
xchg
pop
sbb
or
adc
mov
jo
push
sub
scas
mov
jo
inc
mov
adc
shl
loope
or
aaa
or
das
ins
fiadd
sub
repnz
add
jle
retf
je
cmp
sti
sub
cmps
adc
mov
add
fiadd
int3
jne
push
nop
rcl
das
sub
push
xchg
xor
adc
outs
push
dec
imul
add
stos
sub
inc
jne
in
adc
hlt
loopne
push
mov
cwde
loopne
inc
test
aaa
out
or
adc
sbb
out
push
jne
inc
leave
aam
aaa
out
sub
loopne
jne
clc
loopne
out
fcom
jnp
or
imul
idiv
je
or
test
stc
or
sti
les
or
sbb
push
fs
xchg
push
pop
cmp
aas
sti
inc
loop
pop
sub
xor
mov
mov
imul
jbe
cmp
inc
jns
loop
push
aam
(bad)
cmp
in
push
or
add
inc
cmp
jmp
das
sbb
jg
pusha
jecxz
fucomip
push
cwde
cmp
add
fstp
xchg
sbb
imul
mov
(bad)
fiadd
xor
lock
sbb
outs
sbb
xor
xchg
push
fsubr
push
xor
or
xchg
mov
cmc
add
outs
sbb
test
push
mov
pop
push
js
pop
adc
addr16
and
push
test
stos
out
fs
sbb
adc
ins
imul
pop
add
inc
pop
sbb
or
push
pop
dec
(bad)
aam
pusha
shl
inc
test
fadd
adc
lock
mov
add
cmp
imul
jbe
sub
inc
mov
js
adc
test
js
das
mov
inc
adc
popa
fs
loope
sbb
mov
push
leave
or
ja
out
(bad)
jns
out
aaa
in
test
inc
jb
xor
or
or
jb
dec
cld
pop
or
inc
outs
fs
inc
sub
out
push
pushf
cmp
cmp
sub
sbb
fdivr
and
cmp
inc
inc
sbb
nop
popa
je
sub
xchg
sub
sub
call
and
pop
and
and
fstp
std
add
fldenv
cmp
sub
jmp
mov
push
imul
add
adc
push
data16
outs
outs
mov
inc
fimul
add
loope
mov
jle
clc
ja
jmp
jns
js
shl
mov
push
push
fcom
jmp
iret
inc
push
(bad)
jns
or
push
(bad)
jmp
jp
pop
fs
or
and
bound
xor
push
(bad)
test
xchg
mov
imul
inc
jp
mov
sbb
cwde
stos
rcl
sub
mul
mov
and
fadd
mul
push
push
add
je
add
add
cmp
dec
and
or
jmp
adc
add
in
add
dec
(bad)
arpl
mov
(bad)
ja
inc
add
cmp
aas
test
sbb
sub
xor
and
sysret
mov
int
inc
leave
xor
movs
mov
add
ss
ret
xor
bound
scas
mov
or
push
inc
xor
adc
jo
test
repz
(bad)
add
cmps
(bad)
(bad)
test
mov
pop
pop
ret
sub
mov
push
cwde
lock
mov
inc
xor
adc
out
sub
xchg
push
aas
int
mov
dec
jo
and
add
loopne
sbb
add
adc
pop
or
popa
into
inc
imul
jae
test
mov
push
or
ror
pop
push
test
sub
push
pop
sub
mov
inc
js
je
adc
sbb
fst
int
ror
push
cld
out
cmps
test
cmp
jb
stos
sub
sub
or
push
outs
imul
add
setno
inc
add
dec
popa
bound
lods
mov
test
jo
popf
mov
inc
mov
mov
(bad)
jbe
mov
imul
add
or
or
aaa
or
cmp
add
js
ror
adc
rol
push
mov
das
loopne
daa
jo
clc
or
xchg
push
add
or
repnz
enter
imul
add
cmp
xchg
cmp
add
sub
sbb
shl
or
jbe
xor
jg
mov
inc
dec
outs
dec
sar
cmp
ficomp
cmp
sbb
dec
mov
loopne
mov
les
add
movs
popa
fcmovne
and
aaa
xor
aaa
stos
xor
cmp
stos
xor
push
sti
xor
push
add
js
and
mov
cmp
mov
fst
out
data16
mov
xor
in
sbb
cmps
push
sbb
or
cs
ins
cmp
push
jne
call
mul
and
mov
push
int
jl
int
sub
lods
leave
test
hlt
sub
xor
jo
xchg
sbb
add
dec
test
xor
inc
movs
mov
push
lods
dec
lods
js
jne
lods
push
out
in
jmp
(bad)
fiadd
stos
int3
xor
adc
popf
cmp
les
out
out
xchg
push
cmp
je
sbb
pusha
in
scas
and
inc
fcomp
and
mov
imul
xor
and
call
arpl
and
call
ss
iret
pop
push
test
sbb
xchg
mov
add
push
xor
cmp
adc
fmul
or
jecxz
push
adc
addr16
cmp
sbb
add
xor
inc
and
push
lods
lods
and
cmc
cmp
cmp
mov
inc
leave
test
xor
popf
and
push
scas
or
inc
sbb
pop
cwde
inc
dec
push
and
lahf
mov
mov
sar
adc
lds
stos
push
add
mov
add
add
pop
stos
pop
sbb
xchg
daa
mov
ud0
xchg
xchg
add
cli
xchg
in
fs
sti
cmp
adc
in
mov
cmp
idiv
std
dec
inc
sahf
mov
daa
daa
and
jmp
rsm
lock
cmovs
or
jo
pusha
pusha
es
inc
outs
push
rcr
pop
or
dec
inc
xchg
ja
mov
jb
push
popf
clc
ins
xor
bound
or
cwde
sbb
ins
arpl
xor
and
jmp
bound
add
add
add
cmp
dec
inc
xor
and
mov
outs
inc
outs
mov
sar
and
mov
sbb
add
and
pop
adc
or
lahf
add
xor
sub
daa
dec
xor
cdq
inc
mov
add
and
pop
cmovl
and
pop
sbb
add
int3
sbb
inc
sbb
adc
les
or
(bad)
aas
(bad)
loopne
punpcklbw
jo
js
lock
sub
sbb
adc
and
push
mov
push
inc
push
or
and
xchg
push
cmp
dec
add
into
popf
inc
adc
sub
jb
mov
rcl
inc
movs
rol
sub
inc
imul
mov
adc
mov
add
jmp
mov
sbb
ins
sbb
dec
mov
mov
or
scas
mov
inc
or
inc
fwait
cwde
mov
sub
ins
fs
inc
popf
push
bound
mov
push
inc
cdq
imul
cmp
and
mov
xchg
mov
dec
outs
scas
mov
xchg
xchg
push
and
adc
push
sbb
jne
xor
add
push
inc
sar
jb
cmp
jo
or
dec
or
jg
inc
cmp
in
pop
and
mov
xchg
push
mov
ja
imul
push
pop
push
adc
push
add
add
mov
add
das
(bad)
cmp
cmp
and
std
push
ins
mov
adc
add
cld
and
ds
mov
push
push
cmp
outs
or
inc
jne
into
pusha
fisttp
fdivr
cs
push
jae
mov
scas
dec
sbb
adc
and
call
cwde
sbb
aad
add
push
mov
adc
inc
outs
mov
inc
in
lods
or
push
jp
in
push
add
lea
shr
repz
pop
add
repnz
jb
cmp
icebp
dec
mov
mov
sbb
sbb
sbb
imul
lock
lock
sbb
mov
xchg
cwde
pop
dec
sbb
sbb
dec
nop
mov
dec
inc
outs
fs
les
add
loop
and
add
outs
cmp
sbb
add
sti
xor
cmp
inc
sbb
inc
js
je
int3
cmp
les
int
add
loope
mov
add
adc
pop
push
mov
xchg
push
sbb
fs
pop
dec
(bad)
nop
dec
mov
lods
fld
and
call
leave
dec
adc
or
and
inc
xchg
and
add
or
dec
outs
cmps
daa
inc
mov
call
inc
sub
shl
mov
jae
inc
jae
push
(bad)
xor
leave
sub
pushf
push
cmp
test
pop
sub
sbb
adc
dec
sub
rol
fs
sbb
fsubr
xor
call
or
retf
sbb
mov
pop
sub
aas
jbe
jae
cmp
and
sub
push
pop
push
jmp
push
scas
mov
(bad)
ja
mov
push
das
add
mov
push
xchg
(bad)
(bad)
cmp
dec
add
or
das
jbe
inc
dec
xor
adc
(bad)
test
xor
into
test
call
cmc
lds
add
adc
(bad)
out
call
out
les
pop
sbb
fs
pop
mov
adc
or
mov
ss
cmp
je
aaa
add
fmul
(bad)
jl
mov
mov
test
cmp
dec
pop
in
les
call
bound
pushf
dec
lods
inc
lods
das
cmp
or
dec
stc
jmp
mov
jmp
mov
mov
xor
mov
(bad)
pusha
(bad)
pop
aas
add
push
int3
cli
bound
(bad)
mov
outs
pop
in
int3
pop
imul
adc
test
int3
sub
jmp
push
inc
add
cmps
data16
xor
add
das
jbe
lods
mov
add
lods
aam
adc
fcos
in
cwde
cmc
lds
add
sti
mov
fcomp
inc
add
pop
push
cmp
push
lods
adc
xor
(bad)
cld
ins
dec
add
dec
adc
and
arpl
(bad)
test
add
imul
push
aam
bound
add
pop
pop
cmp
dec
pop
das
jbe
sbb
dec
dec
add
inc
lods
sbb
jge
and
dec
add
lods
das
jbe
aad
sub
dec
add
cmp
xor
dec
mov
push
adc
(bad)
cmp
mov
mov
inc
fmul
jo
push
add
pop
in
dec
add
addr16
popf
pop
popa
call
add
push
mov
add
ds
imul
or
mov
outs
xchg
mov
sbb
pop
mov
add
add
add
jbe
pop
mov
sub
mov
inc
mov
inc
inc
inc
inc
outs
nop
mov
inc
cs
inc
stc
sbb
jne
inc
inc
inc
fwait
shl
add
cmp
xchg
ret
inc
inc
jmp
inc
inc
xchg
ret
in
pop
and
mov
int
push
jbe
xchg
and
and
hlt
push
or
and
and
enter
xchg
and
and
or
and
and
mov
and
xchg
or
mov
add
aam
imul
or
xchg
movups
push
sub
adc
push
test
add
mov
pop
movs
lods
push
enter
inc
bound
stos
ins
imul
dec
leave
push
push
xchg
cmp
mov
push
gs
retf
or
ret
inc
int3
pop
dec
test
lock
fsubr
popf
or
ficomp
push
push
pop
aas
push
or
ror
outs
lods
nop
inc
xchg
dec
ror
enter
(bad)
xor
mov
jg
inc
jne
jns
add
add
ret
(bad)
mov
js
push
fcmovnbe
inc
push
dec
inc
jnp
inc
xor
dec
xchg
inc
adc
add
cmp
repz
ror
add
sub
nop
mov
lock
xchg
nop
jmp
mov
ret
sub
mov
adc
adc
aam
mov
in
xchg
pusha
(bad)
rol
mov
mov
or
push
mov
loope
pop
mov
icebp
lahf
sub
mov
xchg
push
(bad)
jl
cwde
pop
pop
ja
call
sbb
cmp
pop
pop
add
jg
cdq
inc
in
ffree
sub
shr
pop
dec
loope
xor
loopne
cmp
lea
adc
sub
imul
lea
xor
inc
shl
xchg
mov
xchg
jno
inc
fsub
scas
adc
ja
aaa
dec
add
xchg
adc
mov
pop
xor
clc
push
arpl
imul
xor
lock
(bad)
mov
pop
ja
vlddqu
jns
push
mov
cmc
in
mov
out
jmp
rol
repz
(bad)
fcom
cmc
outs
test
inc
ins
gs
and
adc
lock
xor
aam
into
or
sbb
push
inc
push
mov
and
cwde
ret
iret
mov
jb
pop
mov
mov
mov
jb
jb
je
jb
jb
jbe
js
jb
jb
jp
jl
jb
jb
jle
pusha
popa
jb
jb
bound
gs
jb
addr16
jb
jb
imul
jb
outs
outs
push
pop
adc
adc
test
push
inc
dec
inc
mov
out
xchg
xor
pop
xor
addr16
outs
imul
or
add
or
popa
adc
jb
fucomi
sar
cld
adc
add
sbb
pop
add
push
xchg
and
ja
loop
js
gs
mov
or
or
push
add
push
xor
inc
sub
push
and
xor
addr16
(bad)
jae
popa
adc
fidiv
jle
adc
neg
jbe
push
clc
adc
push
push
cs
pop
ja
pop
push
or
mov
add
and
jl
fs
mov
fs
ja
xor
cmp
popa
cmp
fidivr
ror
loop
sub
push
retf
clc
neg
xlat
clts
add
push
jo
pop
add
or
fisubr
mov
add
dec
aad
inc
in
add
cmc
adc
clc
add
pop
push
jmp
fsub
and
jae
fsub
push
fld
add
push
imul
(bad)
aam
mov
and
sti
sbb
sub
out
sub
repz
and
scas
push
mov
inc
dec
sbb
maskmovq
idiv
mov
in
or
sub
out
icebp
inc
sahf
lods
ja
lods
js
jl
imul
sbb
lods
jg
cmp
out
ins
add
inc
frstor
jne
push
push
push
sahf
fsub
clc
and
sbb
scas
paddq
sbb
outs
mov
pcmpeqd
dec
adc
pop
mov
push
inc
push
xchg
retf
loop
cs
and
xchg
cli
add
adc
adc
sbb
lea
jmp
xchg
add
cmovne
add
pop
popa
and
jbe
pusha
add
stos
xor
or
ins
fisttp
ss
sbb
sbb
and
add
rol
fcom
out
push
xor
inc
pop
adc
test
push
cmp
fidivr
and
cmp
dec
test
gs
add
aas
lods
test
and
add
popa
or
adc
push
add
or
mov
xor
jo
cld
mov
lds
pop
in
sub
jnp
mov
popa
and
imul
imul
cmps
mov
ins
sbb
add
std
(bad)
and
cmc
ret
sldt
ins
jmp
add
sbb
or
add
push
add
dec
adc
dec
cmp
push
or
push
adc
addr16
inc
pop
inc
and
mov
jl
mov
sbb
dec
ja
lea
add
out
mov
add
cdq
dec
popa
jo
add
sbb
or
sub
push
push
push
cmp
loopne
sub
mov
xchg
push
(bad)
das
cmp
push
pop
js
mov
xlat
das
pop
or
mov
imul
add
and
inc
fwait
xor
adc
mov
loope
adc
mov
adc
jl
fnstenv
xchg
push
inc
push
mov
movlps
imul
loope
adc
pop
or
(bad)
into
leave
leave
jb
int3
enter
fcomip
sysret
add
and
pop
(bad)
cmp
enter
and
xchg
pop
mov
dec
es
call
mov
dec
dec
inc
into
dec
pop
fdivr
or
push
fisttp
add
sub
mov
cld
inc
mov
sub
cmp
mov
js
inc
test
fstp
add
test
add
ror
fsub
mov
xor
mov
add
add
test
sbb
pop
call
mov
xor
ret
pusha
stos
add
ficom
add
add
adc
mov
adc
retf
cmp
add
push
test
fsub
ror
cmp
out
fsub
test
adc
sub
retf
popf
sub
shl
or
add
add
dec
xchg
adc
mov
jnp
push
sbb
stc
push
popa
bound
sbb
in
je
mov
aas
add
inc
xchg
mov
inc
push
cmp
out
sbb
xchg
push
adc
add
pop
lds
add
jo
jge
ins
lock
nop
adc
js
xchg
mov
sub
stos
cli
lds
add
aam
inc
gs
and
push
adc
aam
push
pop
bound
xchg
mov
jo
adc
add
pop
push
sbb
mov
cmp
add
cmp
jl
mov
adc
lods
ror
inc
lods
int3
out
push
push
aaa
rcr
cmp
or
or
pop
cmp
sub
ret
jae
xchg
and
pop
loopne
inc
push
sbb
arpl
lock
nop
jge
shl
test
push
int3
dec
gs
cmp
stos
mov
sub
or
pop
out
or
das
fsub
mov
scas
inc
imul
adc
loop
push
and
adc
inc
add
and
push
int
jo
pop
add
std
scas
cmp
(bad)
fsub
push
in
es
es
imul
mov
inc
outs
add
push
push
push
fild
mov
cld
push
rcr
fild
shl
xchg
pop
sbb
inc
pop
mov
cmp
mov
jbe
std
scas
es
es
or
test
dec
pop
lock
test
imul
jb
adc
cmp
push
add
das
mov
mov
call
sti
ins
xor
jnp
pop
jp
sbb
fdiv
push
xchg
push
aam
cmp
xor
add
icebp
aam
stc
inc
sbb
dec
rcr
imul
adc
fdivr
shl
push
push
dec
(bad)
sbb
sbb
mov
fldcw
sub
push
retf
xchg
xchg
xchg
mov
xchg
xchg
xchg
sub
add
aad
int3
sbb
fcomi
mov
or
or
jne
sub
or
push
sti
cmp
mov
push
sbb
push
push
repz
add
cmps
adc
xor
dec
sbb
xchg
push
or
ins
icebp
popa
add
adc
cmp
outs
xchg
int
faddp
cmc
ret
sub
out
sbb
(bad)
nop
cs
loop
cmc
mul
pop
das
mov
out
nop
pop
xchg
inc
ins
int3
push
sar
ins
out
sbb
mov
push
inc
push
call
cmp
scas
pop
fild
jmp
pushf
xor
xlat
sub
std
cmp
mov
fsubr
pop
or
test
enter
dec
add
sub
inc
in
sub
or
call
sub
mov
add
mov
gs
mov
adc
push
sub
push
jmp
(bad)
not
mov
aas
mov
push
or
jb
or
mov
ror
or
push
in
out
ret
inc
mov
bound
push
pop
mov
add
inc
and
mov
inc
mov
bound
jnp
push
adc
pop
loope
sub
(bad)
jo
adc
cli
or
adc
adc
inc
call
ds
jae
adc
shl
stos
das
push
and
fsubr
in
add
or
ins
movs
or
cmps
sub
cs
and
pop
push
cpuid
(bad)
ins
dec
xchg
cs
add
dec
pop
dec
fst
ja
das
bnd
lea
das
adc
rol
adc
and
cmp
jp
push
sub
mov
jge
push
dec
mov
jne
addr16
jne
fadd
sbb
mov
aam
(bad)
out
cdq
xor
test
scas
add
xor
or
add
xchg
jge
sub
icebp
jae
add
inc
jl
adc
or
das
or
push
add
or
and
outs
int3
fldcw
movs
dec
pusha
pop
pop
add
mov
imul
fisttp
add
sbb
mov
daa
mov
xchg
movs
es
das
cli
push
cmp
push
pushf
mov
xor
fcmove
push
ins
daa
cmps
fldcw
sub
test
push
nop
or
fs
and
dec
daa
pop
inc
push
dec
(bad)
push
inc
(bad)
aad
ror
pop
das
or
sub
or
loopne
dec
add
or
xchg
loope
je
sbb
and
bound
(bad)
pop
and
cwde
or
mov
inc
and
inc
dec
adc
outs
and
xor
inc
in
xor
cmp
inc
inc
inc
push
psubb
aas
mov
xor
xor
mov
pop
mov
scas
and
mov
lods
js
in
sub
repz
xor
leave
daa
daa
and
cmp
xchg
(bad)
sbb
cmp
sbb
inc
out
fnstsw
fist
xlat
xor
cmp
scas
jno
inc
repnz
pop
dec
push
mov
ror
pop
je
cmp
aas
ror
sbb
mov
xor
adc
pusha
xor
int3
nop
fsubr
push
xor
xchg
adc
inc
adc
rol
or
int3
in
inc
push
gs
popa
or
push
xchg
hlt
jnp
pop
and
sub
jno
int3
sub
popa
xor
arpl
xor
mov
outs
jo
aaa
push
cmp
lea
jle
dec
gs
mov
stos
test
jbe
jne
or
rol
mov
add
data16
sub
popf
cmp
test
sub
pop
rcl
jns
int3
in
xor
fimul
sti
jmp
pop
mov
push
mov
arpl
dec
pusha
mov
jns
nop
sbb
lods
cdq
push
jnp
sub
rol
jnp
inc
or
(bad)
sar
sbb
cmps
outs
cld
add
in
inc
jo
xchg
sbb
lahf
add
mov
dec
mov
pop
cmc
inc
mov
push
je
out
or
jmp
and
mov
dec
je
mov
in
cmp
dec
and
and
outs
cwde
mov
and
and
inc
addr16
cmp
mov
mov
push
xchg
pop
add
out
nop
add
or
dec
add
and
ficomp
inc
fnstcw
in
idiv
sub
xchg
jo
mov
aas
xor
push
mov
or
inc
into
call
add
loop
sbb
in
loopne
or
ins
xchg
je
mov
ins
fs
fld
sbb
adc
adc
dec
ret
fcomp
and
je
cs
rcr
arpl
adc
sbb
xchg
jecxz
push
mov
add
nop
addr16
cmc
mov
test
ss
cmp
mov
push
jg
pusha
enter
inc
ins
jo
jns
xor
and
sar
pop
xor
xchg
pop
fwait
adc
inc
cmp
adc
dec
or
push
pop
push
or
cmp
inc
loopne
retf
test
xor
pop
lds
les
pop
(bad)
push
xchg
pusha
inc
cmp
clts
mov
lods
aam
pusha
in
inc
jb
(bad)
jb
or
and
push
inc
cmp
pop
mov
jnp
pop
add
cmp
xor
add
cmp
loope
or
cmp
push
lods
sbb
mov
xor
push
xchg
add
xchg
ror
popa
jns
imul
xchg
adc
(bad)
pop
cmp
ins
imul
mov
push
sub
jp
mov
xor
push
or
sub
ins
dec
cs
push
pop
loop
or
sbb
leave
loop
rol
cmp
add
push
lods
das
sar
push
and
daa
shr
cmc
mov
inc
push
clc
push
cmp
push
inc
push
adc
mov
adc
mov
inc
out
cmp
jle
lahf
mov
cmp
cmc
xchg
xchg
or
xlat
ror
cmp
jg
inc
iret
shl
mov
ss
loope
mov
adc
cmp
rcl
push
pop
xor
sub
mov
lods
mov
push
mov
ds
pop
or
inc
scas
fscale
call
mov
push
jo
in
cmp
dec
inc
xlat
sub
sub
inc
inc
sub
dec
inc
and
jnp
cmps
ins
push
mov
push
jo
and
xchg
cmp
sti
or
gs
jo
je
mov
rol
popa
cmp
and
sbb
push
stos
pusha
dec
sbb
or
adc
inc
and
(bad)
jo
inc
mov
dec
sub
push
sbb
sub
sub
push
inc
inc
inc
mov
inc
jno
cmp
(bad)
fs
(bad)
fadd
dec
outs
out
fs
jmp
(bad)
fadd
inc
sub
or
and
inc
test
ja
aas
rcl
jb
pop
stos
or
cld
inc
xor
cmp
inc
mov
(bad)
cmp
cmps
scas
mov
inc
loopne
inc
push
or
fadd
and
test
inc
xor
lods
nop
pop
leave
fadd
inc
push
xor
mov
stos
in
mov
or
inc
lds
or
xchg
xchg
retf
or
pop
mov
pop
xchg
xchg
mov
(bad)
rcl
mov
imul
push
imul
adc
dec
imul
or
scas
push
dec
in
inc
sbb
dec
in
jne
sbb
sbb
push
dec
adc
bound
inc
loope
shl
ins
sbb
in
call
mov
sbb
mov
cdq
call
cmc
jns
adc
inc
out
mov
stos
ja
add
push
adc
in
add
and
inc
adc
push
xor
adc
stos
push
out
mov
inc
push
inc
adc
cmp
inc
jno
adc
popa
imul
ret
mov
rol
push
popf
in
mov
inc
mov
adc
adc
mov
(bad)
inc
jnp
jp
lock
pop
jecxz
inc
mov
pusha
adc
and
inc
inc
adc
adc
dec
inc
js
(bad)
mov
lods
and
mov
dec
je
and
push
push
nop
stos
mov
bound
pop
add
push
shl
sbb
adc
cwde
or
and
imul
add
inc
sub
push
aad
sbb
scas
aam
adc
test
dec
neg
inc
aam
inc
fbld
in
inc
out
aam
sbb
call
or
dec
push
sbb
pop
push
dec
inc
sbb
ins
iret
je
cli
push
enter
(bad)
in
inc
dec
pop
add
icebp
es
out
dec
add
jb
xchg
dec
ror
dec
pop
or
stc
xchg
pusha
dec
nop
sbb
loope
dec
sub
mov
or
imul
jno
je
adc
inc
and
cmps
and
dec
mov
jns
mov
pop
mov
jnp
xor
loop
push
lds
outs
rol
mov
loope
inc
jecxz
cmc
mov
dec
inc
jmp
jmp
lock
mov
das
cmps
rcr
inc
lods
dec
out
add
dec
addr16
imul
das
call
dec
imul
dec
rcr
inc
add
adc
gs
dec
inc
daa
dec
add
sti
mov
add
imul
xor
loopne
pop
dec
or
sbb
daa
mov
dec
jno
and
mov
jno
loop
mov
ror
add
clc
jecxz
or
dec
and
lods
outs
cdq
lods
adc
cmp
in
xchg
jle
ficomp
add
hlt
inc
sub
add
div
pushf
dec
xor
push
jo
jo
xchg
adc
fcmovne
and
add
test
pop
xlat
add
dec
jl
cmp
push
jae
adc
xchg
inc
pop
jmp
mov
jne
stos
bound
aaa
push
stc
dec
adc
inc
es
aas
cld
loop
outs
out
push
jo
mov
scas
mov
mov
out
push
je
fist
pusha
push
mov
adc
outs
jo
or
add
pop
stos
mov
gs
mov
mov
mov
push
jno
sub
test
ret
dec
clc
dec
iret
lock
fwait
inc
dec
xchg
shr
lods
dec
jmp
popa
dec
mov
sbb
mov
scas
xor
int
sub
test
push
cmps
jo
es
push
das
inc
push
xlat
jo
es
push
cmps
lock
xlat
pop
pushf
dec
push
ret
loope
push
iret
(bad)
ucomiss
push
pop
adc
pop
inc
stos
loop
loope
iret
mov
xchg
rol
inc
repnz
sti
adc
rol
cmps
out
ja
add
aas
cmp
sbb
test
inc
push
ins
inc
ins
add
push
xor
test
call
loopne
mov
mov
add
jle
mov
mov
andps
or
je
cmp
jb
or
fcom
(bad)
ins
jae
xor
xor
je
jmp
jns
dec
pop
jbe
sbb
mov
pushf
daa
pop
or
jae
jo
jne
add
xchg
push
adc
mov
and
rol
sbb
push
cmp
imul
push
loop
xor
fs
aam
sbb
adc
jns
adc
fisub
bound
sub
imul
daa
adc
dec
jne
dec
or
jmp
sub
or
cmp
mov
jmp
cdq
clc
inc
push
xchg
pusha
inc
add
das
adc
or
outs
jne
or
daa
sub
sbb
mov
ds
mov
add
inc
outs
cmp
jl
and
pop
js
or
popa
mov
shl
popa
adc
or
or
retf
mov
or
retf
mov
aam
fs
mov
in
push
adc
sub
sub
push
and
cmps
jno
push
push
dec
mov
shl
dec
inc
and
aaa
jo
addr16
jae
xor
les
rol
or
and
imul
jge
cs
pop
or
xlat
cwde
test
mov
das
dec
pop
push
pushf
inc
shr
push
cwde
pusha
or
mov
cmp
pop
out
mov
repz
adc
iret
repz
sub
mov
sahf
mov
ja
jbe
lock
mov
mov
out
fstp
loopne
outs
push
pop
jge
jle
es
out
or
or
push
out
(bad)
push
leave
or
add
sub
dec
add
sub
or
add
cmps
mov
jae
sub
sub
mov
inc
gs
pop
fld
cmp
mov
in
push
adc
sub
cmp
inc
inc
out
(bad)
cli
jp
add
loop
stc
inc
imul
js
sub
dec
pop
les
mov
or
push
add
fcomp
jne
repnz
mov
dec
and
aad
add
add
ds
mov
xor
sbb
bswap
dec
outs
daa
jo
inc
data16
loopne
fstp
outs
in
pop
shr
xchg
and
fidiv
sbb
push
fs
xor
lea
mov
aad
nop
sub
scas
jmp
fs
mov
adc
fmul
(bad)
out
inc
stc
cmp
pop
cli
sbb
data16
lea
adc
pop
pmulhuw
(bad)
seta
jnp
xor
inc
pop
push
shufps
pop
hlt
nop
pop
pop
sbb
pop
dec
loope
xchg
mov
(bad)
pop
dec
push
add
(bad)
rcl
adc
mov
fistp
cwde
dec
dec
mov
inc
sbb
dec
daa
test
je
mov
jl
mov
loopne
repz
call
push
jnp
aam
ins
outs
xor
call
ins
add
and
ja
pop
mov
fs
cmc
xor
add
add
push
mov
adc
push
addr16
or
xchg
jecxz
add
push
add
xlat
fwait
clc
inc
bound
push
or
xchg
dec
sbb
add
or
and
adc
test
push
inc
enter
sub
popa
ja
and
mov
das
int
inc
stos
test
adc
cmp
in
mov
in
inc
inc
sbb
pop
les
shr
add
ins
dec
sub
inc
or
cmps
int3
pminub
add
or
shr
movs
imul
pop
jno
inc
mov
inc
fwait
out
(bad)
inc
pop
and
add
jmp
or
stos
retf
cmc
sbb
fs
jne
ret
fs
fs
sbb
addr16
mov
cld
fs
push
pusha
inc
mov
fs
shl
add
or
mov
or
sti
jbe
popa
push
ja
pop
adc
adc
add
popa
mov
mov
mov
mov
bound
adc
add
ins
mov
mov
dec
nop
test
adc
add
test
or
adc
cli
ud0
adc
mov
movs
pop
(bad)
cmp
js
and
or
nop
arpl
pusha
inc
sub
add
mov
mov
mov
jmp
push
loopne
push
and
inc
inc
sub
inc
push
into
jae
dec
imul
or
mov
adc
dec
fisttp
outs
inc
sub
jo
and
mov
dec
inc
adc
jne
xchg
loop
arpl
add
xor
sti
(bad)
call
inc
pop
cmc
pop
imul
or
mov
ror
push
and
cmp
xor
cs
enter
xlat
aam
push
mov
frstor
adc
bound
push
aaa
ds
mov
push
push
mov
out
fstp
push
ss
push
push
sub
repz
call
sub
adc
repz
loopne
push
jg
adc
push
or
ja
push
aaa
push
add
hlt
xor
xor
xor
pop
jmp
fwait
and
add
stos
add
sub
add
pushf
sbb
sbb
dec
xor
test
pop
or
fstp
daa
cmp
shl
sub
repz
add
inc
dec
cmp
js
scas
adc
lahf
(bad)
psubsb
adc
cld
sub
and
and
mov
dec
push
lods
xchg
ret
in
fs
pop
add
arpl
pop
push
arpl
adc
or
js
add
add
and
mov
bound
ja
repnz
pop
pusha
pop
aam
dec
popa
ins
mov
push
mov
pop
cmp
mov
and
add
jb
enter
or
cs
jp
enter
mov
enter
dec
jno
int3
add
rol
xor
or
rcl
add
dec
push
jne
add
dec
or
inc
test
lds
mov
cmps
in
add
rcl
ficom
das
adc
or
push
add
cmc
int
aas
or
push
mov
mov
in
lods
or
fist
or
sub
stos
push
pop
ins
aas
pop
cmp
inc
or
daa
mov
rol
es
mov
xchg
or
mov
das
mov
adc
es
push
lock
popa
pop
mov
xchg
das
or
push
es
xchg
pop
das
adc
or
pop
cwde
pop
das
and
and
inc
fisttp
adc
jno
or
pop
les
pop
imul
loop
mov
inc
pushf
inc
pop
shr
xor
jmp
cdq
mov
sub
xor
or
stos
fwait
add
sub
cmc
int
dec
and
pop
fbld
push
sti
lock
xor
add
xchg
pop
jae
mov
arpl
arpl
push
add
push
in
push
in
das
imul
and
push
rcr
bound
cmp
sbb
ins
push
cwde
pop
sbb
bound
push
pop
ror
pop
xor
jecxz
adc
add
int
imul
jne
mov
fsub
push
fs
xor
adc
or
xor
add
adc
mov
push
pop
lahf
dec
mov
inc
add
scas
scas
adc
shl
inc
std
imul
jne
cmps
sbb
daa
mov
in
sbb
es
das
pop
push
or
mov
inc
push
js
inc
inc
lea
imul
mov
and
retf
or
or
shl
jne
aaa
(bad)
pop
and
sbb
fldenv
xchg
pop
inc
xchg
add
ins
mov
lods
inc
paddusw
(bad)
mov
fcomp
xchg
add
adc
adc
sbb
inc
adc
js
je
pop
ja
imul
lar
push
ins
shr
push
and
aas
inc
push
push
or
and
inc
test
je
sbb
dec
add
dec
or
and
pop
add
inc
adc
pop
ret
sbb
dec
pushf
or
fdivr
jno
je
(bad)
outs
loopne
out
das
lea
adc
push
inc
mov
push
mov
je
push
cld
mov
xchg
shr
imul
mov
cmp
or
ins
shl
(bad)
test
push
push
inc
ja
add
shl
outs
aad
push
es
push
mov
outs
mov
push
test
mov
outs
mov
add
pop
adc
push
mov
outs
cmps
adc
in
ss
or
and
test
sbb
pushf
loop
outs
cmp
sub
xchg
pop
lds
fbstp
aam
sbb
push
mov
xchg
sbb
outs
inc
pop
add
outs
out
fld
jns
jo
push
jno
sub
loope
add
inc
call
jo
and
fistp
jns
jno
shl
enter
pop
sbb
loope
jge
jo
in
ret
fucomi
test
jb
in
das
add
cmp
cmp
xchg
xlat
adc
test
sbb
adc
dec
push
ret
fst
mov
push
pop
xchg
aas
pop
jge
imul
jno
out
xchg
inc
cwde
pushf
add
das
and
add
add
jl
push
(bad)
call
pop
add
aaa
retf
ret
imul
mov
pushf
mov
adc
call
add
inc
rcl
add
pop
mov
(bad)
push
mov
lods
nop
add
add
in
cmp
lods
(bad)
into
push
(bad)
clc
test
and
js
push
(bad)
sbb
adc
or
or
push
push
push
sbb
xchg
(bad)
xchg
add
sub
or
js
push
sub
loope
sti
xlat
std
push
sbb
xchg
inc
mov
or
sbb
lea
jmp
int3
popf
inc
inc
mov
daa
push
out
mov
add
push
pop
test
add
call
popa
pop
adc
arpl
and
movs
adc
add
or
ins
retf
mov
cmp
jge
inc
add
or
stc
mov
ret
in
sub
xchg
cmp
(bad)
add
adc
add
pop
mov
loope
(bad)
push
int3
clc
leave
lahf
xor
dec
cld
sub
mov
mov
inc
retf
mov
add
push
loopne
xchg
shl
sbb
lea
pop
fs
sbb
push
enter
sbb
loopne
jne
lock
mov
xor
pop
sub
pop
xchg
and
ss
or
and
add
lock
dec
and
nop
adc
mov
xor
add
inc
fimul
retf
(bad)
cmps
add
cmp
push
adc
ret
add
or
and
lds
fdivr
xor
dec
push
mov
mov
lock
inc
ss
je
pop
iret
movs
out
push
das
xchg
lea
dec
jae
or
dec
cld
xchg
mov
mov
iret
aaa
cwde
mov
stc
ret
pop
or
jne
loopne
mov
pop
sbb
sti
xor
sti
lods
ret
sbb
loope
nop
mov
inc
sti
hlt
and
lods
cmp
cmp
pop
out
loopne
xchg
das
inc
(bad)
cmp
push
pop
adc
ja
jp
inc
inc
xchg
sbb
mov
ss
dec
dec
jmp
enter
(bad)
fidivr
fimul
aaa
add
xor
test
dec
stc
test
inc
call
push
je
add
mov
ja
cli
sub
dec
mov
inc
fadd
push
sub
int3
icebp
test
or
test
inc
mov
fdiv
cmps
inc
push
add
add
push
scas
inc
or
push
push
jne
sbb
pop
xchg
hlt
(bad)
jmp
xlat
xor
popa
inc
cmp
ss
cli
add
in
les
dec
jae
and
cmp
repz
push
add
ret
sub
inc
add
jmp
add
sbb
popf
aad
adc
outs
mov
jmp
(bad)
cwde
sbb
popa
es
mov
xchg
xor
(bad)
js
sahf
mov
dec
inc
dec
dec
(bad)
fnop
(bad)
jno
inc
add
inc
mov
(bad)
cmp
push
fwait
das
test
xor
test
add
inc
jmp
push
cmp
in
rol
cld
fisubr
push
out
cmp
or
ins
(bad)
loop
pop
mov
inc
out
es
or
cld
xchg
xor
push
xchg
push
or
add
aad
sbb
test
pop
ror
aam
inc
jnp
fidiv
pop
scas
das
out
jp
rcl
ror
out
jle
mov
xlat
stc
jle
or
hlt
add
adc
add
sub
cwde
jle
push
js
sbb
push
sbb
mov
push
sbb
movq
jnp
push
mov
mov
mov
jb
(bad)
cmps
xchg
shl
(bad)
out
jge
scas
es
das
mov
xchg
clc
dec
sub
scas
push
imul
popa
test
imul
lahf
daa
jnp
popa
ins
inc
xchg
push
popa
dec
test
dec
push
pushf
cmps
or
shr
xchg
add
lock
adc
pop
inc
jno
popa
mov
adc
pop
mov
ins
push
sbb
cdq
push
jb
mov
mov
push
push
or
mov
in
daa
or
push
sub
daa
xchg
push
dec
int
adc
or
test
test
bound
sahf
jmp
push
jg
retf
pop
push
outs
mov
fldcw
xor
bound
lock
js
jle
jle
xchg
sub
mov
daa
add
test
jbe
add
pop
sbb
lea
or
sbb
loope
inc
or
out
gs
cmp
adc
outs
dec
sbb
add
dec
and
test
imul
jecxz
or
inc
push
int
jmp
inc
inc
pop
mov
hlt
jmp
dec
clc
shl
shl
pop
lods
pop
adc
int3
jg
adc
dec
clc
cmp
sbb
ja
or
hlt
mov
or
inc
aas
pop
sub
xchg
les
and
fadd
add
pop
inc
sbb
test
push
mov
fsin
cmp
cmps
add
sbb
jae
or
sub
lock
mov
out
sub
jg
cmp
add
cmp
or
loope
inc
cmp
jnp
jl
daa
xor
movs
inc
jmp
sbb
add
ret
test
add
fistp
cld
movzx
mov
scas
retf
imul
inc
rcl
mov
call
and
mov
inc
cmc
xor
loopne
jno
mov
sub
cmp
xor
jo
xchg
dec
js
and
adc
pop
mov
dec
call
push
push
dec
jns
jmp
push
xor
and
(bad)
mov
sub
inc
adc
cmps
ret
mov
inc
add
iret
and
dec
imul
xchg
or
js
bound
mov
inc
cmps
js
stos
jmp
pop
sub
add
dec
pop
sub
mov
aaa
daa
stos
add
fadd
add
add
adc
and
das
inc
or
push
add
jle
adc
imul
leave
add
jne
or
add
sbb
dec
retf
push
xchg
cmp
jecxz
sub
mov
jle
cdq
pushf
popa
mov
call
into
int
push
dec
call
enter
cld
xor
jnp
cmp
pop
sub
push
loop
mov
add
into
adc
and
fisub
push
cmps
push
adc
test
ret
jb
mov
push
push
inc
fcom
dec
dec
add
cld
and
lds
sar
pop
jmp
adc
cdq
xor
sub
test
sbb
cvtdq2ps
mov
mov
lods
sub
adc
jge
jnp
lock
scas
inc
fld
add
or
jns
sub
push
pop
movs
iret
outs
adc
enter
mov
xor
push
cmp
jecxz
add
jge
dec
ret
aam
test
jne
add
add
adc
aad
lock
mov
mov
jae
inc
dec
jnp
imul
add
add
(bad)
inc
sub
push
add
in
push
jecxz
mov
data16
inc
dec
mov
rcl
xor
push
ror
sub
mov
aaa
lods
or
sbb
imul
or
shl
or
aaa
jb
mov
ret
ret
sbb
xchg
mov
test
aam
ret
in
sub
aam
mov
sti
mov
and
je
and
sbb
push
inc
mov
shl
cmp
rol
adc
mov
fadd
les
xchg
les
sahf
and
dec
jmp
xchg
jbe
cwde
out
jbe
ret
adc
or
mov
sub
ss
inc
mov
out
dec
pusha
add
out
add
mov
fcomp
inc
add
bound
mov
clc
mov
pop
lods
xor
xor
(bad)
dec
retf
sbb
pop
hlt
rol
mov
push
loop
add
sbb
jae
jmp
push
adc
sbb
rol
retf
pop
jg
hlt
adc
mov
aam
push
call
adc
push
push
pop
pop
and
and
sbb
imul
outs
in
adc
leave
imul
rcl
dec
add
xchg
pushf
mov
xchg
mov
shl
imul
jg
or
add
jp
push
div
xchg
pop
cmp
repnz
xchg
xchg
jbe
cwde
mov
mov
add
and
inc
add
add
ret
shl
mov
or
rcl
addr16
add
aam
adc
push
mov
and
rcr
call
pop
adc
je
pop
movq
pushf
rol
ds
movs
div
fsubr
or
sub
push
jo
push
push
int3
push
or
inc
js
add
or
mov
jb
sub
push
jne
sbb
adc
jmp
pop
aaa
outs
pop
mov
in
push
loopne
in
fwait
leave
add
sbb
fistp
or
ins
js
ret
sbb
popf
(bad)
mov
inc
outs
xchg
sbb
jae
dec
mov
je
dec
push
add
and
add
inc
jns
enter
outs
cmp
sti
add
dec
mov
psrad
sub
or
inc
jns
inc
xor
push
dec
or
sbb
xchg
sbb
pop
test
shl
mov
ficom
mov
jno
and
sbb
mov
lock
adc
adc
nop
push
mov
xor
test
es
jmp
or
fcomp
mov
push
fdivr
mov
in
push
out
dec
adc
and
xor
inc
sbb
ins
fdiv
push
outs
and
ins
lock
and
inc
cmp
adc
xor
jp
leave
sar
cmc
xor
or
xor
or
bound
pop
loop
ja
cmp
ins
cmp
mov
lgs
inc
xor
cdq
dec
xor
arpl
cmp
stos
(bad)
iret
xchg
lea
ficomp
or
pop
pop
and
xlat
pusha
mov
mov
dec
jno
mov
mov
mov
aaa
inc
pop
xchg
mov
lods
mov
int3
mov
clc
test
dec
loopne
outs
es
(bad)
hlt
adc
addr16
fs
int
mov
push
movs
cmps
mov
push
sub
addr16
daa
xlat
je
or
stc
or
(bad)
je
dec
sti
or
std
xor
xor
ja
imul
push
add
mov
imul
xor
sbb
mov
xor
gs
enter
inc
cmp
ss
add
inc
jno
dec
sbb
dec
pop
ficom
movs
jno
push
jno
pop
fnsave
pop
in
push
cmp
popf
xor
stos
aad
movs
lahf
sub
imul
fs
nop
hlt
nop
sbb
inc
mov
bound
inc
pop
leave
test
xchg
add
das
push
movs
pop
sub
das
stos
xchg
push
aam
dec
jns
jge
jno
push
fcom
enter
mov
or
aas
mov
in
mov
das
mov
aas
je
push
stos
jb
ret
push
js
xchg
sbb
sub
andps
in
stos
in
call
pop
pop
mov
fcom
push
js
pop
hlt
pop
add
fisttp
mov
xchg
in
sbb
pop
and
lock
hlt
xchg
push
shl
mov
xchg
pop
test
xchg
pop
cwde
das
cmps
xchg
enter
pop
loopne
lods
xchg
ret
das
inc
push
xor
cld
xchg
ret
mov
test
nop
xchg
sbb
sahf
loope
push
mov
push
jl
movs
adc
xchg
mov
mov
mov
adc
sbb
or
push
ja
or
xor
dec
mov
test
xor
xor
adc
fmul
pop
imul
inc
jb
pusha
and
fs
push
cmps
or
jo
inc
mov
pop
aas
loope
lahf
push
in
xchg
and
cwde
outs
pop
cwde
mov
cwde
out
cwde
fist
push
jb
mov
mov
push
sbb
adc
dec
sbb
cs
jno
jnp
mov
mov
sub
pop
sbb
sbb
xor
sbb
(bad)
shl
sti
es
call
mov
dec
mov
mov
aam
sub
movs
stos
aas
dec
sub
xor
xchg
xor
mov
cmp
fwait
cmp
enter
fwait
cdq
fwait
or
push
cmp
cmp
xor
jo
and
nop
mov
jmp
jno
sub
aam
xor
add
cmps
mov
sbb
xchg
pop
xor
pop
mov
inc
jo
rol
jo
(bad)
test
test
jne
adc
call
push
inc
mov
mov
push
mov
inc
push
push
mov
push
loopne
add
(bad)
mov
loopne
inc
ss
add
fcmovb
add
add
jne
push
or
mov
in
dec
getsec
add
nop
mov
aas
dec
sbb
test
mov
and
mov
push
mov
fcom
mov
cli
or
rcl
loop
popw
sbb
sub
mov
cdq
or
jp
and
add
push
ret
cmp
xor
jge
fwait
pop
add
and
loop
adc
inc
pusha
or
push
adc
add
add
icebp
test
push
mov
mov
fiadd
loope
adc
inc
test
xchg
jne
and
add
outs
rol
unpcklps
cld
add
add
adc
mov
xor
pop
jp
sar
adc
or
sbb
pop
and
sub
cmp
(bad)
sub
cmp
fs
sub
xor
nop
xchg
sub
adc
addr16
or
pop
or
mov
loope
sbb
sbb
enter
sub
icebp
add
mov
je
cmp
cwde
test
cmp
enter
mov
mov
xor
ins
out
ja
dec
mov
loopne
cmps
add
mov
mov
idiv
mov
jnp
mov
in
fisub
mov
cmp
and
daa
fs
fidiv
and
xor
ret
sti
cmp
scas
fistp
(bad)
pop
dec
mov
xor
and
stos
inc
pusha
sbb
out
movs
xor
rcl
adc
xchg
inc
sbb
jno
xchg
dec
test
(bad)
xor
cmp
xchg
dec
cs
inc
cmc
shl
lahf
mov
pop
and
xor
adc
sub
push
adc
adc
fcmovu
and
ss
or
sub
sahf
mov
cmps
nop
sub
add
fs
sbb
xchg
dec
cs
cs
mov
xchg
xor
mov
push
repnz
enter
add
add
and
sub
enter
and
loopne
and
sub
rol
add
daa
push
and
(bad)
xlat
pop
dec
imul
sub
add
push
pop
mov
aas
mov
add
xchg
mov
sar
and
jl
add
pop
xchg
nop
lock
popa
js
adc
add
jnp
cmp
dec
add
dec
push
sbb
inc
in
(bad)
xchg
jge
vmovsd
sar
ja
mov
hlt
ret
lock
jnp
pushw
mov
jnp
hlt
inc
mov
adc
hlt
fwait
dec
call
clc
outs
mov
mov
mov
loop
aam
or
ds
in
jge
pop
jno
push
inc
or
sub
push
mov
movs
dec
inc
cmp
in
mov
loope
andnps
mov
cmp
and
and
dec
dec
mov
and
push
mov
stos
and
and
stos
stos
stos
stos
sub
and
stos
stos
stos
push
pop
add
sub
cmps
mov
mov
mov
add
mov
sub
pop
sub
sub
fnstcw
loope
and
pop
sub
ins
stc
scas
add
sbb
and
add
and
std
mov
add
loopne
add
mov
add
ss
cmovb
in
sbb
sbb
sbb
xor
sbb
and
or
and
imul
dec
repnz
or
xchg
inc
cmp
sub
pop
or
and
sub
dec
and
sub
dec
and
mov
add
and
or
and
sbb
sub
jno
xor
mov
ja
(bad)
call
xchg
sub
jno
dec
jecxz
das
cmp
in
dec
sbb
push
or
pop
arpl
cmp
neg
adc
fld
mov
data16
dec
adc
add
or
ss
sub
dec
mov
imul
mov
sbb
enter
add
xor
test
xchg
and
mov
je
lea
or
add
fadd
add
mov
ins
adc
add
add
test
or
add
cmp
xchg
pop
inc
push
mov
ins
lea
mov
clc
jne
add
sub
sub
or
pop
clc
stos
das
xchg
or
and
adc
adc
push
and
push
jb
push
jb
push
push
adc
push
push
push
and
enter
cmp
or
push
popf
dec
les
daa
es
test
jns
nop
mov
adc
mov
sub
test
cmps
lea
cmp
sbb
inc
add
sbb
loope
and
aaa
in
imul
add
and
je
div
neg
mov
imul
loopne
call
(bad)
cmps
data16
mov
sbb
imul
push
jo
add
shl
add
xchg
and
sbb
pop
retf
xchg
ins
sub
outs
add
call
add
add
dec
fcmovnbe
sbb
sar
mov
iret
mov
ret
sti
jns
dec
mov
dec
jo
fsubr
clc
das
test
mov
mov
inc
in
repz
(bad)
(bad)
mov
je
dec
mov
(bad)
ror
mov
mov
mov
or
nop
dec
adc
arpl
cwde
std
ins
lahf
adc
push
cmp
div
jecxz
ins
xchg
sub
push
imul
(bad)
cmps
dec
scas
jp
nop
inc
mov
inc
dec
inc
push
cmp
dec
push
push
push
cmp
nop
pop
pop
pusha
fs
push
add
js
xchg
lods
test
test
test
jb
and
and
sub
sbb
test
cli
loop
movs
push
sbb
pop
push
jno
push
cli
inc
mov
xchg
pop
push
arpl
scas
sbb
xchg
fst
ror
xor
push
(bad)
fbld
adc
mov
fcom
sbb
push
lahf
or
sbb
dec
jbe
cmps
adc
cmp
xchg
sbb
jno
test
pop
lahf
sbb
push
mov
cmp
sbb
adc
add
jnp
xchg
xor
(bad)
push
mov
dec
rcr
arpl
movs
fs
cmps
fs
retf
rol
test
add
sbb
enter
and
xor
inc
enter
adc
add
or
mov
pop
out
inc
fisttp
or
je
nop
pop
mov
test
push
sbb
js
pop
or
inc
add
inc
in
push
mov
or
adc
sahf
mov
jbe
sub
pop
and
mov
adc
pop
aaa
dec
inc
xor
sub
inc
fsubr
or
ret
adc
lock
js
daa
and
(bad)
inc
dec
sar
add
cmp
aad
int
inc
inc
cld
and
mov
sub
push
xor
mov
aam
push
mov
inc
cmp
or
adc
cmp
inc
mov
sub
sub
in
arpl
xor
jns
outs
or
in
inc
mov
test
(bad)
pop
push
cmp
push
pop
out
xchg
adc
or
ror
into
test
jne
fbstp
lea
sbb
add
sub
add
and
and
xchg
add
push
fstp
and
mov
fmul
fisttp
fmul
fisttp
aam
dec
cmps
outs
push
or
dec
add
cmp
andps
mov
retf
ss
rcr
push
sbb
add
movd
adc
pusha
mov
imul
das
mov
inc
cmp
ret
fisttp
dec
jae
gs
dec
push
inc
dec
cli
aas
or
inc
cmp
shl
sar
ins
and
sbb
adc
mov
loopne
and
cdq
lahf
ins
cld
xchg
pusha
add
xor
repz
cmps
lods
sar
xor
lock
sbb
dec
arpl
das
add
mov
pop
mov
xchg
mov
ret
mov
mov
test
adc
in
or
sub
adc
out
pop
pop
pop
inc
mov
and
sub
sbb
shr
mov
daa
(bad)
shl
cmp
push
mov
xchg
lock
or
pop
add
fadd
add
test
xchg
add
ret
cmp
or
inc
dec
icebp
add
nop
rol
ror
das
add
jns
dec
cmp
push
jno
inc
out
rcr
cmc
or
movs
test
dec
(bad)
out
or
dec
or
mov
dec
add
je
sti
or
push
add
pop
dec
pop
cdq
in
mov
ins
mov
out
or
or
sub
or
(bad)
in
add
into
cwde
sbb
loopne
add
arpl
loop
sbb
rcr
add
or
cmp
or
mov
jb
sbb
inc
add
pop
or
sub
int
and
or
jns
sub
sbb
dec
or
add
pop
push
cmp
xor
or
add
cwde
or
dec
sub
call
pop
mov
(bad)
outs
popa
and
lea
xor
push
pop
ja
xor
pusha
das
dec
add
jne
(bad)
nop
scas
add
and
adc
sub
mov
dec
cmp
(bad)
in
(bad)
and
inc
adc
sbb
js
test
jo
sbb
xchg
enter
adc
push
sti
mov
jmp
mov
inc
shr
call
sub
and
icebp
or
not
push
or
push
add
bound
outs
dec
adc
push
adc
call
imul
add
pop
clc
mov
inc
mov
pop
adc
(bad)
cmp
retf
push
adc
lods
daa
jl
movs
inc
ror
pop
pop
test
xchg
hlt
shl
add
add
adc
add
adc
jmp
(bad)
add
pop
mov
mov
add
add
jp
and
sahf
and
add
pusha
je
jne
rcl
hlt
(bad)
and
fimul
dec
jmp
adc
mov
sbb
mov
iret
xchg
inc
ret
xor
mov
lock
add
sub
cmp
add
adc
cmps
mov
add
jg
inc
loopne
fist
pusha
repz
mov
add
add
mov
add
xchg
retf
mov
add
push
push
and
fisttp
fldenv
lea
mov
jge
mov
add
fcomp
add
les
ins
mov
rcr
jg
out
lds
lock
das
ret
fwait
clc
add
sbb
xor
xlat
mov
cmp
inc
add
ret
js
or
shr
inc
prefetcht1
sub
or
or
lods
add
aaa
imul
push
dec
rol
mov
data16
fs
outs
(bad)
sbb
inc
add
jl
stos
mov
and
push
leave
rol
or
add
push
lock
add
push
adc
push
or
mov
pop
xchg
call
dec
add
add
lock
aas
jae
push
mov
jne
add
mov
cmp
xchg
jne
xor
stos
sub
adc
cld
mov
mov
je
cmp
mov
or
lea
push
push
dec
sahf
xor
lock
mov
add
data16
adc
mov
dec
leave
ret
sti
push
sbb
adc
cmp
jle
mov
pop
add
movs
movs
mov
cwde
add
or
test
push
aad
mov
mov
and
add
or
loope
mov
pop
mov
pop
retf
mov
jmp
rol
imul
std
shl
mov
lea
lods
vphadduwq
imul
mov
test
or
push
inc
jae
js
pop
scas
pusha
xchg
into
test
fst
(bad)
adc
adc
cld
ret
lods
inc
loopne
ffreep
inc
add
call
xlat
pop
inc
retf
xor
lahf
popf
xchg
xchg
out
xor
cdq
or
add
add
inc
push
pop
aaa
mov
mov
push
imul
aad
test
in
sahf
inc
sbb
pop
add
xchg
rcl
clc
jg
mov
ins
mov
push
or
ret
mov
lock
icebp
push
leave
or
(bad)
imul
mov
shr
inc
sbb
push
sti
inc
retf
dec
pop
and
cmp
ja
mov
sub
xlat
push
loop
into
cmp
out
mov
cmp
ror
out
ss
jmp
adc
pop
out
sub
jmp
dec
sub
je
aas
push
add
pop
cs
mov
jp
push
loopne
rcl
movs
adc
jb
ret
jmp
dec
retf
add
sub
stc
nop
and
mov
retf
push
adc
pushf
dec
clc
jge
enter
adc
pop
lods
outs
(bad)
in
retf
fnstenv
sbb
mov
pop
push
div
ret
jno
outs
push
xchg
lahf
out
mov
sti
or
(bad)
iret
repz
sub
push
mov
mov
adc
push
cld
mov
cmp
xchg
call
and
psubw
cmp
cmps
cmp
jmp
movs
push
aaa
lods
mov
(bad)
dec
adc
int
test
popa
cmp
push
pop
es
cmp
jmp
sub
iret
or
mov
adc
pop
imul
cs
mov
addr16
xor
jmp
or
pop
xor
cmps
out
enter
(bad)
pop
push
jl
outs
xchg
jne
sar
ret
add
sub
jae
and
fild
mov
imul
adc
mov
jmp
retf
jns
cwde
or
imul
inc
hlt
inc
adc
adc
sub
adc
and
addr16
or
add
out
sbb
add
jne
adc
mov
cmc
mov
lock
shl
loopne
dec
pop
push
fnstsw
or
pop
add
pop
jo
xor
aaa
repnz
inc
mov
adc
mov
inc
shl
ror
pop
rol
rcl
mov
push
shl
ficom
shl
push
adc
add
adc
lock
call
or
xchg
xor
and
xor
xor
pop
nop
jge
push
and
fdivr
je
cmp
sbb
cmp
sbb
loopne
in
jb
(bad)
lock
push
xor
adc
xlat
pop
jnp
mov
outs
and
sub
pop
in
adc
or
add
mov
pop
call
xlat
cwde
adc
test
lods
nop
adc
inc
mov
adc
push
sub
in
dec
adc
and
adc
inc
or
loopne
or
jo
imul
push
mov
add
fs
(bad)
fild
lea
mov
or
popa
add
cmps
push
push
dec
dec
jns
call
mov
(bad)
cmp
je
mov
or
inc
push
and
lock
pop
pop
fucomip
aaa
shl
ret
retf
(bad)
adc
rol
fs
jnp
test
pop
pop
pop
int3
push
add
pop
add
mov
inc
pop
jmp
lea
dec
add
adc
push
mov
and
adc
dec
add
dec
adc
mov
add
push
sbb
push
mov
aad
jmp
fild
ins
push
sub
push
jge
and
das
cmp
and
ja
jmp
inc
add
mov
dec
jmp
push
add
inc
xor
sbb
fadd
add
inc
loop
in
lea
ins
lea
mov
pop
xor
nop
or
ret
retf
dec
lahf
add
and
mov
outs
pusha
stos
mov
pop
out
dec
lock
or
jl
inc
add
jno
clc
cmps
imul
leave
dec
test
sbb
mov
add
les
dec
add
xchg
dec
test
rcr
cwde
fld
or
push
(bad)
mov
pop
mov
jg
cmp
(bad)
aaa
jmp
mov
les
xchg
adc
jmp
inc
jo
mov
or
jg
inc
jbe
mov
adc
adc
inc
lock
imul
pop
or
sub
popa
pop
pop
aaa
push
push
cmps
aaa
clc
push
xchg
loopne
inc
loopne
add
and
add
inc
clc
fwait
inc
jge
mov
mov
gs
js
(bad)
sub
aas
out
shr
pop
je
cld
repz
adc
mov
pop
adc
dec
(bad)
add
or
into
clc
gs
(bad)
cli
xor
inc
sub
mov
loop
or
ds
fidiv
ficomp
lds
add
(bad)
fidiv
mov
dec
jne
and
xor
mul
cmp
cdq
add
leave
and
cmp
into
jns
mov
jae
cli
adc
pop
mov
(bad)
jg
push
inc
sub
xchg
jmp
jl
mov
imul
mov
or
mov
xchg
retf
icebp
repnz
out
push
push
(bad)
arpl
shl
mov
shr
pop
fmul
sbb
je
retf
imul
outs
add
rcl
ret
push
cmp
test
and
aas
je
xchg
or
bnd
sar
dec
add
push
(bad)
add
(bad)
pop
add
rol
loop
pop
push
popa
xchg
retf
fld
mov
adc
cmp
rcl
jmp
mov
xor
or
jnp
bound
jo
xchg
cmp
inc
cld
lock
lds
xchg
loope
xchg
pushw
mov
pushf
cmp
inc
or
cmp
push
or
outs
(bad)
aam
mov
enter
leave
ins
ret
clc
dec
push
or
aad
dec
nop
pusha
pop
sbb
mov
sbb
mov
call
mov
xchg
add
popf
jl
add
mov
push
xchg
mov
sub
mov
xchg
and
add
test
sbb
(bad)
mov
out
and
lock
xchg
rcr
icebp
cmp
jl
push
xchg
mov
fs
and
pop
cmps
lds
inc
dec
cmp
mov
cmc
jne
jle
inc
(bad)
icebp
lds
xor
push
call
clc
jl
(bad)
call
not
idiv
mov
fwait
dec
xlat
test
jg
(bad)
in
arpl
fiadd
(bad)
sub
lock
out
jbe
call
adc
test
int3
dec
cmp
jne
inc
ret
lgs
jne
jmp
sbb
scas
push
mov
push
mov
ss
in
not
cli
add
fadd
in
je
pop
daa
lods
js
js
adc
jo
ds
dec
and
es
in
push
cld
or
scas
dec
or
xor
icebp
xor
movhps
mov
lods
add
pop
cmp
jne
or
push
add
dec
test
cmps
jne
shl
pop
pop
mov
popa
add
mov
sbb
push
fwait
pop
xlat
and
xchg
xor
addr16
mov
adc
pop
mov
xchg
add
pop
dec
or
add
jne
inc
or
inc
or
jmp
or
mov
cmp
fsubr
outs
iret
fisub
inc
das
gs
sbb
sbb
mov
mov
cmps
movs
push
jl
adc
(bad)
add
or
lahf
aas
adc
pop
adc
mov
js
mov
pusha
fiadd
or
sysret
repnz
push
cmp
cmp
mov
arpl
push
leave
mov
pop
add
sub
imul
fdiv
inc
adc
fisub
fsub
stc
shl
inc
sub
add
xor
add
(bad)
mov
jno
jge
adc
ins
jg
vprotw
pop
mov
xor
jne
loopne
lods
repnz
lea
push
addr16
int
dec
sbb
jl
inc
clc
std
sub
sub
clc
or
cmp
stos
jge
push
push
pop
cmp
inc
test
push
imul
mov
add
cmp
jbe
mov
mov
sbb
icebp
inc
add
pop
pop
pop
iret
push
push
cld
and
add
dec
test
adc
inc
xor
aaa
mov
push
add
clc
lock
scas
mul
and
sub
imul
dec
adc
and
push
jo
out
scas
pop
lods
inc
adc
jmp
adc
xor
xor
mov
add
push
inc
pop
inc
lods
inc
dec
sbb
repnz
lods
ror
xchg
test
add
enter
xor
jo
add
cmp
mov
add
popf
mov
jnp
xlat
xor
fmul
push
cwde
and
mov
and
je
cdq
pop
inc
and
or
rcl
mov
push
push
or
add
mov
(bad)
js
shl
rcl
popf
mov
inc
jg
and
or
mov
inc
push
mov
sbb
clc
push
jmp
mov
das
adc
shr
cmp
(bad)
xor
cmp
inc
cs
mov
cmp
push
jecxz
lods
jae
adc
and
or
sbb
mov
pop
push
mov
daa
dec
jge
and
lods
mov
(bad)
sub
pop
mov
adc
mov
mov
int3
pop
jl
mov
fcomi
xor
add
xor
inc
loopne
push
stc
mov
retf
test
cdq
mov
ins
xor
and
sub
cmp
jne
xor
rol
jecxz
add
loopne
(bad)
cmps
xor
fisubr
pop
test
add
sub
or
sar
or
mov
add
sub
add
stc
rcr
mov
add
push
cdq
push
push
push
pop
data16
in
push
sub
sbb
call
push
in
test
cmp
bsf
mov
fadd
or
fwait
inc
lds
jl
loop
cli
cmp
adc
cmp
push
add
(bad)
jmp
out
inc
cmp
and
mov
loopne
enter
loope
jl
gs
xchg
jmp
mov
ud1
mov
inc
push
lea
inc
or
fisub
add
add
inc
or
jnp
jmp
mov
pusha
xchg
test
mov
xor
add
jecxz
add
mov
xor
iret
cwde
push
xchg
loopne
adc
jg
sbb
mov
icebp
cmc
cmp
jg
bound
sbb
push
push
fsubr
inc
add
js
adc
loopne
pop
sbb
sbb
push
add
outs
sbb
push
loope
mov
mov
fld
out
loop
ss
jl
mov
out
xor
pop
out
jmp
loope
dec
or
or
adc
loope
test
jmp
mov
adc
loope
loop
pushf
or
sub
pop
cmp
cs
je
loope
and
loop
test
pop
and
push
mov
sub
pop
loopne
leave
call
das
movs
adc
mov
(bad)
jne
cmp
jbe
pushf
add
add
inc
adc
cmc
jns
mov
push
xchg
inc
dec
std
dec
add
push
cmps
mov
cmp
jbe
jo
std
xchg
pusha
int3
or
mov
inc
sbb
sbb
or
pop
js
mov
cmc
in
lods
or
sbb
mov
xor
stos
cld
inc
mov
add
inc
jecxz
cmp
repz
push
ins
push
mov
ret
lea
loope
in
ja
push
and
dec
mov
test
ds
adc
fcomi
push
je
rcl
xchg
in
add
repnz
xor
adc
or
add
adc
mov
popa
arpl
xor
mov
mov
or
adc
add
add
ret
aad
cmps
jge
or
mov
adc
adc
les
sbb
ins
cmp
frstor
sbb
dec
int
add
sbb
(bad)
add
xor
in
or
add
cld
mov
sbb
in
ret
mov
ja
addr16
mov
and
sub
and
cdq
test
sbb
jl
in
es
fisttp
cmp
loop
repnz
or
xchg
ror
loope
mov
repz
or
shr
add
mov
sub
mov
std
xchg
inc
inc
dec
inc
pop
adc
out
xchg
pop
xor
test
jne
loope
retf
adc
dec
and
dec
add
push
pop
cmp
enter
and
icebp
add
aam
call
lods
xchg
cwde
rol
ror
imul
mov
add
add
and
mov
das
mov
xchg
lea
add
or
out
fbld
cmp
mov
fsub
stos
or
add
mov
ror
sbb
adc
popf
(bad)
aam
fs
sub
add
les
retf
js
lock
add
mov
adc
cmp
and
lahf
xor
ror
pop
cmp
js
mov
fcomp
add
mov
fbstp
adc
fcom
mov
push
dec
jne
pop
add
in
push
ins
mov
jne
push
mov
add
xor
(bad)
pusha
add
lea
ja
jecxz
dec
inc
jl
and
jmp
add
dec
and
or
loopne
and
xor
mov
dec
cmps
(bad)
in
in
mov
test
je
mov
movs
jne
aaa
pop
and
cmp
add
push
js
xor
sbb
pop
pop
and
push
cdq
shl
sbb
pusha
sti
push
inc
pop
pop
jbe
jmp
or
xor
sub
les
add
xlat
and
cli
inc
fisub
mov
ror
inc
sub
out
or
cmp
stos
pusha
hlt
push
inc
push
clc
push
mov
cmp
pop
push
out
cs
iret
lock
ret
ins
mov
jle
jb
jl
cmp
adc
not
inc
stc
mov
and
test
cwde
adc
sbb
into
in
jle
cmp
jge
mov
or
add
sbb
out
les
jae
ss
mov
and
lock
or
fnstenv
test
mov
mov
add
in
or
outs
dec
(bad)
es
fmul
sub
aas
sub
inc
inc
in
(bad)
sbb
adc
mov
mov
nop
add
out
mov
add
xchg
and
shl
out
sbb
mov
mov
or
pusha
jne
add
in
mov
shr
add
test
clc
pusha
ins
add
inc
jecxz
rcl
mov
test
sub
pop
cmp
out
lods
test
inc
jns
add
sbb
jecxz
(bad)
in
add
add
rol
mov
(bad)
mov
add
xchg
and
sbb
jno
xchg
neg
adc
(bad)
push
pop
mov
mov
add
or
push
rcr
adc
xor
add
lock
add
cmp
mov
inc
mov
jmp
cmp
cmp
out
and
sti
cwde
fisttp
ins
inc
in
retf
aaa
mov
mov
add
sahf
xchg
sub
mov
out
lahf
pop
test
mov
push
cmp
pop
jae
xlat
pop
mov
out
mov
popf
in
sahf
or
sbb
das
inc
out
scas
and
xor
xchg
bound
pop
aaa
push
mov
bswap
out
add
add
clc
or
outs
dec
out
inc
imul
mov
sbb
daa
jns
gs
je
ret
lds
mov
wbinvd
ja
loop
imul
jmp
into
lock
lock
push
dec
cmps
pop
inc
iret
sbb
enter
outs
mov
lds
dec
fsub
movs
jmp
xchg
fadd
add
mov
pop
xchg
pop
mov
mov
pop
push
(bad)
sbb
push
mov
call
stc
mov
and
and
add
pop
fadd
cmp
jecxz
and
adc
popa
or
mov
xor
stos
jecxz
adc
aaa
inc
mov
adc
aaa
addr16
js
cs
repnz
aaa
sub
mov
cmp
mov
sbb
aas
je
sub
mov
xor
shl
push
jno
pop
jb
retf
mov
imul
xchg
adc
adc
jno
mov
out
sub
cmp
mov
sub
mov
push
ja
and
sub
sbb
maskmovq
neg
mov
cmps
cli
add
cmps
add
xchg
sar
lock
test
dec
adc
xor
clc
dec
add
stc
jne
dec
sbb
or
or
jmp
and
push
outs
js
push
hlt
cmp
clc
shr
and
mov
sbb
mov
add
(bad)
add
cmc
(bad)
sbb
test
daa
(bad)
fmul
les
out
repz
xchg
std
and
(bad)
(bad)
fisub
add
ins
cld
cmp
jbe
dec
xor
sbb
xchg
or
out
mov
mov
adc
add
jo
cwde
cmc
xor
aas
xor
loopne
jge
add
std
inc
sub
fdivr
repz
mov
dec
mov
pop
mov
test
add
cmp
add
and
fldenv
sar
or
sub
hlt
jae
add
jo
mov
sbb
sbb
push
jns
lahf
pop
mov
hlt
adc
sbb
sbb
adc
lock
jmp
xor
(bad)
sbb
jne
daa
lds
inc
xor
je
inc
hlt
pop
inc
or
mov
push
(bad)
loope
xchg
or
sbb
add
or
add
cmps
loope
ja
nop
arpl
adc
or
sbb
mov
add
in
inc
dec
pop
add
daa
in
dec
aaa
mov
sub
add
jne
cld
dec
iret
mov
fsubr
popf
je
in
pop
pusha
daa
dec
fdiv
clc
lods
out
xor
into
and
mov
sub
jl
fcmovnu
outs
mov
or
adc
or
lock
add
push
ffree
sub
(bad)
ins
aas
fcom
mov
ss
loop
jnp
mov
pusha
nop
frstor
cmp
ds
mov
cmp
sbb
rcr
sub
jmp
add
js
rol
test
xor
or
dec
hlt
(bad)
push
xor
add
jmp
cmp
push
mov
repnz
clc
or
idiv
mov
pop
pushf
(bad)
in
cs
repz
(bad)
lock
xchg
iret
popf
push
add
mov
xchg
imul
mov
cmp
mov
ret
std
cmp
push
sub
ror
mov
lea
xor
faddp
mov
sbb
add
push
test
sbb
ret
push
mov
xchg
mov
mov
lock
rol
mov
nop
add
xor
mov
adc
add
scas
dec
ds
or
or
sahf
push
pop
cmp
jge
test
jnp
les
or
movzx
sbb
cmp
push
mov
ins
add
sbb
lea
sub
das
lock
inc
push
fwait
cmp
clc
push
out
pop
out
add
inc
sti
push
test
mov
(bad)
cmp
jg
cmp
or
clc
js
add
sbb
cmp
xor
jg
retf
pop
loope
fs
add
sub
xlat
mov
cmps
movs
sub
div
in
and
inc
aaa
enter
mov
scas
pusha
jge
or
std
mov
jo
pop
fwait
dec
inc
rol
mov
loope
push
push
sub
jmp
xor
xchg
cmp
fidivr
pushf
rcl
pushf
push
push
sbb
hlt
test
clc
inc
fsub
sub
or
(bad)
fucomi
xor
cli
lea
rol
mov
fcom
test
cld
or
adc
into
push
mov
bound
frstor
mov
push
add
movs
cwde
sti
mov
fdivr
imul
das
jecxz
sub
out
sub
push
jl
fbld
sti
xor
add
pop
or
or
in
mov
cmp
pop
add
mov
retf
dec
sub
je
and
mov
add
std
imul
mov
add
add
les
dec
mov
xchg
sub
sti
or
in
sub
sbb
dec
pop
sar
lock
mov
data16
ins
or
push
add
ret
mov
add
scas
es
mov
mov
mov
add
pushf
sub
loopne
mov
mov
cmp
fstp
adc
or
ins
mov
mov
mov
cmp
jbe
std
shl
and
lds
clc
inc
mov
sub
inc
vpmaxub
or
push
mov
and
mov
fisttp
je
cmp
jne
xor
and
pusha
stos
sub
std
outs
jne
clc
sar
add
(bad)
jmp
jmp
mov
(bad)
lahf
js
pop
add
sbb
add
aaa
mov
arpl
add
adc
xchg
(bad)
xlat
add
movs
loope
or
push
jecxz
and
sub
cmp
cwde
jne
xchg
sbb
add
push
inc
xor
adc
lahf
or
cmps
movs
inc
loopne
adc
pop
mov
in
sub
or
xor
fcom
sbb
jle
mov
frstor
test
mov
aam
dec
loopne
or
xchg
scas
and
or
push
adc
imul
fadd
push
(bad)
and
and
dec
shl
dec
fwait
inc
sbb
daa
ret
rcl
lea
fdiv
arpl
push
sti
add
pop
pop
sbb
push
popa
div
loopne
lods
retf
mov
jmp
inc
outs
arpl
or
or
dec
xlat
dec
mov
mov
or
je
ins
sti
add
add
adc
push
dec
xchg
ss
sbb
or
pop
ror
inc
mov
and
retf
or
xchg
push
sub
add
or
dec
push
inc
jge
add
sub
retf
sub
cmp
jo
xor
pop
lock
(bad)
xchg
loop
test
pusha
and
or
xor
inc
xchg
xor
add
pop
movzx
aam
rcr
sub
ficomp
shr
imul
or
test
cmp
jne
pop
lfs
dec
add
ja
inc
cmp
pop
or
rcl
repnz
add
(bad)
dec
push
cmp
adc
fisubr
js
push
mov
mov
or
je
add
jmp
add
imul
cmp
mov
inc
pop
(bad)
sbb
sbb
das
sub
sbb
retf
add
add
loopne
fisttp
imul
add
in
mov
lea
add
in
and
add
ins
or
dec
adc
or
add
mov
ficom
mov
and
inc
sub
fiadd
add
inc
xlat
clc
jge
js
inc
sbb
icebp
xchg
add
add
jnp
jno
hlt
aaa
mov
mov
mov
fsub
das
dec
inc
dec
sti
ficom
rol
inc
adc
(bad)
pop
adc
or
xor
xor
mov
push
fld
jle
(bad)
cld
push
jmp
sbb
push
daa
lods
sub
outs
popa
push
addps
(bad)
jmp
jge
sub
pop
mov
shl
out
xlat
sbb
inc
xchg
sbb
pop
cmp
sbb
inc
out
push
or
pop
adc
adc
push
pop
mov
aaa
xchg
popa
xchg
les
sbb
inc
mov
ret
dec
mov
add
ins
add
ins
push
adc
fucomp
push
push
das
pop
push
adc
xor
mov
ret
sub
mov
mov
data16
(bad)
add
retf
push
mov
fs
push
ror
pop
and
cdq
xor
cmp
cmp
fadd
inc
jg
stos
jg
mov
jbe
or
mov
jle
mov
sbb
dec
xor
adc
dec
sbb
or
cmp
bnd
call
int3
inc
add
add
pop
ret
push
not
pop
jecxz
inc
cmp
cmp
lock
mov
das
sub
add
sub
add
inc
dec
scas
cmps
pusha
sar
push
jne
push
dec
xor
mov
mov
not
sub
cwde
test
mov
ja
outs
mov
enter
mov
sti
or
mov
lock
(bad)
jg
aam
ss
cmp
mov
fwait
js
jmp
fldenv
inc
pusha
mov
out
mov
jmp
js
dec
jge
inc
mov
bound
pop
rol
popf
fs
scas
dec
bound
scas
inc
daa
vpmacssdqh
adc
adc
adc
mov
xor
jecxz
test
fsubr
adc
mov
mov
lahf
out
add
stos
lea
int
dec
mov
dec
push
clc
inc
dec
dec
jl
fadd
push
or
push
repnz
inc
or
push
push
or
adc
xor
cmp
ins
lods
push
sub
inc
daa
addr16
inc
mov
and
or
or
pushf
fadd
push
pop
inc
or
add
std
or
or
(bad)
stos
cs
ins
mov
and
inc
(bad)
test
sub
popa
and
in
test
or
pop
es
sbb
dec
or
fsubp
push
add
jle
inc
mov
cld
adc
cmps
sbb
jo
or
arpl
xor
xchg
sbb
inc
add
pop
scas
add
dec
mov
sub
and
jne
mov
mov
sub
mov
adc
mov
add
adc
ror
cmc
mov
mov
les
and
jne
retf
jp
(bad)
adc
fcmovb
push
cld
adc
(bad)
lahf
and
jecxz
aad
test
or
or
add
push
mov
sub
clc
pushf
inc
xor
sub
rcl
loopne
bound
mov
(bad)
inc
and
xor
or
sub
inc
sub
in
sbb
add
sbb
sbb
sar
jge
mov
push
push
push
sbb
pop
jno
ins
push
sti
mov
xor
unpcklps
or
adc
dec
mov
out
xor
pop
pop
mov
sub
pop
mov
mov
inc
or
xor
int3
add
adc
scas
push
pusha
pop
push
je
push
xor
dec
and
sub
xor
jl
test
jge
inc
fidivr
je
cmp
jno
or
push
clc
pop
jmp
inc
cmp
imul
sub
adc
clc
xchg
(bad)
pusha
shl
sbb
jmp
js
cmp
retf
lock
lods
rol
add
add
ins
pop
mov
jo
cmp
adc
or
sub
add
nop
mov
add
mov
fild
call
mov
xor
pop
pop
sti
dec
and
mov
mov
xor
or
add
xchg
push
lods
rol
push
bound
fst
sbb
repz
test
mov
leave
xlat
or
ret
adc
ror
ret
cmp
push
sbb
pop
ret
aas
pop
stos
cdq
push
inc
sbb
loopne
enter
mov
mov
sbb
add
inc
sbb
sbb
sbb
sbb
vpcomq
xadd
shl
add
in
rol
push
js
dec
loopne
sub
mov
add
or
xchg
cmp
add
or
bound
mov
pop
or
inc
or
xor
mov
inc
adc
sub
xchg
push
imul
call
pop
add
add
xchg
xor
xchg
pop
lods
pop
lods
pop
jbe
or
cmp
(bad)
cmps
movs
pop
dec
inc
cmp
ret
inc
add
pop
cli
ins
inc
sub
push
sub
jmp
pmuludq
jge
(bad)
clc
cmp
int
sub
inc
pop
pop
cmp
outs
push
in
shr
cmp
dec
jmp
mov
lahf
mov
cld
out
adc
shl
ins
xchg
outs
adc
hlt
xor
sub
mov
cmp
push
pop
xor
push
jne
mov
xor
imul
push
or
add
mov
test
cmp
xor
movs
or
fcmovnb
inc
fiadd
mov
cmp
fadd
fld
xchg
fimul
popa
cmp
pop
push
(bad)
push
pop
pop
mov
sbb
stos
and
push
fdivr
mov
sti
callw
mov
mov
push
xor
push
push
and
sbb
push
mov
stc
push
add
cmp
mov
fs
xchg
and
mov
shl
loope
or
ror
jmp
add
fist
pop
shr
stos
(bad)
fsubp
pop
cmp
mov
mov
test
bound
jmp
enter
cmp
aas
xchg
js
mov
or
or
mov
shr
(bad)
out
rol
or
mov
dec
test
dec
retf
aam
sbb
es
(bad)
dec
aam
call
dec
in
adc
inc
loopne
xlat
add
sub
push
jns
mov
inc
pop
jp
cmp
xlat
mov
in
mov
in
ss
add
jae
jnp
push
sbb
int3
dec
sub
push
adc
pop
rol
dec
push
xchg
ret
aas
dec
pusha
sbb
data16
push
fstp
add
mov
lods
jg
loop
aas
iret
and
pop
fdiv
test
add
add
lea
cmp
push
ficom
xor
cmc
and
push
sub
xlat
adc
cwd
xor
ret
out
shr
and
cwde
jne
clc
xor
pop
inc
jmp
shl
pop
add
dec
shl
(bad)
cmp
add
adc
or
add
lahf
or
lock
mov
and
dec
int3
jmp
cmp
inc
mov
push
popa
jg
and
sti
ss
pop
(bad)
popa
and
xchg
je
test
pop
push
add
lock
hlt
imul
jno
mov
aam
scas
push
push
aam
jmp
hlt
hlt
and
add
mov
into
arpl
mov
inc
adc
push
push
jecxz
push
loop
daa
cmp
sar
mov
add
or
leave
cld
cld
dec
push
nop
dec
cld
cld
inc
or
dec
xor
xor
sub
cmp
jmp
jo
adc
xlat
out
cmp
or
add
int3
cmc
or
je
fcom
fsubr
cmp
adc
in
xor
sub
xchg
shr
add
dec
sub
push
test
das
imul
fadd
add
stos
in
sub
mov
jmp
test
push
cs
mov
mov
sub
int3
jo
cs
mov
enter
add
jl
or
js
sbb
push
dec
inc
das
push
fbstp
push
jp
push
jne
or
(bad)
adc
mov
cmp
pusha
sbb
ss
or
bound
sbb
mov
call
sahf
dec
int3
jne
dec
je
(bad)
imul
add
sar
jmp
fild
int3
mov
retf
in
jmp
or
or
cmps
mov
xor
or
adc
push
dec
xor
add
inc
push
popa
rol
neg
pop
(bad)
test
(bad)
out
rcr
mov
gs
push
rcl
sbb
mov
loop
pop
loope
ror
pop
or
sbb
icebp
pop
lds
fchs
push
lds
sbb
cmps
enter
inc
inc
sub
outs
xchg
xchg
jmp
pop
sbb
ins
in
add
hlt
sub
test
pop
jno
inc
lods
xor
pop
ins
(bad)
adc
out
es
and
adc
sbb
or
cmp
cmp
sub
push
jae
dec
jmp
outs
mov
dec
test
jmp
dec
push
sbb
retf
sbb
xchg
xor
adc
adc
sbb
xchg
and
push
ja
sbb
xor
test
pop
ret
and
inc
mov
mov
or
and
xor
push
cmc
ja
and
in
mov
mov
mov
xchg
clc
test
mov
cmp
jae
add
mov
or
cmp
cmp
jl
dec
add
cmp
jg
and
inc
or
add
jnp
push
(bad)
sub
add
push
jecxz
push
push
jle
push
into
test
enter
(bad)
or
add
sub
call
sub
rcl
push
outs
pop
or
nop
das
dec
sub
shr
test
test
(bad)
in
add
jg
rcr
into
xchg
adc
sub
sbb
add
iret
or
and
leave
iret
cli
sbb
push
out
inc
add
test
add
adc
mov
sbb
pop
movzx
dec
fwait
in
jge
push
clc
push
daa
push
jae
jnp
xor
inc
test
mov
xor
in
syscall
rcl
ret
and
inc
scas
adc
add
pop
inc
fsubr
outs
cmp
add
cmp
jge
and
fcomp
push
cmp
sbb
dec
dec
lock
xor
push
add
inc
add
test
rol
pop
icebp
jnp
mov
push
adc
adc
xchg
popa
xchg
and
mov
lea
daa
push
push
or
jne
js
add
sti
scas
sbb
adc
popa
ret
sbb
mov
sbb
inc
ja
jno
mov
push
push
addr16
add
or
pop
pop
fsub
mov
sbb
mov
or
jbe
test
sub
out
add
jno
sbb
fimul
add
out
xor
loopne
cli
sbb
sub
xchg
sbb
stc
inc
dec
and
aad
scas
push
das
jle
or
mov
sbb
jne
pop
or
aam
add
sub
clc
or
mov
pop
ret
lahf
xor
rcl
aam
ror
sub
sbb
fcom
mov
daa
jne
jne
int3
sub
mov
mov
sbb
sti
inc
je
in
mov
aad
mov
sbb
sbb
jae
push
iret
pop
cmp
test
and
adc
cmp
inc
and
and
mov
sub
rol
scas
pop
pop
loopne
sub
iret
cmp
lds
jb
add
and
jle
adc
sub
scas
and
xor
adc
jb
lock
and
or
push
add
sub
xor
addr16
xchg
mov
cmps
sahf
in
mov
in
fwait
aad
mov
dec
cmp
test
retf
les
or
and
pop
mov
and
fild
add
mov
mov
mov
imul
mov
and
lock
fild
sbb
and
jl
ins
pop
add
adc
rol
clc
in
or
sub
rol
sbb
aas
rol
sbb
push
and
test
fcomi
ret
pop
jne
cmp
push
test
addr16
mov
mov
in
push
call
fistp
es
ret
adc
fidiv
xlat
mov
in
clc
inc
dec
and
test
add
pushf
xor
or
jp
adc
and
and
outs
jle
cmp
ja
mov
inc
push
stos
ret
icebp
fcomp
mov
mov
add
movs
jmp
push
xor
mov
dec
retf
and
add
or
adc
test
add
pop
call
repz
xchg
add
arpl
aaa
shl
mov
xlat
outs
and
idiv
mov
mov
or
or
pop
rcl
jmp
jne
push
mov
push
jne
imul
and
inc
mov
nop
add
pop
add
clc
inc
sbb
hlt
push
pop
gs
int
pusha
mov
jmp
mov
nop
clc
dec
sub
adc
jle
mov
aaa
or
mov
adc
mov
sar
cld
mov
add
mov
dec
xor
or
and
xchg
(bad)
jo
jae
and
ror
test
dec
stos
loope
mov
lock
xchg
pop
xchg
mov
(bad)
clc
lahf
adc
or
xor
imul
xor
fs
xor
in
and
xor
enter
xchg
icebp
sbb
imul
sub
jnp
mov
cs
cld
fwait
sub
data16
cmp
rol
not
cmp
jne
add
sub
adc
mov
ret
jg
(bad)
dec
cmp
jne
dec
pop
add
or
pop
and
jecxz
mov
in
cs
inc
(bad)
test
(bad)
hlt
xchg
fiadd
dec
jne
stos
call
dec
ins
push
xchg
add
mov
stc
sub
push
or
pop
or
jge
loop
adc
and
dec
sbb
add
fidivr
and
mov
cmp
fld
cmc
int
scas
cmp
xor
rol
mov
jne
cld
pop
add
js
aam
mov
add
call
or
dec
xchg
push
cmp
mov
sub
jecxz
add
jecxz
test
(bad)
xlat
loop
sbb
js
sbb
test
adc
pop
les
sub
js
retf
(bad)
inc
add
repz
add
add
bnd
adc
in
mov
inc
add
and
or
popf
cld
mov
xor
and
je
dec
fimul
sub
or
in
lods
cwde
in
jne
or
pop
es
inc
stos
loopne
jge
je
push
mov
adc
ja
push
sbb
jnp
add
mov
cmp
sbb
daa
shr
push
fisttp
dec
loopne
and
arpl
jo
inc
adc
adc
adc
sbb
xchg
pop
loopne
mov
mov
and
ss
jne
inc
fild
cs
sbb
test
xor
daa
std
inc
cld
pop
or
out
repnz
shr
pop
add
sub
sub
and
add
arpl
shr
jle
fs
(bad)
int3
push
add
adc
xchg
mov
pop
and
mov
das
hlt
push
or
sub
(bad)
cmp
or
js
mov
sbb
mov
pop
sub
or
aam
bound
data16
push
and
adc
jl
xor
ins
loop
xor
fist
and
adc
test
sar
or
aas
add
outs
int
or
bound
adc
fcom
mov
daa
inc
sbb
mov
push
or
add
mov
and
shl
sub
sub
push
sub
jno
pushf
popa
std
cmp
dec
test
es
cmp
in
adc
jmp
lods
lahf
dec
cmp
jbe
and
out
inc
fist
sbb
mov
and
or
push
xchg
adc
ins
ins
fadd
xchg
test
shl
and
ins
arpl
and
mov
int3
in
pop
add
nop
add
push
lock
sbb
push
imul
fsubr
push
fcmovb
test
xchg
lods
adc
sub
(bad)
jnp
jge
dec
je
sub
je
or
das
adc
(bad)
add
or
jmp
adc
(bad)
dec
jno
mov
and
addr16
or
lahf
lock
jecxz
ret
xchg
push
jle
jnp
mov
dec
mov
outs
clc
data16
mov
addr16
in
cmp
sbb
push
hlt
stos
inc
dec
add
(bad)
jae
push
mov
test
or
sub
aam
pop
xchg
adc
shl
or
js
add
jmp
dec
(bad)
std
vpackssdw
or
push
cld
pop
jmp
xchg
movs
fst
adc
adc
rol
pop
inc
sub
js
mov
loopne
or
das
pop
or
dec
(bad)
test
push
mov
push
inc
push
jnp
xor
fdiv
and
push
jo
adc
je
in
je
cmp
js
ffreep
inc
push
sbb
inc
cs
call
imul
call
lods
jecxz
sub
add
fild
cmp
popa
add
clc
sub
dec
adc
out
jne
and
loopne
dec
mov
in
or
outs
loope
adc
dec
jle
pop
out
xchg
xor
(bad)
add
jmp
in
inc
inc
jmp
jae
popa
dec
loopne
mov
call
jmp
pop
sar
push
aaa
adc
jne
sbb
sbb
sub
cmp
das
adc
or
in
jmp
imul
mov
test
mov
mov
les
push
push
fsubr
xor
xor
mov
push
cmp
adc
ins
cmp
push
popf
and
out
sub
movs
pop
call
test
out
call
push
aaa
fild
push
sbb
push
push
push
or
adc
sub
aas
cmp
add
add
pop
int
add
mov
arpl
sbb
mov
pop
shl
xlat
ins
dec
aaa
dec
in
fdivr
pop
(bad)
popa
fadd
cmp
in
xor
test
inc
sub
popf
adc
or
inc
push
xor
inc
fidiv
daa
call
add
mov
and
xchg
or
mov
jb
sbb
and
or
es
(bad)
pop
pusha
das
pop
add
push
fnclex
inc
cmps
add
push
sbb
sub
sbb
sbb
sub
test
pop
pop
ret
in
dec
dec
leave
jb
ss
call
and
jge
retf
or
push
sub
jo
dec
cmp
mov
push
in
xor
or
push
adc
es
(bad)
lds
push
nop
icebp
inc
loope
pop
outs
xor
mov
mov
adc
fisubr
sbb
pop
cld
jnp
or
outs
icebp
call
xlat
add
cmp
and
pop
daa
iret
sub
sub
cmp
adc
jae
inc
cmps
rol
lods
scas
call
cmp
add
outs
sbb
sub
xor
add
push
cmp
xor
aam
sub
mov
push
mov
inc
hlt
mov
mov
add
add
call
add
mov
and
mov
inc
daa
add
jo
clc
add
les
and
pop
sbb
mov
aas
inc
clc
and
fimul
in
push
nop
(bad)
mov
or
fadd
mov
and
sbb
sub
cwde
adc
push
clc
not
jmp
sbb
ss
dec
mov
mov
xlat
adc
(bad)
sub
xor
xor
imul
xchg
cmp
lock
arpl
pop
mov
mov
lea
add
add
call
jge
retf
adc
dec
jg
jmp
test
jge
mov
inc
dec
movs
or
push
fisttp
adc
add
ins
add
adc
out
js
shr
jg
sub
pusha
unpcklps
jo
push
or
mov
push
push
jge
in
(bad)
and
inc
add
pop
ret
adc
add
pop
jae
rol
adc
out
xor
clc
mov
dec
rcr
xchg
call
mov
pushf
sbb
or
mov
das
push
jo
outs
and
push
out
jl
inc
mov
cmp
dec
adc
dec
cmp
out
add
dec
jne
sahf
add
inc
es
mov
sbb
or
and
sbb
fild
popf
add
ret
sbb
pop
or
or
or
pop
xor
cmp
cmp
das
jle
mov
ret
inc
or
mov
mov
mov
xor
sbb
call
inc
imul
data16
sub
add
sbb
xchg
push
mov
sub
xchg
sbb
inc
daa
push
inc
icebp
scas
mov
test
loope
mov
jg
(bad)
js
sbb
or
lock
add
ficomp
xor
push
sbb
xchg
xchg
jp
and
rcr
xchg
xor
and
jnp
xor
or
sbb
lock
pop
add
add
adc
sub
sbb
mov
adc
cmp
inc
test
adc
(bad)
std
setl
pop
ret
out
jbe
test
jle
daa
scas
mov
dec
pop
fs
jbe
adc
mov
mov
retf
jmp
mov
adc
sub
lock
push
add
arpl
mov
mov
pop
je
and
push
mov
sbb
add
mov
adc
mov
sbb
push
mov
into
cwde
rcr
and
dec
test
push
daa
cmp
adc
adc
stos
cmp
daa
mov
xor
fst
pop
(bad)
xor
(bad)
pop
loopne
mov
lods
add
sub
jb
cmp
sub
lock
ja
sbb
xor
adc
call
adc
shl
(bad)
enter
jge
pop
pushf
sub
out
aaa
mov
add
jge
add
imul
out
inc
add
daa
mov
sub
call
mov
push
arpl
cdq
ss
xor
cmp
sub
dec
sub
jl
pop
and
ds
mov
add
fmul
jne
jecxz
outs
adc
sti
sub
mov
stos
xor
add
cmp
(bad)
push
mov
jo
je
jbe
add
cmp
pop
xchg
sbb
out
je
mov
mov
push
je
sub
ret
sar
add
and
mov
cmp
push
sbb
je
jno
loopne
or
push
mov
out
mov
inc
xor
pop
xchg
jmp
adc
and
inc
lahf
adc
sbb
pushf
mov
dec
add
push
add
sub
lgs
adc
adc
add
add
cmp
mov
cmp
arpl
test
ins
movs
data16
stc
and
xchg
mov
xchg
jl
mov
xchg
pop
dec
clc
addr16
push
sar
mov
ins
or
adc
ss
inc
pop
fs
and
xchg
add
out
push
push
adc
mov
adc
xchg
xchg
inc
(bad)
cmps
iret
sub
dec
cmps
push
mov
xchg
ins
scas
push
inc
push
icebp
movaps
pop
pop
fwait
rol
adc
jne
add
ds
ds
add
adc
ins
test
bound
dec
inc
mov
mov
fisubr
mov
dec
out
or
add
add
lea
mov
push
iret
jne
and
push
ret
adc
fldenv
pop
and
outs
lock
add
hlt
push
les
or
dec
adc
xchg
mov
push
sbb
inc
sahf
xchg
add
(bad)
stos
lea
iret
hlt
inc
push
push
push
mov
das
cld
or
adc
inc
pop
(bad)
mov
pop
je
out
mov
jbe
mov
mov
jo
mov
dec
add
add
pushf
push
sar
ss
mov
or
add
into
cmp
mov
jmp
push
push
fisubr
push
and
adc
inc
cmp
adc
cmp
cwde
mov
lahf
(bad)
mov
fs
and
dec
out
inc
and
push
mov
adc
cmp
adc
in
cmc
test
sub
cmp
mov
rcl
adc
in
test
adc
push
loopne
retf
mov
pop
pop
addr16
push
push
add
xor
loopne
inc
addr16
add
inc
mov
mov
and
mov
adc
or
cmp
inc
pusha
imul
call
mov
cmovle
mov
addr16
(bad)
(bad)
nop
push
push
sbb
fldcw
sub
fdivr
pop
xchg
cdq
outs
popa
or
inc
cdq
and
cmp
cmps
and
cmp
stos
daa
dec
inc
inc
loopne
movs
adc
xor
and
mov
frndint
mov
push
push
dec
inc
ins
fstp
fmul
pop
pop
std
nop
aaa
cmp
arpl
fucomi
and
repnz
xor
add
ror
add
mov
adc
push
and
cmp
mov
jmp
lock
loop
add
push
xchg
adc
xlat
cmp
adc
cmp
xlat
inc
nop
xlat
loop
add
xchg
inc
or
mov
add
cdq
lock
or
movs
mov
mov
pop
and
aaa
add
or
or
das
shl
mov
pop
xlat
adc
adc
dec
mov
inc
jnp
and
mov
ret
and
in
sar
dec
ins
aas
jne
and
arpl
push
cs
xadd
sar
jmp
mov
cli
(bad)
inc
and
sbb
inc
ins
lods
mov
pop
xchg
setns
add
mov
aaa
mov
add
push
aas
je
repz
aaa
sbb
shr
aas
dec
mov
loope
into
and
mov
retf
ret
dec
mov
sahf
add
dec
lea
sti
call
pop
inc
pop
cmp
pop
sbb
ins
sbb
push
popf
or
adc
dec
cld
mov
cmp
pop
cmp
add
(bad)
inc
scas
or
js
or
imul
adc
pop
nop
sbb
sbb
cmp
ret
(bad)
sbb
pop
inc
or
adc
add
adc
adc
and
push
sbb
adc
push
dec
push
rcl
or
sub
pcmpgtw
inc
fcomp
(bad)
addr16
push
sbb
iret
push
push
and
mov
icebp
add
nop
jg
jno
sbb
or
(bad)
mov
js
cmp
pop
les
repnz
add
push
les
pushf
dec
cmp
dec
sub
dec
pop
xchg
add
retf
loop
(bad)
mov
dec
int
inc
in
pushf
xchg
dec
add
pushf
dec
mov
pushf
dec
and
mov
inc
inc
mov
aam
aaa
fimul
bound
repnz
inc
arpl
pusha
and
rcl
mov
adc
push
mov
inc
shr
mov
lds
sti
sub
loopne
pop
pop
scas
add
add
mov
aas
movs
movs
push
mov
adc
xchg
rol
data16
sub
or
and
adc
pop
xor
cmp
int3
adc
mov
xor
dec
lahf
push
jmp
bound
push
popf
cmp
sbb
inc
cmp
sub
rol
add
add
test
scas
push
sub
push
mov
outs
ja
ja
jl
or
xor
mov
(bad)
cmp
pop
mov
pop
ret
clc
or
dec
or
inc
das
adc
sbb
xlat
and
sbb
cmp
push
add
adc
outs
jne
test
pop
push
or
add
push
adc
mov
sbb
and
arpl
sub
int3
mov
jmp
adc
sub
push
push
push
push
or
nop
pop
inc
dec
add
ret
adc
daa
out
sbb
imul
loopne
shl
ss
or
dec
ja
add
push
mov
in
rcr
lods
push
test
pop
inc
inc
movs
jle
push
adc
ss
out
adc
mov
inc
jp
les
dec
mov
mov
mov
sub
div
sahf
add
or
or
js
and
dec
pop
mov
loopne
mov
or
loope
inc
das
mov
mov
mov
test
(bad)
or
mov
fnstcw
cmp
adc
sub
jge
daa
imul
and
and
sub
dec
push
xor
sub
mov
retf
dec
push
add
mov
or
jg
jae
or
mov
ret
add
add
inc
cmp
adc
lea
jmpw
pop
or
xor
push
(bad)
fiadd
add
dec
add
mov
(bad)
mov
pop
fimul
rol
icebp
add
sub
sub
dec
mov
ret
sbb
jp
ret
mov
add
pop
data16
dec
jne
and
or
pop
cmp
add
lea
nop
add
jb
pusha
mov
pop
and
vminpd
hlt
outs
loopne
inc
loopne
mov
push
add
push
fcomp
adc
xchg
fimul
cmp
xor
fisttp
inc
test
mov
mov
jnp
push
std
lods
push
sub
fucomip
add
jne
jo
pop
mov
punpckhbw
pop
rcl
sbb
fild
hlt
in
xchg
push
test
push
sbb
pop
lahf
daa
ret
sbb
and
clc
nop
add
add
adc
rol
add
push
hlt
mov
mov
push
sbb
stos
arpl
(bad)
xor
aam
lahf
add
add
enter
add
xchg
nop
jo
push
xor
(bad)
push
inc
stos
add
imul
xchg
lea
(bad)
dec
je
inc
clc
out
add
das
pop
popa
lock
leave
xor
popa
test
call
icebp
and
sbb
test
add
add
push
ins
popa
movs
push
add
scas
push
shr
loopne
loopne
in
push
add
(bad)
call
sbb
push
retf
imul
push
cmp
sub
cmp
mov
xchg
mov
loop
test
mov
sub
mov
rcr
outs
(bad)
out
(bad)
outs
mov
add
lea
mov
or
jmp
paddw
or
dec
ins
and
push
or
or
outs
fs
cli
jo
cmp
push
jne
dec
call
pop
sbb
in
mov
loope
push
or
std
xchg
ret
sub
mov
push
in
ins
aaa
adc
mov
ins
inc
(bad)
adc
mov
js
inc
mov
mov
test
bound
cdq
mov
int3
dec
shr
inc
jg
fadd
or
dec
dec
inc
lds
or
push
add
ret
xchg
mov
xor
fs
jnp
mov
xchg
test
or
pop
fst
dec
ret
or
fwait
retf
inc
or
jle
leave
popf
fld
sbb
lods
jmp
aam
cld
lahf
adc
imul
in
je
mov
outs
cmp
xor
test
popa
aaa
cmp
pusha
not
inc
lea
sub
cmp
in
jnp
lea
ror
add
test
mov
out
arpl
add
in
push
lods
mov
dec
test
mov
or
movs
push
sub
ret
nop
das
call
mov
jno
cwde
or
push
and
sbb
pop
xchg
enter
cmp
sub
sub
inc
ss
cmps
push
adc
push
imul
(bad)
fxch
scas
push
sub
xchg
aaa
sub
shr
mov
add
cmps
mov
sub
dec
push
mov
outs
cmp
pop
mov
mov
dec
stos
(bad)
pusha
jp
ret
push
and
push
pop
nop
and
add
pop
mov
cmp
inc
cmp
xor
cmp
sbb
dec
cmp
pop
mov
pusha
add
ds
fiadd
push
jae
sub
js
adc
lea
inc
xor
or
add
fisub
jne
sub
cmps
add
push
les
inc
cmp
pop
pop
jg
cwde
push
or
movs
inc
push
out
call
call
adc
pushf
sub
fmul
gs
sub
pop
test
test
pushf
xchg
adc
mov
adc
inc
test
rcl
push
leave
push
push
outs
or
imul
ret
push
and
push
repz
ret
and
and
xchg
fcomp
lock
add
clc
js
push
jle
add
int
inc
jl
mov
adc
push
lods
les
popa
inc
sbb
pusha
add
adc
push
pop
sub
pop
nop
push
popa
pushf
jge
mov
pusha
adc
cmps
add
sbb
push
sbb
inc
bound
paddusb
and
sub
lock
sti
fld
sbb
adc
adc
sahf
(bad)
fnstcw
add
bound
jo
in
(bad)
or
jl
inc
xor
sub
test
adc
scas
push
adc
fld
pop
or
mov
ds
out
jmp
inc
dec
jne
call
cmp
ret
xor
mov
cmp
ret
test
cmp
xchg
inc
add
xor
out
add
out
call
adc
xor
cmp
ja
ds
pop
sub
stos
ret
in
clc
aam
ret
add
rol
jle
sbb
add
cs
loope
inc
inc
pop
(bad)
ss
push
xchg
jae
aam
inc
jnp
sbb
mov
es
lea
push
fstp
popa
and
adc
ror
pop
dec
gs
and
fwait
adc
sub
in
xor
adc
or
(bad)
or
xchg
dec
cs
nop
fmul
and
sbb
cmp
add
fadd
sbb
adc
adc
add
push
iret
adc
jae
ret
mov
aad
sub
mov
aad
cmovbe
pop
sbb
(bad)
fadd
mov
mov
push
inc
in
pop
add
dec
loope
jl
mov
add
pop
cmp
(bad)
gs
inc
adc
pop
xchg
adc
imul
cmp
mov
loopne
xchg
push
jo
push
mov
mov
call
xor
push
push
imul
sub
test
cmps
fcom
adc
addr16
pop
sub
adc
lods
inc
cmp
jne
push
cld
cmp
je
aaa
sbb
cdq
push
push
call
outs
or
xchg
fist
sub
lea
pop
aaa
mov
or
xor
or
sti
jb
sar
inc
shr
dec
lahf
int
pop
jb
add
push
mov
popa
mov
int3
push
or
mov
push
mov
xchg
jle
fld
or
std
pop
rcl
inc
cmp
and
lock
push
adc
xor
and
sub
cmp
ror
pop
ins
retf
pop
xor
or
or
and
xor
(bad)
push
or
mov
sub
push
push
(bad)
push
int3
adc
ror
jmp
cmp
pop
stos
adc
fs
push
call
sbb
iret
and
xor
ss
mov
push
dec
mov
fisttp
dec
mov
fcomp
or
rcr
ja
jmp
dec
pop
pop
ret
pop
sbb
cld
push
sub
lods
adc
inc
sbb
cmp
dec
mov
inc
sub
dec
sub
retf
in
cmp
push
push
pop
inc
and
pop
mov
sub
pop
inc
push
add
pop
mov
sub
xchg
lock
jmp
adc
add
inc
add
shl
xor
xchg
out
shr
xchg
or
adc
je
data16
inc
add
or
fxch
mov
xchg
mov
test
dec
adc
jmp
inc
and
test
inc
cmovbe
add
sub
adc
xchg
inc
inc
(bad)
clc
jmp
inc
fadd
sbb
jmp
mov
aam
call
popa
mov
mov
test
inc
xor
and
xor
(bad)
cmp
je
sub
loope
cmc
mov
jmp
sub
pop
test
(bad)
adc
push
or
inc
and
lock
adc
xchg
mov
nop
aaa
nop
ret
dec
push
je
or
mov
lods
data16
pop
cmp
je
pop
mov
push
or
nop
xchg
je
sub
shr
mov
mov
imul
xchg
pop
movs
call
sbb
or
mov
pop
push
je
mov
dec
rol
loope
leave
mov
sub
inc
sub
je
pop
mov
loope
cmp
jl
xchg
ret
mov
and
dec
mov
call
push
pop
sub
or
movs
loop
je
lds
mov
pop
push
mov
mov
mov
repnz
mov
mov
jne
mov
shl
pushf
mov
movs
test
out
or
sbb
jle
mov
pop
ins
dec
test
lar
push
test
ret
mov
mov
(bad)
fsub
mov
cmp
dec
jl
pop
sti
jle
add
or
sbb
jno
and
ja
jl
inc
adc
mov
jle
sub
add
test
inc
add
ret
test
or
shr
adc
push
loope
dec
retf
retf
out
add
mov
rol
inc
sbb
and
mov
bound
sub
pop
test
dec
les
pusha
popa
and
dec
dec
ret
add
movs
movs
adc
adc
popa
sub
add
sbb
outs
push
mov
sbb
lea
lods
inc
push
lods
jae
pusha
pop
cwde
or
or
rcr
xor
rol
stos
push
stos
xor
jg
adc
add
xor
mov
mov
add
mov
jge
sbb
test
test
shr
push
fidiv
dec
jmp
push
sub
(bad)
xor
sbb
(bad)
pusha
sbb
iret
shl
inc
inc
adc
or
pushf
ret
pushf
add
xor
pushf
adc
jl
in
sub
inc
push
xchg
add
sbb
dec
add
fld
cmp
fbld
call
inc
iret
add
and
fucomp
adc
test
fadd
or
jne
dec
dec
dec
xchg
inc
enter
add
sti
add
pop
outs
push
cmps
es
imul
imul
or
mov
enter
fst
mov
xchg
add
adc
xchg
dec
add
loopne
add
popa
jno
add
jecxz
or
arpl
call
pop
lods
dec
es
and
sti
dec
mov
xor
pop
mov
add
push
xor
xchg
pop
jne
push
or
mov
fdivr
nop
or
push
xchg
dec
adc
ror
mov
sub
je
ss
mov
nop
adc
imul
stos
sub
jb
and
das
sub
cwde
adc
or
nop
lahf
nop
or
add
sbb
mov
xchg
rcl
dec
xor
inc
mov
mov
sbb
int
fsubr
mov
les
or
inc
daa
push
sbb
arpl
or
inc
sub
sar
jle
or
adc
rol
pop
adc
jno
xchg
xor
push
mov
sti
xchg
mov
inc
mov
inc
mov
mov
ins
add
ds
add
and
mov
fnstsw
mov
inc
mov
sbb
fadd
fadd
dec
outs
(bad)
dec
add
fst
aam
movzx
lahf
ins
sbb
or
push
cs
xor
into
inc
push
mov
sbb
adc
pushf
cmp
bound
shl
dec
adc
adc
outs
pop
shl
cmc
xor
mov
jo
and
and
test
icebp
ins
ret
and
xlat
add
sub
and
ror
aaa
adc
imul
jo
ret
fcomp
ror
jno
push
rol
xor
data16
clc
or
jo
push
and
sar
dec
mov
push
push
sbb
xor
jo
iret
add
inc
cmp
sbb
push
cmp
or
add
fwait
dec
add
jno
add
jo
add
push
adc
and
or
xlat
pop
cwde
es
in
sahf
jae
add
add
jnp
test
shl
xchg
test
dec
fadd
xchg
cmp
sub
pop
adc
sub
xchg
sbb
xor
pop
xor
and
mov
push
jge
es
sbb
inc
mov
or
inc
xchg
fist
or
mov
jnp
inc
je
out
mov
clc
add
(bad)
ror
push
add
sbb
adc
or
push
out
push
fistp
push
test
pop
cmps
lods
pop
push
jp
(bad)
call
ins
cs
lea
pop
imul
adc
retf
xchg
add
or
stos
mov
(bad)
push
sub
fwait
jl
ret
fxch
addr16
jmp
xor
add
rol
or
adc
mov
cmp
jne
xchg
fisttp
mov
je
loope
je
pop
bound
jbe
cmps
jle
jb
(bad)
arpl
bound
cs
ins
sar
add
push
les
imul
aaa
xchg
or
das
(bad)
xchg
rol
or
(bad)
mov
clc
mov
inc
or
js
push
and
and
fdivp
push
dec
add
cmp
sete
loope
dec
hlt
push
push
or
adc
cdq
jbe
add
adc
sbb
movs
mov
add
mov
je
dec
pop
and
popa
je
jne
or
out
out
or
jmp
pop
cmp
sbb
gs
mov
fild
popf
add
mov
into
jmp
push
pop
adc
cmps
loopne
addr16
sar
cmps
in
dec
inc
jne
cmp
adc
adc
xchg
loope
or
and
inc
icebp
sub
mov
sub
push
imul
js
inc
inc
cmp
cmp
adc
push
mov
out
pop
mov
ja
inc
lods
push
sahf
cmp
pop
add
jecxz
inc
mov
inc
sbb
inc
mov
fdiv
mov
push
sbb
call
push
push
clc
and
rcl
pop
push
and
xor
mov
and
and
sub
popa
adc
or
imul
pop
clc
add
lea
rcl
mov
add
mov
fnstsw
mov
or
jmp
mov
aaa
jmp
imul
adc
das
test
dec
push
xor
push
push
icebp
ffreep
mov
and
add
add
add
(bad)
out
inc
clc
jecxz
or
xlat
xchg
add
or
dec
push
vmwrite
inc
mov
mov
add
or
test
iret
mov
pop
or
dec
aad
jge
clc
mov
add
xchg
retf
xor
sbb
ss
ins
sbb
test
test
cmps
sbb
hlt
inc
push
test
add
push
call
adc
jnp
push
or
or
adc
jnp
push
mov
in
lea
cmp
imul
xor
sbb
outs
xor
jecxz
inc
sub
mov
scas
push
and
xor
inc
inc
sub
ss
out
adc
sub
fst
call
adc
push
add
ins
shl
inc
pop
adc
pop
mov
enter
cwde
sbb
popf
push
add
jmp
add
call
inc
xchg
(bad)
pushf
jmp
jge
mov
mov
and
test
sbb
or
cmps
bound
call
push
inc
psubusw
jl
les
push
and
or
adc
mov
inc
js
push
lds
(bad)
test
lock
or
fcomip
mov
jmp
lea
dec
aam
add
push
adc
mov
adc
ret
movs
leave
sub
dec
cld
inc
fsubr
loopne
hlt
xchg
add
dec
add
arpl
jno
mov
add
hlt
call
inc
loope
jge
push
or
xchg
push
pop
and
jno
dec
dec
mov
imul
and
sub
call
test
cld
or
dec
pushf
or
cmp
push
sub
test
xchg
mov
adc
not
cmp
sar
mov
rol
add
mov
jle
jb
je
cmp
fs
imul
jne
clc
cmp
jne
setge
cld
pop
push
xor
xchg
fsub
inc
xchg
dec
sbb
mov
jl
mov
or
addr16
test
add
and
adc
ins
nop
mov
cmp
cmps
add
jl
scas
xchg
xor
add
test
or
sbb
leave
adc
cwde
aad
cmp
add
fwait
jg
cmp
and
push
mov
xchg
mov
mov
inc
add
and
inc
or
push
jnp
jecxz
xchg
or
imul
imul
sub
std
fst
cmp
je
add
lds
test
cmp
push
outs
xchg
mov
pop
or
jne
mov
mov
or
push
xchg
(bad)
xor
sbb
popaw
fst
sbb
jnp
or
leave
mov
aad
and
xchg
call
out
popa
out
add
add
mov
jo
mov
inc
dec
mov
ins
lods
ja
stos
add
or
idiv
jl
imul
shl
sub
pop
ficom
push
adc
jo
cli
mov
push
sub
jo
xchg
xchg
rcl
sub
cmp
and
mov
add
mov
aam
je
test
push
push
or
sbb
jg
(bad)
in
jae
mov
cmp
push
inc
cld
dec
inc
dec
push
dec
popa
adc
pop
push
lea
mov
jecxz
mov
jae
test
or
jo
sbb
and
push
cmp
dec
add
or
int3
push
sbb
test
and
stc
loop
je
push
jle
ja
arpl
inc
mov
mov
arpl
mov
jnp
pushf
pop
(bad)
call
mov
jae
or
push
cmp
or
add
dec
fs
jmp
add
jge
and
int
js
adc
jns
pop
pop
enter
adc
adc
adc
pop
xor
or
ins
cs
push
or
xor
push
fild
mov
ins
dec
test
shl
ins
pop
adc
or
jmp
sbb
mov
dec
inc
inc
addr16
sbb
test
mov
adc
fld
(bad)
ins
and
and
adc
ret
mul
and
pop
lods
pop
add
add
mov
cmp
dec
xor
ins
fisttp
sub
dec
dec
fidiv
dec
mov
push
test
pop
push
aam
out
neg
add
xchg
das
fmul
and
nop
(bad)
xor
ins
xchg
add
cmp
jbe
(bad)
or
ins
add
xlat
add
loopne
jle
adc
outs
gs
jae
nop
scas
shl
repnz
(bad)
stos
mov
in
ror
push
xchg
test
push
add
mov
mov
stos
movs
aas
add
ins
pop
shl
jle
or
xchg
test
adc
leave
push
sar
test
mov
add
dec
or
(bad)
inc
(bad)
jmp
or
pop
ror
sub
xor
stos
jns
and
add
xchg
pop
add
movs
inc
or
dec
jbe
mov
(bad)
rol
ror
or
cmp
push
sbb
mov
and
pop
or
inc
ret
inc
rol
add
rol
jge
mov
sub
imul
add
pusha
cmp
inc
rol
mov
cmps
xchg
cmp
fwait
test
sbb
sbb
or
push
mov
pop
and
jnp
jo
je
push
inc
push
(bad)
push
pop
rol
add
mov
cmp
jge
cmp
ins
daa
dec
das
outs
mov
mov
(bad)
sbb
fwait
add
jg
xchg
jmp
push
outs
outs
je
repnz
pusha
jae
adc
add
imul
pop
push
pushf
jmp
adc
loopne
repz
outs
ins
pop
mov
mov
fld
mov
add
test
imul
inc
les
pop
in
xor
adc
jbe
shl
or
outs
es
mov
adc
lock
mov
dec
push
loopne
mov
add
enter
mov
sbb
out
(bad)
out
cmp
aad
mov
cmp
jl
in
jle
(bad)
push
pusha
mov
ds
test
in
scas
pusha
sub
push
jae
aam
cmps
loop
push
inc
nop
pushf
xchg
les
or
add
movs
aaa
push
jo
lods
mov
outs
imul
mov
int3
cs
pop
push
dec
popa
dec
les
inc
pop
jo
mov
add
add
xchg
push
push
push
push
popa
gs
push
push
and
pop
fwait
sbb
sahf
mov
push
popa
jb
add
retf
pop
push
(bad)
cdq
ret
dec
or
ret
add
sbb
jnp
das
sbb
mov
sbb
stos
adc
mov
test
fs
sub
adc
js
add
mov
pop
inc
into
call
or
mov
add
add
mov
pop
cmp
push
adc
xor
add
enter
adc
clc
sbb
fcom
das
cdq
clc
enter
ror
dec
sbb
mov
add
push
jbe
rol
aaa
xchg
cld
adc
not
push
std
loope
leave
sbb
pop
ret
mov
xor
push
sbb
mov
and
ret
mov
fisub
scas
or
dec
hlt
add
(bad)
daa
fisttp
rcr
mov
mov
pop
(bad)
adc
pop
lea
adc
and
pop
sbb
pop
jo
push
mov
shr
add
sbb
call
rol
mov
push
mov
(bad)
cmp
add
or
dec
sbb
dec
xchg
push
dec
add
dec
inc
inc
mov
or
adc
mov
or
fwait
or
mov
loop
and
dec
sub
dec
mov
gs
je
leave
ins
nop
daa
pop
adc
(bad)
sbb
mov
fsubrp
mov
sbb
pop
das
jo
dec
pop
sbb
pop
dec
xlat
cmp
dec
xchg
pusha
nop
clc
ss
push
enter
outs
pop
pop
(bad)
cdq
ins
imul
jle
inc
or
pop
add
xor
push
aaa
or
jb
mov
xchg
dec
add
pop
cmp
xchg
and
sbb
sbb
cmc
dec
pop
call
pusha
and
xchg
shl
and
movs
popf
or
in
pusha
ja
push
je
inc
rol
mov
mov
xchg
pop
mov
mov
es
pop
xchg
inc
push
cld
mov
ins
pop
sbb
aam
or
bound
fsubr
nop
cwde
cmc
dec
dec
mov
fadd
mov
int3
mov
xor
(bad)
and
add
(bad)
push
imul
pop
cmp
xor
mov
push
popa
enter
add
xchg
test
fisttp
inc
pop
leave
mov
popa
lods
xchg
pop
or
pop
sbb
ja
push
mov
das
push
cmp
(bad)
lock
adc
xor
pop
push
ja
test
mov
dec
ja
imul
or
xchg
sub
pop
sub
imul
push
repnz
loopne
mov
inc
das
fiadd
mov
mov
sbb
imul
pop
add
sbb
(bad)
cdq
ins
daa
fldenv
push
mov
cwde
inc
dec
mov
or
mov
jmp
call
pop
mov
test
xchg
mov
dec
pop
ins
add
loopne
outs
push
adc
add
pop
stos
nop
cld
outs
pop
mov
popa
js
and
sbb
lods
ins
gs
dec
and
gs
lock
cmp
jno
je
outs
xchg
and
or
or
xor
push
addr16
sub
icebp
dec
adc
xor
dec
sub
mov
inc
push
push
push
push
adc
inc
jo
sub
cmp
cdq
inc
pop
clc
(bad)
shr
jge
inc
dec
sbb
or
arpl
inc
inc
dec
lea
or
mov
mov
imul
ret
dec
cwde
mov
add
fwait
push
fdiv
adc
sub
add
mov
add
cs
cdq
cmp
pop
add
or
or
into
imul
mov
sbb
inc
pusha
push
and
lds
add
jno
xor
sbb
mov
(bad)
mov
adc
pop
out
jbe
mov
or
jl
inc
scas
inc
adc
test
cmc
test
jae
loopne
popf
aad
mov
adc
push
xor
out
pop
fwait
mov
xchg
dec
and
cmovge
sub
push
fsubr
and
cmp
add
lea
cmp
push
mov
shr
outs
jg
dec
add
in
cmps
mov
fcomp
xor
aas
pop
fwait
pop
jo
in
cmp
fwait
outs
dec
(bad)
ins
or
or
(bad)
mov
and
int
add
cld
inc
and
pop
add
adc
mov
dec
aas
mov
dec
jo
add
add
add
gs
pop
xor
cld
fwait
popf
retf
mov
pop
push
inc
push
sbb
shl
fisttp
inc
push
adc
jae
inc
and
and
add
aaa
jmp
rol
xchg
(bad)
inc
stos
inc
sahf
adc
fadd
cmp
(bad)
test
cmp
inc
in
dec
mov
pusha
xchg
jb
adc
inc
cvtdq2ps
dec
dec
cmp
fs
mov
xchg
inc
mov
push
mov
cmp
rep
xor
cmp
dec
push
pop
adc
sti
cmp
add
add
sub
mov
sub
cmp
jge
outs
mov
mov
jmp
mov
outs
pop
mov
mov
push
int3
dec
nop
push
fcom
push
ins
shl
mov
std
(bad)
(bad)
shl
pushf
and
stos
rol
mov
jo
push
xor
loopne
inc
push
repz
leave
or
cli
pusha
push
pop
and
outs
inc
mov
add
enter
or
pop
mov
pusha
mov
mov
add
inc
inc
pop
sbb
xchg
add
inc
cld
sbb
push
add
aaa
pop
sub
pop
inc
test
add
popa
cwde
add
jecxz
add
mov
mov
addr16
mov
outs
xchg
mov
cmovg
loopne
mov
daa
daa
fadd
mov
xchg
jnp
loop
add
mov
or
and
popf
out
call
or
xlat
and
pop
dec
inc
cdq
iret
adc
pop
rol
push
popf
cmp
xor
lock
and
pop
jnp
mov
frstor
jecxz
sbb
add
clc
jb
rcr
inc
pop
mov
adc
add
pop
scas
fadd
add
jge
and
sbb
fwait
xchg
inc
es
mov
push
ins
pop
add
push
pop
inc
aad
adc
push
popa
imul
ins
ins
add
mov
sbb
icebp
lock
ins
imul
push
add
sub
or
mov
jne
ja
ja
and
repnz
loope
sub
add
inc
sub
rol
or
add
pop
xchg
ins
fwait
push
pop
or
and
add
rcr
or
jp
jae
(bad)
pop
out
sub
mov
jg
fld
push
stc
in
movs
movs
mov
sbb
movs
pop
hlt
das
add
ror
inc
cmp
dec
jmp
movs
xor
loope
aad
push
lods
or
pusha
inc
arpl
add
mov
pop
mov
pop
pop
lods
in
movs
mov
sbb
mov
or
inc
arpl
ins
mov
lock
mov
add
mov
or
outs
mov
inc
mul
cmps
sti
lock
or
adc
jg
push
clc
add
test
cmps
test
jmp
or
stc
bound
adc
movs
movs
cmps
sbb
daa
add
ins
push
movs
add
cs
xor
pushf
add
psubsw
dec
inc
push
movs
iret
aaa
inc
icebp
add
pop
or
dec
pop
cmps
sub
mov
sahf
stos
cs
pop
outs
sub
inc
shl
das
leave
xor
mov
(bad)
(bad)
dec
xlat
ror
cmp
jns
or
js
xor
sub
and
cmps
cmc
dec
outs
dec
jns
imul
loope
pop
push
rcl
or
addr16
inc
jmp
adc
pop
mov
and
xchg
int
mov
add
mov
fcom
inc
mov
mov
sbb
test
inc
scas
inc
pop
outs
das
bound
inc
inc
pop
mov
adc
lsl
xchg
into
push
add
sub
add
sub
dec
popa
outs
popa
cmp
inc
mov
icebp
nop
and
pop
rol
stos
ins
adc
popa
sbb
xchg
mov
data16
adc
and
test
or
sbb
adc
pop
int
mov
jge
shl
jle
pop
push
sub
sub
das
inc
in
stos
or
add
jmp
add
mov
dec
aaa
xchg
or
cmps
clc
mov
ret
xchg
je
sub
push
xor
add
imul
add
xor
pop
mov
jns
jno
movs
mov
or
out
cmp
int
adc
mov
mov
pop
cmps
pop
sub
push
cmps
loope
jl
lods
pand
stos
pop
(bad)
lods
push
pop
add
or
push
push
ret
pop
mov
inc
xchg
pop
pop
pop
shl
out
js
mov
sub
(bad)
nop
and
ja
or
mov
adc
je
add
scas
ins
mov
(bad)
cmp
cld
jno
shl
jb
mov
mov
cmps
add
cmps
mov
sub
adc
imul
cs
pop
mov
push
and
movs
stos
out
inc
dec
int3
into
push
rol
sub
scas
cmp
mov
push
loopne
loope
xchg
sar
xor
cmp
in
leave
mov
xor
in
test
inc
mov
sbb
jb
rcr
mov
mov
cmp
sahf
pushf
pushf
pushf
mov
cli
pop
mov
dec
dec
inc
inc
jl
jmp
daa
and
mov
test
add
aas
jp
sar
mov
push
push
fwait
add
jne
popf
stos
test
mov
or
push
push
cmp
call
mov
xor
cmp
cmp
inc
or
mov
pop
add
push
(bad)
xor
add
mov
pop
mov
mov
lock
or
pop
and
push
stc
ins
stc
push
dec
test
outs
or
stos
ins
pop
rcl
cdq
ja
cmps
cwde
inc
loopne
inc
fst
(bad)
les
fs
lods
and
sub
pushf
inc
je
xchg
or
push
or
dec
in
push
adc
cmp
stos
leave
fwait
add
or
mov
pop
xor
pop
cmp
pop
dec
jae
imul
and
imul
jno
fnop
add
push
push
dec
sbb
mov
inc
sub
cmp
call
imul
fcomp
add
std
inc
js
push
ret
adc
popa
dec
xor
add
imul
xchg
add
cwde
inc
das
xchg
and
sbb
sub
or
lods
xchg
pusha
xor
rcl
pop
and
inc
pusha
mov
xor
inc
or
pusha
loope
xchg
test
add
dec
aaa
test
inc
or
cmp
and
push
push
shl
cmp
jbe
cdq
push
or
dec
ror
mov
push
ret
(bad)
outs
jb
inc
aaa
in
inc
dec
mov
jmp
and
jns
lods
sbb
adc
enter
mul
pop
xchg
cmp
movs
pusha
xchg
dec
or
jae
ret
jb
ins
xor
jae
xor
add
fs
sub
add
inc
and
ja
fcom
mov
add
inc
shr
inc
or
pop
and
outs
add
xchg
push
mov
xchg
out
add
or
sbb
add
psubb
adc
or
push
cdq
rol
in
cs
lods
cmc
inc
inc
nop
sbb
leave
adc
ffree
aam
sub
or
inc
dec
lods
(bad)
jp
push
xor
dec
add
aaa
push
lds
je
movs
sub
add
mov
or
int
lock
aad
hlt
test
popf
adc
or
mov
outs
add
or
inc
and
mov
adc
sbb
popa
sub
push
fcmovb
lods
call
add
int
pop
mov
mov
mov
mov
push
adc
mov
mov
jns
pop
mov
scas
pop
std
je
es
mov
or
out
cmc
add
test
or
fisub
mov
mov
test
js
sub
rcl
mov
sub
pop
push
stc
xchg
lock
push
daa
stc
daa
es
jmp
retf
mov
pop
in
loopne
xor
add
mov
inc
add
sbb
(bad)
loopne
push
call
inc
imul
popa
jb
fstp
pusha
xchg
jmp
dec
sbb
invd
jmp
aaa
lock
dec
enter
mov
dec
push
pop
jmp
fsub
mov
shl
cmps
test
(bad)
push
icebp
xchg
sub
mov
or
popf
push
add
inc
jg
mov
adc
test
popf
jle
out
inc
add
(bad)
test
shl
add
jg
sub
adc
jg
in
push
cld
adc
inc
push
pop
das
or
lds
icebp
inc
ret
or
jl
cmp
in
jg
xchg
mov
or
ret
push
hlt
push
mov
repnz
xor
xor
xchg
arpl
movs
add
sbb
jg
push
outs
les
add
ficom
ret
adc
vmovaps
out
nop
xchg
push
add
out
dec
and
sub
add
test
add
mov
rcl
ds
sbb
les
or
add
cmps
xor
mov
jg
add
rol
inc
jne
or
mov
or
mov
pop
pop
shr
es
mov
daa
push
jg
jl
add
fcom
and
and
rol
arpl
push
vmovddup
adc
das
mov
les
stos
pop
mov
inc
xor
imul
in
adc
pop
mov
(bad)
sbb
retf
dec
(bad)
and
push
xor
mov
fwait
pop
int3
das
jmp
stc
adc
and
mov
xor
push
or
daa
lods
mov
jnp
pushf
call
pop
cmp
pop
pop
xor
fadd
ins
ror
fadd
jnp
dec
adc
ins
(bad)
(bad)
adc
and
push
enter
or
lea
mov
enter
inc
mov
adc
adc
enter
sub
adc
mov
loopne
fwait
je
stos
push
leave
add
sbb
lock
jns
xchg
arpl
in
rol
leave
adc
(bad)
rcl
test
das
lahf
retf
(bad)
push
cmps
adc
imul
enter
loope
sbb
cmp
retf
push
retf
imul
cmc
stos
or
adc
in
iret
push
leave
test
cmp
and
nop
add
cmp
or
loopne
mov
(bad)
addr16
cmp
and
int3
pop
jmp
or
es
dec
test
das
call
push
sbb
outs
sub
xchg
push
int
dec
mov
push
xor
pop
in
pop
scas
jl
push
js
cwde
loope
add
xchg
lds
and
arpl
mov
add
int
lock
push
add
mov
nop
add
push
in
cmps
push
imul
sub
dec
mov
out
xor
dec
jl
jo
ficom
iret
or
xor
push
test
imul
cmp
sbb
push
pop
adc
imul
xor
aam
arpl
outs
ret
xor
sub
adc
call
ret
daa
fild
test
jns
(bad)
xchg
xchg
mov
cmp
out
mov
(bad)
ror
nop
popa
xchg
test
fild
sahf
out
adc
inc
xchg
push
mov
cmp
adc
mov
add
mul
mov
xchg
mov
add
ss
mov
jecxz
inc
sub
dec
push
test
or
out
rol
jae
jae
jmp
sbb
inc
fwait
sbb
jl
xchg
pop
jge
mov
inc
daa
xchg
inc
adc
jle
cmp
adc
or
pusha
and
push
fild
gs
mov
mov
jge
pop
add
sbb
mov
pop
mov
dec
push
inc
add
bound
push
jns
mov
or
out
sub
xor
sbb
ja
adc
jb
xchg
test
cmp
enter
inc
ret
or
sar
xchg
mov
out
xor
add
imul
aam
xchg
jmp
sub
xor
lds
jecxz
(bad)
out
cmp
xor
sub
inc
js
adc
mov
inc
add
dec
or
mov
add
adc
cmp
cmc
es
add
jae
or
pop
xor
(bad)
or
sub
daa
jmp
dec
or
push
retf
out
test
pop
das
jge
cmp
push
ds
iret
adc
mov
in
push
dec
add
sti
or
stos
or
cvtpi2ps
xor
add
and
dec
pop
test
loopne
mov
mov
or
sub
pop
add
pop
mov
mov
sbb
mov
push
adc
or
lahf
in
mov
popa
pop
jg
mov
jecxz
dec
xor
gs
add
dec
inc
jno
popa
ins
mov
test
push
xchg
cmp
jmp
sbb
bswap
adc
mov
adc
push
jp
lahf
cmp
push
adc
das
push
ficomp
mov
rol
std
arpl
fsubr
xlat
push
xor
push
inc
test
cwde
or
dec
dec
pop
and
in
sub
int
imul
or
push
pushf
jmp
inc
mov
arpl
loop
jno
fistp
setb
add
ret
shl
mov
sub
push
popf
mov
cmp
fdiv
rol
dec
inc
add
adc
push
sbb
movs
inc
add
gs
sbb
and
mov
cmp
cmp
or
add
daa
jae
and
outs
aaa
pusha
mov
mov
outs
jo
sub
loope
cmc
dec
add
jb
mov
or
adc
xchg
adc
pop
mov
popf
rol
pusha
(bad)
mov
add
inc
pop
test
push
push
shl
adc
cs
test
xor
ds
call
cmp
or
sub
lea
mov
jo
movs
fld
xchg
aad
movs
ret
add
fisub
mov
jno
fimul
fistp
mov
lock
dec
mov
(bad)
cmp
or
and
out
push
fistp
cmp
lock
ror
inc
add
mov
xor
inc
pop
xor
xor
imul
add
inc
lods
fmul
fisttp
sub
adc
xchg
cwde
ficomp
push
push
add
cmps
test
test
out
cmp
cmp
dec
or
cs
jo
push
dec
dec
test
pop
and
xor
mov
in
mov
dec
mov
(bad)
loope
jo
jge
xor
das
clc
loop
sbb
movs
pusha
or
adc
or
or
inc
or
movs
or
adc
xlat
pop
std
lods
loope
mov
fstp
das
data16
mov
inc
enter
xchg
pop
lock
bnd
dec
adc
jno
or
stos
in
fld
inc
rol
adc
jmp
or
mov
inc
cs
pusha
cwde
lock
sbb
leave
sbb
outs
pop
rcl
and
movs
fnsave
mov
ffree
mov
loopne
xchg
pop
or
xlat
xchg
cmp
push
es
mov
add
inc
(bad)
add
mov
push
je
adc
je
clc
(bad)
mov
imul
add
or
mov
loopne
loopne
mov
push
pop
mov
add
add
out
test
mov
shl
repnz
or
test
jb
scas
fcom
or
cmp
sub
adc
mov
inc
add
icebp
inc
(bad)
sub
mov
loopne
dec
in
test
add
pusha
or
nop
xchg
icebp
add
pop
lods
mov
hlt
jno
gs
jmp
inc
int
in
fcmovnu
or
jl
cmp
in
dec
xor
jb
inc
adc
pusha
out
shr
jecxz
gs
push
add
frstor
inc
pop
dec
pop
(bad)
dec
push
aaa
pcmpeqb
dec
pop
vmwrite
sub
in
xchg
sub
(bad)
jmp
push
jns
movs
mov
aas
ja
inc
xchg
inc
mov
(bad)
scas
adc
sbb
xchg
and
aas
lock
adc
and
sbb
pop
out
sbb
adc
rol
dec
xor
add
pop
mov
or
or
pop
jmp
shl
cmp
jmp
and
and
jmp
mov
fnsave
movs
push
cmovbe
push
unpcklps
dec
call
data16
test
movs
aam
mov
mov
mov
xchg
rol
call
and
inc
or
cwde
inc
sbb
push
mov
int
add
pop
sbb
scas
pop
arpl
and
jmp
sub
in
out
test
mov
pop
inc
pop
adc
lods
or
adc
iret
icebp
lock
dec
ins
or
adc
mov
out
pop
cld
das
or
xchg
rcl
inc
cmp
adc
sub
or
ror
add
hlt
in
jne
push
inc
xchg
out
xchg
lock
dec
or
or
lock
xor
out
out
xlat
pop
ds
adc
call
jnp
test
stc
xchg
test
iret
retf
ret
push
lock
mov
ins
jns
cmp
inc
in
dec
adc
or
inc
inc
in
jnp
lock
inc
scas
and
lea
es
ficom
cmps
and
sbb
add
xchg
test
xor
push
cmp
push
or
not
add
inc
test
mov
outs
add
jbe
imul
addr16
pop
repnz
lock
loopne
jmp
fucomi
test
pop
in
das
or
addr16
retf
retf
add
scas
repz
xor
imul
dec
adc
int
shr
push
mov
retf
xor
iret
pop
cmc
mov
adc
repnz
out
cmp
add
push
and
inc
push
and
push
daa
cmps
das
add
neg
rcl
div
outs
pushf
push
les
ins
ss
push
dec
cmp
ins
(bad)
out
ret
mov
fld
push
and
aaa
sub
lahf
neg
not
cmovle
pusha
cmp
pop
adc
ins
add
pop
inc
or
test
pop
loop
cmps
pop
lock
adc
clc
mov
lock
mov
cmp
test
aas
test
mov
test
not
scas
dec
clc
push
mov
cmp
pop
dec
xor
dec
mov
xchg
daa
xor
ins
inc
dec
popf
aam
icebp
dec
xor
outs
jae
xor
xchg
into
dec
jmp
in
(bad)
retf
xor
cmps
pandn
xor
sbb
push
fwait
in
cmp
jns
std
and
seto
adc
dec
jb
in
cmps
out
adc
ins
aaa
jb
jb
pop
cmp
cmp
jbe
shl
cmp
aas
(bad)
fst
in
adc
stc
pop
es
sbb
mov
push
ret
push
lods
inc
inc
push
call
jns
dec
dec
cmp
xor
lods
adc
sar
lock
int
shr
pop
dec
jmp
sub
mov
sbb
lock
popa
cmp
inc
dec
xchg
ins
push
push
popf
push
es
jns
dec
jmp
movs
push
lds
jns
dec
sub
js
xchg
and
shl
sub
xchg
push
inc
add
jns
and
inc
hlt
hlt
jns
push
cvtps2pd
mov
push
pop
jns
daa
mov
or
daa
cmp
jo
iret
dec
add
dec
jmp
add
adc
dec
add
fadd
stc
js
pushf
jae
dec
ror
push
daa
xchg
push
jns
lods
(bad)
enter
and
jns
or
dec
adc
pushf
aam
fstp
or
cs
mov
cmp
aam
dec
jns
push
and
dec
mov
test
jne
mov
inc
adc
push
or
jns
dec
sub
jns
xchg
sbb
jge
jno
mov
add
add
inc
or
dec
jns
adc
sbb
xor
or
sbb
shr
push
sub
neg
fadd
cdq
push
mov
jns
bound
dec
jns
xchg
mov
pop
push
xchg
cli
lea
dec
dec
lock
sub
or
jns
test
push
xchg
pop
enter
mov
pop
movs
icebp
adc
ins
add
inc
clc
idiv
push
das
fwait
add
jno
pushf
xchg
pusha
xchg
jo
mov
pop
fcmovnbe
xchg
jo
xor
or
cmp
dec
test
clc
ss
add
ins
and
pop
push
(bad)
push
jns
jb
(bad)
and
add
cmp
sbb
mov
inc
xchg
add
daa
fnsave
mov
xor
mov
sub
out
add
pop
adc
cmp
call
stos
or
je
dec
xor
mov
mov
inc
(bad)
stc
outs
sub
add
push
je
push
add
mov
mov
inc
imul
or
mov
pop
xor
mov
cmp
or
add
pop
nop
lock
or
(bad)
fild
cmp
ins
inc
pop
adc
out
iret
ins
pop
lea
pmaddwd
pop
data16
fucomip
or
fucomi
inc
scas
ins
or
hlt
das
add
ins
add
(bad)
out
or
push
test
fwait
push
sbb
xchg
aad
adc
in
or
fimul
bound
adc
mov
ret
sbb
pusha
loopne
or
das
jle
xlat
jo
aas
loopne
arpl
pushf
lahf
mov
add
lock
push
or
add
mov
loope
ret
test
sub
int
push
iret
aas
pop
xor
cmp
cmp
dec
add
pop
jo
inc
sub
adc
lea
and
lds
scas
jnp
cmp
cmp
mov
pop
pusha
std
out
daa
les
jle
(bad)
fld
adc
out
add
or
out
(bad)
shl
rol
out
mov
ror
add
out
fmul
fnstcw
in
add
xlat
push
mov
push
ins
cmps
sbb
loope
ret
ins
out
bound
mov
out
sub
add
pop
adc
inc
or
int
add
push
xor
(bad)
out
retf
push
sub
out
iret
push
cmc
add
jno
fmul
out
out
cmp
loope
add
(bad)
aas
aas
shl
adc
adc
pop
es
das
mov
jl
ins
push
adc
sbb
cmps
out
push
loope
mov
jecxz
add
mov
fsub
scas
sbb
add
and
data16
pop
pop
inc
adc
std
push
mov
push
xchg
jp
cmps
aaa
adc
adc
mov
push
popf
das
repz
dec
inc
popa
xor
add
movs
fbstp
dec
fcom
mov
pushf
movs
sub
outs
add
or
test
ins
out
sub
out
adc
lar
or
out
(bad)
shr
out
ss
sub
sar
out
adc
push
ins
daa
mov
push
push
ror
xchg
xchg
xchg
xchg
pop
dec
mov
leave
leave
leave
enter
cwde
int
in
in
sbb
into
jb
xor
bndldx
idiv
cmp
jns
sbb
mov
fmul
sbb
xchg
inc
sahf
pushf
pushf
mov
aas
jno
dec
mov
data16
sbb
ds
push
lds
ret
add
mov
push
in
and
ror
sub
xor
das
in
mov
or
pop
shr
movs
or
add
in
adc
aam
mov
and
sbb
out
in
lock
in
(bad)
in
test
lods
pop
adc
int3
push
fld
cmp
mov
sbb
mov
and
loopne
ins
add
fwait
sbb
adc
and
in
adc
in
push
adc
add
iret
dec
xor
dec
pop
jno
mov
inc
mov
xor
sbb
mov
in
sbb
inc
gs
loopne
jb
dec
ja
pop
sub
movs
(bad)
sti
aas
cwde
dec
mov
or
shl
mov
mov
adc
dec
mov
mov
jg
dec
popa
pop
xor
add
add
cmp
xor
adc
ss
cmps
cmp
imul
mov
cmp
mov
push
cmp
cmp
add
add
jns
loopne
add
inc
or
or
jns
retf
sbb
add
add
shr
and
rol
pop
xlat
and
in
inc
add
ins
adc
push
xor
inc
and
mov
mov
or
inc
fwait
or
inc
fs
add
movs
mov
dec
aam
mov
sbb
in
imul
or
(bad)
xor
or
xor
fdivr
dec
ficom
call
test
ficom
fwait
and
pushf
das
stos
and
dec
jp
in
jns
lods
or
dec
jns
rol
xchg
push
and
test
push
int
and
and
xchg
pop
icebp
mov
(bad)
cld
and
sub
xor
stos
jle
jno
mov
lods
and
and
iret
inc
test
mov
test
and
and
mov
inc
cmp
and
mov
xor
dec
push
inc
fs
and
push
cs
pop
xor
loopne
inc
dec
in
dec
inc
in
add
xchg
pop
and
(bad)
cld
and
mov
and
cmp
push
add
mov
inc
adc
icebp
adc
int3
out
aaa
das
mov
cmp
int3
and
inc
aas
ror
pop
push
cmp
imul
cmp
shl
in
and
mov
cmps
pop
enter
and
add
popw
sub
and
add
and
sbb
sbb
cmp
lods
xor
adc
scas
or
call
inc
(bad)
mov
push
stos
pusha
retf
xchg
sub
lock
mov
(bad)
dec
push
add
or
sub
add
(bad)
ds
shl
sub
test
push
les
out
das
add
pop
daa
cmp
das
or
adc
shr
and
inc
sub
jo
jle
jp
mov
das
sbb
scas
lock
jno
shr
mov
pop
adc
loopne
or
inc
or
pop
and
inc
sub
scas
push
mov
sub
test
fs
xor
das
xchg
mov
and
scas
ins
push
pop
stos
push
sbb
fs
shr
push
and
enter
(bad)
xchg
adc
and
sub
cmp
adc
mov
sub
loope
sbb
adc
sub
sti
sub
mov
frstor
das
imul
xor
pusha
xchg
xchg
xchg
daa
daa
loope
xor
enter
cli
inc
xor
mov
repnz
in
mov
jb
xor
stos
repz
test
cwde
stos
pop
adc
xor
sbb
xor
fiadd
hlt
dec
sub
or
and
jno
and
sbb
inc
and
push
mov
mov
lods
adc
daa
cmp
rcl
push
mov
or
dec
ins
add
test
and
mov
add
and
adc
cmps
mov
or
and
rcl
inc
add
and
and
push
push
add
mov
or
push
add
call
and
iret
and
jno
or
and
add
lods
add
ins
inc
and
mov
inc
push
push
dec
mov
js
lods
sub
sub
add
add
rol
mov
inc
push
and
loopne
dec
mov
ins
and
pop
and
shl
lds
cmp
or
push
sub
or
shl
and
xor
pusha
jge
mov
and
jns
or
mov
adc
shl
xor
repnz
ss
inc
xor
movaps
adc
and
in
and
in
jns
or
test
pop
outs
lods
mov
les
push
shl
and
test
stos
or
seto
and
adc
push
and
and
inc
jecxz
inc
sbb
inc
pop
shl
push
dec
inc
xlat
ss
in
xor
xchg
pop
sub
mov
adc
xor
inc
jo
push
push
or
and
cmp
add
add
push
inc
imul
popa
add
retf
mov
add
mov
les
lods
inc
(bad)
adc
dec
add
cmp
inc
pop
xor
mov
in
shl
dec
cmps
push
inc
dec
add
(bad)
mov
sbb
or
(bad)
and
imul
add
pop
and
rol
enter
xchg
xchg
arpl
mov
mov
nop
pop
ins
bound
add
or
imul
adc
mov
ret
(bad)
cmp
mov
cld
lock
cmps
push
push
fist
mov
fisttp
inc
adc
and
sbb
push
inc
fdivr
popa
(bad)
jo
sub
clc
ins
inc
mov
stos
and
add
push
aaa
jnp
mov
jnp
inc
std
cmp
inc
aam
scas
sub
or
add
or
mov
and
popf
adc
out
or
cmp
mov
pushf
pop
popa
jl
adc
adc
adc
call
push
hlt
out
jo
fdivr
dec
push
test
je
mov
in
adc
ins
ret
add
loope
xor
adc
dec
or
add
popa
mov
jne
push
mov
add
inc
sbb
arpl
ins
push
fs
jge
cmp
push
adc
inc
mov
lods
daa
movs
mov
mov
icebp
dec
cmp
dec
mov
sub
sub
jne
or
cmp
adc
cmp
and
add
sbb
sbb
inc
xchg
(bad)
sub
sbb
adc
xchg
pop
cmp
iret
lock
pop
or
or
and
ret
lods
mov
jne
mov
dec
adc
in
das
or
cmp
vpmaxub
scas
cdq
sbb
sub
jl
or
cmp
xor
xor
sub
jecxz
hlt
and
pop
(bad)
push
sub
int
sbb
mov
push
sbb
inc
pop
fist
xchg
jge
or
add
cmp
sbb
inc
adc
test
mov
xor
mov
pop
jle
call
and
push
add
sub
popf
xchg
lea
push
inc
loop
or
mov
sar
test
add
jbe
inc
lea
dec
dec
call
xchg
cmp
shl
dec
neg
repnz
test
je
sar
test
je
add
jg
lock
clc
dec
or
inc
hlt
cmp
enter
xchg
mov
pushf
sub
inc
inc
push
add
fwait
push
xor
shr
lahf
in
and
cmps
dec
pop
(bad)
arpl
(bad)
cmp
xor
or
sub
cmp
lock
push
ds
push
and
div
push
mov
and
loop
cmovae
inc
neg
rcl
fnstcw
sbb
pop
inc
mov
push
pusha
add
in
dec
ds
pop
xor
addr16
xor
mov
mov
push
and
inc
mov
aaa
adc
sahf
adc
test
ret
fild
add
adc
sbb
xchg
adc
dec
pushf
out
sub
mov
rcr
aas
daa
mov
add
inc
daa
(bad)
ds
les
ins
push
hlt
cmp
adc
add
xchg
and
pop
add
add
movs
cmovl
and
pop
dec
dec
cmp
and
ins
cmp
clc
mov
mov
push
or
test
aas
in
push
inc
ins
bound
or
push
pop
pop
pop
cld
pop
wbinvd
js
imul
mov
mov
mov
inc
stos
(bad)
cmps
cmp
loop
cmp
ds
fwait
not
dec
sbb
stc
xchg
add
xchg
add
fadd
push
test
imul
mov
jmp
ins
aad
and
push
rol
shl
pop
fdiv
je
push
jl
xor
(bad)
mov
(bad)
pop
int3
pop
loope
(bad)
(bad)
stos
or
pop
test
data16
int
jge
mov
stos
add
push
or
lods
nop
push
push
cmp
sub
lds
push
and
int3
jle
sti
fwait
cmps
test
and
fs
mov
(bad)
mov
nop
fmul
loope
push
cdq
imul
push
aas
mov
hlt
adc
xor
cmp
pop
daa
mov
push
push
nop
data16
xor
jmp
and
(bad)
(bad)
inc
inc
pop
dec
add
cmp
mov
ret
and
repz
jno
test
and
sbb
ret
das
(bad)
fdiv
cli
mov
push
sbb
ins
inc
mov
sub
jg
mov
mov
adc
mov
push
push
stos
int3
aad
inc
shl
cmp
outs
fild
ret
pop
xor
xor
mov
imul
xchg
mov
imul
ficomp
addr16
lea
aad
mov
out
loope
jne
mov
icebp
or
sbb
fsub
outs
inc
in
out
in
rol
mov
xlat
test
adc
pop
jle
add
mov
and
inc
inc
xor
pusha
adc
(bad)
fwait
adc
je
mov
rcr
test
pop
xchg
adc
ins
mov
pop
adc
repz
xor
or
jl
int3
jne
sub
xor
fmul
adc
inc
add
jecxz
enter
mov
cmp
jne
jl
test
inc
shr
push
xor
add
pop
mov
stos
sbb
push
int
ja
sub
js
adc
mov
sub
lds
lds
mov
test
sbb
jmp
push
(bad)
(bad)
mov
movs
jmp
movs
or
add
ret
cmp
je
jbe
sub
stos
mov
es
test
dec
push
lock
hlt
stos
inc
mov
and
mov
mov
into
int
add
lock
lock
and
js
arpl
adc
shl
xor
and
adc
adc
cdq
test
or
cs
imul
cmp
inc
pusha
scas
and
xor
sub
xchg
add
ins
ja
fld
into
push
or
pop
adc
and
fbld
inc
or
mov
arpl
pop
and
dec
inc
or
pop
adc
adc
js
xlat
add
jno
pop
push
rcl
pop
mov
inc
sbb
lahf
imul
push
xchg
daa
sbb
sbb
out
xor
out
push
push
xor
mov
test
jmp
adc
push
ror
inc
clc
mov
xor
jecxz
rcl
mul
imul
push
pop
imul
shr
test
cmps
enter
push
mov
push
jge
pushf
dec
outs
sbb
ja
je
fcmovnu
add
fimul
xchg
push
das
pop
dec
in
test
cmps
mov
push
clc
jne
mov
mov
or
jo
mov
adc
mov
ds
not
xchg
push
add
push
mov
aam
push
or
pop
add
aam
dec
or
mov
xchg
arpl
inc
pop
sub
popa
mov
or
ror
pop
nop
jg
test
jb
cli
not
imul
push
test
nop
imul
sub
dec
and
sbb
sysenter
in
dec
mov
loopne
dec
xchg
cmps
icebp
and
retf
pop
add
test
inc
inc
stos
dec
mov
xor
inc
into
jo
cmp
mov
fwait
cld
cmp
sub
or
pop
stos
sbb
push
dec
or
add
in
data16
push
sub
add
cli
push
xchg
not
adc
(bad)
xlat
paddd
int3
xor
xor
lea
dec
add
jne
adc
or
adc
add
or
add
xchg
jmp
or
mov
xchg
test
pusha
and
aaa
add
push
nop
sub
or
cmp
dec
cmp
clc
vrsqrtps
xor
outs
ja
or
fldenv
push
or
xor
inc
push
sub
test
dec
addr16
inc
xor
sbb
cmp
or
gs
(bad)
push
dec
jle
mov
stos
mov
inc
jmp
dec
jne
jg
js
jge
push
stc
mov
lds
xor
or
movs
or
dec
or
iret
mov
fisttp
test
adc
cwde
loop
call
and
push
cmp
inc
and
pop
ins
push
jl
xor
mov
inc
mov
cmp
xchg
push
lods
add
addr16
sbb
and
and
aas
cmp
jg
ss
fld
ret
mov
ret
in
or
push
jmp
adc
sar
xor
add
sbb
add
jmp
int3
pop
or
cmp
test
adc
dec
push
and
vcvtsd2si
adc
xchg
les
xchg
push
jne
push
dec
jne
and
jns
sbb
pop
stos
mov
lea
dec
jg
pop
test
jne
aas
or
inc
inc
cwde
and
in
cmp
xchg
add
lock
jmp
es
inc
xchg
movs
mov
adc
mov
jle
sub
and
mov
inc
or
push
call
in
xchg
pushf
or
in
dec
loope
scas
and
jne
je
or
add
add
popf
shl
fadd
aas
or
mov
sub
xor
ret
add
add
(bad)
inc
xor
fs
arpl
xchg
mov
or
adc
lock
xchg
out
mov
add
cmp
mov
lods
mov
ins
sqrtps
ds
mov
xchg
mov
clc
sub
jle
mov
adc
or
imul
rol
mov
jne
xor
mov
pop
and
out
in
xchg
fnstcw
(bad)
repnz
jno
or
shl
and
sahf
sbb
jg
mov
adc
or
das
sbb
pop
push
in
test
mov
sbb
add
test
cdq
mov
or
adc
and
push
ffreep
push
(bad)
lock
rol
mov
pop
dec
mov
sti
push
fs
push
hlt
inc
je
mov
(bad)
sub
adc
push
mov
dec
adc
adc
jns
lds
adc
mov
push
jne
jl
ror
outs
lea
jae
bound
imul
push
pop
push
lea
inc
adc
lahf
clc
cs
pusha
es
push
jb
jo
xor
xor
aaa
mov
cs
and
out
xor
push
aaa
in
in
lods
fidiv
push
shl
int3
cs
pop
pop
push
out
xlat
push
rol
push
(bad)
xlat
popf
pushf
add
xor
call
cwde
and
xor
or
mov
sbb
xor
pop
cmp
lea
invd
mov
adc
lock
mov
jno
fcom
ret
lea
popa
cmp
mov
adc
and
mov
retf
call
daa
mov
test
int
push
sub
jo
inc
jo
push
adc
(bad)
into
inc
add
scas
add
pusha
mov
push
push
jne
inc
cvtpi2ps
je
rcr
xlat
mov
xor
dec
lea
cmp
(bad)
add
adc
aam
or
ret
fcmovb
add
(bad)
mov
call
lock
cwde
pop
test
add
fcomp
adc
cdq
cld
(bad)
loopne
mov
add
mov
movs
lds
push
xchg
loopne
or
mov
inc
daa
dec
and
lahf
cmp
ds
loope
push
sbb
add
add
clc
clc
or
(bad)
push
add
sub
sbb
mov
scas
sub
sti
aad
sti
(bad)
jle
xor
and
out
cmp
add
mov
movs
xchg
and
or
xor
mov
jmp
pop
pop
sar
xor
mov
adc
push
or
mov
push
xor
cs
adc
in
dec
inc
mov
scas
xchg
and
push
mov
ret
or
inc
jl
fwait
(bad)
and
push
icebp
dec
(bad)
push
jne
int3
ret
xlat
push
pop
add
sahf
inc
ja
movs
rcl
fiadd
and
or
jae
mov
ret
and
sbb
test
push
mov
xor
movs
add
jp
outs
pop
int3
xor
imul
add
lea
mov
pop
jmp
jl
pop
jbe
call
xor
sti
jle
lea
outs
pusha
in
pusha
rcl
or
daa
xchg
pop
in
jl
mov
call
pop
sbb
add
scas
add
ins
cs
push
sbb
inc
inc
xlat
dec
pop
ror
add
je
test
movs
into
out
inc
adc
or
fcom
add
push
push
push
and
(bad)
xor
dec
add
lock
push
(bad)
xor
lahf
or
rdmsr
mov
push
jnp
xor
jl
imul
iret
lea
jmp
jmp
add
jge
and
or
jmp
xchg
mov
sub
mov
jecxz
loope
lock
or
mov
or
aam
inc
int3
mov
mov
sub
push
sub
call
mov
push
das
push
adc
and
pop
gs
jl
pop
test
xor
int
sub
xor
pop
jle
ror
mov
add
mov
add
inc
add
fild
mov
mov
dec
mov
clc
fnsave
inc
adc
lea
add
inc
sbb
ins
add
test
ja
inc
xor
mov
pop
aaa
imul
sahf
jne
jae
jp
sub
cmp
cwde
sbb
mov
call
enter
fmul
sub
mov
dec
pop
clc
sti
add
pushf
ss
and
or
push
hlt
das
or
pop
fdiv
mov
mov
fbstp
hlt
xchg
or
aad
xor
sub
popf
adc
or
or
dec
pusha
ret
push
test
aam
fs
add
push
jg
pop
lock
shl
xlat
mov
dec
push
push
test
and
(bad)
pop
pushf
test
ror
jbe
add
ins
add
dec
dec
icebp
inc
retf
mov
xchg
mov
adc
pop
jecxz
pusha
adc
hlt
fwait
shl
or
rcl
inc
sbb
jae
dec
loope
adc
xor
dec
inc
jmp
push
mov
or
jmp
(bad)
push
jge
mov
ror
jge
pusha
adc
dec
xor
mov
adc
dec
cmp
daa
pop
or
idiv
add
mov
test
jno
lea
adc
scas
add
fadd
cmp
(bad)
xor
ds
call
lods
push
enter
mov
imul
mov
or
adc
or
out
je
fwait
rcl
adc
push
cmp
test
outs
dec
loope
and
lahf
jo
jno
fstp
sub
(bad)
stos
inc
mov
jno
shr
clc
mov
mov
fwait
pop
ret
psubb
add
and
std
shr
loopne
jge
adc
dec
cmp
jge
push
or
clc
sub
jl
xchg
loop
add
icebp
pop
xchg
jbe
add
(bad)
js
out
mov
sub
shl
and
pop
mov
add
mov
lock
push
mov
mov
and
jmp
jle
mov
and
test
sbb
cmp
mov
fild
push
push
or
add
jecxz
jmp
push
push
icebp
xchg
xor
push
xchg
adc
(bad)
fistp
ret
and
pop
jne
and
mov
mov
(bad)
in
inc
push
adc
pop
cwde
jno
loopne
add
dec
sbb
sub
or
mov
lahf
add
xor
push
loop
mov
xchg
(bad)
push
mov
inc
or
ja
or
std
or
mov
leave
in
mov
in
je
sti
inc
or
xchg
jnp
sub
inc
test
(bad)
retf
mov
inc
sbb
xchg
xor
push
and
sbb
call
and
es
lahf
clc
arpl
mov
icebp
sub
ret
adc
pushf
stos
daa
mov
lea
push
mov
cli
jne
add
add
je
xor
pusha
xchg
cli
sub
dec
out
mov
inc
inc
add
popa
ins
inc
pop
adc
mov
fldcw
pop
inc
jb
imul
mov
push
push
popa
add
push
and
ret
push
add
adc
adc
jmp
sub
mov
lea
pop
sub
dec
imul
and
cmp
push
push
pushf
inc
push
inc
ret
pop
lods
movs
push
shl
dec
sbb
push
push
pop
push
adc
push
adc
stos
sti
mov
bswap
jmp
adc
(bad)
les
mov
jg
aaa
sub
mov
inc
pushf
adc
movs
scas
repnz
lock
sub
or
loope
jmp
cmp
jnp
mov
xor
test
add
pop
daa
push
out
loopne
jmp
cli
stos
add
js
cmp
cmp
(bad)
add
mov
add
cmp
inc
dec
stos
outs
jle
out
iret
mov
add
leave
inc
push
xor
sbb
jb
sbb
jge
es
mov
jl
inc
les
xor
push
ror
mov
das
jne
popf
push
loopne
js
lock
cmp
or
ret
mov
mov
or
push
add
pop
mov
shr
outs
jno
test
add
mov
and
(bad)
(bad)
and
dec
or
push
inc
gs
xchg
mov
inc
lock
int3
cmp
int3
or
sub
and
pop
int3
mov
les
xor
add
push
fmul
cmps
imul
adc
dec
mov
add
add
shl
pcmpeqd
and
cmp
jmp
rol
shl
or
das
mov
outs
and
or
push
ret
mov
cmp
shl
dec
xor
jmp
test
adc
dec
rol
sbb
inc
add
cmc
inc
cmp
mov
dec
jge
js
leave
loopne
fsub
fnsave
push
daa
das
pop
int
pop
mov
add
cmp
pusha
adc
popa
mov
sub
aaa
or
mov
jle
fwait
jle
pop
jl
dec
test
and
add
add
(bad)
enter
pop
shl
push
adc
add
inc
or
or
pushf
mov
(bad)
cwde
mov
xchg
xchg
mov
(bad)
xor
add
adc
test
(bad)
inc
and
push
ret
nop
jge
xor
xor
dec
sub
repz
or
jbe
and
(bad)
call
test
pusha
test
push
or
outs
mov
ins
sbb
jg
mov
push
and
adc
pusha
push
cli
mov
or
add
jo
pop
pushf
pop
cmp
cli
jmp
cmp
push
js
jl
into
icebp
or
test
je
sub
xchg
das
test
jo
test
push
sti
sbb
mov
and
jmp
inc
bound
inc
js
or
aaa
push
jp
dec
or
adc
push
inc
ins
shl
pusha
lds
retf
sbb
mov
xor
push
or
cmp
xchg
inc
mov
pop
fsub
xor
pop
ins
inc
pushf
cmp
cmp
scas
cmp
rol
popa
cld
inc
add
imul
add
ret
xor
imul
sbb
sbb
retf
loope
mov
xor
imul
mov
or
xor
fdivr
inc
inc
xor
inc
jo
ret
jne
sbb
movs
add
sub
mov
push
inc
mov
popf
es
and
dec
adc
retf
add
add
sbb
ror
push
pop
push
mov
movs
les
test
stos
mov
mov
inc
push
pop
fadd
dec
outs
xor
jmp
xchg
add
jge
cmp
retf
jge
push
pop
add
cmp
add
jmp
mov
jmp
hlt
rol
inc
mov
or
dec
ja
call
mov
mov
shr
or
mov
ins
sub
inc
imul
inc
pop
test
push
pop
sar
aam
in
pop
pop
mov
add
inc
movs
mov
fcmovu
jo
pop
mov
adc
lds
cmp
leave
jle
mov
mov
mov
pop
jmp
iret
nop
or
or
add
mov
pop
ins
neg
rol
jno
mov
mov
adc
cmp
adc
pushf
mov
or
mov
leave
sbb
mov
push
push
retf
or
inc
shl
adc
sar
rcl
ins
inc
jns
inc
lock
xchg
mov
jmp
call
mov
in
pop
mov
adc
mov
sub
or
js
push
jge
pop
js
push
or
scas
and
imul
add
test
pop
jmp
cmp
jg
push
jge
fst
jg
inc
in
les
jnp
jmp
and
mov
cmps
leave
bound
shl
cmp
add
push
fbld
pushf
xlat
add
push
jmp
xlat
push
lea
pop
mov
fiadd
outs
add
pop
xlat
inc
dec
push
mov
lea
stos
inc
jns
std
scas
jo
mov
pop
dec
adc
dec
sbb
(bad)
rcl
inc
mov
push
fstp
pop
cmc
inc
cmp
jg
clc
mov
pop
fidiv
pop
jnp
xchg
add
loop
cmp
or
and
rcl
cmp
jge
sub
xchg
cmp
ret
mov
dec
outs
ins
iret
xchg
sti
and
add
inc
push
inc
test
cs
test
dec
add
lock
fdiv
je
loope
add
jmp
(bad)
aas
jb
mov
pop
int3
add
jmp
adc
ins
adc
cmp
fwait
jp
xchg
or
push
add
mov
pop
ins
sub
xchg
shl
dec
or
add
cmp
or
shl
pop
out
scas
(bad)
pop
mov
jae
sbb
sub
clc
push
scas
sbb
aad
or
dec
add
jae
or
mov
rcr
enter
mov
mov
jg
or
sub
jbe
js
ds
stc
push
mov
repz
add
fstp
add
fs
ja
rcr
push
dec
call
add
push
iret
test
stos
mov
pop
jmp
mov
xor
cmp
test
adc
pop
call
test
inc
cmp
(bad)
jmp
cmc
fcomp
shl
mov
sbb
xchg
aad
inc
rcr
jecxz
add
arpl
sbb
add
mov
push
jmp
jo
mov
mov
jp
push
mov
aaa
sbb
das
or
pop
and
cmps
sub
inc
add
or
pusha
cmps
fisttp
push
shl
mov
dec
lods
rcl
pusha
hlt
inc
loopne
add
mov
sahf
(bad)
lock
enter
mov
mov
call
push
or
add
add
test
aaa
addr16
stos
mov
push
fucomip
ud0
dec
jo
gs
sti
jg
imul
dec
ret
jg
sbb
test
cwde
adc
adc
and
sub
adc
jne
jb
mov
sbb
mov
bound
sub
mov
push
jno
sbb
adc
adc
ja
int3
enter
adc
inc
sbb
or
xor
ret
cld
sbb
jae
sbb
pop
add
jg
popa
or
sub
mov
in
or
add
inc
add
or
dec
inc
clc
pop
add
and
fstp
lods
in
jmp
in
(bad)
push
sub
cdq
sub
icebp
ret
mov
jmp
test
bound
push
inc
jo
jbe
add
sub
mov
add
imul
(bad)
push
mov
push
jo
inc
cmp
adc
or
adc
loopne
cmp
(bad)
outs
and
adc
std
adc
lods
je
addr16
cmp
push
test
rcl
cli
jbe
add
sub
enter
xchg
jecxz
call
int
fisttp
add
imul
hlt
push
push
dec
sbb
adc
inc
lods
push
out
and
inc
lea
cmp
push
sub
(bad)
aaa
nop
mov
jmp
adc
inc
es
pop
sub
pop
or
xchg
jp
add
loope
hlt
push
in
mov
inc
adc
icebp
add
push
cld
popf
jbe
test
xor
dec
xchg
adc
into
add
cmp
movs
inc
pop
mov
arpl
adc
push
or
push
int
cmp
adc
ins
jnp
jmp
popf
push
jmp
push
dec
ins
clc
push
push
pop
push
pop
(bad)
in
jl
mov
and
out
dec
xchg
ficomp
(bad)
js
mov
aas
cmp
cmp
add
inc
rcl
add
mov
sti
ss
(bad)
push
aad
mov
in
nop
fist
push
in
or
jae
add
mov
push
adc
mov
mov
push
inc
pop
mov
jne
(bad)
jbe
bound
dec
sbb
sbb
push
push
inc
pop
ja
movs
or
mov
mov
(bad)
mov
pusha
aaa
stos
call
popa
add
stos
stos
addr16
ret
nop
out
aad
pop
out
pop
ret
and
inc
add
add
test
mov
outs
pop
xor
cli
jae
mov
fadd
and
lahf
shl
(bad)
jecxz
nop
fwait
push
mov
add
pop
(bad)
or
sbb
pushf
xor
jmp
es
add
sbb
aaa
sub
cmp
xlat
out
jp
nop
dec
jo
icebp
lock
and
packuswb
add
cdq
in
xchg
shr
mov
in
sbb
push
shr
repnz
xor
mov
add
jns
stc
push
mov
imul
and
mov
outs
sbb
push
lahf
shl
xor
or
fld
cmp
jle
add
or
mov
sub
and
shl
sub
sbb
loopne
(bad)
sbb
fs
mov
sbb
(bad)
push
and
ds
mov
(bad)
jecxz
jo
xor
cmc
sub
mov
add
hlt
mov
pop
sbb
out
lock
push
xor
shr
add
xor
push
jnp
inc
adc
cs
mov
cmp
sbb
out
in
xlat
les
push
(bad)
push
lods
pop
cli
imul
aad
cwde
fsubr
xchg
xchg
sub
cwde
and
push
or
cmp
add
add
rol
pop
test
xchg
and
gs
call
mov
add
sub
dec
mov
add
cmps
or
sbb
dec
dec
sub
or
shr
inc
cmps
mov
cmps
mov
push
add
and
inc
add
loopne
out
rol
adc
mov
lods
test
outs
add
pop
pop
inc
xchg
dec
and
shr
pop
daa
pop
neg
cld
dec
add
jns
push
not
cs
add
or
dec
je
test
xchg
sbb
xchg
pop
fild
or
mov
arpl
jge
cmp
pop
into
push
mov
imul
adc
dec
dec
(bad)
xchg
xor
ds
inc
pop
sbb
sub
pop
adc
xor
and
pop
lahf
bound
pop
repz
mov
das
xchg
mov
or
and
scas
(bad)
fs
shr
cli
sbb
inc
mov
pop
mov
pop
movs
ins
mov
mov
sub
adc
mov
sub
ret
and
cmp
adc
pushf
jecxz
jo
push
ins
sbb
push
and
das
pmulhuw
sbb
sbb
jmp
jne
pop
jg
adc
enter
jle
xlat
jne
jno
cmp
fadd
sti
nop
sbb
nop
jne
pop
adc
adc
ds
stos
popf
mov
mov
cwde
push
test
test
ds
sbb
or
in
lock
jle
outs
jo
ins
nop
pop
popa
test
jl
shl
setge
jecxz
inc
jg
push
lea
jmp
dec
or
cmps
jns
sbb
add
inc
into
xor
sub
mov
mov
jle
test
loope
pusha
xchg
sub
mov
sub
clc
leave
call
call
pop
push
outs
dec
sub
sub
mov
ret
nop
mov
jae
adc
add
shl
ret
xchg
jle
xor
add
sbb
outs
popa
add
ds
lock
add
outs
les
sub
adc
cmovno
fdivp
jmp
inc
jle
push
dec
or
ret
aaa
add
jns
shl
arpl
stos
dec
dec
cmp
(bad)
gs
nop
cmp
xchg
ja
les
jae
jno
sbb
das
jecxz
dec
xor
fst
sub
jno
mul
movs
test
movs
cmc
fs
jl
or
and
pop
push
inc
adc
mov
pop
cmps
pop
inc
mov
pop
jno
sub
or
push
enter
jno
cmps
or
cmp
iret
mov
jb
mov
jb
(bad)
and
mov
dec
jb
(bad)
mov
or
(bad)
mov
pop
add
mov
or
popa
in
mov
inc
add
push
xor
add
jg
rol
push
fld
retf
data16
in
pop
ins
xor
psadbw
sbb
inc
les
add
pop
xor
adc
and
dec
push
sub
dec
push
jmp
dec
mov
aas
xchg
add
outs
cs
xchg
ins
pusha
not
pop
es
js
and
loope
icebp
cmp
add
sbb
mov
push
add
push
int3
mov
loopne
rol
or
in
out
inc
adc
pop
adc
pop
imul
jne
test
and
dec
lahf
lods
fadd
daa
push
inc
add
jns
cmp
dec
inc
int
sbb
xchg
xor
and
xor
movs
test
loopne
pusha
(bad)
std
aaa
push
adc
scas
call
or
push
hlt
test
adc
dec
(bad)
and
out
cld
inc
push
mov
dec
hlt
sub
or
push
add
rcl
push
bound
sti
mov
mov
xor
or
inc
in
xchg
ins
adc
je
add
and
add
xchg
leave
adc
ret
or
push
js
xchg
pop
gs
ja
sbb
push
cmp
out
inc
cli
dec
jmp
(bad)
and
push
or
jmp
pusha
xor
dec
jae
mov
test
and
popa
xchg
and
or
scas
in
inc
adc
test
jb
pop
pop
adc
jle
or
xor
and
clc
push
or
dec
lock
out
dec
dec
add
mov
mov
mov
lock
js
jge
xchg
jl
pop
call
or
les
or
pop
rcr
outs
sub
cmp
or
add
lea
or
mov
or
mov
xchg
jge
dec
loope
cwde
fnstsw
mov
xor
add
xchg
adc
inc
inc
cmp
add
ret
ret
sub
ret
sub
and
cld
xrelease
sub
inc
jb
das
lods
fmul
arpl
(bad)
(bad)
movs
je
cs
add
add
test
jg
adc
neg
push
lock
inc
dec
rcr
cmp
or
sbb
rol
adc
pop
inc
je
sbb
adc
mov
mov
popa
jae
jno
aad
popa
mov
xchg
inc
arpl
push
sub
(bad)
jns
pop
xchg
hlt
shl
sbb
jmp
and
add
jmp
and
fcompp
stos
jp
adc
jb
inc
test
jnp
rcr
fwait
push
pusha
or
adc
inc
inc
sub
adc
fsub
cld
fist
pop
inc
add
aaa
lds
or
test
mov
and
or
adc
movs
jmp
adc
dec
pushf
sbb
fwait
dec
push
push
jb
mov
lea
jg
ret
daa
out
cmp
lods
(bad)
add
movs
out
mov
(bad)
mov
sbb
push
lock
pop
lea
div
pop
mov
jge
jo
or
add
in
push
add
mov
cld
addr16
loopne
test
scas
and
and
push
mov
call
mov
cmp
lock
dec
mov
pop
dec
int
xor
sbb
pop
mov
aad
sbb
add
aam
lock
inc
test
(bad)
or
inc
and
sbb
jge
aaa
add
int
int3
xor
or
sbb
pop
mov
enter
sub
pop
xor
dec
xor
push
sti
and
pcmpeqw
mov
sbb
clc
mov
sbb
jnp
pusha
push
inc
stos
cmp
sbb
dec
ficom
push
sar
pusha
frstor
push
mov
adc
test
dec
push
rcr
(bad)
push
push
data16
fimul
xor
or
jns
shl
and
pop
int
aad
push
xor
xor
xchg
mov
inc
data16
cwde
(bad)
neg
push
imul
jae
jbe
sbb
jo
pop
or
push
sub
popf
pop
mov
sbb
pop
sub
push
xchg
fmul
fidivr
dec
and
dec
xor
inc
pop
mov
or
outs
jecxz
jmp
leave
mov
je
test
shr
mov
idiv
mov
pop
xor
push
push
dec
stos
aaa
xor
push
mov
enter
ror
add
or
mov
adc
mov
leave
or
jns
jmp
hlt
dec
jle
mov
(bad)
retf
mov
mov
pop
iret
pop
add
or
ret
outs
icebp
out
(bad)
xor
mov
mov
add
mov
cdq
cmps
loopne
ret
lods
or
shl
repnz
adc
add
jmp
adc
xlat
mov
ret
or
icebp
imul
jnp
(bad)
push
adc
jnp
push
lods
sbb
pop
scas
add
sbb
and
mov
imul
add
jg
xor
sub
pop
lea
jno
adc
xchg
push
clc
pop
lods
add
pop
(bad)
mov
ins
sbb
xchg
aaa
add
cmps
ins
mov
out
or
add
add
push
imul
test
xchg
(bad)
lock
xchg
enter
or
add
inc
jmp
push
lea
and
leave
sub
dec
xchg
imul
(bad)
loopne
add
cwde
test
or
pop
lods
aam
call
loope
push
cmps
mov
cmps
or
adc
inc
and
push
sub
xchg
or
shl
add
sbb
ins
(bad)
mov
out
test
inc
mov
cmp
add
push
adc
pop
mov
test
mov
ret
cmp
rcl
dec
add
push
gs
ret
cmp
fmul
pop
add
in
sub
or
dec
push
add
inc
fmul
imul
scas
fs
cwde
add
imul
sbb
jl
xchg
ins
arpl
sub
and
and
inc
cmp
mov
pop
hlt
push
jo
add
addr16
leave
mov
sbb
pop
dec
inc
or
adc
or
sbb
jne
push
test
clc
mov
and
mov
and
mov
push
stos
mov
or
fs
xor
and
dec
sub
icebp
leave
push
add
xchg
inc
xchg
lds
adc
mov
test
xchg
mov
push
inc
loope
and
mov
add
dec
pusha
jo
cmp
xchg
rcl
add
int
stos
enter
bound
inc
jne
pop
in
jne
fidiv
cmp
mov
(bad)
sbb
or
out
(bad)
xor
xor
or
adc
mov
add
push
mov
xchg
ins
cmp
mov
inc
scas
int
jae
add
adc
pop
ja
push
repnz
sbb
idiv
test
jnp
adc
mov
add
xchg
dec
sub
lea
ror
pusha
cdq
xchg
dec
push
inc
pop
mov
xchg
sbb
sbb
es
cmp
xchg
xchg
pushf
add
cmp
add
sub
cld
pop
push
out
test
xchg
mov
bound
inc
push
loopne
and
pushf
add
pusha
mov
mov
add
lahf
lea
push
push
mov
retf
test
cmp
sbb
pop
sbb
cwde
rcr
adc
add
loopne
add
push
rol
and
daa
push
adc
add
xchg
inc
les
and
loope
add
sbb
inc
add
mov
sbb
ror
fcom
mov
sub
mov
xchg
mov
pop
les
mov
call
fwait
cwde
or
xchg
inc
stos
in
inc
xchg
gs
and
xchg
add
cwde
sahf
ret
mov
cmp
stc
mov
mov
mov
mov
repz
or
outs
adc
cmps
stos
cli
popf
(bad)
dec
xor
sbb
sbb
xor
bound
and
adc
xor
add
jmp
inc
jecxz
inc
mov
or
pop
iret
cmps
adc
dec
cli
sahf
or
pop
pop
add
xor
adc
loopne
sar
push
retf
jno
push
call
and
jnp
outs
jne
cmps
jns
sbb
xchg
mov
adc
loope
cmc
push
(bad)
mov
xchg
daa
xchg
sub
(bad)
dec
xchg
leave
mov
ret
cs
pop
mov
add
mov
xchg
rcl
sbb
xchg
xchg
or
adc
xor
and
or
dec
pop
test
sub
push
xchg
cmp
and
enter
(bad)
mov
sbb
pop
jecxz
mov
sub
or
ins
inc
movs
pop
daa
or
sbb
addr16
sub
add
(bad)
jmp
pop
push
cmps
push
test
pop
in
inc
xor
leave
or
sbb
mov
outs
je
jnp
lock
sbb
mov
pop
jecxz
hlt
cmp
and
stc
fst
sbb
cmp
fisttp
jae
sub
cmp
or
retf
dec
popa
mov
pushf
mov
jb
(bad)
adc
cmp
push
mov
add
inc
sub
adc
add
nop
pushf
nop
mov
test
movs
mov
cld
imul
cmc
stc
test
les
inc
iret
scas
cmp
mov
adc
adc
cmps
add
inc
mov
adc
mov
fbld
mov
les
cmp
ins
sbb
fadd
and
cdq
dec
inc
mov
loopne
add
mov
popa
jno
add
xchg
adc
adc
out
adc
out
inc
mov
(bad)
cwde
sbb
and
inc
test
movs
lahf
sub
cwde
pusha
add
inc
pop
cdq
push
or
lahf
sbb
lahf
and
add
dec
test
and
and
push
repnz
popf
ins
or
addr16
push
inc
enter
push
stos
push
nop
mov
stos
pop
mov
dec
mov
and
sbb
addr16
in
jb
mov
inc
addr16
push
leave
jns
cdq
jo
cmp
in
and
sub
cmps
or
jo
scas
stos
dec
dec
add
pop
ror
repnz
scas
clc
pop
xor
adc
pop
cwde
scas
inc
jb
jns
pop
cdq
lock
mov
lahf
scas
sub
push
pop
pop
mov
jns
mov
jmp
loopne
pop
cmps
or
add
mov
test
xor
add
adc
lahf
xchg
cli
inc
ret
or
push
add
ret
rcl
das
pop
sub
jge
in
sbb
outs
mov
add
jl
ins
inc
dec
or
or
nop
xchg
xchg
cmp
pop
mov
cmp
add
inc
loopne
movs
or
or
or
mov
mov
dec
add
ret
xcrypt-ecb
cmps
dec
adc
adc
sahf
push
mov
jle
or
cmp
rcr
rol
push
pusha
sbb
mov
push
and
sub
mov
rcr
stos
movs
adc
mov
test
xchg
and
aas
cmp
mov
adc
ret
test
ret
ds
pop
or
pop
dec
loop
scas
and
mov
jns
test
ins
lock
xchg
mov
sub
sbb
xor
add
sub
sahf
loopne
(bad)
push
rol
or
into
iret
dec
jne
jnp
aam
xchg
scas
mov
pop
sub
sub
leave
xchg
inc
cmps
or
test
cmps
in
daa
cmp
clc
loopne
movs
cmps
mov
test
add
add
call
and
jne
fadd
sbb
shl
jge
mov
add
add
leave
push
leave
test
jo
enter
(bad)
cmps
cmp
aas
das
mov
xor
add
ss
cmp
push
and
cmps
cmp
mov
push
int3
in
stos
mov
clc
add
pop
ret
and
and
add
xchg
fcomp
js
push
mov
xchg
pushf
in
adc
lods
sub
push
nop
lods
cmp
scas
pop
mov
and
mov
lock
jns
mov
cmp
jecxz
dec
lods
imul
or
mov
push
cmp
jno
lods
push
push
push
jmp
and
or
xchg
adc
daa
inc
mov
and
sub
push
and
lods
fsubr
push
js
sbb
rol
pop
push
mov
(bad)
mov
(bad)
mov
mov
mul
stos
aam
outs
das
push
push
mov
ror
push
add
mov
mov
pop
push
(bad)
xor
loope
addr16
push
add
rol
aaa
push
or
or
push
js
shl
fdivr
mov
aas
adc
push
pop
pop
adc
sbb
cdq
or
adc
sbb
cmp
sub
cmp
xor
inc
push
cwde
inc
loopne
and
das
and
retf
outs
cmps
mov
cs
cld
daa
adc
add
inc
or
and
es
das
dec
adc
cli
imul
xor
xadd
and
cmc
push
sub
cmp
add
add
inc
xchg
hlt
hlt
rcl
push
or
jns
aad
daa
xor
adc
fstp
mov
ins
push
lock
ins
aas
jmp
into
push
js
pop
jo
jle
xchg
ja
mov
js
outs
adc
sub
sbb
and
mov
mov
xor
pop
pop
daa
add
mov
test
les
pop
add
jne
add
inc
or
jno
cmp
add
or
je
ins
rcr
inc
dec
ds
mov
push
je
push
add
lock
lahf
pop
aad
add
add
lods
adc
loop
icebp
fucomi
cmp
and
ins
add
les
idiv
test
jno
ret
inc
jo
pushf
push
enter
imul
dec
adc
paddq
jmp
sub
or
or
fbstp
inc
mov
add
pop
mov
pushf
int
int
xchg
test
fist
jo
gs
pop
inc
stos
and
mov
pop
aad
or
stos
shl
loopne
jg
push
xchg
inc
pop
jge
cmp
xor
push
sub
push
mov
mov
sub
inc
(bad)
jno
sub
mov
test
pop
loopne
inc
adc
icebp
push
or
test
adc
pop
xchg
mov
and
or
add
mov
push
xor
adc
addr16
outs
mov
add
clc
iret
pop
dec
das
data16
cmp
inc
adc
fsub
(bad)
and
and
daa
push
shl
mov
pop
mov
hlt
iret
scas
push
nop
mov
inc
jnp
mov
mov
and
inc
cwde
js
adc
cmp
shr
rcr
dec
dec
and
shl
or
mov
sbb
push
or
popf
test
loopne
inc
in
and
xchg
sahf
jge
adc
das
sub
ins
mov
sub
sub
fst
fsubr
and
adc
pop
jne
dec
or
inc
mov
jecxz
nop
mov
mov
jne
rol
mov
add
cmp
add
lods
ss
movs
pop
adc
shr
rcl
cld
in
dec
jnp
push
sar
push
aam
test
fcmovnbe
or
push
dec
cmps
fbstp
(bad)
cld
mov
mov
sub
and
dec
pushf
jecxz
cmps
ror
dec
int3
jns
pushf
sbb
inc
dec
leave
sub
int3
hlt
iret
dec
outs
jae
es
jecxz
jne
jno
out
xlat
or
fadd
imul
fmul
ror
dec
mov
and
(bad)
and
jb
xchg
xchg
daa
daa
retf
add
dec
xchg
les
fcomi
in
xchg
xchg
lods
cmc
and
xor
(bad)
cmp
sbb
fstp
mov
ficom
jle
pushf
in
push
fistp
inc
mov
dec
cmp
push
inc
push
push
jmp
inc
sbb
test
xchg
dec
test
sahf
nop
add
dec
int3
sti
inc
imul
mov
adc
sti
xor
sbb
and
dec
ror
push
xchg
les
push
push
les
test
inc
sti
adc
(bad)
cmp
jno
out
lds
sti
xchg
push
pop
inc
sub
sti
xchg
mov
sti
mov
pusha
mov
loope
adc
inc
sbb
or
sar
inc
sbb
mov
sub
xor
loopne
inc
test
ds
aam
mov
and
pop
dec
sub
sub
inc
aad
mov
sbb
sti
rcl
adc
sti
xchg
adc
mov
mov
jg
mov
and
pop
and
retf
fmul
ins
dec
lea
gs
xor
mov
sti
inc
sub
mov
adc
or
sti
adc
or
jge
sub
push
popa
pop
(bad)
sub
inc
sti
jns
mov
push
mov
sti
xor
les
ins
xor
pop
dec
xchg
cmp
push
pop
add
aad
rol
xor
mov
in
pop
mov
add
in
pop
xor
inc
dec
jns
dec
pop
add
mov
dec
mov
enter
mov
add
mov
sbb
mov
xor
sbb
push
and
retf
aam
bound
xchg
cld
adc
adc
or
cmp
push
mov
sbb
nop
adc
inc
add
loop
inc
lods
mov
mov
pop
sub
inc
loop
xchg
xchg
xchg
pop
jae
(bad)
push
jecxz
pusha
shr
jne
pop
jae
jecxz
pop
sub
and
push
jae
mov
adc
jae
pop
aad
or
sbb
and
in
jo
jp
sub
jne
fnsave
icebp
cmps
das
aad
push
xor
dec
dec
in
push
in
gs
in
push
pop
sub
push
das
ins
in
in
and
sub
jp
pushf
xchg
in
outs
(bad)
xchg
cmovns
mov
mov
repnz
repnz
cld
mov
cmp
ds
daa
add
mov
lea
jmp
out
aad
mov
mov
in
dec
jnp
push
push
jge
shr
add
daa
iret
and
data16
mov
clc
mov
mov
mov
pusha
mov
out
clc
loopne
and
leave
pusha
loope
mov
into
icebp
or
call
push
ins
or
pushf
xchg
imul
ins
in
mov
ins
cpuid
outs
cmp
in
sbb
pop
push
daa
and
test
xchg
xchg
daa
daa
rcr
in
push
leave
enter
aam
out
imul
(bad)
cli
pop
out
jb
retf
ins
dec
jl
adc
js
(bad)
cmp
cmps
fistp
mov
fwait
and
mov
(bad)
jmp
out
and
lods
cmovo
call
mov
repnz
stos
adc
dec
or
cmp
pushf
(bad)
and
dec
inc
xchg
mov
push
mov
pop
mov
(bad)
mov
or
mov
mov
les
mov
and
popa
push
adc
cmp
cmp
mov
push
pop
or
adc
and
mov
fwait
and
(bad)
mov
bound
(bad)
in
popa
and
mov
sbb
adc
lods
pop
lods
mov
(bad)
repnz
push
adc
sub
sbb
and
ja
repnz
inc
xchg
lods
and
and
test
(bad)
add
push
dec
cmp
test
imul
adc
mov
(bad)
mov
jmp
test
inc
lds
repnz
fs
lea
mov
pop
add
rol
ret
adc
cmp
dec
inc
cwde
sbb
xor
lea
push
jno
sub
inc
mov
bound
adc
jbe
ins
stos
mov
add
inc
test
or
dec
pop
arpl
cmc
inc
add
and
fistp
and
pop
repz
mov
push
test
shl
lock
loopne
sbb
in
mov
xchg
push
cmp
daa
mov
sbb
mov
pop
icebp
call
out
(bad)
addr16
test
push
pop
dec
jp
fwait
out
hlt
out
cmp
iret
repz
iret
inc
stos
pop
or
scas
jns
ucomiss
imul
es
das
in
ins
mov
test
mov
dec
out
dec
add
test
cli
inc
sbb
inc
aaa
jmp
(bad)
aad
shl
cdq
nop
adc
or
shl
and
mov
addr16
xchg
sub
inc
dec
sbb
jmp
js
test
dec
nop
sar
test
shr
mov
aaa
out
push
inc
in
adc
mov
sub
push
add
pop
push
enter
mov
add
cmp
rep
loopne
and
sub
ins
cmps
stc
xchg
test
repnz
push
cli
inc
out
jns
ss
cmps
cli
out
jecxz
sti
dec
dec
dec
sqrtpd
daa
daa
and
repz
outs
xchg
test
bswap
daa
daa
and
dec
out
xchg
movs
daa
call
lock
leave
leave
cmps
aad
and
outs
jns
jb
(bad)
jge
cmp
sbb
pop
xchg
fistp
cmp
cdq
or
xchg
pop
sub
lahf
ja
push
add
hlt
or
mov
lahf
add
cmp
in
dec
test
cmps
add
in
pop
ins
sub
cmp
nop
mov
or
inc
mov
pop
add
mov
inc
jge
ins
push
mov
fcomp
pop
hlt
pop
add
pop
xchg
sbb
mov
pop
xchg
push
and
mov
cmc
mov
add
push
add
adc
or
hlt
pop
adc
rcl
inc
dec
jno
unpckhps
inc
pop
pusha
mov
jae
push
sub
mov
add
retf
or
scas
add
mov
inc
add
cmp
xchg
dec
popa
pop
sub
or
push
push
mov
mov
dec
mov
stos
fiadd
dec
sub
mov
pusha
inc
test
mov
and
mov
inc
test
xor
cmp
and
test
mov
test
adc
mov
dec
mov
mov
add
add
lds
dec
jne
add
sbb
or
test
in
aam
mov
mov
mov
add
rcr
add
daa
pop
ret
adc
sbb
rcr
loopne
push
xchg
xchg
out
add
add
and
aam
stos
cmc
cmp
push
mov
sbb
mov
push
jb
loopne
rol
iret
mov
pop
int3
das
jmp
(bad)
loope
ret
mov
cs
add
xchg
lmsw
into
or
scas
aaa
inc
popa
mov
sub
test
sbb
gs
add
add
or
pop
add
sub
mov
or
dec
in
adc
xchg
push
jecxz
mov
out
(bad)
add
sub
arpl
mov
adc
mov
sub
push
jns
push
mov
pop
outs
or
test
pop
cmps
xor
inc
jmp
or
xor
xchg
out
mov
sahf
cmovo
popf
out
cmp
or
or
xor
nop
icebp
xor
loopne
outs
ret
nop
xor
sub
adc
imul
xchg
jno
movs
adc
adc
mov
std
cmp
fs
lock
or
cld
das
sbb
loop
in
pop
mov
lock
clc
add
ins
cmp
out
dec
pop
jle
or
or
or
push
mov
add
pop
cwde
inc
add
lock
pop
int
or
push
daa
dec
ret
push
add
inc
mov
pop
xlat
pop
std
fisub
push
test
push
mov
test
jno
sub
sub
sar
add
adc
addr16
push
ror
inc
aam
gs
dec
push
push
enter
dec
inc
leave
push
imul
popf
dec
pop
loopne
pmulhw
cmp
or
mov
std
movs
or
mov
ins
leave
mov
pop
addr16
in
xchg
sbb
pop
sub
xchg
std
sub
lock
adc
push
loopne
sub
add
ud0
xor
xor
movups
and
add
retf
retf
sub
push
in
pop
adc
adc
aam
cmp
pop
popf
xchg
xor
rcl
xor
mov
dec
int
and
jo
in
push
int3
sbb
or
and
push
sbb
cmps
and
sub
sub
xor
inc
xchg
xchg
movs
xor
repz
shl
cmp
mov
repz
or
inc
addr16
jno
add
jbe
mov
loope
push
mov
aaa
and
pop
mov
adc
sub
pushf
fisttp
mov
paddusb
gs
mov
xor
(bad)
in
enter
and
(bad)
xchg
inc
repnz
enter
and
and
call
pop
cmc
or
cmp
or
in
das
or
fucomip
loope
in
and
xor
mov
mov
push
lods
cmp
sub
aas
loope
pop
mov
inc
imul
fld
fist
retf
push
add
fild
push
inc
retf
aaa
or
shl
xlat
pop
std
arpl
add
fst
sbb
das
stos
mov
xor
rol
push
push
pusha
xor
(bad)
rcr
ficom
adc
add
arpl
add
dec
shl
sbb
sbb
or
add
sbb
cmp
clc
sbb
sbb
sbb
sbb
ror
call
sbb
out
add
sbb
add
add
dec
push
shl
add
dec
int3
dec
pop
and
(bad)
xchg
inc
repnz
sbb
sbb
add
fwait
das
mov
jmp
das
and
sbb
cmp
sbb
sbb
pop
fisub
fcomp
sbb
ja
adc
in
les
hlt
push
pop
pop
inc
and
outs
cdq
sbb
sbb
add
jno
loopne
or
or
mov
hlt
popf
int
sub
lock
popf
retf
(bad)
mov
jnp
mov
iret
pop
push
add
add
dec
add
add
xor
mov
xor
pushf
sub
sub
pop
and
push
les
add
jns
push
fild
in
and
stos
xlat
lock
cmps
int
xlat
sar
and
mov
pop
xor
push
mov
(bad)
and
stc
cmovno
xlat
sub
shl
mov
mov
pop
leave
sub
pusha
loope
loope
pop
jecxz
repnz
pusha
loope
and
cmp
xchg
mov
pop
fucom
adc
xchg
cmp
lock
inc
aam
pop
dec
das
data16
(bad)
bnd
mov
xchg
and
and
or
jns
xor
adc
ins
(bad)
pop
add
shl
das
mov
cwde
(bad)
xchg
adc
int
add
sti
retf
mov
fsub
inc
pop
fld
jecxz
loopne
adc
cmp
xchg
add
test
pop
test
sub
ret
inc
fldlg2
data16
sbb
sbb
dec
sub
xor
and
mov
sub
es
pushf
and
inc
add
(bad)
cmp
daa
test
lock
test
aaa
cmp
mov
xor
call
jb
repz
in
leave
and
call
sbb
je
enter
(bad)
mov
std
sbb
jge
xor
or
jg
inc
inc
imul
xor
xor
push
cld
shr
mov
push
mov
push
mov
push
inc
arpl
adc
adc
add
push
sub
and
dec
fucomip
cmp
add
sub
push
sub
xor
ret
mov
push
ins
dec
pop
cdq
(bad)
jo
aas
add
inc
jb
inc
adc
or
xor
mov
add
add
add
mov
dec
mov
call
mov
dec
xor
mov
sub
out
and
scas
adc
inc
inc
arpl
inc
fadd
push
dec
pusha
fwait
outs
add
add
stc
dec
inc
add
adc
push
js
jne
je
pop
pop
adc
or
pop
rcr
aas
inc
imul
push
mov
clc
and
gs
pop
add
ins
or
push
in
or
inc
stos
push
std
test
rol
inc
fimul
rcl
test
outs
pop
sub
xchg
jae
pop
mov
pop
sbb
mov
xchg
push
or
sbb
mov
pop
and
jmp
add
(bad)
or
xor
sbb
push
in
inc
ins
je
rcl
pop
ror
sbb
push
enter
sub
outs
adc
inc
dec
ins
data16
outs
ja
call
pop
xor
mov
popa
inc
outs
out
push
or
jmp
pop
ret
pop
not
ss
xor
adc
push
mov
sub
(bad)
jg
fiadd
or
jmp
adc
push
add
add
mov
adc
jne
adc
std
mov
dec
adc
rol
jmp
mov
add
and
(bad)
arpl
pop
iret
rep
pop
movs
mov
push
add
add
scas
add
push
fsubr
sbb
fdiv
lea
(bad)
fild
or
add
or
add
jne
dec
cmp
lock
xor
add
dec
jne
cmp
jo
test
aaa
mov
mov
sub
test
sar
add
adc
inc
add
and
jmp
pop
or
jne
dec
inc
xchg
into
sbb
sbb
js
inc
push
mov
lods
or
cs
popa
je
ds
mov
xor
ss
push
iret
sti
sub
test
mov
sar
scas
rcl
sbb
push
add
add
in
(bad)
sbb
cmp
cmp
jl
or
sub
ret
add
imul
daa
and
add
jo
and
add
or
sub
sub
add
mov
adc
inc
adc
xor
inc
mov
add
sbb
push
sub
fild
or
mov
or
cmp
or
push
mov
xchg
add
pop
or
dec
or
add
test
and
das
fcmovu
xchg
add
or
add
sbb
test
jbe
push
clc
xor
mov
lock
push
jmp
inc
push
xor
push
mov
mov
in
xor
xor
mov
js
pop
xlat
jle
mov
mov
aas
mov
cmp
jge
test
(bad)
jg
xor
pop
or
add
sbb
mov
pop
push
add
add
sbb
adc
ret
out
sti
sub
not
and
jp
jmp
sub
jb
punpcklbw
push
sbb
ret
xor
pop
and
cs
out
mov
xchg
jo
daa
popf
lods
clc
adc
adc
call
call
pop
hlt
inc
sar
retf
and
fild
es
dec
inc
add
clc
adc
jmp
lock
mov
jne
xor
fiadd
ret
clc
adc
mov
fs
pop
add
aaa
mov
push
fadd
loop
sbb
fs
outs
imul
inc
xor
in
and
and
dec
ret
test
or
mov
and
jecxz
sbb
inc
aas
push
sub
mov
mov
add
and
out
imul
adc
push
add
add
loopne
push
xor
push
add
push
sti
pop
sti
and
fsub
ds
jne
div
mov
cmp
and
push
sbb
mov
aaa
sbb
dec
fld
dec
xchg
ja
dec
or
mov
inc
push
cmp
push
pop
push
pop
cmc
mov
and
pusha
mov
(bad)
sbb
dec
add
push
outs
test
sti
add
jge
add
nop
mov
cwde
lock
add
ds
inc
lea
mov
sub
ret
mul
stos
call
cmp
dec
mov
loope
push
sar
lock
sub
mov
outs
into
mov
clc
gs
and
pusha
lock
pop
je
xchg
cmp
mov
mov
cld
imul
mov
cmps
fld
inc
xor
or
fldcw
outs
adc
in
mov
lock
push
cs
or
pop
sub
mov
push
std
cmc
and
dec
sbb
mov
sbb
cmp
and
loopne
mov
adc
or
add
cmp
and
jmp
adc
xchg
and
pop
mov
adc
xrelease
lea
mov
sbb
jmp
push
and
and
xlat
and
cmp
push
lock
stos
adc
sub
ins
loopne
test
dec
add
add
mov
repz
fsubr
(bad)
cmp
(bad)
sbb
ror
sub
jo
jmp
or
xchg
out
xchg
inc
cmp
pushf
aad
cs
pusha
dec
loop
mov
sbb
ss
fcom
dec
sub
inc
mov
clc
(bad)
sbb
(bad)
sub
push
mov
es
inc
mov
das
jmp
aad
push
sbb
jnp
mov
pop
and
nop
pusha
or
ds
xor
dec
fstp
ins
inc
jbe
lods
lods
adc
jp
sub
pop
es
jmp
jmp
and
cs
je
mov
pop
sbb
push
sbb
inc
mov
fimul
dec
adc
inc
ja
inc
push
mov
add
xor
push
mov
cmp
sbb
out
(bad)
adc
in
int
sub
cmp
test
jge
mov
rol
int
jp
sub
jge
sub
mov
(bad)
neg
add
xor
rcl
(bad)
popf
inc
mov
lea
call
aas
js
cmp
mov
mov
fmul
imul
rol
cmp
or
mov
enter
sbb
daa
in
inc
js
sbb
mov
das
xlat
dec
(bad)
jo
scas
aad
sbb
addr16
dec
mov
push
push
lods
add
(bad)
hlt
pop
ins
xor
add
lea
push
push
push
or
cmovs
mov
(bad)
out
scas
scas
push
popa
fwait
ds
es
mov
rol
mov
mov
loop
test
push
shr
mov
shl
mov
jmp
push
cmp
mov
or
add
xchg
cli
nop
je
and
ffreep
or
jge
cmp
jae
and
add
pop
jmp
arpl
cmp
fs
add
mov
(bad)
js
push
push
icebp
add
popf
push
stos
inc
in
cmp
inc
out
and
jle
dec
push
inc
adc
jl
clc
aaa
or
cmp
jo
not
das
push
add
add
shl
inc
in
sbb
sub
aam
adc
lock
and
jmp
push
pop
jmp
inc
popf
(bad)
dec
push
jne
movs
mov
js
ret
pop
lock
mov
sub
mov
cmp
test
rol
xchg
fisttp
adc
jmp
out
and
lds
loope
call
rcl
jmp
xlat
shl
test
cmp
lds
sbb
or
pop
dec
cmp
sar
inc
ror
push
ja
and
loop
xchg
push
sbb
in
and
mov
movs
in
mov
mov
std
adc
add
enter
addr16
mov
adc
cmps
and
jo
arpl
popf
mov
pop
mov
xchg
or
cwde
test
ins
cmc
repnz
or
adc
sti
jecxz
add
sub
xor
cld
mov
add
inc
push
add
adc
pop
mov
or
xor
pop
xor
push
inc
inc
fcom
int3
dec
and
sbb
es
xor
push
fcomp
mov
in
enter
shl
mov
add
or
adc
les
cmp
popf
adc
xchg
mov
xor
out
lea
jmp
lea
arpl
popf
xor
mov
add
test
push
cld
jmp
mov
out
sub
ja
jo
inc
outs
sar
sbb
aaa
adc
retf
push
mov
sub
and
scas
adc
retf
sub
scas
call
sbb
popf
call
and
mov
xor
fucom
sbb
sbb
cmp
add
adc
jge
fsubr
idiv
in
xchg
jne
xor
jmp
dec
js
inc
dec
loopne
test
jnp
lods
and
pop
dec
add
or
xor
sub
sbb
jle
cmp
je
pop
sub
(bad)
data16
jne
xor
xor
or
and
xchg
in
cmp
fwait
pop
lgs
arpl
sub
popa
aad
mov
push
sbb
sub
cmp
sub
xchg
mov
lds
popa
cmp
jo
sbb
or
sbb
jnp
mov
mov
or
daa
sti
in
pop
dec
daa
adc
sar
test
sbb
mov
loopne
popf
xchg
ret
xor
jle
idiv
and
push
fmul
or
je
and
add
and
lock
icebp
(bad)
std
mov
das
fdivr
inc
inc
cdq
popa
cmps
lea
jne
mov
mov
sbb
pop
jno
(bad)
es
xor
dec
adc
ds
test
pop
inc
imul
or
inc
mov
inc
mov
test
ins
push
mov
add
inc
fdivr
push
test
xchg
xchg
(bad)
aad
xor
and
lods
xchg
adc
xor
cmp
and
pusha
mov
adc
sub
lea
jae
jns
ret
add
fild
sub
shl
mov
fisttp
ins
jmp
xor
inc
jo
xor
add
mov
shr
mov
mov
inc
pop
test
add
je
or
test
lods
test
in
shr
or
add
or
das
out
test
cmp
je
dec
add
add
sti
inc
adc
aam
rol
neg
cmp
push
cmp
sub
fild
or
ret
sub
or
cld
jle
mov
sub
xchg
push
movzx
sub
mov
jnp
std
sub
(bad)
and
jl
ror
cmp
jle
ins
adc
push
popf
aaa
jmp
add
or
xor
fbld
jmp
aas
add
sbb
sahf
add
inc
add
bound
add
das
xor
push
jmp
retf
mov
dec
xor
mov
sub
cmp
push
add
and
fidiv
fisubr
(bad)
push
cmp
dec
pop
and
inc
outs
fimul
movzx
sbb
xor
fdivr
jecxz
cli
adc
inc
or
pop
xchg
add
lea
test
loopne
sub
shl
xor
(bad)
mov
cld
mov
pop
cmp
add
xor
outs
test
inc
sbb
inc
add
stos
add
int
mov
jp
inc
rep
pusha
add
aaa
je
fcomp
icebp
movs
pop
hlt
dec
inc
add
(bad)
sbb
pop
cmp
clc
fwait
push
dec
add
dec
adc
xor
push
jno
mov
data16
ins
pop
cmp
xchg
arpl
mov
xchg
jmp
push
(bad)
lock
mov
lea
xchg
ror
call
aam
jle
dec
test
fldenv
loope
xor
sub
xor
movs
rcl
mov
retf
dec
test
imul
push
lock
call
ror
imul
pop
arpl
xor
sar
add
int
cmp
adc
enter
fwait
add
test
push
mov
outs
inc
mov
and
repnz
fistp
mov
dec
sbb
push
mov
add
and
add
fadd
inc
ret
popf
pop
sub
punpckldq
cld
ss
inc
xor
or
push
fistp
data16
call
push
ins
dec
cdq
sub
dec
sahf
mov
les
cld
push
inc
push
mov
jo
cmp
push
jl
pop
out
js
enter
js
add
dec
add
add
mov
cmp
pop
add
clc
jg
push
add
dec
xchg
xchg
adc
jmp
pop
xor
aas
push
and
sbb
inc
inc
add
rcr
xchg
aam
mov
inc
outs
jo
and
pop
add
pop
inc
cmp
inc
sbb
outs
jne
and
sbb
stos
retf
sub
inc
and
cmps
popa
jae
push
(bad)
jmp
push
xchg
or
jbe
push
outs
das
int3
mul
add
fiadd
aam
push
sbb
scas
and
sub
scas
dec
and
sub
lods
cs
or
mov
pusha
mov
add
jl
add
push
ror
or
lods
mov
or
int
cwde
sbb
sub
inc
out
and
out
loopne
clc
inc
hlt
imul
pop
mov
outs
aas
in
dec
pusha
in
add
fs
dec
mov
adc
jl
mov
out
retf
repnz
movsx
dec
dec
mov
loope
lea
mov
lea
dec
outs
xchg
inc
or
dec
xchg
imul
sar
pop
cmps
dec
addr16
dec
enter
add
adc
rcr
dec
xor
add
and
mov
add
int
push
lock
add
add
scas
or
les
(bad)
xor
xchg
adc
ss
shl
repz
fcom
sbb
pop
sbb
bound
call
pop
shr
pop
lds
mov
jno
pop
mov
xchg
jmp
sub
add
data16
dec
ss
or
inc
and
inc
push
dec
push
cli
add
je
jge
rol
add
or
cmps
xlat
sbb
add
mov
add
mov
mov
jge
mov
cmp
pop
push
ins
ss
inc
sbb
xchg
hlt
mov
or
fld
cmp
sub
scas
dec
mov
or
cmps
dec
jnp
retf
xor
xor
xlat
hlt
push
push
dec
les
add
sbb
aas
sbb
inc
xor
hlt
je
jmp
in
and
imul
fs
mov
mov
mov
cmps
aam
rcr
sub
add
loope
in
test
in
dec
jmp
dec
arpl
or
mov
xor
and
popa
pop
cwde
fdiv
aas
adc
pop
sbb
das
mov
aas
les
add
aam
rol
mov
mov
inc
data16
(bad)
addr16
cmp
jne
sub
je
or
adc
sub
add
add
adc
sbb
xlat
add
aaa
cld
mov
xchg
ins
enter
sub
add
int3
popa
jae
pop
stc
hlt
popa
enter
nop
imul
icebp
add
sub
repnz
les
loop
mov
aas
or
push
lea
sbb
xor
arpl
in
mov
xchg
or
pop
ins
add
mov
xor
fstp
fwait
ret
cmp
mov
push
mov
pop
jno
mov
rol
int3
dec
mov
sub
(bad)
shl
pop
mov
adc
jecxz
inc
sub
mov
cmps
js
loope
sub
or
push
add
loope
xor
dec
in
mov
or
sub
and
test
pop
pop
clc
dec
push
lock
loopne
hlt
and
in
jmp
and
mov
hlt
add
sbb
or
fcomp
clc
dec
shl
dec
rol
jb
test
or
jg
js
mov
das
or
inc
ins
jecxz
sbb
or
js
push
shl
pop
jne
daa
stos
out
lea
mov
imul
mov
add
pop
mov
mov
push
retf
or
sub
push
mov
jmp
cmp
add
outs
pop
stos
dec
add
push
sub
sub
mov
iret
and
pop
sbb
outs
mov
add
push
fld1
pop
cmp
mov
sub
mov
inc
push
in
xlat
ja
xor
jae
mov
lea
push
and
fisttp
into
add
test
add
jo
fnstenv
lods
add
sub
push
fs
fscale
adc
pushaw
gs
mov
push
in
mov
lods
nop
or
jecxz
jmp
sbb
out
icebp
adc
lea
lea
sub
pop
inc
movs
ret
or
mov
inc
ret
nop
adc
or
jo
or
movs
popf
mov
add
jnp
pop
jo
add
(bad)
cdq
in
test
add
cld
int
add
sbb
jne
(bad)
rcr
push
sbb
and
push
arpl
and
iret
mov
test
xchg
and
shld
data16
je
dec
daa
arpl
fld
cmp
or
pop
add
mov
mov
test
push
push
pop
xor
push
push
enter
mov
pop
imul
pop
sub
sub
repnz
aas
outs
pop
sbb
in
in
mov
push
add
in
inc
push
fwait
push
repnz
sbb
add
nop
cmp
push
dec
push
sub
jb
in
push
pop
imul
sbb
cmps
push
popf
adc
adc
test
pop
enter
sub
nop
push
cmp
pop
aad
push
mov
or
dec
dec
daa
cmps
(bad)
and
in
punpcklbw
jne
addr16
cmp
outs
pop
and
test
bound
jge
fs
add
push
xchg
bound
in
or
pushf
sub
push
mov
jb
push
adc
push
test
inc
add
jns
xchg
pop
rcr
jo
pop
pop
leave
and
test
gs
pop
mov
cmps
fsubr
cmp
sbb
sbb
pop
pop
pushf
gs
push
pop
pop
pop
das
xor
test
jg
in
push
sub
cwde
dec
clc
pop
daa
rcr
pop
push
cdq
jbe
push
and
ja
daa
pop
das
pop
add
or
gs
push
push
imul
mov
pusha
add
cmp
lods
jmp
mov
adc
pusha
xor
repz
int3
pop
sub
jecxz
dec
leave
inc
dec
imul
push
ins
imul
xor
xlat
or
mov
adc
push
lds
adc
mov
mov
addr16
loop
loopne
add
mov
add
and
rol
jns
sbb
inc
fwait
push
and
outs
sbb
and
inc
outs
pop
pop
pusha
add
or
xlat
and
or
adc
dec
jns
cmps
aam
aaa
pop
mov
mov
(bad)
or
push
lds
shr
outs
add
mov
inc
push
rol
jae
call
(bad)
clc
push
cmp
dec
hlt
(bad)
clc
das
inc
jecxz
and
push
mov
inc
sbb
js
xor
sti
mov
bound
(bad)
cmp
mov
inc
es
in
mov
aas
push
sbb
add
cdq
xchg
sbb
pop
cmp
lods
lea
add
xchg
retf
out
push
xor
and
xchg
xchg
xchg
arpl
(bad)
xchg
out
pop
jno
push
sub
pop
dec
test
add
pushf
pusha
cs
add
js
pop
das
ins
push
sbb
pop
sbb
lods
cmovg
sbb
pop
fwait
mov
psllw
pop
pop
test
out
pusha
cmp
jne
or
pop
pop
pop
dec
pop
adc
cwde
pusha
cwde
pusha
repnz
pop
and
jl
pusha
add
outs
xlat
dec
nop
mov
mov
nop
sub
idiv
jge
lods
jns
invd
mov
lgs
or
pop
leave
cwde
jg
mov
pop
pop
mov
pop
mov
pusha
jnp
jle
mov
lea
lock
call
jg
add
mov
lahf
xchg
loope
dec
or
add
push
dec
jns
imul
or
into
or
pop
pusha
in
dec
cdq
push
in
popa
stos
mov
in
xchg
loope
hlt
or
push
mov
add
inc
and
out
dec
cmp
aaa
adc
jne
xor
add
add
jns
(bad)
or
or
add
aam
outs
enter
aaa
xor
and
(bad)
enter
push
sbb
jne
sub
(bad)
push
add
mov
mov
and
arpl
dec
dec
mov
scas
cs
cwde
pop
mov
push
pop
ins
mov
fs
arpl
popf
and
mov
arpl
setb
arpl
arpl
jge
xchg
das
pusha
jp
pop
inc
rcl
mov
pop
gs
add
mov
sub
mov
pop
push
mov
jl
popf
int3
outs
pop
shr
sbb
fdiv
fcom
int3
or
sbb
xchg
add
das
rcl
enter
add
gs
enter
(bad)
sub
ins
lea
das
sbb
pop
fadd
and
mov
pop
in
fcom
jo
push
or
inc
enter
sub
rcl
fsub
das
dec
push
adc
imul
and
push
add
aam
sub
dec
or
adc
shl
push
add
and
nop
or
int3
xor
sar
add
fadd
push
or
inc
stc
add
or
rcr
lahf
and
fiadd
bound
jbe
das
and
test
inc
push
mov
sbb
ins
add
rcl
xor
dec
jp
ins
outs
or
lds
lock
clc
mov
imul
lods
and
rcr
in
push
pushf
sub
mov
pop
ja
adc
call
sbb
push
fmul
(bad)
adc
repz
or
cmp
and
or
hlt
push
(bad)
push
add
dec
sub
mov
sub
xor
cmp
cmps
daa
pusha
shl
pop
fdivr
push
ins
push
push
loop
adc
mov
push
sub
or
cmp
repz
or
or
adc
push
adc
adc
xchg
aas
pop
add
push
push
ja
scas
inc
add
pusha
inc
enter
sahf
cmps
cdq
inc
push
push
or
or
jns
out
or
push
mov
adc
pop
ret
adc
into
cmps
enter
sub
test
jne
inc
sahf
arpl
cmp
or
mov
or
sbb
in
push
push
push
ficom
sar
adc
push
jle
rcl
mov
and
mov
cs
dec
scas
clc
add
and
fs
out
ffree
aaa
aam
mov
idiv
inc
(bad)
arpl
lea
movs
add
cld
xor
mov
ins
fisttp
dec
mov
jne
push
rcl
inc
inc
dec
lock
sbb
add
and
jl
xchg
mov
retf
in
xor
pop
jnp
push
or
sub
jle
push
das
popf
imul
add
inc
js
mov
shl
add
pop
push
shl
mov
sub
ja
ret
push
or
(bad)
dec
or
push
add
and
push
pusha
ja
and
ins
jae
inc
ins
add
adc
add
add
inc
mov
nop
pushf
jp
xchg
ins
inc
dec
test
in
jb
xor
loopne
xor
inc
pop
and
loopne
xor
and
inc
shr
dec
leave
sub
outs
add
test
(bad)
sbb
mov
(bad)
push
call
lds
movs
inc
nop
push
pop
mov
rol
pand
iret
mov
mov
aas
mov
je
jmp
ins
jmp
push
mov
pop
ret
cmp
xor
sbb
mov
cwde
sbb
sub
fsubr
icebp
mov
ja
jl
adc
call
inc
sbb
push
dec
add
sbb
call
in
es
and
and
sar
ja
out
stos
ins
add
das
sbb
jb
sub
clc
repz
or
ja
or
jbe
dec
jo
xchg
les
add
or
std
fcomip
scas
jecxz
xor
lds
out
inc
mov
mov
test
cmp
cmp
cmp
add
lea
and
arpl
mov
sub
cmp
sub
popa
mov
sub
adc
scas
xchg
mov
stos
adc
pusha
pop
push
xchg
int3
pop
cmp
xchg
add
dec
dec
lea
ins
dec
xchg
fimul
inc
or
in
jbe
mov
int3
enter
mov
adc
in
bound
adc
lea
dec
mov
mov
add
mov
rcl
nop
pop
sar
mov
enter
cmp
jo
icebp
mov
in
fidivr
repnz
mov
xlat
push
sub
jne
bound
test
xchg
jb
leave
lods
test
add
add
lahf
inc
dec
xchg
popa
enter
push
add
dec
and
jo
xor
int
cmp
jle
and
xor
nop
xor
or
ja
bound
cs
movs
lea
mov
or
add
pop
sub
xor
dec
scas
cmp
jb
mov
push
out
mov
pop
inc
push
daa
xchg
mov
pop
pop
and
cmp
sbb
dec
pop
adc
mov
sti
pop
pop
enter
jne
cmps
mov
xor
sbb
nop
mov
add
push
cdq
sbb
mov
ja
mov
in
mov
(bad)
in
mov
push
les
popf
mov
cmp
popa
bound
ins
inc
stos
pusha
dec
mov
add
sub
gs
inc
(bad)
push
dec
or
mov
push
xchg
push
inc
add
movs
push
cvtps2pi
or
add
fst
push
sahf
pop
jecxz
call
xor
test
out
fmul
pop
cmp
pop
into
or
inc
or
add
mov
add
jp
jmp
cmp
sub
cmps
xor
sbb
mov
imul
lock
cmp
sbb
cmps
sbb
mov
mov
inc
sbb
xlat
movs
rcl
test
fmul
dec
cmp
test
mov
clc
aas
fs
mov
jo
dec
daa
push
lods
add
mov
rcl
aam
pop
loop
xchg
(bad)
rep
dec
test
pop
pop
pop
and
mov
or
or
out
pop
add
mov
repnz
mov
call
xchg
je
or
jl
xor
jae
push
jnp
push
sbb
aam
loope
fadd
lea
movs
out
dec
adc
inc
xor
adc
cmps
mov
mov
mov
inc
clc
add
fild
cdq
xor
sub
sbb
push
out
pop
call
xor
pop
scas
xor
push
mov
add
(bad)
push
add
dec
cld
sbb
jmp
aaa
pop
mov
movs
mov
and
test
cmp
outs
and
pushf
scas
push
popa
cmp
add
sub
dec
cmp
sub
cld
lods
ja
or
push
jg
hlt
jl
adc
jg
or
out
sub
dec
movs
in
jo
inc
dec
cmp
cli
js
inc
adc
repz
and
fmul
jmp
or
add
pop
fmul
clc
out
and
sub
lea
add
lock
nop
sti
xor
xor
cdq
rol
or
sbb
jle
sbb
lods
adc
clc
add
test
or
test
loope
mov
or
ror
in
inc
sub
mul
cmp
cmps
fadd
adc
or
adc
in
pusha
ins
adc
or
or
mov
dec
jae
jns
add
imul
shl
std
fiadd
je
test
jmp
add
fs
orps
add
or
or
sbb
cmps
inc
xchg
dec
jmp
dec
and
pushw
sub
xlat
mov
add
sbb
jl
sbb
adc
ja
(bad)
iret
retf
iret
(bad)
xchg
jecxz
imul
les
loope
or
repnz
xchg
clc
clc
or
aaa
nop
pop
or
pop
pop
int3
jnp
sub
cli
mov
or
retf
cmp
retf
jae
(bad)
or
ret
xchg
bswap
or
push
adc
mov
cmp
or
add
jle
pop
xor
stos
enter
popa
pusha
sub
add
pushf
jg
cmp
out
inc
sub
jnp
lock
test
inc
mov
sbb
mov
xor
xor
popf
out
(bad)
jne
mov
scas
sub
jo
in
cmp
mul
or
add
movs
les
inc
add
push
adc
daa
push
enter
add
aad
cwde
mov
je
add
inc
es
cmp
das
or
or
or
sbb
cs
mov
jne
sub
xlat
ds
push
arpl
xchg
cmp
add
or
data16
fstp
in
pop
imul
sub
ret
jmp
pop
test
leave
add
push
mov
sub
call
mov
pop
cld
xchg
mov
mov
popa
push
imul
push
sbb
and
pop
jecxz
inc
cwde
popf
ins
lea
sbb
ins
adc
mov
xor
cmc
sbb
sbb
retf
outs
or
mov
addr16
repz
dec
jle
cmp
add
pop
pop
jo
sbb
(bad)
in
rol
adc
push
sub
push
adc
outs
xor
lds
mov
aaa
push
jl
les
imul
in
(bad)
xchg
jl
shr
pop
push
ins
push
dec
jnp
mov
sysexit
or
mov
push
sbb
lock
sahf
and
push
and
lock
dec
cmps
mov
pop
adc
push
cdq
movs
adc
push
dec
gs
retf
or
retf
(bad)
push
fiadd
inc
movs
test
and
pop
xchg
xor
aam
aam
jbe
xor
mov
and
fcmovnb
adc
push
(bad)
in
ss
xorps
in
in
pop
pop
pop
pop
in
in
pop
pop
inc
inc
in
in
inc
inc
inc
inc
in
in
inc
inc
dec
dec
in
in
dec
dec
dec
dec
in
in
dec
dec
xor
in
in
xor
xor
in
in
ss
cmp
in
in
cmp
cmp
in
in
ds
and
in
in
and
and
out
in
es
sub
sbb
mov
push
xor
mov
jb
mov
aaa
mov
inc
(bad)
cmp
sub
sub
adc
mov
sub
xor
jmp
fcmovne
movs
mov
xor
das
call
sub
nop
sub
aaa
aas
int
lea
cmp
cdq
lock
pop
inc
sbb
cld
add
inc
inc
push
mov
jg
push
clc
sub
arpl
sti
jg
jb
push
inc
inc
inc
inc
or
inc
dec
dec
push
dec
dec
push
inc
or
inc
inc
dec
pop
std
(bad)
fidivr
dec
dec
es
push
push
push
push
pop
inc
push
add
xlat
fdivrp
test
inc
inc
dec
inc
dec
inc
push
push
dec
push
push
pop
and
push
jne
ss
jle
inc
push
push
pop
adc
inc
bound
in
outs
sbb
outs
icebp
jae
fadd
(bad)
xlat
xor
outs
outs
or
jo
inc
loopne
add
push
dec
adc
aad
jle
push
gs
out
xchg
xchg
es
mov
inc
or
xor
das
pop
test
iret
adc
jecxz
cmc
add
dec
inc
dec
or
popa
movs
lods
jg
outs
les
fidivr
shufps
adc
leave
addr16
push
add
clc
and
xor
pop
mov
inc
jns
adc
or
adc
imul
dec
sbb
mov
ja
add
test
adc
push
push
aad
xlat
adc
jo
push
add
or
dec
lods
xor
iret
pop
sub
or
jg
mov
sub
xor
pop
cld
xchg
xlat
and
scas
rcr
mov
add
scas
movnti
push
mov
mov
push
add
mov
or
popa
xor
test
mov
or
and
or
(bad)
add
add
stos
sub
and
ficom
or
dec
sbb
add
xor
adc
mov
add
movs
pop
and
push
adc
imul
inc
pusha
das
ret
jnp
and
add
or
sbb
aam
jo
(bad)
push
in
movs
or
add
push
pop
xor
mov
ss
add
sbb
mov
inc
jle
xor
pushf
mov
mov
jo
push
jns
dec
jns
mov
dec
push
dec
enter
das
fdiv
sbb
mov
fcmovnb
mov
(bad)
lods
and
gs
or
mov
sbb
in
lock
in
mov
push
call
inc
dec
jne
mov
std
inc
push
fsub
loope
syscall
ins
and
dec
stos
add
add
adc
retf
sbb
js
or
xor
sar
std
push
push
rol
sti
mov
push
push
xchg
scas
sub
push
loopne
mov
fmul
xchg
push
aam
dec
pop
popa
add
data16
test
data16
add
adc
fist
call
xchg
xor
repnz
rcr
ss
fwait
clc
or
adc
cmp
mov
or
rcl
xchg
clc
sub
jnp
sbb
inc
adc
cdq
int3
cmp
jle
pop
int3
loopne
scas
mov
nop
cmp
add
jle
pusha
fiadd
jg
or
or
shr
push
lahf
dec
xchg
cwde
loopne
pop
ret
xlat
add
jns
aas
(bad)
push
lds
lea
and
dec
cs
retf
inc
(bad)
aam
lods
push
ror
test
cmp
inc
cwde
add
rol
adc
push
cld
cwde
add
aad
popf
inc
mov
adc
sbb
mov
movs
movs
cmc
daa
cs
sahf
add
and
sub
or
cmp
push
cs
pop
out
aam
test
outs
jl
test
cmps
jne
fstp
pop
jp
and
adc
push
push
call
cmp
inc
adc
add
pop
sbb
and
into
or
fistp
add
add
mov
out
push
add
shl
loopne
add
je
jb
mov
push
in
cmp
push
mov
inc
inc
inc
xor
leave
sahf
sbb
cmp
push
lock
int3
ret
add
retf
movs
jmp
or
cld
inc
push
add
dec
jmp
lea
popf
add
mov
cld
int
xor
lea
cs
add
jmp
fsubr
jae
popa
xor
fmul
and
sbb
dec
adc
dec
xchg
xchg
lods
das
adc
lods
nop
dec
in
retf
lar
sub
out
xor
push
pusha
inc
mov
cli
pop
call
fidiv
mov
jmp
push
cmp
ds
add
mov
ret
adc
inc
mov
cld
xor
in
pop
mov
adc
pusha
jo
mov
pop
or
jo
ror
or
or
nop
push
imul
dec
retf
ror
(bad)
sub
sar
rol
or
inc
call
ins
jmp
in
adc
shl
push
call
and
daa
clc
add
or
in
push
or
mov
call
inc
imul
mov
call
adc
shl
cmp
mov
pop
rcl
jo
mov
pop
fldenv
or
dec
add
jmp
inc
pop
nop
add
adc
clc
rcr
mov
test
jnp
pop
loopne
retf
je
mov
or
test
loopne
loope
push
lock
adc
sub
push
jmp
scas
mov
test
add
inc
in
sbb
je
dec
aam
aam
dec
jge
aam
mov
adc
sbb
xchg
inc
dec
sbb
jg
add
xor
xchg
out
and
inc
call
pop
in
or
sar
pop
popa
fbstp
and
push
dec
aad
mov
arpl
int
add
inc
icebp
and
clc
sub
jb
and
add
add
cmp
or
lea
or
jo
mov
sbb
inc
mov
xchg
push
cwde
dec
(bad)
sub
test
pop
and
shr
cpuid
jo
xchg
lock
bound
sahf
push
add
popa
and
push
push
and
cld
leave
fisub
add
je
mov
add
mov
mov
imul
(bad)
jle
pop
push
push
mov
loopne
popa
and
add
int3
xlat
int3
cmp
push
shr
retf
test
push
fiadd
lahf
cmps
jb
sahf
add
inc
add
add
inc
or
hlt
xor
outs
xchg
test
cld
cmp
nop
push
mov
movs
inc
das
mov
or
jbe
jmp
pop
sub
add
(bad)
outs
mov
pop
sub
inc
cdq
mul
jmp
add
mov
call
daa
or
adc
mov
dec
add
lock
repz
xchg
cld
sub
lock
add
ins
pop
lods
mov
pop
cmps
jmp
jge
push
nop
sub
or
or
mov
xchg
adc
mov
outs
pusha
adc
adc
ror
push
or
pop
out
mov
adc
push
loopne
cmp
ret
(bad)
in
xchg
add
test
movs
add
xchg
xlat
sub
and
scas
push
mov
lea
daa
add
mov
cmp
add
in
jae
pop
orps
adc
adc
cli
mov
and
push
xor
sub
dec
test
mov
jo
push
inc
add
jmp
mov
mov
push
jnp
cli
mov
and
jg
pop
or
aas
pop
clc
enter
sqrtps
mov
mov
pop
ret
pop
test
iret
(bad)
or
or
jge
add
xchg
add
push
call
std
stos
jb
dec
add
pop
xchg
or
jl
das
test
and
ret
out
mov
iret
lock
push
mov
enter
add
sub
ins
push
adc
cmp
mov
imul
arpl
inc
dec
seto
ins
xchg
push
pop
add
push
scas
sbb
rol
add
fdiv
outs
and
aam
aas
fcom
dec
cdq
cmps
fsubrp
push
jb
and
and
(bad)
push
add
imul
outs
sbb
inc
xchg
add
or
rol
adc
pop
lods
dec
xor
mov
add
ret
sub
jae
popa
dec
add
add
cdq
lea
add
push
push
gs
jmp
xchg
or
add
or
xor
sub
push
dec
outs
xor
add
push
sub
or
push
adc
enter
pop
or
add
add
push
mov
push
xchg
xchg
das
inc
push
push
(bad)
sbb
in
sbb
add
mov
push
xor
inc
pop
ror
or
mov
or
pop
xlat
popa
or
mov
or
cmp
xlat
jg
std
add
mov
add
call
ds
adc
adc
(bad)
out
mov
or
out
cmp
jne
rol
or
adc
sbb
xchg
push
cld
push
and
dec
gs
ins
add
jo
jae
adc
push
outs
jb
inc
ror
call
mov
or
mov
test
adc
repnz
ins
and
jbe
pusha
call
outs
imul
or
fwait
cmps
add
neg
das
ror
or
lds
xor
or
fmul
mov
cli
fidivr
mov
imul
data16
fdiv
xor
in
push
les
mov
punpcklbw
daa
lods
clc
jg
adc
add
mov
clc
pushf
daa
or
xchg
dec
lea
inc
or
(bad)
jae
push
or
adc
mov
mov
repz
xor
rcl
stos
inc
add
add
leave
xor
cdq
push
mov
inc
dec
retf
add
aam
jge
add
push
sub
int
outs
cmp
mov
push
ja
outs
inc
popf
and
outs
mov
cmp
test
dec
jbe
loop
push
les
js
push
xchg
mov
fldenv
inc
or
repnz
lods
or
xchg
ds
rcr
loopne
test
data16
stos
ficom
push
mov
or
xor
fdivr
pusha
adc
cmp
dec
push
mov
fnstcw
pushw
push
outs
cmp
push
cld
sti
mov
cld
push
js
mov
xor
push
mov
in
adc
repz
add
out
push
enter
fidivr
ja
push
in
call
data16
(bad)
test
push
fmul
test
jno
inc
ins
lock
movs
fisub
sub
mov
adc
or
or
aas
imul
out
rcl
and
aad
fld
jae
loope
inc
adc
and
pop
xor
movs
and
inc
pop
popa
lock
lds
shl
jns
add
and
push
pop
movs
hlt
inc
push
(bad)
pop
mov
jge
les
jl
push
in
add
fcmovnb
and
outs
pop
loope
or
cwde
js
ret
sbb
in
or
pop
xchg
rcr
cld
test
pop
cwde
and
xchg
je
aas
push
jp
add
inc
sahf
or
call
inc
sbb
or
mov
fsubr
stos
cmp
add
add
dec
dec
pusha
bswap
xchg
dec
and
mov
jmp
mov
push
jb
jnp
cs
pop
das
mov
sbb
hlt
xor
jnp
pusha
jno
shr
push
bnd
shl
test
ret
xor
cmp
push
sub
xor
sbb
mov
adc
jo
(bad)
xor
adc
mov
pusha
sub
sub
mov
fimul
inc
sub
lds
lock
push
dec
adc
inc
xor
mul
and
add
add
mov
sbb
pop
daa
sbb
mov
and
add
xchg
xchg
stos
dec
inc
adc
adc
sbb
popf
and
dec
mov
pusha
icebp
(bad)
outs
ss
cmps
inc
sar
mov
leave
sub
xor
add
lds
adc
je
outs
imul
sbb
sbb
ret
and
mov
outs
mov
dec
and
imul
mov
or
jnp
lea
jae
push
jp
mov
cld
hlt
ins
mov
pop
and
jae
inc
call
sub
sub
in
cmps
inc
inc
dec
sbb
pop
arpl
add
outs
sbb
mov
pop
sub
mov
stc
sbb
bound
or
out
adc
adc
adc
rcl
test
or
imul
and
ds
test
lahf
adc
jno
cdq
adc
test
sbb
xchg
and
mov
sar
cmps
ret
cs
push
das
sbb
jb
push
imul
outs
cmp
dec
mov
add
mov
sbb
pop
add
imul
fisttp
sub
cmp
pop
jl
sub
fistp
cmps
outs
add
lds
mov
or
adc
ja
xor
adc
pop
pop
sub
dec
inc
sbb
prefetchnta
hlt
ret
into
sbb
cmps
mov
aaa
xchg
or
mov
add
sbb
or
cmp
add
adc
adc
addr16
add
aaa
enter
fimul
iret
test
lods
jge
ret
add
mov
rol
adc
push
adc
inc
mov
adc
mov
nop
shr
push
inc
xlat
add
or
xchg
and
or
jae
push
sub
push
xor
mov
hlt
mov
dec
mov
mov
cmps
popa
dec
ja
xchg
ja
sbb
mov
push
cmps
mov
popa
mov
add
push
lahf
add
outs
popa
and
add
jo
cmp
xchg
pusha
xor
cmp
adc
ins
mov
fmul
stos
addr16
push
fisubr
dec
aam
wbinvd
add
outs
mov
push
call
or
popa
cmp
mov
icebp
cmp
adc
shl
jno
fmul
ins
adc
popf
popf
shl
adc
imul
xor
mov
or
jmp
fcmovnbe
add
jecxz
or
inc
stos
xchg
les
push
(bad)
hlt
push
pop
pop
ret
mov
pop
xchg
mov
add
pop
adc
jge
add
popf
aam
push
dec
inc
test
lods
inc
mov
popf
adc
imul
push
lahf
sub
or
lds
imul
stos
lods
jg
push
push
mov
push
mov
das
stos
push
xor
in
ror
fdiv
push
out
mov
fsub
push
mov
enter
imul
mov
mov
in
push
xchg
and
les
mov
xlat
push
jo
dec
dec
mov
push
cld
lock
mov
push
pushf
cmp
fidiv
cmp
or
mov
icebp
mov
out
adc
jae
pop
push
and
jmp
fiadd
add
add
xlat
mov
ds
fs
lea
inc
sbb
sbb
inc
retf
adc
aad
jp
jg
gs
shl
jo
mov
xor
add
pop
add
pop
dec
jae
mov
arpl
daa
and
adc
ins
and
adc
bound
fcomi
sub
dec
push
mov
mov
and
cwde
lods
cmc
rol
mov
scas
jns
push
cwde
sbb
scas
cmp
addr16
movntps
nop
out
push
add
dec
xchg
xchg
mov
out
mov
ss
(bad)
test
out
jbe
add
sub
add
(bad)
mov
les
inc
(bad)
adc
or
inc
test
xor
adc
outs
pop
pop
and
mov
pop
cdq
sbb
fcom
or
mov
leave
add
pop
adc
outs
add
in
gs
fimul
ins
pop
mov
push
xchg
pop
or
gs
mov
mov
(bad)
dec
adc
inc
aaa
adc
mov
sub
bound
adc
mov
pusha
sbb
xor
adc
sub
mov
jnp
cmp
pop
jmp
gs
add
(bad)
jecxz
sub
in
jbe
mov
(bad)
fwait
add
pop
cwde
dec
sbb
push
add
dec
mov
sbb
dec
or
inc
add
adc
shl
push
pop
sbb
mov
scas
and
push
mov
fwait
test
es
pop
lods
pop
or
enter
mov
mov
xor
enter
jnp
ret
jmp
adc
sbb
add
dec
add
cwde
mov
(bad)
adc
push
adc
add
mov
and
mov
lods
call
sbb
pop
dec
rcr
lods
stc
arpl
and
and
addr16
ror
jae
cdq
sub
(bad)
sub
or
mov
pop
add
xchg
cmp
push
cmp
sub
clc
mov
test
mov
pop
pop
ror
push
pop
ds
add
mul
xchg
mov
fiadd
sub
sbb
lods
hlt
adc
push
out
mov
call
inc
dec
push
mov
clc
or
test
add
imul
inc
rcr
test
or
sub
sub
loopne
mov
cmp
lods
gs
push
xor
call
dec
pop
jo
out
push
sub
into
push
add
mov
mov
cmps
sbb
pop
adc
aaa
mov
jle
popa
jb
xor
mov
jge
or
push
mov
jb
cmp
push
jne
jo
jo
pusha
movs
icebp
jae
imul
inc
outs
jae
fs
inc
cwde
adc
pushf
dec
or
inc
mov
xchg
js
ins
inc
test
push
outs
ja
loopne
mov
test
nop
addr16
imul
das
jbe
das
popf
aaa
int3
mov
cmp
fcmovnbe
sub
dec
gs
xor
jo
and
push
push
push
ds
outs
xchg
call
adc
cmp
jns
stos
xchg
popa
push
stos
nop
xor
fs
ds
xor
dec
inc
xor
xor
inc
iret
ret
push
mov
sub
imul
enter
jae
sub
or
xor
ins
movs
xor
stc
cmp
adc
call
mov
push
out
pop
test
inc
dec
loope
jb
mov
mov
or
mov
imul
add
mov
or
push
or
add
js
adc
push
jge
adc
mov
dec
push
fist
pop
sbb
scas
imul
ror
dec
adc
add
test
adc
inc
popa
push
movhps
cmp
dec
and
(bad)
sbb
add
pop
test
adc
getsec
adc
xor
int
pop
sbb
xor
sbb
inc
push
int
gs
mov
push
push
test
jne
add
pop
mov
push
mov
mov
das
inc
mov
mov
loope
fistp
loope
int3
push
lock
stos
je
push
loop
shr
ja
dec
mov
add
cld
out
push
xor
lods
jecxz
xlat
cli
ficom
imul
sahf
sub
fs
xor
inc
movs
not
adc
in
cmps
add
push
test
inc
or
lock
mov
push
add
ss
inc
add
ret
pusha
and
imul
and
or
pop
fiadd
add
push
mov
pop
and
ja
in
or
mov
and
sbb
jp
retf
dec
cdq
adc
mov
xor
jmp
inc
icebp
jae
dec
sbb
dec
loope
dec
mov
popf
je
dec
add
mov
pop
test
nop
push
add
das
cmp
rol
daa
adc
mov
stos
or
add
stos
cmp
pop
or
(bad)
lds
dec
sahf
sub
shl
loop
daa
pop
pop
das
dec
xor
sub
or
push
shl
jecxz
push
adc
repz
xlat
loopne
popa
je
sub
mov
ret
xchg
cdq
mov
xchg
sysexit
or
aad
sahf
rol
out
ret
sbb
rcr
cdq
xor
nop
mov
mov
shr
sub
rcl
stos
adc
xor
or
jae
data16
dec
mov
(bad)
adc
add
mov
and
jo
loope
sbb
in
bound
in
add
push
add
inc
shr
stc
das
xor
pusha
test
je
push
or
or
push
loope
inc
aad
jae
sti
scas
mov
jns
sbb
aam
ja
cmps
xor
ret
add
inc
push
loopne
push
dec
lock
add
mov
mov
bsf
ins
shl
sbb
hlt
out
out
bsr
test
hlt
in
lods
cmp
cmp
test
aaa
push
mov
push
xor
push
int3
pop
loopne
js
or
add
clc
or
sub
mov
mov
or
outs
aad
imul
sbb
pop
ss
outs
in
clc
inc
dec
ret
jns
ret
mov
mov
(bad)
les
xor
pop
adc
outs
shr
bound
les
or
add
cmp
push
and
in
les
out
les
pop
mov
lds
mov
rol
mov
push
dec
adc
xor
in
push
rol
hlt
les
push
mov
inc
sbb
push
(bad)
push
adc
jge
push
test
outs
daa
into
push
sbb
dec
fild
push
push
inc
lahf
ja
mov
push
pop
fs
outs
push
mov
add
std
pop
cmp
aaa
lahf
add
loope
push
jnp
or
or
push
out
test
sbb
dec
jb
add
push
add
adc
inc
dec
mov
fadd
out
push
(bad)
cmp
pop
mov
das
lock
mov
add
imul
dec
xchg
ret
pop
or
fiadd
stc
jno
mov
outs
add
aad
test
aad
repnz
outs
jae
pop
loopne
bound
fild
push
int3
ror
and
imul
inc
mov
add
dec
xor
mov
pushf
adc
add
mov
inc
lea
inc
or
int
ds
enter
cmps
enter
or
(bad)
push
adc
cmp
mov
pop
sti
push
es
mov
push
(bad)
pop
out
push
call
or
xor
dec
inc
jns
gs
or
not
iret
fdiv
mov
jnp
pushf
call
enter
mov
verr
leave
pmaxsw
push
xchg
push
sub
rol
in
dec
inc
mul
int
pushf
sub
(bad)
call
dec
dec
and
push
xor
ret
and
dec
add
sub
call
adc
mov
sub
cmp
shr
and
sub
xor
push
jnp
cmp
push
jno
jns
loope
xchg
pusha
jge
or
fsubr
ret
and
mov
add
outs
pop
push
add
sbb
(bad)
pop
test
add
sbb
adc
fwait
sub
mov
and
cli
iret
or
sub
arpl
es
or
dec
pop
pop
add
int
pop
retf
pop
aam
lock
out
push
das
int
shl
and
test
test
push
push
fmul
jnp
jnp
mov
test
int3
push
mov
push
sbb
call
push
mov
jns
daa
adc
out
sahf
out
mov
out
sahf
fdiv
mov
in
mov
inc
mov
adc
popa
xor
and
jne
ins
and
inc
popa
add
or
jmp
xor
ins
daa
adc
pop
lock
and
or
sub
pushf
sub
xchg
pop
ret
(bad)
and
out
jno
adc
ins
mov
add
(bad)
mov
jl
xor
rep
add
cmp
lock
mov
adc
adc
cld
imul
sub
jnp
or
ins
add
push
stos
jo
add
push
cmp
dec
xchg
leave
stos
fwait
cmp
rol
inc
xlat
jae
or
rcl
ret
push
aaa
jge
inc
mov
lds
xlat
pop
cmp
sbb
mov
or
dec
(bad)
or
cld
loopne
pop
xchg
dec
add
adc
jbe
pop
enter
inc
arpl
jg
pop
inc
push
xor
out
add
ret
mov
in
push
les
push
adc
cdq
cmp
mov
xlat
cli
sbb
mov
bound
stos
shl
adc
mov
push
adc
inc
xchg
movs
or
cmp
dec
or
jae
xor
pop
push
arpl
adc
stc
aas
and
push
dec
gs
inc
push
cmp
inc
adc
push
iret
cmps
pop
adc
adc
sbb
push
popf
sub
aas
pusha
push
jmp
xlat
add
sbb
push
sbb
xor
dec
xor
loope
add
adc
sub
add
test
and
mul
pop
inc
add
inc
dec
outs
ins
jns
daa
sbb
dec
pop
or
les
fdiv
inc
jne
sub
dec
push
lods
pop
sub
push
dec
sub
or
test
data16
mov
ret
out
out
cmp
out
push
icebp
mov
mov
mov
js
aaa
add
mov
fwait
jge
sub
push
ins
shr
mov
adc
sbb
je
jno
jnp
or
dec
push
jl
add
pop
icebp
in
jno
push
fild
xlat
shr
push
dec
lock
dec
shl
jae
movs
push
pop
sbb
(bad)
xlat
sbb
cmp
rcl
shl
mov
aam
cld
and
mov
xor
and
and
cmp
jo
jmp
imul
dec
repnz
sbb
jae
mov
xor
add
rcl
sub
or
or
daa
sub
pusha
scas
sahf
imul
in
mov
outs
std
sbb
pop
or
add
pop
fld
mov
mov
(bad)
loopne
jmp
sbb
scas
push
pusha
out
cdq
mov
add
icebp
mov
daa
jmp
les
push
or
cmp
es
int
dec
(bad)
mov
sbb
or
out
dec
ret
mul
ret
das
xor
repz
xor
inc
jmp
repz
cwde
push
lock
sti
pop
adc
push
int3
es
push
fmul
push
cmp
hlt
push
jno
inc
pushf
test
div
jae
adc
cmp
add
cmp
fdivrp
push
jge
imul
xchg
xor
dec
inc
jmp
jb
loopne
push
sub
syscall
add
mov
sysret
jb
test
or
js
retf
xchg
jle
add
inc
cmp
or
adc
test
mov
sub
out
daa
in
adc
dec
dec
pop
xchg
xor
sub
adc
movs
mov
or
sbb
mov
inc
aaa
aas
pop
xor
in
cmps
add
jne
or
or
bound
rcr
clc
jge
rep
cmp
xor
mov
inc
aas
(bad)
pop
movs
add
nop
or
or
xor
leave
add
push
movs
ds
or
fcomp
push
jg
das
add
dec
and
cmps
dec
inc
adc
(bad)
xchg
xor
push
ins
mov
loope
cmp
test
sbb
fidivr
inc
(bad)
adc
inc
lds
mov
mov
mov
inc
sbb
or
dec
mov
(bad)
cs
fisubr
or
add
sbb
pushf
adc
aas
dec
fisttp
test
pop
cmp
test
add
ficom
lock
and
and
push
pusha
repz
jns
adc
stc
push
push
clc
cs
and
fidiv
sub
cmp
push
or
or
mov
cmp
inc
push
dec
push
pusha
in
lods
push
pusha
mov
and
cld
neg
push
fidiv
pop
push
push
test
mov
push
(bad)
in
sub
push
cld
sbb
jns
dec
xor
mov
mov
push
jecxz
imul
shl
push
pushf
push
add
out
out
add
loopne
push
sbb
xor
push
out
out
mov
pusha
aaa
add
cmp
je
jae
mov
out
mov
inc
out
push
stos
xor
imul
cmp
mov
shl
bound
jecxz
mov
jmp
lock
add
mov
adc
mov
cmp
mov
shl
retf
fiadd
mov
fistp
fild
neg
sub
sbb
xor
loopne
loopne
mov
pcmpeqb
mov
loope
and
jl
push
loopne
and
and
lock
pop
sub
loop
sub
sub
xchg
ja
pop
sar
sub
jecxz
sub
xchg
das
add
lahf
bswap
pop
xlat
xlat
sub
rdtsc
mov
rdmsr
add
scas
loope
in
add
add
jne
jg
ss
getsec
add
mov
(bad)
add
cmp
out
cmp
ja
loopne
in
add
xor
sbb
sbb
inc
daa
popf
ret
inc
sub
add
adc
dec
or
dec
loope
popa
mov
jbe
pop
add
lea
cmp
inc
dec
or
dec
adc
push
pusha
jecxz
push
icebp
stos
sbb
cmp
arpl
mov
add
aad
inc
push
cmp
jecxz
jmp
cmp
inc
cmp
inc
fcomp
daa
pop
cs
stos
add
xor
xchg
outs
mov
sub
loopne
in
mov
int3
(bad)
mov
mov
xlat
and
xor
jl
shr
outs
addr16
js
je
pop
push
add
add
mov
or
pop
or
sbb
cwde
pusha
jg
mov
popf
xor
add
int3
push
sub
jmp
lahf
dec
sub
jb
div
xor
and
xor
dec
jno
loopne
add
retf
inc
int3
and
push
aam
jo
or
mov
add
fst
mov
add
cwde
add
push
add
lods
push
dec
and
mov
jb
adc
and
adc
adc
sahf
mov
dec
gs
je
ja
adc
adc
or
jecxz
sub
cmp
add
sub
add
lods
jns
mov
push
ret
arpl
dec
push
mov
popa
pushf
sub
pusha
pusha
inc
dec
pop
cmp
ins
push
adc
cmp
sub
sbb
pushf
xchg
or
add
sub
add
clc
push
or
movhps
add
cmp
out
push
pop
add
pop
loopne
mov
dec
dec
sti
mov
push
adc
xor
ror
xor
adc
add
in
ficom
(bad)
out
sbb
test
pop
push
icebp
inc
push
inc
mov
inc
add
pop
inc
nop
inc
dec
add
pop
in
mov
sbb
fmul
stos
xchg
push
data16
inc
lds
push
int3
xchg
cmc
pop
cmp
ds
add
bound
sub
jns
aas
add
rol
or
jge
jae
inc
in
je
test
pop
jnp
cwde
sbb
sbb
nop
or
adc
jnp
popa
hlt
les
cmc
or
dec
lods
std
sbb
adc
ja
movs
mov
mov
pop
ss
mov
adc
dec
call
add
retf
fiadd
push
add
scas
pop
mov
add
std
add
fadd
jb
retf
or
pop
adc
jp
add
and
mov
add
jmp
or
inc
lods
bound
adc
adc
mov
mov
cmps
imul
inc
xor
call
pusha
lea
or
inc
cmp
or
inc
repz
adc
cmps
and
mov
or
bound
ret
xor
mov
sti
loope
pop
cs
cmp
icebp
inc
mov
pusha
mov
les
inc
push
js
sub
inc
jae
inc
xor
dec
push
ds
pop
add
int3
aam
or
and
inc
push
aas
and
pop
and
int3
jmp
call
in
rol
cmps
pop
push
xchg
push
or
pop
fdivr
fidivr
aaa
push
or
and
xchg
push
call
aaa
test
dec
push
pusha
jnp
jns
lods
test
mov
push
mov
faddp
push
sar
push
mov
iret
dec
jl
cwde
push
sbb
repnz
mov
js
sub
jo
mov
es
mov
aam
pop
push
test
jnp
pushf
push
mov
dec
fs
fs
push
out
neg
dec
push
test
in
push
add
xor
sbb
inc
out
ror
sub
repnz
in
ror
pop
sbb
in
fisttp
out
stc
repnz
xor
add
add
pop
add
pop
add
out
pop
push
mov
shl
add
aas
inc
push
adc
punpcklwd
add
cmps
xor
inc
sub
or
retf
frstor
data16
add
push
repnz
repnz
add
jb
xchg
fld
rep
add
mov
movq
adc
hlt
pcmpeqb
clc
scas
mov
(bad)
add
adc
cmp
je
daa
loope
fdiv
push
aad
and
(bad)
das
mov
push
jns
daa
rol
sub
push
int3
jae
cmp
(bad)
pop
pop
or
adc
sahf
nop
add
or
lods
test
jne
push
mov
lods
xor
jecxz
push
xchg
imul
jge
in
ins
ja
fcom
inc
cmp
(bad)
mov
jno
cmps
or
adc
sub
push
test
push
imul
xchg
outs
add
push
in
cmc
shr
pop
enter
or
and
mov
jmp
outs
aaa
add
in
ins
mov
test
imul
or
cmp
pop
dec
test
shr
dec
mov
xlat
aaa
std
or
ins
or
leave
xchg
pushf
xor
ret
fs
mov
xor
mov
lds
icebp
add
jmp
mov
pusha
mov
rcr
add
fwait
mov
je
push
in
add
jmp
inc
jle
add
fdiv
push
mov
mov
fisttp
push
and
jmp
push
ror
dec
adc
dec
add
mov
and
push
add
outs
lahf
push
add
lea
pop
fimul
stc
adc
sahf
or
loopne
or
push
add
movs
dec
or
in
add
pop
dec
adc
and
or
test
test
and
sbb
lods
mov
fadd
mov
ins
jbe
pmulhuw
out
loopne
(bad)
daa
add
ja
sub
add
in
push
stos
mov
enter
or
sub
enter
xchg
mov
stc
enter
sbb
cmp
loop
enter
neg
clc
push
clc
sbb
sub
add
jmp
cmp
adc
in
adc
adc
mov
inc
cmp
inc
add
adc
cmp
mov
push
sub
inc
add
push
cmp
mov
cmp
sub
jo
pop
cmp
cmp
cmp
test
les
and
inc
adc
in
or
test
scas
dec
dec
pop
dec
pop
add
mov
mov
cwde
sub
pop
cmc
inc
and
pop
(bad)
shl
mov
pop
inc
lahf
addr16
cli
setle
jmp
jns
add
jno
je
mov
lods
cli
mov
inc
inc
les
sbb
xchg
daa
jmp
cli
adc
push
cs
es
mov
pop
dec
sysret
lds
rol
fdiv
sub
mov
outs
mov
std
adc
addr16
mov
pop
xchg
mov
nop
add
and
and
xor
xor
out
arpl
and
ja
sub
inc
daa
push
push
sbb
pusha
outs
push
xchg
and
sub
and
push
or
jno
and
push
xchg
sub
sbb
push
and
je
jnp
loop
push
shl
ds
pop
push
and
jnp
jnp
sub
push
enter
je
push
jo
and
pop
inc
hlt
sub
jno
ins
sbb
mov
loop
add
and
cmp
and
dec
lahf
mov
popa
push
ins
cmp
in
add
(bad)
and
(bad)
in
mov
dec
subps
test
shl
or
mov
dec
fdivr
clts
add
xor
(bad)
sbb
xchg
pop
mov
or
cmp
js
mov
adc
mul
mov
inc
dec
xorps
repnz
add
push
add
mov
add
add
scas
inc
stc
cmps
dec
cmovl
ss
ins
(bad)
(bad)
in
mov
mov
dec
mov
push
add
add
pop
xchg
push
and
pop
pop
nop
ja
(bad)
das
sub
mov
outs
and
dec
add
dec
fld
sub
pop
fnstcw
add
leave
jnp
jno
retf
lods
or
mov
jecxz
imul
xchg
mov
xlat
inc
adc
sub
or
or
push
xchg
lock
sub
or
cmp
sub
or
push
and
adc
pop
dec
or
rcl
popa
leave
mov
es
mov
gs
fsub
mov
and
inc
and
ins
or
jo
push
xor
or
xor
mov
xchg
lods
sub
push
cmps
nop
mov
pop
inc
sub
arpl
out
push
push
mov
push
or
or
xor
cmp
push
mov
cmp
or
daa
cmp
push
mov
stos
or
jno
adc
xor
push
and
sub
daa
outs
fs
jge
push
inc
enter
jae
push
js
jb
pop
sub
xchg
ins
popf
pop
repnz
jg
daa
pop
pushf
dec
jg
pop
mov
push
mov
cmp
sbb
xchg
push
jae
aaa
adc
stc
mov
ins
pop
or
aaa
add
outs
and
cdq
fsub
outs
loopne
xor
test
pop
inc
inc
sbb
add
xor
jmp
xchg
mov
sbb
imul
pop
mov
mov
and
fild
push
call
fmulp
pop
das
outs
push
and
or
aam
jno
sub
enter
jno
cs
cs
mov
or
das
jno
nop
pop
xor
xchg
out
or
jno
pop
in
push
das
jno
das
jno
adc
and
jno
sbb
bound
sub
nop
push
mov
push
push
xlat
das
add
inc
pop
inc
dec
clc
stos
rsqrtps
out
mov
or
sbb
xor
imul
add
lods
or
repnz
sub
jae
add
jb
out
mov
xchg
xchg
sub
lahf
jo
mov
and
test
cdq
cmp
or
push
add
mov
push
mov
cmc
and
daa
adc
(bad)
dec
ss
scas
nop
pop
xchg
mov
or
int3
cs
and
shr
shr
cdq
sub
fist
or
adc
or
add
enter
ror
or
xor
mov
sub
or
leave
add
and
and
xchg
and
or
mov
xchg
pop
imul
rol
mov
ins
test
pop
js
xchg
sub
adc
xchg
outs
fild
clc
sbb
jle
add
lds
stos
inc
add
pop
pop
mov
jp
scas
pop
jne
or
mov
dec
stos
mov
adc
xor
mov
in
add
adc
xor
xor
pop
adc
out
and
fs
inc
sahf
nop
inc
mov
pushf
xor
lock
hlt
cs
xor
out
out
nop
xor
adc
cmp
fsubr
call
aas
push
add
jno
xor
dec
pop
pop
mov
inc
or
inc
out
xchg
fild
ja
adc
mov
fxam
sbb
dec
pop
sahf
(bad)
add
je
(bad)
mov
retf
retf
(bad)
and
adc
adc
mov
cmovs
xchg
xchg
xchg
aas
ret
push
adc
jl
xchg
xchg
adc
adc
adc
(bad)
jmp
(bad)
add
adc
mov
push
xchg
mov
mov
mov
pushf
xor
cs
sbb
push
cmp
es
adc
sub
and
push
adc
jb
test
push
std
push
sub
mov
add
sub
sti
adc
pop
mov
mov
push
fsubr
adc
pop
test
cmp
rcl
test
aad
xor
in
jb
adc
pop
leave
push
adc
mov
xor
add
fsubr
push
adc
call
daa
nop
pop
clc
das
push
adc
aaa
xor
in
adc
add
ror
or
ins
pop
dec
dec
mov
sahf
pop
fucom
inc
adc
in
cmp
push
das
in
sbb
mov
push
leave
add
and
xor
dec
xor
pusha
push
leave
push
cli
es
loopne
stos
ret
outs
and
jno
scas
lock
pushf
adc
(bad)
int3
xor
in
jge
in
lock
mov
and
mov
jno
xor
and
xor
(bad)
inc
dec
or
stc
repnz
imul
add
add
repnz
outs
pusha
movlps
lea
sahf
jecxz
ror
ins
sbb
sbb
push
pop
(bad)
add
(bad)
icebp
xchg
jbe
sub
loopne
mov
or
xchg
mov
jne
cmps
dec
sahf
mov
test
aad
lds
mov
adc
jae
mov
xor
js
movs
cwde
hlt
stos
mov
xor
sahf
push
cwde
aam
popa
mov
add
lds
pop
mov
cmp
and
cmp
scas
test
push
jb
(bad)
in
mov
outs
cmp
lock
pushf
mov
(bad)
in
sub
or
stos
shr
xor
imul
repnz
in
sbb
add
je
sti
(bad)
sub
inc
sbb
push
push
mov
cmp
push
outs
xlat
xor
push
lock
jo
push
inc
(bad)
aas
add
(bad)
jbe
fidivr
mov
push
push
test
enter
shl
dec
clc
push
fs
xlat
sub
push
or
jno
mov
mov
es
loopne
sub
cwde
outs
or
mov
lock
pop
push
push
push
sbb
out
jmp
add
je
push
and
inc
and
xlat
xchg
jp
push
(bad)
sbb
sub
or
mov
cmp
inc
sub
loope
push
outs
fcomp
xchg
adc
add
nop
stc
repnz
sub
add
mov
jle
add
and
cld
repnz
cwde
ud2
add
or
out
or
stc
jnp
xchg
dec
(bad)
(bad)
jae
in
imul
cmovae
jns
jns
or
int3
and
jns
and
dec
add
pop
mov
mov
and
pop
andps
mov
mov
push
add
jb
and
ins
inc
and
rol
repnz
loope
and
mov
sub
call
and
pop
ss
jecxz
mov
jecxz
cli
mov
xor
lds
adc
push
sub
fsubr
rol
adc
leave
imul
dec
push
call
inc
sbb
inc
mov
or
sub
inc
and
push
mov
adc
test
imul
llwpcb
dec
dec
imul
or
rol
mov
push
mov
adc
sbb
inc
xchg
pop
push
lds
xchg
pop
leave
and
or
js
enter
nop
cmp
cmp
cmp
js
je
in
repnz
push
or
mov
daa
js
adc
mov
pushf
js
cmp
imul
or
imul
push
or
ins
add
ss
test
in
and
mov
lods
outs
lods
and
(bad)
int3
cmp
bnd
inc
push
je
js
inc
pop
cmp
js
mov
and
les
add
and
pop
xchg
push
or
dec
mov
mov
icebp
add
mov
test
loopne
repz
hlt
push
or
fs
cmp
inc
test
add
test
movs
inc
popf
mov
nop
xchg
pop
or
adc
test
push
mov
int3
daa
daa
lock
push
nop
push
cmp
pop
push
sbb
jno
mov
xchg
inc
sahf
cs
adc
jecxz
or
sbb
xchg
jg
into
hlt
movhps
sbb
arpl
xchg
das
pop
dec
add
movs
pop
add
std
inc
sti
mov
stos
dec
and
lock
or
or
scas
repnz
ficom
fimul
or
sub
sub
sbb
(bad)
mov
lar
stc
sti
mov
add
sub
add
cmpxchg
jmp
mov
cmp
fadd
jno
pop
push
mov
sub
cs
adc
add
add
push
fsubr
adc
les
dec
push
loop
stos
or
push
mov
and
add
popa
imul
mov
xor
aad
jb
xlat
mov
repnz
gs
in
xchg
daa
nop
xchg
test
add
push
mov
mov
sub
fstp
nop
nop
xchg
pusha
les
cmp
dec
add
mov
add
inc
repnz
add
mov
or
jne
mov
cs
cmp
sti
pop
dec
je
or
jae
outs
rcr
lods
pop
clc
xor
jns
pop
mov
mov
pop
js
in
mov
push
sub
repz
cmp
je
ror
rol
sub
ds
mov
iret
mov
push
fcomp
clc
push
or
repz
rol
nop
push
dec
mov
sub
jno
(bad)
dec
pop
push
push
mov
push
inc
push
sti
or
lock
add
pmulhw
jo
pop
add
ret
add
push
mov
jno
repnz
pusha
xor
repnz
push
xor
xor
mov
xor
xor
repnz
xor
repnz
arpl
push
ja
xchg
daa
cs
or
mov
sub
dec
aaa
adc
cmp
xor
pop
sub
rol
ja
pop
pop
ins
push
sub
ja
in
add
scas
cs
ja
sub
jb
add
ja
dec
pop
pop
pop
add
ss
pop
jo
add
popa
cmp
loopne
add
jmp
leave
add
adc
hlt
xor
hlt
mov
xor
fmul
add
mov
xor
test
and
nop
mov
xor
mov
mov
inc
repnz
xor
leave
or
xor
and
hlt
xor
nop
sbb
xor
add
hlt
xor
je
add
ins
ucomiss
jg
ds
push
cmp
cmps
push
push
dec
cmp
push
js
call
dec
push
jnp
jnp
je
push
in
clc
push
push
xor
cmp
or
mov
js
jg
dec
or
inc
dec
scas
nop
dec
jno
das
pop
mov
dec
iret
push
inc
fild
dec
into
push
fmul
fistp
jnp
fadd
clc
movs
push
push
push
js
xor
cs
dec
out
jg
mov
cli
ins
dec
jno
dec
pop
or
pop
jg
aaa
mov
sbb
push
cmp
and
jg
pop
add
add
movs
ror
add
cmp
pop
dec
test
scas
cmp
pop
pop
fidivr
add
cmp
cmp
loopne
pop
nop
cmp
paddb
inc
push
cmp
outs
cmp
mov
loopne
sbb
mov
cmp
test
shr
nop
dec
jno
test
dec
leave
mov
lahf
xor
dec
adc
sbb
cmp
pop
or
jg
sub
or
repz
sbb
jmp
push
pop
sub
or
cmp
in
scas
mov
sbb
(bad)
repz
add
nop
pop
pop
repz
xor
pop
and
dec
or
sbb
jne
popa
inc
jl
jno
test
fistp
retf
push
and
inc
gs
fmul
nop
mov
dec
in
jb
test
fmul
pop
leave
or
push
and
test
clc
dec
add
pushf
test
movs
dec
or
inc
repnz
push
dec
das
nop
pop
leave
test
js
test
sbb
push
and
dec
test
jb
jns
add
ds
in
movs
dec
test
les
leave
inc
push
adc
cmp
dec
sub
fs
xor
push
pop
repnz
add
inc
addr16
cwde
cmp
push
xchg
cdq
ss
mov
jl
jnp
push
hlt
push
or
push
mov
addr16
cmps
mov
push
cwde
out
push
repnz
fwait
pusha
call
jns
int3
mov
cwde
push
dec
adc
loop
push
ins
push
sub
cmc
clc
fwait
jno
xor
lds
pop
inc
push
call
or
mov
lahf
je
pop
add
(bad)
add
add
inc
jns
jns
imul
mov
jns
inc
sbb
inc
jns
jns
mov
in
inc
es
pop
inc
jns
jns
cwde
inc
rol
inc
inc
inc
jns
jns
add
icebp
inc
sub
cmps
fnstsw
sysret
mov
loopne
sti
pusha
inc
bound
cmp
ins
in
dec
scas
dec
jmp
cmp
ins
pusha
inc
loop
mov
dec
sub
outs
ret
sub
xor
outs
push
sub
mov
push
sub
add
test
enter
or
pop
sub
outs
and
or
mov
add
outs
pusha
inc
mov
push
and
pop
adc
shr
cwde
outs
push
adc
mov
cmp
fcomp
pusha
inc
xor
pusha
pop
and
xchg
inc
int3
fwait
pusha
inc
cmp
pusha
inc
in
repnz
call
pusha
call
call
jns
cmp
fwait
pusha
inc
and
repnz
fwait
pusha
inc
setb
enter
inc
sub
pusha
inc
xor
inc
or
inc
setb
inc
fs
and
push
inc
iret
cmp
jno
adc
push
lock
outs
int3
push
push
adc
cmp
dec
push
(bad)
pop
dec
outs
push
mov
dec
cs
jns
out
scas
push
mov
and
xchg
sahf
out
fs
dec
outs
(bad)
and
dec
xchg
or
inc
rcl
outs
xor
cwde
dec
(bad)
dec
icebp
push
call
pop
cs
or
pop
fs
jo
push
ror
icebp
mov
ror
dec
jno
cmp
fadd
inc
sbb
(bad)
dec
outs
pushf
mov
mov
in
inc
pop
add
and
sub
sti
mov
xchg
xchg
ret
ret
les
syscall
add
push
pop
mov
or
mov
fild
ret
ins
inc
(bad)
(bad)
jo
jo
imul
cmovae
in
and
xchg
xchg
setge
nop
dec
leave
dec
add
mov
cmp
dec
add
add
dec
add
dec
mov
push
popa
xchg
pop
dec
cmp
loop
xchg
sub
dec
sbb
or
enter
or
inc
dec
aaa
dec
popf
add
inc
sub
push
ret
add
cmp
and
mov
push
lds
mov
rcl
fsubr
aad
rcr
fiadd
mov
pop
sti
and
pop
lds
nop
mov
add
jle
add
push
add
adc
fs
xchg
push
bound
inc
cmp
dec
xchg
push
cmps
inc
sbb
xor
xchg
enter
pop
and
add
or
or
(bad)
enter
or
sbb
and
push
cmp
mov
pop
dec
ror
push
in
repnz
enter
enter
and
pop
dec
enter
cmp
inc
jl
add
pop
enter
mov
enter
push
in
repnz
dec
enter
enter
enter
adc
adc
pop
cmps
inc
js
aaa
iret
pop
enter
pop
and
in
adc
cwde
popf
enter
inc
pop
loope
push
int
inc
mov
jp
test
pop
push
sub
cmps
push
push
inc
mov
and
(bad)
jp
and
nop
push
mov
test
push
out
push
je
push
jmp
push
pop
push
xor
pushf
aas
inc
push
push
push
mov
sub
js
enter
iret
clc
push
idiv
push
mov
(bad)
in
push
clc
sahf
out
add
sbb
test
nop
adc
or
in
mov
hlt
push
jno
or
jnp
xchg
pushf
adc
push
test
scas
jecxz
les
push
iret
pop
orps
and
or
out
xchg
sbb
repnz
inc
push
ins
push
cwde
push
repnz
push
push
push
inc
push
loopne
out
repnz
push
lahf
lar
cmovae
das
aas
mov
push
test
push
das
das
das
das
clc
push
xor
pop
movs
pop
not
das
das
ficomp
pop
scas
dec
jb
add
inc
popf
adc
js
les
xchg
push
jno
pop
ins
xor
push
pushf
call
mov
adc
or
pop
mov
xor
scas
jno
mov
push
sub
scas
push
sub
je
adc
in
add
pop
sub
adc
push
nop
pusha
scas
push
xor
inc
pop
xor
pop
ins
shr
aam
scas
mov
scas
cmp
mov
and
pop
lods
adc
sbb
mov
push
xor
mov
and
push
mov
nop
in
push
mov
inc
add
mov
pop
sbb
mov
push
dec
push
mov
jns
push
mov
in
push
mov
inc
cmp
push
in
mov
call
mov
and
outs
mov
ins
rcr
pop
test
add
push
out
cmp
js
test
popf
push
(bad)
pop
push
xor
adc
push
loope
mov
jns
xor
pop
mov
int3
push
loopne
jnp
jns
hlt
dec
push
xor
mov
je
mov
aas
sub
and
pop
jno
cmp
pop
out
pop
mov
fdivp
out
sahf
pop
pop
push
mov
adc
sub
idiv
push
push
add
sbb
pop
mov
inc
and
xor
daa
and
jl
mov
inc
mov
punpckhwd
test
add
pop
ds
mov
xor
pop
pop
pop
pop
pop
pop
mov
pop
fcomp
pop
pop
pop
pop
pop
xor
pop
(bad)
pop
leave
pop
pop
pop
pop
pop
add
cmp
pusha
pop
pop
pop
pop
call
popa
xchg
popa
push
pop
pop
pop
into
popa
add
and
daa
aad
xor
cs
xchg
pop
je
add
es
push
push
xor
imul
and
imul
invd
fbstp
pop
aad
adc
sub
adc
(bad)
(bad)
mov
mov
sbb
push
mov
and
add
test
pop
fist
test
enter
push
mov
inc
cmp
push
xor
sub
mov
fisttp
jno
mov
mov
pushf
je
sbb
inc
bnd
mov
nop
pop
leave
je
loopne
je
cmp
push
and
pop
je
repnz
mov
or
inc
int3
pop
je
and
nop
pop
lock
je
nop
pushf
inc
push
adc
je
inc
repnz
pop
je
pop
leave
or
mov
je
push
pop
je
hlt
pop
jns
sbb
je
dec
pop
cmp
aam
je
pop
js
cmp
dec
pop
inc
mov
jno
arpl
out
mov
xor
shl
add
gs
loop
int
cmp
outs
adc
iret
repz
push
push
pop
push
push
cmp
sahf
out
push
je
mov
lock
inc
repnz
test
(bad)
pusha
pop
xchg
in
push
push
push
stc
adc
push
mov
xor
cmp
pushf
(bad)
push
cld
push
sbb
jo
mov
jns
pop
rcr
push
outs
pop
mov
jno
sub
dec
inc
cmps
adc
stc
les
dec
js
scas
sbb
fs
sbb
data16
fs
xlat
add
inc
add
inc
das
das
pop
loop
sub
mov
das
das
das
adc
push
push
push
and
das
hlt
push
adc
test
sub
xchg
add
test
pusha
pop
popf
xor
push
cmp
push
or
sub
imul
imul
or
and
xor
test
add
or
pushf
pop
outs
adc
jmp
adc
sti
pop
outs
adc
cmp
pusha
adc
je
inc
ror
push
mov
xchg
rol
and
xor
test
mov
jns
cmp
push
sub
and
repnz
xchg
adc
mov
jns
cmp
sub
pushf
push
in
repnz
fcom
pop
leave
or
cld
push
bound
dec
push
cmp
dec
adc
imul
jns
sub
rcl
in
sub
jl
and
xchg
add
sub
xchg
cmp
push
sub
in
push
or
in
imul
cmp
iret
add
outs
mov
add
jae
mov
ins
das
pushf
mov
push
inc
outs
pusha
imul
push
imul
shl
jns
cmp
cmp
mov
mov
outs
hlt
imul
adc
jb
or
imul
push
les
fdivp
(bad)
into
push
push
js
pushf
mov
add
and
lock
push
adc
(bad)
mov
add
sub
dec
sbb
mov
mov
cvtpi2ps
loop
and
pop
pop
imul
int3
outs
pop
pop
pop
pop
imul
jo
jo
jo
pop
pop
pop
mov
jo
jno
pop
pop
pop
jae
lods
jno
jno
jb
pop
pop
pop
push
jb
jb
jb
jae
pop
pop
pop
cmp
jae
daa
les
arpl
imul
pop
xor
sub
in
test
ja
scas
inc
xchg
addr16
mov
inc
mov
jae
adc
or
pop
and
or
mov
sub
mov
sub
shr
adc
mov
clc
push
or
pop
push
sbb
inc
add
push
loop
mov
mov
inc
mov
push
int3
push
mov
pop
ins
push
xor
ins
in
mov
setb
in
cld
cmp
enter
and
in
les
enter
jae
addr16
and
xchg
jae
push
cmp
js
in
in
repnz
enter
in
dec
pop
and
and
in
and
cmp
in
and
repnz
in
xor
leave
xor
jae
add
mov
sub
je
cmp
mov
jns
dec
push
loopne
das
push
ja
inc
xor
je
addr16
ins
pop
adc
arpl
arpl
adc
js
mov
jno
and
rcl
sbb
clc
pusha
test
xchg
shl
or
xchg
and
iret
mov
sbb
cmovbe
out
push
push
inc
popf
and
add
xor
and
and
mov
stc
cwde
jp
add
add
movs
sbb
ja
iret
icebp
jge
push
ja
jbe
daa
push
psllw
mov
punpckhdq
packssdw
adc
inc
cmp
pop
les
or
mov
or
dec
stos
add
xor
out
mov
and
xlat
cs
repz
adc
aas
and
sub
and
or
sar
icebp
outs
inc
or
add
add
mov
jo
xchg
mov
pushf
jp
mov
fadd
push
out
jle
imul
add
xchg
retf
loop
mov
dec
sgdtd
inc
iret
sahf
movhlps
movs
add
fldenv
in
out
imul
jo
pop
cs
add
cwde
jp
outs
mov
ins
push
push
scas
test
cwde
js
add
add
pop
mov
add
outs
jae
mov
and
inc
fsubr
dec
mov
das
dec
popa
adc
mov
pop
lods
sub
ins
ret
jmp
mov
jnp
mov
(bad)
(bad)
dec
mov
cmp
adc
add
jbe
hlt
jns
xor
push
movs
fdiv
test
pop
pop
push
add
lea
jb
fstp
add
inc
dec
push
pop
or
inc
xor
xchg
xor
dec
outs
outs
imul
add
add
out
or
pop
pop
fidiv
ins
or
adc
dec
dec
lahf
out
inc
rol
inc
push
ficom
fidivr
cwde
push
stc
adc
mov
xor
cmp
jb
push
dec
xor
paddq
jne
sub
enter
inc
pusha
push
nop
dec
into
sbb
push
or
daa
dec
aas
test
sub
mov
push
add
adc
ror
xor
sar
and
rcl
nop
jl
daa
mov
push
hlt
jno
inc
and
jno
dec
xor
inc
in
push
icebp
push
outs
dec
adc
jns
sub
scas
pop
cdq
pushf
push
adc
or
adc
and
(bad)
dec
int
push
popa
or
mov
push
nop
add
push
push
jg
cmp
sbb
movhps
scas
loopne
and
sbb
cdq
out
adc
js
ret
ja
mov
sub
jno
je
cmps
mov
cwde
sub
addr16
arpl
stos
dec
or
inc
inc
push
xor
test
sub
add
inc
mov
data16
adc
xor
jne
push
add
lods
or
xchg
or
xchg
add
xchg
daa
push
dec
and
dec
push
leave
and
adc
pop
sub
jmp
ja
pop
ins
xor
pop
sub
adc
mov
xor
pop
jb
out
and
and
sub
test
sbb
pcmpeqb
fsubr
or
push
mov
rol
inc
pop
jl
push
jo
inc
add
test
add
mov
pop
add
inc
lods
popa
jno
jb
jo
mov
je
push
bound
pushf
mov
add
adc
popa
or
pop
pminub
mov
inc
js
outs
scas
sub
shr
fs
iret
mov
pop
push
push
xchg
push
test
into
lds
outs
add
test
push
add
add
pop
pushf
test
pop
shl
pop
test
cld
repnz
add
add
ins
add
xchg
outs
xchg
jno
mov
add
push
mov
popf
pop
xchg
xor
nop
clc
mov
icebp
sub
icebp
popa
scas
xor
cmps
sar
and
lahf
in
rol
inc
sbb
outs
in
inc
sbb
sub
inc
fld
mov
sbb
and
rol
pop
xchg
add
mov
test
pop
xchg
mov
mov
pop
xchg
outs
ror
adc
adc
inc
mov
cld
js
(bad)
mov
(bad)
fidiv
lock
pop
pop
push
shl
arpl
push
mov
pop
fs
jnp
repnz
loopne
jno
push
clc
push
or
out
gs
cmp
pop
cmp
pop
mov
adc
out
adc
adc
mov
dec
push
enter
mov
jle
out
popw
mov
jno
in
add
push
adc
or
loope
test
ror
retf
lahf
stos
mulps
sti
or
xor
imul
or
mov
xchg
mov
cmovle
pop
dec
add
add
(bad)
loopne
sub
mov
mov
adc
cmps
ss
push
std
scas
cmp
sahf
sbb
adc
rcl
and
push
lsl
and
push
sbb
mov
fld
jae
daa
inc
add
gs
add
inc
pop
mov
or
push
adc
and
sub
mov
add
loopne
push
dec
ins
rol
jp
adc
enter
fadd
repnz
cmps
sub
icebp
stos
rcl
test
mov
jo
mov
adc
and
jl
or
call
push
adc
mov
or
(bad)
dec
and
push
jb
cmp
sbb
cmps
and
add
xor
add
sbb
or
or
xor
add
dec
int3
sub
add
add
pop
jne
outs
mov
shr
jg
pop
add
or
nop
sbb
adc
mov
push
pop
add
xlat
sbb
pop
pop
add
nop
pop
cmp
adc
les
mov
push
adc
mov
mov
pop
and
sbb
nop
aaa
popf
js
pop
sbb
or
push
cmps
pop
aad
adc
mov
xchg
inc
je
pop
daa
mov
add
mov
xchg
inc
les
push
adc
ja
adc
or
and
add
dec
das
sub
xchg
lock
and
mov
push
pop
into
cmp
cmp
inc
ret
cmc
push
cmp
pop
add
mov
inc
jg
sub
sub
push
sbb
and
and
ins
or
pop
fisttp
test
mov
popf
je
adc
xchg
jns
mov
dec
adc
mov
sub
(bad)
add
jne
adc
adc
pop
add
andps
je
popa
pop
les
mov
cmp
pop
dec
sub
mov
xchg
nop
and
inc
add
add
mov
rcl
jno
jno
add
jno
rol
add
icebp
mov
aaa
sub
pop
jo
daa
imul
test
mov
pop
pop
pop
xor
xchg
dec
push
add
pop
lods
xchg
adc
aam
mov
push
in
fisttp
out
cdq
push
hlt
xchg
lds
push
push
cwde
das
inc
cwde
inc
push
pushf
adc
add
test
daa
test
out
leave
neg
add
xor
push
xor
cwde
leave
mov
mov
and
cld
or
sub
movs
adc
cwde
push
cvtps2pi
aad
test
mov
cdq
sbb
add
jge
add
or
inc
dec
cmp
pusha
mov
add
xor
xor
push
pop
aas
in
xor
sub
dec
sub
stos
add
sub
add
mov
loopne
outs
add
outs
daa
les
cmp
fmul
ret
cmps
dec
enter
ss
stc
xchg
adc
inc
sub
jae
xor
sub
inc
arpl
jp
add
xor
gs
pop
pushf
ss
ins
aas
inc
test
xchg
push
test
and
rdpmc
adc
push
adc
pop
adc
mov
inc
fwait
das
dec
fwait
imul
in
dec
gs
repnz
xor
(bad)
or
cmp
jo
shl
sahf
pop
mov
test
sbb
jmp
ja
cdq
push
out
sub
out
xor
pop
jg
mov
or
pusha
arpl
sahf
test
inc
dec
arpl
mov
imul
sbb
add
sbb
popf
xor
pop
sub
pushf
xchg
pushf
rol
xor
add
xchg
push
or
mov
repz
or
or
and
push
and
push
mov
int
bound
mov
dec
xor
xor
je
sti
inc
adc
dec
push
sub
mov
aad
cdq
mov
xor
lds
pop
pop
sahf
inc
inc
or
or
mov
inc
adc
les
call
or
add
call
or
add
inc
lods
loopne
rcr
adc
lahf
pop
int
push
push
mov
ja
inc
pop
inc
mov
idiv
ret
add
dec
jp
mov
jmp
aam
ja
add
les
retf
retf
retf
pop
leave
pop
mov
pop
ret
xlat
fcom
jp
mov
cmp
sysret
call
cdq
and
wbinvd
add
or
fnsave
cwde
jmp
scas
inc
stc
in
add
(bad)
cmps
sbb
push
pop
ret
or
add
adc
mov
ins
xchg
inc
gs
push
sbb
push
dec
adc
inc
inc
popa
aad
mov
das
add
xchg
data16
movs
and
sub
fldcw
jmp
iret
or
add
(bad)
cmp
adc
cmp
outs
pop
inc
sbb
xor
adc
xor
mov
mov
push
hlt
test
sub
pop
adc
retf
ins
test
mov
inc
xlat
int3
xor
adc
xlat
pop
add
and
cmp
int
xor
or
sub
(bad)
mov
mov
push
sbb
test
xchg
int
fisttp
push
stos
cmp
mov
or
mov
popa
push
inc
and
les
test
xor
xor
sub
and
cli
outs
adc
pusha
popa
clc
cmp
outs
mov
add
jnp
mov
push
sbb
sbb
outs
das
arpl
adc
sbb
ds
sahf
dec
icebp
adc
out
add
pusha
add
and
inc
jae
push
hlt
sub
or
rcl
pop
nop
jne
adc
add
jmp
daa
cmc
push
pushf
test
mov
shl
mov
xor
rol
sbb
inc
gs
jae
das
test
pop
lahf
(bad)
lds
imul
rcl
mov
shl
daa
cmp
adc
dec
(bad)
push
xchg
dec
sbb
inc
stos
daa
jp
pop
ret
stos
pop
jecxz
sbb
inc
inc
scas
pop
fwait
jecxz
mov
(bad)
idiv
outs
dec
lods
outs
daa
mov
out
outs
lea
fld
inc
aad
cmovg
or
inc
xor
lods
jle
add
xor
es
ja
cmp
pop
inc
cmp
dec
mov
cwde
jo
pop
cmp
aam
lahf
stc
stos
xlat
pop
lods
lds
push
or
bswap
sub
add
adc
adc
push
aam
inc
popf
mov
dec
lods
movs
inc
aad
lds
inc
push
dec
push
dec
cmp
and
mov
jb
cli
movs
movs
sub
mov
xor
pop
mov
or
out
pop
pop
cmps
fwait
adc
or
sub
xchg
daa
rol
ins
in
jmp
shl
fs
jl
popa
mov
lods
xchg
cmp
dec
stos
aaa
fsubr
pop
fs
test
pop
push
adc
out
inc
ja
(bad)
xchg
je
js
mov
dec
sub
xlat
inc
sub
xlat
enter
sub
pop
or
inc
add
dec
cmps
cli
xchg
pop
xor
and
pop
add
scas
clc
pop
add
inc
nop
repnz
subps
mov
stos
add
inc
adc
dec
arpl
mov
mov
adc
push
pusha
mov
loopne
add
xor
or
addr16
test
xor
dec
ins
leave
or
sbb
sub
jecxz
and
mov
sub
and
(bad)
loopne
sub
jo
outs
mov
cmp
push
loope
mov
std
fsubr
adc
mov
jbe
push
inc
mov
mov
in
pop
daa
test
je
in
call
loop
cmp
inc
and
sbb
mul
and
inc
add
subps
sbb
or
jb
les
mov
mov
pop
(bad)
adc
nop
xchg
pusha
add
cmp
add
daa
cmp
add
test
je
aam
xor
cmp
lods
je
push
cmp
add
or
or
add
dec
add
fld
inc
dec
xor
fbstp
or
outs
mov
push
or
push
js
std
lock
and
mov
mov
mov
pop
add
inc
scas
xor
(bad)
jnp
into
repz
lock
cmp
jle
les
out
cmp
pusha
push
nop
pop
iret
repz
jnp
test
push
js
lock
clc
cmp
jnp
adc
sbb
xor
outs
fdivp
scas
ret
inc
outs
mov
mov
iret
repz
fdiv
push
sar
test
mov
out
mov
push
fadd
test
test
push
or
jnp
int3
mov
push
pusha
xchg
add
fdivp
push
js
sub
cmp
push
or
xchg
push
cmp
cmp
add
out
push
pop
es
push
pop
ins
ja
and
je
add
jbe
mov
movs
mov
dec
loope
cmps
inc
add
icebp
outs
ja
(bad)
loope
xchg
sub
and
cmp
jbe
sbb
(bad)
mov
pop
fld
adc
mov
mov
and
fsubr
fs
lahf
add
test
mov
xchg
or
fs
hlt
mov
(bad)
pop
add
add
cmp
sub
push
or
mov
or
adc
mov
mov
dec
outs
das
push
mov
mov
(bad)
adc
aam
call
scas
vmwrite
adc
mov
jns
adc
ja
in
das
mov
mov
or
popa
cmp
jge
(bad)
pop
add
test
add
es
mov
inc
pop
ins
dec
sbb
add
push
loopne
add
inc
test
add
call
inc
inc
inc
pop
add
call
lods
ret
lods
adc
jae
in
rol
pop
inc
cwde
mov
pop
popa
pop
inc
inc
push
dec
pop
jae
or
gs
gs
xor
arpl
pop
mov
and
and
mov
nop
xchg
xchg
rcr
xchg
mov
mov
add
sbb
add
in
adc
xchg
or
push
xchg
outs
jmp
push
mov
or
xchg
add
cmp
mov
push
addr16
ret
cmps
rol
mov
cmp
xor
mov
mov
mov
or
jno
mov
aas
sub
add
cmp
mov
sbb
(bad)
aas
loope
ja
aam
je
sbb
and
out
push
push
push
push
pusha
js
and
dec
inc
cmp
pusha
mov
(bad)
(bad)
in
rcl
shr
aas
(bad)
push
pcmpeqb
mov
out
sbb
xor
xor
stc
jae
rdtsc
sahf
rdpmc
add
xor
jnp
push
or
push
push
clts
mov
sub
das
les
cmp
cmp
scas
add
jmp
inc
daa
lds
jae
ret
jecxz
out
and
add
or
adc
imul
sub
ins
popa
inc
and
push
outs
fisttp
add
jno
dec
ret
mov
mov
add
add
js
vmmcall
stos
sbb
je
push
dec
frstor
inc
rol
sub
or
push
or
inc
mov
pop
sbb
xchg
mov
sbb
push
in
inc
add
pop
out
jp
movs
add
jge
les
push
pop
sbb
push
or
or
and
inc
push
fldenv
test
and
and
dec
push
test
inc
mov
and
daa
and
pop
pop
call
mov
daa
in
cmps
leave
(bad)
fldcw
nop
out
push
adc
push
inc
ja
nop
cmps
ror
jecxz
mov
xchg
inc
in
nop
nop
mov
inc
cmps
fild
js
adc
out
push
lock
dec
xchg
mov
pop
cmp
hlt
xor
stc
or
dec
pop
inc
(bad)
ja
(bad)
or
(bad)
aaa
retf
fidiv
cmp
rdmsr
add
mov
add
mov
leave
cmps
pop
(bad)
add
test
xchg
test
cmp
(bad)
pop
mov
inc
leave
cwde
leave
inc
nop
jae
leave
or
mov
movhps
inc
(bad)
fisttp
sub
push
hlt
jno
(bad)
xor
repz
adc
mov
push
xchg
sub
hlt
adc
gs
pop
mov
adc
or
add
adc
jno
inc
ret
push
and
and
sub
add
jo
aad
imul
cwde
leave
div
loopne
xor
aad
les
outs
fisubr
retf
test
mov
add
movs
push
(bad)
xor
xor
pop
xchg
pushf
fs
add
or
das
add
push
ins
aaa
or
(bad)
pop
inc
retf
push
fiadd
adc
sbb
outs
push
sub
cmps
mov
sub
pushf
ss
retf
and
inc
pop
add
int
jb
inc
ja
call
add
inc
add
xchg
sbb
loope
imul
pop
dec
enter
test
fsubrp
push
call
and
das
xor
push
inc
sbb
pop
dec
daa
cmp
dec
push
pop
fwait
imul
clc
ss
shl
push
lea
bndstx
ins
popa
jo
bound
iret
icebp
(bad)
add
das
shl
or
push
int3
lea
ffreep
cmp
add
dec
in
mov
inc
jo
imul
or
movs
fidivr
mov
pop
or
dec
movs
sub
lahf
in
test
into
mov
jecxz
int
inc
xchg
cmp
inc
push
or
mov
ret
or
das
retf
stos
nop
ss
std
and
inc
dec
outs
arpl
xor
(bad)
sub
fcomp
pusha
add
inc
mov
sub
sbb
mov
mov
add
cmp
gs
adc
dec
and
xchg
or
rol
dec
push
dec
mov
fisub
xchg
add
cmc
add
cli
or
add
sbb
je
xor
and
adc
popa
pmaxsw
or
cmps
sbb
adc
shr
sub
xorps
and
xor
push
or
fwait
call
cwde
dec
cmp
add
dec
ins
jmp
add
test
or
sbb
mov
dec
add
pop
jae
fdiv
add
js
lds
adc
inc
shr
and
mov
add
push
daa
cmps
iret
gs
(bad)
js
xchg
or
sub
fisub
sub
rcr
add
(bad)
jge
and
or
adc
or
add
inc
lock
mov
cmps
pop
cmc
js
outs
mov
stos
test
lods
ret
pop
in
cdq
adc
test
fwait
pop
adc
dec
or
pop
rcr
adc
mov
pop
or
fdiv
bound
mov
cmps
das
ror
add
xor
dec
jno
jp
daa
repz
add
ins
pusha
lds
sub
adc
(bad)
retf
push
push
mov
mov
movs
fadd
inc
lock
pop
mov
add
sub
and
mov
push
cmp
push
inc
rol
(bad)
shl
dec
push
inc
adc
test
add
and
bound
push
aam
inc
pop
shl
loopne
sub
jmp
neg
mov
lds
push
arpl
icebp
fsub
mov
push
shr
jb
or
loopne
dec
add
test
lds
xchg
sbb
mov
sub
outs
inc
and
ret
xor
cdq
ins
popa
push
scas
pop
shl
dec
mov
push
mov
ret
inc
push
call
push
stos
add
loopne
and
inc
adc
mov
(bad)
xor
mov
jno
adc
sub
adc
push
cmp
(bad)
mov
mov
(bad)
leave
or
(bad)
fmul
inc
dec
push
mov
mov
jns
pusha
sbb
add
pop
sub
sbb
push
inc
aaa
out
xor
sub
jno
adc
adc
jnp
bound
fldcw
adc
lahf
ja
push
or
es
mov
mov
mov
adc
enter
in
sbb
xchg
ds
jns
inc
or
xchg
mov
pop
xchg
xchg
push
leave
fcomp
enter
movs
mov
das
(bad)
(bad)
fcomp
aaa
mov
cmp
inc
sub
(bad)
push
loopne
and
push
cmp
cmc
pop
push
outs
mov
and
mov
and
(bad)
or
fstp
hlt
and
or
push
mov
daa
pop
and
stos
les
fisubr
push
add
add
mov
and
fidivr
ror
fisub
jne
sbb
lock
adc
fcomp
ins
das
mov
(bad)
retf
retf
(bad)
cmp
mov
mov
fisttp
fistp
mov
add
stos
cmp
pop
cmp
inc
mov
sub
push
test
pop
xor
repnz
inc
ret
jl
outs
dec
sub
ds
jl
outs
inc
fsubr
js
adc
(bad)
les
pop
hlt
fisttp
sti
dec
inc
es
xchg
fld
scas
cmp
loope
pushf
sub
jmp
frstor
mov
xor
mov
or
lock
and
cld
aad
add
or
xchg
arpl
test
xchg
cdq
adc
test
xor
(bad)
fdivp
sub
push
clc
es
loope
and
das
aas
fisttp
pop
cmps
adc
adc
push
mov
out
mov
lock
adc
test
sbb
es
add
rcr
xchg
inc
dec
push
(bad)
pop
mov
lock
jb
jns
push
stos
jecxz
sub
add
shl
repnz
sbb
mov
and
pop
and
les
cmc
mul
pop
das
outs
loope
and
jns
mov
ins
mov
retf
shl
mov
outs
repnz
and
add
cmp
pop
push
mov
test
push
int3
mov
ret
rol
add
inc
arpl
shr
cmc
sbb
add
mov
sbb
out
sub
xor
movs
outs
neg
das
mov
jl
mov
out
in
add
aaa
sar
scas
(bad)
mov
jo
inc
std
push
shr
je
cli
pop
popf
xchg
popf
inc
(bad)
push
adc
or
das
push
or
das
cld
or
add
push
inc
inc
jb
ja
pusha
clc
add
jae
and
les
xor
dec
outs
and
xchg
arpl
jmp
mov
cmp
stos
pop
test
adc
cmp
sbb
adc
fnsetpm(287
push
adc
vmread
xor
shl
out
rol
xchg
mov
cld
and
dec
xchg
rcr
jb
adc
dec
fsub
imul
aad
es
sub
sub
add
call
xor
arpl
test
enter
das
inc
or
xor
mov
int3
lea
jecxz
jge
dec
adc
jecxz
dec
or
or
xchg
(bad)
and
stos
inc
sub
mov
in
jae
dec
pop
add
or
mov
sbb
movs
adc
pusha
xor
loope
ja
jmp
xor
mov
test
jae
adc
mov
xlat
push
add
scas
pop
or
or
xlat
inc
outs
push
cli
es
cmp
test
adc
add
add
adc
or
inc
and
mov
inc
fst
inc
and
xor
dec
fsub
mov
imul
dec
cmp
xor
test
test
nop
and
or
mov
jne
gs
pusha
clc
push
lds
rcl
pusha
push
out
mov
std
imul
cli
push
std
sub
sbb
push
vmovupd
rol
outs
pop
jg
aaa
popf
or
mov
jnp
sbb
and
test
fnstenv
pop
cmp
mov
and
shr
mov
es
add
dec
js
fimul
add
or
and
or
and
pop
stos
and
sbb
add
xor
and
push
add
xor
inc
bound
and
mov
fnsave
lock
and
ficom
mov
adc
cwde
sbb
jb
imul
shl
shl
lock
fistp
movs
xchg
cmc
ss
mov
das
fsubrp
out
les
fnstsw
adc
and
test
sub
dec
enter
pop
fnsave
dec
sbb
in
pop
int
cmp
jmp
in
out
out
pop
cmp
in
out
mov
(bad)
retf
xchg
scas
or
mov
add
rcr
div
in
inc
aas
aaa
xor
loop
sub
xlat
push
push
xchg
movs
and
repnz
mov
cmp
dec
add
ins
jns
jmp
inc
adc
sub
adc
dec
sub
mov
das
cmp
add
loopne
das
xlat
mov
jmp
add
int3
shr
or
int
push
push
xor
imul
out
outs
push
or
adc
adc
aam
loopne
adc
xchg
sbb
mov
add
push
test
sub
xchg
adc
out
adc
lock
cmp
sbb
aaa
add
and
mov
adc
test
lock
inc
adc
inc
in
sub
xchg
sbb
icebp
in
lahf
mov
icebp
mov
repnz
enter
ror
mov
js
inc
mov
lock
mov
inc
lods
lahf
dec
repnz
xor
or
mov
mov
mov
jns
bnd
mov
shl
in
int3
cmp
popa
xlat
daa
adc
sti
sub
adc
jo
test
pop
(bad)
hlt
xchg
test
hlt
das
pop
hlt
xlat
test
dec
push
add
and
out
rcl
out
inc
pop
hlt
das
xchg
hlt
xlat
or
xor
imul
shl
hlt
(bad)
sar
ret
jo
outs
pop
dec
push
inc
jno
(bad)
dec
mov
jne
adc
jecxz
cmc
cmp
fdiv
(bad)
es
mov
das
push
fbstp
adc
loopne
push
clc
rcr
scas
jne
adc
test
mov
add
aam
jecxz
rcl
aam
clc
shl
inc
rol
inc
pop
add
mul
mov
loopne
and
jmp
dec
mul
rcr
in
les
mul
mov
push
int3
es
das
adc
cmps
jp
clc
out
jmp
adc
pop
in
clc
out
push
popf
jecxz
clc
aaa
mov
out
jae
and
sub
ret
pop
sbb
ret
rol
inc
ret
ins
xchg
mov
dec
in
aaa
push
inc
add
and
ret
push
fucom
stc
neg
push
movs
retf
(bad)
cli
das
inc
icebp
adc
sti
pmulhuw
mov
test
dec
cmp
or
cmp
mov
and
and
out
pop
enter
call
fild
not
pop
mov
mov
rcl
call
cld
popa
in
fs
rdpmc
jbe
jb
repnz
or
push
(bad)
call
es
pop
sub
mov
shl
dec
mov
scas
mov
add
repz
in
pop
repz
jo
daa
or
out
repz
pusha
aam
jae
fsubr
ror
cmp
mov
jno
xchg
pop
and
add
adc
repz
add
jl
outs
pop
pop
lock
jl
repz
mov
cs
loop
push
inc
fdivr
add
and
push
inc
mov
inc
test
mov
add
mov
jno
dec
ins
jae
nop
push
mov
mov
aam
das
sub
sub
pop
mov
cwde
pushf
popf
fld
mov
push
xchg
inc
dec
rcl
pop
repz
add
ret
cld
jo
enter
dec
or
or
ret
adc
lock
and
xor
add
adc
ret
stos
xor
sbb
mov
xor
mov
inc
push
add
js
outs
cmps
push
enter
cmps
outs
test
inc
push
sbb
fmul
js
or
fdiv
inc
rcr
mov
std
mov
jo
add
pop
push
push
pop
jo
divps
inc
arpl
mov
jo
push
test
mov
or
dec
fadd
jo
cmp
jge
dec
inc
add
add
sbb
mul
inc
gs
mov
das
in
pop
mov
adc
add
mov
ret
inc
test
pop
xchg
add
lods
add
push
mov
stc
add
sti
add
(bad)
add
or
bound
ret
pop
xchg
pop
cmp
xchg
lds
ror
inc
sub
add
js
add
mov
loopne
lsl
cmp
inc
inc
jo
in
in
mov
dec
shl
inc
push
adc
add
jmp
sub
cmp
or
iret
test
inc
dec
stc
xlat
xor
jecxz
pop
adc
cmp
movs
fistp
pop
pop
jo
sub
mov
mov
push
jg
or
sub
fcmovnu
das
out
pop
jo
test
retf
mov
pusha
or
pop
sbb
or
or
dec
(bad)
mov
sbb
leave
or
or
add
mov
add
mov
dec
ret
rol
add
retf
sbb
add
push
add
fisub
shr
out
or
enter
loopne
jno
inc
adc
or
sbb
enter
rcl
(bad)
call
jno
jmp
cmp
jmp
or
or
retf
loopne
push
add
fmul
addr16
and
jecxz
dec
dec
addr16
mov
dec
dec
jl
pop
adc
div
dec
lods
sbb
jecxz
cmps
pop
js
and
in
ss
nop
pop
sub
ss
push
and
mov
mov
adc
nop
push
fdiv
mov
pushf
mov
and
jno
dec
pop
hlt
or
js
(bad)
cmp
lahf
xor
js
xchg
or
push
nop
retf
pop
mov
stos
xor
dec
sub
popa
or
mov
test
enter
xlat
mov
jmp
or
jno
mov
xor
jl
inc
dec
or
dec
inc
jl
and
inc
xlat
push
push
jg
inc
cmp
jne
or
jno
comiss
scas
add
fild
push
bswap
enter
sbb
inc
int
jo
es
movs
pandn
or
sbb
xor
adc
shl
adc
push
int
cwde
loope
add
pop
push
push
and
push
ror
mov
in
int3
jno
push
pop
fist
fnstcw
dec
adc
cmp
pop
adc
sbb
dec
add
and
jecxz
adc
mov
aad
fistp
int3
pop
inc
adc
inc
dec
push
scas
(bad)
int3
out
or
inc
adc
jns
aam
inc
adc
jecxz
dec
adc
arpl
push
ja
mov
jecxz
int3
imul
loop
inc
adc
retf
das
es
into
cmc
xchg
adc
add
(bad)
and
fist
jg
xchg
cmp
adc
dec
xchg
jo
aam
and
jne
pop
inc
push
inc
adc
into
ror
pop
imul
or
fadd
std
xlat
imul
retf
mov
jne
cmps
loop
inc
adc
clc
mov
push
xor
das
iret
push
xor
add
mov
mov
xchg
(bad)
jno
pop
xor
push
je
inc
cld
add
and
and
cmps
mov
push
jo
push
add
inc
je
sbb
cmp
mov
jge
add
mov
loop
push
shl
xchg
xchg
daa
mov
psubsw
push
leave
enter
ret
inc
mov
mov
pop
fimul
add
adc
adc
mov
sbb
pop
sbb
push
or
imul
mov
sbb
mov
imul
inc
mov
push
mov
add
jae
cmp
imul
or
lds
pop
or
stos
sbb
sub
movs
pop
sub
int
gs
dec
pop
or
enter
shl
push
pop
sar
pusha
and
js
pop
les
add
test
leave
imul
lea
rcl
cmps
outs
imul
repnz
add
test
sub
inc
adc
push
(bad)
(bad)
lds
rol
imul
cmp
or
push
imul
mov
sbb
and
loopne
pop
aas
inc
xor
add
sbb
mov
aas
mov
sbb
or
xchg
ds
mov
rcl
xor
dec
xor
adc
push
dec
mov
mov
fsubr
daa
pop
mov
push
divps
xchg
xchg
daa
cdq
sbb
adc
sbb
xlat
pop
pop
lods
cmp
push
dec
sbb
xor
lea
push
js
popf
sbb
das
mov
sbb
into
sbb
ret
ficomp
jne
pop
xchg
inc
xchg
outs
shr
pop
lods
daa
rcl
into
ret
pop
(bad)
rol
add
add
aam
or
cmps
add
aas
pop
test
jno
lock
sbb
fs
aam
add
mov
dec
clc
push
bound
shl
sub
cs
pop
outs
sub
inc
shl
aaa
leave
ret
xchg
and
dec
pop
mov
inc
xlat
iret
les
inc
call
adc
test
inc
and
in
xchg
shr
mov
mov
mov
cmps
and
sub
pop
movs
das
ret
or
out
pop
paddsb
vmread
push
dec
ret
add
sub
ret
addr16
cwde
and
cmc
test
rcl
inc
xor
jbe
test
and
shl
add
push
xchg
test
inc
test
retf
test
cmps
pop
int
and
loopne
and
xor
xlat
daa
dec
inc
clc
retf
mov
cmps
fcomp
mov
add
and
adc
inc
or
and
inc
es
das
loope
test
cmps
sbb
aad
push
cld
movs
shr
arpl
add
fwait
inc
pusha
and
push
push
pusha
aad
psllq
add
mov
xor
or
pusha
add
push
mov
inc
lock
aaa
pop
pop
cmp
mov
adc
and
or
js
icebp
push
outs
pusha
push
aam
jp
sbb
lods
xchg
es
sub
loop
push
outs
xor
add
push
push
shr
not
adc
push
test
pop
mov
sbb
and
jo
add
xor
imul
and
sub
sar
inc
pop
add
add
jo
outs
jae
xchg
sar
or
sub
dec
movs
popa
push
inc
sbb
jecxz
sub
inc
mov
cmp
inc
sahf
pushf
pushf
lods
rol
sub
jae
dec
dec
xchg
xor
cmp
cmp
aas
arpl
cmp
sbb
push
pushf
leave
in
and
ins
pop
jno
dec
leave
repz
mov
push
icebp
fimul
push
mov
sbb
xsha256
cmps
push
xor
shl
xor
xor
or
sbb
add
jno
(bad)
rcl
in
daa
pop
inc
pop
shr
xor
push
and
sbb
adc
xor
inc
xor
test
lea
icebp
sub
test
jg
add
(bad)
jmp
xchg
rcl
push
in
dec
mov
xchg
test
pop
(bad)
outs
or
add
jns
pop
add
jmp
(bad)
sub
jae
jne
adc
add
sub
push
xchg
xchg
mov
dec
xchg
jne
sub
test
leave
add
sub
adc
push
dec
in
mov
sbb
inc
push
mov
and
dec
jae
cmp
lods
addr16
inc
jbe
or
loopne
jbe
sub
jno
push
add
push
add
rol
pusha
xor
ja
scas
and
mov
push
inc
ret
add
outs
pop
push
lds
jmp
inc
pop
sbb
mov
dec
cmps
add
jae
dec
test
shr
sti
push
lock
xor
inc
sub
std
xchg
push
or
sbb
or
dec
ins
bound
push
inc
lea
and
or
pop
and
ret
dec
iret
dec
push
add
jae
adc
cmp
(bad)
lods
or
aad
inc
inc
mov
and
mov
mov
mov
mov
sbb
cmp
push
mov
add
test
stc
outs
jb
inc
aaa
nop
nop
stos
or
add
or
and
dec
add
xor
fdiv
xor
movs
pop
xchg
cmp
or
dec
or
bound
out
or
and
shl
call
add
adc
add
or
(bad)
add
xchg
loopne
mov
xchg
inc
jmp
sbb
pop
sub
inc
fnstsw
pusha
pop
scas
mov
(bad)
dec
xor
sbb
sbb
add
sub
inc
cli
pop
iret
mov
mov
and
iret
jno
sub
jb
xor
adc
out
adc
sbb
sub
pop
fdivr
popa
inc
push
loopne
push
push
mov
ror
adc
and
dec
pop
sbb
dec
loop
fisttp
xor
pop
js
xchg
ror
dec
and
add
add
xchg
(bad)
aam
add
cmp
pop
movs
sbb
xor
xor
mov
add
mov
ret
sub
outs
das
shl
int3
aad
call
aad
xor
sbb
or
dec
xor
mov
fyl2x
daa
lahf
push
loopne
(bad)
idiv
mov
xor
pop
pop
pop
xor
lods
aam
pushf
scas
movhps
aam
lods
xor
pop
lods
xor
mov
scas
adc
pop
add
mov
mov
mov
call
and
add
dec
jo
fist
cmp
add
inc
femms
mov
aaa
(bad)
imul
xlat
popf
mov
test
aaa
out
cmp
lods
das
retf
daa
das
das
(bad)
aaa
push
cmp
cmp
inc
push
add
rol
cmp
cmp
sbb
pop
cmp
mov
pop
retf
pop
movs
cmp
ror
lds
mov
dec
rsm
fwait
stos
add
aam
sub
inc
mov
outs
loopne
cmp
cmp
es
das
fnstcw
aaa
sbb
sub
xor
hlt
fcomp
out
mov
xchg
add
xchg
cmp
add
jecxz
test
mul
das
or
adc
dec
fnstsw
pop
or
ins
add
pop
pop
lods
aam
add
xor
les
adc
dec
popf
movs
and
mov
sbb
pop
push
push
rol
jnp
sahf
push
fldcw
das
add
xor
hlt
fdivr
xlat
jno
pop
ror
fnstcw
lds
jno
ss
leave
mov
(bad)
xor
xchg
ss
sub
in
(bad)
and
sub
lods
add
js
aas
fistp
aas
lea
jnp
maskmovq
neg
outs
mov
dec
dec
inc
sahf
dec
inc
cdq
mov
dec
daa
inc
jae
repz
xchg
xchg
daa
sub
mov
push
inc
sub
fs
leave
call
in
mov
jae
xor
fild
sti
mov
inc
pop
ds
adc
push
xchg
in
add
xlat
xlat
mov
daa
push
fcomp
dec
or
xlat
jno
add
jl
xlat
hlt
fcom
inc
mov
fbstp
inc
test
adc
inc
dec
add
mov
add
mov
ret
ins
push
(bad)
push
add
fld
xlat
adc
add
and
mov
mov
in
pop
add
sub
int3
fnstenv
inc
add
xlat
add
dec
and
dec
inc
xlat
fwait
jl
push
repnz
xlat
mov
mov
sar
xlat
jo
inc
bound
xchg
mov
dec
push
add
cmp
xlat
mov
pop
clc
fidivr
pop
add
mov
jae
shr
add
inc
mov
xchg
mov
inc
sub
mov
xlat
inc
or
add
mov
fdivr
dec
xlat
lods
dec
push
test
add
sub
adc
xlat
mov
xlat
add
xlat
inc
leave
mov
inc
mov
xlat
add
adc
inc
or
mov
adc
rcl
test
xor
xor
sub
inc
sub
or
inc
pop
stos
add
add
xlat
xchg
test
pop
and
or
xchg
push
mov
and
jl
sbb
mov
inc
fs
lahf
pop
or
pop
adc
(bad)
add
add
cld
(bad)
inc
leave
and
ror
movs
pop
cmp
xor
adc
mov
mov
add
test
stos
push
dec
mov
jae
mov
sub
mov
push
test
mov
in
xor
outs
mov
leave
push
mov
sar
push
sub
inc
leave
scas
pop
std
je
es
dec
and
inc
push
aam
std
mov
sub
dec
pop
enter
mov
inc
fdivrp
dec
das
aas
daa
jo
aaa
dec
lods
pop
dec
push
aaa
add
push
fwait
sbb
add
stc
adc
push
and
ficomp
jo
pop
xor
ror
dec
inc
pusha
loopne
cmp
sbb
mov
lea
mov
xlat
push
aam
sbb
inc
in
or
adc
pop
xchg
inc
dec
fdiv
sub
icebp
dec
aaa
scas
or
ins
stc
mov
adc
loopne
loopne
inc
pop
icebp
dec
rol
sub
sub
push
cmc
not
(bad)
dec
cmp
scas
shl
mov
in
sbb
ds
and
dec
push
or
adc
stos
aam
mov
hlt
sub
push
arpl
arpl
push
loopne
xor
jns
add
pop
arpl
inc
inc
popf
js
movs
clc
push
pop
int
dec
mov
inc
je
adc
mov
lods
push
cwde
movs
push
test
fisubr
ret
push
cmps
inc
dec
and
out
cwde
test
iret
or
push
ret
or
mov
test
in
popf
nop
xchg
inc
je
test
cwde
in
mov
inc
movs
dec
stos
jecxz
and
test
push
mov
je
movs
jns
shl
sub
sar
mov
adc
inc
push
popa
adc
mov
stos
fucomi
(bad)
icebp
lock
mul
pop
clc
das
pop
(bad)
push
(bad)
xor
inc
pop
xor
mov
or
push
les
or
inc
addr16
mov
add
push
lock
inc
push
inc
int
push
stos
ins
fwait
popf
sbb
call
das
adc
lahf
hlt
in
js
stc
jmp
out
push
mov
inc
pop
xor
inc
sub
sbb
push
xchg
daa
mov
test
push
sbb
jecxz
jo
enter
xor
test
dec
inc
dec
and
and
xor
add
cwde
test
push
(bad)
push
loope
adc
es
pop
jno
aas
mov
push
xchg
mov
mov
ror
cmp
iret
stos
push
pop
inc
sub
push
jmp
xchg
je
imul
mov
pusha
add
(bad)
mov
imul
mov
push
pop
push
sub
pop
sub
dec
adc
aam
call
pop
test
call
call
or
je
aam
sub
test
mov
or
xchg
pop
xlat
pop
jns
add
in
out
or
jnp
ret
push
push
add
sub
sbb
push
and
in
pop
cmp
or
add
inc
adc
jo
xchg
sbb
sbb
outs
lods
xlat
test
xchg
pop
retf
fsub
pop
sbb
cwde
jno
pop
outs
pop
pop
outs
dec
dec
(bad)
es
das
pop
pop
outs
loope
and
ror
call
es
dec
sub
push
xor
out
loope
xlat
pop
adc
inc
add
pop
ins
sub
add
call
push
ins
xor
imul
std
pop
xlat
test
xchg
pop
fwait
lock
mov
pop
sbb
and
jmp
das
xchg
pop
(bad)
loop
dec
dec
loop
stos
movs
cmp
push
mov
ret
xchg
fmul
inc
jb
(bad)
fmul
dec
jns
mov
pop
test
and
pop
or
cmp
retf
jb
call
mov
cmpxchg
sbb
repz
mov
mov
ror
bound
test
movs
push
mov
fisttp
add
cmp
push
push
daa
test
sbb
lea
lea
and
adc
or
dec
push
push
mov
mov
xor
fwait
push
bound
sub
or
mov
lea
lea
jp
mov
jno
mov
lds
(bad)
shl
inc
mov
sub
xor
test
test
in
push
inc
add
jb
arpl
or
movs
mov
inc
test
sbb
jo
add
data16
(bad)
push
leave
pop
push
xor
rol
dec
ret
aam
dec
test
ja
fimul
mov
mov
aas
sub
jecxz
mov
or
test
rol
pop
dec
ins
mov
xor
inc
and
sbb
push
mov
jb
push
add
aam
jle
push
lock
adc
mov
fs
mov
fidiv
push
gs
xchg
jp
cmp
das
jmp
cmp
dec
jmp
inc
push
jo
or
mov
data16
inc
scas
pop
std
aam
ja
adc
adc
stos
and
fwait
pop
push
addr16
add
push
cmps
cwde
jmp
fdiv
push
fist
addr16
add
sub
xor
dec
fimul
daa
test
fs
loopne
jmp
jns
sbb
xlat
or
pop
pop
ins
dec
inc
or
xlat
push
adc
mov
inc
dec
(bad)
push
enter
push
aas
xchg
fisttp
test
inc
mov
outs
push
rcl
imul
push
inc
call
or
aas
(bad)
cld
pop
inc
or
aas
icebp
jbe
add
retf
sqrtps
or
rcr
adc
out
daa
ret
sbb
sbb
add
imul
stos
add
pop
lock
lock
jle
mov
cdq
ret
outs
jmp
stc
adc
cs
test
js
adc
or
cmp
pop
sub
mov
inc
dec
shl
or
sbb
dec
push
inc
cmp
inc
jno
sbb
adc
div
outs
shl
inc
das
arpl
jo
jp
shr
push
outs
and
jg
in
das
lods
ins
out
ins
adc
jo
inc
jno
inc
xchg
push
mov
out
mul
outs
sub
jns
ret
adc
dec
outs
push
pop
aad
and
cmp
adc
dec
outs
sbb
add
mov
retf
outs
jno
out
aad
aaa
test
push
adc
aas
push
add
push
and
mov
mov
mov
pop
test
mov
cmps
outs
ja
add
cmc
shr
sub
jae
(bad)
repnz
push
mov
cld
outs
loope
pop
add
push
les
and
fcmovnu
mov
push
fdiv
mov
xchg
xchg
xor
scas
sbb
cs
stos
xor
out
jno
xor
int
sbb
add
cwde
call
call
cld
outs
dec
pop
pop
mov
inc
fisttp
outs
jo
inc
in
outs
adc
mov
adc
pop
fdiv
ins
jb
test
ret
xchg
daa
mov
mov
lock
cs
bnd
or
inc
jae
lods
push
sbb
repz
jae
inc
repz
stc
jae
add
rcl
dec
cld
outs
mov
icebp
jae
fdiv
cmp
push
movs
jne
adc
fisub
popf
das
mov
lock
inc
jmp
in
(bad)
bnd
mov
jne
adc
cmp
xchg
lock
xor
jne
push
xchg
pop
mov
aaa
jae
pop
or
repnz
(bad)
and
add
push
sub
add
mov
js
(bad)
mov
addr16
adc
repnz
mov
cmp
ja
test
out
jbe
jl
or
(bad)
repz
(bad)
cmp
je
dec
mov
and
int3
gs
ja
fadd
cmp
hlt
jns
adc
mov
inc
fs
sbb
arpl
push
icebp
mov
lods
push
mov
loopne
cmp
(bad)
push
mov
daa
jp
and
and
neg
clc
sub
fsubrp
jno
mov
dec
and
jl
pop
enter
imul
mov
daa
mov
pop
call
pushf
xchg
pop
cmps
cwde
int
scas
in
sar
or
das
jb
cmps
rcr
jge
sti
xor
aad
pop
jle
aaa
cmps
jne
xor
outs
(bad)
pushaw
inc
rol
cmp
stos
inc
aad
or
sub
in
jno
sbb
mov
add
adc
shl
jno
sbb
sbb
mov
out
fwait
mov
js
sbb
shr
stos
lods
jle
mov
add
sbb
push
xor
out
movs
test
inc
mov
pop
push
add
pushf
and
and
sub
mov
add
xor
stos
pusha
out
loop
enter
jle
add
adc
pushf
ja
add
add
mov
shrd
scas
and
loope
aam
fs
mov
sbb
imul
or
aas
sub
sbb
xor
pop
sar
mov
cmp
add
enter
stos
fld
test
loope
add
pop
push
aad
mov
das
stos
add
add
jne
jne
push
rol
mov
cld
xor
add
pop
lods
mov
jmp
fld
fidivr
stos
rcr
fisub
xchg
loopne
inc
xchg
idiv
lock
pop
and
xchg
jns
add
mov
pop
fidivr
daa
movs
std
add
leave
mov
je
xor
or
xor
mov
jb
clc
jg
mov
pop
gs
or
inc
jmp
sub
or
shl
stos
push
sbb
push
inc
(bad)
xor
pop
mov
add
add
sar
les
sub
add
lock
jp
test
inc
stos
jno
add
xchg
loopne
out
jmp
xchg
in
das
or
add
test
sub
pusha
mov
pop
test
adc
mov
add
int
add
stos
lea
pop
movs
sbb
adc
and
test
sub
es
aaa
lea
xchg
sahf
sub
sbb
rcr
fadd
dec
sti
or
cmp
(bad)
or
sti
xchg
xor
or
(bad)
mov
xchg
mov
or
pop
xchg
sub
mov
or
xchg
cld
or
shr
add
pop
pop
mov
cld
and
mov
in
xor
or
adc
push
add
dec
fisub
push
sub
mov
sub
add
sahf
icebp
or
pop
outs
clc
push
fs
out
xor
dec
sub
(bad)
xor
and
aam
lahf
ins
xchg
in
(bad)
mov
(bad)
cmp
pusha
push
sahf
mov
jecxz
mov
dec
dec
outs
jbe
xchg
daa
daa
daa
sahf
in
adc
inc
jp
sti
jmp
leave
enter
leave
adc
fisttp
jle
leave
enter
in
and
pop
add
leave
leave
cmps
loope
xchg
js
jb
jg
arpl
pop
mov
shl
test
sti
test
lahf
(bad)
punpckhdq
push
stos
bound
movs
cmps
and
add
ins
and
lods
and
stc
pop
pop
inc
adc
inc
mov
adc
xor
cmp
mov
lock
push
inc
stos
(bad)
mov
xchg
adc
pop
shl
push
lock
cdq
inc
stos
mov
push
add
movs
and
enter
mov
mov
lods
and
movs
mov
adc
or
xchg
and
movs
iret
add
jno
cmp
pusha
movs
lock
jno
pop
add
adc
mov
movs
(bad)
sub
or
movs
xchg
add
pusha
movs
xchg
sbb
mov
movs
add
mov
movs
adc
les
out
dec
movs
or
mov
add
push
mov
movs
mov
movs
or
movs
adc
jge
xor
movs
and
imul
sbb
movs
pusha
add
pusha
movs
or
aas
jno
xchg
mov
sti
add
push
or
or
mul
xchg
movs
xlat
or
test
xchg
mov
repnz
add
shl
shr
or
mov
push
div
add
aam
xor
or
inc
int3
cmp
mov
or
cwde
jo
test
or
xchg
jo
mov
hlt
lsl
xor
pop
dec
sbb
sbb
ret
in
ret
adc
aam
ins
ret
sbb
jg
push
xchg
fistp
arpl
scas
xchg
ud1
adc
xor
es
in
dec
pop
xor
jmp
hlt
aam
inc
je
cwde
push
daa
mov
bound
stos
les
pop
bound
or
stos
push
or
jle
mov
cdq
out
adc
test
xor
add
lea
dec
xor
mov
jno
test
mov
and
mov
bound
inc
push
inc
pop
in
cwde
mov
jno
mov
or
mov
cdq
push
xor
aaa
fstp
xor
and
retf
mov
test
cdq
rcr
les
das
ficomp
pop
adc
dec
adc
mov
sbb
sub
pop
add
xchg
lds
les
push
push
pop
cmp
jecxz
fwait
js
popf
sbb
sbb
pop
cmp
push
fwait
aas
add
scas
xchg
cld
or
fwait
or
sbb
dec
and
mov
test
pushf
xlat
sub
adc
cld
cmps
aas
mov
xor
adc
pusha
retf
adc
dec
inc
adc
and
adc
xlat
sbb
scas
lea
xor
cmps
xor
es
adc
and
outs
icebp
inc
adc
popf
or
into
cmp
inc
and
adc
inc
dec
push
add
add
pop
adc
pop
jns
ret
stos
adc
xchg
inc
sub
dec
seto
sahf
call
or
sahf
lahf
xchg
xchg
xchg
pop
pop
lahf
jle
stc
lahf
xor
jo
adc
push
mov
sti
cmc
inc
add
or
pusha
inc
retf
or
iret
pop
cmc
sbb
jae
fiadd
and
lock
dec
or
pop
jne
sub
jne
add
clc
fnstenv
cmps
mov
push
sub
rol
ins
cdq
aas
sub
mov
jb
nop
add
add
aas
jo
mov
mov
int
cmps
adc
das
addr16
add
add
loopne
shr
fadd
or
push
mov
loopne
push
mov
inc
or
add
mov
dec
jl
(bad)
loopne
lds
fsub
adc
popf
(bad)
shl
push
adc
(bad)
fcomp
inc
sysenter
jmp
clc
adc
sub
lock
jb
mov
add
in
cmp
popf
je
push
mov
cld
movs
mov
cmps
xadd
xchg
pop
xchg
mov
retf
lahf
(bad)
cld
cmps
cmp
not
cmps
loop
test
xchg
xchg
xchg
bound
leave
leave
ins
mov
in
fs
mov
mov
mov
pushf
mov
(bad)
and
pushf
mov
lods
mov
pcmpgtb
fdiv
mov
or
or
scas
dec
add
mov
pushf
shr
ds
dec
dec
mov
popf
mov
mov
pushf
rcr
mov
mov
xor
test
cmp
inc
nop
nop
jb
cmp
outs
sbb
add
mov
push
push
popf
inc
es
(bad)
ffree
mov
lds
mov
mov
push
outs
pop
jno
add
inc
push
mov
pop
add
cmp
mov
mov
sbb
pop
sub
pushf
shl
and
mov
add
and
inc
iret
add
sub
dec
sahf
loopne
sub
jb
or
test
jb
add
mov
xor
add
dec
mov
loop
push
xor
adc
and
mov
add
adc
mov
mov
inc
nop
int3
sar
add
pusha
xor
sub
adc
add
cmp
adc
mov
sub
adc
loopne
adc
inc
mov
mov
sbb
or
add
add
add
jns
or
or
and
retf
sbb
inc
or
inc
jns
push
push
add
mov
mov
dec
ds
mov
add
mov
and
and
scas
scas
pop
dec
push
loopne
jle
sbb
daa
pop
add
or
popf
inc
fist
push
add
cwde
std
push
jb
jns
pushf
je
gs
inc
aam
mov
es
jne
das
jecxz
bound
jle
inc
invd
jl
push
test
jno
mov
xor
mov
jmp
mov
jnp
fwait
mov
push
xchg
jns
mov
jo
sti
mov
(bad)
pushf
ja
xor
xor
add
sbb
mov
shr
sub
add
inc
dec
xor
clc
mov
pop
push
mov
neg
pop
push
dec
inc
je
mov
ror
jl
mov
add
movzx
sub
clts
and
add
out
add
dec
clc
stos
ins
lahf
wbinvd
add
lea
pop
inc
pop
ror
cmp
es
mov
popa
loop
leave
xchg
xchg
add
ins
dec
pop
jg
push
push
mov
inc
mov
call
pop
dec
popa
or
fmul
fwait
pop
or
pop
nop
fbld
add
xor
mov
and
dec
sbb
xchg
fistp
adc
fisttp
push
enter
jno
test
mov
rol
adc
jle
gs
add
add
cs
mov
test
xchg
push
jmp
rcl
mov
add
fild
adc
(bad)
mov
inc
sub
add
shr
aas
mov
xchg
mov
mov
scas
push
sub
sti
push
mov
sbb
sbb
push
mov
inc
sbb
inc
movs
sbb
or
invd
loopne
xchg
jno
push
inc
xor
sbb
stc
and
and
inc
adc
test
jne
ins
imul
outs
sbb
leave
mov
std
lock
inc
push
mov
jb
add
cmp
imul
mov
aam
sbb
cdq
inc
sbb
pop
dec
lea
or
mov
shl
les
mov
xchg
pop
lds
mov
or
aas
and
outs
mov
sbb
sbb
enter
inc
das
or
push
inc
rol
dec
xchg
inc
js
adc
adc
or
inc
outs
push
inc
and
addr16
stos
(bad)
xor
adc
adc
mov
clc
inc
mov
test
sbb
call
shr
leave
mov
and
dec
dec
pop
pop
cmp
pop
mov
pusha
or
inc
enter
inc
leave
stos
pop
adc
pop
fisubr
inc
adc
xlat
js
out
jg
mov
add
jne
mov
icebp
(bad)
out
ror
add
ret
nop
push
push
push
test
push
(bad)
outs
(bad)
lock
mov
mov
mov
inc
mov
aas
push
add
push
mov
or
js
inc
or
ror
add
mov
mov
(bad)
js
mov
mov
mov
dec
xor
and
or
mov
pop
xchg
pop
jns
pusha
neg
pop
ret
(bad)
fdiv
(bad)
cmps
test
inc
inc
call
inc
mov
sbb
shr
mov
(bad)
mov
jne
in
call
mov
sbb
aam
mov
test
je
outs
push
jmp
inc
add
(bad)
mov
call
dec
test
jl
push
(bad)
xor
mov
xchg
inc
or
push
sbb
sub
and
ins
outs
jnp
pop
xor
jmp
jmp
cmp
or
inc
sbb
or
in
call
sub
mov
mov
cmp
or
in
iret
mov
inc
mov
jmp
cld
or
adc
add
push
mov
lock
jg
push
rcl
mov
mov
and
add
test
add
mov
cwde
dec
pop
fcomp
mov
pop
pop
jo
push
je
ins
shl
ret
jmp
sbb
jg
add
add
fisttp
mov
mov
cld
nop
or
shl
push
hlt
aas
cmp
cmp
or
pop
xor
add
sti
ror
mov
adc
push
mov
or
push
cmp
imul
sub
ja
xor
pop
adc
sbb
inc
push
lahf
pop
push
aas
cmp
lea
mov
fnstsw
xor
pop
ret
inc
in
add
in
push
sti
mov
adc
xchg
je
push
cld
shr
jle
mov
je
clc
ror
dec
jne
adc
add
hlt
cmp
sbb
and
pop
in
fs
mov
xchg
mov
or
pop
add
inc
lock
jo
int3
cmp
or
jmp
nop
mov
dec
je
popf
and
inc
fucomp
cmps
inc
adc
mov
out
mov
sbb
mov
inc
fstp
jle
pop
xchg
pop
je
cmc
mov
mov
aaa
popa
test
push
add
mov
iret
rol
push
mov
ret
cmp
push
pop
and
pushf
shl
in
cmp
dec
icebp
and
push
scas
add
adc
add
(bad)
add
je
add
push
inc
cmp
xlat
fiadd
inc
add
arpl
push
push
ss
fs
dec
push
(bad)
out
xlat
mov
aas
or
add
ss
push
jns
dec
push
ins
test
inc
push
pop
inc
sbb
adc
ins
add
push
mov
jo
push
call
add
adc
pop
outs
fisub
push
dec
out
jbe
pop
leave
add
movq
icebp
xchg
pop
sub
je
add
cmps
pop
add
xchg
push
cld
add
xor
and
dec
and
inc
fisttp
or
jge
repz
cmp
jmp
or
call
jmp
xor
pusha
shr
mov
call
or
call
push
jmp
jbe
fisubr
sbb
sbb
clc
push
ins
mov
push
sub
mov
jbe
mov
ret
cs
mov
retf
call
sbb
ds
aam
or
xlat
pop
cmp
mov
cs
inc
lock
scas
xchg
jmp
pushf
mov
fsub
(bad)
mov
add
add
or
push
pusha
jnp
test
add
push
push
fcomip
cs
inc
or
mov
je
sbb
push
into
add
and
cmps
or
(bad)
(bad)
inc
add
add
push
pop
or
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
push
pop
add
and
fiadd
adc
push
push
fs
sahf
out
xchg
jns
retf
std
push
(bad)
pop
cmp
repz
inc
push
arpl
iret
repz
idiv
(bad)
cld
or
repz
repz
push
pop
ins
jnp
jecxz
iret
mov
stc
push
or
sar
pop
enter
aam
fsub
mov
shl
sub
inc
pop
add
mov
push
and
pop
enter
mov
das
in
and
movs
les
jo
or
push
mov
push
mov
nop
(bad)
lock
or
xchg
xor
add
cmp
jp
push
mov
and
push
call
mov
pusha
mov
imul
sbb
in
mov
add
or
clc
mov
pop
xchg
sbb
xor
call
sub
jecxz
aas
push
lock
loope
int
aaa
test
ja
inc
sbb
cmp
sbb
inc
ret
test
sub
outs
adc
xchg
pusha
test
test
or
jle
jbe
or
or
pop
cmp
mov
xchg
mov
mov
xchg
mov
mov
sbb
mov
inc
retf
mov
ja
xor
lock
lea
daa
add
rol
push
in
ins
test
pusha
leave
pop
dec
mov
(bad)
mov
enter
dec
retf
inc
sub
outs
or
ret
iret
xor
push
cmp
xor
ja
push
fs
setne
neg
mov
arpl
test
xor
mov
push
xor
(bad)
neg
fistp
adc
or
push
and
mov
or
pop
outs
push
jb
imul
sub
xor
mov
setne
test
daa
add
xchg
sub
add
nop
fs
sti
mov
mov
je
mov
mov
test
cmp
sbb
pop
call
dec
xor
cmp
(bad)
push
xor
sbb
jnp
inc
mov
pop
mov
xlat
xchg
(bad)
call
sbb
push
or
add
inc
or
ja
jmp
mov
pop
pop
ret
dec
mov
xchg
and
and
xlat
sub
cld
and
mov
bound
push
sub
or
pop
inc
mov
mov
mov
sbb
fcom
add
add
dec
fdiv
xchg
inc
cmps
or
or
inc
or
cmps
sub
scas
sbb
add
add
adc
and
es
ret
inc
int
int
out
cmps
imul
sahf
out
sahf
test
mov
aad
fmul
or
iret
push
das
inc
push
bound
iret
repz
popf
(bad)
je
inc
push
sahf
addr16
stos
mov
jo
mov
and
xor
hlt
and
sbb
mov
sbb
test
cld
adc
xor
nop
or
pusha
js
or
nop
nop
mov
nop
or
int3
call
dec
cs
pop
dec
xchg
nop
cmp
sbb
sbb
fcomp
ror
sbb
and
adc
xor
jns
and
push
dec
jg
ja
push
push
imul
fs
aas
gs
and
pop
xor
jne
dec
mov
ret
addr16
push
cs
push
dec
add
dec
lahf
aaa
mov
movs
pop
add
imul
push
test
add
inc
add
das
mov
add
(bad)
mov
xchg
cmp
pop
and
xor
xor
xor
push
push
jnp
push
and
push
add
add
mov
inc
(bad)
es
out
ret
(bad)
push
push
(bad)
dec
xchg
inc
pop
rol
aas
push
imul
and
inc
lock
push
push
sbb
or
aaa
inc
jp
cs
add
sbb
xor
mov
xchg
ficom
mov
push
pop
or
mov
xor
call
sbb
movs
xor
jg
mov
imul
adc
cmp
xchg
call
add
pop
shr
jne
jb
sti
xor
arpl
outs
popa
ja
mov
out
popa
ds
ud0
and
jbe
push
inc
neg
les
xchg
dec
call
sub
add
sub
scas
inc
push
pop
push
push
jo
jae
push
xor
add
xchg
jmp
inc
shl
in
test
jo
les
dec
dec
call
(bad)
jle
inc
in
mov
in
(bad)
daa
jb
hlt
xor
clc
xchg
push
loopne
lods
pop
dec
and
mov
or
sbb
xchg
repnz
and
jle
in
aam
jmp
mov
inc
or
lods
jecxz
mov
jg
cmps
jge
in
aad
mov
add
mov
push
push
jle
test
push
jmp
jo
sbb
or
mov
xchg
in
adc
xor
(bad)
gs
dec
xbegin
mov
add
sub
nop
mov
in
mov
mov
adc
add
add
ret
xlat
or
push
inc
pusha
sub
sbb
loop
mov
scas
push
in
jge
mov
lods
add
clc
mov
jmp
test
jmp
mov
jmp
add
add
(bad)
xchg
shr
mov
sbb
aaa
push
dec
jne
aaa
xor
mov
sbb
add
clc
lahf
and
repnz
(bad)
mov
dec
lods
inc
les
(bad)
or
or
push
pop
adc
add
add
and
xor
adc
cdq
cwde
sbb
jl
push
sbb
mov
inc
jecxz
clc
rol
and
xor
jl
xchg
clc
push
dec
bound
inc
add
rcl
jecxz
add
jge
inc
jmp
xor
popa
inc
cmp
call
lock
xlat
push
pop
pop
pop
pop
or
xchg
adc
iret
sbb
lock
loop
(bad)
fild
sbb
shl
xor
das
cmovp
jmp
or
push
sbb
xchg
pop
jg
ret
cs
stc
mov
push
mov
xor
and
mov
xor
cmp
pop
je
mov
jne
and
ja
push
(bad)
arpl
cld
test
imul
push
cli
jmp
dec
sub
xchg
aam
jg
mov
pop
adc
xor
imul
cmp
sub
imul
pop
fdiv
or
and
aas
loopne
push
push
jnp
fld
cwde
fisttp
lock
push
es
or
inc
lea
pop
sub
call
and
sub
clc
(bad)
push
in
sbb
add
push
lds
add
jnp
or
adc
imul
or
cmp
fldcw
(bad)
fisttp
add
lock
cli
or
jp
test
mov
test
add
addr16
mov
retf
int3
xor
push
push
adc
dec
mov
adc
and
cmps
shl
lock
sti
sahf
add
fsubr
fdivp
jle
push
scas
xor
jae
cmp
xchg
fidivr
jg
(bad)
mov
add
adc
ins
push
mov
mov
jecxz
or
retf
sbb
mov
sbb
nop
sub
adc
adc
mov
cli
mov
mov
(bad)
jo
inc
cmp
mov
(bad)
xchg
cmp
jne
adc
test
jne
mov
neg
push
jnp
add
mov
fs
test
dec
mov
cdq
sbb
and
sub
push
outs
xchg
nop
cmovs
dec
or
dec
add
mov
xchg
xchg
pop
je
mov
push
(bad)
shl
mov
mov
cli
add
push
inc
dec
movs
xor
mov
stos
mov
xchg
add
push
jo
aaa
ret
adc
push
cmp
adc
add
xchg
push
fisub
retf
xor
sub
inc
test
add
add
mov
xor
or
xor
imul
js
xchg
packuswb
sub
pop
or
mov
push
rol
pop
cmc
or
cmp
dec
fbstp
adc
xor
scas
loopne
loop
dec
out
or
int
daa
pop
xor
fst
jmp
clc
inc
cmp
cmps
and
mov
(bad)
(bad)
bound
or
pop
adc
daa
push
push
call
fidiv
std
cs
push
imul
pop
or
inc
mov
mov
mov
push
cmps
or
mov
cdq
sub
pop
inc
(bad)
or
mov
ss
fadd
dec
inc
add
add
or
xchg
pop
fld
xor
jne
jb
sahf
push
call
fnstsw
xchg
cmovo
nop
xor
ret
or
ja
push
aas
std
xor
repz
jmp
push
xor
aad
add
(bad)
adc
jg
inc
add
js
out
mov
dec
fmul
dec
scas
or
outs
bound
js
push
add
dec
add
test
mov
test
adc
jo
(bad)
mov
xchg
stos
lahf
imul
je
mov
pop
psubb
xor
and
or
jne
test
sbb
mul
(bad)
pop
clc
xchg
and
pop
push
dec
jne
lahf
sbb
add
(bad)
int
add
inc
nop
loopne
add
es
mov
mov
xor
ror
int
jp
pop
sbb
xor
arpl
test
mul
and
mov
adc
xchg
xchg
inc
sbb
sbb
fistp
outs
pop
xchg
add
mov
test
add
loopne
dec
or
add
and
add
push
fadd
and
in
push
inc
lock
add
sbb
fldenv
push
ins
push
add
jp
inc
push
mov
inc
or
xor
cwde
inc
and
dec
pop
cmp
mov
cmp
stos
jle
mov
shr
pusha
gs
hlt
pop
pop
out
ror
xor
and
pop
adc
pusha
ror
sbb
movs
mov
xor
cmp
rcl
xor
loop
xor
(bad)
push
mov
mov
inc
aaa
inc
push
dec
test
add
dec
and
loope
shl
sub
and
xor
xchg
mov
cwde
add
adc
sub
cmp
ins
imul
lds
push
movs
adc
retf
ss
or
pop
enter
sub
push
pop
jecxz
jecxz
adc
shl
mov
retf
fdiv
push
test
mov
out
out
push
aaa
pop
adc
inc
xchg
mov
outs
cmps
push
loopne
sbb
popa
in
mov
in
mov
in
ret
(bad)
test
in
xor
imul
lock
xor
mov
imul
jmp
(bad)
push
mov
(bad)
cmp
inc
adc
inc
or
in
and
and
adc
mov
cmp
aaa
iret
test
test
stos
sbb
push
xor
adc
xor
iret
into
jbe
sbb
add
imul
cmp
sub
add
xor
in
aaa
shl
nop
fbld
add
xor
test
scas
push
outs
adc
adc
xchg
out
scas
pop
push
cmp
xor
xor
xlat
sub
(bad)
xor
popa
push
xchg
xor
xlat
fcom
in
add
pop
pop
jmp
adc
and
mov
dec
or
std
or
lock
bound
adc
mov
out
clc
idiv
clc
pop
lock
xchg
add
icebp
enter
xor
jnp
mov
pop
adc
mov
movs
fild
ror
sbb
in
add
daa
js
dec
lea
cdq
cld
cli
adc
dec
std
in
outs
mov
inc
fmul
pop
jbe
jmp
jle
call
inc
pop
sbb
jne
in
sub
scas
sub
add
(bad)
pop
dec
mov
int
jg
xor
add
push
clc
lods
adc
push
mov
cld
jg
cmp
or
loope
daa
les
fld
and
adc
cmp
out
daa
add
hlt
jno
lock
jne
add
inc
sbb
xchg
xchg
jo
out
dec
inc
adc
inc
push
push
ins
add
nop
addr16
jle
das
or
mov
dec
test
jl
jnp
les
inc
rcl
add
xchg
add
or
mov
dec
jne
sub
dec
stos
scas
add
sub
add
mov
repnz
call
fadd
adc
inc
or
sbb
daa
dec
fnstcw
inc
(bad)
jnp
dec
sbb
jns
fsub
loopne
add
jmp
push
xchg
inc
jne
mov
int
ins
push
mov
ret
or
push
bound
cli
outs
adc
std
add
cmp
lahf
xor
ja
dec
or
push
out
cli
shl
jl
out
adc
jecxz
lods
addr16
fsub
test
jno
mov
mov
icebp
push
(bad)
sbb
les
movzx
and
test
(bad)
mov
popf
inc
clc
test
outs
add
and
sub
popf
out
and
or
add
mov
fwait
out
daa
or
or
inc
and
out
cmps
retf
xor
add
in
inc
scas
jne
mov
add
pop
inc
lock
lock
jo
hlt
and
movs
mov
pop
in
cmc
clc
mov
add
sub
xchg
and
adc
xchg
ror
jecxz
pop
lods
add
jge
pop
add
mov
ret
(bad)
push
mov
iret
xchg
add
pmaxub
and
cmc
add
(bad)
cdq
add
dec
clc
clc
es
imul
repz
sbb
xor
outs
idiv
xchg
mov
add
das
inc
push
mov
push
fwait
adc
pop
sbb
setbe
out
daa
das
int3
push
test
xchg
jne
iret
jnp
out
push
pop
jno
pop
sub
fiadd
ins
lock
push
add
mov
mov
mov
test
loopne
sub
mov
or
cmp
das
pop
sar
jge
in
call
adc
mov
in
sub
sub
loopne
cwde
or
add
pop
inc
pop
leave
stos
sub
jp
aaa
clc
push
pop
call
lock
out
dec
jne
push
test
mov
sub
enter
test
and
js
xchg
and
push
fmul
xchg
nop
inc
stos
xchg
and
pusha
mov
and
pusha
sar
add
and
mov
xchg
aad
fwait
jmp
cmp
add
adc
pop
mov
out
mov
cdq
clc
sub
pusha
jno
adc
xchg
xor
sub
ret
inc
cmp
or
rcl
sbb
xor
in
icebp
push
loopne
fsubr
call
adc
cmp
xor
ret
mov
sbb
xchg
cmp
les
cmp
nop
outs
add
enter
add
jbe
pop
and
loopne
pop
pop
pop
mov
mov
enter
adc
adc
or
lock
mov
and
sbb
dec
or
adc
pop
out
push
adc
or
cmp
mov
jle
or
jne
mov
add
jecxz
int3
mov
sbb
adc
popf
es
dec
mov
ins
sahf
or
push
je
sti
adc
mov
xchg
push
ds
mov
fcom
je
retf
fisubr
fdivp
dec
push
(bad)
lea
dec
or
iret
xor
rcr
mov
sbb
movs
mov
fidiv
pusha
mov
movs
sub
add
fwait
nop
imul
sub
add
push
imul
pusha
div
leave
mov
pop
fs
xchg
mov
xor
pop
adc
out
pop
sbb
and
or
mov
push
sbb
pop
or
and
das
mov
sbb
mov
mov
movs
jmp
push
lds
add
adc
push
ins
(bad)
cmps
xor
add
test
jnp
stos
pop
loopne
inc
mov
add
pop
and
pusha
sbb
loopne
rcr
and
adc
aaa
pop
lods
scas
mov
nop
push
push
xor
loopne
pop
pop
pop
ret
out
mov
dec
inc
lods
mov
maskmovq
test
test
add
cmc
fwait
or
mov
pop
test
jbe
retf
push
ds
add
lods
or
lea
push
push
jge
aam
(bad)
lock
fild
push
and
jnp
sub
push
push
lock
std
cs
mov
inc
xchg
cwde
sbb
sbb
fwait
inc
imul
popa
aas
xchg
mov
add
pop
mov
add
add
lea
sbb
pop
unpcklps
not
cmp
jmp
xor
dec
retf
sbb
imul
fdiv
rcl
xchg
sbb
or
fstp
cmp
arpl
jbe
lahf
push
and
or
add
pushf
jno
sub
inc
mov
xor
addr16
ja
push
adc
sbb
movs
cmps
xchg
test
stos
ja
scas
push
jl
xchg
sbb
mov
pop
push
push
dec
push
jb
fs
out
inc
add
lds
aaa
push
push
les
mov
mov
sub
xor
xor
and
lds
jl
lahf
mov
js
out
shl
outs
push
std
sub
ret
push
mov
int3
cs
pop
aaa
adc
push
clc
inc
out
enter
adc
xchg
cmp
rol
(bad)
mov
xor
loop
or
add
rcl
adc
or
lds
nop
sti
mov
js
sub
cld
inc
mov
loope
jmp
inc
call
mov
xchg
inc
or
fwait
inc
sahf
out
lock
in
call
hlt
pop
cld
imul
inc
mov
mov
dec
int3
shl
inc
test
aad
lods
mov
stc
dec
mov
scas
push
xor
xchg
adc
sub
bnd
test
cmp
setle
jno
mov
mov
and
xchg
xchg
or
jno
push
adc
cmp
stos
xchg
push
mov
sub
xor
push
mov
push
or
es
(bad)
dec
lock
xor
xor
mov
or
inc
jl
pop
pop
(bad)
and
add
les
js
jle
sub
jl
inc
ret
push
cwde
and
pop
sbb
lock
test
dec
test
push
jmp
cmp
dec
push
loopne
dec
cld
push
xchg
cld
jne
movs
mov
sbb
inc
xor
pop
inc
dec
jne
mov
mov
call
mov
(bad)
mov
or
ret
jl
inc
add
adc
out
mov
add
mov
cs
inc
addr16
fmul
mov
push
call
or
(bad)
adc
mov
call
xor
test
add
cli
mov
add
add
test
add
mov
push
mov
ins
cmp
pop
dec
lds
test
push
pusha
jg
clc
clc
pop
push
or
inc
add
mov
jg
fadd
das
cmp
pop
xchg
xor
adc
jle
repz
or
lahf
(bad)
aam
call
push
fisttp
not
dec
adc
out
jge
jl
mov
cdq
mov
call
jno
in
jle
mov
mov
dec
cmp
(bad)
fwait
shl
or
mov
dec
test
dec
and
in
ret
or
mov
adc
(bad)
lock
(bad)
loopne
add
inc
add
sahf
cmps
ss
jmp
add
add
mov
out
test
push
pop
push
cmp
and
aad
and
fldcw
xor
ds
xchg
jmp
lock
idiv
jp
adc
sbb
pop
out
nop
and
sub
or
add
bound
xor
pusha
inc
mov
sbb
loopne
dec
push
mov
nop
cli
in
jmp
pop
test
loop
cld
xor
mov
pop
xchg
or
test
(bad)
aaa
xchg
add
inc
test
fistp
sbb
shl
pop
fwait
stos
adc
mov
jbe
cmps
es
adc
sub
mov
gs
idiv
fadd
test
aam
inc
mov
mov
sbb
call
inc
sub
dec
jnp
loop
dec
add
cld
sbb
adc
xadd
mov
push
jmp
and
aas
cld
adc
jbe
xchg
dec
or
mov
pop
mov
lea
or
inc
cmps
test
mov
mov
mov
std
pop
sbb
adc
adc
sbb
clc
or
mov
mov
pop
push
pop
mov
push
dec
or
gs
fmul
cmps
into
aas
sbb
jnp
das
xchg
sub
in
sub
in
and
push
enter
hlt
in
pop
je
loopne
xor
cmp
pop
call
sub
in
call
or
and
in
in
out
dec
leave
shl
ja
sub
xor
cmp
clc
sub
adc
mov
add
out
test
mov
icebp
jae
sub
dec
ret
fcomp
sub
(bad)
scas
or
xchg
rol
mov
add
dec
cmp
jae
push
dec
mov
inc
push
retf
movs
sbb
add
xchg
sbb
push
in
inc
loop
push
jb
arpl
faddp
out
dec
sub
dec
ins
add
add
dec
jnp
neg
push
mov
outs
jle
cmp
push
adc
and
and
fstp
outs
dec
add
inc
je
xchg
pusha
push
sub
xchg
sub
xchg
xor
xor
(bad)
out
ret
xor
push
xor
js
sub
pop
aaa
jmp
inc
sbb
sub
mov
dec
mov
addr16
sub
cmps
cmp
(bad)
push
sbb
cdq
mov
push
xchg
cmp
mov
inc
(bad)
(bad)
aad
sbb
cmp
adc
arpl
add
jg
inc
or
and
fs
loopne
jg
sub
push
pop
comiss
inc
adc
popa
add
xor
rcl
xor
test
addr16
hlt
add
mov
xor
dec
bound
cdq
test
jl
ret
les
cmp
pop
adc
push
add
mov
jg
ret
aas
pop
jl
push
psubb
les
out
ins
push
cmp
pusha
mov
mov
xchg
mov
add
(bad)
outs
xchg
xor
aam
jno
lods
xchg
into
scas
test
(bad)
arpl
mov
mov
int3
add
mov
push
shl
dec
cld
cmps
aad
jecxz
jg
dec
test
je
ret
adc
dec
xchg
sbb
dec
clc
aaa
ins
cwde
jmp
ja
imul
(bad)
cmps
xchg
push
(bad)
iret
xor
clc
push
dec
push
call
cmp
fst
push
xcrypt-ecb
cmps
xadd
push
retf
das
pop
pushf
push
daa
das
imul
fld
idiv
inc
adc
das
xchg
mov
pop
mov
lods
fs
jno
pop
mov
xor
adc
ins
je
pop
es
jl
je
push
clc
out
shr
imul
mov
adc
mov
bound
xor
fs
push
nop
mov
jp
push
test
bound
xchg
mov
pop
repnz
mov
mov
shl
movs
pop
aam
les
jae
mov
sti
ins
ins
push
pop
sbb
xor
rol
shr
pusha
xor
mov
int3
jmp
mov
and
in
hlt
jmp
dec
mov
fs
cs
sbb
test
movs
test
mov
bswap
aas
cs
push
sar
test
xchg
fcomp
cmp
mov
push
dec
cmp
mov
adc
sub
add
test
ror
aam
mov
adc
(bad)
call
xor
(bad)
inc
and
inc
and
push
or
cmps
imul
xor
and
cld
sbb
adc
daa
scas
push
js
and
push
sub
inc
cmp
cld
xchg
or
cmp
cmp
out
xor
xchg
scas
push
dec
int
add
adc
xor
add
adc
mov
scas
repnz
xor
jb
(bad)
mov
mov
push
(bad)
adc
sbb
push
bound
daa
das
pushf
push
neg
jmp
jl
mov
push
and
pop
pop
lods
dec
int3
shr
add
imul
or
sbb
and
or
pop
pop
jmp
or
mov
mov
sub
scas
test
pop
cmp
daa
in
or
inc
dec
enter
sub
popf
nop
adc
ds
inc
add
cmp
lods
bound
inc
jne
fs
or
dec
add
add
mov
push
mov
enter
xchg
or
push
or
fcom
rcl
mov
movs
aas
pop
pop
outs
cmp
jge
out
fisubr
pop
sub
add
dec
push
pop
dec
add
aas
sbb
(bad)
xor
fiadd
pop
sub
les
dec
cmp
cmp
pusha
jl
jg
inc
jmp
mov
and
add
push
inc
dec
sbb
aas
inc
(bad)
adc
ror
lea
mov
pop
jmp
out
add
push
fwait
jne
pop
inc
mov
sahf
xor
inc
jnp
adc
nop
cs
xchg
jl
xor
adc
xchg
add
jo
add
jmp
int3
jns
shr
cmp
movs
ja
sub
push
dec
mov
or
mov
add
mov
push
sub
js
imul
mov
xchg
pop
pop
inc
mov
js
fist
pusha
inc
and
out
es
add
int
mov
popa
xchg
push
pop
xchg
add
push
aaa
or
js
(bad)
xor
pop
outs
jo
dec
cmp
xchg
inc
clc
bound
push
jno
push
jno
dec
pusha
nop
addr16
dec
loopne
invd
cmp
jae
push
or
sub
sub
pop
add
das
add
rcr
add
add
adc
add
mov
aas
ins
mov
loope
fadd
jo
into
mov
adc
sbb
push
pop
dec
and
ret
xlat
push
pop
adc
sbb
les
imul
jo
and
test
stos
(bad)
adc
dec
add
(bad)
pop
mov
pop
jno
fsub
shr
pop
sbb
or
jge
add
sub
add
inc
push
mov
sub
popf
enter
add
iret
cmp
sub
adc
xchg
hlt
jo
daa
arpl
mov
xor
or
jmp
dec
sbb
add
add
mov
rol
mov
mov
clc
pop
mov
arpl
sbb
sbb
sbb
or
xchg
add
(bad)
and
pop
ret
xor
adc
inc
(bad)
and
inc
xor
add
dec
inc
sbb
daa
pop
stos
mov
mov
sbb
mov
add
imul
sbb
and
pop
icebp
adc
inc
adc
mov
inc
cli
addr16
jbe
pop
jle
mov
push
scas
ins
js
ret
mov
loopne
push
sbb
lods
retf
jg
or
nop
sub
and
ins
loop
cs
pop
inc
or
fs
jmp
jo
ret
xchg
adc
daa
out
ds
inc
in
mov
loopne
aad
push
imul
cmps
or
sar
or
lock
sbb
rol
aad
xchg
and
add
inc
cld
movs
push
lahf
pusha
mov
xchg
and
inc
das
mov
clc
dec
inc
mov
out
mov
lea
xor
mov
psrld
std
or
xor
in
inc
pop
add
mov
push
(bad)
fdiv
je
in
je
cmp
adc
and
adc
push
lea
inc
dec
or
mov
mov
mov
fdivr
daa
lea
xchg
psraw
xor
and
pop
mov
inc
pop
sbb
fdivr
or
jmp
inc
ret
or
mov
sbb
add
pop
or
imul
push
popa
sbb
nop
cmps
push
out
repnz
mov
push
mov
add
xor
loopne
xchg
jno
call
sbb
pop
or
fs
rcl
inc
inc
lea
cmc
or
pop
or
jecxz
sbb
or
or
mov
test
add
and
push
cmc
hlt
sbb
adc
cmps
inc
xor
push
add
push
clc
hlt
fstp
fwait
hlt
add
fdivr
outs
int
das
or
cwde
cmp
shl
jo
mov
xchg
add
push
pop
xchg
push
mov
mov
xor
adc
xor
cld
test
pusha
and
add
mov
push
and
jmp
xchg
fstp
lds
pop
and
pop
jae
loope
arpl
inc
(bad)
adc
sub
xor
and
sbb
adc
shl
pusha
(bad)
and
pop
test
xchg
in
and
push
xchg
or
adc
and
mov
push
and
pop
imul
or
aam
inc
mov
(bad)
arpl
mov
aad
iret
in
cmp
clc
push
add
mov
fcom
pop
test
jb
std
ret
or
or
ja
inc
adc
add
loop
xor
inc
out
push
dec
ret
xlat
pop
outs
xchg
sub
cli
and
frstor
jno
mov
push
jno
jno
xor
cmps
test
jno
xchg
jecxz
and
and
cmp
and
nop
outs
mov
dec
add
sbb
jnp
not
and
ret
pop
mul
(bad)
(bad)
out
add
popa
or
inc
das
hlt
addr16
or
xchg
mov
sub
mov
cmp
ret
xchg
aas
div
add
imul
hlt
jns
(bad)
or
js
lock
hlt
or
hlt
xor
or
adc
dec
das
call
out
and
push
sbb
(bad)
add
test
pop
ret
dec
les
je
shl
lahf
sbb
lahf
adc
in
and
pop
push
sbb
or
jecxz
push
inc
and
sbb
xlat
call
sbb
stos
xor
adc
ja
popf
in
add
jbe
pop
cld
cmp
and
xor
ja
mov
daa
jge
retf
mov
dec
jle
cmp
mov
xlat
sub
sub
imul
and
in
or
adc
or
scas
rol
mov
inc
push
mov
add
adc
sub
sub
inc
mov
jb
jns
push
mov
sbb
sbb
pop
sbb
add
dec
xor
loope
mov
lea
dec
add
mov
dec
jo
ret
adc
sub
(bad)
cmp
pop
ins
sbb
xchg
cmp
sbb
push
lods
lea
aam
(bad)
fiadd
pop
and
mov
sbb
mov
or
in
les
loopne
mov
sbb
fisub
icebp
std
int3
jmp
add
sub
add
bound
in
outs
sbb
inc
xchg
xchg
mov
push
dec
and
inc
add
mov
lds
add
mov
addr16
or
sub
and
sbb
es
ins
push
add
les
mov
scas
mov
jge
rcr
jae
add
cwde
xor
fst
outs
aam
pop
and
jbe
movs
cmp
cli
sbb
sbb
sbb
push
cmp
add
sub
sti
iret
in
push
jmp
addr16
mov
jmp
jmp
dec
add
clc
test
mov
xchg
outs
ret
sub
call
mov
adc
mov
sbb
sub
or
daa
jle
sbb
xor
ss
inc
adc
add
mov
mov
mov
sbb
les
cmp
pop
ja
test
add
add
xchg
or
and
xor
pop
dec
adc
test
fwait
into
(bad)
mov
shl
add
pop
(bad)
xchg
mov
adc
cs
pop
pop
inc
call
dec
bswap
in
clc
ins
xor
push
ret
(bad)
out
dec
cmps
lods
xor
inc
pop
retf
mov
shl
lock
pop
retf
fs
(bad)
jp
xor
cwde
xchg
sbb
scas
pop
jg
mov
add
ror
xchg
ret
movs
adc
jge
sub
cdq
add
sar
jno
ja
ja
aaa
aaa
mov
in
nop
xor
xchg
ret
cdq
and
sub
cmp
xlat
add
or
inc
xchg
dec
add
shl
cmp
mov
aas
xor
clc
xor
jbe
inc
retf
mov
ror
pop
and
or
cmp
mov
call
or
mov
ins
push
jl
cmp
leave
inc
add
pop
ret
mov
sub
je
pop
or
and
out
ins
inc
loopne
cmp
bswap
loopne
jg
nop
jmp
sbb
rcr
mov
mov
xor
add
xor
sbb
jno
sbb
out
pop
dec
xor
sbb
jo
pop
xchg
enter
pop
cmp
mov
xchg
cmp
push
nop
inc
scas
jo
test
mov
inc
lahf
mov
xor
iret
jo
addr16
or
cmp
(bad)
cmp
xor
pop
xchg
or
repz
jo
push
or
jo
pop
fsubr
pop
movs
jb
mov
out
dec
mov
(bad)
idiv
pop
pop
push
pusha
mov
or
jl
ror
pusha
unpcklps
pop
adc
mov
pop
pop
pop
(bad)
pminsw
add
push
pop
loop
fild
aad
xor
adc
fistp
inc
jb
ss
ss
mov
ss
adc
cmp
adc
pop
adc
in
push
dec
add
jo
pop
aaa
fbld
add
ins
cmc
pop
aaa
fild
pop
and
push
push
arpl
xchg
and
movs
or
xchg
add
add
push
cmp
pop
sub
add
fild
pusha
cmps
mov
fistp
add
or
mov
inc
or
(bad)
adc
mov
mov
mov
adc
cmp
and
cmp
push
adc
pop
dec
cmp
test
dec
push
cmp
test
and
ins
loope
cmp
pop
and
(bad)
cmps
push
xchg
lock
aaa
ss
jo
sub
rcl
or
and
enter
cmp
cmp
or
cmc
sub
lahf
mov
and
je
sbb
pop
lds
es
bound
inc
cmp
adc
dec
cmp
pop
imul
mov
add
xor
pop
ds
je
js
and
pop
ds
jl
iret
inc
and
fimul
iret
cmp
add
xor
inc
add
cmp
pop
sbb
pop
enter
fidivr
iret
je
and
inc
inc
iret
mov
push
call
add
push
iret
pop
push
inc
stos
mov
inc
mov
push
aas
inc
mov
pop
inc
push
inc
das
loope
aaa
pushf
pusha
add
push
call
add
add
jecxz
inc
aaa
push
inc
aaa
inc
xchg
sahf
lahf
movs
adc
xchg
nop
scas
push
pop
ret
or
or
inc
test
inc
imul
int3
pfmax
adc
sub
retf
fdivr
mov
aam
sbb
dec
test
jle
icebp
dec
ret
add
test
add
mov
inc
hlt
mov
xor
ror
in
push
mov
dec
inc
and
aas
inc
mov
xlat
and
pop
mov
mov
mov
dec
or
ror
out
popa
js
xchg
xor
push
bound
push
cs
jg
rcl
mov
paddsw
mov
sbb
jmp
xor
add
fist
ror
xor
add
push
dec
xor
pop
add
add
cmps
adc
or
pop
inc
scas
xor
les
popa
inc
lahf
bound
ficomp
jp
out
rol
bound
add
mov
mov
jp
or
and
add
mov
pop
lock
push
mov
add
push
push
push
addr16
inc
es
jmp
jne
adc
in
adc
add
xor
dec
push
mov
or
fcom
mov
fcomp
inc
add
sbb
enter
push
pop
pop
xchg
repz
(bad)
jnp
sub
push
test
sbb
inc
js
push
iret
rcl
sub
ja
jns
imul
aas
call
and
cmps
add
xor
push
adc
mov
or
mov
mov
mov
pop
popa
add
cmp
pop
and
jl
add
(bad)
xchg
mov
mul
test
and
aam
xor
mul
sti
dec
out
mov
push
fnstsw
sahf
ja
sbb
repz
jp
shl
jmp
ret
add
jmp
adc
cmp
out
(bad)
push
sub
ret
nop
mov
mul
or
daa
in
and
mov
xchg
jmp
adc
jl
add
mov
dec
mov
xchg
pop
push
rol
nop
scas
fst
shl
sbb
js
add
test
adc
mov
lahf
fnsetpm(287
test
inc
xchg
out
or
fcomp
movzx
cmp
pop
lods
sub
ror
icebp
mov
mov
bound
xor
pop
iret
cmp
sbb
ins
xchg
idiv
xor
cmp
mov
outs
push
ror
sub
xor
(bad)
clc
sub
lea
arpl
test
pop
pop
pop
ret
mov
and
add
pop
mov
inc
and
push
mov
cmps
call
cwde
push
fld
dec
mov
pop
or
and
test
adc
push
inc
xor
neg
pusha
pop
out
cmp
movs
adc
and
jb
out
or
mov
cwde
dec
ret
nop
movsx
xchg
adc
retf
jl
xchg
fldenv
dec
out
or
adc
mov
mov
mov
mov
movzx
add
or
and
and
and
mov
sbb
out
mov
push
or
nop
dec
cmp
and
(bad)
and
cmp
fdiv
or
pop
loopne
inc
mov
jno
mov
jb
xlat
test
jecxz
fsub
cli
je
jge
test
shl
push
jmp
mul
xchg
mov
out
or
or
gs
(bad)
push
fisub
popa
mov
push
test
mov
aas
test
cmp
inc
cmp
push
push
daa
popa
daa
or
mov
ins
adc
je
push
sub
pushf
(bad)
or
push
xchg
sbb
and
inc
or
and
add
push
daa
call
cmp
(bad)
daa
(bad)
inc
cmp
ret
das
mov
(bad)
jmp
pop
sub
or
ja
mov
ja
push
pop
inc
adc
mov
sbb
mov
lahf
and
ret
pusha
and
add
cdq
das
mov
repz
and
push
adc
inc
sbb
inc
inc
add
xlat
pop
push
js
adc
cmp
mov
pop
mov
or
imul
adc
jmp
dec
sbb
jg
add
add
ret
cmovno
pop
sub
cmps
mov
cmps
push
add
les
rcl
and
fnstsw
add
sbb
iret
nop
cs
cmp
mov
xchg
adc
inc
loop
or
xchg
nop
xchg
push
or
ins
and
or
pop
xchg
sub
jg
add
fild
or
ins
lahf
xchg
lds
jns
or
adc
sub
sbb
sbb
jmp
pushf
test
mov
bound
cmp
sub
jbe
pop
cmps
pop
lods
mov
popa
cwde
loopne
adc
mov
fstp
xor
lea
or
int3
sub
loopne
xchg
fwait
or
push
mov
inc
adc
add
mov
scas
mov
jbe
jb
add
nop
fild
retf
lds
in
sbb
mov
bound
mov
adc
(bad)
das
lods
das
add
or
aaa
movntps
mov
es
rcr
pop
xchg
add
pop
dec
inc
loop
xor
mul
out
fcompp
sti
setne
movs
dec
rcl
cs
pop
ret
daa
mov
outs
mov
sub
fidiv
ret
sbb
dec
leave
jg
pop
cmps
stc
sub
fstp
stos
xor
xchg
add
sbb
inc
jmp
lea
jge
pop
inc
inc
push
popf
cmps
xlat
xchg
xchg
sub
popa
adc
pop
or
mov
out
jecxz
and
lea
push
loope
das
cli
ret
aad
inc
movs
arpl
and
out
mov
dec
add
mov
xchg
and
jle
jnp
sub
rcl
mov
repnz
fisub
add
mov
dec
pop
pop
fistp
mov
add
inc
mov
addr16
pop
sub
pop
xor
das
call
dec
fwait
movs
aaa
sub
div
push
add
jo
inc
inc
(bad)
xor
test
je
xor
ret
cmp
ret
addr16
(bad)
ror
xchg
(bad)
ror
jg
or
test
dec
wrmsr
test
add
and
pusha
or
xchg
sbb
pusha
cwde
call
ja
xor
inc
adc
pop
leave
mov
pop
inc
test
push
fistp
xor
inc
sbb
mov
add
imul
push
int
push
movs
cmp
xlat
push
jge
mov
js
test
add
sbb
add
jne
mov
mov
or
jbe
cmps
imul
fsub
mov
fist
mov
push
test
arpl
or
push
loopne
add
pop
jae
add
add
xchg
mov
adc
cmp
jne
sub
and
fimul
ret
cmp
and
in
sbb
adc
cmp
test
test
mov
dec
hlt
lea
dec
push
pop
adc
retf
xchg
adc
mov
imul
fistp
push
xchg
xor
cmp
imul
mov
out
jb
sar
xor
add
imul
jmp
push
stos
cwde
popa
xchg
push
leave
inc
mov
ss
inc
dec
fisubr
sbb
xor
imul
lea
or
mov
je
push
mov
or
add
pop
std
sbb
xor
and
and
cmps
xor
jg
mov
pop
pop
cmp
push
or
dec
jge
pop
test
jnp
add
cmc
dec
mov
inc
bound
xchg
lock
cmp
rcl
add
push
dec
jle
cmp
cmp
add
mov
(bad)
xor
jo
not
push
das
lock
inc
dec
xor
aas
mov
mov
(bad)
or
dec
xchg
push
ins
and
dec
inc
or
fs
and
mov
aam
mov
push
fld
adc
inc
fs
sbb
and
and
mov
ret
add
test
mov
mov
jle
or
pop
ja
xor
and
mov
stos
or
inc
push
add
xor
imul
xor
dec
sbb
aas
and
std
mov
add
pop
cmps
gs
dec
mov
pusha
cmps
pop
inc
jecxz
shl
jo
jmp
loope
inc
sbb
sub
aas
pop
cmp
sbb
or
mov
ret
movs
xor
test
push
or
xchg
adc
adc
add
int3
mov
lods
popa
adc
daa
lods
fimul
in
lea
movs
add
add
xchg
pop
iret
lock
mov
and
inc
add
daa
inc
jne
lahf
or
add
inc
sub
mov
repnz
pop
or
and
jg
lds
dec
das
adc
lahf
dec
add
sub
cmps
shr
ffreep
mov
nop
jbe
xchg
(bad)
lock
push
lock
cmp
adc
pushf
(bad)
sub
push
push
or
nop
jg
mov
rol
xor
fdiv
or
ret
adc
jl
ret
mov
mov
and
sbb
cs
fsub
aam
call
jge
and
nop
ins
dec
pop
dec
sub
ret
mov
addr16
sub
xchg
aas
(bad)
xchg
and
or
pop
mov
dec
mov
add
div
inc
or
(bad)
mov
rcl
add
jno
adc
mov
jl
xor
mov
sub
sub
adc
fdivr
xchg
retf
mov
scas
or
ja
add
and
shl
mov
push
les
es
lods
push
cmp
fcomp
inc
lods
cld
push
cmp
enter
js
inc
out
push
inc
jl
sbb
sbb
pop
and
xchg
pop
fmul
add
vcvtdq2ps
add
ins
aad
xlat
mul
jmp
cmps
jo
xchg
stos
fadd
rol
or
cmp
das
sub
and
aas
push
add
dec
fldenv
push
or
test
jbe
push
(bad)
pop
and
bound
adc
add
add
inc
or
outs
add
rdpmc
shl
sub
push
scas
pop
sbb
ins
adc
or
fmul
das
(bad)
loope
add
pop
inc
dec
mov
adc
test
cmp
xchg
nop
into
or
pop
(bad)
mov
je
or
comiss
mov
lahf
dec
cdq
fadd
mov
das
fimul
pusha
mov
inc
pop
int
aaa
sub
daa
xor
inc
jo
div
fld
addps
loope
data16
nop
push
cmp
pop
fisub
mov
or
dec
push
or
mov
mov
add
jmp
or
pop
ret
out
mov
outs
or
ror
jbe
jg
cmp
jne
mov
push
mov
cmp
imul
test
test
call
fisub
cmp
mov
adc
jne
or
je
int
cs
xor
jmp
cmp
push
jmp
mov
or
jl
aas
pop
or
sbb
mov
jmp
push
and
mov
shl
shr
outs
adc
loop
mov
test
loope
imul
je
jmp
and
mov
shl
push
add
push
iret
sub
rol
mov
sbb
and
xor
popa
scas
jne
arpl
push
push
or
push
adc
jb
ret
xchg
push
stos
mov
clc
scas
mov
fcomp
(bad)
mov
mov
inc
cmp
xor
mov
xchg
sub
movs
cmps
add
push
fcomip
xor
pop
jp
cmp
enter
out
rol
leave
mov
inc
dec
fwait
mov
iret
adc
and
retf
xchg
sub
push
lds
sbb
jmp
dec
scas
xor
int
retf
out
jb
push
or
dec
loop
popf
leave
js
lds
push
ret
xchg
push
cmp
cmc
pop
cwde
jp
mov
iret
jae
pop
mov
test
aam
sbb
push
shl
sbb
ret
cwde
xor
mov
popf
outs
cmp
fild
in
ret
inc
inc
adc
test
mov
dec
jnp
lock
sub
inc
(bad)
test
or
loope
dec
and
adc
cs
ss
add
mov
bound
adc
sbb
imul
mov
add
xchg
add
xchg
fwait
loopne
sub
push
loopne
mov
mov
test
mov
or
pop
mov
and
jne
das
push
inc
adc
in
mov
popf
inc
shl
mov
int
inc
clc
pop
cdq
(bad)
push
jne
cmps
pop
mov
xor
push
mov
ror
jge
and
or
sub
lock
push
add
mov
cld
popf
or
or
pop
hlt
fdiv
adc
dec
hlt
xchg
jmp
sbb
lds
movzx
mov
or
push
into
or
(bad)
xor
pusha
mov
ja
push
or
or
div
mov
sbb
mov
cmp
pushf
or
xchg
push
inc
popa
imul
sbb
cli
and
and
pop
jne
lahf
dec
jne
jo
sbb
add
pop
xchg
jp
ret
sbb
push
jle
aaa
in
inc
loope
cmp
(bad)
aam
repz
inc
xor
add
cmp
add
inc
loopne
add
leave
pusha
in
pop
or
adc
or
addr16
or
mov
sbb
add
cli
jbe
cdq
pusha
mov
mov
xor
push
push
ror
or
rol
div
into
dec
mov
test
adc
adc
mov
pop
or
popa
sub
pop
mov
xchg
out
cmp
lea
arpl
add
call
mov
mov
xor
dec
sbb
xlat
xchg
add
mov
or
or
xor
data16
xlat
add
rcl
and
pop
mov
mov
sahf
ficom
cmp
(bad)
cmp
jge
push
rol
es
and
in
hlt
cwde
or
sbb
pop
xor
out
add
adc
ror
adc
mov
pop
inc
pop
add
cmp
mov
add
js
adc
imul
or
arpl
maxps
js
popa
ror
dec
cmps
inc
or
dec
mov
push
dec
push
out
or
cmp
add
add
ror
sub
ss
test
sbb
test
fidiv
loop
add
xchg
push
lods
jnp
fist
in
and
pop
in
arpl
mov
arpl
test
mov
je
arpl
mov
mov
pop
bound
adc
mov
pop
add
in
or
dec
add
inc
mov
or
push
jbe
outs
add
jae
jae
lgdtd
or
pop
cmp
add
mov
cmp
ret
or
sub
movs
xlat
add
inc
or
xchg
inc
in
or
test
test
in
call
sbb
pop
les
lea
in
dec
cs
xor
enter
adc
pushf
mov
lods
mov
mov
maxps
cmp
inc
add
mov
out
cmp
mov
mov
iret
xor
jae
dec
loopne
jb
push
push
jmp
xchg
imul
sub
out
cmp
adc
fs
pop
in
call
push
lahf
(bad)
mov
sub
xchg
xchg
loop
jo
(bad)
cmp
sbb
inc
and
and
adc
in
ret
or
loopne
mov
pushf
pushf
add
loopne
int3
xor
cmps
cmps
mov
pop
add
loop
and
imul
mov
push
pop
pop
in
movs
mov
add
cmp
adc
adc
pop
fcomp
fnstcw
dec
inc
sbb
push
stc
lds
xchg
adc
adc
ret
sbb
pop
push
push
(bad)
or
sar
cwde
jbe
inc
repz
jl
js
and
leave
adc
jmp
adc
push
lods
fist
jmp
push
mov
dec
sbb
cmp
push
mov
fcom
js
inc
addr16
and
pop
xor
jb
pop
and
mov
and
(bad)
jecxz
les
repnz
(bad)
call
jo
push
jmp
pusha
adc
loop
jg
jae
in
push
push
clc
push
inc
mov
mov
sbb
sbb
in
mov
nop
es
pop
or
mov
xor
mov
adc
sub
pop
and
cmp
pop
cmp
inc
cmp
inc
pop
aad
xor
aaa
retf
std
clc
add
push
xor
out
mov
add
arpl
pushf
inc
fwait
clc
add
xchg
cmp
xchg
movs
dec
popa
adc
and
sub
xchg
and
push
xlat
dec
xchg
lock
xchg
mov
mov
sbb
dec
jne
scas
ja
fcom
mov
inc
or
cmp
mov
cmps
fild
xor
aaa
movs
sbb
nop
pop
sbb
adc
imul
pop
pop
xor
push
push
xlat
inc
dec
add
scas
mov
rol
aaa
in
retf
popf
das
movs
push
adc
lahf
adc
mov
mov
ins
pop
xor
xor
mov
adc
add
ror
mov
ins
mov
pop
in
push
xchg
nop
push
dec
dec
inc
pusha
and
add
test
pop
pop
adc
xchg
mov
sar
pop
rcl
sbb
neg
inc
fwait
dec
mov
mov
add
xchg
fist
cmp
jg
or
movs
mov
sub
xchg
jns
xchg
xchg
mov
inc
in
mov
rol
jl
xlat
dec
inc
ret
mov
aam
nop
xor
add
mov
loop
ja
nop
cmp
jl
jmp
test
shl
xchg
or
mov
mov
mov
xchg
mov
out
inc
test
aaa
xlat
jle
adc
jecxz
cmp
jae
add
and
ss
sub
and
pop
inc
xlat
pop
add
adc
xor
push
jl
leave
ret
add
aad
adc
inc
xchg
rcl
test
(bad)
fisub
sar
mov
ret
ss
and
daa
jmp
stos
sar
fist
add
hlt
adc
dec
jge
push
or
aaa
xchg
adc
sbb
ficomp
mov
jl
jg
data16
outs
xlat
pop
jnp
push
or
push
xor
xor
jne
add
aaa
jmp
jb
and
data16
jg
pop
or
mov
push
mov
call
lods
or
mov
loopne
addr16
mov
jecxz
nop
cmp
or
jae
fsub
test
ins
movs
cwde
mov
adc
mov
xchg
add
cwde
mov
or
mov
rol
push
inc
push
mov
xchg
aaa
das
mov
lock
in
cmp
sahf
jo
and
adc
push
scas
inc
sub
loope
push
cmps
outs
push
and
aad
xor
and
fld
xor
and
imul
call
inc
scas
fadd
shl
dec
sbb
dec
retf
ror
pop
inc
push
cdq
js
loopne
dec
or
pop
mov
mov
and
dec
and
add
sub
lds
xlat
add
(bad)
mov
push
cwde
aad
push
xchg
clc
and
sbb
lock
push
pop
nop
xchg
adc
call
lds
loope
aaa
sub
rcr
mov
push
hlt
jge
sbb
sbb
into
mov
mov
pop
jg
push
popa
mov
mov
sar
adc
pop
jo
push
xchg
adc
(bad)
mov
jmp
pop
jnp
addr16
bound
xor
pop
mov
(bad)
fdivr
sete
adc
scas
add
stos
enter
loope
sbb
mov
xor
aad
inc
inc
bound
sbb
call
adc
mov
pop
rol
mov
sbb
pop
retf
xor
arpl
aam
les
and
pop
imul
inc
and
inc
adc
sub
push
or
leave
push
fadd
mov
sub
adc
nop
aaa
push
outs
adc
les
dec
or
imul
aas
pop
loope
sbb
xor
mov
xchg
inc
sbb
sbb
(bad)
cmp
cs
push
add
pop
(bad)
and
or
mov
adc
xchg
xor
cs
push
add
stos
shr
movs
dec
pop
adc
cmp
or
arpl
or
inc
scas
adc
(bad)
inc
pop
xchg
nop
inc
loop
xor
add
add
xchg
inc
mov
fild
div
fisubr
push
xchg
jo
loop
add
loop
adc
add
out
gs
cmp
add
stc
xchg
jecxz
mov
push
ffree
rcr
jnp
mov
cmps
ror
push
hlt
jmp
in
push
jecxz
fwait
push
loopne
fld
dec
push
jmp
mov
adc
repnz
icebp
and
(bad)
mov
mov
jno
mov
jne
or
clc
mov
jmp
test
fld
inc
pop
ins
out
pusha
and
adc
jge
xor
clc
test
xchg
add
inc
sbb
pop
or
sub
and
dec
enter
sbb
adc
adc
mov
and
(bad)
mov
xor
mov
mov
jne
inc
mov
and
mov
call
in
into
aaa
js
cmp
adc
clc
cmp
outs
das
pusha
fadd
push
jmp
in
or
or
inc
pop
jmp
pushf
fsubr
fld
scas
lock
mov
mov
inc
jb
in
push
xchg
test
cmp
sbb
mov
das
mov
fiadd
ss
sub
jo
dec
push
dec
lock
jae
test
mov
mov
sub
inc
sub
and
or
pop
ins
or
xor
fisttp
test
sbb
or
aam
xchg
jno
lahf
mov
stos
test
(bad)
in
add
jne
xchg
lods
test
add
xor
xchg
mov
or
fisubr
loope
ins
jnp
push
jb
popa
sub
add
push
xlat
(bad)
in
add
mov
xchg
mov
adc
movs
je
jb
cmp
xchg
(bad)
sbb
loopne
push
pop
adc
retf
xor
pop
(bad)
icebp
pusha
movs
push
add
sbb
iret
sbb
fdiv
fdiv
inc
xor
test
mov
or
inc
movzx
test
push
fiadd
pop
outs
jg
rol
add
xchg
movzx
sub
shl
or
mov
or
fisttp
mov
daa
aas
lods
sub
jg
xchg
stos
mov
rcl
mov
nop
inc
movs
je
aaa
mov
nop
or
mov
nop
(bad)
jg
xchg
(bad)
sahf
inc
or
movs
cmps
sub
push
fsubr
jge
xchg
cmps
rcr
nop
cmps
les
lds
push
cmp
xchg
fwait
movs
rol
nop
mov
scas
(bad)
(bad)
loopne
and
mov
and
sub
push
scas
pop
and
stos
push
mov
dec
sub
aad
leave
mov
lock
adc
das
inc
bound
jg
lods
or
mov
popa
ins
dec
or
adc
adc
push
or
pop
and
cld
jle
adc
fisttp
or
or
pop
fs
stc
mov
test
ins
xor
mov
std
xor
hlt
and
jbe
leave
push
hlt
mov
fisttp
jne
dec
pop
call
out
and
mov
push
sahf
mov
jnp
push
dec
jne
jno
or
add
fadd
xchg
dec
stc
popf
lods
out
inc
test
cmp
add
dec
sub
dec
jle
inc
mov
ds
lock
xchg
push
lahf
push
clc
sub
les
push
enter
mov
and
rol
push
jl
push
scas
mov
cld
fwait
pop
inc
ss
arpl
ret
push
cs
arpl
jbe
loop
or
rol
pusha
xchg
fdivr
mov
lahf
push
jmp
fwait
jo
(bad)
xchg
pop
shr
rol
dec
aam
mov
mov
jne
inc
fcomp
and
push
dec
mov
test
pop
test
lahf
sbb
pop
inc
sbb
aas
call
push
cmp
mov
jg
sbb
cmp
mov
xchg
outs
(bad)
pop
fsub
fsub
ret
xor
add
cs
cmps
or
das
jge
cmp
adc
xchg
sub
cld
jmp
jb
mov
mov
or
cmp
ret
xchg
imul
dec
mov
xlat
mov
(bad)
adc
pop
push
inc
add
dec
retf
cwde
or
add
les
xor
xchg
mov
mov
pop
add
push
mov
add
cdq
mov
add
movs
push
bound
inc
jnp
pop
sbb
sbb
add
mov
stos
popa
dec
sbb
pushf
es
icebp
fldenv
shl
jl
mov
mov
push
sbb
pop
stos
sbb
mov
das
pop
jo
sub
adc
ins
and
cdq
and
clc
add
xor
lahf
pop
jg
and
test
lods
loopne
cmps
div
adc
lock
outs
cs
sub
mov
pop
cwde
dec
dec
mov
ret
je
mov
push
(bad)
ror
cmps
add
xchg
mov
cmps
jae
es
fisubr
pmullw
add
cmp
fst
in
ds
push
adc
dec
lds
fcomp
sbb
inc
out
cmp
and
bound
aam
dec
(bad)
mov
push
dec
pop
push
inc
sub
adc
lahf
pop
pusha
mov
pop
std
adc
imul
xchg
lods
or
mov
or
fwait
jge
add
cmps
push
cmps
das
dec
pop
bound
mov
sbb
lock
fnstenv
jb
jecxz
outs
cmps
pop
stos
psubw
cmp
inc
and
sub
dec
test
adc
pusha
ja
and
mov
inc
popf
cmp
add
inc
add
pop
lods
das
pop
or
mov
adc
stos
test
sub
nop
stos
jno
es
das
jbe
add
sub
cmp
jecxz
jl
jl
jb
mov
xor
jae
in
(bad)
stos
push
cmp
daa
movs
ror
add
sub
fsub
mov
popf
sub
pushf
test
arpl
push
sub
ret
xlat
ret
loope
xchg
mov
xchg
ficomp
leave
clc
stos
push
add
mov
outs
xor
xor
add
jmp
(bad)
arpl
mov
out
pop
not
lea
sub
inc
xchg
xor
add
pop
nop
xor
clc
mov
mov
and
popf
and
push
pop
mov
pop
imul
push
outs
mov
push
ret
fcom
sbb
sahf
mov
cld
dec
jb
jmp
loopne
and
xor
adc
jge
sub
popf
sub
inc
sub
push
or
movs
clc
in
mov
loopne
hlt
ja
jmp
xor
test
and
dec
or
mov
ja
mov
sar
inc
pop
xor
jb
sbb
sbb
loopne
mov
pop
ret
jo
arpl
sar
add
or
or
jg
mov
sub
popa
add
cli
mov
fwait
scas
push
hlt
jo
or
mov
arpl
or
xchg
shl
push
sub
pop
es
sbb
aam
aam
xor
and
inc
in
jmp
sub
mov
lock
loopne
arpl
aaa
movs
mov
or
shr
add
pop
inc
adc
xchg
xor
adc
pusha
mov
ret
jmp
mov
jl
ficomp
add
aaa
add
rol
pop
lock
movs
rcl
icebp
mov
es
fistp
rcl
pop
inc
push
push
mov
ret
jbe
jge
js
adc
push
pop
cmp
mov
adc
jns
dec
and
push
push
scas
ret
mov
push
cmp
not
jmp
mov
inc
cmp
jne
push
ret
or
scas
ja
sti
mov
inc
mov
mov
push
out
inc
aas
cmp
jg
push
cmps
ins
xor
test
mov
cld
add
and
pop
xor
pop
js
(bad)
mov
add
pop
add
cld
jbe
adc
adc
xor
div
xchg
clc
adc
int
movs
or
mov
dec
cdq
mov
hlt
ds
push
mov
in
jo
jns
mov
and
mov
inc
ds
adc
pop
adc
and
mov
mov
or
movs
or
and
dec
lea
push
ror
ret
cmp
push
ja
jne
ror
jo
sbb
bound
(bad)
and
mov
add
ror
mov
or
sub
loopne
push
hlt
pushf
add
clc
rcl
mov
dec
ins
mov
inc
call
and
nop
mov
mov
mov
inc
jns
cmp
inc
cwde
push
push
je
xchg
imul
xchg
cmp
or
jne
jecxz
or
push
or
rol
adc
cmp
into
mov
xor
and
cmp
imul
ret
xlat
test
movs
fiadd
cmp
out
ds
fisub
mov
add
enter
xor
nop
cmp
mov
mov
shr
fist
jno
pop
pop
aad
setle
mov
lea
lods
pusha
sbb
mov
mov
adc
mov
ror
and
lea
inc
add
dec
aas
mov
adc
or
jmp
jmp
pop
out
add
push
add
add
sub
add
sub
cmp
xlat
jmp
dec
(bad)
sahf
mov
mov
je
jo
jl
jg
test
or
ret
gs
scas
fbstp
lock
fsub
push
fadd
and
inc
push
mov
adc
ret
jne
add
aaa
daa
adc
cld
stos
pop
out
push
cmp
cmc
mov
fs
and
mov
sbb
pusha
add
test
add
ja
bound
add
cld
jns
adc
movs
push
inc
xor
mov
jl
call
sti
scas
pusha
je
leave
out
mov
mov
or
jb
cli
or
pop
add
movs
jl
clc
add
dec
iret
mov
push
mov
dec
dec
mov
or
inc
stos
call
or
dec
pop
cmps
enter
adc
test
mov
jl
push
jno
movs
shl
xchg
mov
add
aad
js
lods
popa
jmp
(bad)
(bad)
(bad)
fisttp
lea
and
mov
out
test
outs
test
sbb
inc
lea
lock
xlat
mov
add
scas
(bad)
test
mov
or
mov
scas
sub
mov
arpl
rsm
mov
das
das
ret
aad
jmp
adc
test
stos
mov
mov
mov
jge
lds
loope
scas
cld
mov
test
test
xchg
mov
and
and
xchg
pop
adc
jle
xchg
mov
push
lea
sub
(bad)
sbb
mov
stos
ins
(bad)
aad
je
and
mov
outs
sbb
add
dec
ins
loop
sahf
rol
js
pop
out
jae
xor
sbb
sbb
inc
push
adc
mov
xchg
mov
xchg
pop
inc
jbe
test
or
inc
or
in
cld
lea
sub
xor
mov
jnp
push
mov
outs
imul
test
sub
jmp
add
push
pop
jp
(bad)
arpl
ficomp
aaa
lea
push
or
pop
mov
mov
push
xchg
pushf
loop
lods
jl
mov
test
push
push
mov
add
fcomp
xor
(bad)
repnz
push
xor
lock
adc
dec
js
stos
dec
mov
mov
sbb
mov
mov
sbb
fidiv
call
not
mov
jne
pop
pop
repnz
pop
adc
mov
nop
inc
and
test
xor
cmp
cmp
ja
into
je
push
push
sub
and
and
push
and
add
cmp
ret
mov
inc
push
inc
cmp
push
xchg
sbb
daa
mov
rol
xchg
ret
das
cmps
add
lahf
std
dec
xor
jl
pop
cmc
aas
mov
cmp
das
ins
imul
ror
clc
stos
inc
mov
out
das
lea
or
rcl
add
push
scas
loopne
mov
xchg
mov
scas
sbb
sbb
adc
adc
mov
sbb
js
adc
push
or
dec
push
inc
pop
and
lea
inc
nop
or
and
daa
mov
xor
or
push
inc
mov
inc
add
mov
push
push
jo
mov
add
xor
push
loope
fsubp
dec
ret
out
daa
(bad)
or
add
js
and
sbb
shr
and
ret
xor
adc
jno
pop
out
sbb
xchg
ins
(bad)
cmps
out
dec
mov
cld
loope
les
mov
and
leave
add
or
mov
sub
sbb
push
push
xor
push
and
jo
out
je
dec
pop
nop
add
mov
mov
xchg
and
(bad)
push
daa
out
add
and
cmp
in
vpmullw
les
lahf
js
pusha
add
arpl
push
mov
retf
mov
imul
push
ret
inc
daa
mov
sbb
test
push
pop
push
adc
in
int
and
pop
mov
and
cmps
inc
mov
dec
jne
inc
fmul
cmp
and
cld
add
or
jecxz
jns
iret
mov
dec
or
daa
cmp
mov
iret
mov
aas
mov
daa
iret
in
adc
enter
and
mov
mov
add
or
mov
and
clc
push
ret
xlat
mov
adc
dec
inc
sti
movs
pop
or
std
push
lock
hlt
mov
inc
daa
mov
jp
adc
retf
jno
push
or
add
adc
adc
outs
hlt
out
mov
push
pusha
fwait
aaa
adc
inc
fs
int
add
aaa
mov
push
add
push
jp
sbb
xor
ins
retf
cmp
jae
inc
int3
sets
adc
rol
pop
imul
cmps
es
mov
jp
mov
stc
or
test
push
mov
push
push
jecxz
bsr
push
shl
mov
vpmacssdqh
xchg
leave
add
rcl
iret
mov
in
iret
cli
and
mov
popf
arpl
(bad)
in
pop
xor
xchg
mov
pop
or
cmp
pop
mov
inc
test
xchg
cwde
or
cmp
mov
jg
lock
mov
sub
daa
ret
sbb
in
pop
xor
and
add
mov
mov
inc
or
outs
outs
sbb
push
fucomip
lsl
test
inc
inc
and
mov
cld
xchg
jl
jl
or
mov
jmp
inc
inc
enter
clc
add
pop
fcmove
mov
pop
pusha
je
adc
jbe
in
je
lea
add
or
retf
sub
or
scas
icebp
mov
sub
pushf
ss
ins
out
push
and
rol
push
push
mov
and
cmp
add
adc
adc
cmp
js
sub
ins
sar
les
dec
cld
adc
push
adc
shl
add
xchg
pop
popf
pop
push
ror
cmp
push
inc
sbb
(bad)
in
sbb
xor
test
shl
jmp
xchg
push
sub
mov
dec
iret
push
add
sbb
fidiv
jne
add
cs
sub
call
in
inc
fadd
inc
iret
hlt
push
add
ret
pop
cld
jmp
sub
inc
add
jecxz
lock
cmp
in
xlat
(bad)
and
add
lahf
cwde
cmp
in
imul
sub
jo
adc
mov
sbb
inc
ret
sub
ds
sbb
je
int
aam
clc
ins
aas
shl
add
cmp
jg
push
inc
inc
cli
adc
adc
test
(bad)
cmp
jno
adc
sbb
ret
add
dec
pop
push
push
dec
xor
fadd
(bad)
fld
in
ret
ret
dec
sub
xchg
xchg
movs
lods
es
mov
les
fimul
aam
(bad)
push
ret
dec
movs
aam
pop
push
ins
pop
cmovl
add
mov
jge
jle
push
lock
in
add
mov
mov
in
sub
sbb
adc
adc
push
mov
dec
jne
inc
xchg
cmp
iret
sbb
jne
addr16
pop
jmp
xchg
inc
mov
shl
in
adc
add
sahf
retf
sub
push
mov
add
dec
aas
push
dec
jne
dec
pop
pop
add
sub
lds
inc
and
test
mov
xor
stos
sbb
aam
and
jmp
data16
call
sbb
inc
and
lds
jmp
pop
ret
push
mov
lds
popa
sbb
movs
push
push
or
jbe
cmps
inc
and
lahf
rol
scas
mov
xor
(bad)
out
nop
and
(bad)
(bad)
leave
pusha
sub
and
(bad)
test
(bad)
or
(bad)
in
xchg
xor
(bad)
mov
enter
repnz
test
aam
ret
in
fdivr
int3
test
les
jg
dec
(bad)
fdivr
fsubr
and
push
and
enter
sbb
enter
int3
add
mov
push
loopne
xor
in
pop
inc
or
ret
mov
cmp
add
mov
mov
aas
ins
jne
inc
add
aaa
inc
in
cmp
sbb
cmp
das
adc
lods
je
addr16
adc
jo
sub
add
inc
cld
cmp
adc
ds
inc
mov
jo
jle
push
add
fmul
test
push
push
or
add
mov
and
jne
fimul
fmul
ss
inc
or
push
fs
jl
test
(bad)
add
retf
mov
inc
daa
push
xlat
fadd
or
add
scas
dec
dec
add
jnp
jo
or
repnz
sbb
mov
sbb
ret
xor
dec
cmp
stos
int
leave
push
test
aaa
pop
xlat
int3
in
add
push
aaa
int
push
add
int
cmps
(bad)
loopne
(bad)
pusha
dec
loopne
shl
ficomp
enter
mov
push
jb
sbb
cmp
jno
adc
inc
and
(bad)
popa
or
xlat
js
push
cmp
mov
fistp
jo
test
adc
jb
(bad)
push
fistp
xor
arpl
sbb
pop
cmp
cmp
xor
bound
adc
lods
iret
lods
inc
jb
in
loopne
dec
fcom
sub
ret
add
ror
dec
add
mov
pop
adc
rcr
aam
and
push
and
popf
iret
ins
or
cmp
into
inc
xchg
pop
jb
ret
jecxz
dec
sub
sbb
jo
sbb
jecxz
fmul
jb
add
test
push
cmp
dec
daa
lock
(bad)
jl
aas
(bad)
call
pop
mov
sub
or
aam
xchg
dec
add
add
mov
aam
aad
stos
jo
loopne
dec
push
(bad)
or
in
add
(bad)
(bad)
shr
in
push
js
lock
sbb
push
js
out
(bad)
adc
je
adc
mov
or
mov
out
sbb
aad
and
pop
iret
inc
hlt
add
xlat
and
cmp
xlat
jo
daa
jp
mov
(bad)
mov
push
push
add
push
ror
cmps
fadd
cmps
call
mov
cmps
pushf
js
popf
or
(bad)
mov
jecxz
jmp
xchg
add
fidivr
add
add
jno
pop
cmps
call
cmps
stos
pop
jl
mov
loope
jmp
cmps
(bad)
jmp
fidivr
popf
dec
es
pop
xchg
inc
or
cwde
cmps
mov
dec
add
inc
xor
adc
in
sub
jl
add
adc
jl
(bad)
push
in
push
imul
daa
push
adc
push
pusha
mov
(bad)
out
xor
mov
enter
das
out
stos
(bad)
jecxz
fcmovb
sub
out
pop
dec
push
and
xchg
test
imul
rcl
and
mov
mov
pop
pop
xor
aas
loop
pop
dec
les
jecxz
pop
loopne
(bad)
fild
and
shr
je
test
inc
pop
loopne
outs
loopne
arpl
pop
cmp
in
outs
aaa
loope
push
push
jecxz
aad
icebp
pop
loop
pop
adc
jns
pushf
cmc
adc
sub
inc
push
repnz
xor
mov
pop
in
adc
test
pop
xor
cmp
dec
and
inc
hlt
or
loop
aas
push
arpl
cld
pop
dec
hlt
or
lock
pavgw
pop
shl
jecxz
cmps
in
xchg
jo
sbb
pop
pop
add
or
mov
or
cs
or
aas
xor
push
push
call
xor
in
jecxz
dec
sbb
call
wbinvd
cmc
jno
jns
cmps
cmps
push
sub
add
xor
js
cmp
cmp
fdivr
push
aam
adc
lahf
sub
and
in
cld
cmc
enter
pop
jmp
cwde
stos
adc
add
pop
jmp
push
ret
sub
pop
add
cmp
jl
and
inc
jb
xor
dec
jmp
cld
out
or
ret
leave
fs
inc
add
sub
pop
outs
call
and
sub
and
clc
add
inc
sub
jne
outs
or
pushf
out
in
mov
mov
or
scas
out
jnp
call
dec
add
pop
jae
das
xchg
jo
and
jae
nop
pop
adc
clc
jg
int3
mov
xchg
and
pop
addr16
add
pop
cmps
push
out
push
dec
js
stc
cmp
das
in
mov
and
std
lock
inc
jecxz
jb
sbb
repz
dec
cmp
std
das
add
cmp
xchg
mov
dec
in
fs
sub
es
or
das
xchg
pop
and
repz
aas
lock
in
out
pushf
adc
jg
jmp
and
cmp
add
or
and
push
xchg
in
fs
fs
pop
inc
out
or
daa
cmp
scas
repnz
and
push
ret
clc
mov
outs
mov
jb
adc
sbb
outs
xor
sbb
call
bound
lahf
mov
push
jecxz
sbb
sub
sbb
adc
daa
ins
test
in
in
mov
outs
nop
sub
jbe
js
inc
nop
jl
repz
or
in
retf
pop
jae
xor
mov
cmp
jne
test
cld
les
popf
fist
jo
test
mov
out
push
add
mov
sub
out
pop
hlt
movs
sub
add
xchg
xchg
dec
rcr
mov
xchg
mov
test
and
pop
xchg
fild
pusha
les
into
or
hlt
mov
ficom
xor
cmps
jo
inc
xor
bound
sar
loopne
sar
add
add
cmc
hlt
adc
mov
or
mov
pop
ror
jne
push
cmc
cmp
or
pop
or
aaa
mov
and
and
and
js
pop
and
cdq
stc
push
xor
mov
xchg
(bad)
and
and
add
push
aaa
clc
xor
stos
nop
daa
inc
inc
jb
call
clc
add
sbb
fwait
push
sub
jmp
(bad)
mov
jecxz
adc
jecxz
imul
pop
adc
clc
add
std
push
add
cmp
lods
adc
or
test
pop
pop
jbe
dec
push
or
int3
push
shr
int3
and
daa
pop
stc
mov
js
jb
and
or
leave
sub
adc
jb
inc
pop
sub
add
add
push
or
les
push
add
imul
cmc
mov
inc
pushf
pop
(bad)
es
xor
push
xor
sub
dec
pop
xchg
sbb
cmps
or
repnz
cs
adc
and
pop
(bad)
xchg
mov
out
or
and
adc
retf
adc
adc
dec
add
pop
inc
cld
por
movs
pop
sub
dec
mov
or
call
shl
icebp
xor
repz
pop
add
lea
dec
jge
xor
(bad)
into
clc
dec
jb
cmp
pop
inc
add
or
test
std
pusha
mov
dec
pop
xchg
std
(bad)
cmp
and
pop
inc
pop
xchg
xchg
sbb
std
clc
(bad)
adc
add
fstp
inc
cmp
ror
test
jmp
call
ins
loopne
add
or
xchg
sbb
mov
iret
pop
sbb
mov
shr
inc
pop
mov
xchg
movhps
adc
push
inc
sub
jne
pop
xor
pushf
(bad)
adc
cmps
adc
icebp
mov
(bad)
pop
pop
jecxz
adc
mov
loopne
dec
ret
ret
push
loope
test
out
push
or
(bad)
adc
and
pusha
or
sub
lock
sbb
out
lock
fisttp
sub
loopne
mov
sub
addr16
movs
sub
movs
inc
mov
(bad)
sub
push
sbb
icebp
and
lods
sbb
push
outs
adc
nop
jp
dec
jne
pop
or
pop
cmp
mov
push
sub
jl
push
mov
add
add
ins
lods
les
add
push
aam
push
lock
xor
pop
sub
xor
xor
push
scas
sub
rol
jno
sbb
shr
adc
js
adc
xchg
cli
adc
pushf
sbb
xor
cmp
add
push
sub
xchg
cmps
fsubr
mov
jbe
mov
and
ja
or
xchg
push
inc
mov
je
add
jle
(bad)
xor
cmp
pop
lahf
and
push
sbb
inc
add
sub
aad
hlt
test
pusha
gs
xlat
dec
adc
shl
add
mov
in
push
mov
test
lea
int3
mul
and
or
or
sbb
or
or
leave
add
rcl
and
or
or
adc
mul
test
and
sbb
and
sbb
cs
pop
sbb
and
sbb
sbb
and
push
and
aam
pushf
sub
fdiv
iret
div
nop
add
cwde
add
push
pop
push
leave
mov
pop
and
and
xchg
jo
add
test
sub
test
rcl
mov
push
cmp
adc
push
nop
pushf
mov
bsf
adc
leave
paddq
rcr
sub
cld
(bad)
adc
adc
cmp
(bad)
mov
daa
xor
push
(bad)
adc
aas
and
inc
repnz
push
fisub
adc
pushf
sub
and
dec
xchg
paddq
movs
ja
jl
nop
adc
in
and
inc
sub
cmp
cmps
push
jo
jl
outs
xchg
test
cdq
lea
add
adc
outs
add
sub
ret
and
mov
xchg
sub
add
(bad)
push
jle
add
test
xor
mov
sbb
aas
fimul
out
(bad)
add
add
pop
pop
clc
cdq
neg
cwde
dec
pop
sub
push
mov
push
add
add
inc
dec
or
enter
xchg
and
loopne
or
aaa
pusha
or
xor
add
adc
shl
cmp
push
push
add
(bad)
dec
inc
cmps
or
mov
cld
daa
xchg
inc
mov
lock
sub
sahf
sub
in
test
inc
jb
push
or
(bad)
nop
inc
push
dec
pop
inc
mov
and
sub
mov
popf
or
cmps
mov
add
and
dec
mov
push
enter
dec
pop
add
mov
mov
aaa
sbb
dec
sbb
(bad)
in
add
int3
sbb
add
lods
dec
enter
in
fs
pop
push
dec
cld
(bad)
loopne
add
loopne
add
loopne
(bad)
jl
xor
mov
push
mov
adc
sub
or
leave
cmp
inc
cmp
stos
(bad)
mov
sbb
mov
shl
aad
dec
push
loopne
leave
sbb
test
cmps
shr
dec
div
cmps
xchg
aaa
test
inc
dec
dec
push
sub
cld
sub
pop
and
push
mov
and
jl
and
add
mov
add
out
xchg
pushf
in
fsub
lock
xor
push
inc
sub
daa
sub
add
xor
cmp
loopne
xor
sar
pop
and
xor
and
pop
push
xor
cmp
dec
rol
test
and
push
inc
xor
fst
cmp
push
dec
add
aaa
fdivr
fist
or
fdivr
enter
and
sub
and
sub
mov
sub
push
daa
jo
ret
push
xor
int3
fild
cmp
inc
mov
add
jo
pop
lock
aam
in
sub
sub
push
add
push
cmp
mov
(bad)
jo
mov
cmp
and
(bad)
repnz
adc
xchg
inc
inc
jb
in
(bad)
stc
cmp
in
pop
ror
pusha
aam
xchg
xchg
pop
cmp
adc
inc
cmps
lea
lds
xchg
inc
fucomip
outs
or
pop
sub
pop
shl
fistp
enter
pop
out
sub
add
jb
stos
push
add
enter
test
pop
add
iret
aaa
bound
sub
push
push
adc
sar
cmp
mov
dec
pop
push
and
add
inc
push
mov
fwait
mov
xlat
xor
or
xchg
sub
(bad)
xchg
enter
add
jl
iret
test
dec
xor
sub
dec
add
add
js
cmps
xchg
dec
mov
add
xchg
sub
call
je
dec
inc
adc
and
mov
and
add
nop
shl
hlt
add
test
sbb
push
jmp
pmaxsw
push
popf
aas
add
ror
cmovnp
inc
add
pop
mov
add
pop
pop
inc
add
adc
adc
pop
sub
cmp
pop
xor
or
pop
push
adc
das
inc
jb
adc
inc
or
sub
mov
ret
inc
jb
jo
pop
les
loop
add
and
pop
in
inc
jb
unpcklps
inc
add
mov
sbb
push
push
xchg
xor
lods
or
add
pop
xor
xor
push
pop
and
test
sbb
dec
shl
push
or
loope
dec
dec
pop
adc
add
add
push
inc
push
pop
or
mov
push
dec
push
pop
add
out
mul
sub
push
adc
rol
mov
out
jl
pop
and
ds
or
inc
add
xchg
in
fdivr
or
push
dec
and
loop
aad
std
or
pop
ror
or
and
pop
aad
ins
adc
or
outs
inc
inc
mov
pop
add
outs
(bad)
stos
enter
fimul
cmp
fs
adc
fs
xor
jle
fucomip
in
push
in
das
inc
dec
mov
mov
pop
imul
or
push
mov
mov
test
int3
inc
jb
loop
xor
bound
push
les
cmps
dec
jb
sahf
fsub
cmp
jmp
jl
dec
push
mov
mov
retf
dec
and
fs
std
sysexit
push
jno
jb
repnz
cmp
xlat
cmp
jns
sti
xor
mov
mov
out
push
jb
dec
dec
inc
sahf
adc
mov
fiadd
daa
daa
daa
mov
xchg
xchg
xchg
inc
jp
pop
push
in
inc
add
dec
push
jnp
push
xor
test
add
push
mov
add
cmp
ds
dec
int3
xor
add
add
push
dec
sub
and
in
dec
add
adc
test
add
inc
adc
pop
dec
inc
dec
sbb
xchg
rcl
nop
add
sbb
push
xchg
sbb
sbb
add
out
and
sbb
xchg
push
and
adc
sbb
loopne
sbb
fwait
adc
add
dec
pusha
sbb
or
jb
inc
mov
dec
adc
and
sbb
add
inc
and
mov
and
or
add
inc
gs
add
cmp
adc
pop
xor
sbb
sar
sbb
stc
push
scas
or
inc
test
sub
and
dec
xchg
adc
in
mov
add
or
das
pop
pop
add
or
lds
lods
out
cmp
mov
ins
shr
imul
pusha
adc
sbb
lods
or
or
inc
adc
add
pop
jne
add
or
add
and
inc
dec
jne
add
push
push
mov
dec
lds
inc
adc
(bad)
xor
jne
sbb
cmp
or
add
dec
dec
add
sbb
inc
in
test
jb
jo
nop
jne
shl
add
in
dec
pop
adc
mov
pop
jecxz
lfs
add
fild
test
add
aam
add
or
pop
pop
ss
mov
mov
jb
push
inc
and
add
popa
pop
add
cmp
push
dec
mov
pusha
cmp
sub
pusha
dec
xor
pop
sub
add
or
fsub
outs
sub
push
cmps
(bad)
(bad)
add
sbb
out
or
lahf
jl
push
inc
lods
mov
adc
das
cmps
pop
xchg
pop
cmp
pop
and
sub
mov
pop
aas
or
jae
adc
lock
cmp
int
or
mov
inc
mov
add
inc
mov
pop
fild
div
movaps
mov
add
cmps
cs
xor
pop
pop
ficomp
pusha
pop
push
mov
mov
int
pop
fild
addr16
adc
adc
cmps
pop
addr16
push
pop
xchg
pop
addr16
psrld
add
fs
stos
jo
xchg
pop
pop
ja
push
cmp
sub
daa
add
fcmovbe
adc
leave
(bad)
pop
aad
adc
pop
outs
sub
pop
ja
push
cld
stos
push
(bad)
jp
push
fldcw
das
popa
xlat
or
ja
xchg
xor
clts
ror
push
mov
xlat
adc
mov
pop
xlat
pop
cmp
(bad)
xchg
pop
rcr
outs
(bad)
and
xchg
or
push
popa
inc
pop
out
ss
mov
int
repnz
adc
bound
mov
paddw
arpl
dec
dec
inc
sahf
add
ret
daa
and
clc
sub
xchg
daa
daa
stc
cmp
leave
leave
enter
addr16
xor
pslld
in
xchg
out
imul
out
push
mov
push
jo
mov
bswap
fwait
adc
jg
clc
push
dec
add
rcr
and
mov
fmul
in
clc
push
adc
mov
adc
add
or
ins
push
or
gs
or
cdq
ins
pop
(bad)
pop
test
pop
shr
push
mov
xchg
push
add
(bad)
xchg
or
sub
sub
(bad)
fwait
pop
inc
lods
pop
cmp
(bad)
clc
push
lds
(bad)
pop
sub
xchg
sub
adc
lods
mov
add
clc
push
adc
and
clc
push
mov
or
add
and
add
xchg
inc
clc
push
imul
mov
mov
sub
jae
in
clc
push
dec
mov
stos
push
pop
test
mov
mov
(bad)
or
(bad)
clc
push
mov
adc
(bad)
jne
les
std
add
mov
(bad)
mov
adc
or
inc
(bad)
clc
push
adc
mov
jl
cmp
leave
sub
inc
pop
mov
or
pop
or
xchg
xor
sbb
push
add
pop
fwait
mov
sbb
cdq
xor
pop
fwait
or
sbb
inc
cld
cmp
cld
adc
inc
inc
push
lea
add
adc
retf
add
inc
ret
sub
dec
xor
or
pop
jl
or
pop
jl
push
(bad)
xlat
ret
xor
cmp
inc
jmp
clc
out
or
push
inc
sub
or
adc
jns
or
add
ins
adc
adc
jl
cmp
outs
test
ss
outs
pop
dec
das
data16
jg
repnz
outs
and
sbb
stos
loopne
adc
icebp
mov
jl
jmp
lods
add
stos
mov
es
jmp
stos
lods
push
xor
cmp
push
test
inc
ror
jo
aas
rcl
xor
iret
jmp
aaa
aad
add
iret
inc
test
movs
sub
or
jno
mov
add
outs
mov
das
in
das
jo
pop
or
and
sbb
sub
(bad)
push
jg
jb
fsubr
das
inc
aas
mov
pusha
sbb
xlat
mov
jb
push
jg
add
lds
sbb
inc
lock
addr16
dec
push
shr
or
add
dec
lods
sub
mov
test
xchg
push
push
mov
scas
push
sbb
xchg
(bad)
mov
iret
and
data16
push
mov
icebp
mov
pop
push
xchg
ins
xchg
adc
xchg
ins
xchg
cmp
(bad)
jl
hlt
ins
jb
(bad)
and
loopne
lods
jne
ror
pop
rol
pop
icebp
repnz
lods
jbe
jbe
in
fs
push
xchg
iret
jb
xor
adc
stos
stc
daa
mov
jp
jns
ja
daa
or
xchg
leave
leave
enter
jnp
lods
dec
data16
fstp
es
and
dec
xchg
loopne
jge
popa
daa
daa
daa
gs
in
outs
fistp
mov
packssdw
rcr
cli
pop
ja
jg
cmp
mov
out
mov
fiadd
add
jmp
or
push
jo
les
out
mov
push
xchg
adc
dec
push
jg
push
push
adc
mov
and
or
jl
inc
es
and
inc
lods
adc
add
pop
shl
inc
push
jg
or
xchg
xor
das
adc
pop
mov
and
out
mov
jg
jno
sbb
shl
mov
rcl
inc
jno
ret
or
inc
inc
repnz
lods
mov
push
push
jg
shl
gs
repnz
jmp
ret
sbb
inc
push
jg
dec
nop
sub
jg
loopne
shl
test
mov
cmp
or
adc
mov
adc
mov
sbb
bound
add
mov
leave
mov
jg
and
pop
inc
mov
adc
inc
or
mov
adc
les
jecxz
xor
xor
mov
(bad)
push
rcl
jmp
inc
adc
mov
mov
leave
sbb
mov
loopne
mov
in
pusha
adc
in
xchg
pop
adc
inc
jl
inc
and
mov
adc
les
fdivr
les
out
(bad)
mov
or
fstp
enter
seto
fist
adc
ins
push
push
and
ins
and
inc
cmp
jo
adc
adc
or
das
imul
fdivr
vmwrite
push
aaa
hlt
mov
dec
push
xor
test
mov
mov
ror
pusha
inc
mov
add
addr16
or
addr16
add
inc
addr16
mul
lods
test
cld
das
sbb
outs
adc
push
or
mov
add
stos
or
mov
lods
add
add
add
adc
add
xchg
aaa
inc
push
adc
and
pop
and
xchg
or
jne
or
add
xlat
mov
push
adc
sti
imul
inc
cwde
xchg
xchg
mov
fcmovne
das
loope
fcomip
add
cmp
sub
push
inc
push
pop
test
xchg
push
pop
pushf
sbb
sbb
cwde
xchg
add
loope
add
mov
and
mov
sbb
inc
rcr
add
mov
mov
add
sub
fidiv
inc
movs
mov
mov
mov
cmp
push
cli
into
push
cmp
adc
add
sbb
dec
add
push
and
(bad)
imul
call
ins
sub
mov
cmp
cmp
adc
cmp
test
mov
add
jae
ds
lahf
mov
adc
das
fisttp
sahf
pushf
fmul
mov
add
dec
(bad)
(bad)
mov
daa
daa
daa
test
outs
sbb
nop
daa
daa
daa
and
fimul
xchg
xor
leave
leave
enter
xchg
dec
jae
in
leave
leave
xchg
into
pop
xchg
aas
setge
in
add
ds
pop
cld
xchg
call
cmp
mov
aam
in
arpl
dec
enter
and
les
loopne
xor
sbb
arpl
or
xchg
push
sbb
add
jns
sbb
adc
arpl
enter
push
add
cdq
xor
arpl
or
xchg
jmp
test
push
fiadd
xchg
push
inc
dec
rol
xchg
sbb
add
cmp
fwait
loopne
lds
xchg
arpl
adc
or
or
add
setb
arpl
pop
and
gs
push
ja
aaa
bound
arpl
xor
inc
and
xchg
test
push
dec
rol
sub
arpl
push
sub
test
xchg
cmp
inc
or
arpl
arpl
bound
adc
add
lds
arpl
add
dec
push
and
xchg
add
stos
xor
arpl
and
jns
mov
or
add
dec
arpl
test
add
xlat
inc
or
add
sbb
cmp
cwde
xchg
add
sbb
pop
sbb
add
in
arpl
add
in
arpl
add
popa
jns
ror
sub
dec
pop
jmp
add
cmp
loopne
and
mov
loopne
add
mov
inc
or
sbb
nop
sbb
cmp
cmp
xor
sbb
and
cmp
js
mov
or
pop
cmp
dec
sub
aaa
xlat
ucomiss
xchg
sub
fs
jbe
xor
add
fs
xlat
ss
and
in
popf
xchg
sbb
mov
pop
mov
push
(bad)
jo
ret
js
pusha
or
xchg
int
sbb
cmps
movs
or
(bad)
retf
xchg
sub
test
sub
xchg
inc
mov
(bad)
cvtps2pi
add
pop
and
xor
cmp
cmp
das
aam
push
addr16
sbb
daa
call
cli
push
enter
and
enter
lods
and
cmp
jno
ret
int
push
mov
call
add
or
xor
add
lds
je
enter
pop
das
shr
pop
sbb
ds
std
mov
js
icebp
mov
mov
inc
aas
jmp
cmp
das
cmps
popf
daa
sbb
xchg
and
and
mov
lods
out
repnz
push
cmp
daa
mov
cdq
xchg
pushf
cwde
jne
xchg
daa
mov
(bad)
in
jns
xchg
jl
jo
cwde
mov
push
and
popf
push
cmc
ucomiss
addr16
xchg
sahf
push
dec
(bad)
retf
iret
sahf
setg
daa
daa
mov
xor
xchg
jg
sbb
leave
je
cmc
sub
(bad)
bts
leave
leave
leave
enter
lods
rcr
loop
neg
test
mov
adc
leave
pop
xchg
fstp
cmps
(bad)
(bad)
pop
shl
test
daa
mov
es
and
cmp
pop
pop
push
daa
pop
and
dec
or
xchg
fbstp
sbb
(bad)
dec
push
fild
and
daa
in
cmps
cmp
and
sub
jo
mov
jecxz
ins
mov
sbb
push
js
neg
mov
pop
daa
aam
fistp
lods
push
adc
cmp
cmc
mov
sbb
mov
xchg
push
add
and
aam
fistp
dec
push
fistp
push
mov
mov
add
jno
repnz
cmp
inc
enter
and
push
dec
enter
pop
push
nop
nop
movs
jae
mov
and
xchg
cmp
dec
adc
inc
ret
movs
add
push
jae
in
cmps
cmp
mov
mov
dec
add
sbb
mov
mov
xchg
xchg
adc
mov
adc
push
cmp
jne
adc
sub
pop
and
aam
loopne
or
inc
jl
mov
movs
and
call
mov
popa
rcl
or
pop
xor
sbb
dec
push
daa
rcl
jecxz
add
pop
daa
shl
pop
seto
daa
or
mov
or
push
and
push
xchg
inc
stos
lea
mov
inc
push
and
movs
je
dec
and
jg
test
hlt
push
mov
add
jbe
in
fld
(bad)
(bad)
and
repz
ds
mov
lods
add
cmp
inc
and
daa
inc
data16
dec
mov
hlt
jbe
or
push
(bad)
adc
and
int3
aad
pop
mov
in
aad
push
call
test
mov
(bad)
stos
pop
ss
xor
ins
xchg
xor
icebp
loopne
xor
cmps
das
or
mov
xchg
xchg
(bad)
nop
cmp
xor
ins
in
jne
add
dec
dec
outs
test
pop
push
pusha
ror
dec
xor
stos
mov
lahf
mov
sbb
addr16
call
aad
mov
mov
fistp
stos
dec
push
pop
test
cmc
sub
inc
stos
jg
and
cmp
fiadd
mov
dec
adc
psrld
ret
into
dec
jg
push
add
outs
test
jmp
sub
enter
mov
jnp
and
pop
int
in
add
mov
sub
mov
dec
jno
scas
pop
aad
movs
cmp
mov
or
add
jnp
push
sub
push
lods
cmp
sub
push
pop
mov
cmp
mov
push
mov
sbb
sahf
push
jo
sub
sbb
fisttp
push
jge
xchg
push
aam
pop
scas
ja
rcr
fsubr
scas
(bad)
test
sbb
inc
or
add
and
gs
lock
xor
leave
sub
xchg
xor
xor
push
repnz
pop
mov
movs
mov
fsubr
sbb
sbb
adc
xchg
pop
int
scas
test
iret
test
aas
loopne
nop
das
scas
mov
dec
aaa
add
sysret
lock
jb
es
jne
repnz
sub
or
add
inc
loopne
xor
adc
xor
add
in
or
add
add
mov
fsub
and
aad
out
mov
aas
loope
add
push
mov
sbb
add
xor
cdq
adc
scas
(bad)
sbb
or
mov
dec
aas
mov
push
cmovle
dec
add
pop
ins
jl
mov
mov
pop
xchg
or
inc
inc
sub
fiadd
xchg
add
sbb
dec
or
(bad)
nop
mov
dec
nop
mov
mov
add
dec
mov
pushf
das
mov
or
mov
pop
icebp
push
addr16
push
out
mov
stos
sar
mov
and
push
pop
popf
mov
pusha
or
imul
cmp
retf
lods
push
inc
icebp
and
pop
and
test
icebp
aam
adc
(bad)
aas
or
and
cmp
sub
push
es
push
push
xor
inc
cmp
popf
and
mov
jg
dec
pop
call
sub
loope
jb
(bad)
aam
or
(bad)
es
mov
xchg
pushf
stos
adc
xor
lds
dec
and
add
dec
sub
add
or
pop
ja
cmp
xchg
mov
dec
or
ins
xor
mov
mov
loope
sbb
das
das
mov
jecxz
dec
pop
(bad)
neg
clc
sub
nop
push
out
push
ret
unpcklps
cmp
unpcklps
mov
dec
mov
jae
inc
jp
jecxz
psubusw
pop
or
mov
mov
inc
mov
jb
repnz
pusha
pushf
loopne
cmp
jns
sar
pushf
pushf
mov
rcl
and
dec
mov
add
test
dec
test
repz
daa
daa
mov
dec
shrd
push
dec
outs
mov
mov
cmp
dec
push
(bad)
cmp
push
or
xchg
(bad)
(bad)
fmul
lock
stos
push
jmp
add
xchg
push
and
and
or
ins
push
xchg
dec
or
push
push
jno
dec
pop
leave
add
push
les
sub
call
push
add
or
dec
xor
ins
push
mov
les
adc
or
adc
das
mov
or
out
or
and
adc
xchg
pop
and
loope
push
fwait
push
push
or
ror
mov
pop
push
push
or
mov
dec
mov
adc
adc
sub
xor
mov
repnz
push
cwde
sub
sbb
xor
gs
push
mov
push
xor
mov
dec
sbb
rol
xor
push
dec
pop
sbb
jg
pop
push
cs
or
push
ret
lods
inc
and
mov
lods
dec
sbb
mov
test
lods
or
lods
xor
lods
jge
inc
mov
inc
push
ret
add
lods
dec
cmp
xchg
dec
mov
sub
xor
lods
pusha
dec
and
or
pusha
dec
lods
shr
pop
inc
(bad)
xor
inc
inc
adc
sbb
dec
lods
in
inc
leave
mov
xor
adc
jns
dec
inc
sub
add
or
sub
or
jb
pop
jo
or
cs
test
or
xchg
pop
adc
sub
push
adc
(bad)
rcl
mov
mov
mov
mov
or
sub
xlat
pop
xchg
pop
inc
fbstp
ja
sbb
retf
pop
jl
call
leave
leave
xor
stos
retf
or
sbb
retf
stos
inc
int3
add
stos
inc
pop
mov
sub
ja
mov
data16
push
sub
ja
pop
xor
mov
sbb
cvttps2pi
xor
out
rcl
shl
int
test
daa
ficomp
mov
mov
int
sbb
lahf
and
xor
xor
mov
xor
or
jo
sar
mov
mov
push
mov
cmp
inc
pop
das
cwde
mov
sub
pop
push
pmaddwd
enter
hlt
pop
xor
adc
into
xchg
addr16
jb
loope
aaa
ror
mov
and
push
xchg
jle
xor
push
loopne
cmovl
and
mov
cmovl
and
push
mov
pop
dec
jo
mov
add
pop
rcl
pmulhw
push
push
sar
jecxz
pop
rcr
or
cmp
cmp
inc
add
rcr
stos
into
add
leave
leave
sub
mov
add
addr16
iret
pop
(bad)
cmp
loopne
leave
leave
test
jb
or
setg
cmp
jns
jmp
(bad)
cmp
push
and
sub
fimul
push
lods
stos
or
push
daa
in
(bad)
int3
fld
pop
and
pop
pop
dec
or
test
push
(bad)
daa
in
sbb
cs
fchs
cs
inc
and
cmp
mov
lock
push
mov
and
push
and
adc
test
fld
mov
xor
xchg
push
(bad)
pop
(bad)
adc
xchg
mov
fwait
sbb
sbb
fst
adc
loop
retf
(bad)
sub
cmp
(bad)
sub
das
nop
pop
leave
int3
fldcw
fnstcw
add
ss
outs
push
mov
push
sbb
jae
fwait
in
leave
and
fxch
fstp
sub
and
add
sub
lods
out
cmp
mov
adc
add
adc
outs
mov
outs
or
outs
int3
fxch
lea
mov
and
jns
or
outs
xchg
push
adc
and
int3
xchg
xchg
pushf
nop
fld
xor
mov
ror
push
outs
dec
xor
mov
fadd
outs
stos
outs
xchg
test
imul
add
mov
(bad)
sbb
and
dec
fidivr
fs
mov
sub
cs
mov
sbb
dec
enter
jno
dec
sbb
rol
adc
mov
and
push
jg
leave
retf
mov
fs
ret
add
pop
adc
sub
cmp
mov
or
push
inc
inc
jg
mov
adc
cdq
cmp
adc
add
or
fsubr
es
loop
push
fnstsw
int
pop
das
jp
mov
int3
fnsave
fisubr
rol
xor
fistp
xchg
and
loop
fs
les
fs
pusha
inc
push
jge
push
test
sbb
cwde
mov
push
cmovg
push
inc
ja
and
or
out
sbb
push
das
pop
stos
push
xor
aas
jmp
imul
loope
clc
es
das
cmp
lods
pop
and
jl
pop
aaa
push
jb
push
push
aaa
xlat
aam
mov
jg
(bad)
loope
(bad)
and
xlat
pop
aam
push
add
push
dec
jmp
mov
repnz
and
jo
xchg
outs
add
push
pop
fs
add
dec
inc
aaa
pop
popf
mov
or
mov
inc
or
mul
push
xchg
jecxz
out
mov
and
adc
ds
jno
xor
xor
pushf
xchg
push
xor
(bad)
sub
pop
aam
and
inc
leave
mov
pop
aam
pusha
fs
sahf
xchg
fucomi
(bad)
in
(bad)
and
in
push
seto
add
retf
in
out
mov
pop
jno
sub
outs
mov
loope
daa
and
call
xchg
and
sub
leave
leave
mov
sbb
mov
(bad)
add
jb
cmp
cmp
pop
test
cmp
in
fs
lds
and
jg
sar
pextrw
and
dec
mov
pop
dec
inc
adc
push
ins
punpckhdq
dec
add
xor
ins
inc
nop
dec
add
add
or
movs
jno
and
dec
fs
daa
in
aam
ins
xor
sub
inc
movs
xor
dec
inc
inc
jl
push
push
les
push
push
daa
xchg
nop
sub
movs
inc
adc
add
out
cdq
sub
movs
add
mov
or
mov
movs
fwait
in
add
fs
dec
adc
or
dec
je
and
add
add
cmp
push
or
inc
gs
pop
push
les
push
mov
xchg
sbb
ins
aam
rcr
or
aam
xor
add
push
dec
sub
ins
pop
cmp
add
aam
shr
cmp
mov
std
stos
adc
add
imul
and
std
sbb
mov
sbb
or
std
aam
xor
and
xor
and
std
push
push
mov
xchg
dec
and
out
pop
inc
das
cmp
or
(bad)
in
add
xor
in
loope
mov
je
adc
scas
adc
jns
ins
push
bound
pop
loopne
inc
inc
jecxz
fs
push
jp
mov
add
or
rcl
fdiv
xchg
push
and
aam
cmp
sbb
call
add
adc
adc
adc
add
pop
aas
push
into
movaps
xlat
loopne
add
(bad)
and
addr16
jmp
idiv
dec
icebp
cmps
in
in
jl
jecxz
pop
repnz
add
loop
mov
mov
push
sub
repnz
cmp
pop
mov
push
push
fmul
pop
mov
push
pushf
add
retf
pop
pop
daa
bound
pop
aad
icebp
or
pushf
mov
sbb
not
stos
and
sub
xor
shr
hlt
pop
mov
pusha
cmp
addr16
inc
mov
cmp
dec
mov
pop
fdivr
inc
cmp
js
jae
mov
mov
hlt
pop
adc
fwait
xchg
cmps
pop
arpl
aas
call
test
add
nop
adc
rol
daa
add
fisub
int
outs
test
not
cmp
add
jmp
cmp
scas
push
push
(bad)
imul
jecxz
loopne
adc
test
cmp
mul
imul
lock
push
cmp
lock
or
lds
fcomip
cmps
in
mov
push
test
jo
repnz
jmp
fsub
dec
das
punpckhbw
test
or
dec
stc
fwait
xchg
daa
daa
mov
btr
sub
leave
enter
mov
leave
leave
leave
jns
jecxz
cld
sahf
pushf
fcom
aaa
imul
xor
dec
dec
dec
inc
jp
out
(bad)
in
xchg
pop
pop
orps
ret
adc
dec
jno
jge
jb
int3
adc
fsubrp
pop
out
test
cli
push
add
add
push
mov
es
cmp
xchg
scas
je
inc
movzx
push
adc
jno
jno
pop
add
cmp
cmp
inc
mov
scas
mov
add
add
pushf
jae
push
mov
inc
jo
jae
lds
bound
ins
add
pop
test
cmps
mov
push
push
push
xchg
or
fwait
mov
scas
add
sbb
or
adc
rcl
inc
dec
jno
sub
call
cmp
sbb
or
mov
outs
add
stos
and
jae
lods
push
or
and
and
adc
xchg
inc
add
sub
inc
(bad)
bound
bound
lods
aad
and
dec
push
mov
sbb
and
mov
mov
push
or
push
adc
ret
and
jge
test
(bad)
and
inc
lods
push
jns
add
bound
sbb
inc
or
dec
jge
in
push
in
outs
dec
inc
in
outs
in
mov
or
sub
mov
cmp
and
pop
xchg
push
pop
and
test
add
inc
mov
pop
xor
test
(bad)
cli
enter
jmp
cmp
test
aaa
add
mov
jb
add
add
clc
imul
cmp
add
or
add
lea
in
push
test
jae
add
xchg
jae
pop
shl
cmp
aas
add
fucomi
movs
add
pushf
daa
mov
or
int3
adc
add
cdq
mulps
inc
int
mov
repnz
cmp
nop
jl
scas
ins
add
in
and
jo
stos
gs
stos
push
adc
pop
aad
add
sub
xchg
mov
lds
in
pop
pop
xor
rep
das
jp
or
sysret
ins
fcomp
or
cmps
mov
push
push
dec
mov
adc
mov
sub
add
pop
adc
ret
inc
std
push
xchg
adc
push
cwde
int
push
xor
std
int
jo
nop
add
cmp
popf
retf
push
sub
mov
xchg
aad
ins
xchg
add
jg
add
add
loope
or
add
nop
pop
add
stos
inc
stos
outs
sete
mov
xchg
cmp
inc
mov
dec
xor
js
or
ja
and
mov
cmps
push
and
sbb
push
pushf
or
addr16
sbb
(bad)
mov
or
movs
paddsw
cmp
add
xor
daa
test
popf
push
leave
sub
popf
in
pop
add
xor
sbb
fiadd
sbb
mov
cmp
or
or
mov
mov
mov
test
pop
sahf
dec
or
jb
das
mov
jns
pusha
iret
arpl
dec
retf
xchg
xchg
or
inc
jns
ficom
ja
inc
adc
or
cmp
sub
stos
dec
xor
ja
add
push
int
cmp
xchg
sar
xor
movs
or
adc
retf
xchg
sub
ja
pop
std
sub
mov
or
inc
xor
(bad)
push
pusha
rcl
movs
out
sub
and
xchg
jne
cmps
cmovge
mov
out
xor
adc
jns
sub
ins
pop
cwde
push
in
adc
nop
push
pop
push
adc
sub
cmovbe
scas
call
jecxz
lock
(bad)
adc
dec
push
inc
adc
push
mov
add
adc
ds
sub
xor
fldenv
in
push
cmp
sbb
ret
adc
or
pop
xchg
inc
cmp
pop
sbb
push
sbb
adc
adc
xor
stc
pop
fisubr
dec
adc
inc
jb
(bad)
sbb
jns
stc
push
mov
adc
xor
add
rcl
adc
ffreep
inc
pop
push
aam
int
ror
add
and
cmp
push
push
mov
pop
ret
and
and
dec
pop
fwait
mov
sbb
int
mov
mov
sub
int
pop
push
xchg
lea
cmp
jmp
pusha
adc
sub
push
push
mov
cmps
int
xlat
push
pop
into
repz
loope
cmps
in
neg
js
push
int3
into
dec
xlat
cld
adc
test
pop
jl
setp
ret
sbb
(bad)
push
cmps
daa
clc
shl
mov
add
aas
enter
pop
rcr
xchg
mov
pop
adc
fwait
and
pop
sbb
xor
dec
jl
adc
or
test
pop
aad
xchg
sar
xor
aas
lock
sbb
cmp
pop
pop
pop
and
xchg
js
test
bnd
pop
mov
icebp
pop
ins
sbb
and
jne
icebp
cmp
outs
dec
aas
iret
les
inc
and
add
push
add
push
adc
or
xor
mov
push
and
mov
cmp
push
inc
xchg
test
rcr
add
mov
fs
neg
jl
xchg
pop
fcomp
aas
pusha
and
xor
aad
outs
into
repz
sbb
push
jne
les
sbb
(bad)
mov
mov
int3
into
pop
adc
ucomiss
jae
adc
out
les
daa
cmp
xchg
or
ins
jl
xchg
push
repnz
sbb
mov
mov
sbb
push
das
jns
jmp
push
iret
pop
add
sub
stc
hlt
sbb
jl
fldcw
pop
sbb
ins
sti
loop
or
jb
pop
pop
mov
sbb
and
dec
inc
jns
rcl
lock
adc
lock
push
out
aam
and
inc
add
xor
loopne
stos
push
inc
add
pusha
push
retf
mov
add
mov
pop
add
pusha
loopne
(bad)
add
add
test
adc
cmps
xchg
add
aam
aaa
test
(bad)
cmps
clc
mov
push
pop
xor
adc
test
lea
outs
xchg
push
mov
adc
xchg
cmp
push
mov
mov
and
push
aam
and
and
ja
in
fmul
and
push
dec
clc
aam
test
mov
enter
jnp
cmp
xchg
mov
hlt
pop
popa
leave
mov
and
jnp
jo
test
jnp
pop
push
add
and
inc
and
mov
push
xchg
cwde
add
loop
cwde
es
mov
and
and
and
adc
add
sbb
lock
loopne
mov
out
cmps
mov
add
jo
or
clc
mov
and
jnp
mov
push
pop
sub
sbb
adc
adc
and
or
push
jmp
shl
cmp
mov
inc
xchg
inc
xchg
test
fild
es
daa
and
cmp
push
icebp
fistp
pop
fbld
sub
xlat
cmp
cmp
retf
int3
inc
xor
iret
sub
pshufw
mov
aas
sbb
jne
add
inc
or
scas
xchg
sbb
sbb
cmp
push
repnz
mov
sbb
scas
dec
js
mov
add
jo
outs
js
sub
cmps
pop
(bad)
jo
push
pop
js
pop
je
xchg
sub
xchg
jno
ret
inc
inc
fisubr
in
(bad)
pop
sub
sub
loope
rcr
inc
pop
pop
pop
add
add
cmp
adc
ins
inc
pop
les
add
adc
push
movs
or
pop
inc
add
mov
cwde
mov
test
push
mov
mov
mov
push
mov
jmp
sbb
push
push
aam
test
add
jmp
jns
sub
add
jmp
dec
add
ja
fs
cmc
jbe
das
xor
out
sub
jbe
jge
sub
dec
ret
mov
xor
xor
mov
scas
nop
push
mov
leave
and
sub
mov
repnz
xlat
lea
push
mov
or
push
out
pop
and
fs
ss
pop
sub
pop
js
xchg
das
mov
mov
sub
add
ror
push
inc
pop
in
das
les
jns
push
xor
xor
inc
or
mov
fmul
xor
mov
mov
stos
mov
and
loopne
retf
push
hlt
sbb
pop
sub
fisttp
cmp
inc
mov
dec
push
adc
or
inc
fcom
xor
and
xchg
nop
and
mov
es
cmp
sahf
push
lock
push
cmp
jo
xor
pusha
sbb
mov
push
mov
xor
in
pop
fsub
div
aas
lock
iret
push
sbb
jo
setnp
sub
outs
dec
xor
fs
inc
pop
leave
jmp
mov
mov
(bad)
in
mov
mov
pop
aaa
push
and
stos
outs
and
loopne
mov
or
cmps
pop
fst
xor
(bad)
loopne
xchg
xor
aas
lock
sbb
push
mov
mov
fmul
repnz
xor
xor
add
add
sub
ror
cmp
mov
int
loopne
adc
pusha
rol
call
add
(bad)
in
add
xchg
sar
mov
fmul
inc
mov
mov
xor
push
sbb
push
je
pusha
sub
aaa
sub
dec
push
mov
out
pusha
mov
stc
(bad)
add
dec
aad
dec
add
push
adc
inc
cmp
xchg
daa
mov
ja
outs
das
lock
xor
jp
sbb
ja
xor
lea
ss
and
pusha
fstp
push
repnz
fisttp
fstp
js
sar
push
das
push
test
shl
shr
cmp
push
cmp
ins
movs
das
ret
clc
fadd
jns
pop
and
push
push
adc
pop
jg
cli
push
inc
mov
cmp
xchg
and
or
push
push
cmp
jo
push
inc
dec
sbb
add
adc
push
movs
or
dec
xchg
and
dec
inc
and
aad
fild
push
push
adc
jge
aaa
jbe
sbb
add
or
sbb
ds
sub
pop
(bad)
popa
jecxz
into
repz
aas
es
push
popa
inc
rcl
aas
in
je
dec
jl
push
jl
(bad)
or
pminsw
(bad)
daa
sbb
inc
inc
add
test
jbe
mov
iret
sub
xor
loopne
add
adc
scas
nop
lock
push
or
xchg
inc
sub
pop
rol
mov
shr
cmps
pop
(bad)
aas
pusha
and
aas
lock
pop
les
loop
aas
int3
mov
enter
and
repnz
aas
adc
jnp
test
mov
popa
shl
dec
inc
add
pop
imul
add
test
das
and
and
retf
bound
mov
add
movs
inc
mov
scas
sub
mov
mov
xchg
sbb
pop
ffreep
inc
paddsw
mov
in
inc
and
(bad)
das
test
adc
and
out
aaa
jnp
or
cld
dec
cmp
lock
hlt
push
and
mov
clc
sbb
add
fs
inc
push
dec
addr16
jnp
loopne
inc
jecxz
rsqrtps
fwait
jae
lsl
or
push
xchg
aam
push
ins
bound
jle
sbb
add
mov
mov
lock
ins
jo
(bad)
aaa
jne
adc
(bad)
push
or
xor
pop
inc
rcr
and
es
sbb
fs
gs
cmp
jmp
mov
xchg
cmp
jae
dec
sbb
jl
sbb
clc
ins
pop
or
and
mov
dec
(bad)
xor
mov
popa
or
cmps
in
add
ins
arpl
sub
mov
movs
outs
or
push
or
xor
add
jb
dec
data16
xchg
pushf
adc
pop
dec
jb
(bad)
neg
add
cmp
add
mov
outs
pop
add
inc
iret
ja
movlps
das
out
or
sbb
add
jae
ret
jno
ret
les
iret
mov
sahf
out
push
fmul
mov
pop
jecxz
shr
inc
mov
jo
or
out
addr16
push
jno
adc
or
pop
and
add
popa
mov
fst
jns
cmp
popa
call
adc
mov
in
jl
and
push
dec
or
xchg
push
icebp
pop
daa
mov
cmc
push
dec
dec
inc
pop
add
loope
dec
mov
loope
dec
jae
inc
xor
addr16
xchg
lds
movs
mov
push
add
dec
sub
in
dec
and
or
add
outs
inc
aaa
fbstp
repnz
dec
pop
add
fstp
adc
sbb
push
es
or
or
mov
xchg
add
cdq
rcr
ret
sqrtps
add
ret
push
fisub
push
mov
sti
mov
sub
adc
add
dec
adc
outs
in
popa
pusha
xchg
in
mov
dec
or
retf
xor
clc
cmp
add
push
aaa
(bad)
(bad)
(bad)
call
mov
fdiv
call
dec
adc
cmp
jge
jle
jb
add
ficomp
(bad)
(bad)
dec
cmp
das
fiadd
cwde
xor
cdq
sar
(bad)
dec
sbb
shl
or
sub
jae
add
xchg
mov
sar
or
(bad)
(bad)
push
cmp
jmp
not
xor
hlt
or
(bad)
mov
ret
pop
mov
test
(bad)
(bad)
inc
sub
mov
loopne
(bad)
xchg
sar
sub
sbb
(bad)
(bad)
(bad)
jmp
mov
in
fist
clc
add
and
shl
(bad)
daa
ror
jmp
(bad)
(bad)
call
popf
sbb
push
add
push
jmp
jne
push
dec
sub
mov
pop
inc
sar
(bad)
(bad)
(bad)
fcom
stos
fistp
out
bound
mov
fld
es
xlat
(bad)
(bad)
jg
fbld
jns
cs
popa
iret
clc
dec
addr16
les
jnp
sbb
mov
(bad)
jns
pop
push
retf
icebp
jle
jmp
cmp
push
mov
xchg
push
push
dec
push
leave
loopne
sar
(bad)
inc
int
imul
repz
into
inc
test
popf
call
imul
(bad)
(bad)
push
mov
or
inc
dec
outs
fnstenv
pushf
jno
mov
int
(bad)
(bad)
(bad)
jmp
mov
fist
mov
pusha
inc
lods
adc
jg
test
push
pusha
pop
(bad)
(bad)
(bad)
inc
sub
fcom
std
stos
xor
ss
push
lds
push
adc
push
(bad)
popf
cmp
(bad)
(bad)
(bad)
jmp
add
out
and
imul
mov
test
inc
mov
(bad)
push
and
adc
and
(bad)
lock
xor
out
dec
sbb
jg
fild
into
out
call
clc
xor
aaa
sahf
mov
adc
sbb
shl
out
cmp
lds
sbb
(bad)
loop
ror
outs
pop
xchg
stos
(bad)
(bad)
(bad)
inc
in
in
xor
aas
or
cmp
mov
ret
hlt
or
pop
pop
std
ins
sar
mov
cwde
jmp
dec
loope
inc
pop
jmp
cs
jecxz
sub
(bad)
(bad)
(bad)
jmp
xchg
fisttp
dec
cmp
add
sub
pop
shl
inc
add
(bad)
jg
data16
fwait
sub
jl
inc
xchg
mov
dec
mov
sar
(bad)
call
push
fcomp
mov
out
ds
jle
push
pusha
enter
sbb
xor
(bad)
(bad)
(bad)
cli
jmp
dec
popa
inc
shr
test
dec
into
and
mov
and
cmps
cmp
mov
loop
jmp
int
fxch
aaa
xchg
pop
jae
loopne
inc
nop
retf
cmps
fnstsw
xor
cmps
jge
(bad)
(bad)
(bad)
out
aam
gs
adc
jmp
movs
sbb
push
out
cmp
inc
call
(bad)
dec
repz
call
xchg
fisub
add
pop
das
pop
fist
cmp
xor
call
sbb
leave
or
imul
sbb
inc
pop
mov
(bad)
(bad)
inc
ja
movs
add
aas
jne
test
or
loop
sub
inc
mov
jmp
(bad)
(bad)
(bad)
call
xchg
cmps
pop
sbb
xchg
paddsw
or
pop
push
jmp
(bad)
cwde
test
xchg
pop
outs
out
shrd
pop
mov
outs
xor
inc
xor
mov
(bad)
jg
call
dec
scas
inc
leave
jnp
leave
mov
inc
out
repz
sti
mov
int
test
inc
cmp
(bad)
(bad)
jmp
inc
shl
mov
or
in
dec
cli
aas
inc
or
jo
xchg
imul
add
(bad)
call
test
sti
pop
adc
pop
retf
aam
ss
sbb
clc
push
mov
(bad)
(bad)
jg
sbb
push
fadd
je
aam
cmc
es
sbb
inc
(bad)
inc
jl
daa
xor
pop
mov
and
or
movs
mov
(bad)
(bad)
(bad)
js
lahf
jb
sahf
mov
mov
fld
ret
xchg
test
mov
(bad)
jmp
pop
mov
(bad)
inc
mov
arpl
jmp
cwde
jmp
fistp
mov
(bad)
inc
jg
movs
adc
sbb
adc
cmp
xchg
jle
inc
pop
dec
add
(bad)
(bad)
(bad)
jmp
in
shr
push
int3
inc
push
or
loop
aas
cmp
out
ja
aam
imul
add
xor
pop
push
pushf
xchg
dec
or
(bad)
(bad)
push
and
mov
stos
pop
xchg
jne
add
dec
xor
jbe
mov
(bad)
(bad)
(bad)
fistp
mov
or
(bad)
hlt
inc
sub
retf
scas
mov
xor
add
(bad)
(bad)
call
jmp
pop
pop
movs
nop
mov
lods
test
mov
and
(bad)
(bad)
(bad)
call
bound
sub
in
mov
push
hlt
xchg
adc
test
in
push
iret
xchg
pop
mov
xlat
mov
and
mov
dec
xchg
jp
mov
sbb
or
repz
(bad)
(bad)
(bad)
jmp
add
push
(bad)
(bad)
and
arpl
adc
adc
push
push
inc
xor
(bad)
(bad)
cmp
pop
leave
push
push
fsubr
xlat
pusha
xchg
repnz
fmul
fistp
mov
clc
pop
sbb
(bad)
(bad)
(bad)
dec
mov
mov
or
aaa
out
enter
push
cmp
jb
adc
(bad)
(bad)
jmp
cmp
mov
and
ss
ins
jmp
(bad)
(bad)
(bad)
call
or
push
pop
push
outs
mov
xor
adc
and
pop
dec
(bad)
(bad)
(bad)
inc
dec
gs
cmp
dec
dec
jo
add
ret
stos
sbb
sbb
mov
mov
jp
nop
add
ret
or
fsub
mov
loopne
jmp
push
popf
jle
xchg
inc
mov
fisub
xchg
sbb
out
repnz
push
(bad)
(bad)
call
fsubr
or
aas
push
xor
je
inc
or
adc
adc
(bad)
(bad)
(bad)
cmp
fwait
fwait
loopne
fild
inc
sar
dec
mov
xor
push
dec
repz
jge
push
in
cmp
fcomip
in
xor
ret
mov
addr16
dec
mov
dec
in
(bad)
(bad)
(bad)
dec
xchg
test
sbb
push
sbb
push
scas
jg
adc
pop
mov
add
inc
es
(bad)
(bad)
dec
or
adc
ror
js
test
jne
add
or
adc
je
cmp
(bad)
push
ins
iret
test
adc
ja
out
lods
lds
fdivr
mov
mov
jmp
test
xchg
push
xchg
push
push
cmovns
inc
jae
pop
add
inc
pushf
nop
xor
(bad)
(bad)
call
pop
enter
or
and
pop
shl
lea
xor
mov
out
call
je
xchg
sti
ret
inc
cdq
jmp
push
mov
xchg
xor
and
sbb
std
stc
jo
fld
and
(bad)
(bad)
(bad)
inc
int
cmp
pop
add
sub
xor
je
mov
js
cdq
adc
stos
sbb
hlt
pushf
dec
xchg
(bad)
(bad)
call
aam
sbb
call
and
icebp
shl
aad
push
jmp
jno
js
pop
cmp
lea
cmp
jge
cmp
and
push
add
adc
shl
pushf
js
je
lods
push
cmps
cmp
inc
into
call
cld
add
push
aam
jp
xor
fsub
lock
mov
je
sub
int3
add
test
pop
fsub
dec
push
mov
ss
push
xor
dec
pop
jbe
xor
push
std
inc
dec
xor
xor
bound
push
ins
dec
jne
push
jb
dec
ss
xor
push
push
in
jmp
jbe
inc
outs
inc
push
push
je
add
xchg
cmp
shr
bound
add
ds
sub
mov
(bad)
adc
hlt
push
adc
sbb
xor
cwde
(bad)
clc
fist
rol
xor
das
fisubr
addr16
aaa
hlt
jle
imul
push
scas
jmp
ss
dec
xlat
jb
push
nop
fdivrp
push
arpl
cmp
add
fs
ds
pcmpeqd
cld
or
push
das
popf
(bad)
les
push
nop
push
inc
sar
jmp
out
gs
dec
data16
push
pop
push
jnp
cs
or
adc
cmp
cmp
(bad)
adc
cmp
cmp
sbb
and
cmp
cmp
sub
xor
sbb
xor
cmp
shl
mov
push
fs
je
jo
inc
and
push
mov
pop
loop
dec
inc
add
sbb
dec
pop
inc
imul
ss
ja
jle
pop
or
push
dec
pop
dec
outs
imul
test
dec
push
push
lock
loopne
dec
add
adc
pop
sub
shr
outs
jae
add
adc
xor
lods
sbb
or
gs
add
xchg
inc
pop
inc
mov
pusha
add
in
dec
and
aas
test
mov
sbb
inc
stos
jns
sbb
and
and
arpl
jo
add
mov
imul
jne
or
sub
and
jb
aad
add
test
addr16
leave
enter
adc
test
stc
dec
push
icebp
push
cmp
push
sbb
jb
outs
ins
lds
jne
lods
jmp
mov
adc
mov
dec
shl
stos
or
call
rol
and
inc
sbb
sub
in
mov
sbb
dec
lds
adc
push
data16
aas
dec
cmp
adc
adc
push
add
mov
xchg
pop
in
adc
fwait
dec
inc
lahf
dec
mov
mov
lods
mov
ds
or
outs
jns
pop
xchg
xchg
push
fidiv
loop
jnp
enter
cdq
aaa
xchg
and
fs
(bad)
jbe
in
push
push
and
pop
inc
gs
jge
sar
or
in
dec
add
or
pop
out
aam
imul
adc
nop
pusha
add
fiadd
stc
push
inc
mov
adc
inc
sbb
push
shl
push
push
ret
or
jne
(bad)
gs
into
les
add
or
xor
xchg
mov
popa
lods
push
imul
jnp
test
sbb
test
adc
fmul
jns
jae
or
and
adc
popf
jo
pop
pop
and
adc
inc
pop
xor
iret
adc
push
adc
or
push
push
push
call
into
(bad)
or
(bad)
(bad)
and
dec
inc
sbb
mov
(bad)
cmp
ds
add
ss
bound
add
inc
inc
pusha
and
pop
aas
mov
or
mov
sbb
ret
xor
pop
or
pop
mov
xor
ja
adc
clc
adc
xchg
call
sbb
loope
pop
or
push
mov
pop
in
dec
scas
call
or
push
pop
dec
xchg
mov
or
cmp
popf
or
pop
inc
or
jb
or
jmp
pop
or
leave
pop
jmp
adc
add
inc
cmp
xor
add
pop
xor
xchg
xchg
and
cwde
mov
sahf
in
or
mov
fimul
cmp
xchg
and
and
in
(bad)
mov
aam
adc
push
jg
lea
sub
xchg
sbb
dec
fwait
movs
loop
add
adc
lods
daa
gs
repz
mul
and
dec
push
cmp
enter
dec
xor
popf
imul
jno
(bad)
xor
dec
outs
sahf
ins
imul
imul
test
mov
xchg
sub
xor
lahf
cmp
inc
icebp
push
push
inc
add
mov
jo
jnp
mul
sub
mov
xchg
pop
shr
in
inc
inc
out
(bad)
and
add
sub
or
push
mov
adc
dec
enter
imul
mov
mov
add
push
mov
add
movs
mov
add
add
xor
push
pop
sub
test
push
adc
adc
dec
xor
cmp
sbb
outs
or
mov
es
inc
inc
or
mov
aam
and
test
(bad)
movs
jb
daa
mov
das
inc
push
adc
mov
cmps
and
arpl
(bad)
mov
out
jmp
hlt
stos
push
push
mov
fadd
or
xor
jae
mov
inc
push
daa
sbb
sti
dec
out
pop
mov
or
test
movs
(bad)
mov
push
lahf
rcr
add
pop
iret
add
jb
repz
push
or
add
add
stos
lea
adc
add
and
inc
pop
add
add
repnz
mov
inc
fcomp
(bad)
ja
ficom
call
dec
cld
mov
xor
xor
nop
xchg
add
sub
cmp
mov
add
or
push
mov
jae
das
in
pop
ins
xor
in
sub
pop
loopne
mov
std
jle
sahf
mov
adc
add
inc
mov
add
add
adc
pop
fstp
sbb
pop
sbb
push
inc
add
call
outs
outs
cwde
or
xor
sbb
mov
in
or
jl
neg
xor
sbb
movs
add
pop
adc
or
push
jge
fild
cmp
je
adc
add
ins
fnclex
and
mov
jmp
or
mov
popa
adc
xor
adc
jmp
add
(bad)
mov
repz
xor
and
and
gs
mov
shr
xor
es
test
push
shr
xor
xor
or
(bad)
and
js
je
ror
or
sbb
inc
inc
dec
jne
addr16
ds
inc
test
cmp
sub
push
sbb
dec
inc
clc
test
clc
fld
dec
xor
loopne
ret
adc
pop
ja
sar
add
add
jnp
jo
mov
gs
outs
and
aad
je
adc
dec
lahf
mov
or
sti
test
dec
inc
jae
jge
pop
sub
and
sub
arpl
outs
or
ins
and
shr
mov
fld
mov
and
cdq
push
pop
jae
pop
jge
call
jle
mov
mov
ins
add
sub
push
add
push
dec
ret
daa
fxch
add
outs
push
sbb
mov
mov
fs
lds
jae
xchg
mov
push
jecxz
or
or
test
pop
fcomp
mov
cmp
ret
sbb
dec
leave
and
fsub
mov
or
and
leave
inc
jno
jle
push
dec
mov
repnz
scas
in
sbb
aam
leave
mov
sub
int3
cmp
push
mov
jns
xor
adc
leave
and
jns
dec
leave
and
mov
lods
adc
scas
mov
leave
rcl
jb
adc
scas
mov
pop
fs
mov
scas
les
adc
scas
lods
adc
hlt
outs
in
fs
mov
movs
sbb
xchg
inc
sbb
jg
adc
lods
popf
cwde
adc
imul
dec
imul
dec
leave
enter
mov
enter
adc
imul
add
or
test
mov
js
jno
adc
and
adc
repnz
add
in
leave
jo
je
cmps
jbe
push
or
mov
and
dec
push
xor
jo
mov
fs
sub
nop
pop
pop
xor
pop
pop
sbb
pop
loopne
pop
daa
dec
jp
js
mov
ret
add
js
ret
push
push
cdq
add
out
(bad)
bound
push
or
pop
cmp
sub
repz
test
sub
mov
call
cmp
inc
adc
or
mov
bound
add
icebp
fmulp
inc
enter
add
cs
mov
je
or
clc
pop
adc
adc
outs
pop
xor
fisttp
add
push
jae
xchg
inc
cmps
fild
imul
fist
arpl
add
or
mov
addr16
push
pop
arpl
popa
pop
dec
fistp
ins
mov
sbb
jb
retf
add
pop
adc
jg
fisubr
jo
add
je
leave
adc
(bad)
xchg
adc
ss
or
arpl
jb
scas
jo
sbb
add
outs
imul
adc
inc
xor
ret
push
popa
inc
in
pandn
outs
iret
jns
arpl
jae
or
add
xlat
sbb
mov
add
jae
push
mov
aas
out
sbb
xor
rol
ret
mov
pop
sbb
add
les
sub
xchg
arpl
dec
cld
cmp
scas
daa
in
fidiv
sub
stc
fstp
fdiv
xchg
int3
mov
add
loopne
fisub
add
and
test
jge
mov
(bad)
mov
sub
out
jb
mov
test
pusha
add
ret
imul
mov
shr
inc
hlt
mov
pop
xchg
ud1
call
jmp
or
shl
shl
(bad)
arpl
or
sti
gs
rcr
scas
in
pop
cmp
add
pop
neg
pop
jb
inc
sub
pop
add
inc
dec
rcl
imul
sub
jl
aaa
lods
jg
mov
call
lea
test
(bad)
fadd
add
mov
ss
loop
mov
test
pusha
and
add
add
enter
jmp
fdivr
xor
or
inc
mov
ja
pop
adc
pop
outs
pop
out
cmc
push
adc
add
cmps
jb
test
sti
and
aaa
xchg
xchg
sub
sub
add
jecxz
push
jmp
fdivp
jmp
mov
nop
push
icebp
xchg
pusha
push
or
leave
sbb
inc
ja
jo
jecxz
lea
pop
xor
jl
mov
in
fidiv
mov
dec
mov
sub
stos
movs
xor
out
cmp
nop
sub
test
in
sbb
test
(bad)
xchg
cmp
das
add
pop
les
mov
in
mov
pop
fcmove
inc
fbstp
sar
inc
push
mov
xor
(bad)
hlt
stos
mov
dec
push
adc
dec
adc
sub
mov
pop
jae
je
adc
pop
(bad)
adc
push
hlt
adc
xchg
mov
mov
jne
sti
cmc
cmp
sub
mov
lea
loopne
sub
jge
sbb
or
and
out
xchg
and
jl
jno
movs
jb
ja
push
sbb
inc
ficom
and
sar
fadd
sbb
and
adc
push
adc
push
daa
inc
fcom
push
int3
dec
mov
mov
xchg
and
pop
xchg
shl
or
adc
adc
adc
test
sti
adc
dec
jo
or
shl
xor
or
dec
pop
sbb
inc
lock
clc
sub
add
enter
or
jb
fmul
sbb
dec
xchg
cmp
dec
lock
add
pusha
mov
mov
(bad)
jmp
cli
sti
bound
adc
xor
(bad)
push
add
sbb
cmp
mov
push
inc
shl
in
inc
mov
push
fcom
cmp
fcom
mov
and
pop
icebp
add
div
and
fcomp
mov
(bad)
mov
cmp
mov
xchg
repz
adc
add
mov
or
push
jmp
mov
psrlw
inc
inc
clc
clc
mov
lds
dec
mul
fstp
lds
daa
xor
xor
pop
enter
xor
or
pop
rol
xor
stc
mov
mov
outs
test
mov
sbb
mov
mov
mov
les
or
xchg
rol
jle
mov
inc
mov
into
sub
push
mov
xor
adc
mov
push
mov
fadd
mov
ret
call
or
add
jb
mov
das
push
jne
fld
mov
popa
add
jbe
or
jp
jae
inc
inc
add
adc
mov
arpl
out
or
or
test
push
daa
(bad)
adc
clc
push
inc
mov
ret
pop
cld
push
push
mov
mov
scas
add
cld
sub
mov
out
or
sar
mov
ror
in
clc
mov
pop
and
mov
add
mov
push
(bad)
test
mov
leave
lock
loopne
add
add
or
mov
sbb
test
icebp
shr
into
mov
mov
xor
mov
dec
dec
cmp
mov
pop
mov
mov
rcl
adc
xor
fdivr
push
sub
cmp
sbb
xor
push
hlt
int
js
push
push
add
ins
rol
jecxz
add
push
test
out
imul
cmp
add
scas
cmp
mov
xchg
and
cmp
push
nop
and
test
xchg
mov
out
nop
add
aaa
and
stos
inc
xchg
push
in
mov
mov
push
and
cmp
stos
or
(bad)
inc
xchg
push
xor
data16
imul
ins
xor
sbb
dec
out
or
cmps
xor
les
sub
pop
lock
fsub
inc
push
enter
xchg
inc
xchg
mov
pusha
mov
rcr
cmp
sbb
push
popa
lods
push
push
xchg
lahf
xchg
mov
mov
and
or
jle
push
aad
sub
add
das
adc
inc
adc
fist
add
push
rol
push
pop
loopne
out
mov
je
jae
or
add
xor
inc
js
je
push
push
jmp
ins
jle
jg
sbb
test
pop
inc
aad
sub
sti
(bad)
push
enter
xchg
xchg
popa
xchg
sbb
xchg
jns
(bad)
sbb
xchg
cmp
jns
xor
pop
xchg
jl
in
sbb
cwde
xchg
mov
mov
adc
pop
jno
or
add
or
pusha
fdivrp
add
pop
push
xor
push
mov
lock
mov
sbb
cwde
jae
test
(bad)
pop
sbb
mov
cmp
xor
xor
mov
push
mov
scas
sub
dec
jns
test
fidiv
xor
dec
pop
dec
push
ror
test
xchg
mov
pusha
inc
cmps
jo
inc
mov
push
xchg
cmp
sbb
cdq
repnz
mov
mov
dec
dec
dec
cdq
push
pop
add
nop
lds
add
jp
fwait
int
popa
jle
inc
ret
adc
and
out
push
xor
push
mov
data16
dec
or
inc
sub
xor
and
or
lods
pushf
xor
cmp
fld
add
call
jle
rcl
daa
xor
inc
adc
jne
inc
lds
es
jnp
enter
dec
int3
mov
ficom
xor
adc
ss
fstp
fwait
rol
dec
ror
shl
inc
inc
loopne
adc
push
imul
mov
push
(bad)
xor
xlat
adc
call
ja
inc
outs
sbb
shr
loope
pop
jmp
test
sbb
cmp
inc
shl
add
lock
xlat
je
out
mov
pop
jo
add
xchg
and
xor
vpcomd
ficom
mov
add
mov
mov
push
outs
mov
inc
movs
retf
popa
mov
or
mov
xchg
dec
(bad)
jmp
arpl
mov
dec
jmp
scas
das
mov
push
data16
add
shr
xor
xor
dec
cs
push
adc
mov
sbb
inc
sub
push
mov
lahf
or
(bad)
xor
cmp
ds
push
push
xor
sub
mov
loopne
inc
das
gs
bound
dec
in
jge
pop
cmps
lahf
pop
aaa
ss
cs
xor
jbe
jmp
loopne
data16
inc
jnp
fwait
inc
add
mov
das
jbe
sub
sar
xor
xor
pusha
mov
cmp
(bad)
imul
xchg
out
cmp
inc
fistp
adc
cmp
push
add
ins
sub
lds
inc
or
(bad)
ficom
push
jae
push
inc
ja
sahf
outs
scas
cmp
push
pusha
xchg
push
lahf
inc
ret
out
xor
addr16
adc
and
push
mov
ja
adc
es
in
add
and
ins
fwait
in
ds
mov
push
fcom
int
push
mov
push
mov
clc
fidivr
sar
enter
lock
into
ds
and
mov
xchg
ins
cmp
push
pop
push
mov
add
in
mov
and
loope
and
movs
repnz
outs
shr
enter
(bad)
inc
mov
imul
imul
add
lods
test
out
outs
and
fstp
push
and
push
gs
mov
inc
cmp
sub
outs
test
jae
or
inc
cmp
sub
mov
jmp
dec
outs
paddq
mov
sbb
dec
popa
jmp
inc
inc
and
(bad)
mov
mov
add
push
mov
xchg
cmc
xor
sbb
jnp
fstp
test
cli
arpl
out
std
and
adc
or
mov
push
js
aas
push
xchg
mov
jecxz
or
xor
push
mov
cdq
pop
cmps
ss
imul
mov
mov
fnsave
adc
je
add
push
sbb
adc
jbe
xor
js
cmp
jge
sub
je
not
addr16
dec
addr16
add
fadd
push
icebp
(bad)
xor
pusha
xchg
adc
add
mov
ret
movs
les
rcr
add
ret
xchg
ins
mov
mov
dec
(bad)
js
cwde
clc
ffreep
push
mov
mov
pop
lahf
jno
rol
inc
jg
cwde
cmp
mov
push
rol
mov
mov
push
and
mov
jl
hlt
push
inc
sahf
mov
mov
shr
shl
jo
add
mov
jecxz
test
mov
outs
sbb
mov
lods
sbb
stos
aaa
fadd
push
cmps
xchg
xchg
add
add
and
outs
add
lock
adc
sbb
adc
mov
inc
mov
cmp
scas
and
div
jnp
cwde
fs
and
mov
clc
sub
and
jo
test
or
mov
test
push
aam
test
sbb
pusha
mov
or
push
xor
enter
or
fbld
jo
pop
push
test
cmp
movs
daa
mov
add
jmp
cmp
mov
in
pop
dec
cmp
and
mul
pandn
out
add
ss
lea
pop
(bad)
test
dec
cld
cmps
or
je
sbb
adc
or
jmp
adc
dec
leave
shl
mov
test
mov
cmps
ins
mov
adc
(bad)
jnp
mov
mov
inc
sub
inc
cld
pop
jae
imul
das
mov
cmps
xchg
push
bound
ja
sbb
add
test
and
leave
add
cwde
mov
(bad)
pop
pop
and
mov
cmp
test
and
or
sbb
pop
cmp
adc
push
rcl
adc
mov
rcr
aaa
in
xor
sub
(bad)
mov
jb
fistp
cld
imul
mov
mov
(bad)
imul
push
push
sahf
mov
ins
lock
push
movs
sbb
sbb
test
adc
into
inc
int3
ret
xor
cli
jmp
js
sbb
ds
dec
lock
out
xchg
xchg
mov
js
rcl
lods
cmp
movd
mov
movs
call
out
push
push
call
fsub
push
cmp
jno
pop
push
sub
mov
fwait
inc
dec
adc
push
call
mov
and
aas
stos
xchg
movntps
adc
arpl
cmp
pop
daa
add
stos
dec
vphaddbd
dec
add
in
cvtps2pi
fwait
dec
inc
xchg
add
imul
jns
add
jne
cmp
dec
cmp
add
push
cmp
inc
add
(bad)
xchg
xor
lea
out
inc
nop
cmp
push
jno
push
pop
adc
sub
lock
fisttp
call
push
dec
dec
adc
out
add
xor
sub
inc
inc
test
xor
lea
or
dec
mov
out
sub
imul
call
outs
sti
push
loopne
into
in
mov
and
jnp
test
data16
xchg
inc
shr
jae
arpl
inc
adc
mov
xor
int3
mov
fistp
push
jns
jbe
retf
or
out
xor
js
pop
lock
mov
add
push
aaa
pop
cmp
in
cmp
mov
adc
adc
and
daa
xchg
sub
je
add
sar
or
popf
cmp
inc
scas
mov
mov
imul
jne
arpl
inc
mov
sub
out
ret
retf
or
push
mov
movs
xor
dec
nop
retf
jl
xchg
sub
push
sbb
in
fs
fs
push
and
xchg
sbb
jo
pop
pusha
and
jbe
and
js
retf
cwde
test
ror
nop
inc
jl
sbb
lds
cmp
test
pop
ret
mov
push
add
idiv
or
fs
cmp
iret
add
popa
fcomip
mov
outs
cs
shl
outs
addr16
fimul
jg
pusha
out
xor
adc
dec
bound
outs
or
das
push
add
loopne
mov
arpl
add
sub
push
pop
push
aaa
fstp
mov
push
mov
addr16
adc
aaa
xlat
push
sub
outs
jnp
push
pop
aaa
outs
push
add
ja
add
adc
cmp
out
inc
scas
or
call
xchg
ret
idiv
pop
pusha
add
in
jl
mov
ss
lahf
inc
mov
in
das
cli
push
sbb
rol
sub
cwde
js
out
ja
inc
dec
imul
jp
cmps
jne
mov
inc
stc
adc
xor
clc
mov
sub
sbb
adc
xor
add
pop
aam
shl
cwde
cmps
inc
popw
add
enter
nop
sbb
scas
cs
shl
(bad)
mov
cli
push
push
add
xlat
push
add
pop
adc
adc
mov
frstor
shr
add
dec
pop
and
and
lods
mov
bound
movs
imul
inc
enter
mov
pop
mov
push
mov
arpl
loopne
ffree
lds
dec
inc
test
add
pop
xor
add
movs
pop
jns
sub
add
shl
aas
push
jo
mov
mov
sbb
pop
or
xor
push
push
mov
add
add
mov
mov
fimul
retf
cmp
in
pushf
mov
inc
jne
adc
push
jbe
inc
adc
mov
cmps
xor
mov
sub
outs
das
(bad)
mov
icebp
adc
and
inc
ins
shl
aaa
aam
mov
add
xor
push
sbb
jb
jb
inc
dec
movd
jns
mov
fiadd
mov
ret
add
add
std
in
call
mov
sub
sbb
or
fs
xor
test
bound
pusha
xchg
mov
aas
in
mov
pop
ins
add
add
lock
add
add
adc
test
or
lea
sbb
shr
daa
add
xor
ret
stc
mov
and
jae
mov
(bad)
test
ror
int3
mov
and
imul
xor
pop
ins
stos
jmp
inc
pop
mov
add
sbb
or
xor
sub
or
mov
push
stos
xchg
fwait
push
jle
dec
add
inc
dec
clc
sub
sub
add
inc
dec
dec
jno
inc
or
mov
cmc
mov
dec
mov
out
mov
add
inc
mov
adc
dec
popa
sbb
lods
xchg
int3
pop
cld
mov
aaa
aaa
add
sbb
lea
push
push
add
or
sbb
add
cmp
je
or
je
sbb
aam
fs
mov
clc
xchg
xor
pop
in
and
pop
sahf
adc
mov
jbe
aad
scas
or
ror
adc
add
mov
fs
ins
add
mov
adc
inc
adc
pop
jl
cli
inc
add
push
call
(bad)
xor
add
addr16
cmp
test
scas
clc
push
or
outs
mov
add
mov
add
mov
xchg
or
jge
dec
lahf
pop
outs
cmp
and
or
mov
in
push
mov
or
lea
add
adc
lea
add
cmp
jo
repnz
adc
mov
adc
bsf
das
add
pop
je
add
mov
(bad)
sub
inc
aas
sub
add
cwde
add
dec
xor
add
scas
lahf
mov
sub
jnp
or
in
adc
dec
clc
mov
xor
dec
out
sub
xor
and
add
data16
dec
outs
add
push
lods
pop
mov
pusha
and
cmp
and
movs
cdq
ret
push
add
adc
rcl
mov
pop
(bad)
mov
stos
push
mov
test
loop
rcl
div
sub
mov
lods
sbb
mov
dec
pop
ret
push
push
inc
mov
in
movs
mov
dec
sub
mov
addr16
nop
loope
push
mov
add
popf
xor
in
xlat
mov
in
sbb
pop
in
or
daa
add
add
push
mov
adc
mov
std
imul
inc
inc
call
lods
pop
aaa
inc
sbb
sub
mov
xor
addr16
jg
jmp
shl
xlat
push
and
mov
inc
outs
test
std
into
mov
je
dec
cmp
add
sub
ror
add
mov
(bad)
sar
jne
ror
xchg
mov
add
push
or
dec
lock
push
push
inc
hlt
repnz
popa
inc
mov
shl
jmp
bound
sub
pop
call
pushf
push
add
dec
adc
and
and
ins
pop
popa
push
out
sub
imul
or
inc
push
rol
fiadd
xor
(bad)
mov
xchg
and
sti
and
and
clc
adc
sbb
(bad)
mov
push
cs
lock
js
cmp
jbe
jns
mov
mov
sbb
push
sbb
(bad)
mov
mov
sbb
push
cmp
dec
fcom
je
leave
mov
add
and
repnz
push
push
add
and
repz
sahf
cmps
add
add
jns
retf
cmp
add
inc
dec
loope
mov
mov
jbe
inc
rcl
dec
add
loope
add
adc
pop
call
scas
sub
mov
cmp
jb
inc
xor
pushf
mov
xchg
dec
mov
mov
fadd
jge
dec
jne
test
or
cli
out
cmp
add
les
xchg
sub
xchg
jne
fiadd
js
cs
add
lods
jae
add
inc
mov
in
dec
sub
mov
sbb
pop
cld
sbb
push
push
addr16
inc
jbe
out
aas
cmps
cmp
jne
mov
push
and
aas
std
enter
adc
je
mov
xchg
sub
out
add
or
adc
loopne
add
ret
inc
adc
hlt
in
not
jp
push
div
out
sti
les
(bad)
cmp
push
aas
mov
xor
lods
aaa
inc
and
or
pop
fadd
inc
adc
add
mov
sahf
push
sbb
jbe
add
add
cs
das
xor
pusha
push
lock
xchg
push
andps
inc
push
movs
das
add
clc
(bad)
xor
add
ret
mov
push
sub
leave
mov
push
add
punpckhbw
div
out
(bad)
rcl
imul
or
outs
add
add
js
or
jb
sbb
(bad)
or
retf
xchg
pop
or
mov
jb
ins
popa
jb
jae
xchg
jmp
lock
adc
imul
mov
outs
call
fcomp
pusha
adc
inc
or
sbb
sub
ins
sub
jne
add
mov
fnstenv
arpl
das
pop
mov
inc
and
mov
add
outs
jne
pop
bound
cs
popa
or
sub
jge
mov
fdivp
inc
push
data16
dec
js
jecxz
scas
mov
fs
adc
pop
jbe
mov
pop
popa
jp
inc
nop
push
pop
push
cmp
xlat
mov
data16
sub
push
ds
outs
div
fnsave
dec
or
test
ss
add
push
lock
outs
das
or
loopne
fild
push
jns
inc
lock
mov
scas
lds
test
call
dec
and
stos
jmp
add
lock
mov
jg
or
mov
adc
lea
pop
xor
rcl
test
ror
in
add
mov
sub
or
or
pop
pop
aam
sbb
leave
arpl
popa
add
setae
jne
or
dec
sar
and
sub
push
sub
loopne
xor
outs
or
xchg
(bad)
test
and
repz
shl
jp
daa
imul
push
cli
push
mov
jmp
pop
push
leave
int
outs
push
sbb
daa
fs
jo
test
stos
mov
pand
add
test
push
outs
sbb
repz
ja
test
jmp
xchg
or
inc
xchg
repnz
test
in
test
mov
in
aaa
test
mov
or
dec
push
dec
inc
jns
leave
(bad)
call
dec
inc
popf
int
sbb
xchg
retf
mov
das
xchg
add
call
cli
push
push
stos
xor
mov
aam
(bad)
ror
fsubr
pop
xor
add
aad
jne
pop
xor
inc
lock
test
iret
fistp
dec
cld
xchg
mov
xor
xchg
pop
jmp
out
jne
xor
xor
std
sub
mov
adc
fild
hlt
stc
mov
test
mov
ret
(bad)
ret
mov
adc
loope
test
out
movs
and
in
inc
gs
jp
xchg
mov
or
fwait
inc
clc
xchg
shr
imul
call
sbb
add
inc
ja
fcmovu
dec
push
add
rcr
cmp
jnp
or
outs
pop
xor
(bad)
cli
inc
in
inc
loopne
sbb
adc
popf
lea
out
cld
outs
adc
aaa
or
popf
shl
dec
mov
mov
jne
jno
add
imul
lock
fcmovne
jae
ss
adc
arpl
or
jge
adc
iret
inc
ds
inc
adc
dec
dec
ror
in
xchg
push
test
and
xchg
xor
cmp
cwde
shr
aam
sub
cmc
or
push
adc
jb
xor
daa
push
cmc
ret
dec
cmp
add
fcmovnbe
sub
add
(bad)
call
xchg
fidiv
add
(bad)
mov
mov
pop
and
in
inc
add
aas
out
dec
call
out
arpl
outs
mov
add
(bad)
rol
ja
aas
adc
adc
outs
and
rcl
xchg
and
clc
ror
push
and
shl
sti
popf
pushf
aam
fcom
mov
js
add
mov
add
cmp
or
add
push
mov
div
test
lods
adc
push
mov
mov
jb
or
mov
(bad)
inc
ins
ret
arpl
jge
fldenv
sbb
inc
mov
mov
(bad)
enter
enter
lods
add
xchg
in
clc
aad
(bad)
mov
cmps
sbb
mov
jne
repz
xor
dec
pop
test
sub
cmp
mov
jmp
sbb
add
inc
ins
mov
dec
inc
js
(bad)
scas
test
or
test
jno
add
pop
(bad)
xlat
std
sub
add
test
xlat
popa
add
push
xchg
add
inc
and
into
out
sar
xor
xchg
xlat
and
xlat
dec
dec
ret
push
cmp
into
lea
dec
lods
adc
in
pop
push
(bad)
fisttp
inc
mov
pusha
sub
sbb
add
test
push
push
call
cmp
mov
jns
shl
jo
mov
pop
inc
or
sub
enter
cmp
rcl
add
adc
jmp
inc
enter
pop
nop
pop
inc
(bad)
loopne
out
dec
mov
dec
out
mov
loopne
fcomp
fadd
iret
inc
ret
mov
fstp
fisub
fdivr
aaa
sub
inc
ins
add
xor
adc
adc
daa
ins
shl
push
stos
into
push
mov
sbb
jg
pop
add
or
jne
aaa
or
jp
and
mov
add
adc
and
mov
dec
stc
xor
sbb
call
mov
clc
xlat
xlat
cmovs
enter
push
cld
add
add
pop
jmp
es
neg
lock
clc
pop
clc
call
sar
adc
sbb
call
add
add
push
or
pop
pop
clc
loopne
push
out
dec
fcomip
out
fisubr
or
add
clc
mov
(bad)
ror
pop
fisttp
sub
xor
mov
test
add
sbb
fisttp
mov
js
or
and
in
(bad)
clc
or
inc
je
ja
test
cmp
mov
cmps
inc
fiadd
push
xchg
ret
outs
out
pop
jle
jg
je
loopne
sahf
out
push
out
int
adc
jb
mov
outs
mov
sub
xchg
xor
mov
enter
stos
loopne
push
mov
add
sub
ret
pop
and
test
mov
sbb
xor
mov
fsubr
push
jne
pop
cld
mov
in
adc
pop
lock
in
popf
std
bswap
mov
push
push
jmp
cmp
jbe
fild
movs
cwde
loopne
loop
mov
leave
mov
cdq
in
dec
inc
dec
cmp
jmp
stos
movs
iret
or
mov
mov
fdivr
loopne
sub
adc
fdivr
push
fist
fadd
sub
mov
mov
das
jnp
inc
dec
push
bound
add
jb
push
outs
data16
push
jb
jne
cdq
sub
ror
mov
sbb
ja
loope
call
cmp
sub
or
std
inc
mov
push
loop
push
repz
arpl
adc
mov
pusha
cld
(bad)
jmp
fsubp
loop
sbb
cmp
sub
push
loope
test
movs
ja
xchg
sahf
dec
xchg
ret
ret
dec
jne
mov
sbb
retf
cs
mov
nop
xchg
dec
hlt
retf
and
mov
sar
fbstp
push
(bad)
mov
rol
xchg
fld
adc
dec
out
adc
dec
scas
adc
push
xor
pop
jmp
iret
push
sub
or
mov
pop
xlat
rol
loop
sar
aad
sbb
jge
ror
lock
repnz
fstp
push
add
and
pop
and
and
call
mov
adc
pop
cs
ret
mov
js
jmp
lock
rol
mov
ret
add
enter
xor
not
imul
mov
rcl
add
pop
or
add
leave
cmp
in
enter
inc
(bad)
and
dec
add
add
mov
cmp
in
aaa
ss
cmp
pop
pop
je
pusha
dec
mov
lods
mov
pop
jmp
mov
test
enter
jo
mov
inc
pushf
test
in
xor
add
(bad)
xchg
sub
cmps
sbb
mov
inc
xchg
inc
push
add
and
mov
or
leave
and
jmp
xor
xor
add
xor
out
test
adc
inc
sti
daa
mov
aaa
xor
and
jae
pop
or
outs
add
cwde
lods
and
inc
dec
loopne
pop
add
jo
(bad)
inc
jnp
xor
xor
adc
ins
xor
add
pop
add
adc
call
rcl
push
into
js
jo
test
cmp
cmp
jb
push
test
test
fnstsw
adc
in
fstp
enter
out
in
mov
adc
fst
in
xchg
xchg
mov
in
in
leave
mov
and
cmp
inc
frstor
lock
adc
adc
scas
or
cwde
lock
push
and
in
mov
pop
adc
cmps
mov
in
fst
in
pmulhuw
enter
in
fdiv
adc
or
test
adc
loopne
mov
cld
and
pusha
and
mov
sbb
mov
push
popf
loopne
dec
and
cld
fld
pusha
out
mov
das
jmp
jne
xchg
sbb
pop
clc
call
pop
and
mov
rol
add
inc
and
test
cmp
shl
rol
sbb
pop
sbb
sbb
mov
movs
shl
ret
sub
test
and
in
mov
mov
sbb
loope
movs
sar
mov
or
call
xchg
add
cmp
inc
push
push
adc
or
xchg
pop
inc
fmul
pop
push
xor
adc
pop
into
mov
inc
jmp
cmps
push
push
loope
mov
std
sbb
sub
add
frstpm(287
nop
imul
lods
(bad)
das
cmp
add
or
add
das
lods
fadd
das
xlat
and
les
mov
sbb
add
mov
hlt
push
out
and
or
xchg
mov
lahf
push
mov
int
in
mov
add
mov
rol
and
clc
mov
nop
nop
popw
ds
pusha
and
push
hlt
add
fdiv
cmp
inc
aaa
movs
push
loop
arpl
add
pop
rcr
clc
dec
(bad)
and
inc
mov
jo
(bad)
sbb
jmp
adc
ja
pop
loopne
add
(bad)
jne
(bad)
adc
xor
push
jno
inc
or
lea
xor
cmp
and
push
aas
(bad)
mov
jne
pop
or
or
inc
sbb
sub
hlt
push
mul
or
outs
addr16
call
popa
sbb
or
fild
or
sub
fild
add
add
cmps
add
ret
(bad)
je
xor
icebp
xchg
or
add
ins
hlt
in
xor
jle
pop
movzx
ret
mov
cmp
ror
add
inc
clc
outs
in
cmp
mov
sub
mov
inc
dec
jne
les
mov
ficom
cmp
in
retf
mov
jmp
and
jle
cmp
xchg
fild
xor
or
inc
add
or
cli
inc
icebp
mov
xbegin
rcl
pop
jl
call
mov
dec
inc
pop
int3
fwait
sub
(bad)
je
push
test
mov
sbb
cmps
cs
frstor
mov
hlt
cmp
sub
not
clc
and
push
test
repnz
outs
add
inc
pop
mov
xchg
clc
lods
in
push
pushf
clc
mov
adc
add
push
ret
stc
fbstp
mov
xchg
mov
mov
add
cmp
into
and
out
mov
jecxz
clc
jno
cli
add
push
pop
adc
xor
mov
adc
cmp
in
cli
jge
cmp
sbb
push
pop
ret
imul
jp
rol
stc
adc
push
daa
mov
add
sar
and
and
loop
jmp
push
je
fld
add
call
aam
dec
fnstsw
mov
and
dec
idiv
pop
sub
inc
fild
xlat
je
das
jmp
pop
loopne
inc
ret
push
jl
push
mov
jp
sub
lahf
sbb
push
rcr
jmp
lea
ins
pusha
mov
add
sar
ror
cmp
test
inc
les
into
or
adc
sub
test
repz
lods
mov
xchg
std
adc
cdq
sub
mov
sub
pop
test
push
or
cmps
jo
shr
outs
(bad)
sub
test
and
(bad)
mov
dec
sub
pushf
mov
dec
rcl
lods
popf
mov
dec
ins
inc
movs
pushf
icebp
(bad)
sub
nop
mov
mov
cmpps
lahf
and
cwde
dec
cwde
mov
dec
jb
xchg
mov
xchg
sbb
nop
mov
and
mov
leave
or
add
ds
movs
adc
adc
and
std
repz
pop
test
pop
or
cs
or
dec
je
mov
(bad)
je
jmp
sub
inc
sbb
add
add
add
jmp
pop
std
adc
push
shl
xchg
or
cmp
adc
or
push
add
movs
or
out
cmp
fmul
js
in
scas
xor
jae
sub
js
call
inc
xchg
jno
mov
jo
mov
or
dec
test
dec
xchg
sbb
jmp
scas
stos
jmp
mov
mov
ins
std
leave
or
aaa
cmp
or
dec
cmp
(bad)
hlt
mov
sbb
xchg
outs
cmps
mov
pop
push
test
enter
pusha
sub
js
jo
imul
repz
es
push
in
pop
jmp
push
push
pop
xor
push
cmp
call
xor
xchg
inc
jle
xchg
add
(bad)
and
inc
dec
dec
inc
pop
les
loopne
adc
ror
jo
dec
setne
jno
in
dec
sbb
jno
jns
setne
pop
push
fcomp
add
cmp
adc
(bad)
adc
jns
add
mov
sub
xchg
xor
in
lock
jmp
lock
xor
pop
ret
mov
dec
push
pop
mov
pop
enter
or
in
sbb
push
add
adc
inc
es
pop
adc
or
mov
test
mov
cmp
jmp
or
movs
add
nop
dec
add
enter
mov
retf
aam
loope
and
cld
(bad)
sbb
dec
adc
xchg
clc
pop
clc
sbb
adc
xchg
sbb
popa
std
jmp
mov
hlt
jb
hlt
(bad)
lods
hlt
(bad)
jns
cmc
cmp
add
in
dec
es
lods
lock
pop
std
inc
nop
and
js
sub
call
inc
adc
enter
in
or
inc
sub
jb
push
dec
int
(bad)
fdivr
add
xchg
adc
adc
(bad)
push
push
mov
jae
(bad)
ffreep
je
int3
dec
int3
pop
rcl
leave
and
inc
xchg
and
test
inc
mov
test
sbb
(bad)
not
or
sbb
out
ds
add
dec
mov
daa
mov
(bad)
call
adc
nop
dec
dec
adc
xchg
mov
(bad)
pop
adc
or
(bad)
lock
and
and
movs
(bad)
mov
leave
mov
leave
pushf
pop
inc
cmp
xchg
rcl
repnz
(bad)
xchg
(bad)
push
adc
xor
mov
in
loopne
cwde
or
mov
test
lea
sbb
pop
sbb
and
je
xchg
retf
mov
push
jo
shl
pop
jb
ins
ins
nop
add
das
mov
push
push
jecxz
and
sbb
adc
mov
pop
adc
fadd
test
pop
sbb
sub
test
sti
rcr
dec
mov
xor
push
cmps
pop
inc
test
adc
das
in
push
dec
dec
xor
xchg
enter
je
shl
and
ror
pop
inc
inc
inc
add
(bad)
cmp
xchg
sbb
cmp
or
or
sbb
cmps
inc
mov
xor
test
sub
std
out
sub
xor
dec
fimul
test
pop
and
sub
jnp
(bad)
or
sbb
mov
push
(bad)
(bad)
mov
ret
sbb
scas
mov
pop
int
add
pusha
fbstp
add
add
push
jne
enter
dec
daa
das
push
add
in
stos
push
push
add
push
inc
xor
mov
xchg
mov
sub
fidivr
add
cmc
mov
and
int3
and
or
adc
pop
pop
ret
(bad)
adc
mov
pop
inc
dec
jo
fwait
push
punpcklwd
das
es
push
pop
retf
inc
or
push
aas
mov
add
sbb
adc
or
xor
loopne
gs
outs
sbb
mov
retf
jnp
adc
add
fimul
and
sub
in
clc
mov
scas
repz
add
or
clc
push
mov
cmp
pop
or
lock
inc
add
out
fwait
xchg
or
dec
push
inc
jg
lock
dec
fwait
hlt
pop
test
mov
stos
adc
(bad)
sub
cdq
push
push
mov
or
cwde
arpl
fidiv
fstp
fwait
int
or
loopne
jecxz
inc
cmp
or
pop
sub
lock
xchg
lock
inc
call
dec
loopne
push
adc
cmc
dec
test
inc
ret
jle
mov
mov
mov
inc
sbb
sbb
fdivr
add
add
mov
ins
sbb
jnp
mov
add
push
imul
and
mov
adc
pop
pop
test
inc
and
pop
sbb
test
mov
dec
sbb
sbb
ja
js
sbb
pop
clc
loopne
dec
loope
scas
xchg
je
ret
jns
xor
and
add
icebp
push
in
test
pop
or
mov
sbb
pop
or
xor
add
push
pop
js
movs
xor
adc
or
rcr
jp
jno
mov
shl
clc
push
mov
pop
lahf
dec
rcl
push
mov
rol
sbb
dec
and
sbb
mov
mov
pusha
xchg
push
or
enter
mov
add
sub
(bad)
rol
jmp
mov
sub
sub
stos
(bad)
cmovb
leave
test
les
loop
adc
add
add
shl
jg
lock
rol
xor
push
hlt
in
push
fcom
mov
mov
daa
pop
mov
push
div
push
sbb
sub
jmp
jmp
test
push
clc
add
je
sub
push
xor
xchg
xchg
pop
inc
adc
js
adc
loopne
add
cld
and
xor
jo
cmp
sub
sbb
in
push
enter
inc
bndstx
and
data16
ja
mov
or
shl
push
sub
pop
push
push
outs
adc
sbb
add
push
sub
das
div
push
shl
push
add
dec
inc
dec
dec
loop
and
push
add
and
call
xchg
movzx
add
rcr
out
sbb
push
not
das
adc
jno
addr16
mov
out
imul
jge
sbb
test
pushf
mov
fild
adc
jl
mov
xlat
fcomp
sbb
fcomp
xor
or
icebp
inc
mov
loopne
sbb
ja
out
outs
add
les
push
sbb
push
fcom
adc
sbb
jge
js
jge
push
xchg
push
sar
jmp
xor
das
add
loope
cmp
inc
lds
push
aam
std
jbe
pop
and
push
or
dec
push
mov
fs
mov
bound
cld
mov
jb
push
test
cmp
aaa
movs
sbb
movs
fdivr
mov
ret
xchg
fld
js
cmp
jmp
push
bound
int
cwde
and
pushf
cmp
clc
or
lods
pop
inc
xchg
adc
or
adc
mov
sbb
add
bt
in
xor
push
cmp
imul
adc
mov
scas
outs
sar
dec
add
xor
sbb
fimul
push
ins
adc
xor
call
ins
cs
adc
daa
test
test
inc
es
fidiv
jecxz
stos
sub
push
add
sbb
test
pop
xor
imul
jbe
cwde
js
pop
add
out
(bad)
cmc
inc
cmp
int
pop
cmc
adc
repnz
and
pop
or
sub
cmp
or
shl
outs
xor
sub
lods
add
cwde
inc
inc
or
call
pop
or
mov
pop
mov
dec
adc
or
mov
dec
inc
and
in
jb
ror
in
(bad)
jmp
sbb
push
test
push
inc
or
call
xlat
cs
ror
jne
movs
js
les
je
xor
loopne
lea
push
jge
ja
lods
sub
pop
jmp
pop
test
and
sub
movs
sbb
sbb
sub
push
lock
jb
mov
mov
loopne
dec
nop
mov
mov
mov
and
enter
aas
jge
sub
mov
pop
in
mov
idiv
je
xor
les
ss
sar
or
test
xor
add
inc
fbstp
pusha
xor
aam
push
jbe
je
cmps
fs
in
test
mov
pusha
jbe
jle
nop
and
and
test
or
ds
dec
sub
sub
add
or
and
adc
cmps
push
cli
push
mov
test
jnp
sbb
sub
shr
test
jmp
ins
je
xor
int3
or
push
pusha
mov
push
jp
add
ret
aaa
es
jnp
xor
and
dec
adc
adc
adc
mov
push
pusha
iret
in
cmp
cmp
add
out
add
xchg
out
add
inc
inc
scas
mov
jnp
mov
jp
push
pop
inc
inc
push
add
pop
test
push
arpl
add
xlat
and
imul
pop
and
mov
jne
jb
sbb
inc
adc
dec
inc
inc
pusha
jb
jae
add
sub
inc
lods
pushf
nop
cmp
inc
inc
or
lods
mov
cld
ss
movs
ficomp
clc
inc
mov
sbb
js
jns
dec
or
cwde
mov
sbb
aaa
adc
adc
cwde
cs
sub
push
mov
cmp
loopne
call
inc
aad
or
xor
xor
aaa
xor
sub
add
and
jo
jecxz
addr16
xor
xchg
jb
sub
in
pushf
lea
sbb
cmp
pop
cmp
mov
push
and
mov
arpl
aas
adc
pop
pop
cdq
or
fdivr
xor
clc
push
or
mov
rol
jns
mov
cmp
les
or
push
mov
jl
movs
jb
and
pushf
add
nop
add
clc
mov
inc
mov
dec
push
stc
shl
inc
les
in
or
lea
bound
and
scas
jl
inc
or
fisttp
cs
push
scas
std
push
mov
in
(bad)
(bad)
mov
mov
mov
lods
pop
dec
ret
and
nop
inc
mov
out
xor
cmp
cmp
sub
in
push
xchg
mov
and
fidivr
fmul
cmps
nop
neg
adc
dec
and
movs
mov
adc
call
neg
sbb
mov
or
and
mov
xor
jne
or
mov
mov
scas
fcomi
mov
cmp
cmp
and
sbb
push
add
push
push
jmp
mov
adc
jbe
and
js
adc
sub
adc
mov
add
(bad)
lea
sub
xchg
mov
shl
xchg
ror
mov
sbb
leave
out
push
xchg
lea
repz
mov
fadd
je
retf
jmp
mov
jge
mov
lea
sub
ds
sub
in
cld
les
sub
aas
xchg
add
mov
shr
leave
xlat
jo
test
aas
inc
aas
outs
sub
hlt
pop
je
(bad)
pushf
xchg
test
je
dec
mov
mov
adc
and
mov
jbe
adc
lea
mov
(bad)
rcl
aas
add
inc
hlt
mov
mov
pop
add
cwde
adc
mov
(bad)
mov
sub
dec
sub
mov
ret
mov
cwde
test
retf
mov
adc
sbb
pop
js
inc
mov
mov
sbb
adc
movs
cmp
test
cmp
push
call
arpl
xchg
js
xor
mov
movs
in
adc
xlat
adc
arpl
in
push
aaa
fs
mov
adc
aas
add
inc
clc
mul
xchg
test
push
lock
and
sub
xor
xchg
gs
mov
mov
mov
popa
xchg
xor
xor
mov
and
popf
lock
or
mov
sub
fild
inc
inc
xor
test
cmc
shl
jno
addr16
sub
sahf
push
scas
xchg
in
icebp
push
xchg
sbb
xchg
mov
inc
(bad)
xchg
mov
call
les
jae
mov
icebp
adc
gs
daa
ins
jg
fsub
xchg
sub
(bad)
sbb
pushf
or
scas
sbb
das
je
cmp
cmp
in
and
xor
adc
sub
inc
add
xchg
xchg
dec
enter
sbb
bound
inc
mov
les
sbb
cmps
test
les
int3
test
clc
and
mov
mov
inc
mov
push
jb
in
or
sub
add
xor
xor
(bad)
xor
and
mov
mov
push
sbb
mov
cmp
cmp
pusha
das
movs
cmp
xchg
mov
mov
xor
xor
stos
inc
and
lds
xchg
sub
aaa
test
xchg
push
push
cmp
dec
nop
mov
cmp
mov
nop
aam
mov
adc
movs
hlt
xchg
mov
xchg
xor
cmp
cmp
cmp
sub
push
mov
in
jo
xchg
add
inc
enter
jl
add
dec
add
sub
jmp
sub
shl
js
inc
pop
dec
ja
jo
push
sub
mov
js
inc
push
xchg
cmp
mov
stos
mov
push
cmp
push
xor
inc
enter
add
ins
fs
and
push
js
adc
das
push
mov
dec
lds
jmp
xchg
pop
mov
adc
pop
in
sbb
daa
or
sbb
mov
cwde
test
dec
enter
ror
cwde
je
cli
add
or
(bad)
pop
mov
jae
retf
(bad)
scas
sbb
push
ins
xor
mov
cmp
and
js
adc
js
or
adc
mov
and
pop
add
repz
lods
pop
movs
adc
iret
pusha
cld
mov
stos
xchg
push
sbb
push
mov
es
xchg
add
in
jbe
and
fs
mov
fstp
sub
ret
cmps
push
popa
and
pop
mov
inc
in
inc
adc
mov
cmp
cmps
nop
push
mov
ja
fs
out
lea
push
push
jnp
fsubr
pop
nop
mov
jo
add
push
ret
sub
xchg
call
outs
mov
call
dec
arpl
push
push
jmp
in
mov
pop
xor
dec
push
mov
mov
fst
mov
outs
stos
xchg
cmp
movs
xor
add
ins
jne
lahf
das
xchg
push
ja
add
xor
mov
arpl
fs
ins
inc
dec
cmp
test
add
add
mov
or
out
jo
add
and
jg
(bad)
fcomp
and
fild
je
xchg
adc
loope
adc
adc
fs
or
out
mov
jo
popa
or
fisttp
mov
nop
pop
outs
xlat
test
ret
daa
imul
arpl
mov
xchg
jnp
push
or
push
(bad)
fidiv
icebp
rcl
pop
inc
or
add
enter
push
mov
aas
adc
add
jmp
xor
imul
popa
mov
jbe
or
iret
pop
add
xchg
xor
fimul
xor
je
add
and
push
add
adc
mov
aaa
(bad)
out
add
push
addr16
retf
add
and
add
test
pop
pusha
outs
fist
push
inc
pop
xchg
mov
fmul
mov
pop
adc
cmovs
bound
daa
jae
nop
mov
add
adc
aad
mov
nop
sbb
fwait
push
(bad)
aaa
inc
jne
outs
ds
and
push
aas
cmp
outs
and
xor
xor
lea
scas
push
mov
push
push
mov
add
jmp
jecxz
or
push
cmps
ins
push
adc
mov
push
and
stos
ja
out
mov
adc
sub
add
dec
add
lea
push
je
les
mov
add
mov
(bad)
xchg
inc
sbb
and
jo
dec
mov
mov
pop
add
xor
add
mov
adc
or
std
cmc
test
je
push
call
pop
dec
pop
push
hlt
fcmovu
std
add
test
adc
lea
mov
fcomp
lea
or
shl
add
jmp
sbb
cmps
xor
inc
ins
inc
inc
jl
es
js
dec
push
add
sbb
xchg
retf
clc
push
scas
retf
std
add
into
mov
mov
add
xor
mov
sti
hlt
popa
and
js
dec
xchg
sub
test
mov
xor
mov
cld
out
and
ins
xor
or
lahf
stos
(bad)
sti
jg
ret
dec
mov
cmp
jne
push
adc
lods
add
sbb
xchg
mov
sbb
loopne
pop
sub
dec
mov
loope
push
(bad)
leave
outs
add
mov
call
and
add
and
mov
add
sbb
push
adc
les
repnz
out
sbb
and
push
sahf
cmps
or
sub
xor
sahf
retf
cmp
inc
inc
push
dec
dec
jg
aas
dec
(bad)
push
add
jecxz
fmul
popa
push
lock
outs
pop
xor
icebp
dec
push
cmp
movs
xor
or
dec
loope
iret
mov
add
sbb
push
jo
in
ja
fsub
mul
mov
push
js
fisttp
add
mov
push
adc
inc
push
rol
repnz
jbe
ret
enter
jmp
mov
or
adc
mov
pop
pop
xchg
dec
add
ror
loope
stc
dec
in
push
inc
sbb
sbb
or
jns
test
push
push
lahf
ins
in
test
js
jbe
shr
add
loopne
add
sub
mov
clc
xor
mov
add
inc
mov
xlat
cmc
adc
shr
popa
add
fwait
iret
and
adc
fwait
add
sbb
enter
xor
push
dec
adc
(bad)
retf
sub
sub
add
in
mov
add
cli
or
popa
clc
sar
and
or
sbb
add
jo
dec
xchg
add
in
fsubr
jecxz
cli
push
push
jnp
mov
jecxz
xor
stc
dec
cmp
rol
jg
dec
sub
in
push
add
xchg
lea
mov
push
push
scas
sub
adc
(bad)
stc
jbe
cmp
and
push
and
lds
or
jecxz
push
or
imul
inc
xchg
dec
push
cmp
pusha
add
cdq
jne
jbe
out
mov
sbb
dec
add
adc
add
or
dec
or
jge
test
pop
ins
push
push
popf
test
loopne
retf
ror
push
push
push
mov
call
xlat
cmps
inc
sbb
dec
add
sbb
mov
dec
je
add
mov
or
out
pop
fst
leave
jg
and
hlt
inc
es
(bad)
out
and
jl
jae
xor
loopne
pop
adc
add
xor
dec
push
je
inc
aam
call
fcomp
std
cmp
jl
add
pusha
call
pushf
sbb
int3
push
inc
mov
call
jmp
pop
fimul
(bad)
lods
(bad)
mov
xchg
pop
sti
xchg
enter
sti
or
pop
test
push
and
jb
lods
fsub
add
nop
rol
dec
in
add
xor
mov
mov
leave
pusha
nop
pop
in
or
xchg
xchg
shl
push
and
mov
and
inc
sub
pop
mov
dec
push
nop
add
test
enter
lods
and
and
add
test
pop
enter
sbb
pop
push
movs
or
pop
enter
nop
add
mov
sbb
or
and
gs
cwde
xor
push
push
mov
adc
ja
sbb
movs
(bad)
lahf
pop
push
dec
jecxz
shr
inc
add
shr
push
or
ss
sti
mov
and
pop
inc
xor
bound
ss
adc
out
fisttp
push
add
mov
push
popa
mov
js
inc
dec
and
fisub
ret
mov
jo
outs
call
rol
sti
cmps
mul
or
jg
cmp
aas
adc
shl
add
rcl
xor
or
pop
mov
adc
scas
pop
inc
adc
outs
mov
push
add
scas
or
inc
mov
aam
adc
scas
maxps
jo
retf
mov
jnp
add
ins
push
ret
add
ret
aas
scas
xchg
sbb
ins
mov
add
jo
ja
adc
push
imul
push
xchg
sti
fs
and
je
imul
or
add
mov
aaa
je
(bad)
jae
push
mov
dec
sub
inc
ja
dec
lds
scas
push
pop
xchg
push
jnp
cmp
xor
xchg
cmp
mov
mov
icebp
mov
pop
je
xor
sbb
pop
icebp
(bad)
inc
xchg
div
in
add
pop
je
add
sti
fisubr
pop
sbb
push
loop
cmp
pop
push
add
(bad)
icebp
add
call
inc
mov
test
dec
outs
into
inc
and
outs
add
pushf
adc
hlt
test
inc
shl
xor
cmp
(bad)
mov
es
fs
sub
add
imul
leave
fbld
fcom
add
loope
sbb
pop
pop
cmp
mov
or
aam
and
ins
imul
and
and
imul
push
gs
cmp
mov
fsub
jne
pop
(bad)
sbb
ret
mov
add
jo
sbb
jp
pushf
adc
xchg
push
adc
push
ret
sbb
push
inc
sub
sub
mov
and
add
add
gs
xchg
add
call
imul
das
inc
mov
out
wbinvd
sbb
pop
xchg
mov
cmp
test
inc
int3
xlat
jl
loop
leave
aam
xor
pop
add
pop
mov
xor
or
mov
call
dec
imul
arpl
and
cmp
add
es
rcl
push
xor
push
xchg
mov
add
sub
cmp
mov
pop
test
sti
dec
sbb
call
loope
inc
in
inc
mov
out
popa
mov
inc
push
mov
es
mov
push
in
sbb
shl
bound
push
sbb
jmp
mov
or
pop
or
adc
loope
or
adc
sub
cmp
mov
pop
adc
shl
lea
ins
outs
(bad)
cmps
sahf
ud1
enter
dec
clc
mov
sub
xor
inc
pop
sub
sbb
xchg
and
dec
or
adc
and
je
mov
aas
mov
gs
sbb
xchg
movs
shl
xor
mov
icebp
or
out
and
cmp
push
pop
xor
inc
mov
mov
call
mov
adc
jl
and
sub
push
mov
sbb
popa
mov
dec
xchg
icebp
sbb
inc
cwde
or
adc
shr
mov
cdq
ja
rcl
jmp
cld
dec
add
inc
push
inc
push
adc
adc
loopne
sbb
xchg
cmc
lock
inc
sbb
jbe
loope
sub
dec
fmul
test
and
(bad)
(bad)
lea
dec
and
addr16
arpl
rol
ror
inc
xchg
and
sbb
daa
movs
push
movs
repz
jge
pop
stos
jg
fnsave
xlat
clc
arpl
mov
and
dec
lods
nop
mov
les
outs
or
add
icebp
sbb
pop
fs
jns
dec
jns
push
or
jp
jp
inc
and
sub
mov
lods
pop
fbstp
sbb
adc
add
xor
fdivr
pusha
cdq
and
addr16
pop
fcom
xchg
sbb
outs
sub
xor
lods
out
cli
bound
add
sbb
imul
sbb
jmp
push
addr16
retf
outs
push
inc
add
push
pop
in
cmps
push
out
or
cwde
xchg
or
or
loopne
clc
addr16
pop
push
mov
ret
dec
nop
jno
rcr
jns
outs
in
daa
imul
xor
push
push
lock
inc
arpl
lock
lock
in
lods
not
jmp
or
(bad)
(bad)
push
fistp
xchg
je
arpl
push
sub
mov
leave
add
mov
xchg
enter
add
pop
das
add
xchg
sbb
es
lahf
loop
sub
or
sub
imul
add
and
cmovo
mov
pop
and
rdmsr
adc
sbb
or
push
icebp
xor
xor
data16
add
arpl
aaa
lock
pop
jnp
shl
(bad)
lock
cs
test
test
sti
(bad)
add
push
in
push
push
push
pop
push
movs
push
je
push
(bad)
outs
or
inc
add
jle
enter
add
add
pop
and
scas
aaa
pop
jne
and
mov
xor
mov
jmp
or
pusha
mov
mov
(bad)
shl
loopne
je
jle
cmp
push
(bad)
push
(bad)
and
loop
shr
imul
sbb
xchg
pop
lds
and
pop
or
inc
sahf
leave
sub
dec
or
pop
ins
loopne
loop
lock
lock
dec
sub
and
rcr
aam
mov
add
mov
fcom
nop
mov
cs
ss
out
mov
cdq
fcom
jo
cmp
xchg
in
mov
and
or
or
call
mov
adc
ja
or
outs
cmp
ins
pop
sbb
pop
mov
in
or
push
mov
inc
adc
int3
add
mov
mov
and
xor
iret
ss
push
xlat
xor
test
test
dec
pop
shr
wrmsr
fdiv
jbe
adc
aaa
mov
bound
push
push
adc
inc
sbb
(bad)
and
or
test
add
fcmovnb
loopne
movs
sub
loope
push
dec
repnz
or
mov
xor
mov
cmp
or
sbb
jo
or
ins
outs
or
je
es
in
rol
inc
fs
pop
pop
inc
fimul
clc
pop
mov
jmp
pop
adc
aad
xchg
adc
xchg
ss
call
aam
and
add
out
jmp
enter
dec
in
(bad)
loop
scas
(bad)
movs
icebp
mov
add
loopne
sbb
push
mov
icebp
jo
rol
pop
sbb
mov
sub
push
inc
xor
das
movs
mov
mov
mov
xchg
dec
(bad)
(bad)
out
push
les
push
mov
adc
jp
rol
adc
data16
cwde
jl
movs
push
std
inc
ficomp
mov
inc
enter
push
das
mov
ss
lea
jo
sar
dec
sub
hlt
push
fadd
jno
loop
(bad)
fmul
push
(bad)
sub
test
jmp
nop
ds
add
loopne
in
imul
jo
fwait
mov
xor
je
in
push
inc
inc
cmp
jno
jne
push
dec
pop
in
jmp
dec
pop
in
and
gs
sub
add
mov
daa
add
std
frstor
xor
push
je
push
jae
cli
add
or
test
sub
and
enter
retf
lock
mov
jbe
push
lea
cmp
mov
retf
(bad)
adc
mov
fsub
jne
mov
mov
add
cmp
ror
mov
jmp
inc
in
clc
sub
mov
ds
cwde
and
and
mov
pop
sbb
adc
sbb
mov
rcr
adc
je
sub
jb
rcr
mov
adc
jl
popa
sub
add
fisub
sbb
adc
fisttp
out
adc
call
sbb
mov
bt
adc
or
xchg
sbb
out
and
or
pop
stos
movs
shl
dec
sub
jae
add
and
dec
and
inc
xchg
xchg
cmp
call
mov
in
adc
xchg
add
mov
int3
push
mov
hlt
imul
dec
sub
inc
test
cmp
pop
ret
pop
mov
addr16
mov
lock
lea
mov
enter
pusha
adc
mov
call
inc
dec
mov
inc
cs
pushf
lock
sbb
lock
xchg
push
repnz
(bad)
rol
add
(bad)
daa
jnp
push
cmp
popa
lock
fsub
fdiv
mov
mov
ror
xchg
nop
dec
cs
mov
retf
pop
out
mov
enter
sbb
int3
(bad)
movs
adc
aad
xchg
test
sub
cwde
inc
fst
shl
popa
les
ss
dec
add
mov
mov
adc
push
sbb
mov
inc
mov
movs
sbb
xor
mov
stos
or
rol
adc
xchg
in
clc
xor
mov
pop
pop
movs
adc
jo
push
lods
jae
outs
pop
sub
mov
movs
ror
jno
shl
xor
inc
adc
in
nop
xchg
and
rcl
push
lahf
jns
test
hlt
mov
mov
push
or
push
fld
and
pop
aad
mov
popa
pop
mov
fadd
pop
push
aad
xchg
popa
(bad)
je
js
mov
fstp
and
jo
imul
ret
aam
cmp
mov
outs
push
dec
push
iret
rol
push
xchg
outs
mov
mov
mov
mov
xchg
add
xchg
jb
sub
or
test
push
adc
fsubr
push
stos
lods
or
cmp
lea
loopne
add
pop
push
rol
lea
or
or
aas
test
push
push
adc
mov
mov
add
or
call
or
fwait
dec
and
iret
sub
rcr
(bad)
loopne
and
cmp
push
int3
fbstp
mov
add
cmp
add
or
ret
ins
dec
lea
and
int3
(bad)
iret
(bad)
scas
ret
nop
retf
jmp
add
into
jnp
mov
sub
inc
jo
test
mov
jo
fdivr
xor
add
adc
(bad)
outs
js
mov
js
xchg
adc
or
or
lock
or
push
enter
add
mov
mov
jns
nop
pop
add
fmul
mov
and
retf
jo
adc
clc
std
imul
sbb
push
std
std
dec
mov
in
jne
cwde
jl
sub
sbb
add
mov
mov
jo
clc
or
jbe
sar
jno
and
(bad)
xor
arpl
pop
hlt
and
fwait
movs
sbb
pop
scas
(bad)
jmp
(bad)
mov
mov
test
dec
ja
adc
sbb
pop
add
push
or
(bad)
sbb
std
cmp
xor
cmp
add
xchg
mov
js
and
mov
pop
inc
leave
movs
push
adc
add
or
or
sbb
or
and
adc
jmp
sbb
adc
sti
(bad)
inc
sbb
push
icebp
movs
push
add
rol
adc
jmp
jo
aaa
int3
push
push
sbb
ret
adc
movs
mov
add
xor
daa
aas
js
and
sbb
movzx
push
xchg
das
add
sub
mov
ret
push
fild
mov
or
adc
jmp
adc
adc
pop
dec
push
cmp
pop
pop
jo
and
pop
lock
bound
jno
cli
push
jb
sti
push
pop
mov
inc
das
adc
and
(bad)
(bad)
fbld
rol
rol
pop
repz
add
sbb
pusha
adc
pop
fadd
add
scas
bound
lahf
and
push
inc
pop
outs
add
mov
sub
push
add
out
sbb
inc
inc
and
cmp
xchg
ss
add
push
or
imul
xor
xor
aad
ror
sbb
test
mov
adc
out
push
pop
add
adc
fidiv
push
inc
fbld
add
imul
enter
inc
push
(bad)
jo
pop
xor
and
sbb
stos
cwde
sub
inc
pusha
push
and
daa
out
dec
mov
and
test
xchg
rcr
sub
jg
test
mov
add
iret
(bad)
adc
jg
sbb
or
lds
(bad)
in
je
daa
test
xchg
in
or
sbb
rol
nop
repz
and
in
ja
pop
mov
into
pop
test
and
push
sub
mov
lock
xor
jae
je
mov
xchg
mov
ja
add
aaa
xor
daa
add
cmp
outs
call
out
(bad)
jo
cmp
call
clc
sbb
mov
pop
sahf
sub
adc
push
mov
lea
loop
movs
push
mov
sub
imul
add
(bad)
mov
add
mov
add
ror
in
cmp
sub
xchg
nop
sbb
fcom
cld
popf
dec
add
mov
rcl
and
aam
adc
ret
mov
(bad)
fiadd
sbb
push
cmps
jbe
inc
xor
or
es
movs
fnstenv
cmp
mov
push
pop
iret
cmp
or
jno
add
in
push
cmp
jne
int
push
mov
pusha
pop
nop
dec
mov
jo
aas
ins
mov
add
mov
and
mov
in
add
clc
call
pop
mov
cmp
xor
jne
cdq
fiadd
outs
mov
outs
nop
mov
sbb
js
test
push
adc
nop
rcl
shl
lock
les
xchg
jl
call
scas
or
sub
adc
adc
sub
popa
xor
and
pop
pop
lds
and
test
mov
and
inc
rcr
aad
inc
xchg
movs
cld
cld
cmp
pop
aam
mov
xchg
je
stos
daa
add
xchg
leave
aaa
jnp
sub
scas
or
sbb
jmp
lods
mov
sub
(bad)
in
push
push
sbb
call
add
rcl
lea
push
or
add
xor
daa
mov
lahf
and
and
mov
shr
or
sbb
outs
mov
div
or
mov
dec
jbe
fwait
imul
or
sahf
iret
mov
xor
ins
mov
and
and
mov
xor
sbb
mov
movs
inc
push
xchg
loopne
rcl
inc
xchg
or
xor
pop
xchg
mov
push
int3
ret
jne
or
xchg
lods
loop
pop
addr16
mov
jmp
sub
sub
in
cmp
xor
cwde
adc
xchg
call
mov
mov
adc
outs
arpl
sbb
push
dec
retf
xchg
call
add
and
mov
mov
add
sbb
jo
vmread
mov
das
nop
int3
idiv
jb
mov
js
ins
adc
popa
xchg
test
mov
ja
adc
arpl
sbb
or
fdiv
mov
mov
pop
push
add
shr
rcr
xor
enter
and
mov
test
mov
jle
mov
ror
xchg
mov
push
iret
iret
repz
and
push
cmp
repz
imul
stc
cmp
repz
popf
cmps
mov
xchg
sahf
neg
push
jecxz
in
not
jnp
or
jg
fisub
add
xor
or
add
aaa
sbb
maxps
add
xchg
jmp
outs
fdiv
jecxz
ds
inc
add
pop
xchg
push
mov
(bad)
cld
sbb
xchg
push
adc
push
adc
jo
lahf
fsubr
add
jmp
add
mov
add
sti
sub
push
lods
mov
sbb
push
popf
sbb
xchg
adc
bound
adc
mov
inc
popa
sbb
fcom
adc
jne
fldenv
rcl
daa
jecxz
rol
jnp
inc
adc
adc
xor
outs
dec
sbb
cwde
rcl
or
xchg
or
push
daa
or
daa
adc
mov
jne
mov
jg
es
pushf
int
cmp
mov
ja
xlat
inc
adc
dec
pop
mov
or
mov
dec
aam
je
lahf
lock
xor
or
pop
dec
fwait
cs
jae
cmp
jmp
add
add
add
add
add
add
fld
fidivr
mov
inc
dec
xchg
push
xchg
je
(bad)
pop
jae
xchg
pop
mov
xchg
arpl
sub
inc
push
sbb
push
xlat
ret
popa
mov
mov
(bad)
jb
je
mov
add
add
popa
out
dec
popf
xchg
push
pop
add
lock
xchg
arpl
ins
or
push
popa
and
mov
push
(bad)
(bad)
movs
adc
outs
or
pop
mov
test
adc
xchg
in
xor
inc
or
or
sar
nop
jg
aas
or
pop
stc
push
dec
fwait
adc
adc
push
adc
outs
add
dec
jmp
mov
(bad)
xchg
enter
add
test
jb
out
rol
jmp
fwait
pop
stos
mov
out
int
loope
add
adc
fisttp
pop
or
test
jnp
rcl
lods
pushf
cmp
je
es
popf
jle
mov
rcr
mov
sbb
in
imul
test
fcmovbe
inc
aam
sub
push
mov
pusha
or
adc
adc
or
js
test
setl
or
loopne
and
add
xchg
outs
xor
dec
ins
xchg
jmp
add
daa
pusha
push
add
jae
inc
imul
inc
popa
and
jb
fild
dec
out
retf
enter
dec
dec
adc
fiadd
cwde
das
sbb
xchg
jmp
scas
or
pop
mov
in
nop
inc
js
inc
test
aaa
xchg
stc
sbb
pushf
push
adc
mov
xchg
cmp
sbb
adc
push
dec
inc
or
dec
movs
fistp
fs
enter
or
xchg
mov
cmp
cmp
xor
paddw
cmp
inc
cld
lock
xor
pop
or
aam
sub
xchg
cmp
mov
push
iret
repz
mov
adc
pop
sub
cmp
repz
pop
mov
and
ror
lods
cs
inc
pusha
mov
fsubrp
cmc
mov
or
mov
mov
dec
pushf
or
jno
adc
mov
leave
(bad)
or
mov
pop
or
es
mov
mov
jge
mov
mov
pop
lds
test
pop
push
xor
add
cmp
dec
imul
scas
add
add
arpl
or
fstp
into
xchg
inc
pop
xchg
inc
or
add
outs
add
mov
jne
and
mov
adc
test
fimul
sub
dec
stos
cwde
test
(bad)
ror
arpl
push
dec
sbb
jg
mov
jo
push
cld
jbe
cmp
(bad)
data16
mov
or
jmp
or
jl
out
outs
or
enter
les
sar
mov
adc
idiv
clc
lahf
inc
inc
add
add
add
add
adc
add
idiv
add
sbb
cld
push
add
add
add
pop
cmp
pop
daa
jne
mov
jo
dec
add
mov
lahf
inc
sbb
sar
jne
xchg
mov
aas
pop
xor
jmp
scas
jge
dec
sub
popa
enter
or
push
pop
cwde
fsub
ret
mov
add
and
test
sub
lea
and
xor
enter
aas
fs
test
ss
add
in
rol
and
dec
adc
or
pusha
movs
test
jb
mov
nop
mov
sub
cdq
adc
aas
out
add
inc
mov
or
in
call
mov
sub
push
add
xchg
daa
jnp
cwde
push
ret
(bad)
gs
mov
cmp
ret
shl
jne
outs
pop
div
adc
nop
test
sbb
mov
div
nop
push
and
pop
mov
rep
push
adc
cmps
sbb
and
push
add
sbb
dec
push
push
or
sbb
addr16
in
sbb
in
in
nop
inc
push
in
in
and
push
xchg
loopne
sahf
xor
mov
xchg
jbe
pushf
cmp
(bad)
in
fdiv
push
ja
out
sbb
dec
lahf
mov
mov
loope
(bad)
ja
mov
ror
dec
repz
push
pop
addr16
jae
repz
test
push
dec
mov
push
lods
push
mov
retf
aad
repz
fucomip
repz
pop
push
adc
cmp
and
daa
lods
cmps
pop
test
repz
pop
pushf
jg
test
xchg
add
push
pusha
test
fld
pop
pop
test
cli
dec
mov
es
je
add
arpl
jp
sbb
dec
mov
jae
mov
data16
xlat
enter
jne
je
ins
inc
je
dec
outs
jne
cmp
psadbw
(bad)
push
push
mov
jb
xor
adc
outs
jb
gs
adc
and
in
adc
pop
xor
push
gs
adc
adc
sub
inc
push
push
add
(bad)
jmp
cmp
xor
xlat
and
add
stos
and
pop
pop
add
iret
pop
mov
push
(bad)
or
pop
iret
jge
add
add
adc
repnz
or
idiv
ficomp
inc
and
lods
call
push
sub
ret
in
or
xor
cmp
call
dec
push
push
sbb
inc
jnp
adc
cmp
jne
xchg
(bad)
and
add
xor
dec
add
add
add
ret
sbb
test
mov
add
add
rcl
adc
lea
pop
outs
xchg
outs
lea
xor
les
aam
sbb
inc
sbb
adc
test
xchg
mov
mov
les
lods
std
sbb
inc
or
add
inc
mov
adc
cmp
imul
jne
sbb
adc
add
loopne
ins
and
pop
push
sub
jnp
jp
loopne
dec
or
(bad)
repnz
jmp
xor
outs
mov
lods
mov
test
int3
es
mov
nop
lods
lds
aaa
lea
pop
mov
leave
dec
jbe
lods
sbb
bound
test
xor
cmc
jp
sbb
mov
or
pop
test
push
retf
imul
inc
mov
mov
scas
aas
push
adc
push
and
add
inc
xor
jb
cs
dec
movs
jo
inc
fistp
and
and
cmc
jno
adc
push
or
mov
push
push
adc
jmp
jmp
dec
fcom
pop
sbb
sbb
push
add
jecxz
shl
pop
stos
shl
xor
push
fdivr
fidiv
cmc
inc
(bad)
push
in
(bad)
mov
loopne
or
les
pop
pop
cwde
inc
fs
jbe
pop
cmp
push
mov
int3
mov
mov
mov
push
or
push
pop
or
mov
or
pop
pop
imul
ins
imul
add
pushf
and
mov
cmp
push
std
(bad)
sub
push
js
push
(bad)
fstenv
dec
push
push
test
push
dec
cmp
push
scas
push
cld
cs
scas
ins
fcmovnb
push
es
push
sub
push
ror
cmps
mov
ins
outs
sti
(bad)
pop
hlt
jle
cdq
push
loopne
push
cwde
push
enter
ins
out
push
and
pop
push
push
je
jnp
mov
sub
or
push
cmp
inc
pop
push
loop
cdq
ins
xchg
mov
push
adc
imul
fadd
sbb
test
in
ins
push
rol
push
xchg
push
push
lods
out
xor
or
or
push
test
addr16
test
inc
push
js
and
loope
shl
cmps
add
mov
lds
or
add
mov
or
mov
dec
outs
addr16
mov
push
or
fs
and
inc
jb
gs
adc
jo
mov
popa
mov
xchg
(bad)
adc
outs
gs
pop
jbe
add
out
or
ins
popa
mov
and
les
dec
popa
bound
push
add
push
add
mov
add
add
add
cmp
rcl
shr
sar
add
add
imul
test
push
push
imul
shl
or
jae
xchg
inc
jns
gs
fmul
add
xor
xchg
test
jae
call
jo
add
pop
mov
mov
mov
sub
inc
pusha
sub
mov
aas
and
and
mov
xor
inc
punpckhbw
jmp
cmps
mov
fst
jne
mov
dec
pop
pop
fsubr
stos
cmps
not
pop
push
popa
jns
prefetch
inc
push
imul
sub
mov
sub
sahf
loopne
div
movs
or
leave
adc
xor
or
gs
add
in
adc
jo
add
xor
inc
sbb
cld
xor
push
popa
cmp
rcl
sahf
add
mov
sbb
xor
jns
add
mov
adc
bnd
adc
data16
add
js
sbb
addr16
jo
outs
(bad)
hlt
dec
or
adc
sar
mov
sub
push
ror
inc
xchg
cmps
jbe
mov
mov
xchg
daa
mov
aam
movzx
mov
enter
mov
in
leave
mov
adc
in
jmp
jb
sub
jmp
push
add
add
ret
nop
jecxz
push
pop
lods
inc
(bad)
pusha
push
jle
dec
int
movs
inc
push
and
cmp
dec
push
daa
inc
or
mov
pop
cmp
jne
outs
add
push
push
mov
stos
push
push
mov
test
adc
inc
movs
push
push
rcl
add
push
sbb
mov
jne
pop
outs
push
add
add
fsub
inc
sar
lea
outs
ja
sbb
xchg
and
mov
mov
xchg
loop
inc
leave
xchg
adc
inc
sbb
or
add
add
adc
rol
push
add
lea
sbb
jnp
jns
or
retf
adc
and
cmp
jnp
mov
and
mov
xor
mov
test
push
pop
jmp
pop
or
xor
rol
adc
sub
xchg
sbb
or
stos
push
add
cdq
and
inc
rcr
cdq
sahf
movs
lahf
mov
add
adc
pop
xchg
mov
imul
or
cli
sbb
pop
jp
adc
dec
sahf
xchg
adc
xchg
inc
pop
push
das
jae
fwait
xor
jnp
xor
push
add
inc
inc
and
add
fs
shr
outs
jae
je
out
sbb
ds
push
adc
ja
test
ja
cs
xchg
mov
add
add
add
xchg
sbb
xor
ss
add
cmp
clc
adc
arpl
push
cmp
add
sbb
push
inc
add
or
idiv
stos
cmps
cmp
add
lahf
mov
cmp
cmp
inc
inc
add
pop
mov
cmp
das
inc
or
fimul
mov
dec
mov
dec
sbb
add
aaa
and
jnp
pop
mov
adc
mov
jbe
xchg
cmp
xchg
es
and
add
push
inc
add
ja
sbb
cs
out
inc
mov
pop
and
repz
dec
aas
fisttp
add
mov
fist
call
dec
push
test
lock
jbe
inc
and
sbb
dec
pop
xchg
sbb
scas
cwde
sub
cmp
and
sahf
sub
bswap
leave
leave
leave
sub
leave
das
adc
adc
adc
jne
add
mov
lock
enter
mov
push
push
imul
or
mov
sahf
sub
ja
add
pusha
jmp
inc
mov
mov
hlt
in
in
sbb
popa
xchg
dec
adc
lock
adc
test
adc
sbb
jl
jge
les
nop
add
mov
clc
inc
clc
pop
(bad)
push
mov
xchg
mov
jecxz
movaps
pop
sbb
test
imul
or
adc
rol
jo
inc
dec
add
inc
shl
xchg
inc
notrack
cmp
push
popa
jb
push
outs
fs
and
push
jg
popf
and
adc
add
sbb
pop
test
mov
push
gs
adc
dec
jae
imul
fwait
adc
and
movs
dec
cmp
ins
add
retf
xchg
xor
dec
jne
arpl
dec
test
add
xor
test
push
pop
sbb
popa
(bad)
es
ret
pop
jmp
mov
shl
xchg
adc
sbb
sahf
push
sahf
sub
cmp
mov
jne
pop
inc
cli
sub
jne
test
rol
or
push
or
sub
or
add
imul
adc
js
mov
int3
cmp
jae
sub
pop
and
loop
cmp
les
mov
mov
sbb
outs
lods
in
dec
mov
imul
(bad)
sub
retf
imul
daa
sbb
mov
push
nop
mov
xchg
inc
into
sub
stc
nop
mov
mov
inc
(bad)
pushf
inc
push
xor
in
push
call
lea
ret
fist
ret
ss
fdivr
push
push
jl
fsub
ins
or
sbb
mov
xor
sbb
rcr
lods
add
push
pop
lds
popa
add
jmp
inc
and
rcl
mov
add
dec
fld
sbb
lods
jo
xlat
jae
jo
mov
and
pop
iret
adc
ret
popa
adc
add
cmp
movsx
mov
mov
inc
fadd
push
ror
mov
cmp
and
outs
inc
iret
or
pop
aam
push
or
nop
fwait
stos
inc
adc
cmp
lods
or
or
adc
ret
xchg
rol
sub
pop
mov
xlat
or
in
les
mov
and
cld
mov
add
js
std
xor
retf
retf
sbb
mov
gs
mov
pop
add
or
or
adc
mov
iret
clc
stos
push
rol
mov
pop
outs
pop
sbb
mov
xor
mov
sub
or
sub
or
adc
jg
or
ror
popa
xchg
add
int3
or
xor
dec
cmp
test
push
push
icebp
test
mov
xchg
test
mov
xor
lea
pop
retf
xor
pop
xor
sub
mov
add
sub
xor
nop
fsubr
(bad)
and
popa
mov
push
lahf
(bad)
mov
mov
xor
inc
inc
xchg
push
push
or
cdq
repz
loopne
pop
mov
add
and
sbb
add
clc
stos
iret
inc
add
or
dec
push
xchg
outs
push
scas
lahf
and
add
fsub
and
adc
das
or
or
adc
xchg
adc
xchg
nop
cs
add
lods
daa
adc
mov
push
and
mov
mov
icebp
jmp
xchg
xor
mov
iret
and
test
push
fwait
mov
or
cmp
fs
pop
inc
or
mov
fcom
in
inc
stos
add
movs
retf
clc
xor
clc
mov
add
(bad)
push
test
lea
pop
mov
dec
inc
(bad)
mov
sub
inc
jmp
mov
ins
mov
retf
mov
leave
in
test
sub
retf
fcomp
pop
jb
xor
push
add
aas
hlt
jge
cmp
les
loope
lock
test
adc
add
ins
in
cld
add
xchg
xchg
aam
sbb
push
(bad)
and
xor
sbb
scas
hlt
jns
es
(bad)
pushf
or
push
jmp
dec
mov
imul
push
inc
jmp
inc
add
inc
adc
in
inc
jo
pop
xchg
cld
xchg
or
adc
test
in
inc
sbb
fwait
cwde
pop
dec
sub
pop
test
out
push
push
bound
cwde
iret
adc
hlt
pop
inc
xchg
push
push
push
and
bound
inc
out
int
loopne
fild
push
or
arpl
test
sahf
cmp
clc
imul
mov
rol
pop
fcom
pop
push
push
mov
daa
mov
push
inc
mov
push
cwde
(bad)
dec
sahf
dec
cwde
test
test
xchg
icebp
dec
nop
add
je
mov
and
and
dec
ins
mov
(bad)
lds
mov
adc
add
mov
xor
loop
xor
inc
push
cwde
dec
mov
adc
fild
jns
cwde
retf
hlt
(bad)
hlt
(bad)
jae
sub
das
and
mov
adc
and
or
push
mov
sahf
clc
jo
jecxz
dec
push
add
pop
pusha
push
add
mov
pop
aaa
inc
jae
js
add
popa
mov
sub
(bad)
les
pop
sbb
lea
and
nop
fisub
inc
outs
fs
mov
pop
jae
jmp
outs
data16
je
nop
add
scas
sub
fwait
cmp
push
inc
push
bound
fwait
scas
or
inc
mov
push
jb
iret
xor
bound
inc
scas
jo
scas
and
xchg
sub
aam
scas
inc
mov
add
sub
inc
loopne
adc
icebp
or
or
adc
adc
adc
icebp
adc
push
adc
dec
add
inc
mov
inc
shl
inc
cmp
mov
loope
shl
add
rol
cwde
inc
cmp
nop
push
push
add
jge
inc
cmp
and
dec
ror
out
ret
sti
lock
mov
or
sub
ret
add
call
add
inc
dec
mov
dec
pop
test
jae
bound
cmp
arpl
add
sbb
in
jmp
aam
sub
mov
xor
pop
call
xchg
jbe
js
xchg
test
mov
mov
jp
cmp
jne
movsx
dec
xor
pushf
sub
push
mov
lods
and
fnstsw
add
push
call
call
pop
pop
xchg
add
cs
mov
add
mov
(bad)
add
test
add
sub
aad
push
fsub
mov
call
fidivr
jmp
jmp
arpl
cld
mov
pop
int3
lahf
stos
xor
bound
je
push
pop
fiadd
or
xchg
mov
push
lods
push
inc
dec
nop
fild
jns
mov
shr
das
cmp
xor
xor
and
movs
mov
and
mov
dec
dec
mov
jo
add
scas
jecxz
(bad)
push
jo
push
jl
jo
repnz
jo
xchg
jg
je
sbb
mov
loopne
xchg
push
mov
add
mov
xor
aas
movs
add
cmp
or
adc
add
ss
pop
push
adc
ret
lods
or
sub
popf
inc
pusha
dec
bound
push
adc
adc
inc
jmp
inc
push
cld
ds
mov
and
or
or
sbb
pop
and
mov
cld
push
xor
js
cwde
push
enter
dec
push
fist
movs
dec
add
leave
aad
push
fdiv
pop
movs
imul
cmc
pop
dec
clc
jnp
jmp
add
and
add
sub
xor
cmp
fsub
aas
mov
mov
fadd
add
or
nop
movs
pusha
pop
jmp
test
push
inc
std
xor
stos
gs
sub
xchg
push
sub
xchg
in
fmul
mov
aaa
xor
mov
ret
or
frstor
add
mov
mov
(bad)
push
fisttp
push
test
fwait
adc
jmp
cdq
ror
mov
or
in
and
xchg
les
nop
dec
mov
jle
pop
push
mov
mov
mul
mov
sbb
xchg
add
xchg
mov
adc
in
push
stc
nop
mov
dec
push
stc
mov
dec
push
stc
mov
push
add
test
in
push
mov
mov
inc
cs
add
jno
js
cs
popa
cmc
pusha
ss
inc
inc
add
not
mov
push
or
mov
add
add
adc
mov
push
aam
das
or
xchg
jl
clc
xor
inc
loopne
mov
movs
xchg
mov
jmp
or
test
add
rcr
sub
inc
in
cmp
mov
jo
and
xor
fcom
xchg
das
mov
adc
fwait
sub
stos
and
test
add
lea
nop
jp
pusha
push
or
loope
(bad)
add
add
call
pop
dec
push
pop
aaa
add
aaa
adc
xchg
daa
scas
jns
adc
lods
cmp
mov
xchg
addr16
sbb
dec
fwait
imul
(bad)
bound
in
inc
add
outs
ins
dec
test
inc
jo
(bad)
ja
shufps
das
iret
or
aas
daa
mov
mov
mov
inc
jae
imul
pop
imul
jbe
sbb
xor
mov
sub
add
mov
add
push
(bad)
mov
das
test
or
nop
sub
loopne
pop
das
ss
xchg
pop
add
test
push
dec
retf
lea
fcomip
sub
add
pop
add
lods
push
cmc
rcr
imul
sub
das
daa
(bad)
mov
add
mov
pop
ja
jecxz
dec
test
xchg
sbb
inc
lea
mov
adc
mov
bound
nop
or
pop
fidivr
mov
jg
add
sbb
mov
pop
xchg
lock
imul
pop
stc
and
inc
dec
mov
or
push
out
push
rol
jecxz
add
push
leave
sbb
push
loopne
fadd
shr
xor
shl
mov
call
fwait
or
sbb
in
add
xor
pop
push
adc
xchg
mov
adc
add
adc
fld
cmp
xor
pushf
loope
cmps
and
fild
adc
xchg
je
jmp
or
daa
inc
pop
mov
mov
(bad)
lea
ss
and
dec
inc
clc
xor
dec
adc
or
loope
jnp
fdiv
dec
pop
loope
cdq
ret
and
add
and
inc
add
adc
scas
xchg
adc
test
adc
adc
pop
icebp
adc
(bad)
sub
inc
addr16
push
xchg
or
inc
addr16
cmps
popa
push
inc
aaa
enter
adc
inc
adc
clc
xor
les
fsubr
jp
jl
mov
in
lock
sbb
lds
and
shl
add
inc
jo
or
loope
loopne
inc
loopne
xchg
mov
push
or
in
push
mov
or
mov
jnp
in
stc
in
mov
or
nop
pop
mov
rcl
fbld
xlat
push
ror
pop
pushf
mov
gs
sub
jb
dec
adc
or
int3
in
add
fucomp
das
fist
cli
dec
jle
add
gs
imul
adc
sub
push
or
push
mov
addr16
adc
es
add
fisttp
add
inc
adc
add
pusha
and
mov
add
push
adc
and
add
or
mov
and
jo
shl
mov
or
sbb
outs
xchg
pop
xor
adc
out
int3
sbb
es
sti
and
ja
nop
cmc
daa
mov
sub
out
les
pusha
jnp
cmp
test
adc
bound
add
sub
xlat
push
sub
mov
cld
inc
test
dec
call
clc
movs
movs
or
push
sub
push
jmp
push
call
or
mov
adc
dec
fadd
or
push
mov
sub
xor
jb
aaa
xor
add
pop
aaa
shr
ret
xor
lahf
mov
fsub
jl
clc
add
push
mov
push
and
mov
test
sub
or
dec
xor
pop
rol
jp
call
add
loopne
mov
pop
rcl
ret
das
or
xor
pop
vmovss
out
aas
jl
xchg
sub
jb
retf
out
mov
adc
ja
std
sub
loopne
jbe
sbb
and
cli
mov
fiadd
cld
or
mov
pop
add
cld
xor
mov
xor
adc
cvtps2pd
call
je
dec
out
je
push
and
sar
sub
xor
and
push
fistp
jmp
add
call
in
adc
lock
xchg
push
dec
loop
and
mov
pop
and
xor
pop
sbb
cmp
ror
add
test
push
adc
(bad)
clc
ret
pop
in
sub
in
mov
leave
or
sbb
movs
rcl
adc
shr
shl
scas
or
sbb
push
and
shl
adc
out
les
add
data16
in
pop
cmp
inc
push
mov
cmc
mov
daa
and
mov
movs
sub
lea
std
add
jle
lods
and
push
and
add
mov
dec
pusha
mov
sub
jnp
mov
fisub
xor
sbb
pop
sti
push
push
fxch
jp
xchg
hlt
cmp
mov
jnp
fcom
inc
call
popa
mov
iret
or
mov
push
jns
test
rcr
int
mov
enter
add
push
dec
or
not
xchg
xor
aas
inc
ins
out
mov
ret
pop
ins
sub
ins
sub
mov
les
(bad)
xchg
mov
in
enter
lock
inc
(bad)
sub
jae
push
jnp
or
and
fcomp
lea
sub
jmp
push
sub
in
adc
movups
out
dec
inc
sbb
movs
or
adc
in
movs
ret
dec
push
push
dec
aas
adc
js
push
dec
pop
ins
fsub
add
push
scas
mov
(bad)
(bad)
movs
mov
pop
push
push
fisttp
mov
aam
aaa
push
mov
cmp
xor
or
pop
and
loopne
jmp
add
pop
sub
aaa
or
xchg
inc
sub
call
or
pushf
mov
xchg
push
mov
push
or
xchg
mov
xor
push
(bad)
jecxz
fcom
loopne
pop
push
sbb
mov
push
scas
lock
and
mov
jge
leave
sbb
adc
add
push
lds
adc
sub
jecxz
jns
cmps
jns
push
mov
js
add
xchg
cwde
das
and
imul
hlt
cwde
sbb
fdivr
mov
std
outs
mov
mov
mov
add
jmp
add
sbb
ins
push
mov
sbb
das
lock
test
pop
mov
cld
adc
fsubr
add
pop
call
nop
mov
xchg
pop
pusha
ficomp
push
pop
cdq
push
shl
inc
shr
or
cld
mov
inc
loope
jle
rcl
cmc
push
push
pop
sbb
inc
fistp
sbb
inc
(bad)
push
popa
pop
jae
clc
dec
jbe
add
imul
sbb
sbb
and
les
mov
push
push
arpl
xchg
pop
test
into
nop
pop
cmps
sbb
mov
xor
inc
cmp
cmp
dec
enter
pop
es
jae
add
mov
cmc
sub
push
cmps
pop
push
clc
pop
adc
mov
in
sbb
shl
jge
fisub
push
clc
xor
(bad)
(bad)
ret
xor
jmp
lock
gs
and
hlt
pop
cld
sbb
sub
and
push
fcmovne
aam
mov
sub
mov
pop
xchg
add
push
mov
jl
or
or
mov
jmp
fs
sub
and
xor
add
fstp
mov
std
inc
popf
dec
pop
fld
and
sar
mov
xchg
mov
add
mov
sub
push
and
scas
aad
ret
cs
test
xlat
or
imul
and
outs
lods
sub
jg
scas
xor
iret
cmp
jecxz
mov
add
shl
fucomip
daa
and
rol
mov
add
mov
push
or
mov
mov
mov
push
in
mov
mov
push
sub
es
fsubr
or
fild
mov
clc
mov
adc
loop
push
jne
jb
test
dec
pusha
mov
lock
adc
inc
in
ins
mov
xor
in
(bad)
out
adc
mov
inc
out
ss
jp
fiadd
stos
mov
xor
or
or
jo
push
add
xchg
inc
add
int3
xchg
push
add
pop
jne
std
xor
je
imul
cld
scas
movs
mov
or
mov
or
xchg
in
sub
mov
xor
jmp
push
in
retf
sbb
add
pop
pop
xor
rcl
or
outs
mov
or
clc
gs
lods
nop
in
mov
inc
jmp
add
xor
jg
mov
test
test
(bad)
call
dec
jo
mul
add
fwait
dec
ror
cmp
adc
jae
cmps
inc
adc
movs
push
(bad)
out
or
leave
sar
test
or
(bad)
sti
fs
outs
add
repz
fadd
test
arpl
pop
push
inc
loope
nop
mov
dec
dec
sub
pop
rcl
pop
in
lea
sbb
aad
add
add
icebp
int3
dec
int
cmp
arpl
scas
or
jecxz
add
not
adc
(bad)
mov
add
scas
rcl
out
or
lea
cmp
lds
rol
xor
lahf
push
imul
add
arpl
mov
or
inc
mov
sub
pop
add
add
pop
dec
xor
loopne
xchg
xchg
inc
cmp
les
or
xchg
pop
add
jnp
xor
mov
ins
push
aas
and
mov
leave
(bad)
shr
push
mov
shr
scas
xchg
mov
sub
push
push
inc
pusha
lds
mov
inc
inc
test
cmps
mov
sub
sub
iret
lahf
xchg
addr16
add
leave
jne
cmp
pop
or
shl
jmp
jle
fild
fild
lock
cmp
or
or
mov
cmp
leave
std
sbb
xor
inc
loopne
fs
clc
cmp
add
je
or
or
jae
inc
das
stc
in
aas
les
push
fwait
out
sar
(bad)
or
adc
mov
xor
adc
nop
add
daa
lahf
int
jne
mov
adc
mov
jl
nop
inc
dec
movs
push
push
cmp
mov
mov
test
in
nop
inc
push
xchg
cwde
les
lmsw
and
lods
mov
cs
mov
(bad)
mov
push
mov
push
aam
jle
sti
jae
push
ins
fld
add
xchg
dec
add
outs
add
hlt
push
je
inc
add
fsubr
fstp
adc
add
inc
outs
push
aam
js
mov
lods
mov
dec
jl
test
xchg
pop
push
clc
cwde
mov
repz
push
loopne
jo
mov
mov
sti
aaa
js
fs
add
push
js
inc
out
lock
test
pminub
mov
outs
daa
dec
dec
les
jbe
sub
add
xlat
dec
and
in
cmp
(bad)
rol
push
cs
fwait
in
loope
push
and
dec
add
fwait
dec
mov
test
dec
mov
add
ds
mov
inc
enter
fisttp
(bad)
cmps
test
pop
dec
hlt
cs
gs
add
sbb
fimul
push
pop
mov
fsubr
dec
push
mov
push
das
movs
push
and
pop
les
test
pop
in
sub
add
xchg
addr16
mov
das
and
sbb
push
mov
add
popf
mov
dec
dec
adc
push
and
pop
pop
add
loope
loope
repz
ficomp
push
out
mov
cli
or
push
scas
loop
mov
dec
je
addr16
lods
mov
or
jecxz
arpl
loopne
mov
jo
pop
jo
mov
mov
cmp
pop
mov
neg
pop
aas
test
cwde
popa
or
push
fbstp
pop
push
push
rol
aas
in
loopne
add
mov
add
das
ins
and
or
popa
(bad)
jmp
xchg
xchg
das
adc
add
dec
mov
add
or
in
add
fwait
iret
adc
outs
cmp
arpl
in
sub
or
add
imul
js
arpl
dec
pop
sub
das
push
mov
sub
fs
sbb
mov
add
xor
loopne
ror
sub
mov
dec
in
xchg
clc
cmp
scas
clc
mov
pushf
or
mov
dec
in
data16
xchg
out
mov
push
cmp
dec
jl
mov
fstp
jecxz
repnz
inc
cmc
aas
jo
lahf
and
cs
jle
movs
push
sub
psubw
fwait
repz
add
push
or
adc
scas
int3
push
xor
or
mov
aam
imul
movs
sub
arpl
shl
pop
ins
add
adc
fsubr
push
fsub
adc
scas
neg
sub
es
mov
test
xor
pusha
mov
lahf
out
je
jno
xchg
push
adc
scas
mov
pushf
push
xor
xchg
jl
xlat
movs
push
pushf
scas
add
ds
je
clc
push
fsubr
outs
or
jne
fsubr
add
cmps
mov
inc
(bad)
data16
mov
call
push
cwde
cmps
out
jge
int
test
test
stos
push
lods
fbstp
mov
scas
int
shr
scas
in
mov
js
sub
ret
mov
push
jl
and
clc
imul
mov
mov
push
ror
push
mov
outs
rep
mov
push
add
push
js
xchg
jbe
int
cmp
daa
call
ret
or
daa
ror
les
push
fs
mov
sub
sysret
xor
ja
in
in
loope
push
mov
js
push
iret
daa
pushf
loop
add
mov
pop
fsub
add
not
ins
fiadd
mov
(bad)
cmp
lods
mov
cmps
pusha
cwde
or
jl
cs
jl
scas
ror
fisttp
inc
mov
dec
popw
mov
sbb
repnz
test
js
inc
mov
cmp
cs
sub
xor
dec
sbb
in
test
push
push
jo
faddp
jns
pop
push
mov
rcr
sbb
pop
clc
push
jns
ja
sbb
push
pop
mov
enter
adc
mov
push
sub
inc
push
pop
jbe
jns
adc
inc
mov
inc
and
(bad)
pop
mov
jge
hlt
and
xchg
and
(bad)
sti
inc
ins
xlat
inc
clc
pop
push
in
and
ret
dec
pushaw
push
js
add
cmp
inc
lods
das
shl
fwait
push
mov
repz
sbb
xor
pop
pop
sbb
and
pop
mov
mov
mov
push
faddp
mov
push
cmp
pop
push
rcr
daa
adc
aaa
pop
daa
aaa
push
adc
sub
mov
inc
pop
ins
ss
push
test
test
cmp
popf
out
mov
push
pushf
aam
lods
add
adc
ins
fdiv
cmps
pop
dec
xchg
ss
push
dec
dec
inc
dec
jmp
shr
dec
stos
ins
jle
mov
pop
jo
dec
(bad)
lea
fnstenv
popf
pop
cmp
push
movs
mov
add
push
or
pop
add
ins
fcmovnu
ror
enter
lock
add
cmp
xlat
ins
or
jl
and
push
fs
sahf
out
in
cmp
add
ds
jnp
adc
dec
and
nop
jo
in
adc
fcmovnbe
xor
inc
push
inc
inc
inc
jo
dec
lock
push
aaa
in
push
std
push
mov
int
jbe
push
and
sub
sbb
mov
ins
fmul
popa
mov
in
ins
fistp
fwait
ja
mov
mov
out
pop
mov
ror
mov
xchg
and
scas
push
mov
jl
push
adc
jo
push
test
ins
fistp
push
aam
pop
cmp
pusha
dec
ins
mov
ins
push
dec
push
or
in
outs
clc
jg
fdiv
adc
pop
shl
iret
into
mov
aaa
jg
pop
mov
adc
ins
test
mov
mov
(bad)
inc
in
aaa
hlt
hlt
push
or
in
femms
in
pop
test
or
fwait
pop
data16
pop
pop
mov
pop
jo
daa
dec
push
sub
add
ja
sub
push
inc
aad
mov
jg
call
ds
push
sbb
cmps
(bad)
out
or
push
xchg
push
loopne
mov
cmp
adc
adc
inc
add
push
push
ins
mov
das
pushf
push
mov
and
pop
lock
cld
(bad)
sbb
fist
push
push
sysret
movs
xor
add
jo
cmp
pushf
add
dec
add
aas
shr
es
push
inc
dec
add
fild
pop
stos
and
dec
pop
xchg
stos
mov
rol
or
or
imul
add
xchg
push
pop
cmp
mov
test
add
(bad)
out
aam
stc
sahf
push
pop
jo
(bad)
out
mov
and
ds
jns
jge
mov
push
lods
cld
jbe
sub
adc
aaa
pushf
daa
mov
push
lock
int3
push
call
fcmovne
push
in
ja
in
push
clc
dec
and
ins
out
push
aaa
jle
int3
cmps
sbb
inc
and
push
adc
cmp
and
push
and
xchg
inc
add
xchg
inc
aas
pop
fiadd
pop
push
rol
lock
iret
sar
push
xchg
inc
xchg
inc
xchg
stc
adc
ja
push
cwde
xchg
push
cwde
inc
out
nop
cdq
mov
sbb
xlat
call
pushf
push
in
ins
ja
sti
cwde
popf
outs
sahf
push
hlt
aas
sub
push
fs
fidivr
movs
pop
push
test
ds
push
call
scas
jle
push
popf
jge
int
mov
mov
fs
ds
ret
outs
lds
cwde
push
cdq
popf
cmp
mov
aad
mov
addr16
sub
push
and
xchg
add
push
push
mov
lods
imul
or
or
clts
jge
int
test
adc
add
cmp
sbb
push
push
push
clc
pop
dec
out
dec
and
jl
cmps
cwde
mov
cmp
jl
pop
add
mov
mov
ins
daa
push
int
mov
sub
pushf
sub
fdivr
sub
cmps
cmp
aas
inc
aaa
add
dec
push
inc
push
out
push
neg
in
jnp
pop
pop
movs
push
enter
pop
or
pop
cmps
sbb
inc
pushw
mov
mov
push
inc
imul
push
js
pop
call
push
inc
sbb
lods
ss
push
push
jo
int
push
cmp
push
jp
and
lods
lock
test
jg
sub
out
xchg
pop
dec
mov
sbb
push
daa
test
dec
jg
mov
add
dec
and
push
or
enter
mov
mov
mov
pop
mov
or
(bad)
(bad)
out
mov
(bad)
in
loop
cmp
pushf
(bad)
lahf
push
mov
add
mov
mov
cmps
push
push
pop
fcmovnu
into
xor
mov
mov
clc
push
sub
out
mov
push
retf
push
adc
ror
iret
push
loopne
pop
out
jge
rcr
es
loope
loop
push
sar
push
out
push
cmp
in
(bad)
push
cmp
shr
sahf
in
push
test
loopne
sub
icebp
ss
div
clc
(bad)
cmp
push
xor
push
fwait
dec
nop
pop
add
ins
or
cmp
mov
push
push
call
lods
(bad)
push
push
sub
adc
not
fwait
int
mov
mov
and
and
movs
daa
inc
sub
push
js
push
ins
inc
fs
mov
push
in
add
das
xor
shl
ins
mov
add
push
push
cmp
pop
rol
add
popa
scas
mov
pop
shl
inc
push
sub
push
jle
loopne
jne
fsubrp
push
cld
movs
in
push
mov
pop
sub
in
out
cmp
fstp
push
cld
push
cwde
(bad)
rol
pop
pop
jo
add
add
adc
adc
out
out
push
movs
add
ins
scas
loop
or
pop
or
js
int
adc
sub
and
push
js
hlt
mov
fisub
push
mov
pop
sub
lock
xor
fdiv
shl
cmp
(bad)
ja
cmps
sub
push
jo
add
lods
fcmovnb
inc
push
cld
pushf
sub
dec
xchg
ins
pop
sbb
fmul
push
push
inc
push
je
push
mov
jle
push
lods
pusha
xchg
popa
mov
arpl
gs
sub
cs
int3
push
or
ins
pop
outs
cs
push
pop
(bad)
jnp
jle
jg
and
sbb
test
sbb
fsubr
xchg
push
test
in
nop
ja
iret
cmp
xchg
into
call
rol
rcr
jle
mov
fmul
fidiv
push
pusha
mov
mov
xor
fidivr
pop
enter
fsubp
cmp
nop
ror
shr
fisttp
test
data16
push
shl
stos
push
scas
or
and
rol
shr
cmps
mov
aam
lods
(bad)
fcomp
int
mov
test
cmp
lock
sbb
jne
fwait
loop
jmp
in
ins
ss
data16
pushf
and
shl
in
call
hlt
aam
mov
mov
or
rol
mov
push
fadd
push
loopne
or
push
cld
jl
mov
mov
push
mov
push
or
push
ins
out
adc
inc
adc
xor
mov
jle
push
mov
and
mov
ins
and
shl
push
xor
sub
sbb
inc
push
dec
cli
push
outs
mov
dec
ror
push
pop
dec
lds
fisub
scas
sbb
push
push
sbb
jle
ds
push
pop
push
xchg
js
arpl
fs
mov
jl
outs
pusha
cmp
jl
adc
dec
outs
jle
push
mov
jnp
in
loopne
jae
jne
pushf
ja
jle
or
js
rol
mov
mov
mov
inc
call
push
mov
mov
(bad)
mov
cmp
repz
imul
add
fimul
fsub
mov
xchg
mov
push
sti
and
(bad)
in
xchg
push
dec
mov
ins
xchg
or
jl
cmps
push
pusha
and
les
xor
mov
ds
ins
push
pop
mov
jo
in
fldcw
add
xor
lds
pushf
(bad)
push
leave
fwait
int
mov
retf
jl
mov
mov
mov
push
clc
ins
loopne
jecxz
or
iret
fistp
imul
mov
push
dec
lock
lock
add
hlt
into
cmc
push
sbb
push
add
call
inc
or
mov
js
push
adc
int3
push
push
and
sub
jbe
push
push
and
adc
fnstcw
call
inc
repz
push
lahf
mov
int
xor
sbb
les
je
mov
scas
enter
test
out
dec
les
aam
push
xchg
mov
clc
pop
push
mov
sbb
xlat
fldcw
enter
call
add
lahf
ja
or
mov
jge
loopne
data16
ss
cmp
outs
xor
ins
push
add
jl
loopne
mov
jo
push
and
ss
enter
js
enter
mov
repz
mov
xchg
data16
push
push
(bad)
retf
int
call
int
rol
inc
aad
repz
jbe
(bad)
push
movs
fadd
sub
mov
mov
fcmove
(bad)
push
fmul
(bad)
mov
loopne
loop
in
jmp
outs
jle
lock
push
mov
mov
sbb
stc
(bad)
cli
push
adc
inc
jbe
push
or
push
push
mov
int3
call
in
inc
adc
jle
push
add
mov
outs
mov
sub
outs
scas
inc
sahf
(bad)
inc
pop
cmp
jge
xor
push
jo
nop
fisub
fiadd
cwde
(bad)
add
push
adc
cs
mov
fimul
jbe
inc
int3
push
mov
cmp
loop
jecxz
rcl
xchg
mul
xchg
pop
dec
fcmovne
sbb
push
test
das
jl
repz
xor
cmp
je
in
mov
sbb
aaa
xor
mov
mov
fidivr
pop
cmp
sahf
out
cwde
mov
push
loopne
jmp
in
push
clc
pop
das
ds
push
mov
lahf
cmps
stc
dec
aas
push
mov
test
or
pushw
mov
pop
inc
push
inc
pop
fdivr
iret
sbb
inc
push
push
int3
in
fs
mov
in
dec
inc
inc
pop
mov
mov
inc
push
dec
daa
jbe
imul
push
pop
je
pop
dec
push
popf
pop
sub
ror
pop
xchg
fbstp
mov
dec
pusha
mov
jl
scas
imul
mov
sbb
push
pusha
pusha
mov
ret
mov
ds
sub
mov
push
and
jbe
mov
mov
rcl
mov
(bad)
mov
mov
xchg
pop
pop
cwde
fmul
cmp
es
test
mov
and
pop
xchg
push
movs
es
call
push
ins
jo
test
lock
pop
das
int3
shl
lahf
lahf
lock
iret
add
adc
pop
fdiv
ja
add
dec
xchg
xor
movs
mov
mov
jb
mov
arpl
int
mov
push
cmp
mov
in
xor
cdq
retf
js
and
fdivr
push
push
mov
mov
mov
pop
or
or
push
mov
push
out
or
mov
dec
(bad)
outs
(bad)
adc
inc
adc
in
pop
test
mov
pusha
in
mov
lahf
push
push
in
push
push
mov
daa
sbb
(bad)
cmp
push
push
mov
push
(bad)
(bad)
inc
xchg
xchg
push
je
xchg
push
jno
imul
add
xor
dec
push
push
xor
xor
lock
xor
and
cmp
cmp
aas
shl
out
sub
cwde
movs
fild
inc
bound
aam
fwait
and
test
push
shl
mov
mov
leave
popa
mov
mov
and
popa
pop
mov
xchg
jg
inc
add
pop
pop
add
add
sub
and
pandn
stos
sbb
mov
push
cmp
and
inc
pop
popa
add
mov
ins
push
adc
imul
pop
mov
inc
or
repz
(bad)
das
pop
adc
sub
sbb
test
test
xchg
push
mov
xor
hlt
cmps
popf
cmp
test
test
pop
test
cmp
mov
xchg
push
mov
cwde
pop
add
unpcklps
iret
fcom
inc
adc
pop
sbb
call
mov
fdivr
add
(bad)
fnstsw
lods
dec
push
fisub
push
cwde
or
jnp
out
xor
loope
loope
push
dec
repz
call
je
sbb
and
test
out
jl
jmp
jmp
rcr
out
in
dec
push
test
dec
out
scas
out
push
clc
dec
pop
or
mov
adc
or
pop
xor
fnstenv
push
add
push
mov
aaa
xlat
out
test
cmp
push
sgdtd
and
pop
scas
int
stc
cmp
nop
and
aam
les
jl
lds
push
pushf
shl
fldcw
xlat
enter
cwde
loop
int
lahf
loopne
jecxz
push
add
fsubr
pop
call
jmp
pop
inc
adc
pop
es
add
xchg
(bad)
and
adc
push
loopne
fimul
push
cmps
stc
pop
les
es
dec
or
fldcw
xchg
(bad)
adc
fs
pop
ds
mov
sbb
and
ss
out
jbe
js
int3
sub
sub
das
fnstcw
push
sub
xor
inc
cmps
mov
aaa
xchg
cmp
ds
data16
aas
push
xor
mov
(bad)
xlat
pusha
ins
mov
dec
push
dec
push
pop
mov
push
push
push
mov
ja
out
outs
push
cwde
pop
jl
outs
push
pushf
fs
shr
jg
push
push
push
mov
idiv
out
push
rol
addr16
push
lods
ins
push
jl
xor
imul
push
test
mov
mov
mov
aaa
sub
ds
je
lods
fdiv
and
cmove
or
and
push
mov
jnp
popa
(bad)
sbb
push
adc
es
rol
push
fcomp
faddp
xlat
mov
fadd
call
jnp
jecxz
in
paddusb
xchg
lds
outs
hlt
sub
mov
mov
pop
je
(bad)
mov
aas
dec
repz
ins
sub
push
scas
mov
cmps
stc
push
inc
das
int3
in
xor
ss
pop
dec
xor
cmp
ds
popa
jecxz
aaa
mov
inc
jl
cmps
and
mov
mov
dec
dec
ror
dec
sahf
push
pusha
dec
cmp
mov
push
test
pop
xchg
or
push
int
mov
push
pop
cwde
push
fadd
sbb
pop
mov
and
xchg
jmp
lock
sbb
mov
in
inc
iret
lock
push
mov
pop
stos
pop
and
adc
(bad)
and
jg
test
mov
push
xchg
dec
xlat
mov
push
mov
(bad)
push
dec
xchg
pop
add
push
and
sar
pusha
movs
rol
jmp
pop
test
xlat
nop
push
fadd
imul
addr16
ins
dec
outs
mov
scas
in
sbb
push
push
xchg
xor
out
enter
sbb
ins
cmps
stc
out
repz
push
push
inc
jae
frstor
lahf
rcl
mov
jno
bound
mov
pop
movs
push
adc
inc
push
cmp
out
fstp
mov
push
push
test
loopne
mov
dec
repz
push
in
dec
mov
in
mov
add
into
pop
daa
rcr
cs
push
hlt
out
mov
dec
fst
or
push
cwde
aam
add
mov
pop
out
ss
push
addr16
push
rol
pop
stos
mov
and
sbb
dec
xor
dec
mov
rcl
mov
ins
ss
cwde
les
xchg
and
mov
pushf
scas
jo
push
mov
push
call
push
pusha
inc
ins
inc
daa
test
int3
dec
push
ror
cmps
pusha
lahf
sub
pop
pop
pop
and
mov
nop
imul
ins
push
(bad)
(bad)
(bad)
add
pop
aaa
and
shld
in
cmps
pusha
dec
aas
lods
iret
repz
mov
push
sub
jns
and
pushf
mov
mov
ins
fld
xchg
js
push
in
push
hlt
cs
imul
push
ss
dec
fcmovne
pop
nop
cmp
dec
cmp
cmps
mov
cld
fmulp
push
call
jbe
push
or
mov
lock
mov
mov
out
mov
inc
push
inc
das
or
push
ss
clc
xor
dec
dec
push
dec
adc
loope
rol
js
push
daa
jo
mov
sti
xor
sub
movs
enter
adc
in
pop
push
pushw
mov
pop
dec
repz
pusha
sar
popa
ins
bound
aam
mov
out
mov
gs
pushw
adc
outs
push
inc
jle
jns
aaa
mov
push
xor
repz
mov
push
lods
(bad)
idiv
loopne
mov
lahf
(bad)
repz
mov
push
pop
cmps
xchg
ds
mov
push
mov
fidiv
mov
rcr
sub
(bad)
mov
push
scas
iret
push
inc
add
push
adc
add
pop
and
dec
push
ins
in
add
iret
mov
push
adc
cs
push
hlt
imul
xchg
jb
jae
out
inc
les
fs
dec
add
sti
cmps
push
mov
xor
out
cld
enter
jo
jbe
test
lock
add
cwde
fldcw
push
add
inc
push
cmp
xchg
jl
fwait
sbb
push
lods
push
enter
ins
cmp
je
das
and
push
mov
clc
pop
mov
dec
das
push
fdiv
in
ins
sar
cmp
push
mov
sub
out
xor
pushf
adc
push
data16
dec
push
lock
inc
push
ds
push
pop
dec
mov
adc
cs
push
test
lods
loopne
je
pop
adc
xchg
push
xchg
fdivr
xchg
cs
push
mov
sub
push
ins
mov
and
add
add
fstp
and
test
aas
pop
fld
mov
data16
dec
adc
loopne
pop
add
sub
add
aaa
add
adc
rol
cmp
add
inc
enter
push
sbb
cmp
inc
(bad)
sti
sbb
ins
and
adc
bndldx
fimul
xor
es
(bad)
iret
(bad)
and
lahf
push
push
jo
ja
mov
push
xchg
mov
mov
mov
sbb
test
add
popf
push
ins
imul
cmp
es
push
ins
outs
add
push
aam
sub
push
inc
ret
add
and
mov
imul
inc
sar
mov
scas
les
outs
xchg
dec
sbb
cld
ja
xchg
ds
push
enter
lods
or
clc
pushf
mov
cmp
and
inc
sub
js
loopne
iret
rol
mov
inc
stos
inc
dec
mov
imul
dec
mov
outs
mov
push
into
fisub
push
(bad)
aas
or
jle
(bad)
aad
ins
(bad)
fimul
sub
push
fdiv
cld
cli
mov
scas
or
mov
sbb
data16
outs
into
and
xor
or
inc
enter
jmp
sub
push
jae
cld
js
jp
lods
int
push
jge
mov
push
push
nop
mov
xchg
push
dec
cdq
outs
inc
sahf
scas
jmp
fstp
inc
pushf
test
lods
sar
inc
xchg
fidiv
inc
mov
mov
(bad)
fnstcw
pop
(bad)
dec
daa
sub
xchg
inc
dec
pusha
pop
push
int3
push
ficomp
jge
shl
addr16
outs
sbb
jbe
aaa
(bad)
push
das
lods
push
outs
scas
mov
push
pushf
sub
xor
push
in
(bad)
lock
clc
sub
dec
pop
outs
push
push
fiadd
add
inc
push
pop
adc
ins
scas
push
neg
pop
push
jl
dec
bound
outs
mov
fs
ins
push
outs
push
fs
xor
push
xchg
jno
and
outs
ja
mov
cmps
xor
addr16
dec
jb
add
addr16
adc
sub
mov
gs
mov
ret
pop
xchg
js
in
jns
adc
mov
push
xor
addr16
imul
lahf
cmps
push
cmp
pop
clc
push
stc
push
int3
mov
outs
repz
sub
add
push
push
cld
adc
push
inc
push
push
xlat
pcmpgtb
push
push
sbb
and
fs
imul
sbb
push
mov
mov
push
xchg
fiadd
or
popa
sahf
loope
fcmovnu
pop
jg
or
enter
push
xor
out
shr
daa
mov
mov
adc
pop
pop
cli
outs
sti
push
adc
pop
psrad
push
pushf
xchg
inc
lds
addr16
xchg
fs
sbb
(bad)
rol
xchg
out
mov
mov
dec
call
xchg
jmp
mov
fsubr
popa
fcom
push
dec
out
xchg
shr
das
mov
push
xor
hlt
stc
out
ins
mov
push
push
shl
mov
mov
neg
int3
cwde
stc
xor
cli
xchg
sti
ss
adc
cmps
push
clc
enter
popa
fbstp
call
mov
push
sub
mov
mov
je
push
mov
adc
aad
push
ins
or
jg
mov
push
mov
jl
in
out
pop
scas
push
adc
mov
ds
inc
mov
in
les
jle
push
jle
mov
sub
fwait
mov
push
les
fstp
and
cmp
push
pop
and
fidiv
rol
call
mov
pushf
push
cld
sbb
mov
pop
jl
mov
cmp
loopne
rcr
and
xchg
sahf
movs
lahf
js
push
sar
dec
repz
inc
xchg
aam
mov
or
pusha
mov
in
sbb
mov
aaa
adc
iret
je
in
inc
sub
ficomp
cmps
pop
aaa
test
jmp
xchg
addr16
pop
clc
add
xor
adc
add
push
aam
jg
loopne
ins
pop
lock
or
gs
(bad)
jg
and
add
xchg
pop
sar
mov
or
fst
mov
and
pop
dec
fidivr
pop
int3
fisub
mov
mov
mov
daa
daa
daa
daa
sbb
hlt
pop
adc
sahf
fdiv
je
cmps
cmps
(bad)
clc
es
cs
shl
aas
in
sub
push
inc
mov
add
pop
fsub
aas
in
loope
loopne
pop
cmp
in
repz
out
sbb
mov
iret
sar
out
cwde
mov
repz
push
cmp
call
jmp
push
fsubr
iret
adc
daa
sub
aas
hlt
pop
jnp
inc
test
lods
push
call
inc
outs
pop
aad
push
in
pop
adc
push
clc
(bad)
push
ins
jnp
out
out
out
out
je
mov
fwait
sub
dec
dec
mov
mov
mov
lock
mov
into
je
cwde
in
cld
psllw
pop
push
mov
repnz
lock
mov
hlt
push
sbb
mov
inc
ds
push
push
hlt
push
pop
sbb
push
pushf
div
imul
imul
rcl
je
clc
mov
inc
cmp
sar
push
mov
cmp
cmps
lock
ins
push
and
out
dec
shl
cmps
sti
scas
aam
in
push
sbb
pushf
out
std
cmps
push
je
sahf
fldcw
paddq
ins
cmp
ficom
dec
add
movs
add
sbb
push
xor
pop
fucom
jns
sbb
push
pusha
push
mov
add
push
imul
sbb
push
pushf
or
cmps
stc
in
out
inc
or
push
aam
in
mov
cmp
add
sbb
and
and
imul
dec
cmp
add
fs
sub
push
mov
out
test
pavgb
sub
pop
inc
sub
jo
push
mov
into
into
(bad)
cwde
xor
jo
push
loop
mov
in
xor
inc
sub
in
out
mov
push
fdiv
lahf
out
outs
or
push
push
loopne
out
ins
pop
lock
clc
xor
inc
icebp
inc
repnz
hlt
push
enter
inc
pop
cmps
dec
test
cmp
or
or
cs
adc
adc
or
pop
sbb
push
mov
call
in
mov
inc
fwait
out
fidiv
push
push
push
test
pusha
and
je
clc
xlat
int3
add
add
stos
push
push
adc
inc
or
mov
mov
inc
jo
pop
shr
pmulhuw
mov
push
loopne
push
xor
adc
loop
sbb
adc
dec
add
imul
test
lock
dec
cs
or
iret
jo
fmul
push
dec
add
add
push
mov
fwait
outs
push
push
mov
jl
aaa
aam
gs
add
dec
mov
cwde
outs
mov
push
les
mov
mov
gs
test
and
xchg
push
sbb
mov
cmp
ds
fld
into
daa
test
mov
xchg
jns
mov
cmp
cwde
dec
cmps
mov
sbb
imul
out
mov
push
sbb
pop
mov
push
sub
rol
dec
mov
push
cmp
jbe
mov
mov
test
xlat
inc
cmps
(bad)
es
ins
(bad)
lock
push
pop
movs
outs
xchg
push
loopne
inc
nop
nop
mov
adc
push
ins
fwait
cmps
pushf
hlt
cmp
mov
push
and
mov
mov
ins
inc
push
pop
add
stos
je
cmps
push
add
adc
pop
push
push
adc
pop
mov
scas
cmp
js
or
adc
ss
sti
das
sbb
pop
test
sbb
popf
mov
and
aam
stos
xchg
mov
mov
das
push
dec
mov
dec
cwde
pushf
xor
cmp
mov
fadd
inc
sbb
iret
jae
jbe
je
mov
test
jl
clc
dec
adc
idiv
fnstsw
push
push
pop
push
push
push
aam
push
dec
adc
mov
pop
ds
mov
adc
out
je
pushf
shr
(bad)
mov
push
loopne
daa
push
jno
mov
push
inc
cmps
pop
inc
mov
adc
ds
repz
push
adc
pusha
mov
adc
pop
mov
push
fcom
adc
adc
mov
fcomp
mov
pusha
mov
mov
movs
mov
fs
fild
push
js
fistp
bound
rcr
hlt
push
or
pushw
jo
imul
xchg
pop
cmp
sahf
dec
mov
or
in
push
pusha
test
cmp
stos
push
lock
scas
pop
sub
push
cmp
fcomi
mov
push
les
push
mov
popf
cmp
imul
shl
jae
add
je
sub
mov
out
jle
push
scas
loope
test
mov
mov
nop
mov
ss
in
ss
push
rcl
es
push
fild
push
mov
push
movs
cmp
pop
cmps
(bad)
sub
loope
cs
jmp
je
dec
inc
(bad)
jle
and
cs
je
inc
push
pop
cs
sub
pop
xchg
mov
ins
xchg
nop
out
test
adc
das
fnstsw
and
arpl
push
imul
or
or
dec
push
aas
push
dec
push
jns
gs
jnp
jae
sbb
dec
cmps
cmp
sti
aaa
ja
jae
push
dec
nop
inc
outs
ins
inc
dec
popa
sub
push
inc
xchg
jo
ins
jo
sbb
inc
ins
popa
lods
sbb
or
mov
cli
sbb
arpl
addr16
outs
ins
lods
jae
aaa
adc
xor
adc
je
repz
shr
je
inc
or
lods
pop
xor
movs
fisttp
jnp
lods
jne
popa
je
adc
sbb
imul
ins
je
stos
cs
and
stos
gs
leave
jnp
and
ins
jae
push
push
mov
xchg
xor
or
push
inc
stos
outs
ins
in
into
(bad)
jg
dec
fs
push
push
push
xor
test
pop
xchg
or
inc
dec
bound
adc
cs
push
inc
dec
or
adc
push
mov
sbb
ins
xor
inc
nop
shl
pushf
xchg
dec
lock
hlt
mov
cs
cmps
and
outs
sbb
outs
outs
adc
loop
in
cwde
adc
ss
jmp
stc
hlt
push
cpuid
dec
inc
cmp
push
dec
imul
enter
cli
jo
xchg
and
outs
jb
pop
cmp
xor
test
imul
or
xor
xor
jmp
inc
push
inc
adc
sub
sbb
ins
add
add
inc
imul
xchg
jmp
js
jb
dec
push
pop
push
mov
lds
cmp
jae
jae
mov
cmps
movhps
inc
adc
sahf
pop
test
je
pop
int
jae
inc
jne
sub
in
fild
jb
cmovge
inc
pop
xor
cmp
fld
clc
push
test
dec
and
ja
mov
sub
adc
lods
lock
cmp
or
ins
js
jne
push
js
dec
or
lock
ins
or
adc
push
dec
out
adc
add
cmc
in
lods
mov
or
inc
ins
pop
xchg
adc
shl
mov
inc
ja
popa
jg
fcomp
jo
dec
lock
cmp
pop
sub
outs
adc
mov
popf
sub
loopne
adc
push
pop
dec
dec
inc
pop
cmp
hlt
bound
and
push
jmp
lds
adc
cmp
jb
popa
pop
pop
shl
pop
or
(bad)
xor
ret
xor
fs
sbb
fcom
sbb
pop
or
je
fs
push
xchg
sbb
xchg
pop
jnp
pusha
or
jo
test
add
jo
mov
fs
ins
inc
add
mov
(bad)
mov
push
rol
ins
or
imul
pusha
adc
arpl
arpl
inc
or
ret
fcmovne
ins
xchg
icebp
mov
inc
xor
fsubr
cmp
ja
ror
aaa
push
int3
adc
aam
push
add
or
out
test
(bad)
sbb
movs
ins
push
sub
push
xlat
ins
mov
push
bound
movs
ins
dec
loopne
ret
jo
jb
ret
inc
ins
pushf
push
inc
push
adc
pop
lds
push
test
sub
shr
outs
std
sar
and
cmp
or
push
jp
sbb
pop
push
add
xchg
into
nop
pusha
aaa
stos
test
gs
ins
jne
xchg
mov
adc
int
bound
xor
in
(bad)
adc
mov
mov
dec
or
test
push
inc
pop
js
sbb
in
in
out
aam
push
test
xor
add
(bad)
(bad)
sbb
push
jno
jo
or
jmp
inc
ins
je
arpl
movs
(bad)
and
jns
sbb
pop
pusha
xor
adc
push
push
xor
push
fdivp
push
or
dec
push
push
adc
jne
or
or
inc
or
or
inc
add
retf
ror
dec
lds
mov
pop
lods
or
pop
enter
imul
jb
rol
stos
or
ret
pop
inc
jo
push
inc
inc
pop
adc
(bad)
into
sbb
and
push
sub
call
shrd
lods
inc
ror
jae
shl
jne
or
mov
add
ins
or
xchg
xor
push
adc
cmps
sub
pcmpeqb
jge
in
mov
dec
ss
jo
mov
inc
dec
repz
mov
ds
adc
push
or
add
xchg
outs
or
sbb
gs
pop
jbe
and
push
push
and
and
adc
jno
popf
dec
sbb
xchg
adc
and
jg
xchg
enter
outs
jmp
test
push
and
push
jnp
stos
pop
sub
and
pop
call
je
cmp
mov
cmp
into
int3
mov
cmp
adc
xchg
pop
leave
pop
sub
sbb
lods
fidivr
imul
cmps
sar
xor
xor
adc
jp
mov
nop
ins
fist
retf
cld
loope
test
outs
mov
push
push
dec
jg
outs
imul
or
cmp
popf
rol
inc
xchg
or
int
push
sbb
test
xchg
mov
dec
push
jo
dec
add
cmp
ss
push
jno
test
loope
jo
add
or
push
xchg
adc
xor
dec
dec
and
movs
imul
scas
adc
sub
adc
ins
pusha
mov
and
adc
jo
imul
jg
jne
fwait
in
jo
inc
jbe
enter
or
adc
adc
cmp
mov
dec
retf
xchg
xchg
push
add
inc
call
jns
jae
inc
add
jl
add
sub
fld
sbb
jg
aaa
daa
cmp
mov
mov
cmp
dec
loopne
sbb
mov
and
pop
ror
mov
lahf
mov
std
or
or
ins
mov
(bad)
push
sahf
jl
dec
shl
ds
mov
mov
mov
add
cdq
add
mov
shl
inc
cmp
inc
ret
data16
jp
pop
jns
jo
or
fs
cdq
push
mov
das
dec
imul
xchg
adc
les
mov
(bad)
aaa
mov
std
setl
clc
stos
ins
mov
outs
movs
ret
nop
add
outs
sub
cmp
xchg
add
sbb
jb
mov
push
sbb
xchg
enter
mul
add
cmp
inc
jle
cmp
mov
mov
and
mov
les
dec
enter
sub
add
sbb
push
call
lock
adc
(bad)
add
jg
mov
mov
jle
lods
mov
in
out
cmp
jne
inc
jle
mov
std
pop
mov
push
clc
sahf
jge
or
and
lea
or
jno
xor
sbb
add
mov
dec
push
ins
push
cmp
loop
ror
mov
ret
and
mov
call
push
xchg
and
sub
jb
je
dec
je
dec
xor
fld
test
dec
mov
and
inc
add
xchg
mov
add
push
and
mov
or
je
push
lods
call
shl
ret
dec
into
outs
ds
je
and
jo
rol
pop
sbb
and
lock
xor
sub
cmp
mov
(bad)
adc
ret
cwde
mov
cmps
fdiv
aam
rcr
outs
cli
sub
push
adc
mov
(bad)
push
sar
cld
jge
ja
and
xor
je
or
adc
iret
mov
out
rcl
mov
push
rcr
dec
imul
mov
ins
cmp
scas
gs
jmp
fcom
xchg
add
lock
mov
out
mov
cmp
cmp
dec
push
inc
add
pop
adc
repz
add
mov
mov
test
mov
call
mov
mov
jo
adc
xor
lods
repnz
sbb
sub
dec
aaa
aam
nop
dec
shr
fdivr
sbb
mov
and
pop
ja
mov
mov
or
cdq
xchg
inc
mov
mov
mov
ins
cs
xlat
mov
and
push
inc
inc
std
(bad)
mov
ret
pop
dec
cmp
test
fild
mov
outs
and
lods
pop
add
xchg
fild
fs
add
add
mov
test
dec
lods
jl
test
sbb
hlt
dec
pop
or
scas
adc
test
dec
cmp
imul
xchg
ret
xlat
out
inc
test
push
mov
mov
sbb
xlat
les
mov
or
cmp
push
xor
xor
or
gs
sub
test
and
gs
pop
cmp
test
rcl
add
xchg
and
aas
dec
xchg
inc
mov
add
xlat
cmps
pop
in
movs
sbb
cmps
or
mov
pop
push
shr
jle
and
adc
add
cld
cdq
or
sub
add
cwde
adc
pushf
into
test
or
xchg
aaa
jg
adc
das
cwde
sti
dec
icebp
mov
or
aaa
rol
fnstsw
fsub
mov
arpl
fdivr
push
call
pop
movs
ficomp
lock
clc
and
add
adc
adc
xchg
pop
aad
push
fs
adc
mov
daa
xor
cmovo
aas
ficomp
div
or
and
retf
and
cmp
cmp
stc
rcl
clc
repnz
fsubp
clc
add
bswap
add
add
dec
sahf
cmp
push
add
add
add
xchg
daa
push
pop
pop
adc
or
xchg
daa
dec
adc
push
or
or
jns
in
or
and
xchg
daa
dec
sahf
and
and
adc
in
sub
adc
daa
dec
sahf
cmp
sbb
sbb
ss
xchg
sbb
sbb
sbb
xor
pop
push
adc
sub
js
inc
ds
jl
dec
xchg
adc
sub
or
hlt
xor
and
hlt
hlt
hlt
enter
hlt
hlt
hlt
and
hlt
or
hlt
hlt
hlt
hlt
or
enter
hlt
xor
and
and
and
hlt
or
hlt
hlt
hlt
hlt
or
enter
hlt
dec
fisubr
xor
adc
cmp
leave
xchg
daa
dec
cmp
ds
aas
dec
outs
jno
dec
pop
push
push
hlt
mov
fs
rcl
adc
daa
dec
fisubr
push
das
adc
push
aas
or
es
cmp
leave
xor
and
or
jne
jecxz
pusha
pop
xor
adc
(bad)
cmp
pusha
loopne
cli
xchg
inc
xchg
cdq
dec
retf
mov
or
setge
sti
push
inc
jo
and
jne
fmul
fiadd
adc
jg
daa
lods
fst
in
cmp
add
mov
xchg
pop
dec
push
or
stos
and
js
add
loopne
mov
stc
lahf
popa
pop
jecxz
push
cli
cmp
push
adc
(bad)
push
movs
mov
pop
and
dec
pusha
push
icebp
rol
out
jae
in
mov
dec
xor
in
ficomp
dec
and
or
pop
mov
pop
or
mov
dec
in
aas
in
or
sub
movs
in
or
std
outs
test
push
call
out
mov
or
or
mov
mov
inc
test
(bad)
cmp
jo
ja
movs
and
ucomiss
xor
mov
xor
call
fcmovbe
mov
adc
adc
out
xor
xor
dec
pop
mov
into
jo
sbb
sbb
add
nop
add
nop
add
nop
cmp
inc
mov
jg
dec
adc
push
dec
mov
in
fsub
xchg
jg
mov
mov
sbb
add
hlt
mov
inc
cld
add
sub
(bad)
in
pop
pop
aam
push
xchg
arpl
pusha
cmp
setae
shl
fs
cmp
aad
dec
xchg
mov
mov
add
es
push
nop
idiv
cmps
ins
sub
mov
push
pop
dec
ds
pop
mov
les
inc
cmp
cs
push
add
aas
cmp
scas
aas
inc
push
dec
dec
daa
idiv
outs
xor
loopne
add
push
mov
pop
lds
cdq
inc
pop
dec
or
call
shl
add
imul
aas
test
arpl
out
sub
shl
mov
das
(bad)
in
inc
sti
pop
pushf
inc
mov
ins
pop
adc
xor
mov
ja
lea
ins
mov
sub
cwde
lods
and
add
push
stos
fcomp
adc
push
cmp
shl
push
or
lods
and
xor
dec
mov
int3
sub
sbb
mov
pop
sti
cmp
ja
ins
add
push
or
cwde
popa
test
mov
adc
pop
or
cmps
clc
push
inc
outs
mov
(bad)
imul
inc
add
outs
fcomip
or
jo
retf
aaa
sti
jp
in
jno
aaa
mov
(bad)
idiv
push
(bad)
lahf
int3
mov
das
cmp
mov
sti
in
scas
mov
or
xchg
loopne
pop
repnz
lods
enter
mov
movs
xlat
pop
xor
ja
jno
mov
or
and
call
in
sub
unpckhps
into
jg
daa
out
sbb
das
inc
test
cld
hlt
pop
push
test
pop
clc
ja
retf
test
pop
cmps
mov
test
pop
bndldx
fsub
add
sbb
cld
mov
mov
js
or
xor
mov
xchg
rol
ror
xchg
and
std
sub
cmp
push
pop
mov
outs
inc
les
adc
adc
jo
(bad)
or
add
or
dec
cmp
mov
ins
div
in
test
aaa
mov
push
repnz
pop
lods
nop
test
jmp
je
sbb
cmp
xor
jmp
push
inc
pop
add
loopne
or
cmp
nop
jmp
jecxz
scas
out
clc
cmp
mov
(bad)
sub
pop
cld
xchg
popa
sbb
dec
mov
in
jne
dec
xor
jae
sbb
mov
pop
or
cmp
jbe
xor
fdiv
and
or
cmps
in
shl
dec
pop
pop
lahf
or
push
xchg
add
inc
loopne
scas
pop
xchg
pop
test
das
or
add
icebp
dec
loopne
adc
and
xor
push
and
add
fwait
adc
fcmovu
sbb
jne
mov
mov
sub
mul
cs
mov
push
xchg
(bad)
xchg
sti
sub
nop
test
les
and
or
stos
xor
iret
in
cmp
loop
pusha
add
or
sub
jp
or
mov
or
hlt
loopne
mov
xor
sbb
lods
cli
stos
cmps
popa
js
clc
mov
imul
inc
hlt
jg
cmc
push
test
add
imul
lock
icebp
repnz
mov
mov
push
sahf
out
neg
push
out
push
out
pop
in
mov
jnp
in
test
mov
mov
push
iret
mov
fsubp
push
out
push
mov
mov
idiv
loop
jecxz
mov
mov
push
(bad)
test
fisttp
and
test
(bad)
fiadd
fist
sub
int3
xor
pop
or
cdq
sub
jnp
enter
movs
add
push
mov
mov
test
mul
test
test
test
dec
sti
dec
enter
cdq
add
es
pop
cmps
dec
cwde
mov
jb
jns
xchg
add
dec
popa
fld
dec
inc
add
in
inc
or
inc
or
popf
jne
(bad)
in
jle
sub
mov
cmp
leave
and
pushf
pop
pop
or
es
pop
loop
jg
iret
inc
lods
mov
add
inc
outs
dec
mov
sub
xor
cli
inc
movs
cmp
jne
push
movs
xor
(bad)
fstp
fbld
fwait
sbb
inc
ret
add
sbb
and
out
push
mov
cli
add
sahf
xor
or
fisttp
das
push
call
pop
or
jne
mov
loopne
cmc
add
cmp
mov
in
jnp
loopne
jne
add
and
sub
enter
retf
jb
pop
fadd
push
push
nop
loopne
mov
movs
add
dec
inc
pop
inc
jns
ficom
xchg
outs
push
(bad)
bound
imul
xchg
push
js
shr
cdq
arpl
and
mov
or
test
mov
mov
sti
push
adc
cdq
enter
mov
sbb
daa
push
cmps
jo
(bad)
out
neg
ins
je
js
or
and
shl
stos
out
mov
sub
add
sub
mov
add
adc
sub
and
sti
out
test
sub
and
es
cmp
aaa
movs
mov
mov
mov
cld
lea
xchg
(bad)
nop
xchg
daa
xchg
mov
adc
sub
push
inc
mov
mov
mov
mov
mov
inc
push
cmp
lods
mov
nop
sar
ror
fsub
nop
inc
push
aam
fcomp
cmp
adc
out
int3
lock
aam
xchg
clc
daa
cld
add
xchg
add
or
sbb
enter
sbb
pop
fisub
and
fsub
xor
mov
inc
out
popf
xlat
jmp
cwde
das
inc
mov
div
ss
ret
adc
jmp
test
sub
rcl
aam
xor
cmp
cwde
(bad)
retf
sub
sti
sub
mov
fcomp
movs
mov
mov
cmp
jge
retf
ins
test
in
adc
jle
clc
adc
jne
test
dec
mov
ins
adc
out
add
cmp
inc
push
je
push
je
fcom
pop
pop
sar
jmp
dec
gs
rcl
mov
sbb
adc
mov
pop
add
test
and
push
popf
dec
in
mov
or
dec
fadd
stos
shl
test
mov
or
call
nop
add
lock
or
rcr
adc
add
rcl
sti
xchg
pop
push
add
add
xchg
or
sbb
add
sub
add
mov
sub
sbb
add
fwait
sub
ja
cs
jns
push
fsub
aaa
cs
addr16
pop
or
dec
or
or
xchg
cli
sub
jp
dec
sub
call
add
push
adc
cmp
add
jg
ins
out
xlat
push
test
add
xchg
adc
add
mul
cmp
popa
out
jle
or
test
mov
out
cs
inc
xor
xor
enter
mov
xlat
push
xchg
cli
push
(bad)
inc
aaa
and
sbb
or
movs
fadd
xchg
or
add
retf
jbe
arpl
fbld
test
ret
add
dec
add
push
or
(bad)
addr16
lock
xor
inc
(bad)
call
mov
fnstsw
xchg
or
hlt
fstp
daa
movs
fwait
test
or
movs
movs
pop
mov
xchg
and
mov
sub
(bad)
pcmpgtd
je
andps
jo
mov
jnp
push
es
mov
push
pop
outs
sub
mov
mov
mov
outs
das
mov
jl
mov
in
push
ins
scas
xor
inc
cli
push
popa
test
mov
jo
jbe
addr16
call
xchg
sbb
call
push
loopne
sub
neg
das
fs
mov
out
mov
xchg
ret
mov
inc
mov
popa
mov
fild
daa
add
inc
sub
mov
add
push
test
lock
dec
imul
adc
out
jmp
ror
test
dec
clc
cmc
out
into
and
mov
mov
push
mov
or
mov
or
jmp
pop
jg
adc
test
es
add
sub
push
sbb
das
cld
xor
fist
call
mov
addr16
cld
xchg
rcr
mov
mov
lock
out
shr
btc
lock
ins
jns
inc
dec
pop
imul
arpl
or
cmp
loope
int3
outs
jo
call
xchg
outs
mov
and
movs
jl
arpl
lods
mov
scas
push
push
call
mov
lea
mov
sbb
dec
aad
sti
nop
push
mov
mov
push
mov
fwait
xchg
sbb
xchg
imul
cmp
setle
or
and
mov
mov
cmp
vcmpngtps
xor
xchg
inc
mov
sub
jnp
inc
mov
and
xchg
inc
push
loop
inc
xchg
inc
inc
mov
and
ds
dec
add
jp
in
pop
adc
cmp
(bad)
(bad)
pop
test
pop
xchg
dec
arpl
loope
mov
ss
mov
test
jbe
mov
addr16
iret
and
mov
sbb
aas
aaa
fiadd
imul
mov
cmp
xor
(bad)
cs
daa
inc
fdiv
xor
int3
outs
pop
fwait
sti
sti
cmp
push
and
sub
es
xor
fs
iret
les
cmp
pop
jb
in
scas
or
jmp
ins
push
sub
clc
rcl
jbe
js
pusha
sbb
fs
(bad)
inc
mov
mov
int
inc
jbe
int3
ins
jmp
pop
and
sub
xchg
add
icebp
fbld
or
adc
repnz
into
fcom
cmp
div
adc
push
aam
outs
dec
cld
(bad)
ins
fcomp
call
test
mov
test
inc
push
ror
mov
out
sub
std
or
dec
sub
les
sub
ins
in
xchg
in
es
cmp
cmp
enter
mov
out
stc
or
daa
popa
les
call
mov
sub
pop
mov
sti
cwde
scas
je
and
inc
sbb
pop
cwde
add
push
sahf
shr
sbb
fmul
sub
data16
dec
pusha
nop
dec
in
mov
(bad)
sbb
jecxz
or
outs
add
push
xor
add
add
adc
push
ja
movs
mov
xchg
add
inc
push
iret
imul
daa
add
add
or
inc
add
fisub
into
movs
cmp
jne
repz
xchg
xchg
dec
out
push
mov
repz
int3
fsub
in
cld
add
inc
add
add
fbld
aas
sbb
pop
mov
push
and
xor
or
or
inc
enter
mov
push
aas
push
add
pop
mov
aas
pusha
push
jo
inc
jb
pop
or
cwde
mov
mov
xchg
pop
and
shl
adc
inc
jb
add
cmp
push
cs
mov
mov
and
cs
shl
add
inc
xor
aas
inc
jo
pop
and
mov
jnp
add
aas
shl
and
add
pusha
add
push
aas
jo
pop
ins
push
jo
pop
(bad)
aas
or
xchg
or
xor
test
push
inc
add
push
inc
xchg
pop
push
pusha
(bad)
(bad)
jmp
movs
add
int3
enter
enter
fcomp
fxch
(bad)
(bad)
loopne
jecxz
mul
int3
jmp
in
out
outs
jmp
add
fisttp
cmp
(bad)
aas
adc
add
push
cli
or
or
ret
pmulhuw
pop
stc
and
adc
mov
(bad)
jl
imul
stc
add
mov
(bad)
adc
out
xchg
sub
sub
mov
xor
leave
sbb
mov
mov
inc
jbe
imul
cmp
mov
(bad)
mov
(bad)
fcmovbe
(bad)
lods
(bad)
lods
inc
inc
xchg
mov
xlat
fadd
dec
mov
js
xchg
push
or
push
push
jmp
mov
ret
inc
mov
push
pop
test
enter
mov
(bad)
inc
and
daa
(bad)
retf
into
fadd
aas
sbb
pop
(bad)
(bad)
(bad)
dec
dec
addr16
leave
repnz
bound
and
cld
gs
sahf
mov
sub
push
cmps
iret
dec
js
inc
mov
stos
mov
cmp
or
mov
jmp
jg
mov
imul
(bad)
div
jl
xor
cmp
call
(bad)
(bad)
(bad)
dec
jmp
stos
push
inc
mov
push
sbb
sar
repnz
test
(bad)
(bad)
(bad)
call
lahf
nop
inc
pop
stos
clc
scas
adc
(bad)
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
jg
(bad)
jmp
dec
jp
iret
inc
bound
ds
push
cmps
scas
mov
jmp
mov
add
cmp
xor
in
cmp
sahf
xchg
(bad)
(bad)
(bad)
call
lock
mov
popa
mov
fsub
addr16
repz
mov
sub
(bad)
(bad)
call
pusha
les
outs
bound
xor
jb
outs
mov
mov
ret
jns
lods
retf
sbb
add
and
cmp
adc
xor
xor
ss
cmp
inc
inc
inc
inc
inc
push
pusha
stos
or
in
lahf
scas
mov
push
adc
push
or
adc
jns
out
sub
sahf
out
sahf
inc
pop
push
push
out
push
push
(bad)
repz
repz
push
les
rcr
repz
jae
scas
push
clc
scas
push
add
scas
push
adc
iret
pop
sbb
sub
add
popf
jo
sbb
push
sbb
pop
jae
out
jns
cmp
push
aas
push
xlat
or
fcom
aam
pop
jnp
aam
push
mov
push
aam
in
jmp
aam
pop
push
lock
shl
and
or
sub
jne
or
lfs
outs
sbb
sbb
jg
popf
loopne
jo
je
cmp
js
addr16
aaa
das
js
jg
js
or
js
inc
js
js
push
pushf
loope
js
jl
adc
dec
sbb
jo
mov
fild
jl
cs
cmp
lds
inc
outs
jl
jl
sub
jg
jbe
pop
jne
ffreep
and
push
fisubr
fadd
fmul
sti
scas
sbb
push
push
adc
or
ficom
sbb
or
add
adc
and
adc
add
dec
mov
pop
add
loopne
add
sbb
(bad)
(bad)
fisubr
sbb
adc
std
sbb
adc
sbb
push
push
mov
inc
dec
scas
xchg
mov
add
stc
sbb
mov
xor
jle
push
dec
mov
push
add
pop
ds
lds
out
cwde
push
mov
clc
push
les
and
aaa
xchg
or
mov
stos
mov
push
and
and
or
daa
daa
daa
daa
push
movups
sbb
daa
daa
adc
adc
pusha
xchg
test
push
ins
sbb
call
xor
inc
cwde
jnp
xor
cmp
cmp
inc
xor
xor
jns
out
xor
popf
test
dec
xor
imul
dec
xor
mov
add
shl
xchg
dec
add
xor
ss
cmp
sbb
pusha
out
sti
(bad)
inc
xor
dec
and
fistp
dec
xor
xor
fbstp
shl
push
aaa
out
rol
imul
ds
mov
push
push
cmp
lock
aaa
sti
xor
and
js
sti
mov
dec
add
push
cmp
cmp
xor
and
dec
test
xor
loopne
imul
cmp
dec
dec
inc
pop
push
inc
inc
inc
adc
repz
inc
inc
dec
sahf
out
fidiv
jle
xor
xor
out
inc
jno
xor
adc
jns
xor
xor
scas
out
ficom
xor
xor
or
xor
xor
jns
out
xor
xor
xor
ficom
sbb
xor
jno
out
xor
out
ss
ss
sbb
outs
aaa
jle
jno
out
aaa
aaa
aaa
aaa
cmp
or
lahf
push
inc
inc
inc
adc
repz
inc
inc
iret
popf
out
fidivr
jle
cmp
cmp
stos
inc
cmp
inc
inc
mov
xor
jae
outs
and
add
inc
push
inc
pop
aas
push
cmp
xor
inc
dec
xor
jmp
iret
jmp
inc
jnp
inc
push
inc
inc
inc
mov
(bad)
push
fwait
inc
sub
xor
jnp
loope
xor
arpl
dec
iret
jmp
jnp
inc
push
inc
inc
adc
jecxz
mov
inc
cmp
inc
inc
sar
fild
shl
add
inc
mov
mov
and
xor
pop
pop
dec
cmp
jecxz
jmp
cmps
test
inc
or
sub
mov
cmp
jnp
loopne
inc
pop
inc
imul
sbb
cmp
mov
pusha
push
add
aam
push
pop
add
popa
xor
sar
sbb
push
mov
test
rol
pop
es
(bad)
jbe
push
inc
dec
push
dec
push
pop
jns
out
pusha
push
jns
out
nop
cwde
mov
sahf
mov
ror
fdivr
jns
call
repz
sbb
push
adc
and
iret
repz
xor
inc
dec
push
pop
pop
push
loope
pusha
cmps
ret
jo
inc
jmp
punpckhdq
sbb
mov
hlt
mov
loope
pop
and
add
cmps
lock
or
dec
mov
movs
xchg
jae
and
and
or
pop
xchg
dec
in
sub
pop
pop
or
add
fidiv
aam
(bad)
push
pop
or
push
add
add
movs
loopne
add
jg
jnp
add
aaa
add
pop
add
pop
adc
xchg
add
add
add
add
xchg
adc
sbb
mov
xchg
(bad)
adc
loopne
or
add
adc
fsubr
push
pop
or
add
add
ins
das
add
les
mov
or
add
cmc
mov
add
push
das
push
pop
pop
pop
mov
(bad)
add
or
or
and
stc
std
das
or
or
or
or
add
or
ret
cmc
daa
add
add
aaa
sahf
xlat
sub
pushf
push
mov
addr16
jns
or
(bad)
push
sahf
out
sahf
dec
pusha
jl
mov
daa
adc
jns
or
push
sahf
out
sahf
cmp
mov
je
jns
cmp
sbb
lock
scas
cmps
add
(bad)
fild
mov
push
push
sbb
inc
pop
enter
mov
sar
mov
jbe
push
rcr
lock
jbe
js
in
pop
in
push
xor
test
fcomp
mov
jle
push
push
(bad)
clc
lds
in
fidiv
cmp
cs
enter
cwde
das
mov
mov
mov
hlt
push
les
dec
mov
fisub
jl
or
test
das
call
mov
ret
sub
sbb
mov
mov
push
dec
das
dec
jnp
out
lock
and
push
cmp
push
div
outs
das
xor
dec
sub
inc
pop
cmp
bound
jnp
daa
rcr
adc
outs
mov
pop
movs
push
aam
add
(bad)
out
(bad)
daa
lock
adc
es
(bad)
das
xor
pop
ins
lock
xchg
das
jl
enter
push
les
popf
or
scas
jg
stos
inc
repnz
es
pop
jl
stos
cmp
cmp
xchg
push
movs
mov
mov
out
sbb
rol
pop
test
mov
add
pop
shr
cmp
push
xadd
cs
clc
lods
cmps
scas
daa
sbb
sar
xor
mov
push
out
fsubp
adc
pusha
enter
je
push
cmps
inc
(bad)
mov
pop
push
movs
pcmpeqb
out
in
jbe
clc
das
call
in
(bad)
sbb
jg
cmp
mov
sbb
mov
cmovg
mov
pop
sbb
pop
pushf
jl
mov
(bad)
mov
xchg
mov
mov
dec
mov
lods
push
sti
adc
jbe
dec
add
ror
dec
jbe
out
pop
enter
loop
sbb
pop
fmul
loopne
sub
pop
add
popf
mov
pop
outs
cmp
aaa
bound
sub
jg
adc
mov
addr16
cmp
add
sbb
cmp
dec
les
outs
pop
in
mov
add
pop
sub
jg
or
push
pop
jns
hlt
jo
push
dec
adc
int3
jno
pop
jbe
adc
sbb
sbb
adc
jg
sub
jl
pop
pop
scas
test
jl
inc
add
ja
pop
adc
pop
push
pop
imul
sar
sub
adc
xor
je
sub
pop
ins
inc
pop
add
call
icebp
pop
sub
(bad)
sahf
push
(bad)
adc
cld
(bad)
jmp
mul
push
mov
ja
sub
rep
add
cli
push
gs
dec
sahf
nop
clc
inc
sahf
dec
outs
ret
mov
or
jbe
fisttp
pop
pushf
cmps
inc
add
cmp
inc
mov
add
inc
jge
push
inc
xor
xchg
add
sahf
pop
out
add
add
or
or
add
mov
push
jg
icebp
cmp
outs
add
mov
pop
sti
mov
xchg
and
(bad)
(bad)
push
retf
xchg
adc
push
cmp
dec
or
icebp
or
cld
mov
jmp
nop
fs
jecxz
(bad)
(bad)
(bad)
(bad)
cli
jl
aas
jno
inc
mov
pop
scas
scas
stos
movs
in
bound
dec
mov
mov
push
xor
(bad)
(bad)
dec
cmp
jmp
sbb
mov
dec
jge
dec
pushf
sbb
aam
mov
(bad)
(bad)
jl
push
jp
inc
inc
xchg
imul
lds
cmp
ret
(bad)
dec
dec
test
push
sbb
cli
inc
sysret
add
addr16
sub
inc
cs
push
and
scas
sbb
inc
pushf
push
int3
add
fstp
nop
add
repz
(bad)
xchg
push
std
mov
int3
adc
mov
stc
cmps
sahf
out
fcmovbe
push
clc
sub
push
idiv
out
jo
nop
hlt
mov
jns
out
shl
lock
jns
adc
adc
dec
xor
out
sahf
out
out
je
mov
dec
jmp
push
jmp
adc
pop
dec
push
sub
fisubr
mov
aas
adc
aas
add
pop
mov
idiv
push
cld
aas
push
sbb
rol
xor
mov
push
push
adc
fisubr
mov
aas
add
aas
push
in
xlat
mov
jle
sbb
cmps
retf
std
xor
ret
sti
mov
or
jns
mul
push
add
or
iret
repz
add
cmovl
cmp
repz
cwde
adc
fadd
and
push
sbb
sbb
jns
jns
adc
or
push
call
repz
push
or
add
iret
repz
mov
lock
sahf
cmps
jne
fisttp
push
xor
out
jl
pop
mov
repz
push
adc
jbe
mov
push
inc
jo
out
or
sti
popa
(bad)
mov
fisttp
xlat
jmp
mov
scas
(bad)
mov
std
aam
jg
aam
ds
push
fdiv
bound
dec
lds
and
iret
pop
push
int
std
cld
sti
loop
fidivr
jmp
enter
rol
mov
sahf
pop
into
fdiv
out
cmp
push
push
imul
scas
retf
jle
in
push
ror
fadd
loopne
cmp
fmul
neg
dec
push
mov
jnp
add
fimul
dec
adc
pop
jae
push
loope
sub
imul
test
add
das
imul
jae
fucomip
add
hlt
pop
ds
icebp
repz
and
push
jp
jmp
(bad)
into
push
mov
add
lds
dec
das
sahf
psubb
jl
clc
ror
mov
push
rol
xchg
call
scas
jge
add
or
mov
mov
outs
data16
push
call
in
and
mov
jbe
iret
inc
inc
push
shr
ror
inc
push
fadd
jmp
pop
clc
lahf
inc
cmp
add
and
fcmove
push
push
(bad)
js
add
push
jo
sbb
lock
sub
push
mov
and
push
ror
pop
int
push
add
sahf
out
inc
mov
push
adc
add
lock
cwde
(bad)
push
dec
push
out
mov
scas
sub
push
sub
jle
rol
sbb
mov
inc
in
push
rol
push
call
std
out
nop
call
pop
js
shl
(bad)
ror
stos
mov
push
push
cli
into
xchg
jmp
pop
jo
loope
dec
dec
mov
jmp
int
mov
jmp
push
fs
push
stos
int
(bad)
(bad)
icebp
jae
push
int
push
rcl
into
jmp
jle
lahf
call
push
jno
cmp
push
out
push
sub
push
int3
shr
add
push
test
sbb
ds
iret
fimul
retf
push
loope
ror
pop
push
fimul
stc
addr16
push
out
std
call
mov
and
outs
cmovne
adc
outs
or
dec
call
sbb
push
cwde
sti
cwde
pop
push
out
out
scas
out
push
fnstcw
fucomi
push
aad
pop
push
mov
lods
pop
out
push
aas
test
push
retf
or
dec
push
frstor
loopne
test
dec
jle
jle
shr
int3
push
(bad)
pusha
dec
push
loope
inc
clc
mov
inc
sahf
cmp
jb
iret
jle
sub
hlt
outs
push
push
mov
outs
push
out
mov
ror
sub
or
icebp
jle
adc
add
xor
int
push
push
nop
xor
mov
jae
in
outs
push
jg
push
pop
inc
mov
inc
scas
repnz
mov
inc
lock
jo
pop
push
push
fdivr
iret
cs
inc
arpl
push
shl
inc
push
mov
imul
out
or
push
mov
add
out
jmp
push
pop
push
push
cmc
scas
inc
push
jae
mov
and
call
stc
mov
or
xchg
or
mov
stos
mov
add
cmp
test
jl
clc
dec
and
or
cmp
pop
push
xchg
mov
call
arpl
mov
mov
mov
fmul
mov
push
ficomp
pop
dec
adc
ins
adc
(bad)
(bad)
mov
add
push
jg
add
push
or
pmuludq
or
pop
add
jg
adc
add
add
adc
sbb
add
in
neg
retf
or
adc
or
rol
push
fucomi
cmp
call
pop
sbb
and
pop
rol
add
and
movs
imul
adc
ins
enter
adc
dec
jns
mov
cs
push
pushf
mov
lods
mov
fild
mov
dec
and
data16
xor
cmp
inc
outs
jo
shl
add
xor
xor
dec
add
sub
ins
jns
sbb
stos
or
and
jb
and
(bad)
rcr
cmps
nop
call
fisttp
push
cmp
pop
add
imul
cmp
pop
add
add
dec
cmp
das
rdmsr
xchg
add
xor
xchg
add
loope
push
sahf
adc
adc
pusha
pop
jno
outs
xlat
sbb
or
adc
pop
push
jo
mov
or
adc
cmps
or
dec
pop
add
mov
fmul
loopne
push
push
pop
push
sbb
nop
cmps
fdivrp
out
fiadd
cmp
js
mov
pop
adc
push
test
push
mov
or
out
mov
push
push
push
adc
adc
push
je
xor
neg
jnp
enter
fs
and
test
pop
idiv
inc
push
call
sbb
xor
sbb
push
cmp
fcomp
pop
push
ins
push
sub
mov
dec
sahf
neg
jnp
clc
jle
push
push
push
adc
mov
not
jb
xor
(bad)
dec
push
bound
and
loope
repz
push
in
jnp
mov
push
sbb
xchg
inc
jp
cmp
ret
mov
adc
push
sub
mov
lahf
hlt
fidivr
mov
dec
push
hlt
jle
push
push
push
push
mov
xchg
(bad)
xor
jbe
ss
cmp
jnp
dec
push
pushw
es
lods
push
fild
push
inc
push
in
jle
push
pop
push
push
push
pushf
(bad)
out
mov
jle
ds
fdivr
sbb
outs
push
lds
jnp
mov
dec
push
cld
(bad)
out
mov
inc
mov
ret
push
and
mov
inc
jo
push
inc
push
loop
pop
js
mov
push
sbb
xchg
(bad)
jns
cmp
shl
imul
pop
mov
push
bnd
adc
ds
jne
xor
(bad)
gs
and
imul
inc
push
jmp
js
mov
push
(bad)
ins
js
mov
mov
dec
push
cli
pop
jno
lods
jmp
inc
push
mov
lds
push
or
jmp
fisttp
cmps
push
pop
add
or
(bad)
fcom
into
or
mov
(bad)
jmp
scas
or
push
lahf
mov
dec
push
idiv
push
push
sub
mov
push
aaa
ds
(bad)
fsubrp
out
mov
scas
push
fild
push
mov
push
outs
or
lds
aas
push
fdivrp
outs
push
das
push
mov
push
lahf
pop
dec
push
(bad)
dec
test
mov
pop
xchg
shl
icebp
leave
jb
pop
jb
jmp
pop
fnstcw
and
movs
pop
enter
xchg
aad
pop
enter
jb
pop
jb
lods
in
pop
jb
pop
popf
fnstsw
std
ret
pop
enter
jecxz
test
shl
repz
stos
pop
jb
pop
jmp
(bad)
jb
mov
pop
(bad)
cmps
out
pop
enter
jb
pop
enter
pop
jb
pop
scas
out
lahf
and
jb
fistp
(bad)
jle
sahf
pop
push
out
add
dec
sbb
adc
test
push
add
add
mov
ficomp
push
add
(bad)
sbb
and
add
add
push
inc
je
add
sbb
pop
push
popa
pusha
xor
cmps
imul
jg
xor
or
or
cmp
pop
lods
outs
mov
ficomp
in
push
dec
mov
xchg
mov
cvtdq2ps
pop
dec
div
inc
and
mov
and
sbb
in
outs
imul
cwde
pop
jp
pop
(bad)
(bad)
cs
and
je
outs
bound
ins
imul
daa
and
gs
sub
mov
and
fbstp
(bad)
fnstenv
ins
popa
je
mov
ins
cwde
sbb
dec
and
xchg
push
sar
ins
gs
sub
xchg
outs
outs
js
outs
jns
adc
lock
mov
ins
(bad)
rol
jno
rcr
(bad)
fldcw
jg
gs
xor
lock
inc
and
jbe
xchg
sub
dec
ins
jl
add
rcl
jmp
push
sub
arpl
popa
rol
popaw
or
das
(bad)
bound
imul
pop
pop
fisubr
mov
add
jmp
push
stos
popa
cmp
add
movs
adc
xchg
push
cs
dec
jle
push
dec
into
retf
stos
cmp
add
mov
mov
(bad)
adc
adc
jb
adc
adc
dec
test
add
push
leave
call
xchg
test
es
(bad)
sbb
inc
push
jmp
(bad)
call
out
add
jecxz
sahf
xlat
test
ret
push
add
sbb
icebp
jns
out
sbb
push
mov
add
add
mov
push
(bad)
cmps
jb
sbb
push
pop
pop
or
jb
or
or
push
ins
jb
add
(bad)
mov
adc
or
or
or
or
jns
sbb
push
dec
int3
sahf
out
sahf
sub
ins
in
sbb
iret
jnp
jns
fmul
push
mov
cmp
mov
or
pushf
dec
retf
push
ret
cmp
repz
loop
xchg
push
lock
repz
mov
repnz
repz
push
push
push
mov
cmp
repz
stos
push
sbb
push
lock
out
mov
jns
rol
xchg
es
out
cmps
data16
xchg
out
sahf
out
(bad)
ss
sahf
out
sahf
test
dec
into
cs
out
scas
outs
out
push
sahf
out
sahf
out
fidivr
mov
cmp
push
add
and
sahf
out
xchg
push
shl
dec
mov
icebp
ja
mov
iret
repz
sub
iret
repz
repz
mov
inc
cmp
repz
and
cmp
repz
test
cmc
cmp
iret
repz
sub
rep
in
sbb
cmp
fnstsw
sahf
ja
pop
adc
push
xchg
add
push
push
jns
out
rcl
xor
mov
jns
out
jae
repz
out
sahf
or
mov
out
retf
retf
sub
stos
out
sahf
out
imul
sahf
out
sahf
sbb
fwait
fwait
pop
pop
jns
out
fcmovnu
cmp
mov
mov
sahf
out
sahf
pop
pop
xchg
out
mov
jns
out
addr16
sahf
out
sahf
pop
pop
xchg
xchg
push
push
jns
out
xlat
xlat
aaa
aaa
mov
jns
out
ja
div
sahf
out
sahf
pfadd
out
iret
iret
das
das
scas
out
sahf
out
outs
outs
out
out
sahf
out
sahf
pop
pop
lahf
lahf
pop
pop
jns
out
(bad)
aas
aas
mov
mov
repz
scas
push
xor
and
repz
push
xor
push
iret
repz
dec
sub
pop
cmp
repz
add
and
idiv
repz
xor
add
add
ret
and
lock
mov
cmp
adc
push
repz
loope
or
adc
cmp
xor
sbb
push
push
push
push
out
cmp
repz
or
add
iret
repz
add
add
or
xchg
push
sbb
pop
in
call
xor
add
add
inc
cs
or
or
xchg
mov
or
push
sub
cs
setle
jnp
sbb
adc
adc
adc
fadd
pop
sbb
inc
jb
pop
sbb
inc
leave
inc
leave
sbb
loop
cmp
outs
sbb
aas
adc
adc
dec
dec
adc
adc
inc
cs
push
pop
and
and
sbb
add
pop
(bad)
les
dec
or
fwait
or
push
sbb
jns
add
sub
xor
and
mov
jne
inc
shl
push
shr
pop
arpl
push
xlat
or
jbe
ffree
sbb
sar
stos
fadd
jle
jbe
jecxz
mov
sub
inc
xor
xor
inc
pop
push
add
lods
daa
adc
add
(bad)
(bad)
(bad)
jmp
out
mov
les
(bad)
hlt
push
xor
xchg
fs
xor
fdivr
(bad)
(bad)
(bad)
(bad)
jmp
rcl
mov
sub
mov
sbb
dec
(bad)
(bad)
(bad)
push
repz
test
ficomp
jmp
(bad)
mov
hlt
mov
imul
(bad)
(bad)
stc
(bad)
std
in
leave
mov
add
ins
push
arpl
psubd
or
outs
cmp
imul
pusha
aad
jno
mov
inc
aam
dec
std
test
movs
cli
test
xor
(bad)
(bad)
(bad)
(bad)
dec
mov
lods
jecxz
fdiv
jne
fild
or
shr
cmp
ficom
(bad)
(bad)
(bad)
call
enter
mov
and
mov
cdq
xchg
mov
mov
or
(bad)
(bad)
(bad)
(bad)
and
or
adc
stos
sbb
data16
inc
fdiv
jno
add
rcr
mov
mov
movs
in
lahf
xor
mov
js
stc
(bad)
(bad)
jmp
mov
push
loope
or
ins
or
pop
arpl
hlt
push
imul
adc
ins
sbb
xor
dec
(bad)
(bad)
(bad)
fistp
in
xchg
push
ins
jnp
add
shl
adc
cmc
(bad)
fnstenv
adc
mov
(bad)
(bad)
dec
frstor
sub
ror
popa
mov
into
pop
cmp
(bad)
push
mov
inc
movs
fisttp
xchg
fadd
(bad)
shl
jmp
(bad)
(bad)
(bad)
jmp
inc
mov
sar
add
in
add
pop
dec
or
cmp
add
(bad)
jg
add
xchg
or
and
test
or
mov
popa
into
push
(bad)
(bad)
(bad)
(bad)
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
mov
cmp
lods
ins
mov
std
inc
mov
add
jmp
rcr
adc
jae
or
test
fs
ds
or
or
push
in
push
std
popf
dec
xchg
daa
scas
jl
sahf
pop
jge
xchg
(bad)
shl
add
inc
push
(bad)
(bad)
(bad)
jmp
push
(bad)
test
ss
sbb
push
imul
aam
loopne
ror
int3
dec
(bad)
(bad)
(bad)
jmp
fistp
mov
mov
aad
mov
call
xchg
shl
push
repnz
(bad)
(bad)
dec
addr16
cmps
fld
mov
dec
ss
fisubr
or
scas
test
pusha
jp
(bad)
(bad)
(bad)
inc
out
pusha
fist
addr16
mov
jns
imul
and
shr
ss
(bad)
(bad)
(bad)
call
ja
int3
add
mov
das
es
lds
or
sub
mov
(bad)
(bad)
call
xlat
ret
shl
sbb
ret
es
pushf
mov
ins
(bad)
mov
push
or
addr16
jb
push
or
adc
mov
(bad)
(bad)
push
or
mov
xchg
or
out
fdivr
fisttp
aam
rol
clc
mov
(bad)
(bad)
(bad)
(bad)
sbb
int
mov
mul
ja
outs
ja
mov
out
cli
jo
(bad)
(bad)
jmp
dec
cmp
pop
or
adc
sahf
gs
clc
sar
imul
push
(bad)
(bad)
(bad)
(bad)
js
or
push
add
mov
cmp
cmps
not
pusha
ror
imul
(bad)
(bad)
dec
shr
or
inc
lock
aaa
push
scas
mov
fidivr
mov
jmp
(bad)
(bad)
call
mov
retf
mov
cmps
mov
sar
sub
push
mov
(bad)
(bad)
jmp
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
inc
sbb
and
ret
push
sub
(bad)
mov
jge
cmps
pop
push
(bad)
xchg
inc
dec
or
ret
call
hlt
jecxz
dec
(bad)
(bad)
(bad)
push
mov
sub
cwde
xchg
ret
and
push
shl
js
inc
out
popa
push
xlat
(bad)
(bad)
(bad)
jmp
aaa
xlat
mov
sbb
test
sbb
add
call
(bad)
(bad)
push
sbb
ins
(bad)
fistp
inc
aam
push
pop
int
and
xchg
jecxz
lahf
mov
inc
mov
popa
ja
mov
(bad)
(bad)
call
call
gs
fisubr
inc
inc
sub
imul
jo
cmc
(bad)
(bad)
jmp
pop
sub
sub
pop
or
sbb
repz
fbstp
push
jo
(bad)
jg
pop
add
hlt
div
sub
xchg
sbb
xor
pop
nop
sti
mov
(bad)
(bad)
(bad)
inc
cmp
mov
(bad)
jns
jae
dec
call
inc
cmp
ficomp
dec
jns
inc
jle
jmp
sub
push
adc
push
lea
fnstcw
mov
inc
mov
and
xchg
lea
or
int3
pop
dec
xor
inc
mov
outs
retf
mov
pop
mov
mov
lea
push
cwde
xlat
ficom
test
inc
sar
loope
xchg
retf
les
jb
out
imul
push
inc
lahf
test
clc
(bad)
call
adc
push
sbb
adc
and
inc
and
inc
out
and
dec
push
fs
dec
mov
mov
and
cmps
xor
mov
lods
out
(bad)
(bad)
mov
fcom
lahf
ins
mov
xchg
adc
jle
push
(bad)
(bad)
push
jns
das
mov
and
je
or
repnz
dec
push
jo
gs
out
jle
(bad)
(bad)
(bad)
(bad)
(bad)
repz
mov
xchg
rcl
cmp
mov
js
mov
test
(bad)
(bad)
dec
cmp
test
mov
mov
scas
adc
out
pop
push
ins
hlt
inc
int
fldcw
push
ret
(bad)
(bad)
inc
pop
repz
inc
jmp
ja
inc
xlat
ss
push
out
mov
mov
movs
test
call
mov
pop
mov
ja
(bad)
ins
pop
push
dec
sub
or
sub
add
(bad)
(bad)
(bad)
call
add
mov
rcl
xchg
push
(bad)
push
hlt
out
les
fdecstp
aaa
cld
or
scas
test
sbb
inc
xor
push
retf
call
push
outs
sbb
sub
loope
fisub
lds
push
call
dec
in
(bad)
(bad)
push
mov
movs
ret
addr16
test
mov
(bad)
lahf
fdivrp
cmp
repz
jnp
call
(bad)
jmp
cmp
mov
or
stos
mov
sbb
icebp
adc
sub
jae
xor
mov
mov
dec
cmc
shr
add
mov
arpl
lods
(bad)
loope
int3
mov
stc
(bad)
(bad)
call
adc
mov
jo
popf
mov
test
and
pop
ins
cmp
(bad)
(bad)
call
les
adc
sub
dec
add
sar
push
or
cmp
(bad)
(bad)
call
fcom
push
in
xor
cdq
bound
fcom
into
pop
dec
loope
push
jle
(bad)
(bad)
(bad)
call
sub
int3
bound
mov
xor
call
mov
pop
lods
ret
(bad)
(bad)
inc
xchg
dec
ins
das
mov
adc
test
push
and
sub
adc
jns
(bad)
(bad)
mov
(bad)
sbb
mov
mov
in
and
(bad)
(bad)
(bad)
out
out
mov
shl
es
xchg
aas
mov
adc
out
(bad)
(bad)
dec
sar
mov
gs
pop
jle
aaa
or
jbe
dec
div
lahf
adc
xor
aas
mov
and
push
push
add
test
pop
mov
(bad)
(bad)
push
mov
ret
mov
lea
push
adc
(bad)
cmp
(bad)
test
pop
cmp
or
stc
sbb
sub
mov
inc
(bad)
(bad)
(bad)
dec
in
push
ja
pop
sub
das
sbb
fild
sbb
repnz
(bad)
call
mov
xchg
dec
jae
adc
cmp
and
(bad)
adc
mov
pop
loopne
dec
cmp
(bad)
(bad)
(bad)
jmp
cmp
clc
or
cmp
inc
aas
or
cmp
push
add
outs
(bad)
(bad)
(bad)
(bad)
jge
aaa
ss
fidiv
test
xchg
xor
imul
fld
adc
nop
in
and
(bad)
jmp
fsub
leave
pop
sub
and
mov
(bad)
(bad)
(bad)
jmp
adc
mov
sub
fidivr
sub
ds
sbb
sub
call
lods
mov
call
pop
cmp
xor
jb
and
(bad)
(bad)
(bad)
call
jb
pop
je
fwait
aad
js
mov
mov
jg
or
jl
je
jns
push
cli
mov
retf
jp
retf
mov
mov
fdivrp
cmp
nop
clc
push
in
es
xchg
pop
in
ja
add
push
or
(bad)
(bad)
(bad)
(bad)
out
je
arpl
sub
shr
aam
cmps
gs
fs
imul
add
xlat
dec
pop
mov
outs
jns
dec
cld
arpl
dec
retf
(bad)
(bad)
(bad)
dec
sbb
xchg
mov
dec
movs
fstp
inc
scas
lock
inc
test
shl
inc
xor
inc
jae
(bad)
(bad)
call
inc
sub
dec
inc
sbb
push
xor
mov
mov
mov
clc
push
mov
stos
cmp
adc
push
aad
mov
pop
fist
pop
xchg
pop
mov
movs
pop
(bad)
(bad)
(bad)
mov
sti
sub
outs
pop
ins
das
lods
pop
sbb
loope
jno
loopne
iret
mov
fldenv
(bad)
call
out
fsin
out
addr16
in
dec
es
mov
out
push
sahf
mov
in
or
(bad)
jmp
loop
call
mov
stos
jmp
pop
imul
fcom
cld
(bad)
(bad)
(bad)
call
push
push
jmp
sbb
sbb
sti
inc
les
clc
dec
jmp
ret
(bad)
(bad)
jmp
cmp
inc
icebp
xchg
inc
or
mov
xchg
(bad)
test
pop
js
push
aaa
mov
dec
mov
fidivr
jecxz
fstp
mov
shl
cmc
fucom
dec
aaa
(bad)
or
xlat
out
test
(bad)
(bad)
push
mov
aad
movs
(bad)
shl
into
mov
rcr
and
adc
pop
lds
xchg
pushf
(bad)
(bad)
(bad)
(bad)
(bad)
jle
fcmovb
dec
inc
sbb
int3
push
push
ret
xchg
ret
mov
call
dec
retf
lahf
lds
push
leave
enter
leave
je
inc
int3
inc
ins
xchg
sbb
ror
mov
(bad)
jmp
ins
nop
cs
sub
pushf
cmps
xchg
stos
push
fs
repnz
(bad)
(bad)
call
lods
jle
xchg
adc
pushf
mov
outs
mov
adc
xor
(bad)
(bad)
call
pop
pop
dec
mov
or
(bad)
in
popf
or
dec
add
mov
(bad)
(bad)
(bad)
(bad)
dec
mov
mov
adc
fadd
arpl
pop
xchg
(bad)
inc
xchg
mov
data16
stc
outs
movs
stos
jl
jmp
dec
adc
scas
adc
(bad)
(bad)
(bad)
jmp
jmp
cmps
jbe
jne
inc
aas
mov
les
clc
mov
stos
std
jl
popf
xchg
mov
mov
out
push
mov
cmps
inc
mov
int
mov
fcmovne
mov
mov
mov
cmovns
(bad)
(bad)
push
pop
dec
adc
mov
mov
fidivr
pop
pop
mov
(bad)
jg
mov
mov
out
scas
mov
push
xchg
bound
dec
stos
fdivp
pop
imul
lds
loopne
outs
scas
xor
xlat
mov
xor
loopne
(bad)
(bad)
call
arpl
push
sbb
xor
cli
jno
lods
inc
enter
lods
cmps
(bad)
addr16
or
(bad)
(bad)
(bad)
jmp
outs
into
int
jg
xchg
adc
mov
aas
sahf
rcr
xchg
call
jae
lods
and
mov
(bad)
(bad)
dec
inc
jp
ds
xor
mov
cmp
rol
xchg
or
in
xchg
loop
pop
test
(bad)
inc
xchg
fstp
(bad)
iret
aas
sub
xchg
in
jecxz
pop
push
or
(bad)
in
inc
push
clc
sub
les
and
loop
outs
dec
jg
or
(bad)
(bad)
mov
aad
shl
mov
(bad)
lds
xchg
lahf
mov
jmp
daa
sbb
mov
xchg
(bad)
hlt
adc
call
fwait
pop
aas
test
mov
(bad)
(bad)
call
mov
adc
test
lods
loope
jg
test
push
shl
pop
mov
sbb
pop
ja
(bad)
(bad)
mov
adc
shl
cmp
das
retf
jnp
dec
ja
prefetchw
or
inc
push
add
dec
mov
outs
inc
nop
call
cld
jle
data16
sbb
ficom
daa
mov
jmp
inc
add
movs
mov
mov
cmp
shr
hlt
pop
outs
xchg
add
es
(bad)
jg
xchg
inc
mov
das
xchg
in
pop
xchg
sub
mov
pop
clc
or
test
push
mov
(bad)
jmp
mov
fwait
push
add
in
mov
dec
leave
xor
stc
fist
inc
arpl
adc
push
mov
aaa
pop
in
push
loope
inc
(bad)
fcomip
(bad)
call
cwde
call
scas
push
out
aaa
push
clc
inc
add
and
lock
(bad)
js
cdq
scas
xlat
loopne
retf
xor
mov
in
pop
shl
push
mov
inc
aad
in
(bad)
(bad)
(bad)
(bad)
jmp
bound
inc
xchg
out
xor
or
sub
push
in
cmp
pop
cmp
idiv
inc
outs
xor
or
xchg
movs
loope
mov
sub
dec
dec
(bad)
(bad)
(bad)
push
scas
repz
xor
mov
xchg
and
hlt
js
scas
dec
rol
std
shl
inc
sbb
xchg
idiv
sub
sbb
repnz
and
sbb
(bad)
(bad)
(bad)
jmp
xlat
cmc
mov
(bad)
out
mov
pop
push
mov
ret
mov
fld
push
jmp
dec
stc
(bad)
and
push
mov
rol
outs
mov
push
or
adc
(bad)
(bad)
(bad)
(bad)
jmp
into
movs
adc
(bad)
bswap
fst
xchg
test
lods
sub
sbb
and
xor
fdivr
(bad)
(bad)
call
add
(bad)
scas
iret
jb
leave
jae
and
movs
push
inc
xchg
sbb
test
pop
adc
out
dec
jbe
(bad)
(bad)
jmp
icebp
into
lea
inc
fsubr
inc
clc
fs
jns
stc
xor
xchg
inc
fidiv
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
stc
mov
mov
lock
imul
ss
test
(bad)
outs
(bad)
(bad)
jmp
cdq
mov
call
mov
loope
into
cs
out
add
(bad)
(bad)
(bad)
inc
loopne
adc
pop
pop
std
pop
jmp
icebp
and
sub
aam
into
mov
iret
(bad)
(bad)
(bad)
jmp
jg
pop
es
outs
mov
jbe
(bad)
out
retf
(bad)
sbb
loope
push
adc
cmp
test
xlat
imul
stos
pop
mov
jle
cmp
pushf
in
adc
(bad)
(bad)
push
add
sbb
cmps
push
data16
jno
ds
outs
sub
mov
add
xchg
out
mov
(bad)
(bad)
(bad)
jnp
or
sbb
rol
pop
outs
sti
ret
neg
jmp
pop
test
or
(bad)
call
xchg
popa
mov
fdivrp
ja
xor
cdq
or
pop
ins
les
(bad)
(bad)
(bad)
push
hlt
(bad)
xor
push
fisttp
movs
loopne
jmp
mov
mov
sub
(bad)
(bad)
(bad)
jle
jl
out
sub
xchg
sbb
mov
repnz
inc
ficomp
fcmovbe
jge
inc
ins
fucom
jmp
aam
push
sub
push
imul
mov
(bad)
(bad)
(bad)
(bad)
in
adc
pop
dec
arpl
ins
fsqrt
(bad)
arpl
outs
and
dec
imul
in
addr16
(bad)
(bad)
push
add
ror
aam
ror
mov
xor
mov
ins
fstp
stc
pop
cld
(bad)
inc
fsubr
fistp
(bad)
or
pop
fnstenv
lods
push
mov
enter
(bad)
call
mov
mov
mov
mov
and
mov
movs
movaps
mov
or
or
(bad)
(bad)
(bad)
fnstenv
das
outs
jl
pop
push
sbb
cmp
add
jno
cwde
rcr
(bad)
jmp
mov
jno
test
lahf
mov
xor
(bad)
dec
and
or
sbb
or
sub
xchg
fs
xchg
out
pop
add
push
hlt
sbb
popa
bound
bound
dec
ins
push
xchg
in
sbb
movs
jnp
(bad)
(bad)
inc
pinsrw
fld
adc
mov
jl
fstp
mov
sub
repz
aam
gs
mov
test
into
mov
mov
xor
dec
fbld
xlat
movs
rol
ins
rcl
hlt
sti
inc
imul
cld
lods
(bad)
(bad)
(bad)
jmp
inc
fisub
rol
jae
add
pop
fisttp
jno
daa
add
mov
or
adc
or
xchg
mov
and
mov
aam
into
popa
in
pop
fdivrp
push
(bad)
(bad)
(bad)
jmp
fxch
cwde
mov
cwde
and
xlat
test
pop
mov
pop
cs
xor
mov
cmp
call
sub
inc
cmp
(bad)
adc
jmp
or
xchg
cmp
pop
test
push
iret
or
add
(bad)
(bad)
jmp
mov
setae
mov
push
mul
pop
and
sbb
xchg
(bad)
ss
imul
(bad)
push
mov
sub
adc
jp
fisttp
fwait
(bad)
(bad)
(bad)
stc
mov
out
stc
pop
mov
inc
pusha
mov
aad
(bad)
mov
push
fadd
(bad)
mov
fcomip
push
sar
addr16
mov
fisttp
ss
fmul
(bad)
fisubr
add
inc
add
fbld
ret
test
fist
outs
mov
inc
imul
fisub
mov
outs
shl
int3
(bad)
(bad)
(bad)
dec
xchg
mov
add
mov
lds
or
sub
add
(bad)
(bad)
(bad)
call
jmp
sub
sahf
mov
scas
sbb
in
arpl
es
mov
or
push
test
jb
test
add
xchg
mov
jp
jnp
sub
xchg
(bad)
push
cld
ror
repnz
mov
fcmovnu
and
aam
inc
push
icebp
(bad)
call
fiadd
int
mov
ja
sbb
out
punpckhdq
(bad)
(bad)
push
push
cmp
adc
or
sahf
(bad)
clc
bound
rcl
ins
iret
inc
mov
or
(bad)
out
dec
add
push
cmp
mov
cmps
addr16
shl
test
ja
scas
shr
(bad)
pop
(bad)
(bad)
(bad)
(bad)
fadd
or
fdivr
lock
mov
iret
jg
mov
jmp
retf
adc
push
mov
xor
mov
add
push
ficom
and
addr16
std
(bad)
(bad)
(bad)
jp
les
mov
sub
xchg
mov
mov
mov
sub
sar
pop
call
sbb
inc
xor
bound
lods
lds
(bad)
(bad)
(bad)
call
xchg
xchg
(bad)
enter
rol
mov
mov
hlt
fxch
lods
mov
or
scas
jle
sahf
(bad)
(bad)
(bad)
inc
sbb
dec
ret
push
fldenv
adc
jo
popa
out
inc
xchg
cs
xlat
push
aaa
mov
adc
(bad)
(bad)
(bad)
call
test
fwait
add
fld
ja
pop
jmp
aam
(bad)
(bad)
inc
(bad)
pop
push
sahf
xchg
test
mov
inc
and
call
shl
ret
(bad)
(bad)
(bad)
fiadd
gs
scas
stos
inc
inc
lahf
jmp
imul
jbe
std
imul
sub
(bad)
(bad)
(bad)
out
or
or
sbb
ins
fild
repz
pop
pop
mov
jo
jno
imul
sub
(bad)
(bad)
push
mul
sbb
jne
pop
mov
sti
push
test
jns
mov
cmp
(bad)
inc
call
jge
fisubr
cmp
jns
add
ret
(bad)
(bad)
jmp
(bad)
xchg
adc
mov
cmp
lds
or
cmps
(bad)
adc
adc
dec
outs
cli
(bad)
jg
lds
ret
mov
ins
adc
xchg
xchg
push
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
cwde
push
(bad)
int3
test
shl
cli
retf
xchg
jb
xlat
pop
imul
inc
push
mov
pop
dec
test
push
push
adc
adc
jo
cmp
std
imul
(bad)
dec
or
add
lahf
loop
cmps
int3
and
mov
loope
mov
shr
lahf
(bad)
(bad)
inc
mov
leave
dec
and
rcl
jmp
ja
das
aas
jns
call
dec
mov
or
je
adc
xor
dec
lea
pusha
jle
(bad)
(bad)
(bad)
push
out
repz
(bad)
std
ret
rcl
cmp
call
js
cmps
gs
(bad)
(bad)
(bad)
cmp
sbb
or
retf
mov
pop
dec
inc
hlt
ins
push
ins
fnstcw
int
ret
(bad)
(bad)
dec
inc
and
shr
ja
adc
out
movs
add
(bad)
(bad)
(bad)
inc
pop
mov
cwde
pop
ins
(bad)
adc
ss
daa
mov
pushf
add
mov
scas
bound
(bad)
lds
(bad)
out
hlt
push
out
dec
(bad)
dec
xchg
aad
pop
mov
test
xor
imul
retf
shl
lods
clc
pop
sbb
inc
sub
data16
loope
lds
stos
movs
nop
cld
arpl
lods
mov
in
test
(bad)
push
test
es
scas
mov
(bad)
repz
cmp
call
imul
(bad)
push
test
jg
sbb
mov
pop
adc
xor
xor
dec
jo
mov
imul
fsub
xor
pop
mov
retf
cli
xlat
dec
shl
out
stc
add
xlat
in
(bad)
(bad)
out
push
scas
xchg
adc
lea
or
mov
pop
inc
sbb
ins
je
(bad)
(bad)
(bad)
(bad)
aas
les
push
push
test
cwde
inc
jle
test
ror
cmp
hlt
pop
mov
dec
sub
cmps
popf
stos
adc
cld
dec
xor
bound
into
jmp
fmul
dec
pop
push
cli
jle
jnp
sub
sub
xchg
mov
call
mov
fnop
pop
jle
in
inc
gs
dec
xchg
outs
jne
mov
call
(bad)
call
push
aas
gs
jns
(bad)
mov
sbb
mov
daa
repnz
mov
loopne
ror
(bad)
out
and
loope
or
mov
clc
(bad)
push
mov
inc
out
cmp
ja
fsub
push
jle
hlt
out
add
(bad)
call
aaa
test
mov
adc
xor
dec
push
in
ret
add
pop
lods
test
push
retf
ret
lea
(bad)
push
push
adc
psrlw
(bad)
or
push
out
loope
sbb
fs
xchg
push
or
or
inc
cmp
sbb
mov
sbb
(bad)
(bad)
(bad)
jmp
stos
ffreep
sbb
cmc
adc
cwde
call
mov
cmps
adc
xchg
adc
(bad)
call
(bad)
xor
push
mov
in
cmp
loopne
(bad)
sub
cmp
xchg
mov
or
mov
(bad)
(bad)
(bad)
cmp
xchg
cmp
pop
pop
pop
aaa
pushf
jge
xor
sbb
call
xor
imul
adc
frstor
in
mov
cmps
daa
(bad)
(bad)
(bad)
mov
pop
leave
and
dec
and
cdq
and
and
adc
sub
(bad)
(bad)
(bad)
cld
pusha
inc
sub
or
jno
hlt
sub
jbe
cs
enter
mov
shl
div
(bad)
(bad)
call
pop
scas
jb
xor
jbe
dec
sub
jb
aad
inc
jle
fdivr
dec
mov
jge
(bad)
(bad)
dec
bound
jns
je
js
push
xchg
jp
mov
std
ins
mov
xchg
jl
outs
cmp
fisub
nop
jmp
ja
pop
push
call
imul
jg
arpl
popa
sub
push
cmps
xlat
aam
mov
mov
mov
dec
xlat
retf
and
mov
dec
(bad)
jg
add
sbb
arpl
dec
sbb
retf
dec
pop
mov
dec
cwde
frstor
inc
les
scas
inc
inc
dec
test
inc
int
inc
inc
addps
dec
out
inc
mov
push
icebp
push
addr16
jne
ds
mov
or
ror
adc
push
mov
(bad)
call
cmp
pop
and
pop
in
xchg
xchg
pop
sub
add
inc
pop
pop
lods
das
ins
lock
jmp
xor
jno
loop
iret
out
jecxz
movs
movs
cmp
pop
out
fcos
(bad)
(bad)
fild
jp
add
out
in
paddsb
hlt
popa
call
in
(bad)
(bad)
(bad)
dec
mov
imul
rcl
(bad)
(bad)
xchg
ins
sahf
call
test
sti
fdivr
(bad)
(bad)
(bad)
jp
stc
sahf
les
pop
scas
jne
add
dec
bnd
lock
adc
or
cmc
retf
(bad)
(bad)
(bad)
jmp
mov
test
fnstcw
pusha
fdivr
mov
fstp
jecxz
fidiv
mov
(bad)
call
rcr
aaa
dec
in
imul
test
fdiv
shl
add
mov
into
xor
out
push
and
pop
lds
adc
pushf
xchg
daa
(bad)
fisubr
jle
sbb
ret
int3
ret
xchg
dec
(bad)
cmp
rcl
mov
scas
test
pop
lahf
enter
mov
pop
leave
or
icebp
int3
inc
pop
je
xchg
iret
rcl
into
add
jmp
cld
ja
sub
xchg
jmp
ds
xchg
fs
stos
xchg
and
repnz
loopne
cmp
jmp
mov
lods
iret
pushf
cmp
xchg
popf
cli
jns
cwde
mov
and
add
call
repz
mov
pop
mov
mov
sbb
(bad)
(bad)
(bad)
dec
(bad)
and
sbb
sbb
out
(bad)
rol
cmps
arpl
(bad)
(bad)
inc
aad
or
test
mov
into
stos
movs
outs
stc
scas
jmp
jl
sub
dec
(bad)
(bad)
(bad)
jmp
lods
(bad)
and
cmps
xor
das
movs
jne
jbe
mov
inc
mov
cmp
(bad)
(bad)
(bad)
jmp
mov
jae
mov
sbb
mov
cmps
mov
mov
fisttp
cmpxchg
(bad)
(bad)
(bad)
push
mov
mov
adc
test
xchg
pushf
xor
loopne
(bad)
call
mov
cwde
xor
(bad)
mov
or
mov
mov
out
(bad)
bound
push
fdivp
xor
xlat
cmp
or
outs
mov
(bad)
jmp
add
mov
fucom
fbstp
pop
arpl
push
push
sbb
call
(bad)
(bad)
(bad)
cli
adc
jno
jnp
enter
lods
jne
or
into
outs
es
lods
jg
sub
call
xchg
rcr
mov
(bad)
and
xor
sbb
addr16
xchg
shr
push
cmp
in
pop
or
pop
lock
in
xchg
xchg
push
loopne
iret
(bad)
dec
pop
loop
aas
jmp
jecxz
in
fmul
lock
clc
mov
pop
and
sub
sahf
push
dec
jg
outs
test
or
(bad)
call
lahf
ror
and
lds
sub
mov
inc
and
(bad)
(bad)
(bad)
jl
hlt
(bad)
xchg
test
call
cmp
xor
not
adc
iret
push
retf
(bad)
(bad)
dec
mov
ret
pusha
test
jo
out
pop
mov
test
fistp
ret
imul
jnp
das
push
ret
ja
imul
setl
(bad)
sub
(bad)
(bad)
(bad)
(bad)
mov
cwde
cmc
cld
sar
nop
out
push
jle
fidiv
sbb
mov
inc
sub
(bad)
(bad)
dec
mov
cmp
jg
sar
xchg
outs
pop
hlt
cmp
test
(bad)
(bad)
call
xchg
pop
in
mov
pusha
push
or
pop
xor
dec
test
cmps
icebp
iret
mov
inc
cs
(bad)
push
fwait
pop
addr16
daa
jo
dec
mov
(bad)
cmp
(bad)
push
arpl
push
imul
pushf
rol
push
jb
pop
aaa
retf
pop
loope
scas
dec
push
(bad)
cli
scas
(bad)
inc
call
mov
aaa
out
push
add
inc
clc
inc
daa
popf
and
pop
add
push
js
mov
xlat
scas
xor
in
pop
mov
push
in
pop
inc
pop
mov
mov
sbb
bound
and
inc
sbb
jmp
sub
sahf
aam
push
stc
(bad)
push
cld
mov
in
pop
cmp
cmps
(bad)
xor
or
cmp
add
mul
movs
add
sub
scas
cmc
test
and
mov
(bad)
call
xchg
fstp
ror
sar
add
push
movs
not
cmp
(bad)
dec
and
repnz
imul
cmc
xlat
jle
out
ror
ret
add
jp
jmp
fnop
add
push
cld
out
sar
(bad)
and
stc
popa
call
add
fsubr
or
(bad)
inc
fcomp
into
sub
mov
xchg
(bad)
loope
xchg
adc
int
lods
mov
(bad)
cmp
adc
movs
jbe
fadd
data16
jp
adc
scas
dec
jae
fwait
push
movs
icebp
and
sbb
(bad)
std
lods
cmp
jbe
out
push
into
icebp
mov
inc
lea
call
inc
xchg
push
xor
call
std
push
es
jmp
fdiv
inc
mov
bound
fwait
push
(bad)
(bad)
(bad)
(bad)
mov
xchg
xchg
cdq
xor
es
mov
cld
mov
adc
push
ja
ss
(bad)
(bad)
dec
adc
out
mov
loopne
jbe
pop
not
dec
jmp
ds
ins
add
(bad)
(bad)
jmp
aam
popa
inc
(bad)
mov
stos
jle
test
cmp
es
jl
mov
pop
sbb
jmp
mov
push
in
test
adc
ja
mov
ret
add
cmp
cli
and
sbb
outs
xchg
cmps
fidiv
sub
fisubr
(bad)
(bad)
call
xor
mov
mov
push
inc
sar
dec
sti
outs
pop
sub
dec
cld
(bad)
call
xchg
cmps
int3
mov
pop
je
into
jp
mov
push
icebp
push
push
sahf
out
outs
push
outs
jo
mov
jns
out
cmps
mov
outs
gs
popa
jb
adc
or
add
retf
and
sub
(bad)
iret
adc
pop
jne
dec
arpl
and
ins
outs
test
imul
cwde
inc
dec
popa
mov
adc
add
lds
pop
add
fidiv
add
jg
push
fisub
xchg
mov
pop
in
jmp
dec
xchg
jg
loopne
mov
add
js
not
mov
or
pop
cmc
fsubr
push
(bad)
sbb
add
or
fild
dec
mov
daa
add
sub
sbb
rcl
(bad)
lar
scas
or
add
adc
push
sub
add
mov
add
add
icebp
push
sti
inc
sub
add
sbb
sbb
add
add
adc
adc
sar
dec
add
or
mov
or
push
out
aad
mov
cmp
test
addr16
nop
faddp
out
sub
add
out
add
outs
adc
scas
or
ins
icebp
jns
push
add
in
add
dec
cmps
mov
sti
(bad)
pop
add
repz
std
cld
add
fld
mov
inc
cmp
mov
dec
aas
hlt
test
push
add
es
add
scas
cmp
mov
add
adc
sbb
sahf
out
push
and
cmp
dec
out
sahf
out
pop
fs
out
sahf
jmp
push
sub
pop
sahf
out
sahf
je
test
fdivr
inc
test
jl
call
lahf
push
xchg
scas
ja
dec
xchg
xchg
push
mov
jg
outs
cmp
sbb
xchg
push
mov
repz
fdiv
add
adc
jns
out
xor
fs
out
sahf
jl
pushf
test
enter
jns
lock
or
jbe
sahf
out
sahf
xor
pop
push
out
test
fadd
in
in
out
fiadd
push
pusha
ins
js
adc
and
mov
loopne
nop
adc
adc
adc
jmp
es
or
fcmovnbe
cmp
dec
add
or
(bad)
push
push
in
pusha
inc
hlt
add
add
or
(bad)
outs
(bad)
in
in
jbe
push
sbb
add
add
test
pop
pop
add
ror
add
rol
add
adc
ja
loopne
es
out
inc
pusha
add
mov
(bad)
jae
add
outs
inc
or
or
pop
sbb
adc
and
add
or
or
sahf
and
daa
call
(bad)
adc
rol
cmps
mov
pop
dec
add
fimul
push
mov
dec
scas
pop
pop
add
mov
xchg
push
mov
repz
mov
cmc
(bad)
cmp
(bad)
xlat
out
add
add
imul
pop
cwde
or
pop
fild
cld
mov
pop
add
add
inc
loope
jo
push
out
push
setl
mov
xchg
sub
loope
or
pop
sub
adc
cmp
js
outs
push
or
das
jmp
stos
pop
mov
pusha
jecxz
and
movs
push
test
cmp
pop
rol
in
xchg
mov
xor
pop
push
in
add
in
cwde
push
adc
lods
add
push
push
pop
dec
inc
add
sbb
fisttp
fst
mov
push
add
iret
repz
push
test
hlt
sbb
dec
pusha
mov
xor
out
aam
jno
push
out
repz
and
stc
cmp
repz
cmp
(bad)
clc
sub
repz
cmps
pop
mov
cmp
push
test
test
movs
aam
iret
sbb
inc
push
pop
mov
jns
loopne
hlt
sub
push
mov
repz
out
xor
push
sahf
out
jns
jl
loopne
repz
adc
inc
je
fcom
cmp
mov
lods
in
jl
jge
aaa
inc
test
or
push
cmp
jns
add
into
push
js
jns
loopne
in
jg
push
test
sbb
es
mov
cld
lock
jge
cmp
cmp
lock
into
push
mov
fsubp
repz
test
loopne
test
jl
out
or
adc
inc
push
sub
xchg
xchg
pop
test
mov
pop
jg
sbb
std
ja
xchg
(bad)
pop
js
push
add
dec
daa
mov
ins
lods
sti
pop
mov
(bad)
push
cwde
push
mov
clc
mov
or
push
dec
cmp
pop
imul
mov
or
out
inc
add
add
cmp
lods
adc
popa
pushw
inc
repz
repz
push
repz
mov
bound
xor
cmp
std
jg
jge
mov
retf
iret
adc
mov
and
mov
(bad)
push
mov
adc
fidivr
xchg
mov
out
rcl
sub
mov
popf
push
adc
cmp
push
(bad)
sbb
fs
xchg
cs
jb
xor
enter
pop
outs
imul
push
in
jecxz
ret
and
out
movs
dec
jne
inc
test
pusha
ins
add
add
cmp
and
jmp
stos
test
clc
sbb
push
shl
iret
je
lods
rcr
out
sar
adc
cmp
xor
out
pushf
mov
add
and
cmp
repz
je
rcr
jns
iret
cld
sbb
xor
repz
cwde
mov
push
ds
repz
cwde
mov
repz
outs
push
pop
js
lods
int3
sahf
cmps
stc
cmp
or
xor
js
lahf
out
mov
hlt
sbb
fiadd
lahf
out
sahf
sub
iret
repz
dec
jo
sar
repz
or
mov
jl
out
enter
dec
iret
repz
pop
jl
shl
sahf
out
or
push
inc
pusha
xor
in
or
push
push
cli
cmp
repz
enter
cmp
jae
sahf
push
pop
ins
mov
mov
or
scas
push
push
jl
iret
repz
shl
adc
fiadd
loope
cmp
ins
mov
in
adc
push
dec
ins
nop
lods
int3
cmp
icebp
jns
sbb
mov
jo
iret
mov
adc
outs
push
pusha
test
mov
jns
out
push
inc
pusha
mov
in
js
push
ins
mov
jns
mov
in
adc
repz
loopne
push
iret
repz
ss
dec
ins
nop
(bad)
fcomp
sbb
out
ins
mov
out
lods
shl
sbb
push
lahf
out
sahf
push
sub
repz
fiadd
push
ins
mov
fdiv
and
xchg
push
sbb
pushf
int3
in
sbb
push
push
loopne
cmp
jo
enter
fucom
jns
out
push
and
sahf
out
push
push
push
jl
out
push
push
cwde
mov
cmp
sbb
push
dec
je
(bad)
out
(bad)
iret
call
cmp
shl
sahf
jo
mov
cmp
repz
mov
xrelease
jle
dec
js
repz
repz
in
adc
jbe
inc
iret
repz
mov
iret
mov
js
mov
lock
jae
jns
xchg
(bad)
hlt
sbb
pop
es
mov
iret
repz
ins
nop
mov
hlt
adc
cmp
mov
nop
mov
out
out
add
jle
push
js
jns
jge
shl
sub
push
xor
lock
out
movs
shl
and
iret
repz
inc
push
push
repz
mov
js
shl
or
adc
jbe
pusha
sbb
fadd
outs
cs
out
jo
shl
das
into
repz
push
push
pop
js
fsub
jns
and
push
dec
js
lock
pushf
shl
xor
xor
iret
repz
loopne
xor
repz
(bad)
push
dec
jl
mov
add
ss
push
je
cmp
ds
(bad)
in
adc
push
ins
nop
repz
add
xor
iret
repz
add
inc
jns
out
push
cmp
je
(bad)
repz
aaa
jbe
push
jo
repz
nop
movs
shr
add
jle
cmp
repz
cmp
movs
sar
iret
loopne
cmp
push
xor
idiv
repz
jns
out
cmp
enter
out
adc
push
push
push
push
mov
cmp
mov
ins
mov
loopne
cmp
cmp
repz
test
jns
ja
push
push
jo
mov
sbb
call
inc
fs
repz
cwde
shl
jns
aaa
cli
adc
mov
pusha
jl
sbb
mov
mov
repz
pop
je
mov
lock
out
or
push
push
ins
test
out
cwde
enter
inc
repz
cmp
push
ins
mov
iret
in
adc
pusha
sahf
out
sahf
js
lods
enter
jns
jge
inc
into
push
dec
pop
jl
out
sahf
cwde
mov
in
inc
cmps
cmp
repz
adc
call
dec
cmp
repz
jl
mov
jns
jmp
cmp
sahf
out
mov
ja
lock
push
inc
pop
je
jns
out
mov
repz
mov
test
in
dec
outs
push
inc
fs
out
sahf
sbb
cmp
repz
(bad)
push
inc
push
je
sbb
shl
or
(bad)
out
sahf
out
dec
ins
mov
in
sbb
push
ins
xchg
mov
in
dec
into
push
pusha
mov
ds
mov
add
sahf
push
dec
push
mov
cmp
repz
(bad)
call
or
push
push
jl
pop
jl
out
fdiv
adc
push
iret
repz
dec
sbb
cld
sbb
js
out
out
mov
push
dec
fucom
jns
jl
rcr
push
ss
sahf
out
push
jo
fdivr
iret
repz
push
ins
mov
adc
push
push
js
clc
cmp
xchg
enter
out
push
lahf
out
sahf
pop
jl
mov
jns
ja
push
push
cwde
mov
lahf
clc
sub
cs
jo
lods
repz
lahf
out
call
inc
out
repz
je
mov
repz
repz
push
js
mov
iret
lock
mov
out
sahf
test
call
cmp
repz
test
jns
loopne
lock
push
push
mov
in
pop
popa
es
mov
sahf
fdivr
and
push
fs
fsubp
repz
in
arpl
push
pop
ja
out
mov
push
lahf
out
sahf
push
jl
shl
sbb
out
sahf
add
pop
jl
jns
jge
mov
push
push
mov
jge
out
int3
call
inc
jns
out
push
repz
lock
(bad)
push
mov
sbb
push
movs
call
cmp
push
push
xchg
int3
cld
xor
ret
out
ficom
push
cwde
(bad)
clc
xor
scas
repz
repz
ins
outs
push
mov
jns
iret
lock
outs
push
push
mov
iret
repz
push
and
jo
push
jo
(bad)
call
adc
sahf
push
push
jl
jns
iret
repz
push
dec
out
sahf
out
xchg
lods
(bad)
clc
iret
repz
push
nop
mov
adc
push
push
js
loopne
jne
iret
repz
cmps
push
js
loopne
jge
aaa
clc
sbb
mov
cwde
in
ja
cmp
cmp
cmp
jns
aaa
push
push
cwde
mov
ja
out
push
mov
push
push
lahf
out
sahf
pop
js
mov
iret
repz
outs
push
inc
js
sar
repz
jl
push
ins
movs
repz
lahf
out
lock
pop
push
inc
iret
repz
pusha
test
cmp
ds
inc
push
pop
jl
mov
fadd
jg
jg
inc
jmp
fdivr
out
lock
push
js
pusha
aas
lahf
out
in
add
sub
add
mov
in
retf
sub
mov
add
push
add
push
xor
or
fild
or
add
mov
in
sub
outs
add
mov
add
movs
popf
push
shl
fsub
out
sub
mov
and
call
dec
add
xchg
cmp
dec
add
inc
dec
(bad)
(bad)
and
dec
dec
enter
in
mov
in
add
push
add
enter
push
pop
pop
pop
in
cmp
add
pusha
popa
sbb
in
dec
add
data16
and
xchg
xchg
gs
test
add
enter
push
adc
push
pop
add
jb
mov
jbe
daa
xchg
js
jp
daa
daa
daa
jnp
jge
jnp
lahf
mov
loopne
loope
push
adc
std
add
mov
add
retf
mov
movs
add
les
jg
ja
pop
add
imul
add
push
add
adc
adc
adc
(bad)
call
std
daa
sbb
sbb
and
daa
sub
daa
bound
and
dec
and
dec
and
(bad)
push
dec
mov
dec
mov
dec
sub
push
aad
and
jno
(bad)
loopne
stos
ficomp
(bad)
jmp
fisubr
fidiv
fisubr
and
cmp
cs
popa
push
xchg
mov
jle
push
dec
adc
(bad)
sti
(bad)
repz
icebp
push
ror
(bad)
dec
and
stc
(bad)
push
mov
add
outs
call
adc
cli
push
inc
mov
mov
enter
cmp
loop
jecxz
in
in
out
out
call
mov
sahf
or
(bad)
pushf
sahf
sahf
push
(bad)
fcomp
add
sbb
add
outs
outs
mov
movs
aaa
mov
mov
cld
daa
adc
jns
cmp
add
sahf
out
js
nop
push
test
fdivr
lock
push
pop
add
mov
cmp
repz
test
repz
pop
or
dec
and
xor
bound
add
ror
out
cmp
cmp
repz
ins
test
enter
movs
es
sahf
out
sahf
inc
pop
jo
pushf
mov
lahf
out
int3
in
adc
scas
movs
sahf
out
fiadd
push
push
lahf
out
mov
sahf
out
sahf
push
push
xor
je
jns
out
mov
sahf
out
test
pop
je
sahf
out
mov
cmps
(bad)
out
adc
xchg
inc
pop
jns
out
ins
test
lahf
out
in
add
pop
test
popf
test
lods
data16
out
fdiv
or
jns
xor
pusha
je
out
sahf
out
mov
repz
push
inc
push
ins
cmp
cmp
lods
(bad)
fdiv
iret
repz
push
xor
jo
iret
repz
pushf
lods
(bad)
aam
mov
adc
mov
iret
repz
mov
iret
repz
or
mov
cmp
jns
out
pusha
js
movs
fucom
jns
mov
scas
pop
out
sahf
out
xor
pusha
js
lahf
out
sahf
movs
mov
fdiv
add
cmp
repz
jle
sub
push
ins
repz
repz
ds
in
cld
adc
jle
mov
ja
out
mov
push
mov
iret
shl
loopne
or
push
mov
(bad)
cmp
cmp
pop
je
int3
inc
arpl
in
adc
cmp
adc
arpl
push
inc
pusha
imul
or
push
xor
mov
mov
pusha
mov
std
dec
push
and
and
and
and
(bad)
mov
and
addr16
and
sub
sub
jmp
and
xor
and
aas
and
inc
and
dec
and
out
ror
and
pop
and
pop
and
bound
jmp
imul
outs
and
and
jg
add
and
xor
cmp
cmp
and
inc
and
dec
and
mov
push
and
mov
fisub
sub
sub
das
xor
xor
aas
inc
inc
inc
inc
dec
dec
dec
dec
push
push
push
push
pop
pop
pop
add
add
add
mov
arpl
jae
adc
std
jne
jns
jge
add
xchg
add
and
push
xor
ds
es
sub
ins
jne
push
sub
sub
xchg
jo
es
dec
jne
int
cmp
xchg
shr
inc
add
stos
pop
adc
cmps
dec
sahf
mov
dec
out
push
add
ret
push
add
mov
loopne
push
stos
pop
mov
pop
add
push
push
arpl
sbb
or
push
imul
push
add
add
push
mov
push
jbe
js
sub
jp
jl
(bad)
(bad)
jg
jle
add
add
add
and
add
add
add
add
add
push
clc
sub
clc
xor
xor
xor
xor
xor
(bad)
inc
aaa
add
add
add
add
add
cmp
(bad)
(bad)
(bad)
mov
add
inc
add
inc
add
dec
add
dec
add
dec
add
dec
add
clc
(bad)
(bad)
call
push
add
push
add
add
push
add
pop
add
pop
add
add
(bad)
jmp
popa
add
arpl
add
add
push
add
ins
add
(bad)
(bad)
inc
outs
add
jo
jno
jb
jae
je
jne
jbe
ja
js
jns
jp
jnp
jl
jge
xchg
add
jg
and
arpl
sub
int3
jle
push
jns
dec
lahf
cld
sbb
stos
popf
out
test
not
xchg
test
dec
mov
add
inc
mov
(bad)
fdivr
(bad)
(bad)
push
adc
push
push
mov
call
out
into
mov
cmc
sub
xchg
inc
xor
(bad)
inc
fcomp
inc
mov
xlat
pop
mov
adc
std
mov
cmps
and
(bad)
(bad)
(bad)
push
inc
mov
rcl
es
(bad)
mov
pop
adc
(bad)
push
adc
add
sti
(bad)
(bad)
(bad)
call
out
int
and
pop
aaa
ret
xchg
pop
inc
add
mov
outs
mov
(bad)
(bad)
jmp
lea
cli
inc
popa
popf
ins
or
in
inc
jmp
pusha
dec
mov
(bad)
(bad)
(bad)
mov
sub
daa
mov
aam
sbb
aam
in
(bad)
clc
jl
pop
gs
(bad)
(bad)
(bad)
jmp
xchg
jmp
inc
cmps
and
ret
pop
pop
gs
int3
or
jge
out
call
pop
(bad)
(bad)
(bad)
inc
loopne
sub
adc
add
cmp
xor
rcl
sub
loopne
jmp
mov
mov
les
dec
push
and
and
mov
fwait
scas
clc
pushf
push
adc
test
mov
pop
je
(bad)
inc
(bad)
push
aas
mov
mov
add
arpl
pop
jnp
aaa
sbb
mov
out
mov
mov
add
and
and
mov
pop
mov
add
mov
sbb
aas
inc
or
fidivr
dec
or
pop
add
pop
repnz
iret
add
add
or
add
or
jge
add
sub
add
mov
adc
jae
adc
adc
pop
add
dec
adc
mov
addr16
xchg
xchg
mov
mov
pop
and
pop
or
sub
push
add
aas
xor
popa
loopne
cmp
cmp
sahf
out
push
xor
add
inc
xchg
fcomp
push
repz
js
mov
and
in
adc
or
add
xchg
in
das
add
bound
pusha
arpl
lock
daa
test
xchg
and
jno
push
fs
mov
neg
or
pop
ja
pop
shr
je
push
call
mov
inc
sub
ds
mov
aaa
adc
bound
(bad)
std
jp
out
push
stc
icebp
loope
xor
pop
(bad)
cld
clc
stos
std
cmp
lock
cmp
(bad)
(bad)
(bad)
dec
int3
cmp
add
xor
bswap
aas
inc
dec
mov
(bad)
(bad)
(bad)
push
dec
mov
shr
sbb
and
adc
das
out
pop
fbld
ins
pushf
pop
mov
(bad)
call
outs
lahf
pop
or
cmp
add
xor
or
cmp
pop
(bad)
aaa
test
dec
mov
jnp
inc
mov
sub
sbb
and
adc
sub
sbb
daa
out
xlat
test
cwde
pop
movs
fs
push
stos
imul
cmps
addr16
push
add
xor
push
into
inc
shl
or
inc
mov
mov
jle
inc
mov
(bad)
(bad)
push
dec
mov
shr
out
push
fisub
loope
shr
bound
pop
mov
(bad)
call
ins
popf
pop
or
cmp
push
(bad)
test
cmp
add
dec
mov
jbe
dec
mov
jns
inc
mov
sub
sbb
es
(bad)
sub
sbb
and
push
pop
cmps
xchg
push
test
dec
cli
pop
movs
gs
push
out
inc
lds
push
inc
fistp
and
dec
xor
and
jae
(bad)
in
mov
push
mov
sbb
sbb
push
bound
mov
inc
sub
mov
push
sbb
push
and
mov
sti
int
sub
outs
push
ss
and
sbb
or
xor
mov
cmps
push
xor
push
ss
xor
(bad)
aas
out
popa
dec
mov
xor
aas
retf
xchg
scas
out
aas
stos
adc
shl
aas
aas
sub
mov
jmp
jnp
push
loope
pop
stos
jb
push
test
stos
add
mov
ja
je
or
adc
push
imul
iret
cmp
push
and
cmp
repz
adc
cmp
mov
adc
iret
repz
cmp
xor
cmc
cmp
sub
jns
out
push
and
out
sahf
cmp
sahf
out
cs
jns
out
aaa
ds
aaa
fsubr
adc
or
sbb
xor
xor
pop
push
dec
cmp
je
in
jbe
das
or
ret
adc
push
pop
scas
(bad)
mov
adc
and
sahf
out
ins
addr16
cmps
and
ja
and
bound
xlat
ins
fld
scas
outs
jns
or
sahf
js
dec
dec
neg
add
add
dec
arpl
mov
add
daa
pop
scas
(bad)
pusha
lds
xlat
out
inc
aas
sbb
cmp
inc
aaa
sahf
add
pop
pop
jp
adc
cli
add
shl
lods
push
cmp
add
call
add
jge
lods
adc
push
adc
mov
and
xor
inc
mov
adc
xor
xor
sbb
sbb
es
sub
sub
mov
dec
dec
dec
push
push
push
push
push
pop
pop
pop
arpl
(bad)
(bad)
out
(bad)
addr16
jne
ja
jns
add
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
(bad)
(bad)
(bad)
call
cmps
cmps
test
stos
mov
mov
mov
mov
(bad)
(bad)
enter
rcl
aad
(bad)
(bad)
call
xlat
fcomp
(bad)
loop
in
out
call
repz
cmc
div
clc
stc
cli
gs
add
pop
test
gs
cld
pop
or
lahf
adc
push
pop
popa
jno
and
das
adc
or
push
push
lock
add
and
adc
inc
sub
ror
gs
test
dec
push
add
lods
or
mov
pop
imul
adc
loop
dec
(bad)
xchg
into
xor
jg
ins
popa
mov
out
imul
jnp
add
push
cld
(bad)
add
js
fadd
lock
add
out
xchg
or
or
pop
or
or
out
push
add
je
cmp
jecxz
push
adc
sbb
js
sbb
out
push
and
popa
stc
push
mov
xor
adc
test
add
xor
gs
xchg
dec
inc
scas
(bad)
lods
rcl
cld
or
hlt
inc
(bad)
push
lea
cmp
popa
ret
dec
adc
ins
imul
(bad)
mov
add
call
add
dec
or
add
add
pop
jg
clc
ror
sldt
cmp
std
mov
test
push
stos
neg
jg
movs
(bad)
(bad)
dec
inc
push
push
inc
inc
push
inc
loopne
dec
push
pop
sbb
xor
mov
push
ret
inc
mov
dec
or
pop
add
rol
mov
hlt
jmp
call
sahf
sbb
cmp
xchg
jbe
and
sub
data16
lahf
add
cld
dec
jae
push
jae
enter
je
push
xor
xchg
push
push
out
cmp
je
mov
out
sahf
sub
jo
mov
pop
es
pop
mov
mov
loopne
dec
and
cmp
and
inc
cs
push
xor
inc
test
es
and
in
idiv
dec
cs
sbb
fsubr
jbe
mov
xchg
mov
mov
jle
ja
mov
data16
and
or
pop
mov
in
es
shl
dec
cli
popf
iret
rcl
add
arpl
cmps
add
and
sahf
push
aam
lods
xchg
in
outs
inc
and
push
pushf
xor
xor
dec
data16
cmp
cdq
inc
ins
ss
popf
inc
pop
cmp
sub
and
in
mov
imul
mov
xor
sar
pop
pop
push
data16
imul
pop
adc
(bad)
xor
int3
cs
or
call
jo
inc
pusha
jbe
add
imul
dec
adc
cwde
pushf
std
lock
sahf
repnz
outs
les
push
clc
xchg
sbb
cmp
and
push
mov
pop
in
js
clc
loop
adc
test
sbb
outs
(bad)
cmp
jo
adc
aam
pusha
movs
jno
out
mov
inc
test
cwde
xor
pop
sahf
and
movs
out
loopne
sub
stos
push
lock
sbb
jbe
mov
xor
test
add
sub
and
movs
addr16
outs
mov
cs
push
loopne
or
xchg
push
jl
adc
ja
faddp
and
hlt
ss
add
and
push
pxor
adc
hlt
out
mov
sbb
mov
push
mov
neg
jnp
jge
or
dec
push
xchg
push
push
fdiv
cs
xchg
les
dec
call
xchg
call
inc
sub
outs
dec
and
shl
mov
lock
dec
data16
pusha
push
cmp
sub
(bad)
test
cmp
xor
pop
retf
cwde
out
rcl
out
out
and
jl
in
outs
inc
aas
push
xor
push
clc
(bad)
and
push
pop
out
pop
xor
push
mov
out
pop
and
fisub
inc
sbb
int3
ja
lock
(bad)
jl
mov
cmp
dec
adc
mov
out
jns
test
aam
push
aam
pushf
push
(bad)
icebp
push
faddp
mov
mov
or
ficom
sbb
scas
jo
clc
ds
mov
pop
cmp
push
outs
xchg
pop
push
movs
jle
test
out
mov
push
es
mov
mov
jbe
mov
cmp
clc
push
cld
mov
sbb
push
inc
mov
das
daa
scas
(bad)
jnp
loopne
add
nop
(bad)
pop
(bad)
and
push
push
pushf
ja
and
cmp
jmp
aam
div
lods
out
ins
mov
js
fistp
mov
pop
cmp
outs
jle
xor
in
neg
cmp
out
adc
ss
add
inc
or
loopne
loope
dec
push
push
lods
push
call
pxor
sub
adc
aam
or
sub
lea
scas
dec
dec
mov
mov
aam
test
es
jo
loopne
ja
shl
idiv
(bad)
faddp
cmp
ror
es
push
dec
cmps
shl
repnz
pop
nop
fidivr
faddp
cmp
aam
(bad)
dec
inc
out
loope
mov
sbb
mov
dec
mov
or
xchg
jecxz
push
cwde
div
movs
jbe
lock
xlat
adc
outs
sub
sar
inc
push
jo
adc
jle
or
mov
test
mov
dec
jbe
outs
ja
or
pop
imul
mov
dec
push
mov
mov
sbb
es
outs
fadd
rol
xchg
pop
jo
mov
jle
adc
sbb
mul
outs
pop
adc
push
sub
pop
sbb
cs
cs
push
iret
sbb
ds
outs
lock
mov
(bad)
rcr
or
mov
fimul
mov
xor
add
mov
mov
fadd
inc
rcr
push
mov
sahf
mov
les
mov
nop
pop
mov
push
jo
sbb
outs
xchg
(bad)
in
mov
rol
push
mov
loopne
mov
test
add
mov
xchg
clc
push
push
xchg
lock
and
test
lock
div
or
push
in
js
mov
cmp
ds
mov
sbb
dec
call
pushf
sahf
sbb
xor
call
mov
mov
cmp
mov
bswap
sbb
or
data16
in
cmp
js
aaa
push
and
xor
into
mov
shl
mov
sub
xor
or
sub
xchg
sysret
or
or
js
nop
jbe
mov
fsubp
rol
fcomp
mov
pop
add
cmps
and
ja
add
hlt
(bad)
mov
pop
jle
cmps
shl
and
pop
pxor
xchg
jbe
push
push
xor
inc
mov
mov
not
push
and
ins
call
mov
mov
lock
loopne
xor
out
out
loope
(bad)
es
test
nop
out
push
add
mov
inc
out
sbb
dec
jb
add
push
sysret
out
mov
fcom
xor
jp
dec
jg
jl
js
sub
lahf
dec
cld
out
and
mov
jne
ss
into
ss
loope
mov
add
call
cmp
js
push
hlt
xchg
mov
sbb
sbb
js
dec
js
out
cmp
movs
es
adc
push
mov
inc
clc
mov
into
sbb
cs
ret
shl
jo
add
(bad)
sbb
js
sbb
inc
loop
inc
push
adc
pop
inc
je
loopne
cmp
mov
pop
jle
ret
rol
push
test
pusha
es
push
imul
faddp
mov
dec
mov
adc
mov
ins
cld
out
cmp
shl
mov
js
call
dec
ds
scas
lods
mov
in
push
dec
inc
and
push
(bad)
cld
push
mov
and
(bad)
data16
ds
pshufw
fidiv
xchg
inc
enter
jo
mov
lock
push
pushf
mov
cmp
pushf
pop
ins
ss
inc
add
dec
sbb
mov
inc
add
fisub
push
inc
mov
jno
inc
cmp
jle
mov
out
pop
fadd
cwde
(bad)
xchg
rcr
push
scas
adc
loopne
fs
js
pop
(bad)
xchg
data16
add
out
xor
pop
xor
mov
js
mov
stc
daa
jle
ja
jo
mov
outs
adc
inc
xor
push
(bad)
sub
(bad)
movs
aam
dec
enter
push
bsf
jle
int3
es
push
ficomp
cmps
adc
shr
mov
loopne
das
lea
add
dec
mov
out
push
call
lock
cmp
adc
pusha
out
and
(bad)
push
bound
push
or
sbb
sbb
mov
dec
out
push
(bad)
sahf
neg
jnp
inc
sahf
push
data16
fdiv
je
push
push
sahf
add
aam
mov
pop
pop
cmps
scas
not
in
hlt
mov
mov
cmp
mov
push
push
pop
out
mov
dec
push
sar
les
pop
ret
(bad)
push
dec
das
push
sar
mov
rol
inc
test
jbe
out
or
jg
data16
dec
loopne
or
and
ficomp
loope
cs
dec
loopne
fsub
sbb
test
call
js
lahf
(bad)
mov
cmp
push
and
mov
ds
pop
enter
lock
aad
push
mov
inc
sbb
dec
inc
outs
sbb
sbb
xor
cmp
cwde
out
ins
push
lods
popa
mov
in
inc
outs
sub
jnp
loopne
mov
int3
into
xchg
cmps
test
xlat
sahf
out
xor
inc
jbe
pop
out
mov
or
or
xchg
cmp
js
sahf
adc
sbb
and
in
rol
lahf
(bad)
nop
es
ret
enterw
jl
out
lods
sahf
into
and
fmul
dec
sahf
in
je
out
adc
jbe
cmps
lock
(bad)
js
(bad)
fdiv
ds
idiv
fimul
hlt
shr
imul
and
hlt
jg
jge
loopne
in
push
(bad)
cmp
fcom
mov
repz
push
pop
mov
fidivr
into
sub
in
loopne
jmp
call
loopne
push
rcr
outs
lods
jbe
movs
loopne
add
cmps
push
dec
pop
call
cmps
mov
mov
sub
sahf
pusha
pop
xchg
movs
pop
adc
cmps
fild
loopne
aaa
nop
lods
mov
cs
or
inc
fild
add
dec
(bad)
rcr
fdivrp
scas
sub
loopne
mov
rcl
push
into
int3
cmps
cmp
mov
xchg
xchg
add
adc
dec
push
pop
mov
ss
mov
es
(bad)
js
pushf
dec
inc
fs
daa
inc
callw
aad
loop
sub
into
enter
cmp
pop
clc
dec
mov
mov
adc
jle
bswap
loopne
pop
mov
mov
xorps
xchg
nop
pop
push
es
add
cmc
ficom
(bad)
loope
lea
enter
mov
pop
pop
add
out
push
mov
hlt
pop
scas
add
push
xchg
loopne
jns
pop
pusha
into
clc
push
shl
mov
pop
pop
neg
inc
out
loopne
dec
push
fdivr
aas
lds
pop
push
hlt
outs
in
push
dec
out
sbb
pop
cmp
les
push
cld
inc
mov
in
add
dec
outs
out
mov
test
inc
into
lock
js
call
mov
aam
fcomp
xchg
xchg
nop
mov
xchg
js
sub
xchg
jnp
or
pushf
into
hlt
outs
cmp
and
xchg
pop
dec
out
cwde
mov
mov
mov
fimul
or
js
sbb
xlat
(bad)
push
sar
(bad)
jnp
rol
mov
hlt
xchg
cmp
inc
or
cmovle
popf
out
jmp
inc
es
push
iret
loopne
call
mov
mov
(bad)
jnp
pop
push
add
mov
mov
retf
rcr
dec
inc
push
aad
push
and
xchg
push
and
push
dec
push
adc
push
inc
push
xchg
test
xchg
push
push
push
push
dec
test
stos
stos
and
or
push
xchg
test
xchg
push
push
and
stos
stos
and
or
adc
dec
inc
push
push
push
and
xchg
stos
and
push
push
push
adc
dec
inc
push
xchg
push
and
xchg
push
and
push
dec
push
adc
push
inc
push
xchg
test
xchg
push
push
push
push
dec
test
stos
stos
and
or
push
xchg
test
xchg
push
push
and
stos
stos
and
or
adc
dec
inc
push
push
push
and
xchg
and
push
cmps
stc
outs
and
push
clc
mov
add
fstp
cwde
mov
mov
cmp
cmp
sub
leave
repz
jl
sahf
neg
mov
mov
dec
repnz
ss
push
sar
pop
out
xlat
pop
push
mov
nop
fadd
sar
test
mov
xchg
ss
out
cmp
cwde
ss
pop
fidivr
js
mov
ss
imul
sbb
push
mov
mov
xor
add
out
cmp
les
out
jns
out
test
dec
or
enter
lds
mov
add
popa
or
iret
imul
pop
inc
inc
and
inc
adc
adc
popa
xchg
sahf
cmovno
dec
or
lods
clc
in
inc
(bad)
loopne
dec
dec
dec
add
in
dec
iret
repz
aam
movs
mov
cmps
stc
cmp
sbb
call
repz
mov
and
fidivr
(bad)
push
sahf
fist
jnp
aaa
ret
push
mov
ss
pop
pop
mov
pushf
push
jnp
outs
iret
mov
daa
out
paddd
mov
in
idiv
push
jb
call
loopne
clc
adc
repz
jbe
mov
scas
mov
add
sbb
mov
add
jo
pushf
(bad)
inc
ins
jb
add
jg
and
imul
gs
xor
cs
ins
mov
(bad)
fistp
inc
gs
outs
imul
arpl
jae
jb
outs
data16
je
dec
sti
in
imul
popa
jo
pop
push
push
push
push
outs
push
bound
out
fidiv
xchg
push
pop
dec
dec
outs
push
imul
pop
in
inc
inc
jne
xor
inc
je
push
jne
gs
cmp
daa
inc
shr
fldcw
sub
sbb
push
push
outs
fcom
ds
outs
imul
addr16
fucomp
not
jae
popa
ins
xor
ins
je
and
or
cmovno
popa
and
aas
xor
outs
ja
xor
and
sti
addr16
shl
popa
ins
gs
inc
dec
inc
aaa
push
ins
xlat
push
mov
gs
mov
inc
adc
add
and
gs
jns
ins
sbb
push
fs
arpl
arpl
outs
or
loope
dec
inc
adc
jb
imul
or
out
outs
js
push
fneni(8087
loopne
jne
inc
gs
popa
fcom
sbb
pop
cwde
sbb
inc
and
mov
mov
xor
push
je
jo
ins
inc
jae
das
mov
inc
pushf
xlat
xor
iret
sub
mov
push
imul
lods
ds
fist
inc
js
push
add
sbb
push
cli
dec
jo
or
pop
or
jae
daa
jno
jb
(bad)
out
inc
jbe
in
rol
arpl
sti
je
sub
mov
jg
inc
pop
pop
sub
inc
dec
push
dec
inc
push
dec
sbb
imul
inc
dec
dec
mov
ins
jo
shr
fs
xor
bound
add
push
push
inc
mov
enter
xor
popa
cs
push
dec
push
ja
in
sahf
mov
sbb
xchg
dec
push
sbb
push
mov
addr16
push
add
push
inc
xor
cmp
mov
sub
sub
xor
add
cld
jbe
add
dec
dec
inc
jne
cs
add
adc
mov
gs
outs
fs
ins
jo
ins
mov
dec
push
ror
push
jo
movs
push
push
or
test
push
xchg
(bad)
imul
push
push
xor
jbe
adc
js
dec
cld
(bad)
sub
jb
popa
cwde
outs
and
dec
sub
mov
push
imul
xor
arpl
(bad)
(bad)
out
and
cmp
xor
sub
xor
xor
aaa
xor
cs
stos
pop
test
mov
push
push
dec
test
stos
stos
and
unpcklps
add
add
inc
add
idiv
add
inc
add
add
add
inc
push
or
inc
sbb
cld
mov
or
inc
dec
add
dec
add
add
sbb
mov
sti
push
add
inc
add
adc
push
add
mov
push
push
pop
inc
push
inc
xchg
mov
cs
inc
sub
out
jge
pop
cs
jmp
and
dec
or
jl
jg
daa
dec
jns
adc
push
and
ss
jns
add
add
add
out
push
mov
add
add
ja
mov
(bad)
pop
add
inc
jns
iret
repz
data16
jg
add
mov
js
pusha
aas
fisubr
mov
pop
add
pop
pop
(bad)
mov
xor
adc
push
jl
and
jg
jae
imul
pop
aas
jns
ja
das
add
add
sldt
xchg
pop
aas
add
pusha
pop
ret
add
add
or
pop
data16
push
mov
rol
shl
mov
test
jg
jnp
and
add
add
sbb
(bad)
repz
fwait
neg
out
(bad)
cmp
rol
loopne
xchg
cmp
inc
clc
add
inc
cld
pop
mov
(bad)
into
das
lock
pop
xchg
mov
pop
lock
xor
js
pop
std
cmp
lock
add
jl
or
add
jecxz
imul
jo
xor
add
inc
sahf
mov
out
jnp
jne
add
mov
daa
neg
in
add
add
add
push
cmp
jne
adc
add
cmp
mov
pop
or
xor
retf
push
fcmovb
pop
pop
es
into
pop
mov
popa
outs
push
inc
loopne
outs
clc
(bad)
mov
mov
addr16
and
pop
add
add
sbb
xchg
test
add
inc
nop
jbe
fldcw
stos
aas
pop
add
mov
in
add
cld
pop
pop
in
pop
xor
ins
les
test
cmp
pop
push
les
aas
add
add
aaa
add
pop
cld
pop
cmp
mov
mov
add
add
add
aaa
mov
jno
das
iret
std
add
fld
or
push
sbb
push
pop
adc
mov
inc
cmp
rol
inc
xor
sbb
sbb
push
push
sbb
adc
lock
rol
lock
data16
jl
sbb
push
sbb
or
test
(bad)
pop
ss
push
shl
inc
rol
xlat
not
add
out
mov
mov
push
sbb
sbb
add
test
pop
aaa
sub
sti
xor
add
cld
xlat
mov
xor
push
add
push
imul
rol
add
or
popf
test
xchg
push
push
mov
push
dec
test
sub
jg
add
add
add
add
ins
push
jbe
pusha
fucomip
mov
fs
adc
je
or
mov
sti
stc
jae
pop
outs
add
add
add
ja
pop
adc
inc
pop
imul
in
fstp
sahf
je
(bad)
fidiv
adc
dec
add
fistp
mov
addr16
cmp
pop
add
sub
add
push
xor
pop
out
or
add
jb
iret
fsubrp
mov
mov
imul
popa
out
fneni(8087
jge
and
add
add
push
add
stos
(bad)
jae
outs
add
and
adc
jnp
scas
bound
daa
push
ins
ja
int3
gs
je
imul
push
data16
imul
inc
fwait
bound
popa
scas
pop
pop
sahf
sub
dec
jae
or
dec
aaa
jnp
pop
adc
sub
je
inc
add
sbb
outs
test
jae
xchg
fdiv
or
ins
imul
or
in
mov
aas
aas
add
out
(bad)
push
sbb
adc
inc
sub
add
jae
ficomp
cmps
dec
mov
ja
in
cmp
jo
imul
cmp
push
inc
ins
jmp
sub
jmp
pop
cmp
add
adc
inc
ss
push
push
pop
pop
mov
iret
popa
add
cmp
dec
jne
jo
arpl
arpl
sub
mov
out
jae
mov
push
adc
add
jnp
mov
jbe
dec
imul
add
pop
fadd
push
mul
mov
push
test
outs
add
sub
xchg
ja
inc
imul
stos
mov
xor
jb
jns
jge
xor
dec
fwait
jp
and
inc
cmp
and
ins
arpl
js
mov
addr16
cmp
pop
stos
stos
sub
imul
loopne
add
push
cmp
mov
inc
xchg
and
xchg
sub
push
xchg
and
das
outs
je
xlat
cmp
jns
ins
mov
xor
retf
fiadd
adc
outs
push
imul
imul
ret
inc
data16
and
mov
mov
sbb
dec
aas
mov
ins
add
je
jb
sbb
xlat
or
add
ins
loope
sub
add
mov
mov
cmp
push
cmp
add
retf
jae
cmp
add
jo
adc
je
je
popa
aas
je
jge
arpl
add
mov
das
je
rcl
js
je
out
retf
cmp
sbb
adc
jg
ins
mov
jae
js
jne
jmp
lock
jae
jo
sti
ins
inc
pop
test
pop
adc
sub
pop
add
pop
pop
icebp
pop
outs
adc
jp
dec
sbb
movq
adc
daa
ins
(bad)
outs
mov
inc
or
mov
mov
add
dec
or
es
cmps
lock
cs
adc
add
fsubrp
loop
dec
push
push
and
dec
call
shl
pop
movs
sub
xlat
out
xor
push
out
fild
xor
sbb
or
xchg
dec
add
jnp
or
push
cmps
or
inc
fwait
and
rdpmc
daa
mov
mov
imul
sar
stos
jp
cmp
sbb
aad
loopne
and
dec
sbb
(bad)
jp
cmps
test
pop
arpl
dec
sub
iret
sbb
ret
xchg
popa
add
dec
lock
or
inc
leave
rcl
je
mov
push
push
imul
and
and
fdiv
push
shl
(bad)
das
mov
add
sbb
mov
popa
aaa
mov
cmp
sbb
sub
test
inc
mov
je
jne
outs
imul
jmp
push
xor
sbb
pop
test
outs
imul
popa
sti
ret
cmp
outs
(bad)
and
fwait
imul
bound
xchg
call
mov
adc
dec
add
sbb
xchg
push
mov
push
iret
cmp
or
add
add
dec
nop
test
xor
out
in
les
cwde
or
outs
ja
mov
pop
shr
jae
pop
jg
ret
adc
adc
mov
ins
or
or
inc
sbb
addr16
imul
movs
cmp
mov
xor
sub
fwait
sbb
jbe
pop
cmp
xor
sbb
cmp
pop
pop
jae
fninit
push
in
and
mov
lahf
gs
lahf
push
add
inc
sar
cmp
inc
scas
xchg
jo
xor
fwait
push
ja
jecxz
adc
pop
shr
sbb
inc
addr16
clc
pusha
mov
je
and
bound
es
shl
dec
cmp
mov
mov
or
and
add
add
and
inc
or
call
ins
repnz
arpl
or
fcmovnu
pop
push
jo
jns
ss
outs
mov
aas
pop
or
sub
adc
movhps
clc
add
jnp
imul
arpl
dec
or
aam
jg
imul
fs
and
movs
adc
ja
xor
in
or
ret
cmps
xor
mov
xchg
arpl
aas
bound
imul
sub
xchg
js
jge
add
jb
push
jb
adc
and
fs
mov
sub
gs
push
adc
ret
mov
mov
adc
dec
inc
cmp
add
and
pop
loopne
or
add
cmp
or
jmp
mov
movs
pop
jo
ja
mov
sub
mov
pop
and
or
arpl
or
dec
cmp
jae
add
sub
aaa
and
sti
rcl
or
mov
into
shr
mov
sti
xchg
loope
xchg
cli
inc
mov
js
jnp
imul
montmul
cmps
les
jg
out
bound
pusha
mov
jae
ins
pop
call
pop
out
sbb
dec
popf
arpl
xchg
cmp
add
xchg
sbb
xchg
nop
sbb
inc
shl
stos
cmp
movs
rcr
jg
push
lods
shl
or
adc
(bad)
inc
shl
or
aam
outs
jmp
sub
call
push
sub
bound
fisttp
cmp
jecxz
or
add
jbe
sbb
pop
inc
sbb
sub
add
jnp
and
shl
mov
and
fs
and
je
xchg
data16
popa
aad
nop
rcl
or
mov
xlat
push
xchg
xchg
pop
sub
pop
sub
push
pop
lds
loop
dec
jne
outs
or
and
shl
cmp
ins
dec
dec
add
shr
icebp
lods
pop
pushf
pop
mov
pusha
sbb
dec
sti
scas
pop
cmp
and
inc
jne
jmp
dec
fwait
addr16
add
add
rcl
adc
add
ins
jg
jo
call
xor
stos
jnp
pop
push
stos
push
cmp
lods
sub
dec
push
sub
aaa
pop
jo
jo
dec
or
repz
and
pop
outs
jbe
gs
adc
push
jl
adc
cmps
and
aaa
iret
pop
sbb
inc
rol
push
and
push
fild
cmps
and
dec
jnp
xchg
mov
jmp
add
hlt
ror
add
inc
mov
xchg
(bad)
and
cmp
imul
mov
shl
stos
xchg
das
jne
je
push
jecxz
sub
inc
rol
push
xor
outs
(bad)
and
adc
add
xchg
push
mov
pop
sbb
push
pop
mul
xor
lods
cs
(bad)
adc
mov
outs
sti
xchg
adc
adc
or
mov
dec
xlat
jno
pop
retf
imul
or
mov
add
add
gs
rol
test
xor
push
add
pop
mov
js
not
stos
scas
cmp
add
loope
add
push
sbb
mov
mov
push
cwde
push
rcl
fs
daa
mov
adc
loope
push
mov
je
inc
loopne
mov
jp
sbb
mov
rol
or
add
pop
aas
or
gs
shl
nop
and
jecxz
mov
inc
sbb
cmp
inc
add
(bad)
add
xor
les
xchg
jg
mov
loope
pop
mov
or
pusha
inc
mov
sbb
sbb
inc
inc
ret
(bad)
and
adc
add
out
stos
cmp
outs
out
add
cmp
pop
and
sub
cs
fs
ret
add
add
nop
lods
add
and
adc
xlat
jecxz
sub
push
inc
pop
dec
and
jbe
cs
inc
jae
add
adc
cmp
push
adc
sbb
ficom
outs
inc
or
(bad)
pop
push
pop
mov
stos
dec
call
je
or
xchg
add
daa
jb
sbb
loope
add
or
sbb
dec
or
das
jns
xchg
add
and
mov
add
addr16
out
inc
mov
mov
fbstp
fmul
test
add
popa
add
xchg
add
inc
movs
xor
jnp
push
dec
(bad)
pop
mov
inc
imul
add
pop
pusha
imul
inc
push
ss
stos
cli
(bad)
add
inc
arpl
add
xchg
or
adc
repz
sti
sbb
and
add
or
imul
repz
je
jns
mov
xor
shl
xor
dec
sbb
add
jo
enter
iret
jne
xor
cmp
imul
(bad)
(bad)
push
sbb
mov
and
jnp
sub
imul
sub
das
xor
cmp
sbb
je
pop
jae
mov
loope
ret
das
jne
je
and
or
addr16
or
or
and
add
mov
mov
push
sub
push
scas
xor
and
sbb
add
add
data16
pop
cs
popa
daa
jae
mov
push
dec
addr16
aam
sti
xor
imul
scas
and
dec
sbb
sbb
fbstp
jge
xchg
xchg
xchg
(bad)
cdq
xor
jmp
add
cwde
add
cmps
scas
data16
mov
scas
or
push
push
rcl
add
lea
jae
cmp
mov
scas
and
inc
jecxz
rol
or
push
add
push
out
jnp
(bad)
jecxz
mov
out
call
imul
ror
pusha
inc
mov
ja
xchg
add
mov
add
shl
mov
cmp
cli
and
shl
sub
jns
pusha
sub
xchg
inc
dec
mov
addr16
movs
and
ins
xchg
mov
jo
adc
fwait
cmp
push
xchg
and
or
imul
xlat
mov
or
xchg
push
arpl
sbb
mov
jnp
inc
or
jo
shr
sbb
jae
ins
mov
arpl
mov
or
add
sub
dec
adc
push
pop
das
adc
inc
jns
cmp
test
pop
ins
xchg
and
xchg
pop
add
xor
mov
(bad)
pop
inc
inc
idiv
jae
sub
pop
scas
(bad)
popf
add
mov
jne
jae
xchg
inc
dec
inc
outs
xor
jo
xor
dec
pop
mov
pop
jbe
jmp
inc
adc
mov
sub
lea
add
sbb
mov
jne
pop
dec
adc
loopne
push
fld
push
adc
adc
ins
aas
sbb
ja
push
or
dec
inc
xor
repz
test
mov
sahf
dec
jnp
sub
test
outs
xchg
jne
bound
pop
pop
inc
adc
hlt
push
aaa
imul
sbb
(bad)
or
mov
movs
ret
add
adc
scas
mov
ins
xlat
xchg
xchg
sbb
nop
sub
ja
or
add
inc
jae
xor
xchg
add
adc
mov
test
adc
cmps
add
ret
mov
dec
inc
push
lods
lock
jb
je
push
jae
bound
iret
mov
add
imul
push
mov
stos
iret
sub
or
jecxz
xchg
xor
sahf
test
cmps
mov
jne
outs
add
fimul
out
inc
bound
mov
ins
addr16
mov
mov
retf
and
adc
sbb
pop
sub
xor
or
test
addr16
test
jno
fimul
add
or
sub
lea
jnp
call
inc
push
and
(bad)
dec
add
mov
ja
sbb
je
mov
sbb
test
inc
or
ret
xchg
add
inc
ja
int3
rol
or
and
(bad)
mov
push
in
aas
mov
and
and
jb
arpl
dec
pop
fist
inc
fbstp
das
test
dec
pusha
dec
data16
inc
rol
out
inc
inc
jo
and
jle
imul
mov
pusha
inc
mov
test
lahf
and
add
clc
add
add
add
dec
aas
dec
add
sub
mov
jb
pop
pop
jbe
cmps
daa
push
jecxz
mov
push
outs
sbb
jge
inc
add
outs
jg
add
mov
adc
add
les
imul
les
ret
outs
je
mov
sar
jo
bound
sbb
add
mov
mov
add
ins
(bad)
dec
or
adc
and
(bad)
sbb
pop
inc
pop
test
xchg
ins
xor
add
daa
(bad)
dec
or
mov
xor
iret
inc
add
push
out
imul
call
inc
pusha
fadd
dec
jmp
mov
ja
adc
pop
sub
push
rol
inc
pop
xchg
pop
push
mov
inc
cmp
or
adc
retf
addr16
jl
aam
xchg
sub
mov
xchg
mov
aad
xchg
sbb
cmp
push
mov
add
jae
test
dec
add
pop
ret
push
pop
loop
hlt
mov
inc
add
lods
and
jg
sbb
aas
je
pop
push
jae
inc
xor
add
push
(bad)
jb
popa
add
jb
mov
pop
stos
pop
dec
mov
lds
jmp
aaa
fild
stos
je
sub
jns
push
psubsb
or
pop
xor
ins
add
or
or
mov
sub
clc
call
imul
or
or
data16
mov
call
xor
xchg
or
inc
mov
mov
(bad)
or
and
dec
ret
jbe
or
das
mov
xor
adc
push
ja
subps
pop
ret
daa
add
mov
jecxz
push
lods
adc
(bad)
outs
fwait
inc
add
mov
fwait
jo
cli
and
jnp
dec
pop
or
pop
fucomip
sbb
gs
jbe
popf
dec
je
jae
add
or
ret
repz
sub
pop
daa
adc
xlat
inc
push
push
dec
push
or
add
ret
add
pop
pop
or
push
add
add
cmp
push
cmp
sbb
xchg
lock
sub
ror
out
mov
pop
push
and
or
orps
lahf
pusha
int3
sbb
pop
mov
cs
jno
shr
sbb
jg
fs
test
fidivr
fisttp
jnp
dec
or
ja
push
sbb
rol
cwde
push
(bad)
imul
dec
push
test
sti
inc
xor
imul
xor
adc
inc
push
cmp
bound
sar
or
ins
xor
sub
movs
(bad)
aad
xchg
arpl
sub
popa
adc
and
ret
outs
shl
jmp
mov
mov
adc
hlt
les
test
stos
pop
add
pop
inc
pop
add
pusha
mov
jae
das
sub
sub
dec
nop
imul
dec
cmp
stos
jecxz
add
and
mov
push
or
mov
mov
sbb
pop
(bad)
jae
loop
je
mov
add
push
xor
popa
add
sbb
sbb
mov
dec
retf
pop
pop
pop
and
repz
mov
(bad)
adc
add
test
popa
add
ins
inc
imul
mov
push
add
iret
inc
mov
jp
add
cmps
imul
or
jno
jae
cmps
jnp
mov
adc
movs
ret
scas
sub
iret
sub
mov
daa
pop
outs
push
movs
pop
mov
mov
push
add
cs
add
add
or
dec
xchg
popa
mov
mov
sub
rol
mov
or
xor
dec
add
fwait
push
jne
push
rol
pminsw
push
and
sti
pusha
or
mov
xchg
lods
add
adc
sbb
mov
push
dec
jae
rol
jmp
imul
mov
jecxz
add
shl
fisttp
adc
fwait
imul
mov
mov
mov
pop
inc
lahf
daa
push
cmp
pop
xchg
imul
rcr
shr
push
lods
(bad)
mov
test
push
fnstsw
and
mov
test
adc
cmp
push
add
sbb
pop
pop
daa
lahf
fwait
jo
add
cmp
add
pand
mov
or
and
jnp
jecxz
push
test
push
cmp
push
mov
dec
add
shrd
ins
jg
ins
add
mov
or
outs
das
dec
pop
xor
or
inc
outs
add
(bad)
jo
add
je
bound
and
inc
sub
pop
add
jmp
lock
jae
add
or
xlat
mov
outs
sub
and
or
scas
and
add
(bad)
mov
or
ret
ja
mov
push
sbb
push
loopne
adc
fild
add
xchg
sub
sub
and
mov
or
dec
add
bound
mov
movs
sbb
mov
add
test
add
push
push
mov
pusha
cwde
add
sub
ret
adc
and
ror
adc
mov
or
sub
xor
inc
fadd
add
pop
(bad)
adc
add
adc
xchg
mov
push
bound
(bad)
jnp
imul
push
add
gs
fcom
lock
xchg
ror
jae
mov
shl
cmp
push
sub
dec
add
push
dec
push
xchg
jg
push
xor
fadd
xor
add
push
add
mov
ss
mov
in
pusha
xor
mov
outs
imul
ja
aaa
(bad)
lock
ret
dec
xor
dec
cmp
scas
loop
mov
mov
dec
pop
les
xor
jo
pop
shr
dec
xor
dec
(bad)
push
add
stos
dec
or
adc
mov
and
call
ja
outs
mov
fbstp
adc
inc
xchg
mov
add
adc
stos
add
jp
add
les
lahf
je
mov
add
ror
push
mov
pop
ret
imul
or
push
ret
add
neg
jmp
push
scas
and
outs
cmps
dec
loope
sub
jne
xchg
push
shr
mov
mov
arpl
shr
mov
sbb
data16
sbb
push
scas
push
popa
pusha
pop
lahf
cmp
jmp
xchg
dec
jno
push
xor
lods
or
lds
daa
fisttp
adc
push
add
loopne
ror
and
add
dec
add
xor
jg
adc
test
push
adc
push
and
pushf
push
mov
or
add
sub
xor
pushf
or
aaa
push
push
mov
mov
cmp
add
cmps
fadd
or
mov
xor
fidiv
jae
imul
les
loopne
scas
iret
inc
fimul
push
or
fisttp
enter
cmps
pusha
push
mov
scas
push
jmp
aas
mov
fwait
iret
and
and
clc
jb
outs
or
les
add
outs
cmps
add
scas
dec
shr
and
repz
loopne
and
inc
sbb
add
shl
xor
jae
push
add
repz
fwait
lea
sbb
and
arpl
mov
outs
pop
mov
mul
dec
add
adc
adc
add
imul
xor
add
dec
jmp
outs
outs
add
(bad)
sub
push
jg
adc
pop
pop
adc
sbb
fwait
jae
sub
sbb
inc
sbb
test
cmp
in
(bad)
jae
sub
and
lods
push
dec
and
or
xor
push
aaa
or
pop
xor
lahf
pop
pop
xor
sub
(bad)
aaa
pop
mov
fadd
jb
pop
pop
pop
inc
loope
daa
mov
jmp
sbb
mov
pop
addr16
shr
ss
push
and
inc
sub
pop
lock
sub
push
inc
inc
shl
xchg
push
pop
outs
pop
push
add
xlat
adc
pop
push
jge
outs
retf
dec
push
inc
sub
push
add
xor
pop
aaa
push
lods
inc
mov
mov
jb
not
adc
inc
add
mov
test
mov
adc
jbe
mov
test
stos
xchg
sahf
add
and
jb
push
or
adc
add
xor
sub
ins
adc
aas
addr16
arpl
dec
jb
add
adc
inc
les
ins
add
inc
pop
xchg
add
pop
cwde
xor
push
daa
ja
xor
inc
imul
test
sub
push
mov
psubb
inc
sbb
or
push
xor
inc
aam
dec
inc
dec
push
or
sub
ja
mov
add
jae
adc
punpcklwd
ret
xchg
popa
mov
adc
pop
iret
fild
test
das
mov
xchg
sbb
popa
sub
imul
inc
or
pusha
cmp
stos
jb
jbe
jmp
mov
sub
out
inc
mov
shr
and
add
jecxz
loopne
add
daa
lgs
mov
int
jne
out
add
add
dec
jbe
add
jae
daa
sbb
mul
add
push
cmp
test
jnp
push
js
or
imul
lods
and
xchg
das
imul
pop
add
add
imul
inc
inc
imul
sub
xor
adc
add
outs
add
stos
add
jecxz
test
je
inc
mov
nop
sub
and
sub
mov
xlat
rcl
cmp
or
nop
mov
lods
push
and
addr16
mov
or
shr
lods
ret
mov
dec
and
mov
aaa
xchg
dec
add
push
sbb
pop
outs
add
mov
mov
jecxz
pop
loopne
repz
jmp
add
sub
mov
js
aad
inc
imul
je
add
or
outs
add
xor
mov
xchg
jae
sbb
daa
imul
lock
fwait
add
and
and
shr
mov
mov
pop
addr16
mov
ja
mov
adc
aas
sbb
pop
pop
adc
adc
push
push
add
mov
and
pop
or
pop
movs
jnp
pop
(bad)
stos
ins
add
push
push
ret
ret
adc
les
add
outs
push
and
bound
aam
mov
mov
add
push
lahf
push
sub
push
sbb
inc
inc
add
add
sti
cs
mov
adc
add
pop
push
test
add
loopne
sbb
mov
xor
sub
sub
loopne
sub
ins
add
ins
add
adc
(bad)
bound
adc
inc
inc
and
imul
iret
dec
daa
ret
pop
aam
mov
add
pop
dec
xchg
lock
gs
push
push
jge
add
sub
or
add
lea
inc
and
xor
xor
out
lds
out
imul
cmps
push
push
(bad)
dec
push
adc
loop
inc
mov
outs
add
adc
shl
ret
fistp
add
add
push
add
jo
adc
cmp
xor
das
jle
pop
or
add
add
adc
dec
(bad)
sbb
add
add
inc
xor
xor
and
or
adc
call
inc
and
or
mov
popa
stos
scas
jecxz
push
and
inc
mov
add
dec
pusha
jo
or
aaa
jbe
mov
push
add
xor
push
pop
inc
aaa
xor
inc
call
dec
aas
jno
mov
dec
xlat
mov
fwait
or
and
and
fwait
xchg
and
je
push
jae
mov
(bad)
test
cmovs
loope
rcr
adc
jae
not
pop
pop
mov
pop
and
dec
dec
(bad)
push
daa
inc
jb
adc
jae
add
and
xchg
adc
pop
outs
arpl
cmp
inc
pusha
addr16
stos
sbb
push
iret
add
mov
aaa
stos
mov
ret
add
or
iret
popa
jo
dec
daa
sti
ret
sub
cmps
pop
cmp
dec
pop
popa
pop
xchg
popa
push
das
rol
jb
pop
call
addr16
inc
das
aam
out
arpl
jns
cmp
iret
dec
mov
iret
sbb
sbb
adc
addr16
push
pop
add
sbb
dec
pop
ret
or
dec
daa
jp
add
mov
movs
(bad)
test
lods
sub
outs
xlat
ja
sub
or
sub
inc
or
test
and
or
(bad)
(bad)
inc
adc
arpl
lods
add
scas
stos
ret
ret
retf
clc
push
inc
jecxz
(bad)
outs
add
adc
bound
adc
push
jo
mov
stos
or
add
push
(bad)
popa
mov
xor
inc
and
in
jo
xchg
mov
adc
sti
les
add
adc
and
sub
mov
iret
daa
ror
mov
pop
and
outs
fld
xor
pop
mov
mul
inc
out
mov
shl
out
fadd
mov
imul
add
adc
dec
dec
mov
add
loope
shl
shl
push
imul
push
xchg
jae
jecxz
add
dec
cmp
xchg
pop
es
repz
jmp
and
jmp
cmps
test
mov
loope
fmul
add
sbb
add
mov
scas
pop
sbb
add
stos
test
pop
sbb
sub
pusha
add
add
and
call
scas
daa
jae
push
push
mov
mov
bound
retf
xchg
cwde
movs
xor
ja
daa
or
cmp
pop
push
outs
xchg
pusha
dec
movs
pusha
cpuid
xor
sbb
inc
sub
xchg
inc
mov
dec
add
ret
sti
daa
xor
loop
sti
adc
mov
add
out
inc
shl
jne
jp
sbb
push
pxor
sub
xchg
and
adc
fist
mov
dec
shl
and
popa
add
inc
add
or
add
outs
or
sub
and
aaa
adc
adc
and
adc
jecxz
fild
mov
dec
stos
imul
fsub
mov
(bad)
jae
xor
adc
popa
fwait
movs
sub
aas
sbb
fmul
(bad)
jnp
mov
add
add
xor
add
arpl
aam
sub
xchg
out
mov
daa
ret
push
test
gs
repz
push
jnp
pop
lods
(bad)
pop
es
add
add
mov
xchg
push
add
fwait
xor
pop
jbe
call
sbb
add
call
pop
pop
movs
dec
iret
out
jnp
inc
sub
cmps
add
mov
inc
push
not
daa
mov
stos
ret
and
arpl
(bad)
sbb
mov
fisttp
sbb
int3
pop
and
add
inc
(bad)
xchg
mov
xchg
cmp
mov
cmps
mov
fist
or
add
sbb
outs
scas
pop
fist
inc
or
jmp
imul
and
aaa
mov
and
push
and
xchg
jae
inc
mov
scas
xor
sub
dec
push
lds
test
or
das
and
fstp
scas
pop
dec
push
iret
lahf
das
add
add
add
out
and
bound
aaa
sar
push
mov
xchg
mov
test
add
jne
mov
dec
xor
popa
push
(bad)
outs
or
dec
mov
ja
(bad)
or
and
inc
or
pop
push
adc
loope
jae
test
das
fstp
jecxz
mov
test
ret
shl
add
sbb
fwait
sti
jne
arpl
pop
mul
(bad)
test
sbb
lock
fld
sbb
adc
and
sahf
arpl
cmps
add
inc
and
pop
mov
or
dec
arpl
or
fwait
pop
cmps
scas
sbb
stos
mov
add
or
(bad)
sti
mov
ja
and
mov
jae
(bad)
aad
pop
dec
aas
or
or
push
scas
pop
jg
ret
outs
xchg
adc
dec
ins
xor
add
mov
sbb
aas
daa
push
add
cmp
inc
pop
es
add
adc
add
sbb
xchg
test
jg
xchg
test
fld
dec
xor
int3
inc
cmp
push
add
sbb
add
push
mov
call
pop
push
or
mov
push
inc
outs
aaa
loope
imul
fsubrp
push
jo
inc
xor
pop
add
pop
sbb
mov
or
add
and
add
(bad)
scas
sbb
inc
jmp
push
data16
icebp
ja
add
add
daa
pop
test
add
sub
js
jo
test
inc
icebp
jae
sbb
ret
retf
add
add
xor
xchg
dec
cli
idiv
arpl
add
xor
(bad)
sbb
mov
mov
add
jb
sub
jmp
push
pop
or
pop
mov
pop
sub
add
sub
jecxz
pop
stos
das
mov
imul
inc
push
scas
xchg
(bad)
xchg
test
adc
add
stos
xchg
pusha
mov
rol
pop
inc
add
sub
jo
dec
jae
inc
sbb
jmp
xor
gs
jne
int
loope
ins
pop
imul
das
xlat
xor
and
xor
xchg
push
popa
in
cli
dec
xor
ins
es
aaa
fild
or
mov
dec
sbb
adc
adc
add
sbb
repz
xor
sub
inc
inc
bound
jecxz
jp
adc
mov
retf
sub
push
sti
xchg
jae
and
jg
add
xchg
inc
fs
addr16
xchg
sbb
pop
ror
push
sub
pop
add
jo
pushf
mov
ds
dec
popa
mov
sub
push
push
add
or
jmp
pop
hlt
xchg
inc
add
stos
ins
mov
pop
pop
mov
dec
repz
ins
add
xor
fwait
mov
psubusb
cmps
ja
(bad)
mov
dec
mov
and
addr16
add
add
and
adc
mov
sti
xchg
fwait
mov
jae
arpl
jne
scas
add
outs
pop
dec
sbb
sub
(bad)
and
xor
sub
pop
jne
pop
and
push
aaa
addr16
outs
add
(bad)
pop
add
mov
push
daa
lahf
shl
xor
or
sub
test
xor
daa
or
pushf
jo
das
(bad)
mov
mov
cmps
or
dec
fld
pop
nop
ret
(bad)
iret
(bad)
out
pop
test
mov
sti
jnp
push
and
lods
push
arpl
ror
pop
adc
jle
shl
jg
fwait
scas
push
inc
bound
sub
xor
sbb
retf
scas
cmp
sbb
and
scas
pop
jae
or
sbb
rcr
jnp
add
or
pop
push
dec
rol
adc
test
ret
push
pop
inc
js
pop
push
sbb
push
sub
dec
test
inc
mov
add
push
or
adc
or
clc
sbb
dec
add
and
nop
cmp
out
xor
lock
mov
ret
sti
and
ret
or
jmp
adc
retf
imul
and
jbe
sar
cmp
arpl
or
sbb
test
imul
jo
adc
add
add
jne
jg
xor
jnp
or
push
dec
and
test
ds
or
add
daa
sbb
mov
dec
das
jb
sub
inc
fisttp
add
adc
add
mov
adc
outs
jmp
inc
and
sti
xor
arpl
lea
xor
sbb
mov
push
jne
dec
inc
lea
popa
(bad)
mov
aaa
dec
add
inc
xor
das
not
cwde
and
inc
push
add
mov
sbb
out
pop
in
inc
push
lahf
out
xchg
add
pop
pop
add
xor
pop
pop
or
push
dec
add
add
and
jnp
aaa
data16
add
push
xchg
xor
sbb
in
mov
popa
and
daa
aam
adc
sti
inc
push
push
pop
pushf
sti
xor
pop
arpl
aas
xchg
es
(bad)
sbb
add
pop
add
jmp
out
add
outs
ja
add
fist
pop
add
sub
jo
cmps
hlt
aaa
pop
aaa
add
pop
rol
dec
sbb
add
xor
dec
push
push
pop
mov
cmp
add
dec
inc
add
inc
push
sub
lods
(bad)
mov
aas
adc
sbb
xchg
daa
push
add
add
add
outs
cmps
pop
test
cmp
shl
add
fisttp
add
jecxz
add
jmp
jne
and
sub
add
add
adc
(bad)
les
lods
mov
xor
aaa
mov
inc
jo
ja
or
loopne
mov
aas
add
xor
push
and
xor
push
push
dec
inc
ret
jb
imul
popa
add
ja
adc
sub
addr16
xchg
xchg
inc
add
push
or
adc
add
stos
jnp
add
jo
sub
sbb
dec
es
add
adc
push
pop
dec
pop
pop
mov
ud0
dec
add
mov
test
xchg
sub
add
xlat
jo
imul
pop
xor
imul
mov
jbe
sbb
push
push
xor
and
mov
fild
jno
adc
data16
xor
aam
test
retf
dec
sub
or
fild
xchg
aas
adc
clc
inc
or
inc
ja
inc
add
jg
retf
inc
mov
mov
(bad)
adc
inc
sbb
cmps
push
add
pop
push
ja
inc
sub
push
aaa
and
mov
xor
daa
push
pop
dec
pusha
pushf
or
inc
inc
or
and
jno
sub
mov
test
pop
and
stos
xor
sbb
jb
mov
inc
add
movs
outs
outs
add
push
mov
add
push
pop
mov
jmp
mov
mov
sbb
pop
push
xchg
bound
inc
stos
daa
or
popa
pop
imul
into
add
push
mov
jle
out
add
fistp
daa
cmp
shr
xlat
push
inc
sbb
jmp
cmp
mov
pop
arpl
adc
cmps
adc
shl
rol
sub
xor
(bad)
in
xor
inc
add
arpl
jo
stos
outs
add
jo
jb
jae
dec
add
xchg
sbb
movs
and
and
dec
add
cmps
fwait
test
dec
mov
push
ffreep
es
pop
test
ja
fcom
push
(bad)
sub
push
or
inc
lock
iret
jb
dec
sub
and
and
adc
and
mov
adc
xor
push
add
mov
jae
add
sbb
das
jae
arpl
loop
sub
or
or
mov
sub
push
arpl
das
pop
mov
dec
pop
adc
and
xchg
pop
add
inc
bound
adc
outs
pop
and
outs
push
out
push
sti
imul
push
(bad)
mov
bound
imul
or
xlat
setae
or
inc
mov
(bad)
inc
mov
imul
push
addr16
rol
xlat
sbb
push
add
or
and
jno
adc
inc
add
adc
pop
pusha
pushf
rcl
out
push
xor
addr16
inc
adc
xchg
test
loop
mov
(bad)
imul
xor
inc
sub
inc
dec
add
imul
xor
inc
mov
or
mov
loopne
aad
jnp
add
(bad)
adc
add
push
aam
dec
sbb
push
jae
xor
bound
add
pop
sub
ret
fild
inc
xchg
push
fwait
lock
loopne
add
push
daa
push
xchg
cmp
ror
ja
mov
mov
or
out
out
lods
or
pop
or
mov
outs
sub
and
adc
lods
and
fist
hlt
and
bound
(bad)
test
adc
inc
push
add
aaa
push
pop
inc
aam
jnp
add
mov
outs
add
adc
popa
dec
sbb
popa
loope
jae
xchg
outs
pop
call
inc
adc
push
movs
push
dec
add
test
addr16
sub
sbb
sbb
xor
fsubr
(bad)
outs
jae
ret
adc
cs
das
inc
mov
and
xchg
(bad)
dec
sub
or
out
and
inc
inc
sub
ins
repz
mov
pop
adc
imul
add
bound
add
mov
adc
dec
add
or
and
pop
mov
push
push
data16
mov
or
add
push
mov
daa
arpl
shr
lahf
pop
test
cmps
inc
push
xor
adc
mov
jbe
push
sbb
sbb
dec
adc
adc
xchg
add
or
sub
inc
and
push
push
cmps
xor
or
dec
add
jp
push
fwait
mov
sub
jg
adc
cmp
mov
xor
mov
sar
add
lea
(bad)
sub
adc
jae
push
call
xor
or
xchg
and
cmp
sub
daa
add
xchg
and
imul
mov
out
dec
mov
push
sahf
xor
fisttp
imul
call
mov
xor
and
xor
and
stos
add
jg
push
ss
scas
xchg
rcl
jmp
and
daa
shl
mov
cld
xchg
mov
xor
add
push
mov
push
in
mov
push
scas
pop
push
jne
pop
das
pop
pop
push
outs
fld
std
adc
jnp
pop
xchg
arpl
outs
daa
or
ret
ret
aas
iret
inc
and
add
sbb
ret
bound
pcmpgtb
aaa
sbb
xor
pop
jge
add
add
add
push
rol
jne
pop
sbb
xor
mov
add
pop
lock
add
push
movlps
ins
ja
add
fld
in
adc
ins
stos
sti
push
pop
lock
aas
or
je
mov
jbe
pop
pop
outs
pop
or
inc
xchg
sbb
mov
and
arpl
jno
icebp
repz
imul
(bad)
repz
inc
add
sub
and
mov
sbb
and
or
mov
aaa
pop
popa
xor
sub
add
pop
push
dec
pop
xor
or
jg
je
and
aas
jne
dec
adc
nop
fisub
and
xor
dec
mov
pop
pop
fsub
jmp
sbb
and
inc
dec
add
pop
pop
je
jmp
xchg
add
inc
outs
add
add
(bad)
cwde
dec
(bad)
aas
sub
adc
aad
outs
sub
push
and
xchg
out
bound
jno
fild
arpl
xor
sbb
das
mov
mov
sub
test
outs
xor
sub
lods
dec
ret
mov
dec
sbb
mov
mov
jae
pop
add
push
cdq
cmp
mov
scas
sub
sahf
fimul
popa
arpl
cmp
test
adc
fisttp
add
aam
and
pop
aas
ins
bound
fisttp
bound
rcl
test
cmp
inc
test
jo
ret
lock
pop
call
inc
sub
sbb
or
push
and
xor
pop
in
add
sub
add
pop
jo
es
push
add
push
pop
xor
or
icebp
push
(bad)
imul
mov
dec
add
(bad)
aas
sbb
xchg
sub
or
xchg
and
inc
or
loope
pop
ret
add
push
add
ret
or
inc
shl
push
add
adc
push
mov
xor
jb
cmp
fild
add
mov
sub
pop
cmps
and
sti
inc
dec
shl
mov
mov
ror
pop
inc
(bad)
adc
dec
mov
movs
push
push
pop
mov
out
dec
add
push
(bad)
mov
and
jo
adc
imul
and
jp
and
pop
or
imul
ret
call
das
mov
inc
xlat
rcl
(bad)
or
arpl
adc
fs
sbb
push
in
pop
jg
sbb
add
call
arpl
pop
das
inc
mov
(bad)
aad
cmp
add
stos
outs
inc
fs
pop
and
push
cmp
into
inc
cmps
jmp
(bad)
adc
inc
push
mov
push
mov
(bad)
jne
mov
dec
mov
pusha
bound
and
inc
inc
cmps
imul
sub
addr16
rcr
adc
int
or
repz
xor
mov
sbb
sub
xlat
dec
and
push
or
push
add
dec
push
xor
xchg
outs
inc
outs
adc
retf
or
sbb
mov
xor
mov
sbb
or
outs
or
das
add
mov
add
outs
adc
bound
jmp
sbb
push
jmp
or
imul
inc
push
xchg
push
add
cmp
aaa
mov
repz
add
fwait
cmp
jmp
ja
sub
push
arpl
pop
sub
ins
cs
adc
jb
gs
jne
mov
fistp
ins
outs
bound
adc
xchg
inc
scas
fisubr
inc
dec
mov
jae
inc
ins
popa
jae
gs
and
scas
cdq
push
ss
adc
(bad)
aaa
dec
jmp
std
mov
outs
sub
push
or
or
(bad)
(bad)
sub
stos
gs
or
mul
ins
and
push
dec
push
jns
fstp
mov
add
not
ins
inc
dec
add
mov
or
in
in
inc
js
xor
jae
imul
pop
push
int
push
dec
inc
outs
ins
fs
adc
dec
popa
addr16
ins
jo
ins
je
pop
push
sti
movs
sbb
inc
outs
pop
imul
jne
je
xor
outs
and
xor
or
arpl
adc
mov
adc
es
mov
and
je
sbb
jae
push
mov
and
xor
test
jbe
lds
gs
movs
lods
and
pop
stos
lods
imul
leave
popa
(bad)
mov
cmps
adc
sbb
popa
or
xor
call
jo
gs
loope
xchg
ins
stos
or
xchg
push
fmul
adc
jns
or
pop
gs
push
push
or
addr16
imul
sbb
dec
push
sbb
cmp
sbb
ins
pop
inc
lock
and
movs
hlt
imul
sbb
and
jns
adc
jb
retf
inc
sbb
inc
xchg
mov
adc
ret
call
ja
ins
or
inc
ret
rcr
push
js
and
add
pop
and
inc
dec
jo
jo
sbb
push
sub
imul
punpckhbw
pop
dec
push
outs
or
inc
jb
push
mov
cld
bound
loopne
loopne
bound
call
popa
jno
daa
or
mov
jb
push
stos
inc
aam
movs
test
dec
xchg
add
jae
lods
adc
imul
std
into
shl
call
adc
inc
jno
loope
cwde
outs
push
scas
adc
mov
cmp
ret
shl
(bad)
div
cmp
or
inc
(bad)
je
mov
inc
xchg
ins
clc
idiv
pop
imul
stos
and
loopne
fs
sbb
rcr
sbb
dec
sub
dec
test
js
ret
dec
mov
mov
adc
and
ins
and
jo
fild
inc
pop
nop
data16
push
pop
dec
dec
add
stos
mov
fs
jne
adc
imul
jo
and
icebp
in
jb
pusha
sbb
xlat
pop
sub
or
(bad)
mov
mov
push
sbb
(bad)
(bad)
push
xchg
test
test
cmp
dec
push
mov
fadd
sub
jbe
bound
movs
mov
xor
fxch
bound
test
sahf
mov
out
jmp
pop
pop
movs
popa
xlat
inc
ins
xor
fst
push
or
adc
scas
xchg
xor
push
pop
and
ins
(bad)
mov
xor
mov
out
loop
adc
push
ja
sub
pusha
rcl
stos
sub
or
in
inc
fst
xor
lods
mov
add
call
dec
sub
jbe
inc
fild
adc
sub
jae
sbb
push
jns
cdq
ins
xor
pop
inc
sub
push
lock
jno
push
test
sbb
adc
sbb
jo
cmp
loop
cwde
mov
(bad)
fstp
ret
lods
and
shl
sbb
and
xor
push
dec
jge
and
or
dec
push
retf
mov
jp
push
and
movs
cmc
jno
imul
dec
mov
mov
int
(bad)
jnp
push
popa
and
imul
mov
je
dec
fild
push
in
imul
fninit
jne
(bad)
std
adc
push
push
or
mov
push
fmul
pop
(bad)
imul
mov
fs
in
add
pusha
pushf
lds
inc
and
add
arpl
and
and
xor
stos
push
jbe
push
scas
xor
or
lods
adc
push
jo
lock
sbb
fimul
and
loopne
fs
data16
inc
jo
dec
sbb
popa
sub
pop
push
mov
ins
ins
mov
movs
sub
and
push
or
and
imul
xor
dec
push
sub
call
jnp
dec
fs
ret
(bad)
adc
in
daa
inc
inc
jns
cmp
adc
cmp
push
inc
push
mov
mov
and
push
inc
inc
or
rcl
jp
inc
sbb
push
lds
inc
xchg
daa
(bad)
mov
xchg
in
jl
iret
ins
imul
call
pop
idiv
clc
push
push
data16
sbb
push
mov
das
pop
iret
fwait
and
or
ret
pop
dec
test
add
rol
xchg
push
daa
jmp
mov
stos
shl
pop
lahf
jnp
push
cmp
cmc
fs
dec
jge
in
stos
pop
lods
adc
push
dec
dec
adc
push
dec
xchg
ret
movs
or
cmp
mov
cmps
pop
mov
xor
inc
test
call
lea
gs
dec
sub
cmp
fsub
push
push
jp
jmp
add
and
ins
pop
push
lahf
shl
and
das
lods
pop
movs
add
sbb
sbb
adc
add
hlt
stc
in
outs
sub
push
out
pop
dec
push
dec
inc
pop
push
jbe
fistp
xor
and
mov
arpl
dec
mov
push
jno
int3
push
out
add
add
sbb
clc
inc
ins
je
arpl
lds
inc
sbb
iret
and
adc
sbb
mov
fisubr
cs
sbb
lock
xchg
lahf
loop
mov
cs
dec
shr
push
movs
push
dec
inc
fcom
or
adc
pop
pop
push
mul
or
mov
push
imul
or
pshufw
push
jp
sub
daa
mov
je
inc
je
and
jne
mov
xchg
adc
mov
imul
es
lods
cmovo
test
rcl
mov
adc
or
inc
sub
(bad)
into
shl
cwde
mov
add
mov
add
push
adc
pop
ja
sbb
jmp
mov
push
dec
adc
dec
sub
dec
outs
push
int3
lods
xchg
fwait
jmp
call
add
movs
push
ret
fsubr
mov
push
xchg
inc
in
jns
jno
test
add
xor
js
sar
jno
pop
and
add
fwait
jg
jne
sbb
scas
in
gs
fisub
ret
andps
pop
fwait
or
push
sbb
jg
retf
jb
or
dec
outs
sbb
imul
ss
gs
dec
add
add
push
(bad)
adc
or
xor
jae
paddsw
enter
in
add
and
mov
add
ins
jae
fmul
xchg
adc
push
pop
cli
add
adc
sahf
xor
dec
push
addr16
pop
jnp
call
das
push
popa
gs
or
add
call
aaa
imul
lock
arpl
push
push
test
sbb
fisubr
sbb
ins
sub
sub
sub
cmp
lea
cmp
inc
addr16
push
ins
mov
imul
and
push
and
xor
and
loop
mov
push
ss
and
pop
dec
ss
imul
ss
dec
loopne
scas
jbe
inc
push
imul
arpl
dec
inc
xchg
ja
mov
xor
xor
fcmovne
test
xor
pusha
mov
jo
adc
xchg
dec
lods
mov
jae
push
add
aaa
push
add
mov
mov
xchg
dec
add
outs
movs
js
push
xchg
arpl
pop
add
add
add
or
mov
iret
or
jecxz
imul
in
or
pop
add
ja
in
mov
bound
sbb
test
imul
dec
xchg
pop
or
ja
pop
aaa
inc
adc
sub
in
add
rcl
fdivrp
add
add
add
add
add
push
or
inc
lea
retf
jae
or
push
add
add
addr16
or
inc
je
inc
popa
sahf
or
lods
xchg
add
pop
push
or
imul
rol
xchg
std
fbstp
dec
pop
inc
dec
inc
push
push
inc
push
or
xchg
xor
lock
std
ins
jmp
daa
cmc
or
sbb
pop
push
jmp
jae
mov
or
or
push
shl
ja
out
dec
ins
jmp
outs
pop
push
jo
push
arpl
mov
xor
repz
add
xlat
cmp
pop
push
or
int3
mov
fist
or
inc
xchg
push
pop
mov
jnp
pop
sbb
push
mov
xchg
pop
push
cmp
ja
jnp
or
sub
js
add
pop
inc
xor
pusha
or
jo
add
ror
scas
xchg
xchg
adc
pop
xchg
sub
aad
neg
mov
sub
popa
ins
pop
ins
xchg
or
xchg
aam
push
bound
loope
jbe
enter
or
out
push
popa
bound
pop
push
xor
cli
push
add
push
pop
push
pop
inc
clc
cmc
sub
movnti
xchg
add
mov
aaa
push
jae
xchg
xchg
xchg
dec
stos
add
pop
popa
or
push
cmp
popa
mov
mov
pop
mov
in
in
in
cli
cld
dec
cli
(bad)
jmp
loop
hlt
div
xchg
xchg
xchg
(bad)
fdiv
repnz
in
jmp
clc
push
sbb
adc
inc
push
inc
xor
(bad)
mov
and
push
sub
lods
sub
dec
dec
cmps
lods
fcomp
(bad)
(bad)
(bad)
(bad)
mov
xchg
push
fisub
and
or
jb
fbstp
out
jp
(bad)
mov
(bad)
(bad)
(bad)
call
ja
mov
ins
cmp
lods
pop
scas
fsubr
add
inc
cs
iret
call
(bad)
jp
outs
mov
dec
aas
or
or
pop
outs
out
retf
jle
jg
push
test
sub
(bad)
(bad)
dec
mov
add
sahf
pushf
mov
movs
cmps
cmps
movs
cmps
test
or
(bad)
jmp
stos
lahf
mov
mov
mov
mov
scas
mov
mov
inc
jns
(bad)
(bad)
(bad)
jmp
mov
into
mov
mov
xlat
mov
(bad)
mov
loope
les
add
(bad)
(bad)
inc
or
stos
jmp
in
jmp
repz
repz
lock
out
movs
idiv
icebp
stc
popf
jmp
(bad)
(bad)
(bad)
(bad)
jge
or
cmp
dec
pusha
cmp
mov
sbb
push
enter
(bad)
and
inc
mov
push
std
sbb
mov
(bad)
mov
popf
xchg
pop
imul
dec
sbb
std
call
push
out
popf
xor
mov
and
bound
outs
clc
shl
cmc
imul
retf
mov
stos
(bad)
(bad)
(bad)
call
mov
or
leave
cmc
imul
jo
(bad)
popf
sti
push
add
repz
pop
test
dec
(bad)
(bad)
mov
cld
add
lods
pop
sbb
mov
dec
sahf
dec
mov
and
fcomip
call
mov
mov
cwde
scas
add
lods
cmp
ret
(bad)
(bad)
push
push
cmp
sub
jb
aad
daa
out
push
cs
and
pushf
push
scas
jp
mov
(bad)
jns
aam
popf
das
xchg
push
cmp
stos
pop
mov
fsub
cld
clc
bnd
(bad)
jmp
leave
xchg
outs
mov
loop
mov
clc
icebp
out
jnp
jnp
(bad)
(bad)
cli
and
(bad)
(bad)
call
pop
sahf
jae
movs
xchg
or
iret
cmp
add
gs
(bad)
push
jnp
jb
lahf
xchg
test
loop
push
jbe
and
mov
mov
and
push
loope
sbb
enter
dec
call
pop
pusha
lea
(bad)
(bad)
jg
push
leave
mov
push
test
or
and
jb
add
(bad)
(bad)
(bad)
jmp
imul
aaa
jp
gs
pop
push
cmp
in
push
pusha
sub
(bad)
fbld
cmps
mov
test
leave
out
add
fldl2e
xchg
mov
es
(bad)
push
out
mov
ficomp
or
xchg
xchg
mov
stos
jmp
push
sbb
xchg
add
retf
add
push
pop
and
aam
cli
arpl
(bad)
mov
inc
mov
sub
movs
fdiv
cmps
lods
leave
jle
cmps
enter
(bad)
fldcw
(bad)
mov
lods
jo
pop
cmp
mov
enter
stos
sbb
add
push
push
js
test
(bad)
(bad)
call
mov
xchg
out
mov
mov
mov
mov
pusha
in
(bad)
aad
mov
add
sub
pop
out
les
xor
rol
arpl
les
mov
pushf
xchg
lds
inc
(bad)
(bad)
(bad)
(bad)
fdiv
(bad)
pop
dec
cld
xor
or
icebp
inc
(bad)
push
xor
dec
retf
sub
int3
enter
(bad)
(bad)
dec
clc
mov
lods
sbb
into
aas
jmp
into
popa
loop
int
outs
inc
push
xchg
(bad)
(bad)
(bad)
jg
fsub
pop
cdq
rcl
pop
pop
push
rcl
push
imul
or
jo
test
popa
dec
rol
arpl
movs
retf
xlat
scas
test
mov
add
int3
(bad)
fisubr
(bad)
call
inc
lods
(bad)
mov
out
in
fmul
cli
in
int3
fidivr
mov
pop
js
(bad)
xchg
in
aam
int3
in
test
aaa
xchg
sbb
jbe
int3
out
loop
xchg
pushf
mov
jmp
sti
outs
dec
cli
in
into
mov
loop
fcom
in
(bad)
fidivr
jmp
mov
fimul
aam
xor
(bad)
mov
imul
cmps
fdiv
push
fcom
mov
cmp
in
pop
int3
jl
les
dec
outs
cmps
lods
xor
mov
xchg
sub
adc
pop
test
xchg
dec
xchg
xchg
xchg
xchg
xchg
xchg
cwde
xchg
call
xor
or
add
test
stos
dec
lock
mov
mov
mov
mov
mov
nop
(bad)
call
or
enter
cmp
into
iret
rcl
rcl
aam
(bad)
xlat
fcomp
(bad)
adc
les
in
(bad)
(bad)
jmp
out
call
in
out
out
lock
repnz
sub
add
adc
(bad)
(bad)
dec
sar
push
push
cmps
mov
inc
jbe
adc
jl
mov
mov
push
(bad)
or
(bad)
mov
push
pop
xor
or
in
sub
dec
or
movs
int
xor
mov
push
imul
jg
pop
push
dec
call
imul
(bad)
push
cmc
cmp
sub
sbb
xchg
ror
pop
add
cmp
mov
pop
push
(bad)
fnsave
fidiv
fwait
aaa
ins
pop
mov
dec
(bad)
(bad)
(bad)
push
movs
fidiv
clc
stos
(bad)
sbb
sub
imul
ins
add
xchg
sub
jl
mov
retf
popf
(bad)
(bad)
(bad)
(bad)
aas
add
jns
push
(bad)
cld
xchg
repz
pop
jbe
fld
call
push
sub
and
mov
push
sub
jp
jb
stos
inc
jmp
mov
fdiv
pop
outs
(bad)
jp
jmp
inc
rol
push
push
sub
aad
cmovnp
jp
out
push
in
mov
cmc
add
cmp
add
or
sub
(bad)
(bad)
call
inc
dec
loope
adc
mov
mov
mov
mov
pop
cmp
bound
add
or
call
jecxz
cmp
fdivr
(bad)
(bad)
call
jmp
dec
in
inc
mov
dec
jp
dec
inc
push
adc
(bad)
bound
ret
xchg
pop
mov
xchg
pusha
xchg
out
fs
out
dec
cdq
out
imul
rol
loopne
add
pop
loop
cmps
xchg
jp
add
push
shl
jp
jmp
or
and
mov
pop
cmp
jmp
out
cmp
add
jnp
and
sahf
movs
xchg
(bad)
(bad)
call
test
stos
test
mov
stos
mov
mov
push
lods
lods
ret
stos
mov
push
ja
push
lods
mov
or
or
push
and
imul
jmp
mov
pop
sbb
mov
xchg
fisubr
addr16
mov
addr16
mov
(bad)
(bad)
(bad)
dec
out
mov
or
nop
add
push
or
stos
ret
push
jmp
mov
mov
dec
(bad)
jmp
mov
push
ins
mov
or
lods
stos
fwait
sub
(bad)
(bad)
jmp
inc
(bad)
mov
mov
test
scas
mov
and
jmp
repnz
inc
add
pop
pushf
outs
push
mov
out
pushf
sub
inc
scas
or
adc
cld
mov
cmp
int
ror
int3
xor
dec
(bad)
hlt
sahf
dec
dec
inc
pop
cmp
jmp
in
xor
push
pop
sub
dec
ss
add
adc
pushf
sub
add
cli
fdiv
dec
sub
mov
js
fmul
pop
pop
pop
mov
sbb
(bad)
(bad)
(bad)
push
rcr
cmp
or
cmp
or
xchg
jg
jae
test
std
push
pop
lock
push
rol
jo
outs
sub
test
xchg
fwait
sub
mov
(bad)
(bad)
jmp
jmp
pop
mov
out
xor
ja
mov
les
mov
xchg
pop
push
fwait
xchg
pop
test
jecxz
das
(bad)
(bad)
(bad)
jmp
cmp
into
jnp
sub
cmp
cwde
mov
leave
in
out
lahf
(bad)
(bad)
fcomip
(bad)
cmp
gs
dec
mov
fistp
idiv
mov
mov
add
call
retf
icebp
iret
push
(bad)
(bad)
(bad)
push
add
les
dec
adc
adc
out
sbb
cmp
(bad)
(bad)
dec
scas
pop
cmp
and
add
sub
sbb
pop
aam
xchg
sbb
jo
cdq
imul
sbb
xchg
inc
inc
and
xor
cmp
(bad)
(bad)
push
sbb
adc
add
inc
or
mov
(bad)
jmp
pop
mov
test
cmc
test
bound
and
ror
sub
loop
or
xchg
mov
daa
or
fdivr
sbb
mov
jecxz
fld
retf
pop
clc
inc
add
jle
jmp
rcl
hlt
xor
mov
loop
in
and
movs
lods
into
mov
cli
fdiv
les
mov
adc
and
lods
cmp
out
(bad)
test
fs
je
inc
mov
int
aam
cmp
call
idiv
inc
or
shl
je
not
ins
mov
les
mov
inc
mov
inc
fadd
hlt
xchg
jl
into
xor
lods
inc
mov
sub
aam
cmp
sub
and
mov
or
ss
mov
inc
and
pop
xchg
xchg
xor
rol
mov
sbb
test
adc
mov
sbb
int3
ins
ret
inc
test
in
test
mov
cmp
adc
jl
int3
out
mov
test
jl
jl
ins
mov
dec
lods
lock
dec
xor
mov
cmp
or
adc
add
adc
mov
(bad)
push
dec
pop
fadd
inc
inc
pop
cmp
or
(bad)
(bad)
(bad)
ds
das
test
lods
mov
mov
mov
mov
mov
mov
ret
sub
(bad)
call
push
pusha
pop
pop
ss
adc
sbb
pusha
into
xlat
fcom
pop
(bad)
fstp
fnstsw
(bad)
(bad)
jg
pushf
jecxz
(bad)
adc
rcl
pop
pop
dec
adc
xor
call
sti
cld
std
(bad)
push
mov
rol
cmps
pop
xchg
js
(bad)
dec
adc
xor
jecxz
mov
cmp
adc
sar
ja
call
leave
xchg
add
push
sbb
pop
retf
(bad)
es
pop
dec
mov
retf
push
or
sbb
push
push
movs
inc
push
sub
movs
jmp
sub
sar
(bad)
(bad)
sub
push
mov
popf
stos
adc
pop
in
cmp
ins
fldenv
fwait
aad
push
mov
(bad)
(bad)
call
popf
sub
inc
add
fwait
jbe
push
or
scas
inc
test
(bad)
inc
mov
icebp
loop
mov
inc
or
xor
xchg
pop
sbb
cwde
jno
retf
(bad)
(bad)
inc
neg
jae
shl
fnstenv
ror
xchg
xchg
jge
cmp
mov
mov
and
add
rcr
dec
cli
(bad)
xchg
sub
jmp
nop
iret
xchg
sub
pop
jp
(bad)
mov
jp
jmp
(bad)
(bad)
mov
repz
inc
das
xor
pop
xor
enter
dec
nop
and
(bad)
(bad)
jg
cmp
add
loopne
or
push
sub
jns
mov
(bad)
jg
addr16
pushf
lock
add
and
lds
dec
cld
loopne
or
mov
push
(bad)
(bad)
in
pop
cmc
sub
mov
retf
mul
adc
fmul
sub
mov
mov
cmp
(bad)
xor
sbb
loop
or
and
(bad)
(bad)
inc
inc
sub
jl
lds
pop
mov
inc
sbb
or
xor
pop
xchg
sbb
(bad)
jmp
jns
call
mov
es
data16
dec
daa
cdq
jae
jns
adc
test
(bad)
jmp
or
mov
popf
outs
repnz
mov
inc
pop
push
sbb
out
(bad)
call
push
mov
mov
pushf
xchg
leave
gs
mov
dec
stos
mov
(bad)
jp
cmps
js
sbb
stos
retf
mov
movs
cli
(bad)
(bad)
push
jnp
lods
(bad)
loop
movs
jnp
pushf
inc
push
add
test
push
inc
shl
sbb
fs
(bad)
(bad)
inc
jmp
loopne
sti
sub
outs
mov
mov
mov
inc
adc
call
or
in
sbb
and
into
and
(bad)
call
jg
push
mov
shl
push
lock
ret
fistp
int3
outs
les
stos
scas
(bad)
(bad)
(bad)
(bad)
inc
call
sbb
int3
mov
sbb
pop
cmp
and
push
adc
or
and
(bad)
call
loope
rol
xor
into
cmp
sbb
std
jae
(bad)
call
neg
jae
dec
and
iret
dec
cmp
repz
das
std
xor
dec
add
call
lods
xor
sbb
mov
add
inc
xlat
inc
push
(bad)
(bad)
(bad)
jmp
pop
not
je
mov
ja
jle
mov
fnsave
inc
jle
(bad)
mov
add
add
rol
sub
fistp
sbb
add
or
fdivrp
call
out
scas
call
push
and
add
push
(bad)
clc
add
rcr
(bad)
inc
icebp
lods
outs
(bad)
(bad)
(bad)
(bad)
(bad)
icebp
mov
(bad)
div
cmp
dec
pop
cs
hlt
(bad)
add
lahf
cmp
add
(bad)
(bad)
(bad)
dec
pop
cmp
inc
sbb
push
ds
sbb
add
int3
(bad)
out
cmp
icebp
dec
lahf
repz
out
cmp
(bad)
clc
sub
std
call
das
jne
adc
std
(bad)
add
loopne
push
(bad)
clc
rol
loop
pop
xor
sub
gs
in
(bad)
push
mov
jg
loopne
add
or
jo
xor
fcomip
out
inc
sti
cmc
iret
(bad)
call
cwde
sub
retf
pop
hlt
loope
outs
clc
aas
add
mov
mov
sub
pop
adc
and
or
loopne
jmp
(bad)
jmp
jge
push
les
mov
sub
add
cmps
mov
outs
push
in
sbb
inc
cld
inc
mov
ins
daa
xor
or
lods
push
clc
adc
ror
mov
(bad)
call
mov
and
(bad)
fcom
pop
and
(bad)
push
jns
test
mov
rol
adc
leave
(bad)
out
clc
push
das
or
and
push
sub
stos
bound
(bad)
inc
mov
dec
pop
shl
lods
pop
gs
mov
(bad)
repnz
mov
adc
add
(bad)
(bad)
(bad)
call
adc
std
test
int
mov
data16
mov
ins
(bad)
(bad)
(bad)
(bad)
inc
xor
cmp
jo
enter
out
enter
push
mov
adc
(bad)
(bad)
(bad)
fsub
pop
pop
mov
sbb
push
ss
xor
push
jle
xor
adc
dec
loopne
pop
cld
out
adc
push
and
mov
xchg
mov
std
sbb
jg
call
add
or
push
(bad)
ror
pop
adc
mov
jmp
test
pop
lods
imul
mov
sahf
(bad)
je
imul
jmp
dec
and
push
inc
sub
test
cmps
call
scas
stos
sub
test
inc
inc
sub
or
sub
loop
ss
aaa
sub
sub
xor
ret
xor
int3
jmp
dec
sbb
sub
cmp
shr
mov
or
push
add
or
mov
adc
cmp
or
pop
inc
xor
sub
cmp
add
cmp
cdq
or
cmp
lock
cmp
loope
sub
dec
cmp
or
or
mov
sub
nop
sbb
out
in
push
test
inc
test
or
ret
dec
xor
(bad)
jg
cmp
pop
cmp
add
outs
ficomp
sbb
xor
movs
bsr
(bad)
call
add
cmp
imul
sub
cmp
adc
ss
aas
cmp
sbb
jecxz
adc
adc
pop
sub
pop
sbb
(bad)
(bad)
push
clc
pop
jl
cmp
sbb
mov
dec
pushf
dec
mov
call
in
aas
adc
sbb
test
ret
jecxz
nop
pop
stos
sbb
(bad)
(bad)
(bad)
push
pop
clc
push
popa
cmp
popa
dec
fwait
adc
aam
push
and
test
gs
cli
xor
mov
cmp
enter
xor
loope
inc
or
cmp
jo
mov
sub
cli
(bad)
call
shl
pop
mov
dec
mov
sti
xchg
lods
mov
int
adc
mov
fidivr
pop
outs
pop
mov
cmp
lds
add
(bad)
(bad)
dec
cwde
and
call
movs
dec
sbb
sbb
bound
mov
pop
adc
(bad)
push
(bad)
lods
popa
mov
outs
ins
jnp
cmp
fistp
ficomp
jae
dec
adc
jno
mov
or
bound
sbb
adc
mov
xor
xchg
mov
(bad)
mov
lahf
jle
jp
in
loope
xchg
(bad)
(bad)
(bad)
dec
sahf
aad
mov
idiv
loope
lahf
jg
add
pusha
jge
and
lahf
add
xchg
inc
ins
icebp
jo
push
pop
inc
jbe
cmp
add
ds
popa
add
(bad)
(bad)
call
jno
xor
or
stos
sub
mov
push
inc
mov
sub
or
xchg
imul
fld
and
(bad)
mov
add
pop
push
cdq
popf
sub
push
in
ficom
or
gs
std
push
call
imul
imul
pop
loop
daa
call
dec
xor
adc
inc
add
mov
inc
sbb
add
sbb
mov
mov
pop
or
std
(bad)
fistp
mov
cmps
lahf
mov
mov
call
(bad)
(bad)
out
shr
pop
jmp
mov
pop
xchg
adc
(bad)
call
push
into
inc
or
sbb
nop
inc
inc
(bad)
jbe
(bad)
(bad)
(bad)
(bad)
fist
loop
out
stos
call
jmp
stos
jmp
out
mov
mov
out
sti
out
mov
mov
sbb
rol
mov
(bad)
jg
dec
imul
mov
cmp
out
(bad)
sbb
sub
(bad)
and
(bad)
(bad)
jmp
ins
xor
retf
cmp
adc
and
add
std
out
clc
dec
inc
or
mov
mov
je
dec
sbb
(bad)
dec
fwait
(bad)
(bad)
call
enter
xor
mov
pop
jecxz
jne
das
setb
adc
or
(bad)
(bad)
(bad)
dec
sbb
sub
add
mov
icebp
ret
dec
lods
ja
dec
(bad)
in
mov
cmp
sbb
clc
fistp
dec
mov
clc
loopne
repz
js
cmp
mov
cmp
(bad)
(bad)
(bad)
call
cwde
repz
cmp
adc
adc
sbb
sbb
cld
(bad)
call
cmp
jge
sahf
je
xchg
add
loopne
repz
dec
stc
pop
(bad)
(bad)
call
jnp
lea
sti
aam
pop
pop
jnp
int3
jmp
test
daa
dec
inc
test
imul
jae
bound
add
adc
in
ret
(bad)
in
stc
scas
(bad)
fcomip
in
dec
into
lock
outs
mov
(bad)
cld
lock
push
(bad)
mov
mov
lock
adc
sub
add
dec
add
(bad)
(bad)
(bad)
jmp
cmp
aam
mov
or
sbb
ds
loop
outs
add
adc
add
(bad)
fcom
cmp
les
add
(bad)
(bad)
(bad)
push
inc
or
mov
inc
push
aam
cmp
adc
inc
fs
cmp
nop
(bad)
(bad)
(bad)
jmp
inc
loop
pop
mov
or
mov
push
sub
adc
scas
mov
pop
mov
das
ss
(bad)
(bad)
push
mov
jecxz
cmps
idiv
add
popf
fisubr
outs
add
sti
sub
pusha
shr
(bad)
(bad)
jmp
mov
mov
inc
push
jo
aam
adc
mov
mov
mov
lock
(bad)
dec
jno
inc
pushf
movs
and
jmp
push
cwde
popa
test
loopne
sub
xchg
or
nop
xchg
push
add
fadd
cs
scas
adc
dec
inc
push
das
(bad)
(bad)
dec
js
inc
xor
push
cwde
xor
sub
cs
mov
cmp
mov
add
and
or
push
rol
jns
ins
cmp
fsub
(bad)
(bad)
(bad)
push
out
or
enter
jbe
lea
jae
retf
pop
out
jmp
xor
fcomip
(bad)
(bad)
push
test
mov
add
js
inc
sti
or
pop
jo
cmps
jo
push
xor
pop
(bad)
(bad)
(bad)
fistp
inc
icebp
and
pop
push
in
inc
sub
mov
mov
sub
(bad)
inc
add
and
movs
push
or
push
xchg
and
dec
ja
push
call
cmps
hlt
aam
ds
mov
mov
sbb
rcr
xchg
dec
lahf
(bad)
(bad)
push
dec
push
mov
stos
rol
lods
cmps
add
(bad)
mov
inc
push
(bad)
(bad)
jmp
pop
f2xm1
push
xor
inc
aas
je
imul
(bad)
(bad)
(bad)
call
out
xchg
lods
jns
sub
mul
mov
jne
pop
mov
push
or
enter
call
jmp
pop
(bad)
retf
and
nop
cld
xor
fs
repz
push
into
xchg
hlt
(bad)
(bad)
push
xchg
and
sub
adc
mov
cmp
(bad)
xchg
adc
loope
pop
mov
in
in
es
push
jne
or
or
out
or
sbb
jl
cs
loopne
or
outs
push
cwde
loop
outs
test
dec
mov
add
jp
pop
int3
jbe
jl
and
inc
pushf
jp
pushf
shl
or
outs
inc
sahf
je
mov
dec
es
mov
je
jno
adc
inc
rol
je
xor
ins
pop
pop
leave
xor
repnz
mov
or
ficom
ror
movs
push
xlat
bound
xchg
xchg
xchg
adc
inc
push
sub
scas
in
or
lds
and
clc
or
cmp
jnp
add
xor
xlat
test
and
call
xchg
popa
test
js
pop
add
fcmovbe
out
cdq
adc
test
push
call
es
sbb
pop
or
dec
sbb
or
add
inc
mov
mov
enter
dec
retf
iret
leave
dec
sbb
adc
pop
sbb
pop
push
ss
pop
push
push
ins
ins
sub
push
push
pop
xchg
(bad)
dec
pop
ins
and
fld
cmc
in
stc
fwait
pusha
fwait
add
jmp
or
in
sbb
inc
mov
dec
ins
mov
add
(bad)
(bad)
push
and
mov
movs
leave
xchg
sub
pop
leave
mov
retf
xchg
xor
push
jns
adc
(bad)
(bad)
(bad)
(bad)
js
int
mov
test
pop
push
jo
test
dec
push
push
cmp
retf
(bad)
jmp
push
imul
shl
dec
(bad)
stos
pop
xchg
inc
add
rol
xor
mov
sbb
pop
loopne
sub
lea
aaa
jno
mov
cmp
mov
leave
and
(bad)
(bad)
call
and
mov
dec
arpl
xchg
xor
(bad)
das
das
sahf
cld
pop
xor
sub
add
inc
iret
cwde
adc
mov
shr
(bad)
call
add
ret
mov
jnp
inc
xor
cmp
mov
(bad)
(bad)
call
inc
(bad)
out
jl
push
(bad)
scas
dec
sahf
scas
cmp
mov
cmp
jmp
(bad)
jg
lahf
pusha
cmp
loope
ja
xor
sub
mov
xchg
xchg
rol
xor
jg
mov
retf
cmp
mov
rol
cld
push
clc
pusha
test
pop
sub
xchg
pop
fsub
pop
jb
mov
call
inc
cmp
mov
xchg
call
fsub
sbb
mov
adc
and
ret
jl
lock
jmp
inc
or
mov
jg
rcl
sbb
pop
ss
mov
ds
fild
cld
in
push
push
imul
pop
dec
sbb
mov
mov
jg
(bad)
xor
jo
add
dec
mov
xchg
dec
movs
xchg
(bad)
adc
(bad)
(bad)
fist
movs
loope
adc
or
shl
call
das
xchg
mov
(bad)
mov
movs
movs
cmp
jmp
imul
sub
test
push
xor
or
shr
or
repnz
push
xor
(bad)
(bad)
(bad)
out
loopne
pop
or
call
sbb
inc
and
sub
retf
ficom
mov
enter
mov
es
mov
bound
mov
sub
mov
inc
fucomi
mov
inc
mov
jnp
cdq
sub
rol
mov
cmp
call
sub
mov
into
jbe
xchg
clc
jmp
lods
(bad)
(bad)
(bad)
inc
rcr
adc
inc
retf
sub
adc
ins
in
les
push
ins
jno
and
xor
mov
(bad)
(bad)
jmp
(bad)
mov
sbb
(bad)
stos
sub
or
aam
xchg
pop
dec
add
or
sbb
shl
cld
mov
and
lds
jge
retf
push
(bad)
pop
mov
push
adc
mov
mov
pop
arpl
and
(bad)
(bad)
jmp
rol
inc
adc
add
adc
and
pop
sbb
(bad)
(bad)
(bad)
js
and
neg
push
aaa
add
jne
outs
aas
mov
or
(bad)
inc
jge
aam
push
mov
mov
or
sbb
idiv
imul
inc
or
fdiv
std
mov
test
sub
(bad)
fisttp
outs
mov
jl
leave
sub
cld
repz
das
pop
std
icebp
int
dec
cld
hlt
into
pop
(bad)
mov
(bad)
inc
jge
aam
iret
std
push
add
adc
clc
cs
lock
xor
fsub
(bad)
add
adc
(bad)
(bad)
call
sbb
bound
inc
jmp
arpl
loop
daa
mov
pop
lods
pushf
add
dec
(bad)
jmp
pusha
add
sbb
or
adc
push
ror
or
(bad)
mov
mov
adc
and
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
jb
xchg
xchg
lock
inc
pop
add
sbb
sbb
hlt
and
sbb
and
ror
dec
adc
and
dec
add
enter
adc
mov
ficom
sub
mov
pop
sub
adc
sub
ret
clc
mov
xlat
and
shr
shl
pusha
icebp
lock
or
xor
adc
mov
and
cmp
mov
push
mov
sbb
repnz
(bad)
jmp
loopne
sbb
jmp
dec
aad
inc
in
push
mov
call
sbb
push
retf
mov
mov
mov
and
pop
(bad)
inc
mov
out
fwait
cmp
mov
mov
pop
sub
or
fwait
mov
call
cmp
pop
dec
push
push
xor
imul
xchg
mov
pop
dec
pop
jp
popf
call
sub
js
jae
ffree
out
jae
(bad)
inc
repz
push
(bad)
xor
inc
adc
mov
jmp
imul
into
jae
xor
sub
push
mov
inc
pop
mov
cmc
(bad)
call
popa
jns
loop
je
jne
imul
push
sbb
or
xor
add
fs
ret
inc
xor
out
xchg
aam
sub
aad
pushf
sbb
movs
call
sbb
shl
add
aaa
std
jg
jle
push
mov
cmc
push
mov
cmp
lods
loope
jmp
pop
xlat
(bad)
jmp
mov
mov
mov
mov
pusha
sti
cmp
ret
push
pop
push
or
scas
(bad)
dec
mov
push
mov
push
popf
ds
add
pop
div
mov
(bad)
jb
aaa
cld
jmp
test
shr
and
inc
cmp
scas
mov
jg
(bad)
jmp
pop
dec
test
aam
push
mov
ror
(bad)
(bad)
jmp
cmp
add
adc
jge
or
inc
mov
(bad)
(bad)
jmp
je
out
jo
mov
and
in
push
enter
das
jns
mov
stos
idiv
(bad)
(bad)
push
gs
add
mov
xor
nop
loopne
and
add
cli
or
outs
push
(bad)
clc
push
pop
cmp
outs
jle
test
out
bound
sub
(bad)
(bad)
(bad)
jmp
add
xor
ins
push
mov
mov
push
and
(bad)
(bad)
dec
xchg
and
sbb
mov
mov
popa
jecxz
push
and
add
inc
xor
mov
dec
adc
dec
call
mov
mov
add
mov
cmp
mov
(bad)
xchg
ret
xchg
mov
adc
adc
push
mov
inc
test
sub
and
lods
adc
mov
ins
sub
ins
and
jno
inc
mov
imul
cmc
dec
adc
out
in
sbb
cmps
dec
aaa
std
(bad)
dec
or
outs
xor
xor
or
scas
ds
push
dec
scas
pop
mov
inc
mov
jo
cmps
sbb
cmps
rol
jo
aad
cmc
(bad)
mov
push
sbb
addr16
pop
aaa
pop
and
pop
imul
dec
icebp
fbstp
jmp
fcom
cmps
adc
mov
sub
ret
arpl
sub
sub
icebp
jmp
(bad)
jo
mov
cdq
and
test
(bad)
(bad)
jg
pop
push
shl
pop
sbb
js
imul
mov
dec
mov
sub
jo
(bad)
(bad)
(bad)
cmp
ret
adc
xchg
jne
push
test
xchg
mov
shl
imul
rcl
cmp
pop
ins
enter
sub
inc
mov
sbb
xor
adc
dec
xchg
cmp
in
xchg
xor
xor
inc
addr16
pop
lock
push
call
mov
xchg
pop
cmps
xchg
cmp
adc
(bad)
cmp
and
inc
jae
jecxz
or
xlat
loopne
rol
in
in
inc
(bad)
out
clc
(bad)
inc
outs
fcomp
fistp
sti
out
in
fidivr
jl
xor
cmps
inc
inc
std
clc
into
jmp
jmp
imul
ret
out
jmp
icebp
scas
clc
(bad)
inc
add
xor
push
mov
sub
or
cwde
sbb
stc
xlat
pop
xchg
mov
xlat
loope
sbb
bound
mov
stos
(bad)
(bad)
(bad)
(bad)
fsub
mov
mov
enter
push
jns
adc
lock
call
inc
and
cmp
inc
ss
adc
mov
fisttp
cs
xchg
xchg
xchg
call
dec
mov
pop
lahf
mov
push
inc
add
xchg
dec
cwde
popa
push
add
jne
or
cwde
call
jmp
rol
pushf
sub
sahf
sar
call
test
sub
(bad)
imul
sbb
imul
(bad)
cmp
jle
and
or
daa
cmp
loopne
sbb
inc
test
or
les
(bad)
call
adc
inc
in
adc
sti
mov
mov
les
jmp
or
scas
fcmovu
call
(bad)
xlat
jle
out
mov
xchg
imul
loope
mov
jnp
(bad)
(bad)
jmp
das
mov
mov
ret
loope
sbb
xchg
push
xchg
cs
retf
add
ja
outs
dec
inc
add
sub
sbb
push
loop
or
(bad)
(bad)
inc
and
jmp
enter
mov
and
in
leave
call
and
mov
mov
and
(bad)
(bad)
push
dec
add
(bad)
sti
scas
adc
mov
cld
cmp
sub
push
inc
dec
mov
je
push
loopne
push
inc
ja
mov
pusha
xchg
in
outs
fstp
(bad)
test
or
mov
xor
or
inc
inc
loope
sbb
inc
cmp
aaa
loopne
repnz
or
mov
sar
js
jnp
mov
mov
jmp
cmp
jnp
fcomip
dec
xchg
push
ss
add
test
cmp
(bad)
(bad)
call
cmp
xor
adc
out
mov
cmp
sbb
jmp
cld
repz
aaa
outs
cmp
cmp
retf
pop
out
cmp
fimul
(bad)
(bad)
(bad)
fistp
cli
fisttp
mov
jmp
add
clc
add
hlt
nop
cmp
xor
(bad)
jg
or
aas
loope
adc
xor
xlat
repz
call
pop
call
scas
jnp
rcr
sbb
shl
mov
adc
dec
sar
(bad)
inc
(bad)
rol
push
pop
add
pop
mov
add
or
mov
add
rcl
aas
xor
push
xchg
lahf
adc
xchg
test
jbe
retf
sahf
add
xchg
iret
mov
scas
jge
(bad)
call
dec
mov
mov
sbb
push
inc
push
pusha
add
call
push
cmp
add
test
push
mov
jmp
or
sbb
(bad)
(bad)
(bad)
fist
leave
xchg
inc
(bad)
test
and
push
(bad)
fnsave
enter
ss
add
enter
pusha
mov
sbb
loopne
(bad)
(bad)
mov
arpl
ror
(bad)
not
or
cmp
adc
mov
(bad)
dec
inc
sub
adc
mov
and
push
div
xchg
mov
cmps
das
(bad)
jmp
sub
sti
fisub
test
lods
mov
cmp
add
(bad)
push
or
mov
pop
popa
jo
sub
dec
push
(bad)
push
(bad)
cmp
dec
push
(bad)
(bad)
(bad)
jmp
cmp
jb
lods
and
sub
(bad)
push
popf
adc
mov
(bad)
inc
push
sbb
fisttp
aam
sar
sub
adc
cmps
or
add
(bad)
(bad)
jg
pop
aam
sar
push
jb
or
je
je
out
pop
addr16
dec
fcmovb
or
out
movs
inc
(bad)
in
jl
dec
(bad)
xchg
dec
xchg
cli
xchg
jne
add
fiadd
sahf
cli
or
sbb
or
(bad)
(bad)
jmp
add
xor
push
and
lahf
(bad)
xor
xchg
jmp
out
pop
aad
xchg
dec
jae
call
call
mov
push
mov
xchg
test
add
push
rol
adc
stos
(bad)
jg
add
mov
push
push
xchg
mov
loope
in
pop
jns
fcomp
sub
les
mov
mov
arpl
add
(bad)
(bad)
mov
add
pop
mov
inc
adc
adc
outs
cmps
(bad)
push
or
push
push
mov
push
data16
stos
adc
aad
outs
pop
mov
and
xchg
jmp
sub
retf
(bad)
jmp
outs
jecxz
fdivr
mov
inc
sub
cli
ret
add
jp
or
dec
(bad)
(bad)
(bad)
jmp
aam
add
call
test
lods
or
push
fwait
and
lods
pop
inc
call
cmp
(bad)
(bad)
call
clc
cmps
dec
mov
aas
in
cli
scas
pop
inc
hlt
add
pop
std
call
test
push
dec
pop
pop
and
push
test
cmp
jns
or
fidivr
mov
pop
and
xlat
rcl
aad
mov
dec
ins
mov
mov
push
(bad)
jmp
inc
xor
adc
push
adc
or
pop
adc
sub
dec
add
(bad)
mov
xchg
jno
jae
inc
cmp
retf
into
xchg
ror
adc
ror
mov
xchg
test
add
sar
xlat
rol
jno
cmp
rol
xchg
and
dec
(bad)
(bad)
fistp
jno
jo
xor
xor
or
mov
pop
imul
mov
mov
test
sbb
jg
cld
lds
ins
in
aad
sbb
pop
sbb
push
and
push
ins
inc
cmp
mov
aaa
loopne
ins
jmp
fcos
das
rcl
push
call
push
and
(bad)
jmp
inc
pushf
adc
mov
test
add
loop
mov
retf
pop
sbb
xchg
sub
jno
aam
in
(bad)
sub
es
push
adc
or
mov
push
adc
sub
sbb
jp
rol
mov
(bad)
mov
pop
ja
sbb
mov
push
adc
inc
and
sbb
mov
frstor
pop
and
xor
cmps
xchg
add
es
loopne
das
loopne
xor
mov
in
xchg
xor
ficomp
adc
scas
in
jae
pop
cmps
imul
sub
dec
cmps
fdivr
push
mov
aaa
xor
(bad)
lods
xor
(bad)
(bad)
call
mov
enter
outs
fidivr
test
pop
cwde
pusha
ror
(bad)
(bad)
push
add
mov
outs
shl
dec
push
das
aaa
test
std
fld
mov
std
fnstsw
test
(bad)
(bad)
dec
mov
out
shl
stc
cli
loopne
(bad)
mov
ins
and
fild
(bad)
(bad)
jmp
sbb
or
lds
add
inc
add
sub
mov
into
add
jne
shl
add
or
add
xchg
test
mov
mov
mov
mov
into
(bad)
(bad)
(bad)
jmp
mov
xor
(bad)
mov
sub
adc
sbb
(bad)
sbb
xor
xchg
adc
icebp
adc
clc
push
sbb
inc
sbb
or
int3
xchg
jecxz
and
retf
(bad)
(bad)
jmp
cdq
xchg
lea
out
mov
mov
lahf
mov
(bad)
inc
adc
sbb
push
or
jno
add
mov
call
lds
(bad)
(bad)
call
movs
jne
cmp
sahf
js
fisubr
imul
stos
stos
call
sub
add
cli
call
adc
cwde
and
(bad)
(bad)
inc
imul
dec
add
stos
adc
add
sub
or
inc
sbb
(bad)
(bad)
inc
jle
imul
ficom
out
jp
mov
mov
xchg
fwait
cs
icebp
scas
jecxz
mov
in
loop
cs
xchg
scas
lock
das
cwde
(bad)
(bad)
(bad)
mov
shr
xor
adc
sub
or
sub
add
inc
ret
in
(bad)
(bad)
(bad)
push
scas
shl
lock
push
mov
retf
sub
xlat
sbb
into
ins
or
ins
repz
das
mov
rep
mov
adc
daa
push
rcr
cmp
add
cld
xor
shr
or
(bad)
call
nop
mov
jb
sbb
xor
adc
shl
bndldx
retf
jbe
xor
out
neg
jne
xchg
test
push
inc
test
jg
in
neg
aam
adc
push
add
and
sbb
(bad)
(bad)
(bad)
jmp
mov
or
ins
pusha
mov
mov
sub
aaa
(bad)
je
jl
fild
jbe
jmp
ficom
jbe
adc
or
mov
jmp
les
jg
mov
nop
xchg
punpcklbw
loope
out
ja
daa
(bad)
cmp
sbb
jmp
cmp
(bad)
clc
in
out
mov
ds
stos
iret
ds
jmp
fcmovne
pop
mov
(bad)
cli
jmp
mov
push
add
push
pusha
mov
add
rol
or
jo
add
add
(bad)
(bad)
(bad)
jmp
out
inc
xchg
jecxz
sti
inc
mov
and
fld
pop
out
(bad)
xchg
mov
stos
(bad)
(bad)
jmp
(bad)
or
inc
adc
outs
ja
add
fadd
icebp
or
sbb
nop
cmp
paddq
rol
rol
inc
sub
(bad)
(bad)
jmp
adc
sti
jmp
push
test
push
sti
xchg
cs
jno
or
fwait
(bad)
cwde
xor
cli
jns
mov
sbb
add
rol
xor
jmp
lods
pusha
add
pushf
and
push
cmp
add
jp
inc
cmps
(bad)
(bad)
jmp
adc
push
sahf
mov
mov
push
sbb
sbb
push
mov
(bad)
(bad)
(bad)
push
inc
and
call
cld
or
adc
add
push
retf
cmp
shl
(bad)
inc
adc
pop
retf
dec
xchg
mov
in
fcmovnbe
leave
dec
cli
ins
xchg
jmp
(bad)
(bad)
dec
shl
push
xchg
lds
xor
push
lea
out
sbb
dec
push
push
mov
and
sub
jl
add
add
(bad)
dec
adc
cmp
jo
dec
push
xor
pusha
sbb
das
cmps
test
xchg
int3
xchg
out
jno
iret
push
pop
hlt
pop
or
aas
pop
pop
int
push
mov
int3
out
add
sahf
cdq
xchg
loope
(bad)
(bad)
(bad)
jmp
jmp
add
shl
test
test
pop
aad
lock
retf
stc
dec
add
ret
(bad)
(bad)
(bad)
call
xor
repz
xor
xor
rcr
je
or
xlat
dec
fisttp
jae
push
std
pop
adc
jmp
inc
jno
dec
mov
dec
push
sbb
(bad)
(bad)
(bad)
inc
mov
ds
stos
jg
ret
push
push
jg
test
sbb
fucomp
dec
push
mov
xchg
xchg
lods
(bad)
(bad)
(bad)
call
loope
hlt
push
mov
lods
lods
fs
or
xor
pop
cmp
imul
call
loopne
add
std
cmp
add
stos
pop
adc
lds
call
lea
in
retf
mov
int
and
fxch
pop
mov
dec
add
inc
adc
(bad)
(bad)
jmp
inc
cmp
or
cmps
xor
ror
pusha
rol
add
sbb
or
(bad)
(bad)
(bad)
call
push
lahf
sub
cmp
mov
(bad)
and
fsub
push
idiv
(bad)
(bad)
mov
ret
add
jl
xchg
fwait
adc
es
dec
ins
push
fs
and
(bad)
inc
test
popa
inc
ins
ins
loopne
mov
adc
sti
sbb
call
(bad)
(bad)
(bad)
jle
imul
xacquire
and
pusha
sti
add
sar
jo
or
add
idiv
(bad)
(bad)
ficomp
sbb
sub
mov
pop
mov
pop
iret
arpl
loopne
xchg
xor
(bad)
(bad)
(bad)
call
xor
loop
mov
push
xor
fs
lds
or
cmps
(bad)
(bad)
(bad)
inc
cmp
les
cld
arpl
cdq
enter
and
xor
inc
push
add
mov
or
(bad)
mov
fild
mov
pop
mov
mov
lds
dec
(bad)
retf
retf
into
int
mov
loop
(bad)
xlat
popa
fisub
sbb
push
pop
loope
cmp
clc
(bad)
fadd
push
sub
pop
inc
(bad)
and
ins
into
arpl
pop
daa
jmp
rcr
test
and
sbb
mov
test
enter
dec
out
jo
cmp
mov
cmps
int
popa
loop
and
(bad)
dec
xchg
jg
or
and
cwde
jae
xor
xor
xchg
ss
add
mov
(bad)
(bad)
(bad)
(bad)
mov
mov
sub
fnstenv
sbb
dec
out
(bad)
(bad)
mov
loop
imul
fcomp
xchg
adc
fs
clc
lock
inc
cmc
inc
jns
test
das
pop
or
addr16
mov
jle
mov
sti
xchg
push
(bad)
cli
xor
aam
arpl
or
shl
fiadd
add
pop
(bad)
idiv
cmp
leave
loopne
jmp
fisttp
xchg
mov
into
or
add
mov
mov
(bad)
(bad)
jmp
jnp
or
aas
pop
pop
cmp
mov
iret
aaa
std
stc
repnz
pop
loop
dec
(bad)
mov
les
pop
loopne
add
cmp
inc
inc
sar
(bad)
call
adc
loope
push
sar
lds
push
ror
je
cmp
sub
mov
sub
push
fsub
mov
add
fsub
call
mov
adc
push
imul
(bad)
call
mov
adc
lock
push
imul
les
inc
loopne
rol
push
into
clc
mov
out
(bad)
call
cdq
jo
jecxz
addr16
adc
shl
daa
mov
mov
(bad)
(bad)
jg
retf
push
sbb
pop
push
inc
jmp
jno
sbb
cwde
inc
add
test
call
(bad)
(bad)
dec
mov
xor
adc
mov
add
call
jmp
(bad)
fisttp
mov
sub
xor
or
cld
call
aaa
cld
jmp
sbb
pusha
xchg
das
jl
sbb
or
mov
aaa
loop
pop
sti
sub
sti
inc
sbb
test
sub
dec
stos
mov
xchg
sar
es
mov
adc
mov
(bad)
jmp
mov
mov
sbb
neg
pop
adc
ret
scas
or
jl
sbb
mov
adc
mov
jmp
push
cli
sbb
movs
push
mov
movhps
jmp
jmp
ret
sub
or
(bad)
(bad)
(bad)
dec
mov
cmp
in
mov
cmp
sub
sar
(bad)
xor
push
mov
inc
sub
inc
das
or
xor
push
mov
xor
push
pusha
adc
(bad)
(bad)
inc
popa
and
or
ins
icebp
sar
(bad)
cmp
dec
mov
jbe
or
in
aaa
fst
aaa
jge
and
jle
adc
mov
scas
push
mov
dec
data16
jmp
or
mov
push
sbb
cmp
add
inc
add
aas
and
sbb
(bad)
fld
adc
or
icebp
cmp
push
ds
mov
jge
jmp
mov
rep
(bad)
(bad)
(bad)
(bad)
mov
jp
mov
sbb
push
mov
mov
clc
adc
add
push
(bad)
(bad)
jg
data16
or
mov
or
or
push
outs
rol
fistp
adc
dec
jl
lds
scas
(bad)
stc
call
in
adc
mov
ds
cmc
cmps
jg
(bad)
in
ret
(bad)
(bad)
(bad)
(bad)
jg
inc
or
xor
neg
ret
inc
add
jo
nop
or
pop
add
jg
lock
add
add
inc
fdiv
loopne
std
(bad)
(bad)
jmp
sbb
fmul
or
adc
mov
sub
arpl
pop
shl
test
sub
out
icebp
call
test
lods
out
xchg
sbb
pop
mov
xor
loop
call
retf
sub
fs
rol
daa
jp
or
adc
sbb
mov
repz
les
(bad)
xor
and
add
outs
cli
(bad)
jg
or
xchg
jnp
or
adc
adc
pop
cmp
sti
aas
sar
js
hlt
cli
push
ins
inc
adc
push
add
cmp
jbe
(bad)
out
clc
jg
and
test
inc
mov
(bad)
hlt
movs
sub
(bad)
(bad)
(bad)
jns
add
xchg
sub
leave
in
push
js
pop
fs
pop
imul
push
or
sbb
(bad)
dec
xor
iret
(bad)
dec
push
add
and
adc
(bad)
(bad)
jmp
outs
xchg
int3
inc
out
xchg
jmp
xchg
fdivr
ins
retf
add
jg
dec
call
xor
loopne
push
or
shl
rcl
sub
in
xchg
or
ins
push
xchg
(bad)
(bad)
(bad)
jmp
test
add
repz
sbb
dec
add
je
hlt
sbb
test
jecxz
loop
cmp
mov
repz
ins
push
fdivp
div
pop
mov
dec
(bad)
(bad)
(bad)
dec
cmp
sub
or
cmp
hlt
icebp
aam
sub
sub
(bad)
retf
cmc
jge
adc
call
add
mov
fisttp
rsm
rol
jmp
jmp
test
xor
push
(bad)
mov
push
movs
sub
js
jbe
jnp
in
shr
lods
push
ins
stos
push
out
push
fcomip
(bad)
push
jmp
pop
shl
xchg
xlat
pushf
and
int3
(bad)
inc
xchg
out
dec
lods
sbb
sub
cmp
and
loopne
dec
inc
fadd
push
mov
(bad)
aas
sub
int
mov
cmps
(bad)
(bad)
(bad)
call
add
xor
jl
sub
pop
shl
add
rol
cmp
(bad)
dec
inc
add
nop
test
add
mov
sub
out
xchg
cli
and
xor
(bad)
(bad)
mov
xchg
movs
pop
in
push
aaa
push
inc
stos
in
ja
jmp
(bad)
mul
mov
sbb
jmp
cmp
mov
add
dec
scas
or
xor
dec
xchg
scas
push
push
test
repnz
mov
inc
add
xchg
sbb
sar
dec
sbb
loope
mov
dec
into
mov
rcl
cs
clc
inc
pop
shr
add
inc
mov
or
and
sbb
bound
aaa
add
(bad)
(bad)
(bad)
call
mov
iret
int
cmp
jo
cmp
js
xchg
xor
dec
sub
enter
dec
add
push
jns
push
mov
or
push
adc
movs
call
movs
mov
inc
mov
mov
pop
or
mov
jo
lods
sbb
test
cmps
call
inc
or
movs
dec
cmps
call
xor
xlat
loop
sbb
aaa
pop
addr16
mov
jg
fadd
jmp
addr16
sbb
fdivrp
out
inc
inc
or
ds
add
(bad)
(bad)
in
idiv
mov
adc
adc
fs
mov
dec
mov
ins
mov
push
jge
enter
lea
call
jge
sub
cmp
pop
bndstx
inc
inc
lahf
(bad)
(bad)
(bad)
inc
mov
popf
addr16
inc
sbb
push
jmp
mov
pop
mov
jmp
(bad)
mov
pop
jmp
cmp
pop
mov
jo
das
inc
(bad)
jb
pop
xor
(bad)
(bad)
mov
or
into
cdq
idiv
sbb
movs
cmp
cmc
(bad)
(bad)
(bad)
(bad)
(bad)
scas
pop
sgdtd
pusha
or
mov
xchg
pop
imul
mov
xchg
jbe
(bad)
(bad)
push
repnz
(bad)
adc
es
push
or
fistp
sahf
sbb
or
lds
(bad)
jmp
iret
out
dec
dec
sbb
cli
loope
int
pop
dec
ds
pop
loope
out
scas
xlat
aas
sbb
adc
or
and
push
mov
cmp
inc
(bad)
(bad)
(bad)
inc
pop
jl
pusha
adc
jno
cmp
dec
ror
xchg
jo
adc
pop
sbb
adc
mov
cmc
(bad)
(bad)
call
adc
sub
das
retf
lea
cs
inc
(bad)
(bad)
(bad)
fbld
sub
leave
xchg
dec
retf
dec
inc
dec
enter
add
adc
(bad)
(bad)
inc
inc
add
add
test
xchg
inc
mov
cmps
test
dec
data16
inc
(bad)
jmp
adc
adc
lds
push
pusha
out
jnp
cmp
sahf
add
jmp
or
cli
(bad)
inc
or
cwde
popa
lds
sbb
inc
gs
adc
add
xchg
jmp
xor
jle
cmp
(bad)
jmp
imul
or
in
call
scas
sar
jmp
ror
sub
or
push
sbb
lock
jae
jo
sbb
std
(bad)
jmp
imul
pop
jmp
sbb
gs
adc
scas
mov
(bad)
jmp
out
mov
ret
outs
mov
mov
scas
aas
shl
(bad)
inc
mov
fwait
lock
or
int3
xor
stos
fwait
lods
push
cmps
lods
mov
sbb
add
add
retf
cli
(bad)
(bad)
jmp
ins
inc
add
in
or
retf
das
daa
pushf
in
int3
adc
lods
ret
xor
sub
jg
hlt
scas
loopne
cld
sub
psrlq
jbe
xor
mov
inc
in
hlt
(bad)
sbb
adc
or
sbb
clc
and
mov
sbb
rol
pop
cmps
mov
lea
cs
fnsave
(bad)
in
jbe
jae
mov
inc
ja
js
cmp
or
js
cmp
js
add
(bad)
(bad)
(bad)
push
inc
sbb
and
outs
pusha
rol
sbb
psllw
xchg
arpl
pop
sbb
aaa
mov
scas
aaa
loop
fisttp
js
scas
daa
scas
aam
aas
mov
add
mov
jnp
mov
rol
push
push
ins
push
inc
jmp
aaa
inc
stc
or
scas
cmp
imul
cld
adc
ins
mov
std
adc
xchg
sti
call
iret
jnp
loop
aas
cmp
out
out
ds
ror
pop
inc
(bad)
(bad)
(bad)
aas
std
mov
out
(bad)
ds
in
cmp
and
cld
aaa
mov
pop
add
enter
mov
add
(bad)
(bad)
jmp
adc
sub
pop
adc
jne
sti
fucomip
add
mov
and
fisttp
aaa
inc
adc
scas
test
loope
outs
sar
(bad)
(bad)
fild
test
(bad)
cmps
mov
cmp
adc
cmps
inc
xor
cmp
out
sub
dec
hlt
popa
adc
mov
test
popa
cli
jmp
clc
xchg
ror
ror
add
inc
sub
xor
cwde
rcl
or
push
test
(bad)
(bad)
mov
or
push
scas
lock
xchg
add
add
push
or
stc
int
lea
jmp
std
add
xchg
xchg
int3
and
adc
inc
xchg
fs
sub
jl
(bad)
dec
ret
and
dec
inc
xor
mov
cmp
movs
add
pop
test
and
jmp
jp
or
or
dec
mov
gs
(bad)
(bad)
(bad)
inc
(bad)
bound
jae
in
xor
xor
cdq
inc
imul
out
retf
ins
mov
out
(bad)
(bad)
(bad)
call
dec
cmp
and
add
js
push
add
push
sbb
sub
or
or
(bad)
(bad)
(bad)
(bad)
cmp
push
fwait
dec
cmps
xor
mov
addr16
adc
pop
mov
pusha
cli
push
mov
out
adc
sar
or
lahf
aas
mov
ret
xor
add
sbb
mov
or
rcr
icebp
inc
fwait
or
mov
or
mov
clc
cpuid
loop
sub
push
adc
lahf
inc
shr
jb
mov
(bad)
das
push
(bad)
jmp
mov
lock
(bad)
(bad)
(bad)
(bad)
push
shl
inc
stos
dec
pusha
rcr
adc
push
shr
mov
(bad)
(bad)
jmp
out
cmp
jp
pop
test
pop
mov
add
(bad)
(bad)
out
xchg
sub
gs
mov
ins
shl
mov
mov
dec
mov
(bad)
jmp
(bad)
pop
neg
push
int
push
(bad)
addr16
or
rcl
in
push
(bad)
(bad)
inc
hlt
ins
or
sub
sub
dec
mov
xchg
xchg
pop
shl
shr
hlt
les
nop
jb
xchg
mov
pop
(bad)
xchg
mov
sbb
outs
mov
sub
mov
scas
call
inc
mov
out
jne
in
ficom
addr16
mov
sar
sbb
and
lock
jb
push
push
rol
in
test
or
in
(bad)
mov
lea
xchg
xor
push
sbb
dec
cld
jmp
loopne
sub
mov
fdivp
dec
(bad)
jp
jnp
or
mov
rcl
outs
outs
jo
sar
das
push
call
mov
sbb
loop
pop
(bad)
(bad)
(bad)
jg
pop
pop
xor
xchg
fadd
ss
pop
int
mov
cmps
jge
imul
(bad)
cmp
std
fsubr
add
xchg
or
dec
adc
xchg
inc
jo
cwde
sbb
adc
sahf
repnz
mov
push
xchg
std
aaa
loop
mov
pusha
inc
cld
das
mov
pop
mov
mov
stos
cli
imul
stos
mov
clc
push
sbb
fisubr
aad
aad
xchg
aaa
fld
aad
loope
ss
(bad)
and
addr16
add
outs
jo
and
(bad)
(bad)
push
add
pop
sub
push
clc
repz
ret
pop
sub
movs
pop
jg
push
les
clc
push
jmp
pushf
inc
inc
mov
fst
(bad)
inc
leave
nop
add
sbb
cmp
mov
ret
pop
xchg
mov
iret
xor
or
mov
dec
cli
(bad)
inc
je
les
cli
mov
push
mov
mov
popa
(bad)
mov
mov
scas
pop
sub
out
retf
push
das
pop
mov
bound
push
popf
ss
pusha
repz
push
sbb
call
ss
(bad)
(bad)
call
leave
jo
or
mov
call
push
mov
lods
cmc
push
push
in
pop
jbe
(bad)
fcomip
ins
xlat
inc
add
xchg
aaa
add
fistp
jmp
sbb
ret
imul
inc
dec
leave
mov
inc
or
test
(bad)
fld
push
or
push
mov
mov
cmc
es
lahf
jle
sbb
mov
cli
cmc
push
lock
rcr
(bad)
add
xchg
and
push
sub
stos
inc
add
adc
(bad)
(bad)
mov
adc
cld
pushf
add
loope
sub
or
outs
(bad)
push
cmp
mov
mov
sbb
xor
push
pop
add
mov
call
cs
or
enter
add
(bad)
(bad)
(bad)
push
aaa
adc
mov
xchg
dec
sar
call
(bad)
mov
and
add
cld
(bad)
and
cmps
add
mov
pop
loope
rol
loope
sahf
push
push
bound
add
cmp
test
add
lahf
mov
movs
mov
test
sbb
sahf
stos
cmps
cmp
movs
in
outs
cmp
mov
stos
lods
mov
es
mov
std
nop
mov
add
ror
jg
jmp
test
lahf
mov
pop
or
dec
mov
jae
(bad)
(bad)
jmp
push
push
shr
jp
scas
lds
cmp
and
mov
fcmove
mov
mov
mov
and
pop
out
lock
popa
xor
mov
push
(bad)
mov
loopne
stos
(bad)
(bad)
dec
xor
mov
adc
sub
inc
adc
out
dec
mov
gs
push
sub
mov
int
into
jl
int
sti
sbb
int3
ror
lods
push
mov
sbb
or
lods
mov
clc
push
add
dec
daa
mov
mov
rol
mov
shr
inc
sbb
cmp
fild
mov
sub
neg
js
or
mov
les
sahf
add
cmc
out
dec
adc
add
fisub
add
add
jns
xchg
addr16
jmp
clc
outs
mov
lea
sahf
mov
push
fild
jmp
mov
(bad)
jmp
das
icebp
mov
mov
sahf
cmp
mov
jle
out
mov
push
js
ret
adc
sub
add
sub
(bad)
(bad)
jmp
add
adc
adc
mov
mov
aas
cld
(bad)
out
(bad)
fistp
in
das
cmp
mov
jecxz
mov
(bad)
stc
jmp
sub
loop
scas
jg
sbb
add
dec
inc
jns
jnp
add
xor
and
add
jge
adc
rol
shl
(bad)
(bad)
(bad)
dec
push
cmps
cmp
out
outs
jl
cmp
or
cmp
adc
xchg
mov
(bad)
jge
xchg
pop
lahf
or
push
popa
sahf
clc
xchg
sar
jg
add
add
xchg
lock
xor
sub
and
test
(bad)
push
retf
and
mov
ret
stc
gs
test
sti
and
ins
xchg
jmp
mov
jg
test
cli
test
add
jbe
cwde
sbb
fist
push
xor
cmc
aad
push
pop
cli
push
pop
and
dec
cwde
sbb
inc
jnp
aam
(bad)
jmp
add
cmps
icebp
outs
(bad)
jl
inc
fadd
push
adc
xor
(bad)
jmp
jg
arpl
pop
mov
ja
test
xlat
inc
retf
xchg
add
enter
icebp
and
or
inc
jnp
in
jecxz
add
(bad)
(bad)
(bad)
push
dec
leave
push
es
xchg
xchg
adc
sub
outs
cdq
stos
aam
sbb
cmp
(bad)
call
lea
leave
ins
mov
mov
and
add
add
movs
pusha
pop
cs
es
mov
add
dec
loope
rcl
push
or
push
es
(bad)
(bad)
push
(bad)
rcl
push
or
adc
push
mov
(bad)
jg
cmps
dec
sub
adc
test
fbld
or
pusha
adc
rol
and
inc
sbb
enter
add
scas
mov
and
and
(bad)
inc
xchg
out
xchg
loopne
xor
push
imul
add
(bad)
push
or
pusha
test
xor
pop
and
int
mov
sbb
lds
jne
gs
fcmovu
not
push
pusha
push
push
cmp
jmp
(bad)
call
mov
add
lea
sbb
pop
jbe
sub
inc
lods
pushf
(bad)
(bad)
(bad)
jmp
lods
popa
ds
pop
int3
sbb
xlat
(bad)
out
sub
xchg
lods
sub
xor
or
sbb
or
call
adc
dec
mov
aam
and
jmp
test
mov
dec
pop
nop
ins
ins
or
push
mov
mov
jge
stos
test
pop
cdq
(bad)
(bad)
(bad)
jmp
push
sub
fs
scas
enter
lods
imul
data16
lea
cmc
(bad)
jg
push
xchg
add
pmulhuw
mov
push
outs
add
aam
(bad)
(bad)
mov
les
repz
mov
push
movs
pop
cld
xor
dec
repz
add
out
or
outs
xor
lods
push
int
fcom
push
cwde
ror
rol
jnp
loope
(bad)
out
cli
sub
pop
and
push
clc
ret
lock
sub
push
xor
lds
jg
lock
rcl
arpl
loopne
lods
fwait
dec
hlt
sbb
mov
(bad)
(bad)
(bad)
js
(bad)
adc
in
push
inc
adc
dec
repnz
and
arpl
or
inc
lea
lea
sub
push
mov
ror
(bad)
or
adc
test
aam
inc
xlat
jecxz
adc
push
xlat
test
(bad)
lods
test
call
jle
cs
mov
test
mov
mov
aam
pop
add
movs
dec
iret
pusha
out
sbb
push
push
lock
loopne
push
mov
add
iret
mov
adc
lahf
(bad)
call
xchg
or
dec
enter
xchg
adc
sbb
movs
ss
dec
inc
cdq
xchg
arpl
shr
xor
(bad)
(bad)
(bad)
jmp
out
mov
adc
pushf
sub
fdivr
rol
adc
cmp
(bad)
dec
leave
inc
sub
rcl
clc
mov
js
lods
sub
mov
mov
adc
jmp
leave
shr
dec
imul
xchg
ss
(bad)
(bad)
jmp
push
ss
pushf
xor
adc
inc
push
leave
pusha
mov
mov
std
ficomp
(bad)
(bad)
out
(bad)
add
jge
xor
ret
mov
xchg
fwait
pusha
mov
xor
cmp
jno
adc
push
sbb
fcomp
add
(bad)
(bad)
jmp
mov
mov
outs
(bad)
fsubr
mul
scas
jl
sti
mov
out
in
lock
out
stos
xlat
pop
pop
(bad)
in
into
inc
outs
xchg
push
jo
loopne
sbb
adc
adc
dec
xchg
adc
loop
bndldx
pop
inc
push
sub
push
add
push
hlt
cmps
pop
push
pop
fisub
mov
pop
mov
mov
mov
(bad)
cmp
enter
into
cmp
test
push
loope
sbb
mov
lock
add
inc
aam
popa
add
sub
clc
call
cld
rcl
into
mov
in
ins
cs
lea
sbb
ja
add
or
fsub
lahf
mov
fwait
add
dec
test
adc
lahf
push
lock
sar
les
addr16
mov
inc
pusha
jp
sub
(bad)
(bad)
(bad)
fisttp
mov
test
sahf
lods
scas
jmp
xor
or
fild
rcr
xor
adc
ret
ins
sub
(bad)
(bad)
call
leave
neg
xchg
push
rol
mov
je
inc
pop
sbb
test
shr
mov
js
out
daa
cs
push
sub
(bad)
cs
mov
shl
pop
lods
mov
(bad)
pop
cmp
mov
outs
adc
cld
scas
mov
push
(bad)
(bad)
(bad)
out
lock
inc
cld
sbb
jo
jno
in
lods
ret
retf
inc
ins
xor
(bad)
rol
xchg
outs
or
dec
mov
pop
adc
push
dec
popa
adc
push
and
dec
inc
sbb
jo
and
ret
pop
das
sti
mov
pop
add
mov
jmp
mov
adc
into
aaa
inc
fdiv
inc
jmp
inc
adc
(bad)
(bad)
mov
in
hlt
iret
push
push
sub
lock
jl
jo
and
rol
mov
jne
arpl
mov
dec
sbb
mov
ja
xchg
not
xor
cmp
xchg
push
clc
fist
not
ins
or
les
(bad)
mov
or
xor
adc
out
xor
xor
mov
outs
xor
cmp
mov
cmps
(bad)
je
mov
mov
jg
(bad)
cmp
jg
(bad)
out
ret
pop
das
jl
les
outs
cld
enter
adc
out
sub
pshufw
dec
loopne
cmc
imul
and
(bad)
push
loopne
clc
mov
jg
les
mov
cmps
adc
lock
das
clc
mov
nop
cld
(bad)
out
sub
add
mov
inc
clc
sbb
(bad)
(bad)
jmp
dec
or
inc
rol
mov
nop
mov
add
std
(bad)
(bad)
jg
or
sbb
ret
test
sub
add
ret
mov
mov
rol
fild
jle
mov
push
repz
push
or
bound
stos
(bad)
mov
test
xchg
mov
mov
add
push
mov
ret
mov
(bad)
dec
pop
outs
sub
pusha
pushf
pop
add
out
es
mov
jmp
add
mov
mov
add
shl
inc
ins
add
sbb
add
sub
mov
loopne
fiadd
mov
call
in
add
mov
aaa
cmp
das
mov
call
xchg
xchg
(bad)
(bad)
fisttp
div
xor
shl
sbb
cmp
xchg
push
xchg
outs
(bad)
(bad)
call
and
or
inc
ficom
(bad)
aam
movs
adc
inc
pusha
(bad)
jl
jecxz
pop
jns
dec
jmp
push
iret
xchg
outs
dec
in
sbb
cwde
les
push
push
xchg
cdq
mov
je
sbb
fdivr
leave
mov
or
xchg
(bad)
aam
pop
(bad)
(bad)
fcomip
test
or
dec
cmp
jo
mov
push
cmps
(bad)
(bad)
(bad)
push
xor
rcl
dec
sbb
dec
mov
xor
inc
adc
mov
xchg
fiadd
sub
xor
ret
(bad)
(bad)
(bad)
in
stc
sub
mov
and
movs
rol
ins
fmul
mov
mov
(bad)
(bad)
(bad)
call
ret
push
jns
std
out
or
lea
ret
fwait
push
jecxz
mov
call
ret
test
cmp
bound
ins
test
(bad)
(bad)
(bad)
inc
repz
jmp
or
(bad)
mov
out
jbe
retf
jb
(bad)
mov
fcomip
call
lea
xchg
push
into
jmp
cwde
add
loop
xchg
clc
push
push
jb
(bad)
(bad)
(bad)
inc
pop
lock
mov
or
adc
mov
lods
adc
sbb
retf
mov
add
jg
lds
pop
mov
or
cmp
shl
scas
clc
jg
movs
ins
aad
pop
push
fcmovbe
rol
sub
test
dec
dec
mov
(bad)
cwde
adc
add
xor
lods
jb
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
push
stos
mov
cmp
push
in
sub
xor
sbb
adc
inc
adc
scas
jo
idiv
jg
cmp
cmp
mov
pusha
cmps
sbb
test
dec
add
outs
and
call
push
mov
rol
adc
cmp
repnz
rcl
les
aaa
cld
(bad)
(bad)
out
and
cmp
xor
adc
into
lods
dec
jnp
aad
shl
pusha
mov
dec
inc
adc
jp
dec
fadd
(bad)
push
loop
mov
mov
mov
add
mov
aaa
sbb
mov
push
repnz
(bad)
stc
enter
outs
mov
push
data16
jno
in
push
adc
out
cmps
(bad)
push
jmp
mov
xor
add
(bad)
pusha
mov
xchg
fstp
in
ss
add
(bad)
pop
adc
les
push
outs
push
out
pusha
mov
or
(bad)
jmp
mov
ins
cmp
les
enter
add
mov
and
inc
cmp
cmp
jmp
mov
mov
adc
cdq
push
test
push
cmp
inc
sbb
sbb
mov
mov
push
jnp
sub
aad
xchg
mov
sub
jmp
mov
and
sub
fimul
add
daa
xchg
imul
call
push
add
jecxz
mov
push
push
popf
sbb
ror
das
jmp
inc
mov
out
test
inc
mov
sbb
loop
call
cld
dec
pop
sub
fs
add
sub
push
arpl
je
mov
(bad)
call
in
out
fidivr
jnp
(bad)
xchg
sbb
ds
inc
mov
or
jmp
add
sbb
ret
mov
out
adc
add
jmp
mov
xor
cmp
(bad)
jmp
mov
xor
or
dec
or
les
pop
(bad)
psllw
vprotb
fs
popa
xchg
push
add
(bad)
(bad)
jmp
bound
dec
push
add
sbb
adc
xchg
cmp
test
mov
imul
js
or
(bad)
(bad)
push
or
jmp
mov
jmp
cli
leave
sub
mov
call
out
mov
dec
jmp
add
test
(bad)
call
xor
lods
cmps
mov
sahf
adc
retf
inc
scas
lods
mov
sti
imul
jmp
sbb
clc
mov
inc
pop
or
mov
mov
mov
test
jmp
data16
(bad)
inc
jmp
mov
iret
into
mov
mov
mov
adc
outs
mov
xor
adc
or
(bad)
push
or
(bad)
adc
lock
push
push
cmp
push
data16
nop
scas
pmaxsw
rol
call
push
add
test
dec
jno
retf
nop
outs
mov
scas
sub
cmp
mov
stos
mov
sbb
or
cli
jmp
adc
mov
or
ins
xor
(bad)
(bad)
xchg
ret
scas
sub
add
sub
gs
mov
xchg
cli
pop
ja
cmc
aad
cmp
int
sar
cmps
and
cmp
or
pusha
inc
or
cmp
(bad)
jg
inc
xchg
or
add
les
inc
inc
adc
and
ja
mov
fnstsw
xchg
std
push
std
into
mov
inc
jg
sahf
js
mov
mov
mov
mov
vmread
imul
rol
add
int3
cmp
in
(bad)
call
sbb
rol
dec
into
inc
ret
pop
lahf
cld
out
mov
sar
repnz
aas
add
and
cli
jmp
stos
sti
(bad)
(bad)
(bad)
call
inc
fdivr
cmp
into
adc
sbb
(bad)
or
sar
sahf
enter
jmp
and
(bad)
(bad)
cmp
inc
cmp
or
inc
ret
cdq
adc
adc
out
and
inc
add
scas
jbe
mov
cmc
and
or
call
jmp
xor
add
and
das
mov
and
(bad)
and
mov
repnz
ds
xor
mov
std
push
mov
enter
mov
add
and
(bad)
(bad)
(bad)
jmp
adc
sbb
add
jo
sub
xor
mov
(bad)
(bad)
(bad)
inc
cli
gs
lea
dec
push
and
daa
leave
dec
cli
scas
mov
pop
mov
mov
add
out
(bad)
(bad)
(bad)
(bad)
cmp
cmp
dec
mov
pop
(bad)
push
xchg
adc
and
jmp
test
aaa
sbb
jmp
add
inc
aas
bound
push
adc
add
and
retf
push
sub
pop
lahf
(bad)
push
retf
repnz
int3
pop
xor
sub
cld
mov
cdq
(bad)
and
ss
imul
(bad)
inc
adc
cmp
or
add
fadd
cs
(bad)
(bad)
jmp
(bad)
cmp
sbb
stc
int3
xor
jecxz
fwait
jns
(bad)
(bad)
(bad)
inc
test
aaa
pop
jmp
mov
(bad)
push
mov
or
(bad)
retf
push
push
xchg
inc
add
adc
add
push
sbb
push
add
inc
(bad)
(bad)
(bad)
push
jno
adc
and
aas
jecxz
push
xchg
mov
test
adc
out
js
in
imul
call
xchg
jmp
xor
test
loopne
or
shl
adc
cmps
sbb
pop
adc
xor
shl
mov
in
addr16
(bad)
(bad)
(bad)
cmp
fstp
xlat
ja
and
pop
add
adc
add
nop
sbb
push
sar
(bad)
(bad)
(bad)
dec
out
add
adc
dec
popa
or
sub
pop
(bad)
mov
mov
ins
sub
scas
add
jmp
jne
lea
push
sbb
xchg
fisub
(bad)
mov
add
lods
or
xchg
add
adc
or
ins
add
mov
(bad)
(bad)
in
shr
call
mov
shl
aaa
dec
test
adc
loope
push
aaa
adc
dec
jle
mov
in
push
mov
movs
and
sub
xlat
or
(bad)
jp
fcomi
stos
mov
jecxz
adc
inc
cmc
mov
pop
cld
out
mov
or
pusha
xor
(bad)
add
inc
push
std
(bad)
call
rol
test
inc
adc
mov
xor
or
clc
bound
sub
(bad)
(bad)
(bad)
dec
and
or
call
lea
jbe
aam
ss
sub
(bad)
loopne
and
jmp
clc
fwait
dec
loopne
adc
mov
xor
(bad)
adc
sub
and
push
mov
scas
mov
retf
lods
int3
dec
jge
xchg
mov
mov
repnz
out
mov
jg
(bad)
pop
rcr
adc
dec
add
inc
sub
mov
(bad)
mov
int3
inc
(bad)
es
cmp
(bad)
nop
adc
xchg
test
scas
dec
dec
mov
je
jae
ret
sahf
(bad)
loop
(bad)
(bad)
jmp
je
inc
mov
rol
femms
pusha
pushf
mov
or
and
jg
dec
popa
cmp
dec
mov
dec
mov
cmp
xor
jb
test
pop
dec
sbb
(bad)
(bad)
jmp
jne
retf
ja
loopne
cmp
mov
aad
xchg
xor
(bad)
fcomp
add
adc
sbb
adc
mov
test
inc
dec
std
dec
in
stos
cmp
pop
xchg
sub
(bad)
jmp
rol
xchg
cmp
out
mov
add
(bad)
(bad)
(bad)
push
sub
mov
leave
sar
jnp
jmp
fstp
fwait
mov
imul
stos
(bad)
(bad)
std
stc
mov
test
add
add
addr16
add
cmp
(bad)
(bad)
(bad)
mov
or
sbb
sub
inc
push
pop
mov
fs
sbb
sbb
jle
bound
ss
and
sub
aaa
ror
jecxz
add
cwde
add
outs
dec
sub
nop
das
sub
or
jg
das
inc
enter
inc
xor
js
cwde
adc
aam
or
pusha
add
or
mov
sar
cmp
test
cwde
cmps
test
or
jecxz
daa
retf
inc
shl
add
mov
lahf
cmps
call
sbb
push
(bad)
mov
js
xchg
retf
(bad)
(bad)
call
add
jmp
push
push
test
stos
mov
out
(bad)
(bad)
(bad)
jmp
jnp
pop
sub
sbb
or
imul
add
imul
lahf
clc
mov
(bad)
(bad)
cmp
mov
xchg
sub
mov
and
test
and
push
das
ret
add
loope
inc
xchg
sub
call
or
jo
sub
div
call
mov
js
xor
rol
add
mov
or
(bad)
ret
push
(bad)
mov
xchg
cli
(bad)
jmp
icebp
inc
adc
mov
les
pop
sbb
mov
push
lahf
mov
add
push
jmp
add
mov
frstor
sbb
bound
sub
add
bswap
mov
mov
xchg
je
xchg
sub
les
imul
(bad)
(bad)
dec
mov
add
inc
or
pop
neg
or
arpl
adc
adc
mov
mov
push
idiv
mov
add
inc
mov
out
aaa
aad
fistp
jle
and
or
mov
mov
mov
(bad)
fwait
(bad)
adc
or
mov
pop
cmp
push
xor
jo
mov
sub
pop
mov
fisttp
adc
inc
adc
jg
call
cwde
aas
and
inc
dec
icebp
add
mov
repnz
icebp
in
mov
dec
mov
ja
mov
(bad)
push
idiv
call
nop
jo
inc
loopne
xor
xor
add
pop
or
rol
int3
dec
mov
add
lock
cli
push
call
pusha
adc
jl
sbb
aaa
cmp
sbb
stos
sub
push
test
add
(bad)
mov
ret
sti
leave
outs
jns
mov
mov
inc
rol
sti
(bad)
lock
xor
jp
push
xor
fs
loope
les
scas
ror
je
repz
lds
cmp
sar
mov
js
pop
loope
jp
mov
pop
and
aam
mov
dec
stos
dec
fdiv
pusha
les
cwde
rol
in
pop
enter
cld
mov
inc
fucomip
dec
and
inc
or
jae
sbb
enter
inc
clc
adc
dec
lea
(bad)
stc
sub
and
cdq
pop
retf
mov
pushfw
and
fist
retf
mov
sahf
sub
push
test
out
ror
inc
test
fsub
pop
ds
dec
cmp
jl
sbb
retf
xor
sub
int
push
xor
(bad)
inc
push
scas
push
cdq
mov
xlat
int3
push
scas
xor
mov
shl
fiadd
(bad)
rol
stos
out
out
dec
enter
push
add
inc
cld
out
lds
ins
mov
call
sub
mov
cs
gs
xor
inc
imul
mov
iret
mov
fcmovb
and
gs
add
xchg
(bad)
(bad)
inc
mov
mov
sbb
inc
in
xor
dec
sub
sbb
mov
xchg
jmp
push
mov
add
js
add
call
js
js
cmps
shl
test
xor
push
xchg
dec
mov
(bad)
(bad)
(bad)
adc
xchg
into
js
push
lods
addr16
repz
mov
cmp
arpl
jb
sbb
(bad)
(bad)
(bad)
push
test
dec
and
add
enter
push
pop
pop
jmp
xchg
pop
(bad)
call
fld
lods
lods
xchg
movs
ins
pop
test
add
add
push
xchg
test
and
push
adc
adc
add
inc
(bad)
in
imul
pop
mov
in
scas
adc
loopne
daa
jo
add
cwde
add
retf
and
cs
(bad)
(bad)
jmp
ins
xor
retf
jne
ins
test
test
lods
jae
xchg
sbb
or
push
inc
out
or
lock
mov
dec
and
push
mov
loopne
jecxz
add
add
mov
(bad)
call
xchg
outs
adc
xor
adc
adc
mov
(bad)
dec
pop
jg
mov
push
xchg
pop
in
xor
sbb
inc
add
mov
call
pop
and
adc
scas
ret
and
jno
sbb
mov
(bad)
call
mov
sbb
sub
dec
dec
ret
fld
pop
mov
add
cmp
stos
dec
sar
mov
daa
sbb
mov
sub
inc
fild
dec
mov
mov
mov
dec
movs
push
fild
loop
adc
fist
and
mov
and
call
push
es
loope
and
ror
in
std
sub
jb
mov
and
retf
sbb
(bad)
lahf
xchg
ret
adc
push
push
sub
ins
into
(bad)
(bad)
(bad)
jg
mov
lea
or
add
in
xchg
pop
dec
mov
or
(bad)
(bad)
push
inc
addr16
mov
mov
jp
xlat
in
fwait
ja
ffree
jp
sbb
outs
cli
(bad)
(bad)
mov
pop
xor
mov
arpl
pop
jo
mov
ins
jle
clc
(bad)
call
lahf
cmp
sub
jno
mov
sbb
neg
(bad)
(bad)
aas
nop
fld
cmp
enter
pusha
ret
test
(bad)
(bad)
(bad)
call
popa
popa
inc
push
daa
(bad)
fs
lds
fst
ins
js
jb
mov
(bad)
(bad)
out
pop
mov
icebp
test
mov
(bad)
inc
or
fs
or
add
xchg
dec
(bad)
(bad)
(bad)
mov
ficom
pop
mov
mov
arpl
pop
pop
clc
inc
sbb
inc
pop
mov
rcr
fld
xor
inc
pop
or
fadd
push
pusha
inc
cld
(bad)
(bad)
jmp
stc
fs
xor
or
mov
push
fsub
aaa
int
jmp
daa
xor
retf
out
out
cmps
fsubr
or
add
mov
inc
adc
pushf
mov
mov
add
dec
mov
test
mov
scas
test
popa
popf
scas
stos
stos
sub
and
adc
mov
dec
sub
scas
pop
ins
sub
sbb
(bad)
fild
es
ins
add
test
xchg
ds
sub
add
dec
mov
jle
mov
pusha
inc
adc
mov
push
jnp
mov
add
mov
rol
rcr
inc
lock
jno
stos
jo
cmp
lock
(bad)
call
dec
ins
in
inc
mov
adc
jno
jno
pusha
xchg
fld
enter
add
add
sub
test
add
and
pop
or
cmc
push
mov
iret
(bad)
idiv
(bad)
mov
ret
clc
fwait
jg
cmp
pop
inc
in
add
or
push
and
loopne
sar
adc
mov
pop
repnz
lea
nop
das
cmc
(bad)
aam
xlat
pusha
addr16
sbb
jl
fistp
pop
sbb
pop
xor
clc
mov
lds
or
mov
push
or
das
push
das
xchg
mov
lods
clc
jecxz
inc
push
inc
add
loop
jecxz
js
mov
fbstp
lock
mov
or
fdivp
(bad)
sbb
cwde
add
jg
inc
sbb
sub
inc
in
dec
movs
xor
sbb
rol
sti
(bad)
call
lods
pop
and
sar
int
lock
mov
sti
lock
mov
lock
(bad)
jg
retf
out
popf
add
lock
scas
(bad)
out
leave
out
jp
cli
sti
lahf
out
or
aas
ret
sbb
xor
pop
call
mov
add
(bad)
inc
jecxz
aam
adc
imul
fidiv
test
pushf
in
inc
sti
sbb
fmul
ins
mov
inc
stc
int
jge
in
loop
test
icebp
not
mov
push
push
les
fwait
daa
test
bound
mov
or
outs
(bad)
call
cli
aad
xchg
push
mov
stc
call
dec
sahf
dec
rcr
inc
add
add
mov
add
adc
cmp
(bad)
out
sub
std
aam
ret
xchg
jg
push
and
jo
aas
shl
mov
ja
(bad)
push
inc
mov
retf
and
fisttp
mov
cmp
push
add
fadd
jg
ret
(bad)
(bad)
cmp
(bad)
jb
sbb
lock
xchg
mov
in
dec
jns
ss
jo
call
or
pop
mov
ret
dec
mov
data16
jmp
xchg
fnsave
push
dec
dec
adc
rol
mov
xor
in
(bad)
mov
cmp
push
repnz
out
inc
pop
(bad)
outs
cs
xchg
fwait
xchg
popa
sbb
or
inc
add
cs
(bad)
xor
or
into
mov
(bad)
mov
das
cli
call
pop
fistp
mov
inc
dec
xor
(bad)
(bad)
call
inc
test
push
cmps
movs
je
ss
cmps
mov
pop
inc
stos
loop
push
add
(bad)
(bad)
call
cmp
pop
push
jo
xor
add
and
mov
ss
push
xchg
(bad)
(bad)
(bad)
(bad)
jp
movs
xchg
aad
jnp
aad
jle
mov
lods
cmc
addr16
fstp
(bad)
(bad)
mov
int3
lods
jae
stos
or
fild
cld
ret
add
sbb
sub
adc
outs
mov
and
push
push
inc
arpl
lds
mov
pop
push
scas
xchg
mov
xor
rol
or
(bad)
(bad)
(bad)
jmp
sub
retf
mov
lods
lods
pop
mov
pop
test
rcl
cmp
jmp
icebp
dec
sub
xchg
sahf
or
ss
or
or
mov
sub
rcl
or
popf
push
sbb
xchg
leave
or
call
mov
jge
push
mov
cmp
scas
lea
and
inc
mov
mov
fadd
ror
scas
outs
imul
pusha
aaa
call
inc
cmpps
sub
pop
dec
cwde
mov
out
(bad)
cmp
(bad)
(bad)
(bad)
call
(bad)
add
je
add
inc
adc
test
jecxz
xchg
xchg
mov
and
repnz
cmp
test
data16
(bad)
(bad)
push
pushf
cwde
inc
mov
or
sti
mov
and
ins
(bad)
enter
xchg
push
inc
xor
sub
sub
mov
xchg
mov
aam
scas
inc
test
loop
mov
scas
push
jle
ins
in
jo
jo
mov
xor
pop
sub
(bad)
(bad)
(bad)
call
mov
inc
push
sub
cmp
sar
dec
ins
sub
retf
pop
xor
pushf
pop
or
ret
imul
sbb
out
in
mov
add
add
inc
push
push
push
je
adc
mov
and
push
popf
mov
out
cli
inc
xchg
pusha
cmps
push
cmp
inc
add
je
and
pusha
mov
arpl
(bad)
mov
stc
(bad)
pop
popf
mov
(bad)
xlat
mov
inc
mov
mov
mov
push
rol
es
(bad)
(bad)
dec
mov
mov
daa
or
ret
add
scas
xchg
and
sbb
lock
jno
ror
and
inc
dec
mov
mov
adc
cmp
xor
scas
test
cmp
into
or
test
fwait
mov
sbb
adc
call
sub
js
mov
fmulp
test
cmp
(bad)
jns
test
or
les
mov
mov
add
les
clc
(bad)
dec
jo
push
inc
inc
cmp
test
fsub
aas
(bad)
push
add
out
mov
jbe
(bad)
ret
jns
sahf
test
or
mov
pop
jg
xor
adc
dec
xchg
sub
xchg
pushf
outs
(bad)
call
inc
xchg
push
inc
test
call
mov
lods
stos
call
adc
(bad)
(bad)
jmp
mov
lahf
call
xchg
mov
sbb
shl
ins
sbb
dec
mov
pusha
xchg
push
mov
and
ror
rol
mov
add
(bad)
jg
mov
(bad)
push
pop
mov
mov
repnz
jb
adc
pop
daa
mov
(bad)
(bad)
call
daa
fwait
mov
or
mov
sbb
inc
or
in
(bad)
jno
fwait
sbb
into
sbb
(bad)
(bad)
(bad)
push
adc
add
stos
sbb
mov
repnz
jl
lds
fistp
cmp
scas
(bad)
jmp
inc
rol
hlt
ror
int
jp
movs
fdivrp
sub
imul
adc
add
or
stos
test
pop
cmp
lods
mov
sbb
ror
(bad)
(bad)
jg
ja
ins
not
jnp
popf
neg
dec
jecxz
neg
jne
ins
mov
dec
(bad)
push
loope
push
add
pop
icebp
(bad)
sbb
mov
jg
outs
add
or
and
mov
inc
mov
(bad)
mov
fcmovnbe
dec
fcomp
jle
in
mov
sahf
sti
in
mov
imul
inc
(bad)
jnp
ret
or
adc
sbb
pop
outs
jle
in
int3
lock
icebp
or
(bad)
push
inc
adc
pop
(bad)
bnd
mov
mov
mov
bnd
pop
cld
std
and
jnp
std
rcr
ins
xlat
aaa
cmc
in
sbb
add
(bad)
shr
adc
mov
out
clc
sub
nop
pusha
add
cmp
loop
clc
(bad)
inc
add
out
add
mov
pop
pop
sub
out
test
push
or
sar
clc
rcl
cmp
and
imul
push
push
xchg
cmp
pop
add
cld
(bad)
(bad)
dec
sbb
lock
sbb
int3
bound
adc
aaa
sti
xor
xor
sbb
(bad)
jmp
sti
dec
test
add
add
call
clc
cmp
add
rcl
es
call
das
push
push
cli
push
mov
inc
xor
rol
jg
(bad)
(bad)
in
xchg
arpl
lds
mov
lea
push
aas
cdq
cmp
jle
xchg
(bad)
(bad)
(bad)
call
sbb
push
sahf
repnz
addr16
sub
mov
cmp
xor
and
adc
mov
pop
and
adc
sbb
xor
pop
leave
int3
push
mov
xchg
call
(bad)
(bad)
jmp
retf
pop
adc
push
cdq
int
push
push
xchg
cwde
aam
cmp
retf
push
push
(bad)
xchg
enter
dec
inc
test
mov
mov
leave
dec
ror
js
push
(bad)
fcomip
jmp
out
gs
shr
pusha
mov
cmp
(bad)
stc
scas
xchg
div
(bad)
(bad)
(bad)
jmp
xacquire
mov
xchg
mov
pop
jl
add
push
nop
xchg
inc
or
call
dec
mov
ret
lds
fisub
fistp
rol
(bad)
call
sar
imul
ss
mov
mov
sbb
cmp
cwde
add
(bad)
(bad)
(bad)
push
aam
ins
retf
dec
setbe
mov
pop
xor
sub
adc
stos
(bad)
(bad)
(bad)
call
xchg
ins
pop
sub
shr
scas
sbb
mov
sub
stos
add
and
stos
xchg
cmp
cld
xor
clc
inc
stos
pop
and
mov
lds
cwde
shl
sbb
(bad)
jmp
sub
push
inc
mov
cmp
and
xchg
mov
popa
mov
sub
in
mov
jb
ins
cmps
inc
and
jo
push
push
and
ret
mov
(bad)
mov
mov
cmps
mov
ficom
mov
hlt
pop
sub
and
add
loop
ins
cmp
scas
adc
dec
aaa
push
xor
mov
shr
gs
aaa
repnz
jne
ret
lahf
xor
(bad)
call
inc
sbb
ret
ins
imul
add
add
shl
ins
add
es
lock
ds
(bad)
(bad)
mov
loopne
pop
or
pop
add
clc
ss
shl
(bad)
(bad)
call
mov
mov
ret
pusha
inc
mov
push
jmp
adc
xor
mov
shl
test
pop
movs
mov
das
shl
mov
fstp
push
inc
lds
(bad)
(bad)
inc
ret
push
sub
retf
add
and
xor
and
jg
std
cmp
arpl
inc
aam
nop
daa
iret
xchg
pop
(bad)
in
sub
sbb
sub
mov
push
dec
dec
and
sbb
(bad)
xchg
(bad)
mov
cmp
js
and
xor
or
in
ret
repnz
push
hlt
fild
movs
dec
inc
or
rol
mov
mov
and
push
mov
cmp
aam
inc
adc
addr16
inc
sub
dec
adc
icebp
mov
loopne
mov
jb
in
call
and
(bad)
push
push
sahf
mov
jns
lahf
pop
clc
maxps
std
js
in
outs
daa
call
ret
cwde
nop
ror
addr16
aaa
jbe
pop
mov
(bad)
(bad)
std
fdivr
inc
pop
xchg
and
xchg
ss
or
add
fsub
or
mov
sbb
cmp
add
test
ss
dec
mov
push
popa
mov
data16
inc
push
push
add
mov
pop
mov
and
and
xor
adc
and
adc
imul
jae
ret
mov
dec
mov
inc
or
jp
movs
adc
push
popa
dec
movs
(bad)
jmp
jae
dec
mov
fs
or
clc
lods
xor
sub
arpl
and
add
clc
(bad)
mov
stos
sub
or
jmp
sub
call
cmps
sahf
pop
retf
sbb
test
jns
mov
stos
lods
adc
(bad)
inc
lds
sbb
les
mov
sbb
scas
jno
add
rol
cmp
adc
call
(bad)
scas
inc
cwde
add
jb
outs
mov
and
rol
xor
add
sbb
mov
out
xor
xor
mov
movq
jo
les
pop
or
(bad)
adc
cli
add
cmp
adc
call
cmp
lods
in
pop
mov
data16
out
scas
push
xchg
xlat
inc
pop
and
mov
or
cmp
cmc
les
pop
mov
jmp
mov
mov
rcr
mov
and
(bad)
dec
shl
or
xor
(bad)
js
lods
jo
std
xor
pop
dec
idiv
aad
call
pop
mov
jns
(bad)
aaa
aad
aaa
out
inc
add
ins
mov
ins
fidivr
out
lods
movs
mov
cli
shr
cmp
push
adc
std
dec
dec
pop
(bad)
mov
cld
out
(bad)
adc
adc
loopne
ret
push
or
js
pop
int3
loopne
or
(bad)
dec
push
and
jge
iret
inc
das
std
bnd
movs
(bad)
repnz
pop
mov
iret
or
loop
inc
std
(bad)
push
mov
pop
adc
add
xchg
inc
lahf
add
(bad)
jmp
fadd
and
add
or
mov
outs
nop
inc
clc
cwde
adc
mov
cmp
pop
add
mov
test
lods
(bad)
(bad)
inc
cmp
mov
enter
mov
xchg
jmp
or
inc
cli
scas
test
sbb
sbb
pop
push
mov
out
and
(bad)
mov
jge
jo
sbb
rol
adc
(bad)
inc
les
and
outs
add
imul
popf
mov
popa
push
fadd
and
es
dec
jmp
daa
inc
mov
add
(bad)
mov
(bad)
(bad)
(bad)
push
(bad)
jle
fs
push
in
enter
xchg
jg
pop
and
dec
xchg
mov
sar
dec
inc
push
sbb
push
dec
dec
pop
mov
xchg
mov
mov
push
push
(bad)
(bad)
dec
dec
rcr
or
inc
pop
mov
and
jns
and
xchg
add
mov
(bad)
(bad)
(bad)
cmp
xor
jo
inc
sbb
sbb
(bad)
retf
push
xchg
mov
cwde
retf
repnz
loopne
in
fwait
ret
jae
dec
push
icebp
xchg
les
dec
adc
test
(bad)
mov
add
hlt
pusha
add
sbb
add
test
(bad)
jns
jb
fidiv
sub
cmp
cmp
xchg
jl
or
inc
push
dec
xchg
sbb
fiadd
fstp
(bad)
(bad)
stc
rcl
in
push
or
pop
mov
or
(bad)
(bad)
push
jecxz
adc
and
sub
and
xchg
pop
ret
dec
sub
in
push
mov
push
mov
(bad)
(bad)
(bad)
in
test
data16
cmp
dec
rol
call
adc
sbb
push
lahf
shr
mov
inc
add
push
xor
push
ret
push
aad
stc
inc
cwde
mov
mov
push
fs
xchg
mov
push
popf
stos
sar
es
jmp
(bad)
(bad)
mov
or
add
inc
or
cmp
(bad)
xchg
xchg
add
popa
mov
repnz
and
(bad)
(bad)
call
loop
jne
rcr
add
sbb
add
retf
jp
xor
test
ror
mov
call
ins
jne
movs
inc
leave
push
mov
jge
mov
in
sub
adc
pop
add
(bad)
push
(bad)
out
test
leave
mov
jae
fcmovnu
adc
mov
scas
(bad)
push
pushf
add
inc
(bad)
sub
cmp
loopne
enter
fwait
into
stos
fiadd
dec
(bad)
mov
inc
outs
int3
je
push
ror
jb
loopne
(bad)
(bad)
inc
jb
add
mov
(bad)
cmp
jmp
popa
imul
int
(bad)
mov
xor
push
(bad)
sbb
cli
aaa
setae
or
rol
aaa
std
in
add
and
test
(bad)
xor
ret
add
push
xor
jmp
push
bound
inc
(bad)
int
xchg
int3
and
add
dec
mov
call
sbb
adc
add
sub
add
mov
push
or
mov
cmc
push
sub
jnp
jecxz
clc
dec
sub
hlt
ins
out
ss
lea
jb
shr
xor
sbb
add
jp
xor
fld
jp
adc
push
sub
pushf
jmp
call
sub
sbb
push
sbb
pop
pop
xor
jo
and
rcr
(bad)
call
test
dec
mov
shl
dec
xchg
icebp
(bad)
aas
or
scas
jecxz
test
or
jnp
stos
aam
push
cmp
cmp
bnd
xor
or
fcomip
xor
or
inc
cmp
xor
sub
imul
fistp
iret
xchg
sti
cs
lock
pusha
jecxz
xchg
and
mov
in
fnsave
clc
fucom
mul
mov
mov
xor
test
(bad)
(bad)
call
pop
loope
push
sbb
sbb
inc
mov
pop
fadd
pop
add
mov
cmp
xchg
loop
cli
(bad)
(bad)
mov
bound
xchg
jmp
xchg
test
mov
mov
inc
dec
pop
popa
xchg
dec
loope
push
into
xor
sbb
mov
jmp
add
mov
xchg
inc
sbb
cmp
xchg
dec
bnd
sub
adc
into
add
inc
es
add
sbb
mov
mov
add
test
test
popa
xchg
std
jmp
adc
pop
inc
cmps
fwait
push
cwde
out
xchg
ss
stos
lods
xchg
push
nop
push
js
scas
mov
cli
imul
jge
xor
jmp
enter
jo
das
aam
push
stos
lods
mov
push
imul
push
cwde
push
test
mov
mul
sahf
dec
pop
sbb
jmp
pop
(bad)
mov
mov
sub
(bad)
or
(bad)
mov
pop
lods
sar
adc
lods
ret
int3
mov
inc
adc
arpl
fsubr
aaa
aas
jns
mov
sbb
retf
mov
test
dec
call
or
leave
std
test
(bad)
xor
dec
push
jo
lock
sub
dec
js
mov
inc
mov
mov
fisttp
sbb
adc
enter
xchg
mov
int
fidivr
popf
neg
xor
mov
test
adc
fist
or
xor
outs
mov
adc
adc
pop
sahf
cmp
push
mov
ret
pop
mov
inc
outs
inc
xor
jmp
mov
retf
or
(bad)
(bad)
mov
sti
or
scas
sti
out
mov
mov
pop
scas
ret
fistp
leave
loopne
push
dec
adc
enter
in
mov
(bad)
(bad)
mov
(bad)
jecxz
cld
cld
adc
fcmovnu
(bad)
in
cld
and
mov
(bad)
mov
adc
mov
inc
pop
fidivr
or
add
jge
add
push
and
out
inc
adc
push
add
(bad)
(bad)
call
js
pop
popa
repnz
ret
cmc
leave
mov
sub
mov
dec
sbb
mov
sub
rcr
and
cli
outs
clc
jmp
(bad)
dec
jle
sbb
or
pusha
sbb
xchg
inc
sbb
das
sub
iret
jg
ins
fist
mov
and
push
nop
sar
fs
mov
jle
and
sbb
push
hlt
jmp
mov
test
jle
jmp
sbb
adc
mov
fild
mov
dec
xor
mov
cmp
push
mov
fs
mov
push
jbe
xchg
(bad)
(bad)
(bad)
outs
and
adc
pop
(bad)
aas
pop
mov
inc
lock
cmp
mov
sbb
(bad)
(bad)
(bad)
dec
iret
xchg
scas
inc
gs
adc
stc
pop
jb
xchg
or
xor
cmp
dec
mov
movs
hlt
movs
xor
fxch
dec
std
(bad)
dec
push
jbe
aam
sub
jb
aad
and
dec
std
mov
mov
or
xchg
lea
xchg
call
xchg
dec
push
cmp
or
sub
stc
add
jmp
(bad)
(bad)
(bad)
jmp
rcr
adc
sbb
xor
and
add
nop
push
sbb
(bad)
inc
(bad)
shl
pop
call
test
test
fdiv
(bad)
(bad)
(bad)
fidiv
dec
add
aam
mov
cmp
loopne
push
push
add
jl
or
rcr
pop
loopne
lahf
add
mov
loope
dec
faddp
push
aam
ins
jne
rcl
(bad)
jbe
(bad)
(bad)
jmp
(bad)
mov
lods
arpl
rcl
mov
dec
lods
gs
cwde
pop
loope
mov
outs
in
adc
test
inc
test
dec
loope
or
sbb
push
mov
mov
retf
mov
(bad)
sbb
cmp
push
js
mov
and
pop
into
call
scas
call
xchg
ss
jns
lods
mov
fs
outs
or
add
(bad)
inc
mov
inc
movs
and
mov
mov
lods
test
fcmovbe
jp
mov
dec
dec
xor
(bad)
(bad)
(bad)
jmp
sbb
nop
xchg
mov
mov
fsub
pop
out
and
cmp
xchg
test
fwait
(bad)
jmp
push
call
or
lock
push
sbb
popw
mov
jmp
push
cs
push
ins
pop
jg
(bad)
jg
push
push
jl
add
ins
or
mov
fs
(bad)
(bad)
(bad)
inc
sbb
pop
jbe
popa
or
rol
outs
fiadd
ins
loop
pushf
adc
jecxz
inc
sub
(bad)
inc
adc
mov
mov
hlt
cwde
outs
cmp
es
loop
inc
and
ja
cmp
add
sub
adc
jmp
mov
and
jecxz
mov
pop
ins
mov
push
inc
push
jmp
sub
test
loop
jp
xor
(bad)
jmp
inc
xchg
fdiv
inc
inc
sub
jle
cdq
xchg
bound
pop
nop
sub
cmps
cmp
fsub
enter
pusha
shr
mov
mov
dec
inc
lods
sbb
push
push
push
icebp
add
inc
add
pop
mov
mov
adc
mov
dec
stos
ror
(bad)
(bad)
(bad)
inc
or
loope
cmps
(bad)
mov
xchg
pop
addr16
(bad)
(bad)
or
cmp
add
sbb
(bad)
jmp
pusha
jecxz
push
ds
cmp
ffree
lahf
das
out
or
jae
sub
(bad)
(bad)
fdiv
fmul
xchg
mov
and
pop
shl
je
mov
jg
push
cmp
hlt
loope
xchg
and
shl
shr
std
add
pusha
jg
(bad)
out
cli
(bad)
(bad)
jg
cli
daa
mov
or
add
mov
test
bound
test
push
icebp
(bad)
pop
pop
and
(bad)
(bad)
fdiv
jg
push
add
pop
xchg
cwde
lds
add
stos
test
inc
mov
push
cmp
and
js
push
ss
call
dec
sub
pop
movs
nop
push
inc
mov
call
push
cmps
add
fstp
inc
bound
inc
xchg
dec
in
add
cwde
les
into
add
(bad)
(bad)
js
mov
or
test
bound
out
jne
(bad)
call
mov
mov
push
cli
addr16
test
call
loopne
or
adc
aas
pushf
or
imul
or
mov
ror
popf
mov
sub
or
lahf
dec
mov
loopne
scas
lahf
in
fisubr
mov
ret
sar
(bad)
jmp
in
scas
retf
stos
scas
shl
retf
fmul
jmp
inc
inc
jl
lock
mov
loope
daa
sub
(bad)
dec
scas
popa
jmp
ds
enter
fptan
stos
lods
scas
add
push
jmp
mov
mov
call
or
(bad)
push
out
lds
pop
mov
pop
xor
or
add
add
(bad)
dec
fdivr
mov
pushf
or
movs
sub
scas
adc
adc
pop
call
rol
ror
ror
sub
ins
xor
sbb
inc
cmp
aad
mov
sbb
popf
not
pop
mov
sub
cmc
aad
inc
mov
aas
in
ja
add
fdivp
call
mov
xor
push
sbb
inc
das
push
fistp
xor
jo
or
fisubr
sub
jmp
inc
pop
inc
push
fwait
(bad)
push
js
xchg
sub
in
and
ret
dec
jg
(bad)
jmp
jbe
sub
imul
cld
lock
lahf
cmp
mov
pop
push
cld
inc
xor
cmp
mov
lods
das
push
aaa
retf
call
fnstsw
inc
loopne
cmc
push
fs
les
add
(bad)
jp
add
sahf
jg
sbb
mov
clc
(bad)
jmp
std
adc
add
test
mov
adc
jo
push
rol
sbb
clc
mov
pop
mov
sbb
not
cmp
loopne
(bad)
(bad)
(bad)
fbld
push
jle
cmp
cmc
bound
mov
cmp
or
repnz
inc
add
cmp
add
pusha
cld
jg
cmps
xor
es
add
sub
sahf
jmp
add
(bad)
(bad)
mov
outs
add
inc
sbb
outs
and
push
adc
mov
adc
add
add
xchg
iret
call
push
pop
(bad)
inc
ret
mov
sbb
loopne
idiv
sbb
lock
(bad)
call
mov
call
shr
out
xchg
xchg
popa
add
sbb
cdq
retf
(bad)
(bad)
out
mov
push
and
in
sbb
jl
adc
mov
(bad)
dec
movs
adc
iret
nop
sbb
cmp
imul
outs
cmp
data16
retf
xchg
fwait
shl
jb
(bad)
(bad)
(bad)
push
push
sub
xor
mov
in
sbb
inc
xor
pop
call
add
jmp
adc
and
lds
popf
mov
leave
test
and
daa
cmp
push
loope
cmp
(bad)
push
es
xchg
into
dec
sahf
inc
sub
jg
sub
icebp
inc
or
mov
fcom
dec
stos
sbb
repz
pop
lock
sbb
call
dec
inc
sbb
push
pop
xchg
hlt
fwait
or
call
cmps
(bad)
push
xlat
mov
clc
loopne
ds
out
push
sahf
call
mov
ja
sahf
shr
cld
dec
add
and
adc
mov
xchg
(bad)
(bad)
(bad)
(bad)
push
sub
mov
xlat
mov
outs
or
push
mov
or
sbb
mov
daa
inc
mov
xor
add
shr
pop
jg
imul
(bad)
push
xor
sub
dec
(bad)
sbb
and
push
scas
jp
imul
inc
jle
in
clc
jg
jmp
retf
fiadd
mov
cmc
ror
sub
mov
jo
(bad)
inc
adc
inc
and
pushf
xor
sbb
cld
(bad)
call
addr16
push
pop
sar
or
mov
fdiv
(bad)
(bad)
(bad)
dec
or
mov
test
rol
adc
add
add
jg
jmp
sub
inc
sub
cmp
test
call
(bad)
das
dec
pushf
sbb
sbb
push
xor
or
in
outs
mov
(bad)
stos
test
imul
cmc
test
nop
or
(bad)
(bad)
mov
lahf
mov
xchg
bound
stos
and
xor
push
fbld
aas
cld
(bad)
(bad)
dec
jb
sub
in
cwde
adc
in
adc
xchg
xchg
mov
popa
add
movs
es
out
jp
push
add
jno
mov
mov
mov
in
and
sbb
mov
fiadd
dec
dec
or
pop
pop
mov
inc
fld
jnp
inc
data16
rcl
sub
jno
aam
xchg
add
(bad)
jmp
dec
xchg
adc
push
lahf
adc
test
outs
scas
das
loope
or
lea
(bad)
mov
mov
loopne
sbb
cs
ss
rcr
fwait
imul
mov
sub
(bad)
(bad)
(bad)
jmp
loope
jl
pop
sahf
retf
mov
and
aad
cmp
add
pop
in
cmps
push
sbb
cmp
cli
(bad)
jmp
ror
mov
xchg
cdq
ret
pushfw
ja
je
cmp
add
sbb
out
mov
dec
out
mov
call
mov
dec
addr16
inc
or
pop
sub
fstp
dec
push
hlt
jmp
test
jmp
mov
cmp
jg
cmp
sbb
push
cmp
adc
pop
(bad)
(bad)
(bad)
jmp
and
mov
inc
outs
sub
push
rcr
imul
push
enter
push
loop
das
clc
sub
dec
clc
xchg
inc
imul
push
jmp
and
das
mov
mov
pusha
add
or
or
xchg
push
jmp
addr16
and
lea
mov
mov
popf
xchg
jns
sbb
add
lock
test
ds
movs
jne
ret
lods
or
jg
call
mov
mov
ror
retf
add
lods
mov
not
(bad)
jmp
mov
push
sub
mov
(bad)
stos
or
fdiv
and
sub
je
cmc
or
hlt
test
(bad)
jmp
push
inc
(bad)
fadd
test
xlat
pop
or
(bad)
push
rol
and
jo
(bad)
jnp
pop
out
arpl
(bad)
mov
cmp
outs
or
stos
outs
sbb
enter
inc
sub
test
fild
or
pop
test
push
or
lock
or
sub
aaa
cmp
je
inc
xor
dec
and
cmp
push
sub
psraw
adc
pusha
lods
inc
aam
inc
xchg
add
inc
(bad)
call
imul
ja
jecxz
mov
jl
dec
xor
dec
sti
pop
mov
add
pop
clc
cdq
mov
fist
push
xchg
add
fsub
and
into
mov
ret
push
(bad)
lea
mov
fadd
sub
jl
into
dec
xchg
sub
loopne
add
xor
sub
add
inc
jo
aad
push
push
std
cmc
mov
(bad)
(bad)
cld
adc
add
jnp
hlt
add
repnz
idiv
jecxz
(bad)
(bad)
(bad)
out
out
call
std
mov
adc
and
mov
ret
add
and
lock
(bad)
jnp
push
inc
or
inc
or
add
xchg
add
shr
mov
jmp
sub
inc
neg
das
js
jnp
out
(bad)
clc
mov
lods
test
imul
ja
inc
sbb
imul
add
std
push
push
xlat
mov
cmp
test
mov
cmp
out
loope
ret
sbb
or
std
or
in
xchg
pop
cmp
test
xor
nop
inc
adc
adc
int3
sbb
or
fcomip
mov
or
sbb
add
pop
and
sbb
cmp
imul
pop
std
call
in
sub
in
adc
lods
cmp
sbb
ins
pop
dec
pop
mov
call
xor
ss
inc
add
ror
sub
(bad)
call
ret
add
and
xchg
inc
stc
mov
in
mov
dec
push
loop
call
loopne
xchg
test
cs
pop
retf
push
xchg
mov
pop
sub
mov
mov
addr16
dec
inc
push
push
push
imul
mov
or
mov
shr
push
popa
adc
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xchg
add
adc
push
dec
sbb
icebp
jg
cmp
std
fsub
jbe
fstp
inc
fucomi
push
jno
pop
sbb
cli
out
mov
add
mov
icebp
dec
fmul
adc
(bad)
dec
(bad)
jl
cs
push
xchg
in
test
jae
rcl
aam
and
jl
push
jl
scas
sub
jne
call
ds
add
(bad)
inc
sbb
rol
pop
jl
xchg
pop
xchg
jmp
inc
stos
ins
popa
sub
(bad)
(bad)
(bad)
call
pop
out
xor
xchg
pop
pop
in
mov
fst
scas
outs
mov
pop
jmp
(bad)
inc
fadd
ss
push
(bad)
push
inc
arpl
sbb
std
(bad)
(bad)
call
or
mov
sar
stos
or
inc
jne
adc
cli
(bad)
push
push
and
mov
adc
pop
fisub
nop
imul
pop
pop
and
dec
or
lods
add
add
add
sbb
or
lock
push
(bad)
jl
movs
loopne
sub
mov
cmp
add
fst
mov
and
mov
mov
dec
xchg
push
and
xrelease
shld
clc
push
enter
mov
sub
xor
mov
(bad)
hlt
pop
test
arpl
sbb
aam
push
mov
call
jo
or
cmp
push
inc
add
xor
fmul
lods
jmp
push
pusha
sbb
mov
sbb
shr
xor
(bad)
(bad)
call
xor
cdq
adc
inc
or
stc
enter
xchg
mov
data16
aaa
test
xchg
mov
and
xchg
pop
lahf
js
adc
lods
mov
mov
and
add
and
lock
cli
jmp
retf
mov
(bad)
loopne
dec
pusha
dec
pusha
loop
stos
sbb
jmp
mov
add
mov
add
xor
xlat
lock
call
push
jmp
sbb
popa
mov
cmp
adc
cmc
jmp
jb
jb
enter
test
shl
pop
aas
dec
cs
(bad)
jl
fcomp
(bad)
(bad)
(bad)
jge
aas
sbb
mov
fwait
jo
mov
inc
adc
ins
push
xor
ret
inc
adc
sti
sub
jno
call
sar
int
neg
xchg
push
xlat
jle
mov
(bad)
mov
xor
push
aam
sub
cmp
dec
jle
js
das
sahf
cmp
and
sub
xchg
xor
fild
(bad)
in
ja
cmp
cwde
loopne
xor
mov
sbb
sub
popa
adc
adc
inc
jg
add
inc
rcl
inc
add
adc
or
popf
add
jle
loope
or
xor
mov
or
jb
or
popf
js
jb
pusha
and
dec
mov
mov
les
in
or
jb
sub
and
add
jo
pop
mov
popf
mov
jb
jns
popf
adc
mov
sub
test
mov
sahf
jnp
mov
sub
movs
std
mov
js
add
add
inc
loopne
popf
add
sub
cmps
or
cli
push
sub
pusha
dec
cmp
dec
add
mov
lods
inc
cmp
(bad)
call
adc
sub
add
adc
rol
sbb
mov
jg
test
xchg
dec
test
jno
dec
sub
rcl
ins
stos
sar
fisttp
pop
pushf
mov
pop
imul
shr
arpl
pop
lock
cmp
mov
inc
cmp
scas
cs
and
gs
push
inc
push
mov
lods
dec
enter
push
enter
movs
xor
sub
out
jp
dec
stos
xor
inc
inc
lock
das
jb
dec
inc
(bad)
(bad)
mov
aam
arpl
and
jo
push
pusha
nop
(bad)
(bad)
dec
add
xor
or
jo
fiadd
mov
sti
and
push
in
mov
dec
dec
pop
dec
or
test
jg
dec
mov
dec
clc
call
scas
jne
jl
mov
add
call
out
mov
sar
scas
(bad)
retf
or
shl
mov
test
(bad)
and
out
(bad)
neg
retf
push
(bad)
jl
inc
fisttp
add
fdivr
and
or
inc
add
dec
inc
fistp
(bad)
sbb
inc
call
aas
std
out
retf
jnp
das
cli
push
sub
dec
aaa
rol
(bad)
sbb
sbb
xchg
daa
shr
or
mov
cld
add
mov
pusha
cmp
inc
mov
jmp
mov
cli
xchg
and
outs
push
sahf
fbld
xor
cmps
mov
nop
jp
ja
lock
popf
ja
pop
out
push
xchg
or
push
js
jle
std
arpl
inc
js
cmps
popa
test
add
add
dec
mov
cmp
and
xchg
xchg
loope
ret
xchg
push
out
stos
xchg
and
bound
jmp
inc
loope
jno
jbe
pop
adc
fst
mov
adc
push
test
pop
cwde
wrmsr
add
jae
add
xlat
push
pop
adc
test
add
add
push
xor
mov
jmp
rcr
mov
xor
mov
jp
xchg
jne
movs
in
cmp
(bad)
(bad)
in
(bad)
cmp
xor
jno
cmp
xor
fcmovbe
inc
or
mov
mov
stos
jmp
and
nop
and
arpl
jne
call
add
sbb
imul
imul
cmps
bnd
add
sub
stos
adc
pop
icebp
call
pop
stc
retf
push
mov
xchg
mov
add
adc
or
push
or
or
test
push
shl
jae
fst
es
(bad)
(bad)
call
aas
push
out
outs
cmp
into
xchg
sbb
push
add
fdivrp
ja
clc
dec
sbb
mov
add
inc
out
xor
inc
jge
(bad)
dec
xchg
mov
sub
xor
lds
jne
xchg
inc
sub
xchg
call
(bad)
jp
fmul
fcomp
jl
push
(bad)
(bad)
(bad)
inc
xor
outs
push
movs
mov
dec
mov
sti
bound
sbb
stos
outs
pop
dec
arpl
(bad)
dec
icebp
mov
mov
jecxz
xor
cmc
sub
inc
add
add
mov
les
add
loope
(bad)
jmp
shl
add
mov
ror
aas
dec
(bad)
(bad)
(bad)
dec
lahf
cli
and
inc
or
mov
mov
push
nop
cli
test
mov
push
ja
clc
push
sub
xlat
add
pop
xor
(bad)
call
or
sub
fsub
and
or
mov
ret
mov
lahf
(bad)
(bad)
(bad)
dec
push
mov
xor
mov
jecxz
adc
jmp
jmp
rcl
jnp
adc
jns
inc
fsubp
lea
cld
(bad)
call
pop
nop
sti
add
cmp
add
int3
xchg
sbb
data16
jg
sbb
bound
push
aam
xor
dec
out
pushf
cmps
popa
or
imul
inc
bound
inc
add
mov
sar
add
rcr
and
push
inc
mov
push
lods
loop
sbb
jbe
icebp
out
mov
push
test
add
xchg
jl
dec
(bad)
sbb
dec
push
test
adc
add
sar
inc
mov
dec
ja
mov
es
pop
clc
pop
or
nop
clc
inc
ret
mov
sbb
ja
dec
aad
fmul
inc
fucomi
aad
sbb
cmp
push
das
mov
and
outs
push
sub
hlt
das
pop
ss
inc
add
ins
fmul
or
movs
mov
push
dec
adc
(bad)
pop
sub
mov
push
nop
dec
or
jmp
mov
pushf
int3
test
fcomip
add
adc
cmp
rcr
cmps
add
(bad)
inc
sahf
aaa
sbb
sub
mov
mov
lds
cmp
lds
push
adc
arpl
retf
mov
adc
sar
push
fwait
ss
push
cmp
loope
popf
sbb
ins
pop
mov
fucom
pop
stos
clc
(bad)
(bad)
push
sub
call
mov
adc
xchg
dec
cmp
fadd
outs
bswap
cmp
(bad)
jmp
js
sub
aaa
xor
mov
xchg
adc
add
adc
jo
(bad)
(bad)
call
rcr
mov
fcmovnbe
jge
icebp
in
mov
sbb
and
pushf
(bad)
(bad)
(bad)
push
(bad)
mov
dec
sbb
add
int
adc
mov
jo
jnp
or
(bad)
(bad)
inc
mov
(bad)
dec
call
sti
clc
out
scas
dec
jg
jge
clc
add
loopne
add
(bad)
(bad)
jg
push
mov
ins
add
enter
es
mov
mov
test
jmp
rol
in
and
mov
test
sbb
enter
mov
fiadd
out
es
push
adc
(bad)
(bad)
jg
inc
rcl
ret
mov
inc
dec
hlt
mov
movs
loopne
or
xchg
sub
(bad)
(bad)
call
nop
sbb
xor
pop
or
or
cdq
ins
or
cdq
push
(bad)
mov
pushf
je
and
daa
jbe
sub
fisubr
sub
mov
mov
jg
cmp
gs
add
adc
fs
adc
data16
cmps
lea
stos
movs
xor
jo
push
pusha
clc
xchg
inc
pushf
call
call
mov
in
stos
lods
lods
(bad)
(bad)
(bad)
jmp
add
jmp
mov
mov
push
mov
es
in
mov
cmp
ins
add
(bad)
(bad)
(bad)
inc
adc
rol
daa
pusha
in
inc
adc
outs
js
inc
push
loop
rol
mov
aam
(bad)
or
(bad)
inc
ret
sar
mov
mov
cli
add
sti
push
cmp
(bad)
(bad)
call
dec
jmp
xor
stos
adc
mov
sbb
lods
or
mov
mov
mov
push
ret
out
sbb
cmps
dec
xchg
sbb
xchg
mov
push
cmp
int3
xor
ins
repz
sti
fisubr
push
(bad)
jmp
in
repz
inc
fistp
add
pop
sbb
shl
add
rol
pop
cmp
dec
cmp
mov
jae
(bad)
call
inc
js
jbe
fs
outs
fisub
lods
mov
inc
ret
cmp
std
xor
ss
push
cld
(bad)
mov
std
idiv
adc
mov
popa
xchg
das
mov
add
push
aaa
jno
or
mov
aaa
inc
mov
outs
jg
jp
sahf
ins
jmp
mov
mov
cli
or
ret
(bad)
mov
adc
sub
mov
or
mov
pusha
cmp
loop
std
rcr
loopne
inc
or
adc
adc
ret
and
aam
sti
out
(bad)
(bad)
(bad)
jmp
(bad)
jg
jle
jnp
mov
out
loope
lahf
jbe
mov
fistp
adc
cmc
(bad)
(bad)
jmp
add
push
mov
or
loopne
sets
add
loopne
adc
xor
(bad)
call
mov
jl
cmp
mov
sbb
push
jp
xor
sbb
inc
adc
mov
test
cwde
call
add
xor
xor
pop
adc
push
rcl
jno
and
mov
and
scas
mov
mov
fild
jo
stos
mov
fisub
inc
add
lock
inc
mov
mov
adc
pushf
inc
(bad)
in
add
mov
(bad)
call
ror
add
retf
and
sub
pop
inc
mov
mov
xor
mov
(bad)
(bad)
(bad)
dec
inc
ss
(bad)
(bad)
les
and
rcl
push
cdq
dec
aad
sar
(bad)
jmp
cld
dec
inc
xor
mov
arpl
mov
or
sar
dec
and
xor
fstp
fs
sub
(bad)
push
adc
sub
das
push
test
inc
sbb
cwde
lahf
inc
cmps
call
(bad)
(bad)
jmp
jae
mov
stc
enter
cdq
aad
cmps
and
test
in
or
sbb
inc
mov
sbb
mov
add
jmp
mov
movd
pop
lds
out
xchg
(bad)
push
pop
in
mov
xor
sbb
push
pushf
push
ins
nop
add
push
addr16
stos
(bad)
(bad)
(bad)
mov
add
push
add
fcomp
mov
mov
or
dec
std
cmps
mov
jg
call
stos
push
sbb
scas
test
xor
movs
rol
(bad)
in
add
jmp
aad
and
cdq
mov
jae
push
ret
sub
xor
test
push
es
xor
mov
push
fwait
mov
lods
bound
push
mov
(bad)
dec
cmp
add
add
adc
shr
cli
push
cmp
cmc
push
pop
(bad)
jmp
or
mov
xor
add
xchg
popf
aam
daa
cmp
or
push
dec
and
ror
xchg
bound
cmp
cmp
(bad)
mov
jb
xchg
(bad)
mov
sub
repz
inc
add
fcmovbe
push
or
cld
(bad)
(bad)
call
movs
int
out
mul
cmp
dec
mov
(bad)
(bad)
cmp
and
pop
or
mov
fistp
mov
stos
and
fcomip
(bad)
call
les
mov
sbb
ror
adc
or
aaa
cld
inc
and
mov
mov
xchg
out
jge
pop
xor
mov
mov
cmp
nop
or
xchg
sbb
in
(bad)
loopne
dec
mov
or
xor
cmp
das
cmp
mov
and
(bad)
dec
mov
adc
push
icebp
xchg
adc
cmp
mov
dec
and
jbe
and
xor
xchg
std
adc
add
adc
adc
dec
or
movups
sub
add
dec
cld
sub
pop
ret
jno
int
into
popa
and
mov
dec
sbb
pop
int
ins
xor
inc
cmp
or
std
pop
sub
cdq
nop
movs
inc
xchg
or
hlt
jge
add
(bad)
jmp
xchg
inc
inc
mov
adc
(bad)
and
jge
sti
popf
sub
jo
retf
jg
push
mov
mov
cmp
test
(bad)
or
(bad)
jmp
sub
shl
addr16
loope
adc
add
jecxz
fs
stos
push
mov
(bad)
(bad)
fild
scas
pop
rcl
jne
aad
pop
iret
call
pusha
dec
(bad)
sbb
push
ins
xlat
mov
mov
scas
pop
scas
pop
xor
add
leave
shl
(bad)
(bad)
jmp
(bad)
enter
adc
pop
adc
sbb
repz
popf
inc
jnp
std
cmp
scas
movs
push
lahf
out
call
addr16
push
ret
xchg
mov
aad
mov
xlat
into
mov
outs
out
mov
and
dec
cwde
fwait
test
sub
xor
(bad)
mov
mov
mov
out
mov
iret
xchg
mov
int
(bad)
pop
mov
mov
mov
and
xchg
pop
adc
cli
push
mov
push
call
add
fiadd
xchg
test
lods
aaa
fild
mov
stos
call
jmp
push
jae
xor
push
mov
test
add
les
jne
or
inc
push
inc
pop
jl
and
xchg
inc
(bad)
sub
dec
add
stc
dec
xchg
cld
(bad)
(bad)
dec
inc
in
push
push
cmp
inc
ss
mov
xchg
pop
sbb
call
add
or
xchg
push
pushf
sub
pop
out
adc
ja
outs
cld
cdq
rcl
or
mov
add
mov
test
jmp
mov
nop
inc
call
cmps
jg
retf
popf
call
add
fisttp
repnz
adc
cmp
mov
dec
xacquire
call
jg
stos
ins
mov
adc
test
fmul
aad
jnp
mov
loopne
(bad)
fistp
test
fnstcw
retf
sub
mov
jbe
jmp
fidivr
adc
(bad)
jg
scas
icebp
addr16
inc
adc
ins
mov
dec
lock
mov
ror
in
lock
adc
mov
adc
pop
mov
mov
imul
adc
add
adc
mov
lods
(bad)
call
or
sub
or
inc
loope
sbb
xrelease
shl
sub
int3
vsubss
int3
or
fs
xor
xor
(bad)
call
sar
aaa
mov
cmp
push
ins
cmp
or
rcl
sbb
(bad)
dec
or
int3
pop
inc
adc
push
das
and
sti
call
stos
jge
fld
test
pop
(bad)
fstp
mov
je
pop
adc
std
ja
push
add
cmp
adc
das
push
rcr
(bad)
(bad)
(bad)
jg
sbb
push
xor
cmp
shl
fild
dec
lahf
dec
jp
cmps
daa
or
(bad)
jmp
fwait
mov
int
jecxz
jp
push
mov
add
adc
or
test
imul
ja
clc
fs
sbb
push
pop
add
mov
test
push
mov
out
std
div
(bad)
dec
js
loopne
cs
jmp
mov
(bad)
pop
ret
psllw
or
rol
sbb
add
adc
mov
pop
ret
div
cmp
(bad)
push
mov
ret
jbe
ret
pop
fdivp
(bad)
(bad)
mov
xor
stc
and
add
inc
or
mov
or
sar
dec
jo
push
mov
sbb
(bad)
fdivrp
ja
clc
mov
push
sub
jbe
or
xchg
fld
loope
(bad)
(bad)
jnp
inc
and
jo
add
adc
xchg
cmp
mov
or
mov
add
or
cdq
inc
adc
inc
jg
(bad)
(bad)
push
lods
inc
adc
shl
pop
test
adc
les
xchg
loop
icebp
mov
(bad)
(bad)
(bad)
dec
jg
inc
inc
jle
mov
loop
jno
dec
xor
xor
mov
(bad)
(bad)
(bad)
push
xor
rol
(bad)
jnp
repnz
pop
dec
and
push
jmp
(bad)
(bad)
(bad)
fisubr
pop
out
mov
retf
mov
jmp
sub
in
shl
sti
and
(bad)
(bad)
push
and
pushf
adc
add
enter
loopne
xor
mov
cld
(bad)
push
mov
sbb
push
mov
xor
ins
or
mov
and
jle
adc
push
push
push
adc
add
nop
adc
cmps
push
(bad)
outs
fcomp
repnz
inc
pop
retf
dec
sub
lods
push
inc
add
mov
(bad)
(bad)
jg
xor
mov
xchg
mov
test
add
sub
or
ret
(bad)
mov
xchg
retf
test
cmp
mov
xchg
cmps
(bad)
jg
push
pop
cmp
dec
scas
ror
in
inc
push
shr
dec
test
mov
loope
dec
cmp
cmp
mov
push
xor
loopne
dec
stos
(bad)
(bad)
(bad)
fcmovne
sub
add
xchg
dec
imul
(bad)
cmp
jle
(bad)
(bad)
inc
sti
icebp
dec
pop
retf
sbb
out
mov
xor
cdq
sub
mov
mov
lods
addr16
js
cmps
jg
cmp
push
stos
call
pusha
cmps
add
(bad)
dec
sub
dec
(bad)
mov
bound
fisub
xchg
fnop
xchg
jbe
pavgw
or
sbb
jmp
lods
sub
mov
in
jo
xor
enter
push
mov
sbb
mov
jl
clc
test
mov
cld
or
jo
loop
fs
das
mov
ja
mov
(bad)
ret
inc
jno
loopne
or
mov
cs
jo
jbe
loope
test
inc
jbe
jo
pop
imul
pop
pop
jo
fs
ja
sub
out
loopne
lods
les
pop
ret
inc
pop
pop
and
add
mov
jo
pop
pop
jo
pop
pop
jo
mov
fs
or
cmp
jl
pop
push
xchg
mov
mov
mov
inc
push
call
and
xor
imul
push
cmp
sub
jmp
retf
retf
pop
fcmove
and
adc
clc
call
push
xor
fs
xor
adc
sub
cmp
div
(bad)
(bad)
dec
cmc
dec
and
mov
ja
inc
dec
clc
jbe
or
and
int3
xchg
sbb
(bad)
(bad)
js
in
lods
pop
outs
and
push
xor
or
mov
xchg
sub
stos
add
xor
push
sub
into
ror
dec
dec
adc
add
nop
xor
push
or
xor
sub
mov
dec
(bad)
(bad)
mov
dec
add
xor
cmp
xchg
stos
push
scas
dec
xchg
push
mov
xor
shr
jp
ror
push
mov
push
sbb
(bad)
(bad)
(bad)
mov
cmp
push
jo
rol
jno
(bad)
dec
sbb
dec
cld
xlat
mov
retf
daa
dec
sbb
int
inc
or
mov
jmp
shl
mov
in
or
retf
pop
ja
(bad)
(bad)
(bad)
out
fistp
fdiv
out
ffreep
xchg
sbb
pushf
jns
jecxz
jge
inc
push
jge
jne
sar
jg
aaa
cld
(bad)
dec
pop
jnp
push
dec
sub
adc
jmp
test
add
pushf
mov
xlat
pop
fidivr
sub
jge
jne
inc
or
aam
in
xchg
les
dec
jo
add
pop
loopne
adc
or
push
jbe
sbb
mov
loope
sub
(bad)
sub
and
call
push
and
mov
jmp
or
cmp
ret
adc
icebp
add
jmp
movs
push
sbb
dec
jno
add
es
aaa
pop
inc
xchg
pop
sub
pop
xchg
data16
sbb
(bad)
(bad)
(bad)
fbld
xchg
leave
cmps
call
or
imul
cmps
xchg
js
imul
out
(bad)
(bad)
(bad)
push
test
add
dec
adc
nop
mov
adc
dec
pop
and
test
(bad)
(bad)
dec
test
jmp
sub
stos
call
sub
(bad)
push
stos
mov
retf
lods
mov
bound
cmp
int3
call
loope
adc
rol
cdq
bound
in
in
sub
in
mov
lock
(bad)
push
in
mov
bound
scas
mov
or
adc
and
imul
es
mov
or
add
mov
(bad)
(bad)
jmp
stc
mov
sub
sub
xor
add
les
and
pop
or
loope
sbb
jl
push
jl
inc
jnp
mov
retf
sti
scas
cld
xor
xor
sub
retf
xor
ins
repz
xor
xor
jg
(bad)
fistp
cmp
sbb
pop
mov
cs
int
cmps
add
aaa
std
cld
pusha
test
popa
test
add
mov
inc
dec
ret
cld
repz
(bad)
(bad)
call
inc
pop
jae
inc
fwait
(bad)
idiv
shr
fisttp
in
adc
sub
call
loopne
test
ds
xchg
stos
sub
mov
dec
inc
or
(bad)
(bad)
(bad)
call
or
out
repz
addr16
ds
push
pop
cwde
push
clc
adc
mov
mov
jo
bound
adc
xor
push
mul
das
sldt
in
mov
retf
mov
(bad)
jns
xchg
add
repz
retf
add
sti
add
(bad)
out
xor
jmp
add
stos
mov
std
das
clc
out
repz
sub
(bad)
ds
mov
pop
in
mov
(bad)
(bad)
inc
(bad)
cmp
in
idiv
sti
xchg
fistp
inc
das
jg
sti
fild
in
inc
mov
push
jmp
retf
mov
pop
sbb
lock
pop
std
add
icebp
(bad)
(bad)
(bad)
ds
rol
rcr
imul
cld
push
mov
out
(bad)
call
fdivrp
and
stc
xor
adc
xchg
inc
add
loopne
out
xor
pusha
push
rcr
das
sub
pop
add
inc
cld
mov
mov
rcr
es
sub
lods
mov
in
retf
inc
(bad)
(bad)
(bad)
jg
jne
mov
mov
xchg
jmp
(bad)
fdiv
repnz
mov
(bad)
(bad)
mov
inc
pop
mov
inc
xchg
add
(bad)
(bad)
call
stos
les
push
mov
movs
es
xchg
leave
push
cmc
mov
dec
test
fs
push
dec
dec
adc
(bad)
(bad)
call
dec
test
xchg
scas
pop
add
daa
xor
or
xchg
(bad)
(bad)
(bad)
dec
rol
and
adc
mov
bound
xchg
mov
out
js
int3
xchg
dec
and
and
rcr
adc
outs
push
(bad)
(bad)
(bad)
dec
cdq
xlat
int3
cmps
cmp
push
outs
push
push
and
add
or
xor
jmp
push
xor
add
pusha
inc
lahf
add
add
int3
adc
clc
(bad)
out
cli
sbb
sbb
lahf
add
or
pop
inc
shr
and
sbb
sub
(bad)
(bad)
(bad)
dec
imul
sub
das
or
sub
push
mov
push
sbb
or
dec
std
loopne
and
stos
push
sbb
push
inc
mov
or
sub
dec
cmps
ss
dec
jge
cmps
or
cmc
stos
dec
or
inc
push
lods
or
nop
jno
adc
xor
adc
sub
mov
or
(bad)
jmp
cdq
mov
or
xchg
or
cwde
cld
nop
pushf
or
in
movs
cmp
or
add
mov
adc
or
ret
(bad)
(bad)
pop
test
into
cmp
push
or
push
cmp
push
and
loope
(bad)
fcomip
mov
sbb
adc
in
jecxz
(bad)
cmc
(bad)
(bad)
dec
shl
call
pcmpeqw
mov
inc
mov
ret
(bad)
(bad)
fisttp
fisub
call
xchg
xor
pushf
push
imul
mov
(bad)
(bad)
(bad)
dec
xchg
imul
xchg
xor
retf
xchg
movs
iret
cdq
sub
mov
dec
pushf
dec
ja
(bad)
(bad)
(bad)
push
adc
jnp
sub
mov
push
scas
pop
mov
adc
movs
popa
push
sahf
push
fwait
xchg
in
(bad)
(bad)
(bad)
push
pop
sub
rcl
aad
ja
fild
dec
ss
pop
push
inc
lods
jmp
push
cmp
in
enter
call
pop
mov
iret
mov
call
pop
or
lods
cdq
jne
popa
mov
aad
(bad)
(bad)
push
rol
push
dec
cmp
icebp
jecxz
inc
daa
aaa
cs
lahf
outs
(bad)
(bad)
(bad)
call
out
jmp
or
rol
test
inc
hlt
imul
pop
lahf
into
xchg
xchg
mov
aam
imul
fcomp
jl
hlt
fucom
jg
aas
mov
xor
add
mov
pop
push
or
dec
and
or
inc
enter
dec
or
jns
scas
mov
sbb
dec
loope
(bad)
ret
push
cmp
xor
sbb
(bad)
jmp
lods
xor
scas
xor
cwde
jecxz
cmp
or
sbb
fchs
pop
jmp
call
sub
mov
call
mov
ret
xchg
cmp
in
cmp
and
sbb
movs
xchg
pop
inc
or
push
xchg
imul
add
fldenv
pushf
push
into
pop
pushf
jbe
inc
daa
xchg
jp
(bad)
xchg
jbe
push
jmp
or
call
xchg
or
sbb
shl
bound
mov
call
xchg
push
test
mov
test
call
mov
pop
imul
mov
cli
inc
pop
sub
jmp
or
lods
mov
mov
out
or
sar
sti
and
js
(bad)
(bad)
(bad)
dec
ins
lods
sahf
dec
fwait
imul
loope
dec
out
mov
and
inc
add
or
or
mov
jmp
and
jmp
mov
scas
sbb
(bad)
jmp
mov
stos
outs
mov
rol
inc
inc
add
and
les
retf
(bad)
(bad)
(bad)
cmp
mov
dec
in
das
scas
adc
or
(bad)
mov
push
mov
sahf
jnp
dec
gs
mov
or
sub
(bad)
(bad)
fistp
bound
xor
cmp
repz
lahf
data16
cmp
inc
sti
lods
xor
(bad)
(bad)
dec
dec
xor
lea
ror
lods
jae
std
dec
mov
pusha
jg
push
das
out
push
sbb
jg
inc
mov
les
in
mov
(bad)
(bad)
(bad)
inc
ins
xor
xor
dec
arpl
test
out
std
je
outs
repz
aam
scas
sub
fist
(bad)
(bad)
(bad)
(bad)
cmp
mov
test
lock
ficomp
and
push
mov
(bad)
(bad)
inc
cdq
imul
aaa
mov
jmp
and
adc
(bad)
(bad)
call
push
retf
mov
call
mov
jp
repnz
loopne
(bad)
cmp
aam
jmp
loopne
(bad)
pop
fldenv
fst
and
mov
(bad)
(bad)
fistp
cmp
pop
(bad)
clc
xlat
ror
mov
pop
ret
pop
xchg
(bad)
(bad)
push
add
cli
movs
inc
pushf
jge
add
push
stos
cmps
cmp
cmp
xchg
or
push
add
pop
sar
nop
cmp
jmp
jmp
push
dec
nop
xchg
mov
movs
sub
add
pop
mov
sbb
xchg
(bad)
dec
mov
xor
adc
or
ret
nop
test
les
(bad)
(bad)
(bad)
call
test
out
cwde
out
inc
xchg
test
adc
sub
mov
xchg
enter
jmp
push
fadd
mov
(bad)
(bad)
push
push
adc
and
sub
lea
and
loope
or
and
add
cmps
fcmovb
cmp
adc
pop
push
imul
push
mov
push
dec
popa
bound
icebp
or
or
in
add
dec
sahf
xor
jmp
cld
add
sbb
movs
push
int3
popa
add
std
popf
js
jb
or
popa
imul
jl
or
lea
add
inc
outs
pop
dec
jecxz
fimul
scas
adc
in
(bad)
jg
(bad)
rcr
shl
sar
push
sub
pop
jnp
and
mov
mov
or
loopne
push
lock
jecxz
ss
and
mov
and
push
xor
push
jge
mov
push
cmps
inc
jbe
jae
sub
nop
or
or
mov
sbb
or
xor
or
popa
inc
fnstenv
dec
add
pop
adc
lea
ret
xchg
ins
add
aas
sub
cdq
bound
push
adc
push
add
or
pusha
clc
cmps
fistp
push
mov
fwait
adc
dec
mov
dec
xor
sbb
xor
mov
add
outs
rcl
inc
xor
and
daa
or
push
jb
add
jb
push
add
stos
or
add
test
outs
(bad)
cmp
cmp
add
gs
push
imul
jne
ins
aam
test
arpl
ins
outs
mov
xor
dec
outs
push
das
out
call
push
push
mov
cmp
outs
jne
xor
pop
test
push
imul
cmp
push
in
sbb
scas
or
mov
call
jnp
dec
jae
mov
or
es
or
mov
or
or
dec
dec
popa
jo
addr16
or
add
movs
xor
call
(bad)
rcl
inc
jns
dec
adc
sub
jae
outs
inc
jbe
outs
je
jo
inc
push
sbb
shl
inc
pavgb
jb
jns
js
mov
and
and
inc
inc
inc
ds
xchg
fiadd
push
and
adc
fldcw
adc
mov
mov
hlt
ds
sbb
jb
pop
push
outs
push
xor
nop
pop
push
je
nop
or
fnstcw
ja
adc
imul
add
nop
enter
jae
pop
je
push
call
outs
inc
dec
es
adc
inc
repnz
imul
push
gs
dec
cmp
int
push
inc
push
sub
sbb
and
jp
inc
jl
inc
pop
xchg
outs
je
push
pop
icebp
jo
and
sahf
push
imul
adc
imul
data16
dec
adc
outs
pusha
ins
popa
mov
add
mov
fs
fistp
sbb
adc
xchg
clc
mov
imul
mov
jne
sbb
pop
stos
mov
inc
loopne
sbb
mov
repz
and
jo
dec
sub
int
ds
jae
xchg
test
xchg
out
pop
jmp
or
rcl
aad
xchg
repnz
jg
add
or
sub
jne
data16
pop
std
and
fdivr
push
jne
jo
outs
fs
pop
outs
or
jne
pop
push
mov
xchg
push
lds
popa
cmp
in
or
gs
jae
ins
icebp
sbb
inc
ins
sbb
ins
outs
adc
add
outs
cmp
xor
mov
adc
jno
dec
scas
sbb
mov
jae
bound
ficomp
test
push
jb
jae
xor
sub
add
and
outs
jbe
xchg
ins
and
in
rcr
xor
add
stos
push
xchg
imul
dec
jle
retf
adc
inc
sbb
mov
adc
std
outs
sbb
inc
ins
push
stos
sub
sub
dec
dec
xchg
dec
inc
xchg
add
jle
and
sbb
xor
fild
pop
pop
js
mov
or
push
jge
js
cdq
lock
add
inc
adc
xchg
outs
pop
adc
push
inc
test
push
add
test
xchg
add
push
add
dec
mov
inc
inc
jbe
jae
add
or
data16
or
sahf
ins
jge
or
sbb
mov
je
inc
js
sub
nop
inc
enter
sub
imul
in
arpl
jns
inc
repnz
pop
sub
(bad)
outs
arpl
mov
adc
outs
or
lods
push
pop
sbb
or
in
xor
inc
js
movs
xor
mov
jecxz
adc
inc
bound
sub
add
movs
aaa
and
stos
dec
mov
xor
gs
pop
cmp
shl
sub
push
inc
inc
and
sub
lds
push
inc
cmps
mov
ret
outs
mov
mov
es
push
jle
mov
cmp
pop
fisttp
sbb
add
ret
mov
mov
int3
imul
jecxz
test
stc
enter
out
xor
test
sbb
sub
xchg
push
frstor
xor
dec
gs
fsubr
inc
inc
pop
jae
call
aaa
push
fdiv
or
xor
cmp
or
cmp
or
jmp
pushf
ins
out
repnz
inc
sbb
xor
add
jno
push
jne
lea
cmp
scas
push
cmps
mov
push
int
daa
push
nop
test
imul
push
cld
or
and
lock
mov
out
mov
iret
and
int3
maxps
outs
outs
movs
imul
aam
outs
jo
outs
jae
fs
and
inc
push
inc
dec
and
sbb
test
mov
hlt
stos
pop
add
adc
fs
push
and
jae
inc
fsub
nop
or
and
sub
dec
outs
inc
xor
or
daa
jg
and
jb
inc
scas
sub
and
dec
and
pop
outs
sub
ins
ins
in
ja
js
lea
ret
dec
mov
jb
mov
inc
fs
add
xor
movs
test
out
repz
idiv
jno
lahf
mov
outs
push
outs
and
sub
mov
inc
dec
inc
imul
inc
(bad)
fs
nop
sahf
and
and
sti
dec
jb
inc
js
dec
or
test
inc
scas
inc
clc
arpl
imul
mov
mov
addr16
out
ret
call
push
xor
and
adc
jo
arpl
push
sbb
adc
sub
sub
and
xchg
add
push
ins
es
pop
aas
(bad)
adc
je
sbb
mov
push
pusha
in
fs
and
retf
sub
test
aas
push
adc
sub
or
dec
push
lock
outs
mov
outs
outs
adc
sahf
push
outs
adc
push
pop
jns
rol
or
pop
daa
jp
sbb
adc
in
dec
stos
mov
inc
push
shl
imul
in
cwde
test
inc
inc
in
pop
in
inc
dec
jb
arpl
and
clc
or
outs
je
movs
cmp
sub
and
xor
neg
outs
inc
outs
std
dec
inc
gs
mov
aad
loop
gs
(bad)
nop
adc
adc
jnp
sub
(bad)
arpl
push
sbb
ins
pop
mov
inc
and
mov
aaa
sbb
add
(bad)
xlat
inc
inc
js
mov
shr
jne
pop
mov
or
jo
fwait
(bad)
(bad)
fs
adc
jb
icebp
or
lock
jne
sbb
outs
js
xchg
jb
ins
sbb
nop
mov
mov
gs
jecxz
dec
lods
push
ds
call
adc
gs
mov
xchg
test
push
and
mov
push
cli
imul
scas
push
outs
daa
sbb
push
pop
cdq
test
mov
xchg
sbb
mov
sub
mov
cmp
mov
mov
shl
(bad)
stc
jae
bound
adc
daa
jnp
or
push
or
outs
jo
add
mov
outs
push
daa
pop
pop
cmp
add
jmp
mov
jb
push
outs
or
into
rcl
add
inc
idiv
je
arpl
stos
xor
movs
or
dec
and
pop
mov
dec
and
mov
cmp
dec
ins
gs
xchg
bound
stos
sar
jecxz
or
or
adc
dec
sbb
and
adc
lea
xor
mov
inc
dec
enter
adc
clc
movs
stos
prefetchnta
and
call
mov
and
jmp
inc
push
movs
push
add
inc
fiadd
jo
jo
imul
cs
xchg
jle
jnp
push
mov
push
mov
dec
test
jne
dec
ins
mov
stos
jg
inc
dec
jo
push
popa
mov
fwait
pop
sub
out
push
inc
and
dec
sbb
scas
in
inc
outs
icebp
and
into
dec
outs
fs
sbb
mov
mov
popa
jb
mov
movs
je
sbb
sub
dec
or
xor
inc
lds
imul
dec
push
(bad)
jp
jae
aaa
or
ins
imul
jae
mov
pop
fidiv
das
sbb
pop
outs
and
sub
add
jle
jae
in
inc
dec
add
bnd
push
sbb
pop
dec
outs
inc
or
pop
or
fild
xlat
push
and
gs
or
jge
xlat
retf
xor
cmp
xchg
cmp
sbb
(bad)
fsub
pop
je
mov
bnd
pop
lar
jge
cmp
in
mov
outs
outs
pop
dec
adc
test
push
stos
cmc
ins
retf
add
or
ss
imul
imul
jne
push
add
push
pop
pusha
adc
arpl
in
xlat
jo
jmp
dec
ja
mov
inc
mov
add
sbb
add
or
movs
jns
mov
leave
sbb
leave
imul
mov
mov
dec
pop
loop
push
sbb
dec
jl
pop
jo
jnp
mov
test
push
and
clc
add
outs
in
jg
out
arpl
or
jae
push
outs
sbb
aad
sub
outs
les
mov
jne
push
jmp
mov
dec
arpl
out
(bad)
push
dec
inc
imul
and
add
push
xchg
jae
inc
jae
adc
std
push
test
mov
jae
(bad)
mov
fidiv
and
clc
je
jne
and
push
pusha
imul
and
bound
push
mov
dec
jae
mul
sbb
cmp
xor
lock
sbb
fdiv
dec
dec
aad
or
and
or
iret
sbb
neg
pushf
sub
dec
popa
jns
jne
sub
adc
jge
fistp
dec
imul
adc
push
dec
idiv
adc
arpl
and
rcr
dec
and
push
sub
dec
and
popf
mov
popa
and
jmp
push
inc
sbb
scas
jae
add
mov
inc
stos
and
sbb
ret
mov
add
mov
or
mov
outs
add
fcom
pop
stos
jmp
inc
movs
sbb
xor
jno
test
outs
jne
pop
retf
or
and
fs
cmp
push
popf
inc
mov
push
inc
inc
mov
pusha
add
push
push
sub
jmp
mov
sbb
push
arpl
pop
mov
je
sbb
and
sbb
pop
xlat
add
xor
push
add
outs
daa
shl
lea
in
das
sub
and
sub
sub
xchg
mov
sti
iret
sub
push
nop
inc
hlt
ins
arpl
push
lods
hlt
mov
imul
adc
inc
js
add
das
inc
inc
xor
or
outs
je
or
leave
push
sbb
push
and
lods
inc
stos
pop
stos
lock
test
in
xchg
(bad)
mov
pop
shl
pop
repz
stos
popf
sub
dec
adc
imul
add
xchg
xor
js
enter
popa
push
ins
pop
and
stos
out
mov
sub
adc
pop
mov
pop
adc
cmp
mov
pop
mov
sbb
ret
movs
arpl
gs
xchg
and
add
or
and
mov
out
sbb
pusha
xlat
mov
xchg
dec
iretw
jnp
loop
pusha
cmps
data16
and
cmp
sbb
and
pop
sbb
mov
addr16
add
adc
not
mov
outs
mov
dec
lds
pop
push
push
jo
xor
push
push
shl
dec
sbb
sbb
pop
pop
popa
ins
ins
jmp
or
push
and
cmp
jae
xor
push
aaa
aas
dec
sbb
mov
das
sbb
or
arpl
inc
sub
pop
clc
jae
mov
cmp
inc
mov
ins
push
jmp
imul
and
ror
mov
xor
ins
push
in
add
or
xchg
je
ins
xor
dec
loope
gs
das
adc
and
jnp
les
inc
or
and
inc
rol
pusha
sub
aas
lea
jo
inc
and
dec
add
push
pop
int
add
add
xchg
inc
push
jbe
push
fwait
retf
add
push
inc
push
dec
add
add
add
fbld
inc
fisttp
adc
inc
mov
mov
ss
inc
pop
add
imul
lock
mov
push
inc
movups
and
scas
mov
pshufw
outs
push
jbe
add
xor
js
sbb
xor
push
jl
cs
add
mov
mov
mov
mov
outs
add
add
imul
sub
rol
push
mov
rol
push
lds
fnstsw
and
or
dec
or
bound
pop
enter
movs
cwde
dec
ss
dec
imul
aaa
jo
push
stos
ss
jnp
cwde
dec
fs
jl
add
push
call
push
gs
pusha
idiv
jnp
jo
repnz
inc
cs
aas
push
or
inc
mov
cmp
jb
pop
gs
leave
mov
lahf
hlt
nop
ins
sub
nop
mov
test
push
dec
xchg
test
fiadd
add
add
inc
inc
add
add
add
add
add
add
inc
xchg
xor
cwde
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
and
jnp
je
jnp
xor
jbe
