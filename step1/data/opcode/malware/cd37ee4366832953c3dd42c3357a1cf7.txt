(bad)
call
push
mov
push
lea
add
sar
add
mov
sar
jns
(bad)
(bad)
jmp
mov
out
inc
mov
out
ins
rol
loopne
cdq
sahf
jne
and
jmp
fnstcw
rcl
sub
mov
(bad)
jo
mov
aam
in
(bad)
(bad)
(bad)
push
cmps
(bad)
int
ror
and
pop
mov
pop
imul
sub
or
(bad)
(bad)
dec
mov
add
popf
pop
movs
adc
imul
xor
mov
mov
ins
jno
(bad)
(bad)
(bad)
jmp
div
bound
repz
(bad)
or
addr16
jmp
test
loop
mov
in
popa
sbb
xchg
out
mov
xchg
scas
jge
out
add
sti
(bad)
(bad)
(bad)
(bad)
cmp
ja
jo
dec
fld
je
loopne
dec
jp
jno
ret
idiv
inc
cwde
(bad)
outs
inc
in
addr16
(bad)
(bad)
(bad)
aas
fistp
add
pushf
push
inc
push
outs
ins
fnstsw
push
mov
out
pop
(bad)
xchg
aam
push
shl
(bad)
(bad)
(bad)
jge
adc
sbb
push
aad
(bad)
cld
mov
test
lock
nop
cs
inc
xchg
sbb
dec
(bad)
(bad)
push
sub
ins
jbe
out
(bad)
mov
mov
rol
loopne
adc
fiadd
call
stos
movs
xchg
inc
mov
(bad)
jmp
stos
jb
mov
xor
(bad)
(bad)
(bad)
(bad)
jl
pusha
stos
xlat
dec
mov
inc
retf
sbb
jbe
jb
mov
xlat
addr16
add
dec
out
sub
rcl
ins
jae
push
pop
loop
cmps
push
repnz
and
pop
stos
into
and
dec
push
pop
jnp
inc
aaa
sbb
jnp
test
lods
dec
js
mov
or
in
mov
or
mov
cmp
ret
xchg
cmp
popa
cmp
(bad)
dec
mov
jns
ins
mov
mov
ss
shl
cmps
in
pop
(bad)
(bad)
(bad)
dec
jo
mov
or
and
fwait
mov
mov
mov
(bad)
(bad)
(bad)
(bad)
mov
arpl
int
mov
mov
or
cmps
bound
mov
(bad)
(bad)
(bad)
jmp
mov
push
scas
push
mov
xor
mov
pop
mov
sar
neg
mov
sub
inc
sar
dec
js
push
and
shl
(bad)
scas
mov
jl
(bad)
(bad)
jmp
jg
addr16
gs
jns
daa
(bad)
adc
out
movs
ss
jne
das
repnz
cmp
repz
ror
pop
or
and
xlat
mov
push
fstp
mov
std
jecxz
jno
and
add
cmps
int3
sub
(bad)
(bad)
call
inc
push
push
imul
fwait
mov
shr
push
pop
repz
fadd
xchg
xchg
(bad)
(bad)
(bad)
dec
mov
xchg
(bad)
mov
cmp
test
ficom
cmc
nop
and
addr16
les
call
hlt
jno
and
out
add
adc
xor
stc
pop
or
rcl
(bad)
(bad)
(bad)
out
cld
retf
dec
pop
dec
call
lahf
rol
dec
xchg
outs
(bad)
or
clc
jnp
jmp
jmp
or
(bad)
jmp
adc
out
pusha
mov
sbb
loop
add
aad
out
mov
push
pop
jmp
xor
jecxz
(bad)
inc
pop
sub
imul
movs
push
add
jne
sar
mov
inc
jecxz
mov
(bad)
jg
fisttp
mov
jp
push
lods
bnd
jge
mov
or
cmps
mov
mov
sub
dec
pushf
pop
call
retf
imul
xchg
push
xchg
xchg
mov
cmp
(bad)
(bad)
push
fiadd
mov
push
xchg
ins
int3
add
(bad)
aas
mov
call
mov
dec
std
mov
dec
mov
cmps
sbb
add
aaa
push
in
jmp
call
icebp
jmp
sub
loope
nop
repnz
push
(bad)
inc
add
movs
jns
(bad)
(bad)
(bad)
call
call
stos
sahf
mov
inc
mov
das
xchg
xor
and
or
jmp
mov
dec
shl
fistp
push
or
(bad)
call
cmp
or
cld
xchg
push
test
mov
jmp
dec
jnp
pop
(bad)
(bad)
(bad)
(bad)
aas
ja
push
inc
dec
jle
in
scas
test
in
and
ja
je
scas
into
pop
(bad)
(bad)
(bad)
(bad)
fild
cwde
lea
scas
mov
inc
fistp
or
adc
sub
xchg
adc
dec
push
imul
jmp
aad
push
fcmovnb
mov
popf
mov
(bad)
(bad)
mov
pop
imul
mov
mov
push
jns
test
lds
(bad)
(bad)
dec
clc
push
je
rcl
or
xor
out
fsub
gs
sbb
stos
(bad)
call
mov
mov
inc
dec
retf
sub
outs
(bad)
(bad)
(bad)
call
and
cmc
jns
call
and
inc
adc
cs
(bad)
(bad)
(bad)
jmp
push
dec
stos
cmp
mov
loop
pop
mov
fisubr
pop
jmp
add
jbe
mov
cmp
(bad)
jmp
pop
jnp
test
mov
mov
jo
xchg
fdivr
inc
push
clc
push
bound
xchg
jge
mov
cmp
dec
pop
push
aad
popa
sbb
(bad)
(bad)
(bad)
pop
or
adc
sub
(bad)
retf
clc
into
lock
leave
jmp
(bad)
fldcw
jg
aam
fidivr
add
imul
shl
mov
add
ins
cmp
(bad)
(bad)
(bad)
cmp
mov
cld
and
or
fisub
xor
pop
lahf
pop
ins
push
aad
dec
arpl
(bad)
(bad)
dec
pop
jno
cld
sbb
pop
test
push
outs
lds
rol
stos
xor
popa
mov
leave
clc
dec
jne
cdq
cmc
retf
out
or
loope
in
out
lock
fwait
icebp
push
out
js
(bad)
(bad)
(bad)
(bad)
cmp
shl
mov
jg
mov
gs
gs
sub
(bad)
(bad)
(bad)
jmp
jae
mov
pop
out
jnp
and
or
ficom
sub
sti
jo
(bad)
(bad)
push
sbb
jg
pop
jecxz
adc
lock
sti
xchg
xchg
push
inc
mov
lods
(bad)
(bad)
(bad)
call
retf
pop
jge
into
test
adc
xchg
cli
sub
scas
mov
(bad)
jmp
cmp
retf
sub
popa
shl
mov
inc
out
(bad)
(bad)
(bad)
cmp
xlat
mov
repz
xor
push
scas
leave
mov
mov
pop
mov
(bad)
(bad)
(bad)
call
push
mov
xor
ds
xchg
push
loope
rol
outs
jno
and
dec
enter
sar
out
(bad)
(bad)
(bad)
dec
adc
jns
add
(bad)
jmp
ins
cld
push
adc
and
push
cmp
dec
jmp
adc
gs
xor
popa
test
in
jl
dec
inc
sbb
gs
rol
xchg
dec
(bad)
(bad)
(bad)
mov
rol
lahf
push
mov
sub
push
das
in
test
cmps
popa
clc
jo
jecxz
outs
lock
mov
pop
add
xchg
xor
shr
(bad)
(bad)
mov
ror
sbb
xor
inc
outs
pop
daa
cmp
sbb
mov
or
ret
(bad)
dec
fisubr
adc
popf
add
sbb
sub
xchg
icebp
adc
add
jmp
(bad)
(bad)
mov
mov
arpl
test
sbb
push
imul
(bad)
jmp
repz
hlt
mov
cmp
sbb
sbb
stos
sbb
in
push
ds
(bad)
dec
std
add
inc
or
pmaxsw
sbb
pop
cli
push
sbb
bound
sub
daa
add
mov
std
outs
gs
(bad)
(bad)
push
js
retf
shl
pushf
test
ret
icebp
add
icebp
fcmovu
sub
cmp
cwde
push
into
jl
iret
lock
adc
inc
(bad)
(bad)
(bad)
dec
or
cwde
rol
loope
in
mov
mov
dec
cmp
nop
dec
cmps
or
(bad)
jg
out
xor
or
enter
cmp
xor
push
repz
imul
lock
retf
inc
add
loopne
ins
(bad)
stos
cmc
(bad)
push
pop
cmc
enter
mov
and
xor
jns
(bad)
(bad)
dec
mov
sar
cwde
lods
lods
test
sahf
inc
inc
mov
loope
xchg
pop
(bad)
(bad)
(bad)
jmp
mov
mov
mov
mov
lahf
fstp
stos
fs
push
scas
pop
xor
(bad)
(bad)
jmp
cwde
rcl
adc
jge
or
dec
xchg
ja
pop
cmps
adc
jmp
ja
fwait
test
adc
das
fs
std
mov
and
or
(bad)
(bad)
(bad)
(bad)
jnp
push
std
ror
mov
(bad)
jno
addr16
mov
push
shl
test
adc
jb
dec
mov
mov
(bad)
call
ss
stos
in
mov
popf
aaa
pop
sbb
(bad)
bound
jecxz
or
jmp
(bad)
push
or
nop
or
ins
pushf
sub
cmp
lods
enter
push
sub
(bad)
call
(bad)
mov
jb
inc
fwait
iret
push
cli
mov
ret
inc
dec
mov
sar
ins
xchg
aas
push
mov
call
xchg
rol
out
jno
lds
loop
mov
(bad)
(bad)
jg
pop
sahf
(bad)
in
pop
in
js
mov
add
jl
mov
(bad)
jg
or
loope
dec
pusha
pop
adc
lods
daa
jne
or
or
(bad)
inc
adc
sbb
je
iret
sbb
add
sbb
or
dec
or
neg
mov
adc
pop
dec
bswap
aad
(bad)
mov
cdq
push
imul
scas
mov
mov
sbb
call
push
cmp
mov
loope
xchg
and
inc
(bad)
das
pop
sbb
jmp
pop
stc
mov
dec
push
add
lahf
inc
inc
dec
mov
push
(bad)
gs
jno
ss
jmp
leave
cmp
lds
xchg
push
push
push
sbb
(bad)
(bad)
mov
cmps
and
mov
xlat
or
adc
sahf
inc
(bad)
(bad)
(bad)
push
sahf
ret
jp
xchg
outs
cmp
push
ins
clc
sahf
or
inc
stos
mov
lea
(bad)
(bad)
call
shl
add
pop
stos
cli
mov
sar
cmp
ss
in
stc
adc
mov
mov
(bad)
fmul
and
loopne
push
mov
pop
xchg
cmps
pop
xchg
fisubr
lock
dec
stos
test
stos
and
inc
xchg
daa
(bad)
(bad)
(bad)
push
in
fidivr
mov
inc
(bad)
scas
or
sbb
sbb
in
or
mov
xor
add
mov
push
mov
adc
cmps
or
gs
(bad)
(bad)
push
jecxz
inc
popf
and
inc
repnz
or
mov
jmp
test
je
and
(bad)
(bad)
call
rcr
mov
das
fbld
cld
dec
push
(bad)
out
mov
sub
dec
out
bswap
xor
pavgw
mov
aam
(bad)
outs
retf
mov
call
cmp
fld
lock
mov
dec
dec
je
stc
mov
pop
clc
addr16
aad
push
add
pop
fs
aaa
inc
jbe
in
jae
xchg
mov
(bad)
jge
mov
jp
sar
push
adc
rcl
cmp
rcr
(bad)
(bad)
(bad)
push
adc
(bad)
cmc
imul
int
aad
imul
inc
push
mov
sbb
jmp
push
call
push
retf
loope
test
mov
(bad)
(bad)
xchg
(bad)
(bad)
call
cmp
push
xchg
(bad)
shr
shl
js
shl
jb
adc
(bad)
(bad)
call
sub
ret
pop
jb
pop
xchg
imul
jne
mul
jno
daa
call
lods
push
call
add
retf
or
adc
(bad)
jmp
inc
cwde
fs
add
into
idiv
and
jns
jmp
add
fldcw
ret
push
push
aaa
clc
(bad)
dec
(bad)
dec
sbb
fisttp
cmp
mov
lea
pop
and
push
fcmovne
div
pop
mov
or
pop
pop
mov
jne
mov
adc
push
rol
into
mov
sbb
and
xor
in
or
cmp
push
(bad)
ss
out
sbb
and
mov
and
data16
out
iret
out
imul
push
mov
and
mov
test
je
push
mov
fsubr
pop
ins
lea
enter
(bad)
mov
shl
mov
das
fisttp
hlt
mov
mov
(bad)
sub
sub
sar
add
push
push
push
fld
sub
sub
(bad)
sbb
push
int3
mov
cmp
xor
inc
jmp
add
test
loopne
adc
out
into
sub
test
jne
outs
fst
mov
push
dec
add
push
test
call
add
call
mov
mov
fld
mov
test
icebp
(bad)
mov
push
movq
outs
mov
push
pop
movdqu
movs
in
push
je
pop
mov
(bad)
into
jmp
in
mov
pusha
jo
push
ja
loope
fldcw
mov
push
(bad)
sub
pop
and
cmp
push
xor
fcmovnu
into
cmp
fs
cmp
call
out
ins
add
jae
loop
push
leave
mov
mov
dec
mov
dec
pop
fdivr
and
in
mov
lea
ret
cmovnp
xor
or
sbb
aaa
pop
int3
lock
dec
mov
and
je
mov
popw
jl
xchg
pop
mov
push
mov
jmp
out
cmove
or
jge
sub
sbb
mov
inc
sbb
sub
je
inc
add
ins
adc
dec
pop
mov
outs
sub
test
scas
inc
sbb
push
pop
lea
sbb
fincstp
cld
push
sbb
or
mov
out
fistp
jmp
fstp
push
push
push
dec
loope
in
in
sub
push
cmp
sub
inc
sub
mov
mov
adc
push
sub
mov
rol
(bad)
adc
add
jl
je
mov
imul
popa
sets
icebp
cmp
je
push
ret
fbstp
adc
test
je
push
in
fiadd
mov
mov
dec
movs
lea
movs
call
pop
pop
mov
xor
mov
sbb
jbe
fstp
xor
mov
test
jne
jmp
jo
cmp
adc
dec
or
inc
mov
(bad)
pusha
sub
push
sbb
ja
dec
pop
dec
ret
in
fcmovu
add
bound
icebp
sahf
sbb
jmp
mov
ds
adc
pop
mov
mov
dec
sbb
cli
inc
or
inc
or
adc
push
mov
in
push
sub
or
ret
cmp
das
sub
imul
push
je
sub
jne
fbstp
jmp
mov
adc
(bad)
sbb
daa
mov
adc
pop
adc
mov
fsubr
mov
push
sbb
sbb
or
inc
add
or
adc
or
mov
and
sbb
or
fnstcw
xor
sub
sbb
je
sbb
add
imul
pop
jecxz
cmps
cmp
(bad)
and
adc
and
int
jecxz
or
add
jne
in
xor
cmp
lods
pop
mov
pop
push
fcom
cmc
ret
pop
mov
in
sub
jp
mov
dec
inc
or
mov
or
ret
sbb
rol
loope
or
clc
pop
xchg
mov
test
cmp
sbb
sbb
(bad)
mov
push
pop
scas
iret
jno
add
data16
aam
sbb
imul
jo
cmp
hlt
in
shl
ins
ja
dec
stos
adc
sbb
out
clc
push
xor
push
inc
pop
mov
(bad)
pop
iret
in
ret
jle
ficomp
mov
(bad)
mov
push
clc
iret
mov
outs
xchg
ins
jae
inc
add
or
test
pop
or
inc
aaa
(bad)
cmp
test
inc
add
jge
(bad)
ins
sbb
pop
cmp
mov
ret
cmp
add
inc
enter
sub
hlt
enter
hlt
xlat
xchg
pushf
pushf
or
aam
(bad)
add
rol
pop
enter
push
or
out
outs
mov
sub
inc
dec
enter
and
cmp
retf
adc
inc
xchg
sar
or
add
add
and
dec
xchg
sbb
push
cmp
ja
cmpxchg
mov
xchg
loope
pop
jnp
push
jp
ror
stos
push
or
pop
lods
xchg
out
lock
or
push
sub
(bad)
or
icebp
je
jmp
sub
out
or
inc
clc
call
repnz
push
ret
cmp
idiv
xor
mov
mov
imul
xor
push
jns
cmps
adc
mov
xchg
adc
mov
test
xor
sub
test
mov
push
sbb
pop
inc
cmp
jb
jmp
adc
addr16
stos
lock
clc
movq
xchg
jle
inc
push
pop
sub
add
jbe
xor
retf
push
add
add
push
pop
enter
or
mov
mov
ret
adc
add
xlat
pusha
arpl
outs
push
and
cmp
inc
cld
mov
mov
cmp
sti
add
sahf
lods
shl
or
jg
mov
or
cld
movsx
imul
xchg
shl
mov
and
jne
inc
inc
dec
cmp
jb
bound
mov
push
push
mov
pop
in
and
or
or
push
push
fcomi
in
pusha
add
push
and
mov
inc
lods
jno
hlt
fisttp
or
xchg
shr
xchg
and
cmp
inc
mov
add
(bad)
outs
mov
cmp
cmp
add
push
sbb
fstp
cmp
adc
(bad)
dec
fadd
addr16
or
sbb
inc
xchg
jns
sub
pop
aam
ficom
mov
data16
es
pop
pop
das
je
cld
lock
pusha
pop
(bad)
jmp
cdq
fcomp
call
iret
(bad)
fldenv
outs
push
and
in
inc
jnp
adc
and
(bad)
jmp
adc
popf
mov
leave
dec
inc
inc
xor
popa
leave
cs
pop
push
je
xor
test
stc
rol
ffree
(bad)
fwait
dec
jne
lds
xchg
fild
add
mov
push
repnz
sub
xor
pop
fld
mov
inc
ins
adc
imul
mov
pop
dec
add
or
push
mov
or
push
add
jg
retf
or
push
xor
es
push
cmp
xor
sbb
bound
pop
pop
sub
pop
(bad)
lods
ret
cmp
fdiv
retf
sbb
push
adc
pop
mov
adc
test
mov
imul
push
inc
dec
jne
sbb
sbb
adc
(bad)
fadd
dec
jl
adc
cmc
mov
inc
or
or
mov
pop
push
inc
xor
pop
mov
add
sbb
(bad)
fdiv
pop
push
xor
in
and
adc
dec
fadd
adc
and
ja
add
xor
inc
gs
mov
mov
stos
movs
(bad)
cmp
and
inc
or
xor
push
sub
test
jnp
jbe
adc
popa
xchg
(bad)
test
and
and
in
ds
js
mov
mov
mov
fcom
xor
or
or
(bad)
pop
xor
inc
xor
xor
xchg
ins
(bad)
test
xor
xor
mov
sar
push
pop
int
fnstenv
imul
test
or
push
and
movs
xor
and
or
cmp
jae
and
les
mov
and
and
inc
or
cmp
shl
inc
add
inc
sbb
fs
push
inc
jo
outs
cmp
(bad)
lods
dec
daa
adc
dec
adc
pushf
cmps
pop
mov
sub
push
popf
rcr
mov
add
rcr
repz
push
jle
out
jno
push
mov
sbb
rcr
xchg
pop
fcomp
stos
imul
(bad)
ds
add
adc
and
fsub
jns
nop
jl
push
nop
out
add
add
pop
inc
jo
in
test
stc
push
repnz
imul
inc
popf
ret
js
cwde
sub
pop
jl
push
nop
es
dec
push
xchg
and
sub
test
push
dec
adc
pop
sub
dec
inc
rcl
push
lea
mov
mov
push
ss
mov
ror
xor
enter
add
xor
push
jb
adc
enter
xor
cmp
xchg
or
dec
cmp
es
sub
push
inc
inc
dec
scas
in
fs
pop
push
cmp
sbb
or
data16
aaa
aaa
mov
adc
push
pop
outs
push
nop
xchg
dec
pusha
push
push
cmp
pop
leave
mov
and
xchg
sbb
pusha
shl
jb
adc
push
ins
inc
add
cdq
inc
scas
ins
jo
add
or
dec
mov
nop
sub
xchg
sbb
dec
test
sub
fstp
outs
or
cmp
or
je
sub
add
ins
pop
adc
add
enter
popf
mov
mov
mov
das
sbb
rcr
adc
ret
push
dec
mov
fs
dec
cs
sub
mov
mov
add
lds
xor
and
cmp
cmp
add
cld
inc
test
ins
jb
adc
leave
push
sbb
into
adc
xchg
mov
outs
sbb
iret
(bad)
adc
push
xchg
add
mov
ins
test
or
inc
sahf
inc
cwde
jge
pushf
sub
push
repz
and
and
cmp
sbb
movs
push
push
nop
cmp
mov
das
sub
sub
inc
cmps
nop
outs
retf
mov
pop
(bad)
jge
adc
adc
and
lea
inc
xor
fld
cmp
nop
mov
dec
and
xchg
xor
cwde
add
and
xchg
sbb
pushf
aam
push
jb
adc
dec
and
scas
movs
test
add
or
dec
mov
lods
nop
sub
xchg
mov
mov
in
es
mov
and
retf
mov
inc
cwde
jmp
sub
iret
add
gs
ja
lods
sub
or
lea
or
outs
adc
ins
xchg
pop
repz
cld
lea
aam
mov
dec
ss
hlt
dec
mov
inc
jne
lea
sub
fcomp
movs
add
in
cmp
or
les
push
mov
jg
adc
(bad)
lods
adc
call
movs
pop
xor
pop
leave
gs
cmp
int3
xor
pop
jb
mov
or
movs
xor
out
and
mov
pushf
nop
shr
scas
movs
pop
lods
jl
jge
(bad)
fsub
jle
push
mov
outs
pushf
sbb
lds
xor
inc
push
mov
push
je
sti
xchg
mov
xor
push
aaa
call
and
dec
sbb
ret
js
sbb
popf
or
sub
adc
test
xchg
clc
adc
jae
push
arpl
and
sbb
lea
jle
fadd
fucomi
retf
out
leave
push
sbb
sbb
aaa
lea
mov
imul
or
inc
in
sbb
push
test
jne
cmp
je
les
data16
pop
cmps
xlat
sub
or
neg
mov
sub
inc
cs
sbb
push
add
pop
xor
daa
ret
inc
ret
ret
push
adc
and
fsubp
mov
sbb
dec
xor
push
cmp
fist
or
pushf
adc
loopne
jg
stos
lods
ins
inc
cmp
jb
jmp
pop
leave
pop
add
and
xchg
das
test
jl
adc
mov
jle
clc
dec
add
add
push
mov
and
jbe
lds
push
pop
add
mov
mov
mov
mov
inc
mov
scas
fcomp
inc
xor
ret
call
cdq
lea
pop
cmp
jae
inc
add
je
inc
call
mov
add
push
push
into
fisub
cwde
push
or
adc
or
mov
xchg
ins
xchg
jb
sbb
jbe
aaa
sbb
sbb
ftst
or
dec
wrmsr
xchg
and
inc
call
xchg
xchg
cmp
or
adc
ror
mov
add
cmp
pusha
mov
sbb
mov
sub
in
ss
or
mov
ret
movs
adc
call
jle
aaa
or
sbb
add
jbe
sub
sbb
aaa
mov
mov
sub
iret
aaa
fcmove
and
(bad)
es
cmp
hlt
lahf
test
daa
dec
jmp
ror
arpl
inc
jl
mov
movs
jns
add
sahf
sub
cld
fmul
test
push
push
repnz
cmp
jge
fs
es
les
nop
add
enter
scas
in
enter
xchg
and
in
mov
shr
cmp
dec
es
aam
and
add
shl
dec
mov
daa
nop
inc
push
cmp
cmp
and
ret
pop
jge
(bad)
dec
dec
inc
add
xchg
or
cmp
test
loopne
or
add
pop
and
cmp
sub
repz
adc
es
or
pop
ret
push
inc
cmp
sub
dec
ja
popa
xor
fwait
jnp
sbb
lea
sbb
jns
test
loope
adc
aad
repz
pop
into
jnp
sub
sub
in
lock
sbb
ds
lock
test
or
es
adc
mov
sahf
leave
clc
es
xor
mov
pusha
or
call
and
enter
in
lock
sub
and
add
scas
in
es
adc
xchg
and
add
push
in
cld
add
(bad)
aas
adc
or
push
adc
pop
or
or
sqrtps
adc
or
or
prefetchwt1
sbb
dec
dec
dec
mov
dec
cs
pop
cmp
pop
sbb
sbb
sti
das
push
or
or
sbb
das
adc
push
pop
or
push
pop
push
cdq
jnp
adc
sbb
push
sbb
or
sbb
pop
cmp
mov
push
xor
ud2
pop
push
movhps
rcr
pop
cmp
or
sbb
out
(bad)
jge
mov
xor
js
dec
outs
arpl
imul
mov
pop
or
adc
cmp
pop
outs
sub
mov
sbb
or
pop
ds
lds
cmps
in
ffree
outs
ja
outs
sub
or
adc
(bad)
cmp
or
sbb
xor
imul
xor
push
sbb
aad
push
sub
pop
imul
inc
and
sub
sub
fld
sbb
mov
or
sbb
das
in
nop
shl
adc
sbb
dec
(bad)
or
pop
push
adc
inc
mov
push
dec
or
adc
mov
or
(bad)
or
adc
or
cmp
xchg
add
mov
pop
mov
pop
adc
push
lahf
and
popf
cmp
cmp
mov
cli
or
sub
or
pusha
xchg
mov
dec
fild
pop
test
and
adc
ss
cmp
(bad)
fimul
and
dec
popa
lods
mov
jns
xchg
js
in
mov
comiss
pop
jns
jge
jge
sub
jno
fistp
or
mov
jae
push
or
sub
or
(bad)
jle
sub
outs
pop
mov
retf
push
cmp
lock
dec
sub
and
sbb
je
jae
in
std
sbb
add
mov
pop
sbb
adc
repnz
push
push
or
int
cmp
sub
push
xor
pop
cli
lahf
pop
or
pop
aas
pop
aaa
sub
das
push
or
aad
jae
aaa
cmp
jecxz
sub
or
cmovne
fcmovne
sub
cmp
or
adc
cmp
jo
add
(bad)
psubusw
or
sbb
iret
mov
data16
iret
or
xchg
push
cli
or
imul
jmp
ss
mov
push
leave
shr
out
lods
sbb
mulps
or
push
jnp
aad
and
xor
(bad)
jno
sti
imul
cmp
xor
pop
pop
adc
or
daa
add
sti
fimul
pop
push
or
pop
xor
mov
movs
nop
pop
add
adc
sbb
jnp
arpl
repnz
movzx
scas
xor
or
sub
imul
gs
add
add
or
jae
jb
outs
inc
or
(bad)
mov
outs
popa
fs
imul
inc
gs
jb
arpl
fs
gs
sbb
or
gs
xchg
mov
ins
push
or
xor
mov
imul
sbb
shr
dec
arpl
icebp
add
(bad)
dec
pop
xor
in
mov
and
lock
lock
add
in
inc
xor
or
mov
and
or
sub
sub
add
and
add
es
add
test
xor
sbb
out
in
(bad)
in
sub
sub
xor
and
sbb
pop
and
and
sub
daa
push
jmp
je
mov
out
add
pop
and
arpl
xchg
std
sbb
and
sbb
push
sbb
pop
xchg
add
ret
sub
and
sub
add
add
out
pop
std
and
mov
mov
add
and
add
ds
stc
and
sbb
adc
push
add
or
stos
scas
push
movs
pop
out
sbb
add
add
mov
pop
push
jo
pop
cmp
xlat
sub
dec
add
push
pop
add
enter
gs
inc
test
ds
and
jb
popa
je
frstor
mov
sti
jl
or
inc
je
pop
ja
add
add
xchg
mov
and
add
ins
mov
jmp
jae
dec
sbb
and
enter
inc
sbb
push
adc
add
add
mov
and
add
add
cmp
jne
pusha
mov
lea
push
or
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
