mov
mov
sub
xor
mov
push
push
push
mov
call
call
mov
push
push
call
add
mov
mov
push
push
push
push
call
mov
push
push
call
push
push
push
push
call
push
call
add
call
mov
mov
mov
mov
mov
cmp
jne
test
je
mov
mov
mov
cmp
jne
add
add
test
jne
xor
jmp
sbb
sbb
pop
pop
test
je
mov
call
mov
push
call
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
cmp
jle
mov
mov
push
mov
xor
mov
mov
cmp
pop
jne
xor
ret
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
push
call
push
call
test
mov
je
mov
push
push
push
push
call
push
push
push
push
push
push
push
push
push
push
push
push
call
mov
mov
push
call
mov
mov
push
push
call
add
push
push
push
push
push
push
push
push
push
call
test
je
push
call
call
mov
mov
mov
mov
mov
call
call
call
mov
mov
add
mov
jmp
mov
mov
mov
cmp
jne
mov
call
push
push
push
call
mov
mov
mov
call
mov
call
jmp
cmp
jne
push
push
call
mov
mov
mov
call
call
mov
mov
push
call
mov
mov
mov
call
mov
mov
test
mov
mov
mov
mov
mov
mov
mov
jne
lea
mov
mov
xor
mov
xor
mov
inc
mov
mov
mov
mov
mov
mov
mov
push
push
push
call
add
inc
cmp
jl
mov
lea
push
mov
mov
call
lea
push
call
add
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
aas
loopne
lock
mov
stc
pop
aam
fnstsw
mov
pusha
and
xchg
in
and
rcl
loopne
hlt
pop
add
aas
mov
out
push
jmp
jo
add
dec
lahf
shr
loopne
lock
das
nop
aas
mov
pop
inc
out
push
jmp
jo
add
xor
loopne
lock
sub
aas
mov
out
push
jmp
jo
add
xor
loopne
lock
sub
aas
mov
out
push
jmp
jo
add
xor
loopne
lock
sub
aas
mov
out
push
jmp
jo
add
xor
loopne
lock
sub
aas
mov
out
push
jmp
jo
add
xor
loopne
lock
sub
aas
mov
out
push
jmp
jo
add
xor
loopne
lock
sub
aas
mov
out
push
jmp
jo
add
xor
loopne
lock
sub
aas
mov
out
push
jmp
jo
add
xor
loopne
lock
sub
aas
mov
out
push
jmp
jo
add
xor
loopne
lock
sub
aas
mov
out
push
jmp
jo
add
xor
loopne
lock
sub
aas
mov
out
push
jmp
jo
add
xor
loopne
lock
sub
aas
mov
out
push
jmp
jo
add
xor
loopne
lock
sub
aas
mov
out
push
jmp
jo
add
xor
loopne
lock
sub
aas
mov
out
push
jmp
jo
add
xor
loopne
xor
mov
popa
cmp
ret
push
test
cmp
sub
push
popf
popa
mov
loopne
popa
jmp
push
sbb
jg
shl
xchg
xchg
test
dec
imul
sbb
dec
cmc
pop
push
ins
cdq
fwait
mov
loope
icebp
test
cmp
jg
add
dec
fistp
clc
mov
ins
jne
out
push
dec
scas
ins
inc
jae
loopne
add
pusha
mov
ror
pop
inc
bound
and
adc
aas
pop
(bad)
(bad)
shr
dec
(bad)
cwde
pop
jge
xchg
jp
dec
jno
inc
out
push
(bad)
and
stos
adc
(bad)
jne
int3
sub
jae
dec
mov
xlat
sub
or
and
jae
inc
lods
jae
arpl
sub
pop
(bad)
lock
int
sub
ins
jne
loop
push
ss
add
popf
pandn
iret
lahf
shr
mov
ins
ins
mov
leave
or
lods
call
outs
call
jo
adc
nop
xchg
sub
cmps
fsubr
rol
lock
lods
add
hlt
jle
add
cld
jle
ret
inc
rol
jp
dec
mov
add
scas
and
pop
adc
enter
aad
adc
and
rcr
into
dec
ja
or
pop
rol
add
add
ja
(bad)
shl
mov
mov
xor
jp
dec
out
int
fidivr
(bad)
pop
sahf
inc
bound
push
pop
push
movsx
aad
dec
jno
push
lods
pop
ds
mov
out
(bad)
adc
xor
int
pop
sar
cmp
ins
ret
sub
dec
repnz
push
lods
pop
mov
inc
cld
add
mov
mov
jg
nop
ds
cmpxchg
stos
xchg
jb
xor
(bad)
xor
inc
mov
cmp
rol
(bad)
cmps
sbb
leave
mov
pop
gs
ds
mov
outs
add
adc
stos
mov
shr
retf
lea
cmp
aam
out
mov
aaa
push
push
xchg
mov
aas
outs
push
pop
jg
adc
in
mov
inc
lods
imul
fidiv
sub
adc
xor
test
sub
mov
sub
mov
gs
test
fisttp
ja
loop
mov
ja
push
aas
and
sub
jecxz
mov
push
(bad)
out
rol
cmp
add
mov
dec
ss
into
cs
loop
movs
xchg
add
iret
jno
or
(bad)
arpl
shr
out
inc
ins
ins
ins
mov
jno
mov
push
je
(bad)
push
push
add
fwait
xor
int
lods
mov
pop
jge
or
jno
add
lods
jmp
icebp
pop
push
xchg
sahf
pop
push
addr16
xor
pop
jg
test
mov
mov
retf
mov
jno
cld
mov
xor
sub
mov
sub
mov
in
retf
mov
add
adc
and
ret
fidivr
loop
repnz
popa
(bad)
cmps
sbb
inc
cmp
iret
pusha
xchg
mov
(bad)
shl
adc
in
jg
dec
inc
xor
sub
cmp
pusha
lahf
cwde
rol
push
adc
push
jb
mov
ret
sub
cmp
daa
cmc
dec
sub
adc
mov
(bad)
jo
cmp
cmp
je
mov
pop
pslld
and
and
imul
mov
mov
outs
mov
jae
mov
out
call
test
push
pop
stc
sbb
sbb
mov
test
mov
mov
int3
iret
dec
mov
repnz
dec
mov
aas
addr16
mov
mov
xor
push
adc
fbstp
enter
dec
pop
cmps
mov
add
repnz
adc
and
cwde
jae
pusha
add
mov
push
mov
mov
into
jo
push
pop
jg
add
lahf
dec
push
mov
mov
pop
repnz
daa
inc
push
in
scas
ins
xor
mov
ret
pop
or
mov
shr
mov
mov
int
push
inc
jo
icebp
inc
shr
ror
lock
mov
xor
cld
pmaxsw
xchg
mov
or
lock
dec
inc
bound
and
cdq
stos
shl
pusha
repz
lock
imul
xchg
dec
fcmove
adc
cmp
xchg
out
inc
and
push
aas
mov
lods
xlat
aam
mov
cld
out
xchg
add
mov
xchg
and
dec
outs
pop
sbb
jae
int3
ins
sbb
jecxz
adc
add
scas
popf
stos
lods
dec
sbb
int3
nop
pop
adc
cld
inc
push
lock
inc
stos
scas
les
mov
xor
sub
mov
shl
inc
inc
sub
lahf
and
popf
stos
lods
mov
(bad)
nop
sar
sub
neg
out
mov
fld
outs
lods
jle
or
iret
mov
pusha
mov
mov
pop
mov
xor
mov
neg
mov
cli
mov
dec
jl
add
fisttp
scas
shr
mov
xchg
ins
xlat
jge
sbb
pop
add
retf
push
in
xor
jp
cmp
daa
xor
mov
mov
(bad)
fnstcw
sbb
sahf
or
mov
jbe
(bad)
sti
push
add
cld
ss
jo
pop
rcl
jnp
rcr
mov
and
jne
xor
inc
cld
retf
test
rcr
lock
in
pop
cmc
pop
inc
bound
mov
and
imul
xor
loope
sbb
jl
sbb
pop
inc
pop
loopne
or
push
xchg
(bad)
mov
lock
loopne
jg
nop
mov
dec
cli
scas
mov
or
shl
aas
xor
gs
xchg
pop
and
pop
mov
in
fisttp
fnstenv
lods
fcmovnbe
dec
push
dec
psrld
(bad)
jl
lods
out
fucomp
in
into
jo
mov
shl
cmc
or
nop
aas
or
repz
inc
cwde
and
and
loopne
dec
mov
repnz
dec
jnp
cmp
jae
sub
jmp
xor
jo
mov
or
arpl
fnstsw
in
pushf
rcr
add
xor
dec
xor
mov
jae
shr
ret
dec
inc
mov
retf
mov
jae
les
mov
aas
xor
xlat
sub
sub
dec
add
in
rol
pop
mul
mov
sbb
xchg
cs
mov
or
and
xlat
jle
sahf
sub
jnp
mov
push
jge
paddq
inc
loopne
add
inc
adc
fcmovb
adc
bound
out
outs
sub
lock
test
xor
sbb
push
nop
sub
cmp
sar
push
or
rol
das
sbb
lods
inc
sbb
add
and
cmp
(bad)
xor
ins
dec
lock
ins
xchg
aas
mov
lds
xchg
addr16
outs
add
rcl
ins
(bad)
pusha
pop
shr
ja
sbb
rol
bswap
push
inc
fs
ds
clc
jmp
and
jle
fnstenv
sub
lods
push
xchg
aas
loop
mov
inc
out
push
jmp
jl
ror
cmp
popa
pop
xchg
mov
(bad)
push
mov
mov
adc
push
cld
scas
inc
mov
popf
xchg
add
jmp
cmp
jmp
enter
add
adc
dec
add
or
lock
add
mov
call
push
jne
xor
pop
ret
mov
add
aad
jnp
jo
add
xor
jb
xchg
and
xchg
dec
xchg
xchg
jbe
clc
repz
adc
iret
je
test
jmp
pop
jg
cmp
pop
(bad)
movs
xchg
aaa
movs
or
mul
scas
sub
jne
xor
ret
add
les
div
or
pop
cmp
mov
mov
xchg
outs
movs
ja
inc
cmc
(bad)
hlt
(bad)
mov
fwait
inc
mov
inc
les
cs
sti
in
ins
push
stc
cmp
fdiv
mov
dec
fucomp
adc
inc
push
out
xchg
mov
lock
push
jl
or
mov
rcr
jb
jp
jne
jmp
fimul
inc
mov
or
aas
fadd
fadd
push
into
mov
add
cs
sub
leave
shr
scas
sub
sub
jno
inc
mov
fisttp
and
mov
rcr
div
cmps
pushf
outs
sub
and
xlat
cld
cmps
push
repnz
(bad)
cmp
xor
mov
push
fmul
or
xchg
out
sub
sar
(bad)
xor
cmps
cwde
aaa
aad
jns
mov
inc
daa
fidiv
adc
es
inc
ja
sbb
xor
cmp
je
fidivr
push
test
test
or
ins
mov
push
jns
push
cmps
pop
inc
push
inc
pop
push
sub
je
stos
adc
leave
loopne
mov
dec
or
xchg
add
movs
cwde
cmp
test
adc
fs
add
in
and
xor
test
xchg
call
jo
imul
push
mov
std
jmp
cwde
xlat
or
jmp
add
pop
lds
data16
lock
dec
cs
mul
sti
push
xor
push
cmp
les
mov
mov
pop
jg
call
(bad)
in
cmp
out
mov
cld
loope
jnp
sub
(bad)
movs
test
fstp
push
inc
mov
mov
mov
push
mov
imul
xor
stos
stos
sbb
sub
mov
add
in
jge
xchg
xchg
int3
cmps
xchg
sub
les
mov
(bad)
repnz
loopne
call
mov
xor
lods
sub
and
dec
in
mov
callw
(bad)
(bad)
fild
in
mov
inc
jl
or
hlt
mov
xor
ror
repnz
sub
iret
add
mov
cmp
pop
das
nop
mov
push
cmp
sub
xor
sar
lahf
aas
scas
(bad)
jg
dec
sbb
ret
mov
aas
mov
and
mov
add
arpl
sbb
pop
or
nop
mov
dec
jle
mov
inc
jo
add
jle
add
adc
mov
mov
test
test
(bad)
cwde
aaa
and
mov
adc
in
(bad)
mov
popa
loop
adc
inc
and
outs
popf
in
stos
retf
xchg
in
mov
(bad)
movs
(bad)
js
pslld
cli
scas
ds
outs
(bad)
std
gs
jle
aas
fwait
rcl
sub
outs
mov
call
push
add
fwait
xor
int
adc
add
inc
cmp
in
mov
fs
dec
or
gs
xchg
or
add
sub
cmp
sub
repz
fsubr
sbb
popf
imul
dec
mov
(bad)
rcl
(bad)
jecxz
neg
mov
mov
mov
test
es
mov
(bad)
sub
add
dec
add
mov
dec
sub
aam
ret
aam
mov
inc
mov
add
aaa
push
(bad)
lds
(bad)
ja
xor
mov
sub
imul
and
and
(bad)
cmps
mov
enter
out
push
add
ins
std
xchg
bound
(bad)
sub
sbb
ret
jl
dec
jns
push
sub
mul
xor
add
xchg
mov
ret
lock
ss
lds
outs
ret
adc
test
xchg
jns
fisubr
fucomip
scas
int3
xor
mov
or
add
xor
std
dec
dec
scas
sub
lods
mov
aaa
(bad)
fidiv
imul
cmp
mov
jg
mov
out
(bad)
jecxz
(bad)
ffreep
scas
push
push
out
fcom
shr
cmc
dec
jge
in
js
mov
lds
mov
rcr
adc
add
pop
mov
fdivr
jnp
pop
xlat
das
sbb
in
xor
push
stos
cmp
and
jmp
test
mov
mov
test
push
bound
xor
inc
xor
inc
sbb
sub
mov
jge
push
fcmovu
mov
push
push
push
and
enter
rol
mov
and
pop
xchg
inc
sub
aaa
test
cwde
push
jmp
push
lods
(bad)
neg
or
lock
mov
xchg
inc
(bad)
mov
mov
ins
(bad)
pusha
jnp
movs
cmps
xor
jge
add
js
dec
inc
test
inc
inc
mov
call
xor
sub
sbb
inc
das
xchg
jb
repz
add
daa
xchg
call
shr
cmp
lds
add
loopne
dec
cmp
sbb
enter
adc
fmul
ins
lahf
xchg
outs
xchg
jg
add
imul
or
add
or
xor
retf
cdq
xchg
xchg
or
mov
lds
js
mov
pop
scas
jb
xor
xor
fsubrp
push
int3
scas
adc
mov
sar
ror
jbe
test
shl
iret
xrelease
popa
fnstsw
jecxz
in
or
push
dec
inc
test
inc
inc
sbb
push
push
scas
sub
(bad)
movs
mov
add
in
popa
ja
nop
pop
push
add
fcmovbe
pop
gs
xchg
adc
inc
ins
enter
retf
inc
and
inc
daa
aaa
lea
mov
pop
loopne
rcr
je
jb
jmp
jecxz
loope
lods
pusha
mov
add
inc
enter
stos
mov
ja
cmc
xlat
mov
mov
out
xchg
mov
lea
mov
int3
pusha
push
and
or
outs
mov
cmps
cmp
sahf
(bad)
and
test
ds
add
pop
ja
nop
jge
pop
(bad)
inc
test
scas
mov
std
ffreep
in
fdivr
addr16
repnz
mov
inc
das
js
pop
jnp
imul
lea
jo
or
adc
ins
pop
test
ret
aas
sti
(bad)
jl
int
nop
pop
in
xor
fucomip
outs
sar
aas
mov
lods
dec
lock
out
jle
int
mov
fild
(bad)
std
and
fisttp
loopne
xchg
mov
pop
sub
ins
lahf
mov
rcl
xor
mov
sub
push
jg
test
mov
lods
fnsave
(bad)
push
adc
aas
iret
lahf
adc
pop
xor
ret
and
and
inc
pop
mov
iret
cs
pop
scas
outs
push
cwde
mov
aas
outs
push
jle
xchg
sbb
push
cmp
lods
or
cmp
cli
out
aaa
lahf
test
js
sub
or
stos
pmaddwd
sub
das
imul
sub
icebp
pop
and
mov
or
mov
leave
repnz
mov
inc
and
jns
popf
aam
sahf
fisttp
or
jmp
in
stos
sbb
xchg
sub
inc
mov
inc
mov
mov
push
or
inc
add
fistp
cmp
call
popf
mov
rol
mov
in
jno
push
adc
add
xchg
mov
aad
stc
repnz
and
cmps
gs
test
and
pusha
or
das
sub
mov
fwait
pop
repz
pop
xchg
adc
inc
mov
loop
inc
and
iret
sti
sub
pop
lds
aas
pop
or
xchg
cmp
and
mov
int
mov
xchg
xchg
pop
dec
jns
fcmovnb
aad
pop
cmpxchg
inc
mov
mov
(bad)
and
jns
mov
lahf
xchg
out
mov
jg
and
ror
jg
add
mov
push
add
pcmpgtw
push
arpl
test
std
mov
pop
outs
mov
lods
lods
fld
in
fdivrp
iret
cld
scas
out
fild
xchg
sar
jg
outs
imul
push
mov
add
push
ffreep
iret
pop
xchg
pop
cmps
bndldx
push
aas
shl
xchg
mov
iret
jo
push
scas
popf
stos
shl
ja
inc
repnz
lea
lock
pop
push
iret
cmp
inc
enter
dec
xchg
pop
sub
pop
or
lock
mov
mov
and
xchg
arpl
sti
and
mov
sub
pop
jg
push
jg
je
xor
and
push
adc
addr16
sar
nop
pop
repnz
movs
inc
shl
shl
mov
shl
scas
pusha
inc
mov
(bad)
scas
dec
inc
xor
nop
push
dec
ins
cmp
dec
push
lock
loopne
out
mov
in
scas
(bad)
std
out
jne
fcom
adc
or
outs
jge
into
dec
pop
jo
fucomp
lahf
jg
retf
out
push
(bad)
div
nop
lahf
(bad)
out
jg
cdq
and
push
push
dec
test
and
xor
dec
fadd
aas
cmps
mov
vmovdqa
retf
bound
jmp
push
pop
inc
lods
add
xor
or
jg
outs
jae
mov
jne
ror
pop
xor
pop
add
mov
mov
mov
iret
xor
stos
retf
aas
pushf
sar
(bad)
mov
aas
sub
mov
or
iret
std
retf
adc
test
lock
aad
jmp
jmp
jo
inc
pusha
push
cmc
and
sub
xchg
popf
sbb
xchg
cmove
push
push
cld
retf
jno
or
xor
adc
iret
lahf
test
or
fld
mov
fucomp
cmps
iret
cwde
cmp
push
in
xor
jp
jg
inc
call
int3
add
test
inc
pop
popf
movs
std
fisttp
jnp
xchg
imul
dec
in
mov
(bad)
mov
leave
mov
inc
stos
add
(bad)
repnz
mov
rol
sbb
cmps
nop
jp
pop
loopne
add
push
xor
xor
aad
mov
adc
rcl
outs
dec
mov
sti
adc
retf
pop
(bad)
int
pop
jo
cmp
mov
jl
nop
test
inc
lds
mov
push
call
xor
outs
pop
xchg
mov
jge
or
pop
cmc
call
popa
push
cld
and
mov
lea
mov
sub
pop
movs
mov
xchg
retf
adc
sub
fadd
cmp
das
loopne
js
add
cmp
repz
mov
les
inc
push
mov
xchg
loop
sub
dec
ss
dec
dec
xchg
int
xor
xchg
or
jmp
push
cli
lods
(bad)
pop
arpl
add
es
mov
in
shl
or
lea
(bad)
mov
jg
cmps
lock
adc
aas
mov
fwait
push
sti
les
aaa
je
adc
shl
sar
fnstenv
outs
sub
push
retf
jmp
add
mov
inc
lods
or
mov
imul
fist
repz
leave
jns
pop
mov
mov
inc
add
cmp
aas
jo
adc
adc
fild
inc
add
dec
add
mov
enter
mov
daa
cwde
add
add
ret
mov
ds
and
or
cwde
pop
dec
inc
aas
xchg
xchg
(bad)
jo
into
sub
fdiv
fcom
mov
ins
sbb
xor
mov
rcr
iret
pushf
jns
int
fiadd
xchg
jl
je
dec
mov
inc
jo
int3
xchg
sub
mov
push
mov
jl
in
nop
jmp
ror
xchg
pop
or
dec
test
test
mov
sub
push
or
dec
mov
lea
fwait
dec
and
push
cmp
ja
adc
ror
add
sub
bnd
or
xor
push
sbb
lds
ins
stos
inc
repnz
add
call
xlat
stc
mov
sbb
into
mov
xlat
xor
pusha
fsubr
dec
jle
or
pop
sbb
sub
out
pop
mov
retf
mov
shr
or
sbb
mov
ins
jge
or
icebp
push
jmp
add
fld
aad
pop
adc
fmul
std
cmp
inc
fs
in
lahf
lock
test
jb
aaa
nop
cmp
xchg
xchg
jp
rdpmc
sub
sub
hlt
hlt
sub
pop
cmp
jp
mov
mov
mov
movs
nop
aas
dec
setb
inc
pop
scas
jb
inc
mov
cmps
or
lahf
dec
outs
pop
and
iret
in
hlt
movs
int
mov
nop
shl
push
jo
add
loopne
shr
pop
inc
jb
xlat
mov
ja
retf
pop
(bad)
js
mov
ins
lods
sub
sbb
dec
ret
das
adc
pop
cdq
inc
dec
outs
and
and
sub
in
out
aas
lods
(bad)
jge
sbb
fwait
test
in
test
pop
xchg
ds
mov
call
push
shl
xchg
call
sbb
push
dec
leave
mov
addr16
(bad)
sbb
mov
test
outs
xor
(bad)
pop
shl
sbb
add
ret
push
add
test
ins
dec
lock
adc
sub
shl
clc
dec
aad
(bad)
jge
fwait
cmps
ror
jl
add
push
mov
retf
stos
mov
stos
test
clc
cli
gs
xchg
je
mov
pop
or
and
es
push
and
pusha
sar
scas
es
call
mov
push
aaa
pushf
ret
inc
movs
adc
inc
xor
outs
mov
push
dec
mov
enter
in
iret
repz
scas
imul
dec
jne
shr
xor
or
sub
aam
pavgb
push
(bad)
loopne
mov
dec
gs
retf
dec
fcomp
test
fwait
sti
fidiv
xchg
(bad)
jbe
mov
adc
nop
scas
movs
jle
dec
xor
ret
xor
lock
scas
mov
scas
add
fcmovb
in
pop
jg
adc
pop
xchg
js
aas
pop
xor
mov
nop
call
xor
arpl
rcr
aad
pop
hlt
test
cmp
loope
fs
add
in
(bad)
in
(bad)
fnstenv
sbb
adc
scas
jnp
dec
jo
stc
scas
add
fisubr
nop
cmp
call
das
push
sub
mov
ds
xor
add
cld
retf
and
cmp
mov
ins
shr
pusha
mov
pusha
fidiv
pop
lea
repz
add
test
jo
sbb
inc
nop
ins
cmp
iret
je
dec
mov
iret
pusha
xchg
loop
je
je
aam
js
les
stos
frstor
jo
jmp
xor
aaa
xor
mov
(bad)
sar
dec
pushf
inc
mov
std
and
adc
xlat
iret
pusha
dec
push
iret
pop
add
shl
dec
loopne
out
add
xchg
std
push
inc
shr
pop
xor
scas
(bad)
jg
(bad)
mov
mov
retf
out
and
rol
inc
aam
mov
es
jge
lods
ret
in
bound
hlt
dec
and
retf
dec
fild
jp
ja
dec
cmp
in
and
les
aam
mov
iret
xor
inc
stc
outs
mov
fwait
inc
lods
ret
gs
inc
rol
aas
add
aas
scas
out
(bad)
iret
lock
and
loope
iret
arpl
add
inc
jmp
in
out
loopne
aas
xor
cwde
push
jne
adc
test
or
add
aas
test
jb
mov
inc
retf
mov
jg
dec
or
mov
js
aad
xchg
dec
inc
xchg
lods
std
pusha
mov
mov
jae
mov
mov
ret
jo
sbb
pop
jp
xchg
adc
jl
xor
mov
xor
les
jnp
test
sub
jbe
iret
xor
xor
xor
outs
xchg
movs
imul
push
mov
imul
inc
xor
push
pop
jle
cmps
pusha
fldcw
ror
loopne
hlt
sbb
fs
sub
adc
outs
add
jae
adc
sub
popa
mov
fstp
fwait
pop
jmp
call
inc
pusha
pop
clc
data16
mov
scas
loope
mov
das
adc
xchg
xor
push
add
jb
add
xchg
(bad)
jg
dec
mov
pop
stos
fstp
inc
mov
hlt
inc
inc
sub
xchg
scas
sub
ja
inc
loopne
mov
adc
arpl
dec
jmp
retf
and
js
arpl
xor
loopne
jo
sbb
loop
mov
mov
hlt
xchg
mov
add
out
add
lock
das
ret
dec
or
mov
cld
mov
sub
fdiv
mov
pop
hlt
mov
mov
retf
out
test
cmp
inc
cli
sbb
aam
loopne
icebp
aam
das
cwde
cmp
mov
push
sti
push
add
xchg
bnd
cmp
sub
shl
imul
or
jl
lods
pop
enter
push
adc
sub
mov
lds
rcr
sti
or
or
bound
xchg
xor
adc
and
dec
inc
out
mov
jle
or
adc
stos
jne
push
push
(bad)
cld
inc
cwde
fistp
fyl2x
and
addr16
dec
hlt
mov
lock
jae
inc
cs
cld
and
mov
dec
xor
xchg
(bad)
adc
loope
iret
sbb
mov
inc
lods
sbb
and
stc
je
(bad)
mul
cmc
pop
mov
jg
(bad)
ds
jnp
pushf
dec
mov
sti
fucomip
outs
mov
jmp
mov
inc
push
jge
xchg
jmp
inc
xor
mov
pop
push
push
out
aas
mov
or
pop
hlt
es
(bad)
js
xchg
jmp
and
iret
stc
dec
sbb
out
adc
mov
dec
fidivr
inc
(bad)
out
shl
dec
xor
sub
jae
or
(bad)
and
add
jge
xor
add
mov
ficom
mov
int
outs
aas
and
in
push
cld
or
clc
xchg
in
(bad)
repz
lock
out
inc
call
sub
je
cld
cli
sahf
inc
out
push
push
loope
enter
sar
dec
sub
pop
ins
jecxz
xor
and
loopne
cld
and
pusha
lahf
dec
inc
xchg
cld
fmul
fs
push
addps
mov
(bad)
call
push
pop
dec
in
push
repnz
test
das
in
aam
pop
xchg
jo
adc
and
icebp
fnstcw
movs
sub
jecxz
jnp
sub
sub
pop
xor
xor
ss
push
cmp
popf
and
jg
cmp
or
lods
inc
shl
repz
mov
pop
add
cmp
jg
or
lahf
xchg
sbb
or
inc
jns
mov
fnstsw
sub
fisttp
add
adc
stos
add
pop
iret
in
hlt
call
sub
jge
push
mov
stos
pop
push
cmp
bts
xlat
sub
mov
loopne
rcr
or
sub
mov
cmp
inc
fwait
push
in
fs
fidivr
ja
(bad)
sbb
test
in
call
(bad)
sub
das
or
adc
xchg
test
pop
mov
outs
dec
and
mov
call
add
mov
cld
in
rcl
das
(bad)
das
lods
repz
push
mov
jns
mov
inc
test
in
hlt
cmps
dec
xor
hlt
(bad)
ret
mov
out
lods
retf
stc
push
push
call
push
jge
je
popa
push
cmp
(bad)
icebp
or
pushf
pop
sub
lds
sub
jl
mov
jge
xchg
fdivr
or
rcr
pusha
pcmpeqb
pop
pushf
add
xor
lahf
lock
enter
cwde
les
mov
sbb
dec
push
mov
inc
jno
add
xchg
xor
rcr
adc
jg
cmp
push
in
iret
fs
mov
mov
fistp
xchg
or
jbe
mov
lock
push
stos
scas
out
xor
mov
cmp
push
es
daa
nop
shl
stos
jl
xor
pop
add
fimul
and
imul
push
nop
inc
out
scas
call
test
fdivr
pop
das
aas
ds
mov
xchg
stos
push
pop
in
cmp
mov
jmp
shl
sub
inc
push
hlt
imul
dec
outs
pusha
icebp
pop
mov
dec
out
mov
push
popa
mov
jb
aaa
nop
pop
ret
loope
jae
xor
aas
pusha
fidiv
add
fistp
inc
xor
sub
loopne
call
(bad)
cmp
ret
fs
inc
adc
and
pop
aas
scas
pop
and
lock
retf
jns
jmp
stos
xchg
inc
lds
fbld
aas
xchg
pop
sub
neg
call
xor
dec
sub
add
popf
and
pop
xlat
sbb
mov
and
xchg
shr
fwait
stos
movs
xchg
es
jle
mov
icebp
iret
dec
repz
ins
(bad)
lods
adc
pop
loopne
stos
xor
pop
shl
sub
arpl
cmp
adc
jae
sti
add
pusha
jmp
outs
imul
ret
dec
inc
scas
hlt
xlat
and
xor
sahf
sar
inc
lods
nop
mov
cmovl
out
mov
(bad)
add
xor
mov
pop
hlt
movs
mov
sbb
sub
repz
mov
mov
scas
int3
push
(bad)
aad
sbb
sub
pop
mov
inc
xor
dec
data16
sar
xor
inc
xchg
jmp
pop
xchg
ror
out
test
iret
(bad)
push
adc
addr16
jg
mov
(bad)
stc
xor
aad
mov
inc
push
mov
ins
add
daa
rcr
(bad)
retf
fisttp
jb
mov
pop
jae
in
lods
add
mov
push
cdq
out
gs
ins
lea
mov
add
dec
push
add
cmp
push
fsubr
(bad)
add
pop
xchg
xchg
sub
ret
jb
lock
xchg
adc
int
fdivrp
hlt
adc
(bad)
mov
pop
mov
mov
jg
xchg
neg
out
add
push
jmp
adc
dec
ret
rol
pop
shr
adc
pop
movs
pop
retf
call
pop
and
mov
dec
xchg
das
repnz
lock
adc
jbe
mov
mov
fadd
mov
adc
ret
sub
jmp
mov
mov
repnz
xchg
pusha
int3
inc
fiadd
jmp
cmp
test
or
xchg
dec
lods
lock
aas
mov
call
jbe
cwde
fidivr
das
and
mov
push
add
inc
cmp
mov
push
loop
retf
cmp
addr16
mov
sub
mov
inc
lods
push
shl
(bad)
out
frstor
out
stos
lea
mov
jbe
push
pop
pop
xor
inc
mov
cli
fcomp
jecxz
mov
jne
push
dec
movs
fst
lods
scas
popa
xor
retf
add
inc
push
outs
xchg
or
nop
sqrtps
pop
sbb
xchg
mov
sbb
sar
xchg
jnp
imul
ja
in
cmp
or
cdq
jo
inc
outs
inc
stos
gs
test
ins
mov
mov
in
in
popf
shr
cmps
lods
jo
lahf
dec
nop
xchg
sub
mov
loop
cmp
mov
inc
shl
pop
push
out
repnz
dec
jb
push
xchg
cmp
cmps
jnp
cmp
pop
jl
add
ret
dec
pop
(bad)
std
ins
pop
pushf
std
repz
mov
enter
js
out
pop
mov
or
fnstcw
hlt
mov
jae
pop
pause
imul
call
add
jmp
test
push
test
movlps
ret
repz
pop
adc
scas
add
in
pushf
ja
add
iret
shr
sub
outs
rcl
repz
push
jecxz
leave
jo
lea
mov
test
xor
xchg
(bad)
leave
jecxz
pavgw
sub
scas
xchg
(bad)
aas
and
sub
jmp
sub
push
ret
inc
mov
mov
adc
mov
adc
mov
mov
add
(bad)
fisub
inc
sar
jl
or
push
shr
movs
fiadd
sbb
adc
(bad)
gs
inc
scas
aam
outs
inc
xor
inc
pop
aas
pop
cmovg
mov
mov
call
pusha
lahf
(bad)
xlat
xchg
jns
mov
cmove
cmp
(bad)
js
mov
mov
inc
pushf
pop
out
jle
jb
inc
nop
popf
sbb
imul
and
add
nop
iret
(bad)
popf
lea
fisttp
aas
pop
sub
js
pop
pavgb
mov
jo
inc
call
pop
adc
xor
cmc
push
mov
sub
test
push
dec
and
mov
iret
lahf
inc
scas
push
cmp
add
lahf
outs
mov
pop
aaa
stc
call
jl
(bad)
xor
scas
lock
mov
out
inc
ins
ins
mov
popa
mov
fiadd
jecxz
lods
pop
mov
mul
les
xor
xchg
sbb
mov
fnclex
add
fwait
jmp
mov
mov
in
cwde
aas
sub
sti
je
repz
pop
and
jge
pop
xor
ret
ja
inc
sbb
inc
daa
xchg
mov
test
cli
sbb
(bad)
fwait
ret
mov
outs
push
xchg
sbb
jo
out
jb
sub
sub
out
or
mov
sbb
clc
sub
adc
add
das
mov
adc
adc
mov
cli
fisttp
jmp
fisttp
sbb
jno
mov
stos
pop
mov
mov
scas
call
pop
int3
mov
jg
dec
cld
or
or
xchg
xor
inc
jl
add
fwait
push
jecxz
sub
mov
mov
dec
test
mov
dec
clc
movs
cld
fs
cdq
push
stos
inc
cli
ins
addr16
mov
jg
adc
and
imul
mov
ret
and
repz
scas
xlat
mov
(bad)
jb
cmp
and
cld
(bad)
cmp
ret
aad
jle
mov
inc
jo
push
pop
push
js
add
sahf
enter
mov
shl
sbb
dec
lock
inc
jbe
fidiv
mov
adc
stos
int3
mov
jg
pop
lock
inc
xchg
and
mov
cmp
push
and
cld
and
sahf
dec
outs
call
dec
or
push
mov
in
retf
cli
adc
test
call
outs
mov
aam
ins
nop
fcmovne
push
and
js
adc
(bad)
add
add
mov
fcomip
pop
or
test
add
add
pushf
gs
add
adc
test
scas
mov
loopne
sti
mov
ins
mov
pop
inc
xor
call
mov
sub
and
lods
cmp
push
dec
push
adc
pop
pop
in
jnp
fimul
cwde
mov
mov
sar
inc
lock
mov
mov
and
imul
pop
jg
les
aas
loop
repz
and
inc
xchg
pop
sahf
jae
adc
iret
(bad)
cmp
in
bndldx
stos
shr
lock
mov
push
js
xor
int3
lock
sub
xor
mov
outs
mov
out
fstp
lahf
daa
sti
rol
adc
push
cli
iret
adc
mov
sbb
outs
xlat
enter
mov
or
aam
cmps
adc
aas
fwait
rcl
inc
mov
cmp
jb
inc
xor
cli
loope
arpl
scas
pop
sub
or
rcl
movs
adc
mov
mov
std
jg
daa
mov
loope
xor
xchg
sahf
adc
je
nop
call
and
call
jb
dec
xchg
pop
inc
mov
data16
dec
retf
xchg
jge
test
sbb
sbb
pop
aas
lods
mov
pop
and
xor
dec
add
nop
lods
pop
mov
(bad)
call
xor
cmp
cs
gs
mov
push
repz
push
mov
cwde
popf
push
clc
adc
and
pop
mov
or
jl
test
push
mov
int3
and
add
pusha
int3
sub
adc
mov
fwait
das
movs
outs
retf
out
loopne
pop
scas
jmp
push
out
and
gs
scas
das
mov
jg
in
shl
adc
push
mov
mov
cli
mov
rol
cmovg
cmps
lea
mov
adc
aam
in
js
repz
cmc
mov
ror
inc
out
loope
clc
arpl
pop
push
mov
movq
mov
inc
loopne
push
bound
add
adc
test
cmps
cmp
adc
ret
rcr
pop
pop
addr16
pop
lahf
xchg
dec
fisttp
fistp
lds
cs
mov
mov
pop
out
or
bound
and
add
popa
pop
shl
das
dec
setle
das
xor
or
(bad)
mov
stos
lods
(bad)
jne
cmp
(bad)
pop
xor
jg
leave
aas
and
mov
add
add
inc
scas
out
and
sbb
ret
pop
ja
pop
xor
dec
leave
dec
pop
inc
addr16
pop
xor
popf
push
scas
push
retf
hlt
pusha
mov
and
pop
or
push
inc
pop
cmp
inc
leave
test
out
stos
sbb
xchg
repnz
aas
idiv
cmp
sbb
and
aam
push
jmp
cmp
shl
cmc
les
mov
sbb
je
iret
jo
add
out
stos
and
push
jl
mov
or
inc
mov
adc
adc
and
neg
cli
xor
cmp
(bad)
rol
push
leave
mov
mov
xor
jmp
add
adc
das
cli
mov
mov
mov
mov
je
or
jmp
clc
fs
pop
cmp
push
das
add
jmp
hlt
push
jmp
test
sub
jecxz
sbb
pop
aas
pop
leave
dec
loopne
cmps
scas
jb
xor
ffreep
scas
adc
mov
aas
sar
xchg
dec
xor
dec
or
scas
add
(bad)
outs
add
adc
wrmsr
rol
fwait
sar
shl
neg
call
iret
std
cmp
out
retf
outs
push
shr
mov
dec
shr
mov
out
mov
jno
scas
cld
jg
(bad)
outs
ds
sahf
shr
mov
or
dec
neg
mov
inc
(bad)
pop
scas
adc
scas
or
xor
lods
pop
shr
nop
push
or
fistp
movlps
mov
and
and
(bad)
imul
ret
aas
mov
adc
popf
push
out
adc
add
and
sbb
sub
jnp
aas
xor
retf
pop
fadd
loope
xor
mov
je
or
outs
in
push
push
sub
retf
push
mov
inc
icebp
cld
xor
mov
sbb
test
int3
sbb
js
pop
xchg
test
aas
mov
jmp
dec
sbb
ja
xchg
shl
mov
int3
mov
push
sar
push
pop
fimul
adc
test
les
fwait
jp
jecxz
stos
scas
and
ficom
retf
fcom
xchg
fs
popa
aaa
mov
out
mov
call
daa
adc
(bad)
das
add
xchg
hlt
xchg
ins
retf
stos
nop
aas
mov
inc
outs
or
mov
rcl
jmp
clc
pop
add
aas
add
aad
mov
fdivr
in
fild
shr
mov
scas
fs
jl
sub
cs
fbld
retf
int3
sbb
mov
data16
andnps
mov
add
out
(bad)
(bad)
aam
nop
aas
pop
jg
mov
cmpps
jge
shld
vmovddup
mov
mov
jnp
mov
sbb
das
and
cmp
ins
inc
sbb
aaa
fwait
out
xchg
dec
jmp
repz
stc
sar
inc
adc
jle
xor
adc
sub
les
aam
xchg
cmps
fs
mov
inc
stos
cdq
mov
mov
mov
push
and
jnp
stos
(bad)
mov
scas
pop
xor
scas
jl
inc
dec
xor
cli
sub
mov
outs
cmp
and
sahf
add
aas
jge
jecxz
inc
cli
(bad)
jne
and
xor
icebp
leave
nop
scas
xchg
xchg
pop
mov
pop
push
pminub
sub
dec
std
fild
and
mov
dec
outs
(bad)
pop
or
pop
dec
push
in
dec
pop
pop
lods
bound
cld
dec
pop
mov
aas
sbb
cmp
lahf
dec
pop
(bad)
out
ror
lds
xor
cmps
and
xor
xlat
shr
mov
nop
(bad)
es
inc
mov
mov
push
push
add
fbstp
and
les
dec
and
add
test
jne
dec
mov
rcl
mov
mov
push
push
mov
int
sbb
outs
adc
and
lahf
add
mov
test
push
out
repz
sbb
xor
ja
add
jae
pop
jge
shr
cmp
test
pop
mov
jo
push
in
sar
js
pop
adc
sbb
or
cmc
test
jl
call
mov
aas
out
test
and
loopne
out
xchg
je
movs
mov
scas
push
push
sti
fsubr
lahf
xchg
xchg
je
inc
lock
stos
nop
dec
lds
mov
nop
sti
mov
jg
push
dec
pop
xor
leave
mov
xchg
jecxz
call
(bad)
mov
mov
inc
sti
popf
into
jmp
stos
jmp
iret
add
(bad)
hlt
es
hlt
hlt
cmp
sbb
sub
enter
je
sub
fimul
mov
or
out
cmp
push
mov
cwde
cmps
pop
mov
retf
(bad)
ret
mov
clc
dec
arpl
sbb
repz
je
int3
add
sahf
mov
and
ins
inc
sahf
or
sub
pop
fcomi
inc
push
mov
xor
xor
outs
xlat
lods
xor
fistp
jnp
ins
cmp
(bad)
retf
in
add
sti
call
cld
adc
addr16
mov
inc
idiv
xchg
cmps
movs
xchg
call
in
(bad)
mov
inc
stos
test
adc
xchg
fdivr
xor
mov
adc
mov
arpl
xchg
sub
and
mov
dec
mov
jl
lods
pop
mov
and
mov
dec
sbb
mov
mov
mov
mov
sbb
push
mov
sahf
inc
adc
(bad)
xor
sub
(bad)
arpl
cmps
lea
(bad)
pop
in
jne
cs
fdivr
fist
out
push
fild
push
(bad)
outs
sbb
shl
ret
push
test
fcomp
call
mov
dec
xchg
dec
add
outs
and
cmovno
xor
ja
inc
push
push
and
xor
(bad)
retf
lock
rcr
sbb
inc
not
jne
pushf
cs
inc
inc
fisttp
popf
dec
add
cld
pop
sbb
push
or
pop
movs
sbb
mov
push
retf
pop
call
ret
add
in
stos
cmc
jl
jmp
das
test
mov
xchg
fucomi
pop
cmp
adc
lahf
xor
add
cdq
and
sbb
mov
mov
mov
xor
xchg
lahf
inc
jecxz
cwde
mov
ficomp
add
int3
ret
xchg
mov
push
jge
pop
xor
ret
ror
jnp
mov
std
mov
call
pop
cmps
xchg
je
jo
cmp
xchg
sbb
aam
in
lods
add
out
call
xchg
test
sub
adc
or
nop
xor
out
xor
xor
fiadd
push
shr
stos
jae
inc
add
push
mov
dec
or
push
dec
leave
push
lods
adc
push
push
mov
inc
xchg
lods
jg
inc
in
ret
xchg
and
or
push
in
lahf
xchg
out
and
mov
inc
jo
aas
test
(bad)
cli
adc
sti
stos
lea
mov
xor
aaa
jl
push
sbb
retf
out
mov
and
mov
dec
cmc
popf
sub
mov
cld
leave
repnz
lahf
jo
call
call
ins
mov
sub
ror
ret
mov
repz
scas
out
es
inc
int3
add
or
add
in
and
push
shl
xchg
sub
and
jo
rcl
or
aas
(bad)
inc
dec
push
es
mov
mov
shl
dec
dec
ror
ss
dec
test
jb
push
mov
inc
out
push
fild
push
mov
rcl
push
or
jbe
add
mov
and
stos
add
dec
xor
adc
ret
xchg
jo
shl
pop
dec
ret
push
push
or
test
xchg
cmp
jnp
das
in
int
mov
out
and
pop
add
push
ja
jmp
rcr
pop
nop
rcr
mov
mov
sbb
cmps
push
rcr
aad
lds
jo
into
sbb
(bad)
loopne
call
(bad)
mov
inc
sbb
(bad)
pop
lods
xchg
jge
lds
dec
in
jmp
stos
mov
inc
and
fninit
and
pop
cmp
sbb
sbb
popa
pop
dec
dec
les
mov
sbb
and
mov
or
jae
dec
lea
out
lahf
fst
jno
lds
push
jp
cwde
cmp
inc
and
pop
sahf
outs
xchg
rol
and
mov
add
loopne
frstor
in
pop
xor
mov
xor
lock
enter
in
pop
dec
cmp
mov
adc
jecxz
mov
movs
cmps
retf
jg
rcr
in
jmp
mov
pop
mov
pop
inc
(bad)
mov
cdq
outs
movs
xchg
push
add
cmp
into
dec
push
push
cmp
push
inc
xchg
xchg
daa
enter
cmp
(bad)
push
daa
mov
jns
add
add
inc
ss
push
(bad)
iret
sbb
inc
xor
inc
(bad)
nop
(bad)
push
mov
mov
retf
xchg
dec
mov
iret
xor
cmp
ret
mov
sbb
out
jp
pop
jg
loope
pop
push
mov
lds
nop
mov
mov
push
jno
or
pop
adc
bound
dec
jo
or
sbb
rcr
xlat
fisttp
mov
mov
pop
push
jecxz
fs
inc
fcomip
ficom
(bad)
jb
shl
aaa
rcr
mov
jge
pop
mov
adc
and
retf
cmp
stos
jae
rcl
in
popf
jg
into
sti
adc
sbb
in
xor
jo
or
iret
add
adc
retf
test
fcomp
sar
jb
lock
pop
sub
aam
loopne
cmp
cmp
das
xor
lock
pop
pop
pop
dec
add
sbb
popf
add
adc
test
lea
or
push
cmp
jb
inc
jno
pop
and
imul
sub
xor
cmp
ja
cmovg
dec
push
jmp
gs
loope
xor
daa
mov
ins
dec
icebp
xchg
ror
ror
push
movs
fsubrp
out
xchg
sub
and
mov
mov
jg
cmps
mov
ret
dec
repz
mov
inc
mov
sub
shl
ffreep
mov
loope
mov
mov
push
pop
pop
pop
lods
imul
inc
mov
(bad)
sti
pop
aad
sar
or
pop
ret
stc
loop
ficomp
stos
(bad)
jmp
outs
adc
jle
fcom
call
ins
into
idiv
(bad)
cmp
lea
jle
xchg
xor
mov
shr
or
xchg
ret
in
cmp
push
sub
push
ins
mov
add
aam
lods
sbb
scas
inc
sbb
es
pop
inc
adc
stos
push
mov
ins
dec
pcmpgtb
inc
loopne
inc
push
aad
mov
and
stos
loope
xor
pop
pop
jae
or
mov
pushf
(bad)
clc
sub
and
aaa
and
gs
mov
sub
loopne
enter
pusha
mov
add
mov
and
rol
xchg
movs
outs
mov
dec
addr16
cmps
test
inc
ja
(bad)
data16
test
sub
int3
pop
mov
sub
mov
mov
iret
mov
shr
add
push
mov
add
loopne
cli
push
mov
sbb
adc
loopne
mov
jbe
mov
fadd
(bad)
xor
sar
je
pop
push
mov
shr
loopne
dec
pop
arpl
out
ins
mov
out
sub
and
adc
fdivr
xchg
data16
lock
lods
inc
aas
je
retf
out
sub
retf
fwait
mov
push
add
mov
test
xchg
mov
mov
pop
push
jl
mov
add
mov
(bad)
sti
and
push
inc
cwde
or
dec
fimul
or
cs
hlt
jns
aad
test
pop
add
fstp
aas
outs
fistp
sub
dec
push
punpckhdq
add
jo
(bad)
mov
fistp
xchg
xchg
and
shr
mov
inc
adc
push
sar
mov
push
xor
pop
cmp
push
fisub
inc
dec
out
pop
daa
or
fwait
test
adc
es
fnsave
or
aas
or
xlat
jge
dec
test
test
daa
adc
xor
out
pop
or
adc
dec
push
cmp
sub
mov
jg
cmp
(bad)
sub
cmp
clc
out
and
(bad)
mov
mov
cmp
or
pop
push
out
add
and
imul
aas
jp
cmp
cmp
out
sub
arpl
push
scas
pop
arpl
(bad)
iret
pop
cmp
push
xchg
mov
rcr
xchg
cwde
mov
cmps
aam
xor
xor
fbstp
arpl
nop
mov
jl
outs
fild
bound
jmp
outs
in
mov
shl
fs
push
lds
outs
mov
or
out
and
push
inc
and
inc
loope
pop
xlat
aas
jp
mov
sub
jp
pop
dec
pushf
lods
out
pop
jnp
iret
mov
jmp
mov
cmp
das
sbb
loopne
das
or
fsubr
cmp
in
xor
cmc
retf
cmc
cmps
(bad)
mov
movlps
add
aaa
and
xor
mov
je
lahf
mov
lock
adc
mov
call
add
ds
das
xchg
pop
mov
outs
jge
maskmovq
mov
iret
gs
into
scas
inc
mov
shr
xor
lock
das
sbb
lock
std
cmp
cld
mov
jmp
shl
sub
mov
fmul
int3
repnz
inc
xchg
pushf
dec
stc
aaa
pop
sbb
cmp
pop
and
pushf
adc
pop
stc
lahf
xor
and
and
xor
lods
jl
mov
cs
fucomip
and
ret
xor
movs
sbb
cwde
(bad)
outs
enter
dec
or
out
add
and
sub
hlt
pop
adc
int
test
pop
jb
xchg
sti
push
add
lock
sar
jnp
or
pop
aas
pop
into
jb
inc
fsubr
and
pop
push
mov
(bad)
mov
das
or
cs
mov
fs
or
xor
sbb
pop
inc
push
dec
stc
lock
loopne
addr16
je
mov
adc
mov
ss
mov
or
cs
popf
dec
cmp
jb
or
call
iret
pusha
sub
mov
movs
(bad)
jne
mov
add
in
aad
retf
ret
sub
das
add
mov
mov
mov
push
int
scas
jmp
and
inc
stos
int3
and
pavgw
in
xor
mov
out
xchg
dec
iret
and
push
dec
jl
call
mov
out
or
push
popw
xor
xchg
xor
push
push
fidiv
(bad)
dec
repnz
lock
xchg
stc
sar
adc
push
test
(bad)
dec
add
fimul
sub
cmp
sbb
pop
test
add
push
push
mov
sub
or
pop
dec
(bad)
xchg
stc
sbb
jbe
mov
out
jge
pusha
cmp
sar
and
dec
ror
imul
cmpps
aas
ja
xor
jns
xor
add
push
aaa
and
mov
ret
shr
bound
add
pop
and
shr
pop
dec
mov
retf
das
sar
mov
adc
mov
pop
push
push
loope
jb
xchg
arpl
loopne
lock
dec
aas
pop
add
xchg
ins
sub
pusha
repnz
mov
iret
arpl
push
jg
adc
mov
mov
mov
sub
add
gs
push
retf
in
hlt
mul
push
xchg
rcl
fdivr
pop
dec
mov
gs
outs
and
xchg
rcl
jae
es
push
mov
(bad)
xchg
fdivr
push
sub
inc
pop
mov
(bad)
xor
imul
or
xor
pop
jmp
mov
ja
sbb
mov
das
aad
lock
int
inc
mov
repz
or
jg
out
push
dec
mov
cmp
sub
sbb
clc
push
xor
popf
pusha
mov
imul
mov
xchg
pop
es
frstor
jne
mov
jne
fdivr
enter
or
xchg
aad
nop
(bad)
inc
out
enter
adc
mov
lea
lock
out
or
cmp
cvtdq2ps
adc
dec
add
pop
or
push
shl
lods
and
ffreep
in
pop
xor
add
lahf
xchg
sub
xor
inc
retf
sub
jl
inc
lods
(bad)
pushf
and
and
ins
movs
iret
xlat
icebp
jp
mov
or
pop
dec
fiadd
xchg
mov
cld
jae
mov
popa
pop
shl
das
dec
setle
das
jl
mov
mov
cwde
push
inc
ficom
test
sbb
imul
xor
dec
pop
mov
push
stos
cld
pop
pop
rol
fistp
add
push
jae
(bad)
jnp
or
pop
retf
jbe
test
sub
xor
outs
xchg
mov
adc
xchg
pop
jnp
pushf
clc
inc
mov
in
or
fisttp
mov
fistp
xchg
or
push
cld
mov
aam
xor
push
stos
test
fld
stc
push
jmp
mov
call
das
pop
loopne
hlt
dec
inc
ret
add
jl
pop
jo
pop
and
pusha
sar
or
add
aad
mov
retf
adc
push
add
stos
stos
(bad)
gs
cdq
mov
outs
dec
shr
outs
neg
outs
sbb
adc
rcr
push
sti
jl
in
pusha
inc
add
clts
sub
push
out
and
cmp
scas
int3
std
fbstp
jmp
cmps
dec
gs
cmp
or
mov
ins
fistp
popf
cmp
neg
ins
popf
push
mov
cmc
mov
in
into
jmp
out
aaa
fidiv
inc
enter
xchg
sub
jnp
fcomip
sbb
cdq
shr
jbe
inc
(bad)
fdivr
in
sub
xlat
jo
inc
pop
push
scas
xchg
jg
inc
jns
adc
fistp
lahf
mov
lea
and
pusha
xor
sar
cmps
sbb
popa
jp
pop
mov
ret
ror
gs
sbb
mov
lds
xchg
ins
nop
sub
out
adc
retf
repz
stos
scas
pop
pop
loopne
lock
pop
jno
test
scas
or
jno
add
aad
loop
pusha
cmp
push
repnz
out
push
cmp
addr16
out
int3
mov
test
jne
sub
scas
iret
cdq
shl
jg
cmp
mov
out
sahf
lock
je
add
cmp
aas
sub
mov
pop
stos
jl
mov
add
add
popf
mov
test
shr
mov
sbb
imul
xchg
mov
jmp
add
hlt
add
pop
arpl
xchg
inc
mov
xor
add
xchg
outs
jmp
pop
push
mov
aas
dec
or
sub
je
out
and
scas
clc
mov
and
call
das
sub
cli
fstp
lods
(bad)
pop
iret
aas
add
mov
sar
dec
lds
mov
push
cmp
jo
add
in
repnz
rol
loopne
jl
dec
pop
outs
in
(bad)
mov
add
mov
push
lea
xor
aad
rcr
sub
mov
ret
clc
(bad)
sub
test
mov
popf
stos
ja
xor
imul
maxps
out
(bad)
aad
in
inc
out
pop
cmp
mov
les
xchg
xchg
call
das
sbb
movs
test
fstp
push
inc
mov
mov
mov
push
mov
imul
xor
stos
stos
sbb
sub
mov
add
in
jge
xchg
xchg
dec
sar
mov
cmps
jl
sbb
iret
(bad)
xchg
and
les
xor
push
mov
cli
imul
int
push
jns
push
jno
lds
pushf
or
inc
xor
mov
mov
lahf
imul
fcom
into
mov
dec
mov
hlt
lods
adc
jbe
gs
shr
loopne
jnp
stos
mov
repz
iret
sub
or
out
stos
push
add
pusha
aad
xchg
jg
mov
xchg
ins
(bad)
mov
(bad)
pop
sub
cmp
lahf
xor
pop
lea
fcomp
cmc
ret
aam
dec
pop
arpl
sbb
lods
mov
cmp
(bad)
xor
aad
push
sahf
pusha
dec
or
mov
lods
xchg
leave
adc
push
cdq
mov
int
cmp
xor
inc
in
dec
clc
pop
sti
mov
movs
mov
mov
movs
jo
sbb
stos
push
fs
mov
lea
dec
dec
cvtdq2ps
jle
push
or
sbb
fld
in
dec
dec
dec
jne
jg
rcl
mov
mov
jo
inc
sub
cli
fcomp
jmp
mov
cmc
les
jnp
mov
sub
add
push
cmp
(bad)
data16
mov
pop
arpl
nop
push
stos
xchg
mov
inc
add
push
mov
push
dec
(bad)
pop
adc
aaa
test
cmc
xchg
ret
call
sbb
adc
mov
add
jnp
test
ja
jnp
xor
retf
mov
aad
jecxz
pusha
cmp
push
repnz
leave
push
add
frstpm(287
xchg
mov
adc
cs
push
push
bound
inc
shl
repnz
adc
sub
sub
stos
xchg
pop
add
mov
inc
xchg
pop
pop
shl
imul
xor
cmp
mov
xchg
fwait
mov
pop
in
push
lods
mov
(bad)
sbb
aad
pop
pop
pop
xchg
inc
bound
and
(bad)
iret
idiv
out
sub
adc
jmp
sti
dec
cmp
cld
jo
(bad)
nop
xchg
jle
sbb
sbb
mov
cli
(bad)
xor
jne
retf
(bad)
iret
push
xchg
ins
cwde
aaa
or
inc
(bad)
xchg
xlat
xchg
xor
pop
push
bound
push
or
push
lea
stc
sub
mov
jg
jecxz
loop
mov
test
mov
inc
scas
adc
rcl
pop
add
cmp
inc
test
(bad)
sbb
loop
inc
ret
add
pop
test
lock
movs
sbb
test
dec
jns
scas
lahf
mov
fstp
test
jnp
movq
shr
test
in
add
in
push
sbb
xchg
enter
add
das
jg
add
lds
dec
pop
int
ror
jne
jo
xor
neg
test
cld
pop
add
jmp
movs
stos
ds
repnz
xchg
aad
pop
iret
xor
ret
fadd
nop
mov
push
or
scas
fmul
mov
push
fld
mov
push
and
nop
or
inc
test
test
inc
xchg
call
and
repnz
pop
inc
pop
adc
mov
stos
inc
jmp
push
ret
push
popf
inc
push
arpl
push
xchg
in
jnp
les
imul
aas
mov
adc
fcom
out
js
jo
lahf
rcl
sub
stc
mov
loopne
xchg
push
mov
jae
add
out
mov
cld
pop
sbb
enter
cdq
das
nop
aas
sub
cmps
inc
sub
(bad)
mov
scas
sub
jmp
outs
das
pop
cmp
aas
sub
cmp
inc
addr16
jmp
xchg
repz
pop
and
mov
shl
cmps
outs
les
and
mov
rcl
pushf
out
imul
call
cmp
(bad)
xor
cdq
outs
cmp
or
xchg
mov
ins
jnp
neg
mov
dec
pop
lods
(bad)
int3
jg
outs
rcl
mov
popa
aaa
mov
stos
and
lahf
int3
and
inc
scas
dec
cmp
lea
ror
pop
jnp
dec
lock
test
mov
fild
into
(bad)
(bad)
not
xchg
and
icebp
adc
in
das
cmc
dec
mov
mov
pop
dec
jecxz
mov
std
fist
sub
pop
mov
(bad)
ret
xchg
loopne
shr
stos
add
mov
hlt
loopne
lock
ret
outs
test
dec
pop
inc
stos
and
pop
dec
in
cdq
jmp
adc
mov
push
cmp
mov
(bad)
out
aad
pop
xor
enter
cdq
inc
nop
aas
mov
mov
jne
inc
std
push
add
loopne
jo
mov
mov
push
invd
pop
push
setl
sub
pop
and
repz
sub
xor
cli
jbe
popa
imul
jo
add
pop
repnz
(bad)
jb
aas
push
outs
adc
dec
mov
retf
ja
jge
add
sti
push
add
(bad)
xchg
cli
inc
sub
aam
loopne
fcomp
das
cmp
lock
test
mov
or
int
dec
aas
in
and
movs
add
sub
xor
pop
dec
push
fs
dec
daa
push
adc
and
pop
dec
mov
sbb
frstor
mov
mov
add
in
xor
mov
nop
scas
xchg
xchg
pop
mov
pop
push
pminub
sub
dec
std
fild
repz
mov
dec
outs
(bad)
pop
xlat
push
pop
dec
push
xor
lods
bound
cld
dec
pop
mov
xchg
cmp
mov
mov
mov
inc
fs
add
cmp
mov
popf
in
jns
cmps
add
mov
not
mov
sub
and
rcr
sub
ret
repz
add
jo
push
int
sar
in
jp
pop
in
ret
mov
das
adc
ja
sub
popa
aad
dec
ss
dec
mov
dec
lds
sbb
mov
stos
push
mov
call
xor
inc
shl
pop
loopne
xor
das
rol
inc
xor
fild
lods
fistp
retf
mov
rcr
int
aad
mov
pop
and
xchg
adc
int
leave
popf
add
or
jl
inc
jo
js
scas
mov
pop
dec
pushf
jmp
shr
int3
iret
xlat
add
clc
sbb
pusha
int3
js
leave
xchg
fild
cmps
mov
push
call
pop
push
sbb
jae
nop
mov
xor
sbb
out
hlt
or
push
cld
out
jns
jo
rol
jae
mov
mov
sub
fld
adc
xor
es
mov
push
lahf
sar
loopne
lock
aas
test
xor
inc
jmp
mov
int3
add
lahf
dec
or
aaa
mov
cld
(bad)
or
hlt
retf
ds
or
mov
jae
fwait
adc
sar
arpl
pop
mov
aam
dec
pop
mov
inc
(bad)
pop
push
sbb
push
stos
test
cmp
ret
jge
into
adc
and
push
xor
stos
jb
ror
sbb
pop
movs
lods
nop
sbb
setne
xor
mov
in
pop
hlt
loopne
xor
sub
std
loopne
mov
mov
rcl
and
push
test
adc
dec
dec
mov
call
mov
call
nop
ror
adc
pop
mov
fadd
mov
je
or
and
rcr
dec
aad
or
aas
mov
pop
pushf
ds
iret
jo
lock
xor
pusha
(bad)
loop
cmp
or
outs
jno
and
fistp
sar
out
loop
mov
mov
and
sub
xchg
pushf
inc
sbb
ds
inc
xor
jo
bound
dec
aad
and
xchg
inc
sbb
xchg
cmps
push
add
jb
rcr
or
lock
(bad)
jmp
push
pop
add
mov
in
pop
ror
out
clc
shr
push
mov
and
(bad)
adc
or
cvtpi2ps
outs
and
lock
mov
xor
jo
push
mov
fisttp
adc
cmps
rcpps
shl
ins
push
(bad)
iret
push
pop
in
fwait
mov
and
pop
arpl
sbb
loop
mov
add
mov
pusha
(bad)
loop
cmp
ins
or
aas
dec
lock
mov
inc
and
adc
xchg
mov
ret
mov
lock
loopne
retf
imul
push
xor
arpl
mov
mov
jb
mov
adc
loop
(bad)
pop
fbld
pusha
sub
mov
mov
dec
jmp
pop
stos
retf
inc
dec
jo
and
or
jne
in
rcr
(bad)
lock
das
mov
sub
pop
cmp
out
jne
pusha
es
popf
mov
adc
cld
loopne
aad
or
js
pop
retf
std
xchg
inc
lods
enter
std
fild
xor
fld
pop
shl
loopne
or
adc
std
push
int
scas
sbb
iret
std
push
lea
popf
xor
loop
repnz
ret
ret
shl
mov
test
xor
dec
xor
ins
ret
or
outs
push
pop
adc
mul
ja
ja
not
jge
imul
nop
mov
xor
add
sub
mul
inc
retf
add
mov
es
push
adc
ja
add
stos
add
lods
add
or
icebp
dec
fidiv
jmp
ffreep
iret
adc
nop
les
jg
fnsave
add
jl
jmp
loope
inc
push
inc
cmc
sub
ja
sub
retf
adc
std
and
inc
out
xor
mov
pusha
pop
ret
xor
mov
sub
push
lods
push
xor
push
call
mov
pop
pop
ret
or
lock
int
scas
mov
(bad)
iret
ja
lods
dec
fst
dec
push
jg
push
pop
movs
lods
nop
sbb
setne
out
(bad)
(bad)
iret
push
popf
lea
sbb
ja
adc
repnz
inc
nop
mov
pop
std
cmp
pusha
inc
es
and
and
fild
mov
sbb
das
rol
in
jno
or
sbb
xor
int
pusha
dec
scas
mov
ins
das
psrld
into
shl
int
mov
jecxz
adc
pusha
jo
fisttp
das
sbb
aad
jbe
nop
shl
rcr
int
push
es
xor
xchg
dec
loop
inc
add
nop
cmc
xchg
mov
(bad)
sbb
(bad)
adc
add
adc
mov
(bad)
call
rcr
aas
pop
aad
xchg
inc
cmp
lea
out
pop
and
sbb
sub
retf
bndldx
nop
mov
inc
bound
mov
outs
stc
xor
pop
ja
cwde
inc
cwde
jg
test
mov
or
cwde
out
fcomi
push
jmp
xor
pop
inc
(bad)
ds
cmc
add
aad
or
mov
cmp
xor
mov
mov
dec
outs
xchg
mov
movs
ins
sbb
jae
dec
xlat
or
xor
loopne
repz
in
add
pop
push
(bad)
int
nop
jge
outs
xchg
loopne
bound
xchg
lea
jne
aas
cmps
das
pop
pop
stos
stc
jp
mov
xchg
loopne
mov
adc
dec
push
cmp
test
repnz
xor
pusha
das
push
aas
sub
aas
jne
pusha
cmps
(bad)
fmul
int
pusha
(bad)
loop
jg
retf
ret
mov
inc
retf
out
scas
std
cli
jmp
cmp
dec
outs
pop
pop
arpl
fmul
in
mov
sub
pop
xchg
lock
iret
gs
stos
jae
shl
fadd
inc
cmp
inc
jo
jmp
cld
fmul
sbb
jp
mov
dec
pop
les
loopne
mov
and
inc
lods
dec
iret
adc
nop
pop
mov
or
pop
jne
test
fmulp
(bad)
xchg
je
push
sti
fisttp
sbb
inc
adc
cmc
loope
setle
sbb
xchg
adc
mov
lea
(bad)
fistp
jg
mov
adc
xor
int3
inc
mov
lea
xor
jo
pop
aas
loop
xchg
imul
jg
fnsave
test
inc
mov
dec
and
call
cs
mov
jp
movs
nop
clc
test
push
xchg
or
xor
pusha
dec
scas
das
repnz
push
sar
xchg
pop
int
adc
or
repz
popf
mov
sub
shl
or
gs
xchg
inc
pop
arpl
popf
int3
sti
fcomip
icebp
rol
add
nop
dec
outs
and
and
inc
(bad)
pop
or
pop
lods
mov
xor
and
rol
mov
adc
adc
je
or
pop
add
push
xor
jo
rol
lods
cmc
xor
xor
sbb
xor
mov
inc
popf
mov
shr
pop
loopne
sbb
fisub
scas
xchg
and
(bad)
xchg
mov
pop
iret
mov
cmc
ret
add
lahf
xchg
loopne
mov
sti
fild
xchg
mov
add
jg
or
pop
inc
bound
test
mov
lea
mov
xor
lock
sub
bound
lahf
outs
cmp
das
ins
aaa
iret
mov
loopne
aad
or
mov
cmp
pop
pusha
xor
mov
mov
push
pop
xchg
sbb
inc
call
lea
std
movs
add
scas
in
and
scas
mov
push
test
push
push
int
adc
mov
fistp
add
aas
pop
xchg
cli
imul
add
fisubr
scas
xor
add
jb
test
das
retf
lods
ret
movs
ins
sbb
xchg
inc
push
jne
in
iret
xor
lods
(bad)
jb
aas
loop
xchg
imul
aam
(bad)
sbb
pop
int
pop
test
and
inc
add
nop
mov
(bad)
fnsave
lods
fnsave
lea
mov
in
xor
out
mov
push
test
xor
retf
pusha
jns
pushf
lea
xor
mov
jge
call
lock
retf
pusha
jp
pushf
lea
push
dec
in
ja
mov
sbb
das
and
jecxz
mov
xchg
out
fnsave
sbb
mov
or
and
lock
sub
bound
add
cmp
inc
iret
out
retf
icebp
test
or
pop
xor
shl
int
adc
mov
ins
mov
inc
leave
add
sub
push
push
ror
and
xchg
inc
pop
jne
in
iret
rol
adc
loope
adc
lahf
loopne
sbb
or
cmovge
inc
out
push
jmp
jo
add
xor
loopne
lock
sub
aas
mov
out
push
jmp
jo
add
xor
loopne
lock
sub
aas
mov
out
push
jmp
jo
add
xor
loopne
lock
sub
aas
mov
out
push
jmp
jo
add
xor
loopne
lock
sub
aas
mov
out
push
jmp
jo
add
xor
loopne
lock
sub
aas
mov
out
push
jmp
jo
add
xor
loopne
lock
sub
aas
mov
out
push
jmp
jo
add
xor
loopne
lock
sub
aas
mov
out
push
jmp
jo
add
xor
loopne
lock
sub
aas
mov
out
push
jmp
jo
add
xor
sub
in
jecxz
inc
adc
jbe
lock
ss
pop
push
mov
sbb
mov
sbb
call
and
mov
(bad)
mov
out
ret
xor
sbb
scas
add
inc
cmc
pusha
mov
add
add
ss
int3
jge
leave
push
cdq
es
push
loopne
inc
mov
adc
sar
jg
dec
lock
or
mov
or
xor
jo
nop
and
add
mov
shl
cmp
cmpxchg
jbe
outs
std
test
lea
mov
fld
adc
dec
jne
add
jae
sub
xchg
(bad)
(bad)
jne
pop
(bad)
fisubr
adc
(bad)
jb
sub
jbe
inc
dec
sbb
sub
stos
and
mov
mov
or
fld
ss
rcl
fild
sbb
aas
lock
test
nop
cmp
inc
out
add
pusha
pop
jo
add
xor
outs
sar
xchg
pop
test
nop
cmp
inc
out
push
jmp
jg
fild
inc
rcr
dec
lock
test
nop
jg
lss
inc
xchg
jmp
jo
add
xor
outs
sar
inc
jo
sbb
aas
mov
out
push
lahf
pusha
iret
call
mov
shr
loopne
call
aas
loopne
mov
sub
push
std
pusha
iret
loopne
add
xor
call
das
mov
pop
inc
out
push
xchg
jo
jmp
iret
lahf
shr
loopne
maxps
seto
popa
out
mov
mov
(bad)
push
cld
push
lea
clc
aas
mov
out
scas
jmp
jae
add
mov
xchg
loopne
sar
dec
icebp
pop
sub
cmp
adc
pusha
iret
(bad)
fild
lods
adc
ret
jge
dec
repnz
xchg
sbb
cmpxchg
inc
out
push
cld
fs
or
adc
loope
repz
test
xchg
aaa
test
iret
clc
jmp
push
verw
xor
outs
sar
neg
es
cmp
pop
pop
aas
fsubr
push
add
jb
add
push
mov
rcl
pop
xchg
cwde
pop
fmul
mov
inc
out
jo
pusha
iret
(bad)
fild
(bad)
clc
mov
loopne
sar
dec
minps
cmovg
inc
in
push
(bad)
iret
jo
and
mov
rcl
pop
adc
pop
fmul
mov
inc
iret
clc
jmp
push
verw
xor
outs
sar
lock
or
aas
mov
iret
clc
jmp
jo
add
xor
out
clc
push
mov
pop
test
nop
pop
scas
jmp
mov
mov
(bad)
push
maxps
or
rep
sar
scas
add
fdiv
addr16
pop
out
inc
lahf
xor
mov
lahf
iret
jno
add
cmp
loop
mov
mov
adc
pusha
iret
(bad)
(bad)
fsubr
xor
dec
cli
push
mov
cmpxchg
inc
jmp
(bad)
gs
or
dec
adc
shr
ror
pop
jg
xchg
shl
pop
cmp
push
psubb
xor
call
das
outs
aas
mov
jmp
fsub
iret
pushf
les
pop
call
dec
add
pop
cmpxchg
inc
jmp
cli
enter
add
xor
loopne
mov
aas
mov
call
js
and
mov
rcl
jg
das
nop
shl
push
(bad)
iret
jo
add
xor
ror
pop
jg
clc
aas
mov
out
scas
(bad)
iret
jo
and
mov
rcl
jg
das
nop
rol
push
std
inc
pshufw
(bad)
clc
mov
loopne
sar
dec
icebp
jg
das
nop
shl
push
add
jo
jmp
xor
loopne
lock
mov
das
cmp
inc
adc
inc
pshufw
(bad)
clc
mov
shr
loope
repz
pop
seto
inc
pshufw
scas
xor
(bad)
iret
lahf
shr
loopne
maxps
cmpxchg
inc
out
push
jmp
jo
fsubr
xor
loope
icebp
pop
sub
mov
dec
call
outs
sar
mov
mov
xchg
sub
fisttp
pop
(bad)
imul
fsubr
nop
shl
push
stc
gs
jne
fsubr
xor
out
cli
push
mov
mov
mov
into
jno
pop
scas
xor
(bad)
iret
lahf
shr
in
ror
sub
aas
mov
jmp
push
verw
cmp
loop
hlt
pop
xchg
xchg
ss
or
inc
std
jb
jb
push
lods
or
fidiv
pop
loop
aam
cmps
or
cmp
je
push
out
mov
mov
rcl
pop
xchg
xchg
mov
jecxz
out
ins
fsub
mov
sub
fidiv
pop
cld
ins
aam
cmps
or
pop
shl
cld
ins
jmp
or
neg
dec
mov
push
repz
push
iret
clc
jmp
jo
and
mov
ret
imul
fmul
mov
pop
cmpxchg
fsubr
push
add
jb
add
push
mov
aas
outs
sar
dec
repnz
xchg
clc
aas
mov
in
push
std
enterw
scas
out
mov
aas
imul
push
lea
mov
mov
in
push
sti
gs
jo
or
cmp
fmul
mov
movs
or
hlt
ins
ret
adc
es
jns
dec
loopne
maxps
cmpxchg
fsubr
push
add
jo
call
inc
add
lock
loopne
maxps
cmpxchg
mov
xor
call
lahf
fmul
das
pop
fmul
mov
mov
dec
push
call
scas
out
inc
add
lock
loopne
movq
das
nop
shl
push
clc
push
lods
fdivr
rcl
jg
das
nop
rol
clc
jmp
(bad)
(bad)
fsubr
xor
pop
dec
mulps
lock
aas
fsubr
push
add
scas
out
lahf
fmul
sar
(bad)
pop
jg
clc
aas
mov
out
scas
add
jno
fsubr
xor
fmul
mov
pop
das
cmp
inc
adc
fmul
jo
add
cmp
loopne
push
jg
outs
shl
push
(bad)
iret
jo
add
clc
lahf
ror
loopne
lock
sub
mov
fsubr
push
add
jo
dec
adc
loope
icebp
jg
das
nop
shl
scas
inc
cwde
(bad)
scas
adc
enter
loopne
push
sub
scas
rep
xor
jg
xor
loopne
lock
sub
cmp
pop
mov
fsubr
push
add
jb
add
adc
ret
pop
fmul
mov
movs
or
call
scas
out
mov
rcl
pop
jg
xchg
mov
out
push
add
mov
mov
aas
outs
sar
dec
cmc
pop
test
pop
fmul
mov
inc
out
push
cld
inc
pshufw
scas
adc
rcl
jg
das
nop
rol
clc
jmp
push
verw
xor
outs
sar
mov
xchg
sub
dec
mov
in
push
std
gs
ja
or
adc
fmul
mov
mov
sbb
pusha
iret
push
verw
xor
jmp
and
or
push
call
push
adc
(bad)
push
lock
pop
cmpxchg
addr16
jns
or
and
loopne
maxps
lock
inc
in
push
cli
gs
movs
sbb
and
sar
in
mov
dec
mov
in
push
std
gs
pop
movs
sbb
sar
imul
ror
sub
pop
fmul
mov
inc
out
push
cld
(bad)
retf
or
ds
sar
ins
hlt
pop
cmc
jg
das
nop
rol
push
std
arpl
jb
push
test
mov
scas
cmp
rcl
pop
xchg
cwde
ss
add
sbb
jg
jmp
pshufw
(bad)
clc
mov
ret
jp
dec
ror
sub
aas
mov
jmp
push
verw
xor
loopne
maxps
seto
popa
into
jno
fsubr
xor
loopne
maxps
lock
aas
fsubr
push
add
jo
dec
adc
fmul
mov
pop
das
cmp
inc
adc
inc
pshufw
scas
adc
scas
cmp
fmul
mov
mov
out
push
add
push
xor
(bad)
iret
lahf
ror
loopne
lock
mov
cmpxchg
fsubr
push
add
jb
add
xor
loopne
movq
das
nop
shl
push
(bad)
iret
jo
add
xor
loopne
mov
pop
fmul
mov
pusha
dec
push
call
scas
out
mov
aas
nop
lock
loopne
push
mov
cmpxchg
inc
jmp
stc
(bad)
(bad)
jns
add
xor
loopne
maxps
seto
popa
out
mov
lahf
fmul
sar
neg
psubb
mov
dec
push
call
push
xor
(bad)
iret
lahf
shr
in
ror
sub
aas
mov
out
push
mul
jno
add
adc
fmul
mov
mov
dec
push
call
stos
xor
(bad)
iret
lahf
shr
ror
pop
jg
xchg
mov
iret
clc
jmp
push
verw
xor
dec
sar
outs
mov
dec
mov
dec
push
call
lods
adc
cwde
loopne
sar
outs
mov
dec
mov
dec
push
call
push
adc
loopne
sar
dec
icebp
pop
sub
cmps
push
mov
dec
jecxz
inc
jo
dec
xor
ins
das
pop
fmul
mov
pop
das
cmp
inc
adc
(bad)
int
fld
lods
sbb
rcl
jg
das
nop
rol
clc
jmp
push
verw
xor
dec
clc
jg
mov
pop
sub
loopne
dec
push
call
push
xor
(bad)
iret
mov
ror
pop
jg
clc
aas
mov
out
scas
inc
jo
dec
adc
fmul
mov
pop
das
cmp
inc
adc
fmul
jo
call
dec
and
rol
test
clc
aas
mov
out
scas
(bad)
iret
jo
add
xor
jecxz
repz
das
nop
shl
push
call
push
xor
(bad)
iret
mov
ror
pop
jg
clc
aas
mov
out
scas
jmp
mov
dec
and
sar
outs
mov
dec
mov
out
push
add
jo
jmp
iret
mov
ror
pop
jg
clc
aas
mov
out
scas
(bad)
iret
jo
jmp
ss
ror
sub
aas
or
(bad)
clc
iret
fcomp
add
mov
loopne
movs
pop
push
pcmpeqb
dec
iret
sub
xchg
adc
mov
or
fcomp
sbb
dec
pusha
(bad)
outs
cmp
cmp
cmp
sbb
mov
scas
inc
sbb
test
sub
pushf
add
mov
push
sub
cli
jns
pop
pop
fucom
gs
(bad)
in
adc
sar
cmp
dec
lock
rcr
push
outs
sbb
push
stos
dec
cmp
int
(bad)
jbe
ficomp
pusha
adc
pop
aam
iret
push
pop
sub
and
imul
jl
mov
movs
or
push
in
aad
lds
cmp
adc
jns
fbstp
fsubr
test
hlt
inc
fcom
pop
jle
and
test
popa
call
inc
or
cs
jno
arpl
push
and
pop
mov
jne
dec
enter
outs
mov
loopne
mov
push
(bad)
pop
imul
popf
adc
push
sbb
add
fmul
inc
iret
(bad)
aam
sbb
and
ins
jecxz
stc
dec
xor
and
int
neg
stos
sub
sbb
dec
test
inc
mov
and
call
arpl
push
loope
jmp
and
cmc
sbb
ins
lock
add
mov
pop
sti
jo
fisubr
hlt
or
cmp
mov
imul
aas
mov
mov
je
(bad)
int3
inc
std
inc
sar
mov
xchg
setae
(bad)
icebp
push
ret
data16
add
push
xchg
adc
push
call
(bad)
paddw
sete
loope
repz
les
pop
push
ret
or
and
adc
push
in
in
movs
adc
adc
push
dec
xchg
jo
out
and
or
and
push
sbb
sbb
jle
pop
movs
pop
scas
dec
shr
pop
add
movsx
mov
cwde
aas
fist
bound
mov
xchg
push
lahf
pop
mov
jge
jle
scas
inc
fwait
add
push
(bad)
popa
iret
or
mov
and
pop
leave
imul
add
adc
sti
inc
into
leave
sbb
push
out
outs
test
jnp
ins
xor
dec
mov
into
arpl
inc
mov
mov
pop
rcr
jl
mov
and
(bad)
int3
inc
std
inc
fiadd
test
ror
les
add
outs
mov
out
(bad)
push
jo
nop
popa
mov
mov
outs
shl
sub
and
pushf
xor
arpl
(bad)
push
jo
or
mov
pop
lds
std
jg
outs
fnstcw
cmp
cmp
push
mov
mov
jo
pop
lds
icebp
dec
shl
das
scas
adc
adc
add
iret
inc
fild
adc
push
dec
lock
jg
ds
inc
out
mov
fist
jo
sub
loopne
repnz
mov
mov
inc
out
fimul
pop
sti
lods
sub
or
outs
mov
ror
and
add
lods
inc
out
and
shl
mov
xchg
adc
pop
shr
dec
icebp
push
or
adc
inc
out
inc
out
out
(bad)
mov
mov
mov
(bad)
sar
popa
fsubr
adc
inc
mov
(bad)
retf
jo
inc
lahf
mov
mov
cmp
outs
rcr
ja
inc
jle
and
cmp
push
mov
jno
dec
out
pop
nop
jg
(bad)
xor
jo
push
lds
fistp
sub
add
push
clc
fstp
xchg
cmp
push
and
sub
add
push
test
enter
pop
sub
aas
mov
out
push
jmp
jo
add
xor
loopne
lock
sub
aas
mov
out
push
jmp
jo
add
xor
inc
int3
mov
loope
lds
mov
cmp
fadd
ins
in
gs
ins
ficomp
es
ror
pop
adc
ja
das
mov
inc
int3
outs
loopne
pusha
out
cmps
and
repz
pusha
(bad)
mov
xor
cwde
fwait
push
out
retf
cmp
pop
xor
or
pusha
inc
fld
xchg
pop
mov
test
or
inc
std
dec
lds
outs
es
xor
add
fs
rol
mov
cmp
pusha
dec
out
imul
call
adc
inc
jmp
and
cmp
dec
nop
pusha
ret
imul
xor
xor
into
jno
dec
jmp
sub
xor
pop
nop
pop
shr
jbe
lahf
and
push
xchg
lods
arpl
jne
inc
std
push
hlt
loopne
lock
loopne
ficomp
in
int3
sbb
add
and
jb
jl
push
scas
push
lock
push
xchg
sub
aad
xchg
jo
iret
push
adc
or
data16
adc
rol
pop
nop
and
out
push
outs
cwde
shl
push
movs
adc
iret
jne
gs
outs
push
adc
dec
repz
mov
add
sbb
aam
test
sbb
mov
pop
retf
lock
mov
mov
loopne
jo
fcom
sub
or
dec
repz
sbb
std
or
jno
outs
dec
adc
jl
jbe
aad
call
jno
inc
mov
lock
cmp
cmc
push
shl
sub
push
xor
lahf
push
stos
push
cli
test
es
xor
ins
ret
xchg
(bad)
(bad)
add
push
jmp
mov
xchg
daa
or
pop
rcr
xchg
mov
inc
ja
retf
xor
mov
test
test
xchg
cmp
jl
jle
cmp
push
out
adc
add
adc
xchg
outs
xchg
cmp
cld
push
in
cmp
enter
inc
retf
je
call
pop
(bad)
fcom
out
dec
bnd
pusha
sahf
jp
cmp
pusha
fwait
and
ficomp
mov
movs
jg
cs
xor
inc
stc
inc
les
jle
xchg
fwait
or
add
dec
sti
inc
(bad)
xchg
add
xor
push
pop
sub
push
mov
and
push
lock
movs
jno
pop
loop
les
and
int3
lea
add
push
mov
sbb
xchg
iret
cld
dec
fadd
add
call
hlt
mov
fsub
dec
add
je
mov
daa
xor
dec
arpl
inc
mov
mov
adc
sub
fsubr
mov
or
and
pusha
aaa
cwde
mov
outs
mov
mov
xchg
fcomp
adc
pushf
mov
cmp
hlt
mov
fwait
and
and
sub
push
(bad)
or
jno
je
push
mul
cs
ds
ret
dec
shl
xor
add
dec
out
inc
out
or
push
cmp
nop
jl
mov
add
retf
inc
fiadd
push
cli
rcr
or
sub
and
mov
jne
inc
scas
inc
mov
(bad)
out
(bad)
push
(bad)
push
jns
cwde
jo
or
rcl
mov
mov
xor
imul
sbb
ds
outs
fsub
push
not
movs
dec
cmc
sub
mov
pop
sub
pusha
cwde
pusha
fild
push
not
imul
test
mov
pop
jo
pop
call
sub
mov
test
cmps
movs
adc
retf
and
sbb
je
mov
push
inc
cmp
fdiv
sub
rcl
adc
(bad)
retf
shl
test
mov
into
addr16
jp
inc
jecxz
inc
stos
add
xchg
pop
cld
dec
jmp
loope
aam
or
cmp
push
push
adc
jne
and
inc
in
xchg
sbb
sub
cs
or
mov
popf
sbb
mov
ret
push
loope
aam
or
xor
arpl
pop
ror
shl
mov
mov
pushf
add
pop
std
dec
cli
mov
or
pop
aam
lds
mov
mov
outs
ret
jg
outs
int
sbb
lods
xor
inc
jmp
data16
popf
cmp
jne
xor
mov
lds
sub
inc
call
inc
fild
pushf
inc
mov
pop
rcl
mov
mov
ins
jmp
shufps
and
inc
mov
jle
adc
adc
rol
pop
cmp
aam
add
xor
pushf
je
jns
inc
scas
adc
rcr
pop
sar
sub
cmpxchg
jnp
aas
xor
jo
dec
stos
or
dec
loopne
jmp
cmp
jmp
jl
addr16
mov
inc
fidiv
add
shl
xor
pop
cmc
dec
lds
jno
popf
jo
pusha
scas
add
inc
loope
repz
mov
xchg
cmp
(bad)
push
leave
pinsrw
adc
add
(bad)
arpl
arpl
movs
add
xor
pmulhuw
int
lds
mov
adc
and
inc
in
rol
or
repz
dec
or
pop
nop
xor
sub
scas
outs
mov
jg
das
dec
fild
add
push
cwde
pop
xchg
and
inc
shl
arpl
lock
or
jl
maskmovq
mul
jle
pushf
and
pop
iret
push
lods
push
rol
fcomp
scas
sbb
pop
ror
sub
inc
jecxz
les
outs
sub
cmp
cwde
outs
arpl
jl
pop
repnz
aas
mov
xor
dec
call
daa
add
xor
mov
xchg
or
and
mov
xor
pusha
mov
sub
(bad)
dec
ror
lahf
or
cmp
pop
stc
dec
(bad)
jl
jp
cmp
jb
push
loopne
jecxz
clc
lods
add
es
jo
inc
int3
push
aad
adc
add
inc
lods
pop
xchg
(bad)
call
push
xchg
add
sbb
inc
(bad)
mov
aam
test
sbb
dec
cmps
pushf
mov
xor
cld
dec
cwde
scas
mov
mov
clc
jmp
repz
sub
mov
aam
call
jg
and
jnp
jg
lahf
sub
push
xlat
cld
dec
les
and
push
clc
dec
or
add
in
pop
push
cmp
adc
(bad)
test
les
and
test
aaa
lea
mov
enter
jbe
loopne
sbb
dec
cmp
idiv
dec
inc
popf
adc
outs
scas
jg
and
xor
lods
outs
or
dec
icebp
pop
sub
aas
mov
out
push
jmp
jo
add
xor
loopne
lock
sub
aas
mov
out
push
jmp
jo
add
xor
in
stc
inc
sub
movs
mov
mov
je
inc
jo
pop
scas
adc
and
sar
dec
hlt
inc
sub
aas
movs
push
mov
pop
out
push
out
retf
imul
cmp
leave
xchg
add
adc
fs
je
inc
addr16
ja
xor
in
sbb
fs
xor
push
dec
(bad)
je
dec
cmc
pop
mov
(bad)
jmp
or
sub
add
add
pop
fimul
retf
push
mov
and
psraw
lea
aas
nop
inc
jmp
mov
mov
pop
movs
sbb
jno
adc
cmp
pop
mov
xchg
jb
push
into
jg
sub
or
sti
imul
test
popa
xchg
(bad)
mov
outs
xchg
arpl
jbe
fdiv
test
or
pop
jae
add
imul
aas
mul
(bad)
inc
mov
mov
add
mov
mov
daa
pop
xor
into
mov
cmp
push
out
inc
fbstp
pusha
aas
mov
mov
sub
addr16
pop
loope
test
jo
repnz
mov
jne
pop
shl
and
pop
push
inc
(bad)
test
and
cdq
(bad)
mov
das
lock
inc
in
cmps
add
push
out
inc
lds
sahf
enter
mov
clc
or
imul
clc
adc
fild
inc
pop
test
pop
pusha
scas
outs
shl
pop
cmp
or
jb
notrack
mov
fistp
adc
dec
xchg
mov
mov
fwait
xor
push
push
bound
shr
test
pushf
sub
or
xor
jo
add
sbb
(bad)
adc
mov
cmp
push
mov
out
jae
pusha
iret
sub
mov
pop
pusha
mov
and
jnp
cmovb
popf
xor
and
adc
fucomip
pop
jmp
outs
push
pop
sbb
cmc
push
aam
fbstp
inc
out
adc
or
pop
mov
fbld
mov
test
arpl
icebp
pop
int
mov
sahf
push
iret
cmp
mov
mov
lock
push
cdq
and
mov
mov
lods
add
push
adc
shr
mov
mov
and
aaa
(bad)
push
cld
je
jo
xor
mov
scas
sbb
xchg
ss
pop
in
shl
(bad)
jl
jb
adc
jne
push
mov
out
push
mov
jge
pop
in
leave
push
jns
lds
mov
shl
push
loopne
in
mov
mov
xor
dec
loop
iret
xor
jae
rcr
xchg
or
fimul
adc
xchg
add
or
jg
ins
and
imul
inc
mov
repnz
aam
xchg
popa
repnz
push
int3
jl
jbe
pop
out
inc
mov
stos
outs
lock
movs
adc
ror
icebp
out
jo
fidivr
pop
jo
push
sar
int
pop
mov
loopne
push
shl
pop
xchg
and
and
ror
jg
add
pop
loopne
stos
mov
jo
push
dec
in
popf
mov
pop
call
push
rol
pop
loopne
mov
inc
test
into
imul
bound
inc
fnsave
lfs
cld
adc
scas
xor
mov
inc
into
outs
fdiv
aas
sub
mov
shr
adc
jbe
mov
xor
or
ret
pop
rcl
rcl
sahf
pop
mov
fistp
xor
outs
enter
in
aad
mov
pop
lods
mov
std
ficom
in
sar
hlt
inc
call
shr
iret
int
sub
ror
loopne
jne
ficomp
aad
(bad)
mov
add
scas
cmp
dec
out
js
push
das
mov
jg
outs
clc
pop
call
scas
cmp
dec
out
js
push
das
mov
jg
outs
clc
pop
call
scas
cmp
dec
out
js
push
das
mov
jg
outs
clc
pop
call
scas
cmp
dec
out
js
push
das
mov
jg
outs
clc
pop
call
scas
cmp
dec
out
js
push
das
mov
jg
outs
clc
pop
call
scas
cmp
dec
out
js
push
das
mov
jg
outs
clc
pop
call
scas
cmp
dec
out
js
push
das
mov
jg
outs
clc
pop
call
scas
cmp
dec
out
js
push
das
mov
jg
outs
clc
pop
call
scas
cmp
dec
out
js
push
das
mov
jg
outs
clc
pop
call
scas
cmp
dec
out
js
push
das
mov
jg
outs
clc
pop
call
scas
cmp
dec
out
js
push
das
mov
jg
outs
clc
pop
call
scas
cmp
dec
out
js
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
movs
cmp
outs
inc
jb
add
xchg
fdivr
dec
jecxz
std
add
cld
cwde
or
dec
cli
adc
inc
in
or
leave
cmp
ret
leave
mov
push
jle
nop
dec
cmp
inc
addr16
iret
cmps
repz
inc
les
push
(bad)
mov
mov
xor
cmp
jae
repz
(bad)
pop
std
add
cwde
das
cld
pushf
pushf
cmc
fisttp
retf
mov
jge
sbb
push
add
mov
xor
adc
addr16
xchg
outs
cmp
retf
jb
inc
stc
es
xor
inc
sbb
mov
hlt
fadd
push
push
adc
inc
mov
xchg
mov
xchg
and
add
cmc
inc
mov
xor
stos
adc
shl
pop
sbb
pop
jg
sar
cdq
daa
hlt
fadd
dec
mov
jbe
stc
jle
in
cwde
pmuludq
dec
mov
inc
inc
mov
adc
xchg
rcr
sub
mov
mov
mov
add
cmp
(bad)
std
sbb
sahf
test
(bad)
sbb
inc
mov
dec
movntps
shl
jnp
bound
sbb
int3
inc
pop
push
xor
test
xor
and
pop
jmp
pushw
in
scas
(bad)
neg
or
xchg
in
es
fidivr
nop
xchg
jae
ja
xchg
in
add
mov
movs
xchg
add
mov
add
adc
push
add
jnp
pop
jbe
ss
adc
bound
pop
mul
cli
mov
adc
dec
sahf
int
or
(bad)
in
inc
int3
sbb
xor
repnz
movs
(bad)
neg
daa
arpl
xor
push
adc
aas
dec
sbb
pop
jae
fwait
push
neg
jo
xchg
mov
jmp
and
mov
add
arpl
pop
dec
or
jp
repz
shr
ret
add
push
or
cwde
idiv
or
mov
rcl
xor
mov
inc
lsl
mov
cmp
ret
mov
lock
nop
mov
adc
cwde
mov
mov
cs
cmp
int3
pop
xchg
cwde
xchg
(bad)
retf
aas
cmp
iret
es
adc
inc
and
mov
lods
leave
stos
add
ret
mov
push
(bad)
xadd
xor
inc
pop
ret
lods
cmps
push
(bad)
adc
xchg
xor
and
ss
sahf
ror
cmp
push
retf
xchg
(bad)
lock
aas
mov
push
inc
addr16
ret
test
inc
int3
stos
xchg
sub
push
mov
mov
mov
and
inc
or
jns
repz
or
lds
push
loopne
jnp
xchg
push
test
jbe
jmp
in
jnp
test
mov
cmp
ss
and
fsub
inc
lea
out
dec
adc
out
cli
ja
and
cmp
pop
xor
shl
out
dec
jmp
fxch
cld
into
xchg
test
xchg
cmp
jae
rol
add
(bad)
dec
mul
mov
cwde
xlat
adc
sbb
mov
inc
dec
rdpmc
je
xchg
shl
(bad)
inc
sahf
sbb
sub
sbb
mov
cs
and
les
ror
adc
enter
xor
inc
out
cmp
cwde
shl
adc
enter
mov
leave
outs
or
push
std
sbb
xchg
xchg
dec
inc
ror
mov
ins
dec
and
sbb
sar
push
add
(bad)
mov
je
mov
into
pop
arpl
and
(bad)
sub
aad
aas
out
push
je
loopne
outs
cld
aad
mov
rcl
pop
and
rol
or
or
or
jbe
mov
xchg
jno
sbb
dec
loop
aaa
jl
sbb
or
mov
inc
test
stc
xchg
cld
(bad)
(bad)
das
fild
sub
ins
cli
xor
dec
or
and
js
mov
jbe
je
dec
adc
adc
mov
jbe
daa
pop
jno
push
add
dec
jb
daa
xchg
in
and
xor
xor
inc
pop
add
dec
repz
xor
adc
add
xchg
xchg
and
inc
mov
test
dec
sbb
fidiv
pop
dec
mov
inc
int3
sbb
aaa
xchg
mov
cwde
lock
adc
leave
(bad)
cld
mov
lods
(bad)
mov
add
iret
add
ds
inc
adc
add
int3
ret
bound
pop
dec
loopne
pop
mov
push
xchg
pop
xchg
xor
mov
movntps
sbb
dec
test
cmp
push
adc
shl
add
repnz
xor
jo
into
outs
or
pop
jp
mov
(bad)
in
cmp
mov
cmps
stc
ds
scas
adc
js
xorps
cs
and
xchg
loop
dec
bound
dec
adc
xchg
adc
inc
jb
mov
cmp
call
outs
add
cmc
(bad)
adc
and
mov
or
sar
mov
mov
or
mov
cmc
std
pusha
stc
sbb
push
addr16
into
cmps
ror
jbe
pop
pop
dec
push
mov
fadd
rol
xchg
int
mov
iret
repz
cmp
add
mov
or
mov
repz
outs
stc
or
pop
es
das
add
add
loope
xchg
jge
mov
cwde
pop
inc
xchg
cmps
mov
ss
addr16
test
adc
inc
dec
stc
(bad)
cld
inc
mov
lods
scas
lahf
cmp
out
cmp
xlat
mov
pop
test
je
mov
(bad)
sbb
jl
sbb
loop
adc
xchg
lahf
inc
test
mov
jp
jae
repz
xchg
mov
les
imul
std
dec
add
inc
sahf
mov
clc
addr16
jecxz
in
xor
stos
jge
xchg
push
popa
pop
xor
nop
retf
cdq
mov
add
pusha
adc
mov
jle
int3
out
xor
ds
retf
in
pushf
push
jae
sbb
sbb
into
aaa
xchg
cmc
cmc
push
repz
inc
cmp
std
int3
nop
lea
in
mov
arpl
mov
cld
sahf
dec
cmp
adc
xor
xchg
jae
je
repz
aad
dec
cli
xor
fs
xor
scas
pusha
and
mov
cmp
addr16
(bad)
ins
int
nop
nop
nop
nop
nop
nop
nop
mov
fwait
aad
in
cmc
push
in
test
mov
jmp
iret
icebp
mov
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
sti
cmc
retf
test
push
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
je
and
mov
inc
fiadd
jnp
sub
add
adc
mov
push
mov
or
inc
std
adc
jmp
inc
stos
add
in
sub
push
and
jae
and
xlat
movs
retf
loope
arpl
pushf
mov
adc
adc
lods
ret
aaa
(bad)
xchg
fstp
and
data16
imul
cmp
mov
adc
xor
push
imul
pop
arpl
xchg
cmps
les
jle
mov
cmp
dec
fst
sub
inc
xchg
fild
call
cmp
jnp
dec
adc
push
or
or
popa
out
stos
ror
sbb
pop
mov
cs
fwait
sub
fistp
je
std
sbb
mov
push
dec
jmp
fstp
leave
dec
sbb
std
mov
fist
out
fisub
cs
imul
aad
in
loopne
inc
mov
(bad)
jbe
pop
add
sbb
lea
jle
dec
jmp
cmp
dec
seta
sbb
xor
sbb
je
sbb
fcom
and
xor
stos
pusha
inc
cmp
das
retf
push
gs
addr16
add
stos
push
dec
adc
xor
cs
rol
mov
loopne
or
add
cmovne
in
fs
pop
mov
aam
sub
js
dec
adc
stos
in
clc
cmp
push
jmp
repz
retf
adc
pop
push
pushf
stos
scas
daa
jnp
add
adc
sbb
or
mov
add
sub
call
add
adc
in
movs
dec
test
jmp
cmp
jnp
xor
lods
div
fst
push
daa
test
pusha
movs
sti
jecxz
inc
inc
push
mov
inc
shl
sub
dec
cmp
or
js
mov
jo
dec
test
test
lock
push
rcl
retf
test
(bad)
mov
inc
lock
xchg
cmps
sahf
mov
lock
push
xor
movs
add
or
xchg
push
jmp
jmp
fidiv
mov
retf
aad
pusha
sbb
fistp
mov
inc
xchg
push
aad
mov
mov
pop
sahf
ins
pop
sub
(bad)
sub
mov
js
setle
or
retf
out
sub
mov
repz
cs
mov
aad
push
fld
adc
dec
gs
sub
adc
xchg
mov
loopne
adc
sbb
gs
lds
ds
iret
and
retf
jge
movs
mov
mov
(bad)
mov
jmp
test
sub
adc
test
xchg
lahf
es
stos
lea
repz
int
cli
xchg
jmp
mov
fs
sub
push
daa
test
data16
sti
cmp
inc
outs
add
mov
push
push
addr16
jg
fld
inc
cmp
pop
mov
cmp
movs
aam
in
pop
je
mov
mov
mov
jae
hlt
test
inc
sub
sbb
cmp
adc
stos
in
mov
push
fs
push
in
sub
(bad)
test
jmp
retf
pop
or
mov
jns
retf
stos
inc
or
mov
sbb
add
hlt
mov
push
xchg
test
mov
jns
aas
add
sub
sahf
dec
retf
pop
push
push
fld
dec
sbb
pop
retf
fwait
int3
mov
cmps
(bad)
xor
cmp
fwait
shl
hlt
push
mov
outs
gs
aaa
mov
movs
adc
aam
in
push
stos
inc
mov
jmp
(bad)
add
cs
mov
cmp
les
xor
fs
or
mov
dec
mov
arpl
retf
push
xchg
pop
jmp
sub
cli
or
inc
push
adc
mov
pop
std
imul
pop
inc
mov
inc
retf
cmp
adc
or
or
sbb
and
or
retf
cmp
js
shl
out
addr16
pop
in
call
push
(bad)
adc
and
call
mov
xchg
out
int3
sbb
or
mov
es
sbb
enter
clc
lock
mov
cmp
dec
vunpckhps
vcvtsi2ss
dec
js
ins
(bad)
mov
pop
stos
jmp
pop
(bad)
shl
inc
mov
test
adc
add
xor
push
mov
xchg
dec
jmp
bswap
xchg
shl
adc
push
stos
retf
mov
push
movs
icebp
sbb
mov
lds
push
inc
test
mov
or
out
ds
mov
js
out
fdivr
rcr
add
and
or
test
push
sub
cmp
in
mov
ret
jecxz
arpl
adc
and
or
or
movs
adc
jbe
dec
mov
les
test
inc
je
push
adc
and
xchg
ds
mov
xchg
frstor
icebp
pop
ins
cmp
xor
push
sbb
xchg
or
dec
jae
lods
jmp
test
jecxz
arpl
push
push
cld
into
xor
retf
xchg
jmp
hlt
mov
and
imul
ds
and
je
ins
out
cmc
mov
sbb
jmp
mov
mov
sbb
or
lahf
sub
mov
aaa
idiv
push
outs
or
jns
dec
xchg
sub
jo
mov
cwde
mov
test
lock
out
jno
cmp
stos
iret
cmps
cmp
and
push
adc
idiv
dec
inc
and
clc
ins
mov
jge
call
dec
add
dec
mov
jmp
jae
shl
or
dec
mov
cmps
xlat
daa
pop
mov
mov
out
test
mov
out
sti
(bad)
fisttp
xacquire
hlt
inc
in
sub
popf
dec
into
scas
adc
dec
dec
fwait
test
or
fcomp
jo
or
stos
repz
les
or
mov
iret
and
jl
xchg
and
cmps
push
into
xlat
lods
out
in
jne
push
pop
gs
inc
xor
fwait
sub
inc
jge
jns
push
movs
sti
mov
cmc
in
jmp
jg
and
jle
cmp
mov
inc
or
mov
std
sbb
call
imul
xchg
imul
retf
mov
sub
clc
mov
bound
mov
test
push
inc
int
cmps
mov
mov
test
add
sub
inc
pop
leave
(bad)
mov
push
stos
mov
and
sti
stc
cmps
mov
int3
div
outs
lea
push
add
test
inc
dec
shr
xor
test
pop
xchg
out
ret
aaa
jnp
pop
and
dec
cmp
fldcw
outs
fnstsw
jmp
sub
or
test
iret
cli
jecxz
lods
and
out
rol
or
dec
jo
or
(bad)
push
cmp
rol
dec
mov
jmp
push
aad
outs
lds
mov
push
(bad)
or
mov
or
mov
je
xlat
mov
jecxz
inc
test
(bad)
loopne
in
test
(bad)
xor
sub
pop
mov
enter
push
dec
push
(bad)
es
cli
lahf
cmp
fld
ror
shr
ss
fwait
test
xchg
pop
mov
mov
sar
cwde
jle
test
into
xchg
xor
add
cmovge
mov
into
jne
jmp
pop
adc
xchg
rcl
iret
mov
add
adc
jno
add
popa
es
mov
ret
ins
sahf
lods
jmp
into
outs
(bad)
adc
mov
dec
adc
jae
inc
sbb
ins
inc
jbe
lea
jne
inc
xchg
stos
test
xor
mov
sub
lds
aaa
(bad)
shr
movs
repz
sbb
cs
ds
push
shl
add
fisubr
push
fimul
nop
or
mov
jge
rcr
and
(bad)
jns
xchg
jecxz
repz
dec
inc
push
pop
aam
imul
push
addr16
cs
int3
aad
shl
std
ret
not
rcr
cmp
push
sbb
mov
or
outs
xor
aad
push
test
enter
repz
inc
xchg
and
xchg
sub
icebp
xchg
ret
aaa
popf
in
mov
repnz
das
sub
ds
add
rol
lock
add
fs
jl
fidivr
(bad)
dec
pusha
ss
inc
out
(bad)
gs
int3
jecxz
or
jle
test
in
arpl
adc
mov
push
fstp
xor
adc
push
stc
movs
cs
sbb
xor
icebp
mov
jmp
dec
stc
cmp
sbb
(bad)
ret
in
aaa
test
movs
arpl
push
push
data16
xor
push
sub
pop
pop
into
ins
xor
ret
pop
mov
imul
add
fwait
cwde
and
mov
and
pop
xchg
addr16
inc
into
sbb
dec
or
jnp
jl
jo
imul
ret
adc
jmp
or
cmp
rcl
mov
lds
mov
mov
cmp
jle
out
push
cmps
in
jle
dec
or
or
mov
cmp
cmc
or
sub
stc
xor
xchg
sub
xor
inc
shr
cmp
sbb
push
mov
mov
sbb
mov
pop
pusha
add
aad
dec
add
scas
in
mov
push
fadd
das
fs
pop
std
sbb
pop
out
mov
dec
pop
push
loopne
ja
inc
call
mov
xchg
jmp
sti
pop
outs
xchg
sbb
cmp
sbb
pop
imul
mov
dec
into
xchg
movs
and
data16
add
ds
jl
add
and
pop
pop
push
call
mov
repz
add
sbb
mov
scas
cmp
mov
jge
call
add
fwait
sbb
mov
and
add
outs
fsubr
test
sbb
cmps
call
fild
lea
push
jmp
jle
jp
mov
aad
mov
sbb
(bad)
xor
js
data16
add
imul
fadd
fwait
sub
and
jmp
push
or
sub
mov
add
jnp
mov
inc
aad
in
jge
ret
push
retf
stos
shl
mov
dec
xor
xor
jnp
mov
pop
stos
push
shl
jmp
(bad)
in
sub
pop
adc
mov
sbb
out
in
ds
xlat
pusha
cs
neg
push
stos
jmp
inc
sbb
cmp
and
mov
ret
sbb
out
lods
(bad)
mov
inc
nop
and
inc
dec
dec
inc
jo
jmp
arpl
xchg
ror
mov
retf
lods
jae
into
sbb
loopne
dec
push
sbb
jae
data16
stos
in
imul
or
mov
mov
mov
sub
cmp
xchg
mov
fcomp
rcl
jmp
adc
retf
push
adc
in
mov
test
jmp
cmp
ret
sub
xor
jae
jne
cmp
adc
or
push
add
or
xchg
mov
leave
hlt
xchg
dec
inc
xor
xor
imul
ret
sub
mov
push
cmp
cmp
ffree
mov
inc
add
xor
fs
push
inc
rep
aam
cmp
adc
jo
cwde
ficom
aaa
aad
sbb
or
add
mov
(bad)
jmp
out
mov
mov
mov
movs
jb
or
push
dec
sar
and
cmp
dec
pop
loope
(bad)
sub
push
xchg
rcr
lock
jge
mov
jo
jne
add
es
fwait
cmp
xor
push
jmp
stc
pop
int
out
hlt
call
(bad)
dec
fbld
repz
inc
mov
retf
call
dec
popf
aam
jle
xlat
les
jo
add
aad
push
pop
(bad)
in
movs
dec
ds
inc
nop
adc
cmps
shl
push
pop
jmp
ja
fwait
test
outs
div
fwait
popa
(bad)
xchg
pop
stos
mov
pop
nop
sbb
xor
cmps
imul
mov
aad
cmps
jae
retf
enter
dec
jae
out
add
mov
push
xor
ds
arpl
push
sti
add
jge
pop
jp
jecxz
movups
and
adc
arpl
push
stos
div
inc
retf
lock
sbb
or
jne
pop
cmps
push
xchg
int
jo
cmp
ror
xor
sub
push
sub
xor
adc
mov
fwait
cmp
dec
fist
jmp
sti
repnz
rcr
gs
xor
test
into
dec
(bad)
inc
and
xchg
retf
and
ret
sub
jle
pop
mov
mov
and
test
std
sbb
xor
repz
mov
sbb
stos
cdq
mov
mov
retf
test
jge
pop
xor
lods
sti
jne
add
imul
leave
arpl
sub
and
xchg
sbb
es
clc
or
jbe
shl
rol
add
cmps
push
dec
jae
mov
mov
push
and
xchg
shr
and
mov
mov
push
in
les
push
mov
adc
(bad)
lock
aad
push
dec
shl
mov
add
pushw
fwait
aad
push
xor
cs
xchg
sbb
sar
sbb
test
add
call
push
fnstcw
lods
gs
push
mov
inc
and
inc
cmp
cmp
jg
loop
stos
aad
mov
daa
lds
adc
inc
mov
ret
xchg
fidiv
sub
mov
aaa
jns
retf
jmp
js
or
dec
xchg
sub
mov
inc
cmps
std
les
push
pop
dec
fwait
pop
int3
ins
adc
xchg
out
in
mov
jns
or
call
dec
and
clc
adc
test
imul
lods
xchg
pusha
sub
repz
fbld
(bad)
cli
outs
inc
movs
retf
xchg
jmp
inc
dec
(bad)
xor
pop
cwde
jle
jnp
cmp
inc
stos
sbb
inc
mov
ss
sti
mov
mov
loope
dec
xchg
enter
mov
les
jbe
push
or
xlat
call
(bad)
adc
stos
lds
mov
mov
imul
test
sbb
jbe
sbb
mov
pop
jns
hlt
ja
cli
sub
jno
or
inc
jmp
int3
push
int
mov
mov
pop
(bad)
aam
push
retf
add
mov
mov
mov
pop
xchg
repz
sbb
out
mov
dec
add
test
loope
add
test
enter
movs
stos
test
jne
push
sbb
je
mov
cmc
inc
jns
push
lahf
stc
fisttp
lods
in
aam
lahf
mov
addr16
cmp
sub
sbb
cmc
inc
jp
jge
pop
xor
hlt
push
jno
imul
test
push
and
mov
scas
pop
xchg
dec
jecxz
sub
(bad)
ins
movs
adc
dec
lds
push
sbb
shr
clc
mov
push
mov
pusha
(bad)
(bad)
rcl
gs
mov
std
sbb
push
test
mov
(bad)
popa
jne
adc
aam
push
retf
jne
and
lds
sbb
dec
dec
adc
mov
push
mov
rol
dec
mov
sbb
mov
add
add
retf
fcom
call
fiadd
ss
into
popf
fwait
pop
mov
jp
push
xor
fstp
pop
mov
sbb
mov
push
xchg
ss
test
fstp
pop
lods
lock
std
fisttp
mov
arpl
mov
movs
mov
add
fsubr
call
movs
fnsave
fisubr
into
vaddss
jmp
neg
in
gs
sbb
retf
push
push
in
mov
fs
push
and
cmc
or
inc
xchg
adc
movs
(bad)
lds
test
lds
sub
nop
es
adc
add
pop
jo
push
sub
imul
int
or
push
outs
ss
(bad)
dec
xor
inc
jp
(bad)
mov
cli
call
inc
shr
push
sbb
pop
mov
or
lea
dec
cli
movs
inc
out
jae
je
out
es
cmc
inc
jp
jge
pop
xor
hlt
adc
sub
mov
(bad)
dec
movs
call
add
shr
stos
and
xor
jp
xchg
data16
mov
mov
(bad)
pusha
mov
push
inc
imul
aad
test
or
jns
shl
sti
jae
push
cdq
fadd
or
das
sub
(bad)
cmc
mov
call
lock
mov
dec
inc
cmps
adc
into
cmp
cmp
pop
xchg
sub
pop
and
les
xchg
(bad)
repz
pop
in
je
test
pop
cld
jbe
adc
sub
out
mov
xor
test
dec
mov
mov
cmps
adc
sbb
ret
inc
push
fidivr
mov
xchg
cmp
and
out
xchg
cmps
ins
mov
xchg
sub
xor
inc
pop
inc
loopne
sub
jno
xlat
out
out
inc
js
jns
into
and
popa
pop
int
xchg
(bad)
call
in
cs
xor
stos
sbb
or
jmp
pop
mov
push
sbb
ret
ret
sbb
mov
(bad)
sub
sbb
cmc
pop
test
outs
cmps
shl
adc
sbb
inc
pop
icebp
sub
mov
dec
adc
loopne
or
iret
adc
xlat
ss
clc
inc
mov
stos
jle
or
and
xor
sti
push
pop
sti
frstor
daa
les
pusha
pop
push
xchg
test
and
push
rcr
pop
sub
pop
dec
pop
out
cdq
push
jmp
sub
jmp
(bad)
and
pop
idiv
push
jge
les
pusha
daa
push
fnstcw
jg
sub
mov
cdq
scas
movs
add
or
in
push
popa
imul
push
or
cmp
mov
inc
cdq
push
loopne
in
rcr
int3
mov
(bad)
stc
rol
fidivr
mov
mov
sub
mov
sbb
jno
cmp
mov
ins
jne
mov
pusha
retf
mov
xor
cmc
daa
(bad)
(bad)
jmp
repz
inc
pop
and
aaa
pop
inc
add
jp
shl
jmp
lock
jb
xor
jmp
or
test
aas
dec
push
sub
imul
sub
adc
stc
ret
lea
xchg
shl
push
data16
cli
(bad)
jne
pusha
sbb
(bad)
xlat
xor
lock
les
enter
mov
daa
call
call
int
and
rcr
shr
adc
cmps
fisubr
out
nop
data16
fbstp
push
frstor
rcl
in
movs
jo
movsx
add
lods
mov
jmp
out
out
pusha
movs
mov
xchg
call
xor
(bad)
adc
loop
ror
xchg
loopne
dec
mov
cs
xor
or
xchg
push
push
out
jmp
pop
into
adc
in
mov
rol
adc
jl
mov
push
mov
out
loopne
jmp
jmp
adc
(bad)
pushf
(bad)
sbb
sbb
lock
add
jbe
dec
dec
in
pop
dec
cmp
loopne
ja
or
fisubr
mov
rcr
mov
(bad)
div
push
mov
(bad)
out
int
(bad)
jecxz
mov
ins
fwait
int3
movs
lods
add
in
sbb
mov
out
jae
(bad)
mov
mov
xor
jmp
retf
(bad)
sub
mov
stos
int
ja
mov
aad
nop
fidivr
pop
out
jae
test
cmp
imul
xchg
push
mov
outs
and
pushf
add
loope
pop
lds
inc
sub
jne
mov
cwde
imul
fwait
push
adc
es
cmc
retf
pop
push
sub
sahf
(bad)
fisttp
inc
in
lahf
push
jne
dec
push
dec
mov
and
aad
cmp
(bad)
jmp
jo
ret
mov
jbe
inc
mov
dec
cwde
vpmullw
je
ret
fimul
mov
sub
enter
adc
fidiv
mov
jle
inc
and
stos
adc
or
pop
jae
cmc
stc
push
jmp
retf
popf
lods
int3
mov
movs
lock
fld
or
jnp
je
fs
out
sbb
sbb
test
repz
aad
mov
jge
popa
xchg
and
(bad)
stc
sbb
or
sti
or
outs
call
mov
or
stos
sub
rcl
repnz
cmp
dec
lea
mov
sbb
in
mov
jb
pop
pusha
test
add
xchg
out
jb
dec
ret
pop
out
test
imul
push
or
push
push
ins
mov
jo
or
pushf
dec
retf
rcr
into
dec
pop
sbb
push
cmps
iret
inc
scas
adc
(bad)
rcl
lea
cmp
mov
ja
xchg
imul
cmp
nop
sbb
dec
cmp
cs
fwait
xchg
inc
outs
xor
mov
mov
dec
push
sahf
push
push
mov
adc
push
sub
mov
sbb
ins
sti
pop
hlt
inc
inc
pushf
sub
xchg
push
cli
fistp
fnstenv
mov
xchg
loopne
into
push
bound
lods
or
xor
rol
mov
cmp
xor
test
jle
loopne
lock
push
loope
mov
push
cmp
xor
cmc
in
sbb
out
ds
inc
ins
inc
pop
sub
mov
and
ss
cld
xor
leave
mov
adc
cmp
inc
push
push
cmps
gs
enter
imul
mov
dec
mov
mov
mov
sti
xchg
jbe
sbb
mov
add
gs
fistp
sbb
jle
lds
sub
mov
adc
xchg
xchg
add
and
fld
scas
in
add
mov
aas
aam
or
or
jnp
fsub
mov
push
jmp
test
mov
sbb
mov
imul
shl
out
test
mov
retf
adc
mov
adc
(bad)
cmp
pop
sub
push
(bad)
sti
test
add
pop
and
mov
and
jmp
int3
fisub
out
stos
cmp
push
pop
push
mov
je
jmp
fwait
pop
mov
cmp
dec
inc
enter
call
inc
pop
imul
sbb
aad
in
push
mov
test
scas
and
lock
pop
jmp
in
rol
test
nop
cmps
(bad)
adc
mov
xor
mov
scas
loopne
and
dec
inc
cmp
or
fdivp
dec
dec
ds
push
(bad)
dec
movs
pop
enter
lock
cmp
jae
push
cs
fwait
jo
inc
cmps
add
cmps
xchg
dec
ins
add
jbe
sbb
jmp
sti
clc
out
add
mov
test
nop
imul
sbb
(bad)
mov
enter
jns
rcr
shl
xor
popf
loope
cwde
cmp
out
movs
mov
xor
popa
xlat
mov
mov
add
dec
adc
mov
fcmovnbe
data16
cmp
add
mov
cmps
add
jg
mov
int
xor
sti
pop
sti
cmp
int3
neg
cs
das
sub
fidivr
mov
shl
mov
push
scas
out
rcl
in
push
jbe
mov
mov
dec
dec
sub
les
push
xchg
xor
jle
mov
mov
xchg
mov
add
div
jnp
ds
push
(bad)
sahf
movs
jb
xchg
xor
adc
jle
xchg
(bad)
in
mov
in
movs
(bad)
call
pusha
movs
xor
(bad)
dec
sahf
cs
imul
inc
push
shl
or
sub
cmps
div
dec
mov
cmp
shr
and
fcmovnbe
jecxz
mov
(bad)
lea
mov
inc
mov
js
(bad)
sub
je
pop
aad
stc
add
add
xor
sar
mov
sub
jbe
jmp
outs
push
push
cmps
push
cmc
inc
jp
pop
arpl
in
neg
jnp
addr16
xor
pop
out
aad
rcl
(bad)
repz
jmp
and
xor
and
cmc
test
and
ret
and
out
(bad)
mov
sbb
jnp
mov
add
adc
ret
or
and
popf
repz
cs
nop
mov
ins
jns
add
add
pop
and
mov
pop
loop
(bad)
mov
inc
gs
ss
in
fcomp
pop
out
or
movs
push
add
ds
lods
adc
popf
mov
rcl
cmp
adc
push
and
mov
mov
jle
dec
js
cld
cs
mov
cs
(bad)
bound
fsub
or
nop
in
or
sub
(bad)
repnz
(bad)
mov
sti
sub
mov
jnp
cmp
adc
aad
and
push
adc
adc
cmp
out
inc
hlt
dec
sbb
lods
push
mov
add
in
mov
push
sbb
or
jp
pop
sub
mov
and
adc
fcomp
xchg
jnp
sub
data16
ins
or
jbe
mov
ficom
sub
mov
push
aad
std
mov
xchg
sbb
js
or
mov
adc
aad
and
push
aad
cmps
jnp
retf
jp
sbb
movs
jb
popf
pop
add
sub
dec
cmp
pop
iret
fiadd
inc
jae
mov
xchg
sub
fadd
movs
aas
jno
add
or
mov
out
outs
jnp
inc
pop
dec
push
xchg
call
in
push
push
aam
gs
sub
and
xchg
cmc
dec
ins
push
fsubr
movs
lods
mov
mov
add
rol
xor
sub
xor
retf
or
pop
dec
sbb
fcomp
sbb
jae
push
lds
icebp
inc
aad
jns
cmc
dec
into
inc
stos
add
xor
xchg
mov
gs
mov
retf
jb
sbb
or
ret
out
cmp
mov
cmp
les
movs
ret
mov
mov
push
fcmovnb
out
out
ds
(bad)
jb
js
dec
inc
outs
inc
call
nop
and
mov
mov
sbb
retf
and
xor
jne
es
inc
loopne
lock
add
(bad)
aad
xchg
push
out
aad
popf
mov
pop
ds
data16
cmp
ret
loopne
jo
retf
pop
and
mov
test
and
fsub
add
test
retf
jecxz
jle
jp
mov
and
jge
gs
cmp
and
xchg
xchg
mov
push
xchg
fsubr
lods
xchg
(bad)
aam
mov
shl
adc
pop
jmp
add
mov
xor
je
mov
push
and
dec
mov
dec
xor
hlt
scas
in
scas
and
jge
gs
mov
pop
lock
rcl
enter
pusha
outs
jbe
imul
sbb
jo
sub
dec
cdq
out
stos
jmp
pusha
movs
mov
movs
sub
xor
pop
adc
lds
mov
out
cs
or
outs
shl
and
(bad)
js
cli
dec
xchg
mov
xor
sbb
or
jge
add
call
aad
fwait
mov
test
push
movs
sti
xor
sub
dec
or
lock
add
cmp
sub
test
mov
pop
loopne
outs
cld
ret
xchg
and
jge
fcomp
mov
jmp
or
mov
push
js
jb
jle
icebp
mov
sbb
cmp
jg
ins
or
es
fwait
inc
(bad)
ficomp
retf
inc
fldenv
pop
pop
shl
inc
or
jns
and
jbe
inc
fwait
aad
in
cmc
xchg
sub
jae
jne
or
popa
bound
adc
retf
inc
cmp
cmps
mov
inc
(bad)
das
std
in
xchg
jno
mov
jmp
lock
or
inc
fcomi
shr
pop
call
jne
pop
out
adc
or
cmp
retf
enter
iret
jb
pop
inc
dec
add
and
push
dec
lods
adc
retf
fs
sbb
retf
(bad)
adc
pop
inc
mov
stos
aam
add
mov
leave
xchg
fisubr
in
call
or
mov
xor
mov
add
and
xchg
push
pushf
or
ror
pop
or
les
or
cwde
push
retf
addr16
add
xor
retf
rol
pop
push
sti
sahf
ret
add
ds
mov
jp
xchg
push
mov
push
pop
outs
fild
jnp
ret
adc
and
fstp
call
sbb
call
fsubr
movs
mov
adc
and
fwait
out
and
test
enter
imul
mov
rcr
xchg
outs
mov
shr
es
leave
int3
mov
or
jnp
je
fidivr
inc
dec
pop
scas
jmp
adc
retf
stc
(bad)
adc
cmps
(bad)
stos
pushf
(bad)
mov
cmp
cmc
cmp
sbb
jae
sbb
cmp
or
and
dec
cdq
inc
sub
div
test
sbb
(bad)
dec
(bad)
gs
je
outs
xchg
aad
jae
es
mov
leave
adc
cmp
js
inc
xchg
pop
inc
mov
xor
push
push
cmps
mov
push
lods
mov
push
dec
icebp
and
mov
dec
cli
sbb
test
cmp
xchg
call
jp
sub
out
add
shr
out
pcmpgtw
mov
adc
sub
ins
pushf
aad
xchg
fs
pop
push
pop
pop
inc
or
rcl
out
adc
fwait
and
sbb
mov
mov
inc
jne
rcr
arpl
jo
lds
stos
mov
fcmovnu
pusha
stos
cwde
out
inc
sbb
mov
in
push
cmps
jae
mov
test
bound
jae
push
sub
mov
mov
imul
push
cmp
xor
fiadd
or
xchg
xchg
call
inc
rcl
sub
add
xor
cmp
aaa
or
dec
aas
sub
sar
push
sub
mov
stos
icebp
iret
lods
and
aaa
push
inc
mov
xchg
les
xchg
jo
mov
imul
shl
xchg
cmp
mov
push
jge
mov
pushf
imul
push
out
popa
xchg
enter
popf
inc
dec
xchg
sub
enter
sti
lock
push
es
je
jae
test
mov
push
scas
movs
mov
aaa
ret
and
inc
push
(bad)
add
in
retf
addr16
(bad)
retf
lea
jmp
inc
xchg
mov
pop
mov
cwde
imul
iret
fiadd
retf
scas
or
push
jne
mov
adc
and
xchg
(bad)
loope
cld
pop
add
outs
inc
mov
out
mov
mov
mov
inc
sbb
jecxz
cmp
push
stos
push
push
jne
mov
lods
mov
loopne
inc
sahf
xchg
jmp
adc
cmp
mov
jl
dec
hlt
mov
test
jle
dec
mov
cmps
cs
xchg
fbld
mov
stc
mov
cli
mov
fisub
or
jne
sub
fcmovu
ds
pop
adc
pusha
sub
dec
xchg
retf
xchg
inc
mov
xlat
xchg
shl
out
imul
inc
sbb
pusha
cli
adc
jle
cmp
dec
retf
mov
outs
fbstp
xor
fcmovnb
bound
rol
inc
mov
push
adc
imul
sub
mov
pop
mov
pop
enter
daa
mov
sbb
adc
fild
mov
push
cmc
mov
push
mov
add
call
dec
fistp
mov
cwde
pop
test
test
mov
sbb
ds
mov
nop
push
sbb
xchg
and
cli
mov
movs
imul
pusha
mov
pop
iret
daa
push
cmc
inc
sbb
pop
in
inc
cmps
daa
imul
mov
dec
inc
cld
sub
xor
enter
pusha
mov
push
xchg
jg
mov
(bad)
stos
jne
js
adc
xor
ror
imul
lods
outs
fiadd
adc
xchg
sub
mov
mov
rcr
pusha
(bad)
xor
clc
xor
inc
ds
shl
outs
and
enter
ss
xchg
mov
fucomi
std
retf
jmp
push
out
les
and
cmp
fisub
daa
sar
and
xor
ins
push
jae
arpl
mov
mov
mov
loopne
jnp
add
loop
enter
mov
nop
cs
icebp
aaa
inc
popf
push
call
jle
stos
test
jle
mov
adc
out
scas
mov
nop
push
mov
retf
push
sub
sbb
add
test
and
mov
inc
icebp
and
jmp
jle
retf
fsubrp
movs
mov
dec
inc
cs
xchg
xor
fwait
cmp
cmc
jmp
cmps
mov
dec
and
stos
inc
mov
pusha
pop
adc
lods
repnz
stos
sbb
(bad)
mov
push
and
in
mov
mov
rcr
rcr
into
mov
shl
cmp
add
jge
push
dec
das
adc
dec
popf
jl
test
sbb
cmps
call
fild
jne
(bad)
fdivr
and
fwait
shl
scas
mov
enter
cs
mov
aam
cmp
das
(bad)
mov
sti
sub
ficom
push
loopne
std
retf
xchg
xlat
add
arpl
aam
cmp
dec
cli
xor
out
int
sub
inc
jecxz
inc
mov
out
movs
lods
mov
das
pop
inc
call
push
retf
dec
sub
sub
shr
(bad)
into
push
clc
lea
pop
aam
cmp
cli
pop
adc
leave
rcr
ret
cmps
push
mov
scas
das
out
idiv
pop
xchg
sbb
pop
inc
fidivr
xchg
test
enter
retf
cmp
stos
sub
mov
dec
inc
or
je
repz
sbb
(bad)
mov
jbe
arpl
adc
clc
pop
test
mov
dec
shr
mov
in
mov
in
test
or
fisubr
imul
(bad)
cli
and
fcom
xor
or
fisttp
push
enter
pop
fucomip
call
jle
jnp
into
or
inc
sbb
or
movs
add
dec
inc
in
mul
cmp
in
sub
xchg
in
sbb
sub
cmp
sahf
push
jnp
(bad)
mov
xor
aad
fisubr
test
jae
ror
sub
aas
dec
daa
mov
idiv
push
or
std
call
and
call
push
pop
movs
(bad)
sub
popf
movs
imul
cmp
sti
aad
push
mov
xlat
gs
mov
mov
test
inc
add
call
cmps
call
xchg
dec
cs
or
mov
shl
inc
cmp
sub
mov
cs
cmc
(bad)
jp
adc
lods
adc
fucomip
xor
popf
inc
push
scas
loopne
iret
retf
addr16
mov
shl
sub
mov
call
and
retf
pop
push
lea
inc
jns
lds
push
sahf
push
aam
movs
and
add
fiadd
push
xor
imul
and
gs
sbb
mov
retf
nop
push
and
inc
mov
loopne
jns
cmp
cmp
sbb
call
lea
lahf
lock
cmp
or
add
push
hlt
test
(bad)
aad
gs
push
mov
xor
pop
adc
inc
adc
outs
mov
test
fadd
mov
xchg
adc
sti
or
in
xor
add
es
ds
fs
pusha
mov
push
pop
cmps
dec
pop
add
push
cmps
aad
aaa
adc
lahf
jmp
fs
sbb
std
xor
sahf
push
and
add
dec
inc
cs
xchg
loope
inc
ds
or
mov
add
jne
call
dec
mov
aam
xor
jmp
fcmovu
lea
sar
cmp
and
ret
inc
movs
inc
sub
xchg
adc
shl
or
cwde
int3
jecxz
addr16
inc
fst
xlat
add
inc
push
dec
out
jnp
(bad)
dec
addr16
push
mov
xor
stc
sti
fild
pop
push
push
mov
mov
cmc
je
mov
in
rcr
stc
cmc
mov
fdivr
call
cmps
pusha
imul
aad
outs
scas
jle
cmp
mov
push
inc
or
pop
jecxz
imul
push
inc
push
adc
xchg
call
and
cmp
cmps
xor
sub
mov
addr16
es
(bad)
movs
xchg
movs
mov
iret
dec
pop
jmp
cmp
dec
dec
rcl
push
in
push
push
sbb
dec
ret
pop
outs
push
stos
lock
xchg
xchg
aam
mov
jg
(bad)
sbb
fldcw
jo
cmp
shr
push
cdq
pop
mov
movs
mov
iret
rcl
fsubr
cli
sub
push
std
sub
lock
cli
mov
pushf
retf
pop
pop
jle
mov
or
call
int3
stos
test
je
push
sub
jo
and
pop
lods
bound
int3
stos
jnp
cmp
dec
inc
or
stos
cmp
fwait
adc
mov
out
jae
and
fs
add
clc
xor
pop
lock
xor
dec
jo
mov
cwde
fsubr
arpl
dec
cli
rcr
addr16
aad
nop
xor
dec
es
or
push
ret
in
xor
xor
add
out
sti
test
cmp
in
imul
retf
xor
sub
mov
xlat
sub
cmc
inc
nop
gs
cs
cli
dec
push
sub
neg
sub
mov
xchg
mov
sbb
cli
inc
or
fdivr
and
fld
pushf
outs
and
test
ds
add
outs
push
js
jmp
into
mov
jp
rcl
dec
(bad)
mov
aas
call
push
sub
out
cmp
retf
lock
cmp
ins
and
or
adc
xor
cmp
outs
ds
lea
loop
pop
add
scas
out
add
push
loopne
std
test
clc
fdivr
aaa
cld
cmp
adc
mov
jne
out
dec
mov
xchg
push
stos
jne
mov
lock
cmp
push
repz
call
dec
test
inc
jmp
lahf
adc
retf
push
sahf
div
xor
cli
push
jmp
dec
lock
xchg
push
jnp
mov
push
shl
xor
es
push
sbb
enter
dec
or
cmp
add
dec
xor
and
dec
mov
enter
xchg
ss
push
(bad)
inc
out
test
add
aas
and
xchg
push
(bad)
cmp
inc
xchg
test
mov
mov
xor
mov
xchg
jmp
jle
add
mov
mov
xchg
and
xchg
(bad)
aad
ins
mov
popf
jecxz
adc
leave
into
outs
stos
das
cmp
cdq
inc
add
sahf
stos
and
xor
adc
jmp
mov
fs
gs
or
(bad)
inc
fistp
aad
add
cwde
inc
xlat
dec
sahf
movs
adc
and
jne
mov
adc
ja
outs
sbb
aad
cmc
sti
(bad)
fisttp
mov
gs
jmp
stc
out
jnp
outs
dec
fwait
sub
mov
sub
retf
xchg
aam
jns
cdq
add
icebp
aad
cmp
xchg
dec
outs
loop
xchg
dec
fs
movs
pop
or
push
ds
push
mov
test
lock
not
dec
test
mov
cmp
jecxz
movs
mov
fwait
test
mov
mov
mov
jbe
or
jno
ds
pop
sub
jnp
(bad)
cmp
(bad)
mov
mov
inc
and
mov
cmp
pop
aam
cmp
rcr
push
stos
cmps
and
addr16
adc
fwait
(bad)
mov
or
add
ret
outs
call
add
mov
shr
push
xchg
pop
out
jne
add
cmc
(bad)
leave
(bad)
fimul
pop
enter
movs
cmp
or
out
in
cmp
(bad)
and
add
leave
cld
ins
mov
push
popa
das
cmp
jmp
or
mov
mov
xchg
sbb
int3
(bad)
push
push
cmc
sbb
sub
dec
fsub
cmp
retf
retf
out
pop
es
retf
test
scas
sub
lock
mov
mov
mov
mov
xor
jmp
popa
inc
cmp
je
cli
dec
(bad)
adc
mov
movs
xor
stc
lds
sbb
xchg
push
jle
in
jmp
es
jne
ds
cwde
and
out
das
inc
inc
push
cmps
sahf
or
mov
loop
dec
pushf
in
cmp
test
das
xor
push
daa
sbb
enter
push
add
repnz
jecxz
hlt
dec
nop
pop
fdiv
sub
mov
cmp
inc
adc
js
and
dec
int3
pop
pop
imul
add
mov
xor
cmp
ins
cmp
ret
mov
cld
ds
sbb
(bad)
pop
jp
mov
fild
dec
add
xchg
mov
arpl
push
xchg
mov
and
xor
push
cmps
fst
or
lea
ins
pop
inc
mov
out
rcl
sbb
pop
rcr
lds
mov
out
push
mov
mov
inc
push
or
hlt
pop
adc
mov
jo
pushf
addr16
xchg
mov
leave
adc
test
cmp
sub
imul
xchg
(bad)
call
pop
sbb
push
jmp
fstp
or
fistp
mov
mov
push
and
jne
add
pop
mov
cmp
jle
push
xor
cmp
(bad)
sbb
jno
gs
sbb
repz
add
inc
and
addr16
inc
ret
xchg
xchg
sub
lock
out
mov
into
add
repz
xchg
xor
jmp
mov
or
stos
and
in
or
out
mov
sub
xor
ins
into
je
(bad)
push
add
(bad)
stc
xor
adc
cwde
mov
sub
stos
lock
sbb
push
inc
mov
pop
mov
and
xor
stos
nop
mov
xchg
pusha
pop
dec
adc
fdivr
pop
cli
push
adc
fidivr
cmc
scas
sbb
inc
xchg
xchg
sub
rol
(bad)
and
repnz
sbb
xor
pop
es
into
lds
mov
mov
inc
inc
xlat
push
mov
jmp
int
dec
push
je
retf
xor
adc
(bad)
fwait
out
gs
paddusw
out
pop
xchg
lahf
clc
ds
in
movs
sub
call
data16
lds
sbb
push
daa
xchg
and
mov
pop
sbb
out
inc
fcom
outs
sbb
xor
popa
sbb
loopne
add
add
xchg
sub
(bad)
mov
(bad)
leave
xor
jmp
es
sub
sub
mov
test
add
or
mov
jge
add
aad
outs
jnp
inc
dec
fld
and
dec
xchg
imul
mov
xchg
jp
aam
and
pop
xor
pop
sub
jp
imul
push
sbb
lds
xor
fstp
test
mov
xchg
fwait
gs
cmp
pop
push
xchg
fwait
push
test
cmp
pusha
cs
loop
enter
call
imul
mov
fs
pop
mov
popa
jmp
add
pop
lods
xchg
push
outs
out
cmp
inc
ss
push
scas
jp
dec
inc
dec
rcr
scas
mov
test
sub
(bad)
pop
mov
dec
mov
sbb
lds
nop
into
cmp
jp
ret
sti
sbb
jne
sti
sahf
std
inc
inc
sahf
addr16
jnp
adc
cmp
aas
mov
add
jo
sysret
pop
push
test
mov
shr
xchg
push
mov
cmp
or
dec
mov
or
fiadd
and
iret
or
push
push
ret
sub
mov
test
push
cs
xchg
push
call
push
gs
gs
shl
imul
ds
xor
xor
and
xchg
mov
xchg
sbb
xor
mov
inc
add
ds
ss
(bad)
cmp
stos
loop
movs
xchg
gs
mov
lods
pop
and
mov
retf
and
pop
hlt
fiadd
inc
mov
je
xchg
push
pop
test
mov
pop
xchg
jnp
dec
dec
mov
movs
jmp
mov
stc
lock
push
in
loop
mov
adc
add
mov
mov
push
js
add
js
xchg
ds
sahf
push
aam
push
mov
inc
add
ds
and
stos
mov
sahf
push
cmps
out
in
add
bound
add
ja
enter
and
fistp
loopne
ss
sbb
dec
pop
adc
(bad)
mov
aad
and
and
(bad)
hlt
mov
pop
mov
xor
imul
pop
ss
retf
rcr
push
jl
fsubr
lahf
popf
inc
mov
loopne
lock
mov
sbb
cmp
shl
pop
cmp
jp
out
pop
in
push
(bad)
outs
sub
add
xchg
pusha
xchg
cmp
pop
into
sub
mov
and
mov
dec
dec
jae
push
inc
mov
jnp
dec
aam
in
ja
xchg
xchg
sub
inc
stc
xchg
cmps
inc
xor
arpl
mov
xchg
cmp
retf
sub
pop
fsubr
sub
mov
push
movs
push
out
test
je
retf
cmp
and
retf
adc
pop
mov
hlt
lods
adc
ret
loopne
add
xchg
sub
sub
rcl
sub
pop
sar
je
into
inc
pushf
xlat
or
pop
push
dec
and
push
loopne
push
mov
shl
out
test
jle
dec
cli
movs
pop
loopne
or
add
cmc
xor
(bad)
lahf
out
repnz
add
in
cld
gs
dec
cmc
or
sub
fadd
fiadd
cmp
mov
ins
cmp
jno
adc
enter
stos
nop
call
lds
out
or
fisubr
icebp
add
jp
(bad)
dec
out
inc
stos
push
mov
shl
pop
adc
jns
hlt
pop
dec
aam
and
fwait
imul
fst
push
arpl
in
ds
cmp
outs
call
mov
loop
or
mov
fsubr
sub
sub
pusha
xchg
pop
ffree
mov
xchg
cmps
push
mov
scas
mov
rcr
fsub
mov
loope
hlt
push
(bad)
fwait
sbb
mov
sub
rol
test
nop
aas
aam
fist
(bad)
in
fstp
lds
add
pop
sahf
push
cmp
cmp
dec
arpl
movs
cmp
aam
dec
(bad)
jp
mov
call
or
mov
out
jle
push
adc
cwde
xchg
in
retf
pop
adc
in
js
push
sahf
xchg
adc
mov
(bad)
cmps
pinsrw
pop
cmp
test
add
or
ret
xchg
jmp
mov
inc
mov
rcr
add
in
jnp
add
jo
inc
rcr
mov
mov
jle
add
jbe
dec
adc
ds
mov
fstp
loopne
adc
idiv
inc
fwait
lds
stos
sub
sbb
cli
bswap
retf
loopne
gs
loopne
das
aad
fisub
and
sbb
scas
out
mov
in
sbb
jmp
cli
pop
dec
jne
push
xchg
out
jne
inc
das
xor
repz
rol
or
lods
rcr
or
sbb
out
shl
mov
mov
ins
aad
sbb
mov
fistp
sbb
or
outs
stos
ds
ds
add
scas
clc
or
cmp
retf
test
xchg
jmp
sti
mov
les
aam
les
ins
sbb
cmc
outs
retf
mov
es
in
cmc
and
sti
aaa
xor
addr16
test
jno
lds
inc
gs
jmp
inc
sbb
jmp
xchg
test
fcom
sub
push
and
aas
dec
sub
pop
jnp
sub
and
xchg
dec
jo
jle
lock
aas
and
or
jg
ja
lahf
out
cmps
jmp
xlat
nop
bound
lock
shl
cdq
cli
xor
push
pop
adc
je
mov
mov
outs
fsub
or
xor
(bad)
push
xlat
sub
frstor
and
test
adc
div
mov
rcr
addr16
xchg
stos
sub
into
shr
inc
cdq
xchg
sub
adc
je
pop
or
retf
inc
test
xlat
inc
in
daa
gs
es
mov
sub
lahf
jo
pushf
jnp
repnz
xchg
enter
xlat
cmp
sti
pop
sti
jmp
(bad)
and
fs
dec
gs
loopne
repz
mov
ds
jns
scas
inc
fimul
and
pop
sar
mov
mov
jmp
sti
dec
or
(bad)
int
cmp
mov
jmp
(bad)
sbb
fisttp
xor
sub
mov
lds
push
cmp
cmp
fisub
movs
enter
adc
sbb
dec
sbb
test
imul
data16
or
and
or
daa
cmp
push
xor
xchg
and
scas
pop
out
stos
xlat
mov
aad
push
mov
add
mov
movs
dec
xchg
cmp
loop
movs
xor
sbb
cs
dec
pop
popf
xchg
inc
imul
das
pop
enter
and
fnsave
mov
lods
jno
mov
clc
pop
push
pop
push
jg
jg
enter
test
xchg
jnp
jp
inc
mov
imul
push
jle
cmp
out
ds
pop
cs
std
inc
into
out
outs
jo
mov
sbb
cmp
xchg
pop
je
push
adc
cmp
jmp
xor
pop
repz
enter
cmp
jne
inc
sar
out
cmp
dec
adc
sbb
ret
add
push
inc
jmp
cli
pop
popa
pop
jmp
scas
daa
dec
loopne
push
call
jmp
adc
mov
mov
xchg
xor
rcr
and
(bad)
cli
mov
push
cdq
pop
mov
sti
adc
xor
fdiv
fs
lea
cdq
cmp
fld
pop
clc
iret
jp
imul
xor
xor
je
sub
inc
mov
xchg
sti
arpl
mov
cdq
sbb
mov
or
cmp
les
cmc
aaa
setle
outs
repz
jns
movs
std
aaa
mov
call
imul
aad
lea
mov
cld
hlt
lock
std
xchg
or
jmp
push
cmp
in
sbb
mov
mov
mov
jns
dec
movs
or
add
lahf
aad
ins
mov
xchg
pop
out
fisttp
pop
jb
jb
jne
add
test
mov
mov
std
sbb
cmp
shl
push
dec
test
cmps
xor
xor
mov
movs
and
gs
push
cli
push
adc
je
fsub
xor
and
mov
cs
adc
(bad)
jnp
and
(bad)
call
push
cld
sub
scas
call
test
sub
aad
dec
mov
push
movs
repz
int
and
cmp
(bad)
mov
aad
pushf
mov
retf
sub
(bad)
out
mov
mov
add
cwde
pusha
vshufpd
shl
retf
adc
bnd
mov
pop
adc
les
sub
cmp
shl
scas
jbe
nop
cdq
(bad)
scas
cs
repz
mov
pop
(bad)
leave
stos
rcr
lahf
leave
fldenv
into
lea
xlat
sub
dec
mov
adc
pop
cmp
aaa
cmps
cmp
loop
jae
inc
into
lods
pop
aad
or
or
loopne
adc
mov
mov
add
dec
pop
mov
cmps
xor
jecxz
scas
js
test
sbb
popa
cmp
and
les
xlat
arpl
es
xor
(bad)
inc
fstp
mov
dec
nop
fisubr
daa
cmp
ror
sahf
addr16
in
or
stos
or
dec
bound
xchg
xchg
fbstp
pop
pop
adc
outs
xchg
in
or
repnz
jmp
push
or
jo
mov
imul
mov
mov
or
aas
sbb
lods
jecxz
dec
adc
stos
cmps
xor
inc
and
aad
(bad)
(bad)
jge
(bad)
push
sbb
test
sbb
inc
or
push
mov
xchg
cmps
xor
mov
push
sbb
hlt
or
mov
adc
push
div
pop
and
scas
arpl
fisubr
mov
imul
dec
xchg
aad
push
xchg
icebp
sub
(bad)
inc
sbb
out
mov
ds
sahf
lods
jne
retf
inc
nop
mov
mov
sbb
lahf
test
pop
pop
movs
cmp
mov
jmp
push
fist
pop
iret
rcl
jmp
aas
cld
mov
jnp
xor
inc
enter
adc
leave
ficomp
dec
or
in
fisubr
jno
inc
sbb
pusha
nop
xor
ds
cmp
pop
mov
inc
scas
popf
pop
sub
push
inc
pop
xchg
fsub
clc
call
mov
imul
sbb
mov
fild
cmp
and
(bad)
js
cli
dec
xchg
pusha
repnz
sbb
adc
jge
mov
in
loop
repnz
cmp
cmp
loopne
pusha
sahf
adc
push
and
popf
jo
pop
inc
es
test
fidiv
and
shl
and
call
sub
jnp
(bad)
cmp
in
stos
pusha
inc
hlt
or
mov
fsubr
and
mov
cmp
ja
jmp
xchg
mov
test
les
adc
sti
mov
mov
inc
sbb
xor
das
mov
and
addr16
int
cmp
cwde
stos
and
xchg
push
and
jmp
fidivr
pop
lock
xor
push
ret
clc
xchg
ror
cs
mov
push
out
cmps
ss
(bad)
xor
pop
add
(bad)
in
xor
push
add
sub
cmp
jmp
xchg
aam
cmp
xchg
xor
or
jg
jp
adc
sti
ror
fstp
outs
pusha
xlat
pusha
ror
xor
es
or
es
or
push
ret
gs
cwde
imul
push
mov
push
mov
or
xchg
mov
jbe
mul
cs
add
fwait
push
sar
call
lock
push
inc
dec
and
mov
adc
pop
or
fwait
mov
inc
test
mov
cmps
fs
sbb
push
mov
jo
and
(bad)
fdivrp
cmps
sbb
sbb
inc
dec
adc
shl
imul
push
lds
es
adc
enter
jecxz
add
xchg
xor
fsubr
ret
outs
mov
retf
repz
inc
sbb
jb
adc
pop
mov
mov
mov
lds
clc
out
ret
ficomp
arpl
jg
xor
fwait
shr
inc
loope
fcmovnu
(bad)
lods
sahf
jo
pop
inc
cwde
push
mov
(bad)
or
imul
sub
jbe
lock
inc
dec
mov
push
cli
add
xor
sti
pop
mov
sub
xlat
cmp
xchg
mov
add
jp
sub
or
mov
stos
jnp
mov
add
in
lods
jnp
or
mov
push
movs
lods
sti
loopne
ficom
movs
sti
xor
dec
cmp
dec
adc
mov
loopne
loopne
xor
xchg
sub
xor
inc
shr
cmp
sbb
push
mov
mov
sbb
mov
pop
pusha
add
aad
arpl
cmp
jp
leave
push
loopne
push
dec
pop
adc
mov
jmp
(bad)
push
push
push
lods
jmp
or
mov
push
(bad)
outs
in
xor
mov
ss
pop
js
lods
jb
add
and
cmp
dec
jo
pushf
loop
xor
add
cwde
inc
xlat
dec
mov
mov
outs
or
push
mov
fwait
les
or
test
jmp
fidiv
or
mov
fld
and
pop
mov
sbb
mov
(bad)
sbb
gs
dec
push
sahf
imul
mov
lods
es
pop
inc
mov
sub
mov
inc
mov
cmp
adc
jnp
fwait
xchg
lds
nop
nop
jae
push
movs
jo
mov
push
cdq
add
cs
mov
retf
xchg
pop
adc
sub
stc
cmp
mov
fs
push
sbb
xchg
push
push
popa
in
cld
dec
jo
push
leave
rcl
std
retf
jp
cmps
mov
cmp
outs
fbld
jns
call
pop
add
sar
pushf
cmp
sar
push
jle
data16
les
cmc
dec
(bad)
jecxz
jns
rol
rcr
int3
nop
sbb
cmp
sar
cwde
mov
(bad)
adc
scas
wrmsr
(bad)
xchg
inc
cmps
adc
sbb
jae
gs
add
fwait
push
xor
call
test
pop
or
add
dec
movs
cmp
cmp
and
les
call
rcr
cmc
mov
nop
jmp
or
mov
push
(bad)
inc
call
imul
cmc
or
loop
jno
inc
out
adc
add
hlt
lods
inc
pushf
mov
jo
in
fidivr
push
mov
js
or
pop
hlt
sub
sub
ror
ret
aam
sbb
cwde
and
sbb
xchg
cs
dec
leave
push
pop
mov
dec
clc
iret
mov
jp
cmp
ds
inc
mov
sub
adc
hlt
popa
adc
gs
sbb
imul
aad
jmp
sub
pop
pop
in
sub
ret
and
pop
xor
leave
(bad)
mov
inc
ins
and
adc
lahf
jbe
adc
cmc
int
cmp
jnp
mov
pushf
add
mov
ds
inc
in
jnp
adc
(bad)
adc
dec
cmp
call
and
jl
mov
cli
push
mov
push
inc
add
outs
push
je
jae
neg
mov
sar
xchg
leave
pop
imul
xchg
mov
in
fld
sbb
pop
fcmovne
pavgb
mov
outs
stos
js
mov
mov
sbb
jecxz
mov
sub
call
mov
data16
sbb
out
sti
sbb
stos
(bad)
lds
mov
mov
fisttp
dec
mov
popa
test
mov
rol
data16
in
push
stos
outs
jo
add
sub
push
stos
xchg
outs
and
push
shr
adc
jmp
pop
ja
cmp
gs
or
fmul
cmp
cmp
cdq
xchg
add
and
xlat
mov
mov
pop
fs
push
es
fbstp
mov
jmp
stos
dec
and
in
jne
add
adc
scas
cmps
shl
lahf
retf
xchg
mov
jo
fwait
das
push
and
mov
out
fisub
das
enter
nop
mov
fild
repnz
mov
push
outs
push
aam
mov
inc
ds
ins
xchg
push
or
jns
fsubr
movs
xchg
mov
retf
dec
cli
xchg
cs
jns
enter
and
cmp
mov
movs
jl
cld
ficom
out
pusha
or
ss
and
sahf
sub
add
add
dec
jnp
jmp
pop
fisub
push
nop
jmp
adc
int3
inc
push
push
test
xor
stc
jnp
mov
stos
shl
cmc
and
(bad)
test
jns
jns
popf
in
cmp
inc
retf
(bad)
or
cmps
idiv
test
retf
sti
mov
xchg
sbb
push
mov
(bad)
call
add
push
aad
mov
lds
test
sub
clc
mov
inc
xchg
in
fnstsw
lahf
std
push
sbb
and
xchg
xor
sbb
mov
jne
sub
jnp
mov
mov
xchg
mov
inc
add
retf
imul
mov
imul
retf
(bad)
aad
adc
sahf
xchg
out
movs
jmp
or
xor
lahf
mov
sti
and
sbb
add
stos
inc
daa
les
imul
arpl
mov
js
aad
int3
aaa
sar
push
pop
jmp
mov
xchg
scas
jp
je
mov
jnp
shl
retf
aad
ret
xor
sbb
cld
dec
rcr
test
outs
sbb
and
scas
push
lods
dec
out
jno
aam
iret
pusha
adc
cmp
lahf
xor
cmc
in
jl
enter
mov
sbb
in
mov
mov
sbb
out
jnp
outs
dec
fwait
sub
mov
sub
retf
(bad)
aam
jns
cdq
add
icebp
aad
cmp
xchg
dec
outs
loop
xchg
dec
fs
movs
dec
or
push
ds
push
mov
test
jle
ffree
fs
js
inc
(bad)
xor
and
test
push
fidiv
pusha
xor
jmp
outs
mov
enter
dec
stos
in
inc
in
mov
add
js
std
jae
es
cmc
jg
sahf
xchg
out
loopne
push
push
mov
cli
mov
stos
push
clc
icebp
sti
loope
je
sbb
ss
xchg
jmp
cli
repz
mov
add
pop
adc
(bad)
cmp
adc
push
jle
shr
lea
out
fs
adc
cmp
outs
jbe
and
aad
in
jg
pop
fild
push
inc
dec
add
ins
pop
xchg
div
aaa
test
js
inc
and
stos
movs
mov
push
aam
mov
js
scas
adc
addr16
ret
adc
(bad)
not
adc
test
inc
nop
inc
mov
jne
mov
stos
sar
xchg
shl
jbe
(bad)
es
js
ret
adc
add
retf
test
test
mov
add
loop
mov
sbb
dec
jecxz
test
loope
push
repnz
ja
retf
or
ret
sbb
pusha
fst
add
pusha
and
aad
cmps
jmp
das
sub
loopne
movs
sti
mov
push
outs
push
inc
daa
imul
push
pusha
test
jnp
mov
mov
stc
fcomp
push
fcom
mov
cmovno
outs
xchg
(bad)
xchg
(bad)
mov
mov
sbb
sub
mov
scas
mov
mov
jnp
imul
pop
aad
in
aaa
retf
mov
add
and
aaa
mov
xchg
push
xchg
jmp
push
adc
and
test
inc
sbb
sub
shl
mov
and
fs
or
add
(bad)
ficom
xchg
fcom
sbb
hlt
call
fimul
adc
sbb
sbb
jl
inc
mov
or
fidiv
xabort
lds
inc
adc
push
sbb
xor
cdq
push
out
pop
dec
inc
sbb
gs
retf
push
imul
and
xor
cdq
xchg
jmp
jo
inc
lods
call
cli
mov
sub
mov
sbb
or
test
push
es
nop
mov
(bad)
sub
adc
call
loopne
aad
mov
test
push
pop
or
stos
lods
cwde
fimul
test
jmp
fstp
jmp
push
arpl
jae
imul
(bad)
les
mov
xchg
push
xchg
repnz
stos
cmp
sbb
cmc
out
jp
mov
movs
fimul
pusha
pop
cdq
imul
cmp
push
or
lock
add
and
into
pop
and
pop
fidivr
inc
movs
in
fimul
cmp
sbb
or
adc
cmp
test
stos
(bad)
call
or
idiv
je
data16
imul
xlat
adc
mov
movs
imul
test
inc
xchg
sbb
mov
daa
out
(bad)
mov
push
mov
int3
test
push
or
sbb
jne
pop
push
sub
cs
les
add
repz
sbb
xor
test
xlat
adc
mov
aam
or
ficomp
lock
jns
jno
mov
fimul
add
lea
test
sti
cmp
push
dec
jnp
pop
ins
and
sti
pop
mov
stos
(bad)
dec
mov
addr16
retf
xor
inc
add
test
mov
fidivr
sub
popf
stc
leave
cmp
stos
sbb
mov
cmps
sub
test
call
xchg
addr16
xchg
push
push
or
xor
mov
mov
les
xchg
fiadd
push
cmps
inc
xor
cld
mov
pop
loop
repnz
mov
(bad)
adc
je
sub
or
and
into
es
aad
std
in
ret
pushf
mov
int3
xchg
fdiv
adc
pop
jp
push
pop
add
dec
rcl
mov
sub
popf
pusha
or
or
or
inc
outs
fsub
(bad)
nop
xor
outs
in
mov
(bad)
loope
js
mov
pop
es
or
rcr
mov
push
dec
(bad)
call
je
gs
sbb
cmc
cmp
je
mov
jns
mov
ins
pop
fsub
sbb
push
push
mov
sbb
xor
dec
push
mov
movs
dec
xchg
test
retf
jb
test
jp
push
pop
jbe
hlt
aad
mov
(bad)
sti
movs
add
push
cmp
in
inc
js
jp
sbb
dec
push
cmp
xchg
stos
aam
cmp
or
(bad)
push
or
or
(bad)
and
test
fsub
mov
mov
jle
sbb
or
push
sbb
popa
outs
push
or
outs
lods
repnz
iret
sar
cmp
es
adc
adc
sar
mov
sub
add
or
in
callw
mov
xchg
push
stos
inc
test
mov
mov
push
mov
in
and
mov
xchg
fimul
sub
(bad)
and
jns
pop
mov
(bad)
mov
test
cmps
jp
retf
dec
cdq
adc
dec
dec
fcomip
in
jmp
mov
je
mov
ss
cdq
pop
fwait
mov
imul
mov
mov
xchg
scas
je
add
pop
pop
movs
xor
fwait
xchg
test
pop
fidiv
sub
xchg
fsub
fstp
push
xor
pop
jp
push
pop
cs
dec
mov
sbb
sbb
and
cmp
nop
das
sbb
js
mov
add
inc
enter
call
xchg
add
stc
leave
add
aad
cmps
dec
or
cdq
pop
adc
mov
or
mov
jae
sbb
pop
mov
sub
js
(bad)
sbb
into
pop
aas
clc
xchg
mov
or
es
je
xor
fs
popa
inc
std
xor
sbb
into
pop
xor
xchg
xchg
dec
inc
(bad)
push
sbb
(bad)
dec
fwait
xchg
push
sahf
jbe
in
cwde
pop
test
mov
mov
stos
int3
test
stos
in
xor
jp
xlat
sub
div
inc
xlat
test
mov
in
dec
(bad)
adc
leave
fsub
sbb
cmc
test
xlat
adc
mov
stos
jb
les
cli
add
xchg
and
sbb
sbb
sub
fsub
mov
stos
(bad)
les
cli
fist
int3
jl
leave
fsub
sbb
std
pop
(bad)
sbb
into
pop
jo
add
xchg
jge
call
or
not
dec
sti
sub
int
cmp
cmp
(bad)
sbb
gs
dec
lods
movs
push
sub
stos
js
lds
or
cdq
push
mov
aad
enter
add
jecxz
and
adc
sbb
cmc
xor
xchg
sbb
out
(bad)
sti
sbb
cli
(bad)
jne
test
retf
fwait
sbb
sbb
cmp
adc
hlt
mov
cmps
add
movs
in
fcmove
ja
and
inc
stc
pop
(bad)
or
call
cwde
push
mov
cli
pop
push
stos
inc
test
push
push
and
adc
cmc
jns
test
aam
xor
leave
sbb
out
scas
jnp
jmp
fs
sbb
pop
adc
aaa
mov
lods
call
test
or
mov
inc
cmc
xchg
repz
sti
clc
add
aad
xor
sti
cli
mov
imul
fmul
lds
aad
sbb
jae
xor
sbb
pop
stos
call
xchg
mov
dec
popf
push
dec
ret
or
out
dec
sbb
cmp
add
fcom
rcr
dec
cdq
adc
dec
dec
xchg
mov
mov
xchg
pop
rcr
test
into
inc
fst
hlt
retf
(bad)
xor
dec
clc
xchg
xchg
sub
pushf
mov
push
xor
cmp
xor
stc
jo
test
push
lods
fisub
aam
ret
mov
les
hlt
bound
jg
push
cmps
jp
xor
retf
push
pop
jle
enter
callw
mov
push
cwde
imul
xchg
stos
sbb
out
pushf
pop
xlat
outs
cs
sbb
lods
cwde
push
xchg
mov
(bad)
sbb
ret
mov
push
or
push
add
pop
hlt
pop
xlat
pop
jmp
adc
addr16
retf
pop
sub
push
(bad)
push
call
repnz
xor
push
cwde
imul
mov
jmp
mov
xchg
mov
pop
fisubr
dec
les
sub
adc
je
(bad)
pop
stos
cmps
dec
or
dec
cdq
pop
adc
aaa
imul
movs
ror
sub
adc
push
lods
fwait
sbb
dec
and
push
pop
in
hlt
test
aam
and
mov
movs
jmp
pop
sub
and
shl
fist
sbb
in
jmp
pop
xchg
jl
retf
pop
sub
push
(bad)
push
call
xlat
pop
stos
call
cmps
addr16
fmul
(bad)
sbb
enter
pop
mov
pop
stos
call
xchg
int3
cmp
je
(bad)
ins
push
sbb
mov
out
pop
dec
mov
xchg
data16
pushf
mov
ret
jmp
pop
mov
and
push
add
clc
in
cmps
gs
mov
dec
pop
jbe
xchg
sbb
mov
mov
dec
test
out
dec
pushf
enter
cmps
addr16
retf
(bad)
push
int3
ja
or
arpl
mov
imul
sbb
xchg
jge
fidiv
je
sbb
cld
in
or
pop
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
xchg
movs
sti
mov
inc
sbb
and
xor
add
jnp
mov
fwait
aad
sbb
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
call
or
jno
add
jg
pop
lahf
shr
sbb
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
gs
or
and
fwait
sub
test
xchg
jmp
sti
mov
inc
sbb
dec
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
les
add
jnp
mov
fwait
aad
in
cmc
retf
jp
xchg
jmp
sti
mov
inc
sbb
dec
add
jnp
mov
fwait
aad
in
or
test
xchg
jmp
sti
mov
mov
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
add
or
push
sub
jne
add
jnp
mov
fs
in
cmc
retf
test
xchg
adc
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
test
stos
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
les
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
sub
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
dec
or
push
sub
jne
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
mov
fwait
rcr
xor
add
dec
add
pop
xor
stos
mov
cmc
mov
sar
fsubr
sbb
sub
ins
add
pusha
pop
addr16
and
push
mov
xchg
retf
dec
sub
or
adc
xor
mov
aad
add
outs
xor
sub
push
dec
jno
inc
push
jnp
in
mov
aad
mov
out
ror
sub
cmp
and
sub
dec
jnp
fcom
leave
nop
movs
jmp
xchg
mov
and
cmp
daa
push
add
aaa
push
imul
mov
movs
leave
in
(bad)
mov
or
xor
pop
adc
pusha
das
adc
dec
jp
mov
ficom
mov
or
push
gs
add
jbe
jge
ins
jnp
mov
xchg
call
call
gs
push
or
inc
or
xor
fbld
(bad)
mov
movs
icebp
xor
pop
adc
add
push
jno
xor
and
jmp
sti
mov
out
mov
rcl
xor
push
push
adc
inc
sbb
and
mov
call
xchg
mov
in
test
or
sbb
add
or
mov
cmps
fbld
retf
(bad)
cmc
dec
ss
es
or
pop
sub
push
adc
xchg
std
in
retf
scas
aad
retf
or
imul
and
inc
sbb
push
cs
retf
loope
cmps
jmp
push
mov
(bad)
cmp
cmp
add
xor
and
cmp
loope
mov
test
leave
mov
es
or
sbb
loop
fcmovnbe
ret
pushf
mov
(bad)
cmc
das
sub
gs
dec
sbb
jno
jp
jae
inc
jmp
mov
vpmullw
sub
imul
push
push
jno
xor
cmp
loope
jmp
(bad)
add
(bad)
dec
sub
gs
sbb
sub
pop
sub
stos
repnz
xchg
sti
xchg
stc
aam
xchg
aam
scas
ror
es
inc
sbb
sub
pop
sub
stos
mov
mov
in
test
aam
sub
sbb
dec
jne
popa
add
gs
pop
in
jmp
mov
out
lock
lahf
(bad)
and
jle
jnp
and
fs
inc
or
(bad)
call
xchg
hlt
jmp
js
jbe
pop
and
das
jl
inc
or
test
retf
mov
shr
imul
dec
inc
mulps
mov
cld
stos
mov
push
push
add
adc
or
cmp
gs
cmps
stos
xchg
rcl
fxtract
mov
jno
adc
das
inc
pop
jo
dec
adc
stos
fist
retf
loope
hlt
add
shl
inc
push
xor
outs
push
push
dec
dec
and
mov
mov
pop
(bad)
xchg
(bad)
sti
mov
sub
jno
dec
sbb
ds
out
stos
shl
jmp
mov
sub
je
jl
jbe
and
in
mov
lods
div
rcl
xor
pop
adc
popa
add
push
sbb
cmps
stos
xchg
mov
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
cmps
into
mov
fcmovne
mov
movs
mov
xor
pop
push
pop
adc
cmp
mov
ret
cmc
stos
idiv
mov
inc
jg
dec
gs
jne
jno
imul
mov
mov
xchg
test
sahf
(bad)
jns
sbb
push
cmp
ins
ds
mov
mov
xchg
or
shl
push
sub
jne
add
jnp
mov
fwait
aad
in
xchg
mov
movs
sti
aam
xor
push
sub
jne
add
jnp
out
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
popf
retf
sahf
mov
sub
cmp
cmp
add
sbb
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
or
and
sub
add
and
or
stos
mov
fwait
call
sahf
(bad)
sub
xor
inc
sbb
daa
add
or
fld
mov
adc
fdivr
arpl
or
jne
fs
push
stos
in
cmc
vpmaxub
scas
jmp
sti
mov
sub
push
sub
dec
xor
add
push
inc
stos
lds
nop
jmp
mov
retf
int3
mov
dec
inc
push
add
and
or
stos
(bad)
mov
(bad)
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
imul
mov
mov
xlat
mov
fs
sub
pop
cs
das
inc
in
mov
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
push
iret
nop
mov
sti
(bad)
jp
inc
add
cmp
dec
add
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
out
stos
(bad)
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
mov
rcr
or
adc
add
sbb
in
out
sti
fist
sti
hlt
mov
js
sub
sbb
pop
adc
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
adc
movs
stos
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
and
fwait
mov
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
inc
pop
adc
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
push
fs
rcl
stos
in
cmc
retf
retf
test
jmp
xchg
shr
ins
cmp
dec
sbb
popa
sub
inc
or
mov
fwait
mov
in
or
movs
sti
mov
inc
sbb
cmp
add
jnp
mov
jecxz
stos
xchg
mov
xchg
jmp
sti
mov
inc
jne
sub
jne
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
sbb
dec
add
jnp
mov
mov
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
adc
jne
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
aam
movs
sti
mov
and
js
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
out
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
loope
xchg
jmp
xchg
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
sti
stos
movs
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
cmc
or
push
sub
jne
add
jnp
mov
fwait
mov
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
sbb
cmp
test
adc
or
fwait
aad
in
jne
add
sti
xor
stos
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
sub
test
mov
sub
inc
or
xor
mov
and
test
(bad)
aad
xchg
xor
dec
add
push
pop
pop
movs
jmp
cli
mov
scas
lahf
mov
lock
push
jbe
or
inc
rdmsr
sub
dec
dec
pop
out
mov
int
mov
lock
and
pop
inc
push
or
sub
sar
push
loop
dec
fisubr
mov
lea
iret
sbb
mul
lea
repnz
add
mov
pop
xor
push
outs
pop
push
mov
test
dec
in
and
push
gs
adc
mov
cmp
xor
sbb
sub
jne
cli
movs
jmp
inc
sub
pusha
sar
outs
jmp
sti
dec
hlt
rcl
stos
and
les
cli
sbb
xchg
and
xlat
sub
xor
xor
movs
add
xlat
jns
mov
add
cmp
lock
lea
add
inc
mov
stos
mov
mov
xor
stos
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
imul
aad
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
mov
cmc
retf
aad
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
aad
in
cmc
retf
test
xchg
jmp
stos
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
adc
cmp
add
jnp
mov
sbb
stos
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
mov
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
imul
cmp
add
jnp
mov
retf
aad
in
cmc
retf
test
xchg
jmp
jnp
or
push
sub
jne
add
jnp
mov
fs
in
cmc
retf
test
xchg
jmp
sti
mov
inc
sbb
cmp
add
jnp
mov
fwait
aad
in
cmc
retf
test
xchg
jmp
sti
mov
js
ss
adc
imul
pop
in
int3
xchg
(bad)
lds
stc
adc
jp
or
sub
push
push
push
(bad)
aam
lods
stos
mov
call
push
add
ins
addr16
sbb
add
cmc
test
iret
xchg
fwait
les
jmp
adc
push
or
clc
cli
clc
retf
call
lahf
rcr
xchg
lahf
in
inc
push
retf
in
mov
in
cmps
mov
fwait
and
(bad)
stc
adc
add
jp
sti
mov
push
sti
test
aaa
aad
stos
in
sub
into
fadd
and
push
or
test
fldcw
imul
fsub
jmp
mov
dec
mov
jne
fisttp
cmp
mov
(bad)
xor
pop
in
dec
add
mov
les
test
out
movs
fwait
aad
mov
cmc
adc
push
mov
fcom
std
test
movs
imul
in
stos
mov
xchg
jmp
or
xlat
fld
xchg
pop
cmp
sbb
fwait
aam
les
lods
mov
and
pushf
rcl
sti
out
movs
fwait
aad
aaa
dec
cmc
sub
pop
adc
test
out
mov
adc
fcomi
mov
(bad)
loope
jmp
ret
in
enter
test
mov
cmps
dec
mov
cwde
stos
in
dec
sbb
jl
or
sbb
sub
cmp
int3
popf
fmul
mov
pushf
int
std
mov
or
or
sbb
sub
cmp
int3
popf
fmul
mov
pushf
int
std
mov
or
or
sbb
sub
cmp
int3
popf
fmul
mov
pushf
int
std
mov
or
or
sbb
sub
cmp
int3
popf
fmul
mov
pushf
int
std
mov
or
or
sbb
sub
cmp
int3
popf
fmul
mov
pushf
int
std
mov
or
or
sbb
sub
cmp
int3
popf
fmul
mov
pushf
int
std
mov
or
or
sbb
sub
cmp
int3
popf
fmul
mov
pushf
int
std
mov
or
or
sbb
sub
cmp
int3
popf
fmul
mov
pushf
int
std
mov
or
or
sbb
sub
cmp
int3
popf
fmul
mov
pushf
int
std
mov
or
or
sbb
sub
cmp
int3
popf
fmul
mov
pushf
int
std
mov
or
or
sbb
sub
cmp
int3
popf
fmul
mov
pushf
int
std
mov
or
or
sbb
sub
cmp
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
pop
or
nop
inc
repz
push
ret
outs
scas
pusha
popf
push
lea
sub
(bad)
push
sahf
push
hlt
mov
mov
dec
and
jecxz
rcr
call
out
adc
add
jae
arpl
mov
shl
add
sub
cmp
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
cmc
outs
ins
or
pop
xor
ins
cmp
dec
jbe
and
push
push
pop
into
sbb
add
icebp
mov
jnp
or
or
outs
mov
sbb
test
lods
inc
(bad)
or
fcomp
add
pop
stos
or
loopne
xchg
push
aas
mov
shl
fmul
mov
inc
loop
adc
out
ins
mov
xchg
imul
add
jno
test
push
(bad)
repz
jae
(bad)
mov
mov
mov
pop
jae
lods
sahf
adc
mov
arpl
into
dec
jle
mov
inc
mov
pop
jg
or
push
dec
loop
or
sbb
add
mov
pop
adc
in
pop
or
(bad)
sbb
push
mov
fild
jae
mov
int
or
add
jo
(bad)
and
xor
push
outs
sahf
mov
movs
jae
outs
lods
pop
mov
push
mov
dec
or
loope
mov
iret
jbe
and
sahf
retf
out
cmp
fimul
mov
mov
jnp
das
rcl
sub
aad
mov
inc
loop
in
daa
or
add
outs
push
data16
mov
outs
rcr
xchg
dec
xor
push
(bad)
fild
outs
mov
cmp
shl
es
pop
in
xchg
fisttp
repz
pushf
sub
idiv
ins
les
add
push
sbb
rcr
add
adc
push
inc
ss
cmps
push
sahf
inc
or
mul
(bad)
or
ins
(bad)
xlat
cmp
cdq
test
iret
xor
sahf
mov
jle
cwde
xor
ds
enter
out
aad
add
xor
mov
leave
out
jecxz
adc
ret
push
mov
retf
add
mov
into
outs
mov
pop
cmp
cmps
adc
int
stc
lods
in
into
add
clc
mov
jae
mov
mov
mov
lock
pop
icebp
nop
lods
bnd
adc
xchg
repz
cmps
inc
lods
(bad)
into
jno
fbld
pop
outs
xchg
cmova
movsx
loopne
leave
pop
add
xor
cmp
inc
cmp
ror
mov
rcr
mov
nop
fimul
push
lods
pop
enter
sub
aad
dec
or
ja
cld
cmp
ins
mov
mov
jb
and
pusha
loopne
repz
sub
(bad)
mov
fdiv
iret
mov
cld
inc
jae
xor
or
into
jb
cmp
(bad)
mov
loope
arpl
out
dec
pop
push
out
mov
mov
leave
jno
cmp
jb
out
int
mov
sbb
dec
xor
fsub
pushf
out
cli
fwait
mov
into
mov
inc
jo
ret
pop
jg
out
push
mov
ret
scas
adc
mov
jae
or
pop
repz
jg
(bad)
leave
sub
popf
mov
arpl
push
xchg
out
mov
inc
xor
and
xor
(bad)
cmp
cmps
adc
ret
mov
outs
pop
cld
xor
push
leave
rol
mov
dec
repz
scas
sahf
loope
push
jl
sub
in
or
push
push
inc
jb
call
mov
xchg
aas
pop
xor
push
inc
jno
jbe
ficomp
or
repz
push
(bad)
retf
jae
cmp
loop
inc
fwait
push
sahf
arpl
xor
fistp
cmps
sub
mov
outs
cs
ret
test
jmp
out
push
and
xor
and
mov
pop
scas
push
sbb
dec
mov
test
ret
and
and
xchg
mov
out
mov
mov
arpl
ret
outs
mov
or
jle
mov
(bad)
sti
arpl
ficom
inc
int
jle
ins
ins
mov
inc
aaa
mov
mov
jno
loop
adc
mov
and
cmps
mov
lahf
add
push
mov
or
outs
loop
pop
fisubr
fwait
sbb
(bad)
cld
imul
inc
mov
xchg
in
xchg
fucomp
inc
or
ins
sbb
adc
and
loop
fcom
movs
sahf
retf
push
jge
(bad)
push
push
add
mov
jle
adc
das
adc
clc
or
mov
add
or
inc
int3
mov
push
push
and
je
pushf
jmp
into
adc
scas
jg
scas
ins
adc
out
shr
xor
pop
ror
ret
ss
cmc
cmp
xchg
sbb
retf
cmps
lds
scas
ret
shr
stos
cwde
and
sar
ins
push
push
popa
inc
int
daa
dec
outs
rcr
mov
in
dec
enter
adc
push
mov
jg
scas
fcomp
out
ins
pop
dec
mov
loop
ret
add
hlt
in
fiadd
jae
pslld
and
cmps
jle
mov
rcr
or
repz
and
push
pop
mov
jb
pop
sub
lock
or
xor
rcl
pop
xor
in
and
inc
push
(bad)
fidivr
xchg
cwde
ror
xchg
inc
fild
mov
movs
dec
push
sti
ss
mov
xchg
push
dec
fisttp
lahf
push
jecxz
add
loop
ror
cmp
mov
ficom
ds
cs
cmp
jle
out
arpl
sahf
and
xchg
sar
repz
push
pop
xor
into
in
sub
movs
scas
push
adc
cs
out
jmp
fild
add
sahf
fmulp
xor
jecxz
popa
dec
or
addr16
xchg
or
imul
jbe
xchg
jle
fwait
add
rep
push
mov
xor
jae
aas
pop
int3
mov
mov
xchg
(bad)
data16
sar
cmps
cmp
test
sbb
scas
repnz
mov
add
inc
xchg
movs
in
scas
push
mov
xchg
(bad)
sub
shl
xchg
jnp
and
out
in
pushf
mov
out
sub
cmps
mov
adc
aad
dec
repz
arpl
loope
and
cmp
fistp
ds
mov
fidiv
rcl
movs
pop
fucom
pop
mov
push
mov
sub
push
ds
mov
pop
iret
pop
xchg
or
ds
or
out
xchg
push
xor
adc
imul
pop
(bad)
push
repz
out
adc
jge
stos
push
fwait
mov
es
mov
push
mov
fisubr
dec
sub
outs
out
pop
dec
(bad)
lods
pop
mov
jae
in
sub
into
fnstsw
jle
outs
sbb
or
cmp
ret
inc
ret
sub
sahf
ficom
and
inc
push
fimul
daa
outs
xchg
pop
jl
pop
imul
or
pop
ins
inc
pop
setle
fwait
or
cmc
out
sbb
push
or
ret
cmc
mov
add
lods
pop
push
shr
jle
out
cmp
cmps
mov
scas
dec
int3
int3
xchg
fsubr
retf
lds
adc
inc
jb
xchg
mov
push
or
shl
or
adc
mov
mov
inc
mov
into
pop
aas
push
mov
scas
inc
xlat
pop
cmp
inc
add
and
fwait
and
adc
(bad)
outs
(bad)
pop
jmp
cs
xlat
push
xor
in
xchg
push
add
xor
into
retf
(bad)
xchg
ss
in
das
xchg
adc
xor
mov
dec
mov
jno
or
or
jecxz
rcl
ret
sbb
fwait
in
jecxz
and
jge
clc
lods
xchg
into
mov
adc
sub
pop
mov
jle
sub
sbb
repnz
add
adc
push
mov
movs
scas
scas
sbb
cs
lahf
mov
stos
jnp
jge
push
les
aas
fbstp
aam
movs
into
and
shr
retf
in
mov
and
sub
sub
mov
sub
adc
pushf
mov
mov
sub
xchg
add
mov
adc
cmp
xor
pop
into
es
and
aaa
popa
inc
add
jae
xchg
mov
dec
(bad)
(bad)
mov
mov
popa
push
sahf
mov
out
test
bnd
movs
call
(bad)
adc
(bad)
or
mov
shl
mov
mov
(bad)
movs
in
pop
xchg
(bad)
and
sbb
jmp
mov
pop
scas
push
mov
sbb
jmp
add
push
out
sbb
push
mov
stos
lods
mov
add
retf
dec
sti
xor
push
int3
jge
out
das
cmp
mov
mov
cld
cdq
fwait
xchg
jo
and
push
repz
aaa
ja
mov
add
mov
faddp
inc
lods
sbb
mov
or
fadd
pop
aaa
ja
ins
inc
(bad)
pop
popf
stc
ja
outs
add
stos
xor
shl
jns
cmc
cmp
xor
les
push
ror
mov
cli
sub
pop
and
jg
loopne
das
sbb
cmp
pop
jbe
add
pop
aad
retf
js
jecxz
fist
sub
sbb
popf
dec
mov
cmp
pop
mov
sub
inc
(bad)
daa
mov
xor
and
xor
mov
test
jmp
xchg
(bad)
add
aaa
cli
fdivr
push
push
mov
daa
sahf
dec
lea
arpl
xchg
xlat
jl
mov
mov
cmp
xor
pop
nop
clc
retf
or
scas
xchg
pop
xchg
movs
js
mov
gs
adc
ds
mov
aad
sbb
out
ret
pop
mov
rol
dec
clc
jbe
and
fld
in
sbb
dec
pop
sub
lods
push
imul
nop
out
mov
fmul
pop
imul
push
in
mov
pop
dec
sub
loopne
in
mov
call
cmp
jb
enter
loopne
mov
jmp
out
inc
fild
cmp
pusha
dec
xor
cmps
adc
aaa
neg
out
(bad)
fdiv
adc
mov
jge
cmp
out
fnstcw
xchg
ret
dec
sub
mov
mov
xchg
(bad)
ds
mov
or
ret
sbb
dec
(bad)
aaa
repz
into
jae
arpl
pop
mov
add
rol
shl
cs
dec
int3
mov
mov
adc
or
outs
repz
repz
bound
xor
dec
sbb
add
(bad)
std
outs
lds
cmp
mov
push
jno
jae
out
pushf
dec
sahf
xor
and
add
adc
xchg
aad
sbb
push
cmp
mov
sbb
aas
jae
push
in
popf
pop
push
fwait
icebp
cmp
cmp
jp
push
fist
or
and
inc
rol
and
aas
mov
rcr
ror
or
test
mov
bound
shl
pop
sub
push
(bad)
(bad)
cmps
jns
jb
xlat
ret
test
and
push
jg
movs
jo
es
scas
push
push
ret
cmps
and
sbb
lds
mov
orps
fistp
sbb
lods
jecxz
sahf
enter
pop
xchg
xchg
adc
loope
push
fisttp
dec
das
adc
add
clc
mov
js
stos
aad
xchg
add
fcmovne
test
repz
daa
jmp
mov
mov
push
xchg
or
ret
mov
popf
outs
lods
sbb
pop
jbe
add
push
scas
scas
rol
mov
fcmovne
dec
fcom
sub
neg
adc
sbb
mov
in
jbe
data16
inc
mov
imul
jp
mov
adc
rol
xchg
jb
cwde
pop
mov
jns
or
pusha
adc
arpl
pop
jg
loopne
bound
dec
jge
sbb
addr16
xor
test
pop
(bad)
(bad)
bound
push
mov
pop
mov
repz
pop
push
cmp
xchg
add
push
fld
sub
(bad)
imul
adc
popw
xlat
add
es
mov
mov
cmp
mov
shl
push
out
jns
stos
pop
jp
bound
mov
cmp
sub
pop
or
outs
rcl
mov
mov
data16
outs
fidiv
ss
mov
push
jmp
ret
dec
repz
dec
add
lds
loop
shl
retf
rdmsr
jae
mov
mov
xchg
mov
jb
fstp
pop
add
mov
pop
xchg
push
dec
add
sti
cmps
ffreep
into
and
push
ret
into
mov
cmc
xlat
jmp
mov
cs
daa
add
in
pop
push
popf
data16
arpl
mov
mov
jecxz
pop
fcmovb
dec
(bad)
add
jae
arpl
cmp
jbe
mov
out
jecxz
pop
imul
aas
scas
sbb
push
add
push
fwait
push
call
adc
mov
cs
mov
mov
fidiv
repnz
push
scas
adc
xor
data16
stos
add
xchg
ds
push
mov
xchg
sub
push
push
fimul
pop
or
ds
retf
mov
or
div
(bad)
inc
fisub
mov
mov
scas
pop
xchg
push
mov
adc
inc
scas
pop
cmp
add
loop
add
sahf
mov
fdiv
inc
fwait
mov
daa
mov
mov
dec
and
ret
btr
imul
fcmovu
repz
push
jg
jmp
adc
ds
ficom
data16
sub
xchg
test
out
inc
das
cld
loopne
xor
mov
pop
xchg
dec
sbb
mov
cs
xchg
jecxz
out
ss
(bad)
xor
stos
add
push
cmp
jecxz
arpl
jmp
mov
push
mov
xor
(bad)
mov
daa
shl
dec
repnz
(bad)
jge
sti
ficom
ds
push
jecxz
xor
dec
xor
dec
daa
or
fbld
and
popf
jae
ret
cmps
mov
cs
in
xor
add
mov
data16
sti
sbb
pop
mov
mov
sti
cs
jle
sbb
rcr
xor
fsub
sbb
inc
mov
out
and
cs
je
cmp
push
out
adc
inc
ss
push
mov
push
sbb
mov
mov
ficom
inc
jae
test
retf
dec
mov
inc
or
pushf
outs
movs
mov
pop
(bad)
jle
scas
pop
pop
jmp
into
add
sahf
stos
add
pop
add
clc
sbb
xchg
loope
adc
adc
ret
aaa
es
add
mov
mov
(bad)
or
mov
popa
xor
inc
cmp
lds
mov
into
mov
repz
push
out
push
imul
pop
mov
and
add
out
lock
mov
pop
outs
xchg
xor
xchg
dec
test
ficomp
xor
dec
mov
sahf
jo
dec
jle
outs
ret
mov
mov
fcmovu
aas
fistp
jno
es
sahf
adc
push
pop
add
adc
push
aad
add
push
rol
retf
mov
outs
xchg
push
rcl
pop
jecxz
xchg
pop
ret
out
(bad)
and
jae
and
push
jbe
mov
aas
sbb
jnp
(bad)
adc
lock
xchg
inc
mov
movs
scas
push
into
add
neg
mov
ret
jle
or
imul
test
pop
xor
xor
push
mov
pop
xchg
ins
sbb
cmp
sbb
icebp
add
adc
and
fucomip
arpl
scas
sahf
test
out
mov
test
mov
jae
arpl
push
inc
repz
loopne
jno
mov
and
das
ret
push
jbe
and
push
xor
push
and
dec
and
ja
scas
inc
rcl
fwait
out
inc
mov
inc
mov
pushf
pop
push
sahf
test
jne
mov
dec
or
arpl
adc
jae
stos
aad
pop
into
ss
mov
mov
add
push
out
and
sahf
inc
cmp
int3
add
push
jae
adc
inc
xor
imul
push
ret
dec
imul
sti
xor
inc
es
mov
lds
ins
lahf
jl
or
sbb
sub
dec
and
scas
adc
sbb
xchg
mov
mov
sub
mov
sahf
mov
cmps
mov
das
sahf
scas
xor
mov
jae
repz
mov
jmp
imul
pop
or
adc
aas
jo
push
shl
(bad)
loopne
push
ds
cs
mov
shl
add
mov
(bad)
mov
in
jnp
pop
cmp
sbb
jle
jecxz
push
fild
test
cmp
js
jmp
mov
pop
dec
or
ret
mov
shl
rcr
ret
out
jnp
adc
inc
mov
jno
xor
mov
int3
cmp
adc
push
pop
xor
mov
outs
arpl
sbb
adc
jae
out
in
pop
cld
jle
sti
xor
(bad)
out
and
ror
jae
arpl
inc
mov
(bad)
aad
xchg
bound
sar
(bad)
sbb
xchg
push
cmp
jb
out
and
mov
arpl
push
fild
aas
sbb
sbb
nop
cs
or
and
sbb
cs
pushf
push
rcr
in
repz
or
adc
(bad)
cmps
cmps
arpl
std
xor
in
aad
add
out
scas
push
bound
fldenv
lahf
jecxz
add
jecxz
stos
xchg
dec
push
push
cmp
dec
jle
mov
or
test
cwde
or
outs
rcr
dec
dec
stos
cmc
(bad)
and
adc
lahf
scas
fsubr
inc
outs
aad
fsub
adc
or
mov
mov
retf
daa
cs
mov
dec
repz
jne
fdivr
dec
ss
pop
push
push
test
dec
mov
jecxz
pop
xor
cmps
ret
add
sub
fisttp
not
and
mov
sub
pop
jl
repz
imul
pop
mov
push
int3
ss
and
dec
mov
cli
repnz
dec
iret
jge
pop
aad
call
push
and
mov
outs
xchg
call
ret
sbb
fucomip
inc
and
mov
retf
sub
add
jl
mov
dec
retf
dec
outs
(bad)
popa
mov
ss
jmp
xchg
ja
idiv
gs
dec
mov
mov
loope
jp
es
(bad)
cld
inc
arpl
out
scas
cmp
dec
addr16
sub
shr
out
scas
repnz
or
lods
call
jle
inc
out
clc
jne
js
inc
repz
jecxz
push
ficomp
xchg
sub
push
sbb
enter
out
(bad)
mov
sbb
stos
fisttp
jecxz
or
pop
jge
push
enter
fdivr
data16
pushf
mov
cmps
cmp
cmp
fdiv
cmp
fild
mov
fidiv
push
out
imul
pop
push
dec
dec
into
outs
out
(bad)
mov
dec
sbb
inc
mov
gs
cs
cmp
mov
mov
test
push
jno
ss
ja
loop
repnz
std
outs
fwait
in
into
in
fwait
test
dec
in
jge
lods
push
push
inc
inc
aaa
mov
xchg
leave
mov
push
mov
push
jne
pop
mov
xchg
jge
pop
aas
sub
push
xor
jo
shl
adc
jns
daa
inc
xchg
dec
add
sbb
inc
(bad)
xor
push
cmps
jbe
test
add
cmc
mov
mov
cmc
jle
jl
sbb
vmwrite
and
or
jecxz
push
stos
rol
sbb
popf
cmps
cmp
idiv
and
and
cmp
cs
xchg
lds
pop
ret
pop
xor
das
ffree
sbb
retf
out
mov
cmc
out
out
push
rcr
clc
jp
(bad)
pop
or
cmp
mov
retf
pop
jg
in
push
xchg
dec
js
push
xchg
retf
mov
out
pop
push
cmp
pop
xchg
dec
fs
scas
lods
xchg
xchg
jnp
fdivr
and
pop
dec
cmp
int3
out
mov
fidivr
call
add
jp
inc
(bad)
jle
inc
imul
sbb
in
xor
mov
inc
and
cs
arpl
pop
or
adc
ret
jne
out
stos
mov
ss
xor
scas
fcomp
dec
xor
mov
rcl
jnp
fstp
xor
inc
sub
cmp
fwait
inc
sbb
mov
push
mov
daa
mov
inc
jno
imul
adc
jecxz
rcr
jge
pusha
jne
adc
pushf
xor
mov
out
push
(bad)
add
pop
xor
cwde
push
lock
add
repz
mov
xchg
mov
retf
mov
out
push
loope
pop
add
and
lods
ret
add
push
jmp
jae
sbb
add
adc
retf
dec
cmc
jge
jo
jbe
or
scas
sbb
inc
nop
xor
mov
out
inc
dec
xchg
sahf
jns
xchg
ret
(bad)
or
and
adc
cmp
sahf
cmps
mov
mov
mov
pop
push
ret
test
mov
ret
jb
jae
shr
mov
sbb
in
sub
pop
dec
inc
xor
cmps
loop
push
add
cmp
test
jle
jmp
imul
call
in
rol
cmp
retf
shr
adc
outs
(bad)
or
dec
mov
call
and
xor
lahf
scas
push
sbb
dec
cmp
mov
inc
or
adc
enter
pop
xchg
ss
outs
ficomp
fild
sahf
mov
xor
hlt
fmul
rol
xor
pop
cmp
sub
sahf
mov
and
push
in
mov
arpl
into
stos
adc
into
(bad)
lods
jnp
mov
sbb
dec
jbe
jecxz
pop
mov
iret
lea
jbe
fcomp
sahf
xchg
rol
push
sbb
add
adc
inc
inc
xor
add
adc
jg
in
pop
mov
jp
mov
fcomi
ret
inc
xor
ret
neg
jae
arpl
mov
jno
outs
ret
pop
(bad)
and
xchg
fs
mov
push
xor
sar
and
inc
cmps
jns
cmps
movs
lods
push
cli
icebp
xlat
aas
mov
sub
out
scas
xchg
add
push
pop
add
(bad)
adc
mov
out
dec
cs
push
jb
mov
cmp
(bad)
out
push
arpl
or
gs
cs
add
jne
shr
pop
hlt
add
dec
js
add
ins
int
lods
cwde
stos
add
adc
mov
pop
mov
aaa
mov
(bad)
fisubr
dec
inc
sub
outs
add
aam
(bad)
scas
popa
test
idiv
jecxz
outs
mov
jle
scas
movs
mov
rol
sahf
push
xchg
jg
mov
add
bswap
popa
sbb
and
mov
fimul
pusha
xchg
fiadd
cmp
adc
sbb
adc
popa
adc
mov
jg
xor
fild
ror
mov
jecxz
rcr
repnz
scas
jmp
and
(bad)
mov
cmp
outs
sbb
push
jp
pop
das
pop
popf
dec
loop
(bad)
aaa
arpl
sbb
cli
mov
(bad)
aaa
js
retf
inc
lods
push
dec
es
fiadd
lock
push
ficomp
lods
jbe
scas
or
jmp
mov
and
adc
sahf
fcomp
(bad)
jbe
jecxz
dec
sub
(bad)
ss
arpl
push
out
inc
mov
xchg
pop
push
gs
lea
cmp
xor
fild
sbb
sti
push
cmp
dec
xchg
add
inc
pop
xchg
xchg
xor
movs
sahf
mov
mov
lahf
mov
fwait
(bad)
jnp
push
mov
xlat
cli
(bad)
stos
jmp
inc
inc
(bad)
pop
fsubr
sub
or
outs
gs
add
xchg
push
fistp
push
out
cwde
fiadd
jnp
out
scas
ja
ss
notrack
lods
push
or
repnz
scas
jle
jecxz
mov
in
arpl
scas
pushf
inc
(bad)
cmp
mov
mov
sub
ret
mov
sub
pusha
pop
into
outs
fsub
or
sbb
std
outs
movs
cmps
add
js
aaa
stos
addr16
mov
pusha
push
push
pop
stos
stos
cmps
outs
and
xchg
sbb
outs
push
shr
xchg
inc
fimul
popf
ror
aad
adc
ret
sbb
inc
jmp
(bad)
jge
mov
mov
and
mov
mov
adc
call
shl
(bad)
inc
xor
mov
lds
push
xchg
dec
mov
xchg
add
pop
jge
(bad)
ficomp
popa
dec
mov
add
mov
cmps
cmp
out
lock
popa
adc
mov
(bad)
in
pop
xor
aas
and
shl
cmp
arpl
jne
ret
cmp
xchg
outs
dec
(bad)
mov
pusha
jle
dec
imul
shl
fdivr
aaa
hlt
bound
data16
fild
xor
call
add
test
push
ror
cmp
add
out
push
in
cld
fwait
xor
call
ins
imul
add
ds
sub
test
xor
jae
add
outs
mov
mov
pusha
mov
xlat
xchg
retf
test
lods
js
nop
xchg
shl
jmp
inc
or
sbb
lds
xchg
dec
dec
imul
cwde
mov
inc
xchg
mov
dec
sti
es
cmp
int3
aaa
fsubr
jg
cld
inc
jae
cs
push
leave
mov
out
aad
pop
repnz
jmp
fist
jnp
mov
repnz
ss
loopne
push
mov
push
mov
mov
mov
xchg
sub
out
mov
dec
fisubr
les
daa
daa
pop
jg
out
sbb
ficom
adc
jp
jo
pop
repz
sub
cmp
add
pop
jae
mov
sbb
pop
pop
jns
jp
outs
out
adc
(bad)
std
xchg
sbb
mov
or
push
add
shl
add
or
es
xlat
test
dec
and
sub
ret
int
push
push
pop
hlt
xor
adc
mov
mov
and
cmp
xchg
mov
add
jae
mov
jb
xchg
loopne
jnp
sar
mov
sbb
mov
repz
add
cmp
cmp
pop
ret
mov
inc
inc
(bad)
imul
popf
pop
pop
imul
and
jecxz
sub
int3
push
scas
gs
fiadd
fidiv
fild
and
or
or
jnp
fsubr
in
arpl
push
or
lock
sbb
(bad)
sahf
mov
repz
(bad)
(bad)
repnz
shr
xor
inc
ins
dec
jbe
test
adc
cmps
cmp
pop
cmp
retf
jmp
dec
repz
(bad)
stos
pop
push
cmps
pop
in
cmp
imul
sbb
lds
into
jnp
imul
inc
data16
xchg
retf
mov
mov
cs
fidivr
bound
jmp
out
mov
mov
fxch
xchg
pushf
xchg
cli
daa
jmp
and
lods
jbe
xchg
out
adc
movs
mov
fsubr
pop
aas
(bad)
scas
addr16
cmc
or
iret
mov
push
sbb
aad
movs
cmps
daa
leave
ffreep
push
push
loope
in
test
mov
pop
add
sbb
mov
dec
es
pop
gs
dec
inc
clc
push
loopne
ficomp
repnz
mov
pop
cmp
in
cli
test
adc
push
mov
jnp
and
adc
inc
add
fwait
xlat
xchg
stos
mov
shl
(bad)
retf
mov
mov
mov
push
jge
cmc
dec
push
dec
fstp
js
outs
enter
mov
add
arpl
in
in
ins
dec
xchg
js
mov
push
mov
push
add
cli
cli
and
es
ss
mov
inc
jo
movs
cs
dec
(bad)
cli
and
cwde
add
mov
enter
cmps
in
or
sar
aas
xchg
fmul
cmp
mov
sbb
and
xchg
loopne
xchg
pop
inc
or
push
jp
fld
cmp
imul
sti
push
jecxz
xor
sahf
add
sub
sbb
movs
xchg
int
add
inc
iret
sbb
pop
and
fmul
sbb
sub
bnd
cs
push
xchg
dec
(bad)
push
scas
ror
out
xor
xchg
inc
dec
sub
sbb
das
imul
dec
cli
push
jmp
xor
sbb
mov
(bad)
or
div
xchg
mov
mov
pushf
out
mov
sub
inc
jno
imul
xchg
mov
jecxz
adc
xor
jbe
or
sub
test
jno
xchg
ret
mov
jge
stos
xchg
sti
mov
pop
xchg
cld
jo
xchg
int3
jne
movs
sbb
pop
push
rol
sbb
in
push
push
inc
jp
call
fadd
(bad)
outs
lds
xchg
rcr
fild
fimul
in
mov
xor
mov
xchg
pushf
bnd
call
retf
xor
fsub
dec
mov
das
aaa
(bad)
rol
sbb
dec
aaa
aam
sbb
xor
test
mov
lahf
lahf
rcl
(bad)
cdq
daa
pop
push
or
add
inc
popa
mov
das
shl
or
mov
test
xchg
popa
inc
adc
mov
fwait
pop
hlt
sub
adc
jmp
outs
aas
dec
add
int3
jnp
mov
mov
out
jmp
popa
aaa
add
cwde
dec
ror
jecxz
cmps
pop
xchg
sbb
add
push
adc
mov
inc
js
cmps
cs
dec
dec
scas
add
xor
jp
shl
(bad)
out
push
add
push
and
and
and
mov
push
int
dec
dec
jge
in
cdq
fmul
or
dec
aas
sbb
(bad)
and
das
shl
push
arpl
pop
inc
pop
mov
mov
xor
dec
or
xlat
stos
es
mov
shl
cmp
mov
sbb
xchg
jecxz
push
iret
xchg
fcom
push
push
addr16
inc
pop
add
jb
addr16
repz
push
adc
shl
and
inc
xor
popf
into
push
ret
cmp
pusha
push
sbb
jecxz
nop
loop
push
ins
mov
adc
call
aad
dec
out
sbb
sub
add
arpl
jbe
and
sub
xor
lods
cmps
arpl
push
mov
sbb
jo
int
ds
out
in
mov
std
pop
push
add
mov
dec
repz
jae
mov
xor
jecxz
inc
fisub
sbb
pop
and
xor
(bad)
xor
jbe
cmp
mov
mov
iret
(bad)
push
call
es
(bad)
xchg
xchg
ror
sub
pop
push
mov
ds
into
mov
fld
push
mov
mov
jl
jmp
and
jae
pushf
in
push
mov
(bad)
sbb
jl
cmp
inc
iret
pop
(bad)
(bad)
and
and
sar
repz
mov
pop
cmc
arpl
cmp
or
pop
push
daa
dec
fcomi
and
sahf
retf
dec
adc
mov
dec
in
jle
xchg
sbb
sbb
ror
movs
loopne
xchg
in
adc
pop
xor
xchg
fild
mov
mov
nop
jne
fcom
lods
sub
mov
int
cld
or
mov
jle
jmp
loop
adc
dec
ss
scas
popa
out
xchg
faddp
into
pop
inc
jbe
push
popa
ss
mov
jg
mul
imul
sahf
pop
int3
icebp
mov
(bad)
(bad)
jbe
xchg
fild
jecxz
rol
mov
call
dec
dec
cmp
jg
scas
fwait
ret
or
repz
(bad)
sbb
sbb
(bad)
sahf
xchg
int
retf
sub
mov
jbe
shr
call
jmp
mov
dec
push
add
fs
fwait
push
sahf
mov
mov
jbe
out
push
outs
push
outs
xchg
div
jnp
sub
(bad)
fidiv
das
lds
sbb
mov
into
add
pop
jl
jnp
sar
push
loope
(bad)
push
or
sbb
inc
add
push
(bad)
mov
push
xchg
ret
pop
std
xchg
jge
xchg
xchg
jae
cmp
sbb
jle
xchg
dec
pop
cmp
mov
sti
pop
aam
mov
cmp
imul
xchg
jb
pop
in
ficomp
add
adc
mov
cmp
mov
adc
cmp
(bad)
pop
rcr
push
js
mov
dec
int3
jmp
lods
inc
pop
cld
sahf
cs
fdiv
lds
mov
loop
sub
(bad)
dec
int3
jmp
mov
clc
ret
lods
in
movs
sahf
into
mov
cmps
jle
imul
xlat
ds
sub
repz
stos
adc
inc
imul
inc
(bad)
(bad)
adc
repz
push
sub
mov
fstp
inc
mov
mov
ins
addr16
sub
(bad)
cs
cmp
int3
add
adc
outs
mov
xchg
bound
or
mov
stos
adc
dec
pop
and
push
data16
outs
ficomp
out
pushf
popf
cmp
mov
mov
movhps
outs
mov
and
cmp
outs
push
dec
adc
sub
dec
mov
test
and
add
out
lahf
push
cmp
sbb
nop
inc
pop
out
movs
ins
or
dec
jno
and
jae
cs
push
jmp
mov
test
mov
cs
out
test
faddp
mov
cdq
jo
and
jnp
or
push
jecxz
test
inc
sbb
clc
in
adc
mov
mov
ds
push
sbb
jbe
dec
sbb
not
cmp
pop
fist
stos
addr16
inc
stos
arpl
fcomp
cwde
xchg
inc
cmps
stc
cmp
fucomi
sbb
jbe
ss
test
pop
pop
out
mov
cmp
stos
cmp
movs
pop
mov
(bad)
mov
stos
scas
cmp
in
std
xlat
or
cmp
xchg
xor
jge
daa
jmp
movs
stos
(bad)
pop
inc
jp
jle
jmp
pop
test
and
icebp
inc
(bad)
jp
and
pop
(bad)
jnp
lahf
mov
mov
push
or
enter
dec
and
add
jbe
fnstcw
inc
ret
mov
(bad)
lods
mov
test
push
cmp
mov
sbb
inc
and
arpl
cmp
loope
push
mov
push
xchg
jne
mov
outs
add
xchg
add
dec
mov
xchg
(bad)
jecxz
rcr
xchg
pop
jno
jp
adc
add
jno
scas
or
mov
mov
cmp
das
nop
cld
and
mov
push
lea
and
mov
aad
sub
push
or
mov
int3
nop
fwait
mov
mov
daa
bound
sbb
aas
cs
xchg
dec
iret
mov
sbb
or
arpl
pop
lahf
mov
sub
mov
mov
jl
into
or
mov
ficom
xchg
jp
in
adc
cs
or
mov
xor
out
xchg
ficom
iret
jg
lods
push
mov
vmovntps
mov
jnp
xor
adc
xor
daa
dec
pop
and
in
xchg
xor
rol
pop
jbe
fcom
sbb
mov
popf
cmps
clc
iret
pop
cmps
retf
jecxz
mov
out
(bad)
(bad)
jecxz
pop
loope
enter
pop
inc
pushf
pop
into
mov
cmp
jecxz
mov
sub
(bad)
mov
outs
mov
xlat
scas
data16
mov
jae
arpl
push
push
adc
lock
mov
dec
xor
loope
test
mov
add
fwait
mov
into
mov
scas
xchg
adc
pop
lea
add
inc
cdq
dec
rcl
retf
sar
add
push
ret
iret
xor
xchg
out
and
cmp
adc
inc
int3
loopne
loope
xchg
lahf
or
popa
jecxz
push
mov
out
jno
pusha
fs
and
push
jg
es
inc
adc
imul
push
mov
push
sbb
sub
cmp
jbe
fcom
iret
fwait
add
dec
cmp
push
fsubr
pop
xchg
neg
cmps
mov
loop
sbb
out
inc
sar
psadbw
adc
adc
call
push
or
adc
ror
and
adc
xchg
test
pop
jl
(bad)
ds
test
(bad)
dec
pop
aas
js
adc
arpl
mov
(bad)
fidiv
mov
pop
rcr
dec
sbb
fmulp
adc
arpl
cmp
mov
ins
mov
sbb
pop
xchg
ss
jbe
and
sbb
in
inc
sahf
mov
pop
ror
repz
push
cmp
pop
add
mov
call
mov
sub
sbb
add
or
test
dec
mov
and
sti
cld
pushf
clc
adc
adc
fimul
ret
or
jecxz
mov
sub
jae
arpl
push
inc
cmp
stos
in
or
loope
shl
or
fdivr
mov
and
xor
cmp
enter
pop
ds
push
call
inc
sub
ret
pop
jnp
aaa
sub
repnz
fisttp
cwde
mov
sub
mov
lods
mov
push
(bad)
(bad)
mov
push
es
fst
adc
and
jp
mov
xor
scas
adc
add
jnp
push
(bad)
and
add
and
es
jecxz
(bad)
pop
cmp
mov
mov
xchg
mov
pop
outs
sti
mov
repnz
sub
jae
ins
in
retf
xor
push
mov
jo
adc
xor
(bad)
lods
ds
lods
test
scas
mov
dec
outs
xor
and
adc
sub
dec
inc
pop
xor
jnp
int3
add
mov
jmp
adc
cmp
and
jl
mov
adc
sub
dec
push
jmp
stos
cwde
jo
mov
or
mov
retf
mov
jecxz
rcr
mov
cmp
xor
and
dec
mov
rcl
jmp
xchg
xor
(bad)
jecxz
push
push
jne
jmp
push
not
adc
sbb
adc
mov
mov
jnp
or
push
stos
inc
and
mov
lock
dec
cmp
sbb
fnstenv
hlt
push
sub
mov
ss
mov
outs
xchg
pop
jmp
cli
ins
imul
icebp
push
ror
iret
jae
push
aad
int3
(bad)
inc
movs
push
push
sti
inc
jb
and
dec
sbb
shr
pop
push
xor
push
or
xor
adc
cs
mov
sbb
sbb
xchg
(bad)
fcom
pop
xor
xor
xor
(bad)
sub
or
outs
mov
push
push
add
arpl
push
mov
mov
arpl
jecxz
mov
dec
sbb
pop
push
dec
dec
xor
push
push
jae
call
scas
jecxz
mov
mov
mov
rcl
or
iret
int3
jmp
test
fwait
xor
add
enter
pop
xor
or
push
(bad)
fstp
repz
fwait
pop
or
xlat
out
cmps
shl
pop
sub
ds
call
push
push
lods
call
sbb
(bad)
cdq
jnp
fcom
sbb
and
jmp
cmp
lods
sahf
sar
outs
pop
sbb
mov
pop
xchg
cmc
dec
(bad)
pusha
lds
mov
or
inc
xchg
xchg
pop
out
adc
jnp
push
cmp
cmp
fsub
shl
or
push
arpl
mov
pushf
jb
repz
das
rcr
les
inc
and
ss
out
jmp
movs
enter
cwde
arpl
dec
mov
inc
mov
push
fnsave
pop
mov
inc
ficom
sbb
rcl
push
dec
jae
cmps
cs
dec
aas
sbb
aas
stos
push
adc
mov
fidiv
pop
mov
sub
rcr
mov
(bad)
push
xor
out
push
dec
mov
test
(bad)
and
mov
rcr
mov
push
test
push
push
adc
mov
in
push
mov
outs
mov
(bad)
and
aaa
mov
xchg
pop
push
jno
jp
or
or
and
sub
mov
ss
dec
jp
xchg
ret
pop
mov
mov
int3
jmp
sub
and
dec
cmp
xchg
adc
xchg
or
add
call
mov
and
mov
or
xor
push
iret
mov
fdivrp
cmp
arpl
jle
jno
cmp
iret
retf
xchg
xchg
cs
ret
sbb
ss
push
xchg
dec
inc
jae
mov
jge
rcr
ss
xor
movs
push
daa
mov
mov
mov
scas
mov
jne
outs
ins
add
or
sbb
cmps
loope
loop
mov
lods
adc
fisubr
(bad)
mov
mov
jecxz
sub
lods
aaa
arpl
pop
inc
xor
inc
fwait
push
es
add
pop
cmp
or
fcmove
retf
xchg
pop
ins
jne
cmps
sahf
ss
jbe
out
lods
jmp
aad
jl
cwde
xchg
(bad)
xor
into
push
and
jmp
inc
mov
nop
xor
out
scas
push
pop
dec
inc
sbb
out
sub
stos
sti
add
or
cmp
mov
cmc
sub
sub
into
(bad)
movs
jl
jns
imul
push
or
stc
mov
mul
mov
mov
or
or
rcr
ror
ds
mov
push
scas
push
mov
add
xor
lods
xchg
call
test
and
add
sub
arpl
cmp
in
outs
or
repnz
fs
xchg
rcr
mov
jno
xchg
jecxz
sbb
mov
sahf
mov
and
pop
cmp
or
stos
int
mov
bound
pop
push
jno
jbe
lahf
int
or
pop
in
pop
sti
rcr
xor
sahf
test
jo
dec
mov
shr
ret
lock
xor
jmp
and
adc
xor
push
cmps
dec
jge
(bad)
into
jge
lock
mov
or
hlt
add
lea
pusha
push
js
scas
cs
add
and
and
or
jae
sub
(bad)
jmp
pop
es
pop
lods
xor
jae
sbb
add
adc
cwde
aad
push
clc
mov
xchg
xchg
dec
into
push
ins
dec
pop
scas
nop
ins
(bad)
pop
sti
mov
stc
sub
add
xor
out
push
or
or
imul
test
popf
and
jp
or
test
xor
add
pop
ins
jo
je
mov
push
ret
and
cmp
repnz
mov
mov
dec
and
rcr
and
fisub
int
add
inc
(bad)
jle
pop
inc
cmp
arpl
fist
dec
repz
mov
pop
and
push
push
mov
fistp
mov
cmp
std
mov
sbb
jno
jbe
inc
push
push
push
outs
adc
lea
mov
inc
mov
sti
and
stos
repz
mov
inc
leave
outs
jbe
scas
push
lahf
inc
(bad)
ss
out
xchg
xchg
dec
mov
test
clc
retf
xor
xchg
or
ror
retf
cmps
xchg
fist
repnz
jb
mov
inc
popa
jecxz
add
out
sahf
into
(bad)
(bad)
ret
arpl
jmp
das
das
xchg
rol
(bad)
aas
rcr
dec
xor
xchg
mov
sbb
loope
sbb
cs
push
jmp
jbe
mov
or
pop
imul
addr16
pop
xchg
mov
lock
xchg
dec
jno
cmc
sub
into
mov
push
pop
out
xchg
mov
xor
xor
enter
(bad)
in
aad
or
fsubr
dec
int3
into
fsub
xor
test
sub
push
popa
mov
sub
test
mov
or
inc
icebp
loop
aam
ret
stos
and
popw
cld
ficom
adc
and
mov
push
(bad)
(bad)
out
sti
adc
jle
sbb
scas
push
sahf
push
ds
jle
ds
pop
mov
shl
xor
out
adc
push
xor
inc
jbe
adc
add
add
adc
out
dec
fimul
xchg
ds
push
fwait
icebp
sahf
mov
(bad)
or
in
pop
fistp
shl
(bad)
jne
add
fcmovnbe
inc
fld
dec
mov
or
adc
mov
push
add
push
cs
dec
sub
jl
mov
push
ret
dec
fbstp
fs
pushf
retf
loopne
mul
popf
add
ins
stos
mov
(bad)
and
and
imul
push
sti
pop
sti
xor
sar
or
pop
xchg
rcr
mov
ret
add
cmp
cmovne
call
fcomp
pop
aas
push
pop
ror
xchg
inc
ret
imul
das
push
cdq
lea
jnp
outs
xchg
xchg
lahf
enter
addr16
dec
imul
jbe
out
sahf
fistp
adc
add
add
sbb
inc
mov
jge
lods
retf
iret
sar
jae
in
into
ret
xor
inc
int3
jae
mov
or
imul
push
xchg
sub
data16
inc
adc
pop
popa
mov
in
sub
lds
push
inc
sub
add
fwait
dec
mov
(bad)
and
pop
add
sbb
inc
or
jl
inc
xchg
or
sbb
out
repz
dec
mov
sahf
push
inc
cmp
dec
jecxz
dec
in
lahf
into
mov
fsubp
sub
mov
push
mov
repz
push
mov
jg
ins
fstp
dec
loopne
cmps
xchg
dec
inc
movq
mov
mov
push
(bad)
jae
call
add
jge
xor
lds
push
es
ins
add
adc
jmp
pop
pop
pushf
and
pop
inc
int3
call
aad
(bad)
jecxz
rcr
outs
das
pop
and
push
jae
out
(bad)
xchg
fcmovne
das
loop
es
pop
or
repnz
sub
dec
cmp
aas
pop
ss
xor
inc
jae
call
push
push
sahf
jmp
jle
xchg
sub
mov
jb
push
mov
pop
sub
dec
repz
ret
ret
xchg
or
add
das
dec
jmp
sbb
dec
rcl
fwait
int3
repnz
push
into
mov
mov
ficom
cmp
sbb
lock
nop
pop
jbe
iret
cmp
and
into
sub
scas
jecxz
push
or
push
mov
and
call
data16
xor
call
add
retf
or
retf
in
(bad)
ror
sub
retf
push
add
cwde
mov
push
retf
sbb
mov
dec
sti
xor
jle
loop
icebp
out
cmp
push
inc
mov
xor
mov
inc
ret
cmp
mov
sbb
jecxz
test
push
ja
mov
pop
popa
mov
outs
shl
xchg
inc
sub
aas
mov
push
push
mov
and
mov
lods
push
push
add
cmps
jg
mov
mov
mov
mov
loope
enter
imul
dec
outs
add
mov
out
push
mov
in
imul
xor
xlat
addr16
mov
clc
inc
xor
pop
fsubr
jnp
or
mov
scas
shr
stos
adc
imul
mov
cmp
out
sti
push
adc
push
push
fdivrp
adc
and
adc
mov
cmp
dec
and
jp
ror
sbb
dec
test
fld
ins
test
inc
lods
loop
push
cmp
xor
fdiv
inc
pop
or
mov
mov
pop
push
push
mov
mov
jae
xor
fisttp
push
cmp
jecxz
xchg
(bad)
int
jae
imul
shl
inc
scas
adc
pop
jo
clc
cld
out
scas
or
retf
mov
mov
cmp
xchg
dec
adc
lods
repz
ficom
aaa
stc
lock
daa
daa
add
mov
outs
mov
mov
repz
inc
and
xchg
repz
movs
shl
shl
iret
mov
fdiv
and
cmp
xchg
pop
mov
movs
sub
movs
mov
shr
dec
push
arpl
out
loope
add
jg
xor
sahf
inc
mov
xor
jbe
xchg
shr
cmp
repnz
adc
out
mov
imul
xor
xchg
xchg
pop
push
pop
mov
mov
and
movd
mov
sti
mov
or
and
cdq
jae
mul
call
mov
scas
sbb
xchg
mov
pop
mov
push
dec
dec
es
icebp
lahf
xor
lahf
adc
inc
dec
xor
pop
xor
pop
mov
pop
xchg
cmp
jb
arpl
mov
arpl
mov
rcr
push
inc
pop
lods
adc
jl
jae
arpl
lods
pop
mov
ins
jp
xchg
dec
repnz
mov
push
xor
pusha
push
cli
and
int3
sub
adc
iret
sub
xor
test
dec
push
push
xchg
inc
(bad)
arpl
mov
sub
xchg
rol
idiv
push
dec
pop
push
xor
leave
mov
repz
sub
sbb
call
xchg
iret
jae
adc
xchg
dec
dec
dec
std
and
cmp
ds
div
lods
dec
fsubrp
retf
mov
fucomp
adc
jae
lock
movs
test
adc
push
inc
dec
xor
call
int3
lock
sub
dec
xchg
in
scas
dec
in
adc
add
fisubr
lahf
jmp
inc
push
mov
(bad)
out
jmp
adc
sbb
push
retf
push
adc
jl
mov
jmp
xchg
sbb
xchg
dec
xchg
dec
xor
add
push
pop
call
mov
or
bound
push
push
sar
call
mov
xor
lahf
or
outs
stos
aad
push
mov
sbb
adc
add
xor
retf
dec
dec
mov
or
mov
jne
int
aad
mov
aam
sbb
outs
lods
(bad)
adc
mov
out
xchg
sahf
jl
xor
scas
sar
pop
pusha
push
lea
mov
out
jecxz
popa
sbb
xchg
dec
jl
xor
imul
cmp
mov
repz
cld
xchg
and
data16
push
jg
dec
fild
imul
mov
stos
xor
xchg
das
push
lea
mov
cmp
adc
gs
rol
mov
push
dec
mov
fsubr
mov
mov
imul
mov
mov
dec
ds
scas
test
inc
push
push
cs
arpl
or
push
jmp
or
pop
daa
jbe
adc
mov
mov
jo
pop
outs
out
push
sub
or
shr
push
lock
pushf
retf
or
sbb
or
fisttp
dec
pop
jmp
mov
sti
xor
and
jmp
(bad)
xchg
int
mul
ds
pop
cmp
sub
cdq
add
push
mov
pop
and
mov
pop
ret
and
out
sub
inc
jns
mov
push
add
ficomp
mov
jbe
cmp
add
push
ffree
inc
sub
xor
lods
rcr
cmps
xchg
cwde
shl
push
pop
dec
es
pop
pop
or
push
inc
retf
idiv
pop
or
idiv
cmc
(bad)
test
sti
push
mov
cmp
inc
(bad)
fnstcw
push
bound
dec
xor
inc
sbb
mov
inc
xchg
ins
pop
pop
mov
mov
pusha
sbb
imul
xor
imul
retf
push
adc
xor
cs
pop
inc
dec
xor
scas
dec
sub
aas
xor
inc
inc
dec
mov
inc
add
aaa
into
mov
or
jnp
stc
popa
and
xor
inc
scas
jns
in
mov
cmc
pusha
jecxz
aad
push
repnz
das
push
mov
push
fwait
add
int
scas
scas
xchg
mov
adc
cmps
out
mov
jnp
sti
aad
mov
jae
scas
lods
jbe
faddp
jle
push
push
sub
es
imul
add
jbe
jp
neg
jmp
sahf
mov
ds
repz
mov
jecxz
sbb
mov
popa
addr16
jecxz
xor
(bad)
add
scas
jle
xchg
ins
pop
shl
sti
pop
xchg
jns
jbe
pop
ss
dec
mov
fwait
mov
scas
fcomp
add
xchg
mov
jecxz
nop
(bad)
inc
jmp
sub
jbe
data16
out
sahf
ss
sti
mov
dec
repz
pop
cmps
out
cmp
loopne
adc
mov
mov
aad
dec
and
or
push
add
jbe
shr
fdivrp
dec
jae
and
mov
mov
and
jmp
add
in
stos
pop
retf
jae
nop
jmp
bound
or
sbb
sbb
pop
jecxz
sahf
fist
adc
sub
es
arpl
push
hlt
mov
call
rol
(bad)
ror
xchg
inc
pop
pop
adc
jge
mov
sbb
dec
out
fwait
xor
or
(bad)
xchg
ror
mov
add
ss
push
mov
ds
or
cmps
imul
dec
pop
add
test
and
fwait
call
ss
sub
push
push
add
mov
pop
test
jmp
xchg
fbstp
mov
out
outs
xchg
fdivr
int3
dec
sbb
(bad)
or
outs
cmp
jae
gs
push
adc
push
dec
ss
movs
adc
and
(bad)
mov
mov
sar
stos
mov
mov
and
add
xchg
ds
cs
loop
jp
cmp
nop
fcmovb
xchg
ds
addr16
add
jg
sbb
lods
aaa
sub
sub
aas
mov
mov
fcmovnu
adc
dec
in
pop
jecxz
js
shr
adc
outs
das
out
push
inc
mov
inc
or
lods
jl
sti
dec
mov
push
pop
aad
and
rcl
dec
add
jae
out
push
lds
data16
mov
sbb
or
xchg
xor
fmul
fdivrp
paddd
arpl
aaa
fmul
fidivr
add
ins
pop
(bad)
and
clc
mov
pop
int3
jae
adc
ficomp
sub
xchg
inc
fidivr
sub
push
dec
sbb
test
ficomp
cwde
jnp
(bad)
in
mov
clc
jg
sbb
push
dec
ds
sub
pop
or
xchg
ror
adc
jg
addr16
enter
sub
mov
lods
ds
loopne
dec
jg
jne
jmp
imul
enter
cli
sub
xchg
repnz
je
div
mov
aad
push
ror
adc
cmps
daa
cmp
or
cmc
arpl
fwait
and
inc
fsub
jne
daa
pop
pop
in
int3
bound
jecxz
fcomp
cli
mov
pop
mul
sub
cli
lea
daa
dec
retf
xchg
loopne
xchg
pop
inc
or
push
jp
fld
cmp
imul
adc
imul
std
cli
push
sub
(bad)
xchg
pop
adc
or
sti
stos
mov
add
sbb
pop
jp
call
push
add
ret
test
test
sub
loop
adc
daa
popa
sbb
push
cdq
ds
jle
push
mov
xor
(bad)
xor
scas
add
jae
loope
out
xchg
cmp
or
ins
push
jo
repz
dec
cmp
mov
xchg
pop
push
xchg
icebp
mov
rcl
xchg
int3
icebp
in
in
sti
push
add
ss
push
fucom
xor
imul
sbb
scas
retf
arpl
and
sar
xor
dec
(bad)
mov
into
mov
fild
adc
dec
mov
cmp
cmp
(bad)
mov
dec
xor
and
into
adc
xor
mov
mov
xchg
push
sbb
int3
dec
stos
jecxz
cmp
mov
ja
sub
fnstsw
sbb
ret
das
ds
out
jle
and
pop
dec
outs
mov
sub
cmp
dec
xchg
sbb
add
sub
fidiv
loopne
inc
fld
mov
out
and
pop
ror
inc
dec
dec
je
jbe
sar
mov
sti
mov
cld
sbb
mov
loop
rcr
add
jp
jnp
pushf
add
ja
jbe
ss
leave
lods
(bad)
sub
gs
and
xchg
aaa
icebp
xor
mov
add
sub
enter
jp
cmp
ret
lock
push
out
push
xor
xor
push
mov
jecxz
jae
jmp
dec
out
mov
xor
xor
arpl
sbb
(bad)
repz
(bad)
xor
sub
repz
cmp
and
jnp
les
add
add
mov
or
jl
in
test
push
jmp
retf
popa
imul
lahf
jmp
cmps
aaa
out
aas
out
cli
scas
stos
adc
add
jae
call
mov
xor
dec
or
push
jnp
mov
ja
aaa
out
out
add
stos
ret
outs
mov
(bad)
retf
or
fld
jecxz
cli
out
shl
inc
dec
sahf
clc
push
cs
adc
jns
cwde
jmp
jge
(bad)
jp
jmp
fistp
dec
div
fiadd
dec
cli
jl
lods
add
imul
(bad)
and
mov
jmp
out
inc
fild
cmp
pusha
dec
xor
cmps
adc
aaa
neg
out
(bad)
fdiv
adc
mov
cwde
in
sub
dec
mov
movs
fistp
rcl
xor
xchg
pop
adc
xchg
fcom
mov
pusha
mov
fiadd
push
and
call
push
rol
mov
dec
mov
mov
test
sub
ds
dec
push
cmps
jge
jmp
push
outs
push
xchg
dec
mov
inc
xlat
xchg
adc
xchg
or
lods
push
push
pop
cmp
fidivr
addr16
pop
cmp
mov
loop
jmp
test
rcr
jno
xor
pusha
out
push
fiadd
ds
inc
mov
adc
es
and
push
(bad)
aaa
mov
ss
pushf
push
cmps
sahf
stos
(bad)
outs
jle
outs
stc
mov
jb
pop
push
ret
aas
push
fwait
out
jecxz
inc
push
pushf
enter
sub
push
dec
shl
push
and
inc
icebp
bound
or
mov
into
bound
les
ret
sbb
inc
repz
(bad)
aad
mov
mov
adc
mov
aaa
and
mov
dec
scas
xchg
pop
or
jecxz
rcr
or
push
fiadd
into
feni(8087
pop
lods
into
sbb
sbb
sbb
mov
or
mov
push
inc
clc
out
mov
repz
fsubrp
xchg
add
dec
repz
dec
push
(bad)
out
xor
retf
fwait
scas
pop
movs
ss
idiv
push
cdq
xlat
mov
addr16
pop
xchg
retf
add
xchg
stos
or
mov
lods
inc
pop
sbb
stos
sahf
vpshuflw
add
inc
jge
loop
push
jbe
jae
loopne
inc
fld
mov
out
and
pop
ror
pop
jge
jle
dec
adc
mov
push
mov
dec
in
bound
jnp
jl
repz
loop
shr
fs
xchg
popa
adc
dec
add
pop
not
dec
data16
mov
adc
xchg
mov
inc
jge
stos
ficom
cli
loopne
inc
push
sahf
push
jle
cs
jecxz
rol
mov
sub
xchg
inc
xor
mov
ds
cmp
xchg
(bad)
fcom
xchg
pop
dec
repz
imul
add
xor
push
jno
sub
xchg
stc
popf
jl
jns
jecxz
sub
ret
and
adc
into
jno
lahf
fcom
adc
mov
jecxz
or
xchg
in
fwait
jmp
ss
mov
xchg
sahf
add
pop
or
ror
dec
add
test
dec
lods
or
mov
pop
mov
xchg
ror
sub
jnp
pusha
fisubr
adc
mov
adc
in
ja
or
fisubr
pop
sbb
out
mov
enter
test
xchg
dec
bound
mov
mov
or
rol
fxch
(bad)
scas
adc
mov
mov
pushf
lods
pop
fist
push
ret
add
rol
and
out
(bad)
xchg
mov
mov
mov
or
iret
and
sub
ret
icebp
mov
push
add
jae
lahf
jecxz
adc
sub
(bad)
dec
das
xchg
push
scas
pop
int3
jae
outs
repnz
jmp
clc
dec
arpl
sbb
imul
data16
push
pop
xchg
repnz
popa
sub
(bad)
out
int
daa
frstpm(287
sub
sub
cmp
push
mov
xchg
call
es
cmp
jl
and
ret
out
sub
(bad)
in
and
into
fwait
mov
jbe
mov
popa
inc
or
data16
cs
test
in
jns
add
sbb
les
adc
push
ins
xor
cmp
sbb
xchg
xor
jl
pop
mov
in
sub
outs
xor
movs
adc
inc
cli
fsub
push
(bad)
sti
pop
daa
rcl
sub
adc
cmp
(bad)
xchg
ins
adc
inc
into
mov
push
adc
cmps
outs
mov
pusha
inc
sub
add
je
pop
xor
mov
outs
dec
or
cmps
cmp
or
rcr
fild
fcomi
(bad)
xor
mov
push
sahf
inc
jmp
push
outs
or
sbb
sar
sbb
psrlw
cwde
ficom
cld
test
and
add
pop
pop
mov
aas
and
iret
pusha
sub
iret
fimul
inc
push
push
dec
(bad)
int3
fwait
jg
test
adc
mov
js
movs
mov
xchg
jnp
es
popf
dec
mov
leave
inc
jl
stc
pop
cmp
fwait
idiv
and
(bad)
mov
mov
push
adc
and
adc
mov
pushf
inc
pop
stos
mov
push
icebp
jno
loopne
sbb
add
sbb
call
dec
jno
push
ins
pop
jl
cdq
fs
ror
jmp
xor
inc
mov
xchg
inc
push
mov
mov
rol
jo
push
xor
pop
add
in
and
clc
or
sub
rol
dec
adc
stos
dec
fidivr
sub
mov
inc
in
jle
outs
lds
mov
mov
mov
lds
jae
cmp
sar
mov
jl
repnz
cs
or
out
(bad)
fnstenv
inc
xor
xor
or
cdq
psrlw
or
shl
ror
push
mov
idiv
aam
xchg
sbb
push
ret
aas
add
rcl
cmp
arpl
jle
jno
cmp
iret
retf
xchg
xchg
cs
ret
sbb
ss
push
xchg
dec
inc
jae
mov
jge
rcr
ss
xor
movs
push
daa
mov
mov
mov
scas
mov
shr
inc
or
jge
test
lea
pop
data16
std
mov
out
(bad)
stos
outs
xchg
dec
or
aas
sbb
ror
es
dec
(bad)
stos
fsubrp
sar
scas
fiadd
jno
repz
or
jecxz
pop
or
out
in
cmp
push
sahf
mov
outs
push
ss
mov
icebp
jecxz
cmps
test
mov
stos
add
add
inc
(bad)
mul
loop
cmove
add
fistp
cld
pop
es
mov
dec
in
loope
retf
dec
or
jecxz
adc
or
sbb
and
add
push
es
pop
jmp
dec
pop
call
mov
push
add
aad
add
scas
cmp
push
pop
push
jg
sub
jl
cmp
cs
fistp
das
dec
popf
ret
jg
in
xchg
sahf
push
dec
out
jle
aaa
xchg
jnp
dec
(bad)
inc
jecxz
mov
scas
push
lods
stos
sti
das
dec
inc
inc
clc
pop
pop
scas
pop
ds
mov
xchg
mov
stc
or
imul
nop
mov
stos
jmp
or
mov
xor
loope
cwde
fiadd
into
and
pop
push
add
push
xchg
out
push
mov
rcl
addr16
and
push
mov
or
je
mov
cmp
imul
dec
pop
addr16
jne
push
data16
xchg
push
pop
cmp
jns
sbb
(bad)
xchg
or
out
mov
push
out
jecxz
(bad)
mov
pop
fnstsw
pop
pushf
mov
sbb
cs
or
adc
pushf
je
clc
fisub
fdivr
inc
ret
cmp
(bad)
(bad)
ins
ds
lds
xchg
mov
adc
sti
and
inc
arpl
sar
and
daa
cmps
or
push
sub
push
outs
pop
in
data16
leave
sti
inc
arpl
mov
(bad)
imul
scas
mov
xlat
mov
out
push
and
scas
push
inc
out
into
mov
lods
add
and
bnd
mov
xchg
jle
scas
fcomp
sub
push
aad
(bad)
js
and
push
jg
cs
fimul
scas
push
es
outs
rcr
xor
sahf
(bad)
inc
repnz
ret
mov
push
dec
xor
ficomp
(bad)
ins
sahf
xchg
mov
(bad)
call
jnp
popa
aaa
jno
cmp
xchg
aad
(bad)
js
mov
inc
mov
xchg
pop
jae
inc
cmp
arpl
fdivr
inc
ret
or
jl
jle
sbb
adc
dec
iret
int3
jae
pop
pop
push
imul
(bad)
arpl
fdiv
add
cmps
mov
jl
rcr
stos
push
jle
scas
out
loop
ret
jg
into
xchg
adc
jp
add
jl
jle
(bad)
rcl
cmp
adc
push
pushf
repnz
fdivr
xchg
add
arpl
add
rcl
jle
pop
enter
sub
push
aad
dec
mov
push
dec
push
jno
dec
adc
fwait
pushf
dec
jmp
(bad)
jno
xor
outs
jge
inc
test
xchg
sub
daa
icebp
jno
dec
out
sahf
and
cmps
jae
and
je
(bad)
repz
ret
repz
arpl
stos
icebp
mov
mov
das
mov
popa
imul
cmps
int
push
mov
iret
pop
(bad)
xor
retf
sahf
in
arpl
sti
dec
cmp
xchg
shr
jle
xchg
mov
mov
sahf
loop
jae
mov
and
sar
or
xor
cmp
bnd
das
stos
and
ds
and
sub
sbb
mul
pop
inc
mov
pushf
dec
inc
jae
add
icebp
mov
fs
rol
(bad)
sub
pop
jmp
dec
cmp
cs
ror
ret
(bad)
xor
and
adc
ret
repz
loopne
ja
xchg
push
cld
inc
lea
(bad)
lods
fadd
add
ficom
into
add
ffreep
push
jno
leave
and
jnp
or
sbb
sub
cmp
retf
xor
adc
scas
arpl
jne
out
data16
mov
xor
dec
pop
jle
jecxz
lahf
hlt
cmp
idiv
(bad)
in
adc
push
mov
adc
stos
pop
xchg
pop
mov
into
add
loope
dec
int
loop
mov
push
push
mov
jmp
stos
icebp
xchg
pop
jecxz
mov
sbb
icebp
xor
inc
das
cwde
mov
pushf
(bad)
adc
dec
(bad)
or
xchg
(bad)
jle
or
pop
sub
mov
and
mov
xor
sub
cmps
push
mov
rcr
cmp
int3
push
fsub
and
mov
ror
jae
sub
ins
sar
adc
das
xchg
mov
xchg
mov
test
(bad)
jg
push
mov
je
cmp
(bad)
(bad)
ins
ds
lds
xchg
mov
mov
push
arpl
xor
mov
pop
loope
push
mov
add
or
dec
xor
mov
int3
jb
xchg
mov
push
xor
ss
inc
mov
arpl
ficomp
bound
jle
(bad)
rcl
pop
add
jle
fmul
ds
push
movs
push
and
sub
outs
mov
jle
fwait
adc
cld
adc
mov
ret
jo
adc
dec
mov
scas
movs
fcom
jnp
push
(bad)
sahf
(bad)
hlt
call
add
cs
ins
sbb
mov
rcr
cmps
jecxz
inc
mov
imul
push
pushf
lods
push
mov
stos
dec
arpl
mov
sahf
fld
out
push
mov
xor
jmp
sub
(bad)
or
xchg
jle
sub
jae
arpl
pop
pushw
push
retf
mov
jecxz
popa
mov
dec
stos
ret
dec
adc
mov
jl
(bad)
sahf
idiv
push
add
into
repz
addr16
repz
mov
ds
xchg
sub
out
jmp
fwait
adc
or
std
cs
rcr
outs
pop
cmps
mov
jae
cs
fucomip
sub
xchg
jae
cld
push
ds
pushf
(bad)
jbe
scas
xchg
fld
cs
fbld
arpl
pushf
ret
inc
cmps
cmps
jbe
(bad)
out
cmp
(bad)
repnz
push
mov
dec
push
adc
lea
xor
xchg
jno
xor
jecxz
sahf
into
ret
repz
sub
loope
iret
mov
pop
fsubr
push
sbb
push
push
aad
(bad)
mov
jle
test
mov
int
mov
xchg
ins
popf
inc
or
jmp
dec
ror
repnz
fsub
and
mov
sahf
call
push
push
out
data16
cs
fistp
cmp
fmul
mov
mov
sub
push
shl
push
add
jle
jae
shr
and
jmp
sub
push
aad
or
scas
scas
mov
jno
mov
xor
cld
pushf
movs
lahf
pop
push
jle
popa
out
jecxz
sbb
ret
addr16
pop
push
dec
es
jae
retf
in
retf
cmps
cld
pushf
push
popa
inc
int3
dec
pop
loope
fsubp
jl
(bad)
sar
loope
push
add
lods
in
mov
xor
adc
jno
push
pop
jecxz
mov
pop
sar
aas
test
scas
mov
add
sahf
add
cmp
fcmovbe
mov
mov
push
jle
and
mov
dec
add
lahf
jl
xor
xchg
sub
ret
inc
fidivr
es
fimul
repnz
int
xchg
and
pop
mov
data16
push
mov
int3
adc
in
and
(bad)
stos
std
out
push
(bad)
adc
mov
retf
das
int
out
out
xor
mov
jae
arpl
ficom
retf
dec
shr
jle
mov
push
jnp
pop
(bad)
outs
push
in
and
inc
mov
and
je
cmp
(bad)
ins
arpl
ds
movs
fcom
jnp
pop
push
push
adc
pushf
cld
inc
or
mov
mov
dec
xor
out
popa
adc
sub
pop
outs
arpl
push
dec
or
xchg
sahf
push
ss
push
inc
outs
push
pop
into
(bad)
pop
shl
mov
out
lods
mov
lea
xor
cmp
retf
dec
rcl
push
dec
dec
push
(bad)
ins
sahf
xchg
dec
add
mov
out
and
push
jecxz
mov
and
mov
jecxz
pop
adc
mov
push
and
adc
je
test
stos
dec
jle
scas
xchg
arpl
xlat
scas
mov
(bad)
sahf
and
jmp
out
scas
xchg
rol
outs
sti
mov
mov
into
jle
and
fimul
mov
inc
push
retf
adc
scas
ficomp
and
fild
xchg
mov
out
and
mov
xor
inc
int3
jb
xchg
fwait
ds
xchg
sub
ret
inc
mov
dec
out
pop
push
add
fwait
pushf
bound
adc
dec
add
popa
fisub
scas
arpl
mov
imul
repz
and
mov
pop
outs
mov
or
jnp
push
mul
ret
outs
mov
mov
cs
lods
outs
cmp
pop
and
mov
mov
das
call
imul
push
pushf
fstp
jg
xchg
xchg
adc
mov
lea
fndisi(8087
xor
xchg
imul
push
pushf
stos
ja
sbb
cmp
xchg
xchg
rcl
icebp
dec
pop
outs
stos
xchg
aaa
add
(bad)
inc
in
es
mul
dec
xor
outs
rcr
push
ins
pop
jecxz
xor
pop
in
inc
dec
inc
jae
pushf
inc
fcomp
sbb
or
jecxz
imul
dec
jle
and
mov
sti
jno
jle
(bad)
ins
add
mov
ret
inc
mov
dec
out
pop
data16
mov
repz
scas
adc
popf
cdq
mov
outs
xchg
mov
sbb
rcr
cmp
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
test
outs
movs
push
rcr
loop
repnz
int3
adc
and
xor
inc
(bad)
push
sahf
sbb
ds
lods
pusha
mov
adc
daa
mov
stos
push
fwait
cmp
adc
or
and
mov
push
pop
mov
mov
jae
arpl
xchg
pop
cmps
imul
out
idiv
add
adc
and
xor
dec
shl
push
sahf
inc
mov
pop
or
mov
shl
aaa
pop
or
sbb
fiadd
into
mov
mul
js
hlt
xor
ds
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
cs
daa
into
xor
pop
retf
arpl
mov
cmps
push
pop
xchg
cmp
sub
sbb
adc
outs
std
inc
ror
xchg
ins
lods
js
clc
xor
pop
(bad)
or
mov
cmp
adc
add
jae
add
lods
idiv
xchg
or
rcr
or
(bad)
jg
adc
add
jae
arpl
sahf
inc
inc
mov
mov
dec
cmp
jecxz
rcr
or
xor
and
fnstcw
arpl
mov
mov
test
ret
push
xor
add
jae
arpl
sahf
inc
inc
mov
mov
dec
repz
rcr
ret
ret
and
iret
into
jae
arpl
mov
outs
loop
pop
dec
dec
repz
push
xchg
ret
push
(bad)
(bad)
and
adc
into
inc
jae
scas
scas
push
sahf
inc
mov
mov
dec
repz
push
xor
and
push
adc
into
mov
mov
mov
div
jecxz
sub
mov
(bad)
fsubr
adc
int3
into
jae
arpl
mov
mov
dec
repz
cs
(bad)
fidiv
(bad)
fsubr
adc
add
jae
arpl
mov
mov
dec
repz
rcr
adc
xor
es
adc
cld
into
jae
arpl
mov
mov
dec
repz
add
ret
icebp
xor
and
adc
add
jae
arpl
mov
pop
outs
xchg
pop
or
jecxz
rcr
ret
push
xor
lock
adc
push
sbb
or
mov
mov
dec
repz
pop
push
cmp
out
and
adc
add
jae
arpl
mov
mov
dec
repz
push
push
ret
icebp
xor
cmp
fdivrp
into
jae
mov
push
popa
inc
mov
pop
jl
repz
rcr
cmp
xor
and
(bad)
xor
arpl
mov
mov
dec
repz
add
ret
icebp
xor
hlt
out
adc
push
sbb
pushf
stos
test
mov
dec
repz
cs
ret
push
xor
sti
out
adc
add
jae
mov
mov
pop
or
jecxz
shl
(bad)
xlat
xor
fsubr
adc
fcmove
jae
arpl
mov
cmps
mov
pop
jl
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rol
ret
icebp
ss
add
jae
arpl
mov
mov
dec
repz
rcr
pop
push
xor
xor
fdivrp
retf
scas
mov
inc
mov
pop
or
ds
ret
push
xor
and
adc
add
jbe
arpl
mov
pop
outs
xchg
sbb
ds
rcr
ret
push
xor
and
adc
push
adc
sahf
inc
mov
pop
xchg
shl
ret
push
xor
cld
out
in
fiadd
retf
lods
pop
arpl
sahf
mov
mov
fiadd
cs
ret
icebp
xor
and
repz
into
jae
arpl
loope
inc
outs
xchg
pop
bound
rcr
ret
push
xor
and
adc
add
jbe
arpl
mov
cmps
mov
ds
rcr
ret
push
xor
and
icebp
fiadd
xor
arpl
push
jle
xchg
xchg
mov
add
shl
(bad)
in
xor
fsubr
lock
xor
arpl
mov
cmps
mov
ds
(bad)
cli
ret
push
int3
(bad)
and
push
cmp
into
mov
inc
mov
pop
or
jecxz
rcr
ret
or
(bad)
and
push
cmp
into
mov
inc
mov
outs
xchg
mov
jecxz
sub
and
out
push
cmp
into
mov
inc
imul
(bad)
cs
(bad)
jmp
push
cmp
into
mov
mov
xchg
(bad)
jecxz
sub
ret
push
xor
and
adc
add
fwait
mov
inc
mov
outs
xchg
pop
or
jecxz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
sbb
jecxz
rcr
ret
push
xor
and
adc
add
cdq
mov
inc
mov
pop
or
jecxz
(bad)
cmc
ret
push
int3
(bad)
and
adc
add
jae
inc
push
sahf
mov
outs
xchg
pop
xchg
rcr
ret
push
xor
and
adc
push
and
pushf
scas
push
fwait
scas
mov
pop
or
jecxz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
in
into
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
shr
adc
add
jbe
arpl
mov
mov
mov
int3
jecxz
sub
ret
or
(bad)
and
adc
add
jae
arpl
dec
jle
outs
xchg
pop
or
adc
shl
ret
push
xor
and
adc
push
cmp
push
sahf
inc
mov
outs
xchg
pop
or
out
rcr
cmp
xor
and
adc
add
jae
arpl
mov
mov
mov
ds
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
cmps
cwde
xchg
pop
jl
test
cs
ret
or
(bad)
and
push
sub
into
mov
push
push
imul
xchg
pop
jl
repz
and
ret
icebp
int3
sti
aam
adc
add
mov
stos
movs
sahf
inc
jno
jle
imul
mov
cmp
cs
cmp
ss
and
in
fiadd
ss
pushf
push
push
addr16
mov
xchg
xchg
pop
jl
or
jecxz
rcr
ret
push
xor
and
adc
add
adc
fwait
mov
xchg
xchg
pop
jl
or
jecxz
(bad)
in
push
int3
sti
fldz
adc
cld
retf
mov
inc
mov
outs
ins
pop
jl
test
cs
cmp
enter
in
and
xor
test
inc
jno
jle
outs
xchg
mov
pop
cs
(bad)
repnz
fcom
adc
add
(bad)
mov
inc
mov
imul
mov
ret
jecxz
sub
ds
xor
and
out
fiadd
xor
arpl
mov
cmps
nop
xchg
pop
jl
or
sbb
rcr
cmp
jmp
fiadd
xor
arpl
mov
pop
xchg
xchg
mov
jecxz
sub
ret
or
(bad)
and
push
and
into
mov
inc
mov
pop
or
jecxz
rcr
(bad)
push
xor
fsubr
push
fiadd
into
mov
inc
(bad)
mov
cmps
outs
xchg
pop
jl
repz
rcr
ret
icebp
xor
fsubr
adc
add
jae
bound
mov
mov
dec
repz
rcr
ret
or
(bad)
and
adc
add
jae
arpl
mov
mov
mov
ds
rcr
ret
push
ss
and
in
fiadd
int
mov
inc
mov
pop
or
jecxz
rcr
ret
or
(bad)
and
adc
pop
into
jae
arpl
dec
jle
outs
xchg
pop
or
jecxz
(bad)
push
ret
icebp
xor
and
push
fild
into
mov
inc
mov
pop
jl
cmc
ds
(bad)
sbb
push
int3
sti
and
enter
stos
push
sahf
inc
jno
jle
outs
xchg
push
sub
push
cmp
xor
and
adc
add
jae
arpl
mov
pop
imul
jmp
shl
ret
push
xor
push
(bad)
jae
pushf
scas
push
sahf
inc
mov
pop
or
jecxz
rcr
ret
push
mul
out
in
fisttp
into
jae
arpl
mov
mov
mov
xor
cs
ret
push
xor
and
adc
add
jae
arpl
mov
cmps
gs
pop
jl
repz
cs
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
cmp
xor
and
adc
add
jae
arpl
mov
mov
inc
repz
ficomp
ret
icebp
xor
and
adc
add
jae
arpl
mov
mov
dec
std
ds
(bad)
adc
push
int3
(bad)
and
adc
add
jae
ins
scas
push
fwait
dec
xor
ds
rcr
ret
push
xor
and
push
rol
into
mov
inc
mov
pop
xchg
ds
rcr
ret
push
xor
and
adc
push
fidiv
pushf
scas
push
pop
dec
jle
jg
pop
jl
imul
jecxz
sub
(bad)
pop
xor
fsubr
adc
add
bound
inc
mov
jl
pop
jl
repz
cs
cmp
and
and
push
int3
add
mov
inc
popf
mov
pop
imul
jecxz
sub
ror
xor
and
push
int
into
mov
push
mov
pop
xor
loope
or
(bad)
and
in
fiadd
into
jae
mov
mov
outs
xchg
mov
jecxz
sub
ret
or
(bad)
and
adc
add
jae
arpl
dec
jle
js
pop
jl
in
jecxz
rcr
aad
xor
and
add
mov
inc
mov
xchg
dec
repz
les
ret
icebp
ss
push
fnstenv
pushf
scas
push
xchg
dec
and
cs
ret
push
xor
and
adc
add
jae
jnp
push
popa
inc
mov
pop
jl
mul
jecxz
sub
(bad)
pop
xor
fsubr
adc
sbb
jae
arpl
mov
mov
dec
repz
cs
ret
icebp
ss
out
in
fistp
into
jae
data16
sahf
mov
outs
xchg
pop
xchg
ds
rcr
ret
push
xor
and
adc
add
jae
js
push
popa
inc
xchg
mov
pop
imul
jecxz
rcr
ret
push
ss
out
in
fiadd
into
jae
data16
sahf
mov
outs
xchg
inc
or
jecxz
rcr
ret
push
xor
ds
adc
push
shl
pushf
stos
dec
sahf
inc
jno
pusha
mov
dec
repz
rcr
cmp
ss
out
in
fiadd
xor
arpl
mov
mov
dec
repz
rcr
cmp
ss
out
in
fistp
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
push
inc
into
mov
inc
jno
jle
imul
jecxz
sub
loop
xor
and
adc
add
jae
arpl
mov
cmps
dec
xchg
pop
jl
sar
jecxz
(bad)
cmp
push
int3
sti
add
adc
push
in
jae
pushf
stos
jno
inc
jno
jnp
outs
xchg
mov
jecxz
lock
ret
icebp
frstor
out
in
(bad)
into
jae
lea
mov
xchg
xchg
jp
dec
or
(bad)
cs
(bad)
sub
(bad)
fsubr
push
cli
add
mov
inc
stos
mov
pop
imul
jecxz
sub
out
xor
and
fiadd
xor
mov
xchg
xchg
pop
or
lds
shl
(bad)
sub
(bad)
fsubr
xor
mov
inc
mov
outs
xchg
pop
or
jecxz
rcr
ret
push
fldenv
out
in
(bad)
jae
mov
mov
xchg
xchg
jbe
dec
or
retf
cs
(bad)
es
fsubr
adc
sub
jae
data16
mov
outs
ins
pop
stos
dec
repz
rcr
cmp
sbb
and
push
test
xchg
mov
xchg
xchg
je
dec
or
leave
cs
(bad)
and
(bad)
fsubr
cmp
add
mov
inc
mov
pop
xchg
ds
(bad)
xor
adc
rcr
xor
jae
arpl
test
lods
xchg
data16
dec
xor
scas
rcr
hlt
cmp
adc
inc
push
pushf
popa
lods
jno
or
ret
or
ins
xchg
pop
or
sbb
cs
cmc
dec
test
retf
out
stos
sbb
push
retf
arpl
mov
mov
aas
repnz
loop
ror
ret
(bad)
xor
and
adc
aad
in
idiv
push
retf
push
(bad)
jmp
cli
inc
mov
stos
jo
mov
xchg
pop
xchg
pop
cmp
push
pop
jo
jnp
mov
fisub
ss
sub
mov
mov
sub
pop
xchg
push
test
inc
and
pop
retf
daa
jmp
out
loop
xchg
pop
xchg
inc
mov
xchg
inc
call
pand
inc
out
jg
outs
imul
mov
jbe
jnp
stos
je
pop
fwait
stos
adc
push
stc
sub
pop
mov
sub
sbb
xchg
push
xchg
mov
fwait
pop
(bad)
jge
push
cmps
add
xor
and
jl
xchg
xor
mov
jnp
pop
push
(bad)
push
out
ja
jnp
jae
arpl
ss
sub
(bad)
jle
pop
xchg
cmp
sbb
mov
mov
mov
ss
fcomp
cmp
push
icebp
push
xor
data16
ss
jno
(bad)
jle
outs
std
pop
retf
and
inc
test
rcl
pushf
add
add
pop
out
ja
xor
mov
rcr
mul
mov
mov
jl
lahf
push
call
add
aas
fisub
ror
push
mov
nop
inc
mov
mov
bound
adc
sub
or
sbb
dec
adc
xchg
jno
dec
add
sbb
jo
jno
and
in
and
rcl
mov
cmc
sbb
jl
inc
jo
jno
and
fbld
into
sar
psrlq
push
xchg
dec
(bad)
dec
cmps
jb
dec
je
ins
shl
ja
push
rcl
in
push
cld
xor
neg
jg
jg
pop
idiv
bound
daa
scas
dec
cdq
pop
mov
jmp
les
rol
retf
sbb
xor
adc
dec
lea
pop
lods
dec
jae
and
and
fisub
iret
mov
(bad)
das
xchg
aaa
ror
outs
loope
mov
out
inc
xchg
arpl
xor
and
xor
jae
fst
les
loopne
loopne
mov
ins
lods
inc
mov
jae
add
daa
fdiv
sbb
pop
lock
out
mov
cmps
sub
rcl
pushf
pop
mov
cmp
ins
jmp
xlat
add
jno
jle
push
jl
sub
dec
scas
ja
add
sub
cmp
ins
jmp
shl
cmp
xchg
ins
lods
inc
mov
jno
jb
and
in
or
in
cmp
mov
int3
jb
popa
cli
bound
cmp
sbb
sar
sbb
or
xchg
adc
popf
inc
stos
dec
call
or
sbb
mov
jecxz
fidivr
loop
nop
push
xchg
pop
test
or
jbe
push
cli
ins
mov
cmp
ds
bnd
jno
dec
sbb
outs
pop
mov
pusha
mov
pop
fld
jmp
aam
ret
adc
xchg
lahf
push
cmp
mov
ss
add
repz
rcr
sbb
mov
out
jno
daa
scas
pop
shl
retf
add
loope
aad
mov
aad
rcr
outs
xor
dec
out
push
fidiv
push
int3
arpl
adc
cmp
mov
jecxz
lock
cmp
dec
jecxz
mov
lods
dec
xor
and
add
arpl
daa
std
inc
mov
or
outs
xchg
sbb
inc
sar
fs
mov
lods
pop
in
cmpps
loope
or
outs
(bad)
cmp
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
jmp
jb
jne
arpl
and
rcr
xchg
pop
rcl
or
pop
or
mov
test
pop
stos
jbe
inc
mov
es
sti
push
retf
out
idiv
(bad)
or
sbb
dec
xchg
pop
lods
jo
inc
mov
and
int
fucom
dec
rol
pushf
or
cmps
outs
pop
dec
jg
xchg
jae
push
int3
cmp
inc
mov
push
rcr
idiv
jmp
xchg
inc
cmps
push
mov
push
popf
push
pushf
jle
addr16
arpl
and
inc
out
fcom
cld
add
sub
jecxz
mov
mov
add
xor
es
ror
icebp
cmp
stos
push
mov
out
adc
add
push
nop
adc
cmp
inc
mov
xchg
mov
rcr
or
pop
mov
fiadd
into
jae
arpl
mov
mov
dec
repz
sar
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
in
ins
movs
jp
rol
fiadd
into
jae
pop
ficom
add
mov
cmc
cmp
or
sbb
dec
xchg
pop
gs
jbe
inc
mov
es
pop
(bad)
sub
cmp
or
mov
test
pop
addr16
mov
and
xor
mov
mov
jno
sub
mov
(bad)
push
adc
push
mov
daa
sahf
cmp
xchg
sub
xor
jnp
push
pop
mov
mov
das
jmp
jge
xor
fnstsw
sbb
xchg
mov
jno
addr16
xchg
xor
push
int
out
jmp
adc
pop
std
fs
jnp
(bad)
or
arpl
loope
mov
aas
fiadd
xchg
pop
fiadd
loope
or
(bad)
pop
mov
mov
mov
mov
and
sub
ror
dec
xchg
aaa
in
and
push
push
xor
and
sbb
arpl
fmul
outs
out
mov
dec
mov
mov
adc
scas
push
fild
fisub
lock
mov
outs
xchg
pop
or
jecxz
rcr
ret
push
xor
and
adc
add
jae
arpl
fstp
add
fs
outs
xchg
dec
(bad)
out
ins
mov
xchg
popa
mov
mov
push
sti
and
mov
mov
dec
repz
rcr
ret
push
xor
inc
mov
add
jae
arpl
mov
retf
pop
sbb
push
xchg
pop
stos
jbe
inc
mov
es
sti
pop
retf
out
idiv
(bad)
or
sbb
dec
xchg
pop
pusha
lods
ja
inc
mov
daa
in
xor
add
adc
in
cmc
cmp
or
sbb
dec
xchg
pop
stos
jbe
inc
mov
daa
jmp
out
idiv
ror
sbb
dec
xchg
pop
gs
jo
inc
lea
and
inc
mov
pop
or
jecxz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
fisttp
inc
mov
cmps
imul
inc
out
addr16
push
fsub
cli
and
mov
ror
sar
sub
and
jge
call
push
mov
inc
mov
pop
or
jecxz
rcr
ret
push
xor
and
adc
add
jae
or
push
sahf
inc
cli
(bad)
jle
or
pop
or
jecxz
rcr
ret
push
xor
and
(bad)
push
scas
push
sahf
inc
mov
sbb
rcr
ret
push
xor
and
adc
add
sbb
pop
scas
push
sahf
ss
sub
cmp
or
sbb
dec
xchg
pop
stos
jbe
inc
mov
and
retf
out
idiv
ror
sbb
dec
xchg
pop
gs
mov
and
adc
and
xor
xchg
pop
or
jecxz
rcr
ret
push
xor
and
adc
add
jae
arpl
(bad)
cmp
pop
xchg
pop
or
xchg
dec
rcr
ret
cmp
dec
mov
lods
addr16
push
fistp
fcom
das
jmp
jle
or
ds
rcr
ret
addr16
inc
out
adc
arpl
push
sahf
inc
mov
xchg
sub
rcr
ret
push
pop
(bad)
and
adc
arpl
mov
mov
dec
cmp
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
arpl
mov
ret
pop
or
jecxz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
mov
ret
push
xor
fs
sbb
sahf
inc
mov
pop
or
jecxz
rcr
ret
push
xor
and
adc
add
jae
arpl
sti
sbb
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
jbe
jecxz
rcr
ret
pop
gs
mov
es
sti
push
retf
push
(bad)
sub
cmp
or
sbb
dec
xchg
pop
stos
ja
inc
mov
and
aaa
cli
push
enter
sub
rcr
sbb
lods
popa
push
test
mov
es
sti
push
retf
push
(bad)
sub
cmp
or
sbb
dec
xchg
pop
stos
ja
inc
lea
daa
jmp
out
idiv
mov
push
ret
push
xor
and
adc
add
jae
stos
xchg
ss
mov
dec
repz
inc
rcl
cld
addr16
and
adc
add
jae
arpl
mov
imul
or
jecxz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repnz
rcr
ret
push
xor
and
adc
add
jae
arpl
jle
outs
xchg
pop
or
out
rcr
ret
push
aaa
(bad)
and
adc
pop
into
jae
arpl
mov
cmps
int3
xchg
test
mov
pop
imul
scas
push
into
inc
mov
push
inc
inc
stos
dec
ret
dec
rcl
push
inc
fwait
pushf
fstp
cmp
pop
fimul
xchg
adc
ins
mov
mov
icebp
test
rol
pop
stos
outs
adc
outs
stos
dec
rcr
frstor
clc
xor
popf
adc
jns
push
xlat
push
mov
enter
mov
cli
xor
xor
(bad)
(bad)
sbb
jl
jp
or
repz
mov
icebp
jmp
mov
shr
inc
test
out
ficomp
fadd
xchg
(bad)
(bad)
std
xor
movs
jb
adc
push
inc
loop
adc
inc
mov
xor
xchg
add
push
xor
jo
cmp
xchg
mov
jae
pushf
push
lods
popa
mov
xchg
ins
mov
sbb
stos
pop
push
int
and
fmulp
xor
pushf
scas
aad
dec
pop
dec
jle
xchg
add
stc
sub
fsubr
frstor
and
push
ins
inc
mov
mov
test
sbb
sub
fs
xchg
stos
fcom
in
and
mov
push
mov
mov
outs
xchg
pop
or
jecxz
shl
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
sub
ret
push
xor
and
adc
add
jae
arpl
mov
pop
outs
xchg
pop
or
jecxz
rcr
ret
or
(bad)
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
aaa
(bad)
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
or
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
or
jecxz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
xor
and
adc
add
jae
arpl
mov
mov
dec
repz
rcr
ret
push
push
ficom
jl
and
and
or
(bad)
sub
js
push
xchg
jo
aas
push
fmul
jbe
cmp
ret
cmp
popa
out
pop
popf
sbb
xor
imul
dec
sahf
jcxz
lods
adc
sbb
cmp
or
jecxz
icebp
sub
or
jp
(bad)
push
xlat
jb
ins
repnz
pushf
push
call
fcomp
mov
xchg
inc
mov
cs
push
lods
push
lock
sub
dec
dec
lods
cvtpi2ps
sahf
and
xchg
(bad)
arpl
inc
mov
push
rcr
int3
add
ret
lock
pop
arpl
mov
out
ret
inc
iret
loope
inc
mov
ret
dec
ror
jg
and
lods
xchg
into
scas
add
mov
jo
mov
into
adc
(bad)
shl
outs
pop
rol
jae
mov
mov
push
mov
cs
(bad)
mov
mov
mov
sahf
aam
xor
ins
dec
mov
mov
inc
mov
push
mov
repnz
jae
(bad)
aad
cmp
xchg
ret
inc
ins
lods
nop
mov
repz
cmp
outs
mov
or
arpl
inc
xor
pop
mov
stos
outs
pop
fdiv
ds
(bad)
mov
jg
dec
xchg
cld
xchg
scas
jae
cdq
xor
and
push
mov
and
loop
movs
popa
ret
pusha
mov
ret
adc
dec
scas
scas
dec
ror
fisub
repz
dec
arpl
push
(bad)
and
xor
add
adc
jecxz
repz
ret
pop
ror
mov
pop
xchg
dec
arpl
push
(bad)
and
xor
add
adc
jecxz
repz
ret
pop
ror
mov
pop
xchg
dec
arpl
push
(bad)
and
xor
add
adc
jecxz
repz
ret
pop
ror
mov
pop
xchg
dec
arpl
push
(bad)
and
xor
add
adc
jecxz
repz
ret
pop
ror
mov
pop
xchg
dec
arpl
push
(bad)
and
xor
add
adc
jecxz
repz
ret
pop
ror
mov
pop
xchg
dec
arpl
push
(bad)
and
xor
add
adc
jecxz
repz
ret
pop
ror
mov
pop
xchg
dec
arpl
push
(bad)
and
xor
add
adc
jecxz
repz
ret
pop
ror
mov
pop
xchg
dec
arpl
push
(bad)
and
xor
add
adc
jecxz
repz
ret
pop
ror
mov
pop
xchg
dec
arpl
push
(bad)
and
xor
add
adc
jecxz
repz
ret
pop
ror
mov
pop
xchg
dec
arpl
push
(bad)
and
xor
add
adc
jecxz
repz
ret
pop
ror
mov
pop
xchg
dec
arpl
push
(bad)
and
xor
add
adc
jecxz
repz
ret
pop
ror
mov
pop
xchg
dec
arpl
push
(bad)
and
xor
add
adc
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
shl
mov
cwde
xchg
nop
retf
add
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
(bad)
xchg
jb
in
outs
loop
pushf
or
int
mov
pop
jecxz
clc
and
jb
js
xchg
push
cmp
pop
sar
ins
loope
adc
and
push
iret
inc
call
in
pusha
pop
xchg
imul
ror
or
outs
loop
adc
and
push
iret
inc
push
bound
xchg
jb
pop
ror
jg
outs
loop
adc
and
push
iret
inc
push
bound
xchg
jb
pop
ror
jg
outs
loop
adc
and
push
iret
inc
push
bound
xchg
jb
pop
ror
jg
outs
loop
adc
and
push
iret
inc
push
bound
xchg
jb
pop
ror
jg
outs
loop
adc
and
push
iret
inc
push
bound
xchg
jb
pop
ror
jg
outs
loop
adc
and
push
iret
inc
push
bound
xchg
jb
pop
ror
jg
outs
loop
adc
and
push
iret
inc
push
bound
xchg
jb
pop
ror
jg
outs
loop
adc
and
push
iret
inc
push
bound
xchg
jb
pop
ror
jg
outs
loop
adc
and
push
iret
inc
push
bound
xchg
jb
pop
ror
jg
outs
loop
adc
and
push
iret
inc
push
bound
xchg
jb
pop
ror
jg
outs
loop
adc
and
push
iret
inc
push
bound
xchg
jb
pop
ror
jg
outs
loop
adc
and
push
iret
inc
push
bound
xchg
jb
pop
ror
jg
outs
loop
adc
and
push
iret
inc
push
bound
xchg
jb
pop
ror
jg
outs
loop
adc
and
push
iret
inc
push
bound
(bad)
pop
or
icebp
das
inc
aaa
rol
ret
(bad)
loop
adc
inc
std
icebp
retf
inc
inc
ret
clc
out
in
pop
ins
fidiv
push
mov
mov
jg
mov
add
es
fisttp
test
xlat
in
das
dec
scas
push
dec
ret
outs
xchg
mov
jb
pop
(bad)
lea
add
repz
dec
ins
sub
sar
outs
lahf
fadd
add
in
pushf
mov
pop
xlat
jb
pop
(bad)
aas
add
repnz
dec
dec
aas
int
jecxz
fwait
movs
retf
(bad)
xor
shl
jae
mov
mov
icebp
outs
loop
push
fcom
xor
jb
push
adc
out
or
mov
aam
mov
and
add
mov
adc
sahf
add
cmp
das
push
push
ror
div
sub
out
cli
mov
pop
add
xor
push
dec
retf
jge
ja
or
mov
hlt
push
nop
mov
ja
imul
ret
loopne
pop
jge
cmp
pop
sbb
cli
xor
mov
mov
jae
out
or
out
das
pop
cmp
int3
repnz
loop
adc
jnp
xchg
call
(bad)
(bad)
(bad)
aas
imul
mov
div
xchg
mov
popf
das
push
stos
(bad)
outs
dec
(bad)
push
pop
call
loopne
mov
movs
fistp
js
and
in
jl
mov
adc
retf
adc
addr16
pop
retf
sbb
outs
imul
and
pushf
jno
rcr
bound
imul
das
or
or
repnz
fmul
push
pop
push
iret
lods
clc
stos
mov
cmp
sbb
cmp
sbb
lods
(bad)
mov
das
jle
(bad)
not
cli
mov
cmp
inc
aas
add
add
cmp
out
das
dec
mov
jb
push
fstp
inc
(bad)
push
lods
fistp
add
push
dec
retf
jge
cs
sub
test
std
xor
cs
and
xchg
pop
dec
pshufw
mov
xor
mov
ja
or
jnp
xor
mov
mov
loopne
mov
packsswb
xor
loop
out
jmp
xchg
iret
enter
sahf
pop
push
mov
loopne
mov
bound
gs
inc
cmp
pop
jge
add
loopne
xor
mov
jmp
call
jp
pop
pop
stos
sar
jle
outs
push
pop
hlt
add
mov
push
retf
inc
add
mov
ror
stc
mov
mov
jg
cmps
and
aad
les
xchg
into
inc
inc
mov
xor
mov
jg
cmp
lahf
out
pop
rdmsr
scas
loop
push
iret
pop
push
out
scas
inc
dec
and
mov
mov
push
lahf
push
fld
inc
push
mov
inc
je
stos
jb
int3
(bad)
mov
aam
or
adc
mov
jecxz
add
pop
jne
xchg
mov
cs
leave
jmp
adc
in
std
mov
adc
jp
cs
push
retf
mov
daa
push
pop
pop
add
cs
push
inc
std
dec
push
scas
lahf
inc
mov
retf
xor
mov
(bad)
mov
sbb
xchg
dec
xor
rsm
sub
addr16
clc
or
jp
shl
dec
lahf
pop
pushf
mov
outs
sbb
adc
std
xor
jmp
jno
adc
ror
sahf
outs
jno
arpl
sub
nop
mov
ja
push
xor
lahf
stos
mov
ret
rol
(bad)
cmp
aam
(bad)
in
int
daa
push
inc
cmps
mov
loopne
int
imul
dec
xchg
das
out
outs
ds
rcr
push
jg
pusha
push
push
daa
mov
sti
out
mov
cmp
jae
mov
cmp
adc
adc
xchg
fild
dec
push
jb
out
dec
xchg
out
mov
add
dec
shl
pusha
jno
inc
mov
popa
inc
mov
fist
js
repz
mov
into
fisttp
aaa
adc
jb
call
shl
mov
inc
nop
cmps
ja
add
pop
mov
sbb
xchg
aad
mov
mov
mov
repnz
jp
lea
out
cmp
jbe
shl
or
jae
push
ja
addr16
iret
inc
xor
out
sbb
jge
cmp
jae
pop
dec
xor
loop
rol
std
in
mov
xor
loopne
loopne
jge
shl
push
ret
mov
cmps
adc
jo
xor
xchg
and
ror
inc
out
add
lock
shl
adc
out
jo
jns
scas
and
inc
adc
pop
inc
loopne
cmp
das
out
sub
ret
out
scas
and
sti
(bad)
out
sub
mov
mov
ja
sbb
jp
out
and
cmp
pusha
pop
int
std
mov
xchg
add
xchg
loope
out
pop
sbb
cmp
loop
adc
mov
inc
pop
ds
mov
shl
ror
push
outs
int
stos
mov
nop
inc
pop
sub
push
jae
mov
push
outs
loop
stos
(bad)
repnz
mov
(bad)
fistp
xlat
push
xchg
ins
mov
pop
lods
pop
call
fcom
into
mov
mov
xlat
leave
cmp
sbb
jg
outs
mov
add
(bad)
push
outs
add
xchg
adc
or
(bad)
outs
mov
jmp
scas
xchg
jmp
pusha
push
xchg
mov
pop
cli
out
xchg
mov
(bad)
out
pop
mov
inc
sub
jo
out
xor
pop
adc
xchg
push
cs
sti
push
xadd
inc
cmps
xchg
shr
cmps
inc
jg
outs
cmps
fistp
push
and
fadd
or
sbb
jp
adc
(bad)
jb
ins
imul
add
mov
(bad)
aas
inc
mov
jg
lahf
xchg
lahf
fadd
mov
out
xor
ss
stos
loope
lock
mov
(bad)
cmps
xor
repnz
sbb
mov
or
pop
pop
mov
jmp
pop
xor
or
ret
adc
add
int
and
push
pop
shl
sub
repnz
lahf
cmps
dec
mov
call
push
fcmove
push
mov
cmp
aas
dec
xchg
dec
or
ret
mov
int
call
pop
iret
test
xchg
add
inc
shl
mov
mov
mov
lods
push
mov
fnstsw
out
dec
(bad)
scas
cdq
shl
jmp
jmp
mov
popf
shr
mov
cwde
outs
loop
inc
inc
xor
xor
jb
jmp
jge
dec
pop
ror
mov
std
int
test
test
pop
bound
jecxz
jecxz
adc
push
dec
or
out
lahf
mov
xchg
mov
push
inc
inc
add
inc
push
or
pop
dec
mov
outs
mov
inc
jle
and
fadd
or
ins
jge
imul
cmp
cwde
cdq
outs
add
loop
push
jmp
ficom
cmp
sub
pop
fst
cld
repnz
(bad)
push
mov
stc
mov
inc
dec
ins
inc
xor
lock
dec
push
nop
and
push
pop
loopne
shl
push
mov
dec
ds
fcomp
dec
ret
fisubr
inc
mov
xchg
dec
cmp
mov
iret
mov
in
mov
cmp
cdq
cli
inc
leave
int
adc
sub
pop
test
cmp
jbe
pop
adc
pushf
hlt
mul
push
test
mov
loope
push
pop
add
sbb
test
mov
pop
scas
inc
xchg
sub
les
popf
inc
mov
adc
dec
pop
inc
(bad)
or
pop
and
and
fisttp
rcl
jecxz
out
cmp
in
cmc
neg
std
or
cwde
sub
ror
push
xor
inc
jns
jae
and
ins
leave
add
mov
add
in
jmp
and
jae
and
pop
test
mov
shr
cmp
leave
pop
push
(bad)
xchg
cmp
mov
into
loope
push
mov
jmp
ins
dec
scas
cmc
inc
hlt
imul
push
mov
(bad)
aas
pop
stc
stos
pop
pop
jns
fild
das
aam
pop
les
cli
imul
cmp
lock
mov
mov
pushf
jp
mov
mov
mov
inc
rep
scas
pop
sbb
adc
or
sub
dec
cmc
(bad)
imul
(bad)
hlt
out
ins
cmps
shl
cmp
cmp
inc
jp
mov
inc
mov
sub
pop
fidiv
hlt
(bad)
imul
push
and
mov
je
sbb
arpl
fs
test
inc
je
(bad)
sar
pusha
push
jb
mov
pop
out
pop
xchg
push
inc
icebp
jmp
dec
stos
jbe
adc
aas
pop
das
stc
aam
dec
mov
lahf
push
jo
addr16
fist
pop
push
pop
test
xor
rol
(bad)
cmp
add
std
mov
lods
jmp
fild
jmp
data16
mov
dec
out
mov
and
setnp
ja
outs
cmps
sub
daa
into
sbb
jle
xchg
sbb
int3
sbb
mov
jmp
movs
(bad)
or
repz
stos
pop
mov
push
(bad)
js
cwde
test
icebp
ins
sbb
pushw
jmp
iret
jns
or
xchg
aam
inc
add
sbb
pusha
sub
mov
imul
aaa
pop
inc
sub
dec
adc
out
push
dec
int
fidivr
stos
and
cmp
mov
mov
adc
push
fiadd
and
pop
dec
fbstp
out
xchg
pop
xchg
mov
inc
das
mov
adc
add
mov
arpl
jo
jb
bound
popf
ficomp
into
(bad)
adc
mov
ror
jecxz
adc
jne
lods
push
adc
jne
push
dec
mov
fsub
test
cmp
lahf
add
mov
push
iret
jb
xor
mov
pop
das
dec
add
pop
loop
fisttp
pop
mov
mov
inc
(bad)
mov
mov
add
loop
outs
fdiv
xchg
or
sub
ds
sbb
inc
shl
add
inc
enter
push
add
push
out
mov
loopne
or
jg
jg
aad
or
xor
add
push
xor
(bad)
pop
adc
dec
aas
das
ins
adc
dec
dec
xor
outs
sbb
mov
mov
call
(bad)
fsubr
push
int3
shl
out
sub
mov
cld
fwait
sub
dec
dec
or
adc
push
xchg
je
push
cmp
xor
call
popf
push
jp
inc
pop
movs
out
xchg
movs
dec
mov
sub
push
leave
stos
or
jp
mov
pop
test
sub
cmp
cmps
cdq
push
std
inc
jb
stos
xchg
pop
xor
int3
mov
xchg
pop
test
sub
ror
hlt
neg
out
(bad)
ror
and
add
mov
sahf
add
mov
outs
mov
jl
clc
je
shr
pop
mov
stos
or
into
sar
push
sbb
les
pop
adc
push
cld
mov
push
xchg
add
stos
xor
inc
or
pop
xchg
jno
add
iret
push
pop
cmp
mov
cmp
inc
jae
cmps
repz
loope
mov
loope
retf
push
shr
icebp
das
mov
cmps
fwait
push
adc
shl
mov
ficom
and
iret
retf
pop
mov
in
(bad)
sub
xlat
xor
imul
mov
jbe
jp
mov
(bad)
call
push
clc
dec
cmp
pusha
push
or
mov
daa
xchg
dec
dec
jp
xor
mov
jle
sub
lahf
adc
mov
xor
mov
daa
test
mov
pop
aas
mov
adc
bnd
lahf
lahf
inc
cmc
retf
scas
add
cmps
mov
clc
or
mov
cmps
and
mov
loop
jbe
mov
imul
mov
mul
jmp
sbb
push
(bad)
addr16
loop
(bad)
out
inc
xor
mov
mov
fstp
cmps
dec
xor
lahf
rol
aaa
mov
pop
iret
stos
ja
mov
sub
sti
sbb
ret
xor
add
bound
and
iret
push
mov
out
data16
xchg
pop
fdiv
(bad)
out
loop
loop
pop
scas
sub
mov
out
(bad)
mul
into
cmp
das
fs
stos
ret
mov
aas
mov
jl
addr16
inc
pop
jmp
aas
loop
mov
out
ss
adc
mov
xor
sub
fld
jb
call
mov
das
inc
xchg
xor
cmp
nop
mov
pusha
jo
xor
imul
in
es
push
xchg
cmovae
mov
and
out
out
jae
loope
jmp
pushf
push
or
popf
adc
cmp
fs
pop
jg
xor
ret
rcr
sub
add
sub
push
mov
dec
sub
push
or
(bad)
push
je
loopne
hlt
jb
or
jg
mov
or
aam
and
(bad)
test
aaa
xor
cmps
add
sbb
sbb
shl
mov
call
dec
(bad)
mov
inc
pop
repnz
xor
loop
push
jae
dec
ja
dec
cmp
iret
iret
stos
aas
bound
test
aaa
shl
not
adc
enter
push
call
popf
pop
ins
cmp
shr
pop
mov
cld
repnz
scas
clc
ret
xor
and
mov
pop
inc
jp
(bad)
inc
adc
xchg
repnz
adc
mov
sahf
fwait
sbb
or
out
rcr
ins
pop
rcr
(bad)
test
dec
push
leave
outs
mov
xor
stos
das
xchg
xlat
punpckhdq
xchg
pop
dec
jg
sub
nop
xor
mov
xor
sub
shl
das
jmp
rcl
xchg
inc
(bad)
push
cld
fucomip
inc
fild
mov
ror
data16
xor
cmp
jle
repz
push
scas
and
xor
sub
or
add
jg
outs
cmps
das
jb
mov
(bad)
test
xor
xchg
ins
repz
aad
mov
je
mov
xor
imul
add
outs
pop
ins
adc
or
jmp
out
add
fistp
inc
cmp
out
sahf
xchg
mov
das
int3
adc
mov
fiadd
mov
and
mov
pop
pop
pxor
mov
das
pop
cs
movs
outs
outs
lahf
jg
add
scas
ficom
mov
(bad)
out
push
jecxz
leave
adc
out
out
adc
or
fild
inc
imul
pop
call
lock
dec
das
stos
mov
(bad)
iret
pop
or
pop
mov
lods
inc
iret
(bad)
jb
pushf
fisubr
sub
jb
fiadd
sub
xchg
mov
or
je
cmp
mov
dec
(bad)
mov
dec
mov
ss
(bad)
aaa
xchg
iret
lea
out
loopne
adc
dec
retf
ret
sub
outs
lods
pop
add
and
iret
ja
stos
mov
jb
shr
sub
sbb
cmp
leavew
pop
retf
xor
test
jb
stos
xor
pop
pmulhuw
mov
sub
adc
les
daa
jmp
fmul
jb
xor
sub
or
ret
repnz
lahf
aam
pop
inc
daa
push
pop
push
add
mov
dec
ret
test
lock
ror
mov
mov
loop
adc
jb
or
mov
rcr
pop
mov
jg
xchg
inc
mov
xor
add
adc
loopne
lock
jg
shr
dec
add
scas
xchg
mul
add
mov
pop
cld
push
iret
pop
stos
jb
ja
ins
fild
mov
mov
jg
xchg
mov
xor
retf
cmp
push
shl
into
ret
or
inc
pop
inc
gs
fist
inc
mov
sub
push
pop
pop
adc
add
mov
jl
and
ja
inc
(bad)
test
ds
out
movs
pop
jp
jge
pop
dec
pop
mov
and
outs
scas
pusha
push
xor
fisubr
(bad)
fbstp
iret
add
xlat
out
pop
pop
lock
xlat
(bad)
push
sub
sub
xchg
jae
jns
push
jecxz
mov
adc
pop
push
(bad)
dec
mov
xchg
sub
inc
mov
(bad)
mov
xadd
addr16
sbb
cmps
jb
movq
ja
add
repz
in
xchg
iret
stos
pop
rcl
(bad)
out
jp
or
std
shl
xchg
push
nop
outs
fucom
(bad)
std
inc
xor
fist
xor
jns
bound
pop
lock
dec
das
stc
xchg
and
pop
cwde
retf
xor
push
loop
mov
scas
fmul
mov
pop
(bad)
je
imul
mov
sbb
test
(bad)
in
das
dec
pop
lahf
ret
sbb
mov
xchg
add
sbb
inc
cmp
daa
pop
jp
cmp
ins
call
cwde
dec
lea
adc
push
push
lea
push
retf
dec
jge
mov
mov
dec
mov
loop
dec
cmp
inc
jg
jl
rcr
fist
iret
js
mov
(bad)
jb
outs
rcr
in
pop
bound
fiadd
ds
aas
jg
stos
jp
jle
aas
cmp
stos
or
imul
cmp
iret
pop
(bad)
out
push
fsub
pmullw
daa
repnz
push
add
or
jo
cli
xor
dec
sbb
adc
cmp
fs
xor
mov
xor
sub
and
or
mov
loop
pop
les
(bad)
in
inc
sbb
or
fcom
fidiv
pop
iret
mov
jecxz
stos
das
jb
shl
and
sbb
cmp
inc
mov
imul
dec
ror
not
jmp
retf
scas
mov
add
test
push
inc
mov
add
out
loope
(bad)
(bad)
xlat
cmp
pop
mov
mov
les
push
mov
mov
out
or
shl
mov
mov
jo
mov
lods
fidivr
push
(bad)
loope
jbe
adc
mov
out
aas
pop
mov
mov
mov
push
push
xor
movs
rcr
xor
adc
jle
(bad)
xor
sub
adc
mov
jmp
cmp
or
cmps
in
jae
nop
mov
inc
bound
cmp
sti
in
sbb
call
cmc
xchg
or
loope
or
cmp
loop
(bad)
lods
lahf
sbb
jno
daa
inc
dec
pop
add
mov
cmp
mov
out
adc
jo
lahf
inc
cld
loope
xchg
hlt
pop
pop
push
mov
adc
lock
les
sub
addr16
pop
pop
in
icebp
mov
inc
repz
mov
mov
pop
mov
jae
imul
stc
dec
xor
ja
test
jp
push
loopne
les
daa
add
mov
in
push
ret
imul
and
xor
in
inc
add
dec
lods
imul
cmp
retf
stos
frstor
imul
add
ret
dec
movs
cmp
pop
cmps
icebp
pusha
push
cmc
push
aas
mov
inc
jns
ja
call
jl
add
outs
and
jmp
call
ds
sub
pop
scas
dec
cmp
dec
mov
jmp
lea
jns
(bad)
lds
inc
push
cmps
mov
cdq
and
pop
push
push
ja
fldcw
dec
repz
inc
jmp
xor
imul
out
adc
pop
inc
aaa
scas
ds
push
stos
mov
push
in
mov
pushf
(bad)
dec
jg
jmp
xor
and
and
inc
test
sbb
out
mov
pop
pop
xor
(bad)
out
(bad)
(bad)
mov
std
cmp
stos
push
cdq
pop
cmp
push
jmp
jb
(bad)
std
pop
pop
int3
xchg
jg
jecxz
adc
add
in
xor
inc
or
add
sub
lahf
mov
push
cwde
outs
and
inc
fimul
push
mov
stos
bound
movs
mov
or
outs
ins
lahf
lods
fidivr
(bad)
fild
je
lods
call
mov
imul
out
imul
inc
xchg
loope
sbb
pop
mov
xor
(bad)
(bad)
jp
mov
es
and
sbb
ret
repnz
fistp
inc
sbb
add
dec
pusha
add
(bad)
dec
inc
add
adc
popa
push
sub
ret
out
mov
jb
mov
pop
push
cmps
jp
aam
mov
cld
shl
int3
and
xchg
xor
das
sub
xor
loop
xor
inc
xor
sbb
xor
int3
and
add
sub
add
mov
push
pop
add
scas
fist
retf
iret
add
adc
out
loop
mov
iret
xchg
lods
movs
ja
lahf
std
scas
ja
cmps
stos
mov
fdiv
pop
sbb
mov
or
bound
push
loopne
fs
pop
jl
scas
lods
mov
out
ret
xor
bound
cmp
div
fist
imul
in
push
xchg
xchg
cmps
dec
les
inc
inc
int
push
int
fstp
pop
movs
mov
iret
push
push
call
dec
sub
sub
lahf
fiadd
mov
pushf
daa
ins
pop
stc
in
jecxz
jmp
xor
dec
cmp
in
lahf
adc
and
push
movs
dec
xchg
cmp
outs
not
add
sub
fwait
loop
push
dec
(bad)
mov
pop
push
rcl
movs
dec
outs
mov
pop
scas
lahf
not
sbb
jbe
je
std
inc
mov
leave
mov
out
jnp
cmp
xchg
les
xor
bound
int
jecxz
push
inc
inc
cli
mov
pop
loopne
bsr
xchg
sub
xor
xchg
mov
xchg
fldl2t
push
dec
pmaxub
sbb
jg
outs
neg
rol
add
neg
inc
adc
mov
cmp
aas
push
sub
xor
(bad)
jg
in
push
adc
adc
repz
or
stos
add
in
pop
mov
mov
push
scas
(bad)
idiv
cmp
icebp
ja
stos
push
xchg
mov
xchg
pop
call
(bad)
ins
sub
sub
mov
repnz
mov
inc
(bad)
fisubr
mov
out
(bad)
aas
das
es
gs
and
add
daa
jecxz
(bad)
push
lahf
pop
push
bound
xchg
(bad)
pop
push
pop
xchg
loop
pusha
pop
sar
xor
arpl
aaa
imul
jmp
xchg
push
dec
inc
sbb
cmps
xchg
cmp
cmp
add
xor
jp
xor
mov
mov
or
cpuid
add
mov
jns
addr16
daa
dec
add
cdq
jle
scas
mov
data16
sbb
sub
pop
ret
xchg
or
addr16
cs
xchg
xlat
aas
out
loopne
xor
mov
pop
cli
pop
pop
mov
push
sbb
mov
(bad)
xor
mov
popf
shl
stos
push
mov
sub
jmp
push
mov
shl
xchg
test
push
pop
inc
pop
daa
icebp
ins
pop
pushf
pop
out
or
and
cmp
dec
cmps
out
imul
mov
push
push
fbld
shl
(bad)
mov
mov
pop
inc
ja
into
hlt
push
cmp
cld
mov
mov
je
sbb
push
in
outs
or
mov
cmp
jmp
jmp
jb
pop
push
pop
jbe
mov
cdq
sub
inc
(bad)
xor
push
rol
repnz
into
push
rol
stos
pop
call
xlat
cmp
sub
dec
test
xor
mov
test
call
je
aas
xchg
ins
sub
cmp
jg
sub
pop
add
xor
and
push
inc
iret
aaa
ds
jb
data16
or
stc
mov
xor
ret
outs
lahf
sub
xor
(bad)
leave
clc
sbb
push
xchg
leave
and
cmp
push
ret
lods
pusha
lahf
sub
push
std
xor
fist
or
ror
or
out
shl
loop
addr16
cmp
cs
pop
inc
inc
mov
or
mov
call
shl
xlat
xor
sbb
jb
cmps
xchg
xlat
jg
(bad)
cmp
test
jns
push
pop
mov
daa
and
pop
nop
(bad)
push
sti
call
or
and
xchg
adc
push
imul
xor
jo
fwait
push
or
icebp
adc
mov
pop
cmp
or
pop
mov
stc
repnz
sub
nop
dec
mov
push
loopne
inc
inc
jle
jl
pop
loope
xchg
jnp
add
add
and
jo
aas
pop
mov
mov
(bad)
pop
mov
out
in
enter
jbe
stos
mov
imul
call
daa
ins
push
sub
ins
out
fwait
mov
xor
ret
sbb
mov
xchg
xlat
mov
mov
push
repz
int
jo
mov
mov
inc
je
mul
jo
fiadd
retf
pop
sub
retf
adc
fimul
push
add
loop
aam
push
or
and
daa
or
fiadd
pop
dec
cmp
pop
mov
inc
dec
ret
push
xchg
int
shl
daa
iret
stos
cmc
sar
mov
movs
out
rcr
or
push
dec
sti
call
pop
lea
bound
outs
das
pop
repnz
cmp
sbb
rcr
add
test
fist
ja
xchg
lods
push
xchg
sar
push
out
leave
adc
stos
mov
shl
cs
mov
sar
inc
sub
shl
loop
rol
aaa
push
pop
pop
mov
or
popf
xor
mov
pusha
mov
add
jo
fild
aas
arpl
cmp
fcomip
out
mov
mov
pop
std
fisubr
ficom
ss
pop
(bad)
in
fisttp
xchg
xchg
push
cmp
nop
and
or
(bad)
imul
add
dec
jge
mov
sub
xchg
mov
mov
(bad)
pop
ds
xor
push
jle
in
out
aam
mov
sbb
push
bound
lahf
add
mov
in
outs
das
or
inc
push
add
outs
lock
xor
ret
jg
cs
lahf
mov
cli
mov
(bad)
and
cmp
pop
ret
dec
pop
movs
mov
ja
nop
imul
and
sbb
jbe
aas
xchg
push
jg
iret
in
out
mov
sbb
push
jmp
retf
int
and
pop
dec
sub
jne
and
clc
xchg
push
repnz
pop
adc
adc
hlt
xchg
mov
mov
scas
cmp
jbe
xchg
out
pop
xchg
jo
mov
les
jns
mov
mov
das
fistp
loopne
dec
(bad)
jp
push
pop
ja
movs
imul
rcr
or
retf
dec
adc
fs
xchg
mov
das
push
es
nop
pop
stc
test
push
jmp
dec
aam
test
and
xchg
out
stos
jns
movs
fwait
es
les
repnz
push
add
xchg
xor
fidivr
pop
pop
mov
dec
das
sub
jmp
in
pop
cdq
(bad)
jbe
inc
jmp
inc
sti
xor
pop
jmp
les
cmc
pop
lahf
dec
xlat
lock
sbb
mov
imul
test
ret
xchg
mov
in
sub
xchg
or
fwait
lahf
ret
das
stc
and
pop
inc
inc
mov
xlat
daa
jle
loop
sub
lock
nop
or
adc
push
imul
ret
dec
fistp
in
xor
dec
dec
inc
cmp
loop
in
fs
ss
mov
je
scas
add
mov
mov
dec
mov
idiv
imul
xchg
retf
mov
test
rol
jno
mov
aas
mov
mul
addr16
stos
push
xlat
fild
pop
jb
outs
push
mul
jl
push
or
nop
add
jmp
ss
jmp
jp
or
(bad)
das
mov
dec
sub
outs
loop
adc
stos
mov
lahf
cdq
mov
sbb
lea
addr16
jbe
and
das
or
mov
mov
mov
loopne
xchg
sti
cdq
mov
jmp
adc
fist
push
jmp
ins
mov
fs
jp
fistp
repnz
sbb
adc
sub
mov
repz
or
xchg
push
add
ss
test
xor
pop
aas
pop
sub
mov
mov
sub
add
(bad)
into
pop
or
jmp
mov
shl
sub
scas
stos
pop
cli
int3
ret
pusha
and
xchg
push
inc
xchg
inc
add
ja
mov
call
inc
inc
push
dec
fistp
push
stos
bnd
and
cld
out
mov
xor
in
and
mov
xor
adc
cmp
push
inc
aam
mov
jg
sub
std
out
jo
retf
xor
pop
xchg
jb
sbb
mov
and
outs
ds
cdq
int3
cmp
lea
jb
mov
shl
mov
sbb
cs
cmps
scas
ror
jmp
pop
dec
dec
add
pop
loopne
lock
cmps
xchg
(bad)
loop
pushf
ret
pop
xor
inc
inc
test
fmul
out
dec
shl
sbb
stos
cmc
adc
adc
and
rcr
dec
aas
(bad)
out
sahf
ror
loop
cli
pop
and
push
retf
push
mov
dec
arpl
lahf
jg
outs
push
adc
pop
popa
in
and
xchg
inc
push
cmp
mulps
je
mov
jp
outs
pop
pop
inc
ffreep
mov
idiv
int3
add
das
jge
cmps
and
sub
std
arpl
test
call
out
movs
pop
ror
xlat
cmp
aam
adc
adc
dec
pop
jle
mov
inc
add
mov
dec
cmp
arpl
dec
mov
and
xor
ret
xor
jmp
cli
out
push
fsubr
cmps
call
lods
in
xchg
mov
std
mov
bound
pushf
push
ins
inc
push
jge
cmps
sub
jl
cmp
loopne
les
daa
and
or
bswap
mov
das
cdq
pop
or
sbb
jo
xor
and
xchg
into
psrlq
jne
mov
dec
or
or
sub
mov
xor
mov
imul
add
sub
fwait
push
outs
mov
cdq
and
scas
and
lods
xchg
cmps
addr16
jnp
pop
xor
repnz
add
adc
inc
inc
mov
scas
(bad)
pop
lahf
inc
call
stos
(bad)
fldcw
or
mov
jl
retf
cmp
mov
adc
push
inc
(bad)
pop
and
out
movs
imul
pop
and
dec
cmp
jo
repnz
arpl
fild
push
leave
scas
jae
and
(bad)
jge
pop
das
dec
add
mov
ja
jo
jecxz
push
mov
cmps
out
xor
push
or
mul
sub
jmp
leave
pop
int3
les
imul
lock
bound
cvtps2pd
dec
sbb
dec
xchg
in
pop
inc
(bad)
in
popf
in
cmp
sbb
mov
jp
ins
das
add
or
sahf
inc
(bad)
out
xor
and
mov
mov
popf
ja
mov
mov
mov
jle
adc
test
sub
loopne
push
mov
fstp
pop
fist
add
test
and
iret
dec
mov
pop
sub
nop
cmp
addr16
inc
mov
push
test
pop
xor
xchg
dec
cmp
fs
cs
adc
inc
cmp
scas
jnp
fmul
inc
push
xlat
rol
cmp
pop
call
arpl
jmp
inc
push
and
xchg
jb
stos
out
sahf
sti
jbe
cmp
stc
pop
mov
adc
add
repnz
pop
sub
dec
jg
mov
cmp
push
in
jg
mov
fisttp
inc
mov
adc
xchg
xor
into
pop
cmps
movs
mov
cmp
fiadd
ret
jmp
repz
mov
shr
inc
aas
jmp
arpl
sbb
test
mov
pop
add
lahf
(bad)
mov
retf
xchg
add
dec
cmp
ins
mov
mov
dec
(bad)
std
mov
inc
and
jb
jmp
outs
push
ins
mov
fst
add
(bad)
outs
loop
pop
or
mov
mov
mov
(bad)
pop
mov
sub
scas
or
and
adc
fnstcw
inc
lea
sbb
das
xchg
mov
or
std
std
(bad)
jmp
ja
push
mov
ss
sub
int3
xchg
adc
cmp
push
xchg
iret
mov
call
pop
pop
xchg
repz
adc
sub
mov
mov
sbb
push
loopne
lock
mov
jns
test
ret
aaa
push
push
retf
scas
lea
bound
dec
ins
icebp
out
rcr
mov
aam
les
lods
cmp
jp
mov
int3
and
aam
dec
ret
cmps
movs
pop
inc
mov
test
das
mov
retf
jmp
sub
dec
inc
hlt
(bad)
pusha
out
cdq
ror
mov
imul
jns
push
stos
inc
es
(bad)
push
movs
sub
push
adc
ins
xlat
lods
iret
lods
mov
imul
and
addr16
sbb
fldenv
add
jns
jle
jmp
ins
add
sub
test
jnp
scas
movs
adc
mov
jge
xchg
push
and
test
mov
sub
mov
sub
adc
adc
add
ds
and
stos
dec
imul
xchg
int3
jge
xor
gs
pop
pop
retf
sbb
jg
outs
retf
push
xchg
push
iret
add
pop
xchg
push
shl
jg
cmp
inc
xor
inc
add
push
jo
cmp
inc
daa
mov
not
loop
fisttp
into
push
push
outs
iret
add
(bad)
jge
movs
loopne
mov
xchg
fstp
dec
(bad)
mov
push
daa
inc
add
out
cli
fisubr
jle
jae
dec
pop
pop
lds
mov
mov
push
dec
std
push
repz
into
daa
lock
adc
xor
jge
mov
arpl
repnz
popa
mul
aaa
push
xor
call
cs
(bad)
sahf
mov
aas
pop
pop
add
stos
outs
or
repz
jmp
jmp
inc
adc
dec
mov
data16
mov
xor
mov
enter
ucomiss
nop
xchg
inc
cs
js
sbb
pop
dec
repnz
out
in
dec
push
jg
inc
in
inc
hlt
inc
add
addr16
mov
mov
jle
inc
and
push
int
out
xor
sbb
xor
jmp
push
lock
dec
sub
sahf
adc
push
jle
cdq
fiadd
test
data16
shl
mov
xchg
repz
dec
pop
mov
ficomp
xor
xchg
dec
jmp
adc
mov
ret
xor
and
icebp
inc
rcl
dec
stos
mov
cld
jg
inc
pusha
in
or
aaa
add
dec
test
pop
mov
cwde
pop
(bad)
aas
dec
es
mov
adc
xlat
adc
adc
xlat
jp
and
es
cli
inc
int3
mov
sbb
pop
ret
jle
dec
sbb
inc
jb
and
and
sahf
dec
xchg
outs
jge
mov
shl
repnz
mov
xor
mov
lods
push
mov
xchg
sbb
add
dec
adc
pop
daa
imul
aas
bound
or
fist
nop
sbb
inc
call
xchg
iret
push
mov
xchg
lock
shl
call
adc
cdq
dec
std
push
mov
mov
mov
lock
pop
ins
pop
pop
sub
stos
cpuid
arpl
js
stos
retf
stos
or
mov
add
cmp
sub
dec
(bad)
hlt
jnp
loop
push
add
mov
cdq
adc
and
mov
cmps
sub
push
es
lock
push
jo
loop
push
(bad)
push
pop
inc
cmp
lods
mov
shl
cmp
arpl
add
ja
fst
jb
out
pop
bnd
mov
pop
or
dec
and
pop
jmp
jp
mov
(bad)
mov
push
push
ror
sub
mov
std
xor
iret
(bad)
jmp
call
inc
mov
shl
aam
mov
sti
jg
outs
mov
dec
arpl
or
and
pop
vmptrst
dec
cmp
pop
jge
jnp
nop
popa
shl
xlat
xor
int
xchg
ja
mov
jb
pop
daa
dec
ins
lock
pop
movs
sub
nop
or
pop
fisttp
inc
lock
jbe
xchg
lea
faddp
dec
(bad)
inc
mov
jg
sub
in
test
sbb
sbb
mov
push
mov
das
repnz
xor
int3
in
add
xor
or
into
xchg
xchg
mov
das
add
push
nop
es
xlat
xor
ror
jecxz
call
dec
mov
pop
test
xlat
xchg
fwait
mov
aaa
and
or
jmp
fs
rol
add
or
mov
into
(bad)
xor
push
mov
push
dec
pop
sbb
(bad)
loop
dec
mov
xchg
ret
sbb
mov
xchg
movs
and
ja
(bad)
je
daa
pop
cmps
mov
dec
and
in
mov
xor
and
ins
mov
(bad)
neg
pop
xchg
pop
cmps
iret
cs
imul
mov
loopne
out
outs
adc
add
dec
call
mov
out
repnz
and
mov
xor
(bad)
mov
(bad)
test
stos
test
adc
mov
cmps
retf
daa
mov
icebp
out
in
push
call
mov
push
push
outs
scas
in
add
sbb
lock
mov
das
or
inc
retf
repnz
stos
cli
daa
imul
mov
popf
xchg
punpckhdq
cmp
ficomp
cmp
lahf
push
arpl
call
pop
daa
ret
data16
xor
das
mov
sbb
outs
fstp
scas
fld
lea
mov
mov
mov
mov
pop
int
std
mov
pushf
jecxz
jb
(bad)
not
ins
das
jp
rcl
in
ror
mov
add
mov
daa
pop
add
sbb
scas
dec
(bad)
adc
jl
scas
xlat
sbb
iret
add
pop
fsubr
das
xchg
xchg
or
or
inc
xor
outs
fistp
dec
mov
lock
not
and
cmps
adc
add
mov
inc
jmp
test
xor
ror
pop
fimul
sub
cmp
or
jb
mov
pop
sbb
imul
jmp
adc
xor
jp
inc
sbb
sbb
ficomp
idiv
fist
jo
lahf
(bad)
outs
call
push
jp
or
mov
mov
cmps
pushf
in
lahf
(bad)
xor
scas
movs
aam
mov
(bad)
mov
sub
dec
neg
mov
mov
out
test
into
inc
jge
push
cmp
inc
ret
outs
ds
push
or
fs
popf
lods
xor
cmps
aaa
mov
inc
jge
rcr
cmps
mov
cmp
fsubr
repz
jbe
sub
sub
jbe
lds
aaa
mov
enter
xlat
xor
addr16
cdq
call
push
xor
xchg
aaa
stos
out
or
jmp
jp
sub
or
lods
data16
or
stos
fucomp
fnstsw
das
daa
(bad)
mov
test
popa
dec
cmps
adc
or
ss
stos
jl
push
inc
mov
dec
mov
xlat
jmp
dec
jg
xor
xor
scas
jmp
retf
ret
add
mov
mov
jp
and
sti
cmp
xchg
jmp
in
hlt
mov
jae
and
in
mov
jg
sbb
jle
mov
and
xchg
pop
jnp
outs
dec
popa
add
cmp
dec
imul
push
movs
push
dec
out
xor
cmps
into
bound
shl
cmp
outs
or
jo
and
retf
fadd
iret
ror
inc
loopne
sti
pop
cmp
mov
or
inc
cmp
add
jb
(bad)
loopne
mov
shl
mov
xor
dec
std
jo
jno
lods
xor
div
inc
pop
mov
xor
mov
or
ret
inc
xchg
fstp
adc
test
and
mul
add
xor
scas
inc
repnz
ja
fs
leave
call
add
call
add
sub
cmps
push
jecxz
adc
ficom
push
jmp
xor
xlat
test
cmp
scas
pop
push
(bad)
mov
add
cs
ror
push
sub
shl
or
dec
loopne
sti
retf
fldcw
xor
dec
inc
jb
fs
xlat
sahf
or
setbe
test
(bad)
push
push
jmp
pusha
adc
bound
test
jnp
sbb
or
call
jae
dec
jecxz
xchg
(bad)
mov
and
icebp
sub
or
std
inc
cmp
sub
dec
mov
push
gs
imul
cwde
xchg
or
loop
dec
in
pop
xor
and
cmps
jbe
scas
add
aam
sbb
push
(bad)
mov
inc
dec
lea
imul
cmp
and
cs
(bad)
lock
jecxz
icebp
jne
rol
pop
scas
mov
mov
lods
pop
cmp
not
inc
or
adc
xchg
inc
cmp
jle
pop
sar
sub
mov
mov
and
and
inc
fwait
push
or
mov
cmp
stc
dec
pop
pop
adc
retf
sbb
inc
pop
mov
int3
dec
pop
arpl
dec
jl
mov
in
mov
hlt
imul
ds
jge
ins
aad
(bad)
mov
arpl
rcl
pushf
mov
movs
sub
inc
jno
arpl
popa
mov
push
mov
and
sahf
pop
jl
outs
add
inc
mov
fist
jno
mov
push
test
ins
imul
rol
xor
fst
mov
add
pushf
fnstcw
dec
mov
sub
dec
sar
outs
push
adc
xlat
mov
and
dec
movs
icebp
shr
test
out
cwde
inc
mov
fs
fadd
cmp
fs
shl
rcl
(bad)
nop
cmps
dec
mov
retf
add
(bad)
push
(bad)
push
inc
mov
jge
pop
js
push
sbb
mov
mov
jle
sub
xchg
push
inc
aaa
add
(bad)
ins
dec
lods
jae
outs
(bad)
scas
or
add
cli
pop
push
and
inc
iret
into
mov
push
test
inc
loopne
scas
mov
cmp
cli
add
xor
scas
push
lods
fimul
dec
mov
cmps
or
cmp
jg
ins
xchg
mov
(bad)
std
stos
mov
xor
je
jae
jecxz
mov
jno
mov
jnp
in
pop
and
retf
icebp
imul
and
adc
es
dec
aaa
pand
sub
cmp
icebp
cmp
xor
iret
add
add
leave
adc
jns
jns
scas
sub
nop
retf
sar
clc
outs
push
loopne
adc
pop
daa
push
jb
pop
nop
ja
or
mov
xchg
xchg
int
cli
loop
cmps
push
mov
mov
push
xchg
jp
mov
jg
jecxz
mov
push
mov
pop
lahf
in
aad
pop
fstp
adc
arpl
jl
pop
push
or
movs
adc
adc
rol
xor
push
push
arpl
lods
loopne
rcr
in
das
pop
mov
loop
shl
push
inc
int
jb
pop
int
mov
movsx
les
das
dec
pop
mov
cmp
xor
repnz
jb
daa
jne
mov
ret
(bad)
mul
rcl
dec
(bad)
cmp
movs
fist
ja
xchg
imul
stos
bound
pop
sbb
aas
rcr
adc
loop
dec
fild
xor
retf
mov
lods
pop
ins
sbb
sub
das
dec
pop
pop
or
mov
and
mov
cmp
mov
ins
hlt
mov
cmps
pop
sbb
pop
daa
push
shl
dec
push
cmp
jge
movs
loopne
sub
cmps
push
jmp
push
push
mov
cdq
xor
adc
mov
cmc
out
adc
sbb
fadd
ret
xchg
(bad)
mov
or
loopne
rcl
sahf
adc
repnz
or
in
jnp
adc
xor
push
dec
push
cld
es
inc
shl
mov
ffreep
mov
div
je
pushf
fidiv
mov
push
retf
mov
xor
jae
jl
movs
scas
mov
addr16
jl
scas
jbe
adc
aaa
add
out
out
dec
iret
mov
dec
pop
mov
jg
pop
mov
in
shl
jg
fcmovnu
(bad)
daa
xchg
inc
call
pop
cmp
iret
and
mov
or
clc
jnp
movs
fwait
adc
movs
jg
mov
dec
dec
jb
daa
xchg
out
jle
jbe
retf
fwait
mov
mov
pop
xchg
xchg
stos
hlt
jb
or
pop
mov
out
fiadd
rol
outs
sbb
aad
sub
fstp
bound
push
dec
(bad)
xor
jg
sahf
or
hlt
cmps
sbb
addr16
imul
scas
call
repnz
ins
jns
arpl
or
div
(bad)
outs
pop
call
dec
stc
lock
mov
das
mov
lahf
int3
sub
call
in
jnp
lods
sbb
add
mov
xchg
ins
lock
in
das
or
or
or
adc
rcr
jmp
jb
pop
pop
lds
inc
cmp
or
jle
jmp
jg
scas
iret
jmp
bound
or
ins
enter
cmps
cmp
std
pop
out
ja
jnp
aaa
xor
pop
lds
ret
jbe
push
ror
mov
push
cli
add
int
hlt
ficomp
or
(bad)
idiv
sub
arpl
adc
sbb
repz
inc
jl
adc
pop
cmp
repnz
ret
repnz
pop
dec
inc
mov
xchg
pusha
pushf
add
ins
sbb
shl
arpl
dec
sub
jns
loop
pop
mov
jecxz
push
xchg
ficomp
jns
out
and
shl
xchg
jmp
and
dec
and
out
mov
and
cmp
inc
jno
out
int3
push
push
call
adc
fistp
pop
aaa
adc
and
imul
scas
leave
pop
add
xor
in
jb
add
mov
loopne
xchg
dec
ror
daa
add
xchg
fimul
outs
aaa
ror
jmp
push
sbb
hlt
ins
jae
loope
sub
pop
adc
ret
mov
dec
iret
push
xor
ror
jge
mov
jbe
or
(bad)
std
inc
adc
xchg
dec
inc
sub
ror
aam
adc
repnz
or
inc
int
mov
adc
adc
xor
sub
fs
in
mov
jb
outs
mov
cdq
sti
adc
mov
cwde
add
jb
xor
xchg
dec
(bad)
jnp
shl
fimul
adc
cmps
cld
xor
in
loop
push
or
mov
ins
xchg
dec
gs
jmp
push
adc
jp
mov
aas
add
mov
iret
push
mov
cmc
sar
out
and
push
mov
xchg
pop
std
push
mov
lahf
mov
mov
lock
dec
sar
pop
cli
or
xchg
mov
repnz
push
mov
mov
pop
push
push
or
loop
sti
or
and
adc
sub
push
xor
pop
shr
jno
pop
das
adc
and
mov
cld
stos
fist
popf
ficomp
mov
bound
mov
jns
loop
out
test
popf
mov
call
inc
jl
lahf
fcos
cmp
loop
jo
std
bound
push
rcr
leave
mov
cmps
test
dec
(bad)
push
stos
ror
xchg
xor
jmp
mov
fxch
add
jns
and
gs
div
daa
sar
hlt
outs
and
ror
cdq
pop
in
xlat
iret
xor
inc
aaa
mov
sub
bound
pop
movs
mov
pop
pop
add
test
dec
mov
xchg
mov
ds
sbb
dec
or
lahf
mov
sub
sub
push
pop
sbb
mov
or
ss
(bad)
jbe
xor
push
push
leave
mov
sbb
test
out
pop
push
cmp
and
or
jo
aaa
and
cli
pushf
fisttp
pop
dec
aas
in
arpl
mov
mov
clc
shr
mov
bound
sbb
dec
addr16
jg
gs
add
gs
push
fst
xlat
mov
imul
jl
add
out
inc
inc
scas
popa
fist
mov
pop
push
dec
sub
inc
pushf
fcmovb
add
inc
(bad)
inc
xor
scas
and
dec
sti
mov
mov
mov
jbe
mov
xchg
shl
jns
add
ja
daa
push
jp
(bad)
shl
mov
xchg
gs
cmp
cmps
cs
mov
pop
push
xchg
dec
ror
mov
xor
loop
xchg
fcom
jo
jmp
out
pop
retf
jp
pop
idiv
push
shl
imul
imul
popf
scas
pushf
mov
loopne
push
or
les
pop
adc
icebp
ss
inc
add
xchg
repz
jmp
add
call
inc
fisubr
push
inc
dec
mov
pop
sahf
push
aas
aas
cmp
sub
(bad)
data16
cmps
xchg
inc
aaa
jo
jb
push
lahf
inc
add
cmp
inc
or
dec
test
push
mov
adc
xchg
adc
jmp
push
out
iret
jmp
out
and
out
jl
rol
mov
fdiv
add
sub
(bad)
pop
dec
or
addr16
mov
imul
scas
add
nop
push
(bad)
or
jg
in
test
jl
adc
sbb
dec
cmp
add
adc
shr
push
push
add
mov
pop
push
jp
sub
xchg
aam
mov
fimul
push
mov
xor
or
jb
xchg
loopne
push
jge
dec
fistp
adc
loop
sar
mov
cld
outs
test
xlat
add
ins
pop
mul
sub
or
sub
ret
scas
test
cmps
xchg
xor
sbb
mov
jl
xor
loop
dec
dec
pop
iret
xor
sbb
add
fisttp
xchg
jle
and
loop
pop
dec
xor
gs
jb
scas
lahf
iret
jmp
shr
das
mov
push
scas
sub
fmul
test
xor
jmp
pop
xchg
mov
out
jmp
add
ja
std
out
loopne
cmp
leave
add
adc
aas
and
sbb
repnz
jle
div
cmps
outs
mov
mov
lea
dec
jbe
cmp
call
jo
ss
cmps
pushf
sti
push
xchg
inc
push
push
mov
iret
loop
mov
push
ins
jecxz
repnz
out
dec
addr16
(bad)
retf
stc
aaa
out
daa
loopne
push
movzx
daa
popa
dec
sbb
xchg
inc
(bad)
std
stos
fs
outs
push
or
adc
xlat
add
outs
mov
sbb
mov
dec
dec
out
into
lds
mov
int3
mov
fcomp
sbb
sub
dec
outs
mov
out
fisub
iret
jmp
sar
sub
push
ror
xor
pop
cmps
(bad)
inc
in
pop
test
and
xchg
test
sbb
cmps
mov
in
pop
aaa
jae
and
out
bound
aas
rcl
mov
repnz
mov
(bad)
popf
inc
mov
div
or
sbb
repnz
dec
(bad)
jb
ins
jecxz
jp
iret
dec
das
pop
lahf
mov
sbb
mov
pusha
popf
scas
lea
add
stos
dec
stos
dec
shl
push
mov
adc
ret
iret
adc
data16
or
pop
mov
or
pop
retf
and
cdq
mov
out
push
shl
das
loope
shl
mov
repnz
pop
stos
ins
data16
xchg
iret
in
jl
cli
and
xchg
shl
mov
jg
pushf
cmps
and
ret
int
jecxz
cmp
sar
mov
(bad)
ror
fsub
pop
or
retf
pop
icebp
and
xlat
adc
jmp
or
imul
sar
adc
stos
nop
ss
call
add
pop
pusha
int3
jp
jle
aas
das
ds
adc
(bad)
adc
lahf
(bad)
push
inc
(bad)
outs
push
pop
push
add
jb
(bad)
enter
shl
push
sbb
inc
xchg
popf
pop
inc
inc
stos
push
pop
dec
pop
lds
fdiv
sub
xchg
add
dec
(bad)
cmp
fcmovnu
out
jbe
out
xchg
sbb
cmc
ins
test
std
lock
sbb
cmp
test
inc
jnp
(bad)
fisub
push
stos
sbb
imul
push
push
cmp
push
adc
xor
xor
push
pop
inc
dec
mov
adc
(bad)
aas
or
push
sbb
sbb
push
inc
inc
jle
scas
fidiv
lods
into
pop
mov
add
(bad)
push
dec
dec
sub
jo
mov
adc
add
push
fnop
repz
shr
loop
pop
inc
call
xchg
cdq
inc
ds
popf
xchg
sahf
inc
jge
cmp
mov
cmp
std
div
jmp
repz
add
adc
jb
cmps
mov
jg
outs
adc
xchg
jo
mov
adc
jl
mov
push
push
add
sub
outs
loop
js
add
xor
dec
gs
faddp
dec
(bad)
inc
mov
mov
mov
jle
imul
in
out
leave
repz
outs
pushf
jp
mov
pop
das
scas
mov
out
imul
lock
fisttp
ret
ss
stc
das
mov
mov
add
push
ret
sub
jmp
icebp
cli
sbb
jp
js
out
mov
rcl
aam
inc
xor
jns
or
pushf
push
rcl
les
aas
jno
mov
aas
mov
mul
addr16
sub
push
xchg
es
cmp
jp
lds
mov
cwde
(bad)
jbe
mov
fbstp
and
call
mov
add
dec
xchg
xor
(bad)
out
pop
dec
xor
(bad)
pop
pop
sub
cmps
das
popa
scas
test
cmp
xor
in
fwait
add
push
stos
mov
cld
leave
aas
(bad)
out
outs
inc
ins
(bad)
aaa
dec
shl
inc
call
aaa
xor
xchg
push
(bad)
std
cmps
xchg
stos
call
push
pop
mov
iret
cmp
(bad)
test
xor
stos
das
pop
shr
xchg
outs
sub
out
cdq
nop
dec
es
loop
ficomp
stos
xor
inc
cmps
mov
test
inc
fs
adc
mov
push
das
ja
jo
sbb
xor
ret
aaa
pop
out
jecxz
push
pavgw
das
dec
xor
mov
in
xor
and
daa
or
lods
fs
jb
push
bound
jg
push
mov
sub
push
popf
fld
(bad)
jno
popf
loopne
int3
dec
pop
mov
out
sahf
test
add
sbb
add
push
and
mov
xchg
xchg
setg
(bad)
mov
push
outs
mov
dec
push
data16
out
adc
iret
and
xchg
mov
enter
retf
sahf
jmp
cld
push
sbb
(bad)
leave
mov
outs
pop
xchg
in
ja
jl
aam
mov
adc
shl
ret
scas
stos
fisttp
bound
ror
out
add
les
sub
fisubr
xchg
xchg
xor
jns
mul
js
sbb
retf
repnz
bound
das
add
adc
into
push
lock
aam
repz
repnz
fsubr
jb
adc
dec
jne
lock
aam
adc
mov
loop
xchg
jecxz
mov
lods
cmp
daa
pop
shl
aam
mov
out
mov
push
pop
adc
mov
aad
scas
cli
mov
into
xor
aaa
clc
psubsb
sub
rcr
imul
repnz
jb
or
inc
lock
das
(bad)
mov
push
pop
in
retf
inc
add
and
lods
clts
pop
dec
mov
mov
pop
rol
sbb
mov
dec
clc
inc
retf
jg
push
aaa
out
xchg
loopne
jb
mov
bound
adc
push
dec
push
clc
or
cwde
push
movs
inc
je
and
fwait
out
in
test
icebp
ins
sbb
pushw
jmp
iret
jns
or
xchg
aam
inc
add
sbb
pusha
sub
mov
imul
aaa
dec
aam
aam
mov
mov
neg
in
(bad)
rcr
sub
xlat
mov
pop
sbb
jae
arpl
(bad)
mov
cld
sbb
jmp
cmp
fld
xlat
pop
inc
dec
sti
jb
call
and
jae
out
sahf
push
cli
cmp
xlat
jae
fadd
idiv
and
(bad)
repnz
xchg
repnz
retf
jl
rol
jmp
clc
aas
inc
or
pop
ss
sub
pop
pop
mov
iret
inc
xchg
addr16
ficomp
(bad)
out
stos
(bad)
push
dec
or
repnz
lahf
cli
add
pusha
aas
mov
retf
fcmovnu
xchg
mov
mov
xor
mov
xor
es
push
out
repnz
and
inc
outs
das
xor
or
mov
adc
fs
loopne
ror
aaa
add
bound
cmps
rol
ror
ins
ds
inc
or
nop
xchg
ficomp
lods
pusha
iret
pop
or
inc
int3
or
xor
repnz
je
sub
dec
inc
lahf
pop
call
cmps
or
es
dec
push
lock
(bad)
rcr
pop
(bad)
shl
test
jecxz
adc
xchg
fstp
inc
mov
xlat
sti
inc
aas
loope
mov
dec
adc
outs
jne
jo
mov
pop
int3
inc
je
jmp
out
test
mov
les
sub
add
xchg
cmc
mov
test
or
push
jmp
cli
pop
test
mov
daa
cwde
popf
mov
addr16
inc
loopne
adc
iret
and
xchg
mov
enter
ret
inc
and
addr16
mov
adc
pop
clc
mov
les
cmps
jmp
cld
xchg
push
test
inc
in
loop
push
(bad)
pop
mov
push
lea
(bad)
xchg
xchg
imul
jns
imul
pushf
inc
jb
mov
push
mov
pop
(bad)
shl
cmp
loop
std
js
jmp
jb
xchg
call
mov
repnz
pusha
cdq
inc
retf
push
mov
and
dec
mov
sub
adc
sub
xchg
aas
lock
daa
sbb
aas
sbb
mov
fxch
(bad)
int3
cdq
jmp
xchg
sbb
pop
cli
dec
iret
sub
pop
inc
into
adc
pop
push
or
jb
addr16
in
pop
sub
loop
and
push
jmp
add
inc
je
iret
push
hlt
or
outs
mov
sti
mov
call
loop
call
pop
xchg
lea
sbb
pop
test
ret
loop
jmp
das
std
lahf
sub
push
fild
pop
and
push
cmp
push
shr
push
sub
adc
mov
pop
push
and
pop
jle
cs
mov
cmp
dec
fdiv
dec
xlat
repnz
sbb
jle
mov
sub
jb
or
in
das
mov
push
in
sbb
cmps
(bad)
into
mov
cs
jecxz
inc
imul
mov
jg
nop
and
pop
add
inc
fisttp
scas
add
jmp
sbb
xchg
jp
in
mov
(bad)
pop
sbb
jl
push
fstp
and
sti
jp
and
xchg
mov
and
mov
js
xor
push
sbb
jb
mov
add
shr
aam
sbb
or
stos
std
js
push
and
push
lahf
data16
xchg
pop
mov
inc
pop
xor
fidiv
pusha
adc
dec
xchg
test
push
(bad)
out
bound
xchg
lea
leave
stc
mov
xor
lahf
adc
mov
jmp
mov
sub
add
in
mov
jno
and
and
pop
mov
mov
push
sbb
jne
(bad)
int
xor
scas
jnp
(bad)
mov
jne
(bad)
in
xchg
sahf
xor
retf
sub
sar
cdq
add
mov
or
(bad)
cmp
es
outs
or
aaa
mov
add
mov
sbb
and
jo
mov
jle
xlat
loop
sbb
mov
add
(bad)
out
xor
std
cmp
xchg
jg
mov
pusha
in
test
popa
dec
addr16
(bad)
loopne
into
(bad)
aas
push
bound
idiv
in
pusha
rol
stos
pop
adc
xor
dec
jb
aam
and
dec
mov
sub
xchg
cs
xor
mov
iret
ja
lea
adc
outs
xchg
shl
sub
inc
xor
popa
int
xlat
cmp
sub
jb
popf
ins
cli
xor
stc
mov
call
aaa
(bad)
pop
fidiv
(bad)
iret
mov
arpl
inc
cdq
jmp
out
lea
mov
mov
fisub
pop
int3
add
fxch
add
dec
cmp
jmp
pop
repnz
loop
adc
jecxz
mov
pop
arpl
xchg
and
mov
repnz
mov
inc
cmc
icebp
je
adc
aas
pop
sbb
sahf
mov
cmp
aam
stos
sub
cdq
rcl
outs
sub
pop
xchg
adc
int
and
fcomip
pop
(bad)
les
pop
loop
shr
push
ficomp
cmps
out
(bad)
scas
jno
test
and
iret
arpl
test
mov
xchg
pop
stos
data16
dec
popa
push
jp
sub
dec
imul
push
movs
push
dec
out
xor
cmps
into
bound
shl
cmp
outs
or
jo
and
retf
cs
sbb
cld
push
shl
es
in
fld
icebp
cmps
mov
je
xlat
stos
sbb
cmp
pop
sub
jns
lods
xchg
adc
cmps
repnz
iret
inc
mov
out
mov
xlat
(bad)
stc
loop
data16
cs
xor
outs
neg
lahf
(bad)
push
inc
les
jmp
cli
popf
ret
mov
cmp
aad
sub
out
xchg
adc
xor
cmp
sub
pop
out
push
ret
iret
push
or
(bad)
outs
out
inc
(bad)
std
xor
loope
stos
lea
loopne
xadd
dec
sub
cmp
push
push
sub
in
fisttp
cmp
xor
iret
leave
add
push
mov
push
scas
or
adc
std
lahf
fld
pop
cmp
call
ret
(bad)
pushf
ror
loop
cdq
outs
inc
jl
in
test
mov
ins
sub
mov
les
or
loop
inc
shl
shl
pop
jnp
mov
xor
mov
pusha
dec
mov
inc
or
jo
push
xor
stos
je
lods
data16
and
cli
jecxz
mulps
xchg
cli
nop
loop
ss
push
pop
scas
and
aaa
adc
pop
adc
imul
mov
xor
fwait
ja
jo
pop
mov
pop
in
mov
push
ror
xchg
dec
(bad)
imul
imul
rol
mov
mov
jae
aas
jp
or
lods
inc
fimul
test
(bad)
retf
xchg
call
mov
popa
mov
sbb
daa
cmp
push
into
xchg
xchg
es
mov
xchg
push
push
das
repnz
sahf
loop
add
mov
jg
ds
outs
(bad)
fxch
movhps
push
jae
cmps
aam
add
mov
inc
push
fstp
fxch
mov
mov
outs
pop
xchg
jb
sahf
cmp
dec
xor
(bad)
pusha
test
mov
lods
inc
adc
retf
xlat
mov
jle
mov
adc
mov
pop
jo
call
inc
mov
lods
scas
fiadd
out
repnz
aas
pop
shl
xor
loop
popf
sahf
push
stos
cmpps
loopne
inc
(bad)
lock
pop
daa
sub
nop
push
fucomp
arpl
fsubrp
and
push
ja
add
dec
jge
lock
push
das
ret
scas
ret
jb
cmp
pop
shr
lods
jmp
xchg
dec
mov
(bad)
out
adc
cmps
xor
jb
jle
scas
into
xchg
xchg
es
mov
mov
dec
or
nop
mov
cmp
or
mov
outs
add
mov
das
fidivr
jge
jae
pop
rcl
or
or
repz
sub
dec
dec
ror
rcl
daa
cmp
imul
add
and
mov
xchg
repnz
mov
dec
pop
rcl
cmps
xor
xor
pop
push
ret
jg
mov
ds
mov
inc
pop
(bad)
out
dec
mov
mov
xchg
and
outs
lahf
push
dec
std
repnz
jmp
dec
inc
cmp
jae
bound
sbb
jmp
int
jecxz
(bad)
pop
(bad)
jb
test
mov
push
xor
sbb
mov
nop
es
lea
cmp
inc
pop
adc
xor
mov
jle
cmps
fstp
pop
xor
(bad)
out
push
xchg
pop
jge
mov
dec
retf
lahf
fisub
lahf
dec
jle
iret
fstp
mov
daa
popf
fiadd
bound
lahf
mov
(bad)
(bad)
pop
dec
xor
int
retf
das
pop
push
(bad)
test
out
dec
scas
sbb
push
shr
dec
outs
lods
push
sub
xchg
mov
data16
rcr
das
pop
pop
sbb
std
inc
dec
jnp
cmp
or
fwait
push
(bad)
out
rcr
dec
jg
sub
cld
inc
int3
push
jp
ja
mov
fdiv
push
push
adc
mov
imul
lods
xor
jnp
inc
ss
inc
pop
mov
xor
std
repnz
push
fsub
lods
xor
xchg
jle
lock
cmp
push
in
cmp
mov
sub
retf
mov
loop
pusha
in
int
inc
repz
aas
stos
mov
pop
mov
fistp
cmp
sbb
repnz
mov
lods
es
loope
into
jge
jb
pop
mov
repnz
sbb
inc
pop
push
scas
push
stc
xor
add
out
ins
ins
cmp
pop
mov
or
jo
inc
fist
stos
lods
inc
add
setge
ins
add
rol
cmp
bound
sub
xor
(bad)
call
xor
push
push
das
or
jae
out
sahf
loop
add
mov
jo
scas
jg
retf
or
add
mov
adc
orps
dec
ins
pop
mov
repnz
cld
jle
rol
lea
pop
push
outs
jge
mov
dec
mov
jg
(bad)
pusha
mov
ret
fist
push
jbe
xchg
cmps
mov
out
inc
loopne
dec
jge
lock
adc
cmp
pop
or
mov
mov
cs
fild
lahf
dec
out
ret
add
dec
rcl
std
jle
mov
ss
retf
pop
into
out
(bad)
or
pop
or
sbb
repnz
mov
push
adc
pop
ins
push
rol
xchg
or
jo
dec
int
dec
cmp
ins
bound
psrad
(bad)
int
jg
mov
mov
push
sbb
loope
icebp
mov
dec
jecxz
mov
ss
cs
mov
add
lods
iret
cmps
mov
ins
into
loop
mov
xchg
bt
push
jo
repnz
lea
sub
jmp
push
pop
popf
cmp
(bad)
pusha
sahf
jg
jle
dec
and
push
das
pop
jnp
lahf
popf
fdivrp
sub
repz
xchg
mov
mov
push
mov
pop
inc
xor
ja
ret
inc
push
push
das
arpl
add
mov
cmp
in
jecxz
ja
inc
xchg
xor
mov
jb
das
loopne
pop
dec
or
mov
sbb
mov
pop
dec
mov
loopne
cmps
iret
mov
daa
out
out
mov
pop
or
data16
push
jecxz
cmp
mov
scas
jb
inc
das
(bad)
out
xchg
mov
xor
(bad)
sti
int3
into
push
mov
lods
daa
cli
add
into
imul
out
add
aas
sbb
jle
and
and
push
push
jb
mov
(bad)
lock
das
stos
shl
add
dec
jg
xchg
cwde
stos
std
mov
lods
iret
add
pushf
pop
mov
sbb
das
imul
push
jo
std
int
pop
pop
xor
mov
lea
add
ins
pop
jge
jmp
(bad)
repnz
sbb
aaa
jno
call
add
pop
loope
pop
ret
iret
mov
or
push
inc
push
sbb
pusha
lahf
dec
bound
push
jmp
ins
cmovnp
call
cmp
in
add
call
add
cs
xchg
push
lock
pusha
mov
jg
mov
push
jb
xor
in
jecxz
fisttp
mov
loope
sub
shl
cmp
scas
or
add
std
repz
and
not
das
xchg
xchg
dec
jge
lock
xor
adc
xor
push
scas
int3
leave
inc
into
jg
cmp
push
jno
mov
hlt
repnz
jmp
in
arpl
inc
fld
mov
(bad)
mov
loop
test
add
stos
push
xchg
cmp
pop
add
int
and
adc
xchg
mov
imul
mov
mov
xchg
adc
inc
inc
fist
and
sub
push
jae
mov
sti
or
out
std
xor
mov
retf
sahf
push
sub
xor
mov
aas
push
bound
push
(bad)
cmp
mov
cmp
into
inc
mov
push
push
cmp
out
sub
outs
mov
inc
repz
and
pop
ja
ds
push
das
cmps
ins
into
jmp
daa
ret
sub
mov
push
mov
add
mov
test
and
jbe
mov
xor
adc
(bad)
ja
jmp
xadd
jae
mov
(bad)
or
data16
mov
or
jp
popf
fdivrp
out
cmp
rol
pop
dec
cmp
aaa
std
jle
dec
shl
xchg
cmps
add
lods
mov
aaa
or
arpl
or
loop
into
ret
int
and
pop
or
sbb
bound
push
cmps
rol
pop
sahf
cmp
add
jg
fstp
cmp
mov
cmp
cmp
dec
xchg
push
mov
ds
or
xchg
outs
retf
bswap
or
sbb
out
inc
cli
lock
mov
ja
sub
pop
sti
cmp
repnz
aas
pop
add
out
cmp
shl
adc
cmp
data16
int
retf
aas
xor
mov
loopne
test
push
pop
sbb
xchg
shl
pop
int
retf
aas
stos
xor
jmp
mov
jle
dec
mov
adc
pusha
mov
mov
in
out
and
adc
aas
lock
sub
sub
sub
lods
es
mov
out
and
ss
jge
pop
iret
jb
adc
loop
pop
add
or
xlat
inc
or
out
rol
jae
jle
fidiv
add
dec
jmp
jp
fnstsw
xor
int
pop
lock
mov
lahf
jbe
loop
aas
cli
jns
push
lahf
adc
and
push
iret
inc
push
bound
xchg
jb
pop
ror
jg
outs
loop
adc
and
push
iret
inc
push
bound
xchg
jb
pop
ror
jg
outs
loop
adc
and
push
iret
inc
push
bound
xchg
jb
pop
ror
jg
outs
loop
adc
and
push
iret
inc
push
bound
xchg
jb
pop
ror
jg
outs
loop
adc
and
push
iret
inc
push
bound
xchg
jb
pop
ror
jg
outs
loop
adc
and
push
iret
inc
push
bound
xchg
jb
pop
ror
jg
outs
loop
adc
and
push
iret
inc
push
bound
xchg
jb
pop
ror
jg
outs
loop
adc
and
push
iret
inc
push
bound
xchg
jb
pop
ror
jg
outs
loop
adc
and
push
iret
inc
push
bound
or
cmp
sub
pop
ror
icebp
ins
loope
adc
fcom
inc
cld
jno
popa
sbb
or
cmp
sub
pop
ror
icebp
ins
loope
adc
fcom
inc
cld
jb
popa
sbb
or
cmp
sub
pop
ror
icebp
ins
loope
adc
fist
inc
cld
jno
popa
sbb
or
cmp
sub
pop
ror
icebp
ins
loope
adc
fdiv
iret
inc
push
bound
repz
pop
nop
push
cmp
mov
mov
adc
and
dec
ret
or
ror
jg
outs
loope
sbb
add
jns
jno
dec
shl
pop
fld
push
mov
adc
stos
or
sub
enter
mov
mov
push
mov
int
std
jo
pusha
popf
adc
and
dec
sar
loopne
nop
or
mov
mov
lods
lea
add
adc
loopne
dec
cmp
das
mov
jg
sub
add
push
iret
add
jb
sbb
repnz
add
jno
and
xor
aas
mov
loopne
ror
jg
outs
loop
push
int3
add
push
iret
add
jb
pop
nop
dec
ret
outs
mov
mov
push
iret
inc
mov
xchg
dec
sar
ins
mov
cmp
adc
popa
fist
inc
push
bound
jb
pop
ror
loop
adc
and
push
pop
add
jb
bound
xchg
pushf
sar
shl
xor
mov
mov
lods
iret
inc
push
bound
xchg
jb
pop
inc
or
mov
mov
push
iret
inc
push
bound
das
mov
jg
sub
inc
mov
push
iret
inc
push
bound
xchg
jb
pop
ror
cmp
adc
and
push
iret
inc
push
and
xchg
lock
das
mov
jg
outs
loop
or
pusha
fist
sar
xchg
jb
pop
ror
cmp
adc
and
push
iret
inc
jmp
lods
bound
ins
jb
pop
ror
cmp
adc
mov
ror
mov
jb
pop
rcr
cmp
loop
adc
fisttp
inc
add
lods
bound
ins
jb
pop
sub
outs
sbb
mov
push
xor
mov
xchg
jb
pop
inc
or
loop
or
and
ror
pop
xchg
jb
pop
ror
jg
cld
mov
mov
lods
iret
inc
push
bound
xchg
pushf
sar
mov
jg
outs
loop
adc
and
push
iret
inc
push
bound
xchg
jb
pop
ror
jg
outs
sbb
inc
xor
inc
jmp
lods
bound
ins
jb
pop
sub
sub
inc
mov
push
iret
mov
pop
xchg
jb
int3
nop
or
loop
adc
fisttp
inc
add
and
xchg
lock
cmp
lahf
push
(bad)
std
mov
push
xor
jb
bound
ror
jge
mov
loopne
shl
loop
adc
add
scas
mov
adc
mov
pop
xchg
xadd
dec
das
mov
xor
sbb
std
xor
fist
inc
mov
xchg
dec
cmp
ins
loopne
sub
outs
loop
adc
and
inc
add
lods
bound
ins
pushf
sar
shl
sbb
repnz
loop
adc
fstp
push
iret
inc
push
icebp
pop
xchg
(bad)
lods
lock
mov
jg
cld
mov
std
xor
inc
add
lods
bound
ins
pushf
sar
shl
sbb
mov
loop
adc
and
ror
mov
jb
sbb
repnz
jno
adc
and
push
iret
inc
ins
xor
(bad)
loopne
dec
cmp
das
mov
and
lahf
in
pop
sub
scas
and
ror
pop
xchg
lock
das
pop
int3
nop
dec
ret
cld
mov
sub
scas
and
push
pop
add
jb
bound
xchg
pushf
sar
shl
xor
loop
adc
mov
push
iret
mov
loopne
jb
pop
ror
jg
outs
loop
adc
and
push
iret
inc
push
bound
xchg
jb
sbb
repnz
loop
adc
mov
push
iret
mov
pop
xchg
jb
pop
ror
in
mov
loop
adc
and
push
pop
add
jb
bound
xchg
jb
pop
shl
loop
adc
pusha
fist
inc
jmp
lods
bound
ins
jb
pop
ror
jg
outs
loop
adc
and
push
iret
inc
push
bound
xchg
jb
pop
ror
jg
outs
loop
adc
and
lods
iret
inc
jmp
lods
bound
ins
jb
pop
ror
jg
outs
loop
adc
and
push
iret
inc
push
bound
xchg
jb
pop
ror
jg
outs
loop
adc
and
push
iret
inc
push
bound
xchg
jb
pop
ror
jg
outs
loop
or
and
inc
add
bound
xchg
movups
das
pop
int3
nop
dec
ret
outs
jno
adc
and
push
iret
inc
ins
xor
(bad)
loopne
jb
pop
inc
or
loop
adc
pusha
fist
inc
push
(bad)
loopne
jb
pop
rcr
cmp
loop
adc
and
push
iret
inc
push
bound
xchg
movups
das
pop
pop
ror
jg
outs
loop
adc
and
push
iret
inc
push
bound
xchg
pushf
sar
shl
xor
jno
adc
and
lods
xor
loopne
pushf
sar
shl
cmp
or
and
lods
xor
mov
xchg
lock
das
pop
pop
inc
or
sbb
inc
xor
fist
mov
loopne
pushf
sar
shl
sbb
repnz
loop
adc
and
loope
bound
ins
pushf
sar
shl
sbb
mov
loop
or
mov
push
iret
mov
loopne
lock
shl
or
std
inc
int
pusha
fist
sar
xchg
jb
mov
or
jo
mov
push
iret
mov
loopne
movups
das
pop
int3
nop
dec
ret
sub
xchg
std
xor
inc
jmp
lods
bound
ins
pushf
sar
rcr
sub
sub
xchg
std
xor
inc
mov
add
aas
dec
das
mov
cmp
adc
and
ror
pop
xchg
lock
das
xor
dec
cmp
lahf
adc
sub
in
and
push
iret
inc
push
and
xchg
pushf
sar
rcr
ror
jg
outs
sbb
mov
ror
add
dec
das
mov
cmp
outs
jno
adc
and
push
iret
inc
push
bound
xchg
movups
pop
pop
ror
jg
outs
loop
push
pop
inc
xor
fist
inc
jmp
lods
bound
ins
jb
mov
repnz
jno
adc
and
lods
iret
inc
ins
xor
(bad)
loopne
jb
pop
ror
cmp
outs
sbb
sub
scas
and
push
iret
inc
jmp
lods
bound
ins
pushf
sar
shl
sbb
dec
cmp
pusha
or
popa
fist
sar
jb
pop
rcr
cmp
pop
mov
push
iret
inc
push
and
xchg
lock
pop
pop
inc
or
jg
outs
loop
push
pop
xor
fist
inc
push
bound
xchg
jb
pop
ror
jg
outs
loop
push
pop
inc
mov
iret
inc
push
bound
xchg
movups
pop
int3
xchg
dec
ret
outs
loop
adc
and
push
iret
inc
push
bound
xchg
pushf
sar
shl
jg
outs
loop
adc
and
push
iret
inc
push
bound
xchg
jb
pop
sub
nop
loop
adc
and
push
iret
inc
push
bound
xchg
jb
pop
shl
sbb
mov
push
iret
inc
push
bound
xchg
jb
sbb
dec
cmp
pusha
adc
and
push
mov
loope
and
ins
jb
pop
ror
jg
outs
loop
push
pop
sub
scas
and
ror
xchg
jb
pop
shl
loop
adc
popa
fist
inc
ins
xor
(bad)
loopne
pushf
sar
shl
xor
mov
mov
push
iret
mov
loopne
pushf
sar
shl
jg
nop
jno
adc
and
ror
xchg
lock
pop
int3
xchg
dec
ret
sub
lahf
in
pop
sub
scas
and
push
iret
mov
pop
ins
movups
pop
pop
inc
or
jg
outs
jno
adc
and
lods
pop
add
jb
bound
add
dec
das
mov
xor
jno
adc
and
push
iret
inc
ins
xor
(bad)
loopne
pushf
sar
shl
sbb
dec
cmp
lahf
in
(bad)
xchg
cld
xor
inc
dec
(bad)
aas
and
sub
outs
sbb
inc
xor
fist
inc
ins
xor
(bad)
loopne
pushf
sar
rcr
xchg
dec
ret
outs
loop
adc
and
ror
xchg
pushf
sar
shl
xor
mov
mov
lods
iret
sar
jb
pop
inc
or
jg
outs
sbb
inc
mov
pop
add
jb
bound
xchg
jb
pop
shl
loop
adc
and
ror
xchg
lock
pop
pop
ror
jg
outs
loop
push
pop
inc
xor
add
jb
bound
xchg
jb
mov
repnz
loop
or
popa
fist
sar
jb
pop
sub
nop
sbb
inc
xor
inc
push
bound
ins
mov
jg
nop
loop
push
pop
inc
mov
iret
sar
jb
pop
ror
jg
outs
loop
adc
and
ror
xchg
lock
pop
int3
xchg
dec
ret
sub
lahf
in
pop
mov
push
iret
inc
jmp
lods
bound
ins
pushf
sar
shl
sbb
dec
cmp
pusha
or
popa
fist
sar
dec
cmp
das
mov
cmp
outs
sbb
inc
mov
pop
add
jb
icebp
pop
xchg
(bad)
lods
icebp
das
mov
jg
cld
mov
sub
scas
and
ror
xchg
lock
pop
int3
xchg
dec
ret
sub
lahf
in
(bad)
xchg
cld
xor
add
jb
icebp
pop
xchg
(bad)
aas
mov
mov
jg
cld
mov
cld
xor
inc
ins
xor
(bad)
loopne
jb
sbb
dec
cmp
or
pop
inc
mov
pop
add
jb
icebp
pop
xchg
(bad)
lods
icebp
das
mov
jg
cld
mov
mov
lods
pop
add
jb
bound
ins
mov
jg
nop
jno
adc
and
push
pop
add
jb
icebp
pop
xchg
(bad)
lods
icebp
das
mov
jg
cld
mov
cld
xor
inc
add
bound
mov
ret
outs
loop
adc
fist
inc
cld
jb
bound
jo
pop
ror
repnz
loope
adc
fcom
inc
cld
jno
popa
sbb
or
cmp
sub
pop
ror
jl
ins
loope
adc
fcom
inc
cld
jno
popa
sbb
or
cmp
sub
pop
ror
icebp
ins
loope
adc
fcom
inc
cld
jno
popa
sbb
or
cmp
sub
pop
ror
icebp
ins
loope
adc
fcom
inc
cld
jno
popa
pop
xchg
or
aas
mov
repz
and
stc
jp
and
mov
inc
jmp
sbb
push
xchg
pusha
cld
arpl
inc
into
mov
sbb
in
push
fstp
pop
mov
or
push
jg
push
call
ss
aad
lds
dec
cmc
xor
sub
fisub
dec
mov
push
mov
push
xchg
jl
imul
in
mov
outs
or
cld
outs
fld
dec
fistp
iret
ss
cmps
push
add
inc
cmc
lds
xchg
adc
std
inc
rol
jne
ss
aaa
pushf
adc
stos
lock
cmp
and
lock
loope
mov
push
stos
and
test
cmp
sub
xchg
imul
fild
mov
xor
sbb
into
ss
std
inc
cmp
jno
jne
push
stos
ins
mov
cmp
pop
fisttp
sbb
dec
sub
iret
jmpw
inc
mov
cmps
es
ss
and
int
fnstsw
pop
loop
in
movs
push
sub
ins
fdiv
bound
xor
ret
outs
popf
ss
mov
xchg
pop
mov
sub
lock
(bad)
adc
out
in
jg
sbb
out
xchg
mov
loopne
lock
pop
and
and
jg
adc
ds
sub
retf
or
mov
add
arpl
jg
dec
loop
lea
stos
sbb
or
int3
(bad)
cmp
fwait
and
outs
icebp
jg
sbb
mov
into
push
mov
loopne
lock
pop
rcr
daa
and
dec
mov
xchg
jo
push
fwait
or
sti
jle
inc
mov
or
scas
outs
jnp
dec
lock
dec
loop
xchg
jp
in
push
in
xor
xor
inc
mov
cmps
es
ss
push
push
sti
jl
push
(bad)
outs
int
xchg
push
std
inc
cmp
jno
jbe
sbb
fistp
xor
push
outs
xchg
mov
push
xor
ins
nop
sbb
fistp
dec
(bad)
jg
jo
pop
loop
mov
fwait
or
or
cmp
pop
jo
xor
dec
rcr
pop
cmps
lods
aas
sub
(bad)
push
int
(bad)
push
mov
xchg
data16
fwait
and
pmaddwd
push
popf
push
mov
out
xchg
mov
retf
jb
dec
lods
adc
jge
daa
fwait
and
std
jl
jg
pop
int3
aaa
cmps
shrd
mov
fnstsw
push
fst
or
and
retf
dec
rcr
cmps
and
std
pusha
stos
arpl
pop
out
inc
mov
rol
add
dec
in
jg
adc
or
mov
fiadd
inc
in
add
cmp
jp
outs
int3
sub
push
sbb
mov
ficomp
dec
mov
push
stos
lea
push
(bad)
pusha
not
(bad)
pop
sar
add
dec
or
mov
lock
neg
pop
jecxz
mov
jg
das
mov
popa
jmp
pop
into
dec
mov
add
push
ja
dec
std
aam
dec
mov
sub
dec
(bad)
pop
ds
scas
inc
mov
iret
cs
xchg
and
call
pop
(bad)
data16
jg
outs
loop
adc
and
push
iret
inc
push
bound
xchg
jb
pop
ror
jg
outs
loop
adc
and
push
iret
inc
push
bound
ror
jg
outs
loop
xchg
push
cmp
mov
(bad)
jae
pusha
popf
adc
and
dec
sar
mov
cmp
sub
fcom
inc
cld
jno
popa
pushf
adc
pop
ror
icebp
ins
loope
xchg
or
cmp
sub
fcom
inc
cld
jno
popa
pushf
adc
pop
mov
das
in
sar
movs
jg
push
xchg
repz
add
xor
push
fistp
out
bound
por
(bad)
ds
or
fidiv
scas
inc
mov
iret
sub
cld
data16
push
mov
into
xor
outs
xchg
xor
inc
pushf
add
in
aam
std
add
or
lahf
pusha
in
mov
xor
or
inc
jmp
lock
aad
mov
sub
and
cmp
aad
pop
jmp
adc
int3
xor
(bad)
cli
scas
and
add
dec
mov
iret
inc
mov
iret
pop
pop
cld
jge
push
(bad)
bswap
pop
ror
ds
mov
push
jmp
call
inc
fist
mov
xchg
pop
jl
dec
sar
sbb
or
cmp
sub
fcom
inc
cld
jno
popa
pushf
adc
pop
ror
icebp
ins
loope
xchg
or
cmp
sub
fcom
inc
cld
jno
popa
pushf
adc
pop
loopne
movs
add
or
mov
inc
loopne
push
mov
adc
mov
cmp
pop
test
mov
movs
or
loopne
rol
add
adc
pop
aas
xchg
push
push
aad
retf
sub
pop
xchg
or
iret
pop
fst
aaa
out
daa
xchg
adc
sbb
sti
ins
neg
xchg
dec
(bad)
pop
mov
lods
adc
cld
inc
std
jae
(bad)
fist
mov
xchg
cmp
push
ins
out
test
mov
or
loope
fiadd
inc
stos
daa
mov
add
popa
jmp
rol
cld
dec
ret
outs
jmp
in
arpl
jb
and
imul
mov
outs
xchg
mov
xor
dec
mov
adc
adc
shr
mov
out
adc
mov
push
lock
mov
movd
imul
xchg
dec
shl
cmp
div
scas
sub
push
ror
stos
xor
add
out
rol
jb
and
rcl
int3
inc
cld
xor
inc
cdq
jb
bound
imul
xlat
inc
loope
xchg
or
cmp
sub
fcom
inc
cld
jno
popa
pushf
adc
pop
ror
icebp
ins
loope
xchg
or
cmp
sub
fcom
inc
cld
jno
popa
pushf
adc
pop
ror
icebp
ins
loope
xchg
or
cmp
sub
fcom
inc
cld
jno
popa
pushf
adc
pop
ror
icebp
ins
loope
xchg
or
cmp
sub
fcom
inc
cld
jno
popa
pushf
and
or
mov
inc
into
jo
cmp
setl
int
jnp
jb
pop
sub
mov
or
push
popf
inc
mov
or
push
mov
inc
mov
mov
adc
aam
jecxz
rcl
sbb
pop
xchg
cmp
je
inc
(bad)
dec
mov
add
jg
push
retf
pop
mov
dec
xchg
jge
and
inc
into
dec
stos
ins
xchg
xchg
pop
out
or
out
rcr
lods
adc
out
inc
hlt
popa
into
dec
scas
sub
inc
mov
mov
inc
xchg
xor
inc
ret
mov
and
push
or
icebp
ins
loope
xchg
or
cmp
sub
fcom
inc
cld
jno
popa
pushf
adc
pop
ror
icebp
ins
loope
xchg
or
cmp
sub
fcom
inc
cld
jno
popa
pushf
adc
inc
xlat
bswap
je
arpl
sbb
sub
icebp
xor
imul
push
into
cmp
es
sbb
sti
jo
dec
scas
popa
fist
inc
call
adc
push
aas
fisttp
pop
mov
or
ror
dec
lods
cmp
sub
dec
add
ret
das
mov
mov
(bad)
jg
add
push
into
dec
mov
iret
inc
(bad)
pop
mov
ins
div
pop
rol
mov
add
jecxz
retf
aas
xchg
or
ins
in
push
mov
mov
xchg
add
(bad)
and
or
push
cmp
pop
(bad)
cmp
sbb
sti
xor
call
bound
xchg
das
nop
sub
sub
xchg
adc
jbe
push
fst
push
stos
(bad)
iret
sbb
das
adc
int3
cmp
push
mov
ja
imul
fisttp
mov
or
mul
jp
das
ret
sub
push
cmps
div
fst
push
mov
add
sbb
nop
jae
cmp
sti
jge
data16
push
fld
mov
mov
bound
jns
pop
xchg
inc
xor
cmp
loop
fs
pop
retf
dec
mov
cmps
and
loope
sbb
retf
ja
cmp
adc
push
xchg
jl
addr16
ror
mov
adc
jp
jp
das
(bad)
sub
es
add
rol
dec
test
mov
push
pop
imul
hlt
or
shr
loop
ror
xor
jne
inc
sahf
adc
push
out
adc
jp
pop
ror
xor
sub
dec
fwait
sbb
(bad)
pop
fmul
aaa
cmps
xor
das
sti
js
dec
sbb
push
test
loop
xor
xor
and
cwde
bound
jns
pop
mov
sbb
ret
add
shl
push
call
inc
jp
outs
out
aas
imul
lds
mov
sbb
iret
inc
rol
std
fbld
stos
sub
dec
out
mov
push
rol
lahf
jle
jbe
inc
(bad)
outs
xor
xor
loopne
in
dec
shl
xor
sub
hlt
jbe
inc
loopne
fisttp
xor
or
inc
lock
fisubr
shl
xchg
and
adc
std
imul
and
jo
popa
out
xchg
ins
mov
dec
repnz
mov
cld
jno
popa
pushf
adc
pop
ror
icebp
ins
loope
xchg
or
cmp
sub
fcom
inc
cld
jno
popa
pushf
adc
pop
ror
icebp
ins
loope
xchg
sbb
cmp
push
int3
inc
cld
jno
popa
pushf
adc
pop
ror
icebp
ins
loope
xchg
or
cmp
sub
fcom
inc
cld
jno
popa
pushf
adc
pop
ror
icebp
ins
loope
xchg
or
(bad)
sti
cmp
outs
retf
dec
fist
add
push
dec
mov
sar
nop
push
lods
jg
mov
adc
inc
lods
push
mov
call
out
push
aas
xchg
dec
ret
push
mov
mov
jg
outs
loop
adc
and
push
iret
inc
push
bound
xchg
jb
pop
ror
jg
outs
loop
adc
and
push
iret
inc
push
bound
xchg
jb
pop
ror
jg
outs
loop
adc
and
push
iret
inc
push
bound
xchg
jb
pop
ror
jg
outs
loop
adc
and
push
iret
inc
push
bound
xchg
jno
pop
ror
jg
outs
loope
adc
and
add
bound
xchg
mov
mov
jl
add
(bad)
jne
dec
not
dec
mov
stos
cmp
mov
dec
cwde
ins
jmp
mov
xchg
add
nop
sbb
scas
push
nop
push
aad
jle
aas
iret
pop
fcomp
ins
xchg
jbe
sbb
or
fisub
mov
adc
push
fstp
iret
add
retf
addr16
cmps
ss
pop
aam
and
xlat
inc
mov
imul
stos
std
jmp
add
pop
inc
stos
mov
pop
and
xor
in
gs
in
and
cmp
inc
sbb
inc
xchg
std
aas
ret
(bad)
out
or
pusha
shl
add
sbb
xchg
call
leave
pop
xlat
daa
jns
push
div
lock
scas
and
lods
xor
loopne
fnstcw
dec
shl
pop
(bad)
retf
inc
xor
fild
jecxz
loopne
cmp
shl
xor
sbb
in
jo
test
mov
and
mov
pusha
ins
inc
jge
xchg
call
add
mov
inc
dec
dec
loope
lods
xor
pop
xchg
pavgw
mov
ret
outs
loop
nop
scas
jno
push
scas
and
push
scas
inc
push
loop
xchg
or
(bad)
ins
ror
call
in
add
push
int
jge
out
bound
mov
mov
jg
aad
sti
jnp
jo
xor
inc
call
sti
loopne
jb
cmp
sbb
cmp
outs
sti
lahf
addr16
retf
adc
dec
not
dec
jg
xchg
imul
mov
jg
jnp
lahf
adc
add
data16
jo
jae
loop
ins
jb
iret
repnz
in
jge
add
push
into
dec
jg
popf
or
pop
fisubr
mov
adc
test
in
int
jge
out
pusha
push
adc
aas
mov
stos
fnstsw
loop
jnp
jbe
cmp
inc
fwait
push
iret
pop
inc
lahf
adc
jg
xor
outs
loop
jnp
and
pop
scas
and
ror
inc
fdiv
push
pop
nop
pop
add
pop
shl
mov
(bad)
sub
scas
and
sar
jle
inc
out
fstp
or
repnz
int
push
arpl
or
sub
add
out
rcr
mov
pop
xchg
sub
imul
xchg
inc
stos
sub
push
jp
xor
push
xchg
dec
sar
mov
or
(bad)
adc
push
mov
loope
xchg
add
dec
pop
lahf
cmp
popf
push
xchg
or
push
mov
inc
rcl
push
aaa
scas
pop
xchg
lea
mov
rol
mov
ret
repnz
xor
ret
into
jmp
mov
ficomp
adc
jbe
jbe
mov
xor
mov
arpl
dec
xlat
push
ins
addr16
jae
mov
xor
and
and
jb
aas
outs
aas
inc
add
jb
mov
cmps
pop
inc
ffree
pop
cmps
fsub
adc
repz
xchg
and
aas
es
mov
jae
mov
sbb
or
jecxz
repz
out
je
fisttp
push
iret
shr
push
sbb
add
int3
dec
ret
outs
jecxz
cdq
pop
sbb
repnz
sub
xor
lahf
jb
test
ins
retf
inc
(bad)
cvtdq2pd
dec
repnz
cmps
lahf
jl
mov
add
cmps
push
xchg
xchg
lock
add
jle
psrld
xchg
loopne
or
es
sub
aas
mov
sbb
loop
xchg
pavgb
pop
aas
mov
sub
and
enter
cmps
ficom
inc
(bad)
jbe
data16
push
mov
mov
(bad)
dec
(bad)
jle
outs
out
xchg
push
xchg
mov
cmps
ficom
inc
(bad)
jbe
data16
push
mov
mov
(bad)
dec
(bad)
jle
outs
out
xchg
push
xchg
mov
cmps
ficom
inc
(bad)
jbe
data16
push
mov
mov
(bad)
dec
(bad)
jle
outs
out
xchg
push
xchg
mov
cmps
ficom
inc
(bad)
jbe
data16
push
mov
mov
(bad)
dec
(bad)
jle
outs
out
xchg
push
xchg
mov
cmps
ficom
inc
(bad)
jbe
data16
push
mov
mov
(bad)
dec
(bad)
jle
outs
out
xchg
push
xchg
mov
cmps
ficom
inc
(bad)
jbe
data16
push
mov
mov
(bad)
dec
(bad)
jle
outs
out
xchg
push
xchg
mov
cmps
ficom
inc
(bad)
jbe
data16
push
mov
mov
(bad)
dec
(bad)
jle
outs
out
xchg
push
xchg
mov
cmps
ficom
inc
(bad)
jbe
data16
push
mov
mov
(bad)
dec
(bad)
jle
outs
out
xchg
push
xchg
mov
cmps
ficom
inc
(bad)
jbe
data16
push
mov
mov
(bad)
dec
(bad)
jle
outs
out
xchg
push
xchg
mov
cmps
ficom
inc
(bad)
jbe
data16
push
mov
mov
(bad)
dec
(bad)
jle
outs
out
xchg
push
xchg
mov
cmps
ficom
inc
(bad)
jbe
data16
push
mov
mov
(bad)
dec
(bad)
jle
outs
out
xchg
push
xchg
mov
cmps
ficom
inc
(bad)
jbe
data16
push
mov
mov
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jne
gs
push
lods
inc
mov
jo
pusha
std
sbb
pop
cmps
outs
xchg
jg
maskmovq
neg
xor
jne
gs
push
lods
inc
mov
adc
or
lds
xchg
adc
add
push
lods
inc
leave
xor
in
add
sbb
mov
movs
pop
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
push
ficom
lods
sbb
jnp
pushw
adc
scas
sub
or
out
xchg
sub
ds
push
sub
jnp
push
jle
mov
scas
dec
cmp
or
lea
xchg
push
xchg
and
gs
jb
mov
in
cli
add
repnz
mov
dec
movs
pop
and
jge
add
mov
int
fist
add
sbb
dec
lods
sub
das
test
out
inc
jl
jge
lahf
jmp
retf
cmps
cmp
ror
dec
xor
sub
push
lods
mov
push
adc
std
or
and
pop
rol
(bad)
shr
movs
adc
sti
scas
fisub
dec
in
inc
stos
or
mov
movs
pushf
xchg
js
shl
bound
int
lea
add
fld
dec
arpl
ins
shl
dec
call
inc
xor
test
cmp
jno
fnstsw
mov
pusha
test
les
sub
cmp
sbb
inc
sub
adc
mov
adc
xchg
pop
adc
or
aaa
jno
fsubr
enter
ficom
test
mov
or
xchg
mov
out
sbb
adc
inc
xor
test
mov
pop
push
movs
pop
sar
nop
jge
and
xor
mov
in
icebp
imul
dec
xrelease
iret
sub
adc
repz
lahf
pop
mov
mov
sub
ins
repnz
adc
sub
cmp
loop
fisttp
ins
adc
test
in
lds
xchg
xchg
gs
lea
pop
or
cmps
fst
test
mov
cmp
sbb
ret
iret
mov
mov
nop
in
adc
repnz
aad
dec
cmp
push
dec
lock
push
and
mov
mov
loopne
sub
test
pop
sbb
jl
enter
call
and
mov
fldcw
jno
mov
jl
jae
xchg
and
into
xchg
cmc
inc
jne
jmp
cmc
sub
dec
sbb
jbe
dec
movs
lods
stos
pop
inc
mov
push
adc
jge
in
es
leave
mov
repz
js
cmp
call
mov
push
mov
movs
push
movs
add
or
add
fsubr
int
mov
xor
jmp
in
movs
pop
push
jp
mov
xlat
hlt
or
adc
dec
push
pop
pop
mov
cld
mov
cs
xchg
das
aam
(bad)
push
pop
sub
ds
cmp
std
(bad)
repnz
sub
ret
sub
mov
gs
lods
xor
pop
fsub
jbe
or
jne
mov
movs
pop
fs
jbe
aaa
jmp
inc
jae
int
and
ss
into
xchg
adc
les
mov
mov
jne
addr16
imul
sub
cli
call
aad
add
mov
ins
(bad)
lock
mov
out
add
std
inc
scas
lahf
test
pop
shl
shr
cmp
adc
inc
repz
pushf
jmp
cmc
or
dec
js
or
test
and
gs
test
xor
mov
jl
sub
push
fnstsw
std
mov
pop
pop
push
lods
mov
std
lea
fidiv
movs
shl
xchg
cwde
in
imul
dec
sub
ja
cdq
retf
enter
fld
out
add
cmp
dec
aad
(bad)
aad
and
push
xor
xor
test
std
sub
sahf
loope
lds
xchg
sbb
jne
ds
retf
push
adc
les
sub
and
adc
dec
clc
mov
out
pop
jle
inc
jl
std
jl
arpl
mov
mov
aad
mov
mov
pop
xchg
cmp
push
or
int
fst
or
test
push
test
xchg
out
enter
jecxz
jmp
sbb
cmp
dec
mov
cmp
push
in
neg
in
adc
fmul
xor
(bad)
mov
shl
push
xchg
lds
xchg
std
add
fisub
pop
mov
div
das
es
fcomp
out
add
mov
add
in
sub
mov
pop
pop
imul
call
scas
in
test
cwde
adc
or
fs
adc
ss
stos
jl
xor
adc
adc
mov
clc
sub
sbb
fst
arpl
push
aam
mov
call
inc
add
and
cld
jl
mov
ret
cs
jns
in
ins
xor
xchg
push
mov
in
aad
dec
imul
clc
pop
ret
mov
and
sbb
add
xor
scas
dec
lods
mov
cmps
push
test
jg
sbb
aad
mov
sub
shr
jp
ins
mov
in
gs
js
psubq
cmp
into
ss
mov
sahf
lds
arpl
mov
sahf
inc
xor
adc
lds
inc
std
and
scas
sar
shl
fdivr
add
enter
jne
add
cmps
push
mov
into
cmc
pop
int3
xchg
mov
jb
popa
fdivr
inc
jl
loope
lahf
jmp
or
inc
cmp
push
pop
cmp
mov
dec
xor
adc
ja
dec
mov
pop
cmps
inc
ror
cs
adc
popf
cmc
cli
xor
popf
push
sbb
mov
aam
or
(bad)
cmp
and
jnp
jmp
or
dec
cmp
lock
aas
cld
fdiv
ins
pop
jecxz
sbb
xor
xchg
add
cmp
mov
aam
xchg
out
xor
jo
add
(bad)
pusha
fucomp
push
jmp
hlt
mov
xchg
add
lods
inc
aas
inc
push
out
cmp
std
sbb
fst
les
xor
out
movs
pop
push
in
and
clc
movs
fiadd
xor
mov
jbe
dec
outs
mov
push
movs
and
adc
push
call
imul
int
push
in
pop
shl
xchg
and
(bad)
(bad)
jl
jnp
popf
jecxz
adc
inc
std
or
rcl
cmc
mov
ins
leave
ins
mov
jno
add
lods
enter
daa
mov
icebp
adc
in
cmp
jmp
cmp
call
fwait
aam
shr
mov
or
lds
pop
movs
in
popa
ins
enter
movs
adc
inc
in
mov
mov
in
aad
add
shr
(bad)
cld
inc
add
jmp
leave
das
jnp
sbb
jo
ficomp
inc
aad
popf
js
dec
call
jp
enter
popa
test
xor
test
gs
mov
ds
(bad)
cmp
jae
fiadd
fisubr
shr
mov
mov
sar
jg
mov
mov
fisubr
push
push
adc
addr16
mov
fisttp
shr
mov
clc
cwde
stc
pop
adc
ficom
sub
xchg
inc
mov
or
push
push
xchg
test
popf
pusha
enter
jns
retf
cmps
loope
shl
inc
mov
sub
jb
inc
sbb
in
mov
leave
rcl
loope
sbb
pop
daa
iret
or
ins
inc
inc
add
(bad)
in
sti
or
(bad)
mov
aad
push
pop
inc
cmp
add
fcomp
pop
test
bound
std
je
push
aad
push
repz
mov
dec
pop
push
es
ins
mov
cmp
movd
loopne
xor
sub
cs
push
mov
xchg
fld
push
rep
cwde
fwait
sub
push
mov
ins
movs
jne
jb
pop
mov
int
not
loopne
cmc
std
add
mov
mov
jecxz
dec
ins
xor
es
loopne
mov
sbb
add
dec
movs
xor
cmp
imul
into
leave
xor
sbb
adc
cmp
xor
pop
fcompp
inc
mov
nop
data16
push
mov
adc
mov
xor
shr
and
add
push
aaa
inc
jle
retf
cmc
jle
and
ret
inc
xchg
and
jge
es
push
movs
int3
enter
out
retf
ins
(bad)
or
(bad)
(bad)
addr16
pop
xchg
imul
dec
mov
add
pop
mov
mov
mov
push
loop
lock
shl
popf
pop
jmp
inc
mov
or
xchg
and
dec
push
push
out
push
jno
ror
dec
mov
mov
push
popa
in
add
sub
bound
lock
and
push
dec
(bad)
je
inc
scas
aad
mov
in
mov
cmp
adc
in
xor
or
push
retf
push
pop
in
mov
test
mov
call
lods
shl
mov
mov
dec
dec
dec
mov
lea
and
inc
mov
push
push
shl
add
hlt
stos
retf
mov
popa
push
dec
nop
test
mov
leave
out
(bad)
sub
add
mov
cmp
scas
jno
sub
jle
push
adc
jbe
frstor
dec
pop
jmp
cdq
out
(bad)
jno
scas
call
ss
(bad)
sbb
in
sub
pushf
test
sub
push
icebp
xor
and
inc
push
cmp
in
cmc
cmc
cmc
or
xor
int3
les
or
lds
in
and
pop
mov
push
inc
loop
sub
fs
int3
jp
aaa
retf
add
popf
mov
sahf
in
popa
mov
dec
mov
pop
out
test
jp
jne
add
movs
inc
mov
push
adc
nop
pop
mov
sub
lds
and
jp
fisub
ret
push
sti
mov
push
mov
ja
test
jae
jg
jle
cld
movs
ins
or
clc
fsubrp
fcom
adc
add
add
mov
je
fs
lods
or
and
lds
int3
data16
mov
cmc
xchg
je
shl
sbb
and
pusha
add
cmp
mov
jge
pushf
jmp
outs
xchg
aad
xchg
mov
daa
cmps
pop
push
nop
xor
inc
ror
sub
adc
pop
fcomp
lds
pop
cmp
mov
xchg
lods
inc
mov
jmp
js
sbb
mov
jle
loopne
repnz
add
dec
sti
fidiv
lods
pop
pop
jmp
mov
(bad)
push
sahf
jl
push
(bad)
call
mov
(bad)
xlat
sbb
cld
icebp
xchg
sbb
sub
(bad)
les
fisubr
out
pop
pop
fld
sahf
test
mov
sub
xchg
push
push
lods
inc
jl
jle
les
es
mov
xchg
jo
push
pop
mov
xchg
arpl
pushf
dec
mov
ins
leave
xor
jne
mov
ins
mov
push
lods
mov
mov
jle
mov
ret
das
nop
mov
mov
sbb
mov
pop
std
sbb
icebp
aas
ins
div
cld
pop
jge
jp
jne
lahf
int3
pop
(bad)
sbb
(bad)
fidiv
mov
mov
imul
movs
sbb
in
cmp
int
imul
adc
gs
pop
outs
dec
push
mov
movs
mov
jge
cdq
adc
shl
in
mov
jl
in
aad
int
mov
movs
add
pop
inc
es
push
js
and
icebp
add
clc
(bad)
std
cmc
dec
mov
aad
xchg
mov
inc
cmc
pop
xchg
cmp
movs
pushf
pop
loopne
dec
xor
mov
add
mov
clc
mov
pop
fsubr
stos
hlt
inc
in
mov
add
fsub
movs
data16
xchg
xor
push
inc
or
fst
jle
mov
cmp
sbb
pushf
push
cmp
call
xchg
in
cmp
in
dec
jle
test
cmp
xchg
cmp
xor
inc
adc
mov
fisubr
dec
lds
(bad)
call
stos
add
jne
push
(bad)
mov
and
add
push
aad
mov
lock
dec
out
sub
test
push
lods
adc
push
adc
or
push
jo
dec
movs
mov
lods
test
lea
inc
mov
jle
pop
fadd
push
loopne
(bad)
xchg
call
lock
dec
daa
adc
enter
jecxz
sbb
sbb
dec
xchg
loope
jno
dec
adc
movs
rol
and
retf
inc
push
ficomp
mov
(bad)
pop
or
std
mov
xchg
mov
push
lods
lods
test
sub
add
xchg
(bad)
pop
bound
fistp
(bad)
ficomp
in
sbb
cmc
in
sbb
mov
test
mov
push
lock
lods
mov
or
(bad)
jns
dec
push
and
mov
sbb
mov
(bad)
push
outs
jnp
ror
rcl
aam
mov
adc
push
mov
sbb
add
fimul
sub
sub
xchg
test
jne
ds
sbb
mov
cwde
cwde
xor
cmc
or
dec
jo
xor
push
clc
enter
lods
lods
jnp
neg
fstp
in
push
std
(bad)
mov
mov
in
cs
std
enter
mov
push
retf
and
mov
mov
cmc
leave
cld
popa
std
movs
push
jmp
xor
xchg
lds
in
cmp
pusha
mov
cwde
sub
int3
mov
inc
gs
test
aam
lea
std
cmc
pop
loop
fistp
(bad)
jge
inc
jge
(bad)
pop
lds
inc
mov
int
sub
call
cmc
sbb
mov
jne
xchg
loopne
mov
or
add
xor
(bad)
movs
lds
dec
mov
mov
fcomp
adc
gs
lods
and
inc
cmp
in
add
nop
aad
cmp
xlat
outs
popa
jge
pop
aas
jne
out
pop
xor
or
icebp
in
addr16
xchg
mov
inc
pop
shr
xor
enter
imul
mov
rcr
std
data16
xor
cmps
inc
sbb
rcr
adc
les
push
inc
mov
inc
scas
and
cwde
popf
xor
and
mov
inc
push
cmp
and
scas
lahf
pop
test
sub
test
sar
out
jo
in
cdq
adc
call
pusha
mov
dec
popf
or
(bad)
cmp
fmul
mov
repnz
fld
jmp
or
scas
and
adc
sbb
inc
jge
lea
popf
xchg
imul
ror
jns
dec
add
sbb
push
test
fdivr
fcom
push
popa
xor
test
mov
in
add
idiv
ins
cdq
(bad)
out
xor
aad
or
inc
inc
push
inc
xchg
lea
mov
ret
sub
ins
test
sub
or
leave
inc
test
dec
adc
jecxz
rcl
ret
ror
or
mov
sub
mov
adc
mov
or
add
mov
aas
sub
aad
lods
cmp
sub
add
xor
xor
lock
enter
lods
add
hlt
mov
hlt
mov
or
jge
ins
or
js
call
inc
mov
in
cmc
dec
sbb
sub
lock
mov
push
push
int
mov
(bad)
pop
sar
jg
mov
push
ins
push
mov
xchg
fsubr
ds
pusha
repnz
pop
mov
mov
pop
push
jp
mov
lea
idiv
cwde
out
sub
dec
or
sbb
in
sub
mov
mov
fst
sbb
lds
inc
dec
shl
xor
(bad)
fadd
fstp
inc
sub
jge
sar
sub
ins
and
bound
mov
mov
lock
cmp
mov
fwait
xlat
stos
test
and
sbb
and
mov
adc
xchg
lods
ins
ins
dec
jne
call
cld
jne
jmp
in
sbb
sub
sub
pop
lds
enter
push
enter
sub
xor
inc
ret
and
xor
adc
mov
xor
loope
sub
js
or
add
jp
popf
add
out
jo
pusha
push
rcl
int
sbb
sub
loopne
arpl
jo
bound
into
fdecstp
jne
xor
mov
hlt
dec
sbb
in
into
ror
mov
call
int3
push
test
test
in
sub
scas
jg
mov
or
ror
cmp
mov
push
push
shl
int
(bad)
cmp
dec
hlt
(bad)
cdq
mov
and
push
and
leave
int
int
adc
fist
dec
movs
mov
loopne
jne
add
pop
push
lods
inc
mov
inc
adc
pop
(bad)
leave
lds
push
dec
fwait
pop
das
or
inc
or
adc
test
loope
mov
movs
pop
sar
daa
cwde
inc
loopne
clc
mov
jmp
xor
gs
pop
push
loop
push
hlt
int
ss
lods
lods
retf
popf
stos
cwde
adc
inc
and
jle
jo
mov
aaa
push
mov
aaa
xchg
push
push
loopne
clc
xor
test
std
pop
inc
sbb
cwde
icebp
add
mov
pop
push
xor
mov
cli
inc
out
ds
sub
lods
cmc
leave
ins
dec
push
ror
aad
mov
pop
shr
jp
jo
mov
or
jmp
leave
jns
jne
mov
test
and
loope
lahf
jmp
push
in
aad
xchg
jg
adc
mov
imul
test
or
cwde
jmp
pop
sub
cmp
mov
fwait
xchg
fs
xor
jb
cdq
stos
and
and
adc
cmp
ret
adc
dec
js
call
(bad)
scas
sbb
in
push
cwde
loopne
and
sbb
mov
pop
and
iret
cmp
test
xor
ret
mov
cmp
push
xor
xor
mov
push
int3
call
ficomp
cwde
pop
mov
xchg
loop
adc
js
inc
add
clc
add
int
dec
sbb
retf
(bad)
in
fs
add
xchg
pop
sub
sub
add
pop
sub
cs
sub
clc
stos
add
sbb
(bad)
fdivr
dec
adc
push
and
mov
adc
stc
add
xchg
cmp
into
retf
aam
xchg
push
inc
(bad)
mov
popf
add
leave
mov
xor
pusha
fst
(bad)
ret
rol
out
pusha
add
cmp
ins
movhps
in
(bad)
or
sbb
cld
rcl
xchg
fdivp
mov
fiadd
xor
pusha
mov
jbe
shr
hlt
lock
pop
aaa
popa
mov
sar
fcmovu
add
sbb
dec
ds
imul
jne
xchg
jle
lods
inc
cmp
in
add
adc
and
inc
pop
or
and
cmp
cmps
jle
hlt
mov
sbb
inc
push
jecxz
movs
push
xor
adc
(bad)
push
sbb
jns
test
push
xchg
popf
sahf
cs
jmp
into
sahf
(bad)
scas
xchg
dec
popf
out
pushf
inc
push
inc
cmc
mov
and
or
jl
pop
jo
push
xchg
fwait
test
push
es
clc
das
lods
and
jg
xchg
add
cmps
lock
dec
push
pop
ret
push
jne
gs
test
pop
ss
std
js
loop
in
aad
(bad)
leave
sub
shl
call
jecxz
vpshlw
cmps
fstp
lds
call
call
mov
adc
or
jmp
mov
xor
out
nop
fisubr
and
ins
cmc
push
xchg
sbb
ss
es
or
test
push
(bad)
dec
mov
shl
fcom
cmp
sub
(bad)
fwait
call
dec
xadd
add
inc
dec
jnp
mov
add
(bad)
and
or
and
(bad)
sbb
jne
add
retf
push
sub
inc
lock
lock
gs
mov
xchg
(bad)
sahf
xor
js
out
aam
adc
ror
push
loopne
cmp
add
clc
fnsave
cs
cdq
xchg
mov
push
mov
push
loopne
cmp
cdq
shr
(bad)
ja
cwde
adc
jbe
mov
jo
aad
adc
nop
idiv
not
mov
lea
adc
aad
cmp
cmps
in
pop
sub
lock
sbb
fbld
mov
or
cwde
pop
mov
lahf
dec
pop
pop
in
or
adc
lahf
cwde
in
test
outs
sub
rcr
sub
popf
(bad)
ss
adc
adc
xchg
or
dec
sub
out
or
cdq
adc
in
or
test
ins
sub
fnstenv
shl
mov
call
test
pop
sub
adc
daa
xchg
and
sub
mov
js
into
ss
sub
pop
push
sub
stc
mov
test
xchg
bound
call
sbb
push
or
in
jle
inc
sbb
gs
mov
es
adc
scas
push
push
cmc
add
mov
aas
call
or
out
sbb
mov
fs
cdq
aad
inc
jo
test
push
mov
out
adc
mov
sub
jmp
ret
loopne
les
out
push
mov
out
test
call
retf
sub
pop
fnstsw
dec
xor
push
xor
sbb
sbb
mov
in
mov
lock
lahf
xchg
gs
and
add
popf
pushf
fmul
clc
adc
data16
jbe
mov
mov
mov
dec
retf
das
imul
sbb
into
sub
pusha
in
jbe
or
cmp
push
ins
enter
in
popf
fsubr
or
gs
test
xchg
in
dec
cmp
mov
sub
(bad)
xlat
mov
add
fs
pop
sahf
adc
jo
out
sbb
cmp
icebp
movs
push
test
lea
jmp
mov
or
push
jnp
cmp
sub
xchg
fadd
inc
mov
dec
cmp
adc
sub
dec
sub
test
or
sbb
lods
mov
cmp
or
push
ret
pop
adc
jb
adc
inc
mov
scas
js
in
in
jbe
repnz
cwde
enter
lds
jnp
lock
stc
jnp
cwde
add
inc
dec
aad
sub
ror
cdq
jge
push
fcom
push
xor
sbb
mov
jbe
xchg
icebp
outs
dec
sub
(bad)
push
or
cdq
lea
lahf
mov
push
push
jbe
xchg
dec
jo
int
loopne
dec
pop
fsubr
test
into
jl
std
push
sbb
adc
mov
sub
xor
mov
out
bound
adc
mov
std
jl
ins
adc
mov
pop
ret
outs
std
mov
mov
inc
leave
push
sahf
pusha
adc
xchg
fsub
sub
ins
cmp
rcr
mov
out
in
adc
mov
inc
xor
pusha
dec
sub
push
adc
add
gs
or
aad
cmp
sbb
ins
mov
int
aad
xor
inc
jge
xchg
gs
out
mov
mov
dec
jbe
mov
aam
movs
or
mov
js
sub
into
gs
and
jle
shl
lods
dec
out
sbb
fist
aas
test
retf
xchg
jns
test
or
xchg
mov
inc
movs
sbb
dec
xchg
fisubr
dec
aad
pop
loope
clc
inc
cmp
xchg
lds
xor
(bad)
cs
ret
xchg
jp
xor
imul
cmc
cmp
mov
add
or
mov
out
mov
push
out
adc
retf
movaps
test
ins
neg
xor
lods
movs
push
push
out
int
jge
imul
pushf
mov
daa
xchg
shl
xchg
outs
push
in
jns
popf
cmp
fucomip
lods
push
fiadd
inc
push
mov
in
in
lods
sub
pop
mov
jne
bound
mov
xor
adc
aad
pop
cmp
mov
cs
jns
inc
jge
xchg
inc
xchg
fisub
(bad)
(bad)
dec
or
mov
jle
mov
xchg
cs
jbe
inc
sub
or
mov
pop
pop
add
sbb
ror
movs
shr
xchg
add
pop
lods
inc
out
hlt
inc
jns
in
adc
cmc
enter
sub
movs
mov
jge
movs
retf
push
repz
mov
ficomp
push
adc
cmps
dec
mov
shl
xchg
xchg
xchg
push
leave
or
addr16
adc
scas
in
int
lds
cmps
aas
(bad)
mov
mov
inc
clc
jo
scas
xchg
mov
xor
mov
xor
test
mov
dec
dec
cmp
mov
sahf
movs
mov
loopne
sbb
lds
jge
lea
ins
and
dec
jmp
push
aad
cmp
pop
shl
(bad)
fld
rcr
std
inc
fdecstp
int
fst
xchg
and
cmp
xchg
scas
idiv
jno
bound
sub
inc
xor
sahf
iret
div
clc
or
mov
pop
adc
jns
mov
lea
leave
xchg
inc
cmps
sub
mov
jmp
aad
(bad)
sub
enter
popf
lea
push
xor
mov
or
jo
inc
movs
cmp
clc
gs
dec
inc
or
sahf
mov
push
dec
mov
or
cmp
gs
in
mov
fisubr
into
jne
(bad)
test
pop
ror
bnd
push
aad
sahf
hlt
ins
push
inc
and
and
cmp
jnp
push
call
xchg
ins
push
pusha
cmp
(bad)
call
lea
inc
jmp
in
mov
push
inc
fst
jb
lea
push
inc
xchg
lds
pushf
in
pop
mov
cmp
cmc
fdivrp
mov
adc
and
cdq
add
fstp
pop
call
cmp
dec
fcmovnbe
aad
push
pop
xor
fild
les
add
aad
dec
cmp
pop
pushf
test
out
popf
and
inc
(bad)
mov
sub
jbe
cld
in
cmp
adc
mov
imul
aad
movs
adc
xor
scas
add
pop
aad
and
movs
rcl
xchg
sbb
fsubrp
adc
xor
je
dec
sbb
add
xchg
mov
(bad)
lods
or
adc
inc
out
push
adc
dec
hlt
push
mov
cmp
loopne
jne
test
jl
popf
scas
fwait
gs
shr
mov
pop
call
adc
sti
dec
mov
pushf
in
mov
shl
sub
push
and
mov
in
push
add
and
test
(bad)
cmp
ins
sub
xchg
fst
or
stc
pop
sbb
xchg
mov
js
cmp
test
cli
sahf
repz
xchg
in
(bad)
adc
mov
cmc
mov
dec
dec
add
sub
xchg
jno
lods
mov
imul
jne
repnz
push
push
mov
popf
sub
pop
fbld
mov
inc
adc
test
jecxz
es
shl
cmp
inc
int3
clc
xor
test
xor
test
xchg
xor
cmp
pop
jl
loope
je
loope
les
inc
test
popf
in
push
ins
jo
icebp
retf
mov
ins
mov
movs
sbb
ins
jns
mov
sub
mov
cmp
sbb
jle
gs
gs
push
enter
int3
lods
(bad)
mov
popa
mov
ror
push
inc
mov
in
sbb
pushf
test
addr16
out
sub
xor
stos
push
test
mov
std
jbe
in
mov
in
lds
int
out
jge
push
pop
xor
pushaw
or
jmp
dec
pushf
mov
jge
inc
jns
iret
pop
popf
dec
push
xchg
dec
jne
fiadd
mov
sub
imul
adc
and
jge
fld
xlat
xor
inc
mov
xchg
pop
mov
movs
sbb
xchg
cmp
(bad)
(bad)
cmp
out
lods
out
xor
cmc
or
icebp
xor
mov
xor
pusha
jbe
mov
ins
adc
ja
int3
push
std
fimul
fwait
sub
cli
jmp
sub
push
into
mov
jmp
xchg
push
mov
out
push
cmp
push
inc
call
and
std
jge
in
sub
outs
neg
or
clc
inc
bound
sbb
std
sbb
cmp
inc
in
pop
movs
lds
xchg
xor
int
call
in
mov
ds
sbb
out
push
rcl
jp
pusha
mov
push
sbb
mov
in
adc
ja
int
js
push
pop
or
xchg
or
jne
gs
dec
call
fnstenv
mov
mov
sub
add
push
jmp
and
lock
xchg
cwde
shl
dec
sbb
push
hlt
int
ss
mov
inc
and
jns
xor
dec
aad
mov
dec
push
or
push
std
adc
inc
in
adc
mov
imul
test
test
sbb
and
cmp
or
lds
push
sub
(bad)
fisubr
inc
gs
scas
xchg
stc
sub
dec
aad
lds
jp
dec
and
gs
jb
(bad)
cmc
scas
add
pop
sub
in
pop
fs
lds
mov
push
retf
enter
lods
mov
js
fucomip
cmp
lds
or
xor
xor
clc
xor
in
aam
ss
or
cmp
xchg
das
test
inc
jge
outs
adc
push
mov
add
aam
imul
out
push
or
pop
or
mov
push
cwde
cli
je
js
adc
sub
jno
xchg
cmp
push
lds
lods
inc
imul
pop
xchg
ror
sbb
pop
adc
mov
lahf
push
lods
lea
mov
mov
sub
lds
dec
mov
fld
ins
jp
and
cs
lock
mov
sbb
adc
sbb
frstor
xchg
lods
test
and
sbb
dec
test
adc
pop
push
ins
enter
fisttp
dec
lahf
dec
shr
pop
in
or
cmps
push
inc
int3
ss
int
enter
lock
jmp
sbb
aad
xor
test
xor
sub
nop
mov
daa
sbb
ins
or
stc
sub
setge
cdq
clc
retf
sbb
xor
jns
repnz
sbb
dec
test
xchg
push
fs
movs
ins
test
int3
scas
adc
ds
in
dec
cmp
adc
movs
bound
or
enterw
std
or
or
sub
xor
ins
jp
jae
call
mov
cwde
test
std
cli
mov
pop
sub
adc
jne
dec
int
dec
jge
cwde
mov
add
movs
(bad)
cmp
pusha
inc
into
js
mov
sub
mov
push
stos
movs
fnstsw
xor
jo
int3
push
ret
and
lods
ins
sub
adc
pop
in
jmp
nop
aad
scas
ds
pop
jge
or
lock
jo
and
mov
sub
xchg
jp
std
movs
aaa
xchg
ins
xchg
xchg
lods
dec
mov
rcr
pop
std
lds
sub
lock
sbb
mov
fst
pop
dec
mov
or
ficomp
test
or
cmps
dec
aad
cmp
repz
sub
cdq
mov
pusha
fsubr
xor
or
and
jl
pop
mov
movs
push
push
out
lods
mov
call
inc
xor
sbb
jecxz
sub
loope
ret
jge
ficom
hlt
popf
inc
xor
inc
jbe
push
sub
scas
js
push
jg
pop
cs
sar
xchg
lea
and
fiadd
mov
outs
pop
mov
cmp
or
and
mov
adc
push
hlt
dec
jp
xor
push
retf
adc
into
and
int3
sbb
xor
and
pop
movs
mov
out
aam
or
in
scas
pushf
xor
popf
ins
or
cmps
adc
fnstsw
pop
jbe
xchg
xchg
push
pop
idiv
enter
jge
push
add
out
sahf
sbb
inc
lods
rcl
in
mov
daa
sbb
ror
push
mov
or
inc
int
sub
(bad)
ds
add
ror
sbb
push
cmp
outs
into
jl
mov
std
dec
mov
jle
xchg
(bad)
jbe
inc
push
loopne
jge
movs
mov
pop
pop
jb
mov
adc
or
nop
mov
(bad)
pop
push
popa
movs
int3
hlt
mov
cs
push
adc
inc
sub
enter
xor
cs
add
mov
(bad)
mov
cmps
nop
pop
outs
or
dec
mov
sub
cwde
cmps
mov
lods
in
pop
mov
adc
or
sub
cmp
les
push
push
sub
and
xor
lea
dec
aad
push
ret
repz
push
(bad)
push
mov
xor
push
cs
clc
cmc
pop
in
mov
push
out
(bad)
std
in
aas
mov
fcom
mov
stc
std
or
sbb
rol
push
cmps
popf
(bad)
xor
pop
leave
bound
xchg
rcl
repnz
js
(bad)
bound
and
std
add
adc
or
cmp
lock
pop
mov
and
lods
into
mov
push
mov
in
sub
cmp
mov
jge
fistp
xlat
xor
in
push
mov
int3
mov
aam
xchg
jne
sub
ins
nop
div
enter
push
add
mov
mov
js
and
hlt
neg
jb
adc
pop
pop
lds
jnp
popf
cmc
pop
shl
and
mov
sbb
loopne
and
inc
xor
call
or
sbb
mov
cs
out
mov
mov
fstp
xor
push
popf
dec
cli
call
shl
aad
xchg
nop
js
sub
mov
and
and
std
jnp
cmps
xchg
push
cmp
cmp
push
or
sub
out
pop
call
fisttp
push
mov
pop
popf
xor
mov
sub
xchg
push
in
cmc
int
push
jmp
dec
xchg
jb
stc
dec
adc
in
xchg
lahf
enter
call
inc
test
adc
dec
nop
push
dec
dec
xor
cmp
mov
jnp
xor
loope
add
and
push
sub
pop
dec
mov
xor
popa
pop
sbb
fisub
jo
or
mov
cmp
loopne
cmp
jb
pop
leave
cdq
enter
data16
or
shl
sbb
test
stos
stc
mov
(bad)
fnstenv
test
pop
rol
cwde
(bad)
mov
mov
dec
bound
mov
std
cmc
retf
in
shl
je
out
aas
mov
es
ss
push
adc
aad
sub
adc
sub
lahf
mov
call
xchg
adc
aad
pop
mov
repnz
inc
ret
lods
rcl
xor
popa
fcom
inc
repnz
ficomp
adc
cmp
rol
pop
in
pop
pushf
adc
mov
xor
jnp
xor
fst
in
cli
push
leave
repnz
cld
dec
enter
out
push
stos
ins
inc
ss
bswap
fadd
leave
mov
sbb
movs
mov
pop
push
or
adc
xor
(bad)
ficom
mov
cdq
loop
in
dec
cmp
shr
aas
idiv
call
xor
in
adc
shl
or
and
inc
push
inc
ret
sahf
jmp
adc
out
cmp
mov
movs
jge
jb
push
cmc
das
mov
in
cli
ins
sub
and
cdq
sub
test
lock
mov
pop
add
in
inc
scas
jne
sub
inc
aad
in
mov
movs
pop
aaa
in
push
and
into
jge
or
push
xchg
adc
lock
ds
cld
shl
xlat
cmp
or
jb
fadd
int
and
cmp
sbb
jmp
js
mov
mov
pusha
add
out
push
inc
cmp
add
add
and
ficomp
push
div
gs
and
stos
retf
int3
scas
rcl
cwde
add
xor
push
adc
mov
or
popf
test
test
fwait
in
mov
jge
dec
jmp
or
add
add
fucomp
fs
std
or
or
cmp
jge
push
lock
pop
inc
xor
and
push
dec
sub
cdq
cmp
mov
jge
sbb
lods
and
mov
cmp
xor
(bad)
dec
mov
(bad)
push
mov
or
adc
addr16
in
aad
inc
popa
mov
cmc
add
cli
lea
xor
sbb
sbb
in
mov
sbb
pop
test
gs
fsubr
inc
jmp
add
ja
or
std
adc
lea
data16
mov
cli
add
(bad)
cmp
sub
test
outs
mul
stc
fimul
add
and
repz
pop
jmp
xchg
stos
lea
fucomp
and
adc
pusha
xchg
adc
dec
mov
je
aam
xchg
movs
xchg
cld
shl
or
test
xor
add
adc
cmp
es
sbb
inc
lock
movs
xchg
and
out
lds
mov
mov
out
jl
xor
push
lods
test
xchg
ss
ins
cwde
xlat
ficomp
test
lds
mov
pop
shr
push
pop
pop
sub
test
push
mov
jle
movs
outs
adc
inc
add
pop
das
ret
cmp
daa
fcom
cdq
clc
leave
int
(bad)
sbb
cmp
or
cwde
cld
mov
mov
push
jge
hlt
jne
xchg
fist
xchg
mov
jmp
sbb
outs
fwait
cmp
push
ins
neg
push
test
loope
(bad)
jbe
ret
aad
dec
cmp
xchg
popaw
clc
mov
call
int
cwde
sbb
inc
js
pop
and
ret
pop
popf
xchg
ins
inc
lock
ds
fisub
inc
mov
sub
xchg
fwait
cmc
ds
dec
or
stos
retf
push
ja
data16
add
fucomp
mov
cmc
std
or
cwde
ins
loopne
rcl
in
test
add
gs
int
push
adc
ss
mov
or
scas
sub
popf
mov
xor
inc
sbb
std
or
xchg
xchg
loop
sti
mov
movs
and
cmp
ins
int3
aad
pop
and
cmp
pop
and
cmp
movs
movs
adc
cmp
test
cmp
test
or
xchg
(bad)
rcr
jb
bound
push
mov
jmp
dec
mov
push
xor
and
iret
mov
sub
and
pop
mov
outs
(bad)
pop
mov
ins
ins
and
xor
mov
adc
shl
jmp
enter
or
inc
lea
lds
xor
cmps
sbb
mov
(bad)
jne
xchg
sub
lock
add
stc
mov
adc
nop
in
sub
cmc
movs
ficomp
mov
or
mov
or
add
mov
cmp
outs
cmp
out
sub
fstp
std
int
cmp
cmp
or
xchg
mov
and
jmp
pop
addr16
mov
sar
lock
fsubr
clc
outs
cmp
shl
popf
mov
and
mov
shr
cmps
xchg
shr
xor
aad
outs
jp
jne
out
ss
add
jb
and
in
jmp
cmps
ret
cmp
ror
imul
je
scas
push
in
pop
mov
jle
out
and
ds
loope
scas
(bad)
sbb
imul
cmp
pop
sbb
test
repz
pop
xchg
or
jecxz
mov
popf
sbb
sub
xchg
fisub
loope
nop
scas
out
add
add
or
xchg
pop
fisubr
fwait
movs
mov
adc
stos
or
test
jl
mov
std
add
add
add
call
call
pop
ins
sub
sar
retf
xor
ret
sbb
(bad)
cdq
adc
out
je
lock
scas
mov
mov
and
push
add
out
push
popf
dec
push
arpl
mov
gs
push
push
jmp
and
out
pop
in
xchg
ja
mov
popf
scas
fist
std
sub
ds
js
repz
xlat
push
out
addr16
jbe
add
push
pop
in
pusha
push
les
out
and
shl
repz
test
and
jne
movs
clc
pushf
div
test
cmp
push
cmps
pop
mov
mov
lahf
mov
aam
push
add
outs
(bad)
pop
mov
cs
mov
imul
push
gs
xchg
inc
cmps
push
mov
(bad)
dec
xlat
dec
mov
gs
push
mov
jo
ror
inc
jbe
adc
xchg
out
mov
push
push
aad
mov
adc
mov
lods
aad
pop
inc
mov
xchg
dec
adc
or
jge
pop
and
add
push
adc
fisubr
jo
mov
mov
hlt
lds
pop
test
cmp
pop
iret
and
and
cdq
push
cmp
fsubr
push
fdivr
mov
pop
nop
sub
clc
jo
in
rcl
mov
fdiv
cmp
test
and
and
sbb
inc
inc
fucomp
mov
ds
movs
mov
mov
out
mov
inc
xor
and
push
sbb
pop
inc
ds
mov
jne
movs
sub
lods
shl
aam
push
push
lods
pop
ss
and
(bad)
xor
dec
and
mov
dec
push
popf
jmp
ins
push
push
int
push
cmp
stos
mov
in
aam
gs
(bad)
xchg
lds
jp
jne
call
inc
scas
lahf
stc
fdivp
mov
fmul
test
test
fdivrp
sbb
mov
or
in
adc
add
dec
add
sar
lods
enter
xor
stos
or
(bad)
and
mov
cmp
push
test
or
jge
push
sti
mov
xchg
pop
push
das
jns
mov
aad
stos
call
int
jmp
push
cwde
xchg
dec
je
push
movs
rol
adc
push
in
arpl
and
sti
add
loopne
mov
movs
leave
and
mov
adc
inc
ss
data16
mov
popf
xor
push
mov
push
fmul
sbb
es
enter
jl
cmp
pop
fstp
dec
push
ins
inc
push
pop
pop
dec
xchg
mov
sub
ja
and
inc
or
or
jecxz
(bad)
out
cld
sbb
mov
xchg
shl
xor
and
dec
adc
pop
sub
lea
fcomp
pushf
ins
test
inc
shl
adc
xor
sub
pop
dec
loopne
sar
add
jo
nop
sub
mov
sub
pop
xchg
je
or
xchg
(bad)
cmps
or
dec
sub
push
pop
cmp
jno
pushf
pop
mov
movs
sub
cmc
std
in
adc
pop
std
enter
xchg
ins
jg
mov
movs
push
jno
pop
ss
and
sbb
xchg
sbb
pop
add
ins
enter
imul
popf
loope
push
adc
inc
cmc
pop
ins
sbb
ss
ins
jge
in
jne
and
ins
push
std
sbb
cmc
inc
pusha
in
cwde
rcl
pop
inc
in
mov
pop
cmp
push
call
sub
dec
adc
dec
(bad)
lds
js
push
push
icebp
xchg
mov
bound
inc
xor
xor
pop
adc
push
push
mov
(bad)
fistp
mov
adc
inc
cmps
push
fimul
cs
xor
jno
lea
push
imul
cmps
xor
js
cmp
dec
mov
mov
jne
gs
push
out
dec
mov
mov
movs
cmc
or
cmp
mov
jns
test
xor
mov
lds
or
lds
jne
pop
push
xchg
jae
jne
sub
enter
pusha
test
xchg
cld
mov
es
je
cmc
pop
enter
jge
movs
popf
inc
loope
(bad)
cmp
pop
scas
and
scas
leave
jg
(bad)
jecxz
push
out
cs
lea
popf
mov
xchg
(bad)
jmp
leave
nop
sub
std
test
jp
and
xor
cwde
adc
sbb
adc
cmp
push
xor
fcom
add
test
push
mov
cmp
cmp
ret
jae
push
test
cs
fidivr
pop
push
jnp
jnp
xor
push
leave
mov
std
and
and
fisttp
xor
test
add
jl
inc
sahf
in
push
cmc
push
sbb
in
xchg
pushf
sub
adc
(bad)
lock
gs
stos
in
mov
push
mov
mov
aad
dec
ins
push
(bad)
loop
js
adc
call
(bad)
daa
mov
jno
cmc
and
cmp
xchg
jg
dec
ror
push
ins
(bad)
int
ins
daa
jmp
movs
int
and
add
sbb
pusha
dec
dec
pop
dec
sub
test
sub
mov
inc
mov
inc
test
adc
aas
inc
xor
fstp
into
jns
sbb
test
cmp
mov
sub
adc
or
test
jo
sbb
jge
mov
pop
outs
fnsave
push
cdq
push
(bad)
rep
popf
ins
push
bound
out
mov
enter
push
push
jecxz
dec
dec
fstp
fcom
xor
mov
dec
push
ins
(bad)
stc
jne
mov
xchg
and
(bad)
and
aad
fnstsw
and
enter
neg
scas
bound
adc
out
enter
fidivr
push
adc
adc
cdq
dec
js
or
xor
call
jl
jge
enter
std
sbb
push
sub
fcomp
ins
imul
shl
jge
fwait
in
inc
add
lock
aad
cmp
test
cmp
push
leave
out
inc
adc
xchg
sub
xor
adc
dec
jge
pop
rcl
inc
je
int
pop
push
xchg
sbb
mov
int
lds
call
out
pop
xchg
in
out
lds
outs
(bad)
dec
pop
mov
lea
popf
push
inc
push
pop
xor
add
pop
cmc
or
adc
rol
mov
xchg
ds
sbb
aad
das
fstp
in
in
or
xchg
fyl2xp1
mov
out
or
es
pop
mov
aam
cli
jle
repz
adc
dec
mov
or
cmc
xor
push
or
test
fst
or
inc
cmp
push
and
jge
dec
fs
fst
cmc
push
in
mov
hlt
mov
(bad)
jge
rcr
je
clc
imul
loopne
mov
fwait
in
add
and
scas
sbb
es
cmp
sahf
call
sbb
call
or
cmp
xor
js
dec
imul
push
push
pop
lock
test
in
loop
sub
mov
jno
pop
out
pop
ins
xor
mov
sub
mov
retf
cmp
mov
movs
and
add
ins
push
cmp
gs
mov
lods
jl
scas
pop
std
mov
(bad)
xchg
or
movs
mov
jne
mov
mov
fcmovu
jmp
loope
dec
test
sub
lods
sar
cdq
call
fst
(bad)
scas
mov
pop
mov
adc
out
loopne
push
enter
fs
and
adc
and
or
inc
sub
outs
xor
lock
loopne
inc
xor
sub
mov
nop
sub
pop
add
ins
lock
aam
call
retf
and
sub
or
sub
outs
mov
test
iret
cdq
retf
stos
cli
sub
and
sub
mov
ins
dec
popf
cmps
pushf
movs
and
es
out
int
push
or
mov
cmp
shr
mov
call
cs
jo
pop
push
mov
and
pushf
mov
pusha
loope
shl
mov
jne
ins
inc
mov
in
push
sub
xchg
test
lds
dec
mov
pop
shr
xchg
bound
(bad)
jne
adc
int
rcl
rol
add
js
clc
push
es
mov
and
and
fcom
pushf
int3
xchg
lock
jmp
sar
mov
sbb
cs
xchg
(bad)
sub
fadd
fadd
imul
jmp
nop
adc
(bad)
dec
pop
adc
(bad)
or
push
adc
idiv
leave
sub
xor
mov
sub
test
out
jbe
lea
sub
in
add
stos
or
sar
dec
out
xchg
gs
aas
and
xchg
push
outs
inc
inc
xor
pusha
in
je
pop
push
mov
push
pop
pop
mov
shr
into
gs
sbb
leave
mov
sbb
mov
ds
mov
in
(bad)
dec
mov
cs
call
int
and
and
mov
in
pop
adc
movs
inc
repz
or
cmp
sbb
inc
stc
enter
adc
cdq
mov
movs
mov
ds
lock
loope
stos
in
test
adc
cmp
mov
ret
out
lds
mov
and
fsub
mov
or
(bad)
ret
mov
dec
lods
aad
dec
mov
jmp
mov
scas
add
loope
sub
mov
jbe
dec
push
in
sub
fisub
sahf
lock
push
std
cmc
fld
sub
inc
push
shl
pop
mov
adc
push
cmp
lds
adc
mov
mov
loopne
fsubr
fidiv
xchg
adc
push
cmp
(bad)
push
or
shr
jl
scas
sbb
jbe
out
xchg
add
push
mov
xor
jmp
dec
shr
mov
movs
push
loopne
test
popf
lods
mov
inc
mov
into
pop
popa
adc
jns
mov
es
sub
iret
mov
mov
push
out
popf
mov
jno
cmps
pop
mov
(bad)
cmp
stc
das
jp
in
call
mov
popf
in
adc
pop
pusha
inc
or
push
popf
cmovl
jns
pop
jge
imul
mov
lods
in
push
sbb
int
les
fwait
movs
push
push
sbb
xchg
lock
pop
xor
mov
mov
sbb
jmp
outs
xor
ds
loopne
(bad)
cmp
pusha
popf
aas
mov
dec
and
push
cmp
cmps
enter
fmul
mov
gs
call
and
add
inc
push
xor
jns
imul
and
imul
jmp
std
adc
push
js
loope
pop
push
inc
shl
and
and
lods
fxch
fs
icebp
stc
in
pop
shr
pop
aam
test
push
push
jecxz
and
stos
into
push
ins
fstp
lds
aad
dec
sub
xchg
out
cmc
xor
fild
or
xor
xchg
push
cwde
sub
loopne
imul
inc
adc
add
sbb
sub
pop
mov
xchg
out
sub
daa
int3
pop
jo
jle
jmp
nop
sub
call
js
lea
mov
sahf
sub
mov
add
cmp
xlat
stos
std
push
add
xor
mov
repnz
in
sub
loopne
sub
std
ins
sbb
or
add
inc
sbb
xchg
aad
dec
and
ror
push
lods
and
retf
push
sahf
cmp
loop
sub
sub
int3
out
push
stos
ins
inc
ss
xsave
dec
stos
cli
adc
adc
lds
push
ins
(bad)
div
sub
ss
mov
pop
add
mov
xchg
shl
pop
js
dec
cs
call
xchg
or
jle
push
sbb
fst
push
push
jmp
jp
jo
adc
repnz
mov
ficomp
add
mov
xchg
push
and
lea
out
test
push
add
data16
arpl
dec
lods
pop
sahf
out
mov
jne
or
mov
mov
push
std
lods
add
dec
dec
dec
(bad)
(bad)
pop
push
xchg
mov
sbb
sub
add
dec
mov
dec
and
push
add
clc
push
gs
mov
scas
mov
nop
int
js
mov
loope
fcom
stos
sub
aam
inc
call
nop
mov
jg
lds
cmp
movs
popf
fdivr
pusha
shr
mov
movs
int3
sbb
lea
jbe
pusha
add
jo
test
adc
or
mov
lock
pushf
imul
out
sub
push
int
xor
in
pop
mov
sub
pop
pop
fst
call
xor
jle
or
xor
add
push
dec
shr
lds
mov
movhps
ds
fisttp
stos
std
retf
sbb
sub
jge
out
stos
add
daa
pop
push
inc
iret
pop
ja
jae
cmc
mov
data16
adc
je
mov
out
sub
cmp
fist
ds
arpl
mov
and
mov
dec
mov
push
cmp
mov
mov
fwait
dec
xor
cmc
or
xchg
xor
fsub
mov
lods
daa
sti
push
jne
adc
js
inc
xchg
js
enter
cmp
popf
add
jge
(bad)
inc
scas
aad
mov
fidivr
inc
xor
pop
and
div
sti
into
retf
(bad)
lahf
daa
fiadd
pop
test
mov
daa
movs
(bad)
xchg
ins
or
push
movs
repz
movs
outs
mov
or
loopne
xchg
pop
scas
ret
dec
aam
hlt
fdivr
je
call
popf
dec
stos
jmp
(bad)
jge
ret
pop
pop
addr16
mov
lea
push
and
inc
pop
inc
sub
popa
add
into
aad
(bad)
shld
inc
scas
adc
test
int
add
inc
(bad)
sub
sar
mov
push
xchg
cmp
jl
push
mov
and
inc
mov
adc
test
xchg
adc
dec
add
pop
cld
pop
sbb
xchg
mov
add
jmp
cmc
adc
mov
arpl
pop
popf
ins
lock
test
push
popf
ss
in
push
sti
add
cmp
push
jp
dec
mov
xchg
push
es
mov
leave
out
(bad)
sub
ret
lods
sbb
mov
cmp
scas
jno
sub
jle
push
adc
jbe
frstor
dec
pop
jmp
cdq
out
(bad)
inc
scas
jl
lock
pop
push
retf
in
push
aad
lahf
mov
mov
(bad)
and
inc
es
push
cmp
mov
rcr
mov
scas
out
cmovbe
lods
lods
mov
out
dec
mov
sbb
cmp
jne
inc
jb
add
gs
int
push
adc
or
pushf
xor
rcl
aaa
push
adc
ja
imul
adc
sub
mov
mov
fdiv
call
inc
and
adc
aad
dec
cmp
icebp
scas
mov
aaa
fs
jno
jno
in
inc
and
std
lahf
sbb
fwait
in
mov
dec
(bad)
cmc
xlat
ins
ins
div
in
xchg
pop
ins
into
(bad)
mov
in
adc
inc
sub
xor
sub
jge
test
and
push
mov
cmp
outs
neg
jge
cmp
xchg
loopne
sbb
call
call
cmc
hlt
mov
cmp
sbb
inc
push
push
movs
xor
and
inc
lds
xchg
leave
dec
or
into
adc
in
xor
fs
inc
sbb
shr
sahf
(bad)
push
pop
mov
or
xchg
pop
test
sub
xchg
pop
mov
mov
cmps
sub
push
jle
cmp
xchg
xchg
add
les
ror
adc
mov
mov
int
fnstsw
push
sahf
pop
sub
dec
pop
int3
sub
int
hlt
cdq
fdecstp
loopne
lahf
cld
scas
jmp
stc
pop
sub
movs
aaa
add
rcr
outs
jg
cmp
pop
sahf
aad
sar
sbb
pop
add
lds
mov
pop
mov
fst
cli
lods
sbb
rcr
pop
(bad)
movs
in
ds
jge
add
jne
es
retf
mov
outs
mov
inc
fild
in
push
(bad)
cmp
movs
ror
inc
push
test
lods
ins
jge
add
and
dec
pop
sub
and
(bad)
stc
out
lods
inc
mov
cwde
in
cli
stos
mov
lds
sbb
pop
imul
cdq
popf
push
and
hlt
xor
cmp
cmc
int
loop
lods
cmp
pop
call
fild
lods
inc
ss
in
mov
jle
push
cmp
or
jge
mov
push
xor
out
std
and
loop
cmps
mov
cmp
loope
inc
aad
and
and
fisub
add
pop
rol
adc
loope
pop
push
or
push
es
or
cmps
sahf
and
mov
xor
xchg
xchg
ror
cmps
inc
pop
xchg
jo
cmc
repz
push
xor
mov
popa
fisubr
cmp
mov
shl
je
lea
retf
nop
sahf
pusha
cli
mov
sub
lds
push
inc
jge
inc
popa
adc
xor
lock
into
in
pop
xchg
jmp
dec
movs
mov
bound
jne
mov
push
lods
shl
mov
mov
or
xchg
sub
cmc
pop
shr
jge
push
gs
not
cli
xor
in
retf
rol
dec
pop
inc
xor
and
push
xchg
jnp
push
into
dec
fnstsw
outs
pop
and
cmp
frstor
test
out
sahf
aas
lds
enter
std
and
cmp
xchg
(bad)
or
std
jmp
test
cmps
or
inc
cmp
popf
sar
xchg
xchg
fsubr
push
or
pop
xor
pushf
test
or
or
push
test
push
(bad)
mov
dec
xchg
pusha
add
cmc
aad
xor
pop
fsub
pop
pop
inc
pop
xor
fwait
add
fisubr
rol
mov
movs
xchg
mov
jne
add
and
jno
std
in
sahf
std
mov
cmps
dec
ins
dec
adc
pop
and
div
gs
pop
add
adc
sbb
xchg
sar
jmp
lds
daa
popa
aad
mov
sub
in
xor
dec
(bad)
loop
fdiv
add
add
ds
neg
aam
push
popa
and
xchg
pop
add
movs
shr
adc
pop
xchg
mov
adc
and
cmp
fisttp
push
xchg
pop
ret
stos
pop
xor
sub
mov
sbb
jp
mov
dec
nop
movs
fwait
cli
mov
movs
sbb
aad
clc
mov
fadd
inc
scas
mov
js
in
xor
movs
pop
(bad)
js
lds
test
retf
sar
inc
ds
in
std
xchg
rcl
dec
retf
movs
cmps
les
push
mov
pop
add
repnz
ja
sub
pop
jns
test
sbb
adc
push
pusha
nop
pop
std
repz
aad
aad
dec
mov
(bad)
or
(bad)
into
xchg
sbb
ins
aad
in
push
add
inc
xchg
ret
xor
loop
out
(bad)
es
out
xchg
adc
and
jmp
loop
rcl
dec
movs
push
data16
cmp
ins
int3
aad
pop
and
cmp
pop
and
cmp
movs
movs
adc
aas
(bad)
xor
add
in
pop
sub
rcr
pop
in
fild
xor
fstp
sbb
scas
mov
shl
aas
jne
adc
in
lods
mov
xor
sbb
lahf
aaa
push
(bad)
lds
das
ds
sub
bound
inc
sub
retf
icebp
sub
and
inc
push
dec
mov
call
pop
mov
adc
add
adc
bound
pop
sbb
cmps
cld
gs
inc
outs
add
and
ss
mov
sub
movs
gs
cs
jge
push
cmp
bound
sahf
adc
or
lds
adc
sub
and
mov
cmp
or
(bad)
cmp
mov
push
pop
cmp
lea
enter
lock
dec
and
js
inc
and
sub
fcom
test
push
jo
inc
cwde
hlt
rcl
std
add
cmc
pop
sbb
xchg
sub
out
lods
das
in
ds
enter
lds
mov
jle
cdq
jmp
mov
ficomp
lock
test
mov
mov
xor
iret
in
mov
les
lea
lock
shl
or
or
pop
sub
mov
out
or
jno
addr16
stos
mov
lods
(bad)
sahf
ss
adc
cli
xchg
imul
jno
mov
mov
call
aad
add
loopne
popf
popf
and
mov
adc
xor
int3
outs
jne
xchg
cmp
pop
(bad)
mov
test
call
xor
lahf
jmp
jge
in
jne
mov
pop
lods
jo
(bad)
mov
nop
mov
adc
aad
xchg
test
cmp
sub
std
or
mov
dec
fsub
(bad)
js
(bad)
out
popf
sbb
ja
fidiv
shl
add
mov
xchg
pop
push
ins
ins
loop
popa
pop
inc
(bad)
jmp
pushf
mov
add
dec
dec
call
mov
jb
fild
(bad)
fisubr
xor
sbb
mov
out
push
dec
mov
jb
rcr
lods
pop
push
retf
xor
in
and
sub
lock
lds
push
push
jge
push
gs
push
or
xor
sbb
sbb
adc
cmp
ss
pop
or
xor
add
stos
pop
pop
inc
lds
pop
fstp
scas
mov
and
sbb
xchg
in
sub
pop
(bad)
mov
mov
and
and
repnz
sub
xchg
pop
(bad)
mov
aaa
nop
fwait
adc
test
inc
and
push
sbb
add
outs
cmp
div
mov
dec
(bad)
in
cwde
sub
jo
repnz
sub
cmp
fsub
in
clc
dec
call
(bad)
lock
scas
cli
or
sub
xchg
xlat
xchg
imul
stos
pop
pop
push
retf
lahf
rcl
movs
mov
or
dec
cmp
xlat
mov
mov
pusha
stc
(bad)
fiadd
fld
cli
mov
or
lds
movs
pop
mov
aad
xchg
mov
and
js
fisub
popf
mov
add
outs
movs
cmp
je
(bad)
push
mov
adc
test
mov
in
xchg
les
fs
mov
mov
xor
sub
les
int3
and
sbb
dec
sbb
xchg
shl
icebp
not
pop
lods
xlat
xchg
popa
mov
jb
fist
mov
retf
adc
or
mov
xor
xchg
mov
(bad)
push
mov
bound
sub
lahf
aam
and
popa
std
sbb
les
jmp
jl
xor
clc
lea
inc
ja
in
jne
fcmovnu
or
sub
pop
movs
dec
mov
test
mov
mov
nop
cwde
pusha
add
loop
shl
ret
shl
pop
mov
lods
push
fsub
and
ins
in
sub
cmp
dec
mov
mov
mov
inc
push
push
int
add
cld
add
adc
std
in
cmp
or
dec
mov
mov
mov
mov
sbb
fwait
gs
cmp
paddusb
sub
cmp
mov
add
add
push
retf
or
dec
jo
and
sub
ret
je
shl
clc
clc
call
and
and
repnz
loop
outs
cmp
jns
and
mov
je
push
enter
fiadd
jmp
loop
dec
cmp
mov
mov
mov
bound
enter
addr16
pusha
add
sbb
(bad)
mov
pop
jl
jnp
pop
jb
fistp
push
lods
jmp
loop
outs
cmp
dec
dec
pop
add
jp
cdq
iret
call
xor
lahf
jmp
pop
sub
xchg
mov
pop
push
mov
retf
and
add
add
sbb
xchg
sar
cld
pop
mov
pop
push
or
movs
bound
and
retf
sbb
mov
xchg
pop
adc
loopne
mov
lock
mov
gs
xchg
inc
in
pop
pusha
add
pop
push
cmps
lds
into
cs
mov
mov
jl
xor
and
repnz
xchg
in
movs
inc
shl
xchg
xlat
lods
in
jne
daa
arpl
popf
lock
fisubr
mov
or
add
cmp
ins
mov
pop
push
or
call
add
or
mov
add
rcr
cmp
punpckhwd
mov
gs
mov
test
xor
jmp
push
ins
sar
in
clc
cmc
pop
mov
mov
dec
mov
and
xor
add
xor
fsub
adc
mov
sbb
lods
pop
(bad)
inc
and
mov
or
push
pop
into
movs
mov
test
stos
push
mov
and
scas
les
xchg
in
les
pushf
dec
test
cdq
out
test
adc
lods
nop
cwde
in
inc
cmp
repnz
sbb
imul
mov
test
(bad)
fdiv
std
nop
cwde
in
inc
cmp
sub
aad
mov
inc
pop
push
ins
dec
aas
mov
inc
(bad)
in
loopne
mov
jmp
cwde
pop
sub
lods
js
test
push
fs
xor
adc
inc
add
sub
int
push
ins
or
mov
push
mov
fisub
in
cli
or
loope
cmp
movs
mov
gs
mov
jae
daa
nop
stos
pop
pop
inc
xor
addr16
enter
dec
sbb
dec
jge
lahf
xchg
ins
jp
mov
mov
shl
in
cwde
in
push
sbb
pop
sub
sub
clc
in
call
(bad)
jmp
fdiv
rcr
mov
mov
call
call
add
sbb
dec
ror
int
call
dec
and
mov
mov
dec
pop
dec
rol
sbb
frstor
mov
add
adc
repnz
std
ror
nop
mov
pop
push
mov
shl
sub
push
sub
add
sbb
cwde
mov
out
jne
or
fmul
mov
cmc
adc
shr
mov
adc
jns
mov
mov
xor
scas
mov
test
inc
mov
jl
add
loopne
cmp
gs
pop
add
jp
sub
or
dec
movs
pop
(bad)
call
and
mov
jmp
cld
cmc
bnd
(bad)
ds
lock
addr16
daa
pop
mov
fucomip
lahf
rcl
pop
xor
in
loopne
or
aad
add
shl
adc
add
adc
mov
and
cwde
mov
out
std
ins
dec
aas
mov
fistp
gs
adc
xchg
sub
lods
nop
test
and
xchg
push
jp
mov
push
mov
adc
mov
push
repnz
aam
xchg
lea
cmc
jb
pop
mov
(bad)
in
jmp
nop
adc
loopne
adc
cs
aas
mov
inc
bound
pop
cmp
in
in
repnz
cwde
xchg
cmp
pop
xchg
(bad)
mov
stos
out
shl
jno
adc
or
loop
mov
sbb
xor
fs
pop
lds
aad
test
push
sub
fmul
in
aad
xchg
push
cmp
jns
fs
mov
and
stos
mov
(bad)
fmul
clc
xchg
in
add
nop
adc
mov
push
enter
movs
cmc
jo
pop
jno
adc
rcr
mov
jmp
cmps
nop
sub
xchg
ret
int
push
enter
frstor
adc
int3
xor
and
sbb
in
aad
xchg
mov
adc
mov
xchg
push
or
mov
mov
xor
pusha
mov
pop
add
popf
pop
lds
xchg
sub
cmp
loop
loope
push
dec
outs
imul
stos
inc
mov
clc
push
and
or
loop
loope
push
dec
outs
imul
pushf
push
gs
push
popa
pop
push
retf
lahf
rcl
and
or
(bad)
pcmpgtb
jb
rcr
lods
not
xor
xor
pusha
add
ins
mov
mov
ins
jno
or
jb
push
pop
push
mov
and
jmp
in
icebp
dec
(bad)
call
mov
nop
call
int
fstp
scas
mov
fadd
cmps
nop
sub
or
add
add
sbb
xor
pop
sbb
jmp
add
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
out
gs
push
lods
inc
mov
xchg
adc
sbb
mov
movs
pop
xchg
ins
test
lea
iretw
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
sub
sar
dec
mov
jns
mov
push
test
and
adc
add
cmc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
push
jp
mov
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
jp
jne
jl
push
lods
mov
fucomp
in
sbb
cmc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
stos
lods
inc
mov
adc
repnz
sbb
mov
movs
pop
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
pushf
jge
lea
mov
adc
adc
sbb
mov
pop
inc
xchg
ins
test
push
lods
inc
mov
adc
or
lds
xchg
je
jge
jb
popf
push
lods
inc
mov
adc
or
cmp
xchg
xchg
test
lea
stos
lods
mov
fst
or
(bad)
dec
movs
pop
push
test
jb
popf
push
mov
mov
adc
adc
sbb
mov
pop
inc
xchg
ins
test
push
lods
inc
mov
adc
adc
sbb
mov
movs
pop
xchg
xchg
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
lods
mov
fst
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
je
jge
jb
popf
push
mov
mov
adc
repnz
sbb
mov
movs
mov
jne
gs
push
lods
inc
mov
jmp
sbb
lods
dec
movs
pop
push
pushf
jge
lea
mov
adc
or
fdivr
push
test
lea
push
lods
pop
mov
adc
or
lds
ins
jp
jne
gs
push
push
inc
mov
jmp
sbb
mov
movs
pop
xchg
ins
test
lea
push
mov
mov
adc
or
lds
push
test
jb
popf
push
lods
mov
and
or
(bad)
dec
movs
pop
xchg
ins
test
bound
mov
adc
or
(bad)
dec
movs
pop
push
test
jb
popf
push
lods
mov
and
in
int3
sub
movs
pop
xchg
xchg
test
lea
stos
lods
inc
movs
xor
in
add
loop
sub
movs
pop
mov
jge
xchg
gs
push
push
inc
mov
jmp
sbb
dec
push
movs
pop
xchg
xchg
pushf
jge
lea
inc
sub
and
std
cmc
or
lds
xchg
ins
jp
jne
jl
push
lods
mov
fucomp
in
add
sbb
mov
movs
mov
mov
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
movs
xor
in
add
sbb
mov
movs
mov
jne
gs
push
lods
inc
mov
or
add
sbb
mov
mov
jge
lea
push
lods
pop
mov
adc
or
fdivr
xchg
je
jge
jb
popf
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
je
jge
jb
popf
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
adc
sbb
lods
dec
movs
pop
push
test
lea
push
lods
inc
inc
sub
and
in
or
lds
mov
jge
lea
push
lods
inc
mov
adc
or
fdivr
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
inc
xor
in
add
sbb
mov
movs
pop
xchg
ins
test
lea
lods
mov
fucomp
in
add
loop
sub
pop
mov
mov
popf
push
lods
mov
les
adc
sbb
dec
mov
inc
xchg
ins
test
push
lods
inc
inc
xor
adc
add
or
fdivr
mov
jge
jb
popf
push
lods
mov
and
or
lds
xchg
je
jge
jb
popf
push
lods
mov
and
in
aad
cmp
ins
test
lea
mov
jmp
loop
rcr
cmp
xchg
ins
test
dec
lods
inc
mov
adc
or
lds
ins
test
lea
push
lods
inc
inc
sub
and
std
cmc
repnz
aad
(bad)
dec
movs
pop
xchg
je
jge
jb
popf
push
lods
mov
and
repnz
aad
(bad)
dec
movs
pop
xchg
ins
test
xchg
gs
push
push
inc
mov
adc
or
lds
xchg
xchg
pushf
jge
lea
movs
xor
in
sbb
cmc
or
lds
xchg
ins
test
lea
lods
mov
and
or
lds
xchg
xchg
test
xchg
gs
push
push
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
inc
xor
in
add
sbb
mov
pop
pop
xchg
je
jge
jb
popf
dec
lods
inc
mov
adc
or
lds
mov
jge
lea
push
lods
inc
mov
adc
or
lds
xchg
je
jge
jb
popf
push
lods
mov
and
in
aad
fdivr
xchg
ins
test
push
lods
inc
mov
adc
or
lds
xchg
ins
pushf
jge
lea
inc
xor
adc
sbb
mov
pop
pop
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
inc
sub
and
std
cmc
or
lds
xchg
ins
test
lea
lods
mov
fst
or
lds
xchg
ins
test
lea
push
mov
mov
adc
or
lds
xchg
ins
test
lea
push
lods
pop
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
movs
xor
in
add
sbb
mov
movs
pop
xchg
je
jge
jb
popf
push
lods
inc
mov
adc
or
lds
xchg
xchg
test
lea
push
lods
pop
mov
adc
or
fdivr
mov
jge
lea
lods
mov
fucomp
in
sbb
cmc
or
lds
ins
test
lea
lods
mov
fst
or
lds
xchg
xchg
pushf
jge
lea
inc
sub
and
std
cmc
repnz
int3
sub
movs
mov
jne
test
inc
inc
xor
adc
loop
sub
mov
jge
xchg
gs
push
push
inc
mov
jmp
loop
sub
movs
pop
mov
jge
lea
lods
mov
and
repnz
aad
(bad)
push
movs
pop
xchg
xchg
test
bound
inc
mov
adc
or
fdivr
mov
jge
jb
popf
push
lods
mov
fucomp
in
add
sbb
mov
movs
pop
xchg
xchg
test
lea
lods
mov
fucomp
in
sbb
cmc
or
lds
xchg
ins
test
push
lods
inc
mov
adc
or
lds
xchg
ins
jp
jne
gs
push
lods
pop
mov
adc
or
lds
xchg
xchg
pushf
jge
lea
inc
xor
in
add
sbb
mov
mov
jge
lea
dec
lods
inc
mov
adc
adc
sbb
mov
pop
inc
xchg
ins
test
stos
mov
mov
adc
or
(bad)
dec
movs
pop
xchg
ins
test
lea
stos
mov
mov
adc
or
lds
xchg
ins
test
stos
lods
inc
mov
adc
or
lds
xchg
xchg
test
push
lods
inc
inc
sub
and
std
cmc
repnz
aad
lds
xchg
je
jge
jb
popf
push
lods
mov
and
in
aad
fdivr
xchg
ins
test
push
push
inc
mov
adc
or
lds
xchg
ins
jp
jne
bound
mov
adc
or
lds
xchg
xchg
pushf
jge
lea
inc
sub
and
std
cmc
repnz
aad
(bad)
mov
pop
xchg
ins
jp
jne
bound
inc
mov
adc
or
(bad)
dec
pop
pop
mov
jge
jb
popf
push
lods
inc
movs
xor
in
add
sbb
mov
mov
fs
bound
mov
adc
or
lds
xchg
ins
jp
ins
lea
stos
mov
mov
adc
or
lds
xchg
ins
jp
jne
bound
mov
adc
or
(bad)
dec
movs
pop
push
test
lea
stos
lods
pop
mov
or
add
sbb
mov
movs
pop
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
enter
fnstsw
jne
fwait
(bad)
in
mov
and
xor
outs
(bad)
pop
adc
or
xor
and
dec
test
imul
cs
add
sbb
call
inc
fdiv
mov
cmc
ins
in
aam
test
fimul
out
xchg
aaa
call
aaa
mov
mov
cmc
pusha
in
mov
or
adc
lea
cld
daa
in
xor
push
test
jno
mov
xchg
js
jp
dec
mov
movs
cmp
cmp
sbb
mov
int
cli
sub
jl
inc
sahf
mov
xchg
je
pop
lds
movs
sub
add
or
jecxz
int
ret
bound
mov
aad
xchg
cmp
rol
sbb
in
or
dec
int
mov
popa
(bad)
cmc
push
xchg
push
mov
into
sub
add
adc
pop
test
mov
xchg
xchg
fs
sub
push
repz
mov
je
xchg
xchg
popa
mov
dec
(bad)
lds
dec
(bad)
xor
adc
repnz
popf
lods
push
pushf
mov
loope
mov
jns
cmp
sbb
aaa
jmp
lahf
ja
push
lea
inc
mov
mov
stos
and
and
pop
xchg
or
sbb
and
hlt
pop
lods
dec
mov
mov
movs
and
and
sub
int
repnz
jp
inc
mov
inc
stos
scas
dec
mov
or
xchg
push
jmp
add
or
adc
adc
cdq
inc
xchg
mov
test
mov
aas
rcr
ins
loope
push
int
fld
int3
add
scas
push
mov
mov
jge
and
add
dec
loop
(bad)
add
sub
bound
dec
loopne
in
cli
pop
aad
xor
xchg
xor
jo
jg
push
mov
mov
test
sub
rcr
xor
fiadd
mov
xchg
xchg
movs
sbb
jb
cs
pop
icebp
cmp
in
inc
jmp
inc
mov
imul
arpl
cs
pop
icebp
xor
call
and
outs
mov
inc
(bad)
mov
test
pop
stos
or
sub
inc
cld
and
add
mov
or
jge
or
test
push
add
mov
retf
and
add
test
movnti
push
mov
dec
cwde
xchg
jg
jl
inc
test
dec
sar
pop
lds
adc
daa
frstor
test
pop
lea
cmp
(bad)
das
mov
icebp
adc
les
or
inc
stos
cmc
push
xchg
pop
cmc
or
add
test
shl
mov
pop
mov
cmps
inc
lods
dec
cmc
and
sbb
xor
in
popa
rol
mov
sub
cmp
aad
in
or
and
mov
inc
mov
mov
stos
pop
(bad)
movs
pop
stc
sbb
jg
cli
or
xor
add
aad
lds
push
movs
xor
and
and
int
fst
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
popf
push
lods
inc
mov
adc
or
scas
push
mov
movs
and
pop
out
gs
into
inc
test
fnstsw
jne
nop
push
lds
sub
adc
xor
and
cdq
cmc
imul
pop
retf
jge
jmp
or
xor
inc
mov
jno
cmc
push
lds
xchg
ins
test
lea
push
lods
adc
dec
lea
fst
jne
sbb
mov
movs
pop
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
inc
popf
ja
cmc
pop
mov
aad
lds
std
push
in
inc
jne
gs
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
idiv
lea
push
lods
inc
jmp
int
mov
data16
cmc
or
mov
aas
les
ins
loopne
pop
in
adc
popf
push
mov
and
jle
pop
in
xchg
cmp
xor
lea
in
cmp
add
std
fwait
outs
xchg
imul
loope
jne
add
es
sub
xor
int
std
mov
jnp
ja
dec
repz
push
test
add
add
adc
and
sub
mov
mov
int3
sub
or
adc
push
repz
lea
popf
pop
cld
and
icebp
cmc
or
lds
or
test
sbb
inc
popf
xor
push
mov
mov
push
fisub
das
cli
pavgb
jne
sbb
push
lods
inc
mov
adc
or
lds
xchg
ins
test
call
daa
iret
pop
mov
pusha
xchg
xchg
pop
mov
sar
test
xchg
sbb
pop
jne
gs
push
lods
inc
mov
adc
or
lds
xchg
ins
test
stc
add
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
popa
ret
jno
cmc
sub
test
jge
dec
in
jne
adc
xor
rcr
dec
std
jbe
push
aad
test
sub
movs
pop
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
out
push
lods
inc
mov
adc
or
cmps
push
(bad)
aaa
xchg
pop
xchg
ins
test
lea
xor
inc
mov
adc
or
lds
xchg
ins
icebp
sub
gs
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
(bad)
push
(bad)
jge
fisubr
in
lods
inc
mov
adc
or
lds
dec
(bad)
pop
xchg
dec
movs
pop
adc
rcl
inc
(bad)
xor
in
add
sbb
aam
movs
sub
ins
test
jne
gs
push
int3
inc
mov
adc
or
lds
xchg
ins
test
lea
push
enter
int
fst
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
mov
xchg
sbb
jge
lea
cld
popa
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
stos
cmp
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
popa
in
add
mov
dec
movs
pop
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
frstor
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
jno
add
sbb
mov
movs
or
sub
gs
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
xor
and
std
cmc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
(bad)
in
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
sub
fsubr
int
movs
jge
addr16
xchg
lds
(bad)
das
shl
cli
cs
push
mov
and
xor
inc
fbstp
inc
stos
add
dec
std
or
cmp
imul
iret
aas
mov
mov
std
js
push
enter
(bad)
push
dec
mov
clc
cmp
jge
or
test
jmp
inc
fisubr
or
dec
xchg
int3
jge
jo
test
push
icebp
lahf
cmp
dec
add
mov
mov
in
mov
cmp
mov
test
std
rcl
pop
push
cmp
ret
mov
pop
add
xchg
xchg
sti
pop
fstp
and
jl
hlt
test
sub
pop
mov
mov
shr
push
mov
and
repnz
mov
es
xor
cdq
push
mov
and
push
cmp
shr
dec
xor
dec
xchg
jmp
ins
xchg
jp
or
bound
pop
hlt
es
loop
push
mov
dec
mov
mov
xchg
jp
jne
gs
push
lods
inc
mov
adc
or
lds
xchg
cmp
xor
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
dec
movs
pop
xchg
ins
test
lea
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
mov
adc
or
(bad)
dec
movs
pop
xchg
cmp
gs
push
lods
inc
mov
adc
or
lds
xchg
ins
test
lea
push
lods
inc
in
xor
in
add
sbb
mov
cmc
pop
xchg
ins
test
push
lods
adc
fst
or
lds
xchg
ins
test
lea
stos
lods
inc
mov
adc
or
lds
dec
movs
pop
xchg
ins
test
frstor
push
lods
inc
mov
adc
or
lds
dec
movs
sbb
ins
test
lea
push
lods
inc
mov
adc
pusha
mov
dec
test
xchg
sub
cmp
push
loopne
inc
mov
repnz
lea
push
std
jo
xor
xchg
xor
push
(bad)
and
cs
or
add
in
stc
cmp
ss
inc
test
mov
cmp
cmc
pop
test
fsub
xor
jmp
mov
or
inc
out
sub
shl
mov
mov
cli
jl
outs
lods
or
jmp
and
push
mov
daa
fst
fdiv
stos
xor
test
pop
mov
mov
ja
sub
out
pop
arpl
imul
in
add
aad
lods
movs
xchg
xor
fimul
les
mov
cld
in
psadbw
fistp
ja
cmp
sub
xchg
or
lds
mov
std
adc
add
cmp
lods
mov
in
cmps
js
pop
mov
push
and
xor
add
js
gs
je
cwde
dec
(bad)
pop
shl
sbb
lea
(bad)
jl
jbe
push
push
mov
gs
rcr
scas
inc
sub
or
push
sbb
daa
jne
ffree
js
or
jne
inc
mov
inc
dec
ja
imul
sub
jns
and
int
test
in
or
mov
mov
push
lea
fcomp
push
mov
iret
mov
and
lahf
inc
sbb
pop
dec
xor
movs
pop
inc
or
(bad)
js
adc
test
mov
xchg
imul
cmp
leave
and
adc
add
jno
popa
cdq
push
test
mov
jns
or
sbb
sub
cmp
leave
and
adc
add
jno
popa
cdq
push
test
mov
jns
or
sbb
sub
cmp
leave
and
adc
add
jno
popa
cdq
push
test
mov
jns
or
sbb
sub
cmp
leave
and
adc
add
jno
popa
cdq
push
test
mov
jns
or
sbb
sub
cmp
leave
and
adc
add
jno
popa
cdq
push
test
mov
jns
or
sbb
sub
cmp
leave
and
adc
add
jno
popa
cdq
push
test
mov
jns
or
sbb
sub
cmp
leave
and
adc
add
jno
popa
cdq
push
test
mov
jns
or
sbb
sub
cmp
leave
and
adc
add
jno
popa
cdq
push
test
mov
jns
or
sbb
sub
cmp
leave
and
adc
add
jno
popa
cdq
push
test
mov
jns
or
sbb
sub
cmp
leave
and
adc
add
jno
popa
cdq
push
test
mov
jns
or
sbb
sub
cmp
leave
and
adc
add
jno
popa
cdq
push
test
mov
jns
or
sbb
sub
cmp
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
mov
mov
cmp
jbe
mov
push
push
mov
push
call
mov
push
call
push
push
push
call
add
jmp
push
push
push
push
mov
push
call
mov
lea
push
call
cmp
je
mov
and
test
je
call
push
call
push
push
push
push
push
push
call
call
xor
xor
mov
lea
push
call
mov
not
mov
mov
not
mov
mov
push
call
push
mov
push
push
push
mov
push
call
jmp
push
call
push
call
and
test
je
jmp
call
test
jne
mov
push
call
test
jne
mov
jmp
mov
mov
mov
mov
push
push
call
push
mov
push
call
push
push
push
push
push
push
mov
push
call
mov
mov
push
call
mov
call
mov
mov
push
push
push
push
push
push
call
call
mov
mov
not
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
test
jne
test
je
push
mov
push
mov
call
push
call
add
inc
push
call
pop
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
inc
lea
arpl
mov
jmp
add
add
addr16
push
gs
popf
add
adc
jb
bound
jae
add
adc
xor
out
jp
repnz
jecxz
repz
xchg
mov
inc
push
daa
bound
xor
add
adc
adc
add
shl
ret
xchg
mov
inc
jb
bound
jae
add
adc
and
xor
ret
repnz
jecxz
repz
xchg
mov
inc
jb
bound
jae
add
adc
and
xor
ret
repnz
jecxz
repz
xchg
mov
inc
jb
bound
jae
add
adc
and
xor
ret
repnz
jecxz
repz
xchg
mov
inc
jb
bound
jae
add
adc
and
xor
ret
repnz
jecxz
repz
xchg
mov
inc
jb
bound
jae
add
adc
and
xor
ret
repnz
jecxz
repz
xchg
mov
inc
jb
bound
jae
add
adc
and
xor
ret
repnz
jecxz
repz
xchg
mov
inc
jb
bound
jae
add
adc
and
xor
ret
repnz
jecxz
repz
xchg
mov
inc
jb
bound
jae
add
adc
and
xor
ret
repnz
jecxz
repz
xchg
mov
inc
jb
bound
jae
add
adc
and
xor
ret
repnz
jecxz
repz
xchg
mov
inc
jb
bound
jae
add
adc
and
xor
ret
repnz
jecxz
repz
xchg
mov
inc
jb
bound
jae
add
adc
and
xor
ret
repnz
jecxz
repz
xchg
mov
inc
jb
bound
jae
add
adc
and
xor
ret
repnz
jecxz
repz
xchg
mov
inc
jb
bound
jae
add
adc
and
xor
ret
repnz
jecxz
repz
xchg
mov
inc
sahf
or
mov
imul
and
mov
call
jmp
xchg
dec
mov
mov
and
jae
add
jns
repz
shl
or
lods
mov
jp
loope
ss
jbe
adc
fcomp
pop
loop
xor
out
sbb
mov
mov
inc
bound
arpl
and
out
mov
mov
lea
jnp
jle
xchg
mov
adc
xchg
jne
test
xor
push
mov
add
push
and
lahf
es
add
mov
push
in
adc
call
dec
mov
jbe
(bad)
jg
and
aam
xchg
xchg
mov
jae
in
cli
jbe
push
xor
fnstsw
xor
jns
or
jg
push
loopne
dec
mov
inc
(bad)
fistp
ja
stos
and
pop
mov
aaa
repnz
mov
out
or
das
cmps
pop
dec
add
out
push
xor
cld
jg
retf
pusha
push
cmp
pop
push
sbb
cmovg
ror
ror
push
ror
int
test
dec
repnz
loop
ss
add
mov
cmp
cmp
outs
outs
lods
jae
xchg
add
enter
outs
shl
adc
dec
cmovae
sar
inc
mov
addr16
div
xor
repz
out
scas
dec
jge
jb
xor
or
ja
adc
loope
add
cs
or
xchg
pop
push
push
add
in
scas
xor
cdq
fs
imul
dec
inc
pop
les
pop
push
in
mov
push
jae
cld
add
and
in
jae
ret
mov
mov
sar
jecxz
xchg
ret
mov
xor
jae
inc
mov
int3
mov
jecxz
xor
jb
xchg
and
xor
pop
fiadd
dec
xchg
arpl
sbb
xchg
mov
inc
into
data16
mov
and
pop
jge
push
not
sub
mov
push
xor
pop
jle
jecxz
lahf
iret
addr16
jb
call
loop
mov
jo
lods
xchg
pushf
mov
sbb
aaa
jns
in
jbe
dec
jns
or
repz
pop
jne
sahf
lea
ja
sti
jnp
adc
hlt
mov
shr
(bad)
in
add
adc
inc
repz
rcl
add
mov
imul
xor
pop
and
shl
jl
stos
and
jle
dec
dec
rcl
jecxz
repnz
jl
and
pusha
shl
outs
dec
pminub
lds
adc
aas
repnz
adc
lods
lahf
xchg
jne
inc
ja
(bad)
push
adc
lods
call
pop
out
mov
mov
arpl
and
cld
into
mov
add
ret
rol
(bad)
repnz
das
rol
add
add
sbb
lods
not
xor
mov
repz
xchg
add
pusha
xchg
sbb
mov
je
call
popa
outs
sub
push
pop
test
in
into
jb
popf
arpl
mov
imul
and
add
or
mov
pop
push
and
iret
add
mov
scas
retf
cdq
iret
push
ret
loop
xchg
jbe
retf
dec
xchg
pop
xchg
mov
mov
jae
mov
adc
push
das
mov
lods
shl
fs
sbb
or
mov
fwait
adc
mov
pop
cmp
ins
repnz
cdq
push
bound
jle
test
(bad)
repnz
adc
nop
xor
aas
push
test
ret
inc
neg
es
mov
jo
iret
std
dec
push
sbb
jae
xor
jb
push
out
adc
addr16
push
jle
dec
repnz
scas
jecxz
cmp
call
test
es
ja
push
add
jg
in
iret
ret
cmps
xor
loop
rcr
push
cmp
sahf
push
mov
mov
bound
push
xchg
repnz
jecxz
paddusw
cmp
xchg
adc
arpl
adc
popa
xor
scas
pop
push
repz
ja
out
sahf
mov
outs
ret
(bad)
mov
inc
fiadd
es
out
add
repz
and
push
arpl
aad
or
xchg
dec
shl
jge
inc
sbb
cmp
pop
ja
jg
adc
imul
add
mov
mov
lods
ss
(bad)
cli
mov
arpl
pop
fimul
jp
cmp
adc
scas
dec
in
dec
scas
pop
dec
sahf
xchg
outs
sbb
sbb
mov
ret
call
fimul
(bad)
sbb
cmp
mov
inc
add
sbb
scas
inc
jle
fwait
or
stos
xchg
mov
adc
(bad)
push
cmp
adc
popa
cli
int3
add
test
add
fs
fild
sbb
nop
xor
adc
jle
xor
xor
ret
dec
xor
push
hlt
push
dec
hlt
sbb
xor
push
inc
add
in
adc
adc
std
xor
mov
push
dec
repz
mov
jb
popf
jecxz
or
and
add
xor
cmps
and
or
xor
xor
xchg
and
push
mov
stos
loop
xor
mov
cmps
inc
xchg
xchg
idiv
cmp
jge
jbe
out
out
cwde
mov
sti
in
xor
dec
repnz
outs
jecxz
stos
ret
shr
pop
div
jmp
scas
mov
push
xor
fdivrp
in
es
rol
mul
pop
add
push
repnz
add
xchg
jae
mov
push
and
es
aaa
add
mov
das
mov
jb
add
bound
mov
adc
push
jp
inc
vcvttss2si
adc
ret
out
jg
mov
add
fwait
ret
push
mov
push
mov
shl
dec
sbb
push
ins
imul
push
or
jmp
bound
jno
loop
(bad)
js
cmp
pop
pop
and
or
or
and
dec
daa
dec
pusha
iret
adc
inc
sbb
out
adc
xchg
dec
xchg
scas
cmps
ret
mov
out
mov
ss
mov
out
dec
and
xor
dec
or
mov
xchg
je
mov
sbb
iret
ret
sbb
jno
cmp
mov
sbb
push
pop
jmp
adc
jbe
add
es
fwait
imul
cmp
dec
das
pushf
mov
add
pop
jno
add
cmp
ror
sub
je
pop
and
mov
dec
and
stos
sbb
pop
jmp
push
and
xor
sbb
sub
or
bound
fld
daa
(bad)
inc
push
in
fidiv
pop
xor
mov
mul
mov
pop
lods
and
gs
xor
dec
ret
mov
js
into
add
arpl
xchg
push
or
jb
das
out
fbstp
mov
push
outs
inc
repnz
sbb
in
in
mov
icebp
outs
cwde
pop
outs
push
mov
and
ss
stos
retf
pop
iret
dec
mov
shl
jecxz
sti
fstp
aas
sbb
clc
dec
push
mov
inc
xchg
xor
ss
mov
jnp
sub
inc
inc
push
inc
xchg
nop
pop
mov
fild
sub
ret
ret
outs
fnstenv
inc
lea
adc
adc
outs
js
pop
rdpmc
sahf
and
dec
xchg
loop
out
push
daa
jno
scas
xchg
and
int
mov
xchg
jnp
loop
sbb
call
test
mov
daa
(bad)
cmp
inc
fidivr
ret
shl
outs
(bad)
repz
xor
cmp
mov
dec
cdq
(bad)
popf
movs
mov
pushf
or
out
aam
pop
pop
pop
mov
ss
inc
fstp
jmp
in
(bad)
sti
(bad)
mov
sbb
loope
icebp
jle
aaa
push
push
mov
pop
or
push
add
mov
mov
xlat
xchg
mov
pop
cmp
ja
pop
fdivr
add
movs
xchg
repnz
add
scas
xchg
in
aam
cmp
cdq
addr16
mov
xor
sub
cli
adc
retf
mul
or
sub
adc
inc
mov
ds
cld
imul
adc
cmp
sub
pop
out
out
inc
cmp
call
imul
retf
cmp
sbb
mov
icebp
arpl
aaa
lods
mov
daa
or
inc
adc
jmp
or
leave
cmp
test
mov
stc
pop
cmp
stos
mov
inc
test
push
repz
(bad)
jnp
popa
mov
cmps
ins
xchg
stos
sar
arpl
cmp
mov
stos
adc
jmp
fwait
lahf
mov
cmp
sub
xchg
mov
enter
inc
jns
inc
sub
loop
cdq
mov
imul
sub
jecxz
test
push
push
cli
daa
adc
cdq
pusha
mov
xlat
out
test
mov
pop
mov
mov
push
jnp
je
pop
adc
xchg
mov
popa
ficomp
cmp
out
xlat
dec
(bad)
pusha
imul
mov
pop
jl
xchg
fisttp
sbb
sti
xchg
or
mov
enter
arpl
or
sbb
ror
loopne
ds
les
xchg
hlt
dec
sbb
test
sti
bound
ja
jne
sahf
ja
cdq
fistp
cmc
jecxz
jmp
adc
sub
dec
sub
sbb
inc
push
leave
xor
leave
xchg
or
dec
sbb
mov
fwait
push
xchg
sbb
push
aaa
inc
ja
jnp
in
xor
push
ds
push
ror
in
adc
push
into
push
dec
aas
cmp
mov
in
xchg
repz
push
addr16
sbb
lahf
cdq
xchg
and
mov
pshufw
pop
(bad)
mov
mov
addr16
js
int
adc
push
in
outs
enter
arpl
add
adc
stc
and
aaa
retf
cmp
jmp
bound
sahf
outs
cmps
mov
das
cmp
repnz
jg
out
mov
aas
push
mov
pop
xor
and
in
repnz
add
or
shl
in
repz
inc
and
pushf
xchg
inc
in
test
ror
mov
sub
fisub
push
jae
cli
dec
inc
xchg
and
mov
lods
loop
ret
sahf
int
retf
xchg
(bad)
in
cmp
lea
stos
fnstenv
mov
fiadd
shl
cmc
mov
aad
xchg
cli
lock
ror
and
jg
xor
ret
jns
mov
shl
icebp
mov
hlt
ror
jecxz
imul
inc
jmp
adc
aad
pusha
faddp
out
jecxz
loop
mov
xchg
sti
mov
cmp
sub
xor
jle
adc
ja
repnz
mov
xchg
add
add
(bad)
loopne
ds
pop
sti
sti
stos
in
jge
test
lods
mov
(bad)
pusha
data16
push
xchg
arpl
fprem
inc
inc
fs
aaa
(bad)
mov
popa
sbb
repz
jge
js
cmps
mov
jae
imul
jmp
and
xchg
das
imul
dec
or
or
(bad)
mov
mov
cwde
cs
cli
xor
ret
xchg
push
(bad)
fsubp
(bad)
xlat
mov
test
inc
sbb
sbb
or
cli
fistp
imul
in
dec
push
xor
es
xor
mov
mov
ret
mov
rcr
push
pop
shr
push
arpl
sti
ret
lods
xchg
push
int3
push
ret
mov
sbb
outs
mov
push
jmp
and
jo
push
lock
(bad)
repnz
sbb
rcl
xchg
in
mov
adc
and
dec
add
mov
sbb
aad
sti
push
mov
mov
or
and
push
not
mov
sub
popa
scas
sar
add
dec
xchg
mov
adc
das
mov
int
scas
fmul
into
xor
sbb
jl
adc
xchg
icebp
out
cwde
push
ins
ds
inc
mov
fsub
and
sbb
pop
pop
mov
xor
add
sub
out
iret
mov
js
or
xlat
cli
sahf
mov
jb
mov
adc
ds
scas
lds
add
addr16
ja
mov
aas
xchg
(bad)
out
pop
mov
sub
out
ret
or
push
ror
gs
mov
mov
xchg
(bad)
mov
push
xchg
aaa
dec
ret
call
mov
jno
aam
out
mov
jb
out
pushf
shl
mov
aad
jmp
xor
dec
or
repz
jp
mov
inc
call
lock
adc
repnz
loop
aam
mov
push
(bad)
out
push
mov
retf
(bad)
adc
push
xor
dec
movs
shl
push
add
push
bound
imul
jo
mov
mov
repz
aaa
push
daa
cmp
push
jno
repnz
out
repz
sbb
rol
sbb
pop
(bad)
mov
jecxz
sti
add
cmp
sbb
pop
xchg
call
arpl
jo
push
mov
mov
outs
daa
inc
psrad
cmp
jge
pop
popf
bound
aad
in
fisttp
xchg
jo
rol
sbb
push
dec
fld
push
(bad)
out
scas
ss
scas
push
xor
dec
jg
scas
(bad)
shl
mov
dec
xor
or
ins
into
push
pop
fist
inc
pslld
fwait
xor
inc
push
out
arpl
sar
adc
dec
inc
and
outs
mov
aaa
ret
(bad)
pop
dec
cmp
aam
mov
stos
xchg
cmps
pop
mov
fisub
neg
jg
or
mov
into
fdiv
mov
mov
pop
or
adc
xchg
jecxz
inc
inc
icebp
pop
add
lea
aam
xchg
fwait
sbb
ja
sub
sbb
pop
mov
outs
clc
cmp
shl
repnz
lea
mov
push
shl
rcr
push
ret
xor
sub
rcr
dec
jl
xchg
dec
cs
jne
mov
pop
inc
jmp
adc
ret
jg
and
ss
imul
add
and
and
pop
loop
xchg
cmp
xor
aam
jbe
add
add
ret
(bad)
lds
sub
jmp
push
repnz
loope
or
push
dec
jle
sub
mov
(bad)
stos
mov
push
jb
xchg
mov
cmps
and
cmp
out
jp
add
sbb
xor
or
in
xor
cmp
xchg
xchg
popf
mov
sbb
pop
pop
dec
jle
jmp
dec
push
dec
jmp
jecxz
add
lahf
js
or
call
jp
out
not
and
jns
mov
loope
fisub
repz
pop
inc
jb
xchg
mov
test
add
or
mov
(bad)
mov
sub
mov
xchg
das
es
ss
push
mov
test
cmps
shl
pop
addr16
mov
push
mov
bound
(bad)
and
pop
jbe
xchg
sub
repnz
out
test
pop
jae
lds
adc
cmp
ret
jge
scas
push
xchg
jle
imul
sub
mov
bound
lods
imul
xor
mov
push
outs
mov
sub
xchg
popf
arpl
jae
cld
mov
(bad)
or
sbb
sub
cmp
repz
ds
mov
ds
lods
test
addr16
push
xchg
jns
sbb
fmul
dec
pop
sub
(bad)
into
pop
(bad)
mov
fbstp
push
outs
xchg
in
int3
mov
repnz
mov
sub
push
xchg
pop
popa
mov
daa
mov
bound
nop
adc
sbb
pop
xlat
loopne
cmp
adc
push
bound
(bad)
stc
inc
xchg
pop
shl
into
in
stc
pop
sbb
dec
sbb
jae
dec
ja
popa
push
ficom
push
dec
push
sub
sbb
or
inc
aas
xchg
das
pop
push
pop
sbb
ss
inc
mov
int3
add
sbb
out
retf
inc
lock
mov
test
ds
cmp
nop
or
push
dec
mov
jne
push
and
popf
inc
adc
mov
push
int3
ret
cmp
mov
cwde
jl
push
xchg
ret
pushf
push
mov
mov
inc
and
scas
das
neg
pop
or
jl
ret
xchg
mov
fidiv
lods
jecxz
std
fldln2
scas
repz
iret
pop
ret
xor
mov
push
sahf
ror
xchg
dec
pop
sbb
or
mov
sahf
fisubr
or
cmp
mov
cmp
jae
add
push
test
loop
xor
xchg
mov
lock
xchg
lods
sahf
cmp
jae
mov
paddd
or
outs
pop
xor
or
push
bound
xor
test
jbe
xchg
adc
or
mov
mov
mov
scas
mov
pop
sahf
outs
in
jbe
cwde
or
jle
push
dec
fsubrp
xchg
fisttp
sub
(bad)
mov
(bad)
add
lahf
mov
mov
ret
mov
out
mov
ds
mov
fwait
repnz
shl
xchg
dec
xchg
outs
lock
in
xchg
idiv
and
xor
sub
mov
mov
push
repz
xchg
cmc
hlt
xchg
cmp
lea
cmc
add
in
cmp
std
pop
in
(bad)
pop
cmp
gs
push
cmp
inc
add
push
jno
adc
mov
mov
pop
bts
add
out
not
mov
xor
mov
loop
adc
ret
push
out
xchg
cld
rol
mov
cmp
sti
test
push
fist
scas
cmps
jecxz
xchg
or
xor
sbb
xor
mov
dec
ja
outs
mov
imul
add
(bad)
and
mov
pop
inc
(bad)
(bad)
ja
add
stos
push
ficom
jne
xor
jmp
mov
inc
and
movs
mov
mov
and
mov
div
adc
and
shr
(bad)
adc
aas
sub
rcr
mov
push
mov
cmc
push
outs
dec
rcl
cld
push
bound
xor
pusha
(bad)
jbe
cmp
sub
push
xor
loopne
mov
out
jbe
jae
mov
push
and
ja
std
add
jnp
addr16
xlat
pop
rcl
or
or
push
jo
cmp
call
jns
sbb
mov
push
mov
out
ret
or
btr
push
fcomp
(bad)
cmp
mov
add
dec
push
stos
dec
mov
sub
lea
pushf
pop
ret
iret
add
pop
pusha
fild
(bad)
jae
xchg
xchg
js
xchg
(bad)
push
jae
bound
mov
into
jb
mov
add
adc
retf
adc
add
adc
test
ret
sbb
or
xchg
stos
mov
mov
loope
add
xchg
cmps
(bad)
sti
retf
xchg
sti
inc
sahf
cmc
jne
xor
sti
out
push
(bad)
dec
or
cmp
loop
not
inc
xlat
jecxz
ss
cwde
xor
clc
dec
push
xor
push
(bad)
leave
fucomip
add
lea
or
(bad)
mov
mov
xor
test
cli
mov
sbb
lea
jno
(bad)
out
jns
movs
jae
imul
(bad)
pop
cs
cli
cli
inc
fst
and
pop
mov
and
mov
jmp
mov
mov
inc
cmps
cmps
js
xchg
xor
cdq
pop
ins
pop
gs
call
(bad)
retf
imul
push
cmp
and
sub
pop
inc
sub
push
jp
jbe
mov
sar
arpl
(bad)
idiv
sub
mov
sbb
xchg
mov
jecxz
pop
xchg
pop
ss
fs
mov
into
inc
sbb
aas
in
fild
in
or
mov
imul
stc
push
popa
arpl
nop
sbb
leave
aas
mov
lahf
div
push
mov
nop
outs
mov
ss
xchg
adc
jnp
and
into
adc
xchg
mov
and
lods
mov
add
shl
pop
xor
cmps
xor
xchg
jmp
mov
and
xchg
cmp
inc
jb
stos
sub
jae
inc
ss
push
cmp
shl
jecxz
repz
(bad)
sub
out
mov
xor
mov
inc
rcr
cmp
repz
xchg
inc
into
jb
popa
arpl
xor
into
sti
frstor
lahf
mov
adc
(bad)
repz
aas
cwde
sub
xor
(bad)
push
jnp
or
inc
retf
lea
ret
ja
loop
aam
in
mov
mov
jb
loope
push
cwde
test
and
xor
dec
(bad)
cdq
push
sub
push
call
bound
repnz
or
mov
shl
rep
xor
cs
cmps
add
dec
cli
inc
or
jmp
mov
push
cwde
outs
fldcw
mov
adc
or
inc
mov
ds
xor
bound
mov
push
retf
dec
dec
push
iret
mov
xchg
loope
(bad)
mov
and
stos
aas
lods
sahf
jbe
and
repnz
and
mov
scas
and
pop
(bad)
loop
cmp
retf
arpl
jb
pop
xor
jecxz
jo
add
xchg
das
adc
scas
das
mov
jg
add
int3
fsub
daa
and
dec
mov
inc
sbb
xor
dec
mov
lds
and
dec
(bad)
loop
sar
xchg
outs
mov
stos
aas
push
fisub
ja
jl
nop
mov
(bad)
mov
mov
adc
imul
mov
xor
sub
xor
pop
loop
add
daa
loop
shl
out
ret
jo
inc
call
mov
cwde
test
inc
repnz
jo
jmp
out
cmovo
arpl
or
dec
push
int3
dec
add
cmp
cmp
jle
clc
inc
fs
retf
inc
push
rol
dec
fild
inc
ret
ret
scas
fisub
ins
inc
bound
adc
bound
dec
ss
mov
ret
jne
popa
pop
repnz
add
data16
and
test
mov
sub
shr
cmp
jge
jae
fs
fld
cmp
jle
inc
pop
pop
jecxz
cmp
pop
xor
mov
xchg
addr16
arpl
leave
add
sbb
inc
adc
inc
mov
or
xchg
imul
mov
adc
mov
or
push
jge
inc
ret
fist
jmp
xchg
cmps
pop
jp
fild
push
and
in
mov
das
xchg
sub
pop
(bad)
jns
rol
out
cli
push
das
push
push
inc
cld
jle
jge
push
test
(bad)
mov
or
(bad)
pop
push
cmps
addr16
push
sar
mov
out
rol
xor
sbb
scas
pop
dec
pop
mov
fstp
mov
push
into
push
mov
outs
scas
push
jo
(bad)
mov
loopne
push
inc
int3
pop
mov
mov
mov
scas
push
sbb
ret
scas
iret
and
out
jg
int
sub
dec
cmovae
push
ins
dec
dec
jae
sti
int
frstor
jg
loop
push
xchg
push
dec
into
push
mov
jecxz
cs
aaa
cmp
ja
enter
retf
jl
push
push
push
aaa
inc
ss
loope
mov
jae
xor
scas
adc
xchg
lahf
xor
addr16
pop
inc
das
push
and
pushf
push
ret
push
mov
dec
cmps
iret
jg
outs
jecxz
jecxz
jg
xchg
xchg
ror
out
not
jle
adc
mov
idiv
ret
push
sub
bound
bound
arpl
xchg
push
scas
mov
adc
mov
jle
or
aaa
sub
xchg
xchg
ror
push
pop
ja
xor
mov
fisttp
push
pop
addr16
sahf
aad
(bad)
xchg
in
or
add
mov
popf
repnz
and
sti
mov
mov
adc
push
movs
fsubr
lock
add
push
push
repnz
mov
or
cmp
arpl
lahf
mov
sti
sbb
mov
(bad)
data16
imul
pop
jae
jae
cmps
dec
inc
inc
jmp
pop
clc
inc
mov
aam
inc
dec
rcr
sbb
fild
sub
mov
jmp
mov
aas
dec
dec
test
xchg
sbb
sub
mov
dec
outs
fsubr
pop
cmp
adc
adc
dec
repnz
xor
sub
xor
fdivr
add
scas
fcmovnbe
cmp
js
fwait
mov
pusha
imul
or
jmp
scas
mov
pop
loop
movs
movs
dec
or
cmp
arpl
mov
fstp
push
mov
sbb
mov
mov
sub
pop
repz
or
push
fisttp
imul
ret
sbb
bound
xchg
xchg
push
aaa
imul
(bad)
loop
shl
movs
dec
hlt
xlat
stos
pusha
lahf
dec
ret
or
xor
xor
push
mov
add
(bad)
sbb
std
sub
shl
out
repz
and
sub
push
mov
movs
cdq
push
clc
leave
ret
frstor
dec
(bad)
cmc
adc
fimul
add
push
mov
sbb
mov
ret
repz
jno
nop
sub
(bad)
jmp
xchg
or
mov
rol
add
inc
inc
shr
fdiv
xor
adc
out
call
arpl
jae
inc
std
shl
aad
xor
repnz
mov
rol
(bad)
mov
sub
es
leave
adc
jge
dec
aas
in
retf
jo
jo
dec
repnz
cmps
lahf
out
(bad)
dec
out
sbb
cli
inc
sbb
adc
and
lahf
adc
fsubr
push
jmp
xchg
arpl
mov
add
mov
shr
jae
call
fild
mov
retf
jp
add
adc
dec
hlt
cmp
fld
inc
push
sub
loop
push
ins
ret
(bad)
imul
sub
inc
es
out
jecxz
or
add
lock
or
inc
lock
dec
mov
scas
cmps
es
test
fiadd
xor
cdq
xchg
cmp
call
int
inc
sar
int3
aas
or
jle
push
aas
ins
outs
pop
pop
mov
push
call
out
call
jl
(bad)
xor
ret
push
push
outs
jecxz
xchg
popa
jp
mul
sar
adc
cmp
jnp
dec
inc
xchg
out
or
ja
sub
push
pop
pop
in
loopne
xchg
inc
sti
and
int3
push
aas
push
sub
pop
call
out
retf
cmps
mov
retf
mov
pop
jecxz
adc
inc
ret
ins
cmp
pop
xchg
add
xchg
or
xchg
add
loopne
mov
or
mov
mov
or
xchg
cld
lock
cmc
fild
aaa
daa
pop
add
in
xor
jmp
xchg
adc
bound
inc
add
mov
lods
clc
(bad)
arpl
and
stos
xor
iret
push
call
xchg
sbb
ss
jae
jbe
clc
stos
cs
mov
push
mov
rol
push
ja
jbe
sbb
push
mov
mov
xchg
mov
loopne
mov
fmul
jp
push
push
push
clc
inc
gs
aas
inc
ret
or
jp
mov
mov
push
xor
jmp
jecxz
adc
loop
(bad)
test
sub
or
and
leave
mov
inc
cmps
test
aas
pop
(bad)
cmp
xchg
int3
sub
fucomip
or
push
popf
jmp
test
ret
jns
mov
cmps
mul
mov
cmps
out
jbe
idiv
push
aaa
add
push
es
mov
xchg
daa
sbb
imul
mov
lea
arpl
clc
mov
stos
xor
or
adc
push
repz
fisttp
test
inc
sub
pop
es
repz
(bad)
cwde
xchg
xchg
loop
xor
inc
mov
stos
cwde
sbb
daa
mov
mov
frstor
sti
mov
dec
or
repz
add
popf
adc
fldcw
fadd
xchg
cwde
ins
rcl
(bad)
gs
cmp
in
lea
call
ins
nop
addr16
add
and
fisubr
mov
sub
mov
mov
es
sti
iret
icebp
arpl
sbb
call
mov
mov
adc
add
mov
test
out
and
ja
mov
sub
inc
jae
out
mov
cmp
push
push
in
aaa
inc
dec
mov
mov
push
dec
sbb
clc
mov
inc
pop
mov
dec
call
in
shr
mov
push
and
sbb
int3
mov
inc
jb
sub
push
(bad)
push
xor
test
inc
push
ret
repnz
dec
sbb
hlt
call
mov
and
bound
lods
xor
pop
pop
adc
fcmovbe
mov
aas
sbb
repz
into
pop
ins
pop
bound
push
cmp
jae
jmp
cmp
or
js
or
addr16
inc
rol
push
jmp
pop
jo
jnp
adc
adc
imul
pop
ins
dec
jge
push
and
aaa
loopne
mov
mov
xchg
cmp
mov
push
call
push
mov
inc
daa
jmp
scas
out
aaa
push
imul
mov
add
push
(bad)
call
call
xor
mov
jne
dec
push
jecxz
shr
lds
mov
xchg
ds
inc
xor
and
es
xchg
xor
xor
or
xchg
push
cs
int3
push
sti
xlat
jmp
add
and
jo
out
shl
xor
xchg
(bad)
or
xchg
pop
xor
adc
sti
fwait
xor
push
ror
mov
mov
arpl
jp
sub
es
scas
dec
inc
mov
push
sbb
add
mov
mov
xor
mov
test
sar
lahf
arpl
mov
shl
jle
and
mov
jne
push
iret
mov
and
lahf
xor
cmp
xchg
enter
push
fld
pusha
jne
int3
pop
mov
sahf
loop
(bad)
mov
out
out
dec
jmp
pop
push
ja
push
jo
xor
xor
or
shl
out
bound
idiv
stc
adc
out
mov
loope
in
outs
jmp
and
sub
jmp
popf
xchg
push
mov
clc
mov
mov
idiv
pop
mov
fs
rol
adc
fcomp
xor
clc
mov
outs
jecxz
repz
inc
mov
mov
icebp
sar
popf
repz
jb
cld
(bad)
sbb
loop
xor
cmp
push
outs
shl
adc
rol
lock
mov
inc
lea
loope
adc
loope
(bad)
(bad)
jge
repz
clc
push
loop
gs
xchg
mov
loope
add
jae
inc
lds
das
out
xchg
mov
push
icebp
mov
dec
or
loop
cmp
push
loopne
fcomp
pop
and
jl
pop
mov
out
or
mov
fs
jo
mov
jno
cli
es
out
mov
adc
ret
les
ret
enter
or
sti
es
inc
es
jecxz
mov
mul
ins
mov
adc
sbb
into
xlat
and
or
idiv
adc
idiv
shl
cs
cmps
inc
stos
(bad)
push
xor
inc
into
inc
(bad)
jle
(bad)
repz
test
push
inc
push
pop
lock
dec
or
xor
pop
hlt
push
fsubp
stc
arpl
cmps
sbb
cmp
pop
adc
pop
dec
mov
mov
retf
and
adc
xchg
jbe
outs
push
xor
call
arpl
ss
mov
jle
mov
push
imul
aas
xchg
fs
xchg
pop
sar
xor
in
sti
push
push
xchg
xchg
outs
test
jne
enter
pushf
scas
mov
push
jo
pusha
and
int3
add
or
jl
sub
push
mov
ret
xor
mov
and
(bad)
pop
jns
and
jnp
hlt
mov
pop
adc
popa
xchg
add
adc
loop
mov
mov
or
out
shl
arpl
sti
outs
repnz
neg
ret
shl
(bad)
out
and
clc
and
pop
leave
arpl
std
mov
jle
out
sbb
adc
lods
xor
fist
test
mov
repnz
jecxz
add
scas
daa
ficom
inc
adc
scas
mov
repnz
cmc
ins
(bad)
xor
xchg
pop
bound
add
lock
dec
pop
or
in
nop
or
xor
sub
dec
inc
add
arpl
push
jmp
lahf
repnz
dec
xor
outs
(bad)
jle
push
out
std
add
imul
adc
dec
out
add
rcr
shl
inc
jae
outs
pushf
push
mov
xor
jb
push
add
xchg
repnz
test
xor
mov
jp
mov
adc
scas
rcr
inc
xchg
shr
pop
mov
mov
sbb
and
inc
and
cmp
stc
pop
inc
jl
fist
push
test
xchg
push
movs
xor
mov
inc
xchg
fisub
push
lock
pop
mov
aaa
sub
push
(bad)
jmp
xchg
sub
xchg
mov
jbe
sar
sbb
das
shl
retf
cmp
and
sar
xor
and
mov
bound
call
mov
fimul
out
xchg
mov
mov
movs
cmovp
pop
push
bound
leave
frstor
std
ins
out
xchg
mov
lods
enter
sbb
out
jp
mov
bound
inc
ss
jnp
imul
dec
outs
sub
xchg
pop
adc
inc
cwde
xor
outs
jbe
sub
xchg
loop
mov
ret
out
out
in
mov
aaa
mov
mov
jp
mov
imul
test
retf
pop
xchg
xchg
or
pop
mov
shr
frstor
repnz
repz
mov
cmp
dec
(bad)
push
stos
iret
aaa
jb
sti
xor
push
lsl
inc
test
shl
cmc
mov
mov
mov
iret
mov
cwde
je
xor
inc
sti
jecxz
jo
and
add
sub
or
fdiv
cmps
rol
arpl
push
cmp
stos
xor
and
sbb
ds
ror
dec
sar
call
call
pop
adc
push
repnz
imul
mov
sub
bound
xor
add
cwde
jge
js
add
rcl
stos
and
call
or
or
adc
ret
popa
inc
mov
sbb
dec
mov
mov
inc
aaa
add
movs
lods
adc
dec
jg
shr
test
and
out
pop
push
not
into
jno
xor
(bad)
adc
xor
dec
adc
cmp
loope
mov
cmp
outs
mov
cld
pop
and
inc
call
repnz
push
sub
and
mov
mov
push
and
mov
and
dec
fidivr
retf
push
dec
or
xlat
inc
int
cmps
scas
mov
pop
mov
pop
loop
lahf
xchg
add
ins
bound
arpl
mov
mov
aad
xor
int3
ret
dec
scas
xchg
mov
rcr
(bad)
outs
loop
pop
bound
test
jb
ins
xor
jae
adc
and
aam
(bad)
xlat
jg
outs
in
cmovns
test
inc
inc
add
and
pop
(bad)
repz
mov
out
frstor
inc
sub
sub
xor
popa
in
pusha
mov
shl
mov
dec
inc
add
ret
adc
repz
add
push
ror
and
ret
(bad)
mov
mov
push
jne
xchg
and
ja
lds
bnd
cmp
adc
mov
stos
jl
fisub
cmp
cmove
add
xchg
ja
mov
cmp
(bad)
push
pop
xor
repz
add
bound
adc
lods
ret
inc
ret
xor
mov
pop
xchg
dec
xlat
jb
inc
clc
arpl
lods
mov
add
jno
cmp
rcr
dec
(bad)
mov
das
mov
fisub
xor
adc
aas
mov
das
xchg
push
xor
call
xor
inc
retf
xor
dec
repnz
xor
xlat
pop
push
dec
div
xchg
es
adc
lahf
iret
adc
dec
xchg
mov
popf
das
test
movlps
outs
fwait
out
add
mov
cmps
outs
pop
xor
aam
push
inc
out
sub
movs
adc
fnstsw
xor
mov
mov
jb
in
fcmovu
push
add
dec
and
arpl
add
adc
cmp
arpl
mov
pop
add
call
stc
test
inc
adc
xchg
push
mov
inc
fidiv
adc
jp
pop
int3
ret
xchg
mov
dec
cmp
mov
idiv
aaa
push
popf
nop
push
ss
adc
es
cli
pusha
std
mov
neg
mov
sti
test
mov
mov
mov
cld
cmp
and
mov
sub
outs
arpl
mov
jle
lea
out
push
jae
add
ret
and
adc
stos
dec
or
jl
xchg
mov
add
jae
addr16
test
fisub
inc
xchg
out
mov
pop
mov
bnd
test
push
ficom
inc
mov
jb
add
mov
xor
imul
scas
ss
jbe
in
jg
pop
mov
imul
fwait
inc
xchg
mov
add
mov
xor
std
gs
ficomp
shl
xchg
fs
jb
repz
add
push
xor
pusha
jo
mov
or
shl
test
in
fs
pop
jnp
stc
push
pusha
adc
cld
ja
test
add
shr
fild
sub
jb
bound
popf
and
cmp
stos
loop
adc
or
xchg
cmc
sub
rcl
jae
push
hlt
push
in
outs
iret
push
(bad)
icebp
xchg
loop
adc
dec
jg
xchg
push
pop
sbb
xchg
arpl
pop
jb
in
mov
imul
aaa
jbe
dec
sbb
movs
xor
and
and
ret
dec
inc
inc
rol
or
mov
dec
adc
and
sbb
outs
adc
inc
int3
ret
dec
xor
inc
shl
add
aas
ins
arpl
jb
and
adc
jge
fs
xchg
xlat
mov
sbb
popf
outs
cmp
nop
aaa
sbb
mov
push
xor
or
and
repnz
cmp
xor
cmp
int3
and
cli
cmp
out
div
sbb
retf
pop
call
fistp
xor
sar
fdivr
ror
mov
lods
cmps
call
loopne
clc
add
xchg
test
add
add
(bad)
out
fsubr
lock
mov
push
jp
adc
add
mov
imul
(bad)
jmp
xor
mov
sub
cmp
retf
cli
sub
mov
mov
dec
pop
push
mov
aaa
mov
add
dec
jmp
repz
and
add
add
dec
lds
je
adc
mov
(bad)
je
cmps
repz
xor
inc
aaa
push
sahf
pop
lods
and
sti
fwait
xor
jns
mov
cmp
ret
mov
add
mov
fst
push
cmp
or
xlat
xchg
mov
test
xor
jl
jne
ret
or
xor
and
pop
es
dec
add
mov
cmps
in
xor
cmp
cmps
scas
and
ins
sti
repz
enter
(bad)
stos
test
aaa
push
jnp
adc
inc
popf
jns
pop
adc
mov
xor
inc
enter
adc
inc
pop
ds
and
mov
movs
cmps
sub
pop
ja
xchg
mov
aam
xchg
aaa
push
mov
cmp
jg
mov
(bad)
popa
or
jo
mov
or
ret
or
dec
pusha
jo
mov
sub
xor
inc
mov
adc
add
and
cwde
rol
movs
xchg
add
mov
pushf
dec
clc
sub
aaa
xor
arpl
ds
pop
xor
xor
fwait
cmp
mov
addr16
ja
pop
jae
ret
(bad)
rol
push
in
ins
add
repz
sub
mov
jb
xor
xchg
xor
jle
int3
jmp
mov
push
out
into
jge
data16
push
mov
int
pop
scas
push
mov
or
fild
repz
or
je
mov
popf
nop
lods
retf
cmp
call
mov
inc
jecxz
xor
push
dec
add
xchg
sbb
xor
push
sbb
(bad)
jnp
xchg
(bad)
out
push
mov
push
sbb
adc
out
push
int3
ret
xchg
and
scas
fcomip
ret
ins
int3
nop
shl
xor
xor
mov
lock
in
repz
and
inc
mov
test
inc
ds
js
inc
dec
hlt
mov
xchg
mov
scas
sub
jg
(bad)
jae
mov
stos
mov
jb
xchg
add
xor
pop
cmps
imul
sbb
dec
out
(bad)
jge
fs
mov
cdq
and
mov
push
add
jae
adc
mov
bound
fiadd
test
and
pop
and
ror
dec
pop
dec
inc
inc
jp
int
mov
pop
(bad)
sub
cmp
lock
push
pop
jmp
aaa
outs
mov
mov
pop
cs
or
int3
std
mov
cmp
cmp
add
xchg
fwait
sub
inc
adc
push
sub
sub
xchg
repnz
mov
adc
inc
cmp
mov
fsub
mov
mov
cdq
add
aam
sub
or
xor
arpl
inc
sub
xor
push
das
mov
jbe
and
cdq
cmp
dec
sub
jmp
mov
mov
femms
pushw
dec
pop
add
cwde
sub
jmp
ja
js
adc
nop
mov
enter
mov
xor
int
adc
mov
stc
dec
and
adc
xor
mov
xchg
jmp
add
cmc
aad
cdq
shl
xor
loop
fidivr
mov
sbb
cmps
adc
add
fsubr
fldenv
(bad)
leave
sbb
adc
or
jns
xchg
ins
xchg
mov
stos
mov
lock
cld
ficom
rcl
repnz
push
xchg
inc
mov
pusha
cli
jo
inc
ficom
and
jecxz
jecxz
repz
add
adc
push
jbe
retf
push
fild
jno
popa
mov
retf
ja
(bad)
jge
jecxz
(bad)
or
jnp
out
mov
sbb
out
push
mov
outs
dec
jb
fwait
xor
mov
sbb
xor
cs
mov
arpl
adc
push
jle
loopne
pop
outs
sbb
xor
fs
cmp
add
xchg
inc
pusha
cmp
mov
outs
and
xlat
cmps
stos
xchg
neg
mov
jmp
(bad)
shl
jmp
imul
jle
stos
sbb
popf
xchg
push
clc
mov
aad
(bad)
cmp
xchg
xchg
push
mov
jne
fwait
mov
mov
cld
jl
sbb
mov
aad
or
adc
inc
pop
add
ret
pop
adc
mov
repz
ret
pop
lock
loope
lock
neg
bound
xor
outs
loop
jno
ret
and
xor
pop
outs
cmps
push
inc
pop
cmp
push
jae
mov
aad
or
mov
sbb
cmp
pop
(bad)
sbb
mov
pop
fsub
lods
lods
sbb
cwde
ror
repnz
add
out
sub
mov
mov
jne
mov
mov
ror
lock
mov
pop
pusha
and
ss
push
jne
in
test
cmps
sbb
xchg
mov
push
loop
popf
pushf
or
dec
cli
ret
(bad)
mov
inc
cmp
das
push
push
mov
das
mov
mov
lock
push
add
ror
mov
fwait
mov
repz
and
into
or
pop
push
sar
aas
jp
cmps
popa
loopne
inc
mov
jecxz
outs
push
fisubr
pushw
jns
loop
xor
test
push
fwait
mov
cmp
sahf
adc
sbb
xor
jle
push
shl
sbb
xor
stos
bound
push
mov
add
push
and
icebp
imul
pushf
or
sbb
dec
xchg
(bad)
jp
test
ja
movs
jnp
pop
arpl
mov
ud1
xchg
or
loopne
push
sbb
mov
add
and
dec
dec
popa
pop
ss
or
out
stos
jle
test
and
je
push
inc
inc
cmp
adc
test
cli
nop
mov
xor
fsubr
cmp
xlat
sub
adc
call
cmp
loope
inc
jge
cli
push
xor
outs
jbe
outs
cli
mov
ret
jnp
imul
inc
mov
add
aas
arpl
test
sbb
and
loop
iret
fsubr
adc
ret
jnp
out
adc
dec
psubusb
pop
cmp
add
pop
ffree
in
inc
rol
movs
xchg
push
inc
pop
sti
movs
out
cmp
adc
mov
iret
jecxz
(bad)
sub
(bad)
mov
and
sub
mov
xchg
pop
fldenv
fnstcw
add
leave
dec
pop
xor
or
movs
iret
call
stc
jbe
pop
popf
cmp
iret
scas
out
push
jbe
mov
mov
jecxz
enter
jbe
(bad)
iret
jae
and
gs
push
sbb
adc
add
mov
fsubp
repz
pop
rol
pop
clc
adc
dec
push
xchg
movs
pushf
jl
dec
enter
rcl
fidivr
arpl
xchg
ret
lds
pusha
sbb
test
mov
inc
xor
mov
cmp
push
paddb
jae
mov
(bad)
ret
jae
and
clc
xchg
arpl
imul
das
adc
ret
jnp
loop
xchg
add
rcr
pop
ins
dec
xchg
enter
jmp
and
hlt
push
add
cdq
ret
ret
(bad)
loope
jb
inc
jge
stos
jnp
test
inc
mov
xor
fcomip
sahf
mov
or
pop
mov
fisub
push
mov
pop
hlt
push
fidiv
xor
je
pop
sbb
mov
pop
mov
jb
repz
sahf
call
ja
xchg
(bad)
in
aas
std
mov
fnclex
mov
or
jne
push
bound
test
(bad)
mov
pop
mov
retf
jg
cwde
jbe
call
add
shl
bound
and
push
jb
inc
gs
sbb
fs
ret
ret
repnz
loop
shl
jle
pop
lock
dec
in
cmp
jo
dec
mov
xor
sub
xchg
repz
idiv
sub
sub
mov
call
cmp
xchg
mov
jle
sbb
loope
mov
adc
xchg
add
dec
aaa
loop
xor
cmp
imul
and
sub
push
mov
inc
jae
xor
adc
scas
mov
rcl
out
mov
ins
push
scas
fbstp
push
popw
nop
ret
adc
and
or
mov
adc
out
imul
jae
dec
mov
fstp
dec
or
repz
(bad)
scas
arpl
xchg
jns
popf
int
(bad)
mov
push
sbb
rcr
adc
rcl
ret
jg
out
out
xchg
mov
leave
call
mov
adc
rcl
int3
fisub
repnz
add
mov
(bad)
in
and
sahf
cld
xor
jecxz
in
push
dec
mov
adc
dec
xor
inc
call
cld
repz
xchg
ret
add
and
ret
ret
(bad)
out
cmp
daa
jb
add
push
xchg
out
scas
outs
xchg
stos
xchg
mov
pop
popa
pop
test
add
pop
fucom
pop
mov
cmp
and
sbb
cmp
cmp
adc
lods
xchg
repnz
mov
pop
jle
shr
fbld
(bad)
jno
jmp
add
xor
pusha
addr16
inc
mov
cmc
arpl
mov
repz
ins
stos
push
push
push
sub
arpl
in
aaa
and
pop
jcxz
dec
cmp
or
loope
test
adc
test
adc
inc
add
and
xchg
xchg
mov
loope
dec
addr16
xor
push
push
sbb
jae
add
daa
jb
adc
mov
push
dec
shr
sbb
jb
mov
inc
jnp
dec
cs
push
add
inc
cmps
shr
pop
xor
loope
outs
add
mov
arpl
adc
ret
dec
shl
ins
dec
inc
ret
mov
(bad)
sahf
cmp
pop
jne
jp
pop
jae
inc
int
pushf
jnp
repz
push
add
xor
cmc
push
jecxz
ss
add
add
repnz
imul
mov
xor
mov
sub
cmps
sbb
inc
jae
dec
sub
bsf
pop
call
or
(bad)
cmc
dec
sbb
rol
sbb
cld
or
(bad)
test
lods
mov
inc
mov
push
lahf
and
sub
mov
lods
ret
out
(bad)
es
inc
test
(bad)
xor
outs
or
ret
fidivr
ror
push
jb
push
repz
push
or
das
mov
jbe
adc
mov
imul
das
mov
push
(bad)
ss
add
inc
mov
sahf
aaa
pusha
xchg
(bad)
std
call
cmp
gs
iret
shl
mov
pop
bound
and
add
or
out
arpl
out
cmc
xchg
mov
outs
push
add
push
iret
push
ffree
push
xlat
pop
and
loop
xlat
out
jg
push
inc
out
jmp
adc
push
shl
rcl
outs
aam
aad
mov
loop
adc
dec
xchg
loop
loopne
push
test
lods
call
dec
arpl
lock
scas
adc
ds
inc
mov
inc
aas
(bad)
popf
arpl
clc
jb
data16
enter
push
(bad)
xor
mov
lahf
cmp
jo
lods
jmp
stos
jae
jbe
shl
inc
(bad)
aas
xchg
imul
cmp
sub
dec
fucomi
not
and
add
in
ja
cdq
inc
pop
mov
push
loop
leave
xchg
dec
xchg
sbb
and
popf
ss
jb
add
fs
adc
scas
jecxz
jo
mov
xchg
push
lods
mov
ret
data16
sub
dec
add
mov
jg
(bad)
sbb
retf
cmps
retf
fcomp
ret
pusha
(bad)
xor
xchg
xor
scas
mov
dec
xchg
(bad)
xlat
mov
stos
jg
popf
out
push
(bad)
push
add
loop
xor
sbb
(bad)
mov
sub
bswap
clc
push
mov
add
mov
outs
jecxz
lods
ret
xchg
repz
clc
outs
cmp
xor
cwde
jb
push
jg
ret
jns
fidivr
jb
pop
mov
(bad)
fbstp
or
push
pusha
jne
loopne
xchg
xor
seto
ret
shl
inc
addr16
popf
pushf
xlat
jo
(bad)
fucom
in
es
pop
xor
mov
push
retf
push
rol
(bad)
adc
into
fwait
aas
lea
fsubrp
push
stos
xchg
xchg
das
dec
sub
ret
outs
(bad)
cmc
mov
xor
inc
push
(bad)
repz
jecxz
lds
les
sub
xchg
inc
pop
std
in
inc
jle
sbb
mov
ss
xor
add
xor
xchg
dec
(bad)
out
jmp
ja
gs
out
sbb
jmp
sbb
movs
mov
or
xchg
dec
int
das
test
cmp
movs
into
not
mov
outs
leave
xchg
dec
jle
and
pop
add
push
pop
sbb
nop
movs
add
(bad)
and
lahf
cmp
add
repnz
test
mov
out
ror
mov
push
cmp
cld
inc
cmp
cmc
add
xor
cmps
rcr
push
out
xchg
enter
or
pop
popa
sub
add
sbb
sub
loope
mov
cmps
mov
xchg
sbb
test
add
cmp
sub
xchg
cmps
add
push
jmp
push
xor
data16
iret
dec
inc
call
adc
jb
adc
xchg
xor
and
mov
push
jb
jle
xor
add
arpl
sti
leave
jge
mov
popa
fwait
pop
inc
dec
xchg
adc
mov
cdq
mov
aaa
cwde
inc
pop
shl
adc
or
and
xchg
adc
fcomp
adc
add
xchg
scas
xor
add
add
cwde
sbb
inc
es
nop
ds
cmps
mov
test
jle
mov
popf
cmp
and
pusha
fsubr
repnz
or
mov
add
mov
enter
out
push
test
xor
and
mov
mov
(bad)
xchg
nop
test
inc
dec
pop
add
loop
jae
iret
mov
mov
outs
adc
out
push
cmp
iret
scas
adc
shl
ror
sbb
mov
cmp
shl
mov
inc
mov
arpl
lock
mov
inc
(bad)
js
sbb
jae
xchg
sub
cmc
aad
jp
or
xlat
seto
hlt
repnz
scas
neg
or
pop
push
arpl
xor
dec
in
int
sub
mov
aas
repnz
jmp
xlat
dec
into
mov
sbb
rcr
adc
pop
out
jl
outs
pop
(bad)
sar
into
mov
adc
jge
mov
jbe
jmp
xlat
icebp
or
jb
das
bound
jae
push
ds
outs
inc
xor
(bad)
mov
test
out
loopne
inc
fidiv
adc
jp
push
inc
fcom
adc
mov
mov
stos
sar
arpl
clc
mov
cmp
sub
sbb
aad
adc
pop
add
inc
mov
sub
xlat
mov
cmps
lock
sub
loop
push
jle
or
fistp
stc
mov
call
cmc
push
test
dec
push
add
mov
xchg
fisttp
test
inc
sub
pop
es
repz
(bad)
jns
xchg
cmps
(bad)
jp
xchg
mov
jmp
or
nop
dec
stos
fwait
int3
cmp
xchg
rol
neg
out
xchg
pop
out
and
mov
xor
frstor
adc
adc
in
or
cwde
mov
mov
rcpps
and
inc
cld
xor
arpl
jbe
inc
call
xchg
int3
dec
lods
call
jbe
xor
popa
push
mov
outs
and
sbb
shl
or
mov
inc
xor
jle
xchg
mov
inc
jecxz
or
or
inc
out
fimul
mov
xor
mov
xchg
inc
lds
and
pop
retf
xchg
(bad)
xor
movs
xor
bound
xor
fild
(bad)
and
push
repnz
inc
and
dec
fcom
sbb
movhps
xchg
xor
inc
jb
daa
pushf
add
jb
jb
push
psubsw
xchg
or
bound
xlat
jecxz
mov
inc
ss
sahf
and
push
cmps
xor
cs
outs
xchg
sti
inc
pop
mov
mov
inc
jae
add
loop
push
dec
cmp
xchg
out
dec
shl
inc
loope
in
mov
fwait
xchg
sti
ret
adc
daa
jbe
sbb
test
cmp
sub
icebp
call
and
inc
add
test
mov
and
imul
adc
clc
adc
push
mov
sti
mov
jl
into
pop
scas
fild
bound
(bad)
and
rcr
adc
jle
or
mov
enter
addr16
clc
shr
cmp
leave
popa
(bad)
xor
mov
xlat
or
into
cmp
inc
or
sub
push
mov
fadd
test
aas
mov
xchg
pop
fisttp
int3
scas
das
pushf
pop
fwait
mov
adc
xor
dec
or
cdq
cmp
pop
retf
ins
(bad)
or
enter
ret
add
xchg
lock
neg
mov
inc
outs
cmp
adc
leave
ret
ficom
ret
pop
lahf
cmps
pop
mov
mov
dec
mov
inc
in
fcomp
arpl
jae
mov
es
sub
add
sub
(bad)
mov
enter
adc
adc
mov
(bad)
ds
out
push
imul
imul
ja
addr16
sbb
lahf
cdq
xchg
and
mov
pshufw
pop
(bad)
mov
mov
addr16
js
int
adc
push
in
outs
ds
shl
mov
xor
sbb
iret
leave
out
js
aad
mov
icebp
xchg
aaa
scas
jmp
mov
sbb
xchg
repnz
popf
xchg
pusha
and
fstp
in
fcomp
ds
fidivr
cmp
ret
loop
imul
test
cmps
xchg
cwde
add
aaa
push
mov
cmp
jg
fxch
adc
repnz
(bad)
ret
mov
xor
inc
stc
or
xor
int
inc
loopne
fisttp
mov
in
pop
cwde
sbb
xor
jb
and
jae
dec
jg
and
int3
pop
ret
lds
cmps
pop
cs
arpl
cli
mov
inc
adc
and
fstp
out
jmp
xlat
mov
jecxz
cmps
mov
or
vaddsubps
popa
cli
mov
cmp
mov
dec
imul
pop
(bad)
mov
push
data16
std
cmp
popf
std
or
test
mov
test
mov
int
dec
pop
inc
xor
inc
jns
loope
pop
mov
lahf
fcomp
mov
push
popa
inc
dec
lods
addr16
repz
je
data16
pop
xchg
lock
xor
sbb
cld
push
jo
adc
push
data16
inc
mov
push
imul
cmp
pop
xchg
(bad)
dec
aam
push
hlt
mov
push
push
jmp
ret
scas
rol
add
dec
sbb
add
mov
mov
jecxz
push
repz
fwait
leave
mov
push
(bad)
ret
sbb
ins
in
mov
fwait
xchg
sti
ret
mov
(bad)
repnz
scas
scas
pop
repz
mov
mov
cmp
and
dec
add
cmp
jg
fnstcw
sti
outs
mov
sti
mov
xor
ret
loop
movs
lahf
jmp
dec
inc
mov
jo
inc
fmulp
and
stc
int3
lds
sub
xchg
je
(bad)
fadd
stos
adc
dec
xchg
mov
xor
sub
jecxz
xor
push
out
(bad)
(bad)
adc
mov
imul
inc
dec
pslld
xchg
cmp
or
pop
adc
sbb
add
mov
sub
xor
outs
adc
inc
ret
out
mov
imul
cmc
cmps
push
cmp
pushf
pop
scas
adc
jo
ins
add
cwde
shl
adc
mov
dec
sub
or
aas
push
(bad)
call
fcmovbe
and
xor
push
xlat
push
pop
xchg
xchg
dec
push
pop
(bad)
cwde
cmp
mov
xor
push
pop
in
outs
std
cmp
sar
push
or
(bad)
mov
fldcw
pushf
xlat
jb
pop
(bad)
in
and
loopne
int3
outs
test
ret
shl
repnz
shl
and
call
xor
pop
xchg
shl
jmp
xchg
dec
orps
(bad)
out
or
inc
add
and
loopne
adc
add
les
pusha
repnz
imul
dec
div
push
cmp
mov
cld
ja
mul
push
cmps
or
repz
(bad)
pop
icebp
aam
icebp
add
mov
add
push
dec
and
xor
jecxz
or
xchg
mov
sub
mov
adc
fnstenv
fstp
cli
xor
cmp
shl
xchg
jnp
mov
stc
push
inc
out
xor
adc
dec
(bad)
inc
std
ret
mov
xor
jl
xchg
cmps
repz
icebp
or
add
fnstenv
imul
push
add
sub
inc
cld
mov
imul
lea
jbe
cdq
mov
mov
fisub
aam
out
jle
pop
adc
push
adc
dec
mov
xor
cwde
sbb
sub
adc
xor
repnz
nop
or
rcl
mov
jp
cli
mov
xlat
loopne
add
daa
adc
pop
mov
out
retf
add
retf
ins
fld
sbb
arpl
adc
gs
push
shl
stos
(bad)
push
enter
add
adc
pop
shl
mov
shl
aam
dec
jl
xchg
retf
jecxz
dec
mov
and
jb
add
push
in
and
jno
call
add
cmp
xchg
push
(bad)
push
arpl
inc
mov
and
fucomi
repnz
mov
sti
jmp
nop
fisttp
xor
shl
out
push
adc
out
sub
xchg
popa
mov
add
and
imul
aas
loop
call
sub
stc
repnz
popf
fucomi
mov
cmp
dec
and
pop
add
(bad)
jle
push
outs
xchg
push
push
ins
je
push
jb
xchg
pushf
add
stos
daa
jne
push
mov
test
jl
xchg
dec
mov
sbb
cmp
jmp
jle
rcr
mov
mov
mov
out
adc
ret
pop
xor
test
jmp
cmc
dec
mov
adc
cmp
ja
sbb
push
xchg
sbb
mov
pop
mov
cmc
sub
fisub
enter
sti
inc
mov
and
shl
mov
mov
add
dec
stos
scas
push
(bad)
faddp
add
sbb
xor
inc
mov
adc
add
and
cwde
rol
movs
xchg
add
mov
pushf
dec
clc
sub
and
adc
ja
adc
js
pop
xor
xor
fwait
cmp
mov
xor
bound
sub
imul
xor
and
sub
nop
mov
push
jb
jmp
xchg
sti
jl
in
add
lods
shl
test
and
sub
jmp
fdiv
stos
push
int
(bad)
in
jle
nop
es
cmps
push
cmps
pop
mov
add
mov
test
pop
add
jns
addr16
cmp
retf
pop
aam
icebp
push
sahf
imul
aaa
enter
dec
dec
sbb
jecxz
xor
out
lock
mov
jae
mov
ror
xor
cmps
jecxz
dec
ds
in
jnp
jg
pop
push
push
mov
mov
mov
inc
add
pop
ds
mov
ins
(bad)
pusha
xchg
mov
das
jmp
sub
mov
fldcw
or
ror
mov
pop
adc
test
lar
jnp
mov
adc
xchg
xchg
iret
xchg
add
push
jae
dec
aas
fiadd
inc
je
mov
scas
xor
or
call
jb
inc
mov
push
adc
and
std
jecxz
sub
sbb
repz
out
neg
out
xchg
mov
mov
(bad)
push
cmps
or
mov
fimul
fistp
scas
call
lds
addr16
loope
dec
and
in
fdiv
outs
pop
xchg
push
push
jp
mov
loop
repnz
add
repz
xchg
bound
xchg
sub
lods
out
and
mov
test
fimul
xchg
add
add
dec
cmps
shl
call
pop
nop
and
xchg
xor
inc
xchg
adc
inc
nop
repz
add
add
mov
mov
repz
xchg
dec
loop
pop
inc
add
js
add
pop
xchg
mov
enter
xchg
inc
jae
add
fsubr
xlat
sub
scas
lahf
jle
rcr
pop
shl
data16
push
shl
xor
mov
out
mov
and
ret
jg
and
pop
or
shl
shl
xor
mov
xor
jb
push
xchg
push
xchg
xor
push
lods
mov
cld
jmp
dec
xchg
adc
adc
into
dec
inc
sub
bnd
and
adc
push
xchg
xor
cmp
popf
inc
call
and
aas
jmp
inc
shl
cmp
daa
cmp
out
mov
xchg
xchg
inc
cmps
add
push
xchg
pushf
fbstp
(bad)
or
repz
mov
xchg
xchg
xchg
add
lods
das
out
push
xor
fcomp
sub
push
xchg
adc
ret
out
out
ffreep
lods
cld
xor
mov
or
or
push
dec
push
pop
das
pop
jb
dec
xor
stos
cld
xor
pop
mov
xlat
push
loop
push
repz
mov
mov
push
shl
shl
es
and
aaa
int3
loop
jg
(bad)
sbb
mov
retf
ds
sub
mov
mov
ss
scas
mov
retf
ror
sbb
jle
outs
call
dec
or
out
pushf
mov
mov
retf
daa
cmp
xchg
addr16
mov
xchg
sbb
das
out
push
xor
mov
mov
ret
mov
imul
(bad)
retf
retf
xchg
sbb
cmp
sub
jp
push
inc
dec
repnz
div
and
push
shl
ja
inc
es
retf
push
push
mov
(bad)
mov
xor
imul
inc
and
jae
es
and
push
daa
cmp
pop
loop
scas
(bad)
cmp
out
dec
inc
push
retf
pushf
mov
push
fsub
push
xchg
imul
lock
lock
mov
jo
call
pop
mov
outs
outs
pop
xchg
cmp
xlat
aaa
jge
mov
jo
jo
lock
(bad)
cmp
dec
push
jle
push
aas
push
das
cs
ds
lea
and
cli
cld
f2xm1
stc
lock
xlat
out
rol
push
aas
push
das
mov
xchg
jo
cs
iret
add
in
pusha
fucomp
bnd
jns
adc
cmp
mov
mov
mov
(bad)
(bad)
out
mov
or
ror
pop
(bad)
jge
mov
iret
ret
(bad)
int
das
jns
(bad)
pusha
rcl
or
sbb
dec
into
call
jo
cmovle
int
cmp
jo
outs
adc
adc
pop
cs
dec
mov
adc
adc
fcomp
neg
mov
outs
mov
mov
lods
inc
retf
jae
jg
or
ror
jl
push
rcr
cmps
shl
call
pop
nop
and
xchg
xor
out
pop
loop
push
repz
lock
fisubr
cs
mov
mov
pop
dec
mov
in
frstor
lock
mov
outs
jecxz
or
out
push
mov
into
jb
popf
out
retf
mov
fadd
sub
mov
mov
xchg
inc
mov
fist
addr16
jbe
(bad)
pop
mov
loop
lahf
xor
xchg
arpl
mov
data16
mov
add
pop
cli
fisttp
xlat
xchg
outs
jecxz
xor
mov
call
mov
int
mov
ret
mov
(bad)
sbb
jle
jl
ins
mov
into
adc
add
xchg
or
sbb
add
and
xor
pop
jecxz
push
mov
sub
mov
retf
loope
ds
(bad)
jmp
push
push
(bad)
cli
cld
fst
fsubrp
(bad)
xor
push
push
xchg
ret
mov
out
jae
cld
jg
frstor
mov
or
sub
push
or
(bad)
out
pushf
ja
leave
add
ss
scas
adc
mov
nop
jbe
sub
and
xor
and
mov
add
xor
loope
mov
add
clc
inc
out
in
jmp
neg
shl
loope
add
cmp
call
push
xchg
xor
jg
and
xor
or
call
daa
mov
pusha
cdq
xor
inc
repnz
scas
pop
jle
jl
push
retf
dec
loop
xor
bound
jae
ret
pop
mov
cmp
sbb
test
movs
sub
push
lods
inc
shl
inc
mov
int3
dec
dec
repnz
cmps
dec
xchg
loopne
sbb
xor
bound
clc
inc
iret
pop
in
(bad)
outs
lahf
mov
sbb
inc
dec
push
arpl
jge
mov
out
mov
jno
test
add
and
xor
adc
mov
out
ret
iret
rcl
xchg
lahf
repnz
dec
xor
and
push
dec
sub
jo
push
lea
sbb
and
rcl
fild
int3
add
or
jle
jl
push
pop
cs
dec
jb
adc
inc
inc
repz
scas
mov
add
jle
jecxz
ins
mov
mov
ja
inc
les
push
scas
and
std
mov
in
jmp
jle
cmps
dec
xchg
xchg
inc
mov
xchg
mov
ret
loopne
cdq
xor
out
dec
scas
outs
shl
pop
mov
and
fiadd
pushf
fist
mov
test
test
lock
loop
jb
aas
cmp
push
add
scas
or
cmp
cwde
and
or
inc
xchg
mul
jl
ins
out
jnp
bswap
jge
jb
jb
inc
(bad)
fistp
xchg
adc
mov
jno
xchg
mov
add
push
and
sub
loope
jo
ret
xor
mov
jmp
mov
jae
dec
cmps
shl
out
push
mov
shl
mov
ret
or
xor
bound
add
fsub
ja
mov
pop
push
scas
scas
lahf
xor
xchg
neg
push
mov
out
pusha
push
xchg
ror
xchg
das
mov
pop
push
scas
and
jle
jl
sub
outs
shl
das
mov
call
addr16
push
mov
push
out
push
sti
mov
test
sub
mov
ret
ret
xchg
add
xor
fbstp
dec
icebp
scas
pop
mov
jg
in
jmp
or
xor
cs
mov
mov
push
mov
mov
in
mov
dec
repnz
(bad)
sbb
mov
jmp
ins
dec
stos
mov
cmovae
(bad)
jmp
cld
rcr
and
push
or
(bad)
or
ins
add
mov
dec
inc
repz
dec
loop
xor
mov
dec
inc
pop
xchg
iret
into
jb
mov
add
mov
cmp
(bad)
sub
push
retf
(bad)
jb
push
mov
and
rcr
cmps
xchg
jp
mov
xor
mov
jnp
and
fimul
sbb
daa
(bad)
cmp
loope
sub
jmp
cld
xchg
pop
scas
and
jmp
repnz
mov
icebp
push
sbb
bswap
jge
mov
cld
imul
and
mov
dec
repnz
mov
icebp
sbb
dec
pop
or
xchg
push
popf
mov
jae
es
and
or
sbb
mov
out
mov
lods
mov
jmp
fcomp
add
pop
pop
and
loope
pop
inc
(bad)
cmp
push
add
in
push
out
ja
sbb
mov
or
lock
jbe
out
push
ret
xor
retf
scas
adc
push
(bad)
xchg
js
jl
ins
push
out
pop
mov
stos
(bad)
fsubr
push
mov
es
test
ret
repnz
jecxz
repz
xchg
mov
inc
jb
bound
jae
add
adc
and
xor
ret
repnz
jecxz
repz
xchg
mov
inc
jb
bound
jae
add
adc
and
xor
ret
repnz
jecxz
repz
xchg
mov
inc
jb
bound
jae
add
adc
and
xor
ret
repnz
jecxz
repz
xchg
mov
inc
jb
bound
jae
add
adc
and
xor
ret
repnz
jecxz
repz
xchg
mov
inc
jb
bound
jae
add
adc
and
xor
ret
repnz
jecxz
repz
xchg
mov
inc
jb
bound
jae
add
adc
and
xor
ret
repnz
jecxz
repz
xchg
mov
inc
jb
bound
jae
add
adc
and
xor
ret
repnz
jecxz
repz
xchg
mov
inc
jb
bound
jae
add
adc
and
xor
ret
repnz
jecxz
repz
xchg
mov
xchg
sub
push
pop
inc
pop
inc
test
inc
push
sbb
sti
out
scas
inc
stos
mov
xchg
mov
and
pop
ret
mov
sub
jmp
xchg
and
push
movs
cli
(bad)
fcmovb
call
dec
adc
(bad)
mov
shr
mov
inc
inc
mov
leave
aam
mov
sbb
sti
out
lods
pop
dec
or
and
xchg
repz
xchg
mov
inc
pop
push
bound
jae
add
js
add
loop
sub
std
lahf
jnp
retf
jns
jp
cdq
push
xor
inc
add
adc
and
xor
retf
inc
idiv
into
shl
stos
sahf
mov
(bad)
or
add
cmp
adc
imul
pop
outs
xor
clc
cmp
sbb
xor
retf
pop
outs
jae
dec
jle
jbe
push
push
imul
push
das
mov
jecxz
inc
pop
mov
dec
test
and
std
out
ficomp
arpl
or
shl
jecxz
repz
sbb
popf
jb
popf
arpl
inc
adc
adc
bound
add
rcr
sub
mov
inc
mov
arpl
inc
jecxz
adc
fimul
ret
xchg
shl
ror
xor
jge
ficom
imul
add
adc
and
imul
repnz
sub
mov
inc
jb
bound
push
jb
add
adc
imul
add
or
jae
add
ret
mov
inc
xor
pushf
push
repz
add
adc
adc
add
shl
add
ret
jl
adc
inc
jae
(bad)
push
jae
add
and
adc
add
shl
ret
xchg
mov
shr
push
bound
retf
add
adc
sti
repz
ret
repnz
out
ret
adc
jmp
repz
std
int
mov
and
out
cmp
cli
(bad)
xchg
jecxz
in
and
dec
jb
(bad)
xlat
out
mov
xor
adc
add
into
(bad)
loop
sar
xchg
fcmovbe
(bad)
aam
sbb
sbb
(bad)
fbld
lds
sub
div
mov
adc
mov
addr16
pop
ja
jg
dec
push
xchg
cmps
mov
jecxz
bnd
jae
mov
jp
jae
dec
push
outs
ss
and
cmp
or
repnz
adc
cmp
pusha
cwde
mov
inc
scas
mov
lahf
pop
bound
or
adc
bound
sar
sbb
xchg
mov
inc
jb
bound
cmp
and
adc
sub
mov
jecxz
shl
cmps
xor
add
inc
push
jae
add
xor
and
shl
jecxz
bnd
lahf
test
xchg
mov
push
add
mov
adc
and
shl
jecxz
adc
jp
xchg
mov
inc
jb
push
and
daa
and
adc
push
xor
push
fcomi
ret
sbb
outs
imul
outs
data16
xor
arpl
push
ins
mov
mov
(bad)
mov
or
adc
jo
xchg
nop
mov
pusha
cs
and
adc
retf
loop
mov
mov
push
xchg
mov
inc
mov
jae
add
add
or
xor
ret
mov
loop
shl
retf
xor
(bad)
sar
rcr
xchg
mov
and
adc
add
jecxz
loopne
shr
mov
inc
jb
das
fs
jae
add
and
mov
add
mov
xchg
add
jb
sbb
push
jne
add
adc
repz
loopne
lock
xor
mov
push
bound
cs
add
cmp
add
mov
loopne
mov
inc
(bad)
jp
scas
mov
call
add
imul
fild
xor
add
bound
lahf
dec
add
adc
sbb
adc
(bad)
(bad)
jmp
repnz
add
shl
jae
retf
xor
and
repnz
ret
repnz
jecxz
repz
xchg
mov
inc
xor
arpl
inc
add
adc
adc
add
dec
inc
loop
repz
xchg
mov
inc
jb
bound
xor
or
das
jp
ret
repnz
test
mov
out
jno
bound
mov
and
adc
add
repnz
loop
repz
xchg
mov
inc
jb
aas
add
xor
and
repnz
shl
ret
xchg
mov
mov
push
imul
adc
pop
cs
xchg
lods
mov
xchg
push
jp
xor
sub
stos
mov
sub
sub
jmp
jmp
(bad)
out
es
push
das
es
retf
mov
jo
add
adc
xor
xor
mov
mov
mov
rol
ss
push
lahf
mov
ss
sub
xor
dec
mov
cmp
xchg
push
push
jg
add
add
add
pop
xchg
lock
pop
cs
mov
inc
ret
scas
xchg
and
add
xchg
stos
mov
xchg
test
leave
adc
aaa
push
pop
das
test
lods
lods
test
cmp
and
inc
mov
repz
push
add
ret
inc
mov
mov
mov
push
add
cmp
cmp
movs
jb
sbb
cmp
sbb
pop
mov
dec
push
jno
jnp
inc
dec
gs
pop
push
jl
and
inc
push
mov
cmp
cmp
xchg
sar
(bad)
sbb
shl
jecxz
repnz
test
mov
adc
cmp
push
jae
add
adc
mov
call
add
outs
inc
outs
cmps
stos
xchg
mov
pop
push
js
pop
push
ds
pop
cmp
and
bound
dec
dec
inc
dec
jcxz
xor
jns
popf
mov
mov
jle
and
push
and
adc
xchg
lods
mov
mov
ds
pop
in
retf
arpl
call
adc
sti
mov
fcmove
repnz
jl
fxtract
shl
jmp
arpl
(bad)
add
adc
jecxz
loopne
ret
repnz
out
repz
call
inc
push
bound
cmp
popa
imul
adc
or
loop
dec
push
ins
xor
push
cmps
mov
pushf
movs
pusha
arpl
dec
push
xor
and
and
cmp
repnz
mov
mov
daa
mov
rcl
arpl
dec
add
adc
jmp
out
in
or
repnz
xchg
loop
xchg
mov
inc
ds
bound
adc
xor
pop
and
xor
dec
lock
jecxz
pop
ret
xor
adc
sbb
add
adc
stos
sub
pop
adc
ret
dec
cmps
mov
mov
bound
inc
and
adc
and
ss
repnz
mov
mov
ret
xor
adc
cld
arpl
jae
add
adc
sti
adc
add
push
sub
jecxz
repz
xchg
mov
inc
adc
push
pop
aas
test
xor
ret
xor
loopne
shl
and
ins
mov
stos
ja
bound
jp
add
adc
and
push
add
repnz
loop
repz
xchg
mov
inc
jb
nop
add
mov
repnz
out
repz
popf
mov
imul
bound
push
outs
xor
jno
xchg
pop
push
jge
and
xchg
mov
movs
ja
bound
addr16
push
xor
and
cmp
ret
repnz
out
(bad)
or
or
xor
test
jae
test
sbb
shl
loop
mov
ret
push
cs
xchg
mov
inc
mov
jae
and
in
sub
or
add
repnz
sbb
and
jmp
aam
adc
and
xor
(bad)
out
out
repz
(bad)
(bad)
xchg
mov
inc
out
push
bound
mov
adc
add
repz
jecxz
bnd
lahf
mov
push
or
and
add
and
in
dec
xchg
lods
mov
xchg
test
and
push
mov
inc
jb
pusha
arpl
push
push
xor
and
es
fcomip
mov
ret
in
repnz
cld
(bad)
int
shr
clc
aad
sbb
shl
mov
out
retf
aas
sbb
ret
arpl
call
(bad)
cld
(bad)
cmc
ret
rcr
xchg
mov
and
adc
cld
mov
xchg
scas
hlt
sub
and
pop
and
loope
clc
aad
mov
or
push
mov
push
jae
add
or
and
pop
ss
mov
lods
mov
add
jb
pop
ja
jg
inc
push
aam
inc
add
pop
cmp
adc
xchg
lahf
xchg
mov
jbe
jnp
inc
dec
popa
dec
mov
pop
and
fadd
xor
dec
sub
xor
outs
jb
jo
jbe
ret
xchg
cli
out
mov
inc
xchg
cmp
xor
sbb
add
repnz
addr16
repz
xchg
mov
loope
in
scas
mov
xor
sub
cmp
inc
xchg
nop
mov
ret
cmp
mov
mov
ja
add
adc
adc
ss
repnz
mov
mov
ret
xor
xor
push
bound
call
push
es
repnz
loop
repz
xchg
mov
inc
jb
arpl
jae
add
adc
mov
xor
ret
push
jl
out
repz
jno
jp
mov
inc
jae
pusha
arpl
outs
daa
xor
and
dec
arpl
pop
gs
sub
jg
popf
jno
bound
xchg
sbb
add
ret
repnz
mov
mov
xor
mov
mov
add
adc
daa
adc
add
retf
jecxz
jecxz
repz
fbstp
and
into
push
jae
add
fisub
and
xor
shl
loop
sub
ret
lahf
mov
xchg
mov
imul
arpl
femms
xor
and
pop
mov
jne
pop
adc
adc
mov
mov
dec
push
bound
inc
outs
add
adc
inc
dec
xor
ret
repnz
outs
shl
ret
inc
test
xchg
mov
cmps
sahf
cmps
pushf
popf
pop
pusha
pop
daa
xor
and
inc
push
ret
loop
shl
ret
fwait
mov
loop
in
stos
cmp
sbb
cmp
cdq
mov
mov
mov
mov
mov
inc
jb
imul
push
(bad)
inc
std
retf
out
add
repnz
xlat
out
mov
mov
shr
cmc
shr
jae
jecxz
loope
daa
pop
and
loop
out
bnd
ret
mov
inc
jb
bound
push
jae
add
xchg
stos
iret
repnz
pop
pop
cmp
inc
dec
pusha
dec
test
push
bound
jae
add
adc
and
arpl
repnz
(bad)
shl
ret
adc
push
jb
bound
xchg
inc
jns
jge
repz
neg
clc
(bad)
cld
leave
(bad)
ret
xchg
mov
jmp
push
jae
add
adc
(bad)
push
xor
ret
cld
das
out
std
retf
or
iret
(bad)
int
mov
inc
not
arpl
inc
add
adc
add
shl
jecxz
bnd
jnp
mov
je
bound
inc
jns
jl
and
adc
outs
ret
loop
shl
ret
xchg
mov
inc
jb
mov
xlat
xor
and
(bad)
xor
ret
repnz
loop
repz
xchg
mov
inc
jb
arpl
jae
add
adc
pop
adc
add
push
loope
shl
jle
jg
mov
inc
jb
xchg
sahf
pop
bound
xor
and
sub
add
repnz
out
shl
mov
movs
xchg
mov
retf
loope
(bad)
retf
xor
out
hlt
repz
ret
loop
shl
ret
xchg
mov
inc
jb
bound
inc
pop
xor
and
jle
add
repnz
imul
ret
xchg
mov
inc
jb
bound
into
adc
and
and
ret
repnz
loope
repz
xchg
mov
inc
jb
sbb
jae
(bad)
xor
and
mov
add
bnd
shl
aaa
dec
arpl
inc
dec
bound
jb
bound
jno
add
sub
adc
add
shl
mov
inc
jb
dec
arpl
jmp
and
popf
add
and
inc
and
in
cmp
(bad)
arpl
and
bound
fsub
mov
ins
cli
ins
cmp
test
int3
ja
add
cmp
jg
rcl
movs
mov
and
xchg
test
shl
inc
push
aaa
in
mov
mov
push
and
push
xor
repnz
xor
inc
jbe
inc
push
push
jbe
pushf
movs
xchg
xlat
cli
(bad)
mov
out
sbb
pop
sub
xor
inc
inc
push
jbe
xchg
shr
stc
sar
(bad)
ret
out
inc
add
bound
cmp
jo
inc
outs
test
mov
cmc
out
(bad)
mul
(bad)
cmp
cmp
pop
bound
jg
push
jae
jo
xor
xchg
int3
(bad)
mov
lock
push
jae
push
je
inc
push
xor
xchg
pop
ror
hlt
sti
aam
sub
daa
adc
add
pop
inc
adc
mov
mov
lods
(bad)
(bad)
(bad)
repz
and
pop
add
sub
add
push
push
pop
fs
and
rcl
out
loope
push
aaa
xor
adc
jg
inc
jg
xor
rcr
test
daa
and
and
adc
ja
inc
pusha
pop
arpl
xchg
cmps
mov
iret
aad
ret
cmp
xor
dec
push
jl
jbe
popf
xchg
mov
in
loopne
shl
adc
xor
ss
add
push
or
xor
and
shl
add
xor
adc
jb
jbe
data16
jae
xor
mov
shl
cmp
add
add
jge
push
push
pop
inc
or
(bad)
xchg
in
xor
xor
xor
and
cmp
push
jb
arpl
xor
int
or
sar
pushf
sti
aam
xor
xor
jbe
sbb
jp
inc
popa
jae
icebp
mov
adc
div
xchg
jb
aam
xor
xor
ins
push
jge
sub
xchg
(bad)
xchg
in
xor
jb
daa
cmp
xor
jb
sbb
adc
mov
shl
rcl
icebp
mov
and
xor
adc
dec
ja
xchg
cmps
mov
in
loopne
shl
and
adc
push
inc
pusha
pop
arpl
xchg
and
rcl
aam
add
adc
pop
cs
push
inc
and
arpl
xchg
xchg
mov
iret
rcl
ret
daa
and
add
add
bound
ja
xchg
cmps
mov
mov
(bad)
popf
retf
loopne
pop
xor
pop
ds
add
jb
push
jbe
jae
lods
sub
and
aas
ret
shl
cmp
and
je
pop
jb
push
push
add
out
mov
and
out
shl
aaa
xor
adc
jno
inc
inc
arpl
jo
fwait
mov
xchg
sar
in
hlt
mov
push
and
bound
xor
pushf
mov
xor
xlat
out
add
add
xor
push
addr16
arpl
xor
mov
movs
mov
not
in
out
lock
and
cmp
dec
sbb
out
jecxz
mov
mov
mov
adc
adc
inc
jg
push
jl
inc
imul
xchg
dec
(bad)
mov
idiv
pop
pop
pop
add
add
jl
ja
inc
mov
mov
ret
int3
push
mov
jb
cmp
pop
pop
sbb
push
jae
jbe
popf
mov
mov
loopne
int3
cld
pushf
(bad)
xlat
ins
sbb
or
add
adc
and
xor
ret
repnz
jecxz
repz
xchg
mov
inc
jb
bound
jae
add
adc
and
xor
ret
repnz
jecxz
repz
xchg
mov
inc
scas
mov
xchg
mov
xchg
pop
or
adc
mov
mov
cld
or
push
sbb
mov
push
jae
xchg
bound
push
xor
pop
adc
dec
xchg
mov
mov
stos
pop
data16
loop
(bad)
push
clts
inc
push
cmps
(bad)
mov
or
ss
jle
mov
(bad)
cli
lahf
mov
and
push
xor
outs
inc
jnp
push
pusha
inc
add
xchg
lods
loopne
lock
enter
sub
aaa
sbb
inc
jbe
inc
popa
pop
add
cmps
nop
mov
shl
xlat
loopne
add
add
xor
sbb
inc
popa
pop
imul
and
loope
icebp
and
bound
daa
add
jp
pusha
inc
inc
pop
jno
repnz
ret
loope
out
(bad)
in
sub
xor
push
cmp
pusha
jb
jle
adc
inc
mov
xchg
loop
repnz
xchg
(bad)
(bad)
sti
xchg
out
add
daa
adc
xor
adc
adc
xchg
repnz
movs
out
xchg
loope
retf
loopne
mov
or
pop
adc
jo
jbe
ret
mov
xchg
mov
and
xchg
jmp
push
dec
call
(bad)
out
mov
fwait
into
sti
ror
sub
push
adc
adc
ret
stos
push
cmps
fwait
xlat
repnz
mov
inc
mov
inc
xchg
cmp
fwait
mov
(bad)
out
dec
aaa
adc
push
jae
jo
adc
inc
jp
sahf
cmc
xchg
mov
jmp
add
add
pop
sbb
push
xor
in
mov
lods
out
mov
test
ret
in
aaa
aaa
xor
inc
aaa
adc
push
pusha
inc
add
inc
arpl
mov
test
neg
out
sbb
pop
ss
adc
add
adc
add
test
sar
mov
add
push
push
ins
push
addr16
ja
add
xchg
mov
xchg
hlt
mov
push
cmp
aaa
cmp
ss
jle
dec
adc
stc
scas
mov
jecxz
repz
mov
(bad)
rcl
push
and
and
add
push
inc
pusha
popa
popa
cmps
xchg
lods
out
xchg
test
inc
not
and
or
or
jae
jge
push
jge
jb
pushf
mov
stos
out
cli
retf
int3
out
sub
daa
adc
jl
daa
data16
and
inc
jo
fwait
mov
ret
in
in
xchg
add
pop
pop
adc
sbb
inc
jbe
pop
add
cdq
mov
xchg
xor
bound
push
or
adc
fimul
xor
jnp
xchg
push
push
ror
aaa
bound
test
dec
outs
(bad)
cmp
sahf
(bad)
mov
and
jae
(bad)
rcl
xchg
retf
inc
es
mov
aas
xor
mov
pop
(bad)
adc
imul
scas
jle
outs
mov
(bad)
out
ror
xchg
(bad)
das
xor
add
push
inc
jb
dec
popa
pop
push
mov
in
mov
shr
sub
cmp
getsec
add
inc
push
add
xor
loope
mov
lea
loope
kmovw
adc
push
inc
xor
push
jbe
inc
adc
movs
mov
xchg
repz
push
aas
push
pop
cmp
inc
push
xor
jno
popa
lods
cmp
mov
out
div
out
xor
adc
and
pusha
inc
popa
dec
dec
jnp
add
xchg
(bad)
repz
mul
push
push
pop
add
jo
push
jbe
dec
and
das
jecxz
repz
ret
repnz
rcr
(bad)
lea
xor
pop
jb
mov
(bad)
mov
xchg
sub
scas
push
jb
push
and
rep
repz
xchg
mov
mov
xchg
out
fimul
outs
sti
retf
sbb
sbb
pop
jge
dec
popa
inc
mov
repz
neg
lock
neg
rcl
jl
jno
jne
dec
push
and
lods
mov
xchg
retf
loope
div
rol
adc
adc
jno
jo
repnz
mov
enter
sub
pop
push
arpl
pop
xor
jg
inc
push
push
arpl
mov
cli
retf
iret
xchg
fld
arpl
cmp
jl
inc
jle
add
mov
out
fsub
shl
and
and
pusha
dec
dec
inc
jbe
call
shl
mov
add
adc
and
jno
xor
jno
push
lods
movs
loope
mov
lock
std
mov
inc
adc
add
jno
push
pop
and
mov
cld
nop
cmp
in
adc
or
pop
jb
inc
popa
pop
jge
push
xor
mov
repz
jecxz
xchg
mov
(bad)
ret
shl
push
pop
cmp
ja
pushaw
inc
data16
popf
cmps
xchg
xor
ret
mov
xor
xor
and
inc
jnp
ss
pushf
test
in
sar
shl
ss
xor
add
gs
push
pop
push
nop
xchg
mov
mov
shl
retf
shr
pop
sub
dec
inc
pop
and
cmps
shl
(bad)
loopne
mov
pop
cmp
jl
add
jbe
xchg
mov
lods
lock
adc
add
push
add
inc
and
ins
mov
mov
loop
shl
aaa
daa
and
adc
gs
and
lods
and
ror
test
adc
jae
jo
xor
dec
popa
inc
push
lods
mov
pushf
cmc
in
shl
xchg
cld
rcl
and
push
xor
and
pop
inc
sub
xchg
and
adc
les
sbb
and
push
and
sub
xchg
out
shl
aaa
adc
or
pop
add
dec
dec
cmp
and
xchg
mov
mov
int
inc
add
jne
push
pusha
dec
outs
pushf
xchg
mov
popf
in
std
std
(bad)
cld
shr
sub
sub
ins
pop
jno
push
imul
mov
ret
int3
retf
cld
mov
aas
pop
inc
push
(bad)
ja
dec
push
and
xchg
rol
push
dec
jb
push
cmp
(bad)
(bad)
jnp
pop
(bad)
xchg
(bad)
adc
sahf
or
daa
cmps
aaa
inc
das
sahf
addr16
and
ucomiss
jp
inc
push
or
dec
arpl
jle
and
push
pop
inc
(bad)
mov
cli
out
jae
pop
bound
ss
aaa
imul
test
mov
addr16
push
daa
push
pop
scas
ja
mov
fidivr
push
fild
push
ror
cmp
pop
adc
adc
jp
lods
popf
cmps
xchg
int
repz
in
stos
xchg
repnz
xchg
fucomip
sub
and
aaa
sbb
add
inc
dec
and
fs
xchg
xchg
mov
les
imul
jb
push
or
jae
add
adc
and
xor
ret
repnz
jecxz
repz
xchg
mov
inc
jb
bound
jae
add
adc
and
xor
ret
repnz
jecxz
repz
xchg
mov
inc
jae
add
loop
mov
and
sbb
ret
mov
xchg
imul
cmp
pop
add
bound
jae
add
sub
and
add
ror
mov
inc
jb
aad
or
add
adc
adc
jo
pusha
shl
jecxz
repz
lahf
cli
add
das
add
jge
ins
jae
push
dec
jno
add
mov
repnz
std
shl
pop
aas
dec
ins
ins
sbb
adc
mov
and
pushf
mov
mov
daa
sbb
jae
or
dec
push
xor
(bad)
icebp
stos
stos
mov
jecxz
(bad)
out
jmp
and
and
inc
or
push
jbe
xor
shl
out
xchg
jmp
pop
popa
adc
pop
icebp
cld
and
jns
dec
jo
sub
ja
add
pop
test
mov
mov
mov
jge
call
imul
bound
mov
cmp
(bad)
gs
scas
push
sbb
and
add
shl
or
pop
ins
dec
jge
movs
in
pushf
lods
std
enter
frstor
mov
je
or
or
or
dec
add
cmp
mov
jno
fstp
sbb
inc
(bad)
or
cld
cmp
test
mov
adc
pusha
fcmovb
pop
fsubr
inc
rcl
sub
pop
dec
ins
dec
or
jae
outs
push
adc
sub
repz
(bad)
mov
inc
jb
mov
sub
ins
add
mov
cmc
das
mov
loop
out
or
xor
cmp
pop
arpl
mov
and
mov
cmps
popf
repz
loopne
lods
xchg
mov
add
jno
xor
adc
stos
cmp
mov
cmps
xor
out
sub
add
aaa
jae
nop
aaa
push
inc
and
daa
std
ret
loop
sbb
mov
cmps
mov
inc
jb
bound
push
daa
add
inc
and
fsub
xchg
mov
nop
xor
lock
jb
popf
or
bound
add
ret
(bad)
and
xor
out
xor
inc
pop
jbe
and
stc
add
xchg
scas
out
mov
ins
into
inc
out
jb
scas
pushf
cmp
ss
push
xor
adc
add
xchg
mov
mov
mov
xchg
ins
fld
inc
aas
add
ins
pop
jge
inc
jnp
fs
shl
jmp
icebp
mul
daa
push
cmp
add
and
addr16
sbb
adc
cmps
sahf
jmp
cmps
mov
lods
mov
push
xor
ins
ins
inc
push
pop
and
and
xchg
mov
(bad)
mov
or
adc
push
arpl
mov
in
mov
shl
mov
pop
ss
adc
pop
cmp
ds
pop
inc
dec
neg
out
aad
xchg
mov
aam
fwait
nop
repz
push
arpl
xor
aaa
dec
pop
sub
fs
arpl
mov
int3
adc
inc
jb
sub
mov
inc
push
xor
repz
xor
nop
ja
inc
dec
push
arpl
xor
add
xchg
add
cmps
fist
and
push
arpl
daa
jb
arpl
inc
shl
xchg
or
or
lods
mov
mov
adc
xlat
cmp
arpl
arpl
xlat
mov
push
xchg
push
pop
jb
dec
jnp
and
push
push
ins
add
adc
pop
jb
mov
mov
imul
ret
das
inc
jl
sub
and
xor
bnd
cmp
mov
push
outs
inc
push
cmp
add
cs
adc
jecxz
fiadd
mov
adc
mov
outs
cmp
rcl
sbb
push
outs
cld
and
outs
add
jnp
or
add
in
or
push
and
inc
addr16
dec
ret
jge
add
add
adc
sub
mov
pop
pop
push
dec
and
ret
jb
push
jecxz
xchg
mov
(bad)
sti
xlat
jmp
fcomi
retf
pop
cmp
sub
sbb
or
push
imul
dec
xchg
mov
(bad)
sti
xlat
jmp
fcomi
retf
pop
cmp
sub
sbb
or
push
imul
dec
xchg
mov
(bad)
sti
xlat
jmp
fcomi
retf
pop
cmp
sub
sbb
or
push
imul
dec
xchg
mov
(bad)
sti
xlat
jmp
fcomi
retf
pop
cmp
sub
sbb
or
push
imul
dec
xchg
mov
(bad)
sti
xlat
jmp
fcomi
retf
pop
cmp
sub
sbb
or
push
imul
dec
xchg
mov
(bad)
sti
xlat
jmp
fcomi
retf
pop
cmp
sub
sbb
or
push
imul
dec
xchg
mov
(bad)
sti
xlat
jmp
fcomi
retf
pop
cmp
sub
sbb
or
push
imul
dec
xchg
mov
(bad)
sti
xlat
jmp
fcomi
retf
pop
cmp
sub
sbb
or
push
imul
dec
xchg
mov
(bad)
sti
xlat
jmp
fcomi
retf
pop
cmp
sub
sbb
or
push
imul
dec
xchg
mov
(bad)
sti
xlat
jmp
fcomi
retf
pop
cmp
sub
sbb
or
push
imul
dec
xchg
mov
(bad)
sti
xlat
jmp
fcomi
retf
pop
cmp
sub
sbb
or
push
imul
dec
xchg
mov
(bad)
sti
xlat
jmp
fcomi
retf
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
scas
dec
xor
lea
cdq
dec
stc
mov
movs
fsubr
retf
mov
mov
xchg
call
lahf
jmp
nop
nop
mov
push
push
mov
mov
mov
xor
repz
je
mov
mov
mov
xor
repz
je
mov
push
mov
call
pop
mov
pop
ret
mov
mov
pop
pop
mov
xor
ret
nop
ins
sahf
jge
dec
mov
pop
mov
shl
shl
add
adc
jle
outs
bound
scas
sub
(bad)
sbb
push
int
(bad)
lods
pop
mov
outs
ins
sahf
jge
dec
mov
cmp
out
in
push
std
push
int
(bad)
lods
pop
mov
outs
ins
sahf
jge
dec
mov
cmp
out
in
push
std
push
int
(bad)
lods
pop
mov
outs
ins
sahf
jge
dec
mov
cmp
out
in
push
std
push
int
(bad)
lods
pop
mov
outs
ins
sahf
jge
dec
mov
cmp
out
in
push
std
push
int
(bad)
lods
pop
mov
outs
ins
sahf
jge
dec
mov
cmp
out
in
push
std
push
int
(bad)
lods
pop
mov
outs
ins
sahf
jge
dec
mov
cmp
out
in
push
std
push
int
(bad)
lods
pop
mov
outs
ins
sahf
jge
dec
mov
cmp
out
in
push
std
push
int
(bad)
lods
pop
mov
outs
ins
sahf
jge
dec
mov
cmp
out
in
push
std
push
int
(bad)
lods
pop
mov
outs
ins
sahf
jge
dec
mov
cmp
out
in
push
std
push
int
(bad)
lods
pop
mov
outs
ins
sahf
jge
dec
mov
cmp
out
in
push
std
push
int
(bad)
lods
pop
mov
outs
ins
sahf
jge
dec
mov
cmp
out
in
push
std
push
int
(bad)
lods
pop
mov
outs
ins
sahf
jge
dec
mov
cmp
out
in
push
std
push
int
(bad)
lods
pop
mov
outs
ins
sahf
jge
dec
mov
cmp
out
in
push
std
push
int
(bad)
lods
pop
mov
outs
ins
sahf
jge
dec
mov
cmp
out
in
push
std
push
int
(bad)
lods
pop
mov
outs
push
adc
add
(bad)
icebp
sub
jo
in
push
pop
and
xchg
call
out
xor
dec
fadd
push
jnp
pop
not
dec
aam
scas
js
mov
dec
ds
mov
je
loop
cmp
mov
mov
scas
inc
sbb
adc
fsubr
scas
push
or
and
mov
pop
cmp
sar
push
jae
or
loope
adc
je
iret
imul
or
repz
jecxz
adc
inc
xor
inc
sbb
mov
arpl
sub
rol
mov
jmp
stos
sub
clc
push
int
cwde
sub
pop
mov
shl
mov
inc
pop
push
push
neg
addr16
fwait
std
push
xor
add
push
rol
dec
cmp
outs
sub
jge
dec
mov
scas
jnp
push
lahf
push
(bad)
not
inc
lea
popf
push
adc
jno
out
es
jg
dec
jae
mov
sahf
push
inc
or
repz
test
ret
idiv
rcl
outs
aad
repnz
dec
adc
fadd
cmp
sar
shr
xchg
ins
jp
dec
jl
sbb
repnz
loop
mov
add
mov
mov
aam
jne
loopne
cs
dec
cmp
popf
sbb
add
dec
dec
xor
jle
and
pop
xchg
retf
les
adc
fistp
stos
adc
inc
mov
cs
lods
jnp
add
jne
dec
rcl
mov
inc
or
cs
sbb
jle
jecxz
(bad)
dec
rol
mov
cmp
cmp
mov
jb
pop
in
shl
pushf
ss
ret
pop
cld
mov
into
popf
outs
inc
out
mov
mov
cs
pop
aas
dec
fnstsw
add
stc
(bad)
pop
mov
int
and
jmp
out
mov
jmp
out
scas
neg
push
cmp
sbb
push
mov
sbb
mov
nop
lods
adc
jno
out
(bad)
push
sub
mov
cmp
xchg
fisub
mov
push
mov
mov
stc
sti
mov
push
xchg
sbb
test
mov
loopne
cmp
mov
sub
mov
sub
jnp
in
adc
push
add
out
sbb
push
test
sub
sti
jle
call
clc
xchg
mov
dec
outs
sbb
dec
lea
int3
mov
mov
xor
loop
in
ins
lods
inc
int
enter
inc
jle
push
dec
sti
mov
inc
retf
pop
pusha
popf
retf
cmp
movs
daa
wrmsr
ret
jno
pop
xchg
mov
mov
jo
stc
(bad)
imul
mov
xor
ins
adc
dec
mov
jg
mov
cwde
call
test
mov
or
neg
mov
mov
cmp
mov
and
mov
rcr
mov
outs
and
mov
into
cmp
mov
xor
test
lahf
inc
xchg
add
jnp
or
js
mov
push
lods
adc
xchg
icebp
xor
mov
out
add
dec
jb
fdivr
dec
push
movs
xchg
in
pop
repz
stc
dec
(bad)
mov
cs
sar
cmp
xchg
mov
sti
mov
sub
xor
dec
sahf
sub
daa
sbb
and
add
add
jnp
dec
mov
ds
bound
or
mov
sub
or
pop
jecxz
pushf
cmp
dec
test
jbe
mov
inc
dec
jno
cmc
xchg
int
xchg
or
lods
mov
cmp
sti
xchg
loope
ror
jl
out
call
mov
xchg
cdq
sahf
out
dec
cmp
sahf
or
imul
mov
sar
lock
outs
sub
or
icebp
dec
dec
out
loopne
std
pop
mov
mov
dec
xchg
ins
bound
aam
sbb
mov
ja
test
add
pop
inc
test
sub
adc
js
mov
fld
jne
xchg
scas
fdivr
icebp
dec
inc
and
lods
(bad)
fs
sti
mov
inc
icebp
jae
scas
in
fild
ror
jnp
imul
mov
jg
xor
out
and
mov
fidivr
add
add
xchg
out
out
mov
mov
frstor
loope
scas
xor
push
dec
fld
mov
and
mov
cmp
shl
ins
outs
in
ret
cwde
repz
fadd
and
ret
jmp
mov
fwait
jbe
and
sbb
push
cli
(bad)
in
adc
jle
dec
les
xchg
xchg
jmp
xchg
scas
xchg
add
outs
ror
pop
mov
jecxz
mov
xor
sbb
mov
xor
adc
push
shr
outs
test
xor
jae
inc
into
push
out
fstp
mov
jns
aad
fs
jl
jge
adc
or
sub
ds
jo
jbe
add
dec
aad
shl
(bad)
dec
ror
pop
and
pop
or
mov
push
bswap
clc
ins
pusha
lods
adc
sub
sahf
or
in
into
and
push
jbe
jge
lahf
and
jmp
xor
scas
push
call
aaa
(bad)
push
rcr
dec
int
scas
(bad)
mov
jmp
popa
ds
(bad)
xchg
int
popf
fwait
lods
in
out
adc
in
sbb
sbb
mov
jle
gs
sbb
into
cmp
and
fidiv
int3
sub
(bad)
push
sar
shr
jecxz
adc
mov
(bad)
(bad)
(bad)
mov
and
jb
neg
rcl
aaa
(bad)
iret
cs
out
mov
out
rcr
cmp
adc
sbb
std
pop
test
(bad)
retf
loopne
jge
dec
inc
aaa
lods
xchg
cmp
addr16
cld
dec
mov
and
or
and
add
adc
pop
jmp
push
sahf
push
adc
add
int3
ret
push
mov
dec
push
cmc
shr
sub
mov
mov
mov
jle
mov
sahf
ins
cmps
enter
loop
mov
aas
nop
mov
mov
mov
jle
scas
xor
sub
cmp
adc
inc
jns
xor
dec
jno
lahf
push
outs
fs
dec
pop
push
and
aas
sahf
test
push
loope
inc
jp
cmps
lods
mov
shr
adc
pop
stos
dec
sbb
and
jmp
arpl
pop
aam
(bad)
out
lahf
rcr
outs
retf
sahf
data16
pop
and
int3
mov
std
cld
xor
pop
shl
dec
dec
inc
in
mov
inc
lods
add
lea
aad
imul
jmp
pusha
mov
or
sub
xchg
add
jno
out
push
dec
push
pop
adc
sub
icebp
faddp
xor
mov
iret
jae
fist
mov
jle
xor
inc
or
sub
add
dec
mov
pop
test
(bad)
retf
call
mov
cld
adc
stos
(bad)
fcom
arpl
std
push
sub
ret
dec
cld
mov
rcr
test
jne
xor
enter
daa
push
dec
or
ins
stos
fadd
scas
outs
push
cld
mov
repnz
cmp
and
(bad)
xchg
ds
jbe
adc
paddsb
loope
into
icebp
jge
jmp
sbb
jno
call
sbb
loopne
adc
pushf
dec
xor
adc
and
dec
push
dec
push
push
cdq
sbb
mov
inc
cmp
icebp
fcom
ficom
test
test
push
out
or
enter
pop
pop
std
pandn
add
fnsave
and
mov
mov
clc
mov
out
scas
jmp
arpl
hlt
jnp
imul
movs
pop
int
call
cmp
jmp
jg
jecxz
fwait
pusha
mov
in
inc
cs
clc
adc
xor
and
inc
jno
xchg
gs
(bad)
shl
nop
(bad)
ss
(bad)
imul
mov
jle
pop
jecxz
fidiv
xchg
inc
lods
sub
jmp
fdiv
pop
sbb
pop
mov
cmp
dec
add
push
push
out
or
and
ds
fwait
push
push
lds
inc
(bad)
lea
jmp
ffree
jno
test
or
pop
adc
push
cmc
push
and
pop
mov
(bad)
popf
sahf
cmp
xor
mov
cmc
mov
sbb
push
movs
lods
push
mov
test
sbb
rol
outs
cmps
sar
les
add
(bad)
sahf
pushf
mov
outs
xchg
call
pusha
and
dec
mov
std
dec
push
dec
pop
stos
es
(bad)
shl
shr
xor
outs
adc
xlat
les
xor
ss
add
gs
and
retf
and
ficomp
jmp
fwait
movs
test
mov
mov
and
or
dec
add
xchg
ss
not
outs
xor
jge
test
lahf
fstp
xor
(bad)
pushw
mov
xchg
push
push
out
pushf
mov
and
mov
div
pop
inc
jo
push
gs
dec
out
int
inc
ret
or
push
mov
mov
jnp
add
loope
push
xor
push
imul
int
jb
cmp
in
(bad)
outs
sub
ja
gs
stc
test
pop
mov
mov
out
xchg
mov
push
mov
(bad)
sbb
dec
push
lods
es
dec
popf
xchg
push
in
push
or
cld
sbb
mov
dec
mov
ds
mov
and
jne
pop
aaa
in
fst
cmp
loop
xlat
pop
xchg
shl
fld
lea
outs
test
mov
jmp
cmp
sbb
out
and
fisubr
into
and
scas
mov
adc
push
mov
cmp
inc
inc
frstor
jno
pop
in
adc
(bad)
pop
sub
aas
or
pop
fdivr
dec
or
neg
ins
xchg
xor
dec
push
pop
scas
sub
dec
addr16
or
push
es
test
jb
adc
push
in
inc
dec
and
mov
jne
std
ds
out
and
into
jecxz
bound
inc
pop
xor
mov
or
fucomip
sbb
sbb
or
imul
das
int
int3
or
xlat
sti
imul
or
push
call
jmp
dec
jg
in
sahf
aas
fdiv
data16
icebp
aas
fld
ds
cs
jle
ins
das
fstp
into
inc
test
(bad)
(bad)
sbb
bnd
push
pop
sub
lds
ret
and
(bad)
retf
pop
mov
aam
hlt
adc
and
movs
mov
jne
imul
sub
fld
sbb
dec
cld
jnp
cmp
sub
push
push
clc
inc
shr
call
push
in
dec
add
addr16
push
add
sub
or
mov
lds
sbb
sbb
push
enter
ds
jle
xchg
adc
pop
mov
fidivr
dec
inc
loope
mov
cld
ror
mov
mov
fist
sahf
jl
dec
xor
iret
add
sbb
in
xchg
aad
jge
das
loopne
mov
dec
sahf
pop
push
pop
push
sub
(bad)
out
and
mov
jb
pop
xor
ins
bound
jp
cmp
adc
jae
outs
outs
mov
fninit
lds
shr
shl
adc
xchg
ret
mov
xor
arpl
xor
push
mov
inc
repnz
jnp
js
outs
inc
cmp
(bad)
std
cmp
aam
mov
(bad)
enter
jns
sbb
dec
cmps
dec
or
bound
dec
add
repz
(bad)
or
push
mov
mov
sar
inc
mov
cmp
sti
data16
imul
adc
popf
test
jp
int3
or
cdq
into
retf
adc
stos
clc
stos
arpl
xchg
push
mov
adc
xor
fmul
pop
push
mov
shl
mov
std
cmp
loopne
clc
stos
mov
mov
push
cmp
out
mov
mov
mov
fdiv
adc
ins
jbe
add
cmp
adc
enter
call
jno
sub
jg
outs
cmp
inc
sar
retf
mov
std
enter
and
ret
enter
ins
xchg
retf
ficomp
fisub
dec
lea
jo
int
push
mov
lea
jge
test
xchg
cmp
arpl
cmp
xor
pop
sub
dec
jb
movs
outs
stos
sahf
mov
push
in
dec
jo
retf
mov
xchg
std
icebp
or
sbb
call
js
jnp
shl
mov
icebp
mov
mov
shl
or
cmp
cmps
pop
enter
push
rcl
(bad)
push
int
inc
sahf
adc
std
pop
xchg
mov
shl
sub
mov
scas
sub
ficomp
push
xor
imul
push
test
sti
pushf
jecxz
and
out
add
or
xor
sub
test
dec
jecxz
fidivr
lods
and
mov
jnp
inc
ficomp
mov
pop
test
shl
inc
mov
test
imul
or
stc
fsubr
adc
dec
mov
sub
dec
jmp
out
clc
xchg
xor
out
(bad)
movs
arpl
pop
add
popf
stos
loopne
add
rcl
test
adc
inc
pop
xor
dec
cmp
std
ret
cmp
popf
retf
inc
push
js
in
inc
mov
in
jae
push
arpl
xchg
call
jle
sti
adc
jo
pop
xchg
or
xchg
add
(bad)
cmp
dec
neg
and
stos
jge
pop
pop
adc
mov
(bad)
nop
and
imul
mov
sbb
ins
adc
jecxz
cli
mov
fwait
mov
push
inc
psllw
loope
cli
sbb
xor
xlat
dec
rcr
jecxz
fstp
std
inc
fnstenv
icebp
jae
mov
mov
and
cmp
jb
stc
jecxz
or
inc
rcr
mov
or
sbb
push
jmp
adc
jle
mov
fld
jecxz
pusha
jo
leave
mov
mov
mov
xor
or
and
cmp
leave
and
(bad)
xchg
sti
mov
(bad)
push
sbb
imul
sub
pop
data16
fild
pop
arpl
cmp
jae
jbe
dec
lock
repz
test
mov
inc
fcom
nop
fcomi
push
xor
sahf
call
dec
xchg
movs
mov
rcl
mov
inc
out
test
cmp
(bad)
and
cs
jmp
xchg
adc
scas
sub
jmp
enter
out
ds
shr
(bad)
xlat
mov
mov
jge
mov
hlt
shl
cmp
jecxz
loope
icebp
or
fucomp
lods
pop
in
or
out
or
push
sbb
fdiv
mov
retf
push
cmp
and
clc
lahf
call
jb
jne
leave
sahf
cmp
shl
push
sbb
adc
rcr
mov
and
jge
mov
pop
push
rol
mov
scas
dec
jge
and
mov
fadd
test
mov
into
(bad)
sbb
add
imul
test
add
sti
rcl
push
ret
xlat
loop
mov
stos
pop
mov
cwde
call
jb
cld
outs
stos
sar
mov
dec
and
mov
loop
es
out
jge
ret
cmp
or
mov
sbb
dec
pop
and
ins
outs
in
ret
jno
popa
jecxz
adc
mov
mov
rcl
xor
pop
out
test
add
movs
mov
lds
fdivr
push
popf
popf
dec
push
lea
add
xor
sbb
inc
mov
adc
xchg
push
mov
mov
loop
enter
cmp
inc
sbb
cmp
ins
sahf
jge
push
mov
ins
es
jecxz
cmp
clc
push
and
or
int
mov
cmp
imul
cwde
shr
mov
sbb
scas
jmp
popa
xor
add
arpl
mov
imul
call
or
mov
cmp
jecxz
loope
enter
imul
inc
push
into
or
cmp
xor
(bad)
cmp
out
in
pop
mov
inc
sub
shr
cs
ins
sahf
cmp
dec
xor
rcr
aad
or
div
add
push
lock
aaa
fsub
bound
jbe
push
xlat
scas
cmps
(bad)
int3
enter
sub
cld
inc
ror
and
imul
out
mov
scas
jmp
mov
sub
push
ja
or
fsub
aam
mov
stos
xor
push
cwde
ret
dec
out
pop
je
mov
std
jmp
stos
sahf
xchg
push
inc
mov
xor
adc
and
leave
popf
or
add
xchg
leave
cmp
xor
je
inc
mov
push
mov
lea
into
add
sar
jb
jecxz
scas
jo
jnp
or
div
mov
stos
and
jmp
add
pop
outs
imul
cmp
test
push
mov
cs
cli
jl
jb
pop
outs
das
jb
cli
dec
fisttp
sahf
add
sub
test
dec
std
xor
mov
push
push
(bad)
ret
push
leave
stos
outs
push
mov
mov
shl
cmp
xchg
sub
add
push
daa
cmp
dec
pop
cli
sbb
inc
adc
sbb
(bad)
mov
ret
lea
jne
dec
sahf
jnp
mov
sbb
dec
dec
test
std
repnz
jnp
call
fnstsw
pop
imul
push
sbb
fsub
xchg
inc
setle
lock
idiv
xchg
cmp
cmp
dec
cld
adc
pusha
and
push
scas
xchg
std
pop
and
mov
inc
clc
cmp
sub
aas
jno
inc
in
push
mov
xchg
jae
mov
sar
sbb
outs
das
adc
je
imul
push
jbe
js
mov
and
(bad)
lea
jo
cmp
push
lods
cmps
scas
inc
or
sub
push
mov
pusha
jmp
ds
xchg
dec
mov
js
sbb
dec
mov
popf
and
mov
imul
ja
jns
sti
jge
push
add
mov
fwait
adc
inc
push
in
push
std
rol
loopne
adc
push
or
jmp
adc
push
popa
push
nop
(bad)
and
repz
mov
jb
push
out
ret
mov
dec
retf
push
daa
movs
push
lds
ja
adc
xchg
test
xor
cs
gs
lds
mov
repz
xchg
imul
nop
cmc
(bad)
push
aad
fistp
imul
push
rcr
mov
jge
jmp
push
xor
xchg
jmp
add
lea
ss
popf
std
repz
popa
(bad)
mov
test
dec
dec
aaa
icebp
dec
stos
in
pop
inc
out
sbb
add
jmp
sti
mov
or
xchg
aad
dec
jne
push
data16
inc
into
cmp
popa
scas
pop
mov
mov
xchg
ins
xchg
test
and
das
fs
pop
not
mov
popf
sbb
dec
add
pop
inc
add
loope
push
or
aad
in
aad
dec
shl
push
mov
movs
shl
stos
or
cwde
xchg
std
out
dec
push
adc
fwait
cmc
loopne
mov
xor
mov
test
pop
ins
jmp
lods
pop
mov
scas
ins
adc
fisub
cmps
sbb
gs
stos
fdivr
mov
in
ds
mov
mov
and
add
(bad)
inc
cmp
pop
(bad)
into
popf
pushf
and
sub
mov
or
push
xor
fdiv
lods
pop
cmc
cmp
mov
sub
scas
sub
cmp
out
push
xchg
push
jns
pop
pop
mov
or
fwait
sahf
and
pop
(bad)
iret
jne
sahf
out
adc
ds
(bad)
mov
lea
outs
xchg
xchg
xchg
call
adc
mov
(bad)
xor
jge
gs
pop
(bad)
cmp
out
test
stos
ret
test
cld
xor
mov
cmps
lods
sub
mov
sub
jge
lds
cmp
jbe
jbe
fwait
dec
fstp
pop
mov
lods
sub
lea
shr
xchg
sbb
xor
lds
lock
xchg
adc
pop
jmp
and
inc
test
mov
lods
idiv
xchg
jge
pusha
push
int
mov
xchg
mov
mov
adc
or
(bad)
nop
mov
xor
(bad)
in
ret
xchg
push
sub
(bad)
(bad)
in
xchg
xor
aad
mov
mov
xchg
loopne
xchg
jno
mov
pop
push
rol
push
adc
push
xlat
lock
out
shr
dec
repz
xor
sbb
lea
xchg
xor
dec
sar
jmp
ds
in
mul
nop
jl
ins
lods
pop
gs
jle
loop
into
gs
dec
js
and
mov
mov
imul
mov
and
mov
repz
push
in
mov
cmc
lea
int3
mov
ins
sahf
xchg
retf
push
mov
xor
xchg
in
loope
sbb
(bad)
cmps
xchg
push
mov
mov
mov
sub
daa
ds
out
in
pop
std
icebp
and
mov
popf
add
mov
and
mov
add
fdivr
movs
sub
popa
das
aas
xchg
push
add
cmp
add
std
push
int
fucom
cmps
mov
popf
data16
jne
dec
out
mov
cs
xor
adc
call
out
pop
pop
jmp
xchg
jge
add
adc
adc
std
add
ins
add
add
xor
daa
mov
mov
into
xor
lods
shl
sbb
cmp
jbe
jle
call
jg
pop
and
mov
rol
in
or
xor
fimul
data16
sub
ins
into
mov
sbb
fmul
jno
mov
push
cs
cmps
push
sbb
dec
inc
mov
xchg
sbb
dec
xor
lods
(bad)
dec
aad
ror
adc
adc
popf
xchg
dec
gs
cs
es
lock
fdivr
add
repnz
(bad)
sbb
test
nop
call
ss
add
repz
or
fidivr
mov
fidivr
adc
sahf
fcomp
scas
dec
and
int
lods
arpl
jle
push
out
movs
jecxz
or
push
loopne
jge
xor
inc
sub
mov
aad
xchg
std
stos
mov
test
or
cmp
sbb
jge
push
mov
call
pop
(bad)
xchg
dec
dec
or
mov
mov
jp
fcmovne
dec
movs
cmp
dec
imul
icebp
out
in
xchg
mov
scas
pop
sti
push
sar
jbe
aaa
or
rcl
sbb
jbe
sar
jo
ss
in
in
xor
cmp
shr
dec
jne
jmp
cmps
mov
enter
pop
jb
xchg
xchg
sti
dec
xor
ror
cmp
mov
je
lds
xchg
adc
dec
les
mov
pop
inc
jmp
cwde
daa
xor
xchg
addr16
push
adc
leave
fnstcw
inc
cwde
xor
add
jno
and
clc
sti
hlt
and
sub
mov
push
cmps
repz
(bad)
scas
call
mov
jbe
sub
mov
and
inc
bound
sbb
loopne
jno
or
(bad)
jmp
(bad)
cmp
gs
pop
pop
pusha
int
and
pop
cmp
xor
pop
inc
(bad)
jg
and
in
jne
in
sbb
sbb
xchg
in
std
jo
cdq
test
cmp
cld
mov
sbb
repnz
dec
popa
xor
pop
ficom
jmp
loop
dec
and
or
dec
lock
bound
ret
test
push
bound
or
or
(bad)
(bad)
ss
stc
sbb
adc
outs
and
hlt
stc
ins
out
pop
adc
out
xchg
mov
vaddsubpd
out
xor
and
xchg
fst
data16
jg
mov
sahf
in
xchg
lock
shl
ret
lock
xchg
sbb
add
ds
movs
ins
xchg
mov
xchg
pop
push
add
xor
jmp
es
sbb
fnsave
loopne
mov
scas
mov
xchg
das
cmp
fcom
or
aaa
sbb
aad
mov
ins
pop
or
jle
jle
cmp
out
push
add
mov
sbb
lods
sbb
(bad)
es
cmp
push
mov
cli
(bad)
and
popf
outs
ds
not
mov
cmp
inc
aas
sahf
inc
pop
pop
add
(bad)
outs
sbb
and
iret
outs
ss
pusha
add
mov
mov
push
jne
retf
shr
mov
mov
scas
cmp
or
mov
push
cs
pop
xor
dec
out
add
jae
mov
sub
mov
int
in
jb
mov
outs
cld
outs
and
sub
test
sbb
in
sub
fwait
and
lahf
jl
add
je
jp
stos
outs
push
xor
jb
push
loopne
ins
dec
movs
cmps
fldcw
lea
mul
or
and
call
imul
scas
fnsave
ret
mov
add
sti
clc
push
arpl
call
add
push
xor
cmps
jb
inc
push
pop
in
pusha
dec
std
sbb
imul
lea
or
and
(bad)
fistp
adc
mov
movs
adc
not
mov
sahf
jl
jbe
sbb
jo
into
retf
(bad)
loope
xchg
mov
cs
pop
mov
aas
sbb
mov
and
dec
aas
addr16
int
push
mov
push
jp
push
call
retf
sbb
stos
lea
sub
cmps
icebp
and
sub
test
add
jle
fisubr
ins
inc
push
ins
sahf
mov
mov
gs
in
cmps
hlt
bound
out
xor
or
vorpd
mov
popf
outs
gs
test
test
scas
stos
inc
mov
jne
xchg
xchg
push
aad
and
xlat
lock
retf
xor
sub
add
mov
adc
add
ret
clc
aad
dec
add
dec
push
adc
or
fstp
mov
push
loopne
lods
sub
movs
ds
popa
and
ds
mov
mov
jecxz
add
dec
add
xor
out
push
test
xchg
(bad)
xchg
(bad)
fwait
push
adc
imul
inc
mov
leave
rol
push
out
call
ss
mov
test
(bad)
aad
int
fldenv
mov
push
loope
sbb
daa
sub
ins
fstp
mov
fbld
gs
dec
adc
xor
cmp
or
jo
lds
sahf
lea
bound
(bad)
(bad)
sbb
push
lds
in
or
xor
mov
push
adc
movs
das
add
xchg
bswap
mov
imul
mov
and
mov
xor
sbb
in
in
xor
and
outs
mov
call
lds
jb
push
mov
add
scas
push
jne
mov
fstp
pushf
and
lock
push
shr
xor
sub
sub
fsubr
lea
popf
pmaxsw
gs
inc
and
in
xchg
add
inc
dec
test
adc
mov
adc
faddp
cmp
not
xchg
gs
rcl
cmp
push
adc
outs
cmp
dec
mov
out
and
cmp
ins
sti
cdq
add
ins
ins
ins
xor
out
stos
outs
push
mov
repnz
sbb
adc
add
or
in
cmp
xor
pop
into
or
out
adc
mov
xchg
xchg
scas
fidiv
dec
sahf
aad
or
push
ins
(bad)
sub
lfence
mov
ret
or
nop
adc
jbe
xor
and
inc
sbb
ret
outs
ins
sahf
jge
dec
xor
fs
(bad)
pop
sub
dec
pushf
adc
xor
fisubr
push
fcomp
inc
pop
js
cmc
jae
out
cs
aas
or
fs
push
mov
pop
in
leave
aas
xchg
add
mov
adc
add
or
sub
pushf
dec
inc
mov
out
bound
movs
push
pusha
inc
cmp
gs
inc
lods
pop
cmps
loop
shl
retf
mov
outs
stos
sahf
jge
cdq
js
push
pusha
and
into
xchg
sbb
inc
or
jae
call
sub
mov
scas
cmp
push
ins
lds
dec
fwait
rcl
stos
push
xlat
dec
iret
neg
jb
mov
repz
pushf
retf
pop
gs
adc
jge
gs
pop
fcomp
cmp
jb
dec
sar
mov
sub
std
inc
inc
fcmovu
mov
add
xchg
loope
or
pushf
xor
sub
push
mov
mov
jge
push
dec
pop
jecxz
fwait
xor
lods
(bad)
fild
imul
or
imul
das
jb
add
shl
out
(bad)
push
scas
sbb
pop
jl
lea
stos
stos
int
jno
mov
retf
int
push
push
dec
icebp
int
jae
call
cmp
(bad)
sub
ds
pop
inc
fmul
fidivr
and
push
popf
mov
xor
fcmovnb
fwait
push
add
cwde
dec
call
ins
push
fnstsw
jno
int
ins
fdivr
or
pop
pusha
sbb
mov
or
xor
cli
sbb
dec
add
sub
xor
push
inc
out
mov
sbb
dec
dec
mov
(bad)
lods
loop
mov
repz
test
dec
retf
pop
push
(bad)
retf
adc
push
(bad)
popa
fst
cli
(bad)
mov
push
call
xchg
mov
shl
pop
stos
mov
and
xor
movs
pop
cmc
ret
dec
xchg
bound
dec
push
pop
scas
sub
sbb
stos
pop
add
ret
mov
imul
movs
mov
push
into
mov
push
push
jnp
std
shl
or
push
mov
mov
or
cmp
xor
or
int
adc
and
ds
or
mov
movs
xor
jo
retf
mov
clc
faddp
mov
movs
push
pop
out
mov
into
into
outs
test
cmp
inc
jp
jbe
and
icebp
add
in
xor
jge
adc
in
sub
test
pop
outs
fmulp
add
movs
(bad)
(bad)
jae
dec
outs
sbb
(bad)
out
adc
aam
rcr
js
inc
aas
inc
out
adc
std
mov
call
mov
sub
ds
mov
sti
mov
jbe
adc
call
xor
and
xor
in
push
cmp
out
std
imul
add
and
pop
sub
mov
sahf
mov
mov
int3
mov
and
xor
es
mov
mov
movs
xor
movlhps
jo
or
pop
std
data16
cmp
dec
jb
pop
mov
mov
cmp
pop
jmp
adc
shl
xchg
pop
lock
hlt
bound
mov
pop
scas
int
jg
cmp
adc
xor
cmp
dec
add
sub
sub
mov
test
add
(bad)
out
push
adc
out
loopne
lock
pop
scas
lods
fwait
mov
int3
jmp
daa
movs
stos
mov
sub
and
into
pop
sub
popa
and
arpl
into
iret
or
pop
cmc
xchg
inc
mov
mov
mov
jp
mov
sbb
icebp
fdivrp
sbb
mov
lds
fmulp
mov
cmp
out
loopne
jo
mov
dec
je
cmp
sahf
jecxz
shl
outs
arpl
push
das
cwde
or
lods
mov
scas
cmp
adc
jecxz
sbb
repnz
dec
inc
xor
fsubr
jmp
std
or
ret
cmps
pop
adc
dec
mov
sub
pop
loop
pusha
div
inc
fidiv
sbb
dec
fdivp
push
sub
cmp
aad
add
pop
jbe
mov
movs
lods
pop
mov
scas
cmp
sahf
push
cmc
shl
cmp
in
imul
pusha
rcr
mov
cmps
lods
xor
jge
(bad)
xlat
dec
xor
mov
or
sbb
repnz
push
movs
xchg
push
add
pop
or
mov
fimul
xor
fsubr
(bad)
std
sbb
xor
test
retf
sbb
and
cmps
(bad)
sub
cmc
push
test
(bad)
mov
in
dec
or
in
sahf
jle
mov
push
and
mov
test
mov
xchg
les
test
(bad)
lods
pusha
stos
cmp
aad
xchg
sbb
cs
cdq
outs
outs
clc
cmp
bound
jl
inc
cmp
ss
cmps
adc
xor
fcmovnbe
je
cmp
add
inc
popf
mov
or
ins
popf
add
in
mov
jno
shl
in
xchg
adc
mov
not
pop
cmp
push
pop
(bad)
outs
data16
div
test
sti
cs
dec
int
fst
(bad)
pop
jne
jb
mov
(bad)
out
jg
(bad)
outs
lea
(bad)
loop
in
ss
add
fs
lods
mov
in
dec
sub
sub
(bad)
jge
dec
inc
aaa
scas
mov
ret
inc
fsubr
add
pop
iret
fwait
outs
lahf
jp
pop
push
dec
jb
popf
jle
popa
mov
hlt
jg
clc
neg
jne
xchg
loop
adc
cmp
cmp
cmps
movs
xor
pop
js
and
xor
scas
cmp
inc
adc
das
adc
icebp
ds
jle
cwde
sbb
gs
xchg
sub
sahf
or
sahf
or
sahf
xor
dec
adc
add
into
cwde
jge
adc
and
mov
sub
sub
jne
sti
scas
loope
push
or
frstor
and
jb
push
pop
push
fstp
cmp
fwait
sub
ins
push
cmp
imul
xor
jecxz
jbe
dec
mov
or
xchg
and
pop
add
mov
sub
mov
mov
int3
scas
xchg
pop
or
test
dec
mov
test
jle
pop
dec
retf
lea
and
sbb
or
dec
add
xor
dec
push
jle
in
sahf
aas
fstp
mov
jg
sbb
dec
(bad)
ins
enter
out
pop
iret
cmp
push
js
cmp
push
stos
pop
jmp
xor
in
pop
movs
push
int
push
es
sbb
pop
push
jle
outs
cmp
pop
and
or
jbe
push
inc
lea
adc
aam
push
mov
rol
shl
mov
mov
sbb
push
aam
dec
jb
mov
in
inc
sbb
lds
ins
fsubrp
add
arpl
(bad)
fadd
std
push
inc
(bad)
test
sbb
or
cmp
cli
pusha
loop
or
ret
es
cli
pop
lods
jg
xchg
xchg
scas
jge
adc
fidivr
pop
mov
je
mov
jl
enter
lea
add
mov
js
and
lahf
jno
call
js
push
push
push
add
mov
xor
and
cwde
sbb
gs
pop
iret
xchg
popa
sub
inc
jmp
cli
dec
cmps
push
ror
std
fwait
adc
movs
fwait
ss
push
in
mov
lock
es
mov
jne
and
push
repz
outs
push
xor
sahf
arpl
xchg
stos
in
fdivr
out
movs
pop
mov
loop
popf
xchg
mov
sti
pop
push
rcr
in
stos
adc
jo
inc
ret
test
jp
jb
bound
mov
cmp
out
in
fdivr
sbb
and
(bad)
cmc
call
mov
cmp
out
cmc
pop
jo
inc
mov
movs
dec
lahf
jmp
dec
cs
ins
fwait
cmp
rcr
sbb
push
pop
sub
nop
mov
xor
loopne
cmp
call
jnp
push
adc
jo
int
(bad)
shl
cmps
cmp
jle
jmp
adc
jnp
cmp
out
scas
loope
xor
cwde
cs
mov
adc
out
and
std
mov
(bad)
sbb
mov
jo
int
cwde
inc
add
bound
or
pop
scas
and
mov
in
shl
out
es
mov
gs
jecxz
hlt
and
dec
push
fwait
push
stos
pusha
es
out
and
(bad)
push
mov
ds
lea
rcr
sbb
or
push
xor
das
popa
jge
dec
mov
ins
rcr
cld
inc
sbb
inc
out
add
js
push
(bad)
xor
movs
add
retf
push
movs
xor
mov
xchg
out
(bad)
je
fld
pop
cmps
repnz
mov
xchg
pop
or
inc
shr
or
jle
pop
int
fstp
lods
std
in
cmp
cmp
mov
shr
in
and
and
add
inc
pop
retf
dec
jae
bound
xchg
mov
push
inc
retf
mov
push
out
std
pop
or
mov
popf
retf
push
inc
lods
in
into
dec
dec
in
stos
dec
popf
into
xor
ret
lea
cmp
inc
dec
in
push
jae
push
into
inc
out
lea
(bad)
icebp
or
(bad)
cmp
sbb
adc
scas
mov
cmp
arpl
pop
test
int
and
push
inc
pop
and
bound
retf
mov
sub
icebp
gs
mov
and
jp
xchg
gs
mov
and
inc
mov
mov
or
cmp
movs
cmps
push
mov
jbe
mov
bound
inc
mov
sub
sub
(bad)
js
in
test
push
mov
inc
and
test
mov
and
or
xchg
jmp
sbb
and
lea
xchg
cmp
push
mov
dec
mov
dec
movs
fisubr
xor
pop
mov
leave
fsub
mov
popf
sbb
jle
add
(bad)
xchg
push
sbb
mov
call
lock
cmp
or
aaa
cmp
leave
adc
inc
jae
retf
pusha
push
jne
or
div
inc
xor
cs
jno
call
in
cmp
into
mov
pop
iret
ss
(bad)
(bad)
retf
push
jl
mov
and
call
pusha
xchg
mov
or
jmp
and
dec
leave
pop
xchg
jge
jno
or
inc
cmp
out
push
dec
xor
xchg
lods
pop
mov
in
mov
sti
dec
jg
mov
push
aaa
sahf
jmp
test
ja
inc
fstp
xchg
ins
popa
mov
shl
loope
or
call
and
ss
jb
push
xchg
popa
sbb
cmps
push
ss
js
mul
dec
push
icebp
mov
pushf
mov
dec
jg
xchg
call
aaa
push
scas
out
and
addr16
push
cmc
test
fstp
dec
xchg
push
test
or
(bad)
push
cmp
(bad)
repnz
inc
std
jno
test
bound
cmp
or
xor
rcr
jmp
pop
je
das
mov
push
fnsave
pop
sbb
lea
outs
js
ds
add
cmp
ror
jle
xor
lds
dec
jmp
dec
or
push
(bad)
aad
sar
test
xchg
nop
dec
xor
dec
lods
and
ret
enter
lods
dec
inc
push
mov
mov
in
dec
xchg
pop
mov
pop
inc
dec
xor
jne
das
mov
push
lds
mov
test
cmc
in
adc
cmp
sub
and
imul
dec
call
outs
mov
jae
mov
sar
and
jg
retf
in
sbb
shl
rcr
rcl
scas
or
xchg
fnstsw
mov
jle
jnp
jecxz
mov
xor
movs
retf
std
or
mov
or
mov
jle
lods
(bad)
test
out
js
and
dec
xchg
shr
push
cwde
sbb
frstor
jg
ret
xchg
bound
mov
sbb
sub
jp
inc
jmp
cmp
aam
sahf
jle
jle
add
jecxz
addr16
pop
sub
mov
(bad)
mov
mov
sub
sahf
mov
lods
sub
cli
xchg
in
or
and
mov
pop
push
mov
mov
jecxz
adc
push
ins
cs
pop
jmp
jmp
jns
outs
inc
ds
mov
pop
fnstenv
out
not
pop
pop
fs
inc
mov
lods
push
and
mov
sub
adc
test
pop
test
je
mov
xchg
xchg
es
into
in
int
out
es
cmp
outs
popf
cmp
movs
push
(bad)
cld
inc
mov
pop
cmp
sbb
sahf
ins
pop
jle
(bad)
(bad)
mov
xor
push
push
retf
push
std
push
add
xchg
push
or
inc
sbb
pop
and
in
adc
cs
(bad)
xchg
aas
push
ss
and
jno
ficomp
push
loopne
jge
lock
mov
cld
int
pop
(bad)
(bad)
jbe
mov
sub
push
jne
repnz
adc
pop
mov
push
cmc
sub
cmp
ss
xchg
pop
in
sbb
lea
mov
lds
pop
je
call
push
sar
push
cs
(bad)
push
cmp
ds
add
mov
rol
shl
cs
gs
outs
cmps
jbe
inc
lds
and
dec
add
jl
pop
pop
dec
daa
jl
ins
inc
sbb
(bad)
dec
cs
outs
out
neg
xlat
jp
or
into
inc
jne
gs
hlt
mov
(bad)
out
mov
mov
jp
in
adc
add
xor
and
(bad)
aam
test
inc
fs
popf
sub
or
movs
test
cmp
cmp
lock
jae
cld
sub
and
fst
sub
enter
mov
push
xchg
popa
jne
lock
test
mov
xor
in
in
mov
mov
jle
sbb
out
imul
jmp
retf
cs
fldenv
inc
cmp
out
pop
call
enter
loopne
jb
dec
inc
mov
jnp
(bad)
lds
test
mov
cmp
lock
inc
outs
jg
xor
test
pop
daa
and
xchg
(bad)
adc
fld
es
lods
int
not
out
movs
div
cmp
or
add
mov
push
sahf
sub
push
jmp
mov
mov
int
xor
call
adc
xchg
xor
mov
fld
js
or
mov
push
aad
add
adc
in
adc
int3
into
mov
hlt
adc
shl
ss
cs
sbb
repnz
add
mov
xchg
jl
js
pop
lock
add
int3
mov
inc
push
sub
push
std
mov
or
add
ficomp
lock
(bad)
jns
sub
inc
dec
push
push
retf
dec
(bad)
imul
jge
mov
xchg
cmp
out
ss
xchg
jge
mov
clc
jle
jnp
inc
jge
dec
in
movs
and
(bad)
xchg
mov
fadd
and
repnz
iret
mov
lea
mov
jge
out
push
jmp
(bad)
jmp
dec
in
jl
xchg
out
pusha
mov
sti
mov
fild
push
push
(bad)
(bad)
arpl
jmp
cmc
call
int3
cmp
and
repnz
xchg
in
dec
je
int3
mov
mov
mov
mov
mov
mov
pusha
push
push
gs
fistp
dec
int
mov
mov
lds
cmp
mov
test
icebp
int
jmp
push
out
dec
or
popf
outs
cmp
stos
sub
mov
sbb
adc
mov
fwait
sub
stos
lea
pop
pop
rol
lods
into
or
and
dec
mov
push
jnp
adc
imul
jl
ins
push
push
push
inc
dec
jle
scas
xchg
ss
push
mov
aad
jge
mov
in
aad
pop
or
repnz
lahf
mov
gs
adc
inc
retf
pop
scas
cmc
stos
cmp
push
fs
inc
outs
and
fcomp
xchg
cs
call
mov
cmp
lods
jmp
ds
lods
pop
inc
sub
mov
ins
popf
jne
mov
scas
jo
adc
add
sub
dec
stc
jle
jecxz
sbb
add
in
aas
push
into
pop
pop
(bad)
sub
add
(bad)
lahf
jecxz
gs
and
sysenter
aad
je
mov
cmp
cmp
ror
push
sbb
call
push
mov
xchg
push
push
cmp
fistp
out
(bad)
test
fcomp
xchg
iret
loopne
dec
cmps
pop
std
mov
in
dec
cmp
rol
xor
ins
popf
and
outs
push
jg
(bad)
push
lods
mov
mov
pop
inc
(bad)
test
dec
sbb
in
and
mov
mov
inc
enter
lods
ja
sahf
enter
pop
sbb
idiv
jp
scas
cld
(bad)
fxch
cmp
out
mov
ins
dec
sub
or
leave
xchg
cmp
in
mov
std
mov
cmp
ins
(bad)
xchg
or
mov
enter
mov
imul
imul
stos
in
daa
stos
rol
lea
aad
or
adc
mov
dec
xor
jmp
push
cld
inc
cmps
out
sub
and
sahf
jle
mov
arpl
or
imul
cli
nop
sti
stos
dec
adc
mov
shl
pop
ss
dec
cmp
jno
rcr
jmp
push
ret
ja
pop
gs
mov
out
mov
jle
mov
push
cmp
loope
std
inc
or
pop
inc
or
push
lods
mov
ret
lea
ds
fdivr
xchg
mov
stos
jp
mov
inc
(bad)
nop
out
in
loope
add
mov
in
dec
jge
and
xchg
or
mov
xchg
repnz
in
dec
mov
mov
pop
push
or
sbb
mov
dec
outs
stos
adc
loope
mov
rol
cmps
pop
jmp
sahf
jl
push
jmp
outs
prefetch
mov
lods
mov
aaa
jle
mov
xchg
jge
sbb
retf
jo
mov
outs
lods
in
cmc
xor
xor
(bad)
mov
cmp
outs
sub
cmp
out
mov
into
sbb
pop
ds
mov
jmp
(bad)
std
scas
aam
jmp
fdivrp
movs
xor
or
gs
std
mov
movs
xchg
cmp
aas
or
sub
cmc
loop
fimul
sub
cmp
or
mov
outs
data16
ror
lods
clc
xchg
mov
cli
(bad)
test
hlt
pushf
(bad)
lahf
cs
add
jae
sti
aad
jge
mov
pop
push
sbb
out
std
stc
inc
sbb
and
lods
sub
mov
mov
mov
xor
fwait
push
test
push
sub
sbb
add
jo
push
pusha
or
fistp
sub
mov
(bad)
ins
push
cmp
dec
sbb
push
pop
or
push
cmp
sbb
cmps
clc
jbe
loope
int3
jge
movs
retf
sbb
sbb
fdivr
and
(bad)
pop
fisttp
jbe
xchg
sahf
jb
dec
ret
pop
test
mov
out
lea
in
cmc
inc
or
cmp
loop
push
jge
jb
sbb
fidivr
idiv
fs
mov
nop
movs
std
cmovle
popf
movs
add
mov
push
pop
retf
inc
cmp
sbb
je
jge
shr
jle
adc
jmp
mov
cwde
adc
xchg
std
pop
xor
fcom
cmc
sub
xor
or
lahf
jl
dec
mov
stos
shl
(bad)
and
pop
into
dec
or
(bad)
in
push
sub
popf
pusha
into
pop
pop
cs
pushf
inc
push
lods
mov
push
lock
lock
scas
je
hlt
dec
dec
jmp
ins
scas
pop
mov
cmp
add
or
addr16
xchg
enter
mov
hlt
mov
scas
sbb
popf
fld
xchg
shl
xchg
scas
sub
mov
vpshufhw
out
jne
mov
jbe
mov
pop
mov
jle
sahf
pop
add
cmps
shr
adc
jbe
ror
lea
popf
xchg
pop
sti
repz
push
pop
mov
pop
mov
jmp
sbb
and
mov
enter
sub
dec
dec
xchg
xchg
in
jmp
adc
jg
dec
jbe
shl
cmp
sub
mov
outs
rol
sti
into
dec
adc
clc
push
add
mov
dec
inc
cli
dec
or
call
pslld
pop
out
jbe
sbb
inc
(bad)
jno
pop
xchg
sbb
push
mov
call
sbb
mov
mov
and
xchg
(bad)
pop
pop
enter
in
and
stc
sbb
sbb
inc
pop
dec
cs
xchg
cmp
inc
push
outs
mov
add
in
loope
mov
fstp
pop
jle
adc
aas
dec
ret
pop
push
mov
jae
arpl
std
inc
pop
mov
cs
sub
push
aas
ficomp
and
out
pusha
ret
xor
and
imul
xchg
in
in
jbe
mov
inc
cmc
or
xchg
repz
sub
fstp
(bad)
call
int
scas
add
adc
push
xchg
cmc
icebp
or
jmp
ins
mov
mov
fadd
repz
loope
in
cmc
std
push
int
int
mov
mov
xchg
stc
adc
add
stos
pusha
(bad)
mov
ja
push
inc
retf
jb
pop
sub
popa
xor
and
(bad)
aad
pusha
push
mov
shr
sar
jl
jmp
pop
dec
ret
sub
jmp
dec
cs
adc
(bad)
mov
xchg
pop
or
mov
sti
ret
adc
inc
sub
paddb
fbld
cmp
xor
inc
sbb
scas
push
xchg
mov
jae
scas
inc
inc
lea
push
cs
hlt
out
sbb
and
fdivrp
inc
sbb
add
lods
scas
xchg
xor
pop
xor
mov
or
sbb
movs
xchg
mov
(bad)
jmp
sahf
xor
sub
mov
sbb
ret
lahf
shl
xlat
add
out
bound
mov
mov
mov
add
and
out
sti
mov
shl
push
popa
test
out
mov
int
cmps
pop
in
inc
mov
inc
rcr
ins
cwde
dec
(bad)
fist
sub
sahf
xor
cld
or
or
dec
lods
jmp
call
fnstsw
pop
jmp
aas
lock
adc
mov
into
mov
ds
dec
and
pop
test
ficom
cmc
xchg
pop
dec
hlt
fidivr
pop
stc
and
xor
(bad)
out
dec
cmps
mov
mov
pop
hlt
sahf
push
pop
mov
stos
sti
or
repnz
in
cli
jnp
mov
push
std
add
push
pop
and
dec
or
cli
jno
stos
inc
js
and
js
xor
(bad)
dec
and
push
mov
popf
cmp
stos
retf
retf
outs
jle
pop
popf
fcos
cs
imul
inc
movs
dec
jge
mov
iret
outs
xchg
mov
sub
mov
xchg
icebp
sar
dec
lods
dec
lock
fld
pop
sub
push
pop
jb
xchg
adc
(bad)
jle
int
and
mov
adc
neg
or
cmp
(bad)
jg
dec
adc
or
cmp
pop
sbb
pop
outs
jg
sub
sbb
mov
into
xchg
pop
fst
std
push
ins
sub
jecxz
pop
mov
and
icebp
sub
in
xchg
std
push
xor
sub
sub
cmp
mov
aaa
stos
sub
lea
or
pop
cmps
cmp
mov
sub
inc
mov
and
rcr
loope
enter
rcl
jecxz
shr
gs
pop
pop
stos
aam
sub
jge
mov
cmps
(bad)
(bad)
inc
sbb
jle
xchg
idiv
jge
stos
fisttp
es
les
jmp
mov
sub
fimul
mov
sub
jbe
xchg
ds
lds
adc
aad
mov
js
in
mov
add
popf
sub
cmps
popa
jb
xchg
ins
sar
in
aam
push
add
or
push
fisub
mov
bound
and
push
jo
xchg
dec
fidivr
rcr
std
fild
xor
xchg
pop
cmp
sub
shl
ror
ret
push
fsubr
ret
xchg
mov
lods
mov
push
mov
(bad)
(bad)
xchg
out
xor
or
and
not
dec
push
sub
xchg
cmp
jns
push
in
push
es
das
fmul
sub
pop
mov
lods
push
stos
mov
sub
pop
or
or
ja
add
js
dec
cmp
or
cmc
cdq
push
popf
sahf
cmp
mov
ds
xchg
xchg
in
push
fs
push
fisubr
sbb
inc
jge
push
mov
add
push
les
sub
add
push
ds
and
cmp
jle
xchg
cmp
das
(bad)
int
sahf
out
dec
jmp
fbld
gs
dec
adc
xor
cmp
or
(bad)
push
dec
lods
mov
movs
cmp
sbb
push
mov
mov
mov
in
pop
mov
add
fs
jecxz
push
mov
push
outs
sub
sub
out
mov
ins
rcr
mov
out
cmp
lahf
pop
in
inc
mov
or
fisubr
(bad)
adc
int
adc
aad
dec
mov
outs
ins
mov
int
lods
fsub
imul
mov
pop
popf
into
into
fdivr
push
mov
shl
das
push
adc
cld
mov
jmp
jo
dec
ret
lods
push
mov
scas
sub
push
stc
rcr
jg
sbb
push
repnz
lahf
jge
mov
push
and
dec
and
shr
(bad)
sub
or
cs
adc
mov
lods
in
fwait
ret
add
adc
add
sbb
popa
sub
shr
fcomi
mov
(bad)
into
inc
dec
nop
sar
cmc
bound
cmc
mov
(bad)
loopne
std
dec
push
ds
sbb
sahf
pop
aaa
js
mov
hlt
jg
pop
scas
fisubr
lea
push
jbe
(bad)
std
and
lods
adc
or
adc
add
(bad)
pop
aas
sub
jne
mov
or
aad
or
xchg
hlt
jns
dec
lea
cmp
mov
jns
clc
push
and
test
movs
add
ss
adc
movs
jmp
adc
push
push
sub
std
add
iretw
push
leave
ds
call
inc
and
pusha
xor
cmp
inc
pop
sbb
or
jbe
or
std
shl
xchg
push
std
fcom
push
stos
in
push
jle
cmp
into
cs
mov
pop
cmps
cmc
fdivr
push
jge
mov
imul
(bad)
scas
mov
out
adc
jno
aam
push
cmp
movs
xor
inc
clc
push
jne
lds
and
cmps
daa
mov
mov
or
sbb
sbb
ffree
and
popf
outs
xchg
pop
pop
mov
adc
into
dec
(bad)
adc
out
mov
ss
jb
imul
push
mov
lods
es
sub
fiadd
icebp
xchg
jnp
shr
xor
add
mov
jnp
mov
pop
icebp
sub
cli
adc
push
lds
mov
shl
xchg
pop
xchg
sub
in
(bad)
outs
sub
ja
gs
stc
test
pop
mov
mov
out
xchg
mov
push
mov
(bad)
sbb
dec
push
lods
es
dec
popf
xchg
push
cmp
dec
ins
xchg
daa
int
xor
stos
pop
mov
hlt
fist
mov
in
jmp
and
mov
call
int
fs
gs
sti
pop
test
mov
stos
fs
test
cmc
push
fadd
sti
mov
pop
outs
lods
adc
push
cmp
into
push
xor
(bad)
jp
stc
push
add
enter
scas
xchg
mov
test
mov
ret
or
and
inc
dec
push
and
aad
sbb
cli
outs
jns
mov
inc
shl
leave
into
in
shr
push
xchg
icebp
mov
fnsave
dec
lea
outs
test
dec
and
call
xchg
ss
movs
cdq
sub
inc
mov
hlt
pop
lds
ins
mov
into
retf
in
arpl
dec
add
xor
movs
in
inc
inc
iret
push
lea
fild
scas
cmp
int
loop
loope
or
and
jbe
(bad)
int
das
push
xchg
jno
out
pop
(bad)
cmps
call
or
xchg
and
out
mov
jno
scas
jmp
jno
neg
aas
xor
loope
(bad)
mov
push
shr
test
dec
push
popf
outs
mov
jle
sbb
adc
add
aas
fnstsw
jne
retf
dec
mov
hlt
or
mov
shl
xchg
movs
(bad)
dec
std
test
out
lods
lahf
bound
not
data16
fs
sub
mov
ss
outs
xchg
mov
inc
sub
jno
or
adc
add
(bad)
pop
aas
sub
aas
dec
mov
xor
ffree
lods
cmp
das
popa
sbb
pop
xchg
in
or
popf
je
repnz
popf
nop
xchg
iret
(bad)
bound
cmps
jge
pop
retf
sub
(bad)
sbb
in
ror
push
and
xlat
mov
xchg
popf
lock
mov
and
movs
inc
(bad)
pop
push
adc
or
imul
mov
sbb
xor
xchg
shr
mov
lea
add
in
sub
dec
int
sbb
(bad)
lea
not
mov
shl
rcl
int
push
add
ret
cmps
inc
jmp
outs
xor
mov
int
push
sub
push
in
ret
gs
mov
ret
xchg
js
jecxz
and
adc
inc
in
dec
add
in
mov
nop
imul
mov
(bad)
retf
pop
jecxz
add
out
ss
add
xor
lahf
lods
mov
mov
(bad)
getsec
in
jle
push
xor
(bad)
frstor
cmc
xor
and
std
sbb
push
cwde
out
test
pop
pushf
rcr
imul
ds
mov
push
call
or
into
sbb
dec
test
pop
std
pop
popf
(bad)
(bad)
std
sbb
xor
lods
pop
aas
and
cwde
aam
or
pop
std
test
sahf
retf
cmps
push
cs
push
in
(bad)
jp
ffree
fild
ret
cmp
push
call
ins
xchg
sahf
or
sbb
sbb
dec
mov
outs
idiv
popa
test
push
fldenv
xchg
mov
and
test
fcom
adc
add
(bad)
cmps
cmp
shr
cmp
pop
(bad)
sub
outs
stc
shr
inc
dec
bound
jge
sbb
and
movs
or
xor
es
and
lods
pop
mov
mov
push
mov
jmp
push
add
push
xchg
mov
cs
pusha
out
test
fidivr
xor
test
jmp
out
clc
push
ds
sbb
dec
scas
outs
xchg
jo
or
push
out
mov
inc
and
div
outs
call
pushf
clc
jge
js
repnz
out
add
ds
rcr
pop
std
adc
shl
sbb
retf
pusha
push
(bad)
in
adc
and
mov
pushf
outs
gs
mov
push
sub
sti
sbb
(bad)
mov
jmp
popf
ds
fwait
sub
push
retf
jecxz
cmp
arpl
outs
sbb
pop
pop
jge
cmp
cmp
das
leave
lock
dec
jg
scas
jge
cmp
sbb
loope
icebp
int
out
es
jmp
(bad)
neg
ins
sbb
pop
(bad)
cwde
pop
cmp
repnz
sbb
int
and
jno
je
lea
mov
lods
jge
jg
xchg
dec
fstp
and
push
sub
popf
ins
pop
sahf
sub
scas
sub
(bad)
ja
cmp
nop
push
add
push
cdq
dec
add
jbe
(bad)
sar
jb
ss
in
fld
int
repz
cmp
mov
je
adc
shr
or
push
stos
out
stc
(bad)
cmp
or
xchg
add
cld
mov
xchg
sbb
jbe
sub
fld
jp
jl
idiv
pop
mov
mov
sub
pop
and
sbb
or
mov
fst
add
sbb
mov
ins
sub
stc
(bad)
cwde
fst
shl
or
pop
push
mov
mov
mov
cld
mov
jo
js
std
cmc
loop
scas
push
std
inc
add
and
pop
or
lea
outs
js
ds
add
cmp
push
or
jle
xor
lds
dec
jmp
dec
or
push
(bad)
aad
sar
mov
xchg
nop
dec
xor
dec
lods
and
adc
jle
outs
xchg
hlt
jge
mov
jbe
pop
cmp
jl
pop
add
jl
rcl
xlat
dec
pop
jle
test
sahf
xchg
ror
call
out
inc
pop
test
fdivr
dec
and
push
cmp
ins
sub
stos
pusha
add
mov
je
out
cmp
cmp
call
cld
sbb
add
popf
and
call
cmp
mov
dec
fld
lods
pop
dec
xchg
pop
xor
outs
sub
pop
and
hlt
push
in
fild
mov
push
mov
jecxz
mov
(bad)
mov
(bad)
pop
sub
int
push
ins
mov
xchg
into
outs
mov
sub
xor
(bad)
js
nop
out
or
sbb
adc
adc
inc
(bad)
jle
mov
into
sbb
sub
scas
mov
int
xchg
mov
add
cs
sbb
lods
jle
popa
aad
jg
cmovno
jnp
retf
into
push
xchg
pop
mov
dec
sub
lods
aad
or
ins
popa
loope
and
fidiv
rcl
mov
aad
dec
clc
std
xchg
scas
cs
sub
test
loop
loope
dec
sub
aad
dec
imul
mov
rcr
sbb
sbb
push
xor
cs
es
aam
popf
jle
lods
add
test
sbb
iret
jbe
cdq
jp
and
jno
leave
cmc
push
cmp
data16
add
cs
shl
int
push
in
push
mov
lea
popf
stc
int3
and
and
ds
add
push
adc
jle
call
dec
inc
(bad)
popf
bound
mov
pop
jge
int3
sahf
push
das
ins
pop
std
push
int
fstp
push
lahf
jl
jb
scas
sahf
and
mov
xor
pop
clc
sub
fisubr
jle
xchg
popf
mov
scas
pop
inc
and
xor
mov
out
scas
fistp
arpl
cli
inc
add
repz
sub
lahf
jge
dec
push
adc
xchg
cld
mov
jge
sub
mov
cs
lods
jl
ins
sub
mov
adc
xchg
cld
dec
dec
(bad)
sbb
sub
(bad)
cmp
mov
xchg
push
xchg
das
pop
adc
push
les
adc
pop
add
pop
xor
sub
mov
sahf
das
popa
(bad)
int3
mov
pop
scas
sub
out
push
das
add
adc
call
fnstsw
inc
dec
popa
stos
inc
mov
ret
data16
add
sub
out
mov
bound
movs
inc
pop
in
rcl
jg
cmc
mov
sub
or
nop
out
popf
push
inc
(bad)
popf
xor
popa
xchg
jno
repz
or
inc
mov
inc
aad
adc
xchg
push
cmp
lahf
std
add
scas
in
popa
mov
and
jne
pusha
jbe
icebp
inc
ret
xor
push
sar
out
adc
data16
ret
mov
fisub
dec
nop
(bad)
out
xchg
jl
sar
ret
mov
int
repnz
jne
adc
jo
movs
sbb
into
loopne
mov
xchg
das
pop
adc
inc
fst
push
retf
adc
(bad)
and
imul
lods
(bad)
pop
int3
add
shld
nop
das
adc
add
mov
ret
inc
mov
xchg
lods
neg
loope
(bad)
mov
gs
inc
mov
shl
gs
bound
mov
in
lds
es
fadd
sbb
push
or
mov
pop
mov
out
add
mov
and
cmp
(bad)
fs
xchg
lods
mov
dec
movs
dec
std
push
in
aaa
cdq
add
sub
rcr
mov
cmc
dec
xchg
jns
dec
and
xchg
mov
or
adc
repnz
push
mov
arpl
mov
daa
into
fdiv
fsubr
in
stc
or
sahf
sbb
push
pop
inc
cmp
xchg
xor
mov
daa
repnz
adc
xchg
loope
retf
cmp
sub
call
(bad)
mov
ret
xor
add
adc
std
dec
push
xlat
or
scas
enter
mov
pop
jmp
inc
xor
sbb
repnz
push
mov
shl
loopne
jge
mov
mov
scas
fdiv
cmp
add
sbb
sbb
arpl
shl
mov
xchg
adc
jno
inc
mov
sub
add
iret
in
jae
(bad)
sub
xchg
bound
mov
mov
rcr
jge
sub
nop
popf
adc
pop
push
push
rol
jo
fcom
mov
mov
xor
add
icebp
popf
sar
and
ret
jae
je
loopne
add
push
mov
inc
in
popf
adc
loope
jg
jae
rcl
jge
test
push
scas
jge
mov
mov
jge
int3
sahf
fst
sub
adc
push
popf
rcl
inc
stos
dec
retf
and
xor
mov
xor
cmp
push
mov
mov
out
push
mov
loop
scas
fild
inc
inc
ds
shr
inc
(bad)
in
pop
bound
popa
or
mov
pop
outs
dec
and
lods
sub
sbb
rcl
ds
push
cmps
in
lods
repz
movs
pop
adc
rcr
push
scas
sub
jmp
mov
rcl
fs
shl
xchg
mov
xor
outs
adc
iret
or
cmps
add
lods
ds
popa
lahf
inc
add
jle
xchg
push
fadd
scas
iret
rol
add
inc
loop
add
inc
icebp
xor
loop
add
inc
jb
pop
and
repz
outs
mov
fnclex
adc
fistp
dec
mov
(bad)
mov
xchg
inc
mov
loope
ret
xor
add
test
rcr
fs
xor
push
xor
or
rol
inc
shl
push
ror
push
mov
arpl
cmp
movs
mov
out
scas
fcom
xor
dec
lea
stos
and
jge
xchg
repz
repnz
push
arpl
cmp
xchg
xor
add
jle
and
mov
push
rcr
pop
jmp
dec
push
arpl
pop
cmp
call
pop
jge
dec
scas
inc
and
sahf
aas
dec
and
sti
ds
call
mov
jae
shr
or
jle
xchg
das
arpl
sub
push
push
das
int
add
xor
mov
sub
ja
ret
mov
icebp
nop
xor
xor
aad
lods
push
inc
dec
jge
bound
mov
jo
or
xchg
cmp
inc
jmp
mov
xor
scas
ja
ret
mov
out
pop
pop
jmp
(bad)
loop
mov
mov
inc
dec
test
popf
dec
xchg
sahf
pop
jno
fwait
push
(bad)
out
aaa
int
dec
add
lods
adc
mov
lods
out
mov
jecxz
fcom
sub
add
lock
and
mov
bound
push
mov
in
rcr
or
sub
mov
int
and
mov
mov
inc
mov
jecxz
fidivr
jne
frstor
int
and
out
lahf
inc
ret
dec
adc
jno
jg
(bad)
rcr
aam
inc
jae
retf
adc
jno
outs
mov
bound
pusha
jge
mov
js
sub
push
and
icebp
jno
pop
ror
mov
fisttp
dec
popa
sbb
mov
pop
push
test
pop
loop
pushw
or
movs
lods
scas
mov
xchg
ins
adc
mov
mov
add
gs
pop
cmp
add
mov
popf
ficomp
inc
fsub
inc
mov
loope
outs
add
and
cwde
stos
push
mov
popf
sub
jp
ss
in
in
aaa
fld
repnz
hlt
push
cmc
loope
out
rcr
test
push
scas
ins
sahf
aas
addr16
sti
fst
and
iret
or
push
jo
call
xor
lea
jne
mov
xor
sub
cs
arpl
pop
cmp
sub
sbb
mov
sbb
inc
pushf
scas
sub
jp
jbe
fist
shr
stos
aad
pop
push
ins
dec
xor
mov
xor
xor
xchg
sbb
adc
popf
icebp
inc
ds
out
int
xor
inc
inc
and
sahf
aas
dec
movs
pop
sbb
ror
ret
(bad)
pop
pop
or
jge
stos
es
jl
inc
cmps
shl
or
sti
fld
adc
scas
or
mov
iret
movs
rcl
lahf
aad
lea
jb
sar
push
inc
jae
lods
sub
std
jmp
xor
xor
jecxz
and
mov
push
cmp
inc
push
clc
lods
lods
inc
(bad)
lock
jg
dec
movs
and
daa
in
es
add
aad
or
frstor
dec
push
mov
inc
movs
std
xchg
inc
outs
adc
xor
xor
int
test
shl
xchg
and
adc
inc
rcr
jg
xchg
add
movs
xchg
ror
sbb
outs
inc
sti
ret
jae
pop
or
fsubp
shr
ins
inc
mov
dec
int
inc
mov
stc
push
cmp
out
or
fimul
mov
call
clc
pop
std
push
in
aaa
fnstsw
repnz
hlt
push
enter
inc
std
imul
nop
pop
adc
push
sub
add
jbe
test
inc
lods
sub
in
pop
bound
pop
xchg
outs
in
pushf
inc
int
ret
mul
dec
add
xor
inc
push
leave
or
inc
popa
mov
push
test
(bad)
jg
cs
add
(bad)
or
sub
imul
lods
fadd
xchg
xchg
push
in
aaa
fnstsw
add
push
std
push
int
(bad)
lods
pop
mov
outs
ins
sahf
jge
dec
mov
cmp
out
in
push
std
push
int
(bad)
lods
pop
mov
outs
ins
sahf
jge
dec
mov
cmp
out
in
push
std
push
int
(bad)
lods
pop
mov
outs
ins
sahf
jge
dec
mov
cmp
out
in
push
std
push
int
(bad)
lods
pop
mov
outs
ins
sahf
jge
dec
mov
cmp
out
in
push
std
push
int
(bad)
lods
pop
mov
outs
ins
sahf
jge
dec
mov
cmp
out
in
push
std
push
int
(bad)
lods
pop
mov
outs
ins
sahf
jge
dec
mov
cmp
out
in
push
std
push
int
(bad)
lods
pop
mov
outs
ins
sahf
jge
dec
mov
cmp
out
in
push
std
push
int
(bad)
lods
pop
mov
outs
ins
sahf
jge
dec
mov
cmp
out
in
push
std
push
int
(bad)
lods
pop
mov
outs
outs
popf
jle
dec
mov
ds
std
push
in
out
sbb
fisubr
lea
ins
outs
popf
jle
dec
mov
ds
std
push
in
out
sbb
fisubr
mov
ins
outs
popf
jle
dec
mov
ds
std
push
in
out
sbb
fisubr
mov
ins
outs
popf
jle
dec
mov
ds
std
push
in
out
sbb
(bad)
lods
outs
mov
outs
ins
lods
jge
dec
mov
jg
repnz
mov
shr
fsubr
fild
sub
aas
iret
jnp
cmp
sub
(bad)
sbb
in
in
sbb
and
or
fsubr
and
sub
adc
cmp
inc
mov
mov
fst
in
out
(bad)
or
fwait
jnp
jnp
sbb
ins
fwait
adc
jl
inc
mov
lods
scas
pop
mov
ins
out
sbb
or
cmp
sub
fdivr
int3
paddb
in
outs
pushf
jg
dec
mov
std
push
int
(bad)
lods
sbb
dec
lea
outs
das
sahf
jge
dec
mov
cmp
out
adc
std
icebp
int
(bad)
out
pop
dec
sbb
scas
outs
fidivr
out
in
pop
std
dec
int
and
lods
pop
dec
jle
xchg
ins
fdivr
movsx
scas
sub
(bad)
pop
out
scas
push
std
icebp
int
(bad)
out
pop
dec
sbb
push
sub
(bad)
pop
out
in
loope
push
xor
lahf
lods
sbb
or
ins
fnstsw
mov
pop
scas
sub
(bad)
loop
scas
push
std
dec
int
(bad)
push
pop
dec
cmp
sub
movsx
sub
(bad)
sbb
push
int
(bad)
out
sbb
dec
lea
sub
fdivr
dec
mov
cmp
out
in
push
mov
lods
sbb
or
cmp
sub
fdivr
int3
paddb
in
outs
fidivr
out
in
push
mov
ins
out
sbb
or
cmp
sub
sahf
jge
paddb
in
outs
pushf
jg
dec
(bad)
sbb
push
int
lahf
ins
out
sbb
or
cmp
sub
fdivr
int3
paddb
in
outs
pushf
jg
or
pop
mov
ins
out
sbb
or
cmp
outs
ins
sahf
aas
int3
paddb
in
outs
pushf
jg
dec
mov
std
push
int
(bad)
lods
pop
dec
jle
sub
fdivr
dec
cld
pop
in
outs
pushf
cmp
out
in
push
std
dec
(bad)
jl
ins
out
sbb
or
jle
outs
ins
fdivr
int3
paddb
in
outs
pushf
jg
or
pop
std
push
int
lahf
ins
out
pop
mov
sub
sahf
jge
paddb
in
outs
pushf
cmp
lods
scas
pop
mov
ins
lods
pop
mov
outs
ins
fdivr
int3
movsx
sub
(bad)
sbb
push
int
(bad)
lods
pop
dec
jle
sub
fdivr
int3
paddb
in
outs
fidivr
lods
scas
push
std
push
int
lahf
ins
out
pop
mov
sub
sahf
aas
int3
paddb
in
outs
fidivr
out
in
push
mov
lods
sbb
or
cmp
sub
fdivr
dec
mov
cmp
lods
scas
pop
mov
ins
out
sbb
or
cmp
sub
fdivr
int3
paddb
in
outs
pushf
jg
or
push
std
push
(bad)
jl
ins
out
sbb
or
jle
outs
ins
fdivr
int3
movsx
sub
(bad)
sbb
push
int
lahf
lods
pop
mov
sub
fdivr
int3
paddb
in
sub
(bad)
pop
out
scas
pop
mov
outs
lods
pop
mov
outs
ins
sahf
aas
int3
dec
mov
jg
dec
mov
mov
lods
pop
mov
outs
ins
sahf
ds
push
(bad)
pop
scas
sub
(bad)
pop
lods
in
push
std
dec
lea
lods
pop
mov
sub
sahf
jge
push
(bad)
push
out
sub
mov
std
push
int
popf
ins
in
sbb
bound
fdivr
movsx
sub
(bad)
pop
lods
scas
pop
mov
outs
lods
pop
mov
outs
ins
fdivr
dec
mov
cmp
lods
scas
pop
mov
ins
out
sbb
or
cmp
outs
ins
sahf
jge
dec
mov
cmp
out
in
push
mov
ins
lods
pop
mov
outs
ins
fdivr
dec
mov
cmp
out
scas
pop
mov
cs
pop
mov
sub
sahf
jge
paddb
scas
sub
mov
std
dec
int
(bad)
out
sbb
or
jle
outs
das
sahf
jge
dec
cld
pop
in
sub
(bad)
sbb
dec
int
(bad)
out
pop
mov
outs
ins
sahf
aas
int3
paddb
in
sub
mov
mov
cs
sbb
dec
lea
sub
fdivr
dec
mov
cmp
lods
scas
pop
mov
lods
pop
mov
outs
das
fdivr
int3
paddb
in
outs
pushf
jg
dec
mov
mov
ins
out
sbb
or
cmp
sub
fdivr
int3
paddb
scas
sub
mov
mov
lods
pop
mov
sub
fdivr
int3
paddb
in
outs
pushf
jg
or
pop
mov
ins
out
sbb
dec
lea
sub
fdivr
int3
paddb
sub
mov
mov
lods
pop
dec
jle
outs
ins
fdivr
int3
paddb
in
outs
pushf
jg
dec
mov
mov
ins
out
sbb
or
cmp
sub
fdivr
int3
paddb
in
outs
pushf
jg
dec
mov
mov
lods
sbb
or
jle
outs
ins
fdivr
int3
paddb
in
outs
pushf
jg
dec
mov
mov
ins
out
sbb
or
cmp
sub
fdivr
int3
paddb
in
outs
pushf
jg
dec
mov
mov
ins
out
sbb
or
cmp
sub
fdivr
int3
paddb
in
outs
pushf
jg
dec
mov
std
push
int
lahf
ins
lods
pop
mov
sub
fdivr
mov
pop
in
sub
mov
std
dec
(bad)
jl
ins
out
sbb
or
jle
outs
das
fdivr
int3
paddb
in
outs
fidivr
lods
scas
pop
mov
lods
pop
dec
cmp
sub
fdivr
int3
paddb
in
outs
pushf
cmp
lods
scas
pop
mov
ins
out
sbb
or
cmp
sub
fdivr
mov
pop
in
outs
pushf
jg
dec
mov
mov
ins
out
sbb
or
cmp
sub
fdivr
dec
mov
cmp
out
in
push
std
dec
int
(bad)
out
sbb
or
jle
outs
das
fdivr
dec
mov
jg
or
push
std
push
int
lahf
ins
out
sbb
dec
lea
sub
fdivr
mov
pop
in
outs
fidivr
lods
in
push
std
push
(bad)
jl
lods
pop
dec
fdivr
dec
mov
cmp
lods
scas
pop
mov
lods
sbb
or
jle
outs
ins
fdivr
dec
mov
cmp
out
scas
push
std
push
int
lahf
lods
pop
mov
outs
das
fdivr
int3
paddb
in
sub
mov
std
dec
(bad)
jl
lods
pop
dec
jle
sub
fdivr
int3
dec
mov
cmp
out
in
push
mov
lods
pop
mov
outs
das
fdivr
mov
pop
in
sub
(bad)
sbb
push
int
(bad)
dec
jle
outs
ins
fdivr
dec
mov
jg
dec
(bad)
sbb
push
int
(bad)
inc
dec
lea
mov
pop
in
sub
mov
std
dec
int
(bad)
out
pop
mov
outs
ins
sahf
aas
int3
paddb
scas
sub
mov
mov
cs
sbb
dec
lea
outs
fistp
dec
mov
jg
dec
mov
mov
ins
out
pop
mov
sub
sahf
jge
dec
cld
pop
scas
outs
fidivr
out
in
push
std
dec
(bad)
jl
ins
out
sbb
or
cmp
sub
fdivr
mov
pop
in
outs
pushf
jg
dec
mov
std
push
(bad)
jl
lods
pop
dec
jle
outs
ins
fdivr
int3
dec
mov
jg
dec
mov
std
dec
(bad)
(bad)
lods
sbb
or
jle
outs
das
fdivr
int3
paddb
in
outs
pushf
jg
or
pop
mov
cs
sbb
or
jle
outs
ins
fdivr
dec
mov
cmp
out
scas
push
std
push
int
(bad)
lods
pop
dec
jle
sub
fdivr
jno
mov
cmp
lods
scas
pop
mov
ins
out
sbb
or
cmp
outs
ins
sahf
aas
mov
pop
in
outs
fidivr
adc
push
mov
lods
pop
dec
cmp
sub
fdivr
int3
paddb
in
outs
pushf
jg
dec
mov
std
push
(bad)
(bad)
lods
sbb
or
cmp
sub
fdivr
mov
pop
in
sub
mov
mov
ins
out
sbb
or
cmp
sub
fdivr
dec
mov
cmp
lods
scas
pop
mov
ins
out
sbb
or
cmp
sub
fdivr
int3
movsx
sub
(bad)
pop
lods
scas
pop
mov
ins
out
sbb
or
cmp
sub
fdivr
int3
paddb
sub
(bad)
sbb
dec
(bad)
jl
ins
out
sbb
or
cmp
sub
fdivr
int3
paddb
scas
sub
(bad)
sbb
dec
(bad)
jl
lods
pop
mov
outs
ins
fdivr
int3
dec
mov
jg
dec
mov
mov
cs
pop
mov
sub
fdivr
int3
paddb
sub
mov
mov
lods
pop
dec
fdivr
dec
mov
cmp
out
in
push
mov
lods
pop
mov
outs
das
fdivr
dec
mov
cmp
out
in
push
std
dec
int
(bad)
out
pop
mov
outs
ins
sahf
aas
mov
pop
in
sub
(bad)
sbb
dec
int
(bad)
out
sbb
or
jle
outs
ins
fdivr
mov
pop
in
outs
fidivr
out
in
push
std
dec
(bad)
jl
ins
out
sbb
dec
lea
sub
sahf
jge
dec
cld
pop
in
sub
mov
std
dec
(bad)
jl
ins
out
sbb
or
jle
outs
das
fdivr
dec
mov
cmp
out
in
pop
mov
ins
out
pop
mov
outs
ins
sahf
jge
movsx
sub
(bad)
sbb
push
(bad)
jl
lods
pop
dec
fdivr
dec
mov
cmp
lods
scas
pop
mov
ins
out
pop
mov
sub
fdivr
dec
mov
cmp
out
in
push
mov
lods
sbb
dec
lea
sub
fdivr
int3
paddb
in
outs
fidivr
lods
in
push
std
push
(bad)
(bad)
lods
sbb
dec
lea
sub
fdivr
int3
paddb
sub
mov
mov
ins
out
pop
mov
outs
ins
sahf
aas
mov
pop
in
outs
pushf
jg
dec
mov
std
push
(bad)
jl
ins
out
sbb
dec
lea
sub
fdivr
int3
dec
mov
jg
dec
mov
std
push
int
(bad)
lods
pop
dec
jle
sub
sahf
jge
movsx
sub
(bad)
pop
lods
in
push
std
push
(bad)
jl
ins
out
sbb
or
cmp
sub
sahf
jge
movsx
sub
(bad)
pop
lods
in
push
std
push
(bad)
(bad)
lods
sbb
dec
lea
sub
sahf
jge
paddb
in
outs
pushf
jg
dec
mov
mov
cs
pop
mov
sub
fdivr
mov
pop
in
sub
(bad)
sbb
dec
(bad)
jl
ins
out
sbb
or
jle
outs
ins
fdivr
dec
mov
cmp
out
scas
push
std
push
int
(bad)
lods
pop
dec
jle
sub
sahf
jge
dec
cld
pop
in
outs
pushf
jg
or
push
std
push
(bad)
(bad)
lods
sbb
dec
lea
outs
ins
sahf
jge
dec
mov
cmp
out
in
push
mov
cs
pop
mov
outs
ins
sahf
aas
mov
pop
in
sub
(bad)
sbb
push
int
(bad)
mov
outs
ins
sahf
jge
paddb
in
outs
fidivr
out
in
push
mov
ins
out
sbb
or
jle
outs
das
fdivr
int3
paddb
scas
sub
mov
std
push
(bad)
(bad)
lods
sbb
dec
lea
outs
ins
sahf
jge
dec
mov
cmp
out
in
push
mov
lods
sbb
dec
lea
sub
sahf
jge
movsx
sub
(bad)
pop
out
in
push
std
dec
int
(bad)
out
sbb
dec
lea
outs
ins
sahf
jge
dec
mov
cmp
out
in
push
mov
ins
out
sbb
or
cmp
sub
sahf
jge
paddb
sub
(bad)
sbb
or
scas
pop
mov
outs
outs
sahf
jle
dec
mov
aas
into
or
sbb
fisubr
mov
ins
outs
popf
jle
dec
mov
ds
std
push
in
out
sbb
fisubr
mov
ins
outs
popf
jle
dec
mov
cmp
in
out
sbb
fisubr
mov
ins
outs
popf
jle
dec
mov
ds
std
push
in
out
sbb
fisubr
mov
ins
outs
popf
jle
dec
mov
pop
xchg
dec
out
lahf
jnp
pop
int
mov
ds
pop
cli
sbb
pavgb
cmp
imul
mov
or
or
sbb
fist
fstp
cli
mov
cdq
push
mov
dec
fild
iret
dec
stc
or
adc
and
xor
dec
push
push
mov
jb
stos
jg
outs
int
les
pop
out
cmp
sbb
mov
fisttp
retf
mov
mov
adc
xchg
pop
mov
std
aas
(bad)
and
sbb
(bad)
cmp
ins
xchg
js
sahf
jg
pop
push
pop
nop
inc
fnstcw
stc
and
(bad)
aas
loopne
fistp
fnstcw
xor
pusha
sahf
ds
sbb
and
adc
push
fmul
leave
cmp
aaa
std
inc
xchg
xor
cmp
dec
loop
mov
add
repnz
sub
push
cmps
jle
jne
lods
jno
dec
(bad)
ds
push
out
dec
fsubr
enter
stc
(bad)
fisubr
sbb
scas
mov
(bad)
popf
jno
add
jno
fadd
rcr
out
sub
lea
inc
mov
mov
sbb
jmp
pop
loope
mov
in
and
dec
rcr
adc
inc
out
cmp
ficomp
dec
scas
pop
mov
jl
movs
mov
dec
rcr
jno
pop
hlt
or
movsx
clc
jb
bound
ret
and
outs
into
ins
(bad)
jp
and
xor
mov
sbb
mov
and
mov
push
std
jl
inc
les
mov
sbb
mov
lods
push
cwde
outs
movs
pop
mov
rcr
dec
jecxz
(bad)
cld
cmp
stc
dec
test
push
mov
mov
inc
into
aaa
fldenv
leave
cmp
push
paddsb
cmp
sbb
mov
mov
pushf
sahf
jg
dec
std
add
jno
fsub
das
mov
jns
pop
xchg
cmp
call
mov
ret
ss
push
loop
fstp
push
loopne
retf
ins
sahf
subps
pop
mov
and
pop
ret
ss
push
loop
(bad)
in
cmp
sti
loope
push
lahf
sub
(bad)
dec
xchg
pop
scas
cs
in
int
mov
std
or
cli
dec
mov
lods
jp
push
mov
adc
push
and
push
jmp
jmp
jge
dec
mov
pushf
mov
outs
in
pop
into
cmp
add
cmp
sti
pop
sahf
sbb
test
jge
pop
out
jg
popa
cdq
cmp
jmp
ins
mov
scas
or
fwait
pop
popf
outs
in
aam
in
or
pop
loope
fld
rol
mov
sar
mov
mov
pop
mov
pop
or
cmp
dec
(bad)
sbb
lods
jg
jl
sbb
push
sub
or
call
outs
mov
dec
mov
(bad)
ja
cmp
dec
mov
push
(bad)
jmp
out
fnstsw
mov
cmp
fild
leave
cmp
jmp
imul
int3
pop
retf
bound
mov
mov
inc
lods
jo
ss
hlt
sub
daa
cli
sbb
or
or
push
std
push
int
(bad)
lods
pop
mov
outs
ins
sahf
jge
dec
mov
cmp
out
in
push
std
push
int
(bad)
lods
pop
mov
outs
sub
(bad)
sbb
(bad)
dec
mov
mov
ins
out
sbb
or
cmp
sub
fdivr
int3
movsx
outs
popf
jle
dec
mov
mov
ins
out
sbb
fisubr
push
std
push
in
outs
popf
jle
dec
mov
mov
ins
out
sbb
fisubr
cmp
adc
pop
mov
jp
test
jge
popa
movs
dec
enter
loop
repnz
icebp
adc
dec
mov
pop
stos
js
imul
mov
xor
adc
idiv
and
pop
fadd
push
into
ins
mov
mov
std
push
mov
sub
sub
jle
or
repz
dec
lods
dec
cmps
push
lahf
jae
mov
std
and
jb
cs
pop
fisub
call
or
repnz
jmp
mov
add
pop
(bad)
sbb
push
movs
imul
lea
fldcw
adc
cld
ins
sar
mov
cmp
sbb
jns
cmp
jmp
pop
mov
into
jg
jle
in
outs
cwde
addr16
add
jle
outs
push
fnstsw
int
std
push
in
outs
popf
jle
dec
mov
mov
ins
out
sbb
fisubr
push
std
push
in
outs
popf
jle
dec
mov
mov
ins
out
sbb
popf
pop
push
repnz
dec
mov
cmp
fmul
pop
mov
enter
clc
adc
or
dec
std
and
dec
jmp
retf
jl
pop
std
dec
into
xor
sub
sbb
loopne
into
cmp
or
mov
cs
mov
outs
lods
pop
hlt
sbb
sti
pop
jmp
int3
jge
inc
mov
stos
or
ins
mov
inc
lods
pop
fstp
stc
lock
sahf
push
loopne
xlat
jae
pop
stos
sbb
out
lahf
ds
jl
dec
test
sub
jmp
sub
(bad)
sbb
push
int
fstp
pop
leave
arpl
jle
add
xor
ins
les
rcr
out
sub
jp
and
pop
popf
and
sti
inc
(bad)
shl
inc
stos
adc
cdq
xor
inc
aad
fisub
out
push
clc
outs
dec
sti
pop
cld
aas
mov
cmp
xchg
push
scas
cs
stc
or
outs
add
add
and
jb
inc
stos
push
stos
jle
imul
mov
out
sbb
pusha
lea
popf
inc
sbb
pop
mov
pop
in
outs
popf
jle
dec
mov
mov
ins
out
sbb
fisubr
push
std
push
in
outs
popf
jle
dec
mov
mov
ins
out
sbb
fisubr
push
std
push
in
outs
popf
jle
dec
mov
mov
ins
out
sbb
fisubr
push
std
push
in
outs
popf
jle
dec
mov
mov
ins
out
jno
cmp
jle
sbb
sti
or
dec
xchg
sub
dec
stos
dec
into
and
std
and
sub
sbb
sahf
push
cli
sub
bound
ins
lahf
outs
aam
jno
jp
dec
repz
fistp
aas
in
clc
dec
sbb
xlat
pop
in
pop
stos
adc
test
cs
fstp
sub
sub
adc
pop
pop
call
dec
retf
inc
mov
out
js
jnp
int
mov
push
mov
dec
mov
sti
xor
sub
cmp
dec
nop
jne
sahf
imul
sub
fsubr
in
out
dec
ins
sahf
jge
and
inc
lea
xor
mov
and
jle
or
fnstsw
int
std
push
in
outs
popf
jle
dec
mov
mov
ins
out
sbb
fisubr
push
std
push
in
outs
popf
jle
dec
mov
mov
ins
out
sbb
(bad)
and
adc
adc
sub
stos
sbb
dec
test
ja
or
out
or
sahf
adc
inc
stos
inc
mov
test
jl
push
mov
pop
out
repnz
ins
(bad)
jge
sub
pop
ret
cmp
out
sbb
jp
pop
mov
lods
aas
mov
add
icebp
adc
dec
fild
int
lods
pop
lods
jns
outs
out
in
addr16
js
ds
sub
jle
outs
sbb
cmp
popa
lahf
jne
mov
scas
inc
mov
xor
add
adc
and
cmp
dec
mov
(bad)
outs
xchg
inc
sahf
mov
imul
pop
lds
mov
pop
in
jge
dec
retf
das
mov
push
or
ja
addr16
pop
iret
sub
or
out
mov
sub
call
mov
aaa
retf
sbb
add
sub
scas
or
mov
mov
pop
lea
mov
add
out
sbb
pop
jmp
sub
ins
mov
daa
jmp
hlt
or
in
push
out
fld
sahf
sub
xchg
cmp
jns
ins
mov
outs
sti
dec
mov
mov
dec
lea
js
jb
mov
mov
cmp
and
jle
sbb
int
loopne
(bad)
inc
mov
mov
test
pushf
jp
push
cmc
dec
fidiv
ror
pop
jmp
add
adc
and
xor
dec
mov
mov
in
ins
fnstsw
pop
fisttp
sub
dec
add
sbb
jge
xor
or
iret
sbb
cs
jle
daa
cli
dec
hlt
sbb
sub
cmp
pop
mov
dec
mov
pop
fldcw
pop
jmp
ins
cli
pop
clc
jg
pop
retf
bswap
imul
(bad)
notrack
cs
jle
jl
sbb
mov
inc
test
jl
in
push
pushf
push
mov
pop
out
dec
loopne
cld
pop
ins
stc
cmp
add
das
iret
inc
not
ins
xchg
gs
test
ins
(bad)
(bad)
jmp
jle
outs
add
ds
(bad)
adc
inc
popf
cmp
(bad)
mov
ins
test
les
cmc
cmp
sbb
outs
sbb
mov
pop
mov
mov
dec
mov
les
leave
push
call
or
fadd
push
mov
in
outs
xchg
pop
mov
aaa
jmp
lea
or
adc
ins
mov
pop
mov
scas
pop
mov
ins
out
sbb
fisubr
push
std
push
in
outs
popf
jle
dec
mov
mov
ins
out
sbb
fisubr
push
std
push
in
sub
call
mov
ins
out
sbb
fisubr
push
std
push
in
outs
popf
jle
dec
mov
mov
ins
out
sbb
fisubr
push
std
push
in
outs
popf
cmp
mov
fisttp
sbb
clc
sbb
sahf
or
aas
(bad)
das
retf
sub
(bad)
je
lahf
push
xchg
addr16
cmp
cmp
sbb
wbinvd
sahf
jge
or
fidivr
out
in
push
std
push
int
(bad)
lods
pop
mov
outs
ins
sahf
jge
dec
mov
cmp
out
in
push
std
push
int
(bad)
lods
pop
mov
outs
ins
cwde
jge
dec
mov
cmp
or
push
std
push
int
(bad)
lods
pop
mov
outs
ins
sahf
jge
dec
mov
cmp
out
in
push
cld
push
int
(bad)
lods
pop
mov
outs
ins
lahf
jge
dec
mov
cmp
out
in
push
std
push
int
(bad)
lods
sbb
jge
int3
jge
dec
mov
pop
stos
push
xchg
rcr
pop
out
nop
xor
pop
pop
mov
scas
ja
xor
mov
sahf
cmp
and
sbb
pop
xor
popa
call
out
add
cdq
sbb
jae
(bad)
test
pop
jmp
and
or
adc
add
ins
cwde
adc
outs
mov
fnstcw
jle
add
stos
pop
push
lds
into
mov
mov
jecxz
push
mov
ja
pushf
outs
fild
push
dec
jne
jbe
pop
jmp
lods
dec
mov
scas
in
pop
push
(bad)
hlt
mov
leave
rcl
sub
inc
push
and
arpl
ror
shl
sahf
cmps
ficomp
daa
(bad)
std
mov
(bad)
lods
mov
bound
mov
loopne
xor
ret
gs
icebp
(bad)
dec
and
cmp
xor
pop
push
rcl
out
xor
outs
fstp
and
and
out
xchg
retf
pop
dec
mov
cmp
pop
loopne
mov
gs
rcl
inc
stos
jbe
bound
retf
xor
sub
cmp
imul
imul
cmps
(bad)
dec
(bad)
out
sbb
push
mov
xor
sub
(bad)
sbb
push
iret
xor
lods
pop
mov
bound
mov
push
sub
fidivr
or
jo
arpl
cmp
ds
push
adc
cmp
cmp
pop
fisubr
push
sbb
bound
pop
call
clc
sbb
ins
int3
pop
scas
scas
ficomp
dec
ins
in
push
cld
mov
cmp
lods
cdq
push
dec
(bad)
stc
popf
(bad)
sahf
mov
add
cmp
or
ins
into
push
int
fstp
pop
mov
std
sbb
pop
ins
lahf
jae
cs
dec
out
imul
mov
lods
pop
aad
mov
movs
or
dec
mov
pop
mov
movs
ja
popa
jecxz
mov
pop
cmp
sbb
iret
retf
or
(bad)
fucomp
mov
fisttp
cmp
outs
ins
mov
fimul
xchg
cmp
add
fisttp
lea
out
and
cli
sbb
inc
fidivr
dec
mov
stos
fs
sbb
addr16
mov
popf
xor
cmp
sbb
push
dec
not
push
pushf
xor
(bad)
(bad)
jle
shr
xor
sub
(bad)
sbb
stc
or
sub
sub
psrad
popa
fwait
imul
ins
sahf
addr16
dec
ret
das
clc
xor
inc
push
scas
sbb
sbb
ins
into
fild
xchg
inc
in
fdiv
inc
in
cmp
je
and
adc
jl
jp
sub
mov
out
sahf
lods
(bad)
pusha
mov
pusha
adc
mov
(bad)
sub
and
(bad)
pop
and
aad
push
loope
sahf
lea
mov
jg
sub
or
jle
sahf
pop
scas
dec
bsr
jmp
add
jle
mov
lods
pop
pop
cmp
(bad)
out
mov
retf
scas
mov
xor
lea
mov
push
push
into
inc
mov
adc
add
dec
sti
lods
pop
inc
shl
std
push
in
in
fisubr
cmp
xchg
and
or
shr
pop
sub
mov
addr16
ds
stos
fbld
dec
std
(bad)
adc
add
pop
repnz
clc
pop
aaa
outs
fstp
std
hlt
aaa
mov
int
jl
jo
std
lods
(bad)
in
inc
mov
mov
cmp
xlat
jge
inc
dec
xor
int
pop
into
sub
(bad)
jl
ins
lahf
pop
scas
dec
(bad)
mov
(bad)
jmp
pushf
fidivr
test
cmp
jecxz
repz
cmp
sub
fnstenv
leave
add
adc
arpl
push
test
cmp
jecxz
repz
cmp
sub
fnstenv
leave
add
adc
arpl
push
test
cmp
jecxz
repz
cmp
sub
fnstenv
leave
add
adc
arpl
push
test
cmp
jecxz
repz
cmp
sub
fnstenv
leave
add
adc
arpl
push
test
cmp
jecxz
repz
cmp
sub
fnstenv
leave
add
adc
arpl
push
test
cmp
jecxz
repz
cmp
sub
fnstenv
leave
add
adc
arpl
push
test
cmp
jecxz
repz
cmp
sub
fnstenv
leave
add
adc
arpl
push
test
cmp
jecxz
repz
cmp
sub
fnstenv
leave
add
adc
arpl
push
test
cmp
jecxz
repz
cmp
sub
fnstenv
leave
add
adc
arpl
push
test
cmp
jecxz
repz
cmp
sub
fnstenv
leave
add
adc
arpl
push
test
cmp
jecxz
repz
cmp
sub
fnstenv
leave
add
adc
arpl
push
test
cmp
jecxz
repz
cmp
sub
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
push
xor
push
mov
cmp
jne
push
push
mov
mov
mov
mov
mov
call
push
push
mov
call
push
mov
call
mov
lea
push
mov
mov
call
test
jne
pop
xor
pop
add
ret
push
push
push
push
push
push
push
push
push
push
push
push
call
cmp
mov
pop
pop
setne
add
ret
nop
nop
nop
push
mov
push
mov
mov
push
push
push
push
push
mov
call
push
push
push
push
push
push
push
push
push
push
push
call
mov
push
call
seto
push
call
push
call
add
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ja
addr16
push
movs
inc
mov
in
mov
xchg
jbe
inc
mov
movs
es
les
xor
inc
mov
lds
lds
in
shl
add
(bad)
xor
xchg
gs
gs
push
push
xchg
movs
inc
mov
xchg
daa
aad
inc
xchg
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
aam
int
pop
adc
pop
mov
repnz
xlat
shr
xchg
xor
xchg
pop
mov
xchg
daa
sub
push
cmc
mov
sbb
dec
jne
lock
push
sub
mov
vaddps
stos
fistp
xlat
scas
dec
hlt
dec
inc
loop
push
cmp
and
or
jge
bound
or
adc
aam
leave
pop
inc
mov
imul
jne
or
mov
xchg
xchg
stos
mov
mov
outs
add
in
mov
xchg
xchg
sub
clc
leave
mov
int
rcl
sbb
xor
mov
push
shr
cmps
add
xor
pop
inc
xor
lds
jae
out
add
add
sar
xchg
movs
xchg
jp
push
or
mov
dec
(bad)
aad
cmc
dec
loopne
int3
inc
adc
ret
fcom
test
adc
out
(bad)
aam
js
push
jmp
add
shl
jne
nop
adc
in
shl
push
sbb
div
jbe
jo
adc
jae
jnp
xor
test
call
frstor
xor
into
jmp
shr
jnp
call
add
dec
retf
icebp
stos
inc
paddd
addr16
test
retf
cmp
add
jg
les
xor
sbb
inc
jne
enter
test
fsub
pop
or
xchg
scas
div
sub
and
jmp
sbb
out
and
je
lock
cli
repnz
pop
test
stos
sub
aam
nop
addr16
test
inc
mov
dec
fist
idiv
es
xor
push
xchg
xor
xchg
or
inc
aas
mov
in
movs
push
cmc
out
xchg
test
ins
cmp
jmp
ins
data16
movs
retf
sub
inc
cmc
cmps
push
retf
shr
sub
push
lock
xchg
sbb
add
xlat
adc
cmp
pop
jo
and
inc
arpl
in
lds
xchg
push
in
jl
pop
out
fisubr
sub
mov
ret
jp
jl
pop
(bad)
ds
in
ds
push
push
pop
and
in
jnp
leave
mov
inc
lock
xchg
call
movs
pop
fld
cmc
sahf
movs
xchg
ja
pop
push
adc
out
xchg
sbb
cmc
cli
test
cwde
xlat
and
leave
mov
addr16
(bad)
jns
sbb
das
add
iret
and
sbb
jno
gs
arpl
out
mov
or
lds
cmp
cmp
popf
add
xor
xchg
(bad)
ret
test
dec
and
out
scas
out
cmc
jp
sbb
pop
fiadd
mov
xchg
addr16
ja
sub
mov
mov
mov
addr16
sti
cli
inc
in
xchg
aad
std
cld
mov
aam
or
call
mov
iret
or
inc
les
sub
push
and
pop
mov
sub
cmps
mov
adc
xchg
fcmovb
retf
cmps
push
push
jp
add
xchg
sbb
(bad)
jp
mov
xor
je
dec
sub
and
push
cs
inc
aaa
inc
fcomp
movs
add
xor
mov
jnp
shl
xchg
test
push
mov
scas
fsub
push
jl
push
call
xchg
pop
fcom
shl
xchg
movs
xchg
xor
nop
(bad)
sbb
das
lahf
pop
and
iret
push
ror
aaa
sbb
lds
xchg
or
cmp
jno
cmps
xchg
push
sub
cmp
retf
(bad)
(bad)
xor
inc
jmp
dec
mov
jnp
mov
and
stos
idiv
sub
clc
mov
mov
dec
lea
sbb
mov
arpl
(bad)
xchg
out
pop
in
js
add
aad
add
adc
and
jge
rcr
xchg
adc
mov
pop
call
mov
jmp
pop
add
or
stos
arpl
adc
jge
fstp
add
xor
cld
dec
in
adc
aaa
and
push
mov
inc
es
push
gs
cs
dec
pop
jae
js
mov
jb
pop
icebp
sub
call
shr
jbe
push
sub
jne
inc
pop
sbb
je
and
pop
inc
jb
out
ret
fucomp
mov
outs
es
inc
jnp
sbb
xor
jl
xor
push
mov
jno
pop
xchg
xchg
push
jne
or
sub
lds
sbb
enter
dec
pop
pop
fisubr
xchg
pop
pop
imul
dec
sub
ja
jle
add
dec
test
pop
or
fbstp
hlt
test
cmp
movs
int3
jecxz
add
xchg
inc
test
jb
sbb
aaa
mov
retf
cmp
pop
lahf
inc
clc
loopne
lea
ret
xchg
lock
sub
ss
push
movs
pop
mov
lds
outs
clc
loopne
add
jmp
aas
into
cs
xchg
xchg
jnp
mov
and
aaa
sub
clc
add
inc
mov
ret
mov
sbb
xchg
and
cmps
cmp
mov
sbb
xor
cmps
cmc
loop
ret
pop
fs
push
out
jg
xor
(bad)
sbb
xor
in
and
outs
aad
mov
jmp
xchg
xchg
sbb
aaa
xchg
jo
push
pop
sbb
lds
xchg
jb
sbb
repnz
sub
arpl
scas
fwait
push
call
push
call
sub
add
sbb
inc
jo
and
adc
inc
inc
pop
pop
cmps
push
cmc
inc
pusha
outs
lahf
adc
jmp
(bad)
ja
in
xchg
neg
je
cdq
jp
das
mov
or
adc
sar
or
mov
cmps
imul
and
call
ins
daa
jmp
stc
(bad)
ins
push
add
sahf
(bad)
xor
add
lea
mov
sbb
pop
in
mov
xchg
lds
xchg
sbb
pop
cmp
daa
sub
cli
fs
gs
cmps
pop
shl
int
sbb
inc
dec
pop
dec
dec
lds
call
jo
push
(bad)
mov
repnz
test
xchg
sbb
pop
pop
hlt
or
jmp
icebp
movs
aad
xchg
iret
xchg
test
pop
mov
dec
xor
cmps
adc
mov
pop
and
xchg
ja
jecxz
push
movs
mov
je
sbb
je
sbb
test
xor
push
leave
inc
adc
push
lock
sti
popa
(bad)
and
pop
jno
adc
mov
cmp
push
pop
into
jecxz
xchg
jge
add
xchg
retf
neg
pop
mov
es
aaa
jge
loopne
jae
cmp
sub
mov
sbb
sub
pop
(bad)
inc
jo
xor
add
inc
ds
jnp
dec
in
add
out
xlat
xchg
dec
mov
aad
xchg
fld
xchg
movs
jnp
in
hlt
xor
push
push
sar
mov
enter
movs
inc
sahf
fild
push
fsubr
jmp
(bad)
jle
pop
stos
sahf
mov
das
mov
(bad)
dec
sub
xchg
sub
mov
sub
mov
out
cmp
sbb
aam
leave
add
mov
lods
aam
jmp
loopne
mov
adc
jp
push
jg
inc
(bad)
inc
dec
mov
pushf
xchg
mov
test
mov
xchg
call
push
lods
inc
ret
adc
xchg
outs
(bad)
or
out
sub
retf
ror
adc
popf
jae
arpl
mov
js
pushf
loope
lock
mov
add
cmps
dec
push
cmp
xchg
in
fdivr
js
outs
nop
fs
cmp
inc
push
pop
arpl
jo
(bad)
out
popa
push
in
out
movs
sub
fisub
fidivr
cmp
scas
push
lock
mov
xlat
out
push
movs
pop
mov
repnz
push
dec
out
retf
or
adc
pusha
mov
xor
retf
pop
mov
ins
xchg
nop
dec
dec
ds
daa
sar
xchg
jl
xchg
dec
xchg
jp
cmp
xchg
out
je
cs
pop
cmp
jno
(bad)
in
jp
jl
xchg
push
cmp
call
xor
popf
pushf
xchg
into
or
jb
dec
outs
cmp
add
mov
cmp
fisub
mov
sbb
test
ds
mov
stos
push
mov
outs
sub
lods
xchg
mov
jp
push
mov
xchg
daa
sub
pop
out
in
mov
xchg
xchg
sbb
or
dec
push
adc
aas
mov
adc
jl
stos
push
mov
data16
test
ins
lock
mov
cmps
xchg
fcom
in
jb
daa
fstp
sbb
mov
lods
dec
push
push
ds
jne
(bad)
lds
and
mov
out
xlat
jbe
arpl
xchg
mov
cs
addr16
fsubr
xor
push
and
sahf
mov
shr
xchg
sub
push
cmc
xchg
xchg
pop
mov
leave
sub
sahf
pushf
clc
stc
pop
into
neg
ret
mov
push
push
out
xchg
xchg
outs
ins
ficom
mov
imul
push
mov
jecxz
(bad)
mov
or
dec
je
pop
fist
and
and
or
xchg
rcr
jmp
lds
fstp
into
jp
or
pop
in
xor
popa
fsub
and
into
mov
push
lods
not
lock
into
pop
inc
sbb
mov
cmps
adc
sub
jp
daa
aad
mov
cmp
dec
lea
daa
or
jnp
scas
xlat
sub
cmp
dec
je
call
(bad)
es
cmp
mov
cmps
gs
(bad)
(bad)
push
out
idiv
outs
clc
mov
mov
sub
retf
jne
jno
xchg
adc
push
or
pushf
mov
es
xchg
dec
pusha
xor
push
dec
mov
sub
mov
es
loopne
pop
xchg
shl
jne
jp
xchg
push
test
in
mov
pop
adc
mov
cmps
xchg
daa
cmps
jne
shl
stos
mov
ins
push
in
mov
dec
test
adc
cmps
call
fisub
mov
pop
push
add
xlat
int
jne
enter
cmovbe
sbb
xor
add
push
push
daa
xor
inc
ins
sahf
xlat
addr16
leave
mov
fs
mov
and
mov
dec
daa
gs
or
jnp
mov
movs
cmps
or
cld
push
pop
push
and
das
mov
mov
ins
push
call
outs
(bad)
xor
push
xchg
movs
int3
inc
ficomp
lods
mov
jb
int
dec
pop
pop
lahf
cdq
or
jg
outs
xchg
push
cs
mov
pushf
xchg
out
mov
ds
push
xor
lahf
arpl
jae
cwde
push
fdivrp
int3
dec
popa
add
sbb
ins
adc
cmp
cmps
gs
mov
test
gs
lods
xchg
cdq
in
jle
add
dec
pop
mov
in
xchg
cmp
jge
(bad)
or
and
ins
loopne
push
pop
sahf
ret
mov
xchg
xor
(bad)
(bad)
(bad)
cmps
push
or
cdq
pop
add
lea
xlat
popf
(bad)
sbb
int3
cdq
lahf
mov
shl
sub
popa
pop
lock
mov
mov
pop
inc
scas
(bad)
dec
out
inc
cmps
in
cmp
es
pop
xor
pop
adc
icebp
mov
cwde
add
mov
mov
retf
arpl
and
xchg
iret
test
mov
lds
jge
pop
cmp
mov
jo
test
icebp
sbb
loop
loop
add
xor
pop
div
aaa
lds
test
push
in
in
push
push
ror
retf
add
rol
pop
clc
inc
jecxz
dec
ss
outs
xor
mov
sub
icebp
hlt
ret
cmps
push
sbb
outs
cmp
push
and
sbb
iret
mov
dec
iret
adc
or
stos
fdivr
(bad)
mov
shl
mov
(bad)
enter
out
dec
aaa
dec
lahf
aam
cmp
test
stos
fcomp
and
fsub
inc
dec
jp
(bad)
aad
ins
mov
mov
push
das
fdiv
sub
loopne
in
cmp
daa
test
dec
cmc
jp
and
rol
mov
call
adc
dec
stos
xor
out
in
stos
mov
mov
in
into
jmp
rcr
cmp
mov
lea
popa
push
push
es
xchg
ja
cwde
and
mov
fistp
in
mov
(bad)
and
outs
mov
xor
(bad)
adc
(bad)
mov
in
cmc
test
pop
daa
push
test
iret
fsubr
xor
sete
inc
movs
test
data16
mov
adc
pop
xchg
(bad)
aad
push
stos
pop
pop
jo
inc
dec
dec
imul
cmc
xchg
push
sbb
in
stos
inc
mov
pop
and
add
mov
dec
(bad)
xchg
mov
ret
out
adc
or
mov
sub
(bad)
repz
mov
dec
mov
nop
in
xchg
movaps
cmp
cmp
cmc
daa
icebp
jmp
adc
jnp
cli
shl
movs
scas
cmp
mov
push
scas
jl
mov
pop
inc
test
(bad)
mov
stc
stos
loopne
dec
jb
stos
pop
imul
adc
repnz
dec
xchg
xchg
lea
dec
jp
jecxz
cmc
fcmovu
enter
rcr
fbstp
push
xchg
stos
enter
and
inc
call
pop
xor
out
pop
test
js
inc
cmps
pminub
ret
or
inc
mov
mov
cwde
pop
or
es
ret
and
test
jb
or
xor
(bad)
retf
inc
lds
pop
cmps
jmp
xchg
pop
mov
mov
pop
movs
xchg
mov
add
repz
(bad)
cmp
add
lahf
mov
push
daa
outs
jne
fisubr
outs
jb
repz
jmp
dec
xor
xchg
and
cmps
test
ja
addr16
movs
and
ret
adc
cmp
loop
xchg
call
aaa
sbb
retf
lds
(bad)
mov
cmc
idiv
aam
aam
or
jg
retf
or
cmp
and
icebp
idiv
aam
addr16
shl
mov
mov
jmp
mov
jp
and
dec
enter
call
mov
mov
sub
loope
jmp
sub
outs
xchg
xchg
jp
sbb
test
dec
mov
add
or
mov
fimul
jno
dec
mov
call
push
pop
or
mov
cmc
xor
mov
or
add
mov
and
repz
mov
xchg
call
xor
dec
retf
gs
pop
cmp
and
outs
enter
fbstp
push
jle
cli
movs
jmp
add
push
rcr
fist
repz
in
out
or
jmp
shr
mov
jge
fisub
pop
retf
inc
(bad)
sbb
sbb
sub
dec
xor
mov
paddd
cmp
outs
dec
push
mov
jo
mov
hlt
xchg
inc
push
outs
xchg
xchg
jp
sbb
test
cmp
ret
jmp
push
jo
inc
push
call
push
loop
daa
popf
mov
aaa
sbb
inc
pop
test
sbb
pop
and
fist
mov
movs
pop
sub
pop
pop
push
sbb
(bad)
ficom
fsubr
mov
jp
add
cmp
test
push
sbb
aas
iret
cmp
out
mov
ret
or
test
dec
sub
call
add
pop
jbe
lea
aaa
mov
xchg
movs
scas
dec
mov
fcomp
ret
or
sbb
dec
cmc
sub
ja
mov
stos
mov
dec
enter
inc
shr
cmc
test
retf
pop
punpckhwd
addr16
pop
out
dec
mov
or
mov
hlt
xchg
or
test
lock
fld
js
push
out
sub
mov
lds
push
test
aaa
dec
xor
inc
cli
mov
call
ret
inc
ds
cli
(bad)
cmps
xchg
push
ds
mov
or
movs
jmp
pop
ror
call
xchg
pop
test
sbb
mov
pop
fimul
cmp
pop
push
fsub
mov
cmp
push
pop
mov
or
lds
pop
xchg
(bad)
sub
lods
sub
inc
jne
jp
sbb
lds
loop
outs
sahf
pop
popf
(bad)
(bad)
loopne
cs
mov
je
ja
xlat
fist
mov
pop
pop
in
jle
inc
mov
addr16
dec
mov
pop
out
cli
aaa
and
push
in
stc
pop
or
add
xchg
adc
add
push
sbb
jmp
in
mov
push
inc
imul
or
jecxz
pop
mov
stc
cmp
xchg
xor
xchg
mov
inc
ror
sub
lds
jp
out
inc
pop
add
add
test
movs
xchg
arpl
add
add
xchg
and
xor
push
add
adc
inc
sbb
mov
sbb
push
data16
gs
cli
or
cdq
adc
inc
mov
inc
call
ins
cmp
cmp
inc
mov
jne
clc
pusha
push
fidiv
es
mov
mov
jmp
sti
add
lahf
(bad)
fwait
push
adc
(bad)
aad
cmps
jecxz
jp
out
xlat
jecxz
retf
dec
add
rcr
mov
xchg
xchg
sbb
mov
dec
pop
sub
ds
vcvtsi2sd
adc
stos
push
out
xchg
jecxz
push
jp
push
pop
push
and
cmp
mov
std
aas
push
pop
int
jo
and
push
call
inc
popa
xchg
outs
add
aad
push
out
outs
and
in
push
inc
int
aad
xlat
add
push
out
shr
jp
push
mov
test
push
fs
shr
dec
add
push
adc
fsub
test
les
or
dec
inc
dec
mov
ficom
(bad)
in
int3
push
sub
dec
mov
push
push
shr
clc
std
sub
or
test
add
mov
imul
or
mov
or
in
and
jp
scas
pop
sysexit
pop
pop
outs
js
inc
jmp
mov
add
vmovsldup
lds
stos
or
popa
jg
iret
mov
gs
pop
outs
popf
jg
jg
xor
ss
je
(bad)
in
repz
pop
pusha
cmp
sbb
mov
retf
pop
es
sub
pop
or
xor
xchg
jae
rcr
push
mov
mov
fcomp
pushf
or
xchg
and
push
pop
int3
movs
aas
dec
das
lds
out
rcl
mov
sbb
adc
mov
push
ds
jle
mov
pusha
sub
cmp
add
outs
loop
mov
scas
fsub
xchg
mov
inc
jle
cmps
stos
sahf
aam
mov
cmps
mov
or
jnp
mov
popw
mov
mov
into
jae
scas
or
retf
int
mov
mov
xchg
pop
test
push
dec
shl
or
inc
jg
and
dec
push
mov
inc
gs
cwde
sbb
cmc
inc
in
lds
pop
rcl
lods
jle
mov
sub
push
pop
out
in
sub
shl
or
push
cs
dec
daa
stc
pop
mov
out
xlat
sbb
or
dec
adc
test
cmp
sub
pop
cmc
cmp
mov
mov
cmps
sbb
cmp
mov
aam
inc
fbstp
sub
inc
hlt
test
cmps
fwait
pushf
es
lahf
test
ss
push
loope
cmc
je
fs
cwde
inc
popf
push
xchg
add
test
div
scas
daa
pop
pop
in
cmc
mov
lahf
xchg
mov
(bad)
lock
pop
in
fisub
and
fpatan
fistp
sbb
test
(bad)
and
shl
mov
cmp
hlt
push
addr16
mov
sub
add
cmp
xlat
aas
cmp
fld
cld
push
mov
mov
mov
pop
inc
push
or
cli
out
xlat
xchg
(bad)
cmp
ret
dec
cwde
xchg
push
cmc
scas
cmp
out
and
pop
pop
std
cmp
cmp
ret
sub
retf
aaa
push
mov
adc
arpl
stos
frstor
cmovbe
jne
int3
clc
adc
push
cmp
not
fist
mov
sbb
sub
test
add
pop
out
imul
cmp
sub
push
xchg
aam
add
pushf
mov
data16
lds
retf
es
mov
je
jmp
addr16
xchg
inc
jno
push
repz
jae
add
aad
shl
js
frstor
hlt
es
test
mov
dec
daa
test
push
mov
mov
xchg
mov
xlat
push
push
sub
ds
in
xchg
push
popa
xchg
push
ds
aam
push
aas
pop
jmp
sub
adc
or
ja
aaa
sbb
add
mov
mov
adc
fild
sbb
ja
pop
xlat
cmps
mov
dec
xchg
aam
or
out
stos
sub
mov
lahf
imul
push
test
fs
pop
pop
outs
inc
jne
mov
push
aas
jl
mov
in
add
movs
xchg
push
in
jbe
jo
adc
repnz
add
or
loopne
outs
dec
ror
scas
mov
push
shl
pop
addr16
test
inc
hlt
jle
and
loopne
sub
mov
mov
xchg
icebp
out
xchg
lahf
dec
jl
xchg
pop
push
shl
idiv
or
xchg
pop
outs
push
cmp
mov
jg
inc
pop
aas
adc
mov
jne
rcr
xchg
aas
ds
push
pop
aaa
iret
stc
xchg
pusha
mov
test
push
lea
pop
push
repz
mov
cmp
xchg
fsubr
lods
or
stos
movs
adc
ja
es
add
mov
fwait
jmp
pop
test
mov
sbb
sub
leave
mov
push
xchg
cmc
mov
xchg
pop
in
into
lods
jg
daa
in
faddp
loope
jbe
push
jae
sub
inc
add
mov
les
mov
add
sbb
jecxz
mov
fs
push
or
cld
enter
cs
mov
nop
push
cmc
push
js
adc
pop
mov
addr16
cli
test
call
fild
jp
add
in
sub
(bad)
(bad)
data16
(bad)
jno
jne
call
fcmovnbe
pop
sbb
or
icebp
loopne
pop
push
sub
jg
and
and
out
cmp
loope
push
cmps
jbe
pop
out
test
leave
xor
cmps
rol
add
hlt
or
adc
mov
popf
neg
lods
cmps
dec
xor
sbb
cmps
push
jg
and
push
mov
retf
and
jl
mov
mov
pushf
frstor
jg
out
jns
cs
je
lods
lds
push
xchg
pusha
dec
nop
cmp
mov
xor
jnp
push
mul
adc
fisttp
push
push
ss
scas
or
xchg
cld
out
ds
test
xchg
mov
cmp
sbb
std
test
add
pop
repnz
(bad)
jge
sbb
call
nop
cmps
push
xchg
jb
push
mov
xor
push
dec
push
(bad)
cld
scas
addr16
cmp
cmc
in
std
sbb
mov
xor
cmps
push
sub
ins
push
sub
fadd
adc
sbb
inc
lods
(bad)
aad
xor
pop
movs
or
sub
cmps
scas
push
and
je
int3
daa
xchg
pop
push
xchg
xlat
xor
pop
sub
ds
movs
inc
ja
pop
fs
sbb
or
or
aad
addr16
mov
adc
mov
inc
in
fsub
ss
pop
and
pop
adc
cwde
xchg
dec
js
inc
scas
xchg
sbb
xchg
and
loopne
imul
xchg
inc
push
ds
xor
rol
pop
(bad)
jo
mov
enter
mov
xchg
sbb
mov
(bad)
out
es
daa
cdq
xor
sbb
or
mov
out
push
aam
mov
icebp
pop
cmps
or
mov
sbb
inc
test
fmul
out
sbb
fild
push
mov
xchg
ins
mov
add
out
mov
inc
pusha
sbb
popa
test
inc
test
inc
xlat
mov
mov
mov
test
mov
shr
lahf
push
jg
push
test
mov
mov
and
gs
call
mov
mov
xchg
xor
cmc
mov
out
cmps
pop
mov
shr
sub
into
gs
mov
gs
or
mov
add
out
in
lahf
scas
(bad)
movs
xchg
xor
les
xchg
xor
push
pop
pop
mov
test
push
scas
lahf
(bad)
aaa
sub
les
mov
lods
lds
data16
cmp
inc
or
fcmovb
or
sub
ja
data16
test
adc
push
mov
jge
or
ja
inc
cmps
lea
test
push
fs
mov
mov
xor
or
mov
inc
xchg
arpl
xor
data16
mov
xchg
jg
pop
cmp
inc
cmps
push
inc
fs
jno
lods
dec
mov
cmps
nop
addr16
repnz
data16
push
add
aas
sub
adc
xchg
jae
das
pop
cmps
rol
imul
clc
sbb
xlat
scas
add
or
xchg
push
enter
test
xlat
inc
int
sub
ja
cmc
sbb
adc
les
xchg
sub
xchg
sub
in
jb
(bad)
stos
sub
mov
or
push
jecxz
aas
jecxz
fnstsw
js
fwait
sub
sbb
jl
rcr
cmps
pop
jle
cli
sbb
xlat
stos
dec
retf
push
pop
pushf
ins
xchg
cld
test
enter
xchg
inc
in
cmc
neg
ror
inc
rcl
dec
out
pop
xchg
pop
iret
inc
mov
pushf
mov
cmc
jl
out
fcmovnu
mov
pushf
rcl
jge
inc
cmp
pop
(bad)
enter
out
(bad)
mov
mov
dec
mov
mul
loop
repnz
mov
push
je
dec
add
mov
pop
and
cmc
inc
out
fucomip
lea
fmul
and
ja
adc
jle
push
or
shr
cld
int
mov
push
pop
fsub
dec
jl
add
dec
lahf
inc
sub
xor
lods
outs
add
test
sub
or
mov
jo
adc
push
fwait
push
lods
jle
sti
stos
fistp
pop
jp
or
jg
lods
sahf
test
fs
out
pop
ss
icebp
cmp
push
shr
adc
adc
sub
or
rcr
loop
mov
in
imul
or
sti
jecxz
xlat
xor
lock
mov
imul
(bad)
int3
jecxz
dec
and
push
int3
jle
in
sahf
pop
xlat
loop
xor
push
rcl
add
ja
inc
shr
add
mov
outs
popa
jl
daa
sbb
leave
and
inc
or
out
xlat
scas
inc
cmc
jbe
dec
ficom
push
push
add
cmp
aas
ins
daa
mov
stos
jo
out
mov
inc
mov
std
movs
repnz
jp
push
stos
fdivr
aad
movs
(bad)
in
test
cmps
pop
xchg
out
or
rcr
lahf
mov
ins
sahf
pop
jbe
jbe
mov
gs
mov
jg
das
sahf
pop
lods
inc
enter
adc
cli
inc
cli
mov
adc
(bad)
out
jmp
mov
test
jge
out
cmps
mov
ror
sbb
push
out
call
push
xchg
mov
adc
push
movs
retf
and
pushf
in
xor
icebp
xor
retf
sti
repnz
js
mov
xchg
lods
jnp
nop
leave
cmc
or
sbb
jnp
or
jns
inc
fwait
add
fist
lds
test
pop
add
add
cmp
mov
cmps
pop
retf
lock
jmp
les
test
cmps
dec
or
add
cmp
dec
xor
xlat
cmp
les
sahf
push
frstor
call
ss
push
adc
adc
fdivr
sub
ja
adc
pop
push
div
mov
mov
inc
out
sbb
cmp
inc
and
pop
xchg
(bad)
fdiv
les
aam
lock
and
mov
mov
and
stc
mov
jg
cwde
push
push
es
rcl
pop
out
mov
stc
rcr
pop
stos
xchg
daa
(bad)
jne
jp
call
mov
ins
sbb
dec
mov
test
dec
(bad)
sub
aad
outs
test
imul
inc
(bad)
fcomi
or
adc
jo
cmps
add
mov
out
adc
inc
call
repz
push
loopne
loope
cwde
addr16
sub
jnp
aas
call
into
mov
les
aad
nop
mov
loop
cs
aad
cmp
in
pop
push
add
and
outs
enter
cmp
(bad)
sbb
sahf
pop
push
(bad)
dec
inc
sub
adc
mov
add
xlat
add
ficomp
mov
(bad)
data16
call
push
es
mov
sahf
mov
mov
jo
add
shl
jns
clc
xchg
and
jg
pushf
mov
pop
mov
or
mov
addr16
adc
mov
and
jge
cmp
repz
mov
pop
and
jmp
aad
push
div
imul
inc
mov
push
es
aad
aam
adc
and
fwait
scas
(bad)
movs
fidivr
cli
aad
or
shl
in
test
cmc
push
and
xchg
inc
mov
arpl
xchg
popa
ret
or
std
pop
movs
adc
inc
dec
aas
out
(bad)
fadd
mov
add
(bad)
push
repnz
seta
xchg
inc
(bad)
call
daa
adc
lods
loop
out
call
push
shl
clc
ja
fwait
push
adc
dec
adc
sub
ins
lahf
stc
out
aas
jne
pop
sub
push
jns
or
rol
pop
outs
push
or
adc
fldcw
push
push
dec
mov
add
sar
js
add
cmp
int
(bad)
jnp
(bad)
shr
xchg
push
dec
mov
sti
daa
and
fistp
int3
mov
cwde
xlat
pusha
nop
dec
mov
arpl
push
cmps
inc
lock
pop
ins
mov
or
pop
or
outs
xchg
popa
lds
push
and
aas
xchg
in
or
sub
jbe
or
mov
fwait
lds
test
fbstp
shr
addr16
xchg
adc
sbb
jne
shl
test
or
pop
xor
push
imul
call
pop
mov
out
push
test
outs
jle
cmps
or
call
or
xchg
scas
mov
call
and
push
std
repnz
adc
aad
mov
iret
inc
mov
sar
sub
inc
out
pop
fisub
inc
into
add
sbb
add
aad
cmps
clc
cmc
cmp
pusha
pop
stc
cmp
fwait
and
xor
movs
dec
ror
das
rcr
(bad)
mov
sub
(bad)
(bad)
(bad)
(bad)
addr16
pop
iret
mov
xchg
jp
out
sub
hlt
cli
adc
(bad)
call
xchg
je
push
(bad)
sbb
mov
mov
sub
aad
cmp
jb
out
call
add
xor
cdq
popa
push
das
daa
cmps
mov
icebp
cwde
add
jg
push
cmc
pop
(bad)
xlat
add
pop
add
into
cmps
jle
and
daa
test
sub
daa
pop
dec
outs
mov
adc
(bad)
(bad)
fimul
xor
pop
push
sbb
mov
jnp
xchg
push
das
mov
sub
aas
xchg
xor
call
pop
ins
add
push
(bad)
xor
add
xchg
mov
push
xchg
adc
push
loop
xor
push
cmp
movs
add
mov
jecxz
cmc
jl
and
xlat
es
dec
mov
and
sub
je
or
test
je
mov
out
test
pop
test
retf
loop
jg
js
mov
inc
cmp
jne
pop
jmp
cli
repnz
(bad)
pusha
cmp
jns
(bad)
movs
fdiv
shr
push
repnz
aad
cmc
push
in
or
pop
cmps
push
xchg
clc
push
jnp
add
repnz
add
das
shl
xor
les
out
cs
add
cmps
mov
jb
ds
push
arpl
jmp
int
xchg
ds
aaa
scas
or
rol
push
out
inc
dec
xor
int3
or
out
ds
add
jmp
xlat
frstor
in
push
fs
dec
adc
xchg
push
lods
dec
xor
mov
jl
call
test
mov
outs
push
and
mov
add
push
adc
fcom
inc
shl
js
gs
sbb
test
dec
daa
pop
mov
push
fsubr
or
pop
sub
mov
dec
jnp
sbb
dec
mov
cmp
nop
(bad)
fmulp
aad
stc
es
pop
les
push
jg
fisubr
and
jbe
mov
pop
and
add
retf
neg
and
push
fld
xlat
fcomp
inc
(bad)
sub
mov
es
dec
push
in
push
cmps
outs
and
jp
ret
inc
in
pop
lds
mov
repz
push
ins
add
jmp
stos
pop
jne
inc
inc
xchg
adc
inc
loop
sub
(bad)
or
mov
xchg
out
jo
push
sbb
stos
test
sub
popf
daa
xchg
aam
inc
cmc
mov
sbb
mov
(bad)
jmp
dec
fidiv
loopne
test
fcomi
jl
sub
xlat
jl
std
mov
fs
shl
retf
mov
jge
jns
out
dec
xchg
pop
outs
add
pop
lods
dec
push
jne
cmps
push
shl
mov
pop
cmps
test
out
sub
and
push
jne
xor
mov
jnp
repnz
dec
in
lds
cli
mov
mov
retf
pop
push
aad
xchg
je
xchg
push
stos
into
mov
cmp
aad
mov
or
push
mov
xor
retf
mov
inc
lock
mov
out
dec
daa
ins
push
inc
mov
scas
push
pop
pusha
dec
mov
shl
dec
test
inc
nop
aaa
lock
push
les
cmp
sub
test
mov
cmp
mov
sbb
xchg
cmps
add
ins
xchg
ficomp
dec
addr16
fist
mov
repnz
xchg
fcmovbe
fnstenv
cdq
xchg
mov
sti
les
dec
out
call
cli
es
push
gs
cmp
xor
pop
xchg
test
gs
aad
jb
lea
xlat
in
jo
test
arpl
jl
jp
sbb
sub
or
mov
or
push
stos
adc
addr16
enter
jo
xor
(bad)
cwde
popf
test
scas
je
inc
jle
jmp
js
aad
pop
pop
jle
jbe
xor
js
mov
xor
loop
inc
inc
xlat
pusha
mov
dec
and
and
xchg
movs
retf
add
xchg
call
inc
out
sub
xor
fs
leave
cdq
lds
not
retf
xchg
loope
pop
cmp
inc
mov
adc
mov
sti
pop
sbb
test
sub
jae
stos
adc
repnz
inc
ret
cmp
cmp
dec
or
das
cmc
icebp
lds
js
movs
sbb
mov
(bad)
mov
(bad)
imul
stos
and
sub
pusha
adc
jp
fs
dec
pop
les
aam
test
pop
push
pop
xchg
aaa
cmps
inc
retf
cwde
(bad)
js
add
sar
dec
retf
in
ja
xlat
jne
or
pop
test
bound
pop
xor
fidivr
jmp
jecxz
lds
arpl
sub
mov
jg
mov
fst
pusha
xchg
retf
pushf
push
imul
imul
retf
add
pop
jmp
shl
cli
sbb
sub
xor
xchg
ins
push
mov
fnstcw
jmp
movs
mov
aad
sub
mov
les
cli
cdq
cmps
or
stos
cmp
ficomp
leave
enter
pushf
mov
leave
pop
and
cmps
sar
call
test
pop
mov
sub
div
xchg
jecxz
retf
stos
pop
and
xor
pop
pop
lock
cmp
test
clc
add
add
popa
popa
push
outs
sbb
lds
out
test
adc
mov
ins
mov
jle
out
xchg
pusha
add
push
xor
leave
stos
inc
and
mov
or
rcr
jno
ins
idiv
(bad)
ror
xchg
mov
out
sbb
cmp
cmc
jl
stos
movs
sub
not
sub
aam
ins
in
popf
adc
lods
adc
add
sbb
pop
fld
cmp
lds
mov
dec
xchg
aad
adc
cmc
jl
jecxz
mov
xchg
xor
mov
aam
mov
mov
das
adc
dec
push
pinsrw
mov
std
cmps
and
push
jne
test
dec
mov
test
and
adc
mov
call
loope
sbb
xchg
or
adc
mov
dec
push
cmp
jns
mov
xchg
aam
ror
das
cmp
rep
out
mov
add
xchg
rcr
in
sub
pop
mov
addr16
ja
mov
movs
shl
inc
fldenv
push
test
xchg
inc
test
ja
ret
push
or
mov
frstor
mov
std
jbe
out
xchg
daa
nop
imul
lock
mov
mov
mov
pop
in
mov
(bad)
adc
in
push
cmps
jbe
add
xchg
fsubr
in
sahf
outs
test
jl
je
push
scas
push
cmp
inc
and
xor
and
sbb
adc
or
jb
pop
xchg
mov
and
sahf
jo
inc
rcl
adc
or
mov
sub
adc
add
icebp
or
or
std
xchg
sbb
mov
out
mov
inc
xchg
sbb
je
mov
add
call
aas
cmp
imul
jge
lea
fsub
and
arpl
xchg
push
sub
cld
mov
test
jno
jp
sbb
cs
cmp
stos
add
(bad)
xor
pop
cdq
xchg
lock
jne
xchg
xor
push
mov
xchg
or
xlat
inc
enter
lahf
and
ja
or
mov
dec
inc
push
pause
mov
cmp
adc
sub
sti
gs
and
fmulp
test
jb
daa
add
nop
mov
idiv
repnz
mov
cmps
push
std
and
xor
inc
dec
xlat
cld
je
dec
in
jge
xor
sub
mov
scas
inc
push
gs
xor
xchg
mov
adc
mov
(bad)
call
sub
not
daa
std
lods
hlt
fsubr
sub
iret
pusha
dec
sbb
mov
and
push
push
push
mov
inc
push
mov
dec
call
(bad)
mov
out
xchg
mov
dec
je
pushf
lods
fst
in
xor
jno
rcr
ffree
into
mov
loop
mov
hlt
jp
xchg
pop
lods
mov
aad
add
jbe
test
inc
cli
push
std
call
fisub
iret
aad
mov
out
cs
push
je
addr16
jle
imul
test
jno
movs
mov
mov
mov
inc
ja
mov
stos
mov
ja
pextrw
and
adc
test
sub
nop
pop
fwait
mov
lock
jnp
jbe
inc
cmps
push
xchg
jno
int3
mov
pusha
cmps
mov
sub
jb
mov
arpl
in
sub
ja
in
sbb
idiv
push
push
in
mov
xchg
and
mov
sahf
ja
data16
mov
es
in
mov
stc
ins
sub
dec
mov
out
mov
or
xor
cmp
inc
mov
idiv
mov
cmc
in
jecxz
movs
ja
cmp
test
push
jae
dec
enter
(bad)
add
addr16
mov
push
out
fdiv
nop
rcl
rol
xchg
push
mov
fadd
jbe
dec
fnstenv
movs
data16
sub
(bad)
shr
cmc
mov
es
push
int
js
std
cmps
push
sar
js
add
addr16
push
fcomp
popf
cli
loope
and
aaa
push
add
mov
and
scas
push
pop
(bad)
jb
push
out
test
jmp
cmps
xchg
enter
or
push
loope
inc
jg
in
jg
repz
cmp
dec
or
call
dec
dec
mov
push
(bad)
pop
mov
aam
cmps
lods
in
dec
pop
or
sbb
ds
adc
jl
rol
pop
push
dec
ret
sub
mov
clc
popa
mov
in
loop
xor
adc
lds
fwait
jns
test
inc
mov
cmp
push
clc
out
pop
cmc
push
ss
aam
lds
mov
inc
mov
cli
jb
push
int3
mov
call
cmps
xor
mov
push
fwait
test
pop
jge
je
dec
aam
int
(bad)
or
aas
(bad)
(bad)
int
out
test
cmp
push
clc
mov
xchg
mov
adc
mov
or
in
or
and
sbb
pop
inc
call
(bad)
dec
mov
ins
(bad)
out
sub
call
inc
or
cmp
sbb
or
ja
sub
dec
std
cmp
mov
xchg
push
gs
stc
jle
les
mov
shr
rol
push
push
cmp
pushf
sbb
push
loopne
lock
data16
shl
loopne
nop
out
xchg
lahf
xor
aam
in
hlt
jb
sub
movs
and
inc
add
bound
aad
mov
adc
test
stc
add
into
mov
jge
pop
add
push
hlt
test
inc
out
pop
loop
rcr
xor
aam
mov
pop
mov
daa
add
and
in
xchg
mov
test
ins
add
aad
adc
cmc
or
sbb
jbe
ins
sbb
mov
(bad)
(bad)
fcom
dec
mov
dec
out
arpl
into
sub
in
push
sub
sub
lods
and
fld
test
or
(bad)
das
aam
out
cmp
repz
and
jl
mov
mov
outs
cdq
aam
int3
cmp
lods
mov
mov
inc
mov
pop
scas
dec
xor
sbb
xor
sbb
inc
lds
call
mov
and
jnp
xchg
ins
xchg
fbld
loope
push
mov
sbb
imul
and
ja
pop
iret
retf
cmp
popf
push
and
push
imul
jno
cmps
stos
lahf
arpl
clc
mov
test
dec
ret
enter
loop
xor
movs
push
fnsetpm(287
(bad)
in
pop
sub
nop
mov
or
jne
out
inc
mov
movs
adc
mov
cmps
add
cmps
xor
addr16
fild
mov
inc
mov
xor
jmp
inc
and
call
pop
add
dec
sub
cmps
sbb
or
dec
adc
ret
adc
inc
cmps
push
cmc
(bad)
test
ds
push
and
or
xchg
fdivrp
inc
cmp
xchg
je
or
daa
addr16
gs
movs
cmps
sbb
or
ja
leave
jne
das
inc
in
mov
call
mov
sub
jne
xchg
push
test
inc
out
dec
ja
jmp
mov
push
cmp
mov
xor
pusha
cld
push
in
xlat
pushf
cmc
xor
mov
outs
mov
cmp
das
outs
jmp
test
mov
into
push
sub
scas
cmps
add
dec
int
adc
xchg
rcr
int3
xor
xchg
pop
mov
mov
jo
sbb
pop
mov
xchg
jle
test
ror
retf
sub
inc
cmc
cmp
adc
mov
xchg
pop
cmps
mov
mov
ds
movs
inc
push
cs
and
loop
xchg
and
pusha
and
jmp
and
mov
mov
dec
push
loop
cli
jge
jecxz
cdq
aam
leave
lock
ins
xor
cmp
inc
inc
mov
sub
ja
daa
cmp
cmps
and
shr
pop
je
das
push
sub
cmp
jnp
bnd
jp
push
bound
js
dec
out
xlat
fidivr
and
fs
xchg
jne
(bad)
lea
div
shl
sub
cmp
or
pop
sbb
mov
xor
and
add
pop
mov
sub
push
out
push
add
dec
(bad)
cmps
mov
ins
jo
aad
push
push
push
mov
or
cld
push
aam
aaa
xor
stos
push
push
jge
enter
mov
call
mov
retf
push
aad
inc
and
jp
adc
cmp
outs
cmp
pop
pusha
out
mov
mov
fs
out
mov
cli
aad
pop
and
inc
dec
inc
add
aad
nop
add
xchg
sub
scas
mov
inc
shr
cmp
shl
push
fst
mov
push
test
and
or
test
mov
sahf
sahf
pop
fld
mov
dec
sub
adc
push
cmc
movs
adc
mov
add
mov
mov
mov
test
push
movs
add
rcr
test
xor
retf
mov
addr16
ror
cmp
sbb
push
call
adc
ret
loope
or
cmp
cmc
xchg
inc
cmp
jne
les
push
push
aas
cmp
shl
bound
sbb
xor
aaa
dec
daa
aam
cmps
push
mov
push
stos
sahf
fcom
hlt
mov
jno
fucomip
xchg
ja
mov
mov
inc
dec
jmp
sub
sbb
int3
test
jl
and
movs
xchg
and
xchg
and
push
mov
call
fldl2e
pop
aad
mov
xchg
outs
ss
pop
xchg
and
xchg
push
xchg
mov
adc
mov
jnp
popf
sar
cld
icebp
cld
sbb
cmp
xchg
cmp
or
test
xchg
mov
dec
daa
xchg
sti
div
ret
mov
outs
jne
data16
xchg
popf
mov
xor
push
sbb
sub
cmp
loop
cmp
push
pop
xchg
xor
add
or
test
mov
arpl
jne
test
sbb
aad
pushf
inc
dec
daa
xchg
mov
add
sahf
xor
xor
jmp
ficomp
add
in
das
push
ja
adc
ins
lock
movs
mov
inc
inc
jmp
cli
pop
inc
icebp
xchg
adc
push
out
test
gs
pop
pop
addr16
mov
dec
mov
daa
ficomp
xor
fldenv
int
in
sahf
leave
dec
inc
scas
push
iret
call
in
push
xchg
adc
pop
push
pop
(bad)
cmp
cli
ss
addr16
mov
call
adc
push
push
pop
int3
loopne
and
mov
inc
stos
cwde
inc
retf
pop
dec
aam
and
mov
mov
loop
mov
cmp
hlt
push
idiv
push
add
push
movs
scas
mul
in
mov
add
add
nop
in
add
movs
xchg
push
aaa
out
adc
adc
pop
mov
movntq
pop
test
hlt
into
push
sub
es
push
add
les
pop
in
xor
sbb
xchg
ja
mov
lds
test
out
sbb
bswap
cmp
das
mov
ffree
inc
xchg
pop
xchg
xor
enter
(bad)
push
es
cmp
xchg
jmp
test
test
add
popa
in
jp
cmp
sub
sar
xlat
sbb
aaa
xchg
mov
retf
adc
imul
pop
xchg
loopne
lods
mov
leave
iret
xor
into
push
jecxz
dec
lods
(bad)
gs
shr
push
lods
adc
mov
call
cld
pop
mov
addr16
test
jbe
sbb
cld
loopne
mov
push
dec
dec
mov
aad
jnp
or
mov
dec
daa
mov
arpl
pop
push
push
xchg
push
rcl
push
fs
jne
dec
jb
cmps
push
je
xchg
ja
inc
in
mov
inc
(bad)
movs
sub
cmp
xchg
shl
clc
mov
jb
push
in
retf
shr
or
sahf
retf
hlt
shr
js
jg
jmp
inc
mov
cmp
jo
and
pop
mov
push
ficom
adc
daa
test
sbb
or
mov
scas
and
or
punpckhdq
test
cmp
sub
sbb
xor
inc
arpl
jbe
adc
and
cwde
fmul
mov
pop
lods
mov
addr16
mov
enter
daa
jnp
mov
mov
dec
fild
pop
mov
add
(bad)
xor
sub
add
std
cmps
push
cmc
add
xchg
icebp
push
cmc
movs
adc
push
sub
sub
imul
jb
push
rol
xor
lods
rcl
add
and
mov
call
(bad)
clc
cli
jno
xchg
push
cli
mov
pop
xchg
cwde
add
test
inc
push
cmps
movs
js
ja
jae
fadd
sbb
xchg
and
mov
hlt
mov
out
xlat
sub
pop
push
dec
mov
in
push
fidiv
daa
mov
movs
inc
ins
adc
add
popa
shl
xchg
test
adc
jne
lahf
aad
cmps
cmp
cmps
inc
and
xlat
lea
xchg
aad
or
sbb
cwde
cmp
or
int
adc
mov
idiv
repnz
ret
cwde
out
jmp
cmp
fwait
xlat
push
sub
in
nop
push
in
jle
(bad)
mov
xlat
dec
pusha
xor
cli
fistp
gs
(bad)
(bad)
fist
movs
inc
mov
sub
call
pop
or
fwait
jo
xor
xor
inc
dec
test
popa
scas
xchg
aad
mov
xchg
push
pop
and
scas
push
ins
call
and
lds
mov
push
sbb
dec
ss
ret
shl
ins
push
adc
repz
test
push
bound
call
cli
es
xchg
jmp
fs
cwde
sub
mov
sbb
out
je
xchg
xchg
test
or
jmp
push
stos
and
jne
aad
adc
inc
push
div
push
pop
jg
lea
xchg
test
aad
test
adc
mov
daa
cwde
(bad)
mov
xor
sub
icebp
jbe
ficom
xor
jecxz
dec
retf
sar
sti
fldcw
out
mov
into
dec
inc
pop
push
imul
xor
xchg
call
add
cmp
not
call
movs
mov
or
pop
cmc
out
clc
mov
sub
cwde
loop
jne
mov
jb
inc
xor
sub
adc
xlat
xor
ins
lds
test
xor
add
aad
(bad)
into
hlt
clc
sbb
sbb
push
inc
xor
xchg
jns
sbb
push
jb
mov
arpl
lods
and
xor
mov
test
arpl
ja
xchg
push
movs
sub
xor
(bad)
adc
xchg
sub
xor
sbb
mov
aad
popw
loopne
add
mov
mov
inc
aaa
add
inc
call
pop
mov
dec
pop
xchg
fisub
test
not
adc
rol
es
rcl
xchg
xchg
adc
addr16
pop
(bad)
bound
push
sub
mov
xchg
fnstsw
not
js
and
outs
vmulps
mov
add
aad
sbb
ss
cmp
xlat
fcmovb
ss
push
clc
push
sbb
js
xor
cdq
sbb
repz
lds
ins
pop
adc
and
ret
imul
ficomp
push
mov
xor
xchg
ja
pushf
in
cmp
and
cli
or
mov
mov
mov
xchg
dec
data16
or
add
xchg
mov
cs
jmp
test
push
out
mov
inc
ins
test
inc
das
pusha
mov
dec
bound
jnp
jmp
and
mov
mov
cli
clc
jecxz
mov
mov
int
push
daa
xlat
jne
or
xor
sbb
sti
push
movs
adc
mov
call
sbb
js
mov
adc
jbe
pop
cmp
inc
mov
movs
push
daa
pusha
dec
js
pop
movs
stos
push
gs
pop
sub
aaa
lds
mov
cmps
push
or
cli
es
outs
and
cmps
push
xchg
add
dec
jmp
jle
sbb
stos
leave
xchg
jbe
xor
xchg
ins
push
mov
leave
cmp
mov
lods
jp
mov
jecxz
rol
dec
xor
xor
popf
pushf
test
into
cmp
out
and
inc
jmp
mov
dec
push
int3
mov
(bad)
addr16
mov
pop
adc
pushf
stos
add
mov
sub
inc
dec
pop
add
enter
add
aam
lods
mov
or
sub
cmps
fisubr
jl
daa
sbb
leave
and
inc
or
(bad)
adc
in
mov
sbb
repz
mov
or
mov
in
push
jb
or
xor
je
gs
and
and
xor
bound
sti
std
cmc
daa
pop
xor
cmps
stos
repz
scas
lea
push
lods
mov
and
push
aad
outs
adc
and
lods
inc
mov
std
call
outs
rol
mov
in
add
mov
sbb
es
aaa
xchg
xchg
neg
cmps
mov
add
sar
and
adc
and
call
push
out
xchg
pusha
push
cmp
pop
push
(bad)
xor
mov
mov
pop
push
cmp
(bad)
pusha
add
loop
xchg
xor
cld
mov
mov
mov
call
or
dec
test
cmp
aad
popf
test
adc
mov
es
inc
sbb
jl
dec
retw
pop
rcr
cmp
mov
push
jg
ins
xor
ins
out
xlat
inc
(bad)
and
test
add
mov
jge
jns
add
scas
fdivr
je
out
retf
fnsave
jo
jne
jecxz
dec
xor
in
jne
daa
(bad)
pop
mov
bnd
mov
loop
inc
les
xchg
data16
fcomp
int3
cmp
jecxz
out
pop
fsubr
inc
shl
xchg
push
into
sub
cli
push
xchg
push
inc
sub
ds
call
xor
sbb
pusha
into
push
and
test
xchg
dec
sub
sub
push
ins
sahf
xchg
dec
or
das
stc
ficom
aad
cmc
push
repz
pop
mov
cmc
fist
jecxz
in
cmp
xchg
pushf
repz
push
ds
lea
push
dec
sub
out
stos
test
pusha
and
jnp
xchg
sbb
ss
loope
jae
mov
mov
retf
jbe
push
inc
or
jmp
push
cmc
xor
stos
adc
pop
cmp
push
sbb
lds
test
mov
shl
sbb
in
jmp
aaa
test
mov
movs
push
dec
jb
fcomp
in
and
add
fisttp
mov
xchg
test
loopne
aaa
dec
and
data16
jb
(bad)
(bad)
aam
cdq
xor
(bad)
xchg
sbb
pop
cwde
ja
movs
xchg
push
hlt
dec
je
pop
fist
and
and
or
xchg
rcr
jno
inc
jmp
lds
fstp
into
jp
or
pop
in
xor
popa
fsub
inc
mov
scas
and
lds
aad
(bad)
jl
cmp
xlat
pop
out
btr
xchg
sbb
sbb
jns
xchg
push
test
push
fdivr
sbb
ds
xor
(bad)
sub
cwde
popa
inc
(bad)
pushf
inc
push
scas
adc
inc
in
cmp
daa
mov
outs
jae
je
mov
leave
jbe
sub
xchg
gs
lock
dec
je
pushf
lods
fst
sbb
into
test
cmps
outs
sbb
xchg
hlt
shr
xchg
cmc
gs
jmp
shl
jne
ins
imul
ins
out
daa
outs
aaa
fwait
or
mov
and
adc
dec
add
daa
push
aas
mov
xchg
mov
(bad)
pop
mov
mov
mov
mov
out
aas
pusha
dec
sbb
mov
xchg
mov
movs
mov
push
pop
sub
pop
lods
ret
pusha
mov
jne
xchg
or
mov
test
in
loope
movs
or
sahf
ror
cmp
cli
add
mov
das
xor
sbb
xchg
xor
adc
je
loop
imul
imul
ret
test
jae
jl
jmp
inc
pop
push
push
mov
pop
mov
lahf
xchg
adc
daa
rcr
stos
pushf
ror
fnstcw
test
push
out
ins
mov
mov
sbb
cmp
ror
or
or
dec
push
into
aas
xor
jg
mov
inc
adc
fidiv
pmaxub
(bad)
jecxz
int
iret
fnsave
jo
jne
into
ds
xor
or
call
jmp
fst
in
xchg
xor
mov
add
movs
add
push
pop
or
mov
aaa
sub
in
push
out
loopne
ja
gs
mov
mov
sub
ins
cmc
popf
mov
aad
adc
pop
jne
jl
push
hlt
call
ja
call
in
fisubr
mov
push
xor
ja
loop
and
addr16
call
mov
sahf
xlat
sub
dec
pop
in
mov
call
sub
pop
mov
jle
push
in
or
stos
dec
inc
add
ror
jae
jg
jle
push
movs
lods
mov
inc
jo
imul
cmc
scas
loope
jmp
sub
dec
leave
mov
or
sbb
xchg
aaa
cwde
push
pushf
stos
pop
cmc
jl
(bad)
fnstcw
into
ror
ficom
mov
jbe
addr16
ins
scas
cmp
xor
and
mov
cmp
fld
push
jnp
leave
mov
sar
rol
mov
or
popa
out
cmps
push
cmp
or
xchg
pop
mov
enter
call
sub
cmp
adc
addr16
adc
stos
xchg
call
mov
adc
mov
lahf
push
push
sub
xchg
aaa
dec
out
push
lock
mov
out
ror
xor
xchg
(bad)
push
out
ins
mov
sub
adc
xchg
fcmovb
retf
add
aaa
xlat
movs
inc
mov
pushf
push
pop
cmp
cli
lea
mov
icebp
or
addr16
jp
scas
pop
call
dec
addr16
jmp
retf
jae
popf
xchg
fnstenv
ret
xchg
cmc
inc
ss
push
stos
cmp
or
out
cmp
ret
sbb
jg
xchg
test
mov
lds
adc
ins
cmc
imul
mov
std
mov
int
xchg
gs
mov
addr16
cmp
lods
fcom
call
outs
mov
sub
dec
xor
aad
add
push
jb
mov
rcl
test
scas
cmps
cld
cmp
popf
test
push
test
dec
cmps
inc
stos
aad
test
cmc
pop
add
sar
dec
add
(bad)
mov
mov
and
cmc
imul
adc
repz
(bad)
call
xchg
rol
icebp
sub
cmp
test
sub
pop
(bad)
in
jne
jp
(bad)
rcr
in
lds
adc
add
out
cmp
lock
push
call
mov
les
sub
les
push
ins
jl
jo
add
and
fidiv
push
jns
test
outs
les
shr
cs
xchg
bound
mov
sub
sbb
cmps
or
rcl
cmps
pop
xchg
lea
jae
cwde
push
movs
scas
inc
loope
in
inc
sub
pop
ret
out
scas
out
test
in
or
cmp
lods
fdivr
or
mov
dec
adc
ret
test
lock
in
jg
inc
sbb
(bad)
mov
movs
xchg
hlt
test
push
mov
idiv
lods
aad
es
lock
mov
push
or
sbb
or
call
fnstenv
fnsave
call
mov
or
pop
jmp
pop
jle
mov
out
ds
sub
mov
inc
and
push
je
push
fisttp
lods
aad
inc
test
jg
mov
pop
cmp
add
cwde
xchg
push
adc
outs
mov
adc
jecxz
adc
imul
jmp
mov
push
fisub
iret
aad
mov
out
(bad)
jl
push
je
jg
jle
imul
test
jno
movs
mov
mov
mov
inc
bswap
mov
stos
mov
xor
sbb
sbb
pop
push
popf
pop
ins
test
sahf
xor
aas
gs
cld
test
push
loope
inc
mov
aad
mov
nop
(bad)
cmc
neg
(bad)
xlat
inc
xchg
xor
shr
or
xor
cmp
mov
cli
xor
out
pop
fadd
mov
adc
fistp
add
aad
and
xor
push
gs
cld
xchg
enter
pop
sbb
mov
sbb
sbb
inc
aam
jne
push
out
inc
dec
push
push
jp
ins
out
fs
pop
fbld
add
lods
imul
out
mov
mov
in
push
cmps
xchg
inc
mov
mul
fidivr
mov
stos
aam
and
push
das
gs
(bad)
fistp
mov
mov
mov
ret
adc
push
repnz
mov
dec
and
inc
out
xchg
movs
bound
mov
cmc
mul
adc
hlt
inc
dec
fcmovnbe
cmp
popf
xor
and
push
cmc
les
retf
(bad)
pushf
fsub
push
push
push
xchg
xor
push
jp
xchg
dec
or
pop
loop
shl
addr16
mov
mov
xchg
cld
sub
adc
movs
fiadd
push
jl
add
(bad)
xor
xchg
cdq
xchg
adc
(bad)
add
mov
push
loop
push
jecxz
mov
imul
popf
out
sahf
fsubr
int3
xchg
adc
pop
gs
dec
add
and
inc
xchg
imul
push
movs
push
nop
cmc
lds
cwde
pop
sbb
sub
or
std
pop
xor
mov
setne
cs
je
movs
out
ja
mov
xlat
and
(bad)
xchg
push
outs
cmp
jp
sbb
mov
out
or
cmps
jmp
add
cmp
mov
add
sub
pop
mov
gs
ror
sbb
mov
gs
test
pushf
test
jle
les
test
lods
es
cld
in
push
aaa
fs
aad
dec
inc
adc
jne
cmc
test
pop
stos
mul
mov
call
jmp
pop
test
lds
push
mov
pop
pusha
in
fisub
push
aaa
call
daa
and
mov
sub
or
cmps
mov
push
sbb
addr16
fs
aad
mov
push
pop
pop
clc
xchg
test
push
jbe
pop
xor
ja
fild
in
add
sub
cli
aas
jmp
pop
cmp
iret
jp
pop
sbb
inc
nop
enter
call
ins
ret
scas
cmps
hlt
cmp
data16
movs
or
mov
je
sbb
mov
lock
and
jmp
in
push
test
cld
enter
(bad)
outs
addr16
gs
mov
dec
xor
sbb
inc
int
in
push
aaa
dec
lds
call
dec
push
repnz
cmp
xchg
jle
or
sbb
daa
mov
dec
inc
aad
sbb
or
pop
jmp
(bad)
jo
mov
cwde
dec
fwait
or
nop
enter
nop
sbb
aad
out
pop
cli
std
pop
jge
sub
mov
mov
inc
jne
push
int3
mov
sbb
pop
adc
aaa
neg
mov
mov
xchg
push
mov
push
int
aam
outs
cmc
mov
inc
(bad)
js
mov
xchg
cld
in
sub
pop
add
sub
dec
jle
les
push
sub
xchg
sub
mov
inc
in
cmc
push
call
push
pop
cmps
(bad)
xchg
rol
cwde
xlat
int
adc
or
push
jg
mov
cmc
jb
or
mov
sbb
xor
pop
out
outs
fidivr
das
in
pop
std
prefetch
or
lds
fisubr
sub
push
dec
mov
call
mov
pop
jp
in
fdivr
int
mov
or
sti
je
call
sbb
sub
cmp
js
xchg
push
out
pop
sti
mov
mov
xchg
in
aam
and
jmp
jp
push
call
stos
aad
sbb
mov
jmp
jmp
jp
imul
(bad)
or
adc
shr
mov
push
jp
push
sar
sub
add
shl
scas
cmps
xor
ja
daa
cmp
enter
pop
cmps
add
call
mov
dec
enter
daa
outs
mov
in
sbb
cmp
sbb
mov
movs
dec
das
pop
fsub
pop
js
mov
cmps
test
sbb
(bad)
inc
dec
or
stos
push
push
pop
xchg
sbb
daa
je
movs
out
ja
mov
sahf
mov
jg
(bad)
mov
or
cli
test
clc
jp
stos
pop
pop
cmp
push
dec
stos
pop
pop
test
xor
xchg
daa
js
cmp
addr16
jno
dec
push
loopne
aad
sbb
mov
sbb
cli
std
pop
xor
mov
jmp
cmp
lock
add
jg
mov
sub
mov
scas
inc
(bad)
push
call
(bad)
jge
or
and
hlt
sbb
lds
test
bound
or
pop
and
mov
repnz
dec
and
inc
mov
inc
cwde
sbb
mov
sub
rcl
add
dec
retf
loop
push
add
xchg
shr
inc
xor
sbb
jmp
imul
enter
dec
or
enter
fs
adc
ret
leave
xchg
adc
xor
call
mov
js
inc
es
fidivr
cmp
stos
sbb
mov
mov
inc
clc
(bad)
cmp
aad
push
out
pop
and
iret
mov
movs
xchg
cli
test
div
in
add
iret
test
cmc
mov
outs
pop
pop
and
jmp
sahf
sub
push
or
movs
add
mov
mov
mov
xchg
sub
and
xchg
pop
retf
(bad)
cmps
std
jb
ret
lock
aas
sub
pop
xor
dec
ins
sbb
test
in
movs
cmps
xchg
mov
or
aam
leave
nop
je
lods
mov
test
xchg
ss
mov
xchg
gs
pop
test
push
aaa
fs
jg
shr
(bad)
outs
addr16
clc
je
sub
enter
push
fcmovu
js
ja
fild
fs
fnsave
mov
imul
mov
aas
mov
sub
aaa
movs
or
mov
cli
jo
(bad)
movs
jmp
scas
pop
push
(bad)
cwde
in
pop
dec
jns
lds
(bad)
lds
mov
es
in
ja
inc
ins
jge
sub
jne
inc
cwde
jne
mov
inc
lock
inc
sbb
dec
or
jp
jl
cmpxchg
les
sub
test
js
cli
push
xchg
fidiv
ja
icebp
in
jae
js
xor
movs
or
aaa
xchg
sub
and
sub
and
or
fcmovb
mov
cwde
call
xchg
ds
sub
mov
push
out
mov
cmp
xchg
aam
mov
mov
(bad)
(bad)
xor
inc
push
mov
push
test
xchg
dec
inc
aad
pop
clc
add
push
mov
dec
aam
pop
js
xchg
fdivr
lds
xchg
js
or
fadd
je
pop
movs
lahf
mov
cmp
add
mov
push
push
call
jge
push
pop
cmp
ja
jmp
lds
call
cli
(bad)
adc
movs
mov
jo
jbe
sbb
sbb
dec
mov
pop
and
mov
sub
hlt
pop
or
push
aad
retf
inc
sub
int
ss
lods
fs
pop
test
cmc
mov
xchg
push
and
test
das
call
out
pop
das
push
aaa
add
cwde
pushf
jmp
call
sbb
call
call
dec
daa
imul
cmc
or
jmp
cmps
pop
push
mov
clc
ja
cmps
cmc
push
call
fdiv
mov
cmp
xor
pop
iret
push
fisubr
or
jp
fcomp
cs
mov
push
nop
cli
mov
mov
(bad)
ja
sub
les
cli
test
fst
cmp
cwde
call
pop
outs
fisubr
pop
push
call
aas
out
outs
xchg
push
arpl
ret
add
fnstcw
inc
js
cmp
xlat
xchg
int
clc
(bad)
cmp
pop
pop
clc
popf
test
js
inc
in
inc
or
mov
js
(bad)
test
or
push
ss
sbb
mov
test
push
cmp
pop
sbb
repnz
cmp
loop
les
cli
test
fst
cmp
pop
mov
push
jmp
add
jne
push
gs
nop
cli
mov
mov
jg
fild
stos
aam
iret
mov
addr16
call
push
call
cli
mov
js
enter
es
in
inc
push
pop
mov
callw
dec
or
dec
jmp
pop
stos
mov
inc
dec
mov
addr16
pop
das
mov
jge
mov
lahf
and
cmp
repnz
or
setne
sbb
fcomp
pop
pop
clc
popf
test
inc
dec
sub
js
push
enter
mov
nop
xchg
or
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
mov
mov
push
hlt
push
in
xlat
xor
daa
in
hlt
push
xchg
xchg
lds
lds
stos
push
(bad)
sbb
push
scas
dec
mov
xchg
pusha
(bad)
jae
or
retf
into
sub
sbb
or
jnp
imul
dec
stos
pop
call
arpl
mov
mov
add
adc
and
xor
les
out
out
(bad)
xor
xchg
xchg
fisub
push
movs
inc
mov
xchg
out
enter
popf
cmp
fcmovb
retf
cmps
push
pop
scas
dec
and
ret
sub
pop
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
aad
add
xor
mov
cmps
push
xchg
popa
xor
arpl
xor
and
adc
retf
(bad)
jmp
pop
cmc
push
fld
push
test
lds
retf
add
mov
outs
idiv
fnstcw
out
xlat
and
imul
test
push
movs
mov
sbb
mov
cmc
or
(bad)
xor
xchg
call
push
movs
mov
pop
pop
mov
out
xlat
and
ins
push
mul
mov
addr16
pushf
movs
es
cmp
sbb
in
cmc
mov
out
(bad)
xor
xchg
call
push
movs
inc
dec
aaa
or
aad
in
cmc
idiv
out
sub
cmps
fistp
xchg
test
mov
pop
in
cmc
cmp
(bad)
xor
xchg
test
clc
ja
cwde
xchg
fwait
movs
inc
jnp
dec
daa
aad
in
cmc
cmp
(bad)
xor
xchg
gs
sbb
addr16
push
movs
sub
aaa
lds
aad
mov
cmc
test
retf
or
sbb
call
sub
pop
lds
aad
mov
cmc
test
leave
cmp
or
sbb
addr16
cmp
sub
pop
stos
dec
mov
imul
adc
fsubr
enter
call
cli
cmp
sub
pop
stos
push
aad
in
test
push
mov
(bad)
xor
xchg
test
in
aam
les
push
movs
xchg
jbe
xchg
(bad)
xor
xchg
xchg
mul
push
xlat
xor
aad
mov
cmc
test
aad
in
xchg
not
mov
pop
in
xchg
mov
les
push
xchg
push
hlt
push
ja
addr16
and
xor
inc
mov
aad
in
add
inc
cmps
push
jecxz
xchg
icebp
adc
and
push
aad
in
add
inc
rcl
xchg
add
adc
and
xor
inc
lds
aad
nop
jb
add
inc
ret
push
xchg
adc
add
adc
and
xor
inc
lds
aad
aad
cmc
test
shl
loope
icebp
add
repnz
push
movs
xor
inc
lds
mov
xor
mov
xor
and
adc
add
repnz
das
fnstsw
int
mov
push
shl
out
scas
pop
mov
sub
ja
pop
in
das
movs
inc
mov
mov
pop
cmc
idiv
xlat
and
cmps
sub
sbb
or
cld
push
in
fdivr
int3
aaa
lds
aad
in
cmc
lea
adc
mov
cmps
push
in
pop
xchg
test
mov
mov
jge
test
cmps
das
xchg
pop
std
jne
test
fisttp
out
inc
mov
lds
scas
ins
in
(bad)
test
cmps
push
in
push
xchg
or
addr16
push
call
daa
aad
sahf
jl
mov
adc
clc
sbb
push
xchg
xor
ja
addr16
mov
inc
mov
mov
jl
mov
adc
mov
cmps
push
in
xchg
(bad)
addr16
push
movs
cmp
aaa
lds
test
mov
adc
retf
cmp
sub
sbb
jne
test
push
movs
inc
mov
lds
aad
cdq
pop
cmc
test
cmps
push
jmp
xchg
push
movs
cmp
pop
in
cmc
mov
push
retf
push
xchg
sbb
or
addr16
sub
cmp
imul
(bad)
xor
xchg
xchg
test
push
fstp
retf
aaa
lds
aad
in
cmc
idiv
push
and
cmps
push
xchg
sbb
jmp
daa
aad
call
xlat
and
cmps
push
xchg
gs
or
add
(bad)
xor
xchg
xchg
test
push
movs
inc
xor
xchg
xchg
add
(bad)
xor
xchg
xchg
xchg
push
movs
inc
mov
les
aam
in
hlt
test
(bad)
and
mov
lds
push
xchg
test
xchg
push
cmps
inc
xor
adc
pop
in
aad
lds
mov
movs
push
pop
in
cmc
je
fs
push
cmps
inc
mov
(bad)
cmps
push
xchg
gs
hlt
push
in
aam
inc
mov
lds
jno
and
mov
and
adc
jne
add
adc
and
xor
pusha
xor
bound
xor
and
adc
add
repnz
adc
and
xor
arpl
xchg
push
and
and
adc
jne
add
adc
and
xor
bound
xchg
push
mov
and
adc
add
lock
sbb
mov
ins
(bad)
jge
lea
pop
lods
dec
mov
push
in
push
cld
dec
sbb
sub
cmp
dec
scas
pop
sahf
ins
mov
out
xlat
lods
dec
mov
sbb
paddsw
aaa
lds
aad
outs
(bad)
cmc
test
sub
jne
push
in
push
fsubr
int3
ds
outs
mov
mov
scas
(bad)
xor
sbb
or
cld
push
in
push
fsubr
retf
cmp
in
jns
mov
pop
test
sub
sbb
or
sti
or
xchg
push
movs
inc
cmp
push
push
pop
test
mov
sbb
or
cli
or
push
movs
retf
lds
aad
push
out
xlat
and
sub
xchg
xchg
or
push
movs
leave
cmp
in
jnp
add
dec
mov
xchg
gs
stc
or
xchg
push
movs
inc
cmp
push
jp
add
(bad)
xor
xchg
xchg
or
push
movs
enter
daa
inc
cwde
push
jp
mov
inc
jp
xor
outs
xchg
adc
xlat
mov
lds
inc
pop
in
cmc
addr16
push
xor
xchg
xchg
adc
(bad)
and
lds
aad
je
cmc
test
ss
xchg
gs
out
cmc
pop
push
movs
inc
mov
lds
aad
ja
cmc
test
cmps
(bad)
xchg
xchg
pop
cmc
xchg
push
movs
inc
daa
aaa
lds
aad
in
cmc
not
(bad)
cmps
and
xor
add
xchg
push
addr16
push
movs
aam
movs
push
mov
test
pop
cmc
not
(bad)
cmps
and
pop
push
xchg
fwait
xchg
test
push
xor
and
lds
aad
mov
cmc
test
cmps
push
xchg
icebp
xchg
test
add
xor
mov
lds
inc
xor
test
xor
xchg
test
shl
mov
jo
pusha
bound
push
mov
xchg
lock
loop
addr16
push
xor
mov
lds
aad
mov
cmc
test
xor
add
adc
loope
icebp
xchg
push
movs
inc
and
jb
(bad)
test
xor
add
jne
adc
add
inc
mov
push
mov
(bad)
jge
cmc
test
aas
int
xchg
sbb
fild
pop
in
ins
outs
pushf
jle
xlat
and
ds
push
xchg
sbb
xchg
push
movs
fidiv
pop
in
cmc
outs
add
(bad)
xor
xchg
gs
in
pop
ds
movs
inc
mov
ret
pop
in
outs
ins
lahf
jge
dec
mov
cmp
jne
test
xchg
push
movs
inc
lods
lds
aad
jle
or
add
(bad)
xor
or
sbb
in
push
cld
push
int3
fsubr
lods
pop
mov
imul
and
cmp
or
sbb
jmp
sti
xchg
push
movs
inc
sub
lds
aad
jns
imul
pop
test
fdivr
enter
call
push
movs
fisubr
stos
lds
aad
jnp
imul
mov
pop
stos
sub
cmp
or
sbb
jmp
movs
inc
mov
pop
daa
aad
in
push
call
sub
cmp
or
sbb
xlat
and
inc
mov
lds
push
push
movs
inc
mov
test
pop
in
cmc
aaa
lds
aam
and
xor
add
mov
lds
je
in
cmc
push
movs
inc
mov
test
xor
out
xchg
and
xor
movs
out
xchg
test
inc
movs
cmc
test
cmps
push
xchg
(bad)
and
aaa
cmc
pop
inc
mov
lds
push
cmps
inc
mov
xchg
xor
xchg
xchg
es
push
movs
jecxz
aaa
lds
aad
inc
pop
cmc
test
cmps
icebp
xchg
xchg
and
push
movs
jecxz
xchg
lds
aad
inc
mov
mov
and
cmps
push
xchg
rol
push
movs
inc
adc
lds
aad
in
cmc
mul
(bad)
xor
xor
jne
and
xchg
push
movs
inc
adc
inc
mov
mov
and
jecxz
push
xchg
gs
rol
loope
aaa
lds
aad
inc
mov
mov
and
loop
repnz
xchg
and
push
movs
loopne
aaa
lds
jge
in
cmc
imul
(bad)
popf
pop
inc
cmps
push
xchg
int
jne
test
jmp
(bad)
aad
in
pop
test
push
cld
xchg
xchg
sub
xchg
push
movs
out
sbb
lds
aad
dec
scas
pop
pop
lods
dec
mov
push
inc
cmps
push
xchg
int3
cs
das
addr16
push
movs
in
pop
aaa
lds
aad
dec
pop
cmc
test
or
(bad)
das
int
std
push
in
push
pushf
lds
aad
dec
lods
pop
test
cmps
push
xchg
gs
fsubr
int3
ds
push
inc
mov
lds
pop
pop
test
imul
leave
xchg
test
xchg
push
movs
inc
sbb
dec
stos
pop
test
cmps
push
xchg
gs
fisubr
retf
movs
inc
mov
push
test
adc
mov
or
gs
ja
addr16
stc
movs
inc
mov
imul
pop
in
pop
test
or
cmp
sub
ja
addr16
clc
movs
inc
mov
push
aad
in
pop
test
or
gs
ja
addr16
out
test
inc
mov
movs
xlat
and
cmps
push
xchg
aad
(bad)
xlat
xchg
push
movs
inc
add
cmps
in
cmc
div
test
hlt
push
in
xchg
xor
xchg
push
movs
div
pop
in
cmc
inc
add
(bad)
xor
xchg
gs
mov
pop
test
aad
in
inc
test
cmps
push
xchg
gs
daa
push
movs
inc
mov
lds
aad
push
pop
cmc
test
cmps
push
xchg
(bad)
xchg
test
xchg
push
movs
inc
push
aaa
lds
aad
in
cmc
div
mov
ja
addr16
repz
push
pop
cmc
test
adc
xchg
xchg
xor
and
adc
mov
lds
popa
mov
add
(bad)
xor
xchg
xor
test
push
movs
inc
mov
lds
aad
push
pop
cmc
test
cmps
push
xchg
gs
ja
addr16
loop
inc
mov
jo
aad
in
cmc
test
cmps
push
xchg
xor
test
push
movs
inc
mov
lds
aad
push
pop
cmc
test
adc
and
xor
ja
addr16
loopne
inc
mov
lds
cmc
inc
mov
and
sub
jne
test
push
inc
(bad)
sbb
out
pop
shl
ret
shl
loope
test
xchg
movs
push
mov
inc
mov
cmps
fs
jbe
pop
mov
movs
inc
mov
cmp
sub
sbb
push
lea
pop
(bad)
xor
shl
adc
pslld
daa
fwait
pop
scas
dec
mov
fwait
imul
cmp
enter
movs
jg
add
adc
and
xor
ret
and
adc
add
push
mov
inc
mov
movs
pusha
popf
inc
(bad)
aaa
stos
outs
aad
in
mov
mov
mov
(bad)
sar
add
push
cmp
add
and
add
inc
lds
jns
pop
nop
test
inc
stos
pop
shr
cmps
xor
les
ja
xor
adc
mov
pop
mov
popa
out
mov
nop
pop
ret
and
add
push
out
sbb
(bad)
add
and
lds
jb
inc
mov
sub
mov
movs
cmp
xchg
lock
xor
cmps
pop
xchg
outs
nop
test
cmps
cmp
or
and
loopne
cli
xor
push
aam
in
cmc
test
jno
inc
(bad)
push
rcl
aam
repz
cld
ds
inc
fidiv
mov
pop
xchg
push
jl
push
cmc
xor
out
xor
push
xchg
xor
and
mov
fwait
imul
mov
leave
cmp
and
sbb
jmp
je
inc
lds
jbe
fs
xchg
imul
adc
add
add
and
xchg
mov
and
data16
xchg
and
out
mul
inc
hlt
and
pop
shr
push
and
call
mov
(bad)
aaa
rcl
gs
sub
fisub
stos
and
add
xchg
xor
mov
add
or
sub
pop
loope
loopne
out
pop
lods
inc
mov
movs
fs
add
push
xlat
pop
cmc
push
push
icebp
or
push
push
push
test
inc
test
div
mov
jne
add
mov
push
les
xchg
movs
push
xchg
mov
xchg
je
inc
scas
push
fild
out
xlat
fs
dec
add
adc
jae
ja
or
push
ja
add
pmaxub
jecxz
fiadd
iret
or
pop
jmp
jne
mov
movs
inc
xchg
and
cmp
and
adc
icebp
pop
out
les
mov
xchg
push
xor
aaa
out
mul
cmp
or
js
ja
jge
jbe
fs
xchg
imul
xor
and
inc
sub
int3
and
jae
push
aad
xchg
mov
xchg
jg
push
fisub
into
xor
and
das
add
retf
xor
xchg
sub
mov
dec
xchg
ss
jecxz
test
retf
aaa
cli
dec
mov
test
jbe
push
xchg
add
out
adc
mov
loope
int3
pop
(bad)
jbe
dec
mov
movs
aaa
cmc
xchg
jno
jbe
inc
stos
jno
pop
lds
push
out
adc
ret
push
in
repnz
mov
(bad)
popa
xchg
dec
xchg
inc
cwde
es
push
sbb
cs
cmp
and
inc
test
movs
pop
fwait
sahf
bound
test
sbb
lds
pop
(bad)
fcom
mov
repnz
les
mov
icebp
or
mov
icebp
arpl
jne
xchg
ja
sub
out
rol
ss
mov
shr
cmc
addr16
dec
mov
fwait
bound
aaa
mov
ret
gs
stos
ds
mov
cmps
inc
xlat
pop
xchg
inc
mov
jne
pop
xlat
and
aam
xchg
adc
push
jbe
or
xadd
fsubr
cmps
jb
pop
stos
imul
jp
jp
push
adc
xor
in
sti
push
les
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
xchg
pop
in
sub
xor
hlt
inc
mov
mov
sub
sahf
outs
fisubr
shr
xor
inc
mov
xchg
jno
inc
mov
mov
xor
loop
icebp
add
xor
and
shl
rol
adc
bound
push
mov
test
arpl
push
hlt
push
les
aam
and
addr16
and
mov
(bad)
cmc
xchg
imul
fbstp
iret
cmp
adc
push
push
out
out
movs
and
lods
js
jne
test
jns
push
test
ret
xor
es
out
ja
addr16
and
inc
rcr
aad
xchg
xchg
dec
mov
les
enter
(bad)
sbb
in
xchg
xor
and
inc
stos
pop
cmps
jp
push
adc
rol
and
ja
addr16
push
movs
xor
push
lds
aad
in
xchg
cwde
pusha
out
xlat
and
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
nop
pop
cmc
test
lds
xchg
test
push
movs
inc
mov
lds
aad
test
mov
jge
popa
xlat
and
fist
ja
xor
add
adc
bound
push
mov
xor
loope
repz
xor
and
shl
rol
adc
arpl
push
mov
test
data16
(bad)
cmp
ss
jne
test
push
movs
inc
(bad)
pop
lds
mov
in
(bad)
fwait
push
je
dec
mov
aaa
sti
sbb
add
add
cmp
dec
out
aaa
mov
(bad)
xor
adc
xchg
add
push
add
frstor
pop
lods
inc
mov
fwait
fs
jno
inc
mov
cmp
loope
mul
xchg
pop
in
cmc
xor
xlat
inc
movs
pop
mov
ret
or
sbb
xlat
ja
pop
mov
mov
xor
scas
dec
mov
shr
leave
xor
or
sbb
movs
add
cs
aaa
mov
pop
clc
xlat
add
mov
xchg
test
aam
in
mov
xlat
pusha
xchg
jns
and
aad
lods
add
xchg
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
in
push
lock
in
aad
xchg
inc
aad
imul
lds
into
daa
repnz
loop
ja
addr16
push
movs
inc
mov
lds
aad
in
cmc
mul
jo
and
cmps
push
xchg
xchg
in
xchg
push
movs
inc
jecxz
xchg
jno
inc
mov
mov
xor
loop
repnz
xor
and
shl
rol
adc
arpl
push
cmps
movs
push
mov
xor
push
les
aam
and
xor
add
adc
bound
push
mov
xor
loop
repz
xor
and
shl
mov
adc
fs
jno
inc
mov
mov
test
data16
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
fwait
inc
mov
cmps
jno
daa
xchg
fnstenv
jo
push
mov
xor
add
dec
adc
add
xor
inc
rcr
mov
in
nop
xchg
fs
das
xlat
and
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
shr
push
in
or
push
movs
inc
mov
lds
aad
in
cmc
test
sahf
push
xchg
xchg
test
and
daa
aad
in
cmc
test
cmps
push
xchg
lds
and
xor
add
adc
bound
push
mov
xor
jecxz
repz
xor
and
shl
rol
loope
xchg
je
inc
mov
mov
test
data16
aad
in
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
xor
pop
call
xchg
push
movs
inc
mov
mov
je
and
mov
mov
fbld
push
stc
add
jne
test
push
movs
inc
shl
lds
mov
in
pushf
test
cmps
xor
test
xchg
push
mov
cmps
daa
aad
xchg
pop
cmc
test
cmps
push
xchg
xchg
test
push
retf
aaa
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
in
pop
lock
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
mov
in
cmc
imul
adc
mov
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
icebp
loop
push
movs
inc
mov
inc
daa
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
mov
xor
add
xor
and
shl
rol
adc
arpl
push
mov
xor
in
hlt
push
shl
and
xor
add
adc
aaa
stos
inc
aad
adc
xor
add
xor
and
shl
ret
add
adc
popa
nop
jae
inc
mov
mov
test
arpl
push
hlt
add
shl
and
xor
add
adc
fs
daa
mov
in
cmc
test
cmps
daa
(bad)
xchg
test
push
movs
inc
mov
lds
pop
in
xor
out
xlat
and
cmps
push
xchg
xchg
test
pop
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aam
in
cmc
test
xor
xchg
xchg
xchg
push
movs
inc
mov
lds
cmc
cmc
add
lds
xchg
xchg
test
push
cmps
inc
mov
(bad)
daa
xlat
pop
in
hlt
test
cmps
push
xchg
outs
iret
jne
test
push
mov
sub
xchg
cmp
push
iret
jg
and
pop
mov
inc
mov
mov
leave
gs
inc
clc
gs
jne
cdq
cmp
jo
or
pop
les
xchg
xor
sbb
inc
out
loope
test
lock
jb
xor
mov
(bad)
jnp
dec
test
jge
add
or
scas
xor
push
mov
les
jmp
stos
or
cmps
push
stos
ss
xor
out
imul
pop
jle
jnp
add
push
pop
ja
cmp
dec
and
(bad)
and
pop
lds
jne
add
popf
push
or
dec
xchg
std
cmp
aas
or
xchg
in
(bad)
jmp
cmp
and
pop
stos
push
daa
mov
test
leave
mov
cmp
sub
jle
or
out
and
cmp
mov
pop
push
push
xchg
mov
call
cli
sbb
and
enter
pop
scas
mov
jns
mov
push
mov
loope
sbb
daa
mov
jmp
pop
mov
call
push
movs
mov
adc
pop
cmc
hlt
add
(bad)
xor
xchg
test
test
push
movs
inc
mov
lds
(bad)
pop
in
cmc
hlt
add
cmp
xchg
xchg
xchg
push
movs
inc
dec
aaa
lds
sub
in
or
add
(bad)
xor
xchg
gs
ja
addr16
push
movs
inc
mov
les
aad
in
cmc
or
(bad)
xor
xchg
xchg
test
push
movs
inc
mov
shl
pop
out
or
add
(bad)
retf
cmps
push
xchg
xor
addr16
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
test
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
call
push
movs
inc
mov
lds
aad
in
cmc
test
cmps
push
xchg
xchg
test
push
movs
inc
mov
lds
aad
in
cmc
call
inc
cdq
and
adc
adc
jp
sub
inc
shl
aad
fs
sub
sub
cmp
or
dec
adc
push
in
sbb
sub
or
push
mov
sahf
jo
ja
dec
mov
aam
test
in
cld
inc
inc
test
test
sbb
ja
xchg
xor
and
jae
js
push
repnz
int3
add
xor
lods
sbb
aam
scas
mov
xchg
es
mov
push
push
mov
addr16
sbb
(bad)
daa
and
pop
cmc
pop
in
mov
cld
cmp
test
pop
cmc
inc
mov
retf
sbb
xor
push
xor
xchg
or
xor
and
in
hlt
out
or
jne
in
sbb
movs
mov
loopne
or
push
mov
mov
daa
mov
jns
addr16
ja
mov
les
div
push
pop
les
xchg
mov
lahf
fistp
daa
xlat
dec
mov
stos
(bad)
cmc
pop
in
std
adc
add
cmps
jecxz
mov
adc
xchg
add
es
popa
movs
push
cli
lea
ja
inc
pop
cmc
movs
cmps
movs
pop
inc
pop
leave
outs
fs
sub
aad
les
fwait
jb
add
lea
cmps
push
mov
ss
rol
inc
mov
jge
inc
daa
mov
dec
mov
xchg
xchg
and
cmp
ja
gs
out
test
mov
imul
fisubr
into
cmp
retf
fistp
jmp
sti
jle
outs
fwait
pop
stos
dec
mov
sahf
imul
fisubr
into
cmp
retf
fistp
jmp
sti
jle
outs
fwait
pop
stos
dec
mov
sahf
imul
fisubr
into
cmp
retf
fistp
jmp
sti
jle
outs
fwait
pop
stos
dec
mov
sahf
imul
fisubr
into
cmp
retf
fistp
jmp
sti
jle
outs
fwait
pop
stos
dec
mov
sahf
imul
fisubr
into
cmp
retf
fistp
jmp
sti
jle
outs
fwait
pop
stos
dec
mov
sahf
imul
fisubr
into
cmp
retf
fistp
jmp
sti
jle
outs
fwait
pop
stos
dec
mov
sahf
imul
fisubr
into
cmp
retf
fistp
jmp
sti
jle
outs
fwait
pop
stos
dec
mov
sahf
imul
fisubr
into
cmp
retf
fistp
jmp
sti
jle
outs
fwait
pop
stos
dec
mov
sahf
imul
fisubr
into
cmp
retf
fistp
jmp
sti
jle
outs
fwait
pop
stos
dec
mov
sahf
imul
fisubr
into
cmp
retf
fistp
jmp
sti
jle
outs
fwait
pop
stos
dec
mov
sahf
imul
fisubr
into
cmp
retf
fistp
jmp
sti
jle
outs
fwait
pop
stos
dec
mov
sahf
imul
fisubr
into
cmp
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
push
mov
push
or
mov
test
je
or
jmp
test
je
push
call
push
mov
call
push
call
add
test
jge
or
jmp
mov
test
je
push
call
and
pop
mov
and
pop
pop
ret
push
mov
push
push
push
push
mov
imul
mov
mov
test
mov
mov
jne
xor
jmp
mov
test
je
mov
mov
jmp
mov
jmp
mov
test
je
mov
test
je
cmp
mov
jb
mov
push
push
push
call
sub
sub
add
add
add
mov
jmp
cmp
jb
cmp
mov
je
xor
div
mov
sub
push
push
push
call
add
test
je
cmp
je
sub
add
jmp
push
call
cmp
pop
je
mov
mov
inc
dec
mov
cmp
jne
mov
pop
pop
pop
leave
ret
or
jmp
or
mov
xor
sub
div
jmp
call
test
jne
ret
push
push
push
push
call
add
ret
push
push
push
call
add
ret
call
call
mov
call
fnclex
ret
ret
mov
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
mov
xor
mov
test
je
mov
inc
xor
je
dec
je
test
jne
sub
jb
push
mov
shl
add
mov
shl
add
jmp
pop
add
je
mov
inc
xor
je
dec
jne
pop
ret
sub
jb
mov
xor
mov
add
xor
xor
add
and
je
mov
xor
je
xor
je
shr
xor
je
xor
je
jmp
pop
lea
pop
ret
lea
pop
pop
ret
lea
pop
pop
ret
lea
pop
pop
ret
push
call
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
test
je
movzx
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
push
call
cmp
jne
call
push
call
push
call
pop
pop
ret
cmp
jne
call
push
call
pop
push
call
ret
push
mov
push
push
mov
test
je
mov
cmp
jne
push
call
pop
test
push
je
push
call
pop
pop
jmp
cmp
jne
lea
push
lea
push
push
call
add
test
je
push
push
push
call
add
jmp
push
push
push
call
pop
leave
ret
push
push
push
push
mov
cmp
jae
mov
mov
sar
and
lea
shl
mov
test
je
push
call
cmp
pop
je
cmp
je
cmp
jne
push
call
push
mov
call
pop
cmp
pop
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
mov
pop
and
test
je
push
call
pop
jmp
xor
jmp
and
mov
or
pop
pop
pop
pop
ret
push
mov
mov
test
je
test
je
push
call
and
xor
pop
mov
mov
mov
pop
ret
push
mov
test
jne
push
call
pop
pop
ret
push
call
test
pop
je
or
pop
ret
test
je
push
call
neg
pop
pop
sbb
ret
xor
pop
ret
push
push
mov
xor
push
mov
mov
and
cmp
jne
test
je
mov
mov
sub
test
jle
push
push
push
call
add
cmp
jne
mov
test
je
and
mov
jmp
or
or
mov
and
mov
pop
mov
pop
pop
ret
push
call
pop
ret
push
push
push
xor
xor
xor
cmp
jle
mov
mov
test
je
mov
test
je
cmp
jne
push
call
cmp
pop
je
inc
jmp
cmp
jne
test
je
push
call
cmp
pop
jne
or
inc
cmp
jl
cmp
mov
je
mov
pop
pop
pop
ret
push
mov
mov
test
je
test
jne
test
je
or
mov
jmp
or
test
mov
jne
push
call
pop
jmp
mov
mov
push
push
push
call
add
mov
test
je
cmp
je
mov
test
jne
mov
push
cmp
je
mov
sar
and
mov
lea
jmp
mov
mov
pop
and
cmp
jne
or
mov
cmp
jne
mov
test
je
test
jne
mov
mov
dec
mov
movzx
inc
mov
pop
ret
neg
sbb
and
add
or
and
or
pop
ret
push
mov
sub
push
push
mov
push
cmp
jae
mov
and
sar
shl
lea
mov
add
mov
test
je
and
mov
cmp
mov
je
test
jne
test
je
mov
cmp
je
dec
mov
mov
lea
mov
mov
lea
push
push
mov
push
push
push
call
test
jne
call
push
pop
cmp
jne
mov
mov
jmp
cmp
jne
xor
jmp
push
call
pop
jmp
mov
mov
add
lea
mov
test
je
test
je
cmp
jne
or
jmp
and
mov
mov
mov
mov
add
cmp
mov
jae
mov
mov
cmp
je
cmp
je
mov
inc
inc
jmp
dec
cmp
jae
mov
inc
cmp
jne
add
jmp
mov
inc
mov
jmp
lea
push
push
inc
lea
push
push
mov
push
call
test
jne
call
test
jne
cmp
je
mov
test
je
mov
cmp
je
mov
mov
inc
mov
jmp
cmp
jne
cmp
jne
mov
jmp
push
push
push
call
add
cmp
je
mov
inc
mov
cmp
jb
jmp
mov
lea
mov
test
jne
or
mov
sub
mov
mov
jmp
and
mov
or
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
inc
jmp
inc
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pminsw
cld
jmp
inc
add
jmp
inc
add
jmp
inc
add
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sub
inc
add
jmp
push
jmp
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
enter
call
jmp
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
fs
add
add
add
add
inc
add
inc
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shr
add
jmp
add
jmp
add
jmp
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
push
mov
push
mov
xor
mov
mov
mov
cmp
je
cmp
je
cmp
jne
mov
jmp
xor
or
jmp
mov
or
push
pop
mov
inc
cmp
je
cmp
je
movsx
cmp
jg
je
sub
je
sub
je
sub
je
dec
jne
cmp
jne
mov
or
jmp
cmp
jne
mov
or
jmp
test
jne
or
jmp
test
jne
and
and
or
or
jmp
mov
test
jne
or
jmp
sub
je
dec
je
sub
je
sub
jne
test
jne
or
jmp
cmp
jne
mov
and
jmp
cmp
jne
mov
or
jmp
test
je
xor
jmp
or
jmp
push
push
push
push
call
mov
add
cmp
jge
xor
jmp
mov
inc
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
push
push
push
xor
xor
xor
cmp
push
jle
mov
mov
mov
cmp
je
test
je
inc
add
cmp
jl
jmp
mov
jmp
mov
push
shl
call
pop
mov
mov
mov
mov
cmp
je
mov
cmp
je
or
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
ret
push
push
call
pop
pop
ret
push
mov
sub
fld
fstp
fld
fstp
fld
fdiv
fmul
fsubr
fstp
fld
fcomp
fnstsw
sahf
jbe
push
pop
leave
ret
xor
leave
ret
push
call
test
je
push
push
call
test
je
push
call
ret
jmp
push
mov
movsx
push
call
cmp
pop
je
inc
cmp
jle
movsx
push
push
call
pop
pop
jmp
movsx
mov
mov
and
test
jne
mov
mov
mov
inc
mov
mov
mov
mov
inc
test
jne
pop
ret
mov
mov
mov
test
je
cmp
je
mov
inc
test
jne
mov
inc
test
je
mov
test
je
cmp
je
cmp
je
inc
jmp
mov
dec
cmp
je
cmp
jne
dec
mov
inc
inc
test
mov
jne
ret
mov
fld
fcomp
fnstsw
sahf
jb
push
pop
ret
xor
ret
push
mov
push
push
cmp
push
je
lea
push
call
mov
pop
pop
mov
mov
mov
mov
leave
ret
lea
push
call
mov
pop
pop
mov
mov
leave
ret
push
mov
cmp
push
push
je
mov
mov
xor
mov
test
setg
push
xor
cmp
sete
add
push
call
pop
pop
jmp
mov
push
push
fld
fstp
call
mov
mov
push
mov
lea
push
xor
cmp
sete
xor
test
setg
add
add
push
call
add
cmp
mov
jne
mov
inc
test
jle
mov
push
lea
mov
mov
mov
pop
mov
xor
push
cmp
sete
add
add
push
call
cmp
pop
pop
mov
je
mov
mov
inc
cmp
je
mov
dec
jns
neg
mov
inc
cmp
jl
mov
push
cdq
pop
idiv
add
mov
cdq
idiv
mov
inc
cmp
jl
mov
push
cdq
pop
idiv
add
mov
cdq
idiv
mov
add
mov
pop
pop
pop
ret
cmp
push
push
mov
push
push
je
mov
mov
mov
cmp
jne
xor
cmp
sete
add
add
mov
mov
and
jmp
mov
push
push
fld
fstp
call
mov
mov
push
mov
add
push
xor
cmp
sete
add
push
call
add
cmp
mov
jne
mov
lea
mov
test
jg
push
push
call
pop
mov
pop
inc
jmp
add
test
jle
push
push
call
mov
pop
mov
mov
inc
pop
test
jge
cmp
je
neg
jmp
neg
cmp
jl
mov
push
push
call
push
push
push
call
add
pop
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
push
fld
fstp
call
mov
mov
dec
mov
mov
xor
cmp
push
push
sete
add
mov
push
call
mov
add
mov
dec
cmp
setl
mov
mov
dec
cmp
mov
jl
cmp
jge
test
je
mov
inc
test
jne
and
push
push
push
call
add
jmp
push
push
push
push
call
add
pop
pop
pop
pop
ret
push
mov
push
push
push
call
and
add
ret
push
mov
push
push
call
and
add
ret
push
mov
cmp
je
cmp
je
cmp
jne
push
push
push
call
add
pop
ret
push
push
push
push
call
jmp
push
push
push
push
call
add
pop
ret
push
mov
test
je
push
mov
push
call
inc
push
push
add
push
call
add
pop
pop
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
push
pop
cmp
jne
push
call
push
call
cmp
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
push
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
push
call
test
pop
je
mov
test
je
cmp
jne
and
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
and
add
dec
jne
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
pop
pop
jmp
and
push
call
pop
mov
mov
or
jmp
push
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmp
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzx
push
call
test
pop
je
inc
jmp
cmp
jne
inc
jmp
cmp
jbe
inc
cmp
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmp
je
push
call
cmp
pop
mov
jne
push
call
pop
push
push
call
pop
add
pop
add
cmp
jne
pop
push
call
pop
mov
mov
pop
pop
mov
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
and
mov
push
mov
mov
mov
test
je
mov
add
mov
cmp
jne
mov
inc
cmp
je
test
je
movzx
test
je
inc
test
je
mov
mov
inc
inc
inc
test
je
mov
mov
inc
jmp
inc
test
je
and
inc
cmp
jne
inc
jmp
inc
test
je
mov
mov
inc
mov
inc
movzx
test
je
inc
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
and
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
cmp
je
test
je
mov
add
mov
mov
inc
mov
xor
cmp
jne
inc
inc
jmp
cmp
jne
test
jne
xor
cmp
je
cmp
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
mov
inc
inc
dec
jne
mov
test
je
cmp
jne
cmp
je
cmp
je
cmp
je
test
je
movzx
test
je
mov
inc
inc
inc
mov
mov
inc
jmp
movzx
test
je
inc
inc
inc
inc
jmp
test
je
and
inc
inc
jmp
test
je
and
mov
pop
pop
pop
inc
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
mov
jmp
call
mov
cmp
je
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
mov
lea
cmp
jae
and
or
mov
mov
add
add
jmp
lea
push
call
cmp
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
add
mov
lea
cmp
jae
and
or
mov
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmp
lea
jne
test
mov
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
or
jmp
cmp
jne
or
jmp
or
inc
cmp
jl
push
call
pop
pop
pop
pop
add
ret
push
mov
push
and
call
cmp
jne
mov
test
je
add
mov
mov
mov
mov
pop
ret
push
mov
mov
call
lea
push
push
mov
call
test
je
cmp
jne
cmp
jb
push
pop
jmp
lea
push
push
push
call
test
je
xor
lea
cmp
je
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
lea
push
push
push
call
add
test
jne
lea
jmp
lea
push
push
push
call
cmp
lea
je
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
lea
push
lea
push
call
pop
pop
cmp
je
push
push
call
pop
cmp
pop
je
inc
mov
cmp
je
cmp
jne
mov
jmp
inc
cmp
jne
push
push
push
call
add
cmp
je
cmp
je
cmp
je
lea
push
call
cmp
pop
sbb
add
pop
leave
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
cmp
mov
jne
push
call
pop
jmp
cmp
jne
call
test
jne
push
call
xor
ret
push
pop
ret
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmp
jne
push
mov
call
call
jmp
pop
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
test
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmp
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmp
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jb
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmp
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
push
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
push
call
pop
push
push
push
call
push
call
pop
leave
ret
push
push
push
call
test
mov
jne
ret
mov
and
and
push
mov
mov
mov
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
push
push
mov
mov
push
mov
add
sub
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
mov
lea
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
jae
mov
mov
shr
lea
not
and
dec
jne
mov
and
jmp
lea
mov
shr
lea
not
and
dec
jne
mov
and
mov
mov
jmp
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
jae
mov
mov
shr
not
and
dec
jne
mov
and
jmp
lea
mov
shr
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jne
cmp
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmp
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmp
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
dec
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
and
mov
mov
dec
mov
mov
cmp
jne
and
mov
cmp
jne
push
push
push
call
mov
push
push
push
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
dec
cmp
jbe
sub
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
or
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmp
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmp
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmp
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
and
lea
or
mov
jne
mov
inc
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
dec
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
dec
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmp
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmp
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmp
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
and
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
push
push
push
call
cmp
je
add
mov
mov
mov
push
push
lea
push
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
push
push
push
call
xor
jmp
or
mov
mov
inc
mov
or
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
or
or
lea
mov
mov
lea
mov
mov
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
and
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
cmp
push
push
push
push
jne
mov
jmp
push
push
push
call
mov
test
je
mov
push
push
push
push
call
mov
test
je
push
mov
push
push
push
call
test
je
mov
cmp
jne
cmp
jne
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
lea
lea
mov
lea
mov
mov
mov
xor
mov
xor
cmp
setge
dec
and
dec
inc
mov
mov
add
cmp
jl
push
push
push
call
add
mov
add
cmp
jae
or
lea
mov
mov
add
jmp
mov
jmp
push
push
push
call
cmp
je
push
push
push
call
xor
pop
pop
pop
pop
ret
push
mov
push
push
push
call
cmp
jne
mov
mov
cmp
je
mov
mov
push
push
mov
mov
mov
mov
push
call
pop
ret
or
pop
ret
push
mov
push
push
push
mov
push
cmp
je
and
lea
mov
cmp
jne
mov
push
add
push
push
call
test
je
or
dec
mov
test
je
cmp
jbe
mov
inc
dec
je
sub
sub
test
jge
cmp
mov
mov
je
cmp
jne
push
lea
pop
cmp
jne
inc
add
cmp
jl
cmp
jne
push
call
pop
cmp
je
cmp
jg
pop
pop
pop
leave
ret
mov
mov
push
mov
cmp
jbe
cmp
jb
mov
cmp
je
jmp
test
jne
mov
mov
and
cmp
jb
mov
mov
mov
mov
and
sub
mov
sub
pop
sar
lea
ret
xor
pop
ret
mov
mov
sub
sar
lea
mov
movzx
add
and
cmp
mov
jne
inc
cmp
jne
push
call
pop
ret
push
mov
push
push
push
push
mov
push
mov
cmp
je
mov
lea
mov
sub
sub
sar
shl
add
cmp
mov
jae
mov
mov
cmp
jl
cmp
jbe
push
push
push
call
add
test
jne
mov
mov
add
lea
add
cmp
mov
jb
jmp
mov
mov
mov
lea
mov
cmp
mov
jae
mov
cmp
jl
cmp
jbe
push
push
push
call
add
test
jne
mov
add
add
cmp
jb
jmp
mov
mov
cmp
je
jmp
mov
sub
mov
jmp
mov
mov
cmp
je
cmp
jne
mov
cmp
je
jmp
mov
and
mov
mov
sub
sub
sar
shl
add
cmp
jne
cmp
jge
add
inc
cmp
je
mov
push
shl
push
push
push
mov
call
cmp
jne
push
push
push
call
mov
add
test
mov
jle
lea
mov
or
lea
mov
mov
mov
mov
mov
add
add
dec
jne
mov
lea
cmp
jae
cmp
je
add
jmp
cmp
sbb
and
mov
mov
mov
mov
sub
sub
lea
lea
mov
jmp
call
test
je
mov
mov
lea
mov
mov
mov
sub
mov
movzx
sub
lea
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
mov
mov
push
push
mov
push
mov
lea
cmp
mov
mov
mov
jb
lea
mov
cmp
jae
add
sub
jmp
and
lea
mov
lea
jmp
add
cmp
je
mov
lea
cmp
jae
mov
test
jne
push
lea
pop
cmp
jne
inc
inc
jmp
cmp
jae
cmp
jne
mov
jmp
sub
cmp
jb
mov
mov
jmp
movzx
add
lea
cmp
jb
lea
cmp
jae
lea
cmp
jae
mov
test
jne
push
lea
pop
cmp
jne
inc
inc
jmp
lea
cmp
jae
sub
mov
mov
jmp
and
lea
mov
mov
add
jmp
cmp
jae
sub
cmp
jb
mov
jmp
movzx
add
jmp
lea
cmp
jae
sub
mov
mov
jmp
and
lea
mov
mov
lea
imul
shl
sub
jmp
xor
pop
pop
pop
leave
ret
mov
xor
mov
mov
cmp
je
add
inc
cmp
jb
cmp
jb
cmp
ja
mov
ret
mov
mov
ret
cmp
jb
cmp
mov
jbe
mov
ret
push
push
push
or
xor
xor
mov
mov
test
je
lea
cmp
jae
test
je
add
jmp
or
sub
sar
add
mov
cmp
jne
add
inc
add
cmp
jl
jmp
mov
push
call
test
pop
je
add
lea
lea
mov
cmp
jae
and
or
mov
mov
add
add
jmp
shl
mov
pop
mov
pop
pop
ret
mov
push
cmp
push
jae
mov
mov
sar
and
lea
shl
mov
cmp
jne
cmp
push
mov
jne
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
mov
xor
pop
jmp
and
mov
or
pop
pop
ret
mov
push
cmp
push
jae
mov
mov
sar
and
lea
shl
mov
add
test
je
cmp
je
cmp
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
or
xor
jmp
and
mov
or
pop
pop
ret
mov
cmp
jae
mov
and
sar
mov
test
lea
je
mov
ret
and
mov
or
ret
mov
cmp
jae
mov
mov
sar
and
mov
test
je
push
call
pop
push
call
test
jne
call
jmp
xor
test
je
mov
mov
or
ret
push
mov
sub
mov
push
cmp
push
push
jae
mov
mov
sar
and
lea
shl
mov
mov
test
je
xor
cmp
mov
mov
jne
xor
jmp
test
je
push
push
push
call
add
mov
add
test
je
mov
cmp
mov
mov
jbe
lea
mov
sub
cmp
jae
mov
inc
mov
cmp
jne
inc
mov
inc
mov
inc
mov
lea
sub
cmp
jl
mov
lea
sub
lea
push
push
lea
push
push
mov
push
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
xor
mov
cmp
jne
cmp
je
push
pop
cmp
jne
mov
mov
jmp
call
mov
jmp
lea
push
push
push
push
push
call
test
je
mov
mov
mov
jmp
call
mov
jmp
push
call
pop
jmp
mov
test
je
mov
cmp
je
mov
mov
jmp
sub
jmp
and
mov
or
pop
pop
pop
leave
ret
mov
push
push
test
pop
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
mov
test
pop
jne
push
push
mov
call
pop
mov
test
pop
jne
push
call
pop
xor
mov
mov
mov
add
add
cmp
jl
xor
mov
mov
mov
sar
and
mov
mov
cmp
je
test
jne
or
add
inc
cmp
jl
pop
ret
call
cmp
je
jmp
ret
inc
push
call
pop
mov
test
mov
je
or
mov
jmp
or
lea
mov
mov
mov
and
mov
ret
mov
push
cmp
push
push
jae
mov
mov
sar
and
lea
shl
mov
test
je
push
call
cmp
pop
jne
mov
jmp
push
push
push
push
call
mov
cmp
jne
call
jmp
xor
test
je
push
call
pop
jmp
mov
and
lea
mov
jmp
and
mov
or
pop
pop
pop
ret
push
mov
sub
mov
push
xor
push
test
push
mov
mov
je
mov
mov
jmp
and
mov
mov
test
jne
test
jne
cmp
je
or
push
mov
pop
and
sub
je
dec
je
dec
je
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
and
mov
cmp
jg
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
jmp
mov
jmp
cmp
je
cmp
je
cmp
je
jmp
mov
jmp
mov
mov
mov
test
je
mov
not
and
test
jne
push
pop
test
je
or
or
test
je
or
test
je
or
jmp
test
je
or
call
mov
or
cmp
jne
and
mov
jmp
push
push
push
lea
push
push
push
push
call
mov
cmp
je
push
call
test
jne
push
call
call
push
call
pop
mov
jmp
cmp
jne
or
jmp
cmp
jne
or
push
push
call
pop
mov
pop
mov
mov
or
sar
and
mov
lea
shl
mov
and
mov
jne
test
je
test
je
push
push
push
call
add
cmp
mov
jne
cmp
je
jmp
and
lea
push
push
push
call
add
test
jne
cmp
jne
push
push
call
pop
cmp
pop
je
push
push
push
call
add
cmp
jne
push
call
pop
or
jmp
cmp
jne
test
je
mov
or
lea
mov
pop
pop
pop
leave
ret
push
push
call
pop
pop
ret
cmp
ja
push
call
test
pop
jne
cmp
je
push
call
test
pop
jne
xor
ret
mov
push
mov
cmp
jne
cmp
ja
push
call
test
pop
je
pop
ret
cmp
jne
mov
test
je
lea
and
jmp
push
pop
cmp
ja
mov
shr
push
call
test
pop
jne
jmp
test
jne
push
pop
add
and
push
push
push
call
pop
ret
push
mov
push
push
fstcw
push
call
mov
mov
not
and
mov
and
or
push
call
pop
mov
pop
fldcw
mov
pop
leave
ret
mov
and
push
push
call
pop
pop
ret
push
mov
xor
push
test
push
je
push
pop
test
je
or
test
je
or
test
je
or
test
je
or
test
je
or
movzx
push
mov
mov
mov
and
mov
je
cmp
je
cmp
je
cmp
jne
or
jmp
or
jmp
or
and
pop
je
cmp
jne
or
jmp
or
pop
pop
test
pop
je
or
ret
push
mov
xor
push
test
je
push
pop
test
je
or
test
je
or
test
je
or
test
je
or
test
je
or
mov
mov
and
mov
je
cmp
je
cmp
je
cmp
jne
or
jmp
or
jmp
or
mov
and
je
cmp
jne
or
jmp
or
pop
test
pop
je
or
ret
push
mov
push
mov
lea
cmp
ja
mov
movzx
jmp
mov
push
mov
sar
movzx
test
pop
je
and
mov
mov
push
jmp
and
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzx
and
leave
ret
push
mov
push
cmp
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzx
test
je
and
push
mov
mov
pop
jmp
and
mov
mov
push
push
lea
push
push
push
lea
push
push
push
call
add
test
je
cmp
jne
movzx
jmp
movzx
movzx
shl
or
pop
pop
pop
leave
ret
mov
push
push
cdq
pop
idiv
push
mov
mov
cdq
idiv
pop
mov
sub
or
shl
not
test
jne
inc
cmp
jge
lea
cmp
jne
inc
add
cmp
jl
push
pop
pop
ret
xor
pop
ret
mov
push
push
push
push
mov
cdq
pop
idiv
mov
mov
cdq
idiv
lea
push
push
pop
push
pop
sub
shl
push
push
call
add
dec
js
lea
test
je
push
push
push
call
add
dec
sub
test
jge
pop
pop
pop
ret
push
mov
push
push
mov
push
push
push
lea
push
pop
and
lea
push
mov
pop
cdq
idiv
push
mov
mov
cdq
idiv
mov
pop
push
mov
lea
mov
sub
pop
mov
shl
test
je
inc
push
push
call
pop
test
pop
jne
push
push
call
pop
mov
pop
mov
or
mov
shl
push
pop
and
mov
inc
cmp
jge
mov
sub
lea
xor
rep
mov
pop
pop
pop
leave
ret
mov
mov
push
push
sub
pop
mov
mov
add
dec
jne
pop
ret
push
mov
xor
stos
stos
stos
pop
ret
mov
xor
cmp
jne
inc
add
cmp
jl
push
pop
ret
xor
ret
push
mov
sub
mov
push
push
push
push
mov
pop
or
cdq
mov
mov
idiv
mov
mov
cdq
idiv
and
mov
shl
sub
not
mov
mov
and
mov
mov
shr
or
mov
mov
mov
add
shl
dec
mov
jne
mov
push
pop
mov
push
pop
shl
cmp
jl
mov
mov
sub
mov
mov
jmp
mov
and
dec
sub
jns
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
push
movzx
mov
and
mov
mov
mov
mov
movzx
mov
and
sub
mov
shl
cmp
mov
jne
lea
xor
push
call
test
pop
jne
lea
push
call
pop
push
pop
jmp
lea
push
lea
push
call
push
lea
push
call
add
test
je
inc
mov
mov
sub
cmp
jge
lea
push
call
pop
jmp
cmp
jg
sub
mov
lea
push
lea
push
call
lea
push
push
call
push
lea
push
call
mov
inc
push
lea
push
call
add
xor
jmp
cmp
jl
lea
push
call
push
or
lea
push
call
mov
add
add
push
jmp
push
mov
and
lea
push
add
call
pop
pop
xor
push
pop
sub
mov
shl
mov
neg
sbb
and
or
or
cmp
jne
mov
mov
mov
mov
jmp
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
sub
xor
push
push
push
push
push
lea
push
lea
push
call
push
lea
push
call
add
leave
ret
push
mov
sub
xor
push
push
push
push
push
lea
push
lea
push
call
push
lea
push
call
add
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
push
mov
mov
push
mov
push
mov
mov
push
lea
mov
test
mov
jle
mov
xor
mov
test
je
movsx
inc
jmp
push
pop
mov
inc
dec
jne
mov
and
test
jl
cmp
jl
dec
cmp
jne
mov
jmp
inc
cmp
jne
inc
jmp
push
call
inc
push
push
push
call
add
pop
pop
pop
pop
ret
push
mov
sub
push
lea
push
push
lea
push
call
pop
lea
pop
push
push
push
sub
mov
movs
movs
movs
call
mov
add
movsx
mov
pop
movsx
mov
mov
mov
pop
leave
ret
push
mov
push
mov
push
push
push
mov
mov
mov
and
shr
and
mov
mov
mov
movzx
mov
and
test
mov
je
cmp
je
lea
jmp
mov
jmp
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
lea
mov
mov
shr
shl
or
mov
or
shl
mov
mov
test
jne
mov
add
mov
shr
or
lea
mov
mov
add
mov
jmp
mov
or
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
inc
add
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jmp
inc
add
and
and
and
and
and
and
and
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
inc
add
and
and
and
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
and
and
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
and
add
add
add
add
add
add
inc
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
and
add
and
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
call
pop
ret
push
push
push
call
add
ret
movzx
mov
test
jne
cmp
je
movzx
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
push
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmp
mov
rep
stos
mov
jbe
cmp
je
lea
mov
test
je
movzx
movzx
cmp
ja
or
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmp
mov
je
mov
test
je
movzx
movzx
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmp
jne
inc
add
cmp
jb
mov
mov
push
mov
call
lea
mov
movs
movs
pop
mov
movs
jmp
inc
inc
cmp
jne
push
pop
or
inc
cmp
jb
push
call
pop
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
and
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
push
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
mov
test
je
push
push
lea
movzx
movzx
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
push
push
push
lea
push
push
push
call
push
lea
push
push
push
lea
push
push
push
push
call
push
lea
push
push
push
lea
push
push
push
push
call
add
xor
lea
mov
test
je
or
mov
mov
jmp
test
je
or
mov
jmp
and
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
or
mov
add
mov
jmp
cmp
jb
cmp
ja
or
mov
sub
jmp
and
inc
cmp
jb
pop
leave
ret
cmp
jne
push
call
pop
mov
ret
push
push
push
push
call
add
ret
push
mov
sub
push
and
push
push
mov
mov
lea
mov
cmp
jle
movzx
push
push
call
pop
pop
jmp
mov
movzx
mov
and
test
je
mov
inc
jmp
cmp
mov
jne
or
jmp
cmp
jne
mov
inc
mov
mov
test
jl
cmp
je
cmp
jg
push
test
pop
jne
cmp
je
mov
jmp
mov
cmp
je
cmp
je
mov
jmp
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
jne
mov
inc
inc
mov
or
xor
div
mov
mov
cmp
movzx
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
movsx
sub
jmp
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
movsx
push
call
pop
mov
sub
cmp
jae
mov
or
cmp
jb
jne
or
xor
div
cmp
jbe
or
jmp
imul
add
mov
mov
inc
mov
jmp
mov
dec
mov
test
jne
test
je
mov
mov
and
jmp
test
mov
jne
test
jne
and
je
cmp
ja
test
jne
cmp
jbe
test
mov
je
or
jmp
mov
and
neg
sbb
neg
add
mov
test
je
mov
mov
test
je
mov
neg
mov
mov
jmp
mov
test
je
mov
xor
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
inc
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
int3
int3
int3
int3
mov
push
push
push
mov
mov
test
je
mov
test
je
mov
mov
mov
inc
cmp
je
test
je
mov
inc
cmp
je
test
jne
pop
pop
pop
xor
ret
mov
inc
cmp
jne
lea
mov
test
je
mov
add
cmp
jne
mov
test
je
mov
add
cmp
je
jmp
xor
pop
pop
pop
mov
jmp
lea
pop
pop
pop
ret
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
push
push
push
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
mov
imul
cmp
push
mov
ja
test
jne
push
pop
add
and
xor
cmp
ja
mov
cmp
jne
mov
cmp
ja
push
call
mov
pop
test
jne
jmp
cmp
jne
cmp
ja
mov
shr
push
call
mov
pop
test
jne
push
push
push
call
mov
test
jne
cmp
je
push
call
test
pop
je
jmp
push
push
push
call
add
mov
pop
pop
pop
ret
push
jmp
xor
jmp
push
push
push
xor
pop
cmp
jle
mov
mov
test
je
test
je
push
call
cmp
pop
je
inc
cmp
jl
mov
push
call
mov
pop
and
inc
cmp
jl
mov
pop
pop
ret
push
mov
mov
call
push
mov
push
xor
cmp
jae
mov
mov
sar
and
mov
test
je
push
push
push
call
add
cmp
mov
je
push
push
push
call
add
cmp
je
push
mov
sub
test
jle
push
lea
push
push
call
push
push
call
add
mov
mov
cmp
jge
mov
push
lea
push
push
call
add
cmp
je
sub
test
jle
jmp
cmp
jne
mov
or
push
push
call
pop
pop
jmp
jge
push
push
push
call
push
call
add
push
call
mov
neg
sbb
neg
dec
cmp
jne
mov
call
mov
push
push
push
call
add
mov
pop
jmp
mov
or
pop
pop
leave
ret
mov
test
je
push
call
test
pop
je
push
pop
ret
xor
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
push
push
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
neg
sbb
and
inc
push
push
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
or
cmp
je
push
push
push
push
push
push
call
cmp
je
push
push
push
push
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
mov
cmp
jle
push
push
call
pop
pop
mov
mov
cmp
jne
push
push
push
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
neg
sbb
and
inc
push
push
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
or
jmp
push
pop
ret
mov
xor
mov
or
mov
cmp
je
push
push
push
push
push
push
call
test
je
push
push
push
push
push
push
call
mov
mov
cmp
je
test
je
cmp
je
cmp
jg
push
push
push
push
push
push
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
lea
add
and
call
mov
mov
mov
or
jmp
push
pop
ret
mov
xor
xor
or
mov
cmp
je
push
push
push
push
push
push
call
test
je
cmp
push
push
jne
push
push
jmp
push
push
push
push
push
push
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmp
je
inc
mov
dec
test
jne
cmp
pop
jne
sub
ret
mov
ret
mov
push
mov
xor
lea
cmp
jb
cmp
jae
push
pop
mov
pop
mov
ret
push
mov
push
mov
push
push
push
call
add
test
je
lea
push
push
push
call
add
test
je
inc
lea
push
push
push
call
add
test
je
inc
lea
push
push
push
call
add
pop
pop
ret
mov
push
push
mov
mov
mov
add
mov
lea
shr
or
mov
mov
mov
shr
shl
or
pop
mov
pop
ret
mov
push
push
mov
mov
mov
mov
shl
shr
or
mov
mov
shl
shr
shr
or
pop
mov
mov
pop
ret
push
mov
sub
mov
push
mov
xor
cmp
push
mov
mov
mov
mov
jbe
push
mov
mov
lea
movs
movs
push
movs
call
push
call
lea
push
push
call
push
call
mov
and
and
movsx
mov
lea
push
push
call
add
inc
dec
jne
xor
pop
cmp
jne
mov
mov
shr
mov
mov
mov
shr
shl
or
shl
add
mov
mov
jmp
mov
test
jne
push
call
add
pop
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
push
mov
lea
push
mov
xor
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
inc
jmp
push
pop
mov
inc
cmp
ja
jmp
cmp
jl
cmp
jg
push
jmp
cmp
jne
push
jmp
movsx
sub
je
dec
dec
je
sub
jne
jmp
push
mov
pop
jmp
and
push
pop
jmp
cmp
mov
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jle
cmp
jle
cmp
jle
cmp
jg
push
jmp
dec
push
jmp
cmp
jl
cmp
jle
cmp
je
cmp
jne
mov
jmp
mov
cmp
jle
movzx
push
push
call
pop
pop
push
pop
jmp
mov
movzx
mov
and
test
je
cmp
jae
mov
inc
sub
inc
mov
jmp
inc
mov
inc
jmp
cmp
jne
mov
jmp
cmp
mov
mov
jne
cmp
jne
dec
mov
inc
jmp
cmp
jle
movzx
push
push
call
pop
pop
push
pop
jmp
mov
movzx
mov
and
test
je
cmp
jae
mov
inc
sub
inc
dec
mov
mov
inc
jmp
cmp
je
cmp
je
jmp
cmp
mov
jle
movzx
push
push
call
pop
pop
push
pop
jmp
mov
movzx
mov
and
test
je
mov
jmp
lea
cmp
mov
jl
cmp
jle
movsx
sub
je
dec
dec
je
sub
jne
push
jmp
mov
cmp
jne
mov
inc
jmp
cmp
jl
cmp
jg
jmp
cmp
jl
cmp
jg
push
pop
dec
jmp
cmp
jne
jmp
cmp
je
movsx
lea
sub
mov
je
dec
dec
jne
or
push
pop
jmp
push
pop
jmp
push
dec
pop
cmp
je
jmp
mov
jmp
mov
xor
cmp
jle
movzx
push
push
call
pop
pop
jmp
mov
movzx
mov
and
test
je
movsx
lea
lea
cmp
jg
mov
inc
jmp
mov
mov
cmp
jle
movzx
push
push
call
pop
pop
jmp
mov
movzx
mov
and
test
je
mov
inc
jmp
dec
jmp
mov
mov
cmp
mov
je
push
pop
cmp
jbe
cmp
jl
inc
mov
mov
dec
inc
jmp
mov
cmp
jbe
dec
cmp
jne
dec
inc
jmp
lea
push
lea
push
push
call
mov
xor
add
cmp
jge
neg
add
cmp
jne
add
cmp
jne
sub
cmp
jle
mov
mov
mov
mov
mov
cmp
je
xor
mov
mov
xor
mov
jmp
cmp
jge
mov
jmp
push
push
lea
push
call
mov
mov
mov
mov
add
jmp
xor
xor
xor
xor
jmp
xor
xor
xor
xor
mov
jmp
cmp
je
xor
xor
xor
xor
mov
mov
or
pop
mov
mov
mov
mov
pop
mov
pop
leave
ret
sub
inc
add
inc
add
aaa
inc
add
aaa
inc
add
inc
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
sub
mov
push
mov
push
mov
mov
and
and
test
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
jmp
mov
mov
test
jne
test
jne
cmp
jne
and
mov
mov
mov
jmp
cmp
jne
mov
mov
cmp
jne
cmp
je
test
jne
push
jmp
test
je
cmp
jne
cmp
jne
push
jmp
cmp
jne
cmp
jne
push
lea
push
call
pop
mov
pop
and
jmp
push
lea
push
call
pop
mov
pop
jmp
movzx
mov
mov
shr
imul
shr
and
push
lea
mov
imul
mov
lea
mov
sar
mov
movsx
neg
push
lea
push
call
add
cmp
jb
lea
inc
push
lea
push
call
pop
pop
test
mov
je
mov
movsx
add
test
jg
jmp
mov
cmp
jle
push
pop
movzx
sub
and
mov
lea
push
call
dec
pop
jne
test
jge
neg
and
jle
lea
push
call
dec
pop
jne
lea
lea
test
mov
jle
mov
lea
lea
movs
movs
lea
push
movs
call
lea
push
call
lea
push
lea
push
call
lea
push
call
mov
mov
and
add
add
inc
dec
mov
jne
mov
mov
dec
dec
cmp
lea
jl
cmp
jb
cmp
jne
mov
dec
jmp
cmp
jae
inc
inc
inc
sub
sub
mov
movsx
and
mov
pop
pop
pop
leave
ret
cmp
jb
cmp
jne
dec
jmp
cmp
jae
and
mov
mov
mov
and
push
pop
jmp
push
mov
push
cmp
push
jne
mov
cmp
jl
cmp
jg
sub
jmp
mov
cmp
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzx
test
je
and
mov
mov
push
jmp
and
mov
push
pop
lea
push
push
push
push
push
lea
push
push
push
call
add
test
je
cmp
jne
movzx
jmp
movzx
movzx
shl
or
pop
leave
ret
mov
push
cmp
jae
mov
and
sar
mov
lea
mov
test
je
mov
mov
and
cmp
jne
and
jmp
cmp
jne
or
neg
sbb
mov
and
add
pop
ret
mov
jmp
mov
or
pop
ret
push
mov
sub
push
mov
push
mov
mov
xor
push
mov
mov
mov
mov
mov
mov
mov
xor
and
and
and
cmp
lea
mov
jae
cmp
jae
cmp
ja
cmp
ja
xor
jmp
test
mov
jne
inc
test
jne
xor
cmp
jne
cmp
jne
jmp
xor
cmp
jne
inc
test
jne
cmp
jne
cmp
jne
mov
mov
mov
jmp
mov
lea
mov
mov
mov
add
cmp
jle
add
lea
mov
mov
mov
mov
mov
mov
movzx
movzx
imul
mov
add
push
push
push
call
add
test
je
mov
inc
add
sub
dec
jne
add
inc
dec
cmp
jg
add
cmp
jle
test
jne
lea
push
call
add
pop
cmp
jg
cmp
jg
add
cmp
jge
movsx
neg
add
mov
test
je
inc
lea
push
call
dec
pop
jne
cmp
je
or
cmp
ja
mov
and
cmp
jne
cmp
jne
and
cmp
jne
and
cmp
jne
inc
mov
jmp
inc
jmp
inc
jmp
inc
mov
cmp
jae
mov
or
mov
mov
mov
mov
mov
mov
jmp
neg
sbb
and
and
add
and
mov
pop
pop
pop
leave
ret
push
mov
sub
push
mov
xor
sub
cmp
je
jge
mov
mov
neg
mov
sub
cmp
jne
mov
mov
cmp
je
push
push
mov
add
sar
and
cmp
je
lea
cmp
lea
jb
lea
movs
movs
movs
dec
lea
push
push
call
pop
pop
xor
cmp
jne
pop
pop
pop
leave
ret
int3
jmp
