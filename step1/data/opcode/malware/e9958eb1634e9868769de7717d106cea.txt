pushf
mov
add
dec
add
add
add
add
add
add
add
add
add
nop
sub
add
je
add
xor
add
add
adc
sub
add
push
jb
add
jo
add
add
sub
add
or
push
outs
adc
add
adc
outs
adc
add
sub
add
adc
pop
add
add
add
add
adc
sub
add
add
add
or
push
or
or
or
add
adc
mov
sbb
add
adc
add
add
pop
sahf
add
pop
pop
or
and
add
add
add
inc
adc
adc
sub
xor
or
pop
outs
push
mov
pop
aam
pop
adc
xchg
pop
and
add
add
adc
xchg
or
add
xchg
sahf
adc
or
or
and
add
add
add
inc
adc
adc
sub
or
push
or
push
add
pop
pop
and
add
add
or
add
xchg
pop
and
add
add
adc
xchg
or
add
xchg
sahf
adc
or
aam
adc
aam
adc
add
xchg
adc
xchg
pop
and
add
add
popa
sub
add
or
pop
adc
adc
adc
push
add
inc
adc
adc
sub
or
add
or
and
sub
add
or
sub
add
pop
add
or
add
add
add
xor
add
add
add
add
adc
jle
add
add
inc
or
sub
add
add
jo
add
add
sub
add
or
add
or
add
or
pop
add
add
jle
add
add
sub
or
add
add
xor
add
add
add
add
add
add
add
sub
push
sub
add
add
add
adc
add
and
add
add
sub
add
jo
add
add
sbb
add
or
je
add
sbb
sub
pop
sub
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
jle
add
add
add
add
and
jb
outs
addr16
add
add
or
add
push
push
add
add
add
inc
push
dec
inc
add
add
add
add
inc
ins
outs
bound
add
add
add
add
add
push
adc
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
push
add
add
push
add
jns
push
add
add
lldt
add
add
add
in
add
add
add
add
add
add
in
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
add
pushf
add
add
add
add
add
add
add
add
add
add
add
add
add
les
push
add
add
les
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
retf
add
add
add
add
add
add
xchg
add
add
and
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
add
push
add
add
add
add
add
lea
or
inc
add
add
add
push
add
add
or
sub
inc
add
add
add
adc
cmp
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
add
add
add
add
add
add
arpl
sub
jns
adc
add
add
aaa
add
add
add
add
loope
xchg
pop
add
inc
add
add
add
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
adc
add
add
add
add
add
imul
add
jae
add
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
ins
popa
jae
xor
inc
ins
popa
jae
dec
imul
add
outs
je
xor
cmp
outs
fs
gs
jae
popa
je
xor
xor
pop
dec
inc
dec
inc
inc
add
je
inc
push
inc
dec
dec
add
jne
outs
ja
dec
add
xor
xor
aaa
dec
add
arpl
ins
imul
add
jbe
imul
jne
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
add
je
inc
jne
je
jb
add
je
inc
jne
je
jb
add
jae
jne
arpl
jne
je
jb
add
je
outs
fs
popa
jae
add
imul
jae
bound
je
je
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
outs
gs
je
fs
outs
fs
je
jb
bound
add
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
jne
addr16
bound
je
jb
bound
add
imul
jae
bound
je
jb
bound
add
ins
push
imul
je
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
jb
fs
popa
jb
inc
je
jb
bound
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
outs
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jns
add
ins
jne
add
arpl
imul
je
ins
cs
outs
ins
jo
outs
outs
je
outs
fs
add
popa
jae
dec
imul
cs
ins
add
jae
gs
add
jae
jne
arpl
popa
outs
add
jae
gs
cs
ins
outs
bound
imul
add
jae
gs
cs
gs
arpl
outs
add
je
outs
fs
outs
outs
add
ins
je
jb
dec
outs
outs
add
je
push
gs
jne
arpl
popa
outs
popa
addr16
push
jns
je
ins
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
arpl
add
jae
gs
cs
imul
imul
je
ins
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
jae
gs
cs
gs
jne
arpl
add
popa
jae
dec
imul
cs
jb
jo
jb
imul
outs
jne
arpl
cs
jae
jne
arpl
add
jne
imul
jae
inc
ins
popa
jae
dec
imul
cs
jb
jo
jb
imul
inc
jns
gs
inc
gs
bound
arpl
gs
inc
outs
je
jns
outs
imul
popa
jae
jb
jo
add
outs
jbe
jb
add
jae
gs
cs
gs
add
je
inc
jae
gs
bound
add
add
cmp
dec
add
push
add
dec
add
dec
add
pop
add
push
add
push
add
dec
add
inc
add
dec
add
push
add
dec
add
add
dec
add
add
add
add
jae
dec
add
bound
jb
popa
add
jns
xor
add
jb
outs
add
add
je
imul
add
add
outs
add
jb
arpl
add
add
dec
add
dec
add
inc
add
add
xor
sub
add
add
or
and
add
adc
add
push
add
add
add
push
add
push
add
add
cmp
cmp
add
pop
push
and
sbb
sbb
sbb
sbb
add
add
adc
and
sbb
add
add
dec
adc
add
adc
jns
and
adc
push
adc
push
add
add
push
adc
sbb
pop
push
sbb
mov
push
adc
push
adc
add
add
add
sbb
add
add
dec
add
add
push
add
push
add
add
adc
or
adc
or
sbb
or
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
pop
add
add
add
add
or
jae
imul
add
add
add
add
adc
jo
jb
addr16
and
xor
xor
add
or
add
xor
xor
xor
xor
add
add
push
jns
je
ins
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
add
add
add
add
add
add
add
je
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
loopne
cmp
retf
add
add
dec
add
dec
add
inc
add
add
add
add
mov
aad
out
aaa
rol
inc
fcmove
dec
(bad)
test
out
fwait
sbb
push
push
cmp
add
data16
stc
fsub
test
les
sbb
add
retf
xchg
ror
hlt
neg
and
jle
dec
outs
imul
xlat
mov
stc
fucom
leave
and
clc
or
pop
aas
jle
push
add
ret
iret
xchg
xchg
jo
xor
jp
sub
cmp
adc
adc
dec
push
push
jns
sahf
imul
inc
mov
fmul
sbb
mul
nop
ins
inc
js
push
inc
or
inc
cmp
sbb
inc
mov
bound
sar
or
xchg
stos
shl
hlt
je
popa
cmove
arpl
jg
xor
jbe
mov
cmps
sti
jno
xor
or
inc
lock
retf
inc
push
dec
out
scas
dec
mov
repnz
dec
mov
mov
or
outs
pusha
inc
and
xor
fdiv
push
cmc
mov
pop
jle
mov
sar
add
fwait
add
(bad)
xchg
add
mov
gs
std
push
inc
loop
in
and
enter
daa
in
ss
in
in
sbb
add
push
sub
pop
cmp
repnz
push
cmovne
out
push
inc
pop
dec
fucomip
ins
out
fnsave
jmp
outs
push
sbb
push
movs
cld
ror
clc
sti
push
dec
sub
pop
pop
cmps
ss
rol
mov
sbb
and
add
js
pop
or
sub
sahf
mov
ret
inc
push
and
out
mov
mov
mov
adc
dec
xchg
sbb
call
inc
dec
arpl
pop
pop
adc
xchg
mov
mov
jmp
sub
xchg
dec
aad
add
in
mov
out
cmc
dec
dec
adc
ins
mov
cmp
mov
add
cwde
cmp
mov
sbb
jp
and
jnp
xchg
call
pop
xchg
pop
mov
sbb
cmp
test
jne
pop
mov
add
push
jno
ss
mov
ret
cmps
int3
pop
push
cs
push
jae
mov
cmp
mov
xor
sub
into
xchg
mov
mov
jle
and
and
cli
cli
mov
data16
pop
mov
push
js
test
mov
cli
sub
dec
outs
mov
loop
dec
cmc
scas
addr16
or
mov
into
aas
ror
ret
lea
cmp
fs
sbb
pop
dec
xchg
cmp
and
mov
jns
cmp
xchg
pop
pop
jecxz
sub
retf
out
mov
xor
inc
getsec
ret
or
ret
dec
in
sahf
mov
mov
sub
nop
mov
arpl
mov
xor
inc
push
out
out
fs
fisttp
xor
dec
push
add
add
shl
icebp
xchg
push
jns
iret
and
clc
sbb
sbb
std
and
or
test
jp
inc
adc
push
mov
jp
jne
add
mov
popf
pop
pop
out
xor
shr
add
push
(bad)
cmc
lahf
lahf
jnp
push
xchg
sbb
sub
int3
retf
push
fwait
pop
inc
xor
sub
xor
test
jge
in
dec
iret
pop
xlat
xchg
loope
mov
dec
adc
dec
imul
loop
inc
aas
jbe
mov
enter
(bad)
sbb
stos
sub
and
adc
fisttp
jl
inc
jmp
cld
lea
arpl
bound
mov
popf
xchg
jle
cli
sub
fdiv
or
mov
in
mov
lds
int
fisub
push
retf
push
mov
or
(bad)
xor
(bad)
jge
push
mov
sub
leave
ja
ins
int3
fld
jno
call
pop
jmp
dec
nop
das
xchg
fidiv
xlat
aas
popf
jle
mov
jmp
add
bnd
dec
imul
inc
push
mov
push
popa
clac
inc
xchg
fucom
jp
std
and
pop
aad
push
gs
push
ins
push
jge
imul
sub
(bad)
xor
or
lods
jge
sub
test
pusha
cs
inc
lods
loope
add
dec
bsr
and
jns
xchg
aaa
push
xchg
shl
mov
(bad)
aam
shl
int3
jo
xchg
imul
mov
or
mov
jecxz
or
aas
dec
mov
sbb
les
jle
add
xchg
push
lds
pop
push
mov
cli
retf
cmp
lods
pop
jnp
mov
dec
sub
retf
xlat
inc
inc
cmps
movs
in
mov
in
aaa
stos
jmp
mov
adc
mov
add
inc
into
sub
push
popa
fstp
out
xchg
stos
inc
imul
in
addr16
call
xchg
adc
jecxz
add
xchg
fidiv
movs
mov
cli
mov
adc
inc
daa
inc
sahf
push
mov
mov
adc
stc
inc
cdq
pop
sbb
test
and
xor
xchg
fdivr
fisub
mov
loop
scas
and
lock
lock
pop
jbe
(bad)
in
cli
bound
mov
add
xor
mov
jecxz
mov
mov
xor
mov
push
test
fisttp
jb
jmp
pop
dec
repz
sbb
scas
pop
cdq
jecxz
xlat
fst
adc
lea
fs
loopne
cmp
inc
pop
pop
or
jg
das
nop
jne
ins
push
and
mov
cmp
fstp
out
loopne
or
pop
sub
dec
add
into
repz
sbb
sbb
(bad)
push
or
mov
bound
xlat
lahf
cdq
adc
repz
mov
imul
mov
inc
daa
in
fmul
enter
iret
nop
adc
dec
in
jno
xor
fwait
inc
xor
inc
adc
inc
push
(bad)
push
inc
es
pop
into
inc
cmp
mov
or
fidiv
pop
cmp
pop
mov
ins
out
cmp
lock
nop
mov
pop
lahf
jno
or
inc
add
jne
push
mov
mov
div
cwde
fisubr
aaa
loopne
xlat
imul
in
fwait
jno
jnp
ds
adc
iret
(bad)
(bad)
retf
rol
data16
dec
jns
cmovno
(bad)
sahf
inc
lods
gs
pop
les
jo
xchg
or
ret
cmp
inc
fdivr
jae
dec
movs
rcr
inc
or
mov
jb
pop
add
pand
icebp
adc
call
je
iret
push
xlat
loop
xlat
xchg
inc
push
pop
inc
out
(bad)
lock
in
pop
(bad)
outs
mov
out
nop
ss
adc
fistp
or
movs
aaa
mov
test
test
lea
adc
leave
inc
xchg
movs
xchg
or
push
cmp
arpl
inc
xchg
(bad)
dec
adc
dec
repz
inc
cli
mov
cmp
adc
adc
call
adc
push
out
into
mov
repz
int3
sbb
inc
push
or
mov
fistp
mov
sbb
sbb
int3
shl
fld
cmp
pop
fst
mov
repnz
jne
daa
cmp
pop
and
and
jmp
sub
jl
jne
inc
sbb
scas
inc
xor
rcl
das
jg
outs
dec
stos
movs
pop
or
sar
xor
nop
repnz
jo
in
out
xchg
cmp
mov
xchg
(bad)
fiadd
add
out
mov
int3
dec
dec
or
movs
jb
mov
enter
jmp
call
out
mov
mov
into
jmp
and
in
dec
sub
push
fs
es
cmp
pop
cmp
jl
int
ins
cmps
jbe
test
xchg
and
jmp
or
mov
sbb
sub
pop
pop
pop
and
mov
xchg
ror
adc
inc
pop
iret
xor
(bad)
ror
add
(bad)
nop
adc
scas
fcom
jo
mov
ss
dec
ja
jp
xchg
(bad)
dec
sub
movs
cmp
xor
test
test
in
stc
fcom
outs
je
(bad)
out
and
ins
cmp
(bad)
loop
jnp
or
popa
push
cmp
inc
xchg
xor
push
mov
sahf
out
aad
dec
pop
jae
cmp
cmp
pop
sbb
jecxz
or
pop
outs
lds
dec
cmp
adc
add
cmc
test
sub
ins
enter
xchg
fsub
xchg
sub
fisubr
push
dec
add
dec
mov
inc
adc
clc
jge
sub
cmps
push
adc
les
(bad)
sti
(bad)
cli
jge
ja
test
outs
rcl
adc
mov
and
mov
jmp
inc
jnp
aaa
out
sub
jp
arpl
retf
int
mov
cmp
retf
dec
dec
mov
adc
mov
pop
sar
cwde
outs
ret
jmp
push
push
sub
mov
xchg
add
cmp
sbb
cmp
daa
cmps
xor
in
sub
inc
outs
imul
test
adc
sahf
dec
pop
cmp
arpl
inc
popa
jmp
jmp
pop
popf
ins
add
call
xor
push
in
push
or
sub
clc
fild
dec
pop
inc
int
fsubrp
or
mov
neg
cwde
ror
sbb
pop
mov
mov
cs
xchg
sbb
ss
jp
jo
dec
xlat
push
fistp
jne
(bad)
repnz
push
mov
push
adc
addr16
jg
mov
mov
cmp
popf
sub
int3
ds
dec
jbe
mov
xor
push
(bad)
lods
sbb
push
pop
add
xchg
mov
das
movs
imul
xchg
dec
xor
scas
inc
xchg
(bad)
ss
jnp
stc
jnp
(bad)
jecxz
cmps
repz
xor
mov
push
out
iret
out
not
icebp
inc
pusha
hlt
ins
lods
int
hlt
push
cmp
out
mov
sub
test
test
push
pop
xor
cdq
adc
mov
inc
and
stc
add
ret
pop
pop
dec
dec
mov
ret
cmp
mov
add
pop
stos
pop
pushf
mov
mov
fisttp
fmul
mov
fld
imul
fcmovnbe
stos
xchg
fstp
add
shld
jp
je
inc
aad
and
cli
pop
jb
loope
jns
pop
add
repz
jge
retf
xor
push
jmp
add
data16
mov
outs
adc
neg
adc
xor
in
cmps
jae
mov
das
jb
aaa
xor
mov
inc
dec
xchg
into
xor
or
sbb
jg
sahf
js
cwde
sbb
out
sar
jb
or
mov
repz
cmc
lods
pop
xor
clc
pop
mov
jmp
in
rol
or
xor
iret
les
and
add
iret
std
fstp
mov
xor
ins
int3
(bad)
repnz
push
sbb
push
mov
push
cmp
mov
sbb
fistp
add
shl
outs
jno
lahf
sub
jae
pop
sar
sub
movs
repz
and
cwde
pop
jmp
(bad)
movs
aas
(bad)
in
les
mov
popa
push
test
add
mov
leave
lds
stos
xor
pop
dec
pushf
int
xchg
retf
pop
aam
addr16
mov
jbe
sub
adc
dec
int3
pop
xlat
cmp
sbb
(bad)
xor
mov
xlat
and
mov
inc
inc
or
(bad)
aam
xchg
xor
mov
sbb
sub
popa
out
mov
sub
loope
(bad)
aam
das
mov
add
pop
cmp
jmp
cli
pop
cwde
xchg
jmp
das
cmp
pop
mov
test
xor
sbb
xor
mov
scas
pop
std
arpl
xchg
fisttp
pop
inc
dec
jns
jno
ja
stos
jae
sub
lock
aas
push
jo
jge
mov
stos
dec
iret
inc
adc
stos
fbld
lods
jb
xor
test
nop
fimul
pop
imul
ret
das
xlat
iret
fucomi
xchg
int
popa
mov
scas
pop
xor
ret
mov
push
add
in
idiv
dec
lods
enter
push
sbb
or
js
sbb
adc
mov
fadd
jns
xchg
aas
fidivr
call
enter
sbb
fidiv
es
sbb
dec
xchg
jge
lods
stos
xchg
cdq
jmp
jmp
jo
xor
out
pop
inc
test
movs
mov
push
outs
push
jbe
jmp
pop
and
movs
loopne
adc
adc
or
movs
arpl
xor
jl
xlat
out
or
push
cmp
aam
and
stos
jno
mov
sti
leave
iret
xchg
or
xchg
dec
xchg
sub
call
inc
mov
pop
cmps
xchg
mov
xchg
mov
(bad)
out
(bad)
fdivr
aam
cmp
repnz
inc
in
push
ret
push
dec
mov
aad
mov
xor
int3
mov
push
jnp
pop
xor
ret
and
ror
cmps
add
dec
ret
int
cmp
jg
xchg
aad
xchg
mov
js
pop
mov
repnz
xor
int3
call
std
xor
(bad)
int
and
xchg
into
jne
sub
xchg
jne
pop
repz
std
out
jecxz
adc
cwde
cmp
cmp
cmps
push
sar
ds
aad
aas
rcr
bound
mov
aad
fisttp
xchg
pop
adc
(bad)
push
mov
arpl
sub
lods
cdq
pushf
out
jmp
mov
into
movs
ds
loop
fbld
pop
xor
add
jmp
fmul
sub
pop
sbb
mov
adc
scas
shr
sbb
cli
mov
sti
inc
jmp
push
cmp
push
(bad)
sbb
js
inc
lds
sub
(bad)
div
das
rcl
fnstsw
test
adc
cwde
addr16
mov
nop
ja
pop
js
cmp
(bad)
adc
cmp
clc
cmp
inc
sbb
cmp
mov
test
mov
and
bound
jg
push
inc
fs
(bad)
les
sub
and
pusha
(bad)
ins
hlt
aas
shl
cmp
in
push
sbb
mov
in
mov
test
push
movs
mov
dec
(bad)
pop
jb
(bad)
ins
cmc
mov
adc
pusha
shl
mov
add
je
inc
frstor
enter
xchg
ret
hlt
cmps
mov
mov
inc
mov
mov
jns
imul
ror
sub
or
xor
enter
mov
popa
push
retf
ds
xchg
test
push
sbb
sahf
popa
repnz
mov
xchg
stc
cli
rcl
adc
dec
mov
push
lahf
sbb
pop
push
in
adc
mov
std
ror
push
inc
xchg
sub
call
clc
mov
sbb
xor
mov
jg
add
lahf
mov
jae
jae
mov
cmps
nop
xchg
cmp
sub
mov
stos
push
aas
dec
dec
or
add
arpl
pushf
mov
pop
outs
push
aas
mov
fwait
and
and
push
inc
lds
in
sbb
and
ret
cld
sbb
xchg
pop
outs
cmp
or
xor
jo
dec
adc
sbb
jmp
or
jo
outs
mov
das
add
mov
cwde
cdq
ds
fwait
cdq
push
clc
dec
(bad)
scas
mov
mov
pop
popa
xor
mov
adc
cmp
leave
or
rcr
or
lods
sbb
lods
ins
and
ss
cmps
push
dec
pop
dec
sub
add
sar
add
dec
movs
add
test
mov
jbe
addr16
mov
cmp
push
push
inc
fimul
inc
iret
push
test
cmps
inc
pop
pop
dec
cdq
int3
neg
mov
call
mov
in
or
mov
xor
jnp
xor
test
test
ret
out
xchg
inc
xor
shl
test
ror
mov
hlt
mov
std
cwde
gs
mov
xor
xchg
push
adc
inc
outs
cmp
and
lahf
retf
fsubr
pop
add
jmp
pop
jl
sbb
(bad)
jecxz
push
xchg
retf
outs
in
cmp
test
scas
in
call
sub
lods
sub
mov
pushf
cmp
sar
aam
jo
out
sbb
les
mov
out
jno
lea
mov
int3
adc
fst
cmp
mov
cs
inc
sti
add
cmp
dec
mov
jns
jne
fld
mov
push
int3
ror
mov
mov
rcl
(bad)
arpl
cwde
sbb
mov
sahf
xor
outs
fld
in
or
xlat
and
pop
push
sub
imul
sub
mov
sbb
dec
jecxz
inc
and
dec
dec
iret
cmp
repnz
and
idiv
mov
enter
push
inc
fwait
lock
and
repnz
stos
jmp
fs
jge
out
pop
aad
fwait
sub
fnstenv
sbb
lock
dec
jno
arpl
sub
push
xor
jbe
lahf
dec
adc
pop
inc
enter
mov
pushf
dec
pop
movs
cmp
dec
or
sub
out
popa
add
mov
xor
js
std
push
cwde
or
(bad)
test
fs
cwde
cs
inc
mov
mov
jl
inc
xchg
sbb
fist
mov
call
js
movs
inc
pop
mov
xchg
adc
xchg
pop
(bad)
pop
jmp
cli
daa
pop
data16
js
sbb
out
add
xor
je
push
cmp
mov
daa
outs
mov
pop
movs
xor
std
int3
jo
dec
not
call
dec
sar
mov
mov
hlt
loop
cmp
leave
mov
inc
mov
lods
jne
loopne
and
sub
adc
sbb
mov
push
rol
mov
ret
xchg
cmp
(bad)
repnz
lock
test
push
iret
adc
pop
inc
push
push
cmp
cdq
pop
dec
retf
adc
inc
(bad)
cmps
jns
aam
jecxz
scas
bound
pop
retf
imul
xlat
call
inc
scas
gs
sub
(bad)
cs
sub
jno
mov
inc
in
mov
cld
sub
mov
das
retf
and
mov
sub
sub
aaa
not
retf
adc
es
in
dec
mov
aad
mov
push
mov
ds
xchg
(bad)
xchg
retf
repnz
add
ret
cdq
xor
aas
ret
add
mov
cmps
or
xchg
ss
jo
cld
mov
fdivrp
xor
mul
data16
mov
lods
hlt
stos
aas
inc
jl
pop
jle
stos
cld
sahf
rcr
xor
stc
rcr
clc
pop
das
xchg
sbb
jecxz
ret
repz
(bad)
mov
mov
inc
mov
adc
addr16
repz
repz
pop
jnp
rcl
push
pop
std
push
sbb
jge
imul
or
ret
mov
shr
adc
dec
mov
leave
mov
jg
sub
test
and
pop
jae
ins
ins
fidiv
cs
loope
xchg
jbe
cmp
jb
xor
mov
add
jmp
sub
pop
pop
push
inc
or
mov
xchg
out
mov
mov
cld
jb
push
dec
mov
push
push
and
xchg
cwde
xchg
xor
jbe
pop
and
imul
mov
inc
adc
xchg
and
inc
mov
daa
push
adc
sbb
mov
add
xor
pop
inc
mov
pusha
stc
neg
mov
mov
mov
xchg
sbb
dec
sbb
dec
idiv
dec
loope
aas
je
jmp
cwde
test
loope
push
sbb
and
add
imul
test
cmc
sub
sbb
mov
frstor
mov
cmp
cmp
jmp
mov
lea
add
fisubr
sub
mov
rcr
call
in
lds
mov
ror
test
cmps
daa
adc
dec
xor
inc
mul
aaa
pop
adc
mov
mov
jmp
sbb
push
in
push
lds
mov
fmulp
les
xchg
mov
rcr
shr
push
push
pop
sbb
cmp
push
stos
js
sub
jnp
or
ss
scas
es
test
arpl
int3
xor
mov
in
pop
push
jo
jae
adc
adc
jl
adc
cmp
lahf
test
hlt
inc
aad
inc
lea
(bad)
nop
loop
out
es
fisub
gs
clc
pushf
sub
push
add
push
movs
xor
mov
sahf
cmp
dec
mov
push
repz
mov
mov
aad
inc
pop
mov
call
push
test
pop
mov
not
or
pop
jae
aam
mov
test
cmp
mul
adc
jne
rol
outs
scas
fidivr
mov
or
pop
cmp
lods
push
ins
xchg
addr16
mov
adc
pushf
cwde
fisttp
icebp
pop
jb
pop
sub
mov
cdq
push
test
rcl
ins
cli
cmp
pushf
inc
sub
mov
ja
(bad)
mov
lds
out
adc
jle
mov
daa
mov
outs
sub
pop
add
and
or
jae
loop
int
and
rcl
mov
pop
cdq
cmp
cli
sub
jae
or
pop
pop
cmp
cmp
sub
mov
mov
pop
mov
xor
jmp
fisubr
(bad)
loope
push
dec
cmp
clc
in
mov
xor
sbb
ret
mov
mov
mov
or
jae
mov
adc
jle
xor
sbb
xchg
jmp
movs
mov
xchg
jae
cmp
jle
lods
movs
push
cmps
hlt
pop
scas
(bad)
rcr
aaa
pop
iret
xor
cmp
inc
cwde
sub
mov
mov
(bad)
inc
cmp
movs
jno
xchg
push
xor
fwait
icebp
jg
das
xor
dec
cmp
mov
je
push
leave
repz
cwde
in
cwde
push
enter
sub
dec
adc
push
pop
mov
loop
adc
scas
mov
test
lahf
push
repz
pop
sub
mov
cld
push
jo
test
int3
mov
ror
xchg
mov
cmp
add
repz
jbe
sbb
and
cmp
loopne
xor
dec
cmps
out
stc
mov
lock
add
or
jl
stc
fldl2e
add
pushf
mov
int
mov
movs
ret
adc
cs
ret
pop
fsubr
xor
arpl
push
hlt
jle
ret
cmp
sahf
call
call
add
leave
stos
push
pop
cdq
jge
inc
das
jmp
ficom
lods
les
icebp
inc
into
addr16
into
add
dec
xor
sti
movs
xchg
daa
adc
dec
jo
mov
dec
lea
jmp
mov
mov
inc
sub
ror
bound
repz
jmp
or
add
pop
mov
adc
cdq
fcomp
inc
movs
es
das
and
xor
cmc
adc
push
test
dec
mov
mov
adc
mov
loope
push
xor
sbb
xor
push
dec
sbb
mov
dec
cmps
pop
pop
pop
pop
fwait
and
mov
mov
in
loop
loopne
add
mov
mov
fsubr
movs
inc
pop
mov
ficom
loope
loope
cmp
scas
pop
out
or
cmp
cmp
inc
bound
pop
fst
dec
lds
js
fistp
scas
jp
inc
and
push
xchg
pushf
(bad)
mov
sub
lods
bound
into
ins
mov
adc
sbb
bound
jno
sbb
cld
in
pop
mov
or
fsub
mov
add
pop
sbb
aam
push
ror
mov
xor
or
test
mov
dec
aas
cmp
xchg
or
loop
imul
fs
into
dec
mov
jle
cmp
push
or
ret
mov
and
push
mov
outs
call
jb
(bad)
test
push
ds
mov
test
sar
scas
sbb
das
cmp
adc
mov
sub
ficom
and
cli
daa
fmul
xor
adc
movs
arpl
ror
adc
out
test
mov
push
mov
mov
cli
cmps
mov
dec
fsub
and
xchg
fninit
sub
jbe
stos
pusha
cmp
bound
xor
mov
and
pop
dec
add
jge
and
fmulp
sahf
cmp
xchg
into
icebp
lds
fstp
or
jle
addr16
add
mov
pop
mov
(bad)
lahf
mov
mov
fadd
mov
ins
int
mov
mov
je
inc
ret
push
mov
inc
mov
cli
fiadd
push
pop
sar
or
xor
mov
call
daa
stc
jbe
cdq
jb
dec
inc
push
into
cmp
gs
sbb
add
cli
addr16
mov
and
dec
inc
sbb
dec
jecxz
xchg
cmp
sbb
mov
ins
bound
jnp
cmps
push
nop
(bad)
mov
push
pop
jae
cmc
xchg
cwde
adc
(bad)
jns
sub
jl
nop
jecxz
ss
add
jmp
mov
mov
jnp
loop
int
or
mov
adc
or
in
neg
add
test
fld
jmp
in
vmovlpd
inc
sbb
mov
mov
sub
push
xchg
leave
cmc
into
(bad)
out
pop
push
jge
(bad)
inc
mov
stos
test
push
xor
jo
popa
add
lods
aas
push
inc
xchg
test
lods
js
bound
aad
lods
xlat
push
ins
lahf
push
dec
stos
mov
movs
icebp
jbe
repnz
mov
nop
mov
mov
and
int
push
jecxz
ins
lahf
push
inc
sub
fisttp
je
pusha
mov
aaa
sbb
add
mov
mov
sub
push
icebp
sahf
jnp
test
stos
ficomp
and
cmps
pop
sar
push
mov
idiv
fmul
mov
mov
cli
les
jbe
xor
jns
scas
xchg
inc
aaa
test
push
jecxz
xor
sbb
jecxz
fwait
jecxz
inc
and
xor
add
fnsave
icebp
(bad)
jbe
cld
mov
sbb
cs
xchg
mov
stos
xor
fwait
xlat
jbe
add
retf
call
mov
pop
jns
or
mov
data16
xor
rcl
mov
push
push
adc
push
hlt
mov
xor
shl
ret
inc
call
test
pop
test
ret
sti
dec
jb
mov
cmps
ins
add
cmp
dec
jmp
cmp
js
jae
pop
xor
add
add
pop
sub
cli
sbb
pop
and
rol
or
out
dec
and
jp
lods
lds
fiadd
out
or
mul
xor
pop
inc
imul
in
inc
inc
mov
mov
pop
fs
call
xchg
sub
push
jbe
hlt
mov
lahf
xor
ins
mov
and
jb
jo
push
mov
xchg
mov
and
std
into
or
xor
and
sub
mov
stos
mov
xchg
or
mov
lods
push
out
sbb
pushf
rcl
mul
push
lds
(bad)
(bad)
xchg
or
push
and
ret
addr16
data16
jns
inc
adc
mov
push
(bad)
add
pop
inc
popa
push
add
out
xchg
fst
and
xlat
pop
cdq
ret
jmp
popf
ret
(bad)
pop
mov
xchg
sub
jl
leave
add
ins
(bad)
lock
xchg
movs
jmp
leave
mov
ds
dec
pop
imul
adc
fstp
sbb
ins
lods
fcomp
clc
out
enter
push
xchg
shr
(bad)
pop
das
cmp
hlt
aad
not
cmp
outs
sbb
jmp
shl
test
call
inc
dec
xlat
std
sbb
test
push
in
add
mov
adc
imul
clc
mov
mov
jo
push
ins
shr
mov
lock
xchg
repz
sub
cmc
push
movs
mov
xchg
mov
pop
lods
out
jle
inc
rcr
sahf
or
ins
mov
dec
sbb
scas
bound
movs
push
mov
into
test
dec
mov
lods
jl
push
mov
inc
dec
pop
sbb
leave
push
inc
add
cmp
ins
sbb
xchg
not
js
inc
jge
mov
mov
mov
imul
sub
xlat
les
and
cmp
dec
enter
add
fwait
xchg
pop
jmp
(bad)
adc
mov
adc
call
xchg
jmp
jle
pop
and
cmp
xchg
jge
or
xor
dec
jge
std
jmp
mov
mov
ins
addr16
aas
jmp
call
pop
pop
test
out
xlat
sub
std
(bad)
aas
sub
mov
jl
dec
lods
leave
ret
popa
mov
hlt
inc
dec
in
sbb
push
mov
je
loop
cmps
adc
scas
adc
dec
jne
fisttp
popf
pop
mov
xchg
nop
shl
pop
out
invd
inc
mov
and
mov
ret
mov
lock
mov
ficomp
mov
push
ins
das
pop
nop
sar
inc
iret
pop
add
mov
leave
nop
add
mov
jl
mov
nop
sbb
test
mov
loop
jb
cmp
mov
ret
xchg
push
dec
cmp
cmp
push
or
dec
inc
ins
jg
add
mov
pop
mov
sub
aas
pop
xor
ret
pop
jne
into
xor
sbb
fisubr
adc
adc
scas
addr16
add
idiv
je
add
out
mov
add
push
(bad)
jp
push
xchg
cmp
mov
sub
mov
enter
push
sub
jns
xchg
mov
cmp
push
push
push
dec
arpl
mov
mov
inc
add
push
jge
sbb
pushf
mov
jno
stos
in
sti
imul
shl
loop
pusha
mov
pop
(bad)
pop
inc
mov
imul
push
es
xor
nop
cmps
fwait
outs
ret
cmp
sbb
iret
fucomip
jmp
pop
lods
test
scas
les
outs
fisubr
sbb
xchg
adc
mov
out
mov
ins
add
leave
loopne
adc
call
outs
or
call
lock
inc
movs
push
or
sub
ret
xchg
hlt
add
aam
cmps
mov
and
call
xor
mov
(bad)
push
movs
aas
push
and
in
xchg
adc
in
inc
mov
cmp
(bad)
mov
dec
mov
arpl
cdq
ins
sub
out
mov
and
mov
jmp
and
shr
aas
sbb
int
ins
push
hlt
mov
pop
xor
dec
pop
adc
shl
ficomp
mov
call
repz
sub
and
les
mov
test
sbb
in
int
sub
jns
xchg
sub
add
and
or
xor
add
jmp
push
call
push
mov
popf
push
xchg
arpl
div
and
in
mov
jne
cmps
dec
(bad)
mov
loopne
xor
or
ins
nop
push
cmp
dec
cmp
sahf
sar
scas
or
movs
in
stos
mov
add
mov
inc
push
jbe
int3
(bad)
repnz
lods
ret
add
sbb
jne
leave
int3
bound
(bad)
dec
pushf
xor
xchg
adc
add
sbb
in
push
(bad)
jge
loopne
dec
cmp
movs
xor
iret
add
push
xchg
inc
mov
push
addr16
test
sbb
or
or
stc
push
jmp
shr
jl
loope
pop
mov
cmp
sub
in
push
retf
cdq
inc
std
out
aad
dec
xchg
ins
cld
pusha
je
jmp
lds
dec
cdq
cli
mov
mov
sub
(bad)
cwde
cmp
test
sub
cmp
jmp
jo
scas
xchg
repnz
add
push
dec
adc
jns
mov
stos
cmp
mul
js
jmp
cdq
clc
or
(bad)
popf
jnp
or
stc
(bad)
adc
and
in
icebp
sbb
movs
out
test
sub
(bad)
loop
push
sbb
dec
ins
dec
xor
icebp
pusha
js
scas
pop
ins
and
loop
pop
out
cmps
sub
pop
inc
mov
jo
jl
inc
mov
rol
dec
and
stos
sar
inc
test
xor
aad
imul
test
ins
sbb
stos
push
bnd
xchg
data16
pusha
sti
jo
push
mov
pushf
adc
dec
mov
jnp
mov
and
(bad)
jb
fdiv
push
ds
jnp
add
repz
pop
in
mov
bound
lods
imul
test
das
mov
push
sbb
aam
aam
fisub
sbb
rcr
shr
in
jmp
mov
(bad)
jns
fisttp
adc
ret
push
adc
pop
mov
and
and
xchg
inc
dec
ret
dec
pop
mov
or
mov
pusha
push
jo
sbb
pop
push
lahf
inc
out
ins
pusha
in
adc
jp
sti
out
or
enter
dec
sbb
pop
ins
into
xchg
lock
adc
add
xchg
sbb
mov
test
inc
lods
lea
(bad)
shr
xchg
or
dec
sbb
outs
jns
stc
push
inc
dec
xchg
add
push
jno
mov
ret
xchg
pop
ret
(bad)
loopne
xor
retf
daa
outs
inc
fist
out
fistp
jl
jbe
jmp
mov
and
pop
push
gs
sub
jb
(bad)
and
fsub
cmps
dec
mov
dec
jbe
pop
mov
mov
add
ds
dec
loope
mov
mov
out
call
xchg
jl
das
pop
mov
sbb
dec
retf
mov
push
sbb
adc
push
sub
add
adc
push
das
fisttp
mov
push
mov
test
cmp
xchg
sbb
ficomp
push
cmp
aas
test
loopne
in
sub
imul
mov
adc
pusha
mov
and
rol
stos
mul
mov
retf
pop
stos
inc
jp
mov
shl
arpl
fwait
xor
js
out
loop
jbe
push
fild
out
jmp
in
fld
idiv
push
mov
je
pop
pop
imul
or
push
out
or
dec
test
sub
push
repnz
and
jae
test
pop
sub
mov
je
outs
jecxz
sbb
retf
fdivr
es
and
and
or
push
dec
inc
lahf
or
stos
cmc
dec
push
or
mov
daa
mov
jle
mov
loopne
dec
push
push
cmp
push
iret
fsub
mov
xlat
or
pop
jp
pop
pop
bound
adc
cmp
inc
sbb
sahf
mov
(bad)
fsub
ret
jbe
pop
cmc
icebp
(bad)
imul
xor
ins
xlat
or
std
cvttps2pi
ret
sbb
pop
pop
cmp
or
xor
pop
div
sub
mov
push
and
cmp
jg
dec
jmp
cmp
ins
ror
aaa
(bad)
cmp
or
fild
jmp
int3
cli
or
scas
jp
xchg
mov
js
ss
adc
ret
cmps
jne
jge
repnz
xchg
clc
mov
add
add
xchg
mov
add
in
outs
or
adc
dec
imul
in
mov
push
add
ficom
stos
sahf
cmp
aad
mov
push
and
adc
jmp
das
xchg
ja
cmp
push
fnsave
and
daa
aad
das
sahf
push
sti
mov
imul
push
outs
loope
inc
stos
add
or
adc
or
sub
les
imul
dec
jmp
add
adc
cld
inc
or
lds
outs
sbb
push
jmp
fisub
in
mov
xchg
mov
mov
inc
mov
ss
mov
xor
inc
fmul
icebp
add
je
jg
dec
repnz
adc
movs
sub
xchg
and
into
mov
add
leave
jmp
addr16
or
das
stos
inc
mov
jo
dec
in
mov
aam
mov
mov
add
jmp
sub
push
inc
mov
push
lahf
mov
mul
mov
out
and
js
jns
sbb
mov
xor
pop
pop
sub
call
mov
inc
sbb
dec
xlat
out
and
out
fwait
arpl
mov
scas
sahf
sbb
xor
clc
jb
mov
mov
clc
inc
add
pop
push
ret
int3
dec
lods
or
cmp
cmp
add
mov
pop
push
pop
js
loope
leave
inc
mov
ins
and
jecxz
adc
leave
imul
aaa
sub
pop
adc
aad
mov
xor
fistp
sbb
cmp
adc
aaa
jb
sbb
lods
ins
out
call
leave
sub
aad
fcomi
shl
pop
mov
xor
xor
pop
je
adc
cmp
mov
pop
mov
push
xor
les
inc
dec
fs
test
imul
int3
cmps
fadd
jmp
repnz
and
fcomp
fs
dec
fcmovbe
pop
mov
pop
fadd
shl
into
sbb
ret
movs
pushf
ret
test
arpl
cmp
and
push
shl
pop
or
fnop
push
(bad)
sub
outs
bound
call
inc
jmp
pop
mov
movs
arpl
lea
mov
jle
mov
jmp
push
push
rcr
cwde
dec
adc
cs
test
cmp
xchg
jne
outs
dec
int
pop
jno
aam
adc
scas
cli
add
jl
(bad)
popa
lea
aad
and
or
fisttp
fucomi
push
inc
jl
adc
retf
in
arpl
inc
sar
cmp
add
sbb
xchg
in
rcl
call
pop
sbb
dec
ja
xlat
neg
add
push
dec
adc
pop
jae
imul
dec
mov
sub
popf
mov
fnsave
mov
fist
or
es
sbb
push
stc
and
adc
test
aas
add
xchg
gs
sbb
xor
xor
mov
mov
out
xor
loop
cmp
jb
sub
dec
rcl
sbb
jle
xor
sub
xor
jecxz
rcl
scas
pop
xchg
and
in
xlat
push
ins
ja
aam
gs
xlat
mov
and
cmp
arpl
cwde
aas
outs
inc
arpl
fcomi
mov
adc
ins
in
pop
push
aad
push
inc
sar
mov
dec
inc
sahf
(bad)
adc
sbb
rcr
xchg
mov
stos
xchg
mov
push
xchg
stc
sub
aam
adc
fnsave
xlat
aam
xor
addr16
sub
leave
add
test
sbb
retf
ins
mov
sub
push
lock
or
bound
add
call
sbb
xchg
cmp
popa
out
jg
add
add
add
sub
aad
bound
mov
test
call
(bad)
mov
into
dec
xchg
sub
shl
imul
ds
xor
jp
cmp
xor
xor
ins
ffree
mov
push
or
pop
and
es
add
dec
add
jno
lds
sahf
pop
pop
stos
xor
push
in
cmp
pushf
repz
int3
jmp
pop
(bad)
xlat
jnp
mov
mov
dec
lods
inc
xchg
ss
dec
jl
(bad)
dec
data16
mov
loopne
cld
adc
cmps
or
sub
stos
push
cwde
pop
ins
xlat
jmp
pop
movs
sub
pop
sbb
movs
into
sahf
cmp
sub
push
add
out
jae
rcr
add
push
add
push
jb
arpl
retf
mov
push
fidivr
cmp
push
jecxz
or
dec
xor
xchg
daa
rol
cdq
(bad)
ret
adc
lea
xor
mov
ret
pop
test
aas
fs
shl
xchg
xchg
cli
jnp
lods
xor
retf
add
call
(bad)
xor
mov
clc
xrelease
mov
dec
push
push
sbb
xchg
mov
xchg
pop
xor
sbb
mov
scas
cmp
shl
mov
or
mov
push
jo
int
test
loopne
mov
cmp
in
sar
icebp
mov
cmp
add
sub
ds
xchg
js
test
mov
(bad)
out
jmp
dec
and
add
fwait
inc
inc
xor
int
push
test
xchg
jg
pop
repz
jns
mov
cdq
or
mov
or
aas
sbb
pop
in
inc
push
out
fdiv
mov
push
daa
add
jp
in
test
fdivr
cmp
fnstsw
mov
int
adc
pop
or
fild
mov
add
sar
push
out
nop
call
movs
cmp
mov
push
inc
lds
lods
popf
or
out
jb
push
fidivr
xor
sbb
lahf
popf
inc
in
inc
and
and
inc
and
test
ds
lahf
dec
dec
das
mov
xor
inc
sub
or
aas
mov
pop
push
mov
xor
(bad)
mov
sub
(bad)
mov
fnstcw
cdq
retf
int
xchg
in
lea
sbb
push
loop
(bad)
xchg
(bad)
loop
pop
cdq
xor
ret
pop
test
(bad)
xor
mov
clc
and
loope
inc
aad
pop
mov
fbld
adc
int3
cmp
cmp
call
leave
cmp
push
enter
lods
pop
mov
cmp
adc
imul
test
pop
jns
ficom
cmc
stc
mov
xchg
jno
jbe
xlat
enter
dec
add
inc
xchg
or
pushf
test
push
mov
mov
shl
mov
lods
iret
inc
ds
fwait
dec
mov
rol
sahf
cmp
push
sahf
xor
aad
retf
test
(bad)
pop
mov
lahf
push
mov
jge
repnz
repnz
and
adc
mov
jl
cmc
mov
outs
jp
lahf
(bad)
arpl
xor
sub
clc
ins
lods
or
mov
imul
mov
in
cli
or
ror
push
adc
rol
jb
scas
sbb
call
mov
ds
adc
(bad)
loope
mov
mov
sub
mov
dec
or
add
sbb
push
push
xor
or
popf
sbb
sub
pop
push
into
ss
into
inc
mov
cs
dec
outs
mov
cmps
mov
mov
(bad)
push
push
repnz
loopne
mov
sbb
ret
xor
cmp
cld
fmulp
dec
ja
xchg
sbb
arpl
mov
frstor
push
sbb
xchg
(bad)
adc
mov
enter
int3
cmp
xchg
or
push
idiv
add
pop
inc
in
sbb
nop
arpl
call
push
mov
test
enter
sti
sub
call
dec
inc
outs
imul
mov
fld
cmp
enter
out
dec
aaa
xcrypt-cbc
cmps
adc
jmp
(bad)
jl
push
fadd
call
pop
push
popf
mov
pop
sbb
pop
in
mov
jmp
(bad)
mov
rcr
cmps
dec
lds
popf
ret
fcomp
sahf
xlat
xchg
call
test
jnp
jmp
lods
out
retf
or
call
aam
aaa
and
mov
pop
movs
add
in
(bad)
stc
cmp
lods
(bad)
scas
add
bswap
pop
and
or
and
cmps
inc
je
sahf
jmp
push
cs
cmp
mov
adc
jno
shl
cwde
xor
fs
in
and
mov
mov
sbb
jg
(bad)
jb
push
not
int3
movs
lods
push
sbb
pop
mov
jmp
pop
les
jle
sbb
push
dec
cs
cmps
push
(bad)
and
stos
ins
call
inc
xchg
ja
shl
xchg
(bad)
(bad)
popa
adc
and
lods
mov
and
sub
sbb
sub
xor
cmc
test
fimul
add
(bad)
jge
sub
mov
jle
lds
or
jmp
xor
ins
and
xchg
int
icebp
mov
cli
pop
fs
mov
or
or
popa
leave
adc
mov
xchg
es
dec
rcr
sahf
dec
(bad)
movs
inc
sub
rcr
fcomp
xor
shl
mov
add
ins
and
shl
bound
sbb
jle
mov
es
jbe
and
dec
ss
addr16
mov
adc
jle
cld
mov
imul
stos
sbb
in
add
mov
jmp
jnp
add
bound
sub
stos
ret
adc
sti
not
pop
mov
adc
and
leave
xchg
xchg
fsubr
mov
mov
out
mov
inc
mov
adc
add
imul
sub
inc
add
xchg
push
jmp
retf
inc
ret
pop
sub
jmp
lock
dec
(bad)
dec
ret
sub
addr16
push
cmc
ret
sbb
sbb
pop
(bad)
shl
fiadd
test
ins
xchg
add
(bad)
addr16
ret
loopne
adc
ss
enter
lock
push
dec
aad
xchg
leave
add
inc
adc
cmp
or
pop
in
jge
inc
xor
and
(bad)
jno
stos
add
popa
enter
in
mov
ja
xor
lock
push
rcr
mov
std
cdq
jmp
sub
add
mov
xchg
jnp
jne
mov
inc
in
or
ds
sub
jnp
data16
(bad)
mov
dec
aaa
shl
jg
push
lea
(bad)
xchg
or
xchg
scas
imul
es
mov
in
xchg
sub
mov
jb
test
bound
push
pop
sbb
pop
or
xor
sbb
call
mov
xchg
test
push
mov
dec
sub
inc
inc
loop
mov
arpl
push
hlt
imul
loopne
sbb
ret
movs
lods
cmovbe
sti
imul
pop
mov
leave
(bad)
or
inc
mov
xlat
sbb
cmp
xlat
jp
imul
xchg
retf
(bad)
jne
fwait
les
ret
test
jmp
(bad)
in
xor
xchg
add
xor
fbstp
cmp
jecxz
adc
xchg
popa
push
arpl
mov
cdq
f2xm1
mov
push
jo
dec
mov
inc
ficomp
cdq
repz
js
jbe
inc
dec
adc
mov
nop
inc
mov
ja
jmp
loopne
sbb
mov
jp
and
cmps
dec
movs
cmp
mov
mov
ss
pusha
hlt
lea
dec
scas
sti
std
fisub
jb
and
mov
cs
or
into
push
and
jo
mov
loop
or
out
rcr
ins
and
xlat
mov
xchg
fs
jb
data16
repnz
xchg
pop
mov
mov
jmp
mov
mov
adc
and
mov
popa
push
mov
jns
mov
xor
cmp
test
div
cwde
add
inc
loopne
adc
pop
cmp
inc
call
outs
cmp
push
cli
lea
jae
outs
dec
and
sahf
sbb
jle
sbb
jmp
dec
push
fcom
push
loope
xchg
or
cmp
push
mov
enter
inc
les
hlt
stc
inc
jge
inc
popaw
dec
fadd
call
stos
das
and
fistp
lods
and
jnp
add
jge
test
mov
add
je
sub
push
dec
pushaw
pushf
and
or
and
test
clc
xlat
ficomp
inc
lock
fistp
jns
push
test
aas
aam
sub
aaa
aas
lods
lods
jb
sub
inc
in
xchg
fnstenv
lahf
call
cmp
hlt
fist
scas
xchg
mov
mov
cmp
xor
jnp
es
test
mov
pop
scas
movs
bound
cmc
mov
bound
add
cmps
js
pop
and
and
and
stc
retf
mov
cmps
inc
sub
outs
jo
fcmovnu
ror
mov
or
sbb
jns
xor
js
xchg
mov
lock
fisttp
and
mov
or
dec
add
jge
pop
jmp
dec
retf
mov
imul
or
dec
aaa
adc
sar
es
jae
inc
ret
xchg
jne
cmc
popa
aaa
add
mov
cld
into
call
jecxz
cwde
out
push
(bad)
xor
mov
jno
stc
mov
push
push
pop
push
shl
in
lods
imul
xchg
cmp
mov
fimul
adc
xor
pop
test
div
push
pop
sbb
jmp
sub
push
cmp
mov
push
inc
mov
in
dec
nop
or
or
mov
or
dec
pop
push
jno
jg
pushf
inc
and
fwait
stos
add
sbb
pop
and
jmp
dec
xchg
(bad)
sbb
jb
add
ret
repz
imul
cmp
cmc
aad
push
loop
push
scas
out
aas
(bad)
jmp
fs
xchg
mov
cmp
and
mov
xor
les
jo
jb
es
rcl
fist
and
inc
sub
jecxz
and
aad
icebp
jp
loope
mov
and
adc
fdiv
(bad)
mov
loop
jmp
cmc
bound
in
cmp
movs
mov
fcmovbe
jmp
xor
or
cmp
sbb
xchg
push
adc
sbb
jg
iret
(bad)
jg
sbb
addr16
into
stc
bsf
inc
dec
ret
jae
retf
xchg
mov
lahf
arpl
sbb
add
dec
lock
fst
push
std
xchg
push
scas
shl
jb
mov
and
dec
xchg
bnd
ret
xchg
into
mov
and
fisub
ret
fist
lock
mul
and
mov
enter
(bad)
fiadd
jb
xchg
mov
mov
ret
dec
pop
jg
add
jae
mov
(bad)
fisttp
lahf
mov
adc
inc
mov
jmp
test
(bad)
xchg
xchg
adc
sti
xchg
and
jg
es
jb
cmps
dec
jg
sahf
and
adc
out
sub
test
sbb
out
jle
stos
sti
frstor
and
inc
imul
or
stos
jne
jg
jg
cmp
leave
push
mov
sbb
xchg
repnz
cmp
sbb
or
add
adc
and
imul
cmps
xor
test
add
gs
and
data16
mov
imul
add
mov
jno
aad
or
mov
add
in
xor
dec
sub
daa
and
outs
and
pop
xchg
push
leave
jecxz
add
pop
inc
xchg
js
icebp
inc
(bad)
outs
fdivr
aam
daa
cs
call
sub
dec
js
icebp
lahf
in
(bad)
cli
xor
jbe
dec
mov
leave
(bad)
sbb
rcl
and
(bad)
cmc
cmp
out
clc
mov
cs
ret
ins
lds
jnp
cdq
mov
mov
mov
add
stc
mov
xor
pop
mov
and
sbb
sbb
aam
adc
lods
mov
call
and
ret
add
stos
mov
and
and
dec
rol
data16
jle
fisttp
or
adc
in
inc
inc
scas
jmp
or
(bad)
add
inc
mov
jb
dec
and
lods
push
dec
inc
int3
adc
jmp
inc
ins
mov
shl
jnp
and
loopne
inc
mov
dec
arpl
int
out
cmp
adc
xor
mov
scas
cwde
or
sbb
mov
and
frstor
and
add
popa
mov
ror
es
mov
mov
aaa
mov
retf
mov
mov
shr
pushf
cmc
popa
push
dec
or
lds
out
adc
inc
test
test
hlt
lea
movs
and
stos
mov
xchg
out
jno
mov
icebp
js
retf
(bad)
fucom
ss
sti
pop
jmp
mov
dec
xchg
out
stos
lea
mov
mov
mov
sbb
push
and
lea
iret
jmp
cdq
jnp
adc
adc
jmp
jno
je
fbld
inc
retf
mov
xchg
test
pushf
jecxz
js
dec
aas
xchg
mov
retf
hlt
test
stc
cld
add
das
adc
push
mov
nop
aaa
loope
sbb
pusha
inc
stos
mov
or
dec
call
mov
cdq
xchg
fldenv
add
imul
and
(bad)
fsubrp
adc
sti
sahf
ds
(bad)
pop
movs
mov
movs
dec
xor
not
mov
outs
jbe
daa
xchg
xchg
loope
push
or
pop
push
pop
jo
push
(bad)
daa
cmps
pop
in
add
jns
mov
mov
xchg
cmp
in
pop
out
cmp
xchg
repnz
shl
jo
jl
movs
imul
add
lahf
add
add
or
add
fstp
xchg
pshufw
fwait
std
scas
xor
shl
sub
xchg
(bad)
inc
ins
cmp
outs
xchg
dec
push
xchg
xchg
mov
fucomi
jge
je
inc
imul
pop
mov
aaa
or
jnp
mov
adc
xchg
inc
mov
sbb
dec
adc
(bad)
and
ins
in
sbb
pushf
sahf
sbb
mov
adc
mov
cmp
or
mov
xchg
ds
ds
push
cmp
into
push
and
aad
call
sahf
inc
xchg
sub
inc
retf
or
(bad)
inc
cmp
cwde
fbld
cmc
jle
int
cmp
pusha
and
inc
dec
cmp
sub
xchg
ds
mov
cld
ja
mov
sub
adc
dec
push
cmp
cli
shl
mov
fs
out
cld
xchg
ss
dec
or
jns
jbe
or
mov
jmp
js
adc
repz
jb
jno
mov
cmp
pop
adc
push
push
stos
popa
jmp
push
pop
je
hlt
aad
das
inc
adc
and
retf
(bad)
shr
mov
movs
add
inc
sbb
jb
push
sub
hlt
or
aaa
loop
add
mov
pop
cmp
sbb
sub
mov
add
addr16
lahf
and
fsub
clc
or
xchg
ror
ss
aam
add
lea
jo
out
xchg
inc
or
cmp
shl
scas
ror
loope
int3
sbb
and
sbb
out
mov
push
ror
imul
test
inc
sbb
in
fild
test
push
addr16
xchg
out
int
or
stos
out
dec
adc
aam
cmp
mov
ins
mov
xor
xor
pop
mov
xchg
cli
xchg
and
and
jno
loop
test
js
mov
xchg
imul
xchg
fiadd
out
loope
sar
movs
cmp
and
popa
inc
add
ret
and
loope
push
mov
stc
and
add
pop
data16
xchg
cmps
jmp
sub
push
push
push
loope
push
(bad)
adc
rcl
mov
push
icebp
or
dec
outs
mov
mov
and
pop
lods
test
aas
jno
out
pop
js
or
inc
loop
inc
hlt
add
mov
and
fs
and
xchg
gs
xchg
push
inc
movs
jge
jg
sbb
push
push
fistp
es
and
and
fs
cmp
add
mov
fwait
cmps
enter
dec
xchg
cmps
enter
xchg
and
pop
fst
jne
loopne
out
cmp
(bad)
lods
push
inc
push
addr16
xchg
in
lods
mov
cwde
sub
jp
ins
pusha
mov
shl
pop
fbstp
xor
aaa
jmp
jle
lea
add
out
mov
push
fisttp
int
push
call
repnz
jp
pop
push
or
mov
les
jbe
inc
in
ja
mov
sbb
add
mov
dec
jne
jbe
cmps
dec
xor
jnp
add
adc
daa
inc
inc
cmp
push
cmp
int
cmp
(bad)
and
cli
or
rcr
mov
aam
leave
jl
ins
adc
daa
add
sar
pop
pop
and
int3
ret
xor
push
jns
xor
mov
and
ins
test
adc
mov
pop
ja
cwde
inc
ins
xor
push
out
jmp
ins
int
in
pop
pop
add
mov
cmp
loopne
cmp
sbb
add
xchg
out
push
cs
add
add
mov
sbb
dec
adc
fld
call
pop
nop
jae
int
(bad)
in
(bad)
sti
push
jb
stos
popa
imul
mov
mov
or
(bad)
aas
xchg
adc
mov
outs
sub
adc
add
shl
cli
mov
push
xor
inc
adc
cmp
mov
das
jge
mov
pop
sub
out
cmp
(bad)
push
jl
stos
pusha
aad
dec
sbb
push
movs
xor
dec
int
pop
adc
jge
test
out
mov
retf
shl
loopne
in
retf
cmp
les
test
std
clc
sub
push
out
lds
(bad)
aaa
dec
fcmove
pop
imul
aas
inc
popa
push
add
push
xchg
push
mov
mov
stc
jns
sbb
and
push
sbb
fs
mov
fcmovb
or
repz
lahf
mov
sbb
or
sub
add
out
mov
push
jl
repnz
and
mov
or
sub
sbb
jb
push
fucom
out
out
sub
fisubr
ret
fisubr
fsubr
adc
mov
push
(bad)
cmp
push
push
imul
push
and
ja
and
add
and
adc
push
retf
repz
or
aad
jbe
mov
or
test
jmp
clc
pop
jae
jbe
repnz
int3
jle
(bad)
sbb
shr
mov
aam
sbb
xchg
stos
pop
xchg
pop
mov
imul
push
jae
scas
cmps
movs
js
(bad)
aam
adc
jbe
imul
pop
sbb
push
clc
mov
lock
add
and
sbb
mov
inc
sbb
ret
inc
jg
jo
scas
mov
mov
into
ror
js
sbb
push
mov
cs
xchg
popa
jno
mov
jns
jl
std
adc
or
xchg
xor
lods
mov
(bad)
movs
pop
cdq
or
push
mov
dec
(bad)
pop
mov
repnz
xchg
(bad)
(bad)
push
call
test
mov
addr16
popf
jo
ja
popf
cmp
pop
push
dec
mov
xlat
aad
int3
shr
mov
je
jmp
adc
test
mov
jne
or
(bad)
lods
add
shr
ret
pop
mov
xor
xor
test
sbb
sbb
popf
or
mov
push
sbb
push
into
xor
or
push
jnp
add
push
icebp
mov
out
mov
addr16
sub
in
repnz
addr16
mov
call
sbb
sbb
mov
push
in
rcr
inc
repnz
mov
shl
xchg
sar
test
adc
imul
mov
dec
sbb
psllw
jbe
sti
je
loop
mov
ret
popf
dec
aaa
adc
mov
mov
inc
add
inc
xchg
mov
xchg
and
rcr
jp
jns
xchg
lods
and
std
out
jp
sub
lds
pop
sub
sar
mov
mov
mov
fcomp
add
in
pop
dec
jge
xor
fwait
xchg
push
jae
jmp
xchg
and
push
call
pushf
in
mov
xchg
dec
jne
inc
pop
fwait
pusha
xor
pop
push
pop
dec
in
ins
mov
mov
outs
loope
push
xor
(bad)
fld
push
mov
sub
fcom
cmp
out
popf
mov
sbb
push
push
out
test
inc
push
enter
aad
dec
hlt
aaa
retf
ret
call
mov
not
sti
jg
inc
leave
sub
iret
arpl
pop
call
adc
scas
mov
or
movs
jle
lea
scas
test
outs
or
jmp
retf
dec
dec
add
fs
loopne
bound
and
bound
mov
iret
mov
das
retf
inc
push
mov
dec
loope
mov
movs
stc
and
pop
or
outs
fsubp
mov
mov
fsubr
int
loop
jge
ins
pop
mov
in
push
jae
test
push
add
(bad)
into
out
xchg
jmp
cmps
rol
nop
jmp
cmp
sbb
mov
fmul
push
pop
imul
mov
popf
data16
dec
xor
push
(bad)
fld
movs
jbe
call
fdivrp
in
adc
jecxz
or
daa
arpl
inc
rcl
pop
(bad)
out
xchg
pushf
mov
push
xor
push
lods
mov
fisubr
jmp
pushf
daa
inc
mov
test
add
mov
dec
cmp
xchg
icebp
loopne
ins
pusha
retf
shl
shl
das
sub
addr16
dec
or
je
push
mov
sbb
dec
xchg
sub
adc
sbb
ins
mov
cmps
mov
lea
adc
sar
xchg
mov
or
push
mov
or
pop
jmp
ins
inc
sbb
dec
mov
out
test
jl
mov
pop
std
pop
xor
jp
daa
inc
dec
inc
stc
aad
cdq
dec
jg
ds
rol
adc
cmp
cmc
jae
loopne
outs
dec
mov
sti
pushf
je
pop
add
lahf
ficom
inc
inc
sbb
jns
mov
cmp
shr
imul
pop
mov
ins
sti
retf
cmp
movs
bound
adc
cli
pop
adc
test
push
pop
into
scas
into
sbb
inc
sbb
test
mov
xchg
cmp
push
popa
popa
clc
rcl
add
pop
xor
jmp
dec
shl
test
mov
test
cmps
xor
mov
cld
dec
cmps
fstp
cdq
add
ja
call
xor
inc
jl
push
cli
cmp
cmp
mov
prefetch
jnp
or
dec
pop
xchg
add
sub
cs
pop
popa
mov
imul
stc
ss
xlat
outs
dec
fcomp
adc
(bad)
adc
mov
or
dec
lahf
cmp
jp
xor
retf
cs
cmp
mov
icebp
push
xchg
sub
pop
xor
xchg
xchg
xor
mov
xor
(bad)
ficomp
fsub
fldcw
adc
sub
xchg
xchg
mov
iret
adc
lds
(bad)
in
sbb
inc
and
add
xchg
mov
adc
ins
mov
repnz
imul
xchg
add
add
jmp
rcl
xor
fnstcw
ror
xor
mov
out
cmp
daa
inc
add
xchg
mov
stc
leave
cmp
xor
mov
or
sbb
dec
xor
(bad)
sti
ds
fst
retf
icebp
push
cmps
loope
push
in
or
dec
dec
add
jno
sub
movs
outs
cdq
cs
pop
loope
call
jmp
sbb
push
and
loop
pop
or
aam
jmp
addr16
ret
mov
cmp
int3
adc
addr16
adc
sbb
out
and
dec
cld
push
dec
add
sbb
(bad)
dec
idiv
cmp
and
mov
popf
dec
aad
in
push
add
in
push
hlt
mov
test
dec
bound
scas
xlat
xlat
cmp
arpl
lds
xchg
sub
mov
pop
sub
fisttp
ins
fimul
or
nop
and
cmp
pop
jge
(bad)
jecxz
das
sar
dec
retf
arpl
pop
inc
or
and
sub
mov
outs
aaa
xchg
pop
mov
xchg
xchg
bswap
call
xor
cmp
call
cmps
xor
xchg
stos
(bad)
in
test
push
int
sar
ins
pop
leave
(bad)
fbld
jnp
test
push
sbb
in
xor
jp
mov
xchg
dec
mov
pop
rol
inc
pop
in
xchg
aaa
inc
call
dec
cmp
not
or
or
out
push
jl
mov
call
in
cli
mov
(bad)
mul
mov
xchg
adc
add
pop
out
jle
adc
ss
add
jns
shl
sti
mov
push
jle
dec
mov
pop
jo
mov
frstor
(bad)
ins
fwait
dec
daa
mov
jmp
and
(bad)
out
loopne
shr
repnz
xchg
cld
sub
xchg
or
ja
fdivr
xor
callw
jns
fild
push
jno
shl
dec
sti
jl
lods
sbb
mov
xchg
lods
call
test
jge
std
jo
pusha
and
and
jne
xchg
mov
jge
mov
push
jbe
mov
(bad)
jg
clc
push
std
sbb
ficom
dec
adc
retf
repnz
mov
cmp
mov
ins
int3
test
lds
lods
jl
adc
movs
popf
dec
hlt
fs
sbb
mov
jns
xchg
ja
pop
inc
jl
pop
add
dec
dec
mov
aas
jmp
pusha
inc
(bad)
mov
mov
mov
and
push
gs
ins
out
ror
pop
movs
loopne
fs
repz
cmc
mov
push
add
xor
sbb
sbb
imul
call
xchg
mov
out
dec
cmovo
sar
mov
int
test
inc
into
jp
mov
test
rcr
xor
mov
pop
cmps
adc
(bad)
mov
ja
aad
dec
push
sub
je
(bad)
mov
sub
inc
mov
pop
and
in
sbb
inc
mov
in
cmc
xor
fsub
shl
mov
jne
cmc
sbb
jl
(bad)
(bad)
fld
stos
out
add
dec
mov
iret
icebp
cdq
cwde
ficom
test
push
lock
push
out
or
xor
mov
add
inc
push
or
push
and
xchg
fdiv
imul
inc
mov
imul
sahf
push
ret
pop
mov
xor
cmps
adc
push
and
pop
cmp
ret
xor
jo
popf
xor
call
cli
retf
pop
mov
cmp
aam
dec
pusha
mov
repnz
inc
in
nop
lock
in
bound
and
jecxz
cli
mov
fistp
xor
mov
sub
nop
sub
(bad)
in
mov
dec
mov
ja
and
mov
mov
je
shl
mov
imul
cmp
add
(bad)
jbe
jns
mov
out
sar
pushf
cdq
cmp
inc
or
inc
fisttp
xor
jmp
pop
mov
test
xor
cli
cmp
call
xchg
es
stc
sbb
or
fidiv
loope
ins
pop
(bad)
jmp
mov
sub
mov
inc
nop
scas
and
dec
dec
pop
and
inc
cmp
mov
cdq
loop
ja
call
popa
or
cmp
cmp
pusha
(bad)
in
jmp
mov
mov
inc
mov
in
and
push
int3
gs
jno
mov
push
mov
adc
mov
mov
inc
sub
and
dec
push
inc
dec
ins
add
imul
mov
stc
sbb
inc
sub
jne
xlat
call
mov
shl
in
test
sbb
cwde
or
stc
inc
test
adc
pusha
popf
int
xor
sbb
cs
ficom
fimul
leave
xor
mov
pop
push
push
xor
pop
xchg
inc
push
sbb
les
or
dec
jle
int3
push
and
fs
popa
ins
pop
mov
or
pushf
loope
sbb
mov
mov
jg
mov
pop
cld
rcr
pop
jmp
or
add
shl
push
jo
jnp
xchg
add
pop
or
mov
hlt
leave
retf
je
je
pop
fdiv
sub
adc
mov
icebp
int3
adc
lahf
loopne
pop
sbb
shr
gs
inc
int3
ror
movs
add
or
push
and
xor
mov
(bad)
push
mov
lods
mov
mov
test
xchg
cdq
movs
jl
xchg
adc
xor
stos
int
cdq
enter
(bad)
fcomp
(bad)
aas
xor
pop
movs
mov
inc
jo
dec
add
dec
mov
push
cmp
fcmovnu
ja
(bad)
fnstenv
adc
xor
repz
push
mov
sbb
and
ds
cmc
aas
stos
pushf
or
inc
hlt
stos
repnz
and
cli
jge
pop
xor
xor
pusha
int
add
pop
jns
ret
sub
sti
enter
mov
inc
or
(bad)
js
inc
scas
pop
dec
ret
stos
adc
xchg
fstp
mov
addr16
jb
adc
outs
out
shl
xchg
inc
xchg
and
fst
loopne
mov
jbe
xchg
pop
cli
cwde
pop
cs
mov
mov
cs
xchg
mov
out
pop
and
repnz
sub
test
icebp
cs
lahf
mov
mov
fwait
hlt
gs
and
pop
mov
ror
lock
inc
shl
jmp
mov
jge
cmc
inc
push
movs
push
add
int
(bad)
aad
push
cli
and
popa
sub
inc
int
inc
dec
fst
xchg
es
test
mov
sahf
cmps
ins
aam
mov
cdq
sbb
mov
jno
mov
pop
stos
jg
pop
push
fdiv
sub
inc
add
addr16
repz
dec
(bad)
push
stos
and
fiadd
imul
shl
aad
outs
fwait
push
add
mov
movs
clc
dec
rol
pop
push
inc
and
daa
or
loopne
fs
aas
add
add
sub
pop
sub
add
test
adc
scas
push
jnp
bound
aas
dec
div
mov
(bad)
retf
inc
pop
jae
jp
nop
(bad)
clc
mov
fwait
lahf
jne
(bad)
int
daa
sbb
push
clc
or
add
aaa
idiv
addr16
sahf
xchg
pop
push
pop
sbb
and
xchg
sub
mov
enter
lds
scas
xchg
sbb
popa
(bad)
pop
mov
hlt
aam
scas
inc
dec
hlt
xchg
mov
cmps
inc
mov
mov
icebp
jne
xchg
std
fstp
jg
jg
aaa
(bad)
call
bound
outs
mov
aas
sbb
mov
pop
cmove
aad
pop
mov
xchg
fcomp
rol
sbb
sbb
mov
mov
jge
fld
inc
jmp
icebp
add
into
jge
clc
ja
jg
sahf
cmp
repz
push
stc
iret
bound
stos
push
pop
mov
xchg
or
lods
push
loop
sbb
sub
mov
sti
jbe
pusha
mov
jb
push
dec
push
adc
lea
pop
out
icebp
xchg
lods
repz
jl
xchg
lods
pushf
cmc
bound
int3
(bad)
adc
ins
sub
loop
retf
dec
cli
dec
pop
scas
loopne
sub
in
cli
mov
lock
ins
jo
xchg
ja
mov
sbb
leave
jmp
or
add
xchg
or
jecxz
sbb
inc
cdq
xchg
in
clc
or
sbb
ja
mul
dec
cmp
pop
cmp
shufps
or
push
stc
loop
cs
push
dec
push
sbb
neg
scas
cmp
mov
shl
jbe
dec
push
dec
(bad)
retf
pop
adc
out
(bad)
ret
test
pop
test
mov
mov
adc
in
and
and
inc
(bad)
call
(bad)
aam
jge
mov
jecxz
push
mov
cmps
retw
aam
js
test
repz
pop
jecxz
xchg
call
pop
out
jge
inc
(bad)
fnstsw
xlat
mov
ins
sub
pop
mov
les
bswap
pop
mov
pop
rcl
jno
(bad)
fwait
lea
inc
mov
lods
outs
cmp
cli
das
pop
pop
std
and
xchg
pop
stos
xchg
pop
pop
inc
add
inc
in
dec
pop
cmps
and
cmp
int3
add
(bad)
shl
pop
ficom
cmp
mov
pop
rcl
pushf
xchg
and
and
adc
jb
movs
test
xchg
les
pushf
pop
jge
ja
adc
movs
add
cmps
or
xchg
xchg
fadd
call
repnz
ja
mov
sub
inc
cmp
popf
in
aaa
dec
mov
or
adc
add
or
(bad)
mov
cwde
test
inc
data16
loope
mov
pop
not
std
(bad)
int3
push
sahf
popa
dec
loopne
popf
jmp
mov
jg
mov
cdq
xor
dec
inc
push
iret
cmc
mov
lock
fistp
or
inc
jg
ror
sbb
faddp
and
imul
ret
int3
rol
mov
pop
ret
xor
adc
cmp
popa
sub
cli
iret
bound
call
sub
adc
rcr
dec
je
fsubr
push
mov
jno
pop
nop
adc
inc
push
mov
sub
pop
and
ret
mov
mov
push
inc
out
xor
mov
xor
add
adc
adc
les
test
in
test
movs
adc
sub
rol
xchg
jbe
cmp
or
stc
sub
bound
lods
shr
sub
sbb
and
jp
aad
pusha
out
(bad)
fwait
dec
push
shl
add
sub
pusha
cmp
out
adc
xchg
test
aaa
pop
pop
push
mov
xchg
sbb
dec
movs
push
push
push
mov
push
cmps
out
push
push
mov
mov
mov
and
mov
(bad)
pop
gs
imul
ja
cmp
mov
push
test
stos
xor
pushf
bound
pop
xchg
fs
mov
shr
jno
mov
pop
arpl
ret
loope
aaa
movs
imul
mov
mov
sub
mov
xchg
es
mov
cwde
adc
cdq
jle
and
mov
push
test
add
adc
push
loop
hlt
xchg
mov
cmc
cmp
js
adc
xor
icebp
(bad)
fnstcw
call
dec
lods
push
mov
sbb
retf
mov
pusha
xor
fimul
fld
cmp
cs
and
xor
xchg
sbb
scas
fnstsw
push
and
lock
mov
rol
sub
shl
mul
mov
call
movs
or
test
fsubr
mov
pop
ror
push
fisttp
mov
mov
cmps
sub
(bad)
push
shr
retf
mov
xor
sti
mov
mov
xor
call
enter
out
push
fadd
sub
push
jb
movs
xchg
adc
lds
in
jge
out
jle
jge
(bad)
pop
loopne
jecxz
dec
sbb
mov
clc
push
xor
adc
sahf
push
push
test
add
push
js
jnp
and
inc
mov
loop
(bad)
fimul
imul
fst
in
call
dec
outs
shl
mov
dec
push
fistp
sar
enter
inc
adc
jl
xchg
sub
adc
sub
into
repnz
mov
xchg
inc
mov
das
aas
fneni(8087
xchg
int
mov
nop
(bad)
arpl
sbb
mov
xor
and
push
(bad)
cmove
jle
inc
cmp
test
rcr
jb
(bad)
pop
lea
es
mov
mov
and
jmp
aam
jecxz
and
sub
add
bound
lea
inc
ins
push
imul
mov
xor
jne
jno
ja
or
popf
mov
mov
movs
out
xor
cs
mov
fadd
mov
and
and
push
cmp
adc
js
xchg
fldcw
or
jl
(bad)
or
pop
stos
cld
inc
movs
retf
das
pusha
sub
and
mov
mov
pop
shld
mov
xor
xchg
out
fldcw
jns
clc
out
mov
inc
and
cmps
push
pop
scas
cmps
loope
mov
ficomp
mov
and
popf
sahf
xor
add
test
ret
jno
adc
xor
sar
mov
add
add
je
in
shl
psubusw
mov
adc
test
inc
mov
xor
sbb
dec
inc
push
jbe
dec
ja
add
or
mov
nop
cmps
ins
xchg
outs
mov
sub
xchg
pop
fsub
int
cmps
or
stc
jo
jns
pop
sub
scas
cmp
out
shl
fnstsw
loopne
adc
push
xor
jne
sub
jbe
fnsave
movs
jae
mov
rol
hlt
stc
pop
sub
lahf
xchg
adc
inc
mov
test
repz
(bad)
fild
sub
fsubr
sahf
dec
push
sub
xor
pop
pop
xlat
sub
dec
sar
cdq
mov
repz
mov
pop
aaa
jmp
stc
es
fsubr
call
sbb
or
xor
outs
jg
test
scas
mov
rol
cli
popa
icebp
iret
arpl
mov
inc
(bad)
xchg
or
addr16
outs
mov
xor
inc
xor
arpl
es
test
ins
lods
fs
push
or
mov
cmp
nop
sahf
push
jbe
or
mov
stc
sbb
push
jb
pop
xchg
popf
dec
sub
test
and
das
mov
fcom
add
rcr
dec
iret
add
pop
inc
je
inc
ds
scas
retf
dec
xor
fstp
mov
ficomp
nop
and
stos
test
mov
cmps
cmp
mov
mov
add
addr16
aam
pop
jno
add
out
push
mov
lahf
jo
mov
sub
cmp
shl
push
or
mov
push
push
add
popf
cmc
nop
add
adc
stos
xchg
ret
not
pop
and
daa
test
xlat
shr
fcomp
jl
(bad)
imul
sar
loopne
xchg
sbb
jbe
mov
sub
mov
fiadd
andnps
daa
jns
mov
jne
and
cli
mov
dec
cmp
lods
adc
aam
inc
(bad)
mov
jmp
xchg
jb
leave
out
xor
adc
sub
into
rol
(bad)
add
and
mov
dec
cld
mov
cmp
pop
pop
mov
(bad)
in
xchg
stc
inc
mov
jle
test
or
mov
pop
(bad)
xor
clc
jae
pop
lock
mov
xor
xor
bndstx
xchg
cmp
jo
mov
mov
stos
mov
pop
shl
jge
dec
jno
mov
ds
jge
ins
sbb
mul
and
adc
push
and
out
jle
or
clc
loope
sbb
imul
sahf
dec
jp
je
icebp
fadd
add
leave
cmp
dec
call
jae
cmps
mov
adc
div
jle
and
cli
or
enter
jae
jne
push
xchg
es
cmps
std
adc
rcl
add
adc
repnz
cmp
repz
iret
sbb
fwait
lahf
gs
imul
dec
repz
mov
jnp
es
push
ror
push
scas
add
adc
xor
or
cmps
enter
or
retf
sar
out
mov
mov
stos
mov
add
dec
aad
or
ins
(bad)
out
add
lock
or
mov
adc
jae
fwait
push
das
js
aas
fdiv
jmp
retf
movs
jle
test
add
out
ret
cmp
mov
and
ins
lock
ret
cld
push
lods
xchg
and
rep
fld
push
or
aad
fild
adc
mov
retf
cwde
popa
in
rol
mov
or
jle
retf
push
aaa
mov
pop
jecxz
test
jmp
in
icebp
jns
in
aaa
(bad)
mov
movs
clc
and
fs
xor
pop
js
add
jae
pop
call
pop
(bad)
push
inc
push
data16
mov
jmp
push
test
sahf
pop
xchg
ds
adc
pop
lods
sbb
or
xor
dec
sub
xchg
loope
jg
inc
js
dec
(bad)
pop
test
data16
mov
in
out
cdq
aad
hlt
int3
fstp
jle
xlat
ret
dec
sbb
daa
leave
mov
ja
pusha
sub
cdq
inc
pop
and
rcr
loop
icebp
xchg
push
(bad)
mov
outs
int3
ins
repnz
enter
test
shl
test
or
out
ss
aad
inc
mov
or
ins
jae
int
in
push
(bad)
mov
jmp
mov
pop
pushf
pop
jmp
cmp
mov
jmp
(bad)
pop
scas
adc
aas
dec
mov
sbb
dec
ret
fcom
cdq
push
test
ja
popa
es
fimul
mov
dec
push
in
pop
push
scas
ja
repz
lock
retf
mov
sar
push
pop
aaa
inc
add
pop
xchg
add
(bad)
lahf
lea
fld
mov
cmp
mov
bound
mov
pop
adc
jnp
fs
dec
mov
push
retf
lods
xor
xchg
imul
mov
push
sar
dec
xor
daa
jmp
rol
inc
into
call
jg
vprotw
inc
popf
or
cld
shl
add
stos
add
and
xor
dec
cmp
and
jmp
lahf
pop
fisubr
mov
jg
sbb
cmp
out
(bad)
in
push
pop
test
lahf
jo
test
xchg
xchg
add
lea
rol
adc
mov
push
bound
mov
jo
xor
push
addr16
aam
mov
and
xchg
or
pop
fimul
inc
fs
cmps
(bad)
pop
and
ret
dec
rcl
dec
jne
mov
xor
outs
rcr
pop
add
retf
fwait
jle
stos
push
dec
push
cld
xchg
sub
pop
or
jg
popa
pop
cmps
mov
xchg
mov
push
and
sahf
and
rol
bound
call
dec
retf
sbb
mov
enter
sbb
push
outs
pop
test
adc
push
dec
xor
(bad)
int3
repz
shl
sub
test
leave
cs
sbb
inc
fidivr
pop
sub
or
inc
xchg
xchg
mov
cdq
div
sbb
xchg
aam
add
lods
bound
mov
mov
pop
(bad)
mov
adc
mov
cmp
leave
into
xor
xor
pop
mov
cmc
test
push
out
lock
add
imul
push
dec
mov
push
inc
and
push
pop
(bad)
jb
adc
adc
(bad)
cmp
imul
add
pop
fwait
fwait
push
in
pop
dec
lea
xchg
cmps
xchg
into
fwait
outs
inc
sti
mov
out
dec
mov
dec
jns
out
mov
nop
xor
pop
xchg
mov
movs
xchg
xor
shl
mov
ss
adc
test
mov
lea
sub
lods
into
push
mov
ror
sub
mov
fild
dec
push
scas
nop
scas
test
add
jno
mov
scas
repz
xchg
inc
retf
scas
mul
mov
mov
pop
in
pop
enter
iret
dec
sbb
outs
ja
mov
mov
pusha
sub
push
sti
ins
adc
mov
xchg
and
sbb
mov
jge
shr
cmp
sub
stos
mov
inc
(bad)
ret
or
add
pop
pop
cmp
sub
xor
sub
pop
add
cmp
out
xchg
test
dec
push
aaa
and
jecxz
pushf
pop
(bad)
rcr
push
cwde
and
das
mov
mov
add
sbb
addr16
std
pop
std
out
les
mov
div
cmps
xor
mov
popf
adc
cmp
ds
imul
xchg
lock
and
sbb
aaa
fild
outs
stos
pop
jno
add
push
ds
cwde
jp
cmp
repnz
arpl
fsub
(bad)
iret
(bad)
out
inc
add
push
pop
iret
sub
aam
inc
push
jle
mov
mov
rcr
js
aaa
jmp
dec
xchg
sub
sbb
ins
cwde
stos
push
mov
test
stos
gs
dec
ret
mov
sub
stos
mov
jle
aaa
ins
xchg
jbe
test
call
push
popf
sub
shl
jl
hlt
fsubr
(bad)
xlat
and
xor
(bad)
pop
sbb
test
int3
or
mov
xor
lods
test
test
lods
dec
hlt
popf
pop
cwde
push
push
and
popa
cdq
and
adc
mov
lods
dec
mov
lock
pusha
outs
lods
inc
mov
stc
icebp
aaa
push
or
les
inc
xchg
es
jmp
and
out
mov
mov
pop
cmp
stos
mov
push
out
sti
and
xchg
pop
repnz
movs
mov
das
jp
(bad)
retf
movs
(bad)
mov
inc
rol
aam
jne
add
mov
or
(bad)
sbb
aas
jae
dec
jno
jmp
jg
(bad)
ret
push
jg
sar
pop
xchg
fnstenv
mov
pop
test
mov
jnp
xor
sbb
mulps
pop
sbb
test
pop
(bad)
out
adc
lea
(bad)
mov
ds
test
test
fwait
push
xor
mov
sbb
stos
jb
mov
mov
inc
popf
inc
mov
xor
lods
in
add
push
pop
movs
pusha
cdq
push
cld
sar
sar
inc
xchg
and
cmp
and
das
call
cmps
or
cmp
ja
cmc
cmp
pop
pop
pop
or
cmp
xchg
dec
sbb
mov
fwait
and
xor
std
dec
cdq
push
scas
jns
ficomp
and
mov
sub
outs
lock
inc
rcr
scas
inc
dec
out
es
arpl
mov
into
imul
push
fdiv
(bad)
jecxz
xchg
cmps
xchg
std
jae
and
jnp
cli
mov
mov
xor
jnp
fidivr
add
outs
and
cmp
inc
cmp
and
inc
lahf
enter
adc
ds
aas
scas
jle
sahf
dec
pop
movs
inc
into
cmp
xor
fldenv
ja
push
mov
cmovno
mov
jecxz
popa
loop
rol
and
clc
xor
mov
int3
mov
pop
jge
(bad)
test
jmp
nop
dec
xor
lea
sub
pop
(bad)
jne
popa
int3
in
adc
lahf
mov
outs
lods
mov
lods
dec
dec
sti
push
sbb
sbb
push
std
jge
jo
cmp
arpl
cmps
adc
sbb
daa
icebp
pop
jl
ja
test
mov
les
movs
ja
jb
or
jns
adc
ss
adc
xchg
arpl
sbb
cdq
aad
inc
xor
jae
cld
mul
mov
ins
sbb
push
(bad)
push
das
test
outs
shl
mov
xchg
aas
jnp
icebp
adc
push
jbe
jnp
mov
scas
mov
mov
mov
dec
push
add
mov
adc
mov
jmp
mov
pop
xchg
push
xchg
daa
inc
mov
scas
std
ds
mov
mov
mov
cmp
xor
and
lahf
outs
inc
movs
or
cmp
fimul
gs
xchg
sar
push
inc
leave
fst
enter
aam
sub
pop
leavew
pop
mov
int3
outs
cmp
(bad)
out
stos
and
in
mov
mov
fisubr
scas
pop
adc
outs
scas
jp
mov
mov
adc
lea
shl
mov
adc
out
icebp
ds
jno
inc
lods
loope
pushf
mov
sbb
adc
fwait
mov
cmp
cmp
pop
jae
cmp
inc
mov
jne
(bad)
mov
jnp
mov
pushf
fisub
adc
popf
push
jne
and
cmp
nop
add
fstp
fidiv
repz
dec
mov
dec
repnz
inc
push
hlt
jmp
add
xor
cmp
loope
or
clc
fild
or
pop
pop
pop
fs
adc
(bad)
jmp
lds
ja
push
push
test
loopne
pop
push
xchg
jl
adc
sub
add
addr16
cli
(bad)
mov
dec
mov
add
mov
add
mov
outs
lock
rcl
mov
add
cmps
dec
mov
(bad)
add
addr16
dec
mov
cmc
loopne
sub
adc
push
std
and
movs
repnz
fwait
push
jae
mov
mov
jno
pop
dec
pop
add
popa
mov
and
xor
cmc
pop
jnp
fiadd
sbb
mov
inc
es
jne
(bad)
in
inc
je
fsubr
or
inc
sub
jmp
lahf
and
xor
mov
push
mov
shl
arpl
shld
in
shl
jne
jne
sbb
or
mov
pop
cmp
out
call
add
daa
popa
jo
push
push
out
scas
sbb
mov
xor
cmp
sub
or
adc
out
arpl
stos
or
mov
cmp
sar
cmp
(bad)
pop
scas
fsubr
push
test
cwde
test
cdq
sub
jne
js
icebp
jmp
mov
js
nop
sbb
xchg
lds
mov
inc
add
out
aaa
rol
vandpd
mov
adc
pop
pop
jnp
lahf
sbb
rcr
and
repz
dec
mov
loope
adc
dec
aam
hlt
int3
ss
test
jmp
jne
jg
mov
test
dec
(bad)
xchg
test
and
adc
jg
push
xor
das
out
fadd
out
mov
xchg
int
push
outs
add
add
push
movs
(bad)
cs
lods
pusha
cmps
cmps
xchg
mov
lods
xchg
xor
or
scas
sub
clc
dec
sbb
lahf
cmp
jmp
sub
add
push
jno
mov
cmp
push
inc
out
xchg
std
(bad)
sbb
aas
add
ds
cs
lea
sbb
push
add
push
arpl
aaa
push
addr16
inc
xchg
or
or
jnp
cld
mov
xchg
inc
repz
shr
jmp
daa
mov
mov
jne
cmps
out
add
cmp
xchg
cdq
pop
sub
mov
scas
pop
repnz
mov
jo
sbb
inc
xlat
fst
mov
mov
cmp
jecxz
adc
cmps
leave
jle
int
mov
push
cmps
ja
test
mov
ds
js
and
push
push
mov
inc
xchg
lds
mov
dec
add
pop
cli
sub
jno
or
adc
cmp
popa
dec
sub
int
inc
mov
pop
pushf
and
shr
inc
jmp
lods
sbb
bound
jmp
inc
nop
or
je
popf
and
fcom
mov
add
mov
retf
loop
(bad)
add
sbb
stos
js
jnp
mov
dec
fadd
jmp
fs
adc
inc
sbb
dec
pop
inc
int3
popf
pop
cmp
inc
and
add
add
xchg
push
add
retf
fwait
sub
xor
add
inc
sbb
scas
jmp
fbstp
pusha
sub
push
jo
ror
pop
repnz
dec
cmp
rol
neg
mov
and
sub
fsub
push
push
(bad)
push
icebp
sub
pop
cmps
mov
adc
push
ja
push
sbb
outs
sub
or
call
(bad)
mov
mov
sbb
stc
repnz
inc
cmp
dec
or
mov
fnstcw
pop
cmp
ret
cmp
in
enter
xor
sub
mov
xchg
(bad)
in
sar
fmul
(bad)
push
xchg
inc
ror
outs
nop
fmul
subps
gs
push
int3
mov
dec
and
fisttp
sub
in
std
or
or
adc
sti
or
jns
jmp
cmp
xchg
test
jno
out
(bad)
(bad)
in
fdivr
xchg
xor
outs
and
xchg
ins
out
fld
not
sub
add
scas
jg
add
pop
loopne
lods
jp
mov
stc
loope
fdivr
mov
dec
test
dec
call
imul
and
pushf
stos
add
xlat
imul
mov
test
jb
call
out
or
mov
jne
mov
dec
cmp
cmp
fdiv
cmp
xchg
call
stc
or
sbb
leave
inc
repnz
jg
xor
mov
inc
fstp
gs
rcl
sub
xchg
(bad)
arpl
dec
pushf
mov
gs
jno
lea
mov
push
fstp
into
sbb
push
pop
cli
fcom
sbb
inc
arpl
out
cs
pushf
cld
mov
inc
xchg
loopne
std
adc
(bad)
adc
pop
mov
push
inc
sahf
es
jle
and
addr16
dec
dec
imul
fmul
in
sub
clc
fs
loope
push
dec
or
idiv
scas
mov
dec
adc
imul
cdq
(bad)
stos
mov
xor
mov
outs
call
int3
jb
and
loop
jp
pop
jo
imul
(bad)
pop
jecxz
ins
lahf
stos
ret
mov
fwait
ds
cmp
adc
sbb
add
mov
out
lods
jb
scas
push
mov
fwait
movs
sbb
push
jo
lods
les
xchg
inc
std
sti
sahf
lds
sbb
imul
adc
mov
cld
lahf
cmp
jae
fidiv
mov
mov
std
fidiv
push
ins
ja
lock
mov
xor
(bad)
fadd
inc
or
jmp
mov
aaa
ret
repnz
sbb
xor
fmul
pmulhuw
xor
mov
jmp
pop
out
mov
mov
loopne
dec
hlt
sub
or
adc
dec
lods
les
inc
add
aas
jns
aas
xchg
inc
mov
mov
sbb
lock
cmovae
imul
cmp
lods
xor
inc
fcomi
pop
test
pop
(bad)
fcom
call
arpl
out
mov
push
aaa
jno
inc
push
xor
inc
lock
xchg
pop
test
push
push
inc
push
dec
div
inc
pop
(bad)
fisttp
pop
out
retf
push
push
mov
mov
fnsave
dec
loope
fcomi
fst
xchg
sti
jns
push
xchg
fadd
cld
mov
push
mov
mov
ss
mov
push
inc
clc
jge
scas
fs
cmp
xor
jb
arpl
mov
xchg
adc
js
mov
push
cmp
push
mov
or
xor
push
mov
imul
popa
les
cdq
adc
iret
mov
sbb
call
scas
cmp
inc
or
imul
fidivr
(bad)
ss
(bad)
push
and
out
mov
mov
adc
in
shr
dec
adc
and
push
xchg
icebp
jnp
dec
pop
jmp
ror
xlat
cmps
sub
cli
inc
push
sub
mov
pop
fsub
sbb
retf
sbb
addr16
rcr
or
dec
inc
and
mov
lods
push
push
xchg
dec
mov
sub
(bad)
stos
mov
inc
lds
cli
xchg
xchg
dec
fild
ds
cmc
imul
ss
mov
jmp
or
pop
mov
cld
dec
repnz
jnp
mov
clc
cmp
cmp
pop
(bad)
jo
jmp
and
aad
jle
and
pop
iret
pushf
js
lahf
aam
xor
es
fs
mov
xchg
cmps
test
dec
mov
inc
gs
xor
out
and
sub
in
std
add
add
sbb
dec
scas
sub
retf
in
mov
jecxz
pop
in
out
adc
popa
push
mov
xchg
fucom
xchg
hlt
mov
lahf
mov
dec
lock
xor
out
(bad)
or
test
xor
leave
mov
pop
jbe
or
lea
imul
xchg
std
dec
push
popa
sub
stos
jno
jbe
push
xchg
sti
push
jnp
add
dec
iret
jno
xor
mov
rol
daa
mov
cli
loopne
sar
cmps
cmp
lods
jl
addr16
inc
lahf
fsin
cmc
sub
test
retf
pusha
or
lea
mov
jns
inc
sub
mov
fsubp
icebp
cmp
push
mov
add
add
dec
lea
dec
push
nop
push
push
out
(bad)
mov
push
sub
pop
cmp
gs
mov
adc
xchg
bound
dec
mov
shr
jae
movs
push
adc
mov
or
adc
std
fist
mov
adc
xor
cmp
push
test
mul
mov
into
gs
jb
or
jb
mov
jmp
mov
push
ror
out
outs
pusha
adc
icebp
adc
pop
mov
mov
pop
repz
push
out
add
mov
sub
popa
jg
sahf
add
cmps
mov
out
xlat
mov
inc
data16
int
pushf
and
inc
shl
add
sub
fnop
and
in
mov
mov
outs
fs
inc
cmp
retf
and
repz
popf
inc
scas
or
adc
mov
sub
dec
lahf
jne
jmp
mov
or
in
sub
adc
inc
mov
push
xchg
test
leave
stos
nop
fcom
push
fst
in
mov
shl
cs
add
shl
es
push
sbb
jmp
pop
rcr
pop
jno
bound
je
xchg
mov
sub
sub
jbe
imul
pusha
ror
pop
test
mov
cmp
(bad)
mov
cmp
lds
imul
out
or
sahf
jae
js
nop
cmp
cmp
bound
cmc
arpl
fisttp
mov
fcom
or
jb
mov
pop
adc
mov
or
loope
pop
add
test
bound
and
dec
and
ror
push
xor
pop
mov
fdivr
sar
in
adc
mov
std
icebp
mov
cmp
js
push
adc
lods
inc
cli
cmps
jg
mov
push
add
inc
sub
pushf
out
cmovnp
sbb
lea
outs
clc
pop
fstp
stc
xchg
push
fdiv
dec
inc
xor
mov
mov
out
aas
push
ins
sbb
test
jle
xor
repnz
fs
imul
(bad)
icebp
(bad)
adc
je
xor
inc
pop
adc
clc
pusha
test
dec
nop
and
loopne
retf
ins
mov
push
mov
mov
movs
mov
shl
shl
fwait
ss
in
add
imul
dec
inc
(bad)
push
fist
mov
imul
(bad)
lods
shr
add
mov
cmp
add
aaa
(bad)
xor
mov
sahf
mov
xchg
dec
sub
adc
cmc
int3
cmp
mov
pop
add
(bad)
shl
cmp
into
push
and
aad
mov
xchg
push
loop
(bad)
mov
mov
imul
xchg
jmp
loop
add
sub
mov
cdq
mov
(bad)
add
popa
pusha
outs
mov
test
lods
push
sub
inc
rol
call
xor
test
sub
and
dec
cmp
mov
inc
push
adc
fisttp
sub
jge
mov
jmp
jle
(bad)
cli
or
cwde
jmp
push
xchg
aad
cs
inc
imul
les
add
test
or
push
or
shl
mov
sbb
jecxz
inc
push
inc
rcl
shl
sbb
or
mov
xor
test
or
xchg
mov
xor
out
xor
outs
mov
pop
cmp
loopne
je
inc
(bad)
xchg
xchg
mov
aad
seto
in
leave
xchg
mov
dec
inc
hlt
lods
sbb
fimul
shl
jg
mov
xchg
sbb
mov
jl
xor
lds
jecxz
push
sub
inc
int
push
xchg
mov
sub
sbb
adc
int
and
sub
icebp
push
stos
cmp
cs
scas
pushf
push
daa
lods
add
pop
jo
ins
repnz
retf
mov
mov
movs
inc
or
fld
jbe
cmp
(bad)
xor
inc
pusha
xchg
sub
cmp
inc
lock
movs
xchg
sbb
add
icebp
mov
stc
or
inc
inc
cmp
dec
push
nop
xor
mov
addr16
mov
dec
or
sub
jmp
cmp
loop
ret
push
cmp
mov
ins
cs
outs
fcom
in
mov
push
frstor
lea
cs
mov
mov
xchg
xor
gs
cmp
lods
ficom
jg
xchg
data16
outs
sbb
cmp
push
jge
or
aas
idiv
adc
int
in
add
mov
cld
idiv
in
dec
sub
(bad)
std
pop
into
stc
inc
out
(bad)
xchg
popf
fistp
ds
cmc
(bad)
xor
(bad)
test
mov
loope
(bad)
cmp
test
push
jg
push
cmps
mov
arpl
inc
and
ja
xor
ins
ins
(bad)
jecxz
and
into
cmp
sbb
push
cmp
call
xchg
inc
(bad)
test
mov
retf
push
and
pop
jmp
push
mov
pop
push
adc
jl
sbb
mov
fs
dec
cmp
gs
pop
ds
addr16
sbb
and
imul
or
int3
xlat
adc
fmul
sub
jmp
mov
xchg
nop
xabort
sbb
add
xor
fmul
or
adc
data16
mov
popf
retf
and
das
das
adc
ins
push
mov
loop
neg
mov
movs
add
sub
scas
mov
dec
pop
push
or
shl
int3
jbe
test
mov
fcmovne
inc
in
add
jp
inc
or
lahf
sbb
mov
sbb
int3
enter
lods
dec
pop
cmp
xchg
dec
dec
xchg
jae
nop
mov
sbb
add
pop
add
nop
mov
cmps
xchg
and
jg
sbb
punpcklbw
and
fnsave
ja
mov
jl
sub
jle
loope
in
(bad)
lds
mov
xor
push
cmp
dec
inc
aam
push
jo
ret
jg
xchg
lods
sub
jnp
fdiv
and
aad
outs
adc
into
xor
pop
xchg
xor
pop
scas
pop
or
out
loope
push
icebp
mov
sbb
std
cmp
add
bnd
mov
outs
neg
(bad)
inc
mov
(bad)
mov
outs
icebp
inc
mov
cwde
jg
cdq
fidiv
rcr
inc
mov
jge
cli
jne
jbe
nop
dec
jecxz
mov
loopne
fcom
mov
sbb
dec
fcomp
sub
xchg
jne
loopne
aaa
cmp
ins
xchg
(bad)
psrad
push
stos
push
aaa
lods
mov
mov
cmps
ss
or
adc
push
popf
adc
mov
fnstsw
adc
sbb
in
inc
aaa
and
call
cmp
fistp
and
in
push
mov
cmp
jno
add
xor
sahf
into
mov
outs
sub
jl
repz
pop
out
xor
js
popa
scas
adc
jnp
shl
iret
add
sub
movaps
and
pop
(bad)
hlt
int3
dec
iret
mov
dec
dec
jl
dec
adc
or
pop
mov
dec
xor
popf
inc
sbb
sar
das
dec
add
mov
inc
pusha
retf
xchg
xchg
scas
add
and
call
xlat
retf
mov
jo
pop
and
or
push
(bad)
arpl
xchg
nop
adc
jecxz
push
mov
aad
(bad)
stos
in
jb
fmul
movs
pop
daa
sub
jae
cwde
dec
lock
adc
(bad)
jp
inc
sub
push
and
push
push
sub
es
push
sbb
mov
cmps
into
jg
mov
xor
call
mov
jmp
pop
jbe
stc
mov
out
repz
xor
test
es
inc
out
loope
rol
in
outs
out
daa
xchg
mov
cli
push
mov
dec
fist
dec
iret
mov
jge
inc
lods
(bad)
lds
call
int
inc
rcr
sbb
rol
lahf
xor
retf
test
mov
xchg
inc
add
das
mul
in
pop
or
mov
push
movs
pop
pop
lahf
xchg
ds
test
or
cmp
add
lods
and
idiv
and
mov
loop
int3
es
mov
retf
fld
mov
dec
and
or
in
inc
stc
jae
fcomp
iret
push
pushf
es
aam
sbb
popf
xchg
fldcw
movs
xor
lods
jmp
or
scas
movs
lock
push
outs
dec
mov
jmp
out
and
jmp
mov
daa
jp
in
in
pop
test
jp
outs
imul
mov
imul
add
popa
cld
retf
or
shl
adc
xor
cdq
in
mov
xchg
jnp
fstp
pop
pop
std
(bad)
loope
cwde
fisttp
mov
test
jnp
push
adc
and
pop
mov
cdq
movs
push
sub
fsubr
mov
xor
mov
push
sub
xchg
jmp
stos
xor
dec
imul
pop
call
inc
pop
int
fst
add
mov
jl
xchg
xor
or
ja
cli
ds
mov
push
jmp
aad
dec
mov
into
xchg
mov
clc
inc
mov
mov
inc
inc
lds
test
js
and
out
inc
test
add
lods
ja
fldenv
xor
jbe
icebp
xlat
jnp
push
inc
in
and
int
lods
push
pop
lds
mov
inc
mov
pop
sbb
mov
pop
push
out
daa
and
addr16
clc
ror
cmp
(bad)
dec
enter
dec
retf
lods
jnp
push
mov
sbb
inc
mov
mov
and
add
fwait
push
sub
push
(bad)
pop
mov
movs
aas
cdq
movs
pop
cwde
xchg
jb
scas
aas
xor
xor
sbb
jae
push
loop
mov
aad
loope
jns
and
xchg
adc
out
fwait
mov
das
inc
mov
push
in
mov
push
shl
sbb
sahf
mov
sub
dec
div
mov
add
mov
mov
pop
lds
lea
jg
out
dec
add
push
aam
inc
test
cmps
xchg
cmps
and
daa
pop
ret
pop
jbe
and
xchg
sbb
gs
or
xor
mov
lods
mov
clc
pop
clc
int3
add
mov
push
fstp
sub
or
cmp
in
retf
dec
rcr
aas
into
ins
cmps
int
sub
cmp
xor
dec
out
cdq
popa
or
es
aam
jnp
pop
and
cmp
ins
arpl
jne
mov
pop
pop
xor
mov
push
or
push
add
cmp
mov
and
push
call
gs
add
jl
sbb
jp
jnp
add
xlat
push
xor
(bad)
mul
(bad)
clc
or
jge
add
dec
out
mov
sub
sbb
(bad)
jo
rol
lea
data16
ins
or
or
cwde
jns
dec
nop
add
(bad)
jl
jnp
shl
mov
data16
sub
push
push
mov
(bad)
outs
rcr
push
fnsave
test
ja
fild
dec
loop
mov
(bad)
in
dec
ret
add
or
lock
lods
adc
lahf
pop
jge
int3
xor
movs
or
push
inc
add
jge
inc
leave
and
adc
loope
sbb
(bad)
and
stos
idiv
sbb
neg
and
xchg
push
ds
daa
inc
scas
sub
movs
aas
mov
imul
xchg
lods
dec
rcl
dec
jge
jne
adc
fisubr
jo
mov
(bad)
mov
jae
(bad)
push
jae
mov
nop
clc
jecxz
mov
imul
xchg
loop
fistp
leave
(bad)
in
out
add
add
js
aam
fnstcw
xor
(bad)
retf
mov
iret
cwde
clc
jae
ins
je
arpl
inc
aaa
adc
int3
lock
push
jg
push
pop
test
cmp
scas
sub
pop
jno
jnp
xchg
in
retf
ins
jg
into
jmp
inc
aaa
(bad)
mov
idiv
mov
cli
fisubr
int
sbb
adc
ja
scas
ret
rep
adc
fst
mov
push
cmova
and
outs
xchg
leave
xchg
inc
mov
mov
cmp
and
add
jb
xor
jecxz
test
fwait
inc
jbe
jo
inc
xor
jbe
ret
xchg
loop
pushf
mov
mov
sti
push
movs
add
aam
xchg
cmc
xchg
shr
jno
add
in
sbb
and
daa
xlat
mov
aaa
add
dec
adc
fstp
lock
cmp
sbb
push
loop
mov
call
pusha
das
and
pop
in
mov
or
sub
xchg
push
inc
cld
lods
(bad)
mov
push
in
lods
dec
outs
call
stc
inc
fld
ins
lea
sub
ja
repnz
pop
in
out
dec
lds
and
adc
or
jbe
aaa
cld
mov
mov
aam
lds
lea
and
jns
sub
cdq
mov
(bad)
mov
daa
mov
pop
dec
push
repz
int3
ja
adc
jecxz
and
pop
xchg
push
sub
(bad)
pushf
mov
jns
std
mov
push
fidivr
mov
dec
sti
xor
sub
xchg
fnstsw
inc
movs
sar
lea
fldcw
pop
test
(bad)
outs
mov
inc
js
std
pushf
je
cmps
and
xchg
cmp
jg
fisttp
pop
pop
dec
jmp
inc
imul
cdq
mov
call
xor
imul
sub
push
mov
add
pushf
lods
push
jl
jecxz
or
ret
out
in
retf
call
ja
fs
mov
mov
mov
xor
fldcw
pop
(bad)
std
(bad)
stos
jg
sub
jnp
lahf
adc
push
jp
add
int
jg
mov
sub
lea
bnd
not
jle
mov
fisub
pop
ss
jecxz
nop
outs
(bad)
push
sbb
xchg
or
mov
sub
push
dec
dec
pop
ret
dec
add
sbb
mov
(bad)
sub
sbb
adc
cli
fcomp
and
test
push
lahf
nop
pop
retf
xor
inc
inc
loopne
xchg
xchg
jl
call
nop
imul
std
call
mov
sub
out
lds
mov
jl
dec
inc
xchg
lods
dec
pop
sub
fisttp
dec
sti
cmps
loope
push
ror
and
out
mov
xor
mov
(bad)
push
xchg
xchg
mov
pmullw
mov
retf
arpl
mov
sub
jmp
(bad)
and
mov
xor
repnz
jne
sahf
mov
cmp
jge
lods
fild
fisub
out
dec
ss
loop
xchg
les
(bad)
dec
in
aaa
pop
cmp
sub
and
movs
pop
neg
movs
ja
stos
jl
jl
cmpxchg
movs
mov
or
xor
stos
cmps
push
aas
arpl
(bad)
pop
shr
push
iret
daa
out
jle
add
xor
push
scas
inc
mov
jno
dec
xlat
or
sbb
xor
cs
xchg
dec
repnz
movs
xor
push
xor
cs
inc
iret
fs
bound
ss
xchg
mov
sub
add
sub
fimul
shl
pop
mov
ret
push
popf
or
sub
xor
loopne
lods
mov
pop
cwde
xor
add
mov
mov
lahf
jno
data16
jp
sub
sbb
sbb
or
and
mov
das
icebp
inc
xor
xchg
popa
mov
stos
jno
push
call
(bad)
out
inc
add
call
hlt
adc
dec
sahf
aad
add
dec
out
test
sub
inc
xchg
cwde
xor
not
ss
or
addr16
std
jno
call
dec
cmp
cmp
mul
mov
sahf
shr
loopne
push
icebp
(bad)
jbe
scas
leave
ret
sub
stos
add
push
out
add
lock
call
call
jmp
inc
mov
in
xchg
fdivr
das
mov
dec
test
xor
dec
call
sbb
pop
movs
xor
cmps
cmps
mov
xchg
dec
pop
inc
push
fwait
and
jecxz
dec
fmul
rol
out
pop
movs
test
dec
ss
and
outs
sbb
mov
sub
mov
xchg
mov
es
ins
dec
aaa
dec
push
adc
out
inc
adc
cmp
stos
test
jecxz
gs
cmp
movs
cmp
mov
cmps
mov
mov
ja
push
jecxz
pushf
dec
lahf
scas
xlat
push
scas
push
mov
dec
neg
pop
adc
movs
sbb
or
push
add
adc
push
and
cmp
or
cmp
sbb
mov
add
inc
loop
cmc
cwde
or
fs
out
pop
lahf
mov
cdq
jns
call
into
adc
or
inc
xchg
cmp
push
or
lods
movs
xchg
or
mov
push
mov
and
pusha
das
jmp
test
push
jo
iret
jnp
xchg
dec
ins
mov
push
push
dec
test
movs
es
cli
dec
adc
or
cmp
arpl
ds
pop
popf
jge
popf
mov
pop
sbb
in
retf
sbb
loope
mov
inc
cs
xchg
loopne
push
call
(bad)
sar
jmp
cwde
in
jmp
cmp
dec
imul
jb
jle
lods
call
jb
sub
and
and
(bad)
arpl
mov
bound
or
scas
jg
mov
push
xor
xor
sub
cmp
mov
push
dec
dec
jmp
gs
or
jnp
add
xor
mov
xor
inc
inc
push
mov
inc
stos
bound
cld
pop
sub
cmp
mov
dec
test
xor
int3
stos
loope
hlt
xor
inc
fstp
jp
dec
push
leave
add
setnp
dec
in
in
sbb
mov
inc
(bad)
stc
jmp
lds
adc
test
xchg
mov
pop
retf
dec
and
or
mov
push
fild
push
pop
outs
shl
ja
jge
test
cld
test
outs
jl
fist
gs
pusha
pop
ins
mov
outs
sar
shl
mov
push
es
dec
adc
and
dec
outs
cmp
call
push
gs
push
out
into
or
das
pop
mov
mov
or
in
push
out
sub
rcr
sub
and
bound
ja
je
(bad)
xor
push
adc
mov
sub
stc
xor
frstor
ins
arpl
jnp
inc
outs
mov
adc
push
dec
cmp
sbb
sub
jo
xlat
ret
aas
cmp
mov
lea
inc
test
jl
sub
sub
outs
dec
cdq
pop
inc
jbe
mov
push
ror
xchg
jb
inc
mov
cmp
in
retf
push
aas
stos
addr16
je
jmp
adc
mov
stc
adc
imul
pop
dec
lds
test
fadd
daa
ins
sbb
pop
aam
jmp
xchg
inc
mov
cs
mov
lods
xchg
adc
add
jns
add
push
in
stos
les
cmp
sbb
shl
ss
push
inc
push
and
bound
mov
push
push
daa
xchg
ins
in
cwde
sbb
pop
dec
jmp
inc
fwait
in
and
fimul
leave
cmp
push
jmp
test
lock
repz
xor
jg
sti
xchg
imul
(bad)
cld
repz
mov
dec
mov
xchg
cld
mov
adc
mov
sbb
cmp
hlt
test
sti
mov
ds
jmp
jecxz
stc
sub
jp
mov
sub
adc
sub
inc
imul
fisttp
pop
inc
mov
adc
scas
ret
fimul
popf
dec
mov
cs
stos
or
rcl
and
mov
test
cld
fs
scas
cs
push
xchg
shl
mov
je
push
mov
pop
add
js
out
nop
out
in
icebp
hlt
out
mov
push
jae
cmp
jo
mov
aam
pop
neg
aad
cdq
sti
and
or
(bad)
call
repz
and
ds
pusha
xor
rcl
xor
shl
mov
pop
cmp
addr16
fidivr
add
mov
fwait
ret
leave
xchg
in
and
cmp
mov
cs
aaa
dec
and
jl
xchg
call
ins
or
and
and
mov
popf
xchg
pop
jle
mov
data16
cmp
jno
xlat
dec
test
and
stc
adc
jmp
cmp
cmp
(bad)
imul
(bad)
out
out
pop
mov
aaa
std
xor
out
nop
mov
rol
loope
es
sbb
test
mov
fstp
xor
stos
push
call
xor
cld
es
out
adc
(bad)
and
lods
int
fld
aaa
mov
cmp
std
mov
jmp
add
cdq
or
xor
cmp
push
aad
mov
mov
movs
push
(bad)
add
mov
adc
sbb
aad
inc
call
cmp
inc
pop
hlt
ds
lock
fsubr
fcom
jns
lods
and
add
int3
add
adc
sub
jle
bound
scas
ds
jno
movs
lock
ins
adc
inc
fxch
pop
sub
cld
push
aaa
jecxz
pusha
pop
test
arpl
and
or
mov
jp
mov
sub
mov
push
in
je
and
mov
int
retf
xor
mov
push
fist
test
pop
add
jmp
push
or
and
imul
adc
outs
inc
adc
icebp
cs
movs
pop
test
pop
xor
xchg
jl
lahf
lock
push
sbb
je
fs
jge
sbb
dec
cdq
mov
js
sti
and
(bad)
mov
(bad)
call
mov
retf
push
or
nop
add
dec
test
push
ss
ror
icebp
addr16
dec
enter
pop
jo
add
mov
aad
aas
scas
data16
jl
lea
xor
movs
movs
cmp
mov
xor
stos
pop
xchg
imul
sahf
shr
lods
retf
hlt
and
or
xor
and
test
sub
test
lds
add
sub
mov
or
dec
adc
cmp
sbb
fistp
cdq
xor
aam
ds
dec
xor
(bad)
add
jmp
outs
push
mov
(bad)
pop
xchg
jp
repnz
scas
(bad)
jg
retf
ficomp
je
fcomp
inc
xor
int3
fdiv
pop
sub
pop
cmp
mov
jmp
pop
mov
or
mov
or
into
(bad)
test
jnp
inc
cmps
dec
adc
jnp
sub
or
data16
call
pop
dec
popa
imul
xlat
(bad)
std
cmp
jl
fnstcw
ins
xchg
(bad)
dec
ins
mov
and
xor
push
lods
scas
push
inc
inc
scas
stc
cmc
in
add
add
imul
repnz
adc
sub
inc
and
in
(bad)
and
or
push
xor
imul
call
dec
pushf
ins
mov
movs
mov
clc
and
sub
arpl
push
or
inc
or
mov
push
cdq
ret
push
fwait
cmps
push
int3
lea
push
in
je
fcomip
adc
out
mov
pop
dec
sbb
fsub
jns
mov
ins
mov
pop
ja
int
icebp
push
sahf
mov
cmp
pusha
sub
dec
enter
cmp
ds
mov
mov
mov
scas
mov
gs
mov
shl
jb
and
add
ss
xor
inc
mov
or
cmp
dec
(bad)
xor
jp
fstp
ds
mov
cmp
jg
sbb
and
clc
dec
das
dec
loopne
fcomp
or
adc
cli
mov
sbb
retf
loop
push
(bad)
jns
mov
mov
loope
arpl
imul
mov
nop
dec
xchg
and
sar
lea
pop
or
mov
movs
outs
xchg
jae
int
lods
pop
mov
xchg
pop
xor
push
in
pop
sub
mov
push
push
lods
lahf
sti
data16
add
add
call
cdq
imul
xor
addr16
sub
and
js
mov
push
push
sub
lods
fwait
pusha
or
jmp
push
inc
retf
add
pop
add
xlat
(bad)
inc
stos
mov
mov
mov
ja
inc
neg
stos
pop
es
(bad)
sub
int
dec
push
pop
add
push
(bad)
mov
rcl
xchg
ret
inc
xchg
rol
dec
mov
add
enter
inc
mov
(bad)
jmp
xor
daa
mov
loopne
add
mov
daa
fisttp
icebp
jge
jmp
call
dec
jmp
xchg
std
mov
jbe
lds
cmp
jl
test
clc
retf
in
mov
int
sahf
aad
jns
out
push
add
popa
jecxz
xor
sub
nop
call
sbb
test
stos
mov
not
xor
mov
popf
shr
xor
pop
sbb
rep
add
mov
dec
shl
pop
gs
and
pop
nop
lock
xlat
mov
push
sbb
ds
xchg
lods
sahf
add
lods
jo
cli
dec
repnz
dec
not
adc
mov
dec
imul
loopne
and
xor
push
and
pop
mov
jmp
sbb
aad
adc
ins
xor
stos
pusha
bound
mov
ds
popf
add
jle
jne
mov
xor
inc
cmp
xchg
retf
add
loopne
sub
rol
jp
in
shr
mov
rcl
(bad)
dec
push
ror
xchg
dec
imul
inc
shl
not
lods
or
mov
movs
and
dec
add
icebp
adc
mov
sub
xor
push
mov
push
sub
test
inc
in
fwait
leave
mov
sbb
add
pop
jns
jne
test
and
or
inc
arpl
jne
stos
cmp
cmp
out
aam
sub
dec
sub
and
or
fldcw
cmp
retf
nop
clc
rcr
leave
xor
xchg
sbb
cmp
jge
int
fist
test
shr
jmp
jmp
xor
xor
mov
jb
adc
mov
enter
pop
sub
dec
jecxz
jne
loopne
dec
sti
and
arpl
jae
gs
out
xor
cld
shr
sbb
test
and
inc
scas
add
test
outs
push
adc
or
pop
fiadd
popa
adc
push
adc
sti
mov
test
daa
or
movs
pop
aad
jnp
test
jns
cmp
inc
sbb
jo
xchg
(bad)
aam
sub
and
cs
iret
pop
or
rcr
lea
fidiv
clc
push
xor
adc
cmp
jno
rcr
mov
pop
(bad)
popa
adc
jg
arpl
sub
sub
sub
popf
dec
nop
bound
xchg
sbb
cmps
push
jne
jmp
out
adc
out
cmp
jl
cwde
into
es
cmps
cmp
xor
into
or
pop
cmp
xchg
pop
jns
push
sub
add
icebp
ds
sub
(bad)
(bad)
test
adc
aad
pop
mov
dec
inc
aad
mov
push
add
bound
scas
js
fld
dec
mov
out
movs
fwait
mov
or
sub
sub
data16
ret
or
gs
jno
cmps
mov
xchg
mov
mov
cmp
inc
iret
cmp
mov
jne
dec
lahf
jno
mov
out
neg
adc
inc
add
lods
inc
fadd
jae
in
in
scas
xchg
sbb
imul
fisubr
sbb
sub
in
jmp
mov
inc
sahf
(bad)
xor
jp
jno
in
cmp
dec
jbe
sti
repz
(bad)
cdq
fwait
iret
jae
and
jg
mov
push
ror
lds
fs
out
xor
popa
push
push
sub
push
xchg
and
push
adc
pop
cwde
mov
sbb
sbb
xchg
lods
dec
lahf
retf
pop
retf
adc
xchg
out
xchg
jmp
js
sbb
mov
dec
or
push
inc
sbb
mov
fcomp
not
push
mov
push
inc
ins
ret
adc
or
or
aas
xchg
fist
stc
mov
xchg
push
mov
ds
xchg
call
dec
cmp
and
es
sub
xchg
jge
rcr
aaa
cmps
enter
hlt
stos
mov
(bad)
imul
sti
push
std
(bad)
sahf
jmp
sbb
push
cli
mov
clc
std
ja
lods
out
sbb
call
push
dec
(bad)
cwde
mov
or
jl
push
ror
jno
mov
pop
pop
mov
mov
and
daa
(bad)
mov
shl
add
iret
addr16
and
xchg
iret
jbe
sbb
pop
mov
xor
mov
pop
lods
std
push
jne
inc
popf
(bad)
inc
fisttp
push
pop
sub
or
adc
push
(bad)
or
clc
push
push
popa
pop
xor
push
mov
scas
adc
mov
push
retf
jmp
js
mov
popf
sub
outs
aas
in
rcr
push
shl
sbb
das
jmp
jle
mul
je
std
jne
mov
lock
lods
int3
daa
ins
shr
mov
jo
cwde
popa
movs
xchg
imul
mov
sbb
loope
(bad)
adc
cmp
mov
test
add
inc
or
lock
sub
(bad)
add
mov
in
and
mov
bound
adc
dec
cmp
(bad)
hlt
or
push
sbb
xchg
jge
ins
jp
xchg
pop
cmps
xor
xchg
js
ret
or
ficomp
or
psrlw
fild
lahf
popf
jns
inc
arpl
jle
mov
jb
xor
sub
retf
and
test
int3
(bad)
outs
mov
xor
(bad)
pop
sub
aaa
into
and
dec
cmp
push
nop
add
cmp
int
push
adc
mov
push
fstp
stos
mov
mov
sub
lds
movs
inc
movs
popa
mov
jbe
pop
ins
or
mov
clc
pop
dec
mov
cwde
push
mov
cmps
stos
xor
mov
std
dec
or
daa
push
mov
gs
sti
je
mov
cmp
cmp
mov
das
mov
int
dec
(bad)
cmps
mov
retf
enter
(bad)
mov
ins
in
inc
das
rcl
into
mov
retf
mov
in
cmp
aad
xor
hlt
sahf
fistp
xchg
(bad)
mov
xor
jno
aad
cmp
test
pop
ds
imul
xchg
add
ret
xor
in
adc
fbld
push
or
call
push
and
movs
xchg
out
and
repz
test
pop
or
inc
mov
mov
mov
loop
test
les
mov
adc
out
aad
cs
(bad)
jmp
mov
test
imul
cld
pushf
dec
sub
in
sub
sahf
mov
popf
gs
sub
sbb
scas
push
into
mov
push
leave
mov
pop
push
mov
mov
retf
in
stos
movs
in
and
int3
mov
bnd
xlat
sub
adc
xchg
shr
pop
push
push
cmp
cmps
mov
mov
(bad)
cmp
add
test
sub
mov
dec
push
cmp
xor
sub
inc
push
rcl
call
cmp
pop
xor
sbb
adc
shl
movs
cwde
fnstenv
les
push
stc
push
mov
arpl
int
jmp
and
dec
bound
jb
repz
mov
and
xchg
repnz
sub
test
jl
add
sbb
not
test
cmp
sbb
push
mov
mov
test
push
inc
inc
pusha
pop
imul
outs
push
and
jl
mov
fs
mov
int3
mov
jae
fsub
xlat
ja
in
and
sar
pop
call
std
test
mov
or
inc
jb
cdq
pop
imul
or
push
loop
jae
pop
fidiv
mov
arpl
or
mov
stos
add
movs
push
shl
inc
xchg
stos
shl
inc
ret
xor
jmp
lock
call
push
sbb
aaa
xor
test
inc
ins
outs
les
sbb
call
sub
fadd
cmps
mov
or
mov
out
xchg
fwait
jmp
adc
cmp
jno
push
adc
push
mov
mov
outs
not
xor
mov
and
ss
push
inc
imul
imul
mov
std
hlt
shl
loop
sub
cmp
mov
loop
ja
adc
dec
cmp
lahf
mov
call
fist
nop
mov
sbb
mov
jns
(bad)
push
daa
sub
mov
in
cdq
retf
lahf
mov
add
in
mov
jmp
sub
mov
popa
fst
and
ins
xchg
jmp
xor
nop
(bad)
sub
arpl
lock
jmp
(bad)
jnp
add
in
cmp
ins
sbb
mov
xor
adc
dec
dec
sti
fiadd
lea
and
fs
lods
and
xchg
cmp
ret
mov
push
pop
mov
es
xchg
mov
fwait
sbb
not
movs
jmp
or
mov
in
xchg
or
cmp
js
clc
popa
mov
dec
mov
and
repnz
mov
lods
mov
jo
add
loopne
mov
lods
aam
hlt
mov
(bad)
scas
adc
popf
mov
mov
sbb
into
scas
cld
push
inc
xor
aad
mov
sub
test
sbb
js
scas
xchg
lock
je
push
sbb
xchg
(bad)
jns
xor
push
inc
mov
int3
xchg
push
mov
xchg
fs
(bad)
loopne
cmp
inc
adc
xchg
and
mov
aas
ins
aad
pop
push
(bad)
shl
outs
lods
nop
aaa
or
or
push
jl
and
xor
jne
fnstenv
test
sbb
mov
sbb
in
scas
mov
leave
hlt
add
pop
pop
popa
sbb
add
addr16
jg
daa
cmp
and
enter
cli
mov
dec
pop
jns
xor
mov
fwait
or
sub
push
retf
xor
pop
add
mov
xchg
jno
ret
pop
icebp
into
inc
or
push
call
in
cmp
xchg
sub
and
ins
xor
ss
inc
mov
mov
dec
sub
mov
xor
push
les
scas
and
repnz
test
int3
jecxz
jecxz
fwait
dec
cmp
mov
cli
dec
movs
cmc
sbb
mov
xchg
(bad)
daa
popf
mov
inc
add
cmps
sbb
sub
jg
or
mov
xchg
pop
loope
bound
retf
shl
mov
daa
mov
and
xchg
xlat
pushf
inc
sar
test
into
popf
retf
subps
mov
sub
mov
ins
xchg
or
dec
jge
js
xchg
jmp
jmp
bound
xchg
and
push
jo
add
mov
fimul
xchg
aam
jge
scas
imul
out
or
xlat
in
add
inc
and
out
mov
and
cs
add
(bad)
sub
mov
scas
jnp
jne
call
and
ror
lods
mov
mov
add
popf
xor
adc
sbb
std
xor
mov
jb
pop
jecxz
div
inc
jmp
xchg
repz
inc
cmp
rol
xor
mov
jns
xchg
adc
add
popa
popa
int
sub
xchg
dec
mov
cwde
call
adc
xchg
add
pop
adc
fcomp
cmp
iret
lds
not
aad
enter
mov
cmp
je
pop
add
mov
aaa
pop
test
cs
ins
fisttp
leave
adc
inc
dec
adc
push
pop
pop
and
xchg
int3
mov
test
(bad)
aad
dec
or
fidiv
call
adc
xchg
jo
add
inc
jnp
cld
push
xchg
cmp
cmp
push
bound
mov
pop
add
sub
add
das
jb
inc
test
xor
lds
call
sub
jmp
sbb
push
xor
mov
adc
mov
(bad)
inc
sbb
scas
jbe
mov
rol
ror
mov
int
(bad)
(bad)
repz
das
test
mov
test
sbb
inc
fs
mov
sub
sub
les
sub
(bad)
int
xchg
add
pop
xor
outs
mov
repnz
push
shr
sti
push
push
mov
test
pop
add
pop
aaa
pop
out
mov
push
mov
jmp
test
add
mov
sub
es
lds
outs
retf
sub
shl
sub
in
mov
aas
sbb
sbb
sub
sub
fsubr
repz
aas
mov
shl
mov
jne
sub
(bad)
add
icebp
or
repz
not
cwde
mov
outs
stc
hlt
and
inc
pop
mov
(bad)
hlt
cs
adc
lock
fild
pop
arpl
clc
arpl
sti
xchg
sbb
sbb
or
xchg
cmps
push
les
hlt
cmps
mov
mov
daa
adc
imul
cdq
cmp
stc
(bad)
popa
cmc
inc
fs
test
push
enter
add
mov
cmp
jns
dec
push
retf
cmp
int3
loop
fnstsw
cmp
mov
lods
jg
mov
jbe
(bad)
shl
scas
out
xchg
mov
mov
mov
stos
sub
jmp
loope
mov
pusha
(bad)
jle
out
shl
mov
(bad)
sbb
scas
xchg
fwait
xchg
sub
nop
sbb
test
push
hlt
test
or
sbb
mov
mov
inc
pop
xor
or
push
mov
sub
loop
imul
mov
daa
mov
(bad)
push
push
xchg
inc
gs
mov
call
push
cmp
(bad)
fcomp
ffree
xchg
sbb
inc
pop
push
and
dec
sti
jp
jle
retf
mov
dec
leave
sahf
fs
cmp
hlt
add
adc
cmps
in
arpl
xchg
mov
pop
sbb
cs
lock
(bad)
out
mov
js
icebp
sub
mov
push
jg
adc
pop
mov
push
loop
mov
add
inc
push
push
pushf
test
movs
cmp
mov
mov
(bad)
outs
loopne
(bad)
bnd
xor
dec
adc
mov
adc
or
sbb
scas
daa
icebp
mov
xor
popf
leave
cmp
fild
(bad)
div
mov
loopne
push
mov
cdq
xchg
shr
jg
jl
outs
inc
dec
out
inc
lds
adc
cmp
sub
js
out
cld
xor
mov
lea
mov
mov
mov
inc
or
movs
push
pop
xchg
leave
add
repnz
aaa
cs
data16
test
cwde
(bad)
sti
lahf
mov
adc
aas
xchg
outs
int
sbb
mov
pop
sub
mov
pop
imul
pushf
ja
fs
sbb
les
jbe
pop
mov
scas
jg
daa
adc
movs
mov
mov
retf
push
inc
push
test
fisubr
ret
cmp
add
mov
mov
mov
and
jmp
and
cld
in
jmp
clc
adc
pop
scas
ret
cmp
out
jb
aas
or
les
fisubr
push
scas
fsubr
outs
sub
inc
leave
pop
ins
dec
stc
in
push
ss
xchg
mov
jns
lahf
dec
add
shl
adc
pusha
test
sub
aad
mov
shl
mov
bound
cmp
mov
test
and
or
loopne
inc
repnz
scas
out
bound
nop
js
lods
cmps
jae
outs
dec
and
jle
pop
push
xchg
retf
mov
mov
jecxz
jne
das
jne
adc
mov
in
cmp
into
pop
xchg
int
dec
dec
sbb
mov
out
pop
jecxz
into
mov
aad
outs
mov
(bad)
hlt
dec
jb
mov
xor
movs
dec
push
shl
sbb
mov
stos
(bad)
in
fst
pusha
and
and
sub
lods
push
jnp
mov
push
mov
xlat
lods
loope
mov
cld
test
movs
in
xor
mov
push
xchg
ss
scas
sub
or
pop
and
pop
aas
sar
sahf
add
and
mov
shl
mov
dec
arpl
in
jbe
mov
ins
xor
(bad)
adc
and
pusha
or
int
add
mov
dec
cmp
cmps
mov
shr
fadd
jg
shl
jb
push
push
mov
or
in
jmp
inc
adc
ds
scas
dec
mov
clc
pop
xchg
mov
mov
sbb
jnp
popf
aad
dec
mov
push
cmp
push
mov
sub
and
stc
loopne
frstor
mov
sub
loopne
(bad)
jno
shr
sub
pop
test
add
mov
int
fwait
in
xlat
test
pop
neg
add
test
push
stos
adc
cs
pop
dec
dec
dec
inc
sub
gs
ins
mov
mov
adc
fimul
push
adc
pushf
stos
(bad)
mov
mov
imul
mov
cmps
jge
fs
push
mov
jno
sar
cmp
clc
sbb
push
mov
out
inc
sub
arpl
lock
shr
push
fdiv
fimul
cmc
dec
lea
xor
push
(bad)
mov
push
enter
and
mov
fisttp
out
xor
inc
imul
mov
adc
add
push
outs
mov
(bad)
loope
test
push
out
jb
outs
das
lods
add
lahf
add
(bad)
cli
mov
test
adc
jmp
xor
mov
mov
cmp
xor
adc
jne
addr16
into
dec
or
mov
fs
mov
fist
fs
pop
lds
add
xchg
mov
push
and
or
fistp
xor
jb
or
ret
xchg
push
or
daa
out
imul
cmc
cld
jo
hlt
dec
sbb
push
mov
icebp
out
cmp
xor
dec
xchg
jmp
inc
mov
sbb
mov
test
push
mov
out
ror
mov
mov
into
dec
adc
push
mov
push
cmp
loope
dec
loopne
mov
(bad)
test
cmp
repnz
jae
jmp
mov
stc
addr16
and
ror
pop
cmc
scas
les
cmp
mov
jmp
jle
mov
es
mov
retf
es
inc
mov
outs
pop
add
jl
daa
add
repnz
call
nop
cli
or
inc
jnp
bound
cmps
add
movs
xor
sbb
jae
shl
dec
add
adc
jns
and
outs
jge
xchg
sub
mov
imul
das
cld
dec
(bad)
xchg
mov
cmp
and
cmps
pop
jae
jo
jb
pop
inc
rcr
mov
jmp
(bad)
adc
dec
jmp
paddw
xor
lahf
jl
cmc
mov
out
jo
mov
out
mov
repnz
scas
pusha
mov
cli
mov
cdq
push
in
jne
clc
mov
out
icebp
push
sbb
inc
pop
nop
and
fdivp
arpl
dec
fdivr
mov
add
pop
iret
or
imul
int3
(bad)
or
jnp
imul
fnstcw
or
jmp
rcl
fistp
jae
push
mov
hlt
mov
data16
gs
jg
mov
out
dec
inc
dec
cwde
(bad)
movs
(bad)
movs
pop
bound
jle
aam
adc
push
ret
fwait
push
xchg
stc
aaa
arpl
push
neg
ret
jo
sahf
fucomip
mov
icebp
and
cmc
sub
int
cs
gs
mov
mov
shr
in
cmps
jecxz
nop
outs
les
mov
add
push
cmp
call
bound
adc
dec
or
mov
lahf
std
jecxz
dec
sbb
gs
sbb
mov
mov
mov
xor
sbb
mov
cs
or
dec
jle
sti
sub
ins
fcmovbe
inc
cmps
inc
(bad)
int3
xor
clc
cwde
dec
xchg
(bad)
mov
std
mov
adc
pop
rcr
sub
xor
mov
jne
sbb
inc
sub
mov
jmp
cmp
out
or
xchg
cli
sbb
inc
inc
jae
enter
adc
adc
jl
add
cs
mov
mov
push
jo
jp
or
(bad)
leave
mov
in
jg
fistp
jns
popf
add
shl
xchg
outs
pop
adc
dec
icebp
sub
imul
cdq
sub
(bad)
fmul
xlat
push
mov
jmp
add
sub
sbb
add
nop
inc
and
push
mov
les
or
pop
ror
jb
jp
inc
lods
xchg
into
and
lds
in
cmc
(bad)
out
jmp
cmp
mov
gs
ficomp
dec
inc
lods
pop
(bad)
adc
(bad)
imul
imul
and
dec
lds
or
and
mov
(bad)
pusha
push
repnz
cmc
jl
pop
stos
or
xchg
jmp
mov
jl
cmps
sbb
sbb
mov
stc
mov
sub
cld
pop
test
movs
inc
fsubrp
xor
cmp
xlat
shl
(bad)
aad
push
pop
retf
int
pop
sbb
fld
addr16
arpl
sub
das
mov
push
div
fcom
leave
popf
retf
fcmovu
add
and
dec
pusha
dec
sub
dec
ret
dec
out
mov
and
gs
cmp
push
mov
(bad)
(bad)
das
pop
or
rol
(bad)
sahf
nop
lahf
jae
add
ret
sbb
rol
inc
std
xchg
xchg
in
xchg
scas
jno
adc
movs
into
jmp
pop
loope
std
sub
aas
xchg
or
fst
sti
ret
cld
sub
sbb
push
mov
pop
push
adc
mov
jecxz
pop
ss
rcr
mov
and
xor
cli
stos
sbb
dec
ja
dec
sar
cmp
(bad)
pop
sub
mov
push
mov
jecxz
pop
arpl
mov
jl
outs
hlt
ret
aam
dec
add
fcomip
jbe
push
mov
mov
fsub
scas
fs
je
(bad)
es
cmps
sahf
call
call
mov
out
push
ret
add
mov
or
stos
cmp
call
sbb
push
stos
pusha
pusha
mov
jg
cmp
(bad)
dec
sar
in
es
jns
loope
aad
cmps
mov
into
outs
call
push
test
into
imul
rcr
aam
jae
cmp
cld
xor
sub
iret
mov
dec
jnp
mov
out
inc
clc
push
push
xchg
cmps
push
mov
sbb
out
into
rol
inc
sub
xor
int3
mov
arpl
xchg
data16
dec
outs
jne
das
imul
cmps
jmp
fidivr
jg
dec
int
xor
mov
leave
nop
cmps
adc
cmp
xchg
xor
outs
add
pop
mov
cmp
fwait
jno
fwait
xchg
scas
xchg
mov
xchg
fwait
xchg
sub
mov
cli
jb
fs
sub
adc
sub
and
push
(bad)
int
sub
xor
rcr
pop
int
fist
rcl
dec
std
sub
dec
push
pop
inc
sbb
es
cmp
cwde
pop
scas
stos
pop
das
stos
mov
add
mov
(bad)
movs
mov
data16
push
fcmovnu
sub
xor
jmp
lahf
add
pop
pop
mov
call
cmc
(bad)
lea
xor
pop
cmp
dec
xchg
xchg
xchg
inc
pop
data16
xchg
jmp
pop
ret
xchg
je
(bad)
xchg
sub
out
nop
(bad)
call
ja
push
mov
mov
inc
in
aas
or
movd
neg
push
lds
shl
lods
call
call
push
xchg
fs
cmp
outs
std
mov
mov
fistp
mov
fwait
sub
mov
inc
or
dec
push
js
dec
rcr
out
mov
or
daa
mov
sub
and
(bad)
jg
inc
mov
xor
leave
sub
xor
cmp
jg
jmp
fidiv
mov
mul
cwde
add
push
call
(bad)
jmp
and
pop
or
stc
pop
pop
mov
mov
rol
call
pop
push
jns
mov
dec
test
mov
jb
pushf
call
or
or
jl
or
add
mov
lock
xchg
inc
inc
adc
cli
jno
test
xchg
aam
nop
loop
fisubr
push
cmp
(bad)
adc
cmps
sub
jmp
gs
push
jmp
test
jmp
shr
rcr
lea
leave
push
leave
pop
mov
fbstp
adc
stos
and
or
cmp
imul
das
cmp
std
or
(bad)
fadd
jo
cld
fwait
mov
xor
aam
ret
and
bound
outs
cmp
imul
scas
mov
ja
sub
jp
xchg
xchg
pushf
imul
cmc
xor
ins
and
inc
jecxz
test
jecxz
push
test
bound
dec
jecxz
pop
mov
adc
or
and
pushf
ficom
loopne
aad
aad
js
push
xchg
outs
call
data16
sub
or
inc
adc
add
sbb
push
dec
sub
push
push
inc
pop
xor
int
fcmovnb
push
(bad)
popf
xchg
mov
aaa
pop
and
rcl
jg
add
cmps
jl
pop
mov
push
and
or
and
dec
mov
xchg
retf
jle
adc
mov
test
je
push
xchg
xor
push
push
test
cmp
adc
dec
adc
push
jnp
and
jb
scas
loop
movs
sbb
loope
call
mov
test
cmc
(bad)
ds
(bad)
lods
jne
add
push
mov
dec
std
arpl
mov
push
mov
fadd
push
fucomp
xor
add
jl
mov
int3
xchg
ss
push
jecxz
fsubr
mov
push
mov
inc
lods
sbb
test
mov
ror
jo
test
adc
inc
cmp
movs
imul
adc
pop
push
sbb
inc
mov
ins
and
daa
and
dec
add
clc
stos
inc
enter
cmp
shr
pop
xchg
mov
adc
mov
mov
xchg
es
mov
inc
jmp
cmp
add
mov
daa
into
(bad)
push
sahf
jp
movs
mov
out
stos
mov
jmp
sbb
push
fwait
jae
repz
pop
mov
or
les
pusha
into
movs
pop
adc
mov
and
adc
leave
test
movs
jge
xor
xchg
mov
mov
sahf
in
sub
in
and
out
adc
pop
popa
pop
mov
xchg
es
push
pusha
jne
push
mov
idiv
and
cmp
call
ja
mov
scas
mov
jg
fwait
push
rol
mov
push
fdiv
xchg
xchg
push
push
and
cmp
pop
mov
loop
pop
xchg
jmp
pop
stc
cmp
xor
inc
sub
mov
add
icebp
call
mov
mov
outs
sbb
xchg
cmp
add
pushf
sti
or
sub
movs
xor
fsubr
movs
xor
dec
nop
aas
jae
retf
jg
in
pop
fs
bound
cmp
es
mov
mov
push
jae
div
add
data16
sbb
imul
dec
push
aam
je
js
sub
push
dec
mov
add
xor
or
cmp
test
inc
imul
push
(bad)
mov
iret
adc
xchg
ror
xlat
outs
shl
(bad)
jno
jbe
loope
sbb
add
(bad)
push
je
pop
push
dec
xchg
or
or
jne
in
xchg
inc
pushf
int3
sbb
pop
aam
mov
and
pop
sti
push
in
mov
movs
cwde
pop
daa
xor
add
mov
push
shl
cmp
call
call
mov
ret
sub
dec
cld
jnp
neg
add
scas
outs
pop
fistp
sub
(bad)
ret
inc
jg
and
fwait
int3
addr16
(bad)
fistp
cwde
cmps
js
movs
cwde
sub
mov
mov
mov
pop
or
cmp
add
pop
icebp
gs
(bad)
or
lea
jns
cdq
shl
dec
mov
bound
and
sub
mov
cwde
mov
jae
and
retf
out
fld
xchg
dec
in
adc
fsubr
iret
and
es
imul
pop
adc
push
push
ins
stos
movs
stos
push
lods
mov
je
lahf
outs
add
cmps
mov
jmp
dec
gs
mov
jmp
pop
fdiv
sub
in
mov
stc
push
ret
stos
cmc
out
les
fs
push
cmp
mov
add
push
push
or
jbe
push
mov
ss
mov
in
fwait
lahf
mov
ret
cmc
inc
fistp
out
outs
adc
imul
add
or
call
fwait
push
pushf
movs
pop
xchg
dec
in
jg
ret
add
sbb
xchg
pop
adc
sbb
mov
push
mul
add
pop
out
cmp
jg
xor
mov
mov
mov
inc
mov
adc
outs
sub
xor
imul
push
(bad)
jecxz
daa
(bad)
adc
sbb
dec
popa
adc
imul
cmp
mov
(bad)
ror
stos
jp
dec
mov
in
test
arpl
test
enter
pop
push
adc
enter
cmps
js
jmp
inc
xor
(bad)
fisub
xor
pusha
mov
add
mov
test
inc
punpcklwd
push
imul
xor
sub
xor
adc
lahf
pop
dec
pop
dec
and
lods
stos
mov
jns
sar
xchg
add
dec
es
arpl
mov
ror
cmp
das
test
jmp
add
sbb
stos
or
mov
mov
add
shr
or
test
sbb
retf
ss
jp
pop
push
popa
xchg
or
cmc
ficom
sbb
sub
dec
push
push
dec
ja
hlt
or
cmp
cs
mov
sbb
jae
adc
fiadd
fstp
mov
pop
fimul
sbb
or
sub
aas
adc
push
inc
retf
clc
pop
adc
adc
and
rol
retf
cdq
adc
dec
std
mov
leave
out
movs
cmp
mov
cld
loopne
sub
stos
in
scas
lods
fldcw
ret
cwde
or
sbb
adc
repnz
call
test
sub
stc
cmp
or
(bad)
adc
je
icebp
inc
jbe
bound
push
fdivr
mov
xchg
mov
mov
div
imul
sahf
lock
iret
add
jb
pop
stos
dec
not
push
ja
call
push
mov
inc
movs
cmp
loop
add
push
mov
js
(bad)
cmp
pop
bound
mov
or
scas
dec
jge
shr
rcl
xor
mov
adc
jb
ret
xchg
jno
in
or
jl
leave
pop
fnstenv
arpl
and
into
adc
bound
in
(bad)
jg
mov
add
aaa
ins
sub
icebp
jge
pop
or
pop
test
push
sbb
out
cld
inc
sub
adc
mov
pop
pop
mov
and
div
or
jg
fwait
in
cmps
out
jno
call
pop
pop
add
adc
mov
xchg
add
out
bound
sbb
scas
mov
not
mov
mov
adc
sub
or
call
pop
jbe
addr16
jle
pop
lods
mov
jp
sar
sbb
je
adc
dec
cmps
inc
enter
and
pop
imul
in
pop
jmp
xor
dec
nop
test
jle
dec
sti
xchg
dec
ds
out
dec
sar
or
sub
jne
les
ret
data16
cli
push
jbe
add
mov
out
(bad)
mul
jp
push
cmp
retf
mov
push
cwde
sbb
cdq
mov
sub
ins
push
mov
or
mul
and
cdq
nop
jae
push
cld
xor
dec
(bad)
in
pop
sahf
or
ins
cmps
and
dec
outs
fisubr
nop
mov
lock
mov
out
ret
imul
(bad)
sub
adc
xchg
xchg
retf
push
fnstenv
lock
out
div
pusha
or
aas
call
mov
sahf
fild
add
shl
(bad)
sbb
rol
imul
and
call
push
inc
mov
hlt
cmp
daa
or
pop
mov
jl
push
xor
inc
frstor
inc
push
xchg
or
xchg
popa
leave
mov
fnstcw
xor
pop
inc
in
jbe
jo
sbb
xor
daa
xlat
adc
cmp
ret
sbb
cli
cmp
inc
cdq
jo
movs
adc
jbe
(bad)
std
ror
sub
sub
pop
add
popf
jg
pushf
sbb
adc
adc
adc
test
in
pop
std
(bad)
pushf
pop
cs
jno
shl
jle
rcl
adc
scas
sar
pop
jae
cmps
jbe
mov
mov
fsubr
mov
xchg
push
mov
adc
cmps
dec
and
arpl
test
out
xor
add
cmps
xchg
cmp
xchg
sub
mov
push
push
cmps
push
stos
cmp
push
pushf
icebp
lds
movs
aad
push
pop
adc
xor
mov
inc
add
ins
fst
(bad)
fcomp
icebp
cmps
repz
adc
mov
jmp
retf
nop
xor
jno
add
sbb
in
adc
mov
jns
xor
pop
(bad)
and
cld
icebp
add
add
popa
mov
leave
push
push
enter
call
or
cs
mov
pop
xor
retf
int
out
hlt
pop
add
in
dec
daa
xchg
test
ss
push
mov
push
inc
movs
pop
(bad)
inc
icebp
cwde
jle
mov
xor
(bad)
push
cs
pop
inc
fld
mov
daa
rcr
aad
cwde
out
pop
xchg
rol
add
xor
fidiv
je
stos
sub
sbb
dec
mov
ins
sbb
ds
add
jg
push
enter
or
inc
pop
xor
pop
icebp
ror
jno
out
aam
popa
push
ret
popf
push
dec
mov
stos
clc
pop
mov
in
dec
scas
scas
dec
jl
movs
sub
and
int3
push
push
jp
pop
pop
mov
stos
das
ss
std
(bad)
pop
cs
mov
rcl
lock
mov
outs
push
xchg
dec
xor
dec
xor
xchg
sbb
ins
sbb
leave
add
loop
movs
sbb
inc
ret
push
cmps
leave
retf
out
loopne
mov
call
adc
mov
loop
imul
ret
jmp
xchg
add
retf
call
fiadd
dec
imul
xchg
mov
jbe
push
push
mov
pop
mov
(bad)
out
psubusw
adc
int3
inc
jmp
aas
cmp
sbb
jmp
loope
cmp
pop
inc
pusha
jb
test
lods
jbe
sbb
rcr
out
cwde
jno
out
fcom
arpl
mov
fild
ins
sub
or
push
or
mov
fnstsw
jno
stc
aaa
cmp
popa
outs
fild
daa
cmp
cmps
mov
ret
mov
xchg
(bad)
(bad)
fild
into
or
les
retf
out
scas
mov
gs
std
sub
mov
cmc
shr
mov
mov
adc
jp
fdivr
inc
fs
inc
add
jl
pop
adc
aaa
xor
std
adc
push
jmp
test
jge
mov
int3
inc
pop
adc
je
mov
in
and
sbb
mov
inc
pushf
mov
jbe
loopne
rcr
or
jg
push
pop
sbb
pop
mov
mov
xchg
pop
dec
xor
popf
pop
in
mov
fisub
aaa
in
dec
mov
jns
ss
sti
jge
fstp
cmps
xor
fild
jo
mov
pop
fs
outs
or
jmp
pop
adc
ret
dec
and
xor
adc
jmp
pop
dec
hlt
mov
in
inc
mov
push
dec
sbb
dec
xor
dec
mov
jb
and
add
and
outs
mov
sbb
adc
sbb
mov
jp
rol
lock
ins
sbb
cmp
mov
or
pop
ins
leave
fstp
mov
jbe
stos
lods
mov
cmp
(bad)
adc
mov
out
mov
inc
inc
neg
sti
xchg
mov
les
icebp
pop
and
ss
mov
jl
aaa
(bad)
jns
test
inc
ret
into
stos
and
scas
xchg
sub
add
and
stos
sbb
aad
push
lods
leave
shl
xor
ret
popa
ins
repz
dec
stos
stos
out
(bad)
int3
pop
push
out
jmp
shl
pushf
aam
repz
push
retf
xchg
cmp
std
int3
cmp
test
or
jl
bound
pushf
loope
xor
mov
mov
cmc
push
inc
adc
ja
and
mov
mov
pop
jns
adc
jae
mov
mov
xlat
(bad)
mov
in
jo
dec
stos
push
in
xor
aad
in
pop
mul
lea
dec
adc
scas
movs
dec
lahf
mov
mov
mov
inc
cwde
cmps
dec
clc
pop
cli
inc
rcl
movs
mov
mov
jae
loope
dec
inc
add
lods
pushf
mov
(bad)
out
gs
mov
mov
(bad)
and
sub
xor
cdq
imul
mov
fisub
cdq
mov
int
ds
push
push
lock
mov
sbb
cmps
or
mov
mov
adc
out
pop
adc
aaa
pushf
adc
cmp
mov
or
fs
pop
test
pushf
mov
fdivr
add
call
jns
pop
out
mov
cmp
jl
ret
enter
(bad)
cwde
fstp
sbb
retf
push
mov
fbld
int
leave
mov
shl
dec
mov
sar
mov
cmp
add
inc
mov
nop
loopne
imul
adc
sub
mov
xor
jecxz
lods
push
aam
xor
sub
dec
dec
rol
cwde
sbb
je
mov
fwait
cmp
or
adc
add
push
sti
ret
aas
retf
mov
adc
adc
mov
addr16
or
cdq
loop
pop
push
adc
loope
mov
xchg
inc
popf
aaa
push
cmp
ja
add
ror
(bad)
enter
mov
xchg
out
jp
dec
ss
mov
mov
sub
aaa
dec
add
in
xor
in
fprem
pop
movs
cmp
out
(bad)
pop
xor
(bad)
pop
lods
mov
(bad)
vmread
ins
sub
ds
(bad)
int3
ss
lahf
rcr
setbe
cmp
arpl
pop
out
(bad)
fucom
xor
adc
ror
jmp
pushf
out
or
xchg
jnp
(bad)
sbb
jbe
sbb
test
daa
mov
inc
inc
out
xchg
pop
mov
pop
clc
test
clc
mov
inc
div
sbb
jno
test
rol
lods
push
xlat
jo
dec
je
rol
ins
je
add
je
xor
dec
scas
test
or
mov
loop
retf
mov
dec
inc
popf
stos
je
cmp
gs
push
addr16
rcl
pop
scas
cli
aam
dec
test
repnz
add
adc
dec
jmp
pop
jne
pop
xor
sub
ret
mov
adc
in
daa
cmp
inc
inc
xor
mov
outs
outs
iret
test
(bad)
sahf
add
sbb
mov
adc
lds
loope
stos
movs
adc
cmp
add
dec
xor
adc
sbb
mov
xchg
fwait
dec
retf
pop
sbb
mov
rol
xor
scas
mov
out
mov
sbb
mov
or
xchg
call
sbb
ja
std
lods
cmps
sti
sub
add
mov
jle
mov
xchg
mov
out
js
and
loopne
inc
mov
iret
test
cmp
imul
add
out
pushf
push
pop
pop
mov
push
(bad)
mov
pop
aad
xor
xor
inc
scas
sbb
push
adc
loopne
add
mov
fcmove
movs
test
mov
dec
repz
adc
push
cli
ss
mov
ds
ins
add
das
bound
xchg
pop
cmc
xor
or
push
sbb
add
xor
xlat
pop
mov
lock
or
repnz
test
or
fimul
dec
mov
je
ror
jg
mov
push
push
or
in
or
xor
nop
inc
push
std
les
inc
retf
push
out
cmp
js
arpl
sub
rol
pop
xchg
(bad)
cli
mov
mov
sbb
rcr
adc
fisttp
mov
aaa
ret
jne
jne
fs
xor
inc
sbb
mov
js
inc
jae
cld
adc
push
imul
cli
push
int
les
rol
and
dec
cmp
adc
jbe
scas
jp
lods
lahf
mov
shl
dec
imul
jge
mov
sbb
loop
daa
in
jmp
adc
dec
call
pop
(bad)
call
retf
push
mov
jmp
cmp
xchg
inc
sbb
inc
in
outs
aad
loopne
jo
jmp
jns
xor
in
mov
xchg
loope
jg
cdq
enter
leave
sbb
imul
cs
lods
fadd
mov
mov
or
in
int3
cmps
or
fld
leave
xlat
mov
cmp
sbb
int3
loop
mov
lahf
cmp
xor
repnz
bound
xchg
sbb
adc
mov
pop
nop
ret
js
adc
aam
jle
xchg
cmp
rol
xchg
fistp
adc
push
aam
push
jno
neg
ret
push
aad
repnz
mov
test
add
cdq
mov
retf
popa
pop
pop
jecxz
fdivrp
test
out
xchg
lods
mov
adc
xor
xchg
dec
cwde
bound
inc
ror
xchg
test
sbb
fs
sub
dec
jo
ins
aam
push
lods
xor
xor
icebp
add
mov
pop
imul
lds
push
call
sar
or
sub
into
pop
ror
les
lods
lahf
bound
jge
pop
in
test
inc
sbb
pop
pop
js
sub
ss
test
sub
sahf
mov
je
out
aas
add
add
mov
jo
ret
(bad)
xchg
jecxz
mov
and
push
add
out
outs
pop
scas
imul
popf
fisubr
mov
fnstenv
call
mov
mov
mov
jmp
sbb
call
(bad)
dec
das
es
xchg
ins
pop
inc
sbb
ficom
sbb
xor
outs
mov
lea
test
or
lods
int
or
inc
inc
mov
call
lahf
adc
or
pop
jno
dec
aad
adc
xchg
mov
mov
cmp
pop
push
cmc
jl
ins
cmc
sub
push
sbb
push
sbb
cmps
xor
stc
rcl
sub
sahf
scas
add
inc
add
mov
test
int3
mov
push
and
pop
retf
fdivr
inc
dec
sub
mov
sub
int3
shl
mov
mov
ins
push
jl
(bad)
fcmovnb
cmp
mov
adc
hlt
pop
push
and
sbb
jnp
cmp
inc
(bad)
mov
cmp
cdq
and
jp
in
and
imul
sub
cmp
cli
fs
hlt
loopne
adc
pop
retf
test
scas
and
xor
adc
adc
(bad)
sub
and
or
jno
rol
push
stc
outs
jl
cmp
add
jmp
dec
call
aad
dec
and
xchg
pop
cmp
mov
mov
aas
mov
cs
shl
inc
mov
or
(bad)
add
jmp
xor
cmp
adc
jne
sbb
xchg
imul
icebp
rol
sbb
or
mov
les
sub
push
pop
lock
jecxz
mov
mov
popf
call
aad
cmp
push
inc
mov
push
pop
sub
daa
mov
pop
jg
(bad)
jle
test
je
dec
cmp
pop
inc
stos
pop
or
daa
jnp
mov
stos
jp
mov
rcr
pusha
jl
mov
(bad)
cld
cdq
dec
or
mov
stos
pop
cmp
idiv
ins
cmp
in
clc
mov
push
addr16
daa
add
adc
retf
sahf
shr
pop
stos
bound
adc
js
push
fsubp
sbb
lods
lea
jg
popf
rcl
jp
sub
les
mov
sbb
or
scas
xchg
pop
mov
(bad)
mov
xchg
lds
repnz
(bad)
rcl
mov
jmp
or
lss
push
outs
das
or
(bad)
popf
call
cmc
or
pop
jg
mov
mov
or
fisubr
dec
out
rcr
dec
int
cwde
enter
fdivrp
pop
movs
iret
sti
mov
fwait
aas
imul
mov
jg
pop
nop
or
jae
movs
rol
loop
ficom
push
data16
arpl
adc
imul
sbb
popf
fbstp
stos
ja
add
mov
pop
test
pop
jnp
or
ficom
pop
jns
es
lahf
cmp
test
adc
pop
inc
popf
aad
dec
xor
jno
lock
or
sub
pop
loop
inc
push
stc
cs
pop
cs
or
mov
mov
sbb
xor
aas
cmp
xor
scas
pop
mov
(bad)
test
movs
fs
xchg
and
fucomi
sub
repnz
pop
xor
jl
outs
scas
or
into
add
pop
scas
fisubr
xor
jg
aad
xor
sbb
sbb
stos
int
addr16
retf
mov
mov
shr
adc
mov
dec
jmp
push
xchg
mov
out
jle
cld
sub
pop
inc
fsubr
push
int
pop
or
icebp
pop
je
jo
nop
arpl
aaa
xchg
push
retf
cwde
or
sbb
or
pushf
nop
mov
or
(bad)
pop
lahf
(bad)
les
cwde
xor
jns
stos
sub
pop
sti
sbb
push
fadd
test
xchg
add
pop
and
in
jmp
inc
and
xor
in
test
push
adc
xor
popa
mov
js
push
stos
fstp
sahf
div
xlat
jmp
bound
les
add
retf
push
aas
jecxz
push
ss
call
mov
loopne
mov
mov
sub
xchg
out
scas
out
ror
or
jns
or
dec
jmp
inc
inc
fcom
jns
cmps
jecxz
dec
xchg
fisttp
dec
cmp
pop
ss
je
(bad)
(bad)
cmp
and
jp
fld
popf
(bad)
pop
adc
or
mov
mov
out
mov
in
mov
pop
sub
fist
jno
je
adc
imul
out
es
lea
in
or
js
repnz
mov
xor
jns
aad
cld
xor
cli
loope
pop
adc
test
(bad)
in
push
and
mov
mov
rcl
mov
(bad)
out
xlat
stos
mov
dec
inc
mov
cmp
call
cmps
stos
or
fisubr
ins
xor
push
push
lea
mov
jle
jmp
cmp
or
push
or
dec
fucomip
lock
call
fnstenv
aaa
mov
add
out
fisttp
inc
inc
pop
jecxz
sub
mov
xchg
sub
(bad)
sub
fisttp
pop
sub
mov
movs
cmps
(bad)
iret
std
cmps
xchg
into
lea
or
or
push
les
ins
in
repnz
dec
push
lock
call
adc
aam
jmp
jmp
in
pusha
jnp
in
mov
stos
mov
test
push
js
movs
arpl
in
xchg
aam
mov
loopne
in
jb
mov
test
mov
clc
mov
pop
mov
mov
popa
jns
out
mov
push
mov
add
jo
loop
adc
mov
hlt
imul
cmp
aad
mov
mov
repnz
int3
inc
xchg
add
fs
call
cmps
repnz
jnp
and
aam
inc
iret
mov
in
loope
mov
test
outs
in
ror
jmp
sub
xlat
neg
xchg
pop
lods
push
leave
push
mov
or
and
xor
inc
jns
sahf
loopne
sbb
out
ins
sahf
rcr
push
lds
fidivr
mov
pop
dec
dec
mov
enter
repnz
je
daa
and
push
inc
adc
pop
mov
pusha
mov
dec
es
fsub
xor
lea
inc
xchg
dec
push
dec
or
dec
jbe
push
jno
mov
(bad)
and
out
mov
int
js
mov
movs
jle
xlat
mov
dec
ds
dec
into
dec
jle
mov
popf
cdq
push
dec
sub
cmps
test
fstp
inc
repz
add
and
test
in
cwde
in
aas
jo
and
mov
aad
push
dec
jmp
jbe
(bad)
sbb
push
mov
mov
movs
pop
cmc
xchg
xchg
repz
(bad)
sbb
or
bnd
dec
lods
test
hlt
bound
mov
sbb
jns
sbb
bound
out
test
loopne
adc
hlt
mov
ja
movs
dec
ret
pop
adc
jae
leave
sub
les
jp
aam
pop
ret
retf
aas
cs
add
outs
pop
imul
gs
pop
dec
rcr
mov
dec
mov
xor
les
call
sbb
add
in
pushf
inc
push
mov
and
dec
pop
shl
sbb
push
pushf
dec
fdivp
add
inc
inc
imul
movs
lds
xor
push
mov
mov
push
(bad)
fisttp
pop
mov
xchg
pop
dec
(bad)
mov
(bad)
fldenv
cld
push
les
xchg
(bad)
cmp
int3
adc
loope
or
cmps
(bad)
pop
jns
call
lods
lods
jo
push
mov
jns
data16
idiv
jb
push
and
and
inc
std
adc
adc
cs
xchg
imul
sbb
push
movs
pushf
test
ins
int
jae
mov
mov
adc
into
xor
mov
push
out
aaa
mov
xor
sub
nop
aam
cmp
test
sub
mov
cmp
sbb
and
loop
test
cmps
test
jl
(bad)
adc
mov
pushf
pop
or
sbb
(bad)
cwde
dec
fisub
xlat
cmp
or
out
enter
movs
imul
dec
mov
mov
data16
aaa
xchg
cmp
arpl
cmp
das
and
sub
(bad)
shl
mov
aas
sbb
add
stos
ds
sub
jle
mov
pusha
pop
std
xor
std
lahf
sbb
popf
xor
cmp
les
je
push
pop
pop
stos
inc
jl
stos
or
in
jns
xchg
xchg
inc
aaa
retf
ror
hlt
xor
cmp
ja
pop
mov
repz
push
sub
push
pop
aad
sub
std
dec
movs
mov
inc
push
fcmovnb
pop
cmp
fmul
pusha
hlt
fistp
ins
push
aam
aam
pop
jnp
ja
sub
and
push
pop
dec
pop
lods
stos
push
je
js
mov
inc
sub
fist
and
daa
lods
ds
ret
mov
xor
push
cmp
(bad)
outs
bnd
retf
push
xor
div
out
mov
int3
push
bound
ins
jecxz
cmps
jae
bound
cld
std
cmps
dec
or
cmp
xor
xchg
sub
fld
mov
outs
and
pcmpeqb
lods
fnstenv
test
push
add
jmp
mov
jle
jbe
and
int3
sbb
sbb
popf
add
lock
sbb
jg
adc
pusha
mov
pop
mov
push
or
push
mov
in
std
jo
xor
xor
lock
data16
inc
add
cmps
sbb
adc
lods
scas
mov
sub
sub
dec
xchg
sub
das
pop
mov
arpl
aaa
and
sti
xor
imul
inc
outs
jnp
mov
jbe
dec
mov
ja
data16
and
fst
jmp
dec
xor
xor
dec
and
ins
adc
mov
xor
fsubr
push
mov
out
outs
pop
fistp
or
mov
ret
dec
out
pop
lahf
and
loope
mov
mov
cmp
pop
(bad)
mov
sbb
mov
jecxz
ins
cmc
and
popa
es
das
imul
outs
inc
aaa
fwait
inc
and
push
stos
iret
cwde
push
jns
or
mov
push
cmp
gs
xor
xchg
aad
aam
stc
cmp
pop
lahf
(bad)
xchg
mov
mov
mov
xor
out
sub
cmc
js
jge
mov
fdiv
sar
add
jl
call
inc
hlt
leave
add
(bad)
mov
xchg
gs
mov
test
jle
sar
in
jmp
mov
retf
push
(bad)
jns
mov
add
call
jecxz
push
stos
mov
adc
mov
shr
cmps
push
sahf
inc
jp
icebp
add
daa
iret
cwde
leave
sar
jmp
(bad)
and
sti
xor
and
nop
pop
test
ret
mov
add
pop
ret
fld
cmp
cmp
test
dec
sar
shr
loop
invlpg
xchg
hlt
cli
cmc
ret
aas
scas
aas
jne
inc
inc
xchg
jle
fimul
mov
scas
js
cmp
mul
movs
jecxz
dec
loope
fucomi
mov
sub
push
pop
mov
call
and
adc
out
inc
push
aaa
sub
sbb
push
mov
mov
int3
or
mov
or
pop
xor
inc
pop
mov
or
jb
push
mov
hlt
sub
sub
sub
mov
mov
into
ds
mov
xor
pop
sbb
mov
dec
inc
jbe
(bad)
cmc
mov
imul
movs
dec
out
rcr
fst
inc
bound
inc
scas
pusha
rcl
rep
adc
ror
cdq
push
inc
dec
call
inc
and
cmp
sti
add
xor
xor
sahf
sbb
jp
enter
sbb
and
xor
mov
mov
push
ret
cdq
pop
and
retf
inc
xchg
mov
mov
inc
mov
cmp
mov
xor
or
push
movs
cmp
ja
mov
mov
and
or
imul
(bad)
ins
imul
jg
stos
scas
std
inc
inc
in
xchg
and
xor
lock
mov
aaa
ret
or
fucom
or
cmp
push
jg
test
leave
popa
retf
mov
dec
pop
add
ds
leave
add
rcl
dec
mov
outs
(bad)
jl
or
call
loopne
jae
cmps
push
shr
mov
ja
in
jno
call
mov
div
rcl
pop
fcomp
hlt
dec
push
addr16
pop
lea
pop
push
outs
stc
jmp
imul
sbb
dec
fcmovbe
mov
pop
dec
inc
lods
pop
mov
int3
retf
stos
fild
retf
call
dec
push
fsubr
sahf
bound
jbe
mov
cmp
mov
sar
sub
lahf
mov
out
sbb
popf
push
sub
clc
popf
hlt
pop
push
cmps
mov
aaa
xor
xchg
out
pop
fdivr
push
sbb
(bad)
xor
pop
add
(bad)
mov
mov
adc
or
loopne
outs
outs
sub
push
sub
inc
mov
movs
mov
sub
and
mov
pop
fdivr
push
fdivr
cs
inc
out
push
and
es
in
mov
mov
test
mov
push
arpl
fdiv
jle
ds
mov
mov
inc
or
push
add
jo
cmps
sub
pop
fs
mov
inc
lock
sbb
jp
dec
dec
pop
jo
mov
mov
aaa
or
test
jp
mov
gs
retf
and
adc
jbe
inc
mov
repz
push
xchg
pop
dec
ret
inc
es
dec
test
cli
jecxz
cmp
jae
iret
inc
(bad)
pop
and
push
mov
push
adc
jg
jle
xchg
shl
jnp
dec
movs
aam
movs
jb
std
gs
jg
and
push
push
(bad)
call
xlat
xor
fild
xor
xor
mov
adc
push
clc
xor
pop
leave
pop
hlt
inc
xchg
push
ja
bound
pushf
push
mov
inc
jo
xor
repz
pop
(bad)
fwait
ret
adc
push
les
push
nop
mov
jl
loopne
add
loop
test
or
dec
(bad)
lahf
out
mov
cli
mov
rcl
mov
push
in
and
div
out
vpaddb
sub
fmul
xchg
or
je
cmps
jo
cmp
bound
fld
call
mov
sub
test
dec
jb
fistp
sbb
mov
shr
and
cmps
mov
sub
icebp
adc
ins
mov
or
jb
xchg
mov
aad
mov
ins
adc
jb
xchg
popa
or
lods
push
or
cmp
in
arpl
mov
sub
scas
lods
mov
add
sbb
push
test
push
test
sahf
hlt
mov
inc
adc
ds
adc
dec
outs
ss
cmp
jo
shr
(bad)
rcl
and
or
add
dec
mov
lahf
shl
stc
push
test
scas
sub
bound
and
cli
push
mov
lds
adc
adc
sbb
arpl
sub
push
mov
cmp
xor
mov
sub
arpl
cmp
push
das
std
aas
inc
xor
ret
adc
and
or
fcomp
sub
fnstenv
movs
outs
mov
nop
cs
mov
jmp
ficomp
in
jmp
inc
mov
xchg
mov
test
cld
aaa
ret
mov
xor
shl
sub
and
jnp
sub
sub
outs
mov
xor
push
ror
popa
sar
movs
cmp
inc
retf
mov
mov
leave
test
mov
mov
stc
jbe
inc
iret
add
aas
push
cmp
push
mov
das
aam
dec
cmp
rol
loop
cmp
ins
inc
dec
sub
popa
mov
push
pop
xor
fimul
movs
stos
inc
mov
xor
lock
jae
add
and
pop
xor
lahf
or
adc
imul
retf
retf
pop
pop
stos
mov
dec
push
lahf
popa
mov
dec
adc
les
adc
or
mov
inc
outs
inc
loop
cld
mov
or
ins
mov
sbb
sbb
jle
add
stc
(bad)
dec
std
pop
xchg
addr16
mov
xor
nop
push
xchg
inc
jmp
pop
fisttp
arpl
jmp
mov
push
push
lods
adc
or
das
out
into
pop
in
cld
mov
mov
out
push
test
dec
popf
jae
sub
xchg
pop
pop
cmp
dec
add
in
cmp
sar
mov
in
cmp
je
lds
add
aam
cmc
rcr
bnd
(bad)
dec
mov
pop
push
sti
mov
outs
(bad)
lds
push
aas
mov
inc
push
cmp
dec
in
pushf
adc
sti
dec
das
je
dec
sahf
ret
push
or
pop
imul
imul
sub
fdivr
push
push
inc
jae
ins
add
bound
fwait
or
or
dec
inc
and
imul
mov
lock
pop
pushf
mov
xlat
fisub
aaa
add
inc
push
dec
add
jb
js
cmp
lahf
jl
repz
push
lock
pop
sbb
rcr
das
loop
ss
inc
jle
int3
(bad)
adc
(bad)
scas
pop
or
test
sub
sub
in
inc
hlt
(bad)
cmc
popa
arpl
int3
add
xor
xor
in
icebp
xor
xor
cmp
mov
or
xor
dec
(bad)
(bad)
mov
call
gs
cmp
ins
das
mov
inc
inc
iret
(bad)
mov
test
ret
scas
pushf
fwait
pop
adc
fdiv
mov
pop
push
scas
add
or
cmps
cmp
(bad)
call
mov
jmp
mov
sub
pop
xor
sub
pop
adc
pop
mov
mov
mov
xlat
js
pop
cli
and
cmp
jno
test
dec
jae
jo
outs
outs
stc
dec
into
in
xor
or
fdivr
mov
sahf
dec
retf
je
test
push
cli
mov
jp
add
(bad)
mov
movs
pusha
adc
or
ret
je
rol
xor
enter
push
pop
ror
add
mov
cmp
out
inc
xor
inc
popa
pop
push
icebp
pop
push
xor
hlt
xchg
and
loop
mov
leave
cdq
mov
fimul
je
jmp
jp
int3
cbw
ins
cmps
loope
adc
add
jl
dec
cwde
push
xchg
and
mov
mov
pop
cmc
inc
sbb
pop
mov
inc
in
ret
movs
push
push
out
les
pop
cmps
xchg
rcr
bound
out
daa
(bad)
jg
mov
je
pop
out
pushf
fst
jns
push
out
repnz
or
mov
mov
dec
jne
ficomp
and
aad
ret
inc
pusha
dec
sub
loopne
gs
xor
popf
pop
push
mov
sbb
inc
jb
dec
jnp
jle
stos
mov
fcomp
imul
mov
lods
xlat
xchg
loope
xlat
dec
push
inc
or
jg
inc
daa
cwde
cmps
je
mov
cmp
pop
fisub
and
jne
adc
dec
mov
dec
and
aad
enter
ins
jl
inc
jp
pop
or
(bad)
lds
mov
inc
stos
int
jbe
sbb
or
dec
ret
aas
fmul
cmp
xchg
jmp
pop
pop
dec
mov
cmps
out
cs
sbb
jnp
xchg
xchg
in
xor
inc
jge
sub
xchg
les
pushf
mov
xchg
movs
xor
ins
xor
out
sbb
jns
(bad)
iret
pop
ror
mov
aas
imul
jecxz
pop
fwait
cmp
jecxz
hlt
push
pop
push
or
repnz
xchg
push
shr
cmp
hlt
ins
rcr
stos
je
push
inc
imul
or
test
sub
push
or
sub
(bad)
adc
cdq
cmp
mov
lds
outs
fs
retf
pop
(bad)
jge
and
mov
push
or
ins
jecxz
xchg
data16
cld
mov
daa
xchg
push
in
inc
test
and
cmp
inc
dec
jae
inc
in
xor
scas
rol
nop
jecxz
fstp
aam
out
scas
cmp
sub
cmp
out
jmp
add
fs
or
pop
xor
jmp
push
call
mov
mov
outs
fdiv
in
add
shl
lahf
mov
sub
or
xor
xor
lea
mov
jg
int
xchg
and
dec
pushf
or
and
jl
cwde
test
fistp
pusha
mov
cli
adc
adc
inc
das
in
sub
mov
scas
popf
xor
inc
nop
out
mov
movs
sub
sahf
sahf
xchg
cmp
into
dec
mov
adc
jl
pop
or
(bad)
jbe
xor
jg
push
(bad)
and
inc
adc
jmp
fcomip
xor
les
test
stos
lahf
add
jecxz
mov
adc
jmp
xor
pop
cli
es
loop
shl
jmp
mov
(bad)
fld
pop
hlt
(bad)
jmp
test
hlt
test
fdivr
dec
xor
sbb
enter
jne
sub
xchg
push
push
stos
outs
xchg
pop
or
mov
xchg
iret
add
pop
stos
xchg
mov
out
js
or
add
and
clc
inc
arpl
gs
mov
dec
or
or
mov
mov
pop
shr
dec
adc
fsubr
repnz
fsub
call
in
cmc
push
pop
scas
jle
cmps
addr16
cmp
add
or
adc
pop
mov
(bad)
lods
adc
sub
or
test
aas
inc
dec
mov
sbb
mov
aaa
xchg
add
or
add
xchg
ins
or
fisub
push
lock
dec
xlat
mov
div
shl
sub
mov
js
cmp
cmp
or
ror
rol
out
call
into
(bad)
cmp
pop
adc
sar
(bad)
xor
mov
adc
out
xchg
loop
movs
call
out
sbb
jbe
dec
rcr
sub
push
test
jmp
push
sbb
ret
cmp
push
fst
cmp
ffree
sub
adc
pop
pop
sbb
push
adc
mov
jne
dec
lahf
out
mov
mov
dec
out
rcl
inc
and
pop
inc
ja
outs
frndint
sbb
ds
cmp
cmps
jp
push
outs
mov
xchg
scas
cmps
dec
(bad)
mov
mov
mov
icebp
mov
(bad)
ret
xor
pop
ficomp
mov
inc
sbb
stos
inc
mov
pusha
push
sahf
jg
lods
call
pop
das
mov
adc
jl
retf
pop
push
dec
add
adc
sar
xor
xchg
xchg
push
lods
inc
out
xchg
jbe
fucomip
inc
xor
loop
cmps
enter
loopne
je
cmp
xchg
out
test
sbb
cli
jbe
imul
push
fucomp
jl
fbstp
(bad)
xchg
add
mov
sub
sahf
jnp
loopne
cwde
push
ret
in
mov
scas
imul
pop
ror
xor
mov
pop
adc
imul
imul
enter
sbb
mov
or
or
fcmovnbe
push
jg
and
out
call
sub
cld
push
ret
sub
jnp
jb
jp
sbb
jno
add
mov
icebp
push
aas
cmp
or
mov
mov
push
mul
test
ins
mov
shr
scas
dec
inc
shl
cmp
cmp
int3
push
jl
mov
sbb
mov
lods
iret
pop
popa
clc
pop
mov
mov
outs
(bad)
sub
je
sbb
jl
std
xchg
sbb
xchg
loop
adc
loop
cmp
push
inc
xor
jmp
sbb
add
fcomi
mov
imul
fs
jno
cdq
xor
rcl
mov
(bad)
movs
test
or
outs
out
je
mov
xchg
shl
sahf
sbb
test
dec
push
mov
push
xchg
out
dec
lock
push
push
xchg
in
push
inc
jmp
pop
lods
push
xchg
and
out
pop
sbb
fimul
sti
std
fist
sub
mov
adc
xor
inc
mov
mov
mov
mov
dec
popf
add
in
push
inc
xchg
daa
inc
cmp
jp
int
add
mov
and
scas
shl
jnp
(bad)
adc
out
push
pop
cmp
int
xor
adc
repnz
cwde
ja
(bad)
mov
push
xchg
dec
das
cmp
lock
neg
sti
or
data16
jnp
sbb
jecxz
(bad)
cld
inc
mov
daa
pop
in
mov
xchg
mov
sbb
stos
mov
bound
inc
or
mov
jae
ret
add
jge
adc
pop
dec
push
xchg
xchg
dec
mov
sbb
fwait
push
jmp
data16
and
je
inc
xlat
mov
daa
cmp
sub
push
arpl
jae
mov
lds
aad
mov
pop
inc
cmp
leave
adc
retf
test
ficom
sahf
pop
test
out
outs
mov
cmp
test
xor
jb
loopne
xchg
cmp
ds
inc
jne
xlat
popf
(bad)
imul
iret
adc
mov
inc
sbb
fld
inc
jno
neg
ds
outs
mov
in
jecxz
add
xchg
mul
push
test
and
dec
xchg
mov
fmul
hlt
pop
add
aaa
xchg
jge
sub
js
push
dec
aad
call
out
fsub
(bad)
lock
jnp
dec
call
(bad)
xor
jl
std
xchg
sahf
jmp
xor
iret
push
mov
sahf
add
jns
lock
cmp
xor
xchg
ss
fwait
dec
mov
sub
int
scas
test
int3
fistp
fwait
pop
inc
pushw
jp
ret
push
in
imul
and
add
stc
mov
xor
imul
or
mov
test
fwait
push
jno
outs
add
push
xchg
inc
lock
jg
mov
dec
or
lods
or
les
aam
push
mov
cmp
bound
cmp
push
xchg
inc
inc
fwait
mov
cmp
retf
mov
jle
mov
clc
xchg
mov
pop
or
out
jo
scas
jns
sbb
in
in
(bad)
arpl
iret
jns
fisubr
outs
add
and
dec
inc
aas
ret
jb
test
push
sar
dec
sub
inc
fimul
dec
push
bound
(bad)
or
enter
lock
lods
add
xchg
out
stc
inc
(bad)
or
stos
xchg
(bad)
mov
mov
push
and
jle
add
shr
out
dec
das
and
scas
ret
retf
(bad)
mov
push
addr16
sub
sbb
add
(bad)
mov
enter
fs
and
retf
mov
outs
test
push
test
and
sub
push
aad
es
test
push
sahf
movs
scas
outs
orps
nop
xor
sbb
loope
sub
repnz
xchg
inc
stos
push
out
push
das
pop
mov
xor
aad
sub
aas
mov
dec
scas
add
or
daa
hlt
aad
push
or
ins
xchg
xchg
or
movs
das
inc
lds
out
fwait
jl
jo
push
adc
loopne
or
shl
mov
and
cli
sbb
jb
leave
sbb
dec
(bad)
dec
jbe
pop
je
test
mov
add
and
adc
push
fwait
ret
push
xchg
sbb
jmp
std
fsub
or
mov
aam
in
lds
scas
hlt
jae
fild
jne
in
jl
inc
add
lods
shr
add
aas
cmp
add
push
ins
and
shr
xchg
fucomp
fdivr
jne
pop
clc
js
mov
push
xchg
jo
mov
mov
clc
push
aad
shl
xchg
es
lock
int3
movs
xchg
fnsave
xor
mov
mov
inc
mov
cdq
or
inc
sbb
jns
mov
(bad)
adc
sbb
add
js
lahf
inc
shr
pop
adc
adc
push
rol
frstor
std
test
cwde
or
mov
and
int3
adc
xchg
or
sahf
ret
lahf
imul
cld
inc
ins
cmps
sbb
je
movs
arpl
in
inc
pop
dec
clc
les
xor
loopne
and
cs
fs
dec
ret
dec
mov
or
lods
pop
inc
out
ret
cmp
and
push
cli
dec
ret
jmp
fsub
imul
adc
out
test
push
xor
or
std
adc
mov
pop
pop
cmps
jno
dec
mov
fcomp
jecxz
jno
mov
mov
ja
jb
push
sub
sub
add
jns
call
inc
lahf
ja
inc
in
dec
push
add
cmp
repnz
cs
mov
sub
xchg
jbe
mov
jb
es
ror
mov
test
fwait
pop
icebp
and
jp
(bad)
push
icebp
loopne
das
(bad)
sbb
sub
call
ins
sub
lods
imul
or
sub
bound
add
adc
or
mov
popa
pop
push
jo
rol
mov
jnp
cmps
sbb
xor
(bad)
int
dec
test
add
pop
lock
pop
repz
push
sub
cmp
das
fldenv
add
fstp
retf
dec
dec
xor
jbe
mov
sub
dec
loope
add
mov
ins
movups
rcr
out
jecxz
aad
mov
fisub
jno
push
inc
mov
in
retf
mov
mov
ret
dec
pop
cmc
ret
inc
andps
daa
jp
jge
mov
shl
in
mov
(bad)
out
push
adc
imul
sbb
mov
inc
push
cmps
fiadd
fsubr
jbe
ds
and
cdq
inc
cs
dec
mov
(bad)
scas
adc
rcr
or
add
sbb
pusha
mov
dec
sub
es
pop
jmp
xchg
mov
mov
dec
adc
sbb
xor
mov
daa
sbb
and
movs
leave
adc
jo
cmp
adc
loopne
sub
int3
push
outs
inc
jns
and
mov
adc
and
push
or
push
xchg
mov
jecxz
lahf
ret
aaa
and
test
lock
dec
jne
mov
jecxz
mov
mov
mov
(bad)
mov
call
sub
xchg
pop
mov
xchg
cmp
pop
ror
fisttp
test
je
arpl
rcr
mov
stos
test
fcom
test
dec
cwde
mov
(bad)
je
mov
fcmovu
in
gs
das
mov
aam
je
add
mov
add
pushf
(bad)
xchg
mov
fcom
pop
mov
xchg
ret
xor
jecxz
(bad)
fcmovnu
mov
inc
mov
inc
ret
scas
cmp
bound
ret
shr
cdq
and
or
pushf
or
(bad)
jg
mov
repnz
push
mov
adc
mov
jmp
jb
pop
call
in
inc
int
stos
jecxz
sub
out
ds
add
aas
jne
fldl2e
rcl
cmp
dec
arpl
out
pop
pop
call
(bad)
mov
ins
imul
adc
(bad)
jp
jmp
cli
inc
nop
dec
fcomp
or
sub
mov
lahf
jb
sar
jnp
xlat
cmp
icebp
mov
imul
push
js
sub
test
jno
cmp
sub
(bad)
inc
and
mov
hlt
xchg
(bad)
push
arpl
pushf
test
ins
in
xor
push
add
sar
sti
jns
mulps
(bad)
jnp
add
ror
arpl
cmc
cmps
fstp
mov
test
jbe
jmp
cmps
outs
inc
or
mov
loop
mov
add
lea
retf
sbb
cmc
add
push
dec
idiv
xchg
pop
cmp
lods
aas
lock
pop
ror
or
adc
fs
lods
je
lahf
pop
jge
push
xor
adc
jae
(bad)
int3
mov
or
in
stc
out
cld
iret
stos
ins
cs
das
aaa
hlt
push
cmp
dec
push
das
push
repz
cmp
mov
add
xchg
cmp
mov
test
xchg
adc
push
jmp
int3
out
retf
xchg
sbb
dec
js
xchg
push
(bad)
inc
ins
jb
jg
xchg
std
ins
cmp
lea
shl
scas
bound
sar
adc
push
mov
xor
jle
cmp
mov
or
jmp
jo
aaa
aas
(bad)
jbe
adc
jns
ss
dec
fistp
push
mov
jo
(bad)
movs
dec
clc
fsub
push
jmp
pop
(bad)
out
xchg
or
in
(bad)
popf
scas
pop
sti
xchg
xchg
and
and
mov
xor
fidiv
jo
lahf
scas
or
pusha
es
push
cwde
jns
cmps
das
pusha
ret
and
movs
dec
sbb
call
push
pop
dec
sbb
mov
push
jo
aas
pop
mov
xor
jae
jmp
out
loopne
fld
outs
cmp
jp
push
and
rcr
out
je
mov
sahf
sbb
push
push
xor
hlt
aad
pushf
cmp
pop
(bad)
push
mov
adc
xchg
or
icebp
jmp
int3
shl
imul
js
xchg
fld
sub
imul
mov
or
xor
or
add
int3
or
clc
loope
sahf
outs
movs
cmp
jb
sti
adc
ins
scas
(bad)
dec
push
cmp
mov
xchg
bound
jg
mov
inc
xor
rol
push
int3
dec
jp
es
cmp
inc
ds
sub
sbb
mov
or
aas
pop
cli
mov
xchg
dec
call
mov
pop
mov
xchg
jge
aaa
mov
or
adc
test
shl
jae
addr16
xchg
sub
stos
inc
or
adc
jmp
(bad)
push
pop
sub
sub
mov
inc
fild
jo
xchg
add
dec
mov
rcr
jo
sbb
popa
pop
mov
fisttp
dec
ds
and
arpl
jge
or
stos
push
data16
inc
inc
mov
jno
sbb
iret
out
cld
pop
pop
or
sti
in
and
xchg
sub
and
dec
lds
frstor
cs
retf
imul
inc
mov
movs
imul
(bad)
jno
jl
call
cwde
or
dec
jge
scas
iret
xchg
or
push
dec
(bad)
fisttp
std
arpl
push
daa
cmp
ins
mov
dec
sahf
mov
mov
std
add
jmp
pop
cmp
fs
std
mov
cmp
std
gs
test
in
xchg
mov
ins
repz
push
push
push
leave
out
mov
mov
xor
sbb
jnp
jl
cmps
ss
sbb
and
arpl
ins
lea
xchg
cdq
fbld
test
lea
aad
jg
inc
daa
add
pop
scas
xor
cmps
scas
or
bound
cmp
cmps
jne
clc
mov
mov
bound
ret
dec
cs
adc
clc
pop
dec
inc
lods
adc
pop
lods
xchg
leave
jno
xor
mov
push
mov
pop
outs
cmp
dec
cmp
cmps
push
mov
xchg
shl
xchg
sub
leave
es
loope
xor
mov
fnsave
stos
xor
int
shr
xor
fidivr
int
sub
jno
pop
bound
outs
outs
mov
jge
mov
stc
imul
fwait
movs
sub
mov
(bad)
imul
mov
mov
mov
xchg
adc
dec
enter
pop
shl
scas
fistp
adc
test
(bad)
xchg
(bad)
gs
jo
dec
gs
push
scas
pop
sti
adc
add
add
push
in
test
ja
fisub
movs
repnz
sbb
cmp
dec
scas
sbb
xchg
std
mov
push
std
and
mov
adc
mov
fwait
add
imul
inc
sbb
pusha
out
enter
movs
cdq
sub
push
jmp
ins
adc
inc
sbb
not
pop
or
lock
inc
add
stc
fidivr
sub
cmp
je
movd
arpl
inc
out
loopne
mov
fcmovb
inc
aam
mov
jge
out
pop
outs
rcl
add
adc
ss
movs
sti
pop
adc
in
ds
ret
movsx
dec
test
jp
loop
inc
fisub
dec
jnp
loopne
xor
sub
rcl
mov
xchg
cs
mov
(bad)
cmp
adc
arpl
sub
push
jge
pop
das
test
xchg
jns
push
js
pop
cld
pop
inc
fisttp
xchg
repnz
mov
mov
jg
jmp
sbb
imul
fidiv
push
aam
sub
xchg
add
inc
je
mov
lock
dec
sub
daa
pop
int3
xlat
or
and
xor
sub
stos
mov
nop
cmp
rcr
pop
neg
sub
dec
bound
rol
mov
mov
retf
lea
cmc
out
mov
inc
xchg
fwait
cmp
sbb
add
mov
cli
push
mov
jp
mov
ret
lahf
sub
ffreep
inc
daa
(bad)
xchg
cmps
push
les
adc
rol
pop
mov
in
xchg
adc
push
clc
arpl
add
pop
and
pop
call
dec
pop
jle
aam
movs
lds
inc
rcl
retf
or
cwde
fisttp
pop
push
mov
mov
outs
call
sub
jns
sub
lds
iret
pop
imul
xchg
out
and
call
adc
mov
call
in
ret
fistp
xchg
push
repz
adc
movs
add
fcomp
mov
jb
push
imul
punpckldq
xchg
cmc
out
addr16
lods
lahf
and
(bad)
js
or
js
imul
popf
out
mov
xor
mov
cli
jge
push
mov
jle
cmp
sbb
ja
or
inc
test
or
xchg
fdivr
stos
ret
fimul
test
(bad)
add
mov
xlat
int3
gs
es
cwde
inc
gs
int3
pop
loop
(bad)
mov
ret
push
sbb
loop
popa
cmp
enter
shl
xor
jg
mov
lods
ret
out
in
ss
mov
or
pop
xlat
fisttp
jl
cmps
popa
pop
not
cmp
(bad)
push
loope
mov
push
push
sub
js
push
lods
jnp
in
pop
jecxz
pop
push
sub
retf
mov
and
xor
jmp
mov
std
mul
mov
in
shr
xchg
mov
and
in
pusha
aad
pop
sub
test
xor
sbb
dec
inc
adc
adc
ret
adc
int
stos
mov
or
and
retf
ins
out
and
add
leave
and
xor
pop
fwait
push
push
jle
or
mov
fisubr
cmp
std
and
je
jle
mov
popa
mov
adc
pop
push
and
lock
dec
clc
sbb
aad
lahf
out
jmp
mov
iret
cmps
(bad)
push
das
jp
dec
jns
sbb
(bad)
movs
ss
repnz
cmp
jmp
mov
out
inc
pop
mov
or
pop
lock
mov
aas
cmps
(bad)
fcomi
pop
ja
dec
shl
js
mov
mov
mov
scas
in
pop
cmc
retf
das
pop
shr
out
sti
sbb
addr16
dec
(bad)
test
add
and
pop
clc
cmp
scas
repz
xor
push
cli
sar
stos
arpl
mov
data16
jg
sbb
sti
pusha
xor
imul
mov
les
jecxz
sub
xchg
movs
inc
or
sbb
mov
inc
xor
(bad)
lock
pop
and
mov
shl
or
sbb
retf
repnz
lahf
(bad)
fsub
fld
sbb
jp
movs
cwde
pop
mov
mov
pop
scas
mov
adc
aas
repz
cmps
(bad)
lods
movs
popf
in
or
push
stos
movs
and
sub
popa
lods
sbb
or
xor
dec
mov
cmp
jp
push
ins
dec
lea
push
aam
loopne
adc
push
jmp
in
daa
rol
int
mov
or
shr
in
in
mov
mov
data16
push
ret
dec
xchg
mov
sub
mov
imul
stc
ins
loopne
mov
dec
push
xor
aam
xchg
jmp
(bad)
or
stos
cmp
xor
jae
jns
cmp
loopne
jbe
aas
push
pop
xchg
and
or
int
pop
pop
sub
jp
add
fild
movs
outs
fistp
inc
push
mov
push
in
iret
ret
stos
lahf
mov
add
mov
cmp
sahf
pop
fwait
clc
inc
push
pop
out
mov
daa
out
daa
arpl
and
repz
xchg
mov
fiadd
scas
vcvtsd2si
jne
inc
push
xchg
popf
push
das
outs
inc
add
aam
sbb
ins
inc
lods
sub
popa
js
cmp
ss
call
aaa
jmp
dec
aaa
ds
(bad)
mov
js
nop
add
fdivr
retf
cmp
ss
pop
dec
aaa
xchg
fimul
and
ss
es
bt
fiadd
aam
cld
stc
xor
arpl
sbb
out
lea
daa
mov
ror
es
mov
fbld
rcl
add
ins
cwde
nop
sbb
mov
(bad)
pop
or
imul
sbb
mov
add
call
and
test
inc
retf
add
push
aaa
fsub
mov
push
xchg
xor
mov
fnstsw
test
sti
push
and
iret
fmul
(bad)
shl
pop
adc
sbb
or
lahf
and
sbb
int3
(bad)
sbb
sub
jne
push
iret
ja
in
jbe
pop
outs
xor
int
mov
pop
pop
(bad)
in
mov
jno
aam
push
adc
aad
popa
xchg
das
sbb
test
and
idiv
stos
mov
jp
and
lods
jle
clc
sbb
inc
mov
pop
jns
adc
mov
xchg
das
bound
fs
mov
mov
mov
adc
adc
js
pop
pop
xchg
and
out
lock
je
fs
cmp
pop
dec
daa
cwde
lock
leave
mov
daa
cmps
std
xchg
inc
sbb
fistp
loopne
push
mov
and
xlat
popa
mov
or
das
adc
xor
loopne
je
mov
pusha
cmps
pop
stc
xchg
push
ins
shl
out
les
mov
jo
cmps
pop
lds
add
and
xchg
repz
fcmovbe
jg
test
in
xchg
jl
inc
out
scas
mov
cs
or
xor
add
xchg
pop
dec
in
rcr
cmps
xchg
addr16
jge
lea
enter
icebp
clc
jecxz
xchg
mov
ret
and
pop
(bad)
stos
lods
cmp
mov
dec
dec
mov
push
mov
adc
push
sbb
dec
(bad)
mov
inc
lods
rcl
out
sbb
outs
or
mov
hlt
pushf
lods
sbb
ins
jmp
and
sahf
push
add
mov
push
xchg
mov
add
ficomp
mov
dec
sbb
dec
cld
cs
pop
mov
or
fdiv
imul
mov
fisubr
ds
fst
fdivr
add
mov
push
jne
mov
sub
fldcw
mov
setge
pushf
cmps
mov
cmp
clc
in
add
push
ror
mov
sub
in
loope
popf
push
mov
add
xchg
add
ror
dec
pop
imul
sbb
gs
and
aam
test
enter
inc
sub
(bad)
inc
je
bound
mov
sbb
mov
and
fldcw
sbb
loopne
sbb
das
out
fsub
push
(bad)
push
add
mov
push
stc
cwde
inc
and
nop
xor
sbb
mov
sbb
loop
and
jmp
cmps
add
call
dec
add
adc
ja
stos
push
or
and
add
push
mov
jle
pop
(bad)
and
popf
iret
inc
adc
add
daa
icebp
add
pop
or
push
mov
and
adc
lock
dec
jne
xor
int
pop
in
repnz
mov
xchg
jbe
xor
inc
lods
mov
mov
out
dec
pop
jbe
das
jmp
cwde
cwde
sahf
and
pop
mov
jmp
mul
cld
push
iret
imul
xchg
xchg
mov
(bad)
fisttp
test
xor
retf
xor
outs
mov
mov
call
dec
pushf
loop
inc
lahf
pop
aam
fcom
retf
fsubr
fcmovne
xchg
in
adc
sahf
jge
fs
jmp
(bad)
std
mov
jle
jo
lods
(bad)
and
cwde
outs
mov
scas
movs
in
mov
adc
int
ficomp
push
popa
inc
sbb
sbb
ret
mov
fbld
js
adc
or
ror
cmp
out
cdq
(bad)
fidivr
jle
dec
mov
dec
inc
aad
fist
inc
xor
in
mov
call
clc
jns
test
adc
sub
jae
jns
movs
xchg
sbb
push
jb
outs
inc
inc
mov
pop
js
lods
mov
jnp
sub
xchg
pop
xor
imul
mov
aad
push
sti
inc
dec
mov
aas
add
pop
arpl
lods
xor
pop
dec
addr16
sbb
dec
cmps
pusha
cmp
and
mov
gs
js
jmp
(bad)
call
lds
jb
pop
fsub
xchg
les
jecxz
popa
push
push
push
adc
mov
add
pop
pop
sbb
xchg
test
or
jp
add
dec
xchg
sbb
mov
sub
into
push
add
dec
ret
or
inc
inc
cmps
call
fcom
aas
mov
cld
mov
(bad)
scas
mov
inc
jo
sti
or
xchg
and
xchg
nop
retf
or
adc
ins
(bad)
mov
retf
push
mov
jb
fs
ds
or
scas
inc
sbb
jne
xchg
stc
or
adc
xchg
scas
mov
dec
inc
xchg
inc
rcr
loopne
mov
dec
icebp
pop
pusha
fbstp
les
jecxz
outs
cmps
les
add
lds
jnp
movs
sbb
stc
inc
ins
idiv
ins
(bad)
push
add
pop
dec
(bad)
hlt
int
jl
inc
retf
sbb
pop
les
cmps
out
clc
fucom
fsub
mov
fidiv
mov
mov
shl
pop
inc
lods
adc
(bad)
loopne
or
pop
or
push
mov
push
fstp
push
loopne
stos
pop
sahf
mov
hlt
loop
jns
je
cwde
rol
cmps
jl
sar
inc
inc
movs
add
xchg
jg
pushf
je
push
and
(bad)
fdiv
into
jo
mov
jmp
ret
ds
lock
repz
xchg
arpl
pop
ret
sbb
jp
das
aad
not
jno
stc
shr
idiv
repnz
movs
call
loopne
loope
out
stc
xchg
test
test
mov
adc
aaa
jge
popf
mov
jecxz
jae
pop
cmp
or
ins
nop
cmps
xor
fs
cmc
out
and
sbb
mov
inc
xlat
call
(bad)
xchg
push
inc
fwait
mov
jecxz
adc
xor
fsub
jg
fwait
dec
addr16
fs
call
dec
fcomp
(bad)
mov
jno
popf
fistp
sbb
mov
and
sbb
mov
int
mov
dec
jo
iret
dec
out
dec
cs
sti
push
mov
loope
mov
push
sub
outs
jne
data16
cdq
xor
pop
jne
mul
in
in
push
lea
ret
sar
cmp
sbb
push
add
fadd
sbb
inc
pop
js
jo
push
xchg
daa
or
push
and
cmps
cmps
test
scas
inc
adc
add
push
jns
in
add
lods
sti
add
mov
mov
les
xlat
push
xor
fsubr
imul
pop
cs
stc
jmp
scas
cmp
and
cmc
and
adc
lahf
add
retf
xor
jmp
retf
inc
std
loopne
inc
imul
iret
push
ror
cmc
int3
or
dec
xor
mov
mov
or
xchg
inc
xor
pop
dec
lds
ja
xchg
loope
addr16
xchg
push
sub
pop
sbb
lds
cmc
adc
mov
imul
push
sbb
out
mov
fsubr
push
movs
outs
(bad)
mov
and
inc
ds
test
mov
or
cmp
pop
xor
stos
(bad)
xor
rcl
push
mov
outs
mov
xor
or
aam
xchg
es
pop
popf
and
retf
data16
pop
dec
(bad)
and
mov
aas
add
lock
sti
ja
stos
repz
cmp
mov
sub
popf
pop
cdq
enter
ja
dec
ja
fidivr
cmp
dec
scas
(bad)
inc
pop
ds
jne
fisub
scas
mov
ret
xor
arpl
mul
jae
and
stos
sub
mov
aad
sub
add
movs
sub
fld
pop
sbb
test
and
test
xor
shl
(bad)
mov
push
xor
mov
and
mov
imul
dec
stos
rcl
add
retf
push
sub
jb
mov
aam
push
cli
xchg
out
(bad)
loope
scas
xor
retf
in
cs
xor
mov
icebp
mov
jge
aad
fxch
fidivr
jno
push
add
dec
mov
or
jb
pop
lods
fs
icebp
out
dec
sbb
in
pop
xchg
xchg
mov
jns
cmp
mov
jg
or
add
test
jmp
push
std
mov
or
sbb
jp
(bad)
jecxz
das
cmps
imul
jp
push
stos
push
in
xchg
xor
lar
jns
sbb
dec
pop
mov
xchg
hlt
mov
aaa
pop
inc
(bad)
sub
enter
push
not
out
cs
das
add
popa
or
push
mov
adc
pop
push
gs
push
xor
or
in
xor
fmul
dec
inc
outs
xor
adc
cmps
inc
addr16
jo
mov
add
jl
aam
scas
xchg
inc
shr
mov
lock
sub
ss
sbb
ficomp
into
int3
fdivr
jo
jo
cwde
add
cmps
sbb
sub
test
lock
setp
inc
jl
arpl
fsubp
ret
test
jecxz
arpl
out
test
rcr
je
shl
fnstcw
adc
push
sar
int
sti
call
addr16
gs
inc
fsubrp
dec
xor
xor
push
pusha
and
mov
aam
retf
stos
mov
mov
movs
jl
jns
ret
cwde
lods
loop
loope
mov
push
stos
jge
mov
sbb
je
shl
sub
(bad)
sbb
mov
and
test
pminub
and
shl
xchg
int
call
loope
adc
lds
hlt
push
or
jle
movs
jo
push
sbb
fwait
sub
loop
lods
in
hlt
or
(bad)
and
inc
inc
inc
adc
div
jle
add
xchg
(bad)
mov
sub
sbb
jmp
mov
hlt
mov
sti
and
push
cmp
cdq
pop
xor
enter
fild
cmp
adc
mov
lds
cmp
mov
sbb
jo
hlt
pop
(bad)
and
out
adc
imul
pop
or
cs
aaa
jbe
test
push
cmp
sar
(bad)
dec
xor
int3
cs
inc
push
xor
bound
jge
cmp
jnp
(bad)
mov
fwait
outs
cmps
jmp
loopne
stc
not
mov
cmp
imul
je
(bad)
adc
mov
mov
div
sub
call
(bad)
(bad)
adc
movs
sbb
inc
nop
xlat
cli
test
push
aaa
(bad)
ja
int
cmp
addr16
add
ss
sbb
jecxz
dec
mov
pusha
inc
dec
arpl
imul
repnz
xor
retf
or
sub
gs
inc
test
mov
or
js
repz
xchg
sub
xchg
dec
or
and
leave
int3
or
lods
jb
ror
xchg
add
mov
mov
jo
test
movs
fstp
push
jnp
jns
xchg
and
hlt
rcr
test
push
mov
dec
push
jbe
push
xlat
sar
and
mov
xchg
jge
in
movs
cwde
aaa
xor
sub
and
imul
sbb
js
mov
jp
fsub
fistp
adc
and
ret
and
mov
add
popf
jo
pop
leave
mov
ss
pop
jbe
int
fsub
and
cmc
inc
js
xor
mov
int3
fwait
jl
sub
inc
mov
inc
pop
mov
arpl
push
dec
call
fnstsw
ret
inc
bound
loopne
inc
das
(bad)
jno
pusha
mov
mov
(bad)
clc
inc
out
cmp
pop
cwde
call
xor
aam
jg
xor
pop
ret
jg
jl
ja
loopne
push
mov
stos
or
cdq
jae
mov
jne
or
jbe
imul
in
sub
push
ins
movs
push
push
mov
fcomi
xor
push
pop
push
(bad)
push
pop
ins
sub
retf
mov
sbb
pop
or
fnstcw
sahf
jl
xchg
add
cld
cs
mov
mov
add
sbb
cmp
aaa
scas
dec
add
push
aad
loop
fld
in
pop
out
push
mov
dec
(bad)
push
hlt
sbb
test
sbb
mov
mov
btc
in
mov
mov
push
sub
pop
lods
imul
mov
inc
test
and
or
pop
mov
test
push
xchg
inc
and
pop
push
rcl
push
sub
mov
pop
call
sub
test
ja
rcl
into
jge
mov
pop
ins
ins
sub
mov
push
add
js
xchg
imul
fdivr
sbb
std
movs
call
push
ret
cli
jno
adc
adc
test
pop
jmp
cmp
stos
sub
sub
jp
and
adc
test
lds
dec
mov
add
jbe
cmp
add
loop
jecxz
aam
mov
pop
scas
fisttp
jb
inc
icebp
push
(bad)
and
in
inc
fs
js
test
xchg
pusha
movs
lock
dec
pop
dec
xchg
sahf
cmps
in
cs
mov
or
(bad)
test
(bad)
sub
mov
jmp
outs
cld
sbb
sbb
jnp
jp
jo
mov
jp
aad
adc
jl
inc
ss
lahf
ja
movs
push
pop
les
popf
loop
xchg
scas
mov
(bad)
mov
retf
div
loopne
mov
jg
sub
xchg
mov
push
loop
or
lods
fnstcw
out
mov
enter
cdq
aas
jecxz
mov
sub
sbb
or
loope
inc
xlat
out
inc
mov
jns
push
outs
(bad)
xor
pop
xor
frstor
ins
and
scas
xor
in
ss
xor
call
leave
call
xor
cmps
xchg
test
or
or
aad
jmp
jge
inc
adc
ins
vmptrld
stos
cli
fwait
jmp
das
mov
dec
movs
xor
mov
dec
adc
jmp
imul
cmps
les
imul
hlt
repnz
sbb
jp
ret
ins
adc
cli
pushw
fistp
and
jne
xchg
inc
mov
mov
cmps
inc
loop
or
ror
dec
popa
mov
pop
cmp
ror
dec
xlat
stc
test
inc
stos
fcmovbe
sub
add
icebp
jbe
xchg
sub
cld
or
in
cmp
stc
stos
out
pop
lea
adc
shr
push
push
mov
push
dec
mov
int
xchg
es
mov
cmp
push
(bad)
xchg
xor
sub
jno
(bad)
jae
mov
pop
cdq
cmps
xchg
xchg
xor
cwde
or
cdq
leave
sar
xor
cmp
xchg
and
mov
es
pop
add
lods
cmps
sub
xchg
(bad)
push
xor
xor
sbb
dec
cli
cli
fsubr
jge
mov
xor
cmps
or
fs
retf
out
mov
inc
hlt
mov
lock
cli
mov
rcr
or
cld
adc
das
inc
mov
sahf
ror
(bad)
cwde
lahf
inc
popa
cmp
cmp
ja
xchg
or
aas
jge
lock
xlat
mov
out
(bad)
fdiv
sbb
(bad)
imul
not
in
neg
lds
sub
mov
fistp
jbe
cmp
add
daa
shr
cmp
inc
test
jbe
in
jp
out
cmp
sar
inc
mov
hlt
je
repz
inc
push
mov
nop
in
fld
pop
xchg
sub
inc
out
push
mov
inc
xchg
ss
xchg
cmps
(bad)
mov
(bad)
sbb
sbb
push
push
stc
inc
mov
retf
out
fcmovu
pop
icebp
push
sar
in
adc
mov
aaa
push
or
lahf
fs
clc
fnsave
dec
sti
jo
iret
test
sub
dec
mov
gs
pop
pop
jge
ja
pop
cli
rcl
stc
lock
push
out
xchg
loope
aam
cmp
cmp
cmp
scas
rcr
jge
xchg
xchg
sti
cmp
sahf
mov
cmp
loope
neg
push
mov
push
add
mov
pusha
lock
or
xchg
sbb
out
adc
sub
jmp
test
ins
or
xchg
and
xchg
aas
(bad)
jnp
scas
xlat
popf
xchg
lahf
rcr
xor
icebp
mov
jbe
sub
mov
ins
adc
mov
cmp
inc
hlt
jp
lahf
daa
ja
ror
(bad)
repnz
scas
jo
pop
sub
jl
push
cld
cmps
pop
das
xor
lods
and
pop
nop
add
es
popa
push
cmp
pop
jmp
int
mov
jae
movs
adc
cmp
cld
les
jecxz
cs
lea
data16
pop
in
outs
cmc
xor
pop
pop
call
int
inc
dec
in
adc
ds
fild
les
mov
lods
cld
lods
test
sar
xchg
(bad)
mov
jno
mov
icebp
rcl
ins
movs
add
pop
cmc
imul
sbb
sar
(bad)
mov
jg
ret
push
push
push
int3
cdq
push
enter
pop
movs
cmp
mov
push
mov
pop
add
aam
push
in
push
movs
mov
mov
shl
nop
ja
hlt
push
ret
(bad)
cmp
inc
call
push
pop
imul
in
xor
jecxz
xchg
mov
cmps
xchg
stos
or
jle
aas
mov
fisttp
pop
mov
mov
imul
adc
and
cwde
add
leave
ficomp
mov
jmp
sub
loopne
mov
xchg
jge
leave
cld
push
push
adc
nop
arpl
mov
dec
mov
sbb
nop
and
aas
pop
adc
xchg
pop
iret
inc
pop
xchg
imul
jns
(bad)
push
inc
cmp
jecxz
cmc
sub
mov
cmps
sbb
icebp
dec
movs
fimul
cmp
cmp
dec
cmps
push
and
jb
mov
leave
loope
imul
cmp
lahf
fnstcw
test
jl
or
inc
lahf
adc
add
jmp
xor
mov
mov
test
and
dec
or
(bad)
fbstp
or
mov
daa
inc
ja
and
mov
push
sbb
jae
jnp
sbb
push
mov
mov
mul
push
push
add
sahf
cmp
jmp
sub
popf
div
xor
mov
sbb
rcl
add
mov
nop
mov
inc
repnz
lods
push
inc
out
mov
or
repz
inc
mov
enter
test
jbe
sti
out
ss
jge
sub
fdiv
adc
inc
sti
mov
dec
dec
add
adc
fnsetpm(287
dec
push
mov
mov
shl
out
adc
lock
cmp
fstp
pop
dec
fwait
outs
inc
shl
mov
mov
cmp
xchg
mov
push
xchg
inc
mov
xor
mov
inc
cmps
dec
hlt
push
fmul
cmps
call
mov
mov
jmp
dec
test
xor
pushf
loope
rcl
(bad)
jo
jmp
int
lods
out
icebp
mov
xor
push
jecxz
cwde
out
sahf
out
dec
cmps
scas
dec
add
jo
nop
xor
scas
inc
add
addr16
icebp
mov
sub
mov
mov
mov
ss
push
pop
in
out
into
adc
arpl
mov
stc
lahf
pop
mov
sti
in
outs
inc
sar
dec
mov
ret
jge
into
sub
data16
call
adc
sbb
aas
or
mov
sbb
cmp
sub
enter
mov
(bad)
fsub
outs
retf
cli
les
(bad)
jmp
mov
mov
lock
mov
cs
pop
sbb
mov
imul
add
push
arpl
rcl
leave
jne
ret
add
mov
xchg
xchg
lods
xchg
push
or
cmp
dec
out
ja
arpl
call
sahf
inc
sub
ja
and
pop
pushf
inc
fidiv
mov
add
test
pop
enter
adc
mov
and
loope
dec
cmp
jo
ins
mov
jb
into
sub
xchg
sub
mov
mov
adc
imul
sbb
std
mul
mov
mov
xchg
leave
mov
cdq
sub
divps
mov
nop
mov
dec
dec
pop
xchg
jmp
dec
call
mov
ja
(bad)
mov
repnz
dec
and
xor
add
mov
mov
pop
inc
(bad)
in
push
(bad)
div
(bad)
scas
add
and
pop
push
imul
and
pop
pop
adc
jmp
fst
int
test
pusha
or
add
cmp
mov
or
outs
popa
inc
sbb
push
hlt
xlat
push
int
cmovl
xchg
or
pop
jns
fistp
(bad)
xor
stc
sti
pop
jno
bnd
popf
dec
pushf
adc
mov
es
fsubr
pop
adc
cmovs
sbb
add
inc
inc
loope
cmp
aas
push
test
cdq
rcr
js
in
add
mov
push
jnp
into
(bad)
retf
mov
sti
or
push
fucomp
adc
lock
push
icebp
aas
jge
xor
clc
mov
xor
outs
test
push
cli
je
dec
sub
rol
test
aas
sbb
sub
sub
pushf
daa
and
inc
addr16
pop
sbb
(bad)
outs
sti
cld
cmp
sub
les
rcl
pop
fnsave
(bad)
cmp
xor
(bad)
jle
cmc
xchg
add
dec
cli
jmp
and
ud2
xchg
popa
push
lds
sar
xor
das
fadd
out
or
cmp
lahf
shl
out
test
inc
mov
call
dec
int
popa
test
inc
sub
cs
in
jl
int3
lods
add
push
and
inc
stc
pop
(bad)
inc
mov
mov
inc
ins
dec
in
mov
and
outs
cli
call
dec
arpl
outs
jl
(bad)
adc
outs
inc
mov
mov
sti
xchg
(bad)
xchg
pop
scas
imul
jnp
xchg
(bad)
addr16
cli
cld
inc
je
jl
repz
test
xchg
lods
out
xchg
dec
movs
nop
loop
sub
stos
push
cmp
nop
adc
or
sahf
xor
ja
cmp
lods
cmps
imul
xchg
add
call
repz
ret
in
stos
and
cld
dec
mov
pop
pop
adc
xor
xor
(bad)
xor
(bad)
lods
test
or
dec
push
inc
mov
dec
ret
(bad)
push
lds
sub
lods
add
inc
push
jge
xchg
rcr
lds
push
xchg
pop
sahf
inc
bound
xchg
outs
enter
cmp
pop
sbb
sub
jmp
rol
int3
mov
mov
ins
jno
sar
jle
pop
cmp
cmps
loop
cmp
mov
pop
out
mov
push
xchg
test
lea
into
ret
jnp
pop
dec
jo
jmp
pop
bound
test
xchg
in
jle
jnp
pop
xchg
mov
and
push
sbb
(bad)
mov
ss
and
lds
ins
stos
and
jo
loope
push
lock
jle
xchg
inc
cmp
iret
scas
cmp
xchg
sti
xor
enter
cmps
push
movs
dec
mov
call
das
pop
fsub
jl
(bad)
(bad)
in
push
fwait
in
lods
and
(bad)
push
int
mov
lahf
cmp
aad
adc
inc
int
or
push
sbb
sahf
push
mov
xchg
cmp
retf
jbe
mov
and
iret
inc
cld
mov
stc
(bad)
scas
add
fs
or
push
push
add
aas
mov
ins
movs
mov
pop
jo
pop
jb
gs
push
add
push
cmp
cmp
stc
mov
retf
pop
and
adc
dec
mov
call
sbb
push
add
inc
mov
sub
scas
adc
scas
jg
pop
dec
scas
dec
mov
clc
loop
in
pop
cmp
cmp
jmp
test
sub
mul
mov
dec
sahf
(bad)
pop
cdq
lahf
in
scas
xor
ins
sub
cmp
mov
pop
lods
inc
adc
je
xchg
lods
fdivp
loope
push
xor
loop
dec
mov
jnp
cmc
(bad)
cmp
js
inc
jecxz
gs
xchg
repz
jmp
loopne
adc
fcomp
cmps
add
push
pusha
gs
push
mov
pop
sahf
mov
inc
dec
in
(bad)
gs
fucomip
pop
mov
pop
cmps
push
inc
xchg
or
loope
(bad)
icebp
(bad)
or
adc
mov
aam
in
cmc
mov
jp
inc
push
mov
push
cmp
mov
xchg
aas
inc
mov
je
je
add
mov
sub
jmp
xchg
push
(bad)
repnz
cmps
outs
or
xlat
dec
ds
xchg
in
hlt
rcl
mov
ficomp
mov
mov
inc
inc
lods
outs
ds
sbb
out
pop
gs
daa
sbb
dec
std
xchg
ror
jle
inc
stos
push
adc
sbb
test
dec
enter
out
add
les
pop
xchg
(bad)
popa
xchg
(bad)
sbb
in
mov
lahf
shl
xchg
loope
mov
mov
dec
pop
not
or
out
(bad)
rcr
int
or
mov
imul
test
imul
addr16
test
in
add
cmp
mov
dec
xor
lods
inc
cld
lds
xchg
fnstsw
cmp
mov
inc
xor
es
aad
imul
int3
jns
faddp
xchg
push
sbb
xor
ror
jmp
push
push
mov
(bad)
jge
xchg
jle
daa
test
xchg
cmp
mov
and
dec
not
dec
jae
dec
sub
(bad)
test
xlat
adc
fdivr
mov
mov
jle
xchg
dec
add
xor
arpl
xor
mov
dec
pushf
sub
xor
sub
sbb
mov
mov
pop
mov
fsub
mov
out
or
je
pop
jmp
scas
push
and
fist
rcl
add
pop
cs
jne
push
pop
(bad)
scas
inc
dec
repnz
data16
loope
shl
pusha
cwde
sub
cwde
or
dec
daa
push
aam
ins
mov
add
out
mov
cmp
shl
fmul
and
and
pop
add
sti
xor
aam
cdq
sub
push
jne
pop
cmp
push
cmp
mov
fcom
or
popa
add
out
(bad)
sti
push
mov
cmp
mov
dec
iret
sahf
xchg
popa
sub
jecxz
aam
shl
jmp
and
scas
ds
cs
or
sti
les
xchg
xchg
jl
mov
pop
cmp
imul
je
sub
int
sub
in
(bad)
stos
int3
mov
test
mov
cmp
jbe
js
das
bound
stos
push
adc
sahf
in
push
jmp
(bad)
fucomi
arpl
inc
inc
mov
sbb
sub
popa
(bad)
fcomp
cmc
rcl
adc
shl
inc
mov
sub
fwait
mov
jnp
pop
jl
jb
(bad)
fiadd
push
inc
das
inc
daa
adc
fld
xchg
pop
jmp
jno
mov
cwde
and
fld
mov
mov
pop
cdq
mov
xor
or
dec
inc
movaps
call
sbb
pop
and
sbb
push
and
pop
or
mov
adc
scas
xor
int
xlat
mov
mov
or
icebp
pop
loope
dec
xchg
ja
lods
cmp
aas
mov
stos
pop
lds
push
sub
xchg
out
popf
xchg
repz
imul
les
loopne
add
call
test
es
add
scas
xchg
loop
and
push
hlt
cmps
push
scas
js
scas
and
push
and
repnz
lods
xor
ds
push
ins
pusha
sub
jmp
fild
leave
fisubr
test
add
and
jns
outs
jp
std
pushf
lock
aad
jmp
push
push
pop
mov
stc
mov
jno
in
sbb
xor
push
adc
sbb
js
pushf
retf
cmp
mov
rol
loope
push
jb
into
sub
inc
or
pusha
cmp
or
scas
in
(bad)
scas
add
dec
sbb
inc
xor
xor
cdq
bound
jbe
jge
neg
maxps
lods
cli
js
out
(bad)
pop
pop
dec
sbb
in
cmc
sbb
pop
lahf
aam
mov
cs
out
mov
add
mov
shl
fiadd
das
push
fisttp
jbe
repz
mov
sub
mov
ret
dec
mov
dec
shl
jmp
lods
xor
aam
rcl
or
mov
mov
enter
and
xlat
mov
or
adc
push
in
lahf
push
mov
ins
dec
out
jle
mov
movs
ins
jl
fwait
inc
mov
dec
ret
pop
fdiv
cmps
repnz
mov
loop
xchg
(bad)
in
out
ins
sahf
stc
fist
sbb
int
mov
cmp
pop
(bad)
add
and
clc
jmp
cmp
jne
push
(bad)
std
fiadd
fs
or
jns
repnz
rcl
pushf
push
int
jbe
xchg
jns
enter
push
xchg
adc
jae
ror
inc
cmp
jmp
ret
bound
mov
(bad)
shr
adc
aam
rcr
push
mov
je
or
out
adc
shr
and
int
and
enter
sar
xchg
mov
inc
and
mov
inc
inc
xlat
mov
rcl
xchg
dec
scas
pop
shl
adc
call
xor
mov
mov
adc
mov
add
cmp
(bad)
pop
rol
hlt
jne
fiadd
push
ins
push
sub
and
cmp
leave
inc
sub
das
cmp
mov
push
cmc
cmc
xor
cli
pop
imul
fistp
outs
push
iret
or
sbb
out
mov
and
jo
sar
ret
aam
pushf
sbb
push
shr
and
test
push
(bad)
pop
add
stc
jns
mov
stc
or
in
pop
and
mov
lock
sbb
and
jge
jo
jne
jp
outs
xor
sbb
mov
cmps
(bad)
push
dec
push
xchg
(bad)
ins
mov
xchg
push
mov
inc
jl
(bad)
enter
push
push
adc
cli
jge
jbe
rol
cmp
pop
jnp
mov
push
loope
cld
and
and
movhps
push
movs
arpl
sbb
sbb
fs
mov
push
sbb
mov
jle
daa
clc
xchg
(bad)
les
jge
aam
fbstp
ins
mov
fisubr
into
xchg
shl
gs
or
ficom
stos
movs
test
xor
or
mov
js
addr16
or
jne
push
push
push
rcr
push
xchg
stos
xor
mov
inc
movs
in
and
xlat
and
gs
iret
test
inc
icebp
popa
jb
pusha
mov
(bad)
fimul
mov
mov
enter
iret
mov
and
popa
inc
sub
in
mov
adc
mov
mov
(bad)
push
push
fs
inc
cmp
pusha
dec
xchg
fistp
ss
pop
or
fwait
int3
push
xchg
or
xchg
jne
je
mov
call
push
push
ret
bound
and
mov
retf
mov
inc
mov
pop
cdq
outs
cld
xchg
push
jbe
test
retf
sbb
xchg
cmp
xor
cwde
aaa
push
jne
aam
cmc
test
mov
jbe
mov
(bad)
or
sahf
xchg
dec
and
mov
stos
call
pop
pusha
jnp
call
loopne
push
test
jo
xor
or
call
push
mov
std
loope
cmp
leave
add
jmp
dec
cmp
popa
lods
retf
rcr
cmp
stos
in
sahf
(bad)
and
leave
loop
pushf
add
cmps
jb
lahf
sbb
pop
in
xchg
pushf
popf
mov
ficomp
(bad)
mov
push
mov
cmp
or
and
cmp
rcr
pop
jo
add
pop
jo
push
vphadduwq
sbb
and
sar
inc
mov
jne
or
jecxz
jmp
in
(bad)
sbb
data16
aaa
icebp
test
ins
test
sub
dec
pop
xchg
out
ds
jns
mov
lock
popa
or
mov
jle
mov
in
shr
jg
ins
js
in
mov
mov
sub
mov
pop
out
mov
mov
and
xor
add
pushf
out
xor
dec
cwde
sbb
pop
sub
icebp
pop
cmp
dec
mov
rcr
std
bound
add
and
(bad)
mov
daa
inc
push
bound
adc
sti
mov
add
adc
test
jecxz
sti
sbb
cs
das
rol
aas
out
rep
push
popa
adc
ss
cmp
xor
push
mov
xchg
sub
xchg
adc
inc
daa
fistp
or
mov
xor
addr16
adc
mov
or
inc
mov
rep
nop
shl
inc
in
das
mov
cmp
sub
push
sub
outs
pop
and
add
js
mov
imul
sub
add
mov
xchg
test
outs
jl
inc
mov
cmp
movs
and
ret
outs
push
fdivr
loope
mov
inc
or
data16
mov
out
jecxz
xchg
xchg
inc
repnz
aad
inc
mov
mov
aad
(bad)
jnp
data16
sbb
jl
pop
fmul
sti
push
aaa
or
push
fs
int
stos
loope
dec
mov
and
pop
sar
jle
dec
sbb
leave
mov
int3
jmp
call
outs
lods
inc
imul
out
jp
or
loope
mov
ret
lock
adc
cmp
cmp
fdivr
dec
mov
xchg
pop
(bad)
and
xlat
fistp
inc
pop
inc
jns
or
ret
xchg
sub
retf
push
test
popa
mov
test
add
out
retf
cli
sbb
and
jle
add
icebp
dec
stos
retf
sub
push
ret
mov
loope
push
push
lahf
pop
call
les
cmc
mov
jmp
cmp
pop
hlt
dec
retf
fs
adc
pop
xchg
jo
ins
mov
ja
cmp
scas
repnz
fdivr
jbe
or
inc
inc
mov
test
pushf
out
fwait
inc
inc
in
inc
cmp
call
daa
add
cdq
sbb
lods
xor
push
into
pop
pushf
xor
jg
adc
ds
lock
hlt
shr
ins
adc
cmc
jge
or
pop
sub
orps
mov
or
mov
adc
ins
inc
lods
loopne
movs
push
xchg
rcl
mov
rcr
push
push
(bad)
jge
imul
inc
mov
inc
call
mov
mov
loopne
fdivr
mov
xchg
adc
mov
add
sti
mov
mov
leave
or
mov
xlat
mov
jo
outs
sbb
adc
sub
or
cmp
mov
adc
outs
lock
or
or
push
mov
stc
dec
jb
push
add
repz
dec
dec
xchg
or
and
push
div
std
xchg
imul
rcr
adc
clc
call
iret
push
and
imul
adc
adc
dec
push
hlt
jmp
mov
leave
inc
shl
or
nop
inc
ret
or
dec
adc
mov
rcl
sbb
pop
xchg
cli
ds
sub
repz
mov
cmp
pop
push
and
loopne
sub
mov
cmp
add
popf
cmp
hlt
jns
sbb
out
jmp
mov
dec
adc
jecxz
xchg
icebp
add
jnp
movs
sbb
xchg
iret
in
dec
sub
pushf
gs
leave
jg
xchg
xchg
xor
adc
lods
movs
outs
ret
inc
xor
test
popf
inc
fcom
mov
push
test
jge
cmp
call
cmp
push
mov
dec
in
dec
adc
fs
icebp
sbb
cmp
mov
retf
inc
mov
jbe
mov
data16
ins
stc
cmp
pxor
call
int
or
out
ins
cld
in
xor
jnp
int
push
dec
push
or
inc
rol
dec
jne
mov
daa
popf
mov
mov
lock
ins
test
mov
sbb
imul
hlt
xor
(bad)
sub
inc
add
enter
add
lahf
das
popa
(bad)
pop
arpl
sbb
rcl
shr
or
adc
dec
scas
loope
pop
mov
sub
mov
jg
jle
call
clc
std
les
vpcmpgtw
lds
cmp
cs
jmp
repz
push
lea
mov
popa
inc
je
out
div
jbe
mov
enter
outs
pop
add
xor
test
(bad)
stos
cmp
fbld
xchg
push
xor
lds
shl
dec
mov
jnp
call
jmp
cmp
imul
bsf
add
mov
div
inc
ins
gs
mov
or
push
inc
or
mov
pop
daa
cmp
sbb
out
sub
mov
das
xor
mov
bound
or
loopne
je
outs
adc
mov
xchg
aas
and
xlat
dec
jno
xor
pop
dec
(bad)
push
neg
cmp
icebp
(bad)
retf
mov
cmp
rol
mov
jo
movs
mov
dec
das
call
jae
cmps
dec
retf
inc
bound
mov
adc
cmp
inc
push
xchg
jp
xchg
sub
mov
call
push
into
xchg
inc
(bad)
cdq
mov
or
sub
sti
jns
cld
jae
or
ins
lods
xor
dec
sbb
jecxz
sub
rep
retf
or
or
mov
mov
and
ds
adc
in
jg
ins
mov
sbb
or
popf
xor
mov
aad
ror
scas
mov
shl
fistp
neg
dec
xchg
ins
outs
je
sub
xor
arpl
(bad)
aaa
xlat
push
and
rcr
imul
mov
inc
stos
imul
cmp
cmp
xchg
gs
xchg
and
lds
mov
or
xchg
hlt
cmp
jle
lds
mov
pop
out
xchg
ins
outs
ss
imul
push
sub
adc
jmp
lea
gs
fisubr
pop
cdq
addr16
in
xchg
jbe
into
jno
test
out
lds
int
and
mov
cmp
push
dec
mov
gs
repz
mov
push
pop
hlt
jne
aad
pop
inc
mov
cld
jmp
test
push
outs
adc
or
ds
out
inc
xacquire
sbb
mov
and
jb
mov
sbb
jns
mov
outs
cmp
xchg
loope
je
test
cmp
push
pop
mov
mov
out
or
jle
les
icebp
cmps
sub
or
dec
jns
add
cmp
cmp
aam
ins
ins
push
pop
loope
aad
jne
repz
call
mov
sti
(bad)
shl
popa
adc
icebp
test
scas
shr
xchg
inc
pop
adc
pusha
dec
jg
jo
add
scas
push
xchg
movs
adc
dec
mov
mov
pusha
jo
mov
mov
scas
push
test
icebp
fisttp
aas
aad
cmp
push
fcomp
movs
adc
sub
jns
mov
mov
jns
and
cld
fmul
push
cwde
mov
psubsw
in
ret
cdq
repz
in
clc
aas
mov
out
sub
std
repz
cs
fsubrp
mov
setb
js
aam
retf
add
js
leave
js
dec
adc
daa
mov
cmp
inc
pop
out
mov
jmp
mov
out
popf
add
mov
fmul
mov
jmp
inc
out
pop
or
xor
cmps
cmp
mov
neg
adc
cmp
xchg
xchg
mov
xchg
sbb
rcr
arpl
and
mov
adc
hlt
fcmovb
retf
push
pop
movs
ins
shl
je
(bad)
out
fadd
pop
rol
inc
fstp
(bad)
lahf
jl
sub
outs
in
lock
inc
jns
lods
xchg
xor
mov
fstp
add
lds
stc
(bad)
js
aas
mov
push
jnp
cmc
sbb
xchg
adc
mov
and
xchg
lock
test
in
and
jno
in
sbb
stos
lods
loope
out
mov
xchg
sbb
or
lea
jmp
out
not
frstor
mov
jmp
cmp
call
cld
or
jmp
(bad)
rcl
sbb
fwait
inc
or
pusha
adc
and
pop
scas
mov
push
push
rcr
mov
(bad)
dec
lds
daa
xlat
sbb
in
fnstcw
jne
outs
jmp
fsubr
jno
(bad)
in
ds
int3
jmp
in
adc
push
lahf
ret
xchg
push
pop
mov
shr
lods
sub
out
mov
sbb
pop
inc
sbb
push
jae
inc
mov
ins
xchg
xchg
lods
adc
mov
loopne
push
cmp
fcmovnb
in
dec
(bad)
push
or
scas
cdq
cdq
push
sbb
(bad)
ficom
mov
jle
lods
adc
cmp
mov
out
ds
push
sahf
adc
inc
jecxz
cmc
scas
loopne
mov
xchg
dec
or
pop
hlt
adc
shr
add
mov
xchg
test
mov
jnp
push
ret
jbe
push
les
dec
in
xor
sub
sbb
jbe
addr16
clc
mov
int
addr16
aas
jg
sub
inc
inc
cmp
int
shl
pop
and
aad
test
and
lahf
repnz
mov
mul
test
shr
imul
sbb
sbb
push
(bad)
jecxz
(bad)
dec
test
jp
add
adc
imul
call
pop
pop
push
pop
pusha
pop
and
dec
cmp
xchg
mov
(bad)
enter
xlat
ins
sbb
(bad)
es
mov
stos
lock
jg
ss
shl
jg
mov
call
ret
push
call
test
mov
push
popa
inc
sub
inc
mov
inc
or
ds
push
outs
loope
adc
int3
xchg
ja
fsub
inc
cmp
mov
shl
test
ins
mov
(bad)
and
cmps
mov
repz
imul
mov
xchg
pop
jle
pop
pop
adc
(bad)
and
in
mov
ret
pop
shl
enter
add
aam
scas
cld
inc
repz
jae
push
xchg
iret
outs
mov
xchg
add
test
push
cmp
jle
aam
push
leave
inc
adc
add
or
push
mov
cmp
inc
ret
addr16
movs
mov
(bad)
es
mov
xchg
xor
into
jle
mov
inc
daa
(bad)
push
test
repz
loopne
add
mov
sbb
inc
outs
out
push
inc
adc
mov
dec
or
inc
cli
jecxz
lods
aaa
jecxz
(bad)
das
and
sub
in
stos
or
jmp
fstp
mov
ds
in
les
loopne
cld
test
mov
or
jns
xor
inc
adc
ins
xor
arpl
ror
fiadd
pop
sub
retf
loopne
sbb
push
sbb
xchg
test
ret
outs
xor
test
jb
sub
jecxz
(bad)
in
inc
psubb
mov
mov
mov
into
pop
or
push
ret
xchg
ja
sub
fiadd
pop
inc
push
bound
lea
lds
(bad)
lods
mov
div
mov
adc
pusha
ins
pop
sub
shl
bound
push
push
jg
pop
pop
loope
cmp
ins
or
daa
loopne
nop
clc
pop
sub
outs
xchg
mov
out
mov
sub
ins
and
(bad)
test
sahf
or
test
cmps
stos
adc
mov
adc
movs
retf
shl
test
(bad)
jp
scas
ficom
leave
dec
(bad)
mov
(bad)
(bad)
or
inc
adc
movs
test
jbe
mov
cmp
mov
mov
jmp
ror
jmp
dec
jp
data16
seta
pop
lds
(bad)
(bad)
in
leave
mov
sub
dec
fnstsw
adc
push
adc
shl
stos
inc
clc
cmc
(bad)
call
xor
sbb
jb
icebp
int
cmp
or
inc
xor
push
mov
jmp
jge
mov
es
and
xor
in
mov
div
mov
xchg
push
mov
sbb
stos
les
mov
mov
jns
dec
dec
cmps
or
inc
inc
xor
(bad)
pop
mov
pusha
mov
pop
sbb
add
int
cmp
call
xchg
in
fdiv
fwait
mov
add
mov
inc
push
mov
jl
inc
mov
std
xor
outs
sub
push
jo
lock
cmps
and
mov
cdq
rcl
rcr
cmps
push
test
hlt
popa
jp
js
out
(bad)
test
fcmovbe
sub
shr
add
mov
jne
push
test
sahf
loopne
fist
pop
push
jecxz
jmp
lea
pop
sub
xlat
add
xchg
out
cwde
out
push
inc
bound
pop
movs
inc
push
scas
dec
sub
xchg
test
dec
dec
pop
push
daa
out
jle
xchg
cs
xchg
and
cdq
push
(bad)
push
or
addr16
fwait
lods
push
sbb
arpl
jp
shl
sub
into
cmp
(bad)
push
les
outs
xchg
lahf
xchg
pop
sub
pop
mov
cs
in
daa
pop
add
fcmovne
mov
xchg
and
stos
xlat
jno
enter
and
repz
push
sti
mov
mov
mov
push
or
fistp
xchg
nop
or
dec
pusha
aam
sbb
jge
xor
pop
mov
shr
pop
(bad)
cwde
push
sub
test
dec
out
pusha
xchg
mov
add
mov
call
mov
push
sub
lea
adc
xchg
js
jp
cmps
inc
scas
out
dec
loop
in
div
push
xchg
jne
mov
in
shl
fwait
sbb
popf
cmps
cmp
stos
bound
frstor
fdivr
or
cwde
retf
sbb
gs
out
xor
mov
popa
pop
push
or
cli
in
xlat
lock
dec
push
jge
mov
int3
sub
repz
xchg
rcr
les
add
lods
xchg
rcr
cmc
mov
mov
jle
out
inc
mov
ss
mov
xchg
cs
and
sub
or
add
push
movs
fstp
jno
dec
dec
add
ret
jge
add
jo
adc
addr16
sub
jno
add
scas
xor
mov
adc
adc
inc
xor
push
pop
dec
outs
xchg
inc
mov
or
movs
and
push
jle
dec
jg
sub
xor
sub
and
outs
dec
xchg
push
inc
mov
in
int
icebp
mov
lods
sbb
call
retf
add
add
(bad)
aam
jb
dec
loope
int
inc
adc
jg
sub
test
shr
cld
movs
mov
pop
lea
jne
add
push
int
sub
mov
push
out
inc
push
xor
push
sbb
cmp
outs
jge
xor
int
add
inc
call
pop
push
or
fst
inc
scas
adc
hlt
pushw
scas
cmp
sub
xchg
mov
cwde
ret
xor
imul
out
inc
add
(bad)
mov
sbb
std
test
jp
das
imul
(bad)
lock
sub
cmps
jbe
jmp
ja
mov
int3
imul
add
ret
das
add
mov
inc
or
iret
cmp
sbb
pop
rol
vpmaxsw
icebp
rol
sub
mov
rol
mov
clc
in
(bad)
call
ds
imul
jno
(bad)
cmp
fwait
lods
add
sub
push
or
jno
push
in
mov
xor
test
test
add
(bad)
or
ficomp
mov
sti
loope
push
test
lds
mov
inc
fld
aad
out
push
dec
fnsave
lahf
sub
sub
jle
jp
xchg
or
ja
dec
shr
add
ret
daa
sbb
(bad)
sbb
push
iret
shr
bound
mov
(bad)
cmp
ret
mov
int3
cmp
sbb
inc
and
aad
inc
les
sub
cld
gs
mov
fsub
pop
jl
std
and
dec
mov
push
xchg
pop
je
push
aas
cmp
pushf
movs
lahf
repnz
cmp
fld
mov
ds
not
pop
push
sub
xchg
aad
scas
pop
pop
es
gs
mov
adc
jp
inc
lods
fbstp
cmp
aaa
mov
das
inc
push
mov
sti
in
push
dec
sbb
cmps
stos
inc
sbb
jp
sub
pop
lahf
call
pop
or
adc
fstp
call
jb
lods
sub
loopne
frstor
dec
xchg
or
in
xchg
shr
pop
mov
inc
jb
in
in
ins
dec
cmp
mov
call
xchg
pop
in
pushf
daa
arpl
push
and
ror
sub
push
movs
and
dec
mov
push
xchg
imul
inc
push
and
lock
(bad)
mov
fcomp
jbe
mov
add
mov
adc
lods
cmp
mov
push
jno
push
adc
mov
call
lar
or
out
xlat
dec
pop
lahf
mov
xchg
stc
test
push
shr
push
and
mov
loop
scas
repnz
loope
and
ins
dec
inc
aam
daa
cwde
push
lods
xor
popf
jg
fidiv
hlt
mov
imul
xor
add
or
push
xchg
mov
mov
stos
xchg
mov
ds
pop
cmc
arpl
enter
mov
jbe
jnp
div
imul
xor
push
stos
enter
pushf
sub
js
xchg
jo
mov
jle
mov
pop
(bad)
and
and
retf
mov
rcr
pop
pusha
xor
xchg
fucomi
fsubr
enter
jnp
push
mov
push
jbe
jge
and
popa
lods
pop
jbe
dec
ret
(bad)
mov
pop
inc
xchg
cld
adc
adc
movs
mov
fcom
mov
and
lea
or
mov
mov
pusha
or
outs
pop
aam
popa
(bad)
cmp
movs
int3
sbb
loopne
fstp
jmp
jge
aaa
cmp
cmp
out
cmp
test
jne
pusha
rcl
test
mov
push
mov
or
shl
out
(bad)
adc
cmc
in
and
retf
(bad)
fild
add
dec
lea
lock
hlt
mov
shr
sahf
les
mov
gs
adc
mov
loopne
jecxz
ret
pop
dec
dec
(bad)
adc
or
std
adc
sub
and
dec
xor
mov
push
ja
lahf
add
sbb
cdq
dec
int3
fldcw
push
or
sbb
dec
cmps
rol
repz
sub
jae
xchg
sti
loope
cmps
mov
xor
xor
xor
push
repnz
xor
into
add
fdivr
fmul
pop
and
icebp
fisubr
ja
call
mov
(bad)
adc
pop
xor
mov
sub
pop
and
inc
pop
pop
mov
or
jne
cs
fwait
fs
shr
sub
pop
mov
xchg
mov
sub
(bad)
lods
bound
pop
movs
dec
mov
pop
sti
or
cmps
dec
retf
(bad)
sbb
adc
rep
fs
xor
test
pop
push
xor
jnp
enter
sub
hlt
pushf
int3
xchg
out
mov
test
in
cmp
ins
and
test
cmps
pop
sub
add
jne
ins
sub
fld
or
cmc
stc
pop
mov
in
sub
sbb
cmp
in
cmp
cmps
in
int3
xor
xor
jmp
sub
jl
xchg
outs
dec
cmp
sbb
or
sbb
push
int3
mov
popa
es
mov
in
mov
in
fwait
ret
dec
pop
jecxz
adc
push
scas
jmp
adc
(bad)
jge
out
inc
loopne
add
and
dec
xchg
cli
ret
inc
sbb
lods
test
loopne
clc
stos
sub
out
jp
retf
jnp
mov
nop
mov
xchg
push
test
ins
adc
xor
shr
jb
mov
lds
scas
push
pop
pop
cmp
test
or
mov
ss
inc
pop
ds
adc
xor
pop
scas
push
inc
movs
or
mov
push
cmp
sbb
jmp
dec
sti
fdiv
in
inc
lock
nop
cmc
xor
push
push
or
dec
retf
cmc
push
sub
xchg
jb
repz
stos
lahf
(bad)
repz
mov
and
push
lea
adc
and
imul
mov
xchg
add
mov
xlat
aaa
sub
adc
jb
or
push
xchg
daa
pop
(bad)
mov
jbe
and
inc
pop
pop
aaa
rcr
fsubrp
movs
sbb
jecxz
int3
leave
stc
mov
arpl
sbb
sbb
xor
pop
xchg
cmp
mov
adc
mov
cdq
test
inc
out
stc
loope
or
in
pop
(bad)
jmp
out
into
pusha
cmps
mov
js
or
push
(bad)
lods
(bad)
xchg
xor
xor
inc
sub
jmp
daa
pop
(bad)
mov
out
push
mov
psubw
inc
push
mov
int
sub
add
cld
xchg
inc
pop
test
push
ins
js
clc
outs
add
call
nop
(bad)
xor
push
shr
adc
dec
mov
scas
jmp
xchg
ror
ffree
(bad)
sbb
and
push
stos
dec
xchg
popf
inc
retf
dec
pop
outs
sti
mov
sbb
xor
outs
dec
cmp
and
imul
ins
mov
sub
aaa
repz
pop
in
mov
mov
jo
add
repz
jbe
(bad)
jbe
mov
into
fdiv
shr
xchg
pop
call
imul
dec
cli
jecxz
inc
rcr
retf
movs
fstp
jae
xchg
push
lea
mov
sar
add
out
cmp
mov
mov
sub
jb
out
mov
jg
enter
outs
ficom
pusha
retf
cmp
stos
test
pop
sub
cld
sub
lods
or
cmp
fld
std
ficom
fbstp
fwait
jge
scas
push
arpl
adc
jl
mov
idiv
(bad)
fadd
push
dec
enter
sbb
ror
pop
bnd
pushf
xchg
jb
lods
mov
pushf
popa
xchg
xor
xchg
sti
add
test
hlt
jmp
mov
retf
pop
and
mov
cmp
(bad)
sub
sbb
ror
pop
cs
pop
ffreep
(bad)
mov
dec
ret
cdq
dec
push
add
dec
or
xchg
in
div
pop
xchg
sar
xchg
cmp
or
jo
mov
out
or
or
add
xlat
repz
out
outs
inc
dec
es
repnz
sti
sub
stos
ins
mov
and
push
div
cmps
enter
lea
movs
add
cld
leave
mov
fcom
dec
int3
ja
and
jno
test
cli
unpckhps
test
push
inc
sub
add
pop
mov
and
mov
push
outs
fistp
or
mov
sar
in
test
mov
lock
sbb
mov
iret
xor
in
fdivr
add
sub
and
outs
pop
jnp
mov
jle
popf
loopne
mov
mov
int3
mov
movs
popa
in
xor
fidiv
jne
mov
pushf
xchg
push
mov
sbb
je
xor
ins
call
cld
mov
cwde
in
neg
mov
pop
loope
cli
mov
and
sbb
mov
add
pop
fadd
cmps
add
xchg
cli
mov
jmp
stos
mov
jne
push
imul
pop
movs
test
or
adc
aas
inc
jno
or
shl
xchg
pop
sbb
pop
sahf
pusha
xchg
lahf
dec
rcl
or
lods
inc
lds
xor
sbb
jmp
jne
and
aas
and
mov
jno
xchg
scas
cmp
mov
adc
pop
and
nop
sub
cmp
xchg
aaa
scas
int3
clc
mov
push
jo
std
xor
mov
dec
sbb
test
stos
mov
push
mov
jg
mov
mov
sub
enter
mov
cli
xchg
xor
outs
jle
add
fwait
xchg
jg
out
int
movs
and
out
xchg
cwde
mov
fidivr
ins
sub
pop
jno
mov
outs
mov
in
pop
cmp
adc
rcl
cwde
cmps
call
repz
cwde
adc
and
push
movs
in
push
ss
ret
fisubr
test
and
inc
leave
mov
ja
add
stc
jnp
jge
mov
dec
shl
loop
push
call
jp
scas
inc
add
repnz
rcr
pop
out
(bad)
ins
mov
nop
movs
fcmovnb
ret
adc
push
bound
mov
push
and
pop
sbb
loopne
imul
mov
xchg
mov
ret
retf
fld
pop
xor
fstp
push
push
ins
push
xor
push
pop
imul
sti
test
stc
test
jns
cs
and
fwait
movs
imul
pop
dec
or
mov
xor
sar
loope
or
in
or
movs
mov
cmp
inc
mul
outs
sbb
xor
test
inc
jo
add
or
sahf
aas
call
sub
xor
in
push
cmps
clc
cmp
(bad)
fwait
and
fnstenv
push
stos
adc
ss
(bad)
sbb
jg
inc
ret
mov
push
push
pushf
add
xchg
mul
push
and
ins
or
(bad)
and
pushf
dec
retf
push
mov
push
sub
out
add
jbe
pop
mov
jne
or
mov
jns
fistp
int3
cli
inc
iret
cmp
inc
mov
xor
stos
fld
rcr
push
and
mov
and
(bad)
cmp
or
xchg
in
mov
push
(bad)
repnz
stc
stc
or
cmp
xor
or
cmp
scas
mov
xlat
mov
add
sub
adc
pusha
dec
inc
adc
inc
jb
shl
cmp
push
jbe
ret
outs
daa
addr16
sbb
in
jne
out
xchg
mov
in
dec
lods
fsub
xchg
add
mov
scas
pop
aaa
ins
dec
cmp
jge
lock
sbb
xchg
repz
lods
stos
test
daa
aam
adc
aas
sar
add
dec
js
inc
cmc
pop
xor
repz
retf
mov
icebp
repz
je
jno
sti
outs
(bad)
(bad)
imul
clc
enter
pop
pusha
mov
and
pop
sbb
jnp
addr16
imul
mul
mov
adc
cmp
mov
int3
rcr
or
or
mov
sahf
popa
sbb
sub
iret
scas
sbb
inc
sub
push
jbe
inc
and
(bad)
xchg
inc
sar
jle
ret
add
jnp
mov
or
adc
(bad)
add
xchg
icebp
jno
call
push
pop
ficom
xchg
and
shl
ins
in
outs
xor
cmps
add
mov
cdq
pop
jge
adc
push
sub
cli
sar
sbb
or
sbb
inc
xchg
inc
and
fidivr
sbb
push
and
inc
jmp
retf
and
mov
lock
cmps
inc
inc
popa
aam
xchg
pop
in
daa
mov
rol
push
pop
or
(bad)
aad
scas
xchg
xchg
adc
push
mov
mov
sbb
movs
or
data16
(bad)
rcl
pushf
jb
shl
cmp
sub
fdivr
movs
jne
fwait
ja
test
pop
cmp
xor
pushf
data16
mov
xor
push
push
cld
mov
rcl
ja
retf
adc
das
push
stos
add
scas
pop
bnd
(bad)
enter
mov
push
mov
cdq
rol
pop
leave
adc
rol
ds
mov
cmp
inc
add
cwde
in
adc
lods
addr16
cmp
out
in
inc
mov
pusha
aam
adc
add
push
pushf
xlat
out
and
lahf
je
sbb
adc
and
mov
mov
jns
push
test
adc
stos
inc
push
aam
xlat
jge
adc
mov
out
gs
inc
xor
sub
pusha
mov
movs
cli
or
arpl
mov
xchg
mov
mov
les
push
jmp
push
(bad)
pop
mov
dec
xchg
adc
xchg
repz
mov
lea
popf
loopne
(bad)
xchg
add
xor
iret
ins
sbb
adc
push
xchg
in
retf
out
mov
inc
sub
aas
mov
(bad)
sbb
add
inc
aas
inc
int3
into
jle
jb
scas
vpshaw
icebp
add
jecxz
xchg
adc
xchg
push
aaa
sub
mov
(bad)
jmp
push
jns
jecxz
nop
or
add
push
rcr
jmp
inc
loop
call
(bad)
loopne
mov
adc
retf
pop
mov
pop
bts
addr16
mov
fnsave
aaa
pop
mov
ins
jl
outs
iret
lods
jle
addr16
jl
push
jg
scas
jns
scas
xchg
fadd
jae
lds
retf
test
inc
dec
(bad)
movhps
(bad)
push
or
jg
jecxz
xchg
(bad)
call
std
mov
mov
and
out
lods
mov
jmp
cwde
push
push
add
xchg
arpl
mov
aad
and
sbb
mov
jmp
scas
retf
or
into
mov
int3
shld
ror
jp
inc
out
inc
shr
push
push
cld
xlat
jmp
xor
adc
mov
pop
hlt
mov
ins
xchg
icebp
aam
or
pop
sbb
push
gs
popf
xchg
test
xchg
test
mov
xchg
lock
test
sub
and
je
in
popf
iret
and
dec
pop
clc
out
push
xor
mov
std
mov
pop
mov
xchg
ret
or
(bad)
jl
scas
int3
in
push
popa
(bad)
repz
or
jne
sbb
jmp
das
imul
movs
pop
inc
adc
push
jecxz
fnsave
adc
les
mov
mov
xchg
jg
mov
test
rol
dec
pop
out
dec
jl
lea
mov
dec
in
cmp
inc
jo
fnstenv
test
test
xlat
pop
les
push
ds
sti
ja
dec
jbe
add
call
sbb
and
cmp
xor
push
jecxz
repnz
inc
gs
jae
std
jae
push
push
daa
dec
cmp
push
ret
jle
daa
or
gs
xchg
push
icebp
inc
xchg
lea
in
pop
jbe
(bad)
xor
inc
pop
jmp
push
mov
mov
add
xor
mov
pop
jp
mov
push
pusha
xor
or
mov
xchg
add
or
adc
stc
xlat
add
ins
push
stc
fstp
inc
push
(bad)
(bad)
dec
mov
push
jne
inc
xchg
out
adc
adc
mov
sbb
pop
push
xchg
push
dec
mov
mov
popf
aaa
xor
lods
lahf
ror
out
fild
inc
out
xor
cmp
shr
xchg
lods
mov
adc
jecxz
or
jbe
pop
pop
push
sbb
pop
add
psrlq
mov
js
push
cld
sbb
mov
mov
adc
jle
or
dec
pop
bound
call
mov
mov
pusha
xchg
jl
ss
mov
and
(bad)
not
add
sahf
push
popa
rcr
hlt
xor
out
out
sub
adc
jge
push
dec
sti
jmp
or
jg
xchg
fistp
mov
xchg
mov
inc
hlt
ds
push
xchg
in
dec
ss
xchg
out
loopne
loopne
cmps
lahf
xlat
sbb
jnp
icebp
dec
pusha
or
xor
nop
stos
fmul
dec
sti
enter
popa
loopne
adc
pop
les
cmps
mov
add
xchg
mov
pop
or
inc
repnz
hlt
nop
lock
fs
mov
sar
sub
sbb
inc
pop
or
in
xchg
ror
mov
jbe
mov
shl
into
hlt
mov
xor
xchg
or
mov
jmp
mov
adc
add
pop
or
movs
dec
mov
xchg
sbb
add
sbb
mov
sahf
imul
sub
sub
aam
sahf
(bad)
sbb
mov
mov
adc
iret
popa
add
add
shl
test
mov
dec
adc
xchg
lods
aas
inc
jmp
retf
add
or
loope
mov
add
inc
fisub
ror
pop
shl
mov
mov
or
sub
cdq
out
and
xor
sub
int
in
xchg
or
movs
mov
push
test
call
inc
mov
sbb
rcr
stos
ror
pop
pop
repz
jmp
in
sbb
(bad)
in
pop
out
sub
popa
ins
push
repnz
pushf
sub
cmps
jg
in
dec
sub
fldenv
push
popf
mov
int3
lds
or
dec
bound
cmc
daa
adc
ret
sub
dec
push
cwde
xor
mov
push
fmul
jle
inc
ficomp
shr
jb
xchg
xchg
out
pop
sub
outs
lods
mov
pop
jge
cli
push
iret
int3
ds
push
dec
jbe
dec
xchg
sbb
pop
ror
int3
xchg
out
fwait
jmp
or
fcompp
cmp
cmp
mov
sbb
fwait
mov
xchg
cmp
push
sti
add
popf
mov
fidiv
cmc
stc
inc
(bad)
addr16
or
mov
pop
push
arpl
push
lea
mov
sbb
stos
bound
add
int
push
cmc
aad
jmp
mov
mov
xchg
ret
loope
mov
daa
movs
shl
(bad)
push
mov
add
jbe
jl
inc
adc
adc
stc
shl
pusha
inc
jmp
fnstcw
loopne
cmc
cmp
outs
movs
push
jp
push
addr16
bnd
aas
jecxz
fs
jno
(bad)
into
or
push
int
push
sub
and
ror
inc
adc
sbb
data16
ret
cs
mov
lea
jbe
add
movs
dec
imul
add
(bad)
xchg
xchg
cli
inc
enter
jmp
fwait
lea
int3
mov
xchg
jne
sbb
inc
jae
fnstsw
aad
fwait
mov
jecxz
cwde
ins
jge
sar
into
xor
data16
sti
out
mov
mov
imul
pop
sub
adc
push
sbb
sub
pop
gs
jle
je
jns
xchg
ret
mov
push
sub
sbb
mov
cmp
and
add
data16
(bad)
mov
cwde
pop
sub
jp
jmp
arpl
mov
ins
loopne
repnz
dec
pop
mov
(bad)
mov
or
xchg
leave
bound
inc
je
(bad)
or
out
dec
aas
shr
arpl
push
mov
add
jmp
icebp
leave
adc
fnstcw
in
add
ja
bnd
mov
ficom
fistp
ja
aaa
(bad)
mov
cmc
jle
mov
mov
(bad)
popa
jne
in
push
je
ins
in
xchg
fucom
add
outs
inc
imul
shr
inc
or
ss
pop
pop
cmp
cs
jg
pusha
stos
jecxz
retf
mov
mov
mov
mov
sar
rcl
js
ror
pop
stc
daa
ret
rcl
pop
mov
sub
adc
add
repnz
lods
(bad)
stc
ret
stos
fild
shl
ror
pop
mov
fcmovb
iret
dec
in
cs
ffreep
and
into
shl
mov
and
cmp
jp
shl
scas
sbb
mov
xchg
cmc
xchg
add
std
call
add
xchg
les
and
mul
mov
push
pop
sub
mov
popa
icebp
and
sub
out
cmc
leave
inc
(bad)
js
repz
cmp
push
fstp
push
(bad)
ret
add
push
divps
sbb
mov
sbb
jl
ss
push
sahf
push
mov
inc
xor
sub
js
mov
xchg
or
xchg
sbb
push
addr16
shl
gs
adc
adc
push
ret
xchg
fistp
jl
pop
inc
dec
ins
mov
xchg
add
xor
lea
sti
mov
movs
leave
xacquire
(bad)
shl
jl
pop
arpl
mov
ss
xchg
es
mov
icebp
mov
push
mov
loopne
or
pop
mov
add
mov
fs
outs
cmp
adc
xor
mov
mov
cmp
loope
test
lahf
sbb
and
pop
xlat
fucomi
ret
mov
lock
lahf
stos
stc
xchg
jnp
repnz
fisttp
fild
call
mov
lahf
xchg
xchg
sbb
add
imul
mov
mov
iret
inc
xchg
pop
inc
xchg
mov
mov
inc
sub
into
mov
ret
xlat
pusha
or
jle
cmp
into
idiv
jp
jb
ficom
push
cmp
xor
mov
idiv
sbb
(bad)
sub
std
xor
mov
daa
adc
jnp
outs
imul
pop
pop
das
mov
fstp
(bad)
xor
fs
inc
leave
adc
push
loope
fucom
mov
mov
sub
test
cmps
push
cld
or
adc
and
mov
add
and
(bad)
push
ds
jmp
cwde
mov
mov
stc
retf
in
mov
mov
test
mov
arpl
add
dec
out
lea
jo
mov
ret
jg
test
test
shl
mov
or
shl
ja
push
lock
mov
sbb
and
test
imul
xlat
push
sbb
sbb
jo
inc
(bad)
hlt
and
jmp
sub
nop
xchg
mov
dec
mov
je
sbb
push
ss
sbb
out
std
or
icebp
das
xchg
sub
jo
sub
cmps
scas
add
ja
xchg
callw
lods
pop
retf
pop
data16
push
aam
jp
xlat
adc
hlt
jae
fist
or
inc
movq
lahf
adc
(bad)
push
lods
pop
pop
jae
fdivr
or
add
adc
mov
add
pop
cs
(bad)
jne
jo
dec
test
(bad)
test
int
adc
aas
push
pop
dec
pop
xchg
cmps
push
dec
xchg
mov
pusha
adc
mul
jne
movs
test
leave
test
retf
psadbw
mov
mov
test
mov
lds
pop
jmp
sub
sar
sbb
aam
mov
and
ds
je
push
xchg
mul
fcom
xchg
retf
cmp
xchg
xlat
sub
add
push
xchg
adc
int3
add
add
fcomp
addr16
lods
fld
in
sub
cli
adc
mov
imul
jecxz
shl
jnp
aas
dec
(bad)
stc
call
call
js
push
cmp
push
mov
jecxz
loop
int
mov
adc
hlt
jle
in
mov
fwait
xchg
xchg
hlt
pop
mov
lock
xor
mov
cli
iret
add
adc
mul
mov
out
cwde
dec
retf
mov
push
push
repnz
jno
or
addr16
mov
scas
mov
ds
jl
xchg
mov
sahf
cs
movs
ja
(bad)
pop
cmp
stos
stos
or
movs
(bad)
jb
push
add
inc
xchg
xor
add
jb
or
cmps
imul
add
jmp
pop
nop
imul
fcomp
mov
cmp
retf
imul
mov
inc
jmp
push
into
push
scas
sub
adc
in
push
mov
cmp
movs
rol
jmp
sub
pop
xor
cmc
xor
jnp
sub
cmovs
iret
pop
pop
dec
mov
cs
lods
sbb
cmp
xor
push
sti
repnz
and
arpl
gs
and
jno
imul
and
xchg
arpl
test
fisub
add
call
(bad)
nop
scas
outs
gs
and
stos
dec
sub
mov
pop
and
sub
mov
mov
mov
xchg
pop
(bad)
jne
mov
xchg
jl
repnz
xlat
test
not
jecxz
jmp
js
(bad)
fdiv
out
jne
mov
cmps
scas
jge
mov
pop
hlt
add
add
(bad)
cmp
cdq
daa
in
stc
sahf
xor
adc
sbb
aad
mov
mov
sahf
ror
arpl
inc
inc
out
and
push
mov
inc
pop
mov
aaa
pop
cmp
fs
in
xor
inc
repnz
adc
ds
jns
cmp
scas
rcr
lea
and
push
nop
aaa
cwde
sub
or
sub
mov
dec
ficom
mov
outs
dec
cmps
fnstsw
and
xchg
cmc
jg
add
frstor
test
mov
hlt
mov
pop
lods
loopne
cwde
neg
pop
fcom
inc
sbb
jb
out
add
and
dec
or
mov
cmp
mov
xor
clc
push
pop
push
pop
inc
xchg
popa
mov
int3
enter
hlt
dec
mov
call
inc
cs
in
jns
std
stc
xchg
enter
mov
in
lods
xchg
imul
or
imul
or
or
cld
and
aaa
shr
and
cmp
(bad)
out
mov
cmp
add
and
pop
and
pop
rol
mov
int3
inc
inc
push
or
sbb
xchg
mov
pop
clc
fmul
(bad)
xor
int3
inc
inc
inc
push
cmp
mov
rol
and
cs
icebp
in
fsub
sbb
mov
mov
adc
jne
rol
rol
mov
imul
xor
ds
inc
xor
jo
loopne
and
xchg
sub
call
dec
int
rcl
in
aas
jg
and
outs
or
cmp
retf
clc
icebp
push
mov
jmp
inc
pusha
inc
pop
jnp
cli
in
push
xchg
mov
pop
adc
aad
mov
pop
je
add
or
mov
or
mov
mov
push
xchg
or
jno
pop
mov
js
mov
push
inc
aam
popa
push
addr16
mov
pop
cmps
xchg
les
sub
add
pop
inc
lds
xchg
push
jae
or
fs
sbb
int3
in
sub
ret
cmp
add
int
(bad)
add
jne
jne
les
(bad)
retf
(bad)
cld
jl
je
adc
jmp
pusha
and
add
cmp
adc
mov
ja
xor
mov
sbb
add
cwde
inc
jb
popa
addr16
cmp
in
icebp
pop
push
sub
in
mov
sbb
mov
je
add
jl
repz
and
add
imul
test
dec
adc
inc
ja
sbb
hlt
push
and
pop
aas
pop
pop
xchg
in
xchg
pop
jge
pop
aas
cmp
mov
mov
hlt
pop
cld
or
gs
sub
jo
icebp
pop
fdiv
fisubr
nop
outs
jmp
sbb
inc
call
push
jl
sbb
fbld
inc
fwait
jb
or
lea
mov
call
idiv
xor
aaa
test
cmps
push
scas
rol
jb
jle
shl
push
jbe
or
adc
dec
mov
in
(bad)
leave
push
inc
sub
jg
xor
out
test
inc
in
xor
jo
or
in
xlat
mov
adc
arpl
in
sub
lods
jnp
mov
loope
les
pusha
int
int
add
jl
bound
loope
jno
aas
mov
ret
repnz
xchg
mov
jp
jne
pop
add
arpl
xchg
sti
cs
mov
xchg
ins
inc
retf
stos
ds
jae
pop
xchg
mov
arpl
xlat
xor
pop
dec
ins
cdq
cli
mov
sub
(bad)
jle
out
pop
adc
dec
push
lods
(bad)
ret
imul
xchg
fadd
lods
in
stc
xor
das
sbb
mov
sub
xlat
xchg
stos
hlt
cmp
rcl
in
xchg
adc
dec
sbb
add
in
push
push
adc
fsubrp
jns
lahf
sub
xor
(bad)
mov
xchg
pop
add
fcmovnu
call
adc
sub
mov
mov
push
stos
sub
push
jmp
sub
fst
out
mov
push
cmp
mov
repz
jecxz
repz
dec
mov
(bad)
ins
pop
sub
cld
mov
sub
sbb
mov
fadd
popa
and
ins
jnp
int3
enter
retf
std
addr16
push
xchg
jge
xchg
inc
data16
sbb
and
cwde
mov
rol
sub
jp
xor
cmp
jno
pop
mov
je
and
lock
jmp
push
js
mov
ins
daa
dec
add
xor
and
stc
adc
mov
or
call
scas
pop
inc
(bad)
bound
lock
sbb
(bad)
adc
or
std
clc
mov
nop
xchg
jbe
aad
mov
pop
push
xor
xlat
(bad)
jmp
jbe
enter
retf
clc
pop
xchg
xchg
and
jl
test
scas
mov
int3
movnti
arpl
bound
gs
xchg
and
loope
mov
adc
cmp
(bad)
push
movs
out
push
jbe
sub
or
shl
sub
add
outs
ret
ret
cld
out
jae
iret
sub
pusha
xor
mov
pop
fdiv
shl
mov
cld
dec
xchg
lods
push
or
rol
movs
push
xchg
in
mov
xlat
and
out
or
cli
xchg
ret
fild
not
ins
(bad)
rcl
bound
cld
dec
imul
jbe
dec
mov
push
scas
xchg
repnz
mov
arpl
test
cmps
xchg
and
inc
dec
lods
mov
aas
loope
mov
and
pushf
mov
call
fistp
mov
int
jb
lock
fdivr
sti
ins
gs
pop
dec
mov
lea
mov
sub
into
fdiv
xlat
mov
xchg
inc
push
imul
test
lea
sti
xchg
(bad)
in
rcr
popa
mov
daa
call
arpl
test
rcl
xchg
xchg
and
sub
sub
aad
lahf
pop
ds
std
push
(bad)
pop
iret
push
hlt
cmp
or
ins
fisubr
test
fld
ins
scas
dec
and
or
mov
dec
or
inc
(bad)
pop
sub
test
std
xor
xor
sub
mov
sahf
xlat
sbb
loope
mov
out
or
(bad)
arpl
aad
out
adc
gs
or
mov
push
lds
mov
hlt
mov
ror
dec
dec
push
movs
xor
test
cs
icebp
in
movs
jb
mov
sti
xchg
pop
xchg
sub
fbstp
mov
cmp
cmc
data16
fidiv
or
daa
mov
xchg
adc
popa
or
ss
sub
les
mov
(bad)
and
clc
test
xchg
aas
stc
or
bound
xchg
data16
dec
mov
loope
les
cmps
lods
sbb
enter
outs
sbb
imul
mov
pop
js
aaa
jl
stos
or
cli
pusha
cdq
and
inc
xchg
addr16
mov
inc
pop
fdivr
out
aaa
sti
sbb
or
popf
out
xchg
add
ss
fnstenv
add
(bad)
sbb
test
in
mov
daa
jns
mov
mov
ret
dec
push
sbb
xchg
movs
adc
sar
jg
xchg
ss
cmp
sbb
in
xor
addr16
or
sbb
jnp
mov
call
jle
pop
(bad)
mov
aad
and
clc
mov
ja
lahf
data16
aad
push
cdq
mov
bound
xchg
and
or
push
sar
lods
xor
and
popa
retf
add
call
dec
fild
xchg
dec
jae
shl
xchg
stc
daa
cs
jne
xor
xor
cwde
mov
adc
sub
mov
sahf
aad
sar
jno
pop
int3
les
repz
inc
jo
loope
pusha
shl
xor
xor
jns
cmps
js
test
out
call
push
sbb
cmp
jl
mov
add
adc
in
mov
push
pop
push
aam
add
movs
test
or
jmp
jg
or
sbb
popf
test
or
cmps
paddsw
call
xchg
xor
jl
xor
into
scas
sub
cmp
add
cmp
rol
or
cmp
mov
and
add
xchg
loope
shr
ja
aaa
bound
clc
popa
jbe
jp
call
ficom
jle
mov
sbb
popa
das
adc
inc
xchg
imul
pop
jmp
pop
adc
jl
jae
push
pop
aaa
sbb
jl
jae
stos
mov
adc
mov
dec
rcl
add
in
in
enter
xchg
cwde
adc
inc
stos
sbb
add
in
pop
cdq
xchg
sub
shr
jae
cs
and
push
popa
adc
add
add
push
ds
mov
pop
xor
push
sub
cli
pop
jae
fcom
add
ror
push
nop
adc
addr16
jle
cwde
xchg
int
frstor
pop
fs
repnz
dec
das
mov
aas
pop
outs
loop
sub
or
and
cmp
or
rol
mov
sub
rol
mov
scas
xchg
pop
pop
lds
test
add
push
dec
test
icebp
lock
retf
aaa
push
jp
pop
scas
pop
push
inc
scas
jmp
(bad)
pop
movs
ins
mov
xchg
sbb
into
mov
pop
shr
sbb
lea
and
xor
mov
add
stos
mov
jge
cld
add
mov
leave
jg
mov
cmps
jmp
mov
cwde
xor
not
loop
and
imul
test
sbb
loop
sbb
mov
dec
jmp
test
and
push
inc
xor
ins
cmp
mov
aas
mov
shl
mov
mov
and
or
pop
xchg
or
mov
out
scas
fsub
inc
fnsave
sar
repz
adc
ss
jo
jl
inc
dec
ret
and
xchg
call
das
or
xchg
mov
or
inc
lds
imul
push
cli
inc
push
stos
je
fisub
xlat
jmp
sbb
mov
test
ss
push
(bad)
and
nop
cli
cmp
or
(bad)
xchg
jp
dec
xchg
sub
test
xchg
mov
cmps
adc
xchg
push
test
cmp
push
sar
cs
fild
xchg
jae
cmp
add
popw
jle
push
jnp
mov
sub
retf
mov
jmp
xchg
loope
mov
mov
imul
int3
mov
jno
aad
mov
pop
push
(bad)
fldenv
inc
push
push
or
xor
xchg
dec
out
aad
loop
sahf
stos
dec
(bad)
xor
push
pop
jb
inc
int
daa
inc
mov
nop
ror
pushw
sub
iret
inc
jg
in
inc
pop
sahf
ja
call
es
xor
das
mov
dec
fiadd
iret
add
retf
sbb
add
mov
jbe
push
and
dec
popa
fld
add
mov
dec
jnp
addr16
fbld
push
test
sahf
xlat
and
inc
in
cmps
imul
inc
les
andps
push
(bad)
xchg
ret
rol
sub
icebp
loopne
cmps
cs
mov
push
jecxz
xchg
mov
adc
mov
lods
dec
inc
nop
push
xor
rcl
xor
pop
mov
mov
(bad)
imul
js
outs
mov
sbb
mov
mov
and
cmps
dec
mov
call
sbb
mov
dec
inc
retf
dec
(bad)
jl
icebp
js
mov
je
mov
xchg
push
fcom
out
enter
jmp
sub
enter
mov
cmp
in
data16
dec
sbb
(bad)
cmc
cmps
in
and
jp
mov
mov
neg
mov
jg
jp
push
cld
and
adc
aam
pop
push
xchg
push
rol
lahf
xchg
pop
arpl
popa
mov
mov
cmp
sar
or
test
bound
das
neg
(bad)
add
ins
jle
push
arpl
lock
scas
jg
aas
ret
mov
pop
mov
sti
call
mov
fiadd
jmp
xor
call
into
jle
push
inc
retf
jo
push
xchg
jae
cmp
shl
push
mov
mov
or
push
or
xlat
repz
jmp
mov
scas
dec
pusha
fldcw
jno
and
jecxz
ja
es
sub
hlt
nop
iret
lods
sahf
adc
(bad)
cmp
mov
sbb
movs
mov
mov
aam
in
mov
inc
push
dec
das
jle
not
(bad)
fstp
jae
pop
cmp
or
bound
cmp
cmp
xchg
inc
sub
sub
scas
lds
jne
inc
gs
pop
addr16
mov
inc
dec
out
sbb
jns
mov
rol
mov
fs
(bad)
out
adc
gs
in
test
rcr
push
mov
mov
hlt
sbb
jnp
xor
loopne
addr16
inc
lods
loope
add
sbb
notrack
or
adc
jnp
dec
data16
in
dec
xor
cmp
cdq
and
dec
cwde
movs
rcl
repnz
(bad)
mov
and
or
pop
mov
cmp
or
dec
in
sar
(bad)
cld
sbb
cs
retf
mov
pop
mov
std
cmp
div
push
out
test
bound
jge
cs
loope
push
stc
jnp
adc
lahf
ja
mov
fidivr
cmps
mov
mov
mov
imul
das
fwait
or
dec
ins
js
mov
mov
pushf
cs
xchg
movs
and
mov
pop
pop
cdq
or
xor
add
or
dec
sti
in
rcr
push
stos
shl
mov
jle
fdivr
mov
add
adc
jge
lds
inc
dec
ret
aas
add
daa
scas
sti
mov
aam
mov
pop
xchg
into
aad
imul
and
ret
lea
shl
mov
imul
fdivr
pop
cmp
xchg
ja
mov
pop
popa
das
shl
stos
fisttp
test
or
sbb
push
mov
inc
push
stos
xor
jmp
sub
push
or
xchg
dec
dec
sbb
test
in
mov
inc
sbb
xor
cmps
sub
sub
nop
pushf
add
sub
xchg
add
sbb
dec
fsub
int3
lds
lahf
mov
(bad)
xchg
or
popa
fdiv
xchg
push
adc
or
push
das
outs
sub
jb
cmps
inc
icebp
mov
cmp
sub
scas
mov
cmp
scas
loopne
aas
sub
jns
jbe
add
mov
test
fwait
in
andps
cld
aad
nop
and
xor
mov
sub
sub
cld
adc
mov
lea
out
sbb
jmp
data16
mov
(bad)
(bad)
popf
push
pop
jnp
push
out
adc
or
aam
jge
mov
aas
ret
cmp
call
bswap
push
mov
push
mov
cwde
dec
fist
popf
dec
push
adc
push
mov
pop
sbb
repnz
cmp
js
arpl
cmps
rcr
aaa
cmp
retf
lea
add
mov
and
clc
jbe
cmps
mov
(bad)
pop
sub
push
pop
cmp
or
rcl
mov
cmp
jne
enter
stos
inc
or
aaa
aad
sar
pop
ss
xchg
dec
inc
fs
pop
bound
nop
shl
cs
dec
(bad)
shr
jo
jo
mov
add
popf
cmps
dec
retf
mov
shl
sbb
sub
cmp
test
add
mov
adc
mov
jbe
sub
pop
mov
mov
cmps
cmp
dec
cmc
icebp
daa
sbb
mov
ror
xchg
adc
test
retf
test
xor
sbb
push
gs
sub
or
xchg
xchg
or
push
aad
or
test
pop
push
ins
test
ficomp
add
add
and
das
xlat
dec
pusha
dec
push
sbb
push
adc
outs
data16
mov
mov
pop
cmp
(bad)
cmp
mov
xlat
repz
repz
push
int3
retf
retf
inc
xlat
cs
sbb
dec
pop
movs
sub
xchg
jmp
mov
jno
sub
mov
js
scas
ficom
je
mov
xor
push
rcl
add
pop
xor
fwait
mov
nop
fwait
mov
xchg
push
jecxz
push
sub
push
push
sub
ret
(bad)
frstor
call
sbb
popa
(bad)
jns
nop
inc
adc
sub
jg
cmp
sbb
mov
adc
mov
and
or
or
jne
out
jmp
xor
scas
xchg
ins
or
pop
into
ins
adc
loope
scas
js
inc
cmp
pop
in
xchg
ds
mov
std
js
inc
cmp
add
out
cmp
rcl
add
daa
inc
dec
ds
imul
cmps
(bad)
jnp
popa
fisub
imul
cli
rol
stos
xchg
push
sahf
(bad)
or
mov
enter
(bad)
mov
(bad)
inc
push
xor
arpl
movs
aas
cmps
lds
dec
mov
mov
add
xchg
icebp
popf
xor
mov
or
jg
jge
mov
mov
ins
stos
add
xchg
adc
or
jns
jns
and
mov
adc
push
inc
outs
loope
inc
or
xchg
scas
sbb
(bad)
pop
out
mov
cli
loop
cmp
push
imul
jp
pop
push
loopne
add
ss
dec
pop
push
fstp
mov
loope
movs
cmps
popa
and
mov
lock
js
into
sbb
mov
add
popa
adc
jg
mov
mov
xchg
jb
icebp
cld
cmp
inc
stos
inc
in
call
jns
sub
out
pop
pop
sub
ins
push
(bad)
nop
inc
in
mov
fsubrp
jp
cwde
push
out
das
xor
in
xor
ins
call
add
sbb
xchg
mov
sbb
push
push
mov
mov
cmp
int3
scas
xchg
sti
(bad)
mov
pop
adc
sub
outs
cmps
shr
cmp
mov
por
mov
ins
or
es
sbb
sub
adc
hlt
pushf
mov
mov
mov
in
dec
cli
adc
cmp
sbb
pop
xor
gs
fisub
or
xchg
bound
add
jae
jmp
jns
ins
xor
sub
jg
push
outs
pop
les
push
xchg
mov
not
daa
jecxz
adc
adc
out
cli
sub
pop
les
daa
hlt
lds
xchg
push
dec
dec
jae
sbb
cmp
nop
and
test
scas
jmp
in
stos
test
cmp
xchg
fstp
rcl
mov
icebp
scas
popa
clc
mov
ficomp
push
int3
(bad)
xchg
mov
lods
popa
push
fld
add
mov
or
xor
jp
pop
jmp
add
test
adc
cmps
add
inc
xchg
cmp
fs
comiss
fistp
mov
mov
mov
dec
lock
fdivr
xor
and
mov
cmp
ficom
adc
or
jp
mov
(bad)
xchg
aam
xchg
loope
fs
dec
dec
stc
ror
ret
(bad)
jb
mov
sub
aam
jne
xchg
les
add
and
adc
cld
scas
popa
inc
call
inc
mov
mov
fldenv
push
retf
pop
xor
cmp
stos
cmp
lahf
rol
push
outs
jg
jnp
ftst
sbb
ret
mov
dec
stos
jbe
push
lock
lahf
retf
addr16
xor
jmp
mov
or
push
mov
aam
sub
adc
cmp
retf
inc
rcr
mov
push
int
mov
out
test
cld
cmps
xor
out
cmp
sub
xor
push
movs
(bad)
lahf
or
pusha
ins
loopne
mov
sub
xor
loope
inc
jl
mov
mov
int3
jns
push
inc
push
aas
push
jnp
add
add
lahf
jl
in
popf
mov
pop
xchg
fisttp
outs
pop
pop
mov
ret
inc
imul
cmp
sub
xlat
shr
mov
add
ret
sbb
(bad)
imul
add
add
mov
mov
push
xor
add
xor
fldenv
mov
repnz
jne
pop
(bad)
adc
sub
mov
mov
scas
xor
add
lock
icebp
fwait
inc
rcl
mov
inc
fiadd
xor
fist
inc
mov
inc
mov
mov
jae
(bad)
scas
repnz
xor
push
cmp
aas
lods
push
mov
sub
std
push
mov
pop
jb
adc
jo
push
sub
mov
stos
cli
inc
jae
pop
cli
push
pusha
jne
sti
and
dec
cmp
(bad)
in
push
adc
inc
inc
mov
adc
es
adc
rsqrtps
leave
lds
cmp
sbb
add
mov
push
loopne
xchg
mov
shr
ja
ins
popa
test
mov
dec
(bad)
jg
push
js
test
adc
jp
sar
adc
out
jp
push
aam
pop
stc
ins
lock
daa
cld
mov
test
retf
fistp
adc
mov
xchg
test
sub
cmp
int
mov
mov
popf
pop
gs
dec
cmp
fidivr
xchg
pop
pop
retf
sbb
shr
push
push
(bad)
sbb
out
rcl
adc
jns
mov
add
movs
add
fimul
sbb
xlat
fisttp
sbb
sub
rcr
mov
sub
sub
sahf
shl
and
mov
adc
int
in
(bad)
shl
out
push
cmp
iret
push
hlt
inc
lahf
mov
(bad)
mov
pop
sbb
add
cmps
fnstenv
or
shl
xor
jecxz
(bad)
pop
sbb
sub
sbb
sbb
repz
daa
in
pop
sub
cs
xor
mov
push
pop
jo
mov
and
pop
inc
movs
sub
cmc
add
or
je
les
sub
sub
inc
fwait
cld
xor
adc
mov
cld
dec
loope
xchg
add
pop
push
mov
inc
idiv
fdiv
ffree
ficom
sub
cmp
test
jns
cmp
jecxz
mov
mov
push
cmp
jg
dec
xchg
push
cwde
mov
out
shl
ret
inc
sar
jnp
and
add
cmp
adc
mov
push
pop
xchg
ins
xchg
push
and
pop
(bad)
enter
jp
push
test
into
out
push
cmps
add
jne
inc
dec
pop
mov
adc
push
mov
jmp
retf
div
xor
dec
(bad)
adc
in
add
repnz
xor
js
jo
jecxz
aam
cmp
jmp
inc
jg
loop
dec
movs
pop
push
xchg
dec
(bad)
call
xchg
(bad)
js
push
push
call
aad
cli
xchg
ror
das
ds
mov
or
stc
pop
je
or
mov
aam
jp
push
les
repnz
pop
mov
jecxz
in
in
adc
mov
sbb
imul
add
push
repz
stos
dec
add
xor
fnsave
push
sbb
mov
push
sbb
jecxz
inc
inc
inc
pop
adc
ins
dec
sbb
push
jo
movs
xchg
mov
xchg
arpl
jb
in
imul
adc
inc
jmp
jmp
stc
mov
xor
mov
pop
arpl
fld
mov
or
iret
repnz
push
inc
stc
repnz
jb
dec
push
inc
out
adc
int
imul
mov
cmp
mov
pop
dec
xchg
sbb
jmp
test
pop
inc
pop
cmp
icebp
mov
lock
dec
pop
cdq
dec
rcr
les
adc
std
scas
test
add
loopne
fidivr
imul
jbe
stos
mov
call
aas
add
adc
xchg
adc
int
loop
imul
xor
test
mov
inc
leave
sahf
movs
fs
lods
cmp
add
enter
pop
mov
fwait
sbb
or
mov
mov
ffreep
add
xor
cmp
sub
retf
(bad)
sbb
lds
pusha
js
shr
pop
cmp
sbb
mov
lods
(bad)
das
mov
xchg
xor
or
shr
mov
adc
adc
jp
or
imul
test
cli
sti
xchg
jb
sahf
or
hlt
test
ins
and
fimul
mov
idiv
sub
and
stos
or
js
scas
sahf
repz
mov
add
idiv
lahf
push
nop
mov
nop
inc
sti
mov
sbb
sbb
icebp
mov
mov
mov
ds
sbb
lods
lods
sti
into
jp
or
fucom
pop
mov
pop
mov
sub
add
mov
loop
cmc
jg
je
mov
or
in
fstp
adc
call
retf
in
frstor
sbb
pop
or
je
fnstcw
inc
mov
mov
in
punpckhwd
(bad)
jmp
mov
bound
data16
dec
pop
inc
(bad)
popf
ins
jle
test
dec
test
cmps
pushf
mov
(bad)
test
mov
push
xor
adc
pop
push
xchg
mov
jg
stos
es
mov
jle
pop
xor
loop
daa
add
daa
pop
scas
push
fucomi
aaa
es
idiv
call
xor
repz
xlat
repz
std
icebp
mov
xchg
mov
call
mov
aad
out
add
mov
out
cmp
xor
cld
ret
das
xor
cdq
lods
fnstenv
push
jecxz
xchg
retf
hlt
adc
xchg
jno
in
(bad)
gs
cld
inc
adc
out
pop
push
push
popa
xchg
mov
dec
jmp
fidiv
pushf
out
adc
sbb
ret
jno
jmp
and
test
(bad)
in
addr16
xchg
push
and
das
add
mov
add
jmp
and
inc
int3
imul
cmp
push
fwait
lock
xchg
cmp
mov
sbb
int3
clc
aaa
inc
mov
sbb
mov
jp
mov
xchg
imul
xchg
adc
jae
xor
retf
xor
dec
out
cmp
mov
jmp
mov
pop
add
div
test
into
mov
jns
aad
scas
(bad)
gs
fwait
mov
scas
stos
push
add
mov
sar
mov
ret
xchg
sub
stos
fdivr
scas
test
in
and
jbe
shl
xor
push
and
sar
push
jns
jmp
popa
sbb
outs
inc
sbb
add
fist
dec
push
out
mov
mov
sbb
push
jecxz
add
xor
lods
lock
outs
das
push
lods
bound
dec
cmp
adc
cmp
push
loopne
sbb
adc
mov
adc
fisttp
jp
arpl
sub
(bad)
cmps
mov
arpl
mov
pop
das
xchg
test
shr
inc
add
daa
xor
dec
call
daa
dec
and
stos
add
scas
or
xchg
bound
inc
xchg
and
es
sbb
fld
cwde
xchg
pop
stos
or
call
in
jmp
mov
aad
cmp
imul
mov
retf
scas
aad
xor
push
jp
aas
es
push
cmps
push
jae
pushf
int
pop
jmp
addr16
int3
xchg
lock
pop
lahf
cmp
xor
js
push
jnp
in
iret
add
out
out
mov
mov
sub
mov
and
cmp
scas
lock
(bad)
mov
inc
adc
cmps
iret
les
mov
or
dec
ret
in
inc
jno
xchg
push
shl
dec
xor
ficom
int3
adc
nop
test
or
sub
outs
push
pop
es
jle
rol
les
je
mov
add
cmp
loop
jp
sahf
imul
dec
push
fwait
push
mov
into
push
jmp
or
retfw
or
int3
xchg
ins
inc
jbe
push
in
int3
xor
xor
fisubr
stos
mov
mov
enter
enter
jb
cli
sar
jl
add
xor
inc
loop
mov
mov
cdq
outs
aam
dec
addr16
jge
push
dec
fld
cld
mov
adc
in
jg
pop
repnz
push
jb
mov
fcom
lods
ret
mov
sub
fdiv
cmp
xor
push
and
mov
pop
xchg
mov
inc
mov
cmp
dec
rcr
aam
outs
sbb
scas
data16
and
sub
test
add
cmp
int
jl
xchg
jns
push
xor
xchg
lahf
jmp
xchg
into
adc
enter
test
sub
cmp
in
inc
stos
mov
ins
push
out
loopne
jno
or
iret
sub
fild
rol
out
mov
xor
out
jb
inc
push
sub
retf
pop
adc
xchg
inc
pop
xchg
pop
lea
imul
aas
xor
xchg
fiadd
hlt
fst
gs
loop
cmps
mov
cmc
adc
mov
loope
xchg
leave
test
fistp
sub
push
outs
pop
or
into
pop
das
add
inc
cmp
bound
daa
test
outs
add
jnp
imul
pop
lahf
jl
pop
cld
jle
jbe
inc
sar
mov
ror
fimul
xchg
inc
inc
movs
fld
cmp
or
sub
es
mov
cmps
inc
pop
adc
pop
mov
dec
mov
mov
xchg
aas
fwait
cwde
imul
ret
lock
out
stc
(bad)
(bad)
pop
sbb
test
pushf
pop
cwde
jge
fwait
mov
es
or
dec
ja
dec
int3
jmp
cmp
or
xchg
fwait
nop
pop
rol
call
pop
cmp
dec
out
inc
neg
test
test
xchg
in
push
pop
mov
push
jmp
dec
jmp
aad
push
(bad)
xlat
je
inc
sub
pop
jge
ins
dec
aad
cmps
ror
movs
fisubr
std
or
mov
sbb
(bad)
movs
sub
jg
cmp
cdq
fs
sub
or
pop
ret
fdivr
arpl
ror
pop
lahf
leave
fsub
iret
ret
adc
inc
sub
xchg
call
xchg
popa
dec
dec
les
push
push
mov
(bad)
scas
inc
lahf
pop
xchg
ret
pop
cmp
cmp
sub
xchg
dec
or
sub
mov
sub
pop
add
int3
fdiv
mov
inc
push
mov
addr16
mov
mov
and
imul
mov
mov
or
inc
adc
add
fbstp
push
mov
div
adc
jp
out
es
push
(bad)
jno
adc
xchg
pop
or
sbb
mov
int
mov
mov
lea
and
xchg
sbb
and
pushf
mov
sbb
into
les
jbe
icebp
add
ds
(bad)
push
rcr
sti
fnstsw
(bad)
ficomp
or
xor
pop
mov
and
(bad)
scas
pop
push
xor
and
mov
std
or
shl
outs
fimul
loope
call
dec
cmp
popw
sbb
icebp
mov
sub
fs
mov
mov
mov
mov
mov
add
test
or
jecxz
int3
pop
xchg
daa
in
xchg
pop
jb
cmp
in
adc
je
mov
sbb
lds
inc
std
loopne
sub
les
psrlw
popf
int
fdivr
sbb
(bad)
push
icebp
push
gs
mov
and
push
jnp
push
out
sar
sahf
es
push
or
in
dec
xor
mov
mov
cmp
xchg
mov
mov
das
test
sbb
sahf
rcr
xor
icebp
jp
jnp
mov
enter
aad
out
cmp
stc
ins
shl
ds
add
mov
pop
jecxz
and
movs
fist
fsubr
adc
jne
ret
int3
mov
mov
push
pop
repz
cmp
ficom
in
les
in
repnz
je
outs
sbb
mov
mov
fcom
out
lahf
sbb
or
hlt
sub
push
sahf
cld
sbb
push
shl
std
ror
add
adc
pop
mov
addr16
cwde
or
push
movs
mov
add
lods
push
leave
adc
mov
push
pop
or
add
mov
jns
xchg
out
pop
sub
mov
cmp
push
int
pop
js
inc
mov
jmp
jns
push
push
fs
adc
add
outs
cmp
xor
jmp
push
adc
push
add
ins
bound
in
push
pusha
mov
jmp
xor
das
fdivr
add
gs
in
imul
out
in
ja
pop
lods
les
push
pop
fstp
lods
jmp
sub
mov
loop
hlt
fld
xchg
mov
jle
pop
int
dec
mov
mov
and
inc
pop
sub
sub
mov
mov
jb
inc
hlt
mov
sub
mov
xchg
push
inc
(bad)
jle
aad
and
nop
cmp
mov
push
dec
in
fdiv
sti
out
inc
pop
jecxz
sahf
mov
push
dec
pop
add
in
aas
std
jnp
mov
adc
ja
vdivpd
jnp
jae
out
cwde
dec
dec
test
ins
rol
mov
jmp
lea
push
cmp
and
xchg
xchg
inc
xchg
jmp
pop
jp
xchg
dec
out
and
mov
sbb
imul
sar
sub
lods
adc
fdivr
(bad)
test
call
scas
xor
clc
lds
cpuid
lock
sbb
test
cmp
push
(bad)
jg
stos
mov
mov
mov
stc
ss
xchg
repnz
add
push
in
mov
adc
sbb
fdiv
cmp
and
pop
test
pop
jno
loop
jle
ret
scas
movs
retf
test
adc
in
leave
push
and
mov
add
push
jg
mov
dec
dec
loopne
xchg
test
fwait
jp
mov
scas
int3
push
fcmovbe
cmp
into
pop
iret
pop
jecxz
mov
push
std
lahf
aam
or
and
or
sub
mov
dec
jmp
into
adc
mov
xchg
cmp
inc
add
cmp
cmp
sbb
stos
addr16
(bad)
daa
ins
sbb
adc
pop
stc
jmp
and
(bad)
out
pop
and
rcl
jne
xchg
rcr
ins
adc
pop
inc
dec
mov
jne
mov
jno
cld
xchg
iret
aad
or
mov
sub
mov
in
mov
sub
lahf
dec
mov
cwde
addr16
inc
ss
mov
call
mov
push
lods
shr
nop
jo
adc
jle
nop
sbb
ss
mov
pavgw
ret
sub
mov
dec
out
out
push
(bad)
pop
js
in
aas
fisttp
pop
jno
mov
mov
push
jb
dec
and
lds
pop
adc
inc
lock
sbb
push
sub
out
cmp
cdq
addr16
sahf
add
rcr
pop
inc
into
repnz
mov
int
xchg
jmp
xchg
pop
adc
in
push
stc
mov
cvtps2pd
adc
(bad)
lahf
imul
getsec
xor
in
jle
(bad)
out
push
inc
jg
pop
(bad)
pop
daa
lods
stc
dec
neg
xchg
mov
dec
and
mov
xlat
mov
emms
mov
out
in
inc
(bad)
out
pop
jmp
cmps
test
cmp
popf
cs
js
cmp
or
jecxz
dec
inc
(bad)
xor
mul
arpl
arpl
data16
es
shl
xlat
ja
push
pop
sbb
jmp
jb
pushf
pop
mov
test
je
je
xor
xchg
pop
arpl
pop
dec
xrelease
ss
sbb
pop
movs
sbb
xlat
popf
adc
ins
sbb
mov
pop
add
adc
pop
sbb
push
mov
ds
push
cmp
sub
add
xchg
call
add
sahf
pop
push
push
pop
mov
jae
inc
cdq
dec
inc
fimul
rol
push
ror
push
es
pop
shl
cmps
pop
repz
xor
mov
(bad)
jb
loopne
dec
pop
dec
sub
dec
das
pop
push
mov
fild
bound
aaa
and
fwait
(bad)
adc
loop
dec
dec
mov
mov
inc
dec
shr
push
mov
xchg
mov
push
pop
pop
dec
cmp
ins
mov
or
js
cli
lock
fsub
fisubr
stc
outs
cmps
sbb
cmp
jns
sub
jbe
(bad)
dec
jb
lods
mov
fistp
neg
xor
sub
pop
jnp
mov
out
xchg
mov
inc
loope
mov
and
pop
sar
mov
jne
mov
sbb
xor
int3
sbb
les
mov
and
inc
and
push
clc
cmp
push
fucomip
pushf
xor
fwait
sbb
out
sbb
sbb
cmp
inc
leave
stc
sbb
iret
push
fnstenv
cmp
mov
pop
retf
mov
pop
fstp
sub
add
gs
xchg
sar
les
test
movs
pusha
aad
aam
mov
mov
int3
jb
or
imul
mov
mov
popa
ins
les
out
sub
test
call
add
lds
(bad)
pop
sub
adc
sub
inc
hlt
clc
leave
xchg
mov
cs
retf
mov
or
lods
and
sbb
jbe
xor
inc
into
sub
retf
push
mov
jne
popf
adc
addr16
imul
and
je
and
jmp
outs
jo
jp
lods
test
or
cmp
jle
push
hlt
adc
test
in
xchg
ins
test
popa
adc
ret
lods
push
inc
pop
(bad)
mov
sar
in
sbb
cmp
push
jmp
and
(bad)
add
cmc
sub
fdivr
xor
sbb
pushf
mov
test
dec
repz
mov
repz
or
mov
mov
and
pop
mov
mov
and
scas
lahf
rcl
iret
es
mov
sbb
stc
push
call
xor
outs
push
scas
lock
movs
fst
mov
jae
sub
or
xchg
add
sti
das
mov
cmc
add
and
cmps
(bad)
retf
dec
nop
dec
test
fs
pop
div
aas
push
mov
adc
mov
mov
addr16
jl
sub
push
xchg
fcmovb
jo
daa
push
adc
mov
and
inc
jle
push
push
outs
xchg
leave
scas
sbb
pop
dec
mov
stos
add
mov
or
push
adc
cwde
inc
daa
jnp
adc
dec
cdq
gs
inc
jmp
into
pop
in
cmp
jbe
outs
ror
in
nop
fwait
xchg
add
leave
xchg
add
mov
dec
pop
aas
jmp
in
out
cld
rcr
push
outs
sub
xchg
sbb
loopne
jne
inc
leave
mov
pop
(bad)
mov
scas
pop
stos
aam
inc
inc
loopne
mov
xor
aad
mov
jg
in
cmp
adc
pop
sbb
sbb
ins
out
adc
popa
cmps
push
loopne
or
adc
xchg
jle
fdiv
push
xchg
mov
stos
hlt
and
cmp
mov
inc
daa
xlat
sbb
xchg
ins
cmp
xchg
jge
fucom
popf
mov
mov
lahf
in
js
cld
ret
fnstenv
jno
mov
das
cmp
cwde
cmp
xchg
pop
pop
dec
ja
aad
push
retf
dec
inc
dec
push
mov
(bad)
adc
imul
cmp
aaa
and
mov
jo
int
mov
ins
out
paddw
leave
rcr
stos
jmp
retf
sti
xchg
xchg
inc
mov
(bad)
fwait
inc
push
sub
adc
or
mov
push
adc
lods
loope
inc
adc
adc
pop
xchg
ins
dec
and
outs
imul
fstp
ds
pop
repz
sahf
jb
rcr
shl
ret
aad
arpl
push
mov
(bad)
cmp
xor
clc
jmp
and
pop
pop
ret
repz
bound
inc
ret
jmp
or
adc
xor
or
jbe
sti
int
jge
dec
(bad)
sahf
xchg
into
cmp
pop
call
sub
aam
std
into
push
call
sub
cwde
pop
adc
loop
clc
push
loop
or
push
retf
xchg
pop
cmp
mov
movs
(bad)
or
cwde
int
sub
mov
imul
lahf
jnp
jp
xchg
pop
lea
pushf
push
js
sbb
inc
dec
clc
inc
dec
mov
mov
pushf
sub
xchg
mov
pop
pop
mov
call
fwait
mov
add
push
add
push
gs
int3
push
ret
sub
imul
jecxz
stc
(bad)
call
ja
mov
loopne
cmp
jge
pop
(bad)
jmp
add
lea
or
popf
ins
xchg
xchg
mov
(bad)
mov
addr16
ins
sbb
jno
je
lods
xor
push
jle
jp
dec
jp
rcl
mov
inc
imul
ds
pop
shl
repnz
loope
push
pop
jno
jmp
push
jge
or
sbb
jo
mov
idiv
xchg
pop
mul
out
cmps
inc
cmp
in
dec
out
(bad)
and
aaa
repnz
inc
(bad)
push
sub
fs
daa
imul
fcom
daa
sbb
dec
jae
mul
push
sub
mov
sbb
hlt
cli
pop
aad
loopne
lock
cdq
sub
add
stc
adc
retf
xchg
cwde
shr
fldz
or
aad
jb
bound
mov
jns
xchg
popf
test
xchg
rol
xchg
dec
dec
push
jno
sub
mov
xchg
mov
adc
sbb
dec
inc
xlat
push
sub
clc
ss
push
cmc
cmps
imul
xor
(bad)
leave
gs
iret
test
fiadd
lea
inc
inc
inc
fild
lods
mov
push
shr
adc
pop
hlt
mov
jo
adc
loopne
jae
shl
aam
lods
(bad)
and
add
pop
pop
(bad)
sbb
xchg
pusha
push
xchg
xor
xchg
imul
pop
pop
push
pushf
stc
test
in
dec
dec
stos
(bad)
int
loopne
lock
adc
add
mov
pop
pop
aad
loope
pusha
mov
adc
aam
pop
xlat
or
fs
les
cld
xchg
jae
pop
std
stc
sub
jnp
push
adc
fisubr
jg
loopne
int
movs
sbb
stos
(bad)
es
in
sbb
ret
mov
cmp
jno
retf
enter
adc
ja
movs
call
mov
aam
lods
push
call
stc
pop
sti
sub
cmp
das
jge
mov
mov
fidiv
addr16
pusha
aaa
cld
std
stos
stos
push
pop
mov
call
fsub
not
push
je
aaa
test
arpl
int
cdq
sahf
pop
stos
repnz
popa
add
sbb
pop
push
dec
push
dec
out
jns
or
or
clc
xor
or
pop
ins
push
sub
neg
call
inc
xor
mov
jecxz
pop
add
fisttp
pop
jne
repz
xchg
mov
adc
xchg
fidiv
(bad)
sahf
or
popf
sbb
push
sub
inc
addr16
add
xchg
call
inc
leave
dec
pop
xor
or
inc
outs
dec
xor
push
push
pop
jg
stos
lods
int3
lahf
mov
sub
xor
mul
lock
jmp
popf
sub
xor
jmp
sub
dec
jl
test
xor
mov
stos
sub
inc
popa
sqrtps
adc
scas
js
fsubr
and
cld
cmp
dec
enter
inc
add
or
sub
adc
ins
push
push
jo
fild
in
pop
stc
or
clc
mul
xchg
adc
cmp
jle
loop
inc
fs
jno
inc
in
je
loop
add
(bad)
stc
inc
call
push
fsub
fldcw
stos
test
push
sub
enter
repz
arpl
lahf
add
mov
xchg
cmp
fiadd
dec
pop
xchg
sub
(bad)
push
enter
sti
stos
fsub
pop
pop
inc
push
xor
mov
ror
jmp
popa
es
mov
div
xor
pop
push
cmp
add
adc
jne
inc
ins
leave
pop
mov
pop
hlt
(bad)
push
add
js
push
mov
enter
ins
xlat
rol
jecxz
cmp
popf
and
cld
mov
es
in
test
sub
or
loope
pop
sar
aam
out
lods
imul
mov
fst
scas
sahf
xlat
push
sub
lds
shl
fsubp
iret
das
jp
es
(bad)
les
mov
and
add
out
sub
xchg
scas
mov
inc
dec
pop
cmp
(bad)
dec
jns
jno
lahf
push
movs
std
cdq
lods
jb
test
mov
mov
shr
(bad)
cmp
push
iret
hlt
push
pop
push
std
and
xor
sar
lea
sbb
xlat
mov
arpl
in
pop
mov
cld
inc
xchg
out
sub
ret
xchg
neg
mov
ret
jns
xchg
pusha
ror
xchg
and
(bad)
cmc
arpl
or
pop
lods
jne
jp
(bad)
or
mov
xor
xor
sahf
inc
aaa
or
jmp
adc
bound
sub
ror
ret
push
int3
shl
ror
cmp
sbb
push
xchg
mov
push
scas
sbb
pop
mov
repnz
adc
test
retf
movs
pop
jmp
adc
push
ds
cmp
inc
in
add
sbb
rol
xchg
sub
addr16
hlt
std
movs
dec
pop
je
cmps
pop
xlat
xchg
retf
aad
jl
xchg
cmps
in
push
xlat
sub
sbb
mov
cld
inc
jno
fs
push
retf
jmp
rol
fiadd
add
mov
sub
mov
sub
inc
push
stc
pop
mov
fist
data16
ins
mov
sahf
movs
mov
jmp
retf
loop
out
clc
and
jge
xchg
dec
pusha
adc
sbb
ror
call
shl
out
sub
pop
mov
dec
pop
shl
xchg
sub
xchg
mov
cmc
inc
cmp
aas
stc
xchg
xchg
mov
mov
sbb
test
sub
mov
xor
xchg
dec
das
stc
and
(bad)
(bad)
mov
push
lods
jns
ja
(bad)
dec
neg
jmp
mov
xor
jp
es
jno
and
popa
test
test
in
sbb
aaa
sbb
std
jmp
clc
ins
nop
xchg
push
dec
outs
sub
imul
jp
cmc
adc
jmp
sub
fbld
adc
stc
adc
out
cmps
stc
dec
ret
push
xchg
(bad)
movs
frstpm(287
(bad)
jmp
push
inc
adc
mov
sbb
push
inc
inc
call
inc
test
xchg
scas
mov
call
push
adc
or
and
std
mov
cld
mov
(bad)
mov
push
out
dec
je
icebp
pop
cmp
lock
push
dec
sti
rol
sbb
pop
je
xchg
jp
sub
stos
pop
and
cmps
and
pop
sbb
loop
out
xchg
mov
adc
or
icebp
shld
and
dec
fldcw
ins
adc
push
cld
inc
movs
adc
shl
leave
or
jg
mov
nop
push
test
fistp
push
rcl
(bad)
retf
mov
adc
outs
sahf
and
jp
icebp
jo
iret
outs
cmps
sub
xchg
lods
inc
or
shr
mov
mov
outs
adc
mov
sbb
xchg
or
arpl
mov
add
xchg
jecxz
int
pop
adc
dec
xor
mov
sub
push
push
sub
xor
mov
add
mov
hlt
fcomp
jo
fiadd
adc
jno
hlt
rol
push
mov
mov
(bad)
shl
sub
test
iret
xchg
xor
adc
inc
xor
mov
sbb
nop
dec
ret
cmp
cmps
mov
gs
loopne
nop
jmp
inc
xchg
(bad)
lods
sub
aad
mov
mov
mov
sub
sbb
sbb
lods
inc
das
mov
add
xor
(bad)
stc
outs
hlt
ret
cmp
sbb
cmp
jnp
jae
pusha
pusha
dec
cmp
adc
into
adc
cmp
(bad)
addr16
fiadd
sahf
in
retf
ds
cmp
mov
sar
popa
or
stos
movs
stos
sbb
sbb
pop
dec
pop
mov
dec
mov
popa
cmps
jo
icebp
mov
push
jae
ss
loop
arpl
ins
scas
(bad)
jle
mov
jns
push
inc
(bad)
jne
outs
leave
cmp
inc
aaa
out
rol
sti
add
mov
mov
dec
lods
leave
aaa
call
enter
call
stos
scas
sbb
push
dec
test
pusha
pop
dec
scas
xchg
xchg
mov
add
das
ret
call
jle
int
retf
retf
sbb
or
add
mov
cdq
mov
das
or
sbb
xor
inc
add
add
fdivp
jl
add
gs
cmp
mov
(bad)
ror
sar
mov
push
aaa
and
and
std
dec
mov
pop
xlat
jbe
xchg
stc
inc
outs
jmp
pop
lea
clc
hlt
fcmovnb
xchg
xor
or
xchg
je
sub
pop
push
fucomip
jb
aaa
iret
fs
std
ret
icebp
mov
lahf
mov
push
mov
mov
sbb
sbb
pop
adc
es
add
pop
cmp
jns
pop
dec
jmp
dec
dec
nop
popa
std
lea
(bad)
in
inc
xor
mov
push
fisub
aad
mov
mov
sbb
xchg
xchg
jp
(bad)
outs
and
scas
mov
(bad)
loope
push
rcr
lods
rcl
ja
(bad)
and
and
bound
inc
adc
lds
mov
mov
mov
dec
jecxz
jecxz
out
inc
lods
addr16
lea
sbb
daa
test
mov
push
pop
dec
ds
popf
mov
push
mov
push
sahf
mov
int3
mov
out
aas
aam
shl
scas
push
jbe
mov
inc
push
dec
or
imul
cmp
mov
cmp
mov
lds
outs
out
retf
add
xor
shl
mov
nop
daa
in
mov
nop
hlt
lods
xchg
stos
imul
add
enter
or
not
shr
mov
fstp
retf
fild
jb
stos
cdq
lods
dec
sub
fdiv
hlt
cdq
lahf
neg
pop
push
mov
dec
ret
and
push
ins
div
fistp
pop
lea
fcomp
mov
(bad)
stc
mov
inc
jnp
dec
aad
or
rol
ret
(bad)
out
in
jbe
scas
test
mov
aaa
popf
movs
shl
ss
lahf
in
or
xchg
sbb
mov
mov
dec
inc
sub
sub
cmp
aaa
ror
mov
lahf
aad
mov
lock
div
xchg
push
call
loop
pop
jns
add
outs
aaa
mov
inc
(bad)
and
iret
or
and
mov
outs
ins
sar
push
cli
and
gs
xor
adc
rol
cld
xchg
retf
call
cmp
sub
mov
fidivr
inc
dec
adc
sbb
pop
mov
aas
out
xor
mov
dec
sub
int3
sbb
mov
pop
pop
mov
cdq
xchg
add
pop
mov
lea
dec
daa
xchg
and
fimul
sub
fnsave
out
mov
bound
popa
outs
add
cmp
retf
adc
out
jl
sub
(bad)
cmp
aam
jle
jle
sbb
cmp
inc
mov
fimul
dec
std
jns
hlt
push
lea
imul
push
nop
cmp
sub
lock
fcmove
fnsave
movs
sbb
adc
int3
aam
pop
jmp
loope
xchg
or
fs
sti
mov
adc
inc
ds
arpl
mov
mov
ret
out
cwde
stc
ficomp
xor
in
mov
xchg
cmps
jne
and
aad
cmp
cmps
adc
adc
int3
scas
jge
pop
scas
hlt
pop
or
dec
int
dec
jb
iret
mov
xchg
ret
cmps
dec
jmp
push
ins
mov
mov
imul
xchg
jno
mul
retf
ins
lods
retf
imul
sub
call
cmc
xchg
pop
gs
outs
pop
cdq
xor
push
enter
cmps
imul
cmp
(bad)
cmp
xchg
cmp
sbb
jp
je
ds
jns
sub
(bad)
aam
movs
mov
mov
out
sbb
sub
push
out
and
add
adc
add
lahf
(bad)
std
sub
sbb
cmp
mov
push
sbb
hlt
outs
daa
mov
mov
je
retf
cmp
mov
inc
push
sar
or
jae
mov
xor
(bad)
xchg
jmp
mov
jne
out
cmps
inc
or
mov
out
add
mov
sub
mov
(bad)
inc
mov
fdiv
cwde
or
gs
in
(bad)
mov
ret
aas
rol
sub
xor
jo
pop
or
aam
daa
jo
(bad)
cdq
push
outs
lods
mov
std
dec
cld
mov
retf
inc
cmp
out
jle
popf
repnz
add
xchg
push
xchg
and
jl
mov
imul
test
call
ja
nop
add
(bad)
loopne
(bad)
ja
mov
pop
xchg
aas
mov
cmp
nop
mov
add
sub
xchg
jne
pusha
mov
inc
outs
jmp
sbb
mov
mov
dec
loop
xchg
sbb
gs
inc
imul
rcl
xchg
sbb
in
xchg
sahf
xchg
out
mov
push
jns
movs
dec
loopne
hlt
(bad)
(bad)
xchg
in
jno
scas
rcl
je
aad
pop
pop
jbe
bound
mov
add
cmps
cmps
and
fcomp
cwde
mov
test
stc
mov
fidiv
adc
or
stos
mov
aam
in
mov
int3
push
xchg
add
mov
in
sub
push
sahf
mov
push
or
sub
test
cmp
imul
clc
pop
enter
sbb
push
(bad)
or
adc
xchg
add
jle
jbe
mov
pop
xchg
ins
jns
rol
out
push
push
inc
pop
retf
adc
test
jo
add
cmp
repnz
adc
fwait
xchg
mov
add
jmp
out
and
movs
stos
frstor
aam
je
and
test
mov
arpl
xor
sub
ficom
loop
cmc
jle
stos
xchg
les
icebp
or
gs
lea
cs
pop
inc
mov
arpl
out
repz
ret
jle
cwde
inc
mov
bound
xor
into
mov
lods
sub
push
jp
or
dec
gs
loopne
jbe
ds
mov
inc
out
and
jmp
mov
jb
sti
data16
gs
cmp
movs
mov
mov
jmp
jmp
jle
mov
mov
in
imul
xchg
dec
sub
aam
jns
hlt
(bad)
adc
cmc
movs
pmaddwd
mov
mov
pop
add
daa
(bad)
push
cmps
dec
aad
out
add
xchg
cld
cmp
fisubr
cs
adc
mov
and
xchg
in
fidiv
test
sbb
and
repnz
cmp
add
adc
push
stos
or
add
adc
dec
lods
add
psrad
(bad)
cmps
adc
rcl
jmp
inc
movs
xchg
mov
mov
xchg
es
add
arpl
or
fchs
xchg
bswap
add
into
inc
popa
xor
pop
jmp
mov
call
add
add
es
mul
iret
enter
pop
or
(bad)
scas
pop
stos
(bad)
addr16
sbb
fs
repnz
loope
pop
(bad)
jns
gs
sbb
lods
adc
jbe
push
pop
test
push
rcl
mov
rol
pop
test
shl
loope
nop
adc
inc
enter
ins
sbb
hlt
int
daa
into
shl
inc
stos
adc
(bad)
fsub
outs
and
dec
les
call
mov
gs
mov
sbb
cwde
add
push
or
dec
arpl
fsub
aas
outs
fwait
ds
xor
add
(bad)
into
pop
pop
push
call
pop
retf
and
icebp
xor
xchg
(bad)
retf
and
xchg
dec
(bad)
pop
stc
(bad)
cmp
in
xchg
mov
ret
lea
mov
mov
and
adc
mov
inc
adc
outs
in
fist
mov
icebp
nop
ins
sub
jno
loop
jns
xor
xchg
sahf
jno
push
pop
xchg
stos
icebp
dec
mov
ret
xchg
mov
push
xchg
mov
push
jmp
pop
mov
outs
lods
sub
cmp
mov
es
pop
xor
pusha
mov
pop
and
adc
dec
pusha
cld
popf
pop
fisubr
add
sub
adc
add
adc
push
mov
(bad)
adc
(bad)
clc
push
icebp
add
push
(bad)
fcmovu
jp
fnstenv
dec
rcl
xchg
mov
int
fistp
push
xchg
pop
xor
adc
in
sbb
dec
or
loopne
shl
add
push
push
mov
shl
test
sub
imul
xchg
call
test
iret
xor
js
xchg
sahf
xchg
(bad)
cli
and
push
inc
movs
addps
pop
and
fwait
mov
dec
sub
inc
shl
mov
jns
ret
inc
cmp
jmp
ja
stc
jo
cmp
push
outs
push
sub
sti
xchg
jno
or
and
xchg
sub
(bad)
jae
loopne
xchg
(bad)
mov
movs
mov
aad
jp
ins
or
add
xchg
xchg
retf
push
(bad)
mov
int3
mov
outs
jmp
inc
pop
in
mov
aad
jno
pop
push
fisttp
int3
xchg
xchg
jae
xchg
popa
enter
push
xor
(bad)
xchg
loopne
and
sub
sbb
retf
stc
inc
mov
cmp
xchg
push
or
ss
sar
sbb
mov
or
mov
mov
push
sar
pop
inc
(bad)
push
mov
inc
test
fist
fisubr
mov
out
pop
dec
lds
and
rcl
jns
cld
or
cmps
movs
pop
push
loop
test
data16
mov
stos
loope
xor
aaa
push
mov
cmp
jns
test
sbb
xor
push
sbb
xchg
xchg
dec
jle
out
fcmovnbe
scas
clc
and
shl
lahf
call
inc
add
ss
sbb
mov
add
sbb
jecxz
mov
push
push
leave
inc
sbb
inc
dec
test
gs
sub
jns
and
rol
mov
push
out
mov
mov
aam
aaa
retf
inc
lods
aas
mov
pop
test
dec
dec
bound
scas
mov
ss
fisttp
cmp
inc
or
call
jge
fs
mov
add
xor
pop
jmp
pusha
mov
es
sbb
fs
jns
fmulp
stos
pop
or
nop
int
out
sbb
or
and
jle
cmps
cmp
mov
popa
sub
sub
pop
pop
and
or
push
xchg
pop
dec
pop
fwait
imul
stc
dec
mov
mov
push
or
xchg
mov
add
ror
retf
aas
call
not
sbb
push
outs
lock
pusha
mov
push
outs
dec
or
push
push
mov
push
(bad)
cmp
sbb
jne
pop
xchg
cmc
fnsave
mov
fldenv
xchg
mov
hlt
nop
jae
pop
popf
mov
cmps
(bad)
push
and
lea
imul
scas
les
xchg
inc
or
xlat
jg
inc
inc
(bad)
cmc
mov
add
out
dec
cmps
xchg
mov
mov
sub
xchg
mov
mov
ret
sub
sub
push
adc
mov
inc
ficom
inc
or
daa
in
cdq
push
jne
push
(bad)
(bad)
shl
xlat
js
mov
repz
daa
in
call
mov
jmp
mov
idiv
dec
js
cwde
icebp
jmp
enter
mov
mov
fstp
fwait
jl
aaa
mov
adc
fild
pop
dec
(bad)
ins
push
add
adc
jb
call
sbb
dec
das
jo
es
int3
pop
repnz
addr16
stos
sbb
inc
sub
pop
imul
(bad)
dec
cli
xchg
mov
push
jl
(bad)
sbb
je
sbb
cmps
leave
pop
jo
or
xchg
push
xor
push
arpl
pop
dec
mov
and
or
or
jl
ror
loopne
dec
rol
cmp
cs
ins
mov
mov
cmps
push
test
xor
ds
ins
aas
push
xchg
inc
adc
frstor
mov
fcomi
sub
xlat
cmp
push
adc
in
into
or
and
adc
icebp
cwde
mov
mov
push
scas
mov
cmp
mov
fcomi
push
data16
xor
sub
or
push
push
unpckhps
ds
jecxz
mov
stos
sub
fisttp
mov
cld
adc
dec
inc
push
stos
xor
pushf
add
push
les
xchg
sub
push
push
or
lods
mov
ja
mov
(bad)
jmp
cmps
push
scas
sub
(bad)
in
repz
mov
mov
mov
adc
xor
jne
jp
cwde
xchg
pop
jecxz
ins
daa
or
in
jp
shl
mov
pop
(bad)
div
jne
mov
repnz
xor
jmp
fistp
sub
dec
(bad)
lahf
jl
out
cmp
jb
cmp
ds
xchg
rcr
out
add
scas
mov
dec
idiv
cli
outs
adc
or
mov
inc
inc
sbb
push
dec
jne
test
test
(bad)
mov
cdq
sbb
jecxz
out
mov
fsubr
mov
shr
cmps
jne
fdivr
mov
cdq
(bad)
ror
(bad)
jne
scas
jb
pop
cdq
test
jg
pop
dec
not
sub
xchg
inc
add
adc
cmp
loope
push
dec
movs
sub
out
push
and
pop
pop
and
jno
jo
push
xor
pop
loope
mov
stc
pop
leave
pop
pop
jns
mov
mov
sbb
mov
cld
sub
ds
pop
shl
leave
int3
add
(bad)
fst
stos
xchg
mov
jmp
cmps
out
xor
call
xor
cdq
loop
stos
in
jmp
pop
xchg
xlat
mov
mov
add
or
push
loope
cmp
enter
scas
outs
rol
loope
lods
sbb
shl
push
add
loopne
push
scas
inc
daa
and
mov
ds
sbb
sbb
bound
dec
sbb
sub
sbb
clc
sub
sbb
cmc
xor
push
nop
ins
and
push
mov
aad
pop
pop
cs
aad
inc
and
jbe
adc
mov
and
sub
fiadd
int3
pop
xor
pop
cmp
xchg
outs
ja
inc
push
cmc
xchg
loopne
sub
aas
fild
sbb
push
xchg
scas
pop
in
xchg
dec
and
push
loope
imul
js
xchg
push
mov
in
pinsrw
cmp
outs
call
repnz
inc
mov
pop
inc
nop
int3
popa
outs
ja
and
rcl
xor
inc
jbe
stos
jge
dec
jmp
js
icebp
in
dec
pusha
sbb
cmp
loope
popa
or
stos
jp
rcr
(bad)
xor
mov
pop
xchg
loopne
aam
shl
pop
sbb
sbb
push
adc
jne
jbe
cmp
pop
mov
xbegin
dec
jnp
jb
cmp
ss
cmp
sbb
fisub
inc
or
call
lds
mov
std
and
and
inc
sbb
xchg
xor
sbb
call
dec
pop
or
jae
xor
or
stc
fld
sub
mov
data16
(bad)
xor
jecxz
dec
std
das
ins
cmps
xor
es
inc
ds
aam
popf
jnp
ret
push
and
fwait
rol
push
xor
dec
addr16
jge
loope
or
arpl
pop
es
movs
jbe
mov
sbb
aad
pop
retf
xchg
loop
jge
aas
iret
les
cmps
stc
fisttp
push
test
and
enter
or
lods
cli
icebp
test
xor
fnstsw
in
xor
push
jecxz
and
(bad)
jmp
mov
in
ins
push
pop
adc
inc
adc
out
mov
or
jl
push
sbb
out
scas
lock
ret
and
shl
and
add
push
out
add
and
shr
pusha
es
xchg
enter
sub
(bad)
rcr
test
mov
pop
or
or
inc
clc
loope
jmp
sbb
adc
int
push
sub
or
je
cs
jge
pusha
push
xor
mov
ins
in
call
jae
fs
jo
fs
jne
add
arpl
aad
out
imul
jo
xchg
cld
inc
inc
ror
inc
stc
mov
aam
dec
les
repnz
mov
sub
icebp
cdq
or
cld
and
and
inc
pop
add
xor
or
rcl
fst
cmp
pop
loope
inc
loopne
mov
movs
jne
enter
pop
sar
(bad)
stos
dec
das
mov
mov
xor
mov
fnstenv
shr
scas
dec
push
retf
jne
pop
or
imul
add
mov
jbe
sbb
test
loop
pavgw
ss
arpl
icebp
hlt
test
jp
pop
add
clc
clc
or
dec
ins
(bad)
adc
push
imul
es
sbb
adc
fsubr
mov
cmp
mov
mov
fild
ss
leave
or
pusha
std
push
imul
sub
out
ds
jmp
scas
popa
out
xchg
das
mov
in
out
adc
rcr
popa
jecxz
and
in
push
inc
loopne
xchg
fwait
push
jp
adc
sbb
and
or
(bad)
ror
es
xor
cmp
adc
fbld
shl
add
mov
in
bndldx
ret
push
fstp
(bad)
xor
cs
gs
mov
pop
pop
cld
(bad)
mov
and
int
imul
dec
dec
pinsrw
aam
xchg
retf
mov
cli
jl
nop
inc
and
stc
lock
jnp
pop
ror
push
or
ds
cmc
pushf
mov
in
jp
mov
xchg
xor
iret
fbstp
call
cdq
(bad)
pushf
fcomp
(bad)
push
sub
inc
aaa
add
jnp
mov
jl
daa
lods
push
mov
test
or
jbe
stos
inc
clc
movs
lock
adc
mov
adc
push
pop
adc
rcl
xor
sar
sbb
or
jge
mov
sub
add
adc
ds
fbstp
adc
cld
leave
fs
sbb
mov
enter
pop
sbb
ror
and
dec
jp
call
cmp
mov
jp
and
cmp
clc
arpl
enter
mov
in
cmc
test
shr
sub
neg
or
pop
inc
repz
pop
dec
gs
xchg
inc
cmp
aas
ins
xchg
(bad)
ret
retf
cwde
scas
pop
std
mov
outs
rcr
inc
cld
jmp
jge
jge
push
mov
(bad)
ret
stos
sti
push
sahf
retf
inc
test
pop
fst
adc
xchg
fsubr
gs
mov
xor
sub
push
xchg
mov
jne
xor
pop
xor
dec
mov
xchg
fist
xchg
je
hlt
xchg
jmp
je
ficomp
add
nop
inc
fistp
jmp
fwait
mov
test
scas
push
sbb
push
mov
outs
jb
jne
sti
sbb
aas
in
jne
add
pop
jmp
add
or
xchg
lea
outs
xchg
dec
and
jmp
pop
inc
in
ins
ins
cwde
xchg
daa
inc
jnp
outs
out
pop
stc
mov
and
mov
(bad)
mov
outs
in
inc
daa
bound
cwde
pushf
and
test
cmp
jg
fcom
inc
shl
push
sbb
push
fwait
outs
icebp
ror
jb
(bad)
cld
movs
hlt
cmps
jbe
sar
xlat
xor
jne
mov
mov
das
jp
xlat
in
sub
or
stos
dec
xchg
mov
jg
jmp
adc
xor
pop
add
repz
out
add
daa
cmp
jecxz
out
xor
jp
out
daa
cmp
push
mov
fxch
aam
ret
jl
loopne
(bad)
or
cdq
arpl
mov
fwait
pop
xchg
out
push
retf
pop
addr16
scas
pop
add
scas
or
cli
call
psubb
div
xor
bound
lds
or
sbb
shr
jno
aam
inc
dec
cmp
inc
add
cli
ss
(bad)
sub
outs
mov
pop
bound
push
in
jae
xchg
das
lds
mov
push
jle
arpl
scas
sbb
jle
jo
pop
ss
mov
pop
push
push
aam
jecxz
add
mov
jle
int
scas
mov
jmp
dec
cmps
cs
mov
jecxz
addr16
into
or
inc
aaa
jl
out
dec
add
les
jg
sbb
int3
jnp
data16
sbb
push
cmps
sar
jne
sbb
retf
mov
xchg
jb
sbb
repnz
test
jbe
adc
sub
dec
add
and
sub
mov
inc
mov
enter
scas
add
mov
sbb
mov
sbb
test
(bad)
xor
das
sub
inc
sub
mov
push
cmp
cmps
dec
push
and
cmp
fxch
adc
lods
rcl
or
adc
cmp
push
rcr
loope
test
inc
inc
int3
jns
dec
xchg
mov
ret
mov
data16
ins
inc
mov
sbb
push
mov
mov
xchg
pusha
test
mov
hlt
movs
xlat
add
jmp
xchg
adc
push
inc
(bad)
mov
fwait
add
data16
retf
ss
mov
xchg
cmp
mov
push
inc
sar
sar
data16
call
lar
das
jnp
inc
mov
cmp
out
push
in
add
pop
call
mov
adc
idiv
mov
mov
fcom
cmp
lock
adc
cmc
cmp
dec
into
dec
mov
jmp
ficom
mov
das
mov
popf
or
pop
sbb
pop
mov
add
mov
cs
push
(bad)
arpl
sbb
imul
out
jl
loope
sub
retf
mov
sub
mov
pop
repnz
int
or
sub
gs
fcmovne
mov
pop
loopne
icebp
pop
xchg
shl
adc
loope
xchg
dec
std
rcr
fwait
lock
jnp
mov
adc
ss
adc
lds
push
icebp
xor
scas
adc
mov
call
js
int
fwait
cld
mov
std
xor
xchg
mov
je
cs
repz
rol
mov
outs
xor
lahf
imul
xor
in
int
aad
(bad)
fst
push
mov
xor
clc
shl
push
push
fld
sub
pusha
ret
add
icebp
movs
fs
sbb
jnp
or
pusha
leave
mov
push
mov
mov
inc
mov
into
pop
imul
sbb
rcl
xchg
scas
mov
jo
lods
sbb
jecxz
je
(bad)
cmps
cmp
pop
jnp
add
test
mov
rcl
movs
dec
jl
imul
daa
cdq
mov
sbb
call
test
repz
mov
cs
add
cdq
add
repz
aad
repz
sub
rcl
ffree
outs
aas
test
bound
leave
call
scas
mov
leave
adc
daa
xchg
inc
cmp
inc
int3
add
fild
mov
or
pop
test
sub
or
dec
xor
retf
push
push
push
push
test
sub
stos
retf
popf
or
ret
call
push
mov
es
mov
xor
or
out
call
jecxz
mov
outs
pop
xchg
stos
mov
mov
test
mov
lods
adc
or
int
int3
or
daa
sub
jmp
push
(bad)
rcl
imul
clc
jl
dec
jb
jae
stc
fisttp
jno
repnz
inc
cmp
fmul
loop
mov
and
xchg
not
or
jmp
xor
mov
mov
sti
out
lahf
inc
shr
shl
lds
dec
cmp
push
lock
inc
pop
or
sub
aam
mov
mov
fmul
sub
sub
xchg
jo
bound
sbb
fyl2x
js
push
js
mov
test
sbb
(bad)
or
add
cmps
inc
stos
jg
ficom
stc
enter
jnp
pop
xchg
sahf
shr
test
fwait
push
cld
addr16
fwait
mov
or
and
ds
out
dec
and
aam
mov
retf
cmp
cld
inc
lock
mul
movs
fiadd
ss
iret
mov
cmp
mov
fnstcw
jbe
jno
(bad)
aaa
daa
cmp
dec
jnp
cmp
fwait
jmp
or
test
dec
fs
pop
enter
mov
aas
lahf
jmp
xor
(bad)
idiv
mov
sbb
ret
sbb
fwait
xchg
push
sahf
dec
fbld
fwait
mov
mov
or
enter
stos
and
call
(bad)
pop
(bad)
jp
xor
add
fs
or
push
pop
pop
add
out
les
enter
sbb
cmp
loope
pop
fdecstp
dec
push
xor
(bad)
in
mov
outs
mov
dec
dec
movs
sub
inc
test
xor
ret
imul
mov
outs
scas
out
jmp
outs
sbb
adc
add
icebp
stos
das
rcr
in
icebp
(bad)
in
ins
lock
lock
xchg
adc
in
xchg
dec
jp
test
sub
sbb
xlat
stc
pushf
jns
data16
in
cdq
pusha
les
pop
sbb
sbb
jl
mov
jno
dec
jo
jle
es
(bad)
icebp
into
adc
sahf
ins
stc
in
jl
or
jge
aad
sahf
inc
push
retf
mov
push
mov
adc
repz
mov
stos
sbb
adc
inc
pop
out
or
pushf
ror
ret
call
(bad)
sub
or
push
cmp
jb
mov
test
mov
jle
stc
(bad)
jmp
mov
loope
shl
fisttp
call
aaa
xchg
jo
sub
xchg
mov
xlat
fcom
adc
jecxz
jno
scas
or
out
fwait
imul
adc
sbb
adc
cmp
dec
(bad)
xor
pop
inc
xor
pop
jnp
imul
xchg
push
mov
out
mov
mov
jb
ftst
xor
mov
jmp
lds
ret
(bad)
pop
sar
cs
(bad)
movs
retf
fwait
ds
adc
mov
adc
inc
sbb
dec
ins
or
std
pusha
ss
test
xchg
pop
lock
movs
daa
push
dec
push
inc
in
movs
out
clc
ror
jne
dec
das
test
sub
ds
sub
scas
sbb
dec
hlt
push
push
pop
cli
or
and
adc
mov
inc
lds
mov
jecxz
lahf
bound
mov
out
jmp
push
push
jae
jae
nop
dec
dec
imul
or
je
clc
fiadd
imul
test
cmp
pusha
inc
mov
js
sti
popa
push
xchg
mov
sub
(bad)
adc
arpl
mov
mov
cmp
rcr
and
push
shr
dec
mov
pusha
sub
iret
dec
jg
dec
push
inc
push
mov
hlt
in
cmps
(bad)
xchg
das
mov
mov
cmc
ins
inc
fsub
push
and
inc
cmps
jb
jne
push
cli
and
ss
sub
mov
aas
xor
sbb
mov
sbb
cmps
push
sar
xchg
es
cld
inc
call
loop
out
adc
inc
retf
sub
pop
les
in
inc
inc
jg
and
dec
jnp
fadd
or
cdq
dec
sbb
int3
adc
xor
jp
fadd
stos
mov
cs
push
jbe
dec
mov
imul
mov
ja
xchg
sti
and
adc
cs
sub
stos
dec
cwde
jns
inc
dec
push
popa
mov
(bad)
xchg
sub
nop
fs
jmp
mul
call
add
dec
mov
jnp
gs
or
ins
aas
mov
rcl
es
or
(bad)
dec
lea
dec
jecxz
movs
std
clc
add
sbb
ja
mov
xchg
add
scas
dec
lahf
std
nop
cmps
js
std
fisubr
(bad)
mov
sub
dec
lods
xlat
jge
sbb
scas
mov
add
imul
adc
test
and
daa
add
movs
cmp
mov
lahf
jp
inc
scas
cmps
rcl
mov
fsub
or
ret
or
movs
mov
xchg
jecxz
adc
mov
cld
out
(bad)
fsub
mov
mov
shl
pop
out
sub
mov
dec
cli
shl
iret
xchg
push
xchg
enter
push
inc
xor
cmp
imul
xchg
dec
pop
sti
jecxz
aam
inc
shl
repnz
rol
pop
hlt
mov
mov
enter
movhps
xchg
sbb
popa
add
jle
addr16
push
cmp
bound
out
lods
fidivr
pop
mov
mov
jb
xchg
loope
mov
mov
mov
movs
and
lahf
cmps
adc
inc
jo
sub
jecxz
cmps
xchg
fidivr
loop
jb
mov
(bad)
in
dec
aaa
sbb
stos
ret
xlat
fbstp
dec
movs
sbb
jg
ss
and
or
mov
add
xor
inc
scas
cmp
ss
pop
into
jmp
ret
and
xlat
and
sub
inc
pushf
bound
mov
sbb
xchg
xor
and
mov
sub
not
pop
maskmovq
div
out
test
popf
sbb
dec
cmp
rol
not
jle
sub
fcom
retfw
icebp
sbb
xchg
shr
push
out
pop
cwde
xchg
aas
aad
dec
jns
mov
cmp
ret
push
push
pop
inc
clc
enter
das
mov
cmp
pop
dec
inc
mov
and
ret
dec
pop
retf
fidiv
test
sub
imul
shl
add
and
daa
pop
push
je
xchg
call
xchg
mov
dec
outs
jns
(bad)
jae
cmps
pop
xor
adc
fs
lea
ins
ret
test
jbe
stc
mov
mov
mov
loope
loopne
in
mov
bound
and
sahf
jne
mov
mov
sar
sti
loope
jmp
dec
jne
and
jg
sbb
mov
std
push
or
push
js
mov
pushf
jge
push
mov
push
sbb
cmp
mov
pmaxsw
mov
add
add
test
ret
cmp
dec
dec
adc
sub
ss
pop
push
ins
adc
shl
xchg
inc
fadd
sbb
les
or
je
mov
loopne
mov
jp
out
aaa
xchg
xor
ja
fdivr
call
clc
shl
add
retf
add
enter
adc
xchg
jecxz
inc
int3
outs
cwde
mov
adc
or
int
imul
push
adc
lea
xchg
call
mov
sub
loope
lods
cmp
sar
sbb
aas
repz
lds
cld
ins
fprem
push
test
shl
push
dec
add
dec
sbb
lahf
adc
jno
dec
retf
leave
std
jbe
jae
mov
(bad)
int
dec
loopne
cld
xchg
dec
inc
push
mov
ret
mov
or
pop
shr
push
leave
call
xchg
and
adc
popa
into
jne
jae
dec
or
sub
dec
jge
ss
add
jno
mov
xchg
retf
ds
add
sub
adc
mov
mov
pop
je
(bad)
jmp
scas
mov
outs
aas
sbb
push
mov
sbb
adc
pop
cmps
std
push
loope
sub
dec
pop
cli
push
push
mov
daa
sbb
push
dec
add
sti
push
cmp
jg
lods
sbb
jg
gs
or
sub
cmp
mov
enter
cli
loope
mov
xchg
adc
imul
pop
lea
or
cmp
add
or
loop
mov
shl
sbb
cwde
and
sbb
adc
pop
sbb
jg
xchg
dec
push
shl
mov
push
call
mov
stos
and
out
push
cmp
test
and
jb
nop
imul
rcl
out
in
(bad)
aaa
cmps
arpl
adc
fs
sti
add
stos
jge
and
movs
add
int3
xor
mov
clc
outs
push
inc
dec
mov
clc
sub
retf
inc
out
test
mov
test
in
loope
jae
adc
mov
call
adc
xor
es
aaa
out
pop
mov
push
setns
cwde
fs
add
pop
mov
pop
loop
(bad)
popf
jns
aaa
shr
inc
ins
int
push
sahf
dec
xchg
icebp
popa
out
xor
xchg
jecxz
and
and
aaa
int3
out
fstp
mov
test
leave
xchg
add
aad
fidivr
add
pop
shr
(bad)
cmp
shr
fild
shl
inc
das
pop
out
or
les
jp
mov
push
in
add
repz
xor
and
into
mov
and
xchg
jo
xchg
stos
sbb
or
cmp
push
enter
lods
imul
fwait
ror
mov
mov
push
mov
stc
jle
pop
daa
sub
repz
shr
dec
or
mov
rol
jle
mov
jle
fist
mov
xor
mov
es
push
xchg
rcr
or
adc
push
mov
dec
cmovs
or
loope
mov
shl
lahf
and
jae
jne
sub
and
xchg
mov
lods
adc
mov
movs
pusha
fnstcw
cwde
xor
xlat
sbb
dec
mov
adc
aaa
rcl
and
loope
ror
cwde
mov
leave
or
add
(bad)
mov
fbstp
inc
push
aas
mov
fmul
in
ds
mov
rol
sbb
cmps
mov
cmp
sbb
data16
(bad)
in
lods
pop
imul
ja
sti
push
push
and
push
pop
fsubr
out
enter
pop
sti
shl
lock
(bad)
mov
jmp
adc
fsubr
adc
rol
call
pop
or
xor
adc
enter
pop
inc
jp
outs
inc
sbb
stos
and
aaa
sbb
test
es
adc
mov
cdq
jno
loope
sub
clc
add
xchg
cmp
add
add
test
movs
add
or
xchg
push
sbb
pushf
xchg
sahf
loopne
sub
cmps
push
cmc
jns
xor
lods
fldenv
jae
fnsave
sti
movs
dec
cs
frstor
and
test
fisttp
add
jle
ss
sub
push
adc
test
lods
pop
and
int
xor
loope
cdq
gs
js
iret
lods
(bad)
rol
push
aaa
xchg
or
daa
sbb
stos
lods
jae
ins
inc
push
mov
xchg
mov
test
cmp
bound
dec
cmp
push
movs
imul
and
scas
out
dec
cli
popa
retf
pusha
mov
jg
xor
push
xchg
or
pusha
pusha
loopne
adc
jl
push
fiadd
mov
stos
sahf
repnz
xchg
pop
mov
add
ins
mov
and
mov
(bad)
daa
ins
mov
cmp
jp
adc
popf
or
adc
aad
ror
add
push
out
or
mov
sbb
adc
inc
or
fcmovnbe
cwde
mov
xor
(bad)
gs
out
fsub
ss
or
sub
movs
inc
pop
stos
stos
mov
or
push
retf
out
dec
fdivr
xor
aaa
mov
fimul
mov
xchg
out
into
and
aam
movs
sbb
imul
or
je
mov
add
pop
xor
or
push
push
add
dec
repnz
repnz
not
sub
(bad)
xchg
xchg
xchg
popa
jno
xchg
push
push
fcmovnb
jge
xchg
xor
test
cs
test
fild
push
pop
mov
pushf
jae
mov
sar
push
loope
ds
mov
movs
cwde
ror
and
stos
call
arpl
adc
adc
adc
inc
xchg
adc
xchg
imul
jecxz
enter
in
lea
add
test
icebp
arpl
fadd
xchg
cwde
js
xor
fwait
pop
push
push
outs
dec
and
repz
(bad)
jns
dec
mov
mov
cmps
stc
push
sbb
shr
fs
push
mov
xor
inc
mov
or
cmp
pop
jmp
xchg
xor
add
jmp
xor
xor
icebp
ins
mov
jnp
(bad)
mov
in
icebp
dec
mov
jge
nop
mov
in
xlat
inc
stc
jmp
call
movs
sbb
mov
imul
cmp
cmp
jb
jbe
je
mov
xchg
jl
pop
sub
sti
or
ds
fsub
pushf
mov
push
inc
pushf
inc
mov
(bad)
and
or
in
fisubr
fimul
cs
int
and
jbe
rcr
call
or
and
xchg
jmp
mov
ret
xchg
add
add
mov
mov
cdq
stos
ret
add
loope
jge
gs
pop
xchg
iret
dec
inc
test
sub
mov
push
fistp
adc
sbb
ins
mov
mov
ins
in
test
push
movs
cli
xchg
dec
es
inc
jecxz
jge
adc
shl
retf
mov
jae
sbb
jne
lahf
outs
stos
(bad)
repnz
xchg
sub
jo
fistp
mov
and
push
jecxz
iret
fsubr
xchg
sub
add
push
add
popf
mov
pop
imul
fwait
xor
inc
add
push
lods
ficom
pop
jp
in
pop
inc
or
fidiv
test
cld
icebp
ss
adc
push
mov
not
mov
sbb
dec
jmp
pop
mov
int
test
enter
sahf
sub
xchg
in
aad
cmc
pop
mov
cmc
sahf
stos
inc
pop
xor
mov
sbb
jp
push
ror
hlt
push
push
std
sub
xchg
add
das
rcl
lea
jae
adc
push
daa
mov
xchg
ins
add
out
dec
add
sub
nop
cli
jnp
push
movs
mov
ret
push
push
aaa
jne
popa
in
jg
and
xchg
outs
sub
aas
mov
nop
popa
inc
and
popf
test
stc
sub
pop
sbb
leave
arpl
arpl
(bad)
mov
cld
data16
test
rcl
dec
push
jno
mov
cld
jl
rcr
mov
xchg
stos
cmp
mov
hlt
mov
das
test
xor
dec
xlat
cdq
outs
inc
sti
test
rcr
clc
adc
addr16
push
aas
adc
push
mov
push
cmp
ret
fisttp
arpl
jmp
enter
ja
nop
lahf
movs
jmp
es
or
lea
movs
adc
lahf
loopne
sub
std
mov
cmp
fadd
retf
jle
imul
dec
sub
dec
mov
bound
dec
enter
cmps
div
push
fisubr
mov
xchg
mov
popf
cli
sub
jl
cmp
xchg
or
push
imul
xchg
mov
xchg
mov
xchg
lock
push
daa
jns
jp
jnp
cmp
lahf
(bad)
loop
and
xchg
push
outs
push
pop
cs
xchg
mov
and
xor
add
lds
cs
add
push
imul
fs
xchg
dec
rol
push
mov
jmp
cs
push
sbb
xor
stc
dec
jg
sub
pop
xor
mov
sbb
popa
fwait
(bad)
repz
mov
jmp
scas
sbb
mov
push
out
fnstsw
daa
call
loop
rol
inc
call
inc
or
xor
mov
in
or
and
(bad)
imul
leave
out
(bad)
push
(bad)
pop
popa
dec
xor
pop
pushf
fmul
cmp
pop
pop
adc
push
daa
shl
sti
add
inc
je
in
mov
das
mov
pop
xchg
pop
xor
iret
mov
add
in
cmp
popf
or
leave
adc
gs
in
mov
out
dec
mov
adc
or
mov
sub
int3
jl
adc
fstp
mov
cdq
lods
lahf
or
(bad)
stos
movs
ins
out
arpl
adc
jno
out
jge
xlat
mov
movq
inc
push
imul
lock
lods
ins
add
pop
push
cmps
xchg
and
pop
dec
fdivrp
cmps
adc
and
movups
sub
outs
cmp
ja
xor
iret
mov
and
push
cli
arpl
inc
aaa
addr16
mov
nop
movs
mov
xchg
out
fild
sar
jmp
call
pusha
sbb
mov
int3
jge
cmc
cmc
jne
ret
(bad)
lds
mov
pop
retf
or
mov
mov
mov
fidiv
into
xor
adc
fisttp
inc
xor
sub
in
inc
std
lock
hlt
outs
retf
(bad)
hlt
call
mov
stos
cmc
mov
js
retf
push
clc
outs
test
ret
pop
or
in
scas
jb
(bad)
adc
pushf
cmp
hlt
test
pop
mov
ror
adc
pushf
stos
or
in
ds
gs
cmp
fisubr
jbe
or
aad
dec
dec
mov
mov
fwait
add
jg
dec
imul
in
into
dec
add
outs
mov
adc
push
lock
cmp
inc
pop
mov
es
mov
mov
xchg
out
inc
pop
out
sti
ja
xchg
loop
out
nop
rcl
sub
stos
push
repz
ret
and
cmp
call
jbe
rcr
fstp
xchg
xchg
mov
movs
pop
rcl
jmp
cdq
cli
xchg
jmp
push
cwde
sub
cmp
jle
ins
pop
mov
aas
jp
mov
adc
retf
jg
leave
lods
repz
jmp
mov
add
push
jecxz
xchg
aam
aad
movs
mov
sub
mov
or
movs
mov
stos
faddp
push
cmp
loop
addr16
mov
lea
lods
sbb
rcr
xchg
fwait
push
and
push
cmp
adc
dec
fldenv
mov
std
dec
xchg
mov
inc
xor
push
mov
and
in
cmp
mov
mov
xchg
pop
cwde
mov
pop
addr16
repnz
add
test
mov
sbb
pop
dec
inc
xchg
sub
cs
xlat
add
adc
icebp
inc
sar
loope
sub
cmp
into
imul
std
inc
xor
popf
ss
and
dec
push
inc
pop
pop
dec
and
test
push
ins
pop
not
adc
lds
xchg
out
out
and
dec
push
add
dec
dec
je
mov
fst
xchg
cld
(bad)
pmaxsw
leave
stc
pop
outs
pop
mov
mov
(bad)
hlt
retf
gs
addr16
push
xchg
add
sbb
dec
push
jbe
aam
stc
repz
xchg
mov
enter
inc
mov
cdq
int
push
pop
jmp
adc
or
inc
shr
call
cld
and
shl
jne
adc
inc
scas
xor
push
scas
retf
addr16
xchg
xlat
scas
jno
stc
jne
dec
sub
push
push
or
imul
adc
fadd
push
fistp
xchg
dec
js
push
sbb
fistp
add
fild
les
pop
stos
(bad)
call
bound
xchg
loope
pop
jl
xor
xchg
ret
out
sahf
mov
out
je
push
std
aaa
sbb
mov
dec
lahf
and
sbb
enter
push
jnp
out
(bad)
mov
xor
adc
stos
xchg
fistp
sbb
jnp
sub
imul
adc
movs
dec
cld
sbb
sar
mov
into
inc
mov
add
or
sbb
jnp
ud1
pop
or
sbb
arpl
adc
xchg
rol
dec
sbb
inc
and
or
int
out
fbld
mov
clc
js
loope
xchg
add
add
imul
jmp
(bad)
mov
and
mov
mov
call
cdq
mov
mov
mul
xor
sub
or
add
sti
rcr
mov
mov
push
mov
mov
repz
pop
repz
xor
mov
and
jge
aas
add
mov
jnp
pushf
add
cli
pop
mov
mov
sahf
pop
xchg
cmp
mov
cmp
fbstp
test
test
and
sbb
mov
jo
push
ja
dec
mov
not
or
iret
push
cmp
scas
iret
es
dec
hlt
xor
jp
(bad)
or
inc
(bad)
iret
cs
mov
mov
push
repnz
or
pop
bound
sbb
mov
dec
jecxz
retf
nop
fmul
xchg
mov
stos
and
iret
int3
xchg
mov
call
pusha
dec
mov
ins
hlt
les
shl
inc
push
mov
add
test
inc
cmp
retf
dec
push
into
cmp
repz
sub
or
pop
mov
out
mov
sbb
cmp
inc
repnz
fiadd
jmp
aas
sbb
and
ja
stos
in
pushf
cmp
inc
adc
cwde
pop
mov
stos
adc
dec
add
adc
and
cmp
repnz
xor
aaa
addr16
or
mov
dec
mov
sub
test
fadd
test
xor
push
je
inc
adc
add
in
sbb
div
pop
push
arpl
out
xchg
repz
retf
imul
test
sbb
je
dec
cdq
jo
in
in
clc
adc
addr16
enter
adc
pop
sahf
outs
bound
xchg
add
das
sbb
mov
call
pusha
in
pop
push
pop
shl
test
fs
add
aas
ret
(bad)
daa
es
push
xchg
sub
arpl
arpl
pop
fld
rol
inc
fld
in
outs
dec
xor
xchg
cmps
mov
mov
add
xchg
test
repnz
rcr
sbb
or
mov
sub
and
mov
and
inc
push
jno
add
cmp
lods
(bad)
jnp
test
or
pop
dec
inc
(bad)
lahf
mov
ret
pop
sub
xor
cmp
ins
mov
mov
test
xchg
(bad)
fisttp
test
inc
jmp
je
and
mov
pop
jb
ss
rcr
fisubr
add
jl
xchg
sub
dec
or
xchg
ins
es
out
and
dec
call
movs
hlt
jae
dec
inc
rcr
sub
out
jb
inc
cmps
lods
fdivr
popa
stos
cwde
sahf
xchg
xchg
test
outs
xchg
iret
lock
inc
push
je
(bad)
mov
test
inc
push
add
pusha
xor
outs
cmove
sbb
pop
jp
loopne
stos
push
add
push
loope
sub
push
loope
repnz
cmp
mov
ins
xor
cmp
xchg
xchg
fndisi(8087
ror
lock
test
pop
xchg
jno
cmp
xchg
sbb
fild
stc
imul
jb
repz
and
pop
dec
mov
jne
or
pop
cmp
das
jg
cmps
lods
in
call
push
xchg
dec
pop
jns
and
xchg
push
test
and
xchg
jecxz
cmp
mov
lods
xchg
mov
cmp
push
jle
or
stos
or
mov
daa
add
mov
ds
mov
ss
daa
dec
push
dec
icebp
push
lahf
cli
jg
fs
pop
inc
sbb
xor
dec
push
add
call
and
jmp
xchg
dec
lods
js
aaa
adc
push
ret
add
hlt
cmps
inc
xchg
dec
mov
call
aaa
gs
in
movs
mov
xor
jg
scas
jno
push
fs
sbb
call
es
loopne
push
jne
pop
sbb
xchg
adc
das
xor
jno
xchg
adc
xchg
iret
sbb
call
les
fwait
scas
adc
dec
aas
adc
lea
push
out
push
push
aaa
cld
jmp
fdivp
mov
mov
push
test
ja
mov
mov
mov
test
mov
xchg
push
mov
jge
push
movs
loope
fadd
enter
aam
push
pop
into
in
xlat
and
push
inc
gs
jae
jno
cmp
jne
adc
fsubr
pushf
sub
push
jg
fisub
pop
int3
mov
mov
sub
mov
repnz
sbb
and
sub
push
repz
and
adc
cmps
aam
or
mov
mov
nop
xor
sbb
popa
(bad)
call
retf
imul
test
out
adc
mov
mov
mov
fcom
dec
push
leave
add
jl
dec
mov
mov
xchg
xor
mov
push
cwde
leave
jg
cmps
shl
and
mov
mov
mov
push
jmp
ja
sub
rcl
inc
and
and
push
fldenv
xchg
pop
in
push
sbb
repz
imul
add
sub
enter
xchg
sbb
test
pop
add
sahf
dec
lea
pusha
pop
inc
mov
ins
arpl
jb
adc
scas
inc
stc
and
out
mov
jecxz
sbb
mov
aad
sbb
and
ds
add
test
sub
in
mov
lahf
or
aam
imul
fsubrp
xchg
fsubr
adc
mov
dec
ins
cwde
fcmovnb
mov
repz
adc
rcr
mov
dec
sbb
outs
or
dec
push
push
aad
and
dec
inc
lods
xchg
ins
into
jns
bound
fld
adc
push
(bad)
es
sub
out
pushf
xchg
xchg
and
std
jns
cwde
in
arpl
sub
(bad)
xchg
or
or
push
mov
and
sar
iret
cmp
cs
mov
xchg
lahf
xchg
imul
(bad)
test
sub
mov
ret
inc
cmps
and
fild
in
ret
stc
call
lahf
inc
hlt
aas
ds
inc
fist
sub
adc
mov
and
mov
sub
mov
shr
xchg
(bad)
dec
sub
test
js
xor
mov
aad
jnp
pop
pop
popf
imul
or
push
bound
mov
(bad)
rol
adc
adc
inc
sbb
xchg
inc
test
aam
addr16
lds
cmp
loopne
xor
jge
outs
push
in
cs
ror
adc
or
sahf
pop
inc
add
pop
leave
mov
adc
das
sbb
jne
xor
cli
sahf
mov
jl
and
push
test
bound
loopne
jge
push
dec
push
push
jns
jbe
clc
xchg
int
pop
and
loop
clc
mov
jmp
cld
fldcw
and
add
test
mov
mov
pop
repnz
dec
je
xchg
jecxz
cmc
iret
mov
mov
retf
bnd
mov
jmp
xor
sub
jg
pop
ds
jnp
fcomp
cmps
dec
mov
out
mov
ret
pop
add
adc
push
pop
call
pusha
je
and
cmp
sbb
and
xchg
cmp
adc
mov
mov
test
mov
xchg
stos
inc
rol
arpl
ins
add
push
mov
sar
ins
daa
jo
mov
ins
jl
enter
pop
jo
sub
xchg
sub
inc
pop
dec
inc
sub
sbb
xchg
mov
es
in
scas
fnstcw
ret
sbb
adc
push
dec
add
sub
xor
aad
mov
push
mov
inc
mov
sbb
daa
add
or
and
fisubr
jns
inc
(bad)
sbb
(bad)
arpl
sub
add
jmp
inc
xchg
stc
adc
xchg
adc
dec
mov
jne
test
and
in
mov
cwde
sti
push
fcomp
cmp
and
inc
sbb
fldenv
mov
jmp
jmp
adc
inc
xor
pop
add
pusha
xchg
add
inc
aad
add
sti
ins
(bad)
and
push
mov
mov
aam
inc
mov
and
jne
push
mov
pop
mov
dec
(bad)
cmc
stc
and
in
sbb
mov
jno
add
dec
cmp
pusha
stc
mov
sub
sbb
shr
(bad)
cmps
out
ins
scas
xchg
xor
jmp
or
mov
mov
push
pop
data16
or
enter
mov
mov
sbb
push
xlat
stos
cmp
int
mov
inc
mov
push
xlat
test
inc
(bad)
mov
fisub
ds
adc
lods
sbb
cs
pop
xlat
arpl
jp
out
and
fsub
inc
sub
icebp
stos
push
pop
cs
les
and
dec
cmp
xor
lahf
test
push
popa
jp
movs
jnp
inc
mov
mov
cli
inc
lock
test
shl
push
or
mov
jbe
jl
es
sbb
ja
sbb
adc
sub
and
push
retf
mov
push
mov
sub
cli
adc
sub
jp
dec
add
pop
adc
call
dec
je
call
repnz
cs
sbb
add
call
push
(bad)
pcmpgtb
push
(bad)
sub
ret
out
jp
lea
retf
xor
add
dec
push
repz
xchg
mov
sti
dec
cdq
cs
loop
mov
cmp
and
adc
cmc
lock
jo
sbb
aas
sbb
ret
xor
pop
xchg
(bad)
pop
lds
cmps
jl
inc
or
cmps
push
push
pop
mov
div
inc
sub
mov
jmp
mov
dec
sub
xchg
sub
jb
ins
test
and
sub
xor
lea
push
dec
dec
shl
dec
xchg
mov
mov
enter
or
jnp
mov
pop
pop
xor
retf
xor
leave
inc
cmp
adc
mov
jb
push
pop
retf
sub
ret
sbb
data16
jg
or
shl
mov
inc
dec
sbb
or
xor
(bad)
cld
adc
mov
push
add
inc
test
xor
test
fiadd
xor
mov
inc
xor
mov
repnz
jns
add
mov
jae
in
adc
push
ja
ret
fidiv
movs
add
les
adc
add
jnp
push
xor
adc
loop
adc
inc
out
cwde
out
ja
mov
pop
dec
push
pop
cmps
pop
pop
xor
repnz
and
fst
pop
test
popa
imul
lods
sub
pop
sahf
pop
cmps
iret
push
pusha
ja
sub
inc
mov
(bad)
stos
(bad)
xlat
pop
cmp
jmp
scas
inc
scas
nop
js
jb
mov
push
cwde
cmp
cmp
rol
call
daa
xchg
or
xor
mov
test
adc
push
pop
mov
dec
sbb
inc
in
push
xchg
cmovp
or
shr
dec
fwait
jb
out
pop
ror
out
cdq
repz
xchg
and
and
mov
jbe
adc
jns
rol
mov
or
xor
jecxz
les
sub
mov
sbb
cdq
mov
ret
fst
cmp
or
dec
fld
add
inc
and
lea
or
das
xchg
(bad)
push
ja
add
hlt
in
(bad)
mov
popa
cli
in
dec
in
push
(bad)
mov
mov
das
xchg
jp
out
idiv
pop
sub
nop
pop
add
daa
inc
shr
xchg
dec
mov
or
mov
add
push
daa
jmp
mov
mov
out
sub
push
dec
mov
and
push
add
mov
repz
jecxz
inc
movs
rcr
dec
aas
push
push
out
enter
add
lahf
loopne
cmp
adc
xor
lock
mov
out
lea
(bad)
icebp
data16
outs
jmp
(bad)
fistp
out
and
pop
imul
popf
and
repnz
ret
fldenv
push
out
movs
inc
mov
adc
add
cmp
inc
mul
cmp
inc
ss
jle
adc
lods
cmc
adc
imul
test
pusha
sbb
mov
add
dec
mov
mov
imul
test
ds
jle
dec
stos
mov
js
ret
fadd
mov
jmp
pop
add
(bad)
dec
cmp
movs
loop
jmp
retf
mov
fistp
(bad)
pop
mov
mov
nop
jne
or
outs
push
push
call
push
int3
inc
xor
mov
adc
xchg
xlat
shr
pop
in
cwde
cmc
popa
sahf
xchg
test
push
addr16
mov
push
xchg
call
xchg
pop
push
inc
add
push
sbb
popa
inc
loope
or
cld
sti
mov
retf
mov
cmps
call
cmp
scas
repz
rcr
jmp
sub
js
sub
lods
and
cs
cmps
les
or
fsubr
or
add
sti
pop
fsubr
(bad)
repnz
in
mov
adc
pop
neg
xchg
pop
adc
movs
call
jl
adc
jnp
mov
scas
out
hlt
movs
movhlps
movs
mov
dec
dec
inc
dec
call
dec
jg
scas
mov
sbb
push
pusha
fld
xchg
or
mov
ret
inc
adc
dec
jo
int3
add
ja
lea
cwde
lds
xor
adc
fstp
inc
aas
sbb
je
pop
push
popa
ins
xchg
mov
hlt
movs
movs
and
mov
call
mov
xor
inc
adc
and
push
into
push
push
movaps
arpl
test
push
icebp
adc
out
push
dec
xor
mov
mov
add
scas
dec
nop
mov
popa
into
int3
cmp
jmp
dec
mov
or
mov
(bad)
popf
scas
cmp
ror
jge
lods
jnp
(bad)
das
aam
mov
push
inc
push
jb
dec
fsubr
inc
aaa
aaa
push
inc
xchg
jl
inc
xchg
rol
int
pop
xchg
mov
retf
xchg
push
lahf
(bad)
cdq
(bad)
ss
pop
aaa
mov
jg
nop
xor
pop
out
outs
cmp
mov
nop
pop
xchg
movs
movs
outs
sub
adc
cmp
pop
inc
lahf
cld
dec
mov
mov
push
in
or
sbb
out
jmp
jo
shr
add
test
add
in
cmc
adc
mov
jmp
jmp
inc
or
xor
and
test
xor
mov
dec
pop
or
mov
cmps
sub
cld
mov
inc
fld
jb
mov
mov
mov
jno
and
push
inc
pop
mov
call
addr16
lock
adc
imul
(bad)
fild
loopne
pop
add
loop
daa
dec
cmps
in
popf
jno
adc
mov
cli
inc
mov
aad
cdq
and
ins
mov
sbb
dec
xchg
inc
shl
pop
lods
lea
inc
sahf
rcr
jmp
cmp
sti
jmp
scas
bound
rcr
sub
add
loope
push
inc
sbb
jns
lods
add
push
add
push
add
stos
mov
fistp
xchg
sbb
movs
add
jecxz
or
mov
and
out
sub
idiv
call
sub
(bad)
shl
dec
enter
cmp
test
mov
in
pop
cmp
cmp
ret
jnp
bound
out
aas
mov
aad
retf
in
leave
cmp
fist
push
sub
mov
rol
dec
push
dec
xor
mov
bound
sahf
lock
xor
in
inc
dec
inc
mov
lea
add
in
je
sahf
cmp
sbb
xchg
pusha
ja
dec
cmp
and
or
bnd
add
and
jecxz
cmp
outs
ret
mov
mov
xchg
ins
gs
into
in
jae
or
and
push
pop
(bad)
rcl
iret
mov
aam
fst
data16
mov
jno
fst
lods
clc
jle
inc
pusha
test
inc
popa
sbb
inc
xchg
sub
and
dec
fidiv
pusha
xchg
dec
add
inc
imul
ror
mov
and
loopne
ficom
xor
adc
push
out
jmp
sub
dec
cmp
hlt
out
popa
or
retf
pop
ret
scas
inc
retf
popf
jo
adc
mov
jmp
push
xchg
xchg
nop
ss
dec
mov
(bad)
jo
xor
cwde
fdiv
sbb
inc
or
jbe
mov
hlt
or
dec
sub
std
jecxz
fs
add
xor
scas
hlt
(bad)
mov
add
jmp
and
nop
scas
pop
dec
fcomp
add
aas
loopne
pop
sub
ffree
fwait
add
pop
pop
dec
lods
outs
(bad)
cmp
fisub
aad
sbb
or
push
in
xchg
adc
sti
add
jb
lahf
pop
jnp
imul
jmp
shl
jae
cwde
and
rol
jmp
sbb
call
in
popa
mov
gs
adc
pop
outs
jg
pusha
fld
fdiv
jl
sahf
(bad)
scas
xlat
fwait
jmp
ret
(bad)
ret
or
fldln2
hlt
int
inc
push
jl
(bad)
inc
inc
aaa
scas
mov
into
repnz
xchg
aad
inc
ss
sbb
(bad)
ins
imul
out
sub
mov
jno
push
lock
mov
inc
pop
arpl
out
adc
in
(bad)
loope
stos
add
sbb
cmp
jae
pop
xor
mov
or
push
retf
fwait
call
jp
loope
sub
and
and
jbe
scas
jbe
(bad)
xor
cmp
jmp
adc
pop
sbb
(bad)
cld
jnp
xchg
mov
inc
mov
data16
fdivr
mov
iret
scas
mov
(bad)
fbstp
in
sbb
jbe
hlt
xchg
sub
ss
xchg
mov
pusha
popf
add
pop
or
and
dec
add
adc
loopne
mov
aad
push
lds
mov
xchg
(bad)
das
int
add
mov
xor
loope
in
adc
dec
movs
cld
lock
loop
lahf
lds
inc
mov
add
in
push
stos
and
std
int
push
add
cmc
mov
push
jmp
les
xchg
xchg
pop
shl
out
add
retf
push
pop
dec
(bad)
and
and
pusha
sar
dec
inc
repz
fbstp
das
dec
scas
fsubr
or
mov
mov
shr
in
cmp
icebp
pop
ins
lock
mov
shl
and
jp
and
and
xor
jns
push
lods
dec
mov
pop
leave
fimul
rcl
and
into
retf
mov
jns
dec
and
cmp
popf
or
stos
movs
push
and
scas
pop
movs
dec
push
mov
leave
scas
push
xchg
and
xchg
mov
dec
or
cmps
push
outs
pop
out
imul
jp
daa
or
aas
jmp
inc
push
nop
stos
inc
mov
inc
sti
pop
and
(bad)
fucom
jmp
in
ret
pop
adc
dec
and
(bad)
xchg
movs
fcom
scas
popf
(bad)
mov
mov
out
jecxz
popf
addr16
inc
movs
jae
add
nop
dec
nop
mov
sar
xchg
fcomp
pop
cdq
pop
and
push
xchg
push
pop
loopne
clc
fmul
rol
scas
pop
movs
mov
lods
cmc
xor
test
push
je
adc
mov
rol
clc
bound
fdivr
pop
mov
jo
cmp
popa
mov
mov
dec
mov
pop
cmp
ror
sub
xcrypt-cbc
cmps
xlat
lods
push
cmp
inc
dec
data16
fisub
mov
hlt
or
adc
xor
add
sbb
sub
mov
add
addr16
shl
call
call
hlt
jg
lahf
adc
xchg
and
pop
or
aaa
rcl
pusha
mov
pop
jecxz
inc
jae
and
lds
das
xchg
inc
and
outs
adc
push
popa
sahf
mov
jg
adc
fs
dec
rcl
mov
js
push
lahf
pop
fs
or
in
in
imul
ror
sbb
mov
mov
fwait
repnz
repz
jecxz
sti
loopne
das
jmp
pop
inc
loope
pop
nop
std
(bad)
sbb
pop
jmp
sbb
and
dec
push
sbb
and
test
mov
stos
test
xor
xor
and
push
fsub
or
cwde
mov
push
fisubr
cmp
and
inc
ret
sahf
mov
dec
mov
jmp
adc
sbb
fisub
dec
xor
mov
jp
and
push
cdq
dec
rol
sbb
jecxz
xchg
mov
push
cmc
mov
shr
mov
adc
sub
cli
add
adc
xchg
call
aad
mov
outs
add
dec
inc
inc
daa
in
sbb
push
inc
push
in
loope
(bad)
jle
int3
aaa
and
in
sub
mov
add
gs
mov
loop
pop
cmp
icebp
push
ins
sar
adc
pushf
fcomp
lds
push
outs
test
pop
mov
aas
outs
cmc
lods
inc
call
int
jp
or
repz
push
or
push
(bad)
lods
jb
pop
imul
stos
mov
jg
inc
std
loopne
ins
stc
hlt
push
loop
dec
adc
and
leave
jg
nop
jmp
cwde
adc
cmp
mov
adc
dec
xchg
jo
push
mov
mov
test
push
sbb
loop
outs
xor
push
jne
mov
mov
xor
xlat
test
and
dec
and
xchg
popf
inc
sub
dec
fiadd
cld
gs
xor
iret
imul
jne
sti
(bad)
mov
pusha
jge
faddp
cld
push
mov
sbb
jnp
mov
jp
bound
sbb
into
pop
jp
mov
mov
or
repz
test
xchg
stos
into
icebp
xchg
sub
cwde
(bad)
or
adc
stos
cmp
mov
daa
loope
test
aaa
cwde
add
mov
into
popa
aad
sub
repnz
movs
or
or
test
cmp
dec
data16
add
push
aam
sub
jbe
cmp
aaa
cmp
sahf
fucom
xchg
imul
jmp
mov
cld
sbb
mov
mov
add
(bad)
aam
ror
clc
hlt
mov
push
cmp
mov
push
lahf
push
popa
arpl
cmp
test
xor
jne
push
push
(bad)
nop
dec
push
lock
not
push
je
fcom
int
fbstp
(bad)
mov
(bad)
out
jbe
xor
xor
movs
cmp
inc
in
shl
std
xor
(bad)
fld
mov
or
ja
mov
jae
xor
jl
xchg
xchg
retf
in
xchg
out
stos
add
dec
push
cld
push
into
push
mov
jbe
loopne
jnp
aad
sub
test
pop
int
pop
sbb
jmp
dec
aas
xor
scas
push
jbe
movs
adc
fs
add
aaa
out
fsub
push
sti
push
push
xor
mov
mov
or
sub
xchg
fiadd
mov
fwait
ret
cmp
std
dec
pusha
mov
lock
adc
dec
es
ins
push
push
rcr
lock
xor
dec
mov
js
out
mov
xchg
mov
mov
xchg
jno
cmps
test
and
jns
sahf
xchg
mov
xchg
pop
or
sub
fcomp
loop
mov
cmp
adc
add
pop
sub
aad
cwde
jmp
test
mov
jmp
icebp
(bad)
and
loop
mov
pop
xchg
inc
push
xchg
cmp
idiv
mov
xchg
and
mov
popf
pmulhuw
test
int
push
outs
sahf
inc
loopne
and
jns
push
dec
je
push
sub
mov
sub
adc
popf
add
outs
je
fisubr
adc
rcl
rcl
sub
rcl
and
inc
fs
mov
cmp
enter
nop
ret
outs
mov
inc
popa
retf
in
and
sar
and
mov
stos
jno
dec
fcmovne
psubw
mov
mov
fld
(bad)
jle
pop
shl
adc
push
test
hlt
adc
push
sub
push
fld
out
lea
or
cmp
jnp
test
imul
lea
enter
push
hlt
data16
lods
out
or
sti
lahf
push
sub
cwde
sub
mov
adc
dec
jle
imul
dec
retf
sbb
add
push
push
inc
lahf
mov
fcomp
sbb
and
push
mov
mov
aam
pop
xchg
sbb
cmp
mov
add
das
(bad)
movs
sub
push
(bad)
cmc
adc
bound
lods
sub
adc
jns
cmc
mov
pop
pop
addr16
repz
adc
pop
jo
dec
mov
cmps
fmul
sti
icebp
inc
out
arpl
mov
je
jge
shl
mov
cmc
mov
cmp
mov
dec
test
dec
dec
inc
cmp
mov
cmps
mov
cwde
retf
xor
mov
inc
cmp
xor
inc
inc
push
fild
cwde
pop
mov
sbb
hlt
dec
mov
addr16
inc
idiv
cmp
pop
and
xchg
mov
es
sbb
dec
xor
or
xor
fdivr
repnz
mov
adc
and
enter
mov
cs
iret
sar
cmp
iret
(bad)
mov
xor
sti
loop
sub
pop
push
das
and
std
inc
or
ficom
mov
mov
mov
sahf
clc
adc
mov
and
adc
fcomp
les
jb
jp
mul
mov
mov
fild
inc
add
rcl
test
data16
pop
xchg
popf
aas
and
mov
aas
sbb
mov
rcl
cmc
retf
sub
into
xlat
les
in
sbb
push
aam
push
fwait
shl
push
xchg
mov
test
popf
sub
stos
add
movs
push
mov
mov
mov
mov
mul
out
leave
xchg
popf
cdq
mov
rcr
cmps
div
inc
add
(bad)
push
(bad)
mov
pop
shl
ret
jnp
lods
pop
pop
sbb
leave
inc
xchg
ds
cmp
sbb
push
clc
pop
jnp
pop
bound
cmp
icebp
sbb
pop
scas
jl
gs
jb
fsqrt
pop
jo
push
add
xor
lods
push
sti
cmp
jns
ret
int3
cmp
jecxz
leave
push
mov
dec
nop
cli
jle
push
test
imul
ss
aad
push
xchg
or
mov
fwait
ror
adc
xor
pusha
sahf
and
xor
push
(bad)
jae
mov
ss
dec
push
sub
call
cdq
mov
xchg
dec
arpl
xchg
push
test
xchg
sbb
mov
pop
ror
popf
mov
cmc
sbb
repnz
lds
cmps
(bad)
mov
clc
pop
or
movs
dec
xor
inc
cmps
movs
or
pop
icebp
ret
(bad)
pop
ror
xor
add
cwde
(bad)
sub
out
pop
jp
sbb
pop
addr16
dec
mov
sub
pop
mov
jbe
sub
cmps
scas
sub
push
popf
inc
push
sbb
pop
xor
cmp
mov
repz
in
cld
shl
les
push
nop
rcr
and
sbb
mov
sub
adc
idiv
dec
fstp
ins
or
inc
adc
dec
inc
mov
pop
push
or
push
daa
aas
dec
xor
(bad)
jmp
movs
repnz
and
cmp
rcl
leave
outs
add
aaa
cmp
iret
cwde
jo
and
mov
jnp
aad
adc
xchg
in
mov
lock
cmp
in
mov
fs
xchg
int
dec
(bad)
rcl
mov
sub
fisttp
xchg
sahf
push
test
push
push
aad
or
inc
sub
ja
sbb
cmp
iret
std
dec
inc
jge
jnp
(bad)
fmul
or
push
lsl
mov
and
sub
in
ret
mov
sub
xor
xor
fbld
fmul
pusha
pop
lock
inc
loopne
(bad)
dec
dec
sbb
sbb
daa
fs
cld
rcl
and
mov
jmp
dec
sbb
pop
ror
jo
xchg
jns
(bad)
pop
ja
jno
mov
(bad)
cmp
retf
std
xor
in
mov
and
xor
fbld
mov
in
jae
mov
shr
mov
jo
xchg
mov
mov
fwait
addr16
and
jnp
paddusb
xchg
xor
aad
dec
shl
into
push
cmps
mov
inc
pop
bound
inc
cld
int
pop
cmp
loope
mov
push
mov
and
jg
imul
mov
pusha
jnp
mov
in
sub
aaa
or
xchg
std
or
xchg
clc
lfence
jg
dec
popa
inc
add
ret
lods
std
sbb
mov
(bad)
fist
nop
cli
jb
std
cmp
mov
loop
or
loop
lods
das
ja
leave
xor
(bad)
ins
mov
jmp
push
push
xchg
push
in
call
inc
dec
cdq
loop
dec
xor
mov
pop
sbb
sub
test
fcmove
retf
and
out
lock
cmps
dec
iret
mov
shld
mov
xor
mov
cmc
iret
pop
mov
adc
ficom
neg
pop
jmp
and
sub
mov
int3
div
mov
add
mov
jb
retf
mov
push
mov
sbb
call
shr
xchg
pop
add
je
ror
addr16
retf
out
push
mov
pop
jmp
inc
fild
xchg
dec
add
js
adc
fmul
push
retf
clc
pop
lahf
inc
call
ret
fisttp
enter
inc
or
ror
es
sar
push
jecxz
inc
mov
leave
mov
mov
inc
mov
xchg
jno
aad
ins
and
(bad)
sub
sar
mov
sbb
fwait
cs
call
mov
(bad)
inc
or
push
daa
or
push
std
add
mov
push
xchg
shl
mov
xchg
les
adc
mov
xor
fs
std
retf
out
cmp
pop
pop
cmc
adc
sbb
xchg
ret
lds
lahf
cmp
adc
jne
in
jle
pop
cmc
out
sub
test
add
jle
xor
pop
retf
enter
sbb
sub
cmp
push
or
repz
mov
inc
out
sub
add
clc
push
pop
pop
push
mov
and
in
push
inc
pusha
cs
xor
or
mov
aaa
cmps
std
xor
cdq
adc
ret
pop
cli
fldcw
or
mov
mov
jmp
test
cmps
aam
fnstcw
es
iret
repz
inc
pop
cs
sub
or
xlat
xor
adc
and
dec
and
sbb
(bad)
js
out
cmps
rcr
xor
mov
popf
dec
stos
mov
xor
in
mov
icebp
das
movs
push
pop
jnp
pop
test
iret
iret
adc
jne
adc
lods
gs
and
and
mov
jecxz
addr16
loopne
and
rcr
mov
sub
ret
(bad)
aad
movs
fisttp
pop
mov
jl
(bad)
mov
mov
jmp
icebp
imul
sbb
and
push
jge
cli
addr16
sub
je
lods
and
jp
adc
fild
cmc
cli
cmp
jne
iret
xor
cmp
inc
lds
stc
nop
push
cmp
sbb
sbb
push
int3
xor
lods
sub
adc
adc
cmp
jg
test
sbb
jp
push
mov
jmp
adc
stc
add
stc
and
cwde
push
xchg
or
lock
jnp
or
data16
loop
push
inc
outs
mov
mov
idiv
adc
aaa
gs
nop/reserved
dec
stos
test
test
ins
clc
xor
add
jb
jp
xor
pop
nop
jno
mov
mov
cld
mov
repz
test
cli
push
xchg
scas
out
dec
push
add
stc
arpl
data16
test
movs
(bad)
or
xchg
ja
(bad)
lods
int3
sti
jns
adc
call
push
std
add
or
add
mov
push
push
std
jmp
rol
and
or
push
fadd
jmp
call
or
leave
mov
ds
push
je
adc
jp
pushf
inc
in
sbb
ficomp
cli
adc
push
xchg
dec
or
jg
add
loope
adc
inc
imul
cmp
in
xchg
mov
xor
cld
outs
jae
sub
push
adc
ss
xchg
xchg
add
clc
mov
rcr
jnp
retf
fstp
sbb
das
pop
jns
xchg
es
sbb
or
add
cmp
adc
loopne
rol
repz
loope
jns
std
enter
pop
jns
stc
sub
imul
xor
imul
push
fimul
sbb
mov
lods
leave
retf
call
out
mov
add
dec
inc
js
jmp
and
in
pop
pop
imul
sbb
cmc
retf
inc
pusha
int
std
fs
lea
(bad)
and
pop
sub
dec
call
adc
movs
sub
push
out
call
mov
popf
pushf
dec
sub
lahf
dec
es
imul
mov
stos
retf
fild
and
hlt
in
stc
or
and
retf
xor
xor
cmp
xor
lds
ror
fcomp
sub
loope
movs
mov
xchg
inc
and
cdq
inc
movs
push
ret
mov
pop
inc
inc
sbb
in
retf
lods
mov
bound
das
push
mov
shl
adc
lds
xchg
jbe
fwait
into
xchg
(bad)
fmul
loop
xchg
in
dec
(bad)
sub
scas
scas
jl
in
push
add
leave
push
mov
stc
push
jno
jo
sti
test
in
mov
popf
xlat
dec
or
in
mov
push
iretw
adc
xor
rcl
repnz
and
stos
data16
das
in
mov
push
cli
movs
dec
test
dec
jmp
xchg
inc
and
ret
ret
(bad)
mov
mov
mov
outs
pushf
and
aam
ss
jno
ror
pop
or
mov
pop
hlt
dec
pop
or
(bad)
scas
lds
movs
js
xchg
adc
push
repnz
push
mov
mov
sub
imul
dec
jns
xchg
mov
dec
(bad)
push
frstor
(bad)
push
daa
aaa
and
jp
jmp
push
xchg
xor
pop
sub
cmps
sbb
aam
sbb
xor
lahf
xlat
stos
(bad)
out
shr
jne
cmps
xor
cmp
(bad)
shl
and
mov
and
cmp
aas
popa
imul
pop
lock
enter
lds
ds
jnp
sub
sub
xor
stos
and
push
iret
sbb
push
test
push
(bad)
das
pop
xor
xor
jae
push
mov
and
mov
fcomp
mov
in
dec
jae
xor
sub
std
xor
cmp
je
in
mov
imul
outs
or
cmc
sbb
mov
sub
jp
pop
sbb
stc
and
and
popf
or
xchg
scas
jnp
cli
js
xchg
(bad)
cmp
mov
into
push
test
cdq
add
lds
push
addr16
dec
mov
test
push
jae
or
xrelease
mov
inc
sub
sbb
je
jle
(bad)
clc
dec
div
out
mov
push
lods
std
xchg
ss
and
or
jmp
cs
stos
lds
and
(bad)
lds
pop
iret
xor
in
nop
shl
xchg
jnp
movs
xchg
ror
and
sbb
and
add
push
out
sbb
fistp
jne
jmp
fild
push
test
call
mov
or
stc
mov
fisttp
fist
mov
daa
mov
jle
(bad)
push
push
cmp
xor
jae
fs
imul
dec
pop
arpl
mov
sub
dec
fcomp
sbb
xor
xchg
sub
xchg
mov
mov
add
lods
je
inc
or
mov
pop
fimul
cs
jne
ror
loop
mov
sub
mov
inc
sub
aas
fndisi(8087
jmp
push
xchg
das
loope
push
fsubr
pop
cmp
stos
retf
cmps
jbe
lahf
jb
lea
outs
lea
data16
mov
test
test
sbb
stc
aam
sub
movs
dec
dec
fidivr
pop
and
addr16
outs
and
cld
jno
cmp
(bad)
fst
jns
popf
add
loop
fisubr
jg
mov
add
pop
push
xor
cld
sub
out
dec
sub
pusha
pop
scas
lods
inc
das
push
fcomp
add
pop
adc
push
and
xchg
out
lds
test
ja
mov
pushf
ret
adc
int3
xor
or
cmp
cmp
out
shl
or
out
test
scas
cmps
push
pop
xchg
mov
sbb
jns
inc
dec
outs
push
add
(bad)
jge
dec
int3
jae
and
or
sbb
fsincos
mov
fmul
xchg
test
lahf
pop
mov
repnz
xor
jle
fmul
dec
les
cmp
inc
xor
or
xor
add
bound
inc
pop
inc
pop
ret
lods
pushf
mov
fxch
mov
mov
cdq
mov
or
data16
mov
(bad)
push
jae
mov
aad
hlt
imul
icebp
scas
xchg
xchg
ja
(bad)
mov
cwde
into
shl
and
sub
retf
hlt
pusha
mov
(bad)
push
dec
lahf
out
push
and
movs
inc
mov
(bad)
sti
cld
pop
or
in
mov
jns
jmp
adc
popf
lea
dec
neg
mov
lods
or
shr
xchg
pop
lahf
outs
and
pop
fucomi
(bad)
repz
out
loopne
jge
in
push
das
aam
psllq
loop
enter
jbe
push
(bad)
loop
es
xlat
sbb
aas
jo
icebp
idiv
mov
push
or
ret
pop
fisubr
xor
js
jae
pushf
or
jb
aam
push
dec
out
repz
push
xor
jb
aam
mov
mov
imul
xchg
(bad)
sub
mov
(bad)
in
and
adc
pop
xor
adc
adc
pop
adc
jecxz
bound
sub
push
(bad)
mov
mov
mov
jb
sbb
fist
mov
mov
pop
pop
dec
add
jb
push
dec
stos
sbb
mov
mov
repnz
mov
pop
lds
lock
jl
jge
out
push
in
xor
movs
ins
adc
aas
dec
xchg
cmp
mov
push
and
mov
push
mov
mov
adc
ror
dec
xor
retf
ror
fiadd
sbb
ins
aam
not
mov
or
imul
jmp
rcl
pop
aam
add
in
loope
js
inc
lods
add
dec
fiadd
lods
sub
mov
cmps
lock
sbb
mov
fistp
data16
xchg
fldcw
sbb
das
scas
xor
mov
cmp
sub
(bad)
out
cmp
outs
sbb
mov
xchg
cld
add
jp
test
adc
jge
aas
(bad)
or
fbld
mov
dec
mov
out
adc
inc
dec
popf
pop
push
inc
dec
mov
jnp
adc
loope
cdq
pop
jnp
sub
gs
imul
mov
push
paddq
daa
iret
popf
xchg
xlat
pushf
loope
int3
in
pop
push
jp
stos
daa
call
loop
adc
pop
or
jg
and
xchg
stos
mov
and
in
xor
fldenv
mov
(bad)
int
and
stc
cmp
fdivr
scas
dec
in
xor
push
mov
ins
sbb
add
das
retf
pop
add
pop
jno
pop
repz
jno
stos
pop
inc
int
or
jmp
push
xchg
je
push
test
push
ins
sub
sub
push
sub
mov
(bad)
add
mov
mov
leave
rcl
adc
in
mov
pop
inc
retf
sbb
in
lds
icebp
xchg
lea
call
jge
int
mov
sub
jmp
adc
ss
dec
sbb
(bad)
inc
cmps
rol
push
xchg
sbb
xchg
aam
add
out
sar
cli
mov
int3
unpckhps
sbb
test
test
rcl
sbb
and
out
and
jae
in
stos
cmp
sbb
ds
jns
es
rcl
xchg
in
idiv
daa
pop
sub
imul
sub
xor
(bad)
xchg
xchg
fcom
pop
int3
popa
jne
xlat
sar
mov
xchg
icebp
mov
mov
call
jg
mov
push
push
fisubr
push
adc
(bad)
adc
shl
fwait
inc
inc
and
pop
adc
cmp
ret
push
retf
paddusb
fsub
(bad)
adc
enter
mov
and
jno
xchg
(bad)
mov
(bad)
mov
jne
int3
lea
xor
ret
nop
push
add
in
xchg
sahf
mov
cdq
mov
add
cmc
popa
mov
ds
stos
dec
call
mov
call
outs
mov
push
imul
and
and
movs
aas
and
mov
pop
sbb
clc
mov
into
mov
xor
ins
cmps
dec
fistp
arpl
clc
cmc
cmp
ss
dec
das
sti
mov
cli
or
ins
movs
fs
inc
mov
inc
fst
and
int3
repnz
cmp
rcr
in
cs
sub
sti
mov
cmp
gs
test
xor
ror
cwde
js
out
xor
rol
pop
inc
pop
out
ret
and
ins
call
cld
mov
sahf
add
int3
cmp
mov
icebp
jge
jg
jl
les
sub
sbb
jle
adc
retf
outs
fsubr
adc
dec
jns
and
pop
lds
retf
xor
in
(bad)
and
inc
gs
sub
fwait
aam
(bad)
loopne
push
imul
pop
fprem
jnp
nop
push
cmp
out
mov
dec
sbb
sub
jns
or
xchg
out
mov
outs
mov
lea
arpl
gs
sbb
add
mov
sub
mov
pop
lea
fist
push
pusha
mov
push
test
cmp
and
lea
add
into
(bad)
and
add
xchg
and
push
aas
add
outs
push
and
movs
mov
ins
mov
pop
(bad)
inc
int
aam
jns
(bad)
jnp
imul
pop
xor
cld
je
xchg
or
mov
mov
test
cwde
push
fmul
mov
sub
xchg
inc
es
sub
scas
cmc
add
dec
pop
xor
jmp
(bad)
xor
mov
gs
enter
jbe
imul
shl
push
jmp
or
mov
shr
loopne
xor
mov
pop
fst
push
sbb
pop
outs
add
lds
lock
mov
imul
push
push
mov
mov
xchg
adc
dec
fwait
jmp
fimul
mov
push
inc
data16
xchg
int
sub
hlt
xor
cmp
aas
ret
sahf
stos
call
and
ror
dec
rcl
jo
fs
adc
jns
lea
(bad)
jb
test
outs
push
push
ds
jne
push
xor
repz
mov
or
imul
jmp
jge
call
xchg
mov
mov
shl
mov
in
mov
lods
rol
and
xchg
std
sub
adc
mov
add
and
ss
cmp
sti
stos
jge
ins
ret
xor
aas
dec
std
add
mov
add
mov
dec
(bad)
ins
cmp
data16
cmps
iret
push
sti
push
aas
adc
inc
xor
xchg
cmps
in
dec
ds
or
dec
cld
cmp
and
sub
and
push
inc
scas
mov
(bad)
js
ins
cmp
pop
inc
and
cmp
xchg
out
out
fmulp
and
rol
in
imul
add
addr16
loop
push
jle
adc
dec
pusha
cld
cmp
add
jbe
mov
mov
xor
jno
jl
aas
cmps
add
shl
mov
mov
(bad)
xchg
gs
adc
icebp
sti
xor
jne
inc
pop
mov
int3
(bad)
imul
dec
xchg
in
mov
inc
mov
mov
pop
add
inc
shl
mov
mov
(bad)
cli
sar
test
xor
dec
jnp
clc
dec
xchg
adc
xor
push
outs
adc
jge
mov
je
rol
(bad)
movs
leave
(bad)
cmp
mov
sahf
(bad)
aad
xor
ret
mov
(bad)
outs
out
fidiv
mov
dec
sbb
sub
and
add
mov
data16
jnp
fld1
mov
das
daa
push
mov
pop
retf
cmp
fisubr
lahf
fst
xor
in
lods
repz
xor
cmp
inc
mov
syscall
out
rcr
(bad)
jmp
ss
test
aaa
inc
xchg
into
in
sub
xchg
jbe
sub
mov
pop
sbb
leave
sbb
mov
pop
and
gs
inc
gs
cli
or
inc
ficom
lods
popf
xlat
jne
shl
fadd
jmp
out
push
xchg
icebp
mov
sbb
arpl
and
rcl
cld
sub
in
mov
xor
inc
cmps
into
or
icebp
aas
jbe
lahf
stos
shl
inc
jmp
mov
outs
dec
cmp
cmps
push
pop
pusha
sub
inc
mov
idiv
cli
test
fild
mov
adc
data16
sbb
cmp
add
mov
pavgw
mov
mov
and
cmps
outs
mov
into
mov
xor
sub
(bad)
lds
cmp
in
sahf
xchg
jmp
mov
mov
stos
repnz
and
mov
ins
ror
xor
std
mov
outs
adc
arpl
sub
dec
or
mov
ficomp
(bad)
out
imul
xchg
test
and
xor
je
push
inc
mov
dec
popf
xchg
push
retf
ss
fdivr
pop
inc
xchg
outs
push
pop
mov
pop
pop
inc
lods
repz
mov
and
call
mov
fistp
inc
ficomp
mov
and
dec
inc
rcr
fild
mov
in
mov
daa
ss
pop
in
ror
pop
popf
add
(bad)
adc
jge
push
mov
xchg
xchg
xor
or
call
test
repz
test
jp
mov
inc
xor
outs
cmc
ror
jbe
popf
adc
loop
je
aaa
std
inc
push
fcmovb
pop
adc
gs
popa
not
out
rcr
les
loop
sbb
adc
cwde
xor
sub
(bad)
push
call
shl
xor
mov
das
fwait
xor
jmp
icebp
aas
data16
push
sar
div
rol
mov
int
pusha
in
pop
and
inc
xor
add
out
retf
xchg
and
loop
out
cmps
shl
pop
out
cli
in
adc
ja
add
ds
and
xchg
leave
nop
ret
sbb
or
lds
dec
jne
jmp
pop
sub
and
gs
inc
mov
cmp
into
bound
addr16
mov
sbb
xlat
daa
aas
(bad)
inc
add
test
(bad)
pusha
fmul
jp
and
sbb
clc
mov
inc
adc
movntps
sub
push
imul
and
lods
imul
loop
bound
movs
dec
je
push
jae
inc
not
sub
in
sub
mov
pop
fcmove
sub
out
ja
movs
pop
clc
jp
loope
ss
and
sar
jl
arpl
push
jle
push
loope
push
inc
retf
idiv
mov
popa
adc
leave
pop
data16
shr
mov
push
bound
icebp
test
or
nop
fwait
in
lods
sub
inc
ins
call
(bad)
(bad)
mov
in
xor
inc
dec
or
mov
jne
ror
sbb
xchg
mov
push
std
and
call
push
pusha
xor
rol
aaa
std
pop
jp
cmps
inc
in
retf
sti
mov
mov
rcl
icebp
mov
js
sbb
sbb
sub
mov
pop
fistp
sub
lods
gs
dec
test
mov
loope
mov
ret
adc
leave
mov
je
ds
lahf
push
cld
stc
bound
adc
xor
inc
pop
fisttp
xlat
cdq
mov
and
xor
push
mov
ja
(bad)
shl
bound
and
stos
test
mov
push
vprotw
dec
mov
or
fdiv
and
clc
xchg
les
ja
fcom
mov
cmps
dec
or
stc
aam
jmp
xchg
sbb
adc
out
not
xchg
jp
jns
mov
call
sbb
(bad)
xlat
psubsw
fsubr
fdiv
fsub
push
mov
push
mov
sbb
or
iret
nop
xor
iret
aas
ret
push
xor
xchg
stos
fimul
retf
or
out
div
inc
loopne
imul
push
mov
xor
je
pop
(bad)
cmp
clflush
push
sbb
into
adc
sar
adc
add
mov
mov
xor
pop
fidivr
sbb
mov
add
sub
adc
mov
jecxz
dec
xor
sub
ret
loop
repz
inc
js
ret
xor
push
jb
pop
imul
retf
shl
das
rcl
out
dec
sti
dec
xor
cmp
cmp
int
and
jle
sub
sbb
cmc
loop
mov
add
push
or
repz
fcomi
push
mov
test
pop
mov
jmp
fisttp
outs
outs
cmps
dec
addr16
lea
fucomi
mov
in
inc
jecxz
xchg
cdq
push
(bad)
cmp
cld
(bad)
gs
jbe
mov
int3
mov
std
push
pop
or
pop
leave
push
out
scas
mov
cmc
cs
stos
in
jno
test
out
ret
xchg
daa
jp
mov
shl
leave
dec
ins
out
in
adc
mov
in
or
mov
fwait
adc
leave
dec
lock
stc
inc
dec
fmul
jp
out
pop
dec
test
sbb
ss
icebp
mov
mov
jge
mov
ins
mov
inc
lods
cs
fwait
movs
and
popa
into
sub
lods
xchg
aaa
jno
xlat
inc
lods
lock
mov
gs
mov
inc
inc
aad
xor
movs
adc
jo
ret
mov
retf
and
mov
mov
mov
sbb
mov
mov
xchg
and
mov
ds
test
(bad)
sub
das
inc
jl
dec
js
retf
mov
xor
or
mov
mov
scas
aas
(bad)
jnp
out
inc
repnz
fld
add
xchg
push
cmp
cdq
fwait
jmp
push
sub
out
inc
pop
loop
pop
(bad)
dec
dec
leave
outs
rol
mov
int
adc
dec
fs
mov
in
lea
sub
fiadd
daa
shl
inc
movs
xchg
pop
arpl
adc
xchg
repz
daa
arpl
or
aam
adc
aam
aam
or
jnp
xor
out
neg
ss
(bad)
sub
pop
and
mov
repz
iret
xchg
jecxz
test
jne
movs
jmp
or
adc
mov
add
js
add
inc
jae
mov
add
push
aam
jb
add
lods
mov
cmc
mov
dec
rol
mov
jmp
ror
cli
jb
mov
aam
leave
(bad)
ss
fcomp
pushf
add
jmp
add
in
ins
dec
in
pop
outs
sbb
pop
mov
sbb
repz
pop
and
xor
and
jmp
mov
fmul
push
push
sbb
cdq
imul
dec
push
xor
jno
mov
call
scas
rol
repz
push
mov
movq
cwde
in
mov
mov
retf
(bad)
int
ror
mov
clc
pop
mov
scas
pop
mov
fwait
ret
cli
cli
dec
inc
cmp
cmps
mov
pusha
ins
fdiv
lea
jns
test
ins
mov
mov
jge
mov
movs
cld
or
out
movs
push
xor
xor
(bad)
jp
inc
mov
or
sbb
iret
xchg
cdq
push
pop
push
mov
push
push
add
adc
mov
push
ret
sti
out
mov
push
addr16
inc
mov
mov
in
and
jns
test
fsub
std
pop
lds
popa
mov
sub
sar
sbb
dec
loop
nop
das
pop
push
dec
mov
xor
pop
push
mov
clc
aaa
jb
(bad)
jmp
sub
sub
ficomp
dec
loop
adc
dec
jmp
pop
mov
repz
mov
sbb
adc
sbb
cmp
pop
xor
pop
in
(bad)
sub
nop
push
and
mov
rol
inc
adc
sub
fs
xor
xchg
dec
fistp
xchg
inc
or
sbb
in
scas
fist
xor
out
pop
xor
push
mov
cmp
fidivr
popf
sti
adc
int
popf
fs
cmp
or
adc
push
test
cmp
sbb
ret
sub
pusha
adc
mov
xchg
bound
mov
or
fst
add
sbb
call
inc
jp
in
dec
retf
gs
xor
mov
cdq
cmp
cmps
ret
sbb
dec
loopne
jmp
pop
stos
pop
xchg
mov
cmp
xor
test
repnz
add
adc
sub
(bad)
cs
inc
xor
es
pop
mov
push
popf
rcr
out
outs
je
pushf
xchg
xor
and
mov
sbb
xchg
arpl
je
(bad)
sub
xor
dec
add
stos
or
and
(bad)
jecxz
sub
adc
test
cmp
das
mov
mov
push
stos
scas
es
sbb
(bad)
xchg
sbb
test
ret
xor
dec
mov
cmp
jnp
and
iret
je
jl
pop
sti
stc
and
cli
add
out
ja
ret
repz
in
shl
adc
pop
fmul
jl
mov
mov
arpl
and
mov
ret
jo
sbb
pop
mov
stos
xlat
xor
fsub
mov
jl
and
push
push
or
cmp
sbb
outs
mov
xchg
icebp
push
jmp
ins
add
jb
sub
in
inc
mov
fadd
movs
sbb
cmp
sbb
mov
nop
jmp
push
pop
sub
js
mov
out
xchg
and
out
mov
jecxz
jg
inc
inc
xchg
xor
add
aam
daa
cld
mul
cmp
push
push
daa
add
cmp
mov
mov
movs
fsubr
inc
inc
and
mov
popa
pop
sub
loop
dec
mov
xor
imul
fild
jae
in
mov
lahf
sbb
and
xchg
ss
jmp
jnp
jno
jl
es
add
dec
(bad)
enter
adc
mov
sahf
ficomp
sub
retf
mov
xor
ror
mov
pop
pusha
sbb
in
adc
in
movs
sub
std
fild
enter
jecxz
or
push
and
dec
jo
outs
pop
and
mov
stc
jno
jl
std
jnp
mov
in
mov
adc
inc
jge
cmp
push
call
push
adc
repz
bound
ret
out
shl
push
mov
cli
cmp
popa
popa
add
mov
lock
in
jecxz
retf
xchg
xlat
mov
dec
inc
(bad)
add
add
jle
cs
idiv
xor
test
retf
sub
fwait
add
sbb
std
in
rol
dec
ret
mov
sub
push
subps
sub
out
cwde
ror
and
xchg
(bad)
add
loope
xor
aaa
sub
add
mov
cmp
(bad)
je
xchg
push
ja
mov
jg
mul
pusha
iret
inc
pop
pop
add
cmp
pop
or
fimul
adc
and
outs
(bad)
mov
sub
(bad)
add
mov
or
jno
mov
jbe
into
adc
arpl
cmp
adc
aad
ffreep
inc
call
push
dec
jae
stos
enter
clc
repz
or
xor
scas
push
test
fsubrp
mov
cmp
xor
enter
cwde
pop
sbb
xchg
cdq
inc
sub
or
mov
rcl
imul
in
lea
adc
adc
stos
mov
rcr
xor
pop
push
adc
shl
les
ss
int
mov
cld
stos
mov
cld
cdq
adc
mov
dec
test
rcl
inc
jnp
or
mov
pop
shl
test
push
cmp
std
movs
pop
push
push
push
inc
push
or
in
xor
xchg
mov
or
aam
sbb
push
jmp
xor
ret
rol
pop
sbb
xchg
bound
cmp
repnz
in
and
mov
rol
pop
cs
cmp
(bad)
retf
(bad)
in
pop
or
mov
xchg
cmp
dec
and
push
in
sbb
test
cmp
aaa
cmc
pop
dec
(bad)
add
jmp
cmp
fbld
xchg
out
daa
push
sub
loope
lods
mov
push
stos
mov
jae
dec
test
push
inc
push
pop
sti
jmp
and
test
mov
add
xchg
out
mov
cmp
cmc
jne
xchg
or
mov
sub
sub
mov
push
bound
and
mov
add
mov
hlt
ins
ss
mov
mov
ja
mov
retf
sub
push
(bad)
in
jae
not
push
mov
mov
xlat
mov
sub
sbb
movs
js
xchg
(bad)
dec
add
sbb
pop
sbb
(bad)
inc
jp
cld
pop
fist
mov
mov
inc
xchg
jo
imul
fstp
cli
push
and
mov
cwde
xor
push
sbb
add
pop
stc
jnp
pmuludq
pop
das
das
nop
mov
xor
les
fadd
sbb
retf
das
jmp
aam
shr
mov
add
dec
(bad)
add
ss
ret
mov
cwde
add
jmp
push
jns
hlt
jcxz
sbb
sub
sbb
fild
int3
pop
je
daa
jecxz
ret
fist
push
adc
jmp
rcr
cmp
adc
xchg
mov
das
xor
pop
inc
fcomp
fmul
frstor
adc
aam
adc
shl
scas
mov
inc
ret
test
xor
jae
pop
xchg
daa
std
shl
or
hlt
fadd
es
xchg
bound
pushf
sub
mov
call
push
pop
mov
inc
jge
pushf
ins
test
lock
push
xchg
arpl
in
imul
sahf
jmp
bound
(bad)
or
xor
dec
sub
les
int3
icebp
jae
jmp
inc
popf
add
dec
inc
mov
adc
sub
jae
lea
fwait
jecxz
xor
icebp
jnp
jns
xchg
push
out
mov
dec
push
and
or
lods
jecxz
(bad)
sar
fiadd
sbb
sbb
bound
test
aas
gs
jns
sbb
jae
leave
add
mov
(bad)
sahf
sbb
cmc
xchg
sub
lea
out
mov
test
xor
mov
nop
loopne
and
jp
xchg
(bad)
movs
and
mov
lahf
js
ins
or
test
in
or
inc
(bad)
fwait
sbb
int3
pop
and
push
xor
rcr
inc
push
loope
dec
jl
int
pop
mov
pop
mov
jle
out
dec
cli
adc
sub
(bad)
stc
push
clc
imul
add
(bad)
mov
gs
xor
popf
shl
(bad)
fnstcw
inc
aad
add
dec
lock
pop
dec
jae
mov
scas
lods
and
scas
out
nop
call
outs
ss
xchg
sbb
int
mov
fadd
out
cmp
mov
sbb
cmp
xor
pusha
xlat
popf
add
mov
cmp
pop
sub
sub
dec
rcr
and
popf
jo
jle
xlat
pop
push
sub
mov
pushf
loop
mov
stos
jl
std
jp
fmul
jns
loope
and
int3
lock
js
mov
mov
addr16
stc
xchg
fimul
mov
(bad)
and
js
enter
call
dec
test
test
je
stos
xlat
cli
or
in
xor
cmps
aaa
inc
nop
cld
dec
mov
jmp
xor
aad
mov
ror
pop
jns
add
sub
cmp
lds
gs
and
out
xor
jb
imul
xlat
inc
push
aaa
sbb
inc
adc
mov
push
das
sub
lea
inc
adc
ror
sbb
sbb
lock
ins
dec
arpl
mov
pop
mov
scas
pop
jg
nop
arpl
push
sbb
inc
mov
not
retf
dec
popf
and
stos
push
dec
addr16
ret
add
mov
push
sbb
(bad)
mov
add
int3
out
test
adc
cwde
retf
jge
fcomp
adc
(bad)
jp
mov
cmp
loope
xchg
xor
aam
ss
sahf
rcr
fcom
mov
ja
or
stc
dec
sub
popf
pop
ficomp
sub
cmp
aam
mov
mov
add
or
sahf
stos
add
out
mov
and
mov
sub
out
fisttp
cmp
and
es
clc
movd
imul
mov
sbb
scas
std
adc
addr16
loop
mov
lods
(bad)
xor
out
pop
sub
sahf
or
cld
jno
mov
popa
xchg
jb
cmps
xor
pop
cmp
inc
(bad)
popf
and
mov
mov
fmul
pop
jp
inc
inc
iret
int
dec
pop
(bad)
jmp
aaa
sub
jbe
sub
mov
mov
jle
adc
movs
mov
and
retf
fiadd
leave
movs
sar
fsubr
xor
inc
retf
sahf
jmp
jg
in
addr16
xchg
push
sbb
xchg
xor
mov
push
or
xchg
dec
adc
mov
gs
lea
daa
jmp
pop
and
push
mov
jg
push
xor
pcmpgtb
push
in
out
retf
sub
addr16
xchg
inc
(bad)
(bad)
into
fld
add
out
push
sbb
(bad)
jmp
jmp
sub
(bad)
in
mov
adc
add
sar
and
push
data16
jmp
jl
daa
pop
out
mov
(bad)
neg
mov
aas
mov
retf
mov
mov
or
mov
xchg
imul
pop
test
mov
sub
mov
pusha
daa
dec
test
xchg
scas
cmp
fdiv
fistp
retf
pop
inc
adc
pop
stos
(bad)
mov
leave
cmp
fsubp
pushf
jecxz
add
les
push
retf
adc
mov
jne
add
js
outs
(bad)
(bad)
ss
push
call
(bad)
rcr
jb
dec
pop
add
mov
or
aam
or
clc
jecxz
mov
test
cmp
(bad)
jmp
push
jmp
mov
out
cmp
lods
pop
call
das
xlat
fcom
xchg
gs
retf
loopne
adc
inc
movs
cmp
add
rcr
popf
sahf
cmp
(bad)
out
popf
shr
sbb
xor
inc
inc
shl
xchg
xchg
mov
inc
pop
inc
sub
mov
in
jae
sbb
popa
or
dec
dec
add
pop
mov
cmps
aaa
and
dec
pop
adc
inc
and
jno
shl
xor
(bad)
std
outs
jl
rcr
(bad)
loopne
sub
mov
dec
mov
adc
(bad)
retf
sub
pushf
scas
in
pushf
dec
test
xor
pop
scas
or
mov
push
scas
lock
leave
ja
(bad)
dec
dec
cs
pushf
ins
in
outs
fwait
mov
stos
mov
(bad)
xchg
in
mov
retf
(bad)
out
cmp
sbb
sbb
fidivr
lds
not
retf
int3
adc
jnp
ror
into
les
movs
or
daa
je
pusha
test
sub
icebp
mov
ret
ja
xchg
adc
sub
test
scas
outs
jecxz
js
xchg
psadbw
pop
jmp
(bad)
jmp
jb
and
sub
add
(bad)
data16
add
jmp
nop
xchg
xor
ins
fwait
dec
xchg
xchg
enter
mov
mov
test
loop
ss
pop
adc
jmp
mov
rcr
fild
out
or
and
rcl
add
jecxz
mov
and
mul
add
imul
test
inc
push
dec
call
cmps
(bad)
sub
pusha
pop
inc
mov
jp
mov
daa
pop
xor
daa
test
jnp
push
gs
mov
sbb
stc
adc
xchg
inc
and
imul
lods
jmp
or
pop
out
sbb
add
add
pop
push
movs
xchg
fld1
adc
cmp
out
pop
scas
cmp
sar
or
mul
adc
jmp
mov
xchg
pop
(bad)
dec
or
inc
xor
inc
xchg
jb
cli
outs
ja
mov
jmp
or
xchg
add
xor
pop
or
pop
adc
cwde
fwait
adc
mov
adc
and
enter
lock
and
push
ds
out
mov
movs
loope
fdiv
gs
ins
arpl
bound
fnstcw
and
jg
sub
sub
ror
ins
aad
mov
push
add
pushf
mov
xor
mov
ret
fld
mov
xchg
sub
add
inc
adc
popa
or
push
repnz
aas
popa
jb
xlat
jp
arpl
push
nop
xor
mov
mov
inc
loop
(bad)
adc
xor
repz
ins
jmp
sub
mov
jle
cmovge
(bad)
dec
test
push
out
mov
mov
mov
jmp
in
adc
data16
mov
popf
inc
mov
inc
retf
dec
movs
inc
int3
jo
cmp
sahf
add
mov
in
inc
loop
xchg
mov
sahf
clc
cmc
movd
xchg
sbb
xchg
pop
push
ins
es
xor
cs
nop
jge
rcr
fldenv
sti
repnz
adc
test
push
addr16
loopne
idiv
mov
or
stos
sbb
outs
jmp
lods
add
sti
cmp
dec
mov
test
lea
sbb
mov
jp
and
cmp
repz
hlt
mov
push
jae
test
xchg
cmp
cld
mov
mov
stc
and
mov
fnsave
fsubr
jg
sti
sbb
hlt
out
aaa
adc
and
xchg
jp
mov
and
mov
popa
dec
and
mov
js
fcom
jo
cmp
mov
sbb
daa
xor
add
inc
dec
stos
mov
mov
push
sbb
sti
repz
push
js
push
mov
aam
gs
push
xchg
popf
lods
outs
icebp
xchg
lods
cli
mov
lea
xlat
dec
mov
mov
xor
call
popa
adc
call
cmp
arpl
bound
mov
sbb
ret
lahf
mov
dec
popa
mov
(bad)
mov
dec
int3
push
and
xor
fstp
imul
sub
mov
jbe
sar
mov
xor
inc
mov
inc
call
in
pop
jb
inc
dec
sahf
call
ins
jbe
adc
inc
inc
int
sar
add
fidivr
lods
pop
sbb
lock
repz
xor
cmp
cdq
popa
loopne
jge
or
sbb
push
dec
mov
push
and
sub
or
retf
popf
sbb
imul
mov
mov
popa
cli
aas
stos
or
or
cmc
jns
pop
inc
jns
dec
xchg
or
mov
and
dec
(bad)
repnz
add
and
mov
aam
push
pop
iret
(bad)
jle
dec
ins
dec
shl
out
sbb
scas
adc
js
int
inc
rcr
imul
add
(bad)
cmps
xor
aas
jg
int
mov
sub
ins
dec
jo
les
sub
in
cld
sbb
mov
sti
xchg
xchg
scas
add
lock
repz
ret
les
ret
aaa
xor
pushf
mov
or
fwait
xor
jmp
retf
(bad)
cmp
push
fnstsw
pop
inc
out
sub
sub
xlat
popa
xchg
(bad)
in
inc
dec
mov
ror
pusha
adc
push
push
out
mov
retf
fld
sub
push
jmp
add
jne
and
je
mov
jmp
jmp
dec
pop
fnstsw
call
int
jnp
(bad)
scas
add
xchg
fnsave
outs
push
jnp
cmp
inc
out
dec
int
out
test
cdq
outs
xchg
adc
popf
cmp
or
pop
fidivr
pop
mov
shl
inc
push
add
call
mov
jb
jnp
icebp
inc
nop
std
lock
mov
fmul
xor
pop
cmp
cwde
hlt
mov
sbb
xchg
xchg
int3
or
shr
sahf
xchg
ds
mov
aas
out
adc
xchg
nop
xchg
inc
mov
lea
test
sbb
or
xor
xchg
cwde
inc
lods
loope
mov
sub
mov
ss
jge
fwait
inc
js
mov
enter
nop
mov
enter
cwde
(bad)
cmps
cld
add
je
popf
hlt
xchg
vaddpd
push
mov
in
cmps
pop
push
or
cli
jmp
pop
jmp
loope
lods
or
sub
mov
bound
fdivr
mov
mov
mov
in
xchg
js
jbe
test
call
mov
pop
cmp
mov
xchg
sbb
cmp
std
loope
pop
sbb
cmp
jmp
jp
in
or
inc
cs
push
stos
jg
mov
setno
inc
in
and
or
shl
lods
cwde
and
pop
adc
gs
in
jns
pop
or
mov
(bad)
shr
cwde
jns
cmp
aad
jle
pop
mov
adc
jg
ret
sbb
ins
jmp
xchg
mov
test
jo
cdq
sar
(bad)
aaa
clc
sub
sbb
(bad)
mov
mov
push
push
jmp
loop
sbb
mov
(bad)
pop
mov
int
push
rcr
sbb
(bad)
mov
les
or
sub
ins
mov
pop
inc
or
pop
call
scas
push
rcr
xor
cli
lahf
inc
lahf
mov
inc
arpl
popaw
pop
mov
adc
inc
test
and
xchg
jmp
ins
pop
mov
xlat
sahf
mulps
xchg
mov
addr16
addr16
sbb
jp
or
stos
ins
add
push
iret
es
mov
jnp
pop
push
jae
mov
adc
retf
sbb
(bad)
push
pop
rcl
fistp
mov
rcr
adc
out
neg
xlat
aad
pop
xchg
inc
mov
fs
jecxz
(bad)
fs
shl
push
rol
push
fsubr
lods
inc
gs
mov
add
mov
or
adc
cmc
xlat
mov
cli
cmp
and
add
mov
pop
mov
out
pop
lahf
cmp
mov
ss
mov
push
(bad)
and
mov
pop
push
and
or
cld
push
ja
add
mov
mov
xchg
xor
add
sbb
int3
mov
mov
aad
test
in
xchg
cdq
inc
rcr
push
mov
add
leave
sbb
outs
mov
cmp
jl
mov
xor
shl
inc
retf
xor
int3
fsub
shl
jb
add
cwde
adc
cs
and
paddsb
cmp
call
icebp
daa
test
jmp
xchg
pop
imul
or
daa
xchg
sbb
xor
cmp
sub
shl
jno
and
rcr
inc
jnp
popf
xor
add
rcr
jmp
or
cmp
ficom
adc
mov
xor
xchg
or
dec
(bad)
pop
inc
sub
mov
addr16
sub
xor
push
inc
pop
dec
mov
mov
sub
loopne
jecxz
inc
setle
mov
icebp
mov
mov
call
shl
cdq
mov
or
adc
hlt
cli
xchg
xor
(bad)
in
arpl
loop
jmp
clc
add
nop
cmps
lahf
das
or
ret
jne
outs
inc
mov
push
or
les
pop
jecxz
aaa
lds
mov
es
mov
sbb
jns
mov
cld
mov
push
inc
pushf
sub
scas
xchg
stos
add
sahf
mov
lahf
lods
add
shr
push
jbe
jnp
and
sbb
mov
mov
mov
pop
stos
sbb
lahf
jmp
cmp
mov
(bad)
gs
xchg
sub
stc
mov
test
outs
fdivr
xor
fwait
das
int
adc
xor
ror
pop
mov
push
lods
idiv
xor
or
push
mov
(bad)
retf
jbe
and
xor
fdivr
ret
sahf
into
inc
les
cdq
loop
lds
(bad)
retf
in
cmp
xor
add
pop
cld
ja
dec
and
dec
xor
stc
test
xchg
jno
mov
dec
or
(bad)
shr
cli
mov
jp
and
rcr
inc
out
scas
loopne
sub
mov
add
inc
mov
pop
mov
int
cdq
push
movs
shr
mov
fdivr
lods
inc
aad
scas
es
pop
(bad)
nop
rcr
aaa
sub
loope
aas
imul
mov
adc
(bad)
xor
or
retf
idiv
jno
cmp
xchg
dec
inc
inc
and
stc
add
lods
lods
xor
retf
jle
lods
jae
mov
mov
mov
jg
jns
or
add
sub
xchg
enter
mov
adc
and
adc
adc
add
mov
sub
inc
popf
xchg
js
ror
mov
pop
(bad)
(bad)
xchg
pop
cmp
jmp
xor
fs
xchg
mov
daa
or
nop
call
bndldx
lods
aam
int
dec
jb
jl
pushf
inc
aam
and
dec
add
mov
adc
xor
and
mov
out
mov
mov
lods
pushf
jne
xchg
jmp
dec
icebp
mov
into
ins
lods
xor
scas
sti
scas
call
sub
and
add
push
jbe
dec
xor
xchg
inc
jp
(bad)
call
xchg
inc
push
xchg
in
pop
cmp
push
ds
aad
clc
fld
sbb
cmp
mov
lods
inc
push
dec
cmps
mov
mov
sbb
popa
pop
popf
(bad)
pop
(bad)
aad
lea
and
stos
stc
jb
sahf
sbb
test
imul
sbb
scas
xchg
loopne
shl
push
mov
dec
mov
sbb
xor
xor
adc
jb
mov
sti
les
sub
int
cmp
cli
or
jp
movs
pop
or
pop
ss
xlat
pop
movs
add
adc
push
imul
push
out
ins
mov
mov
dec
rcl
push
mov
inc
(bad)
mov
(bad)
out
int
push
pop
mov
loop
stos
jne
int
call
add
push
sub
adc
test
xor
cmp
add
ret
push
cli
outs
mov
ret
mov
cmps
fistp
cld
sbb
lahf
jle
push
and
and
fs
call
xchg
jmp
nop
jg
sub
clc
dec
daa
ja
mov
test
ret
mov
pop
mov
cli
out
shl
inc
loopne
xchg
pop
cmp
push
outs
mov
div
push
loope
push
cdq
clc
push
pushf
gs
sub
inc
inc
jmp
push
pop
jmp
add
mov
dec
fisttp
(bad)
hlt
inc
(bad)
push
push
daa
push
mov
lock
test
inc
xchg
lds
(bad)
test
aad
(bad)
xchg
nop
cld
aaa
xchg
fdiv
and
test
jmp
jbe
xor
xor
sbb
xchg
lock
push
add
push
cmp
xor
scas
and
lock
fcomp
(bad)
mov
shl
enter
ja
ds
out
movs
jbe
fisttp
mov
shr
arpl
jg
(bad)
jmp
dec
call
mov
iret
enter
push
fs
test
in
jo
outs
movs
dec
std
psubb
ins
mov
xor
loope
test
push
and
aas
ss
test
loopne
in
xchg
lock
mov
push
inc
xchg
nop
jbe
cmp
inc
lea
cs
xor
dec
xor
sub
nop
(bad)
and
mov
dec
bnd
mov
cdq
out
cmp
xchg
xor
mov
and
loopne
mov
mov
push
jbe
test
add
push
lahf
not
inc
mov
and
not
cli
jle
jg
sbb
jb
mov
mov
push
ds
jno
or
pop
in
or
adc
jle
shl
out
jne
adc
clc
push
cmp
mov
push
xchg
mov
shl
in
icebp
stos
mov
push
add
mov
mov
sbb
fisubr
mov
xchg
jle
cwde
inc
stc
stos
xor
repz
call
aas
aam
xchg
shr
out
dec
sbb
adc
test
stc
xchg
sub
test
mov
jnp
out
jno
dec
xor
data16
rol
push
jmp
idiv
jmp
loop
repz
and
shr
scas
dec
xchg
mul
fcmovne
and
push
aas
mov
adc
rcl
add
aam
push
push
push
and
stos
cmc
lods
inc
pop
dec
test
fist
add
adc
inc
and
mov
jne
fcmovnb
xchg
adc
fcomip
jg
dec
jecxz
push
lock
dec
inc
sahf
out
dec
xchg
mov
(bad)
jae
cdq
leave
sub
sbb
xor
push
adc
mov
cwde
adc
jo
cmp
js
pop
dec
add
test
es
aas
inc
mov
pop
jns
addr16
cmps
(bad)
(bad)
xor
and
jmp
fdiv
das
pop
dec
sbb
loop
push
jmp
xor
les
retf
sbb
xchg
mov
std
inc
pop
push
sub
int
xor
pusha
dec
sub
sub
call
push
rcl
in
imul
inc
stos
xor
outs
or
lods
jecxz
imul
(bad)
out
jne
cmp
test
jns
xchg
repnz
jnp
lds
movs
sub
mov
hlt
push
in
rol
call
arpl
dec
and
dec
jns
ret
mov
push
push
jnp
shl
inc
loop
mov
ins
or
mov
aad
xchg
fidiv
lahf
sbb
mov
adc
mov
inc
mov
outs
fsub
add
dec
push
loop
push
repnz
das
cmp
pop
sar
cwde
push
add
stos
out
mov
mov
sub
mov
or
rol
test
adc
mov
mov
cmp
fwait
test
push
sbb
xor
mov
std
mov
inc
(bad)
xchg
lods
add
xchg
sahf
lahf
or
rcl
jl
(bad)
mov
int3
adc
and
sar
fwait
add
fldl2t
xchg
push
mov
jmp
arpl
sbb
dec
jmp
and
xor
int3
cli
stos
or
fadd
lock
enter
push
(bad)
jae
fild
adc
mov
movs
jmp
or
mov
(bad)
arpl
xchg
ret
inc
in
or
sub
fld
fcmovb
dec
(bad)
shl
xchg
mov
xor
and
test
or
mov
jle
add
push
and
sub
fs
add
inc
jb
mov
xchg
push
call
jl
pop
cmps
div
jle
sub
cmps
imul
pusha
shr
cmps
cli
xchg
(bad)
aad
ins
imul
adc
adc
and
enter
(bad)
xor
and
out
sbb
ins
ret
popf
cwde
jge
inc
stos
shl
pop
jle
xor
xlat
es
in
sub
push
jno
dec
cld
jmp
imul
cwde
xor
inc
scas
pop
adc
fnsave
popa
or
cmp
mov
sbb
xchg
fsub
dec
mov
js
(bad)
out
out
push
movs
or
mov
pop
add
leave
add
or
rcr
jmp
mov
arpl
scas
popf
hlt
fadd
jle
sbb
pop
jl
dec
ret
pop
xchg
xchg
call
dec
nop
adc
scas
mov
and
out
pop
aad
movs
lahf
cmc
pushf
clc
pop
lahf
leave
dec
or
popa
mov
aad
into
dec
repz
out
xor
or
and
mov
pop
and
or
push
dec
js
pop
sub
dec
je
xor
(bad)
mov
sbb
enter
stc
out
mov
call
dec
xor
and
arpl
invd
lods
popf
or
xor
and
inc
push
xchg
lock
in
mov
pop
ret
das
sub
lds
fbld
fcmovb
test
cmp
bound
jae
inc
adc
adc
dec
fwait
cwde
mov
lds
fimul
push
mov
daa
dec
rol
fsubr
in
xor
add
lock
sub
mov
xchg
add
mov
add
sbb
adc
and
fistp
fcmove
adc
or
(bad)
shr
mov
jne
jle
retf
lock
adc
fdiv
xor
hlt
push
sar
hlt
sahf
rcr
add
mov
shl
pop
icebp
imul
popa
xchg
lea
ss
mov
or
add
xor
shr
fnstsw
call
xchg
inc
xchg
iret
jbe
cmp
add
arpl
or
(bad)
cmp
ja
outs
cmp
dec
pop
and
ret
aas
add
add
fwait
mov
fst
dec
jp
call
and
mov
sbb
lods
push
mov
aam
push
out
pop
push
pop
xor
sbb
shl
mov
sub
and
imul
push
add
inc
aam
arpl
or
jbe
pop
dec
hlt
xchg
add
nop
mov
cmp
loopne
(bad)
pop
inc
in
into
fs
popf
or
shr
rcr
and
sub
in
mov
or
pop
pop
pop
push
idiv
mov
push
fs
adc
push
fstp
in
mov
popa
sub
sbb
xchg
sbb
in
mov
ror
and
outs
and
lahf
lods
fisub
push
fimul
and
inc
xor
push
sbb
test
cmps
cmp
and
out
ja
and
jbe
loop
outs
xor
mov
pop
pop
inc
aaa
fnstenv
rcl
xor
or
aas
push
stos
rcl
(bad)
jo
aas
add
repz
inc
mov
xchg
test
dec
loope
push
fst
in
arpl
imul
test
jmp
outs
scas
in
mov
pushf
js
out
cmp
cmp
xlat
or
xor
or
inc
jmp
aaa
sbb
int
jp
jmp
pop
sbb
arpl
imul
test
call
(bad)
call
cs
call
scas
sbb
pushf
inc
in
stos
mov
jmp
loop
and
inc
jae
movhps
dec
(bad)
outs
inc
inc
rcr
cmps
jp
in
xchg
xchg
sub
mov
js
mov
loopne
push
dec
ret
cmp
add
jb
cmps
adc
mov
hlt
jnp
mov
les
outs
pop
cs
push
inc
lock
fld
sbb
mov
stos
dec
jae
push
pop
cmp
adc
lods
sbb
jns
push
ins
and
bound
ror
push
sahf
pop
pop
adc
inc
into
lods
adc
mov
fs
jns
mov
sbb
inc
call
(bad)
fs
fadd
cmp
call
les
sub
push
jno
dec
stc
movs
sbb
add
and
sub
mov
push
mov
retf
stos
ins
dec
lahf
sbb
rol
and
or
dec
stos
popf
adc
ja
or
stos
retf
cmp
les
inc
mov
push
or
jp
(bad)
adc
cmp
mov
dec
mov
mov
sbb
or
jmp
loopne
not
inc
xor
dec
sbb
or
inc
push
ret
cmp
ret
sti
loopne
sti
lds
test
pop
es
mov
movs
cmp
dec
sbb
int3
sbb
aaa
mov
dec
(bad)
jno
fdivrp
xchg
xor
(bad)
jnp
ins
test
cli
pop
pop
lods
fcmovne
cmps
jl
scas
push
xchg
shl
in
repnz
sar
mov
in
nop
jmp
dec
rcr
add
mov
inc
push
aad
aas
dec
cmp
cmp
xchg
idiv
add
rcr
adc
push
cld
push
mov
loope
arpl
retf
xor
hlt
inc
pop
into
pop
imul
jb
(bad)
push
or
sub
(bad)
jae
popf
out
mov
fadd
push
cmp
movs
push
cmp
dec
push
sar
leave
shr
jl
imul
scas
or
call
lock
jl
(bad)
cmp
test
rcr
push
inc
pop
mov
push
mov
mov
sub
xor
mov
sbb
mov
inc
inc
stos
cdq
dec
ss
mov
movs
dec
mov
repnz
jo
movs
ror
das
dec
or
mov
lods
div
push
lods
mov
data16
ins
inc
icebp
lods
or
ins
fadd
add
push
loope
lea
inc
mov
or
aad
lds
setl
mov
adc
jb
cmp
lea
loope
fldenv
retf
ins
jno
mov
inc
repz
push
adc
pop
xchg
jl
es
sahf
mov
push
retf
jns
mov
lahf
not
push
jl
sbb
cmp
adc
adc
loope
mov
mov
ret
mov
sub
leave
and
loop
jle
outs
js
xchg
repz
fwait
outs
push
sub
push
(bad)
sbb
mov
dec
fdivr
aam
inc
push
push
dec
cmc
pop
add
ja
xlat
fnsave
dec
push
das
sub
aam
cmp
ret
adc
adc
jecxz
xchg
sbb
aaa
push
add
pop
sbb
out
cli
mov
pop
(bad)
jmp
mov
jmp
ret
neg
ins
push
in
jp
(bad)
mov
xchg
aas
out
pop
fist
dec
inc
(bad)
sub
push
int
ret
add
pop
dec
jbe
mov
scas
arpl
add
outs
xchg
jb
mov
inc
sub
leave
jne
mov
fild
sbb
and
icebp
es
lahf
std
mov
sbb
rsm
iret
xchg
ret
mov
test
call
xor
jg
dec
sbb
dec
(bad)
retf
mul
add
xchg
xor
ja
push
shl
dec
mov
shl
xor
(bad)
(bad)
aam
jmp
jmp
lahf
mov
cmp
lods
mov
outs
add
pusha
dec
push
fild
push
jae
shld
frstor
mov
push
xor
stc
rcl
or
jno
jmp
enter
iret
add
lds
jge
sub
xchg
sub
dec
imul
scas
(bad)
sbb
mov
xchg
mov
pop
dec
sub
int3
push
out
mov
inc
or
repnz
ins
pop
pop
mov
fcomp
nop
aaa
outs
sub
push
es
in
push
xor
jp
cwde
dec
and
mov
ret
cmp
xchg
mov
pop
iret
(bad)
sbb
aad
adc
mov
ficom
imul
jnp
ror
push
les
xor
jecxz
pop
ja
shl
and
pop
jecxz
inc
fild
or
cmp
aas
arpl
div
cmp
daa
outs
(bad)
sbb
sub
xchg
jnp
int3
js
pop
fild
popa
enter
lods
lods
jnp
fs
mov
pusha
test
call
cmc
mov
mov
add
ret
jne
and
sbb
sub
pop
jb
daa
mov
ret
push
shl
add
mov
pop
fidiv
xchg
mov
ret
sub
sub
fmul
adc
enter
psllq
add
or
gs
inc
stc
dec
sub
std
jecxz
push
aam
jmp
xor
repz
stc
pop
pop
mov
cmp
ins
outs
mov
push
push
xchg
or
sbb
and
lods
aas
fdiv
xchg
jo
shl
stos
jp
call
and
cmp
daa
stos
shl
jge
cmps
sahf
out
fist
add
jne
out
cmc
arpl
push
mov
add
lahf
sub
aam
mov
adc
mov
add
and
dec
pop
mul
xlat
xchg
push
mov
adc
fcom
mov
xor
(bad)
jb
cmp
push
sub
mov
push
mov
mov
mov
and
ins
pusha
xchg
add
push
pushf
xchg
mov
into
push
add
fsub
(bad)
enter
pushf
out
xchg
cmc
scas
imul
add
dec
mov
pop
push
or
mov
dec
arpl
iret
dec
mov
push
jmp
test
jp
sub
(bad)
mov
pop
pushf
movs
out
xchg
xchg
fst
jo
cmp
xchg
jne
sbb
in
add
test
or
mov
scas
mov
stc
jecxz
mov
xchg
sub
or
cmps
imul
cmp
loopne
mov
out
jne
(bad)
adc
stc
adc
xchg
fimul
jo
cmp
int
or
sub
sbb
aaa
xchg
clc
inc
fwait
in
cmp
and
fnstsw
cld
aam
jbe
out
lock
(bad)
cmc
cli
(bad)
pop
or
xor
xchg
cli
mov
(bad)
sbb
push
mov
mov
add
pushf
cmp
outs
lods
xchg
and
(bad)
clc
int3
imul
xor
sbb
stos
sbb
test
out
jg
mov
cld
fisub
pop
ds
pop
dec
daa
jecxz
test
mov
data16
cmp
stc
xchg
int
sub
sub
jle
cmps
int
(bad)
sub
pop
clc
xlat
mov
ins
push
mov
shl
mov
pop
adc
in
or
jnp
dec
loop
push
and
aaa
(bad)
stos
jns
cmp
jge
jmp
add
data16
inc
int
inc
retf
test
lahf
je
int3
push
xchg
mov
inc
cld
ret
gs
hlt
clc
in
xchg
cli
or
rcr
jmp
and
jmp
nop
retf
outs
(bad)
jmp
fiadd
(bad)
jmp
cmp
bound
push
ja
or
daa
iret
ins
and
pop
scas
lds
sub
call
adc
ret
mov
pop
cld
cld
adc
jb
movs
add
cmp
and
retf
ins
mov
adc
mov
call
fidiv
jae
mov
icebp
lods
pushf
pop
sbb
es
dec
jne
fwait
imul
mov
mov
add
add
pop
pop
add
ret
std
cmp
mov
in
sbb
or
cmp
xor
push
bound
and
mov
sbb
and
adc
pop
sub
neg
mov
xor
push
popa
in
int3
jmp
cdq
add
jo
sahf
lds
xchg
inc
retf
outs
inc
adc
xor
mov
lods
xor
xor
sbb
or
fs
cdq
lea
jbe
mov
lea
clc
mov
xchg
jmp
dec
jne
fisttp
xchg
or
into
and
jle
jnp
xchg
jl
das
and
mov
mov
lods
add
add
rcl
sub
dec
sub
add
cmp
pop
sbb
push
adc
mov
push
jnp
test
jmp
dec
push
mov
(bad)
xor
out
in
(bad)
dec
sub
shl
pop
inc
mov
in
xchg
pop
jmp
and
(bad)
adc
ds
cs
adc
push
std
(bad)
fcom
push
push
cmp
fst
mov
cmps
sbb
jecxz
retf
popf
jle
push
mov
inc
cmp
out
lahf
sbb
push
mov
(bad)
xor
push
and
xchg
push
add
jno
stos
aas
or
xor
lds
xchg
inc
sbb
test
retf
stos
xchg
(bad)
rol
sbb
hlt
add
jl
mov
cmp
push
jns
jecxz
clc
setb
iret
mov
jl
mov
mov
loope
mov
out
pop
out
mov
push
push
lds
repnz
and
add
inc
cmc
jo
pop
inc
cmps
pop
push
mov
adc
fs
je
xchg
ficomp
add
xor
cdq
repnz
mov
adc
dec
in
fidiv
cmp
add
out
cmp
call
fld
aaa
retf
jge
jbe
jge
pop
xchg
mov
inc
outs
out
int3
clc
jmp
iret
dec
leave
sub
pop
nop
jbe
cwde
stos
cli
xchg
jo
nop
push
add
sti
xchg
xchg
push
cmps
push
sub
adc
div
call
fsubr
bound
inc
fcomp
xor
jo
dec
cs
sub
and
xor
je
mov
mov
ss
call
jl
je
mov
loope
iret
and
pop
pop
sbb
pop
sahf
and
mov
sub
stos
jo
out
xor
pop
pop
jns
nop
mov
lds
sub
pop
cmp
jb
test
int
fs
shl
out
je
sub
loop
inc
jo
clc
add
scas
in
fild
xor
adc
mov
aas
inc
and
(bad)
std
pop
add
ins
dec
jmp
xor
aad
(bad)
cmc
popa
xchg
loope
mov
mov
cld
adc
xor
ja
lods
sub
daa
frstor
call
je
std
cmc
movs
adc
add
mov
push
or
mov
dec
retf
mov
mov
in
int
xor
xlat
push
sbb
cs
into
das
bound
xchg
aam
(bad)
sar
mov
jb
shl
sahf
scas
xchg
rol
fsub
ficomp
call
cli
mov
push
cmps
mov
adc
call
imul
aad
lods
stc
inc
fbld
xor
push
jmp
mov
adc
cmps
xor
cld
or
imul
mov
mov
jmp
loope
xchg
xor
lods
ret
movs
mul
push
(bad)
mov
scas
push
jae
std
adc
mov
pop
fld
and
sub
sti
scas
push
xor
push
bound
lods
ror
shl
xchg
test
adc
les
dec
cli
mov
loop
inc
add
movs
rcl
adc
shl
ja
xchg
movs
ja
cld
cmc
into
inc
or
mov
inc
xor
data16
cwde
ds
repz
and
retf
addr16
xor
daa
inc
xchg
ins
jb
lods
xchg
adc
jne
int3
mov
pusha
es
inc
enter
enter
push
push
adc
inc
rcl
and
(bad)
sub
mul
imul
dec
add
xor
mov
icebp
cmp
retf
pop
repz
retf
jo
jno
fld
or
or
scas
lahf
les
adc
int
aaa
test
test
inc
or
into
fidiv
fst
cmp
add
loopne
xor
ret
xchg
mov
mov
int3
lods
shl
xchg
cmp
xchg
call
dec
psrad
push
pusha
test
(bad)
mov
dec
scas
jns
cmps
cmps
sti
mov
repnz
jne
mov
sub
(bad)
cmps
xchg
pop
sbb
icebp
inc
xor
int3
adc
ds
stc
cmp
mov
push
aaa
mov
or
repnz
push
ret
and
xchg
ret
sbb
(bad)
aas
push
loop
fidivr
sub
push
jne
outs
sbb
dec
push
lods
push
mov
sub
xchg
into
into
(bad)
fisttp
xchg
jae
mov
or
in
pop
mov
mov
inc
or
sbb
(bad)
in
repz
pop
fisttp
sahf
cld
adc
in
xor
xchg
mov
or
fst
dec
test
leave
cmps
mov
mov
test
ins
jl
shl
jecxz
xchg
dec
cmps
jecxz
inc
out
adc
stos
lea
jle
fsub
stos
fwait
cmps
jmp
mov
pop
or
in
lock
loopne
mov
push
stc
adc
fistp
dec
mov
sbb
push
mov
hlt
sub
jl
jbe
out
ss
ret
sub
call
push
mov
stc
push
dec
jge
dec
js
pop
retf
sub
shl
mov
dec
rcr
mov
jne
fwait
sbb
xor
shl
imul
lods
push
test
jl
popa
mov
div
add
inc
scas
push
dec
lds
jmp
pop
fimul
mov
into
rcl
xchg
mov
adc
mov
push
pop
ret
jo
arpl
ss
sbb
repnz
adc
call
jns
jae
mov
scas
ror
test
jns
inc
mov
fcomp
inc
mov
nop
test
adc
gs
imul
push
mov
push
pop
retf
loope
sub
pusha
and
jb
sub
sub
ins
xlat
lock
push
sub
jbe
mov
jl
xchg
mov
ror
and
lods
shr
mov
fcmovb
(bad)
mov
sub
mov
pusha
sar
jmp
lea
jbe
dec
test
cld
xchg
push
and
push
int3
xor
xchg
jp
push
loope
fild
fist
fwait
xor
add
daa
push
in
std
test
xchg
add
jmp
stos
loopne
sub
(bad)
and
ja
in
xor
cmp
pop
popf
adc
lods
xchg
adc
mov
jl
cmps
mov
cmp
or
call
jmp
nop
mov
(bad)
mov
out
fadd
cld
inc
icebp
ins
fs
aas
in
loope
aad
jmp
pop
or
call
pop
or
pop
ins
adc
aas
daa
cwde
pop
outs
push
std
adc
pop
add
sub
adc
imul
sahf
ja
(bad)
dec
les
inc
lahf
mov
loop
cmp
inc
push
pop
fisttp
push
fsubr
std
aas
push
mov
dec
push
and
xchg
jnp
push
sar
xchg
inc
out
xchg
cmp
push
clc
sbb
xchg
push
std
jb
mov
pop
jl
sbb
pop
push
bound
push
jl
jne
ss
and
stos
or
mov
(bad)
les
mov
loopne
xchg
mov
jle
test
pop
mov
mov
or
stos
sbb
add
mov
adc
cdq
gs
lods
xchg
push
popa
cmps
cs
ficomp
push
xor
sub
mov
mov
(bad)
(bad)
sbb
(bad)
iret
ins
shr
mov
enter
enter
lds
push
stos
dec
pop
test
push
inc
cmp
xchg
mov
imul
ror
pop
inc
and
push
movs
mov
and
mov
cmp
loopne
pop
aam
repz
add
pusha
cmp
inc
inc
lahf
imul
cmp
cmp
out
pop
cmp
adc
inc
inc
add
xchg
mov
lock
sti
out
xor
leave
xchg
sbb
jno
push
xchg
test
pop
loope
out
(bad)
xchg
imul
dec
fs
xchg
in
dec
xor
(bad)
fcmovne
aas
loope
das
push
dec
sahf
test
or
mov
mov
popa
mov
enter
test
and
dec
movs
pop
adc
shl
xchg
mov
in
jno
sti
jmp
(bad)
idiv
cwde
cmp
ja
xor
stos
or
jmp
sbb
mul
lods
dec
pushf
into
mov
in
sub
mov
dec
ins
and
pop
xchg
mov
scas
pop
pushf
or
nop
or
push
dec
cmp
xlat
enter
xchg
sbb
dec
lahf
sub
push
fidivr
outs
inc
push
hlt
sub
sbb
adc
inc
loope
int
cdq
mov
xchg
sub
xor
pop
xchg
xor
pusha
imul
mov
jl
not
jmp
imul
xchg
aad
sbb
into
aas
push
mov
scas
mov
popf
outs
and
repz
sub
(bad)
loopne
inc
mov
enter
mov
jmp
mov
jo
pop
stos
mov
out
addr16
ins
jmp
ret
adc
test
sub
mov
mov
rcr
push
cmp
and
neg
push
sbb
mov
jno
leave
dec
mov
or
clc
and
add
push
icebp
lea
mov
mov
repnz
xor
ficom
fcmovnb
mov
adc
xor
cmp
pop
iret
fisub
rcl
fsub
dec
mov
mov
js
jns
inc
scas
push
ja
scas
sub
(bad)
ss
leave
outs
fistp
mov
aad
in
aaa
stos
fdivr
loope
dec
jmp
sub
xchg
pop
jae
popf
pop
repnz
mov
ja
xor
xor
fwait
push
sub
loope
ja
mov
and
fist
or
and
xor
jge
jno
pop
adc
out
lods
out
ins
(bad)
lock
sub
push
jb
lock
cmp
test
xchg
jb
pusha
rcl
dec
sbb
adc
xchg
inc
data16
xor
xchg
and
cwde
push
daa
sahf
sub
ficomp
pop
jb
xor
push
dec
repnz
pop
mov
fmul
loopne
jns
add
sbb
adc
mov
fwait
ror
iret
pop
js
mov
stos
add
iret
(bad)
cmc
push
dec
or
fwait
cdq
jmp
daa
jmp
(bad)
fisub
popa
outs
(bad)
push
scas
movs
(bad)
not
mov
lea
cmps
and
cmp
loopne
push
pop
adc
test
fwait
cmps
cmps
xchg
mov
mov
test
sub
movs
cld
cld
lea
dec
or
adc
sub
arpl
retf
int3
loop
int
lods
fs
shl
push
aas
and
adc
imul
cld
mov
jo
jl
jo
mov
cwde
mov
ins
icebp
add
adc
inc
fsubr
or
loope
(bad)
or
scas
push
inc
arpl
pop
setb
cmp
jo
mov
push
xchg
adc
lds
pop
cmps
push
idiv
mov
sbb
cld
xchg
xchg
sbb
pop
mov
jnp
ins
aam
xchg
xor
pop
ret
ss
push
cmp
ja
add
mov
jle
imul
stc
inc
fdivr
js
sbb
sub
fsubp
xlat
dec
jge
mov
nop
adc
and
and
cli
hlt
inc
mov
pop
les
rol
enter
(bad)
jp
jb
ds
pop
hlt
inc
push
xchg
mov
and
imul
mov
add
pop
div
add
add
mov
sbb
mov
add
mov
cs
pop
jmp
pop
sub
int3
aaa
xor
push
mov
add
jno
adc
out
lea
cmp
inc
sub
cwde
adc
and
ins
jp
cdq
dec
push
mov
leave
lods
xor
aam
lods
and
sbb
xor
in
pop
fadd
pop
hlt
adc
jmp
test
fxch
xchg
dec
addr16
cmp
push
pop
mov
bound
push
mov
mov
(bad)
pusha
pop
(bad)
mov
repnz
shl
xchg
cmps
out
ss
call
adc
inc
or
jno
(bad)
xor
jmp
xor
loope
movs
fisubr
fwait
out
xor
pop
loopne
or
pop
or
je
ins
pop
hlt
mov
test
and
arpl
cli
cmp
aaa
call
les
hlt
sbb
popa
loope
(bad)
je
xchg
mov
jo
dec
adc
test
pop
xlat
call
out
lock
js
loopne
xchg
std
mov
jno
inc
loope
(bad)
pop
xor
jmp
shr
test
mov
pop
shr
sub
mov
and
fcomp
(bad)
cmc
jnp
jb
aas
in
in
xchg
call
mov
shl
test
push
sbb
or
pop
pop
or
adc
mov
stos
fsqrt
push
mov
scas
push
inc
outs
fbstp
gs
jmp
lds
inc
cmp
js
clc
fucomp
fbld
imul
inc
pusha
bnd
ja
cs
popf
cmp
test
adc
sub
ins
jmp
xor
loop
jmp
arpl
push
int
inc
loopne
mov
pusha
xchg
or
aad
inc
outs
rcr
gs
sbb
sbb
popf
mov
add
leave
outs
rcr
data16
mov
jns
out
push
mov
xor
enter
sti
mov
loope
retf
add
test
adc
adc
inc
and
jo
mov
shl
push
rcr
push
dec
mov
xor
push
adc
retf
outs
mov
jecxz
or
jg
std
and
mov
sbb
mov
mov
cdq
jg
dec
aaa
xor
add
lods
aad
xlat
mov
mov
inc
repz
dec
mov
mov
jge
sahf
mov
(bad)
fstp
loop
mov
sbb
loop
popa
add
jne
adc
jbe
and
and
in
popf
adc
jmp
mov
mov
jb
cdq
shr
adc
mov
xchg
out
sbb
xor
fimul
dec
outs
fsub
rcl
test
jmp
jg
movs
xchg
pop
std
and
(bad)
mov
xor
xor
iret
fwait
fwait
loope
xor
sti
out
movs
jne
jp
pop
fist
lock
sub
js
dec
push
sub
movs
jns
push
push
adc
sub
pop
xchg
outs
xor
shl
adc
rcl
pop
rcr
xlat
jmp
aas
push
xor
push
(bad)
scas
imul
inc
cmps
sub
gs
adc
inc
and
mov
cmp
shld
xor
mov
inc
std
fidiv
jmp
xchg
mov
fistp
test
pop
ss
push
repz
test
out
push
outs
mov
push
cmps
lahf
pop
mov
mov
sbb
xor
pop
inc
cmp
and
and
stc
cld
sub
imul
sbb
jbe
push
push
pop
adc
xor
and
xchg
and
pop
int
jae
xchg
dec
out
leave
scas
cdq
pop
lds
test
sbb
and
test
jno
inc
mov
xchg
push
fwait
nop
(bad)
sub
in
pop
sub
sahf
repz
push
mov
lds
sbb
and
push
out
stos
mov
dec
ins
sub
in
cli
fs
pop
inc
fs
pop
lods
repnz
mov
dec
lahf
inc
gs
frstor
inc
mov
into
sti
fsubr
ja
mov
ja
pop
hlt
arpl
fnsave
retf
adc
xor
(bad)
adc
jecxz
jl
and
sub
sub
push
inc
cld
aad
lods
popf
ret
push
xchg
xor
mov
push
or
test
aaa
dec
add
push
xor
mov
leave
sbb
and
pop
jle
add
jmp
or
xchg
xlat
cmp
pop
and
mov
xor
daa
xor
loop
xor
rcr
xchg
ficomp
add
xor
in
mov
pop
imul
push
mov
rcl
xchg
xchg
cli
sbb
ret
(bad)
xchg
js
pop
sar
jg
aad
imul
adc
push
call
scas
inc
jb
ret
popf
sub
cmps
or
mov
scas
jo
ret
cmp
pop
outs
sbb
sti
loopne
aam
sub
test
jmp
add
sub
icebp
sub
mov
aam
sub
shl
neg
shl
pop
mov
jmp
test
push
retf
pop
push
mov
cmp
(bad)
sub
vorpd
nop
dec
popa
pop
cs
shr
int3
aam
icebp
inc
movs
not
dec
scas
daa
inc
mov
jmp
mov
push
jne
loopne
cld
mov
inc
(bad)
add
cld
xchg
loop
ret
jo
mov
push
loop
(bad)
push
loope
jge
sbb
pop
pusha
mov
clc
fdivr
leave
sbb
inc
fld
(bad)
push
int
lahf
pop
mov
push
cmp
fild
xlat
or
shl
enter
ror
or
mov
aad
call
data16
mov
iret
mov
stos
dec
or
mov
pop
mov
(bad)
ret
inc
push
js
jns
cmp
jne
mov
leave
mov
iret
and
loope
mov
cli
add
push
cmp
dec
inc
pusha
add
or
pop
pop
es
(bad)
cmc
mul
adc
sbb
jns
mov
xor
dec
stos
mov
cmp
sub
add
enter
mov
pop
push
mov
lods
cwde
data16
adc
popf
push
aam
or
sub
arpl
sub
into
jle
and
or
out
jne
int
sbb
mov
iret
pop
cmp
fidivr
cwde
sbb
or
daa
mov
ror
stc
push
call
pop
je
mov
jne
mov
in
add
and
stos
xchg
mov
jmp
cmps
movs
inc
cmps
inc
and
mov
xor
push
rcr
push
enter
es
push
and
test
xor
arpl
push
xchg
xchg
inc
lock
fbld
imul
loop
pop
dec
cmp
test
jl
add
sub
pop
ss
(bad)
call
mov
or
rol
movs
sbb
pop
leave
cmp
jge
aas
out
fld
mov
inc
mov
int3
fnstenv
fnstenv
jle
cmp
scas
pop
mov
in
xor
pusha
call
pop
fs
pop
adc
pusha
xor
cmp
arpl
inc
lods
sbb
add
retf
push
pop
stos
rol
mov
mov
call
or
shl
push
and
sbb
retf
das
pop
adc
mov
aaa
lahf
push
dec
lock
fisub
(bad)
loope
mov
add
lea
ds
movs
shl
fstp
fmulp
fisttp
inc
into
jnp
(bad)
ja
shl
(bad)
int
dec
int3
jo
sti
xor
pop
mov
arpl
xor
cmp
enter
mov
mov
into
icebp
push
adc
xchg
fcom
sub
ret
and
pop
test
arpl
push
neg
cwde
or
ret
call
pop
ficomp
cmc
mov
jne
xchg
popa
es
lock
jl
jle
mov
push
jle
rcl
(bad)
int3
push
xor
test
push
fucompp
or
stos
add
aam
jg
movs
cmps
das
loopne
push
mov
inc
mov
outs
and
cmps
aad
jb
mov
std
pop
aad
loop
in
movs
push
and
mov
fisttp
cmp
xchg
outs
and
mov
test
js
pop
cmp
in
sub
jmp
pop
xor
xor
inc
and
pop
repnz
hlt
into
cmc
sub
fisub
scas
out
jbe
mov
dec
jle
int
into
dec
js
sbb
adc
loop
ins
or
mov
shl
mov
and
mov
adc
jae
and
sti
fsubr
and
in
or
ja
xor
int3
sar
in
add
pop
enter
cld
mov
cmp
aas
std
ja
push
and
jne
dec
into
jbe
add
inc
xor
rcr
jg
pusha
movs
or
ja
sub
mov
test
pop
rcl
mov
push
mov
dec
mov
or
sar
shl
bound
ffreep
mov
jecxz
jl
push
out
adc
cmc
cmp
add
jg
stc
lea
in
mov
cwde
inc
ret
mov
push
mov
(bad)
pop
push
daa
inc
push
jbe
fmul
add
fwait
lea
sbb
xchg
outs
cmp
lods
repz
mov
jecxz
adc
dec
inc
ret
add
(bad)
jle
jbe
cmp
xchg
sub
xchg
fld
fist
pop
mov
inc
cmp
add
and
call
push
mov
mov
cmps
je
or
aaa
scas
lahf
pop
push
popa
or
jno
mov
xchg
xchg
fs
lods
dec
mov
xchg
les
cmps
adc
xlat
pusha
mov
add
push
ret
cmp
std
push
arpl
popa
cmp
es
stos
in
div
mov
out
out
lds
mov
hlt
rol
cmp
int
or
add
fldenv
daa
jns
and
shl
mov
push
mov
addr16
jg
int
dec
lods
xlat
jecxz
cdq
sub
mov
mov
push
mov
mov
add
mov
adc
push
sub
sbb
jg
mov
test
cld
int3
push
pusha
cmp
mov
mov
jg
ror
jmp
or
retf
cld
cmps
jns
mov
pop
jp
fcomp
outs
lods
mov
out
sub
daa
adc
aam
int
mov
(bad)
cmp
int3
shr
cmp
add
cmp
fld
mov
nop
fsubr
jnp
xchg
fild
jb
cmp
adc
(bad)
mov
vmread
xchg
mov
mul
ret
leave
mov
in
adc
xchg
aaa
push
adc
sbb
cld
int
scas
push
inc
and
mov
push
or
inc
or
jecxz
xchg
adc
jl
arpl
call
pop
adc
retf
ss
(bad)
in
lods
mov
jle
lds
xor
bnd
mov
sbb
retf
(bad)
and
or
and
out
dec
lds
sbb
cmps
cmps
sub
cmps
iret
mov
mov
mov
or
call
mov
jmp
mov
fcom
inc
std
loop
test
cld
jns
inc
clc
sub
adc
push
les
mov
mov
(bad)
lea
xor
inc
rol
sub
je
in
cs
cmp
push
sbb
idiv
mov
jp
shr
ins
ja
jp
jo
out
dec
xchg
in
push
jb
push
test
in
out
mov
and
mov
sub
in
push
test
ins
inc
mov
scas
xchg
mov
jno
and
xor
rol
pop
sahf
or
push
lea
ret
mov
push
jmp
dec
dec
stc
jecxz
inc
ss
cmp
cdq
cmps
cmp
inc
ret
out
mov
sbb
(bad)
adc
test
into
xchg
outs
cmp
sbb
push
mov
cs
mov
xor
and
push
sbb
mov
js
mov
addr16
push
enter
test
pushf
fadd
sti
(bad)
add
adc
inc
dec
add
add
enter
aaa
imul
xchg
enter
es
stc
pop
pop
dec
int
and
movs
test
cmp
or
aad
inc
adc
mov
add
ret
popf
in
loop
mov
mov
xchg
cmps
ret
jno
pop
push
sti
icebp
xchg
or
test
push
mov
retf
je
xchg
cwde
(bad)
pop
loope
jmp
(bad)
add
push
pop
add
jmp
test
mov
sub
lods
and
mov
xor
jecxz
sub
xchg
cmp
cmps
(bad)
cmp
int
addr16
scas
cwde
mov
cwde
mov
push
push
out
out
pop
adc
enter
dec
add
jge
test
cmp
push
xchg
push
cmp
push
adc
cwde
jbe
xor
mov
mov
popf
mov
mov
push
push
xchg
or
fdiv
inc
enter
xchg
cmp
or
dec
jae
pop
daa
push
not
ror
bound
leave
or
ss
es
mov
outs
movs
or
in
jmp
ss
jp
test
fisubr
ret
out
pop
outs
adc
and
and
xor
dec
call
rcl
in
in
add
in
mov
and
imul
mov
ret
rol
jge
xlat
add
ret
adc
pop
(bad)
adc
shl
jne
mov
or
mov
pop
xor
sar
pop
mov
frstor
out
fcomip
adc
jnp
push
in
out
xchg
mov
cmp
mov
fwait
jb
lea
xchg
bound
ja
mov
pusha
imul
pop
sbb
je
or
xchg
push
jg
repz
scas
add
mov
cmp
jecxz
xchg
call
lods
mov
rol
mov
dec
sbb
pop
jp
dec
fs
xchg
fsubr
mov
test
or
cmp
rcl
sbb
ret
xor
je
xchg
loopne
jb
test
jne
jmp
je
jl
jne
mov
sub
push
pushf
arpl
sub
outs
inc
add
sbb
xchg
cli
retf
cs
pop
cmp
jg
test
mov
in
xor
(bad)
mov
pusha
cmp
ins
inc
shl
mov
mov
and
mov
fnstcw
ja
fadd
icebp
js
adc
sbb
jo
mov
enter
jae
dec
mov
cmps
nop
add
xchg
cwde
push
loopne
xor
adc
add
xchg
imul
jb
pop
call
in
in
jnp
mov
cwde
daa
ja
mov
imul
jmp
inc
pop
cmps
mov
ror
xor
dec
fcmovu
xchg
xor
daa
xchg
scas
out
loop
sub
stos
stos
(bad)
cld
add
jp
xor
inc
popa
inc
jl
push
aam
rcl
mov
xchg
inc
in
sbb
je
int3
dec
mov
cmp
pop
adc
(bad)
or
nop
jg
sub
or
pop
push
push
xor
js
int
dec
std
fdiv
movs
inc
sub
jle
sub
iret
loope
pop
stos
sub
push
jg
mov
push
dec
jb
jae
sbb
pop
bound
dec
fs
add
mov
(bad)
mov
int3
push
test
(bad)
mov
mov
iret
or
aas
mov
(bad)
sub
add
ror
(bad)
jb
cmp
jmp
mov
mov
cmp
jo
std
pop
dec
dec
lock
outs
push
jo
mov
mov
push
and
push
inc
sub
pop
call
ins
inc
stos
lahf
nop
bswap
mov
(bad)
jmp
adc
xchg
pop
pop
mov
mov
add
jmp
cli
scas
mov
jo
jmp
xor
into
mov
add
call
add
xor
fisubr
push
xor
dec
xor
lock
xor
xor
call
fimul
sbb
cwde
add
and
sbb
dec
sbb
push
and
push
and
jo
mul
or
and
(bad)
jae
fsubp
sbb
push
add
sar
cmp
mov
mov
mov
adc
into
xchg
inc
dec
dec
jp
imul
pop
xor
pusha
es
xor
outs
(bad)
mov
stos
mov
or
sub
pop
sbb
pushf
popa
xor
adc
mov
inc
add
idiv
loope
aam
sbb
ret
cwde
lea
call
fcomip
sub
mov
pop
retf
jnp
inc
pop
pop
shl
xor
add
mov
clc
inc
(bad)
ret
lods
in
cmp
push
jb
nop
xor
and
mov
bound
dec
jo
or
push
add
jns
(bad)
pop
js
xor
push
sbb
mov
shl
pop
cmc
sbb
mov
ds
pop
xchg
mov
imul
inc
je
sti
popa
cld
in
pop
xchg
icebp
loop
add
fwait
int3
sub
cmps
and
(bad)
mov
outs
xchg
or
sbb
movs
or
cs
push
sbb
adc
push
adc
mov
ret
push
sub
out
jne
dec
popa
cwde
add
add
ins
cmp
test
xor
fisttp
inc
dec
rcr
cdq
fild
es
jmp
in
mov
xchg
outs
mov
lahf
xchg
fistp
push
mov
shr
frstor
test
xchg
repz
loope
int3
mov
inc
adc
add
(bad)
mov
xchg
(bad)
push
jle
inc
mov
retf
fisubr
ret
sbb
leave
lock
imul
jne
inc
fnsave
in
pop
jg
jecxz
repnz
cmp
repz
cmps
mov
popa
jecxz
test
into
xchg
pop
mov
xchg
push
mov
push
mov
sub
push
out
xor
test
cmps
xchg
hlt
xchg
cwde
nop
mov
movs
adc
pop
fwait
push
lahf
fld
adc
loopne
inc
loopne
ja
fld
outs
rcr
call
sub
and
and
cld
mov
inc
dec
xlat
aas
cld
lock
pop
adc
shr
clc
adc
cmps
inc
dec
call
push
retf
or
test
push
popf
mov
sbb
cdq
pop
jbe
stos
mov
pop
retf
inc
and
jo
jns
xchg
loop
mov
mov
addr16
pop
fnstsw
ret
jb
fs
xor
fldcw
cwde
leave
loopne
xchg
mov
ret
jmp
xor
add
pop
cli
jnp
mov
fiadd
mov
and
jne
imul
outs
inc
fiadd
mov
sbb
hlt
sar
jmp
or
sub
out
(bad)
icebp
sub
nop
cmc
cmp
cmp
jmp
jle
(bad)
clc
div
outs
arpl
inc
mov
sub
add
dec
pop
pop
lds
mov
and
ins
and
xchg
scas
or
jge
sub
cmp
scas
pop
pcmpeqd
shl
dec
pop
push
xor
gs
jecxz
push
pop
or
popa
pop
inc
dec
inc
in
push
mov
fs
ins
int
xchg
push
mov
scas
rol
ja
push
out
push
mov
or
(bad)
fdivr
lea
ja
cmp
or
jmp
fst
dec
(bad)
fcmovne
push
xor
cmp
xchg
shl
or
cmps
mov
cwde
cmp
mov
out
addr16
push
dec
call
jne
xor
add
and
mov
scas
outs
xor
or
fs
call
mov
iret
mov
mov
lods
test
jno
test
sbb
mov
rcr
in
mov
hlt
mov
inc
test
retf
sbb
sub
jmp
sar
xlat
outs
test
(bad)
fsubp
jp
aas
in
adc
push
movs
(bad)
adc
cmp
adc
mov
sub
mov
dec
dec
jbe
iret
add
aas
ss
mov
cs
xor
ret
mov
cmps
les
ret
mov
jmp
mov
test
add
add
test
ss
fist
stc
mov
mov
push
xchg
inc
(bad)
in
add
mov
add
mov
gs
cld
and
js
sub
repnz
push
push
stc
fdiv
adc
jecxz
(bad)
in
jbe
jae
(bad)
dec
or
ins
fwait
(bad)
stos
fnstenv
mov
jg
call
xchg
sbb
outs
out
xchg
popf
jmp
lods
ins
xchg
inc
hlt
mov
sbb
imul
ret
xchg
xchg
pop
ret
retf
jb
sbb
call
and
in
jmp
pop
loop
les
hlt
cmp
jns
fst
mov
dec
add
mov
adc
imul
jg
sti
fisubr
cmps
jae
clc
jno
ror
in
test
inc
outs
iret
sbb
test
imul
je
fcmovnu
rcl
lock
in
sbb
mov
and
jle
mov
es
mul
xlat
xor
lock
dec
cmp
outs
push
fwait
in
into
mov
aam
lods
fdivr
mov
daa
sbb
sbb
stos
add
xor
outs
dec
jnp
dec
push
maxps
jg
lahf
mov
test
xor
in
xchg
pop
fcom
jno
out
add
repz
clc
or
dec
pop
xlat
ss
jmp
pop
mov
pusha
aam
pop
lock
or
js
inc
cmp
sub
iret
or
adc
data16
xor
dec
mov
mov
jbe
mov
dec
mov
mov
fwait
push
pop
push
push
fadd
dec
push
rol
clc
outs
adc
mov
sar
or
sbb
sti
or
gs
cmps
repz
xor
mov
repnz
std
mov
mov
jns
mov
sbb
(bad)
nop
add
in
ret
cld
xor
jg
pop
pop
jne
test
xchg
cli
into
mov
(bad)
outs
cld
out
test
jl
addr16
scas
(bad)
mov
mov
sub
sbb
stos
movs
dec
les
cs
repz
scas
jge
and
inc
addr16
jnp
ret
ficomp
in
inc
push
and
mov
fild
adc
mov
sub
inc
and
fdiv
mov
push
jno
inc
icebp
sar
push
and
or
mov
cmp
xlat
dec
popf
xchg
cmc
push
addr16
cmp
shr
push
and
jmp
add
pop
out
movs
xor
jecxz
dec
and
daa
jnp
cmc
add
bound
mov
pop
push
shr
dec
into
mov
jle
int3
adc
loope
dec
lods
push
mov
xchg
aam
jg
pop
xchg
mov
out
jle
adc
mov
aas
fcom
fcom
shl
cmps
cli
xchg
fcmovnb
add
pop
mov
ja
fs
data16
cmp
(bad)
push
popf
in
or
mov
cmp
push
enter
pusha
jecxz
leave
test
gs
repnz
jmp
mov
iret
ins
mov
retf
mov
fwait
stos
hlt
outs
sub
ffree
xchg
repz
pop
push
ret
(bad)
ret
jge
inc
repz
xlat
push
jl
std
xchg
dec
aaa
pop
cmp
mov
mov
cwde
(bad)
daa
out
in
jbe
repz
xor
in
ffree
gs
lock
push
sahf
mov
mov
daa
test
mov
ss
jge
xor
sahf
(bad)
repnz
pop
dec
add
ja
cmp
aad
and
dec
test
les
and
xchg
int
xchg
stos
mov
js
xchg
xor
(bad)
rol
bound
cmp
rcl
push
icebp
(bad)
cmp
jl
jbe
sbb
(bad)
pop
adc
fbstp
iret
sub
mov
aad
test
sub
scas
jne
cmp
sbb
adc
outs
js
fyl2x
pop
cmps
leave
repnz
inc
js
rol
data16
in
dec
inc
adc
out
movs
lock
lods
add
jle
or
mov
inc
sbb
add
adc
xchg
xor
xor
dec
cld
sub
push
ror
push
lods
dec
or
push
cmp
cmc
imul
mov
lods
add
push
(bad)
mov
mov
sbb
jmp
xchg
nop
sbb
mov
retf
pusha
jge
loop
xchg
xor
(bad)
bound
data16
xor
lods
loop
jg
adc
jp
inc
cmp
pop
mov
call
add
xor
lds
and
and
ret
inc
ret
nop
add
daa
lods
and
loope
jns
iret
aaa
add
sub
or
out
push
pop
das
lock
leave
mov
rcl
popf
push
and
lahf
call
pop
mov
mov
call
fisubr
push
or
xchg
mov
fldenv
int
jnp
push
repnz
loop
jb
and
cmps
gs
pop
cmp
push
dec
out
cmp
out
pop
mov
hlt
and
ins
xchg
ret
mov
pushf
popf
mov
xchg
jmp
and
mov
pusha
fs
fimul
lods
push
mov
add
mov
clc
add
outs
cmc
loopne
or
sub
outs
test
jp
icebp
jno
imul
mov
pop
in
jecxz
lea
ins
mov
dec
rol
jg
dec
lock
cmp
adc
sahf
cmps
jns
daa
push
sbb
and
inc
in
mov
call
cdq
mov
enter
add
in
xor
or
xor
or
or
bswap
mov
loopne
jle
fisttp
sbb
pop
lods
mov
jae
mov
xor
or
xor
cmc
movs
sub
push
jge
xchg
test
xchg
cmc
fdivr
fiadd
sub
lods
adc
xchg
push
mov
sbb
inc
(bad)
jle
sbb
push
clc
and
cmp
push
xchg
push
mov
add
cmps
jb
(bad)
or
ret
dec
test
nop
inc
aad
mov
cdq
inc
jge
mov
repz
cs
fld
and
push
pop
add
jl
ret
xchg
(bad)
aam
fimul
js
jno
leave
repz
sub
hlt
fnstsw
or
xchg
jno
adc
xor
repnz
mov
pop
es
cmp
arpl
lods
mov
imul
fnsave
jns
adc
gs
out
sar
jl
pop
xlat
add
xor
lods
cmp
leave
dec
jb
popf
mov
mov
gs
and
xchg
push
dec
dec
pop
inc
pop
cmps
(bad)
cld
dec
dec
clc
shl
ffree
call
and
clc
mov
sub
xor
adc
rol
jle
aaa
pop
push
pop
cmp
cld
and
mov
dec
mov
ins
adc
fadd
push
cdq
js
es
dec
pop
sbb
pop
sub
in
fmul
or
stc
jns
sbb
leave
loop
test
rcr
iret
push
jmp
lahf
jo
loope
sub
pop
shl
lods
imul
dec
repnz
sti
or
aas
cmp
and
cmps
xchg
les
jl
add
jne
scas
mov
movs
pop
iret
jo
ss
daa
pop
jno
rcl
xor
add
jmp
mov
xor
es
mov
das
pop
fwait
adc
fsub
push
dec
shl
sahf
inc
jge
push
les
adc
outs
mov
inc
leave
push
xor
adc
xlat
xor
jecxz
clc
add
inc
cmps
cmp
retf
dec
int
out
test
xchg
xor
(bad)
pop
inc
icebp
mov
pop
jmp
cdq
jge
and
jns
or
stc
inc
mov
iret
xchg
dec
sti
dec
mov
jns
jle
cs
mov
jo
xlat
mov
jle
int3
sbb
in
scas
mov
sti
mov
retf
xchg
dec
out
repz
(bad)
sbb
scas
rcr
mov
cmc
cwde
in
add
cwde
jp
xlat
adc
aam
xchg
mov
jae
call
fldcw
enter
jb
cld
mov
out
rol
out
lds
xchg
hlt
or
and
(bad)
push
push
dec
add
sahf
xchg
xlat
cmp
pusha
dec
shl
out
imul
mov
(bad)
call
imul
neg
mov
mov
je
and
pop
retf
pop
out
test
jp
cli
xchg
mov
pop
popf
add
push
mov
loop
xchg
in
push
lods
mov
lds
adc
sub
mov
in
adc
sbb
and
jmp
mov
fld
das
out
inc
and
lods
lahf
inc
adc
xor
jo
and
xor
cdq
sub
iret
cmp
fcom
sub
mov
ins
mov
(bad)
push
lods
and
sar
lods
mov
imul
ins
add
dec
in
jns
cwde
and
lea
adc
xchg
fucomp
sub
xor
mov
sbb
scas
push
(bad)
jge
sub
push
pop
in
add
adc
ror
mov
stos
adc
adc
getsec
sbb
test
outs
mov
cmps
enter
jge
test
int
imul
cmp
and
lea
inc
push
mov
cli
(bad)
lods
push
fidiv
hlt
pop
fst
stos
mov
push
sahf
mov
xlat
and
pop
dec
retf
test
fcom
sub
xchg
enter
rcr
cdq
(bad)
jmp
xchg
jge
or
sub
xchg
pop
dec
movs
sub
popf
dec
popa
scas
push
sub
inc
and
xchg
xchg
les
mov
cmp
rcr
push
js
fwait
mov
adc
stc
fimul
dec
mov
cs
(bad)
int3
cmp
(bad)
add
mov
daa
rcl
mov
mov
push
rcr
add
xchg
xchg
jno
xchg
cmp
mov
(bad)
dec
push
(bad)
jmp
xor
dec
jp
ss
lahf
ins
jle
scas
das
push
inc
add
ret
out
(bad)
stc
neg
nop
mov
sub
dec
fst
mul
scas
je
addr16
or
imul
rol
cld
dec
stc
inc
jns
das
pop
test
das
jae
mov
mov
(bad)
dec
cwde
dec
sub
fisub
xchg
mov
xchg
outs
jbe
mov
and
sub
jns
sub
mov
sbb
jb
inc
mov
imul
push
xchg
div
hlt
mov
loop
pusha
fnstcw
sbb
adc
into
sbb
(bad)
out
scas
adc
cmp
and
call
push
sub
retf
pushf
sahf
adc
sub
jbe
ja
and
pop
das
push
pop
xchg
mov
stos
cmps
xchg
xor
in
pop
movs
push
mov
xlat
out
popf
xchg
pop
(bad)
lods
push
repz
mov
ror
mov
retf
(bad)
clc
xchg
sub
lea
test
dec
or
push
pop
mov
jae
sti
inc
fisub
mov
inc
or
xchg
mov
jbe
lods
xor
jbe
(bad)
mov
xor
mov
xchg
push
or
push
mov
mov
sar
jl
mov
cs
mov
shr
into
in
sub
sbb
cwde
jne
fild
call
js
dec
(bad)
mov
mov
push
stos
out
xor
cmp
fwait
addr16
dec
add
xor
imul
adc
nop
jno
xchg
mov
pop
movs
mov
xor
xchg
mov
jp
and
fiadd
add
mov
pop
mov
pop
cmp
push
sbb
adc
std
fbstp
push
jae
jbe
das
js
js
adc
mov
inc
sub
cmc
pop
(bad)
fsubr
pop
mov
add
and
je
inc
jg
aaa
shl
shl
push
cli
inc
cdq
adc
mov
sbb
adc
shl
in
pop
mov
xor
(bad)
retf
fsubr
fsub
mov
push
xor
out
ret
call
in
shl
push
mov
test
nop
xchg
add
sbb
xchg
jmp
movs
stos
repnz
cmp
or
add
popf
popa
invlpg
push
js
jl
dec
mov
cmp
pop
push
bnd
les
dec
jge
ins
mov
adc
imul
pop
adc
xchg
and
sbb
test
inc
pushf
scas
dec
div
in
mov
pop
jo
in
ds
or
jno
enter
sbb
sbb
jge
push
scas
xor
mov
cmp
xor
cmp
bound
mov
int3
adc
dec
ss
out
cld
je
lods
or
in
inc
mov
in
dec
pushf
lods
mov
sub
(bad)
xlat
stos
outs
push
add
jmp
pop
push
mov
xchg
lea
popa
jns
retf
test
out
stos
push
(bad)
xor
jne
cmps
leave
sbb
je
xchg
adc
xlat
aaa
cmp
and
outs
movs
aaa
pop
in
loope
push
dec
sbb
pop
fs
cmps
test
cmp
test
jecxz
jae
push
je
retf
pop
xchg
in
scas
mov
es
mov
xor
inc
pop
stc
not
ins
loope
cmp
inc
in
or
out
push
pop
test
mov
mov
mov
push
push
rol
mov
lahf
cmp
jnp
out
je
sbb
outs
aas
xchg
in
test
sub
fsubr
mov
int
cmps
popf
int3
sti
push
pop
cs
xor
cmp
jmp
and
jg
xor
popa
nop
adc
imul
cmp
xchg
jle
mov
loop
and
add
jp
ins
mov
into
fstp
(bad)
addr16
outs
aad
hlt
push
push
mov
and
add
add
sahf
pop
jge
out
cmps
scas
xor
and
pop
aas
in
les
push
push
popf
(bad)
mov
inc
enter
inc
mov
fwait
iret
push
jb
cdq
xor
mov
(bad)
or
popf
adc
lds
xor
adc
and
fs
jns
cdq
aad
mov
inc
mov
jp
sahf
hlt
mov
fsub
inc
loope
(bad)
test
mov
jo
add
sbb
leave
xor
pop
mov
mov
jle
ret
jge
out
pop
add
(bad)
fld
or
mov
jmp
popf
and
mov
(bad)
mov
dec
add
bound
in
fstp
xor
jecxz
out
cs
add
push
mov
push
push
stc
daa
xchg
xchg
retf
js
mov
(bad)
out
dec
popa
inc
aam
in
leave
push
fs
rol
outs
lahf
xchg
sbb
(bad)
enter
data16
or
cmp
fsubp
mov
out
dec
adc
call
shr
dec
sti
inc
and
iret
dec
cmp
sbb
add
mov
mov
cmps
out
and
mul
xor
call
push
add
aas
mov
in
sub
leave
cdq
or
sbb
aad
cmps
dec
xchg
and
imul
cmc
push
lods
sbb
pop
les
mov
add
mov
cmp
adc
inc
mov
retf
aam
mov
dec
stos
fisubr
add
dec
xchg
int
pop
aad
into
nop
or
cdq
or
imul
out
cmp
iret
pop
hlt
jp
movs
cld
cld
cmp
pop
mov
cmp
sbb
inc
sbb
(bad)
sub
xchg
mov
ss
mov
adc
dec
mov
(bad)
xlat
mov
or
jp
out
in
jae
ins
sub
push
test
sbb
push
jo
(bad)
jae
pop
push
ret
ficom
ja
lods
cmp
push
or
shr
stc
mov
xor
inc
lods
in
imul
push
retf
and
sub
dec
nop
(bad)
into
call
sti
std
loope
xchg
inc
and
cdq
test
and
jbe
jp
(bad)
jle
mov
jecxz
ss
xlat
out
test
xchg
mov
and
cli
repz
push
xor
xor
call
jno
sub
rol
scas
outs
movs
pop
cwde
mov
loopne
sbb
rcr
test
push
mov
pushf
push
xor
ja
popa
add
movs
cmp
mov
adc
call
adc
pop
inc
lock
sbb
adc
cmp
pop
fsub
inc
mov
cmp
jno
call
fwait
or
jle
retf
movs
outs
stos
sbb
loope
call
adc
and
call
icebp
ja
mov
mov
mov
test
je
fld
inc
std
lahf
in
adc
push
(bad)
mov
imul
push
stos
test
jae
and
jnp
and
addr16
cdq
push
dec
ss
xchg
xchg
(bad)
pop
mov
clc
mov
xchg
scas
pusha
xchg
leave
cmp
or
cmp
and
loop
mov
jnp
cmp
jl
ja
ins
sbb
imul
xchg
adc
xchg
iret
cmp
pop
jns
call
retf
cdq
mov
aad
lea
es
fsubr
(bad)
xchg
cmps
loopne
sbb
ret
clc
mov
xchg
cmp
jge
push
cmp
mov
loope
adc
xor
inc
inc
xor
pop
ds
mov
xchg
movs
(bad)
das
xlat
adc
push
iret
das
lea
ins
adc
adc
movs
stos
mov
out
(bad)
je
pop
and
sti
xchg
jno
push
sar
cmps
lods
shr
lods
xchg
repnz
call
mov
add
pop
mov
aaa
xchg
dec
(bad)
ins
jbe
cmp
jmp
fsub
or
(bad)
loope
adc
in
fs
inc
retf
aaa
mov
stc
sbb
inc
pusha
dec
out
and
jns
cmp
scas
(bad)
mov
cmp
aas
hlt
outs
ret
movs
mov
xrelease
inc
xor
inc
adc
rcr
mov
or
xchg
bound
push
cmp
mov
fsub
dec
lock
inc
fisub
and
pop
popa
lds
aas
out
outs
sbb
push
push
xchg
fdiv
and
dec
clc
out
sbb
shr
jg
clc
pop
je
pop
jp
ja
xchg
rol
push
pop
cwde
and
push
inc
ret
scas
repnz
xor
mov
hlt
popa
fsubr
retf
jmp
cmp
mov
sbb
test
push
dec
or
sub
jge
inc
aam
and
pop
adc
xchg
bound
and
or
imul
dec
jmp
mov
xor
ror
addr16
xchg
add
inc
ret
sub
shl
es
push
imul
push
push
mov
iret
cmp
test
dec
jbe
fsubr
das
dec
xor
pushf
gs
in
push
xchg
push
out
jl
xchg
shl
add
je
ror
hlt
repnz
mov
xor
jne
pop
int3
jg
or
mov
cdq
movs
sub
jge
adc
pusha
stos
mov
add
js
or
sar
cmp
push
adc
pop
jmp
pop
lahf
ss
sbb
sbb
loop
pop
pushf
test
loop
sub
mov
call
push
jle
icebp
hlt
out
push
xor
ja
fisttp
jg
lea
jbe
stc
adc
push
aam
clc
xor
ret
cdq
xor
repnz
inc
pop
push
das
dec
les
xor
sbb
popa
cmp
js
add
jno
rcl
dec
cmp
mov
outs
jne
jg
or
adc
lea
cmp
imul
push
jb
nop
and
cld
movs
loope
pop
jb
mov
jecxz
push
push
shr
adc
(bad)
sahf
jno
mov
dec
retf
in
rcr
(bad)
push
inc
pop
in
inc
popa
es
push
mov
pop
jns
xchg
adc
inc
cmp
ror
xor
rcr
repz
out
xor
enter
popf
test
loope
add
inc
xchg
sti
inc
loopne
and
push
and
dec
cmps
leave
mov
rcr
lods
test
ins
in
aas
or
or
(bad)
jecxz
dec
inc
inc
mov
scas
adc
(bad)
cli
cmp
outs
xchg
push
sbb
mov
lds
scas
inc
mov
(bad)
pop
xchg
xchg
push
mov
test
push
(bad)
shl
call
mov
(bad)
xlat
in
sbb
test
add
mov
cmps
inc
lea
add
(bad)
xchg
and
cs
out
inc
cli
lea
aaa
test
icebp
xlat
dec
mov
push
jae
movs
adc
gs
scas
nop
push
jmp
test
mov
nop
and
xchg
xlat
mov
mov
fst
push
retf
adc
fs
or
aad
cld
push
lock
sti
dec
(bad)
or
jmp
push
or
mov
push
(bad)
adc
repnz
fstp
stc
xchg
lods
lods
xchg
dec
out
add
retf
push
aaa
in
imul
je
fdivr
imul
push
and
bound
ja
xchg
xor
xchg
jno
xchg
inc
mov
adc
retf
fiadd
mov
aam
pop
sub
sbb
add
loop
cmc
push
xor
pop
jne
jmp
mov
cmps
mov
cmps
rcr
mov
or
push
mov
inc
or
mov
cwde
out
test
add
pop
mov
gs
adc
inc
jnp
jp
aam
pushf
fisttp
or
sbb
jbe
je
out
inc
mov
call
pop
sbb
je
pop
jae
push
cmps
or
outs
ins
inc
int
jbe
scas
mov
pop
das
pusha
pop
(bad)
sub
xor
mov
fld
sti
and
mov
sbb
ret
dec
pop
lock
adc
cmps
sbb
popf
mov
dec
xchg
mov
dec
rcl
mov
sbb
shr
and
movs
test
loope
je
fwait
sub
xchg
loopne
ss
or
push
bound
lods
in
ins
sbb
xchg
pop
call
bound
fcomp
cmps
adc
ins
adc
mov
imul
loop
pop
sbb
iret
(bad)
fucom
xchg
fsubr
pop
test
xchg
push
push
popf
ret
not
xor
imul
adc
cmps
dec
out
cmps
mov
shl
lock
pop
xchg
and
mov
adc
mov
sub
je
loopne
jg
xchg
xor
pop
fwait
std
push
pop
xchg
xor
rcr
clc
push
out
lea
lods
aam
lods
xchg
pop
mov
add
popf
movs
addr16
adc
cmp
mov
call
cdq
in
cwde
add
ret
fst
imul
cmc
mov
xchg
cmp
push
sbb
sti
jecxz
scas
mov
sti
les
lock
and
out
cld
(bad)
in
xor
mov
mov
add
dec
pop
aas
sbb
pop
movs
adc
inc
mov
ret
ins
xchg
lahf
loop
lods
or
scas
lods
aaa
pop
cwde
imul
and
inc
arpl
jbe
or
sbb
jmp
and
xor
imul
mov
xor
sti
push
sbb
inc
cdq
pop
sbb
ja
not
push
mov
mov
push
icebp
adc
and
mov
leave
loope
jp
xchg
das
sbb
push
jmp
ret
inc
xor
xor
mov
ret
adc
retf
mov
fstp
push
mov
mov
fneni(8087
adc
fucomi
dec
shl
lock
add
aam
pop
mov
cli
inc
fwait
jl
popf
xchg
sub
aaa
out
mov
jmp
lahf
inc
sar
mov
fistp
mov
in
in
call
push
cmp
cmp
stos
idiv
inc
mov
mov
repnz
push
mov
(bad)
mov
mov
inc
loop
int
aad
cli
test
ss
fwait
jmp
sub
dec
cmc
push
(bad)
fadd
push
sub
das
push
push
inc
ins
fdiv
sbb
imul
cmps
lock
in
test
dec
pop
out
pop
cmps
dec
inc
ins
std
in
and
mov
outs
scas
xlat
(bad)
push
inc
pusha
into
jg
inc
push
fst
mov
inc
xor
mov
mov
mov
mov
mov
scas
mov
mov
dec
frstor
js
jae
mov
pop
stc
sub
jp
mov
fsub
mov
pop
out
mov
leave
rcr
jnp
mov
cmp
jae
adc
pop
jbe
call
adc
ffree
pop
add
popa
enter
into
cmp
out
push
bnd
mov
push
dec
push
jno
in
repz
ins
aam
sbb
stos
mov
cmp
retf
cmc
pop
pop
mov
rol
mov
mov
inc
jns
ror
push
lods
xor
mov
lods
mov
dec
jge
addr16
aam
adc
sbb
cld
jns
ret
cs
mov
dec
push
aad
ss
aas
rcr
inc
sub
in
push
pop
xchg
push
or
in
ret
push
push
in
sti
push
scas
xchg
xchg
cmp
jo
loopne
ss
std
pop
popf
fst
add
lods
aaa
sub
(bad)
mov
cmps
daa
mov
sbb
jle
stos
xchg
loope
hlt
jp
inc
xchg
cmp
inc
inc
inc
adc
sbb
xchg
inc
aas
inc
mov
cmp
repz
and
jle
push
xlat
ret
pop
mov
cdq
sbb
xor
test
call
scas
push
mov
xchg
inc
lds
fwait
or
adc
xor
(bad)
(bad)
jno
mov
and
cwde
sbb
iret
mov
inc
mov
xchg
not
jecxz
push
aam
sbb
add
(bad)
test
bound
vpslld
fimul
push
jb
xchg
std
out
clc
mov
leave
dec
cwde
mov
popf
cmp
mov
mov
lgs
in
repz
out
iret
sbb
ficom
retf
adc
loope
(bad)
mov
push
add
push
jne
cli
push
movs
(bad)
dec
mov
and
dec
dec
push
xchg
(bad)
adc
pushf
scas
out
xor
jge
jmp
neg
jl
and
(bad)
jmp
loop
sbb
xor
pop
sti
repnz
dec
xlat
mov
mov
fild
shl
push
shr
das
arpl
mov
and
xchg
leave
rcl
repz
es
clc
sub
jmp
cmps
imul
mov
imul
mul
pop
xor
and
add
ror
icebp
mov
ds
xchg
adc
shr
pop
dec
push
xlat
jp
add
sbb
lea
fs
inc
add
pop
das
xchg
jb
mov
dec
ds
push
mov
adc
popa
pop
xor
test
aam
jno
or
push
xor
js
xchg
pop
mov
xor
sub
nop
push
loope
fstp
stos
or
mov
in
push
pop
loop
enter
data16
hlt
repz
div
dec
nop
dec
in
ins
nop
adc
out
sahf
retf
(bad)
ds
adc
xchg
fdiv
call
or
mov
mov
or
js
dec
test
mov
pop
dec
mov
xor
stos
cmc
inc
adc
push
xlat
std
in
fcomip
ss
xlat
in
mov
dec
stc
aam
jb
imul
out
mov
mov
mov
pop
rol
jecxz
ins
les
test
movsx
cmp
iret
ss
cmp
ret
add
or
mov
loopne
lock
sbb
jbe
mov
pop
dec
das
pop
(bad)
lods
ja
cdq
cmc
std
mov
in
cli
movs
sub
cs
push
int
cmp
xchg
(bad)
(bad)
mov
cmp
lds
repz
pop
cli
ins
adc
sahf
movs
ja
test
or
push
add
or
push
mov
fst
xor
cdq
xchg
mov
sub
repnz
in
(bad)
arpl
pop
push
scas
lods
or
push
xor
cwde
mov
xchg
push
pushf
and
das
enter
sbb
iret
sbb
sbb
test
push
adc
cwde
cmp
sub
clc
outs
xchg
test
cmp
cli
jl
mov
pop
aaa
scas
sbb
adc
daa
dec
xchg
movs
dec
sub
add
fcmovnbe
repz
pop
dec
mov
push
inc
pop
in
nop
enter
(bad)
out
jge
movs
pop
pop
imul
mov
(bad)
shr
mov
rcr
xchg
adc
stc
ds
ins
pop
in
popa
pop
jb
fsub
fsub
arpl
aaa
inc
and
inc
ror
sbb
add
jp
je
retf
mov
lock
inc
and
add
nop
mov
add
add
add
stos
mov
add
pushf
mov
pop
inc
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
add
add
and
