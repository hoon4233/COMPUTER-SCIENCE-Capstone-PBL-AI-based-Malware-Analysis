out
icebp
push
add
add
add
add
add
sbb
arpl
xchg
iret
xlat
pop
xchg
cld
(bad)
push
bound
xchg
neg
push
dec
bound
or
mov
imul
sub
push
outs
(bad)
cs
bound
les
jecxz
ret
stc
test
add
cmp
mov
fst
adc
mov
sbb
scas
pop
popa
in
cwde
mov
(bad)
bound
inc
sbb
cmp
fcom
dec
sub
xchg
mov
hlt
dec
sub
bound
sub
call
adc
ja
out
retf
mov
mov
adc
sbb
xchg
out
test
xchg
in
nop
pop
test
icebp
lods
mov
pop
stc
cmp
jno
inc
cmp
add
fucomp
(bad)
sbb
loope
je
mov
xchg
xor
push
call
outs
loop
ret
inc
or
cs
stos
ss
inc
add
or
dec
xchg
xchg
test
dec
out
stc
jge
js
inc
jg
sbb
cs
jno
mov
mov
push
jmp
std
push
adc
(bad)
add
imul
outs
hlt
scas
push
outs
mov
addr16
out
pop
test
add
and
and
jg
dec
pop
pop
(bad)
shr
dec
jl
add
add
xlat
xor
retf
xchg
movs
pop
lds
leave
xchg
gs
into
xor
mov
push
and
(bad)
and
imul
mov
jecxz
lds
inc
adc
xchg
aam
cmps
and
and
mov
div
sub
dec
cs
clc
and
(bad)
inc
das
addr16
dec
in
pop
test
cdq
push
inc
ja
xor
sbb
and
mov
in
dec
mov
mov
sbb
adc
aad
sbb
lea
and
xchg
loope
std
cmp
cmps
fwait
int3
mov
aaa
cli
mov
(bad)
jg
push
ja
mov
mov
mov
cdq
pop
mov
xor
(bad)
jb
mov
pop
popf
xchg
jns
nop
sub
dec
mov
stc
jnp
fdiv
popa
outs
std
pop
sbb
fcom
call
(bad)
cmc
sahf
and
pushf
ret
fldln2
inc
aam
ins
jae
jmp
cmps
xlat
xor
fnstenv
lahf
jg
into
xor
(bad)
aam
mov
in
shr
je
mov
test
xchg
jae
movs
loop
xlat
xchg
dec
adc
(bad)
jg
cmp
and
test
xor
cdq
pop
js
repz
sub
cmp
xor
cdq
xchg
and
jnp
call
enter
mov
add
jne
mov
nop
fmul
jl
call
inc
call
loopne
and
jnp
jmp
(bad)
idiv
mov
movs
imul
or
pop
xlat
clc
mov
nop
xchg
ret
mov
in
cmp
and
mov
cmps
dec
and
or
scas
imul
out
out
jmp
lods
mul
mov
fcmovu
loope
mov
gs
mov
ins
xchg
cmp
hlt
xchg
sub
in
adc
std
and
stc
dec
and
jbe
in
sbb
fnstcw
mov
mov
dec
inc
ja
pop
jle
push
xor
out
inc
cmp
mov
fisub
add
mov
mov
not
call
retf
mov
push
ds
adc
std
ds
lock
fnsave
fisubr
inc
fadd
iret
ret
daa
adc
sub
cmc
lea
sti
test
popa
fs
pop
push
fbstp
jmp
pop
iret
adc
mov
mov
cdq
loop
jl
cmp
enter
sahf
icebp
test
jl
bound
inc
stos
lds
pop
popf
push
dec
gs
mov
mov
shr
cmp
add
ret
adc
and
push
in
icebp
pop
mov
push
out
lahf
add
scas
cmp
call
je
mov
out
push
pop
inc
jno
add
push
mov
neg
popf
pop
cmp
pop
leave
out
fs
(bad)
data16
mov
leave
fstp
stos
jle
aas
int3
pop
les
push
adc
mov
stc
stos
fild
xchg
sahf
fild
popa
in
mov
push
pop
jl
cmp
push
nop
stos
add
inc
repnz
adc
inc
(bad)
outs
push
(bad)
outs
mov
push
mov
mov
fwait
scas
jecxz
je
popf
loopne
(bad)
frstor
mov
std
sar
(bad)
pop
pop
popa
cmp
test
icebp
pop
inc
add
test
sub
pop
mov
cmps
hlt
adc
sbb
xor
fwait
mov
pshufw
je
(bad)
(bad)
fsub
sbb
add
mov
adc
adc
cmp
sbb
push
fistp
add
push
dec
mov
sub
push
xor
scas
lea
retf
jg
sub
jno
lea
in
out
lea
xchg
inc
inc
leave
mov
sub
xor
(bad)
stc
dec
add
int
xchg
ins
mov
sbb
inc
lods
jmp
in
mov
aaa
push
int3
sub
scas
lods
scas
fsub
je
push
aas
call
push
sub
imul
xchg
pop
je
jmp
or
inc
es
push
das
leave
loopne
or
sub
iret
mov
adc
adc
mov
pop
ss
fdiv
idiv
cmp
inc
cmps
fdiv
into
stos
adc
fisub
ins
loope
xor
ja
es
mov
clc
mov
xchg
jmp
push
addr16
js
(bad)
push
aad
mov
jecxz
mov
dec
lea
daa
and
jle
xchg
inc
dec
mov
add
push
or
shl
mov
pop
inc
outs
jp
add
ins
jne
icebp
arpl
lds
fld
(bad)
je
enter
jg
shr
in
lahf
sbb
ds
sub
nop
sub
xchg
idiv
jmp
add
jbe
jno
xchg
retf
inc
and
into
out
outs
sub
lods
(bad)
xor
dec
gs
jns
fmul
add
adc
ror
adc
sub
cwde
jbe
sbb
movs
out
aam
push
into
imul
mov
inc
das
cmp
or
add
cmps
cmp
mov
push
and
dec
scas
int3
dec
xchg
popf
mov
pop
ds
rol
xchg
push
je
lea
stos
dec
aad
mov
xor
imul
jno
and
movs
push
jnp
sbb
call
nop
and
xchg
jno
fbstp
pop
jle
popf
sub
das
nop
popa
mov
cmp
mov
xchg
lods
ds
mov
pop
adc
les
addr16
mov
mov
fwait
std
push
mov
or
push
sbb
inc
dec
and
mov
mov
sbb
push
ins
fcmovnu
push
call
lods
mov
xchg
push
mov
push
or
mov
jmp
mov
inc
fisub
adc
mov
ror
dec
xor
sub
hlt
jbe
not
lock
push
adc
out
inc
cmc
mov
pop
jle
mov
mov
mov
arpl
hlt
nop
push
jp
es
lds
push
shl
jmp
jnp
loopne
push
rcl
xor
dec
push
xchg
dec
scas
xchg
adc
cli
(bad)
lods
cmps
inc
ins
push
les
cmp
arpl
add
xor
int3
pop
(bad)
push
xor
out
pop
xor
sahf
in
or
repnz
sahf
sbb
mov
fbstp
ss
mov
mov
mov
das
add
adc
imul
imul
lods
sbb
sub
in
aam
cli
xor
adc
sub
loope
xor
sub
pop
add
sar
ss
out
test
mov
(bad)
cld
mov
and
and
add
test
fild
mov
push
popf
dec
fld
ins
dec
push
je
dec
push
popf
add
sbb
aad
jb
ds
pop
push
jge
adc
bt
fnstenv
repnz
adc
popa
fisubr
add
adc
pop
outs
mov
and
inc
loopne
ds
repnz
dec
in
mov
repz
sub
pop
cmp
inc
imul
pusha
mov
add
cwde
push
add
xor
and
popa
sub
mov
mov
inc
mov
outs
xor
in
jne
jmp
add
cmp
fpatan
call
pop
cmc
fidiv
(bad)
test
add
mov
or
cmc
adc
push
jmp
and
outs
fstp
mov
mov
je
or
mov
pop
(bad)
sub
leave
xor
sub
scas
and
cwde
and
xor
push
mov
and
push
push
in
sub
sbb
sub
mov
fs
rcr
lea
scas
fst
pop
mov
hlt
sub
fiadd
mov
add
pop
mov
dec
ja
(bad)
pop
and
lds
jp
push
mov
(bad)
jl
fs
mov
in
add
(bad)
pop
(bad)
ss
repz
outs
jp
outs
sub
out
sbb
sub
pop
fmul
test
ins
mov
pushf
pusha
jle
mov
in
sbb
daa
dec
mov
bound
sti
adc
jge
and
pop
push
outs
mov
or
push
pop
push
fadd
add
arpl
add
fwait
mov
lods
jne
mov
xchg
retf
jp
test
ret
fwait
jg
push
xor
cmps
cmp
sub
lock
dec
out
mov
bound
int3
sbb
mov
icebp
jmp
pop
mov
add
dec
mov
add
les
or
clc
push
mov
push
dec
mov
mov
add
cmp
ret
sti
xchg
lods
movs
sub
pop
push
sub
mov
or
and
dec
dec
aas
jae
mov
retf
xchg
add
lahf
js
xchg
cdq
ins
jl
stc
xchg
mov
enter
sbb
dec
test
test
jae
test
push
test
pop
arpl
lods
mov
icebp
pop
test
in
ss
(bad)
mov
xchg
mov
(bad)
xchg
cmp
inc
mov
enter
sub
sbb
aad
add
fnstenv
sar
int3
and
xchg
lods
mov
cmp
int
jmp
mov
add
jmp
frstor
(bad)
int3
mov
adc
cmp
mov
push
pop
cld
xchg
pushf
xor
fadd
push
inc
jmp
sbb
call
clc
push
xchg
add
mov
sub
aad
cmp
cdq
and
jmp
sbb
retf
sub
pop
jnp
jl
or
mov
into
(bad)
jmp
clc
and
das
adc
out
xchg
int3
cld
pop
jb
fld
cmp
jno
cmps
sub
jge
mov
lahf
dec
dec
pop
pop
sbb
push
cmp
inc
adc
imul
xor
out
imul
mov
cmp
imul
pop
inc
jno
call
fsubr
push
mov
int3
out
or
lock
pop
and
pop
mov
inc
inc
mov
ficomp
mov
je
(bad)
in
jmp
pop
in
cmp
xchg
and
int3
push
dec
mov
leave
mov
mov
popa
jne
leave
loop
in
xchg
sahf
xor
cmp
mov
mov
daa
mov
or
mov
scas
pop
in
fidiv
cmp
dec
repz
ret
ins
lds
sbb
int
nop
out
adc
pop
lock
sbb
mov
pop
mov
push
dec
aaa
lahf
out
or
adc
jno
das
(bad)
nop
bound
sub
pop
mov
or
dec
test
out
mov
das
pushf
push
(bad)
xchg
sahf
push
fsubr
mov
sbb
push
pop
movs
popf
sahf
mov
daa
push
jne
adc
xchg
adc
xor
cmp
repz
inc
cmp
and
in
mov
pop
out
cdq
ficom
inc
fdiv
sbb
jae
in
mov
aas
mov
push
out
pop
push
adc
dec
adc
loope
jnp
push
(bad)
xor
push
sub
or
mov
jno
nop
xchg
iret
add
inc
repnz
jo
cmps
push
call
dec
or
xor
or
movs
loope
je
ret
clc
push
inc
sub
or
adc
test
xchg
stos
or
add
mov
jno
mov
pop
add
sub
ins
mov
ret
in
sbb
jecxz
pop
imul
push
inc
sbb
pop
mov
fiadd
sub
test
retf
pop
mov
scas
push
repz
retf
aam
xor
mov
lea
cld
bound
ror
and
repz
(bad)
xor
dec
ss
mov
push
sbb
enter
retf
mov
xor
inc
jg
mov
or
lock
and
iret
jge
nop
xor
or
ds
adc
retf
xchg
fld
and
mov
nop
arpl
pop
mov
dec
inc
dec
jne
rol
add
(bad)
les
lahf
inc
lds
pop
jbe
pop
sub
jno
imul
sbb
stos
push
xor
in
mov
push
mov
ins
push
in
sbb
mov
push
js
test
into
dec
pop
xchg
mov
popf
sti
jmp
push
lahf
adc
cmp
pop
pop
aad
test
mov
les
push
cmp
aas
mov
pushf
xchg
mov
lods
add
addr16
stos
jmp
dec
(bad)
mov
pop
imul
stc
pusha
and
cs
push
cmp
jge
mov
ret
lods
sbb
xlat
jae
mov
dec
call
pop
nop
mov
popa
pushf
fcomi
mul
mov
adc
xchg
sar
xchg
jl
push
mov
les
inc
mov
jmp
mov
mov
xchg
add
mov
push
pop
test
int3
sub
data16
repz
bound
jo
push
jnp
icebp
pop
iret
stos
fcom
push
mov
dec
or
mov
jo
retf
pop
mov
xchg
sub
cmps
aaa
push
jl
jmp
sbb
push
repz
loopne
mov
pop
ins
sbb
(bad)
pop
xchg
mov
add
push
pop
hlt
pop
cmp
xor
out
ret
rcr
adc
push
fild
rol
dec
aam
arpl
(bad)
ins
xor
xchg
icebp
pop
fwait
push
(bad)
mov
scas
xor
test
dec
jle
xor
xchg
mov
fnstenv
pusha
cli
inc
jns
and
rol
mov
mov
xor
sub
add
xchg
mov
lea
icebp
or
jp
mov
(bad)
dec
in
cmps
hlt
call
ins
xchg
emms
mov
jecxz
mov
pop
popa
adc
cmps
dec
cs
aam
xor
xchg
cld
and
sahf
jg
adc
mov
pop
data16
cmp
or
inc
cmp
pop
xor
dec
inc
push
and
retf
ss
mov
xor
out
push
mov
xor
add
lea
js
ficomp
push
sti
xchg
xchg
(bad)
(bad)
push
pop
xchg
mov
add
mov
sub
das
add
mov
pop
lods
retf
pusha
arpl
pop
out
in
lds
dec
push
popa
mov
push
dec
hlt
cwde
lods
pop
xlat
div
mov
or
in
add
add
adc
ror
mov
jbe
frstor
ficomp
test
push
ja
sar
inc
jmp
cmovp
(bad)
sub
and
sbb
fidiv
sub
(bad)
and
mov
push
pop
je
cmp
les
push
dec
cmp
rcr
leave
or
and
pushf
jbe
mov
mov
movs
sub
dec
call
aam
aaa
leave
in
aam
pusha
mov
cmps
mov
scas
stos
ins
sub
pop
cdq
call
into
push
in
cmp
in
sub
mov
fadd
lods
or
loop
add
push
sbb
xlat
pop
jbe
mov
and
(bad)
into
cmc
test
jmp
fadd
call
les
or
push
xchg
lea
xchg
cs
xchg
mov
xchg
push
lods
(bad)
mov
push
push
retf
and
adc
mov
repnz
pop
ror
repz
das
call
mov
bound
mov
xor
es
pop
lods
sub
fxch
retf
inc
sub
out
rol
movs
pop
mov
std
add
test
outs
dec
mov
mov
pop
sub
pop
data16
dec
imul
or
jne
in
call
out
sub
mov
or
pop
mov
mov
int
dec
mov
and
(bad)
mov
and
xor
push
cmp
or
lahf
mov
jae
mov
pop
sbb
mov
in
movs
cmp
mov
jb
mov
pop
xchg
scas
outs
and
add
add
stc
out
sbb
inc
fisttp
movs
in
mov
mov
sar
(bad)
jnp
movs
mov
mov
xchg
pop
cwde
(bad)
scas
dec
push
and
fist
mov
inc
xchg
or
loope
(bad)
rol
lods
retf
xchg
cmps
out
inc
xor
cmp
(bad)
sub
sub
in
js
adc
cs
jb
in
pusha
je
sub
jno
fld
clc
xchg
arpl
mov
mov
pusha
xchg
cmp
mov
cld
sbb
hlt
mov
xchg
das
cdq
test
dec
ret
sbb
fsub
sbb
ret
jnp
add
(bad)
les
imul
icebp
xchg
mov
mov
push
out
cmp
inc
xor
xor
or
and
sub
stos
mov
fucomp
sbb
dec
or
xchg
push
cli
sub
les
ret
out
fist
lock
retf
inc
cmp
(bad)
ja
out
out
lock
imul
pop
pop
pop
enter
inc
movntq
cld
sub
cli
mov
sti
js
movs
pop
and
jb
cmps
sub
loope
cmp
scas
(bad)
test
popf
lahf
ret
and
sub
neg
mov
mov
fdivrp
lock
gs
rol
gs
sub
xor
test
adc
popa
and
pusha
and
loop
and
mov
and
push
(bad)
pop
xchg
mov
pop
jmp
mov
push
adc
repnz
repz
gs
mov
rcl
fild
jae
jmp
inc
stos
jb
inc
imul
je
mov
rol
cmps
mov
dec
and
inc
mov
in
btc
add
les
into
rcl
mov
test
adc
out
jmp
js
xor
cs
or
push
mov
je
(bad)
xchg
xchg
adc
aad
loopne
cmps
icebp
cmp
adc
inc
cdq
or
pop
cdq
sbb
jp
shl
cmc
pmaxub
scas
jo
dec
loopne
ret
or
pop
(bad)
jnp
scas
imul
in
cli
pop
xchg
pushf
call
mov
outs
rcr
jg
inc
cmp
out
push
aam
jmp
dec
add
aad
repz
mov
xor
pushf
inc
mov
or
add
cmp
loop
mov
int
push
xchg
cli
xchg
push
push
mov
sub
xor
mov
dec
mov
cmp
jge
jg
or
int3
jae
add
push
js
push
mov
push
cmp
xor
int
jns
pop
or
cli
cmp
daa
pop
mov
in
cld
ins
cld
push
cmp
push
cld
sti
popa
les
add
lahf
mov
scas
mov
fild
push
jne
fwait
adc
sub
adc
push
je
jno
retf
int3
adc
stos
mov
dec
and
ins
jle
sbb
jbe
pop
inc
scas
fcomip
cmovl
daa
cmps
jmp
and
outs
mov
imul
cwde
(bad)
push
retf
and
jns
jle
and
lods
fisubr
xlat
mov
cmp
push
arpl
adc
adc
dec
mov
outs
mov
jmp
aad
adc
pop
and
jl
jns
repz
cmp
adc
push
frstor
enter
das
mov
xchg
sbb
jb
mov
sub
xchg
sub
leave
xchg
jno
scas
mov
mov
or
popf
fld
aaa
adc
scas
push
movs
dec
retf
cmp
xor
push
mov
retf
cmp
fwait
sub
jns
cmp
retf
in
xchg
out
movs
sub
mov
std
sbb
lock
retf
retf
mov
stos
sahf
xor
nop
sar
sahf
dec
test
test
ds
je
mov
adc
daa
push
pop
mov
int
add
add
retf
sbb
dec
xchg
mov
xchg
leave
mov
jnp
inc
in
jle
lods
xchg
pop
movs
je
inc
in
or
pop
addr16
mov
repnz
jle
push
add
push
hlt
xchg
cmp
out
jno
addr16
(bad)
or
nop
lods
out
aam
(bad)
loopne
jp
xlat
aaa
rcl
aam
arpl
push
cmp
mov
ss
mov
sbb
dec
sub
mov
pop
sub
and
jecxz
das
in
or
jl
shl
rcl
dec
arpl
(bad)
inc
or
idiv
pop
or
dec
sub
dec
mov
test
in
push
push
mov
enter
xchg
pop
mov
push
jge
dec
sbb
xor
addr16
repnz
adc
repz
add
xor
push
adc
cdq
mov
dec
aas
(bad)
out
jecxz
xor
lea
push
fadd
(bad)
imul
test
jno
mov
mov
cmp
mov
mov
xchg
scas
cwde
cmc
inc
add
or
pop
push
jl
stos
stos
jge
popf
lock
shl
or
cdq
dec
pop
add
sub
mov
ror
aad
dec
add
pusha
xor
mov
push
lods
dec
ret
lea
jecxz
popf
mov
call
int3
dec
popf
sti
aam
outs
retf
lods
in
cmp
movs
push
xchg
lea
ror
jl
cmp
ret
unpcklps
mov
jmp
adc
lock
jo
jmp
sbb
pop
mov
lock
ret
sar
fdiv
jne
and
cmp
xchg
fidivr
xchg
mov
adc
call
xchg
jb
mov
adc
sub
dec
sub
sub
je
lock
mov
mov
retf
push
in
mov
pop
loop
jp
adc
inc
mov
mov
fbld
dec
scas
mov
sub
aas
push
hlt
cmp
inc
cmp
xor
inc
pop
mov
xor
sbb
add
icebp
in
lods
hlt
or
sbb
mov
cmp
mov
inc
ins
jmp
pop
add
cld
sub
in
xchg
mov
sub
lods
gs
dec
popf
or
or
xchg
xchg
sti
cld
lods
mov
sbb
sub
lods
mov
inc
sub
fisub
mov
test
mov
loop
js
mov
pop
sbb
aad
push
mov
ss
sub
push
dec
loop
in
fcmovne
pop
xchg
sub
pop
imul
int
or
outs
imul
not
outs
lods
loope
lods
call
dec
xor
and
movs
push
lock
and
push
jmp
add
lahf
cmp
inc
or
mov
rcl
lods
dec
in
dec
lds
imul
adc
cmp
std
mov
aam
das
add
mov
loopne
cmp
popf
mov
aam
jae
ja
shl
lods
or
hlt
xchg
jae
jl
int3
popa
sbb
mov
inc
retf
xor
dec
xor
cmp
js
mov
mov
mov
sbb
popf
mov
jno
push
retf
cdq
out
jmp
adc
das
add
push
push
xchg
popa
(bad)
cld
jle
add
add
mov
or
xlat
es
sub
rcr
and
jmp
add
ins
cwde
inc
mov
jbe
dec
mov
lods
mov
sbb
(bad)
fst
pop
sahf
in
ret
push
sub
xchg
loopne
lds
xchg
cmc
push
inc
fld
sbb
sub
jnp
dec
fwait
je
shl
bound
inc
and
and
jae
jnp
xchg
imul
and
ss
cmp
pop
(bad)
jmp
and
or
xchg
push
std
fild
cwde
jo
pop
inc
clc
aas
fisub
xchg
sub
fist
xchg
rcl
mov
push
add
rol
cwde
lahf
dec
xchg
mov
jno
or
cs
dec
daa
(bad)
jge
push
adc
test
cwde
addr16
jl
fdiv
fcomip
stos
je
or
or
xchg
leave
inc
popa
imul
lods
mov
idiv
sub
adc
pop
cmp
or
aaa
sub
dec
xor
cmps
cmps
add
arpl
(bad)
cmc
pushf
gs
jae
cmc
movs
sub
add
jne
lods
dec
jle
std
in
sbb
mov
mov
dec
push
pop
sub
jmp
sti
jg
adc
mov
push
xor
es
repnz
cmp
repnz
jbe
sub
aas
mov
cmp
imul
(bad)
gs
mov
or
mov
mov
int
sar
xor
jb
fadd
or
fidiv
ror
call
push
ror
loopne
fcmovbe
ret
dec
rcr
iret
lahf
pop
stc
sbb
and
ds
ins
arpl
jle
push
mov
in
test
sub
jecxz
add
loopne
out
sub
(bad)
cmp
sbb
xchg
das
push
jae
fwait
scas
or
push
shr
loop
inc
add
pop
or
es
sub
push
cmps
test
dec
ds
stos
lods
xor
pop
imul
or
clc
jl
movs
outs
pop
push
xchg
arpl
mov
adc
mov
inc
push
arpl
jb
jecxz
jmp
and
sub
or
jl
pop
test
xlat
jb
cmp
mov
(bad)
jle
mov
lahf
adc
xor
fsub
mov
pushf
jo
arpl
lahf
xlat
pop
mov
(bad)
ins
rcr
jne
add
xlat
clc
and
lahf
fnstenv
jbe
mov
bound
fild
cwde
push
add
sbb
jge
push
sbb
loopne
call
mov
xchg
(bad)
out
adc
adc
push
scas
jae
retf
daa
mov
jmp
dec
(bad)
sar
cmp
mov
das
xchg
movs
stc
(bad)
and
in
mov
mov
enter
mov
fcmovbe
mov
aas
inc
lods
adc
out
hlt
mov
rcr
mov
sub
and
lea
and
push
mov
cmp
pop
or
(bad)
push
mov
scas
mov
sub
cli
pusha
hlt
retf
gs
sbb
call
sbb
rcl
fwait
push
xor
mov
enter
dec
add
les
mov
inc
jmp
mov
jb
(bad)
jnp
inc
xchg
and
jge
popf
jle
clc
and
lea
popfw
mov
in
xor
ins
inc
repnz
push
xchg
xor
mov
outs
jne
sbb
call
(bad)
test
inc
clc
lods
xor
mov
fwait
push
(bad)
dec
loope
cmp
jl
xor
loopne
fistp
push
mov
push
xor
add
loope
test
sbb
push
adc
mov
adc
push
div
mov
imul
mov
or
pop
xchg
pop
and
push
test
inc
ins
ja
and
bound
ficom
test
push
sbb
ins
sbb
pop
add
pushf
pop
or
sub
jns
fcom
fmul
mov
fmul
ins
mov
stc
mov
mov
sub
jmp
mov
fisttp
arpl
mov
add
jbe
retf
mov
mov
cmc
call
sbb
dec
sub
xor
push
or
fdivr
ja
xchg
aam
inc
xchg
sahf
xchg
movs
push
fsub
or
arpl
sub
adc
fld
lahf
inc
stos
mov
outs
jo
and
dec
sti
imul
(bad)
mov
test
movs
cli
imul
cmp
jbe
and
jp
cmps
lock
repnz
sbb
out
or
sti
dec
sbb
sub
or
pop
pop
sahf
xchg
popf
sub
shl
fidivr
inc
sar
pop
retf
sub
je
dec
mov
out
mov
sbb
and
(bad)
aad
pop
xlat
mov
adc
jg
pop
xchg
pandn
ss
xor
gs
jmp
adc
and
out
(bad)
mov
(bad)
jmp
pop
inc
push
es
cmp
fs
and
int
ds
enter
xor
fs
in
add
cs
std
neg
or
out
mov
repnz
pop
in
xor
sbb
test
loop
fs
fdiv
inc
xlat
xchg
and
lock
push
sub
or
xor
fnstenv
nop
hlt
sub
xor
(bad)
idiv
mov
rol
ret
adc
mov
mov
(bad)
psadbw
mov
out
daa
sbb
(bad)
ret
in
add
inc
fwait
(bad)
icebp
lods
test
fsubr
in
pop
push
dec
test
imul
inc
jbe
push
add
mov
mov
call
or
jecxz
pusha
cli
mov
(bad)
out
mov
fwait
pop
(bad)
imul
mov
lods
ror
pusha
push
not
lahf
pushf
sub
xor
jno
xor
push
inc
(bad)
push
(bad)
fdiv
pushf
int
sub
pop
jmp
repz
outs
enter
fisub
out
sbb
inc
add
push
dec
dec
rol
sbb
jo
push
push
stos
cmp
outs
cmp
mov
sbb
jg
arpl
in
loop
les
mov
arpl
cmp
pop
out
mov
push
inc
or
jle
xchg
daa
fild
fstp
pop
in
shr
jl
sbb
jo
push
les
leave
xchg
(bad)
inc
idiv
mov
nop
test
stc
add
sub
or
push
dec
mov
or
pop
and
ss
mov
(bad)
out
out
pop
mov
aam
inc
push
add
test
pop
cmp
fs
icebp
pop
jmp
jo
adc
xchg
xor
xchg
mov
add
lods
add
test
pop
mov
out
daa
ret
sbb
pop
inc
push
movs
sahf
movs
icebp
fisubr
data16
xor
add
movs
rcr
mov
xchg
cmps
retf
pop
inc
jmp
xchg
sbb
jb
rcl
data16
mov
dec
lahf
cmps
data16
loope
cmp
mov
popa
call
mov
push
cli
loop
dec
sub
and
pop
lahf
push
or
cmp
ds
sbb
jns
cmp
xchg
mov
es
and
(bad)
jge
shr
xor
jb
retf
enter
ret
pop
je
push
stc
mov
lea
push
movs
aas
pop
movs
pop
and
jg
inc
clc
inc
xchg
stc
sbb
push
xchg
in
sbb
mov
xor
in
dec
inc
cdq
xor
mov
loopne
mov
ret
dec
xor
pop
sahf
and
sahf
test
xor
xor
jmp
pop
sahf
mov
dec
push
jo
mov
and
cmp
add
mov
and
out
iret
dec
dec
jmp
pop
out
jnp
loopne
push
std
cmp
movs
push
xchg
and
inc
cmc
mov
pop
push
stos
and
out
push
cmp
xor
outs
shl
ficomp
sub
sbb
aas
xchg
sbb
pushf
movs
jmp
jae
cmps
cmp
test
fisttp
clc
test
dec
adc
inc
in
ins
xchg
add
jp
xor
loope
pop
movs
inc
in
inc
pop
mov
retf
cmp
in
push
xchg
or
add
mov
jle
jg
mov
add
pop
sbb
or
cmc
jecxz
out
js
jns
push
aad
dec
out
out
adc
mov
es
inc
in
jns
ss
inc
inc
xor
ins
loop
push
mov
lock
lea
add
add
outs
fs
or
push
push
inc
or
xchg
mov
out
add
(bad)
aam
test
fist
jns
jg
jne
fst
std
sar
mov
cmp
outs
pusha
mov
adc
test
iret
out
clc
mov
pop
push
and
repnz
pop
jne
mov
aad
shl
jp
adc
stos
mov
mov
push
mov
or
iret
push
test
mov
xlat
ins
add
clc
(bad)
push
push
adc
sbb
arpl
stos
and
add
aas
repz
sub
fs
and
sub
cmps
dec
in
popf
ror
ins
pop
cmp
jecxz
sbb
jp
push
mov
mov
aad
mov
inc
loopne
adc
and
jae
mov
inc
or
hlt
outs
out
cmp
cmp
pop
add
cmps
adc
fcmovnu
dec
(bad)
pop
sbb
pop
push
leave
push
xor
test
sbb
dec
mov
hlt
push
adc
jbe
arpl
int
adc
jmp
scas
aaa
jne
loope
pop
push
jb
inc
mov
push
lea
or
rol
retf
xchg
sahf
dec
aam
mov
push
sub
lock
and
shl
inc
mov
sub
aam
idiv
test
leave
and
test
pushf
ins
stos
fwait
out
cmp
pushf
int
jno
adc
or
call
or
daa
pop
push
jge
daa
mov
push
retf
push
ins
pop
xchg
mov
jle
icebp
fwait
push
pop
dec
fld
or
mov
add
sub
data16
out
inc
or
cmp
xchg
test
mov
cmps
push
xor
jnp
mov
int
(bad)
pop
nop
inc
and
repz
rcr
in
cmp
std
mov
mov
mov
icebp
in
lds
int
ret
into
scas
inc
mov
sbb
stos
push
xlat
jge
mov
movs
inc
lds
adc
(bad)
(bad)
call
idiv
and
dec
dec
hlt
mov
or
iret
push
cmp
mov
push
cld
dec
stc
repnz
pop
leave
addr16
scas
mov
jle
add
add
std
je
and
retf
stos
inc
neg
sahf
pop
xchg
push
repz
movs
jg
pop
dec
ficom
and
xchg
fdivr
retf
cs
sbb
lds
cmps
push
inc
sbb
mov
adc
adc
mov
mov
cmp
jmp
mov
dec
mul
xchg
or
and
inc
jg
sub
mov
int
or
outs
retf
xchg
add
cmp
add
sub
scas
adc
adc
test
dec
icebp
mov
fdivrp
cmp
popa
jge
push
adc
push
dec
in
push
in
stos
mov
adc
jae
pop
adc
jb
sti
in
idiv
out
stos
pop
std
and
cmp
xchg
ret
cmp
inc
push
js
pop
add
xchg
test
sbb
pop
out
call
add
les
or
nop
fs
mov
(bad)
inc
push
test
ret
jp
push
and
gs
sub
cmp
cmp
sub
adc
cs
mov
mov
stc
movs
bound
fs
es
sti
sub
shr
fwait
mov
push
je
mov
sub
sahf
inc
mov
pop
outs
sbb
repz
mov
mov
xchg
cdq
dec
push
lea
jb
pop
push
jp
sbb
pop
push
sub
and
iret
jecxz
dec
retf
mov
in
or
dec
sbb
mov
popf
adc
inc
dec
xchg
jecxz
mov
xor
loope
mov
addr16
inc
(bad)
or
dec
sti
xchg
dec
push
inc
les
jle
loopne
cld
pop
add
mov
and
lahf
jmp
xlat
fwait
or
pop
push
xchg
ins
mov
div
pop
(bad)
dec
das
cwde
dec
pop
outs
pop
mov
push
stos
sub
add
push
mov
xor
and
mov
mov
adc
or
neg
xor
xor
sub
outs
mov
retf
(bad)
test
push
rcl
or
mov
mov
loop
daa
stc
xchg
lds
out
inc
add
dec
mov
and
dec
sub
xchg
(bad)
cs
sub
cmc
call
and
stos
out
xchg
or
pop
lods
mov
dec
jg
sti
inc
cmp
adc
pop
test
cmps
sub
pop
sbb
add
xchg
fist
(bad)
sbb
mov
sub
cld
(bad)
adc
rcr
aas
cmp
ins
mov
jno
les
mov
addr16
test
aaa
mov
ins
(bad)
ins
and
sar
retf
cmps
xchg
inc
mov
je
adc
sbb
inc
repnz
add
icebp
ror
or
int3
sbb
in
inc
push
(bad)
jnp
imul
mov
push
pop
jl
push
sbb
scas
mov
add
push
addr16
rcr
or
fldenv
outs
enter
or
jae
dec
cmp
xchg
cld
push
jno
inc
ins
test
call
in
dec
add
mov
mov
mov
xchg
lea
je
fstp
adc
jmp
es
jns
rcl
mov
cmp
jmp
int3
fisub
xor
xchg
sbb
pushf
and
retf
pop
adc
aaa
adc
fst
sbb
sar
shl
(bad)
push
push
cmps
pop
xchg
sub
add
jmp
cmps
cli
sub
xchg
adc
fmulp
fucomp
xchg
mov
es
push
push
retf
out
push
adc
xor
ficomp
movs
push
mov
xchg
loope
sbb
cmp
jg
push
mov
fs
and
in
or
stc
xchg
add
mov
inc
cmp
jne
or
and
push
mov
adc
sub
rcr
xchg
and
cmc
arpl
sub
fild
addr16
int3
fidivr
mov
in
adc
cli
mov
and
sub
mov
cmps
push
mov
dec
mov
dec
lahf
cmp
cmp
dec
inc
test
dec
add
mov
dec
adc
outs
mov
fsubrp
mov
pop
sub
ficomp
jmp
les
mov
jns
mov
xchg
pop
xchg
mov
mov
xlat
pop
mov
ror
cdq
and
stos
loope
mov
sub
sub
dec
or
xlat
int3
pop
stos
inc
dec
aas
aaa
pop
cmp
das
inc
fimul
call
inc
fsubrp
aad
xor
ret
push
cld
ror
mov
and
sti
(bad)
xor
sti
adc
push
ret
push
jmp
out
adc
adc
sub
test
pop
sbb
les
bound
js
shl
cmp
ret
dec
xchg
push
adc
repz
push
popa
aam
ja
ds
push
test
mov
xchg
jbe
sub
dec
out
fistp
dec
aaa
test
ins
imul
call
lock
jle
std
cmc
mov
xchg
jmp
clc
clc
shr
cmp
mov
sub
or
rol
sti
xchg
or
xor
inc
pop
out
pop
sbb
xchg
(bad)
lds
mov
iret
push
fld1
int3
mov
fs
or
mov
mov
pop
jg
and
jno
mov
sbb
xchg
rol
xor
push
xor
sbb
adc
xor
or
xchg
pop
imul
pushf
cld
cmc
lock
dec
xchg
pop
cmps
xchg
iret
jns
pop
or
icebp
xchg
xchg
push
test
gs
adc
ins
lock
dec
cli
int
dec
push
mov
lea
adc
aad
sbb
cmp
imul
jmp
or
lea
or
cmp
push
adc
lea
pop
ss
xchg
and
inc
push
or
mov
loop
jns
mov
sub
cmps
(bad)
les
pop
into
push
pop
jmp
push
or
lea
xchg
jge
dec
push
sub
out
ret
push
ret
mov
jp
xchg
mov
push
nop
pop
xchg
xor
push
dec
mov
dec
push
jl
mov
mov
into
mov
jno
dec
pop
push
pop
out
rcr
fidivr
stos
retf
inc
xchg
icebp
xor
dec
aad
lods
sub
push
cwde
sbb
outs
push
out
hlt
adc
xchg
stc
(bad)
xor
cmc
pop
pop
nop
or
(bad)
and
mov
mov
add
outs
adc
mov
call
jne
icebp
leave
xor
mov
jp
loopne
dec
mov
movs
in
ins
dec
mov
enter
daa
sahf
test
sub
xchg
in
cdq
xchg
xchg
xchg
mov
mov
cwde
ret
dec
inc
test
mov
adc
rol
xor
ror
movs
xchg
mov
leave
pop
xchg
jmp
jge
(bad)
ret
pop
dec
fld
xlat
xchg
retf
sbb
clc
mov
mov
xchg
dec
sbb
pop
into
mov
rcl
fcmove
lods
ret
or
or
aad
aas
jnp
outs
call
rcl
and
or
push
or
imul
sub
pushf
lds
adc
leave
call
add
pop
fwait
sub
xchg
cli
je
xchg
jbe
add
out
mov
dec
fcomip
jg
gs
es
(bad)
ror
pop
fwait
xchg
pop
clc
xchg
push
sbb
mov
or
inc
lods
sub
aaa
(bad)
fisttp
cmp
jne
(bad)
xor
mov
sbb
adc
push
sti
and
mov
push
pop
cmp
push
push
je
xor
push
cmovl
addr16
imul
or
jg
retf
daa
fistp
gs
into
mov
pop
adc
je
imul
xchg
scas
mov
cs
imul
push
dec
xchg
(bad)
jle
adc
inc
in
and
les
hlt
add
aaa
mov
(bad)
cld
push
in
pop
and
inc
mov
inc
mov
and
jmp
mov
call
aam
fst
push
cld
mov
aad
shl
test
jbe
adc
jmp
aam
outs
adc
inc
add
jns
ret
pop
pop
les
adc
imul
jbe
fcomp
mov
cmc
mov
sbb
mov
jle
add
fstp
jg
lds
inc
xchg
mov
xor
push
and
pop
cmp
inc
mov
in
mov
nop
push
js
dec
clc
daa
div
mov
aad
fiadd
or
jns
(bad)
jnp
ret
pop
(bad)
pop
dec
xchg
movs
push
(bad)
das
add
sub
adc
mov
call
xlat
shr
sub
arpl
test
aad
mov
ins
bound
movs
mov
or
dec
dec
sbb
in
shr
sbb
ss
cmp
bndstx
xor
daa
dec
sub
call
mov
mov
sbb
adc
js
out
mov
rcr
fdiv
fadd
das
push
into
call
pop
or
loopne
scas
xor
pop
in
jmp
sbb
xchg
pcmpeqd
ret
add
sub
fbstp
xchg
cmp
add
dec
stos
xor
inc
inc
push
inc
pushf
cmp
dec
or
outs
rcr
mov
jmp
aam
nop
jbe
mov
in
scas
icebp
mov
idiv
aad
or
in
bound
ins
ds
(bad)
cmp
scas
mov
fdivrp
xchg
(bad)
std
icebp
sahf
push
jmp
aas
mov
push
ins
sbb
xor
push
or
gs
test
and
les
or
dec
arpl
xor
aaa
das
test
cld
in
es
add
mov
dec
sahf
fsub
inc
jb
ins
mov
pushf
clc
xchg
imul
(bad)
jbe
sub
or
(bad)
out
mov
aad
mov
sbb
pusha
fimul
jns
pop
adc
add
sbb
out
ror
ds
push
cld
aad
fadd
cmps
(bad)
(bad)
outs
pop
add
inc
cmp
mov
aad
stos
inc
xchg
cmp
out
cmp
and
or
sahf
cmps
cdq
adc
inc
pop
(bad)
aas
cmp
mov
mov
adc
call
neg
mov
push
jae
lods
in
sbb
movs
(bad)
adc
out
sbb
cmp
ja
xchg
stos
gs
xchg
push
xor
daa
imul
xor
sub
mov
cmp
loopne
pop
sub
dec
mov
(bad)
pop
repz
fist
(bad)
sar
xchg
jg
call
inc
int3
xchg
sar
push
in
(bad)
stc
idiv
push
mov
inc
cmp
data16
leave
(bad)
ins
fdiv
out
jbe
in
cmp
pop
jecxz
repz
stos
dec
jo
add
mov
adc
ss
cld
dec
rcl
adc
call
cmpps
mov
xchg
lods
sub
loop
std
arpl
inc
scas
mov
sti
dec
dec
addr16
and
or
arpl
jl
gs
cmp
xchg
int3
ins
xchg
shl
addr16
mov
int
jmp
stos
jb
test
shl
iret
loope
and
lahf
mov
lds
push
std
fdivrp
jo
int
push
push
mov
cmp
lods
jno
aad
sti
idiv
mov
aam
lahf
push
sub
or
dec
xlat
stc
xchg
mov
push
or
out
fcom
popf
rcr
cmp
inc
xor
in
adc
sbb
mov
cs
test
pop
mov
xchg
push
int3
retf
das
pop
ret
lds
test
mov
(bad)
dec
cmps
xchg
xchg
(bad)
enter
jecxz
mov
add
push
sti
mov
js
lods
push
push
inc
xchg
std
mov
jmp
scas
leave
mov
out
or
and
jo
pop
or
sbb
mov
mov
cld
pop
test
or
mov
add
push
mov
les
inc
ja
call
mov
pop
int3
add
das
retf
mov
and
mov
je
sub
sbb
pop
xor
jge
dec
cmp
outs
mov
fwait
les
pop
add
push
pop
push
aas
or
cmp
mov
jne
fwait
cmps
fidiv
daa
mov
inc
sub
or
sbb
jns
push
ja
mov
mov
imul
aam
arpl
jbe
cs
in
into
jbe
lods
(bad)
mov
into
push
dec
daa
and
sub
mov
sbb
icebp
jae
das
sbb
sub
imul
dec
int
(bad)
adc
leave
mov
aam
lahf
pop
push
jo
(bad)
fidivr
xor
in
sub
and
mov
fcom
retf
cwde
test
shr
out
and
out
push
inc
inc
xchg
ja
inc
pop
call
and
xchg
dec
sar
dec
retf
loope
in
stc
cdq
int3
outs
in
out
out
imul
ins
daa
mov
sub
je
lea
mov
dec
xor
jge
out
mov
inc
push
inc
xor
adc
(bad)
adc
inc
pop
push
jmp
ins
xchg
(bad)
or
(bad)
popf
js
xor
loopne
leave
ds
or
xor
and
pop
sahf
ins
popf
int
pop
sbb
cmp
xchg
push
and
jle
gs
pop
adc
mov
ins
cmp
test
xor
lock
retf
aas
repnz
ss
aad
jmp
jmp
xor
and
mov
sar
jbe
jb
push
or
call
lahf
fld
dec
les
enter
movs
jbe
out
fmul
jns
pop
loope
or
adc
xlat
enter
fs
cwde
scas
mov
pop
cmp
stos
ins
dec
jecxz
push
mov
push
leave
shl
add
jns
ficomp
sti
pop
xor
sbb
mov
mov
xchg
cli
pop
cli
pop
mov
mov
add
ins
cmps
adc
mov
mov
ins
outs
mov
push
adc
cdq
mov
cmp
cli
cmc
xchg
add
aad
aaa
das
jo
loopne
mov
and
ja
lahf
xchg
inc
mov
dec
sar
push
test
sar
mov
xchg
xchg
fmul
jo
push
mov
popa
jb
dec
mov
call
mov
xchg
cwde
loope
xor
xchg
test
lock
aam
cs
xchg
mov
lahf
jge
out
jg
inc
rol
fwait
jbe
lods
xchg
in
icebp
rcl
cwde
push
clc
mov
leave
(bad)
hlt
cli
mov
mov
push
add
shl
addr16
add
jae
inc
sub
lock
mov
lods
movs
aad
lahf
jno
test
jns
ret
inc
es
mov
ins
sahf
mov
in
jmp
imul
add
(bad)
sub
aad
sahf
fwait
call
gs
mov
daa
jecxz
int3
inc
fs
in
inc
push
xacquire
jp
and
sbb
inc
retf
(bad)
(bad)
jno
mov
push
sub
ins
shl
sbb
cmp
jg
jge
lea
add
cmc
movs
jb
and
pushf
imul
dec
aaa
adc
fisub
mov
rol
dec
(bad)
repz
div
inc
xor
cld
mov
retf
out
pop
add
repz
in
out
ins
jb
push
lock
fwait
mov
fs
dec
lock
sub
fcom
adc
add
sti
lods
or
test
scas
sbb
das
jmp
cmps
xchg
push
pushf
out
movs
out
loop
sbb
les
outs
out
(bad)
out
pop
es
pop
push
push
repz
jge
adc
je
mov
push
xchg
shr
push
shl
retf
mov
mov
jae
into
imul
test
jnp
and
sub
dec
xor
fstp
adc
stos
daa
push
out
xchg
test
out
inc
mov
std
xchg
shl
aad
or
neg
mov
mov
shrd
pop
adc
xchg
daa
add
jl
popf
js
sub
loopne
adc
test
std
xor
xor
cmp
xchg
nop
xor
pop
and
je
cmps
mov
jo
iret
xor
aad
sahf
sub
icebp
lea
(bad)
outs
mov
lea
aaa
add
std
push
push
leave
ins
or
jg
es
arpl
xor
enter
sub
leave
in
(bad)
int3
repz
test
(bad)
test
push
jne
cmc
mov
add
pusha
sub
sbb
inc
(bad)
nop
into
jl
jnp
pop
mov
punpckhwd
aaa
fild
cmps
jge
sub
and
push
scas
outs
adc
mov
or
inc
pop
pusha
cs
js
fsub
sti
inc
scas
pop
add
dec
sbb
xor
icebp
(bad)
nop
add
leave
add
jg
sbb
push
cmp
push
(bad)
mov
mov
dec
sbb
mov
add
jnp
arpl
int
loop
sbb
xchg
(bad)
or
cmp
lahf
cmps
shl
xchg
inc
scas
cwde
adc
bound
bound
xor
mov
(bad)
xlat
jp
push
scas
mov
arpl
scas
retf
push
popa
pop
add
dec
cmc
lds
out
sbb
int3
mov
push
mov
mov
jmp
inc
dec
loop
inc
aaa
xchg
ficomp
xchg
inc
lds
xor
dec
stos
xchg
adc
stc
sbb
pop
inc
test
jns
xor
push
cld
sbb
jne
movs
push
jbe
sub
dec
cmc
(bad)
jmp
pusha
mov
push
jmp
cld
push
imul
jne
iret
ss
xchg
mov
test
sub
scas
and
sbb
push
sbb
fisub
inc
stos
xchg
dec
leave
stos
nop
mov
lea
(bad)
sub
ftst
mov
mov
repz
arpl
cmp
dec
arpl
jle
ss
imul
jnp
jle
sbb
mov
imul
sbb
push
pop
dec
int
(bad)
jmp
ret
(bad)
int
cmc
inc
jae
mov
xchg
inc
enter
retf
push
std
adc
add
movs
jno
movs
mov
loope
xor
lods
js
sbb
mov
adc
(bad)
out
pop
inc
add
dec
jle
push
ret
jmp
imul
js
add
je
push
adc
mov
ss
mov
jnp
push
out
scas
jns
adc
sbb
or
push
sbb
dec
mov
push
xlat
sub
ss
rcl
hlt
(bad)
cmps
arpl
shl
mov
add
fs
aad
pop
pop
sbb
xchg
or
cmp
cmp
cdq
test
out
cmps
movs
adc
mov
push
setle
xchg
xor
cdq
rcr
pop
popf
inc
psraw
sub
mov
(bad)
aaa
add
std
mov
js
jmp
and
xchg
rcr
xchg
daa
sbb
js
(bad)
mov
xchg
hlt
arpl
stos
sbb
push
add
jnp
pop
xchg
lods
or
jge
loop
dec
gs
fnclex
xchg
sub
inc
lea
repz
fs
xor
mov
idiv
inc
retf
add
dec
cli
sub
sbb
mov
xchg
jmp
fild
fwait
imul
jno
xchg
jmp
stos
popa
int
out
rcl
scas
adc
inc
and
cmp
cmps
aas
out
stc
imul
dec
sub
mov
cli
sahf
cs
jle
add
adc
mov
jo
mov
(bad)
sahf
out
mov
test
adc
or
je
cmps
imul
push
fwait
jo
or
in
jp
dec
cld
jo
xchg
mul
fcom
repnz
mov
push
push
addr16
jne
sahf
out
mov
(bad)
outs
sub
sbb
fisubr
and
mov
fnstsw
jg
fld
bound
push
and
lock
or
add
mov
mov
xchg
mov
mov
mov
jp
inc
imul
xor
push
xor
and
(bad)
dec
int
int
shl
cmp
lods
popa
stos
fs
or
sub
mov
and
inc
popa
inc
push
cmp
mov
or
push
outs
jge
cmp
inc
(bad)
arpl
(bad)
cmc
loope
out
out
mov
movs
adc
leave
xchg
js
iret
stos
add
push
std
jle
stc
out
lds
(bad)
sahf
or
adc
xor
mov
test
jne
jnp
shl
loope
dec
pop
rcr
dec
lock
(bad)
lods
(bad)
push
adc
push
sbb
scas
sub
sub
aad
pop
fdivr
sub
je
mov
jns
iret
add
enter
call
nop
repnz
and
popa
and
cmp
das
popa
xchg
mov
lock
fild
add
jmp
push
fs
es
push
cli
jns
pop
cwde
xchg
dec
pushf
pop
fldl2e
inc
(bad)
out
inc
inc
sub
push
xchg
cmp
gs
push
movs
mov
inc
sub
adc
sar
int
cmp
popf
in
inc
dec
cmc
test
cmp
je
sbb
jae
dec
mov
repz
in
ja
and
test
popf
loope
aad
dec
cdq
dec
out
pop
push
xor
sbb
pop
retf
les
ret
clc
push
sbb
cmp
sbb
inc
lock
cmps
jno
inc
cmp
mov
cmp
xor
xchg
(bad)
mov
fstp
fidivr
test
xchg
dec
pusha
sub
lahf
or
stc
movs
rcl
(bad)
xchg
dec
push
pop
sub
mov
jmp
nop
dec
xchg
push
inc
fiadd
ins
iret
fwait
mov
sub
mov
adc
cmp
hlt
inc
jno
mov
jb
mov
pop
jne
jmp
(bad)
shl
pop
cli
sbb
jmp
push
dec
fmul
fsubr
aaa
push
ja
test
in
dec
lods
jb
jb
jecxz
dec
jp
ror
mov
sti
rol
xchg
sub
je
mov
jecxz
pop
lock
push
sbb
mov
dec
fisub
inc
ja
sbb
or
cmps
test
mov
out
dec
call
test
add
fcom
pop
xlat
rol
mov
xor
fwait
add
xor
mov
rdpmc
mov
add
bound
xor
pop
and
and
jge
shl
loope
push
pop
xlat
gs
jne
jne
in
cmps
jl
mov
mov
sub
les
shr
cld
jge
cwde
cwde
jb
or
(bad)
dec
cmp
push
fisubr
and
and
adc
or
adc
pusha
dec
aas
inc
mov
inc
mov
cmps
fdiv
and
neg
arpl
mov
push
fdivp
mov
adc
add
les
scas
xchg
and
popf
mov
jo
dec
jecxz
rcr
jmp
inc
(bad)
in
ss
cld
repz
imul
fdivr
rcl
lods
or
jg
cmp
mov
adc
gs
fwait
push
in
push
push
or
iret
jne
dec
fwait
aad
dec
aaa
adc
int3
pop
dec
js
adc
jge
in
mov
or
pop
push
mov
neg
jle
mov
ret
sbb
jns
xor
sbb
and
add
std
sub
push
push
push
out
call
cmps
sti
jno
xchg
pop
fxch
je
jle
jne
jge
data16
addr16
pop
lds
jg
repz
jecxz
mov
les
out
xor
xchg
int3
inc
push
dec
dec
lock
test
in
inc
fiadd
(bad)
jmp
pop
lods
or
test
movs
mov
mov
test
js
pop
mov
add
rep
pop
icebp
push
dec
(bad)
lds
daa
es
pop
fisubr
out
stos
xchg
pushf
fldcw
repnz
daa
ins
xchg
push
inc
clc
out
in
add
push
in
mov
sbb
and
push
nop
mov
outs
pop
fisubr
mov
fidiv
and
dec
xchg
mov
jne
call
mov
jg
pop
pop
adc
mov
xchg
cwde
inc
loop
sbb
jno
sbb
mov
mov
call
shr
stos
lock
xor
fld
push
xchg
dec
out
dec
jecxz
sbb
int
mul
ja
cld
inc
(bad)
ins
pop
scas
jnp
pop
int
fidiv
out
jmp
push
sbb
(bad)
in
push
or
nop
mov
aaa
dec
add
ins
pop
aas
lods
jo
xor
mov
pop
in
cwde
ret
aas
or
fistp
jmp
push
pop
imul
pop
jae
sbb
pop
stc
test
iret
daa
jmp
stos
mov
jno
sbb
mov
add
sbb
sub
data16
fwait
retf
inc
and
sub
xchg
mov
pusha
sub
sti
imul
xlat
dec
lock
add
test
(bad)
adc
pop
lods
aas
retf
mov
xchg
icebp
pop
mov
add
sub
push
jnp
shr
mov
fiadd
ss
hlt
stos
adc
call
outs
sbb
xor
sahf
out
mov
mov
cdq
mov
imul
mov
jle
pop
sub
nop
rcl
outs
icebp
into
push
dec
fidivr
push
or
(bad)
xchg
mov
fdivr
jae
lds
outs
sub
sub
xchg
jmp
callw
cmps
push
add
pushf
jg
scas
jle
sbb
pop
stc
in
or
mov
fist
shr
jle
push
es
mul
mov
dec
mov
mov
pop
aad
sbb
mov
sbb
mov
dec
mov
ins
xor
push
repz
mov
cmc
clc
mov
mov
push
xchg
mov
(bad)
jae
movs
and
mov
leave
ins
inc
pop
(bad)
test
mov
pop
pop
pop
sub
stos
enter
lods
pop
push
jnp
cmps
push
das
xor
add
push
out
push
outs
mov
inc
and
pop
pop
cdq
sub
nop
pop
jae
and
sub
add
in
pop
aaa
pop
cs
jle
cmp
out
mov
cmp
cmc
push
shr
mov
and
xor
sbb
pop
(bad)
lea
int3
ja
mov
ds
in
inc
ret
pop
add
mov
xor
mov
jmp
mov
movs
sahf
inc
dec
jno
jp
repnz
cmps
cld
xchg
push
push
xchg
(bad)
sar
mov
xlat
and
fdivr
fimul
js
call
mov
inc
jnp
outs
mov
stc
(bad)
cwde
pop
mov
pop
fdivr
ins
gs
dec
popa
fadd
mov
push
adc
xchg
dec
dec
test
jecxz
inc
nop
pop
dec
lods
stc
ins
enter
jae
sahf
or
mov
lea
inc
int3
jnp
push
xor
push
lahf
inc
test
pop
sub
fwait
adc
jae
(bad)
test
adc
mov
inc
(bad)
jmp
not
mov
push
fwait
retf
mov
sub
sbb
icebp
jb
mov
cmp
add
and
neg
nop
scas
mov
cmp
retf
cmp
clc
call
dec
xchg
aad
cld
mov
adc
and
sbb
add
sbb
gs
dec
adc
jecxz
loop
aaa
out
in
mov
cmp
adc
mov
test
std
or
xchg
shl
cmp
arpl
mov
push
out
pop
ins
in
adc
pusha
jle
movs
mov
fisub
inc
cmp
inc
std
pop
dec
sub
fidivr
jnp
dec
imul
push
shr
mov
mov
iret
dec
outs
push
rcr
lods
jb
es
dec
ss
inc
pushf
inc
push
movups
aaa
mov
xchg
outs
inc
push
xchg
and
sbb
sub
(bad)
xchg
or
xchg
sbb
dec
mov
mov
popf
mov
in
jge
in
enter
or
xchg
mov
jns
frstor
xor
lods
(bad)
jl
mov
add
loop
out
cdq
cmc
push
and
mov
sbb
mov
icebp
arpl
icebp
inc
idiv
mov
fidivr
jb
popf
or
popf
shl
push
push
push
push
sbb
mov
test
(bad)
xlat
add
in
movs
into
jecxz
push
push
jg
arpl
xor
add
test
sub
mov
aad
repnz
das
push
push
out
fisttp
pop
mov
cmp
pop
test
xchg
ja
(bad)
jae
push
jecxz
cmp
mov
les
mov
repz
mov
pop
clc
xlat
in
retf
jae
mov
icebp
imul
cmp
adc
stos
loopne
aam
aad
cmp
mov
and
mov
jge
nop
stos
cdq
jb
mov
dec
mov
int
mov
repz
enter
mov
in
jns
inc
(bad)
push
add
cmp
pop
fdiv
popa
xchg
lahf
mov
sbb
fidivr
retf
ja
pusha
mov
jne
or
movs
add
xor
aam
or
(bad)
fcom
jecxz
sub
mov
sbb
test
fwait
test
mov
shr
cli
inc
push
retf
fucomip
pop
loop
mov
out
shl
(bad)
cmp
mov
mov
sub
outs
sbb
pop
(bad)
aas
fistp
pushf
jmp
mov
pop
aad
mov
repnz
mov
jbe
stc
inc
(bad)
mov
add
into
cld
mov
lods
out
jg
jbe
add
cmp
neg
sub
pop
ss
sub
mov
adc
test
jg
pop
mov
call
and
scas
fdivr
pop
out
lock
je
mov
sbb
sar
aad
mov
lods
ret
(bad)
call
pusha
inc
pop
fistp
test
scas
rol
int3
nop
mov
inc
sub
inc
punpckhwd
in
jbe
sete
xchg
xor
jp
leave
enter
retf
icebp
push
mov
sahf
jo
jnp
cmps
mov
sub
inc
repz
icebp
call
movs
das
fwait
mov
dec
sub
stos
pushf
mov
mov
xor
fst
inc
inc
shl
loop
fwait
movs
out
div
dec
cs
lds
mov
call
mov
out
fsubr
in
not
retf
xchg
clc
mov
ja
add
or
push
cs
inc
test
xchg
call
sub
and
das
inc
fidiv
in
inc
imul
data16
sub
inc
aas
mov
or
sbb
imul
mov
jo
call
in
es
(bad)
std
sub
xchg
mov
int3
aas
or
adc
dec
pop
sbb
sub
mov
xlat
and
repnz
lahf
sahf
mov
mov
ror
adc
mov
mov
fsubr
loope
jnp
dec
loopne
sbb
inc
sbb
ins
data16
inc
mov
inc
fsub
out
add
adc
xor
stos
test
int
imul
mov
fistp
das
mov
jg
outs
fistp
imul
out
jne
or
cmp
mov
dec
fs
adc
mov
cmp
jo
xchg
pop
shl
cmps
gs
in
sbb
dec
and
call
pop
cmps
imul
sub
pop
inc
pop
mov
daa
jns
jl
pop
ins
sub
aad
(bad)
pop
inc
dec
test
xchg
sub
out
mov
sub
(bad)
jmp
stos
push
jmp
push
std
loopne
cdq
sti
test
sar
repnz
or
pop
sub
dec
div
movs
das
ins
mov
push
mov
(bad)
out
repz
into
add
mov
jbe
in
sbb
cmp
jmp
es
fsub
push
call
enter
int
dec
sub
push
mov
bound
test
dec
xor
ret
push
inc
mov
ret
jp
mov
cld
fimul
shl
pop
mov
mov
cli
cmc
std
pop
in
ins
mov
adc
shl
xchg
outs
xchg
mov
and
push
and
and
fadd
(bad)
(bad)
sbb
xchg
add
push
dec
adc
push
pop
mov
adc
and
jo
mov
xor
mov
mov
cli
sbb
jge
pushf
cmp
jno
imul
fdivr
mov
mov
cmps
mov
out
sub
xchg
xchg
jle
in
outs
lods
jnp
in
inc
mov
dec
mov
jl
inc
sub
jl
push
iret
pop
or
add
icebp
add
mov
mov
dec
jns
rcr
mov
std
repnz
popa
out
xlat
and
jge
and
xchg
cdq
dec
mov
mov
push
mov
sub
dec
push
sbb
jne
or
test
call
int
push
sti
enter
loop
mov
or
nop
ret
add
sbb
mov
jne
dec
bnd
mov
pop
hlt
push
and
xor
scas
test
fld
adc
pop
xor
add
mov
dec
inc
icebp
fidiv
mov
nop
outs
bound
push
ror
or
cmp
dec
cmp
sub
scas
xchg
inc
xchg
sub
xor
imul
mov
ds
cmp
dec
pop
mov
adc
(bad)
shr
cmp
repz
and
loope
ret
clc
ins
sbb
mov
mov
pop
in
loop
mov
sar
sahf
popf
inc
loop
pop
or
push
sbb
bound
xchg
test
retf
addr16
xor
adc
sbb
fsub
rol
popa
jg
push
arpl
sbb
xchg
xor
adc
adc
xor
mov
cwde
pop
cmps
loope
(bad)
pop
aad
adc
movs
xchg
ja
dec
and
mov
hlt
movs
xchg
mov
aas
mov
dec
or
pusha
(bad)
push
int
icebp
sbb
(bad)
jle
bound
xchg
ss
rcr
into
rcl
lahf
push
xor
shl
mov
sub
pop
dec
scas
aaa
jg
push
sbb
sbb
jne
mov
jmp
adc
jmp
jle
mov
sub
loopne
int
sbb
cmp
fiadd
jecxz
je
or
test
pop
or
sahf
add
xchg
cli
add
dec
lahf
xlat
fimul
push
push
inc
mov
mov
out
sub
mov
lds
cmp
cmp
adc
push
sahf
repnz
pop
xchg
sti
fcmove
test
ds
cs
les
and
inc
in
jmp
ja
dec
cmp
cdq
cmp
jns
or
xor
cmp
ss
sahf
or
dec
inc
and
xchg
mov
inc
jl
shr
hlt
inc
repnz
lock
dec
and
inc
mov
xlat
cwde
push
bound
int
xchg
and
mov
test
mov
nop
fcomp
cmps
retf
je
sbb
test
les
push
std
aaa
loopne
adc
cdq
xchg
sub
mov
mov
(bad)
stos
and
pop
(bad)
and
sbb
jmp
rcr
cld
inc
loopne
data16
push
push
dec
fnsave
inc
(bad)
retf
int
lods
mov
cli
mov
sub
pop
out
out
loope
dec
jp
xor
js
or
push
int3
fwait
mov
lahf
adc
lods
dec
pop
mov
ficom
jnp
push
enter
mov
and
aas
dec
xchg
psubsw
mov
push
jge
(bad)
mov
mov
aad
xlat
pop
stc
push
or
push
dec
and
call
sbb
xor
push
and
lods
xor
aaa
mov
pop
stos
push
and
inc
imul
lds
sbb
les
push
pop
jne
cmps
jbe
dec
xchg
lahf
mov
pop
cmp
pop
push
imul
out
int
push
push
aaa
cli
scas
fcmovne
ins
mov
or
retf
cwde
push
xchg
lds
mov
fstp
scas
clc
imul
rcl
fcom
or
dec
pushf
mov
adc
push
js
adc
mov
lock
aaa
call
aas
jae
push
mov
mov
sub
pop
dec
jl
push
in
dec
adc
push
xor
jg
imul
sar
(bad)
jmp
stos
cmp
movs
inc
pop
lock
or
nop
sub
lea
push
mov
and
xor
das
mov
cmp
cmc
pop
adc
cmc
jno
pop
jo
dec
(bad)
cs
outs
neg
sti
imul
(bad)
fstp
das
mov
fldenv
mov
out
xchg
aam
pop
push
es
(bad)
jns
add
pop
push
or
in
call
mov
xchg
dec
int
cs
or
into
xor
and
nop
ret
adc
stos
lods
int3
dec
mov
stos
aad
ror
lock
jp
shl
rcl
or
stc
iret
pop
aas
sub
aam
jg
xlat
and
retf
or
or
(bad)
cmc
cmp
repz
or
ret
sbb
lods
add
jmp
call
pop
xchg
mov
aad
gs
iret
jmp
(bad)
fadd
pop
movs
push
cmp
mov
jmp
dec
fs
xchg
cmp
and
or
rol
or
repnz
jmp
popf
icebp
mov
pop
sbb
xchg
ficomp
iret
push
ret
out
idiv
movs
sbb
add
sbb
jl
sbb
xchg
jge
or
lds
rcr
in
sahf
pop
fisttp
(bad)
dec
xchg
inc
mov
outs
(bad)
fnop
jmp
(bad)
(bad)
popa
test
dec
shl
daa
popf
stos
pop
test
mov
daa
in
gs
push
fdiv
shl
repnz
lock
and
sub
in
adc
jns
push
pop
dec
pop
cmc
or
push
mov
test
mov
aad
sti
xchg
cmps
sub
cwde
mov
add
and
out
mov
movs
ds
push
stc
into
push
std
adc
pop
inc
shr
jmp
add
lahf
jl
popf
jmp
ins
mov
outs
pop
or
push
xor
inc
and
xor
sub
push
dec
mov
cmp
and
xor
jmp
(bad)
jae
cmp
in
inc
add
mov
clc
data16
xor
shl
(bad)
pop
xor
repnz
xchg
aaa
addr16
movlps
mov
addr16
push
rcr
cwde
imul
call
and
push
cmp
movs
popa
lods
pop
push
std
js
cmp
add
sar
mov
test
stc
mov
fild
xor
shr
das
add
mov
imul
rcr
shr
mov
cmp
add
inc
fld
xchg
mov
adc
jle
jo
pop
ins
ror
jg
fsub
pop
imul
cmp
mov
and
out
mov
mov
jle
xchg
xchg
fstp
or
stc
dec
retf
imul
jnp
test
xlat
loope
call
call
sahf
or
jg
pop
jae
sbb
mov
jl
mov
or
add
in
ds
mov
jne
sbb
or
je
daa
(bad)
loop
repz
push
adc
jl
pcmpeqd
mov
lods
adc
push
sub
or
or
repz
dec
hlt
movs
mov
mov
(bad)
fidivr
std
scas
test
mov
out
sub
sbb
mov
pop
ins
cmp
outs
in
adc
push
pop
std
sti
(bad)
jmp
hlt
xor
retf
js
call
cmp
or
std
rol
add
or
out
(bad)
int3
popf
cwde
lds
mov
xor
and
dec
mov
and
dec
cdq
sub
push
data16
or
and
iret
neg
(bad)
ins
imul
mov
stc
mov
movs
aam
and
push
cmp
xchg
mov
cmp
push
cmp
dec
and
push
push
fcom
sbb
mov
nop
ss
push
aad
movs
and
mov
mov
push
add
popa
(bad)
adc
repz
xor
sub
jmp
xchg
hlt
dec
mov
jg
in
test
pop
adc
and
inc
and
lahf
idiv
call
rcr
rcr
lock
repnz
mov
sub
and
adc
bndldx
push
jmp
retf
repz
mov
pusha
stc
(bad)
scas
in
cld
and
or
das
dec
scas
lock
or
fimul
cmc
push
lahf
clc
lods
fadd
das
shr
mov
mov
shl
mov
in
mov
cmc
jae
pop
inc
and
hlt
and
pop
in
or
aaa
xlat
mov
mov
jle
or
mov
xor
clc
int3
jbe
(bad)
sbb
inc
sub
scas
mov
inc
cwde
xchg
sub
es
inc
aas
push
xchg
jno
addr16
loop
or
push
(bad)
cdq
xchg
cmp
sahf
sub
pop
jno
mov
cmp
or
cmp
push
xor
(bad)
push
les
in
jb
and
popf
fadd
pop
push
mov
pop
ret
into
mov
out
or
xor
and
loope
cmps
adc
das
sbb
(bad)
mov
dec
outs
pop
mov
mov
dec
lods
pop
fwait
movs
leave
and
pop
pop
and
icebp
adc
int
sbb
fdivr
cmp
mov
adc
mov
adc
push
dec
ror
xchg
(bad)
sbb
or
dec
mov
int
sbb
pop
dec
outs
mov
js
fist
loope
mov
or
cmps
(bad)
out
xor
lea
sbb
out
push
cli
fpatan
sbb
xor
(bad)
sbb
scas
fnsave
jno
push
movs
add
or
int
push
cmp
bound
int3
xor
dec
sti
imul
sbb
into
xor
inc
mov
int
inc
mov
movs
in
and
sub
dec
sub
jmp
jo
mov
xchg
fdiv
shl
stos
movs
add
push
repnz
xchg
stos
mov
fsubr
inc
cmp
jns
push
test
mov
ret
adc
loop
retf
fdivr
mov
jmp
mov
loope
xchg
xor
retf
jmp
lods
xor
ret
sbb
movs
xchg
adc
or
sub
pushf
stos
sbb
in
movs
scas
push
mov
repz
lea
cmp
inc
das
mov
fcomp
and
sahf
fldl2t
outs
call
mov
pusha
neg
imul
(bad)
xchg
pop
and
iret
retf
hlt
push
hlt
mov
je
gs
mov
pop
lea
addr16
aas
push
ins
clc
rol
xlat
in
out
xchg
hlt
xlat
xchg
jecxz
jne
sbb
xor
int
sbb
ja
sub
fwait
add
cwde
sbb
shl
icebp
cld
in
xor
mov
hlt
or
push
add
test
adc
outs
int
add
inc
jo
ins
pushf
in
pop
dec
icebp
jno
add
popf
xchg
add
xchg
cli
in
pop
dec
mov
sbb
adc
mov
sbb
pop
in
fstp
mov
and
shr
cmp
cwde
iret
sub
rcl
and
mov
xchg
xor
mov
jne
mov
mov
mov
mov
pop
mov
stos
nop
jl
jae
les
(bad)
js
sbb
sub
sbb
ret
mov
das
daa
jnp
mov
loop
adc
jnp
mov
sub
je
jno
mov
dec
dec
xor
(bad)
ds
sub
into
clc
sub
mov
inc
cmp
inc
jae
test
and
mov
mov
clc
sub
ins
mov
sbb
imul
and
jmp
cmp
pop
inc
mov
mov
and
stos
sub
ss
jnp
jp
sub
outs
cmp
outs
es
fs
in
adc
into
lea
mov
test
push
mov
push
lds
(bad)
loop
mov
fsubr
fadd
add
adc
adc
mov
mov
mov
rol
and
pop
cld
mov
pop
sbb
leave
lahf
xchg
push
inc
pop
cs
or
out
std
sbb
jnp
jg
jmp
hlt
sub
sbb
stos
and
pop
inc
ins
dec
cmp
pusha
push
shr
push
pop
adc
retf
xor
push
mov
pop
(bad)
lods
dec
out
xchg
xor
ins
call
sbb
or
push
aas
sbb
movs
fwait
repnz
aaa
ja
or
and
(bad)
pop
cmps
fsubr
js
jecxz
sub
les
fwait
hlt
push
xchg
mov
fwait
mov
add
add
gs
popa
jb
mov
pop
lods
jb
outs
iret
test
pop
mov
out
xchg
mov
or
out
aam
jmp
lods
fcmovne
add
test
retf
jl
mov
cmp
mov
sbb
jnp
and
dec
clc
pop
jle
nop
mov
pop
adc
mov
or
mov
mov
add
pop
xchg
xor
retf
mov
int3
adc
imul
(bad)
ins
(bad)
fisubr
cmp
out
xchg
xchg
stc
jns
mov
(bad)
nop
sub
add
adc
mov
jmp
mov
sbb
jmp
xchg
xchg
sbb
dec
cmc
es
cdq
or
mov
popa
fadd
cli
pop
adc
stc
jl
cmp
inc
inc
jno
adc
pop
pop
in
fadd
movs
pop
enter
nop
test
mov
xchg
jmp
fnstsw
clc
inc
imul
test
push
(bad)
jmp
pusha
in
cmc
xchg
cmps
pop
dec
mov
add
fidiv
mov
sbb
mov
mov
mov
enter
movs
jno
sar
and
sub
sub
xor
or
lea
ja
jl
xchg
int3
bound
sub
add
mov
cmp
lahf
in
pop
(bad)
adc
push
(bad)
jmp
scas
loopne
out
sar
jb
pushf
in
jg
adc
imul
popa
push
and
rol
arpl
test
cmp
inc
xchg
inc
pop
mov
retf
mov
mov
mov
aas
hlt
cmp
inc
(bad)
mov
cmps
ret
data16
add
call
xchg
sbb
adc
leave
lock
and
nop
cmp
pusha
pop
adc
enter
mov
xchg
aas
jbe
xchg
jbe
cmp
mov
pop
adc
int3
xchg
call
mov
sub
inc
sti
push
(bad)
push
sub
cld
xor
mov
push
ret
inc
jmp
ficom
or
pop
push
cmc
outs
js
add
test
mov
adc
aam
cmp
xor
hlt
sbb
aaa
cdq
(bad)
ins
jne
cs
pop
sub
ret
loop
gs
cmp
push
cmp
out
dec
clc
mov
push
dec
das
adc
xor
mov
and
push
call
cli
fmul
mov
push
mov
ja
pop
xor
push
jp
and
mov
push
and
inc
sub
mov
mov
mov
mov
loopne
(bad)
fild
test
(bad)
repnz
loop
xor
jmp
mov
mov
hlt
sar
jnp
jle
xchg
movs
imul
stos
sbb
mov
pushf
fldcw
sub
call
cmp
jmp
sbb
adc
mov
push
adc
frstor
lods
sbb
clc
aam
out
(bad)
je
retf
cdq
jno
sbb
pop
xchg
loop
data16
and
lds
mov
dec
jo
push
test
jae
cwde
test
xor
cmp
xchg
fs
test
loop
and
xor
pop
iret
hlt
loopne
pop
loopne
out
jg
pop
cmps
ja
adc
dec
imul
pop
pop
scas
fdiv
push
pop
pop
add
inc
jg
rol
out
scas
call
or
jno
mov
leave
and
addr16
fsub
mov
lds
pop
mov
push
push
cdq
call
sbb
jno
gs
jmp
mov
pop
ror
int3
in
adc
push
outs
sbb
xchg
repz
lahf
in
enter
xchg
loop
cli
repnz
mov
jb
mov
in
dec
sub
dec
cld
xor
gs
lea
sbb
and
cmp
push
adc
push
add
pop
std
cmc
pop
rol
je
ss
pop
adc
pop
mov
sub
cli
loop
xchg
loope
das
stos
sub
jo
aad
test
fwait
les
and
xchg
sub
xchg
sti
add
je
sub
jmp
xchg
mov
sub
dec
xchg
sbb
adc
(bad)
repnz
xchg
dec
jno
adc
cmp
shl
jns
scas
retf
sbb
test
and
mov
mov
mov
adc
jg
mov
xor
test
icebp
push
bound
int
cmp
sub
jmp
inc
aam
mov
sbb
movs
out
into
xchg
mov
(bad)
cld
fcmove
bound
cmps
inc
test
rol
iret
sub
cmps
out
cmc
mov
outs
inc
mov
dec
loopne
or
ret
gs
adc
mov
push
outs
loop
xchg
mov
mov
out
in
cld
pop
sub
clc
(bad)
cli
push
call
scas
test
jb
push
mov
xchg
inc
add
ins
mov
ss
mov
call
sti
test
aad
and
(bad)
cmc
hlt
mov
movs
dec
std
or
mov
(bad)
xor
mov
push
xor
clc
jecxz
push
xchg
sbb
lods
push
xchg
xor
mov
test
shl
or
add
mov
and
das
push
loop
mov
shl
into
movs
gs
ins
sbb
dec
jmp
mov
pop
inc
hlt
fwait
xor
push
ins
popa
jmp
sub
pop
rol
xor
sbb
sub
push
aam
cwde
addr16
fild
test
pop
hlt
cmp
int3
mov
clc
jmp
jno
jmp
sub
mov
and
mov
retf
xlat
jae
test
jbe
fldenv
dec
adc
imul
cmps
clc
out
pop
imul
mov
mov
cmp
test
xor
cwde
sub
pop
cmps
adc
bound
mov
stos
ss
loope
xor
les
ds
xor
push
xchg
jl
jmp
mov
mov
call
mov
pop
mov
cmc
pop
jp
xlat
int3
shrd
or
jle
pushf
je
jge
lock
mov
imul
or
sub
sub
jo
stos
dec
and
mov
fisubr
mov
push
pop
rol
push
xor
xor
lods
fnstcw
push
sbb
mov
and
stos
push
into
mov
loope
sbb
mov
xchg
in
pop
jnp
js
inc
xor
pop
cwde
mov
sub
scas
repz
xchg
mov
push
ret
cmps
ja
retf
inc
sti
scas
mov
je
(bad)
cmc
fld
and
pop
aam
cmp
cli
outs
xchg
add
cdq
lds
js
out
mov
mov
dec
fisubr
xor
and
sbb
mov
and
xor
js
mov
fs
clc
jl
sub
pop
fsubr
dec
(bad)
cld
jb
mov
adc
sar
inc
xlat
and
std
push
movs
sti
push
push
shl
sbb
pop
and
xchg
cdq
jbe
inc
and
es
sar
faddp
add
gs
ret
cdq
jmp
or
sub
aas
cli
(bad)
pop
movs
pop
fnsave
hlt
(bad)
sub
xor
aam
stc
(bad)
sub
or
jge
mov
mov
lahf
xor
fucomip
sets
dec
push
imul
jnp
addr16
sub
fld
and
dec
in
add
es
test
icebp
or
daa
aad
pop
pop
jnp
out
fdivr
or
mov
enter
shr
pop
push
mov
pop
addr16
hlt
pop
outs
(bad)
adc
popa
or
or
fsubrp
cs
mov
cmp
cs
adc
shr
in
pop
adc
cmp
(bad)
xor
dec
push
and
push
fsub
mov
push
xchg
rcr
pop
fnstenv
es
pop
adc
dec
or
imul
or
sub
pop
xlat
and
loop
mov
sar
(bad)
ss
outs
pusha
pop
pop
jmp
sub
xchg
push
and
(bad)
pop
jns
dec
adc
pop
bnd
jge
mov
cdq
call
push
loopne
mov
das
push
dec
cmp
and
jbe
adc
lock
retf
adc
dec
cmp
sha1rnds4
movs
sbb
push
(bad)
cdq
ins
or
push
sbb
iret
xor
sbb
mov
popf
dec
pushf
push
dec
pop
popf
(bad)
push
mov
pop
jb
and
ret
(bad)
cmc
push
cmp
inc
icebp
xlat
lea
mov
push
cmp
cwde
pop
icebp
sahf
ins
pop
xor
xchg
push
jbe
jo
scas
mov
xchg
ja
sbb
neg
cwde
in
pop
addr16
jae
push
mov
sbb
cld
movs
or
sahf
enter
loope
push
enter
mov
cmp
cwde
pop
js
sti
ret
(bad)
and
(bad)
mov
inc
pop
mov
pop
ins
mov
iret
ret
cwde
jne
and
jle
mov
mul
movs
or
jne
fnstcw
dec
movs
pop
hlt
jecxz
sub
inc
out
dec
mov
cmp
sub
jbe
adc
cmps
mov
scas
dec
and
(bad)
mov
stos
mov
add
stos
dec
add
retf
push
push
sub
rcr
jmp
mov
dec
mov
push
cdq
xchg
inc
mov
das
mov
lods
fist
add
repnz
inc
lods
pcmpgtb
mov
or
ret
fistp
shr
jns
movs
ds
inc
push
cli
or
mov
ins
push
jg
jecxz
or
jp
push
cdq
ss
adc
sub
stc
stc
and
nop
fild
cmp
mov
repnz
and
bnd
add
scas
movs
int3
jg
xor
dec
out
jbe
pushf
push
(bad)
int
fnstsw
lahf
push
js
in
add
ret
ss
sub
out
es
(bad)
fcom
icebp
test
add
sbb
or
push
bound
je
inc
sub
jmp
xchg
mov
daa
scas
imul
xchg
hlt
xor
jo
rol
icebp
jle
xchg
jmp
out
push
lock
cwde
push
pop
xor
cmps
cli
pop
pop
iret
loopne
cs
iret
pushf
lods
cdq
stc
popa
in
out
pushf
mov
mov
(bad)
cli
add
xchg
in
je
imul
push
rol
cmp
push
mov
idiv
xchg
clc
(bad)
mov
gs
xchg
mov
pop
lea
mov
cld
adc
imul
xlat
xchg
dec
clc
scas
dec
sbb
outs
inc
sbb
addr16
inc
adc
fs
test
adc
cmps
cmp
pusha
jmp
jl
inc
adc
cmp
adc
test
js
jae
pop
psadbw
push
js
pop
lods
jmp
xchg
cli
or
in
add
mov
ret
les
movs
jb
push
in
js
idiv
push
jle
repz
das
cmp
pop
ins
mov
xor
mov
mov
mov
mov
xchg
or
pop
inc
ins
in
aaa
mov
xor
lods
retf
push
add
sbb
and
xor
lock
add
sbb
add
xlat
ja
fbstp
jne
and
test
xchg
movs
jbe
frstor
leave
pop
mov
pusha
jno
jae
retf
(bad)
in
xlat
push
in
daa
jb
mov
xor
pop
cld
mov
into
icebp
xchg
cmp
fdivr
je
xchg
(bad)
xor
ins
mov
and
mov
jp
test
movs
call
jnp
mov
fwait
lods
enter
and
in
adc
(bad)
cmp
mov
push
aam
lahf
xchg
data16
add
mov
rcr
push
ins
fcmovnb
dec
sahf
or
or
or
mov
cmp
xor
hlt
or
pop
cmc
rcr
xor
dec
inc
sbb
xchg
es
sbb
jmp
into
jne
add
fld
lahf
push
xchg
retf
sbb
test
push
pop
jecxz
or
cmps
push
add
fst
cmp
sar
jne
mov
cmp
cli
jae
pusha
lods
call
mov
inc
stos
gs
xchg
fistp
not
enter
mov
nop
mov
loop
out
sbb
fdiv
pusha
(bad)
sbb
out
mov
popa
lods
inc
add
sub
mov
xchg
test
sbb
pop
(bad)
cmps
cmp
xchg
stos
inc
jl
pop
int3
inc
cld
sbb
add
or
mov
out
sti
inc
mov
adc
nop
enter
(bad)
call
cmps
daa
int
or
dec
adc
cdq
test
mov
lods
dec
pop
mov
push
scas
xlat
into
fld
push
add
mov
push
mov
aas
(bad)
xor
in
xchg
push
cmps
jl
loope
rcr
mov
pop
in
or
push
sbb
loop
pop
scas
das
stc
(bad)
in
jge
xor
cwde
xchg
adc
movs
(bad)
loopne
stc
cmps
enter
(bad)
or
cld
jg
lahf
pop
(bad)
clc
aaa
fbstp
loopne
ins
xchg
adc
inc
pusha
les
popf
int3
xchg
daa
cdq
dec
xchg
push
aas
mov
mov
pop
shr
ja
jge
repz
adc
in
or
gs
cld
mov
dec
movs
push
jns
iret
pop
push
in
rcl
sbb
jbe
test
jle
(bad)
shr
hlt
ret
movs
sbb
adc
jno
imul
imul
jmp
jns
jo
push
imul
pop
stos
adc
jp
(bad)
xchg
xchg
jns
int3
sbb
aas
call
mov
in
leave
and
and
shl
pop
mov
aaa
xchg
icebp
jae
loopne
ss
ds
pop
repz
push
dec
jmp
pop
(bad)
in
jle
in
dec
sbb
ins
test
(bad)
mov
(bad)
fnstenv
inc
sub
ss
(bad)
mov
call
aam
in
and
xchg
jb
sbb
cld
out
xor
push
dec
jns
mov
imul
fstp
push
(bad)
repnz
adc
add
loope
(bad)
ffreep
call
push
(bad)
in
ds
xor
gs
inc
dec
or
sar
or
test
jmp
fdiv
and
sub
inc
retf
lods
mov
inc
sbb
adc
shl
stos
cmp
aas
mov
das
daa
add
cmps
popa
fstp
push
xchg
xor
mov
das
fild
ja
mov
out
xchg
pop
adc
sub
push
mov
mov
std
push
and
mov
loop
adc
clc
iret
cmp
pop
rol
dec
in
or
sbb
and
(bad)
push
or
ret
pop
cli
cs
test
mov
out
lock
or
mov
clc
test
ror
pop
mov
das
(bad)
jp
jmp
mov
(bad)
sub
fcmovb
(bad)
repz
mov
mov
aad
push
jmp
pop
adc
mov
in
dec
stc
into
gs
sub
in
clc
imul
cmp
lods
loope
sar
(bad)
arpl
call
rcl
lahf
aas
fimul
arpl
(bad)
enter
test
and
retf
xor
psubd
sub
(bad)
fild
fwait
jg
rol
jno
xchg
lahf
(bad)
neg
lea
add
xchg
push
mov
add
out
inc
aaa
xchg
clc
into
push
pushf
hlt
lods
xchg
mov
call
add
call
cmps
enter
sbb
cmps
popa
fcomp
push
out
inc
es
adc
xchg
dec
sub
in
ret
test
mov
in
pop
daa
inc
cmp
cmc
ror
jae
fadd
or
pushf
jb
jge
retf
xor
ds
bnd
ficomp
(bad)
in
add
xchg
js
or
es
enter
rol
and
xchg
fmul
mov
out
sub
lock
(bad)
push
into
pop
ss
dec
jl
dec
pop
cmp
dec
lods
and
sub
xor
push
pop
cmp
mov
mov
pop
(bad)
pushf
dec
or
sub
aam
test
in
and
inc
jmp
clc
sub
lock
mov
sub
and
or
inc
sbb
fcomp
(bad)
or
stos
out
ror
mov
int
mov
push
pop
mov
cwde
cs
xchg
sbb
cmp
fdiv
std
inc
mov
cdq
cs
xchg
push
in
das
aas
shl
mov
outs
jmp
fist
leave
stos
add
mov
clc
xchg
jb
pop
add
jno
add
fcmovbe
xor
mov
cmps
dec
dec
int
mov
adc
push
nop
gs
loopne
mov
push
int
xor
inc
mov
jb
adc
jle
js
imul
jb
push
and
add
xchg
mov
mov
jbe
mov
or
jp
in
mov
cmps
mov
cmps
jbe
xchg
arpl
loope
daa
or
and
fs
xchg
mov
jae
in
push
lods
jne
sub
leave
xor
mov
cmp
pop
and
les
push
push
push
jmp
xchg
popf
cwde
movs
ret
lds
xor
adc
popf
mov
add
adc
pop
push
dec
mov
mov
or
adc
call
adc
mov
cmp
nop
cdq
rcr
in
outs
cmp
call
pusha
add
dec
hlt
mov
mul
fsubr
loopne
imul
xchg
and
cwde
sbb
and
push
mov
mov
push
xchg
sbb
sbb
(bad)
mov
inc
xchg
out
into
mov
push
(bad)
sbb
aaa
xlat
mov
and
inc
mov
xor
mov
aas
mov
sbb
in
mov
mov
pop
sbb
push
(bad)
hlt
xlat
jbe
xor
mov
std
aam
inc
mov
cdq
test
clc
push
int3
mov
test
retf
inc
or
aaa
push
cvtps2pd
in
sar
and
aas
in
sub
mov
inc
call
enter
aam
call
cmp
sbb
cli
and
out
into
push
popf
xchg
cli
or
mov
rcr
cmp
loope
test
cli
cmp
xor
jae
fdivrp
sti
mov
pop
rol
mov
cdq
inc
sub
lods
pop
sub
ror
fst
into
outs
xor
std
mov
test
mov
in
jmp
clc
test
aas
inc
data16
adc
sub
fidiv
mov
dec
out
and
xor
lock
in
add
shl
sbb
outs
retf
icebp
cmc
shl
add
adc
mov
mov
in
push
lock
push
fmul
adc
push
int3
lods
mov
dec
inc
jg
cmps
in
popa
xlat
sub
and
jmp
push
add
test
pop
dec
stos
xor
and
push
test
popf
int
dec
sahf
pushf
hlt
mov
enter
pop
mov
lds
xor
push
xchg
stc
or
add
and
dec
dec
out
mov
or
add
mov
mov
inc
mov
add
rol
shl
daa
add
mov
ins
aaa
lahf
rcr
mov
cmp
sbb
adc
cdq
jg
ja
repz
mov
inc
sbb
or
cmps
lods
fist
sub
clc
aad
in
adc
cmp
cmps
push
fstp
inc
arpl
ret
aas
dec
in
lods
mov
repz
jle
mov
leave
adc
fcom
in
or
mov
int3
add
test
mov
dec
test
pop
and
sahf
xor
fwait
sub
and
cld
cmps
and
aas
mov
movs
sbb
mov
enter
js
mov
adc
inc
enter
jns
inc
hlt
aaa
sub
(bad)
mov
jp
retf
mov
fwait
adc
or
in
test
jecxz
fisttp
pop
hlt
cmp
test
mov
div
retf
xchg
push
dec
sub
inc
ins
and
pop
ds
cmc
fs
lea
sub
sub
sub
pop
inc
std
sub
js
hlt
mov
xchg
clc
xchg
xrelease
sbb
lods
or
pushf
dec
call
sti
mov
imul
sbb
cmp
and
shl
pop
loop
push
jbe
xchg
scas
fiadd
mov
leave
and
pop
ret
scas
xor
push
out
xchg
loope
movs
xor
mov
adc
iret
and
and
stc
push
push
xor
cwde
add
test
pushf
test
fld
pushf
or
xchg
sbb
mov
mov
pop
lods
popf
mov
or
(bad)
mov
je
lods
(bad)
cs
loop
mov
push
sub
(bad)
mov
mov
cld
sbb
adc
bound
pop
lahf
fstp
int3
dec
cli
dec
xor
pop
jp
lds
je
out
scas
and
push
shl
pop
cmp
xor
popa
inc
(bad)
retf
add
and
push
dec
lds
fwait
movs
adc
push
pop
push
sbb
sar
mov
in
mov
adc
adc
adc
xchg
adc
and
shl
arpl
ret
aas
stos
cwde
sbb
push
and
xchg
aaa
dec
arpl
push
or
mov
(bad)
jecxz
sub
pop
sbb
cmp
push
and
cmp
add
mov
repnz
test
xor
cmp
mov
cmp
inc
rcl
fstp
and
add
lea
xor
pusha
mov
and
test
outs
cmp
rcl
out
iret
mov
jmp
or
jle
dec
mov
push
fwait
les
fwait
jne
gs
mov
cmp
mov
jle
shl
jb
inc
jb
dec
pop
cmps
pop
fild
lds
out
jp
jecxz
cmp
(bad)
cld
mov
mov
nop
repz
pop
cmp
pop
mov
enter
or
mov
pop
inc
mov
aas
(bad)
data16
cmps
std
ret
mov
push
cwde
(bad)
xchg
adc
(bad)
(bad)
cmp
xchg
iret
sbb
loope
add
pop
ins
xor
mov
in
repz
mov
retf
es
shr
repz
jo
dec
shl
ror
mov
aaa
add
stc
inc
int
imul
xor
mov
inc
out
call
xchg
call
lds
mov
jp
in
sub
enter
hlt
mov
scas
repnz
jmp
mov
(bad)
in
or
addr16
imul
dec
xlat
imul
pop
(bad)
xchg
(bad)
lahf
ficom
and
sbb
imul
and
fwait
gs
icebp
ss
mov
mov
retf
jle
and
xchg
loope
xlat
mul
ficomp
push
sbb
inc
mov
xchg
dec
push
arpl
stc
jo
mov
push
push
stos
sbb
jne
pop
jecxz
jp
arpl
es
push
add
sub
loopne
push
push
call
mov
mov
adc
pop
daa
jmp
imul
or
cmp
inc
jle
cmps
dec
jno
or
cld
sbb
mov
sahf
jmp
xchg
loop
adc
cmps
pop
mov
adc
inc
movs
or
or
add
lods
ja
cld
adc
sub
sbb
or
stos
rol
pop
jb
pop
call
popf
das
pop
(bad)
ds
and
retf
pusha
repnz
cs
dec
repnz
and
and
push
(bad)
popa
sub
ret
mov
jmp
repz
ds
outs
repz
lea
xor
mov
daa
hlt
inc
xor
xor
(bad)
mov
add
gs
push
into
aaa
xor
aam
dec
aad
(bad)
test
shl
stos
cmp
(bad)
ds
lock
daa
cmp
in
mov
mov
scas
mov
sbb
pop
xor
jle
sbb
bndldx
mov
rol
adc
push
cmps
imul
cmc
add
xchg
inc
push
mov
xlat
sub
dec
lods
jne
xchg
inc
adc
xchg
pop
popf
and
and
adc
ja
mov
mov
fisubr
repz
sub
out
ja
pop
mov
dec
jmp
sbb
or
mov
inc
push
bound
mov
and
sub
xor
inc
ja
in
mov
inc
das
in
lea
or
add
imul
jge
(bad)
jns
cmp
mov
out
lea
mov
daa
fst
mov
lds
xchg
fsqrt
dec
xchg
adc
add
mov
xor
wrmsr
(bad)
jmp
inc
out
stos
in
xlat
cmp
mov
push
jns
arpl
xchg
xchg
push
mov
dec
and
scas
xlat
mov
(bad)
jmp
or
loope
(bad)
sti
lods
mov
dec
inc
adc
lahf
movs
clc
jl
or
sbb
mov
into
cmp
repz
mov
cmp
bound
retf
inc
adc
push
out
sub
mov
inc
dec
and
dec
out
push
mov
(bad)
adc
xor
inc
icebp
mov
xchg
jne
mov
jecxz
sbb
repz
jnp
clc
adc
rol
mov
mov
hlt
sbb
inc
sub
loopne
enter
adc
push
repnz
int
mov
out
mov
dec
sub
pop
scas
xchg
imul
out
nop
loop
ficom
sbb
mov
jns
pop
cld
fcos
mov
push
aas
pop
mov
jp
nop
or
jg
push
jmp
dec
dec
mov
pop
jmp
sar
ret
hlt
in
clc
xor
mov
adc
(bad)
adc
fstp
lods
(bad)
retf
out
add
sahf
xlat
loope
inc
cld
and
xchg
shl
push
inc
cmp
pop
aad
into
aaa
pop
lahf
jne
int
mov
jae
mov
popa
dec
mov
push
aam
cmc
add
add
and
adc
jge
(bad)
or
cwde
pop
mov
xlat
inc
mov
sti
jp
jae
add
(bad)
pop
mov
xchg
mov
sub
call
cli
jmp
mov
lahf
xchg
add
ss
mov
mov
push
sbb
in
dec
enter
sbb
nop
ins
push
pop
mov
inc
aaa
push
loope
dec
mov
test
fs
jo
fsubr
pop
leave
xor
addr16
test
iret
push
jbe
cmp
jno
add
hlt
fld
xchg
call
ror
sub
frstor
outs
jle
jle
mov
(bad)
mov
imul
pop
xchg
adc
or
pop
icebp
(bad)
xlat
jnp
das
sub
aam
sbb
(bad)
push
cmp
loop
js
push
call
(bad)
add
xchg
fld
das
cmp
outs
jmp
aaa
sbb
mov
or
and
fmul
cli
xor
retf
jbe
cmp
cmp
sbb
test
dec
mov
sub
jno
sbb
mov
out
inc
xchg
sub
push
nop
hlt
aad
cmp
dec
(bad)
jmp
adc
mov
fmul
sub
mov
cmp
dec
fidiv
xchg
fs
lds
add
retf
retf
out
sbb
iret
fild
aaa
(bad)
int
or
xor
jp
repnz
repz
imul
sub
hlt
lods
movs
scas
dec
das
pop
add
jp
or
rcr
jmp
add
xlat
mov
cld
and
cmp
mov
sub
call
xchg
mov
loopne
cmps
loop
ror
lahf
or
in
loope
jecxz
xchg
test
das
bound
add
ss
jmp
push
leave
dec
ret
loopne
iret
push
repnz
push
fmul
cmp
dec
and
xchg
sub
outs
daa
call
xor
dec
iret
ins
push
ret
xchg
pop
mov
sbb
movs
outs
in
push
jmp
lods
pop
xor
js
nop
repz
sub
push
or
test
xchg
(bad)
jns
jns
rcl
mov
sbb
push
std
shr
adc
pop
fld
xchg
sbb
cmp
or
popf
cld
loopne
gs
shl
xor
jle
jnp
stos
imul
lea
and
mov
sahf
add
mov
inc
mov
jnp
add
in
push
outs
or
jno
jb
movups
ret
(bad)
jne
std
cmc
mov
movs
mov
jg
arpl
fs
mov
xor
into
sar
ins
cwde
sub
aam
push
(bad)
and
inc
push
clc
aam
adc
dec
add
stos
ss
inc
push
lods
or
or
adc
and
lea
loope
dec
mov
retf
push
call
clc
cmp
add
mov
mov
into
lock
mov
stos
lea
retf
ins
fld
mov
loope
rcl
jle
loope
jb
xor
cmc
(bad)
clc
or
(bad)
xor
cmp
loope
mov
and
lahf
(bad)
sbb
mov
ss
sub
sbb
lea
stos
and
inc
fadd
lds
mov
mov
ror
ret
fisttp
xchg
jnp
scas
jno
cdq
mov
jmp
push
movs
xchg
movs
jecxz
sub
stos
outs
addr16
xor
xchg
fimul
push
and
and
or
add
inc
and
movs
lods
add
mov
cmps
bound
test
mov
leave
cli
adc
pop
mov
xor
or
pop
(bad)
popa
or
fs
push
and
ret
pop
or
aam
int3
mov
sbb
mov
mov
add
cmp
push
push
ins
sbb
mov
pop
inc
jl
leave
shl
mov
sub
xlat
xchg
pusha
sbb
push
iret
dec
fs
inc
call
sbb
xchg
retf
mov
les
sbb
enter
retf
sbb
mov
ret
mov
test
add
iret
pop
ins
jle
xor
fcmovnb
fist
jle
inc
mov
xchg
xchg
dec
cmp
pushf
xor
(bad)
pop
jno
clc
and
and
rcl
mov
xchg
clc
rol
ror
and
jo
cdq
dec
nop
xchg
cmp
sbb
pop
lahf
(bad)
leave
mov
dec
pxor
cmp
test
retf
adc
rcr
fidiv
inc
dec
daa
fdivr
aas
inc
leave
repz
cmp
mov
pushf
or
or
clc
mov
imul
jle
enter
mov
leave
dec
(bad)
pop
or
popaw
xchg
nop
clc
stc
cwde
adc
mov
or
fcmove
pop
pop
sub
setle
arpl
xor
imul
into
and
pop
mov
rcl
repz
push
or
jge
loope
cmp
sub
push
jne
jp
inc
loop
and
neg
clc
in
fidiv
push
jae
mov
sbb
stc
mov
push
push
ret
sar
aas
repnz
(bad)
or
jae
imul
jnp
mov
cs
stc
lods
loope
fst
push
pop
xor
das
rcr
sti
inc
cmc
mov
xchg
pushf
ror
xchg
outs
repnz
cld
shl
(bad)
rcr
cmp
fidiv
popa
xlat
inc
shr
jnp
stos
cmp
mov
bound
mov
in
push
cmp
inc
stos
push
add
dec
jne
push
pop
push
in
pusha
lahf
mov
inc
iret
imul
mov
mov
test
sbb
xor
je
sbb
pop
or
or
mov
mov
pop
inc
push
mov
sbb
gs
jnp
jne
call
into
pop
sub
mov
xchg
jl
pushf
or
fisubr
adc
call
sysexit
inc
das
add
cli
in
call
aam
stos
rcr
sub
pop
jo
cmp
mov
gs
sti
mov
lods
cmp
sbb
jle
mov
xchg
pop
push
inc
pop
jns
and
test
xor
mov
lods
push
jle
cmp
jae
inc
outs
es
arpl
cmp
sbb
cmp
mov
fist
jns
loop
les
pop
neg
xlat
pushf
xchg
mov
jge
jnp
fst
(bad)
fdiv
dec
push
sbb
stc
or
cmc
bound
pop
sub
pop
ret
push
or
xlat
mov
dec
daa
mov
mov
mov
mov
xor
ja
loope
clc
ja
call
stc
mov
mov
mov
or
aaa
mov
cwde
aaa
imul
mov
(bad)
cmps
mov
mov
sub
add
sbb
popa
pop
retf
cmp
mov
mov
cmp
ret
pop
dec
jecxz
shr
mov
shl
xlat
shl
mov
enter
sub
ret
cmp
pusha
inc
mov
into
repz
cmps
jae
inc
cmp
push
mov
mov
out
out
mov
inc
push
inc
je
xor
xchg
(bad)
xor
pushf
retf
push
out
cmp
pop
lods
int
jo
jge
mov
loope
das
into
out
and
sbb
push
mulps
gs
pop
and
inc
pusha
xor
call
fild
enter
into
aas
loop
sbb
jno
loop
(bad)
mov
or
movs
les
mov
stos
movs
dec
mov
fst
push
ins
sbb
call
pop
fadd
test
pushf
in
pop
fist
leave
add
dec
xchg
and
pop
imul
daa
mov
fstp
adc
sahf
fisubr
pop
pop
les
or
jo
loop
cmp
mov
inc
mov
sub
sub
pop
fcomi
ret
dec
xchg
sbb
imul
int3
shl
pop
call
inc
xchg
mov
es
aam
xchg
pop
div
mov
jbe
or
aas
push
in
xchg
stos
sub
mov
pushf
inc
ss
xchg
daa
pop
test
mov
sub
sti
cld
repz
les
sub
pop
cld
pop
or
jne
sbb
pop
fsubp
sub
ret
fisubr
push
fcomp
mov
call
mov
push
dec
or
push
enter
dec
and
jge
adc
jne
jae
aad
xor
add
das
mov
pop
adc
les
imul
loop
xchg
xchg
cdq
lds
iret
inc
cmp
movs
push
mov
sbb
add
push
shl
sub
mov
xchg
inc
pop
mov
and
ror
adc
pop
mov
adc
rcr
push
sbb
sti
or
mov
add
in
cmp
test
jmp
cmp
push
push
pusha
sahf
pop
aam
dec
adc
gs
repnz
movs
stc
add
cwde
jmp
cmps
inc
fisubr
pop
sub
xor
(bad)
push
and
cmc
das
mov
adc
ds
jne
popa
ins
cmc
mov
pop
outs
mov
xchg
in
rol
int3
scas
es
mov
lods
add
cmc
inc
or
xor
cmp
scas
dec
or
mov
xor
jge
inc
retf
in
mov
neg
mov
or
lds
sub
sbb
in
and
pop
inc
js
aad
outs
mov
in
rcr
pop
les
cmp
mov
out
call
ds
sbb
xchg
les
sbb
fcomp
or
pop
mov
xor
hlt
cmp
(bad)
dec
push
fist
pop
repz
aad
dec
daa
sub
push
cmps
dec
push
sbb
pushf
aas
adc
ror
cmp
cmp
leave
mov
dec
fld
sub
add
push
mov
or
jge
std
dec
movs
mov
lods
cmps
push
jge
cmp
lock
or
xchg
push
mov
cmp
lods
jmp
(bad)
aad
jno
cmp
jne
dec
xchg
vpsraw
shl
push
popa
outs
add
sbb
in
std
xchg
lea
adc
pop
mov
(bad)
dec
mov
mov
jns
inc
mov
push
call
sub
call
lods
dec
loop
sub
cmp
fisttp
jmp
and
dec
sti
xchg
imul
or
shl
sti
sub
aas
push
xor
mov
jb
mov
fisubr
mov
xchg
ret
push
inc
dec
mov
into
jmp
dec
loope
je
das
mov
ins
repz
out
hlt
jg
mov
add
sub
pop
popa
fsub
ins
pop
sub
out
sbb
add
fiadd
pop
mov
cwde
xchg
and
and
or
pop
nop
mov
(bad)
jg
loop
int3
test
sti
cli
sbb
xor
hlt
std
add
dec
or
pop
call
ret
sahf
test
popa
cwde
stos
sbb
jno
cmp
outs
cmp
out
sub
sub
inc
jp
imul
xchg
lods
popf
sub
arpl
icebp
out
ds
bound
hlt
gs
jns
cli
aam
dec
pop
push
push
(bad)
jl
stos
in
mov
test
cmp
push
in
mov
mov
repz
mov
aaa
sbb
push
in
enter
test
cmps
into
adc
shl
aam
mov
dec
mov
push
mov
aas
dec
mov
add
mov
pusha
les
adc
cwde
push
xor
add
je
xchg
push
mov
fidiv
push
scas
(bad)
fimul
push
mov
ret
jp
add
les
lds
pop
push
iret
mov
(bad)
push
add
jae
push
mov
iret
add
mov
(bad)
loopne
stos
retf
leave
push
rcr
std
aam
ds
or
pop
sbb
inc
test
iret
mov
mov
cmp
cmp
or
test
dec
in
dec
icebp
pusha
xor
sbb
sub
sub
sbb
cmp
aad
out
mov
test
lods
sbb
inc
nop
push
int
fs
inc
mov
aam
retf
std
or
mov
pop
dec
fwait
shl
mov
and
sbb
neg
mov
out
push
scas
dec
jmp
mov
inc
adc
stc
cmp
aas
jno
gs
test
(bad)
mov
push
jb
inc
pusha
adc
aas
xor
adc
jmp
sub
data16
clc
xchg
cs
lods
cmps
inc
fs
dec
mov
pop
das
cmp
push
rol
dec
adc
cdq
ret
pop
xchg
jle
movs
fs
jb
les
les
pop
add
mov
cmp
ficom
shl
and
or
and
pop
cmp
cmp
cli
movs
dec
sub
dec
fild
ror
mov
hlt
jo
ds
popa
jg
pop
cmps
push
jo
in
mov
shr
cmp
dec
mov
push
push
imul
sbb
xlat
popa
lods
test
inc
shl
mov
cli
mov
(bad)
lahf
iret
scas
test
ds
arpl
adc
arpl
stos
in
fmul
loop
cmp
push
mov
rcl
cld
sub
scas
cmp
ret
adc
add
jo
test
(bad)
sbb
leave
int
pop
into
stos
repnz
mov
add
cs
retf
and
jecxz
js
jb
xchg
cwde
popf
push
jmp
xchg
sub
inc
movs
lahf
cmp
and
lea
add
mov
pop
mov
xchg
js
adc
pop
rcl
dec
les
sub
int
sbb
int3
or
sbb
icebp
(bad)
(bad)
sbb
sahf
mov
pop
ins
sbb
es
in
mov
fsubr
(bad)
xchg
xor
fnstenv
mov
push
stc
fst
fldcw
punpckhdq
dec
jecxz
or
sbb
sub
pop
adc
sbb
lock
adc
xchg
leave
bnd
add
fmul
movs
dec
jge
call
cmp
mov
mov
scas
pop
cmps
sub
pop
cmp
(bad)
imul
in
mov
pop
pop
push
push
push
mov
dec
cmps
pop
(bad)
push
push
jecxz
mov
inc
xchg
into
add
imul
es
sbb
fwait
mov
ins
inc
push
mov
out
mov
arpl
adc
iret
in
sbb
or
fnstenv
clc
leave
ret
les
mov
jmp
aad
sbb
or
push
das
adc
int
sbb
jnp
clc
aaa
ins
(bad)
mov
mov
stc
and
ins
mov
ins
push
cmp
or
add
lea
in
xor
int
jmp
add
pop
(bad)
call
push
icebp
adc
sub
jl
push
sub
xor
xor
hlt
and
or
mov
xchg
adc
into
jmp
mov
loope
popa
je
jmp
mov
int3
out
pushf
dec
cmp
cwde
push
popf
push
lahf
inc
dec
(bad)
fstp
das
test
pop
add
jb
add
jns
push
and
add
jecxz
aad
jmp
mov
jecxz
xchg
dec
sahf
sub
sub
cmp
cli
scas
in
test
cwde
sbb
adc
dec
cld
out
je
xchg
or
xchg
mov
mov
aad
adc
dec
dec
test
(bad)
dec
je
hlt
fsubp
fs
inc
aam
mov
inc
out
ja
(bad)
xlat
cs
lds
test
test
repz
pop
fild
std
push
pop
aad
cli
mov
add
adc
mov
inc
ja
shl
push
mov
mov
or
ret
cli
fs
mov
sub
test
adc
neg
push
add
ins
xor
pop
bound
fsubr
fcomip
out
mov
mov
cmc
in
das
rcl
std
sbb
sub
or
pop
fs
mov
add
mov
jp
adc
add
pop
xchg
in
jl
jbe
mov
movs
pop
or
xor
in
add
push
rol
mov
outs
pop
add
mov
push
xchg
loop
sbb
push
and
cld
xor
dec
std
xchg
outs
and
or
xchg
adc
jae
lock
fidiv
xor
jb
out
mov
sub
imul
dec
das
inc
jmp
add
hlt
cmps
xchg
outs
sub
mov
dec
inc
imul
inc
ror
icebp
and
das
call
xor
mov
icebp
sbb
lea
test
cmps
cwde
pushf
test
loope
xor
repnz
loopne
stc
push
repnz
cmp
movs
xchg
mov
xchg
xchg
(bad)
pop
jo
out
test
sahf
mov
into
jae
inc
sti
dec
jno
xor
adc
sbb
lock
repz
loope
mov
dec
(bad)
jbe
scas
lock
sub
push
imul
jne
(bad)
xchg
pop
ins
repnz
icebp
aas
mov
sub
jecxz
mov
or
call
xor
sub
jno
outs
movs
jge
stc
dec
xchg
in
inc
test
enter
dec
shr
outs
ins
mov
dec
add
cmp
ss
out
mov
add
les
pop
mov
retf
outs
dec
jp
mov
mov
inc
mov
sub
adc
popf
push
lea
pop
and
in
scas
jo
xchg
fmul
call
xchg
dec
fwait
xchg
jb
in
push
sar
sub
shl
pop
pop
push
mov
js
cmp
inc
xlat
xor
push
xor
cmp
cli
mov
(bad)
lea
push
sbb
cdq
rol
out
mov
jnp
mov
mov
dec
inc
aad
and
xchg
adc
cmp
lods
xchg
js
mov
inc
sahf
or
jmp
out
outs
add
jns
in
lahf
mov
jo
sub
in
fnstsw
adc
add
dec
mov
sbb
sahf
xchg
dec
sub
pop
mov
lea
xchg
pop
out
xor
imul
fcom
lea
sub
pop
aaa
imul
xchg
sub
xchg
xor
jecxz
adc
inc
push
mov
and
fst
mov
in
mov
push
and
imul
aaa
jbe
fidiv
xchg
push
cmp
jo
and
fmul
scas
jbe
fild
addr16
xlat
add
pop
xchg
les
mov
mov
jmp
out
mov
stos
push
repnz
sbb
into
lods
mov
adc
fs
mov
push
imul
into
repz
pop
ss
xchg
(bad)
jmp
out
mov
jns
push
out
mov
std
push
data16
mov
xor
sub
hlt
cmp
not
sbb
mov
inc
mov
sub
mov
mov
and
shl
imul
pop
outs
cmp
out
adc
push
push
jecxz
add
cmc
add
dec
mov
(bad)
retf
in
hlt
xor
cmp
mov
mov
inc
mov
mov
je
retf
loop
mov
ds
lods
(bad)
xor
dec
jmp
out
push
push
in
hlt
(bad)
xchg
jp
pop
mov
lea
mov
cwde
cwde
mov
push
cmp
cs
sti
pop
push
xchg
nop
cmp
stc
sub
loope
scas
mov
jl
sbb
and
sti
sub
imul
leave
mov
out
cmp
fidiv
gs
mov
sahf
mov
adc
mov
mov
aaa
pop
fadd
call
scas
stos
outs
je
jg
repnz
jl
shr
fcomp
(bad)
push
lock
xlat
push
lea
sbb
add
xor
xor
and
mov
popf
mov
movups
or
pop
push
ins
dec
sub
add
fst
nop
ss
pop
aaa
sbb
scas
and
adc
jg
cdq
popf
jo
int
add
inc
pinsrw
in
cmp
inc
mov
mov
cmc
cmps
lock
jno
movs
and
out
xor
jb
das
cmps
xchg
ficom
dec
or
cmp
stos
out
inc
xchg
sbb
sub
xor
mov
dec
dec
retf
pushf
and
push
jmp
imul
cmp
(bad)
icebp
inc
push
mov
mov
mov
dec
xchg
in
and
mov
loopne
bound
mov
cmp
sbb
into
out
inc
cs
mov
aad
jae
sub
daa
shr
cmp
js
or
push
out
sahf
sub
outs
nop
add
jge
daa
pop
adc
xchg
test
retf
bound
int3
enter
cmps
and
sar
mov
push
jge
sbb
or
or
add
cli
ret
les
mov
and
scas
fwait
xor
data16
sti
pop
pop
ret
rcr
shr
loope
and
inc
pop
call
outs
jge
cmp
or
or
cmp
(bad)
sbb
js
mov
in
shl
xchg
ror
scas
(bad)
outs
sub
mov
jmp
out
mov
daa
pop
call
dec
xchg
pop
xor
mov
jp
test
inc
dec
lds
imul
cdq
sti
add
test
xchg
xchg
fstp
dec
jmp
pop
jb
mov
mov
mov
dec
pop
out
daa
ins
xor
in
push
jmp
mov
gs
pop
mov
ja
cld
ins
mov
imul
lods
lahf
shr
aaa
jle
mov
idiv
pusha
sub
jg
and
jmp
outs
scas
pusha
mov
jp
bound
xor
test
addr16
lahf
dec
mov
pop
pusha
das
and
jl
lods
call
int3
fbstp
sbb
into
pusha
out
test
int3
(bad)
repz
sbb
xor
loopne
push
js
xchg
test
push
aaa
sbb
jecxz
sbb
call
lds
add
retf
(bad)
mov
or
and
mov
test
xchg
pop
adc
pop
jp
daa
ss
out
cli
mov
jns
mov
jmp
arpl
(bad)
lods
xchg
xor
mov
inc
dec
cmp
mov
pop
inc
xor
sub
xor
in
mov
in
ficomp
pop
aaa
in
(bad)
cmp
pop
adc
mov
dec
call
int
imul
and
dec
daa
int3
shl
pop
xor
adc
pop
lods
call
fsub
xchg
push
fisttp
jns
add
and
fst
ins
dec
push
pop
call
cmp
and
dec
into
mov
adc
(bad)
sysexit
inc
es
ror
lods
in
out
or
push
icebp
sahf
pop
sub
push
movs
test
sub
scas
or
cmp
(bad)
in
loope
fld
sub
aas
xor
call
daa
imul
in
xor
aad
xor
adc
xchg
pop
pop
lea
cwde
ret
(bad)
les
add
stc
or
jge
in
xlat
dec
imul
mov
js
cld
ins
loop
dec
(bad)
mov
fnsave
sbb
mov
test
mov
lods
xchg
push
aam
xor
arpl
mov
push
xchg
push
repz
sbb
in
cmp
inc
gs
into
pop
mov
(bad)
je
mov
mov
or
(bad)
mov
add
std
mov
les
fsub
test
sbb
adc
pop
sbb
test
loope
sbb
push
push
add
jnp
hlt
adc
cmp
aaa
ret
mov
inc
stc
and
adc
outs
int
push
int3
pop
adc
in
dec
push
adc
lea
lea
int
out
xchg
mov
mov
cmp
sti
int
sbb
xchg
test
out
es
xlat
cmp
inc
repnz
out
lahf
mov
inc
scas
sar
mov
xchg
sbb
pop
push
cmc
sub
and
popf
rcr
xchg
mov
mov
mov
push
daa
adc
xchg
gs
jae
test
pop
and
enter
popa
pop
arpl
jmp
sbb
repnz
push
add
ins
jmp
fsubr
push
pop
mov
sbb
pop
test
jmp
pusha
push
lods
iret
dec
add
mov
xor
sar
fistp
xchg
fimul
mov
xchg
cmps
lods
or
push
test
dec
rcr
adc
js
cmp
pop
or
xchg
scas
maskmovq
cmps
or
and
call
arpl
push
push
into
mul
xor
push
leave
mov
push
repz
and
cmps
sub
mov
jecxz
scas
mov
cmp
stc
ins
dec
lahf
int3
xchg
and
mov
add
jne
push
mov
ins
inc
sub
push
fdivr
shl
shl
dec
test
je
scas
or
xchg
mov
mov
in
and
jbe
movs
repnz
popa
inc
jmp
test
stos
jge
cmps
xlat
out
nop
xchg
movs
jmp
rcl
and
cmps
sub
xor
inc
push
push
punpcklwd
cmp
xor
and
fisttp
mov
pop
dec
stos
dec
(bad)
mov
bound
mov
pop
push
xchg
push
push
aas
cld
retf
in
push
cmp
inc
cmps
sar
inc
jae
or
inc
dec
push
sbb
test
xor
jne
lock
ins
clc
fld
mov
(bad)
outs
test
xor
dec
xchg
ror
dec
cld
inc
ins
ss
test
adc
jge
push
fcom
push
sub
hlt
push
(bad)
and
dec
pop
dec
test
push
add
mov
push
dec
out
loope
and
dec
inc
movs
inc
push
xor
loopne
inc
loope
or
sub
aaa
stos
xchg
in
jmp
inc
mov
dec
sub
mov
jae
dec
fcom
pushf
movs
mov
mov
scas
xchg
push
icebp
sub
ror
lds
add
dec
ds
sbb
neg
jb
outs
xchg
lods
outs
jmp
sub
mov
loope
and
xchg
push
xchg
sub
mov
sub
fwait
imul
std
inc
call
xor
call
cmp
fld
pop
push
and
mov
icebp
xchg
(bad)
jae
lods
mov
leave
sub
jp
and
ret
mov
add
mov
mov
sub
movs
cmp
adc
jle
arpl
sbb
(bad)
outs
xchg
mov
jl
sahf
xlat
in
sti
aaa
mov
mov
or
pushf
lahf
mov
push
jae
retf
push
test
cdq
ror
int3
add
ins
outs
in
and
dec
sub
sbb
sub
ret
icebp
mov
and
mov
sub
dec
mov
mov
adc
stc
sub
mov
push
mov
je
and
aam
cwde
or
test
sub
aaa
xor
aam
sbb
jle
add
add
pop
sub
cdq
mov
ds
mov
and
pop
in
retf
pop
inc
push
xchg
mov
mov
jne
xor
lock
sbb
sbb
xchg
cmp
retf
imul
(bad)
div
push
mov
addr16
out
into
inc
adc
loope
add
xchg
mov
ror
and
(bad)
adc
ds
cmp
mov
sub
adc
sahf
pushf
pop
in
mov
dec
fistp
fyl2xp1
cli
fist
mov
inc
stos
adc
pcmpgtd
or
and
bound
jg
or
mov
xor
mov
cmp
outs
in
cmc
dec
mov
inc
mov
adc
push
in
jb
test
sbb
aad
mov
fbld
shr
data16
inc
iret
mul
or
xchg
jmp
lahf
rol
adc
lahf
(bad)
pop
out
cmp
out
test
in
retf
jns
sbb
fnsave
sub
lock
push
test
fcom
test
adc
ins
dec
lods
enter
bound
jae
sub
out
jecxz
mov
cmp
pop
icebp
mov
and
lock
mov
jmp
icebp
jmp
iret
xchg
sub
call
int
add
sub
sub
(bad)
not
in
jecxz
iret
std
popf
jo
mov
movs
cmp
sbb
or
jmp
cmp
sbb
mov
mov
bound
das
cmp
aaa
lahf
fisubr
dec
jl
pop
test
mov
xchg
pop
outs
jge
mov
mov
jb
pop
inc
push
shl
adc
inc
add
xchg
ins
popa
fistp
xchg
cwde
adc
leave
sbb
shr
cs
inc
std
jne
xchg
(bad)
xor
out
or
dec
sbb
cmc
popf
jecxz
data16
and
and
xor
fdiv
pop
lds
in
ret
in
pop
popa
mov
jecxz
fiadd
iret
cld
add
mov
lods
inc
pushf
stos
(bad)
xor
mov
js
pop
aam
mov
out
pop
in
mov
cmps
inc
sbb
test
inc
inc
xlat
leave
call
enter
xchg
cmp
inc
gs
nop
pop
xor
lahf
cli
(bad)
iret
bound
xchg
enter
sbb
xchg
mov
hlt
xchg
es
scas
xor
jl
mov
sbb
addr16
dec
jl
jae
scas
dec
sbb
(bad)
js
lock
lock
div
and
iret
or
in
xchg
pop
sbb
jl
push
cmp
add
cmp
sahf
hlt
xchg
out
frstor
pop
xor
mov
cld
scas
aas
dec
retf
or
loop
jns
jmp
in
outs
arpl
mov
xor
outs
dec
sub
jmp
lods
jae
jo
xlat
xchg
cmp
xchg
clc
jp
jmp
xor
or
imul
in
lock
imul
xchg
pop
retf
push
dec
(bad)
push
mov
xchg
or
into
fsubr
(bad)
xchg
hlt
jmp
mov
xor
jmp
sahf
mov
das
pop
add
(bad)
pusha
rcl
loope
mov
cwde
cld
mov
pop
or
adc
gs
xchg
push
(bad)
sbb
hlt
adc
jmp
mov
pop
or
mov
fidivr
sahf
scas
inc
and
mov
and
cmps
dec
sti
arpl
and
sub
je
outs
jle
lock
mov
cmc
arpl
out
pop
rcr
enter
sahf
dec
pop
inc
les
retf
pusha
push
shl
shl
jo
pop
aaa
inc
and
dec
xchg
ds
sub
pop
mov
inc
cdq
and
mov
test
enter
aas
xor
movs
mov
and
and
adc
push
scas
inc
ret
gs
push
xchg
(bad)
mov
outs
pop
seto
not
pop
imul
and
xor
add
dec
or
loopne
push
in
pmullw
pop
pop
add
aam
push
mov
stos
jmp
mov
in
mov
cmp
dec
cld
aas
pop
mov
and
out
jmp
pop
push
ret
lds
gs
cdq
pop
dec
lods
push
xchg
ret
and
mov
clc
mov
(bad)
fcomi
xor
loop
mov
add
stos
add
xor
inc
or
mov
pop
cli
sub
pusha
xor
fwait
push
aad
xor
out
sub
adc
sahf
jmp
pop
or
and
fstp
ds
push
test
mov
sub
pop
inc
sbb
pop
call
test
dec
repnz
call
jno
sub
mov
ss
mov
inc
xor
pop
sbb
loopne
mov
mov
adc
call
into
xchg
cs
movs
dec
pop
pop
sbb
ja
clc
cld
iret
cmp
xchg
pop
jle
fist
sbb
test
add
xchg
mov
dec
ret
ficomp
enter
test
out
jnp
in
int
loope
(bad)
int
cmp
cs
das
sbb
mov
ror
inc
movs
sar
dec
push
lea
test
int
hlt
sbb
int3
outs
mov
js
aad
mov
fistp
stos
cmp
call
ficom
xchg
mov
cli
mov
sbb
pop
(bad)
retf
js
inc
or
add
jle
(bad)
sahf
pusha
(bad)
bound
push
shr
push
xchg
cwde
xor
or
pop
aam
push
popf
pop
mov
mov
shl
ds
ja
ret
mov
out
js
ret
pop
adc
pop
xor
mov
(bad)
stos
sub
lock
xchg
or
bound
scas
jo
les
out
mov
and
daa
xchg
or
pusha
or
inc
add
enter
pop
push
mov
das
cs
outs
gs
scas
dec
and
jge
mov
cmp
push
jmp
call
mov
push
(bad)
fisub
xchg
out
js
sub
pop
add
xor
mov
xchg
les
and
adc
adc
adc
(bad)
mov
mov
sti
mov
dec
adc
cmps
shl
icebp
adc
mov
fwait
jmp
xchg
pusha
pop
pop
rcl
xchg
push
(bad)
mov
xor
pushf
and
sti
aaa
mul
repz
xchg
inc
mov
shr
pop
cmp
and
movs
inc
push
int3
adc
sbb
outs
xor
outs
cmps
sbb
mul
mov
sbb
cmps
iret
out
inc
imul
icebp
ret
push
loopne
cmp
cmp
xor
ror
xchg
(bad)
push
sbb
or
inc
rcr
cmp
cmp
sbb
jg
fwait
out
add
dec
push
push
dec
mov
dec
cmps
and
jns
mov
xchg
test
jmp
inc
xchg
and
mov
sar
les
int
daa
int3
inc
inc
push
shl
aam
enter
popf
adc
ins
cld
xchg
sbb
jmp
xchg
mov
repnz
sbb
mov
jns
xor
mov
mov
ins
xchg
pop
in
sub
add
retf
lea
icebp
scas
and
jbe
inc
ds
jmp
inc
mov
call
cmp
pop
mov
ret
push
enter
daa
and
mov
and
jge
cmc
push
mul
dec
stos
jl
lods
iret
pop
sub
sbb
xlat
fxch
ins
popf
or
jne
imul
push
sbb
sub
(bad)
shl
push
dec
ss
add
fcom
inc
pop
and
jecxz
inc
mov
movs
and
sub
ins
cdq
adc
mov
pop
pop
out
jns
cmps
movs
inc
mov
repnz
push
adc
push
jns
mov
adc
sbb
and
mov
js
dec
mov
ss
pushf
push
gs
sub
xchg
mul
das
xor
push
(bad)
and
mov
test
outs
inc
sbb
stos
fs
or
jbe
test
mov
or
imul
retf
dec
mov
push
cwde
dec
cdq
shl
movs
mov
fst
cld
dec
scas
mov
dec
adc
mov
xor
dec
mov
pop
push
cmp
sbb
into
jg
xor
dec
cmp
push
int3
aam
dec
jb
pop
ret
cwde
mov
sbb
push
lods
xor
xor
mov
nop
mov
pop
(bad)
xlat
outs
cmp
cli
icebp
cmp
sub
mov
jge
ins
das
retf
fldcw
ins
cmps
loop
inc
or
push
in
es
add
int
and
jne
sbb
adc
xchg
loopne
add
hlt
stos
lods
es
in
xor
ja
rcl
pop
movs
xchg
cld
push
mov
dec
dec
clc
or
sbb
(bad)
cmps
cmp
adc
mov
push
lock
or
ror
mov
cmps
rcr
cmp
xchg
nop
add
mov
cli
and
xchg
cmps
loopne
add
xor
idiv
cwde
mov
stos
cwde
mov
jmp
cmp
es
enterw
repnz
cmp
mov
neg
dec
call
inc
push
nop
mov
mov
mov
push
mov
xchg
in
and
push
std
dec
or
xchg
dec
loope
icebp
in
adc
push
cli
frstor
stc
add
dec
dec
ins
sbb
dec
fist
mov
pop
(bad)
xchg
xchg
retf
leave
add
sbb
loopne
lds
(bad)
iret
out
jecxz
inc
lea
stos
lahf
cmp
sub
int
push
mov
mov
push
inc
jg
xchg
mov
aas
movs
pop
scas
cmp
or
scas
add
aaa
mov
mov
clc
repz
test
mov
xchg
test
and
pop
or
les
inc
(bad)
push
cmp
mov
test
cdq
(bad)
push
fsub
in
push
fadd
mov
mov
test
sti
in
imul
ja
mov
dec
div
rol
cmc
out
js
ss
mov
lods
push
(bad)
loop
pushf
stc
leave
pop
cdq
data16
add
jp
add
loop
in
adc
aad
dec
push
outs
std
fwait
cli
push
mov
(bad)
je
stos
rdtsc
pop
jge
mov
pop
pop
sub
jbe
inc
sbb
xor
mov
fpatan
mov
mov
int
hlt
pop
pop
sti
in
hlt
pop
push
stc
cmps
push
sti
jns
push
jae
sbb
and
or
jno
out
and
repz
sahf
add
or
sub
cmp
es
call
cmp
xor
adc
lahf
ss
push
mov
pop
outs
and
sub
(bad)
adc
loop
bound
ret
mov
jno
loope
dec
cli
dec
aaa
mov
out
cmp
push
inc
push
pop
out
mov
aam
in
mov
push
dec
mov
repz
ss
xor
int
push
daa
mov
movs
(bad)
fisubr
add
int
jl
add
add
ins
add
or
pop
nop
add
mov
shl
outs
fbstp
mov
xchg
cmp
push
cmp
addr16
xor
test
cmp
mov
jne
jnp
ds
dec
ja
pop
fs
stos
mov
jg
(bad)
hlt
adc
jae
and
stc
(bad)
jg
pop
or
inc
cmp
push
sub
and
mov
sbb
mov
xchg
mov
imul
std
daa
daa
mov
sub
xchg
sbb
dec
jl
enter
pop
jnp
sar
xor
out
jecxz
sub
retf
mov
je
inc
test
cmps
pop
jmp
lds
cwde
pushf
int
or
or
movs
adc
push
mov
sub
jle
test
rol
cmp
or
mov
mov
dec
retf
push
xor
loop
push
cli
or
test
adc
pop
jbe
lahf
jp
push
cli
push
ret
push
daa
cmp
je
(bad)
div
xlat
loopne
clc
pop
cwde
clc
call
adc
(bad)
daa
push
fs
add
es
js
ficom
mov
mov
jne
rcr
adc
mov
inc
rcl
call
cld
dec
dec
scas
xor
sub
ins
add
ds
mov
shl
pop
adc
(bad)
enter
lea
(bad)
pushf
shl
dec
sub
xor
pushf
call
and
ins
loopne
mov
(bad)
add
or
jne
call
pop
scas
xchg
xchg
cmp
js
dec
mov
mov
dec
sub
popf
cs
loope
enter
xor
and
sbb
cmp
dec
popa
iret
and
out
mov
retf
jo
cwde
sbb
out
mov
jb
pushf
adc
popa
jecxz
sbb
shr
mov
pop
mov
loop
rol
pop
pop
sahf
xor
cli
xchg
iret
mov
je
xlat
clc
push
or
hlt
adc
push
cmp
iret
cs
repnz
out
sbb
pop
scas
push
pop
jl
sbb
lahf
outs
stc
jecxz
js
cmp
leave
repz
stc
xchg
neg
retf
mov
cs
daa
and
sbb
push
mov
mov
stos
imul
xchg
or
cmp
dec
inc
lods
pop
push
mov
daa
push
jns
(bad)
sub
retf
popa
das
jnp
sbb
sbb
mov
out
mov
add
movsx
pop
jns
push
repz
dec
movs
fbstp
dec
sub
pop
adc
shl
cmps
add
lahf
adc
retf
jle
cld
in
cwde
fmul
inc
inc
(bad)
mov
inc
outs
lods
and
add
sbb
inc
push
imul
repz
(bad)
stos
(bad)
and
scas
inc
inc
call
stc
jno
mov
mov
add
ffree
adc
sahf
xor
push
jle
dec
jo
dec
xchg
pop
das
adc
dec
sbb
ja
popa
jnp
jmp
imul
mov
arpl
push
push
push
frstor
fcomp
sbb
stos
push
loopne
cmp
stos
imul
inc
jecxz
loopne
fild
adc
jno
sbb
mov
lea
icebp
jle
pop
jecxz
ins
ins
jne
loop
cmp
cwde
mov
lods
dec
cmps
out
pusha
dec
sbb
ficomp
xor
sti
jae
mov
inc
jmp
mov
xchg
fmulp
xchg
cmp
and
xor
inc
cli
push
pop
sbb
gs
add
ss
jne
js
add
jbe
pop
xor
adc
lds
mov
fisttp
dec
push
sbb
jno
rcr
iret
jns
in
pusha
dec
jno
adc
(bad)
fisttp
stos
pop
pop
inc
mov
popa
(bad)
ret
popa
rcr
ins
leave
mov
mov
in
nop
inc
cmp
inc
cmps
xor
test
jecxz
sbb
mov
mov
mov
adc
arpl
jmp
xchg
xchg
cli
jge
jae
shr
jmp
pop
sbb
mov
mov
xlat
xchg
dec
add
test
add
xor
in
ins
loopne
imul
dec
rcr
fmulp
imul
cmc
ret
je
ins
or
jns
xor
adc
jb
call
push
adc
or
add
mov
cmp
test
jae
pop
movs
xchg
inc
(bad)
mov
in
sub
bound
sub
pop
aaa
or
mov
ret
ds
neg
lahf
and
xchg
add
dec
dec
test
daa
in
shl
cmps
jle
gs
je
ins
inc
out
dec
lock
add
mov
sbb
jbe
packssdw
daa
aas
mov
push
dec
push
sub
sar
ret
mov
dec
and
rcl
mov
add
jo
leave
punpckhbw
mov
into
push
add
in
pusha
sbb
aaa
sbb
mov
and
adc
sbb
out
jno
and
add
ds
push
mov
mov
pop
mov
jne
dec
mov
mov
loopne
retf
sbb
test
call
stos
push
xchg
div
push
sub
sub
test
pop
dec
adc
pop
(bad)
fcmove
repnz
mov
jno
xchg
add
or
push
xchg
push
pop
pop
outs
call
mov
or
inc
mov
xor
sbb
push
clc
test
xchg
xchg
cs
jmp
jp
add
pop
jbe
xlat
jle
pop
push
xor
dec
repz
mov
and
loope
clc
dec
cli
(bad)
sbb
out
popf
sub
sbb
or
pop
dec
adc
ins
icebp
clc
push
retf
test
inc
mov
js
jge
out
pop
mov
fwait
cs
in
cs
fbld
jb
jl
lods
jae
mov
jl
jae
push
scas
pop
cmp
cli
ss
(bad)
(bad)
jb
pushf
je
(bad)
xor
lahf
jns
pushf
push
repz
adc
js
push
jg
out
sbb
stos
cld
ss
add
jecxz
stc
adc
adc
enter
sbb
(bad)
fdiv
mov
cli
add
jbe
xchg
pop
xchg
inc
inc
pop
imul
dec
push
adc
aaa
add
push
dec
leave
pusha
pop
xchg
les
jno
ffreep
mov
sub
mov
push
outs
enter
test
pop
in
out
or
dec
pop
loope
jle
(bad)
push
xchg
sar
pop
mov
lahf
sub
adc
inc
xchg
jmp
loop
jbe
repnz
hlt
mov
outs
in
outs
xchg
fs
xlat
adc
mov
push
daa
mov
push
xchg
push
sti
jo
pushf
cwde
outs
push
adc
loop
mov
cmp
jg
and
cld
push
pop
and
mov
pusha
pop
cmp
inc
int3
dec
xchg
fst
inc
inc
loop
ror
cmp
aad
dec
mov
(bad)
sbb
xlat
or
sub
loop
add
dec
fcomip
hlt
shl
loopne
fist
out
push
push
pop
pop
inc
pop
popa
cmp
sbb
jl
fucomp
(bad)
not
daa
mov
pop
(bad)
xor
mov
mov
adc
std
push
xchg
je
push
test
fucomi
and
movs
aaa
ret
pushf
pop
pop
cmp
push
jmp
add
pushf
cmp
imul
pop
imul
loopne
cmc
cmps
mov
mov
gs
aaa
fidiv
test
(bad)
into
(bad)
mov
mov
fcom
add
add
aas
sbb
(bad)
mov
jnp
sbb
pop
popa
push
add
pusha
jbe
mov
mov
mov
adc
sub
add
out
loop
cmc
sbb
rcr
addr16
fucomi
jbe
lahf
pop
pop
out
test
add
(bad)
rcr
jle
push
rol
rcr
pop
imul
data16
cmp
(bad)
std
sbb
fcomp
into
jmp
cmp
lahf
retf
jge
outs
sbb
mov
lods
ins
cmc
int3
jecxz
mov
cmps
and
(bad)
out
mov
outs
inc
inc
dec
or
xchg
aam
mov
mov
adc
stos
fcmove
jbe
lea
dec
icebp
lods
or
cdq
xor
je
push
cli
aas
fst
dec
lods
xor
out
icebp
or
les
xor
loop
mov
or
imul
and
ret
sub
test
mov
into
ret
out
push
movs
retf
sbb
cmp
int
sub
jmp
gs
xor
fild
sbb
jg
enter
lds
inc
data16
int
push
sti
mov
mov
xchg
iret
sub
xlat
xchg
mov
xchg
jecxz
push
push
mov
pop
rol
mov
jge
mov
imul
mov
sbb
adc
push
sbb
(bad)
enter
push
push
rcr
lods
dec
ss
inc
je
gs
pop
push
sahf
pop
fadd
mov
adc
mov
or
call
add
into
ins
adc
and
xor
imul
adc
stos
or
push
mov
xchg
lods
loop
and
cdq
jmp
das
fs
(bad)
mov
loope
enter
push
sbb
and
jno
cmp
(bad)
loopne
aas
and
movs
icebp
ins
popf
xchg
mul
and
fsubr
and
loopne
adc
out
repnz
into
push
add
xor
pop
pop
imul
sbb
fsubr
in
mov
add
(bad)
dec
sub
in
cwde
lahf
push
xor
sub
out
xor
leave
adc
ret
push
outs
das
jp
xchg
lea
cld
jge
dec
stos
sbb
aam
mov
and
adc
or
inc
bound
daa
pushf
mov
mov
dec
stos
and
and
cdq
mov
test
jecxz
test
rol
pop
dec
iret
xchg
neg
dec
in
clc
or
jl
inc
icebp
movs
jns
jno
xchg
push
and
mul
add
sbb
in
in
loopne
inc
sub
add
mov
xchg
sub
jmp
call
mov
ds
cli
add
xor
aam
cwde
iret
retf
test
xor
int3
pop
push
adc
xchg
sbb
adc
into
mov
shl
cld
out
jbe
scas
jne
jmp
mov
pop
sbb
dec
js
das
mov
mov
add
xor
add
out
cmp
inc
push
jb
std
inc
cmp
pop
(bad)
cmp
and
adc
mov
cli
mov
mov
cmp
xchg
mov
stc
add
jmp
int
sbb
jge
and
ret
scas
mov
mul
sub
fld
(bad)
test
sbb
sub
xchg
add
dec
into
adc
sbb
js
in
retf
daa
mov
mov
pop
inc
xchg
cwde
xchg
push
push
mov
jmp
fcmovu
retf
and
lds
mov
mov
mov
pop
pop
inc
inc
xchg
sub
add
bound
test
ja
dec
jmp
dec
cmp
pushf
lock
imul
hlt
ret
push
inc
sub
add
out
aad
cmps
mov
xor
pop
dec
cli
fadd
cmp
push
and
mov
jne
cmc
retf
xor
mov
mov
push
stos
sub
pop
lea
rcpps
sbb
arpl
int3
std
enter
dec
(bad)
sub
in
ja
mov
repnz
shl
dec
xor
ss
mov
jnp
test
and
pop
jnp
sub
and
jmp
xchg
mov
xlat
sbb
pushf
fwait
sbb
adc
jns
jno
mov
std
pop
test
push
dec
sbb
pop
mov
mov
mov
mov
cmc
popa
sub
mov
sbb
sbb
stc
pop
xchg
inc
dec
xchg
sar
or
pop
jnp
pop
call
mov
jo
loopne
fcom
or
pusha
and
fdiv
cmp
add
ja
pop
mov
fsub
lods
xchg
les
and
adc
ret
and
jno
shr
push
rcl
push
push
mov
retf
xchg
cmp
mov
int
data16
xchg
add
jmp
(bad)
sbb
cmp
(bad)
and
mov
push
sub
in
ret
sub
jge
test
cmp
or
xchg
aam
dec
cli
cmp
jbe
jg
xlat
jg
in
ss
frstor
rol
mov
xchg
mov
jb
in
and
neg
enter
and
push
pop
inc
push
ds
push
leave
pop
(bad)
int
stos
mov
mov
dec
addr16
pop
add
not
lea
sub
(bad)
ins
movs
or
and
repnz
cmc
jno
call
aam
dec
sti
movs
pop
jge
mov
sub
add
ja
out
pusha
or
inc
mov
mov
out
scas
inc
xor
js
mov
(bad)
xor
fwait
(bad)
pop
cmp
outs
fsubr
mov
fisttp
pop
xor
pusha
ffree
cwde
mov
ins
fs
xor
add
cdq
retf
lods
jmp
jmp
cmp
ja
sub
aas
mov
nop
outs
imul
xchg
inc
jne
xor
fnstenv
leave
add
sbb
cld
xor
(bad)
jmp
pushf
push
hlt
pop
fimul
cwde
inc
in
lea
jmp
add
scas
mov
lods
ja
push
xor
mov
and
or
jns
shl
nop
mov
mov
jbe
cmp
push
xor
inc
cli
cmp
stos
push
lock
push
add
int3
jne
push
(bad)
mov
lea
pop
add
(bad)
mov
inc
push
cmp
cmc
xor
outs
or
inc
push
inc
sbb
cmp
fnclex
xor
and
dec
mov
adc
stos
mov
lods
sbb
jae
mov
stos
mov
jp
sub
cmp
leave
imul
and
int
rcl
mov
adc
add
sub
dec
sbb
frstor
cmps
mov
mov
std
dec
loope
cdq
jp
cmp
gs
xchg
push
test
sub
push
jne
sbb
and
jbe
xchg
sbb
adc
add
mov
cmps
pop
mov
xor
(bad)
call
arpl
mov
dec
mul
add
mov
adc
into
lods
push
mov
add
sbb
sbb
adc
cmps
fsubr
test
jge
shl
push
inc
scas
jb
out
outs
add
sti
in
jmp
mov
ds
push
ss
push
ficomp
sbb
aaa
jns
lds
outs
cmp
or
lea
sbb
sub
dec
adc
pop
xchg
imul
(bad)
ja
add
sub
popa
push
arpl
imul
push
outs
in
stos
mov
gs
out
cmp
mov
add
lods
sbb
mov
cmp
sbb
(bad)
push
int
arpl
mov
rcr
mov
xchg
rcl
clc
ret
push
jg
pop
in
inc
push
(bad)
xchg
xor
(bad)
in
sbb
and
ret
pop
xchg
icebp
push
(bad)
pop
adc
sbb
cs
mov
xchg
sahf
and
mov
add
jecxz
test
gs
(bad)
test
sbb
cmc
inc
ret
inc
push
mov
ss
(bad)
xchg
sbb
test
mov
push
mov
pop
scas
inc
ficomp
push
push
xlat
fmul
jno
(bad)
lods
cmps
nop
add
imul
dec
mov
xor
inc
sub
jo
inc
pop
ja
sbb
dec
xchg
xor
mov
mov
sbb
fdivp
les
mov
dec
sub
(bad)
jecxz
mov
add
push
cmp
push
inc
dec
push
xchg
rol
xchg
lahf
and
repz
xchg
movs
bound
push
adc
xchg
out
ror
xor
fs
push
mov
rcr
ds
and
fistp
cld
icebp
inc
mov
mov
test
daa
add
nop
push
cmp
pop
out
loope
call
shr
or
sti
test
cs
cmc
cmp
mov
fld
das
jae
addr16
push
mov
sbb
push
repnz
loop
pop
mov
cmp
cdq
mov
lock
test
dec
mov
addr16
mov
xlat
bound
loop
inc
push
inc
fstp
cli
es
mov
fiadd
and
test
retf
gs
icebp
and
cli
retf
push
mov
enter
shl
push
lea
xchg
mov
inc
rcl
mov
arpl
mov
fsub
mov
aaa
xor
lea
mov
mov
mov
push
or
adc
ret
jbe
jp
jl
(bad)
cmc
or
pushw
inc
jle
and
jne
add
(bad)
sahf
ins
pop
popa
cmp
in
xchg
js
rcl
aam
ja
xor
test
push
pop
sub
inc
cmc
sbb
pop
jecxz
mov
sub
add
or
jo
outs
mov
xor
adc
jb
out
lds
pop
dec
and
xchg
cmps
div
(bad)
test
push
dec
out
dec
outs
and
cmp
push
adc
xchg
ret
clc
fisttp
stc
push
mov
fisubr
pop
sub
cmp
sbb
test
xchg
dec
inc
cmp
ja
cdq
push
push
sub
ror
pop
fisub
in
outs
sar
jecxz
leave
fsubr
inc
sbb
int
sti
sahf
push
shl
fsub
lock
out
xchg
mov
jle
pop
mov
mov
js
xchg
iret
rcr
and
mov
add
and
push
daa
push
add
adc
js
hlt
inc
repnz
(bad)
mov
ins
jno
pop
sub
push
out
mov
and
call
jb
adc
push
inc
jo
loop
in
and
inc
int3
loopne
ficom
xor
test
mov
cld
mov
pop
jecxz
or
inc
sti
cmps
sbb
bound
out
sub
loopne
mov
pop
outs
cdq
outs
cmp
daa
or
sbb
jo
add
loope
scas
sbb
and
rol
and
dec
dec
ret
dec
sbb
jns
sub
sbb
das
out
fdivrp
into
push
mov
mov
jle
loopne
jmp
test
sti
repz
lods
popf
cmp
inc
push
mov
cmp
inc
lock
(bad)
jg
adc
inc
push
mov
mov
imul
jns
shr
iret
inc
ret
addr16
je
out
dec
fmul
(bad)
lock
push
sbb
mov
sub
pop
xlat
sub
nop
pop
lea
adc
adc
test
add
pop
movs
mov
jl
test
mov
inc
push
js
fild
pop
call
sbb
int
mov
sbb
mov
cmps
push
xchg
retf
jnp
jo
pop
pop
fsubr
out
adc
aas
or
dec
loopne
test
out
scas
ja
out
fcom
mov
(bad)
cwde
les
add
jl
stos
popf
outs
push
fmul
dec
test
push
out
mov
leave
adc
in
gs
mov
scas
sar
les
or
mov
repz
push
test
jae
or
out
cmps
dec
lock
lock
ret
sub
call
adc
mov
jbe
jns
outs
pinsrw
idiv
add
xlat
push
and
test
fdiv
dec
popf
adc
xor
sub
in
add
or
dec
fsubr
movs
jbe
and
mov
xor
cmps
jbe
out
mov
(bad)
xlat
jne
(bad)
or
je
bound
int3
push
fistp
adc
mov
test
xor
and
add
xchg
push
std
stc
mov
push
xor
iret
das
mov
mov
pusha
mov
imul
in
sbb
add
push
sub
push
xchg
mov
jle
outs
inc
jno
or
sub
adc
cmp
and
inc
pop
push
and
xor
or
jecxz
into
inc
push
retf
jns
fwait
and
mov
inc
pop
mov
xchg
mov
(bad)
cmp
adc
fs
and
sub
add
xor
popa
sub
or
cmps
test
push
cmp
clc
push
cs
mov
jl
push
cld
mov
jnp
repz
and
sub
mov
jecxz
and
and
dec
add
mov
clc
test
gs
or
jg
jno
fisttp
push
jmp
and
and
mov
std
jbe
int
pop
xor
pop
inc
add
mov
fiadd
lahf
inc
adc
sub
jbe
dec
sub
jo
in
xchg
movs
clc
bound
es
jo
inc
pop
or
mov
loope
test
std
jg
mov
push
iret
cmp
cld
inc
cmps
shl
and
cli
xchg
sub
mov
add
sahf
xor
or
mov
mov
outs
cdq
add
dec
fwait
vmwrite
jbe
and
dec
dec
iret
push
mov
cwde
push
sbb
xchg
std
retf
mov
cmp
mov
test
or
xchg
clc
xchg
adc
dec
inc
pop
cmc
out
bound
inc
jns
push
out
push
loope
and
xor
adc
xor
inc
fcmovnb
repz
push
xor
add
push
push
(bad)
push
add
and
daa
mov
add
out
test
pop
mov
and
addr16
stos
cmps
push
adc
ins
lods
lods
loope
jns
mov
test
loopne
xchg
lock
or
sub
out
fwait
sar
mov
gs
scas
aad
setp
adc
movs
mov
jno
sub
mov
sub
hlt
imul
fisttp
or
inc
cmps
lods
and
sub
ja
popf
pop
outs
lock
adc
add
cmp
push
les
cmc
mov
add
add
test
es
aam
add
push
sbb
push
jno
jmp
xchg
loopne
loope
ds
call
jmp
outs
sar
adc
mov
xor
out
arpl
loop
xchg
cli
adc
adc
lock
push
xchg
jge
sbb
dec
sub
(bad)
test
out
ret
xchg
iret
and
popf
inc
cld
repnz
imul
sbb
pushf
test
jne
xchg
adc
cmp
ret
sub
xchg
daa
mov
jno
movs
aas
sub
push
mov
mov
push
or
call
mul
mov
fadd
mov
adc
pop
push
mov
pop
dec
out
xor
test
push
jl
add
mov
icebp
sbb
dec
adc
jnp
(bad)
in
cs
push
call
sti
test
outs
inc
dec
retf
aam
mov
push
and
dec
inc
xchg
(bad)
dec
ret
dec
add
mov
loop
sub
int
or
and
or
cmp
cmp
in
loop
push
ins
mov
test
add
jbe
movs
push
jbe
rcl
or
xchg
and
cmp
push
popa
es
dec
cld
or
mov
pop
xchg
push
inc
les
cmp
cli
sub
and
mov
xchg
xor
mov
fwait
daa
dec
dec
jge
and
jle
cmps
mov
mov
push
sbb
mov
jg
lahf
out
fs
pusha
xchg
ret
or
fcmovnu
dec
and
xchg
mov
addr16
sub
inc
inc
repnz
lods
adc
out
pop
cmp
rcl
retf
cwde
push
test
and
ins
and
int
cmc
hlt
shl
aaa
dec
jnp
push
hlt
bound
push
test
jb
inc
xchg
call
loopne
or
cld
or
(bad)
outs
gs
mov
xchg
or
dec
cmps
mov
push
jge
fnstcw
jmp
inc
inc
inc
nop
sbb
xlat
push
js
sbb
mov
or
int
hlt
sub
popf
loop
mov
into
jb
or
mov
pop
inc
iret
sbb
push
jae
test
idiv
js
inc
mov
les
push
mov
out
mov
add
scas
push
push
mov
in
pop
iret
test
push
cmp
adc
clc
and
jge
imul
fidiv
dec
in
mov
jl
(bad)
mov
add
movs
push
mov
xor
jns
inc
mov
in
mov
xchg
mov
push
imul
jecxz
xor
cmp
adc
sub
jmp
jno
repz
(bad)
mov
pop
jp
or
pop
mov
pop
std
out
inc
enter
push
popw
jge
push
cmp
into
sar
dec
shl
and
pop
adc
inc
add
dec
ins
mov
cs
scas
leave
cwde
fistp
pop
mov
push
aas
fsubrp
fadd
or
add
push
sbb
jg
dec
push
dec
inc
sbb
sahf
movs
mov
je
sahf
ins
sbb
mov
gs
and
sbb
iret
das
adc
jns
mov
ja
fld
loope
dec
add
jl
lock
push
mov
pop
xor
loope
pusha
xor
lods
ja
jbe
adc
dec
xchg
ja
shr
mov
cmp
rcr
xor
mov
fistp
sbb
stos
(bad)
mov
dec
ss
loop
out
sbb
div
or
add
mov
lods
xor
into
hlt
jge
cmps
(bad)
(bad)
cld
fnstenv
sbb
adc
sub
jne
std
pop
fisubr
jecxz
dec
(bad)
mov
out
inc
sbb
xchg
xlat
sub
inc
xor
xor
adc
push
xlat
lods
retf
lea
jmp
pop
shr
dec
cmps
cwde
adc
xor
push
sbb
movs
jp
dec
ds
out
push
push
and
pop
neg
inc
push
inc
sbb
sbb
adc
hlt
daa
ja
or
sahf
xchg
mov
and
outs
ja
sub
xor
cmp
or
imul
push
inc
mov
or
mov
mov
dec
inc
jne
jmp
lock
xchg
(bad)
jne
add
mov
xchg
js
fild
push
nop
mov
push
cmp
sub
lds
mov
in
test
push
push
jl
pop
pop
(bad)
add
stos
sbb
rcl
outs
scas
call
lahf
xchg
mov
jge
xchg
scas
lock
shl
cli
pop
stos
or
arpl
cmp
cs
sti
add
test
arpl
mov
cmp
arpl
pop
cld
push
xor
pop
jmp
push
ja
call
jge
(bad)
movs
jmp
inc
aad
(bad)
sub
test
sub
inc
xchg
cs
adc
push
pop
jnp
repz
lods
pushf
push
fs
sbb
pop
jno
sahf
jo
jne
cdq
sti
jnp
jmp
arpl
call
fistp
aas
and
mov
aas
sbb
aad
jae
xchg
mov
mov
stc
sbb
fld
stos
pcmpeqb
(bad)
jle
(bad)
out
pop
add
mov
and
or
mov
rol
test
test
ins
arpl
ror
push
push
cmp
inc
les
or
add
icebp
mov
and
aam
mov
je
inc
sbb
lock
pop
outs
enter
popa
and
addr16
push
add
sbb
loope
pop
scas
clc
jno
dec
xor
jle
xor
pop
push
add
aaa
push
fwait
dec
pusha
rcl
arpl
popa
iret
popa
call
call
pop
push
fadd
mov
push
jmp
pop
loope
jmp
iret
(bad)
pushf
mov
repz
ins
out
pop
fmul
jmp
push
aad
dec
out
adc
int
mov
fst
push
lods
(bad)
cmp
or
xchg
test
dec
ja
adc
aad
iret
xor
add
or
pop
fwait
test
and
push
cdq
stc
xor
jnp
cmps
stos
sub
push
out
das
mov
mov
sbb
test
in
add
pop
out
ins
out
ins
mov
push
rol
in
xor
sub
and
inc
mov
jle
out
or
ds
xchg
and
imul
xchg
or
(bad)
ret
icebp
rcr
add
into
ds
and
ret
push
scas
fbstp
data16
xchg
cmp
fmulp
inc
add
push
ja
and
and
inc
xor
push
jge
sub
addr16
popa
(bad)
lock
std
sbb
mov
jg
dec
adc
sub
add
mov
pop
adc
test
push
repz
mov
cwde
fld
jb
jl
dec
outs
adc
test
out
fwait
inc
and
stos
sahf
xchg
xchg
sub
je
mov
push
pop
cmc
test
jp
push
outs
push
sbb
cs
into
inc
push
test
arpl
fbstp
mov
jp
xor
jae
in
xchg
imul
sbb
fist
push
bound
(bad)
xlat
or
jmp
out
not
(bad)
into
ds
cmps
mov
fisub
add
pop
jne
(bad)
pop
fdiv
mov
(bad)
mul
loop
and
add
jg
and
mov
sub
(bad)
es
sbb
repnz
hlt
jmp
pop
or
test
lods
and
or
mov
stc
sahf
mov
push
sbb
shl
jb
sub
pop
ret
and
jle
pop
mov
cld
call
stos
scas
xchg
loopne
(bad)
scas
add
mov
outs
mov
imul
sub
dec
and
ret
movs
out
fmul
xchg
pushf
(bad)
test
jne
cmc
fistp
fld
cld
shr
jmp
out
repz
and
sbb
movs
stc
cwde
test
inc
nop
cmp
leave
push
in
clc
ins
je
es
dec
std
neg
mov
je
mov
test
xor
xor
sub
xchg
out
enter
les
or
adc
fmul
data16
push
add
push
add
add
push
outs
adc
inc
mov
adc
and
mov
je
fsubr
sub
cmp
mov
push
mov
adc
dec
xchg
sub
ja
jae
sti
push
fnstcw
test
scas
cwde
jmp
add
mov
pop
mov
das
movs
and
js
pushf
fld
repz
cmp
pop
mov
mov
jns
mov
out
cdq
call
and
in
adc
fwait
cdq
dec
or
push
xabort
push
(bad)
mov
mov
nop
test
dec
jl
rol
fldcw
xor
pop
aaa
mov
mov
cmp
push
jmp
clc
dec
loopne
mov
ss
std
push
or
int3
loop
in
call
jb
pop
aas
sbb
pop
jmp
scas
dec
int3
stos
dec
fist
mov
sbb
fisttp
inc
out
mov
enter
popa
arpl
jne
push
inc
cmp
add
fwait
and
xchg
jmp
js
dec
mov
dec
sar
mov
xor
pusha
stc
cmp
jmp
cmp
or
in
jno
scas
ins
call
sahf
jo
sub
push
jae
out
mov
(bad)
std
outs
lahf
addr16
ds
popf
js
popf
test
retf
movs
pop
jno
and
push
outs
push
mov
lds
sub
ret
jb
out
int3
sbb
fmul
add
xchg
push
(bad)
pushf
mov
cmps
daa
pop
out
mov
in
sbb
mov
das
push
mov
call
test
adc
cmp
outs
xor
push
add
popa
cwde
mov
call
iret
jecxz
das
movs
(bad)
lods
int3
lds
jge
sub
sub
cmp
push
sbb
dec
xchg
jns
call
add
les
in
retf
xor
cmp
push
push
stc
mov
mov
add
or
fcmovnbe
clc
inc
mov
pop
ds
int
repz
push
and
aaa
adc
jns
push
int3
in
xchg
fyl2xp1
fs
xor
stos
fistp
xor
movs
lods
fadd
mov
add
adc
sub
dec
adc
ja
loopne
test
mov
test
mov
pop
gs
adc
mov
sub
stos
or
mov
je
push
data16
imul
fstp
in
arpl
lock
stc
mov
mov
add
movs
outs
int
mov
jne
mov
or
xor
add
in
xlat
dec
xchg
loop
xchg
and
xor
aam
movs
cmp
fisttp
pushf
in
cs
test
mov
popf
ret
rep
jne
popf
repz
xor
retf
jo
ins
vmwrite
inc
mov
test
inc
cs
outs
in
xchg
sub
(bad)
in
inc
pop
push
add
push
mov
dec
inc
mov
mov
xor
inc
cmps
mov
enter
scas
xor
cli
(bad)
dec
lea
mov
retf
xabort
loop
pop
pushf
sub
cs
pushf
mov
mov
push
inc
setp
mov
push
xor
jmp
jmp
icebp
push
jb
jne
mov
xor
add
loopne
scas
push
adc
loope
je
cmp
sub
fsub
add
push
adc
or
call
ss
jecxz
rcl
stos
(bad)
dec
pop
sub
int3
fstp
cmp
xchg
or
mov
add
push
lods
xor
xchg
inc
push
enter
add
enter
mov
mov
shl
addr16
sub
pop
clc
push
pop
mov
mov
add
popf
test
mov
push
push
scas
hlt
xchg
sbb
xchg
pop
sbb
mov
mov
xor
inc
lods
jno
test
enter
add
mov
cmp
ja
xchg
call
cmp
xlat
adc
mov
cmps
iret
ror
sbb
jmp
pushf
pop
adc
js
mov
popf
das
xchg
pusha
push
or
in
xor
movs
enter
mov
repz
(bad)
ins
fnstcw
(bad)
mov
adc
jl
sbb
test
dec
repz
cli
inc
xchg
ins
stos
ret
aaa
dec
stc
pop
sub
cmp
call
xlat
ffree
mov
xchg
pop
pop
call
cmp
mov
mov
add
sub
push
out
jae
fwait
outs
mov
jg
or
daa
jns
inc
retf
sbb
mov
and
mul
vunpcklpd
push
or
adc
xor
arpl
xor
jl
xor
mov
add
or
add
jbe
or
add
cmc
dec
aaa
xor
jbe
xor
jnp
fld
push
mov
pop
repnz
jbe
mov
(bad)
xor
leave
scas
inc
stos
xchg
jecxz
out
gs
retf
ins
fadd
xchg
add
pop
jne
mov
fdiv
dec
call
push
mov
jge
xor
sbb
stos
test
mov
or
dec
push
pop
mov
inc
push
push
mov
int3
pop
push
out
cs
fcmovnbe
ja
dec
sbb
jecxz
cmc
cmps
adc
and
or
mov
jp
cli
xchg
pop
push
int
mov
(bad)
fdiv
mov
sar
cmp
push
(bad)
lods
mov
mov
cmp
push
jp
xchg
pop
mov
xchg
shr
pop
lahf
xchg
pop
sbb
pushf
nop
adc
mov
loop
cmp
lods
cld
retf
in
(bad)
shr
sub
inc
daa
repnz
cmc
data16
into
push
pop
shr
cmp
ins
pop
mov
pop
sub
fadd
inc
loopne
aas
xchg
mov
lds
call
xor
iret
popa
push
mov
aam
dec
jecxz
clc
loop
and
in
ror
jmp
mov
jb
add
sub
fwait
loopne
dec
ret
push
inc
pop
sub
push
push
xchg
test
sbb
lahf
ins
xor
push
mov
cmp
ret
mov
mov
inc
imul
stc
les
xlat
imul
sub
push
bound
jmp
ins
loop
pop
sti
rcpps
pop
ficomp
jne
int3
aaa
stc
clc
cmp
fs
sub
call
test
mov
stos
jns
ret
not
imul
std
xchg
in
inc
dec
sahf
and
loopne
or
cs
aam
shr
ins
push
ins
cmp
jo
daa
sbb
ror
ins
jl
paddusw
add
jmp
(bad)
xchg
test
loopne
dec
js
mov
imul
pusha
in
xchg
ja
outs
inc
ins
pop
imul
popf
rol
xchg
in
stc
fldcw
adc
and
test
ret
dec
fmul
dec
jmp
cmp
xchg
jns
popa
push
and
xor
add
sti
enter
pusha
sub
push
xchg
loopne
push
dec
in
mov
xor
adc
dec
scas
and
movs
mov
(bad)
std
jle
lea
jle
jne
push
ss
sub
adc
pop
ss
cmp
sbb
mov
jg
inc
sti
hlt
fnstsw
out
std
int
push
div
(bad)
ror
jl
neg
out
int
mov
scas
addr16
cmp
loope
lock
and
mov
shr
adc
mov
sub
js
dec
(bad)
jo
add
adc
cmp
jecxz
xchg
hlt
adc
fwait
imul
dec
repz
cmps
add
shr
cmp
xchg
inc
jbe
(bad)
dec
lea
popf
xor
sub
jno
push
mov
fistp
movs
jge
pop
lahf
pop
hlt
bound
jp
pop
xchg
int3
mov
inc
ror
test
sub
lods
mov
jge
lods
jbe
out
setb
test
repnz
xor
mov
or
hlt
jo
pop
sbb
jb
test
mov
test
push
pop
icebp
test
jecxz
repnz
pop
(bad)
fdiv
dec
mov
loopne
sbb
mov
daa
sub
jns
cwde
xchg
movlps
jmp
and
inc
sar
sbb
jle
(bad)
jmp
push
retf
sub
test
jg
jg
push
ja
data16
or
adc
cmp
in
es
les
dec
js
cmp
push
cmp
mov
je
xchg
test
mov
lea
call
or
popa
sub
bts
push
into
xchg
or
ror
fnstsw
mov
ins
inc
jno
(bad)
fadd
repnz
popa
adc
gs
fcomp
push
jmp
inc
mov
outs
mov
fcmovu
mov
lahf
fstp
push
pusha
sti
push
popf
bound
pop
jo
hlt
pusha
dec
mov
and
push
lods
and
ss
pop
xor
pop
mov
jnp
(bad)
mov
aaa
int
lahf
mov
pop
ja
cli
or
jno
stos
jmp
or
arpl
push
mov
pop
enter
and
adc
fptan
arpl
loop
dec
or
ror
jg
or
sbb
cmp
push
out
xor
scas
xor
mov
add
stc
inc
shl
lock
xor
push
xchg
and
das
dec
js
sub
dec
jae
aas
xchg
fsubr
dec
mov
push
inc
push
cmc
movs
loope
xchg
xor
dec
mov
ja
and
jge
sahf
rol
ret
popa
jno
mov
adc
popf
movs
(bad)
stc
sahf
mov
(bad)
in
jns
inc
adc
cmps
mov
mov
repnz
cmp
fst
mov
mov
in
xchg
add
test
dec
and
jmp
movs
inc
jae
addr16
jno
loopne
inc
call
push
and
jp
adc
dec
jns
not
pop
pop
pop
and
jle
and
loope
push
dec
push
mov
jle
jg
add
mov
stc
pop
jecxz
xchg
stc
mov
mov
cmp
inc
pop
mov
int3
iret
mov
retf
lahf
xor
xchg
ins
xchg
mov
adc
mov
(bad)
aaa
cmp
xlat
push
movs
fcom
jl
jp
mov
and
(bad)
out
or
je
xor
cmp
dec
loopne
cmp
dec
push
sub
inc
add
fiadd
test
ins
addr16
xor
xor
and
pop
push
cmp
xchg
xchg
ror
cs
pop
rcl
movs
dec
push
mov
ja
mov
ss
cdq
stc
mov
sub
dec
xchg
(bad)
sub
popa
in
mov
inc
inc
cmp
xor
xchg
mov
in
fisubr
push
ss
jns
pop
inc
cmp
sub
jmp
in
je
ss
imul
movs
rcr
lods
js
add
int3
or
jl
cld
stc
imul
sub
in
cwde
xchg
jp
mov
xor
lock
add
mov
hlt
push
ja
jae
maskmovq
not
sub
inc
mov
adc
push
sub
jo
mov
jo
xlat
mov
(bad)
cvtdq2ps
push
out
push
or
jo
cmps
push
lods
into
jae
loope
xlat
jae
cmp
pop
push
mov
ror
daa
(bad)
stos
fs
push
or
xchg
push
adc
pusha
jmp
adc
(bad)
ins
mov
call
mov
pop
add
xchg
jno
mov
cmp
(bad)
mov
test
pop
jle
dec
inc
mov
fstp
ja
pop
sub
ins
ds
cmp
adc
data16
iret
add
jbe
or
ins
sbb
int3
mov
sahf
push
stos
shl
push
jb
cmps
das
repnz
int
shl
cdq
scas
adc
jl
jns
sbb
jmp
loopne
push
icebp
movs
adc
push
jo
add
cmp
and
sub
leave
adc
in
jmp
test
pop
pop
in
mov
add
lea
stos
dec
xchg
push
ret
call
(bad)
fs
xor
add
enter
mov
pop
push
jl
neg
sub
lock
(bad)
in
lea
int
jne
cmp
pop
pop
hlt
push
movs
lock
mov
cmp
cmps
pop
xor
popf
ss
in
and
sbb
or
xchg
or
movs
cwde
mov
rol
xor
cmp
adc
mov
sub
adc
pop
dec
mov
jge
dec
lods
and
into
sub
xchg
in
data16
imul
or
in
mov
cmp
or
cmps
jb
cmp
and
div
hlt
inc
pop
scas
or
dec
sbb
dec
jle
add
pop
sbb
mov
jecxz
ffreep
stos
xor
cmps
jo
mov
dec
repz
fsub
mov
aam
xchg
(bad)
mov
inc
mov
sub
mul
sub
mov
daa
ins
bound
or
sub
push
pushf
mov
push
jno
xchg
xchg
iret
sub
aam
add
retf
xchg
gs
jae
outs
inc
les
(bad)
or
dec
pop
mov
test
cmc
mov
adc
retf
repnz
cmc
mov
or
adc
inc
movs
enter
push
xor
rol
mov
stos
loop
push
and
mov
ss
ins
sti
(bad)
pop
pop
pop
mov
cmp
ficomp
lock
data16
and
lock
add
not
jmp
pop
imul
mov
and
sahf
mov
push
inc
mov
ss
xchg
pop
xlat
scas
jp
push
lea
sub
xchg
adc
and
cs
push
sahf
lock
cmp
pop
mov
data16
or
inc
or
fadd
cmp
add
jb
ins
dec
fcom
iret
and
aaa
and
mov
add
pop
je
shr
and
cmc
push
mov
iret
icebp
das
xchg
mov
test
jo
test
pop
fsubr
inc
and
not
int3
shl
mov
aad
loop
cwde
test
push
cmp
cs
lods
pop
adc
adc
dec
cli
int3
outs
cdq
xor
nop
inc
inc
jl
shl
in
adc
inc
ins
cmp
jmp
(bad)
js
mov
inc
dec
(bad)
push
mov
or
mov
xchg
cwde
inc
fstp
add
aaa
xchg
fdivr
or
jmp
jbe
push
xchg
call
out
xchg
mov
dec
sub
sbb
adc
ret
daa
movs
in
sub
add
adc
mov
add
cmp
callw
add
lahf
cs
movs
stos
dec
push
jmp
mov
nop
dec
mov
inc
cld
mov
xchg
adc
pop
sub
cmp
test
push
mov
xchg
int3
fimul
not
ret
sbb
mov
sbb
mov
xchg
push
cmp
adc
jmp
adc
xor
aad
shl
dec
repnz
jmp
xchg
and
lods
dec
sbb
mov
cmp
add
retf
push
pop
mov
(bad)
ins
push
inc
ror
jbe
dec
and
sbb
xor
js
int3
je
into
push
or
ror
sub
and
cli
adc
jb
stos
gs
dec
xchg
add
jmp
jne
pop
sti
or
jmp
fwait
sub
gs
in
adc
jbe
pushf
ss
add
mov
and
push
push
push
dec
sbb
inc
popa
sahf
fsub
bound
mov
or
sti
or
into
adc
or
shr
push
sub
fisttp
std
mov
mov
test
movs
retf
aam
xchg
jmp
cmp
mov
jb
scas
aad
test
xchg
push
ret
(bad)
data16
inc
xchg
pop
nop
add
test
mov
sub
inc
outs
or
sar
jmp
pop
je
push
std
push
push
outs
pop
mov
mov
sbb
xor
sbb
imul
addr16
leave
push
mov
sbb
push
pop
scas
int
xchg
cli
adc
mov
iret
push
fwait
call
xlat
std
dec
push
test
add
repnz
pop
(bad)
jmp
adc
jmp
dec
jl
push
stos
or
cmp
movs
gs
iret
and
jecxz
cmp
xchg
sbb
push
(bad)
bound
pop
fist
and
pop
loopne
xlat
sahf
lods
xchg
adc
(bad)
add
xor
shl
or
inc
out
bnd
rcl
repnz
loopne
mov
test
ins
adc
pop
sub
ins
fs
popa
test
adc
mov
ds
leave
imul
(bad)
inc
add
aam
cmc
arpl
ret
arpl
cmps
mov
cmp
mov
inc
cdq
jb
stos
sbb
push
fadd
adc
mov
imul
jo
xchg
push
into
(bad)
into
mov
jmp
push
dec
(bad)
xor
call
cmc
cld
lods
adc
repnz
ret
mov
clc
inc
movlps
out
loop
inc
xchg
jns
jle
lea
ins
mov
je
outs
lahf
cs
(bad)
pop
inc
jno
jle
push
mov
pushfw
pop
cmp
jbe
jmp
jbe
sar
fild
(bad)
push
dec
ja
dec
and
mov
add
mov
in
fistp
aad
or
jae
cs
cdq
cmps
cmp
scas
sub
mov
or
mov
cwde
movs
stos
(bad)
inc
xor
retf
xor
cmp
add
pop
xor
aad
push
lahf
cmps
pop
ins
pop
xchg
stos
push
bswap
shr
loopne
jns
retf
pop
mov
xor
sbb
inc
cmps
push
je
mov
std
call
push
cmp
pushf
or
pop
cmp
lds
lahf
mov
es
xor
dec
adc
sbb
mov
dec
cmp
adc
mov
adc
push
shl
pop
mov
mov
rcl
push
mov
daa
in
das
inc
gs
cwde
aad
pushf
jns
(bad)
popa
fs
das
mov
jg
sub
dec
adc
and
sub
cld
mov
adc
push
pop
mov
retf
or
into
sbb
push
call
xchg
cdq
push
jns
outs
dec
ror
push
fbstp
mov
shl
movs
pop
push
pop
dec
mov
ins
aam
inc
cmp
mov
push
bnd
inc
xor
aam
mov
pop
aad
shl
iret
(bad)
mov
jg
btr
repnz
xchg
cmp
fsubr
dec
bswap
(bad)
(bad)
pop
sbb
push
xor
xor
in
ins
push
imul
inc
and
push
(bad)
arpl
movs
dec
push
sbb
or
pop
and
push
fld
mov
add
into
mov
out
push
push
mov
cdq
icebp
xor
(bad)
aad
push
push
jmp
sub
mov
out
dec
or
push
bound
cmc
jmp
neg
dec
sbb
fadd
mov
jnp
xor
and
mov
nop
dec
outs
cmp
push
jmp
inc
dec
add
xor
xor
mov
daa
fcomp
add
shr
mov
test
and
aas
movs
out
pop
into
cmp
fiadd
aam
test
clc
je
jnp
dec
and
xor
cmps
inc
sahf
cmp
shl
dec
loopne
pop
adc
xor
adc
retf
sbb
jge
xor
sbb
ficom
mov
mov
out
pop
in
pushaw
sbb
sti
not
(bad)
aaa
inc
inc
repnz
jns
aaa
fild
icebp
fmul
aad
add
aas
jmp
mov
mov
dec
out
pop
(bad)
cld
jno
into
sbb
ins
retf
sub
sbb
adc
cmp
push
mov
xchg
mov
(bad)
sub
pop
jg
mov
mov
adc
mov
out
mov
pop
cmp
mov
mov
inc
cmp
mov
retf
pop
xchg
outs
pop
mov
mov
test
sbb
dec
xchg
push
sahf
sub
leave
outs
enter
mul
cmp
jbe
sbb
mov
lods
ret
push
jge
rol
jne
xor
pop
hlt
push
data16
fdiv
cmp
xchg
pusha
xlat
mov
jne
mov
ds
fwait
mov
jb
sti
jmp
out
jmp
out
dec
and
in
jno
push
jo
mov
stc
mov
arpl
mov
sbb
lods
fcom
jl
enter
xor
add
outs
lods
adc
sbb
jb
ss
test
xchg
fild
out
loope
imul
stos
ss
dec
aad
cli
sahf
sbb
rcr
stc
int
add
or
lods
fnstcw
xor
xor
sbb
adc
mov
inc
jge
mov
mov
xchg
xor
jge
lea
sub
(bad)
xor
cmp
xor
sub
cli
xchg
xor
dec
bound
dec
ins
test
cmps
and
xchg
test
mov
mov
jbe
or
push
add
jle
jmp
mov
stos
lock
div
push
pusha
sar
fdivr
das
xlat
push
push
cdq
sub
in
imul
je
cmps
ins
mov
fld
push
push
xor
mov
fild
fst
push
ficom
sub
fld
nop
outs
xchg
inc
pop
sub
pop
and
mov
cli
mov
lea
sbb
nop
mov
scas
aas
cmps
aas
and
push
mov
pop
cmp
in
add
ror
js
jno
or
jmp
fist
(bad)
jl
cld
das
scas
int3
mov
cmps
xchg
outs
in
outs
pop
movs
adc
pop
jne
fild
or
sub
(bad)
out
mov
cwde
or
jbe
sub
shr
xor
ror
in
xchg
je
mov
inc
push
mov
cmp
loopne
es
push
mov
iret
jecxz
push
push
mov
(bad)
into
test
out
add
mov
sbb
aaa
dec
rol
sbb
call
and
cmp
jmp
jp
dec
sti
js
mov
mov
(bad)
mov
addr16
add
shl
xchg
jmp
int
inc
push
fmul
jmp
lock
ret
int3
inc
cmp
(bad)
ficom
add
mov
xor
(bad)
pop
ror
jp
out
out
push
push
inc
mov
adc
movs
adc
rcl
push
pop
jecxz
xlat
jmp
cmc
lods
ins
push
push
sbb
aas
add
sub
enter
jmp
push
in
mov
or
dec
pop
imul
dec
mov
pop
and
imul
sub
outs
cwde
aam
mov
out
inc
aam
adc
(bad)
dec
adc
jle
(bad)
mov
xchg
sub
fchs
push
enter
mov
cmp
xor
sbb
pop
jo
and
mov
retf
ds
(bad)
movs
or
ins
sbb
fmulp
lods
imul
pop
scas
or
ret
inc
mov
test
mov
stos
dec
cwde
in
xchg
retf
xor
sbb
sbb
xchg
je
cmp
mov
mov
adc
cmps
fcomip
cli
neg
pop
adc
rol
mov
mov
cmps
jnp
sbb
dec
mov
addr16
push
fcomp
sbb
push
and
mov
inc
xchg
arpl
jbe
movs
xor
jle
stos
ret
xor
cmp
jmp
cmps
and
xor
pop
jnp
ins
mov
addr16
fist
cld
fs
(bad)
sub
pop
mov
add
icebp
not
int3
cmp
pop
fldcw
jne
push
cmps
retf
fist
cmp
mov
jmp
add
xchg
or
aas
call
adc
pop
and
mov
aam
retf
fimul
xor
adc
bound
and
out
add
icebp
repnz
cmp
in
loopne
mov
xlat
jnp
jg
(bad)
pop
nop
popf
mov
ss
and
jmp
test
fwait
push
jmp
add
test
les
es
sbb
fwait
sub
xchg
or
jecxz
xchg
addr16
inc
in
dec
scas
jb
add
sub
test
rcl
in
mov
pop
jl
retf
imul
js
mov
test
call
sub
sbb
mov
cmp
or
mov
and
and
(bad)
fisubr
fs
cmp
(bad)
mov
pop
mov
out
cld
je
add
mov
sbb
pop
popa
movs
data16
mov
gs
icebp
ja
imul
sbb
cld
sahf
pop
mov
(bad)
mov
fldcw
sbb
sbb
add
js
mov
add
or
inc
ret
jecxz
jl
xor
in
test
sub
pop
inc
out
xchg
cs
inc
inc
in
mov
sbb
add
dec
xchg
imul
out
sub
(bad)
dec
mov
mov
jp
(bad)
loope
shr
push
xor
das
sub
mov
and
pop
mov
jle
mov
scas
jecxz
leave
scas
mov
call
test
fild
push
arpl
dec
dec
sub
je
clc
fdivp
pop
jecxz
jl
mov
out
push
stc
dec
scas
jle
mov
ins
fwait
adc
je
jmp
mov
and
dec
and
stc
push
sbb
or
clc
dec
lds
in
mov
adc
cmps
fisttp
ds
in
lds
jbe
fwait
cmp
push
mov
adc
out
or
(bad)
or
jecxz
add
mov
outs
jnp
aas
cwde
and
rol
lock
out
ins
bound
adc
xchg
out
ret
addr16
inc
cld
jge
and
cwde
das
(bad)
pop
shl
dec
mov
xchg
cmps
(bad)
(bad)
bound
mov
jmp
push
inc
popa
enter
ins
mov
adc
mov
add
inc
jno
cmps
mov
ret
dec
push
adc
xchg
add
jecxz
out
mov
or
div
inc
sub
cwde
pop
mov
dec
adc
addr16
fst
push
stc
mov
in
outs
add
rcr
jp
jge
gs
scas
inc
loop
aaa
push
sbb
loope
push
inc
in
or
movs
jp
je
jecxz
sub
mov
aam
jbe
inc
out
add
in
out
fistp
rcr
rcl
pop
adc
cmp
stos
adc
(bad)
sub
test
gs
fldl2e
jb
adc
adc
aad
lahf
loope
dec
cmp
mov
pop
cld
mov
mov
std
scas
ss
int
dec
fadd
fsubr
adc
dec
dec
call
loopne
pop
(bad)
stos
stos
mov
or
leave
pop
out
fsub
dec
loopne
fs
xor
xor
add
inc
jp
and
add
add
hlt
jmp
mov
cli
out
and
dec
mov
cmp
or
sub
cs
(bad)
repz
cmp
ss
mov
push
adc
dec
xor
push
mov
mov
ins
cmp
pop
push
pop
movs
push
leave
mov
and
cmps
adc
push
jnp
test
call
shl
ret
movs
add
xchg
cmp
inc
adc
int
sbb
js
fbstp
repz
int3
test
jecxz
xchg
mov
aas
jnp
sub
jg
mov
aas
add
arpl
loope
xor
sub
in
push
xor
jecxz
sub
out
imul
fs
mov
push
jl
sar
sub
jb
popa
mov
inc
ja
mov
mov
imul
jbe
pop
jb
jp
jno
jge
(bad)
jge
mov
inc
sbb
xor
jmp
stos
in
inc
inc
xor
cmp
icebp
repz
jnp
fld
ror
ja
data16
push
addr16
sbb
mov
pusha
fbld
jle
aad
loop
push
mov
or
dec
js
out
sbb
and
icebp
push
mov
in
lock
mov
mov
shl
adc
or
sbb
idiv
ins
out
push
neg
cmp
pushf
adc
xor
add
dec
ds
jo
out
test
loopne
mov
jmp
jns
adc
inc
scas
mov
jns
es
popf
lock
adc
pop
ds
adc
inc
add
dec
outs
sbb
adc
lahf
or
pop
xchg
and
(bad)
js
xor
inc
stos
inc
mov
pop
fld
nop
mov
mov
retf
and
xor
pminub
sub
push
dec
clc
pop
pop
adc
dec
sar
mov
movs
sbb
out
fistp
(bad)
dec
xchg
xchg
aam
push
scas
das
push
mov
pop
mov
lods
sbb
sub
inc
outs
shl
cld
cmp
mov
mov
inc
pop
mov
adc
cmp
ret
data16
in
cmp
inc
test
call
arpl
mov
mov
fptan
out
add
and
scas
outs
jns
and
sub
aad
lock
inc
pusha
xlat
xor
pop
pop
leave
cmps
jbe
adc
movs
cmp
sub
(bad)
call
and
add
les
cmp
cld
xor
rol
xchg
sbb
cmps
or
sar
inc
mov
fisub
test
inc
dec
push
cmc
aas
pop
daa
lock
jmp
pop
push
mov
pop
ret
cdq
test
jl
mov
dec
dec
enter
and
mov
inc
pop
mov
xchg
scas
sahf
int
ja
js
cmp
jle
out
out
mov
js
jno
pop
mov
inc
ds
jmp
or
mov
inc
pop
dec
push
gs
push
mov
cmp
cmp
fisttp
mov
repz
loopne
test
jmp
pop
adc
xor
jge
cmp
add
or
out
mov
and
dec
add
lds
lods
call
add
ss
and
stos
mov
enter
dec
(bad)
jl
jns
ja
pushf
push
loop
dec
mov
(bad)
je
loop
jns
pop
and
mov
push
hlt
xchg
sbb
jno
mov
or
cli
stos
sub
outs
add
out
push
sub
lods
retf
mov
movs
add
mov
push
xchg
push
jg
scas
push
and
dec
dec
sub
adc
xor
out
dec
xchg
mov
push
pop
dec
pop
pop
cdq
and
sub
int
xor
outs
(bad)
mov
les
or
sbb
ret
popa
in
mov
mov
jmp
sub
test
nop
pop
jnp
mov
mov
mov
cmp
jp
ins
mov
in
sbb
and
enter
cmp
retf
out
jl
push
call
mov
adc
aad
daa
icebp
and
xchg
jmp
xchg
xor
out
dec
dec
repnz
int
xchg
pop
aam
push
into
inc
mov
pop
mov
push
cwde
xchg
inc
imul
rol
add
xor
or
sbb
int3
xor
and
pop
mov
xchg
add
pusha
(bad)
test
rcl
dec
loope
or
mov
cmc
ja
outs
movzx
cmps
(bad)
mov
xchg
jl
add
sbb
mov
add
aad
mov
test
xor
int3
sub
jo
retf
mov
xchg
dec
sub
mov
push
adc
shr
push
pop
mov
cmp
cs
inc
rcl
xchg
rcl
add
mov
test
cwde
mov
cmps
jnp
adc
xchg
jl
push
inc
icebp
xor
jno
jmp
addr16
sbb
sbb
jmp
test
add
sbb
ret
outs
xchg
pavgw
xchg
cmp
inc
push
repz
out
les
test
push
lea
adc
cmps
and
sbb
addr16
shl
mov
mov
push
jmp
and
jmp
in
lea
pop
sbb
jb
stos
std
inc
movs
je
ss
aas
or
add
cld
cmp
sub
push
ja
inc
mov
aam
pop
es
lods
in
aas
push
dec
cmps
cli
dec
hlt
sub
lea
retf
movs
das
jo
mov
xor
test
div
test
sub
stos
sbb
dec
mov
dec
xchg
adc
outs
dec
int
jns
mov
xchg
inc
mov
shl
ror
and
sbb
jmp
bound
push
dec
sbb
call
mov
push
adc
dec
sub
or
jmp
push
mov
imul
scas
js
stc
jg
adc
(bad)
not
test
rol
shl
(bad)
cmp
cs
call
and
mov
push
retf
or
xor
in
cmp
in
(bad)
inc
dec
test
js
and
sbb
arpl
or
hlt
loop
repz
stc
arpl
xchg
popf
stos
and
pop
out
(bad)
push
jecxz
mov
xlat
jmp
aaa
mov
and
mov
add
fistp
lods
mov
setbe
stos
or
je
pop
cwde
(bad)
dec
xchg
xor
cld
and
mov
push
jmp
pop
ja
adc
and
pushf
or
js
loopne
push
jae
addr16
retf
test
mov
movs
(bad)
and
adc
or
push
mov
dec
lods
pushf
pushf
stos
adc
jb
(bad)
lock
fsub
retf
add
repnz
mov
or
push
bound
or
fs
aad
into
aas
test
jne
pop
ret
and
loopne
push
pusha
push
dec
adc
sbb
add
xchg
sbb
fwait
mov
sub
into
jmp
push
dec
lea
popa
cmp
mov
add
mov
pop
cmp
fldcw
pop
les
xchg
(bad)
in
and
psrlw
jae
pop
xor
jecxz
out
nop
xor
jne
or
(bad)
in
std
push
iret
popa
dec
cmp
cs
outs
sbb
sbb
div
push
pop
xchg
sub
ret
repnz
je
xchg
pop
jo
data16
or
xchg
and
ret
(bad)
or
mov
xchg
cdq
jg
mov
xor
psrad
inc
add
pop
shl
and
inc
and
pop
aad
lea
(bad)
scas
movs
xchg
outs
aad
aam
push
test
cmps
mov
xchg
dec
dec
in
mov
movs
loopne
add
ret
inc
dec
pop
sti
inc
sub
or
std
xchg
enter
pop
pop
adc
lds
(bad)
xchg
jmp
adc
mov
adc
scas
inc
popf
dec
xchg
aaa
add
dec
pop
into
iret
jg
stos
jbe
cs
add
pop
outs
push
xchg
inc
mov
or
mov
xor
push
adc
retf
pop
les
js
fiadd
xor
jecxz
and
sahf
shr
dec
or
jb
dec
inc
jae
sar
pop
mov
test
shl
and
xor
jbe
test
jo
xchg
out
in
out
repnz
sub
lods
in
imul
xchg
inc
adc
(bad)
mov
cs
jmp
add
in
shr
adc
enter
adc
into
ss
add
cmc
inc
adc
push
sbb
sbb
fwait
xor
ins
adc
lods
ds
dec
fadd
test
out
cwde
jmp
sub
inc
aad
push
jnp
add
add
xchg
push
mov
push
fst
std
out
mov
repz
scas
repnz
xor
push
push
add
sar
retf
sub
xor
cwde
addr16
inc
daa
bound
pop
jo
(bad)
mov
xlat
or
mov
sub
cli
add
das
popa
sub
push
cs
call
mov
cmp
dec
mov
popa
popa
mov
test
or
ficom
mov
mov
aad
mov
push
jbe
test
xchg
popf
int
push
cmps
push
xchg
(bad)
mov
jns
and
lahf
nop
out
cmp
ficomp
outs
xchg
mov
cmp
jl
add
dec
scas
xor
retf
push
add
inc
mov
xchg
sar
jmp
pop
xor
loopne
imul
std
cwde
int
shl
sbb
mov
dec
xchg
xchg
(bad)
(bad)
push
movs
mov
mov
ror
das
sbb
pop
mov
mov
xor
cmc
xor
test
push
jnp
nop
xor
push
or
pop
lahf
push
stc
xor
scas
je
pop
clc
ja
stos
lods
sub
stos
hlt
fnstsw
(bad)
jmp
fldpi
test
(bad)
push
repnz
stc
dec
test
pushf
sub
outs
enter
pop
xor
int
aad
xlat
and
add
adc
mov
and
inc
fmul
or
dec
xor
hlt
stos
addr16
lahf
pushf
adc
ja
je
pushf
fimul
les
jmp
test
nop
or
pop
sub
adc
repz
fnstsw
mov
fmul
stos
ss
jmp
test
jmp
js
push
cmp
inc
aam
inc
add
add
xor
es
sbb
cli
mov
xor
mov
aas
sub
or
arpl
pop
nop
addr16
cmp
aad
icebp
int3
call
mov
xchg
ins
pop
inc
enter
jbe
push
test
out
retf
add
scas
imul
arpl
xchg
std
push
iret
jecxz
dec
aam
sbb
mov
int
loopne
and
ficomp
ss
gs
sub
mov
fwait
push
pusha
adc
in
and
inc
xor
lods
push
sbb
cli
cmp
mov
adc
mov
fcomp
jnp
icebp
inc
mov
push
mov
adc
inc
xor
sbb
and
jge
call
mov
xchg
inc
(bad)
aaa
jae
pop
sbb
cmp
mov
imul
cmp
pop
push
push
ret
popa
add
or
jecxz
cmc
iret
call
adc
jne
sar
fwait
mov
add
lods
(bad)
add
or
iret
push
or
nop
mov
lds
adc
mov
cwde
(bad)
push
idiv
jae
aad
es
dec
je
jmp
(bad)
ret
adc
rol
mov
or
fwait
rcr
lods
jo
or
sub
lods
jecxz
or
cs
mov
push
test
mov
scas
cmp
dec
jmp
pop
dec
imul
(bad)
movs
in
stos
mov
test
cmp
cdq
(bad)
cmp
cmp
(bad)
leave
sbb
lods
sar
mov
fs
xchg
call
iret
jge
call
add
out
out
inc
inc
mov
fs
int
cli
pushf
gs
jle
mov
imul
mov
fiadd
push
jb
and
and
outs
mov
js
outs
sub
inc
xchg
sbb
in
pop
or
fcomp
test
cmps
adc
call
rcr
mov
gs
and
mov
jns
and
dec
cmps
nop
inc
mov
push
jae
xchg
inc
mov
pushf
xchg
jg
shl
jne
fsub
pop
outs
xor
mov
aaa
xchg
adc
xor
out
mov
lods
fidivr
or
cmp
jmp
push
fist
scas
mov
cmp
cmp
or
mov
inc
pusha
shr
ret
in
dec
jo
sbb
sub
sub
inc
popa
aam
mov
jmp
jmp
cmp
sub
ds
stc
stc
pop
mov
out
sbb
mov
nop
out
imul
adc
mov
shl
lea
pop
shr
mov
jp
cmc
jno
xor
mov
out
jo
retf
cmps
pop
lods
ins
and
and
bound
std
clc
lods
je
iret
test
nop
out
addr16
into
pop
jo
dec
sub
pop
mov
rcl
inc
gs
fcmovu
(bad)
mov
fs
xor
or
adc
int3
je
(bad)
inc
push
cmp
xchg
xchg
btr
pop
(bad)
cmp
div
xchg
(bad)
sub
adc
pusha
(bad)
out
and
ins
shl
push
imul
aad
jp
fisub
mov
jg
pop
rcl
out
ror
cmp
sbb
cmps
push
xchg
rcl
pminub
in
add
mov
xor
ret
out
div
(bad)
int
inc
daa
xor
call
add
mov
jge
inc
aam
push
mov
leave
ins
int3
in
out
cmps
test
mov
mov
cmp
push
inc
js
and
clc
pop
dec
or
fistp
adc
mov
inc
jns
cmc
mov
push
cs
jno
mov
mov
cmp
popf
dec
pop
popf
pop
adc
or
push
les
(bad)
jg
or
inc
rol
mov
xchg
adc
cmp
adc
pop
pop
rol
stos
ret
jge
data16
add
cmp
call
mov
std
sar
shr
push
loop
push
xchg
stos
lahf
in
outs
dec
fst
push
aad
or
pop
je
shr
dec
push
clc
sub
js
mov
popa
add
mov
imul
jne
adc
imul
or
int3
sar
inc
dec
retf
adc
adc
add
(bad)
jge
in
or
in
shl
js
les
(bad)
popf
addr16
push
pop
xchg
mov
das
pop
jge
push
jl
sub
xor
pop
and
add
jl
cmc
sub
cmp
iret
dec
out
sbb
ins
add
stos
add
mov
pop
adc
sbb
mov
test
mov
cmp
xor
cmp
jg
in
in
mov
(bad)
xchg
pop
stc
test
popa
js
sbb
mov
sbb
or
sub
call
movs
std
jae
arpl
sub
in
pop
inc
nop
cwde
repnz
cmps
pop
outs
push
pop
jmp
inc
xchg
sahf
mov
mov
xor
retf
xor
cmp
(bad)
jge
fs
dec
retf
xor
stos
and
jmp
test
add
mov
or
or
xchg
mov
ins
inc
ret
data16
stos
and
inc
mov
ror
jo
jle
aaa
pop
daa
daa
daa
adc
retf
fisubr
jne
out
das
cwde
adc
dec
sbb
add
mov
mov
outs
les
scas
jb
enter
pop
shl
mov
stos
cmc
mov
ret
(bad)
xor
rep
lea
push
neg
add
icebp
adc
test
sub
jne
gs
jl
add
adc
add
xor
je
xchg
in
push
inc
shr
enter
mov
push
stc
mov
fs
xchg
adc
popa
add
aaa
mov
push
xchg
je
add
ret
test
dec
jl
(bad)
out
dec
add
push
pop
jp
pop
adc
rcl
mov
push
ds
outs
js
out
push
sub
cli
daa
ins
lahf
out
and
gs
pusha
or
pop
jmp
cmps
popf
mov
int3
inc
adc
jecxz
test
mul
mov
inc
rol
push
movs
int
mov
mov
loop
retf
out
pop
pop
xor
push
mov
(bad)
popf
pop
call
leave
sub
jno
jnp
pop
pop
sub
or
and
addr16
pusha
adc
or
inc
jg
out
xor
inc
jno
and
mov
popa
dec
dec
adc
sub
stos
std
sub
mov
sbb
cmp
pop
bound
sahf
xchg
scas
loop
or
nop
jmp
mov
imul
cli
pop
and
in
jbe
and
mov
sar
std
stc
mov
mov
ja
xchg
xchg
push
das
pop
in
hlt
cli
test
sub
push
test
in
hlt
ror
dec
lea
mov
or
aaa
mov
sbb
mov
add
clc
test
(bad)
lods
and
mov
fbld
fist
or
xor
cli
xchg
or
xor
pop
je
ret
add
(bad)
cmp
outs
add
add
mov
ds
fist
retf
fcom
ins
retf
adc
jge
push
sti
mov
pushf
jbe
out
fisttp
mov
mov
movs
and
cmp
outs
retf
mov
out
idiv
inc
(bad)
out
mov
jns
jns
mov
mov
sahf
in
mov
and
jmp
mov
jb
stos
mov
xchg
mov
fs
inc
into
jae
sbb
das
mov
dec
dec
out
jge
lds
loope
fisub
jecxz
(bad)
sub
rcr
xchg
xchg
sub
jmp
outs
ins
jp
jmp
push
ins
mul
adc
(bad)
pop
test
push
push
ins
sbb
out
mov
adc
xlat
pop
pop
sub
jecxz
and
ret
push
ins
or
jg
adc
push
iret
imul
ror
leave
je
ins
and
mov
mov
retf
in
sbb
add
adc
xor
sub
call
jno
ret
xor
and
mov
mov
stos
xchg
in
loope
sbb
(bad)
js
in
xor
adc
xchg
sbb
leave
sub
in
cmps
enter
mov
and
leave
add
popf
les
jbe
sub
ja
(bad)
dec
mov
xor
xchg
mov
cmc
call
jno
add
addr16
cmps
ja
shl
adc
(bad)
mov
sub
jno
add
sub
test
neg
mov
jmp
cmp
push
aam
dec
cli
mov
inc
popf
add
and
js
aad
cmp
mov
pop
std
sti
pop
loope
mov
xor
pop
add
rcl
shr
add
call
fidivr
(bad)
lea
js
test
lods
addr16
(bad)
sti
dec
mov
mov
and
mov
add
xor
sbb
xchg
adc
and
in
ss
aam
bound
push
xor
sub
push
add
dec
pushf
fldcw
pop
lahf
pop
pop
mov
retf
cwde
jo
ret
jecxz
or
(bad)
in
neg
xchg
mov
and
push
add
push
(bad)
mov
inc
ss
inc
mov
jno
xchg
es
call
sub
cmp
imul
mov
xchg
loop
aad
push
sbb
retf
add
dec
hlt
(bad)
push
sbb
pop
daa
add
pop
pop
or
outs
pop
inc
pop
nop
(bad)
dec
adc
les
popf
xor
mov
out
mov
call
and
mov
xchg
(bad)
in
mov
cli
cmps
retf
lock
movs
mov
jle
push
dec
int3
inc
inc
mov
mov
dec
aad
test
sub
pusha
loop
xchg
bound
sbb
cs
jp
imul
dec
jno
jae
dec
xor
mov
sub
loopne
cmps
in
test
mov
test
push
loope
fist
add
xor
cwde
jmp
mov
iret
into
ret
and
(bad)
(bad)
in
fnsave
out
pushf
xlat
xor
outs
add
fisub
sub
mov
cmp
in
fidivr
xchg
or
or
mov
fistp
jno
inc
cmp
pop
ret
sti
pop
inc
sub
inc
(bad)
xlat
push
stc
or
popa
mov
clc
out
xchg
or
jae
cmp
(bad)
fimul
je
in
sar
xchg
jmp
adc
retf
ins
dec
ja
leave
cmp
mov
adc
test
mov
add
addr16
ret
nop
mov
xor
and
xchg
mov
push
test
rcr
dec
mov
cdq
sbb
lods
iret
dec
test
iret
jno
scas
pusha
inc
mov
and
call
jl
inc
sahf
lahf
shr
test
iret
daa
js
mov
inc
(bad)
adc
jo
mov
and
xchg
aas
scas
call
cs
scas
and
repnz
retf
add
scas
stc
jecxz
adc
popa
sub
es
inc
mov
push
movs
inc
mov
ja
mov
dec
(bad)
mov
or
pop
clc
mov
aas
fimul
sbb
push
cli
xchg
mov
push
mov
or
sub
sbb
cmp
jne
dec
xor
mov
push
and
cmovnp
stos
xchg
(bad)
nop
jne
push
in
xchg
iret
ins
push
mov
sti
mov
cmp
js
fisubr
xor
out
pusha
jnp
and
pop
ja
das
mov
inc
outs
call
adc
cmp
test
mov
shr
lods
cmp
sar
cld
fucom
pop
dec
jmp
shl
adc
mov
cld
add
ror
scas
inc
push
imul
add
fst
inc
adc
jne
adc
xchg
inc
mov
mov
pop
xchg
ror
icebp
lea
mov
and
and
int3
cmp
add
pop
aas
cld
mov
adc
jb
sahf
dec
push
ds
imul
icebp
out
cmps
jae
mov
popf
sub
dec
pusha
fimul
mov
add
jae
mov
jne
imul
gs
adc
inc
push
sub
xchg
inc
xlat
inc
push
push
push
daa
cmp
sbb
mov
cmps
xchg
jmp
loopne
movs
test
or
neg
iret
mul
pop
sti
xchg
scas
dec
loopne
mov
aad
cmps
and
mov
mov
push
dec
test
outs
psubusb
adc
outs
adc
out
xchg
das
fdiv
dec
fbld
(bad)
push
xor
aad
xor
push
fs
inc
loop
xor
jmp
(bad)
sub
retf
cmp
lock
push
add
into
lea
shr
sar
and
mov
jnp
sbb
mov
(bad)
pop
dec
movs
jle
push
les
repz
retf
ja
jl
inc
je
dec
leave
in
cmp
jnp
mov
sbb
js
jae
(bad)
push
sub
lods
in
mov
mov
push
inc
mov
xchg
ret
or
call
push
jmp
icebp
ins
into
or
pop
leave
pop
out
lea
push
shl
jne
inc
cmp
jno
pop
in
jecxz
mov
fstp
sbb
mov
hlt
inc
test
movs
jnp
dec
popf
ins
lds
lahf
loop
inc
inc
adc
mov
popf
push
addr16
retf
jl
pop
loope
jbe
mov
retf
push
sub
xor
test
das
jo
out
mov
inc
js
mov
and
out
xor
pop
out
movs
ja
out
jbe
jge
fwait
pop
rcr
ret
add
jge
xor
dec
push
xchg
jmp
dec
cld
push
pop
xchg
xchg
inc
in
push
inc
push
jg
test
test
addr16
jmp
jmp
stc
js
aas
push
out
data16
rol
push
xchg
fld
push
pusha
pop
mov
or
retf
sbb
push
into
repnz
in
jge
cmp
xchg
xchg
ins
pusha
pop
test
out
pop
outs
push
ret
cmp
outs
cmps
psrlq
push
dec
in
fisub
mov
xchg
add
cmc
enter
mov
xor
movs
dec
mov
xor
xor
jl
sbb
dec
mov
stc
pop
repz
icebp
xchg
mov
or
sahf
pop
inc
out
(bad)
sub
push
das
add
fbld
xchg
imul
jne
sub
inc
mov
push
stos
push
retf
add
lea
(bad)
pop
int
retf
pop
mov
out
sub
adc
push
mov
retf
sbb
(bad)
in
jle
add
and
inc
idiv
mov
add
js
push
mov
bound
xor
and
adc
adc
fs
push
mov
repz
xchg
xchg
mov
mov
out
sbb
lods
aam
pusha
push
adc
js
imul
pop
and
mov
sar
inc
or
mov
aaa
cmc
clc
ds
dec
in
inc
ficom
sbb
jo
call
dec
or
xor
test
adc
aaa
lds
in
int3
fs
inc
xor
lds
aad
arpl
jecxz
jmp
adc
lods
jl
mov
repz
fstp
shl
mov
loopne
pop
outs
jbe
in
fdivr
aas
mov
pop
enter
aam
push
or
push
or
cmp
mov
sbb
mov
cmc
push
xor
mov
in
sbb
xor
sub
xchg
fnsave
aas
shl
adc
pop
jge
cwde
test
cmp
shr
and
xchg
loopne
push
mov
jmp
in
fwait
ss
(bad)
(bad)
enter
mov
out
repz
fisubr
push
imul
xchg
dec
jbe
push
inc
add
(bad)
arpl
jg
fistp
gs
imul
inc
jge
leave
lahf
(bad)
fwait
mov
mov
sub
dec
xor
lods
outs
push
aad
mov
daa
adc
jns
ret
inc
cmp
pop
scas
jne
push
mov
jl
push
xchg
push
adc
popf
or
adc
clc
mov
mov
mov
push
shl
or
test
inc
ins
bound
fmul
inc
(bad)
into
xlat
rcl
xor
daa
adc
add
lahf
cmps
mov
call
xor
fisttp
dec
sub
jge
push
adc
dec
push
sub
jb
lods
stos
push
into
popf
xor
retf
sub
shl
cmps
ins
aaa
imul
ss
jno
xor
adc
cwde
stc
ja
pop
push
retf
adc
into
cmp
sub
and
popf
push
push
mov
dec
es
clc
aam
loop
sahf
jl
(bad)
adc
icebp
js
popf
mov
xor
pushf
inc
xchg
ss
xchg
push
popa
std
stos
sti
mov
bound
inc
jo
nop
mov
fadd
cli
in
jo
xchg
pop
loopne
test
(bad)
cmc
scas
cs
add
(bad)
jmp
mov
xchg
add
add
lahf
sub
sub
retf
rol
adc
fmul
shl
sub
inc
adc
ret
xchg
pop
dec
paddq
sub
jl
sbb
inc
sub
inc
daa
jl
loope
xchg
pop
mov
(bad)
ja
pop
jno
nop
clc
sub
add
scas
jmp
or
in
das
inc
adc
enter
inc
sahf
push
in
sub
push
jae
mov
fwait
sbb
mov
sar
pop
call
mov
retf
jp
je
add
push
and
ret
adc
enter
ss
call
jl
jl
inc
jecxz
and
and
aaa
sub
stc
inc
(bad)
stos
mov
int3
or
clc
(bad)
(bad)
lea
pop
jmp
mov
add
adc
inc
adc
inc
or
mov
stos
sub
sbb
sbb
adc
imul
(bad)
jle
nop
sub
cdq
pop
add
lods
ds
add
or
push
inc
pusha
repnz
into
fstp
jle
and
dec
cmps
pop
daa
hlt
out
retf
push
aaa
pop
fstp
scas
mov
sbb
mov
xchg
mov
iret
fld
push
or
test
cmp
(bad)
pop
dec
jns
retf
arpl
daa
pop
arpl
jp
mov
mov
lods
(bad)
or
inc
iret
lods
outs
dec
popa
ficom
mov
sub
pop
push
xchg
(bad)
mov
leave
(bad)
or
outs
xlat
enter
(bad)
xchg
mov
shr
adc
aad
arpl
xor
pop
push
mov
cmp
mov
mov
(bad)
cmp
inc
inc
(bad)
cmp
mov
aad
clc
sbb
cmp
xor
push
div
loope
into
jae
sub
lods
xlat
mov
ror
jne
fxch
pop
jmp
das
and
dec
pop
pop
daa
ret
stc
pop
dec
mov
cmp
cmps
sub
adc
or
scas
out
retf
in
repnz
icebp
sahf
iret
test
movs
cmp
jno
sub
mov
fs
push
pop
dec
mov
xchg
popf
sub
loop
retf
push
cmps
fadd
xchg
hlt
jns
inc
pusha
stc
jnp
sub
mov
mov
and
out
leave
or
ins
dec
xchg
iret
inc
adc
cmp
lds
mov
dec
stc
cwde
sbb
stos
xchg
mov
mov
add
outs
jbe
pop
imul
cmc
popa
jno
lock
ins
in
icebp
addr16
sbb
lods
mov
rol
movs
and
into
and
dec
test
mov
in
mov
sub
loopne
dec
stos
arpl
hlt
out
nop
or
xlat
fist
mov
inc
inc
or
xchg
pop
aad
and
mov
fneni(8087
mov
xchg
lods
aas
retf
rcr
cmp
xchg
repz
(bad)
repz
scas
lods
sub
or
inc
aam
pusha
(bad)
cmp
fisttp
push
push
pusha
sbb
ins
sub
adc
shl
test
les
es
std
adc
movs
inc
push
adc
out
ja
dec
jb
or
stc
mov
sbb
xchg
inc
push
ja
rcl
xor
pop
cs
cmps
mov
push
ins
or
dec
mov
jmp
retf
push
adc
test
sbb
fist
ja
xchg
popa
mov
ja
sub
adc
mov
inc
ss
test
(bad)
aam
sahf
test
loop
jb
or
sti
push
ss
hlt
jne
jnp
sub
dec
jnp
cld
cdq
xchg
repnz
sbb
fisub
push
mov
das
add
add
sub
(bad)
js
retf
mov
adc
arpl
push
or
test
stos
mov
and
scas
inc
cmps
shr
xor
inc
arpl
outs
ins
inc
pop
push
fcmovu
mov
mov
mov
cmps
mov
mov
aad
add
mov
outs
fnstcw
or
pusha
xlat
cmps
mov
jmp
(bad)
mov
(bad)
adc
mov
dec
shl
iret
sbb
mov
mov
cmp
adc
imul
sbb
popa
xchg
out
int
cmc
add
data16
clc
inc
shr
not
das
std
and
aaa
xchg
sti
dec
aas
retf
pop
mov
out
daa
in
pop
adc
inc
retf
hlt
push
jbe
repnz
popa
jnp
icebp
ror
cmp
sahf
add
jmp
adc
ret
loopne
fld
repz
mov
push
and
pop
xor
mov
pop
bound
xlat
cmc
mov
push
xor
fldcw
cli
in
xor
jb
push
sahf
mov
outs
mov
pop
pop
rol
das
xchg
imul
popf
iret
push
sbb
loopne
popa
mov
push
mov
or
sub
and
int
bound
div
and
retf
add
push
popa
in
imul
add
push
mov
add
mov
pop
int3
xor
out
aad
mov
jne
shr
stos
stos
test
rcr
cwde
lods
ror
repnz
or
push
lds
outs
mov
push
inc
loope
call
call
pop
push
fwait
shl
dec
sbb
jbe
outs
adc
loope
mov
iret
in
pop
call
frstor
mov
mov
(bad)
sbb
iret
dec
fadd
add
push
inc
adc
cs
out
test
les
adc
xor
sbb
pop
pusha
lods
int
aad
or
and
push
and
jne
sub
lods
jmp
in
adc
test
nop
dec
cmp
fbstp
xlat
mov
clc
(bad)
xor
sub
mov
lods
xor
or
fcomip
lods
push
xor
inc
(bad)
call
mov
cmp
jmp
sti
adc
lods
(bad)
out
sbb
pop
pop
movs
jb
mov
sub
js
ret
pop
iret
enter
lods
cdq
loop
inc
cdq
add
and
je
icebp
ror
inc
add
inc
inc
xchg
mov
fild
dec
xchg
jne
push
repnz
inc
adc
fdivr
pusha
test
dec
xor
test
dec
add
mov
mov
pusha
test
mov
xlat
push
sub
and
je
or
stc
cmp
inc
je
xchg
and
inc
jl
and
aas
mov
ret
mov
cmp
popa
call
cld
and
ret
test
lea
mov
in
cmp
xchg
movs
cld
jns
xchg
pause
stc
push
sub
jno
fisttp
push
jnp
add
mov
mov
jmp
aas
movs
loop
cld
sub
or
aam
xchg
add
add
mov
mov
jmp
sbb
out
aas
cmc
dec
enter
and
int
in
pop
cmps
mov
mov
cmps
paddsb
retf
ss
(bad)
mov
sub
pop
xchg
push
inc
jnp
xor
mov
pop
hlt
inc
mov
dec
call
stos
loopne
or
ss
push
or
daa
xchg
rcl
ins
nop
jl
sahf
jmp
mov
inc
mov
repz
xor
popa
fisub
and
dec
cs
(bad)
ret
stos
jne
shl
dec
leave
xor
jp
sbb
adc
jo
cmp
scas
mov
add
mov
fstp
jns
pushf
mov
aam
call
or
test
mov
std
push
retf
movs
movs
push
int
cwde
addr16
xchg
outs
jne
cwde
push
jbe
fs
(bad)
mov
ret
push
jae
xchg
out
cld
and
data16
movs
fidiv
dec
add
repz
jnp
mov
nop
addr16
jns
cmp
pop
mov
xlat
mov
mov
mov
repnz
jo
sar
shl
xchg
test
imul
int
int3
dec
fist
scas
cmc
aad
push
jg
das
xor
fs
data16
outs
fs
(bad)
sbb
mov
je
mov
stos
mov
inc
mov
dec
push
sbb
ror
mov
push
popw
mov
jl
outs
dec
jg
mov
add
and
push
mov
pusha
xchg
add
aam
fbld
sbb
pop
popa
cld
xor
sbb
cdq
out
aam
outs
aas
xchg
outs
push
jno
add
pop
adc
test
test
int
and
ss
pop
int3
adc
add
shr
cmc
scas
sar
mov
jge
lock
ret
dec
dec
sub
not
or
in
inc
fistp
add
(bad)
jns
jg
pop
inc
nop
ror
rcl
mov
and
lahf
push
pop
aam
mov
mov
(bad)
dec
jg
jge
rol
adc
mov
adc
dec
jmp
ret
sahf
cdq
xor
or
loop
hlt
dec
imul
and
or
daa
das
xor
push
xchg
movs
mov
fstp
cli
out
pop
out
fs
test
outs
and
in
cmp
popf
dec
pushf
mov
pop
sbb
push
or
ss
adc
jnp
mov
sahf
sub
into
das
push
arpl
daa
mov
push
ss
xchg
sub
stc
cwde
in
and
push
jne
test
add
jl
jnp
and
inc
int
scas
jae
fidiv
mov
retf
or
sub
add
inc
sub
ja
fs
jo
nop
gs
mov
push
mov
(bad)
arpl
cmp
aaa
mov
sti
xchg
lock
iret
dec
hlt
jae
lds
fs
adc
rcl
sub
hlt
xchg
rcl
pop
mov
das
(bad)
cmp
jge
mov
pop
ds
std
cmp
xchg
add
movs
push
inc
xchg
ret
rcl
add
cs
mov
sub
jl
adc
les
xchg
clc
dec
push
shl
push
out
push
mov
adc
das
xchg
aad
pop
mov
and
jge
cmp
or
xor
mov
xor
scas
adc
cwde
mov
mov
sub
push
push
mov
inc
ffreep
xchg
loop
or
(bad)
sub
cmp
sbb
sar
push
mov
dec
mov
icebp
and
adc
push
inc
push
jle
loop
ror
sti
mov
xchg
cmp
add
inc
adc
aad
pop
mov
bound
xor
sahf
add
in
xor
jmp
cmc
adc
push
adc
ja
jns
cmps
stos
dec
adc
dec
aaa
lock
cmp
jns
sub
push
or
cmp
push
mov
fiadd
fild
in
retf
fldenv
sbb
lods
stos
xchg
mov
sbb
fdiv
cmp
or
call
xlat
outs
mov
xor
push
cmps
in
dec
stos
xor
or
mov
popa
pop
and
pop
cld
popf
fcom
xor
cwde
fnstenv
mov
mov
setp
fsubr
mov
cmp
ins
ror
dec
cmp
mov
mov
retf
into
jp
frstor
mov
push
(bad)
movs
punpcklwd
ret
das
xor
shr
mov
jl
clc
add
dec
pushf
repz
xlat
stos
push
into
in
xchg
sub
hlt
not
jns
std
push
mov
out
dec
call
call
repz
add
fnstenv
mov
jmp
clc
call
ins
cmc
mov
mov
cmps
adc
daa
dec
push
mov
les
pop
lea
cmp
aam
sbb
mov
jae
std
pop
mov
push
jo
xor
sbb
loopne
and
out
lea
jae
jecxz
mov
dec
ds
adc
sbb
push
enter
mov
pop
pop
adc
lods
dec
fild
scas
jae
mov
xchg
sbb
add
(bad)
and
es
pop
stos
sahf
je
mov
(bad)
jo
mov
push
int
xor
cs
mov
sub
xchg
and
inc
push
mov
push
sbb
loope
fmul
mov
test
fidivr
pop
sbb
sti
jl
sbb
pop
xor
shl
pop
ficomp
pop
mov
push
adc
xlat
mov
xlat
xor
mov
or
add
push
inc
cld
xor
mov
fmul
push
test
retf
loop
out
mov
adc
dec
jle
fadd
jo
pop
push
loopne
es
(bad)
aaa
add
add
enter
mov
outs
jp
hlt
dec
and
pop
into
test
fs
add
not
push
lods
out
scas
dec
aad
mov
adc
jno
add
pop
sub
nop
dec
and
sahf
or
push
iret
loopne
sub
and
pop
jno
dec
push
pop
stos
int3
lds
je
cli
test
mov
xor
lods
popf
sbb
sub
add
aas
sub
scas
add
mov
(bad)
retf
in
mov
dec
ffreep
das
nop
pusha
pusha
jecxz
shl
out
loop
pop
or
dec
rcr
out
push
adc
dec
mov
inc
mov
or
add
mov
push
or
stos
leave
(bad)
loope
dec
add
adc
cmp
pop
mov
jge
cdq
daa
in
cs
jb
ins
mov
adc
out
push
and
test
ffree
xor
push
aam
aad
xor
loope
das
rcl
sbb
lahf
pop
mov
cmp
cli
out
mov
cmps
inc
add
fdiv
frstor
dec
pop
sub
aad
shr
fld
into
sbb
dec
cdq
inc
dec
repnz
inc
enter
push
sub
jmp
cli
adc
pop
sbb
call
mov
test
leave
adc
ins
packsswb
cmp
aam
mov
loopne
mov
jno
clc
add
mov
and
push
int
out
mov
std
lds
mov
popa
inc
mov
cmp
and
mov
push
lds
dec
cmc
ja
mov
dec
xor
gs
add
mov
mov
in
shr
rcl
stos
jnp
sbb
loopne
or
push
std
stc
imul
jnp
in
and
je
or
jge
in
mov
out
mov
int
add
loopne
ror
lahf
cmps
mov
mov
into
aad
std
aam
dec
repnz
cdq
je
repz
lods
ss
sahf
and
jo
jg
int
js
sar
push
add
add
inc
cmc
adc
dec
inc
mov
jge
lea
repz
lahf
jo
xchg
(bad)
jecxz
jg
es
push
mov
jmp
dec
inc
leave
jns
push
jle
(bad)
jl
mov
sub
ins
adc
inc
adc
stos
adc
pop
add
cs
in
dec
jb
mov
into
mov
push
loopne
not
jmp
outs
loop
push
inc
std
fadd
idiv
mov
fs
pop
pushf
push
rcl
ds
clc
xor
cmp
das
jb
inc
test
push
icebp
iret
inc
sbb
xchg
dec
call
cmc
loopne
jge
add
sti
push
dec
mov
and
cwde
fs
ffreep
cmp
stc
xchg
xchg
bswap
jb
dec
in
gs
mov
fcomp
ins
imul
dec
xchg
jb
and
cmps
movs
mov
cwde
xchg
ins
mov
daa
int
push
add
xor
jbe
pop
int
dec
sbb
or
push
push
jne
and
es
imul
test
mov
jno
adc
test
nop
not
mov
fisub
cmps
imul
mov
cmp
ds
inc
aas
in
push
jmp
mov
sub
imul
cmps
xchg
sub
add
bound
leave
jno
loopne
ret
inc
xchg
pusha
mov
int3
push
mov
sub
push
ds
pop
retf
and
daa
test
sbb
enter
pop
jge
xchg
add
cmps
jo
sbb
push
mov
popa
push
(bad)
popa
mul
lods
ins
inc
es
mov
sbb
jns
mov
fwait
lahf
lds
fidiv
arpl
push
push
ret
mov
(bad)
out
jp
jp
fistp
je
dec
(bad)
loope
lea
mov
jge
xor
in
pop
rcl
push
pop
lea
sar
sbb
movs
xchg
xchg
js
and
jecxz
lock
and
sbb
es
push
repnz
jne
cld
call
fld
push
cmps
dec
xor
arpl
mov
lea
adc
sub
iret
jns
mov
gs
dec
lahf
xchg
push
cmp
mov
fisttp
ins
pop
lea
or
sub
mov
bound
sub
mov
mov
fdivr
or
daa
xlat
cwde
sbb
cwde
cmc
sti
adc
xor
sub
jmp
mov
cld
cmp
cdq
call
out
bound
dec
fistp
jp
jnp
test
ja
pop
mov
jo
adc
test
mov
mov
fld
es
mov
and
cwde
int3
int3
dec
jecxz
es
scas
add
(bad)
pop
push
dec
jge
sub
fmul
push
sub
cdq
iret
clc
dec
js
add
jo
xor
cmps
mov
mov
mov
test
adc
in
shl
mov
or
mov
push
cmp
(bad)
loopne
std
fisub
push
call
test
mov
mov
mov
xor
stos
fimul
and
ret
cli
cs
push
xchg
sub
rcl
xchg
inc
call
or
(bad)
sub
test
jmp
rcr
fcom
push
mov
repnz
and
es
xchg
rcr
mov
sti
test
add
push
cmp
fs
and
mov
(bad)
mov
je
shr
sti
les
and
nop
push
push
(bad)
ror
cmp
mov
pop
ja
mov
data16
cmp
adc
(bad)
jo
stc
adc
inc
mov
xor
retf
push
xor
and
inc
call
les
dec
lods
rol
or
mov
test
rcr
and
pusha
xor
fmul
jge
adc
sub
mov
inc
push
mov
mov
pop
jge
jg
repnz
mov
out
or
push
pop
rcr
jnp
leave
pop
xor
push
mov
mov
ss
retf
push
imul
mov
push
sbb
fwait
cmc
shl
add
push
cmp
fist
ds
mov
add
pop
out
test
mov
sub
sub
mov
pop
xor
ficom
dec
(bad)
push
fcomip
xchg
and
mov
addr16
adc
fistp
cmp
jae
ss
sub
xor
cs
mov
pop
repz
retf
call
cmc
push
retf
mov
les
bound
js
mov
fstp
jecxz
outs
test
or
xor
mov
out
imul
xlat
and
loop
and
loopne
push
mul
sti
cmp
ror
aad
leave
xchg
inc
and
mov
mov
aaa
jecxz
jmp
(bad)
fs
iret
inc
add
(bad)
fdiv
pop
mov
mov
lahf
aam
neg
ret
icebp
pop
push
adc
xchg
outs
sbb
fsubr
mov
xor
movs
daa
and
shl
ret
dec
aam
mov
xchg
rcl
sbb
in
sbb
xor
ja
call
adc
fisttp
cld
adc
sub
dec
xor
inc
pop
sbb
cld
test
fmul
mov
mov
scas
cmps
mov
pop
mov
lock
sub
xor
test
mov
and
or
jae
xor
ins
cmc
in
ins
repz
add
sub
shl
sahf
das
xor
jae
inc
lock
call
je
(bad)
adc
pop
or
or
int3
or
loop
jle
sbb
xchg
or
repnz
cmp
xchg
fistp
or
or
outs
shr
xchg
mov
jle
and
mov
pushf
jb
test
mov
or
inc
push
pop
arpl
jmp
pop
jns
call
dec
add
mov
and
(bad)
aad
push
dec
dec
push
clc
ins
jmp
inc
dec
lds
jae
xlat
ret
mov
pusha
fist
and
cli
sbb
pop
call
pushf
mov
pop
or
push
jnp
outs
aad
out
xor
inc
mov
mov
add
in
mov
data16
adc
jb
test
mov
ss
sahf
xor
repz
jg
mov
imul
inc
pop
xchg
ja
rcl
jg
ja
cmp
cmp
mov
int
push
xchg
cmp
cmps
lock
xor
mov
or
mov
call
enter
call
je
xchg
mov
add
sbb
mov
pop
cld
nop
push
dec
imul
push
pop
(bad)
jo
repnz
pusha
(bad)
scas
test
into
aas
scas
xlat
or
call
imul
(bad)
pop
fdivr
test
adc
scas
cmp
xchg
stos
jo
test
mov
pop
inc
mov
xchg
xor
push
sbb
ja
inc
cld
test
retf
add
fmul
test
inc
ins
loop
out
xchg
out
cmps
mov
dec
fcomp
inc
leave
shl
shl
jne
hlt
sti
mov
outs
test
shl
or
pusha
loope
mov
jo
sbb
scas
mov
push
pop
rcr
sahf
arpl
mov
add
lods
icebp
daa
cmp
mov
sar
jo
or
mov
sti
inc
mov
setno
cmps
cmp
arpl
loopne
in
and
ret
adc
pusha
add
inc
bound
cmp
bound
xchg
mov
adc
test
int
(bad)
mov
add
das
and
(bad)
stc
add
fwait
cli
div
in
pop
sbb
xchg
mov
rcr
jno
jecxz
pusha
rcl
xor
clc
sahf
(bad)
inc
cmp
add
push
jb
mov
mov
stc
push
ins
xlat
sar
sub
jno
or
sub
push
pop
test
sbb
cmp
sub
cmp
into
and
push
and
addr16
imul
enter
mov
adc
les
jae
jl
mov
add
clc
in
jmp
movs
cmps
call
xor
pop
mov
outs
pop
mov
fsub
faddp
pop
imul
pop
pop
sar
pop
sbb
jl
call
inc
and
in
cld
sbb
xchg
mov
sbb
jns
out
bound
cmp
and
dec
test
call
cmps
pop
rcr
call
cli
cmp
rol
rcr
out
int3
adc
repnz
pop
lea
call
out
jmp
jmp
sbb
pop
daa
pop
sub
add
cwde
jmp
push
adc
popa
mov
jne
mov
enter
xchg
mov
outs
arpl
sbb
mov
outs
clc
dec
test
nop
imul
pop
dec
adc
mov
fsubr
sar
jmp
xchg
pop
mov
scas
xlat
or
pushf
out
push
hlt
inc
push
test
xor
xchg
ja
mov
scas
mov
dec
loopne
bound
mov
sub
jp
push
mov
sar
data16
pop
or
mov
leave
dec
movs
mov
nop
push
adc
pop
int3
in
imul
scas
in
mov
fs
xor
mov
mov
int3
clc
xchg
xchg
dec
push
adc
xchg
mov
sub
(bad)
dec
sbb
loopne
(bad)
push
inc
loopne
mov
jbe
add
jns
repnz
test
int3
test
or
push
pop
cmp
push
iret
cmc
jno
hlt
retf
stos
push
add
scas
push
and
xor
daa
push
cmp
pop
pop
and
data16
ror
shr
add
sbb
mov
std
mov
scas
inc
fimul
xchg
jmp
cs
fiadd
xchg
adc
mov
and
mov
mov
cs
sub
mov
xchg
pop
fbld
pop
nop
fsub
(bad)
jecxz
pop
mov
jecxz
pop
out
cs
ss
dec
repnz
jge
inc
call
mov
xchg
les
aaa
imul
adc
js
push
aad
jle
xchg
ficomp
cmp
sbb
cli
cmp
inc
inc
popa
push
xchg
test
loopne
xchg
addr16
jl
xor
inc
mov
mov
fcomp
fldcw
test
fwait
inc
push
(bad)
(bad)
bound
cmc
iret
jp
test
sbb
mov
ins
cmp
arpl
adc
pop
ret
scas
retf
aam
fnstenv
pop
shl
mov
cdq
mov
push
les
lahf
mov
adc
jecxz
inc
cdq
jl
lock
pop
rol
setp
sbb
popa
aas
jmp
xor
in
adc
xchg
cdq
in
adc
sahf
fwait
mov
adc
loope
scas
lods
repnz
leave
out
outs
in
add
iret
ss
lock
push
les
ror
pushf
sub
jae
bswap
inc
mov
pop
stos
lods
inc
ins
test
aaa
mov
(bad)
in
loop
xchg
stc
sti
rcr
neg
xor
mov
jae
and
in
adc
outs
inc
ret
aam
inc
mov
popf
call
sub
fbstp
push
into
or
retf
sub
rol
into
jns
retf
mov
and
into
add
(bad)
sbb
xlat
pop
adc
sub
push
rol
or
cmp
(bad)
pop
mov
xchg
add
sub
(bad)
push
xor
cmp
and
or
xchg
pop
inc
rcl
repz
push
push
lahf
test
(bad)
xor
xchg
mov
inc
xor
iret
daa
mov
inc
and
inc
aam
mov
or
cmp
xchg
call
pop
sar
push
aam
mov
add
(bad)
std
jp
mov
ss
sbb
inc
sti
leave
mul
sub
sbb
jbe
jmp
xchg
xor
xor
inc
aam
imul
push
cmps
dec
stc
sub
mov
mov
or
xor
sbb
push
in
add
lds
int3
add
mov
scas
xor
rol
mov
pusha
je
test
mov
and
pop
fs
ret
and
inc
sub
dec
outs
clc
pushf
dec
xchg
iret
shr
adc
sahf
sub
pop
adc
sti
xchg
and
mov
inc
mov
das
inc
or
push
and
repz
das
or
sub
scas
shr
sbb
rcl
push
mov
or
data16
push
ins
jnp
cs
sbb
jne
jo
push
hlt
(bad)
icebp
cli
inc
addr16
std
inc
cs
cmc
lock
cmp
adc
jno
jbe
inc
cmp
mov
xchg
lahf
mov
loop
adc
outs
xchg
jo
push
in
and
or
fsubr
hlt
jnp
shl
addr16
addr16
add
xor
mov
or
lods
ret
lahf
cmp
out
ret
xor
dec
xchg
inc
outs
ss
repnz
dec
cmp
jno
adc
cmp
fwait
icebp
lahf
jle
push
xor
jecxz
data16
adc
or
not
loopne
cmps
je
add
xor
repnz
push
jmp
pop
fcmovne
push
ja
or
xor
jne
mov
ss
in
and
pop
push
icebp
push
xlat
scas
cwde
adc
jp
adc
mov
mov
stos
sub
mov
mov
je
call
sbb
lock
adc
es
sub
mov
push
push
call
push
sahf
dec
jns
xor
mov
jnp
rol
cmps
cwde
jge
jns
dec
or
cmp
or
mov
jbe
cmp
das
mov
adc
jne
aam
jge
lahf
ret
test
lods
stos
inc
pusha
cmp
jns
sub
mov
sbb
in
fndisi(8087
sub
stc
(bad)
retf
ret
ins
ja
or
xlat
xchg
sub
cmp
in
jl
shr
sub
and
(bad)
into
into
push
pop
aaa
sub
xchg
imul
sub
imul
leave
mov
and
fisub
in
mov
xchg
out
and
jb
add
push
xor
push
aam
iret
jnp
and
shr
push
sub
mov
push
push
and
mov
addr16
sahf
xchg
sub
mov
add
stc
sub
jae
adc
pop
dec
mov
jbe
pop
repz
mov
sbb
aad
ins
out
xrelease
popf
loope
adc
fs
jns
xor
sub
nop
push
or
or
rcr
cli
push
retf
add
fisubr
pop
rcr
sub
adc
imul
mov
mov
enter
jecxz
out
jmp
aaa
pop
dec
test
add
xor
mov
(bad)
mov
retf
push
(bad)
popa
jb
(bad)
es
mov
jl
inc
adc
cli
retf
or
and
xor
cmp
rcr
cmp
push
jp
push
jmp
pop
push
scas
gs
or
xor
pop
fwait
pop
jmp
jne
jnp
jb
inc
pusha
inc
jns
fs
enter
push
xchg
xchg
xchg
mov
sub
int
xchg
mov
xchg
shl
popf
pushf
dec
mov
mov
dec
ffreep
inc
add
add
loopne
out
mov
mov
fcomp
xchg
or
loop
ss
lock
fimul
mov
fcmovnbe
(bad)
mov
mov
ror
cwde
cmp
mov
mov
fs
test
leave
xor
mov
mov
jb
int3
(bad)
cmp
jmp
jp
cld
mov
mov
ins
enter
add
sbb
aaa
or
scas
inc
out
xchg
stos
cmp
repz
(bad)
and
test
adc
enter
sar
and
and
sub
pop
sub
call
dec
in
mov
jne
jb
loopne
push
push
jae
mov
xor
outs
and
and
xchg
adc
push
xchg
out
test
mov
(bad)
pop
test
jbe
movs
test
pop
pop
stc
inc
inc
jns
xchg
(bad)
mov
out
psraw
ds
arpl
cmp
bts
mov
cmps
sbb
shl
rcl
push
inc
lds
or
into
xchg
push
push
sahf
and
or
leave
mov
popa
mov
inc
pop
sub
push
inc
scas
int3
in
ffreep
in
mov
mov
shl
sbb
leave
arpl
add
js
push
daa
jb
loopne
jmp
jns
xchg
adc
pop
dec
dec
xchg
test
jecxz
adc
adc
clc
jle
push
int
out
dec
dec
sub
inc
call
mov
rcl
out
push
call
pop
cmc
outs
push
rol
sti
and
mov
mov
mov
mov
in
push
jge
aas
jbe
fist
(bad)
int3
inc
or
aas
call
lds
mov
cwde
test
xor
xchg
push
xchg
aaa
push
mov
cmp
mov
or
push
cmp
mov
mov
je
xor
ret
call
pop
or
jns
enter
in
cmc
inc
cs
nop
int3
add
int
sub
rcr
mov
xor
(bad)
stc
add
dec
or
iret
nop
sbb
pop
loopne
add
stos
stos
test
pop
mov
pop
xchg
fldlg2
and
mov
sahf
add
jmp
pop
xchg
xchg
dec
xor
aaa
test
std
or
repz
jns
inc
iret
fwait
outs
rol
repz
call
dec
or
aas
out
xchg
or
fisub
imul
(bad)
mov
retf
std
std
gs
les
mov
leave
(bad)
jnp
cwde
cmp
lds
inc
je
push
inc
mov
mov
push
or
scas
add
add
fcomp
retf
push
pop
push
cmp
retf
jg
(bad)
icebp
iret
jg
jo
nop
aas
inc
lahf
mov
xor
sbb
or
add
dec
sahf
push
ret
sbb
pop
je
fcmovu
dec
dec
sub
call
stc
test
aam
cmpps
(bad)
cmp
cdq
push
xchg
aam
pop
int
imul
cmc
call
mov
dec
pop
push
xor
sbb
pop
add
mov
add
imul
pop
push
push
loopne
(bad)
imul
pusha
jmp
sti
mov
jne
dec
imul
inc
das
cwde
add
mov
adc
loop
(bad)
mov
frstor
scas
(bad)
loop
adc
sub
jg
cwde
inc
call
lds
push
inc
push
mov
jo
inc
ins
adc
out
pop
jnp
bound
cmps
ret
or
dec
enter
inc
mov
jns
es
cmp
xchg
shr
push
call
ror
jecxz
push
imul
imul
fwait
jge
jp
jae
ror
cmps
mov
pop
jle
mov
jnp
stc
aam
iret
xchg
dec
adc
sub
push
xchg
in
inc
sbb
mov
loopne
sub
cdq
sbb
movs
and
jnp
jne
not
lds
or
sti
iret
aaa
in
iret
div
ins
cdq
or
nop
sar
rcl
xor
out
cmp
pop
imul
sbb
ins
fucom
js
inc
ins
lds
mov
ror
jns
dec
cmp
adc
add
mov
int3
or
jbe
xchg
cwde
push
push
mov
push
mov
mov
cmp
add
stc
addr16
jo
mov
cmp
icebp
cld
pop
mov
cmps
cld
push
test
jne
xchg
fdivr
dec
dec
inc
pop
xor
lds
fmul
jmp
pop
pop
dec
xchg
xor
adc
xlat
sahf
jno
cwde
ss
imul
iret
out
es
pushf
mov
pop
adc
add
push
adc
push
cmp
imul
sub
shr
je
test
push
xchg
mov
out
cmp
in
scas
jns
cmc
mov
sbb
add
mov
call
cmc
mov
dec
shl
imul
lods
xchg
pop
pop
dec
xor
aam
out
cmp
aad
leave
cdq
nop
mov
fdivr
dec
outs
repnz
adc
out
pop
sub
pop
sub
sar
pusha
iret
xchg
mov
and
mov
sub
imul
mov
ret
loop
outs
mov
rcr
test
xor
sbb
xchg
sbb
dec
repnz
push
idiv
cmp
into
sub
dec
ins
jo
repz
ret
inc
pop
sub
xor
xor
cmc
add
xor
cld
mov
rcl
jge
xchg
adc
jg
adc
out
cli
fsub
cld
push
mov
push
mov
aam
push
pop
jecxz
cmp
cmp
inc
je
push
aas
icebp
fcomi
and
das
xchg
aaa
push
lock
fwait
push
xor
mov
pop
icebp
sbb
add
cmc
(bad)
test
mov
movs
xchg
pusha
stos
or
movs
aad
jge
int
jnp
pop
jno
daa
push
scas
mov
ret
push
ins
mov
mov
mov
sbb
pop
out
cmps
mov
xlat
jl
or
xlat
aad
inc
mov
sbb
es
pop
outs
fcomp
loope
test
dec
shl
mov
pop
leave
aam
test
out
pop
adc
pop
and
test
cmp
lods
iret
sti
gs
jmp
xchg
xchg
mov
out
in
out
jmp
vphadddq
pop
inc
cmp
sar
outs
imul
div
or
je
inc
mov
mov
repnz
mov
imul
fst
jmp
pop
iret
pop
popa
mov
jmp
ret
ret
jae
sbb
out
pop
mov
call
in
data16
ins
ja
mov
call
mov
adc
repnz
sbb
jmp
pop
inc
leave
cwde
pop
into
jge
mov
cmps
arpl
mov
aaa
and
les
mov
cmps
jo
or
sti
inc
jb
fs
int
lahf
loop
sti
sub
jmp
adc
pusha
push
mov
repz
sbb
and
push
mov
jmp
adc
add
xchg
repz
pop
cmps
imul
cmps
inc
test
jp
mov
mov
xchg
not
mov
sbb
(bad)
stos
and
pop
repz
sbb
adc
cmp
arpl
dec
jno
jo
dec
dec
mov
enter
arpl
sbb
push
cmovae
xchg
iret
not
popa
mov
movs
das
in
(bad)
sbb
aaa
fwait
cmp
sahf
dec
xchg
rol
fnsave
retf
arpl
retf
sub
mov
in
arpl
and
lods
cmp
cmp
mov
sub
lds
cdq
mov
lea
loopne
dec
inc
fist
adc
dec
mov
mov
adc
lods
add
loopne
push
xchg
or
or
sub
data16
call
out
sub
xor
lahf
cld
mov
sti
mov
(bad)
enter
mov
sub
lock
dec
inc
movs
mov
cmps
aam
mov
cmp
mov
cli
stos
mov
into
imul
jmp
(bad)
add
mov
mov
xchg
sbb
mov
out
mov
in
inc
stos
movs
shl
sub
pop
jns
lahf
xor
jns
fstp
retf
mov
mov
jge
dec
sti
dec
pop
inc
dec
scas
xor
pop
loopne
fdivr
xchg
call
sub
mov
test
rcl
pop
xor
push
mov
inc
daa
fist
sbb
js
repnz
mov
test
cmps
fstp
sti
neg
xchg
push
xor
sub
cmps
leave
mov
fdivr
(bad)
sbb
cdq
pop
repz
sbb
pop
and
jg
aas
inc
mov
inc
ret
call
mov
mov
outs
call
sub
xor
push
aaa
or
push
or
(bad)
jns
jbe
inc
retf
jl
mov
pop
(bad)
imul
pop
rol
and
xlat
xor
xor
dec
fxch
mov
cwde
and
div
mov
loope
dec
xchg
rcr
aad
xchg
cmovp
xchg
shl
popf
xor
mov
into
adc
jno
dec
sti
leave
mov
jnp
pop
jae
aaa
add
cwde
repnz
rcr
sbb
xchg
ret
jl
imul
pop
push
fsubp
bound
mov
cmp
jne
outs
xor
in
pop
or
(bad)
sub
(bad)
adc
aam
and
and
pop
and
or
mov
xor
push
mov
sub
nop
ficom
adc
mov
dec
movs
and
adc
stc
bound
sbb
adc
shr
jne
fcomip
jecxz
and
xchg
adc
cmp
pop
inc
inc
push
ficomp
or
aam
inc
lods
gs
movs
pop
inc
pop
test
ja
and
out
inc
push
loopne
repz
inc
add
jecxz
add
inc
or
not
repnz
inc
ret
lods
jno
sub
dec
xlat
or
add
sar
ja
push
es
mov
or
push
mov
adc
fwait
aas
adc
data16
cdq
aaa
repnz
mov
pop
jb
mov
cmp
cld
movs
push
in
pop
es
xchg
inc
dec
loopne
outs
and
xor
adc
pop
lods
repnz
cmp
icebp
pop
and
dec
mov
call
sbb
inc
or
loopne
hlt
outs
mov
shl
push
out
faddp
jne
pop
mov
adc
push
sub
rcr
add
sbb
into
jns
aam
and
mov
int3
cs
std
scas
and
dec
setge
(bad)
fdivp
scas
and
lods
sbb
fstp
adc
cwde
and
xor
xchg
xor
ss
cli
pop
fwait
in
jg
(bad)
push
(bad)
stos
xchg
test
fstp
mov
sbb
int3
mov
cmc
pop
mov
jnp
sub
hlt
nop
in
adc
dec
nop
movs
adc
xchg
(bad)
fwait
stc
pusha
or
popa
mov
xchg
mov
or
and
xor
movs
push
data16
push
sbb
(bad)
and
xchg
push
int
ss
and
cli
daa
ret
rol
pop
test
test
test
add
pop
sub
mov
cmp
loope
cli
mov
mov
mov
sub
and
sbb
adc
pop
mov
inc
push
mov
push
hlt
inc
jno
mov
jnp
gs
xlat
ficomp
clc
push
push
outs
push
rcr
mov
cmp
jbe
mov
rcr
inc
pop
or
fimul
scas
inc
pop
cld
sbb
es
add
imul
push
mov
xchg
outs
sub
xor
and
dec
jb
imul
adc
cli
inc
fdivp
mov
push
or
push
inc
and
js
jecxz
xor
inc
cld
into
imul
dec
ficomp
enter
je
xchg
les
sub
sub
sub
mov
adc
xor
sbb
pop
mov
nop
adc
and
stc
xchg
aam
stc
xor
(bad)
fistp
out
into
hlt
add
and
add
fist
xor
jo
shr
test
pop
retf
push
mov
xchg
(bad)
ins
mov
in
inc
adc
lea
and
bound
mov
test
hlt
sub
or
dec
imul
lock
mov
xchg
adc
pop
xchg
mov
icebp
out
(bad)
(bad)
cmp
fdivr
icebp
cdq
or
and
xchg
jl
adc
push
jo
mov
fmul
mov
nop
dec
ror
xchg
cwde
ins
xchg
dec
bound
xchg
ins
mov
stos
pop
pop
out
mov
fdivr
sbb
lock
shl
jnp
fs
inc
mov
daa
lods
shr
aaa
call
add
mov
push
jo
pop
sbb
and
mov
push
push
pop
add
ja
mov
xchg
imul
mov
shr
add
repz
enter
rcl
mov
adc
cmp
mov
xchg
(bad)
add
xor
xchg
mov
ss
out
dec
xchg
adc
and
(bad)
fdivr
inc
xor
sbb
bound
pop
inc
retf
xchg
jecxz
dec
dec
fcom
jmp
ror
into
mul
push
mov
or
and
scas
shl
pop
inc
sahf
jb
in
xor
nop
sti
leave
mov
out
aam
dec
gs
test
mov
mov
push
test
mov
dec
stc
adc
sbb
imul
mov
xor
add
mov
sub
sbb
push
stos
movs
and
std
lods
sbb
xor
xor
mov
push
jle
in
int3
aam
hlt
scas
mov
mov
mov
adc
int
inc
daa
retf
pushf
fld
and
out
mov
pop
adc
mov
aad
std
xchg
mov
cmps
mov
lds
dec
xchg
jnp
mov
dec
sub
sbb
cmp
mov
lods
push
pop
rol
jge
mov
stos
adc
aaa
shl
push
mov
retf
inc
inc
dec
mov
nop
daa
es
stos
jp
mov
xor
mov
rcr
icebp
movs
mov
mov
jae
push
cmp
call
stc
inc
neg
(bad)
enter
add
push
jmp
push
push
sub
in
ret
data16
pop
lods
aas
fidivr
pop
addr16
mov
jnp
fidiv
adc
je
inc
jge
fld
inc
pop
cmp
xor
(bad)
mov
xor
movs
test
mov
add
retf
and
inc
xor
xor
test
test
fwait
iret
adc
add
pushf
lods
stos
and
pop
das
ret
lahf
stos
int
xor
mov
adc
xchg
fcomip
imul
adc
jno
inc
jns
dec
xchg
inc
ret
repnz
aas
daa
imul
jae
inc
pop
inc
push
sbb
xor
scas
ja
inc
inc
aaa
dec
sahf
sbb
pop
enter
sub
scas
in
stc
or
fiadd
push
and
jbe
mov
xchg
dec
pop
fwait
std
rcl
push
movs
mov
and
add
jmp
outs
pop
jb
jb
xchg
hlt
stos
xor
sbb
in
xchg
std
loopne
push
and
pop
push
repz
imul
mov
mov
push
sbb
adc
cld
push
sub
add
lods
lods
cmp
dec
fist
cld
pop
push
cld
and
mov
pop
jle
cmp
jns
pop
rcr
inc
dec
push
cwde
dec
lds
add
push
and
ss
jecxz
cwde
mov
retf
inc
fldenv
out
stos
(bad)
xchg
dec
sub
sti
xchg
jb
cmps
mov
pop
jbe
mov
jae
test
adc
push
fist
jg
inc
mov
lods
ja
cli
icebp
jle
pop
xchg
rol
xor
dec
push
mov
test
add
mov
call
sbb
loopne
sbb
mov
mov
div
pop
mov
sahf
test
jecxz
dec
addr16
cmp
cmp
xor
(bad)
adc
add
popf
jge
sbb
or
or
jno
clc
lods
xor
aam
and
lods
and
shl
mov
loope
or
retf
imul
push
and
int
sbb
test
lea
lahf
pop
fdivr
pop
push
jle
cld
push
inc
push
and
mov
inc
rol
cmps
(bad)
jbe
loop
cmp
or
inc
scas
cmps
cmc
jo
clc
mov
mov
(bad)
jnp
aad
rcl
out
or
lds
add
(bad)
mov
pop
mov
repnz
inc
mov
rol
fsubp
loop
outs
fadd
sub
dec
(bad)
fdiv
push
or
aam
(bad)
sbb
sbb
or
fisubr
jmp
add
cmp
and
mov
sar
(bad)
cs
jns
jecxz
sbb
jp
imul
in
(bad)
xlat
or
cmc
or
pusha
mov
inc
mov
jnp
or
test
cld
dec
mov
lods
test
cmps
out
mov
push
lods
(bad)
cmp
out
and
test
loope
jmp
inc
inc
retf
inc
inc
jnp
adc
xchg
addr16
mov
add
(bad)
imul
add
std
iret
dec
test
and
xchg
dec
aam
loopne
(bad)
fs
out
loopne
xchg
rol
fcom
cli
and
pop
bound
push
inc
(bad)
jns
and
clc
in
pop
mov
jmp
add
test
repz
test
mov
ret
popa
push
push
mov
aam
add
pop
xor
sbb
fstp
outs
gs
cmp
cmc
inc
mov
or
and
test
jno
(bad)
adc
pop
jle
mov
mov
cmps
dec
sub
or
xor
mov
pop
jb
je
sub
arpl
xlat
mov
mov
mov
not
movs
fst
or
aam
pop
push
inc
fld
mov
and
adc
adc
cmp
test
inc
mov
jecxz
inc
mov
push
sti
shr
sub
out
daa
je
and
push
mov
mov
add
(bad)
sbb
lahf
scas
mov
and
fs
adc
pop
ror
mov
shr
mov
dec
aam
ins
clc
mov
fdivr
xchg
xchg
jb
add
popf
int
(bad)
jl
sub
ins
imul
sti
arpl
test
out
or
and
inc
ins
out
sbb
mov
cwde
jo
lods
rol
mov
fiadd
xchg
outs
pusha
mov
cmp
pop
mov
test
jo
push
addr16
call
retf
mov
pop
dec
push
les
push
mov
fstp
xchg
sbb
pop
pop
pop
shl
push
pop
push
jmp
aam
cld
pop
inc
add
push
xor
mov
ffreep
out
mov
sahf
mov
(bad)
pop
pusha
sub
or
cmovo
(bad)
and
push
repz
inc
fdiv
dec
scas
ja
sbb
(bad)
ficomp
xor
dec
mov
out
adc
retf
cmps
sub
push
mov
cmp
out
push
inc
add
fs
mov
dec
int3
leave
rol
int3
sub
sbb
add
mov
(bad)
cs
adc
dec
aaa
dec
(bad)
adc
int
push
movaps
fcom
ds
pop
test
out
xchg
in
push
and
fiadd
dec
push
pushf
aas
pop
xor
or
in
dec
retf
inc
sub
or
push
push
pop
mov
sar
out
adc
mov
mov
add
fiadd
pop
add
xor
jle
mov
ss
sti
movs
fbstp
xor
mov
mov
xchg
sub
imul
jg
add
pop
mov
xchg
inc
sti
mov
add
retf
cmc
repz
repz
sub
dec
xchg
cld
mov
es
pop
dec
fbld
cmp
fnsave
jge
stos
push
or
mov
and
(bad)
dec
gs
xor
ds
mov
mov
aaa
pop
int
mov
mov
mov
adc
jnp
adc
pusha
fdivr
or
retf
adc
sub
jb
icebp
add
and
xchg
xchg
xchg
mov
mov
pop
push
rcr
movs
xor
mov
sub
jns
fisubr
outs
into
mov
jnp
jmp
hlt
xor
jmp
cmp
es
pop
mov
cmp
jg
mov
or
loop
neg
push
call
arpl
xchg
pop
retf
call
jl
jb
inc
imul
lahf
mov
out
jge
punpckhdq
jmp
sbb
test
icebp
inc
xor
int
push
cmps
jp
leave
adc
mov
xor
pop
addr16
sub
jbe
mov
std
aam
mov
loop
cmp
rcr
frstor
cmp
xor
cwde
sti
cmps
dec
inc
cmp
mov
push
jge
sbb
vcvtsd2si
cmp
push
inc
push
stc
mov
mov
mov
mov
js
popf
fsub
mov
dec
cmps
loope
mov
jo
xchg
xchg
pop
pop
ror
sub
inc
cmps
dec
and
jge
ins
test
vxorps
mov
sub
add
sbb
sub
cli
fdiv
inc
mov
pop
pop
xchg
adc
call
cmp
jno
push
mov
xor
fisubr
push
mov
cmp
dec
jo
mov
xchg
or
jnp
ja
pop
out
aaa
mov
pop
mov
bound
dec
add
int3
jg
dec
xor
inc
ins
mov
call
lock
ret
sbb
stos
daa
outs
sub
popa
mov
sbb
call
movs
jbe
sti
das
xchg
lods
xor
(bad)
cmp
(bad)
inc
mov
arpl
mov
xchg
sbb
cmps
pop
(bad)
ror
or
scas
retf
movs
mov
lods
sbb
ja
adc
ss
por
pop
push
call
and
dec
mov
adc
xor
aad
mov
adc
sub
mov
out
jnp
repz
sbb
xor
add
mov
or
call
xchg
fbstp
cdq
ror
cmp
sbb
imul
call
dec
movs
pop
clc
stc
sub
(bad)
jno
mov
push
inc
(bad)
mov
ss
push
je
aad
mov
mov
xor
retf
cmp
push
dec
dec
push
mov
mov
leave
lods
adc
cli
xlat
jmp
je
test
pop
call
jo
cmp
lahf
jge
pop
mov
loopne
xor
shl
mov
movs
sbb
push
ret
cmp
stos
into
push
das
mov
out
sub
(bad)
xchg
sub
pusha
xor
push
pop
test
imul
dec
xor
adc
adc
in
sub
adc
lock
loopne
inc
sti
sub
clc
popf
xchg
aaa
cmps
pop
sti
push
sub
pop
adc
xchg
cmp
pushf
test
push
or
fstp
jmp
pop
cdq
adc
jns
pop
pop
mov
out
pop
repnz
cli
imul
adc
jle
bound
push
jl
xchg
adc
mov
mov
cmps
test
sbb
adc
mov
sahf
xchg
adc
mov
push
rcl
and
out
push
mov
xchg
int
mov
dec
dec
popa
push
shl
lahf
push
add
sti
cs
push
xchg
xlat
inc
xchg
cmp
fwait
mov
and
or
inc
adc
movs
arpl
aam
sub
out
rol
add
mov
and
jge
jl
or
jns
nop
scas
mov
fild
mov
xchg
rcl
cmp
sahf
cmp
pop
inc
cmp
fstp
mov
mov
test
mov
adc
add
in
ret
push
sahf
fsub
sub
xlat
sar
fidiv
sti
call
stc
jle
push
pop
push
cs
movsx
jp
mov
jecxz
and
sbb
and
push
shr
sbb
hlt
jp
pop
ror
or
adc
lock
in
outs
push
mov
or
sar
cmp
ret
std
cmps
and
pop
scas
jne
in
cmps
fdivr
aas
mov
push
cli
add
dec
mov
in
or
pop
jmp
cdq
ret
mov
pop
xchg
and
jnp
in
lock
cmp
mov
outs
or
xchg
test
data16
push
or
mov
jbe
cs
sbb
popf
lea
push
dec
or
add
div
in
pop
outs
add
stos
pushf
in
call
push
popa
lods
out
pop
jge
pop
dec
and
enter
repnz
lahf
pop
(bad)
pop
mov
pop
adc
sbb
cmp
icebp
fld
das
ds
xchg
pop
out
into
sbb
call
inc
rol
xor
push
call
ins
loope
and
int
add
sub
xchg
loopne
xor
(bad)
jmp
aas
mov
lods
das
call
dec
xchg
inc
jnp
loope
retf
pop
test
push
adc
in
and
out
in
xlat
sub
ins
xor
sti
out
jnp
pop
pop
pop
fdiv
pop
lods
in
sbb
(bad)
fmul
repnz
loope
or
and
(bad)
out
or
push
test
cmp
mov
in
popa
fwait
jmp
mov
sbb
test
push
add
test
mov
ss
lods
enter
aas
es
cmps
lods
out
ret
into
in
and
leave
jae
mov
mov
and
cli
stos
ds
xchg
cmps
lods
addr16
jns
cdq
pusha
jmp
mov
adc
mov
dec
mov
iret
jno
jl
outs
adc
adc
fbld
push
das
fidivr
in
shl
movs
and
ss
lock
cmp
jne
dec
sar
xor
pop
loope
push
pop
add
retf
bound
inc
push
inc
mov
out
pop
lods
sti
mov
mov
xor
les
shr
or
popf
outs
ror
jle
mov
in
jle
sub
or
js
cmp
cmp
test
adc
jmp
mov
sub
popa
lea
(bad)
fisttp
into
(bad)
scas
dec
out
sub
pusha
xor
xchg
or
mov
dec
mov
pop
mov
(bad)
sbb
retf
cmps
pop
mov
jbe
sub
dec
bound
repz
addr16
push
sub
pop
inc
shr
and
jb
sbb
xor
mov
fwait
jmp
movs
sbb
fistp
int
mov
loop
ins
add
clc
push
adc
pop
lahf
cmps
mov
loop
jge
test
adc
iret
lea
inc
or
mov
retf
rcl
mov
rcl
les
pop
cmp
mov
push
xchg
push
xchg
cmp
jns
mov
pusha
sub
xchg
iret
test
dec
xchg
mov
cdq
jns
dec
xor
xor
xchg
and
xchg
xchg
rcl
or
(bad)
hlt
fbstp
stos
loopne
into
shl
mov
(bad)
mov
ret
push
sbb
mov
jle
cmp
pushf
cmp
jmp
adc
fs
sti
out
addr16
arpl
ins
add
add
sbb
jae
int
das
int3
mov
or
adc
mov
scas
mov
adc
into
mov
mov
ins
out
ja
mov
in
out
rcr
dec
mov
mov
das
or
mov
nop
jle
sub
into
xchg
sbb
pop
retf
lea
test
fild
push
and
stos
int
jg
push
and
inc
mov
retf
adc
rcr
mov
fs
mov
je
mov
xor
shl
gs
sub
sbb
xor
dec
mov
int
fst
mov
and
push
adc
adc
mov
fcomp
cmp
jno
lea
lods
sbb
movs
add
repnz
fwait
into
cdq
add
xchg
xor
shl
movs
es
mov
push
sbb
xor
or
imul
jmp
enter
jg
cwde
cmps
mul
stos
dec
imul
pop
leave
push
cmp
dec
mov
mov
rcr
pushf
fadd
loopne
iret
mov
pop
(bad)
iret
push
sbb
xchg
fld
cmp
popf
xchg
(bad)
mov
push
leave
xchg
les
out
xchg
jno
sub
int3
and
cmps
jl
in
xchg
mov
pushf
aaa
push
pop
mov
jmp
add
cmp
or
movs
leave
test
add
cld
popa
out
pop
cli
mov
or
fwait
outs
(bad)
mov
cmp
mov
cwde
sti
stos
push
xchg
scas
or
arpl
jns
sbb
and
or
or
sbb
inc
jle
(bad)
js
div
stos
pop
ror
sti
jl
xchg
es
pop
push
(bad)
sub
dec
rcr
adc
clc
dec
enter
mov
mov
je
sbb
mov
aad
push
cmp
cmp
ins
adc
lds
jo
add
aas
mov
cli
fimul
test
mov
test
and
cwde
jle
pop
xlat
sub
mov
das
mov
lods
sbb
lahf
(bad)
mov
mov
repnz
and
rcr
addr16
sbb
dec
jne
test
and
js
push
int3
xchg
and
mov
push
sub
mov
outs
sbb
jae
popa
cmps
jb
sbb
clc
mov
iret
in
les
xchg
scas
fcomp
add
sub
cli
xchg
outs
xlat
mov
add
loopne
hlt
push
jecxz
cld
hlt
push
mul
sub
movs
xchg
retf
ret
je
adc
jne
sbb
int3
mov
xor
mov
jl
adc
lock
es
cli
mov
addr16
mov
add
cmp
retf
jae
adc
dec
(bad)
in
xchg
jge
jnp
cmps
xchg
shl
mov
sbb
jg
imul
int3
xor
loope
fild
lods
mov
sub
mov
(bad)
imul
mov
es
mov
cmp
jecxz
cmp
in
enter
xor
adc
dec
pop
sub
data16
and
fbld
jne
xor
adc
(bad)
push
mov
push
push
cmp
xchg
jbe
call
mov
inc
push
fs
arpl
sub
test
imul
(bad)
aam
ins
adc
stos
call
or
dec
daa
ret
dec
rol
ss
fsubr
push
cmps
inc
xchg
adc
out
mov
imul
cs
push
std
jg
mov
cmp
jno
add
clc
mov
jb
sbb
cmp
push
sbb
fisttp
fsub
stos
scas
dec
outs
cmp
in
sti
ins
mov
pop
sbb
enter
or
mov
rcl
aad
lods
inc
addr16
sub
retf
(bad)
outs
push
add
je
inc
les
or
xlat
or
(bad)
adc
mov
cld
jae
call
inc
loopne
(bad)
bnd
dec
inc
lods
mov
out
add
xlat
pop
mov
and
sbb
dec
dec
sbb
fnsave
cmp
push
imul
add
test
dec
pusha
test
rcl
jbe
pop
out
jge
pusha
test
jmp
push
iret
pop
cmp
in
es
mov
dec
test
jmp
jo
pop
mov
xchg
pop
sub
cmps
push
inc
inc
jno
mov
cmps
or
cmp
add
rcr
popw
imul
push
pop
and
push
stos
in
jmp
pop
pop
sub
(bad)
jecxz
popa
(bad)
stos
xor
xchg
icebp
pop
into
add
push
adc
icebp
outs
test
loope
in
dec
repz
les
sbb
adc
adc
sbb
test
pop
das
mov
outs
fstp
push
xlat
push
adc
mov
icebp
test
aaa
ss
mov
(bad)
mov
in
mov
sub
cmp
(bad)
imul
fsubr
xlat
push
dec
(bad)
out
or
(bad)
idiv
xchg
loopne
aad
push
xchg
imul
std
mov
mov
mov
movs
clc
adc
outs
mov
je
pop
retf
lock
push
and
add
sar
dec
dec
test
dec
add
iret
loopne
fsub
pop
fcmovnbe
sub
dec
mov
ss
push
mov
push
int3
inc
jnp
jmp
out
fcom
lds
sub
pop
push
bswap
and
or
push
in
sbb
inc
test
bound
loope
jmp
mov
xchg
mov
mov
cwde
sti
iret
out
aam
cli
adc
js
push
stc
xchg
fs
inc
pop
rcl
stos
jge
aam
daa
pop
jmp
dec
lods
jnp
fnsave
outs
shr
push
cmp
mov
inc
mov
pop
call
cmp
enter
mov
aaa
mov
sub
fstp
xor
pushf
(bad)
std
ficomp
push
out
arpl
and
jns
pop
imul
fs
pop
loop
mov
test
out
fistp
call
jno
pop
cmp
push
mov
stos
(bad)
shl
test
xor
clc
dec
jb
test
rcr
and
dec
sub
(bad)
repz
pushf
adc
sub
or
mov
lods
lea
daa
ss
push
ins
int
or
xor
(bad)
(bad)
lock
mov
jb
push
call
cmp
jo
je
and
sub
mov
out
dec
xchg
adc
ficom
adc
jp
mov
push
int3
mov
loopne
lods
pushf
mov
rcr
jnp
fst
mul
test
dec
xchg
repnz
lods
loope
bound
jo
lahf
ds
inc
shr
leave
mov
pushf
ins
daa
stos
add
push
aad
(bad)
add
cmp
ins
xchg
inc
jo
jmp
ret
repnz
add
sbb
mov
(bad)
and
mov
jmp
loopne
cmp
fsubr
imul
add
or
cmc
pusha
loop
fdiv
lods
dec
sti
xchg
bound
loop
lods
inc
or
outs
inc
in
dec
out
in
fmul
call
test
dec
mov
dec
test
inc
lock
ins
je
add
jmp
fcomp
ret
stos
mov
sbb
aad
cs
data16
mov
repz
jmp
lea
pop
shr
pop
cmp
adc
outs
out
jecxz
inc
xor
pop
cmp
cmp
xchg
pop
scas
ret
and
mov
scas
hlt
test
call
shl
xchg
ror
enter
mov
dec
xor
sbb
fwait
pop
les
out
loop
sub
mov
xchg
cld
jno
mov
aam
jbe
sub
push
(bad)
stc
call
mov
lahf
push
push
(bad)
lock
pop
xor
imul
jns
mov
ret
(bad)
fld
add
pusha
cwde
dec
push
ret
cwde
cmp
pop
popf
das
add
cmps
pop
sbb
sti
cmc
cwde
pop
push
movs
jmp
push
pop
int3
push
cld
stc
je
adc
cs
(bad)
(bad)
ror
rcr
scas
mov
jge
call
xchg
and
in
cmps
mov
push
add
and
add
dec
fild
aam
pop
js
adc
data16
imul
fst
(bad)
out
mov
ins
mov
and
fnstcw
pop
sar
push
hlt
stos
mov
retf
cmp
cmp
mov
dec
adc
clc
or
int3
push
iret
push
scas
jmp
push
das
sbb
sub
mov
lea
in
popf
dec
in
push
or
(bad)
and
mov
sub
idiv
cs
jmp
ins
or
fdivr
(bad)
mov
fcomp
mov
repz
jle
enter
lods
mov
test
(bad)
popf
or
(bad)
arpl
cmc
dec
sub
push
repnz
sub
pop
aam
sub
adc
mov
inc
out
inc
push
mov
sbb
arpl
xor
pop
stos
cli
or
sub
mov
pop
and
inc
dec
jns
dec
push
add
mov
fptan
cmp
xor
scas
dec
aas
xor
and
mov
fwait
in
(bad)
mov
pop
iret
fild
shr
xchg
mov
xchg
pop
jno
push
rcr
rol
push
adc
outs
lods
push
dec
loop
xchg
test
(bad)
dec
cmp
adc
adc
pop
mov
std
pop
adc
cmp
out
jecxz
adc
xor
loope
out
xor
dec
imul
cmps
push
pusha
enter
xchg
arpl
push
aam
xor
inc
test
xchg
aad
in
jno
adc
stc
pop
enter
clc
sub
in
loop
jecxz
mov
jno
sbb
sbb
adc
rol
in
clc
jnp
jp
dec
jmp
in
mov
sub
sub
nop
jge
ficom
ret
std
vpsrld
and
cmp
cmc
dec
mov
cli
stos
and
add
mov
icebp
jne
lods
push
lock
jae
call
push
adc
in
dec
mov
leave
or
outs
loop
mov
repnz
out
fwait
retf
xchg
ret
enter
call
scas
jg
aas
cdq
mov
(bad)
mov
dec
ins
add
int3
dec
imul
movs
int3
call
pop
rcr
ret
movs
fbstp
push
add
cld
nop
lods
stos
inc
mov
push
mov
pop
ins
shl
or
mov
jae
inc
xor
les
and
or
inc
test
mov
jp
dec
out
arpl
clc
push
xor
inc
je
jl
(bad)
cld
(bad)
ss
xor
push
add
pop
shl
xlat
popf
addr16
cld
mov
leave
ds
inc
jmp
fst
mov
adc
mov
aam
sub
jne
jmp
sbb
mov
xor
lea
sub
add
cmps
sbb
sub
jmp
aas
xchg
into
mov
nop
sqrtps
jae
mov
movs
inc
mov
or
push
out
and
push
out
movs
clc
xor
aaa
inc
mov
jne
retf
adc
mov
cmps
pusha
sbb
gs
mov
adc
cld
dec
data16
lods
dec
shr
cmps
ja
push
rol
xlat
fdiv
fstp
cs
add
hlt
sahf
gs
sub
push
push
jmp
aaa
push
ret
js
jmp
call
test
and
inc
pushf
ins
add
enter
or
push
sub
mov
adc
xor
inc
add
add
ins
mov
xchg
push
or
dec
es
test
mov
sub
(bad)
dec
arpl
jmp
dec
push
mov
push
call
sub
push
rcl
jge
sbb
cmp
fdivr
int3
jae
mov
adc
cs
pop
std
mov
in
lods
xchg
and
inc
fmul
push
mov
mov
inc
pop
dec
enter
stc
popf
jbe
sub
and
mov
pop
adc
or
(bad)
mov
add
hlt
adc
adc
sbb
pop
scas
outs
mov
xor
cmps
adc
xchg
xlat
add
push
out
dec
in
mov
push
pop
int3
js
iret
shl
dec
jl
xchg
cmp
stos
sbb
(bad)
punpckhwd
cmp
sub
jb
jge
aaa
repnz
aam
pop
in
xor
jl
xchg
ret
add
test
jmp
sahf
mov
inc
xchg
in
cs
adc
cdq
pusha
inc
fcom
xor
leave
inc
and
repz
pushf
daa
gs
xchg
pusha
cmp
(bad)
xchg
or
inc
repnz
rcr
cld
imul
mov
ror
loopne
stos
or
pushfw
mov
adc
xlat
popa
imul
mov
fild
or
sub
cli
popa
fld
push
pop
inc
inc
dec
add
dec
aaa
inc
leave
sub
dec
push
in
mov
cli
or
into
jne
ror
push
call
inc
inc
and
push
popa
clc
rol
mov
iret
cwde
enter
mov
pop
xor
lods
imul
add
dec
sbb
call
xchg
cld
ret
adc
mov
jp
push
enter
iret
mov
repnz
add
ret
or
or
lods
(bad)
or
out
nop
aam
push
jnp
sbb
dec
push
push
cli
pop
inc
mov
pusha
pop
xor
mov
int
pop
pop
call
pusha
dec
jecxz
mov
sbb
mov
fisub
xor
mov
or
aaa
mov
jmp
push
iret
dec
sbb
test
dec
test
cmps
pop
dec
test
es
dec
lahf
mov
sahf
nop
sub
fidiv
pop
add
out
push
push
(bad)
scas
mov
retf
and
pusha
pop
sahf
js
aaa
(bad)
lods
and
mov
dec
les
ja
or
xlat
dec
loopne
mov
arpl
cmc
fdivr
ja
scas
test
mov
sbb
scas
push
js
dec
mov
aaa
mov
stc
dec
(bad)
stc
mov
mov
sub
dec
scas
adc
cld
enter
pop
jnp
fwait
dec
dec
stos
adc
mov
retf
jmp
jp
fcom
mov
jno
jecxz
cmp
sub
add
mov
pop
fcmovnbe
dec
cmp
dec
popa
jno
cli
sti
adc
popa
cmps
mov
jecxz
fs
or
inc
push
outs
jmp
mov
data16
mov
inc
scas
stc
movs
mov
mov
(bad)
(bad)
add
adc
fwait
or
push
pop
jmp
xchg
jp
cdq
add
dec
mov
rol
xchg
or
mov
pop
fsubr
jecxz
(bad)
fld
js
outs
pop
(bad)
les
inc
dec
jo
jecxz
bound
int
(bad)
jnp
neg
and
lds
xlat
sub
ud0
sti
(bad)
cmps
in
and
ins
lods
or
mov
dec
lods
es
dec
push
daa
lods
aam
mov
mov
shr
cwde
fwait
lea
mov
mov
xor
inc
hlt
pop
ins
lods
bound
sub
movsx
cmp
sub
lods
aad
repz
adc
fild
and
adc
add
cmp
mov
mov
add
xor
push
and
xlat
sbb
(bad)
sti
push
pop
sub
pinsrw
mov
lea
push
push
fs
push
das
dec
add
jp
cmp
std
(bad)
mov
xchg
xchg
outs
dec
cmp
push
pop
shl
pop
repz
retf
cwde
cmp
(bad)
std
test
mov
shl
xchg
mov
xchg
jecxz
enter
xchg
ja
movs
fcomp
es
leave
sbb
outs
int
std
mov
loopne
retf
cmp
shl
out
mov
bound
mov
scas
lds
daa
aaa
sub
xchg
ret
add
cmp
out
pop
cmp
add
mov
mov
inc
pop
push
inc
adc
cwde
retf
or
mov
xor
out
mov
lods
mov
pop
xchg
jmp
addr16
daa
cdq
cmc
ror
ds
pop
rcr
aam
adc
jecxz
gs
in
popf
out
pop
iret
icebp
ja
arpl
pop
sbb
mov
add
or
inc
fiadd
sub
mov
push
ins
movs
or
jg
daa
(bad)
daa
outs
nop
mov
or
loopne
out
(bad)
fdiv
jmp
fsubr
xor
mov
pop
int
sahf
sbb
ins
fadd
push
mov
adc
adc
pushf
(bad)
dec
pop
xor
pop
pop
inc
cmp
fdiv
jge
dec
ss
xlat
montmul
cmps
test
or
cdq
mov
jl
sub
ins
iret
jnp
xchg
iret
fnstenv
imul
iret
sub
cmps
sbb
xor
cs
xor
sub
inc
imul
stc
inc
jg
shr
mov
data16
gs
(bad)
clc
clc
stos
and
imul
and
shr
jno
mov
bound
pop
inc
push
inc
mov
mov
or
push
neg
add
fmul
mov
cmp
add
and
jecxz
add
loop
adc
push
push
aas
jno
imul
jge
adc
xchg
pop
xor
fs
lods
aas
jne
cmp
cld
push
cmp
cmp
jno
adc
xor
sbb
jb
fld
movs
sub
mov
pop
and
jns
xor
mov
repz
loopne
sub
dec
mov
pop
fwait
and
lods
imul
pop
xor
sti
mov
sub
jae
dec
mov
cmc
(bad)
jnp
int3
xchg
addr16
in
jb
aas
jns
push
mov
sbb
lods
(bad)
into
mov
(bad)
fsub
and
test
cld
cmp
jo
sub
retf
shl
lds
inc
mov
retf
mov
es
add
sub
xchg
ja
or
mov
dec
push
pushf
test
xchg
mov
push
push
ds
or
test
dec
jb
add
call
dec
inc
jge
mov
adc
outs
sub
jp
jmp
shr
test
inc
mov
shl
jp
das
bound
jb
mov
pop
mov
movs
inc
cmp
cmp
mov
inc
fs
xlat
cmp
sbb
pop
ss
sbb
sub
and
mov
add
mov
jmp
out
cmp
sti
dec
ror
std
sti
and
(bad)
std
gs
int3
add
fcomip
cdq
sbb
imul
mul
pop
int3
mov
and
aam
inc
push
cmp
imul
pop
mov
push
and
xor
jge
sahf
enter
sar
loop
cmc
sti
icebp
ret
clc
jo
shr
mul
ds
mov
jge
push
jp
and
das
mov
xchg
fdivr
dec
scas
movs
cmp
mov
and
cs
or
sub
xchg
add
std
pop
test
sbb
cmp
pushf
mov
gs
mov
mov
ins
cs
mov
sbb
mov
push
mov
jp
mov
and
jecxz
clc
mov
ins
cld
xchg
sbb
xor
ja
sub
dec
push
add
sub
sbb
push
mov
lea
inc
fwait
pop
ja
push
(bad)
mov
xchg
shl
sbb
or
xchg
jno
jo
(bad)
in
xchg
mov
repz
icebp
sahf
pop
imul
xor
sti
call
mov
pop
mov
lea
or
xchg
(bad)
mov
outs
adc
les
and
or
jg
ss
fcomip
mov
xor
not
pextrw
data16
and
pop
shl
adc
pusha
sbb
loop
aad
int3
fstp
iret
js
cwde
xor
popa
push
(bad)
rol
shr
sub
xchg
sti
aaa
jle
daa
call
iret
or
mov
xchg
loopne
xchg
nop
jb
jg
stc
inc
and
call
sahf
(bad)
js
adc
mov
push
mov
test
shl
jcxz
jecxz
mov
pusha
shl
movs
mov
xchg
pop
scas
or
cdq
mov
das
cmps
adc
xor
xchg
fisub
xchg
lea
or
rcl
lds
jecxz
and
xchg
and
movs
test
das
dec
xchg
add
stos
retf
or
inc
cs
das
add
jl
push
inc
xor
test
pop
scas
ds
fst
das
sub
cdq
dec
inc
and
(bad)
sub
cmp
and
ss
mov
push
sub
imul
sub
dec
jbe
sahf
outs
out
call
int
daa
fcomp
scas
dec
cmp
in
or
ins
lahf
mov
mov
test
cmp
sub
nop
cmp
jmp
or
ffree
fs
stos
int3
jl
adc
dec
sub
(bad)
popf
mov
xchg
mov
and
sub
ds
pop
lods
lods
inc
inc
mov
push
clc
lds
pop
data16
cdq
mov
pop
ret
inc
pop
fsubrp
adc
mov
inc
xchg
cmp
add
stos
loopne
push
aaa
jno
jbe
ins
adc
bound
sahf
imul
iret
pusha
neg
int3
sbb
add
adc
lock
(bad)
cld
popf
and
std
inc
data16
mov
or
shr
or
sar
inc
and
les
push
pop
pop
lea
cld
or
pusha
js
hlt
stc
or
scas
jne
add
pushf
pop
movs
jl
in
or
cmp
je
retf
xor
stc
ja
add
dec
pop
sub
inc
nop
push
popf
mov
nop
retf
mov
stc
mov
pop
and
fidivr
add
jae
sbb
stos
sub
xor
mov
xchg
(bad)
jns
in
push
push
mov
fmul
and
fadd
pop
arpl
jmp
dec
in
push
fidiv
jl
sbb
mov
pop
outs
(bad)
cmp
gs
lods
pop
leave
mov
inc
lods
push
add
fisttp
mov
stos
iret
or
lods
mov
mov
adc
jmp
fnstsw
repnz
popa
cmp
xchg
sbb
stc
ficomp
jl
mov
xor
xor
nop
dec
jecxz
cmp
into
stos
dec
and
jmp
imul
lahf
mov
repnz
or
out
int3
mov
pop
dec
test
pop
retf
or
add
ja
inc
loop
add
aad
add
cli
inc
lods
lahf
sub
test
outs
scas
jmp
mov
mov
(bad)
(bad)
and
mov
mov
push
dec
add
fwait
arpl
inc
and
pop
test
int3
adc
(bad)
add
add
in
push
inc
icebp
(bad)
iret
aad
cdq
stc
retf
push
bound
into
sub
popa
int3
rcl
shl
xchg
mov
popa
lods
cmp
out
inc
push
xor
ins
xor
retf
psrlq
inc
pop
movs
mov
inc
(bad)
icebp
pop
sbb
js
nop
dec
push
jmp
je
sub
dec
or
inc
movs
scas
fld
test
sub
movs
push
(bad)
adc
sbb
and
loopne
mov
movs
adc
mov
push
sbb
data16
xor
dec
dec
pop
ins
push
mov
pop
xchg
aam
popa
push
ret
jge
data16
mov
(bad)
adc
add
push
cmps
or
ret
cld
xor
fsubr
inc
rcr
xchg
mov
adc
push
and
repnz
pop
add
sbb
and
fdivr
popa
mov
ja
mov
sbb
loop
cld
xchg
ds
leave
fnsave
fs
in
jge
sbb
pop
mov
add
pop
fmul
jge
pushf
pop
adc
mov
mov
inc
jge
add
jge
inc
add
ficom
mov
mov
add
arpl
clc
repz
sbb
(bad)
mov
(bad)
jns
mov
and
mov
mov
xor
fcom
xor
aaa
addr16
rol
and
and
(bad)
addr16
pop
(bad)
out
lock
data16
push
mov
xchg
inc
std
movs
pop
loope
pop
rcl
mov
inc
pusha
dec
out
or
cmp
pop
loop
leave
cmc
dec
fstp
mov
fld
imul
(bad)
sbb
cmp
jno
enter
mul
jmp
xor
popa
lods
(bad)
lods
lods
pop
out
xchg
inc
or
push
mov
lea
sub
cmp
push
vmovshdup
aas
mov
inc
cld
xor
enter
ret
mov
(bad)
lahf
jne
fdiv
xchg
inc
jbe
retf
mov
push
sub
and
(bad)
or
(bad)
fld
fucomi
mov
cwde
add
mov
jns
aas
ror
and
test
sar
cs
adc
xchg
in
outs
mov
dec
rol
push
(bad)
sub
xor
das
jmp
fcomp
enter
fst
sub
inc
and
dec
in
cwde
push
ret
cmp
jns
sti
loope
pop
pusha
mov
sbb
loopne
or
adc
cmp
push
aas
mov
nop
push
ins
ins
jae
push
jmp
push
sbb
adc
call
cmp
mov
rol
xchg
jo
push
int
mov
test
xor
jge
mov
mov
int
mov
add
xor
out
jmp
movs
fbstp
xor
jg
jecxz
aad
push
rcr
pop
mov
shl
add
fwait
mov
dec
ja
aas
outs
or
fnstenv
test
loop
adc
retf
or
lea
push
sbb
adc
lods
jp
cmp
shr
pop
dec
inc
ja
outs
aam
or
lods
mov
adc
mov
int
fimul
ja
cmp
mov
pushf
popa
push
dec
or
mov
pop
jg
jb
push
cld
ins
aam
push
xlat
movs
pop
jno
int
outs
dec
jecxz
bound
jns
adc
adc
xor
jne
add
jg
cmp
sbb
push
test
gs
shl
dec
dec
and
mov
inc
js
cmp
mov
dec
idiv
loop
sub
(bad)
push
popa
cdq
repnz
xchg
aad
outs
jns
stos
rol
inc
jg
mov
in
stos
test
cmp
(bad)
mov
and
fistp
cmp
ret
loope
add
push
add
aas
ror
mov
rcl
and
hlt
pop
pushf
mov
or
or
cmp
not
lea
jb
lds
mov
sub
inc
out
ja
xchg
pop
cmp
mov
adc
cmps
fs
mov
cmp
cmps
lods
xchg
xchg
inc
call
sahf
ss
pop
or
add
push
mov
repz
mov
cld
nop
mov
fnstenv
cmps
mov
sub
mov
cmp
repz
sbb
pushf
loop
dec
jge
xor
loop
retf
cdq
and
je
mov
xchg
push
jns
sub
xchg
push
push
mov
scas
and
sub
stc
adc
push
arpl
jno
div
pop
scas
mov
loope
sbb
out
gs
add
mov
bound
lahf
add
mov
test
jb
pop
sti
xor
adc
inc
dec
das
sti
data16
mov
add
call
mov
dec
jp
push
outs
pop
pop
mov
in
adc
jb
mov
outs
loop
sbb
dec
jo
out
push
ins
shr
pop
pop
jbe
cld
sub
pop
jp
xor
call
sub
inc
lahf
fwait
cdq
(bad)
fdiv
sbb
push
xor
jo
repz
ret
mov
mov
jecxz
js
dec
jbe
js
pop
inc
js
and
(bad)
sti
jecxz
popa
pop
mov
dec
not
cld
mov
mov
or
int
xchg
lods
pop
mov
out
sub
popf
dec
lods
inc
hlt
mov
pushf
lock
stos
retf
imul
shr
sbb
shl
sbb
add
cs
xor
adc
lock
in
js
jl
mov
inc
into
gs
repnz
jbe
inc
push
call
xor
xchg
dec
js
mov
in
jnp
fwait
inc
aas
or
stos
icebp
mov
xchg
retf
inc
out
ficom
cmp
retf
lods
sub
and
fs
and
inc
test
test
xchg
lods
mul
out
mov
mov
sub
aas
pop
push
pop
das
scas
pop
sti
movs
mov
loop
adc
sbb
xor
loopne
sahf
xchg
xchg
test
out
push
sub
cmps
imul
push
or
jmp
fild
fidivr
xchg
clc
(bad)
das
jae
aad
loopne
into
jmp
repz
pushf
dec
icebp
mov
bound
or
ret
sub
adc
loop
inc
mov
addr16
ret
add
out
mov
jp
adc
in
or
sub
or
sahf
neg
jge
clc
or
dec
(bad)
aad
sbb
test
es
or
es
fild
int
retf
test
mov
loopne
stos
push
xchg
jne
lods
retf
lds
jp
sub
mov
pop
push
sbb
xor
aas
aas
(bad)
xor
and
xchg
push
clc
out
add
and
cmp
fisttp
leave
push
dec
jmp
leave
mov
retf
sahf
xchg
cmp
dec
shl
cmp
call
cmps
(bad)
push
and
clc
fbld
lods
gs
sar
dec
imul
xchg
(bad)
cmps
dec
xchg
outs
push
arpl
mov
fcmovnu
in
xchg
movs
sahf
xlat
retf
inc
cmp
mov
mov
setge
pop
arpl
fcmovnbe
(bad)
pop
jp
inc
ret
dec
push
adc
push
adc
das
cmp
and
enter
(bad)
std
dec
arpl
dec
xor
mov
mov
fldcw
adc
mov
pop
and
and
mov
jp
push
dec
xchg
pop
cmp
(bad)
dec
jb
cmp
std
jg
ret
jb
xor
pop
stc
loopne
retf
push
scas
or
jg
or
jne
ss
aad
nop
xor
call
xor
(bad)
cmps
pop
fwait
aam
mov
adc
call
mov
pop
rcr
mov
test
ds
sahf
mov
cmc
cli
test
out
mov
call
movs
or
adc
test
(bad)
xchg
and
mov
adc
push
(bad)
fnstsw
pop
stos
scas
jne
xchg
sbb
je
pop
pop
test
div
xor
cs
xor
retf
jmp
lds
cmp
mov
dec
shr
popa
scas
fstp
mov
sub
push
ficomp
push
inc
or
pop
in
inc
and
jp
lahf
cmps
test
ret
and
xlat
jecxz
mov
pop
xor
cmp
lahf
mov
pop
pop
js
lods
popa
jecxz
ret
or
cs
pop
icebp
xchg
lea
test
repz
sar
xor
ins
fnstcw
ins
(bad)
jecxz
dec
pop
shl
int
push
jns
ds
stos
inc
aad
dec
or
pusha
pop
pop
add
mov
sub
push
jmp
dec
push
in
push
and
and
xchg
push
mov
mov
adc
xor
dec
mov
sub
scas
push
iret
es
inc
xor
xchg
sub
xor
or
xchg
ja
adc
add
test
lods
inc
loope
or
lahf
mov
mov
or
adc
cmp
cwde
icebp
sahf
test
pop
in
outs
lock
(bad)
stos
xchg
jb
mov
adc
jne
jg
and
pushf
xor
out
xchg
push
int3
xchg
mov
push
sub
arpl
xchg
bound
sbb
out
loope
adc
dec
ja
adc
cmp
leave
dec
imul
or
test
mov
retf
push
and
jmp
fld
movs
push
fimul
ins
out
adc
xor
pop
cmp
pusha
xchg
and
push
ror
jbe
adc
push
neg
imul
adc
fwait
ror
mov
outs
in
leave
(bad)
mov
add
es
(bad)
in
ja
pop
mov
out
push
inc
in
repz
jbe
inc
int3
idiv
lds
adc
xlat
xchg
sub
or
sbb
push
pusha
mov
test
push
jne
jno
push
jp
mov
loop
push
cmps
or
mov
mov
sub
jno
xor
data16
pop
mul
pop
xchg
mov
aaa
adc
cmp
ja
repnz
retf
push
shl
(bad)
scas
push
ret
outs
data16
mov
jmp
mov
jmp
jno
mov
inc
retf
fidivr
jae
pushf
(bad)
fwait
and
outs
pop
mov
push
cmp
fisttp
mov
ds
lock
call
out
inc
sub
mov
adc
pushf
sub
inc
retf
dec
iret
or
mov
ret
iret
push
iret
pop
fadd
xor
test
(bad)
loop
call
sbb
and
dec
mov
jne
outs
push
push
mov
cmp
in
aad
in
mov
(bad)
or
fucomip
sub
arpl
add
mov
stos
jge
fisttp
fcmovb
test
je
jno
lods
dec
pop
(bad)
sbb
out
outs
lock
mov
pop
xchg
fsub
jl
mov
cmps
fsubr
or
and
repz
pop
les
mov
leave
xchg
xor
jns
inc
xchg
xchg
(bad)
jp
adc
bound
in
or
or
xchg
mul
ror
push
cmc
mov
jb
stc
(bad)
ss
test
fnstenv
retf
mov
mov
xchg
dec
dec
dec
mov
in
pop
adc
fsubp
in
das
ja
icebp
and
push
mov
retf
ds
inc
add
ss
dec
sub
xchg
adc
cmp
cwde
call
jns
adc
out
out
push
loope
rol
pop
sbb
sbb
xchg
mov
cdq
mov
sub
push
bound
fdivr
adc
cdq
mov
neg
fcom
test
sub
sar
mov
sub
jmp
dec
xlat
cld
lods
addr16
outs
pop
ret
cmc
adc
cs
and
add
mov
ss
and
mov
xlat
xlat
bound
or
sti
cmp
sbb
inc
jmp
or
mov
mov
hlt
sbb
dec
add
jns
sub
fisttp
sbb
xchg
hlt
shl
sar
mov
daa
pusha
fld
int
in
mov
pop
jnp
lods
out
out
push
cmp
data16
pop
and
int3
cs
(bad)
sub
mov
fs
xor
out
jg
xchg
fdivr
test
push
and
and
pop
jb
jbe
sbb
les
lds
and
hlt
sbb
(bad)
hlt
(bad)
stc
sti
loopne
scas
(bad)
push
lock
retf
stos
pusha
bnd
ficomp
xchg
fcmovbe
xchg
scas
adc
fld
xlat
call
mov
test
shl
push
xor
add
daa
jl
and
das
jbe
movs
mov
loope
js
xchg
jle
mov
adc
(bad)
scas
cmp
pop
push
leave
mov
or
ds
pop
xchg
rol
inc
push
enter
sub
cmc
cld
xchg
jbe
aad
dec
add
dec
or
dec
xlat
into
pop
(bad)
push
jno
fs
out
gs
push
push
adc
mov
add
div
retf
jmp
xchg
into
ret
call
xor
pushf
and
or
push
mov
addr16
add
dec
call
(bad)
(bad)
cmps
adc
js
das
jmp
in
pop
cmp
aaa
enter
xchg
imul
mov
mov
jmp
jno
mov
adc
sti
fstp
push
jne
in
movs
ins
aam
pushf
add
jl
pop
inc
rcr
(bad)
xchg
jmp
xor
jmp
mov
mov
mov
movs
aas
and
dec
scas
adc
and
dec
movs
sar
xchg
add
push
pop
sti
pop
shl
test
dec
push
or
enter
sub
cmp
hlt
cmps
pop
ret
out
outs
dec
sbb
or
cmps
sub
xchg
cdq
and
and
mov
popa
adc
(bad)
pusha
es
daa
mov
push
pop
mov
sbb
mov
test
inc
sub
adc
sbb
lods
adc
adc
cmc
test
ret
jge
lods
in
inc
or
xchg
sub
pop
pop
and
mul
shl
aam
cmp
xchg
jb
xchg
xor
fistp
mov
scas
inc
shr
mov
fcomp
out
imul
bnd
clc
int3
(bad)
fisub
push
xor
not
add
in
ins
clc
push
jmp
push
mov
hlt
xchg
mov
inc
mov
mov
add
jb
fwait
sub
add
call
dec
sar
adc
xor
add
jo
xchg
es
imul
mov
ins
sti
in
call
mov
aad
or
jmp
fldenv
cmc
jno
push
mov
or
hlt
adc
fistp
dec
sbb
cli
sbb
(bad)
adc
sahf
add
movs
setb
sbb
loope
dec
mov
mov
mov
pop
idiv
push
fistp
jne
jo
push
neg
add
fst
sbb
inc
mov
mov
sub
and
cmps
xchg
pop
mov
lock
or
(bad)
(bad)
call
and
inc
loope
mul
mov
mov
imul
repnz
rol
(bad)
sbb
cmp
cmps
or
and
sbb
xor
popa
add
clc
into
aam
xor
or
dec
mov
pop
push
cmp
push
mov
sbb
dec
rcl
cmp
mov
test
mov
xor
adc
push
mov
mov
jb
mov
ror
cmps
movs
sti
out
pushf
pop
fwait
dec
adc
hlt
(bad)
mov
push
xchg
inc
add
cli
out
ds
fadd
mov
lock
sahf
dec
pop
cmp
lods
je
jo
mov
xchg
pop
push
pop
imul
adc
add
and
js
jge
mov
pop
into
lea
es
out
inc
jne
sub
sbb
cmps
sub
jne
mov
cmp
mov
inc
adc
jmp
add
movs
imul
push
loope
mov
or
sub
mov
cmp
mov
push
adc
arpl
(bad)
(bad)
out
nop
push
mov
adc
mov
ror
cmps
fmul
je
rol
cld
cmp
push
adc
or
inc
jecxz
mov
and
or
jbe
sub
pop
mov
adc
sub
push
sub
pop
ja
inc
shr
call
pop
inc
xchg
jge
cmp
push
iret
cmp
repnz
push
dec
aam
out
jns
outs
dec
leave
mov
fdivp
add
mov
mov
cmp
push
(bad)
popa
adc
aad
mov
add
sahf
je
scas
in
add
xchg
push
inc
mov
arpl
adc
jo
mov
retf
lods
mov
cld
xor
repz
out
(bad)
jg
adc
das
sbb
test
out
test
xor
stc
iret
sub
das
loop
cld
adc
loope
fisubr
dec
add
sub
push
sbb
mov
xor
mov
mov
ins
sub
mov
cmp
mov
jne
push
sub
xchg
cmp
cmp
push
xor
cmp
cmc
push
cmp
jns
ins
aas
push
fisubr
mov
aam
push
(bad)
in
mov
xor
repnz
popa
je
push
and
push
daa
test
xor
mov
mov
pop
stos
jbe
iret
adc
xchg
out
pop
pop
push
adc
out
icebp
sbb
or
sahf
mov
cmps
add
repz
xchg
loopne
ins
in
sbb
mov
sbb
(bad)
cmc
call
push
sti
cld
test
or
xchg
or
inc
sub
(bad)
cmp
jle
clc
jns
adc
cld
push
sbb
sbb
mov
mov
fdivr
repz
adc
jmp
fwait
push
ins
leave
out
(bad)
gs
mov
gs
fsubr
sbb
mov
jmp
jb
dec
inc
mul
sbb
test
lea
js
cmc
mov
dec
push
aam
inc
rol
outs
mov
int
lods
enter
scas
xor
or
and
push
jl
fimul
sti
mov
cmp
fsubr
or
popa
mov
cmp
lock
mov
stc
xor
sbb
sahf
shl
adc
pop
cmc
fistp
addr16
pop
sti
pop
shr
mov
ds
and
cld
test
mov
jp
or
add
fidivr
cli
stos
jae
loopne
cmp
push
stos
mov
stos
in
xchg
sbb
ds
and
movs
lea
push
sub
scas
push
inc
inc
pop
into
mov
cmps
sahf
and
mov
stos
cdq
lods
xchg
in
(bad)
sub
fistp
loope
sti
xchg
mov
jb
add
sub
push
jb
lods
add
test
sbb
(bad)
loope
mov
std
call
and
loop
push
mov
sbb
inc
int
arpl
or
push
fistp
(bad)
sti
dec
rol
lahf
ss
outs
cmps
push
adc
sbb
sub
cli
es
sahf
ds
pop
xchg
in
es
out
mov
mov
xchg
int3
enter
imul
and
xchg
retf
mov
cmp
outs
sbb
cdq
mov
mov
fwait
push
xchg
shl
test
leave
push
sti
lds
aaa
mov
mov
inc
push
inc
jae
or
pop
iret
aas
sysenter
aas
xor
cmc
or
and
inc
and
mov
imul
or
icebp
and
fsubr
jne
or
mov
xchg
sub
out
int3
call
or
add
jne
jl
fidiv
adc
pop
cdq
cmp
popa
mul
cdq
jp
cmp
into
inc
sbb
movs
js
mov
(bad)
jmp
ins
xor
ins
jp
sbb
sbb
cmps
ja
mov
fdivr
xchg
ins
cmp
movs
sti
push
and
push
inc
imul
add
mov
cwde
jp
cld
xor
popa
inc
(bad)
sub
inc
mov
ins
hlt
or
(bad)
stos
lea
call
sub
pushf
xchg
sbb
or
inc
sbb
inc
sub
imul
sub
and
in
add
ftst
das
dec
lock
cli
sbb
aaa
and
leave
cmp
mov
pop
mov
data16
adc
xchg
rcl
sbb
pop
mov
fld
call
pop
sbb
popf
(bad)
and
sahf
sbb
pop
jae
ret
ret
adc
jg
lahf
mov
lods
mov
xchg
sub
pop
push
adc
pop
push
aaa
nop
xor
jle
in
mov
inc
push
adc
xor
lock
mov
clc
xor
call
push
call
arpl
or
xchg
mov
jnp
push
mov
iret
call
jo
xor
mov
(bad)
int
push
mov
dec
(bad)
pop
pusha
sbb
rol
inc
leave
in
rol
jp
push
add
sbb
ins
into
retf
sbb
dec
scas
dec
mov
mov
or
push
xlat
popa
lods
int
jo
mov
mov
mov
xlat
mov
lea
out
inc
stos
daa
(bad)
mov
ins
jl
push
cmp
(bad)
and
xchg
add
jnp
mov
shl
jno
xchg
mov
fstp
mov
pusha
jno
dec
dec
xor
je
pop
dec
sbb
arpl
fnstenv
or
jp
push
cmp
mov
retf
gs
lahf
mov
sahf
xchg
mov
fdivr
xor
adc
jp
mov
test
(bad)
mov
in
sub
xor
in
call
push
or
outs
scas
mov
aam
dec
or
mov
cmps
jmp
mov
mov
daa
or
loop
inc
outs
nop
push
rcl
seto
repz
mov
cdq
xchg
mov
imul
idiv
pop
ja
jmp
jg
out
or
and
retf
clc
mov
nop
arpl
ins
test
sbb
ficomp
sub
outs
retf
dec
mov
lods
jmp
shr
cwde
dec
movs
ds
stos
dec
(bad)
out
push
retf
jno
sbb
mul
push
jl
shl
popa
jae
movs
cmp
outs
movs
mov
dec
loop
ds
pop
lahf
test
mov
pop
ins
push
sub
pop
dec
sub
std
fsubp
mov
push
sub
in
cmc
dec
and
std
ja
add
dec
popa
add
cmps
imul
out
mov
mov
mov
pusha
hlt
mov
hlt
jmp
lods
sub
jp
stc
and
clc
mov
pop
aas
mov
jmp
inc
pop
sub
cld
scas
adc
cwde
pop
mov
cld
test
xor
shl
movs
and
sti
dec
jnp
mov
iret
test
xchg
ud0
cmp
sub
xor
dec
ret
push
adc
cmp
jle
test
mov
cmp
adc
retf
aas
int3
movs
fdivr
sbb
test
lods
repz
pop
loope
adc
cmp
push
enter
sub
sbb
retf
push
call
jb
pop
mov
add
js
cmps
adc
add
sbb
test
adc
dec
add
or
xor
in
shl
clc
(bad)
out
std
pop
and
push
mov
gs
push
or
mov
mov
jge
in
pop
cmps
lods
adc
inc
int
sar
cmp
jle
mov
inc
pop
jae
cmp
adc
add
mov
jmp
pop
cmp
nop
loop
and
pop
call
pusha
mov
mov
fadd
enter
add
pop
bound
push
sbb
jmp
sub
scas
jmp
movs
xlat
mov
sbb
xor
mov
es
aam
xchg
xor
inc
dec
or
(bad)
mov
or
retf
test
add
addr16
fbld
lahf
jecxz
push
xor
mov
xchg
mov
fisttp
outs
dec
imul
aad
pop
jnp
sbb
test
push
push
adc
dec
leave
mov
popa
test
mov
test
fldenv
rcr
in
jae
das
and
dec
into
xchg
popa
push
jmp
jmp
push
xor
retf
call
fst
inc
(bad)
sub
push
enter
call
sbb
enter
stos
push
stos
jge
sbb
fwait
sti
shr
fist
movs
test
push
mov
cmps
sbb
sub
adc
daa
pop
ins
out
fnsave
cmps
loop
push
jns
test
stos
jae
jecxz
movs
cs
add
sbb
ror
dec
sub
xor
cmp
inc
in
inc
mov
push
(bad)
and
mov
pop
test
sub
mov
iret
pop
adc
mov
fdivrp
repnz
int
jl
ja
sbb
cs
push
addr16
test
mov
sbb
or
aam
scas
mov
and
shl
bnd
xchg
call
cli
cmp
cmc
ins
add
jl
mov
ret
jecxz
xchg
pop
inc
pop
dec
push
(bad)
shl
inc
push
retf
mov
jo
lods
dec
add
adc
pop
pop
das
sub
jns
out
test
push
mov
pop
push
inc
sub
(bad)
stos
push
adc
sub
mov
sub
pop
dec
jg
pop
aad
rcl
nop
jae
aas
mov
dec
mov
jle
sub
sbb
cmp
shl
mov
lods
lods
jp
repz
xchg
addr16
mov
push
fadd
push
xchg
pop
clc
inc
dec
dec
xor
js
jno
inc
push
pop
jg
jp
call
arpl
fisttp
scas
popf
rcr
xlat
aaa
dec
sbb
(bad)
pop
inc
out
call
inc
enter
fs
xor
jns
mov
jmp
mov
stos
ret
cmp
pushf
pop
hlt
rcl
mov
inc
inc
dec
ror
movs
out
daa
and
arpl
icebp
adc
ret
leave
cmp
jg
jo
adc
into
loope
adc
ret
imul
pop
mov
ret
fcomp
cmp
or
mov
jl
int3
add
and
bound
cmp
mov
sbb
dec
push
cli
or
mov
repz
scas
test
das
sbb
mov
jb
dec
(bad)
out
movs
cmp
repz
sub
sbb
jae
(bad)
mov
sub
fsubr
xchg
adc
int3
movs
psrlq
and
fs
ficomp
add
mov
pop
rcr
sub
mov
sbb
mov
movs
jnp
or
adc
jbe
xor
stos
or
jbe
mov
xor
imul
xor
xchg
out
or
call
push
cmp
retf
dec
dec
arpl
movs
loope
js
mov
(bad)
jp
(bad)
dec
push
repnz
(bad)
(bad)
jg
(bad)
shl
cmp
jge
int
add
cmc
xchg
mov
adc
std
out
mov
cmp
sub
mul
jo
inc
xor
out
xchg
ss
push
dec
call
xor
stc
push
cmc
sbb
nop
aas
adc
and
sar
icebp
and
rcl
test
jb
sbb
and
xchg
jae
xchg
xchg
ror
cmps
sbb
add
and
sbb
pop
ret
xor
jmp
sahf
xchg
test
jns
add
or
sbb
mov
clc
or
fimul
shl
imul
lea
jb
sub
or
(bad)
mov
shl
jae
and
inc
shr
add
push
mov
icebp
pop
rcr
jo
shr
lods
stc
push
ins
xchg
mov
inc
and
into
sbb
out
push
pop
test
xor
xor
loope
jae
inc
jnp
inc
xor
jg
loope
fs
or
ret
push
sub
mov
mov
inc
cmp
lods
jmp
bnd
fwait
jae
enter
out
stos
fild
inc
inc
outs
or
icebp
push
mov
shr
ins
imul
imul
aaa
jne
fwait
mov
lods
lahf
test
dec
xchg
sub
(bad)
js
push
jmp
(bad)
rcl
arpl
in
(bad)
clc
fnstsw
in
sar
cmp
in
addr16
int3
add
out
xor
inc
or
out
pop
mov
mov
push
lahf
jnp
stc
cmp
test
(bad)
adc
into
sbb
jle
shl
pop
mov
mov
adc
popa
in
js
inc
dec
repnz
inc
sub
pop
adc
push
dec
push
xchg
cli
pusha
call
iret
(bad)
retf
cs
dec
jae
push
adc
add
mov
cmp
into
les
adc
cli
pop
xchg
cmp
jae
push
cmp
fsubp
(bad)
push
arpl
jbe
push
and
cld
mov
and
inc
les
clc
xor
xchg
pop
mul
mov
inc
push
inc
dec
and
ins
sub
jnp
xchg
test
xchg
mov
pop
ficom
popf
pop
fst
adc
pop
rcr
jp
jnp
daa
and
sbb
fidivr
add
addr16
jmp
(bad)
mov
push
sar
xor
scas
or
mov
mov
pop
dec
add
adc
ret
cwde
leave
nop
fcom
xchg
(bad)
pop
fs
add
push
in
lods
and
dec
jl
jbe
push
(bad)
clc
xor
call
(bad)
push
lods
(bad)
pop
cdq
jl
mov
inc
jmp
fild
add
ret
jno
xor
fidiv
shl
xor
fcom
mov
pop
mov
nop
ret
cmp
int
test
xchg
inc
xchg
arpl
push
sub
sbb
mov
test
inc
aas
xor
dec
loop
mov
das
das
stos
out
fimul
xchg
jle
movs
push
lock
inc
rcr
mov
nop
outs
jnp
enter
dec
cmp
xor
pusha
imul
pmaxsw
dec
add
lea
push
daa
ror
dec
inc
xor
std
pop
in
push
repnz
test
push
and
pop
call
mov
mov
fmul
sbb
mov
mov
jge
neg
cs
xor
pusha
mov
leave
mov
sub
lods
sub
jns
mov
sbb
push
sub
jp
movs
sbb
cmp
push
rcr
jle
jg
inc
sbb
rcl
inc
stos
add
mov
jg
cmc
loopne
sub
sbb
cli
ja
pop
mov
mov
je
fistp
cwde
inc
cmp
push
je
hlt
jmp
mov
in
mov
ds
jmp
scas
xchg
pop
inc
enter
xor
push
jl
retf
add
imul
and
out
fsubr
mov
xchg
sbb
mov
inc
and
clc
pop
jns
ret
daa
mov
sub
cmp
add
ss
mov
cmp
mov
mov
imul
mov
pop
retf
pop
dec
int3
pusha
or
mov
adc
(bad)
fwait
jge
dec
lock
mov
loope
dec
jmp
jge
fwait
sub
push
mov
dec
loopne
int
sbb
xchg
sbb
push
ret
test
call
pop
outs
int3
out
jno
xchg
iret
pushf
neg
and
in
popa
inc
inc
jecxz
shl
and
mov
das
stc
aaa
adc
jge
sub
fcomip
sub
add
add
push
lods
pop
xor
sbb
cmps
popa
mov
cmps
shl
mov
fcomp
or
shl
xchg
shl
dec
or
idiv
xchg
les
push
mov
loope
xor
iret
rcl
fst
(bad)
sar
sub
loopne
into
mov
jecxz
out
mov
fild
gs
add
jno
lds
into
ficom
mov
sub
pop
rcl
adc
clc
mov
mov
cmps
or
(bad)
and
test
push
cld
retf
push
jno
cwde
mov
pop
push
ficom
hlt
gs
inc
inc
shr
into
movs
stc
push
ret
xor
or
retf
mov
loope
into
scas
aaa
jl
jb
add
into
in
mov
adc
push
mov
nop
iret
inc
pop
inc
ror
mov
lahf
shr
push
ins
mov
add
test
daa
not
push
inc
popa
nop
and
cmps
jge
call
adc
loopne
stc
xlat
scas
pop
cmps
sti
mov
repnz
sbb
lods
cmp
xlat
xchg
mov
or
in
or
fnstenv
movs
cs
xchg
add
add
adc
push
mov
push
mov
out
jl
push
jne
inc
xchg
mov
sub
mov
sbb
mov
jno
das
pop
cwde
fist
cmp
inc
popa
int
dec
xor
in
shr
mov
pop
stos
xchg
outs
data16
test
dec
xchg
jnp
sub
jecxz
adc
adc
xchg
movs
jbe
cld
sub
inc
and
out
outs
pop
push
pop
test
lds
leave
fist
ds
or
add
push
xchg
lahf
in
sbb
ins
pushf
jp
mov
fnstcw
xchg
push
outs
add
js
jecxz
xchg
adc
xor
cli
cmp
mov
push
bound
imul
jmp
std
pop
cmp
cmp
outs
sbb
inc
jl
mov
or
pop
add
lahf
jmp
adc
imul
add
mov
clc
mov
ja
int
push
push
add
iret
xchg
imul
inc
adc
mov
cdq
pop
mov
pushf
neg
xchg
mov
jl
cli
mov
push
test
xchg
mov
in
mov
and
popa
rcl
mov
sub
sbb
push
ja
mov
pop
and
push
xor
mov
push
jb
pop
cli
mov
fldcw
scas
ds
push
outs
or
bound
xor
les
out
mov
adc
shr
xchg
pause
push
rcl
and
ror
add
out
sub
pop
jmp
sub
sbb
adc
(bad)
lock
and
sar
mov
retf
cmps
add
ret
movs
out
leave
cs
adc
ja
scas
inc
xor
xor
(bad)
(bad)
mov
xchg
adc
jnp
push
mov
sub
movs
mov
push
cmps
ret
shr
jne
loopne
out
fist
ror
mov
out
inc
sub
aas
cmp
cmc
jmp
sahf
dec
mov
mov
sub
les
mov
lods
adc
push
push
mov
pop
add
fs
sbb
stos
mov
(bad)
jge
or
jo
fadd
out
aad
sub
or
push
icebp
jle
cmp
mov
push
jo
(bad)
pop
es
rep
mov
jmp
mov
mov
(bad)
stc
test
inc
leave
inc
xchg
out
mov
mov
test
jg
ror
or
jle
addr16
pop
pop
inc
enter
aas
inc
repnz
out
repz
mov
pop
push
sbb
clc
not
fmul
stos
test
lock
mov
sbb
push
iret
outs
push
xor
sbb
push
xchg
(bad)
scas
leave
popa
lea
mov
add
add
ss
xlat
dec
cmp
xor
aas
push
push
out
iret
(bad)
sti
mov
ins
stos
iret
mov
ins
imul
mov
mov
jbe
xor
outs
dec
pop
mov
adc
xchg
sbb
mov
push
mov
push
pop
aam
shl
stc
mov
seta
push
gs
mov
sbb
mov
in
fnstcw
pop
lods
inc
add
adc
stos
cmp
xchg
bound
arpl
in
aad
out
cmp
rcl
sub
pop
pop
pop
fld
pusha
in
mov
mov
inc
out
xchg
in
rcl
xchg
cli
add
pop
jne
mov
mov
adc
add
mov
push
aas
out
inc
xor
inc
aaa
or
and
imul
vmovsd
sub
mov
dec
mov
pop
or
and
jns
sbb
pop
mov
push
inc
and
ret
(bad)
sbb
adc
mov
dec
cmps
and
xchg
nop
xchg
adc
xor
xchg
adc
mov
pop
ja
sar
xchg
inc
stc
(bad)
jle
add
push
mov
adc
cmp
ret
xchg
mov
xor
mov
mov
test
mov
xchg
xchg
push
out
clac
inc
stc
imul
jp
jne
clc
sub
add
pop
not
xchg
outs
data16
pop
mov
test
sub
jno
ins
add
outs
sbb
hlt
inc
dec
and
or
push
inc
jmp
and
lahf
popf
xor
pop
icebp
nop
int3
pop
jmp
push
xor
sbb
daa
xor
add
scas
loop
mov
xchg
loope
ret
rol
push
xchg
cmp
in
pop
xchg
addr16
jl
mov
cmc
pop
sub
test
pushf
sar
repz
data16
aaa
out
sub
fwait
xlat
mov
push
je
sub
out
jnp
cmp
push
pop
cld
(bad)
neg
(bad)
mov
call
iret
jo
adc
loope
ss
cmps
push
xor
mov
and
fldcw
aas
jmp
cmp
(bad)
ja
shr
adc
into
hlt
sub
push
cli
mov
dec
addr16
fs
dec
mov
sar
aam
add
mov
cmps
inc
mov
mov
fsubr
xchg
call
das
mov
out
add
xor
cmps
mov
(bad)
out
in
mov
vaddsubps
xor
inc
mov
jmp
and
mov
pusha
jae
cmp
push
jle
inc
ret
adc
push
and
cli
pop
ds
push
cmp
inc
jmp
pop
into
or
in
inc
outs
test
sbb
pop
dec
sahf
cld
push
pop
lock
pop
mov
xchg
fldenv
xor
sbb
mov
ins
adc
jmp
je
xor
push
(bad)
inc
jge
mov
imul
push
not
cwde
or
inc
iret
xchg
int
les
shl
shl
aas
retf
pop
ret
loop
pop
xor
stc
rcl
adc
sub
std
cdq
out
imul
test
test
movs
mov
imul
mov
(bad)
ins
sti
nop
adc
push
ins
jnp
pop
lahf
sbb
pop
jmp
pop
push
ret
mov
dec
sbb
pop
push
pop
pop
jno
add
mov
xchg
cld
cmp
js
jno
ds
imul
mov
or
xchg
cmp
push
ins
adc
shl
mov
sbb
mov
pop
cld
pop
fbstp
and
ret
mov
dec
jecxz
dec
aaa
dec
in
retf
fs
mov
and
stos
daa
imul
push
adc
mov
xchg
inc
jg
(bad)
aas
xor
mov
adc
div
into
cmps
data16
fisub
cli
test
add
cld
in
xchg
inc
push
inc
adc
cdq
cmp
jl
popa
jecxz
adc
fwait
lock
pop
push
inc
jnp
shr
inc
dec
dec
xchg
je
js
(bad)
cmp
test
xchg
cmp
mov
push
dec
addr16
mov
add
mov
ret
dec
sbb
ret
xrelease
mov
sbb
hlt
imul
add
lea
das
ret
add
cmp
fcom
movs
mov
ret
adc
jp
and
mov
out
call
jno
pop
mov
xor
mov
test
(bad)
mov
mov
pop
push
sbb
xchg
dec
dec
in
mov
sub
shr
(bad)
push
adc
mov
paddq
shl
shl
dec
test
mov
mov
cmp
xor
jo
mov
xor
push
inc
scas
aad
cmp
and
imul
or
inc
fcomp
pop
push
pop
inc
aaa
loop
xchg
repz
sar
clc
pop
retf
or
(bad)
outs
mov
cmp
xchg
out
test
fild
mov
into
nop
in
(bad)
pop
mov
outs
loope
dec
inc
push
adc
pop
xchg
bound
inc
sub
or
addr16
mov
movs
cmps
or
xchg
retf
jle
das
aad
xchg
in
jecxz
stos
mov
cmp
cmp
pop
pop
jl
sub
lock
push
mov
xchg
sub
int3
xor
push
cmp
mov
pop
int
fisubr
mov
jl
cmc
daa
lock
ss
pusha
fdiv
xor
inc
cwde
out
inc
fdivr
stc
scas
fild
fnstcw
test
and
mov
popa
push
sub
add
push
pop
push
int
or
outs
out
not
mov
cmc
hlt
cwde
mov
adc
pop
add
cmp
out
retf
sbb
pop
adc
inc
and
or
adc
inc
mov
int
pusha
mov
addr16
cmp
shl
movs
ror
enter
daa
pop
(bad)
bound
fisttp
mov
(bad)
dec
jecxz
xor
je
add
cwde
daa
ss
xchg
mov
add
xor
ins
adc
cmp
xchg
int3
cmps
adc
inc
neg
cld
jp
mov
iret
iret
push
test
mov
cmp
jae
cli
cmp
repnz
cdq
xchg
pop
and
loope
(bad)
fsub
mov
pause
shr
push
push
sar
ds
repnz
mov
push
adc
and
adc
call
mov
and
call
jl
leave
or
jb
dec
jmp
pop
mov
lods
cmp
test
loope
lds
sbb
jns
retf
dec
dec
xor
(bad)
ss
(bad)
sti
mov
inc
cmp
popf
adc
jo
loopne
out
push
or
bound
sbb
pop
sti
add
cmps
push
jo
js
int3
mov
fadd
dec
mov
in
pop
movs
je
ret
adc
loope
out
cmp
pusha
push
ret
xchg
test
enter
ins
retf
mov
cmp
fwait
mov
sbb
movs
shr
call
jmp
movs
das
sbb
nop
dec
int
fdecstp
imul
xor
adc
jne
and
add
sub
hlt
setge
imul
dec
loope
in
int
and
mov
in
push
push
jo
out
ss
mov
pushf
mov
les
loope
std
(bad)
int
shl
mov
jno
adc
sbb
push
pop
and
dec
je
mov
push
add
psubusw
test
or
int3
shl
scas
data16
arpl
pop
pushf
xlat
or
ja
repz
mov
js
(bad)
sti
dec
(bad)
fld
aad
jmp
retf
jnp
sbb
push
(bad)
aas
push
jae
test
and
(bad)
jle
push
push
adc
push
jmp
adc
xor
and
outs
sub
xchg
sti
add
adc
test
jno
push
inc
call
push
ins
xchg
xor
mov
sbb
enter
inc
rol
jmp
out
mov
and
inc
mov
jl
mov
push
and
inc
repz
out
aad
inc
mov
push
shr
push
in
mov
xor
or
pop
pusha
pop
push
mov
pop
ss
adc
add
push
cmp
jp
ror
lds
and
sub
cmp
xchg
adc
arpl
xlat
popa
(bad)
jl
mov
mul
mov
dec
add
mov
mov
outs
ins
and
and
ror
xor
fdivr
sbb
repz
xchg
out
stos
xchg
jge
mov
inc
fst
and
or
pop
ins
aas
xor
dec
ins
movs
(bad)
cmp
push
jl
ret
arpl
jnp
repz
retf
mov
(bad)
repz
jb
dec
push
or
push
push
mov
pop
(bad)
std
push
xchg
shl
sbb
dec
mov
ds
sbb
neg
lock
in
add
push
outs
inc
xor
lea
fstp
xor
pop
pop
jge
das
mov
add
mov
adc
fisubr
in
mov
push
push
sbb
mov
hlt
shl
mov
push
or
sub
adc
inc
movs
and
dec
mov
jge
adc
xor
jl
mov
shl
fsub
imul
fstp
fidivr
movs
outs
cdq
scas
ror
cmp
dec
sbb
jb
bound
xor
bound
jmp
push
out
mov
call
push
mov
cdq
test
xchg
jp
mov
std
fstp
jg
ror
ins
sub
(bad)
ds
ror
or
iret
int3
fsub
test
cli
aas
mov
popa
and
jecxz
scas
sub
mov
mov
js
xor
popf
mov
dec
rcl
cmp
outs
push
shl
inc
lahf
rcr
lahf
xor
jns
cmp
test
jne
push
xor
data16
sub
xchg
hlt
mov
sbb
cmpxchg
aad
and
xlat
jno
call
sub
jno
leave
mov
es
mov
dec
cmps
mov
mov
out
xor
ror
rcl
and
or
arpl
cwde
sbb
sub
int3
imul
or
(bad)
arpl
ss
stos
loop
jl
mov
repz
test
xor
mul
push
push
xor
inc
jbe
push
outs
sub
mov
push
mov
rcr
pop
and
daa
out
jbe
or
push
sub
sar
inc
shl
or
cld
dec
push
jl
nop
sti
mov
in
add
dec
out
lahf
cmps
mov
mov
mov
xchg
ret
shl
fcomi
add
jae
into
dec
sbb
mov
ss
sbb
push
fwait
xor
aaa
inc
rcr
pop
jnp
push
movs
dec
mov
lds
movs
das
hlt
dec
mov
loop
inc
pop
lods
xchg
add
xchg
and
push
dec
in
mov
inc
sub
push
fs
in
sti
jno
popa
in
xor
(bad)
sbb
test
sahf
pop
and
sti
push
dec
inc
lock
jge
iret
adc
shl
int
(bad)
in
test
xchg
lahf
adc
add
push
mov
jge
mov
(bad)
leave
mov
ror
out
jl
sub
mov
(bad)
in
xor
mov
and
in
scas
cmp
xchg
jnp
pop
cmp
das
pushf
ins
adc
jmp
push
mov
in
jne
pop
shl
xor
nop
cmp
mov
ins
test
or
mov
leave
sahf
test
mov
ds
jmp
jo
sbb
jb
ja
inc
(bad)
jmp
or
stos
in
jmp
mov
retfw
jmp
ret
inc
mov
ja
cwde
out
je
pop
rcr
sub
dec
mov
xchg
mov
cmp
(bad)
jge
dec
jbe
mov
jmp
dec
ucomiss
cdq
aaa
ins
mov
dec
push
(bad)
fsubr
pop
mov
mov
sub
ins
call
clc
mov
ja
add
ds
scas
xor
std
dec
mov
js
lahf
fdivr
imul
imul
adc
test
je
test
int3
mov
mov
sahf
outs
pop
cli
rcr
cmp
cs
mov
and
lahf
daa
jo
stc
adc
push
push
mov
pop
or
repnz
fdiv
mov
jbe
je
mov
or
mov
mov
dec
cmc
enter
sbb
mov
or
repnz
int3
in
sar
outs
fwait
or
mov
sbb
push
xlat
mov
jp
mov
sbb
out
aam
lock
jle
or
fsubr
scas
mov
xchg
loope
in
mov
test
adc
jp
retf
bnd
cmp
add
jecxz
fild
inc
into
stc
mov
mov
jnp
xchg
fcom
in
fidiv
mov
je
inc
sub
jle
iret
icebp
adc
ret
pop
bound
(bad)
xchg
jae
outs
cmp
into
sub
scas
loop
scas
pop
dec
ds
xlat
adc
mov
fnstcw
dec
pop
xlat
and
aaa
in
xchg
ret
cwde
in
popf
cdq
adc
test
aaa
sbb
lods
aam
jae
inc
jecxz
ins
clc
mov
sub
fst
xchg
mov
stos
cmp
mov
xor
cmp
lods
cmp
mov
push
mov
xor
pop
push
adc
rol
xor
fst
test
ss
iret
outs
out
adc
ins
xchg
xor
(bad)
leave
gs
ins
loope
test
and
lods
push
pop
sbb
xchg
scas
jmp
les
push
repnz
clc
ja
adc
inc
mov
xchg
jns
sub
inc
in
cdq
sbb
add
sahf
dec
cmp
or
push
in
xchg
xchg
cli
out
(bad)
jp
mov
mov
je
mov
jbe
arpl
mov
jmp
mov
pop
push
xor
(bad)
fidiv
sti
push
sbb
adc
std
push
and
xchg
push
jno
pop
mov
stos
push
cmp
adc
(bad)
or
xor
popa
pop
mov
mov
xor
sub
out
clc
cmps
push
out
dec
cmp
pop
xchg
inc
stos
ror
js
call
inc
xchg
sub
outs
xchg
leave
out
inc
out
xor
xchg
pop
and
sub
sbb
popa
jne
sbb
pop
xchg
(bad)
sub
xchg
pushf
adc
aaa
popf
into
cld
pop
dec
xor
ror
push
jns
jle
imul
jecxz
xor
xlat
sahf
xchg
sub
sub
movs
push
push
(bad)
mov
loope
inc
int3
mov
clc
mov
sub
mov
ror
and
pop
mov
sub
xchg
pop
mov
test
fcomp
xchg
mov
xchg
dec
push
jp
push
pushf
mov
push
in
fwait
cmc
mov
jle
pop
aaa
xchg
jnp
and
movs
or
rol
jge
mov
pop
out
(bad)
int3
cmp
and
jnp
lods
rcl
push
inc
call
outs
(bad)
push
stos
repnz
addr16
addr16
mov
push
mov
stc
ja
cmp
imul
movs
mov
push
sahf
shl
inc
mov
sbb
(bad)
mov
pop
sub
jmp
scas
xchg
cmps
leave
fld
mov
pusha
test
(bad)
ja
dec
imul
push
cmp
mov
xchg
xor
lea
sub
jbe
xor
(bad)
aad
push
pop
clc
mov
jge
add
ds
movs
xchg
fsin
frstor
push
add
ret
and
jl
xor
add
or
adc
arpl
ret
mov
shr
mov
mov
popf
add
sub
jo
mov
mov
xor
sub
inc
je
mov
mov
out
mov
rol
movs
stc
std
adc
add
pop
adc
mov
xor
jg
pushf
out
push
(bad)
mov
test
mov
add
inc
or
jnp
xchg
jbe
call
stos
outs
lea
adc
stos
cli
icebp
jns
push
gs
scas
adc
jge
add
js
xchg
(bad)
out
lods
inc
and
gs
inc
mov
inc
test
pop
xor
sub
and
fwait
pop
shl
push
(bad)
xchg
dec
add
daa
jbe
pop
xor
mov
and
mov
out
fldcw
xchg
mov
sub
sub
iret
inc
xor
xor
inc
test
push
fadd
repz
jge
pop
fs
sub
(bad)
cmp
pushf
test
jne
bound
cmp
jno
cdq
mov
add
or
pop
loopne
shl
gs
and
lea
imul
inc
clc
sti
lds
dec
adc
(bad)
jbe
xchg
push
jno
dec
cmps
mov
mov
lahf
cld
jns
clc
push
mov
sub
or
mov
pop
xor
adc
xor
fdivr
adc
cmps
ins
test
mov
mov
sti
movs
out
lods
cmp
xchg
push
mov
pop
loopne
mov
inc
cmps
inc
(bad)
xor
scas
adc
add
daa
sub
mov
xchg
mov
les
jmp
mov
(bad)
pop
inc
int
adc
lods
mov
xchg
pop
shl
or
push
mov
in
push
in
add
adc
jl
dec
cs
dec
push
cli
jecxz
pop
popf
mov
jo
sub
ds
fnstenv
mov
xor
add
and
push
movs
sbb
cmps
push
ds
jae
mov
adc
xor
inc
sub
gs
cmp
out
imul
sbb
push
out
(bad)
pop
inc
jne
mov
sbb
mov
xor
jl
cmc
mov
jae
mov
xchg
test
cmps
jmp
ret
stos
fsubr
out
and
(bad)
out
jle
jl
mov
sbb
test
(bad)
adc
movs
aam
aaa
jno
adc
dec
sub
inc
or
xchg
jbe
scas
sub
fwait
mov
fmul
xchg
cmp
imul
mov
cmps
jo
and
adc
leave
stc
adc
scas
add
adc
leave
sbb
mov
arpl
(bad)
xlat
push
xor
pop
dec
push
adc
cwde
(bad)
fcom
adc
jbe
jae
mov
retf
xchg
movs
sbb
lock
pusha
xlat
mov
lds
ins
dec
mov
mov
add
inc
sub
and
rol
mov
lock
ins
mov
scas
loope
das
sbb
adc
fdiv
xchg
and
sbb
aas
(bad)
dec
pop
jbe
rcl
push
or
add
xor
add
mov
neg
adc
data16
je
popf
jns
cmc
test
mov
(bad)
mov
sbb
mov
movs
xchg
mov
(bad)
mov
jmp
(bad)
cmovg
or
jmp
rcr
addr16
ins
data16
nop
hlt
(bad)
and
das
xchg
mov
sbb
iret
ins
ins
sub
sahf
outs
xchg
outs
imul
jne
out
mov
adc
pop
cli
mov
icebp
jge
inc
or
or
adc
sub
test
jb
push
mov
push
lea
pop
sub
loope
cli
inc
xchg
cmp
pushf
dec
xor
leave
mov
xor
mov
cmp
sbb
or
es
mov
jne
call
shl
or
test
mov
dec
ss
je
and
push
shr
aam
dec
mov
arpl
repnz
push
sub
das
mov
inc
mov
mov
popa
and
mov
mov
cmp
and
dec
push
adc
jb
cli
adc
or
pop
xchg
test
mov
jle
xor
inc
cmp
pop
sub
push
mov
xchg
lock
ror
push
mov
repz
pop
(bad)
imul
cmp
jo
jbe
ins
rol
cs
lahf
cdq
mov
adc
xchg
cmc
cmps
retf
int
cwde
scas
sub
loope
push
add
pop
inc
push
je
add
mov
adc
jb
adc
nop
aad
aaa
mov
push
sahf
movs
ret
sub
push
pop
sub
aam
cmps
adc
stos
call
jp
lea
stos
mov
xor
add
sub
in
mov
(bad)
rcl
mov
jmp
(bad)
pop
lds
int
test
leave
add
jno
jecxz
in
cmc
out
push
out
xchg
sub
les
push
push
std
pop
out
cmps
sbb
mov
pop
inc
jnp
dec
call
dec
ret
xor
shr
mov
lock
dec
loope
adc
xchg
dec
and
mov
jne
push
dec
cdq
or
pop
repz
in
mov
mov
jmp
mov
fsub
fwait
cwde
out
add
xor
dec
ret
sub
dec
mov
cli
ins
(bad)
rcl
pushf
inc
pop
(bad)
bound
jmp
mov
cli
cmps
xor
mov
xchg
pusha
movs
das
loopne
iret
pusha
push
push
pop
fnsave
fcmovb
arpl
test
outs
or
sub
pop
dec
pop
mov
or
mov
push
push
in
mov
paddsw
js
jb
and
mov
jmp
imul
loopne
jp
retf
adc
enter
into
vpmuludq
mov
fscale
test
sbb
inc
cmp
int3
loope
inc
inc
out
fstp
ds
std
sbb
daa
mov
add
in
jmp
push
fwait
div
adc
pop
jns
mov
adc
hlt
shl
(bad)
mov
jl
adc
xor
retf
xor
in
xchg
adc
push
sar
stc
xor
jbe
and
mov
popa
jnp
leave
iret
out
push
inc
xchg
movs
mov
scas
mov
mov
clc
inc
mov
mov
sub
lods
pop
mov
leave
push
mov
lahf
sbb
out
(bad)
cmp
gs
icebp
jns
push
aaa
mov
ds
mov
push
pushf
xlat
push
movs
fcomp
repz
xor
push
xlat
sub
stos
aad
mov
push
mov
xchg
mov
jg
xchg
jecxz
int3
or
clc
mov
xchg
les
(bad)
or
test
add
call
and
push
aam
shl
or
sub
and
mov
mov
mov
pop
in
inc
mov
loop
or
les
cld
jno
fldenv
sub
mov
addr16
cmp
xor
push
ror
dec
idiv
mov
addr16
cwde
(bad)
lahf
and
adc
es
in
div
mov
or
imul
mov
loop
fistp
fmulp
pusha
mul
sbb
and
pop
jb
scas
jnp
xor
retf
ds
sub
mov
and
mov
fisttp
cmp
cld
mov
xchg
dec
dec
pop
jne
cmps
fldenv
xor
sbb
sub
repz
mov
push
pop
mov
add
mov
push
cmp
and
cmp
add
cli
(bad)
pop
xor
in
call
adc
aad
test
cmp
shl
mov
call
pop
mov
scas
mov
sbb
dec
int3
stos
aad
aad
cmc
std
dec
dec
cmps
imul
adc
leave
sub
sahf
and
mov
popa
int3
push
mov
lea
rcr
mov
adc
lods
std
and
jae
push
addr16
push
repz
stc
ret
mov
sub
push
rcl
test
jge
es
xchg
and
out
das
das
and
lods
and
out
and
fimul
lods
dec
jmp
mov
mov
cmp
sti
jns
inc
jle
pop
pushf
in
ror
mov
movs
outs
sahf
xchg
pop
test
cdq
and
mov
jg
pushf
push
jecxz
jbe
icebp
adc
push
cmp
dec
mov
jae
adc
jecxz
sub
xor
xlat
and
xlat
cmps
cmp
or
jo
push
push
add
mov
sub
mov
arpl
cmp
inc
scas
pop
sub
xor
xchg
adc
xor
retf
add
aaa
xchg
das
inc
(bad)
lock
cmps
jne
add
xor
call
jae
out
imul
pop
daa
ins
aam
push
jnp
jg
inc
xchg
cdq
xor
jg
setb
cld
call
and
ror
popf
inc
sbb
icebp
out
sbb
mov
and
int
xor
(bad)
jnp
pushf
add
xor
jmp
sbb
das
into
mov
out
idiv
jbe
and
inc
and
jmp
(bad)
std
jno
xor
xchg
stos
ja
loopne
lea
mov
cli
adc
jae
cmp
fild
mov
mov
pop
mov
lahf
lods
push
gs
dec
jge
push
dec
dec
or
cmps
call
push
cmps
jle
push
inc
jle
addr16
fcomp
and
je
out
sbb
sbb
stos
or
lods
arpl
pop
mov
jns
sbb
aaa
jecxz
mov
xor
rcl
push
xchg
push
jmp
and
cmp
push
fisubr
pop
stos
call
or
sub
int
push
or
inc
push
sbb
and
fmul
mov
and
mov
push
pop
mov
and
push
retf
mov
adc
scas
cmp
xor
movs
or
xor
cld
inc
add
cdq
jg
(bad)
lahf
xor
jge
pop
ja
test
xor
mov
xor
dec
or
test
cmp
adc
jp
imul
outs
push
or
(bad)
out
test
(bad)
test
sub
push
lods
test
fwait
in
ins
test
mov
jp
xchg
sbb
sbb
adc
mov
push
mov
int3
inc
sbb
pop
not
fistp
cmp
repnz
loopne
pushf
push
mov
or
je
mov
popf
sbb
mov
repz
or
sub
add
shl
shl
add
sbb
dec
jg
(bad)
or
pop
mov
call
retfw
pusha
xchg
stc
cmps
pusha
pop
pop
gs
xchg
push
xchg
sbb
imul
jne
(bad)
(bad)
(bad)
xor
cld
pop
jmp
adc
and
mov
js
mov
jns
pusha
stos
xor
pop
adc
lods
mov
pop
rcr
movs
mov
jle
or
test
aad
mov
stos
adc
push
jge
cmp
xor
mov
xor
and
(bad)
fmul
div
mov
sbb
(bad)
push
fnstenv
sbb
neg
daa
sub
retf
pop
clc
inc
ds
xor
lods
fmul
xchg
retf
mov
out
dec
cmp
jmp
xor
xor
xchg
outs
lock
(bad)
adc
xchg
jge
jno
pop
cmp
fcomi
push
push
stc
mov
sbb
test
xchg
addr16
pop
lds
push
jp
mov
bound
div
stc
call
or
mov
inc
xor
in
cmc
jb
jo
push
popf
add
mov
sti
enter
fisttp
(bad)
cs
das
xchg
sbb
test
sub
ficomp
loope
add
in
add
fadd
es
dec
xlat
shl
stos
out
push
rcr
enter
jbe
mov
into
cmp
and
push
call
mov
or
mov
inc
dec
xor
inc
dec
xor
das
pop
sbb
bound
sar
ins
and
or
push
xchg
test
add
or
dec
out
xor
and
jecxz
sbb
mov
nop
xor
mov
or
jno
nop
and
jp
pop
pop
mov
jae
loop
cmp
pop
neg
push
jge
mov
jle
xchg
enter
pop
sar
sbb
shr
inc
xor
fsubrp
pop
out
jmp
jb
xchg
push
push
aas
pop
and
push
or
and
imul
std
and
push
stos
inc
stc
jge
mov
mov
xor
push
sbb
out
ss
push
pop
sbb
ret
addr16
add
push
inc
mov
jb
enter
mov
inc
js
jl
or
add
int3
jns
pop
or
push
pop
xchg
xchg
mov
lds
push
inc
sbb
out
sub
das
mov
inc
fbld
popf
imul
push
mov
rol
xchg
call
das
or
mov
and
(bad)
jbe
mov
lea
loopne
inc
gs
out
sub
call
mov
sbb
push
std
outs
adc
test
dec
imul
icebp
push
push
pop
(bad)
out
adc
mov
mov
js
test
jg
sub
jae
pushf
outs
gs
lea
jnp
inc
out
mov
push
mov
(bad)
movs
push
mov
daa
xchg
push
xchg
xchg
jno
adc
xchg
adc
ins
stc
mov
or
or
ja
jae
jns
in
inc
in
or
mov
pop
adc
out
test
les
out
fld
xchg
dec
xor
std
jmp
sbb
sbb
or
pop
aam
fwait
push
inc
in
popa
jae
fnstenv
jo
xchg
repnz
mov
jle
mov
rcr
mov
bound
in
xchg
push
mov
pop
lahf
push
and
inc
mov
popa
fdiv
cmps
popf
xchg
xor
xor
jmp
sbb
mov
cli
stos
push
daa
jne
clc
pop
mov
ret
scas
daa
mov
shr
xchg
cmp
fs
jl
add
std
add
xchg
(bad)
popa
hlt
jmp
or
inc
rcl
or
mov
lods
sti
add
sbb
(bad)
cmp
lea
jns
mov
call
push
(bad)
das
jp
and
and
popa
and
scas
push
mov
data16
(bad)
(bad)
or
aas
out
enter
fsub
mov
imul
ins
adc
mov
fstp
cld
mov
mov
add
movs
sub
xor
xor
lahf
pushf
cmp
ins
call
push
inc
cmc
out
addr16
push
jmp
mov
loope
xor
out
cmp
cmc
aad
leave
pop
pushf
and
inc
mov
jb
xor
stos
in
jae
sbb
imul
mov
ins
sub
lock
jmp
cmps
fstp
sbb
lods
pop
push
or
rol
popa
and
in
push
dec
or
out
dec
in
aad
lds
nop
enter
add
je
cmp
ds
stos
rcr
(bad)
sbb
mov
bound
mov
(bad)
adc
adc
mov
leave
mov
(bad)
(bad)
cmc
fist
mov
cld
cmp
and
mov
ret
pusha
test
bound
sbb
add
pop
call
js
mov
cmp
xchg
pop
push
and
push
addr16
imul
mov
out
sbb
mov
or
addr16
dec
ja
test
lods
out
cmp
mov
cmp
cmp
add
cmp
movs
out
and
mov
cmp
mov
loopne
mov
inc
and
arpl
inc
mov
add
mov
popf
xlat
fild
sbb
fild
mov
inc
movs
pop
dec
stos
int3
stos
jecxz
dec
mov
xchg
fnstenv
sub
and
sete
pop
ins
or
stc
pop
aad
sbb
stc
cmp
fstp
lahf
dec
rol
mov
ret
gs
xor
les
fwait
pop
aaa
clc
ficom
pusha
movs
pop
push
sbb
push
in
jmp
jmp
cmps
fwait
cmp
mov
iret
push
xchg
loopne
outs
cmp
lods
lea
test
jns
xor
mov
setle
loop
lahf
ins
pop
cmp
mov
inc
in
daa
add
ins
retf
rol
cmps
popa
fld
retf
cmp
sbb
push
daa
add
or
xchg
shl
cmp
xchg
xchg
movs
xchg
dec
or
in
jmp
aad
(bad)
cdq
pop
retf
pop
xchg
lds
xchg
pop
mov
inc
mov
lods
mov
loopne
lock
aad
lea
xor
hlt
inc
stos
or
scas
scas
mov
loope
mov
cdq
repz
jle
cwde
inc
test
inc
cmp
adc
dec
pop
adc
leave
adc
mov
dec
call
into
test
ret
arpl
pushf
xor
lds
sub
fwait
aaa
shr
xchg
js
mov
into
xor
retf
lahf
inc
cmp
mov
lss
pop
lock
pop
pop
ds
das
(bad)
out
leave
retf
xor
popf
sbb
pop
fld
setge
stos
push
dec
push
dec
shl
ss
je
iret
clc
fidiv
sbb
inc
cmps
daa
inc
popa
mov
pop
sub
jbe
inc
ss
rol
xchg
pop
sbb
aas
dec
rcr
inc
or
jae
retf
test
aaa
xlat
add
lock
mov
push
lods
xchg
pushf
sahf
sbb
call
jnp
add
lods
jo
cmp
sub
addr16
lods
out
mov
sbb
scas
stos
add
and
inc
cli
cdq
mov
sub
mov
mul
xchg
ja
(bad)
cmp
scas
repnz
jge
jb
adc
popa
adc
adc
mov
pop
jle
dec
lock
or
cmp
outs
mov
call
rep
add
xor
mov
cmp
rcr
mov
(bad)
push
(bad)
sub
sbb
fs
cmp
(bad)
repz
jle
test
or
rcr
out
loope
dec
jne
jo
sbb
dec
(bad)
xor
push
mov
jg
inc
scas
int
je
aam
lods
jl
in
inc
xchg
repnz
inc
xor
jae
adc
push
out
inc
xor
enter
inc
fnstcw
pop
aam
rcl
(bad)
shr
rcl
retf
add
gs
dec
jns
retf
pop
mov
jmp
pushf
or
sub
or
dec
enter
rol
jae
pop
je
out
cmp
ret
imul
sub
clc
push
xchg
or
ret
and
in
test
ret
repnz
movs
xchg
lock
aam
jg
not
aaa
xchg
xor
jb
xor
popf
jp
sub
xor
sbb
xor
push
sbb
xlat
in
dec
iret
jb
ins
int3
xor
adc
ins
data16
mov
lea
mov
sub
mov
dec
lock
sti
into
cs
cs
jl
inc
mov
neg
sbb
dec
int3
adc
and
xchg
or
or
in
push
xchg
mov
sub
xchg
add
mov
xchg
pop
jp
fild
jns
push
sbb
mov
std
pop
fwait
push
das
neg
xchg
cmp
push
add
sub
push
clc
mov
sub
fiadd
movs
sti
inc
mov
outs
pop
xchg
push
pop
inc
push
jno
push
dec
jge
cmc
mov
push
xchg
jae
inc
daa
push
adc
pop
aam
cli
jg
stc
ja
inc
cs
cmp
(bad)
mov
addr16
push
iret
test
jne
xor
dec
lods
ja
or
inc
loop
pop
and
and
retf
outs
pop
or
dec
retf
aad
mov
aam
dec
pop
push
add
push
jmp
fsubr
mov
test
aaa
rol
cmp
in
adc
cmp
imul
iret
dec
cmp
aad
push
jne
ds
(bad)
push
jae
imul
mov
pop
arpl
cld
mov
jne
and
gs
loope
aad
xor
or
mov
mov
scas
popa
cmp
mov
loop
cmp
leave
pop
(bad)
in
pop
loop
loope
jno
jne
dec
arpl
xchg
push
loopne
fwait
inc
cdq
dec
jmp
in
daa
icebp
lods
mov
or
(bad)
or
cmps
aam
popa
imul
ds
add
add
stos
iret
or
add
mov
dec
pop
shl
pop
das
cli
xchg
pusha
pop
cmp
rcr
js
pop
daa
jecxz
xor
dec
mov
stos
(bad)
test
(bad)
sbb
out
push
jmp
ds
(bad)
ja
pop
pushf
ja
icebp
stos
add
retf
or
dec
cdq
clc
rcr
lahf
dec
sbb
sub
push
push
add
sar
sbb
xor
loope
int3
scas
fwait
lea
imul
pop
mov
repz
fdiv
lods
xchg
imul
pop
iret
test
ret
mov
in
push
adc
and
push
into
xlat
inc
ret
xor
in
xor
lahf
fs
pop
push
movs
repz
add
or
push
mov
xor
pop
jmp
mov
pop
outs
les
mov
scas
rol
jo
add
clc
push
jmp
pop
cmp
add
sub
mov
stc
mov
outs
or
adc
je
mov
bound
mov
jecxz
xchg
pop
add
or
and
addr16
cmp
clc
jp
das
sbb
movs
xor
hlt
ss
xor
mov
and
mov
inc
push
inc
std
shl
dec
pop
popf
pop
inc
jge
sub
repnz
or
(bad)
cmp
shl
inc
sbb
xor
pop
(bad)
mov
push
imul
enter
ds
dec
ss
sahf
adc
pop
cmp
inc
jge
loope
stos
add
fidiv
add
mov
xor
test
stos
cli
imul
cmp
movs
pop
jne
ror
(bad)
js
xchg
ret
mov
xchg
pop
(bad)
mov
(bad)
pop
in
(bad)
jl
xor
xchg
adc
dec
sub
idiv
rcl
jne
or
imul
jl
mov
jge
or
nop
inc
in
lock
js
scas
xor
shr
jmp
lock
jmp
pushf
lods
lods
mov
sbb
in
hlt
jb
fcomp
add
fs
xchg
popa
movs
and
add
add
daa
enter
and
or
aad
sub
mov
outs
movs
mov
cmc
xchg
jne
fadd
or
cmp
jmp
icebp
xlat
jp
sbb
repnz
(bad)
test
dec
div
and
icebp
or
add
add
jp
mov
mov
icebp
call
cld
xor
shl
inc
mov
or
jo
inc
and
sub
dec
xor
ds
jge
aas
fst
sbb
add
(bad)
daa
lods
movs
pop
mov
mov
pop
loop
test
retf
pop
test
jns
push
retf
dec
(bad)
xchg
add
clc
pop
inc
cmp
mov
jle
ds
xchg
inc
shr
cmps
call
cmps
push
push
leave
inc
xchg
push
pusha
push
out
and
pop
test
sub
aaa
dec
mov
jb
push
cmps
mov
mov
out
test
cmp
lea
jns
push
(bad)
enter
pop
mov
movs
ins
(bad)
jg
test
xchg
pop
push
or
lds
cmps
pop
push
or
outs
mov
js
jle
cmp
cmp
mov
call
pop
pop
push
jbe
ror
mov
sbb
ss
ror
aas
movs
xor
and
ret
pop
mov
or
aam
mov
xchg
xlat
in
jnp
test
xor
test
scas
aas
jl
outs
movs
jle
cmp
pop
in
sbb
je
outs
sbb
cmp
pop
or
je
sbb
inc
dec
loope
faddp
xchg
fs
push
mov
hlt
test
mov
imul
ss
pop
add
pop
or
dec
mov
xchg
(bad)
pop
repnz
pop
jmp
repnz
push
inc
and
test
sahf
or
push
into
mov
rcr
mov
fidivr
fs
jmp
xlat
int3
xor
mov
mov
(bad)
fisub
iret
or
and
aas
push
jmp
outs
pusha
ja
dec
in
and
ret
inc
mov
nop
mov
and
pop
xchg
addr16
jnp
scas
mov
test
mov
cmp
int3
shr
pusha
push
aad
clc
xchg
xchg
loop
mov
bound
stc
push
xchg
shl
pop
outs
out
sub
xor
pop
jns
fild
inc
repz
pop
stos
or
les
sar
push
cmp
pop
(bad)
(bad)
pop
cmp
addr16
pop
outs
inc
adc
add
fs
xor
shl
lods
jae
push
or
fs
in
adc
(bad)
adc
ins
and
mov
or
int
das
push
add
gs
jne
inc
ja
dec
(bad)
push
xchg
and
jg
jo
or
mov
sub
add
aaa
in
retf
push
dec
std
js
ins
test
push
or
jecxz
mov
cmp
sub
ds
bound
hlt
loopne
sbb
addr16
inc
popa
fistp
int3
stc
dec
ret
(bad)
mov
push
movs
pop
in
icebp
clc
addr16
jae
or
leave
xor
add
adc
int
pop
inc
dec
fsub
push
inc
mov
mov
mov
out
sub
popf
in
dec
data16
sbb
retf
popf
mov
cmps
arpl
repnz
fwait
ds
add
inc
bound
retf
gs
std
xchg
cmc
or
push
cmp
sub
xchg
sub
or
and
popf
inc
stos
dec
retf
push
inc
or
neg
jmp
ins
jo
je
clc
push
mov
mov
push
test
leave
xchg
fwait
and
lahf
xchg
mov
sar
jle
sub
inc
dec
xchg
sub
push
push
adc
inc
call
xchg
push
movs
mov
adc
cmp
movs
adc
cmc
xchg
jle
test
cmp
sbb
inc
adc
clc
add
(bad)
pop
and
sahf
xchg
jb
call
cwde
mov
mov
icebp
aaa
jg
sub
scas
cld
cmp
jmp
dec
(bad)
call
cmp
hlt
out
rcr
cwde
xor
pop
in
jmp
call
sub
pop
repz
jb
nop
pop
jmp
addr16
call
inc
fnstcw
repz
sbb
ror
inc
inc
jecxz
ret
or
loope
popf
sbb
mov
cmp
cmps
or
pop
sub
cmps
stos
cli
leave
test
xor
cmp
dec
mov
lea
hlt
aaa
ret
push
stos
call
mov
lock
into
mov
enter
ja
push
inc
(bad)
aas
sbb
lds
dec
stos
push
pop
shl
shl
mov
sti
inc
rcl
out
jae
mov
inc
fdivr
dec
or
(bad)
xor
call
cs
repnz
ret
repz
scas
mov
mov
and
sahf
mov
lock
or
popf
pusha
sbb
ret
mov
mov
push
in
in
ret
daa
jmp
int3
jecxz
sbb
or
je
fstp
and
rol
add
cmp
add
cmp
add
adc
mov
mov
loopne
jae
test
mov
or
cmps
mov
test
inc
lds
dec
mov
inc
js
in
mov
icebp
xor
sub
movs
fisubr
mov
cs
mov
out
xchg
push
fnstenv
je
and
sbb
cmp
sub
ret
out
loopne
mov
sub
xchg
je
in
cmps
int3
(bad)
dec
shl
jnp
out
mov
xchg
shrd
cmps
or
cld
and
inc
mov
mov
inc
push
pop
xlat
les
fidiv
cli
clc
daa
aaa
adc
inc
xor
xchg
movs
pop
xor
ins
add
clc
in
iret
cmp
not
adc
xchg
sbb
sbb
mov
fs
or
sbb
jbe
xor
fimul
pop
cs
cmp
test
dec
and
out
sub
cdq
fst
(bad)
enter
out
mul
dec
outs
xchg
xor
xchg
adc
dec
add
or
xchg
rcr
pop
rcr
mul
pop
sub
mov
outs
add
adc
mov
in
mov
add
mov
mov
pop
lahf
cmp
xchg
test
je
ds
jno
sbb
and
and
scas
scas
dec
sahf
xlat
movs
adc
std
adc
and
(bad)
ret
lods
fs
pop
add
lods
in
cmps
jno
or
jl
cld
push
xchg
xor
je
dec
dec
loop
in
ins
scas
ja
pop
ins
ret
adc
(bad)
dec
dec
loope
pop
(bad)
aad
or
mov
mov
sub
int3
inc
inc
adc
xor
xchg
es
dec
loopne
out
shl
pushf
mov
mov
clc
push
shr
xor
test
mov
cmp
pop
mov
retf
je
fwait
mov
inc
popa
cmp
sub
mov
adc
jb
je
jl
add
(bad)
jg
sbb
push
push
xchg
fcom
push
mov
stc
fs
nop
jmp
push
sub
rcr
fdiv
iret
push
enter
jno
inc
mov
sar
clc
mov
pop
and
in
push
into
push
outs
sar
mov
push
xlat
adc
lds
xor
add
movs
push
push
outs
ds
or
adc
mov
(bad)
(bad)
jp
scas
adc
int3
lods
sti
inc
cwde
cmps
movs
gs
lahf
add
jno
inc
mov
(bad)
popa
xchg
movs
mov
adc
or
cmps
aad
fs
cmp
xchg
mov
retf
inc
add
sar
cwde
sub
div
mov
jge
jnp
jmp
pop
push
popa
xor
arpl
ds
jmp
test
xor
aaa
mov
jo
mov
rcr
push
mov
ror
dec
mov
fisttp
in
dec
xchg
mov
jl
mov
and
iret
pop
fcomp
(bad)
rcl
add
arpl
pop
scas
push
xlat
xlat
add
and
jmp
xor
in
fist
inc
mov
adc
test
jns
sbb
ins
ret
or
data16
mov
mov
scas
test
(bad)
cmp
stc
mov
fs
mov
fisubr
pop
pop
outs
xlat
sub
pop
out
push
fst
jo
popa
jno
xchg
repz
mov
jae
adc
ins
mov
mov
inc
sbb
clc
jnp
aaa
dec
cwde
mov
and
dec
jp
mov
add
jg
and
aaa
ins
jbe
xor
add
push
xor
push
cld
or
gs
inc
cmc
pushf
mov
sub
cmps
sahf
dec
push
inc
dec
mov
mov
(bad)
add
inc
xchg
into
adc
pop
retf
in
cli
stc
fld
xor
mov
cmp
mov
push
call
or
cld
or
or
outs
aaa
(bad)
adc
xor
or
and
daa
mov
lods
scas
mov
cwde
jp
pop
sti
inc
sbb
or
xor
inc
das
je
les
inc
mov
mov
jle
mov
pushf
mov
mov
xchg
loope
repz
out
xor
in
in
and
xor
or
jp
jp
or
in
adc
retf
cmp
ss
or
mov
jne
cli
jbe
sbb
call
pop
dec
arpl
cmp
gs
scas
jge
daa
jecxz
popf
adc
aam
sub
push
xchg
ins
je
dec
shl
sbb
fwait
(bad)
das
inc
inc
mov
neg
int3
and
out
mov
fsub
inc
lods
inc
int
cmp
(bad)
push
sub
mov
cmps
mov
popf
imul
mov
xor
jl
xchg
mov
xchg
gs
xchg
xchg
jmp
outs
pop
pop
push
(bad)
mov
dec
cmp
push
push
int
inc
cmc
pop
or
sbb
mov
repz
aad
cli
sub
js
pop
test
sub
pusha
mov
jnp
cmp
inc
test
inc
mov
(bad)
ficom
jbe
sub
repz
adc
(bad)
and
xor
stos
call
into
daa
mov
call
add
(bad)
cli
div
jb
push
clc
sub
or
add
cmp
pop
push
pop
jno
cwde
fidiv
cmp
(bad)
sub
dec
jecxz
dec
addr16
inc
in
bound
xor
je
adc
dec
inc
mov
inc
cmp
test
pop
lahf
out
in
xor
mov
stc
retf
push
stc
adc
pop
mov
push
jecxz
push
push
dec
mov
retf
jecxz
retf
sahf
bnd
out
xchg
out
or
inc
jns
jle
andnps
inc
retf
shl
jae
adc
iret
lahf
pop
sbb
scas
repnz
inc
or
push
jecxz
mov
adc
mov
data16
inc
pop
inc
les
push
mov
xchg
ret
bnd
and
stc
dec
push
xor
xor
jns
mov
push
popf
sub
sbb
lea
sub
xchg
(bad)
(bad)
and
dec
stc
inc
ficom
xor
mov
mov
or
lods
test
mov
mov
or
mov
add
xchg
fs
mov
mov
sti
(bad)
xacquire
jno
xor
movs
rcr
pushf
(bad)
fld
ds
repnz
pusha
cmp
inc
mov
inc
cmp
outs
mov
out
pushf
mov
inc
loopne
add
in
push
jno
xor
(bad)
mov
xor
test
outs
(bad)
sbb
xchg
ja
jno
pop
jae
dec
fistp
cmc
stc
add
je
and
shl
mov
jg
sbb
lahf
loope
or
pop
sbb
add
jb
push
dec
jbe
jbe
pop
mov
xor
aas
inc
dec
fnstenv
jo
or
enter
inc
fdivr
mov
call
jg
test
sbb
hlt
add
sbb
ror
sub
test
test
sbb
test
ror
scas
mov
lds
sti
mov
movs
in
movs
ins
mov
bound
push
fild
cli
out
xor
lods
xchg
pop
pop
jne
inc
in
das
das
sub
cmp
gs
imul
mov
mov
in
sti
cmp
(bad)
ret
mov
bound
sar
mul
add
jl
fdivr
xlat
data16
popf
pop
add
pusha
or
not
iret
ror
scas
xchg
mov
pushf
pop
and
stos
test
mov
cmp
out
cli
shl
loopne
adc
hlt
push
scas
out
push
add
data16
pandn
dec
je
mov
add
jg
retf
test
mov
ficomp
add
call
retf
jns
movs
sub
and
lea
in
pusha
movs
xor
repnz
push
jb
cli
(bad)
jmp
call
std
repz
mov
cs
inc
xor
shl
sub
ja
fs
xlat
cmps
adc
pop
push
ds
xchg
das
mul
xor
int3
mov
or
xchg
pop
and
nop
jecxz
pop
scas
mov
mov
fwait
jp
in
push
inc
fwait
stc
das
jg
icebp
add
psrld
test
nop
(bad)
cld
test
fucompp
rcl
or
jae
pushf
jg
arpl
clc
ss
adc
fidiv
inc
int
xchg
jb
pop
aam
sub
sbb
push
sub
mov
fstp
or
aam
mov
cdq
add
daa
inc
push
pop
adc
mov
retf
xlat
jmp
sub
lea
mov
outs
push
call
fnsave
ins
or
inc
sbb
xor
popf
push
or
pusha
fisub
xor
fistp
addr16
jne
int
leave
mov
lods
cmp
test
mov
sbb
sti
ds
cmp
std
pop
(bad)
outs
or
xchg
push
mov
pop
jae
mov
adc
(bad)
hlt
fiadd
xor
jae
in
cld
jbe
(bad)
fcmovb
sbb
ret
ficomp
fstp
lods
ins
cmp
mov
dec
jbe
dec
cmps
test
shl
test
data16
dec
push
test
xchg
loope
mov
add
pop
dec
jo
xor
lahf
jb
(bad)
(bad)
es
dec
fnstenv
movs
xchg
pop
loopne
pushf
inc
cwde
adc
xor
and
xlat
fmul
ja
mov
inc
mov
push
mul
adc
pop
sub
jo
mov
jae
xchg
movs
jecxz
adc
inc
test
call
xor
xchg
retf
lea
popa
in
icebp
in
fprem1
cmps
add
mov
cmp
push
dec
ror
aam
iret
pop
sbb
sub
fmul
jno
sbb
lods
mov
adc
(bad)
lods
cvtpi2ps
fisub
mov
adc
out
shr
add
icebp
(bad)
sbb
push
or
cmc
fld
int
into
mov
xchg
popf
adc
cmp
leave
enter
rcl
shl
xor
pop
sti
movs
cli
ret
jmp
cld
outs
xor
out
sub
or
lods
inc
jecxz
sbb
imul
(bad)
call
(bad)
std
lods
pop
jmp
sbb
repz
add
xchg
pop
scas
add
mov
int3
or
out
or
icebp
jne
shl
adc
or
icebp
loopne
loopne
add
adc
sbb
xlat
push
in
hlt
jnp
cmp
test
push
lea
jo
in
retf
stc
arpl
stos
ret
xchg
add
add
mov
std
xor
mov
outs
das
or
inc
pop
imul
test
mov
adc
xor
jo
addr16
dec
push
rol
pop
xchg
call
adc
adc
sbb
mov
je
mov
stos
inc
nop
jecxz
or
cmp
sub
jmp
mov
or
push
fcmovnbe
inc
test
sub
dec
out
ss
test
and
aam
xchg
dec
jnp
mov
inc
inc
cld
shl
push
and
in
dec
or
mov
test
shl
xor
cli
ficomp
push
ja
xchg
push
dec
dec
and
dec
or
lods
das
test
je
jne
inc
mov
sbb
pop
mov
(bad)
popf
shl
sub
and
jns
cwde
aad
add
int3
pusha
das
movs
pop
xchg
js
push
xor
out
pop
fucom
outs
xchg
fs
mov
call
mov
xlat
scas
mov
pusha
fld
retf
pop
jae
mov
pop
frstor
retf
sub
test
mov
(bad)
mov
xchg
cmp
repz
frstor
popa
xor
pop
pop
or
das
or
test
aad
add
xchg
push
jge
inc
mov
cs
add
js
pop
retf
xor
pop
add
mov
lods
push
push
mov
stos
test
jne
loopne
test
add
adc
and
repnz
mov
mov
out
ficomp
sahf
bnd
mov
out
pop
xor
add
sub
and
push
cmp
mov
(bad)
pop
pop
das
pop
loopne
(bad)
fmul
fiadd
loope
xchg
xchg
icebp
sub
jae
adc
cwde
dec
loope
imul
cmps
pop
cmps
mov
fidivr
fcomip
shl
xor
jbe
loopne
sub
or
sbb
inc
leave
call
mov
and
inc
cmp
pop
(bad)
mov
adc
jns
(bad)
mov
stos
jge
or
add
mov
loopne
test
fimul
repz
mov
movs
cdq
inc
xchg
in
sbb
or
xchg
(bad)
ins
enter
mov
mov
mov
add
jl
pop
or
dec
cmp
push
mov
add
cmp
sti
xchg
fcomp
xchg
cdq
cmps
jne
ret
dec
cmp
mov
mov
fild
mov
aam
repz
and
push
jp
add
mov
inc
aaa
and
adc
arpl
les
sub
or
cmp
mov
pop
aas
jmp
sub
ret
fadd
pop
cmp
dec
sub
(bad)
ficomp
repz
jmp
push
xor
inc
pop
adc
leave
in
pop
ret
lahf
fidiv
sbb
jmp
add
adc
adc
pop
cld
xchg
sbb
jecxz
mov
ins
pop
(bad)
movs
inc
std
sub
shl
addr16
int3
xor
in
into
leave
and
pop
pushf
or
out
cmp
les
shl
mov
jno
gs
push
ja
jge
pop
pop
xchg
sub
inc
in
dec
test
cmp
xor
sbb
ja
div
and
and
loop
repz
loop
xchg
push
dec
fwait
jbe
iret
pop
and
movs
je
aaa
imul
xchg
mov
aad
jns
enter
stos
out
add
mov
pop
aaa
push
dec
push
inc
dec
mov
xchg
sti
fs
rol
inc
mov
dec
or
iret
dec
adc
sub
sub
jo
inc
repz
ins
in
mov
popa
dec
mov
cmp
push
push
fwait
pop
push
repnz
test
xchg
mov
cs
cmp
pop
push
mov
push
inc
sbb
loopne
add
and
mov
out
adc
add
hlt
aad
test
push
push
xor
mov
adc
adc
mov
call
cli
inc
or
repnz
xor
adc
cli
int
call
xor
xchg
inc
inc
out
inc
retf
int
imul
sbb
push
mov
mov
adc
pusha
rcr
pop
push
sbb
adc
(bad)
cmp
dec
pop
mov
jno
ja
mov
sub
shl
mov
in
cmp
ss
in
ret
mov
mov
call
xchg
in
icebp
sbb
test
fimul
mov
nop
stos
fld
ficom
les
mov
mov
repz
dec
ret
lds
cmp
pop
and
cmp
aam
not
aas
lods
and
adc
lods
icebp
inc
iret
(bad)
sbb
dec
in
dec
stc
popf
daa
inc
jb
(bad)
or
test
test
cld
leave
cmc
add
push
push
mov
add
sahf
sti
imul
mov
test
sub
test
retf
and
es
repnz
mov
dec
cmp
mov
int
mov
cmps
sbb
addr16
xchg
jle
leave
retf
out
in
leave
or
push
and
sub
fidiv
cli
pop
jmp
fdiv
ins
das
rol
or
push
(bad)
cmp
jecxz
es
(bad)
or
popa
push
out
imul
xlat
and
jns
fwait
add
mov
cmc
(bad)
mov
lods
ja
add
inc
xchg
jo
les
ss
add
das
and
sub
aas
inc
push
das
(bad)
out
std
fwait
and
ret
xchg
lds
paddusw
inc
cmp
add
xchg
loopne
icebp
aam
mov
out
int
lea
mov
xor
das
xcrypt-ofb
cmps
ins
push
and
and
mov
repnz
jo
inc
adc
test
mov
jge
data16
dec
sub
push
and
into
les
mov
add
mov
scas
pop
sub
movs
xor
jno
xchg
cmp
adc
popa
inc
(bad)
jl
push
mov
aas
mov
jg
push
(bad)
cmp
cmps
xchg
fwait
call
(bad)
push
stc
xor
mov
das
cli
rcl
push
pop
repnz
lock
cli
and
lds
iret
jecxz
int
ffreep
sub
xlat
daa
fisubr
popa
sbb
pop
inc
arpl
jns
pop
sub
cvtps2pi
cmp
out
inc
(bad)
dec
ins
inc
pop
rcr
xchg
cmp
sub
dec
shr
sbb
pop
(bad)
push
xor
mov
sbb
push
lock
cs
call
ins
jmp
mov
add
pop
mov
jp
gs
dec
dec
pop
sub
mov
jecxz
sub
aaa
add
mov
stos
test
pusha
mov
sbb
xlat
ds
jmp
aam
shr
lods
cmp
int
fist
fsubr
out
push
sar
sub
fimul
scas
mov
mov
push
rcl
daa
mov
loope
pop
scas
jg
call
sub
sbb
in
add
sar
aad
push
popf
lods
push
push
and
(bad)
jecxz
dec
aaa
fnsave
dec
leave
mov
adc
jle
and
inc
test
pop
jge
ja
lea
es
lods
and
add
sbb
xchg
sahf
xor
jbe
in
outs
xchg
push
mov
test
or
adc
dec
pop
sub
mov
xor
sar
add
lods
call
sbb
mov
add
jns
and
xchg
ret
add
dec
retf
and
hlt
mov
cmp
add
lds
es
scas
ficom
sbb
dec
aas
jbe
adc
(bad)
pusha
inc
mov
clc
pop
inc
rol
scas
pop
push
hlt
pop
lds
jg
mov
push
adc
mov
inc
jns
in
shl
enter
mov
stc
sub
mov
dec
jno
test
add
or
pop
xchg
clc
ins
mov
popf
jbe
jmp
cmps
push
adc
imul
pusha
mov
lea
push
out
lds
xor
xchg
mov
into
push
(bad)
fcmovne
enter
jp
xchg
mov
adc
pop
and
outs
mov
(bad)
loope
and
inc
out
sbb
bound
ins
jae
or
push
sti
lods
lea
sub
or
jl
xor
out
mov
mov
and
call
or
inc
jg
mov
xchg
(bad)
sbb
(bad)
sti
pop
pop
cli
dec
das
or
pop
add
xor
(bad)
dec
loopne
mov
or
mov
mov
sbb
cmp
mov
pop
inc
movs
jb
sub
into
mov
xchg
cmp
sub
or
ret
fnsave
mov
push
mov
ficomp
inc
clc
or
inc
loope
cmps
xor
add
sub
cmc
fwait
ja
jnp
out
ds
(bad)
sbb
xlat
call
xor
and
mov
ins
push
in
shr
hlt
je
and
cdq
and
fdiv
cmp
push
ss
push
adc
cmp
aas
inc
les
leave
mov
add
in
es
push
daa
and
adc
inc
adc
fild
aas
cmps
in
aad
jo
mov
out
fsubrp
jge
shr
xlat
xor
add
mov
stos
ret
xor
cmc
sahf
mov
push
jmp
lahf
pop
cld
into
mov
call
scas
sar
jne
jno
and
out
dec
pusha
jmp
push
ficom
enter
mov
add
call
push
sahf
lods
gs
mov
(bad)
iret
lahf
dec
(bad)
in
and
iret
ret
jbe
and
mov
in
stos
daa
push
sbb
ins
or
psubb
nop
outs
movs
inc
push
xchg
add
and
data16
add
pop
sub
nop
outs
xchg
jno
cli
add
aad
dec
dec
sbb
frstor
scas
jmp
adc
dec
sub
es
les
sbb
retf
imul
aad
xchg
fdivr
add
dec
in
mov
or
xchg
sbb
call
mov
test
mov
psraw
adc
mov
mov
aas
xchg
mov
xchg
scas
dec
data16
adc
and
push
sar
ja
jae
jns
test
sub
sbb
adc
cmp
sub
inc
mov
and
(bad)
adc
stos
fist
xchg
add
cmp
popa
movs
out
jo
test
ja
(bad)
adc
xor
xchg
mov
rol
add
jmp
pop
mov
push
xchg
pop
std
xchg
push
push
mov
mov
push
js
out
(bad)
out
mov
jmp
mov
xchg
inc
in
iret
ins
loop
jmp
inc
adc
inc
cmc
shr
cld
out
jle
push
xchg
cmp
push
ins
cmp
addr16
mov
xchg
lahf
call
xchg
mov
movs
je
jb
xchg
sub
loopne
mov
stos
loop
scas
inc
inc
ficom
and
mov
mov
stos
fiadd
jb
rol
xchg
inc
(bad)
int3
mov
ret
movs
sar
cld
xchg
xchg
jo
inc
clc
or
nop
push
dec
test
not
push
xchg
outs
pusha
pop
pop
in
mov
jnp
lock
sub
dec
sbb
add
iret
jl
inc
dec
call
lods
push
les
dec
loope
pushf
sub
push
jg
jecxz
push
retf
mov
mov
enter
adc
bound
movs
arpl
xlat
mov
nop
mov
movs
(bad)
int
les
mov
cmc
sbb
inc
aas
mov
mov
aad
mov
(bad)
enter
in
ja
je
xchg
ins
out
pusha
call
push
cmps
in
adc
xlat
repz
(bad)
or
jl
mov
add
retf
sbb
push
push
jg
sub
jnp
sar
and
fidivr
inc
aad
inc
dec
mov
dec
mov
push
loope
lds
ret
jmp
push
sahf
das
sahf
data16
push
pop
shl
jb
push
retf
cmp
add
xor
ret
mov
mov
mov
popa
add
add
stc
call
inc
mov
leave
pop
mov
xor
daa
sar
(bad)
inc
push
push
sahf
cmp
push
add
inc
test
sub
cmp
mov
je
in
dec
gs
(bad)
sbb
push
cmp
mov
int3
cmp
stos
xor
or
lahf
or
ins
in
mov
dec
jle
pop
fs
sar
sbb
adc
outs
sbb
xchg
repnz
(bad)
dec
cmp
movs
mov
pop
jg
push
or
mov
mov
adc
hlt
icebp
inc
or
mov
ror
xlat
clc
outs
cmp
jmp
mov
movs
cwde
loope
jne
test
fstp
(bad)
adc
sub
xor
lahf
sar
xchg
pop
xchg
dec
test
fistp
stos
lods
pop
shl
int3
push
mov
cmp
stc
fld
loopne
bound
retf
(bad)
mov
pop
dec
mov
(bad)
jecxz
jp
outs
test
xchg
xchg
sbb
or
mov
sti
outs
mov
pop
xchg
test
xchg
inc
es
mov
pusha
mov
pop
stc
ret
fisttp
hlt
call
into
das
nop
mov
(bad)
mov
cmp
add
pop
nop
xchg
push
jne
rol
lea
adc
dec
leave
scas
xor
sbb
xlat
aas
xor
popa
(bad)
jmp
push
xor
or
xchg
mov
xor
mov
mov
div
dec
div
add
sub
or
sub
adc
ficomp
fdiv
je
mov
stos
out
mov
lds
adc
fdivr
in
test
mov
xor
fwait
mov
cmp
ins
mov
hlt
sbb
fs
fnstenv
xchg
sub
and
push
dec
popf
retf
xor
cli
inc
cli
mov
adc
(bad)
push
inc
mov
out
sbb
inc
jbe
mov
scas
dec
call
test
pop
aaa
or
(bad)
mov
or
jnp
dec
cmp
jbe
je
jge
or
sub
add
adc
aaa
jle
into
call
scas
mov
aam
nop
push
in
imul
shl
inc
inc
call
mov
fincstp
mov
sbb
mov
stos
xor
outs
movs
ja
hlt
xlat
inc
repz
push
bound
adc
mov
daa
push
enter
pop
call
or
dec
push
sub
pop
int3
clc
push
dec
cwde
fmul
fimul
dec
ja
push
and
loope
stos
xchg
inc
xchg
int3
aam
fld
dec
mov
jg
enter
jmp
or
in
cmp
(bad)
test
repz
loope
test
cmps
mov
out
movs
jo
outs
ins
xor
push
fdivr
cmp
repz
dec
test
fwait
imul
jne
(bad)
out
adc
mov
icebp
sbb
test
jno
iret
aas
mov
fst
popf
mov
data16
nop
jo
stos
sbb
arpl
xchg
adc
out
ins
pushw
lea
jae
fwait
inc
fwait
cmp
sbb
sub
les
sbb
in
or
mov
inc
call
sbb
(bad)
cdq
jge
popa
or
xchg
dec
mov
into
imul
std
push
in
add
sti
pop
dec
std
imul
int
mov
xchg
outs
sub
enter
leave
or
inc
adc
shl
xor
sar
push
popf
fnstenv
(bad)
idiv
sbb
pop
adc
adc
xor
mov
imul
int
jp
arpl
add
pop
shl
outs
ins
sbb
in
dec
mov
mov
adc
fld
ins
cmps
sub
pop
cmps
pop
xchg
adc
push
xchg
pop
xchg
and
sub
mov
or
retf
mov
mov
loop
push
sbb
push
cdq
adc
into
add
lahf
xchg
mov
clc
sub
js
push
test
pop
rcl
mov
sbb
les
loopne
dec
fs
and
out
inc
mov
aad
gs
cmp
les
and
pop
mov
dec
aaa
js
cld
inc
fidivr
push
mov
add
mov
jne
push
std
cmp
daa
out
movs
popa
mov
dec
jo
iret
xchg
add
push
popa
jne
xchg
jle
mov
rcl
ret
pusha
sbb
jne
test
lock
jno
neg
sub
mov
mov
rol
sti
repnz
sub
lea
fucomi
out
leave
jns
(bad)
sub
pusha
pusha
and
jo
jnp
data16
loopne
cmp
movs
stos
mov
mov
sub
sar
sti
sbb
jmp
mov
pop
mov
sbb
idiv
lods
cmps
les
push
pop
fwait
rcr
rcr
fstp
rcl
or
in
dec
xor
xchg
fs
pop
shl
jns
inc
lea
addr16
in
in
sub
and
das
push
cld
sub
mov
in
ins
ror
clc
aaa
mov
out
jmp
or
fidiv
push
xchg
sbb
cli
call
movs
xchg
pop
call
jno
mov
pop
or
bound
popa
xor
popf
fist
gs
mov
sub
stos
jmp
cmps
pusha
(bad)
arpl
cli
mov
fadd
pop
jp
add
and
and
mov
mov
adc
cmp
not
cdq
cwde
jb
js
out
pop
mov
sbb
xor
(bad)
push
jge
scas
shl
fs
sub
dec
mov
or
repnz
es
retf
scas
mov
mov
mov
mov
cmp
sbb
in
xchg
pop
xchg
mov
jl
xor
mov
xchg
int
add
xor
test
mov
aad
mov
(bad)
mov
retf
lock
jmp
not
ror
mov
xchg
ins
sbb
push
inc
ds
inc
out
sbb
data16
mov
pop
loop
data16
sub
into
sub
enter
or
lds
dec
pop
jno
mov
fnstcw
out
inc
mov
sbb
je
ficomp
rcl
aad
mov
mov
mov
dec
inc
jno
xor
adc
sbb
pop
ret
sbb
mov
mov
xchg
jl
pop
push
pushf
out
pop
push
inc
mov
in
xor
icebp
outs
mov
or
(bad)
repz
dec
jg
bnd
pop
sahf
addr16
push
inc
hlt
dec
cmp
sbb
jnp
pop
enter
pop
cmp
fsubr
loopne
popa
retf
mov
mov
jnp
mov
fcom
cmp
inc
or
adc
adc
loope
jg
mov
push
movs
fild
inc
inc
pop
xchg
sub
shl
xchg
ja
mov
push
pop
test
push
nop
popf
add
xchg
clc
retf
mov
repnz
lea
(bad)
icebp
mov
pop
repz
xor
bound
dec
mov
out
cdq
lock
imul
pushf
test
nop
xchg
into
clc
add
int
mov
in
pop
stc
out
into
inc
inc
test
inc
test
or
cmps
pop
aad
in
or
fs
add
stc
popa
outs
dec
push
dec
aaa
cmp
shl
pop
pusha
ja
cmps
cs
sbb
or
aas
xor
xchg
add
das
sbb
push
cmp
mov
xchg
mov
pop
sub
add
xor
inc
out
cdq
cwde
mov
jmp
int
mov
inc
sbb
xchg
ins
mov
pop
call
push
std
adc
jle
mov
sbb
sbb
push
and
repz
call
pop
out
jl
loope
jno
pop
mov
mov
inc
addr16
sahf
adc
test
lds
push
out
mov
idiv
aaa
mov
ja
daa
dec
mov
mov
mov
popa
mov
cmp
or
mov
std
movs
push
push
inc
ret
inc
push
outs
retf
fcmovbe
(bad)
out
push
aad
pop
add
clc
pop
jae
and
vpcmpgtd
push
fs
leave
out
xor
xchg
cs
movs
addr16
sti
mov
jl
fmul
adc
mov
jg
cmp
adc
call
dec
mov
jns
and
test
in
cs
aas
adc
icebp
push
inc
imul
mov
xchg
jp
clc
into
popf
add
push
xlat
mov
sti
int3
jnp
int
cmp
jp
loopne
pop
mov
mov
jo
ins
jae
outs
shl
ret
mov
pusha
pop
test
or
sbb
xor
shl
inc
xor
movs
mov
adc
aas
js
cli
vmulps
fs
sub
out
dec
sub
mov
retf
inc
jbe
pop
movs
push
inc
xor
fist
push
cmp
repz
xchg
mov
sub
retf
xchg
js
cmps
add
xor
or
clc
pop
pop
leave
cmc
into
mov
jge
xor
js
lods
and
adc
cmp
movs
mov
jl
call
or
retf
jmp
inc
call
cmps
pop
or
test
cmp
dec
dec
adc
lods
mov
mov
test
addr16
inc
mov
in
into
lds
dec
ins
cmp
scas
sbb
jle
seta
(bad)
push
cmp
bound
jle
dec
ror
jnp
mov
cmc
mov
dec
sahf
sbb
pop
daa
enter
cmp
call
icebp
fwait
pop
or
(bad)
(bad)
sub
adc
cmp
std
movs
inc
pop
(bad)
dec
in
aad
adc
loop
shr
push
test
loope
shr
fwait
call
dec
pusha
ins
int3
jg
aas
jns
addr16
sbb
xchg
inc
mov
or
(bad)
xlat
dec
or
cmp
fsubr
or
cdq
dec
dec
cmps
fcmovbe
fist
cmp
add
add
aad
ror
test
fld
pop
lods
(bad)
std
outs
je
sub
popf
sub
(bad)
stc
push
or
lds
and
sbb
mov
xor
or
out
adc
mov
jb
sub
clc
aaa
pop
(bad)
push
inc
mov
jmp
rol
fiadd
loopne
pusha
ret
pop
inc
and
mov
and
sbb
adc
push
ror
aaa
aad
daa
pushf
and
cmp
movs
movs
jne
xlat
retf
mov
cmp
fdiv
jge
and
loop
out
lahf
out
sub
(bad)
popf
cmp
inc
mov
push
mov
sbb
push
dec
sar
in
adc
clc
(bad)
sti
adc
outs
dec
push
sub
mov
nop
cld
mov
call
clc
shl
pop
jmp
mov
inc
adc
or
iret
(bad)
jb
ins
xchg
pop
int
daa
mov
adc
sub
dec
sbb
js
out
mov
cmp
ror
lods
xchg
jl
sub
pop
stc
leave
jl
pop
xchg
loope
(bad)
mov
adc
and
inc
mov
xchg
test
fisub
cwde
popf
adc
xchg
cmp
jnp
pop
stos
add
cmp
sub
inc
push
test
jmp
push
sub
imul
jg
add
mov
xchg
int3
arpl
das
std
(bad)
inc
sub
mov
fimul
lea
mov
ds
pop
in
or
outs
push
cmc
retf
mov
and
loopne
or
mov
add
mov
adc
jecxz
xchg
push
cld
clc
adc
call
xor
xor
mov
out
test
pop
rcr
hlt
jge
iret
les
mov
pop
int
(bad)
sub
mov
mov
jl
ja
pop
xor
and
shl
xchg
pop
adc
aad
je
add
cld
and
cmps
sub
mov
movs
add
or
popf
dec
sub
pushf
aad
in
pop
nop
js
inc
push
or
popa
aad
icebp
test
xchg
test
loopne
push
cmp
js
inc
ja
outs
cmp
adc
sbb
aaa
repnz
lods
mov
sub
pop
imul
shl
and
shl
scas
xchg
ror
repnz
loope
in
repz
out
bound
imul
xchg
inc
test
test
adc
popa
aam
mov
test
in
pop
push
jmp
outs
add
mov
push
movs
push
test
das
aad
jae
push
dec
stos
mov
mov
imul
das
add
popa
stc
fsubr
or
jno
add
xor
add
popf
xchg
lock
pop
adc
nop
mov
bound
mov
mov
pop
mov
outs
sbb
push
movs
js
mov
sub
data16
arpl
outs
test
int3
sub
xor
jg
push
mov
mov
or
or
mov
adc
sub
stos
push
mov
sbb
mov
ss
sub
ror
xchg
shl
out
loopne
jbe
push
adc
(bad)
or
pusha
xor
mov
into
out
push
cmps
into
jae
shl
add
pop
(bad)
outs
xor
or
in
adc
xor
or
les
neg
xlat
mov
retf
rol
cmp
aas
fs
in
nop
sub
fdiv
and
and
rcl
dec
mov
dec
mov
mov
bound
loope
mov
rcl
test
cmp
xor
mov
dec
xchg
and
inc
xchg
push
jge
outs
loop
lods
std
and
scas
cmp
push
rol
inc
hlt
xchg
mov
mov
or
mov
lds
jbe
push
jbe
jle
stos
sub
inc
lahf
call
mov
ss
mov
(bad)
mov
cwde
mov
jns
push
enter
lods
test
lahf
push
ret
in
sbb
fcomi
fcomip
pop
ins
cs
retf
jbe
cdq
call
rcr
push
inc
aam
out
fsub
mov
adc
data16
xchg
inc
ret
cmp
xor
in
ja
ja
test
jg
scas
push
bound
mov
rcl
out
xor
cmp
iret
dec
ds
sbb
push
aad
xor
jle
jl
gs
xchg
lea
shr
sub
mov
je
mov
gs
sar
stos
cmp
popf
inc
mov
test
(bad)
mov
call
or
(bad)
movs
js
mov
stos
push
fdivr
leave
lds
and
out
or
pop
mov
mov
idiv
clc
lods
lods
dec
mov
inc
sbb
sbb
rcr
push
push
sbb
mov
inc
(bad)
xchg
dec
mov
call
push
mov
je
inc
mov
iret
sysexit
jmp
repnz
or
xchg
shl
ds
jp
repz
pop
cmc
pop
pop
icebp
cmp
or
rcr
push
neg
jp
dec
lahf
idiv
pop
ret
fs
dec
inc
mov
ins
(bad)
ss
xchg
arpl
mov
mov
or
add
pop
addr16
cmp
push
lds
and
leave
xor
out
aas
mov
mov
es
rol
or
pop
adc
and
repnz
sub
adc
xchg
je
repnz
lahf
xor
jne
call
fsubr
xor
in
mov
ins
int
inc
sahf
xor
inc
mov
(bad)
stc
mov
push
shl
mov
scas
bound
into
lahf
xor
mov
mov
fistp
inc
mov
sub
adc
or
gs
and
mov
and
mov
jb
cmc
fidivr
aam
mov
jg
and
push
pop
stos
(bad)
push
cld
fst
mov
popf
sub
setge
xor
fucomp
out
add
mov
in
jno
jge
mov
and
adc
cmp
call
ss
cld
ins
mov
cmps
(bad)
retf
sbb
rol
cld
mov
jbe
adc
cmp
dec
sahf
arpl
cld
movs
addr16
fsub
inc
ds
cmp
cs
ja
push
dec
xchg
xchg
aas
mov
push
adc
xor
or
xchg
mov
push
jg
xchg
in
add
cld
adc
ret
adc
hlt
push
das
push
(bad)
fimul
xor
add
pushf
call
repz
and
sub
jbe
fcomp
pop
mov
cmc
mov
push
xchg
bound
push
cs
jg
neg
inc
pop
les
push
(bad)
ins
movs
mov
mov
pop
pop
outs
push
loop
test
loop
movs
jb
xchg
sbb
jae
fiadd
mov
test
mov
cli
xor
(bad)
sub
pop
mov
pop
ja
xor
mov
dec
leave
sub
fisub
dec
jnp
cmps
in
dec
or
and
ficom
lds
push
xchg
pushf
nop
mov
adc
push
pop
cmp
xor
pop
adc
test
xchg
inc
ds
or
js
cmp
in
(bad)
dec
cmp
and
push
jo
ffreep
cmp
mov
mov
or
add
(bad)
ins
xlat
jns
adc
xchg
or
(bad)
repnz
sub
adc
jmp
rep
push
clc
pusha
icebp
lahf
cdq
inc
sub
das
add
sbb
int
test
lods
dec
mov
dec
(bad)
test
nop
pop
pop
jle
lods
mov
fsub
add
ror
stc
xchg
sbb
pop
dec
sub
xchg
jnp
int
xchg
sbb
int
adc
adc
push
not
xor
adc
mov
ss
imul
sub
lds
or
push
lods
or
and
mov
div
jge
mov
sbb
les
shl
hlt
out
adc
outs
sbb
out
les
or
or
adc
stc
push
(bad)
jecxz
xchg
mov
mov
repnz
rol
and
cld
add
scas
add
mov
add
sbb
mov
pop
jg
xchg
pop
lea
hlt
mov
mov
hlt
popf
std
mov
push
lock
xchg
sub
and
shl
cmc
pop
pop
and
mov
adc
jmp
in
addr16
and
daa
sbb
add
sbb
(bad)
sub
cmp
(bad)
inc
and
stos
push
jo
xchg
dec
mov
or
and
jg
loope
dec
inc
mov
dec
(bad)
jmp
fcos
xchg
idiv
shl
movs
cmp
scas
sbb
or
popa
mov
add
data16
dec
or
jae
mov
les
or
add
popa
aam
(bad)
push
cmp
cld
and
dec
mov
outs
dec
dec
and
sub
jl
rol
add
cmp
lods
push
mov
rol
pop
dec
adc
add
shl
xchg
dec
xchg
test
(bad)
repnz
push
cmp
movs
(bad)
frstor
test
mov
test
mov
sub
pop
or
dec
icebp
es
ins
sahf
pusha
aas
jns
pusha
dec
mov
sbb
cld
adc
mov
(bad)
mov
push
std
(bad)
lods
ins
jb
into
retf
lds
push
test
xchg
call
shl
sub
mov
enter
mov
jmp
add
pop
nop
push
pop
inc
loope
into
jo
and
sbb
mov
(bad)
xchg
popa
and
dec
push
movs
packsswb
xchg
cmps
mov
bound
jl
adc
jno
shl
sub
das
mov
mov
and
mov
inc
or
xor
jo
mov
inc
xlat
cwde
mov
jno
dec
scas
popf
xor
sub
mov
imul
jbe
adc
mov
cmps
sub
jo
(bad)
mov
cmp
outs
fistp
xchg
dec
xchg
retf
xor
scas
mov
add
movs
test
into
cmp
test
adc
cmc
push
int3
js
fisub
daa
clc
dec
aaa
lock
in
mov
cdq
mov
cmc
or
jp
mov
fcmovb
xchg
ret
dec
(bad)
cmp
scas
mov
dec
xor
or
add
jl
lods
xchg
mov
pop
mov
(bad)
in
(bad)
push
fadd
xchg
jp
add
data16
sbb
adc
lods
inc
test
outs
(bad)
sbb
stc
jecxz
rcr
sub
mov
stos
push
or
cli
pop
mov
jmp
loop
mov
mov
idiv
xchg
inc
xchg
movs
xor
cmps
fs
or
dec
stos
xor
dec
cmp
and
adc
clc
and
dec
bound
dec
in
jmp
aad
add
dec
(bad)
addr16
xor
add
(bad)
cmp
mov
in
imul
mov
shr
sub
xchg
jae
pop
mov
xor
cs
cmps
test
push
xchg
add
xchg
pop
pop
rcl
jmp
pop
cmp
jo
xchg
out
fdivrp
xor
lods
sbb
enter
jne
mov
in
shr
push
sub
loop
dec
imul
cdq
mov
jne
ins
movs
outs
cmp
push
jp
push
pop
mov
mov
fdiv
test
mov
jns
or
sahf
nop
add
cmp
lahf
and
mov
pusha
aaa
shr
cmp
aad
mov
cmp
int
cmc
test
inc
into
adc
shr
add
cmp
xor
lea
popf
retf
jle
jl
or
movs
dec
push
sub
or
popf
mov
add
mov
(bad)
aaa
fs
pushf
sar
enter
lds
adc
xor
stc
rol
dec
in
mov
push
mov
pop
sub
fiadd
cmp
push
pop
aas
mov
leave
cld
xor
jp
imul
cmp
cmp
push
popa
mov
fidiv
sub
mov
add
mov
xor
aaa
and
xchg
pop
mov
(bad)
sub
push
adc
jge
mov
inc
add
cmp
movs
xchg
mov
mov
dec
js
push
inc
scas
mov
lods
mov
and
adc
mov
imul
push
test
rcr
pop
pop
lea
inc
sar
(bad)
movs
repnz
pop
ins
loop
icebp
les
adc
outs
and
in
mov
push
jmp
dec
pop
cmp
and
scas
and
(bad)
in
(bad)
clc
or
pop
mov
mov
retf
lods
xor
(bad)
(bad)
inc
adc
lds
cli
scas
cmps
xchg
adc
xchg
mov
mov
clc
aad
loope
js
sub
pop
fistp
pop
mov
imul
cmps
push
es
mov
jne
pop
out
dec
or
jmp
int3
jmp
popa
xchg
dec
inc
rcr
ins
sti
jmp
sub
and
adc
or
cmp
addr16
scas
jp
enter
pop
jl
push
cli
pushf
or
dec
cmp
xor
in
cld
lea
xchg
cmp
dec
inc
jbe
out
imul
push
or
sub
add
xchg
mov
mul
inc
std
cmp
mov
shl
xor
out
iret
lods
push
mov
cmc
push
aaa
or
repz
aaa
stc
fsubr
mov
mov
pop
cmc
mov
test
setp
mov
in
outs
stos
push
or
pop
xor
mov
push
sub
ds
fdiv
icebp
cmps
xor
jno
sub
xlat
aas
mov
call
xlat
mov
cmp
sbb
lea
pop
sub
add
jge
outs
cs
rol
test
out
jg
mov
popa
sub
add
out
or
dec
mov
pop
jecxz
adc
or
add
std
nop
xchg
sub
loope
out
rcr
sub
hlt
fwait
and
mov
xor
fld
xor
cmps
cmp
and
mov
dec
push
push
retf
sbb
jnp
inc
(bad)
mov
pop
mov
mov
outs
out
mov
sbb
or
(bad)
add
add
push
dec
ins
enter
push
pop
mov
or
mov
xor
dec
add
xor
mov
fimul
cmp
sub
mov
aas
dec
sar
add
cwde
cmp
rcr
jbe
push
fnsetpm(287
movs
js
mov
ror
fdiv
shl
ffree
push
rcr
fidivr
aaa
fsub
jno
mov
xchg
les
xchg
push
sub
push
out
cmp
mov
or
dec
sub
out
repz
inc
dec
mov
dec
aaa
rol
stos
jno
push
imul
pop
mov
pop
test
test
xchg
mov
xchg
test
pop
scas
mov
aam
adc
jmp
arpl
pop
ins
popf
mov
out
aam
les
cmp
out
cwde
cmp
cs
fstp
sub
movs
aam
xchg
xor
ds
mov
out
adc
jae
push
popa
push
xor
aas
sbb
mov
xchg
aad
pop
jmp
dec
inc
mov
cmps
dec
adc
jmp
xor
xor
cmp
jecxz
mov
and
or
ds
fst
scas
cli
adc
jp
mov
xchg
cmps
pop
stos
(bad)
jnp
mov
mov
mov
or
ss
sub
mov
in
int
fdivr
test
xchg
dec
xchg
sub
inc
and
(bad)
rcr
lods
push
fld
in
xor
pop
or
mov
nop
int3
xor
jbe
popa
mov
pop
xchg
xor
pop
les
jg
in
lds
cwde
xchg
sar
mov
fbld
arpl
cmp
in
ja
pop
add
jbe
xchg
test
fcomi
mov
sbb
adc
je
sti
xchg
adc
inc
add
repnz
jo
sub
push
out
push
or
adc
in
stos
fdivr
pop
pop
test
xor
push
xchg
jae
push
test
movs
xor
mov
push
pop
xchg
push
cmp
mov
in
inc
cs
aaa
ror
jle
mov
dec
out
lods
inc
retf
pop
fwait
scas
jg
jae
pop
xchg
jb
mov
inc
xchg
inc
ins
add
(bad)
xchg
clc
mov
or
fiadd
sahf
ins
sub
test
loopne
mov
fild
ja
jne
ret
push
dec
fsubr
aad
xchg
adc
adc
test
pusha
jp
or
sbb
add
frstor
idiv
and
(bad)
push
loop
pop
xor
push
mov
inc
and
daa
push
xchg
repnz
sbb
mov
ins
cmps
repnz
imul
pop
dec
xchg
push
xchg
push
jmp
cmp
outs
adc
inc
es
rcl
out
mov
pusha
repnz
adc
mov
and
(bad)
cmp
push
adc
cs
into
jns
mov
lea
popa
jl
outs
sub
sub
das
mov
xchg
dec
stc
xchg
int
and
cmp
xor
push
leave
mov
sahf
jmp
and
pop
and
btc
adc
pop
inc
xchg
inc
pusha
mov
sbb
dec
sahf
(bad)
repz
test
sbb
das
mov
pop
clc
fwait
lock
mov
pop
cmp
cmp
dec
dec
and
xchg
in
inc
std
fistp
into
shr
add
(bad)
mov
(bad)
xchg
test
fisub
not
cli
aas
rcl
shl
neg
in
cs
inc
out
sub
and
(bad)
jle
adc
pusha
cmp
sub
sar
mov
inc
loop
xor
int3
add
je
jo
ss
mov
std
and
fs
or
daa
dec
jbe
or
xchg
cmp
mov
and
loope
mov
push
and
ror
mov
mov
repz
scas
sbb
outs
push
adc
iret
pop
and
retf
push
inc
or
bound
(bad)
sbb
push
imul
push
push
dec
sbb
inc
pop
scas
das
pushf
fidivr
push
fcmovu
mov
fidiv
fsubr
sbb
and
or
xchg
mov
pop
(bad)
add
mov
jp
sbb
mov
popa
pushf
jbe
dec
out
int3
dec
repz
sub
daa
jmp
fdiv
jbe
in
adc
test
aaa
jb
adc
push
jo
(bad)
jns
dec
stos
dec
(bad)
sti
and
push
cmp
mov
fsub
or
imul
addr16
lahf
sbb
jnp
and
loop
push
cmp
and
push
in
mov
pop
mov
mov
hlt
js
sbb
cmp
nop
test
jecxz
jecxz
sub
sti
aam
ss
dec
lahf
mov
mov
xchg
repz
ret
cmp
xor
xchg
(bad)
jecxz
loope
and
mov
sbb
test
push
fadd
lods
imul
pop
cwde
call
lods
in
pop
fwait
inc
mov
repz
sub
aam
jmp
dec
popa
repnz
icebp
jge
stos
into
stos
fild
adc
aad
sbb
push
gs
jne
or
mov
inc
cmp
and
in
out
jp
rcl
adc
jmp
xlat
data16
idiv
mov
ret
jge
jnp
fs
aad
jns
mov
or
pop
xor
sti
mov
cs
adc
(bad)
xchg
retf
or
and
fxtract
outs
std
(bad)
std
leave
mov
es
jl
ds
imul
jns
fild
cmp
adc
(bad)
mov
xchg
or
xor
movs
add
xchg
or
adc
js
dec
ins
mov
sbb
not
sub
arpl
and
mov
inc
mov
aaa
push
inc
sar
out
push
xchg
enter
dec
mov
mov
out
jns
ins
in
dec
test
imul
adc
popf
sti
mov
mov
out
pop
repz
inc
cmp
sub
jno
imul
repnz
sbb
fld
sub
inc
retf
js
fld
mov
xor
push
mov
popa
xchg
sbb
mov
in
inc
ficom
sub
cmp
or
sub
sar
cld
lock
adc
xchg
cld
cwde
ror
pop
dec
inc
push
scas
xchg
fcom
dec
movs
in
push
mov
xor
pusha
popa
jmp
add
fsub
mov
js
xor
mov
enter
bound
fcom
stos
frstor
pop
movs
xchg
sahf
cmp
fst
inc
arpl
jmp
nop
mov
sub
sahf
shr
jnp
ror
outs
cmp
cs
or
cmps
pushf
iret
push
dec
xor
(bad)
cmp
xchg
and
and
ins
mov
int
test
sub
jne
adc
push
sbb
ret
dec
ret
mov
sub
in
push
pop
and
je
xchg
out
mov
sub
stos
ficom
stos
shl
inc
dec
sub
clc
test
mov
jne
mov
fst
mov
push
add
loopne
das
movs
and
loope
gs
imul
push
push
jmp
add
mov
lds
inc
fcmovbe
cmc
stc
adc
add
pop
pop
loop
aaa
sub
repnz
(bad)
popa
pop
mov
out
pop
in
movs
xchg
in
ss
mov
addr16
push
pop
(bad)
imul
pop
add
dec
sub
xor
pusha
(bad)
fsubr
lods
mov
xchg
out
out
inc
arpl
lods
cmps
mov
jo
call
push
push
or
pop
cdq
push
lea
sbb
add
jne
pop
les
xchg
outs
or
sbb
xchg
arpl
push
jae
jbe
popf
into
call
dec
mov
dec
pushf
(bad)
test
in
scas
add
in
mov
fsub
mov
repz
mov
adc
stos
int3
pop
lods
stc
ss
dec
in
and
cmps
inc
rcl
xchg
pop
std
(bad)
dec
cdq
xor
mov
in
fstp
scas
xchg
in
mov
mov
inc
pop
in
retf
push
jns
out
aam
popa
jp
or
shl
call
fnsave
sahf
rol
xchg
retf
xchg
mov
aam
adc
fisttp
lock
adc
add
imul
mov
dec
movs
rol
xor
stc
xchg
jecxz
pop
jp
call
sar
into
aad
fidiv
imul
cmps
adc
ret
inc
mov
jg
mov
stos
xchg
pop
cld
repnz
jmp
push
sub
lea
icebp
push
xlat
push
sti
ja
cs
outs
xlat
mov
sub
dec
call
bound
(bad)
es
or
pop
dec
in
imul
in
pop
pop
jmp
dec
pop
xchg
cld
data16
pop
mov
lds
cdq
arpl
rcl
and
sahf
jle
jp
outs
mov
int3
push
jae
jmp
and
(bad)
add
arpl
jno
(bad)
je
xchg
out
xchg
xor
xor
dec
cmp
cmp
cmc
stos
cmp
lea
fsubr
inc
and
popf
mov
out
retf
hlt
or
cmp
outs
pop
js
add
aad
add
ds
shl
retf
scas
sbb
mov
movs
stc
imul
add
inc
sub
jmp
repz
shl
test
push
xor
sbb
and
lea
je
add
jg
int
test
mov
xor
std
xchg
ds
add
sbb
push
adc
scas
adc
push
xchg
popa
xchg
scas
push
cmp
call
cld
pushf
mov
sbb
fistp
cmc
(bad)
out
or
sbb
cmps
pop
mov
sbb
inc
cmps
inc
addr16
cmp
adc
xchg
or
inc
rol
mov
clc
mov
mov
out
xlat
aaa
pop
bswap
shr
xchg
mov
mov
into
mov
push
(bad)
loopne
mov
xchg
push
mov
push
pop
mov
daa
lea
inc
mov
inc
ret
repz
rol
gs
mov
js
inc
pop
dec
imul
popf
jb
xchg
popf
je
clc
xchg
mov
cmp
inc
sbb
aaa
mov
div
(bad)
mov
mov
cdq
(bad)
mov
(bad)
in
(bad)
ss
out
arpl
(bad)
pushf
xchg
lahf
mov
or
cmp
stos
sti
imul
das
cmp
in
mov
ret
jp
and
jno
xchg
test
sbb
fistp
pusha
sub
popa
cmp
pop
jp
mov
mov
outs
out
add
dec
imul
adc
int3
in
cmp
inc
xchg
jge
xor
add
jns
lahf
in
rol
mov
out
aad
mov
nop
(bad)
jmp
add
int3
and
xlat
das
cmps
jle
mov
sar
push
inc
or
lods
aad
push
cmp
cwde
loope
jmp
stc
frstor
jle
aas
xchg
sti
cmp
adc
cli
iret
add
in
stos
or
jne
pop
leave
pop
inc
add
pop
ja
cs
push
push
sbb
jmp
movs
pop
mov
adc
ins
nop
dec
rcr
mov
adc
std
fmul
pop
shr
adc
retf
mov
xchg
data16
mov
sub
push
sar
imul
retf
fmul
adc
mov
repz
adc
sub
xchg
daa
shr
stos
mov
cli
xchg
jne
loopne
lahf
pop
jmp
xchg
push
pop
div
test
popa
xchg
ds
sub
cmp
dec
lea
aaa
jo
sar
pop
into
pusha
mov
movs
mov
or
retf
sbb
aaa
int
stos
sar
nop
lock
jmp
mov
push
mov
pop
fwait
xor
mov
or
cmc
mov
sti
push
sahf
gs
jno
mov
xor
xor
inc
movs
inc
enter
push
sbb
test
jecxz
aaa
fwait
ins
mov
jbe
adc
lea
or
push
loopne
int3
daa
ror
mov
ins
cmp
(bad)
jle
pop
sub
test
inc
inc
pop
push
jne
pop
sub
pop
xor
pop
inc
adc
and
push
in
mov
or
jbe
xchg
js
dec
mov
paddsb
aam
or
adc
and
jg
mov
out
ret
dec
stc
(bad)
(bad)
into
ret
or
js
mov
pop
repnz
clc
ret
out
mov
xchg
stc
mov
sar
inc
mov
stos
sbb
cmp
xlat
mov
or
cmps
cmc
dec
sti
repnz
pop
jo
test
xchg
mov
xadd
jne
(bad)
xor
jmp
out
mov
and
cmc
test
xchg
call
in
movs
(bad)
in
scas
push
adc
loope
retf
push
vpsraw
test
pop
fcomp
js
cmp
or
lea
and
fmul
sar
scas
add
fs
push
test
sub
sub
pop
clc
jmp
fidivr
lods
mov
rol
jle
je
adc
test
std
push
and
mov
mov
push
mov
clc
jno
retf
inc
mov
cmp
fwait
sbb
pop
hlt
mov
addr16
adc
sub
push
xchg
les
pop
cs
xlat
sub
stos
call
(bad)
cmp
imul
repnz
adc
loop
jmp
cmps
test
adc
xor
pop
and
pop
mov
lahf
sub
sub
or
xchg
call
lods
enter
test
ins
lock
dec
push
dec
xor
pop
jo
inc
aaa
leave
loopne
xor
ficomp
jb
(bad)
sub
xor
iret
cmc
cs
inc
loop
cmc
mul
jne
pop
das
fldcw
icebp
je
sbb
cdq
sub
xchg
loopne
xchg
and
pushf
sbb
add
cli
mov
or
stc
aas
sbb
js
and
inc
mov
jnp
jecxz
jle
push
aad
ja
or
pop
pop
das
sti
test
add
dec
xchg
call
loop
sub
or
add
loope
xchg
jno
cmp
cld
xchg
je
cmc
mov
loope
fldenv
adc
inc
pop
xlat
(bad)
xchg
aad
(bad)
xor
add
in
in
mov
sahf
inc
cmps
pop
push
aam
pop
jp
push
inc
push
ja
sub
sub
test
xor
mov
icebp
jbe
repz
and
mov
add
mov
shr
inc
(bad)
or
mov
das
add
add
sahf
mov
rcl
push
mov
rcl
retf
out
sbb
push
lods
aad
inc
sahf
idiv
fs
rcl
(bad)
jg
out
mov
imul
push
push
loopne
jb
xchg
jp
imul
sbb
or
jl
shl
nop
(bad)
sbb
movs
inc
lods
pop
ins
jg
jmp
loopne
iret
xchg
inc
shl
jp
aam
clc
(bad)
movs
mov
or
lahf
pop
imul
sbb
inc
aad
dec
(bad)
xor
xchg
adc
fadd
add
mov
and
fimul
push
sti
pushf
lods
cdq
sti
(bad)
gs
lea
lea
pop
pop
loope
sbb
sbb
fs
test
add
test
outs
mov
sahf
popa
xor
fisub
das
sbb
push
sbb
retf
cmps
pcmpeqw
(bad)
lds
add
push
pop
or
repnz
dec
pop
daa
sub
in
ret
lock
push
mov
pushf
pop
pusha
iret
mov
pop
xchg
xor
popa
mov
add
pcmpgtb
push
or
fadd
ins
jecxz
stos
sub
cmp
test
icebp
xor
(bad)
rcr
mov
mov
cwde
cmps
and
(bad)
fidiv
adc
or
xchg
aas
fxch
lods
shl
into
mov
test
shr
inc
sub
adc
cmp
je
(bad)
push
les
mov
loop
mov
add
mov
outs
pusha
pop
push
dec
and
and
jns
add
xor
data16
cwde
pusha
(bad)
nop
push
push
test
arpl
enter
mov
cmps
jle
xchg
retf
jnp
aam
pop
repnz
mul
ins
mov
sub
fnstenv
xor
scas
stc
js
imul
ins
outs
add
adc
repz
xchg
les
push
mov
xchg
lods
mov
jecxz
repnz
jo
or
rol
in
and
hlt
dec
aas
fisttp
hlt
sahf
and
repnz
rcr
mov
js
scas
in
dec
idiv
mov
push
xchg
mov
mov
popa
jmp
mov
rcl
data16
hlt
fbld
pop
test
jb
outs
mov
imul
test
xor
fs
enter
icebp
push
ret
push
add
imul
loope
std
jge
mov
xchg
inc
pop
xor
mov
out
sbb
bound
lock
inc
mov
repz
cmp
fwait
and
loopne
lahf
dec
adc
and
sbb
or
aad
or
xchg
std
lods
lds
shl
jae
cld
dec
push
mov
mov
mov
dec
das
mov
dec
push
and
outs
xchg
cdq
(bad)
xor
popa
pop
xchg
jl
xchg
das
outs
loope
or
test
push
ss
push
stos
pop
adc
pop
test
or
rol
sub
retf
sub
xchg
jmp
cmps
call
add
and
pusha
sub
cld
sub
repnz
stos
sbb
xchg
mov
mov
sub
movs
or
or
rcl
imul
outs
push
addr16
cmp
scas
or
push
add
out
add
and
sbb
fdivr
pop
adc
loopne
mov
cli
ins
jle
pop
xor
push
out
inc
js
mov
sbb
call
aad
popa
div
push
sbb
ret
outs
jl
or
fiadd
test
and
aad
jb
adc
call
sbb
add
bound
add
and
cld
xor
es
jmp
push
dec
adc
xor
enter
out
retf
retf
(bad)
mov
ficom
(bad)
mov
fwait
adc
(bad)
pusha
push
mov
dec
icebp
stos
mov
pushf
jb
or
cmp
in
sub
fld
cli
rol
pop
adc
xor
and
jo
fstp
mov
and
inc
push
in
retf
pop
cmp
shr
jg
or
aam
jge
pop
loop
jecxz
and
rol
mov
dec
jp
cmps
fld
cli
xlat
into
dec
jl
idiv
or
int
dec
pop
call
lods
loope
jmp
mov
je
mov
dec
xor
inc
dec
mov
loopne
js
or
shl
jecxz
xor
fs
shr
jns
int3
push
xchg
jl
jne
and
pop
cmps
hlt
xchg
fwait
pop
(bad)
popf
inc
jnp
pop
lods
mov
fwait
sbb
mov
and
push
retf
mov
and
mov
pop
call
xchg
out
cs
mov
jmp
xchg
inc
ret
xor
mov
pop
and
sub
gs
(bad)
fdivr
adc
pop
xor
out
sti
jmp
pusha
(bad)
mov
inc
or
sbb
jne
or
int3
fld
sti
gs
scas
or
add
jae
cld
xor
stc
and
(bad)
ds
ret
cmps
dec
or
test
add
and
or
dec
les
inc
xchg
popf
sbb
jnp
(bad)
repnz
xor
ja
xor
mov
jne
mov
js
sbb
cs
ds
rcr
pop
pop
jle
lods
inc
xor
add
nop
bound
mov
aam
inc
xchg
ror
inc
push
xor
popa
add
nop
add
sar
sub
aaa
std
push
jae
sbb
imul
jne
out
mov
cmp
sbb
and
xchg
ror
cmp
loopne
cmp
ins
sub
inc
and
mov
repz
ret
adc
(bad)
stc
jae
loop
jnp
pop
add
cmp
test
and
jl
and
mov
adc
sahf
out
fisttp
push
out
inc
mov
clc
cdq
sbb
xor
push
push
jb
ins
fbstp
cmp
test
xchg
cli
(bad)
xor
dec
dec
sub
xchg
xchg
bound
cmp
inc
inc
push
in
pop
outs
lods
cmp
adc
pop
mov
call
jmp
in
mov
test
jg
clc
je
sub
js
and
xchg
int3
jecxz
sbb
push
pop
mov
arpl
in
movs
in
or
jmp
mov
call
adc
popf
pusha
push
aad
aas
sub
nop
add
imul
scas
ror
call
cdq
add
out
cmp
stos
scas
mov
call
push
jnp
adc
retf
stc
sbb
loop
(bad)
xchg
retf
je
fwait
mov
sub
pop
and
pop
mov
sub
fdiv
in
out
pop
mov
loopne
(bad)
in
sub
or
push
push
mul
leave
push
push
loope
add
jo
adc
aas
and
or
ds
or
into
mov
mov
pop
aaa
dec
cs
mov
mov
retf
or
add
pop
or
shl
add
ja
loop
add
mov
inc
sbb
cmp
pop
test
daa
mov
(bad)
mov
cmp
int3
push
ins
push
les
int
jb
int3
test
xchg
out
repz
rcl
xchg
pop
xlat
not
xchg
iret
pop
cmp
mov
call
and
xor
add
outs
pop
pop
fcomp
into
and
movs
inc
mov
push
ret
push
fisubr
popa
mov
and
sti
mov
mov
pop
cwde
ds
sub
push
cmp
test
ss
push
test
lods
jmp
mulps
xor
and
mov
popa
or
out
jg
push
jge
mul
ss
sub
and
fsubp
push
xchg
jp
mov
mov
test
leave
sbb
jnp
lods
push
jmp
bound
mov
sti
aam
xlat
mov
jle
xor
sub
aas
outs
push
xchg
add
loopne
pop
mov
cmp
dec
push
mov
xchg
(bad)
pusha
mov
movs
mov
cmp
mov
sbb
push
imul
jge
pop
icebp
cld
int3
repnz
xor
xor
retf
ss
jmp
(bad)
clc
call
jb
pushf
or
mov
fwait
dec
ret
test
cmp
pop
or
pop
ffree
int3
aas
and
jl
movs
test
test
jbe
outs
or
pop
pop
jb
loope
rcr
dec
call
popf
dec
dec
ins
push
dec
jmp
pop
gs
mov
ficom
in
pop
jp
xchg
mov
mov
adc
jns
cli
adc
cmps
inc
sahf
aaa
xchg
lods
std
xchg
mov
mov
mov
call
movq
xor
add
sbb
pop
stos
sbb
inc
dec
(bad)
ins
cmps
mov
xchg
es
push
fidiv
ficom
adc
pop
push
and
sub
ds
clc
inc
cmp
mov
or
jecxz
adc
(bad)
bound
jge
jmp
pusha
sbb
cwde
repnz
in
mov
cmp
into
jne
and
jnp
(bad)
fs
lahf
popf
cwde
lahf
out
stos
leave
aad
push
(bad)
in
dec
mov
xchg
aad
outs
movs
movs
sub
pushf
push
and
push
outs
xchg
or
mov
inc
iret
cmps
(bad)
add
pop
push
fs
inc
or
fdiv
div
jo
mov
addr16
push
jecxz
loopne
push
ror
push
push
out
jnp
push
fwait
rcl
sub
cmp
movs
fdivp
scas
push
adc
mov
sti
cmc
push
pop
icebp
jg
les
xchg
fidivr
push
fsubr
scas
inc
push
js
in
lods
nop
(bad)
push
pusha
mov
shr
mov
inc
imul
mov
pop
push
(bad)
std
ret
sbb
mov
jmp
adc
aam
adc
(bad)
sub
imul
das
xchg
test
push
sbb
mov
xchg
sub
mov
add
xor
or
mov
in
cmp
ficom
or
xor
sbb
sbb
clc
int
stos
or
or
push
xor
int
aaa
loop
add
mov
int3
push
loop
inc
xlat
xchg
in
add
repnz
and
jecxz
pop
call
inc
retf
retf
shl
mov
repnz
arpl
pop
jne
dec
mov
sar
movs
push
sub
adc
add
aaa
stos
aad
or
sahf
mov
outs
xchg
movs
les
icebp
push
jns
push
leave
sar
mov
adc
xchg
stos
ds
clc
jecxz
enter
jle
jbe
adc
repz
clc
and
ror
add
xor
arpl
add
xchg
cld
iret
movs
sbb
adc
adc
fs
bound
sbb
loop
loop
adc
or
sub
push
(bad)
lock
les
add
enter
out
rol
loope
aam
cwde
aaa
jbe
mov
mov
pop
sub
adc
pop
leave
lods
imul
pop
and
cmp
inc
sti
push
std
ret
or
cmp
scas
cmp
outs
scas
fstp
in
mov
outs
cmp
pop
cmps
adc
sbb
inc
jecxz
jne
push
pop
mov
xchg
sbb
jnp
and
push
cmp
call
ret
adc
fist
shl
push
or
in
pushf
cmp
pop
leave
xor
push
xchg
outs
(bad)
popa
cld
mov
aas
pop
cmp
inc
add
cmp
ror
jae
xchg
push
add
mov
fldenv
fild
add
push
pop
or
(bad)
jne
pop
gs
test
push
lahf
pop
jmp
add
outs
xchg
pop
jle
mov
mov
clc
lock
sub
aaa
aaa
sub
push
and
dec
sti
fld
jb
repnz
shl
test
test
jbe
cmp
sbb
pop
adc
shl
cwde
ror
shl
out
ret
imul
test
xor
dec
(bad)
xchg
pop
test
and
retf
pop
out
xor
and
loope
cmp
adc
jge
adc
cmp
sbb
inc
adc
jae
psadbw
test
ss
cmps
sbb
inc
lds
nop
stos
es
enter
cmp
popf
cwde
jae
adc
popf
outs
popf
mov
pop
gs
leave
inc
fadd
mov
push
or
out
ret
imul
xor
jb
fistp
loope
pop
sbb
(bad)
rcl
push
mov
cmp
loop
jg
jo
or
sub
ror
enter
ret
popa
jmp
adc
sub
cs
pop
push
push
je
sub
dec
mov
shl
(bad)
sub
test
scas
push
movs
loopne
push
push
add
xor
mov
addr16
sbb
(bad)
xchg
sbb
mov
cmps
in
mov
pop
mov
inc
inc
jmp
dec
add
sahf
std
int3
adc
jg
test
lods
rcr
inc
or
push
js
and
cs
int3
adc
movs
fwait
ror
push
jl
mov
lea
repz
jmp
jmp
xor
leave
es
jae
ss
mov
int
jmp
adc
jnp
inc
rcr
push
into
jmp
out
shl
rcl
mov
hlt
or
xor
stos
into
xor
inc
lock
dec
xchg
cwde
dec
lahf
pushf
sbb
loopne
jnp
sub
xchg
jno
test
xchg
cld
cmps
(bad)
movs
fidiv
shl
addr16
adc
pop
pop
or
adc
mov
adc
call
cmp
cmp
xchg
mov
jns
daa
jmp
ficom
fcmovu
jae
aas
push
nop
sub
sbb
cmp
sub
fiadd
sbb
lods
pop
cmp
mov
adc
icebp
dec
or
mov
or
pop
mov
leave
rol
stos
sbb
push
inc
inc
jp
je
sub
fcom
(bad)
in
rcr
xchg
out
mov
sbb
dec
addr16
(bad)
and
out
jno
les
lods
jmp
and
out
fwait
mov
xor
pop
jns
idiv
test
mov
popf
shl
hlt
jnp
push
push
pop
idiv
enter
inc
dec
cmp
fld
inc
neg
mov
out
jbe
jae
stos
fs
scas
and
test
or
pop
int
ja
xor
retf
repnz
jl
jl
aad
sub
in
jo
in
jns
scas
sbb
sub
sub
or
js
lods
dec
sub
xchg
jge
jns
fldenv
push
sub
out
outs
and
mov
pushf
xchg
hlt
xchg
cmp
pop
sub
test
xor
or
fiadd
and
xchg
test
xchg
imul
pop
bound
and
xchg
cdq
dec
fs
push
or
add
lock
loopne
jnp
lahf
push
sbb
cdq
inc
mov
(bad)
lods
sbb
sbb
call
jl
jle
in
ds
sbb
lods
cs
fnsave
pusha
jmp
lahf
xchg
or
scas
nop
loop
loope
adc
arpl
push
xor
push
adc
shl
push
out
lahf
(bad)
dec
push
(bad)
psubusb
cmp
inc
das
in
ins
mov
ss
jp
es
sub
enter
dec
jnp
call
jp
in
push
out
ret
adc
jecxz
or
rcl
stc
pop
mov
adc
and
dec
imul
test
outs
cmp
xor
pop
xor
pusha
lods
cmp
loop
fs
popf
jno
push
(bad)
and
or
add
enter
shl
ss
add
call
cmp
imul
pop
(bad)
cmp
dec
cmp
dec
xchg
fdivr
inc
dec
xchg
adc
mov
sub
das
jno
sbb
into
sub
xor
dec
das
pinsrw
xchg
dec
cmps
mov
mov
cdq
outs
in
and
adc
fld1
cmps
dec
and
push
enter
and
jge
in
data16
lods
sub
cmp
dec
loope
pushf
dec
sub
inc
lock
xor
lahf
test
jo
inc
addr16
xor
dec
cmp
in
dec
xchg
push
adc
into
sbb
push
inc
loope
mov
in
and
push
sbb
imul
ret
ins
pop
and
mov
mov
cmps
ds
mov
imul
rol
out
xor
call
jge
(bad)
jle
fild
addr16
and
push
xchg
daa
idiv
sub
add
sub
and
(bad)
int3
pop
aas
cmc
in
fnsetpm(287
or
dec
loop
xor
dec
lods
xchg
iret
jmp
xchg
fcomp
test
cdq
jle
mov
jmp
mov
cmp
les
mov
jge
xchg
js
push
cmp
enter
sub
xchg
pop
(bad)
rcl
test
lea
or
cdq
test
outs
in
dec
adc
cli
mov
mov
loop
xor
push
pop
fistp
loop
pop
pop
xchg
pop
mov
sub
pop
or
xchg
js
outs
xchg
test
retf
fwait
add
inc
rol
push
jnp
and
les
inc
cmp
and
jmp
dec
jb
fsub
imul
ficomp
aas
push
rol
xor
cmps
and
ins
je
out
test
icebp
xchg
(bad)
movs
inc
hlt
call
fild
cmp
push
bound
xlat
fimul
mov
mov
repz
or
aad
push
fcom
stc
dec
dec
cmc
mov
scas
mov
(bad)
fnstcw
fwait
add
adc
xor
mov
mov
fmul
mov
popf
pop
sub
push
aam
addr16
sbb
dec
enter
jg
sbb
dec
push
ror
or
adc
cmp
sub
ja
xchg
inc
and
or
mov
jne
pop
jne
ins
cmp
out
imul
ret
leave
test
(bad)
sub
test
int3
loope
inc
cs
loope
in
stc
imul
sub
sbb
mov
call
inc
xor
fstp
hlt
into
addr16
mov
cwde
test
ins
in
popa
xchg
jmp
cmp
add
ror
pop
or
and
xor
and
iret
mov
add
cli
or
adc
enter
sbb
push
out
out
movs
or
jg
jbe
mov
fidiv
sub
xor
xchg
fisubr
ret
bound
aad
sub
cmp
into
hlt
push
cmp
inc
or
xchg
push
cmp
pop
in
stc
adc
pop
lods
fwait
dec
paddb
pop
xchg
pushf
repz
popa
mov
or
or
pop
iret
or
mov
push
shl
and
rcr
sahf
sbb
xor
cmp
jo
imul
inc
rcl
sar
(bad)
and
add
lock
xchg
int3
popw
add
mov
adc
sub
(bad)
sbb
popf
inc
inc
std
ins
and
dec
mov
xlat
sbb
scas
cwde
sbb
dec
dec
jp
std
or
movs
cmps
mov
inc
mov
jne
loopne
dec
adc
mov
outs
retf
dec
push
jne
mov
dec
pop
push
push
mov
loope
pop
outs
jae
in
das
ror
xchg
pop
mov
jb
sub
mov
push
inc
call
sar
lds
mov
(bad)
or
xlat
jle
mov
xor
cld
adc
add
mov
out
add
movs
fst
inc
cmp
scas
mov
out
ret
outs
ss
scas
cmp
aam
sbb
jns
inc
jmp
cmp
cmp
mov
mov
dec
cmp
cmp
sbb
xchg
push
xchg
mov
je
fst
mov
cs
pop
dec
or
bound
pop
pushf
rol
ins
adc
xor
mul
xor
(bad)
jecxz
mov
mov
dec
in
ds
lahf
xlat
ficomp
sub
lahf
(bad)
(bad)
loopne
sbb
pop
cmp
ret
push
jecxz
cmp
lods
dec
or
xor
adc
ins
jae
mov
push
aad
jbe
fwait
or
adc
jge
scas
sub
pop
sub
inc
and
cmp
mov
xlat
xchg
inc
shl
jle
aas
fs
into
fs
dec
xchg
cld
inc
xchg
sahf
adc
xchg
xchg
or
mov
cmp
(bad)
out
les
clc
add
xlat
js
cmp
pop
fisttp
cli
mov
pop
xchg
ja
fsubr
jno
sbb
das
cs
jo
ins
fst
mov
(bad)
xchg
mov
cmp
(bad)
out
fnstcw
push
mov
dec
mov
push
dec
(bad)
js
cmps
inc
mov
xor
fcomp
cli
fdivr
dec
lods
dec
repz
xor
cmp
mov
mov
shl
lds
fstp
loopne
adc
fnsave
mov
adc
inc
es
inc
imul
pop
mov
out
ins
or
jmp
test
jl
jp
or
shr
(bad)
data16
xlat
xor
shl
enter
ins
mov
jge
push
adc
jg
push
sar
jne
jmp
push
add
into
jmp
test
jno
scas
cmp
dec
lea
xchg
cld
das
pop
movs
clc
push
and
in
push
daa
or
daa
out
xchg
mov
add
xchg
xor
or
mov
sub
out
test
and
xchg
not
xor
pop
mov
stos
lea
pop
dec
xchg
add
cs
push
xchg
inc
scas
sub
imul
cmp
fdivr
shl
inc
or
sar
fcom
or
loope
sbb
cmp
test
sbb
sar
cmp
outs
mov
ins
packsswb
in
sub
pop
setle
jg
pop
outs
pusha
push
jge
lods
xchg
xor
inc
vpxor
pop
aam
cmp
mov
xchg
arpl
nop
mov
or
xchg
jl
(bad)
mov
mov
cmp
(bad)
(bad)
or
inc
pop
gs
mov
movups
push
dec
repz
mov
add
enter
call
fdivr
out
prefetch
mov
sub
js
add
aaa
cmp
dec
pop
pusha
cmp
stc
ficomp
pop
dec
lds
gs
addr16
outs
ret
pop
dec
retf
loope
out
mov
cmp
adc
push
and
outs
mov
cld
clc
aam
pop
das
pop
dec
addr16
sub
mov
iret
fstp
fiadd
out
sbb
fstp
addr16
sahf
int
cld
(bad)
(bad)
fadd
ins
dec
mov
out
cmp
mov
jnp
inc
popf
inc
and
xchg
cs
iret
test
lods
or
push
and
mov
push
out
mov
inc
jno
mov
ja
sub
sbb
sbb
jno
sub
jo
mov
into
push
mov
lea
(bad)
and
mov
mov
dec
test
dec
dec
pop
pop
das
sbb
mov
out
js
(bad)
mov
mov
pop
jle
leave
jp
sub
fiadd
xchg
and
in
cmp
jo
(bad)
dec
call
nop
mov
out
in
sub
and
je
pop
xor
xor
into
jmp
sub
out
pop
inc
mov
imul
jmp
cmc
xor
dec
inc
retf
bound
mov
inc
inc
daa
cmp
fs
push
lahf
inc
repz
xchg
sahf
mov
pop
sub
lods
arpl
xchg
dec
cmps
ins
cmp
mul
jno
mov
ins
sar
fstp
lods
inc
xor
or
repnz
xchg
cmp
fnstsw
mov
push
lods
hlt
and
jl
add
pop
cmp
add
pop
retf
inc
(bad)
mov
stc
jne
mov
es
test
arpl
cmp
push
pushf
out
pop
pop
and
lds
pop
jns
idiv
cmps
push
jbe
aad
lock
xchg
add
hlt
pop
fld1
sbb
ret
mov
test
push
xor
ret
pop
xchg
daa
xor
mov
pop
inc
cmc
dec
jmp
xor
fcom
std
mov
imul
inc
retf
pop
enter
dec
dec
ss
xor
xor
(bad)
sbb
and
xchg
dec
mov
dec
out
lds
or
inc
or
xchg
test
inc
inc
stos
jecxz
jl
add
sti
jge
pop
ins
mov
out
inc
inc
je
test
or
xchg
lods
inc
gs
mov
stc
jmp
pop
je
mov
or
cld
pop
loope
stc
sti
or
sbb
movs
inc
cmc
test
in
leave
dec
push
mov
pop
push
les
dec
call
shr
ins
lea
out
in
rcr
dec
pop
stc
pusha
nop
jp
xchg
ds
or
loopne
ficomp
jle
pop
stos
push
mov
repnz
mov
shr
adc
dec
mul
shl
add
ins
sar
adc
out
lea
jo
in
add
not
dec
lea
jae
jg
out
pushf
pop
xor
adc
addr16
outs
imul
imul
mov
inc
mov
ja
sar
push
test
mov
jae
jl
and
dec
lods
sar
mov
ja
leave
das
cwde
jmp
sub
mov
adc
adc
adc
cmp
(bad)
push
rcl
mov
shr
stc
mov
scas
mov
sub
call
sub
push
mov
mov
wbinvd
and
xchg
xchg
mov
dec
pop
loope
movs
leave
loopne
xor
clc
ss
cmps
sub
add
cmp
les
xor
test
shr
repnz
mov
jle
and
aaa
push
pushf
call
cmps
pop
xchg
cld
pop
xor
rol
cmp
lea
pop
movs
(bad)
jmp
mov
sub
push
jo
(bad)
jl
retf
push
enter
cmp
enter
push
fimul
dec
repnz
stc
in
aaa
jge
lods
mov
imul
xor
inc
sub
mov
cmps
loopne
jecxz
aaa
test
xor
mov
adc
jmp
ins
dec
xor
call
cmp
stc
cmovno
std
xor
pop
je
cmp
cmp
cmp
add
adc
xchg
call
iret
push
(bad)
mov
gs
lea
sbb
add
aaa
xchg
int3
fbld
jp
aad
sbb
stos
cmp
mov
adc
pushf
pushf
inc
loop
mov
push
repz
mov
sbb
ins
and
out
inc
mov
test
fdivp
pop
xchg
jmp
push
loope
imul
pop
ins
pop
or
pop
sti
loope
inc
retf
jl
ins
pop
or
mov
xor
or
jbe
xor
push
(bad)
test
(bad)
inc
pop
push
pushf
retf
dec
push
or
or
push
sti
dec
aam
cmc
iret
hlt
push
xor
int
fmul
push
cmps
mov
leave
push
add
test
xchg
les
push
(bad)
lahf
mov
mov
pop
mov
out
and
xor
sub
ret
dec
pop
neg
(bad)
xchg
out
and
nop
and
mov
xchg
(bad)
stc
push
push
push
popa
das
sete
(bad)
rol
out
push
mov
jl
fstp
movs
mov
sbb
xchg
test
inc
rcr
mov
pop
shl
cmp
retf
into
pop
jnp
out
inc
sub
addr16
cmp
cmp
ja
(bad)
sbb
f2xm1
jmp
push
shr
js
cmp
int
inc
(bad)
cmps
mov
lods
mov
into
pop
inc
push
(bad)
inc
inc
ss
lea
ret
dec
mov
push
int
xchg
loope
jmp
clc
lea
sahf
(bad)
lahf
pop
fmul
push
test
or
repz
jle
ror
xchg
and
(bad)
jmp
bound
xor
pop
push
inc
data16
and
cmp
add
popa
mov
xchg
pop
mov
stc
pushf
adc
outs
shl
imul
cmps
or
xchg
push
pop
cmp
pop
mov
rcl
jp
push
lods
adc
movs
data16
hlt
cmps
repnz
push
cli
test
fild
push
cmp
xor
mov
lds
and
pop
xchg
push
out
pop
xchg
pop
add
push
aaa
ret
imul
and
cmp
adc
sbb
mov
mov
xchg
pop
ret
je
xchg
(bad)
inc
and
sub
bound
mov
xchg
ja
add
xor
mov
ins
mov
add
into
jno
xchg
stos
mov
and
jo
ins
fdiv
imul
lods
sub
cli
ret
cmp
psrld
shl
test
mov
fisub
xchg
retf
jo
and
cmps
ds
out
(bad)
movs
test
mov
add
mov
(bad)
loopne
scas
xor
fcom
and
(bad)
mov
mov
pop
push
jmp
retf
xor
dec
in
imul
inc
or
inc
in
lock
inc
lock
shl
jne
bound
pop
push
add
pusha
ret
hlt
rol
(bad)
ficom
push
stc
push
fstp
mov
push
cwde
jp
jne
push
shl
lock
(bad)
sub
imul
jno
sbb
mov
mov
sti
cmove
mov
repnz
mov
mov
idiv
std
outs
inc
dec
scas
ds
push
loope
fs
adc
pop
inc
out
aaa
loopne
sbb
pop
pop
retf
loop
aad
fdivr
mov
sbb
inc
xlat
cmc
push
dec
push
rol
lea
std
neg
adc
in
or
push
movs
lds
aad
std
cmps
cmps
data16
push
mov
sub
mov
jbe
adc
jo
jae
mov
mov
push
aaa
movs
or
mov
add
inc
std
mov
ret
stos
inc
fcmovnu
das
int
adc
push
dec
mov
or
and
mov
and
dec
sub
pop
mov
inc
mov
xchg
jl
push
stos
jge
pop
les
jmp
dec
popf
push
clc
sub
pop
jnp
in
loope
mov
js
(bad)
rcr
cmp
ror
not
mov
jl
pop
mov
outs
cmp
sbb
add
dec
sti
movs
(bad)
xor
inc
ret
in
adc
pop
xlat
jno
int3
push
rol
(bad)
stc
and
(bad)
sahf
int
mov
push
mov
stc
fidivr
mul
sub
mov
call
test
mov
outs
sub
lock
(bad)
sbb
fbld
push
(bad)
mov
adc
and
sub
ds
in
ret
xchg
cmp
xor
fwait
push
in
pop
xchg
mov
adc
xchg
xchg
mov
push
mov
sbb
add
and
test
jae
test
popa
loope
push
enter
bound
iret
sub
jo
loopne
jecxz
dec
xchg
xor
or
rcr
dec
pop
sbb
dec
inc
js
pop
outs
mov
sub
xor
push
ins
lods
sbb
lods
jp
nop
xor
ret
sar
(bad)
es
imul
popf
stos
xor
sub
lock
(bad)
lahf
pop
fcmove
in
lods
mov
movs
jnp
pop
mov
mov
idiv
xor
pop
inc
and
mov
push
jo
cmp
push
lock
or
scas
push
(bad)
fld
cmp
movs
xchg
xor
xchg
sub
popa
movs
mov
cmps
fadd
cs
xchg
sti
call
not
push
pop
(bad)
sbb
test
mov
pop
push
adc
dec
and
ins
dec
xor
aas
add
stos
lahf
mov
add
dec
jp
repz
xchg
stos
add
loopne
int
mov
je
std
aam
nop
dec
push
inc
enter
mov
aas
jecxz
xlat
push
and
je
push
movs
add
xchg
push
pop
mov
push
mov
retf
jmp
push
cmp
inc
adc
lea
or
pushf
movs
mov
(bad)
ss
dec
mov
push
cld
icebp
xor
fcom
jne
xchg
dec
push
mov
jmp
and
sbb
shl
push
sub
mov
mov
cs
je
rol
popa
(bad)
retf
jae
lea
jns
add
retf
ja
dec
mov
push
cli
nop
lock
inc
mov
outs
js
repz
(bad)
pop
into
xchg
adc
mov
mov
outs
sub
cmp
aaa
rcr
jbe
in
outs
mov
pop
ja
xor
adc
or
pop
jae
push
and
mov
cmp
jne
(bad)
mov
cwde
push
dec
je
cmc
or
push
(bad)
test
or
mov
push
in
adc
xchg
sbb
in
pop
(bad)
call
sbb
mov
xchg
in
rcr
mov
jns
mov
push
sahf
or
add
fnsave
xor
(bad)
int3
test
inc
and
cmp
movs
loopne
mov
imul
dec
rol
xchg
push
cmp
mov
jbe
pop
push
stc
pop
rcl
mov
outs
scas
mov
dec
aad
leave
std
adc
arpl
rcr
(bad)
lods
xchg
dec
xchg
out
test
cmp
cmp
add
push
mov
jne
mov
mov
mov
xor
sbb
inc
cs
xor
es
push
mov
pop
(bad)
jl
repnz
lahf
bound
in
mov
sbb
pop
test
aaa
lea
lds
or
push
stos
popa
mov
loope
sar
mov
ret
cmc
sub
inc
mov
sub
(bad)
fisub
test
jb
pop
sbb
imul
out
in
dec
mov
gs
pop
mov
adc
in
call
mov
mov
ror
arpl
pop
lds
adc
jle
dec
push
out
imul
mov
cmps
sbb
jl
sub
stos
(bad)
sahf
fstp
sub
cmp
push
jb
mov
jg
repz
imul
fidivr
push
ficomp
rcl
ins
or
shl
movs
push
adc
cmp
mov
xor
cmp
xor
dec
cmovnp
ins
jbe
or
jmp
cmps
sbb
xchg
fistp
sahf
lock
scas
mov
int
jmp
dec
mov
adc
sbb
aas
cdq
mov
pop
mov
je
xlat
sti
mov
cmp
adc
je
jmp
mov
and
dec
ins
leave
repnz
sub
xchg
(bad)
sbb
cmp
outs
rcl
cmp
lods
jnp
or
imul
xchg
add
and
cmps
inc
(bad)
out
push
stos
aaa
lea
cmp
sbb
rol
lahf
sub
xor
adc
mov
gs
xchg
(bad)
mov
and
xor
inc
push
dec
js
iret
push
stc
into
sbb
mov
addr16
call
inc
inc
mov
and
daa
mov
mov
js
adc
mov
adc
sbb
sub
or
cld
and
pop
cmps
or
ja
sub
add
xor
jbe
pop
jo
sub
xchg
mov
mov
xchg
xchg
sbb
sbb
fsubr
out
popa
fild
stc
or
(bad)
pop
mov
xchg
(bad)
rol
scas
jmp
add
ss
stc
repnz
repz
pop
fcom
jmp
jle
or
retf
add
bound
lods
cmp
aaa
daa
adc
bound
adc
push
jmp
je
mov
pushf
add
mov
xlat
cdq
test
lods
cmc
test
cmp
je
fmul
xor
pop
or
push
std
and
ins
pop
xor
or
ja
pop
sti
adc
xchg
inc
cmp
lock
enter
sub
int3
imul
and
scas
add
adc
mov
out
aas
sub
inc
fidivr
sbb
fwait
xchg
bound
push
inc
xor
clc
xchg
hlt
mov
cmps
pop
mov
mov
lahf
push
jg
xchg
out
lahf
mov
adc
push
and
sbb
gs
stos
mov
or
sub
dec
imul
push
imul
dec
xchg
push
adc
dec
or
js
js
mov
xchg
arpl
or
ss
pop
jo
rcl
iret
test
push
push
xor
sub
mov
jge
stc
sti
mov
mov
xchg
add
xchg
xor
dec
xor
(bad)
mov
mov
ror
mov
mov
scas
fild
test
es
out
stc
and
aam
mov
xor
xor
das
ret
xchg
adc
inc
ss
dec
push
adc
ins
in
jns
(bad)
shr
or
dec
jns
daa
jne
mov
jl
addr16
pop
and
add
jge
inc
std
xchg
out
loope
mov
ja
cmc
loop
stc
xor
pop
adc
push
xor
or
push
add
or
stos
iret
xchg
jp
jl
ins
ds
retf
aad
jbe
lahf
scas
std
lods
mov
iret
out
jmp
fcmovnb
mov
ins
pop
int
push
cmps
cmp
sbb
aas
pop
mov
stos
inc
dec
sar
jbe
mov
push
cmc
fcmove
jne
add
inc
adc
push
push
or
cs
jge
ins
add
sbb
outs
pop
mov
int3
add
cwde
popf
retf
sar
es
push
sub
mov
push
sbb
ror
dec
push
rcr
adc
cmp
rcl
sbb
mov
mov
icebp
push
mov
inc
mov
iret
cmp
es
push
std
xchg
and
dec
cmc
shl
(bad)
pop
bound
les
mov
pop
xor
or
or
stos
aam
ins
mov
sbb
pop
(bad)
push
les
add
daa
or
xchg
fnsave
mov
mov
mov
fcomp
mov
test
sbb
not
lods
retf
fsubr
ret
ins
outs
fld
inc
or
sub
xchg
mov
sub
xor
dec
adc
xlat
xchg
mov
xor
rcr
ror
imul
retf
out
mov
lds
in
inc
jbe
push
leave
mov
xor
mov
out
mov
push
push
mov
js
hlt
adc
jmp
pop
int3
and
cmp
stos
ja
mov
pop
stos
shl
mov
mov
jge
mov
(bad)
and
jo
mov
mov
mov
retf
ret
(bad)
lods
mov
inc
xlat
js
push
add
neg
test
or
xlat
jb
inc
call
sub
inc
(bad)
push
ror
mov
jmp
pop
in
test
add
cmp
stc
cmps
mov
ins
mov
mov
cdq
imul
daa
test
inc
dec
clc
mov
sub
jae
xchg
xor
or
outs
scas
inc
jmp
adc
stos
mov
loopne
jbe
inc
daa
dec
(bad)
scas
paddusb
outs
inc
ss
mov
push
xchg
lds
xchg
sbb
(bad)
aam
jl
inc
sti
pop
jmp
mov
inc
(bad)
add
mov
and
push
jecxz
rcl
outs
dec
adc
or
mov
mov
stos
mov
pop
dec
call
inc
xchg
xor
adc
jmp
ret
and
sub
inc
(bad)
enter
adc
test
adc
out
xor
lea
push
add
pop
sub
(bad)
sub
imul
pop
pop
xor
adc
adc
movs
sub
push
and
shl
pop
cmp
stos
jno
movs
rol
add
adc
pop
cmc
cmp
add
std
into
cmp
stos
cmp
scas
adc
out
mov
cli
fdivp
lock
dec
fbld
repnz
rcl
std
hlt
into
sub
das
sbb
jbe
ss
iret
test
pushf
test
sub
lods
(bad)
and
xor
pop
push
sahf
adc
ss
jae
ret
pop
inc
cmp
mov
dec
les
jecxz
jns
repz
xchg
mov
scas
int3
enter
int
repz
xchg
xchg
mov
dec
pcmpeqw
xchg
dec
cmp
(bad)
jge
pop
mov
cmp
(bad)
and
push
pop
sub
pusha
imul
xchg
pop
hlt
popf
jnp
or
es
mov
lods
jnp
cmps
ins
push
movs
test
jl
fsubr
outs
sbb
add
jle
mov
push
movs
mov
sahf
dec
xor
stos
gs
sbb
pop
inc
out
and
dec
sti
aaa
dec
les
mov
(bad)
loopne
out
clc
jp
outs
fcomip
gs
int3
or
rcl
xor
mov
xchg
xchg
sysexit
loop
or
data16
add
in
lods
jge
mov
stos
push
jne
stos
inc
scas
movs
cmps
nop
ss
aaa
dec
xor
imul
cmp
int3
and
loope
pop
enter
push
call
mov
xor
push
inc
fnsave
repnz
push
xor
loop
jle
out
outs
out
xor
cmps
or
inc
sbb
(bad)
bound
scas
cmp
leave
inc
mov
jo
sub
out
enter
(bad)
adc
sahf
ja
scas
xor
fldenv
push
in
cdq
xchg
fdiv
test
mov
loop
and
push
mov
pop
adc
jno
xchg
leave
adc
fld
bound
cwde
jmp
inc
ret
mov
(bad)
data16
mov
ficom
nop
push
outs
out
sub
sar
inc
aaa
adc
inc
push
jge
fs
push
sbb
xchg
pop
mov
mov
jbe
leave
leave
fmul
imul
or
cmp
ja
or
cmp
rcr
xor
dec
mov
mov
xor
loopne
cld
jg
xchg
cli
ffreep
adc
scas
jmp
test
mov
jg
add
ret
cld
xchg
cmp
pop
add
out
shl
inc
scas
popf
dec
adc
cdq
jne
es
shl
fild
push
jo
js
pop
leave
mov
push
mov
std
sub
jmp
fcom
mov
push
icebp
cmp
movs
xor
dec
push
repnz
pop
push
lods
dec
dec
or
loopne
clc
mul
call
adc
push
xchg
sub
fisubr
mov
jge
ja
out
add
xchg
loopne
inc
or
aad
adc
inc
or
sbb
aad
xchg
in
xor
sbb
inc
jp
sub
pop
adc
pop
ret
icebp
int
xor
popa
xor
and
mov
test
mov
jns
in
sbb
inc
cmp
jb
mov
cmp
add
mov
xor
adc
out
cmp
and
movs
push
data16
js
dec
cmp
pop
mov
scas
xchg
pushf
outs
out
adc
sub
add
add
leave
push
outs
push
add
mov
lods
ret
jecxz
mov
xchg
lock
dec
(bad)
(bad)
sbb
mov
push
sbb
mov
mov
push
sub
push
add
mov
or
mov
je
ret
mov
cmc
and
cdq
dec
mov
push
inc
xchg
jl
cmp
imul
xor
pop
and
xchg
jmp
xor
not
add
dec
and
ss
mov
push
popa
mov
mov
sbb
sub
mov
xor
fadd
xor
cmp
add
lods
add
xchg
xchg
fisub
ins
and
and
or
or
out
out
adc
sahf
pop
jne
into
mov
adc
inc
or
dec
lock
mov
dec
push
adc
aas
ds
lods
ins
iret
jmp
dec
fsub
jnp
gs
aas
xchg
ror
movs
add
xchg
cmp
dec
add
ja
movs
sti
push
cli
xor
and
dec
jl
sbb
data16
inc
movs
xor
mov
das
shl
cwde
cs
sbb
clc
pop
adc
xor
push
cmc
push
into
jl
push
cmp
and
retf
dec
pop
xor
fisttp
test
enter
cmc
jb
and
push
push
enter
movs
mov
mov
cs
xchg
sar
adc
test
add
arpl
inc
sub
adc
and
out
iret
jle
inc
mov
pop
or
retf
(bad)
ss
mov
sti
leave
(bad)
push
mov
fmulp
cs
xlat
test
jle
rcr
mov
jecxz
or
push
xchg
clc
mov
mov
push
outs
xchg
jmp
mov
sub
sub
retf
sub
jmp
add
aas
std
mov
mov
and
ror
retf
in
ja
lods
jae
cmpps
scas
or
sbb
mov
dec
mov
xchg
or
mov
mov
popf
inc
in
les
dec
bsr
xchg
add
aaa
add
sub
push
xor
jmp
cmp
inc
loope
or
in
bound
addr16
xor
arpl
cld
fild
je
jbe
adc
jg
sbb
je
mov
js
jae
fsub
mov
call
cmps
sub
mov
rcr
out
test
jg
retf
cmp
mov
pop
rol
rol
sub
call
fiadd
pusha
push
dec
retf
adc
movs
dec
xor
repz
sub
iret
mov
retf
retf
lahf
pop
jmp
jo
dec
sti
ins
aad
pop
push
pop
or
fistp
cwde
in
ins
xor
add
cmp
icebp
fsub
and
and
in
mov
fsub
adc
lods
arpl
xchg
leave
mov
sbb
lds
inc
dec
into
std
pop
xlat
ins
jecxz
cmp
pushf
pop
and
ds
(bad)
sub
test
adc
push
jmp
cmc
push
dec
cdq
int3
fcompp
mov
pop
inc
or
jb
int
pop
xchg
push
or
jne
lea
sub
jnp
cmp
inc
ret
into
cmp
test
arpl
mov
ret
jo
cmp
jecxz
icebp
dec
jp
xor
loopne
ja
in
mov
pop
out
jns
pushf
int3
fwait
test
rcr
call
cwde
(bad)
xchg
in
and
dec
sbb
adc
sbb
and
js
call
push
mov
add
xchg
nop
ret
mov
jl
jns
test
mov
scas
jmp
fbstp
ja
out
push
xlat
sub
mov
(bad)
fdiv
mov
pop
push
and
push
cmp
dec
pusha
into
call
in
jae
(bad)
cmp
fsubr
cli
adc
and
mov
lahf
push
xchg
in
and
cmp
inc
jnp
and
(bad)
icebp
cmp
rcr
push
and
retf
retf
cdq
outs
push
sbb
leave
mov
shl
clc
bound
lods
and
repnz
aam
mov
retf
jg
pop
jecxz
inc
sar
sub
and
inc
cld
fs
xor
fwait
jmp
mov
iret
push
rcr
pop
jmp
mov
pusha
in
lods
int3
scas
in
sbb
pop
and
iret
xlat
shr
(bad)
nop
pushf
push
arpl
push
fcom
and
ins
rcr
push
mov
clc
sub
aas
cmp
lock
(bad)
add
(bad)
push
mov
imul
jecxz
mov
push
add
xor
mov
loope
push
sub
sbb
pcmpgtb
jmp
mov
xchg
mov
(bad)
frstor
cmp
push
adc
cmp
ror
sbb
jmp
cmp
lods
sbb
dec
je
test
sbb
(bad)
lea
fistp
dec
(bad)
ja
ins
jo
test
mul
repz
sbb
jb
cmps
movaps
and
adc
iret
jg
int
and
gs
pop
sub
jne
adc
movs
pop
add
ror
pop
xor
pop
js
call
lea
xchg
add
data16
mov
add
fs
imul
lea
ins
pusha
cmp
ret
add
fisttp
div
push
pop
pop
nop
adc
fwait
mov
icebp
sbb
ja
(bad)
imul
or
shl
and
inc
and
nop
mov
sbb
shl
fsubp
cmps
push
mov
mov
lahf
aas
mov
dec
js
outs
add
sti
sahf
loope
call
out
icebp
arpl
pop
data16
icebp
dec
mov
lea
fiadd
jb
push
add
dec
add
sub
or
xor
aas
xor
and
xor
sbb
(bad)
sar
adc
fcom
cs
pop
inc
and
mov
xchg
add
test
out
es
nop
jae
addr16
push
adc
sbb
loopne
inc
je
enter
movs
fdiv
shr
aad
ins
push
add
stc
test
or
mov
jge
mov
clc
mov
cdq
fucomip
or
lahf
sub
mov
jmp
push
imul
sub
movs
les
cmp
cdq
fdiv
scas
daa
add
sub
nop
sub
call
cmp
mov
mov
cmc
ja
scas
btc
push
mov
inc
dec
les
aad
stc
ret
es
dec
out
je
xchg
addr16
xchg
aad
cmp
cld
xchg
pop
mov
(bad)
div
psllw
mov
sbb
aas
(bad)
outs
mov
sbb
test
sti
mov
cmp
rcr
push
xchg
sbb
repz
fpatan
movs
or
mov
das
rol
cmp
push
inc
(bad)
cld
inc
(bad)
push
push
outs
stc
and
mov
popf
out
div
ins
push
out
jne
retf
call
data16
dec
mov
out
push
jp
leave
xor
mov
out
fdivp
cmps
aam
sub
cdq
gs
scas
popa
imul
and
dec
arpl
in
(bad)
dec
sub
movs
fcmovu
mov
push
dec
and
ror
cmps
jmp
cmp
sub
sbb
mov
pop
mov
repz
jmp
adc
fsub
jge
lods
enter
push
out
push
push
aam
sar
iret
jmp
fild
and
add
inc
mov
push
lds
les
repz
mov
inc
push
jnp
mov
cmps
jae
push
adc
pop
mov
repz
mov
movs
mov
push
ret
aam
sbb
mov
test
sti
xchg
out
loopne
(bad)
les
retf
add
cmp
mov
inc
xchg
sbb
dec
push
out
(bad)
not
xor
and
adc
lods
dec
fcomp
adc
or
ret
rcl
xor
inc
into
jmp
push
rcl
dec
push
xchg
inc
mov
fisub
sbb
loope
mov
sub
sub
fld
fnstcw
rcr
rol
shl
mov
mov
fstp
push
jnp
dec
cmp
cld
xchg
pop
out
jo
ret
cwde
jns
stc
(bad)
(bad)
mov
out
add
call
hlt
mov
cmp
xor
xchg
mov
lods
xchg
jno
jl
mov
xchg
icebp
mov
mov
ret
dec
push
cmpxchg
mov
es
or
icebp
fwait
mov
jne
rol
iret
jecxz
xchg
pop
and
pop
jnp
jb
out
sbb
push
xchg
jne
xchg
jp
stos
loop
push
iret
in
mov
adc
jo
cmp
jg
movs
ja
mov
or
cwde
hlt
mov
mov
jne
pop
dec
stos
xchg
ret
mov
stos
lods
dec
xchg
je
add
arpl
push
cwde
cmp
cld
push
call
adc
xlat
cwde
stos
cdq
cmp
sub
sbb
mov
es
jmp
jo
xor
daa
ins
(bad)
dec
sub
rcl
inc
fwait
xchg
and
dec
jmp
jl
ins
les
inc
pop
cmp
in
lock
adc
ins
ins
mov
jmp
cmp
mov
aas
jae
call
dec
mov
push
fucom
rol
xchg
iret
in
push
mov
jno
xchg
test
push
jnp
ins
outs
push
daa
fs
mov
inc
out
mov
bound
and
retf
add
cmp
mov
pop
retf
in
(bad)
xlat
sbb
lods
inc
outs
jnp
popa
mov
mov
adc
call
std
rcl
lds
pusha
iret
in
enter
push
rcl
out
sbb
ins
out
ss
adc
mov
retf
xchg
inc
pop
push
pop
imul
mov
cmp
dec
dec
retf
(bad)
lods
inc
or
imul
nop
imul
sub
xor
(bad)
sti
lods
or
and
rcr
in
sub
je
mov
cli
test
jne
imul
push
popf
int
shr
sub
push
push
jb
mov
cmps
sti
mov
movs
test
or
fimul
(bad)
mov
cld
arpl
retf
repnz
test
mov
arpl
iret
int
loop
int3
inc
sub
scas
or
mov
jmp
sub
imul
cmps
sahf
dec
xchg
bound
ja
scas
shr
pusha
mov
daa
mov
scas
movs
jl
mov
jnp
and
push
jle
test
or
xchg
(bad)
aad
push
sbb
adc
xchg
jno
cdq
lods
les
xchg
inc
add
repnz
loop
pop
add
(bad)
cmps
push
inc
sbb
sub
stos
mov
cli
enter
rol
mov
jge
mov
jae
and
xchg
cmp
ret
sbb
imul
or
inc
xchg
ror
sbb
rcl
jp
fadd
mov
out
ja
push
test
mov
or
jb
lock
lods
ins
and
sbb
cmp
mov
push
stc
ds
pop
add
dec
scas
movs
mov
add
fist
xchg
jb
adc
into
inc
cmps
stos
sub
xor
fadd
pusha
jmp
add
loopne
push
aaa
jmp
adc
(bad)
adc
ds
mov
test
add
mov
int3
xchg
mov
out
fiadd
push
enter
mov
add
mov
pop
sbb
inc
scas
and
xor
dec
push
sub
pop
push
sub
push
jbe
lock
cmp
test
pop
hlt
xchg
pop
movs
bound
out
inc
repnz
adc
in
test
xchg
js
in
pop
data16
mov
es
push
xchg
ins
movs
mov
movs
mov
jb
jmp
jp
out
xor
out
js
das
mov
cmp
cmp
and
adc
xor
loopne
jmp
cmps
push
xchg
jne
jp
xor
retf
adc
icebp
inc
adc
mov
scas
mov
add
sbb
std
movs
pop
xchg
xor
cmps
les
jmp
(bad)
in
in
std
mov
out
dec
xchg
sub
jp
icebp
cwde
fucomip
mov
cmps
or
call
mov
pop
dec
and
scas
xor
(bad)
jg
add
fcmovb
shl
data16
scas
xor
in
popa
mov
mov
inc
or
mov
xchg
les
jae
push
call
repz
mov
dec
fld
ffreep
arpl
push
sbb
idiv
sbb
lods
xchg
mov
xor
cs
mov
sub
pop
jp
push
and
push
cwde
xchg
(bad)
frstor
movs
inc
fnstenv
push
push
push
mov
jp
imul
xlat
mov
in
xchg
call
clc
or
bound
push
push
femms
jo
bound
fwait
sub
loopne
push
test
(bad)
not
jecxz
nop
shr
out
jo
jl
pop
mov
lahf
pop
js
push
add
fidiv
mov
inc
out
jmp
fwait
pop
or
mov
sbb
mov
sub
sub
inc
stos
push
lods
jmp
inc
pushf
add
into
mov
sbb
cld
add
icebp
cmp
fwait
adc
test
push
(bad)
repnz
xchg
mov
push
jg
in
xor
stos
dec
xchg
sub
jge
imul
sub
xchg
push
inc
dec
jmpw
xchg
(bad)
adc
test
dec
in
(bad)
sbb
mov
cmp
mov
dec
add
dec
cld
jns
mov
sbb
push
int
mov
xlat
in
call
xchg
clc
rcl
pusha
mov
(bad)
sub
shl
popf
ret
movs
dec
adc
in
sbb
mov
jecxz
jno
pop
jne
mov
sub
ror
fnsave
cs
jne
jmp
xor
inc
inc
stc
jb
xchg
xchg
jmp
and
mov
xor
jg
inc
xlat
xor
cmps
test
push
shl
sub
retf
mov
add
call
mov
movs
in
cmps
fsub
cmp
jns
mov
sbb
test
js
jno
and
xor
or
mov
cdq
jno
inc
push
fwait
or
cmp
pusha
and
xchg
xchg
int
jbe
adc
or
pop
add
mov
jecxz
cmps
mov
mov
mov
test
inc
sub
mov
stos
retf
cmp
inc
pusha
bound
jb
ror
pop
jne
adc
ins
and
retf
jecxz
lods
pop
jmp
xchg
jb
mov
test
lea
jg
sub
pop
adc
rol
sub
dec
mov
jmp
jmp
popa
je
test
add
and
fadd
adc
jae
xor
test
repz
push
std
mov
mov
pop
add
jnp
jmp
out
aaa
popf
xchg
pop
adc
pop
adc
lahf
mov
cld
inc
test
fcomp
pop
shr
mov
jnp
mov
jns
arpl
cmps
xor
xor
mov
or
dec
sti
iret
cmp
inc
jne
ret
loop
push
ror
adc
sub
pop
xchg
ins
gs
fwait
mov
inc
sub
icebp
rcr
cmps
add
lock
and
xor
mov
clc
dec
out
cld
retf
in
retf
fmul
xchg
xchg
pop
pushf
dec
jnp
popa
inc
xor
sbb
fdivr
xchg
fs
stos
inc
rcr
jnp
mov
fcomp
dec
lock
push
adc
js
pusha
add
xchg
jnp
sbb
or
or
push
jge
sbb
cmp
cmp
add
call
push
inc
xchg
inc
iret
addr16
test
outs
test
fwait
je
xchg
mov
popf
fst
ss
mov
inc
fs
repnz
mov
pop
or
jne
push
push
div
pop
mov
cmp
cmps
rcl
pop
(bad)
or
cmc
sti
ret
mov
and
mov
sbb
push
das
outs
pop
stc
jp
push
repnz
imul
sbb
push
hlt
pop
mov
jb
mov
pop
aaa
(bad)
fwait
xor
or
bound
pop
jmp
hlt
jmp
call
ror
dec
or
(bad)
std
push
mov
mov
aad
add
pop
(bad)
and
inc
push
js
inc
pop
lahf
cmp
mov
mov
push
pop
jg
push
sub
fs
sub
pusha
xchg
add
sbb
test
pop
cmp
pushf
outs
loop
adc
cmp
retf
lods
cmc
adc
rcr
popa
fwait
adc
aaa
xchg
rol
jmp
push
sub
or
(bad)
mov
fidivr
sbb
and
push
mov
int
ret
das
into
sbb
daa
cmp
addr16
int3
scas
fcomp
arpl
pop
out
mov
push
ins
fcom
call
fsub
push
iret
mov
cmp
clc
scas
arpl
or
out
xor
pop
and
out
stos
xchg
mov
jmp
add
or
inc
outs
daa
std
mov
xor
test
mov
add
cmp
fld
aad
pop
sbb
xor
sbb
and
xchg
jg
push
test
adc
add
push
pop
add
mov
dec
jnp
aam
add
pop
dec
stc
shl
les
mov
xor
jo
movs
add
das
xlat
adc
mov
(bad)
push
add
cmp
or
sti
xchg
push
jle
and
add
xchg
mov
in
lea
jecxz
ror
loope
cmps
pusha
cs
ins
pop
in
inc
mul
out
clc
lock
or
loope
sbb
add
les
add
cmp
jbe
sub
sbb
jle
cld
xchg
xchg
jo
cli
out
or
scas
jl
enter
mov
jno
xchg
sbb
mov
ret
sub
xchg
loope
mov
sbb
dec
ins
inc
mov
sti
mov
daa
mov
inc
cmp
adc
mov
scas
or
cdq
mov
or
addr16
loope
mov
data16
addr16
cmc
not
xchg
je
push
xchg
jmp
dec
arpl
inc
jp
pop
dec
jnp
aad
sar
repz
out
cli
push
or
int
add
loopne
and
cli
push
mov
addr16
xchg
cmc
jns
dec
fs
or
mov
rol
outs
call
fwait
pop
int
xor
and
xchg
pop
dec
(bad)
jmp
pop
fsubr
jb
std
inc
or
mov
fldcw
cdq
loope
inc
sar
imul
fldenv
add
dec
mov
jle
pusha
imul
fnstsw
inc
cmp
jb
xchg
xchg
sbb
or
and
mov
aam
icebp
mov
sbb
fcmovne
cs
jmp
cmp
xor
jg
movhps
jl
cs
xor
(bad)
out
xor
sar
dec
fstp
rcr
loope
push
fsubr
popf
sahf
lock
fnstenv
call
pop
not
xchg
cli
jp
js
and
sbb
cwde
pusha
push
pop
in
sbb
adc
int3
dec
mov
adc
or
call
(bad)
repz
repz
gs
fistp
sahf
mov
cmps
out
popf
mov
das
mov
push
pushf
mov
fisub
sbb
adc
add
jg
jo
inc
scas
or
in
pop
add
outs
mov
icebp
enter
push
push
inc
ret
and
pop
jg
jne
fist
outs
jns
call
(bad)
push
jmp
cli
cmp
add
jnp
inc
imul
popf
sbb
lahf
adc
xchg
aas
jecxz
adc
dec
xor
xor
add
mov
out
adc
aam
jmp
pop
stos
dec
clc
test
popa
cwde
inc
xchg
push
push
loopne
jbe
icebp
es
or
nop
les
(bad)
aam
repnz
adc
sbb
adc
(bad)
jg
enter
scas
xchg
fs
jmp
cmp
and
or
ins
out
rcr
push
cs
pop
inc
push
loop
sub
mov
popa
mov
dec
cmps
cs
int
jns
add
or
addr16
xchg
or
aam
jne
cmp
(bad)
xlat
(bad)
std
test
ins
or
and
stos
add
xor
movs
(bad)
pop
dec
mov
fidivr
pushf
rcl
sar
mov
xchg
js
pop
and
push
sti
aas
xchg
mov
sbb
jp
int
push
and
fmulp
arpl
int
lods
dec
push
int
pop
repnz
ret
je
shr
sbb
xchg
add
mov
(bad)
enter
sub
stc
add
inc
scas
call
stc
sub
fidivr
out
jp
pop
repz
lock
jmp
xor
out
in
ret
jb
fisubr
adc
ss
and
popa
lea
out
cmp
fucomi
mov
popa
cld
(bad)
adc
mov
sbb
push
out
or
mov
jae
icebp
cmc
cmp
clc
adc
adc
push
mov
adc
add
mov
ins
mov
stos
enter
push
and
test
pop
mov
xchg
jne
push
(bad)
jo
jnp
mov
je
xlat
lea
xchg
rol
mov
fiadd
pop
cld
pop
in
dec
and
push
push
add
scas
scas
pop
mov
pop
fistp
pop
repnz
ins
fsubp
push
sub
cld
int3
mov
cmp
aam
push
jle
adc
push
int3
dec
outs
test
frstor
test
push
jge
in
dec
jle
sahf
and
cmp
stos
push
in
test
dec
int
xor
aad
mov
call
xor
or
dec
nop
(bad)
daa
push
cli
sub
xchg
stc
mov
or
add
inc
and
mov
in
test
push
bound
inc
pop
sub
or
test
and
xchg
or
or
dec
mov
push
ret
addr16
sub
shr
and
sub
jmp
push
cmps
cld
pop
outs
mov
sbb
dec
mov
mov
iret
mov
dec
push
sub
mov
cmp
ss
inc
inc
cdq
arpl
mov
ret
sbb
outs
mov
cmps
sbb
cmp
xchg
(bad)
dec
fdiv
out
adc
cmp
cmp
sbb
or
stc
sub
stos
sub
push
scas
xchg
sub
push
or
add
hlt
pop
xor
(bad)
retf
out
jl
sub
mov
push
add
in
add
sti
cmp
mov
daa
not
mov
es
xlat
lods
jle
mov
lock
int3
pop
fimul
clc
stos
cmp
mov
clc
sub
nop
lods
and
add
adc
in
push
mov
jp
mov
out
mov
xchg
or
outs
dec
xor
mov
lods
fcmovbe
hlt
push
cli
jo
sub
lods
pop
test
xchg
enter
std
sub
retf
sub
xchg
in
mov
xchg
sahf
jge
jnp
popa
push
loope
cmps
out
pop
pop
(bad)
outs
xchg
mov
xchg
inc
mov
mov
scas
dec
push
fwait
jns
out
test
mov
push
sbb
mov
std
fwait
and
jno
arpl
dec
icebp
add
jle
mov
in
test
fsub
mov
in
pop
push
ins
mov
cs
sub
cmp
fwait
call
mov
sbb
cmp
pop
fcmovu
ret
dec
popa
add
mov
mov
loopne
ja
or
cdq
enter
in
aam
fadd
jg
stc
call
add
outs
es
aas
(bad)
rcr
jmp
jb
cld
pop
fld
mov
push
cmps
sbb
rol
mov
scas
jno
or
or
fist
jbe
mov
sar
dec
pop
cmp
loop
icebp
cmp
or
mov
xor
xchg
out
(bad)
ins
inc
sti
gs
out
(bad)
loope
mov
jae
add
pushf
call
in
lea
push
push
lahf
add
call
xor
stos
in
lock
or
pop
jo
shl
jle
mov
lods
mov
and
add
mov
pop
popf
cmp
pop
inc
sub
cmp
inc
test
sbb
xchg
clc
jbe
add
sahf
mov
inc
adc
mov
pop
mov
ss
pop
leave
mov
or
push
fistp
ret
xchg
bound
jb
mov
in
mov
and
and
jp
mov
fwait
cmp
add
push
adc
shl
iret
lahf
std
jae
mov
das
sbb
movs
lahf
lock
add
out
ins
fldenv
jno
jp
mov
aad
gs
leave
aad
jne
dec
add
cmps
sub
or
push
(bad)
adc
mov
ret
adc
xor
mov
mov
sbb
xor
mov
or
test
sar
lods
repnz
(bad)
cmp
mov
push
inc
adc
sub
adc
scas
push
mov
push
ss
push
retf
rcl
mov
push
test
test
mov
lods
adc
mov
(bad)
sahf
mov
ins
jl
les
mov
mov
pop
lahf
ds
test
push
and
dec
xor
jmp
mov
mov
je
call
mov
and
adc
pop
mov
stc
cmp
jno
daa
inc
xor
mov
sbb
cdq
js
pushaw
cwde
aas
and
push
cwde
jle
jecxz
aas
and
and
and
outs
and
mov
cmps
aad
lock
rcl
xchg
xlat
je
cmps
es
test
stos
mov
pop
inc
xchg
jmp
sub
out
rcr
xchg
mov
push
gs
sti
dec
adc
pusha
sub
jp
nop
in
add
cs
das
push
pusha
sbb
jbe
call
cmp
push
pop
ret
add
xor
pop
and
sub
pop
movs
cmp
loopne
stc
daa
push
adc
aam
jg
in
cmps
mov
inc
frstor
mov
stc
stc
or
(bad)
jmp
stos
mov
aaa
aas
mov
leave
xchg
xlat
xlat
sub
pusha
mov
cmp
fdivrp
imul
ret
and
push
imul
mov
or
retf
or
fcomp
jmp
fisttp
push
iret
jmp
add
mov
inc
aas
dec
add
dec
sbb
pop
in
stos
fstp
xchg
es
(bad)
ja
out
retf
cmc
shr
sti
ror
inc
sti
push
jne
xchg
out
pop
call
jne
call
push
xchg
call
sub
cld
out
test
loope
in
shr
addr16
sub
cs
movs
mov
imul
pop
scas
pop
and
outs
sub
out
mov
sub
push
aam
cmp
(bad)
push
jecxz
or
mov
loopne
mov
jmp
test
xchg
addr16
cli
sub
pop
dec
das
mov
mov
cmp
out
shr
sahf
retf
out
add
inc
cmp
jg
mov
xchg
mov
rcr
xchg
sub
in
loopne
dec
cdq
pop
pop
nop
inc
pop
and
mov
hlt
sub
jmp
sahf
xlat
jne
outs
cwde
jnp
dec
neg
and
(bad)
mov
xchg
mov
out
pop
sbb
cs
cmps
clc
xor
addr16
mov
jb
inc
push
loope
mov
cs
xchg
or
ficomp
xor
xchg
shl
pop
lock
lods
xor
retf
cmp
test
shl
sar
mov
and
dec
mov
(bad)
fisubr
xlat
fcmovbe
jo
out
adc
mov
inc
ret
out
cwde
adc
push
mov
loope
out
xchg
push
stos
ret
lds
mov
loop
mov
pop
arpl
shr
jo
rol
pop
test
outs
shr
dec
and
push
add
mov
les
(bad)
rcl
gs
push
mov
push
cmp
jmp
adc
xchg
cmp
dec
xor
scas
cmps
aad
aam
mov
out
jnp
test
loope
js
ret
loop
dec
and
jmp
push
in
clc
xchg
fmul
rol
rcr
std
xor
mov
sahf
xchg
jb
mov
test
into
pop
in
and
sti
xchg
push
jg
std
xor
add
(bad)
xlat
pop
les
int3
leave
cdq
push
test
retf
in
push
jnp
dec
call
mov
pop
in
adc
add
xchg
ds
lahf
cli
adc
shr
or
outs
ss
jmp
and
jns
aas
and
std
shl
and
mov
xacquire
ret
sub
movs
pop
cmp
jb
add
inc
retf
(bad)
iret
cmps
outs
(bad)
push
adc
cs
mul
cdq
in
sar
jmp
jns
mov
daa
mov
loopne
or
loop
aas
test
shl
inc
popf
call
icebp
adc
out
xchg
or
(bad)
jp
dec
mov
imul
rcr
sbb
or
inc
xchg
and
test
fsubr
test
xor
aaa
arpl
or
and
loop
push
add
xchg
out
add
lea
repz
mov
sti
cmc
fwait
mov
mov
retf
test
je
test
je
jno
jae
out
mov
jmp
retf
push
(bad)
dec
xor
out
mov
mov
ret
push
mov
imul
pop
and
lahf
outs
dec
ret
or
daa
mov
cmps
mov
xchg
into
sbb
add
pop
xor
hlt
mov
call
sub
sar
js
in
jmp
mov
dec
sti
jle
or
gs
add
outs
push
nop
inc
ror
nop
repz
push
add
adc
fstp
iret
call
scas
stos
lds
popa
js
push
mov
mov
jo
jb
push
lahf
ins
push
jae
or
in
enter
jle
lods
push
cmp
xchg
cmp
ds
xchg
fild
scas
test
(bad)
int
sahf
sbb
test
push
add
pusha
fidivr
jno
push
pop
pop
dec
retf
inc
push
jns
add
scas
jbe
xor
enter
xor
xor
std
es
aam
push
xor
or
pop
mov
data16
lock
mov
cmp
or
adc
sub
arpl
or
or
add
into
jmp
ins
sahf
adc
outs
test
cmp
mov
out
mov
push
pop
(bad)
jmp
jle
outs
scas
mov
jg
and
fwait
dec
popa
test
jae
nop
lock
mov
shl
imul
mov
shr
aaa
push
fs
and
int3
jmp
inc
pusha
xor
sbb
jp
xchg
test
xchg
or
pop
or
test
pop
mov
paddw
pusha
cmp
adc
test
jb
xchg
js
daa
dec
sar
inc
popa
jge
or
sub
(bad)
nop
push
cld
(bad)
out
iret
test
push
xchg
and
jne
daa
and
arpl
inc
adc
lods
jmp
imul
pop
nop
fcomp
xchg
mov
gs
stc
add
loopne
or
cmp
mov
in
dec
mov
add
into
mov
loopne
mov
dec
mov
xchg
loope
mov
ins
in
call
ins
fdivr
xlat
xchg
hlt
pop
clc
lock
fstp
lods
mov
add
push
push
lea
in
in
sbb
outs
xor
jno
jb
ss
outs
mov
sbb
call
add
sbb
aad
shr
leave
push
sub
and
push
pop
loop
push
push
or
mov
(bad)
in
lods
add
(bad)
fld
test
in
jae
cwde
addr16
jp
ror
xchg
dec
(bad)
adc
add
jmp
mov
mov
mov
sub
popf
pop
sbb
push
out
xchg
add
jge
pop
or
adc
sbb
sbb
mov
in
cld
ds
and
jnp
out
and
xor
jmp
inc
pop
cdq
cs
mov
dec
mov
mov
movs
popa
fmulp
loope
cdq
movs
outs
(bad)
ftst
push
mov
test
outs
stos
mov
cmp
mov
call
aaa
pop
mov
pop
cmc
es
pop
imul
in
aaa
ret
push
scas
icebp
adc
int3
(bad)
in
mov
daa
mov
xchg
sub
out
and
mov
jo
push
pop
arpl
jle
pushf
nop
aas
cmp
push
ins
addr16
test
lea
(bad)
shr
and
outs
cmc
sub
ret
in
sti
push
adc
dec
fimul
xchg
(bad)
stos
cmp
jns
sbb
push
jp
or
retf
fwait
pop
mov
cli
pop
push
dec
bound
jp
inc
adc
(bad)
xchg
movs
int3
sub
inc
push
jl
(bad)
pop
fs
paddb
mov
mov
sub
aas
mov
mov
imul
sti
pop
mov
(bad)
mov
mov
(bad)
mov
sub
xchg
cld
jle
jnp
dec
jge
xor
xchg
dec
in
xor
cmp
cmp
push
pop
mov
and
cs
dec
and
ret
pop
std
bound
js
popa
retf
loope
push
dec
addr16
cmp
inc
icebp
inc
call
jmp
mov
outs
xor
js
xchg
(bad)
enter
cmp
fcom
jnp
jnp
cmps
push
pop
sar
push
nop
pop
cmp
mov
aad
xor
and
mov
lods
ins
(bad)
add
xchg
js
loop
out
ja
inc
xor
cmp
mov
add
es
les
sqrtps
aas
out
sbb
xchg
int3
cli
push
cmps
jnp
loope
inc
aas
movs
cmc
inc
mov
mov
push
lock
lods
ror
inc
daa
sub
cmp
sti
jno
in
es
(bad)
cli
xor
mov
fmul
xchg
sub
mov
in
mov
xchg
daa
mov
movs
xchg
pop
adc
jge
ret
mov
cmp
pop
stos
rol
adc
sbb
pop
arpl
xor
ja
sbb
retf
mov
dec
pop
inc
aaa
imul
rcl
imul
stc
jmp
std
cmp
mov
inc
cld
outs
cs
xchg
ds
mov
pop
shl
jo
fsubr
aam
cmp
add
fwait
mov
and
in
out
mov
je
mov
push
sbb
ficom
add
shl
fld
sub
arpl
mov
aad
mov
add
mov
pop
jp
or
or
mov
outs
push
adc
repnz
test
psubusw
fbstp
rcr
or
fcmovnu
test
mov
and
pop
xor
push
aam
rcr
mov
pop
dec
pop
sub
pop
and
stc
or
sbb
xchg
jecxz
inc
lds
jne
outs
xchg
out
rcl
data16
xlat
fcomp
fdiv
call
add
and
std
icebp
jmp
or
cmps
sbb
pushf
jp
mov
movs
push
push
popa
jo
pop
aad
jl
(bad)
out
fs
out
xor
(bad)
cli
push
sub
fsubr
sbb
cmp
aaa
mov
adc
dec
(bad)
pop
imul
scas
pushf
loop
pop
pop
mov
inc
sbb
mov
scas
cdq
je
sahf
es
mov
retf
push
loopne
test
retf
ret
mov
cmp
pop
add
test
arpl
lahf
xor
retf
jne
push
jecxz
fwait
les
dec
jno
mov
hlt
stos
cmp
push
dec
mov
je
xor
(bad)
ss
pop
xlat
inc
mov
js
sti
(bad)
clc
xor
sub
hlt
mov
mov
sbb
add
push
aad
pop
cli
mov
das
mov
push
push
add
ficom
xchg
ins
sar
mov
xor
push
pop
mov
jl
jge
xor
cmp
jge
dec
rol
stos
push
mov
sub
lock
jno
addr16
rcl
retf
lahf
push
sub
iret
sbb
and
loope
fld
jb
int3
xchg
fs
fcmovnu
outs
xchg
scas
pop
jg
mov
push
fwait
je
cmp
sbb
add
(bad)
loopne
lods
mov
and
dec
or
sahf
jecxz
jnp
cwde
cdq
xor
ins
push
gs
push
cmps
les
arpl
jbe
mov
int3
hlt
add
pop
mov
(bad)
and
or
inc
xchg
sbb
cs
movs
xchg
out
push
and
mov
jmp
or
stos
loopne
out
icebp
call
sub
mov
pop
pop
mul
add
in
inc
sbb
iret
or
mov
(bad)
xchg
test
jle
pop
adc
(bad)
cdq
ficomp
adc
mov
cld
(bad)
int
jns
sub
(bad)
sbb
cs
lods
inc
cmp
je
and
xor
bound
fldenv
enter
pop
inc
xor
xor
stos
pop
push
push
and
xchg
pop
(bad)
int
stos
adc
mov
or
sbb
adc
mov
push
(bad)
loope
mov
and
xor
(bad)
scas
mov
dec
mov
pop
arpl
cli
mov
add
pop
dec
add
repz
ss
cdq
mov
mov
lds
push
cmp
bound
mov
enter
mov
ins
adc
sub
loope
ret
dec
mov
(bad)
jecxz
jo
cmps
dec
lods
(bad)
shr
mov
leave
inc
ds
mov
scas
clc
dec
cs
mov
pusha
xor
rcl
mov
(bad)
sbb
add
ja
daa
cmp
inc
pop
movs
or
dec
xor
lahf
out
movs
ret
hlt
dec
dec
shl
fnstsw
add
mov
fdiv
(bad)
fld
jbe
dec
cmp
cmp
inc
sub
adc
test
loope
test
fisub
sbb
jae
push
or
out
mov
addr16
and
repnz
adc
and
mov
test
cdq
test
or
pushf
in
inc
sub
sub
sti
sub
pusha
pop
mov
mov
fmulp
ret
rcr
pop
ins
call
dec
and
rcl
enter
in
adc
sbb
adc
cli
jae
sar
push
out
out
(bad)
ror
inc
das
cmp
push
dec
fidivr
out
aaa
cmp
xor
adc
std
stc
add
sbb
pop
push
sti
test
push
hlt
xchg
and
cdq
and
push
outs
and
int
(bad)
loopne
shl
xor
int3
add
and
adc
ins
iretw
adc
test
xchg
daa
xchg
sub
mov
mov
sahf
fmul
ret
sbb
xor
mov
repnz
push
es
and
ret
jnp
icebp
jmp
(bad)
idiv
jg
xchg
gs
push
cmp
(bad)
push
adc
sub
jmp
or
sar
xchg
adc
sub
int
cmc
sti
mov
xor
sar
test
sar
xor
cmp
inc
scas
imul
pop
pavgw
and
stos
gs
sub
das
fld
or
sub
clc
mov
inc
jne
mov
pop
outs
pop
push
push
pop
or
bound
je
push
mov
pop
pop
jnp
inc
adc
cmps
ins
int
mov
cli
gs
push
test
cmp
push
mov
jle
or
push
mov
retf
gs
mov
stos
in
test
retf
dec
sahf
pop
pop
loopne
aas
jg
jg
push
inc
lock
push
sar
mov
out
jl
ror
lods
loopne
mov
dec
cmp
jle
push
mov
jb
hlt
dec
ss
push
ficomp
mov
jl
pushf
adc
rcr
outs
stos
push
lock
cld
loop
stos
stos
jmp
adc
js
ret
pop
mov
popf
mov
or
sbb
adc
(bad)
into
in
jge
inc
retf
(bad)
inc
xchg
cmp
cli
or
mov
cmp
fcmovb
cmp
mov
xor
lds
add
jo
jb
test
pop
icebp
or
pop
sub
sub
es
jge
jae
sub
pop
clc
xchg
push
jnp
or
mov
dec
sbb
mov
icebp
js
jmp
add
add
retf
dec
jo
sahf
outs
mov
mov
pop
int3
push
mov
jne
or
aam
mov
lods
lds
imul
add
mov
pop
cmc
inc
jbe
cld
mul
rcr
loope
sub
loope
loop
test
sbb
xor
and
cmp
xchg
cmp
cmps
popa
pop
retf
mov
push
add
stos
outs
mov
rcl
pop
push
sub
inc
inc
movntq
inc
pop
inc
(bad)
xor
push
mov
push
dec
xchg
int
inc
sub
je
xor
cmp
and
or
cmp
sbb
cwde
mov
xchg
dec
push
in
xor
push
loop
mov
sbb
inc
or
sbb
gs
cmps
cmp
popf
(bad)
fld
sti
cmc
rol
xchg
outs
cwde
jecxz
test
rcr
dec
ret
mov
push
inc
push
cmp
hlt
mov
div
jae
fidivr
add
or
stc
shld
pop
popf
xor
cld
sbb
sti
mov
xchg
inc
add
adc
jns
lods
stos
pop
adc
test
dec
idiv
iret
add
icebp
dec
mov
push
jnp
icebp
loopne
enter
fwait
dec
lds
cmp
pop
push
push
push
pop
je
or
es
xchg
mov
movs
inc
scas
paddq
or
cs
adc
sbb
sahf
cmp
mov
push
add
dec
sub
or
xchg
mov
(bad)
(bad)
aad
pop
mov
or
aam
sub
call
(bad)
mov
xor
push
test
out
scas
xchg
adc
and
pop
movs
push
jmp
mov
mov
cmp
push
stos
push
cdq
test
ret
push
mov
int
and
xchg
ror
call
hlt
jno
add
inc
cmp
push
pop
in
inc
repz
mov
sub
mov
mov
lea
cld
xor
sti
ds
test
test
popf
cmc
jo
hlt
xor
push
xor
(bad)
ss
nop
sbb
ror
pushf
cmp
mov
loop
rcl
fist
mov
mov
xor
(bad)
sti
cmc
loop
dec
lods
repnz
loopne
add
sbb
arpl
mov
movs
mov
cmc
mov
jnp
mov
mov
push
jge
clc
cmovl
and
and
inc
outs
aam
mov
dec
add
dec
xor
retf
mov
sbb
std
mov
pcmpgtw
xchg
mov
int3
leave
movs
cs
outs
sbb
jb
sub
xchg
sbb
sbb
hlt
push
pop
enter
and
and
shl
sub
fwait
xchg
lods
aad
sbb
push
push
scas
shl
(bad)
cmp
cmp
in
xor
mov
je
pop
push
aaa
push
jge
sbb
jo
mov
bound
lea
mov
inc
test
mov
aam
mov
push
add
xor
pop
out
shr
push
push
cmp
out
enter
push
jmp
and
adc
pop
pop
jnp
in
sub
push
inc
dec
push
fstp
shr
pop
in
sub
jecxz
jns
sbb
add
push
out
ret
adc
jne
push
fistp
dec
test
jp
lock
lahf
mov
js
sub
sbb
xchg
push
jbe
sbb
das
xor
aad
call
sbb
cli
movs
clc
xchg
sbb
inc
or
sub
shr
pop
cdq
enter
sbb
jl
dec
movs
pop
sti
jmp
out
js
push
or
push
cmp
cmp
and
mov
jg
pop
sbb
cmps
jl
jno
and
sbb
pop
iret
dec
pop
cmp
cmps
(bad)
pop
jb
xchg
out
cdq
inc
imul
fs
cwde
das
dec
js
inc
(bad)
retf
adc
div
out
ins
fs
sub
scas
add
pushf
pop
imul
pop
inc
ds
mov
jo
sbb
push
add
mov
mov
or
push
sub
mov
(bad)
bound
pop
xor
cmp
test
jne
in
jle
ins
and
out
dec
adc
fwait
or
inc
jmp
or
jb
stc
pushf
mov
cdq
xchg
jmp
loop
adc
sti
pop
sar
add
mov
loopne
pusha
rol
cmp
(bad)
sbb
push
jbe
push
push
mov
cmp
cwde
sub
dec
adc
push
mov
pop
outs
mov
xchg
inc
inc
pop
xchg
jmp
pop
test
sub
pop
sub
shl
cmp
cmp
nop
repz
jmp
push
xlat
adc
mov
bnd
cmp
xchg
inc
xchg
sahf
push
aad
cmp
sbb
sbb
push
pop
add
sti
test
mov
xor
or
xor
(bad)
call
and
mov
xchg
and
in
loope
add
xchg
pop
arpl
xor
fisttp
mov
mov
add
lods
dec
setnp
repnz
outs
(bad)
pop
lock
cmp
add
(bad)
mov
xchg
mov
inc
ins
jle
out
dec
in
inc
push
data16
ins
sbb
pop
adc
jge
nop
jo
les
and
dec
(bad)
push
lahf
mov
xor
sbb
push
aam
xchg
inc
std
cmps
mov
mov
jmp
int
sub
jo
rcl
das
jne
adc
add
sbb
(bad)
loopne
nop
les
ins
stc
je
outs
test
cmp
add
rcl
jmp
mov
push
xchg
pop
sub
jnp
sub
jb
stos
dec
(bad)
jo
lods
cmp
inc
scas
mov
pushf
fwait
lods
inc
inc
sti
sub
rol
call
ret
xchg
sub
loop
xor
mov
pop
mov
dec
sub
mov
stos
and
xchg
imul
popf
add
mov
lahf
call
jbe
ins
es
xor
loop
inc
xchg
fld
loope
adc
push
ins
or
xchg
adc
rcl
imul
mov
ret
ins
mov
pop
dec
and
mov
xchg
pop
mov
xor
stc
inc
push
or
fsub
push
push
xor
out
outs
fiadd
mov
push
mov
div
dec
daa
pop
int
into
lods
cwde
pop
and
ret
mov
pop
mov
sbb
adc
mov
test
cmc
out
(bad)
enter
cdq
or
sbb
ds
mov
mov
test
sbb
push
dec
out
pushf
retf
push
stos
mov
arpl
push
dec
mov
sub
fsub
js
dec
adc
rcl
add
or
clc
jnp
dec
shl
lahf
pop
jb
int
xor
pushf
mov
lods
jg
pusha
sbb
scas
mov
scas
test
out
mov
popf
outs
inc
and
xor
shl
mov
jl
or
sub
dec
inc
sub
movs
inc
fwait
(bad)
pcmpeqb
mov
(bad)
jb
or
add
xchg
xor
out
and
sub
pop
repz
xchg
cdq
loop
mov
xor
gs
mov
inc
mov
scas
pop
out
adc
push
mov
(bad)
scas
inc
push
jnp
mov
lods
repz
stc
(bad)
xor
or
ds
pop
jne
mov
test
xor
rcr
jmp
sahf
loop
arpl
push
dec
pop
and
cmp
inc
daa
add
xor
cmp
stos
test
push
imul
and
or
dec
outs
push
inc
es
add
fild
les
dec
js
call
pop
(bad)
jb
ja
mov
je
ror
(bad)
std
jp
jo
(bad)
or
xor
lock
cdq
mov
repz
inc
loopne
adc
sub
xor
add
std
push
jns
xor
(bad)
hlt
shr
pusha
jno
loop
fs
mov
mov
mov
cwde
lahf
add
cmps
mov
aaa
add
xor
jmp
fst
movs
xchg
lahf
ins
push
fwait
pop
xor
pop
int3
das
les
popf
mov
movs
mov
iret
enter
mov
jbe
mov
nop
aas
int3
test
pop
(bad)
das
cmps
and
mov
loopne
xor
std
push
jbe
jmp
jae
pop
int
pusha
add
dec
rcl
jmp
mov
cs
sbb
xlat
cmp
mov
mov
dec
iret
popa
sti
cdq
nop
sub
xchg
imul
in
add
fcomp
scas
out
lds
test
push
leave
jns
mov
aas
dec
pusha
jl
in
bound
push
jl
repz
xor
cmp
lock
or
pusha
jge
inc
pop
ds
dec
inc
pop
mov
mov
repz
cs
not
push
inc
out
mov
pusha
xor
shl
mov
sbb
or
jecxz
test
mov
xchg
or
dec
adc
fist
sub
add
repnz
add
out
sub
loop
mov
stos
mov
xchg
dec
test
xor
fsubr
pusha
call
shrd
fild
sbb
push
inc
sbb
jl
loope
push
jne
cmps
retf
or
mov
daa
rcl
or
cdq
or
cmp
ins
mov
or
adc
mov
cmc
int
mov
jbe
mov
inc
push
test
dec
shl
lods
call
arpl
xor
sti
test
sbb
jg
lods
mov
mov
in
clc
cmp
inc
ficom
mov
bound
call
fwait
sbb
sbb
hlt
sbb
loope
jg
mov
popf
dec
xor
push
pcmpgtd
jbe
ror
add
call
or
imul
xchg
dec
(bad)
jmp
mov
push
cwde
jl
(bad)
sub
or
scas
lods
pop
aad
(bad)
jecxz
enter
ror
test
mov
pop
mov
loope
mov
sub
push
in
fs
inc
mov
sub
fadd
sub
mov
fdiv
sbb
pop
movs
jne
add
cmp
xchg
aad
ret
jnp
mov
ss
or
mul
xchg
fimul
aas
test
(bad)
sub
icebp
ror
push
jns
nop
outs
popf
sbb
mov
xchg
cmp
retf
mov
jge
dec
scas
adc
pop
test
fyl2xp1
cmp
test
xor
cmp
inc
adc
xor
sti
mov
xchg
sbb
mov
fnstcw
out
xchg
ins
mov
stos
aaa
out
cmp
jnp
nop
popa
xchg
push
dec
mov
fcmovb
mov
outs
mov
xor
shr
(bad)
imul
mov
fcomp
cmp
xchg
mov
sar
cmc
ins
mov
adc
dec
movs
mov
retf
arpl
jae
sub
push
xchg
jecxz
pop
cmp
shl
hlt
(bad)
mov
neg
fs
push
(bad)
cmp
fadd
lds
sub
mov
fadd
sbb
imul
neg
in
outs
nop
add
sbb
pop
ret
jmp
fmul
xchg
retf
call
mov
pop
nop
ins
dec
mov
push
push
mov
fwait
push
and
(bad)
push
mov
cmp
pop
outs
cmps
lock
shr
jb
jno
fimul
test
out
test
dec
xor
gs
mov
push
pusha
outs
pop
jo
xchg
adc
call
das
jne
push
jo
(bad)
das
inc
mov
fs
int3
xchg
into
retf
inc
pop
fstp
loopne
mov
jp
aad
jge
frstor
xchg
ja
xor
clc
dec
fs
icebp
fdivp
cmp
xor
lahf
xchg
jle
mov
add
mov
in
or
rcr
cmp
mov
out
gs
in
xchg
ud2
ret
jp
mov
std
jbe
dec
leave
mov
pop
mov
jbe
fbld
adc
nop
mov
sub
ret
push
pusha
and
scas
push
(bad)
std
dec
lods
pop
xchg
nop
jg
sub
ins
ja
cmp
xchg
xchg
mov
popf
and
in
int3
mov
mov
pop
pop
mov
mov
stos
sub
sub
xor
ss
int
(bad)
out
inc
jp
inc
xchg
push
xchg
aad
sbb
aas
ins
sbb
cmps
mov
fldenv
inc
mov
iret
mov
mov
clc
sar
out
and
mov
adc
push
call
imul
addr16
mov
add
enter
mov
adc
push
push
mov
leave
cmp
and
add
or
push
(bad)
rcr
hlt
sub
cwde
xchg
adc
xor
cmp
dec
inc
(bad)
(bad)
mov
arpl
ins
inc
cld
jmp
in
add
leave
cli
inc
ds
mov
stc
mov
xor
pop
mov
pop
adc
jg
xor
es
mov
sahf
fwait
int
in
mov
out
push
cmp
lods
xchg
and
jge
arpl
jae
jp
or
(bad)
or
in
call
call
cmp
daa
lock
cdq
daa
mov
shl
into
inc
jle
cmp
mov
div
add
std
fucomi
push
xchg
ja
sub
jae
cwde
cmp
shl
push
or
or
xchg
adc
arpl
lods
sub
mov
xchg
mov
jle
adc
fadd
mov
mov
mov
sbb
lahf
das
adc
stc
inc
test
xlat
nop
bound
mov
arpl
inc
out
dec
sub
or
movs
xor
ret
fsubr
out
xchg
inc
retf
retf
idiv
xchg
or
fs
sbb
lods
mov
add
push
ins
mov
(bad)
sub
xchg
jb
mov
dec
cwde
mov
lock
mov
push
in
stc
cmp
repz
sbb
(bad)
xor
mov
mov
mov
arpl
xchg
mov
aas
aaa
ror
pop
cmps
jo
pop
je
iret
dec
xor
loop
enter
ins
int
test
outs
(bad)
popf
(bad)
sar
arpl
outs
(bad)
xor
xor
push
call
pop
loop
ja
mov
sub
cli
and
or
div
mov
mov
adc
jp
(bad)
pop
and
dec
mov
mov
xchg
push
and
adc
bts
push
ja
push
mov
paddusb
mov
in
and
repz
xor
pop
arpl
inc
out
dec
jle
sahf
movs
inc
test
cmps
sub
test
add
adc
ins
xor
adc
inc
bnd
inc
repz
and
jmp
push
fisttp
(bad)
fs
shr
or
mov
mov
stc
call
not
jg
push
jmp
shr
inc
dec
sbb
cmp
enter
cmc
movs
add
fld
ror
ins
cmp
jmp
fstp
fs
mov
pop
or
icebp
movs
jp
add
outs
not
inc
jno
jle
ss
test
sbb
into
jbe
ror
movs
jns
int3
mov
and
push
in
clc
aas
call
sub
mov
jns
cmp
jle
xor
ret
cs
inc
mov
sub
sub
cmc
cs
iret
mov
jmp
fisubr
inc
inc
cmps
stc
imul
test
sbb
dec
fiadd
lds
pop
cmp
push
xchg
mov
pop
push
pop
mov
icebp
outs
and
or
mov
shl
outs
xor
pop
or
ret
pop
mov
je
wrmsr
leave
sub
xchg
cmp
jnp
and
scas
leave
inc
sub
cs
jmp
inc
push
std
push
adc
popa
xor
fld
add
cmps
ret
daa
cmp
xchg
pop
add
sbb
ins
fist
std
lahf
retf
sti
xchg
xchg
ja
div
push
in
pop
dec
iret
nop
popf
(bad)
loopne
or
cdq
stos
add
fwait
xchg
shl
jl
adc
adc
add
pop
jo
les
shr
dec
call
adc
push
mov
bound
retf
mov
add
das
cmp
or
aaa
inc
xchg
jmp
push
ror
pop
jmp
leave
push
mov
adc
js
dec
add
fdivr
shr
cmps
ss
fdiv
scas
and
pop
ror
int3
pop
xchg
dec
movs
fcom
push
popa
cmps
std
in
(bad)
lods
dec
cdq
cmps
push
add
bsf
test
in
cdq
fsub
cmp
stos
xchg
(bad)
loop
(bad)
jnp
lods
inc
mov
cmp
inc
shl
xor
out
(bad)
leave
(bad)
enter
xchg
cmp
lods
adc
into
clc
xlat
lods
add
fwait
aam
add
xor
arpl
push
rol
pop
nop
adc
in
xchg
ja
jp
xchg
push
mov
ins
ss
loope
dec
pop
lock
push
push
ret
in
das
pop
rcr
repnz
xchg
ds
pop
sti
inc
rcl
sbb
and
jmp
fnsave
and
mov
sbb
push
sbb
ret
sub
(bad)
neg
xor
out
test
cld
jne
pop
xchg
ins
push
sub
movs
jmp
cmp
aaa
repz
bound
sahf
and
xchg
xor
subps
mov
add
and
test
test
dec
jo
sbb
rcr
cmp
out
sub
pushf
scas
dec
or
dec
sbb
add
add
cmp
cmpxchg8b
sub
fdivr
sbb
shl
mov
test
lahf
stos
inc
das
stos
imul
push
and
je
std
push
add
inc
stc
mov
pop
stc
ja
sub
sub
data16
addr16
xchg
int
out
mov
xor
repz
xchg
mov
ror
mov
push
fs
mov
sub
cmp
or
sbb
mov
jmp
push
and
cwde
add
add
retf
xor
push
sbb
xchg
test
fiadd
xor
cmp
xchg
mov
and
bound
cs
jg
cmp
or
inc
fwait
add
push
and
jle
dec
push
push
push
pop
jns
jae
adc
xchg
sub
inc
scas
inc
scas
aam
xchg
sbb
test
pop
movs
push
out
aam
ja
ss
and
in
dec
xchg
je
jge
es
(bad)
jmp
(bad)
push
imul
int
xor
cmp
mov
sbb
and
mov
call
add
add
fdivr
fs
inc
inc
gs
out
or
mov
(bad)
das
jle
and
lods
cwde
mov
and
sbb
sti
push
mov
xchg
ins
adc
push
add
inc
pop
jae
jno
dec
bound
outs
sti
pop
pop
push
pop
or
leave
ds
pop
arpl
adc
daa
outs
icebp
cmp
pop
leave
dec
sbb
adc
dec
js
sub
not
(bad)
hlt
lahf
sub
inc
outs
or
jae
sar
jnp
jle
fsub
bound
int3
lock
popf
mov
dec
leave
arpl
xchg
sbb
cmp
shl
in
add
xchg
mov
cmp
pop
xchg
or
xchg
jo
jns
pop
mov
loopne
and
sub
hlt
popf
gs
cmp
jo
dec
mov
movs
push
repz
sahf
pop
mov
and
cmp
mov
lock
movs
jle
sbb
aaa
jbe
cmp
xchg
cmp
jo
leave
mov
sub
div
pop
cmp
inc
and
mov
adc
fdiv
xor
test
cmps
gs
sbb
push
jmp
scas
sub
sub
push
adc
sbb
jns
xor
bound
pop
adc
xor
mov
ss
push
add
push
add
outs
pushf
fs
dec
or
xor
in
sbb
push
pop
mov
inc
jae
push
push
mov
aaa
sahf
xchg
sbb
in
shr
pop
mov
sub
cmp
jmp
stos
aad
bound
pop
stc
movs
xor
imul
pop
mov
push
sti
mov
add
xchg
nop
int3
arpl
and
mov
iret
ret
popa
jne
fild
push
add
stos
ds
jne
les
cwde
xchg
mov
pop
xor
cmp
(bad)
pop
jns
mov
cmps
into
xchg
push
add
loop
adc
pop
sub
idiv
sub
push
aas
mov
in
inc
imul
mov
add
mov
xor
stc
add
lock
push
stos
icebp
push
ss
mov
fdiv
aaa
ret
inc
sub
(bad)
xchg
test
push
push
jo
and
leave
int3
imul
dec
pop
popf
ficom
les
fnclex
test
neg
cwde
ret
aam
inc
mov
bnd
jbe
pop
je
(bad)
aam
xor
mov
outs
mov
mov
cmc
retf
es
jnp
push
sub
cmp
div
xor
(bad)
ffreep
stos
mov
pop
add
ret
jle
aam
clc
ja
(bad)
je
(bad)
cmp
popa
mov
lods
fist
rol
call
cmp
dec
jl
dec
or
cmps
push
ror
sti
sbb
inc
test
out
xor
dec
jns
out
daa
push
sub
int3
add
popa
test
or
dec
push
int
jmp
mov
rcr
aam
inc
aam
push
je
(bad)
lods
or
pop
dec
dec
scas
sbb
mov
mov
inc
xchg
data16
cdq
xor
mov
out
mov
std
jne
fs
add
mov
fisub
xlat
rcr
add
pop
mov
mov
ds
push
adc
push
not
jmp
mov
mov
shl
and
div
mov
add
dec
(bad)
sbb
sbb
push
fidiv
lods
sub
and
adc
out
sub
je
pop
jle
push
scas
test
cli
out
sub
jne
push
pop
xor
dec
(bad)
aam
cmps
jae
pop
sub
mov
cmps
or
and
test
or
out
into
xor
xor
loopne
stos
mov
rcr
aad
dec
mov
punpckhwd
xor
stos
outs
sbb
adc
inc
call
jae
fadd
push
ret
pop
or
mov
dec
fdiv
inc
mov
and
aas
dec
and
call
mov
fistp
sbb
fimul
pop
outs
dec
and
push
js
mov
pop
xchg
(bad)
ds
jecxz
sub
inc
ret
pop
popf
call
(bad)
sbb
cmp
rcr
jns
jmp
cmp
sar
xor
sbb
hlt
inc
punpckhbw
cmp
add
jo
pushf
and
aam
pop
mov
js
sub
imul
retf
(bad)
mov
dec
cmp
dec
pop
out
jne
mov
dec
sub
test
xor
cwde
in
jmp
cs
popf
adc
add
jno
or
scas
test
popf
push
ins
xor
add
xor
out
outs
lods
jmp
push
mov
mov
cmp
xor
leave
pop
sti
push
inc
adc
ss
arpl
xchg
cli
xlat
jecxz
icebp
mov
sbb
add
jmp
sub
(bad)
out
and
aad
and
xor
mov
movhps
push
in
xchg
xchg
repnz
lea
push
xor
ja
pop
pop
js
adc
ror
cwde
outs
sub
ret
sub
jmp
ins
adc
adc
xlat
cli
pushf
push
add
cld
add
push
pop
add
adc
scas
rcl
jmp
clc
mov
sub
and
(bad)
sub
or
jo
jbe
dec
(bad)
fdiv
loopne
data16
jo
mov
mov
not
call
cwde
lds
sub
lods
stos
inc
push
add
and
push
sbb
or
jle
and
call
stos
pop
adc
sub
nop
adc
inc
cmp
mov
inc
sub
jno
les
aas
dec
adc
(bad)
in
imul
or
or
cs
ins
in
es
mov
pop
fsubr
pop
loope
mov
cmp
popf
xchg
and
call
iret
push
mov
and
adc
movs
mov
mov
xchg
test
mov
aas
inc
movs
xor
dec
xchg
ret
sbb
imul
sub
add
daa
adc
movs
idiv
cmps
dec
shr
adc
sahf
mov
repnz
sub
sub
outs
cmps
aad
add
ja
(bad)
mov
leave
int
push
ret
push
ins
push
(bad)
pop
loope
popa
push
cs
lods
dec
ss
(bad)
pop
pop
pop
popa
test
loope
std
test
aam
int3
lahf
cmp
mov
enter
arpl
fidivr
push
out
adc
add
add
retf
call
adc
loopne
int3
and
cmp
mov
jb
repnz
fisttp
xchg
pop
and
mov
cdq
push
mov
(bad)
or
pushf
hlt
(bad)
movs
adc
stc
mov
jg
sub
sbb
cs
jb
xor
or
cmp
cmove
push
retf
out
cdq
out
je
out
push
clc
xor
nop
mov
test
mov
cmp
mov
xor
mov
hlt
lahf
(bad)
xlat
cmp
test
pop
out
imul
call
ins
cmp
xor
shl
jp
out
rcr
pop
fs
clc
cli
push
imul
push
cmp
inc
mov
gs
xchg
test
dec
ss
push
je
ficom
pop
call
fs
ds
arpl
lea
sub
xor
cmp
stc
mov
add
mov
push
aaa
mov
push
stos
jge
dec
rcl
shr
mov
pop
cwde
(bad)
push
(bad)
dec
add
inc
or
cmp
repz
mov
xor
(bad)
or
loop
repnz
aam
mov
add
xor
mov
xor
das
sub
mov
sar
mov
jecxz
mov
inc
mov
movs
ja
mov
mov
pop
adc
fcomip
not
jmp
add
or
and
mov
sbb
mov
add
es
ja
(bad)
sahf
hlt
sub
jae
xor
xchg
sub
mov
jno
sti
add
pusha
cmps
je
outs
mov
jb
loopne
or
mov
mov
adc
fstp
jle
adc
fmul
sub
jbe
pop
dec
loop
fsubr
call
ss
sub
adc
adc
adc
clc
mov
or
mov
in
push
xchg
aas
fidiv
ds
dec
outs
imul
mov
fst
daa
(bad)
imul
push
das
test
cmps
cli
scas
mov
xor
out
es
cmp
pop
test
or
xor
imul
dec
inc
add
out
addr16
inc
pushf
(bad)
and
xor
xor
mov
(bad)
pop
popf
inc
jb
repnz
aas
retf
fucomi
add
push
dec
nop
inc
cmp
mov
out
stos
inc
inc
sbb
enter
mov
mov
pop
inc
mov
and
mov
test
sbb
sub
cmp
pop
fist
dec
adc
sbb
aas
adc
add
add
mov
scas
inc
jg
dec
xchg
adc
scas
inc
stos
dec
adc
jne
sbb
call
mov
stc
xchg
push
add
fucomp
adc
push
addr16
jns
xchg
ss
fst
and
or
fucomip
jl
jl
xlat
jmp
dec
out
aaa
mov
leave
or
sbb
loope
xchg
push
fs
or
or
jle
fcom
xor
addr16
dec
mov
inc
icebp
xor
mov
(bad)
fadd
test
fchs
pop
inc
xchg
call
shl
popf
inc
retf
xchg
pop
(bad)
push
aaa
js
cld
sahf
shr
inc
inc
cmps
test
fstp
mov
out
in
xor
mov
mov
sbb
icebp
not
push
imul
jmp
sub
inc
adc
inc
retf
in
xor
lods
push
sbb
inc
jo
not
cmp
pop
lods
(bad)
pop
pop
bound
mov
lock
push
aaa
mov
shl
adc
loop
or
rol
inc
push
ds
push
cdq
pusha
inc
fcom
jnp
cmc
jp
scas
add
inc
and
xchg
call
(bad)
addr16
test
mov
jle
push
push
leave
fdiv
pop
arpl
jns
and
movs
sbb
cwde
xor
pop
repz
push
lods
sahf
cld
(bad)
inc
mov
add
dec
push
sub
push
push
mov
mov
jae
dec
movs
hlt
pop
out
popf
out
adc
lods
cmps
jle
shl
xor
push
sbb
push
push
aam
repz
mov
xchg
pop
clc
imul
cdq
xor
cmps
mul
dec
mov
or
sub
and
sbb
out
shl
fmul
or
or
(bad)
sub
jno
cmp
daa
popa
cld
sbb
mov
xchg
add
movs
scas
dec
push
dec
jle
aad
iret
out
inc
dec
movs
stc
mov
pop
sbb
adc
in
sub
dec
fst
cmp
push
mov
loop
jmp
mov
js
mov
or
popf
shr
and
adc
and
xchg
jmp
add
or
fisubr
mov
shl
scas
fs
or
ds
xor
ret
pop
push
stc
pop
mov
les
mov
xchg
push
fist
mov
repz
pop
mov
retf
push
xchg
and
leave
cdq
imul
out
mov
jmp
mov
cli
loopne
add
dec
lods
fistp
dec
pop
push
jno
dec
jg
jo
fwait
cdq
scas
add
pop
lahf
stc
fadd
hlt
add
repnz
mov
outs
adc
shl
lods
ret
out
xor
fst
lds
adc
cdq
scas
dec
xor
push
cmps
cmc
daa
popf
or
inc
jae
xchg
sahf
fcos
inc
mov
int
lods
jo
(bad)
cld
fidivr
test
paddb
test
div
pop
stos
mov
leave
xor
jecxz
jbe
div
nop
int
jle
fxch
sub
push
cld
out
fidivr
inc
and
mov
pusha
pop
adc
dec
jne
imul
adc
inc
or
sti
jp
inc
xor
xchg
scas
or
aam
add
mov
cmc
sub
(bad)
cmps
push
test
(bad)
rol
xchg
enter
xor
mov
sub
pusha
in
pushf
dec
ins
push
xchg
clc
pusha
ret
xor
aaa
push
lock
sub
xchg
jge
lahf
fmul
outs
in
dec
dec
addr16
in
js
out
dec
mov
push
mov
pop
mov
sti
xor
outs
shr
inc
cmps
inc
js
data16
jmp
and
imul
jnp
add
std
mov
aaa
add
lock
jns
mov
or
xchg
addr16
mov
adc
inc
mov
mov
mov
fild
imul
pop
outs
jbe
pop
sbb
fbld
sahf
cmp
push
aad
cwde
push
xor
inc
call
div
mov
or
mov
enter
sbb
xchg
push
sbb
or
aam
xor
loopne
ds
jp
and
jne
or
ins
pop
data16
xor
mov
test
inc
xor
fwait
cs
scas
or
jne
inc
push
test
sahf
push
inc
mov
ins
cmp
enter
iret
ja
clc
gs
dec
lahf
test
xchg
clc
in
jl
lods
lahf
sub
dec
fdiv
je
stc
iret
scas
inc
or
add
jo
xor
pop
cwde
(bad)
sbb
sbb
stos
xor
pop
sbb
mov
mov
jmp
cli
aam
mov
xor
(bad)
cli
sub
movs
fdivp
add
add
shl
push
fs
lahf
js
test
xchg
adc
cmps
push
cs
hlt
xchg
or
aaa
sbb
sbb
xchg
and
cmp
mov
pushf
std
mov
fldenv
mov
jb
shr
dec
mov
loop
sub
mov
repnz
imul
jnp
imul
mov
sub
adc
or
mov
mov
push
mov
and
lock
push
pop
sbb
push
push
dec
pop
cli
das
xchg
jp
fxch
cmps
test
lock
icebp
sbb
mov
ss
adc
daa
push
ds
push
fst
sbb
in
and
ja
xchg
jmp
lahf
lock
or
(bad)
je
jno
fistp
daa
dec
mov
jmp
cdq
add
inc
xor
movs
mov
fsubr
mov
mov
xor
cmp
fist
sti
mov
mov
dec
and
add
adc
mov
push
sti
push
pop
dec
iret
xchg
iret
dec
cmps
pop
std
dec
lock
jl
pop
aam
push
ret
jle
loope
sub
gs
mov
test
rol
popf
inc
bound
cmp
mov
loop
arpl
mov
or
xor
shr
mov
inc
inc
inc
repz
ins
ss
retf
ret
test
xchg
shr
retf
jnp
or
fs
push
dec
push
adc
std
sbb
push
pushf
or
fldcw
push
scas
out
scas
repnz
data16
inc
enter
pop
pop
dec
lahf
pushf
mov
sahf
jbe
jge
shl
retf
xor
mov
xchg
pop
stos
loop
(bad)
fs
ror
dec
lods
mov
or
jns
cs
xchg
seta
sub
int
mov
mov
mov
xchg
je
jnp
xchg
and
jno
cld
push
fs
xchg
and
inc
xchg
and
pop
inc
imul
inc
(bad)
sub
inc
jl
aas
mov
dec
xchg
sbb
in
ins
cwde
or
imul
ins
ret
pop
xor
cdq
popa
push
and
lock
add
xor
jle
test
stc
std
daa
hlt
mov
push
xchg
add
mov
sub
and
inc
pop
ss
pop
sbb
add
add
and
gs
into
out
xlat
sub
jo
fnsetpm(287
xchg
or
mov
jp
scas
fmul
xor
push
test
xor
ins
or
cmc
dec
mov
sub
dec
xchg
inc
setne
and
or
popf
dec
fcom
je
jb
dec
xchg
leave
jl
fmul
cmp
in
jle
les
pop
(bad)
aad
lds
push
pushf
lea
dec
jae
push
add
pop
sbb
sbb
cld
inc
shr
loopne
shl
ds
and
not
mov
mov
in
sbb
test
jge
ins
push
out
vminps
lods
mov
in
data16
add
stos
dec
fild
imul
gs
jo
push
adc
fisttp
inc
addr16
nop
cmps
push
ds
fsubrp
shl
adc
js
pop
dec
hlt
enter
adc
imul
sub
dec
cmps
pop
punpcklbw
push
ficom
pop
xor
jne
mov
lock
push
cmps
mov
push
cmp
ror
out
lods
sub
pop
sub
dec
xor
fcomi
fs
fcomp
push
sub
mov
ins
jo
mov
ins
mov
push
mul
movs
cmp
in
sub
jecxz
jo
shl
dec
xor
push
lock
aam
add
les
(bad)
jne
das
stos
and
in
loop
repz
movs
lea
xchg
xchg
aaa
jg
repnz
int
xchg
fld
sub
lock
jmp
pushf
sub
neg
pop
stos
push
and
cmp
xor
pop
mov
ret
shr
cld
mov
popa
sahf
jns
xor
sbb
mov
sub
pop
shr
push
repz
cmps
push
(bad)
pop
das
fidiv
inc
sti
out
pushf
aaa
aas
es
dec
jmp
and
std
out
mov
jo
fisubr
test
jbe
jmp
call
add
cld
sub
xor
xor
cmp
and
dec
repnz
lds
ret
gs
mov
push
push
pushf
add
cmp
ds
ss
enter
dec
lahf
inc
cmps
pop
mov
in
xlat
pop
adc
inc
xchg
pop
push
mov
adc
aaa
out
pop
sub
in
push
pop
adc
ret
or
in
arpl
xor
and
pop
imul
push
es
ins
or
cmps
iret
cld
adc
add
out
pop
pop
retf
imul
sub
inc
push
in
mov
jmp
rep
xor
mov
xor
mov
neg
icebp
aas
push
cdq
jmp
mov
outs
xchg
clc
inc
cdq
sbb
test
jge
jg
pop
loop
ret
fstp
adc
xor
mov
inc
inc
ret
aad
push
adc
std
jb
leave
inc
icebp
cmp
cmp
mov
sub
enter
and
add
and
sar
dec
sbb
outs
dec
pop
icebp
dec
sub
mov
sbb
lds
lahf
test
sbb
das
cld
ja
jecxz
ret
or
je
push
test
cmp
pushw
inc
xchg
dec
popf
jmp
out
hlt
push
fwait
in
xchg
sbb
movs
(bad)
dec
pop
dec
daa
repz
(bad)
call
(bad)
sub
in
sbb
inc
imul
rol
stc
or
cmc
fsub
or
fild
arpl
into
mov
xor
stc
ror
or
cld
cmps
push
pop
out
push
jmp
jbe
and
add
nop
cmps
mov
inc
test
pop
push
sub
adc
push
inc
add
adc
(bad)
cmp
adc
shr
shl
js
and
imul
ja
cmp
in
mov
and
ds
dec
mov
shl
sahf
es
mov
cmps
cld
inc
scas
mov
imul
adc
mov
stos
adc
sub
or
jno
xchg
and
jge
pushf
test
enter
mov
imul
arpl
dec
lahf
adc
hlt
rol
cmp
add
lods
mov
in
icebp
mov
popw
outs
push
mov
call
dec
pusha
and
mov
add
aam
jo
or
fcomp
ins
cmc
dec
js
repnz
fimul
es
xlat
test
fst
and
out
dec
mov
imul
xchg
cmp
mov
test
jge
cmp
xchg
cmp
popf
(bad)
sub
sub
(bad)
mul
inc
cld
or
sub
xchg
pop
mov
retf
sbb
xor
cld
lds
mov
addr16
scas
es
sub
cmp
loope
out
addr16
movs
push
and
mov
shr
repnz
jp
xchg
jecxz
fs
jmp
pop
jp
movs
lods
sbb
and
xor
neg
cmps
aam
icebp
jo
cmps
adc
mov
out
and
sbb
add
push
ja
sbb
push
and
shl
in
push
nop
inc
add
ja
inc
mov
dec
mov
or
dec
mov
jecxz
sbb
and
mov
dec
jg
rcl
push
adc
push
pop
sbb
push
add
dec
mov
mov
adc
retf
aas
mov
mov
icebp
mov
xor
retf
inc
(bad)
sti
retf
push
outs
stos
jbe
std
cwde
cli
dec
or
icebp
cwde
xchg
xchg
dec
mov
xor
mov
dec
jns
add
jmp
loope
push
aaa
cmp
cmp
ja
test
pop
out
enter
test
cmps
jbe
dec
sahf
dec
and
cdq
dec
sub
wbinvd
sub
stc
mov
repnz
ins
add
xchg
dec
mov
inc
cmp
loopne
add
cmp
xchg
push
and
gs
dec
iret
mov
repz
ja
sbb
hlt
mov
leave
xor
dec
jl
in
cmp
xor
mov
iret
xlat
inc
cwde
(bad)
hlt
das
jo
mov
inc
mov
jl
pushf
push
pop
pop
aas
lock
sbb
pop
pop
sbb
in
cmp
ret
inc
mov
xor
mov
mov
sahf
add
cmc
push
out
sub
jg
xlat
push
inc
pop
xchg
jmp
sahf
ret
das
retf
mov
adc
pop
retf
daa
imul
xchg
pop
stc
jg
mov
test
fcomp
bound
pop
adc
hlt
xor
pushf
dec
push
shl
cmp
pop
ss
retf
inc
mov
and
cdq
(bad)
jge
ins
out
adc
mov
test
xchg
inc
mov
adc
mov
sub
mov
dec
jnp
popf
xchg
mov
push
jmp
jge
or
jbe
jns
data16
adc
lahf
(bad)
pop
add
(bad)
sub
push
or
jns
xchg
and
outs
mov
pop
mov
push
xchg
fstp
jecxz
jne
mov
jb
and
dec
mov
jmp
jb
rol
cmp
sub
pushaw
cmp
test
ss
jl
inc
or
ins
add
popa
arpl
aad
push
or
(bad)
cmc
loopne
cli
or
les
jp
dec
stos
add
inc
mov
aam
movs
push
stos
or
dec
dec
dec
cmc
sub
add
ins
or
inc
or
repz
cmp
mov
outs
js
retf
out
shr
test
test
mov
jmp
dec
mov
mov
enter
adc
popa
ja
add
popf
cmp
shr
xor
lock
pop
jb
and
clc
pushf
or
daa
aam
add
cmp
sub
lods
lahf
aam
ja
pushf
pop
push
xchg
out
popa
rcr
push
jg
les
sub
mov
shr
pop
jge
jmp
and
pop
mov
aad
pop
mov
pop
pop
jecxz
enter
outs
nop
pop
out
sti
movs
mov
(bad)
lds
pop
jmp
test
fwait
lea
or
stos
mov
je
fucomip
repnz
popa
daa
ins
jnp
sub
adc
jbe
mov
movs
or
adc
das
repnz
xchg
loope
mov
jmp
in
xchg
retf
retf
loop
dec
sbb
mov
sbb
aaa
cwde
fs
jp
push
mov
sub
pop
loope
xchg
push
jle
adc
shl
mov
outs
fwait
jg
aad
fcomi
push
ja
xchg
cld
nop
jge
push
std
pop
mov
xlat
push
ror
adc
inc
rol
jge
stos
push
add
mul
jle
data16
ficomp
push
lahf
push
xchg
xchg
(bad)
imul
inc
(bad)
fdivr
loop
cld
movs
mov
es
loopne
and
cld
clc
pop
pop
ss
call
mov
iret
push
lds
outs
leave
dec
rcl
js
(bad)
lods
(bad)
mov
sub
(bad)
mov
enter
sub
mov
dec
pop
in
xchg
(bad)
dec
fwait
inc
lahf
push
jns
jecxz
pop
or
pop
and
ss
mov
mov
movs
aam
mov
sub
cmp
call
mov
cld
shr
in
pop
mov
jo
adc
addr16
(bad)
mov
pop
lahf
dec
and
sbb
pop
mov
push
cli
pop
cmp
retf
cmp
push
dec
lods
jge
(bad)
mov
push
cmps
adc
cmps
mov
hlt
out
fcmovnu
popf
push
dec
dec
xor
cmp
and
scas
popa
mov
inc
sbb
call
mov
mul
mov
hlt
rol
dec
adc
mov
jmp
scas
xchg
cmp
(bad)
in
(bad)
loop
add
aam
jmp
add
stos
and
pop
ds
imul
push
aas
cmp
cmps
jne
leave
mov
ins
xor
pop
xchg
dec
pop
call
sbb
mov
iret
jp
pop
add
(bad)
aad
mov
sbb
dec
add
call
aaa
or
adc
fist
js
xlat
adc
fsub
mov
je
jp
loop
add
pop
jmp
and
or
addr16
mov
aaa
jle
mov
xlat
mov
mov
jp
add
dec
nop
outs
sbb
push
fadd
pop
xor
mov
pop
call
cmp
inc
sub
in
cmps
xchg
adc
int
cld
test
mov
mov
in
mov
repnz
int3
sti
test
bound
test
jg
and
push
inc
or
jnp
(bad)
scas
popf
push
out
leave
sbb
mov
leave
add
jle
jnp
pushf
leave
daa
jp
jmp
dec
test
pop
rcl
stc
rcr
dec
sti
or
ins
xchg
(bad)
xor
ss
pop
data16
popa
imul
stos
cmp
xchg
mov
mov
lea
fdecstp
les
xchg
dec
imul
dec
in
adc
push
dec
mov
repz
(bad)
xor
dec
xchg
sbb
cmp
es
imul
cmps
xchg
add
cwde
or
enter
pushf
xchg
test
cmc
pop
mov
mov
aam
bound
adc
or
in
pop
int3
inc
sbb
fld
jp
shr
xlat
call
push
fdivp
and
lods
aad
std
adc
jne
dec
add
mov
mov
dec
xor
jl
dec
and
xor
dec
movs
mov
jns
xchg
pop
cmp
push
sub
adc
inc
(bad)
sbb
fldcw
stos
xchg
rol
dec
dec
into
out
aad
cmp
shl
mov
in
mov
jge
test
sub
push
lods
ss
lock
mov
pop
(bad)
sbb
mov
jecxz
adc
test
cmp
test
les
cli
das
test
and
sahf
into
out
jb
sub
retf
pop
mov
mov
xor
mov
push
sahf
cli
mov
mov
sbb
xchg
xchg
repnz
sbb
xor
mov
and
outs
dec
out
dec
pop
inc
add
idiv
jmp
icebp
in
push
retf
ror
or
ins
cmc
ss
push
xchg
jo
aaa
in
cs
mov
adc
dec
push
add
jns
in
mov
xor
cmps
ret
sub
inc
push
(bad)
not
rcl
inc
nop
fcomp
sahf
xor
cmp
cmp
mov
cmps
lock
pop
pushf
out
fsin
dec
mov
mov
cmp
and
inc
bnd
test
call
daa
popa
cli
or
adc
out
and
sub
cmps
cmps
daa
add
cld
retf
cmc
push
and
mov
and
ds
dec
mov
inc
daa
mov
and
pop
mov
sbb
call
and
or
aam
loope
daa
in
std
fistp
jo
or
mov
or
(bad)
sbb
pop
sbb
push
addr16
pop
ret
jp
cmp
mov
aas
enter
push
pop
push
stos
imul
inc
pop
mov
pop
fiadd
out
sub
xchg
push
jle
bnd
inc
jo
scas
imul
sbb
jp
sub
sbb
dec
xchg
jp
add
mov
cld
fild
fcomp
iret
lods
pop
cmp
mov
jg
cmps
out
cmps
shr
mov
dec
adc
inc
aaa
or
xor
fcmovnbe
push
mov
dec
xor
xchg
nop
mov
stc
iret
inc
ins
inc
lock
jg
(bad)
outs
and
gs
(bad)
cmp
aam
mov
pop
jmp
or
xchg
sub
adc
pop
mov
pushf
cmc
test
mov
out
xor
lods
jnp
pop
push
daa
sbb
mov
loopne
mov
mov
or
and
lds
sbb
test
dec
inc
mov
lods
in
jae
mov
jle
pop
popf
add
pop
jnp
add
cwde
jo
or
inc
and
clc
sti
push
jmp
fwait
scas
shl
inc
leave
mov
ss
pop
adc
pop
adc
(bad)
in
lock
jbe
clc
jb
das
popf
mov
(bad)
cmp
sbb
not
or
sahf
sbb
sbb
jae
shr
xor
in
enter
mov
lods
mov
adc
jnp
cs
sub
out
dec
sub
fiadd
mov
mov
sub
ret
or
stc
mov
test
cld
or
add
ss
cmp
repz
loop
lods
jno
mov
inc
in
fs
adc
dec
pusha
sahf
jg
pop
les
repnz
aaa
(bad)
das
(bad)
sti
push
(bad)
iret
shr
jo
push
je
test
push
jge
add
pop
cmps
loope
(bad)
mov
mov
fisttp
and
mov
in
fs
push
dec
ret
icebp
push
movs
jle
repnz
dec
es
out
icebp
or
retf
cdq
xchg
cmp
inc
xor
mov
in
mov
(bad)
(bad)
imul
push
sar
jmp
push
and
adc
jmp
mov
jbe
xor
ss
rcl
adc
xor
daa
loope
in
cmovno
inc
fld
cmp
outs
push
dec
add
(bad)
lahf
or
sbb
mov
sub
cmps
iret
mov
add
stos
je
dec
or
mov
aam
mov
jmp
mov
xchg
xor
mov
(bad)
fnstsw
(bad)
dec
sub
push
mov
jmp
out
movs
pop
enter
sub
out
mov
dec
pop
and
push
and
movs
mov
arpl
sti
ja
enter
std
ficomp
or
aad
xchg
push
(bad)
xchg
stc
and
scas
ins
add
outs
out
jae
push
lock
aad
leave
int3
xchg
test
jmp
gs
and
lea
imul
aad
loopne
ins
and
add
sbb
out
stc
mul
mov
sbb
js
xchg
sti
mov
push
imul
out
mov
repz
pop
imul
pusha
jb
cli
nop
icebp
inc
inc
int
in
out
sbb
xor
jg
mov
pop
and
cmp
(bad)
dec
jbe
retf
jae
lea
mov
je
aam
cmp
pop
test
push
leave
adc
hlt
dec
arpl
mov
push
scas
inc
and
dec
sub
sub
jae
inc
jnp
popa
cli
(bad)
rcr
pop
cmp
loop
out
jg
cli
mov
push
add
cmp
popf
and
mov
dec
imul
popa
cmc
sti
je
cs
sbb
ror
cmp
push
daa
dec
xor
cmp
fwait
ins
ror
jno
stos
sar
scas
bound
sub
jmp
pop
or
movs
sbb
jo
pop
cmc
xor
xlat
fwait
jecxz
pop
push
sbb
arpl
push
nop
xchg
jne
movs
push
jle
xchg
shr
fcom
test
ins
int3
daa
(bad)
sbb
pop
scas
xchg
fmul
ja
cmp
xor
sti
sbb
xor
inc
jge
or
ror
inc
fimul
mul
cli
iret
sub
push
xchg
mov
out
inc
gs
mov
repnz
cld
add
in
mul
pop
call
pop
in
in
and
popa
(bad)
jmp
leave
cmp
(bad)
pop
outs
mov
push
test
(bad)
cs
enter
inc
push
ins
sbb
jo
mov
rcl
das
pop
outs
fucompp
rcl
movs
xchg
test
pop
xchg
in
in
push
push
neg
test
(bad)
cld
in
push
mov
icebp
jle
outs
ret
mov
jmp
and
or
dec
mov
dec
aam
stc
pop
and
xor
and
iret
push
or
sbb
data16
outs
retf
int3
dec
mov
mov
cmp
xor
pop
lods
mov
jae
cmp
cmps
and
xor
rol
inc
js
and
or
cld
pop
add
es
in
pop
pop
mov
pop
inc
sub
stos
mov
xchg
add
xor
daa
rcl
out
inc
jno
pop
inc
and
sub
push
fidiv
sahf
cmc
push
rcl
xlat
in
xor
(bad)
repnz
sar
loopne
dec
sub
xor
leave
icebp
ret
ret
or
cdq
inc
scas
mov
dec
into
push
mov
xchg
adc
bound
sti
(bad)
mov
mov
push
sti
cmp
jp
stos
or
data16
pop
clc
stc
fsub
clc
leave
and
ins
adc
pop
add
or
jg
data16
es
push
push
jmp
adc
xor
or
mov
mov
cmp
mov
clc
mov
rcl
movs
pop
cld
pop
mov
pop
aaa
loopne
sub
std
leave
inc
xchg
sub
or
sub
cmp
test
repnz
daa
sbb
mul
in
cli
cmp
test
fiadd
lods
stos
mov
push
pusha
or
mov
xor
jmp
icebp
mov
jb
lahf
test
out
mov
jle
in
into
or
mov
ins
cmc
stos
icebp
mov
xchg
lea
test
fisubr
mov
jl
cmp
xlat
fisttp
dec
popa
push
not
sbb
mov
sar
cmp
cmp
dec
test
clc
cld
fcom
jne
cmp
in
sar
pop
mov
dec
mov
and
push
pop
xchg
and
sub
fstp
pop
sbb
and
pop
xor
ffreep
hlt
jne
push
mov
fild
push
ins
ror
pushf
cmp
mov
adc
push
idiv
adc
push
lea
jb
inc
scas
and
inc
scas
shr
fist
mov
push
adc
jecxz
inc
inc
add
rcr
lods
out
mov
xchg
mov
inc
stos
dec
icebp
imul
xchg
jae
jne
mov
movs
mov
mov
outs
push
outs
lods
xchg
(bad)
mov
leave
call
xchg
inc
and
add
push
bsf
fist
xchg
inc
stos
adc
jo
mov
enter
(bad)
aad
hlt
jnp
or
lea
int3
pinsrw
inc
mov
inc
sub
mov
in
test
out
jl
sub
cmp
lock
jo
mov
std
xchg
out
push
cmp
aas
das
test
dec
int3
pop
retf
ds
jae
fld
bound
xor
ret
(bad)
sar
jge
pushf
sbb
mov
adc
shl
mov
(bad)
nop
retf
call
test
jbe
jne
sbb
jne
movs
jg
cdq
ret
fnstsw
add
xchg
arpl
retf
test
and
and
test
adc
jns
jno
repz
ins
rcl
and
jno
loope
(bad)
jle
outs
mov
add
movs
loope
fmul
xchg
mov
mov
jmp
loop
neg
mov
add
xor
xchg
popa
add
les
(bad)
pop
ins
push
sbb
or
addr16
sub
and
inc
push
stc
cmp
dec
arpl
adc
cmp
unpcklps
xor
test
daa
aaa
(bad)
mov
stos
cmp
and
cdq
and
fwait
adc
push
lods
jbe
cmp
push
test
fldenv
jg
stos
mov
pop
jp
pop
mov
jge
pop
push
repnz
shl
arpl
or
movs
jo
mov
mov
mov
in
mov
fcomi
jle
sbb
mov
idiv
dec
xchg
retf
jge
imul
test
enter
xchg
je
or
cmp
mov
push
sti
daa
les
or
mov
or
pop
add
xchg
cli
js
cli
and
mov
mov
xchg
xor
enter
int3
dec
lahf
pop
push
pop
add
jg
xor
addr16
lds
cmps
inc
leave
xchg
inc
push
out
sbb
scas
or
(bad)
jbe
imul
push
aas
mov
cdq
out
xlat
push
stc
pop
mov
scas
mov
scas
inc
rcl
add
jge
xchg
dec
xor
das
sbb
mov
rol
mov
adc
adc
test
sub
das
sub
cmc
shl
push
jb
xchg
cld
dec
ja
cmp
sbb
mov
push
fs
in
mov
and
shl
rcl
int3
in
or
ret
pop
jmp
and
push
imul
and
pop
adc
test
xchg
lds
cmp
sub
cmps
push
cli
mov
mov
pop
jge
inc
push
add
int3
inc
and
adc
ret
pop
inc
inc
lods
clc
jnp
lods
jmp
jp
xchg
dec
jno
jg
xchg
mov
call
das
ss
pop
sbb
sbb
pop
dec
shl
adc
fcomp
fist
in
fsub
mov
dec
repnz
(bad)
inc
or
pop
sbb
push
xor
sbb
cmp
jl
mov
test
test
repz
test
(bad)
std
mov
jo
jns
seta
shl
shl
cmps
icebp
retf
cwde
js
cmc
movs
adc
mov
push
popa
add
jns
lock
sar
push
lods
cmp
or
scas
push
adc
lods
inc
fidiv
div
loopne
mov
iret
aaa
mov
sub
fucomi
jl
out
loope
jmp
xor
dec
and
sub
fild
xor
mov
mov
inc
sub
bound
push
adc
or
retf
fucomp
dec
inc
mov
aam
popf
jle
adc
sub
or
and
loope
dec
int
adc
cwde
data16
jns
jmp
sub
xor
mov
jge
sahf
sub
aas
fnstenv
dec
pop
pushf
lea
daa
(bad)
fist
and
cwde
or
std
inc
lock
mov
add
(bad)
sub
or
xchg
jmp
jmp
jbe
adc
add
pop
ror
cmps
imul
lods
jnp
push
cmc
loop
lods
cwde
sbb
push
mov
movs
pop
and
test
dec
in
push
mov
rcl
fnstenv
bound
rol
nop
lahf
into
pop
inc
or
add
rcr
cmp
xor
inc
pushf
ss
retf
in
sub
mov
popa
xchg
cwde
pushf
jge
std
mov
inc
les
mov
mov
test
dec
dec
jmp
mov
test
xor
(bad)
(bad)
xchg
push
pop
adc
ficom
aad
or
hlt
xor
jmp
inc
sbb
mov
jmp
xlat
loop
lahf
pop
fstp
inc
pop
push
dec
pop
or
(bad)
cmps
or
aas
mov
mov
sbb
vpminsw
mov
push
sub
mov
ja
addr16
add
hlt
inc
es
cmp
jns
(bad)
mov
add
imul
setne
pushf
mov
mov
outs
js
sbb
mov
sub
xor
aad
or
pop
(bad)
push
add
cmp
mov
aaa
mov
call
inc
cs
xchg
outs
lock
jne
pop
cmp
dec
pop
leave
sbb
popf
ss
out
mov
outs
push
lock
jg
mov
xor
fs
lods
xor
inc
jmp
jno
jge
sbb
jmp
loope
or
into
xchg
test
into
push
and
add
test
adc
mov
mov
and
test
jnp
xchg
pushf
sbb
(bad)
jg
retf
pop
popa
xchg
shl
repz
cdq
test
test
(bad)
pop
enter
mov
push
mov
and
adc
mov
add
movaps
xchg
ins
in
aad
inc
sub
clc
bound
call
clc
or
or
in
idiv
lds
retf
mov
out
aas
aas
mov
dec
dec
pusha
loop
scas
sub
retf
cs
inc
xlat
(bad)
fdiv
rcr
push
iret
mov
pop
pushf
jns
or
push
inc
xor
in
mov
shr
sbb
lods
and
and
(bad)
into
mov
cli
add
jns
pop
fs
test
jp
push
inc
pusha
addr16
push
ror
and
or
cmp
push
js
inc
inc
(bad)
and
fcom
mov
fwait
xor
call
adc
mov
leave
repz
mov
(bad)
pop
pusha
(bad)
aam
iret
fwait
xor
mov
mov
imul
and
cmps
pop
pop
ret
and
and
pop
aas
pop
and
adc
xor
stos
mov
push
out
or
cmp
cmps
lock
sar
test
pop
mov
outs
mov
es
int3
lock
popf
leave
sub
fs
jp
dec
ja
repnz
xor
mov
jg
cmps
call
push
mul
pop
clc
bound
cmps
pop
mov
mov
into
or
push
fidivr
xchg
out
enter
adc
shl
out
lds
mov
pusha
mov
in
xchg
inc
mov
jge
icebp
or
sbb
and
leave
les
ins
addr16
jp
dec
jl
or
and
sbb
xchg
imul
int3
xchg
mov
into
es
not
fwait
push
adc
das
add
or
pop
jge
shr
(bad)
cmp
fimul
pop
call
cmp
out
push
push
jmp
or
cdq
push
or
call
mov
(bad)
pop
aad
retf
fcomp
cmps
xor
jp
fisttp
movs
pop
push
jmp
dec
bound
mov
enter
imul
(bad)
jle
pop
into
in
add
mov
dec
push
js
cs
adc
sub
ss
pop
jmp
jns
inc
test
xchg
ins
popf
jne
adc
stos
push
pop
ins
inc
inc
fs
ds
jecxz
sbb
mov
outs
repnz
enter
imul
dec
out
lahf
es
loope
cmc
das
mov
xchg
xchg
out
adc
test
test
pop
mov
out
pop
cs
aam
push
adc
mov
fwait
xor
clc
ds
test
adc
dec
mov
cmp
mov
in
bound
jl
cmps
mov
add
xor
call
fsubr
hlt
pop
mov
mov
push
gs
sbb
into
jb
mov
shrd
mov
scas
sbb
xor
or
sub
enter
xor
push
imul
cmp
push
jbe
stc
pop
icebp
stc
unpcklps
ins
jp
fild
loop
ret
shr
inc
dec
jno
mov
stos
cwde
adc
xchg
ret
cmp
mov
outs
xor
sbb
test
push
(bad)
fldz
test
out
mov
fcmove
fld
push
lock
sbb
add
nop
xchg
dec
xchg
in
push
adc
ds
loop
mov
outs
jne
add
push
loopne
mov
mov
aaa
popf
fisttp
adc
stos
outs
movs
pop
jns
mov
(bad)
pop
or
inc
movs
leave
int3
imul
or
jg
js
add
sub
xor
xchg
or
dec
jns
fimul
in
mov
push
out
jns
sub
inc
push
jae
mov
je
outs
push
ror
or
jg
xchg
xor
push
mov
dec
sti
xor
lahf
aas
cs
shl
sub
in
ret
stc
and
ret
sub
mov
dec
pop
bound
cwde
test
out
test
gs
add
sbb
push
aas
cmp
out
push
aad
fs
out
push
inc
test
es
jbe
xor
pop
cmp
inc
shr
out
in
test
push
xor
ror
ins
sti
adc
test
out
cmp
gs
inc
out
lods
std
ficomp
dec
into
stc
lds
sub
adc
mov
cmp
cmp
sub
pop
and
jg
jmp
dec
outs
out
pushf
adc
mov
div
or
mov
push
enter
xor
dec
pop
fstp
pop
(bad)
shl
mov
retf
mov
cwde
push
ss
or
adc
mov
call
sahf
xchg
pop
jl
add
rcr
xor
xchg
add
das
inc
fnsave
push
push
mov
or
inc
push
dec
shl
add
add
rcl
xlat
arpl
into
push
pop
pop
test
push
or
mov
pop
stc
clc
adc
out
adc
(bad)
aad
mov
call
test
mov
ins
xor
fwait
ror
sti
dec
inc
xor
outs
pop
xor
inc
ins
push
adc
aam
adc
cmp
cmps
sti
jg
fidiv
enter
add
push
sub
sbb
scas
(bad)
sti
push
adc
repz
dec
and
sbb
and
sub
jg
addr16
dec
data16
test
enter
dec
pop
jnp
add
lock
dec
into
push
mov
les
mov
xchg
shl
hlt
push
test
hlt
scas
in
neg
mov
pop
stc
out
or
(bad)
enter
xchg
je
(bad)
int3
pop
data16
pop
inc
inc
or
push
and
loopne
or
mov
pop
jp
inc
aaa
pop
fbstp
(bad)
mov
sub
inc
and
mov
or
nop
jnp
mov
xor
repz
mov
xchg
mov
or
add
dec
les
cwde
push
std
sbb
sub
mov
repz
mov
mov
lods
lock
jmp
iret
add
in
int3
ret
ss
or
adc
hlt
outs
mov
test
(bad)
test
and
inc
inc
movs
or
cmp
cdq
jbe
in
test
mov
fild
add
sub
xor
pop
div
cmc
iret
fdivr
idiv
fisttp
mov
jo
sub
adc
in
(bad)
arpl
jbe
iret
push
(bad)
push
xchg
fcmovbe
in
adc
dec
xor
mov
mov
jnp
test
xchg
outs
(bad)
out
cmp
add
popf
fsubr
scas
mov
jo
push
xchg
push
jecxz
cmps
in
xchg
mov
cmps
mov
add
in
add
js
push
shr
addr16
and
inc
sub
dec
movs
pusha
loop
sbb
and
outs
fist
or
inc
call
fidivr
lock
jl
pop
ds
ror
push
push
push
jg
push
sbb
mov
mov
loopne
cli
sahf
stos
mov
dec
mov
inc
fst
fsubrp
test
mov
xchg
les
movs
outs
rol
pusha
imul
ds
pop
dec
cli
es
xchg
pop
mov
popf
inc
add
cmp
xchg
pushf
imul
add
(bad)
leave
inc
mov
cmp
inc
mov
(bad)
mov
dec
push
xor
xchg
inc
aam
inc
imul
out
mov
fwait
jmp
dec
out
out
(bad)
addr16
fwait
ins
in
push
mov
mov
sub
test
sub
aad
ds
je
add
jp
sar
ja
(bad)
ss
adc
cmp
std
ficomp
das
clc
sub
sub
stos
scas
into
mov
and
enter
sub
jno
pop
or
enter
add
sub
pop
and
mov
gs
stos
mov
clc
fwait
stos
test
test
and
xchg
enter
call
mov
jmp
inc
adc
push
jne
(bad)
out
push
test
mov
inc
into
mov
in
pop
out
xchg
imul
sub
sub
loope
or
or
xchg
sbb
ins
imul
idiv
mov
bndstx
inc
push
jo
or
retf
and
cdq
mov
aad
adc
in
or
or
aam
daa
jl
cmc
cld
push
and
add
sbb
mov
xlat
(bad)
push
les
aaa
dec
xchg
in
loop
pop
(bad)
scas
cmp
sub
xor
xor
cmc
cld
pop
out
sub
push
mov
adc
outs
cli
adc
jae
mov
and
mov
retf
loopne
mov
loop
jne
push
mov
dec
std
push
mov
adc
push
xchg
ins
cli
mov
mov
call
dec
shl
add
pop
aam
test
adc
lods
je
xchg
sub
cmp
jge
dec
pop
stc
xchg
fdiv
xor
mov
(bad)
jg
mov
jmp
or
sbb
sub
sub
icebp
sub
test
dec
sub
in
test
mov
cs
inc
pusha
jbe
(bad)
aaa
std
mov
cwde
ins
fisub
jns
cmp
fist
jns
call
xchg
jno
scas
leave
mov
xchg
fistp
sbb
fldenv
test
dec
faddp
jle
sbb
int3
fcmovne
or
dec
shl
add
pushf
addr16
xchg
inc
lea
mov
push
cs
mov
ins
(bad)
pusha
xlat
jmp
lea
rol
dec
inc
mov
aas
and
fadd
rol
cli
xor
push
add
pop
mov
daa
(bad)
hlt
cmps
adc
sbb
fwait
iret
retf
mov
xor
std
dec
aaa
hlt
(bad)
(bad)
in
xor
pop
std
mov
dec
in
lods
sbb
cmp
cld
imul
dec
adc
mov
inc
mov
clc
jbe
call
adc
fsubr
loope
in
cmp
add
push
jb
push
ficom
and
pop
dec
adc
imul
int
and
movs
shr
push
(bad)
push
add
fimul
add
push
sahf
addr16
xchg
aad
dec
adc
aaa
mov
mov
xor
xchg
pushf
pop
mov
xor
call
shl
cmp
pop
popf
jnp
adc
and
sub
lods
mov
sti
jmp
or
adc
add
retf
push
(bad)
popa
cld
fst
imul
sbb
mov
inc
aas
jo
ret
mov
(bad)
(bad)
mov
push
xchg
jmp
xor
xor
push
xchg
lahf
lods
test
cli
dec
outs
mov
into
sub
loopne
test
fisttp
fucomi
aad
sub
and
movs
sub
jl
fidiv
pop
and
pop
jbe
(bad)
inc
iret
stos
inc
shr
sahf
adc
pop
dec
fiadd
or
mov
mov
pop
addr16
les
(bad)
cmps
pop
aad
sub
(bad)
adc
xchg
inc
push
mov
test
xor
(bad)
sub
mov
sbb
stos
(bad)
mov
jnp
xchg
add
jg
inc
mov
jle
repz
loope
pop
inc
(bad)
adc
add
mov
call
js
rol
jmp
std
aas
cli
in
or
test
test
movs
sti
mov
outs
adc
test
and
icebp
or
std
mov
add
cmp
mov
mov
push
lahf
push
mov
or
mov
(bad)
ffree
(bad)
sbb
ror
inc
mov
pop
pusha
sbb
aas
xor
inc
adc
in
es
pop
(bad)
or
or
push
int3
es
sub
lea
(bad)
jmp
or
loop
call
outs
icebp
and
(bad)
pop
imul
mov
nop
xor
mov
push
les
dec
dec
pop
fmul
(bad)
nop
pop
sbb
push
mov
or
loope
imul
fstp
add
push
std
test
inc
leave
jmp
aaa
jmp
pop
inc
jae
sub
pop
dec
mov
(bad)
pop
pop
ss
test
lods
xchg
push
rcr
into
xchg
and
out
repnz
into
ja
arpl
jno
movs
xor
cli
ret
aam
and
dec
pop
mov
mov
inc
xchg
mov
or
test
add
mul
pop
in
je
jle
(bad)
dec
lahf
adc
aam
sti
mov
xchg
mov
inc
mov
pop
in
xchg
stos
lds
fisub
sti
clc
xor
sub
push
nop
mov
cmp
fs
mov
and
xor
push
sub
movs
dec
icebp
rcr
fwait
jle
xchg
pop
out
or
mov
aas
mov
pushf
ss
and
cs
out
std
mov
push
imul
dec
mov
out
adc
test
and
jo
inc
int3
sar
popa
push
jnp
js
fistp
popf
jge
mov
add
pop
adc
sar
jecxz
mov
mov
inc
aad
imul
xchg
test
sbb
pop
sub
scas
add
out
mov
push
add
mov
das
pop
retf
pop
xor
jmp
fisub
cld
sub
sub
dec
int
or
inc
and
sub
fcmovnu
xor
adc
jge
ins
xchg
mov
mov
sub
inc
sub
fcom
mov
sbb
push
jns
(bad)
sbb
or
int3
pop
and
mov
addr16
sbb
jne
es
xor
jmp
adc
cwde
push
dec
inc
mov
imul
lods
sbb
xor
add
in
pop
mov
xchg
jmp
inc
ins
cmp
sub
outs
ret
and
aaa
loopne
sahf
ins
out
das
enter
clc
add
xchg
xor
mov
nop
jmp
mov
inc
ret
or
push
icebp
sar
nop
(bad)
cs
pop
scas
rol
std
sbb
repz
or
xchg
les
jecxz
mov
neg
icebp
add
ins
cs
mov
pop
sub
sbb
jae
lahf
sub
pop
in
(bad)
dec
mov
cld
sar
push
out
je
sahf
cwde
into
ret
cmp
stos
cmp
push
stc
cmp
int
enter
aas
xchg
mov
fdiv
in
jmp
psubd
mov
mov
mov
inc
mov
sub
rcr
(bad)
pop
pop
or
repz
mov
xor
lods
ficom
out
sbb
cli
and
xchg
das
mov
jp
mov
ret
gs
mov
stc
mul
int3
das
mov
inc
jle
add
lods
or
cs
mov
ret
xor
mov
mov
out
sbb
push
cmc
jb
push
and
cmp
xchg
(bad)
gs
es
out
fsub
xor
push
sub
imul
clc
inc
icebp
jo
idiv
hlt
gs
mov
retf
lea
pop
adc
mov
lods
data16
jecxz
pop
xor
inc
push
pop
add
sbb
movs
add
push
pop
adc
push
xor
add
xchg
cmp
cld
ror
(bad)
add
test
ret
push
arpl
pusha
cmps
dec
sbb
mov
scas
jg
fiadd
fstp
jns
sti
shl
mov
cmp
add
ja
xor
jo
stos
jo
or
jle
mov
sub
add
dec
lea
test
xchg
fnstsw
cmp
imul
cmp
cmp
adc
or
push
or
dec
les
cmps
or
pop
xor
cwde
sub
mov
daa
xlat
popf
push
xchg
adc
adc
test
jge
jno
and
mov
push
push
retf
lods
jecxz
js
sbb
scas
fnstenv
cmp
in
sahf
enter
and
imul
push
push
test
mov
pop
ds
jmp
mov
push
and
fidiv
adc
ficom
je
pop
jo
std
push
imul
cwde
or
and
fs
ja
aaa
popa
dec
and
fcmovbe
add
imul
dec
ret
mov
mov
mov
dec
xchg
xchg
lds
adc
xchg
dec
loop
sub
icebp
je
sub
xchg
mov
rcl
push
pop
retf
inc
xchg
and
dec
pusha
pop
test
add
xchg
xlat
inc
movs
ror
xchg
xlat
das
pop
sar
dec
dec
mov
and
adc
jae
pop
mov
mov
mov
mov
and
out
stos
mov
into
mul
push
into
dec
shl
push
push
repz
clc
push
xchg
sub
cmp
cwde
sbb
jae
rcr
xchg
(bad)
pop
pusha
das
aas
cwde
jb
dec
inc
or
loope
adc
cmp
dec
sub
pop
mov
stos
jg
je
std
mov
and
test
inc
xor
mov
sahf
ds
lahf
outs
popa
fld
pop
sahf
pop
sbb
fs
dec
jmp
into
sub
mov
enter
xchg
ss
jle
dec
add
sti
cs
fcomp
ficomp
push
xor
div
adc
adc
xor
mov
repnz
sub
jg
stc
js
pusha
gs
pushf
sar
cmps
mov
xchg
xchg
mov
dec
push
jecxz
xchg
cli
mov
hlt
dec
adc
movs
aas
pusha
sbb
xor
in
mov
jne
fadd
popf
jns
cmc
(bad)
sub
test
xchg
or
fucomi
push
nop
inc
mov
das
cmp
sbb
jno
rcr
je
dec
adc
and
and
mov
nop
or
in
and
inc
loope
push
push
stos
jne
add
sbb
inc
xor
sbb
jnp
push
push
outs
sti
and
leave
in
out
cmps
pop
jmp
in
(bad)
leave
pop
sub
sub
mov
out
jl
dec
push
pop
(bad)
mov
and
int3
(bad)
pop
nop
jb
mov
push
frstor
jmp
dec
mov
test
call
into
jmp
sub
push
adc
mov
pop
loopne
jbe
push
mov
mov
cmc
bound
ja
cmp
mov
and
add
int
popf
add
xchg
daa
lahf
das
retf
mov
in
test
out
or
(bad)
dec
inc
cmp
ins
xchg
(bad)
inc
loope
fistp
inc
jge
add
aam
pop
les
cmp
daa
pop
jbe
in
xor
and
in
sahf
(bad)
jle
movs
push
out
or
fidivr
cmp
imul
scas
mov
sub
mov
jne
pop
ficom
in
inc
test
cmps
dec
outs
and
mov
in
sbb
jns
push
movs
push
push
call
(bad)
and
pop
mov
pop
scas
or
popf
or
bnd
sbb
repz
adc
rcl
jmp
(bad)
out
scas
es
mov
mov
sub
stos
dec
shl
cmp
mov
imul
push
cdq
ficomp
jl
fmul
sbb
jae
dec
fidiv
jle
inc
clc
pop
jge
shr
movs
cmp
pushf
(bad)
xor
ds
fucom
jb
adc
sbb
jg
mov
push
jge
mov
inc
cmp
fstp
sti
mov
movs
int3
js
add
dec
das
mov
adc
xchg
xor
mov
push
push
sbb
sar
add
pop
repnz
cs
dec
xchg
jge
pop
fisub
sub
push
jp
imul
cmp
sbb
(bad)
dec
repnz
cli
shl
mov
inc
outs
mov
mov
rcl
loop
xchg
data16
neg
pop
xor
jge
inc
fs
mov
cwde
loop
or
xor
sbb
enter
xchg
jl
or
lahf
cmp
xor
xor
dec
cmc
jmp
loope
shl
xchg
jp
sub
iret
pop
sbb
gs
jge
mov
popf
retf
jl
mov
loopne
mov
mov
in
mov
out
scas
jg
ret
jno
shl
lods
jne
adc
int3
dec
mov
inc
mov
inc
add
pop
cli
sahf
and
cmp
push
inc
fadd
cwde
movs
lods
mov
mov
push
(bad)
push
mov
mov
mov
cs
lods
repnz
push
mov
dec
xor
icebp
or
sar
jbe
in
or
stos
fsubr
cli
arpl
aad
xchg
clc
in
enter
mov
sbb
aas
dec
scas
pushf
sub
mov
add
scas
or
cmp
or
lods
push
sbb
mov
push
das
mov
test
movs
pop
test
lea
icebp
in
in
mov
push
inc
lods
xlat
outs
jge
repz
test
sub
mov
xchg
dec
xor
dec
out
(bad)
loop
pusha
xor
mov
and
imul
dec
push
leave
out
sbb
imul
xor
add
sub
sbb
mov
out
pop
(bad)
push
sub
popf
and
dec
movs
ret
mov
mov
outs
movs
ror
in
nop/reserved
mov
pop
pop
test
mov
lock
call
dec
push
iret
mov
loop
sub
jns
iret
pusha
jge
shl
cmp
aad
and
cmp
sbb
mov
cwde
pop
jmp
jmp
lods
aas
fwait
(bad)
pop
cdq
inc
and
xor
rcr
push
xor
mov
cmp
enter
mov
bound
sbb
or
adc
ja
(bad)
pop
push
dec
xorps
inc
xor
into
push
(bad)
sub
xchg
push
and
inc
or
add
mov
lahf
jmp
add
dec
imul
or
sbb
jmp
int
push
enter
clc
out
outs
sbb
mov
(bad)
bound
cmps
dec
imul
or
(bad)
(bad)
mov
or
sub
jge
mov
jae
stos
js
mov
mov
jns
(bad)
lock
lds
jne
mov
je
ror
lahf
bound
(bad)
retf
mov
les
pop
popa
not
sbb
push
push
mov
fmul
or
test
dec
stos
repnz
out
invd
jle
or
in
mov
cs
ja
xchg
test
(bad)
mov
add
test
xor
out
push
leave
popf
fs
(bad)
inc
aas
in
dec
dec
sbb
or
sbb
in
sar
jb
ins
cmp
xor
push
jl
test
iret
lds
(bad)
xor
(bad)
in
sub
ins
adc
cld
or
lods
out
or
mov
ret
and
ja
and
pop
mov
sbb
and
lods
mov
in
push
fld
fld
cmp
add
leave
or
(bad)
je
xchg
add
(bad)
xchg
(bad)
lock
dec
clc
xchg
push
jg
in
(bad)
pop
or
mov
retf
inc
inc
das
pop
icebp
or
int3
dec
cmp
push
sbb
mov
sub
xchg
adc
or
loop
sub
test
fndisi(8087
aam
iret
nop
rcr
cli
mov
fldenv
and
lods
pop
push
mov
sub
inc
jb
jmp
sahf
adc
fld
in
psllw
test
(bad)
fnstenv
ins
(bad)
call
in
stos
fld
enter
in
push
inc
lods
mov
mov
push
mov
and
push
sbb
mov
outs
movs
mov
nop
jnp
lds
xchg
pop
mov
retf
push
test
and
mov
ins
aad
jb
loope
add
xor
mov
imul
and
and
cmp
sti
mov
lock
or
mov
enter
add
lods
hlt
lods
scas
mov
fsubr
and
popf
sbb
pop
pop
int3
fbld
retf
mov
inc
cmp
dec
cmp
or
push
sbb
pusha
push
ret
pop
add
mov
mov
add
loop
pop
mov
push
in
mov
icebp
mov
jnp
push
push
lock
fnstenv
push
gs
stos
pushf
inc
stc
push
cmc
ror
out
jecxz
inc
xor
mov
jmp
loop
(bad)
sbb
(bad)
push
fs
xlat
inc
retf
(bad)
pop
push
in
xchg
loope
lds
jmp
mov
in
jne
cmp
lods
aaa
mov
add
addr16
dec
pop
fstp
gs
inc
int3
sub
mov
arpl
xchg
mov
aas
adc
scas
stos
imul
pop
dec
add
add
cmp
inc
(bad)
dec
clc
push
mov
mov
push
lods
or
data16
out
bound
fsub
jl
dec
seta
repnz
dec
lds
leave
jns
xlat
ret
sub
push
adc
retf
mov
mov
and
mov
mov
add
scas
leave
fs
fild
xor
test
ret
mov
daa
dec
pushf
xor
mov
sub
or
dec
pusha
(bad)
ficom
dec
inc
mov
inc
stos
lahf
shl
push
dec
scas
inc
mov
inc
leave
sbb
cld
dec
outs
ds
sti
jbe
xchg
(bad)
jmp
mov
imul
cwde
push
xchg
jge
mov
inc
jbe
in
xchg
(bad)
adc
jmp
adc
bound
cmps
retf
test
and
jecxz
adc
add
xchg
fist
jno
(bad)
dec
clc
and
(bad)
and
inc
out
jo
jmp
xchg
cmp
aam
pop
ds
inc
(bad)
in
clc
cmp
pop
retf
imul
aam
lods
ins
test
test
ret
dec
xchg
mov
jne
pop
jno
jo
test
lods
add
push
shr
loope
imul
mov
aad
icebp
das
fsubrp
adc
inc
fldenv
popf
adc
jns
inc
sub
add
pushf
or
ret
mov
lea
rcr
call
test
adc
ss
ss
cmp
xor
movs
fisubr
pop
inc
fimul
adc
and
(bad)
mov
dec
(bad)
enter
and
push
gs
jmp
out
pop
shl
mov
cmp
xchg
adc
mov
pop
xor
pop
mov
mov
dec
jecxz
fldcw
in
pusha
mov
sbb
push
out
mov
or
adc
in
jge
sub
data16
(bad)
popf
inc
xor
retf
inc
xchg
jae
push
mov
pop
test
push
movs
lahf
pop
ins
dec
or
je
inc
add
sbb
es
jb
stos
inc
xor
out
call
dec
push
pop
xlat
add
mov
icebp
enter
nop
sub
data16
mov
mov
push
sbb
inc
add
fdiv
ins
or
mov
ret
xchg
pop
xchg
jno
mov
test
bound
pop
mov
imul
cmps
sbb
add
sub
mov
push
or
jle
inc
repnz
imul
fst
mov
(bad)
adc
pop
addr16
std
test
or
sahf
stos
mul
push
sti
mov
in
push
mov
aad
repnz
dec
loop
bound
mov
neg
ins
dec
ret
jecxz
inc
out
(bad)
repz
fucomp
call
or
clc
and
jmp
cmp
sbb
cmp
sub
leave
mov
inc
mov
ds
cmps
popa
jecxz
mov
mov
inc
dec
sar
push
push
inc
fwait
movs
sahf
sub
mov
in
jne
mov
js
mov
jns
jg
and
dec
mov
enter
inc
fs
cdq
cmps
push
pop
sub
ffreep
and
fist
mov
push
sbb
xchg
mov
or
cli
pop
add
ins
imul
sub
cmp
mov
pushf
in
rcl
ins
push
cmp
shl
clc
icebp
xlat
push
(bad)
ins
cmp
dec
ret
pop
retf
out
and
inc
inc
lahf
dec
xlat
lock
cmp
cmp
xor
adc
out
unpcklps
add
(bad)
fmul
jge
mov
popa
fisubr
loope
ret
sbb
lods
repz
repnz
push
pop
pop
jns
idiv
dec
dec
(bad)
cwde
mov
ins
shr
cmp
fst
(bad)
mov
pop
into
sub
push
(bad)
mov
cmps
mov
(bad)
cmp
mov
test
mov
xor
lods
dec
retf
sbb
sbb
adc
mov
push
or
aam
adc
jmp
enter
inc
xchg
sbb
ret
push
sbb
dec
icebp
es
jo
adc
or
mov
push
mov
xor
fnstenv
push
into
jno
(bad)
lahf
test
xchg
inc
ins
or
shl
fcom
aam
push
das
or
push
enter
clc
jbe
aad
adc
dec
pmaddwd
lods
aaa
cmp
scas
mov
and
jnp
int
pushw
fcomp
mov
iret
ja
(bad)
rcl
xchg
or
dec
inc
cmp
es
mov
lds
je
out
mov
cmc
inc
push
jecxz
mov
push
pop
xor
mov
bound
fcomp
outs
pop
sub
push
dec
stos
aad
push
iret
and
pusha
and
mov
add
inc
movs
xor
les
sbb
inc
retf
xchg
icebp
sub
(bad)
mov
pcmpeqd
test
int
inc
sahf
repnz
retf
jns
sub
adc
ror
add
cmc
leave
mov
mov
xor
cmp
jmp
push
lea
mov
pop
shl
mov
fist
(bad)
in
(bad)
in
out
sbb
call
mov
test
repnz
imul
outs
pop
mov
popf
mov
aam
cs
sbb
inc
test
pop
inc
xor
jge
mov
aas
sbb
or
or
push
inc
out
es
or
stos
fdiv
jge
clc
ds
mov
pop
xor
je
cmp
push
jmp
je
xchg
and
jmp
repz
call
mov
and
mov
xlat
repz
loopne
sahf
mov
and
push
loop
into
(bad)
jl
cld
leave
cwde
jl
inc
adc
push
repnz
xchg
dec
mov
xlat
xor
xor
adc
adc
cmp
pop
fisttp
inc
adc
fsubr
sub
mov
fistp
and
stc
cwde
adc
mov
sub
mov
cmp
frstor
out
add
ffree
lods
fsubr
es
xchg
add
or
fisub
fmul
stos
mov
mov
sub
sbb
xchg
push
xchg
ret
(bad)
sub
inc
mov
mov
icebp
movs
int3
in
add
int
imul
call
out
cmp
fadd
push
adc
mov
mov
sbb
inc
loop
jne
adc
scas
pop
inc
rcr
fldcw
mov
pop
loop
sub
cmp
call
mov
inc
pop
xchg
and
int3
inc
or
inc
xchg
stos
and
cld
dec
push
iret
sbb
das
fs
inc
cld
push
ins
sbb
out
sbb
popa
test
retf
fcom
int3
scas
jne
mov
loope
pop
popf
jecxz
data16
add
aam
jmp
or
into
add
xchg
xor
jmp
(bad)
or
mov
aam
mov
fisub
iret
repnz
or
test
cmps
and
stos
pop
hlt
and
jle
test
xor
retfw
outs
mov
mov
dec
mov
ins
push
aad
cdq
pop
gs
mov
mov
push
jle
pop
cmp
scas
dec
sub
push
addr16
outs
push
mov
jns
push
lahf
xlat
dec
push
jae
mov
push
outs
add
fistp
mov
jnp
and
mov
ins
mov
xchg
data16
(bad)
xchg
ja
aas
sar
jle
jg
dec
mov
lahf
(bad)
retf
dec
or
or
retf
xchg
cdq
xchg
and
loop
sbb
push
adc
xchg
adc
pop
pop
rcl
jecxz
aad
jg
cmp
icebp
adc
pop
loop
adc
sub
(bad)
or
aam
jmp
ss
jle
data16
aad
ss
aam
push
test
cdq
sub
xor
mov
pusha
fstp
mov
aaa
inc
sbb
cmp
lahf
mov
imul
inc
push
(bad)
push
push
movs
cdq
push
mov
sbb
jno
in
lahf
gs
scas
imul
fisubr
mov
mov
mov
pop
push
ja
pop
push
xor
scas
xchg
push
cmp
(bad)
sub
ror
stos
and
dec
int3
cdq
cmp
sub
sub
push
add
(bad)
cmp
cli
xchg
lds
mov
sti
stos
(bad)
cmp
aad
cmp
cli
js
and
inc
(bad)
push
scas
push
push
push
cmp
dec
scas
popa
loope
and
cmc
push
xor
dec
push
xor
stos
fmul
leave
dec
enter
inc
cld
in
pop
mov
call
inc
dec
loope
jne
pop
sub
add
ret
jg
loop
call
xchg
outs
xor
retf
jg
dec
test
jb
push
pop
jbe
call
dec
cmc
clc
not
sub
xchg
out
dec
loope
mov
test
dec
movs
push
imul
push
mov
or
sti
mov
lock
dec
ins
or
out
cdq
mov
shl
les
aas
(bad)
jge
jge
outs
leave
push
call
(bad)
jno
cmp
ficomp
out
test
pop
cs
cwde
jmp
dec
mov
(bad)
mov
add
mov
pushf
dec
inc
pop
sbb
or
or
neg
test
(bad)
pop
sti
cmp
out
out
cmp
and
xchg
ret
outs
or
icebp
mov
inc
mov
add
fwait
scas
xchg
cmps
xchg
jb
jns
jbe
inc
fnsave
sbb
xrelease
sub
pop
sbb
or
xor
jb
sbb
lods
(bad)
outs
jne
imul
jae
ret
int
mov
adc
add
aaa
mov
xor
test
ror
popf
sahf
retf
in
sub
adc
xchg
inc
dec
and
aam
in
ret
sub
adc
arpl
push
fwait
repz
aam
mov
xor
dec
stc
cdq
sub
fldenv
cdq
js
dec
scas
add
out
dec
out
pushf
mov
add
or
fld
loope
sti
add
in
xchg
and
out
(bad)
aam
xchg
cmp
jl
xchg
or
mov
and
out
into
sub
in
jl
push
and
inc
cmp
pop
sub
repz
adc
sub
xchg
aaa
ret
xchg
inc
stc
popa
(bad)
sar
mov
inc
cmp
test
xlat
xchg
sbb
cmps
and
shr
dec
xlat
sbb
push
test
mov
iret
call
rcl
jl
jns
or
jg
xchg
push
mov
jmp
daa
rcl
out
jo
(bad)
stc
ds
(bad)
out
rcr
sub
shl
add
push
cdq
in
xchg
pop
push
sub
push
sti
lahf
test
rcr
jae
jne
sub
push
jp
fnsave
fstp
mov
and
push
xchg
mov
xchg
test
sub
call
push
or
pop
sbb
and
pop
popa
push
sbb
sub
popf
cmc
scas
pop
inc
and
add
ja
out
cmc
or
cdq
jle
arpl
fisttp
in
add
sbb
xchg
loop
int
adc
imul
ds
xchg
ins
sub
jo
jo
jae
fwait
sbb
(bad)
rol
inc
cwde
dec
mov
cwde
into
aam
(bad)
jnp
mov
xor
icebp
dec
or
cs
add
mov
jae
sub
push
push
leave
mov
outs
out
or
das
adc
sbb
and
sub
jmp
mov
mov
(bad)
outs
cmp
jp
push
mov
scas
sbb
(bad)
dec
lods
pop
push
out
lods
add
enter
fidiv
repnz
pusha
inc
ins
sub
fisub
pushf
jne
mov
mov
mov
in
sub
clc
popf
daa
pop
xlat
dec
pushf
pusha
test
dec
and
mov
adc
loopne
stc
and
xlat
and
sahf
pop
push
iret
gs
add
sbb
sub
retf
push
aad
ror
inc
nop
ret
lock
xor
push
mov
jnp
test
sti
mov
inc
xor
data16
push
cmps
mov
jmp
call
ins
clc
xor
jb
or
inc
cmp
adc
xor
xchg
jge
lea
ror
ins
add
and
push
xchg
xor
sbb
mov
int3
jl
sub
retf
cmp
aaa
and
popf
es
cs
push
sbb
mov
dec
call
add
or
xor
jl
inc
daa
aaa
jle
ins
add
dec
dec
test
out
enter
test
(bad)
repnz
push
push
movs
fcomp
int
push
pop
or
jns
imul
xchg
pop
mov
test
in
shl
pop
jg
and
repz
jg
(bad)
in
mov
rol
adc
mov
sbb
bound
sbb
or
sar
pop
adc
movs
inc
pop
cmp
sub
les
pop
test
loop
rcr
pop
(bad)
or
push
loopne
pushf
repnz
pop
test
cli
ficomp
cld
(bad)
aad
jmp
sbb
in
popa
xchg
push
xchg
popf
xor
dec
leave
(bad)
xchg
jmp
fwait
fwait
in
cmp
add
cwde
cmc
leave
cmp
mov
popf
jle
pop
test
popf
out
daa
pop
xor
dec
push
(bad)
outs
push
lds
pop
bsr
fs
cld
push
repz
syscall
push
loopne
or
pop
jb
mov
lock
cld
pop
xchg
das
mov
mov
lahf
xlat
out
jp
jmp
push
push
push
dec
stc
pop
nop
dec
xor
imul
rcl
lods
dec
push
jp
dec
cwde
mov
jge
cmp
jle
data16
mov
jns
int3
(bad)
adc
xchg
pop
push
jl
mov
cmp
add
dec
mov
inc
pop
shl
inc
cdq
(bad)
jge
dec
xor
xchg
jnp
mov
aam
pushf
test
ss
mov
and
out
xlat
retf
and
fst
(bad)
push
rcr
cmp
dec
(bad)
(bad)
mov
mov
fucompp
push
aam
leave
or
cmp
mov
jge
sbb
lock
hlt
pop
rol
aas
bound
sti
mov
mov
fistp
in
inc
push
cmp
popf
fimul
sbb
mov
int3
nop
leave
dec
movs
(bad)
xchg
fstp
sub
mov
imul
or
pop
add
sbb
movs
pop
push
iret
mov
test
es
int
inc
mov
aaa
pusha
inc
fcmovnu
mov
and
add
add
jecxz
mov
lea
fistp
out
scas
mov
aad
sub
leave
jbe
pop
scas
out
pop
jp
das
jecxz
pop
scas
push
cs
shl
mov
cmps
push
inc
movs
or
ins
loopne
and
mov
fld
dec
imul
jae
cmps
ret
push
(bad)
loop
cmp
and
stc
and
or
aaa
cwde
and
sub
inc
inc
lods
mov
pop
pop
and
xchg
sub
repnz
ds
hlt
outs
dec
or
push
out
out
mov
int3
sbb
mov
cmps
sub
adc
rcr
fwait
cmp
ins
cmp
(bad)
into
cmp
iret
push
out
gs
jle
sub
rol
mov
lock
test
inc
aam
dec
sti
addr16
adc
xchg
lods
int
cmp
jae
pop
cmps
xchg
push
push
xor
or
xchg
les
mov
loop
stos
add
fstp
adc
cld
adc
lds
repz
mov
inc
(bad)
pop
int
loop
add
(bad)
fisub
std
rcr
fs
ficomp
push
cmps
jne
mov
jmp
add
xchg
repz
cmps
xchg
push
push
shl
clc
call
adc
inc
jge
test
jl
sti
lods
bound
push
stc
icebp
xor
ret
mov
scas
hlt
aaa
inc
mov
ror
mov
cmp
dec
cmp
mov
ins
leave
cmp
ins
push
xlat
sahf
inc
xor
imul
daa
or
je
inc
xlat
ret
xor
cmc
pop
call
popa
push
lods
repz
lahf
adc
ss
out
clc
push
xchg
push
int3
mov
mov
dec
mov
jp
xor
sbb
(bad)
js
hlt
stos
or
pop
add
push
(bad)
out
ins
in
sbb
repz
into
mov
inc
mov
add
ret
(bad)
jnp
lahf
add
mov
in
inc
xchg
inc
push
jmp
cld
xlat
dec
rcr
lock
lods
xor
hlt
adc
fdivr
cmc
inc
mov
bound
pop
ret
js
test
div
push
(bad)
and
cmp
icebp
(bad)
into
and
push
push
and
and
sbb
mov
dec
mov
scas
or
adc
int
cmp
into
rcl
or
add
cmps
sar
mov
xor
push
addr16
mov
push
xor
cmp
loope
call
(bad)
pop
jp
and
test
fild
mov
dec
and
mov
inc
inc
sub
arpl
inc
movs
sub
xchg
mov
pop
cdq
pushf
std
pop
inc
add
jo
into
xchg
(bad)
fsub
inc
call
icebp
mov
aas
and
add
sbb
rcl
aad
pusha
adc
ret
fmul
xchg
adc
ficomp
and
and
mov
sub
(bad)
add
pop
inc
js
call
dec
xor
mov
push
mov
test
sbb
test
test
xchg
jnp
pop
mov
push
pop
pop
lea
inc
dec
cwde
loope
xor
repnz
fwait
xor
neg
(bad)
xchg
ret
sar
mov
sub
ffree
cmp
popa
or
mov
and
or
in
sub
push
mov
sub
push
mov
les
(bad)
mov
addr16
leave
iret
or
cmps
in
clc
pop
icebp
mov
push
imul
push
push
pop
stos
xchg
inc
in
ficomp
jno
jns
(bad)
ret
outs
pop
test
hlt
mov
in
push
fiadd
pop
in
xchg
int3
daa
test
sbb
out
js
sbb
push
mov
hlt
pushf
cmp
add
ss
dec
imul
jnp
mov
daa
push
scas
pop
pop
jno
add
pop
lock
je
js
and
xchg
xor
mov
xchg
(bad)
call
mov
inc
fs
test
bound
sbb
adc
xor
ja
sub
push
jmp
mov
lock
inc
jo
lods
loopne
mov
sub
pop
jae
and
pop
stos
xchg
retf
pop
push
jmp
out
adc
mov
(bad)
fldcw
mov
mov
sar
popa
std
add
ins
sbb
jno
cwde
inc
jae
les
(bad)
mov
imul
mov
sub
cmp
in
add
rcr
cmp
sub
mov
(bad)
jmp
int3
movs
pushf
jg
scas
into
not
std
out
in
imul
cmp
lods
imul
xchg
loopne
mov
jmp
jbe
xor
mov
pop
in
sbb
jl
xor
rcr
fst
sub
repz
sub
sbb
(bad)
inc
pop
das
(bad)
call
rol
cmp
fidiv
aaa
aas
imul
mov
mov
xor
loop
jbe
and
out
sub
out
xor
mov
cmp
jp
nop
addr16
fimul
xchg
jns
push
mov
cmc
xor
xlat
jb
push
adc
mov
jo
call
mov
in
test
dec
stos
aad
mov
gs
daa
cmp
ins
adc
out
rcr
cmp
pushf
cmp
sbb
push
adc
pop
clc
icebp
cdq
push
xchg
stc
push
js
cmp
popf
aam
ror
enter
rol
js
add
sbb
pop
or
icebp
stc
mov
dec
in
dec
jle
(bad)
out
addr16
xchg
jo
mov
sub
addr16
rcr
test
jo
jb
xor
mov
stos
jge
nop
pop
mov
mul
inc
mov
leave
(bad)
clc
push
mov
push
xor
mov
in
popa
inc
mov
in
jo
addr16
shl
mov
stc
inc
sbb
retf
mov
inc
add
xchg
push
inc
es
cdq
dec
mov
ins
ffreep
mov
cmp
mov
push
or
test
sbb
out
out
(bad)
pop
mov
rcr
or
mov
sbb
and
stos
sbb
and
xor
sbb
or
retf
xor
sbb
shl
adc
in
(bad)
retf
inc
cmp
sbb
push
xor
mov
mov
lahf
jl
out
cs
inc
mov
mov
sbb
int3
cwde
jecxz
out
and
jne
movs
mov
test
xchg
arpl
aam
movs
pop
(bad)
push
lock
mov
jo
mov
sub
popa
or
test
adc
xchg
xchg
adc
aas
fild
fst
add
cmp
(bad)
sbb
jecxz
pop
movs
mov
xchg
mov
sub
mov
popf
leave
repz
ret
enter
shl
cld
or
call
mov
loop
and
mov
lods
mov
inc
mov
test
or
xchg
jl
push
cs
push
imul
(bad)
ja
pop
cwde
adc
pop
or
ffreep
daa
ror
hlt
adc
cli
mov
sbb
pop
repnz
ja
cmp
ret
jmp
and
sub
mov
jecxz
(bad)
push
sub
xchg
mov
int
inc
movs
mov
sti
daa
sbb
fwait
adc
xchg
daa
push
and
hlt
mov
pop
adc
mov
jge
mov
adc
(bad)
(bad)
pusha
mov
push
movs
sub
and
loop
jns
xor
or
sbb
push
mov
aam
mov
and
cld
mov
out
pop
stos
mov
dec
cmp
stos
stc
jb
push
mov
(bad)
add
jl
arpl
imul
sar
xchg
push
adc
dec
cmp
mov
(bad)
xchg
mov
xor
stc
loopne
mov
mov
arpl
cmps
rcr
movs
push
pop
push
inc
xchg
dec
lahf
jno
sub
lock
xor
popf
rcl
and
push
adc
test
sbb
fs
scas
ss
adc
add
cdq
inc
mov
rcl
inc
loope
enter
fcomip
dec
test
cld
xor
loopne
dec
dec
xchg
movs
push
sti
dec
xchg
dec
cmp
fld
push
(bad)
ficom
mov
push
(bad)
mov
dec
sti
mov
cwde
add
in
adc
imul
mov
push
dec
stc
fwait
addr16
aaa
cs
lods
push
sub
imul
(bad)
setae
mov
or
rcl
loop
sub
stos
mov
sub
push
aaa
or
jge
stos
cld
cmp
int3
lods
retf
mov
mov
lock
ror
cmps
int3
ret
popf
icebp
data16
cdq
pop
mov
sar
sub
outs
(bad)
aas
int
or
push
and
adc
adc
out
pop
fdivr
mov
cwde
ficom
xchg
pop
push
jne
addr16
inc
sub
inc
call
nop
cmp
sti
push
dec
lods
mov
inc
xchg
dec
mov
(bad)
xchg
stc
ds
xchg
inc
inc
pop
and
jg
stc
dec
iret
cmp
mov
aas
cmp
cmps
jne
cmp
cmp
ret
mov
ffreep
fldenv
nop
and
mov
adc
add
push
add
add
fyl2x
cwde
call
out
into
loope
adc
or
push
ret
inc
enter
ja
fs
lds
lods
push
xchg
inc
jle
push
sub
call
enter
and
sub
mov
adc
mov
mov
jb
stos
aam
mov
or
lds
inc
mov
int3
loopne
imul
int3
mov
xor
mov
rol
mov
retf
in
jl
jnp
mov
jnp
jmp
js
ins
adc
dec
pop
icebp
push
or
add
data16
leave
and
leave
and
jo
mov
out
mov
jp
aad
jmp
mov
fs
inc
pop
mov
pop
mov
xchg
adc
cli
and
pop
inc
push
inc
xchg
cmp
je
xchg
xor
or
ror
(bad)
shr
jge
adc
sbb
xchg
shr
and
sbb
jg
mov
push
and
cmp
dec
or
sbb
sub
sbb
xor
test
mov
or
inc
cmp
je
(bad)
loope
rcr
jmp
aaa
out
or
jl
adc
xchg
loopne
aas
cld
(bad)
out
jecxz
and
sahf
enter
ss
loope
jb
enter
fs
shr
jnp
xor
cmp
test
cmps
loopne
jbe
mov
push
jo
(bad)
popa
adc
mov
retf
xor
into
lds
daa
push
add
sub
js
fidiv
sbb
test
shr
jns
jae
sub
imul
retf
push
jns
arpl
cwde
pop
jnp
fist
dec
pop
fld
xchg
sub
xor
fdivr
sub
or
les
xor
ss
clc
mov
and
int3
cs
pushf
pop
push
retf
test
adc
ret
lods
cld
js
sbb
fst
xchg
pop
or
es
imul
sti
test
icebp
and
(bad)
shl
and
out
ficomp
sbb
mov
sbb
xor
repz
jo
fwait
cmc
mov
cmp
mov
rol
loopne
fiadd
push
(bad)
xor
inc
scas
lock
xchg
add
(bad)
imul
cmp
xchg
mov
sub
pop
or
or
in
cdq
dec
out
fiadd
aad
(bad)
adc
mov
push
sub
dec
pop
mov
mov
frstor
adc
(bad)
shr
into
or
sub
rol
sbb
iret
or
movs
mov
push
cmp
cmps
mov
and
(bad)
fnsave
mov
movs
sub
ret
xor
mov
mov
xor
or
pop
xchg
mov
push
ror
xchg
adc
shl
cmp
cs
sahf
inc
stos
inc
mov
sub
in
xchg
stc
jge
cmp
out
push
cmc
xchg
(bad)
or
icebp
lods
mov
sete
mov
pusha
jo
imul
mov
adc
inc
inc
push
pop
push
mov
out
movs
rcl
push
adc
sub
cmp
ret
mov
in
hlt
add
loop
enter
and
or
test
cmp
lea
shr
call
fst
cmp
cmp
pop
or
std
cmc
bound
jae
aaa
mov
sbb
sbb
dec
out
ror
mov
fistp
jle
adc
cmc
push
xchg
cld
sbb
movs
jmp
loopne
sub
clc
jo
sbb
dec
fidivr
push
cmp
sub
ret
sbb
adc
lea
outs
loope
jle
mov
gs
dec
add
imul
push
ins
outs
pusha
pop
pop
ror
out
mov
ret
data16
add
mov
inc
xchg
adc
add
(bad)
pop
(bad)
cdq
iret
inc
xor
les
popf
sbb
js
mov
test
inc
ds
mov
stos
jle
icebp
mov
mov
and
add
mov
jbe
mov
pop
fisub
push
(bad)
hlt
das
sub
sahf
es
std
shl
cld
add
in
adc
ss
jl
xor
cdq
mov
sub
push
xchg
bound
cmp
dec
xchg
dec
pop
mov
or
inc
aaa
cmp
cdq
xor
jg
lods
lds
pop
dec
movs
mov
das
inc
mov
mov
add
rcl
jmp
inc
push
mov
in
sbb
push
cli
(bad)
movs
mov
mov
test
out
add
jne
popa
add
or
les
sbb
loopne
mov
repz
ja
fsub
lahf
out
jbe
lds
call
mov
cmps
repnz
lock
cmps
mov
jl
aaa
js
mov
cmc
mov
dec
jmp
jp
inc
or
fcomp
(bad)
add
xchg
sbb
fs
stos
xchg
aaa
fcom
mov
mov
(bad)
jo
je
in
pop
push
jnp
and
les
fnstsw
out
push
icebp
fcom
icebp
inc
jge
adc
adc
xlat
data16
xlat
rcr
inc
push
neg
push
xchg
outs
idiv
les
mov
mov
test
enter
and
in
mov
push
aam
push
dec
mov
mul
int
cmp
cmps
movs
inc
and
fdivr
cs
inc
loop
xlat
fs
in
mov
sub
sub
mov
lock
jp
push
fs
(bad)
in
cwde
push
js
inc
xchg
push
loopne
dec
repz
and
pop
inc
xlat
adc
jmp
in
out
and
loope
and
pop
and
jmp
dec
cmc
inc
jp
jb
lds
pop
jo
inc
cwde
lea
push
mov
jnp
push
push
sbb
neg
push
fistp
cli
push
ret
stos
xor
leave
fisttp
retf
xor
mov
xor
push
int
sub
sahf
cli
sub
pop
mov
push
into
rol
mov
test
mov
jecxz
dec
ret
jae
pop
mov
jns
fst
ret
and
loope
test
mov
mov
es
jle
pop
fcmovnu
popa
out
push
cdq
daa
mov
in
stos
inc
popa
fcmovb
and
ret
add
and
hlt
dec
sub
lods
push
(bad)
push
lods
inc
out
imul
xchg
rol
xchg
nop
mov
pop
and
fmul
mov
or
adc
mov
dec
cs
inc
jge
call
(bad)
sub
aaa
test
jecxz
dec
movs
loop
aaa
sar
pop
xchg
inc
mov
jno
jge
adc
mov
call
rol
sbb
cmp
scas
adc
jg
ret
ins
cmp
enter
out
iret
sub
jecxz
and
push
retf
adc
ds
mov
out
outs
mov
shr
mov
out
dec
xchg
ret
and
adc
stc
inc
push
jl
pop
mov
xchg
add
mov
inc
test
inc
scas
push
mov
jmp
xor
xor
bound
add
lods
int3
clc
mov
cmps
cmp
sbb
loop
ins
(bad)
add
jb
dec
inc
or
gs
cmp
stos
dec
int
retw
push
and
cmp
and
xor
fwait
mov
std
hlt
xchg
cmp
mov
(bad)
lea
sahf
inc
arpl
pop
mov
mov
lods
xchg
cmp
pop
and
cmps
inc
mov
cmp
mul
push
fadd
cmc
mov
add
or
inc
xchg
sub
sub
inc
fs
xor
stos
stos
movs
inc
lock
sbb
xchg
pop
sbb
inc
inc
mov
xor
outs
jge
cmp
stc
in
fcomp
mov
and
jns
ja
sub
add
cmps
xor
(bad)
xchg
stc
mov
mov
and
or
lods
jbe
leave
movs
std
stc
and
out
add
std
cmc
xchg
jmp
inc
dec
mov
cs
mov
aaa
and
ret
ret
into
popf
xchg
sbb
push
fld
xor
sbb
mov
push
mov
pop
mov
out
dec
dec
push
scas
out
iret
aas
jp
lds
shr
cmps
xchg
and
fld
bound
push
fstp
daa
push
in
sbb
in
inc
xchg
sub
mov
jns
pop
and
xchg
cmp
jmp
movups
test
loopne
push
lea
and
in
mov
sub
retf
mov
mov
dec
xor
dec
sbb
leave
mov
cmps
push
cmp
pop
ret
les
jp
sbb
pop
jle
dec
xchg
push
xchg
jle
imul
mov
dec
loope
mov
mov
repz
rol
mov
movs
jp
int
ds
fst
push
das
mov
int
clc
fild
mov
sub
repz
push
imul
adc
pop
push
inc
inc
or
or
cmp
cdq
das
push
sub
(bad)
in
icebp
jbe
push
mov
popf
les
pop
jmp
gs
shl
or
xor
sub
inc
sahf
shl
stos
(bad)
je
xchg
pusha
cmps
add
mov
push
test
loopne
test
push
push
xchg
aaa
cmp
mov
push
jge
ins
cmps
cmps
xor
(bad)
xor
or
push
ss
aas
xchg
imul
repz
jno
aas
daa
imul
sbb
test
mov
inc
test
push
mov
lods
(bad)
nop
cmp
inc
push
jecxz
push
fstp
cwde
into
(bad)
fisubr
sbb
jno
imul
mov
arpl
push
call
repz
scas
fnstenv
test
data16
push
es
into
idiv
stos
retf
repz
mov
jle
aam
imul
leave
lock
ret
pushf
pop
mov
xchg
pop
pushf
stc
mov
xor
pop
add
lea
test
jmp
xor
sbb
pop
loop
es
pop
loope
adc
addr16
inc
adc
js
bound
add
cli
retf
in
fidiv
adc
pop
mov
fidivr
lods
mov
sbb
mov
mov
xor
sbb
movs
mov
xchg
mov
movs
pop
stc
dec
xor
add
cmp
(bad)
or
neg
and
cmp
sub
fisubr
ror
mov
dec
loopne
jge
mov
fst
aaa
gs
das
mov
adc
and
inc
jge
xchg
pop
mov
icebp
sbb
push
ret
and
adc
fs
loope
pop
pushf
jo
inc
and
lock
dec
repz
out
lock
pop
sub
jmp
mov
jo
push
es
push
mov
sub
mov
fsubp
pop
jmp
push
loopne
into
inc
das
cdq
std
or
call
jb
cmp
xor
test
xor
lock
jmp
inc
js
stos
or
and
and
xor
xor
ins
sub
mov
pop
in
cmp
inc
std
loopne
stos
and
dec
jne
sar
mov
into
sub
jge
add
xchg
repz
imul
xchg
add
push
mov
div
mov
pop
adc
ja
xchg
std
imul
jmp
test
int
scas
into
in
cmp
out
pop
lahf
dec
shl
int
pop
pop
neg
xchg
enter
icebp
rcl
mov
cmp
ins
shl
mov
jns
pop
hlt
mov
int
(bad)
push
rcr
or
xchg
sbb
call
ja
stos
cld
icebp
ficomp
test
cli
ret
enter
cmp
dec
sub
add
dec
rcl
mov
loope
int
jne
or
jae
iret
or
jmp
mov
inc
js
xchg
mov
mov
jmp
adc
push
cli
iret
in
jg
or
shl
imul
mov
and
and
pop
sahf
ficom
ret
and
jbe
add
fst
imul
mov
pop
add
mov
icebp
mov
mov
xchg
not
or
sbb
and
dec
xor
mov
mov
cmp
out
inc
mov
adc
adc
pop
cmp
out
(bad)
dec
fnstenv
lea
and
stos
cwde
jge
int
(bad)
and
out
call
aad
push
ins
or
outs
scas
add
jle
mov
push
or
add
das
jl
jno
mov
cmp
in
ins
ja
shl
js
fwait
sbb
test
(bad)
sbb
cmc
(bad)
pop
hlt
leave
xchg
jne
movs
je
pop
pop
sbb
mov
jmp
dec
in
jmp
popa
iret
cmp
sti
jb
pop
push
cmps
xor
std
lock
fnstcw
cli
mov
mov
mov
outs
es
psrlw
(bad)
push
jp
jbe
or
cmp
add
dec
jl
push
sbb
push
cli
jo
retf
jl
movs
fs
inc
and
xchg
xchg
inc
cmp
aaa
push
retf
mov
xlat
rcr
aam
push
push
lea
cmp
push
dec
stos
aas
jmp
xor
movs
xchg
ds
iret
pop
lods
xlat
or
push
mov
in
sbb
xchg
aaa
in
(bad)
adc
test
enter
popa
out
cmp
out
adc
scas
ja
call
movs
repnz
sti
jns
inc
dec
loop
cvtps2pd
int
jno
sub
mov
rcl
sbb
dec
cmp
jno
addr16
punpcklbw
(bad)
mov
cdq
outs
shl
lock
push
out
sbb
jp
scas
mov
and
fdivr
ror
rcr
into
mov
adc
mov
mov
or
push
ror
ret
mov
add
shr
and
retf
movs
loopne
test
sub
jae
loopne
jne
jae
and
int
cmps
or
call
pop
jnp
sbb
(bad)
dec
xchg
cli
cmp
std
mov
or
ins
(bad)
xchg
pop
retf
jns
inc
dec
sbb
adc
enter
test
idiv
mov
repz
add
into
sub
cwde
or
xchg
mov
or
movs
and
je
add
into
xchg
hlt
lods
jmp
mov
das
cld
push
adc
adc
pop
jnp
mov
leave
cmp
cld
ds
and
add
pop
add
dec
add
psubsw
or
push
cmc
xor
xchg
repnz
clc
leave
or
test
cmp
mov
shr
xchg
mov
jno
sub
call
adc
bound
imul
retf
fld
hlt
jae
adc
and
or
test
xor
mov
or
and
or
xchg
in
add
lahf
adc
inc
lods
(bad)
jb
jae
adc
pop
and
mov
mov
shr
stos
gs
ret
xor
and
adc
jne
out
push
and
loope
sbb
dec
out
pop
pop
xchg
cld
mov
pop
or
shl
mov
adc
or
mov
sbb
cmp
xchg
rcl
fldenv
std
test
aad
xchg
scas
call
mov
(bad)
rol
jns
mov
loope
inc
fcmovnbe
mov
dec
into
and
lahf
pop
clc
sub
aaa
aad
ins
push
bound
daa
fstp
ds
fadd
inc
or
mov
mov
dec
popf
jo
push
sahf
add
and
dec
shl
dec
mov
in
lea
(bad)
sbb
ret
inc
lea
repz
push
mov
or
push
push
pop
outs
xchg
or
in
or
das
into
adc
push
stos
ins
push
push
aad
jmp
inc
sub
mov
sbb
xor
pop
dec
and
mov
adc
xchg
pop
dec
and
ret
arpl
jne
or
and
xchg
aam
test
jb
mov
iret
jae
xor
jbe
mov
push
add
sub
(bad)
or
xor
add
sbb
lock
jmp
fmul
jns
aaa
mov
js
dec
fsubr
mov
pusha
adc
fst
retf
inc
je
pushf
or
out
(bad)
xlat
repnz
pop
(bad)
and
idiv
sub
pop
jp
dec
pop
mov
icebp
adc
cmp
push
mov
adc
lea
nop
js
xchg
jae
xchg
cld
jb
stos
dec
scas
sub
or
aam
and
pop
mov
sahf
shr
jo
mov
mov
out
outs
stos
or
daa
sub
in
jb
aam
inc
pop
push
and
shl
pop
push
and
dec
and
or
das
pop
setg
adc
mov
xchg
leave
and
mov
dec
xor
movs
call
xlat
aad
iret
adc
test
push
movs
jae
mov
enter
push
es
ja
in
aaa
xlat
cmp
aad
movs
jmp
js
mov
(bad)
loop
and
(bad)
nop
push
cmp
fist
jne
ficom
adc
test
ret
(bad)
ja
pop
cli
sub
xor
and
mov
ja
mov
sbb
rol
fwait
out
stos
(bad)
(bad)
out
push
pop
push
push
das
cmc
mov
out
imul
(bad)
dec
dec
sbb
and
sub
and
push
push
push
pop
jmp
dec
pop
dec
data16
jge
add
or
je
call
outs
sub
cs
movs
bound
xor
pop
fwait
lea
iret
mov
xor
loope
cmc
push
mov
imul
adc
mov
inc
bswap
imul
out
lea
and
jb
mov
les
fldcw
scas
inc
(bad)
dec
cmp
push
neg
or
cs
das
clc
aaa
jmp
lock
lods
addr16
int
test
nop
lods
xchg
jge
xchg
sahf
jo
dec
es
dec
sbb
sub
xor
movs
aaa
cdq
push
fsub
inc
out
das
adc
test
(bad)
and
mov
lock
in
mov
and
and
in
dec
jecxz
retf
inc
sub
jns
jle
or
dec
xor
mov
jecxz
fistp
cld
aad
fcom
cmp
into
pop
hlt
xchg
enter
bound
cmp
in
or
fiadd
lds
xor
adc
pop
and
inc
jl
mov
shl
jl
popa
mov
ja
outs
fstp
pop
xchg
aaa
add
sbb
and
mov
xchg
and
cmps
push
adc
mov
adc
in
ds
mov
fidiv
in
pop
pop
repz
test
fwait
out
dec
add
in
pop
dec
cmp
out
bound
lahf
enter
cmc
nop
in
xor
inc
out
in
lahf
or
push
(bad)
pop
(bad)
or
xchg
cmp
(bad)
dec
mov
dec
(bad)
cmps
retf
arpl
pop
add
shr
sbb
aaa
stos
add
repnz
clc
gs
jge
dec
xchg
jb
push
test
movs
adc
(bad)
inc
mov
sub
loope
cmc
retf
lods
xchg
sti
shl
mov
push
inc
mov
inc
jmp
mov
cdq
and
mov
idiv
adc
sub
dec
mov
push
mov
jge
repnz
jmp
push
jo
xchg
xchg
sahf
xchg
sahf
ror
xchg
ins
ss
adc
ficom
fs
shl
fist
fucom
sar
dec
fstp
jne
imul
sbb
ins
sub
pop
mov
fidivr
cmp
ins
sbb
add
les
push
ja
test
and
lds
fwait
jmp
xchg
jne
bound
jg
lods
xor
ins
sub
aaa
sbb
cmp
arpl
or
mov
cmp
es
xchg
add
aas
retf
iret
aad
xchg
mov
dec
mov
inc
add
push
xchg
add
adc
in
aad
pop
das
in
cmp
fadd
lods
les
push
into
jg
mov
and
cmc
cmps
jp
lds
inc
jg
cld
adc
imul
mov
add
add
mov
icebp
cmp
ins
xchg
cmp
add
push
dec
add
add
test
add
and
idiv
xchg
dec
jae
xchg
mov
jb
sar
pop
fisttp
or
fcomp
pop
neg
sbb
and
sti
shl
outs
push
movs
push
arpl
cdq
xchg
in
loope
add
jo
inc
add
dec
cmp
inc
(bad)
scas
mov
sti
jp
jmp
retf
not
xor
sbb
mov
aas
pop
shl
fsubrp
sub
mov
mov
rcr
sar
retf
in
xlat
popa
push
scas
lahf
dec
shr
repz
add
bound
cmp
les
jg
and
icebp
jne
das
xchg
sbb
mov
mov
inc
out
mov
pushf
sub
and
mov
dec
add
xchg
xor
neg
outs
dec
sar
jbe
outs
dec
mov
inc
outs
pop
repnz
mov
pop
leave
shr
movs
stc
or
jno
cld
push
sbb
mov
cmc
addr16
lods
stos
xchg
iret
clc
in
outs
imul
jl
push
add
int3
pop
enter
xor
jmp
sbb
mov
push
pop
push
pop
test
or
out
inc
xchg
call
mov
fstp
pop
loopne
fcomp
test
enter
xchg
jbe
ins
mov
rcl
xchg
xchg
xchg
sahf
mov
fs
pushf
cs
xor
sbb
or
push
outs
jbe
out
retf
jae
pop
sbb
ret
xchg
cld
aam
mov
imul
lods
push
outs
jmp
iret
add
sbb
outs
sbb
test
lea
aad
punpckhbw
in
enter
adc
call
(bad)
fcom
(bad)
into
mov
fcom
fldenv
push
xor
retf
pusha
inc
xchg
cmp
lea
pop
mov
(bad)
ss
and
sbb
ins
out
retf
push
popf
(bad)
sub
pop
test
std
pop
test
pop
aas
dec
or
int
idiv
inc
fdivr
push
jecxz
sar
jle
out
ficom
loope
jecxz
punpckhdq
sahf
leave
cmp
outs
sub
inc
popa
ret
cmp
sti
(bad)
ins
dec
das
loopne
dec
or
sbb
jbe
xor
das
cmp
ja
add
push
push
fneni(8087
push
and
repz
or
dec
ins
fdiv
call
jmp
je
jb
xchg
cmp
es
and
xchg
aad
lea
jmp
cs
pusha
es
jp
xchg
push
cmp
and
enter
sbb
ret
cdq
out
repz
aas
xor
sbb
loopne
xlat
iret
pop
cld
hlt
fsub
outs
mov
scas
sbb
push
shl
(bad)
test
outs
sub
int3
xchg
frstor
and
addr16
add
test
addr16
jle
jbe
dec
push
dec
or
cmps
push
sbb
sbb
or
push
or
xor
and
adc
mov
sbb
add
fcomp
push
lds
mov
mov
pop
stos
in
xor
push
and
pop
bound
call
mov
xchg
out
or
retf
cmp
lahf
pop
cdq
pop
or
mov
mov
sub
into
jg
rcl
sub
fdivr
shl
xor
ret
cmp
ror
cdq
jb
stos
ret
jmp
aad
(bad)
jecxz
(bad)
ffree
inc
ins
mov
mov
inc
shr
stc
int3
mov
mov
shr
xor
pusha
pop
in
enter
xchg
test
dec
fnstenv
lods
pop
push
cmp
fwait
xor
xor
jnp
jmp
gs
xchg
test
sbb
nop
es
add
lods
cmps
push
push
sub
nop
add
imul
rcr
mov
push
mov
cdq
fstp
out
hlt
retf
xchg
xor
jno
hlt
inc
xchg
xor
mov
cs
add
loope
in
push
sub
jge
and
test
pop
loop
push
loope
stos
enter
fistp
div
adc
retf
(bad)
in
cwde
sub
stos
mov
(bad)
rcr
rcr
ret
or
ror
test
add
push
mov
loopne
dec
mov
xlat
(bad)
sbb
push
scas
xchg
stc
hlt
in
push
sbb
sub
mov
sbb
call
fisub
daa
inc
xor
sub
xchg
ja
fcomi
jno
ss
cmc
mov
nop
data16
iret
shl
mov
les
shl
mov
test
mov
dec
cwde
inc
loope
or
mov
add
out
iret
push
retf
push
and
repz
addr16
push
pop
les
add
fsub
pop
into
leave
push
xchg
mov
sbb
mov
pop
leave
adc
pop
mov
jae
adc
mov
scas
test
repz
mov
push
iret
pop
push
xor
iret
or
jns
xlat
pop
mov
cmp
or
and
sbb
psllw
or
mov
hlt
push
sub
adc
adc
pushf
mov
sub
mov
xchg
push
jb
(bad)
mov
and
arpl
dec
mov
lods
or
rol
test
jno
adc
(bad)
int
pop
jmp
xor
mov
push
repz
scas
jns
shl
scas
cmc
mov
movs
pushf
inc
sbb
sub
es
or
jmp
add
popf
dec
in
test
lods
fcomp
nop
adc
inc
daa
cwde
fist
sar
ss
std
cmp
stos
pop
imul
dec
jl
popf
mov
jecxz
push
inc
mov
repnz
cmp
jmp
sub
in
or
(bad)
fiadd
adc
inc
mov
and
shl
fcomp
cmp
and
add
adc
add
inc
lahf
pop
mov
xchg
leave
pop
fucomp
leave
push
xlat
fsubr
xchg
arpl
das
cmp
fisttp
(bad)
cmps
push
test
sub
push
mov
and
mov
(bad)
pop
adc
push
jl
adc
data16
fadd
xchg
pop
sub
push
retf
mov
mov
pusha
mov
ins
cmp
xchg
bswap
adc
inc
push
add
cmp
outs
jne
add
fild
inc
rcl
push
push
icebp
std
and
push
or
sub
mov
mov
stos
cli
xor
adc
leave
jg
iret
out
add
or
push
push
jnp
int3
repz
sbb
pushf
cmp
adc
add
dec
hlt
int
int3
cmps
cmp
mov
or
leave
sar
mul
fimul
mov
aam
inc
jge
add
sahf
test
and
add
mov
out
fild
xchg
cmp
xor
fdivr
jno
add
ror
aas
jo
pop
sbb
push
fldcw
sar
(bad)
mov
jl
xchg
fstp
and
rcl
push
enter
push
mov
out
and
cs
fcomp
das
sbb
jp
in
into
in
into
fmul
lods
(bad)
jmp
nop
dec
mov
add
outs
cmp
dec
fadd
addr16
aad
push
mov
and
inc
rcl
dec
fsubp
outs
mov
stos
out
jb
pop
mov
icebp
xchg
push
dec
jnp
ja
sbb
cmp
nop
lahf
into
fdivp
push
add
cs
cld
les
test
retf
movs
mov
(bad)
pop
pop
aaa
out
test
dec
fmulp
pop
daa
in
xchg
xchg
call
repnz
xor
jne
mov
retf
and
(bad)
sbb
iret
dec
xor
fmul
mov
mov
xadd
repz
inc
jge
(bad)
push
retf
jne
ss
xchg
mov
or
fsubr
sti
add
rcl
hlt
inc
(bad)
cmp
mov
shl
fistp
pop
xchg
rol
in
aad
retf
fcomp
(bad)
call
mov
add
inc
icebp
addr16
es
sbb
xor
dec
and
ret
mov
cmp
mov
adc
cdq
cli
mov
cmp
and
mov
add
fstp
xor
lahf
das
and
ds
cmp
not
(bad)
mov
aaa
xor
inc
dec
hlt
cmp
sar
rol
fnstenv
xlat
fbstp
pop
dec
cmp
and
dec
xchg
lea
pop
lods
aad
in
out
pop
sub
mov
je
retf
ss
inc
(bad)
test
(bad)
push
pop
ret
mov
xchg
(bad)
cmp
fwait
mov
stc
push
push
outs
in
lea
cmp
jne
or
adc
(bad)
jne
mov
ds
retf
mov
outs
je
shr
jl
inc
inc
aam
mov
call
dec
or
mov
jo
out
fdivr
or
ins
(bad)
fstp
push
add
or
test
pop
sub
add
push
mov
add
pop
xor
out
lahf
mov
add
xlat
xor
or
adc
xlat
pop
mov
pop
pop
js
in
jnp
rcr
mov
add
sbb
mov
sbb
fild
or
jl
pop
scas
push
pop
adc
ret
stos
or
outs
out
push
into
push
add
(bad)
lods
jo
cs
adc
mov
out
lock
pusha
int
scas
jno
push
inc
fdiv
cmp
push
adc
pusha
sub
movs
sar
leave
sbb
or
pop
sub
mov
jnp
call
push
cmp
push
repnz
inc
mov
dec
fs
addr16
and
repnz
ins
ror
or
cmp
retf
lock
add
loop
loop
xchg
cdq
cwde
xor
sbb
push
xor
pop
mov
cmp
fwait
jmp
mov
and
retf
(bad)
pop
inc
push
sub
and
add
add
ror
dec
inc
out
movs
push
xchg
and
adc
jns
inc
sahf
mov
mov
stc
adc
xor
jne
stos
dec
mov
inc
fcmovnbe
jle
repnz
push
inc
les
and
out
aam
pop
imul
jo
movs
(bad)
xor
mov
and
(bad)
sbb
scas
stos
lahf
jae
adc
dec
or
ins
cld
sub
or
aaa
fxam
jo
jp
push
inc
popf
pop
and
mov
aad
xor
cdq
jp
test
pop
fdiv
test
mov
rcr
jle
xor
mov
sahf
pop
add
jnp
push
xor
or
mov
aaa
adc
sbb
mov
inc
cmp
outs
add
jae
push
fs
dec
movs
out
cmp
scas
repnz
jo
cwde
les
adc
pop
cmp
or
ins
stos
ror
mov
xchg
mov
fsubr
daa
test
daa
pop
xor
cdq
sar
or
jno
out
lds
(bad)
in
arpl
sub
(bad)
into
dec
xlat
mov
cmps
inc
stos
mov
repnz
or
xor
sti
and
aaa
outs
dec
lahf
sar
fcomp
jp
pop
dec
loope
fimul
scas
mov
repz
repz
ret
cmp
sub
xchg
in
jae
add
mov
adc
retf
jns
ja
mov
push
dec
fs
mov
xlat
out
lds
popf
sbb
repnz
sti
and
mov
push
or
ret
jle
push
mov
jns
in
int
inc
pop
(bad)
dec
or
(bad)
(bad)
(bad)
xchg
test
outs
or
or
aam
(bad)
(bad)
cdq
arpl
shl
jo
iret
push
adc
mov
xchg
dec
icebp
stos
xlat
and
push
movs
push
xchg
aam
test
push
xchg
(bad)
int3
(bad)
jmp
sub
sbb
adc
cmps
rcr
or
dec
aaa
jg
mov
jp
inc
pop
repnz
in
aas
pop
or
in
push
push
jmp
xchg
scas
xcrypt-ctr
cmps
pushf
add
nop
push
push
js
jle
aam
das
xor
mov
adc
mov
cmp
out
sub
xchg
mov
cli
ror
mov
jle
ret
js
dec
into
cs
retf
enter
xor
xor
cmp
mov
sub
and
mov
sub
cmp
sti
rcr
call
mov
push
sub
test
fsubr
pop
mov
jge
mov
push
mov
ror
sub
popf
jmp
add
adc
xchg
or
(bad)
push
fdiv
fnstsw
lods
mov
iret
lods
add
ss
icebp
pop
clc
mov
sti
add
in
push
outs
or
les
stc
add
in
sbb
ss
cmp
gs
out
ficom
mov
js
sbb
pop
push
push
or
fst
sub
push
ins
out
fadd
or
retf
out
xchg
std
ds
jo
cdq
jnp
pop
fisubr
imul
mov
inc
shl
in
push
scas
test
jg
jmp
cwde
cld
xchg
aas
mov
push
or
in
pushf
shl
imul
xchg
sub
mov
call
xor
push
loope
push
aas
div
push
or
adc
mov
ror
xchg
fnsave
and
adc
mov
mov
out
sub
push
pop
int3
inc
and
fld
stos
push
(bad)
(bad)
jmp
out
clc
inc
aam
xlat
cmp
lea
or
lods
mov
dec
imul
pop
aam
daa
fadd
popf
adc
pop
test
sbb
arpl
xchg
sbb
leave
cmp
dec
bound
leave
retf
into
lea
sbb
xchg
push
(bad)
shl
inc
add
mov
out
pop
push
cmp
dec
mov
idiv
jg
sbb
xchg
sbb
fisttp
loopne
push
sbb
adc
aad
test
mov
xchg
lock
aam
lea
cmovs
lock
adc
cmp
pop
jae
or
ss
pop
xchg
std
xchg
xchg
sbb
ror
adc
xor
and
mov
xchg
imul
adc
fdivr
push
dec
pushf
dec
sub
sbb
sahf
in
sahf
lahf
jp
mov
fidivr
pop
jno
bound
mov
push
(bad)
push
(bad)
not
mov
les
(bad)
retf
out
xchg
push
jns
aas
push
lods
xor
lea
mov
sub
dec
mov
push
jnp
mov
jle
retf
ret
aam
leave
inc
mov
xor
or
mov
sbb
xor
stc
mov
out
dec
push
pop
pop
adc
sub
aad
adc
outs
xchg
mov
cdq
pop
and
xchg
pop
push
into
mov
mov
mov
pop
repnz
lahf
(bad)
movs
fstp
ret
mov
ret
jae
test
cli
push
int3
jbe
mov
dec
mov
push
mov
out
in
and
lods
lds
ret
cmp
and
imul
push
and
cdq
lss
jmp
pop
sub
leave
cmp
icebp
pop
arpl
ins
inc
fmul
(bad)
inc
cmp
xor
ds
ja
popf
rcr
fimul
mov
sbb
mov
stos
mov
stc
mov
fwait
cmc
cli
into
adc
pop
or
pop
loop
test
adc
leave
push
jmp
push
enter
loope
push
pushf
shl
rol
mov
mov
mov
lock
cmp
or
add
add
sar
data16
push
pusha
movs
sbb
jmp
imul
or
ins
ret
mov
and
and
mov
(bad)
xor
sbb
and
and
push
mov
dec
mov
and
jnp
int3
xor
in
or
repz
mov
push
je
retf
adc
sub
pop
push
cmps
jmp
pop
add
nop
ret
sub
pop
addr16
pop
adc
jns
fadd
std
xlat
or
mov
sbb
xor
ds
es
stos
add
jne
aas
cs
imul
cmp
in
jmp
test
mov
sti
sbb
push
or
mov
ud2
scas
mov
and
in
lods
test
hlt
(bad)
mov
add
and
sub
jb
pop
xchg
mov
cmp
gs
jne
aaa
inc
mov
mov
mov
dec
xor
cwde
test
test
jnp
enter
leave
outs
out
fdiv
adc
fsubr
push
jp
xor
clc
outs
dec
(bad)
xchg
cmp
div
imul
adc
mov
popa
push
lock
xor
xchg
arpl
xchg
xor
sub
iret
lock
dec
ds
mov
pushf
aas
jl
ret
mov
pop
daa
bound
jmp
std
xor
fdivr
rcl
fdivr
shl
or
xor
sub
inc
jmp
lods
int3
(bad)
pop
mov
push
xchg
and
jp
xchg
mov
push
out
cwde
jg
dec
and
fimul
dec
or
jb
arpl
inc
aas
test
vcvtsd2ss
mov
inc
clc
out
push
pop
arpl
ins
movs
push
and
add
fcmovne
aam
cld
pop
movs
xor
popa
call
mov
inc
mov
icebp
pop
add
mov
jae
jae
lods
add
fstp
inc
rcr
xchg
add
xor
pop
mov
and
or
fimul
(bad)
ret
ficomp
xchg
repnz
cmp
sar
nop
xchg
stos
pop
and
cmc
mov
shl
ror
in
leave
(bad)
js
leave
outs
xor
lds
sub
pop
pop
fdivr
xor
mov
mov
ss
or
cmp
adc
mov
out
(bad)
pop
fstp
dec
pop
out
xor
push
dec
rcr
fidivr
jg
xor
retf
xchg
or
dec
mov
outs
xchg
or
mov
mov
das
cmp
pop
call
pop
adc
enter
adc
and
mov
mov
jno
mov
sahf
stos
xchg
adc
mov
stc
cmps
(bad)
ss
cwde
jmp
cdq
aaa
shl
sub
sahf
stc
mov
and
sub
pop
mov
pop
push
enter
in
(bad)
xchg
add
and
das
jl
inc
inc
pushf
scas
xor
push
sub
aaa
cwde
cmps
push
mov
push
dec
cmc
mov
retf
ins
mov
mov
cs
test
out
pushf
jmp
ds
lahf
xor
inc
movs
nop
pop
jp
inc
imul
ror
adc
jbe
xchg
fs
(bad)
jno
xor
lods
aaa
(bad)
lock
pop
add
cmp
lahf
fwait
and
mov
sub
data16
jae
push
(bad)
popf
or
jns
sbb
sahf
fsubp
(bad)
jle
cmps
cmp
sub
mov
xchg
and
add
nop
out
aaa
jg
and
inc
adc
in
mov
sahf
fwait
pop
mov
push
scas
xchg
shl
fwait
aad
inc
sbb
sbb
add
jle
in
and
fstp
stc
xlat
scas
je
push
inc
dec
imul
mov
scas
adc
sbb
int3
inc
test
cmc
mov
push
js
push
iret
aas
test
cmp
cmp
imul
pushf
retf
outs
xor
and
sbb
mov
call
jae
mov
imul
xor
test
cmp
shl
mov
loope
or
sbb
jp
sub
add
sub
inc
sbb
xor
pushf
mov
push
fist
sbb
int
out
ds
mov
sub
fdivr
mov
dec
add
adc
fldenv
stos
pushf
dec
dec
mov
mov
and
adc
inc
mov
inc
cmps
jecxz
xchg
mov
fist
je
xlat
xor
add
jne
out
jg
cmp
and
xchg
aaa
dec
inc
sar
inc
mov
icebp
xor
lods
dec
fsub
test
scas
popf
or
mov
mov
fdivr
mov
and
ja
popf
adc
repz
cmc
mov
adc
xchg
and
in
dec
cmp
into
in
sub
mov
aas
mov
jno
leave
mov
int3
pop
lahf
rol
xor
pop
stc
push
dec
fldcw
push
xchg
mov
add
jp
retf
aas
imul
stos
push
dec
and
inc
neg
std
movs
test
fisubr
sub
adc
jnp
(bad)
arpl
sti
out
push
sub
jge
xor
neg
bound
scas
cmp
das
pop
push
xchg
inc
cdq
push
nop
jb
xadd
inc
and
cli
add
xor
outs
fsubrp
std
(bad)
push
add
mov
into
jmp
mov
jne
mov
mov
movs
aas
ja
pop
push
pop
jecxz
cmps
sub
ret
push
test
int
es
cmc
out
push
mov
sub
push
xchg
imul
std
add
xor
lods
sbb
add
(bad)
(bad)
jmp
pop
jmp
jl
jne
inc
das
inc
sahf
sbb
pop
ins
sar
push
cld
cmp
retf
es
push
sbb
xor
or
push
mov
das
inc
lods
and
scas
push
neg
int3
scas
cmc
inc
out
data16
fwait
xor
xor
push
bound
mov
movs
js
adc
cdq
push
push
jl
aam
lahf
(bad)
jmp
outs
add
inc
cmp
push
lds
test
std
sahf
pop
adc
repnz
jmp
push
and
and
dec
repnz
sub
xor
cmp
jmp
test
xor
cmp
(bad)
xchg
cmp
add
loop
cmc
sub
(bad)
jns
push
je
and
retf
repnz
inc
push
mov
ja
push
jle
xchg
jbe
fstp
stos
pop
mov
dec
das
pop
or
mov
push
lds
mov
lods
shr
ss
(bad)
sti
and
push
movs
pusha
imul
inc
sti
jns
xor
mov
adc
int
push
nop
scas
loope
outs
jmp
adc
sbb
xchg
(bad)
pop
xchg
shl
cdq
push
and
(bad)
ins
pop
ja
pop
or
mov
sbb
push
pushf
push
sub
or
inc
sub
xchg
inc
xchg
out
dec
(bad)
rol
lock
aaa
lock
shl
pop
adc
mov
in
mov
push
xor
cmp
hlt
xchg
dec
dec
or
and
mov
xlat
es
mov
in
mov
dec
mov
jo
push
jno
pop
mov
pop
and
mov
ds
stc
jecxz
mov
xlat
cwde
mov
adc
push
lea
xor
cdq
xchg
outs
retf
movs
dec
and
add
bound
aas
into
scas
movs
or
jae
(bad)
hlt
jmp
sahf
pop
push
and
push
test
frstor
pop
scas
call
or
(bad)
aad
mov
cmp
push
iret
ret
je
enter
pop
add
in
daa
cmp
inc
in
(bad)
test
(bad)
jge
push
in
add
cmps
inc
sub
pmovmskb
mov
lods
add
data16
push
aas
jecxz
xchg
std
test
dec
dec
mov
lods
jne
sti
das
std
pushf
iret
xchg
adc
pop
add
pop
sbb
inc
adc
dec
ins
push
sbb
ret
mov
dec
out
fisttp
adc
and
es
jle
sbb
or
mov
sbb
xchg
inc
adc
inc
mov
hlt
rcr
add
loop
xchg
das
scas
test
or
adc
xchg
xchg
sub
cli
nop
pusha
jp
sub
dec
dec
jne
(bad)
mov
cmps
jae
cwde
push
add
mov
clc
add
lock
xchg
add
cmp
add
and
lahf
ds
mov
mov
pop
push
mov
test
mov
jmp
cmp
imul
cwde
rol
std
adc
dec
adc
and
in
and
adc
ret
push
out
mov
jns
std
jno
or
xchg
mov
call
mov
fadd
mov
ror
push
in
mov
cmps
movs
jp
push
inc
jecxz
mov
jae
aas
mov
dec
mov
nop
or
pop
sub
adc
retf
gs
sub
out
mov
arpl
xlat
stc
retf
or
and
xor
pop
xchg
outs
dec
pop
adc
dec
mov
or
mov
push
(bad)
inc
push
push
inc
and
xor
mov
ins
add
push
out
and
add
stos
aas
xor
cld
clc
mov
call
daa
ds
mov
lock
cmps
(bad)
repnz
jmp
cmp
js
repnz
xor
in
mov
fcmovu
aas
call
mov
and
jno
xor
mov
repz
xchg
fidivr
and
adc
cmp
addr16
mov
or
push
or
loopne
add
push
cdq
pop
push
pop
icebp
push
xlat
arpl
sbb
mov
inc
cmp
ja
(bad)
retf
add
bound
dec
sub
mov
xor
add
dec
add
inc
lea
call
push
push
push
mov
xchg
and
xchg
gs
cs
scas
test
jo
mov
retf
call
add
dec
loop
xor
loop
stos
test
jg
sub
(bad)
es
sub
push
cmps
in
mov
xor
jnp
mov
rcr
dec
inc
push
or
adc
sub
and
lods
mov
push
xor
add
add
jecxz
sub
popf
pop
cli
push
call
mov
lock
mov
(bad)
and
add
cmp
pushf
ja
pushf
fwait
(bad)
int3
(bad)
sbb
mov
mov
xlat
retf
jecxz
fcom
jo
sub
push
je
or
sbb
jb
ror
(bad)
sub
adc
call
imul
mov
sub
xchg
mov
(bad)
enter
test
inc
xor
dec
movs
xchg
in
sub
aam
or
sahf
push
jmp
cmp
fsub
cmp
outs
call
cwde
cli
shl
xchg
sbb
add
je
jecxz
loop
aas
cmp
aam
adc
pop
sbb
sub
jl
cmp
dec
jecxz
sti
jg
sub
jmp
iret
fisttp
sub
mov
jl
cmp
mov
sbb
mov
add
xchg
or
mov
mov
cmp
sti
mov
jp
mov
push
sbb
fidiv
dec
cmp
push
mov
rcr
cmp
jo
jo
inc
pop
xchg
push
push
test
jno
aam
and
imul
arpl
sub
mov
push
hlt
sub
push
fst
out
lods
cmp
jne
sub
and
jmp
sub
std
retf
mov
arpl
lea
and
jbe
in
jno
xor
dec
fsubrp
call
jns
and
and
fdivr
retf
jecxz
add
gs
(bad)
push
adc
shl
retf
jmp
jae
int
adc
fadd
pop
sbb
fild
outs
inc
(bad)
jnp
xor
mov
retf
fldenv
int3
jp
and
ins
and
js
call
mov
adc
mov
xchg
pop
movs
nop
int3
rol
push
aam
mov
pop
xchg
pop
push
fstp
and
and
push
mov
pop
out
imul
(bad)
fcom
in
mov
(bad)
mov
in
xchg
sub
addr16
lock
(bad)
xchg
push
xchg
jge
xor
scas
jge
in
pop
inc
mov
stc
xor
push
xlat
les
mov
push
in
adc
jb
fidivr
in
xchg
xchg
push
mov
call
(bad)
ins
(bad)
in
jge
jmp
repz
adc
dec
push
or
inc
inc
mov
mov
jnp
mov
and
mov
inc
rol
dec
outs
adc
inc
into
out
dec
inc
jecxz
inc
fwait
dec
mov
inc
ja
mov
cdq
xchg
(bad)
stc
out
loopne
(bad)
or
fwait
dec
inc
data16
ret
lahf
call
repnz
ds
fist
int3
and
push
test
inc
in
retf
xchg
popf
mov
retf
nop
xchg
shr
cli
cdq
fistp
int
pop
fild
mov
cld
loope
out
repz
mov
ins
or
jge
outs
and
cli
test
push
movs
shl
push
rcl
popf
lock
lock
push
push
xor
push
push
mov
(bad)
div
dec
dec
mov
repnz
jge
in
gs
pop
xchg
aaa
int
mov
ret
sub
xchg
inc
xchg
dec
push
or
js
dec
dec
xchg
loope
adc
test
and
rol
cmps
inc
and
adc
pop
aam
adc
dec
data16
mov
mov
mov
add
ret
movs
jmp
adc
adc
out
or
std
test
aad
xor
or
mov
loop
ret
test
mov
(bad)
arpl
pushf
and
inc
cmp
mov
cmc
into
loope
mov
or
mov
cmp
pop
pop
dec
(bad)
repnz
cmps
dec
cli
adc
out
cld
mov
sub
lds
shl
call
frstor
aas
loop
jb
scas
and
xor
repz
inc
xchg
ds
pop
and
push
repnz
mov
dec
inc
pop
mov
adc
cld
or
cmps
xor
loopne
jmp
push
test
jno
scas
or
xchg
cmp
or
ficom
(bad)
sbb
pop
je
push
and
jns
int3
ror
not
sub
pusha
mov
ficomp
sbb
pushf
cmp
adc
mov
and
jo
outs
in
jo
imul
test
out
pusha
les
(bad)
lock
jge
add
cli
(bad)
jb
rol
mov
jmp
popf
fidivr
in
into
mov
enter
std
pushf
and
xor
imul
mov
or
test
retf
jne
loopne
retf
hlt
rcr
(bad)
(bad)
jne
sub
mov
shl
out
pusha
jo
add
or
shl
jne
mov
mov
mov
mov
or
je
jns
add
xor
or
xor
jne
and
mov
enter
dec
xlat
pushf
and
jp
jl
mov
ins
jmp
jle
xchg
adc
out
push
fsub
imul
arpl
xor
sub
inc
not
ins
inc
cld
and
in
or
jle
sbb
(bad)
loopne
cld
jge
xor
(bad)
dec
add
fadd
pop
or
adc
gs
mov
cmp
push
cwde
jg
xlat
stos
mov
popa
sub
popf
lods
stc
or
mov
inc
ret
add
cli
enter
dec
and
leave
inc
or
jnp
pop
push
stos
xor
inc
fs
loopne
pusha
cmp
push
xor
push
sbb
daa
setge
or
mov
dec
sbb
or
retf
jge
cmps
ss
dec
sar
rcl
ror
jge
popf
ins
add
popf
loopne
xchg
and
jmp
pop
scas
jmp
lods
or
int3
dec
jo
xchg
sub
xchg
hlt
int
jbe
cli
pusha
in
fimul
gs
stc
inc
imul
shr
adc
sahf
enter
ss
ins
fcomp
mov
or
cmp
dec
ret
in
and
loope
jno
mov
jmp
test
mov
mov
add
fmul
jae
mov
scas
mov
sbb
adc
(bad)
shl
(bad)
leave
pop
sbb
xchg
jle
aad
mov
mov
jnp
pop
imul
push
nop
std
mov
or
fadd
pop
cwde
push
(bad)
bound
cmp
pop
xchg
cld
jg
jl
test
push
mov
retf
push
pop
scas
jno
out
xlat
adc
adc
movs
fwait
xchg
xchg
popa
adc
ja
jg
imul
iret
mov
cli
popf
push
or
sar
sti
push
lds
fnstenv
mov
jo
rcr
das
(bad)
in
inc
ja
inc
jp
jp
mov
lea
and
inc
je
popf
mov
cli
mul
mov
xchg
jp
(bad)
lock
xchg
pop
gs
push
and
cli
jb
int3
repnz
sub
push
inc
cmp
rcr
mov
ss
mov
add
outs
adc
aam
(bad)
pop
loop
pop
movs
lock
retf
les
pop
sar
mov
xchg
add
cwde
pop
out
lds
(bad)
bound
mov
push
popf
scas
dec
mov
int
dec
jmp
dec
cmp
mov
mov
sub
cmps
popa
cmps
popf
push
fs
add
xchg
stc
jecxz
scas
inc
jne
jg
inc
into
test
shr
jecxz
push
(bad)
mov
js
push
pop
jne
retf
fdiv
mov
addr16
and
popf
es
fdiv
sub
daa
pop
test
xchg
xor
jo
cmp
add
jge
loope
das
or
mov
test
cld
ror
mov
test
dec
push
jecxz
inc
cld
dec
inc
sti
aam
aam
mov
xchg
popa
outs
and
fbstp
sbb
push
loopne
adc
sbb
push
out
aaa
adc
push
cmp
pop
lea
pushf
mov
icebp
or
faddp
mov
aas
xchg
loop
cmp
pop
scas
in
jae
lock
aaa
neg
xchg
outs
sub
es
jmp
push
or
cld
and
cmp
pop
outs
scas
mov
sbb
lods
adc
push
fisttp
js
shl
icebp
dec
pop
js
mov
cmp
mov
je
or
mov
jno
xor
cmps
loope
mov
out
jge
xor
jge
dec
pop
jp
loope
sbb
outs
cmp
adc
jb
xchg
cmp
aaa
mov
xchg
add
add
and
and
(bad)
jecxz
sbb
pop
push
mov
or
push
(bad)
add
mov
jmp
mov
adc
fst
jmp
mov
cmove
popa
stos
pop
gs
into
scas
mov
jns
push
data16
xor
imul
xchg
mov
push
mov
or
xlat
mov
mov
mov
cmps
pop
xor
sub
cmp
xchg
fwait
push
xacquire
inc
xor
jp
jp
pop
add
mov
pop
xor
inc
push
ja
shr
mov
sbb
jne
jge
retf
jb
cmps
xchg
jno
push
jno
sub
sti
jo
mov
add
sahf
cli
pop
push
out
mov
in
xchg
cmp
ficomp
push
scas
test
xchg
jp
push
dec
push
jmp
xor
retf
inc
outs
inc
adc
add
mov
packsswb
push
mov
xchg
mov
stc
pop
xchg
or
push
je
pop
imul
push
sub
aaa
adc
jmp
mov
lds
lods
iret
inc
sbb
div
add
mov
inc
sbb
push
mov
fs
addr16
and
sbb
xor
mov
int
push
cld
cmp
cs
gs
push
dec
daa
sahf
pop
add
sub
dec
jmp
dec
scas
jbe
ins
mov
xchg
outs
dec
mov
add
cmp
ins
ret
movs
mov
cmp
xchg
jl
pop
ins
jmp
pop
push
mov
inc
stos
nop
and
dec
ja
cmp
sti
loopne
iret
jecxz
out
int3
imul
lods
push
push
jno
pop
outs
loop
iret
test
dec
push
jno
sbb
js
push
adc
outs
add
data16
pop
push
ins
cmps
sar
aaa
xchg
dec
jle
sub
cmc
aas
inc
(bad)
out
in
mov
cld
lea
inc
hlt
shr
enter
stos
add
dec
loopne
sub
fistp
nop
cdq
jae
loopne
in
sbb
sahf
ds
or
int3
jno
xchg
int3
mov
mov
mov
ja
gs
fsubr
mov
call
pop
pop
sbb
call
add
dec
test
std
sub
jmp
sbb
cmp
ja
and
das
ja
add
test
mov
pop
ror
popf
push
rcl
test
mov
lods
sbb
adc
push
icebp
push
fist
mov
push
mov
fwait
sbb
cld
add
xor
sub
gs
push
dec
jg
xchg
jne
mov
ror
cmp
lahf
call
mov
mov
push
jbe
shl
sbb
in
and
jecxz
ins
pop
retf
mov
cwde
pop
jg
push
sbb
sbb
dec
es
aaa
inc
loop
jp
and
les
imul
aaa
movs
push
xchg
ins
add
push
sbb
fadd
mov
loop
sbb
and
and
sub
push
and
or
fadd
xor
cwde
inc
ret
cmp
push
mov
pop
adc
fwait
mov
adc
neg
out
push
sbb
pop
stc
pop
inc
cmp
ret
(bad)
clc
test
in
mov
call
jle
sbb
lea
dec
or
out
pusha
ja
lods
mov
in
dec
cli
arpl
xchg
xchg
pop
and
xchg
jmp
mov
cmp
inc
retf
scas
lahf
ins
jmp
iret
mov
(bad)
jmp
jmp
mov
inc
xor
mov
mov
pop
iret
dec
sub
sbb
push
sahf
je
mov
jge
enter
cmp
xor
push
sub
cmp
sbb
pop
add
cli
fsub
add
jecxz
inc
jecxz
xor
push
add
js
gs
cmovns
cmp
clc
mul
mov
xor
mov
outs
call
sub
sahf
idiv
mov
repnz
add
cwde
dec
cmp
into
xchg
sbb
ret
jle
mov
outs
mov
sub
data16
loope
and
test
jns
mov
inc
aas
jg
cmp
scas
iret
rol
add
ins
adc
push
in
and
xchg
imul
test
jo
in
mov
and
pop
cmc
repnz
add
ds
stc
enter
or
xchg
movs
cmc
pop
jg
retf
loopne
fxch
loop
push
sub
mov
div
out
add
pop
cmps
sbb
push
jge
mov
and
jg
cmp
out
jmp
push
ret
sbb
sahf
mov
mov
sysenter
pop
add
mov
mov
inc
or
add
repz
test
mov
jno
ja
cmovno
push
fld
nop
mov
inc
in
push
rep
div
add
and
stos
xor
mov
icebp
leave
xchg
cdq
and
test
out
and
cld
mov
adc
mov
xchg
je
pop
call
mov
les
stos
leave
push
mov
cmp
les
sar
outs
outs
jl
fwait
jmp
fwait
xor
stos
sbb
adc
push
mov
loopne
pop
mov
lock
lods
xchg
sub
push
loope
movs
sub
fs
movs
and
pop
movs
mov
or
rcr
dec
jle
test
bound
dec
lahf
repz
mov
test
dec
jmp
clc
fsubr
jb
and
fs
bound
xchg
xor
fidivr
sbb
xchg
fstp
dec
fsub
add
fist
cmp
aam
pop
mov
dec
pop
test
or
mov
popf
pop
inc
mov
mov
ja
lock
mov
out
(bad)
fs
ss
(bad)
data16
sub
push
addr16
shl
lods
xchg
sbb
jbe
jp
mov
mov
nop
lods
push
cld
jle
inc
in
mov
or
outs
xchg
iret
out
pop
cwde
dec
ret
scas
mov
sti
push
aaa
add
ss
(bad)
jl
(bad)
shl
test
pop
xor
or
and
pusha
addr16
cmp
rcl
mov
fild
xchg
and
jge
adc
test
retf
cdq
pusha
(bad)
inc
xchg
jne
jns
mov
lods
inc
xor
test
adc
idiv
hlt
gs
movs
or
dec
or
repnz
pushf
(bad)
xchg
xchg
inc
out
mul
loope
sbb
pop
adc
das
push
icebp
sub
adc
push
jne
stos
sub
mov
cmp
daa
sbb
push
add
cld
popf
dec
pop
icebp
cmp
mov
mov
aaa
stc
repz
lock
mov
outs
pop
mov
es
mov
push
movs
pop
cmps
repz
xchg
jbe
sub
and
or
ja
cmp
mov
ficomp
rcl
mov
add
mov
sbb
scas
test
repz
sbb
arpl
cmp
mov
cmp
add
add
sbb
sub
sbb
shl
add
addr16
mov
ret
sub
pushf
push
fild
data16
adc
push
test
pop
ja
adc
inc
imul
std
rcr
pop
mov
mov
(bad)
call
xor
sti
rcr
popa
push
sbb
adc
scas
pop
sub
mov
push
fnstcw
jecxz
pop
daa
cmp
shl
cmc
mov
or
(bad)
movs
adc
adc
cmps
xchg
xor
ja
outs
jne
inc
cmp
adc
xor
fisubr
sbb
cdq
aad
mov
mov
fucomip
lods
pusha
mov
jno
in
inc
push
push
rol
adc
mov
cdq
push
aas
push
sbb
in
pusha
ret
xor
push
dec
mov
fdiv
jl
call
jl
xlat
lods
jno
loop
jmp
lock
fnstenv
cmp
push
sahf
and
test
push
ins
mov
ret
push
in
and
jnp
(bad)
aad
inc
sahf
hlt
mov
shl
loope
adc
sbb
ds
(bad)
ds
xchg
out
leave
cmps
cmp
ins
loop
xchg
and
addr16
pop
xchg
cmp
pusha
or
ss
dec
das
jae
ss
ins
ficomp
movs
dec
push
out
ins
or
aam
xchg
gs
add
shl
jae
lahf
or
mov
addr16
nop
dec
xchg
pop
push
mov
shr
add
jg
stos
std
scas
sahf
repz
ds
cmp
popf
sahf
push
pop
test
inc
xor
and
jne
push
xor
stc
ror
aaa
sbb
es
cld
das
jns
xor
sbb
jg
xchg
push
adc
and
lea
mov
mov
cmps
or
popa
fdivr
nop
pop
iret
mov
daa
cmp
lahf
jnp
push
retf
xchg
ins
mov
pop
cmp
imul
(bad)
(bad)
jge
jo
call
or
xor
cmp
jg
xor
repz
xor
div
aam
push
xor
repz
out
pop
push
sub
aam
fdiv
inc
(bad)
adc
mul
mov
jmp
cwde
mov
mov
pop
int3
addr16
int3
ror
sbb
fcmove
add
add
dec
xor
sbb
xlat
cdq
add
inc
jne
inc
aas
mov
test
push
out
ror
and
outs
stc
(bad)
pop
xor
test
push
out
mov
jnp
call
out
fwait
jo
jne
mov
add
daa
fistp
loopne
lock
clc
mov
mov
into
das
leave
sbb
xor
cmp
or
mov
leave
loop
push
sbb
cmps
ss
loopne
push
mov
mov
stos
mov
sub
test
mov
iret
cdq
sub
or
pop
xor
or
inc
lods
or
or
mov
(bad)
ja
stc
pop
or
mov
pop
in
xor
jae
cmp
retf
adc
add
stos
add
nop
jbe
out
adc
add
(bad)
(bad)
ins
lahf
test
rol
int3
push
jmp
jb
scas
das
dec
mov
rcl
mov
and
inc
inc
test
push
popf
ret
out
sbb
sub
add
(bad)
jae
arpl
out
jmp
imul
icebp
das
and
int3
addr16
daa
dec
mov
int
iret
and
ins
add
dec
fwait
test
push
push
jge
call
repz
retf
add
or
push
out
cmp
fmul
cmp
in
cwde
lds
sub
repz
xor
mov
jnp
iret
shl
push
mov
js
mov
push
mov
lock
mov
test
inc
retf
xor
call
xchg
stos
mov
inc
pushf
xlat
jle
or
mov
popa
test
out
or
mov
dec
pop
or
cmps
les
ret
iret
pop
retf
and
retf
imul
cmps
mov
jp
mov
mov
and
xchg
arpl
scas
sub
push
cdq
pop
int
sub
inc
mov
add
xlat
xor
push
mov
(bad)
or
mov
adc
add
mov
or
mov
mov
repnz
pop
shl
popf
sahf
leave
fisttp
mov
mov
or
xor
in
int3
inc
icebp
xchg
cmps
sub
mov
jmp
pushf
ret
mov
add
std
xor
fwait
mov
fisttp
out
dec
aas
shr
outs
mov
jmp
and
in
das
cmp
jmp
int3
ins
lahf
or
adc
inc
xor
lods
mov
mov
(bad)
mov
scas
stc
adc
sbb
imul
mov
arpl
adc
xchg
mov
or
(bad)
dec
inc
xchg
sbb
push
mov
std
sub
lods
into
cmp
sub
sub
xchg
dec
loop
out
jmp
inc
mov
sbb
mov
mov
dec
jno
adc
push
retf
outs
call
mov
pop
ds
jp
xor
mov
jno
icebp
jmp
cmps
fscale
jns
dec
mov
pop
ret
mov
scas
sbb
add
test
out
lods
repz
cmp
lds
xor
(bad)
(bad)
cmp
fwait
imul
inc
sub
jo
das
and
and
aas
lock
mov
loope
xor
or
(bad)
xor
sbb
in
and
xor
ret
aas
popf
mov
(bad)
xchg
pop
sbb
movs
mov
add
pop
clc
dec
xchg
rcl
jnp
sub
add
inc
cli
mov
fcom
jnp
inc
fild
add
push
sbb
mov
jno
sbb
scas
imul
(bad)
adc
sbb
cmovg
or
lods
mov
cld
jmp
jnp
push
push
sub
adc
mov
sbb
jns
and
(bad)
and
push
mov
fild
data16
and
push
mov
ret
cmp
fucompp
dec
ins
cmp
jo
dec
pusha
ficom
ds
fs
shr
pop
jle
div
xor
out
bound
(bad)
aas
pop
addr16
hlt
loop
or
call
jle
enter
push
into
xor
fistp
shl
push
lds
adc
inc
sub
mov
adc
xchg
mov
in
mov
jmp
mov
adc
or
push
adc
jg
jp
push
(bad)
das
shl
adc
push
sub
mov
jmp
out
fstp
sahf
inc
cmps
aaa
pop
mov
cmp
xchg
aam
sub
xchg
das
arpl
mov
sub
je
(bad)
je
adc
mov
push
fisttp
dec
jnp
shl
inc
fwait
ss
pop
das
inc
dec
mov
xor
(bad)
fist
sub
fidiv
lea
repz
xchg
dec
sbb
mov
adc
pop
call
int3
and
in
fisttp
pop
sar
mov
mov
sub
pop
(bad)
fist
add
push
jne
sbb
inc
clc
mov
or
stc
shl
or
mov
push
jns
pop
mov
mov
mov
fnstsw
pop
pop
cmp
push
fisubr
mov
jae
lahf
jno
xchg
sub
dec
mov
cdq
jnp
cmc
div
(bad)
mov
ror
mov
mov
ins
inc
mov
in
dec
adc
cmp
mov
rcl
xor
jno
aam
(bad)
fadd
cmp
lods
stc
(bad)
fsubr
rcr
xor
int
jecxz
and
gs
div
int
adc
repz
jl
adc
push
sub
or
loope
mov
clc
ins
dec
shr
mov
xchg
jbe
and
add
(bad)
outs
push
lock
dec
sbb
xor
pushf
xchg
bound
loope
mov
stos
fild
cmp
adc
rcl
inc
add
mov
(bad)
out
sub
adc
mov
mov
or
xor
repz
dec
or
push
(bad)
rdpmc
test
call
push
scas
sub
arpl
inc
shr
je
push
out
mov
pop
(bad)
fidivr
dec
loope
outs
jo
jl
sub
sar
or
retf
(bad)
dec
cli
cmps
shl
inc
mov
std
mov
sbb
stc
ins
imul
ds
push
dec
(bad)
aad
mov
outs
mov
inc
jmp
xor
xor
in
mov
add
gs
dec
xor
fadd
or
imul
push
mov
dec
push
push
jo
mov
pop
sub
lods
daa
mov
aam
mov
and
fwait
sbb
repz
jp
jmp
xchg
mov
sbb
aam
adc
adc
jno
or
xchg
mov
mov
dec
nop
int
cmp
inc
bound
pusha
pushf
fwait
mov
mov
mov
jmp
ficomp
pop
es
arpl
fwait
les
mov
enter
jmp
push
stos
js
cmc
movs
bnd
and
mov
xor
ror
push
out
leave
sub
pop
jp
adc
mov
sub
call
pop
dec
push
movzx
push
or
test
test
ret
scas
repz
hlt
cmp
scas
jp
mov
leave
hlt
sbb
cmps
out
sub
icebp
aad
repnz
jnp
aas
adc
inc
retf
pop
mov
dec
cmps
mov
inc
sbb
sub
sar
sbb
cli
xor
shl
fiadd
inc
jmp
cmps
loop
fadd
mov
fcmovbe
cmps
mov
outs
fwait
and
(bad)
mov
and
sub
pop
out
mov
movs
fnstenv
jp
mov
cld
fcmovnbe
sahf
push
(bad)
dec
and
pop
aas
je
scas
loope
mov
cmc
inc
mov
repnz
add
pop
psrad
add
xchg
js
sbb
cwde
enter
and
add
dec
xor
call
xchg
pop
pop
loope
cmc
repnz
sub
lods
sbb
leave
test
cwde
ins
cs
sbb
add
sub
repnz
int3
(bad)
sub
shl
les
sub
push
or
inc
inc
dec
outs
jns
add
mov
xchg
and
or
adc
jmp
cwde
cli
stos
pop
retf
inc
movs
xor
jno
fmul
jae
aam
call
push
(bad)
in
xor
ret
add
outs
popf
sub
aad
(bad)
dec
int
fist
fdivr
mov
fcmovne
sbb
imul
lds
xchg
inc
rol
iret
stos
pushf
jg
add
cmc
pop
sbb
aas
int3
test
not
cmp
(bad)
jmp
outs
or
or
jne
xor
xlat
push
push
mov
sbb
dec
cwde
xchg
ins
ret
cmp
cmps
int
repz
dec
mov
push
mov
out
cmp
in
fcom
(bad)
cmp
rcl
xchg
jne
mov
ror
fisttp
cmp
popa
xor
xor
pop
dec
jmp
lea
jle
adc
std
addr16
inc
sub
cmp
int
lods
dec
cmp
cld
ds
mov
loope
inc
ror
sub
int
xchg
adc
shr
sub
in
fs
sbb
cmp
shr
pop
shl
cdq
mov
(bad)
mov
inc
cmp
xchg
inc
movs
mov
push
xor
dec
xlat
(bad)
ss
cmps
xchg
retf
push
pop
cmps
iret
out
mov
pop
push
(bad)
xor
jae
pop
inc
cmc
in
add
mov
daa
rcl
fild
add
js
retf
js
sbb
pop
ret
push
xor
inc
inc
jmp
inc
and
data16
inc
sub
and
adc
inc
jge
xor
mov
ins
sbb
lahf
and
mov
out
xchg
jbe
bound
adc
add
push
xchg
pop
rol
leave
xchg
shl
in
jmp
cmp
add
cld
fxam
sbb
daa
push
shr
jnp
sbb
js
inc
mov
stos
mov
outs
ja
add
or
retf
lods
sub
jle
mov
dec
data16
retf
add
sbb
(bad)
loopne
and
loope
movs
cs
pushf
sbb
sub
jle
loopne
adc
movs
js
adc
sub
xor
rol
sets
ror
jp
sbb
gs
out
in
je
cmp
mov
mov
pop
aad
sbb
add
aad
mov
mov
aam
dec
test
add
test
not
and
pop
push
out
imul
lds
pop
inc
lods
xor
ins
movs
clc
pop
inc
pop
call
rcr
loopne
(bad)
jg
mov
mov
cmp
fsub
call
push
aas
sbb
inc
sbb
mov
xchg
icebp
cdq
jg
jnp
(bad)
js
sub
inc
lahf
sar
out
xchg
adc
push
adc
je
test
test
sub
aad
es
inc
ficom
rcl
sub
or
idiv
cmps
loopne
cmp
adc
xchg
inc
mov
xor
mov
cmp
xor
fnstcw
mov
cdq
bound
test
aad
mov
lods
add
ins
imul
jbe
jmp
sbb
mov
mov
push
sub
xlat
iret
int3
in
xor
cmp
cli
push
test
cmp
inc
scas
scas
push
icebp
or
inc
add
aas
je
add
xchg
adc
push
push
aaa
(bad)
cmp
mov
sub
aam
fiadd
shr
in
fldenv
jle
iret
cs
push
shr
shr
and
fucomp
push
and
sbb
pop
dec
aas
jle
xchg
jmp
push
pushf
dec
adc
sbb
icebp
and
(bad)
xchg
adc
jnp
push
mov
(bad)
push
adc
or
jl
pop
jge
cmp
mov
inc
mov
ffree
loop
sbb
popa
mov
ds
xor
(bad)
or
mov
pop
into
mov
scas
xor
sub
inc
(bad)
repz
cmp
aas
ja
cdq
fisubr
loopne
jbe
push
push
jg
mov
dec
data16
and
jmp
or
jge
popa
or
(bad)
pop
inc
add
sub
and
movs
fadd
bound
mov
inc
icebp
out
add
repz
sahf
out
cli
test
mov
xor
dec
mov
or
sub
call
rcl
int3
nop
adc
rcl
sbb
xchg
push
ins
mov
int3
outs
jb
xchg
test
or
loop
mov
popa
cld
nop
push
cmp
repz
mov
loopne
mov
mov
push
push
pushf
iret
repnz
ja
in
pop
ret
xor
pop
mov
(bad)
xchg
loop
mov
and
rcr
pop
mov
or
aam
cmp
(bad)
mov
and
ins
cmp
inc
retf
movs
jbe
pop
mov
push
out
fdiv
xor
push
mov
fwait
pop
jmp
cdq
mov
(bad)
scas
stos
test
xor
mov
mov
mov
inc
(bad)
mov
lds
push
das
mov
or
jbe
ins
sbb
and
jno
mov
xor
mov
ins
fld
icebp
jg
sub
std
pop
cs
push
cmp
movs
data16
cmps
mov
nop
fsubr
inc
ja
in
gs
mov
loopne
stos
daa
sahf
mov
lock
icebp
mov
scas
jbe
xor
addr16
movs
mov
sub
or
cdq
dec
mov
stc
jle
adc
(bad)
call
xchg
mov
bound
stos
(bad)
sbb
inc
es
dec
sub
mov
xchg
cmp
pop
jns
ja
push
clc
or
shl
adc
outs
xor
mov
and
rcl
pop
aam
mov
call
mov
in
ja
xchg
fisttp
scas
xor
and
test
mov
adc
sbb
sub
outs
data16
loopne
ficomp
xor
and
iret
inc
push
xchg
shr
imul
adc
push
lea
cwde
(bad)
jge
xor
inc
and
and
rcl
shr
cmp
fidivr
fcomip
dec
dec
in
clc
call
gs
cld
mov
cmp
adc
adc
jge
aad
retf
shl
addr16
push
cli
loopne
test
xlat
and
lock
sub
test
mov
test
popa
mov
adc
mov
out
adc
lock
iret
push
mov
jmp
pop
sub
lahf
mov
pop
loopne
mov
sub
dec
ins
js
mov
sub
or
sub
sub
mov
adc
inc
cmp
dec
jns
in
or
outs
js
daa
out
xchg
push
sar
lods
adc
push
fcmove
scas
xchg
dec
xor
xlat
or
ror
mov
into
xchg
pop
lds
jo
dec
mov
popf
sbb
cmp
ins
fstp
jnp
neg
and
daa
popf
ror
out
push
aaa
dec
stos
in
test
jecxz
out
jne
test
inc
dec
call
test
arpl
test
addr16
cmp
and
jmp
pusha
push
out
and
out
jg
fmul
cmps
jae
movs
enter
pop
test
les
jg
cmp
xor
sbb
mov
sbb
lds
push
pop
imul
adc
mov
inc
cmps
pop
mov
inc
or
adc
(bad)
call
jg
pushf
nop
mov
sub
cmp
data16
pop
mov
arpl
push
dec
sub
mov
push
jnp
mov
jno
loope
cmp
inc
je
sub
pop
or
mov
ins
xor
sbb
sti
inc
pop
popf
retf
sbb
jae
xchg
f2xm1
add
push
out
out
ffreep
jmp
or
xchg
mov
push
into
lock
push
fwait
add
and
mov
pop
sub
(bad)
or
aad
lods
cld
dec
test
or
dec
fwait
hlt
pushf
sti
sti
jecxz
xor
stos
and
sub
or
mov
mov
cdq
adc
pop
add
push
inc
or
inc
cmp
mov
mov
jge
ret
in
hlt
rep
out
mov
call
mov
push
sbb
fist
arpl
addr16
mov
enter
and
inc
add
inc
cwde
jbe
and
pop
add
sbb
es
stos
outs
cmp
inc
loope
lods
jle
mov
mov
dec
cmp
jecxz
add
clc
(bad)
icebp
xor
out
sti
cmc
out
daa
push
dec
arpl
push
cmp
(bad)
fsub
jnp
dec
add
pop
xor
mov
movs
adc
fs
inc
pop
mov
adc
out
and
stos
xor
lds
jae
dec
cmp
mov
push
xchg
push
fistp
popa
add
push
push
mov
sahf
adc
push
es
scas
sbb
mov
loop
cwde
mov
fisttp
icebp
jae
fs
jmp
call
mov
pushf
bnd
mov
das
mov
imul
cmp
mov
clc
sbb
mov
daa
(bad)
mov
adc
mov
int
sub
sub
xlat
in
push
or
jae
or
jp
fdivr
scas
mov
stc
push
popa
or
jne
cmp
das
jnp
lahf
dec
mov
sti
cmp
or
sbb
push
test
pushf
mov
nop
rcr
xchg
jle
xchg
mov
rol
dec
jmp
or
inc
shl
sbb
jbe
or
fcmovne
out
mov
inc
test
mov
je
add
mov
fidiv
xor
pop
fisttp
lock
test
sbb
movs
mov
mov
fist
add
fnstenv
loope
push
dec
add
mov
pop
ds
xchg
mov
ret
sub
ss
cdq
mov
bnd
bound
cmps
and
or
idiv
cmp
jmp
dec
xor
hlt
(bad)
cmps
addr16
call
gs
and
ja
repz
leave
vcvttpd2dq
push
cdq
cmp
ret
inc
pop
pop
(bad)
(bad)
sti
pop
movs
into
(bad)
adc
lods
lds
push
lds
movs
pop
test
sbb
retf
pop
mov
sub
mov
adc
dec
lods
inc
push
test
repz
pop
test
repnz
xchg
lods
pop
or
inc
adc
in
pop
pusha
mov
push
ins
push
movs
stc
addr16
(bad)
cmp
out
test
xchg
outs
mov
sub
sahf
dec
pop
call
xlat
xchg
mov
addr16
xchg
jns
mov
dec
and
clc
sbb
loop
jnp
push
sub
pop
cdq
int3
and
mov
inc
jmp
outs
call
jge
loop
fs
xchg
inc
mov
outs
ror
aad
mov
fs
jg
sbb
jno
or
aad
jnp
cld
and
(bad)
fmul
fbstp
sbb
repnz
mov
addr16
or
mov
jle
and
add
cmp
push
enter
stos
xchg
inc
xchg
into
xchg
mov
mov
out
jecxz
movs
and
inc
mov
cld
fstp
xor
aad
retf
clc
pop
inc
pop
in
or
rcr
in
xor
dec
dec
jnp
sahf
hlt
and
pusha
pop
mov
ins
adc
mov
mov
push
pop
mov
or
mov
push
dec
rcl
mov
add
test
mov
sbb
rol
js
fmul
push
jno
mov
mov
mov
loopne
loopne
and
xchg
jge
adc
xlat
xchg
ss
cmp
pusha
js
and
into
in
adc
mov
push
xor
lods
push
mov
jp
iret
arpl
mov
frstor
aaa
lahf
add
dec
xlat
imul
jns
mov
inc
xlat
mov
ret
mov
pushf
jge
dec
loop
push
mov
mov
leave
in
test
cmp
into
xor
shl
xor
xchg
pop
push
or
and
adc
sti
push
push
adc
arpl
inc
inc
scas
sbb
xchg
mov
(bad)
and
mov
mov
mov
ss
mov
cld
add
xchg
and
mov
jns
idiv
pusha
div
pop
push
sbb
lahf
inc
xor
out
sar
jbe
and
popa
adc
mov
sub
inc
add
stos
stos
xor
nop
or
stos
(bad)
mov
sbb
mov
mov
sbb
or
xchg
or
or
shl
jae
mov
push
pop
aas
lds
shl
aam
push
sub
add
iret
pop
inc
scas
add
nop
(bad)
(bad)
ja
pop
cmps
jno
mov
cmp
push
jp
adc
jbe
sti
jmp
push
ret
inc
nop
inc
push
and
scas
adc
and
mov
push
and
or
je
jge
xchg
jbe
and
popf
cmp
jmp
ret
ins
jecxz
stos
dec
ins
mov
loope
hlt
dec
sti
inc
pushf
mov
inc
mov
jmp
mov
mov
mov
xlat
inc
pushf
mov
stos
sub
stc
xor
ss
adc
lods
and
hlt
(bad)
js
arpl
dec
test
repnz
jae
(bad)
sub
xor
adc
dec
adc
jmp
sbb
sar
or
sub
and
out
loop
gs
jne
(bad)
fstp
cmps
pop
and
aad
mov
shl
mov
fucomip
sub
sbb
sahf
mov
or
mov
popf
sbb
mov
inc
sub
dec
cwde
dec
xchg
and
sbb
mov
lock
addr16
and
pop
inc
and
cmp
or
ficomp
push
je
ret
xor
mov
and
pop
cli
adc
repnz
icebp
xor
and
lahf
aam
adc
add
push
clc
sub
scas
in
sbb
das
(bad)
(bad)
fisttp
ret
mov
arpl
xlat
hlt
cs
stos
xchg
shl
out
scas
xchg
sub
mov
(bad)
std
xchg
jae
cmc
pop
fdivr
lahf
cli
xchg
or
rcr
mov
mov
or
and
sub
clc
mov
cmp
or
clc
or
je
mov
aam
clc
adc
dec
pop
push
add
ins
mov
add
cmp
adc
jne
movups
mov
sub
mov
aas
pop
sub
jp
dec
fwait
and
inc
or
es
out
test
sub
loopne
mov
stos
dec
mov
lahf
xchg
jae
or
dec
adc
mov
aas
push
pop
adc
stc
addr16
pop
bound
jmp
out
enter
shl
pop
clc
adc
push
loop
sub
push
aaa
push
sti
add
loope
ret
jle
repnz
bound
mov
mov
or
les
push
mov
and
jns
pop
mov
push
rcr
push
aam
jp
dec
stos
push
adc
sub
or
jo
cmp
xchg
dec
popa
or
mov
mov
jnp
or
mov
in
out
clc
mov
ins
inc
js
or
fstp
inc
movs
js
outs
jns
cli
ror
mov
jbe
mov
pop
inc
aam
ins
aad
ja
and
jmp
mov
and
fnstsw
adc
imul
lea
adc
sahf
daa
add
pop
mov
xchg
push
scas
pop
(bad)
dec
mov
mov
xchg
xchg
mov
movs
popf
outs
cmp
mov
call
stos
xchg
push
fidivr
ror
test
mov
fs
mov
push
sub
icebp
and
mov
lock
popf
sub
and
mov
jl
inc
push
les
arpl
xchg
push
hlt
(bad)
shr
and
fisubr
push
loop
adc
ficomp
scas
(bad)
out
jns
bound
cs
imul
js
xor
fcom
fidiv
sub
shl
ret
repz
test
test
mov
stos
(bad)
adc
stc
push
fld
inc
mov
jnp
loopne
mov
js
(bad)
mov
or
sti
ss
pop
scas
jnp
gs
ret
in
repz
sub
pop
sub
xchg
stos
sar
movs
inc
ret
rcl
ret
jl
xor
mov
in
push
(bad)
scas
dec
in
sub
jb
cmp
(bad)
and
sub
jns
lods
into
aad
xchg
xor
stc
hlt
in
addr16
sbb
mov
mov
add
mov
inc
hlt
sbb
inc
inc
mov
bnd
dec
int3
xor
scas
xor
rol
movs
(bad)
fdivr
fmulp
adc
and
ret
add
loope
aas
inc
fwait
cs
(bad)
daa
dec
outs
mov
xchg
jo
or
cld
loop
mov
adc
inc
inc
jg
push
out
mov
fldcw
retf
sub
jns
popa
ja
hlt
cmps
test
mov
add
jb
hlt
bound
ret
push
mov
push
xchg
dec
adc
cmc
push
xor
cmp
pop
out
xor
pop
sbb
sub
jmp
ins
loopne
mov
inc
hlt
inc
in
mov
mov
mov
in
fbstp
test
out
adc
cmp
mov
out
fwait
movs
or
fst
push
(bad)
ret
adc
mov
jno
stos
ja
jb
leave
mov
aaa
popa
mov
iret
or
dec
push
jecxz
mov
fucomip
jmp
outs
jg
xor
(bad)
sbb
mov
push
addr16
std
test
imul
out
nop
mov
cmps
arpl
hlt
sahf
or
dec
and
shr
ds
div
add
cmps
das
out
stos
(bad)
mov
int
pop
stos
pop
and
mov
fstp
fcom
mul
sbb
cwde
test
mov
data16
out
sub
pop
out
or
add
adc
jns
iret
imul
sub
cld
push
mov
cmp
ins
inc
in
(bad)
fldenv
(bad)
pop
loop
and
fadd
hlt
cmp
fadd
cs
cmp
dec
or
inc
mov
pop
sahf
stos
cmp
call
dec
add
pop
rcl
mov
test
push
daa
dec
push
fs
dec
pop
dec
sbb
leave
fdiv
xchg
lods
jno
sahf
or
(bad)
cmp
mov
mov
pop
aas
jne
cmp
and
pop
mov
xor
mov
test
mov
mov
cld
jge
test
test
sbb
fild
repz
imul
jae
retf
xchg
mov
dec
fs
test
mov
push
mov
dec
jmp
jae
push
mov
dec
retf
add
and
push
inc
xchg
call
fisub
cmps
push
sub
xor
(bad)
aas
gs
retf
in
sub
arpl
repnz
pop
fld
xchg
push
scas
push
mov
fistp
adc
je
pop
leave
es
cli
(bad)
mov
mov
enter
inc
adc
hlt
sbb
and
ds
dec
jecxz
mov
and
jnp
aad
jmp
jmp
or
cli
lods
repnz
outs
and
ds
retf
or
leave
inc
mov
xor
cmp
sbb
fdivr
out
cld
dec
cmp
aaa
ret
lea
xor
stos
jmp
rcl
jle
cwde
pop
test
scas
test
cmp
sub
cmp
std
lock
movs
cmp
je
test
mov
sti
mov
(bad)
ret
jmp
cmp
pop
dec
outs
pop
ror
rol
sbb
adc
lods
out
and
out
in
push
mov
jnp
nop
cdq
out
push
jle
mov
jl
stos
pop
xchg
sar
inc
ds
add
enter
out
lock
adc
push
aad
movs
out
pop
sub
lahf
mov
pushf
push
mov
dec
xor
mov
pop
in
dec
adc
fst
jbe
test
fstp
mov
jb
push
and
int3
mov
xchg
cli
cmp
mov
dec
and
imul
pop
sbb
in
inc
mov
bound
out
cmps
lahf
pop
inc
mov
add
jg
jo
pop
cdq
repz
jmp
add
cmp
stc
or
cwde
xor
jg
fbld
call
adc
es
pop
adc
pop
xchg
call
std
xchg
pop
add
aam
int
sub
cdq
xor
enter
push
xor
xchg
pop
jnp
fprem1
sbb
xchg
dec
cdq
pop
sub
jmp
push
test
jo
(bad)
aaa
popf
(bad)
cmps
(bad)
or
pop
scas
loope
adc
sbb
mov
dec
in
pop
enter
inc
push
mov
cmp
mov
retf
arpl
clc
inc
cmp
mov
xor
add
push
cmp
sahf
outs
inc
dec
in
icebp
xchg
xchg
adc
pop
rcr
adc
sub
call
mov
inc
and
arpl
jmp
xchg
pop
sbb
loop
dec
xchg
loope
or
xor
push
(bad)
fnstenv
push
jp
jmp
push
xchg
fldcw
iret
xor
push
jb
pop
xchg
xor
adc
loope
outs
adc
lods
mov
add
test
dec
ins
popa
dec
fimul
mov
pop
cmp
lds
idiv
(bad)
and
push
lods
fisubr
lds
pop
push
push
jb
das
scas
jge
shr
iret
xor
clc
pop
sahf
data16
or
xchg
pop
and
je
cwde
rcr
lods
shl
in
and
jp
xchg
xor
into
dec
sub
cmp
push
dec
push
adc
mov
and
(bad)
enter
cmps
mov
cmp
sbb
mov
sub
lea
sbb
inc
cmc
fwait
aaa
arpl
cwde
(bad)
aam
jg
and
ror
sbb
rcl
add
test
cli
(bad)
lock
(bad)
xor
dec
xor
stc
inc
or
jo
xchg
dec
and
xor
or
lds
enter
loop
jae
xchg
sar
sub
mov
and
aaa
test
push
xor
cmp
xor
dec
pop
js
arpl
xor
push
retf
fld
mov
sub
push
lea
and
enter
sub
loope
in
int
xor
or
push
stos
in
popf
inc
in
cmps
retf
or
scas
(bad)
and
adc
addr16
cmc
in
xchg
stc
das
ror
test
mov
in
popa
mov
fmul
and
xlat
loope
sbb
jns
pop
rol
mov
rol
cmps
test
jb
imul
jg
cmps
adc
mov
push
cli
jo
or
sub
sbb
pop
fnstcw
or
inc
shl
gs
inc
movs
or
loope
and
sbb
and
inc
xor
mov
xor
mov
pop
and
push
cmp
fst
push
fidiv
mov
retf
pop
out
js
cmp
int
cmp
xchg
bound
jge
inc
sub
mov
xor
stc
icebp
fild
xor
imul
test
pop
add
cmp
add
les
push
fs
call
lahf
dec
hlt
test
aad
add
add
movs
jbe
popf
mov
movs
pop
xor
xchg
inc
movs
sub
xchg
mov
enter
outs
or
icebp
mov
xchg
in
aas
lods
in
xchg
ss
xchg
or
outs
int3
popa
repnz
out
xor
push
fcomp
aad
dec
in
ficomp
mov
int3
std
jo
out
jmp
xlat
lea
rcl
test
or
dec
clc
pop
daa
inc
add
push
jmp
jnp
icebp
jnp
jp
fisttp
pop
movs
repnz
push
push
xchg
adc
push
ins
xchg
xchg
and
popa
test
clc
push
loop
in
inc
xor
ja
sub
and
aaa
push
xchg
mov
cdq
push
jne
sub
xchg
lods
push
es
call
cmp
aam
lahf
pop
out
mov
int
dec
sbb
lds
sub
mov
xchg
adc
dec
hlt
shl
lahf
nop
add
cwde
sub
sub
inc
out
xor
cwde
xor
pop
inc
aas
shl
ret
add
jb
push
dec
adc
leave
jmp
lods
rol
mov
jmp
stc
pop
sub
test
and
test
fucom
arpl
add
jmp
arpl
lock
mov
sub
inc
inc
lock
scas
jo
jle
(bad)
lods
push
push
pop
popf
inc
mov
pop
mov
out
inc
popa
inc
adc
sub
int3
adc
xor
mov
fs
and
push
call
fld
lahf
mov
pop
sbb
mov
pop
sbb
dec
dec
rcr
mov
ja
fisttp
push
mov
movs
jp
lods
ins
pop
jg
and
cmp
mov
das
push
jbe
jmp
sbb
rcl
dec
cmp
push
and
push
addr16
add
movs
sbb
jmp
inc
or
cmp
jno
mov
mov
test
xchg
sub
xchg
popf
jecxz
arpl
mov
xchg
movs
in
test
mov
mov
push
scas
sub
or
add
xor
clc
or
in
mov
mov
cmp
std
and
mov
mov
sbb
in
repnz
jbe
push
shr
mov
mov
shl
outs
jl
cli
and
gs
xchg
jno
mov
in
inc
test
fldenv
sbb
dec
dec
jo
imul
mov
stos
sbb
adc
push
xchg
cmp
xchg
mov
push
mov
push
mov
dec
pop
sar
mov
gs
xchg
scas
and
adc
iret
test
xor
pop
pop
jl
loop
jae
push
sub
jae
push
jne
addr16
test
push
enter
mov
jno
push
xchg
xchg
lds
(bad)
or
test
push
push
or
retf
(bad)
std
call
xor
lods
jo
jp
adc
adc
fstp
pop
in
das
jg
mov
cwde
call
sbb
dec
das
add
xchg
xchg
or
stos
out
sbb
lock
inc
or
mov
into
jmp
call
ror
jo
and
push
pop
mov
(bad)
cmp
cmc
push
rol
cmps
sbb
test
clc
pop
sar
pop
jnp
xor
das
in
and
xor
pop
dec
outs
pop
dec
add
jne
seto
pop
dec
jnp
jmp
repz
scas
or
dec
push
loop
inc
pusha
and
loope
push
shl
popf
sub
mov
test
add
or
repz
sub
add
test
and
ja
xchg
sbb
ret
xchg
mov
jl
or
jp
das
mov
sbb
jmp
sti
mov
fisttp
pop
push
pop
cdq
xchg
rcl
mov
and
(bad)
jg
mov
push
sub
push
xchg
push
jne
mov
dec
lock
in
mov
gs
inc
mov
retf
inc
mov
sub
(bad)
sbb
sahf
call
cmp
push
mov
fsubr
pushf
arpl
inc
gs
mov
enter
ret
inc
jl
xor
dec
or
sub
sbb
leave
mov
push
pop
xchg
cmp
lahf
push
aad
dec
nop
cmp
bound
jns
cmp
and
mov
pop
xchg
push
mov
cli
gs
test
data16
xchg
and
cmp
stc
je
or
cmps
adc
fs
or
cmp
fucom
movs
mov
and
sub
jb
sub
movs
hlt
inc
push
(bad)
call
scas
in
div
jmp
call
cmps
mov
cdq
push
cmp
es
push
out
add
retf
cmp
mov
and
repnz
repnz
stc
ror
pop
mov
sbb
add
setbe
push
jecxz
add
or
or
push
pushf
jecxz
pop
push
js
in
adc
out
jp
jl
rcl
push
mov
push
fdivr
std
mov
in
data16
in
data16
leave
mov
jmp
push
scas
mov
fcomp
aas
scas
int
lods
fsubr
push
xor
or
xchg
js
pop
pusha
fiadd
cmp
call
repnz
mov
sti
rcr
xchg
sbb
adc
in
stos
loop
and
cmps
xchg
(bad)
fidiv
jp
or
jns
or
dec
add
cld
js
xchg
jnp
mov
bound
es
lods
jp
stos
std
push
lea
jg
lock
cmp
add
sti
inc
or
push
xchg
add
scas
push
push
ror
out
mov
lock
cmp
inc
push
dec
cmp
ja
or
fcomp
(bad)
sti
xchg
push
inc
xchg
call
add
xlat
dec
cmps
ret
sbb
das
and
inc
mov
adc
inc
rol
loop
xor
pop
mov
ss
js
loop
pusha
icebp
xor
sbb
mov
push
mov
mov
fisub
out
push
lods
xchg
cmp
pop
aas
cli
cld
push
xor
inc
mov
fwait
adc
shr
mov
push
pop
add
(bad)
out
(bad)
cmp
cs
push
push
and
out
aas
push
xchg
cld
ffreep
add
mov
jo
mov
enter
dec
movs
push
ret
cmp
pop
xlat
jecxz
jge
shr
mov
xor
and
adc
add
in
call
sbb
aas
pop
adc
add
xchg
fs
fisubr
xor
pop
cmps
shr
(bad)
lock
mov
mov
imul
popa
cmp
sbb
mov
mov
loope
retf
or
xor
xchg
in
add
xchg
ret
ret
pushf
retf
aam
lock
dec
sbb
pop
pop
or
adc
cli
jmp
call
fwait
retf
dec
jo
cmp
sub
mov
push
cdq
out
jns
test
test
popf
cli
inc
jne
cmc
inc
(bad)
and
adc
popf
push
mov
or
scas
aad
xchg
and
in
hlt
dec
sar
stos
lds
or
mov
aaa
or
dec
push
add
cmp
inc
repnz
jg
gs
jmp
std
mov
jnp
cmp
scas
mov
out
nop
jmp
cdq
jnp
mov
std
and
sbb
rol
das
mov
imul
inc
rol
dec
fld
sbb
xor
cmp
cld
xchg
scas
cdq
cld
sbb
gs
bound
fidivr
mov
das
sbb
idiv
add
mov
xchg
mov
imul
mov
push
mov
xchg
jge
push
xchg
xor
call
jns
test
add
lods
dec
inc
in
push
ja
(bad)
sti
(bad)
ss
shl
jne
outs
cmp
inc
push
push
fcomp
pusha
retf
xchg
mov
mov
mov
repnz
mov
sbb
and
lahf
out
dec
xchg
fbld
fisub
pop
loop
pop
sbb
mov
add
std
sbb
and
cmp
clc
push
jmp
dec
es
push
jl
or
test
std
pop
jmp
mov
mov
jb
add
jge
pop
xor
sub
or
jo
in
mov
test
cmp
daa
test
loopne
out
shl
cmps
lods
arpl
out
pop
lds
clc
and
clc
retf
mov
xor
sti
mov
add
pop
test
pop
test
in
xor
loop
loopne
rcl
push
popa
jle
into
cdq
fsub
cmp
movs
ds
cmps
dec
adc
in
mov
pop
dec
jb
int
lock
mov
imul
(bad)
sbb
int3
shl
in
pop
pop
fs
out
stos
mov
mov
clc
xchg
pushf
xchg
xchg
mov
shl
pop
cmps
cmps
fwait
adc
std
(bad)
inc
and
adc
or
cli
jmp
sub
mov
aam
adc
jg
rol
jmp
adc
push
inc
in
test
mov
imul
call
or
add
sahf
sahf
stc
aaa
adc
dec
inc
pushf
jl
dec
xchg
outs
dec
popf
cmp
pop
aas
mov
fcom
mov
lock
cmp
loope
rcl
mov
outs
sbb
iret
(bad)
mov
inc
cmps
mov
imul
sti
dec
mov
loop
rcr
mov
(bad)
add
xor
(bad)
cli
fwait
ror
lds
outs
xchg
imul
aad
out
cmp
xchg
xor
inc
imul
ins
cmp
lods
sbb
sbb
in
ds
adc
cmp
dec
pop
jmp
call
and
test
xor
addr16
inc
add
mov
jb
out
adc
inc
mov
movs
clc
jmp
fdivr
in
mov
cwde
mov
fwait
repz
cld
inc
(bad)
pop
sub
jl
call
into
je
and
pop
jl
jbe
ins
mov
test
ins
enter
push
fs
jg
fwait
pop
arpl
jecxz
inc
jl
out
(bad)
popf
jo
repz
in
sub
stos
leave
stos
idiv
(bad)
push
inc
imul
pusha
(bad)
(bad)
mov
cmp
outs
retf
add
inc
sbb
mov
daa
fcom
les
push
mov
or
sbb
xor
jmp
or
in
lahf
movs
ins
mov
lds
xor
scas
xor
ffreep
loop
cmp
test
(bad)
icebp
fld
and
xchg
xchg
dec
dec
xchg
sub
fs
jg
mov
fmul
fisubr
pop
outs
cmp
stos
not
inc
mov
mov
xchg
fild
(bad)
rcr
xchg
iret
jg
int
(bad)
pop
in
xchg
ss
jle
test
dec
ds
iret
add
inc
adc
mov
lahf
mov
push
and
push
cmp
adc
cmp
int3
hlt
mov
aas
lahf
push
and
sbb
pop
jno
sbb
hlt
outs
(bad)
pushf
inc
adc
unpcklps
xor
lds
xchg
cmps
add
ja
xor
push
pop
into
dec
fistp
mov
call
cmp
dec
xor
outs
mov
test
push
sahf
pop
sub
xchg
mov
add
test
mov
inc
sub
pop
push
jo
ror
xor
sbb
packuswb
mov
rcl
mov
xor
test
mov
add
push
mov
cmps
cmp
scas
xchg
dec
lods
xor
jne
adc
dec
stos
xchg
daa
xor
cs
js
xor
retf
lock
not
(bad)
iret
cmp
push
fcom
rol
fadd
jl
or
xchg
sbb
push
dec
ins
sub
cmp
add
rcr
xor
inc
pop
jnp
mov
push
stos
(bad)
repz
sbb
add
xor
std
ja
mov
mov
stos
mov
xor
cmp
stos
adc
adc
ja
push
dec
nop
mov
mov
jb
push
shl
adc
(bad)
nop
(bad)
icebp
shl
pusha
adc
scas
cwde
sub
(bad)
pop
push
adc
mov
into
and
pop
adc
push
jns
lods
xchg
push
mov
in
jne
outs
mov
add
shr
out
xchg
add
or
mov
arpl
add
pop
mov
sar
leave
or
jno
cmp
xchg
inc
daa
mov
scas
retf
mov
jo
xlat
pop
push
inc
jno
mov
mov
lods
into
(bad)
add
push
scas
repnz
pop
sub
inc
push
xor
shl
stos
cmps
div
jg
and
add
add
add
sub
pop
mov
mov
into
in
gs
enter
pop
(bad)
adc
cmc
adc
mov
std
cs
retf
xor
icebp
sub
mov
mov
pop
out
mov
pop
xchg
pop
fistp
mov
fcomp
push
leave
cmps
aad
jne
sub
mov
mov
popf
test
pop
test
out
cmc
lods
push
bound
pop
fwait
call
inc
jnp
mov
fcomp
les
movs
and
out
sub
loop
push
dec
add
inc
push
test
in
push
xchg
jmp
push
das
mov
loopne
inc
clts
hlt
pop
mov
arpl
pop
pushf
in
aas
push
(bad)
sbb
enter
repnz
or
and
inc
mov
fnsave
mov
sub
shl
jo
hlt
std
xor
xchg
mov
loop
lahf
lahf
pop
lea
pop
aad
leave
mov
cwde
xchg
push
xor
mov
mov
or
mov
push
dec
test
mov
dec
in
sbb
xor
mov
push
jmp
shr
imul
lds
icebp
lods
dec
pop
stos
int
fdivr
sbb
push
add
out
fidivr
sub
pop
push
push
adc
in
ror
xchg
mov
ret
xor
out
add
int3
xchg
adc
adc
adc
push
or
and
sub
retf
jbe
hlt
mov
xor
mov
in
cmp
loope
jbe
popf
add
adc
repnz
fist
jle
cmps
stc
or
pop
mov
mov
js
mov
cmp
addr16
pop
(bad)
pop
in
std
fnstsw
scas
add
or
or
dec
sahf
les
addr16
call
gs
push
inc
out
movs
pop
data16
pushf
sbb
(bad)
rcl
push
movs
xchg
xor
push
mov
mov
scas
shl
or
push
mov
inc
mov
movs
inc
(bad)
fisubr
mov
jns
ror
(bad)
or
cli
sbb
inc
(bad)
cld
xchg
mov
and
les
or
iret
dec
inc
out
and
ret
push
das
stos
or
mov
jo
test
jecxz
cmp
pop
addr16
(bad)
adc
or
cmc
pop
fcos
or
fstp
jmp
mov
ret
lds
adc
ins
mov
xchg
pop
xor
ret
push
(bad)
cmps
arpl
fs
cli
push
jp
jge
jmp
int3
and
(bad)
dec
pop
repz
cmp
jmp
inc
aas
and
test
cmp
mov
jae
xor
lds
aas
repnz
shl
test
sub
(bad)
cdq
cmp
jecxz
into
or
add
fnstsw
xor
stos
adc
dec
and
movs
test
push
push
leave
add
(bad)
push
scas
jbe
cmp
and
loope
das
ror
jecxz
cmc
repnz
jne
imul
test
push
in
inc
bound
or
je
ss
(bad)
imul
add
mov
pop
pusha
icebp
cmp
stos
add
add
imul
sar
xor
sar
push
call
mov
ret
cmp
cmp
xchg
leave
test
cmc
aad
lods
cld
lock
add
xor
cli
fsub
test
mov
push
cmp
push
les
and
in
dec
lahf
dec
sbb
push
ret
out
or
dec
sbb
jge
jecxz
jecxz
pop
mov
cli
sbb
jo
sahf
add
or
xor
pop
fst
aad
pop
or
idiv
pop
mov
mov
retf
xor
out
xchg
aas
jge
add
pop
sub
test
cmp
jne
mov
or
ret
cmp
jns
rcr
retf
movs
push
iret
mov
call
pushf
fstp
jo
sbb
movs
mov
aad
add
cmp
movs
jmp
(bad)
out
push
sbb
mov
cmc
xchg
push
pop
mov
fwait
aas
add
inc
push
cmp
xchg
daa
mov
mov
push
xchg
lods
xor
sbb
test
add
int3
into
xor
inc
ins
cmp
or
xor
push
adc
push
pusha
push
sbb
fcomip
push
add
fwait
sar
scas
cdq
out
imul
push
ins
dec
adc
cwde
pop
sti
add
push
inc
push
imul
push
call
push
jns
(bad)
adc
cmp
(bad)
jge
inc
jmp
aaa
pop
cs
xchg
jmp
xchg
or
dec
dec
inc
adc
mov
push
push
repz
mov
call
xchg
jecxz
lods
sbb
call
cmp
fst
fld
push
mov
push
pop
adc
pop
in
stos
mov
xlat
ror
call
cs
retf
sbb
sbb
adc
and
fidiv
repz
push
mov
mov
cmp
adc
dec
imul
push
popa
xchg
push
pop
call
push
push
pop
cmp
sbb
sahf
movs
popf
enter
mov
and
loope
sub
pop
inc
xchg
mov
inc
jmp
int3
cmp
xor
icebp
mov
nop
push
ror
scas
sbb
dec
jns
jmp
leave
in
repnz
dec
sbb
test
js
jg
sub
inc
fnsave
fstp
movs
in
sub
pop
adc
js
stc
je
cmp
mov
std
push
dec
inc
xor
jmp
lock
outs
cmp
mov
xchg
rcr
mov
jb
sub
(bad)
cmc
ins
xchg
mov
stos
jp
fbstp
sbb
push
cmp
and
clc
gs
lahf
sahf
add
pop
pop
push
pop
jns
gs
mov
arpl
ins
inc
aaa
xor
js
push
cli
add
in
pusha
cmps
in
push
mov
addr16
sar
sub
add
jne
lahf
cdq
scas
addr16
aas
push
or
push
fsub
out
push
adc
dec
mov
into
push
ds
add
out
and
popf
in
sti
xchg
push
je
scas
loope
or
icebp
inc
inc
mov
xchg
xlat
sbb
xor
mov
xchg
jno
fwait
cvtdq2ps
mov
pop
test
inc
push
dec
icebp
jae
or
xchg
test
aaa
or
iret
xchg
jg
mov
aas
js
out
and
mov
sub
fidiv
push
loope
pop
int3
xchg
xor
adc
jmp
add
mov
or
js
mov
sbb
in
rcl
jo
push
ss
pop
dec
nop
sbb
push
aam
xchg
inc
jmp
cmp
sbb
jmp
ror
xchg
bound
sub
pop
jo
neg
nop
int
sbb
adc
cli
out
push
push
sub
loop
pop
aad
xchg
cmp
out
pop
mov
out
xchg
jne
mov
or
clc
shl
pop
test
jo
push
das
(bad)
nop
add
inc
aad
mov
cmp
mov
inc
push
stc
or
lea
sbb
pop
movs
js
in
and
inc
sbb
nop
cli
mov
std
sub
data16
ret
mov
sub
leave
(bad)
aad
jge
cmp
cs
mov
inc
add
pop
jp
inc
sbb
push
pop
pop
popf
jmp
push
js
cmc
repz
shl
in
push
adc
add
jno
aas
rol
mov
arpl
cmp
pop
mov
ror
sub
add
pop
jae
xchg
mov
call
inc
out
cli
push
in
jae
in
jp
out
cmp
sub
sbb
xchg
xchg
xor
jns
mov
retf
jno
test
sub
bound
(bad)
or
pop
pop
fisttp
mov
ret
pop
lods
lds
int
sub
shr
xor
in
sbb
xor
addr16
mov
jp
lds
mov
add
ins
call
pop
dec
inc
inc
adc
aaa
mov
rol
mov
push
into
add
out
ins
jmp
push
(bad)
popf
stos
in
xlat
not
clc
enter
sub
pop
fisttp
inc
repnz
or
dec
pusha
cmps
sbb
xor
pop
enter
mov
cs
xchg
pusha
(bad)
std
out
push
sahf
lock
(bad)
sub
loope
pop
scas
(bad)
mov
loope
adc
les
or
mov
arpl
cs
leave
mov
and
jae
retf
sahf
jno
cmps
pop
xor
stos
ror
aad
int3
stc
xor
mov
sbb
xor
ret
mov
xor
(bad)
mov
out
mov
out
clc
pop
jecxz
push
pushf
ror
pop
outs
mov
mov
das
jmp
ja
and
lods
cmp
sub
repz
fcmovne
jb
xchg
aad
adc
fisttp
or
push
aam
ds
loop
jb
or
sbb
push
aaa
call
xchg
cmps
movs
jno
test
loop
jno
jg
pop
lock
es
xchg
cmps
pop
stos
movs
fdivr
repnz
imul
aam
jne
xchg
sbb
test
lock
mov
sbb
mov
and
lea
xchg
popa
and
xchg
mov
mov
sbb
sub
push
outs
mov
loopne
dec
cmp
sub
add
enter
push
or
sub
lods
pop
lods
lock
aam
ret
mov
mov
xor
lds
mov
out
sbb
cmp
jmp
xor
and
and
shl
mov
inc
fdivr
dec
adc
adc
mov
cmp
inc
cmp
retf
push
pop
pop
stos
movs
sub
cmp
cmp
movs
call
pop
add
pop
call
mov
in
adc
test
or
push
sub
outs
xor
fucomp
imul
gs
mov
(bad)
int3
jp
cmp
mov
sub
jg
ds
into
fmul
xchg
fist
aam
aad
push
add
mov
inc
cmp
ds
imul
or
int3
sub
sub
sbb
scas
sub
je
fyl2x
inc
bound
add
xchg
or
mov
xchg
(bad)
or
ror
aad
leave
and
push
mov
add
mov
push
lahf
fs
add
arpl
hlt
pop
fnstcw
mov
nop
mov
mov
inc
lahf
or
sub
movs
(bad)
xchg
mov
mov
cmps
sbb
data16
out
(bad)
jmpw
fbstp
in
push
mov
xchg
adc
and
or
dec
inc
mov
and
xchg
retf
hlt
in
das
mov
es
push
pop
jl
jae
mov
dec
pop
mov
pop
addr16
push
or
push
sbb
pop
jecxz
xor
shl
dec
push
fisub
adc
inc
push
or
add
enter
sbb
les
std
xchg
in
mov
push
cmp
fisubr
sub
js
dec
mov
mov
pop
or
xor
pop
aad
inc
mov
xchg
out
loope
add
mov
adc
pop
in
pop
ss
clc
mov
scas
mov
xchg
sub
out
leave
adc
popf
mov
sahf
pop
mov
shl
cwde
loope
inc
mov
js
into
push
(bad)
cld
xchg
(bad)
push
jmp
mov
retf
jne
out
add
mov
mov
dec
xchg
shr
(bad)
ja
jmp
in
add
xor
and
rcr
dec
out
test
mov
enter
scas
rol
arpl
push
dec
inc
iret
(bad)
xchg
pop
cmp
sahf
movs
xchg
scas
dec
push
lds
imul
clc
ficomp
mov
cmp
(bad)
sub
mov
out
push
(bad)
mov
jbe
mov
daa
jmp
les
push
adc
cld
xchg
cmps
(bad)
ins
sbb
ja
cmps
dec
and
cwde
jl
push
mov
(bad)
int
xor
pop
xchg
mov
mov
sub
adc
pop
mov
sub
mov
loopne
mov
stos
out
jg
push
clc
jp
outs
in
mul
scas
pop
lahf
test
imul
retf
fnsave
bound
push
test
jmp
pop
out
outs
pop
int
movs
cld
mov
mov
pusha
fcmovnu
std
jmp
or
mov
movs
mov
mov
mov
call
cmc
int
jmp
push
push
push
pushf
or
ret
popf
push
fistp
or
cmp
test
pop
pop
push
cmp
js
adc
inc
inc
jge
repz
std
mov
loope
push
jmp
sub
xlat
or
daa
adc
add
adc
dec
stos
sbb
test
dec
jns
lods
push
add
scas
gs
ins
cli
inc
pop
movs
aaa
adc
ret
(bad)
mov
cmc
add
pop
sbb
enter
lds
sbb
dec
test
sub
dec
jecxz
pop
in
jbe
out
idiv
dec
mov
adc
leave
mov
icebp
push
xlat
and
imul
cmp
xor
(bad)
mov
jl
cmp
mov
pop
or
or
sub
nop
ret
or
gs
fwait
push
jnp
lahf
(bad)
(bad)
mov
je
adc
aas
arpl
shl
lods
inc
or
add
jecxz
gs
enter
jecxz
mov
mov
icebp
or
mov
jnp
sbb
cwde
icebp
dec
mov
sbb
in
cs
add
xor
daa
pop
or
lods
inc
xor
and
(bad)
(bad)
jb
dec
(bad)
scas
sbb
out
(bad)
inc
xor
or
xchg
pushf
or
or
jmp
fldenv
or
and
jns
nop
test
push
lahf
mov
sub
push
xor
cmps
lods
or
and
fsub
jae
jl
mov
sbb
or
push
xlat
cmp
add
fadd
dec
popf
push
cmp
popa
xlat
fwait
pop
mov
mov
arpl
push
push
add
lea
gs
mov
xchg
aad
adc
add
je
test
pop
push
and
mov
push
jmp
add
in
xchg
sub
mov
sub
aas
(bad)
and
xor
mov
mov
or
xlat
outs
and
mov
scas
mov
test
dec
sbb
shl
dec
out
loope
xor
xchg
sbb
std
xchg
inc
mov
mov
les
ret
inc
and
jnp
jg
sub
js
adc
js
movs
test
xchg
ds
pop
push
jb
adc
jl
aam
mov
stos
call
fmul
fs
addr16
ror
pop
out
jg
inc
mov
add
cs
ins
add
cld
hlt
out
loop
iret
icebp
shl
jno
push
sar
inc
imul
xlat
mov
mov
xlat
ds
pop
ja
sub
dec
push
movs
imul
jmp
outs
sub
xchg
test
mov
xchg
adc
pop
pop
iret
jo
daa
jmp
cmps
dec
and
stos
pushf
iret
sbb
dec
pop
and
lods
outs
jle
mov
das
jne
out
jns
bound
loopne
aas
(bad)
(bad)
out
loope
popf
and
loopne
cmps
popa
ret
cmp
dec
pusha
mov
dec
and
mov
push
fsub
sub
popa
dec
mov
imul
add
pusha
or
pop
es
cmp
dec
test
add
xchg
push
fdivrp
and
ss
es
sub
popa
mov
add
or
mov
push
pop
arpl
xor
sub
push
in
fldcw
xlat
fwait
arpl
das
push
mov
lea
pushf
xor
enter
in
or
lea
push
sub
pusha
fimul
pop
xlat
out
cmc
js
xor
jmp
mov
adc
mov
xlat
icebp
in
inc
iret
jg
sub
inc
dec
sbb
adc
mov
outs
loopne
ror
js
test
dec
popa
test
or
push
push
add
dec
sub
test
pop
sar
(bad)
clc
inc
adc
sbb
xor
cmps
jecxz
pop
lods
loope
popa
add
loope
adc
ss
repz
push
dec
test
adc
push
jmp
rcr
shr
pusha
adc
(bad)
adc
fimul
sub
pop
dec
and
aam
sahf
ins
fild
ins
push
xchg
in
jle
mov
add
adc
repz
xchg
or
jns
or
xchg
xlat
inc
call
lock
push
push
jae
sub
sub
rol
(bad)
in
stos
push
mov
test
js
mov
mov
cmp
add
stc
shl
jmp
icebp
fadd
or
adc
mov
dec
mov
hlt
out
jle
lods
dec
ror
or
shr
sti
adc
retf
call
push
rcl
and
jbe
frstor
inc
sub
sub
pusha
push
push
repz
mov
dec
dec
mov
push
cwde
add
rcl
push
push
cmps
(bad)
fild
or
and
jae
xchg
push
clc
popf
nop
shl
dec
aas
aam
(bad)
movs
in
lds
movs
mov
or
xor
inc
mov
(bad)
imul
movs
jecxz
sub
mov
pop
aad
jp
mov
rcr
or
outs
not
pushf
cmp
outs
std
push
test
sbb
lea
dec
lds
xor
mov
div
or
scas
cwde
cmp
and
add
in
add
push
xchg
mov
jno
sbb
push
add
push
ret
gs
jg
aaa
adc
jo
cmp
shl
mov
add
inc
mov
pop
pop
cmp
add
jp
inc
movs
fisttp
out
sub
inc
mov
sbb
mov
xchg
lds
add
cmps
mov
div
stc
lods
test
out
aad
call
mov
inc
sub
cmp
pop
and
cmp
lock
xchg
lods
mov
retf
mov
mov
cmp
cdq
dec
or
mov
xor
(bad)
call
retf
lods
and
movs
les
arpl
clc
sbb
pusha
inc
mov
movs
shr
pop
das
out
dec
xor
sbb
or
aas
out
repz
mov
xchg
mov
(bad)
retf
add
lock
repz
pop
into
mov
jb
xchg
int
push
pop
mov
push
add
pop
xchg
pop
sar
pop
jp
jle
sar
and
repnz
loop
or
sub
mov
retf
jae
mov
out
jl
jle
dec
sahf
cdq
adc
mov
xor
dec
dec
mov
mov
enter
or
out
push
jge
cwde
cli
(bad)
cld
fsub
inc
(bad)
jl
dec
push
mov
push
xchg
in
ror
inc
jl
in
add
stos
push
jge
sbb
mov
push
add
nop
push
outs
aam
call
jp
sbb
loopne
xor
xlat
push
jmp
call
cdq
mov
fstp
(bad)
(bad)
mov
fsubr
adc
ja
push
inc
xchg
ror
cmc
push
and
std
xor
js
xchg
cmp
and
cli
mov
sub
mov
stos
mov
shr
sahf
rcr
jge
mov
stos
adc
xor
jp
xlat
dec
cli
push
bound
lahf
pop
(bad)
minps
sti
adc
mov
outs
scas
add
iret
into
push
movs
dec
pop
mov
dec
call
(bad)
push
lods
sub
lea
or
push
ret
std
add
sbb
mov
inc
rol
push
jmp
push
push
aad
test
popf
jne
or
fwait
push
add
push
add
mov
push
mov
cmps
sbb
cli
mov
ret
stos
inc
sahf
jae
sub
mov
adc
in
test
push
sbb
pop
mov
xchg
pushf
add
fisubr
dec
mov
sbb
dec
icebp
push
mul
stc
icebp
(bad)
cdq
add
cmp
mov
movs
cmp
xchg
ins
aam
test
mov
and
pusha
mov
sub
mov
pop
lds
or
fstp
pop
and
cld
cmp
and
pushf
or
cmps
push
movs
stc
jns
cmps
xchg
adc
adc
xchg
test
out
movs
fdiv
in
sbb
in
cmp
imul
sub
xor
ss
cdq
cmps
test
jns
adc
pop
les
sbb
cwde
ins
push
mov
or
pop
jae
mov
into
push
loopne
fbld
push
movs
xor
cmp
cmp
sbb
mov
jo
loope
cmps
stos
cdq
mov
mov
fdiv
loopne
mov
pop
inc
mov
pop
push
jg
dec
sti
jmp
bound
(bad)
cld
xchg
mov
adc
imul
in
imul
loop
nop
push
jb
cdq
cli
push
dec
mov
add
jns
xchg
out
sar
xchg
mov
adc
loop
movs
test
(bad)
mov
push
add
scas
fdiv
call
cli
enter
into
jle
add
mov
inc
int3
repz
sub
arpl
and
movs
lods
or
push
cli
xor
stos
mov
dec
jmp
push
or
push
push
daa
js
clc
jmp
lods
adc
add
dec
ds
mov
seta
je
popf
sub
ins
sbb
or
pop
stos
aad
ins
(bad)
inc
xchg
popf
es
adc
add
dec
(bad)
pop
fisubr
ror
rol
adc
mov
lds
lahf
dec
inc
dec
das
(bad)
xchg
pushf
addr16
xchg
(bad)
adc
push
or
mov
repnz
retf
sub
add
fbld
nop
xlat
sbb
mov
sub
(bad)
ja
imul
arpl
movs
scas
(bad)
mov
mov
mov
fidivr
std
ficomp
int
lock
xchg
in
in
inc
test
(bad)
xchg
pop
mov
jecxz
mov
push
fucom
aam
push
xchg
rol
adc
dec
lahf
xchg
mov
call
jl
pop
mov
xor
pop
popf
dec
int
pop
mov
cmp
pushf
xchg
fnstsw
xlat
imul
push
iret
icebp
inc
(bad)
out
or
pop
adc
pop
pop
in
stos
aas
shr
mov
leave
jmp
fmul
call
and
jp
mov
mov
adc
sub
mov
call
stc
jno
mov
inc
lods
(bad)
pop
pop
add
fsubr
iret
stos
jl
ret
mov
ss
sub
xchg
inc
jg
ins
or
mov
in
lock
sar
inc
add
mov
push
dec
enter
loopne
pusha
(bad)
fwait
sbb
xchg
fs
stos
int3
(bad)
cmc
bound
sub
fs
test
jl
rcl
pop
or
add
push
in
and
aas
add
xchg
and
mov
loopne
and
jmp
jl
stc
loop
ins
xor
xor
cmp
mov
in
xchg
in
ins
js
lods
inc
push
rcl
jmp
add
mov
movs
pop
movs
jne
into
test
mov
fisubr
push
in
mov
inc
mov
ins
and
inc
sub
jns
gs
xor
sbb
jmp
(bad)
cmps
pop
ret
mov
jno
aad
inc
leave
vmovlpd
pop
cmp
xlat
aaa
(bad)
dec
add
mov
adc
mov
outs
jnp
mov
sub
call
aaa
stos
cmp
push
pop
push
imul
lods
in
mul
mov
push
cmp
cmps
push
mov
pop
xor
mov
imul
stos
out
adc
add
cmps
adc
fsubr
and
xchg
loopne
adc
xchg
jo
mov
stos
mov
(bad)
mov
jo
mov
or
and
jae
dec
add
mov
and
add
cmp
movs
test
idiv
inc
(bad)
mov
mov
sub
rcl
add
imul
xchg
jno
dec
call
and
and
sbb
sti
mov
xor
fisttp
push
or
loopne
xchg
fdivr
lock
add
stc
in
mov
mov
add
mov
mov
aam
jge
cdq
inc
loopne
int3
mov
mov
retf
adc
call
cmp
iret
ins
sub
or
jg
dec
fucomp
aam
jne
(bad)
or
daa
jnp
das
mov
aad
sub
or
add
mov
retf
dec
cmp
cdq
rcr
cdq
xchg
push
imul
mov
dec
jae
mov
and
mov
mov
lea
adc
jl
jmp
dec
retf
push
js
jmp
mov
jecxz
aad
jne
(bad)
and
xlat
stc
lods
inc
add
cmp
test
and
mov
or
hlt
pop
test
pop
mov
rol
pop
cli
cmp
xchg
cld
jg
daa
sbb
pop
jle
cmp
in
shl
push
in
mov
pop
test
mov
loope
mov
jg
shl
mov
mov
adc
sbb
es
jle
and
(bad)
pushf
lods
retf
mov
mov
or
jne
adc
pop
popf
repnz
mov
adc
scas
push
sbb
fist
retf
fs
pop
jmp
add
lea
test
adc
jno
sahf
sub
sbb
mov
stos
push
sbb
xchg
sub
push
scas
sbb
or
and
jmp
sbb
aas
dec
mov
jmp
mov
or
icebp
mov
adc
in
inc
push
jae
jo
mov
shl
fmul
mov
sar
dec
mov
jmp
test
loope
icebp
iret
mov
ret
fwait
out
sub
push
and
cmc
lds
(bad)
sar
frstor
daa
icebp
adc
lahf
and
cs
stc
into
mov
sar
cmp
xor
add
pop
rol
push
sub
out
stos
out
sub
mov
adc
mov
cmp
popf
test
in
jge
pop
push
sub
or
mov
pop
pop
sbb
cmp
jne
sub
sbb
aam
mov
mov
inc
dec
jg
pushf
lods
xor
clc
xor
cmp
imul
adc
fidiv
and
cld
in
xor
xor
hlt
out
add
or
sub
(bad)
scas
dec
mov
mov
xchg
or
sbb
cmps
jmp
inc
jp
xlat
std
(bad)
aas
xchg
cmp
lods
fiadd
push
fcmovne
nop
adc
pop
pop
dec
adc
jne
sbb
retf
sbb
cmp
imul
push
dec
test
hlt
mov
add
fadd
mov
inc
xchg
and
jp
lods
xor
div
mov
js
and
cld
dec
dec
enter
int
lods
cwd
or
stos
aaa
fdivr
ret
sub
push
mov
ds
jno
arpl
in
fstp
loopne
adc
loope
dec
sbb
adc
fild
or
enter
ins
fstp
pop
out
add
(bad)
jb
lock
sbb
cmp
jns
cmps
ja
cdq
push
sub
movs
out
pop
std
enter
and
jmp
pusha
outs
pop
or
ret
xchg
sbb
mov
sbb
inc
fidivr
and
sbb
add
fneni(8087
cmp
imul
(bad)
call
es
pushf
out
cmps
movs
loopne
jne
popf
cmp
jno
adc
sub
jmp
jl
outs
sbb
add
in
xor
int3
sbb
clc
fwait
mov
(bad)
cmp
add
loopne
adc
xchg
pop
fsubp
repnz
jbe
es
xor
pop
add
inc
aad
scas
ins
push
mov
leave
sar
inc
aam
jl
not
call
cwde
mov
inc
stos
aas
sub
pop
inc
test
adc
cmp
cs
push
shl
fst
pop
stos
dec
dec
jne
repz
loope
or
pop
push
jmp
clc
movs
add
int
or
fist
popf
adc
jns
push
aam
add
(bad)
lahf
out
stos
test
clc
fcom
fbstp
iret
into
cmp
push
js
iret
lds
add
mov
jns
retf
rol
or
cmp
lea
scas
dec
into
dec
sbb
xlat
addr16
cmp
inc
out
sbb
add
mov
and
dec
retf
std
nop
imul
dec
adc
into
loop
jb
out
(bad)
lock
sbb
pop
aam
mov
pop
icebp
or
xchg
pop
aas
jo
in
adc
aas
nop
movs
xchg
mov
fld
inc
test
xchg
or
cmp
add
inc
adc
cs
int3
add
fwait
retf
lods
pop
test
dec
hlt
push
cmp
adc
(bad)
int3
mov
xor
lock
scas
lea
or
int
mov
sub
pop
adc
and
inc
cmp
lods
mov
xchg
jae
cmp
ret
dec
push
lods
ds
or
push
sbb
in
jle
imul
scas
in
cmp
popf
push
mov
and
stc
dec
add
ins
push
hlt
xchg
inc
push
jbe
cmp
mov
inc
movs
data16
mov
fisub
add
scas
inc
in
push
jecxz
lock
mov
push
rcl
enter
inc
je
dec
aad
adc
mov
mov
shr
outs
(bad)
adc
ja
jnp
pop
outs
sbb
dec
(bad)
dec
out
and
call
adc
adc
stos
push
into
jmp
pop
xor
scas
or
imul
(bad)
in
push
inc
cmp
mov
inc
xchg
stc
cmp
push
lods
jnp
adc
into
mov
and
cli
fldenv
xchg
das
mov
mov
and
test
inc
sbb
sbb
mov
pop
outs
adc
jle
dec
sbb
jb
popf
out
and
mov
adc
jmp
(bad)
stos
sub
arpl
pusha
test
shrd
inc
push
sbb
lods
dec
cwde
test
in
inc
idiv
ret
sub
jno
add
adc
in
(bad)
jmp
mov
imul
xlat
push
ss
cmp
fisttp
loopne
or
jmp
daa
fistp
aaa
js
retf
fsub
pop
jmp
mov
pop
cmp
inc
test
icebp
out
pusha
inc
stos
jl
dec
and
mov
mov
jp
ins
cmp
or
fdivr
cmp
mov
stos
fdivr
mov
cli
pop
ins
cmp
loope
pop
call
mov
inc
add
pop
mov
jecxz
jb
mov
dec
in
push
pusha
aas
sub
jecxz
xchg
sub
pop
sub
lds
xor
pop
jg
retf
cmp
jnp
xchg
cli
xchg
pop
jp
mov
xor
jg
test
int3
mov
mov
and
outs
and
pop
jl
int3
push
outs
push
push
sub
outs
iret
jp
inc
js
imul
ret
pushf
adc
lods
pop
sti
ins
int3
ret
or
aaa
xchg
inc
push
xor
std
dec
cmp
xor
loope
jae
sub
and
xor
imul
pop
aas
data16
xchg
int
stos
adc
je
mov
mov
jp
in
pop
lea
jb
mov
mov
sub
dec
cmc
push
loope
ja
add
and
repz
repz
cs
not
call
out
jg
cdq
inc
ins
pop
pop
les
scas
mov
sub
add
lahf
(bad)
cli
adc
or
stos
sbb
mov
popf
dec
push
jnp
sar
mov
mov
fwait
dec
sub
pop
inc
pop
sub
sub
mov
call
sbb
sbb
iret
xlat
popa
fidiv
inc
nop
jle
sar
out
ret
aam
pop
mov
bound
(bad)
pop
sub
fdivr
add
push
adc
pusha
popf
jmp
pop
push
inc
arpl
jbe
test
pop
inc
in
mov
jl
cmp
or
jge
fsubr
mov
mov
fadd
sbb
pop
inc
popf
mov
xchg
aaa
mov
adc
xchg
inc
cld
jns
call
je
fild
inc
fsub
(bad)
(bad)
aam
test
outs
imul
jbe
lods
mov
imul
ds
mov
adc
xor
cmp
cld
jge
icebp
ins
out
jle
mov
xchg
xor
retf
xor
cmps
adc
pop
lods
les
stc
and
xchg
mov
push
pop
je
xchg
ret
in
xor
mov
int3
inc
fst
or
add
fprem
push
dec
fdiv
sahf
mov
sbb
into
pop
jo
and
xlat
fs
leave
loop
or
jo
loope
hlt
pop
or
js
jmp
cmp
jno
dec
pop
inc
and
in
lea
pop
xchg
inc
sbb
hlt
stos
out
push
mov
call
sti
sar
outs
pop
fst
(bad)
fwait
les
and
and
out
div
hlt
mov
jp
push
in
xor
cdq
cld
sub
jge
xchg
sar
ins
int3
dec
push
leave
add
cmp
cmp
or
sbb
enter
or
push
outs
hlt
cs
pop
cdq
in
(bad)
cmp
(bad)
sbb
not
sbb
push
icebp
xor
jg
add
xchg
enter
pop
jnp
movs
adc
add
repz
retf
lahf
cmp
lahf
addr16
loopne
adc
rol
fdiv
cmc
das
stc
mul
in
jb
push
(bad)
dec
sub
cmp
bsr
push
sub
push
int3
ins
dec
or
int
sub
cld
pop
adc
aas
jnp
mul
adc
sub
jbe
retf
jne
mov
popa
jmp
sub
ins
cmp
out
pop
inc
and
shr
inc
mov
push
inc
xchg
lock
sahf
push
add
stc
das
xchg
shr
loop
mov
adc
adc
add
mov
mov
add
neg
or
inc
cmps
loop
adc
jmp
retf
push
mov
sub
(bad)
cs
test
push
pop
mov
adc
xchg
loop
mov
cdq
outs
aaa
movs
xor
jbe
cld
in
or
out
mov
out
vpmaxub
int
mov
adc
imul
std
sbb
or
pushf
movs
xchg
push
cmp
mov
cmc
mov
dec
les
ret
cmp
ins
(bad)
iret
cmp
inc
fst
in
xchg
mov
ss
xor
into
mov
std
shl
and
sub
jns
add
push
and
mov
mov
mov
pusha
mov
pop
mov
mov
loope
adc
in
push
xchg
stos
fimul
add
sbb
mov
add
cdq
in
push
xchg
out
and
sbb
dec
repz
xchg
dec
fcomp
inc
jb
adc
mov
adc
xor
leave
adc
adc
jbe
dec
clc
test
sti
sar
lds
xchg
xor
gs
rcl
sub
adc
xchg
cmp
dec
and
mov
adc
inc
movs
cmp
lods
mov
xchg
fdivr
mov
inc
inc
pop
or
sbb
pop
inc
inc
(bad)
shl
jbe
xchg
div
ja
repz
mov
sub
stos
fsubr
sbb
(bad)
js
sbb
push
lock
loopne
mov
inc
push
jo
push
mov
dec
and
lds
loope
sbb
add
jnp
cmp
arpl
les
loope
fiadd
ret
adc
push
xor
hlt
jne
cdq
add
xor
fidiv
sub
lahf
leave
cmp
sub
jne
dec
scas
pop
xor
sbb
and
cs
int3
ds
dec
test
pop
xor
rol
xlat
push
push
add
dec
loopne
cmp
fild
out
retf
mov
loopne
ds
pushf
pop
lahf
repnz
hlt
xchg
or
(bad)
retf
pop
fst
xchg
into
test
(bad)
outs
xor
mov
adc
cwde
bound
dec
xor
jmp
push
sbb
out
fadd
(bad)
out
jnp
cs
aam
out
addr16
pop
addr16
cmp
lds
sbb
and
neg
addr16
push
cmps
test
cdq
push
push
or
sub
cmps
stos
cwde
shl
mov
xchg
pop
jnp
nop
mov
push
mov
out
sbb
gs
cmps
fldenv
repz
or
sbb
jb
pushf
dec
xchg
aas
xchg
xchg
add
pop
jp
das
ins
aad
jns
nop
push
clc
test
daa
mov
cmps
pcmpgtb
xchg
cmp
inc
cmps
mov
xchg
dec
mov
or
repnz
xchg
and
outs
aaa
enter
rcl
outs
xor
add
pop
repnz
xor
inc
das
pop
lahf
add
mov
and
mov
stos
mov
aaa
pusha
mov
(bad)
jl
and
js
ja
stos
inc
clc
stc
dec
stc
test
dec
sub
cs
pop
ret
out
movs
jne
mov
call
sub
iret
pushf
jnp
std
js
mov
gs
movs
add
imul
mov
ret
cmp
and
mov
test
sahf
lahf
adc
lods
(bad)
jecxz
fistp
push
jae
mov
ins
pop
xchg
aad
sub
adc
mov
idiv
pusha
xor
jae
jmp
sub
imul
aam
shl
cmp
mov
lods
retf
add
mov
adc
sub
lock
call
ds
fs
ror
pop
jle
jp
pop
mov
lods
jo
test
or
call
sbb
xor
mov
adc
outs
in
loopne
xor
sub
sti
push
mov
sub
mov
cli
out
cmp
inc
or
push
jge
movs
jp
daa
and
adc
jmp
icebp
sbb
cs
cmp
xchg
adc
push
retf
(bad)
adc
(bad)
mov
xor
push
jl
fbld
enter
call
call
mov
dec
sub
outs
push
xor
xchg
sbb
sti
jb
aas
arpl
jae
jnp
outs
jns
ins
push
nop
add
and
xchg
shl
repz
mov
int
ins
mov
test
mov
fidivr
pusha
fimul
mov
push
jae
ret
pop
(bad)
into
sti
dec
std
adc
(bad)
je
cmps
adc
pop
fld
jmp
int3
(bad)
jo
jb
fadd
push
mov
xchg
xchg
xor
sti
enter
outs
push
scas
ins
outs
jg
or
dec
jnp
fs
xlat
js
cmps
sbb
add
inc
cmp
adc
ins
mov
into
mov
inc
mov
mov
ret
cmps
jne
lds
mov
sub
jp
mov
or
pop
inc
sbb
xchg
sbb
imul
aad
xchg
push
popf
and
add
inc
mov
dec
mov
mov
es
xor
add
xchg
pop
inc
fdiv
dec
push
cmps
stc
repnz
dec
pusha
dec
push
pop
sbb
jmp
out
sbb
ret
lds
cmp
fidiv
inc
ja
pop
(bad)
mov
call
mov
ds
mov
push
jns
fidivr
mov
mov
ret
push
push
cs
cmps
ror
stos
outs
mov
test
rcr
push
out
out
adc
imul
mov
dec
inc
jp
leave
in
and
xchg
mov
repnz
es
mov
(bad)
cmp
lahf
neg
lods
and
cdq
dec
sub
pop
add
cmp
int
inc
cwde
mov
xchg
aad
xchg
inc
sub
mov
mov
(bad)
(bad)
lahf
jns
(bad)
test
ror
stos
inc
hlt
aas
leave
daa
mov
cmp
jno
mov
neg
stos
xor
xchg
dec
inc
jae
sbb
ret
jg
dec
adc
idiv
ins
and
aaa
mov
xchg
test
xchg
push
or
or
out
cmps
cdq
and
jp
inc
xor
pop
jns
out
jmp
cmp
sub
dec
xchg
add
dec
in
jae
gs
movs
out
inc
jg
je
out
jne
jle
ins
xor
inc
xchg
outs
popf
inc
int
mov
test
mov
push
fsubr
or
inc
add
outs
xor
cmp
and
xchg
shr
jmp
scas
mov
das
adc
xchg
ds
ficom
jne
xchg
xchg
xor
(bad)
popa
clc
sub
cdq
rcr
xor
popf
(bad)
jmp
in
mov
pop
call
stc
mov
jno
ins
fucomi
push
adc
xor
dec
jb
ins
dec
mov
push
mov
and
and
cmp
out
mov
arpl
cdq
push
lahf
out
test
cmp
sbb
adc
push
rol
js
xor
xchg
(bad)
lds
cs
add
or
scas
mov
and
mov
mov
mov
xchg
jge
ja
push
ret
or
retf
repz
add
xchg
xchg
sbb
pop
jecxz
retf
mov
xchg
out
data16
call
ret
mov
push
xchg
add
iret
sbb
enter
sbb
rcl
cmp
push
pop
lea
pop
sbb
inc
xchg
xchg
out
(bad)
mov
call
pop
add
call
scas
xchg
push
mov
xchg
pop
mov
xchg
mov
lds
mov
dec
pop
mov
sbb
dec
lods
inc
xchg
mov
dec
adc
xor
dec
xchg
test
push
mov
mov
inc
inc
outs
(bad)
cs
js
addr16
inc
int
in
sbb
out
adc
ja
mov
ins
imul
sbb
add
or
int
mov
mov
pop
sub
cmp
(bad)
jp
sub
enter
xor
mov
inc
fs
dec
cld
mov
stos
pushf
enter
ret
cmps
addr16
(bad)
das
pop
arpl
jns
(bad)
and
cwde
iret
mov
pop
push
sbb
imul
icebp
and
sub
jae
or
ins
maskmovq
test
mov
aaa
imul
cmc
adc
sub
cli
into
test
xchg
mov
pop
or
std
fimul
ds
adc
fs
or
pop
cdq
mov
jnp
push
test
mov
loop
cmp
daa
xor
mov
mov
in
fisttp
int3
outs
fist
retf
cmp
pop
xchg
inc
fldenv
cmp
xor
scas
jp
loop
rol
mov
out
xchg
mov
sub
or
push
adc
shl
mov
mov
push
sub
sub
xlat
push
push
lea
xor
mov
pop
push
scas
in
sub
add
adc
jp
mov
call
cwde
push
movs
imul
call
aam
xor
neg
pop
xor
in
outs
pop
adc
fcom
and
pushf
mov
xor
mov
xor
ins
mov
mov
imul
js
push
inc
shl
in
popa
xor
pop
fsubr
repnz
cmp
and
jge
push
jno
aaa
fndisi(8087
popf
and
add
sbb
loope
(bad)
es
mov
mov
test
push
shl
sbb
sbb
xor
push
or
dec
cmps
mov
out
popa
jge
and
das
ja
dec
bound
(bad)
aaa
jg
pushf
mov
cld
sbb
(bad)
sub
jmp
fld
cld
mov
sbb
imul
cmp
xchg
adc
jae
(bad)
jp
int
mov
in
imul
out
push
stc
inc
(bad)
or
and
iret
les
mov
retf
neg
xor
cmp
ja
and
push
scas
int
and
scas
loop
push
int3
std
mov
sub
adc
out
xchg
pop
jg
cli
div
mov
inc
sbb
mov
push
rcr
loop
test
leave
or
fbstp
push
add
rcr
jg
test
aaa
cmc
pop
cmp
fisub
adc
into
stc
jns
fwait
je
xchg
xchg
fs
cmp
pop
jp
dec
add
sub
xchg
pop
jne
movs
pop
push
fistp
sbb
rcl
xor
mov
and
xor
gs
mov
sbb
stc
mov
in
mov
mov
xor
push
stos
mov
les
pushf
mov
setno
mov
cs
and
ins
xchg
push
push
imul
mov
fimul
mov
call
add
xchg
jmp
ret
push
pop
xchg
pop
pop
ds
mov
(bad)
dec
push
mov
pop
jge
jp
xor
lea
bound
jl
pop
clc
ret
in
adc
and
mov
ficomp
aaa
fisub
outs
pop
mov
ins
cs
and
hlt
pop
sub
lock
lock
mov
fwait
cmp
daa
push
sub
dec
mov
lods
jge
mov
aad
pop
pop
pop
mov
cmp
and
fadd
fiadd
enter
cmp
or
mov
out
retf
and
ret
cld
test
call
pop
pushf
test
and
xchg
or
pushf
push
inc
mov
int3
push
sub
xchg
jmp
add
int
cmp
mov
inc
scas
test
xlat
dec
push
pop
repnz
xor
cmc
or
and
out
lahf
push
push
push
scas
push
gs
jnp
mov
aad
fwait
xchg
lds
out
mov
shl
or
and
push
hlt
add
and
pop
add
or
shr
adc
add
cmp
xchg
mov
sbb
mov
fbstp
push
or
pop
data16
stos
push
mov
mov
call
mov
xchg
jecxz
into
jp
cmp
rcr
mov
fld
idiv
sbb
or
pop
pop
adc
mov
popf
sahf
xchg
cwde
ins
push
lods
sbb
push
pop
sbb
test
jae
int3
xor
fs
fs
mov
cmp
scas
test
xchg
mov
pushf
popa
movd
loopne
inc
xchg
cmp
xor
xchg
clc
fild
aad
push
inc
cwde
lea
(bad)
push
retf
jle
pop
jnp
mov
jmp
inc
and
jb
xor
js
ja
jg
test
cmps
jle
mov
dec
aam
fidivr
cdq
xchg
in
cld
int
pusha
push
xor
lods
dec
push
adc
shl
enter
add
mov
add
dec
mov
dec
dec
and
ins
mov
movs
std
sub
std
aad
(bad)
fldcw
repz
xor
cmp
mov
jmp
cli
pop
push
jb
out
and
sub
mov
pop
cli
jo
popa
pop
sti
call
xchg
adc
inc
psubq
outs
push
retf
add
fs
call
in
frstor
call
ins
stos
mov
dec
test
fdiv
icebp
scas
mov
ins
sbb
mov
jno
add
sub
mov
mov
inc
jnp
cmps
mov
lock
out
mov
scas
ds
add
in
enter
pop
push
cmp
gs
jge
inc
ret
mov
and
stos
cmp
mov
jb
dec
xchg
repnz
stos
outs
shr
into
dec
mov
dec
je
sbb
or
out
test
test
aad
(bad)
leave
mov
clc
dec
inc
call
dec
mov
mov
jne
pusha
xor
leave
xchg
lods
inc
mov
dec
and
das
and
sbb
mov
sbb
mov
adc
int3
inc
mov
add
and
sbb
repz
(bad)
pop
and
mov
into
lahf
(bad)
in
sbb
add
push
push
les
test
out
push
mov
adc
inc
das
sahf
shr
addr16
ret
jmp
lahf
repnz
cmp
pop
mov
jecxz
mov
es
ror
add
and
mov
in
(bad)
ins
push
(bad)
std
repnz
inc
xchg
fdiv
imul
icebp
mov
cmp
fwait
sub
jo
std
and
jge
in
xor
mov
(bad)
mov
(bad)
popa
loope
inc
push
leave
push
add
dec
dec
icebp
sub
sub
and
push
xor
inc
mov
mov
jns
aaa
rcl
aam
ins
ins
sar
int
push
pusha
push
test
in
pop
jle
cld
and
push
xor
in
push
data16
xchg
ja
pushf
das
add
push
xchg
sar
shr
pop
test
pop
fst
ret
jle
inc
or
add
inc
push
inc
mov
jmp
stc
out
cmp
mov
jae
push
push
cmp
jb
xchg
cdq
cmp
scas
and
sbb
jae
sbb
repz
(bad)
jno
fisub
or
iret
mov
jge
lods
stos
mov
call
cmp
or
scas
sub
inc
pop
mov
prefetcht0
icebp
leave
jno
add
stc
loop
cmc
leave
and
xchg
sbb
mov
jp
ret
ror
fld
getsec
test
dec
xor
or
dec
sub
mul
loop
ins
cld
and
test
mov
and
pop
shl
icebp
sbb
pop
jmp
sti
je
ss
and
cmps
aaa
sbb
push
push
test
stos
lods
jb
mov
adc
sbb
outs
inc
les
xlat
adc
push
out
pushf
jmp
dec
dec
mov
pop
and
adc
fcomip
adc
leave
clc
mov
pushf
mov
jbe
inc
dec
cli
push
sbb
inc
test
cdq
nop
mov
sub
clc
and
clc
mov
add
sub
popa
xchg
iret
or
or
lods
imul
dec
cmp
sub
stc
jns
pop
lock
inc
sub
and
sub
(bad)
jns
adc
mov
inc
cmp
push
jnp
inc
enter
loope
and
mov
jo
outs
sub
movups
pop
std
mov
xor
and
push
sub
retf
stos
call
or
mov
inc
sti
js
jecxz
push
pop
inc
jbe
cmp
xor
scas
and
xor
fist
into
test
outs
cmp
in
cs
std
(bad)
cmp
into
dec
mov
add
addr16
push
(bad)
jg
pop
xor
and
fimul
lahf
mov
add
adc
xchg
jno
push
or
push
xor
fwait
add
and
dec
push
or
fidivr
outs
cli
and
cmps
repnz
test
fcmovnb
lahf
clc
mov
jb
jns
dec
popf
mov
outs
sub
jnp
sbb
and
jnp
push
pop
retf
adc
in
xor
loope
inc
xor
mov
push
(bad)
mov
aad
add
mov
dec
test
icebp
jo
pushf
mov
pop
pop
ds
mov
push
bound
jns
jl
into
loopne
daa
mov
inc
mov
repz
cld
sbb
mov
in
or
mov
and
add
jmp
pusha
mov
sar
jb
ss
xlat
imul
stos
enter
sub
cmp
fldenv
jno
popa
adc
pusha
jge
cmp
loop
mov
bound
in
ss
inc
aaa
xchg
or
cmc
dec
fdivr
(bad)
cli
mov
xor
imul
sub
fmul
adc
fisubr
cmps
pop
cld
mov
adc
dec
inc
adc
vunpcklpd
jo
test
(bad)
repz
sbb
sub
push
cmp
daa
xor
rol
aaa
xor
sub
inc
sub
clc
mov
cmp
mov
mov
mov
sub
push
mov
mov
xor
jne
sbb
mov
inc
loop
xlat
dec
xchg
xor
sahf
adc
adc
inc
mov
mov
fidiv
fwait
test
cli
sub
pop
inc
loopne
jb
movs
movs
ins
je
addr16
dec
jmp
ins
dec
lahf
movs
mov
jl
inc
rol
jg
movs
cmp
(bad)
or
test
push
in
shr
mov
dec
leave
xor
test
mov
fld
mov
pop
mov
mov
xchg
pop
pusha
(bad)
push
mov
dec
sub
mov
call
mov
fadd
jae
outs
dec
push
clc
aas
or
push
adc
jecxz
adc
dec
pop
cmps
in
xchg
fcmovu
cmp
jecxz
pop
xchg
and
push
jnp
fs
push
xor
fisubr
scas
pop
cmp
js
ss
rcl
test
add
sbb
std
pop
jge
xchg
add
push
dec
cmp
clc
mov
fmul
push
cwde
shl
xchg
popa
ja
outs
fs
sbb
fsub
sbb
cdq
retf
pop
mov
mov
jecxz
fiadd
jle
fld
or
cmc
mov
mov
je
or
out
lods
clc
cli
pop
push
add
mov
mov
fsubr
xchg
dec
xor
sti
(bad)
xchg
mov
mov
mov
jo
push
aad
popf
and
mov
dec
add
daa
jg
mov
xor
or
icebp
pop
ret
and
sahf
cmp
ja
retf
ins
adc
pop
std
les
sar
or
dec
add
jo
lods
dec
push
push
enter
xchg
jmp
lock
xchg
imul
scas
std
or
or
daa
xlat
lods
sub
and
sbb
call
inc
sbb
inc
(bad)
jl
cmc
pop
mov
popa
dec
scas
cmp
xlat
fwait
pop
mov
adc
scas
stos
in
or
dec
fdivr
shl
jbe
sub
inc
pop
scas
ret
lods
sahf
pop
scas
out
in
push
int
mov
rol
aas
push
push
mov
lods
rol
mov
les
xchg
lea
add
push
or
sbb
sbb
cdq
lock
xchg
in
jns
iret
push
addr16
dec
outs
scas
or
xchg
pop
dec
mov
push
rcl
xlat
adc
xchg
inc
mov
movs
jl
mov
(bad)
adc
enter
jmp
xlat
mov
stos
mov
add
outs
adc
repnz
sub
dec
fidivr
xchg
test
lahf
xchg
push
in
xor
mov
push
mov
mul
retf
push
sub
loopne
dec
add
mov
xchg
jmp
mov
(bad)
idiv
push
imul
rcl
mov
dec
in
dec
mov
fwait
js
(bad)
in
(bad)
cmp
push
neg
int
fwait
push
xor
outs
xchg
mov
loop
fwait
dec
repz
xor
xor
jb
icebp
mov
or
test
xor
fwait
cmps
mov
nop
xor
xadd
test
jmp
jecxz
pop
call
mov
test
dec
inc
jl
div
cmp
retf
jo
(bad)
outs
sbb
and
and
bt
dec
pop
mov
adc
rcr
lock
push
imul
daa
push
into
in
jo
call
jge
ret
nop
dec
scas
std
mov
gs
daa
pop
inc
push
push
mov
stos
mov
mov
or
sahf
fcompp
popa
retf
pop
push
clc
not
daa
repnz
sbb
sbb
jnp
jb
movs
jo
ja
loope
mov
int
sahf
popf
jo
shr
pop
fimul
mov
int3
mov
pop
dec
mov
movs
addr16
out
mov
push
pop
inc
or
into
jge
in
hlt
xor
fadd
fistp
sbb
fild
outs
(bad)
pop
(bad)
jmp
mov
pop
scas
or
cmps
ds
pusha
mov
jnp
jecxz
push
jne
cmp
add
jb
xchg
jecxz
mov
xor
bound
mov
mov
mov
test
dec
sub
shl
popa
lods
lea
push
sbb
std
pop
sub
repnz
dec
adc
neg
pop
mov
mov
std
mov
pop
mov
mov
shl
stos
(bad)
jecxz
push
mov
imul
loopne
fcom
es
dec
ds
dec
repz
push
ins
xchg
std
test
xchg
mov
mov
inc
push
add
loop
jnp
cmp
add
aaa
jo
hlt
add
js
cdq
aas
jb
lods
xor
test
push
out
jmp
ins
push
movs
cmp
pop
sub
jno
popa
add
mov
cmp
mov
cmc
not
mov
mov
rol
and
dec
and
add
jns
pop
mov
(bad)
pop
repz
iret
mov
jmp
cmp
and
rcl
popa
dec
inc
adc
dec
cmps
add
sub
std
mov
std
and
mov
jae
ins
xchg
les
sub
xchg
jns
and
into
mov
push
jp
sbb
push
sbb
adc
cmps
ins
xor
sti
inc
sub
scas
jmp
cmps
adc
cmps
jl
int3
stos
adc
mov
mov
xchg
jbe
out
call
lods
shr
out
sti
push
inc
inc
jecxz
xchg
push
stos
js
inc
fcmovb
inc
rol
mov
xchg
stos
pop
jo
push
xchg
and
mov
jg
push
ds
rcl
leave
xchg
aam
shr
or
stc
(bad)
jmp
sbb
lds
sbb
scas
mov
xchg
popf
mov
mov
push
dec
std
or
pusha
jae
arpl
xchg
xchg
jmp
pop
arpl
call
lods
hlt
add
xor
push
or
mov
hlt
xchg
retf
sbb
adc
imul
fnstenv
xchg
pop
mov
lea
xor
mov
mov
mov
adc
cli
mov
mov
or
push
mov
sbb
aad
scas
push
pop
pusha
jmp
aaa
mov
rol
push
iret
lea
stos
push
xchg
sbb
xchg
or
sub
sbb
loope
xchg
mov
(bad)
add
mov
bound
mul
pop
pop
ins
rcr
jle
push
dec
pop
and
lahf
ins
push
popf
push
je
jno
add
fwait
lods
ja
fistp
enter
add
mov
test
pop
xchg
icebp
mov
shl
(bad)
sub
es
into
rcl
jns
mov
dec
sar
and
aas
scas
sub
(bad)
adc
fdiv
loope
mov
push
jns
cmp
mov
xchg
xchg
daa
rcr
ja
movs
stos
sub
adc
dec
jno
add
imul
lods
add
fistp
lods
popa
dec
adc
adc
scas
inc
imul
cmps
and
mov
mov
test
xchg
xchg
pop
mov
fidivr
mov
push
mov
dec
popf
dec
fs
dec
cmps
js
adc
ins
pushf
adc
lods
push
push
aad
aas
hlt
ins
in
in
scas
les
sahf
aam
pop
(bad)
(bad)
setno
imul
mov
dec
sub
fcom
push
hlt
ret
push
xchg
mov
cmp
cmp
pop
jge
pop
loop
cmp
gs
retf
xor
and
dec
imul
push
jns
xchg
push
inc
and
cmp
xor
inc
jp
mov
sub
mov
loope
mov
pop
or
outs
and
jno
jle
xlat
and
int
ror
xor
leave
test
data16
hlt
out
stos
push
cmp
pop
jl
dec
and
cs
inc
adc
dec
adc
pop
scas
add
mov
xor
push
cmps
push
jecxz
outs
push
lods
sar
nop
mov
sbb
mov
call
xchg
scas
mov
mov
add
push
adc
inc
into
mov
cmp
pop
or
data16
xchg
cwde
mov
pop
push
aad
and
adc
jge
scas
jmp
fdiv
sub
inc
out
jmp
mov
(bad)
pop
sbb
ret
cwde
stos
mov
xchg
out
clc
sub
lahf
js
inc
inc
cld
and
push
es
cmps
ss
cdq
test
jae
pop
adc
xchg
and
daa
repnz
movs
mul
loope
aad
aaa
dec
std
fs
sub
(bad)
pusha
(bad)
dec
ja
xor
gs
and
pop
adc
cmp
lods
mov
mov
adc
pop
pop
jbe
test
add
test
icebp
inc
icebp
es
punpckhbw
jb
cmps
std
std
pop
push
inc
sub
int3
call
dec
out
js
stos
lea
add
je
lods
push
in
xlat
jle
mov
fist
pop
jge
mov
mov
dec
xor
jle
mov
je
cmp
pop
movs
stos
mov
add
mov
leave
dec
mov
xchg
je
test
ret
cmp
cs
enter
cmp
mov
enter
adc
mov
mov
ins
mov
dec
inc
add
fbstp
fcom
lods
adc
lahf
pop
outs
loope
(bad)
gs
out
sbb
aas
xchg
jge
and
mov
fcmove
ins
mov
sub
mov
sub
out
cld
nop
mov
(bad)
ss
rcr
xchg
xlat
je
mov
out
mov
xlat
fadd
(bad)
shl
inc
jae
(bad)
cmp
imul
mov
arpl
dec
lahf
push
pop
js
fwait
add
sub
fmul
aas
clc
sbb
repnz
jl
sub
pusha
(bad)
into
xor
jb
fiadd
jge
in
nop
jmp
stc
and
mov
aaa
mov
push
js
test
cld
mov
inc
into
stc
jnp
ficomp
stos
repnz
cmp
cmp
push
ret
or
mov
cmc
mov
(bad)
or
mov
jns
jb
mov
mov
jns
or
cmp
jnp
push
fstp
outs
loop
pop
xchg
dec
xor
mov
mov
add
in
dec
xlat
test
pop
js
je
add
aam
xchg
imul
psubd
ror
xchg
inc
test
not
sub
hlt
aam
add
movs
std
fmul
adc
mov
shl
mov
sub
jb
or
ss
int3
cmp
dec
(bad)
mov
sbb
xchg
jmp
inc
mov
aas
mov
adc
daa
jns
out
movs
rcl
xor
push
mov
lea
loope
mov
pusha
push
test
mov
cmp
xor
retf
mov
js
test
adc
ficom
sbb
int
push
adc
arpl
pop
fcomp
pop
and
dec
in
xor
addr16
or
inc
mov
clc
cld
test
xchg
repnz
xchg
inc
dec
out
cmp
mov
push
jl
jecxz
out
mov
btr
ins
je
fnsave
ja
push
push
retf
push
mov
inc
mov
xchg
mov
mov
aad
(bad)
nop
pop
fcom
movs
bound
ret
sahf
aas
push
mov
sbb
pusha
push
inc
imul
xchg
mov
pop
adc
mov
fdivr
cli
retf
add
ins
and
ffree
push
ret
xor
push
fwait
xlat
ss
imul
and
and
cmp
call
jle
repnz
cmp
push
xor
and
je
xchg
push
addr16
movs
push
push
inc
(bad)
push
mov
add
pop
adc
mov
es
cmc
mov
jmp
mov
jmp
in
pop
icebp
cmp
test
cmp
cmp
sbb
xchg
into
sar
xchg
loope
fnstenv
lahf
fld
test
(bad)
jp
out
adc
std
sahf
inc
cmp
mov
jp
(bad)
and
hlt
cmp
gs
in
pop
fucomip
mov
stc
push
std
dec
sub
mov
(bad)
jge
loop
jmp
and
xor
or
and
lods
pop
mov
push
xchg
stos
into
adc
cmp
scas
pushf
sub
and
mov
dec
cmc
cwde
iret
or
ret
stos
(bad)
cmc
mov
xor
rcr
sbb
mov
push
pop
jne
outs
pop
add
mov
cld
xor
mov
inc
cmp
int
and
xchg
jo
pop
push
dec
and
or
out
push
jle
hlt
pop
lahf
movs
sub
inc
fst
fstp
dec
outs
mov
xchg
xchg
adc
cmc
xor
icebp
xchg
jo
mov
adc
mov
outs
lea
fcomp
add
dec
dec
sub
fistp
jbe
cld
xchg
std
sbb
push
dec
dec
test
inc
loope
out
jecxz
sub
daa
sub
pop
jae
or
jge
sbb
scas
scas
sub
cs
jo
dec
add
sbb
test
and
ja
call
loope
outs
addr16
pop
push
cdq
(bad)
push
mov
stos
sbb
inc
jbe
nop
jns
dec
mov
call
ror
sub
xor
lods
mov
cmp
cdq
pop
and
scas
jp
jb
int3
ds
scas
lea
cmp
mov
mov
xchg
sbb
pop
ret
push
stc
dec
gs
ret
mov
(bad)
or
out
jbe
mov
cmc
cmps
(bad)
ror
jnp
cdq
add
pop
xor
lock
leave
lods
rol
cmps
clc
pop
xchg
push
mov
pop
and
fbstp
fbstp
push
cld
(bad)
cmps
test
scas
dec
cmp
lea
push
mov
out
icebp
dec
and
test
repz
cmp
stos
aad
push
add
mov
adc
xchg
jmp
or
mov
movs
lods
add
push
inc
adc
push
add
mov
fpatan
or
or
retf
xchg
es
leave
inc
aas
and
push
aas
aad
mov
es
cs
cld
enter
cmps
mov
fs
cmp
test
in
out
jmp
xchg
cmp
mov
inc
pop
imul
cdq
adc
adc
pop
sub
retf
and
aaa
mov
mov
cmp
clc
int3
add
add
fwait
int3
mov
mov
sbb
aam
jo
xchg
inc
or
inc
push
mov
sbb
push
imul
xor
dec
nop
xchg
pop
jne
sub
lock
(bad)
cmp
jmp
lds
mov
mov
xchg
scas
pop
nop
jge
addr16
xor
sti
mov
ret
mov
mov
stc
push
inc
xor
mov
xchg
add
push
pop
fstp
outs
mov
and
sbb
ss
adc
xchg
call
bound
jnp
cmp
test
mov
lods
test
fs
push
es
xchg
inc
ins
adc
and
arpl
scas
and
mov
sub
ins
aam
sub
xchg
mov
retf
xor
xor
inc
scas
add
add
nop
arpl
sbb
aas
lahf
int
repz
cmps
js
jmp
jge
xchg
cmp
ds
jecxz
rcl
pop
stos
mov
xlat
pop
shr
in
mov
push
push
add
pop
popa
bound
ins
arpl
mov
(bad)
push
and
in
pusha
in
movs
sbb
mov
adc
cmp
mul
loope
cmp
xchg
ds
fwait
popa
xor
mov
shl
pop
out
ss
jnp
inc
xor
pop
sub
popf
shr
and
fld
imul
pop
fwait
xchg
xchg
cmp
cmc
push
rcl
lahf
mov
icebp
jno
adc
dec
les
push
call
out
and
daa
and
or
fistp
adc
lods
retf
xor
mov
fisub
je
icebp
iret
sbb
or
mov
add
jl
movs
(bad)
(bad)
jmp
xchg
or
rcr
add
mov
inc
cmp
popf
sbb
mov
imul
mov
lahf
dec
dec
mov
xchg
push
and
mov
mov
add
imul
retf
pop
xchg
cmp
lods
sti
pop
mov
retf
pop
in
mov
add
xchg
pushf
rol
or
push
jbe
push
add
fist
mov
cs
mul
dec
cmps
add
add
add
or
xor
jmp
std
xchg
inc
lea
les
shl
mov
and
scas
and
test
cwde
neg
add
cmp
mov
dec
pusha
mov
lods
mov
push
sti
mov
jl
(bad)
pop
cmp
aaa
sbb
cmp
add
popa
jecxz
ja
pop
mov
xchg
dec
aaa
sbb
arpl
cwde
or
jl
ret
jmp
sub
pop
xchg
fwait
(bad)
sbb
inc
(bad)
call
fdiv
jmp
xor
mov
ins
pop
jo
(bad)
jnp
test
add
pushf
mov
scas
cmps
ins
icebp
fiadd
(bad)
ja
inc
test
and
sub
add
inc
enter
aas
aaa
xchg
add
(bad)
aaa
fsubr
xchg
ret
push
or
push
loopne
mov
dec
sub
lds
outs
cs
dec
mov
jbe
or
mov
bound
xchg
js
jp
cmp
shr
mov
pop
das
fwait
mov
jmp
or
mov
cmp
add
fs
sbb
cmc
icebp
add
push
in
cwde
sahf
gs
scas
jl
or
xchg
test
sbb
inc
stos
repz
mov
or
sbb
(bad)
(bad)
fidiv
out
inc
test
push
in
movs
mov
cmc
jae
aad
ret
sbb
inc
jg
xor
mov
xlat
std
xlat
mov
mov
jb
js
pop
inc
inc
xchg
cwde
test
cmp
fistp
push
xchg
xchg
lods
pop
enter
push
aad
sub
mov
sub
or
pop
xlat
jmp
mov
imul
hlt
fs
pop
movs
mov
xchg
jl
pop
stos
jns
pop
leave
mov
sub
lahf
dec
fdivr
imul
cld
outs
data16
popf
xchg
pop
or
lock
inc
or
nop
jnp
dec
loope
or
ror
cmp
cmp
pop
daa
aaa
jae
xchg
dec
in
into
and
jl
aad
ss
test
xchg
cwde
retf
xor
xchg
movs
pop
xchg
repz
icebp
mov
and
fcmovb
jg
pusha
out
inc
or
outs
jns
sti
fstp
cmc
dec
iret
jmp
sbb
(bad)
stc
dec
shl
call
(bad)
mov
je
(bad)
leave
push
xchg
jp
mov
xor
xchg
(bad)
pop
push
xor
lods
inc
pusha
jle
cmp
pmuludq
jne
pop
dec
mov
mov
adc
sbb
mov
sar
mov
pop
shl
call
xor
(bad)
push
adc
push
shl
ror
ror
std
cli
push
add
mov
ret
aaa
xor
cmp
inc
dec
xor
pop
mov
cmp
pop
inc
xchg
es
adc
jno
adc
xchg
jge
es
sbb
jb
lahf
sbb
xchg
cmps
pop
mov
dec
push
inc
ins
std
sub
cmp
es
mov
call
xor
mov
enter
dec
cmp
imul
in
ja
fadd
lods
jle
loopne
in
pop
mov
mov
mov
in
inc
mov
(bad)
sbb
sbb
jbe
xchg
or
mov
call
cwde
cmp
int
mov
lods
fs
je
mov
ret
ret
(bad)
and
xchg
xchg
and
cmp
jno
cmp
add
dec
(bad)
fwait
or
mov
scas
push
rcr
add
add
imul
loope
or
icebp
push
mul
or
sti
sub
adc
jo
(bad)
lods
and
mov
push
js
imul
push
outs
jns
fist
loope
mov
add
add
add
in
inc
and
sub
test
or
daa
mov
adc
test
xor
mov
ret
addr16
pop
jmp
scas
pop
(bad)
pop
jae
or
mov
aam
or
je
pop
(bad)
fs
pop
loope
pop
jae
mov
out
call
(bad)
cmc
test
pop
fdiv
or
adc
or
xor
pop
lods
pop
jmp
push
ds
dec
idiv
mov
int
shl
mov
call
pop
mov
mov
pop
xor
sti
loope
sub
ja
push
in
lods
bnd
sbb
dec
call
mov
popa
test
cs
dec
xor
out
stos
mov
stc
mov
mov
dec
movs
push
inc
sub
inc
mov
pop
and
movs
adc
xor
shl
icebp
sbb
xchg
enter
es
stc
cmps
push
pop
and
fld
loope
je
icebp
jbe
xor
and
sub
cmp
jmp
vmwrite
(bad)
sub
scas
or
mov
call
jo
sar
inc
mov
or
jae
aas
mov
loope
mov
aad
cmp
in
std
(bad)
ret
sti
pushf
jle
ror
ficom
mov
ins
js
test
mov
adc
mov
dec
fmul
aaa
push
sub
cs
dec
xor
std
retf
jle
imul
sbb
and
and
adc
adc
shl
dec
cmp
enter
inc
add
push
cmp
out
daa
mov
test
mov
add
iret
sbb
xor
rcl
xchg
loopne
push
inc
push
lds
push
(bad)
scas
xchg
adc
ret
xchg
call
(bad)
jge
test
inc
daa
or
les
sbb
jge
cmp
cmp
(bad)
mov
inc
repnz
ror
cmp
mov
push
or
and
sbb
call
enter
int
mov
sub
jae
es
jbe
jne
xchg
xchg
sbb
daa
sbb
scas
fild
ret
iret
in
push
or
jns
cmp
push
sub
enter
dec
in
retf
(bad)
stc
push
jmp
mov
ja
jl
fimul
xlat
jbe
xor
rol
aad
or
mov
pop
loopne
jno
xor
lods
pop
addr16
cdq
mov
sbb
push
call
gs
test
jmp
xchg
jmp
out
xor
cmc
jg
out
add
not
movs
mov
leave
mov
stc
(bad)
rcr
rcl
cdq
jnp
in
dec
fsub
mov
stos
xlat
pop
call
or
loop
jge
mov
sbb
clc
stos
or
dec
mov
xchg
and
inc
push
cdq
inc
mov
mov
or
and
sub
popf
fld
popa
add
and
loop
js
xchg
xchg
les
mov
jns
pop
in
mov
jge
jae
inc
cmc
call
pop
xchg
inc
pop
push
lods
pop
daa
jmp
mov
add
test
sub
test
sub
jg
add
cdq
ss
jmp
inc
sbb
xor
loopne
arpl
shl
push
xchg
mov
pop
cmp
cmp
pusha
movs
movs
stos
sbb
jno
jne
not
cs
mov
js
pushf
and
cmp
add
or
es
pushf
out
mov
jp
jae
push
sub
daa
cli
movs
jb
shr
push
cmp
xor
xlat
aam
dec
xor
ror
call
sbb
loopne
mov
adc
rol
xlat
fist
and
pusha
cmc
(bad)
dec
es
int3
add
xchg
rcr
mov
lea
loopne
xor
and
aas
dec
dec
test
mov
push
push
or
mov
js
jl
arpl
dec
and
(bad)
mov
lea
adc
dec
pop
xor
jae
fmul
or
cmps
mov
or
cmp
lahf
je
das
(bad)
mov
sub
loope
pop
outs
add
clc
int3
retf
sbb
adc
push
or
int3
ret
mov
lahf
mov
icebp
jmp
outs
retf
jo
inc
cmp
push
or
rcl
pop
gs
les
aam
data16
test
or
and
sbb
nop
mov
cld
shr
add
and
into
push
(bad)
xchg
pushf
imul
pop
mov
pushf
movs
retf
adc
sub
or
das
repz
xchg
inc
ins
stc
aam
call
inc
icebp
xchg
call
pop
addr16
and
test
repnz
cmc
retf
scas
mov
mov
daa
test
call
mov
dec
mov
dec
xor
mov
mov
xor
mov
test
push
xchg
jno
push
cmp
nop
jbe
adc
aaa
adc
jecxz
cmp
xchg
arpl
stc
gs
or
xchg
clc
mov
aam
enter
cld
in
or
pusha
xchg
shl
in
fadd
mov
push
ror
cmp
out
outs
mov
aas
dec
xchg
out
ja
inc
xor
dec
into
jne
fwait
mov
pop
dec
aas
adc
cdq
comiss
fs
jo
jb
lods
scas
mov
ror
vxorps
shl
mov
fild
add
cwde
adc
dec
dec
push
cmps
movs
loop
cwde
sub
pop
jae
out
mov
lea
lods
jae
fadd
xor
xor
fldenv
xchg
pushf
cdq
push
jp
lods
cmp
pop
jmp
sbb
lahf
sbb
cmp
mov
(bad)
fcomp
pushf
shl
pop
rcl
test
xchg
mov
jo
test
cwde
arpl
adc
and
out
pop
pusha
cmp
pop
xchg
mov
cmp
fld
jecxz
jae
cmp
cmp
es
hlt
lahf
push
push
outs
mov
cmps
dec
(bad)
in
push
adc
adc
cs
aas
loop
adc
lods
mov
jecxz
jno
inc
push
jnp
mov
mov
inc
push
out
mov
jp
xchg
retf
or
inc
push
mov
sahf
cs
sub
dec
shl
out
jnp
(bad)
(bad)
dec
sbb
leave
xor
outs
inc
out
shl
sbb
push
jmp
mov
xor
repz
ret
nop
push
rcr
stc
(bad)
popf
daa
jmp
loope
loope
stos
fwait
sub
dec
push
sub
xor
fwait
enter
or
inc
aas
xchg
leave
push
fld
fwait
aas
mov
scas
jecxz
add
mov
xchg
call
jecxz
pop
cmp
jae
lahf
sub
sub
lods
(bad)
xor
mov
stos
test
retf
adc
xchg
cmps
xor
pushf
sbb
mov
pop
retf
arpl
dec
sub
jg
(bad)
in
int
inc
(bad)
sub
mov
sub
aaa
in
std
mov
mov
aad
aaa
sbb
mov
mov
add
and
xor
ss
add
push
cmp
pop
cmc
ret
aam
(bad)
ss
into
imul
jns
push
adc
jne
retf
and
(bad)
jecxz
xor
xchg
fisttp
or
fmul
aam
or
pop
adc
inc
loop
xchg
sahf
out
xor
jne
mov
retf
and
and
nop
sbb
fwait
cmp
jno
push
jnp
add
mov
cmps
dec
lods
je
cmp
and
jmp
lock
add
dec
inc
adc
out
lahf
sbb
jg
ret
popf
or
aas
jae
cdq
adc
adc
dec
pop
ret
dec
or
mov
lods
sbb
jnp
sub
sbb
test
jmp
mov
scas
cld
pop
ins
icebp
nop
or
shr
lds
shr
xor
loop
fcmove
rcl
in
inc
std
aaa
ficomp
(bad)
jmp
push
mov
lods
fisttp
mov
cld
popa
pop
into
push
inc
arpl
and
add
out
dec
outs
xor
jns
mov
xlat
lds
add
xor
out
popa
sub
bound
mov
mov
cmp
push
add
pop
test
mov
push
xlat
sub
add
pop
dec
jmp
xchg
add
arpl
xchg
xchg
pop
pop
and
mov
mov
(bad)
cld
pop
int
sbb
xor
not
stos
in
inc
push
call
push
out
outs
or
pop
mov
xchg
pop
pop
dec
and
push
mov
push
call
inc
inc
sbb
mov
push
test
jno
ret
call
test
outs
pushf
pop
pop
sub
ins
inc
and
mov
add
fwait
out
adc
hlt
ss
cmp
rcl
movs
arpl
or
or
and
jp
add
xchg
sbb
pop
arpl
add
int3
push
pop
pop
lds
int
popf
and
push
cmps
pop
stos
push
cmp
rol
stos
test
leave
ss
sbb
and
cmps
dec
test
ja
sbb
out
out
aam
cmp
cmc
sbb
xchg
add
bound
sahf
outs
and
or
adc
adc
hlt
jl
pop
adc
or
xor
pop
mov
push
icebp
add
and
mov
and
push
xor
sbb
sub
push
and
xor
jae
dec
mov
add
lock
dec
jge
or
sbb
push
mov
fimul
xor
retf
dec
mov
in
fstp
je
stc
mov
adc
dec
cmp
xor
(bad)
xor
fbstp
mov
clc
xor
sub
fwait
js
cmc
dec
inc
aaa
in
jl
inc
cmp
les
or
shl
fxch
xlat
repnz
sub
mov
scas
dec
out
ret
cmp
jge
sub
jb
cmp
rcr
leave
lea
ret
pusha
push
push
fwait
call
movs
xchg
push
sbb
ja
sub
cmp
xchg
sbb
push
aas
pop
sub
and
mov
mov
xchg
push
(bad)
leave
nop
outs
inc
call
inc
repnz
or
je
(bad)
adc
mov
call
sub
pop
fcmovbe
fnstsw
popa
aaa
jno
xchg
dec
leave
xchg
mov
les
mov
pop
scas
jecxz
imul
test
test
mov
jmp
outs
pop
inc
inc
xchg
push
in
push
inc
in
push
dec
clc
jne
daa
inc
(bad)
cmc
xchg
ror
scas
mov
push
popa
xor
lods
imul
(bad)
call
mov
movs
loop
pop
sbb
sub
je
loopne
or
arpl
movs
ror
ins
push
rcl
jge
ret
sahf
cmp
enter
jnp
xor
stos
(bad)
into
add
or
jo
pop
pop
mov
mov
mov
outs
rol
cmp
call
mov
xor
in
je
xor
xchg
shl
fbld
pop
cmp
lods
cli
pop
test
xor
inc
shr
daa
mov
ins
fsubr
jmp
mov
imul
sbb
data16
fsubr
dec
xor
push
out
hlt
out
out
mov
xchg
cld
mov
cmp
stc
dec
pushf
adc
cmc
test
stc
jnp
xor
add
xor
adc
mov
les
rcl
cmp
cmp
imul
scas
jb
inc
add
fwait
push
dec
test
sar
sbb
cmc
mov
call
in
daa
mov
into
cwde
sub
mov
out
mov
shl
pushf
inc
add
dec
fidivr
or
inc
in
add
push
enter
mov
push
(bad)
add
jne
addr16
aam
cmp
outs
xchg
leave
dec
cmp
sub
imul
aad
rcl
loope
popa
jne
retf
fcmove
aas
adc
ins
and
inc
mov
xor
mov
les
in
and
inc
add
daa
std
cmp
sub
or
lock
in
idiv
enter
call
hlt
inc
ds
dec
mov
xchg
(bad)
mov
inc
mov
pusha
test
mov
xor
add
adc
mov
inc
mul
cld
retf
adc
pusha
icebp
add
int
(bad)
(bad)
sub
push
xor
rcr
repz
cmp
leave
int
xchg
pop
adc
sub
mov
lods
xchg
adc
xchg
movs
push
sub
into
xor
adc
stos
pop
adc
mul
add
mov
adc
xchg
pop
mov
adc
fcmovnu
jecxz
fld
inc
mov
mov
ror
enter
out
cmp
daa
loopne
ins
dec
inc
int
rcr
add
mov
mul
mov
mov
jae
or
push
or
in
arpl
mov
fld
stc
cmp
sub
add
(bad)
mov
xor
shl
mov
xor
push
jmp
dec
and
aad
fist
loop
setns
or
ss
pop
dec
mov
pop
outs
xor
pop
scas
add
inc
mov
fwait
sbb
(bad)
dec
pop
and
jl
rol
lahf
scas
test
(bad)
cmp
icebp
repz
cmps
mov
inc
fnstenv
enter
pop
add
mov
jmp
mov
mov
cli
int3
lea
pop
repz
pop
mov
fcmovbe
es
in
sub
xchg
push
cmp
into
or
popa
mov
add
jo
add
adc
ret
addr16
(bad)
mov
pop
or
int
push
lods
nop
jae
lods
in
shufps
pop
or
add
push
add
jno
(bad)
jg
jmp
clc
aad
fs
lds
xor
aad
inc
adc
sub
pop
xor
dec
(bad)
outs
jnp
popf
push
jo
shl
hlt
test
mov
mov
leave
fimul
adc
inc
inc
xor
stos
jbe
call
mov
mov
xchg
pop
pushf
(bad)
outs
mov
js
xchg
mov
ins
bound
ret
js
into
in
lods
sbb
mov
imul
inc
dec
sar
dec
in
inc
hlt
and
push
inc
cli
push
cmps
out
pop
fnsave
cdq
je
sub
cmps
retf
xchg
xchg
(bad)
loopne
test
dec
or
(bad)
cmps
sub
pop
mov
fsub
jns
push
jbe
adc
out
es
fidivr
js
adc
shl
adc
dec
mov
push
fmul
cmp
adc
push
mov
jecxz
mov
sbb
fmul
imul
sub
fdivr
shr
adc
lds
test
rol
push
xor
inc
adc
sub
add
mov
adc
jle
add
outs
lea
push
pop
shr
fistp
adc
lods
jg
call
test
adc
add
out
jno
cmp
pop
xor
cld
shl
aad
sub
cmc
icebp
push
mov
or
or
lods
imul
xchg
and
fs
and
xchg
cdq
adc
mov
jp
sub
xchg
or
and
cs
mov
sbb
dec
mov
das
aaa
jbe
(bad)
test
ret
sub
loope
fs
xor
out
mov
mov
mov
dec
mov
inc
jmp
hlt
mov
push
mov
out
imul
(bad)
outs
dec
int3
mov
test
rcl
rcl
shl
cmp
fs
dec
adc
in
or
loope
mov
loopne
fsubr
inc
je
in
pusha
xchg
stc
fxch
mov
enter
leave
(bad)
das
pusha
lods
push
adc
cs
push
push
jge
cmp
mov
jb
dec
add
nop
mov
pop
inc
inc
inc
gs
push
leave
pop
movs
inc
and
test
mov
push
cmc
(bad)
cmp
add
popf
ds
inc
test
dec
shl
xchg
lea
jno
mov
aas
or
push
cmp
or
add
push
pop
ret
pop
dec
es
or
fcomp
push
sbb
test
sbb
mov
inc
add
add
out
cmp
jb
mov
(bad)
repz
test
xlat
shr
sbb
loop
lahf
je
xchg
loopne
ins
xchg
add
pop
test
aaa
xchg
sub
clc
mov
pop
mov
push
mov
call
(bad)
inc
ret
and
imul
jne
mov
mov
cs
pop
gs
fld
shl
aam
cwde
lea
cmp
push
pop
out
xor
push
hlt
mov
movs
ins
or
sub
xchg
shl
mov
mov
scas
pop
sub
arpl
repnz
jg
mov
pop
sbb
mov
jl
leave
imul
add
pusha
push
out
sub
push
mov
mov
inc
dec
jmp
cmps
and
ins
dec
adc
lds
shl
adc
and
mov
jae
enter
into
repnz
(bad)
sub
in
xchg
sbb
push
movs
scas
sub
mov
jp
in
ror
mov
ja
mov
outs
adc
mov
mov
mov
test
icebp
sbb
lds
cmc
cmps
cmp
and
xor
movs
out
xchg
cmp
mov
je
mov
data16
inc
add
shl
shl
test
je
fsubr
lds
and
(bad)
pop
popa
adc
cld
sbb
ins
(bad)
test
cs
push
cmp
repnz
cmps
push
mov
sub
add
xchg
xor
jnp
movs
dec
cmp
inc
sbb
ficom
push
inc
adc
out
mov
(bad)
xlat
shl
mov
pop
clc
mov
inc
mov
int
clc
stos
sub
add
dec
int3
sub
mov
and
sbb
aas
or
xor
les
add
jp
mov
push
pusha
mov
and
cmps
adc
imul
(bad)
(bad)
dec
xor
or
inc
push
push
fsubr
mov
out
in
movs
cmps
inc
push
mov
das
push
xchg
outs
mov
cmp
jb
lahf
cmp
adc
adc
push
mov
jno
sar
dec
(bad)
mov
jne
sub
jl
rcl
push
cmp
pushf
(bad)
mov
pop
ret
dec
fild
enter
cmp
jg
mov
adc
pop
(bad)
shl
pushf
in
jg
jno
mov
popa
pusha
push
dec
mov
inc
push
imul
mov
mov
test
(bad)
mov
mov
xor
bound
dec
movs
mov
xchg
push
push
jmp
imul
scas
sahf
mov
cwde
and
xor
dec
sbb
mov
out
stos
jle
aaa
jne
daa
inc
js
cmp
xchg
popf
fnstenv
imul
jle
mov
int3
push
ss
aam
jo
fcomp
out
fisubr
and
mov
enter
lock
scas
ins
cs
sub
out
lahf
mov
mov
repnz
pop
mov
in
xor
jae
xchg
mov
push
inc
dec
xor
out
cmp
inc
scas
cmps
adc
arpl
idiv
pusha
jne
repz
imul
and
add
mov
ret
mov
stos
out
mov
jns
mov
pop
push
xlat
outs
bound
ss
mov
and
ss
inc
jmp
push
jecxz
pushf
fnsave
int
fild
movs
add
mov
mov
dec
ror
es
fcom
or
repz
mov
mov
dec
dec
ficomp
jmp
jge
sysenter
fld
xchg
mov
lock
inc
mov
inc
xor
inc
(bad)
in
mov
xor
retf
mov
dec
mov
retf
cmp
test
xchg
xlat
arpl
loope
cli
arpl
mov
outs
add
jb
push
sub
outs
jp
sub
ins
mov
cmp
aas
dec
ins
fisub
add
icebp
adc
retf
rol
dec
or
pop
das
or
into
or
xor
pop
push
add
mov
out
icebp
mov
idiv
xchg
pop
out
sar
mov
repnz
sub
(bad)
repz
and
stos
mov
fcos
gs
jmp
adc
sub
aam
xchg
xchg
fnstsw
mov
(bad)
pop
(bad)
movs
adc
fwait
jae
scas
retf
stos
nop
aam
pop
fimul
jno
adc
xchg
cmps
mov
sti
add
(bad)
cld
cdq
adc
fsubr
cmp
movs
sub
jnp
mov
mov
mov
sub
out
cld
lock
sbb
(bad)
jno
retf
jo
add
sub
xchg
xchg
pop
cmp
jl
pop
sahf
cmc
pop
pop
scas
fisubr
sub
mov
ja
and
mov
lods
ret
test
lods
xor
mov
popa
xchg
cmp
xor
xchg
daa
mov
retf
mov
(bad)
sub
mov
test
icebp
mov
mov
or
stc
aad
add
xchg
test
adc
(bad)
push
or
mov
sub
fist
pop
repnz
sbb
into
adc
mov
push
add
push
or
aaa
retf
and
push
or
in
adc
test
fdivr
sti
aad
(bad)
std
mov
nop
repz
cmps
mov
test
sti
and
dec
xchg
inc
xchg
in
mov
push
gs
mov
fldl2t
lahf
ds
mov
dec
mov
mov
movs
xor
xlat
add
sub
xchg
push
mov
xor
mov
sahf
(bad)
aad
test
xor
add
loopne
mov
pop
pushf
mov
cmp
icebp
mov
out
push
push
lock
pop
sbb
mov
fcompp
bound
ins
fwait
mov
sub
rol
pop
jg
push
shl
pop
ror
scas
test
cmp
mov
mov
jbe
retf
jg
aas
jp
xchg
ffreep
ins
shld
or
mov
loope
jno
daa
cmp
cli
pusha
in
les
jo
sar
fsub
lods
jnp
jne
pusha
out
(bad)
mov
mov
imul
mov
and
scas
cmps
and
cdq
(bad)
rol
mov
je
sti
xchg
(bad)
sbb
adc
inc
xchg
cdq
in
iret
and
imul
cmp
mov
mov
inc
adc
cmp
and
loopne
xchg
xchg
loope
sub
xchg
mov
mov
mov
pop
xchg
popf
xchg
movs
hlt
push
retf
stos
and
mov
loope
jo
pushf
iret
pusha
or
jnp
jns
jno
dec
push
cld
pop
cli
push
js
pop
add
mov
out
das
fdivrp
push
in
pop
in
xchg
pop
aaa
xchg
test
cli
mov
inc
dec
test
in
ins
sub
sbb
and
in
cmp
jecxz
out
or
icebp
mov
jnp
rcl
xchg
xor
outs
sahf
neg
or
loopne
dec
sar
mov
fs
in
movs
jne
into
aaa
jp
push
hlt
gs
push
ins
cmp
into
jp
or
push
out
in
lods
(bad)
fld
or
or
std
pop
les
ror
loope
(bad)
lea
jo
ret
xor
shrd
push
mov
sbb
mov
test
push
mov
mov
int
lods
je
xchg
dec
sub
push
out
pop
fcomp
xchg
cmp
addr16
and
xor
(bad)
(bad)
jle
fisubr
sub
loope
pop
dec
push
mov
fistp
and
mov
dec
mov
xchg
push
icebp
jge
xchg
sti
jge
and
movs
ja
cld
sbb
test
and
push
jno
push
mov
add
jmp
or
cwde
icebp
inc
ret
xchg
mov
xor
jne
mov
shr
mov
fdiv
mov
xchg
lds
arpl
pop
out
and
mov
dec
jmp
aam
pop
mov
inc
dec
sub
leave
push
sbb
jl
push
or
sbb
jecxz
cli
jg
inc
cmp
push
(bad)
outs
push
sub
adc
js
dec
pop
call
outs
adc
or
repz
call
aas
inc
xchg
arpl
mov
xlat
imul
dec
in
(bad)
pop
lds
mov
add
gs
mov
sti
test
je
fcom
sbb
cmp
test
popf
and
in
out
loope
cmp
pop
sub
add
cld
imul
mov
mov
jnp
mov
xchg
inc
xchg
cmp
addr16
adc
or
inc
dec
jnp
jge
pop
test
xchg
adc
pop
into
jns
and
shl
push
ss
adc
mov
js
adc
push
cwde
addr16
call
add
dec
push
mov
fcom
fwait
add
in
sbb
xchg
(bad)
(bad)
ins
pop
in
(bad)
loope
call
pop
cmp
sub
dec
out
test
jge
sub
push
(bad)
push
xchg
lods
repnz
adc
leave
rcl
inc
push
ficom
hlt
(bad)
retf
cmp
mov
dec
(bad)
ja
or
pop
pop
mov
cld
ds
mov
lock
repz
repz
test
adc
inc
push
push
mov
cmp
addr16
xor
xlat
scas
arpl
pop
push
mov
mov
dec
jp
stos
arpl
sbb
retf
and
mov
mov
imul
retf
push
lods
mov
cmp
and
pop
push
not
cmps
sub
mov
jmp
lahf
ret
sar
rol
out
xchg
mov
dec
rcl
mov
xor
cdq
ret
mov
test
shl
(bad)
out
sbb
sub
xchg
inc
add
loopne
mov
push
push
fmul
jmp
cbw
cmp
dec
sbb
clc
cmp
xchg
jb
pop
cmp
jge
ds
jmp
jp
dec
es
mov
add
loope
lahf
xchg
inc
sahf
call
out
aad
xchg
(bad)
out
mov
pusha
shr
or
mov
lea
pop
das
loopne
stc
pop
pop
ins
mov
pop
into
fisttp
lea
pop
jbe
popf
(bad)
in
ins
fdiv
fsubr
and
sub
bound
(bad)
mov
loope
cdq
dec
sub
push
push
push
add
xchg
clc
aaa
mov
push
cmp
cwde
push
xchg
pop
js
xor
not
mov
test
jecxz
adc
gs
sbb
jp
cwde
push
push
mov
in
cdq
push
addr16
xchg
mov
and
sahf
jmp
jmp
or
add
shl
out
push
mov
in
loop
cmp
jmp
mov
dec
test
cmps
aas
push
and
inc
ret
popf
add
pop
fsubr
xchg
sar
repz
mov
dec
cld
push
lods
outs
aad
cmp
jo
add
frstor
and
inc
cs
mov
cmp
std
inc
xlat
fmul
mov
mov
jno
and
or
push
idiv
xchg
int3
jno
mov
sbb
push
mov
mov
loope
xchg
push
pop
push
cmp
les
nop
mov
arpl
sub
rcr
shr
fst
rol
popa
arpl
or
jo
mov
sbb
pop
dec
jmp
mov
add
sub
jecxz
loopne
out
fdiv
jmp
or
sub
(bad)
xchg
inc
sub
cmc
xor
cmc
mov
push
fidivr
add
sbb
mov
sub
popf
or
jmp
mov
out
mov
or
dec
push
fcom
test
xor
sub
adc
retf
fcom
jle
cmp
daa
sub
repnz
add
sub
test
cmps
xchg
lock
mov
push
push
push
clc
out
inc
sub
push
jecxz
xchg
dec
mov
push
jg
adc
les
push
imul
arpl
(bad)
clc
popf
movs
nop
int
mov
stc
cmp
lods
mov
ins
fisub
pop
retf
cwde
ret
push
(bad)
ds
dec
push
mov
lods
cmp
mov
sti
nop
inc
fisub
sub
or
ins
ja
idiv
lea
js
push
inc
mov
in
dec
xchg
push
mov
xchg
sub
add
shr
stc
or
stos
jbe
stc
call
push
dec
ficomp
movs
pop
sbb
shl
outs
dec
cld
cmps
pop
sahf
add
icebp
pushfw
mov
push
cwde
mov
xor
js
jbe
loopne
mov
dec
sbb
sub
(bad)
mov
hlt
in
imul
int
dec
sub
test
sub
sbb
pushf
movs
(bad)
xor
add
sbb
aad
aad
lds
pop
pop
push
int
loopne
mov
fidiv
test
adc
pop
imul
cmp
jnp
pushf
scas
mov
mov
jbe
jl
xchg
add
les
clc
pop
pop
add
sahf
sbb
lea
call
into
push
movs
inc
cwde
push
xchg
push
cwde
pop
bound
or
rcl
imul
inc
or
and
xchg
es
inc
int
bound
pop
mov
fiadd
dec
jg
lods
lea
ret
or
lods
and
jecxz
add
int3
aas
jle
arpl
aam
sbb
in
inc
leave
into
popf
lahf
fldcw
in
dec
inc
icebp
cmps
ja
mov
sbb
das
shl
mov
jns
jecxz
cdq
add
or
sbb
and
scas
fsub
ret
int
ds
sub
and
retf
inc
cmp
jl
pop
add
dec
xor
xor
dec
int
xlat
mov
adc
data16
and
imul
lea
fld
cld
imul
fisub
inc
mov
sbb
pushf
push
icebp
xor
inc
cld
scas
lds
cwde
sub
pop
push
jle
xchg
and
out
cdq
xchg
and
xchg
push
sub
ret
adc
sub
popa
ins
ins
ins
xchg
push
mov
in
cld
fldcw
cmc
xor
daa
xor
mov
pop
adc
daa
sti
pop
push
dec
xchg
rcr
push
es
mov
xchg
outs
xchg
fadd
and
xchg
rcl
fimul
inc
jmp
mov
aad
in
scas
or
fs
or
xchg
in
shl
mov
ins
retf
mov
push
shl
pop
hlt
lea
dec
push
cmp
mov
xchg
shl
pop
add
sub
pop
pop
push
scas
sti
in
jns
jns
cmc
push
or
fwait
in
adc
jmp
xor
aaa
mov
call
adc
out
mov
stc
inc
adc
dec
aaa
mov
jb
mov
add
mov
int
lahf
stos
xchg
push
es
sbb
rcl
mov
cmp
jbe
ins
inc
inc
in
cmp
repnz
xchg
or
mov
repnz
mov
jmp
cmps
add
pop
in
mov
je
data16
hlt
mov
xor
inc
lea
pop
mov
mov
lods
mov
sti
cmps
push
call
ret
and
dec
xchg
scas
pop
icebp
arpl
adc
mov
in
cmp
loopne
iret
push
fild
sbb
push
into
pop
test
and
sub
adc
cli
sub
dec
pop
out
jge
push
adc
scas
imul
cmps
and
cmp
push
push
cmps
and
pop
dec
mov
sub
mov
or
mov
add
movlps
imul
jmp
add
scas
test
aaa
cld
stos
and
outs
scas
pop
sub
pop
or
xor
test
int
dec
(bad)
pop
sbb
sub
xchg
sbb
pop
lahf
push
add
jge
inc
fnstcw
add
mov
push
adc
jne
push
js
and
dec
sub
bound
cld
cmps
cmp
dec
inc
and
jp
mov
inc
dec
mov
mov
jmp
push
jmp
movs
in
and
sub
outs
dec
xor
outs
jg
aaa
out
add
mov
js
push
cli
xchg
mov
sbb
nop
lahf
xchg
test
jns
test
sub
shl
add
jge
clc
cmps
pop
jb
pop
xchg
(bad)
fnstcw
pop
sahf
mov
in
outs
add
jns
ret
loopne
(bad)
and
cmc
imul
sbb
fimul
and
call
dec
movs
test
int
fistp
fld
cmp
imul
cs
hlt
or
sub
stos
arpl
sbb
popf
arpl
cmps
mov
and
jae
ss
outs
int
int3
push
cmp
shl
xor
xchg
lahf
mov
jmp
mov
pop
into
inc
sub
xchg
popa
dec
test
mov
iret
retf
addr16
pusha
int
dec
mov
push
shl
ffreep
cmp
icebp
jbe
xlat
dec
aas
mov
push
mov
lods
cmp
nop
stc
in
pusha
jno
enter
(bad)
push
jmp
in
xlat
push
jb
xchg
sub
in
add
call
outs
sar
imul
in
(bad)
leave
or
jmp
jge
fistp
add
arpl
xchg
in
pop
or
fdivr
dec
fnstcw
test
out
ret
(bad)
xchg
adc
pop
mov
inc
js
ds
jge
jmp
mov
test
dec
fisttp
jecxz
push
add
mov
xchg
mov
in
push
xchg
repz
add
les
dec
push
add
adc
mov
pop
sbb
push
enter
push
repz
jecxz
fild
shr
cmp
lods
sub
mov
or
out
and
hlt
test
in
push
or
leave
and
mov
push
ins
push
iret
dec
fsubr
cli
fwait
mov
aaa
sti
mov
mov
mov
dec
int3
mov
int3
sub
imul
mov
mov
lods
je
repnz
scas
and
add
dec
mov
push
pushf
out
mov
sbb
repz
push
call
mov
push
sub
sbb
dec
push
pop
(bad)
fs
pop
int
mov
mov
xchg
mov
rcr
mov
mul
xor
mov
loop
lods
aad
lods
leave
add
ds
into
inc
mov
push
repnz
cmp
loope
fwait
repnz
fistp
call
adc
sbb
mov
inc
xor
xor
add
sar
lahf
sbb
mov
inc
ret
mov
dec
dec
(bad)
gs
or
inc
dec
jo
fdiv
or
sub
(bad)
ins
xor
inc
lea
mov
outs
lock
js
adc
cmp
xor
je
js
loop
mov
pusha
dec
pusha
test
rcl
js
lds
cmp
xchg
fcomp
xor
scas
xchg
mov
scas
push
clc
ret
cwde
repz
in
add
dec
sbb
out
jmp
stos
in
xor
sbb
and
jnp
lds
mov
mov
push
sub
lods
inc
jno
mov
pop
sub
leave
or
xchg
rcl
outs
call
rcr
outs
(bad)
sbb
and
jo
sub
cmp
icebp
sbb
addr16
aas
cmp
pop
ss
in
leave
fimul
mov
sbb
call
sub
ret
push
in
fnstcw
add
fs
pushf
xchg
inc
loope
cmp
mov
(bad)
jbe
cmp
popf
or
mov
ret
cmps
jl
mov
hlt
scas
(bad)
pushf
fwait
mov
outs
cmc
or
add
push
fistp
mov
(bad)
cmp
jl
mov
call
in
int3
xchg
push
xor
push
mov
pop
sub
loopne
mov
cmps
(bad)
cmp
adc
ss
push
shl
mov
and
sbb
inc
jp
push
push
mov
pop
push
fcomp
btc
pop
fisubr
sbb
das
scas
aaa
loopne
inc
cmp
push
xchg
pop
xchg
pop
lods
pop
sub
mov
clc
es
pop
and
stc
push
aad
xchg
adc
push
mov
sub
loop
cld
movs
sub
dec
dec
fisub
add
fdivrp
pop
inc
cli
mov
push
(bad)
jp
aas
ins
and
sbb
jge
jns
ror
test
pop
add
mov
mov
push
inc
loope
cli
sbb
daa
sub
sub
cmp
out
ss
sar
mov
in
inc
ds
lds
mov
int
aam
int3
iret
adc
jmp
adc
sar
ficom
push
ss
lds
movs
test
(bad)
aaa
mul
mov
in
push
shl
in
or
std
mov
sub
jp
xor
cs
sub
push
or
enter
pop
mov
shl
and
movs
sbb
xor
cmps
cmps
dec
das
xor
lods
add
xor
jae
fld
xor
jmp
sbb
aaa
mov
sub
daa
dec
inc
pop
jnp
jmp
dec
stos
std
ds
mov
inc
mov
lods
xchg
mov
sub
xchg
mov
sub
sub
xlat
out
rcl
shl
ror
scas
jg
sbb
jmp
mov
js
outs
aam
cli
out
ficom
cmps
pop
inc
cdq
or
or
mov
pop
push
add
sti
or
add
ins
jnp
shl
pop
jp
mov
sbb
sub
lods
shl
out
call
jp
pop
jmp
xchg
mov
mov
sub
mov
inc
mov
pop
jae
inc
loopne
sbb
div
cmp
(bad)
fsubr
cmp
inc
cmp
retf
cmc
xchg
push
dec
push
xchg
clc
int3
mov
fidivr
xor
lods
popa
jnp
test
mov
mov
ror
fxch
ja
movs
imul
in
jmp
sub
pop
pop
sub
pop
xchg
rcl
inc
scas
push
pushf
lock
jmp
add
out
lods
rol
fist
xchg
jecxz
enter
leave
mov
int3
cmp
retf
rcl
xor
jg
das
sbb
ja
dec
mov
call
xchg
pusha
push
mov
inc
xor
call
js
pop
push
cmp
dec
jb
sti
mov
outs
inc
xor
inc
loopne
fst
das
dec
in
push
retf
jl
rol
into
jae
adc
sahf
call
xlat
or
sbb
xchg
mov
pop
mov
fadd
nop
sub
fisubr
mov
out
adc
lahf
xor
jns
dec
iret
je
adc
adc
cwde
adc
cmp
ror
sub
inc
and
add
call
xchg
inc
loopne
sub
ret
cmp
dec
dec
pop
in
mov
fwait
in
call
nop
dec
pop
jmp
loope
jecxz
xor
xor
push
and
and
popa
jmp
jg
push
hlt
pop
jmp
pop
mov
xor
inc
xchg
jmp
mov
jg
sub
test
cmp
enter
pusha
jb
(bad)
nop
sahf
retf
mov
xchg
pop
jns
shr
inc
jnp
or
mov
jnp
jnp
aaa
jp
cmc
(bad)
jo
sbb
add
dec
movs
dec
test
hlt
rcl
or
push
push
push
xor
mul
int
icebp
ss
arpl
fcomp
gs
sub
mov
pop
mov
cmp
fisttp
inc
push
das
rcr
clc
adc
test
xchg
fsubr
mov
push
test
mov
add
and
movs
pop
pop
jne
das
add
test
lods
xchg
or
adc
inc
inc
xor
mov
leave
sbb
push
xchg
or
pop
mov
adc
inc
inc
jge
jns
add
add
inc
xor
sti
xchg
lock
dec
call
inc
daa
and
pop
xchg
add
mov
push
mov
and
test
adc
bound
pop
lds
sub
jle
xchg
idiv
push
inc
cmps
push
dec
push
lds
inc
pop
and
dec
or
push
std
mov
jge
inc
push
test
xor
lods
rcl
das
cmps
sbb
inc
adc
jbe
add
fld
mul
xchg
dec
dec
stc
or
mov
add
mov
inc
push
mov
mov
aas
push
je
and
or
imul
fwait
jp
mov
jmp
add
ins
xor
in
xchg
and
jne
or
dec
out
xor
push
xchg
xchg
addr16
add
das
movs
pop
mov
inc
aas
sub
fs
lods
cdq
and
imul
xchg
loope
inc
retf
sahf
test
ret
add
pop
dec
mov
lock
xor
bts
fild
sub
adc
out
push
and
cld
jecxz
mov
inc
add
sub
scas
fistp
jl
aas
fst
inc
mov
stos
push
push
mov
lahf
js
fcomp
xchg
mov
mov
or
lahf
repnz
cwde
and
sbb
jb
sub
and
sub
into
call
mov
imul
pusha
mov
ds
fisub
inc
adc
aaa
lods
je
fucomi
in
int3
rcr
(bad)
jnp
popf
das
add
out
xchg
ds
push
lea
int3
jae
mov
ja
(bad)
retf
mov
jg
ja
ss
pop
adc
and
mov
test
cmp
sti
mov
lods
mov
jle
mov
sbb
mov
pop
dec
dec
aas
or
push
xchg
lods
out
mov
dec
std
xor
adc
xor
fild
sbb
fs
lds
lea
mov
test
imul
push
adc
scas
cmc
sub
pop
ja
rol
cs
dec
nop
(bad)
adc
sub
or
pop
mov
shl
retf
cli
mov
stc
into
imul
ffree
cvtdq2ps
fadd
pop
add
repz
and
aad
mov
xor
inc
xor
fiadd
ins
mov
push
pop
cmc
add
inc
inc
cmp
fcom
xchg
in
out
bnd
imul
mov
sbb
xchg
inc
rep
shl
mov
ret
mov
jmp
jno
sar
xchg
imul
or
mov
mov
aam
mov
sahf
xor
jns
test
mov
into
cmp
stos
ins
dec
push
push
jge
or
fwait
sbb
xor
outs
scas
xor
cmp
fstp
mov
repnz
fcmovb
rol
xor
call
je
leave
sub
fbld
mov
loop
rcl
dec
inc
jmp
stos
arpl
test
outs
fwait
vpacksswb
test
nop
std
inc
fnstcw
jle
out
pop
pop
addr16
loopne
ds
out
push
mov
pop
cdq
cmp
mov
leave
sub
imul
and
dec
push
popa
sar
ja
dec
mov
cmp
enter
inc
mov
or
icebp
scas
pop
jo
add
into
jns
aam
push
xor
shl
inc
adc
cmc
imul
(bad)
call
mov
or
das
dec
fidivr
cmc
and
fcmove
dec
movs
xchg
rcr
or
dec
sti
mov
push
jo
sbb
int
jbe
and
dec
stos
fisub
mov
enter
sbb
mov
clc
cmp
pop
repnz
rol
dec
pop
into
push
nop
or
inc
mov
xchg
js
dec
lahf
sub
dec
mov
push
jbe
adc
cdq
mov
out
ins
jne
call
mov
jle
pop
mov
inc
les
pop
cmp
and
cld
fbstp
test
pop
lock
test
fdiv
popf
aas
adc
test
pop
jg
sub
cmps
neg
retf
mov
push
rol
mov
cli
shl
sub
shr
mov
fidivr
rcr
repz
or
xlat
sahf
add
ins
je
fisub
cli
xor
jmp
pushf
sbb
jbe
jp
pop
js
cmp
dec
cld
jb
xchg
test
test
gs
jmp
sar
in
and
leave
mov
data16
out
mov
sbb
je
push
and
mov
or
fwait
sub
xchg
or
fld
and
cmps
outs
ja
loopne
pop
test
push
sub
mov
or
push
outs
push
cmp
inc
add
fadd
or
sbb
mov
scas
or
test
retf
lods
lods
out
or
fsub
jg
jo
adc
sbb
ins
hlt
lock
enter
jl
outs
xchg
jbe
jns
cmp
mov
jmp
dec
daa
into
mov
sub
std
dec
ficomp
cmp
nop
scas
ins
rol
enter
sbb
(bad)
shl
inc
jne
xchg
cwde
dec
(bad)
fild
xor
jb
pop
and
aam
pop
das
mov
imul
xlat
call
xchg
imul
push
xor
or
xchg
mov
mov
sub
pop
sahf
mov
repnz
jmp
int3
retf
fisttp
and
std
jmp
mov
push
add
sar
jb
xchg
adc
cld
(bad)
scas
xor
in
mov
mov
(bad)
je
or
sub
inc
adc
jo
(bad)
pop
and
les
lock
pushf
sbb
outs
cmp
ficomp
ds
mov
test
sub
cdq
addr16
push
cwde
mov
push
nop
inc
or
bswap
mov
sub
inc
pop
popf
in
xchg
xor
and
push
jnp
sbb
stc
or
xor
lds
outs
cmp
out
and
pop
sub
push
cdq
in
and
sahf
jae
cmp
lock
pop
mov
sub
xchg
ret
pop
mov
xchg
mov
std
adc
js
pop
jns
(bad)
(bad)
mov
iret
push
test
popf
add
test
test
les
cmp
(bad)
dec
mov
cld
retf
test
fisttp
retf
fst
pushf
mov
sub
repz
mov
xor
fdivr
sbb
push
mov
imul
mov
movs
cli
into
stos
jle
inc
je
xchg
addr16
bound
je
inc
adc
jo
cmp
push
addr16
cld
sbb
cdq
daa
cmp
adc
call
push
out
xor
aas
mov
add
in
mov
jl
push
push
xchg
jmp
enter
fwait
into
fwait
ins
xchg
(bad)
push
xchg
mov
xor
push
mov
test
sbb
mov
cmps
jno
dec
rol
mov
push
sbb
adc
mov
ficom
call
in
jp
out
inc
inc
adc
cld
fldenv
jb
dec
(bad)
mov
pop
dec
sbb
daa
xor
cmp
cmp
aaa
aaa
(bad)
loopne
jmp
push
add
pusha
js
out
ins
mov
iret
in
xchg
mov
into
scas
lds
shr
add
push
cmp
jmp
loopne
pop
int
or
rol
out
inc
call
cli
push
adc
mov
xchg
jae
int
mov
retf
fldcw
cld
pushf
sbb
push
or
dec
stc
cmp
jb
mov
jae
sti
pop
ss
rcl
add
xlat
or
jle
fucomip
cmp
sti
js
xchg
daa
out
sub
mov
xchg
xor
adc
shr
mov
xchg
jmp
mov
iret
nop
aas
mov
rcl
out
mov
ins
xor
shl
adc
cmp
pop
mov
bound
call
fst
ret
add
popf
pop
xchg
mov
pop
les
in
(bad)
sub
mov
cmps
adc
outs
xor
stc
xor
adc
(bad)
dec
mov
mov
jb
pushf
pop
dec
loop
into
sbb
inc
bound
fdivr
sbb
and
stos
iret
out
add
xchg
xchg
cs
gs
leave
dec
dec
xchg
cld
rol
mov
(bad)
std
jmp
inc
inc
out
cmp
mov
sti
sbb
ja
int3
test
sub
mov
jmp
jg
ss
cwde
mov
test
fist
ins
jl
xor
test
mov
add
push
mov
cmps
loop
and
mov
mov
movs
test
dec
dec
(bad)
aad
das
fbld
mov
inc
cmc
not
mov
popa
wbinvd
hlt
in
push
sbb
int
rol
cmps
mov
mov
mov
movs
sbb
jecxz
loop
sub
mov
sbb
add
int
mov
inc
enter
(bad)
fxam
add
daa
jmp
or
mov
push
fiadd
enter
push
push
bound
pop
rcr
leave
lods
pop
scas
in
call
mov
stos
pop
jae
mov
in
shr
xchg
jbe
pushf
jmp
adc
cmps
fiadd
mov
mov
pop
retf
cli
sti
popf
stos
aaa
add
retf
fs
aaa
jb
lods
mov
arpl
stos
and
or
pop
cmp
sub
pusha
int
aam
bound
cld
sbb
iret
inc
mov
mov
lahf
ds
add
and
aas
inc
inc
adc
imul
push
test
adc
mov
out
add
xchg
pusha
data16
aad
add
jle
lahf
dec
pop
xchg
inc
add
stos
jg
dec
mov
xchg
mov
fstp
dec
jle
enter
pop
cmp
sbb
adc
repz
outs
xor
fisttp
and
sub
icebp
fs
outs
mul
push
inc
in
cmps
push
(bad)
sbb
push
sub
and
adc
icebp
popf
xor
dec
xchg
xor
das
mov
and
jmp
in
scas
cmps
lahf
inc
inc
inc
cmp
sti
neg
fstp
stos
mov
scas
out
data16
sar
add
fsub
or
xchg
dec
icebp
pushf
and
lds
cmc
dec
push
inc
and
iret
pop
lds
pusha
repnz
aad
mov
and
ins
int
mov
add
int3
push
jmp
out
sub
aas
mov
lea
outs
lods
jmp
jg
(bad)
aam
and
fist
pop
xchg
test
sbb
test
dec
jecxz
mov
and
popa
xlat
mov
inc
stc
movs
dec
scas
adc
mov
data16
popa
or
push
push
aaa
inc
sbb
test
dec
sbb
test
popf
cli
loopne
movs
cwde
adc
or
cdq
stos
inc
sub
es
pop
(bad)
sar
mov
test
mov
xchg
scas
test
mov
sbb
mov
jmp
xchg
mov
(bad)
mov
cmp
xchg
rcl
imul
mov
mov
sub
(bad)
push
ror
sub
xchg
push
mov
in
pushf
push
ss
sub
mov
call
repnz
div
push
mov
push
mov
(bad)
or
aad
lahf
ja
call
daa
ja
loope
aas
ret
xlat
(bad)
es
call
jle
cli
and
ror
jg
jl
shl
int3
push
paddb
xchg
(bad)
dec
call
xlat
in
push
stos
mov
mov
dec
mov
dec
mov
inc
pop
xchg
dec
stc
mov
stos
lods
ds
loope
mov
mov
sar
push
sub
movzx
push
pushf
mov
push
outs
ror
lods
pop
lods
aas
test
outs
jbe
jl
or
and
fistp
repz
shl
jno
xor
cmp
jmp
daa
scas
rcl
pop
pop
ja
test
cs
mov
cli
and
lea
mov
lods
adc
pop
xor
or
arpl
clts
add
mov
mov
push
(bad)
mov
pushf
test
pusha
inc
(bad)
(bad)
push
adc
adc
hlt
ror
in
fnstcw
retf
and
mov
bound
es
prefetch
sbb
add
or
out
pop
dec
lock
rol
jge
mov
mov
pop
lea
pop
add
out
sbb
mov
mov
das
repz
inc
cwde
(bad)
adc
ja
retf
and
mov
loopne
addr16
sub
shl
sbb
add
jbe
fidiv
push
iret
icebp
mov
sbb
aaa
test
jmp
push
ins
xchg
syscall
mov
dec
cmp
hlt
xor
add
fistp
scas
dec
xchg
jo
jae
dec
adc
or
retf
aad
cmp
cmp
inc
popa
frstor
shr
pop
call
lods
sub
movs
jbe
dec
fisttp
and
retf
(bad)
jmp
pop
aaa
out
fidivr
push
push
inc
inc
addr16
dec
pop
pusha
and
jmp
sub
dec
js
shl
or
xchg
in
cmp
(bad)
sbb
sub
mov
mov
imul
or
repnz
push
cmp
es
call
mov
sub
xchg
mov
movs
fs
or
mov
jnp
out
mov
ret
aas
into
mov
jmp
and
cmp
out
or
mov
lock
adc
mov
test
inc
test
leave
and
xor
or
dec
into
addr16
adc
lea
xor
lods
mov
jmp
mov
enter
jne
pop
stos
ja
mov
cmp
in
repnz
or
jae
jle
mov
test
ins
test
cwde
pop
mov
sub
push
mov
jae
pop
(bad)
add
ret
cs
push
cli
test
scas
mov
xor
dec
xor
inc
push
mov
add
mov
test
xchg
bound
rcr
sbb
inc
inc
sbb
(bad)
enter
out
mov
xor
test
or
aas
cmp
xchg
pop
cwde
inc
push
jg
out
mov
jp
push
pop
pop
mov
mov
addr16
cmp
loopne
imul
dec
scas
jne
xor
xchg
xlat
push
(bad)
jg
jnp
int3
and
jno
lock
dec
dec
std
dec
shr
packssdw
js
stos
sbb
mov
sub
jmp
or
cmp
hlt
popf
dec
jmp
pop
pop
imul
mulps
cmp
jno
ins
retf
jb
xchg
cli
jge
inc
lahf
cmps
clc
scas
js
outs
sbb
ins
push
repnz
ja
inc
xor
inc
das
mov
xor
call
mov
adc
add
mov
mov
mov
sbb
sbb
out
sbb
movs
jp
aad
outs
sahf
sbb
popa
sub
mov
fnstenv
test
or
mov
jle
xchg
adc
mov
mov
stc
mov
in
pop
cmc
mov
sbb
jbe
push
xlat
jbe
int
jnp
jmp
jno
jge
mov
add
inc
push
dec
mov
ret
add
adc
test
and
xchg
scas
mov
sub
mov
lods
out
push
sbb
inc
cmp
nop
cmp
cmp
xor
sbb
outs
and
cmps
pop
mov
fst
sbb
push
fs
mov
and
adc
inc
out
(bad)
ds
dec
sub
jmp
adc
dec
or
(bad)
retf
pushf
addr16
mov
aam
aaa
sub
outs
xor
call
pop
rol
(bad)
retf
lock
fnstcw
ins
cmp
ret
pop
aam
xor
jl
call
mov
ins
inc
xchg
call
mov
das
(bad)
dec
fs
inc
mov
push
(bad)
adc
sub
loope
out
ret
inc
pop
mov
mov
jecxz
bound
int
dec
lock
inc
xchg
cmp
pop
push
mov
xchg
imul
push
dec
or
gs
jne
or
and
jg
stc
scas
pop
push
mov
and
pop
outs
sti
aad
ds
push
or
sbb
les
and
pop
xchg
sub
push
xchg
test
jae
add
(bad)
add
mov
popa
std
out
pop
nop
jne
call
imul
lock
jecxz
loop
cmp
mov
mov
mov
push
fistp
push
(bad)
mov
mov
cmp
das
jbe
jae
and
cmp
sub
jl
sar
ret
in
adc
js
pusha
xor
dec
mov
adc
cld
add
mov
dec
and
push
xchg
cmp
dec
push
loope
arpl
dec
in
adc
ds
xlat
or
and
inc
xchg
hlt
into
xor
jge
adc
nop
fcom
(bad)
xchg
jae
dec
nop
push
mov
mov
rcr
fld
repz
sbb
out
fsubr
push
add
cs
jle
(bad)
(bad)
ja
jge
icebp
inc
dec
lods
pop
clc
pop
mov
xor
push
(bad)
ret
push
sbb
push
cdq
es
nop
add
inc
outs
push
mov
sbb
cmp
mov
pusha
iret
adc
push
mov
adc
mov
adc
push
pop
inc
cmp
or
scas
xchg
jae
aad
xor
mov
repz
(bad)
pop
pushf
rcr
sbb
sahf
dec
pop
mov
retf
stc
stc
daa
push
daa
push
sbb
stos
fdiv
mov
clc
mov
pop
inc
push
out
add
mov
mov
mov
hlt
test
jmp
addr16
sbb
icebp
pop
jmp
retf
mov
pop
mov
xchg
adc
pop
jecxz
call
add
cmps
mov
sub
mov
pop
rcl
call
aam
xchg
lods
in
je
add
out
or
add
inc
push
sbb
xchg
inc
push
imul
pop
icebp
aam
sbb
jle
aaa
xor
and
retf
xchg
loope
mov
lods
adc
lea
lds
test
retf
mov
lahf
pop
rcr
dec
in
cmp
and
xchg
mov
je
sahf
and
inc
in
xchg
jae
or
(bad)
cli
pop
shl
or
jge
mov
inc
dec
adc
xor
and
stos
retf
repz
fistp
sbb
es
stos
aam
push
rol
mov
and
mov
sbb
push
into
cmp
adc
jge
pushf
sbb
jecxz
fwait
stos
and
inc
dec
cmp
mov
pop
or
mov
pop
dec
pop
push
add
scas
in
dec
fdiv
or
cmp
jle
int3
cmp
adc
lods
shr
xchg
in
fiadd
dec
test
shl
dec
add
hlt
jge
pop
or
cmps
and
xor
dec
sub
mov
cmc
sub
lsl
and
or
push
ret
xchg
rcr
gs
push
push
pop
scas
inc
cmp
jecxz
push
push
sub
cmp
das
outs
xchg
pop
adc
sti
pusha
das
or
cmp
add
retf
dec
cmp
dec
jns
push
cwde
dec
lods
xor
fwait
imul
das
imul
cmp
sbb
ror
jnp
mov
loopne
fldenv
dec
cmp
lods
adc
sub
fiadd
out
fld
adc
(bad)
push
outs
mov
jne
dec
push
ror
pop
leave
and
lods
sar
dec
in
mov
add
or
xor
inc
push
nop
xor
aam
fidivr
push
pop
pop
test
adc
push
fwait
mov
dec
xchg
mov
dec
(bad)
int
sub
cwde
inc
push
(bad)
in
push
or
jp
jmp
or
mov
sub
mov
jo
stos
xor
jg
je
push
dec
dec
jnp
ins
cmp
fs
scas
cmp
push
inc
fwait
adc
outs
test
aad
sbb
stos
xchg
jp
pop
lock
lods
(bad)
loopne
add
inc
loope
ret
cmp
fwait
mov
inc
dec
xor
push
dec
gs
push
bswap
fsubp
xor
or
pop
push
mov
int3
(bad)
sbb
mov
dec
adc
pop
mov
xchg
shl
daa
mov
out
pop
and
inc
xchg
out
push
lods
cmps
mov
push
pop
int
shl
out
es
lods
cli
sbb
cld
nop
cmp
(bad)
jp
fidiv
leave
mov
pushf
and
retf
sti
stos
add
dec
rol
out
xchg
arpl
xor
mov
add
enter
in
pop
xor
(bad)
dec
inc
pop
mov
mov
aas
lock
ins
jmp
imul
mov
xchg
hlt
jge
jnp
popf
fwait
daa
add
(bad)
and
in
mov
pop
popf
scas
pop
and
xlat
dec
jb
or
and
push
into
push
mov
test
xor
fwait
enter
and
aad
stos
mov
fsubr
xlat
xchg
xor
xor
(bad)
into
pop
jne
push
mov
jp
out
ret
adc
adc
fisttp
fwait
int3
ds
sub
bnd
pop
mov
stc
jnp
xchg
ror
xor
sbb
pop
add
jge
mov
jne
pushf
inc
stos
int
adc
daa
pop
inc
jb
xchg
je
repz
add
mov
in
pop
test
xchg
sbb
jg
jmp
push
addr16
shr
adc
inc
cmps
retw
dec
mov
cmp
out
stos
push
xchg
aam
inc
adc
mov
sbb
retf
pop
push
jnp
std
mov
jo
mov
repnz
sbb
fisttp
aam
xor
ret
inc
outs
add
sub
cmps
jno
pusha
(bad)
leave
ins
mov
jne
push
cs
push
fst
jns
js
(bad)
sub
add
bound
lds
adc
mov
in
jp
mov
ins
(bad)
loop
(bad)
jmp
push
in
pop
mov
hlt
push
out
sbb
lods
les
test
and
(bad)
mov
xor
ret
add
sub
retf
not
push
rol
js
mov
xor
jmp
sti
jge
loop
into
mov
mov
pop
movs
repnz
clc
pop
(bad)
push
mov
sub
mov
(bad)
shl
leave
xor
jo
ret
sub
scas
cmc
dec
mov
daa
retf
jb
sub
lds
mov
mov
push
fcmovb
pop
jg
and
aas
xor
cmps
data16
xchg
in
dec
xchg
fwait
add
adc
je
mov
fsubr
test
jl
loopne
sub
arpl
fucomip
fwait
popa
jns
inc
sbb
cmps
mov
dec
mov
and
xchg
dec
dec
push
hlt
cmp
pop
movs
movs
cmp
xchg
or
adc
dec
dec
imul
mov
iret
xchg
sbb
push
add
sti
xchg
fst
call
mov
pop
mov
ins
push
xlat
jno
add
mov
or
mov
(bad)
pusha
bound
sbb
inc
dec
mov
sahf
test
xchg
dec
stc
push
nop
pop
iret
aad
adc
dec
push
dec
sub
push
scas
mov
sub
lahf
sub
inc
out
ret
lds
sbb
mov
pushf
mov
retf
fwait
ds
or
inc
into
stos
inc
daa
xchg
ret
xor
jl
and
inc
xor
pand
jp
adc
imul
mov
mov
add
xor
pop
sbb
jo
scas
stc
imul
shr
lahf
mov
push
movs
or
adc
mov
inc
jne
shl
jle
das
ror
adc
mov
dec
fs
mov
aam
xchg
and
imul
call
aaa
sub
adc
mov
xchg
loop
xchg
imul
shl
dec
popa
fcmovu
dec
int3
xor
push
lahf
adc
mov
addr16
mov
and
add
ins
addr16
lock
fwait
retf
mov
push
push
stos
pusha
pop
jecxz
jnp
clc
adc
ins
pop
ror
fidiv
add
mov
outs
pop
pop
jmp
retf
arpl
xlat
mov
sub
std
xchg
icebp
test
sahf
dec
das
pop
sub
fxch
add
je
jmp
mov
ror
hlt
repnz
mov
stc
fcmovnu
int3
push
push
cmp
adc
ror
fbstp
aas
test
jno
lock
call
xlat
jl
push
data16
jne
adc
xor
mov
sbb
loop
jno
nop
ins
ins
mov
sbb
push
and
push
shr
mov
adc
mov
das
mov
add
mov
stos
sub
jae
in
mov
aad
sahf
aad
jg
add
dec
mov
pusha
cmc
mov
dec
lahf
call
ins
int
jnp
push
add
ror
add
cmp
xchg
nop
adc
jns
xlat
clc
push
push
dec
out
mov
or
stc
lods
jae
cwde
retf
loopne
es
nop
push
and
in
inc
jbe
lahf
ds
(bad)
int
outs
jo
ret
inc
outs
fs
shr
std
test
dec
or
dec
cmps
retf
push
sbb
jns
xor
movs
mov
pop
movs
stc
ror
iret
jns
js
or
jb
pop
mov
rcl
ds
jl
test
test
lods
aam
rcl
add
cmps
fsubp
push
jns
dec
arpl
mov
fsubr
fnstenv
push
push
daa
pop
jb
pushf
aaa
jae
add
xor
xor
push
jns
xor
mov
and
xor
add
cmps
dec
call
push
pop
inc
icebp
in
outs
pop
jmp
push
jmp
ret
(bad)
sub
rcl
mov
in
adc
xor
(bad)
in
mov
cld
cli
and
pop
loopne
idiv
push
inc
adc
stos
fisub
mov
fcomp
pop
adc
call
popa
js
and
or
mov
pop
add
stos
jnp
sbb
test
xor
mov
imul
test
mov
data16
add
popa
sbb
sar
hlt
daa
inc
test
popf
push
mov
pop
leave
call
(bad)
(bad)
stos
cmps
push
mov
dec
movs
sahf
jg
inc
cmc
movs
mov
add
mov
out
mov
movs
cs
call
mov
loop
dec
arpl
mul
fistp
in
mov
jbe
xor
mov
scas
leave
es
cli
dec
sub
push
push
jg
mov
out
out
push
call
fcmovu
stos
dec
ficom
and
sahf
inc
(bad)
stc
call
(bad)
leave
out
and
jl
sub
adc
add
js
sbb
aam
ss
das
in
daa
mov
pop
add
or
cdq
xchg
lds
ins
sub
lods
loope
adc
loopne
ret
and
inc
fsub
ret
and
dec
push
jno
cmps
and
dec
mov
mov
mov
clc
jne
xor
fcmovne
addr16
mov
pop
cmp
sbb
ins
or
neg
shl
sbb
cmp
(bad)
outs
int3
cli
inc
loopne
cwde
pop
imul
xchg
and
daa
jle
adc
das
std
pop
stos
test
loop
(bad)
loope
lahf
pop
mov
xchg
mov
mov
lds
mov
mov
add
cmp
mov
cmp
inc
mov
push
ret
mov
mov
pop
clc
xrelease
ins
(bad)
adc
mov
xor
pop
sub
daa
(bad)
call
mov
sub
loop
mov
cli
(bad)
call
push
stos
and
(bad)
adc
cmp
fisub
test
imul
mov
mov
aam
dec
mov
dec
out
adc
or
and
loope
arpl
push
xor
repnz
sub
aaa
call
lock
inc
jbe
iret
and
push
test
sub
pusha
outs
or
rol
push
retf
or
cmp
test
stc
adc
test
scas
lahf
std
ins
xchg
nop
mov
clc
pop
mov
mov
push
xor
cmps
or
sub
pop
sub
fstp
stos
aas
cmps
out
iret
mov
xchg
push
popf
sub
adc
repnz
xor
mov
imul
aam
test
fnstenv
and
popa
push
ret
hlt
sbb
out
lahf
les
mov
js
fwait
push
sbb
push
and
mov
sub
aad
sbb
xchg
rcl
or
imul
jns
(bad)
jns
sbb
add
mov
sahf
cmp
imul
adc
inc
ins
xor
and
pushf
sti
sbb
test
pusha
mov
push
pop
cli
ror
pop
lea
cli
es
(bad)
dec
lods
stos
leave
movs
into
mov
add
aam
dec
cmc
je
hlt
pop
sbb
test
(bad)
outs
aam
add
xor
(bad)
pop
mov
lods
adc
and
(bad)
es
dec
stc
fs
mov
push
sar
daa
ret
mov
fidiv
and
jb
or
fsubr
jmp
loope
and
out
or
bound
stc
mov
pop
scas
out
xor
dec
call
cdq
jbe
fs
xchg
mov
jns
jo
push
xchg
ret
popa
popa
ds
in
inc
pop
cmps
lods
retf
daa
or
cs
sbb
aaa
movs
pop
ret
dec
cmp
adc
frstor
imul
push
(bad)
dec
sar
sbb
xor
lock
pop
and
stos
or
aam
jg
call
pop
dec
mov
iret
mov
push
fsub
imul
jo
dec
nop
cmps
or
inc
adc
inc
js
les
aam
push
int3
inc
pop
inc
mov
fwait
mov
rsqrtps
xchg
and
inc
push
jle
sub
shr
retf
popf
les
dec
push
push
cli
shl
hlt
xchg
dec
inc
mov
int
pusha
jmp
loope
lock
mov
jmp
push
inc
pop
push
gs
cmp
in
lds
aad
(bad)
addr16
sbb
sahf
retf
bound
sub
rcr
(bad)
sub
stos
mov
lods
imul
inc
xchg
sbb
push
jl
clc
inc
cwde
mov
dec
call
cmp
xor
test
sbb
or
aas
mov
pushf
popa
les
sbb
pop
cld
imul
notrack
xchg
dec
add
repz
aam
adc
punpckhwd
loopne
je
push
pop
lods
sub
jae
pop
mov
xchg
pop
pushf
xor
div
jo
xor
pop
sbb
and
inc
inc
xor
mov
clc
inc
jne
popf
out
jecxz
sbb
push
aam
mov
lds
loopne
dec
cdq
mov
stos
shr
lods
pop
mov
aam
stc
mov
jo
pop
add
xlat
mov
xchg
(bad)
out
mov
add
imul
test
push
fadd
sbb
lods
push
cs
test
mov
aas
fisttp
int
add
ficomp
mov
jmp
out
test
test
jo
and
push
outs
add
std
nop
jmp
loop
(bad)
iret
ins
ja
shl
inc
xor
add
push
sbb
pop
aad
mov
daa
adc
xchg
xchg
jmp
adc
xlat
les
fmul
jno
ins
push
lods
mov
jl
xchg
sub
mov
xor
fisttp
inc
pusha
cmp
lahf
dec
and
aam
shl
or
in
push
and
xor
aas
dec
cmp
stos
cmp
ret
out
jl
ret
jb
jmp
pushf
xlat
shl
or
data16
lock
adc
cmp
dec
pop
icebp
nop
inc
sbb
mov
and
jle
mov
into
fwait
cmp
sub
xlat
xchg
cmps
sahf
jl
(bad)
fmul
mov
cmc
jnp
ja
mov
or
les
ret
imul
sub
pop
imul
jno
icebp
rol
cmp
add
inc
setp
jno
jo
js
sti
mov
cld
pusha
imul
aas
(bad)
mov
adc
mov
retf
jle
out
mov
clc
push
xchg
cmps
mov
cmps
pop
mov
mov
jmp
sbb
pop
shl
je
mov
hlt
sbb
push
scas
test
(bad)
adc
std
mov
xor
retf
jno
xor
sub
xchg
sbb
int
lods
(bad)
(bad)
out
dec
(bad)
enter
add
sbb
aas
int3
adc
mov
mov
(bad)
mov
mov
dec
into
sub
std
jl
and
cmp
(bad)
cmc
sahf
sub
and
movs
scas
push
shl
into
clc
test
cmc
mov
scas
fnstcw
jp
adc
pushf
stos
dec
dec
sbb
or
movs
leave
sar
jmp
dec
ins
xchg
in
mov
aam
addr16
ss
push
mov
mov
sbb
in
cwde
dec
xlat
pop
imul
(bad)
xor
push
xor
out
push
out
jge
std
imul
gs
push
or
sti
sbb
gs
xchg
cli
inc
jge
(bad)
mov
std
daa
pop
lock
movs
mov
pop
enter
and
imul
push
arpl
fistp
inc
push
fistp
add
xchg
push
les
stos
push
sbb
test
cmp
movs
lahf
je
add
inc
mov
and
xchg
push
aad
nop
sbb
cmps
jp
or
mov
aas
retf
icebp
xchg
mov
int3
out
xchg
fwait
mov
leave
aad
shr
xchg
adc
sub
outs
add
sbb
mov
or
and
shl
inc
pop
test
pop
ja
int3
push
repz
xor
dec
push
sbb
(bad)
jbe
iret
mov
fist
and
add
inc
push
or
inc
inc
aad
mov
out
dec
pop
fadd
(bad)
mov
popa
push
dec
in
jecxz
fwait
add
sbb
jp
xor
loop
add
sub
addr16
mov
push
xchg
mov
mov
sub
lock
dec
pop
inc
jge
js
(bad)
cmp
push
jne
ret
mov
push
dec
push
movs
call
in
xchg
add
sub
add
adc
fistp
pop
mov
pusha
mov
xlat
push
push
pop
xor
mov
mov
out
nop
or
push
les
dec
or
push
pop
jmp
adc
not
sub
pop
test
lock
xor
sbb
cdq
cli
pop
(bad)
push
not
cmp
mov
dec
inc
push
jns
and
mov
sbb
aam
test
dec
nop
push
xlat
fistp
sbb
sbb
jl
pushf
jle
xor
pop
dec
mov
add
push
out
repnz
jns
inc
add
mov
fld
sub
mov
jmp
push
sub
cwde
adc
and
xchg
jo
push
cs
shl
iret
data16
cmps
shr
mov
jne
push
aam
movs
pop
(bad)
mov
(bad)
add
xchg
push
lods
dec
nop
lock
lods
mov
jmp
fiadd
add
gs
stos
enter
cmps
sti
jle
data16
cmp
or
(bad)
test
lea
inc
push
push
dec
and
pop
xchg
add
xchg
mov
mov
xor
int3
push
push
add
hlt
stos
out
ret
sub
cmps
add
jbe
sbb
and
retf
mov
xor
fs
pop
mov
(bad)
ds
aas
lds
push
add
xchg
cdq
daa
push
cs
gs
inc
cmp
inc
cli
push
inc
mov
push
std
sbb
mov
in
sbb
mov
mov
or
fcomp
dec
add
daa
popf
push
pop
(bad)
imul
xchg
xor
push
mov
popf
mov
popa
cmc
push
sbb
sbb
addr16
mov
sbb
dec
xchg
into
or
push
xor
shl
jp
repnz
xlat
(bad)
xchg
test
(bad)
imul
dec
cmp
mov
int3
or
gs
inc
mov
shr
mov
outs
int3
mov
mov
in
jge
mov
loop
sbb
mov
or
add
mov
pop
sbb
sub
retf
inc
sar
jns
movs
pop
xchg
mov
jns
aaa
and
out
scas
inc
je
push
out
outs
mov
mov
cmp
mov
stos
ins
lods
xchg
and
jle
xchg
pop
(bad)
daa
jle
mov
cli
inc
cmps
push
inc
push
pop
in
test
std
lea
adc
ret
push
sbb
mov
jns
(bad)
call
ds
test
pop
mov
sti
jmp
ret
clc
mov
fbstp
mov
jmp
mov
xchg
push
jp
inc
cmps
test
cmc
ret
bound
cwde
xor
push
out
xlat
repz
stos
dec
int
jns
loopne
add
lods
or
(bad)
lahf
(bad)
mov
push
popa
pop
lahf
data16
sbb
sbb
pop
das
cmp
call
(bad)
cli
mov
xor
clc
jl
mov
adc
lea
pop
lock
push
push
inc
nop
mov
or
loop
repnz
lock
mov
inc
jl
sub
sbb
dec
mov
pop
pop
sbb
pop
(bad)
pop
push
mov
(bad)
cmp
bound
and
cmps
mov
xchg
loop
shld
cs
adc
jge
(bad)
mov
test
je
shr
pop
add
mov
jae
pushf
fadd
fs
mov
pusha
mov
(bad)
js
cmp
ins
sti
add
adc
in
inc
dec
loopne
and
aas
pop
mov
fimul
jle
pop
xchg
and
inc
fsubr
push
out
push
pop
and
outs
or
fisub
cwde
sar
adc
or
jmp
(bad)
mov
push
mov
int3
ret
adc
jp
add
mov
fdivr
pushf
sub
stc
test
xchg
jbe
fistp
push
clc
adc
sti
sub
outs
pop
xor
inc
out
js
(bad)
in
fwait
icebp
mov
hlt
add
push
jbe
pop
fiadd
cmp
pop
into
ja
test
cld
imul
and
hlt
jo
inc
shr
das
mov
jbe
dec
(bad)
movs
fiadd
or
test
(bad)
jle
in
adc
adc
pop
jmp
add
cmp
mov
mov
in
out
sub
test
out
in
mov
cmps
sub
inc
inc
(bad)
call
aad
int
or
cmp
lds
(bad)
ss
inc
jmp
in
(bad)
ds
scas
and
jmp
out
clc
sbb
or
pop
mov
pushf
cmp
mov
shr
mov
ds
arpl
dec
bound
imul
adc
sub
out
(bad)
out
jp
add
mov
inc
adc
test
pop
pop
jge
lock
gs
pop
adc
push
pop
pop
fild
fsub
adc
(bad)
push
cdq
leave
or
sbb
jae
jno
popf
mov
push
ss
rol
lds
fs
xor
(bad)
and
bound
jo
sub
inc
cmps
pop
mov
add
and
push
ds
movs
mov
retf
sbb
inc
inc
dec
push
ror
lods
adc
cmps
ret
inc
lods
into
pop
adc
jecxz
enter
mov
sbb
or
jae
popf
jb
xor
rol
mov
mov
popf
aad
clc
retf
xchg
cmp
into
cld
push
and
xchg
jmp
call
dec
sbb
jns
mov
sahf
pushf
inc
add
mov
xchg
adc
cmp
sbb
push
mov
ret
sbb
cmp
sbb
mov
jne
cmps
mov
cmp
(bad)
cmc
mov
pop
idiv
xor
mov
xlat
shl
lock
xor
mov
fninit
sti
(bad)
xchg
mov
movs
xor
retf
xchg
popf
mov
ja
dec
sbb
push
mov
out
leave
lods
das
dec
out
and
fild
les
outs
in
mov
inc
push
dec
call
sbb
aaa
rcpps
test
ss
lahf
mov
les
and
mov
sbb
xor
(bad)
xor
lahf
and
add
or
add
push
(bad)
std
cmps
mov
not
pop
push
dec
daa
sbb
or
jmp
sti
pop
cmps
pusha
pop
hlt
out
and
outs
popa
cmp
adc
scas
adc
mov
inc
and
daa
xchg
(bad)
cmps
inc
mov
push
cmps
(bad)
(bad)
cmp
push
outs
lods
and
mov
ud0
xor
rcl
push
xchg
repnz
xchg
dec
aaa
or
test
aam
popf
sahf
push
jecxz
fcom
push
pop
mov
push
fcom
push
dec
mov
xchg
ja
mov
fucomp
int3
xchg
fistp
enter
into
pop
push
inc
mov
stos
cmp
push
add
les
and
cmps
sub
js
mov
mov
out
mov
mov
mov
leave
jl
arpl
call
es
jo
loope
sbb
mov
outs
push
scas
mov
loop
and
ficom
adc
imul
xor
or
outs
aas
xchg
mov
add
xlat
mov
dec
sub
push
push
sub
and
outs
call
cmp
pop
fs
mov
out
inc
dec
dec
cdq
sbb
sar
mov
adc
rcr
pushf
dec
push
nop
pop
mov
cmp
or
dec
and
pop
sub
les
adc
cmps
sbb
sub
shl
inc
pop
test
pop
jno
in
pop
popf
xor
or
or
xchg
pop
jp
out
mov
pop
les
popa
mov
or
mov
pop
xor
out
pop
xchg
cmc
jno
ret
or
cmps
mov
clc
mov
movs
aas
loopne
in
xor
loope
or
cmps
xlat
dec
cs
jl
out
in
xor
add
(bad)
outs
push
cmp
outs
xchg
sbb
mov
std
dec
jb
jp
push
test
inc
sbb
sbb
repz
cmp
add
ret
out
adc
out
jne
loope
fstp
call
call
call
mov
ss
sbb
ins
lods
sub
stos
in
loope
sub
sar
adc
popf
xor
sub
pop
leave
mov
xor
mov
push
lods
inc
adc
call
mov
nop
lods
popf
jp
and
dec
mov
jmp
dec
retf
mov
shl
mov
pop
push
pushf
sbb
pop
cdq
or
icebp
jmp
lds
sub
lods
and
(bad)
mov
out
mov
xchg
cmp
jp
mov
dec
iret
push
cs
std
xor
clc
gs
pop
sub
es
xchg
xor
jno
add
mov
stc
hlt
mov
sahf
rol
in
xor
cli
jno
xchg
retf
aas
mov
xchg
adc
lock
fs
jno
push
iret
pop
dec
cmps
in
push
popa
into
or
popa
mov
jmp
push
popa
add
mov
xchg
arpl
repz
jae
push
popa
mov
inc
push
dec
lods
cld
jno
xor
or
in
lahf
out
loop
jae
jae
xor
addr16
in
fcomp
data16
ja
sbb
pop
mov
cmp
inc
jnp
cmp
mov
test
adc
xor
retf
sub
and
int3
cld
push
mov
lea
jmp
add
mov
jmp
inc
jp
pop
repz
xchg
loope
dec
pop
mov
icebp
xchg
jmp
jp
rcl
xor
adc
jp
cli
aas
movs
cmps
ins
out
inc
dec
jmp
sbb
rcr
das
xchg
push
xor
sub
call
bound
jno
sub
mov
out
out
add
dec
sbb
outs
out
mov
mov
xor
push
addr16
push
jno
push
enter
and
jo
mov
and
neg
int
inc
mov
popa
pop
stc
int3
nop
pop
xor
test
inc
daa
add
inc
xchg
xor
push
sub
sbb
mov
mov
int3
bswap
mov
(bad)
cld
fs
add
jmp
call
inc
mov
je
pop
xchg
int3
xor
dec
call
cld
lea
pop
inc
rol
xchg
cli
push
inc
inc
(bad)
out
pop
fs
dec
inc
popa
dec
or
push
sbb
iret
add
(bad)
neg
inc
mov
sub
sar
lods
outs
sub
adc
xchg
mov
dec
rol
mov
into
xchg
xor
mov
add
mov
fidivr
pop
idiv
mov
add
and
dec
mov
inc
mov
frstor
mov
sub
pop
add
adc
sub
mov
xchg
mov
les
inc
in
outs
adc
es
lea
outs
xchg
mov
ss
inc
ret
(bad)
out
lock
ja
(bad)
stos
scas
add
xchg
mov
loopne
mov
call
loope
int
retf
add
xlat
mov
mov
mov
jle
sbb
xor
and
adc
xlat
adc
mov
popa
push
rcl
xchg
mov
inc
ret
cmc
out
xchg
jg
xchg
in
pop
jecxz
jg
inc
mov
mov
es
addr16
cmp
std
leave
mov
shl
retf
fstp
mov
mov
sub
in
leave
cmc
jge
and
not
sbb
jl
(bad)
xchg
scas
(bad)
jmp
push
loop
or
gs
dec
xor
mov
xor
mov
pushf
inc
clc
adc
push
mul
push
inc
mov
icebp
mov
sub
fdivp
adc
pop
call
mov
fs
and
(bad)
dec
push
(bad)
xchg
call
cvtps2pi
lock
cmc
(bad)
jmp
jb
cmps
add
cld
pop
inc
jb
mov
sub
out
mov
add
and
in
and
cmp
mov
push
je
push
pop
loopne
mov
or
xchg
jg
outs
pop
cmp
pop
inc
xor
sub
xchg
int
adc
repz
hlt
(bad)
lods
xor
sub
or
aad
push
(bad)
loopne
data16
adc
xor
aad
dec
movs
retf
into
dec
adc
adc
mov
pop
jnp
dec
dec
hlt
push
pop
ins
push
test
shr
sub
stc
std
sbb
fsubr
or
call
shl
outs
or
fs
xor
(bad)
rol
inc
retf
mov
jae
pop
dec
rol
retf
scas
ins
pop
aam
out
lods
(bad)
jle
icebp
push
mov
mov
xchg
push
pushf
mov
mov
pop
xchg
lahf
add
xchg
fsubr
pop
fs
bound
bound
fistp
adc
add
cmp
cmps
idiv
addr16
sbb
enter
daa
pop
jno
retf
inc
jne
mov
fld
ins
jo
sbb
nop
or
jbe
ins
cmc
shr
inc
push
loopne
sub
outs
sbb
leave
cmp
(bad)
aam
fisttp
adc
adc
mov
xor
int3
ja
sub
(bad)
xchg
sbb
icebp
jecxz
xlat
add
ret
loop
pop
push
push
jmp
mov
xlat
mov
jmp
loopne
or
adc
add
test
das
xchg
mov
stos
inc
retf
cmp
cmp
or
pop
xor
mov
es
mov
popf
(bad)
neg
jne
xchg
mov
push
leave
sbb
cmp
jmp
cmp
rcr
gs
pop
jmp
out
repz
or
out
mov
cmp
xchg
sbb
and
stos
test
pop
mov
lds
imul
inc
push
out
imul
out
and
arpl
cli
jp
arpl
mov
add
nop
jns
adc
adc
and
data16
mov
shl
jbe
cmp
ss
pop
push
jmp
mov
dec
out
ins
xchg
and
jo
jne
dec
push
jl
jmp
add
xchg
mov
mov
in
rcr
pop
sbb
pop
add
clc
nop
jl
mov
xor
push
mov
iret
test
xor
out
cmps
or
jecxz
dec
pop
aam
sub
ins
jl
mov
cmp
pop
das
loop
movs
push
xchg
jmp
sbb
push
mov
sub
mov
(bad)
outs
dec
loop
xchg
mov
adc
push
add
iret
pop
sbb
xor
out
push
inc
push
push
aas
pop
xor
add
push
jle
fbstp
idiv
ds
ins
jmp
xlat
adc
fild
cmp
iret
arpl
fnstcw
bound
push
int3
gs
int3
mov
mov
or
imul
fst
sbb
(bad)
xor
clc
dec
cmp
xor
xchg
adc
ins
mov
push
rep
das
jbe
test
rol
fwait
push
xor
(bad)
(bad)
dec
out
xor
xchg
pusha
cld
mov
push
(bad)
or
call
pop
push
xchg
mov
icebp
ficom
push
imul
mov
popf
cmp
fadd
push
and
sub
shl
gs
imul
mov
nop
mov
je
and
inc
lds
aas
pop
push
cs
in
shr
(bad)
retf
inc
sti
cmp
je
test
pop
cwde
or
cmps
sbb
pop
adc
jle
xor
push
retf
das
pusha
jo
and
js
fidiv
aad
xor
lock
scas
xchg
mov
mov
dec
xchg
scas
out
movs
xchg
mov
je
adc
xor
inc
sub
xchg
int3
fwait
xor
leave
data16
xor
out
and
fiadd
call
mov
jmp
xchg
or
sbb
jno
stos
add
std
nop
sbb
dec
movs
aas
stos
sar
int3
dec
ins
lea
aad
xor
in
mov
add
mov
imul
pop
jbe
xchg
cmp
push
lahf
test
push
scas
push
sbb
add
icebp
xor
adc
mov
xchg
cmp
(bad)
cmps
push
mov
dec
and
push
sub
call
and
pop
sub
jns
(bad)
xchg
lahf
jge
adc
mov
push
and
mov
inc
cwde
ja
jbe
inc
ja
dec
fs
shr
in
mov
(bad)
inc
leave
rcl
adc
mov
in
adc
mov
popa
movs
xchg
fidivr
dec
and
neg
(bad)
mov
dec
sub
ins
sub
les
iret
shr
inc
fidiv
cmc
mov
dec
mov
fwait
lock
popf
sub
xor
ja
mov
ss
mov
retf
inc
in
jmp
test
xor
jle
cs
mov
lds
ds
leave
cmp
not
ja
daa
(bad)
lods
push
inc
fsub
retf
cmp
ins
add
inc
lea
test
loop
cmp
mov
(bad)
xor
daa
sbb
sahf
push
inc
fstp
or
sbb
mov
sub
ficomp
pusha
aad
pop
retf
fmul
sahf
loop
add
jb
stc
mov
add
aaa
inc
mov
xchg
imul
xor
sub
shl
aam
addr16
sbb
mov
pop
inc
(bad)
jge
or
popa
pop
push
scas
pop
xchg
mov
imul
dec
stc
sub
stos
add
nop
js
shr
(bad)
and
xchg
sbb
inc
stos
or
leave
scas
mov
push
xor
gs
mov
cmp
fdivr
repnz
pop
pop
div
cmc
out
inc
mov
cmp
mov
jecxz
inc
sub
scas
fxsave
jnp
sti
push
enter
imul
jecxz
daa
clc
jb
lods
xchg
and
add
mov
mov
lds
out
xor
(bad)
mov
add
and
shl
mov
dec
push
imul
xor
push
loope
and
sub
push
movs
call
lock
pop
mov
retf
inc
cmp
jle
cwde
xor
pcmpgtd
pop
mov
pop
add
inc
cmp
das
test
aas
adc
in
sub
or
aaa
out
popa
push
sbb
ret
add
inc
xchg
sub
inc
push
and
out
push
xchg
push
std
in
popf
in
bound
in
mov
dec
fsubr
pushf
(bad)
jb
and
xchg
cmp
arpl
leave
push
sbb
out
jle
mov
stc
out
sub
dec
fild
pop
inc
pushf
add
pop
or
test
lahf
sbb
aad
jge
pop
ins
test
jae
jecxz
mov
sub
jmp
int
sbb
popa
lock
sbb
mov
cmp
xor
sub
int
lods
js
cmp
fdivr
in
ds
fisub
inc
ja
daa
jmp
mov
push
mov
cmp
xchg
push
cmps
cmp
stc
nop
pop
lods
pusha
push
jb
add
push
je
je
mov
push
sub
sub
sub
out
mov
imul
xchg
jl
push
push
es
fst
cmp
addr16
lds
scas
rcr
mov
popa
xchg
gs
int3
or
adc
add
jl
dec
test
outs
hlt
or
shl
test
mov
mov
ret
add
ja
sbb
(bad)
div
and
mov
push
inc
mov
sti
inc
xchg
lock
inc
ins
and
jg
pop
and
jg
pushf
and
push
push
dec
mov
loopne
mov
ficom
cmp
jno
cld
dec
mov
nop
dec
mov
ret
cmp
mov
adc
jecxz
in
jge
add
jo
rcr
(bad)
(bad)
bound
(bad)
sbb
cmp
mov
cmp
std
xor
imul
add
and
pop
adc
(bad)
jno
sbb
sub
fs
scas
mov
(bad)
mov
pop
jl
in
nop
imul
adc
addr16
or
in
mov
inc
cmc
ss
loopne
cmp
xlat
ret
pop
cmps
jb
pushf
and
cwde
out
sbb
sbb
jle
cmps
mov
push
mov
adc
xchg
loope
sub
inc
push
inc
jmp
rcr
add
lock
sbb
inc
add
adc
sbb
das
pusha
push
xchg
push
add
push
inc
es
mov
into
ja
push
jb
add
sbb
xor
cmp
push
stos
mov
pop
movs
cmp
xchg
ja
out
push
sub
inc
pushf
xchg
jl
or
xchg
lea
xchg
sub
aas
inc
cvtps2pi
rol
out
pop
add
jle
pop
push
adc
cld
mov
hlt
add
fild
ds
stc
in
addr16
std
cld
or
dec
mov
iret
dec
cmp
stos
cmp
lahf
adc
retf
xchg
pop
jno
cmps
push
sub
mov
mov
rol
ret
out
adc
jnp
dec
arpl
dec
add
adc
xor
dec
sbb
cmps
sub
add
inc
inc
sar
push
aad
push
retf
ret
les
(bad)
push
adc
add
jle
xor
pop
aam
mov
hlt
scas
inc
dec
rcr
pushf
push
mov
imul
xor
in
mov
sbb
xor
jns
fist
mov
xor
sti
movs
enter
add
xchg
lock
push
cs
imul
les
jl
aas
jecxz
or
into
push
repnz
push
inc
inc
mov
jo
mov
push
in
in
xlat
cmps
inc
jae
mov
sub
aaa
sbb
test
inc
movs
xchg
out
lods
mov
clc
das
cmp
repz
stos
or
mov
imul
sub
dec
repnz
rcr
xor
je
push
and
int3
outs
sub
fucomip
popa
fiadd
aas
(bad)
cmp
dec
push
mov
(bad)
(bad)
dec
sbb
xor
iret
dec
push
out
mov
fisttp
and
in
cmp
movs
sbb
push
xchg
movs
fisubr
sub
mov
xacquire
and
outs
jecxz
jle
sub
call
hlt
mov
outs
adc
sahf
lahf
pop
das
sbb
pop
jb
clc
lods
(bad)
scas
xlat
movs
cmps
inc
cmp
(bad)
fs
mov
mov
cmp
adc
dec
mov
pop
data16
adc
pop
jmp
bound
call
mov
mov
sub
inc
imul
std
std
repnz
adc
dec
or
jg
je
jle
stc
cli
push
arpl
mov
(bad)
pop
icebp
cmps
retf
xor
xchg
out
pusha
cmp
xchg
lahf
inc
dec
push
ds
(bad)
jp
cwde
fbld
mov
sbb
(bad)
push
sbb
mov
bound
push
rol
loop
cmps
out
std
sub
(bad)
push
rcl
xchg
dec
in
mov
cs
mov
shl
leave
jmp
hlt
add
add
mov
lods
enter
test
cmp
(bad)
lods
sar
pop
dec
test
mov
fwait
pop
add
inc
add
or
ins
mov
sbb
or
ror
or
xchg
repnz
inc
not
push
mov
lods
or
lahf
movs
xor
mov
push
retf
or
call
ins
sbb
and
test
sahf
push
call
popa
in
mov
call
cwde
jb
push
push
adc
inc
pop
dec
adc
mov
push
enter
movs
mov
int
mov
jl
adc
lock
xor
mov
cmps
jno
sbb
sub
loope
ss
in
sbb
sar
jg
aas
and
popf
repnz
jle
push
and
(bad)
and
je
imul
addr16
xchg
pop
rcr
xchg
outs
loopne
loope
cmp
and
push
xchg
mov
xchg
jp
push
push
xchg
mov
sbb
sbb
lods
outs
inc
mov
stos
rcr
(bad)
jns
mov
ins
xlat
out
sbb
les
leave
mov
je
sub
xor
cld
xchg
icebp
mov
(bad)
mov
mov
jl
int3
ja
jge
ret
mov
fs
pop
mov
repnz
xor
lock
mov
sbb
adc
cmp
xlat
ds
sub
mov
test
xchg
mov
(bad)
cmps
mov
out
push
fnstsw
xor
sti
aas
lock
mov
cmps
inc
or
cmp
push
xchg
cwde
sub
jmp
sub
xchg
imul
or
sbb
and
push
add
pop
ins
jg
xchg
test
inc
leave
movs
lods
pop
test
outs
pop
out
mov
(bad)
jmp
(bad)
ds
(bad)
loope
push
dec
cmp
dec
fcmovnbe
mov
test
xchg
dec
pop
outs
inc
inc
popa
aad
popa
cmp
sub
mov
xchg
repz
mov
fadd
pop
lahf
(bad)
mov
ja
add
div
aad
ja
ret
sub
adc
or
jge
fiadd
cdq
inc
xor
sti
ret
scas
mov
mov
or
ret
jg
mov
sbb
dec
mov
inc
adc
sbb
clc
fist
push
cmp
sub
lahf
inc
mov
xor
scas
or
js
jne
jb
les
cld
fs
xchg
stos
in
mov
ds
sti
arpl
jb
(bad)
or
lods
retf
sbb
fild
xchg
int3
jb
jmp
cmps
cmc
pop
ret
in
push
and
mov
xchg
popa
mov
data16
inc
in
mov
adc
shl
inc
pop
xor
daa
inc
test
es
stos
push
jae
pmaxub
inc
sti
or
jle
dec
sti
ret
add
(bad)
jae
aas
fld
movs
xor
ins
hlt
mov
call
stos
stos
bound
mov
adc
fisub
inc
daa
not
loope
mov
jbe
mov
out
ret
pop
sbb
aas
or
xchg
imul
ins
pop
aam
dec
or
mov
xor
dec
xor
loopne
push
loopne
int
das
push
test
fsub
in
cld
bound
inc
pop
pop
mov
inc
ror
and
into
leave
out
loop
fcom
ins
cmps
repnz
loope
test
sub
jnp
movs
adc
xchg
pop
outs
test
mov
mov
xchg
and
pop
test
sbb
or
xchg
sbb
popa
inc
scas
dec
push
sar
inc
(bad)
pop
sub
jno
sbb
xor
in
gs
mov
cwde
pinsrw
mov
mov
and
cld
ds
xchg
aad
jecxz
js
jg
cmp
jmp
mov
sub
in
dec
sub
imul
in
dec
cld
cmp
stos
mov
mov
pop
lds
sti
dec
sti
pushf
pop
pop
daa
dec
hlt
ss
xchg
inc
ins
mov
sahf
shl
pop
cdq
mov
push
int
lods
retf
pop
mov
adc
cmps
xchg
sbb
inc
shl
js
inc
push
sar
inc
(bad)
xchg
ret
dec
mov
sub
loop
push
retf
fdiv
sub
fist
fmulp
jne
fnsave
push
mov
cmp
icebp
sbb
fnstenv
push
pop
jp
mov
xor
nop
jge
hlt
cmp
mov
push
in
sbb
cmp
add
xor
xchg
dec
adc
xchg
out
out
push
jbe
(bad)
outs
cli
jae
(bad)
test
cmp
lock
sbb
arpl
dec
mov
push
push
fwait
and
cs
jge
cwde
sub
push
pop
xlat
cmp
adc
call
dec
daa
mov
xor
lods
jmp
xor
fstp
bound
mov
push
(bad)
jnp
pop
mov
shl
(bad)
cmp
shl
xchg
push
jg
push
ret
movs
add
cmp
leave
adc
in
jg
daa
or
mov
dec
mov
and
enter
int
xor
xchg
jb
cmp
jno
adc
pop
pop
jecxz
ror
sbb
je
or
push
inc
and
dec
sub
imul
inc
pop
mov
shl
jbe
fcomp
cli
mov
and
pop
and
mov
cld
push
(bad)
mov
adc
ret
lea
call
out
cmp
jecxz
add
mov
push
mov
bnd
mov
inc
adc
xor
sar
add
mov
mov
sbb
cmp
(bad)
sar
(bad)
fwait
retf
rol
mov
outs
jmp
push
pop
cmp
icebp
mov
out
and
add
dec
ds
lds
out
sti
leave
mov
leave
pmulhuw
mov
cdq
in
inc
sbb
xor
fwait
xchg
jnp
rcr
popf
push
fdivr
popa
pop
es
sub
repnz
in
es
fild
jmp
test
(bad)
shl
mov
(bad)
ftst
ss
cdq
jmp
jmp
jge
sti
mov
xchg
ror
dec
sub
and
lock
inc
iret
cmp
in
jne
outs
(bad)
je
hlt
aad
jle
add
scas
pop
out
lahf
add
and
aas
push
out
mov
fstp
lock
pop
inc
(bad)
pop
xor
cmp
and
inc
and
add
icebp
repz
icebp
sub
or
mov
aas
mov
and
and
outs
mov
test
xchg
cli
mul
(bad)
jno
fwait
inc
mov
call
shl
nop
scas
daa
lock
jnp
xor
lods
and
popf
test
cmp
push
(bad)
les
jnp
jp
dec
push
je
hlt
lahf
cmp
out
sub
loop
out
cmp
add
jns
adc
sbb
into
add
xchg
retf
(bad)
pushf
jbe
xor
pop
enter
mov
cmps
in
push
inc
add
sbb
jnp
pop
mov
test
dec
fidivr
pop
repnz
adc
ins
and
fcmovu
sub
push
and
aaa
add
popa
mov
jmp
mov
mov
jno
sub
loop
jp
rol
daa
lock
cvtdq2ps
pop
pop
xchg
jmp
outs
push
jbe
call
movs
xchg
not
loop
jle
movs
xor
add
pop
int
pop
bound
jmp
pop
push
add
mov
jge
pop
pop
xchg
xchg
jl
jo
push
in
cmp
mov
mov
pop
cmp
(bad)
or
icebp
jne
and
mov
mov
jo
(bad)
adc
xchg
xchg
imul
cmps
cmp
addr16
lods
mov
cmp
aad
retf
dec
dec
fdiv
lods
sbb
fld
sbb
xor
jae
scas
mov
xor
xor
fistp
dec
sar
sbb
(bad)
push
push
lock
out
xor
xor
shr
out
movs
enter
cld
pop
jg
mov
mov
arpl
fistp
hlt
popf
mov
cmps
not
sbb
mov
mov
repz
jo
jmp
jbe
popa
(bad)
in
xchg
xchg
push
mov
pop
and
sbb
shl
add
cli
or
test
fild
int
test
pushf
jle
add
push
rcr
dec
(bad)
xor
pop
adc
inc
mov
ss
addps
mov
leave
loope
(bad)
addr16
adc
adc
imul
add
ret
repnz
loope
inc
retf
(bad)
popa
push
das
sahf
in
ror
ficomp
xor
lea
sub
add
and
jb
popa
sub
pop
pusha
xor
mov
xchg
and
xor
jecxz
or
or
push
test
out
repz
inc
xor
xrelease
lods
sbb
inc
xchg
ins
push
retf
scas
iret
dec
rcl
jne
fnsave
adc
jb
pop
out
ror
xor
test
pop
jmp
ins
bound
jbe
in
push
pop
and
out
xchg
js
mov
cmp
add
pop
push
ja
add
es
movs
xchg
mov
push
call
cwde
pop
mov
(bad)
jecxz
push
push
add
push
push
xor
cmc
dec
enter
addr16
xchg
sub
retf
adc
cmps
xchg
xchg
pop
jb
push
nop
mov
xchg
(bad)
addr16
aaa
sbb
mov
pop
iret
pop
push
retf
out
ja
and
loope
fwait
pop
dec
pushf
and
jp
cmc
scas
icebp
pop
sub
sbb
in
ja
(bad)
sbb
aam
in
(bad)
shl
repnz
lods
mov
dec
or
mov
pushf
ss
outs
or
mov
and
movs
mov
pop
sar
out
icebp
xor
call
shl
xor
loopne
or
enter
or
mov
and
cmp
mov
mov
ins
repz
mov
stos
mov
addr16
inc
mov
movs
fimul
pop
sahf
pop
clc
mov
test
aaa
xchg
xor
lock
mov
test
movs
imul
and
cs
and
adc
mov
neg
cmp
sub
push
fiadd
aam
mov
std
dec
or
(bad)
popa
rep
test
nop
int3
and
sbb
jbe
in
xor
shr
mov
xchg
cmp
les
mov
call
push
int
sbb
retf
int3
imul
lods
cmp
pop
pop
mov
sahf
mov
and
imul
cmp
dec
push
xor
xchg
nop
mov
les
mov
inc
stos
mov
sti
sar
jl
fdiv
ficom
push
inc
dec
cmps
mov
dec
fistp
or
movs
xor
out
push
fisttp
fmul
push
jbe
into
lahf
movs
pop
outs
add
hlt
sbb
dec
and
sbb
shl
sbb
mov
cli
sub
pop
xchg
pop
ds
stc
jecxz
cpuid
pop
jae
dec
in
shl
imul
push
into
arpl
mov
paddusw
test
mov
cmps
movs
mov
dec
movs
retf
cmc
ret
(bad)
rcr
loopne
inc
jmp
cwde
into
jnp
nop
jle
xor
js
and
and
in
pusha
xchg
test
stos
in
jb
stos
test
pop
pop
test
add
add
and
xchg
sbb
or
xor
pop
xchg
aam
pmaxub
and
mov
js
in
jb
or
and
ret
arpl
mov
popf
stc
add
(bad)
outs
clc
mov
ret
adc
clc
shr
outs
cdq
xchg
gs
nop
mov
rcl
mov
xchg
loop
movs
into
cmc
xchg
lea
cdq
jbe
std
xchg
push
sub
xor
xchg
push
dec
out
sub
stos
repnz
push
pop
dec
xchg
popa
add
hlt
xlat
repz
gs
mov
ret
scas
lea
shl
movs
in
xor
sar
test
mov
or
jle
cs
and
cwde
arpl
pop
sub
rol
loop
xchg
ja
adc
sub
(bad)
mov
mov
and
mov
mov
frstor
sbb
or
ins
mov
pop
inc
ret
(bad)
push
pop
cmp
ins
cmp
dec
mov
scas
add
mov
in
push
jne
xor
imul
out
add
in
pusha
jmp
pop
rcr
xlat
cwd
fnstcw
lock
and
pop
adc
cmp
jecxz
(bad)
sbb
pop
mov
xor
gs
aas
ret
test
jns
daa
fist
mov
add
adc
or
sbb
push
dec
mov
or
dec
and
sbb
jmp
cld
push
dec
push
pop
in
sbb
adc
adc
(bad)
test
sahf
scas
ja
xor
out
xor
mov
inc
lods
popa
outs
mov
inc
push
leave
popf
add
pop
push
jno
cld
dec
movs
lds
inc
cs
xchg
dec
xor
scas
push
(bad)
fldenv
lock
mov
cmp
(bad)
(bad)
cmc
cmp
pop
neg
out
loope
out
and
mov
dec
xchg
int
fwait
rcr
repnz
(bad)
pop
nop
mov
enter
sbb
cs
cmp
ja
mov
repz
xchg
ror
je
cmp
iret
ja
or
int3
addr16
mul
dec
xor
sub
push
xor
out
xlat
jns
adc
iret
or
(bad)
jnp
stc
sahf
and
rol
push
xchg
fild
xor
adc
mov
repz
ret
xchg
or
cmp
pop
int
mov
pusha
nop
and
mov
inc
unpckhps
das
cld
leave
inc
fisub
fsub
sbb
mov
call
sub
mov
mov
dec
xchg
fistp
sbb
mov
ret
xchg
cmc
retf
inc
push
pop
xchg
stc
lds
cmp
or
std
js
mov
hlt
popf
leave
mov
jg
scas
cmp
pop
jmp
loope
add
jg
xor
jge
in
(bad)
xor
ret
subps
(bad)
adc
sbb
cmp
scas
push
mov
xor
mov
adc
retf
aad
inc
arpl
test
(bad)
xlat
fcmovnu
imul
icebp
or
call
aam
xor
loopne
or
movs
aam
xor
mov
movs
sbb
mov
fs
cmp
out
cmc
add
mov
ins
or
in
dec
in
inc
ins
sub
leave
faddp
or
(bad)
mov
iret
cmp
cli
jbe
int3
add
sub
std
add
jmp
out
pop
inc
je
(bad)
mov
push
and
popf
movs
in
xor
sub
jb
push
popa
or
mov
and
pop
test
stos
(bad)
jnp
xchg
pop
sub
mov
and
sbb
jmp
(bad)
pusha
mov
lods
dec
add
(bad)
jnp
dec
mov
mov
mov
pop
ja
inc
(bad)
xchg
js
pop
jp
lods
sbb
inc
lods
or
pop
leave
push
mov
sub
xor
sbb
aad
loope
shl
enter
inc
push
stos
sbb
mov
xor
cs
retf
pop
loop
add
xchg
xchg
in
inc
push
lea
inc
xor
sbb
pop
or
xchg
mov
jle
dec
inc
leave
lock
call
jae
jmp
xor
in
rcr
sbb
popf
ret
popa
jns
cwde
or
xchg
es
int
lea
or
inc
jmp
inc
adc
pop
loopne
pop
or
je
mov
out
push
xchg
(bad)
out
cld
loopne
inc
out
or
xchg
mov
cmc
sbb
cli
stc
jp
pop
mov
das
(bad)
(bad)
xor
test
xor
xchg
dec
inc
test
cmp
dec
and
push
fsub
push
mov
(bad)
jecxz
cdq
dec
mov
cmps
(bad)
mov
es
dec
in
jl
inc
fnstsw
scas
adc
add
fs
in
jmp
aaa
es
mov
jmp
push
lods
lahf
sub
inc
movs
push
(bad)
mov
sub
add
or
cmp
(bad)
ss
pop
fild
dec
cmp
or
pop
loope
inc
xor
sub
cli
and
and
jb
inc
push
stos
jo
popf
gs
adc
jnp
mov
inc
scas
std
in
cmp
or
dec
cmp
mov
add
cmp
jne
ds
xchg
pushf
add
fdivrp
mov
mov
retf
sbb
ror
call
or
fadd
arpl
rep
sub
shl
jbe
(bad)
mov
adc
inc
inc
and
mov
sub
popf
loopne
push
mov
mov
rcr
ins
mov
in
add
cmp
jnp
sbb
clc
pop
pop
pop
inc
inc
sbb
jmp
cmp
aad
dec
mov
jge
test
mov
daa
push
mov
xchg
test
or
jne
iret
add
jmp
mov
nop
sub
je
and
out
sub
dec
cs
sub
out
dec
jne
in
jmp
shl
mov
bound
(bad)
dec
sub
into
pop
dec
sar
pop
xchg
pop
repnz
cmp
(bad)
in
jp
or
je
cmp
int
call
sbb
dec
mov
mov
sub
inc
les
xchg
mov
push
imul
data16
(bad)
cli
inc
adc
nop
cmp
xchg
or
aaa
das
ret
std
(bad)
clc
xor
fwait
push
(bad)
ja
cmp
push
xor
mov
and
adc
clc
jecxz
push
dec
jmp
test
fcomp
shr
add
(bad)
out
mov
or
aas
das
jae
mov
jne
cmp
mov
sub
push
(bad)
sub
push
sti
inc
pop
cmp
mov
popf
ficom
cmc
pusha
(bad)
sub
pop
sub
push
pop
mov
out
pusha
imul
test
clc
mov
in
xchg
and
dec
mov
mov
push
jbe
push
jns
popf
or
xor
ss
js
icebp
nop
sub
fs
call
pop
sub
jb
mov
pop
adc
movs
(bad)
mov
pop
lods
ins
mov
stos
and
add
ficomp
pop
js
int
xchg
push
into
test
cld
test
imul
dec
jno
and
inc
xor
fs
xchg
shl
push
ret
loop
adc
std
in
mov
cli
or
xchg
jbe
xchg
jg
cdq
(bad)
sbb
ficomp
and
xor
and
jbe
ins
mov
xchg
jmp
adc
inc
in
fsubp
clc
shr
call
xchg
adc
dec
add
pop
fwait
inc
cmp
push
mov
xlat
mov
push
pop
xor
stos
push
sub
mov
mov
jmp
lods
into
jecxz
stc
cs
pusha
pop
xchg
imul
test
cmc
leave
inc
jns
xor
dec
add
lock
sti
xchg
push
push
(bad)
push
ins
mov
lock
mov
enter
out
inc
scas
pop
push
jmp
mov
out
dec
das
sub
js
test
dec
ins
xor
dec
cmp
scas
retf
sub
rcl
jg
cmp
adc
rcl
cld
fild
loope
pop
mov
and
or
dec
xchg
dec
or
ds
adc
jecxz
cmp
mov
es
(bad)
sbb
push
dec
and
fisttp
or
mov
cdq
push
arpl
cmc
xchg
mov
test
lods
jle
fist
mov
mov
es
out
mov
fidiv
(bad)
and
mov
mov
(bad)
nop
popf
xor
gs
lods
push
in
icebp
fdivr
or
mov
mov
repnz
lods
daa
xor
mul
add
out
cld
dec
inc
sub
sbb
ins
aad
dec
fimul
sbb
adc
inc
jmp
nop
icebp
mov
loopne
sub
iret
ss
fstp
dec
add
bnd
adc
ret
or
stc
mov
mov
jecxz
push
rcl
mov
je
lds
mov
popf
call
or
(bad)
adc
cmp
shl
ss
push
out
out
fisubr
sub
fiadd
push
dec
repnz
adc
(bad)
pop
push
add
sbb
add
xchg
xor
fsub
mov
std
mov
xchg
or
scas
xchg
mov
cmps
mov
out
inc
or
mov
cmp
pop
sahf
les
shr
outs
loopne
nop
push
stc
push
dec
and
ins
xor
sbb
lock
cmp
call
mov
cli
test
push
or
sub
ins
xchg
test
sar
mov
or
das
jne
cli
mov
fadd
mul
fs
jb
aad
push
add
movs
push
mov
jns
mov
xor
les
dec
push
and
call
loop
into
jbe
mov
mov
xchg
jle
jmp
xchg
mov
(bad)
(bad)
test
inc
lock
fadd
fmul
push
sub
(bad)
loope
rol
outs
shl
mov
outs
(bad)
les
sbb
ret
cli
out
or
enter
jg
xchg
push
sbb
jecxz
jo
rcr
mov
test
adc
xor
sub
inc
pmovmskb
jno
ins
xor
bound
shr
adc
xor
sbb
test
retf
mov
sahf
dec
xchg
or
ret
fdivr
loope
fistp
cmps
cmp
daa
lahf
jge
mov
fadd
add
dec
xchg
jle
xchg
rcl
fisttp
xchg
mov
sub
lahf
jns
into
rol
not
sub
push
test
adc
sbb
push
mov
cs
mov
out
xchg
fadd
xor
sub
iret
pop
add
ret
cwde
(bad)
mov
jb
and
imul
dec
sub
mov
or
jle
scas
mov
nop
mov
add
push
mov
lods
lea
sti
jmp
cld
jge
es
shr
push
mov
sbb
fnstenv
jl
sub
push
sub
das
retf
daa
fist
push
stc
ds
push
inc
aaa
idiv
jne
neg
cmps
std
cmp
or
pop
xor
xlat
div
jl
and
hlt
jb
xor
fsub
fdivr
pop
jb
hlt
sub
sbb
cmp
pop
das
pusha
les
jmp
push
and
fsub
(bad)
push
lods
ds
cmc
popf
dec
fwait
loope
cli
mov
cmps
call
mov
test
adc
add
push
xlat
pop
jnp
dec
mov
inc
xchg
lods
mov
in
cdq
mov
call
imul
jmp
jmp
adc
ja
bound
aam
les
pop
push
jno
(bad)
movs
js
sbb
pusha
test
jno
push
mov
push
xchg
out
jne
clc
mov
sub
in
js
addr16
scas
out
fsubrp
popa
and
cld
fwait
(bad)
mov
pop
sbb
dec
je
xchg
pop
idiv
mov
cwde
or
inc
xor
and
lds
mov
xchg
sub
mov
(bad)
ficom
pushf
test
and
hlt
das
fmul
outs
shl
test
je
out
ins
push
jns
(bad)
aam
cdq
xchg
xor
mov
rol
xchg
push
xlat
call
push
iret
mov
xchg
mov
adc
mov
sub
and
and
dec
popf
dec
inc
pop
mov
xchg
sub
std
lock
mov
call
mov
scas
lahf
pop
cs
jnp
in
push
add
inc
adc
jmp
mov
xor
dec
xchg
(bad)
cs
mov
mov
iret
pop
mov
in
outs
lock
or
push
adc
daa
xchg
arpl
mov
scas
stos
and
mov
(bad)
aas
cld
ret
popa
and
pop
clc
or
and
stos
dec
sbb
and
dec
push
test
add
ins
mov
hlt
dec
and
xor
stc
jle
xor
fild
and
out
imul
lods
cmps
in
mov
mov
cwde
ficomp
mov
sub
push
push
xlat
shl
jecxz
icebp
pop
ins
mov
repnz
add
pop
dec
(bad)
aad
(bad)
xor
xor
xchg
cmp
cmp
sub
popf
cli
fcmovbe
int3
mov
xchg
jb
faddp
sbb
push
sbb
push
adc
das
sbb
daa
lods
mov
cmp
xchg
mov
jle
test
rol
in
and
fadd
into
ins
mov
in
xlat
mov
fwait
cmps
and
pop
mov
sub
je
mov
in
ret
mov
or
sti
push
mov
test
pusha
sub
xlat
add
xor
or
mov
jne
loop
es
loope
retf
repnz
ficom
jo
add
mov
adc
mov
and
ins
imul
aam
shr
mov
adc
sbb
pop
dec
and
mov
xchg
stos
les
pushf
cmps
fsubr
jo
loopne
add
mov
dec
jle
inc
jo
mov
out
or
vandps
adc
inc
pop
xchg
dec
sub
callw
pop
(bad)
neg
dec
mov
mov
mov
xor
mov
xor
mov
pushf
or
cmp
xchg
addr16
pop
test
int
xor
arpl
jae
call
cmp
and
adc
not
or
jb
and
sbb
push
hlt
lods
xor
jae
ins
push
retf
xchg
sub
mov
jae
mov
and
addr16
stos
loopne
push
sbb
enter
jo
adc
or
jl
mov
xchg
jno
cwde
mov
xchg
test
push
into
out
xlat
ja
mov
push
sbb
retf
lock
nop
xor
xchg
lods
ret
ins
lock
jne
pop
pop
dec
jne
adc
pop
out
fsub
arpl
inc
das
out
(bad)
mov
dec
imul
std
or
sbb
out
push
movs
sub
mov
xchg
lods
or
je
ds
addr16
dec
mov
or
shl
shl
mov
xchg
cmc
out
inc
xor
push
pop
imul
xor
jle
mov
bound
sahf
nop
mov
adc
in
xchg
add
cli
leave
neg
pop
pusha
pop
xchg
cmps
dec
movs
and
pop
ja
inc
xchg
push
add
popf
sbb
jo
add
pop
jl
std
inc
fcom
mov
ror
cmp
jne
ror
fstp
ret
ja
dec
test
mov
rcl
mov
dec
jg
dec
pop
add
and
shl
out
cs
jns
sub
pop
push
and
js
test
in
pop
cwde
ucomiss
mov
iret
fs
add
(bad)
sub
push
lods
adc
pcmpeqw
adc
xlat
cld
xchg
mov
add
sub
inc
cwde
ret
test
push
bound
les
cmp
call
xor
adc
add
or
sbb
mov
fiadd
dec
sbb
xor
xchg
xchg
or
mov
pusha
js
imul
jecxz
out
sar
stos
pop
push
adc
sub
(bad)
movs
repnz
cld
scas
add
inc
out
sub
adc
dec
mov
sub
adc
retf
mov
sub
test
jmp
push
dec
inc
mov
fstp
retf
cmp
and
mov
mov
call
sbb
out
in
mov
outs
imul
mov
idiv
in
cwde
out
push
movs
cwde
or
mov
mov
dec
dec
es
pop
inc
dec
(bad)
xchg
pop
ds
int
cmps
rcr
fcomp
movs
xor
(bad)
cmc
pop
dec
stc
sub
ret
ret
in
mov
inc
mov
jne
mov
not
jns
scas
jbe
sub
mov
push
lds
mov
mov
push
in
push
in
xor
mov
inc
mov
mov
mov
pop
rcr
mov
mov
(bad)
push
enter
lods
fbld
out
jmp
xor
jecxz
sti
add
pop
pop
and
pop
xchg
push
add
outs
pop
pusha
cmps
xchg
sub
add
out
mov
rcr
adc
ret
dec
out
jge
ror
xchg
xor
push
out
jns
cmp
test
dec
test
sub
inc
pop
xor
movs
and
cmp
or
xor
push
mov
adc
dec
in
cld
xchg
mov
mov
test
mov
ja
dec
hlt
jb
mov
sub
cmps
dec
leave
xchg
pop
xor
repz
add
sbb
outs
and
in
mov
push
out
hlt
aas
push
(bad)
in
shr
fistp
xchg
sub
inc
(bad)
push
or
or
repnz
aam
lahf
sbb
rcl
pushf
inc
cmp
aaa
cdq
les
das
jns
shl
ins
jle
out
xlat
pop
dec
jb
xor
and
paddd
repz
fs
mov
arpl
sar
addr16
xchg
iret
mov
push
ret
cmp
(bad)
scas
dec
js
add
mov
arpl
bnd
daa
mov
nop
inc
xor
cmp
push
dec
inc
rcr
mov
ins
cmp
add
ja
push
fcmove
sub
xchg
sbb
lods
or
fcmovnb
jmp
into
push
int
sar
pop
inc
out
xor
push
push
loopne
adc
jae
int
jp
mov
mov
jne
or
and
jge
dec
cwde
jecxz
push
popa
test
sub
ins
add
dec
jae
cmp
mov
popf
jge
enter
push
inc
pop
fs
pop
xlat
scas
mov
push
jnp
sub
cld
movs
xchg
jmp
xor
test
inc
cmp
pop
fwait
sbb
inc
mov
loopne
xor
cmp
xlat
loope
sub
pop
ds
call
pusha
movs
outs
mov
sub
adc
or
mov
adc
sbb
dec
int3
cmp
dec
mov
pop
ds
arpl
add
pop
inc
out
shr
loope
dec
popa
inc
fisubr
xchg
jo
pop
jl
in
push
fstp
xor
(bad)
adc
inc
adc
sbb
cld
fwait
push
push
stc
pop
adc
fmul
enter
dec
ins
push
dec
int
pop
cli
fcmovu
nop
ins
je
ds
les
mov
cld
stos
test
cs
dec
ds
into
inc
or
mov
das
pop
sbb
fnstenv
pop
in
ret
jbe
fwait
mov
xor
adc
mov
movs
dec
mov
xor
pop
mov
sbb
(bad)
(bad)
inc
call
popf
fisttp
adc
mov
sbb
dec
push
push
xchg
push
sub
xchg
cmp
push
jbe
arpl
sub
add
movs
and
in
rcl
cmp
mov
out
cmp
cmp
mov
inc
mov
jne
into
sbb
sbb
sbb
stos
mov
inc
sub
ret
adc
mov
retf
sub
and
(bad)
sahf
je
gs
mov
sub
sar
jp
ins
fs
mov
xor
or
stos
es
mov
lods
out
cmc
out
xchg
stc
mov
cmp
(bad)
fld
sbb
rol
pop
add
sbb
cmc
lods
enter
movs
pop
xor
and
push
or
xlat
fdivr
xor
pop
xor
jmp
hlt
je
pop
push
rcl
or
icebp
sbb
pop
in
les
dec
xor
outs
dec
jae
adc
fild
(bad)
jp
push
(bad)
mov
mov
popf
int
popa
xchg
aaa
js
push
or
shr
push
js
jmp
mov
aas
cld
inc
enter
addr16
push
jns
test
inc
ss
push
daa
pop
inc
jo
fldenv
mov
in
fst
mov
adc
cmc
xor
xchg
sbb
fwait
(bad)
retf
sub
push
fimul
or
cmp
stc
in
test
pop
jl
xor
add
out
xchg
push
cwde
aaa
or
pusha
out
sub
dec
push
inc
hlt
sub
out
mov
(bad)
(bad)
push
add
cmp
scas
icebp
das
mov
add
lds
or
in
shr
pop
pop
call
add
dec
lock
stc
adc
loopne
shr
das
jns
and
dec
in
into
mov
arpl
ret
jnp
idiv
out
adc
and
(bad)
(bad)
mov
pusha
in
movs
loopne
cdq
dec
jecxz
jne
jne
jecxz
daa
sub
inc
cs
repz
sub
cld
ins
fcom
inc
pop
movs
popf
jecxz
xchg
jno
int
inc
push
jnp
bound
aam
outs
je
cmps
inc
xchg
push
lods
xor
aas
add
mov
xchg
sahf
loope
and
out
mov
repz
mov
mov
pop
mov
jmp
sbb
xchg
fld
in
dec
sub
movs
mov
int
jl
pop
mov
sub
stos
xor
(bad)
dec
daa
sub
cmp
and
(bad)
dec
jnp
sbb
lock
lahf
pop
jno
xchg
repnz
jnp
jle
pushf
and
imul
sbb
out
cmps
adc
outs
cmp
scas
or
ss
into
inc
movs
jne
scas
cmp
fst
mov
std
adc
lods
sub
int3
out
les
(bad)
mov
mov
sub
inc
add
or
cmp
mov
mov
adc
pop
jo
in
stos
shl
sub
add
mul
mov
stos
add
cli
enter
mov
in
jno
jb
fnstsw
push
jns
xchg
mov
jge
fcmovu
call
ret
gs
loop
add
cld
popa
test
sbb
jmp
rol
mov
dec
movs
mov
outs
xlat
imul
add
adc
movs
cwde
scas
xor
xor
inc
(bad)
jecxz
xchg
adc
push
and
pushf
ror
mov
inc
ss
out
inc
sahf
out
mov
sub
outs
popf
(bad)
pop
aaa
mov
and
cmp
or
dec
and
mov
daa
test
and
xlat
lods
mov
push
das
push
mov
shl
mov
aad
rcl
cmp
retf
xchg
adc
fnstcw
and
jb
repz
mov
dec
es
out
mov
in
pop
or
stc
inc
jecxz
cmp
fistp
pop
cwde
dec
repnz
inc
in
inc
jns
fucomp
or
call
mov
jle
mov
or
fwait
bound
adc
retf
sub
add
mov
lods
das
outs
pop
jns
(bad)
adc
rol
fsub
dec
leave
dec
pop
loopne
sahf
ins
push
pop
mov
pop
je
mov
inc
mov
push
popf
inc
mov
scas
and
ret
cmp
pop
cmp
dec
mov
in
mov
data16
ffree
jae
clc
lods
pop
adc
and
out
add
and
push
push
je
loope
sbb
inc
js
fiadd
(bad)
push
ins
sysret
fadd
push
sub
inc
or
daa
jmp
mov
imul
call
icebp
xchg
cmp
mov
cmp
or
add
adc
add
call
fwait
and
sbb
nop
movs
sub
pushf
mov
rol
and
leave
jae
aam
aam
xchg
push
or
fisubr
in
adc
xchg
or
dec
jg
adc
les
out
test
lods
shl
(bad)
std
mov
je
std
sbb
rcl
jmp
sbb
out
cmp
mov
aam
dec
mov
cmp
add
fs
fdivr
xchg
imul
mov
int
dec
jae
cvtps2pi
aaa
in
jne
adc
mov
mov
pop
repnz
pop
xlat
enter
mul
pop
dec
mov
(bad)
aad
fwait
sti
and
rol
xor
jb
push
xchg
cdq
pop
sub
in
adc
pop
out
mov
(bad)
jmp
xor
and
lods
mov
test
adc
sbb
cmc
int
jo
jb
jmp
sub
xor
cmp
in
xchg
mov
cli
ror
ret
pop
addr16
arpl
add
pop
fdiv
outs
pop
(bad)
and
clc
imul
test
int
sahf
add
mov
mov
inc
ds
int
das
mov
(bad)
es
jge
shr
xor
fdivr
inc
enter
adc
or
cmp
pop
fs
loop
das
sbb
adc
inc
jmp
sbb
scas
sub
fld
push
int
lods
mov
lock
fnstcw
pop
push
ret
mov
add
aas
lock
add
cld
cli
cmp
stc
push
xchg
add
fidiv
cmp
add
mov
cld
ja
pop
(bad)
sub
gs
jo
test
rol
test
pop
(bad)
stc
jg
push
mov
fisubr
out
cmp
stc
adc
inc
and
jp
mov
push
cld
and
pop
pop
mov
(bad)
movs
js
sahf
xor
jne
in
and
push
inc
mov
test
mov
push
push
cmp
shl
mov
sbb
iret
arpl
adc
mov
jae
add
jae
popa
cli
cli
in
mov
xchg
clc
inc
test
jp
mov
pushf
in
and
cmp
xchg
lods
ja
ret
dec
ret
int
repnz
paddsb
push
bnd
cmp
icebp
lahf
sbb
sub
cmp
or
push
inc
icebp
adc
cmps
out
inc
(bad)
push
sahf
into
test
sub
std
and
clc
jl
lock
int3
add
jmp
sub
mov
inc
(bad)
and
movs
data16
loopne
stc
mov
pop
sub
pop
ret
pusha
dec
loope
cmp
fiadd
loopne
cmp
mov
push
jmp
movs
pop
push
cwde
neg
out
fs
aas
mov
mov
(bad)
popf
adc
push
jle
adc
jp
pop
sbb
into
ror
mov
mov
sub
push
push
leave
mov
(bad)
jecxz
mov
mov
cmp
sbb
cld
(bad)
jo
sub
mov
cdq
inc
xor
push
loop
inc
scas
or
lods
adc
or
out
sti
js
repz
lock
mov
adc
loopne
xlat
and
add
xlat
out
int3
cmp
push
and
call
jo
xchg
or
fidivr
idiv
jle
ret
add
mov
inc
push
add
and
mov
pop
je
inc
add
dec
ror
cs
adc
sti
pop
int
push
mov
sar
sbb
jnp
add
enter
cld
(bad)
mov
sub
ffreep
dec
adc
lods
push
add
mov
ret
sar
jp
psubw
xchg
icebp
cmp
lods
add
sbb
jp
bound
mov
ret
mov
arpl
shl
or
xchg
or
jo
dec
sub
and
cdq
ret
aas
mov
push
xchg
pop
out
out
nop
sub
xor
rcl
clc
mov
leave
sbb
mov
pop
ficomp
inc
inc
pop
into
in
int
push
sub
mov
cwde
div
xchg
pop
sub
int3
sar
or
pop
in
xor
adc
repnz
sub
fmul
mov
fisub
imul
mov
and
mov
and
fwait
ror
lock
xchg
dec
pop
gs
dec
mov
add
dec
xor
fbld
fild
xchg
cdq
movs
jmp
mov
sahf
add
(bad)
adc
pop
popf
mov
inc
pop
adc
rcr
rol
in
test
popa
dec
(bad)
outs
adc
xor
sub
mov
std
fnstsw
or
test
sub
push
jecxz
lock
inc
pop
repz
mov
xchg
mov
adc
or
mov
scas
daa
dec
ins
dec
scas
outs
pop
cld
icebp
or
jp
adc
sbb
or
mov
stos
xchg
fimul
or
push
punpckhwd
xchg
push
dec
test
test
mov
add
cmp
mov
(bad)
arpl
push
icebp
loopne
xor
push
jno
jbe
mov
jg
mov
dec
or
adc
cli
mov
imul
mov
mov
repz
mov
mov
sbb
popf
pusha
sahf
inc
mov
lock
mov
popf
mov
shr
ins
js
jns
test
and
or
xchg
add
jecxz
pusha
sbb
out
ret
dec
sub
test
sbb
xchg
bound
adc
sbb
xchg
add
mov
add
cmp
mov
fwait
leave
mov
sub
or
xchg
movs
mov
add
imul
fsubr
out
fdiv
repnz
xchg
mov
xor
gs
dec
mov
aad
retf
iret
sar
enter
xor
sbb
ins
xor
push
inc
pop
jmp
mov
pop
sub
xchg
sub
jg
test
scas
or
sub
in
repz
sahf
or
test
mov
push
add
mov
cmp
add
out
cmps
push
inc
into
push
cmp
ss
jae
or
outs
jae
pop
jecxz
gs
dec
mov
inc
cmps
jmp
int
pushf
rol
mov
ret
in
mov
ds
xchg
loope
push
adc
(bad)
mov
dec
retf
out
mov
out
in
lods
imul
out
or
int3
repnz
mov
add
test
mov
xchg
test
pop
and
inc
sub
inc
sbb
jb
mov
dec
mov
fs
xchg
clc
mov
jmp
jge
cs
ror
xchg
jmp
int3
inc
out
je
inc
int3
dec
jg
ret
dec
mov
mov
dec
inc
stos
pop
les
mov
sbb
mov
or
icebp
outs
mov
push
and
mov
or
jb
hlt
and
scas
aad
ins
dec
mov
push
cmp
cmp
jmp
mov
xlat
mov
sahf
(bad)
icebp
xor
lds
shr
pop
pop
ja
or
sub
out
sahf
and
jmp
cs
stos
cmps
xor
xchg
jae
inc
dec
mov
lods
bound
enter
fsubr
in
xor
fisub
stos
mov
ret
mov
jbe
cmps
mov
bound
or
adc
pushf
stos
sub
and
xchg
pop
jg
xchg
xor
sub
mov
sbb
push
cmp
js
cwde
push
scas
shr
ds
cmp
jno
inc
or
and
out
push
mov
js
imul
(bad)
inc
lds
arpl
adc
inc
jo
pushf
fsubrp
stc
shl
jae
add
(bad)
in
mov
cli
xchg
into
push
push
mov
jmp
rcl
mov
xlat
xor
jle
out
stos
nop
push
aad
imul
outs
ins
sub
jo
frstor
and
scas
mov
enter
imul
aaa
or
cmp
mov
xor
rol
fstp
clc
lahf
cmp
push
adc
lahf
mov
test
js
push
fnstcw
mov
leave
pop
mov
add
sub
and
outs
jle
xor
sbb
xchg
cmc
sub
je
ret
pop
pop
xor
pushf
add
(bad)
add
mov
and
dec
cmp
fild
mov
test
sbb
outs
loop
loopne
gs
test
jecxz
int3
jl
xchg
sub
test
mov
test
lea
lods
(bad)
loopne
arpl
in
jmp
cmps
test
popf
xchg
test
data16
cmp
mov
add
fmul
aas
mov
inc
cs
jmp
mov
sbb
mov
and
pop
dec
push
test
adc
fst
and
inc
movs
xchg
ins
call
xlat
inc
or
cli
sub
cmp
test
jecxz
jo
sbb
movs
cmp
pop
cld
nop
mov
sub
mov
pushf
je
sub
cmp
dec
ror
stos
and
outs
jg
jno
fs
cld
cld
arpl
les
mov
inc
imul
outs
test
inc
pop
in
sub
and
push
xor
jb
stc
pop
cmp
mov
xchg
das
pushf
xchg
aam
mov
push
ja
shr
movs
cmp
jnp
adc
sbb
mul
mov
pop
xchg
loope
mov
sti
xchg
fwait
mov
js
pushf
or
scas
mov
loope
shl
outs
loope
pushf
nop
inc
outs
popf
movs
sbb
int
xchg
fst
test
aaa
push
test
lea
push
jmp
idiv
inc
mov
dec
sbb
push
push
lds
fwait
dec
loope
cmps
sub
rol
sbb
or
addr16
pushf
test
or
xchg
adc
or
add
add
jge
inc
cmp
xor
dec
xchg
lods
jno
push
mov
repz
ins
xor
xchg
aam
adc
retf
and
jb
cwde
jno
push
popf
(bad)
lds
int3
xchg
mov
mov
pop
addr16
xchg
fild
sbb
push
mov
aas
not
fldenv
stos
mov
in
push
clc
dec
inc
ins
clc
dec
clc
cmp
and
sub
scas
mov
setb
mov
mov
jl
mov
mov
xor
add
pop
mov
and
push
xchg
outs
xchg
dec
inc
into
ds
or
mov
rcl
fiadd
lds
ins
inc
cs
adc
arpl
sub
cmp
cmp
sub
leave
sbb
cld
jbe
mov
and
(bad)
pop
not
mov
push
lahf
push
pop
add
imul
nop
outs
add
jns
inc
push
mov
popa
and
push
sub
(bad)
mov
(bad)
mov
jae
iret
xchg
loope
aaa
in
pusha
jmp
xchg
imul
cdq
neg
adc
fstp
xor
inc
push
mov
xchg
sub
ss
and
in
icebp
sub
jo
push
loopne
pop
pop
(bad)
xor
jg
dec
and
aad
and
or
jbe
xchg
popa
mov
sbb
adc
xor
(bad)
jb
popf
sbb
mov
out
js
dec
push
and
test
test
xchg
cmp
jae
add
outs
daa
lods
shl
push
mov
and
adc
cmp
loope
add
ins
shr
scas
in
clc
imul
push
sbb
je
scas
xor
test
jo
cmc
jns
mov
or
in
retf
iret
lahf
inc
and
test
daa
xor
jae
das
ins
(bad)
ss
cmp
mov
fs
icebp
pop
sar
mov
jnp
sub
jne
aam
sbb
sub
and
add
cmp
int
repnz
inc
loope
out
jnp
shr
sub
aaa
or
mov
xchg
ins
pushf
into
bound
pusha
add
mov
not
ret
aaa
pusha
add
sub
pop
in
push
jmp
imul
add
inc
pop
cmp
lahf
mov
out
cmp
inc
mov
dec
fucomi
aas
movs
add
pop
mov
call
lea
pop
jo
jb
popf
push
inc
lahf
ja
sbb
mov
add
mov
(bad)
in
xor
ficom
hlt
clc
xor
(bad)
and
int
mov
and
rcpps
loope
cli
jb
mov
mov
mov
push
sbb
push
xchg
enter
adc
retf
and
pop
sub
bound
outs
std
dec
push
rcl
pop
sbb
iret
jl
cmps
inc
pop
int3
add
icebp
jne
in
out
stos
dec
cld
push
rol
dec
pusha
movs
jnp
loopne
or
mov
add
push
or
mov
jmp
mov
les
std
mov
and
retf
sbb
xchg
pop
mov
nop
bound
mov
clc
jl
lods
or
inc
xlat
out
mov
addr16
in
aaa
dec
adc
pop
mov
retf
cmp
ins
ins
test
pop
sbb
inc
and
lock
mov
push
ret
loopne
sbb
icebp
inc
popf
push
or
bound
neg
mov
out
push
or
adc
mov
sub
dec
aad
aad
fwait
sbb
mov
lock
xor
adc
ret
in
cld
jae
cmp
pop
(bad)
in
(bad)
test
inc
stos
pop
sbb
fnstenv
(bad)
xchg
adc
add
out
jge
arpl
les
into
jg
lods
repnz
pop
mov
xchg
out
in
jb
mov
xchg
sub
inc
lods
fs
neg
and
push
pop
out
in
dec
lods
push
enter
sbb
add
mov
hlt
outs
sub
jg
xchg
pop
xchg
mov
stos
and
arpl
xchg
sar
ds
loopne
inc
mov
xlat
popa
icebp
push
fst
jle
clc
pop
in
and
ins
push
cmps
shl
cmovbe
call
mov
bound
xor
xchg
popf
sub
sbb
or
and
sahf
xor
sbb
push
imul
push
pusha
pop
aas
pushf
ret
shl
jmp
dec
call
sub
outs
pop
cmp
push
std
jnp
push
xor
mov
mov
sub
and
test
hlt
and
iret
jo
scas
(bad)
adc
dec
dec
jae
les
gs
pop
pop
jge
xchg
cwde
test
dec
inc
xchg
cwde
add
mov
shl
test
and
loop
scas
and
rcr
aad
mov
mov
xor
or
mov
pop
mov
int
int
jl
retf
lock
out
dec
push
jb
xor
push
leave
pop
je
add
inc
stc
pop
ret
movs
stos
jp
xchg
addr16
sub
ss
out
in
mov
mov
cmps
xchg
lods
pop
mov
sub
push
jmp
ret
mov
lods
arpl
mov
jns
sbb
out
data16
mov
aam
mov
out
push
(bad)
sbb
inc
out
add
adc
adc
xor
mov
nop
neg
outs
fstp
xchg
pop
std
daa
add
lea
dec
inc
pop
dec
shl
ins
retf
enter
mov
cs
mov
into
mov
aad
test
mov
fucomip
addr16
test
data16
enter
fwait
aam
mov
sbb
ins
popf
mov
lea
or
dec
sbb
mov
(bad)
mul
add
inc
fsub
int3
test
add
shl
push
(bad)
sub
cmp
xchg
mov
mov
xor
iret
push
in
aas
xchg
ret
adc
mov
jns
mov
jge
mov
xor
pushf
add
sahf
xchg
jmp
and
pop
repz
ds
inc
mov
in
cli
movs
mov
jg
jge
iret
jne
fisub
call
repz
add
and
aad
sar
test
div
clc
mov
outs
fisttp
repnz
test
pushf
xchg
sbb
push
jb
jbe
or
lods
fist
or
icebp
test
fucomi
add
int
enter
mov
mov
fiadd
mov
and
push
cwde
test
xor
jns
cmps
cmp
and
ret
pop
mov
repnz
clc
jb
aad
cmp
xlat
xor
in
icebp
and
(bad)
test
mov
fdivr
in
mov
movs
scas
push
cmp
retf
mov
out
in
xor
shl
inc
out
in
fsub
mov
sub
or
jge
jle
fbld
mov
sub
inc
mov
pop
int3
aad
mov
mov
dec
mov
cli
adc
pop
mov
push
adc
and
(bad)
xor
xchg
cs
test
test
ror
push
stos
dec
in
sub
mov
lock
movs
sbb
ficomp
mov
cli
lods
push
ror
mov
cmp
daa
xor
add
pop
pop
add
ds
lds
loop
xchg
pop
xlat
fcmovbe
adc
es
jecxz
mov
dec
fwait
jo
add
jl
(bad)
scas
test
clc
ja
neg
sub
xor
sub
or
and
or
out
pop
int
scas
(bad)
movs
add
jno
sar
cmp
adc
out
lock
sub
nop
movs
sti
cwde
leave
mov
push
jne
out
mov
repnz
xor
ds
cld
jns
lahf
gs
xor
(bad)
js
push
inc
out
mov
add
rol
cmps
or
loop
dec
jecxz
into
inc
retf
cwde
cmps
stc
jb
sbb
iret
jmp
sub
and
push
push
mov
sbb
and
mov
add
sbb
stos
xor
(bad)
dec
sti
push
leave
push
movs
pop
repnz
ja
dec
pop
xor
sub
into
sbb
xor
xor
getsec
cmp
push
jmp
jmp
mov
ret
or
test
mov
mov
mov
aaa
fidiv
retf
mov
iret
fisubr
or
(bad)
in
xor
(bad)
pop
loop
bnd
ret
sar
dec
shl
ret
dec
xchg
fidiv
mov
aas
jmp
and
in
jne
xchg
sub
mov
jle
xor
hlt
out
mov
xchg
xor
(bad)
adc
fisubr
cli
pushf
popf
sbb
fiadd
cli
and
and
in
mov
add
sub
loope
adc
sbb
iret
(bad)
aas
pop
push
imul
jmp
xlat
sbb
xchg
pop
mov
push
loop
dec
fsubr
push
sbb
mov
or
in
rcl
xor
ror
lods
das
stos
outs
xchg
dec
mov
aam
push
push
ret
push
jno
ins
in
lds
and
shr
inc
mov
push
sahf
push
add
test
call
push
mov
call
and
cmp
or
rcr
cli
cmp
lea
push
sbb
test
adc
inc
sbb
xor
pop
jns
ins
xchg
out
rcl
or
pop
aas
mov
mov
jmp
in
push
add
pop
sahf
jb
ss
ds
call
test
jne
mov
out
cwde
std
shr
and
dec
push
mov
into
fwait
test
fadd
shl
dec
iret
call
adc
xor
aas
jecxz
adc
int
iret
arpl
rol
fild
pushf
sahf
cmps
sub
and
cmp
lods
(bad)
push
lods
stos
mov
sbb
stos
repnz
ficom
jnp
das
dec
jl
push
data16
xchg
dec
mov
dec
loope
xchg
cmp
stos
adc
rcl
xchg
adc
add
leave
mov
sbb
jae
mov
sbb
and
mov
mov
xor
fdivr
(bad)
out
jno
fist
jl
xchg
loopne
(bad)
pop
dec
sar
imul
xchg
xor
xchg
bound
jne
xor
outs
mov
cmp
(bad)
jl
scas
cmp
and
jno
dec
enter
push
adc
mov
pop
daa
mov
test
and
sbb
and
push
xchg
fimul
mov
adc
xchg
(bad)
call
int3
cmp
sub
movs
or
pop
push
xchg
ss
sub
xchg
retf
or
add
adc
call
lds
cmp
dec
fcomi
cmp
xchg
inc
jle
push
test
jne
jecxz
xor
jge
or
cld
js
jo
icebp
in
add
sub
inc
inc
prefetch
sub
add
cld
ror
test
and
ds
mov
sub
adc
arpl
in
shr
xchg
xor
(bad)
cmp
jecxz
in
inc
and
mov
jo
ja
sar
lods
jae
sub
test
jge
cmp
fwait
stos
aas
mov
and
jae
inc
adc
popa
nop
dec
repz
sub
pop
jmp
leave
or
jp
mov
dec
adc
repz
mov
cmps
push
cmp
retf
xlat
xor
lock
sub
sub
mov
push
repz
aam
cmc
loopne
mul
imul
loop
es
sbb
adc
leave
mov
adc
cmp
fsub
in
pop
lds
and
cmp
mov
pop
repz
xor
aam
push
adc
pop
nop
and
jnp
(bad)
jmp
ret
push
push
sahf
enter
pop
mov
xchg
nop
addr16
ret
aas
add
mov
pop
movs
mov
jp
xchg
xchg
(bad)
(bad)
(bad)
mov
ja
(bad)
xor
imul
or
sbb
pop
mov
pop
mov
push
dec
loop
enter
jbe
aas
pop
add
xchg
dec
push
not
pop
shl
push
xor
ror
std
dec
outs
stc
addr16
and
mov
sub
arpl
xor
cmp
adc
pop
inc
sbb
sahf
add
aad
ror
jmp
cmp
rcr
in
out
pop
sbb
and
sub
dec
call
dec
ins
inc
imul
xor
je
pop
pop
lea
sub
fld
popa
rcr
sbb
pop
sub
repz
add
call
push
sub
ins
lods
push
lahf
dec
jae
adc
js
enter
pop
xor
and
ret
sub
test
mov
sub
adc
stos
xor
push
js
mov
jne
sub
ret
adc
adc
mov
sub
sub
adc
adc
push
pop
push
test
pusha
not
es
sub
fcmovne
jecxz
dec
test
push
sub
ret
inc
sub
imul
pop
pop
sbb
arpl
push
sub
aad
dec
in
je
xchg
push
jmp
test
mov
sub
stos
jns
or
clc
(bad)
cld
stc
sti
pop
push
cmp
inc
mov
sbb
inc
and
mov
inc
adc
aam
sub
ror
cdq
inc
xor
push
push
fs
mov
retf
jns
lock
sub
cmp
test
test
aaa
push
pop
dec
jge
xchg
test
jg
cmp
mov
ins
js
sbb
movs
mov
pop
mov
add
out
add
xor
retf
dec
leave
sbb
add
lea
push
pop
jae
pop
or
sub
and
rcl
sbb
icebp
imul
(bad)
pusha
cmp
mov
jecxz
dec
fld
sbb
stc
pop
push
stos
push
hlt
inc
sbb
retf
mov
mov
lods
fstp
sub
ss
jne
cmp
outs
mov
add
je
call
nop
aaa
out
mov
in
orps
hlt
test
outs
inc
cmp
sahf
push
sar
int3
or
push
adc
sbb
call
and
lahf
test
sbb
push
xchg
dec
test
sar
dec
loop
test
mov
hlt
mov
cmp
pop
pop
jl
pop
out
adc
add
jecxz
rol
adc
dec
enter
mov
or
leave
sar
inc
xchg
dec
dec
ss
adc
sub
pop
mov
hlt
ficomp
shr
cmp
mov
es
clc
inc
xchg
and
add
jp
(bad)
mov
dec
jp
into
and
inc
movs
test
ja
fld
mov
add
mov
fprem
sbb
pop
adc
dec
hlt
(bad)
xor
cli
out
inc
adc
js
dec
in
adc
retf
sbb
pop
lock
cld
lds
or
or
sub
and
xor
xchg
push
mov
inc
rcl
or
call
dec
jb
mov
inc
push
loop
enter
mov
dec
icebp
ficom
mov
and
(bad)
test
fsub
xchg
cld
rol
das
pop
mov
fld
jns
inc
sub
mov
(bad)
push
imul
ficomp
and
mov
mov
scas
sbb
and
popa
sbb
loopne
nop
xor
neg
call
popf
cmps
cdq
cmp
out
cmp
adc
loop
pop
cmc
pushf
sbb
ficomp
ret
out
xchg
loopne
dec
push
cmp
test
ins
pop
outs
std
popf
mov
mov
imul
inc
inc
out
test
stc
pop
xchg
jl
jae
sahf
pushf
aad
jge
shr
jmp
call
mov
std
aaa
das
les
add
mov
mov
in
sar
pop
xchg
stos
cmps
and
xchg
cmps
jecxz
pop
mov
sub
xor
out
pop
xor
pop
cmp
ret
sbb
xor
rol
enter
pop
pop
adc
sbb
aaa
scas
inc
int
push
adc
stos
mov
shl
jge
(bad)
test
out
dec
adc
sahf
mov
adc
cli
mov
mov
pop
inc
and
add
ins
inc
popa
leave
lods
push
out
xchg
sub
movs
enter
enter
xchg
pop
adc
sbb
test
inc
mov
out
push
mov
movs
fimul
cli
push
lea
test
pop
pop
add
(bad)
and
stos
push
imul
inc
cdq
icebp
setl
mov
fnstenv
iret
aam
mov
scas
int3
fcomp
or
and
dec
retf
inc
sbb
mov
fs
jno
mov
mov
push
stos
btc
inc
inc
test
nop
mov
out
xlat
(bad)
and
std
lock
push
sub
xchg
into
mov
loope
ss
dec
jno
jb
int3
dec
popa
push
pop
into
popa
retf
daa
mov
xchg
ret
jge
mov
in
pop
pop
jmp
mov
sub
inc
mov
repnz
push
cmp
addr16
retf
mov
or
jge
stc
adc
xor
shl
mov
out
lea
adc
xchg
inc
or
jmp
lds
adc
test
or
dec
hlt
sbb
or
push
pop
adc
push
scas
cdq
jnp
push
xor
jmp
xor
add
inc
pop
mov
push
mov
jbe
mov
mov
cmp
ss
vaddss
adc
mov
mov
jo
mov
adc
xor
adc
out
loope
lods
clc
add
lahf
cmps
stc
xor
mov
and
jp
push
cdq
add
loop
sbb
cmp
stc
cmps
add
mov
jmp
lahf
not
jno
cmc
adc
xchg
ja
outs
ret
mov
cmp
dec
adc
out
fs
push
adc
or
test
xor
imul
fld
push
add
mov
xor
retf
push
out
repz
setnp
adc
jae
lahf
imul
sub
popa
jp
jmp
repnz
arpl
cmp
jl
(bad)
iret
mov
pop
jb
jg
xor
cld
adc
ja
jo
inc
popf
(bad)
adc
aam
in
xor
adc
fisub
sti
pop
call
sub
ret
ret
in
push
mov
pop
scas
sub
and
into
dec
shl
mov
push
inc
retf
and
cmp
(bad)
test
popa
leave
or
pop
adc
xor
or
or
cmp
not
mov
mov
pop
imul
int
and
mov
push
push
retf
cs
adc
sbb
and
cwde
jns
cmp
or
and
cld
inc
cwde
dec
mov
push
mov
xlat
bound
pop
ds
(bad)
jnp
outs
sub
and
pop
cmp
out
pop
into
xor
lods
popf
lods
mov
push
call
xchg
(bad)
ror
xor
inc
pop
loop
aaa
add
icebp
mov
psubb
xchg
test
add
jbe
xor
sub
ja
mov
mov
inc
aas
sahf
fwait
popa
aas
pop
add
ja
push
mov
ja
scas
loop
fiadd
lock
ja
mov
push
std
mov
pop
jge
mov
mov
jae
das
mov
pop
je
push
int3
dec
call
inc
dec
je
les
test
out
lods
and
or
and
push
call
out
(bad)
cmp
cmps
ret
xchg
jg
jnp
push
das
sub
sbb
data16
mov
mov
jnp
pop
push
ror
push
sub
nop
dec
mov
jno
test
add
mov
test
out
xchg
retf
mov
and
mov
dec
pop
dec
test
lods
jge
cmp
les
into
test
and
dec
add
into
(bad)
cmp
hlt
stos
(bad)
loop
inc
(bad)
mov
inc
jmp
pusha
mov
dec
jmp
xchg
xchg
mov
data16
clc
mov
cmp
dec
or
xchg
les
fcom
cmc
mov
test
mov
sub
shr
adc
icebp
adc
mov
rol
out
leave
cmc
pushf
int
inc
xor
aaa
cmp
mov
ins
ficomp
push
out
push
movs
push
std
jl
pop
popa
mov
add
enter
inc
push
or
jecxz
fsub
jo
mov
fwait
and
push
scas
dec
pop
test
into
mov
scas
inc
mov
inc
aaa
cli
or
mov
sbb
xchg
push
sub
cmp
retf
cmp
mov
dec
mov
rol
push
dec
test
aam
mov
pop
add
jg
sbb
mov
push
ret
scas
xchg
fwait
aad
jge
or
pop
xchg
sbb
mov
ror
push
add
pop
dec
ds
ret
sub
pushf
ss
add
xchg
add
inc
cdq
fs
jo
dec
adc
movs
jle
dec
dec
jne
dec
jmp
arpl
popf
jp
push
sbb
shl
push
stos
jl
add
push
pxor
ror
imul
in
mov
pop
adc
fmulp
test
mov
pusha
mov
cwde
pop
jns
aad
mov
sti
pop
retf
dec
fmul
and
mov
adc
mov
imul
or
xlat
inc
xchg
lock
xlat
xchg
movs
in
aaa
ins
dec
pop
imul
mov
and
inc
or
rcr
mov
push
mov
mul
fwait
push
loope
mov
mov
bound
out
add
out
ja
ss
aaa
inc
into
frstor
nop
repz
xchg
(bad)
jmp
sbb
cmp
pop
in
jmp
jge
movs
mov
mov
sbb
aas
jl
movs
sub
pop
pushf
popa
ds
xor
add
mov
cmp
dec
pop
sbb
sub
mov
call
pop
adc
js
cmps
xor
daa
rcr
outs
les
jmp
fadd
or
pop
and
pusha
in
les
out
int
rol
movs
je
cmp
(bad)
fisub
sub
dec
mov
add
jmp
push
iret
xchg
inc
cli
jmp
sub
dec
dec
sbb
add
bound
jns
rcl
outs
inc
or
and
jp
mov
sub
loopne
inc
and
je
or
(bad)
inc
out
aaa
mov
xor
cmp
jmp
shr
test
or
push
fidivr
sahf
test
jmp
and
inc
(bad)
and
ret
bound
xor
push
fwait
mov
ins
inc
adc
and
fstp
dec
pop
gs
and
repnz
rcl
mov
pop
outs
add
adc
jne
lahf
push
addr16
out
lods
mov
jmp
mov
pop
jle
(bad)
fdiv
dec
pop
test
inc
mov
test
or
aaa
int3
push
dec
adc
ror
mov
std
or
mov
js
ins
fcmovnb
clc
pop
xchg
enter
mov
lea
sub
imul
sub
inc
(bad)
and
fadd
cwde
cmp
jge
nop
nop
dec
and
out
fdiv
cmp
dec
push
add
es
repnz
arpl
sub
xchg
mov
and
addr16
imul
mov
push
sbb
adc
push
and
scas
leave
cli
pop
ret
sub
xor
loope
aam
inc
sub
jg
pusha
pop
dec
nop
inc
jns
sti
mov
inc
cmp
aad
push
clc
mov
jne
enter
jl
fwait
ja
dec
and
push
or
jns
xlat
(bad)
dec
pop
jbe
mov
mov
push
rol
push
inc
xchg
or
pop
lods
xor
lock
bound
sub
outs
and
xchg
jno
clc
mov
inc
cmp
imul
bound
loopne
mov
not
xor
pop
sbb
sbb
movaps
mov
mov
pop
cli
add
fbstp
in
idiv
sub
nop
mov
inc
xchg
scas
imul
fdivrp
cmp
push
out
mov
push
lods
cmp
lock
rcl
and
paddsb
cmp
cmp
dec
dec
xchg
mov
enter
inc
sub
jno
test
clc
pop
xchg
adc
pop
mov
push
inc
xor
lods
bound
repnz
pop
test
inc
jbe
shl
xchg
test
mov
sti
cmp
inc
pop
pop
ds
in
xchg
imul
jnp
or
mov
push
sub
sub
imul
(bad)
loopne
(bad)
adc
retf
sub
mov
mov
jbe
into
xchg
cmps
cmps
cmps
and
or
mov
popa
std
adc
(bad)
xor
jnp
iret
push
outs
test
mov
out
enter
push
cld
js
add
dec
test
pop
xchg
push
add
bswap
mov
in
adc
sub
fsubr
add
jne
xchg
aam
call
push
gs
push
popa
xor
mov
mov
jp
out
dec
bound
xchg
push
ret
iret
scas
cmps
jge
or
in
out
out
lds
loope
and
fstp
cmps
push
fiadd
mov
call
adc
jo
xchg
add
icebp
and
xor
cli
rol
mov
pop
into
add
lahf
inc
xchg
cs
inc
sub
in
mov
sar
sbb
test
iret
mov
adc
fild
or
mov
add
adc
in
fld
inc
mov
enter
scas
xchg
jno
les
or
ja
xchg
add
inc
cld
enter
dec
stos
imul
mov
dec
call
je
inc
adc
sub
push
stos
loope
cmp
or
push
jl
adc
jecxz
xchg
shl
xor
aaa
push
mov
inc
mov
dec
push
dec
rcr
mov
inc
mov
fiadd
clc
ins
adc
(bad)
sti
adc
loopne
repnz
xchg
and
imul
(bad)
cmp
in
hlt
jg
mov
in
fst
in
test
icebp
adc
mov
imul
mov
(bad)
lea
sub
sub
sub
nop
in
ja
mov
mov
mov
daa
xchg
or
sub
test
popf
clc
repnz
out
xchg
(bad)
push
sub
lods
adc
jmp
je
sub
adc
cmp
(bad)
inc
add
xchg
imul
movs
fidiv
xchg
ror
dec
add
popf
aam
and
or
sar
not
into
add
mov
cdq
or
and
movs
cdq
mov
int
jo
fisub
je
test
dec
sbb
xchg
(bad)
adc
mov
lahf
loope
jb
adc
mov
inc
cmps
mov
arpl
jmp
sub
push
in
dec
sub
ss
jmp
xchg
inc
sti
(bad)
or
mov
pop
adc
dec
xor
js
pop
add
imul
mov
adc
mov
movs
cs
push
(bad)
xor
inc
pop
mov
das
and
(bad)
retf
fnstenv
jle
fnop
sahf
mov
push
lods
mov
and
adc
js
sub
sbb
ja
(bad)
dec
and
ins
pushf
push
(bad)
cmp
or
fist
mov
and
jno
cmp
call
inc
int3
xchg
xor
enter
and
popa
ret
inc
sbb
mov
dec
xor
fsubr
ret
pop
xchg
or
or
and
mov
test
push
pop
xchg
inc
fsubr
pop
jae
cmc
mov
push
ficom
in
pop
in
adc
int3
cs
nop
sete
push
xor
xchg
repnz
psubusw
sub
fadd
es
ud0
adc
dec
or
and
in
xor
dec
push
mov
psubw
sar
jl
xchg
test
fimul
fiadd
or
not
push
pop
push
fnstsw
push
jmp
jne
jge
sub
fwait
cld
mov
ja
test
test
(bad)
xor
pushf
aad
inc
(bad)
ret
jmp
jno
mov
sbb
test
mov
ss
xchg
movs
lods
sbb
cmp
pushf
loopne
add
dec
mov
rol
push
ficomp
dec
xor
repnz
jle
dec
adc
pop
stc
jge
jnp
lock
int3
xor
bound
not
scas
int3
pop
in
xor
imul
sbb
inc
stos
movs
cmp
out
pop
leave
pop
cmps
push
adc
fwait
daa
inc
push
xor
bound
call
xlat
sbb
out
jmp
push
outs
inc
cmp
daa
mov
dec
and
push
mov
push
jbe
shl
and
xchg
lock
sbb
xchg
xchg
fild
cli
dec
fadd
mov
ss
add
cli
mov
scas
std
mov
test
and
pop
outs
add
cmps
push
cmp
movs
push
fwait
pop
aaa
push
push
sub
loopne
mov
imul
in
addr16
adc
faddp
push
xor
adc
jns
pusha
(bad)
inc
fsub
data16
mov
cmp
adc
sti
clc
pusha
push
ds
retf
out
cmp
out
push
sub
push
cmc
inc
and
cmp
jmp
mov
mov
in
pop
test
pop
lahf
dec
pop
jmp
scas
dec
fld
movs
lods
(bad)
fisub
pop
xor
inc
xchg
jmp
addr16
std
adc
invlpg
test
repnz
xor
mov
jecxz
imul
push
mov
sti
push
add
cmp
mov
ret
push
out
fld
jb
xor
and
ja
test
mov
mov
adc
xor
cmc
add
jnp
out
fidiv
push
mov
dec
xor
add
loop
in
pop
repz
cmp
pop
stos
repz
pop
adc
or
sub
adc
push
test
ds
es
dec
out
jp
nop
mov
gs
stc
fxch
lds
mov
sub
sbb
mov
int3
pop
add
mov
mov
push
hlt
dec
leave
sbb
and
shl
pusha
loop
bound
mov
out
jns
dec
inc
fcmovnbe
cmc
ret
mov
leave
and
(bad)
push
mov
xchg
movs
adc
add
sbb
pop
jl
es
arpl
xor
xchg
pushf
jnp
xchg
or
push
mov
xor
sbb
push
mov
xchg
or
sahf
mov
push
in
sbb
aam
stos
cmps
popf
loope
leave
test
stos
sub
leave
mov
shr
pop
push
iret
adc
sti
push
sub
dec
cmp
scas
fs
test
loope
cwde
dec
stos
add
cmp
xchg
lahf
outs
repz
lea
xchg
inc
and
cmp
ins
push
cmp
adc
jg
xor
js
mov
or
icebp
push
mov
mov
sbb
xlat
pop
jge
sub
test
imul
mov
stos
mov
in
rcr
imul
or
push
cdq
add
(bad)
gs
or
inc
aas
movs
inc
repnz
add
jns
outs
movs
(bad)
aaa
sti
jmp
jns
js
pop
arpl
mov
push
inc
and
call
scas
xchg
ja
jmp
into
mov
pop
mov
push
fld
rol
jnp
mov
xchg
nop
aaa
lods
mov
mov
cli
mov
sub
fild
sub
cmp
das
cli
jle
cmp
lea
clc
pop
outs
and
jecxz
mov
rcl
pushf
mov
fwait
aad
and
adc
mov
cmp
sub
xchg
jns
or
fdiv
lods
sub
dec
imul
inc
in
jp
loop
call
dec
inc
pop
push
xor
lods
xor
scas
nop
loopne
jmp
dec
aam
sub
imul
(bad)
fild
and
inc
retf
mov
sbb
loope
lds
or
dec
sbb
movs
inc
lods
xchg
test
out
ret
add
cmp
inc
push
test
fld
push
or
in
fldcw
inc
aad
in
sti
ss
sbb
mov
cdq
pop
cmps
jae
dec
sar
in
lods
mov
int
das
daa
cs
push
sbb
aas
movs
sub
popa
mov
jecxz
dec
test
xor
call
jl
inc
fsub
shl
mov
(bad)
ins
mov
cmp
popa
fwait
xlat
ret
(bad)
in
mov
stos
jbe
dec
inc
sub
and
hlt
xor
and
xchg
xchg
push
jne
icebp
cmp
or
add
or
mov
inc
jmp
enter
xchg
lea
test
dec
mov
sbb
es
fild
(bad)
dec
mov
jmp
push
xor
bound
(bad)
call
xchg
pop
or
popa
lods
lods
adc
div
xchg
dec
mov
or
xchg
sbb
inc
mov
pusha
stc
pop
mov
movs
pop
pop
jle
scas
es
jb
inc
adc
adc
sbb
and
aam
data16
or
mov
add
mov
aad
jmp
rol
or
imul
leave
mov
mov
scas
inc
fcmovnu
pop
push
dec
out
push
xchg
adc
ja
pop
int
mov
daa
popa
mov
cmp
inc
cli
xchg
add
shl
jecxz
fs
pop
sbb
outs
xchg
jecxz
stc
mov
adc
mov
jecxz
adc
add
imul
cwde
inc
jl
inc
les
scas
cwde
dec
jecxz
bound
daa
sub
scas
xlat
in
shl
add
inc
pop
retf
rcl
cmc
xchg
add
jmp
xlat
test
aad
xchg
cs
aaa
mov
pcmpgtw
scas
scas
push
std
(bad)
pop
push
xor
sahf
aas
dec
imul
mov
fld
jnp
jge
push
mov
popf
pop
adc
stc
inc
pop
xchg
(bad)
loope
arpl
push
pop
dec
cmps
fs
push
mov
jb
pop
add
sbb
cs
into
xor
ins
jmp
lahf
inc
jp
cli
dec
sti
dec
mov
dec
cmc
fs
(bad)
xchg
(bad)
mov
inc
aaa
movs
sub
call
xor
stos
adc
aaa
jne
xchg
test
je
lahf
inc
ret
push
lea
cmp
adc
jnp
ret
cmp
sbb
and
dec
aaa
cmps
data16
dec
mov
fsubr
in
add
mov
mov
jno
mov
or
shl
push
aad
gs
pop
out
sub
cli
sar
xor
sub
mov
push
push
fwait
mov
shl
aad
fcomp
inc
cmp
pushf
sbb
mov
fwait
push
shl
pop
(bad)
sbb
jle
cwde
test
cmp
pop
and
jg
outs
jge
or
xor
xor
scas
xchg
mov
sbb
adc
sar
xor
ror
fsub
push
or
into
push
cli
cmp
push
or
cwde
stos
scas
push
mov
lahf
les
ins
push
pop
push
jae
or
pop
xchg
mov
out
xlat
push
aad
pop
imul
ret
jge
mov
popa
not
out
push
fistp
pop
adc
inc
adc
mov
push
push
neg
(bad)
(bad)
sub
xchg
add
or
arpl
scas
lds
imul
into
mov
rcl
pop
pusha
mov
popf
jno
and
aad
shl
(bad)
mov
jle
pusha
mov
test
sahf
stos
sti
sbb
lds
lods
and
cmp
pop
ja
fiadd
pop
hlt
push
rol
jmp
lds
sub
mov
lahf
push
jmp
fld
or
or
cld
cmovo
test
and
call
dec
fild
pop
cmp
jle
pop
dec
push
bound
xor
retf
mov
mov
mov
lods
rol
(bad)
aad
push
sahf
xchg
gs
mov
mov
dec
dec
div
leave
adc
jne
ret
sbb
jecxz
outs
sbb
ds
mov
sti
(bad)
sti
xor
idiv
mov
and
jle
xor
(bad)
clc
test
inc
inc
into
sbb
leave
mov
test
adc
jno
ds
cmp
mov
std
push
sub
push
push
push
and
test
adc
mov
mov
imul
popa
and
push
lea
retf
cmp
dec
sbb
mov
fldcw
xchg
mov
shl
or
call
out
daa
adc
mov
enter
rcl
sub
lock
ja
push
int3
(bad)
in
mov
jecxz
jnp
push
retf
bound
sahf
(bad)
les
pop
mov
sub
mov
hlt
dec
dec
rol
arpl
and
enter
sar
out
in
sbb
ror
scas
in
ja
or
add
out
or
fidiv
jae
mov
das
js
xchg
sahf
jnp
stc
pop
mov
ins
inc
push
cmp
bound
xor
add
popf
xor
mov
rcr
sbb
test
in
fdivr
popf
dec
(bad)
and
retf
mov
xchg
add
out
lods
gs
lahf
(bad)
in
jbe
add
(bad)
fmul
adc
lock
pop
scas
retf
test
cmps
dec
mov
mov
xchg
ror
add
pop
hlt
dec
clc
(bad)
int3
fwait
cli
jmp
push
and
cmp
add
adc
jno
mov
add
ins
(bad)
in
sub
and
adc
mov
cs
adc
mov
or
push
fidivr
xlat
sub
lods
hlt
out
mov
sbb
xlat
fdivr
mov
mov
pusha
mov
and
mov
es
dec
cmps
ss
pop
ror
and
ins
push
dec
add
mov
idiv
mov
retf
ret
cmovb
inc
out
xchg
daa
mov
inc
jg
sar
inc
add
adc
mov
sbb
test
jns
pop
adc
mov
aam
inc
in
sbb
rol
jno
mov
push
loopne
jle
jnp
mov
xchg
ins
mov
sbb
mov
mov
inc
jnp
mov
adc
jnp
pop
cmc
and
and
jge
mov
movs
fwait
mov
xor
(bad)
push
idiv
push
mov
adc
mov
adc
push
es
retf
adc
jmp
xchg
sar
cmp
popa
jp
popa
sbb
ds
mov
ins
pushf
fsubr
xchg
push
push
mov
mov
or
jnp
adc
lods
add
jns
mov
not
dec
jbe
cld
cs
fidivr
(bad)
sub
push
ret
xchg
jno
mov
sahf
fcmovne
xlat
sbb
mov
inc
cmps
mov
int3
sahf
inc
jl
or
cwde
js
pop
shr
mov
stos
sbb
sub
xor
clc
in
test
imul
mov
dec
iret
outs
cli
test
test
aaa
push
cs
mov
inc
or
ja
inc
sbb
clc
jbe
lock
out
repnz
enter
imul
add
ins
mul
pop
push
cmp
jae
(bad)
pop
push
push
lahf
push
xchg
push
ret
xchg
adc
pop
mov
jge
xchg
cmp
in
add
add
or
pop
push
int
and
inc
outs
jo
adc
cld
das
sub
pop
cmp
mov
mov
lock
iret
adc
int3
push
(bad)
adc
sbb
in
daa
inc
leave
xchg
cmc
nop
and
xchg
adc
adc
shl
xchg
push
lods
jae
dec
icebp
mov
xor
shl
inc
or
xchg
xor
xor
pop
or
retf
mov
mov
inc
mov
retf
cmp
lahf
test
data16
hlt
sbb
js
adc
xchg
xor
add
test
je
adc
jl
jne
push
addr16
cmc
xchg
loope
out
movs
ja
aad
hlt
adc
inc
mov
daa
mov
bound
test
jbe
into
lahf
gs
inc
js
into
jle
icebp
xor
iret
push
or
jmp
shl
jns
jbe
sub
fisubr
dec
xchg
xlat
inc
xor
pop
pop
mov
enter
movs
int3
cmp
or
cmps
xchg
xchg
cmps
mov
or
stos
cmp
adc
xor
xchg
and
dec
adc
call
sub
mov
mov
std
cli
mov
aam
iret
in
xor
es
mov
enter
xor
mov
xchg
jp
div
cwde
neg
sbb
int3
(bad)
addr16
(bad)
pushf
sysret
jmp
stc
mov
test
fsubrp
jno
(bad)
jno
cs
xor
sbb
mov
or
and
xlat
inc
dec
mov
adc
push
je
call
aam
push
icebp
sar
fdivp
mov
xor
aaa
mov
cs
jnp
inc
jo
pop
stc
sub
cwde
test
push
cmc
push
sbb
icebp
add
and
sub
pop
shl
into
xor
xor
leave
sbb
cmc
xchg
in
add
xchg
loope
add
xlat
mov
sbb
dec
inc
cs
retf
dec
inc
cs
mov
mov
cmp
mov
dec
xor
pop
rcr
xchg
stos
rol
out
sub
mov
lock
out
sub
mov
fsub
sbb
out
mov
inc
repnz
add
mov
call
imul
repz
push
sub
push
jne
aaa
inc
call
rol
inc
xlat
xchg
rol
push
daa
mov
in
sub
dec
push
jle
lods
dec
cmp
adc
cmp
fwait
out
mov
out
mov
aad
sbb
xor
daa
sti
add
sub
adc
test
or
mov
lock
fwait
mov
pop
jecxz
dec
pop
ret
jne
xchg
out
inc
xor
push
in
lds
in
std
mov
int
jle
adc
mov
popf
outs
sub
pop
inc
gs
btr
cdq
ss
in
mov
idiv
mov
push
jno
cmp
cmp
(bad)
sbb
aaa
pop
pop
movs
cmp
add
xchg
je
leave
stc
imul
push
pop
mov
push
nop
cs
xlat
mov
sbb
push
inc
ins
aad
daa
add
mov
xor
arpl
and
sbb
mov
sub
push
rol
xchg
retf
cdq
data16
ret
inc
push
or
fadd
sbb
xchg
enter
jecxz
mov
inc
add
dec
inc
push
cmp
mov
sbb
sub
inc
icebp
das
sbb
sbb
sar
jnp
nop
dec
mov
adc
leave
sbb
add
jb
pusha
adc
lods
adc
(bad)
mov
arpl
je
push
xchg
call
jmp
pop
sti
test
inc
inc
add
out
retf
imul
out
lods
aaa
cld
dec
push
test
in
add
and
(bad)
mov
or
(bad)
jae
inc
clc
lock
inc
or
jecxz
inc
push
and
inc
scas
ror
jge
or
dec
cmp
cmps
inc
popa
pop
aam
popa
ins
sub
inc
mov
imul
arpl
nop
out
retf
test
cmp
mov
cwde
push
cmp
adc
je
stos
in
dec
stos
retf
test
aad
lock
out
out
inc
daa
xor
xchg
xor
mov
shr
inc
(bad)
(bad)
cli
dec
sub
jmp
cmp
daa
xor
test
mov
mov
scas
pop
or
xor
pop
push
sbb
mov
jb
pop
push
dec
or
imul
hlt
cmps
jb
js
call
stc
dec
fnstcw
cmps
je
sbb
cmp
xor
adc
les
sbb
mov
(bad)
jmp
add
mov
adc
in
xlat
lods
inc
movs
sahf
dec
imul
int
outs
and
dec
or
and
pop
inc
in
cmp
cmps
sbb
push
jg
mul
popf
aad
xor
push
mov
xor
pushf
pop
out
fnstsw
xchg
push
(bad)
cmc
repnz
sub
xor
mov
bnd
adc
push
rcr
mov
cld
repz
inc
and
aam
sysenter
int
dec
jmp
test
std
fmulp
dec
cdq
add
jne
cwde
loop
xchg
clc
jo
push
nop
mov
fldcw
adc
ret
sbb
dec
sbb
cmp
mov
mov
aam
test
push
mov
outs
ins
ret
jbe
fcmovb
inc
addr16
arpl
jnp
mov
xchg
nop
cmps
in
and
lods
arpl
lds
in
or
je
add
cmp
jle
and
jno
mov
ins
sbb
stos
jg
(bad)
pop
inc
inc
sar
les
dec
aaa
pop
push
push
cmp
xchg
sbb
lods
dec
pop
sbb
in
adc
mov
test
fcmovbe
add
cmc
push
lahf
ins
inc
or
hlt
and
or
nop
xchg
cdq
das
sub
pop
push
call
iret
sub
lock
(bad)
cmp
inc
nop
sbb
cdq
loopne
sbb
cmp
pop
sbb
cmp
loopne
jmp
mov
sub
sti
dec
ficom
and
sub
adc
rcr
mov
mov
push
add
ffree
pop
daa
test
mov
jb
sub
ins
jne
sbb
into
mov
and
push
pop
popf
jns
mov
mov
push
cmp
sbb
in
push
and
out
and
lahf
sbb
mov
repnz
(bad)
push
icebp
loop
jmp
gs
xchg
pop
cmp
push
ins
call
fwait
cmc
sbb
jecxz
push
test
mov
call
dec
ss
jne
mov
add
leave
div
add
push
cmp
add
add
add
fisttp
mov
bound
fist
mov
shl
dec
dec
fldcw
cld
cmp
aaa
aam
sub
mov
rcr
es
fwait
(bad)
cmc
fs
aaa
(bad)
fst
xchg
lea
dec
or
test
sbb
ret
xor
add
test
dec
jnp
mov
stos
xchg
nop
sub
push
test
imul
sub
pusha
cmp
xchg
dec
dec
push
mov
test
scas
add
bswap
jge
retf
test
xchg
rcl
cmps
popa
in
jp
mov
jmp
aaa
pop
sbb
push
mov
out
ret
or
fisubr
std
dec
sub
adc
push
stos
je
mov
push
cld
mov
icebp
xor
dec
cdq
movs
or
xchg
pop
(bad)
pop
(bad)
fild
les
sbb
xchg
pop
mov
shr
cs
sub
jecxz
retf
inc
cmp
pop
scas
fdiv
call
dec
lods
cmp
xchg
out
mov
jmp
mov
call
call
lds
stos
add
cmc
push
es
jae
ins
in
aaa
add
xor
xchg
inc
jnp
call
pop
jb
aas
mov
sbb
adc
dec
and
adc
in
inc
jmp
fild
dec
ror
out
mov
sbb
pop
mov
adc
xchg
dec
sub
mov
leave
cli
inc
mov
add
or
jb
imul
sbb
pusha
jmp
fsub
mov
or
dec
(bad)
ds
mov
fs
lock
mov
mov
(bad)
add
call
dec
dec
(bad)
aam
ficom
xor
rcr
ret
xor
sub
cmp
mov
(bad)
cli
das
leave
(bad)
adc
jo
test
enter
cmps
ret
jns
fs
add
mov
aas
cdq
aam
pop
ins
int
cmp
dec
pop
ss
xor
add
and
(bad)
fxch
adc
test
mov
add
(bad)
pushf
out
lds
dec
jbe
psrlw
pushf
add
inc
pop
sub
add
mov
jno
bound
sbb
call
hlt
jne
test
push
fld
mov
mov
pop
dec
jo
in
clc
cmps
inc
mov
lock
test
mov
lds
and
jmp
loope
jge
mov
pushf
ror
ror
mov
test
jo
out
retf
lahf
in
mov
mov
dec
into
inc
push
ret
data16
int
pop
mov
in
std
xchg
push
jg
call
jecxz
(bad)
fiadd
(bad)
mov
inc
iret
dec
jae
mov
fidivr
inc
push
ret
cmp
lahf
mov
xchg
push
mov
or
in
inc
mov
in
mov
das
int
mov
xor
ins
inc
or
dec
retf
ret
dec
fcmovnbe
mov
xchg
retf
sbb
and
and
lods
icebp
or
(bad)
ret
in
data16
fild
add
jl
inc
sub
test
add
and
stos
ds
pop
or
fs
(bad)
mov
js
jp
mov
or
out
ffree
in
adc
in
inc
sbb
in
xchg
ins
jmp
cmp
pop
jns
fwait
xlat
xchg
pop
mov
test
dec
inc
push
xchg
adc
xchg
iret
ins
pop
fbstp
push
add
and
and
dec
add
call
repz
jge
imul
mov
dec
cmp
movs
fwait
jl
rcr
mov
add
iret
xchg
sbb
adc
lock
ds
fisub
dec
jge
pushf
mov
jg
rol
or
stos
and
jle
int3
inc
fstp
mov
mov
inc
adc
ret
ficom
and
lods
aad
jl
ret
imul
inc
movs
adc
stos
in
fs
clc
enter
aas
inc
aas
bound
call
pop
sub
repz
fisub
cdq
fucomip
mov
fistp
sub
fs
mov
(bad)
(bad)
xchg
mov
sbb
inc
(bad)
retf
mov
inc
xchg
bound
push
in
xchg
push
js
mov
adc
cmovs
mov
mov
push
lock
jmp
hlt
xchg
fisubr
dec
outs
pop
sub
je
sbb
rcr
fwait
mov
test
dec
add
gs
gs
xchg
sbb
aas
fwait
xor
add
mov
adc
xor
ins
out
loopne
je
pop
test
(bad)
push
sub
cmp
mov
shr
jg
int3
adc
movs
lahf
test
xchg
xchg
rcr
test
cs
lock
or
arpl
jb
test
mov
vmovaps
shl
cwde
inc
mov
pop
sub
or
adc
jle
jmp
adc
mov
cmps
ret
mov
iret
ins
push
push
stos
pop
pop
mov
push
inc
je
lods
(bad)
ror
mov
enter
loopne
or
popa
dec
xor
icebp
and
pop
popf
pop
or
sub
cmps
adc
jnp
mov
std
sbb
push
ret
leave
push
outs
push
sbb
retf
scas
dec
shl
popf
shl
mov
fwait
push
jo
jge
repz
rol
retf
cmps
xchg
dec
dec
iret
outs
inc
bound
in
xchg
(bad)
in
(bad)
lock
call
sbb
jnp
in
mov
jge
mov
test
lods
and
inc
mov
jl
in
or
jb
int
sub
test
repz
fwait
push
mov
data16
push
or
mov
jp
lea
dec
sub
outs
mov
neg
movs
xor
dec
mov
inc
or
pop
add
jae
icebp
test
and
out
ror
(bad)
push
ja
imul
mov
sub
fistp
add
jns
retf
cmps
popa
ror
dec
mov
pushf
sub
retf
in
adc
out
xor
push
cmp
xlat
or
jg
mov
ss
jmp
gs
sbb
xor
lock
mov
movs
rcl
mov
jnp
cli
add
hlt
dec
sbb
js
xor
in
bound
ret
push
adc
popa
les
jge
sti
leave
movs
mov
lods
movs
sub
inc
cmp
jecxz
and
gs
hlt
arpl
dec
adc
(bad)
in
pusha
mov
add
stos
call
sti
mov
pop
cmp
mov
inc
(bad)
cmp
nop
inc
aas
aad
in
xor
sbb
imul
shl
xchg
mov
sub
or
movs
inc
dec
jns
call
aas
movs
sbb
dec
cdq
scas
popa
sti
xor
ret
push
pusha
jnp
and
dec
in
pop
cmps
or
cli
test
clc
push
popa
xor
bound
sbb
or
lods
jg
aas
inc
addr16
inc
mov
ret
pop
pop
dec
iret
cmp
(bad)
aad
inc
pop
js
mov
and
mov
add
pop
popa
in
push
pop
sbb
mul
jnp
dec
test
jo
inc
cmps
xor
xor
sbb
mov
xchg
pop
mov
call
call
adc
mov
ret
aaa
or
(bad)
stos
mov
daa
mov
sti
add
dec
sar
stos
ins
add
adc
jmp
push
mov
and
imul
sbb
fcomp
mov
test
xchg
outs
ins
and
mov
jmp
sbb
mov
ins
push
ja
mov
call
stos
imul
out
stc
or
sub
ins
test
mov
es
mov
jecxz
mov
sub
loope
ret
jge
mov
xchg
shl
clc
sub
adc
inc
push
shl
mov
pop
mov
aam
jb
test
sub
ja
int3
in
(bad)
rol
call
pop
cmp
dec
in
push
inc
sub
or
jno
fild
sub
mov
leave
inc
movsx
je
shr
xor
dec
loope
int3
xchg
aad
aad
ficomp
mov
inc
ror
aaa
jb
ret
add
xchg
mov
and
push
gs
pop
xchg
mov
test
test
ds
imul
jo
aad
lods
mov
or
pop
fcom
dec
in
dec
in
ins
shl
call
cwde
inc
mov
rcr
shl
imul
je
xchg
cwde
cmp
and
and
mov
add
cmc
mov
iret
fwait
into
pop
xor
mov
push
add
adc
je
push
mov
gs
out
std
addr16
aas
add
pop
test
shl
xorps
sub
cmp
jbe
cmp
mov
xchg
xor
dec
sub
aaa
gs
adc
aas
fstp
and
movs
mov
mov
mov
add
popf
addr16
and
mov
cmp
outs
bound
icebp
dec
pushf
jg
add
pop
sbb
enter
cs
ins
jl
dec
jo
ds
(bad)
xchg
ja
or
out
sub
mov
mov
or
outs
aaa
lds
fsubr
add
stos
imul
xor
fcom
add
mov
jge
sbb
int3
dec
clc
sub
ror
inc
pop
(bad)
push
and
leave
enter
sbb
sub
(bad)
jmp
sbb
cmp
mov
adc
es
aam
rol
xor
cmp
hlt
mov
ins
cmp
ins
shr
sbb
lds
shl
mov
cmp
retf
xchg
inc
stc
js
xlat
jle
ds
cwde
mov
mov
sub
fwait
test
sahf
mov
fidivr
mov
dec
push
dec
data16
clc
inc
stos
mov
retf
mov
sub
fidiv
sub
(bad)
outs
jle
inc
and
add
aad
sub
repz
les
fistp
push
adc
mov
mov
xchg
sbb
(bad)
xchg
ds
mov
clc
out
xchg
mov
inc
push
add
clc
jae
or
mov
dec
je
stos
add
sub
ins
push
fwait
loope
lds
jo
xor
mov
out
aas
xchg
inc
mov
aas
xlat
jecxz
jno
and
fwait
and
push
mov
movs
ret
add
sbb
xchg
(bad)
add
xchg
push
or
scas
mov
fs
mov
test
jbe
clc
mov
push
inc
fs
and
jge
js
in
push
ja
lock
adc
pushf
mov
jmp
sbb
mov
cld
das
cmp
js
es
icebp
ds
imul
popf
loopne
push
jnp
aad
sub
mov
(bad)
mov
cmp
pop
jae
xchg
stos
jl
pop
mov
nop
add
int3
daa
lock
inc
sub
icebp
ja
retf
sbb
ins
ds
lods
push
sbb
cmp
sar
lods
and
arpl
adc
jno
in
test
ret
stos
dec
and
addr16
push
mov
mov
pop
out
xchg
mov
mov
or
repnz
fild
add
hlt
push
outs
add
and
mov
and
ins
dec
sub
add
scas
xor
pop
aam
fwait
inc
mov
cmc
ja
pushf
or
lea
hlt
idiv
lahf
push
mov
pop
mov
push
xlat
and
jnp
or
dec
or
scas
movs
stos
sbb
lock
retf
das
dec
xchg
pop
arpl
movs
lahf
scas
shr
cmp
shl
xlat
xchg
ins
ja
push
jp
pop
leave
cmp
sbb
dec
test
or
cmps
xchg
cmps
pop
push
mov
lds
call
icebp
pop
out
cmp
push
shl
push
mov
out
mov
push
and
mul
cmp
aam
test
imul
cdq
pop
lock
sbb
mov
aad
les
cmps
jne
and
mov
xor
les
jl
jg
(bad)
cmps
sub
test
xlat
leave
adc
dec
(bad)
adc
pop
adc
fst
mov
aaa
in
in
movs
(bad)
fist
clc
jle
jecxz
ins
pushf
cmps
hlt
call
ss
les
push
add
sbb
push
xor
xchg
push
ss
sbb
addr16
jmp
adc
imul
fwait
or
mov
xrelease
push
pusha
xchg
scas
adc
inc
xchg
jns
and
xor
or
inc
scas
daa
addr16
je
dec
mov
enter
adc
mov
adc
xchg
pop
push
add
in
into
mov
pop
sbb
dec
ins
test
cwde
adc
push
sub
ficomp
ret
or
mov
jge
aas
push
out
test
mov
in
jnp
fbstp
je
jns
mov
test
jbe
xor
xchg
shl
fs
adc
mov
mov
or
pop
clc
cmps
sub
jge
sahf
mov
sbb
sub
mov
les
retf
fst
jl
call
addr16
sub
xor
adc
cli
or
fucom
push
data16
data16
pavgb
outs
xor
dec
pop
pop
mov
adc
leave
js
cld
pop
and
hlt
jae
add
rcr
aas
out
xchg
mov
jb
add
adc
js
mov
mov
xchg
(bad)
cmp
sub
push
hlt
in
mov
xchg
loop
add
mov
ret
lods
sar
push
xchg
loopne
not
je
(bad)
fdivr
imul
adc
sub
add
sar
or
movs
jbe
ss
adc
lock
push
sahf
fcomp
or
mov
jnp
mov
shl
mov
out
sub
jl
hlt
jp
mov
sar
fsub
add
test
out
jo
xchg
test
lods
loope
enter
test
fisub
sub
ja
adc
cmp
test
mov
cmp
retf
mov
inc
cmp
add
gs
mov
clc
outs
loop
cmps
jmp
jne
aam
lea
iret
ja
and
pop
aam
sbb
(bad)
(bad)
mov
adc
xchg
sbb
jmp
setle
inc
addr16
dec
mov
push
loope
ret
je
mov
(bad)
movlps
(bad)
mov
jnp
push
and
int3
nop
add
in
fild
test
adc
clc
(bad)
cmp
add
and
or
in
fiadd
js
je
sbb
les
popa
xor
fimul
cmps
mov
pop
push
ror
xchg
or
repz
and
pop
mov
ins
cmc
mov
mov
or
hlt
psubb
push
and
and
sub
jno
mov
push
jp
pop
movs
inc
xor
neg
mov
push
sar
inc
mov
hlt
cmps
fbstp
mov
lfs
jne
pusha
fcom
or
pushf
cmp
mov
xchg
sti
iret
push
xor
dec
sub
cli
inc
test
mov
and
mov
dec
sub
jno
bswap
call
pop
ret
jle
mov
xchg
mov
pop
mov
sub
adc
mov
mov
fisttp
adc
leave
out
pop
(bad)
imul
xlat
pop
mov
dec
cmc
aas
or
cwde
or
pushf
jbe
jne
mov
(bad)
adc
hlt
sbb
mov
xchg
mov
xchg
lock
stos
stos
sbb
mov
xor
lea
cmp
adc
jns
jecxz
adc
std
minps
sub
ja
ja
imul
dec
ret
movs
cs
pop
(bad)
(bad)
aad
cdq
in
mov
cmc
(bad)
jmp
fsubr
scas
cld
or
adc
iret
(bad)
xor
xor
inc
outs
sub
push
add
fnsave
dec
in
pushf
(bad)
cmc
xchg
adc
jmp
sub
jge
sbb
test
jmp
inc
fidivr
cmp
das
inc
nop
push
in
mov
popf
cmps
cdq
loope
lods
stc
jge
push
xchg
inc
in
mov
xchg
mov
sub
movs
push
pop
pop
mov
mov
in
pusha
and
in
loope
out
push
loopne
push
gs
ja
enter
ins
mov
sbb
retf
cwde
(bad)
xchg
pop
mov
mov
sbb
enter
lods
cdq
idiv
and
xor
jg
call
aad
sti
xchg
sub
push
aaa
leave
mov
pop
pop
or
adc
jecxz
add
stos
(bad)
out
rcl
loope
xchg
jae
iret
outs
pop
retf
add
jle
(bad)
push
out
cmps
sub
int3
adc
iret
(bad)
bnd
jbe
arpl
pop
popf
jp
cdq
dec
(bad)
cmc
(bad)
aas
inc
daa
jns
shl
daa
mov
pop
mov
xor
movs
ret
movs
push
fistp
cmps
and
inc
je
push
out
cmp
push
jae
cmp
ins
hlt
mov
cmp
or
adc
mov
jb
fstp
dec
sahf
and
pop
inc
mov
adc
neg
std
cmp
pmovmskb
or
or
(bad)
cmp
addr16
dec
rcl
or
pop
pop
mov
test
xlat
sbb
(bad)
dec
pop
xchg
cmp
xlat
mov
mov
mov
inc
mov
push
icebp
dec
aam
adc
sbb
popa
(bad)
dec
cmp
gs
movs
adc
in
jb
fld
jmp
not
outs
mov
shl
jbe
sahf
imul
in
pop
cmps
sbb
adc
xchg
loope
sub
jmp
mov
int3
js
mov
xchg
enter
inc
js
push
mov
add
push
cli
xchg
or
pop
push
ds
pop
dec
fsubrp
push
out
lds
daa
lea
mov
dec
and
xchg
test
pop
pop
sbb
jmp
adc
ins
into
lahf
movs
in
(bad)
and
xor
jo
jb
sub
pop
push
sbb
adc
and
pop
jae
dec
es
mov
bound
fnstsw
push
rol
sahf
(bad)
mov
push
add
mov
fs
jl
cmp
add
sub
push
(bad)
hlt
(bad)
jge
jmp
pop
(bad)
or
mov
jbe
movs
add
xor
cmp
mov
mov
cli
or
lods
pop
pop
inc
data16
je
jge
(bad)
xchg
aas
ret
inc
cmp
call
ret
dec
push
pop
mov
mov
sbb
pop
imul
mov
rcr
mov
sti
sbb
out
cwde
aaa
(bad)
(bad)
jb
adc
mov
push
dec
sbb
es
int
adc
adc
xchg
enter
adc
inc
mov
outs
ss
mov
(bad)
mov
push
cmp
dec
add
popa
pop
jo
sbb
fstp
jg
sbb
mov
movs
xchg
fisttp
out
pop
pop
ss
fnstcw
inc
xchg
and
stos
dec
pop
cmp
gs
jne
clc
mov
mov
shl
inc
adc
adc
loop
sbb
ins
cwde
add
sbb
pand
lahf
xor
movs
or
add
in
mov
push
fimul
in
inc
jo
xor
loop
and
test
xor
ror
dec
push
push
mov
and
dec
lds
or
xor
lahf
jge
fs
call
out
sbb
sub
dec
loopne
push
arpl
sub
and
hlt
aaa
jnp
push
push
in
xchg
loope
xor
mov
imul
arpl
stos
les
or
and
int
sbb
pusha
push
cmp
mov
push
enter
movs
push
addr16
std
dec
adc
jb
inc
ja
sub
test
in
push
mov
les
cld
ror
push
mov
cmps
mov
mov
xlat
push
inc
test
clc
add
mov
mov
shl
ins
div
neg
pop
int
jmp
fist
or
sbb
xchg
stos
mov
rcr
xchg
nop
cli
test
lock
jg
arpl
cmc
daa
daa
and
add
mov
fisttp
call
sub
das
pop
test
mov
stc
std
sar
and
add
xlat
cmp
(bad)
adc
or
cmps
cwde
xchg
lods
cs
out
stos
pop
aaa
mov
les
sti
cmp
into
sub
or
outs
inc
or
mov
sub
aaa
movs
pop
cmp
push
loop
div
dec
mov
lahf
in
add
xor
fistp
pop
arpl
mov
xchg
mov
gs
idiv
jns
(bad)
loopne
repnz
mov
test
icebp
test
mov
cdq
adc
test
cs
xor
xchg
(bad)
loopne
pushf
jns
int
es
fnstcw
movs
mov
xchg
stos
cmp
push
sub
mov
gs
pop
cmp
lods
mov
mov
scas
push
cmp
js
outs
adc
jecxz
aam
shl
(bad)
jnp
icebp
xor
rol
sti
lods
mov
mov
mov
sti
retf
xchg
pushf
call
push
or
jbe
push
imul
and
aam
scas
ins
movs
dec
call
int3
je
push
jl
fistp
rol
adc
(bad)
ds
clc
mov
xchg
jno
add
add
outs
push
je
cmp
mov
out
adc
je
into
mov
lock
pop
sbb
xchg
loopne
data16
sbb
movs
int
push
clc
inc
dec
jnp
adc
pop
mov
push
out
repnz
aam
sbb
adc
hlt
lahf
lahf
and
inc
ss
add
std
mov
jmp
arpl
enter
push
fisubr
push
jecxz
mov
dec
dec
in
mov
lock
stos
xchg
cmc
addr16
cmp
xchg
inc
stos
lock
or
push
xchg
mov
pushf
ja
aaa
les
mov
data16
ins
fstp
idiv
test
push
out
add
lods
jmp
out
inc
inc
inc
popa
inc
mov
pop
mov
mov
ret
loope
adc
jno
and
div
or
stc
cli
lods
enter
daa
mov
sub
call
ret
pusha
idiv
mov
loope
(bad)
out
cmp
adc
xor
ja
sub
hlt
outs
cdq
repz
mov
enter
xor
xchg
dec
int
lahf
cmps
dec
daa
arpl
call
mov
out
fsubr
sbb
dec
dec
sti
psubq
push
sbb
push
dec
fist
leave
jno
fistp
scas
mov
cmp
xchg
lods
test
call
inc
cld
xor
sbb
daa
fisttp
sub
sar
or
les
popf
adc
aam
xor
mov
xchg
mov
mov
ss
ret
cs
lds
push
sbb
dec
aas
lods
xchg
mov
clc
por
sti
sub
ret
xchg
(bad)
fcom
pop
mov
or
es
mov
jne
xchg
pop
cld
ret
mov
pop
and
jb
xchg
mov
add
pop
test
loop
add
call
pop
push
jnp
pop
movs
(bad)
data16
pushf
add
push
movs
cmp
ret
mov
jl
pop
mov
mov
fld
mov
push
rcr
or
add
(bad)
xchg
and
ds
jmp
dec
cmc
das
jg
mov
aam
jmp
pop
or
cmc
clc
in
cmp
xchg
fcomi
iret
lods
sub
adc
dec
rol
daa
mov
rcl
nop
fldcw
repnz
add
(bad)
push
lds
retf
and
stos
pop
inc
pop
add
retf
or
add
retf
dec
cdq
mov
test
ins
mov
jmp
xlat
jmp
jne
sahf
retf
fldenv
push
cmps
sub
repnz
mov
stos
sbb
mov
adc
je
test
cmps
ins
and
xchg
mov
out
mov
sbb
sar
mov
popa
das
mov
ret
and
mov
inc
sbb
(bad)
mov
pop
sub
add
or
pop
jmp
mov
sti
fs
cmp
(bad)
mov
neg
xor
lods
or
psllq
call
leave
push
loope
pmaddwd
retf
push
jecxz
jmp
or
push
xchg
jg
dec
cmp
loop
jmp
sbb
fisttp
push
std
sbb
(bad)
mov
sahf
nop
mov
bound
test
les
jge
lds
hlt
inc
ins
and
add
pop
sub
mov
mov
pop
test
sbb
mov
stos
or
cmp
call
pop
bound
aam
xor
push
int
outs
mov
mov
aam
aaa
sti
(bad)
ds
cmp
add
cwde
cmc
adc
dec
xchg
popa
cli
(bad)
test
sub
push
arpl
call
dec
sbb
or
or
cld
call
outs
mul
cs
loop
inc
jl
rol
mov
mov
inc
add
imul
fadd
je
stos
mov
jl
js
or
into
lahf
pop
cli
retf
leave
cwde
test
mov
aas
adc
mov
or
fsubr
inc
mov
or
ss
mov
mov
int
jae
jle
mov
call
xor
mov
pop
enter
or
cmps
sub
je
jmp
add
dec
inc
xchg
cmp
mov
in
mov
arpl
pop
dec
mul
jmp
mov
jmp
out
mov
or
or
arpl
cmp
ror
in
mov
outs
aad
mov
ins
add
outs
aaa
mov
fldcw
in
enter
dec
in
push
pushf
adc
or
iret
add
jle
retf
dec
ret
ret
imul
arpl
and
cmps
out
and
jne
dec
sar
jmp
out
in
jmp
stos
inc
fisub
jno
cmc
push
lods
enter
jnp
pop
jbe
and
fist
inc
xchg
sbb
shr
es
mov
lods
retf
push
call
into
call
xor
sub
xor
push
add
shl
out
ins
jbe
pop
jg
jns
mov
jae
xor
add
mov
mov
cmps
in
adc
loopne
(bad)
jnp
xchg
mov
imul
movs
mov
mov
cmps
fiadd
jmp
in
cdq
pop
fild
mov
test
loopne
xchg
bound
pop
and
ror
jge
dec
dec
and
(bad)
jmp
mov
std
inc
mov
test
stos
(bad)
dec
push
mov
scas
sub
(bad)
push
sub
push
sahf
xor
xchg
sub
fadd
(bad)
and
int3
sbb
(bad)
jle
or
pop
mov
test
lds
aas
mov
out
js
jno
js
in
jne
mov
(bad)
rcl
pop
sti
ret
neg
das
out
loop
xchg
xlat
jmp
mov
mov
call
add
mov
shr
das
xor
cmp
loope
sbb
sbb
rol
aam
in
mov
fimul
add
js
in
pop
mov
data16
in
inc
call
lea
int3
push
push
cmp
push
scas
sub
popa
and
xor
ror
xor
jge
add
jbe
add
imul
jne
cmp
lea
ja
icebp
and
sahf
jae
mov
adc
(bad)
loope
loopne
mov
rcr
lock
fidiv
stc
sbb
int
(bad)
fld
(bad)
hlt
adc
or
xor
arpl
je
fwait
inc
int3
xor
mov
sbb
pop
inc
rol
lea
inc
sub
mov
xchg
cmp
inc
mov
jecxz
enter
lock
mov
xchg
aaa
or
push
or
nop
mov
fadd
jle
(bad)
jmp
loope
xor
cmp
dec
ins
or
sub
fmul
pusha
rol
outs
jge
mov
mov
dec
retf
mov
cmps
cmps
dec
cmp
dec
jl
add
cmp
push
repz
sub
test
sbb
jge
repnz
inc
lahf
bound
sbb
add
mov
js
retf
in
das
icebp
in
aaa
jg
jae
aad
cmp
inc
pop
and
in
pop
jne
xchg
imul
ret
or
das
pop
inc
xchg
inc
aaa
arpl
ds
dec
retf
gs
and
or
add
sub
ins
(bad)
or
(bad)
aam
inc
popa
dec
mov
mov
mov
lods
rol
push
adc
jecxz
inc
mov
sub
adc
jp
mov
(bad)
movs
fisttp
fiadd
icebp
ret
xlat
mov
mov
es
push
pop
sbb
rcl
lahf
xchg
xor
das
mul
movs
jbe
xor
push
jp
pop
jle
or
lea
or
ja
mov
shl
jns
ror
scas
dec
aaa
daa
mov
xor
mov
jo
test
stos
mov
cld
dec
pop
ins
call
xchg
cld
inc
ret
call
jbe
jp
fwait
and
cdq
pop
in
xor
fidivr
inc
out
out
js
cmp
test
jle
lods
jmp
mov
push
cli
outs
mov
pushf
sub
lods
sub
pop
sub
ror
push
sbb
in
or
out
dec
jmp
push
stos
dec
adc
mov
cpuid
jecxz
(bad)
aad
add
pop
or
mov
add
ins
adc
pop
sbb
push
ss
test
or
push
repz
xor
and
jno
fst
or
and
jmp
push
js
pop
pop
sub
mov
stc
ror
mov
shl
sti
sahf
or
jb
fnstenv
je
sub
mov
adc
xchg
sbb
mov
or
hlt
and
cmp
aad
dec
and
jmp
rcr
dec
adc
push
ret
pop
les
into
add
idiv
dec
iret
xchg
jmp
rcl
adc
ins
ja
test
pusha
inc
xor
pop
jne
xchg
inc
into
add
mov
inc
inc
pop
sbb
popa
mov
adc
adc
dec
jl
mov
ds
inc
and
push
push
mov
adc
cmp
stc
popa
xchg
cdq
jae
pop
not
aam
cmp
imul
adc
imul
les
popf
jbe
loopne
cmc
je
push
in
loope
mov
shl
ins
push
stos
sub
mov
in
aaa
pop
sub
add
cmp
xor
clc
ss
jb
xchg
repnz
stc
test
in
mov
mov
jae
dec
je
pop
push
adc
inc
js
into
jnp
icebp
cmp
sub
adc
mov
out
shl
sub
ret
aas
pop
and
mov
jg
cdq
outs
test
dec
sbb
mov
or
and
(bad)
stos
adc
pop
push
xor
ja
ret
stc
jp
aaa
loope
fcom
cld
ja
dec
xchg
dec
aas
xor
outs
loopne
pop
dec
jnp
push
fwait
mov
leave
mov
push
mov
icebp
in
shl
fdiv
sub
pushf
jl
sub
add
or
test
cmp
xlat
mov
addr16
fstp
sahf
push
pop
aas
(bad)
cli
out
fstp
cwde
xor
pop
mov
repnz
sahf
ss
xchg
es
cld
cli
ja
ret
pop
pusha
leave
mov
stos
adc
mov
in
mov
sar
nop
push
ja
sub
lahf
imul
sbb
mov
add
dec
fs
stc
xchg
hlt
inc
mov
mov
leave
and
mov
sub
mov
and
adc
push
pop
retf
add
repz
cli
cmp
inc
pop
popa
inc
mov
test
jb
or
pusha
test
ss
push
inc
mov
push
jg
shl
in
jo
icebp
xor
mov
sahf
mov
ffreep
xor
fcomi
and
daa
and
adc
xlat
cmp
jns
repz
ins
loope
out
xchg
adc
xor
in
pop
sbb
mov
into
and
je
gs
icebp
stc
(bad)
pop
loope
dec
xchg
or
adc
mov
retf
add
add
jp
xor
ins
mov
and
pop
cmp
pusha
jg
cmp
not
in
jnp
push
cmp
or
inc
cld
loopne
sahf
test
mov
inc
inc
mov
mov
mov
lds
fild
pop
pop
cdq
jge
outs
pop
dec
jg
aam
push
or
fmul
or
inc
scas
pop
leave
or
mov
movlps
fst
cli
jecxz
and
and
or
adc
rcl
mov
xchg
inc
(bad)
pop
nop
jp
jl
fs
hlt
xor
xchg
xchg
pop
cdq
std
and
sub
(bad)
or
pop
pusha
and
(bad)
fisttp
fcom
bound
jbe
popf
es
push
test
fisttp
sti
into
adc
int
in
out
sbb
sbb
pop
stos
ins
ror
or
stos
inc
push
retf
retf
inc
(bad)
test
ret
mov
ins
push
xchg
push
in
push
into
retf
pop
xchg
jge
test
and
sbb
jb
test
inc
std
and
push
mov
enter
dec
loop
pop
inc
jle
in
and
sbb
cmp
jg
jb
gs
pop
dec
jbe
xchg
add
xchg
adc
mov
pop
loope
adc
cwde
sti
imul
add
(bad)
mov
test
and
sbb
sub
stos
in
repz
scas
sahf
bound
inc
imul
lods
in
pop
outs
scas
rcr
xchg
clc
outs
retf
push
push
jbe
sbb
jae
in
mov
xchg
xchg
(bad)
inc
mov
add
and
sahf
push
add
jl
add
pushf
mov
inc
or
int
imul
sub
ret
adc
mov
cmp
aaa
xor
jmp
mov
xchg
mov
add
inc
fdiv
ret
(bad)
faddp
dec
push
adc
ins
adc
push
leave
add
aam
cld
push
push
(bad)
xor
adc
adc
sar
(bad)
frstor
add
xor
ja
cmps
add
shl
(bad)
ficomp
jle
and
mov
ins
imul
or
cmp
adc
sbb
pusha
das
push
dec
lock
lods
div
les
popa
xchg
mov
cs
and
mov
out
in
out
jl
sub
cmps
pop
cli
push
cmc
mov
sbb
scas
cmp
repz
and
cmps
pop
mov
(bad)
mov
fisttp
mov
ror
cmc
mov
aaa
stc
adc
clc
mov
dec
outs
ss
ret
or
scas
xchg
xchg
mov
mov
in
add
sahf
shr
adc
xlat
dec
fiadd
test
in
push
scas
push
xchg
pop
add
aad
push
xor
dec
jp
stos
and
shl
imul
jg
mov
leave
cmps
cmp
outs
push
shl
and
sub
push
sbb
stos
ins
sub
bound
jle
ins
out
arpl
cwde
mov
mov
push
pop
(bad)
retf
rol
int3
dec
mov
adc
xchg
and
dec
mov
cli
cmp
push
push
test
(bad)
or
arpl
das
scas
ss
mov
and
dec
inc
mov
push
in
xchg
mov
jne
sub
mov
repnz
imul
cmp
jae
imul
jmp
cld
sahf
push
push
jl
out
dec
ins
inc
mov
aaa
outs
jb
cmp
xor
fs
daa
(bad)
mov
cmp
ins
popa
inc
out
mov
cmp
movs
imul
jg
loope
push
mov
out
mov
fbld
cli
enter
sbb
jl
add
jno
retf
sbb
sbb
sub
leave
cmp
or
sub
jmp
pop
cmp
cmp
xchg
popf
sbb
sub
cmp
mov
push
jmp
jl
loop
enter
prefetch
and
mov
jnp
and
dec
rcr
stc
mov
fs
outs
jmp
push
mov
les
cmovs
das
in
push
ret
adc
ds
icebp
jecxz
sti
(bad)
jp
in
repnz
xchg
jbe
inc
pop
into
mov
lahf
add
or
adc
movs
add
sub
xor
sbb
sub
sub
dec
mov
cmp
iret
xor
xchg
cmp
pop
and
hlt
cwde
or
jne
call
in
dec
sub
shr
call
outs
jmp
push
mov
ins
stos
sbb
sub
mov
push
sar
sub
daa
ror
sbb
add
cs
sbb
jo
and
jbe
cli
pop
mov
mov
mov
fs
and
std
shl
or
cmps
aas
cmp
jecxz
mov
int3
sbb
setno
mov
xchg
sbb
add
ficomp
sub
cdq
xchg
gs
int3
sbb
popf
enter
jecxz
in
cmp
push
push
dec
pop
fwait
dec
sbb
push
add
not
loope
test
fidivr
mov
jo
test
scas
jo
test
sbb
jge
mov
push
mov
addr16
(bad)
imul
add
(bad)
dec
not
mov
mov
mov
aaa
and
hlt
pop
cmp
cs
xor
retf
nop
movs
dec
in
push
mov
dec
fcomp
cmp
mov
jo
aaa
ret
hlt
pop
xchg
mov
xor
jge
into
lds
imul
ss
arpl
dec
cmp
push
add
mov
jmp
and
dec
icebp
push
punpckhbw
lods
vmptrld
gs
mov
int
sub
in
mov
int3
push
sub
daa
ror
mov
dec
popf
dec
pop
xchg
cmp
jb
sub
(bad)
popf
loopne
push
cmp
neg
stos
mov
xchg
mov
sbb
sbb
stc
sbb
sbb
sbb
dec
and
int3
test
pusha
xchg
aas
jae
(bad)
cld
fwait
mov
add
dec
jae
mov
inc
(bad)
jecxz
xor
cs
or
push
sbb
and
pop
lods
sbb
movaps
add
push
int
or
pop
aaa
test
cmp
repz
out
aad
xchg
or
pop
mov
aas
push
mov
jb
push
repz
pop
xor
dec
(bad)
aas
fs
aad
(bad)
nop
xchg
cwde
ja
add
xor
fwait
xchg
fs
cwde
sub
ss
cmps
cmp
rcl
(bad)
je
inc
push
cmp
mov
fwait
push
inc
push
pop
mov
and
pop
add
ins
in
(bad)
rcr
inc
repnz
inc
cmp
mov
movs
nop
clc
pop
retf
cmp
xchg
clc
sbb
dec
out
fcomp
dec
call
gs
(bad)
push
test
mov
out
push
repnz
add
jmp
sub
mov
xchg
mov
je
mov
xchg
scas
loopne
lea
in
ins
inc
or
out
sbb
and
psllw
mov
in
push
fdivr
mov
je
sbb
mov
arpl
es
fadd
sbb
out
push
xor
mov
inc
cs
cmp
movs
xchg
or
push
sbb
pop
int
sbb
xchg
jns
daa
mov
and
out
mov
repz
retf
pop
imul
inc
test
out
mov
sub
ret
inc
sub
pop
jle
mov
fisub
(bad)
outs
rcl
ss
jg
movs
or
xor
fs
inc
pop
scas
test
push
int3
ds
mov
shl
es
or
sub
test
sub
push
xchg
sbb
daa
mov
pop
cmps
or
movs
pop
iret
jecxz
push
retf
mov
fwait
cmp
rcl
xchg
mov
mov
and
push
and
push
shl
pop
aaa
mov
int
enter
in
(bad)
mov
into
les
out
call
adc
mov
inc
out
sub
xor
out
ss
sbb
shl
mov
mov
and
neg
mov
xlat
jl
ret
scas
xchg
(bad)
(bad)
ffree
fadd
stc
bound
(bad)
ret
xchg
mov
iret
push
fsubr
push
jecxz
xor
popf
fcom
lock
imul
scas
inc
xor
or
and
shl
pop
fisttp
mov
pop
into
xor
xchg
jo
add
sbb
addr16
pop
mov
sub
sub
adc
hlt
das
sbb
pop
add
pop
pop
sbb
sub
push
inc
mov
daa
or
xor
dec
fdivrp
cmc
stos
jp
leave
sub
push
mov
imul
loope
mov
push
dec
pop
pop
inc
cld
mov
cmp
lock
adc
es
(bad)
cmp
add
mov
inc
fisub
data16
jno
dec
sbb
sahf
pusha
push
fs
sub
sbb
nop
inc
xor
xchg
loop
into
mov
dec
fwait
idiv
arpl
test
pusha
adc
call
jmp
test
cmp
pop
rcl
popa
jmp
inc
in
(bad)
adc
pushf
sbb
jecxz
lods
mov
jp
xchg
cmp
pop
jle
inc
mov
or
mov
stos
jmp
ret
pop
in
xchg
mov
jecxz
mov
pop
int3
mov
jb
cdq
add
mov
push
(bad)
aas
push
test
fild
mov
cmp
mov
push
sbb
xor
xchg
mov
aaa
icebp
popf
or
cmps
(bad)
daa
fiadd
or
add
sar
dec
pop
xchg
imul
fwait
movs
add
shl
in
push
or
out
fnsave
icebp
cwde
sub
cwde
sub
pop
popa
outs
(bad)
fimul
cwde
out
sub
cdq
cmps
hlt
and
pop
jl
test
mov
fmul
mov
in
fnstsw
loope
div
outs
pop
sbb
std
xlat
jmp
cld
dec
movs
shl
sbb
call
push
jno
mov
mov
subps
ror
cmps
adc
xor
(bad)
es
xor
icebp
or
jge
rcl
mov
mov
dec
inc
out
test
jl
mov
cmp
and
rcr
imul
sub
imul
out
repz
ja
mov
mov
cmps
and
push
out
inc
and
or
mov
call
test
in
stos
cmps
dec
icebp
icebp
jl
ins
mov
xchg
ret
sub
xchg
loopne
sahf
cli
neg
jnp
movs
or
xchg
pushf
fxam
dec
cli
mov
dec
in
jnp
lock
fdivr
push
clc
jmp
call
xchg
or
mov
jmp
dec
add
outs
add
cmps
dec
call
ja
push
rol
xor
cmp
mov
clc
mov
lock
and
clc
jl
scas
into
test
push
add
inc
ror
adc
lods
neg
inc
cdq
dec
out
mov
mov
outs
add
xchg
mov
lods
repz
lods
call
inc
add
xor
dec
pop
jp
in
jae
int
sbb
rcl
mov
call
cmovge
cmps
popf
sbb
add
ret
out
out
aad
shl
cmp
movs
movs
loop
adc
(bad)
dec
retf
retf
mov
or
adc
ds
cmp
ror
retf
and
ja
sub
stos
xchg
add
cli
xor
dec
scas
das
lds
outs
push
xchg
and
ins
aaa
and
leave
aam
ficomp
loopne
xchg
mov
jecxz
cmp
in
dec
xchg
dec
into
inc
aaa
(bad)
je
out
push
jp
frstor
dec
pop
inc
imul
push
mov
and
shr
cmc
sub
in
fisubr
fcomp
call
pop
mov
push
jecxz
popa
fld
je
sbb
idiv
jg
cmp
pop
not
push
add
xchg
dec
lock
mov
mov
paddd
ret
nop
outs
sub
test
pop
pop
cdq
shr
and
dec
xchg
xor
test
mov
test
lods
adc
rol
and
int3
das
sub
mov
cmp
inc
iret
pushf
xchg
adc
and
test
scas
mov
call
push
push
inc
call
push
arpl
call
loopne
les
cmp
sub
or
adc
fisttp
shl
adc
and
data16
nop
inc
push
inc
mov
iret
arpl
xor
mov
dec
add
jge
jno
aad
daa
and
mov
data16
and
mov
cmps
cmp
pop
test
loop
jb
adc
movs
sbb
lahf
int3
sub
jne
(bad)
mov
addr16
and
push
adc
cmps
dec
jnp
add
dec
fs
mov
pop
dec
dec
add
lock
push
jmp
add
mov
push
dec
mov
xor
push
test
xchg
jo
sub
xor
mov
pop
retf
inc
fwait
lahf
int
add
(bad)
leave
aam
sbb
out
stos
ja
int
add
push
cs
int3
mov
jl
daa
call
adc
mov
mov
mov
mov
push
push
add
shr
pop
sbb
rcr
mov
mov
mov
daa
retf
lds
and
test
adc
jbe
outs
inc
test
and
mov
cdq
das
or
cmp
xor
cwde
daa
inc
pusha
aas
ret
jae
inc
or
(bad)
xor
movs
mov
mov
(bad)
adc
mov
xchg
adc
les
cs
ja
aas
sub
arpl
lock
fs
fiadd
push
sahf
dec
(bad)
retf
jge
xchg
mov
scas
or
ds
sub
or
sbb
sub
aaa
mov
sub
clc
or
fisub
and
imul
push
sbb
xchg
adc
not
fisub
push
jecxz
push
inc
adc
adc
push
mov
or
stos
sub
xor
dec
adc
mov
adc
daa
add
sub
cmp
stc
inc
rcl
pop
fdivr
(bad)
in
jns
and
lds
sahf
popf
cmp
and
jge
sbb
jnp
or
mov
adc
jnp
jmp
xchg
sbb
test
xlat
cli
retf
sbb
inc
cdq
lods
(bad)
fisubr
cbw
call
jg
loope
mov
lds
jo
mov
mov
test
and
mov
mov
inc
pop
jo
fstp
(bad)
aad
sub
push
xchg
popa
icebp
inc
adc
cmp
pop
xchg
jle
and
xchg
sbb
fdiv
shl
or
or
pop
sahf
imul
mov
xchg
or
lock
aaa
xor
pop
dec
fldenv
cs
out
pop
pusha
in
jmp
out
pop
or
push
pushf
int
retf
test
(bad)
cli
jg
fwait
jb
add
sbb
imul
ins
stc
push
cmp
push
idiv
sbb
popa
mov
mov
cmp
(bad)
fist
mov
fcomp
push
sbb
addr16
aas
cmp
push
lea
aaa
(bad)
iret
jp
mov
jne
mov
mov
xor
and
push
push
(bad)
push
mov
mov
out
jo
cmp
jae
jno
in
sbb
in
cmp
lahf
stos
xchg
and
cmp
iret
cdq
dec
mov
cmp
mov
add
jns
lds
out
nop
imul
(bad)
fwait
mov
mov
fcomp
adc
data16
inc
ja
into
cmp
pop
xchg
je
cld
xchg
push
das
jb
int
inc
mov
std
sar
(bad)
cmp
movs
pop
adc
dec
aaa
shl
mov
xchg
push
fisub
inc
mov
or
sti
mov
jno
push
movs
lods
inc
aaa
push
shl
mov
jae
test
stos
push
add
outs
(bad)
pop
retf
jmp
repz
xchg
xor
jmp
cwde
jno
(bad)
or
adc
repz
sbb
add
sti
in
call
mov
ret
sahf
dec
jne
mov
sbb
out
lock
std
mov
add
jb
(bad)
mul
sahf
cmps
sar
sbb
maxps
inc
outs
pop
jmp
mov
pop
mov
inc
inc
ficom
cmp
aam
popf
pop
hlt
cmp
mov
dec
push
mov
jle
nop
mov
pop
lds
adc
sub
retf
adc
gs
and
(bad)
repnz
push
sub
aaa
mov
icebp
imul
aaa
cmp
xor
mov
and
dec
cmp
xchg
fisttp
adc
or
mov
mov
popa
aaa
and
jbe
sub
lods
(bad)
cmp
fistp
movs
sub
fcom
ja
sub
aad
test
jo
dec
les
pop
mov
hlt
xchg
pop
call
cmp
inc
loope
cmp
sub
jnp
jne
test
cmp
inc
dec
pop
sub
mov
inc
sahf
rcr
push
nop
mov
cs
mov
mov
les
in
rol
sub
jg
sub
rol
push
test
push
sbb
cmc
cdq
repnz
call
fwait
inc
mov
popa
outs
and
stos
mov
(bad)
fcomip
aad
outs
mov
les
sub
and
imul
jns
dec
cmp
js
jmp
xor
or
jl
sub
mov
(bad)
cmc
icebp
and
fdiv
retf
or
adc
outs
sbb
adc
cld
cdq
and
lods
lods
mov
mov
popa
popf
jge
sub
pop
clc
imul
fcom
add
dec
mov
aad
cmp
add
int
adc
out
ror
push
and
pop
in
push
lods
mov
pop
or
jmp
xchg
bound
and
mov
push
mov
sub
or
add
push
mov
fs
jmp
xor
mov
adc
cld
push
jle
cdq
mov
dec
call
mov
add
push
test
enter
stos
jmp
mov
adc
(bad)
fisubr
xor
(bad)
adc
xor
mov
call
mov
shr
js
inc
js
inc
jecxz
ret
test
adc
ss
shl
dec
mov
mov
ret
mov
dec
xchg
imul
nop
xchg
loope
and
imul
je
(bad)
das
fcomip
lods
inc
xchg
sbb
(bad)
je
jmp
dec
cwde
sub
cld
sub
xchg
ds
imul
mov
mov
adc
mov
loope
xchg
jmp
dec
xchg
imul
adc
fwait
shl
pop
mov
je
pop
adc
and
mov
sub
mov
movs
repz
push
jbe
test
mov
cmp
aas
jle
setnp
and
cmp
xor
lods
jbe
jae
imul
xor
adc
mov
adc
sbb
pop
clc
(bad)
mov
push
bswap
dec
shl
sub
jmp
sti
clc
shr
sub
ins
repnz
add
or
imul
je
test
je
cmp
mov
pop
std
push
jl
nop
xor
xchg
pop
xor
pushf
mov
add
shl
fsubr
or
cld
in
and
addr16
sub
std
mov
(bad)
aas
dec
aas
lock
(bad)
fadd
or
rol
mov
fsub
lea
stos
mov
cmp
push
push
xchg
push
movs
mov
dec
in
cmp
hlt
(bad)
xchg
test
mov
cli
nop
push
into
and
sub
cld
and
popa
push
pop
xor
mov
dec
add
(bad)
stos
cmp
(bad)
push
dec
aas
iret
sub
(bad)
das
in
gs
jmp
push
inc
out
jecxz
std
adc
push
fidivr
mov
fwait
loop
out
and
sbb
sbb
push
xchg
in
cmp
xor
push
out
outs
push
(bad)
dec
loop
push
sub
or
lods
xor
cdq
or
iret
sub
rcl
stc
xchg
cs
dec
jmp
or
rol
cmp
mov
loopne
out
in
sub
popa
push
bound
shl
ins
mov
test
call
outs
retf
adc
dec
jno
cmp
xchg
out
jg
(bad)
jmp
ret
jg
ins
lods
mov
jns
(bad)
sbb
inc
pop
xchg
popa
xchg
xchg
push
cmp
sub
ins
fistp
mov
jae
mov
sub
cmc
nop
call
scas
shl
ss
inc
cmps
inc
mov
mov
jmp
inc
outs
retf
cmp
out
je
cmps
pop
aaa
jo
jmp
sbb
jbe
js
sbb
inc
test
movs
movs
mov
inc
pop
imul
push
mov
cmp
aas
clc
lods
cmp
cmp
jae
arpl
mov
ss
xor
fadd
sbb
add
stc
shr
jecxz
xor
ins
push
jmp
cmp
dec
mov
les
xchg
inc
fcom
mov
dec
adc
fldenv
popa
xchg
jge
cwde
adc
inc
sti
(bad)
int
dec
out
cs
pop
sbb
aaa
test
fstp
(bad)
pop
mov
mov
cmp
imul
push
dec
out
out
ror
adc
mov
inc
adc
test
in
lods
sbb
(bad)
into
lea
leave
dec
dec
adc
dec
jb
jge
ins
(bad)
inc
adc
adc
push
push
lods
test
daa
or
mov
outs
pop
imul
pop
out
sar
push
jecxz
push
call
jno
loop
dec
jg
mov
out
mov
mov
fstp
retf
xchg
(bad)
sub
lods
inc
mov
dec
dec
test
out
std
and
sbb
icebp
pop
jp
adc
adc
sub
sar
enter
(bad)
jnp
fincstp
fcmovne
sbb
lahf
cmp
xchg
mov
lods
mov
popa
out
aas
jae
lea
xchg
mov
mov
hlt
inc
retf
jb
push
outs
fmulp
nop
rol
clc
dec
std
retf
fadd
aas
rol
gs
xor
test
stc
and
sti
pop
pop
xor
in
or
push
jle
xor
and
xchg
mov
jl
pop
ss
mov
out
xor
das
and
push
inc
daa
xchg
fadd
in
fwait
loope
pushf
std
mov
repnz
xlat
mov
scas
jmp
sub
push
scas
jmp
pop
nop
and
jne
test
bnd
add
push
lahf
icebp
loope
jmp
mov
or
sub
mov
and
js
push
out
mov
cmp
sbb
pop
push
ret
retf
fadd
xchg
jnp
adc
pop
jle
bound
jecxz
popa
cmp
(bad)
xchg
cmp
and
mov
std
cwde
or
sub
mov
sti
rol
mov
or
call
mov
stos
pop
xchg
sub
mov
aam
sbb
dec
cmp
mov
jle
jmp
test
mov
and
les
mov
jmp
movs
push
inc
adc
xor
jmp
sbb
sbb
cmps
je
ret
(bad)
and
inc
mov
mov
fcomp
and
in
popf
in
(bad)
dec
clc
jnp
xor
pop
cmps
(bad)
movs
aam
cmp
xchg
cmp
pop
dec
sbb
leave
nop
xchg
push
pop
cmc
inc
je
push
into
adc
and
xchg
pusha
pusha
in
or
out
push
and
add
hlt
cmp
std
inc
jmp
jecxz
es
push
cmp
imul
out
lds
jmp
shl
lock
out
jmp
daa
xchg
jb
push
test
(bad)
loope
dec
xlat
stos
aaa
fs
loopne
mov
sub
mov
inc
pop
mov
adc
sar
jnp
jmp
int
shr
(bad)
sbb
dec
hlt
test
movs
inc
adc
push
nop
outs
mov
jl
fisttp
repnz
push
dec
(bad)
iret
xchg
push
lds
repz
out
dec
and
jbe
retf
cld
int
jae
xchg
inc
sbb
fild
hlt
or
dec
loopne
lahf
mov
sub
push
mov
cmps
pop
xchg
test
cli
(bad)
test
pop
loop
adc
jae
push
iret
(bad)
aam
mov
dec
rcl
ret
mov
js
sar
scas
jg
xlat
in
pop
mov
add
cmc
retf
xchg
xor
jle
inc
xor
mov
xchg
cld
mov
test
cmc
add
lods
and
js
loope
sahf
mov
xchg
pop
xor
inc
pop
lds
jle
xor
inc
and
std
inc
icebp
xchg
dec
and
(bad)
out
int
pop
mov
add
pop
lods
sbb
mov
xchg
jmp
(bad)
cmp
mov
out
jns
adc
int3
pop
jmp
sub
pop
xchg
mov
sub
mov
aad
(bad)
aas
mov
shl
not
and
xor
push
int
xchg
mov
push
aam
int
ret
fadd
pop
mov
cli
js
fbstp
sbb
or
stos
arpl
push
mov
jge
out
imul
sbb
mov
les
cli
adc
in
mov
mov
scas
adc
fucomi
bswap
cs
add
inc
add
(bad)
jmp
sub
jae
shl
dec
push
cdq
cs
sbb
cdq
mov
inc
cdq
cmc
xor
call
xlat
std
jl
cmp
push
dec
adc
or
push
inc
mov
cld
sbb
xchg
int3
mov
icebp
add
pop
das
jge
add
call
lods
pop
mov
aam
outs
pop
outs
xor
dec
loop
jne
sub
and
out
xor
xchg
enter
cmps
int3
xor
sti
mov
push
fist
mov
out
sbb
inc
outs
int3
cld
out
ret
rcr
add
fld
in
jnp
dec
pop
daa
adc
(bad)
push
(bad)
icebp
cli
test
cdq
pop
push
pop
outs
jne
add
jl
jbe
jbe
aaa
ror
jno
sub
or
test
shr
xchg
dec
mov
out
push
xchg
pusha
sub
inc
adc
out
xchg
mov
outs
or
popa
and
mov
push
jmp
dec
imul
dec
mov
mov
sahf
cmp
int
test
aas
in
adc
js
xchg
push
cmp
fnsave
imul
cmp
(bad)
pop
scas
mov
cmp
mov
fimul
jae
pop
mov
adc
mov
push
jno
cdq
scas
cs
shr
pop
loope
add
mov
ficom
cdq
jg
fldenv
repz
in
xchg
cmc
(bad)
adc
pop
add
adc
or
inc
and
jmp
cmp
add
inc
mov
mov
mov
jo
dec
cmp
mov
adc
ins
les
int
ds
xor
xchg
popf
jb
je
cmps
fstp
push
jbe
inc
cmp
cmps
or
or
mov
dec
mov
mov
mov
jg
es
sbb
das
fnsave
xchg
in
jecxz
and
das
out
jmp
mov
and
add
loopne
repz
xchg
int3
and
test
div
push
cmp
outs
or
cmc
loope
xchg
movs
xchg
arpl
fmul
and
mov
rcl
std
dec
leave
mov
fimul
pop
jbe
and
adc
mov
hlt
cdq
mov
arpl
fild
adc
leave
adc
lea
loop
sbb
push
cmps
xchg
mov
bound
ds
iret
ins
mov
push
xchg
jp
adc
fistp
mul
(bad)
push
push
sub
mov
adc
sbb
mov
mov
pop
push
pop
movs
fiadd
popf
jl
dec
daa
push
rol
add
or
mov
dec
movs
shr
dec
mov
pop
cmps
xchg
cmp
and
inc
call
push
scas
jmp
mov
mov
les
pop
popf
mov
push
mov
arpl
cdq
and
lods
xor
sub
fmul
nop
cmp
cmp
jae
inc
push
add
es
(bad)
or
jg
mov
pop
xchg
sub
test
fidiv
pushf
jge
outs
cwde
or
pop
pop
in
mov
add
mov
repz
mov
mov
(bad)
retf
ds
mov
aas
arpl
inc
div
xchg
mov
in
lea
mov
std
sbb
in
movs
mov
mov
lods
(bad)
pop
push
mov
aam
mov
sbb
mov
stos
rcl
daa
push
cmp
lock
cdq
aas
test
fs
cld
mov
sahf
mov
mov
inc
mov
lahf
push
mov
stc
sub
push
scas
out
inc
mov
dec
mov
aad
cld
inc
sbb
and
repnz
cmp
into
push
and
sahf
jle
xchg
mov
or
push
mov
lea
sub
push
jl
cdq
(bad)
fistp
sti
add
xchg
add
sub
xor
sbb
xchg
dec
inc
mov
hlt
adc
pop
aam
aam
(bad)
in
loope
or
or
add
mov
fstp
clc
mov
scas
xchg
clc
daa
(bad)
cld
push
sbb
sub
stc
sti
push
adc
cmp
mov
jg
dec
test
or
nop
pop
(bad)
sbb
movs
and
mov
dec
leave
mov
rcl
sub
enter
icebp
cwde
ja
xor
jge
mov
or
push
pop
push
add
inc
int3
shl
pop
call
rcl
sti
sbb
loop
scas
iret
xor
test
(bad)
or
(bad)
retf
xor
(bad)
in
dec
mov
push
and
mov
lahf
shr
jnp
inc
cmp
mov
and
lock
jnp
dec
pop
popa
shl
loopne
hlt
nop
(bad)
call
out
add
xor
ins
es
mov
push
push
push
imul
test
scas
adc
mov
push
test
retf
push
add
lock
and
mov
push
mov
mov
pop
pushf
xlat
stos
enter
pop
rcr
out
fild
cmp
sub
mov
dec
mov
stos
xchg
fsub
jecxz
inc
dec
cmp
ror
(bad)
scas
call
fisttp
push
xor
pop
(bad)
xsave
daa
pop
in
mov
add
shr
hlt
ins
mov
or
lahf
into
or
sti
jno
cmp
mov
pop
jl
stos
add
adc
aam
mov
cmp
push
adc
aam
xchg
mov
jl
pop
ror
retf
add
push
cmp
jmp
xor
and
pop
push
mov
inc
jb
push
jge
push
aas
adc
inc
jmp
and
adc
inc
sub
cmp
fisttp
cmp
pusha
test
loopne
or
xor
ss
cmp
cmp
add
lock
sbb
pop
test
jp
ror
sbb
cmp
or
pop
scas
mov
mov
cli
jmp
loopne
and
in
mov
rcr
lahf
or
stos
inc
xor
mov
aad
nop
or
jb
and
lahf
test
sbb
pusha
push
das
xor
(bad)
fist
push
or
pop
mov
xor
mov
pusha
xchg
jb
add
shl
mov
push
paddsw
push
gs
push
and
jne
push
push
test
lods
pop
movs
sbb
push
push
lock
sub
cmp
mov
lock
movs
mov
ins
and
xor
dec
imul
ins
mov
dec
(bad)
jbe
xchg
jmp
cmp
stos
jl
das
mov
in
xor
push
stc
nop
dec
pop
push
push
push
inc
inc
aam
inc
outs
call
and
jb
cmp
xchg
(bad)
ss
imul
aaa
inc
aam
jnp
shl
mov
sub
lds
pop
mov
cmp
dec
pop
shl
mov
jle
or
shld
repz
inc
jmp
add
xor
xchg
dec
pop
xchg
mov
fcomi
icebp
fwait
xor
not
leave
fcomp
mov
mov
call
add
inc
call
adc
aam
xlat
adc
mov
mov
fwait
aaa
pusha
fsin
cmp
xor
fnstsw
pop
into
cdq
mov
dec
aas
and
ret
dec
stos
pop
in
sub
adc
test
inc
and
sub
jle
ror
inc
dec
cmps
add
add
enter
jno
jmp
cmps
in
xchg
sbb
push
cs
mov
jns
xchg
ja
hlt
sbb
mov
pushf
mul
jp
test
retf
jg
jle
push
xor
add
mov
push
adc
dec
dec
jmp
(bad)
xor
ss
adc
mov
lds
retf
and
cmp
into
test
ficomp
rcl
repnz
xor
xchg
pop
popa
popf
fsubr
imul
jl
ja
mov
arpl
jne
(bad)
sbb
dec
imul
icebp
aas
aas
mov
fcomp
lods
ja
jnp
add
mov
adc
loopne
jne
in
imul
push
sbb
xchg
mov
inc
dec
jo
xchg
xchg
xchg
inc
or
fadd
js
vpsrld
push
inc
mov
stos
dec
lea
cdq
hlt
jmp
xchg
or
adc
mov
xor
out
loopne
pop
xor
fcmovu
or
js
in
mov
aad
push
dec
jnp
cmovae
jle
lods
adc
mov
daa
cmps
das
popa
pop
scas
ins
jg
jle
pop
add
data16
mov
cmp
fisub
call
xchg
outs
sub
xchg
les
int3
js
fs
jmp
push
pop
inc
gs
cwde
je
aas
rol
pusha
in
lods
xlat
sub
(bad)
sbb
push
mov
sub
nop
jl
sub
mov
ins
pop
mov
daa
or
sub
cli
jnp
fdiv
fsubr
xchg
jae
jns
adc
sub
mov
dec
add
xchg
out
mov
fcom
mov
mov
jp
outs
cmp
aam
pop
test
fst
ret
sbb
es
and
div
out
or
sar
cld
push
mov
mov
xlat
and
pop
out
call
fcmovnbe
push
repz
jecxz
or
sahf
push
sub
stc
loope
lods
adc
or
mov
lahf
push
bound
inc
data16
nop
mov
gs
test
neg
cmps
stc
push
push
(bad)
stos
push
jl
rcr
mov
dec
dec
call
xor
(bad)
push
gs
sub
mov
mov
or
jbe
sub
xchg
int3
jo
mov
loop
iret
mov
dec
pusha
js
jg
push
dec
call
dec
jmp
push
mov
stos
sbb
jle
adc
aad
jmp
out
add
and
fucomip
hlt
fdiv
push
mul
inc
lea
rcl
outs
cmp
jae
mov
push
out
(bad)
test
sub
cld
jb
xor
cmps
stos
dec
and
or
in
inc
pop
sti
sbb
cli
adc
ret
mov
fwait
add
add
inc
add
add
push
neg
xor
mov
xor
sbb
cmp
les
call
repnz
lods
mov
imul
dec
pop
cmp
fwait
xor
inc
cmp
loope
sub
pop
sub
nop
popf
scas
test
or
mov
lock
cs
inc
and
arpl
ja
ja
pop
xor
pushf
mov
inc
iret
add
retf
out
push
pop
push
fstp
mov
daa
pop
int3
scas
(bad)
jb
cmp
mov
or
add
call
pop
xchg
xchg
rcl
xchg
mov
dec
jecxz
and
outs
(bad)
aam
xor
pop
dec
jmp
sbb
imul
sub
inc
in
int
inc
or
popf
xor
adc
es
mov
pop
mov
daa
(bad)
retf
movs
stos
and
xchg
es
loope
jmp
push
call
fisubr
imul
test
in
dec
stc
mov
or
push
dec
cmp
mov
mov
aad
mov
mov
sbb
push
aad
add
movs
jp
jo
iret
rol
loop
outs
call
mov
nop
mov
test
imul
(bad)
es
jg
or
loopne
push
inc
pop
sub
push
loope
aam
or
aad
xchg
add
mov
sub
jbe
adc
cdq
jmp
fld
or
mov
rep
hlt
cmp
dec
shl
xor
push
sbb
jmp
int
jmp
push
aaa
gs
or
cs
xor
pop
repz
aaa
enter
rcr
jns
adc
push
mov
retf
sub
pop
cmp
data16
fwait
pop
hlt
outs
out
pop
into
push
scas
mov
cmps
add
add
mov
sbb
sub
dec
aam
push
mov
cmp
ins
or
push
push
mov
inc
loop
inc
fstp
pop
adc
fiadd
es
mov
mov
ret
div
lock
out
jnp
mov
xor
cli
sbb
inc
fnstenv
push
lock
dec
jmp
xchg
inc
repnz
jo
sub
push
scas
dec
call
inc
daa
push
sbb
and
lahf
inc
loope
adc
fcom
inc
or
pop
fdiv
or
sbb
data16
mov
cdq
aad
sbb
pushf
sub
dec
inc
inc
das
std
dec
adc
xchg
jo
in
test
out
call
loope
retf
movs
and
pop
push
xchg
aaa
and
adc
xchg
push
pop
loope
inc
sbb
add
repnz
ror
daa
ret
add
mov
push
ds
stos
lahf
fdiv
stos
mov
jo
jmp
bound
add
repz
fisttp
adc
js
rol
fmul
fiadd
retf
enter
call
das
pop
jbe
out
les
or
dec
pop
sub
ins
adc
push
and
mov
arpl
inc
pop
aaa
jbe
push
and
icebp
in
aad
shl
movs
fidivr
push
js
mov
mov
dec
aaa
inc
ret
mov
into
cmp
and
in
mov
rcl
inc
fwait
xchg
sbb
data16
lods
dec
rcl
jno
pop
xchg
inc
jo
sbb
int3
xor
pop
popa
dec
out
mov
xor
sbb
movs
mov
mov
cdq
ins
jg
out
mov
jp
gs
add
fimul
mov
xchg
mov
popf
jb
mov
pusha
pusha
nop
ja
inc
mov
into
jne
push
call
ins
and
adc
and
mov
sub
dec
add
out
adc
add
add
fdivr
int3
ds
or
xchg
xor
sti
(bad)
add
dec
scas
push
dec
call
mov
outs
inc
sub
xchg
push
xor
inc
cmp
inc
pop
inc
fdivr
in
mov
shl
mov
pop
mov
pop
mov
mov
cmp
int
push
(bad)
in
cmp
fidivr
sub
and
retf
cmp
jmp
adc
xchg
cmps
mov
and
mov
dec
dec
mov
mov
ror
push
cmp
mov
sub
in
mov
jbe
fadd
dec
retf
sub
(bad)
jnp
test
xchg
pop
retf
xchg
mov
leave
mov
fdiv
out
sub
movs
mov
inc
bnd
mov
lds
repnz
mov
out
out
cmp
mov
rcr
add
ins
mov
in
mov
jmp
fild
cmps
mov
sub
push
rdtsc
(bad)
gs
adc
in
fwait
xchg
push
mov
std
push
cdq
test
push
sbb
dec
xor
mov
ins
sbb
fisttp
add
pop
out
push
and
xor
movs
xor
ss
test
js
and
rcr
add
mov
and
or
adc
fdiv
and
call
mov
mov
inc
fsub
pop
or
or
mov
js
fwait
xchg
dec
and
mov
mov
add
adc
mov
idiv
sbb
rcr
and
shr
dec
jle
lods
mov
pop
out
xchg
shl
push
xor
fisttp
xor
dec
ja
jmp
jecxz
push
sar
mov
dec
xor
retf
loope
mov
loope
out
in
sub
fwait
sub
jo
popf
retf
cmp
stc
imul
test
out
dec
mov
pop
lods
adc
cmps
enter
mov
sar
pushf
idiv
rcl
ds
fldcw
jge
jae
stos
cld
fist
mov
fmul
push
int
in
and
shl
pushf
cwde
into
sbb
mov
and
push
in
pop
inc
test
ins
adc
jae
xor
inc
mov
xor
pusha
shr
push
pop
ds
test
in
ins
add
add
mov
inc
test
adc
push
mov
daa
jb
adc
mov
mov
cmp
xchg
test
mov
movs
repnz
aam
jmp
cmp
xchg
mov
les
xor
(bad)
cmc
mov
and
jae
(bad)
pop
mov
sti
add
inc
gs
lds
cwde
sub
dec
inc
aaa
inc
cs
pusha
jnp
push
cdq
and
ins
xchg
mov
(bad)
or
sbb
mov
push
imul
mov
mov
je
cmps
ins
cmp
pusha
dec
daa
mov
aam
mov
mov
cld
pop
inc
xchg
inc
mov
push
bound
ss
inc
out
loop
stos
or
pusha
sti
stc
shr
mov
push
mov
xchg
rol
cs
mov
dec
mov
and
and
iret
nop
or
neg
push
movs
push
pop
rcr
fst
loopne
pop
pop
push
mov
inc
push
test
nop
in
add
xchg
adc
iret
jns
xchg
or
lea
(bad)
cmps
sbb
sahf
rcr
dec
cs
mov
mov
add
sbb
sbb
inc
cmc
cmp
jae
int
outs
iret
push
fwait
xor
loope
test
fsubr
in
pop
sar
por
(bad)
xor
add
retf
test
mov
mov
(bad)
sbb
and
call
mov
fisub
retf
sub
daa
cmps
pop
retf
cmp
add
outs
retf
dec
jecxz
mov
loope
jae
push
push
loopne
xor
sbb
popa
(bad)
pop
xor
mov
sub
jmp
mov
mov
jp
mov
js
outs
dec
lahf
dec
pop
mov
aad
mov
mov
jmp
push
sub
addr16
lock
sbb
outs
ficom
jne
cmp
inc
hlt
sbb
mov
push
ins
outs
xlat
jl
mov
inc
cs
fs
mov
fwait
ret
movnti
adc
ss
imul
cwde
or
mov
retf
or
jmp
mov
xor
sub
popf
rcr
ss
push
rcr
popf
repnz
bound
pop
mov
pusha
xchg
mov
mov
sbb
jne
cmp
repnz
fsubr
inc
mov
test
ret
cmps
adc
add
(bad)
jecxz
in
mov
dec
stos
cmps
mov
clc
dec
iretw
ror
and
xchg
lea
cwde
aam
shl
int
pop
jmp
pusha
jno
mov
push
push
retf
jp
mov
(bad)
cmp
dec
stos
mov
repnz
cmp
dec
sbb
bndstx
push
sbb
mov
mov
pop
xchg
pop
pop
mov
mov
jmp
aaa
or
sub
mov
into
sub
cdq
mov
rcl
jns
adc
rcl
mov
and
clc
inc
sub
fnstcw
ds
aad
jo
fmul
push
sti
pusha
inc
(bad)
in
pop
adc
mov
jbe
mov
mov
int3
inc
mov
pop
out
mov
sub
inc
adc
and
pushf
jb
mov
sbb
push
jo
push
into
cwde
pop
push
pop
sahf
pusha
pop
fadd
cmp
cmps
outs
jae
sub
jmp
pop
jp
aam
imul
dec
bound
mov
lods
sbb
push
add
inc
dec
jo
mov
xor
retf
cmp
adc
jb
popf
imul
out
mov
push
xchg
add
je
out
test
mov
push
add
mov
cs
repz
movs
pop
ins
gs
jmp
or
cmp
data16
daa
mov
fst
jbe
push
xchg
cmp
add
xchg
dec
(bad)
(bad)
mov
hlt
rcr
gs
retf
clc
imul
test
rcl
ret
inc
push
xor
dec
cmps
imul
inc
jg
repnz
ins
movs
ja
call
jo
or
xor
arpl
mov
sbb
push
inc
je
outs
adc
shr
cmps
test
(bad)
mov
jno
mov
push
pushf
xlat
push
es
das
fdiv
std
push
and
cli
pushf
mov
cld
aaa
fwait
(bad)
repz
mov
(bad)
xchg
adc
ins
adc
sbb
popa
mov
call
mov
pop
(bad)
frstor
mov
or
xchg
enter
jmp
pusha
dec
sub
into
sbb
je
sbb
sbb
inc
jmp
push
dec
in
inc
stc
pop
sub
push
xchg
clc
or
loopne
mov
add
inc
cli
imul
pop
stc
sar
cmp
sti
inc
adc
adc
sbb
mov
and
fstp
and
dec
push
inc
mov
push
pop
lods
or
mov
fiadd
daa
fwait
or
mov
test
and
inc
loop
and
pusha
adc
mov
aas
jo
pop
mov
push
jbe
cmp
mov
call
imul
cmps
xor
jb
jns
dec
jp
mov
add
arpl
not
mov
sub
fld
imul
daa
mov
loop
nop
into
fisttp
xchg
pop
popa
push
jbe
ret
push
movs
xchg
aad
mov
or
or
popf
scas
sbb
hlt
cmp
sbb
sub
push
addr16
test
xchg
jbe
xchg
xor
sahf
(bad)
cmp
mov
outs
out
je
sbb
fwait
mov
je
aad
sbb
mov
pop
inc
in
xor
push
mov
out
fimul
aam
mov
mov
retf
add
ja
fstp
popf
xchg
dec
add
cwde
inc
fild
cmp
adc
je
sub
outs
add
cmp
push
cmps
shl
call
inc
push
xchg
(bad)
pop
dec
or
ret
mov
aad
mov
sbb
(bad)
xor
pop
cmp
cmc
adc
push
and
mov
sahf
(bad)
fucom
jl
pop
mov
xchg
leave
repz
outs
cmps
int
sub
sbb
lods
push
pop
push
cmc
adc
cli
xchg
mov
jmp
sub
adc
xor
(bad)
sbb
mov
cld
enter
in
xor
jl
push
pop
sbb
jl
mov
sub
int
call
pop
mov
cmp
sbb
in
movs
dec
call
mov
and
xlat
jno
test
rcr
mov
out
mov
ret
xchg
adc
cmp
jle
jns
fadd
pusha
mov
mov
shl
and
lahf
inc
cmp
xchg
out
adc
mov
cwde
out
jmp
ss
and
bnd
and
in
test
cmpxchg
pop
sahf
loope
jae
cmp
sbb
das
call
mov
add
int
es
xchg
std
push
push
push
xchg
out
xor
imul
jl
push
xlat
add
out
fidivr
push
ror
mov
outs
pop
cmps
imul
push
repz
xchg
jp
or
leave
ins
out
sub
cmps
cmp
pop
xchg
pop
loope
inc
mov
mov
or
add
in
push
cmp
enter
mov
fstp
fbstp
jecxz
lods
xor
add
shr
loop
pop
mov
pop
out
pop
cmp
cmps
sbb
or
push
jo
adc
xor
sbb
test
mov
push
jecxz
xor
popa
or
dec
mov
sbb
inc
pusha
into
push
lds
adc
popa
jnp
mov
imul
daa
sbb
fsub
ror
mov
mov
(bad)
pop
mov
les
lds
loope
mov
call
xor
inc
enter
inc
mov
out
mov
dec
sbb
jmp
xchg
std
jb
enter
aas
(bad)
fiadd
aaa
jecxz
loope
or
ins
xor
or
das
ror
fwait
mov
fdivr
fild
adc
adc
mov
pop
outs
xchg
bound
mov
or
add
addr16
repz
lea
jno
mov
sti
aaa
jge
jnp
jmp
fs
and
sub
add
retf
(bad)
dec
mov
outs
sahf
xchg
scas
xchg
dec
push
test
rcr
pop
push
inc
scas
daa
adc
(bad)
xchg
nop
test
xchg
mov
sbb
jge
sub
or
js
loop
xor
cmp
in
push
cmp
cmp
jno
push
aam
sar
in
in
mov
je
push
ror
lea
mov
in
ja
fmulp
xor
popa
out
mov
iret
loope
sbb
adc
int
fmulp
xor
stos
das
push
xchg
fnstsw
movs
or
lods
push
jmp
ins
inc
data16
stos
daa
and
in
pushf
in
dec
xchg
icebp
shr
in
repnz
outs
push
mov
and
bound
loop
popf
cmp
xchg
pushf
or
mov
stos
in
mov
xlat
jl
aas
push
into
stos
jmp
and
cmp
push
call
sbb
dec
ins
xchg
(bad)
movs
arpl
popa
sub
retf
lahf
cld
lock
push
arpl
mov
sbb
jecxz
push
mov
(bad)
ins
inc
cmovnp
pushf
(bad)
std
(bad)
loopne
in
inc
ror
es
loopne
fs
imul
add
sbb
mov
inc
je
mov
mov
add
add
add
int
dec
push
mov
sbb
jno
scas
and
or
imul
int
movs
adc
sub
out
icebp
add
fwait
pop
fild
pop
mov
push
or
cmps
repz
adc
fadd
or
inc
lahf
mov
pop
inc
in
(bad)
rol
dec
push
dec
xor
sbb
shl
push
or
in
mov
jmp
shl
jns
jl
faddp
rol
call
sbb
data16
in
sti
fadd
in
dec
sub
ret
adc
xor
cmc
(bad)
xor
xor
fldenv
test
cmps
jge
or
lods
ins
outs
xchg
pusha
fisubr
sub
ror
xchg
dec
mov
cs
push
shl
pushf
mov
sbb
cmps
(bad)
push
imul
jge
mov
stc
test
xor
inc
mov
pop
fimul
imul
out
sub
enter
jo
push
jmp
cmp
add
nop
sub
fdivp
mov
pop
test
cli
and
mov
(bad)
jl
stos
mov
or
dec
mov
dec
pop
jae
(bad)
sub
push
add
sub
je
(bad)
and
adc
imul
cmp
adc
je
mov
sub
mov
jmp
rcl
les
hlt
aad
leave
popa
or
stos
xchg
adc
ror
ds
cmp
pop
loope
out
scas
fimul
sub
sub
push
add
jno
sahf
rcl
mov
mov
push
or
xor
xchg
lods
mov
sbb
fsub
or
jle
jbe
cmp
ins
pop
cld
ret
sbb
iret
daa
shl
call
pop
scas
jg
mov
dec
sbb
lods
pop
test
aad
xor
add
rcr
ja
fwait
mov
push
jg
sub
int
into
(bad)
mov
out
ret
mov
dec
arpl
fs
mov
add
jns
or
stos
xor
xchg
lds
sbb
dec
mov
jle
and
sub
mov
sub
stc
mov
sbb
mov
es
jne
cmp
push
dec
(bad)
gs
xchg
imul
sub
adc
cmp
scas
fild
int
fst
(bad)
test
sub
inc
js
mov
jbe
enter
sub
cmp
aam
cmc
push
mov
arpl
jb
xchg
sar
pop
xchg
dec
daa
or
out
int3
or
inc
dec
add
repz
xchg
mov
dec
(bad)
mov
adc
add
jo
jnp
and
sbb
jl
les
dec
int
retf
lock
enter
cs
vmovntps
lea
loop
das
mov
mov
pop
dec
xor
data16
std
enter
je
int
pop
mov
rcr
int
addr16
inc
inc
imul
fadd
int
push
loop
xchg
adc
in
mov
fisttp
les
push
xor
mov
inc
dec
hlt
xchg
pop
mov
push
imul
push
xor
push
jmp
scas
jne
jg
aad
and
jnp
das
or
aaa
bound
cdq
sub
pop
(bad)
sub
or
jmp
xchg
adc
dec
xchg
out
push
jmp
sar
xlat
dec
out
aas
cmp
inc
sti
(bad)
mov
bound
xchg
push
xlat
lock
inc
ret
test
push
lods
xchg
jb
es
add
out
sahf
or
inc
cmp
hlt
mov
neg
pop
cwde
fsub
movs
or
jge
jns
out
and
out
das
or
cmc
jmp
movs
std
or
fstp
int3
sahf
ja
jmp
stos
jns
test
jne
jno
lods
mov
cwde
or
cmp
bound
sbb
jnp
in
push
aaa
and
jmp
popf
imul
ins
jns
mov
push
pop
imul
push
push
ror
or
int
ins
cmp
mov
clc
mul
out
ins
push
getsec
(bad)
xchg
jae
adc
mov
clc
sete
(bad)
outs
retf
add
fnsave
std
and
ja
pop
sbb
mov
lea
out
push
or
or
repnz
dec
xchg
and
mov
and
cli
shl
xor
sub
sub
adc
and
test
push
inc
sub
push
inc
mov
call
mov
fs
mov
aas
jle
movs
loopne
inc
mov
ins
(bad)
repnz
add
enter
dec
popa
adc
pop
lods
call
mov
(bad)
call
repnz
dec
fcomp
push
xchg
arpl
call
test
out
outs
jmp
stos
pop
or
pop
pop
adc
sbb
push
inc
or
int
neg
je
xor
mov
mov
shl
push
int
xor
mov
lock
repnz
ss
pop
aaa
mov
xchg
pop
or
test
jbe
inc
and
shl
je
movs
and
push
dec
jp
sub
dec
movs
sti
adc
stos
cli
stos
in
xlat
cmp
pop
sub
cmp
adc
(bad)
dec
ja
mov
imul
xchg
fnstcw
cmps
rcr
mov
out
adc
out
fimul
sar
lea
test
dec
sbb
xchg
out
mov
sbb
sub
jb
inc
xchg
sub
add
push
les
(bad)
pop
mov
jo
out
fmul
inc
ja
stos
mov
or
xor
outs
cdq
or
add
cmps
fidivr
cwde
ds
jo
pop
sub
inc
inc
mov
sbb
aaa
popf
test
je
mov
scas
test
jne
push
pop
fadd
cwde
push
add
mov
scas
cdq
or
jl
dec
ror
dec
les
mov
pop
mov
cmp
xor
scas
mov
dec
mov
loop
pop
inc
mov
lods
cmp
inc
aam
fstp
lods
and
test
rol
outs
adc
push
js
popf
jl
data16
xor
cld
pop
ror
cmp
loop
jg
or
test
outs
cmp
fisubr
pusha
inc
mov
adc
cs
jp
xchg
in
cmp
mov
les
inc
add
int3
das
sbb
cmp
pop
cdq
test
test
aas
outs
xchg
fstp
mov
sbb
inc
adc
in
movs
push
push
lds
aad
push
or
push
inc
call
jno
push
or
div
adc
test
mov
xchg
vpsubusb
xchg
or
in
jnp
xor
jl
(bad)
sbb
dec
ins
nop
or
fcomp
xchg
ficom
clc
xor
int3
retf
ds
call
inc
xor
(bad)
sar
inc
pop
repnz
xor
outs
pop
add
or
cmp
imul
pop
adc
push
sub
leave
sahf
aaa
jae
cmp
mov
jae
mov
inc
mov
lock
jb
sahf
cmc
test
mov
jmp
dec
cli
ins
imul
jp
add
mov
adc
repnz
jmp
mov
(bad)
lds
stc
icebp
fs
imul
adc
pop
int
inc
push
cmps
lds
mov
int3
aas
dec
(bad)
loop
dec
ret
icebp
lds
addr16
xchg
mov
arpl
test
sahf
jne
aam
ja
call
les
hlt
inc
lods
enter
ins
mov
jecxz
pushf
icebp
inc
aam
movs
pop
adc
xchg
mov
(bad)
sub
ins
or
inc
add
and
xor
mov
jo
jmp
inc
pop
pop
inc
aad
and
add
inc
rcl
retf
xlat
adc
mov
enter
aad
jle
dec
xchg
iret
inc
mov
fdiv
punpcklbw
jmp
aad
sub
jg
push
call
push
loop
mov
xor
sahf
(bad)
jns
fwait
je
int
ja
jmp
imul
sbb
repnz
mov
fistp
imul
ret
sbb
rcl
mov
popa
dec
sbb
clc
jb
lock
mov
xor
movs
sbb
in
jl
fld
fimul
sbb
push
(bad)
jne
(bad)
adc
retf
std
sahf
push
dec
push
push
retf
nop
lock
rol
pop
in
pop
mov
inc
icebp
loopne
outs
cdq
pushf
push
or
inc
out
mov
pop
push
scas
repz
and
cdq
sbb
xor
push
push
mov
fdivr
inc
xchg
cwde
sahf
mov
adc
mov
xor
xchg
cmp
enter
movs
std
ret
lock
dec
add
jge
imul
(bad)
pop
mov
imul
sbb
jmp
xchg
adc
or
mov
or
mov
sar
cmp
repnz
add
sub
inc
add
enter
ds
in
xchg
lock
and
push
(bad)
(bad)
jle
lds
call
into
cmp
(bad)
lods
rol
xor
in
into
xchg
test
enter
in
imul
push
xchg
test
cmp
sub
or
dec
jne
ja
es
mov
aaa
mov
mov
sub
and
nop
jmp
popf
fwait
es
iret
nop
cmp
dec
sub
mov
cs
std
adc
cld
mov
cld
scas
or
pop
(bad)
gs
mov
xchg
imul
in
into
jge
sbb
jnp
shl
mov
lock
jg
fcom
movs
ds
jecxz
inc
fsub
cmp
cmc
imul
in
comiss
cli
pop
push
add
leave
add
iret
in
shr
addr16
add
lock
jne
cmc
push
sbb
sbb
cs
mov
inc
jo
jo
lds
loop
sbb
std
imul
dec
mov
mov
ins
mov
add
dec
and
fisttp
sbb
cmp
fwait
repnz
add
xchg
cmp
xchg
mov
cmp
inc
pop
cmc
icebp
add
iret
mov
pop
mov
and
ds
lods
sahf
sti
ins
xchg
call
nop
sbb
(bad)
fmul
sub
aam
jle
repz
mov
and
loope
mov
mov
dec
clc
inc
cmp
addr16
ins
adc
(bad)
jmp
fiadd
fmul
pop
inc
xor
ds
jecxz
sbb
mov
aas
push
mov
sbb
cmps
and
loope
ret
jnp
jne
cmc
std
lds
mov
sub
std
and
xlat
loopne
aaa
pop
outs
ja
cli
jb
push
inc
adc
push
lea
ds
push
inc
jnp
call
mov
push
mov
or
in
xchg
sub
xor
jo
imul
call
std
add
popf
jb
sbb
jno
inc
jo
les
mov
(bad)
sahf
push
call
ja
(bad)
jo
cmp
mov
jecxz
jnp
pop
lahf
or
mov
retf
arpl
or
sti
adc
popf
outs
pop
push
mov
pop
stos
rcl
mov
mov
test
cmps
shr
daa
(bad)
iret
cmp
mov
inc
icebp
sbb
(bad)
shl
pop
push
xlat
push
imul
sub
out
inc
xchg
pop
pop
cmp
outs
jbe
push
sub
call
adc
cmps
mov
adc
fistp
iret
std
imul
dec
and
dec
test
adc
leave
push
fs
pop
sti
push
nop
ds
sub
cld
inc
fdivp
or
leave
pusha
and
dec
leave
add
adc
mov
inc
pop
and
test
jbe
or
sub
neg
scas
fs
pop
jle
enter
test
ret
out
mov
add
sub
ret
jbe
inc
cld
test
cmp
pop
fwait
mov
mov
push
mov
in
iret
add
loope
inc
xchg
or
ins
xchg
dec
sti
and
xchg
(bad)
sbb
adc
scas
mov
sahf
and
lahf
in
push
ins
cmp
lods
mov
xor
mov
push
push
test
pushf
push
adc
push
pop
popf
stos
sub
mov
in
or
movs
or
enter
sbb
adc
xchg
jmp
call
rcl
mov
adc
retf
sub
dec
xor
and
push
out
rol
and
or
mov
sub
lock
jns
into
out
jbe
xchg
jo
rol
out
mov
and
fcmovne
push
ficom
cmp
cld
dec
shl
inc
loop
jg
les
cmps
sbb
into
stc
cmp
sub
gs
imul
pop
xchg
dec
cs
xor
xchg
lea
pop
fisttp
aaa
sahf
dec
sub
jecxz
pop
adc
fwait
mov
jbe
daa
sbb
sti
sbb
pop
js
fstp
dec
jg
cmps
(bad)
mov
(bad)
std
cmp
mov
dec
xchg
(bad)
or
ins
pop
test
les
data16
inc
leave
add
jp
mov
and
xor
push
push
bound
scas
and
jae
mov
and
rol
push
push
cmp
call
jo
test
movs
lock
lods
dec
test
int
sbb
(bad)
loop
loopne
(bad)
sbb
outs
cmp
clc
ret
mov
je
cmps
mov
les
push
jnp
aas
push
add
out
cmp
mov
pop
sbb
add
and
dec
mov
shl
lds
rcr
test
js
and
aad
fwait
mov
push
push
shl
fild
dec
hlt
and
fs
pop
movs
addr16
aaa
out
outs
leave
sbb
jg
addr16
outs
adc
sbb
cld
fild
add
jno
and
sub
push
or
stos
test
push
add
out
jns
(bad)
cmp
cmp
mov
shr
sbb
scas
daa
gs
loop
adc
mov
stos
js
pop
mov
das
xor
dec
mov
js
xchg
and
mov
stc
xchg
adc
cld
iret
dec
sahf
cmps
and
aam
cdq
and
fild
pop
shl
xor
add
cmp
pop
push
idiv
push
push
xchg
aad
in
movs
xor
push
mov
inc
pop
lods
jns
xor
call
and
jmp
lods
loop
dec
jmp
sub
mov
scas
cmps
js
jmp
add
pop
dec
scas
sub
push
sbb
push
add
dec
test
push
sbb
xchg
mov
lock
pop
mov
ins
test
es
mov
sbb
xor
mov
into
sti
sub
(bad)
hlt
and
cli
movs
jo
loopne
add
push
pop
gs
iret
push
imul
adc
jo
scas
mov
aad
mov
aam
lahf
nop
xor
xor
movs
mov
xor
mov
or
dec
and
stc
jne
jns
mov
inc
(bad)
nop
mov
(bad)
mov
std
fild
ja
push
cmps
push
out
add
int3
add
lods
xchg
clc
out
shl
mov
aaa
(bad)
pop
jmp
sbb
and
outs
sub
jbe
pop
jmp
lods
test
in
das
push
dec
jge
ficom
xchg
lock
mov
dec
push
mov
mov
jp
push
rol
push
inc
push
fs
xor
iret
stos
loope
popw
fsub
push
sub
aas
mov
mov
imul
(bad)
push
stc
popf
loopne
xchg
push
pusha
jo
inc
das
mov
or
repnz
jae
sub
sbb
and
mov
xchg
push
fcom
fwait
aad
popa
mov
adc
mul
mov
inc
sbb
iret
xchg
(bad)
jb
ja
xchg
mov
inc
mov
jmp
pop
inc
cmc
ret
hlt
mov
or
jmp
pop
rol
and
push
jle
in
jne
adc
xchg
dec
lods
adc
or
pop
mov
sbb
pushf
cld
cmovne
cmp
add
push
lods
inc
dec
xchg
jbe
mov
sahf
push
daa
and
leave
push
sub
mov
shl
ds
push
fisttp
inc
and
scas
xor
leave
mov
mov
leave
int3
lods
push
stos
mov
sbb
movs
je
ja
in
gs
cmp
and
daa
ror
or
push
fcmovne
lea
mov
mov
add
shr
mov
jp
sub
loope
adc
adc
ss
add
repz
or
enter
dec
stc
shr
jp
mov
daa
sub
clc
add
mov
pop
(bad)
jl
icebp
fmul
loop
loopne
push
pop
dec
fucomp
add
push
push
rcr
jns
call
dec
sahf
pop
ret
pop
cmp
mov
ins
xor
pop
imul
pop
mov
loop
pop
cmp
inc
cli
mov
cdq
xchg
mov
fdivr
leave
lds
int3
ficom
aam
fdiv
sub
cmc
fistp
jae
pop
cmps
mov
mov
and
repnz
xor
ret
repz
not
cmp
add
cmp
and
pop
pushf
pop
mov
mov
sti
(bad)
xor
sbb
xchg
add
jmp
dec
push
(bad)
mov
xchg
repz
lock
cs
cmc
call
jmp
jno
cmp
in
ror
repnz
xchg
cmps
aaa
sbb
cmp
add
jns
push
jecxz
movs
fidivr
out
fisub
aas
adc
ins
mov
js
imul
sub
mov
aam
sbb
int3
mov
xor
in
jge
and
mov
mov
inc
iret
scas
mov
jns
int3
fsub
adc
int
call
jecxz
and
aaa
loop
fucom
bound
pop
shr
hlt
jmp
outs
test
sub
in
call
add
sbb
pushf
sbb
and
and
fwait
jae
sub
xor
sahf
aam
call
dec
cmp
and
mov
lahf
and
hlt
retf
movs
xlat
aad
ror
xor
das
sub
scas
data16
xchg
gs
jg
mov
pop
mov
wbinvd
cmp
jno
mov
pop
out
add
das
out
jne
les
std
mov
pop
aam
clc
jae
loope
mov
xor
mov
cs
js
(bad)
mov
cmps
loopne
ret
jge
adc
scas
or
push
sar
(bad)
pop
dec
cmps
xor
dec
sub
xchg
pushf
push
push
pusha
out
push
pcmpeqd
sbb
mov
ds
cmc
int
mov
mov
cmp
xlat
mov
cmps
aam
sub
sbb
retf
and
retf
out
data16
pop
dec
sbb
cmps
call
mov
lods
call
inc
mov
arpl
cmps
adc
cmps
sub
(bad)
aas
(bad)
or
mov
jae
in
or
lock
mov
rcr
or
js
push
mov
es
pop
push
cmp
out
or
mov
jne
mov
loope
iret
out
dec
pop
cwde
xor
mov
jmp
and
bound
inc
or
test
out
rcl
push
out
lock
shl
sbb
sub
sahf
push
push
fwait
and
xchg
icebp
js
arpl
std
xor
icebp
(bad)
jle
jmp
cmps
push
mov
pusha
mov
cmps
pop
add
dec
cli
dec
imul
(bad)
pop
ds
inc
dec
sar
loop
mov
dec
jne
jg
cld
pushf
sub
popa
mov
ret
jl
xor
or
adc
repnz
scas
aaa
ret
shl
mov
pushf
push
cmp
and
mov
dec
jmp
movs
nop
cmp
or
mov
push
push
ins
pop
add
xor
mov
xor
mov
adc
aas
test
ret
jg
or
in
inc
je
jmp
movs
dec
das
pop
pop
adc
stos
adc
and
dec
stos
scas
mov
loopne
repz
inc
scas
xchg
add
ret
shr
or
jg
in
jbe
sbb
fadd
outs
(bad)
fldenv
jg
sbb
or
mov
and
not
fbld
movs
inc
ja
or
mov
xor
mov
leave
pop
sub
in
mov
mov
aaa
movs
mov
xor
inc
or
xchg
mov
add
or
(bad)
jle
fcomp
push
mov
jae
repz
inc
loop
mov
inc
pop
xor
jg
mov
stos
dec
push
repz
int
jo
mov
pop
cmps
dec
inc
xor
sar
les
xor
in
hlt
je
mov
imul
gs
add
sbb
sub
pop
mov
xchg
and
and
push
(bad)
sub
adc
test
jns
stos
or
xchg
ja
es
idiv
sub
dec
pop
cmp
sbb
mov
or
xor
mov
out
and
pop
movs
mov
inc
loopne
or
(bad)
and
(bad)
or
jle
xchg
fnstcw
hlt
sti
mov
cmp
neg
dec
push
and
imul
jb
xchg
xor
(bad)
nop
lock
inc
call
xchg
pop
xor
fisubr
ds
pop
add
jmp
add
xchg
jecxz
in
sub
es
(bad)
loope
cli
(bad)
loope
outs
xchg
arpl
xor
pop
sbb
cmp
dec
or
sbb
mov
and
mov
in
lahf
add
sbb
test
scas
jae
sbb
xchg
push
sbb
and
xor
mov
dec
pop
aaa
sub
(bad)
pop
inc
sahf
movs
mov
sub
pop
pop
xchg
jb
cmps
(bad)
int3
mov
fwait
xor
push
sbb
repnz
daa
mov
push
mov
xor
adc
mov
and
shl
iret
jle
xchg
scas
or
jmp
fsub
mov
xlat
mul
push
inc
dec
xlat
or
pop
stos
add
sar
rol
sahf
fdiv
mov
fiadd
xchg
rcr
imul
add
outs
movs
adc
mov
scas
add
leave
and
add
ja
ss
adc
mov
and
cmp
jb
dec
imul
std
out
xor
cmp
fiadd
outs
xchg
mov
push
mov
mov
cli
adc
jno
jo
dec
xchg
in
call
loope
xchg
add
into
(bad)
fsubr
icebp
scas
sub
add
ret
or
cmp
rcl
push
inc
or
push
fsubr
xor
sbb
je
fnsave
jmp
repz
push
cli
pop
mov
jl
and
icebp
fwait
mov
pusha
ret
mov
mov
fs
nop
ret
in
inc
ret
xlat
sub
adc
(bad)
jnp
ins
pop
mov
int3
pop
inc
jb
fwait
adc
push
fldenv
bound
mov
cmps
call
les
cmp
mov
mov
rcl
add
inc
es
dec
sbb
xor
fcomp
sbb
mov
mov
pop
or
adc
cmps
add
ja
outs
imul
mov
in
retf
fnstcw
cmps
in
cmp
dec
fadd
mov
jecxz
bound
popf
push
test
fisubr
xchg
inc
test
sbb
pop
and
adc
sbb
pop
fsubrp
call
or
cmp
(bad)
(bad)
(bad)
lds
ret
jns
dec
outs
sbb
retf
fptan
js
out
lahf
xchg
aaa
jae
cli
stos
test
mov
int3
jle
jb
pop
lea
shl
ror
cdq
arpl
(bad)
or
out
ror
int3
pop
stc
push
inc
out
sub
ret
in
mov
add
ret
mov
inc
ret
test
dec
add
es
(bad)
xchg
dec
movs
cmp
sahf
call
int
adc
inc
and
mov
sub
mov
xchg
pop
aas
aam
arpl
mov
pop
test
jbe
or
jmp
add
(bad)
int
ficom
aam
mov
ins
outs
cmp
adc
jge
sar
fcmove
xor
(bad)
fwait
mov
sub
fdiv
sub
ror
mov
push
mov
push
fwait
cmps
sbb
mov
movs
jmp
cmp
sub
or
jle
lds
nop
rcl
jne
or
(bad)
inc
push
mov
xchg
jl
int3
mov
jae
adc
add
dec
and
pop
dec
je
pop
sub
sbb
cmp
mov
repz
scas
sbb
cmps
mov
arpl
imul
mov
pop
leave
es
rol
mov
xor
pop
dec
adc
or
push
fld
jmp
xor
fdivr
sar
fdiv
dec
or
sbb
(bad)
ins
out
nop
jecxz
push
pushf
out
xor
dec
jmp
xchg
xlat
mov
xchg
xchg
xchg
and
dec
loope
rol
xor
xchg
aaa
xchg
iret
dec
rcr
mul
push
mov
mov
outs
call
and
pop
popa
cmp
dec
jbe
mov
xor
je
out
stos
or
int
scas
aas
xchg
test
cmp
cmp
xlat
out
in
sbb
mov
push
push
outs
pop
and
in
out
cmp
in
pop
test
push
sbb
aas
inc
lods
imul
jp
cmp
lock
aam
sahf
push
movs
popf
(bad)
cmp
(bad)
cmp
clc
inc
add
and
mov
add
ja
fstp
sub
dec
sub
scas
mul
cli
rol
xlat
lea
sub
sub
pushf
in
movs
call
popa
push
ins
adc
(bad)
scas
ret
and
or
fcomi
test
pop
or
push
mov
xchg
jnp
out
lods
and
outs
sbb
mov
mov
push
or
xlat
adc
and
sub
adc
mov
or
mov
sbb
je
inc
xor
dec
into
add
test
retf
outs
jae
rcl
mov
shl
rcl
inc
push
ret
out
int3
fs
jge
xchg
fs
int
aaa
cmp
repz
ror
loopne
stos
retf
daa
shr
push
test
or
cmp
dec
clc
cmp
sbb
mov
jo
fsubrp
jmp
shr
int3
repnz
xchg
les
add
ret
mov
adc
mov
add
push
adc
pop
xchg
jbe
jge
sbb
push
cdq
push
and
push
adc
xchg
stos
dec
sub
dec
dec
hlt
jmp
xor
jb
fidiv
jmp
cmp
in
mov
int3
push
shl
data16
rcr
sti
cmp
out
addr16
(bad)
faddp
mov
popf
sbb
xchg
push
shld
jae
retf
xchg
cdq
sar
inc
lods
mov
pushf
dec
xor
dec
push
and
call
call
mov
mov
cs
daa
dec
popa
ins
pop
push
movs
movs
fwait
je
xchg
xchg
test
stos
sbb
mov
jns
jl
mov
test
mov
adc
lds
lahf
div
sbb
adc
mov
out
jbe
aam
and
icebp
sbb
xchg
cmp
pop
dec
test
pop
cmp
retf
push
and
push
imul
and
and
ss
scas
cmp
inc
sub
jnp
leave
jg
xor
aas
leave
rcr
cld
fwait
sub
jbe
add
outs
loopne
les
mov
das
jo
cmc
push
cli
add
or
aas
sub
jmp
pop
xchg
ins
xchg
mov
jb
jmp
fnstenv
cmp
jg
rol
fdivr
rol
pop
lods
xchg
arpl
mov
jo
cli
pop
add
lock
cmps
fisub
pop
imul
mov
fdiv
dec
push
iret
or
stos
cld
das
dec
dec
jae
inc
sbb
clts
adc
adc
stc
pop
mov
daa
fstp
mov
push
ss
mov
ins
xchg
xor
aas
sbb
inc
mov
movs
movs
dec
jp
sbb
xor
int3
(bad)
adc
in
call
sbb
out
pop
dec
pop
ins
push
xchg
retf
cmps
in
cmp
sub
sub
dec
loop
xchg
mov
pop
mov
lds
push
loope
adc
sahf
ins
or
sar
stc
popf
push
repnz
in
or
(bad)
loop
pop
enter
xor
mov
or
mov
(bad)
in
mov
and
lock
dec
sbb
rol
mov
mov
jmp
jle
jne
add
call
xlat
scas
inc
or
push
movs
retf
jb
sahf
int3
clc
out
add
or
enter
shl
pop
dec
jl
jne
stc
pop
dec
cmp
imul
(bad)
sbb
xlat
jg
adc
mov
lds
pop
or
sbb
movs
push
push
sub
jne
pop
cld
cmc
aam
scas
ror
retf
int3
mov
and
mov
test
inc
inc
in
stos
xor
cmps
pop
cdq
cli
(bad)
jl
and
shl
xchg
adc
push
(bad)
movs
lods
cmp
jp
(bad)
ja
mov
and
mov
mov
rcl
nop
push
enter
out
pop
mov
jnp
add
add
push
adc
les
loop
(bad)
and
mov
mov
je
loop
adc
push
sahf
cmps
jge
inc
sub
fadd
std
lods
pusha
push
arpl
or
lock
arpl
jp
adc
mov
dec
aam
inc
jmp
les
and
(bad)
rcl
dec
cmp
fsub
cld
outs
cmps
mov
ins
adc
mov
xchg
js
imul
cwde
jle
cdq
mov
pop
jne
dec
jmp
add
mov
mov
and
repnz
xor
jno
mov
pushf
nop
in
or
adc
test
lahf
dec
fmulp
mov
inc
push
lods
pop
stos
cdq
cmp
sbb
jns
je
stos
jp
cld
sub
shr
add
lods
(bad)
jle
test
(bad)
aam
or
jmp
sbb
sti
arpl
jbe
loope
fdivr
stc
and
aam
xchg
(bad)
push
loopne
cmp
loopne
cmp
inc
jmp
lfs
mov
mov
adc
rol
xchg
cmp
xlat
jae
scas
lods
shl
sahf
push
lock
test
in
sub
mov
and
cmp
dec
mov
ins
fist
loopne
mov
sbb
fucomp
or
inc
mov
int
into
and
ret
cmp
sti
(bad)
out
sub
cmp
out
xor
xchg
retf
call
cmp
into
jns
jno
clc
mov
ins
mov
adc
enter
sub
sub
int
scas
clc
mov
mov
dec
jnp
dec
adc
cmp
or
xchg
mov
inc
bound
jle
test
(bad)
xor
inc
lock
xchg
pop
jmp
int
out
jb
dec
or
sar
ret
je
xor
les
jle
loope
xchg
mov
ja
fst
pushf
pop
cmps
mov
sahf
pop
pop
add
and
test
push
in
cmc
mov
dec
jmp
sbb
std
jns
jns
xor
xchg
pop
rcl
inc
call
arpl
pop
push
cmps
imul
jmp
sub
daa
jb
lahf
stos
leave
loope
imul
mov
sahf
mov
imul
(bad)
adc
push
and
(bad)
mov
mov
call
xor
pop
dec
test
jne
call
mov
fstp
movs
in
sub
(bad)
cmp
xchg
pop
or
pop
push
jno
or
xor
aaa
stc
cld
rol
out
mov
(bad)
shr
in
fbld
sbb
lds
ds
(bad)
mov
jae
in
mov
je
mov
xor
xor
jp
push
mov
mov
jb
aad
push
rcr
fadd
in
ret
adc
and
adc
xchg
daa
mov
fcom
adc
adc
or
popf
call
dec
sbb
scas
loopne
jne
xchg
jg
pop
xor
jg
or
push
mov
dec
retf
aaa
cwde
pop
lods
pop
pop
(bad)
jmp
inc
push
jge
gs
sbb
imul
add
leave
mov
pop
mov
sub
aam
sar
mov
pushf
pop
inc
push
jb
push
imul
mov
pop
dec
out
mov
mov
das
in
dec
(bad)
xor
push
adc
push
shr
repz
dec
test
sub
lods
mov
cmp
sub
jecxz
sub
push
icebp
fdivr
test
test
pop
mov
mov
loope
shl
es
mov
sbb
bound
mov
fistp
xor
cs
or
mov
gs
or
xor
in
in
jbe
(bad)
sbb
xchg
daa
sbb
neg
push
ja
xor
xor
mov
pop
dec
adc
fiadd
sbb
outs
mov
add
(bad)
and
ja
inc
gs
loopne
mov
mov
xor
inc
xchg
inc
pusha
xchg
add
ss
lods
sub
cmp
add
icebp
movs
pop
into
cmc
mov
mov
push
mov
test
push
mov
mov
sub
pop
dec
xchg
jbe
adc
(bad)
mov
inc
pusha
scas
ja
pop
(bad)
jp
les
cmp
daa
out
(bad)
imul
mov
mov
fdivr
loop
es
push
mov
outs
loope
sbb
dec
loop
pop
(bad)
jno
ins
stos
add
mov
mov
and
push
mov
das
rcl
adc
push
lods
mov
mov
cdq
add
jmp
pop
in
mov
jbe
pop
mov
mov
cmp
inc
adc
jmp
dec
jns
ins
imul
outs
pop
fcomp
jp
(bad)
and
or
sbb
xchg
in
cwde
mov
fadd
dec
cli
loop
cwde
cwde
call
and
inc
aam
jno
sar
sbb
loopne
xor
leave
jns
push
sbb
xchg
push
inc
push
pop
loop
push
and
out
push
xor
xchg
xlat
sbb
mov
movs
mov
cmp
enter
inc
loope
mov
mov
cmp
cmp
add
mov
jmp
cmp
aad
or
jmp
ret
push
push
jnp
or
adc
outs
call
jbe
xchg
repz
add
pop
add
xchg
or
test
xchg
cwde
or
inc
dec
cmp
jb
adc
ss
sbb
pop
and
add
add
push
dec
xor
(bad)
(bad)
fs
add
adc
neg
shl
mov
test
jmp
cwde
sbb
xor
int3
push
cdq
fsub
pop
mov
outs
jp
xchg
mov
out
mov
pusha
adc
test
loopne
mov
out
sbb
pop
jg
mov
movs
(bad)
push
call
addr16
or
mov
inc
int
cmp
or
pop
pop
inc
sub
mov
(bad)
test
adc
sti
xchg
in
adc
xor
push
mov
mov
das
push
jns
outs
xor
and
mov
fadd
pop
dec
fmul
shl
and
ins
cmps
push
out
fwait
push
mov
push
in
fxch
stc
mov
xchg
xchg
xchg
leave
(bad)
cli
xor
jns
ins
add
call
mov
out
or
test
(bad)
stc
scas
push
mov
add
rcl
fidiv
mov
jmp
out
push
sbb
cmp
mov
div
xor
pop
sub
push
inc
out
fimul
ret
movs
data16
cmp
data16
mul
mov
sub
xchg
xor
fidivr
pop
and
stos
ins
mov
inc
jecxz
mov
add
inc
inc
sahf
jecxz
je
xchg
or
in
mov
fimul
push
fnstenv
or
ins
dec
cmp
scas
jb
sub
jg
ins
cmp
and
stc
setno
add
pop
sub
pop
cmps
dec
sub
cmps
jle
sbb
mov
mov
ds
dec
gs
dec
dec
sti
loope
rcr
imul
push
add
das
or
mov
mov
fld
loope
inc
mov
sub
pop
jmp
adc
inc
sub
retf
stc
clc
jp
sar
in
adc
xchg
pop
or
add
nop
fistp
xrelease
int
xchg
sub
fwait
dec
push
cmps
xchg
daa
pop
sub
inc
sbb
aad
xor
pusha
mov
cmp
(bad)
jmp
mov
mov
xor
cmp
xchg
int3
mov
cmps
adc
xor
into
test
dec
jmp
test
jns
das
pop
shl
xor
loopne
aad
lds
lahf
pop
xchg
adc
loop
pushf
repz
jno
xor
mov
jle
in
xchg
shl
imul
push
cmp
sbb
clc
mov
xor
or
mov
inc
jnp
mov
test
jnp
fisttp
clc
imul
std
lea
xchg
ss
fadd
push
sbb
test
xchg
sbb
mov
and
(bad)
jmp
rcl
iret
test
test
out
sahf
loop
add
push
push
mov
pop
lahf
mov
test
jo
sar
std
ror
js
cmp
sub
clc
out
cmc
ss
pop
test
lods
add
dec
jecxz
push
and
and
pusha
(bad)
lds
dec
xor
jbe
mov
bound
inc
mov
pop
mov
in
daa
sbb
clc
pop
leave
clc
les
mov
out
call
in
daa
push
call
xchg
fsubr
cwde
pop
or
arpl
in
repz
jne
dec
(bad)
(bad)
scas
push
repnz
call
out
adc
popf
cmp
push
inc
out
nop
pop
pop
dec
push
imul
ins
and
retf
call
test
(bad)
sub
fwait
mov
or
dec
bound
push
ja
cmps
push
add
adc
loop
jno
fcmovbe
mov
lods
jno
mov
test
ss
dec
or
adc
mov
sub
pop
out
and
inc
ja
outs
scas
mov
xor
cmps
js
sbb
inc
mov
cmp
(bad)
cs
shl
out
add
test
dec
xor
adc
pop
into
and
jp
pusha
dec
pop
pusha
imul
dec
xchg
(bad)
shl
out
xor
sub
(bad)
fnstcw
fistp
mov
in
cmp
jae
dec
add
push
dec
mov
ins
vpunpckldq
scas
sub
mov
test
inc
test
repz
push
mov
or
push
push
dec
gs
xchg
mov
imul
ja
(bad)
ins
lods
shl
retf
outs
or
push
lods
fist
ficomp
add
les
jp
arpl
test
imul
cmps
(bad)
adc
and
push
cmp
test
aam
fwait
dec
(bad)
xchg
push
les
lock
sub
adc
xor
xchg
mov
adc
rol
xor
rcr
cmovg
aas
in
jb
push
aas
lock
pop
xchg
adc
push
fsub
adc
mov
(bad)
xchg
test
dec
push
fiadd
jnp
faddp
test
movs
ins
loope
shr
add
mov
push
adc
mov
cld
mov
vxorpd
les
sub
dec
and
jecxz
pop
jl
jns
jmp
iret
mov
jno
xchg
test
pop
jb
mov
test
call
outs
inc
shr
cld
mov
add
mov
push
or
aad
xchg
adc
rcr
sbb
pop
fild
mov
pop
stos
xchg
in
sbb
imul
dec
sub
inc
jecxz
sbb
ficom
js
test
clc
inc
iret
ret
push
xlat
shl
cmps
sti
push
dec
or
fwait
pop
or
mov
call
(bad)
push
gs
aad
or
push
jo
jmp
fdiv
pop
cmp
div
jo
mov
pop
rcr
cmp
(bad)
xchg
cs
jmp
iret
test
and
xor
adc
retf
cld
sub
jne
push
in
ret
sub
daa
xlat
jmp
clc
jmp
out
push
icebp
dec
les
cwde
(bad)
in
push
cli
add
inc
inc
and
in
test
retf
js
clc
mov
pop
iret
push
retf
adc
cmp
pop
or
lods
sahf
in
(bad)
xchg
gs
mov
fimul
mov
adc
xor
in
dec
fwait
cwd
fdivr
dec
jle
push
mov
imul
out
cmp
les
sbb
and
push
lock
xor
mov
into
mov
fstp
mov
aad
cmps
pop
push
and
mov
inc
lock
pop
dec
call
cld
mov
pop
push
add
addr16
dec
outs
dec
pop
les
add
xlat
inc
pop
mov
mov
add
inc
bound
jb
cli
rcl
and
jecxz
sub
aaa
or
repnz
lds
mov
adc
inc
les
dec
pop
enter
xlat
pop
sub
sti
cmp
jp
imul
fdivr
dec
mov
cmp
mov
and
inc
(bad)
jb
push
arpl
aam
xchg
in
xchg
rcl
cld
popa
in
add
xor
pushf
xor
or
xchg
xchg
scas
pop
je
mov
mov
mov
shr
test
rol
fsubrp
(bad)
repz
fwait
pop
cmp
test
(bad)
retf
int3
adc
sbb
nop
lahf
enter
dec
xchg
xor
out
jmp
push
repz
mov
mov
sbb
cmp
xchg
push
ret
cmp
mov
jge
mov
pusha
scas
cwde
(bad)
or
or
jno
stos
push
(bad)
ficomp
cld
push
ja
push
push
mov
cmp
xor
cmp
aam
into
sub
das
xchg
push
aam
rol
sbb
jecxz
add
dec
jecxz
xchg
scas
ror
call
aas
lds
pushf
cmc
and
sbb
aas
ds
adc
cmc
sbb
pop
ins
inc
mov
hlt
xor
in
ja
ja
or
jnp
inc
push
adc
push
test
fsubp
loopne
test
in
pusha
sub
ja
(bad)
mov
pusha
jb
xlat
add
sbb
pop
and
xchg
adc
jns
push
cmp
les
push
mov
dec
push
out
inc
loopne
imul
sub
bound
iret
inc
aas
lock
jg
sub
cmps
cmp
mov
inc
daa
xor
cmps
addr16
das
and
add
push
mov
stos
or
jge
jg
dec
idiv
mov
stos
jecxz
adc
fbstp
out
and
scas
les
cmp
lods
inc
in
jne
test
jle
lock
mov
retf
arpl
mov
call
pop
out
push
aaa
mov
imul
das
xchg
pop
push
and
xor
ja
enter
jmp
mov
mov
clc
cmps
ds
shl
fnstenv
ret
jle
ret
dec
xor
or
or
pop
(bad)
adc
call
sbb
pop
cmp
dec
xchg
in
inc
jmp
(bad)
imul
push
add
(bad)
fstp
or
jle
shl
sub
adc
movs
fcmovnbe
xor
jne
js
mov
adc
cmp
lods
icebp
sbb
shl
out
jmp
mov
mov
push
pop
mov
call
cmps
sbb
mov
jne
or
push
cmp
push
push
adc
add
mov
adc
mov
ja
jb
push
ret
pop
test
mov
push
xor
mov
and
sub
mov
icebp
clc
xor
lahf
pop
adc
popw
or
out
movs
iret
adc
jae
or
xchg
loop
call
hlt
pop
jno
pop
fist
mov
mov
add
mov
dec
rol
shl
pop
retf
and
push
dec
add
stc
sbb
xchg
sub
clc
xchg
pop
pop
mov
loop
sub
lds
(bad)
in
push
add
cmp
lods
cmp
lds
mov
loop
dec
mov
xchg
ins
mov
jb
jmp
push
push
addr16
or
pushf
xor
pop
rep
mov
mov
xchg
mov
gs
cmp
ficomp
daa
jecxz
stos
inc
out
xchg
mov
cdq
mov
pop
xchg
mov
imul
mov
(bad)
xor
inc
add
cmp
rcl
in
pusha
outs
mov
outs
int
ins
xor
mov
mov
sahf
push
and
(bad)
fisttp
fbld
scas
dec
iret
cmp
cmp
rcl
mov
dec
xor
add
pop
jmp
pop
cmc
sub
movsx
and
add
jmp
cmp
(bad)
(bad)
bound
int3
xor
loop
aaa
test
in
xor
gs
movs
jne
xor
sub
int
mov
inc
loopne
test
xor
in
repz
mov
mov
lds
jge
movs
mov
mov
data16
mov
fst
sbb
movs
adc
push
inc
imul
xchg
xchg
icebp
es
sub
stos
pop
xor
pop
enter
jae
mov
jmp
inc
dec
xor
add
movs
or
inc
stos
lods
cmps
cmps
fistp
(bad)
dec
movs
adc
pop
xchg
xchg
pop
dec
(bad)
mov
hlt
std
enter
(bad)
in
scas
pandn
mov
push
ficomp
jp
lods
out
prefetch
in
out
shr
je
enter
(bad)
or
std
jge
btc
xchg
dec
and
movs
mov
add
jl
cmp
xor
jb
push
xor
cmp
push
(bad)
int
call
js
rol
ins
int3
test
not
fs
popf
fbld
bound
sbb
xor
je
or
gs
int
adc
mov
in
xchg
sub
cmp
rcr
fadd
movs
or
scas
xor
fmul
call
dec
dec
mov
ret
stc
fwait
inc
ja
pop
movs
sub
sub
push
loopne
div
mov
in
mov
and
call
pop
lds
sbb
(bad)
jnp
or
es
(bad)
jmp
aad
mov
in
pop
mov
cmp
adc
pop
sub
in
dec
mov
ret
sti
inc
dec
sub
sub
adc
iret
lea
(bad)
stc
jbe
jb
pop
scas
mov
imul
lea
jecxz
out
pop
cmp
jb
mov
dec
mov
sub
fist
in
sbb
jae
pop
adc
iret
mov
dec
fcmovnbe
adc
sbb
popf
xchg
ja
retf
inc
adc
bnd
rol
jl
push
pop
ins
dec
mov
in
adc
dec
int
pop
and
xor
fbld
ja
pop
mov
aaa
into
xchg
(bad)
ss
and
shl
inc
pop
jecxz
(bad)
jne
mov
xchg
cwde
push
or
add
jg
jne
test
push
sub
inc
mov
repnz
jmp
in
neg
mov
mov
jno
mov
adc
cli
loop
mov
fst
rcr
nop
aam
int
xor
(bad)
loop
cld
dec
sbb
cmp
jge
pop
mov
jl
rcr
cmp
movs
mov
xor
dec
and
js
test
and
sub
pop
sub
clc
dec
push
sti
nop
ds
mov
sbb
ret
nop
imul
jbe
push
lahf
pop
xchg
dec
js
xchg
pushf
push
sti
sti
inc
into
or
dec
test
leave
mov
and
test
jp
and
inc
cs
sbb
or
mov
xchg
and
nop
into
jb
int
adc
bnd
and
fld
xchg
stos
inc
popf
jne
lods
cs
cmp
or
imul
pop
aad
mov
pushf
pop
scas
jo
sti
pop
repnz
aam
(bad)
js
xor
mov
std
xchg
shl
bound
adc
out
clc
jb
cld
mov
rol
test
popa
sti
stos
sub
or
rcr
lock
push
push
sbb
fcom
xor
ins
xor
arpl
pusha
jp
mov
hlt
mov
xor
ins
sbb
xlat
sub
stc
dec
ret
cmc
mov
icebp
xchg
retf
fsub
jns
adc
dec
test
sbb
dec
xor
inc
in
fidivr
iret
icebp
into
push
mov
dec
ja
jo
sbb
lods
dec
outs
pop
into
add
iret
mov
sbb
jg
mov
xchg
mov
xchg
out
cdq
push
jae
movs
mov
sub
stos
jge
stos
out
test
iret
call
pop
jnp
cdq
gs
and
mov
and
daa
or
pop
in
inc
(bad)
lds
push
cmps
xchg
pop
push
test
std
imul
cmp
movs
fs
inc
xor
sahf
fst
and
mov
mov
jbe
add
test
xchg
xchg
and
sbb
mov
retf
sub
cmps
inc
outs
push
sub
and
mov
sbb
push
push
ror
cmps
or
out
call
and
in
sub
mov
in
aaa
sub
lods
inc
jb
sbb
jnp
std
or
xchg
clc
mov
jae
cmp
cdq
pushf
and
loop
push
mov
mov
xchg
cmps
fdivr
mov
outs
mov
cmps
std
mov
and
inc
inc
or
fmul
inc
sahf
lea
rol
(bad)
es
(bad)
cli
loope
inc
aad
ret
mov
clc
jbe
hlt
fild
xchg
lods
daa
sub
cmp
ret
loopne
mul
(bad)
sbb
bnd
xchg
mov
and
mov
clc
and
rcl
sub
bound
lahf
mov
fisubr
fnsave
xor
retf
das
mov
pusha
sub
sbb
dec
xchg
pop
add
or
jmp
call
ins
daa
arpl
pop
stc
test
call
icebp
lods
and
adc
mov
jb
mov
push
jno
inc
sbb
pop
(bad)
push
mov
sub
lock
dec
hlt
xchg
(bad)
mov
sub
push
stos
dec
xor
popa
nop
jne
add
hlt
lea
(bad)
repz
add
retf
fndisi(8087
push
add
addr16
cwde
mov
mov
fwait
das
cs
jb
pop
sbb
in
dec
test
std
outs
scas
jp
mov
mov
loope
jb
rcl
push
and
dec
or
fsubr
xchg
mov
and
or
sbb
cmp
jmp
pop
clc
pop
sahf
(bad)
aad
ss
adc
push
data16
mov
mov
inc
cmps
fwait
js
mov
xor
jg
mov
dec
dec
adc
leave
in
pop
mov
sub
or
ins
stos
dec
(bad)
pusha
retf
hlt
fwait
bt
jmp
mov
adc
sub
cdq
mov
pop
out
push
mov
xor
pop
(bad)
sti
int3
mul
add
pop
fidiv
mov
test
fdivr
mov
push
push
(bad)
enter
mov
push
ds
xchg
cmp
xlat
xor
jae
mov
ret
xchg
out
adc
sub
and
sahf
les
adc
xor
and
pop
or
ds
imul
pop
das
mov
repz
cmps
fucomi
data16
mov
pop
jge
pop
mov
stos
hlt
cld
icebp
loopne
xchg
enter
aaa
jo
mov
dec
dec
xchg
ins
mov
jecxz
cdq
sub
retf
in
cdq
sub
cmp
cdq
pop
or
and
dec
fcmovnb
mov
jbe
pusha
mov
inc
pop
jge
and
dec
dec
icebp
sahf
dec
sbb
sub
push
ss
ret
movs
in
xor
sbb
iret
pop
ins
dec
sbb
adc
fs
(bad)
jmp
cdq
(bad)
cmc
pop
das
jae
jns
cld
mov
cmps
jle
(bad)
pop
mov
mov
dec
pushf
jl
mov
cmps
and
push
cmps
inc
or
cmp
aam
inc
hlt
cs
push
adc
call
test
sahf
inc
mov
xchg
xor
cmp
xchg
push
mov
lock
dec
add
or
(bad)
icebp
xchg
clc
str
mov
or
das
test
mov
lock
mov
mov
cmps
icebp
dec
push
test
mov
mov
jl
les
push
out
cmps
inc
inc
(bad)
push
shl
xchg
popf
jns
outs
mov
out
movs
pop
ss
sub
pop
ror
out
and
push
mov
or
or
pop
jns
fwait
pop
popa
sbb
and
dec
or
(bad)
daa
and
outs
outs
mov
sub
fst
jns
push
cmps
lods
ss
xor
sbb
retf
not
push
aaa
sbb
jbe
jno
cld
push
xor
out
jp
in
and
jmp
repnz
std
pushf
mov
int3
fnstcw
or
fcom
rcr
cwde
xor
mov
lods
jge
hlt
xor
dec
fbstp
pop
push
mov
icebp
addr16
mov
inc
out
xchg
cmp
jb
dec
movs
call
jp
scas
in
imul
pop
test
xchg
imul
mov
int3
or
xor
mov
add
fiadd
pop
push
cwde
jo
and
mov
mov
xchg
add
imul
out
cmp
push
repz
mov
jle
cwde
sbb
rcr
xchg
xchg
xchg
xchg
fistp
lahf
mov
nop
pop
mov
fidiv
lds
or
daa
sti
rol
push
out
cmp
test
jmp
mov
add
mov
int3
jg
inc
sbb
xchg
or
mov
cmp
(bad)
and
sub
sub
in
xchg
cwde
jge
jo
pusha
push
loopne
addr16
int3
jmp
push
adc
push
clc
movs
(bad)
aad
(bad)
jg
je
imul
adc
dec
fdivr
outs
stos
iret
rcr
xlat
jns
mov
lds
mov
xor
pushf
dec
or
dec
repnz
mov
xor
sbb
push
mov
in
adc
pushf
cld
push
inc
mov
inc
in
imul
cmp
sbb
stos
test
and
jae
push
iret
test
adc
sub
jp
cs
pop
cdq
xchg
dec
stos
fadd
jae
retf
inc
cmp
pop
int
(bad)
inc
push
out
jns
and
les
cmp
xchg
repnz
dec
popa
imul
push
dec
fsubp
dec
jns
xor
mov
pushf
add
add
sbb
push
xlat
loope
dec
mov
add
xor
(bad)
push
inc
mov
inc
jmp
mov
leave
mov
icebp
mov
f2xm1
in
mov
mov
jbe
je
inc
rcl
push
fcmovne
push
push
xor
arpl
std
fisubr
ja
pop
into
dec
dec
shr
in
cmp
test
cdq
cmp
js
in
pop
xor
xor
sar
mov
in
push
out
lds
or
adc
into
cmc
jmp
adc
cmp
es
aaa
int3
inc
dec
pop
xchg
rol
cdq
fisubr
sbb
jl
stos
add
xor
shl
(bad)
int
xchg
push
pop
add
ret
mov
das
add
pushf
add
mov
push
outs
iret
inc
shl
sbb
retf
std
sub
sbb
sahf
dec
cli
xor
push
stc
xor
cmp
mov
popa
push
inc
mov
mov
xchg
pop
push
repnz
sbb
mov
ss
loop
test
fld
push
(bad)
mov
mov
pop
jp
xchg
cmps
fcmovb
and
xor
adc
xchg
js
mov
inc
loop
bound
jge
into
clc
int3
inc
adc
and
rep
adc
mov
push
xor
movs
mov
jecxz
cmp
cwde
add
mov
mov
inc
lock
out
sbb
and
or
cs
pop
cmp
cwde
mov
rcl
lock
xchg
cmp
cmp
popf
jmp
mov
cli
je
loop
push
cdq
sbb
in
mov
mov
add
movs
dec
or
jns
test
pop
push
scas
rol
xchg
mov
and
repnz
es
mov
rol
jecxz
or
and
in
xor
sub
xor
or
xchg
xchg
fimul
xchg
jle
inc
xchg
xor
xor
popa
int
out
sbb
and
and
ret
cmp
imul
shl
add
add
dec
xchg
in
(bad)
xlat
shl
or
xchg
or
cwde
dec
mov
pop
cmp
jne
mov
loop
jmp
shl
cmp
dec
mov
stos
clc
pushf
rdtsc
scas
jg
popf
ds
loop
sbb
stos
xlat
cmp
bnd
xor
or
xor
fsubr
scas
ins
xchg
inc
rol
loopne
imul
ret
mov
cmps
xlat
in
loope
sub
add
push
adc
outs
(bad)
movs
pop
paddusb
xchg
out
pushf
mov
sub
jmp
cmp
test
or
rcr
sar
xor
retf
inc
fdivr
sahf
fs
cmp
xchg
ins
fisub
push
mov
retf
clc
fwait
pop
mov
mov
inc
in
jno
int3
dec
pop
push
rcl
cmp
fldcw
push
aaa
sbb
cmp
jmp
jmp
fnstsw
ficomp
mov
jne
xchg
jbe
or
psubusw
das
mov
scas
push
mov
test
sahf
je
ror
xlat
mov
and
scas
sub
das
jo
xchg
sub
call
jp
inc
dec
pop
test
sbb
lods
pop
add
xlat
pop
ins
iret
mov
add
add
add
jmp
mov
cwde
sbb
int3
ss
lods
into
add
lahf
cdq
mov
mov
jb
add
cmp
shl
int
pushf
jmp
xchg
push
mov
pop
test
repz
push
test
mov
ins
xor
ret
(bad)
retf
hlt
cmp
clc
fdivr
stos
frstor
call
pop
xchg
cmp
xor
test
push
add
pandn
pop
movs
xor
out
dec
repz
je
ins
in
add
mov
adc
loopne
js
loopne
or
mov
xor
jne
mov
mov
pushf
and
push
add
ficom
adc
mov
sub
and
pop
(bad)
pushf
cmc
cmp
popa
test
inc
daa
ja
push
xor
jb
mov
clc
div
or
ja
repz
repnz
mov
jg
cmps
sbb
clc
test
lds
jecxz
or
fild
push
mov
fdecstp
or
xor
fwait
cmp
or
sbb
cmp
shr
cmps
nop
icebp
and
adc
xchg
xor
rol
dec
mov
xchg
jbe
and
adc
sub
and
push
test
ret
jle
inc
push
jmp
inc
mov
(bad)
xor
arpl
sbb
scas
retf
xchg
or
mov
add
add
jbe
add
lock
out
xchg
push
inc
paddw
outs
cmp
adc
push
add
cmp
jno
cmp
cmp
sbb
sbb
sub
test
fidiv
sbb
xchg
inc
fwait
movs
call
nop
cmc
dec
shl
(bad)
fwait
ja
xlat
xchg
(bad)
fisub
or
jp
jge
mov
mov
lods
dec
inc
pop
dec
mov
push
fld
pop
pop
cmps
out
jne
lahf
(bad)
add
fadd
mov
sbb
xchg
pusha
(bad)
jl
fsubrp
jmp
loop
inc
mov
(bad)
lods
loop
sub
or
aas
jle
dec
or
call
sbb
or
mov
fild
mov
out
and
adc
movs
mov
mov
pop
sbb
adc
pop
(bad)
cmp
movs
jl
scas
jbe
lea
imul
popf
int
or
push
push
(bad)
inc
cmp
imul
int
fsubr
shr
or
fsubr
dec
arpl
mov
cld
pop
and
out
xchg
xor
repz
or
inc
dec
es
sbb
mov
jp
push
loopne
mov
jns
jb
test
ret
test
sub
dec
xchg
leave
ins
outs
arpl
lds
rol
push
outs
int
jb
pop
ds
mov
sbb
aad
add
jbe
xor
fdivr
sub
xchg
add
push
sbb
loopne
pop
lds
jbe
loopne
add
bound
xchg
pop
push
jnp
outs
test
ins
dec
xchg
push
in
mov
mov
mov
add
out
xchg
xchg
das
inc
loopne
in
lds
push
and
push
icebp
mov
cmps
push
pop
push
adc
sbb
lock
mov
mov
mov
cdq
mov
fs
scas
dec
arpl
leave
jnp
xchg
push
dec
in
aaa
mov
sbb
xchg
mov
int3
movs
rcl
mov
je
inc
out
fidiv
xchg
jns
mov
dec
xor
xchg
xchg
mov
loope
leave
ret
sbb
mov
push
pop
dec
les
in
(bad)
lea
or
out
(bad)
xchg
jb
xchg
clc
(bad)
or
pop
mov
sub
push
mov
les
fucomp
cmp
imul
cwde
and
aad
xor
xchg
pop
push
std
and
cmp
adc
test
aad
ds
hlt
jmp
sub
test
js
int3
cli
pop
pop
fdivr
cmp
in
xchg
jmp
inc
push
shl
push
fmul
sbb
out
int3
mov
inc
xchg
jmp
ror
mov
sub
and
jge
push
mov
adc
call
ror
adc
cmp
cli
and
rcr
cmp
jmp
lods
or
mov
clc
shr
mov
test
jge
pushf
push
das
fbld
pop
mov
mov
add
mov
and
jbe
dec
mov
mov
rcl
push
nop
test
idiv
stos
fnstsw
xchg
dec
js
fs
imul
cli
and
or
push
iret
jge
fbld
xchg
sbb
push
pcmpgtb
mov
xlat
aam
scas
sub
or
outs
js
pop
dec
cli
out
je
cmp
xchg
jnp
push
ret
int
pop
loopne
(bad)
mov
std
dec
in
fst
in
add
test
inc
aam
mul
fiadd
pop
jae
ja
fld
mov
je
cmp
jge
xor
pop
(bad)
cmp
dec
push
fidivr
addr16
dec
dec
sub
int
pushf
ins
sbb
sbb
inc
out
pop
cmp
std
adc
mov
in
outs
inc
int
pop
pop
stos
jmp
pop
push
addr16
in
dec
sub
sbb
push
leave
jecxz
jg
cmp
(bad)
sub
out
xor
dec
out
xor
jecxz
mov
fs
pop
rol
mov
xor
push
xlat
or
hlt
and
in
xor
imul
jge
jge
lahf
push
add
ja
inc
fcomp
xlat
shl
ins
nop
mov
cwde
pop
pusha
cmps
dec
(bad)
addr16
ins
test
or
frstor
mov
inc
outs
in
cmps
xlat
ja
aam
jp
pop
push
push
mov
mov
push
adc
sar
xor
int
mov
fnstcw
in
xor
pushf
dec
xchg
pushf
mov
dec
adc
push
jmp
std
in
inc
popa
scas
mov
mov
jle
sbb
sub
sbb
std
dec
out
cld
or
(bad)
outs
and
stos
cdq
call
xchg
push
cmp
std
(bad)
mov
mov
(bad)
jno
push
xor
inc
ds
fdivr
lahf
sub
cmp
mov
xlat
hlt
push
add
mov
out
and
call
sbb
dec
ret
fcomp
push
inc
(bad)
xchg
mov
stos
nop
cmps
test
pusha
mov
xchg
sub
adc
dec
(bad)
cs
dec
cmps
cmp
pusha
xchg
jmp
dec
fimul
inc
push
ds
sub
scas
xlat
ins
jbe
xchg
je
mov
sti
jp
clc
dec
adc
ret
mov
mov
jbe
adc
mov
push
mov
push
push
adc
jmp
fwait
ret
xlat
inc
sbb
imul
xchg
push
jb
mov
repnz
ficomp
push
inc
(bad)
push
xor
cwde
jb
les
sbb
clc
stos
fmul
xor
mov
jge
dec
outs
(bad)
sar
push
nop
add
ds
push
sahf
xchg
adc
and
int
sub
cmp
xor
das
loope
mov
stc
pop
das
scas
push
test
in
fsubr
ss
outs
or
popf
rol
pusha
(bad)
scas
shr
popa
add
sbb
cmp
out
mov
pop
xchg
mov
xchg
sub
jne
out
or
pop
inc
dec
push
das
inc
mov
shr
dec
aas
clc
and
stos
inc
lea
mov
(bad)
imul
push
or
dec
and
call
mov
and
push
cwde
adc
xchg
or
mov
imul
(bad)
retf
out
adc
push
retf
add
(bad)
and
sar
sub
(bad)
aam
jne
push
mov
fcom
imul
jnp
loope
adc
mov
xchg
or
(bad)
setns
mov
xchg
cmps
int
dec
out
sub
pushf
jb
ds
mov
mov
imul
ins
out
ror
pop
jecxz
push
push
fnstcw
pushf
xor
(bad)
xor
pusha
jb
push
(bad)
sbb
test
xchg
loop
pop
mov
pop
xor
test
xchg
dec
push
repz
lea
xor
jge
ret
pop
jne
sbb
xchg
jno
push
push
xlat
pushf
inc
or
mov
inc
pop
mov
jnp
adc
stos
mov
sbb
jg
add
ja
xchg
xor
in
aam
inc
add
not
shl
adc
inc
outs
pop
imul
out
mov
fdivr
cmps
lds
dec
inc
pop
pushf
jmp
xchg
cs
es
add
jns
or
scas
ss
aam
cmp
js
jnp
jb
add
scas
cmp
clc
sub
lods
ror
xchg
jecxz
nop
cld
xor
cwde
jmp
fistp
jb
movs
cmp
inc
xchg
sub
cs
callw
outs
or
aad
pop
cwde
lods
jb
(bad)
xor
dec
stos
inc
fcmovnb
hlt
inc
es
retf
dec
and
push
aas
fild
ds
mov
ins
mov
cmp
push
(bad)
inc
loop
dec
inc
adc
mov
add
pop
mov
jg
jl
push
(bad)
stos
dec
int3
mov
mov
popf
jnp
ins
add
and
xor
mov
shl
jl
jle
fisub
dec
lods
movs
ins
mov
or
push
dec
popf
sbb
sbb
hlt
test
fild
xchg
test
cs
sub
fild
mov
in
rol
scas
jae
add
pop
ins
pop
ja
lods
aas
in
mov
daa
mov
push
retf
das
push
ja
mov
push
cmp
mov
mov
add
scas
or
test
mov
mov
jp
or
ins
dec
retf
pushf
dec
adc
mov
push
pusha
es
add
fisubr
in
mov
enter
push
div
adc
(bad)
loopne
jge
(bad)
aaa
or
sbb
nop
out
stos
leave
outs
pop
jno
fstp
jne
or
int
inc
mov
pop
inc
xchg
(bad)
test
rol
mov
neg
jmp
in
test
inc
cli
imul
mov
(bad)
sbb
jmp
add
mov
and
sub
pop
aam
adc
movs
into
cmps
mov
loope
push
not
es
add
pushf
mov
adc
iret
pop
mov
sahf
inc
add
adc
mov
frstor
not
call
lea
(bad)
sbb
or
jl
jns
mov
inc
loope
dec
and
lahf
xchg
sbb
daa
int3
xchg
dec
mov
adc
mov
jmp
and
pop
mov
mov
gs
fst
add
adc
push
push
scas
nop
adc
shl
dec
xchg
dec
pop
lahf
data16
cmp
add
sbb
js
in
adc
(bad)
jo
jg
daa
or
(bad)
in
push
pushf
push
call
xchg
mov
add
mov
fcom
xchg
cmp
not
jbe
pop
test
aaa
pusha
adc
rcr
jbe
and
jbe
outs
popf
fist
(bad)
sahf
pop
ds
cmp
retf
cmps
jecxz
and
shr
fstp
mov
repz
popf
scas
mov
inc
retf
jns
xor
and
or
leave
mov
bound
fisttp
sub
jecxz
popf
sub
aad
mov
jno
cmp
inc
outs
fld
shr
mov
jge
cmps
cmp
add
aad
std
mov
cld
adc
ficomp
retf
adc
and
in
mov
push
push
mov
and
xchg
(bad)
xor
mov
imul
loopne
into
pop
out
test
jnp
dec
ud1
sbb
leave
mov
(bad)
mov
pop
gs
pop
jecxz
mov
dec
lods
push
loope
jb
lods
sahf
loope
fs
and
(bad)
or
mov
cld
repnz
push
pushf
sub
jnp
nop
clc
ret
repz
dec
cmp
hlt
jecxz
xor
mov
sub
cli
scas
xchg
or
or
neg
sbb
inc
cdq
out
(bad)
jmp
icebp
and
sub
loop
lock
jno
xchg
add
dec
xor
push
fild
ret
pop
call
lock
(bad)
fwait
adc
xchg
xchg
mov
and
xchg
ret
(bad)
mov
mov
ds
xchg
xchg
fmul
jp
sbb
cli
mov
out
fidivr
xor
mov
fmul
pop
push
lods
loope
call
out
lea
mov
popf
(bad)
test
push
cwde
sub
lock
push
inc
fwait
mul
jmp
mov
enter
in
movs
cdq
xchg
mov
pop
call
iret
movs
add
cmp
cld
xlat
ds
push
mov
ficom
loopne
rcl
into
jmp
sahf
mov
retf
sti
mov
mov
fisttp
iret
mov
outs
popf
test
add
jg
stos
sar
in
mov
cmp
dec
xchg
mov
push
add
mov
or
sbb
or
mov
scas
sti
pop
ret
call
dec
cmp
and
loopne
and
neg
pop
push
icebp
scas
xchg
popf
pop
call
fimul
fld
call
aas
lahf
ret
jle
xor
xor
push
sub
mov
mov
ret
pop
inc
add
aam
xor
xor
jbe
aas
mov
pusha
add
or
inc
mul
xchg
cmp
or
push
mov
jno
fidivr
inc
mov
pop
inc
movs
sbb
jbe
jns
shl
aaa
int3
xor
js
fcom
push
cld
adc
mov
inc
cmps
jmp
or
(bad)
loopne
mov
inc
push
pop
mov
aaa
rol
addr16
mov
mul
sub
pop
mov
mov
sub
leave
clc
arpl
inc
push
out
push
gs
inc
pop
fisttp
xor
and
mov
dec
inc
pop
jg
std
das
xchg
xor
xor
sbb
push
xchg
mov
lock
push
push
(bad)
sub
jns
inc
cmp
fdivr
sub
mov
inc
pop
gs
stc
imul
push
in
leave
rcr
mov
xchg
sysret
dec
dec
scas
mov
andnps
mov
pop
jmp
ja
dec
(bad)
dec
jmp
in
fcom
ins
xor
out
cmp
pause
cmc
fdivr
push
idiv
dec
adc
xor
scas
cld
pop
xor
popf
icebp
push
cmps
dec
in
mov
pop
cmp
sbb
pop
mov
mov
add
jb
ins
out
icebp
scas
cld
daa
fidivr
push
mov
jns
stos
shl
iret
(bad)
loop
in
xor
xchg
imul
or
idiv
aaa
daa
mov
idiv
and
mov
mov
int
pushf
dec
adc
frstor
pusha
test
and
outs
mov
fs
mov
jle
or
dec
mov
jg
loop
lahf
std
(bad)
sub
and
ret
test
or
ins
fldenv
sbb
in
lock
ins
std
xor
(bad)
and
(bad)
mov
mov
aam
mov
pusha
pop
inc
xchg
sbb
xchg
mov
dec
inc
add
pushf
cmp
jle
jb
sbb
loope
lods
dec
not
inc
push
test
shr
inc
addr16
jmp
cmp
xchg
in
in
cmp
sbb
adc
jbe
inc
mov
adc
and
sub
mov
push
jle
fwait
mov
ret
xor
or
mov
adc
test
and
das
dec
sbb
adc
fidiv
cmp
(bad)
sahf
mov
(bad)
jns
mov
xlat
mov
dec
add
dec
bound
daa
mov
out
pop
fwait
std
test
jnp
imul
dec
add
ret
adc
jmp
outs
push
in
mov
in
jb
pop
push
xchg
scas
xchg
inc
cmp
nop
scas
add
clc
mov
ins
loop
clc
push
mov
and
clc
(bad)
aaa
gs
cmp
shr
lahf
xchg
mov
mov
cmp
mov
call
mov
mov
jmp
ds
mov
mov
inc
mov
(bad)
stos
xchg
or
push
mov
adc
stc
lea
pop
push
push
sahf
jl
inc
out
or
adc
mov
out
popf
pop
retf
mov
dec
fcom
repnz
jecxz
mov
sbb
js
jbe
pop
sbb
call
ret
jb
and
fdivr
mov
es
or
push
call
ds
das
mov
mov
leave
lds
mov
sar
ins
sbb
or
ja
add
jae
mov
jo
stos
and
add
push
jae
aad
in
stos
das
sub
fdivr
mov
aas
mov
sbb
inc
mov
js
leave
push
les
in
push
push
xchg
inc
or
lahf
sub
xchg
push
pop
mov
push
xchg
xor
mov
in
pop
cld
arpl
push
xlat
push
ret
fdiv
fcmove
push
adc
push
sub
stos
aas
inc
or
retf
mov
inc
cmp
mov
jno
push
idiv
add
fcom
rol
sbb
rcr
mov
or
ret
xor
push
add
stos
jns
jae
and
mov
mov
cmps
sbb
xchg
pop
popa
stos
mov
imul
sub
cmp
cmp
sub
pop
cmc
jne
(bad)
es
popf
rcl
enter
mov
mov
push
push
dec
mov
dec
jmp
lahf
mov
into
adc
mov
int3
stos
pop
bound
add
out
xor
cld
pop
sub
mov
cmc
or
adc
mov
xchg
sub
jecxz
inc
jmp
and
jge
jle
jbe
push
xor
aas
aaa
arpl
or
hlt
mov
stos
and
adc
adc
shl
add
push
ficom
inc
cmps
das
movs
cmpxchg
call
out
jae
push
pop
addr16
(bad)
sub
jmp
add
or
ss
jecxz
mov
(bad)
movs
adc
push
aad
dec
bound
fs
movs
dec
jecxz
mov
js
fst
adc
and
sbb
or
mov
push
dec
sub
enter
fidiv
(bad)
lahf
out
mov
jl
(bad)
lock
inc
cmovae
std
fnstsw
push
xchg
call
fdivr
dec
mov
cld
jecxz
bound
pop
pop
loope
cmp
adc
pop
and
pop
aam
div
dec
repnz
gs
scas
adc
sub
cmp
test
pop
pushf
push
mov
mov
in
push
push
xor
cmps
mov
xor
jp
addr16
addr16
add
out
repnz
cmp
test
fadd
shl
lods
rol
xor
mov
adc
in
inc
push
inc
test
aas
lea
retf
scas
xor
mov
or
mov
ds
add
jae
popa
xchg
repnz
mov
sahf
mov
mov
sbb
movs
clc
(bad)
mov
add
shl
imul
and
enter
retf
ins
(bad)
jae
addr16
inc
xchg
or
fninit
mov
int
dec
push
int
push
xor
lar
out
add
inc
or
and
push
pop
jnp
cmp
call
fucomi
retf
add
or
int3
hlt
sahf
pop
and
jmp
jecxz
pop
test
cmp
mov
sbb
mov
mov
test
loopne
fnstsw
jmp
push
add
jns
mov
aaa
fistp
or
mov
mov
nop
push
(bad)
(bad)
mov
xor
cmp
sar
and
test
dec
and
loope
push
mov
ins
pop
pop
mov
push
test
fld1
movs
or
mov
xchg
sbb
loop
mov
es
xchg
ret
mov
jl
addr16
retf
leave
lods
sbb
sub
mov
or
call
dec
jg
mov
mov
out
xchg
sbb
add
test
add
neg
mov
and
(bad)
cmp
cpuid
out
cmps
cmp
xchg
mov
fdivr
cs
push
(bad)
dec
push
dec
lods
ja
pop
xchg
xor
mov
inc
cmc
pop
sbb
mov
xchg
jecxz
pop
jnp
int3
push
iret
je
test
mov
(bad)
lods
mov
pop
xchg
adc
loopne
cmp
xchg
sti
(bad)
out
imul
xchg
cmp
jge
sbb
inc
mov
adc
gs
shl
adc
or
cmovno
int3
enter
mov
retf
repz
pusha
mov
add
fsub
in
inc
es
pop
push
xchg
js
test
pop
and
xor
or
mov
push
ins
inc
cmps
sub
mov
or
call
imul
mov
aad
imul
shl
jecxz
xlat
adc
in
jge
retf
(bad)
loopne
mov
loop
push
and
xchg
loopne
call
test
push
xlat
mul
add
js
outs
test
mov
aaa
ffreep
cdq
outs
retf
enter
cmp
mov
cmps
sbb
pop
les
test
fdivr
sar
fstp
mov
fld
add
sahf
cmp
inc
outs
popf
nop
leave
xchg
shl
out
pop
xor
out
loop
cmp
out
mov
into
scas
push
mov
jo
das
xor
xor
push
pop
gs
jb
lea
add
mov
xchg
push
(bad)
dec
inc
adc
call
scas
add
jle
lock
xchg
cmp
sub
push
push
mov
jge
jns
hlt
jle
xchg
mov
pop
not
pop
lahf
popf
mov
push
push
fistp
fidiv
pop
sbb
cwde
and
or
in
add
les
mov
jb
sbb
and
scas
adc
rcl
movs
in
jmp
shl
mov
jg
jb
int3
pop
rcr
xor
dec
push
xor
enter
je
call
jl
imul
stos
and
push
fld
ss
jge
test
and
mov
lds
icebp
inc
sub
mov
fidiv
dec
lahf
inc
and
cmp
ds
push
sbb
mov
mov
cwde
lea
scas
jecxz
cmp
xor
jo
imul
sub
(bad)
cmp
push
and
xor
push
popa
call
push
je
scas
imul
sahf
bndldx
fisub
mov
xlat
dec
sahf
pop
mov
cs
add
mov
aam
scas
(bad)
jne
push
jne
sbb
sahf
retf
mov
xor
mov
add
jnp
(bad)
out
or
xor
push
adc
pop
mov
ffree
or
daa
mov
xchg
jns
(bad)
push
sbb
sbb
mov
sbb
add
push
sub
mov
hlt
lds
mov
adc
cmps
ret
lock
gs
ja
mov
icebp
xchg
popa
xchg
loopne
inc
repz
jp
xor
and
ins
imul
hlt
loope
pop
mov
pop
push
mov
sbb
aaa
add
movups
repz
xchg
add
pop
push
dec
jae
cmp
sbb
ins
inc
mov
jae
mov
cmp
jbe
out
and
cmp
or
push
loopne
inc
xor
xchg
arpl
jp
lods
mov
int3
mov
sub
mov
xor
fwait
lock
add
in
rcr
mov
sub
sbb
mov
lea
jns
adc
cmp
jns
out
es
push
es
mov
inc
idiv
inc
or
adc
aad
les
sbb
outs
sti
lods
add
or
cld
mov
(bad)
ficomp
mov
push
push
xor
fwait
mov
sub
jns
in
add
fst
les
lods
sbb
mov
mov
(bad)
cmp
js
jecxz
nop
push
cs
jae
(bad)
(bad)
add
dec
loope
jns
push
jle
mov
retf
test
adc
jle
or
or
pop
pop
stc
lahf
push
dec
push
or
push
add
daa
jl
and
jnp
mov
stos
iret
sahf
lock
mov
pop
(bad)
push
sub
icebp
jmp
push
xor
xor
adc
cmp
add
pushf
iret
mov
arpl
pop
sub
popf
xor
mov
cmp
add
push
jge
inc
mov
test
loopne
mov
shr
cmps
pop
test
lods
push
dec
out
inc
out
xor
ss
aaa
stc
out
mov
push
(bad)
mov
(bad)
enter
mov
and
jge
es
ror
pop
cdq
lock
push
movs
std
daa
pop
push
or
scas
inc
and
in
ins
fistp
mov
jmp
mov
xchg
ja
mov
popf
(bad)
ins
pop
or
xchg
sub
or
adc
push
sbb
retf
xchg
int3
mov
mov
(bad)
clc
jbe
pusha
fwait
das
stc
mov
xchg
inc
jp
fwait
xor
jo
or
adc
test
stc
pop
and
xlat
fst
mov
rol
mov
and
(bad)
(bad)
std
and
lds
mov
and
(bad)
ins
mov
xlat
mov
xchg
mov
cmps
mov
test
test
shr
pushf
dec
jg
dec
inc
mov
push
scas
out
sub
bnd
das
das
sub
pop
jge
push
fld
ds
into
rcpps
shr
call
push
and
stos
push
repnz
and
ror
jbe
outs
sbb
dec
dec
fs
xchg
inc
test
cmp
rcl
shr
adc
out
mov
pusha
shl
div
push
dec
cdq
cmps
mov
xchg
pop
push
bound
mov
ins
fld
(bad)
mov
dec
fsub
pop
push
jecxz
mov
test
or
pop
mov
pop
sahf
push
imul
fwait
daa
mov
mov
movs
mov
dec
sub
into
add
(bad)
js
movs
cmp
gs
in
xor
mov
xchg
enter
jmp
leave
retf
bound
mov
dec
xchg
mov
test
mov
push
sub
add
imul
div
ds
test
mov
je
mov
mul
mov
ret
inc
cmps
aam
add
lahf
mov
jmp
(bad)
hlt
inc
push
mov
mov
cld
and
jb
add
les
jno
jno
mov
cld
pop
or
ret
mov
jns
push
mov
mov
in
out
sbb
cmc
imul
sbb
rol
mov
jbe
adc
out
scas
xor
sbb
cdq
cmc
sbb
int3
xor
movs
imul
sbb
sub
mov
mov
ficomp
sbb
xchg
mov
fs
test
sar
fstp
add
xchg
stos
adc
movs
sub
xlat
mov
stos
mov
ja
inc
pushf
nop
pop
out
(bad)
dec
sar
fdiv
add
mov
jmp
pop
mov
in
push
das
shr
add
pop
in
inc
arpl
mov
arpl
lea
xor
pushf
jp
test
shl
fnstcw
sbb
jl
mov
out
adc
hlt
movs
imul
jmp
jae
mov
ret
test
enter
and
jg
loopne
ret
sub
sub
(bad)
sti
and
or
ins
ss
fs
hlt
dec
mov
repz
in
pop
sbb
push
cli
push
sahf
rol
movs
(bad)
xchg
pop
fst
inc
aam
mov
cmp
test
xchg
cmp
mov
inc
xor
fst
xchg
pop
loop
ins
adc
mov
cdq
sbb
mov
push
lahf
adc
cld
lds
lea
pushf
sar
cmps
pusha
jne
jg
bnd
cmps
rcl
enter
mov
clc
push
cmc
stc
push
pusha
inc
adc
push
cmps
adc
hlt
(bad)
dec
sbb
pop
fnstenv
and
mov
out
movs
ja
sbb
ja
dec
idiv
mov
pop
test
movs
iret
dec
sbb
hlt
inc
leave
es
mov
cld
push
and
adc
cs
in
imul
in
nop
push
mov
pop
push
sbb
mov
or
xchg
inc
icebp
bound
add
inc
dec
or
das
das
jg
add
xchg
jmp
or
ins
cmp
push
push
fisttp
fadd
sbb
or
mov
mov
mov
movs
lock
adc
adc
push
and
mov
loope
fst
xor
stos
out
ja
pop
in
inc
add
fist
xor
(bad)
ins
mov
fnclex
sub
imul
push
or
leave
sub
xlat
xor
push
lea
aaa
mov
xchg
adc
ret
jns
hlt
bound
mov
aas
adc
gs
jecxz
and
add
pop
pop
out
bound
xor
xchg
dec
inc
pop
es
lds
or
or
sahf
cmp
xor
jg
jle
push
int3
cmp
idiv
xchg
push
popa
xlat
fsubr
jbe
xchg
popf
lods
fyl2xp1
bound
add
pop
dec
pop
cmc
mov
push
popf
es
std
movs
scas
dec
mov
xor
aad
push
mov
nop
neg
cmp
jge
mov
pop
scas
icebp
xchg
fisubr
push
jl
mov
xor
inc
cmps
or
and
bound
inc
sbb
xor
sub
and
cdq
adc
arpl
enter
cmps
push
pop
(bad)
mov
nop
call
rcr
pusha
in
(bad)
jae
dec
rcl
mov
(bad)
in
dec
ds
push
mov
sub
mov
dec
cs
call
outs
mov
inc
cmp
jnp
sbb
fbld
sbb
test
cmp
imul
lods
iret
xor
lea
and
call
cmp
neg
xor
das
fstp
pop
loope
lods
stos
(bad)
mov
pop
sub
mov
pop
repz
xchg
pop
ins
pop
(bad)
xchg
jbe
dec
jmp
ss
test
(bad)
mov
int3
loop
xchg
sbb
or
shr
jnp
sbb
adc
arpl
mov
lea
cmc
ins
mov
jne
cmp
xchg
stos
push
adc
dec
dec
ss
test
pop
pop
call
xor
es
push
test
xor
jg
mov
pop
and
inc
jbe
fidivr
jo
inc
push
or
in
mov
popf
repz
cdq
and
(bad)
fsub
sub
adc
ss
cs
xor
sbb
out
imul
(bad)
loope
dec
sar
cmp
enter
inc
stc
xchg
cmps
sbb
adc
mov
and
push
inc
mov
ss
aaa
mov
test
hlt
lods
jne
mov
inc
push
push
xor
xor
push
cdq
inc
cmc
xchg
cmps
adc
and
fdivr
adc
add
fst
iret
sub
icebp
ret
loope
aad
push
ja
movs
lock
clc
out
dec
iret
aam
inc
xor
sub
and
addr16
mov
cmp
js
iret
lods
shr
jecxz
sbb
xor
push
mov
or
std
popa
je
jmp
cdq
fxch
daa
jmp
push
cmp
(bad)
shl
and
and
add
cmp
(bad)
mov
mov
xchg
mov
retf
push
adc
data16
dec
das
in
inc
int3
cmp
cwde
cmp
aaa
xor
or
xchg
pop
(bad)
push
adc
mov
sub
jmp
(bad)
dec
dec
lods
leave
cmps
inc
call
inc
je
mov
jge
cmp
(bad)
push
lock
mov
inc
cmps
es
repz
pop
sbb
or
outs
push
mov
aam
arpl
add
out
lds
ins
sbb
push
push
div
adc
out
and
add
sub
pop
enter
retf
sar
pop
push
inc
gs
je
or
in
ja
fistp
mov
ja
ror
loopne
and
cmp
or
and
mov
dec
lock
(bad)
lahf
mov
sbb
pop
inc
cmps
pop
push
aas
xchg
ins
inc
xchg
mov
and
xchg
jo
arpl
cmp
in
pop
enter
mov
cmp
cli
add
pop
mov
xchg
in
add
or
and
add
and
fdivr
test
mov
sbb
daa
inc
ss
or
mov
mov
sub
add
xor
push
sahf
xor
test
aaa
stos
test
add
inc
mov
adc
mov
retf
icebp
cdq
lds
scas
lds
or
sti
dec
test
push
jmp
cmp
sub
imul
push
dec
repz
jecxz
stos
leave
cdq
jmp
retf
cmp
or
outs
jo
iret
xor
xchg
and
inc
out
jecxz
icebp
int
nop
add
sahf
into
jmp
rcr
mov
jae
push
cmp
jmp
int3
rcr
hlt
fadd
sbb
or
mov
nop
sahf
xchg
adc
out
(bad)
es
inc
(bad)
shr
add
pop
les
fnsave
dec
cmp
xchg
inc
cdq
into
scas
js
push
and
push
dec
xor
popa
fld
(bad)
xor
fdivr
shl
shl
(bad)
push
adc
fst
icebp
jns
jnp
popf
xchg
test
mov
xor
push
sbb
adc
xchg
mov
push
jge
mov
pusha
cwde
mov
push
fstp
and
lea
ds
mov
cmp
xor
add
cmp
dec
lock
sahf
xor
xchg
std
sbb
cmc
cs
js
push
(bad)
xor
icebp
jne
and
sar
jbe
sbb
pop
in
cmp
retf
jle
repz
(bad)
mov
rcl
stos
mov
and
sbb
mov
jle
dec
rcr
call
add
pop
sub
ins
jle
push
ficom
pop
jl
jno
push
dec
popa
out
mov
daa
cli
or
sbb
pop
call
mov
cmp
in
out
in
mov
stos
dec
or
daa
leave
icebp
adc
fmul
push
out
mov
mov
mov
ss
xchg
bnd
mov
pop
xchg
adc
shl
fsub
imul
add
mov
out
jmp
sti
fmul
retf
lods
fwait
or
xchg
add
ins
or
mov
inc
scas
add
jl
pop
aas
mov
push
and
jge
xchg
and
cmc
aas
and
retf
scas
(bad)
(bad)
sbb
icebp
mov
aaa
mov
push
hlt
xchg
push
cmp
adc
inc
cmp
mov
dec
addr16
dec
xchg
pushf
movs
and
into
fld
cmp
push
jae
nop
ja
lahf
or
xchg
mov
outs
mov
les
and
data16
repnz
mov
add
sbb
in
bound
call
push
cmp
in
inc
in
aaa
cmp
xchg
fldcw
jne
jae
sti
adc
xadd
test
arpl
(bad)
ss
sub
push
inc
inc
ret
push
stos
das
push
or
mov
sub
and
das
sti
inc
push
sub
ins
mov
dec
leave
inc
ja
retf
cmp
in
int
test
pop
dec
push
movs
pop
fcom
repz
pop
sub
int3
cmp
jg
in
imul
div
inc
inc
dec
mov
cmp
push
or
dec
dec
sub
imul
in
std
(bad)
sbb
xchg
clc
jmp
dec
pop
pop
test
movs
inc
xchg
enter
stos
ror
fimul
in
call
(bad)
push
jge
outs
xchg
ja
jno
das
pop
dec
ds
(bad)
test
sbb
ret
out
inc
jge
int3
sub
and
jp
iret
in
lods
push
and
clc
lock
jg
sub
mov
cld
and
jle
gs
bound
jp
mov
ret
xlat
nop
test
jmp
mov
sbb
jmp
xor
lahf
int
and
pop
push
shl
neg
xchg
cs
fsubr
out
push
arpl
sahf
mov
mov
adc
call
pop
ret
fst
cmc
jl
shl
sbb
cmp
sub
pop
pusha
fwait
add
rol
in
ja
leave
scas
shl
dec
add
jns
adc
cdq
xchg
js
pop
mov
imul
fs
es
movs
inc
adc
push
call
add
sbb
scas
dec
sub
(bad)
into
sbb
xchg
sbb
fs
addr16
out
inc
test
lock
push
or
mul
push
dec
int
aaa
cld
sub
mov
sub
int3
inc
out
push
adc
js
jge
lahf
arpl
nop
das
das
mov
mul
fdiv
movs
clc
pop
pop
mov
mov
pop
cdq
adc
gs
xchg
pop
shl
loopne
loope
jb
and
call
push
or
pop
pop
mov
jp
push
push
xor
add
mov
movs
out
sub
shl
js
gs
cmps
rcr
pop
das
jbe
sbb
(bad)
mov
xchg
push
outs
xlat
ss
sub
data16
or
push
loope
xor
and
int3
cdq
aad
loopne
retf
mov
mov
pop
jge
xor
daa
cmp
cmps
and
or
sbb
mov
sub
dec
cmps
mov
mov
call
pop
aad
rcl
mov
jmp
xchg
cli
cmps
jne
add
retf
push
mov
cmp
jle
fs
inc
and
jnp
sti
iret
mov
xor
frstor
cmp
iret
cmp
adc
loop
sbb
push
add
nop
int
js
stos
dec
cwde
or
mov
push
popf
jno
fwait
imul
dec
jae
xchg
in
enter
mov
or
cmp
div
adc
dec
dec
jmp
jmp
shl
mov
sar
popf
sbb
dec
push
outs
call
retf
or
mov
cwde
dec
mov
sbb
mov
mov
add
adc
push
icebp
jl
jb
ret
fld
addr16
aas
test
pop
call
adc
out
jp
out
hlt
mov
and
(bad)
shr
ins
fist
push
mov
retf
(bad)
or
fstp
and
gs
pop
stos
mov
(bad)
cmps
adc
rcr
jle
mov
xor
mov
out
scas
aaa
popa
mov
or
push
inc
mov
pop
ret
cmps
inc
ds
ins
mov
pop
pushf
aas
pusha
push
div
lahf
dec
(bad)
ins
fdivr
call
in
add
retf
push
sbb
mov
mov
mov
mov
mov
inc
mov
test
jbe
cmps
pop
adc
ja
retf
sahf
add
lods
and
jo
mov
loopne
inc
add
out
int3
nop
push
adc
dec
inc
push
adc
jg
repz
sti
pop
xlat
stos
lock
inc
mov
mov
push
icebp
xchg
pop
dec
shl
sub
mov
and
mov
lods
ror
adc
and
nop
enter
ficom
inc
mov
outs
cmp
push
mov
lds
mov
xchg
fnstcw
fldenv
mov
imul
aad
ja
mov
dec
mov
xchg
fwait
stos
ins
rcl
and
add
fnsave
mov
push
push
not
into
dec
pop
idiv
les
mov
out
rol
rcr
adc
mov
cmps
test
test
jmp
js
es
xchg
retf
push
mov
shl
ficom
cmp
shr
aam
in
fs
inc
fld
dec
cmp
je
jno
adc
shl
int
gs
addr16
mov
jb
push
jmp
push
xchg
fld
in
dec
add
sub
mov
and
sbb
stos
rcl
or
jne
and
rcr
or
xchg
test
cmp
and
aad
and
mov
cmp
or
mov
push
sbb
imul
das
adc
fs
jnp
cwde
mov
mov
pop
mov
xor
sbb
push
pop
pop
adc
aam
dec
nop
push
mov
adc
inc
dec
aad
inc
sub
dec
or
out
jmp
lods
mov
ss
fs
icebp
xor
add
inc
cld
push
fsub
cli
adc
mov
push
out
(bad)
stos
das
mov
push
lods
cmp
retf
fwait
cmp
mov
dec
sub
jno
arpl
jg
add
xchg
pushf
hlt
retf
push
es
pop
push
jno
js
push
enter
out
mov
sti
xchg
repz
mov
aam
in
clc
cwde
sbb
fadd
or
inc
dec
xor
data16
mov
fist
cmps
and
cmc
cmp
fild
cmp
cli
mov
ins
je
push
jnp
jb
ins
jl
jbe
retf
cmp
dec
iret
jge
mov
in
retf
js
cmp
add
test
pop
sbb
cld
cmp
sbb
sub
pop
sub
lock
sub
repnz
lock
xchg
jge
mov
pop
mov
push
or
out
mov
imul
pop
call
or
stc
sbb
lea
xchg
xlat
stos
pop
pop
pop
out
xor
shl
sub
leave
loop
ins
pop
push
dec
into
maskmovq
call
scas
inc
mov
dec
neg
mov
sahf
lods
mov
stc
enter
fiadd
push
popa
je
cmps
mov
push
sub
leave
push
xchg
jl
add
mov
adc
push
retf
mov
inc
sbb
iret
add
fs
mov
icebp
ins
jg
cmps
pusha
dec
adc
ins
fidivr
mov
pusha
mov
add
xor
add
mov
mov
cmp
outs
xor
mov
jno
mov
sbb
inc
sbb
cmc
pushf
pop
cs
and
jbe
inc
push
jge
outs
and
(bad)
stos
stos
xor
sub
mov
xor
dec
xor
cld
mov
test
xchg
scas
test
outs
imul
or
pop
pop
mov
mov
pop
fdivr
ret
cwde
cdq
jno
aaa
aas
push
mov
adc
aad
enter
not
mov
jp
inc
jg
jbe
mov
and
pushf
mov
or
and
sbb
out
hlt
retf
jge
mov
repz
jmp
cmp
cmp
xor
sahf
aad
or
shr
es
es
push
int
pop
sub
ins
imul
adc
addr16
adc
xchg
push
mov
les
shl
mov
cmp
xor
and
pop
repz
sbb
into
scas
cmp
int3
push
iret
mov
push
daa
push
pusha
test
fadd
pop
mov
mov
addr16
and
dec
stos
push
sbb
mov
mov
call
icebp
mov
(bad)
xchg
ja
inc
call
test
repnz
bound
stos
cwde
repz
ins
lahf
or
repz
leave
out
imul
jb
inc
ins
retf
lds
ins
shl
inc
in
mov
xchg
stc
inc
daa
adc
jns
test
loope
sub
push
add
adc
cmp
inc
cli
loop
sbb
xchg
or
or
aam
mov
ins
nop
aam
(bad)
jnp
dec
fistp
ret
xchg
icebp
and
sti
dec
cmp
fisttp
xor
inc
pusha
jns
jle
add
scas
icebp
mov
aaa
js
stos
mov
jl
sub
ret
retf
iret
rcr
pop
push
fwait
sbb
call
scas
hlt
hlt
xchg
mov
test
out
cwde
sub
jae
pusha
jae
push
mov
bound
cmp
lahf
repnz
(bad)
imul
sub
pop
xor
mov
popf
mov
mov
sti
inc
and
inc
sbb
rcl
ror
mov
pushf
lds
add
aaa
daa
call
mov
retf
shr
and
gs
pop
retf
inc
out
outs
sbb
iret
mov
sub
fcmove
xlat
cs
in
xor
out
inc
es
pop
ror
stos
bnd
cmc
nop
leave
cs
iret
mov
xor
lahf
test
sub
add
add
aaa
setns
cmp
enter
div
push
stc
mov
xor
adc
cmp
shl
lea
mov
clc
imul
test
xor
jmp
sbb
iret
push
shl
pop
lds
ret
test
sub
mov
xchg
ss
push
xchg
mov
div
mov
das
cs
xchg
popf
adc
pop
(bad)
in
mov
mov
mov
cmps
sbb
mov
and
loop
and
sar
nop
pop
and
and
ins
push
fld
fwait
imul
mov
cmp
push
into
test
pusha
cmp
dec
jge
shl
cli
inc
jns
enter
sbb
mov
push
aam
sub
sbb
mov
shl
xor
xor
cmp
add
arpl
dec
push
je
inc
stc
mov
test
(bad)
lds
sti
and
out
sub
rcl
pop
shr
clc
sub
cmps
add
es
cmp
jl
mov
daa
test
imul
mov
mov
mov
dec
addr16
push
int
fsubr
push
ror
(bad)
lods
(bad)
sub
test
ficom
inc
xor
sar
pop
(bad)
or
clc
xor
loopne
sar
rcl
pop
outs
cmp
push
sbb
mov
lock
cmp
xchg
fnstcw
mul
dec
test
mov
in
call
jne
adc
sbb
push
das
xchg
sbb
xchg
push
retf
pop
push
ret
adc
int
push
jg
add
inc
int3
mov
cmp
in
test
imul
or
stos
or
and
jmp
adc
mov
ds
movs
mov
out
xor
adc
fwait
loopne
std
xchg
xchg
or
imul
jo
and
dec
inc
xchg
mov
adc
and
into
mov
(bad)
sbb
cmp
xchg
mov
ins
retf
sbb
leave
jmp
outs
mov
xor
and
iret
sub
ret
mov
inc
not
out
movs
stos
add
je
inc
fld
jnp
sbb
mov
or
cmp
das
inc
icebp
pop
test
xchg
pop
aam
imul
xlat
push
jle
in
sbb
sub
ins
(bad)
jl
ja
cmp
imul
and
and
adc
mov
inc
sti
into
in
pop
into
sbb
and
xor
jmp
sbb
(bad)
mov
mov
pop
xchg
sub
inc
test
fnstsw
or
leave
add
(bad)
mov
test
or
mov
pop
in
or
adc
sahf
add
lods
ins
ds
into
add
mov
shl
(bad)
pop
mov
int3
mov
add
adc
adc
in
stc
sbb
mov
or
sub
icebp
(bad)
mov
and
jmp
ret
stc
jg
sbb
lock
pusha
push
add
cmc
movs
sti
push
or
jae
cmp
adc
xor
push
ror
bound
push
out
stos
xor
ins
add
out
out
mov
xor
push
pusha
call
mov
movs
or
xor
out
pop
mov
in
xchg
fldenv
fwait
movs
mov
mov
iret
outs
jecxz
xlat
mov
inc
or
retf
mov
mov
les
sbb
aam
(bad)
in
and
mov
imul
xor
loop
xlat
xor
ret
jge
outs
jle
js
test
jp
shl
inc
test
dec
test
xor
xor
cmp
dec
cdq
mov
aaa
sub
push
lahf
ja
das
nop
mov
hlt
dec
inc
scas
fdivr
(bad)
pop
cmp
inc
dec
rol
das
aaa
jb
pop
sar
sub
lods
arpl
dec
add
cmps
xor
(bad)
jno
push
ret
xchg
xlat
pop
loope
jo
mov
jbe
lods
add
div
xchg
push
mov
out
lods
xor
sbb
or
sub
jl
out
sub
adc
call
xor
leave
add
dec
pop
ja
clc
aaa
mov
mov
sti
mov
je
inc
xchg
pop
je
adc
inc
bound
lods
aaa
and
clc
add
hlt
sub
cdq
push
sbb
and
push
inc
leave
shl
xlat
pushf
sar
cmp
sbb
rcl
loope
idiv
int
add
adc
mov
loop
or
rcl
xchg
movs
cmps
mov
sub
and
xchg
seto
movs
out
movs
push
mov
inc
adc
push
add
jecxz
jns
neg
push
dec
fcomp
rcl
push
mov
and
dec
dec
push
xchg
pop
shl
nop
sub
adc
mov
mov
sub
lock
mov
clc
push
call
clc
mov
mov
repnz
xor
aas
xchg
lods
test
xor
mov
sub
retf
adc
xchg
sub
xchg
mov
pop
push
aad
repnz
jno
push
sbb
and
in
aas
hlt
and
push
inc
inc
mov
and
mov
scas
scas
rol
cmp
dec
mov
inc
push
fwait
push
das
ret
dec
and
pusha
inc
cmp
sbb
js
mov
aad
cld
pushf
sbb
loope
fcomp
add
daa
ret
mov
repz
add
jae
mov
iret
ret
cmp
clc
lea
push
dec
jno
leave
ror
adc
mov
std
ficom
push
cld
movs
cs
(bad)
loopne
sub
dec
or
stos
xor
iret
mov
in
sub
mov
jae
jge
push
not
pop
bound
test
push
mov
mov
gs
xchg
test
inc
addr16
shr
mov
cwde
and
int
movs
xchg
xor
aas
sbb
mov
add
add
push
inc
and
aaa
cdq
lods
or
ja
mov
in
scas
fisub
stos
pop
iret
std
int3
rcr
cmp
lods
jecxz
xor
test
cmps
shl
clc
retf
(bad)
iret
ror
dec
and
iret
cmp
mov
push
mov
sbb
jbe
stos
in
enter
and
or
mov
jmp
xadd
loop
xlat
fst
lods
ins
mov
push
movups
(bad)
xchg
scas
sbb
mov
je
test
ins
mov
mov
iret
mov
sbb
or
fmul
mov
mov
je
leave
cmp
rcl
imul
or
dec
mov
mov
rcr
jne
cmc
or
cdq
pop
daa
mul
push
adc
rol
jmp
cmp
sbb
mov
xchg
les
mov
fidiv
div
popf
push
mov
mov
adc
jae
rcl
push
shr
pop
addr16
mov
sbb
xchg
movs
and
jp
out
sub
add
ficom
pause
in
sahf
scas
lods
push
les
test
arpl
push
mov
sbb
test
xor
or
rcl
into
inc
adc
sub
loop
fld
(bad)
fst
or
fstp
es
in
pusha
imul
lock
cmps
iret
jns
cmp
inc
cmp
dec
add
or
xchg
push
data16
test
in
sti
mov
test
enter
mov
jg
out
or
ins
aas
sbb
in
aam
inc
es
adc
cli
xchg
aaa
mov
pop
jge
stos
sar
sar
sub
sub
jmp
xlat
pop
repz
dec
mov
lea
xchg
push
push
out
jne
pop
fwait
fs
add
and
mov
cmps
mov
test
sbb
leave
gs
adc
push
repz
outs
aad
or
sbb
repz
xchg
dec
test
mov
mov
enter
popf
sub
iret
add
std
imul
pop
sub
push
push
or
ins
mov
sub
or
ins
rcl
enter
push
mov
and
mov
int3
cld
xor
sbb
jae
dec
ins
mov
in
sbb
movs
dec
aad
push
cli
adc
out
stos
dec
in
push
dec
loop
add
push
adc
in
mov
pop
mov
bound
arpl
dec
jne
xor
pop
push
adc
mov
in
cmp
rol
es
mov
pop
push
(bad)
xor
add
movs
es
mov
adc
pop
fucomi
jmp
mov
xor
or
fwait
inc
push
in
jge
mov
and
test
loopne
sub
sub
jb
pop
aas
out
leave
aaa
xor
push
ror
push
shr
icebp
inc
and
lods
nop
popf
daa
ja
adc
lahf
imul
inc
xchg
imul
mov
xor
cmc
aas
stos
enter
jmp
popa
xchg
inc
fisubr
neg
mov
and
dec
or
add
sub
in
dec
aas
movs
arpl
fidiv
add
add
dec
cmp
rcl
dec
jno
aaa
sub
(bad)
retf
aad
(bad)
mul
pop
sub
add
mov
punpcklwd
jge
fs
out
dec
dec
outs
push
lahf
ds
or
jo
jno
mov
dec
dec
sub
adc
out
push
lods
movs
outs
mov
outs
xchg
rol
leave
adc
xchg
inc
les
dec
xor
xor
add
jle
xchg
dec
mov
rcl
pop
jp
fs
cmps
test
jb
pop
ficom
add
mov
cmp
repnz
bound
add
and
mov
(bad)
mov
or
pop
and
dec
out
(bad)
ins
enter
cmp
push
int
pop
movs
nop
xor
dec
xchg
adc
jne
sbb
sub
mov
retf
xchg
inc
ja
ret
cmp
call
mov
inc
sahf
mov
stos
imul
pop
xor
mov
jg
fsub
neg
fimul
dec
or
inc
retf
xor
push
jg
pop
mov
xor
pop
jp
js
(bad)
aad
(bad)
mov
test
cmps
call
push
das
xlat
sub
repz
outs
jp
mov
(bad)
fistp
jecxz
ins
mov
stc
out
fwait
lea
leave
xor
add
int3
dec
(bad)
sahf
mov
inc
dec
retf
xor
push
out
stos
add
shl
adc
je
daa
add
xchg
mov
aaa
sub
in
and
mov
pop
rcr
movs
and
mov
fbld
fiadd
into
dec
mov
push
cmp
inc
xchg
les
push
inc
and
jg
imul
or
ret
test
je
mov
add
das
not
add
pop
mov
cmps
fwait
shr
call
and
cmp
or
neg
imul
jecxz
loopne
pop
mov
cwde
out
lock
fdivr
(bad)
aaa
jmp
stos
jno
mov
mov
je
shr
ins
test
and
push
push
cld
adc
loop
adc
jle
mov
les
pop
lahf
or
mov
inc
mov
(bad)
stc
inc
ss
pop
or
fsubr
scas
mov
cmp
(bad)
cmp
push
add
dec
push
inc
and
sbb
in
dec
add
in
cld
mov
fistp
dec
xchg
or
add
pushf
mov
push
xor
fld
push
jp
ret
sbb
rcl
dec
outs
std
out
out
push
jno
call
xchg
pop
sahf
add
pop
bound
(bad)
fdivr
sub
mov
in
mov
pushf
scas
xor
dec
cmc
xor
mov
cmp
adc
js
jmp
fwait
dec
xlat
adc
(bad)
pop
in
(bad)
dec
jno
xchg
and
ret
sbb
or
and
dec
dec
jl
add
push
xor
push
jne
sti
out
pop
scas
or
aad
xchg
and
inc
(bad)
in
pop
xor
sbb
adc
cmp
cli
(bad)
inc
sub
ret
pop
cld
ret
xlat
fwait
cli
xchg
jl
scas
jge
ficomp
mov
rcr
shl
sub
cdq
pop
mov
lock
ins
cmp
adc
adc
xchg
arpl
iret
or
gs
mov
mov
or
add
jne
jb
jmp
pop
push
and
sbb
inc
jecxz
ds
jbe
call
pop
jae
enter
dec
mov
xchg
mov
stos
int
loop
aaa
lea
inc
adc
xchg
push
mov
je
ror
sbb
mov
pop
mov
pop
lods
ins
or
fist
fldenv
or
in
shr
and
sbb
push
call
fucom
cmp
or
push
pop
int3
ja
mov
idiv
inc
dec
loop
jle
repnz
daa
retf
movs
add
xchg
add
aam
sub
nop
gs
jo
outs
xchg
push
jge
(bad)
fdiv
loopne
push
xchg
jmp
ds
or
lea
repz
std
jno
jae
cli
lock
aas
jl
pop
add
mov
add
mov
or
movs
dec
ds
mov
jg
fcomp
xchg
mov
stc
cmp
test
leave
and
mov
mov
stc
push
out
xor
dec
or
imul
push
fimul
adc
bound
push
dec
jle
and
or
aad
dec
jne
cmp
jmp
add
adc
mov
arpl
or
add
addr16
xor
pop
arpl
xlat
test
(bad)
in
mov
push
mov
rcl
mov
xchg
int3
adc
int3
test
imul
test
jae
nop
jo
mov
outs
or
out
adc
(bad)
jle
nop
xlat
cld
retf
iret
bound
movs
sbb
push
jae
(bad)
xlat
pop
push
or
mov
mov
push
in
jge
hlt
mov
ss
mov
(bad)
cmps
retf
rol
iret
out
fcomp
ret
push
int
adc
inc
mov
mov
std
mov
adc
pop
in
dec
mov
bound
data16
enter
fstp
std
mov
mov
add
push
mov
pmaxub
lods
jbe
pop
(bad)
popf
jno
mov
sub
out
sub
lock
mov
and
fwait
mov
in
out
xchg
cmps
movs
inc
or
add
xor
loope
pop
fsub
push
sbb
jnp
push
imul
rcr
fist
ret
push
xor
xchg
call
dec
jbe
retf
cmps
loop
lods
lods
pop
(bad)
jne
mov
mov
push
push
ins
jb
pop
xchg
in
adc
movs
std
mov
or
or
ror
(bad)
test
jl
mov
aas
lahf
mov
xor
ret
jg
mov
jo
jmp
or
ins
and
rcr
cmp
and
dec
ss
sahf
sbb
pop
leave
ins
cwde
and
shl
pop
in
xlat
adc
call
in
imul
jle
ins
inc
sub
movs
jp
imul
mov
xchg
test
pop
pop
inc
(bad)
xchg
push
mov
jno
repnz
mov
ja
ins
arpl
jg
int3
mov
xor
movs
test
mov
stc
xchg
not
dec
push
retf
sub
sti
dec
pop
pop
pusha
inc
dec
jmp
adc
xchg
rcl
(bad)
mov
push
scas
xor
push
adc
cdq
mov
call
out
in
add
lock
shl
mov
push
or
mov
pop
cmp
stos
sbb
loop
mov
adc
mov
aad
nop
aas
adc
sbb
rol
cmc
lahf
dec
adc
push
xor
push
cld
imul
idiv
addr16
jnp
dec
push
cld
movs
sub
dec
ret
sub
call
das
rcl
fdiv
daa
jl
xor
(bad)
sub
xchg
mov
mov
pop
in
mov
add
push
mov
jne
push
pop
sbb
ror
or
mov
add
sub
sub
fmul
test
(bad)
adc
aad
mov
retf
stc
inc
stos
or
adc
cmp
mov
mov
add
push
push
and
mov
sbb
retf
pop
mov
dec
xor
mov
mov
js
dec
dec
adc
in
in
jg
mov
add
mov
and
mov
or
lds
xchg
pop
fistp
xchg
jne
lods
jbe
inc
xlat
out
sbb
add
pop
(bad)
out
rcl
lods
arpl
shr
sub
(bad)
iret
out
adc
and
sbb
inc
repz
jmp
lahf
icebp
aas
jl
push
fmul
mov
(bad)
mov
stos
and
sbb
sti
js
mov
adc
xor
push
shl
sbb
dec
inc
cmp
movs
or
sub
sbb
or
jbe
mov
or
mov
inc
cmp
repz
sub
pop
push
cmp
cdq
mov
mov
xor
pop
and
dec
ja
pop
loop
push
jmp
cmc
dec
xchg
movs
or
leave
icebp
mov
scas
inc
xor
rol
das
rcr
mov
fs
(bad)
out
and
ja
and
xchg
jne
push
jne
retf
popa
xchg
(bad)
mov
in
push
stos
xchg
sbb
(bad)
call
stos
xor
or
xor
add
mov
fiadd
or
sub
in
inc
rcr
enter
mov
dec
add
std
jecxz
out
pop
jno
psrad
cli
mov
pop
mov
push
dec
fwait
dec
jp
push
mov
into
cmps
fucomip
lods
mov
in
test
lods
(bad)
xor
add
jle
push
cs
in
xchg
(bad)
add
mov
mov
pop
adc
jmp
movntps
sbb
push
mov
daa
xchg
jmp
adc
jle
and
xchg
adc
hlt
out
out
enter
push
cmp
lods
call
add
das
push
mov
push
in
jl
bound
add
dec
fimul
cmp
xor
push
fidiv
mov
adc
enter
jae
bnd
push
loop
add
stos
jl
xor
iret
fcom
dec
push
and
xchg
push
cmp
inc
shl
pop
push
sti
add
jp
into
xchg
(bad)
loop
and
add
pop
xor
vpcmpgtb
mov
scas
xchg
outs
fwait
xchg
fs
cdq
and
jp
sub
xchg
lahf
sub
add
jnp
xor
jecxz
sbb
dec
sub
add
aaa
inc
pop
jb
push
and
cmp
aam
push
repnz
mov
pop
or
mov
inc
in
cli
lea
jle
xchg
mov
inc
and
push
xchg
leave
mov
jle
scas
lahf
dec
jbe
dec
or
leave
mov
fwait
(bad)
gs
aaa
mov
gs
mov
jb
movs
sti
imul
dec
(bad)
div
out
sbb
sub
push
test
adc
mov
cmp
jp
jae
mov
call
inc
fwait
lahf
out
dec
lods
sahf
aad
ins
std
push
jle
mov
call
stc
xor
mov
pop
popf
pop
out
outs
shl
imul
imul
add
or
pusha
mov
pop
push
in
(bad)
mov
adc
outs
mov
push
mov
repnz
out
clc
or
js
repz
sar
pop
repnz
dec
or
pusha
cwde
mov
in
pop
push
fist
ins
push
mov
lods
in
ss
clc
lds
cmp
in
xor
add
inc
aas
or
call
sbb
ret
jne
jmp
xchg
jne
cmp
loopne
das
lods
data16
in
mov
js
jnp
cmp
pop
into
aaa
je
cdq
out
cmp
xchg
jge
push
xchg
adc
(bad)
sbb
ss
das
dec
int
cmp
pop
and
cmp
data16
mov
jle
xchg
mul
mov
fwait
ror
loope
clc
retf
mov
jnp
fidiv
push
cs
and
jno
jmp
outs
cmc
jne
hlt
js
jle
arpl
ret
and
push
cmp
in
push
std
arpl
mov
add
cli
xchg
ins
repz
push
add
inc
sbb
cmc
sti
fnstenv
dec
mov
xchg
cmp
mov
test
cmp
dec
popa
ret
jb
cli
dec
into
out
jne
pop
sbb
jle
jle
scas
clc
add
dec
mov
gs
(bad)
xchg
xor
mov
std
xor
push
or
shr
stc
outs
xchg
mov
mov
sbb
lahf
mov
std
test
jge
mov
lds
je
inc
ret
jne
pop
sbb
jge
in
pop
sbb
sti
outs
fwait
sub
sub
inc
mov
mov
lods
test
mov
push
xchg
out
xchg
jbe
in
xchg
ret
(bad)
mov
xlat
out
loope
jbe
loop
push
or
inc
xchg
mov
dec
movs
lods
test
rcr
icebp
adc
sahf
into
lahf
cmps
sar
jp
xlat
xor
(bad)
pop
pop
mov
iret
movs
mov
jge
sub
adc
loope
dec
out
into
push
loop
adc
pop
mov
mov
sub
or
fwait
aas
sbb
add
into
enter
jno
xchg
xchg
cmp
imul
sbb
inc
sub
jmp
lods
or
out
inc
mov
sub
sub
pop
adc
daa
sub
aaa
mov
cmp
aad
dec
xchg
jmp
jg
arpl
iret
pop
das
inc
aam
(bad)
jle
lods
or
stos
movs
arpl
mov
psubb
aam
dec
out
xor
xchg
pop
das
cmc
xor
push
jg
dec
jne
imul
pop
jg
xor
fcmovu
popa
lahf
addr16
ret
mov
popf
adc
imul
rcl
pop
stos
bound
jno
cmc
push
mov
mov
inc
fdiv
or
dec
imul
retf
test
bound
cld
int3
push
retf
xchg
sub
(bad)
mov
cmps
push
pusha
inc
adc
xchg
fstp
mov
pop
test
and
pop
inc
or
cmps
arpl
popa
and
adc
cmp
in
mov
push
cld
out
sub
pop
daa
push
mov
mov
mov
fcom
push
dec
inc
jmp
mov
and
jge
pop
rcr
repnz
popa
cld
push
dec
mov
cmp
dec
fisttp
stc
cmps
aad
xor
pop
inc
inc
popf
fidiv
fadd
rcr
sahf
jg
(bad)
or
cmps
out
les
addr16
pop
cmps
adc
ja
mov
mov
mov
lods
ins
cmp
stc
stc
or
dec
pusha
and
out
xchg
mov
je
ja
shl
out
sub
hlt
mov
ds
sub
dec
and
sub
adc
imul
jmp
(bad)
xor
adc
ffree
shl
mov
xor
adc
popa
stos
push
cmp
bound
mov
(bad)
repz
test
add
(bad)
out
mov
or
dec
push
mov
and
imul
clc
js
daa
cmp
sub
pushf
std
into
stos
loopne
and
mov
cmp
mov
sub
jge
shl
icebp
cmp
dec
cmpps
jge
lods
ja
lds
mov
xchg
test
dec
movs
cmps
add
jbe
dec
add
repnz
jb
test
push
ins
gs
cmp
call
xor
or
pop
mov
ss
xlat
sbb
(bad)
jno
sbb
xor
adc
lods
call
movs
xor
in
pop
mov
adc
pop
lds
popa
popf
out
jne
cmp
jno
mov
dec
push
pop
cmps
out
movs
xchg
jl
hlt
fdivr
ins
jl
repz
xchg
cmp
mov
test
push
push
ins
out
cmc
ds
lock
xor
lea
mov
pop
jb
fidiv
aas
shl
ss
and
jo
add
aam
fimul
pop
adc
clc
cmp
sbb
pusha
sub
int
fcom
cwde
mov
dec
dec
cli
not
cwde
xor
dec
inc
xchg
inc
adc
shr
xchg
cld
cmp
(bad)
in
scas
push
push
retf
inc
adc
jl
pushf
psadbw
hlt
xchg
adc
mov
jno
jo
pop
out
imul
sbb
sbb
dec
in
fmul
and
jmp
mov
or
fbld
jo
in
and
mov
dec
and
mov
(bad)
cmps
arpl
movs
jmp
or
pop
push
stc
ins
ret
inc
popf
loop
(bad)
sub
xchg
in
mov
ss
out
les
mov
xchg
mov
scas
mov
push
and
mov
xchg
mov
retf
cmp
xor
push
adc
push
fsincos
enter
in
int3
popa
in
mov
clc
fs
gs
jae
imul
add
dec
popf
fiadd
and
lea
icebp
push
loop
js
ds
call
test
mov
inc
arpl
xchg
shl
xor
jl
xor
jge
xor
jmp
cld
sbb
xchg
xor
sti
adc
mov
jae
xchg
arpl
sub
das
inc
pop
xor
popa
lahf
inc
add
std
rcl
pop
or
bound
loope
lods
test
pop
pop
in
or
mov
and
inc
dec
fst
inc
retf
fcmovb
not
ret
lock
test
xchg
stc
movs
jmp
push
loope
push
rol
lods
or
test
bound
(bad)
inc
mov
pop
mov
add
xor
mov
js
xor
jp
ja
(bad)
stos
out
cwde
mov
mov
loope
xor
and
aaa
mov
neg
cmp
lods
cmp
pushf
retf
repnz
adc
aas
add
sbb
sbb
cmp
stc
jmp
mov
lock
call
cmp
xchg
ror
xlat
aas
pusha
jmp
jle
ror
push
add
aaa
sub
js
sar
rcl
int3
inc
sbb
(bad)
popf
test
push
lods
imul
or
add
pop
scas
mov
and
mov
fwait
movs
stos
(bad)
fisttp
xor
hlt
aas
xlat
iret
in
out
in
retf
fs
mov
sub
out
xor
dec
mov
loopne
call
pop
idiv
dec
jg
and
lods
cmps
xchg
sub
adc
ds
mov
aas
clc
push
push
cmp
push
xor
clc
in
ret
inc
sbb
popf
icebp
jmp
push
push
xchg
cmp
f2xm1
sahf
icebp
pop
cdq
xchg
mov
imul
ins
push
repz
xor
retf
sbb
ret
arpl
cmp
nop
icebp
add
and
sub
push
sbb
or
(bad)
xlat
fnstcw
mov
aam
pop
cmp
adc
ins
xor
mov
mov
jg
rcr
jl
push
lods
and
cmp
adc
retf
or
nop
das
add
rcl
and
pop
mov
dec
imul
movs
(bad)
retf
jnp
cmps
leave
dec
jo
fisubr
nop
mov
or
(bad)
popa
xor
retf
inc
xchg
jns
dec
jae
sub
(bad)
out
mov
repz
xchg
clc
or
jp
push
cmp
inc
mov
push
mov
or
cmp
jmp
jecxz
jecxz
push
cvttps2pi
movs
rcl
cli
out
sub
pop
push
push
bound
xchg
bound
cmp
cmps
in
xor
push
add
sub
adc
pop
sub
sub
mov
cmc
adc
outs
sbb
pushf
mov
pop
jnp
test
jl
pop
dec
cmp
fs
outs
sub
jmp
xor
aas
push
xchg
and
cmp
pop
ret
icebp
push
fidiv
hlt
bound
mov
aam
lods
pop
ret
rcr
cmp
xchg
sbb
push
pop
int3
stos
popa
cmp
and
xor
in
(bad)
sub
push
fisttp
cmp
push
push
fstp
int
adc
std
dec
jae
jmp
out
sub
sub
add
xor
fwait
jbe
(bad)
jmp
sahf
cmp
mov
and
test
xchg
and
loopne
pop
aam
sbb
(bad)
sbb
rol
and
jbe
cmp
fiadd
outs
jmp
mov
imul
and
mov
daa
in
lods
daa
fsubr
fwait
paddsw
arpl
xor
sub
inc
sub
xlat
push
push
fistp
int
test
ins
frndint
clc
add
sub
cmp
aad
mov
cmc
xor
xchg
int3
ret
adc
mov
inc
outs
nop
std
repnz
ret
push
pop
xchg
dec
ds
xchg
test
pop
jecxz
not
pusha
lods
into
pop
push
sbb
or
jae
xor
stos
out
sti
and
pop
bound
fdiv
icebp
mov
repz
arpl
repz
pushf
push
pop
inc
add
or
jmp
pushf
es
jae
pushf
cmps
retf
lock
add
cs
xor
stc
cli
outs
test
adc
int3
ss
cmp
fdivr
aam
stos
mov
lods
adc
or
addr16
adc
sbb
jg
push
or
pushf
clc
(bad)
push
add
inc
sbb
pop
test
lahf
jl
or
mov
xchg
pop
push
shl
mov
pop
sbb
lahf
movs
in
and
cs
pop
ins
mov
mov
ror
inc
fcmovbe
lods
and
aad
and
jb
ds
xor
mov
or
mov
cmc
sbb
add
and
icebp
or
clc
ins
aam
inc
inc
(bad)
cmc
adc
retf
(bad)
jmp
push
mov
mov
in
(bad)
sbb
sbb
out
xor
(bad)
mov
div
jns
sbb
jbe
sub
push
mov
psrlq
fadd
add
movs
cmp
mov
adc
mov
sbb
icebp
mov
arpl
js
not
mov
into
in
stc
push
aaa
bound
lods
(bad)
jmp
xchg
sub
shl
push
les
xchg
jo
stc
mov
jge
sub
retf
aas
mov
adc
int
lea
inc
les
adc
mov
push
sahf
pushf
imul
stos
ds
loope
xchg
add
inc
mov
movs
mov
pop
and
jg
pusha
jl
mov
in
lock
jno
add
mov
les
mov
inc
pause
jp
aad
push
bound
stos
retf
shl
sbb
xchg
ret
or
jne
int3
xchg
out
mov
sub
adc
out
dec
sub
(bad)
jecxz
addr16
(bad)
loopne
xor
sbb
sbb
cmp
cs
popa
(bad)
mov
mov
jmp
(bad)
xchg
aaa
pop
sbb
jo
in
push
xchg
jmp
cmp
and
sahf
mov
loope
mov
mov
test
ret
add
pop
push
lods
ins
xchg
les
icebp
out
mov
mov
aaa
icebp
retf
pop
sbb
pushf
mov
ds
(bad)
mov
sahf
add
ja
inc
xor
sti
push
sub
jle
je
lods
sbb
out
xlat
cmp
pop
inc
aas
dec
aam
mov
test
cdq
jmp
sub
movs
mov
pop
stos
cmps
mov
pusha
int
popa
inc
loopne
ins
pop
dec
je
les
xlat
mov
pop
cmp
jb
nop
jmp
loop
aas
push
pop
add
jp
jno
push
imul
cmc
bound
jbe
dec
adc
sbb
cmp
out
xor
push
pop
std
mov
or
cwde
lahf
lea
push
(bad)
mov
jb
dec
dec
cli
int
add
jne
xor
xchg
add
retf
cmps
mov
fld
out
or
add
sbb
stc
inc
mov
mov
and
xor
xchg
jno
dec
add
dec
sub
mov
ficom
mov
ret
out
pop
mov
scas
xchg
movs
dec
jnp
xchg
out
and
push
test
rcl
mov
xchg
or
outs
mov
and
movs
pushf
cmc
shl
movs
scas
shr
jmp
inc
or
out
scas
addr16
and
jne
or
jg
jge
and
xchg
sbb
inc
nop
or
or
mov
pop
pop
cmp
dec
int
push
adc
sub
dec
mov
in
pop
xor
pop
push
leave
fnsave
push
(bad)
out
loope
mov
inc
sbb
leave
jg
loopne
loope
or
mov
sbb
out
mov
je
call
mov
nop
test
sub
and
jge
cmps
mov
push
(bad)
push
cdq
ins
ret
rcl
mov
push
cmp
pop
aad
aas
cdq
jge
mov
mov
sti
xor
dec
arpl
or
pop
push
fadd
mov
xchg
dec
in
scas
sbb
sbb
xchg
cdq
mov
push
rol
test
pop
xchg
mov
xchg
inc
or
out
xchg
fstp
adc
pop
sub
push
shl
pop
mov
mov
std
scas
adc
sbb
xor
(bad)
add
sbb
hlt
gs
lods
pusha
xchg
bswap
es
cmps
stc
arpl
cmp
shl
push
rcr
hlt
and
dec
int3
es
xchg
mov
in
sub
sti
push
mov
dec
aaa
cwde
repnz
aaa
neg
fstp
call
inc
pop
jmp
aaa
aaa
xor
je
in
loop
bound
jl
fsub
popf
loopne
inc
sbb
pop
icebp
sbb
stos
aaa
fldcw
pop
mov
fisub
xlat
pop
mov
xor
sbb
fwait
movs
push
into
lahf
icebp
into
push
and
ins
xchg
and
mov
aas
fmul
test
jne
dec
(bad)
sti
xchg
test
lds
movs
(bad)
enter
xlat
xchg
scas
push
sbb
inc
mov
pop
mov
and
mov
mov
and
jae
shl
(bad)
lock
retf
jo
and
mov
mov
daa
mov
das
dec
jge
in
xor
xchg
mov
repz
sbb
xor
cmp
sti
(bad)
mov
and
xlat
sub
icebp
xlat
mov
jge
xor
nop
inc
mov
push
dec
xor
sbb
call
sti
arpl
mov
push
xor
in
pop
out
add
lods
(bad)
(bad)
mov
in
fisub
mov
xchg
adc
xchg
xor
jecxz
int
cmps
jecxz
test
push
and
push
(bad)
cmps
pop
pop
sub
(bad)
cmp
lods
gs
mov
inc
(bad)
(bad)
inc
movs
(bad)
cld
out
or
add
mov
sbb
xor
pop
movs
fs
mov
xor
mov
repnz
(bad)
xor
mov
movs
jecxz
cwde
std
jl
sub
mov
pop
out
mov
xor
sub
mov
fs
jp
dec
shr
lahf
and
mov
mov
int3
(bad)
shr
test
mov
sub
cli
xchg
into
jl
fisub
pop
fisubr
int3
sbb
jmp
aam
jmp
int3
push
jno
xchg
aaa
fwait
rcr
popa
fstp
and
adc
jg
movs
ret
(bad)
sti
test
xor
or
aad
popf
lock
shl
sbb
fiadd
shl
jecxz
sub
mov
aas
out
repz
out
mov
cmovne
test
inc
cmp
pop
ins
mov
adc
jle
ror
test
stc
adc
fisttp
es
jno
ins
in
pop
inc
pop
push
xor
dec
cmps
xor
mov
xchg
scas
mov
adc
pop
sbb
and
inc
adc
xor
cs
iret
sbb
mov
sti
psubusb
lds
inc
xor
bound
iret
cmps
jns
lea
push
or
inc
movmskps
cmp
jg
jae
xor
push
xor
outs
inc
or
lock
test
lods
push
inc
mov
pop
mov
pusha
pusha
test
sub
xchg
repz
fisub
out
lds
mov
arpl
outs
xchg
mov
stos
mov
pop
and
push
rol
test
imul
sbb
cwde
xchg
or
mov
mov
vmovdqa
retf
data16
jb
imul
mov
loope
mov
clc
push
or
lods
sbb
in
jns
jmp
rcr
push
js
icebp
push
jl
ds
add
xor
or
and
sbb
jno
sbb
inc
xor
scas
adc
mov
xor
ret
(bad)
fisttp
cmps
dec
adc
sub
loope
and
cs
sahf
or
or
dec
sbb
xchg
inc
sub
sbb
(bad)
stc
mov
pop
mov
pop
mov
cld
lock
jne
rol
outs
popf
sbb
push
sub
xchg
movs
mov
iret
jmp
jmp
mov
scas
or
adc
test
aad
sub
add
(bad)
mov
or
fistp
popf
ins
adc
push
scas
lods
(bad)
lea
cmps
shr
cmp
mov
lods
pop
mov
sub
dec
sahf
dec
sub
push
jno
rcl
sbb
mov
dec
cmp
adc
mov
cmps
scas
sbb
fidivr
cmp
test
ret
jnp
adc
shl
cmc
dec
cld
shl
cs
mov
push
adc
in
cwde
sub
mov
push
pop
mov
jg
bound
stos
es
jle
cmp
(bad)
ret
nop
out
ins
adc
xchg
xchg
aas
rol
idiv
shr
sub
call
mov
xchg
dec
sub
repnz
cmps
stc
(bad)
inc
mov
loop
dec
xor
addr16
popa
dec
dec
movs
xor
xor
mov
xchg
aas
ja
cli
dec
sbb
int
(bad)
jg
iret
in
shr
andnps
add
sbb
jo
ss
push
(bad)
push
shr
(bad)
sbb
and
(bad)
sub
fidiv
mov
xchg
cmps
add
mov
mov
pushf
sbb
pop
inc
push
and
mov
ret
mov
retf
push
outs
and
xor
das
sbb
push
mov
mov
dec
sub
enter
cdq
or
xchg
cdq
add
cs
imul
jge
loop
inc
hlt
jns
jo
add
pop
mov
test
iret
dec
jns
call
pop
int
dec
mov
loop
fnsave
push
into
mov
div
in
dec
dec
int3
pop
dec
inc
cli
jne
xchg
pop
cmp
(bad)
retf
mov
in
imul
mov
pop
push
and
inc
fmul
mov
or
mov
adc
ins
div
mov
dec
xor
outs
ins
push
cmp
pushf
xor
sub
add
pop
call
sbb
loopne
ficomp
xor
ins
lods
movs
inc
xchg
push
mov
and
mov
mov
hlt
(bad)
jg
or
test
and
push
js
add
out
push
inc
mov
mov
sub
retf
sti
mov
push
loopne
enter
jo
ja
sbb
fucom
in
movs
inc
sbb
jge
sbb
xchg
das
mov
test
fild
push
xor
cmc
adc
iret
mov
ret
push
jmp
inc
xchg
xchg
pop
out
cld
sar
fimul
jns
push
popa
les
and
mov
inc
adc
ja
enter
sahf
cmp
icebp
mov
inc
or
adc
or
(bad)
pop
out
shl
adc
cmp
loopne
jno
stos
cwde
mov
iret
in
sbb
pop
xor
or
imul
and
out
xor
cmps
int
cmps
test
call
sar
loop
sub
ds
jb
in
xchg
addr16
fisttp
pop
loop
push
in
ds
or
inc
dec
data16
(bad)
and
and
imul
mov
mov
xchg
rdtsc
bound
sub
outs
popa
hlt
sub
adc
pop
pop
pop
mov
push
movs
je
neg
in
in
fld
adc
cwde
mov
js
fisttp
popf
lock
add
bound
xor
loope
jecxz
push
ror
xadd
outs
or
sbb
push
into
test
add
aas
pop
or
and
ficom
mov
mov
gs
pop
pop
jb
add
add
mov
or
imul
int3
mov
and
sub
add
lea
imul
inc
push
pop
pushf
cmp
mov
ins
pop
dec
shr
mov
adc
xchg
and
xchg
push
mov
mov
sbb
(bad)
out
push
jp
rcr
retf
mov
outs
jecxz
loope
pop
pushf
leave
hlt
sbb
push
lock
sbb
ret
mov
cs
ret
mov
push
mov
pusha
adc
jnp
fbstp
push
add
sbb
sub
fwait
shl
and
mov
pop
xor
mov
aas
or
outs
mov
mov
in
mov
lods
lods
iret
push
xchg
mov
pop
fnstenv
mov
dec
loop
in
mov
fs
pop
adc
dec
xor
jp
mov
scas
ja
bound
mov
stos
pushf
jmp
xlat
inc
(bad)
jl
loop
inc
sahf
cdq
in
jmp
loope
fsubr
or
ds
sub
jne
and
mov
sbb
and
jo
cmp
ficom
sbb
lds
jg
repnz
jmp
clc
jns
loop
imul
aas
sar
add
stc
sbb
inc
ss
loopne
push
adc
sub
adc
adc
mov
cli
aam
loopne
out
dec
adc
repz
cmp
shl
jb
leave
popa
aaa
and
sub
sbb
jno
inc
in
inc
mov
pop
sar
push
xchg
call
jnp
ins
inc
je
aam
add
fild
ins
rcl
popa
ret
add
mov
push
(bad)
inc
xor
pause
in
hlt
pop
int3
dec
mov
call
sbb
call
mov
leave
cli
jg
(bad)
int3
outs
outs
cmp
jp
pop
lea
xchg
xlat
push
add
inc
pop
add
mov
mov
mov
dec
leave
idiv
cdq
test
adc
mov
sub
inc
and
inc
and
repnz
aas
test
imul
idiv
adc
aam
ds
pop
popa
sub
rcl
mov
push
daa
inc
fnstsw
add
fbstp
cmp
sbb
out
dec
repz
pop
loope
data16
jmp
cld
lock
sub
imul
cmc
adc
pop
jmp
clc
add
rol
cld
inc
cli
push
sub
mov
popf
out
out
mov
push
nop
sub
in
outs
stos
repnz
mov
cmc
icebp
mov
retf
jb
stc
add
(bad)
rcr
pop
push
(bad)
adc
in
dec
lods
movs
xor
inc
aaa
dec
mov
shl
inc
std
sub
pop
in
xor
jp
mov
sti
pop
pop
jp
pop
pop
pop
push
(bad)
(bad)
push
ror
sbb
repz
(bad)
pop
jmp
jge
aad
mov
pop
push
mov
cmc
retf
das
imul
inc
add
xchg
mov
add
outs
mov
xchg
jg
mov
sbb
and
fwait
int
and
retf
fcmovbe
repnz
pop
xchg
dec
inc
inc
add
(bad)
enter
nop
pushf
in
cmp
pusha
out
pop
scas
scas
jmp
nop
pop
xchg
sahf
das
adc
or
popf
mov
cld
aas
and
(bad)
or
(bad)
mov
test
push
into
cmp
jp
hlt
nop
pushf
stc
dec
xchg
push
repz
lods
aam
fs
mov
mov
enter
jo
xor
or
push
repnz
inc
dec
jns
in
jmp
mov
jmp
adc
xchg
popf
das
push
adc
and
ins
xchg
ja
retf
sbb
mov
cmp
icebp
adc
xchg
or
out
jle
in
in
adc
jmp
std
jg
mov
sti
stos
sahf
and
retf
dec
inc
pop
dec
scas
lds
icebp
shl
sub
(bad)
or
mov
mov
inc
into
cli
mov
sbb
loope
fwait
add
addr16
xchg
mov
int
dec
push
mov
shl
push
cwde
xchg
mov
pop
cdq
push
add
pop
out
ficom
pop
push
lods
aaa
loopne
outs
mov
jle
(bad)
push
cmp
sar
cld
xchg
xor
ins
jnp
and
pusha
sahf
adc
dec
cwde
pop
jo
out
sub
ins
clc
icebp
fist
neg
jle
add
cmp
mov
sbb
pop
xor
cmp
std
xor
pop
xor
inc
mov
loop
call
shr
cmp
xchg
lods
(bad)
and
lea
sub
push
fld
mov
jmp
icebp
push
repz
jmp
ficomp
loop
cld
and
inc
mov
pop
sub
sahf
mov
js
push
mov
adc
mov
loop
mov
adc
pusha
movs
fdivr
imul
test
sbb
ret
ins
outs
jno
jo
sub
adc
nop
or
inc
pop
jmp
add
adc
mov
in
xchg
std
add
xchg
lock
(bad)
rcl
inc
leave
sub
cmp
jno
and
sub
jne
mov
pop
inc
inc
test
stos
in
int3
push
push
push
sub
jge
or
std
ret
dec
jmp
stc
cmp
popf
stc
pushf
sbb
cmps
mov
pop
cmp
retf
test
cwde
cwde
arpl
enter
test
cmp
push
jb
lds
jns
popa
arpl
mov
rcl
mov
inc
int3
ins
jg
push
dec
push
jae
je
mov
rcl
push
sbb
sbb
push
inc
dec
movaps
or
(bad)
in
xchg
push
mov
push
xor
test
xchg
scas
xor
push
jp
xchg
xor
into
inc
shr
inc
mov
loopne
arpl
or
fsubr
(bad)
aam
mov
jmp
shr
add
fbld
cdq
push
stos
hlt
fdivr
pop
cmp
jo
cmp
daa
stos
bound
jbe
pop
push
mov
repz
fs
movs
mov
mov
jno
mov
inc
(bad)
test
mov
int
mov
repnz
imul
stc
jae
add
push
jbe
rol
mov
pop
fld
mov
cmp
int3
pop
retf
ins
hlt
sar
xor
scas
xor
into
add
add
movs
iret
push
sub
jp
cmps
mov
jecxz
or
jo
aaa
data16
jmp
sub
mov
push
adc
test
ret
jge
sbb
or
bound
jmp
pop
adc
xor
lahf
mov
sbb
xchg
(bad)
xlat
leave
jb
xor
or
cmp
out
pop
xchg
xchg
jmp
xlat
test
into
or
or
cmc
push
fidivr
rcl
sub
je
leave
jns
dec
add
dec
mov
pop
aad
pop
cmp
inc
inc
stos
or
out
lock
inc
sbb
enter
jmp
clc
push
out
aad
aam
xor
cli
outs
sbb
movs
jge
(bad)
(bad)
and
and
or
jbe
xchg
out
lea
jne
xlat
or
jmp
sub
and
lods
data16
cli
(bad)
xchg
popa
sbb
retf
rcr
sar
push
cmp
cmp
ss
inc
add
jp
inc
movs
aas
dec
scas
(bad)
fidivr
clc
or
inc
fsubr
cmp
in
mov
iret
test
push
pusha
push
ins
xor
sahf
(bad)
or
xor
aaa
jnp
mov
enter
jp
jg
cmp
dec
lahf
test
mov
repnz
ret
sbb
jl
cld
xchg
push
ins
mov
jb
jo
cmc
fidivr
pusha
adc
fxch
xchg
arpl
jmp
push
pop
aas
repz
sahf
jge
in
jne
repnz
in
das
jp
ins
dec
lods
push
icebp
pop
(bad)
xchg
pop
fisubr
xor
sub
add
retf
and
fiadd
jmp
scas
pop
mov
xchg
fwait
xchg
ret
push
mov
xor
inc
pop
cmc
jp
repnz
add
daa
xchg
adc
sbb
pop
xchg
or
in
loop
pop
fld
scas
mov
retf
and
push
fstp
inc
jmp
jo
and
push
(bad)
aam
xchg
int
test
push
rol
jp
out
xor
adc
mov
cwde
sub
imul
pop
add
jmp
pop
mov
adc
add
mov
repnz
lahf
sbb
add
ret
fisub
and
or
xor
sub
aad
out
leave
or
mov
jl
xchg
cmc
sub
fwait
mov
mov
aaa
jno
push
inc
add
movs
mov
jns
aam
gs
adc
fldcw
stos
shl
mov
fidiv
pop
rcr
lds
bound
xor
shr
shl
pop
dec
dec
hlt
scas
nop
push
inc
shr
inc
jl
rol
dec
repz
add
retf
push
sbb
jnp
icebp
bound
sar
push
fdiv
nop
retf
adc
ins
into
pop
mov
loopne
test
push
xor
fcomp
xchg
cmp
ret
lea
or
mov
(bad)
cld
pusha
sub
aas
push
clc
repz
fldenv
push
and
or
cs
(bad)
mov
inc
pop
pop
xor
fnstenv
loop
add
in
iret
mov
adc
dec
ret
sub
lahf
pop
mov
gs
mov
xchg
inc
repz
(bad)
fisttp
clc
arpl
mov
fucomip
in
xchg
push
adc
push
jl
mov
push
outs
jno
js
lea
hlt
dec
adc
mov
xor
sub
dec
(bad)
ja
and
pop
cdq
cmp
inc
(bad)
clc
imul
mov
xlat
and
cmovne
push
das
jmp
inc
sub
test
dec
push
dec
(bad)
lock
cli
push
jae
mov
add
mov
daa
outs
outs
hlt
push
dec
and
sub
inc
or
jl
loopne
or
mov
dec
cmps
mov
jmp
clc
push
adc
adc
call
mov
jns
lods
push
jmp
or
xchg
mov
imul
mov
ret
mov
gs
or
imul
(bad)
jecxz
aaa
mov
and
test
and
movs
icebp
fcmovnbe
daa
ds
inc
pop
pusha
ins
loopne
mov
sbb
pop
add
add
jmp
mov
cmp
mov
mov
int3
ins
xchg
jo
inc
xchg
shl
pop
pop
inc
pop
dec
jb
push
je
shl
push
pop
pop
aaa
addr16
adc
retf
adc
iret
xchg
call
mov
pop
and
lea
cmp
jmp
push
dec
and
mov
stos
addr16
cmp
pop
push
js
jno
and
movs
in
pop
loopne
pop
iret
push
ins
aaa
dec
imul
or
mov
xchg
cmp
xor
and
mov
call
mov
retf
xchg
add
push
mov
sbb
adc
jge
sbb
add
movs
mov
adc
sti
push
inc
hlt
sub
shl
sbb
xor
or
outs
bound
shl
cmp
jbe
fcomp
add
and
clc
xchg
xchg
xchg
mov
inc
lods
xor
outs
sub
bound
pop
neg
shl
outs
push
xor
jl
push
pop
lea
sub
pop
add
mov
mov
dec
shl
inc
push
into
imul
xchg
jmp
ds
or
and
jle
xor
in
cmp
es
leave
in
mov
cld
push
hlt
dec
xor
xchg
ins
pop
pop
and
xor
lock
or
mov
push
dec
enter
push
ror
cli
mov
mov
(bad)
popa
call
mov
push
popf
popf
jle
mov
push
out
cdq
fsub
gs
xor
push
(bad)
fcmovnu
xchg
or
or
and
fs
push
popf
retf
lahf
mov
add
call
enter
mul
sub
mov
shr
ins
popf
repz
mov
mov
out
push
sub
fcomi
push
xor
test
popf
pop
movs
rol
mov
inc
add
cmps
cdq
outs
pop
add
inc
pop
aad
je
je
wbinvd
dec
(bad)
xchg
inc
jp
dec
mov
sar
pusha
int3
sbb
(bad)
data16
or
js
pop
add
mov
sbb
retf
es
mov
pop
mul
test
lods
jmp
sbb
jno
mov
popf
sbb
dec
pop
not
inc
rcl
test
sahf
ja
jmp
sbb
add
int
cmp
sbb
push
push
lods
dec
fisttp
or
xchg
dec
mov
lsl
loope
push
movs
inc
(bad)
imul
pop
ja
lock
lods
cmp
jmp
mov
loop
nop
pop
outs
mov
cmp
enter
ds
push
add
push
cmp
sub
fisub
dec
ss
retf
dec
mov
(bad)
push
pop
xchg
fwait
(bad)
cmp
adc
jmp
(bad)
scas
pop
arpl
loopne
movs
mov
sub
push
je
aam
in
push
pop
je
xchg
mov
movs
push
sbb
mov
test
push
jg
xchg
mov
or
call
or
cmps
jecxz
mov
push
cmp
push
cmp
ss
(bad)
cmp
iret
lea
popf
push
dec
add
and
dec
add
retf
adc
xchg
mov
into
test
fwait
jno
xchg
add
ja
cwde
fs
or
jecxz
ret
mov
pop
jl
leave
mov
shl
in
loope
and
mov
js
xor
lea
jge
mov
or
sar
mov
push
inc
jmp
test
idiv
out
xchg
sbb
push
sbb
fcomp
mov
gs
dec
cmp
push
jae
stc
stos
ins
mov
enter
dec
pop
pop
ret
mov
add
bnd
xchg
sti
mov
movs
pop
jo
fist
cmp
xchg
push
sub
add
cmp
xor
push
pop
cdq
test
pop
movs
and
ins
(bad)
iret
cmp
aad
xor
or
xor
sti
scas
movs
test
xor
and
and
(bad)
mov
fucom
int
xchg
(bad)
push
hlt
jg
add
xchg
in
cmp
shr
xor
sbb
push
mov
cmp
movs
gs
inc
push
xor
frstor
dec
jne
mov
js
mov
lea
and
(bad)
retf
mov
aad
ret
int
sbb
mov
xchg
sbb
fld
sbb
jae
es
lock
fcomi
outs
std
pop
jg
jle
push
xor
aam
repnz
cmp
test
adc
call
stos
inc
push
mov
or
sbb
sbb
cld
sti
mov
adc
jmp
retw
scas
scas
mov
adc
xlat
popa
loope
pop
mov
leave
xor
add
dec
xchg
(bad)
mov
loop
lock
jl
push
jmp
cli
scas
jno
jp
rcl
jmp
jmp
or
mov
jle
(bad)
sti
sbb
xor
cmp
les
or
dec
adc
jns
xor
sub
ins
aaa
popf
sbb
aad
mov
mov
push
(bad)
shr
in
std
mov
dec
scas
cmps
jae
daa
test
fisubr
sbb
adc
(bad)
repnz
cmps
call
lods
bound
xchg
fild
xor
cs
ins
nop
in
fidivr
jae
adc
sub
dec
sti
aam
jle
inc
dec
inc
cmps
mov
call
jno
inc
iret
or
scas
test
mov
add
stos
mov
lock
xor
add
stos
(bad)
fild
sbb
ret
(bad)
in
jb
ins
mov
and
aaa
jg
test
lahf
cld
aad
loope
test
out
aad
clc
and
ss
push
mov
shl
push
push
daa
jp
add
fmul
and
rol
mov
aam
dec
dec
movs
daa
inc
fs
movs
aas
mov
adc
xchg
test
lea
das
push
fs
fld
sbb
cmp
sub
sbb
stos
stc
jnp
mov
and
popa
ds
adc
inc
mov
imul
push
or
movs
lds
ins
fwait
mov
and
and
cmp
push
mov
adc
mov
into
ror
stc
shr
aam
cmp
mov
dec
dec
fld
stos
xchg
pop
add
cmc
dec
dec
jmp
test
jmp
cwde
je
ss
dec
xchg
mov
fidivr
call
inc
mov
aas
add
(bad)
rcr
pushf
in
inc
shl
aam
movs
call
bound
cmps
push
push
xchg
fxtract
fwait
sahf
repnz
xchg
test
les
pusha
mov
loop
ins
and
scas
jnp
cmp
and
push
dec
icebp
scas
call
pushf
inc
or
mov
rol
mov
dec
call
xchg
inc
jmp
inc
fild
inc
or
inc
jns
loope
lea
cmp
xchg
push
push
cmp
xchg
adc
jnp
cwde
cmp
cmps
sbb
fmul
mov
(bad)
pop
xchg
mov
xchg
movlps
enter
fabs
inc
lahf
(bad)
jns
add
dec
xor
push
shl
ins
outs
bound
xor
in
mov
pusha
pop
cmp
add
sbb
adc
add
jno
push
mov
lods
inc
jl
jbe
das
jp
std
push
fdivr
push
mov
jmp
pop
loopne
mov
cmps
je
cld
mov
outs
setb
cmps
push
sbb
(bad)
shl
(bad)
in
js
add
inc
shl
dec
xchg
int3
inc
xchg
loope
arpl
push
mov
mov
jne
in
mov
push
fisttp
jnp
test
int
cmp
xchg
adc
pushf
mov
xchg
loopne
inc
sub
mov
cmc
or
or
jl
iret
xlat
addr16
repnz
add
imul
(bad)
ror
push
into
ds
rcr
fdiv
or
ss
fadd
std
ss
inc
cld
add
imul
loop
adc
sub
inc
sub
xchg
and
fmul
fwait
movs
pop
or
jno
hlt
imul
jns
push
aas
std
mov
or
std
pop
cdq
and
mov
jbe
xor
fmul
rol
lahf
(bad)
cdq
call
cmp
outs
cmp
es
ss
sti
test
mov
stc
pop
lods
jmp
cdq
out
cmp
das
idiv
xchg
repz
clc
adc
inc
mov
in
imul
les
and
mov
mov
repnz
xchg
ja
mov
xor
push
push
and
out
xchg
icebp
inc
je
cmp
adc
mov
mov
ret
dec
or
mov
pop
shl
jle
repnz
in
iret
jle
mov
cmp
movs
xor
loope
cdq
fiadd
(bad)
ror
xor
in
mov
jmp
in
adc
xor
fmul
(bad)
sti
jle
in
push
mov
out
mov
fidivr
call
add
and
mov
bound
in
mov
and
push
push
fisttp
repz
pop
inc
stos
aaa
or
sub
out
out
add
js
and
push
sbb
daa
cwde
sar
ret
movs
shr
jp
fadd
addr16
lea
cli
cmp
nop
xchg
inc
or
and
addr16
cmp
(bad)
pusha
sbb
lds
pop
pop
jl
mov
jmp
out
retf
and
scas
push
jne
out
adc
sti
mov
add
mov
pop
lods
(bad)
ins
loopne
(bad)
jecxz
xlat
jmp
(bad)
clc
js
shl
pop
or
cwde
or
adc
cdq
fnstenv
sbb
pop
mov
out
test
and
aaa
and
adc
out
mov
add
dec
add
addr16
or
out
adc
jecxz
adc
loop
dec
adc
ins
adc
arpl
jns
sbb
hlt
test
add
jae
arpl
sbb
imul
imul
out
xchg
xchg
addr16
out
nop
dec
es
mov
mov
dec
outs
scas
in
sahf
xchg
xchg
fdivr
daa
mov
sbb
sbb
test
or
shl
pop
mov
ret
pop
xor
pop
sbb
mov
add
pop
jmp
ror
(bad)
cdq
out
sbb
adc
scas
sbb
mov
ins
sbb
mov
sti
adc
inc
and
jecxz
xor
mov
pop
jnp
hlt
push
js
and
pop
add
in
lds
pop
mov
and
pop
int
add
pop
xchg
and
hlt
mov
ins
cmp
cmp
dec
mov
int3
push
lahf
addpd
mov
cwde
mov
sbb
mov
pop
in
mov
mov
outs
ret
mov
sub
into
cs
jb
push
(bad)
ins
gs
or
iret
adc
enter
iret
test
jmp
sar
push
ret
lods
sbb
inc
sbb
adc
xchg
cld
sbb
clc
cmps
fdivr
fild
push
scas
cmp
aas
in
sub
pop
dec
ret
es
pop
and
aad
icebp
lods
out
cmps
xchg
xor
jbe
mov
pop
ins
ror
aaa
sub
sbb
mov
or
jnp
sbb
mov
inc
or
imul
push
test
enter
and
pop
ds
in
int3
je
test
pop
imul
push
popf
mov
xor
pop
sub
int
mov
in
pop
mov
ror
adc
mov
aam
fisttp
sbb
fcmovnbe
std
jmp
jl
mov
enter
arpl
lea
inc
lea
adc
imul
shl
push
push
push
fnstenv
add
cli
sbb
push
je
sub
(bad)
int
sbb
sbb
les
adc
xchg
pop
and
out
or
dec
adc
sbb
add
inc
and
dec
(bad)
or
dec
popf
dec
cmc
icebp
addr16
inc
cmp
sahf
or
or
pavgw
loope
push
adc
cmp
or
push
repnz
adc
sar
enter
xchg
arpl
int
ret
in
popaw
inc
stos
and
mov
fwait
xchg
cmps
call
sbb
sbb
sbb
lds
or
mov
fmul
push
iret
sbb
jno
xchg
push
stos
mov
mov
test
retf
pop
sbb
inc
arpl
push
jg
repz
sub
jp
jo
retf
fistp
lods
xor
sbb
mov
lods
push
mov
cld
rsm
mov
add
xchg
xchg
cld
je
popa
pop
bound
xor
mov
(bad)
or
leave
call
pop
sbb
cmp
cmps
loopne
pop
mov
dec
sub
push
dec
sub
vcvtss2sd
mov
xchg
lea
inc
xor
sbb
aas
call
or
dec
test
mov
mov
dec
pop
imul
jns
push
outs
adc
adc
cdq
in
int
dec
push
xor
add
stos
add
movs
mov
and
jp
int
xor
dec
test
or
push
adc
ins
test
inc
shr
xchg
aas
dec
inc
or
pop
adc
(bad)
popa
pop
and
std
sbb
test
mov
imul
prefetch
mov
frstor
xchg
fdiv
fwait
cmc
inc
out
sbb
mov
mov
enter
cmp
cdq
call
cdq
enter
js
push
push
pushf
dec
inc
jae
adc
(bad)
cli
sub
scas
cld
add
jecxz
ss
pop
xchg
or
clc
xor
sar
fadd
in
movsx
sub
inc
adc
jae
fisttp
jecxz
add
lods
xchg
nop
dec
hlt
in
(bad)
call
pop
and
cwde
jmp
jns
test
sar
es
repz
and
mov
out
icebp
rcr
xor
pusha
xor
call
and
push
fistp
dec
mov
and
retf
xor
sti
push
sub
test
adc
lods
test
in
mov
in
loop
or
sub
dec
idiv
clc
jecxz
pop
jne
push
cmp
dec
cmps
mov
loope
xchg
pushf
stos
imul
and
cld
ss
mov
int
adc
je
push
scas
bound
mov
sbb
sbb
out
sub
cmps
arpl
pop
xchg
adc
mov
hlt
dec
hlt
mov
pop
mov
lahf
pop
mov
push
mov
jp
movs
push
lods
jno
mov
or
sbb
movs
xlat
push
ja
adc
jnp
outs
or
cmp
adc
ja
ror
int
(bad)
jg
dec
movs
mov
enter
cwde
cli
jp
mov
xchg
les
inc
retf
aad
and
scas
(bad)
int
mov
jmp
ret
inc
mov
add
repz
inc
pop
aad
jne
cmp
xor
jl
mov
sbb
inc
sbb
clc
push
ds
ss
add
lods
push
adc
and
sub
push
sub
mov
popf
mov
lahf
push
fstp
xchg
aas
add
cmps
aas
mov
arpl
cld
int3
or
pop
add
clc
push
popa
out
or
cmps
xchg
loopne
dec
dec
(bad)
cmp
sub
idiv
jne
dec
sub
lea
and
jb
jo
fldcw
or
aam
and
cmc
pop
dec
cmps
mov
loope
in
sahf
mov
sbb
ds
enter
sti
mov
clc
outs
mov
cwde
cmps
pop
ins
push
mov
mov
lea
jl
adc
clc
pop
jg
sub
inc
out
les
test
jbe
dec
add
aad
movs
mov
or
mov
aas
fsub
stos
rcr
adc
outs
mov
mov
cmp
test
lods
lahf
in
int
in
dec
dec
jns
jne
pop
pop
jge
cmc
or
jnp
xor
(bad)
mov
(bad)
pop
inc
hlt
add
loopne
and
test
push
ror
cmc
mov
or
shl
shl
lods
mov
cmp
dec
cmp
jb
int3
pop
ror
fs
pop
or
jnp
add
push
js
lock
dec
sub
jg
xor
sub
jmp
add
push
xchg
push
cmp
out
sbb
aam
dec
mov
mov
push
mov
cwde
in
push
push
or
cld
lea
repz
sbb
or
in
or
add
mov
iret
mov
push
addr16
sahf
cmp
dec
add
xor
add
xor
jo
sub
dec
cwde
ja
inc
xor
jl
push
mov
inc
add
arpl
scas
inc
stos
mov
int3
or
cli
call
lahf
or
arpl
js
popa
repz
aad
add
push
dec
icebp
out
lahf
adc
push
aam
push
test
push
add
push
inc
mov
add
cmp
mov
das
cmp
mov
pop
cdq
pop
jl
lds
repz
push
push
icebp
rol
mov
dec
mov
std
xchg
(bad)
inc
int3
sahf
(bad)
(bad)
mov
xchg
hlt
cmp
push
push
inc
or
xor
ret
(bad)
pushf
push
repz
pop
(bad)
fnstcw
icebp
cdq
pop
or
hlt
icebp
push
inc
cld
jnp
sub
inc
(bad)
and
cmc
iret
(bad)
mov
sbb
cmp
out
or
out
pop
mov
mov
fimul
and
fwait
xchg
push
xor
cld
ds
rcr
push
hlt
in
cmp
jge
jnp
clc
out
mov
or
inc
mov
push
add
inc
jb
test
adc
fld
inc
in
imul
push
gs
jg
into
(bad)
lahf
popa
pop
lds
out
aam
mov
arpl
repnz
pop
and
loope
adc
lds
and
xchg
movs
(bad)
mov
test
xchg
pop
dec
push
push
je
or
inc
ss
mov
push
xlat
jge
out
push
leave
neg
hlt
mov
dec
movs
jge
mov
xor
sbb
(bad)
mov
popa
push
bound
adc
stc
jle
addr16
outs
mov
scas
icebp
pop
movs
pop
jb
rcl
into
(bad)
jo
ret
pop
adc
popa
sub
in
popf
mov
push
pop
mov
sub
pop
inc
xchg
lahf
add
mov
mov
repnz
leave
sub
or
jmp
xor
inc
icebp
(bad)
mov
call
add
call
sub
or
jge
adc
jae
pushf
dec
popf
fs
xor
jle
fnsave
inc
or
sub
xchg
dec
mov
inc
xchg
sub
inc
fmul
test
sub
cmp
test
add
sti
scas
test
pop
and
add
mov
stos
pop
dec
and
mov
pop
lahf
mov
xchg
and
mov
lods
shr
jmp
adc
mov
add
inc
int3
loop
jecxz
jge
dec
(bad)
pop
cmps
sbb
out
retf
sub
jp
adc
pop
mov
mov
dec
fwait
addr16
xchg
shr
push
mov
dec
inc
pop
dec
cwde
out
imul
cmp
(bad)
push
inc
adc
xor
xchg
mov
out
jge
mov
(bad)
mov
test
aad
daa
mov
sub
push
movs
jmp
stos
jno
sub
cmp
(bad)
mov
cs
sbb
jge
mov
add
sti
jmp
mov
and
dec
sub
or
xor
lahf
shr
sbb
daa
hlt
jno
cmp
push
daa
retf
dec
push
lds
std
jns
popa
dec
mov
xchg
and
mov
data16
cwde
or
cli
popf
je
inc
and
jnp
fadd
ltr
push
out
out
or
sbb
add
and
xchg
cmp
mov
pop
outs
fst
adc
imul
retf
pop
clc
jg
push
cmp
sbb
jb
push
dec
xchg
sar
push
mov
sub
mov
stc
pop
into
push
imul
mov
sub
int
mov
push
mov
(bad)
jge
cmp
jmp
bound
xchg
xchg
jmp
or
xchg
inc
mov
mov
cmp
cdq
loopne
xchg
push
les
movs
out
ins
je
(bad)
in
xchg
stos
enter
adc
xchg
pop
rcl
mov
repz
push
mov
sub
leave
jle
rol
jmp
outs
ins
std
shl
jnp
and
sbb
or
jb
fcmove
adc
sub
sbb
mov
inc
shl
cmps
push
sbb
mov
lds
out
xchg
fmul
pop
je
call
adc
movs
test
shl
jle
xor
rol
jl
fwait
cli
jne
nop
ror
fwait
or
fs
push
mov
pop
mov
dec
xchg
jl
lds
dec
push
pushf
mov
sub
jne
lods
or
pop
cld
ins
jb
fwait
call
in
std
xchg
jb
sub
fild
push
repz
ret
inc
cmc
xchg
sbb
push
bound
xchg
jo
iret
imul
and
mov
sub
jl
cmp
outs
repz
cwde
in
leave
or
push
mov
push
into
in
pusha
mov
and
sahf
call
mov
gs
sahf
adc
jo
mov
fadd
jmp
daa
addr16
mov
xchg
aas
ss
js
cwde
loope
push
clc
lock
jmp
fdivr
ret
mov
nop
popa
loope
cli
aad
push
cwde
std
xchg
dec
dec
lahf
mov
jbe
std
mov
add
(bad)
push
sbb
sti
jae
imul
push
dec
cmp
xor
rol
mov
xchg
shl
repnz
jmp
nop
inc
aaa
jecxz
lods
fld
fwait
(bad)
jae
stos
mov
jecxz
fidiv
sub
mov
dec
cmp
mov
test
mov
cmp
mov
pop
cwde
mov
(bad)
iret
(bad)
stos
pop
ret
movs
inc
or
lods
cmp
iret
icebp
mov
dec
xchg
mov
xchg
push
pop
or
aad
into
std
cld
push
inc
push
pop
inc
inc
xor
mov
mov
push
push
add
or
test
fst
dec
outs
ret
xor
fldcw
sbb
xor
jns
in
mov
loopne
gs
retf
push
movs
sbb
sti
mov
(bad)
cmc
dec
ja
(bad)
aam
ja
sub
lock
and
lahf
movs
mov
sar
ror
inc
es
sbb
stc
fsubr
shr
(bad)
in
(bad)
rol
ins
repnz
arpl
mov
lds
cmps
call
retf
iret
mov
and
loope
ret
mov
addr16
ret
inc
scas
test
mov
in
popa
dec
mov
xchg
fistp
stos
mov
into
les
aas
test
lahf
out
pop
nop
cdq
push
xor
pop
stos
xor
sti
repz
lods
or
test
test
pushf
or
out
mov
and
(bad)
mov
daa
mov
ins
ins
push
add
out
or
xchg
jns
sbb
popf
addr16
inc
jge
push
mov
test
lods
xchg
adc
and
jbe
sbb
pop
xchg
adc
inc
jp
adc
out
xchg
pop
xor
mov
mov
stc
movs
dec
jns
xor
add
ror
lock
and
(bad)
out
aad
(bad)
sbb
jo
add
fs
push
(bad)
in
lods
add
outs
aas
loop
std
js
fstp
je
aam
xchg
mov
cmp
int3
loope
xor
jl
shr
sbb
push
inc
push
inc
sar
push
pop
mov
fimul
cmc
add
pusha
imul
leave
retf
cmp
cwde
mov
repnz
cmps
pop
stc
jae
or
fnsave
adc
lods
stos
cmp
out
and
bound
sub
sbb
sub
jne
sahf
inc
jmp
cmp
shl
stc
popa
unpckhps
stos
fdivr
mov
pop
in
test
cmp
and
sub
cwde
inc
add
xchg
repnz
lods
jecxz
add
movs
mov
mov
and
mov
cmp
and
mov
les
gs
cmp
xchg
addr16
mov
test
repz
adc
xor
repnz
ss
mov
cwde
loopne
and
shl
dec
mov
mov
push
inc
dec
scas
das
mov
add
pusha
cmc
dec
mov
mov
inc
sbb
in
outs
sub
retf
idiv
test
(bad)
(bad)
push
test
ins
pop
lock
call
cmp
sub
dec
inc
test
xchg
pop
dec
push
sbb
or
popa
adc
and
push
mov
and
dec
jae
inc
jmp
les
pop
xchg
data16
jo
push
mov
adc
retf
push
cmps
sub
mov
cmps
leave
fcomp
mov
jno
jg
xchg
clc
scas
fs
inc
jb
sbb
das
or
xor
clc
add
jmp
mov
repnz
movs
mov
sbb
imul
push
push
les
stos
arpl
mov
add
and
mov
fstp
mov
xchg
xchg
or
outs
movs
mov
push
add
pop
sbb
cmp
mov
dec
or
mov
mov
cld
pop
mov
test
sti
lods
(bad)
mov
ins
(bad)
adc
cmp
inc
pop
xchg
mov
sub
cmp
fimul
lahf
aas
sbb
push
mov
xchg
sbb
in
xor
imul
jnp
and
or
mov
dec
mov
cmp
bound
sbb
aas
fcomp
xchg
cmp
outs
loop
(bad)
dec
xor
inc
mov
mov
retf
frstor
mov
mov
adc
pushf
ss
loope
sar
add
dec
sub
pushf
pop
movs
arpl
mov
adc
mov
xchg
mov
dec
and
xor
in
fs
add
lods
mov
dec
dec
call
or
xlat
movs
sbb
daa
mov
pop
ins
push
inc
popa
cmps
sbb
clc
rcpps
xchg
out
dec
call
fisttp
push
out
retf
mov
call
rcr
mov
dec
js
cmps
js
fadd
add
idiv
js
xchg
cdq
lock
pop
in
xor
mov
mov
jo
(bad)
pop
lea
jae
cmc
je
or
xchg
and
std
or
jmp
icebp
in
sub
or
pop
or
push
retf
sbb
mov
xor
dec
pop
dec
into
dec
sub
popf
or
(bad)
and
and
mov
imul
cmc
outs
dec
bound
shl
cmp
push
adc
pop
push
div
or
fcomp
ret
lea
test
add
hlt
cmps
sbb
dec
cdq
push
cmp
cmp
add
pop
inc
shl
mov
mul
jnp
movs
mov
stos
sar
cmps
or
ja
retf
ret
sbb
mov
idiv
xor
je
adc
cmp
push
sti
pushf
xor
mov
pushf
jb
add
shr
in
fisttp
cmps
mov
or
inc
adc
inc
hlt
out
xchg
loopne
add
push
aaa
sbb
adc
addr16
xchg
cmp
xor
jmp
push
rcl
data16
pushf
shr
jbe
das
scas
jl
aas
push
sub
stc
jecxz
jmp
jae
jmp
clc
lods
dec
aad
aas
fidiv
dec
xor
mov
sub
icebp
clc
jecxz
fadd
push
mov
(bad)
push
and
adc
(bad)
lods
pusha
adc
aaa
clc
aam
mov
xor
aam
or
xor
or
cvtdq2ps
cmp
ds
add
push
mov
ins
addr16
aad
dec
les
xchg
dec
fidivr
(bad)
xlat
repnz
push
(bad)
sbb
(bad)
and
js
xchg
mov
gs
popa
jne
movs
or
xor
fiadd
scas
mov
inc
jo
push
cmp
mov
or
into
add
dec
in
cwde
ins
out
or
cmp
into
adc
mov
push
outs
shl
(bad)
shr
movs
aad
repnz
add
xchg
sbb
push
xlat
test
sbb
cmp
inc
cmp
lock
jl
or
or
sbb
cmc
sti
sbb
leave
movs
adc
xlat
xchg
rcr
dec
and
mov
mov
stos
cmp
pop
jg
andnps
retf
in
out
fmul
push
icebp
mov
pop
js
sar
jmp
cwde
retf
test
cwde
xchg
adc
mov
cmp
test
les
or
(bad)
ficom
xor
mov
mov
add
adc
(bad)
in
retf
cmp
daa
rcr
and
or
iret
out
retf
inc
mov
cmp
jge
push
adc
popa
dec
shr
mov
jne
xor
jb
scas
mov
lods
xchg
lods
data16
jne
inc
sbb
push
das
jno
inc
push
sub
movs
xor
jo
fidiv
add
int
cmp
xor
pop
adc
mov
push
cmps
push
or
aaa
ins
ret
and
loope
pop
xchg
xor
icebp
lahf
pop
imul
js
push
nop
jo
rcr
cmp
(bad)
repnz
call
jl
jno
dec
jo
dec
add
jb
push
dec
or
dec
test
sahf
ja
add
sub
dec
inc
xchg
add
push
das
aad
gs
repnz
push
fsubrp
mov
xchg
std
mov
retf
jbe
dec
jge
test
cld
sbb
iret
ins
call
pop
pop
out
pop
call
lods
mov
test
jmp
stos
std
sar
(bad)
sub
outs
jg
fisubr
sub
rcl
xchg
not
adc
in
jg
mov
cdq
sti
int3
cmp
jmp
mov
jne
pop
test
mov
sbb
ror
xor
lock
mov
add
repnz
jne
gs
xchg
dec
in
adc
add
dec
ret
fimul
int3
adc
outs
cmp
push
test
icebp
mov
aam
sbb
xchg
fdiv
push
sbb
or
push
ret
sbb
pusha
in
push
push
rcl
popf
pop
adc
(bad)
shl
xchg
sub
mov
outs
mov
push
cmps
fld
enter
rol
mov
mov
pop
push
es
and
xchg
sub
(bad)
into
jno
xlat
cwde
retf
mov
push
pop
jecxz
pop
in
fidivr
xor
rcl
es
ror
scas
(bad)
adc
jns
jmp
mov
jecxz
or
fstp
xchg
mov
test
inc
adc
ds
xchg
jo
or
ror
mov
stc
into
inc
adc
xor
dec
std
dec
ds
mov
cmp
mov
mov
sbb
mov
movs
std
cmp
aad
xchg
dec
adc
and
and
push
xchg
push
jo
fcom
push
xchg
or
cs
mov
aaa
test
popa
das
iret
je
sti
out
pop
pop
into
in
test
sahf
aad
mov
shl
inc
push
fdiv
and
stc
aad
cmps
pop
pop
or
outs
fisttp
test
mov
cld
xor
adc
bound
dec
mov
cmp
mov
pop
xor
cmp
xor
repz
gs
push
push
push
imul
sbb
call
add
mov
test
mov
or
cli
inc
xchg
push
or
cmps
xor
lahf
add
pop
add
arpl
out
mov
mov
xor
jg
pop
data16
pop
add
pusha
fstp
scas
sbb
call
mov
adc
adc
inc
mov
cmps
aam
xchg
mov
jge
call
cmp
xchg
mov
xchg
jne
cmp
out
aam
pop
push
(bad)
fbld
push
call
(bad)
lock
call
fld
mov
pop
mov
ins
dec
aas
jns
icebp
push
push
xchg
ds
retf
xchg
daa
lods
rcl
into
in
adc
cmps
xor
sbb
xor
lods
cmc
adc
and
imul
fisttp
inc
cdq
test
or
mov
aam
jp
add
aad
pop
out
xor
or
aas
and
pop
addr16
push
pop
dec
ret
fwait
adc
push
adc
shr
out
sti
dec
or
lock
lds
and
inc
jge
in
or
imul
pop
aam
pop
call
xchg
std
out
mov
movs
xor
mov
inc
inc
and
fs
js
push
or
sub
xor
push
fs
pop
fs
xchg
push
sub
mov
retf
fsub
mov
test
dec
add
pushf
xor
int
aam
stc
sahf
sub
jle
cli
(bad)
xchg
or
int3
cmp
ret
fsubp
add
sub
bnd
cmps
dec
xchg
fistp
xor
clc
icebp
pop
push
cmp
push
call
mul
jle
add
push
test
cwde
xchg
popf
enter
cmp
adc
or
and
pop
sbb
cli
xchg
pop
int3
push
dec
jb
jbe
adc
hlt
jns
mov
add
fucomp
int
popf
sub
cmp
push
jmp
(bad)
rcl
outs
lahf
xchg
dec
div
mov
shl
loope
shl
les
test
sbb
or
movzx
call
aas
and
dec
call
int3
inc
jae
dec
add
push
nop
mov
inc
xchg
push
in
sti
push
sub
pop
in
test
jecxz
test
div
enter
jmp
js
repnz
pop
ins
sub
sbb
test
stos
mov
and
jnp
mov
or
repnz
test
sub
xor
adc
aam
jp
pushf
imul
sub
imul
cmp
imul
or
and
jmp
popa
and
xchg
cmp
xor
sbb
or
cld
xchg
xor
mov
dec
mov
pusha
in
jnp
mov
repnz
mov
jecxz
push
shl
jecxz
inc
jns
adc
sbb
sub
popf
and
dec
xor
add
jo
rol
push
and
in
gs
hlt
mov
add
xor
push
sub
ja
loopne
pop
push
sub
(bad)
dec
icebp
lea
retf
adc
cmp
vsqrtss
inc
xor
mov
push
cmp
inc
mov
bound
call
push
or
neg
jne
mov
(bad)
push
and
push
mov
push
and
test
mov
mov
aaa
pushf
out
loopne
addr16
sub
retf
inc
mov
fs
loope
inc
push
sahf
(bad)
jbe
sub
dec
sbb
jae
mov
pop
mov
hlt
das
mov
ins
jo
lds
mov
mov
test
and
fild
push
push
pushf
xchg
add
dec
xor
data16
jnp
lods
mov
loope
mov
sub
fwait
mov
and
(bad)
push
dec
mov
jne
jno
and
or
scas
jle
mov
dec
and
in
mov
adc
push
inc
xor
dec
in
test
leave
in
jbe
fild
dec
lods
dec
(bad)
retf
in
sub
addr16
out
(bad)
jno
or
xchg
inc
dec
icebp
mov
lods
out
mov
int3
adc
sahf
leave
xchg
rol
mov
mov
inc
cmps
mov
iret
mov
sahf
jg
jbe
stos
jae
jno
inc
movs
cmp
pop
loop
dec
pop
adc
cmps
mov
push
push
(bad)
push
jg
mov
mov
inc
sub
ror
pop
popa
inc
jmp
lahf
push
nop
jg
clc
mov
hlt
inc
xor
out
or
pop
inc
xchg
xchg
pop
lock
cwde
iret
pop
mov
inc
mov
or
test
push
add
addr16
jne
jae
aam
inc
in
int
xor
hlt
or
mov
push
mov
fld
xchg
icebp
movs
mov
stc
adc
rol
cmp
pop
fisubr
jno
idiv
call
xor
xor
call
and
xchg
inc
out
jp
dec
mov
sti
ret
pop
inc
loopne
(bad)
ss
int3
or
shl
mov
xchg
(bad)
cli
shl
lock
js
enter
mov
das
pop
dec
adc
jl
mov
pop
xchg
int
in
loope
call
jae
test
jmp
aam
cld
sub
or
lock
xor
pop
test
jae
and
xor
fs
retf
and
in
dec
les
jl
std
test
xor
adc
loopne
xchg
mov
(bad)
ds
sbb
push
pop
dec
fnstsw
pop
push
push
jmp
inc
fcmovb
adc
sub
mov
pop
dec
sar
mov
test
in
jnp
cmp
push
mov
enter
je
mov
leave
push
xor
push
push
int3
and
nop
into
stc
sub
mov
sbb
call
jp
dec
add
inc
or
mov
xchg
xchg
pop
jl
pop
mov
mov
and
movs
inc
and
cmps
ret
scas
cmp
(bad)
xor
adc
or
leave
cmc
sbb
outs
xchg
mov
cli
int3
in
into
mov
pop
stos
test
nop
hlt
cmp
outs
cmps
sar
jbe
adc
sbb
dec
adc
adc
pop
iret
adc
mov
int
adc
push
pop
mov
push
xchg
xchg
mov
xchg
mov
add
mov
out
push
cmp
add
inc
cmc
jno
inc
push
mov
mov
in
xor
scas
fldenv
cmp
(bad)
out
dec
or
enter
out
or
xchg
cmp
sbb
and
ins
pop
xor
out
mov
outs
mov
mov
push
daa
div
xchg
jp
and
cmp
retf
mov
mov
icebp
loopne
loop
or
inc
bound
dec
sbb
mov
ja
or
sbb
js
pop
sub
mov
ret
and
xor
mov
sub
jae
in
push
mov
es
fs
inc
test
mov
dec
mov
mov
xchg
or
outs
or
pop
mov
mov
add
repz
out
mov
sub
inc
jmp
pop
leave
movs
daa
inc
sub
cmpxchg
rol
add
mov
idiv
pop
mov
mov
cmp
(bad)
mov
ss
add
in
or
mov
loope
dec
dec
loope
(bad)
and
sbb
mov
add
or
out
sbb
pop
sub
les
pop
mov
jg
jmp
push
xchg
pop
pop
imul
fmulp
retf
cmps
cmp
xor
sub
jge
push
sub
sbb
jbe
add
punpcklbw
cwde
lea
in
xor
les
mov
sbb
cli
popf
sub
xchg
ins
add
pop
shl
xchg
out
retf
(bad)
je
stos
push
repz
and
push
fsubrp
xor
mov
and
jne
or
scas
fnstsw
adc
or
call
inc
cld
mov
mov
adc
mov
and
mov
ret
aaa
inc
sbb
cmp
jg
inc
push
loopne
scas
ja
mov
sub
inc
xor
setbe
add
mov
lock
push
les
mov
sub
pop
xchg
add
sub
mov
(bad)
inc
stos
fwait
je
jle
or
inc
pop
sbb
gs
push
xchg
in
call
xlat
in
call
ins
xchg
push
cmp
push
or
cs
jb
cmps
test
lahf
lods
in
xchg
dec
movs
gs
xchg
pop
jb
imul
shl
out
(bad)
or
cmp
(bad)
in
ret
jne
sti
mov
and
jp
mov
imul
xor
js
cld
pop
push
dec
xchg
inc
sti
inc
retf
mov
xchg
sub
inc
or
inc
fimul
add
(bad)
and
xor
scas
jno
sbb
jb
repnz
or
mov
adc
fwait
cli
pop
dec
cmp
pop
pushf
sbb
stc
sbb
pop
sar
enter
stos
adc
pop
adc
mov
fwait
jg
out
and
jne
int
icebp
adc
cmp
fsub
retf
mov
xchg
inc
daa
sbb
push
and
xchg
out
mov
jmp
pop
das
adc
in
hlt
out
bound
arpl
lock
push
jb
push
repnz
js
sbb
sbb
pop
and
cmp
gs
mov
mov
int3
scas
jbe
cmps
pusha
sahf
pop
mov
inc
adc
cwde
sub
xor
outs
or
or
rol
jge
fs
pop
mov
mov
push
sbb
fadd
std
rep
push
adc
loop
add
add
xchg
xor
nop
imul
ins
out
ror
pop
mov
jge
(bad)
mov
jmp
loop
mov
push
inc
cmp
adc
sub
jnp
and
pop
jmp
and
jmp
out
enter
adc
mov
loop
outs
stos
lahf
jb
sbb
inc
sti
inc
fsubr
pop
cdq
fs
pop
jl
xor
adc
adc
outs
push
add
leave
cld
dec
js
add
data16
loop
and
les
mov
sbb
lea
push
mov
xchg
mov
int
push
lahf
bound
xor
repz
push
ins
popf
nop
pusha
xor
dec
loopne
mov
sbb
popf
and
cli
push
sub
fisubr
jb
mov
adc
sbb
mov
out
movs
repnz
ss
sub
repz
xchg
mov
sub
or
sub
sbb
int
cmp
mov
pop
call
sbb
dec
push
sbb
pop
retf
aaa
adc
(bad)
sbb
jbe
or
dec
mov
cs
shl
jle
pop
loope
and
inc
xor
xor
in
push
fimul
push
cmp
push
fsub
enter
push
test
hlt
jae
movs
je
movntq
out
cs
ficomp
call
rol
inc
inc
xor
jmp
(bad)
aad
aaa
jmp
(bad)
dec
repz
(bad)
push
push
ret
cdq
stos
scas
pop
pop
ins
out
jo
(bad)
pop
stos
dec
movs
gs
push
jbe
push
outs
add
or
in
cmp
imul
jnp
add
and
pop
aas
push
les
stos
pop
test
mov
sti
pop
push
mov
lods
test
stos
out
daa
fstp
sub
cs
add
lods
cmc
icebp
retf
and
push
mov
ret
inc
std
mov
mov
sahf
push
into
test
fs
ss
mov
shl
jecxz
xchg
pop
pop
ins
test
mov
stos
mov
jg
cmps
add
sub
nop
rcr
jnp
pop
stc
mov
(bad)
in
call
fdivr
inc
out
retf
ss
or
xchg
mov
and
cmp
imul
and
das
cmps
imul
dec
jge
enter
mov
mov
stc
lea
cdq
push
mov
in
mov
xor
mov
data16
lahf
sahf
dec
push
or
xor
ret
xor
lods
cdq
jno
dec
imul
xor
mov
call
out
sub
sub
sub
fimul
push
push
out
imul
scas
jle
xchg
pusha
stc
mov
cmp
pushf
cmc
or
ja
dec
sbb
fdivrp
jl
jno
jp
pop
rcl
shr
cmp
out
jno
in
cs
sar
mov
mov
jne
mov
ins
jo
jns
fisub
repnz
fwait
jl
mov
adc
addr16
popf
outs
mov
push
xchg
(bad)
mov
(bad)
int
enter
ins
pop
push
pop
imul
dec
pop
adc
pop
mov
call
pop
int
cmp
mov
daa
loopne
rcr
sbb
or
inc
jmp
xor
scas
bound
jbe
sub
push
push
mov
xor
push
ja
adc
iret
inc
or
xchg
aas
lods
in
add
icebp
in
je
fild
jne
mov
(bad)
mov
cmp
ret
inc
in
xor
xchg
pop
and
push
cwde
jmp
(bad)
push
nop
in
mov
movs
or
cmp
push
push
(bad)
andnps
xchg
and
pop
outs
pop
mov
fs
cmp
in
inc
push
(bad)
dec
dec
leave
lahf
in
fidiv
inc
mov
inc
daa
jae
jge
shr
inc
sbb
test
daa
not
mov
inc
jnp
sbb
cmp
test
xor
inc
inc
and
sbb
add
lds
push
cmp
int3
pop
std
fcom
mov
sti
pop
aad
es
inc
mov
fstp
add
cmps
icebp
jae
jl
lahf
scas
stos
jno
jne
fidiv
dec
inc
fdivr
sbb
std
movs
ret
sub
ret
out
add
mov
fwait
inc
push
outs
pop
gs
pop
and
retf
iret
fsub
loop
add
fimul
or
scas
dec
push
es
and
(bad)
pop
add
or
ss
loop
mov
mov
aaa
pop
inc
sahf
imul
popa
xchg
aaa
add
cmp
sbb
rcl
xor
pop
(bad)
(bad)
out
test
mov
dec
fs
imul
stc
inc
sub
and
mov
pop
pop
pop
fs
mov
xchg
movs
adc
mov
dec
mov
pop
cmp
pop
lds
sbb
movs
aam
retf
mov
mov
mov
mov
ret
pop
mov
lods
mov
mov
rcl
adc
pushf
ficomp
jb
je
out
adc
fdivr
xchg
and
xchg
add
aam
fdivr
mov
push
mov
pop
movs
xchg
dec
dec
and
xor
inc
push
fistp
aaa
inc
xor
xchg
fcom
adc
retf
inc
push
xlat
jle
out
hlt
les
fs
cmp
jbe
int3
inc
hlt
xlat
mov
(bad)
sbb
xchg
jmp
jne
add
sub
loop
rcl
xlat
cmps
repnz
cmovno
cwde
cli
in
sub
inc
lahf
push
in
push
xchg
xchg
imul
popf
adc
mov
inc
mov
mov
or
nop
inc
jae
dec
popf
xor
mov
cmp
xor
lods
mov
xchg
mov
mov
cmp
jbe
(bad)
sub
push
push
out
xchg
cli
or
mov
mov
jbe
(bad)
mov
sub
sar
daa
adc
jno
out
pop
fwait
ds
pop
add
retf
sbb
inc
and
push
loop
sub
aas
or
pop
or
je
test
cwde
pop
popf
xor
call
dec
jnp
loop
or
mov
sub
ret
jbe
sbb
add
fs
jns
sbb
pop
int3
fwait
ins
push
bound
pop
enter
pop
fsub
fist
outs
int
je
in
adc
es
xchg
in
adc
and
push
(bad)
es
inc
or
dec
jnp
scas
xchg
aad
je
icebp
fwait
push
xchg
cmp
jnp
movs
ror
int3
aas
js
cs
jo
test
or
bound
pop
in
(bad)
cli
aas
sbb
pop
mov
xchg
sbb
mov
loopne
add
daa
pop
mul
pop
push
(bad)
loop
outs
or
xchg
inc
mov
and
sub
and
add
xor
adc
xchg
out
(bad)
cmp
int3
cmps
icebp
fisttp
je
js
out
push
lock
add
std
ins
cwde
xor
inc
aas
pop
xor
push
adc
mov
xchg
or
jle
jo
sub
movs
xchg
add
dec
(bad)
mov
rcl
cwde
pop
jmp
mov
mov
loop
xchg
fld
xor
mov
jno
jg
dec
repnz
pop
jl
or
ret
hlt
ret
int
idiv
jns
adc
div
mov
(bad)
dec
sbb
adc
lods
(bad)
cmps
aaa
push
or
cmp
mov
sbb
pop
cmp
hlt
sub
mov
sub
movs
dec
scas
jno
cld
ret
call
pop
mov
out
data16
fsubp
fs
int
xor
cmps
cmc
add
jo
test
std
adc
pop
imul
shl
inc
mov
cmps
(bad)
pop
sub
lods
mov
cmp
mov
jne
inc
cld
cli
sbb
nop
pop
mov
cmp
aas
popf
mov
add
sar
test
iret
mov
clc
dec
mov
test
jae
mov
push
jno
rol
xor
push
mov
lock
mov
jmp
clc
cwde
mov
push
pushf
sub
pushf
inc
or
push
loopne
inc
or
pop
inc
in
(bad)
outs
aam
and
movs
cmp
shl
cmp
stc
cmp
xor
pop
test
lahf
mov
xor
push
das
mov
fs
mov
push
push
fld
dec
cmp
or
shl
in
in
into
add
inc
bound
loope
gs
mov
jmp
les
dec
rcl
iret
popa
push
test
std
call
push
jne
pop
mov
icebp
push
retf
(bad)
pop
xchg
xor
stos
sub
arpl
sbb
xchg
imul
js
cld
adc
xchg
and
dec
rcr
jecxz
inc
mov
push
mov
cmps
imul
outs
cld
call
xor
out
or
pop
xor
sub
clc
stc
aad
xor
aam
adc
mov
jns
in
retf
iret
movs
sub
neg
dec
ret
xchg
cmp
cli
push
pop
and
pop
pop
dec
stos
fcom
cmps
test
outs
xchg
(bad)
adc
mov
ficomp
mov
jg
mov
mov
jmp
mov
stos
push
xchg
jns
cld
or
aam
xchg
xchg
push
stos
mov
mov
dec
imul
and
xor
fsubr
(bad)
or
ins
fimul
and
jne
jo
xor
shr
lods
les
pop
mov
pop
addr16
ss
aad
push
adc
mov
push
cdq
mul
ins
mov
pop
adc
sbb
in
scas
xor
xor
call
(bad)
les
shl
call
push
xor
nop
and
dec
dec
pop
ss
lock
fs
lock
inc
inc
xchg
xchg
cs
or
das
mov
in
pop
or
sbb
fwait
imul
cmp
movs
loopne
dec
cmp
mov
fs
movs
dec
je
add
in
xchg
(bad)
sub
shr
pop
pushf
xor
mov
inc
mov
push
xor
jecxz
dec
std
mov
pop
cwde
push
sub
es
mov
sar
push
mov
xor
lock
ss
or
popa
ror
mov
dec
outs
(bad)
pop
push
xchg
mov
retf
std
inc
mov
mov
inc
mov
push
sub
addr16
scas
push
jp
pop
xor
rcr
bound
adc
fidiv
std
sub
outs
xchg
jmp
jae
rcr
sub
lods
pop
pusha
pop
js
enter
sbb
pusha
push
sub
sub
pop
(bad)
lods
dec
js
inc
mov
mov
mov
push
inc
xchg
pop
movs
cmp
fisub
(bad)
stos
ror
lea
mov
mov
push
mov
or
mov
cwde
xor
push
push
repz
mov
xchg
mov
adc
pop
adc
and
add
call
popa
mov
popf
push
retf
pop
push
inc
stc
daa
aam
iret
std
add
or
into
jb
cmp
cwde
or
dec
sar
xlat
mov
into
out
in
adc
es
push
sti
imul
nop
popf
pusha
fcom
fcom
jns
add
push
cwde
mov
movs
pop
sti
sub
pop
and
xchg
xchg
jecxz
and
les
shr
arpl
inc
xor
dec
cmovg
add
outs
adc
fsubr
adc
add
mov
cmp
idiv
add
push
or
fxch
add
jg
mov
inc
jecxz
mov
dec
fstp
das
jecxz
add
inc
cmp
jmp
test
lods
mov
dec
mov
inc
lock
data16
loope
jo
cdq
mov
cmp
dec
int
fmul
dec
addr16
leave
push
xchg
inc
in
das
pop
jl
pop
out
jmp
imul
cmps
mov
ds
test
movs
mov
shl
pop
adc
test
shl
mov
xchg
ret
shr
out
dec
test
cmps
loop
adc
aad
inc
push
test
adc
sub
std
scas
sub
cmc
fistp
pop
call
adc
jge
cwde
(bad)
and
iret
mov
xchg
xchg
cs
adc
popa
outs
daa
hlt
push
cmp
pop
jne
test
mov
pusha
mov
icebp
inc
xor
pop
push
addr16
int
push
lods
mov
xor
xchg
cmp
repnz
fs
(bad)
jne
outs
pushf
jb
dec
inc
sub
aas
add
lahf
arpl
or
add
pusha
dec
mov
adc
xchg
push
xlat
mov
imul
rcl
jge
loopne
xor
mov
jp
ja
jge
cmps
arpl
xor
sub
sbb
mov
inc
cs
or
mov
inc
push
push
sti
mov
(bad)
cmps
cmp
xchg
mov
inc
out
test
jl
jbe
push
movs
(bad)
or
and
leave
loopne
les
addr16
cmp
add
idiv
xor
lea
push
popa
fmulp
adc
push
or
fdivr
lods
cmps
xchg
or
jg
das
and
aas
lods
fucom
sub
sbb
ins
push
sub
xchg
sbb
dec
jge
pop
test
mov
ss
loope
pop
rcl
mov
retf
xchg
std
movs
xchg
shl
in
retf
shr
lds
or
push
iret
imul
pop
stos
outs
xchg
rol
xchg
add
inc
lods
ret
sti
loope
in
ja
ins
popa
inc
jae
jb
push
xchg
push
sub
sub
shr
mov
repz
je
scas
push
daa
icebp
das
test
(bad)
sub
mov
xor
in
sti
add
(bad)
sbb
std
xor
push
stos
scas
pop
call
(bad)
pop
inc
mov
xchg
jmp
mov
in
call
xlat
pop
aas
or
or
movs
push
inc
ja
rol
addr16
inc
dec
mov
sbb
addr16
cld
loopne
pop
cmp
sbb
adc
and
lahf
jne
jmp
in
add
data16
pop
cdq
jg
push
loope
push
ds
dec
lea
push
jo
lock
mov
push
jb
sub
div
sub
sbb
aad
jl
ja
xor
xchg
fsubp
pop
push
push
sahf
addr16
jns
ret
sub
or
ja
inc
push
xor
lahf
stc
cmps
pop
test
loopne
mov
mov
(bad)
hlt
pop
rcr
stos
int3
rol
mov
or
jl
ja
mov
jl
je
or
sbb
cmp
rcr
outs
rol
repnz
fadd
fs
and
popa
std
mov
aas
pop
lea
dec
sbb
fstenv
mov
out
or
xchg
hlt
daa
mov
arpl
int3
and
(bad)
psubd
or
sahf
inc
in
add
mov
test
pop
pop
fxtract
pop
jmp
xchg
or
fisub
push
fisubr
js
test
call
xor
and
imul
or
push
loopne
pop
dec
and
mov
xor
inc
shl
cwde
fcmovnbe
in
sbb
das
xchg
aam
fmul
dec
int3
cmp
cmp
xor
fistp
pop
adc
push
jg
adc
xor
and
or
je
and
scas
xor
fcom
mov
mov
retf
cs
xor
or
dec
pop
leave
push
mov
sbb
call
in
jbe
stos
push
ror
cmps
fiadd
sbb
pop
in
ja
jecxz
xchg
push
test
push
int3
jl
mov
mov
pop
outs
add
dec
enter
and
cmp
imul
(bad)
mov
sbb
add
cmc
inc
loope
xor
popa
mov
cmc
inc
cmc
pop
mov
ss
xchg
pop
cmp
fdivr
or
rcl
retf
(bad)
pop
movs
imul
cdq
dec
js
fisttp
adc
and
sub
add
cmp
pusha
in
mov
enter
inc
in
rol
xor
mov
rcl
fsubr
sub
jne
inc
inc
cmp
mov
mov
fnsetpm(287
cld
mov
push
ficomp
mov
addr16
or
daa
lock
add
ja
in
mov
xchg
mov
xchg
or
not
stos
mov
mov
call
shr
mov
xor
aad
cli
dec
lea
retf
enter
mov
es
sub
inc
repz
fmul
jb
in
pop
dec
jmp
enter
or
adc
xor
dec
outs
int
mov
int
mov
js
loop
or
pop
les
fcmove
out
popf
(bad)
rcr
shl
add
rcr
xor
icebp
(bad)
movs
cs
dec
mov
call
mul
xchg
fwait
pop
rcr
fisttp
or
sub
xor
outs
mov
jae
shl
adc
mov
loop
adc
cmps
jno
jae
mov
jb
push
mov
adc
adc
pop
push
jo
cmc
jns
adc
and
(bad)
mov
sub
cmp
mov
jmp
retf
cs
jmp
cmp
jae
jo
test
or
jns
fsubr
lock
adc
dec
stos
push
(bad)
cld
in
sbb
gs
mov
push
push
sbb
outs
fs
xor
mov
test
pop
sbb
lahf
test
clc
dec
pushf
dec
sti
ret
out
sub
sbb
shl
aaa
icebp
dec
add
sbb
iret
jecxz
jmp
sar
mov
out
retf
sti
sar
xor
imul
shl
fild
jns
jmp
lock
cmp
(bad)
sub
sub
add
out
fwait
(bad)
jmp
or
jge
and
cdq
jl
cmp
adc
mov
into
idiv
out
movs
push
sbb
outs
jns
(bad)
out
push
xchg
mul
shl
test
push
push
mov
push
popf
sub
xor
inc
lods
imul
cmp
and
mov
sbb
jp
bound
fwait
push
in
cmpxchg
sbb
jns
test
lea
js
xchg
int
movs
in
jl
push
in
push
jne
mov
or
xor
imul
fcmovnbe
inc
and
outs
je
jnp
sbb
arpl
dec
cmp
jecxz
dec
push
jle
and
sbb
outs
mov
and
jb
adc
push
inc
fbstp
adc
xchg
(bad)
les
mov
pop
sbb
lods
retf
shr
xor
xchg
mov
jae
push
into
pop
leave
mov
outs
mov
data16
mov
fdiv
xchg
arpl
lods
add
jb
push
aaa
loop
cmp
sahf
int3
cmp
add
test
xchg
loopne
inc
bound
xor
jbe
clc
(bad)
cmp
sahf
inc
or
lea
sub
mov
jmp
dec
leave
jmp
imul
rcr
cmp
mov
out
cmp
(bad)
ficomp
add
cmp
(bad)
and
jecxz
push
jecxz
mov
stos
inc
jle
(bad)
lods
jmp
sub
movs
ss
mov
mov
bound
cmc
or
into
or
mov
jne
ins
xchg
jmp
ret
clc
leave
int
jle
push
(bad)
int
jae
fistp
jp
cwde
sub
cmp
into
xchg
mov
mov
mov
cmp
mov
fistp
cmp
mov
mov
jp
mov
cdq
repz
fs
gs
mov
mov
sub
dec
rol
retf
out
inc
aaa
ja
sbb
jecxz
mov
mov
div
push
cli
inc
xchg
jae
push
dec
daa
and
icebp
sub
(bad)
jge
out
ja
mov
out
xchg
adc
stc
xchg
mov
lds
repnz
or
pushf
cwde
daa
dec
pop
rcl
pop
test
scas
stc
mov
dec
add
xchg
stos
cmc
xchg
cmps
cmps
sub
lea
dec
mov
xor
mov
xor
into
jmp
jecxz
push
mov
sbb
repz
emms
mov
bound
mov
jge
sub
sbb
pop
jmp
dec
xchg
cmps
push
cld
sbb
jne
in
mov
daa
dec
pop
(bad)
bound
(bad)
fnstcw
dec
mov
add
xchg
cli
(bad)
cmp
jp
push
loop
jne
and
and
shl
and
das
into
jno
ror
sbb
push
fdivr
fidivr
lods
lods
jne
(bad)
nop
aaa
mov
or
outs
add
bound
push
push
mul
loope
adc
repnz
sub
xlat
cli
imul
mov
push
(bad)
imul
fcom
ds
into
and
shl
inc
and
push
movs
sbb
loope
mov
popf
inc
iret
daa
stos
xor
into
daa
stos
mov
ja
add
xchg
mov
inc
retf
add
loopne
or
or
cmps
jmp
and
or
gs
ins
(bad)
and
add
mov
leave
ins
std
jecxz
add
test
mov
cs
sub
stos
(bad)
cli
mov
pop
or
mov
lods
xor
sub
cmp
fdiv
jo
neg
cmp
fisttp
inc
cwde
ficomp
dec
dec
shl
push
movs
pop
cdq
int3
sub
jbe
cmc
mov
test
jbe
xchg
mov
scas
out
xchg
jno
imul
adc
xchg
test
ja
jne
mov
adc
pop
es
pop
cs
push
scas
repnz
sub
and
repnz
mov
fwait
sar
mov
cmp
or
xor
sti
or
mov
jl
in
or
pop
ss
(bad)
int
or
retf
push
and
or
push
sbb
les
scas
cmps
movs
test
sub
(bad)
push
mov
cmp
outs
push
int3
mov
outs
push
dec
shl
inc
mov
push
test
gs
aad
(bad)
mov
inc
pushw
out
mov
fsub
jo
mov
pop
jae
xchg
adc
pop
aas
(bad)
(bad)
dec
push
jecxz
cmp
fndisi(8087
test
sub
arpl
or
gs
xlat
sbb
out
or
cmc
jns
out
(bad)
jne
add
add
push
retf
xchg
in
jmp
jl
sub
push
out
jmp
in
mov
sbb
ret
pop
add
stc
(bad)
pop
nop
pop
pop
mov
(bad)
out
cs
imul
rol
dec
push
mov
jecxz
xor
inc
mov
adc
bound
lock
fdiv
pop
data16
and
enter
sub
int
mov
popa
cli
or
add
movs
(bad)
iret
ficomp
mov
or
inc
ins
(bad)
xchg
fst
out
cdq
sbb
loope
xchg
cdq
xchg
cmp
cmp
sub
std
ss
mov
lods
pop
mov
jp
sahf
or
xchg
mov
fistp
mov
xlat
(bad)
cmp
int
inc
repnz
fimul
or
stos
inc
fucomi
mov
xchg
push
rcl
mov
push
and
cmp
sti
adc
pop
mov
ror
mov
test
cmc
arpl
fwait
cmp
addr16
int3
adc
pop
(bad)
dec
lods
push
fsubr
mov
mov
adc
pop
shl
push
rol
inc
pop
adc
scas
clc
push
push
test
cli
outs
adc
nop
dec
rcl
and
jmp
cdq
xchg
pop
mov
pop
jecxz
arpl
push
push
retf
sar
mov
adc
dec
loope
and
add
push
sti
lods
xor
push
jo
adc
into
adc
popa
and
cmc
(bad)
pop
inc
adc
dec
jg
enter
(bad)
aam
leave
adc
rol
jbe
(bad)
ret
mov
es
fwait
es
clc
and
scas
mov
mov
xlat
shl
dec
fwait
in
dec
lea
adc
inc
es
and
rol
jae
add
xor
jno
shr
xchg
add
cmp
pop
push
cld
adc
push
cmp
mov
xchg
xor
into
test
pop
xor
push
adc
xor
sahf
jge
fdivr
aaa
into
jp
std
mov
mov
sbb
(bad)
repnz
shl
jns
(bad)
into
jbe
fist
sbb
jl
in
or
ror
cmc
je
cmp
dec
inc
(bad)
xchg
mov
jp
mov
in
and
push
inc
mov
iret
cmp
sbb
dec
sti
aad
jmp
jg
(bad)
sbb
(bad)
push
and
imul
dec
je
cmps
push
xor
mov
mov
cmp
push
mov
xrelease
fnstsw
and
popf
mov
call
jbe
les
mov
mov
sub
mov
lods
bound
inc
daa
and
dec
inc
pop
dec
lods
dec
out
sub
imul
or
mov
add
mov
sbb
data16
dec
lock
sar
jmp
das
push
jbe
test
mov
sbb
mov
fs
dec
inc
fmul
int3
in
into
mov
cmp
pop
enter
maskmovq
idiv
pusha
xor
or
and
sub
lea
dec
ret
push
sbb
cmc
sti
ret
imul
push
mov
lds
mov
mov
mov
or
pop
sub
int
jmp
and
inc
aas
mov
inc
fsub
mov
(bad)
retf
iret
push
arpl
xlat
jmp
adc
mov
push
cvttps2pi
in
push
sub
jns
mov
mov
das
or
dec
and
mov
outs
repz
xor
push
fwait
mov
sbb
sbb
jmp
sbb
jno
aad
mov
loop
sahf
mov
cmp
jno
adc
pop
shl
jmp
sbb
mov
inc
retf
xor
(bad)
retf
outs
mov
xchg
pop
out
ds
js
mov
data16
out
pop
es
lds
pop
xchg
lods
fstp
arpl
in
out
stos
sub
xchg
or
fld
dec
ds
(bad)
sti
xchg
call
imul
add
leave
sbb
mov
mov
or
dec
gs
cmps
lods
adc
and
push
jno
nop
out
jg
mov
dec
xchg
in
and
movs
xchg
inc
inc
push
pop
sti
pop
pop
push
and
int3
cmps
jmp
jl
jae
shl
sbb
dec
call
jae
sahf
inc
dec
sbb
jmp
xor
sahf
(bad)
adc
out
push
shr
or
out
shl
arpl
and
fistp
cdq
or
in
pop
dec
jb
loope
mov
movs
push
out
gs
mov
mov
test
out
dec
inc
add
loopne
add
call
cmp
mov
sbb
stos
and
mov
inc
adc
sub
bound
cwde
das
jg
pop
in
sbb
mov
(bad)
inc
fimul
aad
sub
pusha
mov
sbb
add
outs
inc
mov
add
daa
leave
outs
jecxz
jns
cs
cdq
dec
mov
xchg
jmp
xchg
push
mov
ss
dec
xor
dec
push
push
pop
arpl
mov
rdpmc
add
arpl
xor
inc
jnp
mov
outs
inc
(bad)
cmp
into
mov
mov
cs
enter
jo
aas
xor
int3
and
ret
sub
adc
adc
inc
test
pop
add
cmps
into
mov
mov
inc
jns
jmp
mov
js
shl
pop
jo
ss
imul
push
fisub
mov
in
or
xor
clc
mov
jo
mov
mul
aaa
addr16
scas
pop
out
pop
imul
mov
jae
push
or
ss
(bad)
in
jle
pop
(bad)
shl
mov
jne
pop
hlt
inc
and
pusha
and
sbb
mov
clc
sub
call
mov
in
jg
cld
push
nop
les
ins
das
test
push
pop
xor
and
inc
neg
cli
jbe
(bad)
jb
mov
cdq
push
mov
cmp
mov
mov
add
(bad)
cmp
outs
pop
cmc
cwde
fdivr
(bad)
jp
mov
div
mov
ret
inc
inc
xchg
test
dec
xor
ret
jno
adc
xchg
xor
pushf
jbe
sub
add
lock
mov
(bad)
hlt
sub
push
mov
mov
test
(bad)
lds
cld
into
and
pop
and
cmp
fs
imul
lea
dec
ja
cmp
pusha
inc
cmp
push
arpl
cmp
movs
lss
std
test
sub
test
sbb
dec
pushf
cmc
ins
fdivr
pop
mov
aas
(bad)
stos
jl
(bad)
dec
stos
inc
cmp
stos
pop
xor
push
ja
fimul
push
push
dec
cmp
inc
sub
fmul
mov
scas
inc
loopne
cmps
push
arpl
hlt
and
rcr
imul
neg
sbb
sbb
sbb
inc
push
xchg
cmp
cdq
push
inc
xor
cmp
xor
jp
lea
mov
xor
ret
mov
scas
cmps
shl
mov
gs
ins
sub
lods
test
call
dec
lods
ds
enter
dec
loope
pop
xchg
pop
sub
dec
lock
dec
push
xchg
dec
jg
retf
mov
outs
and
aas
xchg
lods
in
ja
add
repz
cmp
mov
repnz
push
inc
sahf
mov
jns
or
pusha
loopne
sti
test
ficomp
pop
cdq
bound
(bad)
fistp
or
cmps
mov
cwde
jbe
mov
lock
pop
pop
mov
dec
bound
out
cmp
push
xchg
lahf
or
movs
scas
pop
mov
xor
mov
jge
mov
mov
mov
std
(bad)
popf
scas
inc
or
sbb
and
mov
bswap
inc
mov
sbb
cmp
mov
jae
inc
inc
adc
cmp
stc
bound
jne
jnp
es
lods
pop
inc
xor
(bad)
ficom
mov
push
sub
int
cwde
push
retf
push
jmp
pop
imul
adc
mov
ud1
jp
mov
pop
inc
jecxz
sub
pop
and
dec
mov
fild
vpmacssdd
inc
lahf
push
bound
mov
mov
xchg
movs
inc
lea
iret
jp
loope
mov
push
out
outs
cmps
mov
jo
add
aad
adc
sub
outs
sbb
xchg
jle
adc
and
mov
icebp
fsubrp
inc
daa
cs
jl
scas
push
cmp
int3
sub
lods
mov
cmp
mov
hlt
mov
aaa
fld
in
sar
jo
adc
add
or
push
pcmpgtw
and
cmp
fidivr
mov
add
in
pusha
cli
inc
inc
je
and
retf
jl
repz
sub
cwde
push
dec
sub
outs
lock
js
adc
aad
sahf
cmps
das
int
ret
popa
daa
test
jge
popa
cli
and
push
sub
pop
rol
push
xchg
dec
cli
adc
call
pushf
cld
repnz
dec
mov
xchg
call
call
xor
in
pop
cmc
repz
ss
repz
and
jmp
fild
sub
pushw
aam
cwde
jbe
dec
jle
mov
in
jnp
ficomp
imul
add
add
popf
ja
inc
ds
stc
pop
dec
sar
dec
gs
xor
sub
cmc
mov
test
test
or
mov
mov
pop
out
jno
loop
outs
retf
sub
mov
sbb
sub
mov
or
xchg
adc
test
sub
xor
in
mov
jo
jnp
add
ins
sub
imul
sub
mov
push
mov
loope
cdq
push
xchg
ja
(bad)
jg
lea
mov
inc
inc
jne
dec
push
pusha
pop
adc
sub
mov
sti
stc
outs
jno
retf
dec
enter
outs
mov
xor
shr
push
inc
xchg
loop
(bad)
je
or
int
sbb
bnd
jnp
jae
inc
ss
stos
sbb
add
mov
inc
cmp
hlt
popa
xchg
mov
add
jns
pop
sbb
daa
xor
mov
mov
clc
ins
pop
and
xchg
fild
cmps
or
daa
lahf
sub
add
jbe
mov
dec
pop
es
enter
adc
(bad)
cld
cmps
adc
mov
sbb
cwde
retf
sub
adc
aas
call
cmp
(bad)
fnstcw
inc
jle
div
sti
xor
(bad)
mov
sub
pop
test
lahf
jnp
(bad)
xchg
dec
movs
or
stc
je
inc
call
popf
push
mov
mov
push
enter
pop
jle
aaa
stc
and
popa
push
add
add
sub
fsubr
dec
adc
addr16
std
outs
push
xchg
out
das
popf
ror
(bad)
jb
dec
dec
pop
xor
neg
dec
lock
neg
out
into
arpl
mov
es
dec
repz
popa
and
stc
ror
arpl
jne
enter
mov
pop
shl
jge
adc
dec
ds
fucom
(bad)
mov
dec
dec
fwait
mov
add
movs
dec
push
es
and
dec
out
test
int3
test
int
pop
jmp
push
add
dec
out
xchg
push
call
fs
in
or
test
shl
dec
cmp
sar
jmp
sti
lods
dec
inc
cdq
popa
add
adc
and
jmp
cli
daa
sub
in
push
mov
pop
fwait
sbb
sbb
lock
mov
je
aad
cs
xchg
imul
mov
imul
sub
adc
clc
ins
xlat
jg
rcl
jnp
add
add
icebp
nop
fs
ins
dec
mov
dec
or
push
and
dec
lods
rcl
jmp
(bad)
sub
jns
sbb
in
pop
loop
in
leave
adc
mov
and
xchg
sbb
into
mov
mov
addr16
pop
cmp
dec
fdivr
mov
mov
jl
dec
mov
xor
jp
inc
aaa
out
mov
xchg
sbb
or
int3
push
cmp
dec
mov
add
or
mov
mov
xlat
jns
xchg
mov
loope
rcr
pop
mov
imul
xchg
mov
cmp
adc
in
mov
pop
dec
sub
scas
test
push
push
sub
jnp
dec
push
jecxz
inc
adc
cmp
adc
jae
test
das
sub
in
cmp
lahf
aas
add
jg
call
bound
push
and
adc
stos
pusha
push
push
mov
mov
(bad)
call
push
mov
push
(bad)
xor
dec
repz
and
lahf
fs
fdiv
pop
sbb
jl
jle
xchg
sub
out
ins
add
xchg
aad
xchg
lods
test
cmp
mov
mov
idiv
add
(bad)
aas
(bad)
jmp
push
adc
bound
imul
jp
movs
xlat
retf
pop
inc
movs
jne
adc
xor
popa
pusha
mov
jb
pop
xchg
dec
mov
out
out
mov
mov
std
je
or
cmp
mov
mov
mov
dec
pop
mov
mov
sbb
imul
pop
in
loopne
or
fbstp
inc
jbe
cwde
pop
jnp
pusha
test
fidiv
lock
shl
daa
aad
mov
fcmovne
or
jo
jno
xchg
push
ret
mov
cdq
cmp
xor
imul
jle
loope
dec
pop
xchg
imul
xor
sub
mov
push
aad
pop
fcmovu
mov
pop
sbb
enter
fnstsw
inc
dec
daa
fs
rol
and
idiv
loopne
cld
inc
jns
adc
outs
ret
test
mov
icebp
mov
addr16
pop
repnz
sub
add
pop
test
adc
hlt
(bad)
call
out
pop
imul
mov
cmp
or
dec
mov
das
into
mov
es
sub
pop
fsubr
sar
cli
inc
mov
retf
jbe
jl
inc
leave
scas
jg
inc
xor
jns
fldl2e
push
fsubrp
dec
aam
in
xchg
fdivr
test
or
call
sbb
or
cmp
xchg
movs
or
pop
sar
movs
rcr
nop
ds
inc
not
pop
stc
das
or
ins
ins
(bad)
loope
lods
imul
push
hlt
adc
cmp
jle
sbb
dec
add
jbe
rcr
adc
sbb
mov
lock
in
adc
ja
cmp
and
movs
and
ret
ret
in
ret
movs
cmc
inc
mov
ror
cmp
mov
inc
push
test
cwde
es
loop
mov
mov
jmp
rcl
mov
pop
mov
cmp
xor
push
mov
mov
in
xchg
inc
mov
inc
nop
adc
ret
sbb
xchg
mov
aas
sub
std
int3
push
cmc
je
or
out
jbe
xor
jb
jge
(bad)
adc
jmp
cmp
jle
shld
ret
or
mov
inc
or
into
(bad)
hlt
pop
push
out
lds
mov
adc
mov
pop
jb
push
and
jae
cmc
jle
test
mov
or
(bad)
daa
mov
adc
pusha
mov
jbe
xchg
pop
push
xor
popa
inc
pusha
mov
test
sahf
int3
clc
pop
cmp
in
jecxz
test
mov
mov
in
mov
lahf
adc
adc
leave
adc
lahf
mov
mov
in
and
dec
in
outs
movs
inc
sbb
sub
iret
scas
ins
and
fisttp
cmp
addr16
call
out
ror
pop
dec
retf
cmps
mov
ret
rcr
dec
mov
rcr
adc
inc
jecxz
push
inc
add
sbb
outs
cdq
mov
outs
arpl
gs
cmp
retf
adc
popf
fst
out
movs
imul
or
(bad)
jno
mov
in
loop
push
rcl
(bad)
fst
jno
paddb
pop
mov
fisub
pop
and
sub
in
push
clc
js
sbb
jmp
push
cmp
ror
sub
cwde
dec
inc
add
mov
test
into
adc
pop
ss
pop
fcmovu
mov
pop
(bad)
repnz
mov
adc
call
ss
push
leave
jp
fcomp
inc
fwait
inc
pop
dec
pop
leave
add
cmc
clc
cmp
out
mov
jae
lock
adc
lods
add
dec
mov
mov
lods
and
call
xchg
lods
dec
lahf
cmp
pop
sahf
pop
mov
or
data16
and
hlt
dec
pop
mov
push
push
mov
mov
dec
push
ins
push
pop
cmc
xchg
cld
cmc
inc
dec
and
push
sbb
and
in
daa
ins
outs
xchg
adc
cmps
mov
stos
xor
cmp
and
cmp
fwait
sub
(bad)
rol
xchg
imul
(bad)
leave
shl
pop
sti
repz
js
add
cmps
push
jl
(bad)
ds
fwait
xchg
push
pop
mov
out
sbb
inc
mov
jle
xchg
xlat
mov
call
adc
repnz
mov
mov
repz
add
scas
stos
inc
ja
(bad)
add
sub
mov
lahf
int
mov
gs
loop
ja
pusha
in
mov
cmps
pop
mov
retf
mov
call
cmps
je
push
xchg
or
cld
push
call
dec
in
popa
add
push
mul
mov
out
add
sbb
daa
and
inc
xchg
and
rcr
clc
mov
std
into
dec
rcl
cwde
xor
jle
dec
movs
push
cmp
jbe
push
pop
and
mov
ds
movaps
es
cmps
scas
fnsave
xor
cs
add
pop
popf
fimul
loope
scas
and
test
iret
sbb
inc
jbe
mov
and
ins
jmp
fldenv
rcr
lahf
dec
adc
retf
in
add
xor
loopne
add
mov
pop
dec
imul
jle
mov
sbb
jb
in
hlt
dec
sub
es
mov
and
jbe
xor
inc
ins
mov
hlt
(bad)
out
fcomp
cmp
inc
and
hlt
mov
adc
push
daa
sub
sbb
sub
fstp
push
add
dec
(bad)
psllw
mov
sti
xchg
test
jle
pop
xor
push
retf
neg
out
aas
mov
push
repnz
pop
push
mov
aam
fldz
cmp
cmp
inc
pop
lds
ror
xor
vcmpss
call
mov
addr16
daa
mov
lods
add
sub
or
sub
inc
add
cs
mov
xchg
test
mov
xchg
add
pop
adc
xlat
scas
je
fs
jmp
enter
retf
cmp
aas
pop
not
fs
ins
sbb
xor
test
jmp
lods
sub
mov
or
(bad)
push
jo
shl
fstp
stos
call
arpl
jbe
inc
repz
xlat
add
jecxz
cmps
jmp
movsx
shl
or
out
sbb
inc
pushf
mov
jo
icebp
or
mov
test
retf
mov
js
dec
mov
repnz
das
cmp
fmul
sahf
shl
iret
add
inc
sub
jmp
pop
cmp
sbb
cdq
push
push
loopne
push
sbb
loop
or
push
fisubr
cmc
outs
mov
push
(bad)
stos
cmp
xchg
cmps
add
sbb
stos
sub
mov
outs
aam
gs
retf
xchg
inc
push
fidiv
aaa
std
adc
bound
leave
dec
xor
adc
push
scas
aam
mov
xor
mov
jnp
xlat
push
mov
push
test
test
and
je
call
mov
jo
mov
shl
in
iret
jno
in
mov
ret
scas
dec
add
add
sbb
aam
aad
push
dec
sub
jns
pop
aas
test
cli
or
push
mov
bnd
cmps
mov
out
daa
jmp
push
test
lods
ja
(bad)
(bad)
cmc
jo
dec
add
mov
dec
es
push
jl
scas
add
mov
mov
push
push
add
stos
mov
or
jb
sub
stos
sub
scas
pusha
push
add
(bad)
xor
mov
push
jo
xchg
mov
mov
push
inc
push
xchg
mov
das
push
fwait
and
repnz
pushf
mov
mov
pop
jbe
pop
je
or
cdq
mov
dec
stos
cmp
jno
pop
ror
inc
and
in
(bad)
movs
xchg
jle
mov
inc
sub
xlat
cmps
mov
outs
nop
inc
loopne
shl
jmp
fldcw
mov
shr
cmps
cmc
adc
xchg
push
stos
jle
sub
loope
shl
or
ins
dec
adc
jno
jge
lahf
jecxz
(bad)
xor
sub
loop
jnp
jecxz
imul
jns
pop
push
mov
add
rcr
lock
mov
add
bound
jbe
not
lea
sub
sub
ja
mov
mov
scas
cmp
sbb
imul
push
sub
inc
test
xor
jne
inc
out
mov
(bad)
in
jne
fwait
or
mov
mov
das
lahf
add
cmp
clc
push
std
mov
add
rcl
mov
push
inc
(bad)
stos
jmp
and
gs
pushf
inc
inc
sbb
fcom
jmp
mov
sbb
cmp
ret
repz
adc
push
mov
mov
or
fdiv
outs
int3
push
jne
scas
pop
jl
js
fwait
int3
or
mov
cmp
push
(bad)
imul
repnz
ret
pop
adc
xor
iret
mov
cmp
dec
arpl
shr
popa
jl
ror
xchg
clc
int
inc
push
stos
mov
ja
xor
out
scas
out
inc
and
scas
xlat
xor
xchg
outs
dec
cmp
mov
test
jl
daa
je
pop
xchg
popf
test
cmp
hlt
fidivr
outs
jecxz
pop
jno
call
add
add
movs
cmps
mov
fstp
or
arpl
xor
stos
dec
xor
inc
mov
ins
sbb
ret
and
or
sub
adc
rcr
inc
dec
mov
cmc
inc
ins
into
icebp
push
test
mov
push
int3
fdiv
les
imul
mov
sbb
inc
mov
pop
test
and
xor
sub
les
mov
jecxz
inc
jle
xchg
dec
fdiv
sub
add
jecxz
jecxz
xchg
push
push
movs
dec
movs
sub
mov
shl
ds
shl
nop
cmps
mov
movs
(bad)
stos
sbb
mov
and
(bad)
jl
out
xor
clc
mov
fdivr
sbb
jge
pop
xor
adc
idiv
adc
iret
stos
inc
idiv
push
repz
mov
push
ret
outs
mov
lea
stc
jle
dec
inc
adc
jmp
jno
loopne
pop
cmp
sbb
jl
pop
daa
cmp
out
movs
dec
cmc
jmp
or
mov
dec
icebp
push
xchg
xlat
xchg
xchg
push
test
inc
pop
and
mov
(bad)
or
ins
or
std
mov
outs
jns
jge
pop
call
addr16
xlat
push
js
adc
jmp
jae
xor
jmp
jle
xchg
mov
and
loopne
push
push
icebp
jne
push
mov
adc
add
adc
adc
ja
mov
into
test
add
sub
bound
jno
rcl
sub
mov
in
daa
pop
mov
or
inc
mov
nop
loope
movs
xor
and
jo
je
push
sbb
(bad)
mov
or
(bad)
retf
mov
cmp
dec
sbb
in
sbb
jge
xor
push
adc
idiv
mov
sbb
xchg
push
jb
cs
xchg
cmps
dec
mov
sbb
sbb
pop
pop
js
mov
test
push
imul
or
mov
scas
or
(bad)
outs
pop
push
les
test
popa
mov
outs
dec
ror
cmp
add
or
call
adc
sub
cmps
hlt
xchg
aam
gs
and
fwait
add
xchg
fiadd
arpl
fbstp
or
cmp
jns
jle
hlt
jge
push
pop
adc
sbb
fwait
sbb
mov
push
xor
pushf
cmp
mov
imul
pop
push
movs
out
jp
push
mov
fcom
jge
out
dec
cmp
pop
mov
cdq
add
jg
retf
imul
and
and
idiv
cld
fstp
out
test
push
jae
out
push
sub
xor
cmp
mov
paddd
sub
dec
cwde
stc
or
mov
and
dec
not
xor
ror
stc
dec
push
fimul
push
fs
cmp
in
repnz
adc
dec
sub
outs
(bad)
sub
jnp
ror
mov
and
mov
push
repz
push
shr
inc
call
out
out
add
popa
sub
cmps
mov
imul
or
push
mov
sbb
xchg
or
sahf
cmp
sti
stos
mov
jmp
push
stos
sub
loope
dec
xor
out
lea
shr
test
and
push
leave
(bad)
cmp
dec
jne
js
mov
adc
fisub
inc
dec
in
push
jg
pop
or
jmp
add
inc
enter
cmp
pusha
aam
sahf
inc
call
stc
xor
mov
lock
xchg
data16
jo
inc
rcr
icebp
inc
sbb
adc
xchg
or
cmp
or
xchg
lock
fdivr
jmp
ret
sub
pop
pop
fsubr
jg
mov
mov
(bad)
inc
out
(bad)
dec
mov
out
push
cdq
cmp
push
retf
xlat
(bad)
(bad)
aas
cmp
xchg
jo
and
ficom
adc
cdq
retf
ror
or
mov
sbb
(bad)
ins
push
repnz
dec
in
sbb
into
xor
das
add
mov
fwait
adc
jbe
add
repnz
jnp
cmp
in
xor
xchg
pusha
js
sbb
sbb
ins
mov
fs
loopne
ins
mov
adc
imul
arpl
dec
mov
fsubp
les
retf
xor
ss
popa
(bad)
nop
sub
mov
add
(bad)
push
or
mov
fsubr
out
mov
pop
(bad)
sbb
mov
in
scas
pop
mov
dec
ins
or
leave
cli
push
cmp
or
sar
int
and
cwde
or
xor
mov
and
pop
mov
jbe
rcr
movs
(bad)
(bad)
xchg
bound
iret
dec
push
test
(bad)
sub
lds
jnp
fistp
das
fild
aad
pop
xchg
fwait
dec
repnz
out
ins
test
push
sti
std
clc
mov
fcmovnbe
push
pop
xor
jp
cld
and
loop
cmps
push
pusha
jne
daa
xchg
pop
cs
mov
push
test
pusha
jns
cmp
aas
mov
xchg
lock
aaa
pop
in
mov
cmp
push
js
aam
into
enter
(bad)
aam
data16
lea
retf
out
or
pop
sbb
mov
movs
inc
sub
cmp
repz
test
cld
adc
fadd
cmp
aaa
ins
mov
inc
xchg
div
inc
lahf
cmp
jno
sub
fwait
test
xchg
mov
adc
adc
(bad)
fwait
ja
mov
sub
call
sbb
xchg
inc
add
mov
lods
not
xchg
pop
xchg
mov
scas
or
imul
pusha
xor
inc
pop
mov
retf
lock
cmc
mov
scas
dec
cdq
in
loopne
jmp
push
inc
lea
pop
(bad)
aas
outs
mul
sub
or
out
lock
push
inc
pop
repnz
inc
(bad)
dec
xchg
movs
or
sbb
pop
push
mov
out
lahf
sti
dec
dec
js
sbb
cmp
test
sbb
cmp
retf
pop
jne
push
cmp
cli
sub
shl
sub
je
dec
adc
pop
dec
test
hlt
in
daa
adc
jecxz
sbb
repnz
pop
frstor
xchg
sub
cmp
dec
push
iret
mov
or
fmulp
inc
pop
push
data16
sbb
retf
fimul
fs
and
xchg
arpl
cmp
pop
aad
push
cmp
cmc
test
jno
push
test
mov
sub
lods
shl
inc
add
inc
ss
pop
loopne
retf
jmp
out
rcl
dec
sbb
or
repnz
icebp
por
stos
adc
sti
cvtdq2ps
xchg
aam
jmp
retf
jno
push
push
daa
jg
xchg
sub
ficomp
jle
mov
adc
retf
cwde
mov
pop
sub
or
test
inc
jecxz
fucomp
and
mov
push
xchg
clc
jg
cld
cs
stos
sbb
add
fsubr
das
(bad)
not
and
xchg
dec
bound
inc
mov
lock
dec
mov
fdiv
and
push
cmp
sar
(bad)
stos
xor
test
in
mov
and
mov
movs
outs
adc
int
xor
fidiv
cwde
mov
shl
adc
push
sbb
(bad)
xchg
push
hlt
cmp
add
xchg
into
inc
adc
in
mov
repz
mov
loopne
jge
ins
adc
test
addr16
push
dec
adc
mov
daa
jl
nop
push
call
scas
bound
in
sbb
pushf
and
stc
or
inc
push
xlat
sub
stos
fstp
xchg
stos
retf
or
xor
stc
push
ror
loope
mov
mov
inc
add
bound
retf
add
lods
push
scas
out
push
sbb
xchg
(bad)
sub
jnp
fidivr
sar
mov
mov
or
ss
dec
inc
pushf
iret
mov
xlat
pushf
nop
dec
and
dec
jo
and
fcomp
mov
mov
xchg
call
pop
retf
sar
xchg
outs
mov
cmp
addr16
fimul
in
inc
cmp
ja
mov
repz
(bad)
push
inc
jnp
es
ret
inc
add
push
dec
sub
push
sub
arpl
sbb
cwde
jno
lahf
fwait
mov
aas
idiv
inc
and
aad
js
mov
push
daa
jmp
jns
inc
sbb
test
mov
daa
mov
push
jns
jnp
call
xor
fldenv
jge
jns
gs
jge
test
xor
out
ds
xor
pushf
adc
ins
(bad)
out
cmp
mov
adc
and
fist
lea
xchg
or
movs
lock
aad
add
sbb
retf
cmp
push
jmp
pop
out
xchg
add
xchg
xchg
cmp
nop
jmp
mov
pop
jae
push
push
add
pop
sbb
mov
aas
imul
test
je
fbld
mov
dec
test
neg
in
pusha
int3
mov
inc
cmc
aaa
mov
arpl
dec
and
lods
inc
int
pop
inc
cmp
in
and
out
sub
stc
sahf
out
push
inc
and
hlt
jne
push
xchg
call
mov
xchg
(bad)
pop
dec
add
push
into
jecxz
mov
mov
gs
mov
pushf
jmp
jbe
xor
and
pop
inc
call
mov
shl
adc
xchg
jp
mov
and
call
and
cmps
mov
loope
jmp
push
aam
mov
scas
arpl
mov
mov
sahf
stos
sbb
aad
mov
push
push
dec
loop
pop
movs
pop
push
mov
fsub
iret
sti
or
fmul
jnp
fistp
sbb
pop
mov
pop
scas
je
pop
imul
(bad)
xor
neg
sub
movs
add
adc
sub
sbb
sbb
sub
sahf
cmp
adc
fisubr
fsub
rol
(bad)
sub
(bad)
pop
and
dec
pop
dec
or
cmp
fwait
aad
in
mov
or
sbb
sub
out
call
sub
sbb
add
jmp
(bad)
fs
inc
fild
fsub
and
scas
hlt
add
mov
inc
mov
lds
scas
mov
ficom
dec
cmp
add
rcr
push
mov
ins
or
jmp
dec
fimul
sbb
xor
sub
mov
repz
loopne
pop
pusha
xor
push
shl
sub
(bad)
inc
mov
js
sub
ret
pop
or
fs
push
enter
jmp
lock
loope
gs
mov
add
sub
inc
imul
or
setns
pop
clc
fisttp
mov
aam
inc
push
mov
sar
addr16
sub
pop
jnp
add
(bad)
sub
iret
cmp
out
jl
lea
test
xor
inc
xchg
add
sub
and
push
imul
xchg
fwait
xchg
dec
mov
xor
and
push
(bad)
sub
inc
cmps
loopne
ror
shr
cs
bound
xchg
push
adc
pop
xor
xor
arpl
xor
push
inc
cmp
outs
mov
fstp
fdivp
addr16
in
xchg
int
or
(bad)
jge
mov
cdq
mov
out
pop
fucomi
mov
jo
jl
or
movs
inc
cmp
push
and
sub
cmc
fidivr
xchg
dec
aas
add
outs
add
and
lock
ins
jmp
xchg
pop
mov
mov
mov
and
aad
pop
stos
pop
mov
scas
cs
icebp
aad
and
mov
jns
fsub
retf
lds
jmp
jmp
out
mov
dec
cdq
pop
sub
pop
sbb
add
outs
je
sti
jnp
push
pop
mov
xchg
jno
cmps
into
aad
cmp
xor
add
lods
mov
cmc
loope
mov
sbb
bound
in
push
out
sbb
ins
xor
xor
push
sbb
mov
loope
stos
jl
sbb
lock
std
cwde
mov
movs
inc
cmp
sti
repnz
test
push
ins
scas
stc
(bad)
call
push
dec
sar
cld
jle
xlat
bound
test
data16
jg
out
mov
xlat
bound
movs
adc
and
jne
cmp
pop
adc
jge
mov
mov
es
pop
je
jl
xchg
sti
and
xor
gs
(bad)
push
ds
mov
out
test
jb
and
imul
inc
or
fadd
pop
jmp
dec
sbb
data16
sub
mov
cmp
mov
and
aas
cmp
sahf
push
jecxz
push
pop
and
aad
pop
dec
jecxz
add
sbb
sub
(bad)
xor
(bad)
in
mov
lock
jle
dec
and
sub
xchg
fisub
std
arpl
sub
push
leave
in
mov
mov
clc
adc
add
cli
int
jg
sbb
mov
js
push
arpl
cwde
ud0
jmp
inc
or
push
push
push
das
dec
push
mov
mov
push
sub
push
sbb
mov
mov
add
push
and
xor
pop
or
jns
mov
shl
jb
pop
pushf
pop
inc
lea
pop
rcl
mov
scas
sub
jae
cmc
imul
inc
in
pop
test
add
mov
cld
and
pop
inc
xchg
sbb
sahf
mov
mov
call
adc
pushf
or
inc
cdq
(bad)
xlat
popf
xchg
or
daa
pop
pop
push
icebp
xor
fnstsw
mov
shr
(bad)
call
dec
out
and
cmp
and
sub
les
rcl
iret
cmp
or
gs
mov
popf
jge
outs
mov
and
pop
push
jb
arpl
dec
int3
and
fdecstp
cli
shr
cmps
push
push
imul
and
outs
in
mov
dec
or
sti
iret
loopne
push
(bad)
aam
adc
xor
inc
jns
arpl
das
dec
sub
jmp
outs
aaa
sar
loope
daa
pop
and
and
mov
adc
xor
dec
aas
cwde
xchg
mov
cld
push
add
js
sahf
je
cmp
add
sbb
xchg
mov
add
loope
das
shr
push
push
pop
in
enter
dec
daa
push
jb
dec
and
mov
xchg
cmps
push
jg
inc
inc
pop
ficomp
(bad)
aam
(bad)
sahf
mul
cmp
mov
and
jo
into
pop
aaa
pusha
sbb
adc
sbb
das
adc
repz
shr
push
pop
fwait
ds
loope
add
int
push
cmp
mov
retf
dec
jge
xchg
cmp
retf
lods
cmp
push
loope
sub
inc
push
aaa
mov
call
pop
aas
or
sub
leave
ror
lds
mov
or
jns
scas
pop
nop
popf
mov
std
xor
scas
mov
xchg
push
data16
outs
or
jne
pop
loop
mov
leave
scas
xchg
lds
mov
ja
adc
cmp
ds
icebp
bound
aad
fsubr
and
movs
cmp
cmp
add
fsub
pop
jnp
fs
pslld
xor
cmp
jbe
xchg
add
mov
addr16
push
add
push
add
pop
stos
leave
xor
scas
xchg
pop
lds
aas
cli
fs
pavgw
ret
mov
fnstsw
inc
cmp
inc
cmps
pop
pop
sbb
inc
pop
dec
sti
in
test
jge
fmul
sub
adc
mov
gs
sar
mov
jbe
and
adc
pop
lods
mov
cmp
cdq
pop
(bad)
xchg
out
in
xchg
rol
(bad)
mov
test
xor
inc
mov
stos
adc
jnp
imul
repz
pop
cmp
cmp
jne
cs
int
mov
jmp
pop
aaa
in
mov
ins
dec
xchg
lock
cld
mov
jecxz
out
sbb
(bad)
aad
int
movs
mov
repz
and
(bad)
pop
shl
sub
add
ret
mov
in
mov
cld
jns
ret
dec
mov
sbb
mov
fld
cmp
arpl
lds
in
shr
mov
xor
cs
jp
cli
retf
inc
addr16
lahf
ror
or
mov
shl
xor
push
xchg
add
inc
mov
loop
lds
into
add
mul
std
imul
mov
mov
push
in
jge
xchg
popa
rcr
jp
xor
nop
mov
ss
outs
rol
pop
retf
sub
cld
adc
outs
and
bnd
adc
mov
loop
push
mov
daa
pop
cmp
jae
fist
mov
dec
scas
xor
jno
dec
rol
jns
pop
sub
adc
scas
mov
cs
(bad)
jbe
sub
je
inc
jge
mov
xor
adc
sub
cli
(bad)
call
aam
loope
aaa
std
mov
push
mov
nop
adc
cmp
or
sub
pop
dec
mov
jbe
inc
mul
jecxz
dec
das
or
jne
(bad)
in
push
aaa
and
adc
add
frstor
popa
cmp
fwait
popa
push
ss
add
mov
test
mov
or
ret
xlat
sbb
pop
mov
dec
jp
stos
cmp
pop
xchg
and
fldcw
sysexit
push
push
mov
popf
sar
mov
loope
sub
push
cmps
adc
addr16
cmps
sbb
inc
push
cmovl
out
loope
fsubp
fs
scas
fstp
iret
sbb
push
mov
and
cmc
mov
cs
test
cmp
add
jl
mov
or
lahf
mov
mov
nop
push
or
leave
inc
pop
pop
bound
sub
xchg
outs
pop
add
sbb
mov
loopne
(bad)
sbb
cli
mov
xor
xchg
xor
inc
push
xchg
shr
mov
stos
std
test
xchg
dec
adc
imul
xchg
aad
fst
aas
inc
cmps
mov
xchg
icebp
cmp
push
ret
xor
cld
cmp
pop
dec
cld
sub
xchg
xchg
repz
xor
fiadd
cmp
and
fistp
pop
nop
jle
pop
pop
pop
pop
out
fsubr
in
fcmovb
lods
push
dec
imul
rcl
push
dec
cmc
dec
mov
in
ja
dec
fst
pusha
repz
sahf
pop
hlt
icebp
adc
call
(bad)
iret
call
int3
cs
ins
sbb
pop
je
mov
jo
cmps
movs
cmc
lods
sahf
mov
sub
cmp
lods
xor
push
dec
add
stc
xchg
outs
jno
imul
cmp
push
fild
stos
mov
mov
inc
popa
xlat
fld
jne
add
icebp
xor
mov
out
rcl
add
pop
in
fstp
pop
enter
adc
icebp
push
fdivr
retf
pop
fwait
sub
das
push
pop
mov
dec
fwait
lea
outs
mov
cmp
int
sbb
std
pop
pop
mov
push
cwde
push
bound
into
call
xchg
xchg
pop
mov
and
xchg
cmps
sbb
dec
or
shl
popf
mov
aam
xchg
pop
ins
lea
retf
std
jg
mov
leave
add
xor
fs
and
outs
sbb
and
cmp
(bad)
lahf
test
or
push
cmp
xlat
push
xchg
lock
xor
daa
add
adc
je
popw
mov
sub
mov
mov
xor
cli
mov
scas
mov
or
call
inc
mov
adc
cmp
shr
or
outs
pop
cmp
lahf
call
pop
gs
iret
lea
mov
test
scas
je
mov
and
jp
dec
pop
mov
out
adc
pop
loop
and
mov
fwait
arpl
mov
pop
xchg
test
mov
mov
push
test
jae
mov
sbb
vmovd
aad
pop
mov
and
mov
and
(bad)
retf
outs
adc
mov
push
pop
lea
sbb
sbb
and
dec
test
out
adc
mov
test
movs
add
jp
sbb
push
push
add
repnz
test
sub
or
aam
xor
sub
popa
adc
mov
(bad)
jmp
daa
mov
das
test
jp
ror
pop
into
in
cdq
dec
push
dec
adc
adc
sbb
xchg
out
hlt
add
add
mov
into
xchg
test
jns
mov
or
xchg
pop
push
cwde
not
(bad)
xchg
ficom
stc
les
mov
inc
mov
sbb
adc
push
rcr
in
sbb
mov
adc
xchg
popa
jg
pop
rol
das
jp
xchg
ret
movs
or
jmp
add
lea
add
test
loope
push
sub
sbb
sbb
pop
xor
dec
sbb
push
pop
stos
out
cld
jnp
and
imul
inc
stos
repz
jle
adc
or
loope
in
pop
push
adc
pop
dec
xor
out
mov
mov
pop
pop
(bad)
cmp
loope
jne
addr16
mov
mov
les
loopne
std
and
xor
mov
(bad)
es
or
(bad)
push
cld
xchg
xchg
push
jno
fld
and
sti
(bad)
cmps
mov
and
popa
xor
push
repnz
push
inc
arpl
xchg
cmc
jecxz
icebp
cld
mov
add
retf
mov
ins
jecxz
jnp
or
es
xor
adc
sbb
mov
xchg
adc
mov
retf
jns
xor
in
inc
shl
fdivp
out
jp
mov
les
outs
(bad)
jmp
enter
pop
test
ret
cmp
cmps
mov
lods
jl
pop
imul
les
push
(bad)
jmp
push
in
sub
call
pop
xchg
out
movs
push
fnstsw
repnz
add
ja
scas
xor
test
stos
bound
in
cld
mov
add
imul
mov
in
mov
xchg
xchg
and
out
ds
push
mov
xor
inc
(bad)
jl
mov
mov
lods
jle
pop
jb
leave
adc
pop
adc
add
pusha
xchg
popf
inc
rcr
pop
imul
loopne
xchg
lahf
aam
xlat
fstp
sub
xchg
xchg
cli
in
jg
fbstp
add
xor
(bad)
push
sbb
dec
fwait
push
jae
push
add
int3
push
ins
test
push
xchg
push
inc
call
in
test
dec
inc
adc
xchg
outs
cmp
sub
cmp
out
aas
fistp
xchg
add
sub
es
mov
add
jns
(bad)
xchg
dec
mov
xor
jmp
mov
sti
adc
(bad)
imul
cli
fisttp
(bad)
jae
daa
ss
mov
inc
inc
jmp
inc
mov
mov
inc
xlat
dec
repz
shl
push
outs
repnz
jle
sahf
aaa
sti
mov
pop
adc
cmps
cs
aaa
repnz
(bad)
inc
adc
stc
aas
or
mov
jmp
ds
jae
xor
cwde
repnz
pusha
mov
dec
scas
pop
pushf
leave
jmp
mov
jl
aaa
fdivr
jns
sar
retf
mov
dec
movs
shl
ins
mov
cmp
(bad)
aas
ins
int
cmp
outs
ins
aaa
rdtsc
mov
jno
popf
leave
cdq
sbb
imul
sbb
inc
cmp
jns
sbb
test
mov
test
adc
mov
mov
add
sahf
mov
je
loop
mov
push
pop
and
inc
jle
push
in
cmp
pop
mov
out
es
icebp
push
call
add
push
rcl
dec
mov
les
mov
xchg
adc
jmp
add
mov
pusha
out
push
and
cli
mov
fsubp
adc
dec
imul
inc
cmc
test
out
in
(bad)
loope
imul
mov
retf
movs
pop
jae
pop
addr16
das
cwde
(bad)
movs
inc
inc
xlat
push
xchg
jmp
test
mov
cld
pop
or
pushf
cmps
xlat
or
dec
xlat
cmp
sbb
jl
and
xor
test
ror
dec
mov
lock
sahf
and
idiv
out
cs
mov
movs
call
sub
in
mov
ret
or
int3
mov
cmc
retf
xor
xchg
xchg
or
repz
in
gs
or
mov
sbb
cld
inc
inc
xor
xor
and
out
(bad)
push
enter
mov
mov
popf
jno
xor
mov
pop
mul
imul
adc
add
sub
jns
pop
sub
sub
xor
mov
sbb
inc
or
lods
in
in
movs
sbb
shr
pop
cmp
and
jo
out
pop
loop
int3
out
je
test
ficom
dec
jo
jle
xchg
xchg
jle
inc
mov
pop
sar
idiv
xchg
das
inc
mov
xor
mov
stos
jge
cmp
enter
jg
addr16
ficom
mov
or
mov
aaa
hlt
jecxz
mov
xchg
loop
push
mov
cmp
push
out
inc
push
popf
pop
stc
cmps
int
(bad)
mov
js
adc
outs
or
push
addr16
mov
dec
and
dec
add
loop
pop
call
addr16
cmc
push
ja
dec
test
sbb
mov
sbb
dec
mov
sub
jnp
(bad)
or
enter
aad
retf
fimul
mov
xor
fcmovu
inc
dec
push
pop
fcomp
(bad)
int3
or
push
cmp
pushf
fadd
(bad)
sahf
lock
inc
out
jae
mov
lock
(bad)
pop
leave
aam
push
mov
leave
idiv
mov
shr
mov
sub
or
cmp
inc
and
mov
daa
sub
pop
(bad)
sub
xchg
mov
or
cmp
test
aas
pushf
adc
out
push
jae
rcl
fucom
mov
ret
lods
xchg
cmp
jp
fwait
sub
lea
mov
dec
shl
dec
into
pop
lock
in
ins
inc
add
push
or
pop
push
cmps
(bad)
lahf
aas
add
sbb
mov
adc
dec
cmps
or
cmp
jnp
(bad)
in
(bad)
shr
mov
jmp
jge
mov
shl
mov
pop
add
mov
(bad)
repnz
fidivr
push
ror
xchg
add
out
mov
sub
push
push
push
das
mov
sub
lds
xor
call
mov
scas
cdq
jbe
pop
mov
sub
xor
or
jns
sub
pop
jno
rcr
enter
push
xor
out
fisttp
pop
mov
aad
add
cmp
sub
cli
or
cmp
dec
jne
aam
adc
mov
push
idiv
add
jmp
iret
mov
pop
mov
in
(bad)
(bad)
push
es
idiv
enter
xchg
fstp
push
retf
ins
jl
add
retf
outs
or
repz
rol
lahf
fnstsw
push
mov
je
cmp
(bad)
adc
inc
push
data16
call
imul
jmp
dec
mov
add
jno
add
mov
test
xor
in
fstp
retf
sbb
push
xor
js
and
dec
fs
(bad)
aaa
neg
fild
xor
addr16
dec
push
push
aas
fst
mov
in
js
dec
outs
add
stc
int
or
mov
ins
leave
add
imul
xchg
in
inc
cwde
es
pop
lods
sub
shl
jns
pop
cmp
(bad)
imul
sub
rcl
xchg
rcl
sub
fisttp
fidivr
addr16
rol
mov
arpl
mov
lock
cmp
cmp
mov
jne
jmp
jle
and
cmps
sub
leave
xchg
(bad)
cmp
pop
rol
icebp
dec
fsincos
repz
jle
fsubr
outs
mov
loope
loope
rol
adc
pop
xor
ret
pop
dec
cmps
in
ins
lock
mov
cmp
ss
sbb
and
aam
dec
inc
enter
push
push
in
mov
sahf
add
mov
dec
mov
cmp
cli
sub
(bad)
loope
ja
dec
add
add
test
mov
cmp
mov
out
rcr
xchg
adc
jno
pop
out
es
aas
rcl
movs
add
push
jns
mov
jle
aad
int3
mov
lea
sbb
(bad)
out
ror
inc
push
int
shr
and
imul
sub
push
jp
(bad)
retf
xor
inc
pop
pop
retf
(bad)
(bad)
retf
jle
lods
mov
mov
xchg
and
in
jp
aad
and
or
mov
jmp
fnstcw
fisttp
mov
ja
into
cmps
sub
daa
fisub
rcr
dec
inc
lods
sub
cmp
jne
jecxz
imul
pop
mov
jmp
mov
repz
mov
xor
xor
jmp
dec
or
call
sub
jg
in
(bad)
dec
jb
dec
movs
fs
xchg
fst
shl
xchg
movs
imul
push
cmp
cmp
iret
sub
(bad)
shl
jmp
or
ins
dec
stos
scas
mov
shr
sub
out
mov
scas
in
stos
ror
cmp
jmp
mov
pop
mov
push
sbb
xor
xchg
out
adc
jmp
pop
inc
xor
into
sub
mov
(bad)
cmps
pop
int3
push
jl
or
sbb
lds
push
pop
std
dec
inc
inc
sub
ds
vmovhpd
mov
and
mov
cdq
sbb
mov
(bad)
jmp
das
jnp
sar
add
test
sar
repnz
cmp
shl
push
lds
dec
dec
nop
jo
loope
xor
repz
mov
loope
cs
sbb
mov
ror
pusha
popf
(bad)
push
cmp
(bad)
add
and
gs
jno
aas
sub
std
dec
sbb
mov
icebp
mov
jl
shl
push
xchg
jmp
call
lods
jmp
call
mov
pop
cmc
inc
psllq
out
repnz
leave
mov
pop
scas
inc
loop
mov
lahf
fst
pop
shl
mov
jae
dec
push
ss
(bad)
and
int
push
mov
out
add
lods
xchg
cmps
aaa
jp
mov
fidiv
rcl
out
pop
push
outs
adc
mov
xchg
dec
daa
dec
cmps
(bad)
sub
fs
inc
sbb
(bad)
jmp
mov
jle
jp
xchg
test
and
mov
out
out
mov
fiadd
sub
inc
hlt
xor
push
or
hlt
lods
inc
cmp
dec
movhps
xchg
or
call
mov
fild
sub
push
inc
or
jmp
dec
dec
das
dec
jl
fldcw
push
ins
ja
pop
fs
in
jmp
sbb
mov
adc
jns
dec
add
sbb
ror
push
das
call
xchg
add
pop
repz
lods
aad
je
ds
ja
dec
jmp
pop
call
dec
shr
adc
or
repnz
xor
test
and
arpl
mov
fucomi
iret
sub
ss
loop
cmp
cmp
inc
mov
push
mov
push
pop
or
int
add
outs
stc
scas
xor
mov
adc
mov
fimul
ret
push
jle
and
sub
fwait
call
sub
lods
ins
mov
inc
inc
mov
xchg
dec
daa
jnp
mov
movs
shl
mov
push
in
arpl
ficom
mov
add
sbb
cld
movs
call
cmp
pop
adc
adc
sbb
aas
lock
inc
and
and
and
ret
lods
pop
jmp
push
pop
add
sar
not
test
fs
mov
mov
or
icebp
lahf
fdiv
fwait
sar
xlat
push
shl
(bad)
and
test
xchg
repz
jle
xor
lock
ss
fs
test
and
clc
mov
lds
xchg
rcr
mov
fdiv
ja
pusha
icebp
test
popf
and
jb
cli
sub
test
or
ds
sbb
aas
aam
ins
jge
fsub
seto
xchg
cwde
(bad)
xor
lods
stos
jnp
data16
loope
loopne
in
scas
(bad)
adc
mov
xchg
mov
movs
pop
pop
(bad)
mov
adc
popa
in
int3
mov
pop
(bad)
outs
cdq
pop
out
scas
loopne
int3
popa
add
mov
pop
fnstenv
xchg
add
mov
adc
loope
popf
out
pop
add
mov
outs
faddp
jns
out
std
sub
jl
pop
mov
inc
pop
push
js
mov
call
mov
nop
mov
pop
addr16
pop
sbb
in
call
mov
in
jg
test
jmp
daa
aam
push
aad
idiv
and
aad
popf
mov
jle
fsubr
fs
add
outs
jecxz
inc
into
shr
and
pop
push
popf
jp
mov
out
ds
mov
pop
add
ins
xor
cdq
mov
std
push
loopne
bound
test
in
push
xlat
sbb
loope
jo
push
sahf
or
cs
out
sbb
jns
retf
xlat
pop
mov
dec
(bad)
pcmpgtd
gs
inc
imul
jmp
inc
int3
je
xchg
push
mov
dec
dec
inc
inc
cmp
repz
rcr
jl
mov
push
shl
sub
cli
cmps
bound
mov
fwait
sbb
dec
ins
in
jnp
movs
dec
push
xor
mov
push
std
push
jns
in
mov
in
stos
mov
movs
inc
adc
pushf
sub
loope
je
sahf
dec
cmp
das
imul
hlt
dec
sbb
push
cmps
das
inc
(bad)
sbb
popa
or
clc
movs
sar
(bad)
dec
ins
outs
popa
es
push
jne
ficomp
push
or
rcl
mov
fsub
push
out
jb
push
xchg
dec
es
jmp
int3
bound
stos
(bad)
jecxz
stos
xor
data16
(bad)
rdpmc
sbb
cmp
inc
xchg
mov
adc
(bad)
repnz
popf
stos
ret
add
sbb
add
add
or
or
shl
daa
pop
xor
popa
sbb
iret
push
xchg
push
jmp
arpl
out
ins
retf
or
fcom
out
loope
cmp
mov
jp
mov
pop
push
repz
push
mov
fild
mov
mov
push
push
inc
das
jecxz
ja
xlat
retf
js
repz
fcomp
cvttps2pi
addr16
jmp
outs
pop
fisubr
xchg
scas
push
adc
cmp
cs
inc
arpl
iret
jecxz
je
or
or
cmp
mov
dec
rol
movq
loope
jb
(bad)
call
aaa
fdivr
fdiv
imul
sbb
loopne
mov
mov
icebp
inc
pop
cmp
mov
cli
iret
jnp
mov
xlat
jo
mov
ds
jo
(bad)
add
push
dec
les
ja
sbb
xchg
cmp
sbb
lods
xchg
jns
or
pop
in
stos
rcl
or
outs
xchg
xor
add
mov
loop
pop
cwde
inc
(bad)
cmp
xchg
pop
(bad)
xchg
xor
daa
and
pop
das
adc
call
fisubr
pop
sbb
sbb
fsub
dec
idiv
stc
lods
dec
dec
xchg
sub
dec
in
movs
xor
dec
sbb
clc
rcr
in
adc
cs
mov
mov
(bad)
cwde
(bad)
pop
stos
inc
mov
dec
sub
sahf
inc
sbb
dec
aam
cmp
popf
mov
dec
mov
or
mov
jae
or
or
adc
or
aam
mov
clc
cmc
xchg
sub
or
cmps
sub
pop
addr16
test
and
or
(bad)
out
inc
mov
pop
cwde
std
dec
iret
mov
ret
mov
ins
mov
push
call
xor
push
jae
sub
push
sub
call
add
inc
xchg
inc
cmp
cmp
mov
sbb
push
fwait
jmp
retf
xlat
lock
mov
shr
pop
sti
mov
fdivr
xchg
push
leave
jg
mov
stc
in
push
mov
js
push
movs
mov
dec
arpl
cwde
cmp
fstp
pop
pop
xor
mov
test
and
adc
cli
leave
cmp
mov
dec
pusha
push
cwde
and
scas
rol
sahf
adc
int3
cmc
ins
push
adc
(bad)
hlt
pop
mov
repz
pop
push
cmc
mov
call
pop
mov
or
cdq
dec
cs
mov
push
loope
push
mov
cli
adc
outs
je
inc
lds
shl
push
movs
dec
idiv
fmul
adc
ds
xchg
imul
mov
imul
and
movs
popf
inc
stos
push
fiadd
pusha
int
lods
jg
cmp
jae
clc
faddp
xchg
(bad)
jnp
lock
push
sbb
mov
jge
jne
push
fdiv
jp
jmp
pop
jmp
mov
popa
sbb
mov
scas
mov
mov
push
je
pushf
push
adc
xor
pop
xchg
and
enter
push
loope
(bad)
fst
ss
push
sbb
loopne
pop
gs
push
ss
ja
pop
loope
movs
test
icebp
lods
xchg
inc
(bad)
xchg
int
das
data16
les
into
lahf
push
add
mov
mov
xchg
xchg
ins
lods
pop
inc
jb
cmp
mov
fisttp
into
cmp
mov
jne
push
les
inc
or
jbe
adc
sar
xchg
xor
pop
xor
mov
xchg
movs
push
ret
js
maxps
add
pop
jnp
leave
stos
xor
mov
mov
push
iret
xor
test
jne
test
jb
jge
inc
imul
loop
addr16
rcr
sbb
sbb
inc
adc
fnstenv
xchg
add
iret
jle
jl
inc
jle
loope
jno
stos
push
add
into
push
adc
inc
mov
adc
dec
mov
loop
mov
out
pop
aam
ret
icebp
add
xor
and
pop
cmps
lods
ins
repnz
mov
imul
push
inc
push
sub
push
aaa
jns
in
xor
pop
in
push
fsubp
mov
inc
or
cmp
call
inc
lock
sub
repz
jp
push
(bad)
jmp
icebp
stos
mov
fdivp
pop
push
imul
xchg
xor
dec
cwde
dec
sub
call
(bad)
cmp
xor
int
push
push
mov
clc
jecxz
push
imul
sbb
(bad)
call
sbb
inc
lock
fcom
xor
test
repz
cmp
lahf
mov
push
xchg
movs
cmps
push
or
ret
dec
push
mov
sbb
ret
sub
cmp
xlat
ds
cmp
push
aas
mov
adc
or
cmp
push
hlt
mov
js
inc
iret
add
cmp
retf
mov
mov
test
fs
or
inc
inc
ins
rcl
outs
and
xchg
rcr
ins
jno
push
adc
adc
and
jl
add
pop
mov
in
cwde
(bad)
jmp
(bad)
mov
out
xor
push
and
ret
push
cmp
sbb
mov
push
push
and
ret
leave
xlat
mov
adc
cmp
mov
popf
or
mov
clc
sbb
imul
gs
sar
jmp
pop
cmc
add
push
sbb
inc
pusha
mov
inc
out
enter
xchg
push
dec
pop
imul
pop
test
cmps
shl
xor
cdq
cmp
mov
jno
inc
mov
repz
mov
xchg
es
xor
es
(bad)
sub
sub
lock
int
fnstsw
jae
xchg
fidiv
lea
xchg
test
mov
loopne
in
shl
loopne
sub
sub
mov
xchg
mov
popa
in
push
xor
out
mov
retf
xchg
test
add
jp
xchg
and
stc
cmc
pop
cmp
(bad)
movs
rol
cmp
std
popa
stos
mov
fsubr
aam
(bad)
iret
mov
inc
and
out
push
sbb
xlat
movs
push
xchg
cmps
mov
cmp
es
mov
push
and
inc
sub
lahf
xchg
push
scas
xchg
mov
mov
out
in
add
and
cmp
clc
cmps
and
push
jmp
and
adc
pushf
sbb
and
inc
inc
rol
pop
and
xor
out
sub
inc
inc
or
mov
(bad)
mov
(bad)
cmp
outs
lahf
sub
lods
dec
push
xor
adc
ficomp
add
push
xchg
and
fwait
add
sbb
pushf
or
adc
addr16
push
aam
or
sub
pop
enter
jge
(bad)
pusha
push
adc
sar
(bad)
cmp
and
in
in
sar
inc
pop
jge
pop
pop
(bad)
inc
jle
push
xchg
jmp
dec
repz
pop
pop
loop
data16
pop
dec
mov
push
je
loope
jl
or
push
and
mov
adc
stc
push
mov
out
or
xor
adc
xchg
jb
stos
stc
idiv
sub
inc
pop
out
adc
pop
push
pusha
pop
arpl
fdivr
push
mov
cmp
xchg
jp
and
add
icebp
or
(bad)
cmp
and
lds
xchg
xor
pop
repnz
(bad)
xor
mov
add
sbb
mov
call
scas
(bad)
xor
cmp
mov
sub
ja
iret
add
mov
or
and
xchg
mov
push
lock
(bad)
js
stc
sub
(bad)
pop
xchg
fistp
ins
sub
xor
adc
push
xor
push
sub
mov
jne
pop
dec
sub
in
dec
sbb
ja
mov
inc
dec
out
sub
lods
cmp
in
aad
cmp
sbb
fisub
jns
test
mov
(bad)
xchg
loopne
and
mov
cs
jecxz
sub
loopne
mov
sbb
hlt
jg
dec
add
shl
shl
ficomp
dec
imul
jmp
push
xor
and
cld
jns
cmp
sbb
loopne
aaa
mov
adc
sti
pop
test
add
xor
nop
arpl
mov
mov
xchg
ja
sub
adc
and
sbb
sub
ins
retf
xor
push
rcl
movs
sub
cdq
add
cmp
sti
test
inc
repnz
(bad)
push
outs
sub
dec
jb
and
retf
pop
test
loopne
ins
adc
ss
inc
or
gs
stos
mov
mov
out
adc
mov
xchg
jmp
and
in
les
(bad)
rol
sbb
cmc
addr16
adc
cli
or
cld
iret
adc
inc
pusha
shl
(bad)
test
pop
lea
push
and
jle
inc
xor
call
push
jnp
rol
push
mov
xor
stos
or
(bad)
cwde
mov
ror
dec
mov
and
sub
pop
sub
mov
cs
xor
stos
xor
or
(bad)
mov
push
imul
inc
xor
std
and
and
leave
shl
pop
jae
mov
mov
sub
inc
stos
add
pop
adc
scas
dec
es
mov
into
xchg
nop
push
or
sbb
push
arpl
mov
xlat
in
push
cli
xor
shr
in
mov
aam
jns
xor
popf
xchg
adc
hlt
or
sub
daa
and
imul
gs
loope
xchg
icebp
dec
(bad)
dec
stc
mov
ficom
ret
mov
out
add
das
ins
pop
sbb
push
movs
mov
ficomp
add
pushf
repnz
push
das
xor
or
jbe
cwde
push
hlt
and
add
mov
mov
aas
sbb
enter
lods
xchg
int3
gs
inc
mov
dec
retf
test
fxam
push
add
push
pop
lock
in
mov
cld
pusha
jmp
std
push
fst
aam
or
ret
pop
fxch
test
rol
add
cmp
pusha
jbe
in
ss
xor
jle
movs
pop
pop
add
iret
jnp
xor
xchg
rdpmc
lahf
int3
les
and
jmp
ret
xor
xchg
pushf
push
pop
xlat
mov
out
cmc
out
sub
and
inc
adc
nop
test
cli
pop
inc
imul
hlt
pop
push
dec
dec
jns
add
mov
dec
enter
mov
adc
jns
ss
jne
fbld
or
dec
add
mov
js
icebp
leave
add
pop
loope
shr
jbe
lahf
add
sbb
sbb
mov
(bad)
xchg
iret
outs
pop
jecxz
xor
or
mov
scas
pop
mov
inc
jns
gs
and
stc
cmc
xchg
cmc
add
xor
and
jns
adc
in
mov
mov
push
and
enter
sub
fs
mov
cdq
push
lahf
xchg
cmp
ret
xchg
xor
and
cld
and
jmp
and
xchg
aaa
outs
add
lods
cld
imul
jg
xchg
lahf
push
imul
cmp
ss
movs
dec
and
xchg
repnz
push
jecxz
mov
ret
int3
mov
sahf
ret
sbb
push
mov
test
fbld
xchg
jns
lahf
mov
mov
std
adc
jns
imul
mov
jmp
das
enter
mov
push
ret
int3
adc
xchg
push
xlat
ja
push
ret
in
in
fst
aam
xor
push
xor
and
mov
repnz
movs
fbstp
(bad)
and
push
pop
xor
pop
adc
mov
sub
push
and
mov
xor
inc
adc
sti
std
xor
cmp
pop
xor
or
mov
in
mov
cmps
or
xchg
sbb
mov
push
out
sub
jb
mov
xchg
xchg
mov
test
mov
mov
mov
data16
jp
push
push
popa
test
add
in
retf
pop
mov
mov
call
mov
clc
js
(bad)
out
mov
out
sbb
sbb
mov
add
popf
lahf
mov
mov
gs
jb
jo
mov
inc
mov
adc
mov
mov
mov
lds
push
cmp
fisubr
jle
fbld
inc
and
out
lods
fcmovnu
pop
cmp
add
shl
xchg
paddw
inc
ins
aaa
pop
add
sub
sahf
call
pop
xor
call
or
dec
fwait
loopne
leave
dec
arpl
and
sub
push
adc
mov
sbb
cs
repnz
dec
movs
jns
out
sbb
cmp
aad
aas
and
cmp
jne
aad
mov
mov
imul
pop
xor
jns
leave
mov
xchg
sub
push
xchg
push
mov
or
or
mov
je
xchg
call
xor
sbb
test
mov
adc
mov
out
push
in
cmp
jmp
repz
in
retf
int
in
jl
mov
lahf
ins
cld
pop
retf
ret
push
and
mov
(bad)
out
mov
data16
mov
jae
movs
cmp
add
mov
out
mov
pop
jg
mov
jg
das
lock
xchg
fidiv
pop
push
pop
fsub
jo
mov
retf
stos
(bad)
sub
sub
outs
ja
cli
cli
dec
mov
and
mov
and
mul
in
and
push
cmp
addr16
cwde
out
xor
xor
(bad)
call
test
mov
or
fldcw
or
lods
add
pop
lds
pop
gs
aas
add
and
cli
stos
mov
jmp
sbb
pop
lods
cdq
packuswb
stos
enter
sbb
repz
ds
icebp
icebp
(bad)
and
xlat
les
rcl
and
xor
xchg
push
loop
pop
(bad)
pop
int3
xlat
or
scas
mov
push
cmp
into
xchg
outs
inc
cmps
test
dec
fstp
pop
sub
sbb
mov
fsub
int
aad
or
xchg
test
retf
sar
gs
cli
dec
ss
xchg
out
push
lds
mov
test
into
mov
dec
loopne
mov
imul
mov
nop
and
pop
pop
lods
cmp
sub
mov
popw
push
leave
push
aas
daa
lods
pop
jbe
jb
arpl
mov
pop
fadd
xor
push
and
adc
in
adc
das
jg
stc
or
xor
jnp
pop
adc
cmps
pop
pop
jnp
sbb
test
sbb
sbb
loope
adc
jg
pop
and
out
add
jno
dec
sbb
bound
sub
rcr
stos
mov
jo
lahf
js
hlt
nop
sbb
std
cmp
pop
sbb
jmp
mov
sbb
lea
test
ins
push
ror
xor
mov
push
inc
adc
ret
mov
ins
retf
stc
mov
mov
adc
xchg
push
mov
cli
adc
adc
in
inc
dec
repnz
sbb
push
cmp
pop
out
daa
cmovb
sub
mov
outs
loop
push
repnz
imul
jnp
dec
out
and
(bad)
mov
fs
or
and
hlt
adc
(bad)
mov
and
sub
cmp
pusha
arpl
lea
popf
mov
ja
data16
fadd
mov
nop
push
out
pop
or
sbb
sub
pop
dec
xor
add
mov
xlat
std
fdiv
movs
test
mov
cs
inc
mov
xchg
(bad)
arpl
cmp
inc
mov
xor
lock
inc
sub
lods
mov
stc
ret
sub
(bad)
out
adc
test
or
int
jmp
xor
test
pop
push
mov
push
cld
movs
dec
xor
cmps
mov
iret
sbb
test
pop
rol
addr16
xchg
loopne
push
sub
xchg
pop
sub
jl
cmp
ror
jecxz
cmc
xor
add
push
push
cld
(bad)
cld
pop
pop
(bad)
push
mov
mov
sub
sar
push
adc
push
fs
movs
push
cmc
ret
in
(bad)
mov
sub
adc
aas
inc
sbb
sahf
les
jmp
not
test
ins
xchg
or
xchg
in
ficom
xchg
push
mov
and
(bad)
sub
adc
dec
xchg
sahf
fwait
add
(bad)
div
test
xchg
xchg
push
ja
xor
arpl
mov
inc
pushf
mov
popf
mov
and
(bad)
jo
xor
aas
or
mov
inc
mov
xor
fbstp
jae
sbb
int
int
rcr
add
int
aad
jmp
icebp
inc
das
call
xor
mov
rcr
sar
rcr
cmp
sbb
mov
adc
nop
gs
sbb
hlt
lock
sub
pop
jno
shr
mov
sub
nop
pop
cmp
cli
mov
fsub
stc
loope
shl
mov
or
xchg
xchg
in
fdivr
mov
adc
ins
fwait
pushf
add
jne
pop
pop
adc
or
or
fsubr
enter
imul
push
sub
or
and
mov
stos
ja
jg
mov
jle
jmp
jge
jno
sbb
cmp
sub
inc
xchg
mov
aam
fisub
imul
scas
sbb
inc
ds
pusha
movs
int
or
ja
mov
dec
sub
inc
cmps
js
daa
push
inc
ja
inc
in
sbb
mov
cdq
push
adc
jp
cli
push
and
lds
or
dec
jo
xchg
and
and
retf
das
out
enter
aad
aad
xor
add
int
bound
daa
adc
scas
inc
adc
fistp
arpl
jge
push
shl
shr
cmp
stos
xor
pop
pop
cld
frstor
test
in
xchg
and
cmp
xor
and
popf
out
aad
fwait
inc
push
pusha
xor
cmp
push
stos
out
repnz
aam
test
(bad)
call
and
out
mov
jle
in
xor
push
call
cld
push
ins
mov
xchg
ss
mov
or
imul
inc
jmp
add
outs
xchg
aad
adc
mov
mov
and
rol
mov
ror
retf
fisubr
mov
add
mov
mov
fisub
push
dec
lahf
(bad)
pushf
out
lahf
ds
out
test
inc
or
adc
or
test
cmp
push
jge
lahf
add
jge
inc
mov
and
and
mov
xchg
pop
pop
pop
xor
test
xor
call
pop
xor
rol
cmp
les
jnp
xor
int
inc
lds
cli
mov
mov
jo
movs
mov
stos
int
or
aaa
test
ja
jno
jle
sbb
stos
cmp
dec
pop
add
lock
pop
stos
ins
lods
xor
jp
scas
into
pop
ret
ret
dec
xchg
xlat
ins
fstp
and
mov
shr
enter
add
lods
test
in
gs
dec
inc
cdq
xor
fsub
pop
xchg
fdivr
test
imul
bnd
stc
out
fstp
pop
push
cmp
(bad)
xor
xor
push
addr16
sar
jle
push
pop
dec
xchg
fistp
pop
aam
inc
mov
jo
clc
stos
ins
xor
cmps
push
sbb
(bad)
adc
test
adc
sti
push
pop
jl
retf
mov
adc
movs
adc
dec
xchg
pop
fcom
mov
mov
push
inc
jge
xor
pusha
and
pop
inc
push
or
sub
xchg
add
mov
pushf
mov
cmc
jg
(bad)
mov
ror
stos
leave
and
cmp
and
test
imul
call
test
je
push
daa
call
fwait
cwde
sbb
hlt
and
outs
inc
fst
pop
adc
fsubr
(bad)
cdq
lods
pop
jmp
push
or
cmps
jae
xchg
arpl
push
(bad)
mov
gs
mov
leave
loope
inc
into
push
xchg
jmp
xor
div
jne
jmp
mov
mov
mov
jnp
(bad)
and
jne
xor
mov
(bad)
mov
fcom
out
pushf
repnz
xchg
jmp
add
xor
xor
mov
push
sub
inc
and
lds
retf
(bad)
jmp
ds
and
sub
dec
push
or
jne
adc
sub
jb
jmp
push
adc
or
scas
retf
div
adc
jl
and
inc
ja
ins
outs
pop
leave
sub
add
jmp
pop
das
inc
mov
and
rol
add
jmp
or
jmp
iret
xor
push
lods
sub
and
cmc
ins
(bad)
cli
pop
enter
and
(bad)
mov
add
rcr
lock
repz
not
in
cmp
dec
xchg
popa
jg
je
ins
mov
(bad)
in
jb
fwait
pushf
not
in
pop
iret
mov
xor
xchg
fldcw
sbb
inc
inc
dec
ins
pop
ins
mov
sbb
(bad)
xor
or
jnp
pop
sbb
dec
sti
lock
jl
add
cwde
das
cld
sub
lock
sub
outs
cmp
pop
jno
push
sbb
fstp
jb
scas
aas
ins
dec
in
cmps
jl
adc
xor
jne
add
inc
and
fcmovb
sbb
pop
xchg
add
movs
xor
mov
cmp
push
jp
mov
into
cwde
test
jmp
push
mov
xor
pusha
shl
jns
nop
push
mov
inc
out
clc
inc
das
sub
adc
cmp
push
xlat
inc
cmps
jle
cmp
outs
mov
loope
mov
cmp
lahf
mov
inc
inc
dec
mov
sub
lea
sub
shr
stos
pop
fmul
inc
int
sbb
lods
leave
in
mov
aas
fs
sbb
cmp
mov
inc
ins
push
stos
jle
fstp
clc
test
sub
rol
imul
in
fidiv
jl
or
push
out
jns
mov
std
aaa
stos
iret
jns
(bad)
ficomp
sub
stos
stos
mov
fnstsw
lahf
mov
xchg
call
std
mov
dec
aaa
gs
sub
mov
js
xchg
into
or
je
pop
and
sbb
cdq
(bad)
pop
shr
xchg
xor
jno
aam
aas
xchg
sbb
sbb
iret
mov
cld
adc
outs
fmul
and
stos
jne
sbb
sti
mov
loop
jo
rcr
in
mov
pushf
movs
enter
mov
sub
add
ins
aad
xor
sbb
int3
inc
pop
push
add
daa
mov
cmc
out
adc
xchg
mov
je
dec
sub
enter
or
push
ja
cmp
and
jmp
(bad)
mov
je
xor
test
jle
shl
cmp
and
add
mov
icebp
push
mov
cmps
xor
mov
sar
loopne
cmp
out
mov
xor
lods
mov
sbb
fsub
jmp
fwait
shl
mov
sbb
xchg
cmp
inc
jno
or
inc
pop
and
push
popa
push
and
imul
in
push
lea
ss
adc
cmp
in
arpl
int3
xchg
test
mov
iret
sub
nop
js
cmps
cmc
add
cmp
cmp
or
popa
mov
or
pop
shr
xor
xor
sub
and
and
test
mov
ret
xchg
ds
std
movs
in
xchg
cmp
bnd
jae
frstor
mov
pop
jae
stc
fwait
imul
lahf
fwait
sbb
icebp
xor
fcos
std
(bad)
(bad)
cmp
and
cmp
and
adc
int
(bad)
std
(bad)
xor
inc
cmp
loop
inc
pop
aam
movs
je
or
jg
pop
aam
out
lahf
xlat
neg
das
xor
dec
mov
xlat
aas
rcr
aas
fldcw
cld
mov
in
in
sub
in
and
addr16
lods
pushf
lds
ficomp
xchg
das
inc
sub
sbb
or
les
in
loopne
add
adc
(bad)
dec
pop
push
add
push
rol
push
ss
pop
test
cs
adc
dec
cli
inc
jmp
pop
mov
sub
sbb
xchg
inc
sti
mov
fidiv
mov
inc
lods
je
xchg
jmp
xlat
xchg
repnz
pop
mov
cwde
scas
gs
outs
inc
enter
add
enter
shl
mov
jmp
lods
imul
pop
test
ins
mov
or
(bad)
in
shl
push
movs
or
addr16
push
mul
scas
adc
push
cmp
mov
mov
mov
jl
push
adc
mov
rcr
stc
rcl
pop
jne
scas
es
xor
and
cwde
iret
imul
cmp
scas
sub
xor
retf
jg
cld
stc
inc
jge
cld
inc
sbb
xchg
jmp
fist
dec
sub
fs
mov
test
pusha
mov
pop
ja
or
int3
xchg
ins
mov
sbb
fs
idiv
pop
hlt
cmp
mov
and
ror
test
mov
push
rcr
or
dec
enter
sbb
mov
mov
or
sbb
xor
or
jne
and
dec
hlt
add
adc
in
dec
mov
sar
mov
add
int
adc
sahf
call
and
in
lock
ja
fcom
and
fldl2t
sbb
pop
dec
fistp
jp
xchg
outs
add
in
add
jle
in
fisub
sub
(bad)
push
jns
jp
nop
or
sbb
scas
inc
sbb
jo
(bad)
and
rcl
inc
sub
and
iret
or
mov
mov
aaa
xchg
cmp
xchg
sub
retf
sbb
mov
loopne
stc
mov
mov
push
jmp
sbb
push
xchg
push
mov
mov
das
scas
dec
adc
out
sbb
ds
xchg
and
xor
add
mov
fidiv
hlt
sub
loop
popa
xchg
mov
cmp
div
or
mov
fs
fisttp
rcr
adc
sub
mov
bound
nop
jp
dec
mov
mov
inc
sbb
aam
jns
ja
push
aas
xor
test
repnz
push
out
cmps
jecxz
or
(bad)
mov
inc
xor
sar
add
stc
fwait
iret
xor
sbb
adc
enter
push
and
mov
mov
cmp
mov
push
ja
pop
fstp
ins
jmp
cmps
pop
or
stos
loope
ins
mov
mov
dec
xchg
test
sbb
cmp
stos
xor
push
mov
sbb
aas
adc
shl
dec
stc
push
inc
stos
cmc
mov
(bad)
xchg
sub
cmps
mov
and
or
ret
pusha
push
mov
dec
lahf
hlt
rcl
adc
pop
dec
ins
or
adc
sub
popf
add
repz
cli
xor
clc
std
dec
mov
jecxz
jmp
ret
sub
(bad)
xlat
fcos
cli
sub
stos
push
pushf
push
add
aam
sub
pop
lds
imul
nop
sbb
pop
xchg
pop
ret
inc
mov
xor
sub
jp
es
in
mov
sub
sub
in
push
mov
test
pusha
in
push
push
xor
or
xor
imul
mov
js
scas
pushf
pop
jne
cmp
into
xor
sbb
in
and
pop
push
fdivr
loopne
out
(bad)
mov
push
jg
jmp
stos
xchg
pop
push
jl
or
test
movs
push
(bad)
mov
inc
jmp
jb
push
dec
in
jle
vminss
jle
sub
shl
call
int3
mov
(bad)
adc
or
cmc
mov
fadd
hlt
aaa
and
pop
cmp
mov
inc
dec
jno
mov
mov
inc
fadd
popa
test
fwait
jb
fcomp
add
add
lahf
push
mov
cs
xchg
dec
push
or
jecxz
pop
icebp
ret
adc
xor
scas
add
push
adc
mov
pop
xchg
sub
and
call
jmp
pop
lea
mov
or
or
enter
and
adc
gs
or
pop
bound
outs
fadd
outs
stos
stc
push
dec
mov
shl
jbe
dec
mov
(bad)
mov
shl
jmp
sbb
push
in
repnz
movs
sub
or
inc
jl
cmp
jns
or
inc
test
push
and
dec
mov
jp
jnp
inc
pop
aad
xchg
lods
adc
stc
popa
cmp
rcr
cld
mul
mov
clc
popa
gs
inc
dec
int3
jmp
cmc
pop
clc
cmp
loope
xor
mul
inc
sub
fidivr
mul
xlat
lahf
int3
push
and
(bad)
mov
pop
data16
sti
hlt
in
or
fnstenv
pop
aas
dec
shl
push
jl
dec
sub
adc
lods
inc
push
fs
adc
mov
sub
adc
sar
scas
hlt
stos
les
fstp
xchg
cs
call
dec
stc
pop
add
ror
pop
jnp
adc
repz
xchg
out
nop
ret
in
stos
aad
inc
das
iret
push
adc
xchg
adc
push
mov
test
sbb
dec
or
inc
push
stc
fiadd
jnp
jge
mov
dec
cdq
sbb
and
rcr
fild
jle
push
stos
sub
xchg
inc
push
jae
stc
or
jmp
adc
mov
jno
repnz
jb
lock
push
xchg
and
xor
mov
xor
inc
adc
and
and
xlat
mov
mov
(bad)
mov
scas
stos
mov
aam
stos
fwait
jmp
sbb
xchg
pusha
popa
hlt
jecxz
cs
xchg
jnp
mov
cmp
adc
or
add
ficom
push
pop
test
pop
xor
lods
mov
sbb
das
xor
sub
pop
test
fcomp
pop
inc
push
xchg
push
push
pop
sbb
pop
xor
push
cmps
repnz
pop
inc
push
jns
lods
inc
out
int3
add
inc
mov
dec
xor
fidiv
sbb
mov
mov
std
push
inc
pop
fwait
cmp
push
aad
js
jp
mul
jg
sbb
push
jmp
shr
mov
call
xchg
sub
cmp
pushf
mov
mov
push
push
jne
aam
xchg
cmps
test
sbb
(bad)
xor
(bad)
das
and
pmulhw
mov
or
and
rcr
cmc
and
test
xor
jmp
adc
pop
into
out
or
stos
adc
pop
(bad)
js
inc
pop
les
mov
mov
rcl
call
add
jp
inc
sub
mov
fild
in
ror
push
mov
aas
out
sahf
add
xchg
jno
push
cli
inc
or
(bad)
std
mov
mov
test
add
cmp
in
mov
shr
xor
xchg
mov
out
adc
gs
retf
(bad)
jne
dec
sub
cmp
push
and
sub
xchg
ins
dec
jp
jne
cld
sub
sbb
mov
adc
popa
cmps
adc
sub
push
movs
mov
test
jecxz
dec
push
popf
(bad)
aad
in
pusha
fistp
jmp
inc
inc
bound
jno
mov
mov
sbb
neg
sbb
pop
xor
aam
xchg
and
imul
jmp
xchg
inc
scas
pushf
mov
enter
cld
aas
in
jl
sbb
mov
outs
es
rcl
jmp
(bad)
pop
cmps
not
lds
push
and
pop
pop
sbb
cmps
or
xchg
mov
jbe
cmp
aas
cwde
add
push
repz
call
adc
ss
push
ret
stc
and
sub
neg
mov
sbb
ins
fisttp
ja
or
ss
pop
jbe
dec
push
add
xchg
ss
fxch
or
js
push
dec
mov
push
paddsb
pop
pop
pop
in
pop
ins
jecxz
xlat
mov
retf
(bad)
push
movs
fisubr
mov
adc
or
into
in
aam
lods
stos
add
add
cwde
retf
into
xor
mov
inc
cld
lea
jns
pop
push
mov
adc
out
push
popa
imul
(bad)
loopne
int
push
push
adc
xor
jb
mov
imul
jl
cdq
aas
hlt
ins
outs
dec
adc
inc
retf
push
mov
adc
fcom
fsubr
sub
mov
fdiv
int
push
shl
or
add
and
movs
and
xor
jo
mov
adc
fist
sti
and
out
mov
into
cs
xor
xor
push
pop
inc
hlt
xchg
repnz
frndint
mov
stc
rcr
out
movs
mov
enter
in
pop
cmp
imul
sbb
movs
repnz
mov
pop
repnz
es
push
scas
push
pop
sub
pop
cmp
adc
push
sub
rcl
out
repz
idiv
sub
or
out
push
retf
mov
sub
sbb
jecxz
pop
sub
pop
xor
or
in
bound
iret
iret
mov
jbe
inc
push
pop
add
pop
mov
sub
test
test
mov
xchg
cmc
jl
in
outs
mov
jne
pop
push
ja
aas
fsub
dec
lock
sbb
or
push
and
loop
adc
in
leave
call
arpl
xchg
adc
stc
ins
adc
(bad)
pop
out
inc
mov
or
(bad)
adc
hlt
dec
jb
xchg
mov
repnz
lock
fs
mov
jmp
push
test
jmp
stos
mov
scas
inc
stos
pop
test
dec
adc
(bad)
cmp
movs
push
sub
xchg
imul
repnz
rcr
jg
test
enter
dec
pusha
outs
in
out
(bad)
cmp
or
mov
stos
and
and
cwde
lods
(bad)
cld
shr
cmp
in
retf
jmp
rcr
jle
sahf
inc
cs
aas
xchg
cmc
mov
xlat
push
and
add
scas
push
lock
cmp
(bad)
fld
push
jo
add
lahf
ret
ins
sbb
sbb
pusha
in
out
loope
sub
adc
sbb
fcomp
test
cs
lock
popa
xor
xchg
dec
aam
and
div
dec
inc
push
pusha
fwait
dec
in
sbb
pcmpgtw
cmc
pop
dec
sbb
adc
aaa
ret
cmp
loope
icebp
xor
shl
leave
pop
test
xor
test
jns
pop
push
and
xchg
xor
setle
movs
mov
push
inc
inc
xchg
cmps
mov
dec
gs
and
xchg
lds
push
pop
jns
pop
xor
aad
push
(bad)
xor
cld
int
dec
lahf
xchg
(bad)
mov
jl
adc
mov
scas
adc
imul
ins
stc
pop
jns
pop
les
fs
xchg
push
adc
ret
out
xchg
mov
jno
icebp
test
mov
in
loopne
sub
setge
sub
loopne
ins
sub
inc
add
idiv
ror
pop
xor
mov
pop
aaa
push
pushf
pop
test
rcr
imul
pop
(bad)
fadd
mov
sbb
test
push
mov
(bad)
in
pushf
test
mov
and
ja
push
mov
dec
lods
mov
push
movs
(bad)
or
mov
loop
loop
jae
and
push
cmp
and
out
call
push
sub
mov
xor
mov
cli
push
dec
xor
hlt
inc
dec
dec
dec
dec
xchg
sub
repz
mov
test
test
xchg
hlt
adc
rcl
sbb
in
lock
ret
aam
pop
xor
shl
enter
arpl
loopne
xlat
loopne
outs
xor
std
inc
xor
aaa
cli
xchg
mov
jge
(bad)
xor
das
div
sbb
push
outs
jne
repz
sbb
fldenv
scas
mov
push
cmc
rol
push
imul
and
mov
(bad)
je
cwde
movs
xchg
mov
jb
test
retf
sbb
dec
push
inc
and
sbb
les
shl
mov
mov
cmp
xchg
cmp
stc
clc
(bad)
lea
scas
xor
fs
aad
jbe
cmp
lahf
add
push
(bad)
iret
cmc
mov
cmp
cmp
pop
aas
pop
fild
test
cmp
pop
pop
mov
and
jecxz
int
push
fsub
sub
adc
rcl
and
pop
mul
movs
xor
inc
bound
(bad)
push
and
jns
idiv
cld
mov
mov
mov
subps
popa
int
(bad)
fwait
jo
imul
inc
pop
mov
(bad)
outs
dec
xchg
sbb
pop
sub
xor
fyl2x
sti
jp
push
push
cwde
push
call
inc
adc
mov
pop
push
test
ret
retf
push
pop
dec
(bad)
loop
add
dec
ds
leave
sbb
xchg
or
dec
imul
test
sub
fsubr
cmp
inc
add
fild
addr16
lds
lock
aam
ret
imul
sar
push
inc
adc
mov
sahf
call
dec
jbe
(bad)
jle
mov
xor
mov
push
shl
pop
dec
inc
dec
inc
int
pop
jbe
inc
mov
sar
mov
cmp
ret
in
jge
or
pusha
shl
cmp
div
xor
mov
or
lahf
pushf
and
cld
movs
pop
fisttp
sub
sbb
clc
mov
push
out
shl
and
aam
xor
or
call
add
mov
dec
or
in
mov
jecxz
scas
std
push
pop
nop
push
ficom
mov
and
and
inc
(bad)
push
leave
fisub
fisttp
or
and
mul
in
jb
xor
fwait
add
aad
(bad)
repnz
xlat
clc
push
lods
fs
cli
mov
mov
cmp
sbb
pop
mov
dec
ins
xor
dec
sub
call
retf
dec
or
push
pop
push
xchg
scas
fisub
dec
mov
repnz
(bad)
cmc
into
test
fldenv
out
jns
mov
cwde
in
into
test
mov
pop
outs
mov
cdq
or
pop
sti
xor
push
fmul
sahf
ins
test
fidiv
sbb
pop
jo
fild
fcmovne
iret
dec
lods
retf
into
pop
xor
les
aam
popa
mov
push
mov
sbb
rol
pop
repz
rcl
mov
gs
mov
clc
mov
cmc
add
pusha
fld
shl
pusha
imul
ror
cli
push
sbb
inc
test
mov
nop
add
adc
cmp
imul
fild
imul
add
xlat
push
or
inc
mov
aaa
mov
not
jle
cmp
dec
sub
(bad)
leave
gs
push
push
cmp
xchg
dec
hlt
jns
xor
repz
sub
inc
and
xor
xchg
jg
iret
fwait
pop
loopne
loope
sbb
and
jns
(bad)
or
jb
inc
aas
(bad)
cdq
pop
mov
test
cmp
psraw
aaa
sub
and
sub
mov
ja
dec
shr
mov
call
xchg
fs
imul
fld
(bad)
ins
xchg
sar
popa
xchg
xchg
adc
outs
fs
xor
test
jmp
xchg
sbb
jl
or
mov
add
lods
cwde
and
mov
mov
ds
test
and
and
pop
add
pusha
cmp
dec
mov
mov
push
jl
test
jbe
lods
pusha
mov
sub
pop
leave
push
test
cmp
or
call
retf
bound
(bad)
sbb
das
test
xor
xor
icebp
out
push
jno
loope
jnp
ja
xchg
jg
sub
xchg
pop
movs
arpl
stos
test
mov
adc
gs
xchg
inc
mov
dec
cmc
lods
es
xor
repz
(bad)
pop
xlat
or
xor
jg
inc
or
(bad)
lock
shr
and
in
pusha
mov
xor
pop
pop
bound
dec
and
loope
mov
inc
ja
cwde
stos
mov
popa
and
cmp
test
popa
mov
push
call
sti
and
aad
sbb
es
loopne
cwde
pop
mov
or
push
mov
das
pop
cwde
mov
sub
cmps
into
test
pushf
xchg
xor
mov
mov
jecxz
sbb
mov
dec
push
or
sti
adc
into
outs
mov
stos
jge
mov
rcl
mov
out
cmp
daa
mov
mov
pop
in
not
xor
mov
and
sub
movs
js
in
mov
shl
test
jmp
cmp
push
mov
adc
repz
sbb
ret
popa
adc
imul
jns
clc
pop
fcmovb
mov
scas
push
mov
dec
mov
mov
push
dec
sar
fcom
leave
push
nop
or
xchg
push
les
xchg
xor
aaa
sub
push
leave
inc
div
cmps
mov
pop
sbb
gs
je
inc
cwde
mov
outs
jae
sbb
dec
pushf
jb
sub
sub
xor
cmps
pop
jbe
pushf
adc
jmp
sbb
(bad)
ja
test
xor
ss
inc
xlat
aad
pop
cmp
sbb
pop
dec
fsubp
mov
jae
imul
movs
inc
jae
sub
add
adc
lds
and
outs
sub
dec
xor
cmp
in
std
push
mov
mov
scas
into
and
jg
cwde
mov
fs
test
pushf
inc
sahf
cld
xchg
jecxz
xor
aas
or
cdq
jp
mov
scas
push
jne
(bad)
push
mov
xor
add
test
mov
xchg
call
mov
sti
ins
and
or
mov
mov
xchg
xchg
outs
cwde
jmp
push
and
jne
push
xchg
jmp
jecxz
jnp
ins
jno
adc
stos
mov
jb
movs
sbb
lds
mov
repnz
dec
rol
xor
xchg
aaa
cmp
push
xlat
dec
rcr
xchg
add
or
inc
add
test
loop
xchg
fadd
data16
push
int3
ds
jno
mov
jo
jae
hlt
jge
imul
in
inc
push
mov
push
sub
out
std
scas
xchg
sbb
(bad)
out
pop
in
and
add
adc
test
jbe
mov
sbb
stc
(bad)
add
sub
jns
jb
push
adc
ret
(bad)
stos
jmp
jne
jne
mov
xor
sbb
mov
push
pop
lahf
stos
or
xor
stos
mov
out
(bad)
jo
(bad)
jbe
stos
mov
rcl
rcl
xchg
outs
int
mov
adc
dec
loopne
sub
inc
add
call
xor
xchg
je
sbb
retf
adc
sar
jmp
mov
jl
push
mov
aaa
rol
outs
mov
test
and
(bad)
adc
aas
push
jecxz
popa
out
pop
loop
imul
xchg
ss
jns
adc
lds
rcr
mov
ror
ds
push
dec
jg
shl
xchg
and
repz
retf
fimul
(bad)
mov
ins
scas
cmp
cld
popa
xchg
cs
sbb
aam
mov
xor
movs
add
shr
addr16
inc
(bad)
sti
clc
imul
inc
mov
sbb
hlt
je
xchg
pop
push
mov
bound
adc
xchg
mov
test
outs
dec
sbb
lods
cmps
and
stos
imul
or
call
inc
mov
test
xchg
and
aad
hlt
jmp
push
mul
(bad)
pop
mov
dec
aam
inc
idiv
sub
int
call
out
popf
push
mov
shr
mov
sbb
arpl
in
repz
lock
adc
xor
jp
je
fdivr
cmp
mov
lods
pop
and
cdq
cmp
xor
jno
mov
clc
shr
aad
sbb
xor
mov
xlat
and
(bad)
jecxz
cmc
popa
sub
push
push
into
jmp
inc
pusha
cdq
and
clc
ja
pop
xchg
mov
add
arpl
sti
mov
ins
sbb
xchg
ins
cwde
cmc
jl
push
inc
out
xlat
add
dec
or
out
add
es
sub
out
xor
adc
sub
fcomp
jecxz
jp
in
sbb
sbb
cmp
or
mov
cli
test
xchg
(bad)
fwait
jle
aad
pusha
xchg
pop
jae
xchg
dec
lods
pop
pop
push
xor
or
data16
xor
repnz
std
outs
push
lock
cli
(bad)
jg
mov
push
cs
jae
cmp
retf
and
adc
push
xchg
jne
enter
inc
shl
sbb
dec
mov
leave
repz
xchg
add
push
push
jae
mov
push
jno
inc
cmp
add
addr16
loope
ja
lock
mov
jmp
scas
push
iret
pop
lea
sbb
and
cmp
(bad)
mov
dec
jge
fistp
cmps
pop
test
ds
push
adc
xor
add
jmp
sar
mov
inc
sub
(bad)
(bad)
stos
mov
mov
xor
je
in
sbb
pop
div
(bad)
and
or
mov
(bad)
js
test
mov
xchg
inc
test
xchg
xchg
jl
xchg
cmps
jae
sbb
adc
jne
mov
or
lods
stc
or
inc
outs
push
mov
jb
rcr
pop
jnp
or
addr16
idiv
mov
inc
pop
inc
mov
jg
dec
fistp
addr16
push
sbb
and
iret
inc
dec
add
ins
movs
(bad)
adc
ins
xlat
mov
ja
sbb
idiv
lahf
outs
mov
inc
push
mov
jo
or
retf
adc
enter
cli
pop
xchg
add
and
je
inc
loopne
dec
cmc
adc
jl
stos
and
neg
int3
jmp
ins
jo
mov
xor
rep
sub
mov
or
in
icebp
cwde
adc
daa
mov
repnz
fnsave
jp
xor
adc
clc
int3
std
call
call
or
inc
shl
mov
in
mov
mov
call
std
cwde
dec
test
cmp
fisttp
cdq
xchg
call
pop
mov
jecxz
jno
stos
loop
and
jae
or
sub
and
loop
sbb
push
fwait
rcr
in
out
pop
mov
into
data16
xchg
lea
jnp
xor
mov
mov
fisttp
inc
test
mov
data16
stc
imul
xchg
xor
sub
das
mov
jae
or
inc
push
cmp
scas
loop
adc
cmp
cmp
jns
adc
je
pop
jb
aad
xor
xor
push
sub
mov
and
mov
inc
push
in
cli
inc
adc
mov
pop
jl
lods
ins
test
das
arpl
ror
mov
cld
pop
in
pop
jmp
dec
and
stos
add
add
add
dec
les
adc
shl
out
outs
and
test
lds
not
sbb
test
jl
into
mov
xor
out
or
sahf
ret
mov
mov
adc
push
sbb
pop
mov
ret
daa
or
mov
test
outs
add
mov
xchg
ret
jp
add
rcr
into
test
mov
and
in
sub
mov
shl
int3
not
cli
cmovnp
sub
test
and
pusha
inc
jb
inc
mov
mov
inc
aam
cmp
mov
mov
out
repz
and
out
xor
mov
ins
into
mov
mov
sbb
mov
pop
shl
ja
or
movs
and
push
inc
push
retf
out
sti
mov
cwde
jmp
in
mov
arpl
inc
inc
cs
fcmovu
adc
loope
inc
push
cmc
cmp
mov
cmp
sub
repz
js
cmp
mov
into
adc
jo
mov
js
fisub
inc
mov
inc
and
hlt
mov
loopne
pop
cdq
push
jmp
data16
lods
and
bound
xor
shl
call
lahf
(bad)
enter
test
repnz
sub
(bad)
lds
cld
and
mov
mov
fisub
ins
mov
mov
mov
and
or
mov
test
repnz
std
aas
pop
inc
xchg
mov
out
xchg
fsub
es
in
outs
pushf
cmp
shl
aad
ins
addr16
mov
and
scas
test
or
repz
sbb
sub
push
sar
pushf
mov
(bad)
scas
add
xchg
lods
retf
mov
xchg
punpckldq
pushf
cwde
loopne
xadd
or
lahf
mov
(bad)
xlat
adc
cmp
das
jo
mov
add
dec
and
test
or
ret
inc
inc
and
cld
retf
in
and
push
aas
movs
(bad)
mov
dec
in
cmp
adc
nop
mov
xor
xchg
xchg
mov
repnz
push
sbb
(bad)
jmp
and
mov
inc
test
mov
ror
jae
push
push
jbe
mov
loope
aad
hlt
mov
ins
cmp
mov
js
jb
jle
arpl
xlat
or
sbb
retf
in
push
daa
int3
lock
cmp
xlat
into
and
add
neg
mov
jbe
aam
push
pop
(bad)
sub
mov
pop
cmp
jae
jo
dec
not
hlt
ret
(bad)
leave
test
das
lods
sbb
cmp
sbb
push
add
daa
sahf
cmps
fiadd
push
fstp
bswap
jg
(bad)
out
dec
aas
in
jae
iret
mov
add
add
aam
xchg
add
(bad)
xchg
lods
xor
cmp
js
or
or
std
int3
xor
sbb
popa
clc
lods
and
add
sub
in
stos
xor
cmp
das
push
adc
lds
int3
mov
pop
push
in
pop
outs
jnp
xor
jb
cmp
jns
dec
dec
xchg
mov
jno
test
cli
jne
add
push
int3
jge
inc
push
(bad)
and
mov
jg
mov
inc
pusha
lahf
dec
leave
adc
sbb
and
dec
and
test
ja
mov
je
mov
xchg
jg
test
add
outs
mov
lea
test
mov
sbb
dec
cmp
sti
dec
sub
add
enter
stos
jno
out
adc
or
in
ja
mov
ds
xor
outs
inc
dec
adc
gs
dec
cmps
or
dec
adc
int
mov
cwde
jmp
imul
outs
aam
cmps
cmps
lods
or
mov
fisubr
das
cmp
cmp
xchg
loope
pop
mov
pusha
mov
cmp
cli
jns
pop
popf
mov
rol
(bad)
pop
add
pop
dec
add
push
adc
movs
addr16
jle
ret
push
mov
jnp
mov
mov
xor
and
aas
into
mov
ins
xchg
shl
xor
stos
pop
cmp
psrld
loop
push
das
xchg
lea
cmp
cwde
mov
lock
mov
jmp
fisub
add
push
or
cmp
shr
inc
int3
jbe
mov
xchg
mov
inc
cld
sub
adc
shl
out
dec
inc
imul
dec
test
div
xor
aam
dec
inc
cmp
add
dec
rcr
pop
fist
pop
adc
xchg
shr
sti
xchg
xchg
cmc
ret
rol
in
xor
inc
addr16
pop
call
test
xor
sub
fild
ds
xchg
sub
push
jecxz
cmp
adc
aas
mov
xor
scas
les
scas
sti
fidiv
or
aaa
xor
fdivrp
xchg
or
sbb
ins
jp
or
dec
sar
xchg
push
je
idiv
retf
jns
mov
push
mov
or
arpl
inc
repz
ja
push
icebp
mov
mov
rol
daa
mov
and
add
jge
outs
cmc
sbb
pop
adc
jge
dec
dec
lods
cli
mov
js
sbb
xchg
pushf
jecxz
cmp
mov
js
stos
hlt
fst
fisttp
dec
clc
mov
push
sub
fcmovne
sub
test
or
cs
xchg
cwde
lods
mov
lock
outs
xor
push
mov
ss
mov
popf
(bad)
mov
mov
out
movs
mov
icebp
adc
push
lahf
sub
jne
shl
imul
adc
xor
sahf
loop
and
add
aaa
pop
(bad)
shr
or
fdiv
sub
adc
inc
mov
mov
shl
push
call
cmps
or
xor
add
pushf
mov
mov
pop
mov
xor
xchg
ins
push
repz
dec
xor
mov
xor
pushf
call
mov
xchg
aad
cmps
lock
imul
aaa
loope
push
mov
cld
mov
cmp
sbb
(bad)
mov
mov
sbb
mov
or
cmp
std
and
adc
(bad)
iret
xor
push
js
cwde
add
inc
sbb
mov
xor
dec
dec
dec
out
dec
ja
sub
repz
outs
pushf
clc
popa
sbb
sbb
mov
mov
and
fsubp
sub
mov
inc
sub
inc
fbld
push
dec
sti
neg
and
lods
mov
aaa
mov
nop
push
pop
pop
pop
fmul
sub
push
ror
pop
jmp
pop
sbb
pop
pmulhuw
repnz
das
inc
mov
pop
mov
in
add
repz
cli
imul
xchg
jle
adc
push
cmps
jle
es
cli
xor
add
mov
int
(bad)
add
scas
fstp
mov
adc
push
cmps
pop
dec
outs
sbb
or
inc
repz
movs
das
(bad)
xlat
fldenv
pushf
xor
in
sbb
ror
dec
push
jle
iret
loop
test
sbb
mov
sahf
mov
popa
(bad)
pop
inc
test
fdivr
out
jb
cmc
das
and
lods
push
push
popa
hlt
sbb
cli
pushf
ds
push
xor
adc
aad
inc
outs
inc
mov
dec
adc
lods
pop
mov
xor
mov
fwait
push
fidivr
jg
shl
push
mov
clc
sbb
lea
mov
inc
test
lahf
add
pop
mov
lahf
jecxz
mov
sub
pushf
aam
mov
icebp
mov
aas
icebp
imul
aaa
ss
fnsave
popf
js
(bad)
sub
(bad)
(bad)
fistp
mov
cmp
inc
fadd
hlt
jmp
(bad)
xor
(bad)
movaps
mov
xchg
test
inc
jbe
pop
lock
cld
or
mov
jl
ficomp
into
pop
sub
scas
ret
ds
outs
cld
push
or
shl
push
(bad)
jb
icebp
jmp
inc
repz
pop
mov
test
ret
xchg
fstp
ret
cmp
pop
push
cs
xor
sar
push
add
pop
dec
lds
push
pushf
pop
int3
iret
or
(bad)
in
aad
xor
shl
arpl
outs
std
push
stc
cmovp
xor
das
dec
aam
lock
xchg
jno
jmp
push
mov
cvtps2pi
cmps
xchg
sub
ss
test
adc
add
loopne
ss
or
rol
in
retf
mov
inc
je
cwde
mov
mov
rol
test
cwde
int
aad
sbb
int3
and
ja
jp
out
sub
push
push
sub
xor
mov
fcomp
int3
aam
movs
pop
call
mov
(bad)
fistp
in
hlt
adc
xchg
ficomp
imul
sbb
popf
dec
enter
pusha
sbb
mov
sub
add
dec
lock
pop
add
sub
dec
and
rcl
pop
lods
mov
ins
stos
in
jo
mov
cmp
pop
mov
pop
shr
lods
bnd
addr16
add
push
push
push
call
scas
inc
jmp
cwde
cmp
push
xchg
add
add
add
adc
mov
ins
jg
movs
dec
jecxz
out
mov
bound
pushf
jne
mov
xchg
lahf
mov
not
gs
mov
xor
push
outs
lock
push
or
cmp
test
jg
retf
cmc
inc
movs
fsubr
test
pop
or
push
rol
or
pop
mov
rol
mov
or
push
and
push
jne
xchg
nop
pop
pop
xchg
dec
int
cmp
sbb
push
in
dec
int
push
adc
sub
or
js
jmp
nop
aad
lds
shr
loopne
adc
lds
fsubr
mov
inc
inc
sub
adc
pushf
add
inc
clc
les
add
cli
sbb
inc
dec
(bad)
sbb
pop
shr
sub
pop
or
xchg
xlat
mov
lods
xchg
mov
mov
sub
pushf
sbb
cli
or
adc
out
inc
out
fstp
movs
ret
lea
cmp
cs
mov
jnp
lea
ror
ja
cmp
loop
or
jle
test
jp
pop
(bad)
out
pop
mov
sbb
mov
push
dec
inc
mov
lods
(bad)
cmps
or
pop
add
aam
loope
out
ins
xchg
cmp
pusha
jle
push
push
mov
ins
mov
jns
jno
ss
push
fwait
and
gs
pop
and
ins
ja
xor
int3
push
xchg
(bad)
daa
sbb
daa
mov
dec
repnz
jl
pusha
in
call
stc
mov
in
in
aaa
inc
mov
test
pusha
and
iret
pop
neg
push
icebp
nop
push
outs
cmp
imul
mov
pop
das
add
ud2
and
sub
cs
test
jb
cli
xchg
jne
(bad)
inc
adc
inc
xchg
push
mov
mov
jle
inc
mov
jno
fisub
inc
dec
jns
int3
int3
mov
cld
jnp
xchg
cmp
push
dec
fldenv
add
inc
sub
pop
scas
icebp
ins
inc
push
(bad)
add
add
fcomp
je
inc
or
js
or
aad
sbb
jno
push
jmp
push
sbb
lahf
mov
dec
mov
xor
push
jmp
or
fistp
add
aad
cld
stos
(bad)
mov
sbb
sub
xor
data16
ficomp
adc
movs
mov
fs
out
cmc
sbb
in
xchg
out
js
stc
add
xchg
mov
and
pop
dec
pop
pop
inc
aaa
arpl
ds
mov
jns
fwait
inc
(bad)
push
mov
retf
ss
lods
popa
pop
outs
add
(bad)
out
jb
inc
or
xor
mov
mov
fld
enter
test
shl
mov
aaa
jbe
daa
xchg
ja
mov
popf
clc
cmp
inc
cmps
or
dec
lea
xchg
retf
outs
adc
test
ret
cmc
fs
add
mov
push
pusha
add
ss
int3
add
pop
xor
xchg
sbb
xchg
inc
push
je
lds
pop
jae
das
jb
sub
dec
mov
dec
cmp
jmp
pop
sub
fst
pop
js
mov
push
aad
cld
cmp
js
cmps
daa
test
xchg
test
loop
mov
jae
movs
jnp
mov
jl
jle
(bad)
cli
mov
xor
mov
fdivr
and
cmp
mov
into
mov
aas
adc
aaa
sbb
cmc
mov
sub
icebp
or
xor
into
mov
adc
mov
fs
cmp
js
(bad)
cmp
fidivr
and
mov
push
out
(bad)
out
jp
cdq
add
or
pop
ja
neg
push
add
dec
lods
xchg
add
cs
pop
jp
pop
push
add
push
(bad)
jg
enter
pusha
xchg
jnp
inc
mov
mov
ret
movs
dec
je
data16
xchg
push
sub
mov
add
xchg
je
sbb
es
jle
mov
sbb
push
ret
xlat
xor
xchg
and
mov
sbb
add
cmp
jne
adc
push
sbb
mov
out
data16
nop
lods
into
jae
test
mov
inc
sar
mov
add
mov
and
jbe
and
cmp
xchg
aad
add
in
dec
inc
mov
or
push
ins
ss
jmp
sub
sbb
jge
xor
or
mov
out
sbb
retf
(bad)
out
mov
push
inc
mov
cmp
hlt
mov
add
inc
es
movs
sahf
pop
sbb
or
jne
in
xchg
jmp
jl
push
mov
out
add
xchg
cmps
dec
push
cmp
pop
adc
xor
popf
and
cmps
call
enter
push
pop
in
loope
cmc
sbb
and
dec
(bad)
and
call
jbe
dec
xor
push
in
dec
inc
mov
mov
aam
dec
sbb
dec
and
inc
int
(bad)
sbb
mov
cld
fsub
out
inc
lahf
sub
push
loop
dec
arpl
aas
lahf
inc
ficomp
shr
or
mov
sub
xchg
stos
lods
pusha
push
sub
stos
movs
lea
ds
push
or
xchg
(bad)
loopne
jl
cmp
jns
sahf
out
jne
mov
inc
movs
xor
mov
cmp
xor
push
jl
and
sti
pop
fiadd
xor
sub
mov
push
les
jp
push
lea
(bad)
mov
and
mov
jb
xchg
out
stc
(bad)
jmp
iret
ds
xchg
rcl
loope
scas
test
fstp
call
(bad)
out
inc
jl
inc
in
inc
arpl
xlat
imul
les
arpl
(bad)
fdivr
fisttp
sub
clc
pop
hlt
xchg
outs
aad
(bad)
ins
xor
stc
gs
ds
jae
mov
sbb
div
inc
bound
xor
xor
gs
int
mov
in
loop
lods
xor
adc
outs
int3
cmp
fsubr
jge
mov
add
xchg
imul
cmps
pop
mov
xchg
inc
push
ins
cmp
jp
jl
mov
fbstp
std
push
arpl
dec
clc
out
es
mov
popa
pusha
jle
jnp
add
xchg
out
dec
pop
adc
push
in
add
add
mov
movs
aas
test
test
ja
or
mov
jno
(bad)
mov
loope
mov
push
xlat
push
int
(bad)
enter
adc
call
push
sahf
dec
in
(bad)
sub
inc
fild
sub
jne
push
jge
jmp
cli
ret
fisttp
jmp
cdq
mov
mov
xchg
ret
adc
iret
popf
and
or
arpl
mov
test
clc
add
out
mov
data16
adc
jp
sti
lahf
cmp
sbb
fdivr
aam
xor
cdq
push
inc
sbb
clc
push
mov
xchg
(bad)
add
call
pop
ins
push
rcl
mov
ror
daa
js
xor
or
pop
jmp
mov
(bad)
fidivr
iret
retf
(bad)
pop
cld
sub
sbb
lahf
cld
lock
xchg
jmp
dec
add
popa
add
mov
dec
push
popf
sbb
jge
xchg
call
or
cmc
gs
pop
movs
and
lods
fnstcw
(bad)
inc
push
enter
outs
jns
lahf
(bad)
fiadd
cwde
repz
mov
push
mov
stos
or
inc
adc
retf
and
or
push
and
mov
aaa
jns
stos
pop
sub
ror
jne
jo
and
jmp
pop
and
or
push
icebp
mov
pop
mov
js
mov
into
aas
mov
mov
add
xchg
enter
aad
sub
fld
aad
lock
pop
sub
loope
mov
fld
hlt
push
xchg
aas
mov
stc
push
xchg
add
arpl
pop
jp
xor
stc
inc
into
outs
je
mov
xor
sbb
mov
in
mov
jmp
(bad)
push
sar
push
fnstenv
dec
jmp
cdq
ins
out
je
push
push
or
xchg
xchg
dec
les
inc
xlat
or
and
int3
push
dec
test
push
fisub
lods
jge
jb
mov
push
pop
dec
xor
push
xchg
nop
in
xchg
mov
push
cwde
add
arpl
push
xchg
les
push
jecxz
outs
mov
int
sti
lods
adc
ret
jg
xchg
aaa
dec
test
movs
mov
cmp
jno
clc
sub
arpl
sbb
push
pushf
jbe
mov
adc
test
fucomip
mov
(bad)
or
popf
mov
add
ror
sub
icebp
xor
fstp
jp
cmp
jne
jo
mov
ja
mov
push
mov
sub
pop
ds
daa
fsubr
hlt
in
add
adc
or
nop
jno
cmp
pop
inc
aas
and
jecxz
jl
stos
in
sub
sbb
sbb
enter
pop
xchg
gs
mov
repnz
push
xor
loopne
pop
sbb
or
or
cli
std
xchg
imul
stc
stos
pop
push
pop
(bad)
fdivr
in
mov
call
add
cmp
(bad)
call
das
ss
es
fisub
xchg
iret
fdiv
aas
mov
jne
xor
aam
sub
jno
push
push
call
inc
sbb
xor
mov
jno
fidiv
repz
call
pushw
sub
lock
or
push
mov
fwait
push
in
imul
jmp
jmp
push
imul
sbb
int
bswap
data16
xor
js
fsub
jno
xor
inc
inc
stos
xchg
jb
hlt
xchg
mov
fcmovu
xchg
dec
fwait
pop
and
in
hlt
adc
hlt
or
sub
call
mov
xchg
nop
test
cmc
mov
js
xchg
rcl
aaa
nop
jge
inc
in
xor
and
xor
dec
icebp
div
std
popf
adc
repnz
jne
pop
or
in
mov
mov
in
sub
in
jle
jl
(bad)
sub
mov
lods
mov
xchg
or
dec
pop
xchg
xchg
(bad)
pop
gs
jg
jb
and
daa
mov
daa
adc
sar
ret
cmp
int3
es
imul
and
pop
inc
push
mov
mov
gs
mov
push
repnz
mov
jecxz
dec
and
mov
pop
fnstsw
and
sbb
mov
add
mov
rol
stc
pushf
repnz
xchg
mov
mov
pusha
xor
and
push
dec
ss
and
aas
mov
fdivr
stc
arpl
inc
inc
mov
cmp
enter
aam
mov
imul
pop
xchg
cli
sbb
cmp
in
push
pop
fistp
lds
inc
fs
enter
dec
mov
cwde
adc
jmp
aas
mov
pop
cmp
in
push
add
nop
mov
mov
emms
clc
clc
retf
sub
movs
call
mov
push
mov
ret
nop
enter
out
dec
scas
xchg
mov
ror
inc
pop
add
movs
daa
jne
sub
lea
sub
and
inc
mov
xchg
dec
sub
inc
push
jge
mov
cmps
mov
movs
jg
in
movs
mov
std
mov
mov
fwait
(bad)
(bad)
loope
pop
jo
pushfw
dec
(bad)
sbb
dec
mov
aas
mov
or
mov
or
mov
push
aam
dec
mov
dec
out
lds
pop
repnz
cmp
xor
push
test
imul
test
pop
mov
rcr
hlt
ja
dec
inc
movs
loope
mov
aaa
and
dec
jp
bound
pop
out
xor
scas
fucomp
stos
test
xchg
into
cmp
dec
icebp
js
sbb
or
mov
pop
or
sub
scas
stos
test
jae
dec
adc
mov
mov
cmp
mov
mov
je
iret
(bad)
mov
inc
bnd
pop
mov
popa
cmp
mov
fsub
inc
fsub
jecxz
cli
nop
pop
add
call
fcomp
adc
pop
repnz
push
xchg
mov
stos
ss
mov
xchg
mov
and
adc
ret
pop
loopne
xchg
test
adc
sar
push
rcl
pmullw
shl
je
dec
ja
test
fdivr
fldenv
stc
inc
xchg
pop
mov
mov
mov
fwait
adc
ins
imul
or
pop
push
xchg
lahf
pop
ja
retf
mov
sub
xor
dec
adc
sbb
sbb
dec
mov
stos
rcl
fs
inc
dec
fisttp
jge
add
sbb
mov
add
dec
add
sub
gs
pop
out
sahf
push
clc
cmp
xchg
mov
add
shr
cmc
aam
push
add
mov
pop
and
call
mov
repnz
stos
shl
add
mov
xor
rcr
xchg
mov
in
retf
(bad)
aas
pop
aaa
test
mov
js
into
pop
(bad)
sub
pushf
mov
mov
rcr
inc
push
cmps
adc
mov
in
sti
xchg
pop
inc
sub
imul
fstp
in
cmp
sub
mov
popa
rcr
out
fld
out
dec
dec
vpavgb
retf
push
adc
mov
mov
retf
xor
call
ja
push
(bad)
fld
jb
jbe
in
mov
mov
inc
in
jl
je
mov
aaa
in
cmps
add
sub
fdivr
in
add
inc
inc
sub
pop
pop
movs
xor
pop
or
or
sbb
xchg
pop
or
jg
push
in
out
cmps
dec
cs
adc
push
int
cwde
ret
jl
xchg
pop
mov
mov
idiv
pop
les
test
inc
fnstcw
xchg
pop
(bad)
fucomi
repz
push
mov
jne
movs
out
jp
ror
(bad)
stc
push
ftst
cwde
push
mov
and
add
(bad)
push
scas
sub
mov
lahf
ret
adc
pop
in
loope
out
iret
hlt
aas
cmp
lds
xor
lds
cmp
mov
popf
add
sub
inc
inc
mov
sar
add
inc
push
mov
imul
cli
mov
or
inc
xchg
or
cdq
cli
(bad)
xchg
sbb
add
and
xor
fst
jle
jg
fist
mov
mov
dec
scas
inc
movs
push
fdiv
jns
je
jno
sub
into
in
dec
inc
inc
mov
(bad)
push
mov
fidivr
call
adc
sbb
cmp
cmc
fisttp
or
mov
or
mov
jo
jge
adc
add
xchg
std
inc
ss
add
daa
repz
and
(bad)
xchg
add
adc
xchg
mov
(bad)
mov
loop
cld
in
in
(bad)
adc
imul
and
int3
cmp
jnp
mov
jl
retf
mov
push
jmp
cmp
lds
test
ss
pop
jp
adc
addr16
adc
test
push
call
imul
mov
dec
fistp
(bad)
fcom
or
int
imul
retf
pop
jb
pop
outs
fadd
push
scas
jns
enter
pop
nop
xor
mov
test
push
int3
(bad)
fbstp
ss
and
lock
pop
mov
jo
xchg
leave
hlt
mov
mov
mov
movs
aas
(bad)
cmp
jl
addr16
repnz
mov
retf
add
cmp
sbb
ins
inc
or
popa
cmp
or
ds
jg
aam
dec
fdivr
fmul
cmp
lock
lock
xlat
xor
lea
adc
sub
dec
cmp
ins
pushf
dec
and
ror
add
mov
fcmovnbe
dec
and
imul
xor
ja
cmp
enter
fs
or
pusha
mul
push
fist
inc
sub
clc
push
cmp
push
out
sbb
cmp
cmp
mov
ja
or
xor
les
out
xor
or
pop
loop
inc
test
jmp
sub
inc
in
xor
fs
inc
sbb
and
and
push
imul
add
sahf
mov
lock
sahf
sub
js
push
not
sbb
cwde
shl
push
xchg
sub
inc
jmp
xor
xor
mov
ss
mov
xchg
lea
xor
ja
mov
sub
fisttp
mov
ja
fld
and
sub
and
cmps
jbe
mov
and
pop
and
sbb
xchg
xchg
jns
adc
mov
lahf
cmp
cli
push
fsubr
int3
xor
and
hlt
cmp
sbb
sub
mov
jns
mul
adc
(bad)
aam
rcr
(bad)
aaa
dec
dec
shr
cdq
adc
fs
mov
aam
repz
jp
sbb
pop
js
add
repnz
and
fisub
xor
fucomi
(bad)
cli
and
rcl
xchg
xchg
in
add
adc
not
imul
(bad)
jge
push
cld
jmp
and
pop
cmps
loopne
adc
sub
sbb
in
dec
push
fs
add
xchg
lods
xlat
out
cmp
test
call
inc
outs
or
jo
std
jecxz
inc
jne
outs
das
and
add
out
mov
cmp
mov
or
or
(bad)
sbb
cmp
adc
push
in
mov
jg
les
ins
adc
mov
adc
scas
inc
mov
pop
adc
movs
cmp
pop
sub
mov
mov
xchg
xor
jns
xor
mov
sahf
mov
int
cs
sbb
adc
push
pop
sub
or
loop
push
loopne
mov
inc
loop
xchg
mov
or
cmp
xorps
jb
push
mov
inc
clc
ret
push
xchg
(bad)
jecxz
aaa
sub
es
jno
xor
mov
xchg
stc
ds
(bad)
xor
pusha
or
fdiv
loope
xor
imul
fwait
jg
pusha
fcomp
mul
adc
mov
sbb
aad
in
mov
xor
push
pop
dec
and
mov
add
dec
imul
xchg
xchg
jb
jecxz
fimul
push
pop
xor
inc
dec
pop
lods
ins
fbld
inc
(bad)
pop
call
mov
ja
sbb
xchg
bound
mov
daa
lds
in
in
cli
iret
daa
adc
and
add
dec
cmp
adc
(bad)
cmp
mov
and
int
push
rcl
or
sbb
cli
sbb
sub
std
mov
dec
ret
imul
in
and
bound
pop
push
inc
xchg
mov
sub
fwait
xor
and
adc
mov
cmp
and
jbe
pop
mov
in
xlat
mov
jo
pop
loop
ret
mov
ja
cmps
stos
call
jl
repz
lahf
fiadd
jne
pushf
jl
inc
xchg
icebp
std
xchg
pop
or
adc
jne
ficom
add
clc
call
stos
pop
jge
xor
cdq
movs
ja
fidiv
ror
movs
push
pop
loopne
sub
neg
jns
mov
fsubr
rol
cmp
idiv
pop
push
dec
jmp
or
jbe
xchg
ror
inc
fdivr
stos
pop
rcr
loopne
push
cdq
mov
inc
dec
(bad)
cs
aad
dec
cwde
int3
lahf
mul
test
jmp
pop
(bad)
xchg
mov
fistp
mov
mov
(bad)
sar
and
outs
aam
pop
jge
loopne
sub
aas
xor
sub
stos
cs
jge
jb
jns
jle
ins
mov
xchg
adc
lods
mov
mov
jg
or
inc
adc
jle
gs
jnp
xchg
fcmovnu
pop
push
xor
shl
fs
push
mov
fdiv
mov
test
cmp
aas
sbb
rcl
adc
outs
add
cmp
mov
and
mov
call
xchg
mov
sub
gs
ds
add
or
jne
loopne
mov
popa
neg
std
cmp
fs
(bad)
jecxz
dec
cmp
fsubr
pop
mov
call
popa
pop
dec
xchg
addr16
(bad)
mov
icebp
test
dec
enter
je
cli
in
shl
lods
loope
dec
stos
and
push
rol
icebp
jo
arpl
or
adc
dec
mov
loop
inc
sar
cmc
add
std
cmp
pop
pop
daa
add
retf
sub
and
cld
inc
xchg
inc
test
(bad)
movs
mov
add
pop
out
loope
push
loope
pop
inc
test
mov
push
and
leave
test
sub
leave
mov
das
aam
repz
mov
out
es
inc
dec
mov
out
stos
je
xor
cwde
fdivr
sub
sar
push
jno
mov
push
cmps
psubsb
test
xchg
pop
push
cld
push
out
xor
jmp
call
push
mov
retf
adc
push
push
js
sbb
ret
sub
test
int
imul
pop
jg
pop
add
jae
jo
dec
mov
and
ja
fisubr
adc
cmp
std
mov
pop
push
and
ret
test
jp
xor
xchg
mov
lods
lods
fisubr
push
lock
js
pop
data16
pusha
xor
and
xchg
mov
add
sub
std
jnp
cmps
aad
sbb
repz
(bad)
push
lock
and
sub
mov
add
push
out
call
xchg
daa
cmps
in
mov
movs
retf
cmc
lahf
pop
stos
nop
shl
jb
std
cli
dec
ins
bsf
mov
stc
fstp
adc
dec
rcl
repz
(bad)
imul
and
sbb
xor
sbb
retf
pop
imul
and
icebp
dec
cmps
jle
sub
mov
test
(bad)
outs
cmp
retf
push
dec
std
cmc
pop
dec
xchg
(bad)
push
push
dec
add
push
jmp
push
mov
sub
std
jbe
test
les
mov
and
or
sub
mov
retf
and
jne
bound
mov
addr16
scas
lods
or
xchg
mov
jg
ficom
push
or
and
or
xchg
mov
pop
and
or
scas
fdivr
rcr
add
sub
add
mov
push
lahf
jl
hlt
fisub
add
cs
gs
push
lahf
popa
xchg
adc
mov
and
(bad)
jge
fsub
dec
loope
xchg
sti
or
in
movs
test
adc
(bad)
bswap
fld
adc
and
jno
cmc
xchg
and
shr
mov
add
idiv
call
mov
daa
addr16
xchg
lods
push
mov
popf
jbe
dec
rcr
sub
(bad)
mov
adc
pop
cmovne
repnz
pop
cmp
sub
cmp
and
pushf
mov
adc
shr
adc
xchg
shl
or
pop
sub
jecxz
push
in
push
lahf
or
pop
aam
adc
popf
stos
ss
dec
enter
cmps
dec
cld
movs
push
pop
xor
aam
add
pop
xchg
and
add
cs
adc
push
jns
popf
push
stos
cmps
ret
je
iret
sbb
scas
adc
inc
xchg
mov
mov
(bad)
scas
aaa
mov
xchg
stos
popa
inc
dec
mov
xchg
sub
and
mov
or
xor
(bad)
pop
push
sbb
or
iret
cli
and
js
popa
xchg
cmp
mov
ror
xor
xor
addr16
sub
ins
inc
pushf
dec
cli
dec
pop
loopne
and
dec
mov
imul
inc
cmps
cwde
loope
(bad)
pop
push
adc
jne
cmc
and
mov
cmp
mov
mov
(bad)
movs
(bad)
int
ins
shl
pop
inc
mov
push
(bad)
call
cmp
cdq
pop
iret
jle
jb
test
xor
outs
test
and
lods
clc
sbb
fidiv
mov
cmp
into
cwde
mov
xor
aas
cmp
movs
xor
cmps
imul
loope
iret
mov
inc
sub
ins
adc
adc
daa
daa
aam
mov
cmps
outs
sub
pop
out
push
ds
iret
jl
pop
test
mov
dec
xchg
push
(bad)
push
cmp
mov
lds
inc
hlt
or
or
sbb
pop
js
kunpckwd
jae
push
loop
fcomp
sbb
fiadd
jp
sub
pop
push
lahf
inc
push
imul
das
out
in
mov
sbb
pop
sbb
mov
pop
ins
aam
jecxz
sub
pushf
push
hlt
mov
or
jecxz
xchg
nop
inc
xchg
in
xor
popa
mov
call
xchg
push
jno
pop
xor
repz
adc
xor
in
jns
jge
dec
and
add
mov
retf
jnp
mov
shl
loopne
push
test
sbb
mov
add
mov
cmp
pushf
and
xor
outs
fucomi
leave
loope
inc
imul
adc
sahf
shl
inc
in
ret
mov
into
ja
les
mov
std
and
call
push
aad
pop
sbb
sub
fistp
cmc
dec
jb
push
arpl
rcr
jne
adc
repnz
out
icebp
jmp
test
push
in
fnstenv
mov
jl
mov
(bad)
push
inc
inc
mov
dec
mov
jne
push
in
pop
aam
fldcw
retf
push
xchg
pop
imul
cwde
clc
scas
inc
in
sub
push
sar
push
xor
cli
xor
mov
push
rcl
aam
mov
mov
sbb
adc
sub
add
jmp
dec
cmp
xchg
xchg
adc
lods
mov
sti
hlt
mov
int3
pop
repz
push
cld
shr
inc
jb
mov
sar
sbb
in
sahf
sar
push
add
ins
lods
rcr
test
and
push
(bad)
pop
stc
xor
mov
fcom
cmp
add
cdq
pop
and
push
xor
jmp
movs
mov
mov
popa
das
and
pop
movs
push
retf
mov
sbb
cmps
out
cmp
pop
cmp
and
gs
sub
push
addr16
pop
mov
je
loopne
inc
cdq
jo
jecxz
mov
add
out
mov
push
push
retf
inc
std
mov
inc
jle
mov
xchg
std
mov
in
xchg
lea
pop
adc
mov
data16
jge
lds
das
xchg
(bad)
jae
mov
or
jnp
adc
mov
out
xchg
inc
pop
sub
mov
pop
cmp
jo
daa
push
rcl
jl
and
fwait
jmp
dec
pop
inc
pop
cmp
mov
sub
call
mov
push
jbe
dec
repz
adc
(bad)
pop
jbe
popa
jge
jmp
sbb
std
cmp
xchg
jnp
mov
stc
mov
in
mov
sbb
pop
xchg
or
jno
push
stos
add
test
lods
jg
jb
test
(bad)
std
adc
mov
xchg
jecxz
ret
jmp
sti
clc
pop
in
leave
jmp
dec
loopne
rcl
gs
ds
pop
cmps
mov
mov
sahf
jle
fcmove
(bad)
repz
ret
cmp
shl
jbe
iret
xchg
ds
mov
inc
int3
dec
xchg
mov
inc
sub
sub
pop
pop
aas
dec
mov
(bad)
std
popf
jl
add
in
sbb
imul
xor
sbb
stos
xchg
dec
sub
into
adc
or
push
es
test
fisttp
loopne
fs
xor
add
xor
loopne
inc
in
call
mov
loop
lods
push
dec
jmp
sti
push
out
sbb
mov
mov
(bad)
cli
dec
mov
(bad)
(bad)
dec
mov
loop
dec
xor
ficomp
mov
popf
push
mov
lock
fsubr
add
aas
cld
adc
xor
jp
pop
fucomip
test
xor
push
cmp
scas
or
loopne
jbe
in
test
aas
and
repz
ins
or
pop
out
ret
xchg
xor
stc
add
jne
in
dec
add
cmp
xchg
or
xor
push
sar
in
inc
mov
clc
jns
daa
(bad)
das
loope
xor
nop
mul
icebp
cld
mov
pop
jp
cmp
test
lds
add
and
cmc
mov
test
add
out
jb
lods
out
mov
sub
lock
jo
inc
loop
sub
jmp
mov
gs
mov
sub
test
jno
retf
inc
retf
and
fs
lahf
lods
test
dec
rcl
push
loope
mov
int
jg
retf
and
and
or
mov
jle
cs
cli
cmps
je
loop
inc
jp
lock
mov
data16
pop
xor
(bad)
nop
outs
call
jns
mov
jbe
dec
ins
imul
scas
push
cmc
mov
xchg
and
lods
es
ins
cs
and
lahf
imul
jg
bound
mov
jno
pop
add
push
add
pop
jecxz
pop
ficomp
test
repnz
pop
pop
pop
(bad)
fisttp
mov
cmp
(bad)
fs
retf
push
int3
xchg
push
inc
mov
popa
enter
dec
pop
(bad)
std
jle
xchg
xchg
jmp
xchg
(bad)
call
int3
mov
jge
call
cmp
add
call
call
inc
(bad)
jmp
mov
fwait
or
mov
add
push
sub
sub
inc
xor
call
cmp
push
mov
lds
push
and
retf
ss
mov
lahf
sub
inc
mov
xchg
dec
jg
push
push
sub
jge
out
sub
inc
fist
hlt
jge
pop
jl
mov
fidivr
in
scas
adc
mov
jl
stos
jp
fwait
mov
imul
or
jnp
repnz
pop
outs
test
or
arpl
icebp
aas
dec
jl
or
inc
jbe
jnp
mov
xchg
sbb
push
movs
mov
(bad)
call
mov
xlat
adc
and
adc
shl
in
jmp
xchg
mov
jmp
add
jae
xor
dec
clc
call
inc
mov
push
cmp
(bad)
mov
loope
mov
call
jne
mov
retf
adc
adc
std
cs
mov
adc
xor
and
lods
jp
loope
gs
pushf
(bad)
adc
sbb
(bad)
sbb
xchg
inc
jns
mov
xor
sub
test
inc
pop
inc
jns
adc
scas
leave
cmc
mov
mov
inc
mov
inc
adc
add
push
(bad)
aaa
es
rcr
adc
xor
(bad)
cmp
fist
das
aam
sbb
xchg
pop
and
lock
(bad)
and
sub
cmp
test
jno
adc
jnp
mov
leave
out
fst
in
and
jbe
ret
pop
hlt
mov
inc
inc
clc
test
fwait
mov
xor
mov
sub
into
xchg
jae
call
adc
pop
sub
mov
mov
sahf
pop
retf
push
adc
push
or
inc
fwait
jbe
xchg
loopne
inc
push
xchg
mov
iret
pusha
dec
push
out
push
sahf
(bad)
mov
lods
xor
and
retf
jmp
mov
lds
and
push
mov
leave
(bad)
lods
outs
aad
pop
into
hlt
adc
add
adc
shl
iret
fistp
adc
ds
enter
nop
retf
sti
loopne
jno
pop
sub
int
xor
sub
sbb
shr
clc
xor
pop
jns
mov
and
cwde
in
jecxz
fidivr
test
sbb
cmc
xor
rcl
pop
inc
jno
mov
loopne
loop
and
cmp
ja
add
out
and
out
or
fisttp
popf
scas
sub
out
sysenter
xsaveopt
popa
mov
fsub
test
and
fsubrp
stos
or
mov
(bad)
jmp
cmp
push
xchg
push
ins
cmps
sti
sbb
ss
cmp
mov
cmp
hlt
(bad)
lock
jge
cmps
cmps
mov
mov
test
jge
cmp
fwait
mov
and
jae
rol
dec
pop
daa
or
mov
and
sbb
in
push
sbb
fucom
movs
push
fld
and
mov
cmp
(bad)
mov
adc
and
paddusb
xchg
(bad)
xor
sub
fst
push
inc
popa
aaa
test
and
jns
and
sub
scas
je
mov
push
mov
je
fldcw
dec
movs
push
stc
push
fs
call
scas
test
jle
dec
pop
pop
dec
xchg
pop
sbb
add
add
neg
sub
ds
test
scas
dec
or
jae
adc
call
adc
or
mov
and
xchg
jle
mov
mov
(bad)
mov
repz
cdq
push
je
cs
sahf
retf
pushf
mov
add
mov
or
js
movs
xlat
push
icebp
pop
sub
(bad)
mov
cli
jo
jbe
les
(bad)
jns
sbb
inc
cmp
push
mov
push
pop
sub
mov
aas
or
sti
xchg
xor
mov
imul
inc
arpl
cmps
xor
lea
adc
sti
lock
push
je
ret
call
dec
lahf
in
xchg
mov
mov
dec
std
add
imul
mov
push
inc
and
jg
jo
pop
sbb
clc
xor
outs
dec
dec
add
daa
adc
sahf
movs
cmp
mov
(bad)
aas
sub
xor
mov
mov
and
les
push
es
xchg
dec
mov
(bad)
mov
dec
mov
sub
jno
xchg
inc
add
jp
add
jnp
jae
mov
adc
cmp
jecxz
in
add
jmp
xchg
gs
add
xor
pop
std
ret
add
inc
in
ret
mov
outs
mov
enter
xchg
add
push
lahf
cmp
test
push
mul
mov
pop
retf
mov
sbb
dec
js
add
mov
add
ret
ds
out
inc
jp
jb
or
xor
pop
dec
and
lods
push
repz
jp
test
mov
push
jae
neg
jmp
je
sahf
push
add
mov
push
mov
inc
arpl
mov
push
jmp
cwde
(bad)
lahf
mov
inc
clc
scas
xchg
call
jno
jnp
or
(bad)
mov
lahf
gs
jae
ret
ss
pop
jns
addr16
dec
xchg
retf
mov
js
xchg
scas
scas
jmp
scas
call
out
daa
xchg
cli
cmp
rcl
mov
cld
jb
add
es
inc
test
inc
shl
push
out
and
ins
and
inc
xor
push
xchg
sub
and
mov
adc
les
lea
mov
push
and
je
jp
xor
xor
in
jmp
ffree
mov
push
add
shr
bound
stc
scas
mov
push
sub
lods
jg
and
sub
push
stos
bound
mov
mov
xchg
cmp
sub
jge
pop
xor
jno
(bad)
jbe
adc
cdq
cs
jne
inc
adc
mov
in
sub
repnz
out
rcr
or
xchg
inc
ret
add
loop
cmp
stos
jno
lock
and
fwait
into
push
ja
jge
add
scas
sub
call
jle
cmp
jle
cdq
dec
mov
(bad)
jle
or
in
cmp
jmp
es
cli
data16
arpl
mov
inc
pop
dec
ins
pop
inc
xor
pop
test
je
mov
or
pushf
aad
adc
sbb
xor
call
mov
push
mov
dec
mov
dec
dec
repz
int3
sub
daa
cmps
mov
paddd
fwait
adc
push
imul
xchg
jmp
into
sub
push
cli
mov
int3
gs
ja
and
mov
fldcw
jle
adc
xor
mov
test
and
or
cld
xchg
xor
data16
leave
mov
in
jmp
test
dec
imul
cdq
and
and
mov
lfs
push
mov
popa
cs
inc
neg
fdiv
dec
jmp
adc
mov
sub
out
les
ficom
lea
repnz
iret
jp
sbb
inc
in
retf
clc
add
lds
and
mov
cmp
je
sbb
stos
cmp
inc
rol
(bad)
dec
push
test
and
xchg
ins
hlt
push
xchg
fadd
inc
in
pop
adc
test
aas
inc
dec
in
dec
or
xchg
movs
xchg
push
sti
(bad)
lods
cmp
enter
jmp
xchg
pop
mov
sbb
mov
popf
mov
push
and
ss
(bad)
mov
or
cmp
mov
int3
xor
frstor
xchg
fcmovbe
lahf
cmp
mov
sbb
push
retf
push
cwde
dec
or
pop
pop
cmp
or
ret
jg
push
dec
stc
dec
jmp
lods
inc
and
xchg
mov
dec
leave
and
mov
add
aaa
xchg
test
jmp
pop
lahf
jp
inc
stos
scas
daa
and
int3
mov
ret
mov
dec
add
mov
mov
xor
call
mov
ret
dec
fs
repz
fstp
fwait
jne
xchg
in
xchg
je
test
ins
add
loope
mov
mov
outs
repz
test
pop
or
xor
xor
mov
xchg
mov
and
mov
cdq
icebp
(bad)
aaa
daa
movs
sub
jmp
or
cwde
icebp
jnp
mov
sbb
add
js
dec
scas
add
pop
xchg
adc
push
and
jnp
xchg
adc
nop
xor
ins
retf
xor
adc
cmp
lea
outs
daa
sbb
in
retf
adc
add
push
(bad)
pop
cdq
ins
inc
test
retf
jmp
jp
cs
jns
jno
mov
hlt
and
sub
add
jbe
test
movs
or
cmp
and
add
jge
out
dec
sar
test
popa
cs
lahf
jae
mov
dec
out
test
dec
xchg
fstp
adc
clc
fldz
jmp
or
aad
inc
push
inc
mov
ror
push
scas
or
enter
push
pop
(bad)
adc
call
xchg
pop
pop
mov
out
in
and
xchg
cmps
xchg
les
dec
and
pop
xor
sar
cs
sub
jp
add
div
push
adc
sbb
mov
jmp
push
jb
push
mov
out
stos
aad
sub
fidivr
dec
or
xor
dec
pop
pushf
mov
jge
(bad)
jo
enter
ds
adc
outs
xchg
xor
call
in
xchg
xchg
mov
push
sbb
call
cld
fmul
jge
scas
movs
loope
sbb
ds
mov
(bad)
lods
push
mov
xor
jno
dec
stc
ss
or
or
popf
xor
pop
mov
adc
pop
mov
fstp
call
lock
sti
sbb
(bad)
and
jo
mov
xchg
cwde
cwde
aad
aas
ret
sti
jns
(bad)
jnp
adc
loope
jg
add
movs
inc
jmp
adc
fdiv
int
test
xor
xchg
(bad)
int3
or
add
lea
and
mov
mov
in
lds
mov
stos
loop
mov
fstp
imul
icebp
shl
add
rep
fwait
mov
jge
jbe
outs
pop
stos
lea
retf
mov
push
xchg
or
cwde
dec
adc
mov
mov
push
jmp
push
or
mov
jl
dec
dec
stc
mov
repz
jo
xchg
jmp
xchg
push
fidivr
arpl
loop
xchg
jne
popf
into
out
pop
movs
mov
jmp
aad
lock
jmp
in
and
or
rcl
jbe
sub
(bad)
mov
push
outs
push
and
outs
fisttp
call
push
clc
das
mov
add
cmp
ror
sub
jecxz
popf
inc
ret
(bad)
pop
mov
lock
rcr
mov
sub
fwait
cld
adc
ss
test
outs
mov
aam
fwait
xchg
mov
test
jle
clc
stc
rcr
sub
in
rcl
and
mov
jg
loopne
cmp
scas
dec
ins
(bad)
jg
movs
shr
shl
xchg
(bad)
push
add
iret
lods
loope
inc
data16
push
call
outs
xor
test
jnp
scas
les
lahf
adc
sar
(bad)
bndldx
mov
dec
mov
js
pop
inc
fs
mov
mul
loope
push
xchg
jmp
pop
imul
push
neg
jecxz
cli
outs
inc
(bad)
inc
sbb
je
fcmovu
mov
jl
dec
xchg
(bad)
out
popf
dec
adc
sbb
popf
or
mov
out
jns
push
fld
les
scas
jnp
ins
pop
pusha
loop
lea
add
jnp
sbb
jbe
sub
outs
ret
mov
mov
pop
xor
cmp
pop
test
in
std
mov
and
xor
mov
jmp
loopne
cwde
imul
mov
dec
inc
xchg
push
push
and
or
icebp
adc
cmc
dec
xor
xchg
xor
test
mov
pop
or
pop
pop
mov
mov
es
fbld
fsub
pop
dec
adc
ret
xchg
sub
inc
xlat
jno
xchg
test
mov
movs
(bad)
sbb
lahf
inc
xor
jnp
sbb
or
out
jg
stc
pop
lods
jl
sahf
(bad)
gs
jl
adc
fbstp
iret
scas
mov
jg
xor
push
and
cmps
cmp
pop
in
shl
or
sub
xchg
out
jbe
clc
loop
aam
jo
adc
inc
mov
xchg
mov
cmc
jae
lods
jmp
(bad)
outs
mov
push
inc
(bad)
leave
sub
xchg
aaa
jns
ins
jl
jmp
adc
(bad)
test
into
adc
dec
xchg
mov
les
movs
iret
dec
lahf
sub
cdq
lods
pushf
cdq
call
loopne
mov
gs
shr
inc
push
rol
mov
and
movs
xchg
pop
and
sub
add
push
cmp
enter
shl
pop
xchg
xor
sbb
aaa
push
xor
sub
xchg
int
and
sub
jg
xchg
push
leave
popa
stos
mov
cwde
in
mov
ins
ret
(bad)
jmp
(bad)
cmp
or
sbb
xor
or
and
mov
out
fbld
paddq
es
cmp
sub
dec
and
adc
push
xchg
mov
mov
iret
cmp
pop
adc
das
adc
push
imul
rcl
int3
xor
and
dec
arpl
fwait
push
call
sub
pop
inc
idiv
in
mov
jo
das
jecxz
dec
mov
fild
fmul
mov
push
or
sub
mov
mov
jl
push
xchg
or
adc
or
and
jg
xchg
dec
arpl
push
mov
xor
fldcw
gs
jle
mov
jno
mov
jbe
adc
call
arpl
xchg
jb
repz
add
push
fidivr
mov
xor
sub
jl
in
xchg
mov
aaa
xor
jns
pop
mov
sbb
cs
mov
cwde
ins
inc
(bad)
sar
out
outs
sti
fdivr
or
inc
mov
cmc
push
ucomiss
movs
scas
pop
loope
test
jo
adc
mov
cmp
and
push
mov
aam
fwait
sub
dec
inc
imul
mov
pop
dec
hlt
cmc
ret
cld
jle
pop
cmp
shl
cmp
mov
(bad)
mov
push
mov
mov
xchg
cdq
pop
jb
nop
push
jno
push
jl
jmp
push
xor
in
cmp
shr
sbb
mov
or
aad
repz
cdq
dec
int3
adc
test
and
xchg
xchg
fwait
lods
inc
adc
sub
mov
outs
cmp
sar
pop
repz
iret
cmps
std
retf
and
enter
sbb
in
(bad)
sar
fs
adc
push
sub
push
rcl
cmps
dec
xor
fdivrp
sbb
sub
scas
inc
test
in
jnp
mov
jge
pusha
cmp
xchg
add
test
(bad)
jp
jo
xor
xchg
in
lock
jne
stos
or
mov
mov
add
les
imul
bound
call
push
jge
mov
pop
cli
cmp
shr
mov
call
ror
mov
adc
arpl
jbe
dec
sbb
movs
dec
cmp
sub
scas
cmp
fcomp
push
sbb
out
inc
ins
fisttp
mov
push
fcmovb
jg
cmp
mov
aas
shl
push
les
inc
xchg
out
(bad)
bound
bound
test
xor
lods
xchg
adc
ret
mov
sbb
jle
rcl
out
xor
sar
cmp
ins
add
stos
cs
cmps
xor
sub
out
jb
outs
js
inc
cmps
icebp
fchs
movs
sbb
add
xor
bound
ja
push
xor
mov
push
ins
scas
sbb
sbb
inc
ja
call
dec
dec
pop
inc
xchg
dec
pop
push
loopne
rcr
pusha
jmp
minps
mov
xchg
cdq
cwde
mov
mov
cmp
add
ss
rcr
aam
dec
and
jp
lds
sub
or
sub
mov
repz
dec
retf
jp
push
xor
mov
xchg
aad
stc
stc
sub
sub
les
cmps
movs
inc
adc
jmp
mov
jecxz
push
in
addr16
dec
les
inc
in
rcl
mov
fisttp
or
push
(bad)
pusha
or
sti
jle
repnz
jp
xor
dec
pop
call
or
leave
or
sub
aaa
out
dec
(bad)
cld
xchg
jmp
cmc
or
xlat
cmp
jp
push
sbb
jae
cli
neg
xchg
add
mov
lods
adc
push
push
mov
dec
jecxz
dec
scas
sub
out
fbstp
adc
div
sbb
movs
jae
sub
retf
mov
(bad)
dec
loope
movs
xlat
shl
shr
mov
shl
xor
xchg
dec
inc
add
stc
jne
js
out
adc
pop
jbe
jmp
push
and
jp
xchg
loop
adc
out
jnp
sbb
outs
jl
call
sti
jo
inc
pop
mov
iret
inc
fs
cmp
mov
(bad)
mov
loop
push
jmp
test
xchg
mov
and
sub
int
push
cmp
mov
xor
aas
aaa
or
and
sub
das
shl
les
fwait
xchg
xor
(bad)
jmp
mov
sub
stc
cli
inc
sub
sti
jns
cmc
aam
dec
loop
mov
pop
push
xor
push
xchg
inc
ja
mov
arpl
adc
in
arpl
jno
and
lahf
inc
or
xor
sahf
or
lahf
stos
sub
mov
mov
cmps
inc
js
and
jnp
adc
push
ret
imul
sbb
add
jb
lods
in
int3
stc
stc
or
outs
cmps
dec
(bad)
les
fidivr
lock
xor
rcl
call
(bad)
loopne
fnstcw
sub
aad
jno
xor
or
dec
mov
xor
cmp
test
jnp
pusha
sub
xchg
(bad)
push
mov
leave
aas
(bad)
lock
push
fwait
in
outs
ficomp
outs
retf
add
jle
pop
aaa
push
rol
xchg
sbb
int3
call
data16
int
jne
and
mov
lea
add
sar
pop
movs
call
jnp
jns
sub
mov
into
test
in
push
adc
jne
sahf
dec
push
outs
xchg
sahf
pusha
xchg
aas
add
jbe
add
push
add
adc
cld
popa
pop
xchg
push
out
in
and
clc
jne
and
in
shl
das
push
adc
cs
stos
cmovb
sub
scas
or
je
je
retf
jb
nop
push
pushf
aaa
pop
cwde
test
in
jae
inc
in
pop
mov
add
ja
sbb
inc
outs
mov
int
test
dec
adc
int
push
(bad)
ja
dec
or
jecxz
hlt
out
push
mov
outs
scas
mov
cmp
or
sbb
jg
ret
call
movs
mov
cdq
mov
xor
jecxz
jle
cmp
ja
icebp
mov
jb
pop
mov
sub
shl
loopne
push
and
lock
idiv
fdivr
cmp
mov
lahf
popf
into
fisttp
pop
loopne
loop
out
dec
imul
ins
or
ins
ds
adc
mov
in
mov
test
inc
les
add
pop
lods
test
cmps
xchg
loopne
xor
or
bswap
adc
imul
(bad)
inc
cld
ins
cmp
sar
or
in
in
push
arpl
sub
cmp
rcl
cmps
stc
(bad)
mov
ja
mov
push
and
pop
out
cmp
mov
cdq
mov
jne
inc
retf
cmp
mov
cwde
mov
in
mov
add
test
fndisi(8087
mov
pop
data16
mov
dec
mov
cwde
pop
mov
in
xchg
mov
mov
jne
push
add
enter
mov
movs
xchg
mov
sti
jl
sbb
movs
js
pop
xor
shl
call
ror
xor
jns
mov
push
push
mov
dec
dec
dec
or
cmp
xchg
or
pop
sar
mov
iret
xor
sbb
adc
mov
push
dec
ins
mov
jp
call
add
adc
aas
test
in
sub
cmps
ss
add
add
pusha
xor
pop
pop
ret
jp
push
sub
fdiv
mov
dec
in
jno
cmps
dec
lock
inc
je
jmp
xchg
call
inc
pushf
div
xchg
mov
sub
cmp
test
mov
dec
js
xlat
aad
mov
fwait
test
imul
outs
push
jg
jns
fadd
and
mov
xchg
xchg
push
pop
ds
or
clc
jae
pop
and
mov
adc
ds
ret
inc
inc
ror
cmp
retf
add
sbb
aam
loop
jbe
cld
das
add
and
mov
call
outs
cdq
into
jns
cmp
mov
int
aad
(bad)
sbb
nop
push
ds
ins
test
mov
(bad)
xchg
pop
dec
push
cld
push
imul
mov
pop
inc
or
call
(bad)
hlt
xor
adc
test
idiv
jae
fild
enter
pop
cmp
and
pop
jb
aaa
push
add
fdiv
dec
mov
hlt
ins
in
repz
dec
push
pop
lea
into
js
xchg
pop
xor
xchg
sbb
in
add
call
daa
sub
adc
(bad)
push
(bad)
mov
nop
stos
xor
ss
pop
test
jbe
shl
pop
cmp
cmc
xchg
jo
out
mov
cs
cdq
mov
cli
stos
div
cmc
sbb
enter
mov
mov
or
fsub
retf
xor
adc
xor
mov
push
jb
fstp
add
gs
in
std
(bad)
jne
popf
adc
add
imul
sub
pop
cli
mov
or
sahf
ins
movs
xor
push
jns
pusha
loop
(bad)
test
cdq
fld
stos
cli
dec
int
fcmovnu
out
mov
pop
inc
sbb
(bad)
aad
arpl
xchg
movs
jmp
sub
cs
mov
popf
lods
inc
int
addr16
jns
add
mov
neg
sub
jmp
(bad)
cwde
fnsave
stc
rcr
lods
ret
mov
and
add
popa
inc
fiadd
mov
dec
lods
xor
ja
xor
bnd
mov
into
inc
pop
mov
xor
mov
push
cmp
add
stos
shl
and
fwait
hlt
pop
ror
mov
sub
dec
movs
push
xrelease
xor
stos
jae
push
sbb
call
movs
cmp
mov
retf
xor
xchg
and
or
int
xor
jg
test
jl
aaa
int3
out
ins
sbb
in
push
les
mov
mov
pop
mov
push
stos
(bad)
jns
xor
imul
add
test
mov
pmulhuw
mul
popa
mov
les
cmp
jno
mov
sbb
and
xchg
sbb
and
cmp
nop
cli
into
mov
mov
out
mov
in
add
mov
mov
cmc
mov
add
js
jbe
mov
cld
popf
movs
fbld
push
jmp
ss
push
cmp
std
push
int
sbb
or
jmp
cdq
mov
sub
cmp
ret
das
push
jle
and
inc
dec
lods
mov
push
xchg
cmc
scas
mul
jnp
jl
cmps
loop
xchg
pusha
add
cmp
inc
push
enter
inc
or
push
call
sbb
and
lea
or
outs
xchg
or
(bad)
push
cdq
jae
cdq
movs
push
stos
adc
setbe
cwde
cmc
fwait
fwait
loopne
pop
inc
(bad)
mov
sbb
pop
add
shl
repnz
dec
lahf
iret
push
and
xor
shl
arpl
mul
inc
in
and
dec
mov
lods
pop
xchg
jmp
and
(bad)
kandw
std
cli
test
std
jnp
test
test
cmp
movs
lea
cld
xor
mov
outs
xchg
clc
push
(bad)
leave
or
cmp
fisttp
and
shl
add
push
or
js
sbb
and
test
ds
sahf
cdq
cld
jno
mov
push
imul
cmp
dec
mov
sbb
dec
call
cmps
adc
and
loopne
inc
xchg
fistp
in
cld
ret
xchg
sbb
pusha
xor
push
sahf
add
movs
mov
ffree
fst
pop
mov
sbb
mov
or
addr16
test
and
mov
call
fwait
cmc
sbb
lods
pop
aas
pop
pop
lods
dec
cmp
sub
pop
popa
and
mov
je
das
call
cmp
jg
adc
xor
ss
(bad)
xchg
mov
jne
mov
(bad)
repz
out
inc
push
movs
lods
jg
xchg
rep
dec
mov
jbe
inc
xor
sbb
adc
cmps
lock
add
or
movs
jp
xor
add
jmp
and
add
push
in
mov
(bad)
jo
daa
cld
(bad)
fisubr
add
rcl
addr16
and
mov
cmp
out
inc
movs
ja
add
movs
aas
and
xor
addr16
call
xor
mov
push
sub
xchg
inc
mov
stc
arpl
xchg
dec
add
adc
jg
jns
popa
das
xor
hlt
sub
test
aad
cmp
sbb
jl
shr
test
mov
and
imul
pop
loope
pop
daa
mov
mov
ja
jmp
xchg
jnp
daa
adc
cmps
fisub
aad
push
inc
and
adc
and
cmp
lods
stos
leave
popf
inc
fistp
xchg
adc
mov
dec
pushf
or
into
cmp
mov
pusha
pop
repz
(bad)
stc
div
pushf
out
inc
pop
jo
sar
cmc
daa
aaa
dec
loope
ret
fmul
retf
xchg
aad
add
stc
scas
call
pop
shr
dec
(bad)
jbe
(bad)
mov
xlat
in
add
or
test
mov
cmp
mov
push
addr16
xor
or
int3
shl
xor
jp
sub
inc
xchg
pop
mov
push
ins
out
sbb
fwait
adc
and
popa
mov
cs
popa
push
pop
or
ret
fstp
in
sahf
cmps
out
in
xchg
pop
dec
ret
mov
push
stos
(bad)
push
jno
push
mov
xor
cmp
dec
addr16
das
movs
ja
or
fwait
dec
(bad)
ss
in
mov
mov
dec
xchg
pusha
imul
jo
adc
int
pop
clc
ret
mov
dec
push
jl
jmp
rcr
je
pop
mov
mov
retf
xchg
inc
xor
hlt
or
sbb
ja
dec
loop
test
fisttp
sub
inc
push
data16
sub
stos
call
jecxz
mov
cmps
iret
cdq
movs
push
icebp
shr
fs
add
test
xchg
imul
sbb
aad
dec
test
stos
daa
add
jl
sbb
add
leave
mov
jle
cmp
outs
out
pop
cmp
retf
jbe
jae
mov
pop
outs
inc
lahf
rcl
dec
xor
mov
push
scas
int
cmc
jb
adc
dec
aaa
jecxz
imul
imul
(bad)
iret
lods
aas
test
and
lahf
push
stos
ss
js
icebp
push
mov
movs
stos
or
lods
ret
push
inc
test
lea
and
pushf
lods
js
inc
jp
xchg
add
test
ret
mov
jmp
je
cmp
push
dec
call
popa
fwait
sub
jg
push
cmp
sub
jno
sub
or
pop
jle
test
pusha
mov
mov
out
push
in
mov
mov
jne
pop
nop
lds
inc
fwait
bound
out
jg
sbb
fdiv
int
add
(bad)
mov
mov
les
popa
jo
pop
push
pop
loop
or
out
ins
mov
fisub
pop
inc
stos
ss
sbb
inc
mov
push
mov
jbe
shr
(bad)
add
data16
xchg
ss
mov
or
xchg
loopne
aaa
outs
jge
adc
pop
mov
and
retf
pop
sub
and
xchg
shr
xchg
nop
jmp
jmp
add
or
mov
repz
cmps
pop
in
push
push
movs
stos
imul
test
mov
xor
addr16
jnp
cmps
pusha
sbb
push
lock
mov
sub
and
adc
sbb
or
lods
pop
push
retf
mov
shr
fcmovb
or
jnp
cmp
rcl
mov
jmp
cmp
int
sbb
mov
dec
mov
ret
in
xchg
or
fs
popf
mov
sub
in
sahf
pushw
pushf
arpl
xchg
inc
or
xor
(bad)
in
jle
bnd
sbb
call
cmps
fisttp
sub
mov
sti
ds
popa
fsub
test
sbb
mov
mov
imul
stos
sub
xchg
mov
xchg
ret
dec
cdq
adc
inc
add
cmp
not
in
cli
mov
ja
lahf
ud0
fucom
shr
imul
and
into
pop
fidiv
imul
adc
push
fs
push
dec
push
cmps
xor
mov
pop
movs
ins
int3
ficomp
(bad)
fsubr
and
dec
xchg
lods
or
xor
mov
push
(bad)
cmps
(bad)
ret
jp
iret
or
and
add
movs
inc
stos
mov
inc
sbb
sbb
stos
lock
mul
xchg
ja
mov
pminsw
mov
mov
ss
adc
fld
xchg
or
pop
pop
adc
fdivr
jnp
in
repz
sub
and
mov
int
inc
dec
out
lods
test
xor
mov
test
xchg
or
xchg
std
cs
js
fwait
aaa
inc
xor
push
mov
stos
cmp
ins
inc
ins
sbb
psubq
stos
xor
aas
popf
dec
and
jmp
ret
xor
sub
xor
lods
iret
data16
leave
fild
jb
cld
mov
mov
pop
or
js
pop
movs
jmp
lods
mov
neg
out
je
cdq
ja
loopne
sub
add
daa
idiv
dec
jb
clc
and
movs
or
push
or
xor
adc
sub
fsubr
int3
mov
push
(bad)
bnd
xor
pop
popa
mov
xor
add
mov
ss
push
pop
xchg
and
fiadd
mov
lock
push
fsubr
sbb
push
add
or
mov
retf
and
stos
popa
inc
or
pop
data16
fcmove
cmp
rdtsc
(bad)
lock
into
and
sti
mov
adc
out
fst
mov
mov
push
inc
jl
in
fstp
mov
icebp
mov
mov
in
fsubr
in
add
mov
inc
imul
fist
lock
iret
cli
sahf
leave
cdq
or
pop
jb
or
lock
je
and
lock
xchg
mov
lods
test
xor
sbb
shl
push
mov
mov
mov
pop
sbb
fmul
cmp
jnp
mov
test
push
clc
in
mov
dec
jb
inc
xchg
call
inc
fidivr
push
test
xchg
pop
sbb
das
icebp
rol
cmc
mov
ins
leave
js
push
in
sbb
dec
aam
sbb
retfw
imul
mov
mov
sbb
(bad)
je
cmp
jl
jp
xchg
lods
pop
dec
lahf
neg
mov
dec
jne
arpl
mov
(bad)
fcomi
mov
mov
(bad)
aad
das
mov
ja
hlt
cmps
test
jo
pusha
rcl
xchg
and
mov
arpl
inc
pop
adc
bound
icebp
push
test
pop
lods
cwde
(bad)
jmp
imul
scas
ja
add
cmp
mov
jg
jns
or
fiadd
dec
xor
shl
sbb
mov
add
adc
sti
jns
and
scas
and
cli
out
popf
and
shr
vpxor
sub
mov
sbb
and
into
push
das
mov
fs
push
cmc
rcl
stos
mov
cs
cmc
mov
pop
test
mov
sbb
add
test
add
lods
(bad)
nop
stos
pusha
xchg
pop
je
out
adc
inc
retf
call
xor
imul
mov
fimul
push
and
(bad)
sbb
movs
mov
inc
mov
dec
mov
jae
mov
inc
sub
cmps
leave
jb
adc
push
jmp
sub
sub
(bad)
(bad)
inc
mov
sahf
push
mov
add
call
cli
inc
mov
mov
add
adc
scas
mov
ja
(bad)
leave
add
push
jp
mov
inc
in
nop
or
pop
out
cmp
push
loop
adc
std
xor
addr16
(bad)
in
(bad)
addr16
or
nop
fst
sbb
xchg
push
imul
xor
fwait
ror
inc
jmp
xchg
xchg
push
out
fisttp
xor
fadd
dec
mov
out
ss
push
jo
jb
or
add
dec
jp
imul
dec
popa
scas
mov
or
aad
and
inc
int
inc
add
dec
std
add
mov
das
push
stos
xchg
mov
add
stos
hlt
cmp
and
shl
int3
add
fiadd
loop
int3
out
pop
stos
jmp
std
and
pop
inc
out
xchg
lods
sti
adc
test
(bad)
and
xor
xor
emms
shl
mov
sbb
out
cmp
pop
js
and
mov
mov
sahf
es
outs
cmp
repz
jmp
stc
ror
adc
jmp
pop
dec
sar
pop
push
(bad)
pop
dec
shl
and
enter
or
jo
mov
mov
xchg
and
mov
sbb
jmpw
and
retw
pop
sahf
loop
add
xor
jl
retf
push
repnz
out
stos
sub
int
jb
popf
pop
scas
or
shl
repnz
sub
add
push
add
pop
gs
xor
loop
mov
stos
mov
jecxz
mov
dec
sub
sbb
iret
fisub
adc
movs
daa
out
int
xlat
cmp
jb
and
jb
div
sub
lods
sbb
test
outs
js
mov
(bad)
cmp
xchg
or
stos
retf
std
and
dec
stos
sbb
jg
cwde
enter
sub
mov
cmp
adc
cmps
cmp
fild
test
mov
and
mov
sub
mov
lods
pop
mov
push
mov
fimul
fidiv
cmp
daa
sub
push
lods
mov
lods
sub
dec
arpl
movs
in
gs
loope
pslld
out
in
je
pop
popa
dec
popf
popf
jbe
mov
mov
xchg
das
bound
sti
jo
pop
xchg
mov
call
xchg
cli
mov
inc
fstp
test
jle
jmp
adc
mov
xchg
jl
(bad)
fcomp
sbb
adc
cwde
jae
add
mov
(bad)
cwde
pop
push
mov
fdiv
jne
into
aas
gs
daa
lea
enter
mov
adc
cmps
inc
sbb
mov
ret
(bad)
movs
and
adc
ror
rcr
push
adc
fidivr
dec
pop
pop
adc
push
popa
fild
(bad)
addr16
push
arpl
sub
sub
jb
shl
xchg
mov
jae
xor
mov
data16
bnd
stos
jmp
push
or
inc
adc
mov
inc
fcom
jnp
dec
inc
aas
add
pop
push
aaa
jbe
movs
popf
mov
movs
fs
mov
idiv
lock
jae
(bad)
in
(bad)
cmps
rcl
aas
les
add
test
test
pop
fmulp
xchg
dec
add
mov
jno
in
inc
das
popa
xor
out
enter
jle
add
cmp
adc
add
jbe
sahf
adc
jne
lea
rol
loope
scas
add
sub
test
es
sbb
inc
repz
cmc
and
inc
dec
or
xor
stc
loop
push
cmp
xor
dec
xchg
daa
jg
sbb
jo
xor
(bad)
mov
stc
mov
sbb
outs
and
cld
je
call
and
in
fnstcw
jmp
mov
mov
shl
dec
jmp
fwait
leave
xchg
push
sbb
mov
pop
sub
add
in
lea
gs
stos
in
(bad)
push
ja
xor
adc
shl
nop
xchg
or
xchg
push
repz
imul
mov
retf
pop
xchg
aad
inc
push
stos
(bad)
mov
outs
dec
retf
stos
test
(bad)
int3
dec
mov
imul
daa
sbb
sar
and
push
fist
dec
jne
mov
ret
iret
inc
outs
shl
retf
leave
cmc
aas
push
xchg
add
cmps
sub
dec
pusha
mov
cs
je
out
sbb
and
fadd
mov
push
and
push
adc
xchg
pusha
sbb
popa
mov
push
jmp
popf
dec
js
jmp
sahf
cmc
daa
sbb
xchg
adc
pop
icebp
mov
xchg
fdivp
xchg
dec
adc
stos
mov
dec
lock
mov
sahf
hlt
stc
lahf
stos
test
sbb
pop
enter
in
(bad)
(bad)
call
cmp
in
nop
xor
mov
(bad)
mov
bound
pop
mov
mov
addr16
xchg
push
jecxz
jns
ss
jae
test
and
sub
lea
popf
(bad)
sub
jl
add
mov
jl
adc
fnsave
and
test
mov
in
in
js
loopne
pushf
and
(bad)
jne
sub
ds
sub
mov
call
shr
cmp
adc
test
jnp
inc
sar
inc
xchg
inc
fcomp
enter
jae
add
loop
retf
popf
cld
and
jno
xor
das
cmp
pushf
jns
test
int3
push
ror
sub
stos
stos
mov
(bad)
mov
popf
fmul
aaa
or
cmp
iret
loopne
inc
pop
push
add
inc
cmp
ficom
stos
or
push
sbb
jge
loop
repz
sub
nop
mov
(bad)
cmps
mov
bound
(bad)
stos
cmp
or
fisub
ins
(bad)
mov
call
in
or
push
jne
cdq
mov
popa
jge
jno
sub
pop
jecxz
pop
cmp
adc
xor
sahf
or
enter
xor
addr16
in
retf
mov
movs
cmp
mov
push
sbb
mov
dec
shl
pop
and
inc
ret
outs
xchg
mov
call
dec
repnz
stos
test
xor
retf
cmp
aaa
mov
clc
les
and
mov
xor
and
xor
lds
mov
cdq
mov
xor
inc
pusha
lds
std
enter
xchg
sbb
fldcw
ins
clc
das
mov
xor
and
addr16
loopne
les
jne
fucomi
(bad)
rcr
add
(bad)
(bad)
jae
push
rcr
popf
ins
mov
jne
movs
icebp
and
jecxz
call
sub
add
xchg
test
enter
mov
das
jo
dec
fwait
sub
jge
pop
mov
frstor
mov
pop
dec
scas
(bad)
out
mov
es
xchg
hlt
push
dec
mov
es
test
repz
imul
loopne
xchg
movs
jno
cmp
pop
rcl
shl
call
inc
leave
lahf
ds
mov
es
jp
and
cmp
add
cmp
loopne
inc
sahf
clc
add
jp
stos
mov
xor
push
push
inc
fnstsw
fadd
scas
mov
pop
jecxz
pop
rcl
ret
xchg
imul
shl
bound
xchg
dec
retf
push
adc
dec
icebp
aas
jb
dec
into
ror
jecxz
movs
test
jmp
cmp
aad
ins
pop
mov
sti
mov
jae
mov
in
mov
cmp
or
test
sar
aam
add
out
dec
aam
in
scas
mov
(bad)
sbb
ret
xor
mov
clc
sti
xor
pop
add
adc
and
pushf
push
mov
and
and
hlt
or
jl
jbe
xchg
push
mov
arpl
paddusb
or
(bad)
cld
mov
in
cli
mov
stos
dec
or
in
adc
xlat
dec
in
sub
mov
xchg
pop
data16
sahf
addr16
add
push
adc
push
(bad)
loopne
arpl
or
loopne
mov
cmp
fstp
inc
xor
and
das
push
xor
lock
aam
mov
xchg
pop
fdivr
or
pop
xor
push
(bad)
and
sbb
leave
adc
inc
xchg
push
out
sbb
scas
inc
mov
addr16
push
ret
cmp
or
pushf
xchg
int3
jl
push
inc
inc
push
xchg
(bad)
cmps
dec
data16
aad
les
xor
push
addr16
nop
mov
popf
popa
mov
loop
mov
fninit
mov
pop
jns
adc
push
xchg
scas
push
sbb
and
daa
push
call
mov
and
nop
scas
dec
jmp
(bad)
xchg
adc
je
(bad)
imul
cmp
rcr
lea
inc
outs
dec
jp
inc
mov
mov
ja
push
mov
adc
arpl
adc
std
add
bound
pop
jbe
jp
mov
add
mov
and
or
jnp
(bad)
icebp
cmp
xchg
mov
nop
addr16
out
pop
lahf
or
addr16
mov
and
cdq
mov
in
stc
ficom
cmps
dec
jnp
xchg
adc
enter
mov
pop
and
add
pop
push
fist
push
sub
push
mov
test
ret
les
sub
out
data16
xor
fsub
cmp
outs
inc
mov
mov
dec
and
cmp
cwde
cmp
ja
add
in
inc
sbb
jae
loope
dec
pop
loope
into
push
ror
jmp
jb
pushf
mov
jno
xchg
push
(bad)
stos
lock
dec
(bad)
(bad)
leave
add
xchg
inc
mov
add
ja
adc
mov
in
inc
jnp
adc
clc
clc
mov
add
adc
sub
sar
cwde
imul
arpl
xor
or
mov
lods
inc
imul
retf
(bad)
pop
xor
mov
nop
xor
and
mov
cdq
sub
xchg
jb
push
(bad)
or
adc
lea
jg
mov
jecxz
enter
movs
pop
aas
popf
mov
fcom
mov
pop
jp
jp
ss
mov
sub
in
push
sub
icebp
mov
cmc
cmc
fnsave
jge
out
hlt
cmp
xor
mov
cmps
adc
or
lods
cmc
cmp
xchg
adc
xlat
sbb
ja
add
adc
sub
jo
xchg
(bad)
fistp
or
movs
push
and
outs
(bad)
dec
cmp
mov
mov
dec
push
dec
(bad)
or
rol
xor
mov
jae
mov
sbb
cmp
xor
sub
mov
outs
into
cmp
jmp
and
stos
std
sahf
or
push
or
in
cwde
dec
scas
or
xor
dec
(bad)
addr16
popf
xor
int
ror
mov
sub
cmp
fsub
aad
cmps
mov
int3
or
or
es
icebp
fwait
nop
inc
push
ja
ja
pop
xchg
in
or
jae
rol
cmp
and
cmp
arpl
push
call
jno
popa
and
int
mov
es
out
mov
inc
jge
dec
mov
fisttp
push
aaa
fisub
cmp
xchg
sbb
es
xchg
dec
dec
mov
rol
push
push
jmp
outs
mov
lock
loopne
dec
jns
fnstcw
call
jbe
add
fdiv
outs
lds
pop
add
add
mov
jmp
stos
cwde
inc
cmc
das
sbb
ret
cmp
retf
and
push
addr16
cli
das
push
mov
pusha
cwde
inc
scas
mov
xchg
and
xchg
or
add
in
jmp
xor
push
jb
fidivr
jge
mov
(bad)
pop
cmp
loope
pop
sub
repz
lea
dec
shl
mov
cs
sub
inc
add
in
mov
or
mov
not
cdq
fcomi
xchg
mov
push
xchg
dec
xchg
fwait
or
(bad)
fdiv
ins
(bad)
mov
iret
mov
push
adc
lock
sub
inc
jg
outs
stc
fdivr
arpl
jp
xor
or
aaa
mov
or
sti
push
in
cld
fimul
jne
scas
out
push
loopne
jo
pop
out
and
xchg
addr16
add
cmp
dec
(bad)
jp
push
xor
lods
repz
cld
iret
sahf
xor
xlat
xchg
sub
(bad)
mov
sbb
retf
mov
and
sub
scas
stos
mov
ins
and
pop
(bad)
repz
xor
(bad)
int3
imul
fadd
fimul
addr16
retf
mov
les
pop
test
pop
inc
(bad)
loopne
cmp
sbb
inc
pop
imul
outs
push
sub
sahf
fild
mov
(bad)
aas
lods
popf
push
cwde
sbb
inc
inc
outs
sub
je
in
mov
call
and
push
fwait
movs
ret
add
push
push
mov
mov
mov
jne
pop
dec
pop
adc
ins
or
inc
fisttp
mov
adc
pop
sbb
push
add
and
pop
repz
movs
scas
and
aas
out
sbb
dec
dec
add
xor
adc
out
cmc
dec
pushf
dec
pop
data16
repnz
fwait
and
imul
repnz
fimul
mov
or
movs
iret
cmp
jp
sub
or
xor
nop
pushf
stos
xor
leave
popf
jo
stos
cli
arpl
sub
dec
dec
xchg
and
pusha
add
jmp
pop
cs
inc
add
cmp
mov
mov
jge
sbb
das
push
shl
pop
jmp
dec
sbb
push
jg
adc
jbe
xor
sub
icebp
ds
(bad)
les
jbe
inc
aas
dec
xchg
pop
xor
(bad)
jle
xor
(bad)
xchg
mov
adc
or
cli
(bad)
out
ss
jo
lock
nop
sbb
cld
mov
rol
mov
pop
inc
mov
loop
mov
xchg
shl
aam
push
jno
hlt
outs
cld
in
jnp
popf
iret
mov
mov
icebp
inc
mov
retf
mov
pop
lods
scas
retf
sub
push
ror
pop
jb
fs
dec
stc
or
lods
dec
int3
adc
in
and
test
dec
fdivr
out
xlat
lea
daa
cdq
push
add
(bad)
aam
addr16
movs
cmp
mov
sub
mov
jb
mov
mov
add
imul
call
cmp
lock
loopne
or
outs
push
adc
and
xor
push
lods
or
fcom
dec
jo
and
jg
in
shrd
aad
add
in
dec
test
lea
jne
pusha
adc
stos
arpl
in
(bad)
in
das
xlat
fndisi(8087
jb
cmp
xchg
loopne
jmp
out
add
aas
xlat
imul
add
int3
dec
ins
(bad)
into
and
dec
and
add
mov
sbb
ret
les
ja
pop
aad
inc
sbb
and
xchg
cs
sub
or
sbb
sbb
lods
dec
ins
mov
(bad)
dec
mov
fcmovnu
mov
lods
or
mov
adc
jl
add
push
stos
add
popf
push
jle
je
adc
leave
leave
or
dec
outs
jmp
jmp
inc
(bad)
call
xor
int3
push
aaa
push
mov
ret
and
ins
outs
(bad)
push
xchg
out
mov
js
pop
popa
test
mov
sbb
mov
or
push
or
mov
imul
stc
lods
loopne
aaa
fcomi
mov
sub
add
or
(bad)
inc
pop
(bad)
pop
ficomp
xchg
imul
clc
sbb
push
rcr
push
push
push
aad
add
iret
add
or
stos
xchg
sbb
repz
lock
or
xchg
jae
popa
inc
jp
hlt
sub
cmp
pop
pop
jo
jle
les
inc
sub
dec
xchg
cmc
test
jmp
aaa
pop
jno
mov
aaa
dec
pop
in
pusha
sbb
nop
inc
in
add
dec
retf
test
fisubr
cmp
adc
out
(bad)
dec
inc
xor
in
inc
inc
enter
mov
nop
popf
mov
push
and
adc
push
inc
loopne
push
call
loope
xor
or
inc
nop
fistp
nop
sbb
aam
aas
out
fimul
pop
add
int
lahf
jo
mov
stc
jns
push
mov
stc
jmp
addr16
jle
in
mov
push
xabort
cmps
jge
(bad)
sti
in
lods
inc
sti
fwait
and
lea
pop
mov
data16
and
dec
pop
dec
cdq
(bad)
aas
mov
jecxz
aaa
and
fnsave
mov
adc
jmp
stos
out
idiv
and
xchg
popf
mov
nop
dec
xchg
or
sub
xchg
fistp
jne
repz
xor
pop
and
imul
sbb
xchg
cmp
js
jnp
icebp
and
pusha
dec
shl
ret
cmp
std
test
dec
jo
aas
pop
int
out
fdivr
mov
jmp
jno
pop
pop
pusha
add
mov
dec
and
adc
fisubr
inc
mov
push
shl
push
sbb
test
push
cmp
rol
xor
push
mov
adc
(bad)
mov
cmps
jle
loop
mov
sbb
add
fldenv
retf
fcom
pop
push
rol
and
shl
push
sub
ins
xor
dec
inc
lea
out
mov
xor
cdq
mov
dec
ins
frstor
cmp
jne
jge
mov
push
ret
sbb
jne
jns
lock
xlat
sbb
push
ror
es
lods
jmp
mov
data16
movs
jp
mov
(bad)
jmp
out
push
mov
daa
mov
enter
fcom
pushf
scas
mov
jo
xor
mov
ins
jmp
push
cli
cdq
push
push
jns
(bad)
repnz
add
dec
xchg
pop
xchg
out
int
xchg
cmp
nop
movlps
sahf
sub
loopne
mov
add
cwde
stos
std
stc
xchg
in
iret
and
adc
or
inc
sbb
movs
mov
cmp
and
mov
mov
jecxz
cmp
sahf
repz
lock
fdivr
cmp
enter
out
mov
mov
jnp
scas
push
leave
fisttp
mov
je
cs
or
arpl
clc
sbb
add
ss
into
sbb
rcr
stc
loop
mov
add
mov
in
jge
xchg
dec
jns
mov
sahf
call
jl
(bad)
test
inc
inc
int
adc
and
sub
add
lods
inc
out
sub
out
enter
adc
mov
mov
sbb
add
push
and
clc
not
cli
mov
jno
outs
cli
inc
cmps
mov
fs
ins
pop
lahf
push
mov
dec
jnp
mov
sbb
add
or
mov
xor
inc
in
push
mov
popf
jle
inc
(bad)
lods
retf
push
xchg
sahf
jg
push
fnstenv
sar
enter
inc
les
neg
cmps
int3
and
js
add
(bad)
sub
jmp
cmp
dec
scas
jno
xlat
ror
aas
(bad)
mov
nop
test
jmp
push
pushf
stos
push
jecxz
(bad)
inc
cmps
lds
inc
jg
out
aas
pop
adc
into
pop
mov
cli
shl
scas
stos
push
mov
dec
in
leave
sahf
jbe
shl
cmps
xor
sbb
dec
leave
outs
imul
mov
lahf
outs
push
add
mov
and
push
cmp
dec
jp
dec
dec
push
and
mov
xor
push
js
pop
ret
movs
inc
push
jns
dec
pop
gs
ins
rep
ja
mov
add
in
or
and
mov
xchg
(bad)
iret
xchg
mov
sbb
hlt
xor
stos
cs
xchg
sbb
mov
fdivp
mov
les
mov
lahf
mov
dec
sti
popf
xor
jmp
mov
sub
adc
inc
retf
adc
(bad)
sbb
(bad)
pop
mov
xor
pushf
(bad)
ins
xchg
xchg
mov
dec
imul
mov
(bad)
sar
xor
and
mov
in
(bad)
xor
scas
shr
lock
jle
js
outs
mov
nop
xchg
stc
mov
xor
je
jmp
sbb
adc
or
jl
pop
or
jnp
mov
in
mov
or
adc
sbb
sub
sbb
lods
aas
adc
cmp
ins
in
inc
or
xchg
inc
movs
ret
ds
fild
(bad)
std
jmp
(bad)
das
xor
mov
iret
rol
cs
pop
hlt
lds
call
int3
sbb
mov
sahf
mov
jns
sub
out
sahf
ins
adc
add
dec
iret
loopne
iret
cmp
xor
sbb
mov
push
pop
xchg
push
lock
sub
scas
mov
(bad)
es
dec
and
mov
inc
shr
xchg
xchg
push
mov
xlat
ds
pop
mov
jbe
mov
sub
xchg
xlat
ret
(bad)
add
dec
dec
repz
outs
xor
repnz
imul
mov
mov
sub
dec
xlat
popa
(bad)
int
add
nop
xor
sbb
nop
ds
mov
mov
stc
lock
sub
dec
(bad)
mov
icebp
mov
cmc
popf
int
inc
pop
test
dec
in
rcl
xchg
mov
(bad)
mov
(bad)
sar
push
(bad)
sub
retf
ficomp
sbb
inc
daa
sub
fdivr
adc
jg
mov
pop
jmp
xchg
add
add
ret
rcl
ja
loop
cmps
fld
push
sub
or
jb
imul
lock
mov
push
scas
xor
mov
push
xchg
xchg
enter
imul
xchg
retf
push
dec
dec
pop
sbb
push
and
outs
push
loopne
in
pusha
mov
cmp
cmp
adc
jmp
dec
cmp
fwait
test
mov
sbb
mov
out
mov
nop
call
sbb
test
push
(bad)
test
mov
iret
cli
cld
pop
iret
pop
fmul
mov
fistp
lds
or
out
mov
mov
inc
loopne
pop
(bad)
xchg
fild
inc
mov
aad
push
pop
jno
jle
jo
xlat
add
or
out
jnp
loop
cli
mov
jae
dec
cmp
ret
pop
dec
xchg
xchg
sti
jp
add
mov
cmp
cld
dec
pop
push
fidivr
dec
add
aam
push
in
pushf
jp
jbe
cwde
imul
aas
mov
arpl
dec
aaa
aaa
ja
xchg
ficom
pop
inc
mov
(bad)
dec
gs
dec
mov
xchg
xchg
imul
dec
aaa
inc
sbb
aam
scas
and
sbb
pop
mov
xchg
add
sahf
dec
ins
enter
xlat
or
xchg
sbb
ds
out
inc
add
icebp
leave
cmp
stos
icebp
pop
push
cmps
push
xor
mov
mov
inc
in
cmp
inc
mov
mov
call
mov
sbb
push
aaa
pop
std
out
cdq
jecxz
mov
fidiv
cmps
mov
lods
scas
inc
pusha
and
mov
inc
xchg
movs
add
push
dec
inc
add
push
pushf
stc
jp
call
sbb
rol
pusha
cld
outs
je
mov
pop
loop
push
add
or
sbb
and
or
fdiv
and
mov
add
sbb
dec
pop
inc
sar
lds
iret
pop
fist
pop
ja
ja
sbb
out
xor
cmp
pop
mov
(bad)
nop
shr
repnz
adc
push
xchg
sbb
cmp
lods
sub
ror
mov
adc
mov
pop
loopne
ja
lods
mov
loop
inc
addr16
out
jle
cmp
xor
pop
sub
dec
push
fcomp
stc
(bad)
fimul
enter
dec
ret
adc
add
dec
jo
loope
in
gs
movs
test
dec
jmp
jecxz
dec
popa
sub
jbe
add
mov
popf
mov
cmc
xchg
cli
ret
inc
fsub
mov
lds
sub
adc
push
rcr
cmps
std
fdivr
addr16
sub
repz
cmps
xlat
add
or
mov
mov
sbb
inc
sub
sub
into
cmp
add
dec
inc
out
(bad)
xlat
mov
sub
adc
mov
enter
lahf
mov
rol
ror
fwait
(bad)
xchg
imul
jmp
and
fsubrp
ret
xchg
frstor
adc
jne
mov
xchg
push
lods
imul
jmp
outs
call
std
loop
(bad)
sub
dec
adc
mov
popf
fstp
rcl
mov
es
dec
ds
add
ror
and
js
jmp
lock
jae
out
jecxz
xchg
mov
mov
sar
je
mov
cmp
pop
pop
in
(bad)
cmp
out
std
xchg
sub
dec
ret
sub
ret
iret
(bad)
enter
pop
call
xor
cli
rol
xor
add
inc
mov
(bad)
lock
pushf
cdq
fs
and
rol
push
out
mov
(bad)
je
and
mov
out
fwait
inc
in
dec
sub
cli
cmp
loop
lea
xchg
sub
aam
xor
stc
std
(bad)
shr
xchg
dec
scas
fisub
je
pop
mov
call
stos
lea
dec
xor
cmp
das
mov
hlt
(bad)
push
aam
push
xlat
leave
sbb
in
sub
icebp
adc
jns
xchg
adc
scas
dec
(bad)
sbb
mov
xchg
mov
retf
(bad)
jmp
test
and
loop
imul
cmc
sub
adc
outs
pop
jbe
adc
icebp
cmp
addr16
cmps
shl
nop
adc
int3
jno
shr
adc
gs
sbb
sahf
add
cli
mov
pop
call
cmps
lods
repnz
jne
aad
dec
or
mov
in
mov
xchg
ins
ss
retf
cli
xlat
out
js
dec
pop
or
ins
mov
mov
mov
push
fild
jno
sub
pop
inc
retf
inc
in
inc
adc
or
cmps
(bad)
mov
pushf
add
xchg
xlat
mov
mov
jnp
pop
sar
(bad)
xchg
xchg
into
mov
es
mov
xchg
das
inc
or
in
(bad)
sbb
js
sbb
bound
mov
push
add
xor
pop
imul
mov
loope
push
fild
pop
cmps
push
sbb
aaa
sbb
loop
call
cmps
mov
sbb
aas
aas
jecxz
jnp
add
xchg
inc
jg
aaa
jne
mov
push
sub
les
ins
cmp
push
and
xchg
mov
ds
pop
pop
movs
aas
sbb
or
lds
push
jp
add
and
inc
aam
lds
inc
pop
cmps
cmovp
fdiv
sub
sub
mov
push
fidivr
and
mov
pop
out
and
dec
cmp
fwait
dec
sbb
imul
mov
outs
ins
fs
ins
lods
cmp
sub
mov
and
sahf
out
inc
inc
mov
dec
jp
dec
sub
jo
mov
aad
and
mov
pop
fisubr
aaa
xchg
sbb
xchg
mov
or
popa
mov
xor
pop
inc
icebp
mov
lea
pop
inc
cli
mov
adc
imul
jge
xor
xchg
pop
fbld
ja
jmp
shl
out
ja
mov
daa
or
or
mov
daa
lods
clc
std
(bad)
xlat
pop
neg
sub
push
mov
and
mov
cmp
add
cmp
mov
cmp
adc
mov
repz
sub
sbb
fdivp
and
cwde
scas
cmp
stos
sbb
inc
pushf
jbe
ret
jno
in
neg
call
cli
sbb
and
and
mov
mov
js
jmp
pushf
sub
mov
iret
or
sub
stos
ss
push
dec
pop
sub
sub
or
shl
cmp
and
mov
push
dec
sub
xor
sti
cli
xchg
outs
cmp
pushf
rcr
cmp
outs
scas
dec
adc
or
and
icebp
and
inc
mov
cmp
movs
test
cwde
daa
mov
hlt
pop
repz
iret
cmp
jbe
shr
imul
mov
retf
sub
scas
add
ss
sbb
cmp
xchg
mov
leave
(bad)
mov
(bad)
jge
push
mov
sti
not
sub
or
sbb
nop
fisub
push
stos
xchg
adc
jbe
xchg
xor
fwait
ins
loope
or
mov
clc
xchg
jb
sub
adc
loopne
cmc
loope
out
mov
pusha
test
mov
out
js
aam
addr16
mov
lds
mov
jno
imul
inc
(bad)
out
xchg
jmp
movs
sbb
pop
mov
daa
push
xchg
cmp
sbb
mov
add
push
adc
lods
or
dec
gs
push
lods
push
stc
push
pop
stos
ins
into
mov
test
jecxz
ficom
shr
test
add
mov
xor
sbb
add
popf
in
adc
lahf
mov
xchg
add
sti
div
sbb
iret
and
cmps
pop
out
push
inc
or
mov
dec
stos
sbb
or
fistp
int
pop
fcomp
xchg
dec
out
adc
pop
sbb
sub
mov
pop
xchg
pop
dec
push
outs
call
rcl
dec
inc
(bad)
push
adc
cmp
mov
mov
push
ja
arpl
push
das
popf
cmp
clc
xchg
inc
shl
mov
sub
mov
cdq
xor
fdiv
xor
dec
pop
pop
sbb
xchg
(bad)
aad
in
in
push
pop
lea
imul
pop
shl
mov
cmp
(bad)
bnd
dec
ins
ins
pop
ja
les
shl
sub
and
sbb
mov
popa
push
fiadd
rol
push
jl
push
and
push
iret
and
fsubp
loopne
sti
pop
adc
std
cmp
pop
aam
push
mov
outs
outs
cmp
xchg
mov
nop
aam
xor
daa
mov
mov
jbe
jl
adc
aam
xchg
loopne
add
in
int3
pop
icebp
push
cmps
scas
(bad)
je
push
adc
jne
sbb
scas
sbb
pop
das
mov
ret
pop
mov
rcr
(bad)
adc
daa
gs
add
(bad)
and
stos
test
ins
push
scas
push
jmp
xchg
ins
ret
stos
cld
jmp
retf
sahf
mov
xor
sub
mov
fcom
(bad)
xor
push
rcr
rcr
xchg
sbb
out
lahf
xor
fsubr
pop
inc
into
or
into
cmp
jo
xor
js
(bad)
rol
add
cmp
sub
xor
mov
xchg
retf
sub
test
pop
add
(bad)
movs
inc
cwde
sub
push
(bad)
clc
xchg
movs
mov
sbb
mov
ja
(bad)
sahf
(bad)
dec
adc
inc
(bad)
retf
leave
gs
mov
retf
js
out
jae
clc
leave
push
test
ret
dec
adc
(bad)
mov
jae
into
or
inc
mov
push
mov
int3
jmp
or
xor
ss
sar
dec
dec
xor
xchg
gs
add
mov
ja
sahf
push
repnz
xchg
and
mov
or
sbb
fld
pop
sbb
mov
daa
jne
or
sbb
aam
push
test
fcom
jecxz
sub
popf
mov
xchg
adc
shl
movs
push
ss
(bad)
or
cmp
ficomp
sti
pop
adc
enter
add
inc
leave
pop
fidivr
mov
(bad)
pop
sbb
push
repnz
lods
movaps
push
clc
mov
cmps
push
mov
sub
jb
mov
scas
xor
test
mov
rol
xor
loopne
push
sti
add
js
lahf
dec
pop
sub
sub
add
dec
mov
movs
out
popf
iret
xor
jo
and
mov
jno
mov
addr16
js
xor
(bad)
cld
in
cld
cmps
mov
mov
adc
inc
ror
push
test
push
add
push
lahf
movs
mov
fiadd
outs
and
sti
jge
xchg
ret
mov
dec
fisub
mov
xor
stos
jmp
(bad)
iret
push
push
test
in
mov
cmc
in
inc
rcr
test
sub
ror
pusha
xchg
xor
mov
cdq
cmps
arpl
inc
xor
push
cmc
(bad)
mov
pop
outs
or
mov
mov
mov
imul
xor
or
sub
push
lea
(bad)
adc
mov
xor
xchg
xchg
mov
scas
lock
mov
add
int3
fsubr
sbb
dec
mov
retf
je
clc
dec
fcmovb
icebp
out
dec
jnp
ins
xor
inc
data16
jnp
pop
clc
xchg
add
fcomp
shl
pop
in
push
pop
std
pusha
xchg
mov
sub
mov
sub
add
sbb
add
xor
inc
ds
fistp
cmp
adc
js
in
xchg
xor
push
pop
cmps
sbb
push
xchg
jne
clc
outs
adc
pop
jb
arpl
clc
sub
loope
fcomi
lea
inc
xchg
xchg
push
arpl
(bad)
fnstsw
sar
daa
enter
inc
pop
repnz
mov
das
mov
jo
xor
es
dec
(bad)
and
retf
lock
out
pusha
int
push
xchg
cmp
outs
leave
movs
leave
xor
ins
xchg
xchg
icebp
inc
inc
fadd
adc
test
(bad)
mov
mov
call
inc
cmp
adc
test
rol
sub
sbb
and
sbb
inc
and
sub
jb
xor
xchg
sbb
in
cmp
jmp
jecxz
sbb
sar
pop
cwde
imul
pop
xor
popf
sbb
gs
xchg
lock
xor
enter
std
in
fidiv
mov
add
jg
in
push
push
lods
(bad)
xchg
sbb
xchg
popa
call
add
cli
mov
or
test
out
inc
sub
adc
nop
outs
jbe
xor
sbb
dec
retf
dec
sub
ror
inc
push
dec
or
xchg
stos
xchg
cmc
add
push
xor
pop
push
(bad)
rcr
mov
jl
out
(bad)
cmp
sub
sub
push
pop
imul
xchg
mov
rcl
arpl
aas
pop
test
inc
xchg
mov
sub
enter
cli
sub
cmc
adc
xchg
out
add
xchg
jmp
ror
int3
fstp
(bad)
neg
inc
adc
inc
ficom
jbe
jle
adc
stc
sub
mov
inc
push
cmp
stos
or
outs
in
lea
sub
pop
shl
rcr
cld
mov
stos
mov
cmp
js
mul
stos
imul
je
push
les
ret
mov
lahf
cld
rcr
sahf
sub
movs
mov
mov
cmp
jne
(bad)
icebp
adc
pop
xchg
adc
xor
(bad)
ret
lds
(bad)
(bad)
ins
cs
and
mov
cmps
sti
mov
or
std
push
or
inc
bnd
mov
mov
sub
enter
stos
test
data16
add
or
jmp
mov
cmp
inc
push
pusha
fs
hlt
sti
outs
jge
mov
adc
jne
jle
hlt
mov
test
mov
xchg
in
dec
test
gs
lea
cmp
add
inc
mov
clc
cdq
loop
loopne
dec
xor
adc
push
mov
push
pop
pop
stos
mov
lods
into
pop
xor
push
mov
inc
sar
enterw
pop
imul
cwde
sbb
sbb
mov
aas
cli
fist
fsub
aas
fsubr
inc
xor
cmp
pop
bound
stos
dec
xlat
fisubr
inc
lods
push
inc
mov
mov
or
cli
and
xor
push
push
or
fistp
mov
std
(bad)
cld
pop
mov
dec
mov
and
jbe
sub
retf
cmp
or
dec
sbb
or
push
sbb
outs
rcr
icebp
aam
xor
shl
lods
cmp
int
shl
xor
pusha
sub
xor
jnp
jae
jecxz
sub
mov
in
retf
mov
and
mov
cmps
jno
mov
or
in
scas
mov
out
add
sahf
jp
mov
call
js
hlt
xchg
mov
adc
loope
out
push
and
dec
push
cwde
push
ins
inc
xchg
push
cdq
icebp
stos
int
int3
jne
mov
repnz
out
xchg
cdq
imul
lds
dec
jg
stc
add
dec
mov
dec
sbb
and
stc
push
push
jl
xlat
sub
mov
jmp
lock
cmps
adc
cmp
loop
mov
cs
call
movs
inc
fyl2xp1
(bad)
rol
stos
sub
faddp
(bad)
aaa
xchg
cmp
cmp
sbb
icebp
mov
fistp
and
push
pop
fistp
push
jnp
jp
sub
jo
nop
pop
ins
ret
movs
nop
fisub
adc
aaa
out
aad
mov
mov
(bad)
repnz
lock
retf
xchg
sbb
jle
ja
mov
jge
lds
lahf
sbb
inc
ins
jne
mov
jnp
or
adc
mov
mov
jg
pop
into
(bad)
mov
mov
ret
sub
xchg
iret
add
mov
into
outs
sbb
pop
adc
dec
jae
add
and
mov
xchg
in
std
dec
scas
shl
pop
and
int
dec
adc
jge
addr16
jge
jg
inc
inc
inc
(bad)
xchg
fbstp
pop
and
ins
sub
fxch
xchg
ror
pusha
test
int3
sbb
xor
sbb
dec
xor
mov
out
in
xchg
xor
inc
call
adc
enter
adc
sbb
adc
dec
push
xchg
pop
inc
not
adc
xchg
add
call
inc
loopne
cmp
pop
and
retf
pop
mov
jge
hlt
inc
retf
mov
int3
cli
mov
fnsave
sub
pop
das
xchg
jb
push
bound
int3
scas
std
push
gs
sahf
mov
popa
mov
sbb
mov
mov
leave
pop
or
mov
pop
(bad)
mov
je
aam
fsub
jne
push
sbb
cmps
loop
fld
push
inc
push
jbe
xchg
jmp
std
ins
adc
sub
pop
add
cmp
or
in
movq
cmps
and
cmps
push
cmps
imul
push
push
add
into
sub
ins
cmp
repnz
scas
inc
(bad)
xor
dec
shl
cwde
pushf
outs
mov
int3
inc
in
sub
dec
mov
mov
push
(bad)
sbb
add
lahf
xlat
ja
add
xor
stc
mov
fadd
je
lods
add
sar
jne
imul
pop
sbb
push
or
or
(bad)
dec
push
jne
rcl
xor
sub
dec
std
or
push
or
mov
mov
sbb
and
push
pop
dec
xor
cs
aas
setae
dec
and
idiv
xchg
add
sub
dec
pop
mov
bnd
sbb
xchg
or
lods
xor
js
outs
aas
pop
icebp
mov
les
test
xchg
loopne
cdq
push
or
fdiv
dec
pusha
xor
das
jnp
cmp
stc
pop
xchg
mov
xchg
loop
adc
mov
add
movs
mov
inc
fld
retf
js
mov
add
xchg
lahf
sbb
repnz
enter
jp
add
out
dec
in
adc
bound
std
mov
scas
loop
stos
popa
je
lods
icebp
das
es
xor
dec
(bad)
xchg
jmp
cmp
cwde
lock
cmp
jp
call
sar
inc
cmp
push
movs
push
mov
cs
cld
pop
jbe
stc
jg
shl
test
jbe
mov
push
mov
inc
call
fimul
dec
test
mov
adc
dec
xchg
int
push
inc
fimul
inc
dec
rcl
or
lea
dec
int3
xchg
retf
movs
jmp
cmps
mov
mov
xor
jle
push
xchg
movs
push
xor
add
retf
outs
loope
idiv
jbe
adc
xchg
les
inc
aam
mov
mov
js
jae
test
inc
xor
pop
out
or
mov
pop
mov
dec
std
in
pop
shr
adc
sub
mov
adc
in
and
lahf
mov
sar
pop
scas
jno
mov
mov
mov
shl
jg
adc
ds
out
adc
sub
mov
out
sub
mov
dec
shl
fiadd
in
inc
cmps
ficomp
sub
shl
imul
jmp
icebp
mov
jb
arpl
shr
pop
popa
push
into
out
mul
dec
mov
push
in
mov
and
aas
dec
sbb
stos
pushf
mov
push
in
jmp
xchg
stos
fs
test
lock
fmul
xor
xchg
clc
je
aas
cmp
mov
bound
or
test
sub
shl
pop
push
adc
shr
and
push
add
shl
jmp
xchg
adc
mov
push
in
stos
(bad)
imul
repnz
mov
les
push
jmp
pop
add
sub
adc
ja
mov
addr16
and
cmp
retf
jmp
add
cmp
or
clc
push
and
sbb
cdq
xor
mov
dec
mov
pop
test
xchg
fisub
hlt
es
repz
add
cmps
aam
fldz
stos
test
(bad)
fisubr
pushf
out
ret
aas
mov
push
dec
call
loope
xchg
jge
aad
push
push
xor
scas
pop
jp
pop
shl
ror
les
cmps
lock
mov
ins
(bad)
loopne
push
pushf
xchg
cld
sbb
lods
cmc
ins
mov
adc
in
ret
sub
jnp
xor
loope
test
mov
fwait
add
xor
hlt
push
sub
test
cmps
jbe
sub
out
test
jns
jb
das
mov
ins
push
adc
sub
out
and
push
mov
adc
jne
in
inc
jp
cmps
gs
jae
shl
mov
push
jb
dec
xor
scas
cli
cld
stos
jl
cmp
fcomi
mov
mov
push
clc
push
(bad)
dec
mov
test
adc
adc
and
add
jne
pop
addr16
xor
enter
jmp
fld
mov
test
(bad)
outs
adc
or
das
mov
xchg
(bad)
bnd
pop
loop
aad
push
jae
loope
into
sbb
popf
lods
out
lods
xchg
add
push
les
jmp
test
loopne
mov
push
sbb
mov
popf
and
xchg
dec
mov
mov
mov
jl
aam
scas
daa
inc
pop
inc
cmps
sub
inc
stos
out
std
test
or
sti
inc
jg
stos
xchg
inc
int3
sub
jno
mov
jp
sub
push
(bad)
int
fsubr
lahf
dec
mov
pushf
leave
sbb
xor
xchg
adc
or
pop
ins
and
adc
jno
push
and
punpckldq
push
pusha
mov
rcr
dec
inc
popa
bound
scas
push
mov
imul
into
stc
jmp
xchg
xor
clc
jle
stos
sbb
adc
scas
dec
cdq
mov
mov
mov
and
and
push
cmp
pop
xchg
or
js
enter
ds
pslld
iret
ret
pop
inc
je
add
dec
in
aaa
cmp
out
popa
in
sbb
push
clc
push
rcl
stos
fidivr
adc
pop
ret
xchg
gs
xchg
or
pop
push
daa
out
iret
(bad)
mov
test
fwait
xchg
(bad)
mov
push
mov
jmp
mov
push
mov
out
jb
ins
mov
je
mov
cs
or
xor
or
stos
out
neg
popa
pop
or
in
call
sbb
sub
fisttp
inc
pop
push
fstp
dec
cmp
cmp
js
inc
inc
fbld
cmc
mov
mov
nop
push
(bad)
fs
or
in
aam
bound
mov
mov
pop
dec
lods
and
fld
push
cmp
ins
les
sub
cmp
sbb
or
clc
pop
mov
pop
sub
ins
test
mov
xor
int3
sub
push
jne
mul
test
js
dec
mov
add
stos
jle
and
test
imul
and
pop
(bad)
jp
push
sbb
frstor
test
rcr
cmp
leave
xlat
cwde
(bad)
outs
pusha
loop
ins
loop
dec
mov
dec
mov
ins
xchg
neg
xchg
int3
(bad)
cmp
les
call
jmp
rcl
xor
pop
jbe
ins
add
sub
ror
rcr
andnps
mov
call
enter
inc
adc
xor
and
nop
push
das
push
jp
aaa
pop
cmp
paddd
add
add
out
(bad)
es
sbb
push
xor
pop
ins
jle
inc
mov
add
int3
mov
dec
fstp
inc
das
ins
pop
jmp
loope
sub
shl
push
mov
xchg
xchg
fs
sbb
xor
mov
xor
inc
and
push
adc
xchg
rol
ret
hlt
test
aad
out
xor
xor
test
arpl
jae
fdivp
daa
pop
ins
mov
out
sar
pusha
es
mov
shr
fild
xchg
cmp
xor
std
and
xchg
inc
pop
dec
sbb
and
or
fst
cld
pop
mov
sub
clc
sub
ret
cmp
out
add
fwait
cld
pop
pop
ins
dec
(bad)
shl
or
mov
add
ins
adc
push
cwde
dec
int
ficom
loopne
add
(bad)
jmp
xchg
mov
inc
or
add
mov
cs
sti
fimul
(bad)
mov
(bad)
xchg
(bad)
jmp
or
bound
dec
pop
jecxz
or
lock
jmp
test
mov
xor
outs
sub
dec
xor
xchg
dec
adc
add
repz
loope
or
and
(bad)
cld
xor
rcl
mov
mov
inc
(bad)
mov
mov
pop
sub
je
scas
mov
pop
cld
xchg
js
push
mov
mov
add
xor
or
ror
out
xchg
test
ror
push
cld
adc
jp
retf
rcl
jb
inc
push
cmp
je
pop
push
jne
int
ret
mov
jmp
mov
pop
mov
pop
add
inc
jmpw
fadd
mov
sbb
aaa
jl
push
inc
mov
pop
sub
cdq
stos
push
mov
inc
pushf
jmp
push
adc
and
pop
xor
mov
add
ret
dec
mov
dec
imul
mov
mov
dec
jmp
push
mov
repz
jnp
xor
cdq
sub
mov
jne
dec
ficomp
mov
push
(bad)
adc
shr
mov
xlat
sub
in
imul
pop
xor
jmp
cmp
jmp
sti
in
inc
or
sbb
lods
aad
stos
cmp
pop
jge
pop
loop
cmp
sbb
loop
or
and
cmp
imul
cmp
fdivr
xchg
adc
mov
mov
add
shl
jae
adc
lahf
inc
sti
test
pusha
int
ret
xchg
call
add
pop
stos
ret
xchg
mov
stc
cs
fiadd
fwait
test
es
push
pop
lock
mov
xlat
push
iret
adc
fld
push
jne
addr16
ins
aad
sbb
bound
into
cmp
dec
sub
jnp
enter
sar
aas
jle
dec
cmp
jb
push
sub
cmc
movs
add
push
xchg
jl
fnstsw
xor
(bad)
push
ret
mov
iret
fdivr
sub
in
dec
cld
(bad)
dec
aaa
lods
loope
cld
jg
push
lods
nop
pusha
ins
test
ret
ds
pop
neg
popf
test
jb
xchg
inc
sub
aad
out
mov
gs
enter
stos
mov
push
(bad)
(bad)
aaa
mov
gs
sub
arpl
nop
xchg
push
(bad)
jae
retf
in
mov
inc
in
daa
rcl
in
and
inc
add
sbb
adc
jg
xchg
sub
cmp
sti
adc
lea
adc
push
sbb
add
(bad)
sub
movs
ret
mov
stos
out
test
ror
fisub
pop
cli
outs
in
stc
mov
es
ret
(bad)
repz
jb
sub
xchg
sbb
or
and
add
inc
pop
and
mov
stc
nop
shl
stos
and
stos
je
inc
jmp
out
(bad)
pop
push
repnz
mov
sbb
jo
push
dec
push
sub
add
mov
cs
jne
mov
add
xor
mov
inc
pop
jl
mov
scas
add
ret
jns
cli
dec
sbb
xor
xor
movs
xchg
div
retf
movs
adc
test
sbb
loopne
(bad)
pop
ins
sar
xchg
push
iret
mov
rol
cli
shr
leave
ret
adc
aas
in
mov
rcl
ss
ficomp
cmp
add
ins
and
sub
cmp
xchg
fist
add
push
loopne
xor
imul
add
adc
adc
repnz
test
mov
xor
sbb
sub
aam
push
inc
(bad)
sar
imul
add
and
fld
and
mov
stos
clc
lock
cmps
push
bound
popf
pop
xor
jl
mov
jo
jecxz
xchg
imul
xchg
bound
sub
add
jne
retf
cmp
push
aad
test
cmp
and
jp
xor
lock
cmp
xor
popf
push
cmp
cdq
movs
xchg
aaa
test
repz
ffreep
in
out
sub
(bad)
sub
pop
out
inc
cwde
rcr
mov
icebp
(bad)
out
xor
sbb
repnz
cmp
mov
push
(bad)
jg
mov
(bad)
mov
outs
dec
sub
add
loope
ficomp
mov
fisttp
rcl
jl
imul
(bad)
jmp
mov
xchg
mov
inc
mov
jl
adc
call
sub
sbb
jb
test
mov
scas
movs
adc
push
or
scas
or
dec
cmp
fwait
adc
pushf
mov
adc
sub
inc
imul
test
hlt
jne
pushf
push
mov
xchg
ds
xor
fdivr
sbb
pop
xor
sbb
push
mov
cdq
(bad)
movs
lea
repnz
mov
pop
aad
lea
dec
and
jno
inc
cdq
es
scas
xchg
shr
outs
mov
shr
imul
cwde
pushf
(bad)
jne
popa
jmp
xchg
in
test
push
jmp
adc
mov
sub
int3
in
dec
aaa
fcom
test
dec
ret
or
and
test
in
mov
(bad)
lods
fldcw
mov
outs
sbb
leave
loop
ret
mov
test
(bad)
ds
jb
mov
jmp
cs
in
jmp
mov
sub
(bad)
daa
fstp
jge
add
mov
inc
xor
stos
sbb
nop
test
es
xchg
aaa
test
cdq
xor
cwde
push
mov
cdq
enter
fcom
adc
inc
adc
pushf
jl
std
inc
xchg
jae
fsubr
adc
mov
mov
push
(bad)
xlat
push
imul
aad
inc
out
jno
mov
mov
inc
loope
les
int
pop
ins
fistp
mov
mov
sbb
jge
add
ja
fwait
push
(bad)
out
fmul
clc
sar
inc
xchg
stos
mov
aam
sbb
fnstsw
or
inc
mov
inc
ds
mov
mov
xor
jns
or
mov
mov
xchg
cmps
and
fmul
sbb
imul
imul
inc
and
push
push
lea
in
xchg
pop
push
or
mov
ja
clc
sub
push
fwait
das
jae
test
das
movs
push
or
adc
test
inc
jnp
jns
push
fwait
lods
rol
pusha
mov
adc
jnp
std
imul
fldl2e
dec
fdiv
mov
add
and
clc
dec
rcl
ret
loopne
pop
pop
pop
pop
push
pop
xchg
je
imul
mov
jmp
jnp
pop
imul
add
adc
lds
jge
jbe
lea
and
in
push
ins
pusha
inc
and
fs
mov
inc
lds
cmps
cwde
cmps
movs
pushf
fmul
ret
clc
and
out
lahf
movs
push
leave
pop
mov
or
leave
inc
xchg
out
add
cmp
in
adc
cwde
mov
mov
and
mov
lods
vmovaps
push
retf
or
mov
ss
ret
add
les
add
mov
xchg
push
out
sbb
cmp
iret
in
femms
and
pop
movs
add
aaa
(bad)
js
test
push
add
enter
push
jnp
cdq
fist
adc
les
sub
icebp
aad
fbstp
xchg
call
sbb
or
test
shl
pop
pop
and
les
jmp
or
int3
ficomp
enter
mov
push
adc
or
ins
xor
dec
jg
repz
pop
jp
xchg
in
inc
in
sti
mov
add
cmps
or
mov
retf
inc
sbb
call
pop
es
sbb
sub
dec
xchg
push
jl
dec
ss
xor
xchg
aas
adc
push
lea
adc
add
cmc
adc
icebp
imul
int
js
add
test
(bad)
push
in
in
mov
out
pop
lea
daa
jmp
cmp
push
jae
loop
cdq
cmps
out
outs
jnp
mov
fsub
jne
jb
mov
mov
aaa
gs
sbb
mov
pop
retf
mov
imul
lds
mov
test
retf
inc
cmp
mov
ja
cld
sahf
je
mov
pop
fistp
cs
aad
shr
adc
stc
fcomp
xor
push
je
inc
iret
jne
inc
ins
popf
mov
call
repz
repnz
test
jl
retf
mov
mov
xchg
ja
inc
(bad)
mov
jne
push
je
and
or
or
(bad)
fcomp
call
jne
or
scas
popf
sbb
(bad)
frstor
arpl
or
xor
out
mov
imul
inc
push
(bad)
fild
mov
adc
jbe
lds
inc
sub
out
push
cmp
enter
sub
cld
js
(bad)
xchg
adc
int3
aad
jp
mov
fcmovnb
sub
jle
sbb
sub
js
xor
sub
icebp
sar
adc
or
sahf
dec
mov
outs
mov
adc
inc
fadd
adc
ja
rep
mov
mov
mov
add
push
inc
outs
pop
pop
stos
(bad)
jb
imul
in
mov
mov
leave
inc
sbb
outs
pop
add
stos
push
add
retf
fsubrp
or
icebp
ret
xchg
ja
cmp
in
xor
jle
and
icebp
mov
sti
sub
dec
jbe
js
adc
mov
pop
fcomip
pop
xchg
inc
mov
popf
pop
aad
push
ja
push
loope
mov
xchg
cmp
ret
fild
xchg
das
jle
mov
sub
scas
loopne
lea
jne
and
pop
(bad)
push
add
je
add
hlt
fst
jae
aaa
fidivr
sub
adc
imul
sbb
stos
or
das
js
pusha
adc
fwait
das
in
call
jp
rol
sbb
dec
sti
pop
movs
leave
push
out
fs
xchg
pop
pop
(bad)
aad
es
dec
or
mov
int
xchg
ret
int3
loop
mul
xchg
rcr
fcomi
xchg
loopne
sub
pop
cmp
dec
je
call
adc
mov
mov
jge
in
sub
and
loop
adc
mov
fcom
push
pop
push
jbe
jne
loop
imul
imul
and
js
or
fs
adc
lahf
sbb
fisttp
add
ds
xchg
xor
ss
and
sbb
and
inc
xor
dec
dec
(bad)
xchg
cs
js
push
std
cmp
out
xrelease
outs
push
add
mov
adc
sub
push
pusha
inc
es
mov
sbb
(bad)
ins
scas
sbb
push
mov
mov
cdq
inc
movs
sahf
mov
mov
dec
mov
or
cld
sbb
dec
fstp
(bad)
scas
lods
jb
mov
scas
sahf
icebp
ds
das
jmp
mov
pusha
cs
stc
ret
repz
in
xchg
push
xchg
xchg
js
add
aad
cmp
pop
lods
sub
sbb
sar
test
adc
xchg
int
pop
cmps
xchg
cwde
test
lds
loop
imul
(bad)
fist
cmps
loopne
mov
xchg
xlat
mov
ins
sbb
in
pop
sbb
shl
push
repnz
repz
les
ror
hlt
sub
shl
inc
sbb
shr
in
call
mov
inc
lea
jge
int3
push
rcl
arpl
cmp
pop
inc
jp
scas
lea
adc
sbb
xor
fistp
push
ret
and
bound
inc
adc
cmps
dec
mov
add
mov
pop
lea
pop
in
pop
mov
mov
pop
loopne
mov
mov
sahf
adc
sub
sub
mov
mov
test
jp
jo
imul
fadd
mov
inc
cmps
leave
in
leave
add
cld
dec
inc
into
or
imul
gs
fcom
in
xchg
(bad)
and
cmp
sar
xor
scas
cmps
inc
test
xchg
cmps
add
sub
push
jmp
push
rol
push
leave
shl
pop
lods
fnstcw
mov
clc
in
dec
dec
and
(bad)
sti
push
icebp
xor
lds
and
lahf
popa
mov
pop
lods
adc
mov
std
dec
cmp
int
pop
xchg
bound
ret
rol
rcr
mov
lods
loope
dec
push
xchg
int
call
out
mov
sti
push
in
rcl
mov
ds
(bad)
or
xor
test
adc
loop
dec
lea
dec
(bad)
sti
and
icebp
retf
add
(bad)
inc
movs
test
pop
or
xlat
popa
jmp
je
test
push
div
shl
add
sar
cdq
adc
push
adc
jle
jmp
xchg
cdq
(bad)
sti
dec
inc
mov
sti
(bad)
pop
fabs
and
ja
cmp
pop
in
dec
outs
and
jmp
dec
sub
push
ret
jmp
push
or
popf
outs
shr
xchg
cld
shl
jno
neg
(bad)
fincstp
and
or
aam
lock
out
call
popa
or
retf
ret
mov
jae
mov
cmp
mov
jae
mov
mov
push
or
in
lods
jp
jae
push
icebp
xchg
mul
and
ja
lds
xor
add
jge
and
test
imul
ror
aaa
call
mov
and
mov
adc
push
adc
jmp
stos
fs
cdq
sar
aas
push
push
in
inc
ret
dec
xchg
or
scas
sbb
mov
out
or
add
inc
mov
mov
xlat
push
mov
cli
int3
pop
mov
shl
xor
sbb
fild
push
mov
mov
adc
dec
les
push
arpl
jmp
inc
lock
cmp
jl
mov
dec
pop
les
dec
rol
xlat
xor
jmp
pop
mov
inc
pop
ins
icebp
jle
test
cmp
jp
pop
or
jecxz
add
push
dec
sub
(bad)
and
lods
push
mov
cdq
sbb
les
inc
loop
je
test
mov
ret
adc
icebp
push
movs
mov
xchg
scas
cmps
dec
data16
(bad)
add
jmp
dec
mov
popf
not
out
mov
test
jnp
adc
jg
push
add
or
ret
(bad)
or
xchg
dec
add
mov
add
and
push
ret
adc
sub
push
push
(bad)
cmps
add
in
ins
pop
mov
jb
pop
adc
jge
add
jge
and
lods
stos
fwait
test
adc
or
mov
sbb
(bad)
repz
sahf
mov
dec
into
sub
int3
cmp
mov
rcl
cmp
xchg
rol
xchg
enter
nop
dec
leave
je
sbb
mov
repnz
xchg
ss
mov
mov
add
ficom
sbb
inc
repz
push
cmps
stos
add
test
stc
jo
jecxz
inc
xor
(bad)
xchg
(bad)
adc
retf
ins
daa
movs
jne
loopne
out
out
int
fadd
add
enter
stos
das
pop
(bad)
push
or
(bad)
fld
into
into
lea
lods
hlt
dec
pop
pop
mov
mov
xchg
icebp
jmp
cld
mov
mov
in
or
mov
scas
jo
add
sub
and
mov
jecxz
xchg
dec
mov
nop
imul
jo
pop
aam
adc
loop
fdiv
and
jnp
or
jle
xlat
dec
or
and
or
loope
int3
pop
in
test
push
shl
mov
outs
jmp
push
(bad)
daa
push
pop
or
test
hlt
int
jg
(bad)
adc
aam
jmp
mov
pop
push
gs
and
sar
daa
ret
push
imul
cmc
mov
(bad)
in
gs
mov
lods
jecxz
(bad)
cmp
call
sub
add
pop
adc
pop
mov
xchg
jae
ds
clc
inc
inc
xor
mov
aaa
inc
das
cwde
and
mov
out
outs
jb
scas
add
cmc
div
cmp
mov
shl
loope
mov
and
aad
cli
stc
push
js
gs
fmulp
pop
iret
cmp
push
ins
and
mov
cld
fidiv
sub
inc
aaa
test
sbb
gs
(bad)
jl
inc
jns
ja
push
movs
or
add
mov
leave
fcmovb
mov
cmp
push
clc
jmp
push
mov
sub
bound
dec
(bad)
cwde
mov
push
cmp
xor
jae
inc
icebp
mov
ror
test
cmc
jne
and
out
mov
repz
loopne
xor
lods
mov
sub
pop
mov
jnp
xchg
pusha
adc
mov
shl
addr16
and
push
mov
mov
loopne
sbb
sub
sub
pop
xlat
or
push
fwait
dec
dec
jmp
(bad)
test
(bad)
fnstcw
xchg
test
sahf
(bad)
dec
mov
xchg
and
gs
jecxz
movs
mov
jle
jnp
and
mov
xchg
addr16
jnp
loope
inc
dec
push
add
into
add
mov
mov
(bad)
retf
jmp
dec
stos
push
out
xlat
pushf
rol
xor
mov
jl
std
pop
xchg
jns
das
sbb
dec
xor
rcr
sub
(bad)
jae
dec
cmp
aam
movs
xchg
dec
stos
out
or
jl
jmp
test
aas
jae
jmp
in
call
add
add
cmp
jl
pop
fsub
inc
mov
cli
arpl
jbe
ret
aad
int3
pop
adc
enter
js
data16
pop
jg
and
push
sti
and
outs
sbb
out
mov
pop
and
sub
mov
add
shr
mov
aad
icebp
std
pop
pop
mov
cld
icebp
dec
les
mov
shr
sbb
jle
nop
lods
pop
pop
rol
(bad)
push
fmul
or
pop
pusha
jmp
adc
hlt
jecxz
fisttp
es
xor
jecxz
ins
mov
cmp
movs
and
xchg
cmp
mov
or
pop
aam
nop
repz
test
pusha
cmp
cmp
bound
cld
cmc
mov
cmp
sbb
cmps
add
sub
and
xchg
scas
mov
or
and
js
rol
adc
out
add
das
mov
stc
cmp
and
fucom
hlt
clc
mov
in
sub
ins
test
jecxz
imul
mov
imul
adc
dec
daa
or
dec
pop
push
mov
mov
icebp
movs
add
inc
cmp
popa
cmc
dec
inc
mov
inc
add
cmps
pop
pop
inc
loope
inc
out
xor
inc
mov
jae
adc
push
fcomi
pusha
adc
jne
cmp
retf
fxch
push
xor
ret
rol
mov
addr16
xor
mov
mov
mov
cmps
(bad)
mov
xchg
stc
inc
push
fwait
inc
test
sub
mov
int3
mov
push
cmp
pop
mov
cmp
jo
sub
xor
mov
adc
jl
or
ret
xchg
mov
push
cmp
retf
and
or
dec
loop
pop
sub
cmps
sbb
sbb
repnz
pop
call
lods
or
jmp
test
and
shr
mov
sub
scas
pop
out
sbb
not
ror
in
shr
mov
pop
and
loop
jno
movs
mov
adc
movs
jecxz
sub
inc
jb
test
sub
mov
mov
xchg
out
xor
push
jmp
outs
mov
mov
pop
jl
add
or
push
les
fstp
inc
pop
mov
sbb
pop
pop
cmc
cmp
inc
adc
leave
and
add
aad
push
adc
aad
push
enter
adc
int
repnz
mov
or
cld
pop
xchg
xchg
or
jne
or
loopne
fwait
in
scas
ja
xlat
push
fistp
pushf
aaa
push
fnstenv
sub
in
inc
inc
push
movs
inc
mov
aas
dec
xor
stos
add
xchg
dec
mov
push
shl
pop
xchg
dec
scas
sub
aad
test
imul
mov
rcr
in
js
stc
std
xchg
adc
push
mov
fcomp
nop
ja
mov
test
adc
outs
or
jmp
mov
xor
cmp
pop
test
call
push
sbb
enter
lock
test
pop
ja
cmps
(bad)
rol
aas
or
push
in
pop
adc
push
pop
and
jp
inc
dec
sbb
dec
iret
hlt
pop
leave
push
pop
inc
sub
xchg
in
dec
es
and
jne
dec
and
push
ja
push
mov
mov
cmp
push
les
std
cmp
fdivr
ficomp
dec
xor
mov
adc
stc
ret
iret
xchg
call
pushf
fidiv
imul
in
fimul
jno
cmp
push
push
adc
popa
cli
sti
sti
mov
int3
scas
loope
jge
aaa
xchg
inc
repz
sub
xchg
add
(bad)
sti
cli
(bad)
xchg
push
rol
adc
(bad)
inc
mov
mov
lods
cvtdq2ps
sbb
adc
stos
scas
and
(bad)
mov
unpckhps
jns
cmp
mov
sar
or
mov
sub
jmp
mov
call
and
add
adc
fs
push
adc
inc
aas
out
xor
pop
mov
cmp
nop
push
(bad)
xor
popa
(bad)
fisub
inc
and
push
mov
(bad)
daa
cs
test
movs
fadd
dec
mov
sub
hlt
fsub
loopne
lahf
imul
mov
cmc
cmp
arpl
dec
push
mov
(bad)
lods
xchg
jnp
jmp
jge
sar
arpl
fiadd
test
leave
jb
xlat
cmp
(bad)
mov
loop
pushf
outs
sub
add
mov
lods
dec
mov
inc
je
dec
in
pop
lahf
lods
jne
sahf
dec
retf
cmp
sbb
xor
dec
ror
or
mov
sbb
fbld
lahf
cmp
(bad)
mov
retf
xor
dec
repnz
mov
ficomp
sub
gs
sub
push
pop
pop
or
dec
add
lea
ret
imul
push
add
pop
xchg
iret
fcmovne
leave
jno
or
dec
out
mov
ins
jg
nop
fs
mov
sbb
sub
bound
in
cs
in
dec
lods
mov
nop
jmp
retf
adc
adc
icebp
call
js
(bad)
xchg
inc
push
or
xor
mov
stc
loopne
lea
pop
ret
fisttp
icebp
jb
(bad)
out
std
lahf
sbb
jbe
(bad)
mov
lahf
mov
pop
fdivr
mov
sbb
(bad)
std
iret
or
pop
popa
dec
ins
push
pushf
daa
sub
lods
jle
xchg
icebp
lock
call
sahf
pop
inc
sbb
ret
push
daa
adc
sbb
inc
fiadd
rol
ins
dec
aaa
aam
push
pop
xchg
popa
pop
push
mov
mov
aad
(bad)
(bad)
pusha
mov
jg
pop
mov
inc
or
les
sub
je
call
iret
pusha
daa
retf
xor
gs
enter
jae
inc
out
loope
je
iret
fisttp
mov
sub
xchg
push
sar
lahf
pop
cli
repz
adc
mov
mov
mov
mov
lods
sbb
arpl
aad
jns
inc
add
add
sbb
pop
loop
dec
push
rcr
rcl
call
adc
inc
jmp
jo
vcmpps
out
adc
cmp
jp
ins
adc
adc
add
jmp
add
push
sub
repz
idiv
neg
fcmovnu
rol
aad
xchg
mov
cmps
jecxz
push
and
mov
je
movs
pop
xchg
ss
shl
jo
retf
cmp
inc
adc
xor
test
and
fs
inc
sub
lahf
mov
mov
dec
(bad)
(bad)
lahf
das
pop
mov
fs
push
fsin
xchg
cmps
pop
cmp
jbe
cs
adc
mov
bound
mov
or
inc
sbb
xor
pop
lds
or
addr16
aad
inc
cwde
push
mov
push
adc
test
inc
fnstenv
and
jmp
sbb
in
sub
adc
pop
in
in
cmp
call
test
sub
outs
pushf
mov
jns
push
inc
inc
mov
mov
or
ss
cmp
push
test
mov
jne
pushf
(bad)
pop
jno
jne
add
hlt
mov
jmp
adc
leave
mov
lahf
aam
jle
jmp
mov
xlat
addr16
jge
inc
(bad)
and
std
push
sbb
cmp
dec
or
shl
imul
in
xor
xchg
mov
mov
and
(bad)
retf
xchg
cld
repz
dec
cs
pop
test
arpl
xchg
loope
arpl
test
push
sbb
daa
add
add
dec
dec
or
pop
stos
call
inc
push
ja
dec
or
shr
xchg
std
fisttp
pop
sub
into
jae
cli
cdq
int
fistp
loope
repz
xchg
mov
lods
sbb
imul
shl
je
adc
sub
call
ins
fwait
ror
lods
(bad)
xchg
rcr
jl
mov
test
out
pop
and
pusha
mov
xchg
push
xchg
cmp
loopne
ret
cmp
ja
sbb
mov
ss
cmps
fwait
and
test
pusha
adc
mov
jmp
fld
data16
mov
out
mov
int
icebp
je
xor
sub
aam
add
xor
leave
ss
bound
int
loope
mov
adc
mov
int3
out
pop
jb
call
sbb
cmp
popf
sar
mov
inc
sbb
mov
mov
adc
mov
mov
outs
rol
das
inc
das
pop
and
rcl
pushf
nop
cli
add
in
js
pusha
dec
adc
jl
loopne
stc
push
arpl
aam
fidiv
shr
sbb
jge
jne
sar
shr
jp
jp
mov
push
jmp
jbe
lods
mov
ret
inc
fld
lea
push
shl
fidiv
(bad)
into
jo
or
and
pop
xor
xchg
daa
cs
dec
mov
dec
dec
add
sbb
xchg
sahf
cld
icebp
mov
bound
cdq
pop
ficomp
out
rcr
bound
loope
cmp
jp
or
xchg
cmp
adc
scas
jmp
mov
dec
call
dec
test
icebp
addr16
mov
imul
xor
dec
mov
push
jbe
and
jl
out
fldenv
mov
cmp
pop
lods
adc
test
(bad)
iret
daa
sub
out
into
mov
inc
dec
and
jg
jmp
fdiv
popw
adc
xor
xor
mov
mov
jg
mov
idiv
pushf
dec
shl
js
ror
jo
ret
sbb
adc
movs
call
outs
cmovo
add
or
jmp
cmp
clc
out
sti
scas
xchg
repz
pop
inc
push
repz
add
fmul
mov
repz
pushf
stc
rcl
int3
fistp
or
inc
icebp
ds
push
popf
or
sahf
adc
inc
nop
add
pop
mov
ins
in
repz
imul
inc
fucomip
in
stc
mov
aaa
inc
mov
std
mov
push
pop
push
mov
pop
or
lahf
pushf
xchg
fadd
sar
xchg
pop
adc
mov
pop
xlat
mov
ret
aad
jae
cmp
sar
adc
xor
mov
(bad)
mov
and
sbb
mov
mov
xchg
in
clc
mov
aam
rcr
and
and
jae
inc
jmp
inc
add
les
ror
movs
(bad)
cmps
jbe
(bad)
jb
leave
lods
fstp
lea
stos
aaa
jmp
(bad)
in
fmul
xchg
sbb
add
mov
inc
inc
cmp
scas
mov
test
mov
movs
(bad)
pusha
xor
(bad)
mov
and
cdq
imul
in
xor
jnp
pop
xchg
and
jmp
sti
sub
push
pop
inc
jecxz
sbb
cmps
ret
xchg
js
popf
sbb
mov
push
imul
jmp
jbe
popa
cdq
pop
aad
stos
jae
push
xor
retf
adc
cmps
sbb
inc
add
pushf
cmps
clc
pop
jge
test
inc
pop
jecxz
adc
and
lahf
aaa
sub
and
stos
mov
push
vmwrite
jmp
mov
iret
pop
shl
test
jg
pop
add
sbb
pop
cmp
rol
xor
lock
mov
outs
cmps
add
mov
aam
sub
xchg
adc
fist
push
loop
(bad)
int3
shl
lock
int
adc
ret
add
ret
outs
sub
add
add
bound
jecxz
cdq
test
mov
sub
cld
and
xchg
shr
jae
mov
icebp
bound
or
rcl
sti
sub
sbb
das
scas
out
inc
add
jo
in
or
mov
fmulp
adc
stc
outs
jae
nop
leave
scas
dec
test
cli
xchg
lds
sub
lds
push
or
or
push
cs
out
ret
int3
rcl
in
mov
mov
sub
xchg
mov
jecxz
(bad)
fdivrp
or
sub
stc
push
sar
dec
xchg
xchg
aad
push
gs
jecxz
mov
das
jnp
mov
xor
repnz
fist
fnstsw
inc
and
int
movnti
retf
add
cmps
sar
ins
(bad)
jmp
or
cmp
or
push
out
not
sub
repnz
and
push
xchg
clc
ss
cmp
mov
add
retf
cmp
std
inc
callw
cmps
xor
dec
scas
popf
push
inc
pop
sar
pop
fiadd
mov
cdq
dec
cmp
sbb
pop
pop
repnz
jb
cs
mov
sbb
popf
nop
js
pop
test
fwait
cmp
mov
loope
add
xor
pop
fs
je
inc
fidiv
aas
std
int
cs
mov
lea
xor
cmps
ret
xor
pop
mov
imul
div
bound
mov
sub
xlat
aad
adc
dec
imul
jge
sub
sbb
push
dec
in
out
cmc
cs
add
fistp
retf
or
push
jo
fdivr
jge
cs
retf
or
in
outs
jp
mov
lds
fsub
or
mov
call
scas
pop
sub
mov
(bad)
mov
or
daa
sbb
push
fdivrp
jge
sahf
jmp
enter
fcmovu
add
pop
hlt
jp
add
iret
cmp
std
js
ins
and
sbb
xchg
retf
outs
fadd
and
scas
fidiv
jne
mov
imul
aad
mov
ja
add
push
pop
cmp
(bad)
mov
pop
or
jne
leave
iret
cmps
adc
cmp
pop
ja
jmp
into
lods
in
cli
xor
dec
mov
es
repz
(bad)
pushf
lock
js
jb
cld
push
movs
(bad)
mov
bound
push
sbb
sbb
inc
mov
cmc
push
pop
xchg
push
aam
loop
mov
arpl
mov
push
loop
mov
adc
cs
fbstp
rcl
leave
and
scas
push
mov
test
scas
push
repnz
rep
xor
xchg
gs
pop
pop
call
pop
scas
sub
jae
sti
inc
rol
cmp
jae
inc
mov
fwait
popa
int3
stos
jge
xchg
mov
out
xlat
pop
mov
xor
rol
sbb
rol
pusha
add
and
xlat
push
adc
push
push
pusha
sub
mov
xchg
xor
mov
ret
add
and
jg
retf
out
sbb
outs
sbb
push
test
pop
fild
push
scas
xor
scas
mov
jo
out
and
sbb
scas
mov
jns
in
fwait
cwde
add
js
daa
into
cwde
loop
cmp
and
cwde
mov
not
pop
hlt
inc
imul
ror
pop
xor
jne
int3
or
xchg
cmps
push
test
inc
enter
daa
push
cdq
aad
popa
into
pop
add
stos
cwde
mov
dec
es
pusha
into
std
inc
fdivr
mov
ds
xor
das
in
(bad)
in
jecxz
push
xchg
mov
jb
jp
inc
mov
ficom
rcr
inc
adc
call
cli
(bad)
nop
adc
jge
pop
inc
mov
add
retf
clc
sub
(bad)
in
(bad)
lock
inc
cld
daa
lods
sti
mov
inc
loopne
push
xchg
mov
add
sti
(bad)
icebp
push
fldenv
mov
out
les
arpl
push
imul
mov
sbb
pop
fcom
test
dec
push
(bad)
fimul
pop
pop
pop
add
xlat
push
sbb
sbb
out
add
mov
sbb
aad
ja
pop
lods
inc
data16
cmp
push
outs
iret
sub
inc
popa
push
repz
inc
out
addr16
cmps
push
mov
scas
clc
sbb
jmp
mov
jae
cmps
and
sub
cmp
dec
ins
xchg
loop
call
jmp
add
ficomp
mov
mov
add
movs
outs
mov
xor
and
mov
pop
je
cwde
jmp
imul
or
push
sbb
(bad)
mov
xchg
cmp
xchg
and
ins
adc
jne
inc
fwait
and
rol
xchg
pop
(bad)
out
add
and
pusha
mov
mov
sbb
sub
(bad)
sbb
push
js
push
jne
jo
jp
pop
bound
aaa
xchg
stc
add
mov
jp
pop
and
test
das
bound
(bad)
adc
sub
aad
push
xchg
mov
xchg
xchg
pushf
sub
mov
shl
test
dec
sahf
pop
das
add
sbb
std
mov
mov
pop
cwde
mov
imul
cmp
cmp
jge
push
ret
mov
fst
xchg
pop
mov
outs
push
xchg
fdivr
clc
cmp
fwait
in
mov
xchg
sub
mov
stos
(bad)
mov
test
add
out
jg
(bad)
xor
xor
test
jmp
jmp
pushf
addr16
or
stc
fcom
pop
ret
mov
pop
pop
xchg
cmp
call
or
es
int
ror
jne
jo
pop
inc
lods
fadd
adc
jp
lock
push
xor
ret
mov
cmp
jl
ins
add
in
shl
pop
aad
jge
adc
fidivr
sahf
push
rcr
dec
push
int
mov
test
add
clc
or
sti
hlt
mov
(bad)
push
xchg
stos
dec
ins
nop
mov
push
cmp
test
stc
inc
sub
jne
(bad)
mov
mov
cmps
jae
inc
and
inc
jmp
push
xor
xor
or
sub
dec
(bad)
ins
inc
idiv
bound
sbb
jl
fdiv
mov
pop
mov
hlt
add
and
scas
sahf
jae
movs
rcl
fmul
(bad)
lds
xchg
push
aad
cld
push
ret
dec
mov
int3
in
mov
pushf
cld
jns
lds
sub
ds
pop
imul
ss
popf
push
and
push
jne
loop
push
inc
xchg
ficomp
aas
jmp
fcomp
lea
fmul
adc
pop
or
and
lods
push
imul
in
aas
repnz
sbb
dec
or
or
test
push
fwait
inc
fldenv
aam
mov
xor
mov
test
jmp
mov
adc
cmc
dec
aas
mov
add
sub
out
pop
stc
sar
jecxz
stos
push
push
xor
popf
lods
xchg
inc
cmc
jl
xchg
cwde
es
jp
xchg
adc
xchg
mov
mov
(bad)
loopne
sar
movs
sub
inc
or
mov
xchg
jecxz
or
pop
out
sar
mov
mov
sub
icebp
lahf
or
sahf
mov
inc
xchg
sar
imul
dec
mov
call
ins
jnp
loopne
lahf
in
out
or
repz
daa
adc
sub
ficom
and
inc
imul
mov
and
ss
ds
fstp
outs
xor
xchg
jg
out
push
lahf
push
push
scas
push
fdivr
cmp
stc
push
sub
das
mov
lods
push
jnp
pop
add
ror
mov
cld
cs
jb
leave
aad
shld
xlat
xor
aaa
inc
gs
sub
and
fst
arpl
hlt
mov
mov
mov
xchg
push
sti
cwde
fadd
mov
or
icebp
mov
pop
popf
push
xchg
cmp
repz
mov
movs
sbb
in
(bad)
push
shl
int
and
fs
cs
jecxz
sbb
outs
sahf
xchg
push
add
shl
cmp
je
fs
nop
push
cdq
in
dec
mov
in
xor
(bad)
xlat
ret
aam
jge
or
or
xchg
jge
mov
ins
xor
xchg
cmps
mov
jns
lahf
mov
mov
xor
fcmovne
fistp
std
test
scas
mov
test
loope
lods
cdq
or
dec
or
jbe
xchg
and
jb
pop
mov
mov
mov
inc
out
ss
dec
pop
repnz
add
(bad)
repz
push
mov
xor
and
xchg
out
fwait
inc
sbb
inc
sbb
out
ja
icebp
ret
dec
div
dec
retf
xlat
test
call
cmp
outs
movs
xchg
mov
dec
das
arpl
or
sbb
mov
jb
jg
pop
and
or
cmc
inc
shrd
jle
jp
nop
push
out
leave
ret
inc
in
mov
out
aaa
mov
pusha
or
push
into
push
mov
pop
mov
test
aad
dec
test
(bad)
and
daa
cld
push
mov
push
xchg
dec
in
inc
fdiv
fdiv
add
rol
ss
inc
fld
push
or
stos
or
retf
add
cmp
(bad)
std
loop
jg
mov
clc
push
sbb
int
and
fwait
mov
sub
jb
pop
sbb
jmp
inc
pushf
movs
add
add
cmps
fs
loopne
push
imul
and
xor
cmp
shl
loopne
iret
fdiv
es
fcomp
cdq
adc
in
sub
jl
cli
xchg
popf
sub
stos
xchg
pop
fwait
mov
jmp
retf
or
cmc
or
inc
loop
dec
idiv
sub
nop
cld
sbb
sbb
daa
arpl
lea
push
mov
fld
(bad)
(bad)
ss
xchg
push
xlat
sub
(bad)
shl
jge
pop
test
or
sbb
call
jmp
cwde
xchg
cmp
cli
cmc
data16
cmps
and
mov
and
daa
call
or
xchg
in
enter
pop
sbb
lods
(bad)
sub
movs
das
addr16
sahf
jae
(bad)
fstp
xchg
cmc
es
into
cmp
lods
push
(bad)
inc
pop
addr16
mov
mov
repz
fst
sub
fisubr
aam
pop
xchg
xchg
cmp
xchg
sub
in
into
test
cmp
cmp
aaa
and
pop
lahf
(bad)
aam
xor
std
cmc
sub
mov
adc
pop
sub
cmc
mov
cli
mov
adc
iret
or
inc
adc
out
pop
lea
hlt
mov
rcl
out
loope
cld
cld
imul
push
or
lock
lds
jb
in
sbb
in
jge
cwde
mov
mov
stos
jbe
or
loope
jecxz
mov
and
aaa
mov
mov
ss
movs
mov
int3
call
mov
loopne
fwait
enter
add
pop
inc
repnz
retf
or
and
fimul
pop
pusha
lahf
fcomip
cmp
and
sbb
imul
mov
inc
jge
out
aas
inc
test
(bad)
retf
data16
ins
mov
xchg
push
add
bound
dec
add
cmp
lock
stos
cmp
cmps
dec
aas
jge
clc
ret
adc
push
ret
sub
or
imul
out
fs
outs
push
movs
inc
mov
push
ja
push
inc
push
add
rcl
stos
jg
rcl
nop
popa
sbb
and
jmp
mov
loope
add
push
push
je
mov
mov
(bad)
cmp
pop
call
mov
out
and
pop
inc
mov
arpl
loopne
xor
shr
arpl
fs
div
enter
mov
xlat
jp
adc
push
(bad)
sub
jae
call
icebp
jns
test
pop
xor
and
and
push
call
cmp
arpl
imul
in
scas
in
mov
xor
cli
cwde
ins
lahf
and
pop
out
dec
lahf
push
cmp
ins
(bad)
popf
cld
sub
call
aad
into
stos
inc
dec
adc
push
enter
leave
leave
xchg
dec
imul
jbe
mov
test
jb
mov
mov
gs
push
inc
cs
gs
arpl
mov
mov
or
adc
sub
stos
sbb
fsubp
sub
mov
xchg
shl
add
gs
adc
xchg
mov
mov
inc
jbe
(bad)
daa
out
adc
mov
mov
(bad)
shr
pop
out
xchg
jmp
test
mov
or
das
sub
inc
dec
inc
jecxz
aad
fmul
lahf
inc
ja
sbb
addr16
push
pushf
jnp
pop
xchg
and
jmp
je
jb
jle
cmp
fldenv
(bad)
pop
xchg
pop
xchg
(bad)
test
es
add
gs
or
jle
stos
jmp
mov
jmp
call
pop
mov
sub
lock
inc
es
cmp
jp
adc
dec
ins
and
mov
sub
imul
dec
int
test
sub
add
push
mov
add
sub
jb
jecxz
inc
jae
sub
(bad)
sahf
cdq
jp
inc
cld
mov
icebp
(bad)
call
les
cmp
pushf
cli
pop
jnp
je
shr
jmp
bound
jae
push
shr
xchg
and
(bad)
sub
sti
adc
arpl
push
lods
imul
jg
xor
xchg
cmp
lds
cmp
push
dec
dec
rol
xor
mov
arpl
and
or
inc
sbb
test
cmps
fldcw
add
and
data16
shr
(bad)
rol
pop
addr16
movs
push
mov
iret
enter
scas
sbb
les
or
pop
sub
jmp
pushf
repz
mov
pop
push
xor
xlat
ret
dec
push
sub
pushf
loopne
xor
outs
dec
push
lahf
mov
fsubr
bsf
(bad)
clc
(bad)
pop
call
hlt
(bad)
out
inc
pop
repz
call
test
jb
cdq
mov
add
pop
sub
pop
xchg
adc
mov
jmp
mov
ja
jmp
pop
pusha
jno
dec
jl
retf
ins
jbe
nop
mov
add
stos
test
scas
popf
sbb
pop
mov
loop
fs
fdiv
jae
outs
xor
sub
mov
push
stos
(bad)
dec
pop
cmc
push
push
out
leave
fistp
in
mov
mul
out
sub
mov
adc
jmp
cmp
mov
cmc
fnsave
pushf
shr
xor
pop
pushf
ja
jle
in
popa
les
inc
jmp
aad
adc
inc
outs
jg
add
push
pop
and
shr
stc
or
mov
sahf
stc
loopne
fiadd
in
xor
aam
sub
pop
in
add
adc
or
push
cmps
in
cmp
push
int3
cli
jnp
sbb
das
xlat
cli
cmp
push
inc
ffreep
inc
daa
mov
sbb
sub
xor
push
fbstp
jge
xor
(bad)
fdivr
or
loop
xchg
(bad)
fst
mov
movs
in
sub
xchg
inc
adc
mov
test
push
jp
xor
sahf
lahf
jecxz
inc
and
fimul
jecxz
dec
push
es
sub
add
test
jo
pop
push
nop
pop
mov
into
mov
stc
jmp
pop
je
push
int3
ins
jnp
mov
cli
push
daa
xchg
pop
ins
jle
dec
or
inc
or
lds
push
jne
pop
mov
and
(bad)
cmps
add
neg
xlat
mov
loopne
mov
mov
mov
gs
inc
out
and
mov
sub
sbb
mov
xchg
jmp
fld
aam
mov
std
dec
scas
push
add
pop
jnp
imul
jge
cmp
(bad)
adc
js
ret
ret
add
mov
test
fucomp
xchg
xchg
fisttp
imul
sub
ja
dec
les
nop
data16
push
and
or
mov
popf
inc
xchg
aam
mov
ja
dec
popf
add
mov
jmp
in
mov
jle
pop
push
or
ins
mov
or
mov
lods
in
repnz
popa
lods
mov
stos
sbb
ja
aaa
repnz
cmp
iret
hlt
leave
scas
mov
xchg
cmp
add
outs
out
adc
fsub
jns
push
loopne
shl
lock
fdiv
push
adc
xchg
arpl
inc
mov
xlat
sbb
mov
xor
sbb
and
aas
fnsave
dec
sub
or
xchg
dec
fldcw
jbe
leave
cmp
fwait
jge
jecxz
and
and
sbb
add
cmp
in
push
or
addr16
or
or
scas
cmc
ror
and
in
mov
jp
stc
jmp
mov
sti
out
and
pop
js
push
push
(bad)
mov
mov
xchg
pushf
in
add
mov
inc
ins
aam
outs
mov
js
sub
cmp
add
dec
inc
pusha
push
xor
es
sbb
push
inc
rcl
cs
dec
xchg
scas
xchg
cmp
mov
or
ins
test
mov
xor
pop
cmp
pushf
ins
add
add
movs
xchg
xchg
pop
sbb
push
pop
les
(bad)
aad
aad
xor
ins
cwde
cmp
fiadd
lock
test
ss
xchg
cmps
inc
mov
mov
loopne
loopne
dec
data16
push
test
mov
gs
fsubr
lds
mov
add
das
sahf
gs
icebp
dec
pop
dec
xor
scas
push
scas
or
pop
mov
pop
add
fidiv
xchg
rol
ja
mov
sbb
mov
xor
dec
jp
mov
mov
outs
(bad)
(bad)
test
rcl
dec
or
mov
push
call
push
sub
or
rol
retf
test
(bad)
cs
stos
loop
mov
outs
mov
mov
dec
cmp
mov
ins
xchg
pop
imul
out
stos
movs
and
movs
out
xor
daa
dec
retf
call
idiv
mov
cmps
mov
fld
fwait
dec
lock
xor
cmp
call
sub
fistp
jne
popa
xchg
xor
in
out
jmp
stos
out
sbb
inc
das
(bad)
int3
or
sbb
imul
aad
push
inc
pop
xchg
or
repz
sub
xor
push
loopne
or
sub
sub
sbb
mov
cmp
adc
dec
jmp
iret
xor
cmps
or
popf
jbe
ss
adc
lods
(bad)
(bad)
(bad)
push
or
jb
xchg
cmp
fidiv
pop
retf
mov
dec
sbb
mov
ins
sbb
shl
(bad)
out
and
dec
lods
(bad)
fidivr
pop
call
mov
mov
push
outs
stos
ret
inc
xor
popa
in
mov
xor
push
test
jne
mov
cld
iret
sahf
rol
adc
cmps
dec
xchg
es
shl
addr16
repz
in
or
xchg
xor
inc
rol
jecxz
adc
inc
jbe
cs
rcr
scas
or
jl
sub
xor
jmp
ja
jno
cs
out
aad
(bad)
xlat
push
outs
dec
(bad)
cli
mov
aad
or
dec
cmp
push
jo
leave
cld
movs
into
jae
retf
xlat
cmp
jmp
repz
test
sbb
cmps
aam
fisub
push
pop
movs
je
mov
and
imul
mov
or
xchg
dec
dec
or
or
jne
dec
pop
cmc
jno
jge
add
mov
leave
adc
in
lds
sub
inc
ret
xor
push
jb
mov
arpl
pop
sub
xor
jns
and
ret
cmc
adc
sbb
mov
push
outs
xchg
mov
pop
in
add
jg
inc
daa
push
push
rcr
fidivr
sub
mov
lods
(bad)
mov
pop
inc
pop
adc
jae
pop
pop
movs
inc
inc
loope
pushf
enter
inc
(bad)
out
es
sub
cmp
int3
dec
and
sbb
clc
out
pop
(bad)
data16
repnz
pop
dec
jnp
add
mov
popa
not
pop
dec
pop
or
lds
sahf
imul
fwait
or
inc
loope
jns
push
mov
jb
fisub
in
lods
cdq
mov
aam
mov
fnsave
xchg
cs
clc
mov
mov
xchg
mov
jmp
sbb
lock
mov
xchg
ret
in
adc
sti
cmp
mov
xchg
xchg
retf
or
mov
pop
shl
outs
test
cmp
cmc
test
sbb
jmp
mov
repnz
mov
adc
xor
imul
stc
out
(bad)
or
push
test
mov
inc
fadd
rcl
pop
shr
jmp
bound
call
or
lods
cmc
div
mov
out
mov
jae
or
sub
mov
repnz
mov
fs
out
sub
clc
hlt
clc
mov
or
push
test
ss
out
add
jle
call
push
shl
ins
add
xor
ret
push
mov
pushf
pop
sub
(bad)
in
and
mov
mov
add
push
push
xor
fdivr
push
test
add
js
push
sbb
xchg
xor
mov
dec
jne
inc
shr
aaa
ins
and
popf
push
imul
cmp
or
dec
hlt
pusha
push
dec
test
or
xor
or
scas
adc
xchg
mov
ret
ss
push
inc
sar
bound
call
jl
shr
dec
in
add
add
cmps
inc
imul
inc
mov
mov
inc
js
sub
xor
inc
dec
mov
xchg
ss
and
jge
xor
cld
popa
les
pop
jecxz
pop
jmp
push
shr
mov
cwde
pop
mov
jecxz
(bad)
jmp
fwait
scas
pusha
pop
sub
push
adc
jmp
cmc
push
enter
push
jmp
add
ins
mov
mov
jnp
hlt
xlat
jg
cmp
mov
pushf
xchg
inc
outs
dec
push
dec
and
cmp
adc
sti
or
lods
adc
sbb
fwait
(bad)
mov
into
dec
icebp
or
pop
int3
gs
sub
inc
sbb
aas
icebp
leave
adc
pop
jle
and
pushf
les
loopne
jg
lods
mov
shl
stc
push
addr16
jl
sub
push
mov
add
shr
and
cli
push
es
int
leave
hlt
ja
scas
enter
cmovge
inc
xor
je
stc
or
push
cmp
pop
cs
push
and
xchg
jo
ins
ja
push
or
ret
pushf
loopne
jecxz
(bad)
adc
rcr
jns
jb
leave
rol
jno
sti
xchg
gs
push
push
push
sti
shl
test
mov
loopne
fld
scas
dec
xchg
arpl
jecxz
dec
mov
cmps
mov
stc
ins
cmp
pop
mov
les
ds
lea
sbb
fs
and
fst
test
popf
inc
sub
les
xor
mov
xor
mul
push
lock
ror
fsubr
or
arpl
sbb
xor
mov
int3
jno
jl
ins
popf
and
pop
cmp
clc
add
(bad)
shr
xor
jg
xchg
jle
and
pop
mov
push
lea
or
out
fwait
jp
movs
push
fnstcw
adc
jns
aad
or
sub
add
inc
out
xchg
sub
std
mov
cmp
pop
xor
xchg
mov
pop
lea
sbb
sar
sub
clc
and
mov
fs
(bad)
cmp
xor
test
jge
retf
fsubrp
fwait
jnp
rcr
jae
pusha
shl
fstp
push
add
pop
mov
adc
ss
pop
pop
imul
mov
sbb
lock
imul
mov
mov
xor
(bad)
dec
fld
adc
mov
cwde
mov
dec
sar
daa
lea
(bad)
dec
test
sub
add
inc
repnz
shr
mov
jb
jg
sbb
hlt
add
inc
bnd
lock
cmc
mov
or
mov
test
fidivr
add
loopne
loope
cli
sub
push
sbb
dec
add
dec
(bad)
ja
inc
inc
add
ins
cmc
push
fucomip
xor
sbb
out
es
ret
ins
icebp
test
mov
and
shl
call
xchg
test
xor
call
in
mov
jp
out
pop
cmp
xchg
movs
adc
(bad)
ja
add
inc
push
hlt
sti
or
xor
push
jge
(bad)
out
out
push
iret
mov
add
fcom
dec
push
dec
mov
push
jne
jbe
dec
cli
sub
lahf
sub
shl
out
lock
or
or
(bad)
cmp
shr
cdq
xchg
xor
jo
iret
cmps
fwait
cmp
and
or
ja
ins
and
sub
mov
add
sbb
cmps
lds
sub
cmp
cs
shl
mov
jbe
mov
jmp
call
jns
cs
fxch
xchg
and
cmp
mov
imul
mov
mov
mov
imul
jo
inc
lds
push
sub
xlat
push
jne
mov
cld
je
xchg
test
jl
test
movs
mov
icebp
cmp
push
and
fs
sbb
(bad)
adc
sbb
ds
fnstcw
cmp
mov
mov
fisub
(bad)
shl
xchg
lods
jle
sar
mov
or
add
jae
xchg
mov
push
int
minps
push
loop
pop
fcom
bound
enter
movs
push
mov
shl
sbb
es
xor
stos
cmc
mov
sub
mov
inc
(bad)
jecxz
sbb
inc
fdivr
test
sub
jae
mov
out
jne
es
mov
cmp
stos
cmp
sub
int
(bad)
sar
(bad)
cmp
sbb
aad
mov
inc
in
jne
stos
fadd
and
jle
pop
shr
xor
add
icebp
sbb
jmp
mov
push
cli
cmp
xchg
mov
sub
mov
push
add
aaa
or
mov
stos
xchg
test
dec
in
mov
repz
mov
mov
popa
jmp
xor
inc
sbb
xor
gs
rcr
arpl
inc
or
(bad)
lds
and
inc
jle
ins
(bad)
jo
mov
outs
sub
shl
mov
shl
dec
aam
fs
add
push
sub
rol
outs
add
or
jecxz
inc
pop
ds
(bad)
(bad)
jl
sub
mov
and
push
ds
es
jle
add
pop
xor
in
dec
out
mov
dec
mov
das
es
in
mov
sub
pop
mov
add
xchg
ret
xor
enter
mov
daa
js
or
icebp
je
cmp
inc
into
jmp
(bad)
mov
in
sets
cwde
sub
(bad)
mov
pushf
cld
adc
sub
in
mov
in
push
ss
js
push
push
mov
mov
xor
repnz
loope
jl
or
pop
dec
mov
jo
xor
mov
adc
pop
and
not
mov
inc
retf
mov
lods
fdivr
sahf
and
retf
mov
cmp
shl
mov
dec
push
jmp
mov
cmps
inc
sti
test
mov
push
and
iret
scas
sub
jns
and
adc
cmp
mov
test
xor
mov
std
push
sub
and
mov
xchg
adc
jno
mov
iret
lods
add
xchg
cdq
movs
jo
es
movs
das
scas
out
sbb
ret
xchg
je
test
jp
add
out
call
int
cmp
inc
pop
je
popa
add
adc
xor
mov
mov
and
push
lods
fdiv
retf
pop
push
jbe
pop
fidiv
int3
nop
pxor
stos
jne
sub
inc
int
pop
adc
cdq
add
scas
lock
int3
lods
inc
jl
add
push
mov
mov
pop
mov
retf
pushf
or
fbld
push
(bad)
jo
xchg
fstp
and
dec
idiv
stos
scas
cmc
pop
add
xlat
pop
and
test
stc
stos
ficomp
shl
jg
scas
or
jae
sub
fstp
dec
fnstcw
icebp
xchg
loop
jmp
jne
scas
mov
dec
xor
iret
xchg
aad
inc
inc
es
add
mov
mov
ins
rcl
cmp
stos
sbb
add
mov
and
aaa
enter
stc
enter
mov
xor
mov
push
outs
mov
adc
cmp
clc
gs
imul
les
xchg
adc
cdq
lea
mov
ret
ja
adc
add
mov
sub
dec
stos
push
std
inc
popf
sub
stos
mov
sbb
xor
fidiv
cmps
xchg
inc
dec
test
(bad)
iret
(bad)
push
pusha
mov
xchg
sbb
lock
jecxz
or
lahf
in
push
cdq
cs
jle
xor
mov
xchg
pop
sub
jg
xchg
mov
mov
clc
test
cli
js
mov
cmp
mov
cmc
out
or
push
shr
in
sub
dec
dec
js
cmp
adc
pop
aam
popf
push
(bad)
sub
or
lods
sub
je
int
fmul
inc
stos
bound
mov
pushf
(bad)
ja
sub
xor
fst
dec
push
pop
push
pushf
and
add
aad
cmp
ins
(bad)
jmp
sub
out
mov
fcmovnbe
push
sbb
lock
bound
nop
mov
fcomp
inc
in
aam
pop
jne
ret
adc
add
adc
(bad)
xchg
push
retf
pop
xchg
test
add
pop
mov
cmp
add
sti
ds
rcl
out
lds
xchg
dec
xor
push
movs
or
push
and
bound
(bad)
aas
adc
push
mov
loopne
mov
pop
xchg
jae
sub
xlat
inc
sub
dec
lahf
jmp
(bad)
rol
dec
push
mov
or
sbb
mov
jbe
ins
and
loope
call
push
retf
xchg
push
mov
rol
adc
jle
push
outs
pop
in
inc
adc
retf
shl
add
dec
(bad)
test
jnp
iret
scas
inc
xchg
loopne
ficomp
mov
jl
cmps
bound
stos
sar
push
sub
inc
(bad)
or
xor
xor
push
push
std
fcom
and
push
das
mov
jmp
mov
test
adc
mov
fsub
pusha
popf
mov
cmp
sbb
mov
aam
fiadd
pushf
cli
sub
bound
inc
jne
dec
outs
add
out
js
add
pop
pop
cmps
cmps
popf
fsub
fstp
ins
arpl
pop
test
les
pop
repnz
pushf
aad
test
or
outs
sub
jnp
mov
jmp
loopne
shr
cmp
shl
cmp
mov
pusha
std
jo
shl
ja
push
cmps
ins
test
inc
in
fst
jo
mov
xor
data16
or
fmul
out
xchg
inc
xchg
or
out
adc
and
inc
lahf
cmp
retf
xchg
scas
ret
call
xor
sbb
add
retf
mov
ins
or
cmp
xlat
outs
sub
retf
aaa
xor
jle
mov
xchg
sub
sub
cdq
or
dec
mov
cld
mov
or
cmc
mov
cmp
cwde
rcr
jmp
and
pop
pop
inc
add
and
xchg
add
ds
jne
not
xor
or
push
sar
aam
jne
push
adc
jmp
or
cmps
mov
int3
call
data16
test
and
ficom
mov
mov
nop
dec
mov
cmps
fwait
call
push
adc
mov
push
mov
xchg
mov
std
and
push
inc
movs
cli
sti
in
jb
movs
outs
retf
sub
pop
fdivr
cmps
dec
jecxz
stos
aam
xor
pop
(bad)
xor
adc
cmp
pop
dec
or
movs
add
inc
sub
push
adc
arpl
clc
fisttp
sahf
and
sbb
mov
cdq
pop
stos
into
stc
jae
dec
call
jmp
rol
push
es
mov
mov
stos
shr
push
aas
int3
div
add
stc
xchg
lock
outs
lahf
(bad)
loopne
pop
xlat
ins
xchg
pop
(bad)
jp
dec
cld
ss
ins
sub
pop
data16
cmp
and
jl
push
push
(bad)
lds
rol
cmp
lds
lods
add
push
pop
retf
xor
push
popa
fsub
mov
pop
pop
sbb
out
and
jo
popf
outs
jge
xchg
(bad)
xchg
stc
into
push
push
rol
and
jb
mov
into
jle
cmp
dec
add
xchg
arpl
shl
mov
arpl
jl
fs
iret
aas
dec
ror
adc
cdq
fldenv
xchg
dec
fcomip
movs
sub
das
test
mov
je
add
js
arpl
jmp
inc
movs
xchg
(bad)
cmc
jno
or
imul
shl
adc
scas
pop
xchg
test
in
pop
in
ja
adc
mov
mov
adc
test
adc
push
inc
nop
xchg
pop
data16
in
mov
xchg
fsub
stos
xor
jmp
arpl
mov
aas
xor
push
pop
xor
pop
or
or
xchg
cmp
adc
inc
enter
(bad)
lock
push
push
js
xchg
idiv
mov
dec
lahf
ret
mov
or
mov
and
and
pop
xlat
adc
sbb
inc
test
mov
mov
sub
cbw
sub
jg
pop
cmc
int
adc
sbb
dec
(bad)
dec
mov
shl
ins
mov
inc
jns
or
cmp
test
push
xchg
popa
test
dec
and
loopne
ins
ds
rcl
or
movnti
push
rol
movs
cli
lods
dec
dec
or
retf
jecxz
jg
xchg
and
pop
es
movs
push
cmps
sbb
(bad)
loop
or
lea
add
cmps
jg
cs
add
xchg
sbb
lahf
mov
js
mov
pop
pushf
retf
fs
sbb
xor
jb
push
or
and
xor
mov
or
mov
sbb
dec
inc
pop
iret
scas
lea
inc
rcl
cmp
loopne
jecxz
cmps
jmp
push
hlt
jne
jbe
xchg
push
pop
(bad)
lea
or
repnz
jae
pmulhw
nop
lods
push
test
add
mov
mov
cmps
sub
or
inc
aas
and
or
aas
add
nop
cmp
or
fistp
rcr
push
pop
imul
jmp
mov
or
lock
ret
sbb
je
out
mov
sub
jl
sbb
dec
add
loop
inc
sub
retf
jg
test
add
mov
int3
lahf
xor
cwde
mov
and
outs
pop
sbb
stos
xchg
inc
retf
xchg
dec
ins
inc
ja
nop
jp
and
fwait
adc
leave
test
sub
(bad)
cmps
lahf
sbb
or
xchg
xchg
repz
mov
cwde
inc
mov
movs
in
test
mov
js
arpl
je
bound
in
push
or
xor
rol
jmp
fld
test
mov
pop
lock
cmp
cmp
das
xchg
ja
jnp
and
dec
push
leave
inc
sbb
inc
mov
xchg
sbb
das
scas
(bad)
cli
repz
call
ins
leave
xor
mov
sub
sbb
sub
clc
push
mov
bound
icebp
pop
xor
js
inc
xlat
icebp
cmc
mov
int
dec
dec
loop
sbb
sbb
in
and
aam
les
xor
xor
add
cmc
adc
cmp
mov
ss
(bad)
and
ja
xlat
and
mov
test
add
popa
arpl
daa
jg
(bad)
aam
js
cli
cmp
xor
sar
mov
call
adc
mov
mov
icebp
sub
sub
scas
jle
test
cwde
mov
fs
jae
hlt
stos
xchg
fwait
xchg
in
jb
fdiv
sub
sahf
out
push
cmp
xchg
dec
jmp
xor
add
iret
sub
jge
arpl
jecxz
sbb
sub
pop
lea
cmps
(bad)
cmc
cmp
repz
cmp
popf
jmp
mov
call
and
push
sti
xchg
adc
stos
sub
jmp
ins
fisttp
xor
inc
jne
call
lea
enter
fisttp
dec
pop
rcr
dec
out
pop
inc
adc
jmp
sar
loopne
or
hlt
imul
movs
or
aad
dec
in
mov
nop
arpl
jge
ins
lods
sbb
sub
inc
and
jb
and
xor
and
gs
sub
pop
shl
sub
push
push
push
aam
xor
daa
sar
xor
daa
push
mov
push
or
mov
mov
fst
fsubr
and
cmps
rcr
mov
mov
(bad)
imul
cwde
mov
lea
fcmovnb
xchg
sub
adc
push
sub
sbb
outs
mov
cmp
xchg
mov
mov
mov
sbb
(bad)
or
cmp
mov
test
pusha
and
arpl
leave
xchg
add
dec
out
stos
fld
lahf
mov
mov
pop
jmp
cmp
loope
adc
jno
adc
daa
pop
jb
pop
ret
test
lock
jns
outs
in
xchg
adc
(bad)
sar
push
sub
int3
fwait
loopne
pop
add
das
aam
add
or
xchg
and
push
lods
xchg
cmp
movs
xor
and
sub
and
mov
inc
mov
push
(bad)
hlt
xchg
mov
data16
test
idiv
and
jl
cld
loopne
dec
sbb
and
sahf
cwde
bound
lahf
or
pop
ss
idiv
shl
pop
xor
addr16
pop
push
mov
mov
push
cmp
retf
push
fucomip
fcom
sbb
xlat
sub
(bad)
sub
cmc
sbb
mov
loope
push
xchg
xchg
xchg
sub
test
in
inc
(bad)
mov
jge
icebp
ds
inc
xor
add
ins
mov
mov
mov
js
call
sub
jb
dec
stos
cmp
sub
shl
xchg
push
mov
xor
out
dec
or
mov
ds
nop
pusha
es
sbb
push
jg
outs
(bad)
cmps
cmp
(bad)
inc
(bad)
popf
mov
add
xchg
loope
in
jl
sahf
jge
rcr
cwde
mov
mov
sbb
mov
jae
push
mov
ss
pusha
xchg
lea
xchg
inc
out
sub
test
loope
xlat
inc
and
rcl
imul
or
cs
(bad)
in
cwde
aas
fwait
xor
xchg
ins
xor
call
outs
jge
pop
xchg
call
jg
ret
loopne
das
xor
adc
not
stos
out
dec
pop
mov
xor
mov
test
sbb
cld
repz
jecxz
fdivrp
test
sub
in
movzx
imul
aaa
pop
xor
jg
ret
pop
adc
and
ins
fs
out
movs
iret
fmul
rep
xchg
inc
dec
rcr
mov
and
bound
in
mov
cmp
cmp
adc
jo
aad
fmulp
(bad)
mov
mov
xchg
fisttp
sar
hlt
sbb
jb
mov
std
xchg
ja
movs
jle
adc
or
lds
test
lds
ins
jg
xchg
or
adc
ret
mov
cmp
pop
or
add
mov
pop
inc
les
xchg
outs
test
(bad)
inc
ror
jbe
cld
movs
mov
sub
retf
(bad)
lods
aaa
fstp
jo
call
mov
sub
mov
popf
push
push
xchg
shr
ins
loope
mov
(bad)
loop
(bad)
cmp
add
cmps
mov
fdivrp
loopne
xchg
and
retf
cs
xchg
call
xor
bound
adc
int3
sbb
dec
mov
cmps
adc
xor
std
outs
push
enter
sbb
ss
and
sahf
adc
adc
(bad)
(bad)
sahf
fist
xor
jecxz
cmp
call
lea
scas
pusha
and
int
mov
ror
(bad)
ficom
int3
adc
dec
dec
mov
cli
(bad)
cmp
fdiv
icebp
pushf
add
pop
test
stos
mov
(bad)
sar
cdq
in
mov
jge
pop
jp
mov
push
dec
xchg
dec
mov
int3
pop
dec
cmp
aas
mov
sbb
mov
push
inc
imul
bound
ss
xchg
mov
mov
not
or
mov
ins
push
mov
jecxz
push
mov
xor
push
jns
shl
jecxz
int3
push
das
cmp
ins
or
(bad)
ds
je
sub
aam
sub
dec
sbb
loopne
lods
imul
ds
ret
push
call
or
mov
clc
mov
add
movs
sti
pop
mov
jp
jmp
lods
jmp
rcl
and
ds
push
or
test
xchg
jp
addr16
ret
xchg
sub
sbb
aam
cli
add
scas
lods
mov
ror
nop
arpl
cmp
cmp
sbb
push
stc
push
mov
and
pop
push
cmps
faddp
push
push
pop
adc
fstp
cli
mov
lahf
jmp
push
push
pop
jns
adc
ror
mov
and
into
and
pop
xor
cdq
fidiv
sbb
xchg
out
jno
movs
dec
jle
hlt
hlt
cmps
and
mov
fcom
out
or
adc
mov
mov
cwde
cmp
xor
jo
mov
xchg
cld
hlt
es
push
(bad)
fst
movs
mov
cmp
mov
mov
pop
outs
mov
test
or
fisubr
mov
sbb
and
or
rol
pop
retf
jne
fbld
xor
es
or
repz
sub
xchg
inc
dec
bound
add
pop
or
js
mov
mov
loopne
jno
add
in
push
fnsave
cld
sub
xchg
fs
aam
mov
add
popf
mov
push
adc
daa
pushf
jbe
hlt
inc
std
mov
xchg
inc
(bad)
ins
fdivr
mov
movs
mov
iret
std
ret
rcr
dec
inc
add
add
lahf
jno
mov
cmc
xor
cmc
add
inc
movs
jo
sti
sub
pop
jge
fisttp
rcl
in
fs
pop
adc
pop
in
dec
mov
dec
mov
lods
mov
cmc
jbe
sub
inc
rep
outs
push
inc
jno
and
into
fdivr
sub
and
push
cdq
dec
sub
mov
mov
sbb
xor
or
xlat
and
out
iret
sub
sysexit
ss
push
xor
aaa
jle
fwait
cmp
retf
xor
mov
aaa
pop
mov
loopne
sar
sub
gs
sub
fnstsw
mov
mov
dec
jmp
int
sar
dec
ss
xor
movs
jne
jne
sahf
mov
mov
jmp
mov
sbb
test
in
mov
aas
jg
jl
ins
jno
punpcklwd
stos
cmp
sbb
dec
inc
cwde
ins
push
pop
rcr
pop
les
into
inc
and
fidiv
xchg
jg
and
cmp
ins
mov
jecxz
cmp
jp
and
cmp
loop
cmp
or
leave
mov
mov
stc
xchg
xlat
fidiv
cmp
sbb
popf
repnz
inc
aaa
mov
mov
dec
push
mov
(bad)
loope
rol
cdq
hlt
add
or
dec
xchg
jns
push
push
dec
push
std
dec
mov
cld
(bad)
movs
mov
sub
mov
push
dec
jg
inc
aaa
scas
sbb
std
std
cwde
repnz
mov
sahf
sbb
(bad)
out
rcr
mov
mov
fild
jecxz
sbb
call
repnz
jp
int
fidivr
adc
stos
jns
aad
mov
ror
cmc
sbb
pop
retf
push
and
mov
pop
ja
cdq
daa
xchg
out
mov
dec
jne
pop
jb
cmp
(bad)
mov
loope
xor
or
sub
mov
add
mov
jg
mov
ja
mov
lods
dec
mul
dec
or
push
adc
cmp
inc
and
jmp
push
(bad)
mov
int
xchg
mov
pop
pop
xchg
mov
leave
cmp
mov
inc
add
mov
movs
rol
fwait
popf
ja
out
retf
(bad)
(bad)
xchg
and
sti
cld
xchg
retf
xor
or
lods
inc
(bad)
lea
xor
int3
xor
ins
aaa
mov
lods
xchg
xchg
test
dec
nop
mov
movs
xor
or
loop
sti
in
mov
xor
stc
mul
cmp
in
mov
jo
fmul
popa
sbb
leave
into
mov
jo
and
in
ret
hlt
into
fsubr
add
and
mov
jns
fistp
mov
and
loop
cmp
jne
adc
sahf
xor
jge
inc
imul
repnz
inc
sbb
das
xlat
je
jmp
push
pop
mov
(bad)
jnp
in
and
xor
hlt
mov
lds
jmp
jmp
stos
mov
inc
(bad)
xchg
test
sub
cmps
mov
sub
mov
pop
fld
mov
xchg
jbe
jl
inc
pushf
pusha
xlat
cmps
stos
dec
mov
movs
adc
or
push
dec
mov
sahf
jno
dec
cld
gs
pop
mov
loopne
pop
or
jbe
add
ins
mov
mov
ins
dec
stos
dec
jecxz
(bad)
scas
pop
out
mov
xchg
push
mov
and
dec
sub
inc
lea
cmp
rol
aaa
stos
sbb
or
pop
xor
dec
mov
mov
mov
mov
pop
ja
fld
ret
popf
js
(bad)
pop
jge
cmp
add
aam
lods
lods
jge
out
das
daa
movs
(bad)
mov
mov
clc
xchg
arpl
sub
dec
retf
mov
xchg
lods
push
dec
sbb
outs
dec
push
(bad)
pop
(bad)
mov
add
add
test
sbb
scas
clc
test
xchg
je
clc
mov
sub
int3
(bad)
xchg
push
and
ja
ds
push
sbb
out
fcomp
(bad)
xor
push
(bad)
sbb
inc
xchg
jle
mov
dec
fimul
repz
xor
aad
jg
and
daa
scas
xor
xchg
pop
jecxz
inc
loopne
loop
fcomp
sar
sub
test
and
(bad)
out
pop
out
and
jmp
movs
data16
jg
addr16
or
mov
inc
jne
aam
(bad)
and
arpl
sbb
adc
inc
xor
gs
jb
popf
mov
clc
mov
inc
pushf
inc
mov
(bad)
lahf
mov
sbb
pop
inc
mov
inc
rcl
fisubr
sbb
bound
inc
sbb
popa
popf
adc
retf
fisubr
(bad)
lods
push
cmp
lods
inc
fiadd
jp
test
sbb
nop
es
push
pop
idiv
cmp
mov
xor
pop
sub
push
pop
xlat
dec
push
cmp
cmp
(bad)
xor
int3
mov
jo
and
inc
mov
cmp
push
mov
shl
test
fild
aaa
gs
xchg
retf
lea
add
push
cli
(bad)
retf
(bad)
push
int3
dec
fsub
scas
sub
sbb
fcmovbe
(bad)
loopne
arpl
les
xlat
test
adc
xor
js
cmp
push
cmps
cli
ss
lods
push
(bad)
pop
in
test
mov
adc
adc
xor
shl
dec
sahf
(bad)
ret
stc
cli
and
outs
or
(bad)
sbb
add
mov
mov
stos
pop
ficomp
mov
push
lahf
sar
shl
fnstcw
or
inc
outs
jno
adc
sbb
mov
mov
jbe
inc
sbb
jnp
scas
mov
push
int
sub
add
jge
sub
icebp
mov
or
enter
adc
int3
sub
xor
xlat
rcr
ins
fs
sbb
retf
fcomp
sbb
mov
add
js
int3
fstp
les
leave
pop
xor
les
outs
ins
cs
xchg
add
pop
inc
and
adc
stos
leave
pop
daa
adc
jne
adc
fcomp
push
or
stos
icebp
dec
sub
push
pop
lods
aaa
xor
mov
test
xchg
or
push
pop
in
or
push
imul
test
retf
or
mov
mov
das
outs
xor
or
and
sub
bound
adc
jnp
or
jbe
or
mov
mov
cmovg
sub
jnp
xor
imul
ins
fwait
ror
pop
xchg
(bad)
and
scas
sbb
fcomp
jge
sbb
inc
cs
xor
cmp
scas
sub
neg
push
imul
xor
call
pop
(bad)
pop
xchg
jns
and
mov
in
adc
jg
(bad)
nop
mov
dec
in
shl
fistp
mov
out
push
xchg
push
xlat
movs
outs
jb
mov
pop
popa
or
popf
sbb
shr
psllq
mov
mov
and
xchg
imul
fidivr
push
nop
retf
add
jne
xor
xor
push
aam
sbb
cmp
jns
mov
popa
xlat
mov
jnp
push
fmul
aas
test
lea
fcomp
mov
loopne
cmp
mov
cmp
xor
ss
movs
fmul
clc
clc
xlat
pop
ins
pushf
xchg
inc
int3
ins
push
xchg
in
ret
mov
in
push
es
xchg
scas
stos
clc
jb
fmul
add
arpl
cld
jg
xchg
sbb
adc
cmps
mov
nop
add
push
cmps
adc
js
pop
pop
inc
retf
cmp
pusha
add
jmp
mov
hlt
and
dec
pop
nop
or
inc
in
fstp
mov
movs
adc
inc
jb
xor
dec
enter
cmp
adc
and
ret
dec
pop
jmp
mov
mov
rcl
aas
push
or
enter
iret
jo
das
fldenv
pop
popf
xchg
stc
test
test
or
or
mov
repz
mov
xchg
cs
mul
iret
sub
ins
pop
xchg
xchg
jge
push
sbb
cmp
cmp
add
push
into
mov
dec
dec
in
dec
lock
add
movs
out
jmp
(bad)
cld
sub
lock
movs
nop
push
pushf
inc
test
fwait
cmp
jae
cmp
xor
inc
stos
in
fisubr
mov
daa
mov
outs
aam
jno
mov
xchg
adc
test
rcl
adc
mov
inc
inc
and
inc
and
cli
jnp
stc
outs
scas
sbb
cmp
cmp
(bad)
pop
jle
and
and
pop
mov
jne
ret
nop
lahf
adc
pusha
mov
fld
xchg
cmp
div
mov
fild
mov
push
add
sub
jg
fs
cli
(bad)
(bad)
iret
outs
inc
add
mov
or
pushf
jb
je
jle
xchg
sbb
sub
and
in
jle
adc
test
and
pop
dec
inc
in
fld
xchg
dec
loope
pop
rcr
push
call
jnp
scas
ret
lea
xchg
jle
(bad)
fucomip
sbb
loope
daa
ud0
movs
into
idiv
sbb
repz
fistp
icebp
xchg
shl
aaa
xchg
jp
loop
pop
cmp
cmc
popa
loope
cmp
push
in
les
in
pop
pop
sbb
dec
(bad)
ja
repz
out
loop
and
xchg
or
aaa
adc
ss
sbb
shl
fidivr
ss
lahf
xchg
shl
jmp
xchg
dec
adc
jb
in
jmp
loopne
nop
(bad)
test
cdq
sbb
fwait
ror
addr16
xchg
sub
ss
mov
pushf
mov
xor
sbb
and
pop
adc
mov
pop
mov
out
dec
xchg
mov
mov
je
rcl
push
cmp
inc
push
fild
inc
vsubpd
jp
shl
xchg
loopne
lods
cmp
movs
xchg
cwde
sbb
or
leave
push
daa
mov
scas
jmp
xlat
rol
mov
(bad)
jnp
icebp
icebp
xor
repnz
shl
jne
add
aaa
cli
mov
enter
dec
fmulp
inc
inc
fidiv
and
and
aaa
or
in
inc
shl
inc
pop
pop
imul
mov
add
sub
adc
outs
xor
out
jo
pusha
mov
sbb
dec
xchg
xlat
ins
mov
mov
movs
and
inc
push
jbe
jge
sbb
push
cmps
aam
push
cmp
in
mov
pop
dec
mov
out
sub
cli
ret
adc
xor
mov
mov
(bad)
js
scas
xor
xchg
pop
inc
add
mov
je
xchg
cmp
mov
mov
inc
in
pop
pop
data16
neg
ins
pop
cwde
aam
mov
jg
into
test
out
adc
adc
iret
jmp
inc
mov
and
cmp
push
ret
shl
repz
jecxz
je
mov
cld
retf
jp
push
sub
in
push
inc
mov
in
pop
and
pusha
inc
add
ds
xchg
inc
pop
add
rol
ficomp
cmc
sbb
retf
pop
mov
outs
jge
test
out
fdiv
pop
jecxz
sbb
loopne
push
push
cmp
xor
fs
push
cmp
rcr
mov
(bad)
iret
mov
mov
pop
test
loope
jmp
es
arpl
adc
mov
add
rcl
jbe
mov
pop
clc
stc
mov
in
cld
loope
inc
in
jbe
pusha
mov
cs
data16
fsub
popf
dec
push
push
and
sub
jb
mov
daa
ret
dec
or
ret
or
mov
jnp
rol
sub
mov
ds
xor
mov
xor
cmps
push
or
mov
add
data16
pop
loopne
pop
rcr
jmp
shl
sub
aaa
mov
cmc
(bad)
jbe
fisttp
vpmacsswd
in
fs
sbb
cmc
out
fst
inc
jns
leave
(bad)
mov
sbb
jp
mov
ds
xor
lock
mov
mov
(bad)
daa
ins
cmp
cmp
ret
pop
fisub
sbb
xchg
lahf
out
into
aad
push
out
shr
sbb
push
inc
out
lea
sub
sti
add
xlat
in
push
fbld
add
or
ins
loope
add
clc
add
and
pop
addr16
lahf
(bad)
mov
fwait
sbb
mov
add
or
ror
cmp
movs
fistp
es
inc
inc
add
sub
pop
outs
inc
jp
mov
xchg
sbb
xchg
pushf
out
in
inc
mov
mov
pop
mov
ffreep
mov
cmp
push
jns
in
clc
(bad)
pop
push
or
mov
cmp
xchg
jnp
jmp
imul
lahf
jns
push
enter
(bad)
jb
mov
xor
aam
adc
fs
cmp
mov
add
mov
pop
pop
das
imul
jl
inc
les
pop
dec
sbb
sbb
jno
jmp
jl
aad
sbb
popf
icebp
mov
inc
in
sar
ins
push
push
dec
out
or
mov
mov
jnp
mov
jmp
mov
sti
jne
adc
sbb
or
enter
or
mov
add
push
add
je
push
dec
pop
mov
jecxz
add
cdq
dec
mov
cmps
fsub
mov
cmp
lea
add
out
jl
imul
fdivr
std
sub
scas
sbb
ror
xchg
jl
dec
aas
fstp
or
or
pop
xlat
jg
mov
popa
push
adc
sub
dec
popf
lods
pusha
xchg
rol
jb
bnd
jns
inc
arpl
xlat
loope
fimul
sub
sub
add
cs
jbe
test
movs
mov
pop
mov
add
or
sbb
movs
movs
adc
cmp
mov
mov
mov
outs
mov
sbb
out
mov
arpl
pushf
inc
outs
push
jl
xor
and
xor
mov
push
aam
nop
loopne
data16
xchg
dec
repnz
or
daa
ja
adc
neg
addr16
xchg
sub
adc
and
outs
add
stc
jg
mov
mov
hlt
test
aad
test
retf
rcl
and
xor
aaa
sahf
mov
mov
cmp
inc
inc
setbe
popf
and
xchg
push
loope
mov
ret
(bad)
cmp
aam
adc
stos
pop
ins
inc
mov
dec
push
push
pop
cmc
out
cli
imul
loopne
adc
leave
adc
out
adc
jbe
mov
adc
or
xchg
xor
fs
int3
jecxz
call
out
add
sbb
inc
bound
call
and
push
fst
jg
fwait
popa
xor
in
das
pop
leave
push
xchg
inc
daa
xor
adc
mov
xchg
mov
leave
enter
cmp
add
fdiv
sbb
das
jmp
xchg
or
scas
jmp
mov
mov
push
pop
stos
popf
cmp
pop
arpl
or
xor
adc
cmp
xor
xchg
pop
(bad)
in
test
in
popf
ins
icebp
mov
mov
ret
cmp
sbb
xor
push
jmp
leave
loop
popfw
mov
add
xchg
mov
mov
shl
mov
stos
push
sbb
adc
mov
sub
push
or
ret
inc
dec
pop
mov
cmp
clc
int
add
je
daa
push
xchg
lods
push
test
daa
sahf
pop
stc
sub
js
(bad)
je
jb
cmp
and
pop
or
sub
div
pop
ss
or
jp
clc
xlat
cmp
ret
aaa
mov
ret
xchg
adc
adc
(bad)
jmp
(bad)
xor
jge
jno
add
sbb
(bad)
mov
cmc
gs
shl
mov
dec
popf
rcr
inc
push
pop
push
fstp
aad
jbe
stos
aaa
icebp
add
or
les
loopne
xchg
add
mov
xor
lds
xlat
or
frstor
rcr
cmp
icebp
cmp
jmp
repnz
push
fs
xchg
inc
cdq
inc
outs
cwde
je
pop
xor
jnp
adc
neg
lea
dec
xchg
push
retf
inc
xchg
leave
mul
cmc
or
xlat
xor
mov
or
ins
enter
mov
push
jl
mov
pop
mov
fwait
jecxz
hlt
mov
sbb
daa
add
xchg
sub
push
xchg
adc
(bad)
imul
xchg
lea
xor
adc
icebp
xchg
fadd
ins
ret
push
fidiv
adc
dec
sub
mov
sbb
pop
xchg
inc
call
cmp
pop
enter
hlt
fcmovu
mov
dec
or
push
lds
mov
push
inc
std
repz
mov
xlat
movs
xor
retf
mov
mov
repz
jmp
mov
jg
fs
enter
pop
sbb
inc
outs
mov
push
xchg
lea
push
jg
scas
into
cmp
(bad)
fst
outs
cwde
mov
sub
mov
xchg
aaa
ficom
stos
push
int
dec
out
inc
mov
sbb
mov
mov
movs
in
mov
jns
ficomp
sbb
ss
std
call
sti
arpl
push
inc
add
inc
sbb
jbe
cmp
je
shl
bnd
sbb
push
add
mov
push
lods
stos
adc
add
jge
call
repz
js
xchg
push
add
das
outs
retf
cmp
(bad)
adc
mov
push
mov
es
push
(bad)
arpl
arpl
sbb
repnz
jae
cmps
mul
sbb
sub
mov
cmp
mov
xor
mov
cdq
in
and
outs
push
dec
ret
jmp
ins
push
shl
ss
sbb
xchg
and
mov
mov
jb
test
dec
push
xchg
test
pop
gs
inc
mov
test
or
push
fwait
or
jg
out
dec
leave
sar
xor
addr16
and
stc
mov
jmp
test
imul
repz
add
xor
in
pop
inc
std
jnp
cs
or
iret
and
and
stos
mov
jle
push
icebp
pop
mov
loope
push
inc
add
pop
push
push
mov
cmc
jmp
(bad)
pop
jecxz
lahf
xchg
inc
ins
or
add
and
test
(bad)
inc
popw
jo
xchg
idiv
stos
sbb
daa
dec
aaa
push
inc
push
retf
aas
fsubr
int3
xor
jns
inc
aaa
push
ins
push
sub
pop
lea
dec
in
shr
pop
retf
fmul
into
sub
push
add
clc
hlt
retf
stc
xor
cmp
cmp
(bad)
fnstcw
xor
and
js
movs
mov
int
jg
push
out
adc
mov
xchg
pop
hlt
jbe
stos
addr16
ins
mov
dec
cmp
push
mov
adc
pushf
xchg
push
cdq
mov
or
test
pop
mov
cmp
sbb
push
test
or
sbb
outs
push
push
cmp
popf
pop
fidivr
into
(bad)
js
push
(bad)
fucomp
mov
pop
jmp
or
or
or
sbb
cmp
inc
in
ins
fst
dec
in
sahf
das
loope
dec
push
loopne
imul
mov
addr16
adc
sti
dec
aas
pushf
lea
mov
mov
ins
jmp
sub
prefetch
fcmovnb
in
push
cmp
jno
in
or
(bad)
pushf
mov
dec
aad
mov
fld
sub
aad
js
gs
dec
sbb
jp
stos
ins
mov
sub
jle
xor
aad
adc
xchg
adc
jbe
push
jnp
lea
mov
jmp
push
ret
ss
fdivr
shl
ficomp
jne
mov
inc
mov
or
and
movs
movs
bswap
jo
dec
std
shl
enter
pop
imul
in
outs
loope
push
sbb
retf
fld
mov
sbb
inc
lds
loopne
jb
jo
test
adc
mov
cwde
pop
ins
sahf
test
and
mov
inc
out
or
test
mov
bound
imul
ss
(bad)
das
imul
sub
add
cmps
cli
call
cwde
mov
mov
mov
adc
xchg
cmp
jno
fisubr
ja
ja
cmp
xchg
std
dec
xchg
bound
xor
pushf
dec
lods
or
out
popa
mov
lods
jmp
dec
dec
xchg
es
in
pop
cwde
pop
jg
push
push
mov
push
adc
xchg
and
out
rcl
fwait
sahf
and
scas
ror
sub
data16
test
inc
jo
and
je
add
pop
mov
pushf
scas
loopne
xor
pop
xchg
std
sub
out
inc
mov
ss
sbb
pop
in
mov
loope
dec
push
dec
jg
imul
(bad)
in
and
gs
or
clc
jno
xchg
fsubrp
lea
push
mov
das
mov
pop
cmp
(bad)
sub
dec
push
dec
push
pop
in
sbb
cmp
outs
cdq
dec
jae
cs
mov
push
mov
or
std
and
mov
mov
add
cmp
xor
popa
ins
imul
pop
outs
rol
and
test
adc
cld
popf
mov
sub
shl
pop
add
test
add
xchg
outs
int
mov
pop
jl
das
in
cs
repnz
movs
fiadd
adc
mov
ins
mov
fisttp
jnp
movs
stos
xor
or
jp
and
popf
scas
mov
mov
test
xor
cmp
xchg
iret
pusha
pop
fadd
arpl
ret
out
cmps
rol
jp
aam
adc
adc
stos
inc
mov
push
test
mov
and
mov
shl
scas
push
mov
aad
fidivr
or
jge
push
and
repnz
and
(bad)
push
aaa
pop
xor
sbb
jns
cmp
push
les
adc
das
push
ss
outs
movs
cli
xchg
cwde
pop
mov
in
mov
adc
inc
pop
mov
inc
jl
jp
mov
mov
xor
adc
lods
xchg
mov
cmp
loopne
lahf
dec
fisubr
(bad)
cwde
(bad)
rcl
(bad)
int3
or
jmp
aad
test
clc
jb
mov
sbb
outs
test
ret
mov
imul
and
inc
fld
or
jnp
loopne
mov
inc
rcl
lock
push
push
mov
gs
xchg
lock
or
lods
xor
test
daa
sub
imul
mov
jbe
jns
cld
mov
mov
aas
dec
mov
into
retf
daa
xor
mov
xor
(bad)
out
add
xchg
push
in
sub
sbb
xlat
and
loope
lds
push
in
ins
lock
xchg
cmps
push
rcr
jno
inc
xor
jmp
stc
xlat
add
jp
jne
inc
pop
mov
mov
aad
push
push
sub
fs
stos
adc
retf
cdq
jbe
jecxz
stc
aad
inc
push
and
xchg
lds
in
pop
shl
movs
fidiv
(bad)
adc
adc
les
xor
pushf
aam
scas
lds
aad
xor
mov
adc
sbb
cwde
ds
ins
cld
sub
xlat
sub
add
jmp
dec
inc
mov
xor
inc
ins
and
mov
mov
int3
mov
popa
hlt
addr16
mov
jge
xchg
movs
je
repnz
add
jp
jl
jmp
data16
fiadd
test
dec
fld
out
icebp
cli
add
mov
xchg
mov
and
mov
lahf
dec
stos
outs
ret
cmps
mov
mov
add
out
pop
mov
mul
test
and
or
jo
data16
push
cmp
jno
mov
push
adc
rol
cmp
add
jp
xchg
and
(bad)
xor
mov
rcl
sub
aaa
or
into
shl
les
jg
icebp
xor
jmp
out
pop
jle
ror
mov
daa
pop
stos
mov
ret
std
sbb
inc
les
mov
fcmovnbe
lods
(bad)
imul
bound
mov
ror
pop
int3
cld
push
lahf
les
jle
movs
scas
pop
gs
add
das
jl
popf
repnz
push
push
add
dec
add
mov
or
clc
pushf
(bad)
xor
(bad)
xchg
clc
cwde
mov
je
push
dec
in
pop
(bad)
hlt
xchg
adc
js
in
(bad)
icebp
loope
test
mov
push
shl
mov
mov
outs
fisubr
cmp
lds
mov
lea
xchg
clc
loope
jge
into
aas
mov
test
sub
int
and
sub
push
and
mul
call
cdq
sub
inc
sub
call
and
sbb
fcom
cdq
fld
jns
mov
in
mov
pusha
loop
cdq
cmp
fidiv
jne
push
mov
cmps
mov
sub
mov
lods
jmp
mov
outs
adc
cld
imul
(bad)
mov
xchg
sbb
cmp
mov
jae
jns
xor
xchg
into
ret
das
fiadd
out
outs
cmp
loope
sti
popa
cmp
data16
xchg
pop
push
inc
xor
jno
ins
movs
iret
popa
je
pop
pop
push
out
pushf
in
xor
add
cmp
(bad)
pop
lods
fldl2t
sbb
(bad)
fistp
ins
out
mov
xchg
push
fist
sub
add
ret
cwde
xor
sbb
outs
sub
add
mov
pop
pop
push
cdq
pop
psubb
pop
push
icebp
(bad)
inc
fldcw
into
iret
push
push
mov
xor
fmulp
push
data16
push
out
mov
cmp
in
xor
lahf
fdivp
test
ret
push
es
lea
mov
pop
loope
outs
out
xchg
mov
ror
xchg
inc
cwde
sar
outs
cdq
vminpd
push
pop
scas
cwde
cwde
mov
inc
dec
sti
aas
and
add
and
sub
cmps
inc
jg
ins
ror
sti
sub
out
mov
mov
bound
push
(bad)
fcmovnbe
cmp
mov
pop
dec
sbb
pop
das
fnsave
adc
std
xchg
mov
push
jmp
int3
ss
call
add
adc
push
data16
das
ret
mov
sub
int
add
cmps
inc
adc
stos
mov
pop
sbb
call
pop
ror
into
aaa
lods
pop
and
lods
push
aaa
(bad)
fnstsw
sub
test
scas
loop
push
pop
and
retf
push
xlat
push
xlat
inc
gs
cmps
push
mov
push
cmps
mov
movq
push
and
addr16
int
fsubr
add
push
popa
sub
jns
sub
pop
loopne
pusha
es
ins
stos
int
in
sti
push
add
ja
iret
or
xchg
nop
lea
aaa
and
sub
movs
sub
retf
dec
mov
aad
jnp
add
push
mov
fmul
sar
inc
mov
xor
xor
loopne
xor
inc
xor
rcl
js
push
jne
enter
cmp
div
jmp
and
(bad)
cdq
xchg
test
xchg
sub
mov
movs
int3
cwde
mov
mov
jns
and
ret
ror
push
cld
js
jo
xor
cmc
xchg
adc
inc
mov
aaa
fcomp
pop
cmp
retf
gs
cdq
rsqrtps
mov
jbe
jne
inc
mov
sub
sub
sti
or
pop
mov
pop
mov
repz
mov
jns
sub
sbb
xchg
push
addr16
sub
pop
sbb
dec
out
jle
daa
enter
dec
aaa
scas
les
shl
xchg
pop
cmp
ficom
push
fcmovb
adc
xchg
push
lahf
xchg
jp
ficomp
inc
or
pop
jmp
fidiv
and
mov
cld
mov
cmp
arpl
cmp
or
(bad)
sub
fs
movs
out
retf
push
int3
in
repnz
cmp
ret
imul
adc
jle
xor
push
fidivr
ja
xor
adc
inc
xchg
add
xor
adc
adc
jl
inc
imul
out
fisttp
xor
popa
lahf
stos
xchg
ins
mov
push
xor
cmps
aas
int3
push
(bad)
(bad)
(bad)
jbe
shr
(bad)
cs
cmps
out
inc
mov
out
(bad)
xor
push
fadd
out
jmp
nop
jl
adc
sub
cmp
sub
ds
and
shl
and
ret
clc
cli
stos
pop
pop
pushf
fbstp
push
push
jmp
rol
retf
das
cmp
jp
movs
mov
jne
mov
adc
mov
or
(bad)
inc
fdivr
inc
leave
mov
test
inc
inc
call
lock
push
mov
jl
sahf
xor
test
xchg
addr16
mov
movs
in
fld
lock
mov
xor
inc
ret
add
mov
pop
inc
movq
dec
inc
push
dec
(bad)
mov
push
mov
mov
movs
cmp
pushf
aad
cmp
adc
add
popf
leave
sar
push
cli
repnz
aaa
xor
dec
rcr
rol
lea
dec
xor
fdivr
enter
test
cmp
repz
xchg
into
sbb
sbb
push
sahf
lock
pop
les
idiv
sbb
mov
dec
jns
retf
(bad)
(bad)
pop
dec
fisub
nop
in
or
sub
adc
mov
and
push
sub
cmp
cmp
ret
sbb
cmp
mov
fiadd
mov
aad
inc
bound
sub
jae
leave
mov
push
fistp
push
fmul
or
arpl
pop
pop
cmps
stc
sub
dec
sub
leave
loop
ficomp
dec
popa
jl
(bad)
push
jae
enter
cs
xchg
sbb
mov
dec
ds
cmp
sub
cdq
icebp
inc
mul
push
jp
shl
sbb
test
mov
rol
dec
dec
sub
loopne
in
shl
das
sub
ins
jbe
cmc
iret
xor
sub
push
adc
ret
or
aaa
loop
mov
fst
or
sub
add
sbb
fimul
push
pusha
jns
dec
cwde
iret
sbb
fld
pop
aas
mov
loopne
mov
sahf
jecxz
push
mov
fs
sub
je
add
jns
cdq
leave
addr16
neg
repnz
lods
test
push
sbb
add
jo
loopne
bound
fidiv
dec
pop
dec
xor
adc
jge
inc
pop
gs
scas
jbe
and
inc
ret
aam
mov
pop
adc
add
and
in
retf
push
(bad)
test
retf
jmp
push
das
lods
mov
xor
jg
shl
sbb
int3
(bad)
in
cmc
sbb
jp
popa
in
and
std
mov
adc
enter
dec
jae
ja
mov
dec
iret
lock
mov
ret
push
cmps
std
push
mov
cdq
xor
ja
mov
jae
jbe
add
sahf
pop
scas
sbb
std
xchg
in
test
int
adc
push
jnp
sbb
cmp
outs
popf
jecxz
add
push
push
retf
mov
mov
das
inc
cmps
adc
pusha
hlt
lea
repz
push
xchg
cmp
xlat
call
inc
adc
xchg
mov
and
ret
dec
lea
inc
mov
ficomp
jae
je
out
sbb
in
inc
fs
ficomp
cwde
mov
or
out
inc
inc
and
xchg
xor
xor
das
js
pusha
dec
int
mov
sub
fnstcw
clc
ss
ror
inc
ss
(bad)
and
inc
pop
jle
lods
adc
mov
fs
in
sub
sahf
pop
mov
lea
lods
outs
rcl
xchg
sub
push
fistp
xor
dec
push
out
ds
stos
xor
lds
aas
add
dec
rol
loope
fincstp
sub
xchg
imul
in
(bad)
jnp
ds
mov
push
aam
mov
aam
mov
mov
pop
add
je
adc
pop
lock
add
cmp
outs
inc
(bad)
cmc
(bad)
jge
add
mov
ins
ret
xchg
jp
lds
and
fdivrp
add
sbb
aaa
das
jmp
mov
clc
mov
ret
jbe
cld
leave
push
rol
nop
adc
push
cmp
sbb
push
outs
pushf
(bad)
(bad)
mov
mov
xor
push
mov
pop
mov
inc
xlat
lods
xchg
ins
imul
fbstp
shr
leave
retf
and
xchg
sar
test
mov
in
mov
retf
sbb
mov
jnp
pop
adc
mov
jae
push
jae
mov
scas
lods
(bad)
mov
dec
push
xor
aas
jae
cmp
xor
cmps
mov
mov
data16
repz
cmp
shr
shl
sbb
popa
xor
jo
jecxz
adc
mov
push
jno
fiadd
push
mov
shr
and
cld
xor
xchg
movs
cmp
nop
pop
push
jmp
pop
imul
lea
in
xlat
mov
xor
or
and
jne
jae
mov
pop
nop
ffreep
fsub
lods
arpl
stc
jne
popa
mov
mov
dec
cmp
gs
test
pop
push
inc
dec
out
mov
push
sti
ja
mov
pop
ret
jo
mov
pop
mov
fwait
cmp
popf
inc
js
adc
push
xor
pop
jno
hlt
and
mov
add
mov
(bad)
mov
xchg
data16
sbb
in
cmps
mov
xlat
(bad)
in
add
div
mov
aaa
test
cmc
(bad)
js
int
lea
in
iret
cli
(bad)
jae
sub
pop
stos
pop
das
shld
dec
clc
cs
in
scas
mov
mov
jns
test
xchg
mov
and
or
xchg
pop
stc
or
add
sub
dec
movs
cli
mov
addr16
in
outs
cwde
jmp
add
imul
jp
cmps
repnz
outs
add
push
jne
nop
cdq
adc
cmp
ret
inc
adc
(bad)
repz
xor
sbb
in
in
mov
arpl
mov
jmp
in
arpl
shl
imul
mov
imul
pusha
cli
sar
stc
mov
lds
cmps
sub
push
js
dec
pop
(bad)
out
cmp
xor
mov
fwait
lahf
hlt
mov
(bad)
pop
adc
xor
gs
es
cdq
loop
xchg
ret
inc
aas
inc
out
xchg
add
leave
mov
and
and
pop
pop
jmp
nop
push
sub
xor
fs
cmp
scas
retf
je
sbb
test
mov
cdq
inc
pusha
(bad)
retf
hlt
jp
ss
xor
or
xor
dec
pusha
pop
call
sbb
pop
dec
ds
mov
push
rcl
mov
sbb
push
inc
push
xchg
imul
mov
(bad)
es
adc
lds
pop
pop
inc
or
cld
fisttp
je
aaa
retf
jno
push
sub
in
lea
pop
push
pop
js
mov
xor
(bad)
pop
(bad)
nop
and
imul
sub
and
or
fistp
add
sub
fimul
lds
mov
inc
outs
(bad)
mov
and
sbb
jl
jae
mov
fld
cmps
add
cmc
scas
xchg
outs
xor
mov
pushf
cmp
repz
stc
pop
gs
add
and
mov
jbe
sbb
or
inc
loope
nop
xchg
or
sti
(bad)
push
in
lea
xor
and
cmp
ss
ss
mov
in
std
popf
cmc
add
in
xchg
xchg
mov
sbb
add
sbb
or
sti
ins
fwait
mov
add
or
rcl
xor
push
pop
jnp
mov
js
cli
mov
hlt
mov
pop
xchg
xchg
sub
sbb
sbb
jb
aam
inc
fsubr
shl
add
lods
cs
push
push
inc
in
dec
repnz
stos
add
xchg
xor
imul
jmp
sub
sbb
and
fmul
pop
arpl
pop
out
or
jns
xchg
fninit
icebp
je
es
sbb
(bad)
mov
call
xchg
cmp
lahf
ja
(bad)
(bad)
stos
ffree
int
and
inc
arpl
xchg
imul
pop
mov
movs
sub
pop
sti
sbb
xchg
or
nop
fs
sub
test
pop
jp
or
dec
dec
and
jmp
icebp
ror
lahf
cmps
paddb
dec
das
xlat
clc
add
stos
push
mov
dec
jae
movs
or
clc
sbb
and
xchg
fcomp
ret
movs
lods
jno
(bad)
jecxz
push
mov
stc
sbb
stc
pusha
jmp
pop
pop
test
cmp
cld
movs
enter
xchg
pop
sub
and
int
push
sbb
gs
lock
jl
and
push
xchg
mov
mov
or
and
data16
aam
shl
mov
xchg
jle
pusha
jg
xor
(bad)
gs
leave
loopne
add
jmp
(bad)
out
add
adc
fucomp
mov
jb
frstor
cmp
add
xchg
mov
or
pop
or
fst
sahf
push
imul
adc
loopne
scas
or
sbb
jp
sbb
aam
mov
push
mov
jecxz
inc
sbb
lahf
or
sub
and
mov
xchg
push
jmp
and
test
mov
adc
sahf
push
mov
ss
push
aas
pop
in
push
adc
(bad)
repnz
les
loop
jmp
aam
mov
scas
pop
mov
mov
pop
mov
adc
(bad)
in
outs
cld
jae
out
into
cwde
xor
lds
pop
retf
push
movs
and
sub
(bad)
loope
jno
mov
inc
or
in
push
into
movs
xor
sbb
xor
add
push
xchg
jp
mov
jmp
imul
(bad)
push
adc
rcr
outs
jns
gs
test
mov
test
jp
paddsb
cmp
stc
mov
jo
xchg
mov
xor
mov
cdq
icebp
adc
mov
jmp
inc
push
xchg
sub
xor
push
dec
idiv
jmp
arpl
(bad)
out
jnp
stos
in
adc
repz
enter
mov
cmp
fs
fld
mov
aad
jne
into
or
clc
pop
mov
shr
std
lock
into
pop
jns
loop
aad
outs
fisttp
test
cld
lods
inc
sahf
or
or
stos
push
xor
mov
mov
xchg
lock
js
xchg
leave
cmps
inc
bound
inc
out
stos
sub
cmp
or
add
mov
mov
mov
sbb
sbb
or
or
mov
sbb
xchg
or
cmc
xlat
pushf
pop
jmp
ja
movs
adc
or
fidiv
aaa
mov
mov
xor
cmp
je
repnz
or
gs
cwde
scas
adc
cmp
outs
hlt
inc
and
repz
dec
lahf
jne
jnp
dec
mov
scas
mov
iret
sub
push
shr
xchg
lods
sbb
xchg
pop
xchg
jge
stos
and
and
lock
cmc
sub
hlt
jo
inc
in
lods
sub
shr
push
ins
frstor
das
inc
adc
cmp
sub
push
or
div
jnp
data16
lahf
xchg
pop
scas
movs
loopne
xlat
pushf
(bad)
fst
mov
adc
test
push
(bad)
dec
fild
das
dec
int
je
sub
xchg
add
mov
test
lods
std
add
data16
retf
adc
daa
scas
mov
mov
adc
mov
nop
jne
sub
bound
leave
pop
loope
and
hlt
(bad)
icebp
mov
out
ror
push
shl
mov
add
pop
adc
cmp
jg
cmc
mov
bswap
xchg
rol
sbb
jle
aas
xchg
sbb
and
jp
inc
mov
pop
jecxz
adc
jnp
dec
shl
push
xor
es
arpl
push
cs
(bad)
out
fnstcw
cdq
adc
jecxz
ret
gs
test
shl
fldenv
mov
mov
clc
cwde
jmp
inc
movs
sar
mov
mov
push
pusha
enter
enter
leave
push
push
pop
scas
rcl
dec
pop
loopne
or
xchg
push
or
vmread
xor
xor
rcl
adc
scas
test
xchg
jns
dec
jae
jb
or
imul
xchg
push
inc
xor
ret
daa
adc
adc
div
popf
cs
pop
popf
int
jp
and
scas
(bad)
jne
popf
stos
pop
aaa
inc
shl
(bad)
jle
and
jo
mov
cmp
loop
mov
test
mov
cli
(bad)
lock
loopne
sub
push
outs
pop
cs
daa
(bad)
ja
aaa
sbb
dec
or
inc
cmp
nop
jns
xor
(bad)
frstor
ret
jmp
inc
int3
iret
mov
fwait
(bad)
push
cmp
outs
add
repnz
dec
mov
fs
movs
(bad)
fidivr
adc
in
ins
cmp
jmp
outs
stos
and
aas
cmp
jbe
ret
add
mov
adc
outs
loopne
dec
xchg
movs
out
out
mov
push
jo
test
fidiv
je
pop
cmp
hlt
mov
jecxz
out
addr16
push
inc
push
stc
retf
aas
cmp
stc
push
test
cmp
dec
jge
sahf
dec
jmp
jnp
test
cmp
leave
sbb
add
push
mov
ds
pusha
aaa
sbb
rol
iret
pop
ret
aaa
rcr
inc
pop
sub
jnp
std
xor
aam
(bad)
fnstenv
fwait
adc
xor
popa
push
and
xchg
mov
ret
pop
sub
dec
and
jo
inc
add
and
add
ret
xor
add
ss
std
sub
sbb
mov
mov
cmp
ins
jns
inc
leave
mov
cs
sahf
into
enter
dec
(bad)
loope
fadd
jo
add
scas
rcr
lea
dec
push
adc
out
xor
lock
cld
loopne
call
xchg
inc
test
mov
sub
adc
mov
iret
nop
in
dec
and
and
(bad)
mov
outs
pop
mov
jecxz
fld
add
cmp
clc
popa
scas
rcl
fadd
dec
call
mov
xor
(bad)
xchg
jl
sbb
adc
jl
sub
jmp
or
aad
lods
push
lock
mov
sbb
loopne
fdiv
push
pop
sub
fisttp
ret
pop
in
mov
in
imul
add
xchg
cmp
cmp
mov
retf
cmp
aad
clc
add
inc
mov
hlt
lahf
loope
xor
(bad)
and
mov
inc
xor
xchg
ins
stos
hlt
or
add
pop
adc
pop
push
or
xor
iret
das
jecxz
inc
xor
xor
arpl
add
xor
xchg
sub
adc
cld
push
cs
inc
imul
(bad)
cmps
pop
push
scas
xor
nop
push
inc
mov
outs
mov
jb
neg
les
mov
in
add
cmp
and
popf
push
add
sub
loope
pop
(bad)
pop
test
lods
cli
sbb
mov
icebp
push
scas
pusha
loopne
int3
add
mov
test
lock
cmp
call
bound
pop
movs
movs
add
xor
lahf
push
pusha
mov
push
stc
sar
jmp
pushf
sti
sbb
adc
sub
test
jge
mov
mov
dec
pop
les
imul
add
sbb
popa
ret
push
mov
xor
leave
rcl
inc
test
push
fwait
(bad)
mov
sti
or
inc
dec
out
mov
test
dec
or
jnp
fadd
push
jge
mov
mov
call
push
cdq
fs
daa
jecxz
outs
dec
push
adc
fst
fs
ins
sbb
mov
xlat
xchg
fcmovb
adc
and
cwde
pusha
inc
call
ret
push
fmulp
iret
inc
stc
jge
and
retf
fwait
rcr
int
addr16
mov
adc
mov
mov
fs
lea
int
(bad)
cmp
movs
fcomp
jmp
mov
loope
cmp
pop
hlt
in
pusha
lahf
mov
cmp
jl
mov
or
pop
ja
(bad)
jmp
inc
aaa
bound
jmp
add
mov
mov
jmp
dec
xchg
dec
pop
retf
xor
shl
dec
call
repnz
pop
dec
xor
push
aad
push
mov
inc
mov
jmp
adc
cld
dec
rcr
rcr
cmp
out
retf
mov
cs
push
movs
ror
xor
pop
pusha
jo
cmps
xchg
repnz
mov
shr
cs
movs
push
ror
push
sub
cmps
pop
push
mov
mov
sbb
adc
dec
retf
out
xor
or
jne
daa
cmps
jb
ins
les
scas
adc
inc
sbb
or
test
inc
fnsave
or
pop
push
loop
sbb
pop
and
xor
and
pop
mov
outs
xor
ja
xor
call
xor
pop
adc
xchg
iret
xchg
jb
cmp
ret
xchg
cmp
or
icebp
dec
in
in
cdq
fxch
inc
mov
les
mov
movs
neg
pop
repnz
dec
fsub
mov
cwde
call
push
rol
sbb
das
icebp
jl
mov
sahf
cmp
adc
jo
and
aam
repnz
jmp
sbb
shr
inc
mov
adc
shl
mov
mov
sub
mov
pop
xchg
rol
mov
mov
dec
loope
add
cmp
and
xor
adc
sahf
jl
and
and
in
pop
int
fld
xchg
mov
push
test
adc
cmp
cmp
int
mov
in
(bad)
into
sahf
mov
test
ja
retf
test
or
loope
push
cdq
loopne
retf
pop
je
inc
aas
and
imul
sar
test
std
bnd
and
sbb
or
inc
xlat
mov
mov
cmc
jle
test
inc
(bad)
sbb
add
add
xchg
mov
jl
fst
dec
mov
jo
pop
cmps
aad
adc
sar
xchg
push
pop
lock
(bad)
xchg
sub
imul
imul
call
ret
mov
(bad)
mov
cmps
sahf
loopne
mov
mov
les
jno
mov
push
lahf
sti
fwait
xor
mov
std
imul
cmp
add
stos
test
add
repz
inc
retf
aam
adc
imul
or
pusha
fiadd
scas
fstp
adc
fdivr
inc
dec
mov
pop
popa
push
pop
and
mov
adc
xlat
adc
clc
les
int3
and
cmps
pushf
sbb
cmc
ins
retf
sbb
mov
jbe
jae
add
(bad)
out
xor
xchg
jno
xor
out
mov
jl
std
or
sbb
in
je
ins
and
push
mov
into
jae
add
movs
out
push
inc
das
xchg
popf
jbe
sar
iret
add
imul
pop
aad
int3
aas
sbb
pop
push
and
xor
mov
jae
jmp
clc
ins
loopne
test
dec
xchg
xchg
xchg
push
mov
aaa
into
add
je
push
cmps
dec
mov
cmps
mov
and
(bad)
in
lahf
mov
lods
ret
(bad)
fldz
mov
shl
mov
ror
pop
call
div
ret
xor
or
adc
frstor
test
ret
xchg
(bad)
aam
addps
mov
ins
stc
pop
jmp
(bad)
jge
jae
dec
xchg
dec
mul
(bad)
outs
inc
mov
icebp
outs
sahf
ins
aaa
jmp
jmp
lock
pop
js
loope
leave
adc
or
cmps
cmps
mov
rcr
std
in
jnp
mov
inc
in
jo
aas
mov
sub
rcl
add
jae
int
add
xchg
adc
sub
repnz
inc
mov
inc
cdq
xchg
xchg
mov
inc
dec
jne
inc
femms
leave
dec
and
repz
imul
inc
std
adc
es
mov
pop
jns
mov
(bad)
inc
in
push
shr
pop
js
das
or
inc
call
add
rol
es
xchg
shl
stos
cs
ins
test
jmp
leave
mov
out
addr16
mov
mov
je
adc
push
dec
ss
xor
(bad)
xor
call
add
adc
das
xchg
mov
mov
mov
cmp
js
xchg
mov
cmp
aad
pop
jns
and
push
mov
popa
out
push
or
mov
push
push
out
push
and
dec
push
add
rcr
jo
push
jns
fisttp
jmp
(bad)
jecxz
jle
jp
scas
jecxz
add
inc
test
in
rcr
gs
mul
loop
cld
retf
xor
stos
int
arpl
clc
jmp
xchg
jmp
in
fiadd
(bad)
and
add
frstor
mov
mov
xchg
inc
pop
adc
jno
xchg
out
pop
push
or
mov
push
or
cmp
adc
pop
rcl
pop
cwde
or
ja
lds
test
ds
mov
jp
cwde
cmps
call
hlt
and
arpl
cmps
aaa
jns
call
sub
fs
cmps
rol
scas
xchg
adc
(bad)
cdq
outs
call
xchg
jg
xchg
(bad)
cmp
mov
mov
mov
mov
scas
test
out
xor
fst
jnp
out
(bad)
adc
out
out
lds
mov
ja
mov
and
push
icebp
sbb
xchg
mov
push
push
cmp
shl
xchg
dec
pop
mov
cli
enter
push
inc
sub
shl
jl
mov
lea
rcl
fnstsw
mov
and
lock
jmp
fisttp
or
lods
jno
(bad)
sar
push
mov
xchg
int
add
icebp
icebp
sti
dec
xor
rol
cs
fbld
aaa
sub
jp
rol
daa
mov
adc
pop
dec
jl
es
cwde
popf
enter
pop
hlt
clc
ins
push
mov
xchg
mov
inc
push
push
jle
icebp
add
mov
dec
sub
pusha
in
mov
mov
outs
mov
in
frstor
sub
outs
mov
push
leave
icebp
cmc
pop
jnp
int3
mov
cwde
mov
inc
std
jmp
pop
out
neg
stos
rcr
sbb
(bad)
jg
call
push
iret
inc
add
sbb
rol
dec
pop
scas
xor
sub
dec
or
add
lock
xchg
xchg
scas
fwait
aaa
cmp
jmp
shl
pop
mov
inc
(bad)
jge
loopne
outs
data16
cmp
dec
rcr
mov
sbb
mov
jne
inc
(bad)
stc
dec
lds
cs
aad
retf
int
gs
mov
fisttp
mov
bound
push
hlt
and
jnp
fprem1
loope
out
adc
(bad)
retf
pop
cmps
cmp
mov
adc
xor
clc
mov
imul
dec
xor
add
(bad)
mov
rcr
test
(bad)
mov
mov
popa
sub
push
dec
xor
xor
cdq
or
retf
in
mov
scas
rcl
es
call
call
loop
xor
and
fwait
pop
scas
loopne
outs
aad
jmp
sub
pop
das
mov
fucomip
adc
cmc
(bad)
pop
fwait
ret
xlat
xor
lds
push
or
stos
and
lock
sbb
pop
xor
in
adc
js
or
push
out
adc
test
sbb
imul
ja
out
shl
pop
pop
xor
jne
call
xor
fisubr
jns
outs
add
cmps
and
dec
aam
xchg
sahf
rcr
xor
rcl
call
(bad)
jp
mov
aas
retf
into
dec
jle
mov
imul
push
or
call
iret
movs
clc
cmp
retf
icebp
sahf
and
(bad)
jmp
aam
cmp
ror
mov
mov
mov
push
int
push
retf
mov
add
movs
mov
xor
das
fdiv
in
(bad)
mov
iret
std
lods
sbb
outs
ror
into
cli
xchg
xor
js
mov
imul
jns
arpl
fwait
add
add
les
clc
mov
cmps
jno
mov
cmp
pop
pop
xchg
mov
pop
push
add
xor
jae
leave
pop
sahf
dec
pop
les
pusha
inc
js
push
lock
out
fldcw
(bad)
mov
jbe
jno
pop
stc
dec
pop
jmp
gs
neg
pop
inc
outs
imul
jae
jbe
sub
and
mov
les
pop
data16
ficomp
pusha
fdivr
cmps
(bad)
cmc
lea
in
dec
retf
mov
cmp
loope
and
out
inc
sub
loope
xchg
(bad)
fnstsw
ret
or
push
arpl
and
test
mov
pop
inc
xchg
add
or
sub
jge
aad
mov
das
ds
adc
jbe
pop
mov
sahf
movs
xor
jns
cmps
dec
dec
std
icebp
mov
mov
lahf
adc
test
inc
or
nop
lods
add
xchg
mov
or
scas
das
lock
inc
push
scas
sahf
(bad)
mov
jge
dec
xchg
sar
mov
enter
push
mov
stos
mov
popf
aas
xchg
test
jno
add
sbb
out
mov
movs
pushf
les
jno
shr
jecxz
xor
push
or
loope
loopne
push
sahf
sub
mov
pushf
(bad)
mov
push
dec
test
mov
leave
daa
or
xor
mov
jbe
(bad)
sub
fst
(bad)
sub
pop
fwait
ss
and
cmps
std
mov
pop
sbb
stos
pop
xchg
call
clc
in
pop
xor
dec
ret
jo
push
and
mov
std
inc
(bad)
fimul
add
imul
or
shr
pop
call
leave
in
pusha
test
xchg
inc
js
rol
out
mov
imul
icebp
or
cmp
jbe
inc
sub
aad
ins
bound
add
xchg
loopne
movs
and
arpl
pop
jmp
movs
(bad)
cld
lods
aam
or
mov
mov
rcr
retf
and
shl
dec
mov
sub
jge
add
push
and
jmp
and
pop
jb
add
and
stc
in
loope
cmp
xchg
xchg
inc
sub
nop
lods
mov
mov
pusha
and
int
lea
clc
fild
shr
bound
test
adc
jae
sbb
stos
sbb
fdiv
ds
outs
dec
lods
int
add
das
mov
pop
cwde
or
mov
xor
sub
aad
cs
dec
imul
cli
call
xor
push
repnz
in
and
les
pop
pop
or
mov
mov
sbb
xchg
ret
scas
addr16
or
xchg
push
add
inc
ss
out
jnp
(bad)
cli
adc
and
adc
adc
sub
push
std
js
xchg
cmps
xor
adc
call
dec
aam
imul
cmp
mov
in
stos
jb
out
sbb
add
sbb
and
cmp
push
jp
daa
jns
jne
outs
arpl
jp
adc
lods
mov
jecxz
rol
add
pop
mov
sub
in
jmp
lahf
adc
ds
mov
sbb
out
cdq
or
or
sbb
mov
or
cmps
add
stos
dec
mov
mov
and
lock
adc
in
xchg
dec
sahf
sub
jl
pop
mov
sahf
xchg
retf
xlat
pop
pop
ret
adc
lods
sahf
jb
fwait
addr16
(bad)
sub
xchg
aaa
pusha
aam
jo
mov
mov
jne
sbb
lds
mov
ret
add
add
sub
cmps
popa
xchg
inc
dec
adc
push
cmp
sbb
mov
push
cmp
sub
mov
loop
clc
mov
daa
mov
pushw
xchg
cmp
push
sub
mov
mov
and
pop
dec
stc
mov
cdq
cmps
jle
dec
xor
jp
add
xabort
sub
xchg
into
or
xor
cmp
loop
mov
push
dec
mov
aad
test
dec
mov
out
jecxz
out
add
test
jae
xor
inc
dec
mov
and
movs
jbe
imul
inc
adc
and
sub
popf
mov
cmp
mov
mov
cli
dec
stos
enter
retf
inc
mov
and
dec
mov
(bad)
pop
ret
or
mov
push
push
pop
lods
and
xor
sub
aas
adc
cld
outs
pop
mov
xchg
sub
movs
popa
imul
mov
adc
jecxz
arpl
mov
test
arpl
into
cmp
xchg
add
xor
fcomp
dec
dec
cmp
ss
jb
xor
and
in
xchg
sub
sub
dec
inc
jbe
jg
xchg
test
add
mov
sub
or
movs
mov
bound
mov
test
ror
jbe
push
xchg
mov
sub
scas
cwde
and
mov
sub
out
js
in
dec
inc
scas
push
mov
imul
sbb
push
push
in
jnp
fist
outs
jnp
sbb
lods
cmp
div
mov
jecxz
and
frstor
push
dec
test
cmc
mov
sbb
cmps
imul
jg
mov
adc
sub
dec
or
jb
stos
sub
sbb
sub
js
pop
xchg
jo
stos
sbb
(bad)
aad
mov
inc
jo
xor
ins
imul
or
xor
xchg
pop
not
pop
dec
mov
jmp
push
xchg
mov
int
ja
loope
or
cmp
mov
pop
push
outs
mov
dec
or
push
xchg
arpl
icebp
fcmove
les
xchg
mov
xchg
enter
jecxz
sti
xor
(bad)
(bad)
rol
inc
pop
lahf
loope
cld
push
les
dec
hlt
pusha
(bad)
cld
test
(bad)
pop
sub
inc
fstp
mov
push
xchg
lods
shl
int
popa
sbb
and
mov
jmp
scas
rol
xchg
ret
or
mov
shl
sub
add
retf
jne
mov
pop
(bad)
jns
sub
sub
or
sbb
mov
addr16
sbb
pop
or
dec
adc
jl
loope
adc
ins
lea
pop
sbb
ds
lods
inc
les
jmp
enter
ss
retf
cmp
ins
xor
inc
push
sbb
jge
and
aad
aas
adc
xchg
daa
xor
cld
scas
xor
pop
dec
icebp
jge
jl
xchg
rcl
push
fs
test
fist
fstp
icebp
leave
into
dec
test
aaa
inc
cmps
fwait
mov
arpl
es
push
ds
out
repz
shl
sbb
add
cli
inc
push
and
jne
mov
shl
fwait
inc
dec
add
movs
mov
std
mov
(bad)
(bad)
cmp
push
or
jbe
pop
sbb
adc
push
mov
scas
rol
push
dec
pop
in
imul
cmp
(bad)
call
push
sub
addr16
inc
jb
test
icebp
push
and
sbb
(bad)
jmp
jge
dec
mov
and
pop
sbb
out
adc
mov
out
rep
shl
mov
loope
jno
das
shr
add
(bad)
aam
ds
push
jnp
(bad)
loopne
dec
dec
clc
scas
jle
mov
in
inc
inc
xor
or
sbb
push
cmp
mov
adc
sub
out
xchg
icebp
add
adc
gs
jp
adc
loope
cld
test
data16
aas
cmp
add
mov
sub
popf
movs
sub
movs
mov
fst
rcr
xor
dec
pop
(bad)
sar
pop
sub
jbe
test
mov
sbb
xlat
mov
into
or
push
es
jb
movs
dec
lods
cmps
jge
sti
adc
push
lods
push
mov
xor
jns
pop
push
addr16
adc
mov
loop
pop
mov
sbb
adc
push
test
leave
pop
xchg
mov
repz
loop
xlat
stc
rcl
mov
pop
jns
inc
jnp
fs
mov
adc
repnz
mov
xchg
or
shl
scas
push
or
movs
xchg
sbb
jle
aam
leave
xor
pushf
out
cmp
mov
and
lea
push
pop
fidiv
push
dec
nop
(bad)
ret
xor
pushfw
out
add
enter
mov
sti
mov
pop
push
les
int3
shl
das
inc
cwde
pop
pause
ja
mov
xchg
pop
pop
shl
pop
pop
pop
push
scas
leave
mov
sbb
push
and
cmc
mov
cmc
hlt
scas
test
aad
sbb
fidivr
cmps
ins
dec
ins
add
inc
or
xchg
and
lea
aas
call
cwde
outs
les
xchg
lods
je
out
xchg
bound
retf
jnp
lods
ss
lock
in
hlt
movs
push
mov
xchg
or
and
into
sbb
xor
bound
and
push
or
les
gs
fs
fidivr
pop
stos
daa
ret
fsubr
mov
cli
xor
inc
int
sub
inc
into
or
xor
sbb
dec
cmp
sbb
iret
hlt
xchg
push
jge
pusha
sbb
imul
aaa
ins
pop
int3
sbb
cdq
aam
adc
dec
mov
mov
cdq
iret
arpl
pop
shr
xor
sbb
out
mov
adc
and
test
mov
(bad)
fs
(bad)
les
xor
jnp
push
out
push
sub
(bad)
(bad)
cwde
daa
ret
xchg
or
retf
enter
loopne
push
adc
(bad)
and
mov
mov
inc
xor
xchg
push
or
sub
fsubr
pop
or
inc
push
sbb
add
aaa
cmp
iret
mul
or
jo
adc
sbb
cmc
jp
popf
rcr
call
mov
pop
imul
test
test
in
add
adc
mov
in
aaa
mov
test
adc
cmp
push
cdq
ja
cmp
push
cmp
xchg
and
rcr
(bad)
dec
iret
call
or
cmp
out
jl
loope
ja
add
mov
data16
sbb
shr
and
loop
or
ja
pop
clc
ins
fsubr
add
movs
sbb
pop
imul
leave
mov
sub
arpl
jp
js
aad
shr
fnsave
mov
adc
adc
xor
push
loop
dec
and
cli
inc
clc
push
fs
dec
mov
xlat
cmps
dec
jl
cs
idiv
std
mov
cmp
sahf
ror
jle
stc
call
out
mov
or
xor
xor
cmp
mov
pop
imul
dec
pop
out
mov
sub
in
and
cmp
sub
adc
nop
dec
cmps
push
jp
sub
pushf
jnp
fdivrp
in
pop
fucomip
lods
add
hlt
ss
jo
aas
jae
inc
jge
xchg
in
dec
daa
sub
xchg
test
cmp
xchg
lds
std
mov
lds
sub
int
inc
ror
or
xchg
xor
imul
loopne
push
sti
mov
pushf
ret
fadd
jae
pop
popf
repz
in
and
dec
lods
jb
cmp
push
rcr
add
fld
ins
add
test
push
fldcw
or
mov
pop
stos
fdivr
outs
sti
mov
inc
(bad)
mov
test
out
test
movs
xor
popf
cmps
push
jmp
sub
nop
dec
ret
push
dec
invd
adc
in
add
add
fs
js
dec
dec
push
add
test
mov
push
dec
mov
jnp
imul
or
fisubr
jl
jne
ficomp
or
mov
rcr
and
cwde
imul
iret
(bad)
icebp
pop
push
inc
adc
sbb
pop
sub
mov
shl
cmp
jne
cli
sbb
call
pop
jbe
in
(bad)
pop
sbb
mov
cmp
outs
les
add
jg
inc
gs
(bad)
mov
lock
and
push
lock
(bad)
repnz
fwait
pop
sub
imul
pusha
loopne
push
out
les
xchg
adc
in
pop
pop
xchg
iret
pusha
fisubr
jmp
inc
jmp
and
push
in
fisttp
out
ficom
push
push
bound
dec
retf
inc
leave
(bad)
push
fidivr
leave
xchg
mov
call
sub
dec
jge
adc
pop
cmp
pop
cli
add
cmp
out
sub
push
mov
lea
das
es
mov
out
popf
sbb
popa
fld
sbb
and
push
jo
sbb
or
fiadd
jae
adc
pushf
jns
int3
bound
push
adc
test
mov
out
rol
xchg
js
je
imul
sbb
pushf
daa
sub
and
add
test
scas
jne
mov
es
push
jmp
pop
jnp
stos
retf
pop
xchg
inc
inc
xlat
popf
jno
jecxz
test
(bad)
fstp
mov
ficomp
xchg
jno
pusha
pushf
pushf
pop
bound
jmp
sti
and
push
mov
pop
out
leave
shr
and
cld
dec
push
loopne
popa
add
imul
aaa
push
es
cmp
mov
jo
dec
push
mov
(bad)
stc
popf
aas
pop
rol
ss
outs
jge
cmp
std
in
cmps
outs
lods
cld
sbb
pop
sbb
(bad)
shl
and
outs
addr16
dec
in
pop
push
xchg
xchg
cmp
xchg
cwde
retf
(bad)
rcr
sub
in
add
stos
dec
pop
outs
loopne
sbb
stos
xor
adc
dec
out
bound
rcl
push
xchg
adc
pop
ret
lods
pop
cmp
fdivr
outs
dec
and
push
and
cwde
jp
xchg
pop
test
sbb
stos
gs
pop
jmp
or
push
mov
xchg
pop
add
jmp
loope
and
sub
dec
call
push
sti
clc
movs
and
mov
push
loope
sub
test
mov
enter
test
jg
xor
daa
cwde
ds
loope
mov
pop
jns
xor
mov
daa
(bad)
mov
inc
js
inc
gs
rol
sbb
mov
jecxz
sti
ins
and
lock
lds
repz
sub
or
neg
fiadd
cmps
inc
iret
stos
push
fwait
mov
in
xor
leave
jno
pop
das
fwait
xchg
push
cmp
nop
call
and
dec
jnp
jb
lods
loop
fs
arpl
js
add
xchg
mov
add
sbb
jbe
imul
dec
fidivr
call
mov
dec
frstor
fadd
lods
mov
mov
test
xlat
xchg
mov
and
ds
loop
mov
cmp
jno
out
int3
push
jl
cmp
jge
lods
and
cmp
loope
xchg
loop
mov
push
ret
and
pop
or
aaa
xor
stos
fst
mov
stos
das
or
(bad)
sub
sub
mov
cmp
mov
xor
xchg
adc
ins
aad
mov
sbb
(bad)
push
mov
les
imul
movups
scas
push
adc
mov
ror
in
mov
mov
inc
cld
mov
clc
push
xor
repz
and
jmp
pop
inc
pop
or
(bad)
sbb
ret
push
test
add
pop
inc
rol
ficomp
shr
icebp
lds
inc
je
fisttp
vpunpckhbw
in
cmp
add
cdq
sbb
push
rol
icebp
pop
lods
gs
cmp
leave
lds
jns
cdq
popf
fdivp
in
lods
sub
pop
outs
mov
cmc
pop
cmp
stos
icebp
in
arpl
push
aad
clc
add
mov
jp
cwde
dec
mov
(bad)
icebp
scas
jmp
ds
jmp
pop
mov
jns
ins
sbb
fstp
dec
xchg
sti
repnz
je
shl
sar
push
sti
inc
cmp
push
inc
mov
sub
mov
dec
dec
(bad)
jmp
es
sub
pop
pop
test
sbb
sub
add
and
jo
lock
sub
(bad)
pop
xchg
sub
mov
pop
(bad)
repz
into
mov
ja
sub
rcl
pop
mov
pushf
retf
jo
jg
das
or
jg
test
loop
push
cmp
mov
mov
cmp
and
das
cmp
jb
sub
int
jnp
sub
mov
fwait
(bad)
scas
std
scas
push
inc
cmp
fsub
sub
inc
add
ja
jmp
out
adc
cmp
fnstenv
retf
dec
pop
mov
pop
push
stos
dec
ja
inc
mov
fsubr
and
in
gs
add
in
rcl
rol
mov
es
aaa
mov
mov
(bad)
ficom
or
inc
jmp
xor
or
xlat
mov
ret
cmp
or
jmp
or
outs
add
rol
push
outs
and
add
daa
mov
outs
outs
jmp
call
mov
push
js
mov
mov
call
fiadd
aaa
in
js
xor
lahf
cmps
inc
mov
mov
push
es
in
inc
or
cmp
sbb
gs
push
jno
mov
ret
xor
jae
xchg
daa
leave
shl
push
fidivr
in
test
jmpw
pop
out
test
enter
out
add
std
jg
mov
ret
jmp
xor
ja
dec
mov
mov
xchg
je
pushf
loope
in
xlat
data16
xchg
inc
xchg
leavew
fisubr
int
fild
cs
cmp
(bad)
fsubr
jle
xchg
xor
rcr
enter
ret
mov
mov
ins
sbb
rcr
mov
mov
call
es
scas
enter
mov
mov
dec
sar
add
sahf
push
fild
jg
ret
mov
mov
in
add
and
call
cmp
daa
in
mov
jmp
sbb
and
cmc
daa
adc
cmp
mov
sbb
adc
in
(bad)
push
stos
xchg
stc
lods
in
je
cmp
outs
imul
pop
popf
xchg
xchg
push
dec
movs
cld
loop
lods
xchg
xchg
xchg
arpl
add
(bad)
stc
cmps
bound
stos
pop
lahf
push
cmp
push
jne
pop
movs
fldcw
dec
out
jmp
fadd
clc
out
inc
js
loopne
(bad)
loope
mov
outs
adc
mov
outs
dec
fyl2x
stos
add
pop
push
mov
push
adc
cmp
ins
inc
retf
es
mov
call
lods
lea
daa
arpl
push
retf
imul
in
icebp
or
sub
aad
or
cwde
add
jmp
inc
aas
xor
or
and
lahf
stos
adc
adc
int3
ins
or
add
enter
pop
sub
mov
outs
sub
xor
dec
adc
inc
inc
push
mov
lods
sbb
and
fcmove
jnp
cmp
cdq
mov
fwait
lods
sub
scas
das
adc
mov
lods
and
and
jnp
daa
xchg
add
or
push
daa
(bad)
lods
leave
xor
mov
outs
in
ret
jno
in
xchg
adc
mov
and
shl
adc
aad
into
mov
lods
hlt
scas
sahf
sub
cmp
mov
jge
fcomp
jecxz
mov
adc
jo
lods
mov
mov
xchg
shr
mov
test
leave
ret
cli
push
mov
sub
adc
dec
mov
xchg
test
mov
xchg
and
cmp
int
or
mov
popa
mov
pop
sbb
pop
in
in
ror
pushf
jge
(bad)
push
jb
movs
mov
sub
add
push
ja
push
inc
mov
leave
cmp
in
pop
fsub
fisttp
inc
mov
(bad)
(bad)
jnp
dec
sbb
ret
mov
sbb
cli
jmp
and
jb
in
pop
ror
jbe
div
fstp
idiv
fdiv
sub
or
fcomi
mov
dec
(bad)
sti
les
daa
sar
stc
cmp
es
sub
in
lea
pop
je
pop
xchg
(bad)
popf
push
adc
mov
or
mov
aad
sbb
adc
fisub
and
xor
cmc
adc
mov
mov
add
sbb
iret
cmp
imul
out
mov
push
dec
jae
mov
loopne
popa
ficom
cmp
mov
(bad)
loopne
jns
sar
nop
es
cmp
clc
into
dec
fsubrp
es
inc
out
sar
pushf
cmps
bound
mov
scas
cdq
mov
dec
push
pop
in
mov
iret
cmp
add
sbb
add
push
adc
adc
add
push
cmps
and
test
(bad)
mov
dec
mov
adc
sahf
jns
cmp
bound
ins
ds
mov
sbb
movs
(bad)
cs
add
jne
pop
cs
arpl
xchg
mov
dec
mov
add
mov
repz
cmps
mov
mov
(bad)
push
xor
fcom
sub
cmp
jns
out
mov
mov
arpl
lock
adc
push
mul
fmul
mov
aaa
or
push
gs
mov
xor
retf
dec
inc
sub
cmps
movs
fld
shl
mov
nop
sub
jp
lds
mov
(bad)
xchg
div
mov
cmp
scas
mov
scas
xor
jnp
mov
push
dec
jl
or
nop
jmp
push
cmp
or
stos
aas
sub
xor
fld
sub
scas
(bad)
and
stos
loopne
jae
loope
movs
or
add
xchg
adc
out
adc
jle
push
xchg
mov
pop
ja
sbb
sbb
pop
cmp
std
xchg
mov
or
int3
hlt
jle
or
sbb
adc
sti
es
repnz
cmp
js
push
ficomp
xchg
jne
adc
aam
cmps
lea
lods
sub
or
leave
out
cmp
test
inc
sub
pusha
push
jmp
fist
cli
es
mov
(bad)
lods
test
mov
xchg
fdivr
int3
pop
and
inc
pop
add
jne
test
push
int
jo
mov
inc
ins
es
cmp
sub
push
mov
xor
out
ins
and
push
pop
leave
(bad)
cmc
mov
jns
repnz
sbb
sub
outs
scas
mov
xor
enter
ds
int
add
lds
sahf
inc
sub
and
mov
xlat
call
mov
in
adc
ins
mov
xchg
add
adc
lock
pop
mov
jne
push
inc
xchg
xchg
inc
into
arpl
and
mov
(bad)
xlat
adc
aam
jb
ret
out
dec
add
mov
dec
hlt
pop
add
mov
cmp
xchg
(bad)
ds
ror
mov
shr
jmp
mov
xor
push
pop
xor
mov
or
rcl
fcomp
xchg
mov
or
cmp
imul
lock
mov
lods
or
push
imul
jo
pop
lahf
loop
fnsave
fcomp
pop
into
(bad)
and
cmp
rol
xlat
xor
pushf
loopne
inc
push
retf
ret
jbe
push
repnz
dec
and
cmp
(bad)
aaa
jbe
repz
popf
movs
bound
adc
inc
xchg
jl
adc
mov
add
dec
les
add
nop
adc
xor
pop
adc
test
and
jg
cli
xor
hlt
cmp
push
mov
cmp
push
cmp
pop
retf
fmul
fistp
mov
pop
mov
adc
xor
fnsave
addr16
jecxz
fwait
pop
fsub
adc
xor
jbe
mov
xchg
xchg
pop
dec
out
push
cld
sub
das
dec
inc
out
inc
or
and
fyl2x
retf
xor
mov
sub
into
lahf
sbb
(bad)
(bad)
iret
mov
(bad)
push
fisttp
jae
aaa
and
ror
test
sbb
ret
popf
add
xor
das
repnz
jp
lock
ret
outs
adc
out
inc
xchg
fsub
jb
(bad)
fisubr
repnz
pop
xchg
cli
rcl
add
shl
out
in
fcmovb
and
neg
int3
jo
pop
clc
out
ins
xchg
and
mov
pop
icebp
pop
into
pop
bound
test
jge
mov
addr16
adc
jp
inc
or
sub
jnp
test
add
sub
out
cmp
xchg
inc
(bad)
and
nop
imul
jnp
mov
out
push
pop
out
rol
fnstsw
jmp
test
call
sahf
add
pop
xlat
xor
cmps
mov
pop
ds
sar
adc
or
dec
push
dec
fsub
(bad)
and
xor
ss
stos
push
push
sbb
imul
outs
mov
sub
data16
ret
test
xchg
dec
(bad)
cmp
sub
jbe
std
add
dec
inc
(bad)
push
jae
cmps
imul
push
sub
inc
mov
in
mov
pop
xchg
mov
addps
add
xor
not
add
fistp
sbb
test
movs
jne
xlat
idiv
adc
push
sbb
pop
das
inc
jmp
xchg
sub
push
loope
pop
call
rcl
scas
add
cmps
sbb
push
mov
xchg
out
aas
nop
pop
in
retf
int
ret
in
and
mov
dec
(bad)
hlt
jns
add
and
push
dec
jnp
mov
jo
push
cmps
cmp
mov
or
stos
aas
fwait
xchg
jns
mov
and
rcr
pop
scas
loope
dec
add
jno
cwd
retf
aam
mov
aas
cmp
and
shr
jbe
int3
aam
outs
sbb
add
xor
or
mov
imul
pop
cs
dec
pop
cdq
mov
ret
(bad)
fbstp
xlat
sbb
popf
aaa
out
cmc
out
cmps
jp
imul
ds
test
xchg
sbb
sub
xchg
pop
mov
push
mov
cld
movs
hlt
out
cdq
xchg
test
pop
push
daa
arpl
pushf
retf
mov
push
enter
jge
inc
push
into
imul
xchg
lds
xor
clc
call
and
xchg
test
add
mov
enter
mov
inc
inc
push
cmps
sbb
cmp
(bad)
xchg
push
cdq
xor
aas
adc
mov
jg
leave
das
mov
iret
in
inc
jnp
shr
out
sbb
jg
ret
add
xchg
ja
push
pop
mov
in
(bad)
imul
sbb
imul
or
mov
or
push
sbb
loop
mov
cmc
dec
addr16
dec
add
es
pop
test
cwde
ds
mov
push
ins
pop
mov
lds
mov
(bad)
int
sbb
mov
inc
xchg
xor
sbb
(bad)
out
ins
inc
push
stc
imul
dec
pop
pushf
cmc
cli
sub
jl
mov
lods
fdiv
adc
pop
mov
cld
adc
cmp
cmp
mov
stos
hlt
test
(bad)
iret
sar
push
nop
jg
stos
pminsw
test
pop
int3
or
sub
cs
idiv
scas
daa
ins
fcom
call
div
mov
and
jmp
fsubr
mov
pop
pop
or
xor
outs
ins
adc
test
data16
or
adc
frstor
and
jmp
dec
es
imul
cs
sti
popf
mov
push
jp
repz
mov
outs
in
jb
pop
ja
xchg
xor
hlt
es
ja
push
(bad)
dec
and
scas
std
(bad)
push
rep
mov
or
in
mov
loopne
in
das
push
mov
(bad)
in
xchg
and
sub
jae
pop
mov
ds
fwait
nop
xor
retf
dec
pop
dec
pop
fsub
lods
loop
mov
push
sbb
not
bound
pushf
push
jbe
popf
sbb
stc
into
dec
xchg
xchg
adc
mov
mov
dec
aam
popf
stos
xchg
mov
jmp
cmp
xlat
and
std
mov
shr
cwde
mov
imul
sbb
dec
out
(bad)
repz
xor
add
int
cmp
mov
out
jmp
prefetcht2
cmp
add
(bad)
je
xchg
outs
mov
arpl
test
add
cmc
(bad)
cmp
xchg
test
movs
add
xlat
xor
rcl
mov
xor
mov
(bad)
lds
shr
mov
or
cmp
push
cmc
aaa
adc
out
push
cmps
xor
in
movs
cs
push
je
aam
xor
and
xchg
data16
shl
jbe
arpl
mov
loop
dec
dec
adc
imul
mov
test
in
pop
and
push
pushw
fwait
mov
inc
scas
popa
or
test
lahf
sbb
dec
fcomip
sahf
(bad)
push
stos
(bad)
scas
sub
mov
arpl
xor
(bad)
jns
inc
outs
sbb
rol
aas
jp
sahf
cld
sub
popf
inc
call
lods
inc
jmp
pop
add
sbb
in
test
add
cdq
mov
xor
movs
ret
cmc
rcl
mov
scas
ins
dec
push
add
shl
add
test
xor
push
xchg
mov
adc
nop
pop
jecxz
mov
xchg
scas
es
ret
mov
xchg
mov
rep
aaa
or
pop
out
aam
retf
cmp
aam
mov
pop
jbe
int
mov
and
mov
inc
jle
inc
or
mov
nop
cmp
stc
add
out
out
mov
jnp
pop
add
xchg
psubsw
ror
jae
outs
mov
loope
mov
mov
dec
or
bound
jnp
push
imul
mov
rcl
sub
or
and
xchg
and
icebp
mov
sbb
es
sbb
or
cmp
repnz
pusha
adc
jae
aad
xchg
mov
sub
pop
cmp
fdivrp
mov
xchg
outs
cdq
int3
or
jb
mov
call
mov
pop
lods
adc
adc
int3
dec
call
lods
jb
int3
test
pop
es
(bad)
cld
stos
(bad)
xchg
or
sahf
inc
(bad)
rol
in
shr
inc
cmc
xchg
movs
popa
jl
pop
ret
pop
sub
jb
cmps
mov
mov
je
into
sbb
out
fcom
int3
(bad)
bound
dec
push
xor
shl
ins
add
lds
(bad)
inc
out
in
test
lds
lea
push
cmp
xchg
ficomp
lods
fidivr
int3
nop
cmp
jmp
popa
inc
cld
les
mov
pop
out
popa
xchg
sbb
mov
sub
push
add
xchg
push
inc
jle
les
fist
pushf
lds
leave
sahf
lock
mov
gs
fisub
mov
movs
or
sbb
int3
lock
push
mov
mov
ficom
rcl
sub
push
mov
mov
es
jae
xlat
cdq
cmp
ficom
daa
arpl
js
mov
in
sbb
es
popa
das
aaa
imul
outs
lods
ins
rcl
jns
fstp
iret
int
pop
aaa
sbb
outs
cmps
loopne
sahf
jns
cmp
xor
bound
mov
jns
mov
and
cmp
jecxz
mov
sar
shr
pop
jo
imul
cmp
(bad)
jnp
popa
mul
sbb
sbb
cmp
xchg
lock
pop
sub
cdq
jge
push
ds
sub
add
mov
movs
pusha
push
rcr
imul
xor
xchg
aam
aad
sub
bnd
stc
jp
lahf
arpl
movs
push
fstp
jle
ja
xor
arpl
out
jo
cdq
cmc
stc
cld
fs
mov
aas
adc
bound
addr16
shr
xor
jae
jo
push
inc
rol
jg
ins
sbb
xchg
dec
push
xor
dec
push
out
mov
cwde
movs
mov
jo
out
imul
scas
sahf
popf
mov
adc
mov
shl
push
imul
ins
cli
push
mov
mov
xchg
pushw
cmp
call
push
(bad)
jb
add
push
(bad)
stos
dec
sub
imul
sub
jo
lahf
jle
in
iret
push
add
jge
add
cmp
int3
shl
ja
sbb
inc
into
popf
push
(bad)
iret
pop
and
xor
outs
sub
mov
and
js
outs
sub
push
fild
retf
dec
pop
xor
push
pop
jg
cmps
or
jae
mov
push
adc
pop
pop
xchg
ficomp
push
and
dec
std
pop
mov
mov
stos
mov
outs
push
lods
aam
push
xor
cmp
popf
mov
das
hlt
(bad)
push
hlt
pop
(bad)
cmp
mov
loopne
test
lea
jle
and
fsubr
push
addr16
push
fisubr
fild
mov
test
(bad)
xchg
fs
and
mov
dec
pop
leave
lods
sbb
fdiv
loop
pop
cmp
mov
cmp
retf
movq
aam
mov
repnz
stc
sti
fldl2t
int
sub
adc
jne
repz
push
out
(bad)
jl
in
movs
(bad)
mov
scas
jmp
dec
in
sbb
mov
and
scas
inc
cmc
cwde
inc
aad
sahf
sub
jmp
cmp
sbb
xchg
jnp
xchg
xchg
cmps
push
and
mov
mov
cmp
popa
ret
test
sub
jb
int3
enter
fidiv
xor
jmp
adc
js
mov
scas
sub
shl
jg
dec
mov
test
cmp
scas
in
pop
sbb
jne
cmp
sub
adc
stc
fwait
xchg
jle
loopne
sub
dec
clc
in
dec
sti
je
repnz
mov
out
pop
je
add
leave
cmps
push
pop
imul
dec
xor
mov
push
call
(bad)
jge
mov
test
push
loopne
mov
imul
add
sub
sbb
ficom
sbb
(bad)
and
inc
cmp
sbb
je
adc
sbb
jnp
mov
mov
xchg
jb
ret
xchg
push
(bad)
push
adc
add
pop
sar
aam
xchg
push
and
in
cmp
int
mov
fucomip
inc
cld
and
(bad)
(bad)
pop
in
ror
stos
mov
cld
daa
std
popa
xor
inc
jmp
jae
out
clc
retf
mov
cmp
adc
or
xchg
pop
iret
mov
jle
cmp
jg
pop
out
cmp
mov
enter
jg
div
sar
mov
xchg
inc
pop
cdq
add
int
gs
cmp
(bad)
bound
popf
out
rol
cmp
ret
cmc
leave
fsub
jo
(bad)
xchg
dec
or
aas
jbe
add
call
aam
loope
cdq
add
jae
cmp
nop
dec
stos
ficomp
pushf
and
je
imul
test
xchg
mov
sub
pusha
mov
int3
add
mov
add
pop
fdivr
imul
test
repnz
push
inc
push
or
out
or
mov
and
ret
iret
lock
and
cmp
sub
gs
push
dec
mov
lea
pop
loope
mov
mov
fmul
ins
int3
or
mov
xchg
ds
call
jmp
pop
ret
fcmovu
test
cmp
or
bound
idiv
ja
shr
or
stos
cdq
retf
mov
js
dec
sub
xchg
(bad)
retf
mov
les
push
aam
fstp
outs
jne
push
nop
cdq
sbb
inc
cmc
jl
jnp
pop
mov
pop
jle
mov
sahf
fistp
push
sbb
cmp
jnp
xchg
xchg
retf
ret
in
jo
movs
mov
push
ds
inc
jl
adc
cdq
xchg
xchg
das
inc
enter
cwde
push
xchg
jge
loope
test
in
das
dec
xor
adc
in
bound
fstp
sbb
jmp
shl
iret
rcl
adc
push
in
sbb
sbb
push
xchg
cmp
mov
test
ret
sub
loope
daa
sub
xor
fld
sub
scas
loope
push
es
fs
mov
mov
es
inc
mov
retf
push
dec
sbb
sbb
xor
(bad)
retf
cmp
mov
arpl
cmc
fldenv
sbb
rcr
jle
popa
out
add
xchg
cmp
or
fcom
ret
(bad)
das
lods
sub
jns
(bad)
je
or
mov
test
or
inc
aaa
mov
fwait
imul
xlat
stc
std
out
or
xchg
mov
ret
mov
cdq
ret
jmp
mov
sbb
and
mov
leave
jmp
lock
stos
fbld
iret
ss
and
jno
adc
or
xchg
fidiv
jmp
stos
pop
call
xlat
mov
mov
cmp
int3
rol
push
inc
jmp
xchg
adc
xchg
cmp
call
sub
mov
aaa
mov
cmp
cmps
xor
mov
sar
js
stos
fsubr
dec
(bad)
js
test
imul
and
(bad)
(bad)
cmc
pushf
addr16
test
aas
adc
popa
add
mov
xor
aad
or
dec
mov
test
xor
pop
mov
adc
(bad)
mov
test
popa
jno
(bad)
(bad)
popf
adc
xchg
addr16
sahf
add
pop
outs
shl
mov
movs
dec
fs
lea
sub
into
sbb
dec
inc
fild
jecxz
loope
imul
mov
fwait
add
call
pop
retf
div
adc
out
test
mov
iret
mov
jp
cmps
js
jns
lock
repnz
repz
xchg
jo
pop
and
dec
add
jns
bound
mov
fmul
jle
jmp
or
jle
adc
dec
pop
cmp
pop
push
lock
je
xor
(bad)
fsubr
push
push
pop
repz
or
push
dec
clc
das
dec
rcr
xor
mov
mov
sub
ja
test
mov
packssdw
mov
push
mov
xchg
leave
dec
clc
and
enter
std
push
scas
sbb
fwait
in
inc
repnz
mov
pop
movs
push
sub
pop
imul
jnp
jp
inc
push
retf
aam
inc
pop
push
ret
xchg
mov
cs
std
shr
pushf
test
out
cdq
or
dec
mov
sbb
mov
imul
mov
inc
fisub
sbb
or
add
adc
and
pop
(bad)
xor
add
inc
or
mov
inc
mov
into
scas
stos
sub
pushf
dec
ret
pop
stos
pop
data16
xchg
stc
mov
shr
div
sbb
push
sbb
popf
pushf
or
hlt
inc
jge
xchg
sysexit
std
shr
es
dec
inc
adc
sub
(bad)
jle
jb
inc
sti
pop
rcl
shl
add
push
fstp
das
xor
test
mov
and
pop
mov
std
push
outs
jns
mov
inc
cmp
(bad)
imul
dec
in
pop
or
(bad)
into
jmp
(bad)
sub
inc
loope
leave
(bad)
cdq
repnz
dec
add
outs
inc
jne
mov
(bad)
push
mov
in
or
pop
fcom
mov
in
js
xchg
xchg
sbb
sub
sbb
mov
dec
outs
xchg
mov
mov
sbb
fdivr
mov
push
mov
jmp
push
ret
fsubr
and
lock
mov
pop
push
pop
pop
mov
push
jp
popa
sti
(bad)
mov
push
or
test
test
adc
mov
out
mov
ret
pop
rol
sbb
mov
adc
fidiv
pop
push
xchg
push
daa
inc
iret
mov
aam
xlat
outs
fdivr
fsubr
add
or
rol
call
add
call
stos
push
stc
push
std
fimul
retf
out
xchg
adc
mov
outs
outs
or
ret
inc
shr
inc
xchg
inc
pop
cs
clc
mov
addr16
inc
jp
push
sahf
or
adc
lea
and
fs
test
inc
out
repz
loopne
ret
loope
xchg
popa
(bad)
leave
mov
test
int
out
aas
dec
je
into
fbstp
outs
imul
stos
das
dec
xchg
call
stos
das
fiadd
mov
(bad)
bound
sahf
sti
adc
div
(bad)
icebp
cmp
dec
adc
retf
mov
sar
cmp
pop
adc
movs
or
je
fcmovne
pop
ud1
sub
call
ins
scas
idiv
popf
jmp
add
loope
dec
in
lea
mov
cmp
jp
dec
inc
fdivr
pop
sbb
jmp
repnz
jg
arpl
mov
ret
lahf
inc
mov
cmc
les
inc
or
in
add
fld
jecxz
jle
pop
add
or
xchg
mov
ret
mov
imul
dec
repnz
adc
sub
mov
pop
cmp
outs
mov
or
push
cmc
xor
mov
xor
ficomp
je
push
ret
out
jl
jno
dec
call
out
aas
adc
push
ins
ficomp
add
gs
dec
or
push
inc
dec
jg
or
inc
popf
in
push
loop
jnp
dec
mov
es
test
adc
pusha
add
arpl
retf
push
cmp
mov
test
xor
add
or
jmp
mov
popa
shl
sbb
movs
test
aas
mov
jmp
or
loop
push
pop
adc
test
sbb
mov
mov
adc
iret
or
add
test
inc
aad
retf
xchg
cld
push
ret
int
repnz
and
adc
sti
sbb
movs
loop
int
and
ss
inc
int3
mov
outs
or
xor
mov
dec
push
pop
pusha
xor
adc
enter
mov
shr
ror
ret
test
movhlps
shl
push
mov
pusha
adc
push
(bad)
mov
shl
dec
test
rcr
sbb
push
jecxz
and
adc
push
pop
addr16
mov
and
ja
jge
pop
repz
and
cmp
jb
neg
cli
mov
sub
mov
push
xchg
push
(bad)
cli
dec
jle
movs
out
xor
xlat
adc
inc
and
(bad)
push
mov
and
jne
add
mov
sub
sub
xlat
lds
out
jns
out
cli
arpl
sbb
ficomp
jns
test
inc
js
mov
dec
sbb
mov
cmc
in
inc
test
sub
cld
dec
cli
repnz
(bad)
mul
jb
sahf
fdivrp
xchg
ins
jbe
mov
pop
inc
(bad)
dec
nop
dec
sbb
scas
in
jecxz
pop
popf
fstp
iret
mov
fwait
jnp
and
int3
sar
fdivr
sub
in
adc
cmc
enter
mov
push
scas
mov
int3
xor
repnz
sahf
inc
movs
(bad)
xchg
fstp
js
push
sub
pop
inc
jne
adc
fmul
or
sbb
mov
jbe
add
xor
inc
push
div
es
imul
loop
adc
sar
push
fld
movs
test
ss
scas
push
retf
dec
push
(bad)
fisubr
je
fadd
push
cmc
cmc
cmps
pop
stc
stos
fidiv
rcr
xor
dec
add
xchg
mov
xchg
or
xchg
mov
ins
push
cmps
mov
div
and
stos
faddp
sub
fwait
es
mov
push
mov
jle
lods
out
imul
mov
inc
and
xchg
xchg
sbb
xor
mov
pop
fistp
loop
push
dec
out
test
or
sti
xlat
mov
cmp
cmps
fld
iret
ror
movs
mov
mov
jne
dec
mov
scas
add
jne
test
mov
in
xor
sub
loope
add
shl
dec
jae
mov
das
ins
out
int3
fldenv
xor
in
xor
push
bound
jp
sub
stos
inc
repnz
xor
inc
cwde
and
cmp
mov
push
cld
imul
xchg
and
sbb
(bad)
fwait
cmp
pop
cmp
test
sti
sub
cld
mov
scas
fwait
jae
jnp
adc
pop
int
call
and
or
inc
mov
add
ins
pop
adc
lods
jge
std
xchg
add
or
or
xlat
pop
cli
je
scas
pop
fisttp
jae
xor
popa
inc
mov
or
add
aas
jnp
and
pop
inc
mov
inc
or
pushf
xchg
xchg
jmp
jno
mov
daa
add
mov
and
dec
bound
pop
movs
pop
ret
sbb
clc
das
push
dec
test
das
and
xor
clc
lods
lock
jnp
adc
or
push
mov
(bad)
lock
cmp
pop
push
cmps
jge
sub
xchg
sti
jbe
aaa
lods
jns
imul
aaa
adc
jmp
aam
push
push
mov
or
imul
es
sub
shl
and
lds
dec
push
or
fwait
jns
xchg
fcomi
sbb
hlt
out
gs
jo
scas
sti
sahf
mov
nop
inc
mov
inc
loop
pushf
push
mov
(bad)
pop
out
push
leave
sbb
mov
icebp
and
call
mov
lds
inc
pop
adc
cmc
inc
or
and
es
mov
and
add
jne
int3
and
mov
push
out
or
movs
mov
xchg
adc
adc
xor
out
test
mov
xlat
adc
out
dec
cmp
les
call
sahf
mov
mov
mov
mov
std
leave
sahf
dec
sub
jecxz
jae
cmp
jp
mov
paddusb
ss
aas
das
das
shl
sbb
inc
jmp
sbb
mov
pop
arpl
inc
jb
icebp
dec
and
pop
sub
mov
mov
mov
lahf
or
fld
pop
add
mov
aas
inc
sbb
test
rcl
adc
in
mov
adc
cmc
add
cmp
fld
dec
mov
out
mov
ja
xlat
dec
xchg
ret
xchg
pop
nop
es
cwde
xchg
ret
mov
inc
jo
sbb
adc
ins
sub
cld
adc
sahf
xor
jl
fist
hlt
mov
rol
sub
xchg
inc
pop
neg
dec
inc
ds
daa
cmp
adc
test
jg
pusha
push
sbb
add
out
add
mov
dec
rol
pop
lock
shl
inc
lods
test
pop
fcom
mov
aad
push
mov
cmp
ret
shl
fisubr
add
xchg
mov
xchg
fimul
jns
lods
adc
lock
aaa
xchg
enter
out
pop
das
hlt
inc
test
fsubr
xchg
push
add
cmp
and
push
jp
out
scas
jmp
repz
xchg
xlat
sbb
sbb
jns
or
(bad)
push
or
and
ret
pop
add
pop
pop
test
mov
jmp
fadd
jg
enter
stos
outs
xor
loop
outs
mov
inc
inc
mov
cmp
sahf
jg
mov
movs
mov
cmps
add
into
mov
loopne
jns
mov
pop
sahf
mov
call
push
mov
fldcw
clc
ins
cmc
xor
mov
icebp
dec
or
arpl
push
jae
ret
xor
call
mov
popf
ficom
(bad)
xor
or
jb
xor
out
and
jge
or
push
adc
rcl
xor
mov
push
(bad)
cmp
add
mov
arpl
es
icebp
sbb
push
outs
fistp
push
mov
or
jp
push
stos
ffree
mov
(bad)
and
inc
lds
pop
sub
ret
and
es
push
jnp
sub
sub
or
mov
icebp
out
retf
cmps
mov
xchg
out
push
movs
fsub
dec
mov
sbb
es
shl
in
jb
push
in
test
icebp
ret
jno
jnp
xchg
in
add
jbe
dec
nop
imul
cmp
push
js
sbb
jp
pop
cmp
int
sub
jbe
push
(bad)
mov
sbb
pop
daa
add
mov
xchg
or
push
add
(bad)
and
and
mov
mov
jbe
inc
jne
out
fnstcw
push
jg
mov
sub
imul
sub
dec
adc
les
pop
mov
sahf
sbb
mov
xor
scas
mov
adc
std
mov
xlat
out
cld
clc
sbb
ins
fidiv
push
jle
imul
iret
add
stc
cwde
sbb
fmul
in
push
inc
inc
adc
pop
out
mov
cmp
push
iret
inc
sub
(bad)
mov
jne
add
rcl
(bad)
ss
dec
and
push
arpl
adc
lods
adc
mov
movs
and
bound
xor
cmp
in
sbb
push
js
call
sub
into
ja
sub
bound
xor
push
jle
cmp
cld
mov
pop
sti
jl
in
xor
add
mov
cmp
cmp
clc
jle
add
aam
sti
mov
stos
fs
adc
nop
repnz
mov
pop
inc
xchg
xor
cmp
pop
push
jns
jo
xor
ficom
pop
scas
sub
pop
jg
dec
xchg
and
pusha
dec
in
fmul
out
xchg
pop
and
into
pop
cmp
push
lods
or
scas
adc
mov
mov
stc
pop
mul
div
mov
lahf
xchg
adc
dec
pop
cmc
(bad)
fdiv
fdivr
xor
ins
xchg
mov
jmp
enter
rcl
popa
pop
retf
mov
jo
sbb
cmp
sbb
inc
mul
pop
add
(bad)
push
fdivr
jne
or
jge
jae
push
(bad)
mov
sar
jne
xor
or
fist
pop
sbb
out
xchg
mov
mov
bound
pusha
(bad)
lock
cmc
inc
push
cmp
sub
adc
sub
xor
into
scas
cmp
idiv
loope
lods
mov
inc
in
addr16
xchg
dec
jo
push
push
sbb
xor
outs
jl
out
cmps
fstp
cmp
cmp
data16
cmp
mov
add
xor
movs
inc
pop
(bad)
adc
jg
mov
ins
inc
cmp
pop
lds
push
cli
dec
xchg
adc
xor
pop
les
add
dec
scas
ins
pop
aas
aam
jns
mov
push
mov
daa
in
mov
outs
aad
xchg
push
push
add
les
pop
aam
sub
xchg
xchg
add
sub
cmp
mov
cmp
inc
jns
xchg
push
mov
jo
xor
lds
add
ss
fidiv
jbe
mov
mov
popf
push
and
xchg
loopne
loopne
repz
leave
fs
jecxz
jne
enter
pusha
pop
es
in
xor
scas
sub
sub
int
sbb
lock
inc
test
and
ss
aaa
data16
dec
dec
sahf
hlt
jno
inc
jnp
xor
mov
add
out
xchg
add
outs
xlat
lods
cmps
jno
and
mov
mov
repz
jle
jb
arpl
popa
jo
sbb
inc
loopne
add
js
jge
out
shr
imul
cmps
cld
int3
shl
sbb
push
sub
ins
sub
inc
xchg
shl
mov
sti
or
and
jb
cmc
pusha
pop
xchg
(bad)
push
mov
clc
out
dec
xchg
mov
jno
stc
sbb
das
pop
lahf
xor
aaa
stc
inc
add
jmp
loope
fild
push
mov
mov
adc
jmp
jae
pop
cld
lock
lock
xchg
shr
sahf
mov
fcomip
int3
call
push
stos
mov
add
scas
ja
rcl
jecxz
adc
mov
push
pop
stos
push
pop
cmc
fild
fnsave
dec
(bad)
xchg
push
mov
mov
cmp
and
cwde
jae
sub
pusha
mov
lahf
stc
rol
ss
cmps
sub
mov
sbb
push
xchg
mov
dec
jp
mov
retf
popf
in
mov
bound
rcl
mov
push
cmp
mov
pop
shl
sbb
ja
gs
mov
das
and
mov
imul
mov
aaa
stos
out
repz
pop
xor
add
ds
push
cs
cmp
pop
aam
imul
(bad)
pop
adc
jbe
jns
pop
or
aam
or
dec
adc
add
or
xor
pop
sbb
adc
pushf
mov
xor
inc
dec
xchg
pop
mov
rol
adc
pop
jne
xchg
mov
sahf
addr16
add
es
cmp
or
cmp
(bad)
xor
sbb
or
(bad)
xchg
(bad)
xchg
lea
adc
cmps
inc
fwait
adc
pop
inc
std
icebp
mov
cdq
adc
(bad)
jmp
or
xchg
lea
aam
mov
and
inc
js
cmp
outs
enter
fisttp
mov
stos
push
sbb
std
(bad)
mov
addr16
xor
add
xchg
inc
rol
ret
aad
mov
and
in
lea
or
stos
pop
fst
jne
push
jae
mov
fld
into
cmc
data16
sub
jge
xchg
push
jl
loop
es
sub
push
fadd
jmp
push
ja
outs
mov
pop
and
retf
lods
xlat
repnz
in
int3
push
mov
into
aam
retf
or
lock
push
sti
cmp
enter
cmp
pop
je
push
add
jne
inc
std
arpl
push
lahf
lea
lea
jge
call
cmp
test
cmp
inc
xor
jmp
stc
pop
ds
dec
mov
into
and
dec
add
xchg
sar
jne
xor
popa
out
pop
push
retf
add
sbb
cmp
sub
mov
cmp
push
stos
lods
pop
int3
inc
cli
xor
inc
add
add
inc
repz
jmp
aam
out
mov
aad
daa
inc
aas
mov
or
or
adc
sbb
pop
or
xor
rep
cmps
sbb
pop
mov
xchg
jp
mov
pop
div
arpl
sub
rcl
or
jg
sbb
(bad)
jb
sti
mov
sub
push
lods
add
add
cdq
cdq
stos
pop
xchg
je
jbe
mov
in
jae
jnp
loop
enter
arpl
(bad)
cdq
pop
mov
xchg
sub
jbe
popf
imul
inc
icebp
ins
popf
pushf
add
mov
mov
sbb
and
add
or
js
push
cld
jmp
adc
adc
out
mov
sub
(bad)
scas
adc
inc
cmp
xchg
jp
inc
xchg
xchg
ins
mov
pushf
or
into
push
add
push
ds
fimul
cmps
loope
es
fcom
pop
call
mov
sub
mov
(bad)
inc
mov
fisubr
sbb
add
and
int3
xchg
jne
repnz
push
jg
cmp
xor
add
shr
ret
inc
mov
push
xlat
push
adc
stc
mov
cwde
push
loopne
pop
xchg
sub
adc
ja
add
xchg
push
lds
mov
imul
sbb
lods
push
scas
cmp
mov
sar
test
adc
jmp
icebp
xchg
or
out
push
icebp
or
gs
sbb
fmul
aas
push
xchg
pop
inc
xchg
clc
and
pop
mov
sar
retf
push
icebp
fisttp
(bad)
push
fnstenv
dec
adc
imul
outs
imul
xor
shl
je
and
(bad)
mov
push
xor
and
lock
cmp
lods
inc
out
dec
pop
rcl
pop
inc
lods
shl
cld
push
out
push
lea
rol
mov
scas
add
fsub
call
inc
stc
mov
pop
mov
inc
add
imul
xor
test
pop
in
enter
pop
(bad)
push
js
push
sub
(bad)
xlat
movs
pop
icebp
scas
(bad)
mov
das
popf
inc
jl
mov
pop
loopne
jl
push
cli
nop
fld
jne
or
mov
mov
or
inc
push
or
jl
jbe
inc
fwait
adc
loope
lahf
jno
mov
rol
jecxz
sar
mov
jp
adc
dec
cli
ret
retf
xor
cmp
add
call
std
or
pop
mov
out
and
clc
dec
std
out
mov
and
dec
and
into
pop
div
push
xchg
das
jmp
push
out
inc
lea
xor
pop
adc
shl
pop
and
popf
(bad)
and
mov
push
call
ss
rol
sbb
or
mov
cld
mov
cmps
mov
mov
ins
or
call
je
ins
in
sbb
fcmovnb
cdq
add
add
int3
icebp
and
jge
popf
(bad)
and
jle
or
xchg
inc
dec
rcr
(bad)
outs
ret
inc
in
arpl
popf
call
jae
(bad)
mov
cmps
loope
and
int
adc
(bad)
je
(bad)
push
stc
or
test
sub
rol
imul
pop
in
xor
sub
ficomp
adc
shr
xor
jecxz
dec
leave
sub
idiv
or
scas
lds
xor
sub
cmp
jl
inc
ret
and
mov
cmp
xor
cmp
pushf
adc
sbb
test
and
sbb
xchg
mov
mov
test
imul
pop
ds
out
dec
test
sub
pop
imul
int
dec
sar
sar
add
or
or
adc
mov
cmp
xchg
daa
fmul
xor
cs
sbb
jp
inc
xor
rcl
popf
mov
lock
shr
xor
shr
sbb
mov
iret
outs
mov
mov
push
test
or
xchg
mov
lds
pop
mov
fisttp
fild
mov
sub
fwait
jg
adc
jns
xor
cmc
movs
out
jle
ss
movs
push
dec
pop
add
gs
out
lds
mov
(bad)
jmp
xlat
mov
inc
aaa
push
(bad)
jae
mov
not
movs
(bad)
into
popf
mov
mul
sub
mov
add
ja
into
bound
scas
inc
cmp
and
pop
cs
std
mov
call
jae
or
ja
imul
dec
enter
rol
(bad)
mov
imul
rep
dec
xlat
mov
stos
cmp
(bad)
cwde
jb
in
cmp
ficom
mov
out
push
push
pop
inc
cmp
scas
mov
sub
or
sahf
cmp
pop
shr
outs
jg
pop
add
test
pop
push
in
jge
sub
jno
leave
ficomp
frstor
loope
sbb
xor
jb
je
movs
outs
loop
jp
sub
lods
(bad)
imul
(bad)
push
lock
jne
push
dec
cli
sub
shl
jmp
stos
xor
aaa
outs
fmul
clc
jo
cs
lods
in
(bad)
test
sub
inc
push
in
test
sti
cdq
pusha
cmps
xlat
mov
jmp
inc
mov
cmps
push
pop
adc
cmc
test
adc
xor
int
sub
jp
xor
dec
or
sub
sar
imul
fadd
fld
dec
xchg
std
cdq
sti
dec
(bad)
icebp
xor
adc
imul
xor
or
or
lods
daa
sar
dec
arpl
pop
repz
(bad)
imul
xlat
popf
pusha
inc
and
popa
aam
rol
scas
mov
ds
ins
lock
repz
gs
push
ins
cmp
or
xor
out
mov
mov
popa
add
test
iret
lahf
pusha
and
fwait
mov
in
outs
add
lods
scas
add
xchg
and
push
repnz
(bad)
fild
jo
sub
jae
jnp
jge
jo
xlat
mov
int
push
(bad)
jecxz
mov
out
xchg
inc
push
inc
imul
sbb
xchg
clc
mov
mov
add
cmp
adc
cmp
push
arpl
in
std
out
ins
xchg
dec
loop
ins
dec
icebp
pop
(bad)
and
dec
jno
fucomi
push
mov
add
sub
or
hlt
sub
(bad)
ins
retf
xchg
test
stc
inc
fstp
sub
push
jae
or
pop
xchg
or
xor
jb
sub
test
jmp
movs
call
jns
sbb
movs
jmp
ja
cmps
cmps
mov
test
aaa
add
sbb
xchg
sub
mov
xchg
inc
mov
jbe
pop
adc
adc
pop
nop
enter
(bad)
mov
fcomi
fwait
push
pop
adc
mov
and
xchg
stc
cmps
mov
add
aas
push
pop
sbb
push
mov
sbb
ror
in
aam
sub
jb
das
inc
jnp
pop
adc
out
sub
fsubr
cmp
mov
mov
mov
cmp
pop
(bad)
xor
mov
mov
and
jmp
and
hlt
cdq
shr
scas
inc
mov
mov
daa
and
repnz
sti
inc
dec
repz
jb
aad
scas
push
and
sbb
or
or
aad
(bad)
popa
stc
addr16
and
push
not
sub
sbb
scas
xor
mov
aad
test
xor
jb
jp
dec
mov
clc
dec
xor
test
jo
scas
add
or
xchg
fbld
mov
add
add
das
xchg
clc
stc
or
push
push
jp
sti
addr16
and
call
mov
movs
cli
jle
arpl
mov
repz
add
ds
and
sbb
jbe
push
lds
icebp
adc
mov
sbb
mov
inc
sub
imul
inc
fsubr
adc
mov
(bad)
and
repz
xor
aas
(bad)
sbb
jne
lods
and
mov
pop
pop
and
hlt
add
push
push
adc
imul
cmp
loop
repnz
sub
jmp
xor
or
pop
pop
jbe
cli
loopne
(bad)
sub
aad
std
daa
pop
ins
jmp
mov
js
sub
push
rcl
mov
add
retf
in
jmp
movs
adc
or
inc
push
daa
add
out
push
in
aad
sahf
sub
xor
retf
jmp
cmp
adc
sub
pop
pop
pushf
mov
aaa
and
ds
add
mov
jmp
xor
aad
pop
arpl
fadd
inc
in
cmp
mov
or
or
dec
je
jns
adc
call
push
or
push
or
sbb
add
cli
sub
cmc
pop
enter
(bad)
mov
lods
dec
push
or
pop
fnstsw
push
push
cmp
cmc
or
mov
jle
inc
adc
and
stc
inc
in
sub
inc
mov
jo
into
je
retf
shl
xor
sub
ret
dec
mov
enter
shl
test
push
mov
sbb
adc
xor
xchg
inc
mov
sti
fisub
dec
dec
jg
xor
xchg
lods
pop
popa
mov
sbb
loop
sub
outs
add
mov
mov
dec
mov
dec
push
xchg
(bad)
out
sbb
mov
iret
bound
rcr
cmp
inc
imul
cmp
mov
mov
pop
enter
mul
ficom
dec
shl
xor
gs
(bad)
cli
js
cmp
sbb
push
and
in
push
cdq
stos
fcmovb
mov
mov
imul
xchg
inc
cmps
ret
arpl
jae
in
test
add
loopne
cmps
fdivr
or
sub
lds
inc
jmp
pop
das
shr
sbb
js
mov
inc
dec
les
ret
(bad)
push
jb
push
mov
push
aad
sub
xchg
sub
jae
enter
icebp
ror
xchg
pop
mov
jno
cmp
fcmovu
popf
mov
sbb
add
call
ret
mov
mov
or
cmps
daa
mov
mov
xor
adc
pop
fnstcw
test
stc
arpl
jmp
dec
jle
aad
outs
and
jmp
dec
(bad)
sbb
pop
test
cwde
pop
xor
mov
je
jecxz
pop
inc
fnstenv
shl
mov
mov
repz
ret
leave
jb
push
cmp
pop
adc
dec
rep
je
inc
add
mov
push
sub
mov
outs
imul
mov
rcl
pop
sti
add
mov
cmp
or
fld
fcom
xlat
stc
mov
cld
fist
popa
movs
add
or
add
mov
push
movs
push
lock
fild
(bad)
fsubr
pop
stos
push
pop
mov
adc
jmp
mov
mov
inc
outs
(bad)
mov
jge
jmp
sub
scas
add
out
scas
and
and
push
test
pop
jle
nop
stos
dec
xor
and
jl
retf
retf
sub
jmp
jl
xlat
aaa
cli
jecxz
repz
xor
mov
enter
rol
mov
dec
inc
addr16
mov
jle
and
mov
pop
bswap
cli
cld
imul
aas
sub
or
fsub
inc
sub
mov
jbe
dec
(bad)
(bad)
sbb
or
leave
stc
mov
addr16
shl
mov
in
in
pop
xchg
or
scas
and
sti
scas
lds
lea
push
and
xor
jge
fist
sub
outs
mov
mul
jno
and
aas
rcr
shl
je
push
ror
icebp
repnz
sub
scas
inc
dec
outs
fbld
test
mov
push
(bad)
xor
mov
jbe
add
mov
aas
scas
lahf
cmc
ret
cs
mov
xor
(bad)
sub
jb
cdq
push
xchg
or
or
out
nop
dec
adc
push
push
add
pop
jnp
mov
in
xor
ds
repz
imul
inc
arpl
out
xchg
add
ja
and
push
fsub
xor
adc
daa
mov
dec
inc
aaa
xabort
int
adc
sbb
data16
mov
jo
add
test
mov
push
and
dec
dec
mov
shl
cmp
stc
ja
add
jge
cmp
mov
mov
retf
sahf
xor
jmp
aad
xor
rcr
and
push
icebp
scas
xor
sub
pop
in
pop
pusha
inc
mov
in
cmp
dec
dec
cwde
push
or
and
jmp
inc
mov
sbb
aaa
xchg
sti
popa
loop
repz
jecxz
mov
ret
rcl
push
add
xchg
pop
or
mov
inc
cmp
aas
jl
nop
xor
test
in
repz
xchg
test
add
or
je
ins
pop
cmp
les
scas
shl
in
cmp
mov
cmps
add
add
xor
mov
adc
mov
shl
loop
call
(bad)
jp
out
and
clc
push
push
xchg
xlat
mov
inc
div
dec
adc
dec
push
adc
mov
(bad)
dec
and
mov
adc
mov
ret
aas
rol
cmps
addr16
jno
mov
loop
adc
mov
add
mov
mov
scas
test
daa
inc
repnz
int3
mov
xchg
jno
ins
mov
inc
cmp
fwait
pop
aam
fidiv
and
and
push
push
push
nop
xchg
jmp
mov
cli
daa
shr
push
push
test
sub
or
adc
inc
push
push
xor
call
or
in
push
enter
mov
push
dec
add
inc
dec
popf
gs
gs
mov
mov
jnp
xor
sub
mov
push
jno
mov
fmul
adc
dec
sti
stos
retf
aam
inc
iret
mov
fstp
test
and
sbb
xchg
ds
cmp
push
and
cmc
ficomp
scas
aad
fs
idiv
mov
push
cmc
adc
mov
ror
adc
addr16
enter
pmaxsw
push
icebp
movs
push
sbb
cmp
ja
push
push
das
mov
and
jo
out
xor
mov
cmp
xlat
jnp
sbb
dec
mov
loope
(bad)
cli
out
xor
pusha
into
sbb
fmul
mov
or
ja
push
and
dec
or
fwait
in
mov
jno
ret
add
scas
rcr
add
inc
cmp
test
(bad)
mov
inc
imul
xchg
in
push
xor
xchg
(bad)
mov
jno
sub
dec
shr
sti
out
pop
push
jg
inc
dec
cmps
ret
and
sub
dec
cmp
addr16
loop
ret
mov
ins
test
pushf
xor
inc
hlt
and
int
bound
adc
ror
les
sub
(bad)
jns
xor
fcomip
or
(bad)
call
aas
xor
jmp
in
adc
test
jns
xor
mov
cld
loop
add
je
sar
test
or
(bad)
inc
push
pop
rcr
mov
mov
xchg
dec
pop
push
pop
inc
mov
or
dec
or
retf
push
clc
push
xchg
stc
add
sbb
dec
sbb
push
cmp
pop
mov
daa
cmp
ja
jmp
mov
lahf
popa
lods
mov
mov
inc
bnd
loope
cmp
xor
into
lods
jmp
sub
or
mov
into
cmp
jp
ret
adc
ins
outs
(bad)
call
dec
scas
pop
sahf
xchg
sti
add
add
xor
jno
or
call
std
inc
and
(bad)
in
sti
or
aam
and
pop
pop
xchg
mov
xchg
mov
scas
dec
sbb
mov
adc
bnd
cmc
xor
push
xchg
nop
scas
outs
jo
cmp
push
addr16
sti
cmp
adc
(bad)
mov
repz
mov
or
push
cmp
hlt
es
mov
adc
push
sar
mov
mov
cmp
fs
fisttp
sahf
sti
into
dec
jp
iret
into
out
lods
inc
fwait
or
mov
sahf
ret
lods
sub
mov
test
pusha
jle
je
xchg
popf
cdq
pop
out
(bad)
loopne
sub
adc
ds
add
and
push
repnz
scas
in
add
xchg
inc
fisttp
iret
sub
pop
iret
mov
ficomp
push
cmp
call
adc
adc
pop
out
mov
mov
imul
loope
in
sub
push
adc
mov
das
ret
lock
shl
inc
sbb
(bad)
cdq
mov
loopne
fisubr
shr
pop
xchg
(bad)
sub
and
shl
mov
div
lods
rcl
sbb
aam
mov
data16
adc
pop
sub
(bad)
push
ss
push
add
jecxz
movs
inc
cmc
mov
mov
sub
mov
mov
or
int3
loopne
in
(bad)
es
(bad)
je
cmc
aad
movs
pop
enter
mov
mov
sbb
mov
inc
inc
sti
fdivrp
jnp
or
in
mov
mov
pop
jns
retf
jmp
fisub
retf
cwde
ds
cmp
mov
das
mov
sbb
sub
js
aad
ret
rcr
mov
and
sub
jb
nop
sub
sbb
pop
aas
mov
es
or
test
outs
and
mov
enter
cmovbe
shl
inc
out
sub
sbb
mov
test
inc
ds
int
push
sti
(bad)
out
xor
ss
hlt
loope
pop
cli
jo
inc
sbb
adc
mov
mov
ds
sub
add
fdiv
dec
dec
mov
jmp
push
or
dec
out
add
pop
push
mov
ja
data16
mov
std
cmp
cwde
ds
clc
and
pusha
mov
stos
movs
arpl
ja
adc
test
cmps
mov
mov
sbb
or
sub
and
push
adc
icebp
aaa
or
lds
dec
xchg
scas
loope
fsub
je
pop
xor
cmps
lea
ins
and
fist
outs
and
in
lahf
mov
mov
movs
nop
push
sub
ins
fwait
shl
sbb
dec
fstp
add
inc
adc
xchg
jae
pop
pop
sub
xchg
pusha
xor
or
adc
pop
js
retf
cmc
ret
push
ror
bndldx
mov
inc
jmp
(bad)
jne
sar
sti
sar
cmp
nop
inc
in
mov
cmp
out
xchg
adc
sub
and
std
mov
xchg
rcr
aad
pop
ficom
pop
or
pushf
test
ficom
dec
jecxz
out
scas
or
call
push
std
push
les
adc
(bad)
sub
add
shr
push
pop
cmp
xchg
ss
cmc
cld
loop
cmps
cmp
mov
aam
mov
movs
xlat
dec
mov
rcr
adc
xchg
sub
imul
xor
rcl
gs
call
dec
mov
or
mov
into
in
mul
out
frstor
rol
mov
cmp
(bad)
and
adc
in
sbb
loope
jne
cli
lock
sbb
les
mov
sub
outs
adc
inc
mov
aam
xor
mov
cmp
jbe
js
mov
test
cmps
adc
(bad)
and
inc
hlt
xchg
jmp
inc
rcr
and
cmp
test
mov
mul
mov
test
into
cmp
xchg
add
sub
mov
add
sub
lahf
sbb
in
shl
scas
inc
mov
dec
xchg
and
pop
and
sub
dec
inc
mov
push
int
ds
sbb
fcomp
pushf
test
push
add
jle
inc
(bad)
cwde
stc
loop
out
jo
and
cld
movs
mov
mov
and
pop
pop
cli
lods
add
or
test
cmp
fisttp
jle
xchg
pop
dec
jl
mov
sar
cmp
scas
lea
aad
mov
rcr
ja
jnp
jecxz
lea
iret
xlat
sbb
mov
mov
or
pusha
push
je
popf
mov
mov
dec
sbb
jp
repz
mov
inc
pop
and
mov
mov
sbb
icebp
mov
retf
and
mov
jmp
rcr
adc
jmp
pop
push
mov
in
mov
jae
jb
xchg
stos
(bad)
fdivr
fwait
cmc
test
xchg
mov
push
lods
ror
nop
xchg
xor
je
inc
mov
jae
bound
jb
in
outs
sti
and
scas
clc
dec
stos
fstp
dec
jno
loope
inc
cs
enter
jg
loope
int3
jp
pusha
leave
xchg
addr16
out
stc
out
inc
jns
int3
test
inc
(bad)
mov
aaa
or
push
sar
int
xchg
and
push
push
sub
aam
cmp
cmp
pop
adc
cmp
ret
nop
adc
(bad)
retf
fnstenv
(bad)
dec
sbb
in
call
(bad)
hlt
and
and
jmp
retf
and
test
fdivr
inc
or
les
cmp
dec
aas
ret
xor
push
or
or
outs
cmp
pop
sub
stos
inc
fimul
fbld
push
pop
(bad)
lahf
test
gs
inc
arpl
jnp
dec
push
dec
push
aas
mov
jne
repz
das
or
psubq
stc
out
outs
xchg
and
pop
push
mov
jbe
lods
xchg
push
leave
dec
mov
fnstenv
fsubr
in
fnstsw
xchg
xor
jmp
pusha
jge
xor
enter
xchg
cmps
jbe
sbb
(bad)
in
and
sbb
test
ins
mov
ret
pop
(bad)
xchg
mov
xchg
imul
ftst
push
lods
cmp
ss
mov
pop
out
dec
aas
sub
cmp
xor
inc
mov
sar
inc
or
inc
sub
jecxz
(bad)
fcmovu
retf
out
(bad)
shl
cwde
or
mov
mov
dec
adc
or
sbb
add
jp
call
fst
mov
add
jbe
fldcw
jb
fcom
hlt
mov
mov
(bad)
mov
jl
shr
(bad)
pause
out
jno
imul
test
or
sbb
pusha
dec
inc
retf
jnp
cdq
xor
cmps
xchg
pushf
sub
xchg
es
inc
inc
xor
lea
jmp
movs
mov
jge
xor
sbb
(bad)
scas
xor
or
imul
fisttp
loop
loope
cmp
shr
push
movs
inc
and
cmp
mov
das
mov
xor
in
inc
(bad)
out
loope
ficom
ror
and
xchg
aas
push
mov
jo
fistp
jbe
sub
jbe
pushf
cmp
loop
mov
addr16
ror
test
pusha
mov
sbb
int3
xor
outs
sub
cmps
aad
mov
icebp
stc
jg
fisttp
cdq
enter
sub
shl
xor
jmp
aad
loopne
ins
push
xchg
jne
mov
sub
add
lahf
test
(bad)
movs
jae
inc
lods
push
mov
sub
push
mov
jo
outs
or
imul
cmp
and
mov
stos
ret
faddp
dec
mov
stc
pushf
cmp
push
pop
retf
mov
pop
cmp
pop
inc
cmp
push
xlat
mov
dec
jbe
movs
push
pop
adc
pop
in
push
mov
dec
dec
iret
jmp
out
rcr
xchg
shl
sub
push
icebp
daa
sbb
cmp
lea
dec
addr16
out
inc
loopne
repz
add
dec
add
jmp
(bad)
mov
loop
pop
sub
ins
xor
inc
add
mov
ds
pop
int
add
(bad)
xlat
jmp
push
xchg
movs
call
neg
sub
enter
mov
mov
xchg
push
inc
jg
hlt
jmp
sub
cmps
jmp
lods
popf
js
cmp
arpl
mov
xchg
out
dec
out
jnp
jns
inc
pop
out
sbb
cmp
xchg
sub
lods
mov
or
cmp
mov
jmp
outs
fwait
and
out
sub
mov
xor
je
xchg
movs
inc
ds
mov
ret
pop
fsubr
lahf
leave
enter
or
mov
imul
and
sbb
jne
js
cmp
cmp
loope
out
cmp
lahf
jo
inc
mov
mov
lods
nop
jmp
fdiv
lahf
popa
les
and
jg
sub
pop
lods
(bad)
inc
cwde
dec
shl
pusha
xchg
ret
xchg
mov
cmp
and
scas
adc
mov
sub
movhps
sbb
addr16
jecxz
(bad)
mov
mov
in
imul
out
jmp
push
and
xchg
movs
lahf
inc
loop
sbb
jnp
retf
ja
push
add
pusha
pop
pop
jb
xchg
push
xlat
push
outs
mov
mov
mov
pop
repz
jmp
xlat
add
and
push
pop
cdq
push
enter
clc
dec
in
das
pusha
(bad)
(bad)
push
push
and
xchg
adc
dec
sbb
mov
gs
lods
pop
retf
fdivr
mov
sbb
mov
div
ins
jb
add
rcr
data16
jbe
ds
lods
cmc
or
sbb
shr
inc
scas
test
clc
inc
pushf
out
jg
xchg
xor
add
xchg
iret
clc
loope
and
leave
shr
aad
loopne
sbb
lods
mov
pop
call
cmp
icebp
push
test
push
add
clc
js
push
pushf
cwde
fist
cdq
xor
dec
popa
sbb
pop
xchg
dec
es
mov
push
fwait
enter
dec
call
push
lods
cs
xor
jge
sub
sar
mov
iret
inc
xor
or
fistp
and
inc
pop
and
aam
mov
push
pop
xor
or
mov
mov
mov
dec
inc
push
jle
sub
movs
ja
adc
and
imul
imul
(bad)
adc
and
mov
pop
rcl
adc
jg
aad
sbb
xchg
(bad)
nop
gs
pop
add
stc
test
push
or
hlt
gs
push
in
adc
dec
enter
add
frstor
xchg
sub
inc
imul
daa
sbb
pop
addr16
addr16
mov
outs
xchg
repz
cmp
bound
ss
jecxz
add
jg
sahf
int3
dec
cmc
out
push
inc
leave
jl
test
stos
loop
cmp
and
sbb
pop
xor
lock
retf
inc
dec
jo
fs
stos
mov
or
test
cmp
pop
fcom
or
outs
daa
sbb
ds
sub
loope
dec
fld
sbb
pop
and
or
js
xor
outs
outs
xor
in
cmp
aaa
pop
imul
movs
or
ja
test
in
push
mov
sbb
dec
lahf
ret
pop
hlt
mov
mov
xchg
icebp
hlt
xchg
pop
pusha
xchg
dec
(bad)
mov
pop
cmp
add
repnz
nop
cdq
mov
stos
xor
cli
icebp
mov
imul
popf
xchg
movs
das
movs
adc
in
add
test
out
inc
xor
inc
or
or
loopne
test
inc
inc
pop
cmc
mov
and
mov
sahf
push
mov
pop
mov
sbb
xor
push
or
icebp
xchg
add
data16
jnp
rcl
jbe
test
les
es
mov
aas
mov
or
aaa
and
add
adc
push
push
mov
mov
mov
mov
sub
pop
push
push
jmp
inc
sbb
dec
jge
jmp
call
dec
jge
int
cmp
dec
imul
(bad)
pop
sbb
ins
dec
repnz
call
pushf
in
pop
cdq
sub
outs
cs
call
stos
sbb
aad
out
dec
jmp
test
std
loope
push
rol
les
test
pop
push
(bad)
xchg
das
jno
jo
adc
test
retf
retf
mov
dec
loop
jg
in
mov
data16
pop
stc
movs
add
mov
pop
aaa
sub
call
pop
cmp
sbb
mov
movs
in
out
add
retf
push
in
cmp
call
mov
jo
repnz
or
test
(bad)
test
mov
cld
mov
mov
lods
fldenv
jo
cmp
mov
sar
or
test
dec
sub
sbb
inc
xchg
xchg
test
pop
cmp
imul
mov
popa
(bad)
jmp
pop
lock
je
dec
(bad)
or
gs
sbb
jl
and
scas
js
sbb
jmp
mov
mov
ror
retf
jns
aaa
pop
fwait
lods
xor
xchg
xchg
mov
call
pop
add
in
stc
call
clc
fbstp
inc
rcl
(bad)
(bad)
xor
int3
jmp
sbb
(bad)
push
sbb
jl
bound
sub
sbb
mov
(bad)
mov
or
ret
cmp
jns
out
push
outs
sub
sti
pop
sub
inc
push
jle
call
repnz
add
movs
fs
and
cmp
call
arpl
mov
cwde
mov
push
mov
push
mov
and
repnz
add
pushf
inc
fisubr
mov
movs
mov
cld
dec
add
ret
mov
test
mov
or
xlat
scas
adc
movs
pop
mov
dec
xchg
jnp
nop
and
and
scas
jo
cld
clc
fwait
xchg
sbb
fucom
adc
into
outs
dec
repnz
cmps
cmp
fadd
jns
scas
xor
sbb
pop
sbb
mov
jno
jo
mov
cmp
arpl
clc
outs
je
cmp
push
sub
lahf
sub
dec
xlat
outs
loope
jne
xlat
sub
jg
inc
inc
mov
dec
cmps
sbb
test
repnz
pop
adc
out
loopne
ins
mov
push
cmp
and
push
jp
or
add
fwait
xchg
cld
rol
inc
xor
pushf
and
xor
aas
stc
push
xchg
inc
xchg
in
dec
bts
or
push
pop
daa
(bad)
icebp
movzx
xchg
push
jecxz
cdq
push
and
adc
stos
not
xor
lods
mov
push
int
aaa
and
push
push
ins
(bad)
push
ret
sbb
int
jle
mov
pop
inc
scas
in
cmps
mov
das
jmp
fadd
mov
mov
shl
fld
daa
xor
fs
xchg
jae
cmc
dec
sub
sub
push
(bad)
div
int3
loopne
pop
jg
xchg
fmul
jb
sbb
dec
mov
loop
fcomp
pop
test
push
sbb
sbb
scas
mov
lock
dec
stos
int3
ret
sub
icebp
clc
dec
outs
jne
or
and
sbb
jp
adc
fnstsw
lock
or
xor
jmp
xchg
fs
fcom
xor
adc
loop
adc
lods
mov
mov
cmps
je
les
pop
std
xlat
mov
or
popa
retf
inc
sbb
adc
pop
mov
cs
sub
mov
pop
or
nop
xor
cmps
and
push
xchg
jbe
cmp
dec
cmps
pop
imul
push
xor
cdq
mov
or
jg
out
add
out
and
xchg
mov
inc
adc
pop
stos
jnp
jge
shl
cdq
outs
sbb
push
jne
xchg
jmp
push
xchg
add
push
sahf
pop
add
and
adc
cmps
sub
push
mov
fiadd
shl
shl
or
movs
repnz
loope
lds
xor
(bad)
cmp
mov
lock
lds
fs
lods
cmc
pop
lea
xor
cmp
inc
icebp
sbb
and
inc
nop
cmp
fsub
inc
pop
shl
jne
jl
or
inc
push
xchg
xor
jae
cdq
cmp
mov
stos
scas
cmps
out
mul
rcr
fs
jp
sbb
push
cmp
fadd
iret
or
imul
add
popa
jae
and
test
push
sbb
popa
es
adc
push
mov
xchg
pop
push
dec
pop
dec
movs
mov
xor
into
lahf
aam
arpl
mov
push
mov
jge
push
sahf
jns
fwait
push
dec
lods
and
jbe
ret
in
or
lods
mov
mov
out
mov
mov
jmp
mov
sbb
arpl
scas
inc
stos
xchg
inc
das
inc
enter
fs
cli
scas
adc
pusha
xor
adc
or
call
mov
repnz
enter
movs
test
or
xor
jo
cmp
and
aas
mov
outs
rcr
cmc
nop
mov
js
mov
mov
jecxz
pop
cld
or
push
cmp
ja
addr16
mov
sbb
xchg
lods
xlat
inc
push
icebp
or
stc
push
fistp
push
pop
and
int3
ficomp
lahf
and
aad
mov
aaa
ins
and
out
and
jecxz
xor
inc
cmp
push
ret
cld
cmp
rol
or
jle
push
frstor
push
add
cmp
scas
loopne
mov
mov
mov
pop
in
(bad)
mov
adc
dec
add
pop
cdq
sti
and
and
outs
jl
fmulp
pop
fbstp
dec
mov
sti
mov
inc
push
sti
push
dec
(bad)
jg
retf
push
xchg
bound
mov
retf
shl
(bad)
je
cmp
out
repz
dec
jbe
inc
mov
cmp
sbb
mov
loope
cmp
int3
push
das
movs
pop
mov
(bad)
std
mov
xchg
(bad)
or
repnz
xchg
fs
cmps
pop
pop
scas
sbb
dec
push
(bad)
xchg
call
mov
push
out
lahf
loop
push
jae
mov
adc
in
adc
cmp
test
push
ret
cmp
fdiv
xor
mov
xchg
ja
mov
ss
lds
hlt
cmp
call
nop
(bad)
pop
ror
loope
xor
pusha
fld
and
(bad)
es
dec
sbb
cmp
test
popa
cs
mov
mov
cmc
lods
pop
sub
jae
push
jo
fiadd
int
ret
mov
sub
out
repz
inc
cmp
sub
leave
in
cs
sub
std
xchg
cmps
cmp
pop
pop
lahf
adc
das
jo
rol
pusha
out
call
inc
push
daa
or
sub
jae
lods
mov
fcomi
lds
daa
icebp
dec
adc
dec
mov
mov
sbb
xchg
pop
cs
out
(bad)
jo
add
push
je
xor
leave
scas
push
adc
(bad)
and
add
scas
mov
stos
sahf
cmp
jmp
jmp
stos
es
xchg
(bad)
pushf
pushf
jo
sub
adc
fadd
popf
sub
sub
or
out
push
jo
mov
aad
push
push
or
mov
jae
sbb
or
xor
fbld
pop
push
mov
xor
pop
fs
xor
pusha
push
popf
xor
mov
xchg
mov
push
repz
and
push
adc
xchg
test
cmp
add
add
inc
cmp
mov
mov
iret
scas
push
loope
outs
shr
or
fisub
ss
call
and
inc
jo
hlt
jnp
cmc
dec
push
pusha
pop
push
scas
adc
fisttp
jecxz
push
push
dec
(bad)
(bad)
pusha
inc
cli
sub
jl
sbb
jecxz
movs
(bad)
mov
mov
xor
push
pop
and
and
in
jo
retf
xchg
hlt
vsqrtps
cmp
jne
xchg
out
pop
adc
xchg
bswap
lods
adc
mov
xor
pop
popf
lods
jae
pushf
loope
xor
mov
sbb
sbb
ja
aaa
push
and
je
cmc
iret
dec
(bad)
jl
dec
(bad)
pop
xchg
mov
inc
xor
cmp
sub
sub
(bad)
ror
pop
or
je
(bad)
xchg
sbb
cmp
daa
add
inc
in
cmp
aas
sbb
dec
cmc
jae
pop
inc
cmps
dec
xor
rcl
dec
in
inc
push
jge
inc
mov
mov
(bad)
arpl
and
sbb
or
dec
mov
xchg
xor
xchg
popf
nop
dec
std
lods
fld
(bad)
in
aaa
(bad)
sti
ficomp
mov
aam
aas
jns
xchg
xor
jmp
sbb
mov
(bad)
mov
bound
push
cmp
loope
push
xor
dec
rcl
aaa
sbb
lds
out
xchg
rcl
and
push
ret
sbb
and
ins
mov
sbb
add
xor
add
pop
jb
adc
int
mov
fdiv
outs
pop
sub
and
push
xchg
in
(bad)
sub
add
repnz
push
mov
(bad)
jnp
pop
dec
ss
pusha
adc
jno
lahf
add
mov
push
xor
test
sbb
jmp
xchg
iret
mov
popf
out
lds
(bad)
mov
ins
mov
es
sar
outs
jb
sub
fcom
(bad)
shl
(bad)
daa
mov
icebp
int3
push
lods
test
pop
adc
jge
retf
push
jno
add
pop
mov
movs
cdq
sbb
test
imul
das
push
cli
icebp
dec
packsswb
fs
cdq
fcmovu
dec
iret
pop
add
or
dec
in
rol
mov
lea
cli
mov
and
pop
call
or
leave
and
jmp
pop
dec
or
jle
fisub
leave
neg
pop
int
jl
push
pop
cmp
retf
retf
int
ret
push
mov
ins
lea
test
mov
push
mov
stos
add
bound
(bad)
clc
cmps
test
push
fisubr
cdq
shl
sbb
xor
sub
sbb
push
mov
dec
mov
daa
stos
(bad)
call
xor
ins
leave
pop
shr
inc
test
loope
pushf
inc
add
cmp
adc
push
mov
das
inc
out
push
pop
outs
mov
sub
shl
mov
xor
adc
sbb
or
jl
cmc
cli
xor
adc
mov
pop
(bad)
out
js
loop
jae
or
fild
add
cdq
mov
sub
fmul
aaa
mov
in
inc
test
push
cmp
xchg
xchg
sbb
test
arpl
and
aas
jbe
mov
xchg
cwde
fbld
rol
push
add
mov
cdq
xchg
add
int
or
ins
daa
mov
cs
or
push
cbw
and
sbb
addr16
pop
icebp
xor
and
rcl
mov
jmp
jns
push
movaps
bound
lods
jecxz
mov
in
(bad)
fst
retf
push
pushf
mov
fcom
inc
repnz
mov
xor
jmp
xchg
mov
dec
pop
bound
jl
fsincos
xchg
mov
movs
dec
pop
ficom
jmp
call
and
int
push
inc
mov
adc
or
fadd
int
sub
outs
aam
and
mov
dec
mul
repz
stc
arpl
pop
movs
in
(bad)
add
push
pop
xchg
aam
clc
bound
and
mov
cli
ja
leave
pushf
xchg
push
test
shl
daa
mov
xchg
jmp
test
mov
sbb
mov
xchg
mov
imul
fnstenv
in
jl
test
aas
mov
cs
dec
popf
(bad)
sahf
hlt
imul
inc
add
hlt
add
lock
stos
lea
mov
push
std
sub
inc
addr16
sbb
sub
push
leave
add
jle
mov
test
cs
push
xor
jmp
sbb
test
mov
mov
jae
test
test
push
or
jmp
mov
mov
sub
jb
test
jl
xchg
push
loopne
cmps
fcmovbe
out
mov
mov
jnp
xchg
and
mov
aam
xor
in
or
mov
test
int3
xchg
mov
sbb
xor
lods
adc
lods
scas
xchg
loopne
iret
jns
ja
cmp
push
js
inc
inc
test
fsub
lods
leave
xchg
adc
(bad)
fcmovbe
mov
ficomp
mov
ins
sub
push
xchg
sub
enter
ja
mov
pop
and
imul
loopne
and
gs
lock
mov
shl
dec
fld
or
cdq
sbb
xchg
pushf
(bad)
and
call
xor
retf
mov
shr
movs
repz
aad
ret
jae
dec
and
std
adc
mov
jge
xchg
call
fistp
xchg
xchg
cmp
jmp
cmps
cmp
(bad)
push
aam
push
xlat
adc
jmp
cmp
dec
sti
scas
in
scas
call
xor
lods
adc
dec
xlat
push
mov
inc
mov
inc
repz
mov
out
mov
mov
mov
popf
shr
add
(bad)
and
icebp
popa
pusha
sub
scas
add
and
imul
aam
dec
or
lods
pop
fisubr
dec
adc
mov
fwait
jl
out
stos
pop
jo
lds
cmp
sub
push
xchg
or
sub
or
or
adc
dec
out
sub
add
mov
dec
mov
fild
fcmovne
mov
enter
aam
aas
push
mov
mov
test
sar
mov
cmp
jg
hlt
in
mov
jp
push
outs
inc
nop
fsubr
xchg
out
push
sbb
pushf
mov
inc
mov
xchg
mov
mov
aad
call
push
pusha
dec
hlt
shl
sbb
daa
cmp
jl
cmp
cmp
jecxz
and
cmc
mov
movs
push
or
push
cld
(bad)
ins
int
movs
pop
enter
cli
cmp
test
ret
jb
xor
nop
add
or
dec
enter
sub
rol
inc
lods
lea
in
ret
dec
fdivr
int
push
jg
mov
in
addr16
nop
sub
jns
jns
in
cmc
loope
adc
sbb
leave
add
pushf
(bad)
mov
dec
sbb
fucom
push
inc
test
add
call
les
add
arpl
(bad)
neg
add
jno
push
rcl
adc
jbe
adc
test
iret
pop
sbb
mov
(bad)
fdiv
imul
cmps
pop
or
ror
nop
mov
add
repnz
or
fdivr
fild
sbb
inc
inc
sbb
(bad)
cdq
pop
(bad)
test
int
lock
scas
lods
pop
dec
lea
inc
rcl
aad
mov
mov
shl
mul
ret
and
xor
push
fisttp
jns
dec
pop
mov
call
mov
mov
inc
in
ret
imul
rol
leave
mov
fnstcw
pop
out
icebp
mov
lock
stc
mov
in
rcr
xor
fnclex
xchg
in
dec
jge
(bad)
gs
pop
cmp
pop
retf
adc
lahf
push
ja
jg
add
stc
push
mov
pop
lahf
jmp
retf
jo
ja
push
push
inc
mov
lods
test
stos
or
aas
dec
out
mov
xchg
dec
call
scas
jae
icebp
sti
xor
push
sub
fistp
pop
scas
shl
dec
push
les
adc
stos
sub
cmp
or
ins
daa
push
sahf
adc
mov
outs
dec
sbb
push
or
adc
jp
retf
lea
sbb
mov
mov
fistp
ins
jo
cwde
retf
outs
cli
push
jns
push
xor
js
test
and
mov
les
push
adc
dec
pop
mov
ins
fadd
adc
jne
retf
outs
out
cmps
cmc
(bad)
repz
loope
loope
jmp
popf
sub
mov
push
fnstcw
inc
sti
in
xchg
mov
fimul
cmps
stos
arpl
stos
fwait
push
xor
pop
jge
cld
sub
mov
fistp
lea
out
add
loop
call
xchg
dec
mov
out
add
fst
and
in
repnz
retf
xchg
popa
lods
call
je
xchg
(bad)
paddsw
inc
in
outs
mov
xchg
cmp
and
out
and
js
into
sub
mov
cdq
iret
mov
sbb
mov
call
and
mov
enter
inc
adc
pop
arpl
or
retf
sub
ds
lock
mov
test
fiadd
ror
pop
pop
jge
mov
movs
je
and
mov
cmp
and
movs
xor
hlt
pop
lock
mov
das
dec
cmc
mov
push
jle
sbb
popa
in
inc
cmps
mov
cs
adc
mov
js
adc
pop
xchg
(bad)
cmc
push
dec
sbb
and
xor
xchg
or
inc
scas
or
retf
mov
push
xchg
sub
dec
push
add
(bad)
push
inc
xor
sti
and
mov
daa
cmp
mov
hlt
inc
mov
lea
ffreep
dec
test
ror
and
push
bound
dec
lahf
lea
in
and
jge
mov
pop
imul
loop
pushf
pop
sub
sub
out
cmp
lock
(bad)
jne
mov
fsubr
lds
pushf
add
out
movs
and
sbb
push
inc
cmp
(bad)
imul
in
dec
cs
or
call
js
xchg
scas
cmp
(bad)
scas
push
adc
add
clc
dec
aam
das
mov
std
cmp
pusha
shl
fwait
lahf
jne
xchg
xchg
test
and
(bad)
cdq
xchg
mov
lods
and
loopne
mov
adc
mov
int3
iret
jge
mov
xchg
mov
fist
nop
mov
pop
lods
and
jbe
hlt
outs
cdq
in
sti
outs
test
mov
mov
sbb
push
sti
mov
je
or
inc
adc
sbb
or
xchg
out
lahf
mov
add
xchg
mov
xor
inc
xor
mov
pushf
mov
fs
xchg
xlat
adc
fsub
push
mov
push
ficomp
or
dec
mov
sbb
push
inc
push
shr
rol
push
clc
test
xchg
or
xor
push
jl
cmp
sub
jmp
dec
jne
adc
jno
sub
xor
mov
mov
xchg
pop
jle
cmp
leave
push
inc
push
je
jno
enter
jl
push
cmc
pop
cmp
ret
dec
fst
and
cld
xor
fs
and
stc
out
pop
icebp
mov
mov
mov
sub
movs
icebp
std
xor
stos
jno
out
fs
cmps
sbb
mov
fs
aas
imul
cdq
xchg
mov
addr16
xchg
repz
popf
jo
dec
cld
push
inc
adc
push
sub
jae
(bad)
hlt
mov
xchg
pop
xchg
out
mov
jle
les
or
psraw
movs
(bad)
jmp
mov
jl
mov
(bad)
adc
pop
mov
push
movs
jle
into
xchg
pop
pop
sbb
or
pop
inc
stos
repz
in
mov
test
lds
mov
(bad)
sub
aam
ret
cmp
add
mov
sahf
sub
lahf
add
cmp
call
sahf
sbb
xchg
push
jmp
or
pop
out
dec
sub
xlat
mov
hlt
add
lods
aas
int
pop
pop
or
cmp
pop
mov
enter
xor
call
bound
add
mov
sahf
dec
pop
adc
or
inc
daa
cmps
pop
cmp
xchg
ror
xchg
mov
(bad)
sbb
dec
sub
lahf
xchg
arpl
enter
movs
fmul
jns
rol
ins
fldcw
out
das
push
lea
fsubp
cli
jns
loop
clc
cwde
and
mov
cmp
push
pop
sub
add
push
outs
or
sbb
push
pop
stos
fs
jmp
add
xor
mov
and
mov
sub
leave
cdq
mov
cmp
mov
xchg
fstp
sbb
xor
addr16
pop
push
lea
int3
data16
and
and
in
jg
mov
sub
sbb
xor
scas
retf
pop
and
sbb
pop
sbb
leave
push
enter
or
xchg
mov
sub
cmp
pusha
outs
mov
inc
mov
cmp
cld
mov
lock
icebp
push
mov
fs
cmp
xor
push
dec
sbb
cmp
ins
rcl
retf
push
mov
sub
mov
mov
fdiv
sub
and
ds
or
nop
rol
mov
nop
std
xor
inc
dec
mov
pop
xchg
cwde
sbb
cmp
dec
pop
ret
int3
cld
and
or
div
cdq
adc
pop
inc
jg
in
jmp
xchg
in
jl
push
std
mov
or
push
jmp
daa
repnz
mov
push
loope
ins
push
outs
ins
xor
inc
mov
jno
popf
cmp
repnz
rcr
push
ret
inc
jmp
cmp
add
push
xchg
ret
int3
stos
ret
mov
xchg
inc
lods
stc
add
dec
cmps
in
jno
fcmovb
push
cmp
cmps
sbb
popa
push
push
lock
mov
sbb
sub
dec
add
mov
or
in
ss
pop
leave
mov
jno
popf
pushf
cdq
rol
std
in
loope
jbe
and
xchg
mov
sbb
or
mov
fimul
jmp
push
add
push
inc
repz
frstor
sbb
sbb
scas
mov
movs
loopne
fwait
xchg
add
imul
mov
ins
gs
sar
jge
or
mov
fadd
dec
pop
(bad)
jmp
add
add
push
outs
ret
(bad)
pop
nop
int3
mov
bound
push
cmp
sub
ja
fs
and
mov
pop
push
jmp
jl
cli
mov
iret
dec
and
lods
push
pusha
cmps
sub
or
adc
adc
fcomip
ret
psrad
jl
and
lods
das
outs
(bad)
ins
jo
jmp
(bad)
lds
mov
add
shl
shl
mov
adc
adc
xor
test
xchg
xchg
fsub
(bad)
and
daa
or
add
(bad)
fcomp
idiv
dec
mov
ret
fistp
sti
cdq
sub
std
int
mul
retf
loop
(bad)
(bad)
adc
jge
and
push
xchg
pop
mov
jne
pop
jecxz
dec
cs
dec
dec
jnp
cli
(bad)
xlat
pop
cld
and
jns
jbe
movs
loopne
mov
lods
lods
mov
(bad)
aam
sbb
and
test
icebp
aaa
bound
inc
and
xchg
inc
push
and
jae
mov
xchg
xlat
pushf
cdq
fnstenv
ret
std
loop
rcr
call
sbb
mov
lea
(bad)
scas
(bad)
fisttp
aad
mov
mov
sbb
js
cmps
cs
push
mov
popf
(bad)
in
xlat
and
xchg
rcr
pop
fnstenv
imul
call
out
pop
fxch
adc
(bad)
mov
adc
xor
jecxz
(bad)
rcl
sub
fdiv
jae
sbb
xchg
adc
adc
jmp
leave
push
loop
xchg
inc
neg
das
jecxz
call
call
les
pop
jns
jge
xchg
pop
in
adc
cmp
pop
sub
repnz
xor
pop
inc
aad
jmp
add
dec
bound
adc
sub
sub
cmp
or
sahf
mov
pop
or
dec
retf
stos
pop
ins
icebp
sbb
add
fcmovnbe
xchg
mov
aas
mov
ins
jge
inc
pusha
xor
mov
fst
loope
imul
push
xor
in
inc
sbb
sbb
fnsave
in
inc
mov
nop
push
stos
push
fild
in
dec
aas
ret
ins
mov
xor
ds
mov
(bad)
or
fild
scas
or
cmp
stc
mov
leave
lock
fst
mov
adc
or
mov
mov
lods
inc
movs
mov
push
xor
push
(bad)
test
pop
jmp
cs
xchg
ficomp
jp
mov
xor
xchg
add
jns
mov
cmps
je
mov
cmps
jnp
ror
dec
push
and
stos
cmps
mov
loopne
add
(bad)
cmp
sub
xchg
test
xor
pop
inc
inc
call
adc
mov
fsub
addr16
pop
and
movs
scas
pushf
push
arpl
mov
mov
jl
cdq
int
mov
mov
push
ret
fs
lods
test
inc
sub
ror
mov
inc
imul
mov
mov
test
sbb
fistp
imul
div
jno
ficom
sub
jle
sub
stc
ins
std
data16
xchg
mov
idiv
jp
push
pop
cld
pop
iret
jnp
mov
pop
pop
in
or
pop
push
push
cmps
ss
out
push
pavgw
lods
out
lods
(bad)
clc
cmp
arpl
retf
aad
add
(bad)
or
sbb
lds
inc
ret
xchg
and
ins
sbb
sbb
js
mov
sub
arpl
sbb
push
mov
xchg
mov
cmp
ror
scas
lds
mov
stos
sbb
inc
push
add
test
loope
mov
xor
test
ds
dec
cmc
ins
xchg
jmp
cmp
js
stos
pop
add
scas
mov
xor
cdq
mov
jmp
dec
nop
lea
int3
ss
push
fild
mov
fndisi(8087
jmp
sub
jne
xchg
dec
je
cmc
mov
dec
rol
daa
(bad)
loope
retf
mov
rol
rcr
adc
cmp
dec
int
lock
ja
stc
fmulp
lods
pop
bound
push
fisttp
ds
xor
dec
adc
xchg
(bad)
sbb
lahf
or
mov
mov
push
mov
xchg
out
das
push
push
fisubr
shl
ret
sbb
retf
dec
fild
jge
shr
imul
cmc
jmp
mov
in
jle
xor
fwait
and
fdivrp
mov
xchg
lods
lods
repnz
mov
xchg
mov
pop
lock
sub
sub
fst
inc
aas
xor
fstp
popa
xor
xor
fdiv
jnp
adc
dec
shr
mov
sbb
bound
jo
icebp
xor
stos
mov
adc
cmc
lea
jnp
xchg
pop
fnstcw
jns
pop
cs
sbb
inc
xchg
mov
lahf
ja
pop
test
(bad)
jae
xor
loop
mov
sub
mov
addr16
ror
stos
mov
call
cld
and
dec
mov
dec
jb
sbb
call
loopne
mov
cmps
loop
mov
dec
test
inc
mov
ja
xchg
dec
inc
retf
inc
fadd
shl
push
cwde
xchg
add
adc
nop
faddp
inc
dec
inc
and
dec
aas
fiadd
(bad)
adc
aad
sub
pop
(bad)
hlt
ror
ins
pushf
pop
sbb
lods
dec
push
jo
add
imul
repnz
xchg
js
sti
pop
add
fldcw
mov
outs
mov
in
push
dec
push
push
pop
mov
pop
(bad)
lea
push
mov
push
and
sbb
mov
pop
(bad)
shr
mov
iret
xchg
cmps
sub
xchg
and
addr16
cmp
fdivr
sub
mov
mov
stos
adc
xor
aam
sub
push
push
mov
xchg
(bad)
mov
in
test
mov
adc
push
cmp
cmp
inc
adc
retf
ins
jl
ret
jo
push
cmc
movs
and
lock
xor
inc
cli
dec
movs
scas
mov
(bad)
sub
cwde
dec
(bad)
or
dec
sub
scas
jbe
pop
out
nop
push
ret
int3
xor
fidiv
cld
cmps
and
ror
nop
push
jmp
mov
xchg
push
dec
mov
mov
pop
in
(bad)
jns
xchg
sbb
icebp
inc
scas
or
jmp
es
xor
dec
dec
mov
cmp
(bad)
pop
xor
je
test
test
lds
and
in
xchg
jbe
or
xchg
outs
jl
(bad)
in
pop
sar
jne
mov
test
xor
sbb
xchg
mov
imul
dec
mov
jge
jne
add
int3
and
cmp
pop
inc
xchg
push
push
(bad)
jno
in
and
mov
pop
mov
arpl
ret
and
rcl
addr16
xor
cmp
inc
movs
sbb
ins
mov
mov
or
sbb
add
ror
lods
scas
xchg
imul
sar
push
(bad)
fs
sub
pop
scas
fst
cmp
es
pop
inc
push
and
sub
addr16
in
or
mov
jns
pusha
dec
sbb
leave
fimul
ficomp
adc
test
or
push
sub
push
ja
pop
cmp
sub
pop
(bad)
and
popf
scas
enter
fldenv
sub
test
add
enter
dec
in
sbb
sti
dec
outs
xchg
ret
loop
jo
or
iret
inc
int3
push
stos
xchg
fbld
dec
aas
popa
or
jge
mov
fld
inc
xchg
bound
rol
pop
mov
gs
js
mov
dec
and
call
jne
sub
push
(bad)
xor
xchg
mov
ss
xchg
dec
shl
fldcw
mov
inc
in
pop
dec
out
add
xchg
jge
retf
xor
test
fist
add
sub
push
add
mov
adc
aam
icebp
cmp
and
inc
imul
mov
je
cwde
ds
scas
xchg
xchg
outs
and
pop
repz
ds
push
rcl
mov
jl
add
fidivr
call
mov
mov
test
dec
neg
out
and
or
or
cmp
xchg
mov
cmps
push
push
fild
inc
adc
push
ret
or
push
pop
or
jne
jl
xor
fsubr
sub
loope
das
push
mov
enter
pusha
cdq
jbe
xor
cmp
(bad)
popa
jno
leave
(bad)
jnp
rcl
jmp
inc
out
cmp
sbb
popf
loopne
outs
adc
mov
jg
les
out
cmps
in
xor
mov
mov
cwde
sub
jmp
sbb
xor
dec
iret
xor
xchg
movs
or
xor
(bad)
mov
sub
pusha
mov
dec
inc
cdq
push
or
lods
test
imul
ja
(bad)
mul
mov
mov
ins
inc
std
mov
mov
repz
lods
retf
add
mov
jne
fidivr
or
repnz
call
(bad)
arpl
xchg
nop
cwde
mov
mov
push
icebp
loop
or
xor
(bad)
jg
sub
shr
(bad)
retf
push
dec
mov
pop
xor
push
pop
push
pop
sub
dec
mov
cdq
and
stos
mov
inc
ja
adc
and
out
not
sub
sahf
aas
mov
dec
pop
cmps
push
sub
inc
stos
stc
mov
xchg
push
sahf
cmps
jecxz
movs
jge
fnop
and
popf
shl
adc
fdivr
jge
ja
xor
mov
and
mov
sahf
into
push
pop
cmp
jmp
inc
ss
mov
xor
ja
ret
inc
arpl
mov
add
(bad)
sti
aam
int
fld
sbb
or
jmp
mov
mov
repnz
or
sbb
or
loope
mov
sub
pop
jnp
aas
add
js
jg
ins
sbb
imul
jae
adc
fprem1
jne
inc
inc
push
mov
shl
mov
push
pop
jg
sbb
push
movs
mov
mov
sub
pop
fild
mov
out
(bad)
out
(bad)
or
xor
mov
arpl
push
or
lock
push
xor
test
add
bound
movs
int3
stos
inc
jmp
das
xor
repz
aam
cmp
shl
fisubr
mov
sti
pop
fisttp
and
xor
pop
xchg
push
fcomp
stos
sbb
jo
call
dec
neg
ss
pop
popa
jne
aad
push
pop
popa
mov
push
dec
sbb
jb
mov
sbb
pop
cmps
adc
and
pop
jo
push
lea
in
and
cmps
call
jl
aad
dec
pop
loop
mov
retf
jno
jg
idiv
gs
das
div
sub
outs
mul
push
jl
(bad)
sbb
add
int3
sar
(bad)
xchg
aas
ins
xor
dec
sbb
arpl
in
and
push
jne
add
adc
fimul
pop
mov
fldcw
push
xor
adc
sub
xor
fcomp
retf
(bad)
jne
inc
sbb
jne
aas
push
mov
ret
je
mov
cmp
xchg
push
cld
mov
jae
frstor
movs
mov
push
out
jg
dec
sub
ret
adc
add
fldenv
adc
mov
mov
jg
push
je
test
in
inc
pop
xchg
mov
jns
and
lds
jae
pop
mov
sbb
jle
mov
sub
je
push
sti
xor
mov
popf
shl
jge
or
outs
xor
or
aas
mov
fwait
xchg
mov
pop
pop
or
cmp
lock
jg
sub
or
in
mov
popa
lds
xchg
xor
mov
data16
in
mov
test
or
push
adc
scas
xchg
inc
clc
outs
icebp
cli
ror
sub
jp
lahf
pop
push
(bad)
into
lds
outs
inc
lds
fstp
loopne
cdq
pushf
dec
jne
add
(bad)
in
fisub
out
es
or
ss
outs
out
nop
mov
jmp
lds
arpl
imul
aam
cmp
retf
fcomi
adc
test
xchg
push
mov
(bad)
cmc
ds
cld
jp
mov
cld
pop
inc
packuswb
push
retf
ins
jb
sbb
sub
inc
push
push
xor
aad
int
pushf
test
xchg
(bad)
in
cld
xchg
jg
stc
(bad)
repz
jne
rcr
or
mov
into
rcl
cmp
fsub
dec
dec
out
lds
mov
xchg
jnp
mov
call
(bad)
pop
dec
es
dec
mov
sub
call
call
inc
dec
push
imul
rol
repnz
popa
int
adc
pop
nop
scas
mov
mov
dec
cld
mov
lahf
icebp
aas
packsswb
xchg
adc
das
sbb
popf
test
jnp
mov
push
or
dec
stc
or
jp
mov
mov
sbb
sbb
xchg
movs
jnp
dec
pop
dec
sub
in
lea
cs
cs
clc
jne
mov
repz
sbb
sar
out
and
fld
ret
dec
aad
mov
enter
ficom
lahf
add
(bad)
adc
ins
popa
inc
xor
jno
inc
inc
in
jle
mov
in
dec
and
adc
(bad)
ficomp
test
or
(bad)
cmp
dec
xchg
(bad)
adc
mov
cwde
outs
inc
rol
push
mov
outs
mov
shld
(bad)
mov
mov
push
push
rcl
fs
shr
xor
and
push
mov
mov
and
xor
mov
inc
or
mov
inc
cli
daa
add
xchg
jne
xchg
call
sub
inc
push
outs
fwait
sub
fsubr
push
dec
shl
adc
aad
adc
mov
push
out
or
xor
fwait
xor
adc
out
out
std
mov
adc
ror
pop
push
rcl
lods
mov
ds
lahf
mov
mov
xchg
push
out
movs
lahf
xor
xchg
or
and
push
fucomi
int3
mov
xchg
das
mov
pop
je
adc
test
and
loope
mov
xchg
(bad)
pop
xlat
adc
in
or
mov
push
loope
mov
aad
cdq
mov
jmp
addr16
pop
fistp
out
js
sahf
push
(bad)
jmp
repnz
or
inc
lea
stos
push
ja
or
icebp
mov
pop
adc
fisubr
dec
loopne
pop
mov
or
jmp
xchg
or
mov
mov
and
add
retf
call
jo
push
lods
stos
lods
sbb
or
mov
sub
out
lods
cs
out
adc
repnz
jp
imul
pop
adc
mov
mov
pop
sub
dec
out
(bad)
mov
xor
pop
add
mov
aas
or
aaa
add
(bad)
in
jne
xor
in
cwde
lds
jl
add
popa
shl
xor
and
call
(bad)
xchg
push
js
fwait
dec
pop
jnp
push
fidiv
xchg
enter
aad
add
lock
jle
fcomi
ss
div
retf
jp
mov
fwait
sbb
ja
gs
out
shr
and
pushf
sar
sbb
push
xchg
pop
push
jecxz
clc
inc
cmp
xor
aaa
dec
fndisi(8087
add
add
push
call
xchg
pop
and
clc
fmul
mov
icebp
in
data16
into
hlt
aam
xchg
sub
and
lods
loop
xchg
mov
das
cli
sbb
ret
sub
ret
adc
js
repnz
fwait
pop
in
or
sti
mov
repnz
pop
push
cs
pop
lahf
div
push
mov
xchg
pop
das
pop
loopne
and
mov
in
jb
pusha
mov
jmp
fstp
add
pop
sub
mov
lea
cwde
cmp
test
push
test
sub
and
std
adc
adc
push
jmp
rcr
(bad)
imul
scas
test
dec
adc
inc
mov
push
(bad)
loopne
sbb
xor
mov
xor
dec
fidiv
cmp
xchg
pop
mov
(bad)
cwde
sbb
inc
out
xchg
imul
rcr
clc
mov
pop
sub
dec
add
mov
lahf
lods
dec
outs
ja
sbb
xchg
clc
mov
cdq
ins
out
lock
in
sar
mov
ret
rol
neg
mov
icebp
js
inc
js
sbb
xchg
mov
adc
cmp
ins
sbb
imul
xor
clc
jg
lea
lds
mov
popa
adc
xchg
scas
ds
in
aaa
movs
sar
push
mov
outs
mov
inc
imul
push
or
call
inc
ins
or
test
mov
add
nop
outs
jns
mov
das
mov
mov
xchg
movs
cmp
push
pop
jp
not
(bad)
hlt
and
sub
nop
xchg
sbb
fld
stos
jmp
add
xor
ret
sahf
and
cmp
lds
movs
sub
test
das
dec
outs
das
adc
jnp
(bad)
mov
mov
add
push
mov
dec
jnp
inc
js
ins
and
sbb
xor
and
jnp
adc
movs
push
retf
arpl
mov
mov
and
mov
mov
mov
jb
aas
pop
jl
ret
mov
cmp
mov
xlat
dec
(bad)
jns
cmps
push
mov
je
mov
add
sub
and
xor
lds
xchg
test
test
repz
jae
fcom
out
xor
movs
dec
(bad)
leave
stos
xor
adc
loopne
sub
pinsrw
adc
stc
stos
and
fsubr
jle
ret
sub
addr16
imul
fst
or
or
cmps
push
div
sub
test
stos
jmp
pop
pop
inc
mov
icebp
div
sbb
mov
inc
(bad)
stc
lods
sbb
push
mov
in
pop
and
xor
repz
mov
xchg
loopne
loopne
mov
and
repnz
rol
pushf
gs
sbb
pop
test
test
retf
clc
shl
mov
test
aas
addr16
or
or
in
loope
adc
xor
mov
fwait
shl
retf
cmps
fcom
jl
xor
(bad)
pushf
dec
adc
aaa
xchg
test
jne
pop
sub
push
xor
in
jno
in
out
mov
scas
stos
pop
mov
in
in
cwde
jle
sbb
dec
les
cmp
and
imul
cmp
cmp
jmp
cmp
jae
dec
mov
rcr
or
fstp
cmp
aad
daa
cli
cmps
dec
or
sbb
xor
xchg
push
jg
outs
sbb
xchg
mov
mov
sub
inc
add
jno
mov
jne
out
sti
inc
and
sbb
jns
push
dec
cmp
sub
fwait
outs
dec
call
adc
loop
loop
mov
test
aas
in
and
stos
jg
jecxz
nop
mov
shl
cmp
xor
nop
mov
add
aaa
stos
mov
nop
mov
ja
push
pop
std
inc
out
dec
(bad)
and
popa
push
adc
cmp
dec
inc
inc
(bad)
sub
mov
outs
mov
ror
nop
ret
in
inc
fld
loopne
fcom
repnz
lock
mov
mov
cmp
add
ss
push
gs
imul
daa
sbb
xor
outs
jle
ss
inc
mov
enter
push
pop
imul
hlt
mov
push
lea
retf
mov
and
inc
mov
mov
int
or
inc
push
add
mov
push
data16
adc
adc
ret
call
repz
idiv
retfw
(bad)
cmp
cmp
fs
push
gs
jo
mov
jo
popf
std
or
push
fcom
(bad)
xor
xchg
xchg
mov
jl
add
xor
sub
pop
movs
add
or
sub
ss
punpckhwd
xchg
sti
das
jb
test
cmp
xchg
push
mov
je
pop
lods
sub
repz
jnp
mov
cmp
sbb
aaa
neg
pop
stc
ds
in
test
jmp
cmps
fnstenv
(bad)
ror
xchg
movs
pop
sub
pop
in
push
xchg
push
aad
add
xor
pop
mov
add
mov
xchg
(bad)
cmp
sub
jecxz
sbb
xchg
and
fdiv
dec
mov
mov
loope
cmp
adc
cmp
xchg
rol
loop
rcl
dec
mov
scas
pop
scas
repnz
out
jl
jo
xchg
xchg
cmp
in
or
retf
pop
stos
rcl
jmp
sub
int3
test
movs
inc
pop
mov
mov
mov
xlat
enter
xchg
sub
pop
daa
int
aas
sbb
and
sub
sahf
fidivr
out
pop
mov
ret
pop
push
vmulsd
aas
jmp
sub
adc
shl
loop
pusha
(bad)
(bad)
shl
inc
xor
fadd
cmps
jno
dec
add
dec
cmc
jecxz
push
jp
mov
fadd
mov
sub
add
imul
mov
popf
adc
mov
adc
add
sbb
and
retf
pop
bound
imul
pop
sti
imul
fwait
mov
push
cwde
shl
test
pop
cdq
sbb
pushf
(bad)
(bad)
jmp
mov
sub
xor
and
jg
adc
daa
cmps
push
xlat
mov
mov
das
sub
loopne
pop
fwait
aad
mov
ror
jmp
das
sti
sbb
les
cs
out
push
adc
out
xchg
fstp
cs
inc
dec
or
jmp
(bad)
(bad)
stos
xor
cmp
je
ret
cmp
pushf
ss
out
popa
stos
out
cmc
outs
popa
daa
int
ror
dec
clc
dec
out
(bad)
fcom
rol
lds
jo
call
daa
repz
jecxz
push
sbb
fdivr
push
jo
dec
adc
pop
jge
xchg
in
outs
push
or
add
test
cmc
(bad)
jns
clc
xchg
out
lds
and
pusha
xor
std
scas
cmp
ins
nop
sar
stos
(bad)
in
retf
sub
jle
into
push
jmp
stos
ret
mov
adc
pop
xchg
les
xchg
xor
and
or
dec
iret
mov
and
ud1
ins
xlat
xor
imul
das
pop
loopne
pop
je
mov
lahf
mov
xchg
pushf
in
test
ss
out
into
xor
adc
mov
(bad)
push
repz
dec
stos
movs
jbe
test
(bad)
mov
inc
xor
enter
or
scas
xlat
add
xchg
outs
push
cli
out
outs
jno
inc
test
lahf
inc
inc
sub
das
xchg
div
pop
popf
jnp
icebp
(bad)
bnd
out
popa
mov
xchg
cmc
mov
enter
push
dec
adc
adc
cmp
sub
sbb
inc
push
jmp
shl
pmullw
adc
or
cdq
ja
or
jmp
pop
push
jo
dec
mov
xchg
jo
test
rcl
lods
jl
stos
dec
cwde
daa
inc
movs
ret
int
xchg
(bad)
mov
inc
lods
jecxz
push
inc
xor
test
(bad)
lods
and
int
push
push
and
jp
sub
inc
in
push
ins
cmps
add
cmp
frstor
aas
pop
or
je
(bad)
pop
jnp
xor
(bad)
fcomip
dec
js
mov
es
adc
sbb
pushf
lock
scas
sbb
xchg
aaa
push
test
(bad)
pop
jecxz
adc
pushf
or
and
add
adc
jp
mov
cdq
xchg
pop
movs
jl
mov
mov
add
(bad)
adc
rcr
or
mov
aas
jecxz
mov
jbe
mov
cdq
dec
iret
rol
jno
jbe
je
inc
movntps
popf
push
xlat
sub
bound
int
mov
scas
shl
ja
push
add
adc
push
sub
sub
popa
mov
pop
inc
pushf
add
shl
scas
dec
shl
fld
dec
jno
push
(bad)
mov
dec
jmp
imul
add
mov
pushf
pop
or
inc
inc
and
lods
mov
out
mov
loop
pop
pop
cli
cmp
xor
xchg
shr
sbb
lds
sub
adc
xchg
ins
imul
pop
cmc
xchg
and
mov
(bad)
push
stos
(bad)
sub
xchg
or
inc
sub
stos
pop
imul
(bad)
mov
inc
vunpckhpd
out
pxor
(bad)
fchs
stos
sub
push
shl
xrelease
pusha
cmovs
or
sar
mov
mov
and
sbb
dec
ficom
mov
push
mov
or
cld
arpl
pop
div
pop
push
js
sbb
test
inc
lock
xor
jmp
jmp
pop
fmul
test
call
xor
sbb
dec
and
push
dec
push
shl
inc
fiadd
dec
mov
clc
mov
mov
cmp
sub
mov
mov
cmps
loopne
call
fwait
push
inc
lock
push
(bad)
ja
scas
adc
pop
and
xchg
pusha
movs
fisubr
xor
fist
xor
in
call
push
out
mov
jl
pop
add
cmp
sub
ja
aaa
addr16
mov
lds
and
xchg
fstp
(bad)
movs
daa
mov
or
hlt
lds
xor
or
pop
jb
dec
or
int
push
cdq
lea
ds
stc
or
pop
cld
push
stc
push
(bad)
iret
sub
jge
pop
sbb
jno
shl
jp
jbe
ret
cmp
sbb
dec
jp
cld
sub
adc
lock
mov
sbb
repz
cmc
test
adc
dec
jle
ret
call
add
outs
pop
and
push
xchg
outs
mov
cmp
movs
xchg
js
lods
dec
push
out
aas
ret
mov
dec
push
shr
retf
outs
xchg
adc
rcl
ret
pop
stc
(bad)
xor
xchg
lahf
mov
lahf
mov
fwait
inc
dec
push
sbb
retf
pop
ja
pushf
lock
repz
sbb
xor
jl
mov
xor
add
pop
add
jns
ins
and
shl
inc
gs
inc
inc
retf
cmp
cdq
pop
jmp
fstp
inc
xlat
inc
add
sub
and
dec
mov
mov
leave
mov
mov
aad
scas
sahf
adc
lahf
fsubr
xor
in
sub
xchg
enter
dec
xchg
rol
add
mov
cmp
lods
mov
shl
stc
lods
in
add
dec
jl
(bad)
fcomp
(bad)
mov
pop
es
cmc
and
and
in
jnp
and
xchg
fcmovu
jne
or
add
(bad)
movs
lea
adc
sub
jl
test
push
fiadd
pop
or
or
shl
fadd
pop
inc
xchg
scas
out
ret
in
pop
retf
and
je
lock
sub
sbb
std
add
jne
movs
fs
enter
mov
jnp
adc
adc
(bad)
push
push
cmps
jecxz
popa
adc
jns
outs
movs
icebp
push
(bad)
popa
stos
xchg
or
mov
mov
pop
xchg
push
jmp
pop
sbb
icebp
leave
pop
popf
leave
fiadd
cmp
pop
jno
xor
push
hlt
push
and
sbb
daa
inc
aas
and
mov
xor
sbb
inc
mov
add
retf
xchg
xchg
adc
popf
push
push
daa
pop
ror
ss
mov
test
imul
pop
test
daa
hlt
sub
push
jns
(bad)
mov
mov
sub
out
mov
inc
test
or
dec
scas
inc
repnz
push
mov
into
xor
jno
sub
fwait
out
clc
rcr
xor
xchg
push
shl
popf
push
mov
out
xor
jno
movs
push
into
push
mov
fisubr
(bad)
fcomp
pushf
add
pusha
mov
lods
mov
pop
enter
sbb
mov
xchg
xchg
ja
scas
addr16
xchg
adc
cdq
les
int3
stos
imul
add
pop
sub
sbb
mov
mov
cdq
ins
imul
sahf
mov
push
or
mov
dec
cmp
mov
test
jmp
xor
fwait
and
jbe
stc
add
sbb
fld
xor
push
cmps
xor
nop
and
fwait
mov
loop
sub
and
and
sub
dec
pop
push
inc
jns
mov
and
mov
sbb
xchg
mov
in
and
out
xchg
retw
retf
leave
out
imul
ds
retf
sar
inc
push
xor
or
imul
sub
cmp
pop
add
ins
xchg
enter
push
adc
pop
int
sub
push
sub
mov
sub
xlat
mov
mov
ins
adc
gs
sbb
push
xchg
cdq
pop
pop
jmp
mov
sub
mov
(bad)
outs
add
addr16
call
jno
adc
and
pushf
sbb
fidivr
mov
push
imul
pop
pop
hlt
fcomp
aam
mov
pop
add
sbb
xor
add
scas
inc
lds
aas
jmp
or
inc
int
mov
and
mov
adc
inc
dec
inc
cmp
test
push
pop
test
sub
add
nop
mov
popa
loop
ss
push
adc
push
test
push
pop
mov
stc
iret
clc
cmp
retf
add
mov
aaa
inc
lahf
leave
mov
jae
div
jo
gs
stos
pop
and
mov
test
icebp
sub
and
fcmovbe
or
dec
mov
sbb
cs
cmp
xchg
es
fldenv
jg
pop
popf
pop
imul
or
movs
inc
or
mov
out
cvtps2pi
icebp
test
retf
mov
(bad)
lahf
movs
aad
(bad)
inc
(bad)
into
fsub
or
mov
and
je
stc
jge
adc
push
loopne
and
mov
dec
xor
gs
sbb
push
mov
das
jmp
fimul
out
lock
scas
mov
(bad)
push
mov
or
xor
clc
mov
add
repnz
dec
add
lods
addr16
mov
in
int3
mov
jb
jle
fdiv
mov
inc
push
mov
pusha
fiadd
gs
mov
adc
cmp
jl
sahf
mov
arpl
ret
outs
add
outs
jecxz
sti
inc
adc
fmul
dec
mov
gs
and
add
dec
mov
jbe
test
(bad)
enter
(bad)
mov
rcr
loopne
sahf
adc
cmp
retf
loope
es
add
mov
imul
sbb
ja
stos
dec
push
addr16
popf
ds
push
adc
pusha
lods
push
pop
cdq
sub
push
mov
mov
sub
pop
dec
inc
ss
lahf
cmp
push
loope
push
retf
xchg
(bad)
out
cli
mov
fld
ret
sbb
mov
mov
sbb
jmp
movs
(bad)
into
dec
pusha
mov
or
movs
leave
push
add
jbe
push
leave
je
xchg
or
and
loope
push
push
mov
jmp
cmp
lea
dec
iret
mov
inc
dec
cs
add
cmps
sub
xor
(bad)
mov
jbe
test
ins
fldenv
cmc
fsub
dec
and
mov
lahf
sub
or
aaa
sub
push
gs
adc
jg
cmc
or
aaa
ds
retf
or
lods
xlat
jp
cmps
lahf
mov
leave
or
and
mov
lds
adc
lods
push
jbe
cmp
(bad)
sbb
ret
jp
jmp
ja
mov
cmp
fsub
stc
fdiv
and
(bad)
mov
sub
fcomp
xor
pop
(bad)
stos
lods
dec
dec
inc
add
out
lds
mov
in
int3
inc
push
adc
cmp
data16
pop
xchg
rol
daa
sar
or
pop
and
jecxz
mov
cmp
push
int3
(bad)
jp
lds
aad
leave
sub
scas
into
jmp
mov
sub
sub
sbb
pop
popa
xor
dec
adc
cmp
cmp
and
mov
in
imul
inc
or
(bad)
jbe
pop
cmps
cmp
push
sbb
retf
je
aas
mov
int
cmp
data16
rcr
mov
jl
mov
dec
push
adc
pusha
push
sub
aaa
std
cmp
pop
mov
retf
mov
dec
adc
aas
ret
ret
pop
and
jno
jmp
imul
call
inc
aad
stos
nop
ss
cmp
mov
dec
jmp
and
inc
call
mov
cmps
or
xor
cdq
lea
fild
fst
jmp
(bad)
test
xor
adc
inc
cmc
int
sub
dec
scas
mov
cdq
out
add
mov
call
jmp
les
jno
pop
mov
test
pop
push
xchg
iret
int3
mov
popf
xchg
add
inc
sub
das
cmp
jno
inc
arpl
in
dec
cs
mov
xchg
int
xchg
mov
and
xor
xchg
jp
into
ds
rol
imul
out
and
pop
lods
scas
jo
jge
add
sar
jbe
daa
movs
fild
push
mov
pop
daa
jbe
rol
(bad)
cmp
clc
push
in
out
cs
adc
outs
daa
push
mov
clc
jecxz
lods
xchg
arpl
hlt
cmp
cs
cmp
popa
sub
add
lods
and
cmp
cmps
add
mov
es
push
scas
xor
js
sbb
dec
pop
push
push
shl
out
inc
mov
outs
cld
fnstcw
pushf
cld
pop
aad
mov
pop
sbb
sub
fwait
movs
jns
mov
test
pop
dec
mov
adc
loope
int3
dec
stos
enter
cmp
mov
and
cmp
add
inc
cmp
lods
jo
test
push
cmc
sub
xchg
add
loopne
and
inc
xchg
and
mov
mov
and
pop
loope
jae
aas
lds
pop
mov
pushf
xchg
push
mov
test
or
sub
sahf
cld
adc
(bad)
repnz
mov
pop
push
add
sti
or
sbb
lods
mov
leave
push
and
xor
cmps
rol
aad
retf
sub
pop
scas
retf
hlt
vpacksswb
jmp
xor
push
and
rcr
and
fs
jecxz
xchg
push
aam
xor
mov
jns
mov
imul
ins
push
cmp
dec
jb
out
addr16
mov
cld
movs
scas
add
(bad)
sbb
push
add
imul
fwait
rol
sbb
dec
enter
add
aad
sbb
scas
fnstcw
in
inc
mov
mov
rcr
cmp
outs
mov
add
push
cdq
cld
outs
nop
sub
push
cmp
imul
pop
ror
cmp
adc
addr16
mov
cmp
mov
leave
ss
or
xchg
loope
push
rcr
popf
mov
pusha
adc
mov
in
adc
test
mov
cmp
inc
xchg
or
shl
iret
cdq
and
loope
lds
inc
pmulhuw
jno
mov
jne
leave
xor
ja
jae
pop
mov
fistp
sub
stc
data16
and
sahf
sub
xchg
popf
jmp
inc
xchg
xor
pop
xchg
bound
sub
sub
data16
std
inc
shr
pop
scas
test
fsub
sar
push
mov
push
call
mov
jmp
mov
ret
adc
xor
jecxz
xchg
xor
jl
inc
pusha
pop
mov
add
into
sbb
xchg
fcmovne
dec
add
stos
test
jge
sub
sub
sbb
stos
or
inc
movs
cmp
dec
mov
cmps
pop
ds
in
mov
loop
not
inc
inc
mov
movs
out
mov
pop
fs
in
loopne
mov
cwde
mov
mov
dec
pop
inc
fcomp
xchg
ins
pop
mov
and
and
or
int
push
inc
cmp
xchg
fsub
pop
mul
cdq
mov
and
imul
or
jmp
or
ins
ins
mov
push
sub
cmp
outs
pop
sbb
cmp
cmps
lds
jg
inc
dec
pop
xchg
cmps
adc
bound
xor
dec
mov
and
xor
mov
pusha
xor
inc
ret
or
rcl
xchg
jg
or
fldenv
test
xor
add
imul
ret
cmp
lahf
ror
push
(bad)
cmp
inc
jmp
jmp
mov
addr16
jmp
inc
mov
(bad)
pop
inc
xchg
adc
repz
pop
push
(bad)
cld
xor
and
out
lahf
xlat
or
das
(bad)
jmp
push
sbb
movs
mov
adc
in
push
call
(bad)
push
pop
(bad)
(bad)
xchg
ret
pop
pop
fnstcw
out
mov
cmps
inc
mov
sti
jle
in
fs
(bad)
in
push
adc
test
gs
stos
aas
ret
ja
sbb
add
xor
sbb
add
stc
push
popf
leave
je
outs
mov
sbb
push
std
xor
pushf
cld
gs
and
cs
stos
sbb
lahf
sub
push
dec
add
add
sub
xor
pop
lods
sbb
xchg
(bad)
and
dec
test
inc
addr16
scas
test
fisttp
psrlw
pop
in
jecxz
fcmovne
jg
sub
sar
jmp
cmp
mov
jne
fwait
mov
inc
cdq
push
sti
jge
out
inc
mov
gs
fwait
inc
lods
mov
popa
add
nop
push
je
inc
in
pop
jns
ret
imul
not
das
mov
jecxz
xor
jno
(bad)
aam
fcomp
(bad)
sbb
loope
mov
inc
sub
inc
dec
leave
or
scas
add
jle
daa
retf
or
push
mov
mov
lds
cwde
pop
scas
mov
cld
cmps
jmp
or
ret
loopne
repz
jb
data16
jo
out
add
inc
rcl
scas
mov
mov
jmp
sbb
mov
push
jg
pop
xlat
in
sbb
and
icebp
jo
js
mov
and
and
add
sahf
mov
leave
ror
popa
or
xor
jbe
lock
add
add
mov
fstp
pushf
push
mov
mov
stc
mov
inc
and
pop
mov
gs
xlat
leave
aam
pop
mov
(bad)
pop
or
call
pop
aam
add
sbb
int
xchg
stos
xchg
dec
push
adc
pop
mov
mov
dec
test
dec
mov
lods
nop
or
sbb
push
mov
cmps
lock
push
aam
push
pop
pinsrw
jl
cmp
test
sub
xlat
movs
fwait
das
jmp
in
sub
inc
xchg
mov
ror
inc
(bad)
call
clc
call
mov
inc
cmp
loopne
les
xor
fwait
leave
mov
add
sar
cmp
ret
xchg
int3
out
jecxz
test
lock
loope
cmps
mov
xchg
mov
xor
xor
out
(bad)
cmp
xor
jg
push
cmp
mov
sar
xor
int
sub
scas
sub
(bad)
hlt
arpl
cwde
sbb
(bad)
pop
call
inc
sub
hlt
aas
(bad)
aad
inc
jns
push
sbb
xchg
out
jns
mov
cmp
fwait
and
jb
sub
ret
pop
mov
push
xchg
mov
jg
sub
lds
xor
cmps
retf
iret
xor
push
lds
or
loop
jmp
mov
in
shr
mov
ret
add
dec
sbb
cmp
daa
push
push
dec
mov
test
outs
test
or
adc
xchg
ret
or
bound
es
das
xor
data16
cmp
das
icebp
loopne
fimul
int3
xor
jne
mov
cs
(bad)
mov
pop
jns
sbb
sub
jmp
mov
mul
call
out
cli
test
push
xchg
pop
sbb
(bad)
pop
mov
sbb
mov
in
(bad)
outs
xor
pop
inc
xchg
and
jb
adc
arpl
adc
jbe
out
pop
jo
int
es
iret
xchg
rol
mov
jl
add
mov
xor
xchg
xor
(bad)
sahf
fsubr
fucomi
sahf
xchg
iret
or
xacquire
pop
ret
add
jg
lods
pop
in
mov
fwait
in
fbld
add
(bad)
cwde
test
push
dec
stos
sub
imul
sub
repz
add
mov
sbb
adc
cmp
and
xlat
in
cmove
and
and
nop
xchg
dec
pop
cmp
xchg
aam
in
fistp
mov
mov
or
sbb
pushf
mov
popf
or
lea
cmp
xor
push
push
and
adc
popf
xchg
mov
mov
pop
xchg
pop
and
xchg
(bad)
loop
adc
push
mov
cmp
in
add
call
sbb
scas
fnsave
es
xor
int3
das
mov
mov
test
adc
mul
and
cld
dec
jbe
inc
and
fs
sbb
dec
xor
std
sub
pop
out
and
je
gs
inc
cwde
add
leave
jmp
jecxz
sub
retf
cmp
or
mov
(bad)
jmp
test
stos
inc
dec
push
and
sbb
sti
adc
adc
mov
enter
sbb
push
or
sub
arpl
stc
push
inc
cmp
cdq
mov
clc
add
push
enter
push
(bad)
outs
rcr
mov
cmp
repz
test
pop
push
icebp
and
cmp
jno
sub
jo
bnd
inc
call
jnp
sar
fcmovnu
xor
sbb
cmp
jae
fs
fwait
clc
fwait
cmp
adc
sbb
mov
sbb
popa
daa
imul
mov
push
xlat
or
imul
retf
push
push
mov
lods
pop
js
inc
sub
pop
xor
jns
fwait
mov
ret
jb
mov
jle
maskmovq
les
stos
push
mov
jns
cmc
or
mov
retf
adc
fcomp
adc
sbb
mov
clc
aam
jne
fist
or
push
push
cmp
cdq
mov
add
adc
add
pop
in
lods
sbb
push
shl
dec
xchg
cmp
sub
pushf
jns
mov
add
ret
sub
add
mov
mov
sbb
sbb
cmps
and
repz
in
stc
movs
push
(bad)
push
push
movs
add
pusha
mov
lock
and
sahf
pop
cmp
(bad)
je
fmul
and
jae
int
sbb
out
ret
enter
add
jmp
stc
mov
out
dec
jecxz
xor
and
addr16
test
cmc
repnz
jae
js
lods
cmp
aas
dec
repz
arpl
and
push
outs
loope
fadd
mov
jno
cwde
gs
lods
aad
mov
dec
out
jo
xchg
inc
icebp
mov
jmp
shr
or
movs
xchg
fwait
or
add
inc
out
in
xchg
mov
xor
shr
clc
ins
adc
push
das
add
lds
cmp
and
mov
aad
ror
dec
in
or
sub
into
retf
add
sbb
ja
das
and
adc
mov
xlat
dec
jge
pop
and
jns
mov
icebp
mov
mov
ds
fs
sub
jg
adc
jle
lahf
push
cmp
sbb
pop
in
hlt
mov
and
mov
fldenv
mov
mov
inc
sbb
popa
adc
xor
jns
mov
adc
pop
jno
push
pop
mov
xor
sbb
mov
push
cmp
cmp
leave
cmp
pop
hlt
icebp
dec
jmp
icebp
cmp
(bad)
addr16
movs
sub
xchg
out
jmp
out
fstp
push
xchg
cmp
fidivr
add
xchg
les
sub
popf
push
movups
cwde
add
dec
nop
repz
sub
cmp
mov
mov
repnz
mov
inc
push
call
push
and
fdivr
xchg
fld
xchg
mov
push
test
pop
mov
jns
jne
test
scas
push
(bad)
out
das
lea
mov
pop
cwde
lds
ins
pop
sub
call
cmp
inc
call
pop
outs
or
sub
jmp
xor
sub
inc
jno
push
fdivp
dec
lods
cmp
sti
dec
xor
aaa
push
jp
mov
add
test
outs
mov
fwait
je
leave
test
or
add
pusha
int
cmp
es
shl
jne
add
sbb
pop
inc
repnz
adc
aad
push
dec
dec
pop
outs
jne
retf
fnstsw
in
cmps
sahf
rcl
xchg
push
xchg
dec
sub
mov
nop
cmp
stc
sbb
clc
aaa
jno
mov
movs
out
xchg
mov
dec
in
out
ds
jmp
scas
daa
fucomp
fiadd
add
inc
test
and
adc
inc
out
mov
xor
ror
add
mul
ja
dec
ins
cmp
mov
stos
(bad)
iret
bound
shl
loopne
adc
out
inc
mov
aas
clc
dec
fisubr
jle
push
and
ins
pop
push
int
outs
rcl
sub
cmp
cmps
(bad)
scas
pop
pop
(bad)
dec
(bad)
fisttp
xchg
mov
stos
sbb
xlat
sbb
add
imul
(bad)
fwait
push
cmova
inc
inc
or
adc
sub
jnp
shl
outs
sub
cmp
mov
push
call
mov
and
or
dec
jae
xchg
pop
outs
loope
mov
fcmovb
retf
in
and
mov
iret
sbb
fstp
mov
mov
add
lods
aas
dec
inc
inc
push
lea
jno
shr
mov
(bad)
fdivr
aam
cdq
inc
and
jmp
pop
cmps
(bad)
shr
cmps
inc
ficomp
mov
shl
jne
sbb
add
and
scas
cwde
fdivrp
ja
ja
or
sbb
add
pop
mov
mov
cli
push
jle
cmp
mov
mov
xchg
mov
sbb
ins
pop
enter
outs
imul
jne
xchg
add
mov
popf
xchg
xor
sbb
bound
outs
ja
fdivr
sbb
mov
add
lahf
fmul
push
icebp
(bad)
out
push
loopne
movs
out
(bad)
push
pop
xchg
dec
jle
aam
test
loopne
shr
push
retf
mov
pop
xchg
xlat
pop
add
mov
imul
loope
lods
shl
sbb
jle
mov
inc
lea
push
ins
and
sbb
out
xchg
enter
mov
(bad)
fist
popaw
dec
iret
push
fimul
cmp
aaa
es
mul
xlat
imul
in
mov
adc
and
and
imul
adc
mul
fcom
xor
pop
push
aaa
cdq
add
pop
ret
cmp
gs
pop
les
or
fstp
jmp
push
jmp
xchg
mov
push
shl
xor
or
sub
ret
lea
or
pop
ficomp
mov
mov
mov
cmp
aaa
or
pop
test
inc
outs
or
cmps
mov
je
ins
cmp
fdivr
mov
test
sti
sub
jne
add
lds
mov
sahf
aad
push
mov
hlt
xchg
cmp
sub
retf
jge
imul
sbb
inc
jb
pop
jmp
sti
xor
jns
jg
cmps
into
mov
in
add
mov
ficomp
jns
addr16
lods
pop
imul
sar
cli
outs
ss
les
and
scas
adc
shr
fdivr
sub
dec
cwde
rep
cmp
push
ins
out
pop
mov
jns
ja
ds
dec
add
loopne
lahf
sbb
sub
in
(bad)
(bad)
aam
fwait
jmp
push
pop
sub
or
xchg
mov
ins
mov
inc
and
cmp
pop
fistp
sub
adc
mov
loopne
sub
das
or
dec
es
inc
jmp
add
imul
es
scas
aam
loop
lahf
xor
mov
lds
mov
les
or
rcr
es
aam
sbb
in
mov
stc
ror
xchg
xchg
add
jmp
dec
frndint
into
pop
cwde
cs
and
scas
jns
outs
and
mov
loopne
mov
test
mov
gs
mov
jne
and
xor
mov
pushf
dec
and
dec
stos
ins
neg
xlat
adc
mov
jl
adc
ror
int3
das
mov
hlt
jae
retf
jo
ss
nop
aam
jg
jo
inc
adc
das
fsub
sub
cdq
push
retf
sub
movs
daa
ins
out
cld
mov
mov
into
and
cmps
jo
icebp
test
fs
ins
add
aam
adc
push
mov
enter
mov
and
jbe
pop
loop
arpl
jge
mov
push
test
call
dec
or
sub
sub
sbb
fisub
cld
js
in
out
inc
jmp
sahf
adc
(bad)
inc
xlat
sar
fwait
movs
lahf
loop
mov
rcr
das
jne
in
and
repnz
ror
cdq
cmp
mov
xchg
mov
pop
mov
cmc
push
cmp
fld
inc
jmp
adc
rol
pop
pop
fdivr
shl
adc
cli
call
or
mov
out
lea
push
arpl
mov
pusha
iret
cmc
sub
jns
dec
pop
mov
fsubr
jle
test
mov
or
aad
mov
or
add
ins
(bad)
arpl
int
and
push
rol
inc
adc
jge
nop
mov
cwde
dec
inc
add
push
add
sbb
and
mov
push
mov
adc
pop
retf
ja
or
call
add
daa
jbe
shl
outs
mov
stc
jecxz
div
ret
stos
movs
cmp
mov
mov
pop
lds
sar
enter
jecxz
push
add
jnp
sbb
out
fidivr
and
pop
or
xchg
inc
jne
inc
and
das
cmp
mov
retf
out
movlps
rol
jmp
add
movs
dec
movs
mov
cmp
jns
(bad)
test
adc
mov
cmp
add
adc
xchg
cmp
pop
call
add
call
repz
jo
clc
inc
icebp
adc
repnz
and
cdq
inc
jo
(bad)
xchg
adc
cld
mov
cdq
test
adc
in
xchg
inc
lea
adc
scas
out
inc
rol
cwde
add
pop
push
mov
cdq
jae
fcom
sub
pop
ret
add
mov
(bad)
or
repnz
xor
push
xlat
inc
mov
int
adc
fmul
mov
or
sbb
mov
das
data16
xchg
mov
adc
outs
dec
test
outs
ds
adc
mov
lds
inc
outs
sbb
push
jo
fld
loope
aam
push
sbb
push
jnp
ffreep
push
lods
fdiv
push
xor
(bad)
shl
inc
sbb
xchg
stos
call
aam
fs
pop
pushf
cmc
outs
cmc
jl
jbe
adc
dec
inc
mov
mov
js
push
icebp
pushf
inc
add
ror
je
div
xchg
sbb
dec
cmps
push
xchg
lds
adc
cmp
mov
loopne
in
out
cmp
imul
out
(bad)
mov
ffree
cmc
xor
in
ins
add
jecxz
dec
adc
gs
inc
imul
cmps
pop
and
cmc
ffreep
mov
mov
mov
je
dec
aad
jmp
test
repz
test
sbb
mov
xchg
xchg
xchg
or
ror
mov
call
movs
movs
cmp
push
and
fld
fdivr
xchg
cs
adc
enter
in
mov
shl
cmp
movs
cmp
adc
push
iret
and
das
adc
adc
fimul
push
pop
(bad)
addr16
shl
jae
cdq
xor
test
lods
lea
pop
pop
outs
ds
in
into
xor
xor
sub
mov
mov
call
add
xor
sub
out
lods
ror
mov
mov
ror
ja
nop
sbb
leave
xchg
pop
and
bound
jns
mov
dec
addr16
loope
cld
xchg
push
dec
in
add
lea
jecxz
test
sub
in
loope
psubd
or
(bad)
es
(bad)
fsubr
ins
push
cvtpi2ps
(bad)
jo
sbb
sub
rol
jbe
xor
mov
lahf
leave
add
jmp
sub
cmp
pusha
xchg
scas
dec
pop
or
int3
ja
mov
mov
sub
pusha
xchg
jae
mov
pop
loop
rol
xor
sets
push
shl
mov
mov
outs
ret
jbe
into
sbb
adc
mov
call
adc
inc
int
push
rol
sar
popa
cmp
xchg
dec
std
jge
retf
dec
push
pop
stc
add
cmps
or
cmc
loopne
push
stc
stos
and
in
pusha
xlat
scas
in
(bad)
je
rcr
xor
and
cmp
cwde
clc
lahf
js
popa
xchg
rcl
(bad)
jmp
aam
daa
mov
retf
mov
cmp
or
mov
(bad)
dec
enter
xor
gs
and
push
jl
dec
pop
push
fwait
sahf
or
leave
mov
sbb
adc
pop
bound
mov
aaa
add
push
ins
or
ds
inc
adc
lods
fwait
mov
xchg
inc
arpl
jl
add
(bad)
in
mov
inc
ret
xor
bound
in
dec
cld
mul
add
in
xor
pop
adc
and
adc
cli
cmp
jge
inc
ss
or
and
aam
jne
rcl
dec
and
fistp
mov
cmp
leave
int3
out
or
stc
js
mov
lods
mov
add
out
fimul
dec
push
cld
push
push
inc
jle
(bad)
dec
mov
lock
cmp
cmp
fsubr
repz
cmp
(bad)
enter
and
xor
sub
loope
mov
aam
mov
in
mov
sub
add
pop
mov
fbstp
mov
mov
xor
retf
sub
jns
xor
dec
inc
adc
add
jge
int
sbb
sahf
icebp
in
ret
gs
inc
mov
imul
sti
adc
imul
mov
out
mov
jb
push
and
sub
pop
and
add
in
jge
add
popf
xchg
test
popf
sub
mov
stos
data16
fild
mov
jmp
jg
jmp
loope
and
lods
fucomip
xchg
lods
jnp
xchg
(bad)
dec
cmp
and
and
dec
cmp
test
dec
fadd
arpl
push
mov
pop
popa
test
aas
movs
dec
inc
pop
mov
leave
mov
(bad)
pop
fisubr
ror
cmps
movs
fcmovb
cli
sub
not
mov
dec
xchg
je
ret
xchg
mov
xor
cmp
arpl
and
push
es
mov
sub
pop
jae
jb
or
adc
movs
push
retf
lods
test
repz
ror
jecxz
dec
vandps
ds
fs
mov
ins
inc
(bad)
(bad)
test
or
and
lods
das
popf
popa
retf
xor
aam
inc
btr
mov
push
fcomp
addr16
(bad)
daa
lahf
outs
push
xor
jb
fdiv
pop
in
adc
add
jnp
add
movs
adc
retf
mov
cli
mov
lods
aas
push
xor
sub
mov
xchg
inc
mov
dec
out
push
hlt
jmp
scas
mov
or
pop
je
shr
push
(bad)
shl
lds
xchg
add
pop
cmps
fsub
mov
out
push
sub
mov
out
icebp
fidiv
into
cmp
and
out
pushf
push
xchg
xor
mov
and
jl
sbb
push
das
retf
dec
movs
pop
pop
fadd
dec
cmc
or
mov
adc
stos
jno
stos
neg
(bad)
adc
fcmovnb
mov
mov
mov
mov
dec
jne
push
fisttp
add
out
xchg
imul
push
fistp
cmp
xchg
mov
pop
jmp
inc
lea
imul
cmp
pop
mov
cmp
or
mov
imul
out
xor
cmp
mov
loop
daa
inc
aas
rol
add
sbb
hlt
cmps
sbb
cmp
(bad)
push
inc
out
sbb
mov
dec
in
mov
xchg
push
loope
lods
dec
or
leave
(bad)
stc
sbb
mov
add
cmp
int3
ja
imul
rcr
push
ss
add
cld
sbb
xor
pop
outs
clc
xchg
mov
push
outs
out
not
sti
lods
push
push
out
push
mov
jo
test
int
sar
mov
push
pop
stos
adc
neg
out
cmc
in
pop
mov
push
mov
xchg
test
or
sar
(bad)
or
mov
pop
loopne
imul
mov
pushf
jae
rcl
push
mov
popf
(bad)
clc
js
aaa
xlat
xchg
mov
les
xor
xlat
push
cs
pushf
xchg
mov
(bad)
in
pop
adc
outs
pusha
dec
xchg
xor
bound
mov
and
into
sbb
push
inc
cmp
sub
xor
fidiv
shl
xchg
shr
push
ss
xchg
sbb
rol
repz
inc
push
push
xchg
iret
std
dec
outs
pop
cmp
sbb
mov
jmp
(bad)
jo
rcl
outs
add
test
push
sbb
jns
lock
xchg
pop
fsub
sbb
and
push
sub
data16
in
cmps
cmp
pop
jnp
cmp
std
dec
mov
xchg
aaa
pop
fisttp
or
and
or
cmp
sub
addr16
adc
pop
lock
inc
cmovg
jbe
icebp
jp
push
int3
and
imul
lods
or
les
and
in
test
fcmovne
repnz
js
mov
stos
mov
gs
jne
or
mov
adc
test
dec
shr
arpl
mov
mov
lods
push
test
pop
cmc
out
repz
or
aas
(bad)
sbb
call
or
dec
push
add
jmp
outs
or
leave
xchg
xor
jno
mov
into
mov
shr
xor
add
out
jmp
push
mov
pusha
cmp
out
jo
cmp
pop
dec
xor
jle
rcl
cmp
sbb
cmc
jbe
xchg
retf
pop
repz
jmp
push
cmp
aam
jmp
pop
mov
int
jecxz
jo
ret
xchg
lock
sub
addr16
xor
push
pop
adc
je
retf
xchg
addr16
add
push
adc
sar
(bad)
adc
xchg
test
in
pop
(bad)
lds
adc
inc
adc
fucom
sbb
mov
popf
jb
add
scas
shl
sub
sbb
mov
add
jg
loop
push
and
scas
mov
sub
mov
fdivr
xchg
mov
pushf
fcom
nop
sbb
out
in
enter
sub
adc
fucomi
retf
push
ins
jae
scas
mov
xchg
xor
call
daa
scas
in
adc
lock
cmps
aam
ins
fisubr
mov
not
cli
sti
test
xor
in
add
imul
fild
xchg
pop
int
mov
xchg
fwait
sub
mov
cs
gs
mov
stos
(bad)
adc
xor
cmp
out
mov
cmps
mov
mov
xor
and
popw
xor
xlat
inc
dec
sbb
jnp
fstp
push
mov
hlt
lods
dec
lods
inc
add
jecxz
shr
xor
std
sbb
inc
aaa
ins
arpl
out
mov
and
xor
scas
call
iret
jge
or
sbb
xchg
cdq
test
adc
mov
and
inc
and
inc
adc
push
ins
sub
in
pop
inc
jne
cmp
sub
in
aaa
imul
cmp
or
cld
repnz
das
dec
dec
call
popf
mov
retf
scas
inc
(bad)
inc
sbb
out
or
(bad)
rcl
cwde
sbb
sub
add
cs
stos
push
test
shl
in
or
xor
out
dec
clc
aam
mov
test
pop
in
xchg
cmp
(bad)
cmp
cmp
call
add
shl
cmps
push
mov
add
mov
fisubr
xor
push
ror
retf
popa
fs
fsub
cmp
cmp
and
xchg
push
cmps
jl
jmp
add
repz
sub
and
or
jo
sub
std
mov
ror
jae
fs
sub
enter
mov
test
push
jne
push
pop
mov
repnz
push
sahf
loopne
das
icebp
cmp
sbb
neg
rol
cmp
ficomp
sub
or
pop
loopne
repnz
push
or
shl
cs
pop
push
jl
je
xchg
mov
addr16
xchg
sti
(bad)
in
mov
jge
ret
dec
mov
mov
mov
(bad)
scas
enter
out
ss
mov
fisttp
jno
and
inc
div
js
inc
(bad)
in
cmps
mov
test
mov
jae
into
cmp
test
lods
sub
and
arpl
add
fcom
cli
xchg
mov
(bad)
sub
add
mov
push
enter
repz
(bad)
mov
xor
sar
jg
pop
push
jns
or
in
pop
in
call
mov
xor
inc
iret
push
push
ror
clc
xchg
retf
les
jnp
inc
loopne
sbb
pop
pop
jno
outs
xor
cmp
adc
xor
lods
lods
fnstenv
retf
int
por
cmps
div
outs
jbe
jl
push
out
pop
daa
xor
add
iret
iret
add
cmc
inc
stos
mov
mov
jnp
and
mov
cmc
je
ins
and
xor
add
test
cli
fwait
xor
mov
cld
in
mov
jle
xor
adc
pop
ds
popa
add
fbstp
std
outs
mov
(bad)
jg
scas
push
add
cs
mov
pop
dec
adc
pop
(bad)
push
fimul
ins
pop
xchg
sub
xor
mov
test
dec
xor
ins
sbb
nop
jp
ret
dec
scas
xor
loope
mov
lods
fwait
xlat
imul
ror
jno
sahf
inc
mov
push
js
jecxz
enter
and
xor
repz
imul
aas
adc
push
xchg
pop
fisubr
not
cmp
mov
pop
fwait
pop
sar
mov
cmps
sbb
popf
ins
clc
adc
mov
push
or
or
cmp
add
push
loope
or
sahf
push
sub
dec
(bad)
jle
mul
xchg
stc
adc
addr16
pop
shl
mov
mov
call
ja
cwde
ins
iret
stc
jg
push
push
dec
es
add
mov
jl
loopne
jge
test
mov
stos
jmp
pusha
dec
aaa
clc
mov
add
bound
hlt
mov
ss
push
aam
cdq
and
push
ret
pop
mov
push
xchg
xchg
inc
fs
dec
int3
jmp
ins
fwait
add
sub
jmp
fcom
push
imul
jmp
outs
in
paddusb
cmp
cmp
nop
into
cs
ss
xchg
sub
dec
nop
lods
(bad)
or
mov
xchg
scas
call
arpl
je
sbb
lea
add
and
dec
jg
push
mov
or
retf
xor
inc
cmps
inc
lock
mov
dec
fabs
sbb
xlat
fld
cmp
push
sahf
fcomp
aad
in
arpl
movs
lock
mov
jg
hlt
test
mov
jmp
pop
addr16
pop
test
pop
fcmovbe
movs
mov
lds
xchg
fdivr
ins
stos
(bad)
psubusb
js
sbb
js
adc
cmps
fidiv
or
xor
inc
mov
jp
adc
or
out
or
loopne
adc
movs
in
jmp
mov
and
cld
aas
mov
rcr
mov
mov
mov
stos
(bad)
xchg
repz
dec
xchg
inc
sbb
imul
repnz
imul
test
js
pop
or
cdq
sub
xchg
cmps
xor
push
jno
out
fld
mov
cli
fdiv
fld
out
ret
push
shl
sub
sub
ds
jno
inc
push
shr
aaa
out
inc
pop
cs
jo
aam
test
jecxz
daa
imul
cmps
mov
inc
in
scas
xchg
(bad)
cmps
adc
pop
mov
inc
daa
mov
xchg
popa
jb
xor
imul
adc
mov
std
xchg
mov
ss
push
(bad)
test
fisubr
lds
xchg
mov
ret
xor
mov
xchg
add
fsub
or
jbe
aaa
cs
retf
lahf
xlat
mov
mov
jp
and
push
pop
pop
jl
pop
(bad)
jae
jae
retf
outs
aas
mov
cmp
jle
call
inc
(bad)
fidiv
dec
stc
pusha
aad
pop
repnz
mov
pop
inc
movs
mov
cmp
mov
jne
fdivp
data16
cmp
or
push
mov
fnclex
push
dec
loope
dec
in
jno
cmc
jmp
mov
or
cmps
jne
fwait
xchg
bound
pop
repz
imul
jae
repnz
daa
inc
or
mov
in
sbb
adc
pushf
dec
leave
mov
hlt
ds
sbb
int3
add
cmc
pop
xor
ds
std
mov
mov
add
mov
xchg
or
movs
adc
jle
pop
inc
aas
ja
add
je
push
call
das
arpl
inc
div
or
sub
std
popa
(bad)
pusha
fwait
add
cmp
adc
cli
push
jl
push
dec
jmp
in
cmc
enter
xchg
outs
popa
mov
enter
sbb
xor
mov
sti
jne
add
lods
xchg
outs
outs
out
push
sub
scas
rcl
dec
popf
fbstp
jle
(bad)
ja
cmp
sar
(bad)
pavgw
pusha
jmp
repnz
or
lods
push
adc
dec
div
jno
pop
mov
dec
data16
push
push
or
and
and
call
mov
push
adc
pop
or
add
sbb
movs
gs
out
movs
xchg
lock
retf
and
sub
in
cmp
xlat
enter
or
mov
pop
add
mov
aam
mov
dec
repnz
nop
pop
adc
add
xor
sbb
pop
jg
pop
fisub
xchg
data16
sbb
dec
stos
imul
sbb
add
mov
das
pop
std
ds
shl
adc
jb
push
sbb
call
imul
(bad)
(bad)
jge
jp
je
jmp
ffreep
call
addr16
xchg
pop
xchg
daa
test
xchg
add
push
and
mov
pop
cmp
and
xchg
inc
jb
add
dec
(bad)
mov
pop
and
ret
xor
or
add
cdq
shl
test
mov
pop
popf
or
xchg
cmps
push
jp
aaa
sub
into
xchg
loope
pop
pop
push
mov
inc
cmp
mov
popf
mov
mov
xchg
aaa
fwait
cmp
pusha
rcl
popf
int3
adc
scas
sub
adc
mov
cmps
(bad)
and
sub
sub
jb
bound
shl
cmp
mov
shl
mov
sbb
mov
bound
and
jb
or
call
repnz
sahf
xchg
cmps
pusha
je
mov
push
adc
xor
jmp
mov
loope
cmp
push
ins
out
jg
stos
xchg
xor
xchg
popa
jle
add
pop
mov
test
mov
and
push
call
and
pop
ret
and
mov
shr
dec
adc
sbb
daa
push
sub
imul
cwde
or
jmp
and
xor
xor
mov
mov
call
pop
jecxz
jb
cmp
jmp
aad
fidivr
jmp
(bad)
arpl
lods
fdivr
push
movs
imul
pop
adc
add
movs
adc
mov
inc
std
retf
jns
(bad)
mov
mov
into
jnp
fisub
jno
jle
inc
sbb
les
ins
ret
cmp
hlt
sti
sar
jl
jl
pop
push
push
out
jl
mov
mov
xchg
mov
cmp
dec
imul
xchg
xchg
or
js
fist
(bad)
sti
rcl
inc
movs
pop
imul
and
and
or
popa
dec
fisubr
dec
out
les
rcr
push
ins
xchg
out
mov
rep
lods
pop
jnp
jmp
mov
push
ror
mov
test
jl
sub
inc
sahf
xchg
sbb
jp
cmps
and
and
lods
and
popa
not
add
xlat
pop
(bad)
mov
shr
test
fstp
pop
mov
fisubr
sti
enter
mov
test
fisub
mov
adc
in
or
pop
dec
cmp
ja
jl
pop
int
mov
nop
jbe
(bad)
cmps
mov
adc
mov
or
cmps
xchg
lea
push
pusha
cmp
xchg
and
imul
imul
jne
repnz
jl
xchg
cdq
pop
dec
std
pop
pop
call
test
ins
and
and
mov
inc
jnp
fadd
out
cmp
movs
mov
fstp
push
jmp
adc
mov
ret
mov
jmp
dec
mov
jae
cmp
or
lahf
sub
inc
adc
dec
repz
aas
pop
push
data16
mov
(bad)
xchg
sbb
inc
(bad)
shr
cmc
push
out
nop
inc
rcr
xchg
cmps
xor
lea
dec
push
push
int3
dec
cwde
shl
retf
cmp
xchg
sub
and
imul
push
je
jns
add
jp
mov
scas
mov
xor
sub
inc
mov
mov
ins
adc
in
out
xor
jb
int3
pop
jmp
adc
add
in
dec
jnp
(bad)
and
pop
(bad)
movs
lock
imul
or
pop
jns
das
or
mov
cmp
rcl
cs
xchg
imul
pop
(bad)
(bad)
shr
ja
pop
js
add
enter
test
sahf
jg
jae
mov
fidivr
dec
mov
sub
sub
int3
mov
push
gs
enter
sub
repnz
jg
inc
add
mov
outs
rol
and
jno
xor
xchg
adc
cmc
test
push
and
arpl
ins
sub
ror
rol
ss
enter
and
fld
jno
and
add
mov
div
fsubr
hlt
call
test
mov
test
dec
pop
add
(bad)
jl
retf
stos
or
xlat
mov
cmp
mov
sub
mov
out
ret
pop
push
xor
pop
add
cmp
test
les
(bad)
sti
scas
mov
icebp
out
rol
mov
mov
sub
leave
xor
sub
pop
mov
ins
test
cmp
and
dec
mov
mov
ss
push
push
sub
fisttp
mov
push
fstp
out
xchg
adc
jge
out
dec
xlat
shl
in
xchg
loopne
ins
xor
sti
retf
call
test
sbb
call
add
and
sub
not
mov
jle
xor
lds
push
mov
inc
hlt
mov
daa
gs
fimul
and
mov
jbe
lds
jns
(bad)
aas
xchg
inc
arpl
lea
arpl
sbb
inc
cdq
imul
aam
dec
arpl
or
loope
cli
mov
gs
cmp
jmp
retf
jns
int
sbb
movs
call
mov
(bad)
mov
mov
mov
(bad)
retf
sbb
mov
retf
fdiv
pop
ins
sbb
scas
nop
cmps
cmps
dec
cld
xor
mov
pop
and
cmp
sar
inc
or
adc
adc
jb
stc
sub
arpl
jbe
jp
xchg
test
mov
mov
call
out
pop
mov
stos
(bad)
cmc
ffreep
(bad)
sub
xor
sub
dec
int
or
sbb
mov
inc
les
arpl
out
xchg
sbb
fsubr
dec
in
mov
xchg
not
sub
movs
adc
retf
int
xchg
add
adc
mov
mov
dec
sahf
lods
and
push
out
dec
popf
sahf
stos
xor
pop
cdq
dec
mov
stc
add
fstp
ds
or
ret
mov
sti
jns
xor
sub
add
lock
call
push
test
xor
mov
jne
jnp
movs
stos
mov
and
mov
cmc
cmps
out
call
push
repz
dec
push
(bad)
lods
cli
inc
fimul
or
hlt
sub
mov
xor
sahf
dec
loop
mov
movs
adc
fdivr
into
mov
movs
and
fnstsw
xchg
dec
dec
sub
mov
mov
mov
push
and
push
cmp
pop
xchg
mov
or
jo
pop
push
or
js
std
sbb
or
xchg
call
pop
ss
or
adc
add
loope
cmc
jg
dec
cmp
call
push
pop
xor
out
xor
mov
ja
jnp
mov
loope
int
sub
dec
outs
stos
pop
mov
jl
dec
aam
mov
ins
sar
xor
push
les
push
xchg
push
xchg
shr
(bad)
mov
push
cli
mov
clc
repnz
mov
rcr
in
jae
dec
pop
sbb
js
pop
int
push
xor
jns
dec
inc
repz
xor
jae
mov
or
mov
les
mov
dec
sub
dec
retf
or
or
dec
lock
repnz
js
jo
test
adc
ja
jne
jae
test
enter
push
pusha
xor
es
lods
sub
out
sar
bound
stos
test
mov
sub
lea
mov
add
stos
inc
jge
cmp
pop
and
lds
mov
or
adc
cmps
adc
cmp
jno
int
push
in
and
xchg
ins
loopne
cmp
inc
adc
aam
dec
addr16
fcom
pop
cmps
fucomp
stc
xchg
mov
inc
hlt
stos
fwait
scas
mov
mov
mov
scas
movs
pop
out
jg
mov
mov
and
daa
cmp
or
dec
popa
pop
neg
fmul
push
mov
cmp
nop
jb
or
push
add
inc
pusha
shl
shl
cmc
call
clc
scas
adc
mov
cwde
or
sbb
clc
cmp
mov
mov
dec
js
dec
xchg
mov
inc
les
cli
stc
imul
movs
test
fcom
xor
inc
int
dec
nop
or
dec
push
mov
xchg
fsub
push
pop
jb
inc
add
and
jbe
aaa
call
pop
mov
xchg
out
and
in
sbb
or
pop
or
fs
mul
or
movs
(bad)
cld
jl
in
call
hlt
push
jmp
dec
cmp
add
enter
xchg
ins
jbe
loope
cmp
ins
mov
mov
pop
mov
icebp
mov
adc
cmp
sbb
and
xchg
push
fidiv
(bad)
bound
push
cld
xor
add
and
dec
outs
xor
jmp
xor
retf
sahf
mov
add
cwde
push
fisttp
test
rol
icebp
jge
or
outs
pop
out
cmp
adc
cmp
test
push
push
ins
mov
test
movs
ret
ficom
inc
(bad)
push
xchg
or
sbb
push
jp
stos
cmc
fisub
test
dec
jb
jle
clc
nop
jno
aad
fnsave
rol
ret
scas
sbb
sbb
sub
push
mov
mov
mov
inc
mov
in
mov
adc
repz
push
jecxz
push
in
or
xor
hlt
cmc
jae
scas
dec
les
push
stos
aaa
sar
pusha
popf
arpl
inc
lock
xchg
ret
cmp
sbb
fstp
stos
jns
fdiv
xor
test
repnz
imul
retf
pop
xor
xchg
dec
dec
scas
imul
leave
lds
sbb
mov
add
mov
jg
mov
sub
and
cmps
mov
pop
jmp
or
mov
adc
jp
rcl
push
je
ins
cli
in
push
mov
pop
inc
or
out
push
mov
mov
mov
sar
inc
ret
push
cmp
mov
sub
and
push
test
xor
or
ins
sub
sbb
addr16
push
out
lea
pushf
jno
in
push
nop
mov
das
push
popf
push
sbb
adc
out
pop
out
push
test
or
pop
pop
xchg
je
imul
pop
mov
xor
rcl
jb
mov
xchg
xchg
loopne
pop
retf
loop
pushf
pop
mov
push
add
sbb
je
popa
rdtsc
push
in
js
loopne
sub
lea
cmp
xor
sahf
fimul
repnz
dec
push
fstp
jb
xor
js
scas
ins
repz
sub
mov
push
xchg
mov
sti
(bad)
cmp
dec
aad
xchg
fistp
adc
xchg
pop
ins
push
mov
xchg
or
cmp
push
test
push
repz
loopne
or
int
pop
dec
or
add
jae
shr
mov
shl
addr16
aad
lds
xor
arpl
cmp
(bad)
cdq
mov
sbb
cmc
cld
jno
push
pop
jno
cmp
fld
lds
cmp
fwait
loopne
mov
xor
scas
adc
stos
into
das
pushf
movs
std
sbb
push
push
xor
mov
mov
cs
mov
adc
and
jo
fwait
xchg
or
xor
scas
lea
retf
call
or
jp
jmp
adc
mov
call
int
adc
inc
jp
outs
shr
and
inc
(bad)
xor
aam
jge
push
cwde
mov
aam
xor
jmp
xchg
pop
mov
scas
fstp
dec
ds
(bad)
retf
lods
(bad)
loop
mov
pop
das
dec
jle
sbb
adc
mov
push
fdiv
es
xchg
(bad)
iret
pop
push
pop
add
imul
sti
dec
xchg
sti
cdq
mul
dec
mov
mov
ds
sub
scas
xchg
fst
cld
repnz
xchg
stos
lahf
in
call
les
sbb
push
or
imul
movs
(bad)
pop
xor
cwde
mov
stc
cs
or
and
cmp
push
mov
int
test
push
adc
shl
adc
push
das
or
popf
push
je
xchg
aas
(bad)
imul
loope
fs
or
(bad)
fmulp
mov
jo
push
mov
dec
ins
and
push
adc
jmp
mov
out
mov
test
mov
xchg
test
xchg
xchg
hlt
imul
fcom
mov
cmp
mov
outs
or
mov
jb
jge
fdivr
cmps
xchg
xchg
jp
and
cdq
popf
mov
jns
dec
inc
scas
fld
xor
sahf
imul
iret
push
mov
in
xchg
je
les
(bad)
mov
movs
test
movs
and
jo
popa
mov
lea
test
out
test
adc
daa
xchg
adc
push
push
stc
mov
call
inc
fwait
jmp
into
sbb
stos
rcl
lahf
ret
fild
lock
lds
xor
cdq
arpl
(bad)
mov
sahf
test
lock
data16
jae
lahf
jl
pop
inc
jae
mov
cwde
std
cmp
adc
ret
dec
jmp
mov
outs
jp
sti
adc
cmc
test
shl
jae
jno
arpl
shr
jge
sbb
mov
sub
cmps
in
adc
cmps
lods
retf
pop
rcr
cmp
aam
movs
(bad)
fdiv
sbb
mov
mov
call
aam
xchg
sbb
bnd
shl
inc
or
push
sub
add
ss
jecxz
lock
pusha
fidivr
pushf
adc
adc
or
cmp
adc
xchg
(bad)
xchg
and
mov
js
addr16
mov
cmps
or
mov
mov
aas
in
sub
lock
stos
movs
int
sti
mov
mov
or
sub
pop
outs
cmp
or
adc
dec
or
fnstsw
fild
xchg
movd
mov
test
aad
leave
(bad)
call
cmps
pop
les
fidiv
adc
out
hlt
lahf
mov
jmp
cmp
mov
lods
adc
pop
stos
lea
(bad)
fistp
aam
mov
jp
cld
not
inc
jg
add
sbb
fisub
dec
pop
xchg
sub
ret
inc
shl
fld
xchg
sbb
inc
mov
mov
jl
push
sbb
mov
mov
xchg
dec
cmp
inc
fldcw
lods
cmp
xchg
prefetcht0
adc
sar
ins
int3
cmp
mov
iret
cld
leave
pop
ds
sti
xor
push
retf
inc
add
sub
push
push
(bad)
and
cmps
(bad)
stos
xchg
ja
mov
inc
data16
mov
ret
cmp
push
cmp
rcl
dec
test
cmp
mov
and
repz
sti
pop
movs
adc
push
mov
jne
xchg
hlt
ret
and
int3
mov
pop
sub
(bad)
mov
cli
push
push
sub
sbb
mov
jb
inc
dec
push
mov
cmc
push
mov
pop
outs
inc
(bad)
fdivr
movs
mov
and
jmp
out
mov
jp
test
mov
inc
pop
pop
arpl
push
out
xchg
sub
dec
jge
mov
jb
rcl
mov
mov
retf
lods
inc
ja
scas
xchg
fsub
iret
aaa
int
lea
sub
test
cli
test
aas
fs
retf
xor
add
add
fmulp
xor
ret
push
pop
dec
dec
or
mov
push
add
cmps
pop
sar
stos
mov
sbb
pop
in
test
retf
mov
push
jecxz
mov
fwait
lods
jo
les
xor
cmp
push
sbb
dec
jp
adc
sub
shl
mov
xchg
mov
push
es
imul
dec
icebp
inc
push
movs
mov
mov
sub
not
mov
inc
push
or
jg
dec
fst
outs
bound
push
fiadd
add
adc
ins
movs
pusha
xchg
outs
in
xchg
and
dec
add
fcomp
mov
lea
stc
adc
mov
je
push
and
push
sti
ret
lahf
xchg
add
xchg
push
push
cld
pop
push
jge
push
shl
cld
lahf
(bad)
movs
sti
out
xchg
cld
(bad)
fucomi
add
sub
cmp
mov
cld
nop
push
cmc
ret
cmp
push
(bad)
sub
push
retf
jmp
adc
adc
push
jb
mov
sub
sti
and
xchg
jecxz
sbb
shr
mov
inc
retf
adc
or
adc
mov
dec
mov
repz
rol
and
push
shr
sub
shl
cli
inc
dec
pop
dec
jbe
cmp
and
inc
lock
pop
mov
dec
cld
pop
and
add
sbb
arpl
xor
aas
sub
mov
inc
cmp
add
adc
icebp
sub
mov
stos
loope
xchg
rcl
push
aaa
mov
jle
retf
push
cwde
sahf
imul
call
pop
psllw
mov
and
out
xchg
into
jl
sub
push
arpl
fsubr
inc
sub
arpl
push
stc
xchg
push
dec
fld
pop
in
imul
mov
aad
cmp
(bad)
jecxz
xor
ins
jecxz
pop
jecxz
enter
mov
and
stc
int
test
test
ja
mov
test
xor
mov
cmps
push
mov
adc
xor
call
sahf
push
imul
idiv
int
adc
into
xchg
retf
push
clc
dec
and
bound
mov
xchg
pop
sar
or
(bad)
fild
push
adc
cwde
jne
aad
and
adc
cdq
fwait
pop
and
and
sbb
sti
js
pop
push
imul
or
dec
push
data16
push
inc
jmp
retf
js
in
repz
jns
sbb
xchg
(bad)
dec
cs
jecxz
push
push
pop
sti
out
dec
mov
mov
das
mov
adc
sti
arpl
mov
stos
repnz
inc
fwait
or
add
xor
pop
scas
test
(bad)
jmp
sub
mov
shl
pop
cld
mov
movs
or
jns
pushf
data16
repnz
out
retf
imul
mov
push
xor
ss
(bad)
mov
sub
push
mov
addr16
sub
lahf
push
fwait
in
jne
pop
mov
xor
(bad)
xchg
add
sub
call
pop
cmp
dec
and
or
scas
inc
xor
cld
rcl
cmps
int3
xchg
pop
push
jb
xlat
enter
xchg
dec
jbe
ins
mov
out
es
pop
(bad)
scas
xlat
or
dec
mov
out
mov
daa
xor
and
iret
and
jnp
hlt
adc
push
fstp
pushf
fsubr
cs
into
xor
mov
pop
cmp
jl
icebp
imul
xlat
and
imul
fmulp
dec
sbb
ret
pop
int
movs
jmp
icebp
inc
mov
mov
fs
jecxz
leave
xor
push
mov
sar
stos
xor
aad
scas
dec
nop
das
mov
mov
sti
ja
add
mov
lea
and
xchg
sahf
or
cld
sbb
fs
fbstp
test
outs
popa
(bad)
and
mov
xor
push
lods
imul
jmp
mov
ss
sbb
(bad)
adc
(bad)
fimul
aaa
cmp
dec
bound
sbb
mov
outs
push
xlat
in
aas
mov
cmp
dec
sub
int3
cmc
push
mov
pop
jle
aad
aaa
call
jo
mov
jle
add
mov
int3
mov
mov
mov
sub
add
or
sub
int3
jmp
mov
xchg
jno
cli
cwde
(bad)
cmp
cmp
sub
call
es
retf
push
mov
cwde
inc
ficom
nop
and
or
mov
ins
sbb
mov
pop
loope
jb
or
les
xor
pusha
xchg
inc
mov
push
or
(bad)
jae
push
pop
sahf
add
and
mov
out
out
icebp
movs
cmps
mov
fdivr
ror
iret
fist
in
jb
addr16
pop
out
mov
aad
loop
ror
cmp
cs
sub
mov
inc
lea
dec
add
and
sub
jno
je
loop
and
push
inc
fwait
jl
jae
jmp
scas
mov
int3
enter
mov
inc
adc
hlt
push
loopne
jne
cmp
in
jg
nop
inc
push
in
xlat
test
shl
inc
cwde
out
fucomi
jns
sbb
std
jb
mov
xchg
test
xor
fimul
dec
sbb
mov
xor
push
mov
test
std
iret
ds
pushf
jge
test
jo
popa
ins
inc
sub
sbb
cmps
mov
(bad)
retf
dec
stos
mov
mov
inc
es
mov
shl
test
pop
sbb
arpl
pop
sti
mov
mov
push
stc
outs
loope
iret
xchg
mov
mov
xor
pop
adc
rcr
pop
push
push
loop
push
lods
push
loope
hlt
and
add
(bad)
cld
loopne
scas
sbb
call
ins
mov
jmp
mov
mov
push
xor
jns
push
xor
or
cmp
adc
add
mov
sub
and
inc
les
cdq
push
movs
ins
js
xchg
sub
or
mov
xor
shr
sbb
out
push
push
cdq
test
out
push
and
xlat
lock
lock
lea
les
pop
xor
pop
fcom
xchg
pop
movs
sub
mov
or
(bad)
mov
push
adc
retf
ret
adc
and
repz
rcl
shr
je
xlat
je
repnz
xor
jo
out
repz
or
and
nop
(bad)
cmp
xor
pusha
xchg
aaa
nop
jnp
not
ins
jle
pop
into
cmps
mov
and
mov
jecxz
loop
jno
xchg
mov
(bad)
ret
sar
mov
in
mov
sbb
repnz
inc
cmp
xchg
pusha
repz
inc
ins
cmp
rcl
ror
xor
mov
or
push
adc
jmp
xor
or
(bad)
cs
mov
pushf
push
nop
repz
mov
std
dec
and
movs
fwait
sub
mov
jns
jb
iret
repz
pop
and
pop
lods
enter
and
in
add
out
jne
mov
push
mov
fistp
div
stos
jmp
(bad)
(bad)
push
mov
mov
adc
fsubr
sbb
arpl
jge
mov
dec
dec
xchg
(bad)
sbb
imul
rol
mov
repnz
xchg
int
jge
sbb
lds
sbb
aas
mov
outs
test
xchg
or
cmp
bound
mov
cmp
add
pop
cmp
out
(bad)
aaa
dec
shr
pop
jle
int3
jl
mov
cmps
xchg
(bad)
in
repz
cwde
sbb
(bad)
sbb
movs
shr
jb
jnp
lods
inc
pop
xor
mov
xor
jp
push
(bad)
aad
in
adc
mov
ins
adc
mov
gs
repnz
ins
push
data16
pop
jge
lods
cmp
std
add
add
out
ror
sbb
ss
add
xor
mov
or
sti
call
in
ins
jb
test
xchg
cmc
inc
fisub
jecxz
sti
lock
je
je
push
or
(bad)
in
and
inc
add
pop
xor
lock
nop
jl
retf
or
cmps
fist
test
mov
xchg
jb
fucom
jnp
xlat
cs
mov
xchg
cmp
lds
int
cwde
mov
jbe
mov
xchg
jmp
dec
cdq
push
sar
stos
dec
adc
mov
dec
test
ins
data16
hlt
std
das
test
pop
imul
pop
into
inc
jmp
scas
jo
sub
fs
jmp
mov
mov
lods
in
stos
fs
out
adc
stc
xor
cmp
js
xor
mov
and
popa
add
cmps
push
adc
push
daa
and
xor
cli
cwde
mov
push
push
push
nop
jl
mov
in
aas
mov
stos
and
pop
cdq
ins
jne
aad
fiadd
outs
retf
aad
dec
out
sub
and
mov
js
shl
mov
push
lds
add
loope
dec
jae
xchg
pusha
cmp
clc
adc
sbb
mov
mov
mov
mov
inc
data16
es
loop
jne
dec
es
push
or
pop
test
leave
pop
pop
push
hlt
sub
sbb
push
call
xchg
out
mov
aas
cdq
mov
cli
sub
cs
fcom
fcomp
jae
rol
xchg
inc
inc
cli
or
popa
push
shr
sahf
sti
ins
hlt
loop
dec
inc
sahf
outs
sbb
movs
fs
aas
xlat
inc
and
mov
jl
push
shl
add
js
sub
dec
dec
call
stos
cmp
mov
das
jp
leave
outs
imul
or
in
push
jae
mov
pop
fldcw
ret
xlat
in
inc
pop
in
push
call
sbb
daa
mov
xchg
jp
icebp
mov
fisttp
adc
mov
repz
fadd
outs
sar
imul
out
add
addr16
rcl
cmp
pop
jbe
rol
fistp
outs
test
sub
adc
xchg
adc
popa
mov
xchg
aad
test
sbb
sub
lock
ja
popa
sahf
inc
sbb
mov
cmps
jge
icebp
lahf
shl
les
imul
cmp
adc
lods
cmc
shl
jmp
lds
jmp
gs
fisubr
adc
inc
enter
mov
repz
outs
cmp
inc
or
pop
test
push
call
retf
pop
xchg
push
jl
lods
int3
mov
test
or
fstp
sub
shr
mov
ss
retf
iret
or
jnp
and
jmp
cmp
fisubr
repz
jmp
add
retf
xchg
hlt
xor
adc
repz
sbb
cmps
in
fist
adc
xchg
jb
mov
sahf
pop
add
mov
lahf
xchg
enter
pushf
xchg
in
dec
es
sub
inc
dec
adc
rol
or
cmp
pop
rcr
jmp
pop
imul
scas
ret
imul
cmp
mov
hlt
int3
xchg
mov
dec
adc
sbb
fucomip
sbb
in
test
mov
push
and
lods
mov
pop
inc
push
xor
aas
cmp
cmp
mul
jb
pop
outs
inc
inc
ds
fwait
cmp
jbe
mov
push
pop
mov
repnz
or
aam
mov
pop
jecxz
mov
sub
jle
adc
lds
jo
nop
push
lods
lea
sbb
loop
add
fwait
pop
lds
cmps
stos
inc
jns
jecxz
call
ja
ss
jmp
dec
jne
add
fsubr
in
dec
inc
push
mov
arpl
dec
cmp
inc
mov
rol
jb
test
pop
jp
sub
fwait
xchg
mov
xchg
ret
aad
es
mov
mov
mov
cmp
mov
ficomp
pop
xchg
stos
or
sbb
sub
enter
sbb
dec
add
cs
scas
push
jbe
retf
jnp
push
xchg
cmps
lods
das
pop
jl
mov
pop
cld
jmp
xchg
and
mov
pop
mov
imul
pop
push
in
fninit
and
sbb
dec
gs
cmp
xor
mov
icebp
ret
fidivr
fadd
inc
iret
sub
adc
ja
mov
and
pop
mov
jno
mov
repz
mov
sti
cwde
dec
or
push
lahf
xor
lods
cmp
pop
xchg
jmp
pop
xor
jno
(bad)
mov
push
jae
inc
ds
loopne
repz
int
mov
idiv
in
lods
sets
cmp
lods
mov
rcl
push
dec
cmps
or
mov
pop
call
movs
inc
inc
lea
mov
mov
add
leave
ins
xor
cld
das
mov
pushf
pusha
push
push
fwait
test
mov
cli
mov
inc
xchg
in
dec
mov
and
push
inc
jmp
into
dec
rol
jae
cld
in
ins
test
push
inc
pop
mov
nop
fidivr
cli
cmps
stc
pop
ja
in
adc
mov
inc
adc
setbe
in
aam
push
push
mov
lock
cmp
clc
lea
xor
sbb
daa
dec
stos
ins
stos
scas
push
push
arpl
ins
pop
and
retf
fstp
sub
lods
push
mov
imul
or
loopne
pusha
test
loopne
ficomp
jl
loope
(bad)
or
mov
pop
in
stos
add
imul
push
inc
lea
mov
cmps
inc
cwde
scas
mov
cmp
and
daa
mov
xchg
les
fs
(bad)
fs
popa
add
sub
and
adc
gs
sub
xchg
inc
ja
fnsave
fmul
add
ins
cmps
jne
jmp
test
jp
div
jne
cli
and
sbb
stos
jg
adc
jle
jno
pop
mov
mov
xor
push
push
ins
(bad)
mov
les
lock
or
add
cmc
pop
les
loope
push
adc
lahf
sbb
in
mov
lods
mov
xchg
fs
jge
jns
(bad)
or
push
mov
sub
(bad)
ja
loope
inc
mov
dec
ss
jecxz
push
cmp
call
adc
sti
(bad)
cmp
std
jae
push
cmps
das
jnp
cmps
(bad)
cmp
leave
rcl
mov
pop
push
pop
ins
pavgb
adc
out
imul
aad
xchg
and
push
cmp
jge
or
les
je
je
push
ins
dec
jecxz
cmp
add
jl
mov
cld
push
sub
sbb
mov
inc
mov
xchg
call
mov
sub
cmp
jne
(bad)
fnstenv
xchg
dec
xchg
push
aad
mov
mov
icebp
push
fdivr
cli
push
add
repz
or
rol
retf
stos
inc
xor
dec
mov
add
mov
es
and
(bad)
ins
aas
test
xchg
test
mov
jg
dec
cmps
jno
pop
sub
stc
dec
cmp
sbb
mov
cmps
sbb
add
mul
div
mov
push
jne
shr
lods
cmc
adc
add
nop
push
mov
pop
pop
jmp
xchg
shl
inc
xchg
fwait
adc
dec
xchg
inc
jle
mov
outs
lds
cmp
mov
xchg
mov
int3
pushf
mov
adc
xor
mov
(bad)
add
push
cmps
mov
aaa
shr
push
sbb
repz
xchg
mov
pushf
fild
repz
std
les
js
ficom
mov
lds
or
cld
xchg
jp
loop
mov
repnz
push
mov
sbb
(bad)
push
popa
fwait
or
push
push
div
popa
cmp
xor
mov
xor
rcr
push
jns
aas
aaa
jnp
sar
add
outs
jnp
jne
stos
mov
cdq
aad
inc
inc
jmp
iret
mov
push
(bad)
out
jle
nop
mov
ret
sahf
jo
call
adc
movs
mov
aas
ja
dec
ret
jbe
jp
sbb
das
sub
mov
test
dec
out
pushf
movs
(bad)
and
mov
mov
pop
jne
push
dec
pusha
(bad)
stos
out
dec
fsub
fwait
aaa
pop
adc
inc
jmp
dec
jp
sti
xchg
fwait
sub
or
jnp
sub
test
stos
fst
(bad)
cmc
stos
inc
cld
dec
or
mov
jno
dec
mov
dec
in
jl
lds
mov
sub
int3
jle
xchg
sbb
fpatan
scas
and
out
mov
nop
fsub
and
fdivr
push
push
gs
aad
jecxz
sub
fldenv
pop
xchg
fst
sub
jne
dec
icebp
pop
push
int3
fs
je
inc
dec
mov
mov
inc
ja
dec
xchg
add
aam
inc
mov
add
sbb
fdivr
cmp
lea
rol
or
into
inc
mov
outs
movs
dec
sbb
mov
jmp
adc
ds
shr
add
cmp
in
enter
mov
fcomip
mov
(bad)
adc
lahf
mov
inc
arpl
lods
xchg
test
sub
jae
loope
(bad)
pop
mov
xchg
mov
sub
sbb
push
call
loope
sub
cdq
(bad)
jg
test
mov
sub
push
or
movs
adc
jne
leave
aad
ja
adc
repnz
mov
pop
xor
jns
mov
sub
mov
out
add
mov
jae
dec
pop
fsub
lea
push
dec
mov
xchg
call
jo
jae
mov
sbb
dec
hlt
ret
jnp
cs
dec
lock
mov
adc
or
jmp
call
sbb
or
sbb
out
push
div
fistp
push
pop
ja
sbb
mov
(bad)
sub
cmp
aam
jmp
jmp
mov
add
adc
in
inc
ds
stc
mov
js
repz
popa
xchg
pop
mov
or
leave
in
mov
dec
or
das
into
push
jno
icebp
imul
or
push
fwait
sbb
mov
xchg
gs
(bad)
iret
loope
icebp
mov
aad
test
jnp
and
mov
fsubr
(bad)
stc
xor
xchg
int3
jns
out
test
out
adc
fmul
xchg
lods
ja
fadd
push
clc
gs
xor
jle
popf
int3
arpl
shl
jbe
lea
fldz
fist
and
add
add
add
popf
jns
data16
cmp
into
stos
xor
inc
cmp
pushf
pop
pop
movs
rcr
sub
mov
movs
sub
push
dec
mov
cmps
imul
pop
into
mov
push
call
push
sbb
jns
and
loope
push
xchg
lahf
jno
cs
sub
sbb
call
jl
push
mov
mov
and
xchg
inc
out
adc
dec
and
pop
xchg
adc
push
pushf
push
xor
add
adc
pop
adc
cmps
xchg
mov
rcr
and
(bad)
xlat
cmp
out
dec
pop
push
pushf
cmp
jno
clc
mov
cmps
lahf
xor
lods
rcr
retf
mov
mov
dec
and
push
mov
dec
inc
adc
dec
adc
mov
(bad)
lahf
pushf
repz
mov
dec
and
push
dec
rol
les
cld
bound
shl
xchg
mov
call
fist
mov
push
nop
mov
pushf
jmp
inc
add
test
cdq
dec
cmps
xchg
adc
inc
icebp
loop
xchg
mov
aaa
push
xor
inc
inc
and
and
push
das
popf
int3
xor
sub
jge
mov
mov
pop
pusha
loope
add
xlat
dec
push
cs
cmp
in
test
bts
int3
jmp
push
test
mov
mov
xor
add
pop
pop
shl
inc
pop
sub
shl
loope
fld
outs
pop
push
sbb
loope
cmc
fisttp
loope
mov
into
mov
sub
shr
fld
ret
scas
iret
cmc
push
aad
xchg
pop
mov
push
xlat
dec
sbb
repz
jp
pop
in
and
div
xor
jb
outs
jmp
or
push
retf
ret
retf
call
sbb
jae
cmp
retf
mov
pop
sbb
sbb
inc
enter
pmaxub
retf
dec
jp
leave
mov
(bad)
fimul
push
pop
sbb
push
shl
pop
mov
inc
inc
cld
and
es
xchg
std
int3
pop
imul
lds
aad
add
inc
cwde
in
inc
arpl
jecxz
sub
rol
push
jae
int3
sub
frstor
daa
leave
add
ficom
mov
pop
push
leave
xchg
aas
test
push
scas
lods
cmp
xor
sbb
adc
outs
mov
add
test
pop
sti
or
loope
(bad)
add
fidivr
pop
or
inc
mov
jl
inc
mov
test
das
xchg
sbb
dec
outs
mov
(bad)
dec
cli
cmc
jg
movs
pop
adc
pop
iret
xchg
xlat
cli
pop
dec
mov
inc
jmp
mov
xor
and
aaa
ss
scas
gs
retf
popf
mov
ret
mov
cli
es
sub
pop
push
in
nop
test
in
pop
push
inc
lods
or
jp
les
ret
mov
adc
ja
push
mov
xor
mov
jns
imul
rcl
ins
jnp
(bad)
(bad)
sbb
sbb
jg
sub
sub
mov
cmp
sbb
movs
pop
or
fsub
xchg
mov
push
rcl
and
idiv
jo
mov
mov
shl
mov
call
loop
or
loope
push
arpl
ss
cs
lea
cmps
es
mov
ds
sub
sbb
cmp
icebp
ins
aaa
imul
aas
adc
or
push
dec
sub
adc
ret
pop
outs
jg
pusha
icebp
cmc
shl
cmp
adc
ret
jne
mov
shl
jne
dec
push
xchg
dec
sub
popa
(bad)
mov
ret
(bad)
fld
or
or
xchg
retf
xor
xchg
add
sub
jb
push
neg
test
add
stos
test
fs
aad
dec
cmc
or
sbb
mov
or
and
int
jl
loop
jae
stos
outs
repz
mov
mov
shr
sahf
enter
sbb
retf
mov
mov
les
mov
call
mov
clc
aas
ins
shl
shl
sbb
call
out
test
mov
jmp
rol
imul
ficomp
pop
movs
xor
mov
mov
push
cmps
fsubr
mov
and
shl
es
mov
out
sub
push
test
jbe
(bad)
push
mov
sbb
inc
mov
mov
dec
or
mov
xchg
(bad)
pop
dec
push
mov
sub
add
mov
xor
cwde
xchg
mov
ror
outs
jp
neg
lea
push
mov
push
cwde
cld
imul
push
scas
mov
xchg
fiadd
aaa
mov
repnz
leave
mov
stc
or
push
jge
stos
sar
in
out
and
or
mov
adc
movs
push
bound
sub
fucom
gs
xor
fnstsw
jecxz
or
pushf
cmps
jnp
jne
ret
fcomp
hlt
int
fmul
pop
paddq
ret
js
jne
mov
push
data16
lock
stc
ror
jae
(bad)
sahf
(bad)
mov
xchg
add
popa
out
std
inc
mov
ror
aam
loopne
(bad)
mov
dec
jnp
stos
outs
mov
mov
fbstp
push
nop
addr16
cli
pop
retf
and
sbb
enter
mov
adc
sbb
fimul
movs
sub
jecxz
pop
xchg
push
add
cmps
shl
dec
dec
inc
sar
add
mov
or
inc
mov
cmp
outs
fmul
imul
or
bound
fwait
xor
pusha
xchg
pop
mov
or
scas
jle
arpl
stos
sbb
and
xchg
iret
add
js
imul
dec
call
ret
fdivp
push
dec
gs
cwde
jg
xor
fldenv
or
not
rol
in
(bad)
push
fwait
push
ja
int
loopne
adc
(bad)
sti
neg
xor
xchg
push
test
outs
add
aas
ss
ds
pop
or
mov
sub
xor
xor
pop
mov
pop
mov
add
mov
fcom
dec
sub
arpl
out
mov
fs
and
mov
lock
dec
push
mov
pop
jg
jp
xor
mov
pop
nop
pop
mov
loopne
mov
mov
cdq
(bad)
jmp
or
mov
rcr
xchg
add
pop
dec
cs
movs
xlat
call
aaa
sub
xchg
cmp
ja
mov
jp
push
push
cli
ins
mov
bnd
push
pop
push
inc
mov
dec
mov
out
movs
hlt
sub
fldcw
sub
das
lahf
xchg
cmp
and
inc
mov
sti
pop
rol
xor
loop
push
les
rcr
ret
inc
in
and
bound
popf
sub
pop
int3
fstp
cmp
stos
jmp
(bad)
push
test
and
push
jp
push
jnp
aas
stos
scas
imul
dec
adc
lahf
jmp
loope
mov
adc
cmovp
ins
add
not
add
dec
mov
xor
pushf
lock
sub
ja
popf
jb
gs
test
fwait
je
and
out
cdq
neg
mov
les
call
push
cmps
xor
or
jge
pushf
jle
adc
pop
pop
pop
sbb
sti
adc
and
mov
pop
cmp
cmps
xlat
ret
fmul
ds
out
int
movs
mov
cdq
jnp
cwde
sub
ud1
push
rcr
inc
jbe
jle
push
fmul
sub
dec
and
add
jne
out
mov
and
movs
mov
adc
inc
retf
lahf
cwde
test
(bad)
loop
movs
dec
lods
xor
and
and
xchg
fist
(bad)
or
cmp
xchg
ja
popa
scas
movs
repz
jle
arpl
push
mov
into
xor
pop
pop
retf
test
inc
popf
or
mov
inc
jno
je
fs
sahf
popf
retf
mov
aad
mov
int3
outs
(bad)
outs
inc
scas
mov
aas
js
lea
arpl
cwde
mov
xchg
jno
sub
push
push
mov
dec
in
les
data16
sub
jge
bound
ds
or
iret
repnz
ja
sahf
iret
adc
jno
fmul
bound
add
arpl
xlat
and
xchg
push
je
into
scas
mov
cmp
push
push
imul
xchg
pop
xchg
mov
stc
inc
mov
pop
add
xor
stos
out
mov
fld
je
iret
mov
adc
je
mov
call
cmp
push
dec
data16
in
push
pop
addr16
mov
dec
xor
hlt
pop
outs
sti
mov
xor
or
sbb
and
cmp
test
pop
jecxz
inc
push
out
mov
lock
cwde
repnz
bound
int
add
in
clc
or
(bad)
jge
mov
push
xchg
jl
push
adc
push
ins
pushf
out
cmp
test
cli
stc
xor
sub
and
dec
push
test
idiv
daa
loope
pusha
ret
gs
jns
xor
sti
and
jnp
adc
adc
jb
out
icebp
pop
(bad)
pushf
lahf
retf
mov
jmp
pop
sub
jns
mov
push
(bad)
mov
dec
cmp
outs
fdivr
push
pop
adc
mov
ins
outs
xchg
adc
sti
adc
(bad)
jp
dec
inc
jle
jle
mov
dec
mov
fdivr
xor
jb
add
pop
push
ss
push
mov
or
mov
pop
aas
dec
mov
jbe
push
mov
push
loopne
dec
cwde
test
add
adc
jge
cmp
std
mov
or
cmp
pop
mov
cmps
add
push
sub
xor
jp
adc
inc
je
lock
cmps
daa
pop
cld
pop
push
jecxz
(bad)
cmp
jp
mov
pop
repnz
mov
in
mov
sbb
(bad)
sbb
sbb
ret
xor
push
pop
ror
arpl
cmp
retf
push
pop
retf
std
dec
clc
xlat
cmp
leave
lods
cli
adc
mov
pop
mov
adc
cmp
in
mov
cmps
xor
call
adc
cmps
sbb
and
dec
fnsave
add
inc
iret
adc
lahf
jb
push
sti
ins
mov
mov
and
adc
in
add
ret
mov
out
test
xor
jo
adc
push
ror
and
mov
lods
sub
popw
loop
add
clc
rol
cmps
dec
or
out
mov
mov
sbb
das
in
sbb
call
and
jmp
ror
xor
or
jb
retf
xchg
mov
jmp
pop
xor
out
fwait
or
cmp
push
cld
xchg
xchg
xchg
jmp
repz
(bad)
pop
test
xchg
sahf
scas
repz
std
push
cmp
pop
fdiv
sbb
add
pushf
shl
aaa
adc
pushf
xor
in
arpl
in
lods
cmp
mov
mov
xlat
rol
fcom
cli
jnp
cwde
in
hlt
jp
sub
stos
mov
xor
push
mov
scas
addr16
mov
adc
loopne
scas
rol
outs
push
out
fcomi
sar
mov
imul
sar
enter
jecxz
sbb
add
adc
xchg
pop
push
or
jbe
test
mov
out
retf
and
cs
and
pop
xchg
(bad)
mov
stc
jae
cmps
stc
movs
fmul
mul
lods
dec
cmps
sub
in
icebp
jmp
mov
gs
lods
dec
xor
popa
pop
mov
mov
mov
ror
data16
test
lods
mov
test
mov
into
ins
in
es
in
xchg
pop
cld
pop
ret
or
mov
xlat
adc
sub
repnz
jge
sbb
out
ficomp
mov
imul
scas
fs
cmp
enter
sub
mov
sahf
fwait
dec
jno
popf
dec
pop
dec
in
add
adc
mov
push
mov
adc
inc
rcl
xchg
sub
dec
leave
pop
out
push
cmp
fwait
xor
mov
pop
dec
stc
mov
fwait
mov
mov
jae
jg
cmc
cld
sub
mov
or
cmp
ret
stos
inc
sbb
push
sbb
fcmovnb
cwde
imul
js
mov
lock
out
nop
outs
popa
icebp
jb
cdq
pop
les
pop
sub
fstp
cmp
test
rcr
lea
jno
stos
jecxz
rcl
call
jmp
out
or
out
xchg
movs
and
iret
cmps
adc
js
mov
jno
ins
cdq
ds
sbb
outs
jns
and
cmp
ins
xchg
pop
data16
loope
push
sub
mov
sub
enter
jb
iret
sti
shr
adc
inc
shl
imul
add
add
repz
sub
ja
jg
sub
push
(bad)
mov
pop
cld
mov
xor
sbb
clc
mov
outs
(bad)
jb
cmps
leave
cli
fnstenv
out
out
retf
jnp
cmps
mov
cmp
or
cmp
mov
ror
aaa
sbb
fwait
jno
sub
ret
mov
popf
cmp
jns
in
ror
mov
xchg
inc
inc
cmps
call
xchg
aam
jge
pop
jle
xor
mov
retf
sub
add
or
addr16
fsub
lock
inc
adc
adc
mov
(bad)
call
jo
daa
(bad)
sub
push
arpl
xchg
jae
mov
data16
mov
std
xchg
and
lea
pop
sub
inc
(bad)
lods
call
stc
ins
dec
mov
clc
adc
mov
sub
sub
dec
push
jmp
adc
xor
jns
mov
xor
mov
pushf
fbstp
or
dec
ret
stos
int
adc
jl
push
pop
test
jp
lock
and
push
ror
cld
push
cmc
addps
and
ror
int
pop
cmp
or
out
jl
bound
shl
(bad)
fnstenv
mov
mov
mov
sub
nop
iret
test
jmp
and
stos
mov
sbb
clc
repnz
mov
fwait
dec
into
or
sub
test
or
xchg
xchg
fadd
neg
ins
rol
push
mov
push
pop
xchg
mov
sub
into
fild
adc
xor
fisttp
jmp
je
jns
sbb
das
push
or
adc
pop
psubusw
repnz
cli
xor
out
pop
adc
mov
pop
add
fs
xchg
retf
neg
pop
mov
and
or
add
(bad)
loop
fdiv
xchg
pop
pop
jb
xchg
repz
add
push
jbe
inc
(bad)
fimul
and
test
xor
jp
add
popf
mov
mov
cmp
loope
jg
add
cmp
icebp
data16
stos
std
scas
mov
mov
adc
out
movs
jne
loope
cmp
inc
movs
mov
adc
sbb
(bad)
cmp
out
fidiv
jno
je
test
pop
xchg
lahf
sub
mov
sbb
call
aam
jp
rcl
shl
sbb
lock
cli
movs
xchg
push
pop
(bad)
inc
je
rcl
mov
or
push
mov
or
inc
pop
add
jmp
mov
push
sbb
fs
dec
addr16
movs
mov
and
sbb
(bad)
out
mov
clc
cld
les
ds
(bad)
push
and
int
push
mov
(bad)
mov
mov
stc
out
popa
push
pop
sub
cmp
ins
jl
jb
cmps
jae
cmp
pop
shr
fs
sub
cdq
xor
push
(bad)
hlt
pop
sahf
xlat
sub
sahf
pop
dec
call
push
xchg
pmaddwd
sub
sahf
adc
jp
in
jnp
xchg
fimul
test
(bad)
fdivp
sar
imul
mov
sti
pop
push
fbld
mov
and
test
dec
and
stos
rcl
push
(bad)
mov
data16
mov
adc
sbb
ret
add
inc
push
xlat
int
pop
inc
(bad)
mov
data16
out
mov
mov
(bad)
lods
je
in
imul
nop
das
cmp
xchg
test
add
jbe
imul
mov
fsubr
xchg
jns
mov
lock
pop
movs
outs
pop
cwde
ror
pusha
jnp
outs
lea
inc
movs
or
sub
or
mov
xchg
push
clc
retf
addr16
cwde
mov
jno
call
pop
loop
or
and
cmp
dec
cmps
or
movs
in
out
mov
pop
jb
in
sub
xor
xor
shr
cmp
inc
xchg
int
in
jno
mov
cmp
xor
cmp
adc
mov
ror
adc
mov
push
sub
jg
mov
adc
daa
mov
push
cmps
cs
dec
lods
inc
inc
xchg
cmp
pop
pmulhuw
mov
jo
add
scas
mov
ret
sbb
outs
aas
ds
push
mov
mov
fst
imul
daa
fstp
pop
push
mov
js
clc
push
(bad)
mov
mov
ror
aad
pop
push
dec
cmp
dec
pop
jae
cs
push
popa
test
ret
xchg
cmps
ds
mov
add
in
(bad)
mov
xlat
das
dec
aas
add
aad
je
rcr
je
imul
cmc
cmp
sub
jmp
bound
and
add
add
cmp
lds
movs
xchg
jmp
cmp
fist
xor
aaa
shr
pop
stc
fmul
mov
and
popa
xor
xor
out
and
les
xchg
xchg
sub
mov
lahf
outs
dec
ins
pop
mov
sti
loopne
or
add
out
inc
int
inc
pop
pxor
test
aaa
push
rol
retf
mov
xchg
mov
xor
xor
dec
lods
repnz
js
xchg
retf
inc
ret
cmp
sub
cmp
sub
inc
sbb
pop
and
mov
jae
sub
lods
and
add
jne
mov
xchg
mov
(bad)
retf
mov
mov
es
imul
xor
ins
stc
enter
shr
jge
pop
inc
cmp
inc
sub
mov
cmps
sbb
mov
std
or
(bad)
sbb
(bad)
test
ja
pop
lahf
(bad)
add
js
and
xchg
sbb
adc
jae
adc
mov
add
sub
dec
(bad)
cmp
cmp
movntq
lahf
sub
mov
iret
pop
dec
add
cmp
sahf
idiv
and
int3
sbb
jo
xchg
jle
mov
push
fmul
int
shl
mov
adc
mov
ins
push
rcr
pushf
aam
jne
cmp
je
add
mov
sbb
sub
imul
cld
sub
aas
ror
jp
push
test
adc
inc
sub
pop
pushf
dec
imul
inc
push
mov
test
fprem1
sub
push
cdq
push
icebp
or
sti
shr
sti
jge
push
div
or
add
repnz
mov
enter
in
mov
xchg
sub
bound
fsub
cwde
iret
(bad)
repz
mov
or
xor
xor
lahf
push
mov
cmp
ficomp
sbb
add
mov
push
sbb
rcl
or
mov
mov
and
pop
jns
inc
sub
aaa
sahf
les
(bad)
hlt
adc
out
cmp
inc
popf
inc
in
push
sti
mov
cmp
fcmovnbe
addr16
loope
bound
shl
out
xchg
and
fcomi
xor
pop
mov
mov
dec
push
call
jl
lods
dec
out
out
push
sub
(bad)
mov
in
mov
jecxz
jg
lea
pop
push
push
bound
add
pop
(bad)
xlat
ds
les
xchg
and
fdivr
outs
push
lds
lods
inc
pusha
icebp
fcomi
and
imul
pop
push
cmp
mov
loope
(bad)
pop
stc
or
push
push
and
popa
mov
aam
dec
ss
imul
lock
dec
push
test
jbe
jno
scas
mov
test
mov
stos
aam
dec
cld
into
fld
lds
jg
xor
or
inc
pop
enter
retf
xor
sub
fstp
pop
ins
pop
jae
or
ror
loope
push
test
dec
and
ja
ror
sar
mov
or
movs
adc
daa
sbb
sar
push
out
stos
pop
enterw
(bad)
mov
dec
mov
jge
mov
(bad)
push
stos
ja
ret
and
mov
shr
shl
adc
cwde
adc
stos
pop
sub
cld
fdiv
not
(bad)
pop
push
cs
dec
or
and
and
mov
(bad)
out
shl
push
and
outs
in
dec
mov
mov
test
lds
scas
sar
ss
(bad)
jmp
mov
adc
xor
mov
iret
jge
in
dec
cmps
pop
xchg
es
sub
xchg
jg
xor
mov
inc
dec
push
xchg
(bad)
mov
push
ins
cdq
mov
cs
pop
mov
(bad)
mov
cmps
ins
test
xchg
mov
clc
(bad)
fisubr
fcomp
xor
push
push
retf
ins
fwait
or
inc
imul
cmp
sbb
imul
inc
jecxz
test
int
mov
cdq
push
mov
add
cmp
popf
sub
dec
call
repnz
inc
inc
stos
loop
ror
js
pop
leave
inc
sub
add
sbb
xchg
cs
mov
pop
bt
push
call
shl
sbb
fst
out
aas
cmp
dec
in
jae
cmps
sub
push
shl
xor
adc
std
loop
addr16
inc
addr16
stos
cmc
xchg
inc
arpl
sub
add
call
adc
xlat
pop
aam
es
cmc
loopne
xchg
fldcw
or
push
push
sub
fild
push
sbb
and
arpl
out
es
lock
pop
inc
cmp
nop
jmp
mov
mov
je
int
cs
(bad)
out
js
js
push
(bad)
fbstp
push
add
inc
fst
fnstenv
inc
mov
out
mov
mov
sbb
pop
xchg
xor
mov
lds
addr16
movs
ret
adc
mov
lea
push
out
nop
out
cmps
std
dec
(bad)
cld
scas
stc
mov
js
xchg
mov
test
push
pop
push
in
jecxz
sub
sti
mov
into
cmp
test
push
adc
data16
lock
dec
xchg
xlat
inc
xor
push
adc
dec
pop
xor
xchg
jo
mov
mov
stc
mov
sbb
mov
fisub
std
out
bound
(bad)
jnp
inc
(bad)
lahf
in
jae
stc
pause
cdq
mov
add
neg
stos
stos
mov
xchg
movs
dec
retf
mov
loope
jno
test
sub
nop
loopne
scas
xchg
ret
xchg
xchg
jb
fsubr
wrmsr
call
jb
jns
icebp
mov
idiv
jb
adc
mov
cdq
or
and
les
movs
je
mov
rcr
and
mov
xor
stos
outs
ins
dec
adc
push
cli
and
cmp
dec
pop
outs
clc
adc
sbb
movs
add
push
adc
loope
popa
cld
(bad)
inc
pop
movs
lahf
fild
outs
daa
push
test
mov
add
out
(bad)
aas
es
push
pop
js
adc
aam
pop
sub
rcr
fcomp
or
inc
adc
mov
mov
xchg
sbb
out
add
mov
xchg
and
shl
daa
sbb
adc
or
pusha
int3
gs
out
fiadd
mov
(bad)
in
pushf
imul
std
fs
sbb
cmp
nop
cwde
(bad)
addr16
fisub
sbb
(bad)
push
pop
sbb
test
lds
call
stos
daa
xchg
pop
cmp
inc
sbb
adc
or
aas
xor
sub
and
xor
mov
jns
mov
(bad)
inc
pop
fistp
repz
dec
mov
sbb
sub
rcl
lock
add
pop
push
or
in
fsubr
das
and
movs
call
xchg
fwait
cs
les
mov
mov
or
ins
push
(bad)
dec
loop
sbb
ins
pop
in
icebp
mov
jmp
mov
in
ds
adc
jae
fcmovnb
mov
lds
nop
test
and
test
jbe
dec
jb
cmp
loopne
leave
mov
js
ror
pop
lock
mov
dec
shl
aaa
dec
int3
ret
cmp
cmps
adc
(bad)
mov
xchg
rcr
popf
and
sbb
dec
jnp
(bad)
jge
(bad)
adc
mov
push
(bad)
and
pop
jmp
je
pop
mov
mov
mov
mov
xchg
fstp
or
mov
js
pop
mov
adc
jmp
fadd
push
inc
add
je
int3
xlat
dec
ret
mov
jo
ins
fbstp
aas
xchg
ins
xor
cld
and
mov
dec
dec
rcl
jb
adc
xor
(bad)
cmp
push
call
cmp
ftst
cld
in
sub
out
icebp
loop
repnz
out
repnz
mov
sti
ret
inc
(bad)
xor
dec
stos
push
adc
inc
push
dec
jo
fs
inc
adc
scas
push
xor
dec
test
mov
inc
loopne
popf
call
inc
getsec
jnp
into
movs
jne
jbe
dec
imul
jb
mov
or
push
icebp
ins
jl
dec
push
out
loope
cwde
enter
jnp
ds
stc
outs
dec
push
fldcw
push
mov
mov
add
ror
mov
dec
ret
cs
push
ja
test
jno
xor
data16
xor
(bad)
cld
scas
stos
pop
pop
mov
sub
lock
add
adc
test
mov
pop
sbb
mov
pop
aaa
mov
and
xor
inc
sbb
and
xchg
in
pop
push
rol
fnsave
mov
and
push
adc
and
retf
(bad)
rol
sbb
rcl
xchg
push
add
in
cmp
push
lock
cmps
xchg
xchg
outs
xor
xchg
xchg
es
pop
shr
push
sbb
retf
jge
jbe
ret
fstp
bound
xor
mov
inc
dec
mov
scas
ret
retf
mov
das
sub
idiv
mov
mov
(bad)
sub
mov
fiadd
stc
fs
push
js
imul
daa
push
out
sub
iret
out
jbe
add
into
cmp
movs
add
iret
or
out
sub
cdq
jnp
stc
sbb
stos
dec
adc
push
xchg
sub
mov
inc
fisttp
sub
icebp
test
push
pop
jne
jb
pop
mov
daa
xor
xor
cmps
cmp
or
add
add
or
bound
gs
iret
xchg
dec
sbb
jmp
ins
pusha
clc
jp
(bad)
jo
mov
add
fstp
les
lods
rcl
icebp
imul
mov
ins
add
xchg
add
push
fcomp
lea
loopne
pusha
test
fwait
inc
pop
push
jmp
daa
and
or
mov
xchg
push
fwait
mov
push
movs
push
dec
cmp
and
imul
frstor
jo
(bad)
push
xchg
pop
ror
dec
call
mov
mov
push
sub
mov
add
bound
or
test
mov
nop
pop
pop
sti
rcr
(bad)
fld
ja
xor
inc
cmp
cmp
mov
cmp
sbb
sti
repnz
jmp
xchg
sub
fwait
arpl
sbb
shl
call
lods
mov
adc
adc
xchg
mov
jno
dec
mov
movs
popf
fiadd
jns
xchg
repnz
push
inc
mov
shl
aam
mov
sub
cmps
repz
mov
imul
pusha
lea
or
rol
xchg
popf
dec
inc
stc
fs
fcmovnbe
mov
or
or
nop
xchg
jmp
xchg
adc
lods
adc
stos
inc
data16
icebp
mov
fbld
or
in
enter
sub
dec
and
in
les
test
inc
or
inc
add
gs
gs
test
in
les
sti
fmul
fidiv
enter
push
fild
sbb
es
adc
pusha
icebp
clc
pushf
data16
xchg
sub
xchg
retf
xchg
adc
popa
and
sbb
xor
mov
sub
sub
inc
mov
in
cmp
cmp
fnstsw
ds
in
imul
ins
jle
sub
sub
jp
out
jle
dec
je
fwait
cmp
popa
hlt
popa
jne
pusha
into
lods
adc
hlt
ret
outs
test
mov
dec
cwde
rcr
push
jb
push
jmp
mov
mov
das
cmc
cmp
and
dec
adc
pop
push
mov
jecxz
xor
add
mov
xchg
push
mov
mov
daa
sub
xchg
pop
fwait
aad
add
mov
fistp
inc
cmp
mov
jb
xchg
div
adc
xchg
shr
pop
in
jno
jbe
pop
arpl
cmps
ds
and
ss
xchg
int
mov
sar
test
inc
pop
popf
mov
jp
loopne
adc
shr
in
xchg
push
jg
pop
or
push
and
mov
mov
jne
ror
xchg
lods
nop
add
in
inc
aam
cmp
mov
stos
out
push
jl
cmc
sbb
jnp
jno
test
(bad)
repz
push
sbb
call
out
int
std
pop
into
xor
rcr
mov
test
int3
mov
add
test
retf
js
arpl
mov
push
test
pop
pop
and
scas
mov
adc
cld
sahf
inc
hlt
xor
cmp
dec
loope
iret
dec
mov
int3
pop
loope
fdivr
sahf
cmc
inc
mov
sahf
xchg
mov
push
loopne
retf
cwde
or
sbb
pop
cdq
push
jle
shr
push
jmp
call
xchg
leave
outs
jns
push
data16
pop
mov
push
popa
pushf
push
bound
mov
iret
popa
loopne
sub
mov
gs
scas
sbb
mov
ffree
sub
cdq
adc
jg
or
jge
and
sub
sbb
jg
xchg
jecxz
jbe
ret
inc
push
fbld
cmc
out
js
stos
xor
cmp
ret
jecxz
sar
pop
addr16
push
mov
inc
retf
fstp
xchg
or
and
daa
mov
les
or
mov
jp
push
jno
fsubr
into
push
repz
in
mov
iret
xor
push
mov
inc
jmp
loopne
test
jns
push
sbb
push
ficom
(bad)
xor
xor
pusha
or
adc
and
retf
adc
aaa
inc
adc
nop
mov
xchg
sti
cmps
ja
dec
sub
mov
lods
add
or
in
icebp
xchg
in
mul
mov
es
neg
test
mov
jo
pop
mov
mov
ds
les
(bad)
out
ror
fs
mov
mov
adc
lds
in
xor
std
xor
xchg
sbb
cld
nop
xchg
(bad)
jns
gs
jge
stos
ds
push
or
xor
cli
cli
mov
xor
jo
mov
push
push
ret
sbb
cdq
test
push
push
pop
jle
and
inc
sub
cmps
mov
imul
adc
into
out
ret
add
(bad)
retf
inc
div
fmul
push
hlt
scas
addr16
jnp
pop
xchg
push
(bad)
mov
jbe
push
inc
repz
in
sub
cmp
out
loopne
xor
push
sbb
inc
mov
inc
(bad)
push
es
fwait
inc
push
xchg
pop
pop
push
test
loope
ds
repnz
fcmovne
cmp
sbb
or
sbb
test
sub
inc
sbb
inc
pop
mov
jg
add
int
cwd
push
mov
retf
icebp
lods
or
inc
pop
test
pop
adc
add
into
pop
xor
cwde
mov
or
xor
inc
rcr
mov
js
xchg
inc
addr16
push
(bad)
fmulp
lock
xchg
stos
sbb
mov
adc
mov
mov
jp
loopne
sahf
addr16
mov
push
lock
stc
jb
push
mov
jmp
push
std
lock
shr
xchg
dec
push
cld
inc
push
je
out
test
aad
inc
xchg
or
push
mov
add
inc
cli
jae
fisub
cmp
cmp
xor
or
not
mov
sbb
jge
ffreep
(bad)
push
aad
out
shl
cmp
scas
mov
pop
enter
add
xchg
mov
outs
inc
inc
leave
cmp
shl
enter
adc
push
ds
call
and
inc
test
mov
jmp
push
adc
push
push
and
popa
shl
int
xchg
or
fld
shl
mov
sbb
inc
aad
sub
push
es
or
sub
push
add
sbb
out
mov
lods
sub
push
mov
out
loopne
mul
out
push
imul
call
jo
loope
push
push
outs
outs
push
jnp
add
das
pop
cmp
inc
imul
mov
jae
aam
jp
loope
jl
lods
cli
sub
pop
or
pop
aaa
mov
add
sbb
mov
mov
daa
movs
jg
je
jg
sbb
mov
sbb
cmc
jg
outs
mov
jmp
popf
retf
repnz
mov
xor
mov
ins
rcr
retf
xlat
xchg
stos
xor
cli
pop
in
cmc
push
or
push
je
out
rcr
cld
call
mov
dec
push
xchg
call
ror
jmp
and
out
inc
adc
hlt
repnz
push
sub
push
mov
xor
clc
push
(bad)
inc
(bad)
adc
xchg
jmp
sub
(bad)
out
cdq
and
mov
into
sbb
pop
fistp
adc
clc
in
dec
outs
sub
mov
mov
cmp
cmp
xchg
cdq
cmc
pop
push
adc
fldcw
test
lock
aas
aaa
rcl
and
mov
fs
dec
pop
jns
mov
fistp
push
loop
jge
aad
add
sub
xor
scas
adc
or
xor
push
push
mov
push
add
jno
push
inc
dec
je
ret
mov
push
not
mov
jl
push
out
cmp
add
(bad)
fidiv
xchg
not
stos
jne
clc
das
dec
(bad)
jg
ins
add
imul
pop
fwait
lock
mov
out
test
into
je
jmp
dec
or
lds
sub
test
jmp
loop
jo
mov
dec
icebp
cmp
movs
lahf
pop
mov
push
enter
imul
dec
jmp
test
test
out
mov
dec
or
pop
mov
mov
dec
out
sub
jb
shl
sbb
mov
push
test
mov
cmp
ss
retf
cmc
mov
loopne
lods
mov
ret
sti
(bad)
shl
loop
clc
(bad)
test
jp
jbe
fisub
or
and
mov
mov
push
mov
and
jecxz
cmp
das
cs
xor
jns
loopne
retf
sti
in
lock
mul
mov
shr
pop
outs
mov
lods
inc
or
jle
sbb
sub
cli
leave
mov
push
(bad)
shr
dec
(bad)
les
xor
push
mov
sbb
mov
xchg
push
bound
scas
jnp
lods
loop
ja
ss
mov
div
push
jne
out
xchg
xor
xchg
cs
cmp
xchg
push
out
lds
cmp
repz
cmc
jmp
sub
add
les
mov
popa
push
test
mov
shr
xor
mov
mov
add
scas
das
xchg
cmp
cmp
cs
add
mul
jo
in
inc
mov
nop
mov
int
std
mov
or
ins
adc
call
pusha
call
or
pusha
mov
gs
sub
in
and
mov
pop
sub
sbb
mov
xchg
jecxz
push
xchg
and
fsubr
pop
xchg
ret
sub
pop
scas
movs
shl
mov
jns
nop
das
cld
cs
dec
jne
jmp
and
sbb
sub
dec
xor
jae
mov
inc
cmps
xor
push
xor
jno
sbb
dec
fwait
int
outs
mov
mov
ins
jne
jp
outs
add
(bad)
xor
or
retf
jae
sbb
repnz
xchg
fcomp
movs
mov
xchg
xor
daa
xchg
cmp
mov
ja
xchg
scas
out
lds
out
push
add
dec
jno
jp
(bad)
jnp
fdivr
and
daa
dec
or
int3
iret
fwait
out
jno
jp
loopne
test
xor
fnstenv
sbb
dec
inc
or
test
cmp
(bad)
jae
into
push
in
adc
mov
xlat
xlat
test
jg
pop
xchg
mov
frstor
cmc
pop
mov
jbe
pusha
std
push
push
mov
xchg
aam
rcr
dec
fst
mov
adc
sub
sub
add
adc
sbb
push
(bad)
or
dec
xchg
push
test
push
push
push
xchg
xchg
xor
mov
and
outs
popf
push
movs
inc
sar
enter
outs
daa
imul
ins
ficom
xchg
ficom
in
mov
and
sub
ins
dec
mov
mov
fcom
clc
in
das
scas
mov
jbe
loope
dec
loop
pushf
sti
or
pop
pop
mov
out
push
sahf
cmps
cmps
out
es
leave
test
pusha
dec
int3
stc
not
movzx
sbb
loop
ucomiss
jno
sti
stos
push
push
idiv
test
and
mov
add
mov
mov
jge
sti
sbb
movs
in
push
(bad)
int
shl
outs
push
test
cdq
sbb
mov
sbb
sub
and
jg
xor
xchg
pop
and
daa
push
sbb
mov
(bad)
adc
adc
or
sbb
shl
push
and
add
fs
mov
fcomp
test
sbb
in
mov
add
adc
mov
scas
inc
or
xchg
push
(bad)
movs
in
popf
mov
sahf
pushf
fadd
movs
jg
ins
xchg
cmp
fsub
mov
push
xor
(bad)
clc
imul
push
push
out
sub
je
mov
push
lds
cdq
in
ret
rol
mov
nop
xlat
xlat
cmp
xor
div
ins
sub
jnp
popa
inc
xor
mov
cli
ins
aas
out
mov
xor
sub
ins
or
xchg
shl
sar
je
sbb
xchg
or
sub
and
fild
pop
sub
popf
mov
xor
xchg
push
rcl
xchg
leave
dec
inc
cld
rol
mov
loope
movs
(bad)
cmps
jo
inc
je
iret
sti
scas
xchg
sub
(bad)
rcr
cs
std
xchg
movs
sub
mov
adc
hlt
cmp
stc
push
addr16
mov
dec
jbe
int
push
fwait
xchg
pusha
cmps
shr
test
dec
or
gs
aam
xchg
dec
ret
cmc
mov
cli
cmp
or
jle
fild
xor
xor
mov
sti
sbb
int
mov
cld
jecxz
or
push
stc
adc
(bad)
jns
push
loop
aaa
xor
inc
lahf
in
js
fdivr
adc
mov
lods
fs
fadd
jno
dec
push
aad
popa
pop
out
cld
mov
xor
out
mov
jbe
and
pop
dec
mov
mov
dec
jmp
or
push
and
jmp
pop
scas
or
js
pop
fucomp
and
and
xor
and
xor
es
sbb
adc
fs
jmp
int3
lahf
pop
push
or
scas
pusha
gs
popa
(bad)
bound
nop
imul
mov
xchg
(bad)
into
addr16
pop
push
cmps
jb
stos
inc
fild
inc
outs
mov
nop
adc
push
push
cmp
push
cmp
pop
jl
les
mov
out
sbb
fstp
pop
mov
or
push
sbb
cmp
sbb
lea
sbb
cmp
add
stc
sahf
mov
jae
add
sti
xor
stos
mov
mov
inc
pushf
test
in
mul
xor
outs
sub
(bad)
sbb
pop
xchg
pop
lods
jl
outs
mov
jmp
jne
bound
mul
les
int
sbb
scas
sar
mov
jbe
mov
pushf
mov
sahf
les
mov
dec
sbb
ss
out
adc
push
aaa
or
nop
call
fcmovne
xlat
mov
xchg
call
xchg
sbb
imul
lds
mov
push
mov
(bad)
repz
mov
std
jno
fucomip
and
mov
jo
jecxz
icebp
push
cmp
cdq
sahf
sub
mov
pop
fdiv
call
push
fst
dec
cmp
mov
aam
inc
aas
rol
ins
fisub
iret
popf
pop
pop
pop
pusha
out
and
scas
cs
mov
xchg
(bad)
push
xchg
add
lock
ins
mov
sub
pop
lea
cdq
sub
dec
mov
call
ja
ins
jl
test
scas
inc
in
pop
stc
inc
cmp
lods
pop
test
mov
xchg
xchg
je
sbb
fnstenv
dec
xlat
lock
push
cmps
push
retf
xor
push
lock
mov
ja
into
in
cmp
in
sub
sti
cmc
test
pop
pop
push
lods
(bad)
lahf
fsub
cmp
call
sub
or
inc
jp
mov
pop
imul
mov
int3
add
pop
loope
call
xchg
mov
daa
and
aam
ficom
mov
mov
fsubr
inc
pop
push
(bad)
gs
fwait
clc
jge
adc
inc
cmp
not
stos
sbb
out
dec
cmp
mov
pop
shl
jno
fnstsw
jp
shr
mov
add
ret
push
cmps
add
inc
bswap
(bad)
test
mov
mov
and
cmps
inc
mov
fadd
xchg
rcr
dec
jl
push
sbb
adc
inc
dec
lods
inc
sub
dec
daa
shr
div
jge
xchg
adc
xchg
arpl
sbb
xchg
sbb
sbb
push
retf
(bad)
lea
or
fadd
mov
out
into
push
std
mov
pop
sti
test
or
(bad)
stc
loop
scas
jmp
arpl
stos
xor
out
push
add
adc
cmp
mov
mov
xchg
jno
jge
jp
xlat
sbb
imul
adc
or
lahf
aaa
shl
pop
rcr
sbb
adc
(bad)
cmp
imul
xor
dec
stc
addr16
ret
pop
mov
mov
push
jbe
jns
pop
adc
sbb
inc
xchg
ffree
sbb
add
loope
mov
iret
loope
lock
push
sub
jp
rcl
shl
add
mov
stos
inc
jmp
int
iret
add
jg
push
popa
inc
mov
leave
test
sub
mov
add
mov
aam
pop
jmp
es
sub
rcl
imul
sbb
inc
test
pop
(bad)
jg
dec
loopne
xor
jle
mov
aam
jp
pop
mov
xlat
jge
jmp
add
dec
mov
fisttp
mov
and
sbb
mov
adc
cli
push
rcr
xor
dec
push
adc
sbb
data16
test
mov
js
fdivr
dec
js
dec
arpl
in
and
loope
fisubr
dec
mov
aas
dec
cmovnp
imul
fs
(bad)
in
xlat
and
jge
mov
and
ins
nop
xchg
cmp
cmp
jns
inc
popf
das
xchg
add
out
adc
cdq
add
xor
es
mov
xchg
add
ins
push
mov
pop
inc
retf
cmp
out
(bad)
cmp
mov
mov
cli
fisub
loop
ss
mov
call
cmp
repz
fucomp
jb
cmp
add
jo
add
add
xchg
inc
(bad)
int3
cdq
mov
cdq
dec
push
mov
xchg
into
cmp
pushf
sahf
jno
ins
scas
dec
das
imul
mov
std
push
dec
cmps
inc
repz
ins
jne
push
in
jbe
icebp
lds
repz
cli
(bad)
sub
ret
sbb
repz
inc
int3
aaa
ja
pop
xchg
or
cdq
or
mov
mov
fnsave
lahf
jmp
xor
rol
push
inc
mov
mov
jo
dec
hlt
push
or
xchg
int
inc
jbe
fsubr
sbb
cmp
ja
test
add
fiadd
nop
mov
xor
leave
mov
jno
test
add
mov
mov
stos
iret
pushf
dec
dec
std
fcomp
nop
(bad)
mov
nop
sti
cdq
jbe
dec
les
mov
aaa
aad
repnz
or
mov
out
push
cli
ret
push
mov
mov
call
push
inc
out
and
mov
(bad)
fwait
sub
or
cld
and
call
fld
or
push
mov
imul
das
loop
int3
xchg
xchg
jae
(bad)
fstp
int
inc
mov
or
ficomp
inc
and
ficom
fiadd
cmp
dec
lods
mov
inc
lahf
retf
cdq
pusha
add
and
lods
or
(bad)
and
imul
mov
xchg
xor
repnz
loop
mov
fwait
cli
jmp
sub
sbb
cmp
jb
arpl
cmps
push
enter
xchg
adc
or
xchg
push
push
mov
into
or
pop
loopne
or
and
xor
xchg
jl
jne
cmp
xchg
popf
adc
mov
lahf
(bad)
loope
icebp
stos
(bad)
gs
jne
xor
adc
xor
pop
mov
sub
xchg
xchg
xchg
xchg
imul
lods
cdq
enter
not
jbe
(bad)
cwde
out
pop
push
xchg
pusha
xchg
or
fs
aam
(bad)
jmp
retf
adc
pop
mov
dec
pop
inc
add
iret
cli
imul
rcl
xor
scas
shl
mov
fst
push
push
cmc
sub
or
in
not
adc
fsubr
js
inc
xor
enter
cli
pop
into
fidiv
addr16
or
call
or
lods
cdq
xchg
in
dec
dec
adc
mov
jp
sbb
mov
or
pop
add
std
fimul
sbb
(bad)
in
mov
mov
movs
in
mov
adc
adc
pop
scas
push
inc
inc
and
jecxz
mov
mov
cwde
ins
cmp
jmp
sbb
pop
popa
ins
mov
xchg
icebp
mov
adc
adc
cmp
push
ss
lods
scas
iret
xor
cmps
or
ret
mov
sbb
sar
adc
xchg
and
inc
dec
mov
arpl
cmp
mov
je
in
in
div
rcl
jp
mov
imul
cmp
mov
addr16
adc
call
push
inc
xchg
sub
or
mov
push
sar
or
daa
adc
aaa
jns
lods
lock
jns
push
push
(bad)
repnz
push
sub
stc
(bad)
adc
add
push
sub
jno
sbb
pmuludq
retf
movs
outs
sub
jg
xor
in
fs
sub
mov
aad
push
fdivr
setl
xchg
lods
jmp
mov
or
sub
and
shl
leave
cli
pop
push
mov
retf
retf
rcl
push
xor
sahf
mov
loop
xchg
ret
adc
mov
fwait
sbb
mov
mov
or
loope
xchg
jp
jge
push
cwde
ror
mov
out
xor
rol
mov
adc
fdiv
in
ror
imul
sahf
scas
pop
fld
lds
mov
hlt
push
and
xchg
xor
xor
inc
dec
pop
mov
add
icebp
(bad)
arpl
add
sahf
fld
mov
xchg
dec
push
mov
adc
sub
retf
fild
push
sahf
nop
sbb
mov
sub
add
xchg
in
je
out
mov
push
inc
ds
xchg
sbb
inc
mov
or
imul
iret
and
mov
std
add
adc
ror
xchg
cmp
lods
in
push
int
jl
jne
lods
sti
fbstp
cwde
mov
mov
and
jl
int
imul
push
jno
push
aam
ins
arpl
lahf
sbb
popa
mov
pusha
aam
ds
jp
pop
pop
aad
call
ret
sar
out
jmp
mov
pop
push
imul
cwde
xchg
jg
inc
push
xchg
stos
lds
shr
jge
xchg
or
stos
push
mov
mov
in
jb
mov
cs
mov
jae
popa
stos
in
sbb
in
pop
call
lea
sahf
retf
dec
dec
sub
mov
sbb
hlt
mov
les
ins
shl
lahf
mov
sub
and
mov
cmp
retf
fisubr
sti
fcmovnb
leave
xchg
pop
add
mov
xor
out
adc
jae
lods
cmc
and
jb
cmp
xchg
test
jo
hlt
pusha
adc
aam
dec
mov
pop
add
inc
xchg
rcr
xchg
repnz
sbb
js
add
int
push
mov
adc
dec
and
add
stos
pushf
dec
cld
and
pop
paddsb
or
out
sbb
sub
stos
shl
sub
imul
popf
sbb
mov
and
xchg
fild
into
sbb
cmps
mov
ret
push
inc
mov
stos
adc
movs
sub
mov
(bad)
jb
jl
push
sbb
lods
in
and
mov
mov
mov
add
in
and
and
into
rcl
pop
push
idiv
leave
out
call
push
retf
dec
(bad)
lea
adc
sub
scas
jns
add
mov
sub
retf
add
mov
pop
aas
sub
xor
jl
lods
out
xchg
jae
mov
sub
push
mov
stos
xlat
addr16
jmp
imul
fwait
mov
xchg
in
and
retf
mov
dec
pop
lea
cmc
stc
add
xor
pop
in
adc
jecxz
sbb
dec
cmps
test
jno
cmp
mov
pop
jmp
dec
sub
loopne
mov
mov
aas
sub
stos
and
mov
(bad)
popf
aaa
inc
mov
mov
movs
mov
xchg
sub
adc
or
dec
mov
test
push
dec
call
cli
arpl
cmp
jb
in
inc
fsub
mov
push
popf
ds
ins
pop
or
sub
jbe
and
pop
repnz
lock
hlt
push
fcomi
pop
arpl
jmp
aaa
bound
add
inc
addr16
call
leave
sbb
dec
pop
popa
lods
sti
test
mov
mov
xchg
rcr
push
xchg
dec
push
push
and
cmp
fs
push
dec
xchg
mov
adc
ret
mov
pop
js
dec
iret
lds
adc
test
mov
cmp
cmp
ds
out
mov
(bad)
repnz
add
mov
xchg
sub
into
mov
scas
aas
movs
fisttp
sub
shl
pusha
sub
sub
leave
or
or
fs
and
retf
sar
sbb
xchg
mov
jae
dec
mov
sbb
xchg
hlt
xchg
pop
pop
cdq
push
adc
loope
sub
sbb
xor
sub
enter
loopne
pop
out
aad
in
in
dec
xchg
fwait
jl
call
xchg
cld
stos
ja
out
jg
stos
xor
and
retf
mov
push
mov
ret
dec
sbb
fist
ins
or
push
fisubr
xchg
sbb
movs
test
jg
push
lods
cmp
xor
add
sbb
movs
cmp
jnp
mov
inc
fisttp
dec
jg
adc
adc
xchg
mov
xchg
pusha
repnz
inc
mov
stos
lea
shl
neg
add
addr16
loope
xchg
cmp
cmp
int3
mov
adc
lods
sub
dec
mov
jge
test
sub
retf
cmp
inc
das
mov
mov
div
bound
pop
pop
es
add
and
inc
push
or
pushf
mov
in
test
out
pop
xchg
out
pusha
adc
xor
mov
push
not
xchg
mov
or
mov
(bad)
push
lock
retf
cmp
xchg
sar
or
sbb
dec
mov
ss
cmp
imul
mov
icebp
jge
test
call
xor
and
mov
(bad)
out
les
ins
outs
push
cmp
pop
ror
aaa
cdq
or
ror
out
shl
jb
push
retf
daa
dec
mov
loope
push
and
xlat
cli
out
ret
sbb
adc
or
outs
mov
pop
test
mov
fdivr
mov
popa
inc
mov
mov
dec
int3
or
jbe
inc
inc
xchg
ins
hlt
add
lock
out
cmc
ret
loopne
mov
or
inc
outs
pushf
popf
push
sub
mov
leave
fs
and
loop
lds
call
pop
and
les
inc
(bad)
fsub
sbb
pop
xchg
ss
out
imul
repz
xchg
and
ss
pop
push
push
and
mov
push
cmc
sbb
stos
mov
in
add
call
or
jl
mov
fwait
addr16
inc
add
scas
push
icebp
sub
outs
push
mov
(bad)
fstp
iret
aam
inc
data16
int
inc
push
adc
jo
jl
jmp
sbb
sub
das
sub
stc
xchg
pop
jno
(bad)
(bad)
retf
adc
pop
test
loope
out
sahf
sar
push
pop
push
inc
retf
loopne
pop
dec
mov
cmps
xor
jl
aaa
mov
test
clc
add
fst
(bad)
out
fnstcw
inc
iret
aam
adc
movs
shl
xor
out
pusha
sub
sbb
lods
loop
bound
xchg
jnp
push
jnp
mov
mov
mov
jne
pop
and
test
adc
sub
jmp
(bad)
and
mov
shr
jp
sub
rcl
lods
xor
in
jmp
ror
mov
inc
xchg
xchg
jo
cwde
loope
sub
cmp
xchg
popf
pushf
pop
cmps
in
push
adc
not
cmps
repz
into
sub
sar
(bad)
jmp
push
jmp
and
lds
inc
adc
cmp
repnz
movs
test
int
movs
out
dec
in
loopne
outs
clc
pushf
add
xchg
xchg
adc
cmps
sub
xchg
pop
cmps
sub
jns
push
xlat
dec
adc
stos
movs
shl
les
int
adc
mov
mov
stc
mov
mov
loop
cmp
dec
pop
jl
push
sub
call
pop
les
pop
imul
popf
aad
les
mov
sbb
mov
loope
test
dec
clc
lahf
pop
in
mov
push
aad
(bad)
jg
ins
out
dec
push
mov
xor
fsubr
popf
xchg
sti
jle
push
out
xor
call
ins
sbb
loop
xchg
mov
jmp
loope
mov
xchg
imul
dec
shr
jo
loop
dec
cmp
(bad)
(bad)
outs
cmp
or
loop
pop
cmps
sub
(bad)
xlat
or
inc
xchg
push
cmp
mov
pop
cmp
xchg
mov
retf
cmp
mov
push
and
in
push
lock
mov
push
push
pop
or
stos
dec
sahf
imul
std
mov
jp
sbb
test
sub
movs
popf
jb
pop
push
jno
adc
pop
repz
jbe
and
popa
sub
out
test
aas
mov
std
sbb
jbe
clc
add
push
out
jno
push
jg
inc
fcmovb
jne
loop
jl
loop
push
popa
les
mov
call
cmp
in
pop
xchg
mul
add
std
dec
lahf
add
jb
or
sub
ret
sbb
push
cmps
mov
cmp
mov
hlt
mov
icebp
ja
test
dec
fistp
inc
pusha
retf
pushf
aam
movs
inc
pop
in
jp
pop
jae
xor
shl
addr16
ds
adc
in
mov
lods
mov
xchg
bound
rol
lods
retf
mov
jle
cmp
xor
pcmpgtw
sub
shl
xchg
xor
sti
aaa
dec
pop
push
push
lods
push
stc
icebp
inc
and
shl
rep
sbb
sahf
sbb
xchg
sub
nop
xchg
inc
add
call
mov
lds
imul
adc
neg
mov
mov
sub
mov
cmp
retf
dec
add
pop
js
jb
cli
daa
cmp
dec
sahf
inc
mov
js
add
cdq
cs
fldcw
dec
int
mov
jae
pop
mul
ja
cmp
clc
push
outs
xor
(bad)
push
imul
or
inc
rsm
pop
ss
and
loopne
stc
pop
xlat
les
out
cmp
inc
mov
xor
push
xor
repnz
mov
xor
jbe
dec
xchg
sbb
aaa
pop
jecxz
or
fldcw
fisttp
sub
mov
xor
jb
mov
mov
adc
(bad)
mov
mov
adc
add
ins
push
iret
xchg
push
int
icebp
add
jno
dec
jmp
add
and
sbb
mov
dec
imul
inc
inc
inc
mov
gs
pop
jo
adc
inc
out
out
shl
(bad)
jg
icebp
sbb
shl
and
xor
sbb
stos
loop
iret
repz
push
sahf
std
dec
xchg
outs
dec
inc
pusha
pop
jecxz
bound
pop
lahf
mov
retf
add
popf
mov
adc
ds
in
and
out
jle
mov
mov
xor
lahf
lock
jns
xor
repz
push
or
retf
and
cmp
xchg
or
xor
test
push
loop
ds
mov
push
xor
add
into
pop
loopne
fsub
stos
xor
add
fdiv
imul
jae
mov
dec
or
outs
sahf
movs
arpl
xchg
ret
mov
mov
mov
cmp
sar
jno
jo
adc
add
mov
mov
dec
mov
retf
in
fdivr
xlat
jmp
fsubr
mov
mov
rcr
jle
jmp
movs
and
xchg
cmp
aas
push
out
push
push
pop
inc
ins
fist
mov
jl
sbb
sahf
test
test
cdq
mov
mov
(bad)
frstor
sbb
rcl
retf
fimul
scas
in
adc
cdq
push
jae
xchg
jae
mov
mov
mov
in
xchg
sbb
(bad)
mov
out
adc
js
and
or
fisttp
jne
jp
in
aad
ins
sub
xchg
aaa
sar
push
push
mov
push
int3
pop
test
or
(bad)
fmul
cmc
popf
bound
pop
lock
int
cmp
pushf
cmps
aam
fprem1
add
mov
sbb
fst
dec
and
(bad)
push
mov
rcl
mov
sbb
jae
out
pop
mov
pop
(bad)
repz
mov
dec
ret
scas
xor
cmps
ja
jno
lock
movs
outs
mov
cmp
scas
mov
mov
jae
push
out
cli
push
xchg
ret
cmp
adc
jecxz
je
test
popf
and
in
lods
pop
mov
ror
ins
lock
jbe
fsub
inc
inc
outs
aad
jle
push
loop
packssdw
and
clc
cmc
mov
fsub
mov
jmp
test
aad
ret
or
fistp
jmp
out
loope
idiv
in
cmp
es
mov
push
mov
mov
mov
xchg
ins
call
iret
ds
fcomp
ins
and
push
icebp
mov
xor
ins
and
mov
and
ds
fistp
pop
pusha
and
aas
jmp
dec
mov
test
mov
inc
cmp
test
data16
scas
xchg
inc
pop
cmp
or
dec
sbb
mov
scas
imul
punpckldq
push
(bad)
mov
(bad)
jmp
int3
outs
(bad)
sbb
sub
xchg
(bad)
mov
add
pop
popa
(bad)
mov
fld
pop
pop
add
add
mov
cs
fisub
jns
jge
xchg
retf
jle
repz
mov
clc
mov
ins
mov
jnp
xor
aad
clc
loope
dec
stos
xlat
dec
pushf
or
sti
fstp
mov
rcl
push
jg
dec
mov
(bad)
dec
retf
pushf
outs
es
push
xchg
mov
(bad)
dec
call
arpl
mov
(bad)
sbb
dec
xchg
pop
arpl
fbld
push
std
mov
aam
jecxz
pop
cmps
sahf
sub
jne
jmp
imul
pop
adc
mov
ins
add
ins
and
movs
iret
(bad)
inc
inc
iret
ja
(bad)
jno
and
addr16
sbb
cmp
inc
xor
aaa
repnz
mov
xchg
mul
lea
push
push
mov
rcl
sbb
pop
inc
(bad)
sub
fcmovnu
mov
sub
add
mov
aam
jns
cld
jl
add
xlat
adc
push
mov
jae
scas
jp
add
xchg
adc
in
pop
aad
fst
enter
xchg
fimul
sbb
aam
ins
out
jne
loop
inc
jl
mov
aas
cld
cmp
xor
dec
xor
je
stc
inc
inc
and
sbb
scas
ret
nop
test
mov
mov
dec
dec
cld
lock
iret
in
ds
sub
inc
or
cmps
xchg
inc
pushf
jecxz
lods
mov
fs
inc
or
call
mov
(bad)
sar
dec
or
add
xor
iret
mov
sti
sbb
xchg
in
adc
inc
out
mov
jmp
xchg
into
sbb
cs
pushf
or
fistp
lods
and
or
ds
ret
nop
lock
inc
fs
out
mov
sbb
fdiv
dec
lock
imul
xor
ss
jl
dec
sub
(bad)
pop
fs
dec
push
jg
dec
popa
sbb
jg
and
out
fst
mov
(bad)
mov
ja
push
cmp
jecxz
push
push
or
ds
int3
ds
jns
or
in
cwde
mov
stos
mov
cmp
jns
pop
mov
fcmovne
jno
push
sbb
jnp
pop
cld
lea
call
mov
cld
ss
inc
movs
xor
jle
stos
(bad)
mov
ins
rcl
aas
push
adc
movs
jmp
xor
push
mov
mov
in
cld
inc
xor
sub
push
test
in
fwait
je
inc
(bad)
psrlw
mov
push
movs
jmp
push
adc
dec
loop
sbb
cs
xchg
dec
dec
nop
inc
mov
sub
arpl
stc
cmp
sbb
(bad)
fld
jns
inc
pop
add
call
adc
sub
fstp
imul
cmp
stc
xchg
dec
mov
mov
or
data16
rcr
push
aam
arpl
ds
sbb
xchg
pop
fiadd
rol
mov
xor
pop
retf
xor
bound
arpl
aad
push
mov
mov
sbb
jle
(bad)
jg
xchg
int
mov
iret
pop
xor
mov
and
jbe
inc
fistp
mov
(bad)
aam
jl
push
cmp
push
sbb
jno
or
aam
jb
cmp
mov
xchg
dec
xor
cmp
pop
shl
mov
or
jecxz
sub
out
repz
and
pop
(bad)
(bad)
mov
jecxz
pop
pop
pusha
test
and
sahf
(bad)
and
pop
int
push
jae
xchg
sub
sub
es
arpl
jmp
popf
mov
add
pop
and
push
cli
mov
cmp
jmp
in
aam
icebp
into
ds
cmps
cli
aam
jne
jo
push
or
daa
jmp
sub
call
(bad)
cmc
daa
mov
(bad)
adc
les
fxam
cmc
mov
jns
fcom
xor
mov
ss
sub
out
sbb
pop
add
lds
cdq
dec
dec
inc
xor
pop
out
add
popa
push
(bad)
xchg
retf
pop
ficom
mov
cmp
jmp
loope
push
loope
xchg
sbb
pop
dec
fwait
ret
das
popf
(bad)
or
pusha
or
jecxz
xchg
push
cmp
(bad)
jl
aad
jne
psrlq
inc
xchg
adc
cmp
push
or
movs
adc
xchg
mov
ss
mov
mov
sbb
hlt
in
mov
loope
pop
or
add
mov
mov
lods
xor
adc
push
fwait
in
cmp
jbe
in
loopne
scas
mov
mov
mov
xchg
sbb
inc
ja
out
jle
pop
dec
dec
cmc
cld
imul
ret
js
or
mov
sbb
pop
in
pushf
inc
jae
data16
adc
mov
push
sahf
and
dec
stc
jecxz
int3
jnp
mov
pop
mov
ret
inc
cli
mov
ja
push
inc
or
movs
test
ins
je
jle
mov
(bad)
sub
pop
push
push
pop
outs
stos
fs
pop
outs
xor
fnstsw
mov
xlat
mov
test
shl
dec
loop
push
out
push
lahf
add
shr
out
mov
push
add
stos
pusha
repz
push
mov
retf
dec
lods
movs
dec
sbb
jb
or
int
adc
dec
dec
add
out
mov
pop
aaa
push
dec
das
retf
lahf
cmps
push
adc
js
cs
xor
retf
push
fdivr
xor
mov
dec
dec
cmps
cli
lods
popf
(bad)
xchg
add
jp
fistp
cmp
xchg
loopne
jp
mov
and
jbe
je
push
nop
test
sub
je
not
ss
arpl
push
ss
cwde
rcr
rcl
js
and
dec
mov
adc
push
push
lods
jl
outs
into
mov
into
icebp
push
ror
dec
cwde
call
mov
je
cmp
adc
gs
hlt
push
jp
popa
push
pop
arpl
aaa
test
cmp
sub
push
add
push
aam
jle
les
pop
lods
popf
cmc
aaa
mov
je
ret
das
dec
mov
push
xor
jo
pop
add
pop
call
mov
stos
aaa
add
in
ss
ja
adc
jno
nop
inc
sbb
or
dec
jle
push
ror
scas
(bad)
and
test
and
das
int3
pop
adc
test
imul
jbe
imul
sbb
inc
ja
add
cmp
inc
and
push
lods
push
gs
jmp
dec
inc
push
mov
mov
pop
and
es
mov
pop
icebp
hlt
mov
loope
cmp
mov
sub
popf
push
cmp
push
int3
in
mov
sbb
and
dec
dec
ret
ds
push
jge
fdiv
push
sub
iret
jmp
mov
lods
rcr
pushf
daa
sar
xchg
adc
mov
std
shr
jp
test
(bad)
mov
xchg
out
hlt
sub
xor
loope
loope
(bad)
sub
aam
std
xor
sub
pushf
inc
mov
mov
xchg
jg
shr
outs
mov
imul
or
xchg
bound
jb
fistp
mov
ins
or
xchg
pop
or
(bad)
fsub
fbld
test
xor
mov
pop
std
imul
pop
and
fwait
cmps
xchg
jp
and
fs
ret
sub
push
cli
int
dec
adc
ss
in
xchg
mov
xchg
and
mov
leave
(bad)
fisubr
push
out
pop
fisub
pop
pop
test
adc
xchg
popa
jle
push
jg
ret
jno
outs
pop
das
inc
icebp
xor
sbb
dec
loop
or
dec
pop
ds
add
jns
cli
cmp
push
fsubr
mov
xchg
neg
xor
loopne
movs
jle
call
mov
shl
je
mov
retf
mov
pop
pop
das
(bad)
mov
stc
nop
push
dec
cmp
inc
push
xor
aaa
cmp
jbe
clc
add
inc
scas
(bad)
fnstsw
add
add
hlt
sbb
push
lahf
int3
sub
mov
or
sbb
movs
hlt
dec
fwait
xchg
dec
sar
mov
jmp
in
lds
mov
rcl
sbb
add
loopne
push
stc
mov
sbb
cmp
iret
and
xor
dec
mov
cmps
fisttp
inc
punpcklwd
adc
or
(bad)
ja
gs
cmps
mov
mov
pusha
clc
sub
xchg
pop
sbb
mov
std
loopne
ss
in
fldenv
pusha
pop
dec
mov
retf
pop
mov
sbb
cld
jb
jp
add
adc
xor
or
mov
iret
cmp
es
jae
pop
stos
or
xchg
mov
cmp
push
jmp
ds
dec
imul
xor
les
sbb
fwait
jne
sub
hlt
repnz
and
cmc
rcr
iret
xlat
and
pop
jne
inc
jnp
stc
sbb
or
iret
iret
loope
fist
pop
add
arpl
jne
mov
(bad)
inc
(bad)
call
inc
mov
mov
xchg
dec
mov
dec
lock
es
push
test
pop
repz
inc
test
mov
push
or
enter
cmc
ret
inc
in
outs
mov
push
arpl
ret
cmps
ins
icebp
cmp
dec
rcl
and
mov
push
js
in
retf
ss
jb
xor
add
mov
test
add
xchg
lods
xchg
adc
jnp
add
int3
jmp
dec
cmp
fisttp
lods
in
mov
cmp
popa
cmp
or
mov
mov
jb
and
dec
addr16
js
push
and
adc
push
xor
pop
cmps
push
in
push
push
cld
and
rcr
prefetcht2
push
jge
sub
pop
pop
cdq
repz
and
xor
mov
ss
fincstp
shl
int
push
or
xchg
test
jns
mov
(bad)
sub
lock
inc
mov
lds
rep
xor
jle
sbb
add
lahf
and
es
std
fstp
loope
adc
dec
test
(bad)
push
and
mov
popa
fadd
add
pop
or
fdecstp
jle
push
test
jecxz
jge
fisttp
sub
xchg
jae
add
push
push
pushf
test
xchg
data16
fdiv
dec
in
pop
movs
stc
ins
dec
mov
out
in
pop
ins
or
repz
jl
cwde
lock
cmp
xor
and
xor
test
rcr
sub
sti
push
ins
popf
mov
add
cmps
mov
mov
cmps
inc
inc
outs
jecxz
pop
test
aas
(bad)
out
jns
aad
fsubrp
sub
int3
push
mov
pop
cdq
or
xchg
mov
imul
mov
pop
popa
push
aas
shl
jns
xchg
mov
xor
in
cld
sar
cld
adc
mov
jge
cmp
dec
in
jge
ins
lock
fucomp
imul
sbb
cmp
sub
daa
fbstp
mov
(bad)
int3
inc
dec
ins
psubsw
fstp
idiv
and
stos
scas
not
loopne
shr
scas
xchg
test
sub
xchg
mov
fiadd
mov
mov
in
sub
push
out
out
pop
xlat
out
outs
aam
add
jno
popa
not
sbb
imul
sti
fisub
inc
outs
dec
fild
xchg
jnp
int3
lock
test
adc
fisubr
and
and
mov
dec
ins
neg
cmps
adc
leave
or
ret
ins
fistp
cmps
cmp
rol
mov
int3
or
or
retf
pop
xor
pushf
sar
mov
(bad)
in
jmp
lock
mov
mov
js
push
stos
sahf
xor
mov
jns
fisttp
and
mov
(bad)
pop
int
ds
int3
and
adc
shr
retf
adc
ret
sar
outs
fisttp
push
(bad)
retf
push
cmp
sbb
sbb
and
pop
push
inc
jmp
or
push
jmp
xchg
jae
mov
in
cmp
gs
add
add
mov
(bad)
jge
inc
jp
push
or
jmp
mov
push
push
out
push
inc
scas
(bad)
and
xchg
jl
add
cmps
pop
sbb
shl
pop
inc
cwde
(bad)
les
popa
loope
mov
nop
(bad)
cmp
aam
lahf
jmp
jmp
ror
scas
mov
ds
xor
fsubr
(bad)
push
mov
lds
aam
jne
aas
push
shl
sbb
mov
rol
xchg
adc
clc
outs
xor
icebp
scas
add
pusha
iret
out
mov
push
repnz
or
push
cmps
(bad)
cs
jle
dec
icebp
xlat
(bad)
and
mov
adc
sbb
and
mov
mov
or
sub
dec
test
xchg
add
add
adc
movs
mov
sub
xchg
and
cmps
dec
add
cmp
add
in
(bad)
or
sbb
jg
push
jle
mov
std
adc
jge
add
cmovl
xlat
jns
mov
int3
adc
jmp
lock
imul
and
out
cwde
inc
xor
ficomp
(bad)
retf
cs
(bad)
cld
push
mov
repz
sub
sti
addr16
mov
pop
xchg
lods
call
movs
or
cwde
adc
std
sbb
xchg
retf
jno
ret
pop
lahf
lds
sbb
inc
mov
jl
addr16
movs
jmp
loope
adc
test
dec
xchg
jp
mov
ficom
lds
cmp
fwait
pop
xchg
pop
sub
test
jae
sub
cli
mov
xchg
or
xchg
add
xlat
or
test
jne
pop
mov
nop
into
cmc
test
adc
ret
div
mov
out
rcr
inc
sbb
enter
dec
push
add
push
cld
cmp
add
data16
sbb
outs
cmp
xchg
mov
push
mov
push
fwait
adc
cmps
inc
js
arpl
fnstenv
adc
mov
leave
int
out
add
cld
mov
cmps
inc
add
or
xchg
test
loope
or
(bad)
xor
mov
and
inc
stos
mov
int3
xlat
pushf
add
push
aam
aam
ss
push
sti
dec
mov
adc
les
scas
dec
inc
xor
lock
xchg
push
pop
scas
mov
xchg
lods
js
mov
push
inc
and
jle
or
sub
xchg
mov
cld
sbb
pop
cmp
sbb
mov
aad
sbb
(bad)
mov
adc
push
idiv
mov
out
es
mov
or
or
in
ins
(bad)
lods
leave
loopne
gs
mov
inc
sub
test
fisttp
cmps
fstp
sar
repz
(bad)
jo
add
leave
sti
mov
dec
inc
stc
mov
push
pcmpeqd
repnz
and
or
sub
adc
add
cmp
jmp
clc
sub
mov
in
mov
test
mov
sbb
jl
stc
sbb
dec
ja
movs
int3
dec
add
jmp
mov
shl
out
fimul
test
add
mov
adc
inc
mov
sbb
test
idiv
out
mov
hlt
scas
sub
xchg
push
mov
out
lods
xlat
dec
fimul
inc
dec
inc
dec
dec
xor
lods
je
and
mov
cmp
pop
and
fisubr
fbld
cmps
(bad)
cdq
test
jecxz
inc
adc
mov
arpl
fs
test
push
sbb
shl
xor
sub
mov
push
xor
jnp
aas
adc
jle
xchg
push
dec
sbb
mov
(bad)
(bad)
jae
ror
pusha
sbb
dec
mov
hlt
xchg
movs
or
xor
in
add
pop
div
pop
mov
jne
fadd
inc
daa
mov
loop
jmp
js
clc
mov
(bad)
mov
int3
pop
das
xor
mov
cwde
adc
in
out
aas
in
fmul
cmp
mov
idiv
or
scas
sbb
jp
xchg
daa
stos
cmp
fisubr
mov
mov
cmp
lds
add
sti
xchg
and
nop
pop
gs
in
lods
leave
xchg
aam
retf
div
stos
sub
lods
inc
loopne
nop
mov
test
pop
(bad)
shl
cmp
add
xchg
sbb
mov
in
popf
lds
jbe
(bad)
xchg
dec
cmps
bound
leave
shr
and
push
jle
pop
sub
cmps
leave
daa
or
pusha
and
cld
daa
jge
(bad)
dec
stos
xor
arpl
rcr
push
dec
push
cmp
ins
sub
add
xor
aas
xchg
xor
add
cmp
cmp
cmps
adc
ret
in
adc
push
xchg
dec
aaa
mov
mov
mov
xchg
ror
inc
jmp
cli
cmp
dec
(bad)
hlt
movhps
loopne
jmp
jl
(bad)
pop
loope
inc
sbb
shr
cmp
cmp
jb
mov
push
xor
cmc
stos
(bad)
(bad)
movhps
push
mov
mov
push
push
ins
shr
and
shr
inc
gs
mov
mov
fild
cwde
sub
stos
or
in
ja
mov
movs
fsub
cmp
in
sbb
push
jns
repnz
xchg
add
sbb
pusha
cli
ret
pop
neg
adc
cmp
sub
test
pop
xchg
or
or
xor
push
xor
hlt
jl
pop
clc
jbe
rol
jl
jmp
icebp
push
mov
test
xor
fistp
ret
sar
dec
nop
hlt
cmps
dec
xchg
jecxz
std
in
push
mov
pop
loope
adc
cmp
hlt
cs
pop
lahf
addr16
mov
cld
pusha
mov
pop
sar
push
cli
stc
push
sbb
xchg
ins
imul
push
daa
imul
mov
inc
push
ins
imul
shl
adc
mul
sbb
add
and
fbstp
enter
cs
push
mov
xlat
aas
fsubr
xlat
xor
pop
call
mov
es
out
movs
push
repnz
je
add
popf
aaa
je
inc
jae
jnp
call
pop
ret
push
and
mov
int
add
outs
add
jns
scas
mov
mov
dec
lea
and
sub
call
xchg
outs
add
jbe
int3
or
daa
loope
(bad)
std
mov
js
fstp
in
mov
xor
and
mov
inc
hlt
push
add
out
inc
dec
sub
stc
ja
out
mov
(bad)
mov
ds
cmp
test
sbb
jo
cli
add
imul
push
cs
imul
dec
push
leave
fcomip
(bad)
push
iret
dec
mov
pop
retf
imul
not
inc
sahf
jmp
data16
daa
adc
or
mov
stc
dec
add
lods
div
sbb
ja
adc
neg
dec
jb
mov
clc
pusha
clc
xchg
mov
dec
push
xor
xchg
imul
lea
ret
movs
jl
test
scas
push
dec
add
repz
in
inc
xchg
icebp
ret
mov
fbstp
cmc
in
pusha
outs
xor
inc
fidivr
call
lea
call
test
sbb
pop
or
outs
dec
mov
fwait
fwait
int
stc
hlt
or
push
cmps
mov
adc
cmp
dec
std
out
jb
int3
cmp
cmp
nop
sbb
xor
dec
pusha
and
mov
mov
fstp
call
mov
sbb
stc
inc
sub
jl
adc
outs
rcr
fsubr
out
and
scas
(bad)
sbb
in
les
fidiv
mov
mov
es
cmc
nop
rol
loop
fsubr
fmulp
aam
xor
pop
jg
sub
jle
les
mov
sbb
jo
mov
mov
xchg
dec
movs
test
in
(bad)
jp
test
mov
dec
iret
scas
fwait
dec
pop
imul
mov
mov
call
outs
push
inc
dec
xor
fisubr
push
jl
test
xchg
dec
push
leave
(bad)
mov
dec
push
rcr
dec
scas
inc
popa
gs
je
dec
repnz
cmc
mov
jne
push
bound
outs
or
mov
xor
and
imul
(bad)
int3
nop
ja
and
xor
daa
test
add
xor
pop
icebp
enter
and
mov
xchg
sar
pop
jge
add
or
sbb
cmp
xor
push
push
in
jmp
dec
imul
push
xor
out
lea
jb
xchg
jecxz
jmp
pusha
retf
mov
in
and
xor
addr16
dec
dec
jecxz
inc
or
into
xor
adc
cmps
mov
sti
fs
sub
pop
in
int3
ret
push
jl
pop
jmp
test
mov
add
add
(bad)
mov
xlat
inc
test
cmp
in
sub
dec
dec
sti
mov
pop
loopne
sub
pop
pop
adc
jmp
sbb
adc
js
or
cmp
(bad)
retf
cs
push
shl
stos
and
ror
mov
xor
pop
push
arpl
mov
outs
arpl
fs
or
mov
add
dec
daa
test
sub
xor
sbb
and
fwait
push
imul
jecxz
pop
loop
inc
imul
iret
sbb
fimul
stos
shr
cmp
(bad)
xchg
xchg
mov
push
mov
(bad)
mov
fidivr
cmp
(bad)
data16
test
test
and
scas
icebp
xchg
sbb
adc
pop
pop
fadd
jle
test
cmp
je
es
popf
add
hlt
fistp
in
mov
(bad)
shl
adc
outs
xor
repz
mov
les
movs
pop
jmp
fcomp
xchg
sub
(bad)
push
inc
cdq
sub
adc
cmp
iret
pop
and
xchg
fld
cwde
pop
pop
jl
cdq
inc
mov
jnp
xchg
movs
out
retf
ins
jle
dec
xor
cmp
pop
push
xchg
lods
lahf
xchg
push
hlt
(bad)
pop
xor
in
ja
fsubr
xchg
xor
xor
pop
mov
sbb
pushf
outs
jne
mov
test
ins
mov
out
push
les
and
xchg
jns
mov
xchg
mul
push
aas
mov
into
jns
inc
pop
lods
cmps
into
xchg
movs
mov
sbb
ja
das
push
fdivr
ret
dec
cwde
or
or
dec
aad
adc
int
(bad)
(bad)
pop
pop
arpl
and
sub
mov
call
dec
pop
push
adc
pop
bound
aaa
jae
ret
add
cs
ja
jle
or
xor
popf
and
repnz
cmp
and
jnp
inc
mov
in
cmp
repz
adc
sbb
out
fistp
ins
in
jno
and
and
mov
js
adc
aas
shr
test
mov
xchg
pop
int3
cs
sub
pushf
jmp
dec
sbb
mov
mov
repnz
sub
and
jns
test
dec
cmps
outs
lea
nop
cmp
mov
lds
adc
sub
int3
shr
in
shr
pusha
outs
ja
jmp
int
jae
jge
add
mov
push
cdq
xor
adc
xor
aam
leave
push
mov
and
jnp
out
fdivr
ds
jne
cmp
outs
loope
pop
shr
rol
sub
and
xchg
pop
out
sbb
push
dec
adc
fisubr
clc
sub
rcl
add
test
mov
in
xor
fwait
push
xchg
into
lea
in
jb
mov
fcmovnu
mov
dec
dec
sub
popf
ret
jo
add
shl
jns
xor
push
mov
sbb
adc
jno
xchg
cmc
mov
mov
and
rcl
push
outs
mov
test
mov
jecxz
enter
ret
stos
fs
pop
add
push
fwait
hlt
and
dec
pop
jmp
push
fwait
xlat
push
fadd
fimul
popf
jl
pop
jae
ins
jno
xor
add
lahf
sahf
test
dec
repz
das
xchg
xchg
inc
push
add
push
push
push
and
and
sar
mov
jge
inc
add
loop
mov
inc
ds
mov
dec
es
mov
mov
shr
mov
ins
jle
jg
retf
dec
(bad)
cmp
pop
sbb
popa
mov
add
add
nop
jns
sbb
ins
inc
pop
loop
shr
outs
(bad)
push
dec
and
sbb
sub
mov
lods
push
pop
jae
nop
retf
add
xor
dec
or
cld
pop
int
test
mov
js
cmp
in
xor
stc
push
mov
xchg
imul
mov
icebp
pop
dec
mov
adc
push
add
add
daa
mov
and
inc
mov
jmp
or
mov
sti
jp
xchg
sbb
sub
dec
and
cs
cmp
sub
mov
pop
mov
shl
dec
jmp
mov
mov
pushf
retf
or
aam
shl
int3
or
mov
imul
mov
sub
mov
test
test
pop
add
in
fldcw
mov
xlat
or
mov
xor
into
or
out
jns
jno
dec
pop
mov
mov
ja
or
add
das
add
or
inc
jo
mov
jnp
mov
pop
data16
cmp
add
ja
sahf
dec
mov
pop
mov
pop
jp
mov
fist
mov
add
(bad)
sbb
arpl
cmps
xchg
ins
dec
adc
ins
sbb
movsx
test
jecxz
inc
mov
inc
and
sbb
and
adc
jmp
jo
(bad)
iret
mov
jecxz
push
popf
dec
daa
mov
(bad)
sbb
cli
mov
inc
leave
(bad)
mov
(bad)
dec
(bad)
and
cmp
jecxz
in
dec
push
xlat
push
(bad)
mov
add
mov
arpl
xchg
adc
sub
or
cs
nop
mov
mov
mov
scas
in
je
std
push
or
dec
xchg
shr
lea
jmp
mov
sub
mov
loop
idiv
(bad)
mov
dec
mov
add
jbe
sub
add
(bad)
and
daa
dec
loop
(bad)
not
dec
(bad)
into
xor
inc
mov
stos
xor
sbb
fcmovnu
inc
(bad)
mov
stos
call
mov
repz
daa
iret
(bad)
jle
push
ret
inc
pop
mov
xor
out
mov
stos
xchg
pop
movs
sbb
lock
cs
sbb
mov
sbb
aaa
jmp
imul
push
jns
sub
cwde
push
jmp
cld
pusha
mov
push
rcl
pop
push
fwait
shr
popa
mov
repz
pop
ja
push
xchg
sbb
cld
clc
jle
sbb
or
inc
sbb
sbb
push
ins
push
xchg
in
jb
push
loopne
lds
adc
pop
clc
sbb
pop
add
jmp
mov
idiv
add
jmp
dec
mov
pop
ins
add
push
mov
ret
test
inc
cmp
pushf
adc
stos
outs
or
mov
jecxz
dec
(bad)
lock
push
pop
inc
mov
push
pop
repnz
repz
fstp
mov
pop
dec
loope
das
and
cmp
inc
add
test
mov
js
jno
repz
int
or
sar
cmp
sti
push
mov
mov
imul
les
adc
push
and
cli
mov
mov
mov
pop
pop
aam
je
adc
in
imul
xchg
cmp
xor
and
add
(bad)
pop
adc
(bad)
xchg
pop
test
dec
dec
daa
push
pop
(bad)
rcr
ins
inc
bound
or
xchg
sbb
add
outs
popw
inc
bound
inc
iret
cli
fldz
and
outs
imul
adc
push
adc
sbb
inc
aam
pop
dec
push
test
and
in
outs
inc
mov
xchg
gs
dec
pushf
in
inc
(bad)
xor
sbb
cdq
adc
mov
(bad)
push
clc
push
pop
pop
adc
push
hlt
fistp
mov
jbe
sti
cmp
pop
jmp
hlt
rol
dec
and
jae
sub
daa
int
ret
jp
or
xchg
jmp
fcmovnu
clc
cs
aad
out
xchg
push
and
daa
fidivr
popa
test
cli
xor
outs
in
xlat
aas
jmp
call
scas
adc
gs
iret
add
cmp
cmp
jg
inc
je
sbb
jns
sar
dec
add
sub
push
cwde
dec
aam
adc
(bad)
mov
mov
xor
mov
sbb
lds
jecxz
shr
(bad)
out
cmp
outs
sub
cmps
adc
mov
(bad)
test
pop
nop
jp
adc
mov
fiadd
jne
scas
imul
or
ret
jg
mov
push
repz
mov
(bad)
(bad)
call
and
mov
in
push
dec
movs
mov
xchg
icebp
mov
jne
sub
(bad)
ss
xchg
xchg
or
fwait
imul
fisub
jo
arpl
leave
mov
fist
xor
push
dec
fdiv
leave
ret
mov
hlt
inc
jle
pop
je
xchg
adc
push
or
fcom
mov
movs
mov
lock
(bad)
adc
idiv
sti
lock
iret
xchg
call
xchg
rcl
test
sbb
pusha
cmp
adc
jl
sub
fistp
out
xor
and
repz
std
retf
clc
loopne
adc
in
push
xchg
fxam
arpl
push
rcl
cmp
inc
jl
std
cmp
jmp
int3
mov
or
sbb
fdivr
sub
sub
sub
push
pop
mov
pop
shl
inc
out
popa
std
in
or
repz
jle
hlt
ins
jge
(bad)
sahf
mov
xchg
cdq
pop
stos
shr
popa
jb
fmul
gs
mov
leave
push
jge
jb
scas
ss
clc
xchg
cmc
push
dec
(bad)
lock
stc
loop
jge
rol
fldln2
imul
xor
pop
push
sti
xchg
pushf
hlt
xchg
xor
or
pushf
rol
(bad)
pop
sub
mov
jle
jo
or
adc
sahf
xchg
adc
jl
and
mov
into
jae
int
xchg
push
scas
jne
nop
enter
mov
inc
das
clc
cmp
lods
mov
je
vpaddw
imul
pop
push
jl
xchg
jp
mov
inc
(bad)
xlat
fsubr
xchg
es
fwait
push
ret
outs
mov
clc
sbb
pusha
push
add
cmp
jle
sub
stos
outs
mov
xor
mov
push
add
sbb
adc
lds
psrlq
arpl
or
xor
or
int3
mov
xor
loope
xchg
mov
jne
retf
arpl
mov
loop
push
cmc
arpl
(bad)
nop
sbb
mov
std
loopne
and
xchg
cmp
outs
js
ss
lods
pop
or
cmp
jp
fs
cmp
jno
je
in
inc
cmps
sahf
pop
and
leave
add
mov
test
xchg
popf
push
jmp
repnz
adc
fcom
mov
jmp
cmp
jp
sbb
ins
sbb
pop
mov
ret
out
adc
fdiv
xchg
mov
push
pop
xchg
fs
add
push
(bad)
cmp
div
aas
pop
pop
mov
push
rcr
fdivr
dec
gs
test
push
in
mov
ss
cmp
fwait
mov
cli
push
loope
jmp
int
das
pop
and
cmc
rol
daa
cmps
sub
adc
adc
push
call
sbb
mov
mov
mov
outs
clc
pop
stos
aas
cdq
sbb
mov
dec
hlt
pusha
xchg
pop
leave
and
inc
inc
dec
fimul
inc
in
stos
cmp
and
jns
bound
cwde
dec
xor
jno
adc
inc
jle
mov
push
add
pop
push
ins
sti
cmp
add
retf
lea
mov
push
lods
lock
cmp
and
cld
inc
loope
fcomp
mov
sub
hlt
(bad)
call
cmp
mov
and
mov
mov
fidiv
outs
jo
xchg
je
lds
inc
enter
add
add
sbb
repz
and
fmul
push
fwait
add
jb
mov
adc
mov
dec
dec
test
jg
mov
mov
pusha
xor
in
jae
pop
xchg
call
rcr
xor
sar
mov
sbb
shr
xor
and
mov
jae
aaa
jnp
inc
push
xlat
(bad)
adc
out
jp
push
dec
mov
cmp
sub
pop
lss
xchg
mov
sub
leave
imul
ret
inc
retf
imul
mov
jns
xor
inc
movs
test
add
xchg
add
pop
jmp
fsubr
or
dec
cmc
(bad)
out
cmp
push
out
inc
std
pop
lock
inc
stc
into
push
jne
cwde
in
mov
in
cmp
out
xlat
sbb
mul
jns
(bad)
int3
jge
fist
xchg
or
add
popa
sub
jmp
dec
pop
icebp
dec
dec
adc
mov
outs
jo
jae
call
push
add
push
icebp
or
mov
aam
mov
pusha
xchg
mov
mov
sub
in
inc
and
pop
cwde
dec
sub
ret
mov
push
scas
test
or
leave
sub
sub
neg
arpl
div
fs
xchg
mov
push
outs
jns
push
pop
push
and
aam
adc
(bad)
xchg
test
gs
inc
mov
sbb
pop
outs
pop
cmp
adc
and
cmps
test
add
add
xlat
jecxz
imul
mov
out
push
iret
adc
arpl
sti
mov
adc
in
adc
mov
sti
nop
sub
nop
xlat
xor
pop
xchg
call
shr
jbe
inc
cli
into
retf
jno
xchg
push
mov
ss
jmp
sub
and
fs
in
iret
jl
leave
sbb
push
push
mov
mov
pop
or
sbb
adc
pop
ja
cmp
mov
pop
cmp
add
jge
rol
dec
or
cmps
push
retf
ins
or
dec
cwde
dec
leave
test
push
sahf
test
inc
mov
dec
adc
and
ins
das
push
cmp
mov
popf
xor
or
rcl
mov
add
cmp
sbb
jmp
push
push
mov
clc
mov
(bad)
pop
sub
inc
pop
(bad)
(bad)
jg
dec
dec
imul
imul
in
popa
rcr
push
add
or
shl
or
xor
retf
popf
enter
adc
(bad)
ficom
stc
dec
jo
daa
and
jb
test
test
push
or
add
adc
sar
aad
(bad)
les
adc
inc
js
cmc
lahf
dec
cmps
popf
shl
push
dec
mov
dec
sub
out
mov
aam
cmp
std
inc
or
xor
jmp
imul
sahf
push
mov
shr
and
add
push
stos
ss
hlt
dec
and
sub
(bad)
push
inc
xchg
ins
xchg
jp
retf
sub
adc
(bad)
in
and
std
pop
and
jnp
hlt
(bad)
aas
jg
fld
xchg
or
inc
dec
and
mov
xor
dec
int
scas
scas
and
(bad)
xchg
jns
imul
xchg
jmp
or
mov
repz
shl
jg
dec
test
cwde
out
push
xchg
clc
pop
adc
adc
shr
mov
dec
js
xchg
cmp
mov
cli
ret
ins
daa
mov
mov
fstp
and
test
push
fisttp
jmp
mov
aad
addr16
idiv
jmp
jae
sbb
scas
aaa
stc
gs
add
xchg
shr
jmp
clc
loop
pop
movs
fdiv
mov
or
test
sub
sbb
sbb
sti
icebp
retf
sub
aas
jbe
nop
mov
ins
prefetcht2
stos
aam
cmp
retf
or
push
scas
mov
test
push
cmp
jne
xchg
adc
inc
jns
cmp
leave
rcl
pop
sbb
bound
pop
jno
sub
and
mov
push
fsub
inc
call
es
cmp
sub
sbb
jg
int
and
or
bound
stos
leave
ret
pop
push
lds
pusha
(bad)
sbb
psubusw
xor
jno
mov
push
dec
pop
cmp
mov
gs
sbb
mov
jmp
mov
out
adc
and
outs
retf
jecxz
movs
(bad)
iret
outs
loop
repnz
aam
aam
mov
cld
jmp
xchg
push
cmc
or
pop
inc
out
icebp
adc
repz
call
dec
jne
dec
jae
hlt
sub
int3
jmp
mov
xor
cmps
xor
inc
arpl
repz
retf
push
in
cmp
and
pop
retf
cdq
sbb
ja
adc
cli
dec
push
sub
jbe
test
pop
push
mov
ins
data16
sub
and
or
scas
and
in
fild
mov
xchg
pop
push
jae
fcmovbe
dec
inc
sub
mov
fdiv
adc
cld
data16
icebp
daa
repnz
sub
fcmove
fdivr
cmc
inc
ins
inc
jo
jb
cmp
cmp
dec
je
mov
push
cmps
jb
pop
icebp
mov
dec
dec
adc
push
loop
mov
xor
mov
movs
add
scas
jl
and
xchg
add
scas
popa
pop
dec
fstp
pushf
xchg
(bad)
aas
or
adc
ins
mov
xlat
mov
pop
add
jl
pop
lea
stos
sbb
cmp
arpl
cli
fs
jbe
es
push
out
imul
mov
mov
ja
int
push
rcr
inc
sbb
fisub
sbb
cmc
add
int
add
daa
push
sahf
mov
fcmovu
xchg
dec
in
call
add
sahf
xchg
inc
jo
cmps
das
(bad)
adc
out
mov
cmp
pushf
push
(bad)
push
(bad)
sahf
loope
push
es
data16
xchg
add
mov
outs
and
aam
xchg
sti
shl
jle
xor
cmp
je
dec
sbb
fimul
lock
data16
push
xor
outs
fdiv
add
ret
test
shl
icebp
push
outs
fwait
aas
or
push
nop
leave
xchg
test
jmp
aaa
pop
int3
push
mov
es
or
or
dec
arpl
jge
sub
jb
(bad)
push
cmc
sahf
int
mov
xor
movs
daa
popf
outs
sbb
mov
cld
ins
inc
mov
pop
(bad)
jp
pop
rol
push
aad
repnz
dec
jae
retf
pop
(bad)
test
lahf
in
loop
dec
adc
pop
sub
(bad)
jmp
aas
std
fs
fdivr
xchg
dec
gs
push
dec
jmp
add
jle
and
clc
mov
in
pop
cmp
jo
sub
(bad)
mov
imul
mov
jmp
cmp
inc
popa
push
jae
xchg
out
(bad)
cmp
jo
fwait
push
add
fwait
sub
lods
ror
in
repz
cmc
test
popf
outs
iret
sar
fcom
mov
shr
cs
mov
mov
fsub
pop
(bad)
xchg
cmp
jnp
int3
mov
imul
cmp
cmp
xor
mov
enter
cli
std
pop
(bad)
jge
adc
popa
dec
xchg
cmc
xor
inc
cmps
loop
push
fadd
ins
mov
push
das
push
sbb
loopne
(bad)
mov
fdivr
stos
add
push
sahf
les
add
or
(bad)
clc
imul
xor
repnz
and
xor
(bad)
push
imul
jo
ins
fsub
mov
xor
dec
les
in
mov
or
add
pop
in
mov
in
adc
or
jns
xchg
imul
jb
mov
daa
pop
pop
mov
out
pop
repnz
jne
inc
ds
cli
mov
in
(bad)
scas
(bad)
jbe
inc
(bad)
cmp
mov
rol
fimul
in
movs
enter
mov
dec
call
sub
sbb
sti
fs
xor
jmp
lods
push
not
xchg
mov
imul
add
jne
xor
mov
pop
and
cdq
pop
xchg
push
or
sar
mov
cdq
sbb
mov
pop
jns
and
punpcklbw
xor
adc
pop
pop
mov
cmp
ror
sbb
push
inc
aas
dec
push
cmp
dec
push
mov
sub
sub
pop
imul
adc
inc
fcomp
push
sub
inc
pop
mov
pop
mov
jne
pop
movs
retf
add
fidiv
dec
or
lea
push
(bad)
xor
sbb
loop
mov
test
mov
inc
sbb
adc
imul
mov
call
mov
loop
std
loop
or
jle
and
nop
mov
clc
xor
xchg
mov
xchg
outs
lods
xlat
cmp
xor
stc
icebp
lods
(bad)
xor
jnp
cmp
mov
ins
cmps
lods
mov
retf
loope
leave
call
mov
jno
cli
inc
mov
(bad)
rcl
movs
xlat
in
inc
imul
arpl
mov
or
or
push
xlat
hlt
push
xor
adc
in
mov
add
adc
xchg
bound
ja
pop
lahf
sbb
bound
inc
loop
mov
mov
push
xor
out
push
sar
aas
mov
scas
jno
popa
(bad)
in
adc
jae
xor
ins
inc
out
sbb
push
stc
lock
lds
xchg
in
lahf
out
nop
ds
mov
jecxz
pop
mov
lds
pop
push
push
daa
xor
and
popa
jbe
mov
push
mov
mov
inc
jno
jo
mov
fnstsw
movs
movs
enter
dec
push
push
cmp
les
mov
out
lock
and
fnstcw
dec
xchg
add
(bad)
pushf
(bad)
in
adc
pushf
in
gs
cmps
popa
das
sbb
mul
and
mov
rol
std
(bad)
xchg
mov
loopne
pop
sbb
loop
pop
mov
repz
dec
retf
ja
dec
and
stos
sbb
sahf
mov
call
jo
or
in
ds
test
mov
push
out
xor
mov
mov
cmc
xchg
fild
(bad)
pop
dec
xchg
test
sti
popa
fwait
into
fdiv
jle
or
mov
add
sub
dec
push
sbb
jmp
jnp
movs
cdq
(bad)
neg
ret
jmp
out
mov
xchg
mov
jge
movs
dec
rep
push
scas
sbb
xchg
add
add
mov
xor
ret
cmp
push
pop
xchg
test
mov
cld
cli
aas
jle
das
dec
mov
ret
mov
jecxz
popf
sbb
sbb
pop
mov
repnz
adc
or
cmp
out
xor
in
mov
pusha
ss
sbb
jbe
mov
(bad)
cld
jnp
add
add
jl
xor
call
enter
pop
lock
fidiv
push
call
retf
lds
(bad)
sub
add
jecxz
cld
leave
push
fucomip
cmps
push
jne
imul
mov
rcl
pop
mov
call
cs
ja
adc
fistp
imul
sbb
mov
hlt
fs
dec
(bad)
ds
rep
fstp
jle
jno
push
aad
push
cmp
sub
pop
add
div
jns
adc
xchg
imul
adc
xchg
leavew
ja
popa
add
add
ss
inc
dec
jo
call
aaa
mov
loop
lahf
sub
ffree
cmp
xor
mov
adc
xchg
and
jae
icebp
add
sahf
xchg
ins
mov
aas
mov
fsub
outs
loope
loope
cs
mov
div
xchg
cwde
stos
shr
jg
cmps
aas
clc
outs
cld
ins
test
pop
sahf
xchg
ror
xor
ret
cli
(bad)
adc
push
mov
rol
mov
jl
mov
stos
cmp
mov
sbb
mov
(bad)
inc
pop
or
pop
sub
sub
sub
pop
mov
fimul
or
and
push
add
lds
dec
in
mov
xchg
xchg
arpl
xchg
mov
rol
gs
imul
test
cmp
popa
(bad)
xchg
dec
cmp
mov
fs
mov
inc
cld
fisttp
call
add
das
add
int
pop
imul
pop
mov
arpl
or
dec
mov
das
call
jbe
sbb
in
cmp
fdivp
cmp
out
lds
push
pop
sub
movs
xchg
sahf
mov
lds
xchg
xlat
retf
rcl
leave
push
push
test
mov
sub
mov
mov
xchg
inc
xchg
inc
sar
rcr
dec
daa
dec
ficomp
sub
cdq
test
lds
in
fild
ins
es
ss
jmp
fsub
sbb
std
pop
ins
and
push
mov
into
fs
ins
addr16
ror
ins
fs
movs
scas
xchg
push
push
mov
leave
xchg
and
idiv
iret
xlat
dec
add
jae
pop
ja
jg
mov
adc
lahf
les
jl
cmp
jb
cli
retf
mov
int
retf
adc
jmp
add
leave
mov
push
or
jl
rol
fistp
out
call
add
bound
push
xchg
ret
jne
loop
popf
call
push
cmp
out
cs
xor
jecxz
nop
inc
sbb
lea
fbstp
inc
retf
mov
cmps
dec
push
ja
adc
mov
lds
push
imul
in
test
cdq
ror
in
adc
push
xor
les
sub
pushf
icebp
(bad)
in
mov
push
jecxz
dec
inc
ja
sub
retf
adc
sub
(bad)
or
rcl
cmps
in
ja
adc
addr16
pushf
retf
jno
push
xchg
dec
push
adc
(bad)
dec
and
pop
hlt
iret
add
add
lods
retf
cmps
pop
in
hlt
in
cmp
or
pushf
pop
(bad)
in
aas
jno
xchg
(bad)
or
push
mov
retf
lods
popf
mov
adc
fs
std
pop
inc
inc
and
mov
sbb
lahf
mov
add
test
dec
(bad)
add
and
inc
xlat
ret
clc
repz
out
xor
add
add
fnstcw
push
nop
nop
pop
push
dec
mov
pavgw
loope
aad
xlat
jno
jnp
lds
jno
repz
pusha
imul
mov
outs
ins
inc
jno
pop
add
jmp
shr
les
aam
jecxz
mov
addr16
rol
mov
rol
xchg
add
mov
sbb
sbb
(bad)
mov
push
js
ret
shl
pop
leave
dec
in
ficomp
fdiv
shl
push
pushf
jno
add
pushf
jo
adc
rcr
sbb
pop
(bad)
mov
mov
xor
mov
pop
stos
mov
aaa
mov
dec
xchg
xor
add
int3
push
mov
push
xor
mov
dec
push
mov
dec
mov
sbb
ds
or
scas
stc
in
call
push
push
test
imul
jbe
and
or
test
xor
mov
mov
loope
arpl
xor
retf
sbb
add
adc
std
adc
or
mov
movs
call
xor
xor
dec
or
mov
aad
cmp
xchg
or
mov
fimul
mov
lods
inc
xchg
into
dec
jmp
pop
inc
mov
mov
aad
xchg
xchg
adc
or
and
xchg
pusha
mov
adc
lea
push
add
out
and
mov
ret
push
add
add
scas
hlt
repz
ss
jns
fstp
ret
(bad)
scas
and
retf
add
and
mov
int3
out
or
or
pushf
fistp
stos
and
stc
jl
mov
jns
mov
rcl
sub
call
test
aad
out
test
(bad)
mov
xor
sti
jns
xchg
std
jge
jbe
xchg
loopne
pop
leave
push
push
mov
jecxz
mov
push
xchg
fidiv
inc
adc
in
jnp
in
test
cmp
push
xchg
out
aam
mov
test
sub
rol
sub
test
push
ds
and
sahf
sbb
cmp
ins
retf
sbb
stos
or
iret
dec
and
movs
dec
jmp
push
pop
mov
outs
adc
or
sbb
pop
enter
pop
xchg
out
jne
add
fwait
add
popf
pop
movs
push
add
mov
imul
pop
cs
in
(bad)
out
dec
jl
sub
sbb
mov
sub
inc
jmp
inc
push
lea
add
pop
movs
sub
dec
aas
mov
fs
fidiv
fimul
sbb
repz
sub
mov
xchg
dec
dec
sub
xchg
cmp
adc
rcr
mov
std
dec
test
add
fisub
int
aas
mov
inc
stc
pushf
das
xchg
hlt
cwde
cmp
fisub
int
xor
es
outs
pop
push
adc
adc
imul
xor
pop
scas
pop
mov
mov
push
inc
ficomp
aaa
shr
call
xchg
(bad)
adc
and
xor
sbb
stos
adc
jbe
cwde
jge
(bad)
int3
movs
ret
adc
ds
cmps
mov
cmp
ds
cmp
mov
fnsave
vmaxsd
lods
call
push
sub
nop
call
repnz
inc
clc
cmps
movs
add
jecxz
and
and
pop
sbb
mov
xlat
bound
ret
fld
popf
(bad)
cmp
push
lods
xchg
mov
jp
jnp
cmp
mov
push
and
into
loop
add
fidivr
ds
(bad)
lahf
dec
clc
pop
ds
mov
in
jo
jg
add
jge
push
enter
mov
jp
in
jmp
xor
and
sub
repz
jne
ret
xor
jecxz
pop
ror
(bad)
ja
sub
add
mov
fistp
cwde
jmp
pop
jbe
fld
mov
jl
(bad)
mov
sti
aas
mov
stos
mov
cdq
hlt
loop
(bad)
inc
popf
push
sub
mov
xlat
jle
mov
and
cmp
jae
call
lods
je
cmps
leave
daa
push
sub
push
push
cdq
or
add
shr
ins
imul
sahf
cmp
mov
cli
div
dec
enter
jg
sar
cli
xchg
(bad)
fcomp
pop
cmc
inc
icebp
sahf
cmp
ja
int
xor
push
dec
jno
and
xor
xor
stc
fist
popa
jno
movs
shl
xor
add
xchg
ret
jmp
clc
jg
sub
es
iret
out
fbstp
(bad)
test
lods
out
scas
or
xor
les
(bad)
ficomp
int3
dec
xchg
scas
bndldx
nop
or
in
test
xor
retf
mov
fstp
cmc
dec
test
fwait
je
and
daa
or
pop
pushf
daa
movs
(bad)
(bad)
mov
add
push
jns
jmp
int
or
repnz
ret
sub
ins
repz
inc
fstp
lods
out
shl
mov
rcr
outs
dec
retf
hlt
shl
scas
in
mov
dec
add
adc
mov
pop
mov
sti
es
lods
dec
sub
out
fcomp
sbb
js
imul
and
repz
xor
inc
std
cmp
aam
pop
ror
sub
push
push
inc
mov
fwait
mov
sar
cld
xor
push
or
and
ja
leave
add
xor
jnp
(bad)
jmp
and
jge
add
popa
adc
pop
lods
not
shl
jns
(bad)
and
popf
popf
in
xor
out
xor
and
stc
adc
cmps
in
aas
push
sub
fdivr
out
test
call
cwde
shl
inc
mov
and
outs
int
mov
ret
inc
xchg
xor
mov
je
test
fisub
stc
or
popa
in
mov
jae
fisubr
pop
sar
push
ret
pop
sbb
je
xchg
popa
fistp
pusha
in
push
pop
sub
aad
mov
hlt
rcr
pushf
leave
and
xchg
or
mov
mov
xchg
xlat
xchg
xchg
add
xchg
jge
jmp
sub
mov
fistp
jmp
mov
movs
sti
retf
inc
in
nop
jns
pop
mov
pop
jns
or
movs
fdivr
fisubr
pop
int
imul
add
sub
stos
mov
or
js
leave
inc
call
mov
mov
movs
push
mov
mov
hlt
outs
ret
push
xchg
and
pop
ins
xchg
pop
jo
adc
in
or
das
pop
and
inc
nop
test
xchg
sbb
mov
jb
adc
mov
inc
push
loopne
inc
test
xor
out
movs
fld
dec
fs
lea
mov
push
imul
mov
cmp
stos
cmp
cs
inc
inc
add
or
ins
lea
movs
fiadd
push
in
(bad)
pop
cld
sub
cmp
push
mov
repnz
shr
sahf
lea
lock
outs
cmp
(bad)
stc
jl
dec
scas
not
inc
in
cmp
dec
sar
jg
mov
adc
xchg
mov
dec
pop
xchg
aam
loop
(bad)
lods
mov
jge
mov
push
push
push
(bad)
popa
cmp
xor
or
mov
jecxz
pop
push
inc
cmps
xchg
push
fwait
cs
cmp
(bad)
inc
scas
xor
fwait
sti
push
jae
and
arpl
inc
idiv
jge
cmps
xor
push
(bad)
pop
fcomp
cmp
push
jo
mov
cmps
adc
push
xchg
jnp
inc
lods
xchg
xchg
or
jbe
mov
cmps
sbb
(bad)
icebp
adc
or
out
ror
xchg
das
pusha
mov
out
pop
pop
rcr
imul
in
iret
in
mov
cmp
fsub
sub
adc
dec
jb
mov
gs
gs
(bad)
rol
jle
inc
inc
xchg
lods
cdq
gs
in
jae
mov
mov
(bad)
sti
xchg
icebp
cmp
push
mov
mov
or
inc
jle
add
out
dec
scas
mov
push
xor
ins
test
(bad)
mov
adc
inc
or
loope
adc
push
cwde
push
adc
add
dec
iret
stc
call
mov
aaa
pop
sub
(bad)
add
xchg
fsub
sub
jo
inc
xor
xchg
or
sub
daa
jns
add
popa
push
pop
pusha
mov
push
mov
or
and
mov
cwde
xor
jae
push
aas
jmp
ins
cmp
mov
je
sub
jl
xor
sahf
jmp
ds
push
and
lds
dec
xchg
mov
js
mov
sub
dec
ss
sar
lods
in
repz
jecxz
pusha
retf
add
jl
mov
nop
push
lock
sbb
ds
fadd
mov
inc
mov
add
push
xchg
fwait
mov
mov
xor
or
push
mov
ficomp
and
(bad)
mov
sbb
call
(bad)
cmp
mov
pop
mov
cdq
fild
dec
fdecstp
or
xchg
mov
xchg
add
push
(bad)
push
pop
icebp
inc
into
jo
mov
push
or
(bad)
call
jge
xchg
or
mov
(bad)
xchg
fsubr
lods
dec
cdq
lock
fidiv
movs
mov
dec
out
mov
(bad)
psllw
lods
aam
fcmovnb
repz
cdq
dec
xchg
jb
call
push
nop
and
in
out
call
int3
out
cmp
aaa
and
mov
stc
push
pop
xor
xor
and
scas
xlat
jae
pop
mov
rcl
inc
fstp
adc
xchg
jmp
outs
or
cmp
call
sbb
out
add
jmp
xchg
adc
inc
stos
sbb
adc
test
xchg
xor
pop
mov
sub
pop
xchg
add
shr
or
cmp
push
jmp
sbb
out
or
mov
sti
mov
sbb
int3
mov
push
jg
add
test
or
lods
lods
and
fild
jno
mov
lods
leave
cwde
sar
dec
jno
lea
(bad)
sub
adc
mov
push
or
ja
jmp
test
(bad)
rcl
test
push
test
jge
sbb
mov
push
sbb
(bad)
sar
pop
ins
jle
cs
push
inc
jle
out
push
(bad)
ret
cli
enter
movs
enter
jno
imul
push
xor
out
jnp
cmp
ins
ins
gs
cwde
fnstenv
jb
push
int
mov
(bad)
cmp
mov
les
out
jmp
xlat
in
sbb
test
sbb
cmp
imul
add
out
cld
mov
or
(bad)
ss
adc
inc
and
inc
imul
ficom
arpl
inc
repz
test
add
call
pop
sub
cmp
jmp
xor
mov
rcr
and
sbb
aam
sbb
aaa
shl
sub
mov
cwde
pop
arpl
mov
jbe
(bad)
cs
push
add
ds
out
iret
arpl
dec
xchg
lock
push
mov
pop
pop
cmps
inc
cmps
xor
mov
retf
gs
sbb
aaa
pop
sub
stos
adc
jg
out
fwait
jecxz
call
adc
(bad)
mov
out
call
pop
push
push
lea
push
dec
call
rol
xchg
ds
idiv
or
and
aad
or
dec
fld
adc
push
push
push
imul
shl
das
icebp
add
rol
sbb
or
mov
iret
inc
add
outs
pushf
or
pop
mov
push
xchg
int3
adc
ss
lods
(bad)
sub
jb
pusha
aaa
jno
xlat
cmp
push
jne
icebp
xor
in
cmc
sahf
xchg
shr
push
dec
xlat
iret
call
pop
dec
xchg
outs
loopne
xor
add
or
enter
sbb
(bad)
jecxz
push
jno
or
pop
sub
push
and
add
out
retf
out
add
movs
sbb
cmp
cmp
jae
daa
push
or
mov
out
add
cwde
push
test
(bad)
int3
out
push
ja
mov
add
aam
sahf
out
out
adc
inc
movs
jmp
aaa
test
pop
push
adc
mov
mov
scas
dec
loope
jmp
mov
movs
(bad)
icebp
push
cmps
aad
mov
test
jnp
sub
ret
(bad)
pmaddwd
retf
add
dec
cmp
pop
add
sub
pop
sub
outs
out
cmc
pop
push
mov
sbb
mov
push
or
jb
dec
mov
and
xchg
outs
repz
adc
pusha
out
or
inc
lods
push
(bad)
or
xchg
int3
push
sbb
cmps
dec
cmp
xlat
ds
inc
fisubr
mov
dec
dec
in
pop
imul
inc
or
sub
add
jnp
aam
(bad)
sbb
cwde
ror
cmp
xchg
test
xor
scas
dec
add
call
sahf
mov
or
ret
ss
clc
adc
inc
pusha
push
mov
mov
rol
adc
in
dec
mov
pop
outs
cs
pop
and
dec
(bad)
les
xor
push
push
fsubr
jl
sub
nop
jl
xchg
dec
lods
fs
sub
retf
clc
mov
cmps
fld
and
push
movs
mov
or
cmc
fist
test
mov
leave
jo
fisttp
push
sbb
mov
dec
loope
and
dec
mov
mov
jg
jbe
adc
aas
dec
test
ja
dec
adc
and
ja
inc
push
xchg
shl
lock
loope
sub
xlat
or
inc
sar
xlat
xchg
repnz
js
les
and
sbb
call
jge
rol
mov
sub
mov
fsubrp
int3
and
das
inc
mov
mov
mov
mov
jo
in
xor
cmp
adc
in
in
cmc
mov
sti
(bad)
imul
jo
mov
fwait
test
(bad)
mov
jmp
mov
push
in
and
and
inc
jp
sub
mov
aam
and
es
leave
sti
xchg
sbb
jbe
loope
(bad)
in
inc
xor
ds
mov
aad
stc
(bad)
xchg
sbb
(bad)
cs
push
jp
mov
pop
push
sub
aas
(bad)
and
iret
test
push
push
pop
pop
in
jbe
pushf
(bad)
hlt
push
xor
inc
rcl
pop
or
fst
les
or
push
ins
xor
adc
(bad)
xlat
xor
call
and
and
xchg
retf
mov
fwait
cmp
popa
test
and
adc
cwde
fldcw
loop
aad
inc
mov
cwde
rcl
adc
sub
mov
xchg
push
adc
imul
fiadd
mov
pop
jmp
arpl
jno
mov
call
fdiv
mov
cs
and
out
sbb
add
je
cmps
jge
mov
aas
test
mul
pop
jb
cmp
call
sub
fst
nop
mov
popf
xchg
rol
iret
sub
jb
push
movs
xlat
pop
xchg
scas
div
xor
push
loopne
pop
xor
push
out
fimul
mov
retf
jno
lahf
cli
xchg
jne
xchg
push
rcr
add
in
fcmovu
fcmovb
dec
add
adc
fcomp
hlt
or
in
test
movs
enter
jb
repz
ins
je
xlat
popa
aas
mov
das
fcom
es
(bad)
adc
outs
pop
or
test
pop
sub
mov
(bad)
popf
jp
mov
push
mov
pushf
jge
pusha
shr
das
test
push
rcl
push
int
bound
das
or
popa
jmp
jns
sbb
dec
stos
add
dec
out
cmps
imul
(bad)
outs
ins
bound
pushf
add
xor
or
jmp
out
cmc
adc
test
push
loope
loop
jp
imul
dec
lahf
mov
dec
ds
mov
jmp
push
jle
mov
add
adc
mov
mov
pop
xchg
ds
mov
dec
imul
push
sbb
int
stc
jmp
ret
sbb
mov
stos
cli
aam
in
scas
arpl
mov
je
rcl
cmp
in
mov
fldcw
pop
scas
test
lods
inc
mov
aas
mov
xlat
xchg
lock
gs
push
mov
xchg
outs
lods
ins
adc
xchg
scas
push
sti
(bad)
out
or
sahf
mov
icebp
fnsave
push
xor
cmps
xchg
cwde
inc
inc
mov
addr16
idiv
jge
aaa
sub
mov
(bad)
and
sbb
dec
ret
sbb
js
add
daa
out
ret
fcmove
fldcw
cli
out
stos
jne
xchg
inc
ins
jb
cvtdq2ps
dec
retf
fnstenv
dec
scas
nop
outs
pop
je
xchg
retf
fs
fnstenv
ror
sbb
or
test
cwde
clc
dec
pop
jb
or
js
sub
sbb
fbstp
inc
or
nop
pop
jmp
sub
xchg
movs
sub
xor
jne
xor
pop
lods
ds
xor
out
xor
jnp
lahf
psraw
mul
test
add
fmul
dec
xchg
and
sbb
inc
xchg
jmp
adc
xchg
mov
mov
fistp
scas
aam
test
inc
adc
adc
sub
aas
call
jnp
push
dec
push
and
add
xlat
cmc
mov
sub
icebp
cdq
and
push
xchg
or
(bad)
dec
mov
jae
add
ja
inc
xor
cmp
and
inc
mov
sbb
(bad)
loopne
outs
sub
mov
add
mov
pop
retf
int
mov
push
dec
sub
cwde
or
cs
ins
dec
mov
sti
cmp
sub
sub
enter
cmp
pop
or
and
and
outs
jae
scas
mov
push
mov
(bad)
sub
(bad)
(bad)
outs
test
bound
aas
(bad)
mov
daa
fimul
sub
inc
in
dec
mov
test
or
cli
xor
add
mov
jmp
xor
stos
in
mov
inc
push
push
push
xchg
push
sar
pop
dec
ret
inc
inc
retf
(bad)
sar
(bad)
cmc
xchg
cli
xchg
or
sbb
adc
rcl
dec
xor
mov
repnz
jecxz
cmc
fimul
bound
jge
jmp
fist
in
xchg
pop
pop
push
xor
fsub
repnz
sub
pop
(bad)
loopne
std
pop
xor
jp
inc
fiadd
cmp
repz
xchg
mov
xchg
xor
sub
andps
in
cdq
xor
out
dec
jne
xor
neg
(bad)
out
push
int
and
scas
imul
movs
mov
test
sub
stos
push
or
push
aaa
bound
ret
aam
jp
inc
add
mov
(bad)
mov
call
aad
cmp
fst
or
das
xor
adc
jo
push
and
jb
dec
mov
lock
mov
mov
or
jb
mov
lods
pop
ins
mov
jl
or
(bad)
fsubr
cmp
or
cmp
daa
in
adc
mov
push
mov
adc
xor
jo
idiv
test
ja
mov
lock
inc
mov
in
(bad)
clc
pop
outs
popf
pop
cmp
mov
pop
cli
stos
(bad)
jl
add
inc
lahf
jmp
lea
dec
movs
mov
jmp
bound
mov
addr16
movs
lods
jl
aam
inc
and
mov
cwde
daa
loope
call
(bad)
repnz
pop
mov
test
repz
and
xor
loope
cdq
cdq
and
sub
mov
dec
add
mov
mov
mov
push
(bad)
or
loopne
push
fcom
pause
mov
test
xchg
mov
in
in
shl
(bad)
xor
push
popf
and
push
sbb
and
mov
add
cmp
dec
hlt
clc
and
cmp
adc
mov
pop
in
les
inc
test
mov
push
gs
pop
out
lahf
int3
dec
mov
pop
imul
pop
xchg
push
out
push
nop
rol
ficom
xchg
dec
retf
add
stos
jge
fstp
gs
jmp
out
mov
ret
xlat
mov
pop
mov
mov
xor
jbe
cmp
sbb
loope
cmp
jge
out
fcomp
mov
popf
pushf
mov
test
ss
(bad)
fwait
mov
movs
(bad)
sbb
ffreep
outs
xlat
pusha
call
xor
mov
sbb
mov
adc
and
mov
inc
sub
inc
mov
movs
sbb
les
icebp
fadd
int
fstp
mov
mul
lahf
in
adc
repnz
aaa
sub
xchg
pop
inc
push
daa
or
pop
inc
ror
fsub
xchg
cmps
jno
mov
cs
test
mov
ins
stos
cmp
sets
call
scas
mov
das
add
xor
jb
mov
sub
mov
mov
cwde
push
arpl
xchg
lahf
imul
push
sbb
sub
loope
or
daa
pop
pop
mov
xor
idiv
jmp
enter
jmp
int
std
mov
sub
pushf
or
jnp
jecxz
xchg
mov
xchg
jge
(bad)
jp
pushf
fdivr
pop
pop
add
int3
pop
add
stos
inc
push
out
imul
adc
aad
pop
movs
movs
mov
loope
push
or
sti
aam
enter
call
add
bound
push
sub
into
add
inc
imul
sar
fisttp
mov
inc
cmp
inc
das
or
es
pop
push
in
dec
adc
adc
inc
lds
mov
int
leave
add
bound
call
push
add
pop
push
stc
jno
xor
stos
leave
ror
and
xchg
lock
sbb
call
mov
adc
loopne
push
cld
pop
jle
jl
iret
mov
mov
push
retf
push
push
or
imul
movs
or
es
aam
scas
add
js
sbb
out
pop
jmp
inc
jno
call
aam
jb
leave
add
mov
mov
ror
push
xchg
or
out
mov
fstp
scas
xor
jae
push
(bad)
xchg
jne
sub
inc
out
jne
dec
sub
xor
fdivr
test
adc
mov
scas
push
jg
or
jmp
jmp
popa
cdq
aam
xlat
(bad)
and
xchg
push
ret
pop
add
xor
add
ja
mov
popa
nop
aad
sub
std
or
adc
inc
and
mov
add
cdq
pushf
inc
sub
cdq
or
xlat
and
out
repnz
(bad)
push
std
or
ror
mov
and
inc
cdq
ror
sbb
inc
pop
add
imul
push
xchg
int
jmp
mov
popa
ror
mov
cmp
repz
mov
call
mov
pop
ins
cmp
fsubr
jmp
cdq
aam
sub
mov
loopne
(bad)
mov
std
pop
mov
dec
mov
js
call
repz
or
int3
sub
js
mov
stc
(bad)
not
in
jg
dec
rcl
nop
pop
ins
adc
cmc
mov
xor
sub
imul
pop
push
mov
push
dec
fistp
call
mov
int3
mov
xchg
lds
cmp
or
shl
je
outs
push
js
popa
xchg
loop
je
mov
int
or
clc
inc
push
cmp
ret
call
xchg
inc
sbb
and
retf
pop
stos
or
call
sbb
test
sbb
pusha
jne
out
or
xor
push
add
aaa
jl
(bad)
pop
pop
ss
ror
cwde
pop
cmp
sub
aam
lock
inc
jge
fs
cwde
repz
ret
loopne
push
aam
dec
sbb
xor
ins
adc
aaa
icebp
mov
call
inc
cmps
call
fild
imul
push
aam
sbb
push
ds
and
sahf
dec
xor
mov
loop
jae
outs
not
mov
inc
mov
adc
imul
xor
mov
out
iret
sbb
pop
pusha
mov
jb
test
cdq
sub
loope
jp
stos
pop
cmp
daa
imul
xor
adc
(bad)
xor
cmps
sbb
xchg
adc
xchg
xor
and
mov
retf
lahf
sub
cli
mov
cmp
mov
inc
(bad)
and
add
adc
test
iret
jecxz
dec
jae
mov
jecxz
aas
xor
stos
aad
das
mov
aam
ss
push
cmp
pop
cmp
cld
push
xchg
adc
cmp
inc
dec
ror
push
jg
loopne
push
jns
jns
or
fdiv
ficom
into
int3
ret
mov
icebp
jno
shl
scas
test
sbb
pop
adc
lock
(bad)
ins
inc
jecxz
jns
and
punpckldq
xor
mov
repnz
js
mov
(bad)
neg
inc
xor
mov
cmp
adc
mov
jbe
pop
icebp
jmp
call
or
das
ds
icebp
imul
ja
cmp
(bad)
bound
dec
clc
retf
cmps
jle
pop
cmp
ret
mov
sub
dec
cld
pop
fmul
pop
xor
in
mov
inc
arpl
push
mov
ret
out
dec
mov
rcr
push
pusha
aaa
mov
mov
cmp
loope
(bad)
or
adc
sub
ss
iret
jbe
pop
outs
cld
push
or
mov
mov
sbb
call
sbb
test
mov
fbstp
or
fs
mov
movs
repz
retf
inc
mov
lods
inc
jge
sbb
push
push
test
pop
mov
xchg
mov
mov
xchg
dec
fsubr
mov
xor
push
dec
xchg
leave
cdq
xlat
ror
cmps
xlat
mov
or
xor
cmc
fwait
and
gs
xchg
out
xchg
stc
mov
push
push
sbb
cli
test
sub
cli
cmp
push
mov
cmp
sub
pushf
fs
out
jecxz
adc
jne
dec
pop
retf
lods
pop
xchg
pusha
sbb
mov
cs
cmp
and
jmp
jmp
mov
fucomp
sbb
(bad)
dec
stos
icebp
push
ds
out
or
inc
sbb
ds
push
in
loope
dec
hlt
xor
les
add
dec
leave
les
adc
dec
aam
sti
jb
pop
enter
push
outs
fwait
dec
xchg
inc
mov
inc
push
inc
out
push
lods
push
jmp
stos
nop
cmc
outs
sub
sub
mov
(bad)
jae
ins
inc
cwde
in
xor
or
imul
faddp
fldenv
outs
int3
sub
add
mov
out
add
inc
jno
rcl
dec
aad
das
jg
jae
movs
pop
xor
rol
dec
adc
or
cli
lods
movs
scas
rcr
xor
push
stos
lock
das
mov
mov
xor
gs
push
out
xor
popa
push
imul
enter
add
cmc
fcmovbe
push
clc
mov
add
or
inc
sub
pop
jl
sub
cli
mov
jbe
mov
sub
jb
ret
ror
push
ret
push
inc
xchg
mov
gs
lea
fidiv
dec
add
retf
dec
test
bound
push
cmp
stos
je
cdq
lock
pop
ret
mov
(bad)
fdivr
js
in
inc
aas
lods
or
addps
sub
es
push
and
sub
repz
fstp
push
loope
rol
mov
aad
and
add
(bad)
mov
aad
mov
push
cmp
gs
mov
jns
(bad)
pushf
dec
sbb
(bad)
repz
pop
cli
mov
in
mov
xchg
and
mov
fild
(bad)
jmp
or
mov
lea
stc
cmp
sub
add
cmp
mov
cmp
(bad)
sub
sub
dec
fst
fsubr
outs
pop
jno
jp
aaa
jecxz
addr16
push
mov
loopne
jge
jns
sub
sub
les
mov
prefetch
jmp
ror
push
mov
and
push
es
rol
iret
fst
movs
pushf
das
addr16
adc
sahf
lods
xor
add
xchg
fmul
sahf
hlt
mov
dec
ja
lock
retf
iret
loope
dec
jns
cmp
mov
popf
(bad)
mov
pop
(bad)
idiv
mov
xor
in
jle
call
std
xchg
scas
mov
inc
(bad)
test
out
mov
repnz
inc
fst
mov
cmp
sbb
mov
sub
mov
mov
loope
xchg
pushf
cmp
sar
pop
shr
jne
pop
push
xchg
ret
dec
cmp
mov
or
out
push
xor
loopne
hlt
aas
inc
stos
jl
dec
leave
xchg
repz
dec
mov
es
rol
and
iret
jmp
mov
lds
adc
xor
mov
add
fmul
sbb
jl
xor
(bad)
sub
xlat
and
mov
jmp
push
out
or
in
adc
mov
mov
push
mov
mov
bound
or
jmp
imul
stos
jno
cmp
mov
mov
xchg
push
xchg
mov
arpl
das
or
loopne
(bad)
mov
and
arpl
xchg
xchg
popf
cs
clc
mul
mov
mov
push
daa
jmp
loopne
cmc
mov
ss
jecxz
shr
xor
mov
or
and
ins
out
inc
shld
xchg
mov
add
mov
nop
lea
scas
ret
add
and
inc
int3
repz
adc
mov
pop
(bad)
sub
push
imul
into
loop
icebp
xchg
ds
xchg
inc
cmp
add
stos
ror
dec
lea
or
or
outs
fdivrp
sub
scas
inc
cmp
out
push
cmps
leave
pop
sub
push
sub
out
push
xchg
xchg
sbb
loopne
xchg
push
adc
add
call
pop
mov
pop
(bad)
inc
sub
shl
test
addr16
xchg
pop
retf
cwde
and
loop
mov
inc
mov
dec
add
mov
fild
dec
ret
xchg
push
jae
lahf
cmp
outs
(bad)
and
sti
fnsave
jnp
sbb
add
jecxz
xor
movs
ins
mov
pop
daa
jno
ins
mov
test
mov
(bad)
sub
out
dec
sbb
dec
push
pop
outs
pop
sub
int
leave
push
(bad)
(bad)
out
in
sbb
enter
loopne
mov
cmp
xchg
dec
xchg
xchg
test
out
cmp
rcl
mov
movs
sti
arpl
je
data16
xchg
es
xchg
data16
in
mov
std
jg
pop
mov
mov
dec
push
cli
test
aad
dec
dec
jmp
sub
pop
push
xor
sub
loope
dec
pusha
mov
jno
jmp
(bad)
jbe
gs
mov
adc
and
mov
sub
push
ins
inc
lods
clc
mov
jp
mov
mov
xor
push
cmc
pop
push
adc
rcr
arpl
push
les
fadd
mov
sub
repz
nop
jae
mov
mov
jb
jge
ins
cmps
jg
sbb
xor
dec
jbe
in
jmp
jecxz
push
pop
dec
test
retf
test
leave
xor
dec
and
cmp
push
mov
mov
and
scas
jae
jnp
mov
cmp
xchg
(bad)
hlt
rol
retf
call
je
int
xchg
cmp
mov
sbb
data16
and
jno
inc
xchg
lds
or
mov
(bad)
xor
sbb
add
sbb
(bad)
dec
mov
fisttp
sahf
das
xor
pop
int
add
in
xchg
jbe
cmp
push
xchg
in
sbb
xor
adc
sub
loope
out
ror
mov
push
xor
in
repnz
jmp
or
(bad)
setno
movs
aam
jp
pop
out
mov
in
inc
dec
test
(bad)
in
out
fdivr
xchg
ja
pop
pop
inc
lods
rol
jmp
outs
push
es
dec
adc
(bad)
repnz
pop
push
fmul
mov
out
dec
cdq
cs
jmp
dec
sub
jmp
adc
sbb
rcr
push
daa
adc
jnp
adc
jnp
xchg
dec
inc
dec
xchg
in
dec
adc
mov
lods
push
or
mov
mov
xchg
es
jecxz
jne
pop
dec
or
repnz
pop
pop
add
pop
out
pop
test
outs
xchg
xchg
sbb
pop
les
inc
loope
shl
and
push
and
movs
call
iret
je
sti
into
push
les
or
shl
xchg
and
xlat
(bad)
arpl
mov
and
inc
mov
xor
xchg
call
xchg
pop
jb
jbe
mov
clc
xor
adc
cwde
jo
out
push
js
push
add
cmp
retf
aad
nop
push
mov
ja
push
mov
rcr
push
scas
icebp
inc
jg
sete
cmp
sbb
mov
mov
mov
add
mov
pop
dec
cmp
jae
mov
fdivr
sub
minss
jns
pusha
test
pushf
enter
mov
dec
loope
dec
jno
(bad)
imul
enter
push
test
sti
ror
sub
aaa
mov
xor
(bad)
pushf
call
mov
xor
sbb
aam
jmp
nop
cmp
dec
mov
jmp
lea
ds
and
adc
scas
adc
sbb
push
mov
movs
fidiv
sbb
ret
mov
jns
xchg
jne
fsubr
scas
bound
push
iret
movs
dec
mov
pushf
imul
in
pushf
ror
push
int
mov
sub
sub
jl
fnstsw
call
or
in
scas
sub
mov
pop
ss
fld
add
ja
out
das
mov
cmps
lods
xchg
adc
adc
(bad)
jecxz
push
jae
mov
or
adc
pop
dec
(bad)
cdq
repz
aas
push
int
cmp
cmp
sub
or
movs
fsub
cmp
and
dec
enter
jmp
les
fimul
sbb
sbb
cdq
xor
jnp
xchg
cld
and
scas
test
push
lods
pushf
mov
adc
sti
push
xchg
outs
mov
mov
(bad)
dec
addr16
push
mov
push
sub
imul
lods
jle
dec
mov
lods
and
add
jecxz
cs
adc
cld
mov
fstp
outs
retf
(bad)
mov
and
mov
or
lods
fs
fiadd
sub
aam
mov
movs
retf
mov
xlat
ins
mov
inc
test
shl
inc
push
jp
mov
aas
inc
or
mov
push
inc
(bad)
not
cld
or
mov
(bad)
(bad)
add
sar
jmp
iret
call
inc
dec
jecxz
mov
push
cmp
out
push
or
stos
stc
pop
in
fwait
aad
fistp
icebp
shl
dec
fisub
sbb
hlt
out
adc
push
enter
hlt
xchg
repz
retf
adc
sub
push
jmp
shl
add
or
fst
cmp
xlat
pop
out
inc
cmps
movs
sti
sbb
sbb
pop
and
movs
(bad)
xlat
dec
xor
fist
addr16
dec
xor
or
jnp
stos
xor
setae
fs
ret
jne
(bad)
cli
sub
out
sbb
push
xchg
pushf
clc
icebp
fldenv
cmp
lods
add
mov
imul
cmp
and
enter
xor
movs
test
imul
add
pushf
daa
or
dec
fild
xchg
adc
mov
and
fimul
push
jl
sbb
or
bound
xchg
sub
jnp
fnstsw
mov
jne
es
sub
and
fwait
cld
push
or
cmps
mov
or
pop
movs
dec
lods
pop
rcr
inc
ret
pop
or
nop
adc
fcom
inc
std
fcomip
popa
mov
jmp
mov
leave
inc
dec
add
jg
push
sub
jmp
aad
out
iret
js
or
push
hlt
es
sbb
sbb
dec
in
fisttp
cmp
in
sbb
imul
push
xlat
fld
stos
std
push
dec
arpl
in
ss
jle
sbb
les
push
mov
aam
cwde
fisttp
sahf
mov
std
ret
inc
mov
(bad)
push
aad
add
cmp
shl
inc
mov
jmp
ds
pop
adc
dec
jmp
cmp
inc
aad
stos
cmps
or
(bad)
jmp
add
sub
mov
idiv
or
pop
sub
mov
out
mov
rcr
shl
or
ret
loop
das
ror
test
ins
out
cmp
and
lea
or
pop
pop
nop
(bad)
(bad)
das
sub
jmp
and
inc
repnz
sub
(bad)
ret
xchg
xor
mov
std
pushf
inc
popa
adc
(bad)
(bad)
(bad)
sahf
les
adc
(bad)
std
sti
push
jg
inc
repnz
cmp
in
addr16
cld
jbe
arpl
pusha
addr16
enter
cmps
pop
jecxz
lock
je
xchg
or
in
cmp
add
add
retf
imul
or
fs
sub
dec
inc
je
xchg
mov
ins
jl
fild
xchg
mov
jb
and
rcr
lea
les
test
(bad)
push
stc
inc
iret
stc
xchg
xchg
icebp
and
and
data16
out
call
movs
jmp
inc
sbb
das
or
call
lods
mov
xor
or
jnp
stc
mov
ds
dec
jnp
leave
push
push
sub
fstp
or
test
inc
pusha
push
add
out
leave
(bad)
call
movs
outs
std
outs
fs
ins
jmp
(bad)
rcr
xchg
pushf
cmp
cmp
(bad)
adc
das
xchg
sub
and
xor
bound
test
movs
aas
cmp
xor
clc
(bad)
xchg
lods
pop
push
and
ror
push
sbb
xlat
loope
sub
in
xchg
daa
shr
cld
xchg
jne
sahf
jg
mov
mov
fadd
lea
jmp
(bad)
and
pop
mov
data16
leave
dec
push
mov
dec
out
sub
adc
push
inc
shr
imul
fsubr
dec
or
mov
sbb
(bad)
sti
test
push
clc
fs
mov
retf
mov
cmp
jg
loope
sub
xchg
jns
fcom
mov
rcr
add
movs
jmp
test
adc
push
xchg
cmps
lds
cmc
mov
xchg
or
in
jno
mov
inc
adc
xchg
out
xor
ss
hlt
sti
bound
mov
rol
xchg
dec
in
in
inc
repz
addr16
or
mov
idiv
sub
outs
sbb
xor
fisttp
imul
sbb
(bad)
dec
pop
or
fwait
je
cmp
push
pop
sti
pop
jb
push
stc
cmc
mov
lods
daa
xor
in
mov
ja
cmp
mov
or
mov
sub
sub
cmp
inc
jge
sbb
xor
gs
add
cld
mov
inc
xor
jnp
jno
popa
jbe
xchg
jmp
rep
inc
pushf
jbe
ins
pop
mov
scas
ins
cmps
sbb
sub
adc
clc
jmp
fcmove
cmp
xchg
mov
int
gs
sbb
fs
mov
or
push
(bad)
and
pop
cmc
nop
adc
pop
fcomp
test
xchg
sbb
dec
sbb
cmp
scas
mov
ret
test
mov
xor
(bad)
retf
dec
out
rcr
test
xchg
adc
js
mov
test
retf
outs
sub
mov
mov
leave
dec
lock
imul
ss
dec
or
popa
xchg
retf
movs
xor
xor
and
inc
gs
jg
popa
mov
retf
out
mov
imul
stos
cmp
mov
xor
add
out
jecxz
xor
out
push
push
es
dec
mov
add
xchg
pop
mov
js
cmp
leave
sub
rcl
cmp
cmp
cmp
mov
sub
movs
dec
cmp
cmps
cwde
and
sbb
add
sbb
or
dec
ins
outs
in
ror
shl
repnz
test
sub
lahf
push
dec
lfs
ja
outs
jl
sub
mov
ret
loop
jmp
dec
jne
and
cmp
add
mov
ins
frstor
sbb
xchg
lods
cmp
jnp
or
sub
and
jle
cli
dec
inc
add
fsubr
and
mov
loopne
inc
ins
stos
dec
sbb
sub
fidiv
popf
sub
dec
xchg
icebp
xchg
add
jp
shl
jno
push
stos
push
xor
dec
pop
push
xchg
pop
jl
mov
daa
out
jecxz
xor
je
fcom
sbb
push
dec
adc
lea
(bad)
sub
adc
sbb
jo
fldcw
push
push
mov
mov
or
cmp
out
inc
or
out
and
es
cmp
xchg
sub
loope
mov
bound
jnp
xor
fwait
push
pop
outs
cli
retf
sbb
cmps
popa
into
lods
add
(bad)
or
mov
jne
adc
jno
push
jmp
scas
stos
aad
aad
push
out
mov
(bad)
inc
iret
aam
ins
and
push
cmp
dec
xchg
int
mov
inc
neg
sub
pop
push
cld
xchg
bnd
sub
ins
pop
mul
pop
gs
aas
lods
call
shl
xchg
jg
mov
nop
clts
xlat
jbe
pop
fmulp
pop
in
sti
xor
gs
lods
sub
outs
inc
(bad)
sub
mov
loop
adc
and
ret
dec
jbe
fstp
jns
or
jmp
lock
test
xchg
xor
imul
jae
ss
jecxz
rcr
push
xor
and
int3
call
hlt
mov
cld
add
xor
dec
and
sbb
pushf
aam
push
jae
dec
add
push
cld
stc
mov
xchg
jg
not
loopne
jno
or
pop
int3
jns
mov
pop
retf
jp
mov
sub
imul
data16
sbb
mov
inc
or
ret
rcr
test
push
loope
outs
cmp
mov
inc
push
xchg
retf
dec
mov
cli
mov
cmp
jnp
sub
push
loopne
inc
pop
das
(bad)
mov
nop
pop
inc
in
je
mov
fistp
xchg
and
inc
push
xchg
inc
xor
out
rcl
pop
inc
push
and
push
adc
mov
xchg
cdq
ret
inc
jecxz
scas
ret
xchg
stc
sar
add
jae
xchg
stos
mov
pop
xor
popf
jmp
mov
pop
es
mov
mov
xchg
sbb
call
retf
xor
xor
jmp
rol
jnp
ds
sti
retf
and
push
xor
pop
mov
or
idiv
sbb
int
jp
pop
sub
cmp
jecxz
inc
cld
out
inc
or
daa
test
rol
loopne
shl
jne
sbb
outs
lods
mov
pop
stos
mov
iret
inc
sbb
(bad)
scas
mov
ror
daa
xchg
mov
mov
xor
lods
cmp
aas
lock
fmul
std
mov
in
dec
icebp
cmp
retf
sbb
gs
daa
xor
adc
imul
lock
or
stc
retf
push
lods
sti
cmp
bound
mov
dec
outs
jp
add
cmps
mov
cwde
inc
or
shr
pushw
sub
stos
into
int
je
scas
push
loope
lds
das
sbb
add
xchg
dec
push
shl
and
mov
mov
sbb
mov
push
hlt
add
mov
xchg
mov
test
inc
les
(bad)
fstp
xchg
jae
xchg
out
cld
add
enter
mov
fld
pop
fisubr
jmp
std
cmp
stos
mov
stos
icebp
xchg
aad
mov
cld
outs
out
test
pop
or
ins
test
inc
ja
push
cmp
jmp
call
xchg
lea
add
ja
pop
pop
mov
cmps
(bad)
hlt
dec
mov
and
pop
lods
inc
aam
add
add
lock
cmps
icebp
mov
test
mov
or
push
jo
in
retf
hlt
daa
imul
enter
lock
cdq
lock
push
mov
mov
int3
bound
xor
cwde
fdiv
mov
adc
lods
xchg
iret
adc
popf
mov
stos
push
add
(bad)
cmc
jb
call
inc
mov
push
fs
sbb
icebp
sub
test
imul
pushf
push
lods
lea
sub
jle
push
push
dec
(bad)
out
scas
loopne
sbb
mov
mov
sbb
mov
inc
xchg
data16
sub
push
ret
shl
jb
adc
retf
adc
lock
cs
push
xchg
stos
jmp
int3
inc
xchg
jle
scas
ret
adc
sbb
loopne
xor
or
dec
ret
shl
jbe
or
mov
pop
scas
push
test
js
cmp
ror
retf
mov
lds
push
(bad)
lods
sbb
(bad)
fbstp
aas
es
pop
pop
call
loopne
or
daa
mov
mov
sbb
sbb
lock
push
mov
test
mov
push
inc
je
int3
(bad)
fimul
inc
pop
xor
shr
fs
and
sub
and
mov
mov
xor
xlat
jg
xor
daa
in
pop
jl
dec
inc
(bad)
xchg
xchg
sti
(bad)
sbb
int3
sbb
adc
stos
outs
xor
pop
jbe
and
jge
inc
or
in
cdq
in
sbb
call
jae
xchg
fs
jg
aas
cli
fwait
outs
retf
cmc
add
ds
lds
idiv
mov
(bad)
sub
dec
inc
imul
pop
daa
adc
add
mov
sbb
retf
mul
cli
retf
adc
jge
test
sub
jmp
inc
pop
push
inc
jo
add
arpl
loopne
jb
mov
in
inc
(bad)
mov
(bad)
mov
push
dec
mov
mov
inc
cmp
pop
pop
mov
shl
sub
xchg
or
int3
xor
mov
fnsave
cmc
cmp
es
(bad)
jmp
mov
(bad)
mov
mov
out
fs
cmp
pop
dec
cmp
add
mov
cmp
imul
xchg
in
sahf
aas
ss
inc
mov
(bad)
jae
rcr
(bad)
mov
adc
mov
mov
bound
sbb
retf
pushf
xchg
ret
cmp
add
hlt
xchg
hlt
fnstsw
icebp
scas
fild
loopne
pop
pop
xchg
pmaxub
out
or
fstp
(bad)
daa
stos
mov
mov
push
push
mov
inc
gs
mov
xor
cmps
pop
aas
cli
cmp
mov
sub
lahf
mov
cmp
ins
and
cwde
pop
mov
add
or
add
dec
add
dec
dec
sub
pop
and
adc
sti
mov
jbe
retf
add
mov
adc
std
adc
not
pop
mov
xchg
(bad)
and
dec
xor
cs
stc
mov
ret
sti
jno
out
(bad)
in
stc
pusha
fsub
cmp
(bad)
lds
mov
jnp
cld
sar
fist
push
push
adc
push
sahf
jg
fist
add
or
jb
pop
fwait
ret
stc
mul
fs
imul
gs
inc
push
xchg
scas
mov
pop
call
es
outs
adc
pushf
xchg
imul
pushf
(bad)
sub
mov
mov
cmps
ss
retf
in
jle
pop
sbb
in
add
ins
push
fistp
adc
ss
pop
test
sub
stc
cli
mov
daa
push
scas
pop
mov
(bad)
mov
push
vpshad
mov
mov
sar
es
ds
dec
jmp
popf
sbb
pop
cmp
data16
pop
in
das
inc
add
push
pop
(bad)
pop
inc
push
pop
pop
sub
push
fldcw
xor
sahf
into
xchg
mov
jmp
mov
pop
test
(bad)
gs
out
push
xchg
add
das
nop
loopne
xor
mov
(bad)
mov
dec
test
sbb
mov
xchg
jns
movs
cmp
jno
sub
ret
sar
push
xchg
pop
aad
xor
nop
nop
xor
out
mov
xlat
inc
stc
push
jno
inc
iret
dec
jmp
popf
xchg
sahf
fsubr
aam
cwde
jle
mov
ret
arpl
dec
push
mov
int
push
adc
cmp
movs
and
add
pop
and
sbb
mov
call
and
repnz
or
push
loop
jnp
add
pop
data16
leave
dec
push
les
outs
pop
jne
and
jns
retf
mov
mov
xor
pop
xor
add
cld
fucomip
jmp
mov
dec
cld
jo
call
and
aam
mov
and
cmp
dec
stos
ins
pop
mov
jmp
mov
mov
add
or
xchg
popf
out
mov
mov
cmp
test
fadd
push
mov
ret
mov
jbe
xor
ret
mov
lahf
jmp
scas
leave
xor
pushf
inc
dec
outs
push
cmc
repz
in
sti
dec
fnstcw
mov
push
imul
push
fwait
sub
dec
mov
sub
mov
dec
inc
movs
pop
sbb
ret
jo
pop
call
cmp
xchg
or
mov
dec
out
xor
push
xor
(bad)
mov
mov
or
(bad)
clc
push
(bad)
jle
jo
imul
dec
(bad)
cmps
(bad)
imul
and
push
out
jmp
dec
push
test
ins
pop
pusha
sub
in
cmp
fst
(bad)
mov
popf
lods
out
shl
or
push
in
sbb
adc
stos
mov
adc
mov
sub
cmp
js
mul
out
mov
test
loope
adc
push
(bad)
pusha
dec
sbb
lds
in
ror
dec
ret
inc
ret
mov
mov
xchg
inc
pusha
mov
cwde
lods
inc
and
mov
cs
mov
pop
or
inc
pop
outs
push
and
rcl
mov
adc
out
lods
pop
mov
cmc
movs
pop
imul
sbb
rol
icebp
nop
add
sub
pop
mul
stc
sub
lock
xchg
jl
and
cdq
mov
arpl
push
jns
cmps
sub
dec
stos
or
mov
xor
dec
(bad)
les
data16
jns
ret
xchg
xchg
movs
(bad)
and
jnp
ja
cmp
or
shl
xor
ins
jp
mov
sbb
movs
pop
mov
dec
jl
(bad)
(bad)
lds
xchg
sbb
leave
fiadd
icebp
popf
xchg
cmp
ins
pop
call
test
jne
leave
in
sub
pop
stos
sbb
pop
retf
jns
add
jecxz
stos
mov
jmp
fnstsw
push
pop
cmp
push
cmp
mov
push
xchg
data16
push
arpl
es
xor
mov
xor
daa
inc
push
or
push
repz
enter
outs
mov
rcl
inc
xchg
mov
push
cmp
inc
inc
fsubp
neg
rcl
pop
daa
popa
pop
mov
jnp
jbe
jb
adc
sub
push
or
mov
cmp
mov
sub
popa
call
and
daa
into
je
mov
mov
cmc
cmp
in
xchg
jl
retf
hlt
jnp
scas
dec
ret
or
in
add
(bad)
clc
sub
(bad)
cld
xor
dec
mov
dec
lods
aaa
xchg
fld
sbb
popf
addr16
cmc
(bad)
pop
push
push
dec
popa
mov
sub
enter
push
stos
jbe
in
inc
je
cmp
test
test
inc
dec
mov
xor
cld
and
cmp
scas
stc
pop
inc
aam
loop
arpl
daa
gs
and
xchg
aad
jno
out
fdiv
and
and
sti
or
mov
ins
jbe
jmp
sub
test
fcomp
xor
fwait
pop
pushf
loop
ror
hlt
adc
add
push
test
xchg
lods
out
sbb
(bad)
lea
mov
inc
inc
sbb
jge
or
adc
out
and
cwde
ins
clc
das
sar
data16
pop
into
(bad)
cld
push
xchg
shl
push
pop
push
fistp
test
cmps
setb
(bad)
cmps
(bad)
or
sti
mov
push
in
imul
leave
or
stc
pop
ror
aam
adc
inc
cmps
pop
adc
xor
dec
sti
push
jp
test
add
jmp
fmul
fdiv
inc
inc
adc
mov
adc
sbb
sbb
test
(bad)
dec
je
jne
bound
aaa
pop
xor
imul
lods
scas
inc
dec
push
cmp
ret
fnstenv
push
add
out
mov
rol
in
cmp
dec
and
and
mov
loopne
cmps
mov
jmp
(bad)
xchg
pushf
lods
and
fdiv
jge
push
sub
xchg
inc
sbb
mov
mov
std
and
pop
and
cmps
aad
call
neg
rcr
ror
clc
or
mov
lea
and
pop
adc
test
xchg
pushf
jecxz
push
pop
repnz
and
in
jbe
ins
mov
or
out
sub
jge
test
jl
pop
aad
mov
inc
push
stos
jns
cld
push
(bad)
lahf
mov
xor
mov
popa
mov
sbb
loopne
shl
std
mov
gs
add
mov
daa
sub
hlt
jae
jg
ins
aad
test
cmp
xor
in
cmps
lds
aas
movs
mov
xchg
adc
push
mov
ror
pop
dec
push
jnp
or
fnstsw
loopne
cdq
jp
loope
xchg
xchg
xchg
jmp
idiv
addr16
cmp
sub
jge
mov
into
cmp
jne
pop
pop
mov
mov
push
mov
mov
xchg
fisubr
sahf
sbb
push
add
test
daa
mov
push
imul
ins
(bad)
aas
jns
cmp
(bad)
or
imul
inc
js
inc
jbe
sub
cmp
or
push
dec
xchg
daa
aad
xor
jge
imul
dec
or
pop
(bad)
std
daa
pop
mov
mov
adc
or
jno
push
gs
imul
push
clc
adc
cmp
cmp
popf
mov
popa
shl
dec
mov
mov
ror
add
rcl
jge
fs
xor
jae
ins
aam
pop
mov
test
lea
rcr
sub
dec
nop
push
adc
psrad
cdq
fyl2x
aam
push
hlt
mov
sub
pop
adc
jo
push
loope
outs
or
sbb
mov
push
les
fbstp
mov
addr16
leave
clc
ins
pop
push
(bad)
mov
js
pop
lods
add
sub
inc
inc
movs
mov
jbe
mov
sahf
xchg
shl
in
mov
xor
push
(bad)
fwait
mov
add
stc
or
aas
cmp
pop
inc
and
icebp
jle
aaa
cli
cmp
add
add
cs
stc
js
push
jl
jecxz
mov
movs
xchg
daa
sub
jecxz
inc
shl
add
(bad)
mov
cs
ins
daa
sub
or
pop
sbb
jnp
sbb
arpl
mov
cmp
xchg
mov
dec
mov
call
mov
test
dec
call
sbb
sbb
push
cmp
push
and
std
jbe
movs
lea
cmp
or
loopne
adc
pop
lahf
add
adc
inc
test
jnp
icebp
clc
sti
jnp
pushf
inc
and
call
ror
(bad)
sub
push
adc
jle
cmp
aad
icebp
pop
add
ficomp
xor
mov
movs
sar
out
or
or
shl
xchg
mov
(bad)
sub
es
push
test
mov
adc
lods
sub
sahf
dec
aad
movs
push
push
and
les
(bad)
push
adc
shr
fmul
pop
pop
sub
pop
push
lea
call
inc
adc
pop
mov
jle
mov
xchg
mov
or
bound
pusha
bound
add
lds
dec
jnp
add
push
arpl
cs
test
mov
enter
les
mov
sbb
and
pop
iret
out
mov
gs
(bad)
xor
push
mov
pop
mov
je
mov
push
sub
jbe
loopne
test
and
(bad)
push
hlt
pop
loope
(bad)
fucom
or
jmp
cmp
jl
or
mov
push
mov
sbb
inc
in
mov
inc
mov
ins
retf
mov
repz
and
mov
loopne
pop
(bad)
lock
nop
xor
mov
and
test
xchg
bound
pop
push
pop
popf
in
mov
xor
nop
mov
cld
and
fs
stos
rcr
xchg
xchg
les
fst
loop
dec
aaa
movs
les
and
inc
push
jp
(bad)
shl
aas
ins
out
retf
lahf
dec
sbb
cmps
sbb
cmc
sbb
test
mov
jbe
mov
test
or
inc
xchg
mov
outs
fiadd
jl
cmp
mov
nop
ja
push
push
in
ret
das
call
mov
dec
or
retf
stos
sub
sbb
push
outs
push
adc
xchg
and
out
lods
jge
inc
jge
xor
jb
jmp
jbe
sbb
add
loop
pop
xchg
popf
xchg
mov
jo
pop
(bad)
cmp
mov
add
adc
inc
sti
je
ret
cs
or
sub
out
mov
cmp
dec
pop
push
dec
push
xchg
movs
jae
fmulp
(bad)
and
es
push
xchg
gs
(bad)
iret
cmp
std
add
ja
aaa
loop
sub
jp
jns
jge
retf
jp
pop
jbe
push
fucomp
adc
lds
ss
stc
pusha
pop
fsubr
inc
fwait
cdq
cmps
ja
mov
or
shl
push
clc
dec
inc
push
mov
mov
clc
ins
mov
imul
call
and
add
xor
fwait
jns
pop
sahf
or
out
pusha
xor
cmp
mov
leave
mov
xor
and
push
scas
add
mov
test
in
dec
sbb
push
push
push
or
lahf
add
retf
push
fcmovu
clc
mov
ins
jecxz
ins
pop
fistp
xor
out
scas
adc
adc
aad
add
fist
js
out
mov
mov
ror
sbb
movs
push
jae
pop
cmps
xchg
enter
push
retf
popf
scas
cdq
sbb
pop
cli
or
ret
push
push
cwde
xchg
xor
enter
retf
jns
sub
arpl
mov
mov
pop
retf
xchg
arpl
sub
mov
xor
push
mov
cmps
in
aaa
cmps
popa
cmps
cmp
cmp
imul
out
mov
jp
dec
mov
jmp
call
retf
pusha
mov
cmp
cmp
inc
mov
in
lods
jle
inc
call
cmp
adc
or
(bad)
loop
scas
xchg
jle
push
call
in
cmps
dec
jg
add
xchg
xchg
xchg
es
sub
jle
pusha
ficomp
push
push
out
inc
lds
clc
jge
cmp
jb
aas
pop
sbb
sbb
pop
mov
jno
aam
lds
nop
or
cmp
into
sub
pop
popa
test
jp
fwait
(bad)
cwde
dec
adc
xor
jle
or
cmp
jle
test
sbb
pop
jmp
aaa
mov
movs
ret
pop
imul
push
inc
push
(bad)
pop
imul
rcr
fnstsw
dec
(bad)
sub
into
lar
push
std
jnp
cdq
mov
xor
xchg
test
xlat
pop
sub
ss
push
frstor
cmp
dec
js
out
push
ins
fcom
sub
cmps
jbe
test
sub
or
bound
jp
stc
lock
into
iret
adc
rcl
push
adc
xor
or
xchg
shr
lea
mov
es
dec
scas
xchg
push
cmp
pusha
es
fsubr
or
mov
call
add
cmps
push
fsubr
in
or
sbb
sbb
add
scas
xor
add
mov
ss
retf
call
adc
mov
xchg
jb
clc
xchg
call
xchg
adc
sti
scas
cmp
xor
loopne
pusha
inc
in
mov
leave
cmps
ins
in
sub
cs
jns
inc
les
inc
mov
adc
add
push
stos
(bad)
stc
cs
cmp
std
adc
jmp
mov
loopne
in
mov
jnp
xor
sbb
sbb
outs
(bad)
sti
fst
mov
push
or
(bad)
mov
jp
xor
pop
(bad)
cmp
pop
(bad)
cmc
adc
inc
fscale
adc
fsubr
not
pop
fwait
push
sub
and
sbb
outs
mov
adc
mov
(bad)
jmp
icebp
(bad)
retf
aas
out
jo
adc
outs
add
test
xor
into
aas
pop
fimul
sbb
push
in
pop
xor
sbb
jg
cmps
sub
mov
test
lods
add
pop
or
repnz
lahf
xor
push
addr16
xor
pop
mov
pop
int
xchg
in
ud0
and
psubq
leave
mov
pusha
lock
mov
sub
cs
adc
pop
add
lods
outs
dec
dec
cmp
dec
sbb
mov
jmp
mov
popf
mov
cmp
cmp
sti
test
enter
cmp
push
mov
out
dec
in
add
jecxz
sahf
jge
and
scas
lahf
popa
lea
adc
(bad)
mov
fcmovnbe
enter
es
mov
pop
mov
and
adc
fcom
call
and
mov
stc
cwde
loope
mov
adc
imul
mov
push
mov
or
fisubr
cmp
inc
fld
gs
mov
std
out
and
les
mov
jmp
dec
pop
es
push
sahf
(bad)
(bad)
fs
mov
mov
rcl
aas
add
xchg
idiv
mov
jle
jne
sub
push
fld
out
xchg
mov
divps
stos
in
inc
ret
cld
int
cmp
mov
cmc
shl
(bad)
pop
mov
mov
dec
(bad)
lea
and
pop
js
ret
repz
loope
pop
sub
adc
xchg
outs
stos
loope
adc
pop
aad
xchg
jne
bound
xchg
push
or
dec
fcom
mov
inc
sar
push
fnsave
cld
pop
cdq
mov
xchg
jo
mov
sub
cmp
loope
enter
xor
jns
test
pusha
add
push
sub
mov
push
outs
and
fistp
xchg
lock
mov
jg
pop
jo
and
jle
ret
inc
dec
add
pop
push
js
adc
ins
pop
lds
cli
test
and
add
(bad)
mov
mov
sbb
push
leave
lea
inc
stc
aas
pop
mov
mov
pop
mov
push
xor
leave
repnz
inc
out
dec
fld
data16
and
or
mov
pop
pop
push
icebp
lods
adc
mov
mov
retf
mov
add
(bad)
mov
jp
sar
push
add
cdq
shr
ret
sar
mov
sub
jb
(bad)
repnz
xlat
ret
or
(bad)
loop
push
test
mov
cmp
clc
lea
jo
sbb
jge
pop
push
movs
fwait
not
ret
and
sbb
push
pop
pop
cmp
pop
jns
in
xchg
xor
pop
loop
test
sub
outs
mov
sub
jne
(bad)
lds
loope
les
add
dec
sbb
push
inc
and
dec
or
fsub
push
ja
mov
lock
jnp
xchg
push
ror
gs
ins
adc
push
fstp
cmp
jns
mov
je
mov
cmp
iret
sub
sub
push
nop
inc
jg
icebp
jg
fldcw
pop
sub
cmps
mov
popf
ret
mov
mov
retf
cmp
xor
ds
idiv
sub
imul
push
or
nop
(bad)
inc
push
frstor
lock
cli
mov
in
cdq
daa
jnp
or
mov
test
movs
or
ret
pusha
dec
(bad)
div
mov
and
inc
fmul
cmps
add
push
fsub
or
jp
hlt
jbe
jnp
cmp
xchg
retf
fmul
pop
inc
adc
or
leave
xor
out
jle
push
pop
mov
jmp
xchg
fst
das
daa
or
rdtsc
xchg
mov
mov
push
or
cmc
cmp
shr
ja
add
sbb
push
mov
fldcw
adc
jle
adc
jle
xchg
push
test
movs
(bad)
xor
xlat
pop
push
and
outs
adc
sbb
mov
mov
inc
xchg
inc
adc
lds
inc
jmp
mov
ins
jle
jl
sub
into
loope
xor
mov
mov
xor
or
push
inc
aaa
jns
push
jmp
mov
in
xchg
sbb
rcl
ss
mov
xchg
lods
jb
mov
arpl
inc
mov
xchg
sbb
not
or
jmp
mov
ins
or
icebp
shl
(bad)
mov
sub
adc
add
xchg
out
sub
addr16
cmp
push
xchg
push
mov
push
add
jmp
in
jns
call
or
test
out
pop
sbb
cmc
ins
(bad)
xchg
push
pop
test
adc
add
or
scas
into
cmp
inc
dec
mov
neg
mov
dec
pop
cmp
ins
aaa
xlat
ins
xchg
ins
jne
xor
dec
fist
push
fwait
jae
mov
ret
int3
or
pop
mov
repnz
fwait
or
in
add
jmp
push
lods
fcmovu
std
sub
aas
pop
pop
add
pop
aaa
(bad)
jmp
pop
aas
mov
fucomi
popf
cmps
add
test
js
cld
enter
pop
xor
mov
mov
out
add
movs
ja
sbb
ds
mov
adc
in
adc
adc
ficomp
cmp
inc
push
push
add
frstor
mov
or
and
in
std
pop
jp
popf
mov
movs
cmp
jmp
push
mov
hlt
dec
xchg
pop
pop
test
popa
dec
xor
pop
add
mov
pop
sbb
out
sub
ins
add
in
pop
leave
inc
add
mov
inc
and
jge
mov
gs
push
sbb
jp
add
mov
cmp
pop
inc
lods
inc
daa
mov
in
in
inc
and
shl
lods
push
xchg
cmp
mov
push
sub
xor
jbe
mov
adc
(bad)
mov
les
sub
push
jp
leave
or
pop
mul
inc
sbb
jp
xlat
faddp
fisttp
jae
cmps
add
neg
lods
jnp
in
sub
xchg
dec
push
ficom
into
js
cmp
mov
xor
and
push
cmp
jns
mov
(bad)
lahf
push
sub
fild
xchg
sbb
leave
xchg
and
fwait
lahf
pop
pop
test
cwde
sub
and
movs
out
stos
sub
ss
std
add
mov
retf
lea
lahf
rcl
xor
mul
out
sbb
fisubr
sub
or
push
test
cmp
mov
mov
inc
cmps
loopne
std
(bad)
xlat
xchg
cmp
retf
cs
mov
retf
retf
cmp
std
mov
test
pop
loop
jg
push
xor
leave
jle
cld
sbb
adc
scas
pop
adc
cmp
jnp
xchg
outs
jae
stos
rcr
push
shl
or
inc
mov
out
in
cmps
or
and
gs
mov
or
push
(bad)
ins
mov
xchg
mov
shl
or
xchg
pmulhw
jl
out
mov
cli
push
mov
sub
sti
lds
pop
sub
ins
sub
push
icebp
cmc
dec
fistp
sar
adc
loopne
sub
xchg
lods
dec
push
es
fcomip
add
outs
sub
dec
imul
mov
xor
scas
(bad)
(bad)
push
mov
adc
rcl
ror
sar
into
adc
or
cmp
xor
int
mov
mov
clc
clc
sbb
or
or
pop
cmp
sbb
mov
loope
add
aam
xor
nop
inc
daa
xor
xor
add
jp
(bad)
mov
inc
xlat
xchg
inc
jp
jo
jnp
int
mov
outs
push
xor
les
iret
sbb
xchg
loop
movs
pop
mov
pop
add
pop
inc
jns
daa
xor
repnz
mov
cmp
clc
mov
js
int3
and
sbb
in
or
jmp
pop
aam
xlat
sub
rcl
and
xor
pop
loopne
int
daa
iret
xchg
pop
aad
adc
mov
in
(bad)
out
mov
scas
jo
push
fwait
mov
add
cmp
mov
sub
adc
ins
mov
stos
fld
mov
cs
repnz
test
pop
lock
xor
push
xor
ficomp
aas
(bad)
dec
push
push
cli
lods
pop
push
sbb
jle
xor
push
ret
add
jmp
push
inc
mov
mov
or
call
fist
pop
jb
int
jmp
pop
jmp
pop
cld
pop
dec
cmps
hlt
cmps
retf
or
retf
sbb
cmc
dec
daa
jg
imul
or
jmp
push
or
jnp
imul
lds
jle
inc
imul
and
and
addr16
pushf
mov
jmp
jmp
adc
pop
fisttp
dec
cmp
sub
dec
iret
mov
leave
lods
xor
push
pop
mov
xchg
and
int
push
and
je
addr16
mov
adc
xchg
cdq
inc
adc
jl
fimul
test
icebp
mov
pusha
or
mov
push
std
xchg
xchg
mov
fidivr
mov
fwait
xchg
cli
(bad)
jle
jp
test
inc
dec
lahf
in
push
xchg
out
sub
aaa
sbb
retf
rcr
push
movs
cs
pop
pop
pop
push
xchg
fldenvw
pusha
xor
mov
ret
out
ds
inc
inc
xchg
xor
or
daa
or
add
retf
add
inc
inc
cmps
pop
popf
ret
xor
sub
mov
pop
push
lahf
ja
jno
mov
mov
mov
cmps
adc
cmp
mov
jno
sbb
cmc
sbb
fmul
pop
sub
(bad)
out
aad
xchg
or
cdq
(bad)
xor
icebp
hlt
bnd
test
test
push
aaa
arpl
mov
(bad)
outs
les
sub
je
dec
retf
call
xchg
mov
movs
clc
push
push
retf
adc
or
ret
cmp
outs
mov
pop
ret
fcom
inc
mov
cmp
xchg
add
cmp
in
mov
and
mov
sbb
ds
fcomi
lds
cmp
add
js
stc
std
ret
mov
mov
cmc
mov
in
pop
loope
div
aaa
into
retf
and
xchg
cdq
jmp
clc
jp
(bad)
push
push
fidivr
mov
jecxz
lock
push
lods
push
inc
mov
dec
dec
inc
mov
ins
adc
xchg
xor
ret
retf
int3
sbb
ds
jno
ss
aaa
xchg
lods
inc
xchg
push
and
jmp
or
shr
les
jns
(bad)
pop
dec
retf
dec
sub
arpl
mov
or
push
xchg
pop
test
push
out
cwde
sahf
push
xchg
dec
aaa
in
mov
push
mov
nop
ficom
or
add
xchg
jne
mov
mov
mov
iret
push
mov
aaa
mov
inc
jno
jg
push
dec
leave
pop
inc
pop
jl
scas
adc
inc
mov
sbb
call
add
nop
jne
push
or
pop
shr
xor
push
lods
lods
inc
jae
and
mov
and
std
jl
xchg
jl
lds
pushf
jmp
inc
add
jmp
cmps
push
mov
popa
mov
dec
cwde
add
mov
(bad)
jecxz
aaa
bound
ds
pop
dec
mov
test
out
mov
add
jp
push
fisttp
jne
(bad)
jge
shl
add
retf
aas
jl
imul
dec
(bad)
call
je
sub
sub
add
pushf
sbb
daa
scas
sub
les
int
fmul
ror
jp
(bad)
xor
pop
mov
inc
xchg
push
retf
(bad)
test
cmp
ret
imul
(bad)
fsub
aaa
or
nop
inc
xchg
add
xor
enter
add
outs
aaa
fmul
ins
dec
fs
mov
mul
add
cmp
mov
jb
lods
push
inc
xor
jp
xor
xchg
sbb
and
fdivr
or
pop
xchg
les
mov
inc
or
jno
mul
inc
sub
div
jns
xchg
mov
mov
or
movs
scas
xchg
push
xchg
sbb
movs
push
enter
push
jae
cmp
cmp
push
sbb
push
retf
stos
xor
in
sbb
pushf
les
mov
rcl
addr16
lds
or
std
sbb
or
retf
js
dec
dec
fbstp
retf
arpl
dec
sar
jns
push
jl
mov
add
mov
jp
stc
icebp
test
and
je
mov
mov
mov
jle
push
mov
movs
inc
mov
(bad)
aam
pop
nop
xor
leave
neg
or
cmps
repnz
rcr
popf
lea
ja
cmp
out
sahf
or
mov
mov
mov
pushf
cmp
inc
adc
mov
fwait
pop
bound
(bad)
push
pop
lods
mov
mov
movs
xchg
clc
pop
mov
dec
enter
mov
pop
inc
and
fsub
mov
adc
ror
int
cdq
xor
mov
adc
stos
scas
cli
sbb
fsubr
inc
rol
jb
xor
pop
shl
mov
sbb
xor
sub
arpl
cmp
adc
or
fs
and
adc
jnp
mov
rol
mov
cdq
dec
jecxz
int3
ins
cmps
mov
mov
es
jae
cwde
mov
ss
js
outs
xor
fbstp
inc
xor
dec
icebp
(bad)
pop
bound
mov
fldcw
lds
xchg
xchg
lock
sbb
shr
xor
fwait
push
jb
ss
cmps
(bad)
jecxz
push
nop
ror
test
mov
pop
mov
in
fadd
imul
div
loop
scas
dec
sub
ds
mov
sar
icebp
jmp
pusha
mov
adc
jbe
adc
push
iret
sub
xlat
pop
test
and
cmp
mov
stos
fnsave
mul
not
add
rol
dec
push
cs
lahf
jno
jle
xor
rcr
pop
pop
(bad)
xchg
and
pusha
icebp
gs
ret
mov
repz
jo
pop
xor
fisttp
jns
xchg
cwde
shl
mov
sahf
mov
jne
out
(bad)
xor
cmp
add
jecxz
xchg
test
dec
add
es
cmp
or
test
dec
pop
sub
inc
test
dec
jnp
mov
cli
mov
push
xchg
cli
das
cmp
ret
adc
dec
xchg
mov
loopne
not
or
add
int3
sub
ins
mov
mov
and
jmp
pop
inc
in
into
scas
inc
mov
test
pop
mov
pop
out
and
cmp
shl
mov
adc
adc
xlat
ret
fldenv
and
into
rcl
jne
nop
sti
pop
and
rol
xchg
or
add
mov
pop
push
cmp
mov
mov
add
outs
gs
sbb
pusha
or
(bad)
xchg
and
fsubr
sub
lock
cmp
xchg
imul
js
fdiv
fsubr
inc
call
(bad)
jne
jae
stos
movs
std
or
jmp
rol
sbb
std
inc
pusha
adc
jmp
xor
xor
aad
push
inc
xchg
xor
fist
add
or
fchs
add
stos
xor
pusha
push
jno
loop
sbb
sbb
jb
in
jp
mov
jge
mov
in
or
ja
test
jno
imul
pop
nop
sar
hlt
jns
arpl
inc
sub
sub
int3
add
loopne
or
dec
mov
sbb
hlt
jmp
das
test
pusha
xor
cmc
rol
enter
scas
out
arpl
jae
ficomp
and
out
aad
jne
mov
cmp
mov
test
push
loope
outs
adc
lods
mov
push
push
ror
cwde
nop
jge
int
and
jmp
(bad)
xor
ss
loope
dec
jg
xchg
push
dec
mov
imul
mov
ficom
je
neg
inc
into
dec
inc
and
sub
(bad)
cmps
out
sahf
and
mov
ror
aas
es
inc
stos
push
aam
repnz
pop
jnp
test
sahf
test
out
daa
sti
cmp
push
pop
fsub
cld
lsl
mov
sbb
les
and
ds
and
data16
push
or
sub
jae
jae
inc
xor
iret
pop
jecxz
pop
in
enter
sar
dec
push
mov
inc
(bad)
fs
lods
loopne
clc
pop
movs
fsub
and
sbb
lock
movs
das
cmps
test
push
cmp
add
adc
aas
push
xor
xchg
and
(bad)
adc
bound
test
adc
stc
mov
push
pop
and
pop
xchg
xchg
xor
gs
xchg
fsub
and
mov
icebp
jecxz
call
fild
inc
push
pop
sbb
pcmpeqw
sub
(bad)
outs
out
jne
int
int
adc
xchg
into
lods
xor
cmp
icebp
mov
aam
jle
std
mov
jbe
loopne
lahf
data16
(bad)
ror
or
retf
xlat
dec
mov
sub
aad
mov
rcr
lods
(bad)
outs
push
cmps
mov
call
js
xor
pop
popf
push
pushf
mov
sbb
(bad)
and
xlat
push
mov
push
jnp
inc
mov
fidiv
scas
test
and
mov
je
jp
add
sub
(bad)
(bad)
loope
nop
loop
js
cmp
aaa
jmp
call
ins
dec
addr16
adc
xchg
dec
inc
ret
fxch
add
fist
add
or
cmps
bound
mov
out
call
adc
jae
loope
mov
or
in
sub
cmp
hlt
mov
xlat
ret
aad
loope
arpl
push
int3
aam
sahf
pop
fcom
movs
push
push
rcr
jnp
mov
call
(bad)
psrlq
aaa
dec
xchg
in
push
outs
mov
std
mov
mov
fwait
xchg
add
loop
jmp
xchg
in
outs
adc
popf
mov
aas
scas
loope
xchg
or
repnz
out
jmp
xchg
in
mov
mul
or
pop
dec
sbb
jmp
pushf
mov
mov
das
xchg
outs
or
call
and
push
jecxz
ins
imul
(bad)
(bad)
push
adc
in
xchg
repz
mov
pop
xchg
sub
test
fdecstp
ds
je
or
adc
mov
jo
sub
(bad)
shr
pop
out
repnz
push
cmp
and
loop
into
xlat
xor
or
and
inc
sub
xor
repz
push
xor
retf
out
ins
add
nop
mov
aam
stc
mov
fs
and
int3
push
pop
or
movq
jmp
in
enter
mov
push
cmp
inc
mov
mov
xor
les
xchg
cmp
dec
mov
addr16
ins
pushf
push
push
icebp
mov
imul
sub
and
mov
pop
sbb
pop
imul
in
jg
je
sbb
mov
push
xor
test
push
and
pusha
(bad)
je
inc
and
es
loop
jg
sbb
lea
mov
mov
cmp
test
es
ja
pop
pusha
mov
jl
iret
loop
sbb
stos
or
or
and
lock
dec
sbb
pop
ret
inc
aaa
in
repnz
jmp
sbb
jb
test
inc
and
mov
shr
out
retf
mov
sub
adc
loopne
nop
jp
pop
sub
jmp
inc
pop
dec
jbe
aad
sbb
je
int3
mov
cmp
retf
cmps
push
cld
sub
add
mov
test
pop
mov
xchg
pop
mov
and
mov
dec
xor
inc
test
or
pop
popf
fmulp
outs
neg
add
in
mov
ja
out
mov
dec
(bad)
cwde
in
das
rol
xor
pop
sbb
and
xor
push
mov
xor
sbb
inc
xchg
jmp
cwde
sbb
pop
inc
test
cld
mov
test
ins
mov
aad
ss
stc
into
inc
outs
dec
xor
ficom
push
in
pop
std
cmp
or
cmp
inc
mov
add
inc
pop
dec
std
adc
cs
sbb
fwait
jns
pusha
ds
jg
jnp
loop
cmp
dec
push
cmp
jb
stc
xchg
mov
test
bound
mov
dec
inc
inc
jb
pop
lods
dec
mov
jne
test
imul
xchg
cmps
cmp
cmps
out
push
lods
ficom
dec
mov
(bad)
mov
or
mul
aas
loope
shl
aad
test
inc
shl
pop
jecxz
ins
scas
add
cs
sbb
scas
iret
or
pop
and
mov
mov
repnz
xor
inc
jmp
and
push
(bad)
xchg
inc
aas
aas
mov
out
repnz
ins
sbb
dec
movs
cdq
sub
jbe
or
sub
mov
pop
dec
mov
push
ins
jbe
call
les
inc
sub
mov
jne
mov
cs
xchg
mov
xlat
leave
pop
aaa
mov
nop
or
lds
inc
jne
retf
xchg
and
int3
in
jno
sub
jmp
cwde
popf
cmp
xor
or
fs
mov
leave
call
in
mov
sub
sbb
dec
test
pop
sbb
out
lds
dec
shr
test
jmp
dec
cmp
or
push
pop
lods
mov
imul
cmp
(bad)
mov
int3
sub
call
push
push
pushf
and
and
adc
or
add
jmp
or
or
push
jo
int3
jmp
pop
ins
aas
mov
into
outs
pop
adc
aaa
push
or
pop
lods
aaa
idiv
out
pusha
cmp
in
cmps
pop
sti
add
dec
jg
sti
dec
outs
adc
add
das
add
mov
scas
jp
sbb
pop
dec
je
add
xchg
add
fdivp
inc
mov
and
rcl
pushf
call
mov
mov
and
enter
shr
leave
fcmovu
adc
repz
lahf
icebp
cld
scas
push
inc
add
cmp
mov
mov
mov
ss
pop
cmps
xchg
aaa
add
retf
pop
xchg
xchg
dec
stos
dec
or
(bad)
push
clc
cmps
rol
dec
xlat
and
movs
push
bound
cld
cmc
mov
data16
sub
and
mov
jbe
pop
adc
mov
and
cld
test
mov
jmp
push
xchg
adc
stos
push
cwde
test
push
inc
imul
adc
fs
std
retf
sar
add
add
push
mov
fucom
ror
les
mov
hlt
ja
xchg
mov
mov
out
dec
stc
outs
xchg
sbb
inc
jns
mov
aad
mov
jl
clc
pop
cld
es
adc
ret
cmp
mov
adc
fidivr
(bad)
clc
jnp
outs
mov
push
out
sub
adc
adc
rcr
xchg
pop
jmp
loope
imul
jle
pop
ror
cdq
dec
pop
movhpd
adc
or
sqrtps
cmp
sub
xchg
dec
cmps
jmp
mov
mov
or
mov
sub
mov
adc
xchg
jno
adc
in
fiadd
pop
sbb
jmp
mov
outs
call
aam
adc
xchg
cmp
add
xchg
popf
sub
jnp
jl
cmp
in
pop
sub
in
test
popa
cmp
mov
adc
nop
adc
je
xchg
into
push
pop
mov
jl
stos
jnp
push
movs
adc
xor
push
and
cmps
sub
movs
lock
sbb
xlat
push
or
nop
lahf
mov
gs
gs
pop
sub
mov
(bad)
cmps
scas
xor
nop
dec
push
fcomi
push
cmp
mov
xor
mov
jl
cmps
xchg
xchg
std
inc
add
pop
or
pop
mov
and
rol
aam
sti
inc
jo
(bad)
jl
dec
adc
cmps
push
hlt
mov
mov
out
int
push
lea
daa
xchg
sbb
push
popf
sbb
pop
xor
sbb
adc
(bad)
iret
jno
jmp
repnz
or
repnz
movs
rol
push
cmp
dec
aas
inc
xchg
inc
movs
test
in
(bad)
shr
fpatan
shl
les
retf
ins
loope
test
pop
dec
xor
adc
inc
aas
xchg
test
inc
jecxz
mov
xor
xchg
sbb
daa
pop
xchg
mov
jno
retf
inc
(bad)
cwde
pop
jb
cmp
mov
mov
sbb
sbb
fwait
mov
ret
pop
add
pop
sub
inc
leave
add
inc
sub
and
xchg
xchg
scas
out
lods
cmps
sub
outs
pop
pop
pop
push
in
cmps
push
adc
adc
add
stos
iret
xchg
push
dec
ins
mov
xor
aad
int3
jbe
and
int3
cmps
mov
enter
pusha
sbb
ja
dec
shl
or
pushf
xchg
add
or
push
xor
cmc
dec
mov
int3
xchg
repz
test
push
or
in
dec
mov
and
jecxz
cdq
sbb
push
xchg
fidivr
ds
movs
sti
add
dec
mov
mov
fs
vmovsd
in
sub
inc
or
popf
js
xchg
movs
or
dec
sbb
pop
gs
inc
adc
mov
xor
jmp
retf
mov
jb
ins
cmc
je
xchg
fwait
lahf
sbb
outs
push
sbb
xchg
inc
(bad)
cmp
or
sahf
jl
adc
repnz
pop
hlt
in
aam
ror
and
and
call
mov
int3
rol
mov
cmp
call
(bad)
ss
adc
xchg
in
and
pop
mov
dec
adc
mov
jge
and
cmp
sub
sub
dec
add
and
idiv
(bad)
jl
mov
xor
int3
mov
aad
cmps
mov
(bad)
loope
dec
mov
mov
fsub
pop
push
cwde
cmp
mov
les
or
adc
pop
or
mov
and
inc
into
pop
mov
gs
gs
movs
addr16
lods
mov
ret
dec
js
adc
push
in
clc
pmaddwd
xor
shr
sub
mov
fwait
sbb
sbb
not
dec
add
test
jle
push
cmp
mov
cli
call
inc
and
cmps
in
call
cmp
sbb
(bad)
arpl
ja
call
nop
clc
push
jnp
rcr
or
xlat
jns
repz
neg
ss
mov
lds
(bad)
mov
imul
push
mov
inc
pop
adc
fwait
mov
pop
sbb
inc
jbe
daa
push
jbe
test
push
test
(bad)
or
aas
mov
push
repnz
or
adc
and
neg
push
mov
retf
add
mov
inc
sub
xchg
loopne
sub
or
add
and
std
xchg
pop
and
je
repnz
pop
and
mov
aas
jb
sub
cli
and
cmp
mov
in
fwait
or
sar
sbb
popf
jno
mov
jmp
mov
aam
jns
pop
imul
dec
sbb
outs
ja
dec
cmp
xlat
jb
cmc
ror
mov
jle
clc
dec
jns
adc
adc
jmp
xchg
(bad)
(bad)
lds
push
std
rcl
pop
je
dec
out
dec
retf
inc
popf
lods
or
nop
mov
movzx
not
jns
lods
or
ja
sbb
mov
(bad)
adc
inc
sub
jmp
cdq
inc
loop
call
mov
movs
psllq
cmp
inc
fwait
inc
test
adc
or
gs
hlt
xor
imul
adc
call
ret
aad
int
int
sub
(bad)
xor
(bad)
xchg
int3
lods
xor
inc
jno
stos
cmps
mov
std
adc
call
(bad)
jb
stos
ret
push
jb
clc
cmp
mov
pop
mov
sahf
out
hlt
out
jo
mov
std
cmp
dec
cmp
pop
cmps
pushf
imul
ret
xor
xchg
nop
int
inc
xor
sub
aam
xchg
push
repnz
iret
mov
(bad)
mov
or
in
cmps
in
shr
jecxz
popf
dec
sbb
add
jne
js
imul
push
cmp
int3
mov
mov
or
mov
cdq
mov
mov
out
sahf
push
js
lea
push
adc
pushf
iret
dec
icebp
jmp
stos
jge
mov
xor
fstp
or
sub
sub
addr16
jae
cs
out
(bad)
sbb
inc
daa
jecxz
iret
mov
lea
mov
dec
pop
retf
icebp
and
pop
mov
and
xlat
test
dec
xchg
outs
push
cmc
or
hlt
lahf
inc
cmp
adc
sub
(bad)
and
cmp
movlhps
adc
pop
mov
mov
dec
mov
ds
jo
movs
add
ret
jb
(bad)
dec
jb
xor
test
ins
jge
jg
cdq
inc
or
xchg
pop
imul
jo
cwde
jno
ror
jge
or
adc
push
and
out
mov
imul
loop
fsubr
inc
xchg
shl
clc
inc
xchg
inc
add
cs
gs
loope
sub
mov
xchg
in
ss
and
pushf
sbb
arpl
and
loope
imul
mov
ds
cmp
mov
lods
mov
jl
retf
xor
cld
dec
ss
test
dec
mov
mov
push
outs
inc
push
push
cmps
or
aad
add
loop
mov
movs
retf
push
repnz
mov
pop
dec
and
sbb
imul
call
push
inc
xchg
(bad)
push
xor
sbb
retf
xor
adc
and
or
(bad)
out
push
push
inc
mov
or
cld
inc
pop
outs
xchg
sub
dec
les
push
addr16
xchg
ret
fisub
jno
dec
call
sub
push
or
pop
dec
xor
dec
rcl
and
std
dec
mov
jns
jae
add
jp
fimul
or
adc
movs
cld
test
shr
daa
fld
aad
xchg
mov
jecxz
and
inc
sbb
sbb
cli
pop
mov
mov
ja
add
lock
arpl
adc
mov
sar
je
push
es
xor
adc
xchg
push
adc
in
scas
ja
jecxz
stos
out
xor
loop
test
sbb
jle
jge
lahf
mov
xchg
call
adc
mov
std
popf
stos
cli
push
arpl
dec
imul
outs
inc
xchg
sahf
fmul
sub
clc
dec
mov
pop
pop
retf
dec
repnz
pop
stos
test
pop
test
add
aad
ins
fs
mov
add
push
jnp
lods
jg
cmc
cmp
stc
cwde
adc
repz
scas
sti
sbb
pop
mov
sahf
leave
cmp
xchg
cmc
mov
push
jb
adc
div
repz
(bad)
rcl
mov
mov
les
pop
jmp
es
les
test
in
xchg
sbb
ja
movs
popf
add
mov
stos
int
je
push
out
and
xor
pop
popf
scas
js
in
sub
sbb
ss
repnz
inc
int
rcr
xor
add
call
les
xor
rcl
pop
jge
cwde
or
cmp
out
push
mov
outs
inc
pop
pop
aad
sub
mov
int
cs
div
mov
jecxz
sbb
mov
jns
jnp
mov
test
sbb
fchs
or
popf
fdiv
clc
repnz
ret
ret
dec
fdivr
iret
adc
stos
or
jno
int3
xchg
or
jg
xor
ss
mov
jo
aam
ret
arpl
arpl
adc
adc
cmp
std
push
cmp
and
xchg
fisub
pop
clc
inc
mov
stc
scas
ins
dec
pop
jmp
shl
mov
ins
mov
add
rcr
or
mov
xchg
in
push
call
aaa
xor
and
test
mov
popf
push
and
(bad)
into
mov
movs
inc
movs
adc
ds
test
jnp
mov
ja
cmp
lea
push
out
ss
stos
dec
xor
and
out
xor
movs
fwait
scas
mov
sbb
mov
bound
xchg
inc
fimul
cmp
ror
xor
xor
in
fdivr
mov
xchg
xor
jbe
clc
or
dec
sbb
loop
fcmovnbe
jg
mov
test
cmp
mov
enter
xchg
and
push
xor
aam
rol
cmp
in
xor
inc
xor
jg
movs
inc
jbe
mov
movs
mov
push
imul
popa
movs
in
into
pop
sbb
fbstp
xchg
inc
les
xor
xchg
pop
js
int3
pop
stc
ja
push
leave
xchg
mov
retf
pop
sbb
mov
or
ins
xchg
iret
es
push
fbstp
pop
aaa
popf
bound
hlt
js
cdq
jmp
xchg
jbe
or
stos
inc
das
adc
push
push
rcr
dec
sub
out
mov
push
fsubr
int
fcmovb
fmul
xchg
and
xor
sub
adc
mov
sbb
mov
ret
loope
push
push
leave
inc
mov
out
xlat
pop
xchg
aam
cmp
pop
(bad)
jg
xchg
pop
cmp
test
rol
push
jne
out
sub
gs
and
mov
and
jmp
test
inc
sti
push
xchg
in
and
xchg
iret
sbb
sbb
cmp
ror
rol
out
in
sti
xor
leave
dec
jl
jecxz
lahf
aas
and
shl
xchg
pop
xchg
xchg
mov
inc
(bad)
int3
sub
pop
outs
out
in
or
es
xchg
cmp
loopne
dec
mov
(bad)
ror
mov
and
pop
pop
std
mov
or
pop
retf
(bad)
jle
js
and
(bad)
and
xchg
out
sti
pusha
add
aam
jb
cli
ds
jo
cmps
call
shr
ss
mov
pop
jp
jae
fs
cmp
jb
xor
shr
fwait
ins
dec
ss
xlat
movs
mov
fmul
call
pop
stos
xor
add
pop
lods
and
or
mov
or
fs
jne
and
fist
push
push
cli
punpckldq
(bad)
(bad)
pop
shr
test
push
cmps
and
xlat
inc
mov
pop
pop
je
push
hlt
scas
or
jmp
dec
aaa
add
test
lods
test
int3
bound
in
push
jecxz
cmp
add
mov
shl
stos
lock
or
sub
cmc
xor
fld
cwde
sti
cmp
ins
stos
cmp
push
daa
adc
mul
popa
pusha
jmp
inc
and
xchg
fwait
loope
out
fcom
cmp
les
out
repnz
push
pop
mov
ud2
enter
mov
jle
dec
and
push
push
cmc
fild
popf
mov
(bad)
data16
and
retf
push
ficom
push
mov
push
and
pop
aaa
dec
cs
fsub
jnp
sub
jp
add
dec
cmp
jg
mov
dec
adc
scas
ret
adc
mov
sbb
sbb
les
xchg
in
pop
bound
sbb
pop
into
jmp
mov
xor
aad
mov
jo
sahf
adc
inc
movs
mov
retf
jge
mov
ret
imul
lahf
mov
xchg
fisubr
cmp
daa
repz
push
jecxz
or
jns
leave
mov
je
sub
dec
icebp
mov
sti
cmp
xor
push
xchg
je
dec
lock
mov
inc
fdivr
les
pop
or
loopne
out
add
push
xor
lea
push
xchg
leave
(bad)
lods
inc
leave
push
and
mov
psubq
test
(bad)
cdq
add
jmp
icebp
cmp
and
cld
ds
(bad)
push
xor
fsubr
jp
(bad)
mov
sbb
xchg
inc
dec
xor
xor
loop
push
leave
sar
sub
add
pop
jmp
daa
mov
(bad)
scas
data16
push
xor
inc
sub
cdq
out
fdivr
xor
aaa
(bad)
dec
adc
pop
inc
popa
mov
jo
nop
lods
and
stos
jmp
add
mov
add
jl
repz
stos
test
lods
dec
jb
mov
sbb
pop
(bad)
jle
das
sahf
push
imul
enter
mov
xor
mul
pop
shr
jae
ds
jno
adc
fs
dec
xchg
adc
adc
cmp
iret
fwait
out
(bad)
cwde
mov
jg
sti
cmp
mov
and
and
cmp
rol
inc
or
imul
iret
inc
pop
push
mov
push
out
sub
xor
xchg
hlt
sbb
inc
sub
jl
mov
or
mov
setne
std
mov
push
les
jmp
cdq
(bad)
push
aaa
repz
mov
xor
jge
sbb
push
add
cmps
adc
ret
jb
cwde
cmp
mov
ror
mov
mov
test
cmp
xchg
cmc
and
jl
fadd
mov
icebp
dec
and
(bad)
je
call
lock
(bad)
in
inc
inc
and
xlat
test
int3
bound
ret
sub
sbb
test
mov
push
mov
lods
test
sbb
sbb
retf
out
cld
dec
fldcw
mov
cmp
(bad)
stc
cmp
xchg
cs
push
jecxz
push
(bad)
rcr
and
pop
pop
xchg
mov
hlt
call
rcl
jecxz
in
sub
dec
inc
test
add
jno
call
cmc
cmp
das
xor
imul
push
or
mov
(bad)
shl
loope
retf
xchg
xchg
dec
xor
or
adc
mov
fimul
rcl
test
sbb
jnp
clc
xor
pushf
sar
ss
leave
pop
(bad)
pop
int
push
pop
(bad)
sbb
aaa
pop
jns
inc
in
out
adc
je
sub
sbb
and
sar
test
je
clc
mov
jbe
and
push
inc
movs
loopne
(bad)
cmp
pop
call
into
adc
ret
lahf
cmps
push
ins
sbb
aaa
lods
test
pop
sub
jnp
std
jmp
push
mov
dec
shl
mov
mov
push
cmp
sbb
jecxz
(bad)
cmp
sub
rol
cmc
xor
(bad)
adc
pop
mov
lods
cmp
aad
xor
add
mov
jb
mov
int3
aad
aam
fisub
push
jmp
repz
in
loope
mov
(bad)
jmp
xchg
repnz
gs
es
pushf
cmp
repz
mov
ror
retf
das
mov
es
sub
jno
cmp
fsubr
mov
add
mov
stc
aad
out
sahf
pop
icebp
xchg
pop
mov
push
int3
aas
jecxz
jne
je
stc
push
movs
enter
xor
mov
cmp
lods
dec
and
fwait
repz
and
add
jne
add
in
hlt
inc
std
loope
and
fwait
cmps
mov
repnz
sub
cmp
movs
jno
mov
adc
xor
loopne
test
mov
jnp
movs
and
xor
cwde
(bad)
push
pop
ins
dec
mov
and
push
ins
push
cmc
adc
fwait
stc
xor
aam
pop
das
retfw
clc
push
mov
xchg
fld
in
popa
mov
cmps
cmps
jge
stos
(bad)
retf
mov
aad
xchg
xor
pop
int3
neg
mov
fisub
cmp
out
(bad)
out
xchg
jno
call
lods
jbe
inc
and
and
xchg
push
pop
sub
mov
jmp
loopne
stos
push
pusha
jl
shr
or
leave
(bad)
push
push
mov
cs
cli
fs
popf
not
mov
rcl
ja
and
(bad)
xchg
rcr
xchg
push
cmp
shl
push
test
cwde
jns
movs
inc
jnp
inc
jo
pop
call
and
scas
add
mov
hlt
xor
push
inc
mov
mov
push
jmp
call
ins
jno
test
inc
mov
jmp
stc
xor
mov
mov
cmp
mov
sub
jg
sub
mov
sub
mov
push
push
inc
daa
test
popa
jb
sub
push
xchg
in
mov
sub
daa
(bad)
jmp
outs
sahf
fldenv
sar
loope
aam
call
icebp
pop
and
pop
mov
jae
sbb
xchg
fldenv
lods
stc
and
jg
jmp
mov
jae
test
adc
out
lock
(bad)
neg
call
sbb
jmp
neg
mov
rcl
adc
(bad)
xchg
mov
jecxz
jmp
xchg
imul
hlt
imul
scas
shl
rcl
pushf
cmp
dec
cmps
int3
add
fidivr
retf
inc
jbe
(bad)
pop
sub
jecxz
inc
aad
fcmovbe
jp
xor
push
mov
xor
daa
sar
adc
data16
jo
arpl
dec
push
adc
fisttp
jg
jo
inc
push
fcmovnbe
scas
(bad)
das
retf
pushf
adc
ins
lods
and
pop
std
popf
jg
push
or
fs
jmp
shl
or
(bad)
fnstcw
out
out
icebp
xchg
sub
xchg
rol
mov
or
js
cld
and
scas
(bad)
loope
ja
dec
loope
add
adc
mul
mov
out
cmc
ja
dec
stos
push
repz
(bad)
mov
mov
dec
(bad)
sub
xchg
(bad)
outs
mov
lods
dec
jae
int3
repz
inc
and
and
sub
inc
leave
mov
push
pop
fs
fwait
pop
xchg
cwde
inc
es
adc
les
hlt
ins
fimul
adc
inc
fbld
xor
push
mov
loope
fwait
inc
and
out
sbb
fadd
mov
sbb
std
adc
pop
sbb
add
add
push
adc
rcl
xchg
jmp
hlt
mov
les
nop
in
scas
outs
push
or
and
rcr
cli
(bad)
inc
mov
in
aam
mov
mov
movs
lea
sub
xor
(bad)
inc
enter
adc
adc
jbe
ja
cld
mov
add
lods
xchg
push
or
jl
xor
pop
cmp
rcl
test
jmp
push
mov
mov
mov
dec
jmp
arpl
in
sbb
mov
aad
add
scas
lds
sub
ds
cwde
cld
pop
mov
xchg
sbb
cwde
cmp
(bad)
js
inc
jge
int3
out
push
cmp
bound
fldz
outs
mov
xchg
xor
(bad)
cmp
dec
xchg
jle
xchg
jge
lds
cmp
push
and
pop
popf
mov
shl
aas
push
cmps
cdq
mov
sti
in
das
xor
mov
(bad)
addr16
adc
outs
call
icebp
pop
fidivr
(bad)
clc
inc
push
mov
(bad)
jle
test
in
shl
clc
fstp
(bad)
xchg
jecxz
imul
add
repnz
mov
push
xchg
pushf
enter
clc
or
push
add
xchg
sbb
dec
das
std
pusha
repz
push
leave
jge
je
mov
mov
daa
fxch
jne
xlat
mov
pop
sub
(bad)
std
jnp
pop
mov
push
bound
(bad)
dec
pop
inc
and
push
pop
aaa
jb
cmp
mov
and
pop
jle
mov
jge
je
cmp
imul
fnsave
mov
jne
movs
xor
out
push
aas
xor
push
cs
push
mov
sub
pop
add
neg
loope
pop
fild
or
repnz
push
push
xchg
in
pusha
sub
popf
push
cmp
sbb
mov
lahf
cmp
jae
es
fs
loop
or
in
les
into
or
shr
les
mov
out
lods
movs
mov
mov
adc
sbb
pop
jo
leave
fisubr
xor
les
clc
or
out
imul
jg
dec
callw
or
jg
dec
sub
popa
adc
xor
std
cmp
sub
inc
push
sbb
cld
and
xor
mov
popw
shl
pop
push
or
inc
push
or
sahf
mov
pop
fidivr
jbe
outs
mov
repnz
out
jp
mov
loop
push
add
add
enter
push
cld
stos
mov
pop
and
aam
lds
sbb
in
mov
push
or
les
dec
mov
shr
push
mov
sbb
(bad)
xchg
mov
pop
(bad)
outs
shl
outs
push
(bad)
dec
in
repnz
imul
movs
iret
pop
push
outs
ret
pop
pop
jg
out
adc
push
sbb
sbb
cmp
add
hlt
int
jmp
cmp
(bad)
addr16
sbb
push
mov
js
ror
mov
mov
movs
call
lea
(bad)
mov
or
xor
or
push
repz
mov
adc
lods
pop
pop
test
mov
dec
push
jno
mov
add
jae
cmp
or
mov
inc
mov
push
ins
jle
mov
fcmovbe
xchg
push
mov
mov
push
fwait
cdq
adc
or
fisttp
adc
mov
fwait
inc
cmp
sbb
push
mov
sti
jge
jno
xchg
imul
aad
not
mov
sbb
cmp
sub
push
push
add
pushf
jp
in
and
sub
jecxz
fs
hlt
jb
and
repz
int
aam
mov
cmp
std
and
push
fnsave
mov
fcomp
pop
pop
xchg
mov
pusha
adc
inc
sahf
push
pop
pop
ja
sub
mov
in
out
int
std
add
inc
sub
dec
call
and
push
dec
push
dec
adc
and
push
push
ficom
dec
popa
dec
xor
div
js
adc
pop
out
icebp
pop
dec
xchg
cmps
push
out
xchg
push
lock
(bad)
adc
es
pop
sub
fnstenv
mov
mov
or
push
movs
dec
(bad)
aaa
mov
call
add
mov
stos
ja
sahf
(bad)
shr
or
out
cmp
mov
mov
cli
in
mov
mov
cld
inc
into
test
rcr
mov
push
fnstcw
xchg
pushf
test
mov
sub
xchg
inc
sub
nop
add
mov
cmp
mov
addr16
and
test
call
in
xchg
jno
mov
movs
dec
sub
pop
ss
iret
and
adc
sbb
jo
sbb
dec
fstp
mov
cmc
sbb
cwde
and
retf
rol
sub
and
das
call
xchg
test
outs
(bad)
repz
fistp
pop
push
cmp
retf
inc
xchg
and
and
cmps
cmp
pop
xor
rcl
fdivrp
push
pop
xor
sar
adc
sub
mov
pop
ins
lds
loopne
ins
lock
inc
shr
popa
xor
sbb
push
int
pop
sub
lahf
jnp
or
test
jp
inc
imul
sub
mov
repnz
add
dec
sub
lods
mov
xor
test
loop
inc
sbb
aad
(bad)
lods
out
daa
add
xor
push
jp
sub
push
sbb
jae
ror
rcl
out
jnp
mov
mov
adc
inc
data16
xchg
jo
(bad)
in
cmp
dec
xchg
xchg
in
nop
nop
pop
pop
psubq
imul
adc
repnz
inc
ret
inc
pop
push
scas
xchg
pop
xchg
mov
and
mov
mov
xor
loopne
sbb
clc
mov
test
loopne
cdq
jbe
inc
lea
pop
mov
push
mov
push
inc
pop
mov
fdiv
leave
sub
rol
mov
fst
inc
mov
jnp
(bad)
aas
retf
mov
loope
xchg
mov
scas
fcom
mov
test
imul
inc
jmp
and
mov
push
mov
das
fwait
push
popf
cmp
adc
cli
mov
ret
add
dec
outs
dec
jbe
add
int
jle
(bad)
mov
dec
xchg
jo
adc
dec
mov
lods
repz
pop
xchg
xchg
xlat
pop
(bad)
(bad)
push
call
push
(bad)
dec
and
ins
imul
sahf
mov
clc
push
lods
adc
pushf
cmp
cmps
add
sub
pop
sub
inc
stos
jbe
es
pop
add
shr
cld
inc
or
or
es
pushf
jg
sbb
call
and
cmp
or
test
dec
clc
inc
js
sbb
push
dec
aad
sub
imul
mov
xchg
mov
leave
inc
push
mov
push
and
push
pop
out
repz
(bad)
jae
mov
retf
sbb
(bad)
mov
xchg
cmps
fsubr
out
cli
clc
loopne
repnz
mov
cmp
rcr
dec
mov
in
and
xlat
icebp
cmp
xchg
xchg
xor
inc
sar
cmp
add
push
bound
or
or
xchg
and
sbb
loope
jns
mov
pop
popa
aaa
cmp
xor
imul
jmp
inc
xchg
call
movs
cmp
outs
mov
(bad)
mov
cmc
cmc
add
les
xchg
call
pop
xor
cmps
or
mov
xchg
xchg
mov
iret
and
xchg
mov
addr16
test
(bad)
sbb
jl
xchg
dec
dec
jae
aam
push
pop
or
push
dec
xor
jle
and
dec
ror
jle
jno
cmp
push
xor
xchg
pop
and
xchg
xchg
pop
stc
sub
and
and
xchg
mul
idiv
adc
icebp
daa
fs
je
(bad)
xchg
pop
sbb
push
mov
jae
mov
push
jne
push
pop
out
sbb
xchg
jae
sub
jno
loopne
pop
jno
mov
xchg
xchg
jg
call
and
in
mov
int3
mov
in
sub
fistp
inc
adc
aad
scas
daa
xchg
jb
cmp
xor
aas
mov
pop
ins
inc
adc
cmps
shr
leave
rcl
addr16
lods
int
repnz
xor
out
xlat
sbb
dec
dec
cld
gs
mov
sbb
test
aaa
out
inc
sub
xor
jmp
fs
sub
or
sbb
mov
xor
pop
sar
mov
and
cld
es
jmp
xchg
add
sbb
push
aad
imul
(bad)
rol
mov
(bad)
std
das
cmp
movs
cdq
out
adc
xchg
hlt
add
mov
repnz
arpl
cld
or
por
or
ss
in
or
inc
mov
or
xchg
jmp
sub
push
and
in
bound
adc
mov
dec
xchg
xchg
jbe
cli
inc
test
out
mov
in
xchg
fcom
test
jge
mov
sbb
sub
dec
jmp
arpl
in
pusha
movaps
push
inc
rcl
movs
fs
push
xor
arpl
dec
or
(bad)
jmp
pop
push
xor
push
into
inc
jno
aas
test
mov
inc
repnz
call
or
mov
and
in
push
dec
jae
imul
and
xor
cli
dec
mov
shr
add
(bad)
fst
push
jb
loope
inc
rcr
pop
xchg
mov
push
push
imul
mov
neg
jae
dec
jmp
xor
rcl
jae
lahf
and
pop
jecxz
out
pusha
lock
ds
stos
mov
mov
loope
xchg
pusha
popf
jbe
rcr
xor
cdq
fild
jecxz
inc
dec
add
mov
gs
mov
ja
loope
retf
cdq
dec
in
jg
fiadd
cmp
scas
inc
inc
daa
ret
cmps
jbe
mov
in
outs
and
jg
cli
push
loopne
jg
jle
repnz
xlat
fwait
sub
lahf
xchg
cmp
pop
xchg
sbb
xchg
rol
push
stos
mov
mov
lea
cmp
mov
rcr
stos
mov
lds
(bad)
or
xchg
mov
mov
test
cld
push
cwde
mov
and
mov
fsub
pop
in
test
pushf
xchg
sub
loope
popa
cmc
ins
jmp
push
sub
iret
call
mul
cmp
xor
ror
cmc
cmp
jge
xor
test
jmp
jg
jne
fs
cld
cs
xor
xchg
jae
call
cli
ret
leave
enter
mov
out
outs
mov
sbb
mov
xchg
mov
fisubr
xor
cmps
xchg
jb
mov
ja
aad
adc
add
stos
adc
stos
test
mov
xor
test
test
or
hlt
es
mov
mov
sar
cdq
add
std
repz
movs
xchg
fs
or
fcmovnu
scas
cld
jno
dec
add
cmp
pop
lods
sub
aad
xchg
dec
mov
sbb
and
ret
cmp
aaa
cmps
test
call
dec
dec
(bad)
lods
jo
loop
push
sub
sub
inc
xchg
movs
sbb
mov
icebp
adc
shl
and
aad
hlt
fs
pop
ror
stc
jne
adc
in
inc
sahf
fidivr
ins
fs
mov
push
(bad)
(bad)
dec
mov
es
jb
ds
test
dec
jp
or
retf
or
push
data16
aaa
inc
sub
mov
js
push
fimul
enter
and
lahf
ss
(bad)
dec
cli
xlat
test
das
pop
cmp
pop
and
pop
or
fcmovne
ret
xchg
neg
mov
dec
xchg
jg
pusha
cmp
xchg
cmp
sub
(bad)
jp
sub
aam
pop
lods
pop
fld
fdiv
pop
(bad)
jp
(bad)
mov
adc
mov
popf
aas
jo
dec
cmp
mov
(bad)
rcl
push
mov
jno
popa
inc
jns
xchg
push
jge
icebp
push
pusha
test
(bad)
stos
cmp
es
(bad)
jle
mov
out
(bad)
and
push
sub
ja
fadd
push
cwde
(bad)
ja
fwait
movs
je
sbb
or
pop
sub
mov
sbb
jge
(bad)
fild
daa
mov
cmc
pop
int
cld
jns
retf
clc
arpl
into
cmp
jl
scas
adc
jb
add
dec
ja
fcmovbe
pop
out
daa
out
xor
inc
ret
cmp
push
out
and
retf
jl
loope
sub
lock
push
xor
xchg
fcomp
loope
dec
mov
loope
les
jnp
out
xchg
cli
sbb
sbb
(bad)
out
vmovq
sti
push
dec
pop
lds
daa
inc
mov
in
push
dec
mov
cdq
in
jge
jns
inc
call
sbb
sti
ret
out
lods
xchg
xchg
and
lods
inc
js
sub
xchg
sbb
movs
mov
and
lahf
imul
ret
out
cmc
and
and
ret
pusha
dec
retf
cmp
sahf
push
stos
mov
and
dec
dec
cmps
adc
lods
aas
jmp
into
or
push
out
xor
mov
rcl
test
daa
jns
test
pop
or
(bad)
movs
iret
cmps
sbb
je
aaa
mov
sub
mov
mov
addr16
xchg
div
rcl
cmp
les
or
sbb
in
jb
aam
in
and
xchg
mov
enter
cmps
(bad)
jecxz
pop
mov
arpl
scas
cmp
les
jo
dec
sbb
xchg
test
push
mov
sbb
push
test
inc
cmps
xor
xchg
scas
stc
imul
xor
inc
shl
es
dec
xor
stos
stos
mov
lock
inc
fwait
popf
mov
mov
adc
into
push
mov
lods
dec
mov
inc
pop
into
push
add
bound
mov
dec
icebp
cs
loope
je
push
(bad)
dec
pushf
dec
mov
add
popa
aam
cmp
lods
sbb
(bad)
mov
inc
xor
imul
ror
mov
and
leave
int
aad
(bad)
xor
std
push
push
inc
or
push
xor
aaa
cmp
jns
sbb
push
pop
xor
inc
rcl
push
and
jns
popf
scas
test
or
fild
(bad)
aam
outs
inc
sti
movs
cmp
xor
sbb
loopne
lea
mov
cli
das
mov
test
rcl
fs
arpl
and
not
pop
stos
adc
xchg
mov
mov
out
(bad)
in
scas
enter
outs
out
into
mov
(bad)
lds
xor
lods
jmp
jmp
mov
mov
mov
pop
add
push
and
push
sub
dec
push
mov
add
lds
mov
push
repz
adc
and
lea
(bad)
(bad)
test
arpl
mov
jbe
js
xor
jmp
in
dec
fiadd
dec
mov
(bad)
cmp
sbb
xor
add
lods
push
(bad)
in
push
add
daa
add
push
dec
outs
xchg
mov
ins
push
xor
dec
lods
fbld
sub
mov
ja
inc
mov
out
sub
mov
fnstsw
lea
adc
push
push
sub
addr16
mov
or
call
cmp
inc
sbb
pop
dec
mov
jl
mov
sbb
mov
bound
lea
mov
mov
das
adc
movs
retf
and
fld
lods
aam
loopne
mov
xchg
repz
mov
and
mov
daa
icebp
adc
jo
ja
xchg
sbb
inc
push
and
dec
xor
mov
rol
repz
cmpxchg8b
(bad)
int3
cmp
mov
push
mov
mov
jnp
std
xchg
jmp
xlat
jmp
(bad)
jg
loope
(bad)
sbb
lods
cli
add
nop
aam
in
dec
bound
(bad)
call
idiv
push
pusha
lods
push
sub
lods
xchg
push
lods
mov
mul
test
push
and
pop
sar
add
sub
(bad)
aas
mov
mov
and
xchg
pop
loope
cmps
mul
movs
mov
lds
cmc
stos
jae
jecxz
push
or
sbb
inc
xchg
icebp
or
daa
xchg
and
inc
fild
mov
cmp
call
movs
icebp
inc
sbb
test
xchg
mov
cmps
imul
in
call
pop
jbe
jb
ret
ss
push
xlat
ds
outs
aam
jle
cmps
or
lea
mov
mov
lods
(bad)
jl
sub
nop
dec
pop
mov
mov
rcr
outs
cmp
xchg
dec
cmp
pop
xor
popf
sbb
push
mov
daa
mov
and
pop
outs
leave
popf
lods
push
imul
and
cli
mov
jp
aad
mov
pusha
les
mov
in
ja
call
inc
push
xor
xor
or
pop
icebp
xchg
jns
cmp
xor
pop
jl
pop
ret
clc
aam
ficomp
scas
inc
test
and
sub
loope
(bad)
out
and
push
js
popa
inc
jno
loopne
call
xor
and
aam
jo
and
lea
nop
ret
(bad)
retf
cs
inc
movsx
dec
add
ret
and
pop
int3
xor
je
mov
test
jno
mov
jno
mov
sbb
fwait
cdq
cmp
sub
mov
outs
add
int
dec
movs
jge
in
mov
jp
mov
arpl
dec
mov
test
not
add
shl
push
inc
or
arpl
repz
sub
cld
or
and
imul
dec
cwde
inc
cli
js
sub
xchg
ret
jnp
push
inc
out
ret
sub
dec
adc
xchg
push
retf
and
push
sbb
neg
inc
popa
xor
popa
(bad)
out
(bad)
jmp
adc
clc
mov
retf
mov
add
test
mov
or
movs
loop
push
outs
or
mov
fwait
les
fsincos
sbb
ja
add
in
out
icebp
test
xchg
(bad)
xor
pop
std
or
jge
lea
les
xchg
retf
cmps
jo
(bad)
cli
sub
or
xor
cld
push
loope
jno
fld
clc
clc
out
or
int3
xor
lods
sub
dec
dec
icebp
mov
push
jne
and
shl
add
mov
cmc
leave
test
pop
stc
mov
or
xchg
push
call
adc
xor
sbb
out
(bad)
cmc
sbb
cwde
inc
sbb
dec
adc
xchg
add
mov
js
out
xchg
add
outs
ins
mov
loop
sbb
dec
loopne
sub
fimul
fwait
inc
lods
inc
xchg
es
inc
adc
out
iret
jne
(bad)
mov
test
jmp
ja
mov
rcr
fwait
es
ins
jae
sub
ret
jg
jmp
les
mov
sbb
call
sub
jne
(bad)
mov
test
xchg
sahf
sar
addr16
aaa
dec
pop
imul
adc
xor
push
sbb
arpl
lahf
retf
stc
jg
lods
cs
stos
call
fwait
cs
inc
int
popa
stc
cmp
hlt
outs
push
popf
test
je
adc
imul
pusha
je
fnstsw
test
dec
add
adc
sar
shr
xor
pushf
(bad)
xchg
int
xor
lods
adc
jmp
rcl
inc
dec
sbb
push
dec
ret
js
adc
adc
imul
test
ret
mov
sub
ins
or
sahf
cwde
xlat
les
adc
mov
jne
test
jle
sbb
les
imul
jge
test
mov
arpl
popf
fcom
bound
mov
jmp
das
cmp
pop
ret
rol
gs
push
aaa
and
xlat
mov
call
je
mov
lahf
sbb
or
movs
loop
sub
adc
(bad)
into
jl
dec
imul
aad
sub
push
add
rcl
iret
fist
inc
cmp
cmps
sbb
sub
bnd
fldenv
push
cmp
and
ror
sbb
in
dec
fimul
jns
adc
sbb
shl
xchg
or
mov
push
fsubr
clc
test
xchg
clc
adc
xchg
out
push
loopne
sbb
add
lds
sub
xchg
push
jns
shl
lods
popf
mov
pop
test
out
and
jno
sbb
repz
jae
fst
lock
lods
sbb
enter
sbb
ret
cmp
fs
xor
aas
mov
popf
jnp
push
adc
or
and
sub
out
out
mov
cwde
arpl
mov
push
mov
ja
pop
stos
loop
push
repz
xlat
(bad)
retf
cmp
int3
mov
cli
out
cmps
inc
ss
cmps
in
out
(bad)
jnp
jecxz
aam
int3
pushf
xchg
rep
xchg
cs
je
and
cmc
leave
or
int3
mov
call
popf
sub
ja
inc
push
push
or
scas
adc
cmps
pop
dec
int
push
loop
mov
pop
(bad)
mov
test
hlt
cmovo
cld
outs
or
(bad)
mov
clc
push
shl
cmp
fdiv
or
enter
ins
lods
xor
cwde
xchg
out
xlat
mov
xchg
mov
fstp
div
pop
sbb
pop
ja
xchg
cdq
lahf
jp
push
pop
or
fidiv
rol
inc
add
jae
bound
pop
test
mov
hlt
sbb
mov
into
mov
loope
push
adc
mov
jge
push
(bad)
enter
(bad)
(bad)
push
sbb
xlat
adc
outs
mov
sbb
retf
stc
bound
ret
sub
sahf
shr
add
sub
adc
mov
add
imul
rcr
mov
ret
gs
mov
mov
lods
mov
xchg
mov
ins
mov
iret
gs
inc
(bad)
jnp
mov
out
gs
aam
sub
js
ins
popf
inc
xor
test
xchg
cld
movs
xor
add
mov
sub
aam
jae
gs
xchg
in
pop
sbb
movs
loope
sbb
leave
mov
sub
xor
push
xchg
ins
js
xchg
jmp
cmps
shr
dec
sub
adc
mov
mov
pop
or
jmp
sbb
gs
ss
movs
pop
xchg
les
repnz
aas
ja
ins
daa
fwait
dec
enter
fnstsw
mov
pop
(bad)
test
ffreep
stc
aas
repz
aam
lds
jbe
and
and
ret
(bad)
xchg
nop
loop
sbb
push
leave
sbb
(bad)
dec
adc
sbb
ss
out
cmps
sbb
js
retf
out
push
pop
jmp
xlat
sbb
ds
fist
cmp
pop
pop
jg
xor
ja
dec
int3
imul
ds
mov
mov
or
jp
popf
std
mov
ss
push
adc
in
or
mov
(bad)
ror
mov
sub
push
hlt
ret
(bad)
cs
mov
sbb
hlt
mov
sahf
sub
mov
jmp
test
das
sbb
icebp
xchg
mov
movs
pmullw
dec
inc
loop
ror
cmp
pop
aad
mov
(bad)
xchg
in
mov
movs
cmp
cbw
sub
mov
xchg
adc
mov
iret
xor
sub
aam
mov
mov
mov
pusha
repnz
hlt
pop
retf
sbb
push
push
or
xchg
jg
push
out
lock
jbe
int3
je
xor
aad
push
loopne
lea
jg
hlt
mov
int3
ret
add
push
pop
push
shl
add
(bad)
adc
push
inc
data16
inc
fmul
xor
fistp
ss
xor
sar
or
daa
cmp
sbb
push
ret
in
adc
jbe
es
imul
cwde
call
bound
add
fdivr
cmps
mov
std
(bad)
sti
test
mov
ja
ficom
aaa
jno
std
pop
ins
addr16
push
xchg
xchg
js
loopne
mov
(bad)
dec
mov
(bad)
out
mov
cs
jae
lods
loope
out
cmp
dec
pop
jp
mov
loopne
mov
xor
rol
sahf
iret
pusha
push
rcl
leave
idiv
test
mov
xlat
jae
clc
dec
nop
gs
xor
xchg
leave
test
fxch
dec
inc
lods
fadd
cs
cmovb
push
lods
pop
sbb
and
and
xor
mov
cmps
mov
repnz
xlat
leave
adc
mov
cwde
call
pop
and
ins
xchg
inc
cmp
sbb
jecxz
fisub
daa
inc
xchg
xor
cmp
jl
movs
jbe
inc
push
lods
pop
imul
cmp
xor
pop
jmp
in
mov
and
push
adc
xchg
dec
mov
fcomp
jbe
mov
fwait
dec
leave
dec
lea
pop
test
std
aas
sub
xchg
popf
in
xchg
hlt
fidiv
sub
inc
aaa
(bad)
pop
xchg
call
add
push
and
loope
mov
ret
jo
fsubr
cmp
test
dec
or
xchg
mov
add
arpl
add
outs
sub
pop
retf
pusha
inc
xor
lds
fdivp
rol
dec
push
stos
push
jg
(bad)
ss
icebp
mov
sti
mov
fwait
and
push
and
pusha
cmp
test
add
mov
dec
jo
clc
movs
xlat
xchg
add
and
mov
daa
or
inc
or
or
fisub
fadd
inc
push
outs
cld
cmp
sub
xor
es
jae
paddusw
jne
scas
sbb
not
mov
fcmovnu
sub
js
push
mov
push
lods
int3
and
dec
cwde
xchg
dec
jecxz
mov
push
scas
mov
jmp
jnp
lahf
xlat
addr16
or
test
jb
mov
sbb
ja
ret
dec
mov
mov
mov
sbb
xor
fadd
mov
add
mov
nop
mov
mov
cmps
push
imul
das
inc
push
push
jmp
cmc
and
push
outs
fcmovnb
inc
scas
(bad)
mov
adc
enter
and
sbb
daa
loop
call
push
pop
sbb
adc
mov
mov
mov
inc
jae
loopne
sub
scas
mov
mov
mov
pop
jg
enter
mov
or
outs
inc
xchg
mov
add
in
xchg
sub
jmp
(bad)
jecxz
jnp
and
xchg
cmp
pop
ds
int
fistp
xor
std
xchg
jp
pop
mov
jle
in
mov
ret
aam
fiadd
mov
test
dec
xor
pop
jmp
sahf
sub
add
xchg
sub
mov
cmp
push
mov
out
mov
clc
cmp
jno
jae
jb
add
dec
cdq
jne
scas
inc
outs
sti
push
call
mov
xchg
dec
in
(bad)
xor
pop
adc
neg
push
(bad)
dec
xor
cli
shr
and
lock
das
repnz
xlat
mov
(bad)
sar
popf
loopne
adc
xor
out
dec
es
int3
mov
fnstenv
mov
jbe
mov
div
pop
and
xchg
mov
sub
scas
cmps
mov
and
add
push
adc
loope
stc
jo
mov
imul
in
sbb
mov
imul
cmp
adc
retf
pop
push
sub
jmp
(bad)
ds
and
pop
lods
push
repnz
and
xchg
pop
xor
pop
pop
stc
jp
call
add
inc
dec
movs
mov
and
inc
inc
pop
jb
out
jmp
icebp
mov
sub
in
inc
icebp
inc
ret
mov
cld
sar
mov
jns
and
cli
cs
push
test
arpl
dec
jo
mov
mov
sbb
jnp
je
or
xor
call
out
sub
mov
dec
xor
stos
mov
loope
aad
and
push
mov
inc
in
pushf
aam
test
fiadd
pushf
mov
test
mov
adc
and
js
cmc
jbe
cli
lahf
mov
dec
popf
sub
(bad)
test
jne
mov
cmp
mov
or
inc
nop
mov
jmp
jbe
or
xbegin
mov
(bad)
fild
in
out
xlat
xchg
fisubr
jg
or
xchg
inc
jnp
xchg
pop
popf
push
lods
in
ins
cmp
adc
and
mul
cdq
test
in
push
mov
ins
ins
(bad)
leave
xchg
stos
sahf
and
pop
into
(bad)
jns
shr
or
ror
cli
rol
das
or
aam
dec
fnsave
dec
sti
stc
sub
ret
std
mov
sbb
je
std
sub
ret
sub
jl
ins
lods
cmp
test
jmp
imul
xchg
push
xor
test
call
movs
mov
fsubr
mov
popf
adc
mov
(bad)
or
nop
mov
hlt
bound
movs
mov
push
mov
outs
add
add
cwde
pop
mov
(bad)
ss
mov
mov
ins
jle
test
inc
lahf
mov
push
cli
push
loopne
mov
retf
mov
pop
mov
(bad)
rcl
inc
out
dec
inc
or
pmulhw
and
lods
mov
push
push
int
into
inc
and
pop
adc
pusha
lahf
in
ficom
jl
xchg
cli
sbb
xor
aas
fisttp
xchg
mov
xor
dec
adc
int3
jl
aaa
mov
or
rol
hlt
scas
retf
mov
adc
(bad)
adc
(bad)
fsubr
data16
jnp
xchg
ja
out
pop
inc
jmp
ror
xor
pop
xchg
nop
pop
cmp
ret
call
aad
popa
test
mov
test
mov
mov
mov
and
in
add
adc
(bad)
adc
in
mov
cmp
adc
sahf
loop
leave
aad
sbb
inc
push
mov
cmp
cmp
mov
scas
scas
out
mov
int
sbb
jns
pop
arpl
mov
xor
push
dec
and
(bad)
in
xor
addr16
pop
dec
or
mov
mov
add
cmp
or
and
push
mov
fwait
or
hlt
add
std
or
es
push
push
bound
into
jno
dec
add
mov
mov
and
int
mov
test
pop
jg
push
out
bound
stos
int
xor
push
adc
call
push
mov
mov
mov
adc
mov
loop
and
ins
out
jmp
ins
adc
pushf
dec
daa
leave
leave
mov
cmp
add
fs
inc
fcomp
or
or
mov
xchg
or
inc
out
aas
loopne
in
mov
sub
xor
xchg
rep
xchg
or
popa
daa
mov
in
push
or
push
fisub
xor
xor
imul
inc
sbb
nop
jno
cmp
mov
adc
xor
aad
(bad)
mov
inc
stos
stc
jle
or
push
pop
add
pop
cmp
fld
cmp
add
(bad)
mov
mov
xchg
fdivr
outs
pop
lods
mov
cmp
and
hlt
frstor
mov
push
ficomp
push
imul
les
sbb
aas
mov
mov
mov
imul
or
loopne
pusha
add
jge
inc
jo
stos
lahf
into
xchg
je
push
cmp
mov
sub
or
push
shr
les
cwde
xor
ins
and
xchg
sbb
fs
xchg
scas
cwde
fs
jb
repz
js
pusha
dec
sbb
stos
sub
push
aas
sub
sub
loopne
ror
jg
es
push
cld
in
and
jl
fidivr
loopne
cmp
adc
push
addr16
shl
ficom
mov
in
out
and
test
or
cmp
xchg
rcl
dec
(bad)
int3
mov
jmp
jecxz
popa
aad
adc
pop
jbe
movs
xor
iret
ja
sbb
es
cmp
add
cmp
xchg
mov
push
jg
jbe
mov
in
imul
xor
xchg
fwait
outs
clc
scas
or
outs
sub
add
xor
sbb
test
mov
and
fild
icebp
hlt
cmc
scas
retf
stos
pusha
fwait
int3
test
mov
mov
clc
pop
inc
adc
out
rcl
ror
and
out
retf
int
xchg
popf
jmp
(bad)
(bad)
jbe
mov
scas
mov
and
aaa
add
ins
cld
inc
or
cmp
lock
iret
sbb
cdq
test
inc
pop
push
inc
jns
push
movs
shl
pop
jo
shl
test
xchg
inc
dec
imul
out
xchg
push
fimul
sti
push
test
cmp
and
pop
dec
ss
xlat
in
xor
pop
pop
xchg
mov
mov
push
adc
daa
ret
daa
scas
mov
loop
in
ds
sub
pop
in
jb
cmp
push
dec
xor
scas
mov
xchg
stos
push
test
xor
out
repz
out
inc
sbb
cmp
movs
int3
sub
cdq
mov
sub
arpl
or
pop
sbb
test
(bad)
mov
aas
cmp
(bad)
repz
in
cwde
cs
xchg
leave
mov
push
and
scas
xor
xor
xchg
xchg
mov
in
fdiv
adc
sub
jnp
jo
addr16
pop
fnsave
fmul
mov
les
cmps
dec
cmps
adc
xchg
sbb
pop
jg
lods
sbb
in
arpl
sbb
mov
xchg
jl
inc
fld
add
push
mov
adc
cmp
and
test
and
dec
sti
and
fcomip
rcl
stos
scas
(bad)
pop
mov
add
jae
add
mov
retf
in
and
xor
out
mov
pop
or
xor
imul
add
fsub
fadd
xchg
xor
dec
push
push
sub
xchg
in
jge
in
inc
and
or
inc
lahf
sub
stos
repnz
mov
js
repz
dec
sub
fs
xchg
cld
inc
pop
nop
call
cld
mov
push
ins
sub
pop
add
lock
icebp
jl
push
gs
pop
pushf
inc
lods
movs
scas
inc
and
push
and
mov
mov
mov
push
dec
fst
mov
push
movs
outs
not
aaa
dec
and
pop
test
mov
mov
data16
shl
sub
shl
outs
cmps
sbb
adc
xchg
imul
dec
mov
clc
xor
adc
dec
mov
pop
dec
(bad)
pop
push
jb
push
int3
not
movs
dec
enter
jno
arpl
out
mov
mov
mov
sar
mov
add
inc
jbe
dec
push
and
enter
adc
add
inc
adc
xchg
add
(bad)
and
jns
lock
ins
lods
jmp
fs
jmp
cmps
in
bound
loope
and
scas
adc
aam
(bad)
repnz
aas
sbb
sub
movhps
pop
pop
in
scas
int3
push
xor
ins
loopne
repz
jns
pop
aaa
adc
mov
ss
xor
xchg
aad
mov
scas
mov
fdiv
jae
rcr
xchg
adc
cmps
std
xor
adc
nop
aad
repz
ret
neg
in
sub
mov
jae
dec
pop
repz
call
sub
aad
std
outs
cmp
unpckhps
xchg
adc
xchg
or
lea
mov
jl
push
cmp
cmps
jbe
stos
movs
add
or
sbb
add
loopne
dec
cwde
cmc
push
mov
xchg
jmp
mov
pop
sub
popf
or
mov
inc
(bad)
xor
pop
jmp
aam
nop
adc
scas
push
into
adc
es
popa
xchg
or
pop
cld
jle
aam
in
mov
sbb
std
xchg
int
ins
push
ret
push
sbb
aam
icebp
mov
or
repnz
adc
aam
bound
or
adc
xchg
xor
ja
or
dec
add
mov
sbb
ins
jo
clc
cwde
in
inc
std
ret
push
stos
test
jno
cmps
push
cmp
push
adc
mov
in
inc
mov
lock
adc
jle
mov
cld
cmp
imul
cwde
rol
repz
inc
or
jle
ror
xchg
mov
push
and
jp
icebp
es
cmp
aas
fist
ds
or
jecxz
inc
sbb
es
out
test
xchg
xchg
jecxz
mov
test
shr
sti
lahf
loopne
nop
push
lahf
cmp
imul
mov
inc
push
add
jecxz
push
dec
mov
mov
sub
nop
sub
jmp
inc
add
cmps
fisttp
push
or
shl
push
retf
and
add
adc
inc
add
jns
push
cld
stc
jmp
stos
mov
pushf
pop
mov
ins
jno
scas
pop
enter
(bad)
lds
fisttp
and
shl
jecxz
mov
jl
dec
enter
mov
jae
jle
dec
push
adc
mov
movs
jmp
pop
and
loop
xacquire
cmp
and
sbb
cmp
shl
mov
scas
test
fsub
push
mov
sti
ret
(bad)
cmp
out
fistp
or
ins
mov
shl
mov
repnz
bound
fmul
jbe
jmp
mov
arpl
aad
jl
jp
fisttp
cmp
inc
jns
enter
dec
call
imul
stos
lods
mov
jp
lahf
mov
mov
outs
ds
sub
adc
dec
jmp
xchg
pop
fld
scas
sbb
shl
sub
imul
aaa
mov
xchg
test
cli
mov
fld
or
arpl
add
fwait
push
cmps
pop
iret
cdq
cmp
les
add
sub
sar
cs
jnp
pusha
nop
or
inc
xchg
movs
mov
arpl
scas
mov
sub
ret
(bad)
movs
fwait
inc
jo
dec
mov
adc
jle
pop
outs
jae
push
pop
inc
dec
dec
fldcw
jecxz
or
lahf
lds
sub
push
inc
pushf
inc
lahf
cdq
clc
ficomp
push
cmovae
push
sahf
scas
inc
xchg
fadd
lods
cld
mov
test
(bad)
fisubr
jo
mov
add
or
sbb
jl
push
sbb
push
adc
cmc
inc
add
in
jecxz
push
sub
int3
pushf
outs
pushf
adc
repnz
ficom
jb
mul
cld
movs
jbe
lods
cmp
inc
xchg
imul
stc
mov
cmp
in
or
popa
sar
and
jmp
push
lds
jno
sub
xchg
outs
xchg
cmp
nop
and
sbb
mov
scas
mov
xor
(bad)
xor
jmp
adc
adc
xchg
or
ja
dec
dec
sahf
(bad)
jne
in
fwait
loopne
sub
addr16
inc
mov
ror
out
lods
add
cmp
fst
call
les
cmps
and
mov
jmp
fidiv
inc
adc
xlat
jo
push
call
test
jp
pop
and
and
or
cmp
pop
in
push
inc
jno
aas
cs
(bad)
cmp
out
cmp
pop
sub
mov
and
push
add
js
data16
push
mov
pusha
(bad)
aaa
in
mov
test
jmp
fs
mov
dec
les
enter
rol
cld
inc
sub
sub
aaa
sbb
fidiv
popf
fnstenv
pop
(bad)
scas
nop
sbb
xchg
repz
fidiv
rcr
and
in
mov
jge
out
fwait
sbb
pop
xor
push
fbld
(bad)
jmp
test
fld
inc
xchg
lock
(bad)
and
stos
mov
std
push
outs
retf
sub
xchg
lods
in
inc
xor
jmp
mov
dec
and
fidiv
ss
(bad)
jp
jbe
fstp
dec
and
sub
cs
jne
inc
std
iret
add
(bad)
sar
pop
mov
inc
dec
jnp
aas
sub
mov
mov
sbb
je
mul
iret
adc
dec
push
xchg
inc
push
inc
fdivrp
daa
sub
hlt
mov
mov
fs
jo
cmp
test
addr16
adc
jmp
inc
jb
mov
addr16
add
dec
add
ficomp
push
adc
addr16
(bad)
je
xor
mov
sub
pusha
push
sub
bound
add
xchg
xlat
mov
xchg
loop
dec
ins
jle
jl
inc
sti
mov
xchg
(bad)
sbb
mov
mov
scas
lods
dec
jecxz
(bad)
cs
inc
mov
add
dec
push
add
hlt
inc
repz
xor
adc
gs
bound
daa
std
imul
adc
or
xchg
cwde
jo
sub
loop
std
lea
jge
push
inc
rcr
mov
int
xchg
pop
fs
adc
call
jb
push
pop
pop
or
add
pusha
adc
jl
add
sbb
xchg
xchg
sub
sti
xor
pusha
(bad)
sbb
push
scas
dec
ret
nop
cmp
dec
js
mov
and
pushf
xlat
in
cmps
xchg
cmp
dec
fiadd
bound
test
into
xor
adc
mov
int3
mov
sbb
cmps
push
xchg
retf
sbb
or
es
int3
sub
inc
shl
add
test
sbb
or
and
fucomi
fxch
add
cmp
push
(bad)
outs
mov
cmps
and
repz
out
xor
cmp
pop
push
or
pop
repz
mov
sub
mov
mov
cdq
cmp
stc
fld
inc
cmc
out
ret
add
xchg
lock
sub
inc
cmp
cmp
and
push
and
mov
in
push
mov
int
push
loopne
sub
scas
int
or
loopne
je
ror
mov
js
xor
imul
dec
dec
push
jge
outs
clc
scas
xchg
or
outs
arpl
sub
mov
ret
mov
sub
sub
shr
dec
shr
inc
mov
pop
adc
cmp
cmps
inc
mov
out
add
push
div
movs
mov
inc
sub
nop
sahf
pop
jns
add
cmc
popa
outs
mov
fidiv
push
mov
mov
jmp
xor
dec
cwde
imul
fidiv
cmc
leave
inc
jns
sti
jmp
rcr
addr16
xchg
pop
loop
in
out
cmc
sti
mov
push
aad
and
xchg
pop
retf
push
es
adc
cmp
dec
aas
and
test
mov
iret
add
push
or
mov
sbb
loope
jle
pop
ins
mov
jp
test
rcr
in
imul
jo
lds
sub
sub
dec
imul
inc
mov
aam
sahf
jmp
fbstp
(bad)
push
aam
adc
mov
add
nop
push
pop
mov
xlat
nop
cs
retf
out
cmp
frstor
aad
xchg
xor
mov
aad
push
or
ja
gs
dec
jno
es
push
or
adc
add
sub
fist
xchg
pusha
call
or
or
inc
jo
mov
inc
mov
mov
movs
fistp
sbb
int3
push
ins
adc
push
gs
and
jp
jno
cmp
jmp
mov
mov
or
or
jecxz
sub
push
(bad)
sbb
sbb
call
sbb
inc
adc
sbb
or
movs
ror
inc
xchg
mov
pop
dec
inc
arpl
out
mov
add
jmp
arpl
adc
sbb
and
lea
dec
ss
in
xchg
outs
test
call
xchg
mov
cmp
push
mov
sub
push
cld
fwait
(bad)
sbb
jb
or
repz
call
cmc
leave
jbe
clc
das
retw
inc
add
or
out
jnp
arpl
push
push
push
sub
mov
sbb
scas
add
push
sbb
fucomi
lds
inc
arpl
add
push
ins
aaa
call
loope
or
pop
in
ret
pop
test
xor
add
sbb
pop
pop
(bad)
imul
(bad)
leave
jns
cwde
ror
mov
pop
fst
sbb
scas
mov
mov
cwde
inc
push
ja
jge
add
lds
or
cmc
xor
aaa
cmp
xchg
out
arpl
inc
sbb
call
int3
cmp
sbb
inc
lock
lods
mov
ds
hlt
or
xor
ret
fidivr
xor
lods
inc
popf
mov
pushf
iret
add
bound
jg
and
cwde
and
cs
adc
in
inc
and
inc
mov
xchg
push
dec
shl
stc
(bad)
and
daa
nop
or
aad
imul
scas
push
gs
sub
mov
mov
jne
imul
loop
fisttp
mov
fdivr
push
xchg
or
pop
add
cmps
xchg
add
mov
outs
pusha
inc
xor
cwde
dec
out
sub
repz
int
sbb
ret
mov
cmp
div
sub
lock
sub
adc
(bad)
mov
ins
(bad)
or
imul
jno
dec
dec
adc
sbb
or
push
jno
sbb
ds
loop
push
retf
shl
push
js
push
adc
sar
add
or
lahf
data16
ret
and
sub
push
into
or
inc
cli
sbb
push
loope
jbe
jle
in
mov
loop
xchg
xor
adc
add
cmp
fwait
jmp
fldz
ss
pop
pop
jne
lds
jmp
scas
mov
adc
mov
inc
mov
call
jmp
enter
or
cmp
and
xor
jne
retf
cdq
icebp
movs
pop
mov
or
mov
and
adc
arpl
cmps
into
lods
cmp
xor
adc
mov
icebp
cmp
mov
cmp
(bad)
out
push
dec
xchg
shl
mov
sbb
inc
out
push
rcr
mov
icebp
into
and
pop
rcl
xor
(bad)
sub
cmp
push
les
or
(bad)
es
xor
xchg
out
xor
imul
xchg
in
inc
popf
sbb
cs
cmp
pop
jecxz
ror
in
dec
daa
movs
mov
sti
les
loop
(bad)
in
mov
shl
(bad)
outs
(bad)
hlt
dec
les
and
push
add
inc
in
add
mov
dec
mov
xor
push
cdq
push
jecxz
ja
retf
inc
movs
sbb
mov
inc
rcr
cmc
mov
sbb
pop
nop
and
mov
push
mov
ret
loope
cli
or
sub
inc
xor
jae
out
shl
inc
xchg
adc
jp
cmp
mov
les
arpl
cmp
xor
xor
loop
jns
shl
sbb
repnz
es
and
mov
sub
clc
inc
jbe
mov
mov
jmp
inc
pop
out
inc
sbb
data16
dec
mov
inc
pop
xor
retf
cmps
mov
arpl
stos
std
ss
in
movs
xchg
or
add
jge
es
(bad)
pop
xor
jle
cmps
pop
cdq
jnp
push
add
popf
inc
mov
std
repz
stc
arpl
mov
mov
cmps
and
nop
dec
mov
fisub
push
xor
adc
in
cmps
pop
ins
sub
scas
leave
leave
retf
and
cmp
leave
lea
push
pop
shl
imul
sub
push
mov
mov
xchg
fistp
xor
dec
mov
gs
pop
xlat
sbb
test
shl
pop
cmps
mov
mov
cmp
sbb
push
sub
pop
push
(bad)
pushf
xor
lds
enter
or
pop
enter
jle
loope
jl
jl
sbb
gs
retf
cmps
mov
inc
(bad)
jns
aaa
xor
outs
(bad)
jb
push
mov
pop
mov
(bad)
loop
and
push
xchg
sbb
cmp
xor
cmp
scas
and
enter
imul
retf
arpl
icebp
data16
arpl
arpl
jmp
dec
and
adc
cmp
cld
and
xchg
fisubr
xor
cli
inc
retf
je
inc
sbb
cmps
sub
adc
cmp
div
push
out
outs
push
lahf
stos
adc
loop
xor
xchg
ss
fdivr
(bad)
sahf
js
and
dec
push
(bad)
jb
pop
popa
xchg
je
pop
pop
inc
mov
nop
sbb
mov
out
xor
or
mov
cmp
add
enter
cmp
movs
inc
mov
ret
mov
sbb
mov
in
push
loope
(bad)
fcom
mov
pusha
int
and
cli
add
call
cli
loop
retf
mov
movs
sbb
pop
fistp
dec
cs
aaa
push
jnp
xlat
aas
je
daa
ja
add
push
inc
mov
xor
aas
pop
inc
rcr
jle
bound
jnp
mov
adc
setae
lock
loopne
sahf
scas
jo
arpl
mov
pop
sub
out
pop
aam
inc
dec
or
(bad)
clc
sub
jns
mov
mov
sar
cmp
cli
fwait
out
push
sbb
push
sbb
rcl
add
es
push
stos
enter
stos
std
and
sub
push
xchg
dec
movs
mov
dec
jge
xchg
out
shr
ret
sar
dec
inc
sbb
aaa
pmuludq
pop
stc
or
cmp
xchg
or
add
loop
jbe
imul
jo
fidiv
in
push
jne
or
mov
mov
mov
leave
inc
leave
imul
shl
in
cmp
data16
mov
and
jmp
enter
aaa
xchg
div
mov
cmp
loop
add
les
dec
add
mov
cmp
rcl
in
pop
fsubr
(bad)
or
pop
or
mov
sbb
out
sbb
mov
mov
jbe
cmp
push
out
push
push
xor
xchg
pop
das
sbb
inc
cs
aaa
xchg
pop
jp
pop
push
cdq
push
mov
popa
inc
lahf
inc
pop
popf
shl
push
es
popf
mov
cwde
not
jne
xchg
into
sbb
push
shl
les
fsubr
jmp
jo
call
push
fcomp
mov
jb
outs
add
mov
adc
daa
out
lods
pushf
sub
(bad)
or
dec
sub
jae
pop
or
enter
(bad)
stos
dec
bound
iret
pushf
mov
fnstenv
pop
and
jge
mov
scas
jbe
mov
aam
fisub
enter
xor
mov
sahf
cdq
cmp
int3
inc
clc
sbb
(bad)
loop
pshufw
test
or
mov
mov
dec
xchg
aaa
clc
call
jecxz
fiadd
dec
fwait
push
outs
inc
repnz
mov
das
in
loop
or
mov
pop
imul
jbe
mul
xor
push
sbb
xor
push
jae
pushf
int
or
stos
push
and
add
inc
jle
add
mov
or
push
icebp
pop
pop
adc
es
inc
ret
mov
rcr
std
addr16
out
mov
ret
add
mov
ret
es
shl
cpuid
xlat
leave
jno
sub
cli
xor
outs
pop
(bad)
call
cmp
out
xchg
dec
popa
xor
xor
inc
inc
pusha
add
sub
(bad)
xor
xchg
jnp
jmp
push
into
(bad)
(bad)
test
ficom
push
ror
in
std
mov
lods
jmp
jb
jle
mov
out
(bad)
jbe
mov
not
mov
add
push
or
test
es
xor
mov
fisttp
daa
rcr
outs
xor
scas
imul
iret
inc
aam
leave
pop
adc
stc
fld
adc
jbe
in
in
cmc
in
mov
mov
xchg
pop
mov
pop
scas
mov
and
cmp
jmp
adc
pusha
mov
cdq
mov
(bad)
arpl
repnz
and
nop
push
pop
xchg
pop
xchg
mov
dec
clc
jbe
stc
cmp
sbb
data16
loopne
data16
repnz
jne
movs
test
fsubp
inc
push
test
cmps
mov
xchg
xor
sbb
sbb
sub
mov
mov
lods
fsubr
push
cmc
mov
pop
dec
scas
out
jmp
test
fdivr
lds
xor
rol
fstp
sub
(bad)
ds
stc
jns
cmp
sub
pop
inc
rcl
pusha
inc
outs
cdq
jp
cmp
fs
push
mul
call
cmp
pop
aaa
leave
jge
pop
jnp
mov
test
pop
inc
sar
pusha
pushf
test
cmp
into
adc
pushf
lock
cmp
mov
ds
push
iret
mov
test
sahf
ret
mov
adc
jns
lock
movs
aaa
imul
out
ror
push
and
(bad)
mov
pop
or
jbe
cmp
lock
sti
stos
inc
adc
pop
pop
icebp
ins
dec
mov
fld
shl
sbb
dec
popf
icebp
cmp
adc
imul
add
sbb
xchg
dec
in
xor
iret
das
jg
lods
fwait
ja
push
pop
mov
pop
loope
jno
popf
mov
jl
and
and
and
add
out
data16
mov
pushf
jo
(bad)
xor
jl
inc
shl
cmp
xor
jmp
push
stos
jle
arpl
sbb
pop
and
dec
test
addr16
xlat
cmp
out
sbb
jge
or
out
cmps
ret
sbb
or
adc
repnz
scas
push
pop
pop
or
adc
push
(bad)
pop
push
lds
jae
jmp
cmp
and
and
mov
fdiv
loopne
jecxz
loop
fidiv
mov
stos
push
ret
xchg
xor
div
inc
push
mov
lahf
mov
pushf
fild
repnz
xor
lock
outs
fst
ret
jl
inc
(bad)
jg
imul
int3
test
cmp
sub
sbb
ret
icebp
mov
out
xchg
dec
bound
fcmovne
mov
je
add
(bad)
pop
frstor
cmps
test
pop
cmp
mov
mov
mov
in
jle
push
dec
and
stc
ins
iret
adc
sub
std
ins
push
dec
jmp
xor
mov
loopne
adc
into
inc
fwait
sub
aaa
dec
inc
inc
frstor
mov
imul
inc
jbe
fsubr
rcl
cli
sti
xor
jae
sbb
or
cli
ins
call
pop
repz
dec
cld
addr16
sub
stc
adc
or
dec
sbb
dec
sub
test
xchg
jp
js
xchg
push
pop
sbb
ins
icebp
sub
clc
aas
and
fsub
loope
xor
push
test
test
jmp
outs
jl
(bad)
adc
mov
jmp
or
leave
dec
dec
adc
push
adc
adc
or
test
std
add
test
sti
retf
aas
mov
hlt
call
int3
aaa
fwait
cdq
xchg
fwait
sbb
xchg
stos
pop
loopne
jne
jp
and
mov
cmp
loop
mov
mov
sub
(bad)
in
pop
pop
sar
dec
stos
loopne
sbb
cmp
shl
pusha
stos
int
scas
fdiv
lock
imul
jo
out
jb
fadd
(bad)
int
(bad)
cdq
scas
in
addr16
inc
imul
mov
push
dec
dec
add
pop
mov
dec
adc
inc
xchg
xor
test
xor
sub
adc
aad
int
cmps
outs
jae
xchg
mov
stc
mov
xor
out
mov
add
in
dec
cmp
mov
iret
and
mov
jae
int
(bad)
les
dec
gs
in
add
push
xchg
push
fldenv
push
mov
arpl
add
push
push
xchg
aam
add
(bad)
jbe
inc
fadd
enter
mov
int3
fisttp
call
aas
rol
in
jmp
movs
lds
mov
int
inc
mov
cmc
shr
jmp
inc
sub
inc
xlat
ficom
fwait
ret
mov
sub
or
(bad)
dec
into
lahf
mov
xor
and
fs
inc
pop
xor
jo
ds
ss
or
mov
push
daa
inc
pop
push
cmp
arpl
and
jp
xor
shr
push
sub
pop
inc
loope
push
mov
les
stc
mov
pop
sbb
ret
je
in
ins
loope
fidivr
ret
jne
xchg
in
cmp
sahf
cwde
push
fmul
mov
(bad)
aas
sbb
in
mov
cmp
movs
mov
xchg
mov
jmp
out
cmps
cmps
jns
jl
shl
push
sub
adc
jecxz
push
sbb
retf
into
dec
int
push
push
sbb
mov
ret
add
sahf
das
push
or
pop
push
push
mov
clc
cmp
(bad)
fild
mov
in
inc
cmp
(bad)
imul
cmps
or
test
sub
fst
sbb
mov
cdq
lock
xor
xor
loopne
adc
xchg
sbb
xor
fdiv
push
add
fcom
and
pop
xlat
fist
and
rcl
jle
cs
sub
fwait
(bad)
dec
sbb
addr16
test
clc
pop
into
enter
inc
push
sbb
cmp
ret
lahf
and
mov
shr
shl
dec
aaa
xchg
dec
retf
je
scas
or
cmp
adc
mov
sahf
xor
jp
pop
sub
xor
test
mov
add
pusha
fnsave
dec
scas
jb
sbb
mov
ins
lea
rcl
mov
enter
not
push
jg
jbe
jle
in
gs
int
dec
outs
movs
mov
mov
shl
not
mov
add
jmp
sbb
(bad)
nop
xor
out
jb
mov
cmp
pop
or
loop
mov
sub
dec
cwde
movs
lahf
idiv
int3
in
(bad)
and
lea
aaa
stc
jg
pusha
cmps
or
pushf
inc
jge
push
xchg
jae
ss
and
mov
xchg
cmp
xlat
mov
sbb
clc
mov
xchg
clc
popf
cwde
aaa
dec
lods
push
addr16
add
mov
jo
ror
pushf
(bad)
jmp
stos
std
and
and
and
(bad)
movs
jle
push
ret
xor
and
jl
cdq
adc
cdq
or
pop
jne
push
aad
jg
rcr
xchg
ins
mov
pop
and
rcl
sbb
hlt
cmp
mov
inc
scas
sahf
mov
hlt
cmps
nop
je
fild
lahf
inc
lock
jg
push
(bad)
ja
aad
mov
cli
ja
enter
inc
mov
push
jmp
xor
pop
mov
push
shr
and
jb
xchg
mov
or
jl
sbb
out
mov
inc
out
aaa
pusha
pushf
sub
jg
lea
fs
mov
push
aad
ret
sbb
cmc
ret
inc
mov
cmp
sbb
push
xor
jnp
retf
cld
mov
dec
test
(bad)
xor
shl
stos
and
xchg
(bad)
pushf
cmps
(bad)
stc
out
out
mov
xor
sbb
repz
mov
js
cmps
or
cmc
inc
adc
mov
ret
repz
sub
dec
in
pop
outs
add
cdq
loopne
les
xchg
pop
arpl
fstp
jno
jno
mov
cmp
mov
rol
push
sub
movs
sub
and
fcomp
xchg
(bad)
mov
cmp
mov
cli
jnp
dec
cmp
and
xchg
adc
lds
inc
clc
test
and
cdq
push
lods
sub
arpl
mov
inc
cld
es
stos
mov
sti
test
xor
adc
js
out
(bad)
pop
xor
mov
int
cwde
mov
ins
mov
adc
xchg
icebp
push
push
cmp
and
sub
xor
movs
gs
loop
cs
add
pusha
sub
mov
jb
jp
adc
push
shl
into
out
mov
jae
aaa
repnz
adc
sub
hlt
(bad)
adc
retf
add
les
xchg
inc
xor
xchg
push
fdiv
adc
mov
adc
fdivr
cmp
stos
pusha
or
fwait
cmp
add
xchg
outs
test
(bad)
aad
icebp
aam
xor
test
dec
mov
es
mov
mov
and
cmp
or
or
add
xor
add
mov
mov
repnz
dec
clc
sbb
push
or
ja
pop
xor
cmp
icebp
pop
aad
dec
pop
stos
pop
xor
add
rcr
sub
(bad)
aad
ins
(bad)
push
add
int3
shr
or
cmp
mov
fdivr
enter
mov
or
in
xchg
jb
arpl
outs
icebp
lahf
addr16
jecxz
shr
xchg
loopne
jmp
jg
jp
leave
mov
add
and
mov
vpunpcklwd
daa
into
imul
or
jno
jae
cmc
inc
mov
mov
or
jmp
clc
jle
pusha
stc
(bad)
retf
jns
bound
push
pop
sbb
add
mov
sub
aad
cdq
fisub
int
movs
ja
jmp
inc
test
pop
push
or
popf
(bad)
mov
and
into
add
xlat
pushf
jae
push
xor
pop
or
movs
sbb
adc
loopne
adc
std
cli
data16
or
and
sbb
pop
dec
pop
push
loop
mov
sbb
sbb
sub
adc
and
les
xchg
bound
mov
mov
mov
cmc
pop
outs
jle
lea
mov
mov
(bad)
mov
in
sbb
retf
dec
aam
add
jb
sbb
jp
outs
mov
xlat
call
inc
jge
dec
mov
fcom
icebp
sub
push
out
and
xor
push
jl
add
pop
or
adc
pop
adc
mov
xor
jno
test
xchg
mov
pop
inc
add
scas
lods
cmp
sti
or
es
inc
sbb
push
xchg
rol
frndint
popa
adc
push
out
xchg
(bad)
mov
pop
mov
xor
push
jae
jne
out
movs
es
and
aad
push
or
mov
shr
inc
push
loopne
icebp
retf
adc
ds
into
pop
bnd
mov
cmps
clc
clc
ja
and
fistp
sti
imul
icebp
inc
add
fild
ret
addr16
jmp
xchg
xlat
repz
fcom
mov
sbb
sbb
cmp
std
jnp
pop
imul
fwait
sbb
retf
cmp
and
push
repnz
gs
jo
loope
mov
dec
sahf
mov
add
out
cmp
push
pop
inc
pop
or
cmps
push
enter
mov
adc
xor
call
push
push
rcr
das
and
or
stos
aaa
popa
in
in
pop
xor
cmp
sbb
int
faddp
stos
bnd
dec
lods
xor
fisttp
test
icebp
gs
xchg
pop
and
jne
cdq
mov
mov
stos
pop
mov
inc
push
dec
sub
stc
das
cmp
repz
pop
or
push
mov
in
(bad)
pop
es
and
(bad)
mov
mov
xor
jne
xor
and
retf
dec
push
in
and
ds
ret
aas
ja
shl
lea
or
rol
in
xor
cmp
inc
loop
xor
push
addr16
sbb
js
cmc
(bad)
fwait
shr
and
cwde
(bad)
cmp
test
(bad)
aas
pop
adc
pop
fimul
gs
rcl
ret
(bad)
test
jmp
push
sub
cli
test
loop
dec
jg
sahf
out
lahf
call
pop
neg
pop
shl
xor
xchg
mov
gs
add
stc
js
pop
in
mov
lds
mov
retf
dec
adc
rcr
adc
aas
mov
pop
sbb
pusha
icebp
lahf
mov
mov
icebp
mov
xor
push
pop
outs
mov
icebp
(bad)
ror
xchg
sbb
and
xchg
jbe
sbb
mov
xchg
cmp
or
mov
add
mov
test
enter
sub
cmp
sbb
imul
push
cs
sbb
jl
xor
push
js
scas
ja
in
dec
mov
jp
jecxz
pop
xchg
mov
loop
sbb
mov
inc
dec
stos
in
mov
push
add
xor
and
test
les
push
sbb
sub
test
pop
sbb
shr
jl
js
ret
je
mov
test
mov
int
test
js
repnz
ret
xlat
sub
cmps
in
in
in
and
push
(bad)
jmp
jbe
sub
jbe
cmc
(bad)
mov
inc
mov
push
mov
arpl
(bad)
bound
hlt
dec
sbb
mov
jecxz
imul
movs
fild
ret
call
mov
ror
lahf
mov
enter
push
and
sbb
nop
sbb
pop
lock
fidiv
mov
jmp
sbb
add
push
sub
jp
hlt
fimul
jo
in
or
push
push
xchg
inc
hlt
aas
or
es
daa
pop
pop
fidivr
mov
jbe
jmp
test
pushf
stc
gs
sub
icebp
jl
dec
iret
adc
and
adc
inc
lods
in
dec
ins
pusha
mov
aaa
push
cmp
cli
inc
imul
cmps
mov
inc
add
xlat
or
call
dec
out
test
dec
jo
sbb
or
dec
cmp
pop
mov
rcr
movs
cmps
xor
loope
mov
(bad)
push
ret
mov
jl
or
dec
es
xchg
xor
out
sub
jg
push
test
inc
sbb
out
jle
mov
mov
stos
lods
or
out
xchg
pusha
movs
mov
into
pushf
mov
dec
rol
sbb
movs
jae
shl
shr
fwait
hlt
daa
push
out
loope
retf
jmp
scas
xchg
in
cmps
lds
or
push
ret
fidiv
cmc
pop
xor
xchg
dec
xor
xor
es
leave
xor
xor
jg
stc
pushf
jge
std
add
dec
daa
mov
inc
repz
and
pop
mov
rcl
shl
test
inc
mov
in
adc
in
xor
imul
sub
dec
and
outs
push
or
and
icebp
lds
shl
sbb
lods
mov
mov
outs
push
sub
out
lock
push
xor
cmp
aaa
mov
mov
push
lea
in
xor
hlt
pop
xor
mov
cs
in
mov
pop
cmp
sti
and
mov
jle
dec
pop
fcomp
jl
jge
int3
xchg
mov
xor
out
repnz
mov
paddsw
dec
mov
outs
test
push
pushf
push
pop
lds
fistp
(bad)
and
xor
xor
(bad)
cmps
cmp
out
or
mov
add
ret
sbb
outs
cmp
das
pop
int
fs
dec
xchg
dec
cmp
mov
iret
inc
in
lea
je
aam
fs
bnd
inc
jae
sub
xchg
cmp
inc
data16
test
mov
shl
and
sub
das
mov
lods
scas
fidivr
sbb
sbb
mov
cs
dec
cmove
cmp
out
in
aas
xchg
fist
pop
std
call
jmp
push
rcl
jmp
mov
ds
cmp
popa
cmp
jp
xchg
aam
jl
lock
scas
rsm
rol
and
xchg
call
xchg
mov
sbb
pop
jp
push
sub
rcr
jge
pop
mov
out
cmps
mov
movs
mov
nop
dec
push
bnd
sbb
mov
sbb
lods
pop
push
es
out
sub
outs
ds
dec
in
sub
xchg
pop
mov
mov
or
push
repz
stos
cdq
cmp
rcr
xchg
push
pop
pop
mov
jno
mov
jle
ss
neg
outs
jge
inc
repz
outs
xchg
dec
jo
retf
pop
dec
in
imul
or
dec
aas
mov
and
xor
and
mov
popa
mov
jns
pop
fisttp
jne
mov
mov
add
mov
and
fcom
sbb
in
jge
jmp
mov
xor
mov
outs
stos
inc
aas
loop
lea
fsub
movs
jmp
add
xchg
mov
cmp
mov
push
clc
iret
push
arpl
cmp
jge
xor
pusha
fwait
pop
and
sbb
cmp
mov
mov
xor
push
xor
push
cmp
ja
arpl
mov
xor
lds
lea
in
pop
shr
fld1
push
cmps
in
mov
dec
mov
push
es
and
cmp
mov
xor
ror
out
or
test
adc
cmp
push
or
dec
jmp
aaa
jb
fild
jb
sti
xchg
inc
push
jecxz
dec
clc
cmp
loopne
out
add
shl
adc
mov
mov
pusha
rcl
shl
rcr
iret
(bad)
push
xchg
pop
rol
mov
ds
lock
sbb
arpl
fs
arpl
mov
dec
std
imul
pusha
popf
shr
xchg
or
retf
imul
and
cmps
inc
js
mov
mov
inc
mov
aad
rcr
sbb
in
popf
jecxz
or
add
cmps
movs
sbb
mov
inc
leave
jnp
ficom
das
das
xor
dec
sub
dec
nop
aam
mov
adc
ret
shr
(bad)
add
fimul
sti
jmp
push
jnp
std
add
clc
out
retf
mov
dec
mov
dec
cmp
or
aad
push
xchg
or
push
ror
mov
neg
mov
popa
push
pop
xor
and
out
add
in
dec
(bad)
mov
mov
loope
sbb
push
push
mov
inc
push
mov
ret
push
jp
cwde
fadd
clc
outs
add
icebp
push
out
add
lea
jg
(bad)
aas
cmp
mov
cmp
mov
loop
aad
xchg
pop
into
mov
sub
ret
push
and
push
rcl
lds
dec
aas
in
sar
cmp
or
out
bound
int3
mov
nop
jbe
pop
mov
movs
and
lea
jle
add
es
inc
es
out
sub
in
mov
add
aam
shl
jnp
aaa
(bad)
jne
mov
ins
ficomp
call
std
xlat
jno
and
pop
dec
das
push
rcr
jge
je
mov
aaa
imul
or
and
mov
mov
sub
js
pop
aaa
mov
jnp
sub
fs
mov
mov
test
xchg
dec
dec
mov
cld
(bad)
mov
ficom
dec
sar
std
ss
push
pop
or
std
pop
jecxz
dec
in
jg
jmp
stc
cli
sbb
jo
(bad)
xor
(bad)
(bad)
xchg
out
jmp
xor
adc
adc
test
push
xor
int3
xor
xlat
mov
ja
(bad)
pop
xor
adc
movs
sub
and
in
ret
shl
push
xor
cmp
cli
or
js
jo
mov
loop
cld
and
and
popf
std
mov
sbb
pusha
or
daa
push
mov
int
cld
push
mov
sbb
push
lods
jns
push
jbe
mov
jb
shl
sub
addr16
repz
gs
ror
xor
push
(bad)
clc
mov
cmps
lahf
add
sub
jecxz
sti
aad
pop
sub
das
push
sbb
stc
leave
jg
inc
cmps
(bad)
scas
mov
and
jge
mov
jmp
loopne
(bad)
sbb
xor
dec
sub
repnz
dec
adc
inc
les
xor
mov
arpl
dec
dec
cmovs
call
inc
ds
sub
rcr
sbb
je
xlat
mov
jno
add
mov
aam
test
outs
inc
xchg
push
cld
aas
dec
fstp
inc
aaa
xor
jno
pop
sbb
mov
popa
enter
in
sbb
sub
stos
mov
loopne
jae
sbb
les
push
dec
xchg
stc
lds
sbb
sub
js
test
push
daa
in
repz
icebp
(bad)
pusha
jg
fchs
test
cmp
mov
repnz
mov
cmp
jb
cmps
pop
es
loop
dec
pop
shr
inc
or
aam
aad
push
xchg
sbb
(bad)
and
fld
add
movs
and
sti
pop
loopne
xor
data16
or
test
push
or
jo
jb
jmp
js
mov
(bad)
mov
jmp
jno
dec
xor
in
(bad)
mov
es
add
mov
(bad)
in
pop
sub
out
in
add
xor
lds
out
mov
jmp
add
or
ds
sbb
inc
xchg
xor
mov
and
xchg
jnp
pop
push
cdq
cs
fs
test
xchg
outs
xchg
cmp
cld
push
fs
gs
xchg
add
mov
xchg
xor
adc
jbe
mov
scas
mov
pop
loop
pusha
data16
fld
call
pop
inc
pushf
xchg
mov
jne
mov
jns
push
mov
adc
iret
lea
add
or
repz
shr
mov
ds
(bad)
neg
sub
and
ror
cmp
call
xor
xchg
dec
enter
lea
jns
dec
mov
jmp
or
loope
push
in
jnp
sbb
test
push
sub
pusha
dec
les
std
sbb
rol
test
aam
sub
adc
add
sbb
test
in
sbb
out
sbb
and
fld
(bad)
lock
sbb
cld
pusha
sete
iret
pop
imul
mov
or
dec
cmp
lea
inc
stos
in
pushf
cmps
dec
jne
pop
xchg
test
inc
mov
cmp
into
cmps
mov
mov
dec
imul
add
xchg
loopne
adc
mov
xchg
stos
mov
shr
mov
push
clc
jmp
inc
mov
sbb
push
loope
jp
fbld
xchg
ds
pop
mov
call
xlat
(bad)
stc
cld
jg
aas
jae
add
cmp
cmp
popa
push
sbb
cmc
dec
sahf
ja
fdivp
mov
and
cmp
leave
cmc
int3
cs
mov
fdiv
mov
fwait
push
inc
sub
mov
inc
adc
popf
jns
mov
outs
inc
pop
push
push
test
fs
fld
aad
push
fs
fcom
shl
pop
arpl
and
fcom
out
loopne
aaa
(bad)
hlt
mov
rcr
fisub
sub
aas
and
mov
add
adc
mov
pop
sub
push
shl
mov
dec
and
sbb
aad
dec
shl
dec
push
mov
add
xchg
jbe
add
or
and
sbb
and
(bad)
sar
repnz
adc
or
fiadd
adc
sbb
push
dec
mov
jl
sub
adc
pop
test
fimul
push
cmp
jle
add
adc
out
pop
fwait
jmp
rdmsr
inc
and
push
adc
jmp
addr16
push
out
mov
daa
ds
jmp
mov
icebp
jecxz
pop
sub
inc
xchg
les
aad
pop
dec
out
dec
inc
fwait
jae
xchg
das
push
arpl
aam
dec
mov
cmps
pusha
or
cmp
and
jbe
pop
xchg
cwde
sahf
sub
or
shl
push
pop
jecxz
push
popa
mov
pop
int3
mov
xor
lods
push
pop
adc
sub
pop
ror
add
adc
retf
push
shr
add
cwde
fld
add
push
stc
ror
cld
push
mov
jecxz
popa
out
jo
imul
mov
push
adc
pop
push
popa
mov
bound
jno
push
das
xor
addr16
pop
adc
jb
pop
cs
jg
mov
sub
lea
popf
repnz
and
cmps
sbb
arpl
inc
mov
xor
das
dec
inc
mov
in
pop
mov
in
adc
jl
lock
mov
test
out
add
ins
rcl
addr16
cmp
ja
mov
ds
xchg
dec
stos
mov
xchg
aad
dec
mov
cmp
pop
inc
add
push
test
and
int3
fwait
sbb
retf
push
inc
popa
sti
add
mov
ins
test
lahf
lahf
inc
xchg
sbb
cmps
dec
movs
add
jg
lahf
jl
fs
or
or
call
mov
ja
sbb
enter
mov
inc
out
daa
hlt
jle
repnz
mov
dec
sub
hlt
sar
pusha
das
mov
pop
lods
retf
(bad)
push
imul
in
mov
push
or
and
push
inc
inc
jmp
ja
xchg
inc
jae
loope
sbb
jecxz
cmc
cmp
mov
ja
pusha
lds
shl
sar
outs
les
fld
fistp
mov
bound
mov
mov
mov
adc
cmp
cmp
je
mov
xchg
sar
scas
sub
inc
leave
xor
scas
xchg
cmovae
jle
adc
mov
dec
add
xor
mov
jmp
fcmovu
pusha
xchg
(bad)
cli
and
cli
cmp
push
addr16
push
(bad)
mov
pop
mov
adc
std
(bad)
dec
icebp
xchg
push
aad
inc
sub
push
sub
imul
popa
or
xchg
inc
icebp
sti
les
mov
jno
(bad)
in
xchg
das
jp
push
int3
lods
mov
adc
mov
jb
mov
add
xor
lods
mov
sbb
imul
lds
das
jp
or
in
fst
inc
pop
mov
punpckldq
fiadd
ins
bound
adc
mov
xor
or
imul
sbb
mov
mov
sahf
loope
sbb
and
loop
or
mov
inc
sbb
rcl
neg
push
jmp
cmp
jmp
jo
jno
lock
(bad)
push
shl
inc
sbb
mov
(bad)
mov
cmps
xchg
aaa
push
mov
sbb
in
xor
jg
std
(bad)
in
out
in
jne
cwde
shl
sub
shl
call
pop
punpckhdq
fsub
sbb
jns
mov
pop
xor
mov
call
out
ret
(bad)
ins
ins
fnstenv
fs
bound
daa
mov
outs
mov
jmp
fld
mov
pop
inc
ds
and
push
out
xchg
int
jl
outs
push
dec
mov
or
xchg
xor
mov
pushf
fs
xchg
add
xlat
in
daa
jo
das
push
xor
je
ja
pusha
in
scas
lahf
mov
mov
mov
sahf
rcr
ins
cmp
adc
in
mov
call
jo
inc
mov
arpl
sbb
(bad)
in
cmp
arpl
mov
pushf
bound
or
ret
add
inc
adc
out
pop
xchg
cmp
int
push
sub
cmps
mov
stos
iret
mov
or
mov
sbb
jns
sub
or
repnz
cmc
or
inc
repnz
pop
cmps
xchg
adc
retf
push
mov
cmp
iret
xchg
lds
mov
test
mov
sar
addr16
add
jnp
rcl
mov
inc
in
jge
jbe
adc
imul
push
or
enter
lahf
push
movs
adc
call
fcom
fadd
mov
(bad)
inc
fisttp
sbb
push
je
sub
sub
xor
cld
imul
pop
or
jl
test
int3
lds
pop
icebp
retf
into
cmp
pushf
xor
mov
mov
jge
lahf
test
dec
push
and
pop
retf
mov
lds
loope
into
aam
cdq
xchg
fwait
jnp
dec
cs
or
test
inc
leave
push
inc
jmp
cld
add
test
(bad)
mov
adc
dec
xor
(bad)
jmp
xor
xchg
xchg
aas
xor
push
shl
dec
lods
or
jl
in
inc
mov
test
pop
mov
cdq
nop
jbe
loopne
test
in
addr16
push
sar
push
jl
popf
pop
lods
mov
push
jno
sbb
jmp
jae
jp
iret
ja
ins
aaa
pop
xor
(bad)
mov
test
fmul
mov
or
cmps
imul
ja
das
outs
test
call
pop
push
adc
sbb
pusha
pop
jg
das
add
scas
aam
inc
call
push
jecxz
pop
xchg
mov
call
ins
lgs
enter
test
sbb
movs
je
neg
add
xchg
das
icebp
cmp
shl
adc
xchg
cmp
cli
add
sahf
jp
pop
jnp
and
loopne
in
(bad)
xchg
dec
cmp
pmaddwd
std
sub
dec
xchg
xchg
push
and
outs
add
sub
das
sti
pop
sbb
stos
call
imul
add
sbb
pop
repnz
fidivr
test
adc
icebp
inc
mov
call
xlat
mov
push
jb
das
into
or
cli
mov
jmp
jg
dec
cmps
stc
ins
lea
jns
cmc
add
xor
jbe
dec
imul
sbb
jmp
test
pushf
or
inc
sub
test
xchg
repnz
pavgw
bound
daa
adc
imul
inc
cli
xchg
and
movs
aas
pop
adc
and
scas
jns
call
add
dec
dec
cmp
rol
and
pop
inc
pop
jmp
rol
pop
inc
fwait
ss
and
add
stos
xchg
aas
sub
xor
mov
icebp
in
or
jmp
xor
xor
ror
popa
push
pop
(bad)
mov
cmp
fs
mov
in
xchg
xchg
sbb
ror
mov
jp
pop
mov
mov
sti
add
pop
(bad)
cmp
stos
jo
mov
sbb
sbb
cmp
sbb
push
sub
mov
mov
push
adc
jmp
xor
or
push
inc
sbb
fsubr
cmps
out
ja
lock
xchg
hlt
out
(bad)
rcr
in
inc
or
cwde
pushf
add
ret
jge
repnz
cmps
or
in
shl
fld
mov
mov
pop
xchg
gs
and
xchg
mov
mov
test
cmp
repz
dec
mov
push
dec
and
mov
mov
inc
ret
xchg
stc
mov
or
pusha
xchg
test
popf
jl
repz
fnstcw
pop
cmp
pop
mov
jae
(bad)
stos
mov
stos
jb
int3
sbb
aad
ret
jno
clc
sub
sub
aam
xor
xchg
mov
or
les
repz
pop
xor
add
sbb
push
out
xchg
and
sbb
inc
jmp
jl
ins
loope
sbb
mov
mov
pop
add
mov
mov
adc
ds
push
push
loopne
fmul
retf
jb
(bad)
stos
enter
cmp
and
popa
shr
out
pop
mov
push
hlt
pop
outs
dec
pop
pushf
and
ins
enter
rol
inc
jg
xchg
mov
xchg
call
add
mov
(bad)
cli
inc
dec
out
pop
adc
repnz
ja
pop
xor
jge
jp
jle
jae
pushf
les
sbb
test
(bad)
adc
inc
sbb
pushf
mov
test
ds
jmp
call
xor
cli
ds
test
fiadd
push
xchg
xchg
push
neg
or
xchg
out
test
adc
pop
xchg
in
pop
retf
xchg
fisubr
jns
inc
add
iret
push
xlat
or
jbe
sti
sbb
sub
xor
inc
test
mov
xor
add
sbb
push
movs
pop
pop
mov
arpl
ins
cmps
dec
clc
mov
fwait
pop
inc
pop
rol
adc
sti
es
cmovne
xchg
sub
lock
fsub
sbb
scas
sahf
pop
(bad)
in
xor
push
mov
pop
mov
mov
cwde
call
ret
xor
imul
jns
clc
jle
into
hlt
rol
fdiv
fisub
xlat
xor
pop
dec
mul
and
adc
add
out
fisub
and
mov
in
or
cwde
pop
aad
je
or
enter
aas
call
jmp
sti
sbb
shr
repz
xlat
das
int
imul
push
sub
sbb
sub
int3
mov
or
pop
call
push
jo
push
lock
cmps
cli
add
std
and
lock
lds
in
lods
dec
imul
icebp
ja
pop
mov
lds
cmps
or
inc
out
or
bound
mov
jae
ficom
shr
imul
rcl
dec
ror
ror
pop
out
mov
pushf
arpl
inc
scas
sub
inc
mov
add
xchg
or
and
call
adc
loope
xchg
enter
jno
push
xchg
sbb
sub
test
or
ss
loop
or
xchg
fist
repz
dec
jg
or
xchg
jmp
inc
test
scas
jl
mov
shl
stos
xchg
cmp
sub
pop
sub
pushf
sti
sub
push
popf
mov
stos
adc
inc
mov
fwait
inc
push
icebp
iret
imul
mov
arpl
(bad)
sub
xchg
cdq
inc
dec
jae
mov
sar
mov
pop
fcom
loopne
jle
mov
fst
(bad)
push
jmp
push
xlat
scas
mov
jmp
pop
xor
cmc
test
or
mov
nop
mov
fwait
data16
dec
xchg
add
sbb
pop
rcr
in
shr
in
mov
push
xchg
fdivr
retf
xor
push
jle
jle
cmc
xchg
sbb
adc
push
ss
inc
addr16
push
or
adc
je
loop
lds
add
dec
sbb
loop
dec
or
adc
mov
or
movs
dec
pop
ins
imul
lock
xchg
jmp
shr
mov
mov
mov
mov
out
pop
sbb
jbe
xchg
test
add
dec
shl
dec
lahf
dec
fwait
in
xlat
loope
ins
sahf
xchg
and
fstp
adc
cmc
cmc
aad
jg
stc
lock
popa
fmul
imul
mov
xor
cs
mov
xchg
into
das
adc
fisub
push
leave
das
outs
mov
dec
jp
fsubr
mov
mov
push
aad
cli
cmp
mov
mov
sub
add
jo
dec
mov
lods
je
rep
addr16
and
outs
jmp
(bad)
mov
call
inc
jo
les
jecxz
or
sub
push
inc
jle
outs
ss
pop
push
dec
(bad)
ins
or
sbb
adc
div
cli
pop
add
adc
xchg
loope
xchg
test
jb
call
mov
mov
fmul
add
pop
xor
inc
(bad)
int
mov
stos
xchg
in
hlt
(bad)
push
stos
jns
xchg
(bad)
jns
mov
xor
mov
add
das
lahf
mov
bound
push
xor
inc
(bad)
dec
mov
adc
xor
push
retf
sub
pop
icebp
pop
test
cs
push
mov
cld
mov
daa
rep
ss
mov
sbb
sub
addr16
cli
xor
fwait
retf
aas
cmp
data16
iret
dec
pop
ins
pop
push
xor
mov
test
and
out
xchg
bound
push
mov
mov
out
out
lods
outs
mov
add
xlat
div
outs
in
push
in
jp
pop
loopne
sub
enter
mov
adc
mov
jo
inc
push
mov
daa
iret
or
sub
cmp
xor
mov
xor
sbb
retf
mov
fiadd
stos
pop
xlat
outs
ds
pusha
arpl
mov
xchg
ins
inc
adc
addr16
int
mov
clc
shl
cmc
pusha
fld
and
mov
and
pushf
mov
or
push
add
fisubr
cmp
inc
mov
enter
(bad)
(bad)
lahf
cmp
cmp
sbb
and
lock
cmps
call
xor
mov
imul
jmp
addr16
mov
sbb
pop
pop
pop
jne
dec
cmp
rol
js
pop
cwde
and
outs
outs
sahf
in
or
dec
jb
arpl
pop
adc
push
xchg
pop
fisub
std
bound
xlat
mov
shl
inc
ficom
xchg
pop
pop
fsub
jne
push
ret
les
in
push
add
lods
pop
mov
add
mov
xchg
mov
pusha
xchg
add
mov
ret
add
nop
xor
mov
lods
sub
test
add
dec
retf
test
cmp
data16
or
inc
(bad)
call
es
xor
pop
xor
jbe
in
xchg
jbe
mov
inc
(bad)
sar
mov
dec
mov
adc
mul
jp
jae
std
sbb
fwait
je
mov
xor
push
mov
lods
imul
add
push
inc
shl
xor
retf
jl
inc
pop
daa
push
dec
repnz
(bad)
jb
lods
nop
jno
loop
add
and
lock
sub
jbe
cld
call
in
ins
pop
cmp
inc
dec
push
sub
mov
pushf
(bad)
and
out
cmps
adc
(bad)
jmp
and
jne
in
lods
adc
movs
mov
aas
aaa
mov
mov
mov
mov
mov
cmp
push
movs
jmp
mov
mov
adc
or
cmp
call
mov
pop
inc
dec
cmp
cmp
adc
and
pop
(bad)
sub
push
lods
mov
imul
push
cld
adc
or
adc
call
imul
inc
sub
add
test
push
pop
fsubp
mov
(bad)
jle
dec
xchg
pop
lods
jl
pop
daa
ja
adc
mov
or
dec
es
pop
and
jne
popf
repz
push
xchg
xchg
imul
sahf
sbb
pop
imul
jp
out
pop
out
and
js
cmp
xor
aaa
in
xor
outs
mov
inc
add
loop
jnp
jl
xor
(bad)
xor
add
cld
sub
add
inc
mov
rol
xchg
adc
stc
ss
and
jbe
into
push
jl
pop
dec
mov
sbb
push
sub
sar
shl
mov
in
shl
out
push
fsub
imul
or
iret
xchg
outs
jnp
jns
dec
ins
ss
retf
aaa
es
push
pop
int
or
add
out
add
js
sar
leave
aas
cmp
mov
add
out
pusha
cli
inc
dec
(bad)
pop
(bad)
sar
jo
mov
adc
iret
and
hlt
inc
sar
dec
pop
dec
add
jo
lods
retf
mov
shl
in
add
inc
sbb
pop
jecxz
test
mov
stos
mov
jl
dec
jmp
rcl
adc
or
cmps
fidivr
arpl
jb
ret
xchg
fist
aaa
imul
cmp
js
mov
pop
retf
dec
and
test
rol
pop
outs
not
xor
adc
cmp
shr
arpl
in
scas
mov
mov
mov
aaa
fisubr
aaa
mov
ss
xchg
shl
test
inc
dec
mov
idiv
popa
mov
jns
cli
and
jae
or
inc
div
inc
icebp
push
loope
mov
add
push
fcomip
out
or
(bad)
and
xchg
out
mov
mov
hlt
jnp
adc
push
or
or
test
out
cs
sbb
cwde
mov
jge
cmps
xchg
dec
cmp
inc
test
iret
popf
or
inc
mov
mov
mov
pop
mov
and
adc
pop
lods
lahf
das
xchg
aam
sti
movs
jle
pop
int
pop
fwait
and
ins
sub
jmp
pop
mov
ret
sbb
std
push
or
cs
push
movs
movs
push
xchg
push
ins
pop
mov
mov
mov
bound
in
pop
xor
mov
pop
cmp
xchg
and
fistp
push
inc
rcl
outs
mul
inc
add
cmp
in
popa
lods
sub
pop
pand
pop
jbe
dec
xor
pushf
xchg
rcl
cdq
mov
push
jl
fwait
adc
out
inc
sbb
les
jns
inc
dec
ins
push
rcr
jg
fnstcw
or
pushf
movs
sub
adc
mov
ins
scas
adc
mov
int3
das
push
(bad)
fsubp
xchg
clc
seto
fdiv
jo
and
movs
test
aam
and
xlat
xchg
pop
or
add
mov
or
adc
sar
fdivr
pusha
pop
xor
mov
jbe
mov
out
pop
or
leave
movs
outs
xlat
or
fsubr
mov
pop
adc
cwde
cwde
pop
xchg
xlat
jg
sbb
scas
shr
dec
mov
aam
loope
xlat
mov
addr16
mov
jnp
je
cli
push
cli
loope
and
out
cmp
imul
ss
ins
retf
iret
mov
add
add
mov
jecxz
and
jmp
ret
neg
lods
jg
leave
(bad)
dec
xor
pop
cmovbe
bound
aad
fnstcw
mov
mov
scas
inc
mov
icebp
imul
(bad)
test
hlt
xchg
xlat
add
iret
ret
xor
popa
pop
mov
loopne
test
dec
enter
pop
enter
into
nop
dec
cmp
or
mov
(bad)
fxch
fdivr
stos
rcr
and
adc
outs
sub
in
add
and
(bad)
xor
dec
cdq
inc
and
test
cmc
add
or
out
test
mov
mov
jp
dec
inc
test
retf
sub
or
icebp
aam
cmp
test
lods
adc
test
mov
xor
loopne
adc
mov
add
sbb
jae
pop
sbb
push
dec
xchg
pop
push
mov
ja
pop
loope
cmp
mov
xchg
mov
or
or
in
aaa
mov
das
pop
push
rcl
xor
pop
xlat
mov
in
adc
push
and
popf
(bad)
in
xor
shr
add
icebp
(bad)
out
test
mov
xor
cli
leave
repz
mov
mov
inc
xor
loop
sbb
cmp
sbb
mov
ficom
mov
in
and
sbb
sbb
add
push
jb
and
add
push
fwait
jb
mov
xor
repz
push
scas
mov
xor
mov
inc
daa
test
cmp
(bad)
mov
(bad)
push
ret
aam
call
inc
cmp
imul
jle
mov
mov
sahf
lock
mov
and
stos
in
in
adc
shl
call
jb
fxtract
add
shl
mov
mov
mov
mov
xchg
jecxz
or
enter
mov
daa
dec
add
aaa
pop
xchg
inc
aaa
ss
pusha
sahf
adc
adc
sbb
push
in
inc
add
aaa
test
add
retf
xchg
movs
pop
test
mov
in
imul
retf
(bad)
dec
push
cmp
les
mov
push
push
add
adc
outs
das
popf
push
xchg
and
not
and
(bad)
xchg
sbb
inc
mov
or
enter
or
add
(bad)
mov
jns
sbb
or
sub
ret
push
or
scas
lods
ret
cmps
mov
gs
cmp
lock
sub
adc
repz
xor
shl
fbstp
hlt
aaa
retf
test
push
cli
loope
and
(bad)
out
lds
mov
aam
add
jnp
pop
jb
cli
pop
adc
mov
test
ins
into
or
loopne
or
dec
jle
popa
retf
xlat
jmp
jae
push
jp
in
stc
scas
mov
div
aam
jbe
int
jle
pushf
mov
test
loopne
xchg
ja
ret
push
ja
and
out
xchg
out
dec
jns
mov
movs
xor
int3
mov
fadd
xor
pop
cmp
push
pop
je
and
punpckhbw
cld
out
xlat
xchg
xlat
jae
ficomp
loopne
push
jnp
lds
ins
ins
sbb
jae
stos
mov
ins
cmp
lock
cmp
dec
mov
cmps
test
cmp
scas
dec
cmp
push
stos
(bad)
int3
sbb
not
loopne
(bad)
sub
in
pop
and
lods
dec
bound
popa
mov
aad
sbb
mov
xchg
test
jno
stos
sahf
xchg
mov
ret
loope
mov
adc
jbe
daa
ret
xor
pop
add
cmp
mov
mov
mov
push
dec
out
pop
cmp
push
inc
pop
pop
lahf
inc
jo
retf
(bad)
adc
addr16
nop
shl
xchg
xor
leave
enter
push
std
adc
cmp
mov
jp
mov
imul
rcl
(bad)
cwde
mov
pop
inc
or
inc
test
les
cwde
retf
sbb
sbb
test
or
pop
das
rcr
push
adc
adc
std
leave
push
(bad)
sbb
xor
stos
sub
push
push
test
push
test
cmp
into
cdq
fmul
xor
imul
ins
xor
mov
repz
loope
push
popf
jge
out
mov
inc
imul
push
lods
xor
aad
cmp
pop
push
std
movs
cwde
mov
shr
jno
outs
push
mov
(bad)
adc
lods
push
inc
mov
adc
xchg
add
sbb
mov
dec
hlt
(bad)
and
jbe
push
test
in
mov
pusha
das
xchg
jne
xlat
xchg
cs
sub
(bad)
retf
mov
adc
inc
icebp
(bad)
sbb
enter
int3
fidiv
(bad)
adc
pop
lahf
les
shl
pop
pop
mov
xchg
dec
pop
pop
jle
add
add
jle
xor
inc
push
add
jne
ficom
cmps
or
sub
daa
test
imul
movlhps
shl
lea
sahf
enter
retf
mov
ror
pop
jnp
adc
call
call
inc
cmp
fcomp
jb
mov
jp
fadd
xor
in
inc
xor
retf
out
inc
mov
js
mov
pushf
sub
inc
push
ja
xchg
movs
push
add
fild
cli
add
fcmove
mov
and
fnsave
daa
jl
jecxz
jns
or
cmp
mov
push
lea
pop
mov
ja
mov
out
mov
adc
lahf
in
mov
inc
fstp
(bad)
popa
jo
call
pop
fiadd
xchg
arpl
sub
into
clc
lods
fwait
add
push
jmp
inc
or
pop
enter
out
jmp
repz
add
dec
cmps
and
xor
push
mov
mov
and
sub
cld
repz
adc
add
movs
fdiv
adc
out
sbb
push
or
sub
dec
jl
push
enter
dec
and
jge
into
add
lods
cli
aaa
pop
pop
(bad)
xchg
ret
mov
aas
push
push
div
push
ja
jbe
fldcw
(bad)
test
fist
xor
pop
dec
pop
xchg
mov
mov
hlt
jmp
mov
mov
pop
push
mov
repnz
cld
cmp
cmps
push
dec
mov
cmp
mov
clc
inc
fstp
movs
mov
mov
adc
jne
cwde
push
outs
jnp
push
cmps
gs
fsub
push
mov
std
pop
(bad)
cmp
inc
js
ins
mov
aas
nop
rcl
(bad)
int3
stos
push
xchg
js
jmp
add
scas
mov
stos
xchg
lods
pop
(bad)
fisub
retf
mov
es
fs
push
mov
or
stos
loope
mov
pop
xor
sahf
jmp
ret
dec
pop
aam
idiv
lock
stos
cmp
aas
push
es
xor
sbb
(bad)
add
or
inc
sub
inc
xor
pop
(bad)
sub
retf
int3
pop
out
inc
imul
aam
ja
add
or
xor
xor
lea
leave
add
dec
or
call
and
enter
push
push
xchg
and
push
add
inc
int
int
adc
jbe
test
cs
push
xchg
push
mul
lods
ja
sbb
fidivr
sar
je
mov
push
push
jns
je
stos
dec
mov
or
(bad)
js
test
dec
mov
popa
lods
xchg
pop
push
je
imul
cld
retf
xchg
enter
mov
and
cmp
jnp
pusha
cmps
cmp
sar
or
pop
adc
mov
sub
dec
push
js
aas
sti
dec
push
aaa
mov
idiv
aad
punpckhwd
jl
sar
aaa
sti
jp
or
mov
leave
retf
dec
test
out
bound
imul
inc
int
fadd
inc
adc
fstp
fisubr
cmc
push
dec
or
jns
push
loopne
mov
jp
pop
dec
sbb
push
dec
push
xchg
movs
shr
fdivr
movs
jecxz
and
mov
xlat
(bad)
cs
(bad)
call
sahf
dec
bnd
xor
std
pop
mov
inc
jb
popa
push
add
test
std
dec
or
daa
jp
fnsave
or
fmul
inc
not
aam
cmps
push
dec
sbb
push
jle
push
stos
jmp
mov
push
add
call
pop
push
xor
dec
cli
mov
or
add
add
pop
jp
shl
js
out
scas
faddp
push
mov
sub
fdivr
mov
cmp
(bad)
mov
push
mov
sbb
jg
mov
pop
jmp
sub
fadd
sar
pop
and
or
mov
je
add
pop
les
push
push
sub
pop
mov
lea
jge
inc
dec
sub
push
repz
and
fld
retf
fwait
lds
xchg
hlt
in
pop
mov
lahf
(bad)
icebp
fdivr
retf
mov
push
(bad)
adc
mov
mov
or
add
mov
daa
sub
pop
jns
cmp
ret
ds
or
mov
mov
and
sahf
jne
sbb
or
add
outs
out
pushf
mov
mov
push
push
retf
aad
iret
inc
outs
mov
(bad)
into
neg
mov
inc
ins
ss
add
je
aaa
push
test
loop
nop
out
fild
nop
lods
inc
lea
xor
outs
xchg
push
js
outs
mov
fcomi
mov
sub
pushf
push
nop
adc
leave
mov
(bad)
stc
inc
mov
lea
fbld
iret
ret
dec
sub
pushf
out
pop
test
cmp
imul
xor
mov
call
(bad)
xor
lock
loop
stos
aas
je
mov
add
inc
xor
jp
inc
pop
adc
ss
mov
addr16
cmp
leave
in
xchg
xor
mov
scas
cld
pop
clc
mov
neg
jge
mov
cmp
xlat
adc
rcr
cmp
pop
cli
shr
push
mov
jle
jne
call
sub
out
call
in
test
mov
out
add
dec
pop
(bad)
(bad)
ins
jl
jmp
push
xchg
jns
dec
xor
call
sub
mov
js
inc
leave
mov
xchg
in
xchg
sar
sbb
and
cmp
mov
scas
jecxz
repz
dec
xchg
dec
imul
dec
inc
jne
ret
pop
sahf
cmc
pop
movs
sbb
adc
xchg
fimul
pop
fdivr
out
inc
sahf
adc
loope
test
adc
lea
gs
and
repz
loop
jno
test
pusha
gs
(bad)
mov
push
movs
jae
push
(bad)
into
jae
and
adc
pop
ret
pushf
xchg
or
add
xor
or
clc
inc
inc
ja
pop
sbb
cmp
(bad)
daa
and
cmps
(bad)
data16
jbe
repnz
stos
ins
mov
jb
mov
xor
push
and
pop
push
jne
xor
pusha
pusha
jmp
inc
add
dec
xor
jae
mov
enter
inc
test
out
jge
jmp
pushf
test
aam
xlat
adc
cs
sbb
mov
(bad)
fcmovnu
xor
out
xor
popa
movs
or
lahf
jo
ins
or
or
clc
or
xchg
adc
xchg
retf
sbb
push
adc
mov
popf
sti
sar
xchg
xchg
push
dec
mov
jecxz
xor
repz
lahf
inc
div
std
or
xor
std
push
call
inc
xchg
loopne
mov
xor
sbb
add
into
in
cmp
dec
call
xchg
loope
xor
das
cmp
pop
in
push
push
cmp
dec
push
mov
jge
push
mov
(bad)
sub
sub
test
mov
and
dec
add
lock
mov
shl
arpl
pop
pop
adc
jmp
inc
(bad)
dec
ror
pop
data16
sub
jmp
ins
sbb
xor
pusha
int
out
cmp
imul
mov
addr16
adc
pop
dec
cmp
and
pop
xor
addr16
jo
push
jne
pop
jmp
xchg
dec
jns
push
cli
pop
mov
mov
inc
(bad)
int3
pop
pop
cmp
pushf
adc
mov
std
inc
mov
(bad)
(bad)
out
(bad)
mov
push
mov
ret
sahf
in
add
mov
sbb
xchg
ins
repz
popa
out
aam
(bad)
out
sbb
mov
jl
xchg
int
xchg
fisttp
repnz
rcr
and
lahf
inc
movq
inc
loope
push
retf
out
cmp
mov
(bad)
cmp
dec
and
or
stos
scas
add
and
push
mov
xchg
or
(bad)
das
inc
call
and
push
adc
out
cmp
loop
fild
dec
loope
xor
cmp
xchg
pusha
xchg
inc
mov
sub
gs
sub
fistp
push
daa
sar
dec
lahf
dec
clc
movs
add
aad
dec
rcl
mov
fsubp
iret
adc
jbe
arpl
dec
fsub
mov
test
call
add
add
or
adc
fs
aas
mov
shl
or
wbinvd
push
mov
pop
int3
fisubr
gs
bound
sbb
jg
cmc
or
dec
ror
jo
sub
fcomp
sub
or
push
ja
(bad)
push
mov
cmp
movs
mov
mov
bswap
mov
dec
jo
push
int3
cmp
je
and
outs
push
cdq
aam
mov
in
xchg
jp
and
into
inc
adc
jb
xchg
jns
pop
and
sbb
mov
fsub
fwait
or
popf
leave
dec
(bad)
xor
fimul
shl
jl
cld
lea
inc
jp
sub
sub
mov
mov
sbb
pop
call
mov
xor
iret
mov
sub
ficom
call
fucom
cs
mov
sbb
jle
ret
movs
ret
dec
repz
push
mov
iret
xchg
test
pop
jge
ins
xor
ds
in
and
fnsave
sub
cmp
aad
pop
inc
nop
aam
inc
inc
xchg
xchg
sbb
mov
test
cli
ins
repnz
dec
mov
add
dec
loope
push
imul
add
push
(bad)
sub
mov
xor
fwait
movs
ror
jg
sbb
mov
add
nop
jmp
addr16
or
stos
mov
jmp
jae
mov
mov
sbb
jmp
out
(bad)
mov
popf
cmp
xor
in
pop
mov
mov
sub
movs
imul
out
test
shr
shl
pop
(bad)
adc
push
in
mov
(bad)
pxor
loop
popa
leave
and
retf
cmp
sbb
inc
push
dec
cmps
sub
mov
cmp
inc
in
dec
dec
jmp
pop
xchg
shr
sti
add
js
mov
sbb
retf
mov
lahf
adc
(bad)
loope
jmp
fdiv
sbb
daa
mov
daa
mov
or
sub
pop
into
cmps
mov
sub
scas
cdq
sti
fidiv
mov
jmp
and
xlat
add
add
cmp
lods
or
fdivr
(bad)
xchg
push
retf
mov
jbe
mov
inc
mov
leave
push
test
pusha
jmp
adc
sbb
push
mov
add
int3
jo
rcl
test
push
and
or
jne
mov
adc
adc
ud0
xor
mov
(bad)
xor
jmp
mov
sub
sub
cmp
mov
mov
rcr
sbb
out
not
sub
jle
aam
ss
and
repz
mov
adc
fdivr
sti
aam
sub
gs
rol
inc
mov
loopne
repz
mov
or
retf
mov
(bad)
sub
popf
pop
ds
adc
mov
or
gs
mov
into
mov
xor
imul
push
sbb
pop
mov
(bad)
das
fidivr
dec
jmp
or
dec
add
xchg
call
xor
pop
pop
mov
adc
fistp
sub
daa
data16
sti
mov
in
push
sub
pop
cmp
and
js
jo
sub
or
(bad)
mov
and
sbb
popf
into
daa
sbb
iret
xchg
push
scas
adc
adc
jmp
sbb
pop
adc
outs
loop
jl
cli
ficomp
mov
dec
leave
jnp
sbb
fmulp
jnp
mov
shl
jno
(bad)
(bad)
sub
outs
inc
mov
jne
(bad)
sar
add
add
lock
mov
imul
sub
push
lods
lahf
sub
aad
out
jo
push
jns
adc
xchg
mov
test
sub
add
inc
mov
mov
inc
mov
mul
shl
mov
mov
dec
sub
pop
outs
adc
jle
xor
dec
mov
and
pop
mov
ficomp
xchg
or
mov
aam
sahf
fidivr
adc
jecxz
xchg
(bad)
and
cmp
clc
out
push
std
push
out
push
jl
loopne
scas
mov
addr16
int3
sub
pop
call
shr
sbb
sbb
add
inc
je
jnp
retf
jno
lods
adc
mov
scas
xchg
xchg
jp
aad
xchg
mov
push
jle
fstp
pop
movhps
ds
bound
xchg
dec
mov
pop
push
arpl
mov
out
push
mov
pop
sub
das
jns
clc
and
xor
cmp
and
adc
aaa
repz
into
stos
fcomp
push
std
pop
ss
test
mov
dec
(bad)
mov
(bad)
pop
prefetch
sti
gs
bound
shl
pushf
or
hlt
push
xchg
cmps
push
ja
jg
and
(bad)
imul
sbb
ss
mov
mov
xchg
(bad)
ja
arpl
fisub
or
and
cld
in
sahf
(bad)
jle
lahf
pop
xchg
pop
xlat
xor
ja
aad
inc
cs
scas
and
sar
push
jns
or
mov
cdq
test
inc
dec
aam
jo
mov
jge
in
fdiv
(bad)
push
(bad)
movs
std
lahf
add
test
mov
loope
pop
les
test
dec
mul
push
ss
js
lods
loopne
pushf
(bad)
call
ds
add
mov
push
xor
sub
or
push
lods
adc
stos
xor
enter
jl
in
add
(bad)
std
jne
jge
dec
fwait
(bad)
xor
adc
stos
clc
sahf
mov
js
dec
push
cdq
ins
inc
out
test
fld
inc
pop
add
jl
cmp
adc
push
push
fucomi
mov
mov
sub
(bad)
pop
cmp
add
sub
or
jo
into
pop
mov
jns
outs
cwde
stos
xor
es
mov
xchg
fdivr
mov
jmp
adc
lahf
mov
call
or
dec
ret
scas
in
(bad)
nop
stos
xor
ret
mov
sysexit
fidiv
inc
xlat
out
adc
int3
btc
lock
sub
mov
xchg
add
loope
jmp
sahf
stc
sub
mov
ins
and
lods
jp
imul
push
fwait
push
ret
xor
mov
iret
call
xor
xor
add
push
inc
loopne
push
je
adc
dec
cmps
(bad)
push
pop
dec
ja
nop
fs
ja
adc
push
inc
pop
and
mov
mov
mov
fnstsw
arpl
ss
pop
mov
dec
pop
mov
and
lds
popf
push
push
mov
test
mov
pop
xchg
mov
mov
mov
xchg
cli
xchg
xchg
sub
(bad)
int
sbb
push
icebp
mov
inc
mov
push
cmp
inc
xchg
sub
pop
dec
xchg
mov
jno
icebp
xor
jne
(bad)
ins
fld
clc
inc
inc
cmp
and
ss
fist
or
int
push
and
(bad)
mov
sbb
pop
cmp
jnp
mov
ins
dec
cmp
push
pusha
jle
push
(bad)
jmp
jle
sbb
ds
xor
dec
cmp
mov
cmp
(bad)
and
pop
inc
fwait
into
mov
retf
cmp
adc
dec
cmp
mov
cld
ins
clc
cmps
cmps
je
lods
daa
mov
jns
push
cwde
jl
jecxz
mov
jmp
call
sbb
or
(bad)
jmpw
inc
jnp
pop
push
jno
mov
sar
inc
and
popa
mov
test
jne
inc
push
push
inc
pop
scas
xor
xchg
mov
loop
adc
inc
sub
outs
pop
(bad)
shl
mov
sbb
aad
jmp
shl
out
cld
cmp
mov
fbld
and
sbb
adc
mov
outs
or
jle
mov
push
aad
int
sbb
xchg
mov
mov
mov
mov
jmp
adc
mov
loop
rcr
(bad)
movs
sbb
out
cld
repnz
add
dec
lea
aad
sbb
scas
push
das
pusha
retf
stos
test
sahf
push
jg
int3
adc
add
popa
pop
sbb
(bad)
scas
(bad)
xchg
fisttp
test
rcl
fdivp
rcr
xchg
pop
test
mov
js
adc
in
dec
cld
(bad)
xchg
not
adc
loope
cdq
fistp
(bad)
or
std
stc
dec
mov
or
cmps
pop
or
int
sar
sti
nop
or
xor
or
std
sub
pop
fnstsw
gs
inc
xchg
xlat
push
pop
ss
sub
push
mov
jo
ins
aam
cdq
stc
sbb
cmp
fistp
push
imul
retf
jp
test
add
mov
test
jge
inc
mov
scas
loope
stos
ss
sub
sti
or
xchg
sbb
cli
test
rol
daa
cld
sbb
jmp
mov
ret
sbb
or
sar
jae
push
div
add
push
stos
mov
mov
and
mov
inc
xlat
mov
or
mov
lahf
idiv
sahf
pusha
cmp
push
mov
and
mov
retf
mov
fs
pop
inc
xchg
push
mul
stos
jge
inc
stos
fcom
sbb
xchg
add
int
mov
(bad)
stos
dec
xchg
sbb
frstor
mov
jno
iret
adc
mov
mov
add
mov
push
or
sbb
outs
ins
xchg
pushf
xor
or
repnz
iret
jno
shl
mov
adc
and
mov
xor
aaa
jnp
xchg
mov
ret
out
xchg
mov
int3
sub
push
pop
sbb
pop
or
test
push
and
leave
xor
mov
lods
xchg
or
iret
int3
pop
pop
sub
push
jge
push
fcomi
mov
ret
mov
add
dec
dec
push
icebp
add
rol
cwde
test
jo
jp
aad
mov
aaa
mov
or
in
iret
dec
gs
jge
push
lahf
repnz
cmps
gs
mov
mov
les
lahf
ror
mov
xor
or
mov
xchg
mov
ins
fldcw
pop
add
sub
and
mov
cmp
mov
pop
rol
mov
jbe
inc
sbb
mov
mov
and
push
cli
jmp
imul
arpl
mov
ret
xchg
xor
fbstp
jmp
cmp
xor
lea
pop
mov
add
xchg
dec
inc
push
mov
fcom
mov
popa
push
or
adc
bound
xchg
and
lock
xchg
in
jecxz
stos
add
sbb
aaa
cmp
popa
enter
sub
icebp
fsub
cmp
mov
(bad)
call
imul
jns
mov
call
pop
(bad)
imul
and
fadd
cmc
mov
push
push
(bad)
add
lods
rcl
shr
loop
inc
xchg
std
push
mov
pop
pusha
mov
(bad)
cdq
add
dec
mul
adc
and
fcomp
(bad)
mov
add
fwait
xor
mov
sbb
sub
xor
xor
lds
push
(bad)
pop
test
adc
cmp
test
xor
sbb
cdq
popf
dec
popa
test
popf
xchg
and
sub
xchg
nop
pop
jno
mov
bnd
push
mov
sub
sbb
push
mov
and
movs
push
shl
push
push
or
push
aam
push
or
pop
bound
xchg
out
add
es
add
adc
mul
mov
cmp
add
test
shl
rol
jae
jmp
dec
das
jp
mov
inc
mov
or
fdivp
in
mov
inc
pop
and
xor
outs
jno
lods
out
aaa
add
jnp
out
int
adc
hlt
bnd
pop
sbb
jp
vpsubb
fmul
outs
fs
outs
jmp
sub
mov
adc
xchg
mov
inc
out
stos
fstp
cmc
pop
stc
cdq
arpl
in
jg
lods
aas
loopne
jecxz
mov
jge
pop
add
fimul
jecxz
out
sub
adc
aam
cmps
push
xor
mov
pop
mov
jmp
xchg
arpl
push
imul
dec
aam
xor
pop
(bad)
lock
ins
inc
and
dec
retf
in
cdq
xchg
mov
stos
int3
mov
mov
mov
imul
shl
sbb
outs
mov
xor
push
mov
shr
inc
imul
and
jnp
sub
retf
pushf
xchg
jp
add
pop
cmp
cmp
lahf
lods
xor
mov
cmp
out
test
arpl
mov
lock
jno
push
aaa
dec
in
scas
sub
xchg
and
or
push
test
sbb
ret
(bad)
pop
fiadd
and
or
sbb
or
sub
addr16
add
call
rcl
stos
sbb
scas
mov
imul
sbb
pop
in
jo
outs
cld
dec
test
jmp
rcl
fisubr
inc
out
xchg
(bad)
aas
or
mov
ret
enter
loope
mov
add
cmp
cmp
xchg
retf
jno
push
xchg
xor
lods
xchg
pop
and
dec
loop
add
xor
jnp
mov
ror
(bad)
jmp
sbb
lods
push
daa
loopne
(bad)
int
mov
cld
dec
call
iret
jbe
mov
pop
test
popf
imul
int3
imul
div
xor
sub
or
sahf
mov
or
ins
push
nop
jmp
test
add
sar
in
xchg
outs
add
jle
int
(bad)
loop
mov
idiv
sub
jp
jne
sbb
sub
les
les
sahf
mov
xchg
in
imul
mov
retf
ja
sbb
outs
sub
pusha
mov
inc
ins
dec
dec
addr16
add
pop
pop
fist
dec
and
pop
int
sub
loope
(bad)
mov
retf
int3
pushf
xchg
xor
fcom
sbb
cmps
inc
mov
rcr
mov
push
(bad)
shl
loopne
inc
pop
fld
into
jecxz
mov
lea
pop
xor
adc
psubsw
leave
jle
push
sahf
shr
scas
cmc
cmp
pop
mov
lds
test
in
cmp
pop
sub
fisub
outs
cdq
(bad)
std
(bad)
out
jno
and
xor
mov
(bad)
retf
ins
ins
das
ror
adc
ficom
mov
fstp
xchg
daa
push
jl
mov
xor
inc
std
xchg
adc
out
movs
mov
mov
mov
rol
dec
sub
xor
fcom
shr
push
mov
xor
movs
sbb
dec
sar
jb
mov
add
dec
xor
das
pop
clc
xchg
adc
js
sbb
xor
mov
sbb
sti
(bad)
in
(bad)
imul
push
push
pop
in
mov
pushf
int3
jb
mov
xchg
lea
arpl
mov
cmp
fwait
jp
xor
rol
dec
cdq
mov
xchg
jne
push
arpl
mov
aam
jb
jne
call
call
ror
out
clc
dec
mov
jns
popa
lahf
les
pop
dec
xchg
psubsw
mov
jns
es
dec
push
je
mov
push
add
test
push
add
inc
stos
cli
push
data16
icebp
aas
xchg
lahf
push
retf
mov
and
cdq
(bad)
popf
icebp
pop
aaa
xchg
sbb
cmp
push
ret
jle
arpl
ins
loop
pop
adc
mov
xchg
push
mov
(bad)
fcom
lods
repz
dec
fild
mov
int
pop
(bad)
jae
dec
sbb
cmp
lock
adc
rcr
ss
pop
jns
mov
mov
ins
cli
fwait
cmp
adc
jmp
cmps
cmp
dec
fcmove
mov
xlat
stos
jne
(bad)
xor
xchg
jmp
xchg
push
inc
(bad)
mov
stos
(bad)
mov
jmp
and
xor
xchg
sbb
adc
imul
push
jb
jp
pop
(bad)
ret
push
adc
and
or
adc
fdivp
scas
pop
xchg
loop
pop
enter
ffreep
jp
stos
outs
pushf
sbb
push
shl
jo
jp
loop
inc
sub
icebp
jae
mov
outs
icebp
bound
push
xchg
sbb
lahf
add
fstp
call
(bad)
mov
xchg
push
into
cld
sbb
cmp
adc
adc
retf
ror
sub
loop
(bad)
jne
jg
nop
mov
inc
fcomp
xchg
push
outs
or
or
loopne
cwde
xchg
sub
and
aaa
rcr
out
mov
cmps
scas
jae
and
jnp
es
or
inc
add
mov
fst
ficomp
mov
xor
call
mov
js
es
mov
test
(bad)
sbb
ja
std
mov
int
pop
test
call
loop
jle
xor
mov
ss
adc
test
loopne
mov
mov
movs
push
mov
sub
enter
int
(bad)
mov
test
aad
pusha
mov
das
sbb
call
and
in
sbb
xchg
and
inc
(bad)
gs
imul
inc
jge
inc
shl
iret
xor
xchg
add
sbb
scas
mov
adc
out
in
xor
or
lods
cmps
jle
cs
ja
lahf
mov
sbb
bound
sub
inc
add
and
sbb
lds
shl
xchg
jg
push
adc
loopne
or
sti
mov
hlt
mov
popa
jo
out
xlat
pop
xor
aad
mov
call
xchg
test
lods
inc
popa
fist
xchg
adc
mov
cmp
cld
ret
xchg
mov
jo
xchg
mov
ret
data16
sbb
and
push
xchg
clc
loope
and
aas
xlat
and
cmp
ja
je
inc
mov
std
push
mov
push
cmp
sub
or
jecxz
mov
dec
xlat
push
or
in
sub
inc
xchg
repz
adc
inc
jae
inc
push
in
loope
(bad)
rcl
je
iret
push
pop
adc
mov
or
mov
ret
or
sub
mov
sbb
sti
pop
and
(bad)
pop
push
pop
mov
fidivr
test
es
jmp
into
stc
xor
mov
stos
mov
jno
push
mov
and
(bad)
inc
into
rcr
add
sub
test
je
push
shl
xor
push
sub
inc
mov
jae
pop
push
(bad)
adc
test
adc
aad
mov
gs
xchg
xchg
fdiv
stos
loope
fwait
(bad)
xchg
mov
test
add
sub
mov
mov
mov
leave
cmp
cmc
jns
or
xchg
or
stc
jmp
and
jg
leave
sbb
sbb
dec
mov
dec
and
push
js
pop
lods
mov
push
jnp
mov
ds
icebp
jbe
jg
sbb
dec
call
mov
into
pop
push
mov
adc
pop
imul
mov
mov
and
ret
cwde
in
and
movs
mov
mov
fld
loop
int3
leave
cwde
cmps
(bad)
loope
sbb
or
pop
retf
add
(bad)
cdq
xor
add
imul
fnstsw
les
or
aam
jecxz
cli
inc
mov
cmp
push
pop
int
add
and
scas
push
xor
call
mov
jne
mov
adc
test
cmc
add
ins
stos
pop
arpl
push
sub
into
ja
and
ss
fimul
pop
std
addr16
jo
mov
mov
call
repz
ins
push
jmp
mov
mov
mov
arpl
sti
les
sub
and
popa
jle
cmps
xchg
cmp
mov
fld
dec
lds
iret
mov
pushf
pop
js
outs
(bad)
jmp
push
push
and
lea
(bad)
pop
dec
sbb
int3
pop
adc
lods
push
cmp
push
cmc
aad
(bad)
nop
inc
das
stos
add
lods
or
out
xchg
and
repnz
imul
and
jae
push
cmp
and
pusha
push
pushf
rol
or
js
fnsave
xor
ss
je
imul
add
mov
sub
adc
xor
push
cmps
leave
popa
mov
fs
rol
add
inc
xchg
add
aaa
int
mov
mov
lea
cli
jge
jmp
aas
(bad)
mov
sbb
pop
scas
icebp
jecxz
test
jg
fdiv
mov
retf
(bad)
xor
jns
mov
inc
sub
(bad)
test
jecxz
aad
movs
sbb
mov
mov
adc
test
outs
aad
lds
push
stc
shr
mov
push
test
std
or
ss
out
jo
scas
adc
(bad)
aad
adc
cmps
xlat
lds
dec
xchg
xchg
add
clc
sbb
dec
aas
pop
cmp
inc
cli
mov
(bad)
mov
sbb
sub
inc
pop
pushf
push
addr16
(bad)
xchg
mov
ins
ja
mov
pushf
call
sub
movs
push
jmp
leave
scas
jbe
mov
je
inc
or
sub
pop
mov
(bad)
xor
push
xchg
rcl
ret
dec
sbb
mov
pop
mov
sbb
sbb
add
(bad)
fwait
test
(bad)
cdq
sbb
outs
adc
xor
mov
out
add
imul
rol
mov
(bad)
jnp
lds
in
pop
ret
aas
mov
adc
or
ja
xchg
sub
cmps
or
gs
jne
test
xchg
or
lock
pushf
repz
mov
jno
fmulp
push
icebp
jmp
cs
(bad)
clc
or
jecxz
mov
outs
outs
sar
mov
shl
mov
jp
clc
mov
mov
or
mov
stos
adc
jo
jge
out
test
repz
push
imul
scas
ret
add
add
push
add
push
repnz
pop
jne
ins
mov
in
push
(bad)
cmp
push
pop
ins
mov
xlat
bound
call
(bad)
rol
(bad)
pop
inc
fdivr
or
ds
mov
dec
sub
jae
ins
fsub
sahf
lds
or
jo
fs
loope
int3
mov
imul
inc
adc
mov
sub
and
xor
imul
mov
mov
push
call
and
call
das
rol
cld
lock
jmp
add
sbb
mov
mov
test
pushf
or
jnp
sbb
in
mov
fnsave
inc
fs
push
(bad)
xchg
jmp
ss
jp
xor
xchg
mov
addr16
stos
xor
and
rcl
fstp
call
inc
inc
mov
data16
loopne
adc
pop
cmp
mov
in
in
out
out
jp
inc
loopne
push
push
xchg
mov
add
imul
mov
stos
jecxz
pop
je
xlat
cmp
pop
aam
pop
ficomp
adc
in
dec
call
shr
pop
and
xchg
lahf
inc
push
(bad)
dec
jno
sbb
pop
ds
icebp
int
(bad)
cmps
sahf
dec
mov
shl
lahf
dec
dec
sub
in
cdq
out
mov
push
sbb
inc
pop
lods
lahf
fmul
std
ins
adc
jno
mov
jmp
rcl
cmp
jmp
pop
nop
mov
outs
sbb
inc
xchg
(bad)
ins
pop
push
push
mov
idiv
(bad)
hlt
pop
pop
push
mov
xor
addr16
sbb
in
imul
cmc
xlat
je
aad
sub
sub
out
and
jns
push
imul
xor
pop
scas
bnd
in
sbb
outs
mov
loop
and
mov
popa
in
xchg
pop
out
inc
in
mov
dec
and
jg
push
lahf
outs
rcl
fsubr
dec
push
lock
and
lock
movs
xchg
repnz
daa
xor
add
lods
and
xor
inc
fild
ja
adc
xor
neg
int3
inc
imul
test
sub
and
loopne
xor
dec
cmp
arpl
adc
mov
movs
dec
js
iret
pop
pop
sbb
cmp
xor
push
mov
ja
xchg
mov
dec
loopne
sti
mov
lahf
and
(bad)
retf
out
lahf
xchg
sbb
sbb
in
iret
push
daa
cmp
dec
daa
pop
addr16
lods
rcl
(bad)
clc
js
jmp
sbb
(bad)
hlt
cmp
mov
mov
sub
call
ret
pop
dec
add
xchg
mov
inc
mov
mov
push
add
pop
outs
shr
or
adc
(bad)
push
icebp
sahf
dec
pop
pop
out
sub
push
shl
test
sub
ins
xchg
movs
mov
xlat
mov
icebp
ds
push
inc
(bad)
jno
add
push
mov
test
pop
or
arpl
mov
dec
lods
(bad)
stos
das
pop
cmp
loop
(bad)
mov
sbb
mov
(bad)
mov
and
add
das
push
out
or
hlt
xor
xchg
pop
adc
loopne
mov
push
sub
xor
cld
push
mov
std
mov
les
inc
cmp
lods
dec
imul
xchg
cmp
push
pop
loop
sahf
ins
inc
add
sub
cmp
cmps
push
les
movs
retf
pop
jmp
fsubr
repnz
push
xor
or
sahf
movs
jp
sbb
mov
lods
dec
mov
not
jp
push
xchg
and
mov
(bad)
imul
fild
popf
bound
(bad)
loop
add
mov
adc
rol
xchg
cmp
jle
cmp
pop
dec
icebp
ins
shl
mov
jmp
(bad)
sbb
scas
ror
or
xor
pop
popf
jbe
icebp
xor
mov
fdivr
aas
jmp
mov
or
fs
mov
mov
xor
sbb
inc
int
mov
jno
scas
in
in
cmp
sbb
fistp
mov
or
jge
data16
pop
or
lods
mov
stos
fst
mov
push
sbb
dec
xchg
outs
jmp
int
hlt
gs
cs
jg
popa
mov
cmp
xor
inc
pop
xor
jne
fwait
jmp
sub
add
push
out
xor
cmps
xchg
sahf
ror
mov
in
sbb
sub
popf
stos
repz
in
push
push
cmp
fs
out
call
out
xor
jno
mov
popf
adc
ss
cmp
push
lea
jns
mov
pop
mov
(bad)
sbb
js
(bad)
leave
mov
fldenv
sar
or
dec
jecxz
ficomp
repnz
add
cdq
mov
clc
pop
mov
repnz
xchg
mov
mov
out
xchg
xor
and
bound
add
inc
sub
inc
out
imul
push
loopne
cmp
stos
stos
fidivr
xchg
xor
(bad)
rcr
mov
ss
mov
xor
add
mov
pop
and
neg
sahf
adc
test
je
js
mov
aad
xlat
cmp
pop
sub
pop
push
scas
cmps
leave
mov
in
xor
sub
cli
lods
xor
xor
adc
loop
(bad)
cmp
push
adc
sub
pusha
std
and
and
ficom
test
leave
scas
dec
pop
jmp
push
mov
imul
sar
jae
rcr
cmps
ins
movs
in
adc
sub
mov
xchg
mov
mov
push
scas
sub
jecxz
test
mov
adc
cmps
fiadd
(bad)
test
cmps
fcomip
imul
add
xor
sbb
test
pop
inc
or
adc
mov
xchg
sub
cmp
out
lods
shl
ss
hlt
add
cmp
in
movs
stos
arpl
adc
cmp
xchg
fisttp
jl
mov
jo
enter
inc
cmp
ret
scas
in
lock
push
lea
retf
outs
leave
outs
push
xlat
cmp
daa
push
jecxz
mov
sbb
pusha
mov
adc
xchg
mov
data16
mov
in
mov
dec
in
jnp
pop
in
jg
pop
and
sub
test
mov
out
imul
xchg
jb
pop
fisttp
xchg
cmp
jb
ja
std
jnp
adc
inc
cmp
mov
int
cmps
pushf
lock
mov
inc
xor
jbe
clc
enter
sub
in
loope
or
scas
adc
mov
mov
xchg
sbb
pop
sbb
adc
ins
inc
pop
and
inc
cdq
and
ret
call
sti
icebp
das
pushf
loopne
stos
xor
mov
sbb
sbb
nop
sahf
mov
pop
dec
mov
mov
pop
pop
ds
mov
inc
push
xlat
das
xor
fmul
inc
movs
cwde
and
xchg
add
or
stos
push
popa
jbe
ja
mov
pop
xor
push
nop
ret
xchg
xor
jns
push
add
inc
sbb
pusha
push
repz
xchg
or
out
ins
ror
bound
daa
test
repz
int
inc
mov
sub
in
pop
fsub
sbb
or
jae
outs
push
pushf
push
(bad)
mov
rcl
aam
je
out
sub
and
pop
(bad)
mov
inc
ret
push
es
or
fimul
retf
cmp
sub
(bad)
int
retf
ror
call
jge
mov
data16
pop
sub
retf
in
stc
nop
xchg
xchg
loopne
mov
and
push
mov
xor
into
sbb
pop
adc
xor
call
xchg
and
fimul
cs
fimul
add
in
bound
lods
jmp
jp
push
outs
dec
mov
inc
pop
gs
fnsave
xor
repnz
push
sahf
push
pop
stc
add
xchg
nop
jg
jmp
pop
pop
daa
lock
sbb
leave
jmp
loope
in
push
and
pop
(bad)
in
in
sub
popf
sub
aad
xchg
inc
add
mov
sub
sub
outs
pop
outs
idiv
bswap
mov
ja
push
cmp
xor
or
xchg
and
jne
aas
ss
ret
loop
outs
dec
rol
mov
and
(bad)
shl
inc
push
test
sbb
prefetch
pop
shl
jle
and
xchg
cmps
mov
mov
mov
je
push
xchg
ret
lods
mov
lahf
test
movs
out
jmp
and
sbb
daa
fidiv
cmp
jns
hlt
cmp
loope
dec
outs
and
add
or
sbb
mov
mov
ret
outs
cmp
out
adc
and
mov
cmps
xchg
repnz
cs
mov
pop
mov
xchg
push
not
xchg
stos
ror
icebp
test
or
(bad)
popf
mov
pop
shl
push
push
sbb
mov
xor
imul
xor
add
xor
adc
dec
mov
in
mov
cmp
ins
mov
(bad)
dec
hlt
movs
cli
pop
and
inc
in
jne
(bad)
mov
gs
jo
dec
sbb
or
inc
jecxz
dec
mov
ins
out
or
imul
cld
in
inc
(bad)
jp
pop
clc
test
add
jp
push
push
aaa
fwait
ret
mov
pusha
fsubp
sbb
nop
jmp
mov
jge
add
inc
sbb
mov
xor
mov
sub
ins
shl
enter
push
(bad)
bound
ss
or
push
jne
mov
addr16
cmps
imul
icebp
mov
movs
add
in
(bad)
or
and
test
call
(bad)
test
shl
push
xchg
mov
nop
aam
add
mov
xor
and
je
imul
(bad)
xor
mov
(bad)
xchg
mov
in
cmp
jmp
call
sub
adc
push
adc
and
xchg
lahf
fiadd
sub
cwde
jnp
adc
mov
xchg
mov
faddp
sbb
rcl
popf
dec
js
test
or
inc
stos
xor
xchg
aam
mov
lods
out
cmp
scas
sbb
sub
and
repz
test
xor
in
ror
es
loop
or
test
xchg
test
mov
cwde
in
dec
clc
pusha
sub
loop
stc
mov
pop
aaa
or
jne
lds
mov
xor
test
stos
das
or
jle
rol
dec
ss
mov
add
pop
sbb
sub
dec
loopne
sbb
sbb
loopne
mov
cmp
imul
and
adc
shl
jns
cdq
sbb
sbb
xor
adc
xchg
adc
in
cdq
out
mov
xchg
mov
sbb
mov
dec
xchg
push
cmc
hlt
sub
mov
or
add
mov
out
addr16
and
jb
cmp
sub
jbe
stos
jge
xchg
pop
xchg
in
(bad)
in
cmp
sbb
(bad)
leave
jns
popf
call
call
adc
mov
pop
mov
(bad)
sub
adc
sahf
jmp
pop
and
xchg
sbb
or
pop
sub
mov
test
add
xchg
mov
cmc
pop
mov
push
dec
mov
loope
jb
ret
addr16
repnz
add
dec
adc
iret
stc
mov
fwait
shl
inc
xchg
(bad)
xor
outs
int
inc
mov
xlat
and
push
mov
push
(bad)
xchg
pop
sub
cmp
call
and
xor
enter
fild
push
xor
pop
mov
aam
aad
adc
es
sti
cmp
and
loope
ret
sahf
movs
pop
and
icebp
and
or
inc
xor
cs
fs
xor
stc
sbb
xor
dec
ds
addr16
cmp
and
xor
loope
scas
sbb
dec
sbb
fld
add
movs
inc
int3
jg
inc
addr16
popf
jl
cwde
dec
ins
ret
dec
(bad)
stos
cmp
dec
jle
inc
je
pop
xor
nop
sbb
xchg
xchg
add
inc
test
push
mov
inc
dec
stc
xor
repnz
int3
xchg
mov
fwait
mov
(bad)
adc
mov
rcl
cmp
jp
inc
mov
retf
ja
repz
fcom
xor
push
aaa
call
icebp
pop
repz
mov
(bad)
int
sbb
scas
jp
loope
neg
in
fidiv
adc
push
add
push
mov
in
retf
addr16
imul
push
rcl
mov
jmp
dec
ror
sbb
nop
cmp
repnz
outs
lock
rol
cmp
popa
or
ds
sub
test
icebp
jae
into
add
jae
xor
jg
popf
jp
dec
repz
inc
xchg
aam
push
sbb
ja
mov
sub
cmps
xlat
ins
adc
jmp
fisttp
pop
sbb
mov
mov
push
or
push
test
sbb
ret
cli
mov
dec
sub
and
pop
pop
out
cdq
mov
test
push
hlt
mov
xchg
test
sub
je
(bad)
(bad)
popf
adc
inc
or
je
loop
aam
add
fs
or
loop
in
mov
mov
sahf
lock
call
(bad)
jle
(bad)
in
imul
jnp
call
or
movs
jmp
ror
shl
inc
or
dec
(bad)
push
mov
jbe
xchg
add
cmp
hlt
jns
and
mov
sti
(bad)
fiadd
and
pushf
sbb
ret
push
adc
jge
mov
std
enter
push
add
aas
cmp
push
(bad)
mov
push
icebp
dec
mov
add
mov
movs
and
(bad)
and
xchg
loope
in
aas
jg
hlt
push
mov
lahf
aam
call
xchg
push
gs
cmp
sbb
mov
fisubr
inc
add
(bad)
push
cmp
fld
lds
pushf
pop
xor
in
in
pop
sbb
xchg
out
jb
mov
push
ds
mov
scas
xor
jg
xchg
cwde
pushf
sub
pusha
into
fstp
(bad)
retf
or
(bad)
loopne
add
movs
icebp
push
imul
in
xchg
lods
xchg
popa
in
and
mov
and
cs
std
outs
ins
stos
cld
jp
cmps
adc
or
int
or
into
push
mov
xor
lods
in
push
fnstcw
movs
and
hlt
mov
into
jno
aam
adc
push
rcl
lods
sub
add
dec
push
xchg
jo
(bad)
aaa
cmp
mul
push
inc
ret
inc
and
sti
addr16
(bad)
mov
test
push
xor
xchg
jnp
movs
dec
push
sahf
adc
and
inc
and
xchg
in
sub
xchg
jnp
push
add
mov
stc
xchg
cmp
ins
shr
mov
or
dec
mov
scas
and
jl
mov
jb
repz
inc
test
inc
imul
sbb
mov
ficomp
outs
lock
push
jl
nop
sbb
and
movs
or
push
les
dec
mov
loop
std
les
test
mov
pusha
xchg
cs
xchg
jp
jge
dec
or
push
(bad)
xor
cs
nop
repz
and
call
mov
xor
cmp
pop
mov
pop
push
pop
in
loopne
add
ret
mov
or
rol
dec
icebp
jmp
leave
shl
addr16
neg
and
mov
xchg
fsubr
into
aam
in
mov
aas
sub
jp
arpl
dec
(bad)
jmp
push
das
mov
fld
sub
jmp
loop
inc
imul
fst
mov
in
out
and
push
js
call
push
cld
sbb
or
aad
pop
pop
jmp
aam
sahf
add
xchg
aaa
xlat
imul
pushf
xlat
pop
(bad)
mov
lods
dec
test
cmp
add
xchg
sub
movs
xchg
mov
push
cmp
mov
(bad)
out
mov
hlt
jne
add
imul
mov
test
mov
jnp
daa
cmp
ins
xchg
dec
mov
push
and
test
cmps
push
pop
out
(bad)
enter
mov
data16
sbb
dec
rcr
das
mov
js
lds
jbe
or
add
lahf
xchg
in
push
and
mov
loop
(bad)
leave
mov
cmp
nop
in
sbb
xchg
in
cmp
sbb
cmps
inc
sbb
pusha
mov
xor
add
inc
imul
add
cmps
(bad)
out
mov
ins
ins
addr16
push
adc
cmps
xchg
push
mov
int3
add
xor
jge
std
mov
cmps
dec
xchg
repz
and
xchg
sbb
aas
add
je
imul
jbe
shr
lahf
lods
sbb
mov
mov
inc
mov
jmp
sbb
and
mov
mov
(bad)
and
push
mov
inc
xor
fdivr
pop
lock
inc
or
retf
arpl
lea
in
jp
jmp
stos
int
fmulp
and
xor
and
loop
jb
inc
mov
mov
repz
addr16
cld
or
inc
sub
mov
mov
mov
pop
ret
stc
jns
mov
bound
jmp
popf
test
mov
sahf
or
retf
(bad)
fimul
aam
rcr
mov
dec
in
fcmovb
dec
mov
imul
(bad)
ret
ins
clc
push
outs
fist
dec
mov
jo
jns
pop
jmp
mov
gs
xor
cmp
dec
mov
fisubr
mov
daa
or
scas
push
fcomi
leave
hlt
or
xchg
and
push
add
sbb
adc
xor
jg
iret
lahf
je
test
rcr
lods
repz
inc
mov
sbb
pop
cwde
in
mov
pop
inc
xor
push
jae
xor
or
xor
cs
cmps
arpl
stos
movntq
jb
mov
sbb
cmps
xor
sbb
popf
mov
imul
test
in
lock
into
icebp
xor
cmp
push
popa
dec
jo
push
xchg
test
fiadd
xchg
call
or
or
fimul
cmps
sub
cmps
nop
xor
retf
xchg
cmp
xchg
fstp
sbb
jns
adc
cmps
push
mov
stos
movs
adc
xchg
jne
xchg
jecxz
call
sbb
push
bound
adc
push
mov
and
clc
out
js
and
pop
aaa
sbb
mov
std
xor
and
(bad)
loopne
(bad)
call
mov
xchg
jmp
push
cmps
and
stos
xchg
xchg
jl
gs
cmp
in
mov
mov
mov
pop
adc
lods
outs
aaa
sub
es
sub
fist
mov
mov
loope
mov
out
stos
outs
int3
lods
test
pop
jnp
std
xchg
add
outs
mov
in
mov
xchg
mov
pop
lods
xor
test
inc
mov
jp
xchg
ins
add
xor
add
xor
sub
aad
jae
mov
mov
cdq
xchg
cmp
cs
mov
xor
push
sbb
mov
sar
call
mov
cmp
cli
loope
mov
scas
cdq
mov
pop
cwde
jnp
ds
inc
jnp
loope
sbb
mov
adc
or
jmp
jne
inc
call
into
cli
jmp
jne
adc
imul
jle
shl
lods
aaa
adc
and
loope
dec
push
pop
mov
sti
lea
pop
push
mov
fs
fiadd
sahf
add
and
xor
fcomp
cmp
jae
dec
pop
pop
ins
popa
test
jmp
sub
int3
adc
push
jg
push
sub
push
pop
jp
push
push
or
push
mov
xor
push
lds
cmps
xor
and
lds
jbe
cmc
xchg
jne
je
adc
fisttp
movs
ds
adc
test
es
pop
mov
shl
cmc
lds
push
sub
cwde
inc
sbb
out
cmp
mov
repz
dec
sub
mov
jbe
jb
sahf
sub
pop
movs
adc
sub
xchg
xor
or
sbb
mov
in
jno
inc
cmps
out
fdivr
lods
mov
and
aam
into
loopne
iret
sbb
inc
cmp
je
inc
mov
(bad)
adc
mov
fnstsw
sbb
out
xchg
lea
pop
aas
in
je
cmp
loopne
xchg
jo
and
ret
push
jmp
loopne
div
inc
or
bound
or
fidiv
rcl
pop
mov
sti
and
into
pop
std
push
mov
dec
add
mov
fucomip
cmps
push
jg
popa
push
(bad)
mov
mov
pop
cmp
loopne
or
out
cmc
call
icebp
aad
pop
dec
enter
pop
jmp
push
push
(bad)
(bad)
retf
into
and
sbb
jle
mov
inc
outs
cmp
add
mov
or
inc
inc
dec
add
mov
add
ss
or
aaa
and
leave
pop
repz
daa
xchg
repz
cmps
fisubr
dec
pop
inc
inc
ss
or
push
mov
xchg
jns
inc
sub
(bad)
dec
jp
loop
inc
out
push
and
sub
bt
adc
shr
push
scas
mov
add
imul
xor
or
ror
push
shl
call
(bad)
bound
shr
sbb
mov
leave
cmc
ret
sbb
push
fxam
aas
pop
stc
mov
adc
lahf
sbb
test
pop
mov
loop
lea
das
sbb
(bad)
in
add
push
imul
retf
rol
dec
je
fistp
mov
je
movs
pop
mov
outs
xlat
dec
retf
add
and
jne
mov
push
sar
mov
inc
mov
ds
dec
ret
cld
stc
pop
in
mov
adc
and
inc
imul
mov
sub
scas
mov
in
adc
test
mov
pop
jo
adc
push
pop
push
call
dec
push
clc
push
sbb
int
mov
mov
retf
mov
jmp
nop
(bad)
outs
icebp
mov
fstp
lods
sbb
inc
or
mov
xchg
adc
fimul
cmc
sub
mov
pop
pop
ja
ds
xlat
fild
fs
jg
push
lahf
adc
dec
pop
in
addr16
call
jne
xchg
movs
scas
ins
mov
sbb
xchg
mov
pop
or
pop
mov
rcr
and
ret
(bad)
test
imul
push
je
dec
std
call
jno
in
das
js
fwait
adc
(bad)
in
cmc
ins
adc
or
fstp
push
retf
scas
xchg
xor
inc
pop
int
into
mov
or
and
push
cmc
and
sbb
mov
or
dec
repz
jno
pop
in
daa
adc
test
xor
(bad)
mov
xchg
adc
int3
push
les
or
mov
scas
pusha
pop
(bad)
and
fmul
lock
out
jae
xor
jl
or
movs
test
jno
iret
aam
js
test
int
lods
inc
bound
fwait
movs
and
gs
ins
sti
das
cmps
inc
adc
dec
jnp
test
adc
and
das
js
inc
addr16
bound
test
ret
jo
je
sbb
push
pop
dec
mov
jl
or
scas
mov
or
cmp
push
xchg
mov
jl
or
dec
adc
cmp
push
jo
pop
stos
aas
and
pop
lock
in
pop
fnstenv
icebp
ret
dec
sbb
push
addr16
repnz
fsub
pop
shl
or
sub
(bad)
cmp
imul
adc
inc
outs
(bad)
inc
outs
int
jnp
push
jae
jo
jo
imul
in
xor
mov
ins
cmc
jbe
jne
test
fnstsw
loop
adc
fld
aam
or
(bad)
movs
or
push
stc
pop
sub
outs
sti
fcomi
(bad)
cmps
jle
mov
ins
not
mov
pop
ror
pop
lahf
mov
out
jbe
mov
cmp
push
jns
test
push
shrd
pushf
ins
aad
mov
cwde
ficom
test
and
dec
repz
mov
call
fld
xchg
mov
ret
pop
es
inc
rdmsr
and
cmp
and
aaa
sti
jne
or
sub
pop
xchg
sub
dec
sbb
movs
xchg
dec
pop
and
xor
fisttp
clc
inc
mov
pop
adc
lds
pop
sbb
fwait
adc
mov
das
push
push
leave
cmp
sbb
idiv
fmul
ins
push
mov
retf
cdq
push
daa
sbb
mov
add
fisubr
ss
fadd
push
imul
bound
inc
enter
sahf
push
xchg
xchg
sbb
and
into
mov
adc
push
sbb
loope
outs
mov
ret
xchg
adc
dec
or
dec
cmp
test
int
xchg
xchg
div
adc
pop
xlat
inc
sti
xchg
lock
mov
and
shl
push
cmp
sub
adc
pop
adc
repnz
push
add
dec
out
push
jmp
std
jnp
cmp
xor
nop
jp
test
sbb
ds
fs
movs
push
cdq
pop
aad
into
jbe
sbb
cli
jp
push
dec
shl
(bad)
fadd
jg
call
aam
or
stos
fst
mov
bound
jbe
test
jo
or
xor
jae
aaa
gs
xor
mov
inc
xlat
xor
bound
cwde
xor
test
mov
inc
mov
and
outs
(bad)
push
cmc
jnp
dec
retf
jae
jno
scas
xchg
popa
out
je
adc
add
mov
(bad)
fist
iret
mov
xchg
mov
imul
mov
xchg
jecxz
or
test
mov
les
rcr
jge
or
mov
ffreep
and
out
sub
xchg
mov
popa
xlat
mov
stos
mov
lds
xor
in
push
into
int3
pop
cmps
cmp
fs
scas
enter
jb
mov
jmp
fsubr
push
or
test
(bad)
mov
jbe
and
aas
jns
pop
push
hlt
into
adc
mov
shr
shl
push
mov
dec
ret
xchg
mov
lea
and
sbb
gs
adc
mov
pop
lock
sahf
popf
mov
xchg
cmp
test
addr16
stos
mov
sbb
xchg
rcl
outs
loop
sub
adc
sub
ret
sub
cwde
in
lahf
pop
mov
stc
mov
cmp
sti
inc
mov
pop
fdivr
stos
mov
adc
aaa
and
aam
js
pushf
dec
inc
lds
jns
sbb
jmp
jns
ret
jecxz
je
stos
sbb
dec
imul
fisubr
out
xchg
jae
ret
dec
loop
inc
jmp
iret
mov
jno
mov
je
stos
sbb
mov
mov
gs
nop
fmul
inc
clc
js
xlat
sub
pop
fdivr
inc
enter
add
jecxz
sar
pop
jl
mov
xchg
pop
pop
mov
dec
mov
xor
push
adc
rol
adc
jp
jmp
mov
fs
cmp
inc
fisttp
mov
hlt
ds
stc
lahf
inc
inc
movs
xchg
mov
ds
mov
rcl
mov
mov
xor
xchg
dec
leave
in
shr
jno
outs
das
cmps
dec
arpl
outs
push
mov
loopne
pop
jg
xor
jo
loop
ins
sahf
dec
mov
mov
cmp
mov
inc
test
jmp
push
xor
ins
enter
and
or
rcr
mov
mov
call
(bad)
push
or
add
sti
jp
mov
stos
sub
push
jmp
cld
addr16
ja
jge
(bad)
sub
adc
fild
inc
ds
ss
add
push
and
jle
stos
push
retf
lds
add
pusha
push
jmp
inc
mov
xor
out
jp
push
or
xor
dec
xor
retf
outs
out
jmp
jp
xchg
xor
push
fisubr
add
arpl
cdq
test
mov
or
call
int3
and
movs
mov
adc
fxch
sbb
fyl2xp1
jecxz
adc
call
inc
add
dec
aaa
hlt
pop
dec
(bad)
sub
enter
push
mov
xor
stos
xchg
sbb
xchg
sub
leave
cdq
jl
fld
or
cmp
in
sti
jecxz
pop
xchg
loopne
jb
cmp
push
cld
pop
push
xchg
jp
int
adc
imul
pop
dec
cmc
fidiv
cmp
add
popf
adc
jmp
sahf
aad
adc
icebp
push
sbb
mov
push
or
(bad)
imul
push
fnstenv
inc
loopne
jp
inc
movs
push
loopne
or
pop
cmps
adc
mov
cs
icebp
int3
mov
retf
outs
inc
push
add
xchg
test
stos
xlat
int3
mov
nop
cmps
call
xor
data16
js
mov
adc
sub
rcl
je
(bad)
jecxz
inc
cdq
jnp
or
test
jnp
adc
sub
push
je
mov
adc
sub
popf
jb
(bad)
into
dec
or
fs
fsub
sbb
xor
aad
nop
and
dec
sbb
daa
jmp
leave
adc
sbb
pop
mov
shr
out
stos
(bad)
mov
sub
dec
jmp
out
and
lds
movs
mov
xchg
mov
cli
xchg
jp
cmp
les
xchg
mov
pusha
dec
mov
(bad)
xlat
clc
mov
or
mov
cwde
cmps
sub
pop
fisttp
popf
ficom
adc
mov
jecxz
leave
inc
lods
inc
js
sahf
sbb
hlt
test
(bad)
adc
or
push
sar
pop
mov
cli
bnd
movs
int3
push
jmp
in
sbb
jge
or
lds
out
xchg
ror
jno
(bad)
jle
lahf
xor
rol
dec
int3
xor
and
xor
into
push
xchg
xor
sbb
imul
xchg
adc
(bad)
loopne
lock
dec
jne
push
ins
loope
(bad)
dec
mov
arpl
xchg
dec
adc
dec
clc
push
(bad)
push
test
sub
xchg
stc
mov
inc
jne
mov
mov
(bad)
mov
dec
jnp
out
ins
aas
mov
pop
cmc
and
call
(bad)
adc
in
loop
imul
mov
imul
mov
xchg
jmp
or
aaa
cmp
mov
inc
cmp
loopne
(bad)
mov
mov
mov
add
add
not
dec
mov
rcl
jmp
popf
fxch
xchg
pusha
xor
out
add
pop
mov
and
xchg
addr16
sub
push
stos
mov
pop
cld
(bad)
fadd
fwait
clc
mov
idiv
or
mov
lds
aas
sub
jge
mov
(bad)
fld
sbb
lods
or
std
imul
push
loope
aad
fcomp
lfs
push
push
fcomp
(bad)
and
mov
pushf
mov
pop
or
jecxz
pop
adc
mov
mov
out
out
jp
leave
stos
cmp
jle
jmp
pusha
ror
push
clc
xor
(bad)
sbb
xchg
or
inc
repz
push
sbb
stos
xchg
loope
add
pusha
lea
inc
mov
or
cmc
stc
xchg
pushf
repnz
mov
jno
jb
in
push
mov
ror
sbb
fistp
ret
pop
jno
int3
loop
(bad)
cli
movs
pop
xor
leave
aaa
in
popf
xchg
popf
mov
mov
inc
aad
leave
imul
adc
jmp
je
scas
add
(bad)
mov
dec
movs
inc
sbb
(bad)
leave
hlt
ficomp
mov
addr16
in
cmps
addr16
add
sbb
mov
add
inc
push
out
mov
pop
pop
and
(bad)
dec
outs
lds
inc
xchg
outs
jo
clc
ret
mov
sbb
(bad)
add
xor
pusha
out
push
sbb
xlat
outs
je
push
test
dec
xchg
stos
xor
jae
lods
(bad)
mov
iret
or
push
daa
jno
and
mov
add
and
xchg
mov
dec
aam
mov
mov
das
add
jnp
sbb
stc
stos
jbe
sbb
dec
cmp
shl
ins
test
loop
mov
ret
sar
retf
cmp
cld
les
add
imul
rol
sub
pop
imul
shr
push
push
or
in
repz
jl
pop
add
imul
inc
sub
push
xchg
jge
les
ret
dec
imul
sbb
jae
rcl
loopne
mul
popf
xor
push
fisub
nop
leave
pop
bound
add
xchg
jmp
mov
sbb
jo
sbb
pop
std
mov
add
popf
dec
gs
jp
cmp
push
push
lods
inc
ds
call
cli
lods
pop
jae
ins
add
loope
ins
outs
sbb
les
or
mov
int
jge
dec
adc
pop
jmp
fistp
dec
outs
mul
inc
sbb
push
dec
je
icebp
sbb
push
call
jg
mov
in
jge
imul
mov
pop
pop
clc
addr16
mov
mov
ror
jb
cs
inc
xchg
sbb
sbb
adc
rol
shl
sub
cmps
addr16
out
test
cmps
adc
fst
or
xchg
clc
pop
jle
les
fcomp
cmp
test
xchg
mov
inc
dec
pop
pop
lock
addr16
aas
int
jno
pop
call
fsubr
push
sbb
int
sub
lahf
push
inc
in
rcl
xchg
fwait
pop
nop
cdq
push
cmp
fstp
paddq
xchg
cmp
adc
leave
pop
adc
mov
push
sbb
(bad)
call
js
sar
in
fstp
sbb
int
mov
in
jne
cdq
mov
scas
sti
sahf
fdivr
fs
sbb
fs
shl
xchg
inc
pusha
rol
mov
inc
fcomp
pop
dec
mov
pop
lea
push
xchg
test
inc
pop
and
stos
popf
scas
or
cmp
add
mov
cmps
(bad)
mov
mov
movsx
hlt
sub
rcr
mov
sub
cmps
push
ficomp
add
cmp
(bad)
cld
mov
cdq
or
dec
pusha
add
gs
cwde
mov
cmc
(bad)
cmp
push
inc
enter
and
js
or
sub
add
xlat
mov
ss
sahf
push
adc
in
cmp
imul
jp
out
cmp
fmul
xchg
sub
sub
nop
cli
push
inc
clc
(bad)
cmc
xchg
add
push
pop
adc
or
iret
jne
pop
sbb
pop
inc
xor
pop
sub
sahf
inc
jge
cmp
dec
adc
daa
scas
jae
retf
xor
ds
mov
push
lea
fnsave
mov
lds
stos
add
(bad)
sbb
jbe
xor
jmp
sub
adc
lods
jl
jecxz
sub
dec
push
dec
mov
xchg
and
shl
dec
cmp
jl
pop
mov
mov
jmp
ss
in
push
jmp
push
popf
or
(bad)
sbb
cmps
inc
fcmovnbe
arpl
std
push
push
pop
into
push
sub
mov
out
daa
sub
and
fs
shl
mov
cmp
movs
sbb
and
sahf
lds
jae
pop
push
stos
jnp
mov
sub
add
hlt
jns
das
loope
push
movs
jnp
retf
adc
mov
mov
xor
jnp
jge
cmps
int
jecxz
push
cdq
push
and
shl
push
push
jne
aam
js
aaa
jne
aas
xlat
sub
and
adc
mov
adc
inc
dec
cmp
fs
ror
dec
mov
jp
add
push
bnd
iret
mov
sti
mov
test
outs
jae
push
(bad)
mov
sbb
movs
ja
xor
pop
movs
arpl
cld
cmp
push
fiadd
adc
pushf
stc
mov
ja
xchg
xor
in
adc
and
sti
cli
mov
dec
lock
xchg
arpl
ret
stc
pop
xor
sahf
jmp
nop
dec
fadd
ins
cmc
out
fst
mov
pop
and
cs
sbb
(bad)
call
cld
and
push
out
push
(bad)
fcom
xor
loop
iret
push
push
lahf
popa
xor
adc
sbb
dec
push
in
mov
mov
xchg
xor
jnp
or
mov
in
in
icebp
xchg
or
cmp
shl
push
fstp
inc
ror
cmp
out
push
add
push
retf
mov
outs
and
mov
jbe
jne
push
mov
mov
mov
pushf
aad
pop
or
iret
inc
fdiv
mov
cmp
push
dec
dec
push
pop
ss
mov
xchg
cmp
fst
lahf
cli
adc
push
pop
iret
mov
add
push
pop
adc
das
mov
cli
fs
mov
xchg
xchg
ja
sbb
fs
ins
or
leave
pop
mov
xchg
test
xchg
outs
repz
nop
pop
sub
gs
xchg
jg
fist
and
cmps
jp
inc
fs
popa
dec
jecxz
shl
(bad)
xchg
sbb
mov
adc
lea
sbb
(bad)
pop
pop
out
das
sbb
xlat
add
sbb
std
xor
add
mov
pop
push
imul
out
lods
hlt
mov
jg
fimul
stos
pop
les
cmp
push
and
andps
pop
xchg
pop
rcl
adc
mov
mov
scas
push
mov
xor
add
or
and
or
shr
or
adc
xchg
imul
dec
adc
ret
arpl
cmp
and
in
mov
pop
out
mov
push
(bad)
loopne
enter
push
pop
loope
sub
add
xchg
ins
mov
ret
xor
xor
xchg
rcr
popa
jno
shr
shl
fdivr
mov
mov
mov
dec
mov
jbe
sbb
hlt
rol
and
int3
adc
jge
lds
inc
dec
xchg
or
pushf
cvtpi2ps
dec
dec
xchg
add
add
push
sbb
gs
push
and
loop
sahf
mov
frstor
aam
(bad)
jmp
bound
das
shr
rol
pushfw
and
jg
lods
test
dec
pop
and
pop
jl
aam
mov
ret
jge
pop
and
xor
ret
jmp
dec
retf
add
(bad)
in
xor
pop
xchg
stos
test
in
xor
inc
fild
icebp
jl
mov
cmp
aad
xor
sub
dec
and
rol
loop
add
inc
test
mov
cwde
data16
xor
(bad)
call
and
(bad)
in
jb
jno
jnp
mov
cmps
(bad)
test
cmps
stos
jp
ins
push
scas
hlt
mov
icebp
mov
loope
adc
mov
(bad)
xlat
mul
js
mov
or
mov
sub
ret
adc
pop
dec
ins
dec
retf
jo
pop
sti
or
leave
pop
pop
ins
xchg
call
in
mov
cld
lds
jns
jbe
inc
cmp
add
mov
fldz
and
inc
movs
in
sti
bnd
lahf
fsub
pop
mov
mov
xchg
and
xchg
mov
fsub
cmp
imul
lods
shl
test
or
push
sub
aaa
in
dec
adc
mov
lock
sub
clc
mov
jle
dec
pop
xor
xor
mov
std
(bad)
test
sbb
xchg
sub
push
(bad)
mov
nop
arpl
adc
pusha
in
cmp
inc
ins
mov
(bad)
xchg
jmp
(bad)
cmp
ret
xor
icebp
rol
js
jle
fs
out
int3
int
cs
test
dec
fbstp
arpl
jmp
mov
mov
sbb
or
cmp
xor
sub
hlt
jmp
inc
rcl
push
mov
dec
test
jle
xchg
inc
xchg
mov
fstp
out
fiadd
leave
stos
cmp
xor
outs
adc
xlat
movs
out
mov
sub
out
inc
add
imul
xchg
xor
fnsave
(bad)
bound
mov
call
sub
jmp
jo
sub
mov
aaa
test
paddw
mov
retf
inc
pop
fdivrp
sahf
pop
daa
jg
mov
ss
out
popf
fs
add
cmp
pop
es
xor
sbb
outs
xchg
cmp
jmp
arpl
test
dec
jmp
xor
mul
jno
adc
fcomip
pop
loope
rcl
int
adc
rcr
retf
fwait
mov
in
jnp
jne
cmp
and
cmp
(bad)
int3
mov
int
std
cdq
push
in
das
cmps
add
stos
pop
std
stos
mov
adc
or
mov
add
mov
je
int3
mov
xor
push
and
cmp
mov
cli
outs
mov
ins
mov
stos
icebp
mov
test
or
xor
jl
nop
and
retf
lods
jae
dec
push
adc
rol
movs
cdq
(bad)
jmp
mov
scas
mov
mov
mov
aam
stc
shl
cli
cwde
mov
shl
sbb
sbb
and
xor
xor
pop
jmp
mov
xor
cmp
aas
pop
cs
dec
and
(bad)
pop
add
mov
cmp
sbb
xchg
and
mov
loop
and
(bad)
xor
clc
movs
mov
push
mov
sub
inc
dec
aad
sub
sbb
outs
push
(bad)
jg
or
ror
pop
add
(bad)
jl
mov
(bad)
and
pop
stos
mov
xlat
aam
out
loope
scas
fdiv
jge
(bad)
sbb
pop
or
xor
push
mov
cmc
fwait
xchg
jmp
not
out
test
and
sahf
push
mov
rol
retf
jp
jae
push
xchg
xor
das
mov
cdq
scas
jnp
mov
(bad)
push
call
icebp
jmp
jne
pop
test
adc
sub
cmp
into
sbb
ret
lock
sbb
mov
mov
cmp
mov
mov
fidivr
xor
retf
std
xchg
mov
xchg
inc
jno
pop
fidiv
sbb
cmp
ds
xlat
imul
and
movs
fistp
push
inc
shl
jmp
mov
jb
cmp
dec
adc
inc
and
popa
arpl
jmp
cwde
hlt
out
sbb
call
add
fidivr
les
ret
daa
lock
pop
jmp
outs
popf
push
or
lods
bound
out
out
jmp
xchg
fwait
mov
nop
fwait
arpl
lahf
add
jge
test
fst
aas
jne
fist
xlat
leave
mov
lds
cmps
push
enter
les
adc
sbb
jl
les
add
les
in
xchg
lods
push
loope
sbb
mov
stos
test
xor
xor
dec
iret
add
mov
movs
push
repnz
loop
out
pop
je
sub
pop
ret
adc
arpl
mov
xor
mov
in
fidivr
sbb
icebp
stos
pop
lahf
xor
test
out
adc
or
jae
add
jge
loope
and
sbb
adc
mov
call
repnz
ret
div
push
and
mov
sar
cmps
aaa
inc
lahf
das
push
cmps
sbb
xor
loope
xchg
dec
xlat
dec
(bad)
pop
in
in
fstp
jne
fld
mov
lahf
and
in
lea
sbb
push
xor
test
int
push
mov
sub
push
add
ret
arpl
jmp
cmps
retf
fisub
cmc
sbb
bswap
cld
pop
jnp
jecxz
cmp
sbb
iret
mov
xor
lahf
jbe
call
jmp
loope
cmps
aas
movs
pop
and
scas
dec
push
dec
pop
or
test
push
popa
push
jae
adc
nop
lods
and
or
enter
push
test
mov
ret
stos
cdq
jne
das
inc
(bad)
stc
dec
dec
sbb
cs
je
int
repnz
daa
jecxz
sub
adc
scas
cld
retf
jns
adc
imul
cmp
inc
ins
add
in
cmp
sub
rcl
pop
xchg
push
call
sub
shr
test
mov
cmps
(bad)
jge
push
(bad)
xor
retf
movs
lods
push
mov
fwait
icebp
cdq
push
das
mov
clc
inc
fld
leave
inc
push
fisttp
test
xchg
adc
sub
xor
mov
scas
sbb
sub
sar
add
jmp
mov
inc
out
dec
sub
test
aam
jno
lgs
test
mov
mov
adc
ficomp
push
test
and
int3
int3
xlat
pop
cmp
bswap
xor
loop
push
(bad)
pop
test
pop
mov
scas
pop
push
fstp
int
aam
mov
clc
jns
lock
clc
cmp
stc
iret
mov
cs
mov
xchg
sub
sub
add
adc
popf
ja
dec
pop
adc
adc
xchg
lahf
add
aas
xchg
stos
xchg
and
lods
into
hlt
out
outs
push
out
lds
jne
jae
test
add
jb
xchg
push
push
mov
stos
into
dec
out
into
pop
lahf
test
loopne
cmp
mov
sbb
fst
xor
xchg
push
lds
retf
mov
and
nop
pop
in
mov
jmp
imul
sbb
loopne
inc
das
addr16
nop
jbe
out
call
mov
cmp
push
rcl
jno
(bad)
(bad)
dec
jae
fsubr
sub
sub
push
pop
sbb
pop
xchg
inc
pop
lods
fs
sahf
out
and
mov
jecxz
jmp
add
cwde
or
ins
push
stc
pop
pop
jg
mov
retf
mov
outs
shl
cmps
inc
test
(bad)
in
mov
and
in
ja
add
das
cmp
push
aam
inc
sub
mov
cli
xor
data16
inc
mov
div
dec
dec
out
mov
cmps
pop
in
je
push
les
jge
mov
std
(bad)
pop
and
and
add
or
outs
adc
dec
push
inc
xor
xlat
mov
cwde
aaa
enter
call
jp
cmp
bound
xchg
adc
(bad)
int3
repz
sar
icebp
lods
dec
mov
xlat
popf
cmp
ja
and
push
add
mov
add
or
movs
jbe
xchg
dec
(bad)
outs
cmp
out
jno
push
in
pop
leave
push
push
xchg
cmp
push
icebp
movs
mov
aad
fnstcw
loope
aas
scas
mov
sbb
add
jecxz
cmp
loopne
mov
xchg
lock
(bad)
dec
jge
repnz
mov
and
sbb
fisub
mov
sub
mov
arpl
in
std
scas
dec
inc
(bad)
adc
sahf
push
xor
or
mov
int
cmp
inc
mov
and
xchg
sbb
fimul
bound
xchg
test
xchg
lahf
inc
mov
xor
imul
ss
dec
add
dec
add
retf
imul
push
jge
xchg
fiadd
push
jl
stos
fcom
bound
hlt
lahf
je
mov
push
in
xor
push
sbb
jbe
sub
xor
jae
es
xlat
ds
pop
pusha
or
dec
and
lods
pushf
mov
push
mov
aam
cmps
pushf
into
cwde
adc
je
xchg
out
lock
jle
or
xchg
dec
push
movs
shl
ficomp
and
pop
inc
retf
cmps
mov
test
jl
mov
in
loope
jle
pop
js
mov
add
jns
mov
inc
loopne
imul
out
es
cs
jge
sub
in
jl
jge
pop
js
rcr
add
pop
inc
(bad)
lods
inc
adc
push
xchg
cmp
arpl
fdivr
xor
cmp
pop
lods
inc
xor
push
cmps
jnp
fwait
ss
shl
lods
push
mov
mov
repnz
push
mov
adc
sub
sub
daa
cdq
mov
imul
jmp
retf
jnp
test
call
jne
retf
into
jo
(bad)
xchg
cmps
int3
or
cdq
cmps
sub
sub
mov
mov
arpl
pop
popf
jecxz
pop
adc
xchg
aas
jp
mov
ss
or
xor
and
pop
mov
ret
push
fucom
mov
nop
outs
pushf
push
fild
push
push
cmps
add
test
jge
lock
and
sub
xchg
mov
and
push
xor
addr16
or
push
icebp
int
or
dec
lock
jnp
mov
(bad)
out
adc
es
push
test
cmp
and
mov
xor
mov
jbe
ins
push
mov
mov
push
mov
pop
bound
out
mov
fbld
push
test
shl
daa
push
sahf
test
mov
ret
scas
mov
out
fbld
ja
shr
mov
and
inc
inc
sbb
scas
sbb
in
mov
inc
call
shr
(bad)
addr16
jo
inc
cli
ds
jmp
push
sub
cdq
cli
sti
xor
mov
push
movs
lahf
bound
xchg
sub
sbb
clc
iret
ds
or
dec
add
int3
(bad)
data16
mov
das
and
call
popf
pop
ficom
pop
jmp
or
cmp
pop
out
outs
mov
push
call
jo
cdq
lock
in
mov
fs
stos
jmp
mov
sbb
inc
xor
sbb
rol
push
jne
daa
mov
out
push
fist
lds
cwde
outs
call
mov
pushf
and
mov
js
imul
jp
mov
cli
push
mov
pop
ds
into
sti
inc
lea
iret
cmp
rcl
mov
out
lahf
out
ds
fimul
jmp
add
hlt
ja
iret
daa
scas
in
je
sub
cmps
dec
push
jmp
inc
dec
dec
mov
pop
xor
dec
lods
sbb
pusha
pop
add
(bad)
ds
add
pusha
or
jno
mov
xlat
into
icebp
mov
push
iret
sbb
test
push
sub
movs
adc
fsub
stos
pop
cmp
mov
rep
test
jge
movs
dec
stos
jae
in
xchg
(bad)
cmp
push
ins
cmp
test
int
xchg
movs
xor
out
das
xchg
xchg
push
push
scas
sbb
or
or
inc
adc
add
adc
ja
rcl
mov
xchg
int
and
xchg
sbb
nop
call
cmp
pop
mov
cmp
add
nop
movs
lea
push
mov
(bad)
or
mov
dec
ret
aam
mov
(bad)
daa
ja
mov
dec
test
das
dec
mov
out
push
cmp
fmulp
mov
pop
mov
adc
mov
xlat
mov
xor
sub
scas
retf
outs
xor
adc
aad
and
stos
sbb
and
dec
out
lahf
mov
(bad)
fist
push
pop
enter
ins
push
inc
sbb
jmp
(bad)
and
sub
mov
fcom
jo
push
jp
std
pop
inc
out
cmc
pop
ret
nop
aas
in
jg
inc
test
popa
pop
inc
dec
xor
adc
dec
mov
retf
popf
xchg
movs
mov
mov
or
inc
mov
mov
xor
ins
mov
cmp
sub
jmp
jbe
push
xor
mov
cmp
jne
mov
cmp
test
jae
test
jmp
xor
or
movs
jno
in
and
ds
fistp
add
mov
loope
mov
dec
fcmovnu
sbb
sub
xor
js
add
push
retf
push
popf
jbe
(bad)
mov
out
gs
xchg
daa
jmp
fsub
jl
inc
mov
push
inc
pop
push
cmp
inc
push
cmp
ss
ins
(bad)
dec
fidiv
jmp
sub
xor
mov
push
imul
mov
scas
pop
out
cmp
xor
std
push
sahf
dec
jp
xchg
sbb
shr
sub
inc
aam
xor
data16
jl
data16
mov
cld
into
push
adc
dec
loop
cmp
mov
fnstsw
mov
or
and
mov
jnp
pop
repnz
retf
ins
jns
leave
and
or
push
outs
inc
xchg
mul
sub
mov
and
xchg
or
or
test
leave
ins
sbb
aam
fnsave
(bad)
fisub
jmp
xor
in
fmul
dec
cwde
or
fidiv
test
sbb
and
xor
mov
pcmpeqb
push
add
jp
cmp
aad
jmp
push
std
sub
(bad)
loopne
dec
or
xchg
push
pop
fimul
int
jnp
movs
push
jno
or
aas
dec
pop
(bad)
jg
mov
pop
xor
test
mov
jge
cmp
add
add
adc
out
aaa
inc
ins
fsubr
in
pop
in
sub
add
jp
sbb
and
or
inc
pop
or
int3
popa
dec
adc
xor
inc
add
icebp
jmp
sub
and
add
repnz
fwait
popf
(bad)
mov
mov
sbb
jge
hlt
clc
jne
xor
dec
add
xchg
out
cwde
cmp
xchg
repz
imul
adc
(bad)
outs
test
je
add
cmp
jbe
ins
imul
rcr
aaa
int
or
xor
cmp
sub
push
mov
sub
movs
sub
xchg
jmp
push
push
mov
shl
mov
fcomp
loope
sbb
mov
xchg
cmp
xchg
xchg
aam
test
out
push
inc
adc
xchg
push
movs
add
mov
cmps
sub
jg
pop
call
sub
(bad)
adc
pop
cmp
call
popf
push
faddp
(bad)
icebp
pop
sbb
enter
leave
xor
jle
push
(bad)
adc
push
es
xchg
jmp
(bad)
pop
mov
loop
mov
pop
test
mov
ret
int
pop
movs
dec
cmp
popa
fisubr
mov
cmp
jb
cmp
mov
add
xchg
jg
(bad)
not
outs
aas
inc
push
ins
dec
std
retf
stos
les
cmp
sub
cmp
ins
lahf
(bad)
cmps
and
and
js
es
mov
cmp
xor
out
adc
inc
and
ret
adc
out
xor
sahf
push
rol
sub
test
psubd
push
or
ds
jmp
jmp
outs
test
adc
loop
push
shl
pop
adc
push
mov
adc
or
cwde
sub
lahf
and
popa
mov
adc
je
popf
test
or
out
xor
ss
fcomp
call
sub
mov
fdivr
or
mov
mov
inc
inc
push
aaa
test
pushf
scas
in
jecxz
retf
mov
pop
pusha
jmp
loopne
sub
push
add
enter
pushf
pop
loop
mov
stc
ret
lock
and
mov
jno
call
xchg
adc
lods
les
jecxz
outs
ja
cld
stc
in
outs
les
rcl
imul
xchg
pop
shr
test
dec
inc
dec
daa
or
cdq
xchg
jmp
pop
sub
jl
mov
push
jecxz
add
and
mov
adc
mov
(bad)
cdq
inc
movs
outs
pop
dec
in
sbb
gs
scas
jmp
test
dec
popf
cli
or
dec
shl
pop
loopne
scas
push
cli
jo
mov
sbb
std
adc
imul
xchg
pop
outs
out
dec
ds
fadd
add
neg
jmp
mov
adc
scas
test
sbb
arpl
xchg
mov
adc
push
cmp
and
cmp
and
dec
call
pop
cmp
je
sub
jmp
mov
jmp
retf
jo
jl
and
cdq
sti
test
scas
inc
mov
pop
imul
aam
in
pop
xchg
inc
pop
push
xchg
sub
pop
dec
pop
mov
xchg
into
pusha
inc
push
and
mov
cmp
dec
cmp
outs
fwait
and
retf
dec
js
pushf
inc
inc
out
push
push
pop
inc
jno
(bad)
repnz
push
and
or
ja
jne
jns
adc
jno
jbe
or
mov
rcl
imul
aaa
outs
movs
pushf
jno
and
mov
dec
or
or
data16
jl
stos
sbb
rol
mov
fistp
scas
add
jge
rcr
and
in
inc
cmp
imul
fsub
imul
xchg
aad
and
and
push
icebp
int
test
pop
out
int
hlt
gs
jg
sub
jbe
mov
sbb
outs
dec
mov
stos
in
loop
mov
call
xlat
xor
gs
pop
push
ja
cmp
cld
pop
ret
mov
push
dec
or
mov
pop
pop
mov
jmp
outs
sub
popf
jbe
push
mov
jno
popf
mov
jg
ins
fisub
(bad)
imul
arpl
lods
inc
mov
sbb
push
cli
adc
cmp
xchg
std
or
jp
push
and
sub
mov
jb
sar
rcr
xchg
fnstsw
push
enter
jmp
xchg
xchg
jb
mov
aas
into
cmc
(bad)
inc
int
hlt
daa
fwait
mov
mov
lock
jl
mov
or
mov
inc
mov
mov
xlat
mov
js
push
or
pop
pop
mov
push
cwde
inc
push
movs
int3
in
cwde
push
ret
mov
sub
test
cmp
(bad)
push
dec
xchg
(bad)
mov
in
mov
sub
sub
mov
adc
or
push
jmp
in
mov
jbe
fisubr
jne
cmp
cli
xor
dec
xor
aam
dec
adc
mov
jbe
mov
ins
loope
add
mov
push
cmp
leave
popa
sti
(bad)
or
outs
sub
cmp
sub
outs
cmp
inc
cli
dec
sbb
mov
fisttp
or
mov
xlat
xor
das
jbe
cli
mov
sahf
sub
rcr
jmp
ret
xor
fldenv
mov
cmp
push
xor
mov
push
inc
mov
or
in
add
stos
dec
(bad)
pop
into
jnp
clc
or
sbb
mov
fcom
dec
jne
mov
icebp
jge
aad
cwde
inc
jle
add
xchg
test
out
and
jbe
push
xchg
and
enter
push
loope
in
mov
pop
sbb
or
mov
mov
cmp
outs
out
lahf
ins
sub
stc
cmc
jb
test
aad
or
sti
dec
test
cmp
hlt
fld
sbb
add
mov
mov
gs
mov
or
push
repnz
mov
popa
pop
shr
dec
and
add
pop
adc
xor
scas
add
rcr
cmp
fdiv
sti
mov
nop
imul
cmp
mov
(bad)
sbb
add
sahf
pop
xor
lods
sar
stc
das
imul
ja
cmc
retf
inc
lods
dec
fcom
call
repz
pop
retf
mov
test
fwait
imul
adc
cmp
and
lea
(bad)
xchg
mov
fnsave
das
out
inc
addr16
test
cld
hlt
dec
clc
push
shr
ret
mov
stos
push
sahf
inc
outs
movs
scas
sub
mov
cmps
dec
or
out
stc
pop
(bad)
pop
jmp
xchg
sbb
fsubr
or
hlt
mov
out
fisttp
sub
inc
loop
adc
cli
mov
mov
pop
out
lahf
adc
jne
call
cmpxchg
push
gs
or
push
push
pushf
icebp
aam
ins
sbb
ss
push
adc
scas
aas
pushf
inc
fidivr
push
dec
ret
repnz
push
fnsave
push
adc
test
sahf
dec
cmps
dec
mov
sub
pop
and
jge
cmp
out
and
adc
pop
or
or
imul
push
loop
inc
push
cmp
mov
sbb
dec
xor
das
scas
sbb
cmp
add
inc
outs
in
jl
(bad)
(bad)
jnp
xchg
hlt
jnp
cdq
das
and
adc
xor
popa
mov
pop
les
mov
ins
loope
ds
dec
movs
mov
jno
outs
or
pop
leave
cmps
xchg
xchg
movs
sar
fdiv
push
out
pop
and
iret
sub
adc
lds
pop
(bad)
inc
dec
shr
mov
jp
sbb
mov
inc
adc
jle
mov
cdq
mov
shl
mov
add
mov
add
daa
lods
iret
xchg
xor
dec
add
xlat
sub
fild
cmps
fadd
inc
mov
adc
jecxz
pop
mov
mov
jmp
dec
jmp
iret
cmps
xchg
(bad)
push
mov
mov
inc
xor
adc
leave
or
sbb
jmp
outs
mov
cmps
pushf
mov
lea
lock
lods
or
push
in
add
cwde
mov
rol
push
push
dec
inc
jnp
xchg
mov
adc
repnz
mov
shl
push
jp
out
jmp
push
outs
loopne
rol
aas
(bad)
out
or
sahf
push
loope
jno
pop
adc
push
sbb
pop
movs
mov
jle
dec
test
in
and
or
adc
lods
add
sbb
sti
sub
cmp
or
movs
cld
push
or
aas
js
sbb
ds
or
inc
hlt
adc
bound
(bad)
cwde
into
push
out
push
adc
movs
mov
xchg
cmp
jae
push
or
test
jmp
add
inc
imul
dec
les
jle
(bad)
loope
xchg
and
jp
test
out
mov
push
(bad)
jns
lock
sbb
repz
lds
enter
ja
cli
or
lds
sbb
int3
call
pop
xchg
mov
sub
int
aad
std
stos
or
repz
aad
inc
lea
adc
sahf
fdivr
aaa
loop
lds
loopne
je
aam
pop
sub
push
fdivr
jbe
sbb
fisub
and
add
jne
push
fnsave
lods
faddp
fcomp
xchg
loopne
xchg
push
mov
repnz
retf
pop
mov
xchg
scas
movs
out
or
jns
cmps
fistp
and
adc
push
push
(bad)
sbb
mov
idiv
adc
mov
out
imul
pop
pushf
shr
jecxz
je
xor
push
mov
das
inc
lods
icebp
or
out
pusha
fiadd
leave
xchg
ret
mov
imul
aad
mov
mov
es
jmp
cdq
dec
mov
clc
dec
push
pop
mov
fdiv
dec
scas
pop
retf
sub
lock
sub
push
stos
sub
mov
ins
adc
and
push
mov
(bad)
out
or
rcr
mov
xor
push
arpl
xchg
ds
xor
jle
xchg
(bad)
jo
xor
dec
fdiv
xlat
adc
sbb
test
lock
icebp
fstp
push
and
js
jo
loopne
push
(bad)
std
out
shr
out
mov
je
xchg
sbb
or
es
iret
add
adc
cmps
adc
xor
jnp
dec
xor
and
mov
jmp
div
fcomp
inc
jns
out
xor
iret
cmp
stc
out
ret
out
stc
data16
and
xor
sar
jne
nop
pusha
jmp
out
cli
scas
shl
rcl
out
inc
push
sbb
fsub
movs
or
xor
popa
inc
pusha
cdq
mov
inc
icebp
dec
int3
sub
push
(bad)
xor
stos
daa
(bad)
mov
int3
inc
cmp
sub
jecxz
gs
cmp
clc
add
xchg
aam
out
mov
mov
inc
stos
sbb
outs
cmps
ins
push
mov
sub
dec
xor
inc
xchg
cmps
push
inc
out
push
jno
push
or
cmp
jge
aam
cld
push
dec
cmp
leave
jne
jne
(bad)
(bad)
lods
std
jp
das
jl
gs
fild
adc
push
call
mov
out
cmp
jne
xor
add
sahf
fnsave
mov
test
ins
rcr
enter
arpl
adc
cmp
mov
dec
cmp
sub
inc
xor
rcr
ins
dec
inc
pop
mov
add
scas
mov
popa
push
or
fsub
mov
push
das
mov
shl
ins
jg
mov
int3
push
dec
adc
icebp
sbb
dec
mov
mov
pop
scas
in
frstor
or
pop
dec
das
pop
jmp
pop
shl
dec
pop
sahf
xor
inc
daa
mov
xchg
xchg
in
stos
lds
sbb
(bad)
(bad)
ja
dec
out
pop
cmp
out
dec
into
outs
out
bound
mov
xor
(bad)
cmp
push
sbb
pop
mov
dec
out
push
icebp
fs
mov
xchg
dec
mov
enter
xor
push
pop
hlt
dec
mov
jb
ins
xor
xchg
out
jle
mov
dec
add
xor
push
int
int3
inc
cmp
enter
jns
inc
mov
and
stos
arpl
fdiv
dec
xor
ins
ds
or
repz
shl
pusha
aas
cmps
ret
stos
mov
dec
ret
inc
adc
add
jl
mov
adc
loop
loope
fwait
cmp
push
and
add
mov
inc
fadd
xor
aam
scas
js
in
popa
push
inc
fistp
cld
in
cmps
retf
loop
dec
lock
clc
dec
int
aas
pop
into
shr
jns
dec
sbb
in
cmp
sahf
fistp
xor
and
sar
xchg
in
xchg
mov
or
clc
fsub
aad
adc
xchg
movs
es
es
rcr
in
push
xor
enter
push
shl
add
fs
push
mov
pop
sbb
mov
push
mov
out
gs
lods
fcom
loop
and
sub
ret
shl
adc
es
movs
sbb
fs
stc
(bad)
std
mov
pop
push
mov
fisubr
jo
adc
sub
jg
scas
push
fwait
nop
inc
cmp
xlat
gs
xchg
and
stos
mov
or
pop
inc
enter
mov
jmp
mov
xchg
inc
and
gs
out
cmp
shl
cmp
mov
push
and
pop
mov
lahf
xor
xlat
jno
jmp
loopne
mov
inc
push
jge
sub
mov
jecxz
outs
scas
in
scas
pop
retf
xchg
xor
pmaddwd
gs
aas
xchg
xor
popa
dec
in
push
ds
inc
cmp
(bad)
std
mov
xchg
addr16
add
inc
int
sbb
adc
mov
cmp
push
sub
aam
mov
mov
push
cld
gs
enter
outs
jl
mov
in
sbb
jb
mov
sahf
(bad)
das
ins
jmp
pop
ins
cmp
jle
mov
stc
out
sub
jns
lock
pop
or
fadd
jne
iret
push
cld
rcr
mov
mov
jmp
mov
mov
dec
mov
mov
stos
xchg
and
aam
cld
aas
cmps
jb
and
or
cld
xchg
hlt
inc
in
(bad)
mov
call
cmp
test
icebp
dec
mov
lahf
adc
push
mov
add
neg
je
adc
icebp
push
push
stc
jg
dec
out
shr
xchg
sbb
stc
dec
dec
jmp
out
popf
bound
scas
mov
sbb
ja
into
call
rol
adc
cmp
ds
and
sub
push
popf
xor
mov
xchg
or
or
jmp
fistp
popa
int
lods
outs
movs
fldcw
seto
scas
(bad)
cs
je
in
aas
int3
sahf
push
cmp
adc
sub
sbb
gs
hlt
test
adc
adc
int
cmp
add
stos
outs
sbb
pop
js
xchg
mov
sub
or
(bad)
addr16
sub
inc
in
call
cdq
fnstsw
push
pushf
test
dec
add
pop
dec
or
push
cdq
inc
lds
xchg
fstp
mov
sbb
sti
cld
ror
mov
out
lods
enter
test
dec
jle
popf
xchg
mov
xchg
push
mov
(bad)
ins
cdq
pop
iret
clc
push
in
pop
mov
mov
fwait
inc
adc
pop
or
pop
sbb
push
les
int
mov
inc
add
mov
aaa
cmps
cdq
xchg
push
jnp
aam
pop
cmp
inc
jne
adc
shl
dec
sar
push
or
or
mov
and
(bad)
loopne
out
sbb
xor
daa
xor
cmps
retf
cs
cmp
sti
lock
adc
inc
in
(bad)
js
push
daa
cdq
cs
jnp
mov
and
in
icebp
(bad)
cmps
dec
(bad)
gs
push
cli
xor
push
mov
aam
out
dec
gs
inc
and
cmp
mov
xchg
imul
inc
mov
inc
push
(bad)
adc
js
lock
pop
cmp
push
aad
fs
mov
cdq
push
inc
sub
push
dec
mov
adc
mov
icebp
cmp
dec
pop
into
pop
mov
in
pop
cmp
les
movs
(bad)
add
sub
xor
mov
clc
retf
push
ja
mov
int3
jns
pop
adc
sub
xchg
mov
xlat
push
popa
pop
mov
dec
retf
fstp
inc
xchg
dec
or
fisub
push
test
sub
adc
lock
std
jg
jb
pop
out
(bad)
mov
int3
or
pop
out
xchg
out
push
jl
or
pop
mov
inc
xchg
and
pop
retf
test
(bad)
mov
jmp
arpl
mov
and
mov
add
push
mov
out
xor
div
jne
rcr
dec
inc
mov
cwde
movs
inc
jmp
pop
out
fdiv
arpl
lds
retf
mov
int
push
inc
and
ret
dec
mov
xchg
cmp
pop
fs
shr
inc
ss
or
adc
dec
sub
int3
mov
and
xchg
dec
out
aaa
shl
outs
mov
ret
push
push
add
fwait
and
sub
pop
imul
out
out
pushf
and
aad
dec
stos
daa
pop
test
inc
sbb
test
adc
pop
cdq
sbb
addr16
jp
adc
sub
mov
loope
in
mov
test
fisubr
ds
test
call
dec
pop
outs
shr
les
pop
push
push
mov
sar
test
pop
mul
repnz
jnp
push
jne
mov
lea
push
lock
js
xchg
aad
(bad)
stos
cwde
ffreep
inc
push
xlat
dec
sbb
sub
int3
scas
jmp
inc
jg
into
rol
outs
call
or
ds
sar
scas
fsubr
lea
or
int3
hlt
inc
mov
sbb
fdivr
call
(bad)
mov
(bad)
out
ret
sbb
test
pop
sbb
ja
adc
mov
pop
or
cmps
cmp
dec
test
add
push
and
xrelease
push
mov
int3
or
daa
sti
loop
adc
sub
aaa
jp
xor
lea
in
xchg
xchg
ins
sbb
push
inc
addr16
and
push
fild
and
mov
sbb
stos
mov
stos
adc
mov
and
xchg
adc
or
mov
adc
(bad)
out
ret
outs
stos
stc
sti
and
mov
aam
sti
lahf
outs
jno
lds
xlat
fild
jle
inc
jge
repnz
ins
mov
pop
in
jecxz
push
pop
addr16
inc
nop
fadd
or
sbb
adc
lahf
loop
fadd
scas
fidivr
cld
push
xchg
cmp
(bad)
jle
test
sbb
or
sub
xchg
add
scas
inc
sbb
aam
mov
movs
pop
popa
sub
fist
icebp
outs
cmp
sbb
cmps
xchg
ror
lock
les
push
scas
jbe
add
xor
cmp
and
xchg
movs
popa
test
cmps
lock
addr16
xor
rcl
shl
test
mov
dec
lock
or
addr16
fisttp
inc
bound
mov
aas
das
in
into
xchg
sti
rcl
retf
pop
test
stos
int3
cs
jl
and
jp
cmp
bound
sar
adc
fst
xor
jo
int3
les
mov
push
sub
dec
shr
daa
inc
lock
ds
(bad)
sub
cdq
pusha
xchg
jne
retf
cmp
push
ficom
dec
enter
mov
push
and
inc
cld
mov
and
jno
aas
rcr
mov
fnsave
loopne
movs
push
jge
sub
test
xor
or
pop
sub
mov
outs
push
cmp
adc
xor
cli
les
inc
adc
aas
fbstp
pop
xchg
aad
call
inc
jg
pop
add
dec
test
ja
mov
test
jne
push
adc
pop
jo
mov
xlat
mov
xchg
push
push
sbb
and
push
sub
popa
cmp
cdq
mov
lods
sbb
call
sahf
je
movs
jmp
xchg
shl
in
out
push
inc
cmps
mov
lea
aaa
fbstp
dec
jg
sti
sub
dec
cmp
sbb
push
jb
adc
mov
cdq
dec
jb
mov
aad
call
or
in
push
push
push
inc
mov
outs
mov
retf
and
lods
enter
mov
data16
retf
sahf
pop
cld
mov
fdivr
sahf
adc
mov
xor
sbb
pusha
inc
ins
or
jmp
call
or
push
jae
jbe
arpl
std
sbb
xchg
add
sbb
jo
mov
sbb
in
cmps
xchg
push
fs
mov
or
mov
mov
pop
cmp
sahf
push
xchg
xchg
sar
dec
push
pop
popf
fcom
add
in
and
jge
js
inc
daa
xor
mov
xor
xor
stos
push
ror
jno
add
sub
dec
test
iret
xor
retf
sub
(bad)
jbe
push
outs
sbb
mov
mov
mov
cmc
fdivr
inc
jge
test
sub
sbb
xlat
lods
or
inc
nop
sub
dec
bswap
push
push
push
(bad)
pusha
cwde
cmp
pop
leave
dec
cs
or
mov
pop
loop
bound
popf
xor
outs
mov
mov
add
imul
mov
jae
and
in
mov
lods
cmp
and
aaa
js
cli
jno
push
data16
(bad)
jb
test
push
fwait
xor
fidivr
mov
push
fidivr
jp
xchg
cmps
lods
jmp
gs
mov
push
mov
fld
pop
enter
or
cli
push
ja
pop
clc
into
xor
stos
rol
xor
test
mov
fwait
and
lea
mov
mov
or
scas
mov
add
sbb
imul
in
push
popa
jg
push
stos
or
xchg
xchg
aad
popf
mov
retf
icebp
shl
ret
cli
mov
push
adc
mov
inc
iret
mov
mov
push
js
mov
out
retf
mov
shr
dec
dec
test
sbb
leave
sub
retf
adc
ins
mov
call
sahf
lahf
leave
data16
cwde
rcl
mov
out
dec
out
addr16
in
mov
xor
cwde
out
add
sbb
aad
std
ret
cmp
in
adc
test
mov
sahf
sbb
ins
cmp
test
loop
xchg
nop
dec
and
jp
sbb
fist
inc
and
ss
mov
cs
mov
mov
shl
in
shl
xchg
fld
or
cmp
movs
and
pop
xchg
pop
lahf
add
sbb
cmc
test
add
inc
sub
cmp
push
data16
popa
outs
pop
jno
sbb
mov
jo
or
adc
nop
adc
mov
or
out
and
dec
int
icebp
repz
pop
dec
sar
pusha
shl
xchg
mov
jecxz
in
or
add
sbb
inc
dec
push
xor
cmp
and
inc
mov
jg
retf
mov
sub
xor
mov
and
out
sti
or
aad
xchg
nop/reserved
cmp
inc
push
mov
xor
call
dec
ds
pop
or
stos
dec
mov
leave
inc
dec
mov
push
push
jmp
shr
sub
or
test
jge
xor
and
inc
xor
lds
push
fs
mov
in
xchg
cli
adc
shl
test
jb
sbb
sti
scas
xor
xor
outs
mov
push
aam
fsub
xor
inc
jnp
and
sub
push
mov
add
xchg
test
cmp
jmp
lahf
sti
push
in
shl
aaa
in
in
repnz
jo
add
lods
shr
test
daa
mov
fwait
inc
mov
mov
xchg
aaa
out
stos
mov
enter
jge
inc
shr
sahf
sahf
lods
xchg
push
sbb
push
shl
rcl
jb
fimul
mov
shl
cwde
pop
xchg
aad
add
dec
mov
rol
mov
rcr
jl
iret
jae
pop
repnz
jmp
inc
jge
aam
dec
int
out
lds
arpl
dec
pop
scas
or
fcomp
aas
mov
sub
shl
mov
push
jne
popa
push
shl
ja
ins
adc
repz
cmp
retf
mov
adc
add
popf
lds
fcmovne
and
cmp
pop
dec
push
imul
cmp
popa
mov
sbb
mov
enter
push
lea
int
add
arpl
and
(bad)
xor
push
jecxz
push
xor
movs
mov
iret
out
fidiv
cmp
and
mov
daa
clc
mov
push
dec
in
cmps
cs
push
sbb
call
sar
outs
jecxz
not
inc
loope
adc
pop
mov
into
movs
push
shl
repnz
sti
jmp
pop
retf
sar
shl
cdq
icebp
mov
or
addr16
mov
sbb
add
in
ss
push
mov
add
out
addr16
mov
adc
xor
mov
(bad)
jg
lods
fstp
(bad)
inc
or
call
fsubrp
fwait
mov
cli
inc
xchg
arpl
xor
ret
pushf
mov
retf
cs
mov
mov
add
jg
sub
or
je
mov
cmp
pushf
fsincos
loope
sub
fstp
not
test
mov
sub
retf
(bad)
jmp
(bad)
ja
sub
fist
cld
cmp
or
xchg
cwde
in
inc
sub
xchg
adc
or
iret
hlt
mov
imul
(bad)
dec
mov
push
and
sub
(bad)
sti
and
fwait
and
daa
dec
rol
aas
push
das
scas
sub
cmp
lock
pop
push
jge
mov
enter
mov
fld
(bad)
cld
scas
(bad)
cmps
ins
jl
mov
fdivr
and
inc
jmp
fwait
and
mov
lods
xor
or
or
sbb
js
sar
push
mov
nop
and
mov
inc
push
icebp
call
mov
push
sub
or
ret
pshufw
mov
call
test
pop
test
popf
push
jno
xchg
adc
pushfw
inc
xor
movs
jg
icebp
pop
add
lods
push
inc
out
out
test
mov
dec
sbb
mov
or
sahf
jns
pop
pop
(bad)
loope
push
data16
jbe
xchg
sub
aad
inc
(bad)
iret
ds
cmps
mov
mov
mov
adc
mov
mov
test
das
bnd
mov
or
pusha
jge
pop
pop
cdq
xor
add
rol
sub
inc
mov
loope
push
dec
jmp
mov
sti
ja
jnp
mov
sahf
sar
int3
rcr
push
mov
and
enter
inc
ret
retf
adc
cmp
or
push
mov
(bad)
popa
sbb
scas
sti
cli
dec
out
sub
std
aas
(bad)
loopne
retf
aad
aas
cmp
dec
inc
push
xchg
xchg
lock
fs
cwde
data16
add
inc
clc
lods
sti
or
enter
adc
call
adc
popa
and
push
adc
sbb
inc
jb
sahf
xchg
ds
adc
jae
pop
cwde
in
pusha
mov
dec
pop
repz
in
rol
out
or
pop
pop
mov
jae
mov
pop
jo
adc
sbb
inc
mov
movs
dec
mov
loope
push
and
lods
movs
test
lahf
push
push
mov
lock
push
fwait
lock
mov
inc
sbb
jp
cmps
rol
out
push
sub
xor
popf
(bad)
fisubr
adc
test
add
leave
dec
sbb
sbb
(bad)
shl
push
sub
pop
xchg
or
pop
push
push
hlt
ins
loopne
movs
ja
xor
mov
movs
sar
dec
ror
jns
lods
push
mov
ins
fwait
(bad)
or
jl
pop
stos
xor
cmc
inc
pusha
call
aad
mov
xor
nop
iret
push
(bad)
jl
mov
push
inc
(bad)
dec
pop
in
test
inc
cmp
(bad)
xchg
stc
test
inc
call
jl
aaa
adc
inc
lea
addr16
inc
mov
in
add
dec
inc
sub
loopne
mov
addr16
and
loope
jle
jbe
mov
dec
sub
add
xor
dec
loopne
iret
(bad)
jnp
sti
enter
aad
and
pop
jge
les
inc
inc
lods
mov
enter
ror
test
sub
and
pop
fld
(bad)
xchg
pop
adc
imul
pop
(bad)
in
cmp
btr
loope
xor
xlat
call
xor
add
sbb
paddb
cmp
js
cmp
dec
xor
aad
fnstsw
add
out
std
lds
add
cmps
push
pop
cmp
arpl
or
sbb
jp
les
dec
push
jo
xor
leave
stos
jle
mov
sub
push
xchg
pop
xchg
sub
adc
scas
loop
adc
mov
pushf
xor
pop
mov
push
xor
push
les
repnz
jmp
movs
xchg
mov
mov
fist
mov
add
cmp
mov
dec
dec
jecxz
inc
mov
xor
jnp
xchg
xchg
and
mov
push
(bad)
mov
cmp
(bad)
(bad)
in
test
jns
in
ins
mov
fimul
(bad)
and
add
adc
pop
push
push
xchg
mov
push
frndint
stc
inc
xchg
mov
sbb
retf
xchg
js
jne
mov
fisub
dec
iret
jle
cmp
je
mov
pusha
mov
loopne
adc
lock
and
mov
push
stc
pop
inc
fstp
xchg
jne
mov
dec
jmp
loopne
cmp
pop
jae
cmp
mov
cmp
out
pop
test
jmp
neg
cmp
ficom
jecxz
and
add
sar
mov
dec
push
pusha
dec
or
cld
es
outs
sbb
xchg
inc
or
mov
mov
or
ja
rcr
data16
cmp
ret
mov
nop
pop
aaa
rcl
or
jb
and
data16
ins
mov
dec
mov
scas
push
in
ds
shl
sub
mov
int
leave
dec
mov
sub
in
xlat
jns
push
scas
(bad)
adc
push
aas
addr16
add
mov
pop
xor
pop
cli
ret
loop
mov
and
jbe
and
cmp
sar
dec
jnp
cmp
mov
xor
xchg
add
fbld
jmp
adc
sbb
xchg
mov
inc
dec
ret
mov
rcl
shl
push
cs
mov
sub
and
sub
pusha
ret
jnp
fs
mov
add
push
fmul
mov
xchg
(bad)
push
js
(bad)
imul
jbe
das
pop
aas
dec
rcr
outs
jl
es
push
xor
fcomp
into
fist
lock
pusha
stos
or
mov
shl
add
dec
fwait
adc
ror
dec
push
iret
jo
jmp
xor
or
or
or
fiadd
jne
shr
fcmovnb
rol
jp
mov
retf
call
loope
mov
pop
pop
mov
cmp
cld
mov
ins
jmp
pushf
push
aas
lahf
adc
movs
ds
data16
pushw
mov
cmp
adc
add
and
iret
or
es
jp
or
sbb
arpl
lds
mov
mov
retf
ins
add
adc
cmp
cmp
sbb
push
xchg
cmp
dec
shl
jae
imul
enter
xchg
sub
pushf
pop
push
cwde
rcr
fnstcw
mov
popf
xchg
fwait
dec
out
push
(bad)
xchg
sar
(bad)
cdq
mov
jae
std
sar
or
mov
adc
mov
xchg
dec
dec
pop
xchg
repz
jns
scas
cmps
(bad)
mov
xchg
dec
mov
cmps
push
test
dec
and
out
loopne
fnsave
jnp
lods
dec
fst
push
xchg
mov
imul
pushf
inc
add
and
jae
stos
adc
and
(bad)
push
mov
mov
cvttps2pi
dec
fmulp
mov
std
ins
repz
mov
call
jmp
shl
cmps
imul
mov
or
rol
inc
mov
or
mov
dec
or
inc
pop
aas
add
xchg
jmp
xchg
fldenv
mov
hlt
adc
cld
mov
xor
fdiv
ret
retf
out
mov
and
sbb
mov
xlat
inc
push
and
iret
sbb
xchg
dec
jo
fcomp
and
jl
pop
shr
cld
or
bound
retf
mov
leave
(bad)
leave
repz
or
sbb
loopne
jbe
xor
mov
push
xchg
xor
imul
xchg
outs
outs
scas
mov
or
repz
mov
dec
mov
int3
cmp
(bad)
data16
adc
out
xchg
loop
rcl
icebp
sbb
xchg
lea
mov
je
jnp
pop
sbb
repnz
mov
repz
fidiv
mov
pop
adc
adc
xchg
daa
jp
icebp
adc
scas
pop
in
(bad)
or
mov
push
or
inc
xchg
pop
add
xchg
push
or
les
jge
loope
cld
adc
rol
ja
int3
cmp
in
(bad)
and
sub
dec
mov
fst
or
outs
mov
ds
add
mov
sub
pop
dec
jmp
sub
mov
out
fimul
iret
or
stos
ret
pop
ds
push
mov
(bad)
call
int3
mov
inc
iret
xchg
fiadd
xchg
inc
and
and
jl
xchg
test
pop
ins
fcomp
imul
jns
push
call
xchg
dec
mov
pusha
and
outs
scas
jbe
cwde
retw
std
stc
xor
movs
adc
mov
enter
sub
and
enter
xor
xor
mov
dec
push
ffree
inc
dec
fwait
jmp
mov
dec
stc
hlt
xchg
sti
push
out
scas
or
add
(bad)
xor
jg
mov
in
scas
and
or
mov
call
sub
scas
popf
adc
ins
or
jae
stos
mov
mov
ins
in
call
lods
mov
retf
and
into
sbb
xor
xchg
jmp
stos
pop
vmovaps
nop
and
mov
lds
std
jmp
dec
dec
fwait
loopne
repnz
push
push
mov
ins
jle
and
inc
push
cwde
push
(bad)
addr16
pop
add
repnz
cmc
or
xor
push
sti
sti
in
push
jmp
pop
ins
or
scas
stos
dec
imul
test
add
std
add
aad
mov
cmps
pop
mov
inc
push
adc
mov
(bad)
cmp
inc
out
push
repnz
add
mov
add
mov
test
and
aad
push
jle
leave
sahf
push
dec
cmps
mov
push
sti
movs
xor
jmp
(bad)
push
sub
mov
fcmovnu
mov
mov
test
inc
inc
add
enter
dec
iret
loopne
test
push
and
retf
jno
mov
xchg
fld
inc
adc
cmc
fiadd
pop
push
aaa
je
aas
dec
popa
hlt
xchg
ins
sub
lods
push
ds
mov
fs
pop
daa
mov
leave
push
aaa
pop
sbb
idiv
mov
jp
lods
leave
js
jecxz
dec
dec
and
rcr
movs
add
push
das
bound
loope
dec
popa
mov
mov
ins
(bad)
enter
fsubr
sub
mov
xlat
push
popa
cld
fs
add
cmp
fadd
cmp
and
push
ja
mov
dec
cdq
adc
test
xchg
xor
rcr
inc
fwait
push
aad
outs
and
popf
retf
inc
mov
jmp
jnp
adc
pop
popf
js
lahf
cmp
add
push
add
cmc
jbe
in
nop
call
mov
xchg
jbe
movs
or
sahf
sbb
adc
mov
and
int
sbb
or
test
push
inc
ret
sub
adc
push
mov
clc
ds
ret
loope
mov
inc
lock
jno
mov
mov
sbb
sub
out
sbb
inc
shl
and
xor
outs
stos
sbb
out
mov
add
call
fyl2xp1
int
jmp
repz
test
idiv
push
or
repnz
inc
movs
fmul
movs
gs
repnz
mov
lods
je
(bad)
pop
iret
or
loop
js
add
lahf
xchg
in
hlt
push
fistp
xchg
add
cdq
into
popf
fwait
jb
call
stos
addr16
jle
fst
loope
push
sub
push
push
enter
push
push
cmp
aaa
or
jp
bound
inc
xchg
pop
mov
inc
mov
and
mov
cmps
push
in
or
sub
pop
and
push
int3
cmps
or
movs
adc
clc
jae
mov
jmp
ret
fwait
push
dec
fwait
sub
ss
(bad)
mov
out
fldcw
sub
das
pop
mov
xor
adc
hlt
xchg
bndldx
and
and
inc
mov
pop
pop
adc
add
stos
or
jge
sub
out
enterw
xor
and
jns
fldenv
xlat
push
hlt
jns
sahf
add
std
or
xor
mov
cli
push
mov
(bad)
cmp
dec
xchg
inc
sub
and
dec
test
mov
sbb
test
cmp
push
push
outs
out
push
jae
xor
inc
xchg
iret
mov
cmp
xchg
cmps
div
pop
(bad)
daa
add
xor
movs
add
mov
jl
call
xor
pop
push
pop
jno
test
fimul
dec
ja
mov
dec
mov
xor
pop
in
pop
daa
call
pop
(bad)
push
dec
gs
fs
pusha
(bad)
ret
mov
test
xchg
pop
fld
pushf
repz
push
rcr
ins
data16
dec
push
ss
movs
cmp
and
mov
out
jecxz
loop
ja
loop
cmp
test
jnp
fmulp
loope
es
cmps
and
or
int3
cmp
dec
and
push
call
icebp
xor
push
xchg
and
add
cmp
fcmovbe
loop
stc
and
out
mov
stos
lods
mov
adc
push
mov
mov
test
imul
mov
sbb
sub
les
pop
and
jo
jbe
jno
push
loopne
pop
in
test
cmp
je
push
push
xchg
and
sbb
adc
fisub
leave
in
xor
bound
inc
cmp
or
mov
or
or
mov
sahf
nop
pop
xor
ss
push
cmp
sbb
lods
lahf
stos
hlt
bound
inc
inc
outs
pop
div
xor
xchg
cdq
out
(bad)
scas
icebp
js
(bad)
xchg
outs
sub
mov
hlt
ins
pop
cmp
mov
nop
sahf
sub
sub
or
adc
sbb
xor
outs
add
popf
push
pop
pop
xor
lods
xlat
clc
out
and
inc
out
jmp
pushf
mov
cdq
push
repnz
xchg
inc
bound
push
mov
mov
mov
or
push
jle
loopne
adc
mov
mov
add
out
into
jo
pop
mov
arpl
out
retf
outs
hlt
and
mov
adc
les
dec
inc
add
aam
stos
fnstenv
jge
sti
fcom
fnsave
inc
out
cmc
push
xor
jno
jne
xchg
mov
ins
inc
pop
rcr
gs
in
(bad)
jp
ja
dec
fsubrp
mov
aad
jl
push
mov
outs
mov
in
shl
jle
data16
mov
add
cmp
sub
out
fist
iret
pop
xchg
dec
popa
fwait
xchg
adc
mov
add
stos
das
jo
outs
jnp
fist
int3
xor
in
push
sbb
lahf
enter
out
jge
xchg
enter
add
movs
sbb
jnp
xchg
fstp
test
pop
xchg
mov
cwde
or
rol
jns
les
push
das
mov
call
push
sbb
jle
jmp
imul
movs
iret
iret
daa
xlat
sbb
sub
(bad)
fiadd
xor
movs
jmp
je
enter
ret
(bad)
xchg
xor
(bad)
adc
mov
lods
mov
add
mov
xchg
out
pusha
pop
(bad)
ds
jmp
push
fidivr
out
pop
scas
sbb
dec
icebp
icebp
stos
les
pop
xchg
mov
fst
cmp
mov
sbb
xchg
lods
and
movs
(bad)
mov
out
push
xor
sub
mov
loopne
cs
ins
mov
cmps
inc
adc
shr
xchg
mov
push
xor
push
or
push
les
mov
push
mov
pop
cs
inc
lock
adc
call
mov
movs
stos
pop
xor
push
adc
imul
ds
fistp
jnp
cmp
and
dec
add
xor
arpl
xchg
loope
xchg
out
popa
and
fcmovb
lock
dec
jmp
cs
xor
aaa
jp
movs
push
mov
mov
ret
mov
adc
fs
sahf
jle
(bad)
(bad)
icebp
push
pop
retf
fs
movs
out
sahf
sahf
int3
sbb
ins
dec
mov
mov
(bad)
popa
(bad)
in
pop
sahf
xor
cmps
hlt
in
out
call
call
out
adc
les
pop
cmp
lods
ins
inc
lds
ret
fnstsw
and
js
push
fs
add
adc
scas
dec
adc
cmps
mov
pop
push
adc
pop
outs
add
sub
mov
rcr
or
icebp
fwait
push
xor
push
mov
pop
sbb
xchg
jmp
fstp
ss
jmp
add
ret
pop
pop
xor
push
inc
pop
push
(bad)
jne
test
scas
loop
in
jg
int
push
add
shr
push
shl
inc
adc
imul
mov
sub
cdq
ins
adc
adc
push
pusha
rol
ds
cmp
aas
loopne
push
pop
pusha
and
sbb
pop
cmp
pop
sbb
in
cmp
push
and
pop
mov
sbb
mov
adc
adc
dec
pop
imul
xchg
(bad)
pop
jmp
jnp
mov
mov
pop
dec
jmp
cmp
aas
xor
(bad)
repnz
mov
sti
jp
data16
lods
mov
mov
sbb
adc
xchg
mov
jo
jno
cld
inc
je
push
mov
sbb
mov
cmps
fisub
call
sar
stos
add
dec
inc
mov
fsubp
loop
cmc
xor
xor
xor
data16
popa
stc
mov
jbe
int
imul
jo
sbb
pop
sub
sbb
fcmovb
jb
jbe
das
mov
into
push
imul
mov
sub
jns
push
add
pop
adc
push
mov
int3
mov
mov
retf
adc
jl
mov
sbb
into
and
jno
and
add
mov
jbe
fwait
mov
out
pushf
push
sbb
aas
ret
xchg
(bad)
int3
xchg
and
xchg
sub
inc
fbld
scas
pop
adc
inc
nop
icebp
sub
jno
cmp
inc
or
int
(bad)
rcl
xchg
jno
je
imul
add
jo
inc
pop
out
add
js
ja
sub
mov
push
jne
xor
push
test
push
inc
xchg
adc
dec
push
stc
hlt
stos
cmps
or
adc
or
cmps
je
cmp
xlat
xor
lds
mov
clc
(bad)
out
aaa
pop
and
cmp
pop
test
mov
mov
loop
or
shl
aas
jl
es
lods
sub
cmp
jns
add
in
outs
and
mov
push
stos
lea
add
mov
push
shl
mov
jnp
sbb
cmp
mov
(bad)
sbb
iret
aas
retf
mov
xchg
xchg
in
xchg
pop
sbb
fisub
ret
retf
scas
push
lods
mov
(bad)
mov
mov
pop
add
in
or
movs
fwait
mov
std
imul
fs
out
call
ret
and
pushf
enter
adc
(bad)
repnz
data16
add
je
loope
xor
ss
xchg
sbb
pop
test
inc
adc
adc
leave
scas
int3
jo
es
mov
fild
(bad)
mov
arpl
cmc
mov
js
into
xor
and
pop
cmp
dec
xchg
jmp
lods
rcr
fst
dec
cld
call
dec
or
add
es
xor
test
test
mov
xchg
not
mov
ffreep
mov
inc
call
call
loope
mov
push
hlt
std
xor
retf
push
lods
add
pop
mov
mov
or
dec
dec
push
fsubr
and
dec
xor
add
push
adc
aad
sbb
cmp
pop
xchg
(bad)
fistp
cli
add
inc
(bad)
cmc
mov
xchg
cmp
ret
push
xor
cmp
cmp
fsubr
shl
mov
jle
leave
hlt
retf
mov
sub
cmp
mov
retf
inc
rcl
lods
jge
jmp
or
pop
loopne
cli
inc
fild
mov
(bad)
cld
lahf
aaa
sar
pusha
inc
xor
cmp
jb
add
into
xchg
retf
imul
lods
in
mov
cmp
es
push
mov
mov
lahf
mov
and
dec
sbb
push
les
loop
scas
add
or
or
mov
or
jmp
mov
and
mov
push
gs
ficom
push
or
add
pop
std
clc
(bad)
jecxz
mov
inc
cmp
inc
call
and
ret
xor
mov
or
mov
out
lock
pusha
jae
adc
mov
push
repnz
push
(bad)
fnsave
jnp
jns
mov
rcr
clc
sar
or
fild
ja
xor
push
adc
adc
sbb
mov
pop
add
mov
rcl
jle
push
and
cmp
pop
neg
hlt
dec
push
jl
std
pop
ficomp
adc
scas
sbb
(bad)
xchg
fwait
cmps
mov
ror
lds
xor
mov
scas
lahf
call
mov
xchg
xor
mov
sar
loop
pop
jbe
add
mov
push
in
jmp
jl
or
jnp
dec
test
xchg
jnp
test
nop
xor
retf
adc
aas
ins
push
pusha
repz
mov
jno
inc
and
repz
repnz
push
or
test
mov
sbb
mov
sub
imul
ret
add
cli
ret
in
inc
addr16
repz
aad
dec
idiv
sbb
loopne
hlt
je
arpl
imul
mov
sbb
mov
ds
aam
xor
fstp
dec
jb
loopne
pop
sar
mov
mov
push
into
pop
mov
ficomp
xchg
push
mov
call
inc
ins
sbb
add
out
mov
mov
push
std
inc
and
pop
jge
xchg
mov
mov
lahf
pop
pop
and
pop
inc
scas
adc
mov
lahf
movs
(bad)
pop
dec
test
dec
dec
rcl
ins
xchg
push
push
out
inc
push
mov
xor
mov
or
mov
cmp
outs
cmp
xchg
push
add
cdq
movs
ror
pop
sti
cmp
sub
rcr
rol
in
or
jns
hlt
jle
lods
and
inc
mov
jnp
pop
ss
mov
mov
adc
xchg
scas
(bad)
mov
enter
push
lods
movs
mov
cmp
xchg
pop
pop
fadd
adc
cmp
inc
(bad)
dec
dec
pop
sub
cmc
push
xor
call
pop
pop
sub
imul
cmp
mov
stc
outs
push
xor
ret
fld
pusha
cwde
mulps
sub
in
popa
in
add
pop
and
and
cmps
mov
sar
dec
iret
mov
sub
xor
shl
pop
out
sub
jmp
sahf
mov
push
test
mov
fld
or
(bad)
out
mov
repnz
mov
ins
enter
jmp
shr
adc
sti
inc
xchg
addr16
inc
xor
popa
(bad)
sbb
jae
das
int3
aad
sbb
out
dec
mov
adc
sub
ins
mov
in
fidiv
xlat
push
dec
jo
add
int3
xor
mov
or
mov
push
out
(bad)
dec
pop
cld
jl
lock
mov
lods
mov
inc
dec
mov
mov
mov
stos
test
shl
mov
mov
and
xor
mov
mov
sub
(bad)
lods
(bad)
int
xchg
loope
xchg
(bad)
rcr
mov
xor
mov
dec
pop
dec
and
push
out
fcomp
cmps
xor
mov
mov
out
inc
movs
mov
movs
xor
mov
mov
in
xor
rcr
jmp
int
xchg
sbb
in
push
cwde
add
leave
pop
js
in
hlt
scas
push
(bad)
push
mov
pop
(bad)
mov
pop
mov
(bad)
fsub
sbb
mov
repz
xchg
dec
mov
lds
push
in
xchg
imul
cmp
lahf
pop
or
cwde
adc
mov
or
aaa
(bad)
pushf
cdq
pop
push
ret
or
xchg
rcr
cli
sbb
cmps
xor
int
jmp
jp
sbb
out
or
cwde
(bad)
and
sub
cmp
data16
iret
add
outs
lds
fs
out
adc
sub
push
aas
add
mov
outs
xchg
in
xlat
mov
and
dec
push
cmp
adc
or
addr16
sbb
sbb
adc
ror
sbb
pop
pop
cmc
dec
dec
or
cmp
cmp
mov
sbb
xchg
fsub
sub
xor
imul
cmp
inc
sub
into
pop
pop
mov
lock
imul
sbb
test
mov
shl
cmp
js
dec
test
mov
and
mov
cmps
leave
adc
in
xchg
mov
gs
mov
mov
jmp
or
cmps
std
dec
inc
mov
shl
lock
ins
adc
jns
sbb
and
pop
icebp
stos
(bad)
aad
or
js
(bad)
popf
outs
ror
mov
imul
jnp
scas
int
pop
mov
fdivr
jmp
test
pop
dec
sub
push
jbe
hlt
arpl
push
jg
(bad)
scas
inc
dec
adc
xchg
fld
sbb
dec
push
or
sub
test
std
push
stos
xchg
loop
pusha
mov
xchg
(bad)
clc
icebp
popa
iret
ss
push
cmp
movs
jp
push
and
ins
fs
pop
sub
lea
sub
sti
xchg
push
add
inc
push
push
js
add
int3
push
xchg
movs
jns
out
popw
cmp
mov
xchg
cli
fstp
sti
pop
pop
push
push
inc
cdq
mov
mov
rcl
dec
call
icebp
cdq
mov
ss
mov
add
popa
int
xchg
mov
cdq
lahf
xchg
xor
adc
daa
adc
test
out
icebp
leave
cmps
das
jb
inc
lods
push
add
std
pop
rcl
mov
aaa
shl
push
cmp
scas
mov
ret
fnstsw
test
push
pop
movs
out
test
je
enter
xchg
push
xchg
nop
push
xchg
loope
mov
xchg
pop
aaa
js
cmp
dec
cmc
frstpm(287
pushf
in
mov
and
out
popf
fwait
mov
call
pop
xchg
sbb
jl
test
ins
pop
in
pminub
es
push
sub
pop
cdq
sti
in
test
jg
daa
imul
int
iret
push
icebp
ins
add
cmp
jmp
xlat
adc
out
dec
sbb
sub
aam
mov
mov
jns
fcmovnu
cmp
loop
out
jnp
jbe
cdq
inc
xchg
or
pop
jmp
and
and
adc
aaa
sbb
xor
test
sub
jmp
mov
mov
jns
push
ror
call
lods
dec
stc
test
xchg
mov
or
ficom
xor
cmp
ror
mov
inc
cmp
loopne
xchg
inc
repz
retf
gs
(bad)
in
jnp
repz
mov
fwait
(bad)
fadd
jmp
sub
dec
ins
ins
mov
lahf
mov
xchg
and
(bad)
cmc
ret
cld
fisttp
push
sbb
rep
xor
push
jge
dec
push
mov
rol
int3
das
sub
and
out
scas
(bad)
jno
ss
(bad)
push
inc
jnp
cmp
(bad)
fisub
stc
int3
scas
sub
jle
mov
outs
pop
add
cmps
add
mov
test
iret
mov
sub
fstp
pcmpeqw
dec
hlt
gs
jp
lea
dec
jle
dec
bound
cmc
adc
dec
sub
push
int3
out
xor
push
xchg
and
jbe
rcl
int
mov
aam
test
std
retf
cmp
repnz
out
adc
les
mov
nop
adc
call
xor
cmc
pop
loop
xor
xlat
dec
fwait
lock
mov
mov
sbb
loopne
cmp
dec
push
js
fidiv
mov
mov
cli
in
jp
mov
(bad)
daa
(bad)
fcom
dec
xchg
or
mov
mov
pop
xchg
push
cmp
add
adc
jmp
ins
ret
in
xchg
pop
aas
xchg
sbb
pop
aaa
pop
sub
xor
sub
xor
std
jg
ret
retf
dec
cwde
sbb
int
mov
sbb
(bad)
leave
mov
cmp
sbb
scas
or
sub
cmps
add
jge
leave
mov
mov
lods
add
mov
adc
inc
xor
push
add
push
and
inc
cmc
mov
adc
aam
mov
pusha
aas
pop
jmp
lods
popf
sahf
dec
sbb
push
inc
and
xor
(bad)
fst
xor
jno
mov
daa
pop
mov
mul
or
je
lahf
cmp
int
shr
sub
xchg
cli
push
int3
in
out
xor
loopne
sbb
not
push
mov
sbb
aaa
mov
dec
je
inc
sti
imul
and
int
jne
aad
addr16
inc
loopne
imul
push
pop
pop
jp
push
jo
inc
add
jo
mov
mov
mov
lods
(bad)
mov
outs
sub
cmp
ins
in
cmp
jp
push
pop
adc
or
push
sbb
scas
scas
call
out
repz
call
jecxz
in
dec
adc
push
(bad)
cmp
sbb
and
cmovne
adc
outs
dec
mov
adc
and
cmp
aam
xchg
pop
loop
jns
lock
cmp
cwde
mov
je
ins
call
(bad)
movs
jne
xchg
push
sub
mov
jp
and
inc
mov
sub
lods
inc
fsubr
sti
adc
push
sbb
ficom
push
jl
pop
cmp
cmp
jge
add
out
and
dec
rcr
icebp
xor
popa
xor
mov
mov
pop
jo
inc
pop
fadd
inc
cmp
int3
out
repz
push
push
adc
out
lods
pop
adc
clc
or
popf
scas
add
mov
cmp
and
out
push
inc
not
or
sbb
sbb
call
loop
cmp
ja
fcomp
call
xor
test
jbe
mov
sahf
mov
adc
int3
ja
sbb
sub
(bad)
mov
icebp
mov
push
adc
fwait
and
test
cli
ins
pusha
out
sbb
or
outs
in
add
add
fdivrp
loop
pop
and
inc
and
aaa
enter
dec
inc
inc
fild
ins
push
add
xlat
mov
lods
jmp
xlat
pop
cmps
sar
scas
cmps
push
in
in
mov
addr16
jp
mov
add
mov
cmps
fninit
sbb
mov
dec
push
push
and
or
aad
fidiv
daa
inc
cmp
mov
lods
or
into
pop
ficomp
push
fiadd
jbe
push
outs
jb
repz
inc
pop
sub
lods
push
cmp
outs
xor
loopne
dec
daa
or
push
xlat
push
retf
pushf
aaa
sub
jno
(bad)
mov
ror
push
jle
push
(bad)
jbe
mov
and
scas
test
mov
pop
mov
sahf
ret
xlat
cmp
int3
dec
sbb
mov
ins
mov
enter
ss
jg
daa
add
push
sbb
ret
addr16
jl
std
xor
rcr
(bad)
int
popa
leave
mov
cmps
fidiv
mov
sbb
push
pusha
bound
pop
push
inc
mov
jb
pushf
xor
pop
xchg
(bad)
and
daa
dec
pop
out
fiadd
mov
jne
repnz
xor
mov
in
lds
(bad)
popf
xchg
add
jo
movs
stos
xor
xchg
pop
mov
data16
imul
pop
div
cmp
fisub
ss
push
add
pop
fmul
bound
imul
cwde
jbe
add
sti
mov
xchg
out
dec
sbb
sub
and
movs
shr
stos
inc
mov
mov
and
and
mov
(bad)
not
push
aad
fld
aas
clc
fsubr
(bad)
xchg
(bad)
jmp
fadd
jnp
add
push
pop
mov
psubd
neg
and
mov
sub
sub
outs
mov
fnstenv
pop
mov
ja
bound
aas
lahf
gs
fmul
sub
jns
imul
cld
cmp
mov
mov
or
xchg
jb
mov
mov
cmp
(bad)
rcl
push
out
cmp
push
fistp
enter
add
cmc
sahf
(bad)
dec
nop
retf
dec
or
mov
sub
mov
outs
dec
jo
xor
scas
popa
call
data16
push
iret
add
sahf
ja
dec
jb
in
sahf
mov
push
push
call
jne
fisub
mov
ret
jbe
xchg
call
loope
mov
cmp
ret
inc
sub
or
in
xchg
and
loopne
mov
cmp
push
aad
dec
cmp
xchg
push
cmps
cmc
add
jnp
and
mov
jle
outs
loop
(bad)
push
ja
add
repz
dec
xlat
sar
push
add
push
into
push
ss
clc
cmp
add
xchg
or
xchg
add
lahf
in
int3
cmp
cli
jb
mov
arpl
jp
movs
gs
outs
or
movs
add
fbld
mov
sbb
adc
cmp
add
fs
push
add
mov
pop
lea
imul
repnz
push
add
nop
cmps
mov
push
inc
ret
xlat
jmp
xor
lods
(bad)
mov
sbb
mov
into
push
xlat
push
aas
cmps
sub
cmps
push
cmp
push
rcl
gs
hlt
into
les
jg
stos
ror
adc
(bad)
nop
and
fdiv
sub
push
(bad)
lds
outs
jle
push
sbb
add
and
(bad)
sti
mov
mov
cmps
cli
lods
or
mov
cmp
mov
pop
adc
(bad)
in
and
lods
or
push
pushf
mov
int3
(bad)
in
(bad)
daa
sar
xchg
icebp
lods
jb
cmps
stos
jecxz
sbb
dec
jg
jp
mov
out
enter
mov
cwde
jnp
pop
(bad)
xchg
mov
jmp
sbb
mov
in
(bad)
call
stos
cmps
ins
std
mov
pop
fidiv
dec
push
(bad)
cld
sub
mov
cwde
xchg
sbb
repnz
pop
adc
xor
shr
ins
push
inc
test
pop
cmp
add
push
or
adc
stos
mov
lods
jmp
jle
xchg
lods
ret
xor
in
jae
stc
mov
fcom
inc
mov
cli
repz
cmp
mov
inc
sbb
mov
inc
leave
adc
pop
inc
mov
ds
sbb
jno
inc
test
mov
fidivr
mov
add
cmp
out
xor
mov
lods
mov
rol
scas
xlat
repnz
xor
sub
jmp
xchg
pop
in
out
pop
jbe
jmp
inc
jmp
inc
xchg
push
sub
and
mov
outs
(bad)
sbb
xchg
jnp
lahf
cmp
ja
push
pop
jae
sbb
out
test
mov
mov
cmps
sub
xchg
lahf
(bad)
movs
(bad)
adc
xor
out
in
jp
dec
cmp
or
aaa
pop
shr
inc
add
jmp
xchg
rol
xchg
pop
cmp
fisub
jmp
inc
test
dec
mov
mov
mov
jl
inc
and
add
into
mov
dec
jae
xor
aas
push
enter
xchg
inc
and
or
ja
sahf
(bad)
rcl
push
add
xor
(bad)
jno
xlat
push
clc
call
pusha
pop
imul
shl
ret
sti
sub
rcr
int
sbb
mov
xlat
movs
jmp
iret
lea
push
pop
call
mov
jbe
xor
aaa
sub
jge
enter
and
jge
mov
fistp
int
xlat
push
lahf
and
dec
add
cmp
cmp
mov
lods
sub
pop
(bad)
xchg
cld
cdq
mov
loop
out
mov
push
xor
and
xchg
pop
neg
fsubr
sbb
clc
outs
ins
repnz
rcr
xor
jmp
adc
dec
lock
add
cmp
fdiv
cdq
out
push
call
fld
add
push
cmp
scas
sub
jnp
mov
or
movs
mov
int
retf
push
add
fistp
jmp
mov
in
call
lea
mov
cmp
retf
mov
inc
jge
mov
xchg
icebp
pop
dec
mov
mul
adc
imul
int3
mov
and
mov
retf
and
mov
cmp
fsubr
adc
aad
cld
mov
shl
push
sbb
mov
jbe
jb
xor
xor
cmp
pushf
(bad)
out
loope
and
inc
retf
sub
mov
lds
push
xchg
push
scas
fld
cmc
cmp
pop
(bad)
ss
push
(bad)
fnstcw
xor
add
aaa
jo
push
rol
adc
int3
daa
lods
ret
hlt
inc
retf
mov
retf
into
or
cmp
mov
bnd
test
std
add
xlat
cmp
add
lds
hlt
push
out
add
js
xchg
xchg
(bad)
call
mov
lock
inc
pusha
xor
add
movs
cld
add
push
mov
dec
add
pop
lds
ins
pop
push
xor
lds
jg
in
cmp
outs
pop
mov
iret
push
mov
fld
pop
arpl
test
arpl
push
cmps
inc
repnz
lods
mov
jbe
scas
jg
adc
in
mov
cmc
out
inc
sbb
push
push
push
int
sahf
ds
jp
mov
in
aaa
push
sub
or
cli
in
out
mov
jg
iret
fwait
push
adc
jecxz
xchg
dec
and
cmp
or
lods
mov
fadd
cld
mov
stos
rol
pop
mov
mov
das
pop
fwait
(bad)
lods
outs
(bad)
hlt
(bad)
jmp
fldcw
mov
add
xor
inc
mov
pop
(bad)
push
or
les
xchg
daa
cmps
fabs
jb
or
mov
sbb
imul
ss
cld
cmp
pop
lds
fmul
pop
add
scas
out
int
inc
nop
jmp
(bad)
icebp
pop
mov
sub
mov
mov
shl
icebp
or
stos
lea
retf
mov
jle
loope
das
and
pop
jb
pop
imul
inc
test
dec
fisub
xor
call
test
shr
shl
(bad)
into
(bad)
ret
jmp
add
xor
outs
in
pusha
ror
cmp
int3
jge
cmp
xchg
jo
aad
outs
push
ret
cwde
stc
pop
ds
pushf
add
jp
lds
or
push
xor
bound
add
push
test
pop
dec
lds
add
aas
(bad)
arpl
shl
stos
cmp
enter
jb
jecxz
push
fisttp
aas
jbe
mov
mov
shl
push
mov
imul
add
shl
call
fisttp
stos
imul
push
stos
inc
mov
cdq
movs
cmp
pop
pusha
fs
jbe
retf
loope
imul
jno
je
aaa
jg
aas
in
sbb
jmp
(bad)
mov
jmp
push
in
in
clc
inc
cmp
xor
repz
adc
cdq
push
mov
popf
push
add
jae
je
jb
inc
sbb
in
jge
out
fdivr
out
adc
fs
cmp
jmp
sub
in
dec
in
fs
mov
loope
push
inc
addr16
ret
movs
(bad)
out
aam
xchg
or
mov
jle
(bad)
jmp
mov
ror
js
jmp
enter
dec
add
mov
or
lods
adc
scas
mov
push
(bad)
iret
and
fidivr
cld
(bad)
jns
fimul
or
ds
inc
rcr
into
xchg
mov
or
mov
lods
adc
fst
cs
popa
pusha
neg
imul
adc
and
mov
int
out
push
push
call
mov
mov
imul
pop
pop
stc
mov
pop
(bad)
clc
cmp
(bad)
dec
cmps
and
push
mov
mov
and
inc
scas
arpl
stos
int
test
push
mov
int
jbe
(bad)
fiadd
aaa
jg
aam
push
icebp
xchg
shl
jecxz
mov
push
cmps
fstp
pop
popa
les
cmp
hlt
or
mov
int3
dec
bound
add
mov
push
(bad)
push
(bad)
mov
cmp
ja
pop
mov
mov
test
xor
jb
and
push
sti
aad
mov
pop
mov
sbb
sbb
arpl
lods
retf
xchg
push
adc
dec
push
sbb
in
mov
pop
mov
push
and
cld
fld
jp
ror
outs
pop
jb
es
push
pop
sti
inc
hlt
sub
mov
daa
jb
call
pop
mov
daa
outs
hlt
add
or
push
sub
xchg
add
pop
mov
push
cld
mov
popa
and
mov
add
lds
xor
xor
mov
sahf
fidiv
inc
push
push
int3
push
pusha
cmc
cmps
dec
adc
stos
push
cmp
test
call
pop
push
ret
sti
mov
sbb
inc
ss
repz
(bad)
fcmovu
je
pop
jbe
push
ds
hlt
sub
and
movs
imul
add
mov
dec
mov
int3
mov
loopne
mov
push
mov
mov
fdiv
fst
aas
stos
mov
rol
xor
loopne
adc
jbe
cmps
mov
in
cmps
out
xlat
push
mov
mov
enter
cmps
and
adc
sbb
ins
xchg
and
push
or
xor
pop
cmp
out
sub
mov
shl
ss
into
popf
xchg
(bad)
mov
jbe
in
add
jbe
(bad)
mov
lods
rcr
xor
enter
sbb
ins
cmps
(bad)
loope
test
mov
cmps
mov
ins
aaa
fist
mov
jmp
sub
fdivr
dec
loop
cmp
ret
adc
or
mov
call
xchg
popf
and
mov
jmp
mov
mov
dec
xchg
inc
in
or
out
xchg
rol
paddd
aam
adc
xchg
push
adc
mov
bound
mov
add
(bad)
enter
pop
adc
das
iret
jbe
fiadd
cmps
enter
es
sub
in
dec
pop
fs
in
and
cmp
scas
mov
mov
movs
fld
jp
jmp
adc
nop
ss
fwait
js
sbb
and
(bad)
cli
cmps
in
cmp
lods
mov
sbb
mov
in
dec
mov
ins
inc
shr
pushaw
repz
imul
fst
es
movs
or
push
push
loop
mov
inc
add
gs
dec
sub
adc
pusha
rcl
push
xchg
inc
push
cdq
(bad)
push
adc
pop
out
cmp
mov
sbb
push
(bad)
mov
fcom
(bad)
mov
mov
inc
sahf
imul
xchg
jae
or
int
sbb
mov
add
out
add
or
fisttp
pop
dec
mov
(bad)
ins
xchg
add
pop
push
push
clc
outs
sbb
cmp
xor
ror
add
imul
mov
repnz
push
sub
out
xor
scas
loop
adc
in
push
ds
mov
stc
shl
or
test
mov
cli
ins
sbb
mov
mov
pop
jnp
dec
cdq
adc
test
stc
shl
inc
lods
xchg
mov
leave
adc
mov
repz
pop
cmps
fiadd
xlat
retf
or
mov
je
rcr
imul
dec
push
and
mov
or
mul
outs
jp
in
sub
es
enter
je
add
ficomp
(bad)
sbb
cdq
mov
mov
push
aas
je
pop
cmp
retf
push
jnp
ds
sbb
(bad)
adc
test
pop
xchg
xor
sti
int3
(bad)
push
dec
(bad)
or
(bad)
addr16
les
test
push
and
lea
xchg
adc
popa
adc
dec
xchg
in
cdq
(bad)
fnstcw
not
je
mov
rol
arpl
add
inc
fs
xchg
je
scas
inc
jecxz
fbstp
out
jmp
and
(bad)
ss
pop
lods
out
arpl
lods
xor
cmp
adc
pop
or
bound
dec
push
add
mov
sar
jp
cmp
push
(bad)
addr16
cmp
in
dec
sub
mov
outs
sbb
ins
aaa
mov
sub
sahf
out
jmp
mov
jecxz
mov
shl
in
fnclex
inc
lea
retf
mov
test
add
jecxz
inc
aaa
mov
pop
jo
(bad)
xor
or
aaa
push
lods
movs
mov
pop
sbb
call
cs
rcl
movs
out
inc
repnz
sub
adc
(bad)
push
add
fwait
in
mov
and
loopne
xchg
sahf
cmc
push
mov
add
adc
and
sbb
retf
shl
test
test
sub
pop
or
xchg
sbb
es
jge
xchg
mov
jns
mov
pop
add
addr16
(bad)
adc
or
movs
mov
out
pop
loope
dec
test
scas
jge
popf
jle
dec
iret
adc
(bad)
jmp
dec
in
lods
cmp
adc
dec
xlat
xchg
out
cdq
sub
shl
pop
and
adc
add
in
mov
mov
or
pop
cmp
push
aas
push
sbb
fcomp
xchg
scas
mov
inc
aaa
sbb
enter
add
cs
mul
xchg
rol
cmp
jp
in
and
fisttp
lock
ror
sub
retf
repnz
enter
popf
xchg
nop
jle
jle
mov
adc
loopne
jl
mov
lock
imul
sbb
scas
add
lahf
aad
and
jge
pop
mov
mov
in
movs
cmp
loope
shr
ins
int3
pop
fwait
xchg
sub
std
test
xchg
ret
sub
lea
scas
repnz
sub
mov
cmp
loop
dec
jbe
fild
sahf
inc
push
ins
xor
pushf
mov
cmp
adc
ficom
xor
mov
and
lods
mov
icebp
mov
arpl
daa
in
xlat
outs
pop
or
add
ror
sti
dec
enter
mov
mov
sub
jae
sbb
or
xchg
lea
mov
pop
and
mov
das
push
xor
jbe
sbb
pop
lds
dec
in
cmp
and
ds
pop
xchg
retf
out
xchg
sti
scas
xchg
push
lahf
add
sbb
jecxz
pusha
and
xor
add
shr
shl
nop
add
add
dec
mov
leave
lock
fwait
cdq
xor
loop
retf
in
(bad)
push
and
add
sbb
add
shl
mov
mov
push
dec
pop
pop
ds
iret
jl
outs
push
mov
ret
lock
xor
adc
mov
outs
sub
inc
push
lds
dec
retf
repz
bound
aas
mov
push
jge
dec
repnz
das
dec
mov
setno
aaa
imul
xchg
mov
jle
movs
and
and
lds
sbb
loopne
popf
cmp
aam
lods
add
ja
or
call
call
push
adc
xchg
cmp
(bad)
(bad)
call
icebp
scas
sub
or
mov
sub
mov
call
cwde
enter
mov
iret
neg
addr16
lods
or
sbb
xor
aaa
mov
pusha
or
push
jo
stc
xchg
movs
es
or
jb
dec
sbb
les
retf
lods
outs
push
push
pusha
jmp
push
push
divps
daa
scas
hlt
test
mov
pusha
cmc
js
fadd
mov
and
lea
cmp
pop
push
push
movs
ds
cmp
mov
shl
lds
enter
inc
xlat
popf
sbb
rcl
in
jo
mov
push
mov
cmc
dec
push
sub
ret
ret
xchg
xchg
push
cmp
es
push
xchg
adc
sbb
repz
aas
lock
mov
sub
inc
push
movs
adc
imul
jle
jbe
sub
shl
mov
inc
mov
fbld
cmp
rcl
push
fimul
and
sbb
adc
mov
mov
xchg
jb
or
fimul
pop
inc
in
cli
add
xchg
mov
mov
sub
pop
sbb
aas
or
jae
sub
inc
add
bound
lods
sub
mov
stos
pop
inc
jmp
inc
add
jne
sub
add
aam
xchg
mov
mov
int3
jb
mov
shr
mov
xlat
jb
cli
out
sbb
dec
and
aas
jbe
sahf
sub
mov
aad
iret
movaps
dec
cdq
pop
cld
adc
repnz
pusha
dec
pop
int3
mov
mov
shl
pop
arpl
cwde
push
inc
jge
add
cmp
inc
cli
lds
out
xchg
sbb
cli
fs
imul
popa
outs
xchg
mov
ins
push
test
cmc
mov
push
dec
pop
shl
loopne
ins
imul
cmp
xchg
pop
add
adc
push
sar
or
idiv
push
test
nop
sub
imul
xor
enter
inc
mov
in
sub
sub
cmp
shr
loope
aam
mov
sub
and
retf
rcr
sub
add
and
mov
lahf
dec
in
cmp
arpl
pop
aam
test
jae
test
dec
add
popa
fsub
push
movs
les
aaa
lahf
and
dec
in
std
or
mov
and
shl
loope
xor
lds
shr
call
icebp
pop
add
sub
daa
push
add
fld
cmp
dec
repnz
sub
call
pop
sub
push
mov
mov
bswap
hlt
sbb
out
and
jle
inc
push
jnp
add
xor
out
js
mov
pop
outs
pop
nop
(bad)
(bad)
mov
mov
pop
jne
and
sub
aam
popf
mov
pushf
xchg
mov
adc
jne
cs
mov
and
fimul
adc
mov
inc
rcl
cmp
adc
aad
stc
ret
movs
inc
lods
ret
mov
(bad)
jnp
xor
dec
xor
ss
loop
popa
andnps
xchg
jbe
push
(bad)
cli
mov
dec
cmp
ret
sbb
inc
stc
imul
mov
in
pop
add
jae
xor
outs
push
fdivr
adc
js
imul
push
and
sbb
ds
loope
inc
inc
sbb
shl
jo
cmp
rcl
out
jbe
pop
add
icebp
leave
jmp
(bad)
iret
jbe
imul
aam
push
or
mov
jg
jmp
mov
loop
push
xchg
mov
mov
mov
and
jno
fdivr
fdiv
sbb
fadd
repnz
aad
hlt
mov
(bad)
dec
jp
ss
in
test
adc
sbb
xor
outs
push
sub
fimul
data16
enter
mov
push
rcr
mov
dec
pop
fcmovnbe
ficom
mov
mov
mov
pop
mov
pop
mov
push
sub
cmp
lock
and
push
and
cmp
imul
add
cmps
dec
push
jmp
test
(bad)
jp
lods
jo
sbb
sub
adc
js
imul
call
out
clc
dec
sbb
sub
push
out
push
rcl
sub
loope
pop
or
inc
rcl
stc
push
lds
stos
ss
pop
cmp
dec
cs
dec
jp
push
pop
inc
and
bound
sbb
test
inc
mov
leave
inc
sti
aas
mov
es
and
jge
mov
repz
inc
out
ret
push
push
movs
add
cmc
std
sub
out
clc
enter
sub
add
mov
xlat
es
inc
daa
jecxz
iret
sbb
pushf
outs
cld
or
adc
pop
out
(bad)
jmp
clc
lea
cmp
adc
sbb
push
pop
mov
push
cs
xchg
ds
xchg
sub
push
in
adc
dec
ror
xchg
arpl
sbb
pop
pop
adc
hlt
xchg
inc
lds
dec
sub
and
in
pop
(bad)
outs
dec
movs
ins
dec
jle
or
enter
cmp
push
mov
pop
jns
sub
add
push
lods
imul
shr
pop
or
push
lods
in
in
js
add
jmp
retf
push
inc
adc
aaa
fcmovb
pusha
clc
cwde
(bad)
fnstsw
ins
jns
hlt
pop
mov
pop
jecxz
cld
retf
sub
enter
and
sub
sub
mov
sub
push
clc
inc
in
out
jmp
js
pushf
and
pop
jl
xchg
adc
pop
lods
imul
aaa
sbb
xor
cmc
mov
sti
loope
xor
and
loope
or
add
nop
lds
jp
adc
lods
push
and
inc
sub
cmp
sub
inc
xchg
nop
xchg
popf
sub
ins
(bad)
adc
add
or
and
in
imul
mov
jle
fcomp
aam
and
cwde
icebp
push
mov
jns
mov
addr16
dec
xor
sub
pop
out
pop
lea
xchg
icebp
iret
shl
mov
cs
in
add
sub
je
call
jge
pop
outs
mov
cld
pusha
and
mov
fdivrp
retf
dec
test
or
(bad)
hlt
xchg
dec
scas
aaa
mov
cwde
ret
mov
out
mov
test
push
inc
mov
add
nop
retf
retf
adc
fwait
es
retf
mov
jp
pop
neg
push
jmp
jmp
inc
mov
in
(bad)
mov
sub
jbe
pop
hlt
push
cmp
jl
mov
ret
cmp
aam
or
stos
push
lahf
fcom
lock
xor
aad
mov
jns
push
xor
mov
and
mov
add
data16
ficom
cmp
pop
fwait
lods
pusha
inc
loope
dec
push
ror
push
sbb
xchg
(bad)
jo
int
jecxz
add
ss
adc
jo
pop
stos
mov
push
sbb
pop
or
mul
xor
mov
jo
cmp
(bad)
jp
adc
cli
int3
mov
test
mov
data16
out
dec
jne
or
push
(bad)
jmp
push
loop
leave
aad
dec
(bad)
xlat
mov
into
adc
jg
inc
sqrtps
sbb
repnz
cmp
js
sbb
cmc
add
inc
mov
in
loope
popf
retf
or
push
sar
inc
mov
and
or
fisttp
mov
aad
xchg
stc
movs
add
in
cmp
(bad)
fiadd
push
add
add
in
sbb
jb
adc
ds
push
mov
loope
adc
jmp
xor
mov
test
pusha
in
data16
jmp
add
mov
punpcklbw
dec
in
imul
out
test
test
stc
pop
outs
mov
shl
mov
jecxz
adc
repz
(bad)
jecxz
aam
or
repz
adc
mov
inc
inc
sbb
or
test
leave
add
jo
fisttp
(bad)
fdivr
or
enter
stos
dec
push
sub
mov
and
push
jae
mov
inc
lds
add
sub
aad
mov
int3
xchg
xchg
lahf
mov
mov
aam
out
pop
(bad)
adc
aas
adc
int3
rcl
(bad)
xchg
adc
or
lock
mov
jae
inc
(bad)
xchg
xchg
add
(bad)
mov
pop
lods
es
aad
mov
lea
pop
cwde
and
mov
jne
lds
mov
jb
mov
cwde
sub
idiv
fisttp
(bad)
aad
or
and
jns
fstp
mov
or
sbb
scas
mov
push
push
pop
pop
pop
mov
mov
imul
fdivr
cmp
jnp
aaa
xchg
cli
fdiv
jns
rcr
push
inc
das
das
dec
(bad)
inc
outs
movs
sub
add
pcmpgtd
stos
mov
xor
jle
(bad)
sbb
sbb
dec
mov
or
pop
test
mov
xor
and
sbb
ror
jl
xor
add
cmp
aaa
adc
je
imul
mov
fiadd
mov
scas
retf
and
and
stc
pop
push
jno
inc
push
xchg
cmp
(bad)
imul
es
es
or
mov
mov
sbb
es
(bad)
aaa
adc
fild
das
jmp
xchg
sub
popf
cmc
or
cwde
pushf
jno
jg
arpl
add
jnp
xchg
adc
fist
outs
cmps
push
movs
out
sbb
or
dec
imul
push
cmp
jnp
xor
daa
rcl
cmp
dec
cs
aad
xchg
rol
push
add
pop
sbb
repz
sti
mov
aad
pop
jge
inc
aaa
xor
mov
dec
fist
sbb
xor
rol
into
jl
ins
mov
hlt
add
outs
fld
dec
fnsave
imul
in
jmp
push
adc
cmp
xchg
dec
dec
imul
gs
nop
and
pop
xlat
fcmovu
scas
ret
outs
xor
sub
mov
je
fwait
sahf
das
retf
shl
mov
fnstcw
or
pop
iret
jbe
sbb
(bad)
push
arpl
ins
mov
pop
push
cdq
mov
test
daa
sub
loopne
or
cmp
loope
loope
add
mov
daa
jle
cli
neg
outs
inc
adc
mov
sbb
in
mov
test
lea
(bad)
pop
pop
pop
mov
xor
sub
das
es
or
cdq
fimul
jmp
dec
ja
jns
or
jmp
add
std
in
ror
mov
jge
ins
(bad)
loope
xchg
jmp
xor
fidivr
ja
push
add
fmul
push
cmc
inc
pop
(bad)
xor
mov
cmp
call
jb
jae
mov
lods
ficom
test
scas
call
iret
add
sbb
cs
jge
xchg
push
jo
lea
and
das
mov
pop
inc
fucom
loopne
fwait
mov
push
pop
dec
push
xchg
or
pop
enter
sbb
dec
test
aam
cwde
fcomi
adc
rol
pop
or
imul
cmp
push
dec
dec
mov
dec
xor
bound
lds
push
ins
fdivr
jno
jno
(bad)
jmp
in
push
xchg
push
fwait
and
inc
add
nop
retf
push
mov
pop
push
cmp
movs
pop
mov
xchg
retf
jp
ret
test
mov
pop
icebp
dec
stos
mov
rcr
repz
mov
push
(bad)
cdq
jp
das
or
fiadd
into
push
inc
dec
mov
inc
pusha
pop
mov
mov
out
mov
or
imul
cmc
jl
mov
stos
add
sahf
(bad)
repnz
add
in
inc
mov
call
ins
gs
repnz
adc
fild
pop
and
out
adc
jmp
call
xchg
add
jb
fincstp
pop
and
clc
sahf
clc
push
jno
int
fsub
mov
cmp
mov
add
push
sbb
(bad)
mov
clc
rcr
adc
daa
or
pushf
repz
push
iretw
out
mov
push
in
aam
push
cmp
shr
inc
icebp
xlat
repz
xor
(bad)
cwde
jno
jl
dec
sub
dec
push
xor
jg
sahf
sbb
mov
fs
out
mov
add
icebp
xor
imul
lods
pushf
arpl
add
xchg
mov
mov
lock
in
inc
out
les
pushf
and
xchg
xchg
mov
dec
sub
xchg
leave
or
repnz
nop
and
mov
and
fs
xlat
or
les
xchg
cmovbe
in
out
jmp
jmp
sub
mov
push
popf
or
inc
adc
dec
(bad)
out
fs
mov
sbb
hlt
imul
sub
ds
mov
and
push
mov
mov
test
jmp
dec
sbb
outs
scas
push
cmp
mov
repz
call
in
or
lock
ins
lods
rcl
push
push
sub
ins
fcomp
cli
mov
jne
push
stos
shl
mov
lock
fwait
test
call
or
sbb
pop
ror
sbb
das
pop
daa
or
jnp
fisttp
push
jo
in
loope
data16
add
into
add
xchg
or
(bad)
(bad)
sbb
loopne
je
xlat
jmp
in
outs
jo
pop
sar
or
and
addr16
aam
outs
add
popf
add
into
jmp
ins
or
mov
dec
adc
mov
push
cmc
retf
mov
push
jnp
jge
into
dec
sub
(bad)
xor
aas
js
lock
mov
test
mul
push
adc
jle
dec
arpl
add
mov
jno
add
inc
push
adc
es
mov
xchg
and
scas
outs
jmp
data16
(bad)
pop
dec
rcr
ret
in
dec
mov
jno
jne
(bad)
pop
sbb
push
in
arpl
rcl
or
push
mov
sbb
mov
xor
int
loop
xchg
pop
inc
test
dec
and
fwait
jp
test
daa
inc
ins
jle
sbb
ret
daa
sub
sub
ins
rcr
sbb
jecxz
ja
cmp
aas
call
data16
or
inc
xchg
shl
cmp
cmp
gs
lea
ret
dec
mov
jno
in
push
cld
pop
imul
sub
cmps
xchg
sub
jnp
adc
pop
out
sub
push
loope
xor
(bad)
sbb
popf
dec
rol
jne
xchg
loopne
aad
(bad)
fsubr
jg
pop
int
lea
repz
scas
or
xchg
mov
and
and
neg
outs
ficomp
test
dec
les
es
add
arpl
push
fisub
xchg
xlat
xchg
nop
cwde
bswap
jo
fld
ds
adc
mov
push
test
out
jmp
push
cmps
loope
jge
cmps
ret
inc
in
nop
pop
pop
movs
je
fs
mov
ret
in
sbb
mov
call
sub
rol
imul
sbb
adc
js
xchg
aad
jmp
std
das
xchg
out
push
mov
or
enter
sub
stos
sub
rol
push
mov
push
fcmovbe
add
push
jge
jne
imul
addr16
iret
sbb
jmp
hlt
pop
ins
shl
pop
je
test
(bad)
jge
and
jae
test
ja
ret
xchg
jns
jae
push
movs
mov
cmp
in
(bad)
mov
xor
xchg
mov
rdpmc
adc
xchg
shr
cmps
mov
sub
mov
int
adc
popa
inc
test
push
add
nop
iret
push
ss
and
cmc
push
gs
ret
cmp
fwait
js
jp
pop
out
sar
js
mov
and
push
push
fadd
les
mov
lock
dec
mov
add
call
xchg
adc
fadd
(bad)
aad
jmp
cmp
mov
fisttp
mov
push
mov
pop
add
cld
pop
pop
add
or
pop
gs
xchg
mov
mov
stos
sbb
imul
fdiv
inc
fbld
es
mov
fs
push
inc
mov
outs
sub
push
mov
les
(bad)
outs
add
daa
pop
jb
mul
pop
xor
jne
outs
push
jne
push
jno
pop
je
lds
xor
mov
les
(bad)
dec
(bad)
jns
sbb
cmp
(bad)
adc
add
push
clc
ror
mov
mov
popa
das
aad
int3
sbb
fild
pop
xor
pusha
fcomp
xor
fld
outs
hlt
push
out
xchg
std
or
adc
and
pop
cmc
mov
pop
rcr
in
xchg
sub
addr16
add
int
push
jo
xchg
adc
mov
ds
mov
out
lods
mov
push
dec
cmp
jmp
adc
out
sbb
and
xlat
sbb
mov
push
dec
fsub
mov
daa
cmps
je
enter
fadd
out
xor
rol
sti
sahf
ror
cmps
jne
cli
jne
adc
hlt
add
outs
loopne
push
dec
retf
daa
xchg
call
movs
push
call
mov
ss
dec
les
mul
sub
lods
cmp
lods
jmp
in
in
jmp
sub
retf
loop
push
aas
ins
adc
ret
mov
(bad)
push
sbb
mov
mov
jecxz
out
frstor
out
ret
hlt
sbb
dec
sub
movs
movs
push
das
sub
(bad)
fstp
jp
sub
sub
inc
shl
push
gs
mov
mov
sub
mul
(bad)
jmp
and
pop
jmp
fs
push
mov
popa
leave
mov
mov
mov
outs
ret
cld
shl
push
push
scas
in
jge
xor
jecxz
pop
sub
mov
scas
mov
pop
enter
add
jmp
ret
sbb
test
xchg
push
adc
test
xlat
je
repz
repnz
ja
or
ret
leave
xor
loopne
cwde
mov
adc
inc
mov
sub
jae
das
push
and
fcom
mov
das
dec
jmp
cmp
int3
test
lods
mov
(bad)
cli
sub
mov
popf
xor
fldcw
jnp
cmp
cmp
sbb
cmps
cmc
inc
ins
outs
fmul
dec
les
cmp
mov
fisttp
pop
ss
leave
icebp
xlat
cmp
xor
pop
int
fs
sub
jnp
jb
sbb
cdq
dec
mov
inc
mov
adc
repnz
jmp
mov
in
pop
push
push
jecxz
and
mov
es
js
sbb
mov
jo
into
mov
cmps
push
ds
adc
sub
daa
sbb
int3
mov
clc
jo
idiv
sahf
dec
jbe
ds
adc
mov
inc
mov
lock
fnstcw
push
mov
push
ins
xchg
mov
mov
icebp
jmp
push
mov
int3
mov
loopne
int3
push
fsubrp
call
out
popf
xor
cmc
push
test
cwde
push
mov
aas
pusha
popf
push
loop
add
mov
mov
mov
add
test
and
call
push
mov
je
adc
xlat
outs
cli
jno
(bad)
mov
loop
push
and
jo
push
dec
inc
jl
pop
loope
das
add
sub
ret
mov
retf
push
jecxz
call
arpl
fucom
call
jo
ja
cmp
xor
daa
inc
in
fsub
mov
xor
je
xchg
inc
int3
dec
mov
or
xor
xor
sbb
loopne
xlat
push
add
sti
stc
and
scas
jp
xor
fiadd
(bad)
arpl
and
mov
and
push
dec
inc
cmp
xor
jp
jl
mov
call
sub
fild
je
dec
fisub
xor
cmp
stos
jmp
adc
arpl
sub
pop
inc
inc
jg
mov
jecxz
mov
aam
ficom
dec
repz
rol
addr16
jle
ror
jp
(bad)
sar
or
xchg
popa
idiv
dec
inc
aas
jnp
xchg
sbb
bound
cmp
out
mov
pop
lds
push
mov
mov
mov
or
sbb
movs
adc
fimul
jl
jmp
shr
jb
cmp
push
cdq
pop
into
mov
add
and
test
lods
sbb
jne
ss
ins
in
mov
shl
xor
mov
xchg
mov
mov
add
sub
xor
jbe
popf
daa
sbb
xor
out
xor
mov
pop
sbb
ss
std
out
xor
push
lahf
add
mov
push
xchg
loope
adc
pop
xchg
and
out
movs
stos
pextrw
arpl
jo
arpl
pop
and
mov
xlat
rcl
jle
or
inc
retf
int
sbb
add
ss
aad
call
leave
or
stos
leave
and
and
dec
push
or
ret
retf
int3
(bad)
xchg
jmp
repz
popa
jb
mul
call
out
xor
cmp
gs
icebp
ja
test
test
pushf
pusha
aam
(bad)
mov
lahf
and
pop
mov
cmp
add
ins
jo
sub
sbb
push
test
mov
mov
mov
movs
add
lods
cdq
sbb
(bad)
call
push
in
or
imul
push
sbb
xor
sub
jmp
repz
clc
out
mov
jp
addr16
mov
nop
add
popa
fadd
ret
lock
mov
xor
scas
mov
jle
and
pop
jecxz
adc
mov
inc
sahf
lods
call
ja
mov
add
std
push
mov
std
cld
jecxz
sbb
lods
jmp
pop
push
jno
gs
and
lea
cmp
inc
and
dec
dec
leave
cmp
pop
test
in
(bad)
add
cmp
sub
mov
aam
retf
aaa
shl
sti
pop
jo
(bad)
adc
loope
push
jg
(bad)
cmp
es
cmp
sub
mov
test
xchg
cmps
popa
and
ja
pop
xlat
fld
or
jbe
ss
out
sbb
sbb
ins
pop
push
adc
fnstsw
out
mov
and
fist
outs
inc
(bad)
gs
jp
shr
add
cwde
cwde
lods
add
jno
mov
inc
pop
xchg
hlt
pop
push
call
push
or
cdq
icebp
mov
and
push
out
popf
dec
xchg
inc
daa
jo
or
jmp
ror
loop
mov
xchg
in
dec
rol
mov
add
inc
scas
ficomp
lock
inc
push
stos
imul
daa
pop
sub
das
retf
inc
and
fwait
sub
inc
repz
add
push
push
sar
(bad)
repnz
imul
jp
add
stos
aas
arpl
push
shr
mov
in
jmp
jae
lds
in
pusha
in
push
iret
enter
adc
repz
cmp
lds
jns
add
or
mov
xchg
pop
and
(bad)
(bad)
or
push
jno
ja
das
add
shr
imul
das
jmp
adc
xchg
sub
xor
test
add
or
(bad)
js
std
mov
cld
aad
inc
cmp
into
arpl
push
mov
xchg
jns
scas
pop
shl
and
or
retf
cmp
in
jo
test
in
out
enter
je
sbb
rcl
stos
push
je
sub
stos
ins
sub
in
add
cmp
xchg
cmp
stc
stc
cs
dec
test
mov
icebp
loope
push
adc
popf
fwait
test
dec
int3
inc
movs
iret
(bad)
and
repz
pop
(bad)
mov
add
add
push
lea
mov
arpl
jl
lock
ins
pushf
(bad)
cwde
es
and
cmp
jno
or
fadd
dec
int3
sbb
xchg
mov
mov
fild
xchg
retf
add
std
mov
pop
dec
mov
xchg
add
or
ret
or
and
out
scas
shr
or
test
and
sub
pushf
rcl
int3
test
cli
nop
cmp
dec
inc
fiadd
retf
in
cmp
push
mov
sbb
call
mov
cs
xor
fdivr
add
scas
pop
aas
(bad)
mov
mov
shl
mov
xchg
push
mov
and
icebp
mov
pop
and
pop
inc
test
clc
mov
sti
(bad)
and
ss
out
cs
loopne
js
pop
mov
enter
and
mov
add
cld
dec
pop
inc
or
add
pop
ins
retf
(bad)
movs
and
jnp
shl
cmc
jb
stos
ror
cmp
das
inc
inc
test
aad
xor
cld
(bad)
aam
push
add
pop
int3
outs
inc
cmp
and
sbb
inc
ds
adc
push
sets
sar
mov
(bad)
xchg
les
add
cmp
xor
dec
retf
sub
cmps
adc
frstor
sub
mov
sahf
inc
arpl
sahf
push
(bad)
cmp
jp
call
add
je
mov
test
adc
xor
add
ja
sub
inc
adc
pop
stos
xchg
cmc
cmc
sub
jbe
data16
sub
aaa
sub
pop
in
sti
inc
dec
sbb
inc
loopne
add
xor
leave
mov
adc
movntps
sbb
jge
inc
pop
fs
addr16
movs
push
inc
cmp
and
push
mov
mov
cmp
push
or
adc
repnz
mov
push
in
pop
test
cmp
aaa
mov
mov
or
(bad)
pushf
pop
jnp
dec
mov
lods
push
loopne
push
add
les
rcr
out
mov
dec
shr
clts
jmp
(bad)
dec
or
mov
ins
imul
lock
jnp
(bad)
cmps
pop
jo
dec
std
out
jns
clc
je
adc
daa
inc
inc
test
cmp
out
xor
xchg
shl
xchg
xchg
cs
jl
push
sub
inc
(bad)
jmp
xchg
mov
sub
or
push
lock
ins
mov
push
movs
adc
push
ins
hlt
mov
mov
iret
mov
(bad)
sahf
enter
xchg
push
sub
hlt
cs
xor
stos
adc
(bad)
xchg
mov
aad
ss
test
imul
(bad)
or
int3
dec
or
jne
fimul
sbb
sahf
(bad)
(bad)
xlat
fwait
jbe
jge
adc
rcl
and
sub
push
into
inc
add
push
sub
jae
sbb
push
sub
lock
shl
or
cld
inc
out
enter
bound
jns
in
dec
xor
out
inc
rol
fs
lods
jmp
(bad)
es
sar
gs
add
add
cmp
xor
sbb
inc
or
ins
adc
dec
cmp
push
and
mov
cmp
xor
pop
xor
fwait
jl
ins
in
and
fnsave
gs
and
cmp
es
shl
lods
mov
outs
dec
pop
(bad)
sub
(bad)
into
mul
pusha
ret
scas
sbb
neg
jnp
cmps
pop
dec
mov
mov
rcl
aaa
xchg
push
adc
push
aad
rcl
mov
(bad)
gs
xor
popf
das
rol
push
mov
ds
mov
dec
pop
and
push
out
call
lahf
mov
mov
add
das
add
push
and
adc
xor
jmp
daa
shl
sbb
lods
xlat
jbe
lods
es
addr16
and
icebp
fucom
out
mov
movs
dec
and
dec
xor
mov
mov
jne
xor
jno
push
push
test
loope
imul
mov
add
cmc
sbb
pushf
mov
pop
or
adc
ror
push
ja
ins
adc
sub
push
mov
cmp
sar
mov
cmp
lock
push
fmul
fmul
mov
mov
jo
jne
inc
add
push
and
mov
inc
vmovhps
in
dec
sti
ret
mov
mov
xor
cld
dec
es
and
mov
sbb
adc
call
xchg
add
in
push
adc
fsub
fsubr
dec
dec
pop
mov
aam
adc
cmc
js
ds
shrd
inc
xor
and
cmp
sar
push
add
out
icebp
mov
ins
popa
xchg
sti
(bad)
mov
jge
jmp
in
retf
xor
inc
int
out
and
rcr
sbb
loopne
mov
gs
lock
(bad)
test
enter
sub
push
call
add
inc
add
push
add
daa
jmp
repnz
scas
jecxz
mov
std
dec
scas
nop
cli
lods
or
(bad)
cld
jle
pop
xchg
adc
adc
pop
push
test
mov
mov
das
ds
adc
aaa
retf
test
cmps
lods
addr16
mov
mov
sub
data16
inc
add
cmp
loop
xchg
pushf
mov
ret
imul
ins
scas
ret
inc
mov
inc
stos
ins
pop
jge
dec
pop
and
in
(bad)
push
xor
mov
aas
dec
outs
adc
(bad)
cmps
jns
add
dec
mov
int
and
push
int
sahf
push
(bad)
jne
add
lock
ins
cdq
popa
pop
jp
mov
add
cmp
mov
xor
push
xchg
xor
or
rol
xor
imul
mov
les
inc
pop
ins
fadd
in
sub
fstp
fld
jge
add
imul
jns
ja
sub
cmps
push
fnsave
jne
das
stc
test
mov
call
push
fiadd
pop
add
pop
fadd
out
and
das
stc
push
adc
rol
sub
pop
rcl
(bad)
rol
cmps
pop
shr
xchg
mov
dec
mov
lds
jno
mov
and
jmp
cmps
xor
jmp
cmp
jae
jge
and
clc
and
pop
ins
pop
stos
cmps
test
int
xchg
cmp
lds
inc
pop
loopne
and
std
test
add
imul
push
xchg
adc
push
mov
shr
jno
xchg
cmp
imul
out
sub
mov
popf
pop
test
mov
lods
aad
adc
out
sub
cmp
add
mov
cwde
push
jbe
jo
sub
add
(bad)
daa
dec
adc
pop
pop
(bad)
aad
mov
(bad)
and
sbb
cdq
mov
clc
ja
fdivrp
mov
out
pusha
xchg
aad
and
mov
add
sub
in
push
clc
out
clc
mov
pop
jnp
jno
xlat
(bad)
cs
ja
and
jp
jmp
fbld
lods
es
retf
push
lea
frstor
push
xor
jecxz
xor
adc
sbb
outs
fdivr
dec
inc
sbb
jb
shl
mov
jbe
das
mov
fsubr
jmp
jne
imul
ss
sbb
and
fistp
jno
mov
xchg
push
jns
or
pop
mov
xor
cmps
add
add
ja
sbb
sbb
lods
xor
in
push
dec
stos
std
or
imul
fnstcw
movnti
cmps
dec
add
sbb
(bad)
scas
stos
es
imul
lea
xlat
dec
add
sbb
cmp
mov
sub
sahf
dec
jnp
push
push
inc
add
cld
sub
sbb
xchg
inc
mov
push
movs
stos
and
dec
iret
popf
push
add
push
push
test
push
push
or
rol
movs
mov
fisub
and
mov
(bad)
mov
jnp
inc
mul
pop
mov
outs
cmps
dec
nop
fisubr
sbb
popa
ret
jbe
in
push
fiadd
int
ins
dec
xchg
push
mov
and
in
aaa
mov
scas
or
pushf
jae
repnz
cmp
cmp
inc
cmp
ret
repnz
lods
out
mov
sub
movs
out
or
inc
stc
mov
add
push
pop
lea
and
dec
dec
lds
and
gs
ret
dec
cli
xchg
mov
mov
xchg
retf
mov
shl
int
rcl
or
cli
and
sub
adc
xor
xchg
ret
mov
sub
or
arpl
mov
adc
aad
adc
test
and
inc
sahf
(bad)
adc
out
aam
popa
iret
sub
inc
pop
pop
scas
(bad)
push
inc
arpl
popa
sahf
mov
dec
cmps
dec
not
add
ret
test
mov
inc
lahf
mov
inc
ins
xchg
jo
addr16
xor
ret
xchg
lds
out
or
sahf
jb
outs
in
ret
in
imul
xlat
add
fidiv
lods
cmps
and
in
test
ss
push
ss
test
mov
retw
cmp
(bad)
cmps
lock
push
mov
or
popa
ret
stc
xor
or
mov
mov
call
arpl
js
xchg
movs
adc
mov
fild
mov
sub
cmp
stos
pop
arpl
sbb
clc
jae
push
push
mov
jns
ffree
jbe
mov
and
add
push
cmps
push
neg
push
mov
shl
push
(bad)
shl
xchg
not
pop
retf
movs
mov
cmps
pusha
mov
mov
ins
sbb
fdivr
(bad)
mov
js
pop
xchg
pshufw
and
mov
in
xchg
push
fild
dec
inc
mov
les
int3
pop
pop
jp
call
cs
ins
pop
and
mov
xchg
jecxz
lahf
ds
out
shl
pop
retf
jmp
xchg
dec
adc
bound
aaa
iret
arpl
pop
or
loope
cmps
push
bound
xchg
addr16
cwde
push
jne
enter
aas
fimul
jle
pop
leave
push
loopne
mov
sahf
xor
ds
jp
sub
or
je
pop
data16
fimul
and
sub
pop
test
jmp
std
out
push
jne
dec
xor
cmp
loope
icebp
cmps
loopne
arpl
push
fcomp
out
rcl
and
mov
sub
sub
in
outs
sub
pop
or
mov
adc
stos
cmp
mov
out
cmps
push
leave
aam
(bad)
mov
pusha
pop
xlat
xlat
jbe
dec
out
mov
inc
enter
fbld
xchg
push
jmp
mov
pop
mov
or
nop
(bad)
in
jne
hlt
xor
cld
aas
pop
in
lods
and
mov
xor
pop
iret
mov
jmp
jbe
mov
neg
xlat
adc
jnp
or
mov
jl
xchg
xlat
arpl
or
shl
sbb
out
or
dec
cmps
(bad)
push
call
call
mov
xor
mov
mov
push
push
mov
shr
loopne
aaa
cmp
dec
sar
scas
push
push
shl
dec
lahf
bound
cmp
or
or
mov
cmps
inc
push
and
(bad)
iret
mov
gs
es
jbe
aam
mov
and
aas
cmp
les
push
cmp
jb
dec
or
std
adc
jmp
mov
adc
xor
push
pusha
das
sar
ja
mov
ror
iret
sub
rol
fisubr
icebp
int
lods
mov
push
and
mov
jo
out
xchg
add
pop
adc
push
sbb
dec
push
sahf
jle
cmp
nop
cmp
mov
and
sbb
out
and
scas
(bad)
inc
cmc
addr16
jnp
aas
inc
shr
cwde
push
test
sbb
in
pop
ret
jecxz
loopne
fst
addr16
or
dec
add
pop
pushf
xchg
mov
pop
push
add
sar
fnsave
inc
mov
and
push
test
adc
add
mov
pop
add
mov
pushw
sbb
(bad)
jle
fwait
test
test
imul
adc
int
(bad)
jl
in
cmp
shr
(bad)
loopne
nop
mov
mov
mov
cmp
(bad)
jo
dec
pusha
sub
add
pop
sti
test
loopne
jae
inc
cmp
sub
or
or
and
cld
iret
(bad)
mov
cwde
xor
jo
int
(bad)
mov
rcl
(bad)
xchg
mov
js
sub
xlat
test
scas
inc
xor
jae
sti
and
fwait
jmp
dec
push
dec
add
test
inc
sub
mov
(bad)
dec
stos
addr16
cmp
xchg
cmp
call
pop
aas
xor
fwait
lods
mov
(bad)
movd
pop
in
rcl
jb
(bad)
and
div
sub
stos
jo
mov
data16
cmp
and
sub
ins
add
scas
(bad)
data16
cwde
fwait
mov
cmp
movs
pop
in
cmovae
ss
fnstcw
in
dec
call
pop
sub
les
int3
out
out
loop
jl
dec
and
mov
push
ja
push
mov
jae
sbb
push
add
idiv
sbb
cmp
div
xor
mov
sub
dec
adc
mov
cmp
stos
sbb
adc
pop
sar
test
lds
push
jb
rol
xchg
scas
mov
add
sub
test
sbb
loop
ja
scas
pop
addr16
fdivr
sbb
shl
je
aam
mov
dec
loope
lea
inc
pop
mov
(bad)
push
mov
ffreep
xor
fwait
jle
xor
dec
imul
pop
sub
cs
inc
cwde
das
push
pop
and
push
dec
push
push
lds
jne
std
(bad)
mov
pushf
nop
xor
sub
imul
call
pop
aam
sub
dec
mov
clc
dec
aam
mov
icebp
mov
sub
jb
cs
mov
push
add
pop
sbb
add
sbb
(bad)
sub
jns
in
jl
dec
cmp
or
outs
sub
dec
cmps
push
and
pushf
clc
push
adc
or
mov
lds
jge
call
sbb
sub
call
sub
(bad)
cmps
imul
stc
jmp
ret
aaa
cmp
pop
std
rcr
dec
fwait
sahf
fcmove
fsubr
outs
add
push
leave
inc
add
js
push
mov
adc
mov
in
iret
jp
or
adc
add
xor
cmp
and
add
aam
scas
inc
xor
(bad)
out
inc
xchg
or
pop
ins
jg
fwait
paddd
into
cs
sbb
jge
popa
mov
mov
pop
mov
xor
jno
sti
add
leave
je
cmp
repnz
test
push
jmp
adc
int
mov
fcmovnu
jae
(bad)
mov
sub
popa
mov
aaa
xor
addr16
stc
add
push
cwde
stc
cmps
popf
jb
scas
pop
mov
inc
pop
xor
mov
inc
cmp
xlat
sub
das
fs
(bad)
enter
adc
retf
fcomp
test
lea
bound
mov
adc
cmp
test
fwait
jle
sbb
sbb
mov
or
xlat
push
mov
dec
repz
dec
or
and
or
pop
add
imul
loopne
sbb
out
add
jne
fstp
push
dec
mov
jmp
mov
push
aaa
das
in
mov
add
sub
fsub
imul
fist
jl
sbb
push
xor
(bad)
(bad)
stc
out
rcl
pop
arpl
(bad)
push
add
add
pop
pop
dec
sbb
xchg
xchg
cmp
shl
test
sub
ret
dec
xchg
test
xor
cs
imul
in
fdiv
rol
test
(bad)
and
clc
xchg
sbb
mov
(bad)
fyl2x
mov
cmp
adc
int
sbb
aam
inc
adc
repz
mov
xor
push
(bad)
cmp
repz
ja
mov
ins
out
in
mov
push
std
or
fwait
mov
test
dec
jmp
jnp
xchg
jmp
mov
out
jne
push
ror
int
rcl
and
fmul
ins
arpl
call
(bad)
mov
fild
movs
test
or
mov
mov
scas
idiv
lds
hlt
pop
and
aad
mov
fnsave
mov
push
and
mov
push
pop
xor
aad
pop
fmul
addr16
push
adc
cli
outs
mov
adc
xor
add
(bad)
pop
push
(bad)
jg
mov
retf
enter
sub
adc
aad
int
fld
jmp
or
or
xchg
scas
rcr
mov
cld
sti
push
and
mov
push
cs
sbb
adc
xor
push
add
lock
(bad)
pop
in
out
jne
sub
gs
mov
inc
jp
jle
ret
sahf
dec
addr16
in
xchg
dec
into
ja
xchg
gs
sahf
popa
add
and
xchg
lock
pop
(bad)
mov
cmps
or
pop
and
dec
or
or
(bad)
sub
xlat
push
add
jbe
shr
xchg
call
out
push
cmp
repnz
mov
lods
retf
data16
pop
out
aas
mov
dec
or
push
retf
idiv
imul
mov
sbb
jl
or
jmp
inc
int3
or
in
jo
sahf
add
addr16
cmp
out
inc
shl
lahf
outs
jl
jg
int3
test
retf
push
out
adc
push
ret
js
cmc
and
jnp
imul
fild
ss
shl
out
pop
mov
mov
or
imul
inc
scas
sahf
jg
scas
outs
jbe
or
adc
call
lock
call
pop
std
mov
mov
inc
sbb
iret
push
xchg
scas
test
lods
xchg
leave
pop
pop
cli
and
loopne
mov
clc
push
pop
inc
outs
pop
mov
jl
es
adc
inc
dec
(bad)
fbld
fisttp
daa
lds
(bad)
mov
sbb
cdq
(bad)
inc
sbb
mov
pop
adc
adc
not
test
hlt
mov
xchg
jge
jno
mov
add
fidivr
daa
inc
jne
cld
repnz
xor
pop
cmp
mov
and
(bad)
movs
pop
out
dec
add
or
sub
std
push
lock
hlt
retf
daa
enter
xchg
pushf
stos
pop
pop
jg
iret
retf
call
sub
and
add
adc
js
jecxz
cmps
inc
mov
pop
int
sbb
int
adc
push
icebp
mov
in
sbb
icebp
pop
into
mov
push
sub
cmp
fwait
enter
xor
inc
test
fsubr
jmp
stc
out
hlt
and
dec
ds
movs
xchg
jno
or
ins
add
inc
xchg
jae
fldenv
neg
inc
imul
rol
jmp
inc
test
jno
and
add
mov
and
or
pop
lea
jmp
pop
mov
mov
repnz
out
and
sti
aam
jmp
xlat
push
add
push
add
sub
xor
lahf
stos
retf
movs
mov
ss
(bad)
mov
jae
pop
push
out
or
dec
push
pcmpeqw
data16
(bad)
fwait
retf
fwait
xchg
add
cmp
ficom
xchg
jo
and
call
ret
mov
and
cmp
rcr
inc
into
adc
lock
test
push
xchg
int
adc
mov
or
pushf
xor
mov
mov
sbb
cld
xor
add
pop
ja
lods
mov
jl
mov
pop
mov
push
and
add
sub
cmp
mov
cmp
ss
or
sbb
adc
cli
cmp
scas
pop
pop
arpl
mov
and
adc
imul
pop
sub
push
sub
cmp
lock
and
xor
cmp
fistp
mov
pop
(bad)
sti
push
add
jl
cmp
add
ja
(bad)
scas
into
mov
push
or
and
(bad)
mov
pop
push
fucomp
sub
(bad)
call
sub
cmp
popf
mov
fild
add
repz
xchg
std
adc
push
lods
push
les
fnstenv
ds
jg
(bad)
lea
addr16
lods
and
cmp
fs
das
in
inc
rcr
ficomp
sbb
xchg
jp
pop
lods
mov
dec
sub
jb
mov
fs
call
cmps
lods
stc
inc
sbb
das
dec
das
adc
mov
add
call
jle
sti
loopne
sbb
sar
cmps
ja
fistp
nop
push
xchg
push
mov
fsubr
jecxz
div
pushf
inc
rcr
jl
mov
out
pop
cmp
(bad)
jnp
pop
scas
cmp
stos
xchg
add
pushf
in
aaa
(bad)
adc
popf
push
mov
push
sbb
lods
lea
jae
stos
(bad)
xlat
sub
mov
sti
repnz
dec
and
mov
and
ja
repnz
lods
fucomip
(bad)
sahf
(bad)
mov
call
sbb
movs
pop
xor
inc
and
loopne
mov
inc
cmp
mov
out
inc
and
xchg
in
rol
sar
or
fs
cmp
cld
mov
hlt
js
jmp
push
fwait
(bad)
cmc
leave
sub
xchg
xor
test
xor
test
outs
ja
xchg
ins
data16
mov
jecxz
lds
jns
fbld
jb
jmp
inc
ss
mov
xlat
aaa
inc
ja
lods
shr
sub
data16
push
adc
or
out
ins
jo
inc
mov
cmp
mov
and
xchg
push
and
inc
int
mov
cmps
ficomp
lds
std
ins
pushw
out
or
in
fsubr
inc
dec
and
jae
(bad)
(bad)
js
shl
mov
dec
pop
or
ins
mov
aam
and
imul
fs
test
mov
imul
cmps
mov
jns
repnz
push
jne
mov
cmp
mov
movlps
fimul
adc
adc
add
(bad)
out
mov
les
hlt
mov
fwait
das
call
ss
or
add
mov
mov
jno
and
js
pop
imul
jmp
cld
mov
stos
mov
neg
xchg
shl
iret
(bad)
add
cmp
and
popf
sar
movs
mov
jns
push
push
pushf
and
jno
rcr
or
add
popf
xchg
ja
adc
add
cmp
int
sahf
fdivr
or
test
pop
push
xor
das
sub
pop
cmp
jmp
scas
test
fistp
fmul
icebp
imul
ret
movs
fwait
jne
(bad)
pop
cmp
rcl
adc
inc
mov
and
or
mov
dec
sbb
pop
in
outs
jnp
ins
inc
xchg
dec
push
jge
jge
jg
inc
sbb
jmp
or
outs
lock
dec
cmp
leave
add
inc
sbb
cmp
pop
mov
mov
fistp
sbb
xlat
inc
dec
adc
mov
std
or
(bad)
dec
adc
dec
arpl
xlat
test
inc
outs
xor
in
dec
std
dec
pop
outs
fs
loop
ja
out
fld
pop
lock
mov
jno
pop
call
inc
jae
mov
(bad)
mov
pop
pop
in
add
sbb
movs
in
das
mov
int
int
imul
(bad)
aas
sbb
adc
pop
push
std
pop
and
mov
dec
enter
fcom
mov
lods
outs
hlt
adc
in
loopne
iret
fs
lock
icebp
push
sbb
xchg
add
xchg
xchg
cs
adc
aaa
loope
(bad)
movs
(bad)
or
jne
in
add
sub
mov
mov
stos
fwait
aam
push
test
sub
sub
nop
rol
push
xor
hlt
jmp
retf
pop
jns
js
jb
(bad)
sahf
jnp
pop
and
(bad)
push
test
fs
pop
mov
call
or
sahf
sti
jmp
xchg
adc
pusha
mov
lods
fcomp
push
lahf
xlat
mov
jmp
in
mov
out
mov
pop
sar
int
fucom
cdq
(bad)
out
pop
test
clc
loopne
jp
cmp
or
pop
adc
inc
je
repz
fs
inc
jmp
add
push
mov
sub
or
dec
fisub
jo
addr16
les
or
adc
jns
adc
sbb
outs
pop
sets
jmp
shr
shr
lods
xor
xchg
mov
xchg
jge
ret
pop
jmp
ds
call
mov
daa
mov
cmp
mov
cmps
xchg
pop
js
fwait
push
fwait
lods
pop
lods
push
cmp
mov
xchg
mov
adc
dec
pop
dec
ds
sub
sub
push
(bad)
test
outs
scas
pusha
dec
push
jae
sub
loope
mov
fwait
fs
hlt
idiv
adc
cmp
cmp
ds
push
mov
cmp
ror
pop
mov
mov
or
jbe
xor
out
sub
sar
cli
or
adc
imul
sub
sbb
test
les
mov
xor
fcom
jge
stos
outs
jp
cli
mov
push
into
aaa
clc
and
xor
gs
and
cmp
dec
jae
popf
shr
dec
jno
addr16
inc
les
lods
dec
jl
cmc
pop
loop
push
leave
fwait
out
mov
sub
rcr
popa
mov
jmp
ins
out
dec
mov
mov
into
iret
xlat
shl
dec
jbe
push
mov
inc
or
mov
xchg
fst
mov
cld
fbstp
mov
xchg
cld
sub
sbb
and
dec
adc
test
ins
stos
sub
mov
or
cmps
lea
cmp
or
cmp
sbb
jmp
movs
ret
sti
dec
mov
fidivr
pop
cmp
lods
popa
adc
dec
push
(bad)
mov
out
mov
iret
sbb
push
out
lds
pop
pusha
mov
cmps
mov
std
lock
ficomp
xchg
enter
popf
jo
inc
jg
mov
sbb
popf
sahf
retf
jno
cmp
xchg
rol
fiadd
fwait
push
adc
mov
cmps
xlat
cmp
ins
fwait
inc
popf
xor
pop
adc
xor
sub
out
mov
int3
sub
shr
lock
test
repnz
inc
in
xor
jns
pushf
pop
and
mov
push
jb
push
fbstp
mov
fmul
dec
xchg
pushf
(bad)
stos
arpl
ja
xor
or
(bad)
nop
mov
fistp
cld
dec
cmps
ins
pop
mov
add
xchg
jno
cwde
pop
stos
inc
xor
les
xchg
sti
or
jge
lock
mov
jp
mov
iret
push
mov
mov
sub
jp
test
cdq
pop
cli
shr
xor
xlat
and
leave
mov
lds
mov
cwde
xchg
pop
push
and
xor
imul
jbe
ss
loopne
ror
dec
inc
mov
adc
cmp
scas
xor
and
mov
sar
clc
mov
mul
ror
cmp
cwde
mov
xchg
dec
in
cmp
ret
sahf
shr
adc
push
add
sbb
fsubr
add
pop
xor
lahf
out
call
xor
xor
cs
gs
pmaddwd
sub
inc
sub
mov
fwait
inc
or
pop
je
lock
mov
ret
or
dec
movs
push
shr
fild
adc
push
lock
and
push
sub
xor
inc
pop
sti
pop
jle
daa
push
pop
pop
mov
pop
test
mov
pushf
pop
push
sub
sbb
push
stos
and
jle
cmps
mov
(bad)
push
and
test
sub
dec
clc
js
inc
je
and
xchg
inc
std
jecxz
pop
dec
fidivr
fisttp
mov
dec
jg
and
repnz
inc
push
in
inc
fdivrp
aas
pop
xor
push
adc
clc
je
xchg
fldpi
cld
popf
jecxz
push
sub
cmp
inc
inc
cs
je
mov
mov
repnz
stos
add
ins
push
cmp
add
cwde
mov
pop
mov
dec
fcomp
ret
cmp
pop
push
push
mov
jg
ja
(bad)
pop
xchg
jecxz
xor
and
loopne
hlt
dec
int
clc
cli
or
ins
movs
repnz
stc
sar
int3
xor
lea
lds
dec
adc
test
lahf
sbb
add
cmp
lods
pop
and
xor
test
ret
xchg
mov
xchg
outs
dec
push
ins
rcr
les
fwait
sub
xchg
adc
cmp
aam
stc
sbb
mov
(bad)
dec
pop
jnp
clc
(bad)
cwde
and
cmps
lods
mov
push
aad
leave
jl
ja
inc
jg
rcl
fdivr
jo
addr16
inc
inc
test
xchg
scas
add
mov
inc
call
shr
fcomp
sbb
sti
jmp
inc
sbb
fisub
push
push
call
out
(bad)
std
ds
mov
add
arpl
push
mov
xor
cmp
add
popf
cmp
add
mov
xchg
addr16
jne
and
xchg
adc
xchg
rcl
iret
imul
test
clc
xchg
jbe
xchg
test
xlat
inc
div
add
jle
jo
fadd
xchg
pushf
popa
or
mov
das
daa
lahf
add
pop
or
jmp
xchg
es
cmps
pop
cmc
out
fld
test
out
jecxz
sbb
mov
sub
cmps
jmp
bound
inc
div
mov
cdq
mov
adc
(bad)
out
les
addr16
pushf
je
fsub
bound
adc
mov
sar
ret
rcr
std
inc
jle
mov
enter
pop
xor
pushf
sbb
or
gs
in
retf
je
test
fimul
and
int3
or
cmps
sub
cwde
hlt
addr16
xor
int3
sahf
sbb
in
sbb
test
xor
(bad)
in
scas
ret
cmc
outs
addr16
inc
test
hlt
inc
sub
scas
dec
lock
daa
sbb
lds
aam
jle
dec
mov
cmp
(bad)
mov
movs
jnp
shl
test
bound
push
popa
xor
cmp
outs
test
(bad)
call
pushf
test
out
add
jno
jne
inc
in
push
jbe
not
sbb
call
sub
inc
jl
mov
jnp
lods
(bad)
cld
pop
div
mov
outs
jae
mov
ins
out
add
lods
loope
xchg
add
idiv
pop
(bad)
enter
(bad)
mov
(bad)
aad
jp
shl
sub
fstp
test
dec
xor
sub
cwde
and
sub
mov
pop
lods
jnp
push
(bad)
in
jl
clc
int3
stc
loope
cmps
call
jle
test
jecxz
and
dec
xor
mov
in
and
leave
scas
clc
cwd
shr
add
in
push
push
sti
xchg
bound
inc
in
mov
push
mov
xchg
out
clc
add
cmp
lds
fild
inc
push
cmp
fst
popa
pop
and
mov
xor
mov
test
sub
push
jbe
lock
stos
movs
mov
push
pop
and
fisttp
jo
retf
sahf
mov
xchg
loope
cmp
das
scas
sar
aam
mov
or
inc
cmps
add
out
sub
jg
pusha
stos
test
pop
jo
mov
dec
lds
stos
pop
int3
shr
xor
loopne
add
test
jo
mov
outs
mov
xor
jne
ret
in
xlat
nop
imul
pushf
rol
gs
add
outs
push
push
iret
pop
push
scas
stos
dec
daa
push
test
dec
hlt
call
or
bound
data16
sub
das
iret
sbb
mov
cmp
fwait
rcr
cwde
(bad)
fimul
jnp
xor
adc
add
mov
mov
jl
mov
aad
fwait
pop
xor
sahf
dec
nop
add
pop
xchg
ins
mov
rol
sub
lea
repz
ret
sub
jle
mov
xor
nop
movs
imul
jg
adc
cmp
mov
xlat
pusha
neg
sbb
mov
xor
sub
aaa
sbb
push
mov
push
push
(bad)
sar
in
icebp
xor
fcom
xor
lods
out
out
cmc
fld
jae
(bad)
adc
loopne
in
call
cmp
je
(bad)
push
or
cli
(bad)
call
jb
int3
into
sbb
loop
(bad)
into
adc
xchg
mov
ret
and
movs
std
cmp
test
icebp
out
sub
lods
mov
dec
xchg
push
pop
dec
cli
mov
repz
xadd
aas
cmp
mov
rol
pop
jae
leave
sub
cmc
mov
pop
inc
movs
ins
add
stos
adc
sahf
dec
add
ret
fdivr
rcr
fdiv
jg
and
pop
ins
jbe
mov
sub
loop
dec
add
cmp
pop
scas
jno
cmp
xor
and
rol
push
enter
inc
push
int
adc
sahf
xor
out
xor
ror
mov
(bad)
pop
or
xlat
inc
mov
out
jle
and
gs
inc
adc
dec
dec
sbb
leave
pop
mov
mov
and
retf
cld
mov
mov
mov
and
repnz
imul
scas
pop
call
xor
mov
daa
repz
out
jne
adc
in
xor
fidivr
(bad)
retf
xor
sbb
into
popf
(bad)
cmp
(bad)
xchg
dec
mov
popa
fld
push
mov
les
adc
loope
mov
sbb
add
adc
jbe
rcr
dec
pushf
adc
stos
addr16
mov
movq
cmc
adc
leave
jg
pop
je
rcr
lds
sti
je
jp
not
jp
dec
add
inc
fld
or
sub
pop
hlt
lds
xor
stc
dec
cmp
mov
dec
mov
sub
cmp
ins
loop
arpl
mov
imul
add
(bad)
xlat
popf
mov
clc
mov
fcmovne
movs
enterw
loope
out
stos
adc
enter
xchg
sbb
mov
dec
stc
push
loopne
fld
les
in
add
or
(bad)
sbb
pop
pop
pop
stc
xchg
ret
adc
or
pop
xor
test
jne
mov
xchg
faddp
mov
or
icebp
lods
xchg
cmp
dec
or
repz
pop
or
sub
dec
adc
inc
jns
popa
jmp
out
mov
xor
sbb
mov
cmc
neg
in
aam
jle
out
sbb
fist
sub
or
mov
jge
shl
or
test
cmp
fsub
or
xchg
pop
and
rol
adc
int
jno
das
out
(bad)
xor
(bad)
movs
sbb
loopne
jo
stos
cli
or
mov
mov
out
fist
and
adc
aaa
sbb
sub
ja
pop
popf
retf
scas
mov
cmp
dec
adc
loope
(bad)
sbb
in
sub
mov
ds
loope
and
stc
and
dec
mov
or
jae
rol
mov
shr
or
dec
daa
or
inc
fnsave
call
lods
sub
dec
jl
or
call
xor
adc
add
pop
clc
adc
or
ds
in
test
(bad)
mov
or
sar
ins
sbb
xchg
xchg
ret
pop
mov
scas
mov
push
imul
into
jns
in
test
add
inc
out
mov
or
mov
lock
add
jnp
ja
fadd
mov
sti
mov
(bad)
or
mov
mov
push
mov
xlat
sub
jmp
sti
lods
clc
xchg
jmp
fsubr
sbb
sar
mov
mov
adc
jg
aam
fdivr
pop
ret
xor
test
fild
jge
push
and
outs
mov
int3
xor
adc
fld
cli
jg
push
xor
mov
fs
aas
cmc
ret
mov
dec
and
push
sbb
das
iret
dec
sbb
call
dec
adc
jecxz
pop
mov
inc
pusha
add
jl
ror
(bad)
inc
add
mov
mov
adc
mov
cmp
pop
sbb
cmp
aad
cmc
(bad)
jmp
dec
mov
movs
push
adc
lods
add
or
scas
add
xchg
fwait
clc
outs
loopne
mov
adc
es
scas
dec
fwait
lea
div
in
dec
inc
push
loop
bound
rcr
cli
jmp
fisttp
inc
cmp
xor
jle
(bad)
jnp
add
outs
pop
jl
inc
repnz
adc
xchg
icebp
or
not
js
enter
dec
mov
test
jp
mov
push
jmp
test
fist
js
mov
xchg
jne
mov
xor
push
cmp
ds
in
test
xchg
mov
fdivr
sub
cmps
fsubr
push
jecxz
jmp
adc
jns
cmps
cmp
mov
pop
sub
mov
mov
push
add
cmp
scas
cmp
cli
call
lds
shr
jne
sbb
mov
ds
jnp
xor
xchg
cmp
cmp
mov
cdq
xor
int
mov
outs
mov
xor
outs
sbb
iret
xor
in
push
repnz
sahf
imul
dec
imul
iret
stos
fidiv
mov
push
(bad)
xchg
mov
sub
push
jae
cmp
les
loopne
xchg
jmp
cmps
lods
(bad)
mov
call
mov
les
fisttp
fidiv
mov
or
jl
cmps
sub
adc
pop
sbb
sub
mov
sbb
jl
pop
sbb
cs
into
inc
push
add
(bad)
stc
in
inc
mov
jmp
or
dec
adc
inc
ss
fs
mov
lods
pop
adc
pop
scas
outs
mov
rol
cld
mov
imul
mov
sbb
sub
out
and
sbb
xchg
mov
fstp
sub
ja
push
xor
lods
cmp
ja
call
and
sub
call
call
xchg
cli
repnz
sbb
cmps
dec
add
jp
retf
pushf
dec
call
cdq
fimul
push
out
fmul
shl
and
mov
test
mul
xor
xchg
cmp
mov
outs
push
hlt
xchg
stc
(bad)
mov
cdq
jns
in
cmp
aad
mov
imul
mov
jle
scas
inc
fbld
jo
jl
pop
add
mov
sbb
jl
imul
mov
inc
push
sub
mov
inc
xor
cmp
aaa
jbe
or
jo
outs
ins
fcomp
fild
mov
add
jnp
push
xor
xlat
(bad)
mov
loope
aaa
add
dec
in
or
cli
mov
jbe
sti
into
inc
inc
mov
or
rcl
pusha
cld
mov
cwde
mov
nop
sahf
push
dec
sub
ds
or
xlat
xchg
in
nop
add
imul
xchg
xchg
push
xor
rcr
pop
jge
push
js
(bad)
cmc
xchg
iret
xchg
xor
or
int
(bad)
pushf
jne
out
mov
or
test
inc
rol
push
lds
cmp
std
in
daa
mov
or
jne
outs
sbb
fnstsw
xchg
mov
movs
fild
push
clc
ins
cli
and
test
mov
adc
loop
cld
mov
or
add
fcmove
adc
in
push
add
bndstx
call
call
sub
pop
xor
push
jns
sub
nop
stc
fwait
push
std
push
xor
push
jp
xor
test
les
leave
sbb
or
(bad)
nop
cmps
dec
dec
adc
xchg
mov
gs
icebp
xor
push
dec
inc
mov
inc
pop
mov
push
std
or
mov
test
mov
add
cmp
jnp
push
in
dec
xor
push
(bad)
(bad)
xor
in
pusha
popf
push
jns
and
ret
cdq
lock
push
inc
xchg
ins
and
and
dec
jnp
adc
push
popa
je
or
jg
hlt
push
pop
push
fnstcw
dec
stc
lea
mov
xchg
mov
mov
pop
fnstenv
inc
in
shr
movs
bound
push
or
rcr
into
xchg
mov
or
jno
cld
xor
mov
dec
mov
out
outs
adc
cmp
out
lahf
or
push
pop
pop
and
jecxz
adc
xor
adc
push
movs
daa
shl
fisubr
cmp
js
aad
fwait
pop
sub
arpl
mov
retf
dec
call
xchg
jnp
dec
fsub
mul
sbb
stos
dec
dec
(bad)
loop
xchg
push
out
mov
(bad)
cmps
jnp
mov
mov
dec
out
ds
jl
pop
pop
retf
clc
(bad)
test
fs
or
sti
leave
jmp
jg
ss
xor
int
sbb
leave
ja
movs
adc
out
fdivr
cdq
xlat
adc
add
scas
mov
repnz
scas
xor
inc
(bad)
out
lods
inc
pop
mov
jecxz
and
xlat
adc
xchg
stos
inc
xor
in
xor
ret
(bad)
fstp
cli
pushf
gs
dec
adc
sbb
not
pop
lods
int3
lahf
aad
out
add
push
hlt
sub
pusha
and
xchg
retf
movs
fwait
ret
xchg
inc
rol
(bad)
leave
adc
ret
pop
loop
sub
cli
pop
mov
jbe
arpl
mov
ins
pop
mov
push
mov
(bad)
cdq
js
jle
or
outs
pop
cmp
add
cs
int
test
inc
repnz
fadd
and
test
out
movs
pusha
mov
call
out
icebp
pop
cld
dec
ds
adc
xor
push
mov
pop
sub
add
(bad)
in
fist
jbe
fisttp
push
daa
xor
jns
mov
sub
(bad)
jb
inc
movs
cmp
dec
vzeroall
jmp
(bad)
add
data16
add
sahf
mov
cwde
cmp
and
add
sbb
add
inc
jmp
mov
dec
adc
cmp
xchg
fistp
sbb
retf
and
jbe
and
cmps
(bad)
std
mov
fistp
aam
push
arpl
inc
or
pop
int3
jmp
into
xor
mov
iret
std
pop
sbb
cmp
mov
popa
xor
test
mov
inc
loop
enter
xchg
cwde
(bad)
test
pop
sub
xchg
mov
fiadd
scas
aas
and
icebp
fucomip
cmp
xchg
aas
mov
add
sbb
xor
dec
cmp
add
ret
jne
xor
xchg
sbb
inc
and
add
into
shl
movs
in
stos
sti
pop
test
mov
sar
pop
and
inc
(bad)
push
sub
(bad)
adc
xchg
adc
dec
mov
push
idiv
es
sbb
or
imul
js
and
sbb
cmp
add
pop
(bad)
shl
and
shl
mov
jne
push
cwde
adc
and
(bad)
mov
xor
sbb
imul
dec
ffreep
mov
fincstp
dec
xor
mov
addr16
mov
(bad)
rcr
stos
xchg
mov
jmp
cmp
(bad)
pop
lods
xor
push
sahf
add
xchg
add
arpl
test
fld
pop
mov
(bad)
and
mov
rcr
pop
fadd
mov
or
cmp
xchg
pop
jmp
xor
xchg
into
inc
cli
scas
or
dec
pop
aaa
sar
fldl2e
pop
stc
in
mov
nop
aas
scas
cmc
popa
les
sbb
push
adc
loopne
in
pop
in
call
outs
sub
xchg
mov
addr16
xchg
cmp
retf
call
mov
sbb
test
movs
mov
loopne
pop
fcom
ret
adc
cmp
mov
popa
or
fwait
retf
dec
jle
cmps
sti
ret
jg
lods
inc
add
push
hlt
xchg
xchg
es
xor
inc
jl
add
add
fnstcw
xchg
cmp
inc
fs
xlat
je
pop
jl
push
cmp
aam
mov
mov
mov
or
mov
out
rcr
mov
jl
push
cmp
fist
push
ret
jmp
mov
sar
jno
or
mov
add
sub
out
sub
imul
mov
jb
sub
shl
xchg
test
pop
dec
pop
stos
call
call
call
add
pop
mov
xor
cli
dec
into
xchg
jo
add
jnp
fnstcw
sti
pop
dec
(bad)
int
inc
push
or
movs
jge
jb
repz
pop
ror
push
popa
dec
sub
cmp
sbb
jl
sbb
sahf
pop
sbb
retf
jmp
fstp
repz
ss
shr
lahf
cmc
or
pop
jle
ins
data16
or
mov
mov
inc
sub
mov
xlat
xchg
xchg
aaa
mov
cld
xchg
ins
(bad)
fst
and
(bad)
dec
setno
ins
inc
push
call
mov
and
outs
jp
mov
push
xor
dec
mov
cmps
stos
mov
mov
mov
dec
jbe
int3
test
push
push
mov
jl
adc
mov
das
mov
cld
xlat
mov
adc
jo
cwde
bound
pop
mov
and
mov
ret
jmp
outs
mov
test
outs
jno
or
cmp
dec
lahf
int
adc
sar
mov
add
std
and
mov
lock
loope
outs
cmp
test
jae
test
loope
pop
inc
and
rol
push
gs
out
xchg
inc
shl
and
xchg
cmc
retf
sbb
int
add
mov
mov
inc
iret
enter
ror
sbb
adc
and
jne
into
nop
add
adc
push
mov
imul
setle
cmp
lods
scas
jnp
ins
hlt
mov
mov
pop
mov
les
ins
cmp
cs
ds
dec
mov
push
imul
(bad)
fld
ss
imul
psrlw
mov
outs
popf
mov
dec
jmp
test
and
jmp
out
inc
mov
dec
rcr
scas
push
fsub
rcl
adc
int
and
out
inc
stos
mov
loopne
dec
push
(bad)
stos
adc
push
inc
test
nop
fstp
aad
jne
sub
push
jns
cdq
pop
inc
jl
cmp
xchg
cmp
mov
ins
jle
jb
add
add
mov
sub
mov
jl
jae
(bad)
jmp
lock
in
jnp
pop
cs
test
fstp
pop
ds
jne
mov
push
sbb
in
jb
cld
sub
test
int3
jmp
inc
inc
pop
xchg
mov
xor
out
(bad)
out
nop
enter
fild
call
fmul
push
test
shld
mov
sar
push
ins
mov
(bad)
(bad)
jno
inc
les
jbe
adc
push
inc
je
jmp
push
or
inc
movs
out
retf
aaa
jno
inc
xlat
xchg
dec
jns
enter
lods
lods
xor
rol
cmp
push
push
xchg
test
jae
sbb
scas
push
idiv
sbb
pop
xchg
pop
cmc
mov
sbb
xchg
or
loopne
mov
and
rol
ret
mov
adc
sub
(bad)
push
cwde
ins
stos
xlat
and
xchg
cmps
adc
fdiv
jecxz
jge
add
xor
addr16
data16
fsubr
jecxz
fisubr
(bad)
js
jmp
push
mov
cld
mov
push
out
test
call
pop
dec
push
aas
into
fcomp
int
and
pop
or
jecxz
jge
clc
lahf
mov
scas
test
mov
add
jmp
inc
mul
pop
out
sub
push
or
jle
mov
adc
repz
pop
movs
into
push
sbb
and
mov
fist
data16
call
mov
das
imul
and
xlat
xor
pop
retf
xchg
mov
jnp
aad
mov
repz
xor
mov
push
xlat
cmp
adc
sub
pushf
xor
aad
out
adc
mov
jno
add
adc
arpl
mov
fidiv
mov
(bad)
sub
sahf
or
dec
iret
pushf
outs
dec
xchg
fwait
in
ret
or
test
or
mov
clc
sub
jbe
stc
or
(bad)
fimul
je
scas
dec
sub
arpl
push
stos
sti
out
dec
aad
jnp
mov
cmp
ror
rol
pop
pop
mov
xor
fldenv
pop
rol
pop
jg
into
push
call
lds
mov
push
stos
fcmovne
in
jne
xchg
mov
sahf
dec
dec
jmp
xchg
mov
jge
rcr
fisub
inc
pop
mov
xchg
ret
fiadd
push
mov
and
dec
ret
pop
mul
mov
jl
jns
in
xor
push
es
mov
mov
push
mov
cmp
loopne
jecxz
ins
push
inc
mov
jne
jle
call
xchg
dec
mov
stos
out
pop
icebp
push
in
or
jns
pop
das
aad
sub
or
clc
cmp
rcl
je
jbe
adc
pop
mov
test
fistp
inc
lods
or
sbb
jl
pushf
pop
pop
outs
arpl
outs
dec
push
mov
add
cli
fdivr
pop
push
xor
out
(bad)
mov
sub
xchg
xchg
sub
jmp
stc
xor
jg
ins
loop
and
inc
clc
jmp
and
mov
das
punpckldq
repz
std
push
sub
mov
arpl
shl
jge
xor
mov
jnp
xchg
sbb
cld
add
int3
inc
push
int
imul
call
mov
cld
add
push
fdivr
outs
lock
adc
dec
add
int3
gs
sub
es
jnp
pop
inc
loopne
xchg
into
std
in
inc
jno
xor
repz
and
(bad)
mov
dec
sti
xchg
repnz
call
popf
(bad)
lahf
push
popa
cmc
out
mov
and
add
(bad)
mov
fisttp
retf
mov
pop
pop
sti
shl
push
ja
mov
add
mov
inc
sub
into
outs
ins
cmps
inc
cmp
mov
sar
(bad)
ins
dec
pop
pushf
xor
jl
mov
data16
enter
adc
add
mov
fnstenv
fistp
das
iret
inc
cmp
cmp
or
std
loop
mov
cdq
(bad)
add
(bad)
pop
mov
inc
lock
mov
test
test
adc
push
shr
mov
jo
mov
sbb
aam
inc
(bad)
push
xchg
das
inc
jnp
retf
inc
sar
(bad)
call
rcl
lahf
mov
adc
push
fsubr
shl
inc
pop
scas
or
out
mov
cmps
test
push
push
pop
sub
clc
pop
fimul
arpl
shl
ss
sbb
shl
in
bound
adc
loop
out
adc
inc
das
or
jmp
lahf
xchg
xor
pop
jmp
push
push
adc
push
xor
add
pop
jecxz
xor
ds
mov
dec
into
aas
mov
sub
push
in
stc
add
div
(bad)
int
mov
mov
adc
sahf
iret
cmp
or
stos
jecxz
push
movs
push
jmp
xchg
sub
inc
sbb
cmp
hlt
imul
fwait
xchg
repnz
popf
movs
xor
xor
les
rol
mov
dec
lea
push
sbb
push
sbb
fnsave
stc
ficom
stos
test
daa
pop
test
in
mov
ds
push
jno
out
call
pop
xchg
loop
out
push
test
test
or
add
xchg
loop
repnz
xchg
sub
fiadd
or
sub
xchg
push
ficom
or
add
cmp
mov
aam
inc
pop
lods
push
data16
ss
frstor
cmps
inc
xchg
in
call
(bad)
pop
jp
sub
push
(bad)
jecxz
aaa
push
and
retf
adc
dec
mov
test
stos
stos
fs
sbb
sbb
into
fist
ja
rcr
jo
test
jmp
shl
push
fnstenv
add
out
ror
sub
push
add
pop
sub
add
ret
call
mov
mov
and
imul
sbb
test
jg
or
mov
or
push
push
cmp
mov
mov
repz
mov
shl
and
ret
add
inc
into
cmc
xchg
adc
popa
add
sbb
in
push
adc
adc
mov
shl
popf
push
inc
xchg
pop
ja
mov
xchg
rep
fcomp
jo
sub
and
xchg
scas
call
jecxz
sub
jns
inc
inc
adc
cmp
jl
or
lahf
mov
retf
or
inc
popa
hlt
ja
punpcklwd
je
leave
pop
xor
inc
dec
sbb
jbe
xchg
gs
sbb
sub
popa
out
jp
sti
xchg
xchg
jp
dec
fidiv
pop
jbe
shr
mov
frstor
into
push
inc
pop
add
fmul
fist
cli
je
rcr
movs
jno
add
jns
sub
bnd
mov
ss
test
jecxz
jmp
push
and
mov
loope
add
pop
or
bound
ss
jg
cmp
mov
mov
pop
int
scas
sub
data16
test
shl
mov
push
ds
aas
pop
std
jae
call
inc
js
pop
popf
xchg
nop
cmps
mov
xchg
mov
push
out
pop
outs
pop
pushf
push
inc
jp
jbe
sub
mov
cmp
in
jmp
pop
aas
push
add
mov
arpl
xor
aas
lahf
cmps
push
dec
imul
push
cdq
add
sti
mov
mov
clc
lahf
retf
xchg
xchg
lahf
add
and
push
fwait
adc
inc
cmps
iret
or
mov
and
jmp
aam
inc
xor
fdivr
pop
movq
jbe
out
enter
adc
sub
(bad)
adc
nop
add
in
jo
xor
and
adc
inc
leave
imul
mov
lea
mov
call
jle
retf
mov
cmp
ins
xor
mov
outs
test
fcom
or
shl
repz
icebp
jne
push
mov
and
jno
mov
mov
nop
out
rcl
sbb
mov
push
dec
fsubr
push
int3
xlat
sbb
xlat
xor
mov
imul
sahf
int
or
frstor
pop
cwde
jne
push
lods
xchg
or
rol
cmps
push
cmc
adc
enter
fwait
arpl
jb
test
fwait
test
jno
xchg
jmp
xor
jo
or
xor
sub
aaa
jecxz
popa
mov
jmp
cmp
leave
dec
xor
dec
(bad)
mov
scas
cmp
cs
add
pmaxsw
lock
ror
pop
dec
dec
cs
js
inc
(bad)
fild
fadd
and
inc
push
push
jg
dec
sub
scas
push
dec
mov
(bad)
repz
gs
or
sub
rcl
adc
jecxz
scas
cmp
hlt
loopne
mov
cmp
loope
mov
mov
push
(bad)
push
add
or
(bad)
aas
dec
in
cwde
push
mov
aas
dec
aam
mov
adc
push
inc
sub
jp
mov
mov
add
in
(bad)
pusha
xchg
add
ins
pop
inc
sub
jne
fidiv
shr
push
int3
cmp
dec
inc
in
ins
shr
out
adc
in
mov
mov
xor
or
mov
pop
cli
adc
push
adc
jmp
cmps
pop
jp
out
jecxz
or
mov
push
cwde
mov
retf
or
jecxz
outs
repz
mov
cmp
inc
dec
pop
dec
pop
pop
cmp
add
aam
xor
xchg
das
push
add
outs
movs
out
mov
retf
mov
fcomp
imul
xchg
stc
dec
imul
pop
mov
add
imul
jnp
mov
mov
dec
push
clc
adc
cmp
push
add
jae
stos
imul
mov
addr16
mov
(bad)
lds
fcom
jl
cwde
add
movs
xchg
test
sub
pop
(bad)
retf
jne
or
pop
adc
xchg
push
fwait
inc
leave
ss
jo
imul
div
jecxz
xchg
mov
pop
adc
cmc
xor
jle
dec
dec
loop
mov
jp
pop
push
sbb
mov
adc
rcr
and
movs
hlt
add
jae
pop
fmul
in
stc
pop
je
test
test
mov
dec
(bad)
imul
adc
and
fwait
and
push
(bad)
cmp
or
pop
sbb
fst
and
mov
call
cmp
mov
ret
int
sub
sub
xchg
push
xchg
cmps
push
adc
cmp
mov
(bad)
int
dec
outs
push
pop
mov
fidivr
mov
adc
(bad)
mov
test
push
mov
(bad)
shl
or
or
add
loope
sbb
xor
add
sbb
outs
ficom
jb
push
xor
mov
cli
shl
sar
inc
cmps
fistp
inc
out
add
mov
pop
mov
mov
and
mov
push
adc
lock
sahf
xchg
add
inc
(bad)
in
adc
adc
xor
jae
ret
cmp
cli
xchg
push
add
test
dec
sar
mov
sub
inc
sbb
add
sbb
cwde
loope
mov
push
add
jnp
std
adc
aad
inc
loopne
fs
fwait
cwde
xchg
cli
dec
ret
push
push
jl
push
ret
cmp
aam
loopne
aaa
mov
and
sbb
push
mov
xor
cld
pusha
movs
inc
xchg
pop
pop
lods
jnp
jmp
retf
inc
dec
ret
xor
sub
cmp
mov
xchg
jb
ja
fbstp
inc
fbstp
xor
push
push
add
mov
cmp
mov
stos
inc
je
(bad)
enter
mov
mov
rcr
aaa
dec
add
sbb
mov
push
add
je
mov
pop
mov
ja
popa
or
push
push
ja
lds
dec
pusha
add
xchg
into
dec
add
sub
js
cdq
cmps
cmp
and
push
pop
lahf
jns
dec
or
jno
jle
push
cli
aad
mov
xor
pmaxub
lds
fcmovnbe
in
or
push
push
xor
gs
cli
xor
inc
xor
xchg
stc
cmp
into
fnsave
das
jmp
loope
repz
gs
or
mov
leave
or
mov
repz
jl
(bad)
sbb
xchg
les
xor
adc
fwait
and
mov
or
fstp
ret
push
movs
test
sub
lods
lods
gs
push
xchg
dec
fwait
push
xor
sub
sub
test
mov
xchg
iret
xchg
fcmove
mov
mov
jae
or
in
inc
mov
mov
(bad)
add
aad
mov
mov
push
cdq
jmp
add
lock
fdiv
and
jne
pop
or
adc
pop
std
stos
pop
movs
jmp
push
arpl
popf
jne
mov
mov
mov
mov
mov
mov
or
sbb
pop
cli
rol
pop
dec
jno
pop
neg
or
aad
sub
ret
or
fwait
(bad)
mov
or
aad
pop
push
cmp
cwde
sbb
push
adc
sar
jnp
clc
xor
and
sub
bound
dec
rcr
xor
or
in
mov
or
or
mov
stos
test
(bad)
mov
inc
shl
dec
inc
or
daa
fiadd
pushf
push
add
xchg
or
rcr
mov
mov
je
pop
adc
xor
or
sar
lds
fbstp
js
push
jmp
test
je
jge
dec
mov
(bad)
or
jp
dec
sub
lock
lea
fmulp
jne
fstp
ins
xor
popf
or
test
jnp
pop
cld
std
out
push
cmp
mov
test
cmp
push
add
(bad)
and
pop
mov
mov
call
je
dec
sbb
jo
enter
xor
sub
or
ss
push
mov
dec
pop
jno
inc
hlt
push
jno
out
jle
imul
push
pop
outs
and
test
lods
pop
push
ds
dec
fldenv
cmps
adc
dec
sahf
and
cmp
and
adc
add
js
loop
mov
mov
addr16
pop
add
adc
xchg
nop
call
mov
dec
popf
bound
cwde
fisubr
cmp
je
and
ins
sbb
mov
mov
pop
pop
push
ds
sbb
mov
sub
nop
jns
gs
pop
cmp
in
pop
pop
sub
xchg
pop
mov
popf
fcomp
rcl
dec
cmp
dec
xchg
cmp
and
add
sbb
retf
fmul
dec
sbb
sbb
and
shl
ret
and
ror
mov
leave
stc
xchg
add
lock
dec
fmul
sub
fsub
test
mov
cli
mov
mov
out
xor
(bad)
std
pushf
add
xchg
adc
ja
cmp
xor
fst
cmps
push
push
xor
retf
cmp
test
add
pop
nop
ins
scas
sbb
and
(bad)
xlat
shr
dec
lock
xchg
xchg
mov
jecxz
xchg
mov
cmp
jg
adc
mov
sbb
xchg
ds
and
add
dec
inc
dec
(bad)
sbb
neg
or
xor
lods
icebp
xchg
jbe
ins
push
push
and
out
mov
mov
inc
mov
xor
or
movs
jb
inc
xchg
pop
or
frstpm(287
xchg
inc
aad
cmp
test
mov
in
lods
mov
pop
cmp
mov
das
cmp
cmc
and
sub
pop
inc
mov
js
or
add
mov
adc
test
int
inc
aas
les
shl
jge
leave
mov
adc
std
sar
imul
mov
inc
pop
js
repz
aas
fabs
cwde
hlt
das
push
cdq
das
jmp
out
xchg
sub
push
xor
ja
in
js
cmc
(bad)
pop
and
(bad)
int3
xchg
adc
sar
loop
clc
adc
into
sub
mov
adc
nop
dec
aad
fnstenv
in
cmp
jns
sbb
adc
daa
and
or
dec
and
push
ror
stos
sub
fdiv
and
icebp
xchg
fs
sbb
or
(bad)
adc
jno
shr
inc
sub
inc
inc
mov
(bad)
fdivp
ins
das
mov
repz
pop
mov
adc
fisttp
pop
retf
xchg
adc
ds
cs
pop
cld
in
push
and
cwde
ret
ds
inc
mov
loopne
adc
mov
(bad)
pop
push
adc
xchg
movs
std
mov
push
pop
and
aas
dec
and
fmul
xchg
sbb
out
push
fcom
or
mov
mov
jae
or
dec
jmp
into
in
or
inc
repnz
rol
cs
cdq
inc
cld
fld
sbb
jns
sbb
push
and
imul
xlat
cmp
add
dec
movs
xor
or
nop
sbb
lods
jo
gs
fild
xor
jb
mov
mov
aaa
ja
xchg
arpl
or
mov
repnz
out
aam
(bad)
adc
push
mov
clc
(bad)
push
int
or
(bad)
mov
xchg
jo
call
cmps
fwait
inc
inc
push
mov
ret
lahf
pushf
and
or
add
cmc
push
add
mov
mov
mov
jg
xchg
mov
(bad)
sar
cli
and
xor
repz
sahf
call
enter
in
cwde
ret
push
or
mov
jno
cmps
mov
or
push
loope
scas
pushf
shl
push
adc
(bad)
mov
lods
jg
out
jns
add
push
iret
stos
loop
pop
mov
out
or
add
cmps
push
fst
out
aas
vpmacsswd
lock
cs
or
and
(bad)
dec
out
shl
pushf
add
in
inc
leave
inc
pop
and
test
sub
test
les
xor
call
mov
and
xchg
out
aam
mov
or
mov
(bad)
jnp
jne
pop
repz
pop
xchg
outs
inc
daa
xchg
sub
(bad)
pushf
inc
xchg
jmp
out
inc
lock
lods
lahf
in
add
mov
cmp
ds
xor
(bad)
dec
ret
je
mov
aas
inc
fcomp
mov
add
lea
repnz
ja
in
dec
add
out
push
mov
xchg
push
call
lock
adc
sbb
inc
xor
sti
lds
mov
cld
mov
jecxz
repz
not
jbe
mov
xor
xlat
pop
sahf
jmp
sti
jae
xor
aam
(bad)
sbb
or
sbb
fst
jne
aad
xor
mov
mov
outs
jae
adc
lock
test
or
test
xor
pop
dec
sahf
sti
mov
clc
js
inc
adc
xor
push
or
psubw
mov
nop
jmp
mov
jl
mov
jle
test
jne
mov
scas
ja
mov
pop
fs
sbb
jge
fadd
jb
and
int3
cmp
retf
push
leave
in
mov
pushf
adc
cmp
stc
call
pop
js
out
push
dec
cmc
jg
jle
fst
xchg
pop
or
jns
dec
pop
jo
arpl
mov
or
push
(bad)
xor
aas
xchg
lea
sub
call
repnz
push
enter
jne
sub
inc
rcl
mov
popa
xor
cmps
push
mov
loope
add
inc
mov
dec
jno
loope
and
jno
retf
dec
loop
xchg
jb
stc
or
cmp
shl
push
xor
pushf
neg
cwde
ja
mov
jmp
test
mov
lock
gs
retf
jne
sbb
cmp
mov
mov
mov
(bad)
cmc
fstp
ror
dec
sahf
loope
loop
jbe
xchg
jl
and
mov
inc
inc
mov
retf
xchg
or
mov
js
in
xchg
pop
scas
dec
push
add
sub
or
inc
jno
inc
cmp
out
push
cmp
cwde
or
sub
test
mov
dec
and
imul
add
repz
sbb
sub
(bad)
mov
aas
arpl
jae
stc
sub
mov
out
in
xchg
out
ret
cmp
xor
call
cs
outs
push
xchg
ins
shl
inc
sbb
and
fs
pop
push
pop
ficom
or
adc
test
pop
test
gs
adc
xor
add
(bad)
pushf
lea
mov
xlat
das
ror
pop
xlat
inc
push
cmp
ins
add
push
mov
push
std
xchg
sub
jo
sbb
enter
push
pop
outs
shl
lods
in
cmp
out
call
bound
push
sub
sub
add
loope
(bad)
cwde
loop
or
shl
jg
stos
test
cmp
fld
cmc
iret
jno
lock
sbb
sbb
cli
retf
mov
popa
inc
xlat
inc
ret
retf
adc
mov
push
mov
into
lods
add
imul
aam
or
adc
dec
dec
lock
xchg
mov
fisttp
xor
mov
fiadd
and
loop
aad
pop
(bad)
out
sbb
loope
(bad)
(bad)
or
adc
xchg
mov
imul
(bad)
test
in
mov
sahf
jae
push
gs
sub
fwait
int3
add
xor
inc
push
into
jb
mov
xchg
adc
and
and
jns
mov
mov
push
adc
push
mov
sbb
cmps
dec
add
nop
add
sbb
pop
cmp
xor
pop
int
call
mov
aad
mov
clc
sub
and
cwde
imul
lahf
or
mov
jl
mov
jnp
mov
and
sbb
dec
and
aad
xor
fisttp
test
cmps
fcomi
addr16
fs
cmp
(bad)
adc
inc
cld
push
adc
cmp
dec
arpl
jmp
mov
cmp
pop
fsubr
ret
fst
cmps
in
fisttp
shl
cmc
ss
push
add
(bad)
sub
mov
push
hlt
inc
add
mov
cmp
pop
add
sbb
imul
mov
pop
(bad)
(bad)
hlt
mov
push
push
lea
mov
and
(bad)
mov
repnz
in
mov
sub
mov
push
fiadd
sub
push
fdiv
jge
ret
je
stos
data16
dec
(bad)
iret
aad
ficom
or
out
push
jl
cli
add
push
mov
scas
or
int3
lock
sti
mov
pushf
cmp
adc
adc
test
(bad)
dec
adc
lea
push
test
inc
push
cli
adc
ja
in
out
xchg
mov
mov
mov
mov
cmp
sar
fmulp
stc
sbb
aaa
and
fdiv
push
push
pop
fcmovnbe
js
(bad)
xchg
test
pop
push
sahf
push
lds
push
jbe
pop
ror
int
push
lock
push
jae
xchg
pop
adc
lods
xchg
lods
stos
mov
scas
ret
aas
sbb
push
fld
loopne
pop
repnz
dec
sub
jae
dec
daa
cmp
test
sub
pop
cmp
add
add
gs
pop
(bad)
icebp
adc
dec
loopne
leave
pusha
add
int3
dec
sbb
es
inc
(bad)
xchg
loop
nop
jecxz
std
mov
mov
push
add
cmp
mov
sbb
shl
aad
cwde
leave
xor
add
stc
lods
lahf
mov
jns
pop
pop
ja
xchg
dec
sahf
cmp
jp
fild
fld
adc
pop
cdq
mov
loop
fidivr
outs
pop
pushf
fs
push
adc
and
inc
icebp
int
rcl
inc
jno
out
jno
adc
in
loopne
xchg
std
repz
aam
cdq
jbe
out
out
adc
jae
push
fcom
aaa
cmp
call
dec
ins
jno
or
sub
int
adc
stos
xchg
movs
addr16
jmp
loopne
arpl
sar
pop
stos
mov
cmc
aam
pusha
xchg
mov
test
mov
jmp
nop
movs
adc
xchg
bound
mov
pop
jle
mov
je
jl
std
mov
leave
ds
scas
popa
sub
mov
out
ja
test
in
pop
cwde
jge
add
xchg
shl
push
stos
pop
add
in
sbb
sbb
cmp
(bad)
mov
jnp
les
int3
(bad)
ror
pop
into
test
jmp
add
(bad)
mov
mov
cmp
outs
js
push
jns
dec
mov
scas
repnz
cmc
or
mov
(bad)
xchg
movs
movs
lock
ins
sar
inc
add
sti
cmp
dec
push
popa
shl
xlat
test
and
and
cmps
(bad)
iret
cmc
outs
retf
jae
fld
xchg
bound
lock
(bad)
mov
addr16
repnz
dec
and
xor
sub
aaa
mov
outs
jge
cld
iret
adc
dec
jp
test
dec
dec
adc
mov
into
lods
(bad)
in
pop
sbb
neg
adc
loop
test
pop
cmp
mov
cmps
push
xor
adc
std
pusha
push
loop
stos
repnz
loop
fcmovbe
inc
daa
xor
ret
pop
dec
jb
jae
ror
jmp
cmp
ret
outs
lods
mov
push
cmp
push
dec
mov
addr16
cwde
jne
call
push
nop
daa
scas
outs
or
sbb
or
or
scas
push
dec
push
std
mov
int
test
sub
mov
ins
mov
mov
mov
cmp
js
and
mov
rol
gs
push
test
fiadd
xchg
sub
mov
adc
dec
jl
addr16
imul
(bad)
xchg
lock
ret
popa
ins
lods
iret
push
sbb
(bad)
fadd
(bad)
dec
inc
xlat
in
mov
ins
pop
pop
not
add
push
sub
rol
test
xor
mov
call
mov
push
mov
mov
fcmove
out
push
clc
sti
mov
inc
jp
fld
sar
scas
shl
push
mov
xchg
mov
dec
shl
repnz
mov
outs
push
stos
jg
add
scas
xlat
or
or
loopne
mov
repnz
pop
cmc
xchg
sub
inc
inc
mov
dec
pcmpgtb
pop
sbb
and
mov
adc
add
(bad)
inc
pop
mov
pop
pop
xchg
sub
and
dec
push
call
mov
fwait
jmp
pop
sub
sub
sti
push
jg
jp
xor
adc
scas
add
in
ficomp
ror
gs
push
cmp
add
pop
ja
push
enter
aam
pop
or
pusha
push
mov
jns
popf
aas
popf
dec
inc
jmp
sbb
or
enter
adc
bound
jmp
sub
add
mov
popa
jl
stos
cdq
in
nop
push
inc
rol
inc
jg
xor
dec
mov
pushf
mov
pop
sbb
mov
sub
(bad)
mov
into
push
jnp
mov
push
dec
sbb
stos
ins
movs
loope
jb
in
mov
(bad)
out
jl
dec
sub
add
sub
push
jecxz
jae
and
xor
std
call
movs
in
pop
inc
or
add
js
sbb
dec
mov
(bad)
jo
and
sar
cmp
jne
add
loop
mov
cwde
xchg
sbb
pop
dec
jle
adc
adc
fidivr
jmp
scas
repnz
cmps
pop
mov
ror
ror
int
inc
(bad)
cmp
pop
stc
repnz
pop
mov
in
fst
dec
icebp
xchg
shr
arpl
mov
fwait
out
push
push
lea
sub
repz
mov
mov
cwde
lea
inc
jno
test
out
inc
adc
cwde
nop
je
sahf
lahf
xor
shl
pop
in
fcom
push
(bad)
ins
dec
in
call
stc
xchg
and
pop
mov
lods
jecxz
dec
dec
into
sub
sbb
pop
sub
popf
(bad)
fld
das
mov
mov
jb
fcmovne
dec
pop
dec
mov
inc
and
test
and
xor
addr16
call
int
jl
stos
daa
not
jp
mov
sub
mov
dec
mov
xchg
mov
add
out
push
mov
pop
mov
inc
push
fisub
in
loop
jno
aas
int3
add
ss
cmp
push
inc
sbb
inc
and
stos
mov
jae
cli
pop
mov
inc
push
fisub
or
add
js
sar
mov
js
out
cdq
popa
ffree
out
out
arpl
and
jle
repz
add
xchg
das
addr16
mov
ins
stc
fsub
loope
ds
pop
sbb
das
ss
fwait
cdq
call
dec
adc
inc
mov
test
rcl
enter
adc
cwde
mov
out
cmp
repnz
jmp
iret
cmp
int
aaa
cmps
std
call
lods
push
push
dec
or
xchg
inc
or
aam
stos
xor
sub
ret
mov
mul
out
jg
jno
test
cmps
inc
xchg
inc
or
pop
dec
cli
jno
fwait
xchg
jo
sub
(bad)
retf
scas
bound
stos
push
fwait
mov
bound
mov
enter
xor
sbb
inc
jns
dec
pop
xchg
mov
jne
jo
cmp
out
push
pop
and
retf
or
jne
mov
les
addr16
mov
std
mov
add
mov
jbe
loope
js
jle
adc
fs
outs
fnstenv
push
pushf
lds
cwde
mov
cdq
push
jae
jbe
adc
pop
push
and
or
fldenv
push
xor
ds
sub
hlt
sbb
call
ror
mov
cmp
jae
dec
stos
jo
cmp
push
mov
bound
add
loope
sbb
mov
push
or
fadd
into
lods
not
pop
xor
fsub
daa
and
add
(bad)
dec
sub
xor
pusha
sti
xor
cli
inc
in
test
push
pushf
dec
xchg
icebp
sar
dec
mov
test
loop
mov
mov
dec
fs
jl
ins
adc
stc
jge
je
xchg
ret
sbb
inc
or
xchg
push
ret
pusha
xor
in
es
(bad)
ja
or
pop
xor
jge
imul
adc
push
das
sub
out
stos
movs
jmp
shr
fidiv
aam
test
test
outs
retf
lea
in
int3
mov
adc
or
add
dec
data16
jns
push
and
pusha
mov
and
push
push
jge
pop
sub
mov
and
mov
push
pop
push
sub
cli
sub
into
loope
push
pop
push
mov
cmps
jecxz
std
add
test
test
adc
and
sub
bound
adc
add
mov
and
push
cwde
stos
jae
add
mov
pop
outs
call
pop
pop
mov
or
mov
cmc
mov
pop
outs
add
dec
lods
inc
add
enter
imul
loop
bound
mov
int
and
jno
inc
std
mov
inc
xor
cmp
pop
sbb
shr
inc
stos
mov
xchg
(bad)
leave
fistp
xlat
pop
dec
adc
xchg
mov
sti
pop
popa
cwde
mov
(bad)
sbb
inc
xchg
dec
or
ja
idiv
out
and
add
and
bound
jmp
in
add
pop
pop
mov
imul
cmp
lahf
cmp
sbb
dec
push
sbb
cld
es
xchg
imul
inc
in
jnp
mov
push
test
sbb
repnz
nop
pop
in
jbe
pop
mov
clc
stos
or
mov
hlt
sahf
out
ja
sub
fld
pop
add
inc
xchg
cmc
imul
mov
outs
or
sub
lea
outs
stos
jle
addr16
fisubr
mov
movs
packssdw
aaa
pop
sbb
jns
inc
ret
movs
ret
cmp
cmp
jae
cmps
bnd
jp
add
mov
data16
(bad)
std
dec
lea
and
cmc
xor
xor
bound
retf
or
jae
xchg
mov
xlat
les
mov
les
jmp
dec
or
ins
lds
mov
fistp
push
jmp
fcom
fisubr
push
jo
pop
jbe
xchg
ins
sub
jmp
mov
jmp
add
mov
ss
fidivr
bnd
les
adc
stc
loope
add
cmp
stc
mov
pop
jp
jecxz
xor
stc
in
xor
addr16
mov
add
add
fisub
dec
popf
mov
stos
pushf
jo
(bad)
daa
ds
stos
arpl
xor
psraw
jo
and
xor
fidivr
into
xor
pop
pop
sub
out
mov
mov
sbb
iret
xor
icebp
inc
mov
add
std
es
fnstcw
mov
cwde
xchg
mov
dec
fadd
icebp
call
add
sbb
nop
sbb
mov
dec
xchg
pusha
jmp
or
cmc
pop
mov
test
xchg
lock
out
outs
outs
ins
sbb
test
mov
and
cwde
sub
add
inc
cmp
jl
addr16
mov
push
les
retf
imul
lahf
jle
nop
pop
inc
xchg
retf
scas
push
enter
sbb
fsub
push
std
push
imul
dec
fisttp
hlt
pop
fwait
xor
std
and
shl
pop
inc
cmp
popa
mov
pop
add
mov
or
push
xor
fldcw
add
adc
sub
cmp
xor
loop
movs
pop
aaa
jno
push
cs
ss
cli
or
mov
nop
imul
bound
stos
arpl
dec
shl
inc
xchg
lahf
pusha
mov
ja
dec
cmps
mov
xor
jg
pop
adc
or
(bad)
fadd
jno
cmp
mov
call
cli
int
cmp
aas
idiv
cdq
lods
cmovl
test
nop
int
pop
inc
test
pop
lods
mov
je
push
pop
ins
cmp
fild
cmp
jns
lods
xchg
addr16
lahf
or
(bad)
lods
or
adc
es
add
jnp
les
push
pop
ins
or
and
(bad)
xor
cmp
rcl
inc
xchg
ins
clc
jae
mov
or
pop
lock
xor
ret
inc
mov
lahf
sbb
mov
mov
xor
icebp
ss
cli
pop
aam
mov
leave
push
inc
push
scas
xchg
jns
mov
cmp
cmp
call
sub
pop
jno
es
mov
inc
xchg
or
sti
fcmovb
and
loope
xchg
pop
mov
sar
mov
mov
retf
add
pop
xchg
mov
xchg
fwait
loope
int
jmp
mov
dec
les
ror
inc
jle
sahf
add
pop
ja
xor
push
cmps
fisub
add
xchg
dec
sub
push
int
bound
push
push
shl
or
(bad)
dec
movs
fisub
int
xlat
inc
cmp
or
std
jg
pop
push
stc
call
aad
scas
add
or
adc
pop
dec
pop
inc
pop
inc
repz
shr
push
pop
arpl
mov
push
cmps
ss
xchg
push
jmp
(bad)
jp
mov
inc
cwde
sub
ss
and
in
push
movs
(bad)
push
sub
adc
dec
and
pop
inc
stc
jge
fmulp
jno
jne
nop
gs
add
cmp
adc
cwde
test
mov
inc
gs
adc
in
test
dec
scas
not
js
test
and
sahf
sbb
xor
pop
push
add
push
mov
test
xlat
hlt
add
loopne
xor
sti
push
jb
in
ja
cwde
std
mov
ins
mov
test
mov
popf
popa
clc
adc
jl
adc
mov
xchg
pop
sub
fnstsw
out
or
in
test
adc
ins
adc
test
pusha
retf
mov
inc
mul
sbb
popa
cmp
sti
dec
inc
push
mov
(bad)
jmp
mov
mov
pop
in
xchg
add
int
mov
icebp
xchg
xor
lods
ds
push
mov
jno
rol
scas
cmp
out
fldenv
inc
call
sub
aam
and
js
jne
and
sti
xchg
lds
sub
adc
cmp
(bad)
loop
in
push
repnz
mov
lds
retf
lea
or
cs
loop
in
xchg
xor
xchg
lea
ins
adc
into
(bad)
ret
or
jecxz
push
mov
add
or
pop
push
jno
dec
or
pop
clc
sub
or
fcmovbe
cld
pop
inc
jne
mov
sbb
adc
call
in
(bad)
xor
mov
lahf
(bad)
sub
jp
push
cmp
or
pop
mov
inc
fwait
cld
push
xlat
lods
xchg
mov
es
in
xchg
mov
mov
pmulhuw
inc
adc
lods
out
push
add
pop
in
(bad)
jno
xor
mov
das
into
ins
loope
jmp
add
pop
and
lods
daa
int3
push
push
jae
pushf
xchg
cs
jp
scas
ret
jns
call
stos
cmps
push
aas
lds
fistp
mov
je
adc
test
pop
dec
inc
iret
jl
in
push
sub
xchg
adc
fst
popa
loop
rcr
add
mov
aaa
in
in
arpl
js
sbb
mov
add
mov
loope
call
pop
scas
movs
(bad)
je
pop
inc
ja
fisub
mov
ins
sbb
das
retf
jl
fwait
push
(bad)
cmp
inc
cmp
sti
rcl
xor
sub
jne
push
jns
jno
mov
add
ss
mov
std
aas
mov
mov
pop
mov
mov
cmps
pop
dec
inc
clc
mov
xor
stos
ds
lods
push
or
sub
mov
push
test
cmp
inc
pop
repnz
dec
cmc
js
out
mov
bound
call
fs
pop
shl
pop
inc
pop
add
mov
pop
mov
int3
cvtps2pd
loopne
aam
imul
pop
xchg
int3
and
lea
sub
sub
dec
test
push
rcl
cmp
inc
call
sbb
xor
inc
(bad)
daa
xor
add
add
test
das
sub
ret
xor
jo
jmp
pop
sbb
jb
stos
sbb
jp
pop
inc
sub
push
hlt
xchg
jle
stos
mov
adc
and
xchg
movs
out
xchg
das
pop
and
push
mov
push
jle
daa
mov
and
mov
dec
mov
ja
in
inc
scas
out
jl
sub
sub
out
dec
(bad)
mov
dec
push
shr
das
mov
inc
xchg
aad
in
inc
popf
jne
cmp
shl
cmp
xchg
inc
fs
push
mov
inc
in
test
sub
daa
dec
cmc
mov
mov
mov
cld
js
jo
push
or
xchg
std
rcr
pop
(bad)
xor
dec
rcr
dec
jae
mov
pop
call
adc
inc
aad
bound
fnstenv
aad
mov
jne
hlt
pop
ds
call
jb
scas
sbb
fst
in
push
hlt
out
je
mov
mov
mov
ins
xchg
pop
add
adc
ror
inc
and
mov
mov
mov
int3
idiv
ss
cld
test
cld
aad
and
adc
loopne
fnstcw
xor
aaa
mov
or
test
pop
mov
push
into
push
push
retf
cmp
lock
push
xchg
fcmovnb
btr
mov
lea
jge
popa
sub
addr16
jmp
imul
cmc
jge
lahf
and
pop
xchg
cmp
and
mov
inc
jns
mov
adc
cdq
adc
retf
inc
cmp
clc
mov
int3
xor
mov
mov
in
inc
mov
data16
outs
cwde
cmp
push
enter
scas
push
loop
add
ss
cwde
lock
ja
mov
cmps
cmps
call
adc
cmp
ja
ins
std
mov
aas
dec
xor
or
out
(bad)
adc
lods
in
aaa
sub
dec
adc
test
scas
(bad)
and
add
data16
cmp
test
rol
add
dec
and
push
push
mov
sbb
mov
loope
shr
cld
lea
xchg
iret
rol
test
scas
mov
aaa
call
mov
stos
mov
rcr
clc
(bad)
xlat
(bad)
mov
adc
xchg
pop
out
repz
jns
imul
inc
call
stos
xor
loopne
popa
mov
fimul
sub
fcmove
mov
lock
xchg
mov
scas
xor
add
or
jo
adc
cs
push
inc
add
fdiv
add
loope
pop
clc
scas
or
stos
jb
sub
in
pusha
test
sbb
inc
xor
inc
sbb
pop
pushf
fild
nop
dec
mov
mov
adc
pop
jae
aad
pop
pushf
dec
sbb
dec
sbb
jae
sub
lods
pop
sbb
fwait
and
imul
mov
push
arpl
out
jo
lods
call
fwait
mov
sub
cmp
push
sar
xor
pusha
mov
ins
(bad)
std
and
adc
mov
jp
dec
stos
jnp
xchg
dec
mov
jg
stc
popf
popf
jl
xchg
jl
fst
sbb
sti
add
xor
data16
inc
test
cmps
(bad)
pop
or
(bad)
jnp
and
call
ret
push
in
mov
mov
in
(bad)
test
enter
lods
sub
or
add
stos
loop
adc
aad
and
(bad)
std
push
out
je
mov
addr16
cs
fcom
fwait
dec
jae
mov
or
out
mov
pop
xchg
inc
and
sbb
xchg
adc
adc
int
addr16
leave
mov
push
fbstp
dec
mov
fisubr
(bad)
lock
sahf
jp
xchg
mov
jb
lahf
gs
cs
add
cmc
lahf
cli
mov
gs
(bad)
mov
adc
leave
loope
pop
aaa
sbb
fwait
jmp
hlt
daa
sbb
out
and
lea
dec
dec
jge
mov
icebp
jg
ret
xor
dec
imul
xor
cmp
cli
push
jmp
js
imul
adc
dec
iret
xchg
and
xor
xor
sub
mov
and
test
push
cmps
dec
push
dec
cmc
fnstenv
lock
sub
dec
xchg
pop
test
push
push
push
movs
xchg
scas
ja
pop
cmp
or
inc
addr16
es
cmp
movs
mov
inc
xor
mov
jecxz
jne
sub
and
cmp
xchg
es
mov
stos
rcl
xor
fisttp
scas
push
in
mov
bnd
adc
add
pop
sbb
ret
add
mov
push
dec
push
jl
xchg
adc
loopne
cdq
ds
xchg
xchg
or
dec
and
push
out
xchg
in
add
cmp
xlat
fiadd
rcl
pop
cmp
dec
adc
fdivp
adc
gs
jecxz
fs
adc
test
cli
scas
mov
push
scas
stos
cmp
mov
shl
es
(bad)
add
mov
movs
shl
int3
pusha
dec
pop
in
push
push
jmp
(bad)
icebp
add
lea
pop
shr
cmp
sub
sub
xchg
sahf
iret
int3
lock
into
outs
jo
sti
iret
xchg
(bad)
pop
jb
das
mov
fidivr
and
mov
jne
das
xchg
xor
xchg
add
inc
xchg
mov
dec
scas
xchg
jle
fild
or
stc
xchg
xchg
sbb
(bad)
xchg
sbb
push
std
xchg
cs
sub
cmp
dec
mov
cmp
pusha
push
imul
pop
cmps
lods
add
scas
test
bound
sbb
pop
(bad)
mov
sub
mov
xlat
shl
xor
sub
xor
inc
xchg
pop
(bad)
mov
mov
inc
nop
div
push
(bad)
int
cmp
jo
add
or
inc
fdivp
out
inc
inc
jp
in
or
push
pop
mov
and
in
mov
in
cmps
aaa
or
mov
push
jmp
pop
mov
and
pop
repz
mov
xor
fwait
in
jo
sub
in
ret
or
neg
jecxz
loope
test
(bad)
add
push
arpl
pop
test
bound
sbb
jnp
aad
xor
fisttp
fiadd
ret
lds
scas
inc
mov
mov
or
test
xchg
enter
push
pop
pop
outs
(bad)
lods
daa
dec
pop
push
sub
mov
mov
add
or
mov
(bad)
sub
cs
cwde
repz
add
push
add
add
jg
pop
cmps
popa
add
jns
and
and
push
shl
cmps
clc
mov
jbe
cdq
div
jno
(bad)
in
cmps
rcr
and
es
das
push
xlat
imul
and
iret
ss
sub
cs
or
lods
(bad)
or
sbb
sbb
push
sbb
pushf
cmp
inc
cmp
push
push
jb
or
add
push
ss
cmp
sbb
test
gs
pop
adc
or
mov
jo
mov
xor
inc
xlat
pop
ins
fisub
pop
outs
add
pop
inc
ret
rcl
xor
jae
mov
push
dec
jns
pop
sub
xchg
pop
jl
sbb
inc
jnp
test
sub
push
call
stos
jnp
dec
cdq
data16
cmp
jmp
inc
ret
dec
push
daa
cmps
xchg
pusha
dec
(bad)
std
cs
dec
mov
je
add
xchg
jno
push
and
pop
adc
jae
(bad)
jbe
mov
and
sar
pop
adc
pop
outs
push
adc
jl
lods
and
xor
scas
shr
cmp
cwde
xor
cmc
sbb
jge
jp
ins
fwait
jo
and
adc
into
inc
jne
js
mov
mov
cs
test
or
lahf
adc
test
(bad)
(bad)
jp
lock
pop
clc
hlt
inc
int3
in
fwait
jmp
js
fcomp
popf
int3
pop
(bad)
sbb
cld
sub
jmp
jle
imul
mov
out
mov
push
jg
mov
push
jb
add
out
mov
jns
jge
lock
push
test
cmp
test
ss
push
stc
xchg
xor
test
daa
cs
mov
jb
iret
mov
mov
push
sub
lahf
xchg
imul
sbb
xchg
cmp
rol
test
fisttp
jo
sub
leave
leave
aam
dec
dec
and
cld
sbb
mov
hlt
popa
xchg
xor
(bad)
stos
pop
sub
movs
push
jl
fcmovb
sbb
scas
ucomiss
dec
mov
(bad)
test
ror
loopne
gs
in
add
adc
dec
or
xor
xchg
mov
imul
xchg
dec
or
jmp
or
out
pop
mov
js
ds
retf
test
je
adc
jl
dec
inc
inc
outs
pop
mov
xor
inc
and
fisub
xchg
jns
sbb
and
and
push
xchg
sbb
fsub
rcr
mov
fwait
push
xor
rcr
es
pop
or
call
jne
add
lds
mov
aaa
popf
(bad)
movs
(bad)
call
int
nop
dec
loope
dec
dec
shl
imul
sti
dec
xor
fsubr
sub
js
sbb
repnz
push
sub
add
(bad)
sub
fsubrp
mov
inc
sbb
in
bswap
dec
fsubr
jmp
ret
xchg
unpcklps
clc
jb
or
inc
not
jo
sub
or
and
sar
fs
xor
lock
int
in
inc
cld
ret
retf
mov
mov
pop
jl
mov
xor
push
ins
fadd
pop
pop
aaa
outs
inc
mov
icebp
or
push
ret
pop
cmp
inc
data16
inc
fld
out
dec
neg
jne
cmps
and
jne
lods
sbb
loop
sbb
cld
xchg
loope
je
cmps
jg
adc
push
div
fist
sbb
adc
fstp
test
test
pop
das
cmp
add
shl
leave
iret
mov
pop
and
scas
aam
cwde
jns
imul
dec
inc
sub
mov
pushf
(bad)
movs
jae
sub
(bad)
lods
xchg
rol
shl
jbe
push
mov
xchg
pusha
and
bound
nop
nop
inc
push
cmps
aam
in
cmp
out
dec
std
pmulhw
push
test
outs
cld
retf
adc
mov
hlt
pushf
pop
fidiv
sbb
pop
pop
push
ror
cmp
js
adc
cmp
call
repnz
out
inc
inc
(bad)
fmul
adc
in
pop
adc
adc
jnp
fcmovne
xchg
ret
mov
cmp
push
add
add
mov
jmp
out
dec
cmp
cmp
mov
or
adc
ja
xchg
les
test
push
imul
ins
in
mov
sbb
pop
out
mov
cmp
mov
mov
push
cmp
jne
stos
in
std
sub
test
stos
jns
or
sub
add
sbb
adc
push
out
cld
clc
stos
push
test
fisttp
inc
mov
es
xchg
jg
mov
out
inc
mov
cmp
int3
adc
sub
jno
sub
enterw
popf
push
std
lock
fwait
into
test
adc
std
or
dec
xchg
cmp
adc
sub
fbld
sub
sbb
aam
push
stc
cmp
fidivr
pop
mov
push
scas
mov
jns
add
fwait
and
inc
fsub
seto
cwde
data16
sbb
add
dec
fidivr
xchg
or
icebp
clc
push
das
hlt
in
es
aas
enter
scas
pusha
cmps
and
add
int
xchg
fidiv
pop
jecxz
jbe
std
loopne
cs
jmp
gs
inc
push
cmp
sbb
pop
pusha
ret
push
ds
popa
or
(bad)
cdq
(bad)
test
push
jb
mov
test
fldenvw
int3
add
fs
sbb
cmp
jl
retf
mov
fimul
push
mov
mov
out
loop
inc
fsubr
retf
mov
clc
das
jb
mov
push
addr16
je
mov
scas
cmp
mov
and
daa
(bad)
retf
jne
sbb
jmp
jb
scas
mov
dec
idiv
pop
dec
aaa
add
mov
pop
sbb
mov
xchg
(bad)
mov
(bad)
mov
xlat
mov
pop
aas
jg
and
push
and
xor
and
push
cld
sbb
xchg
jle
dec
scas
fmul
shr
jecxz
adc
into
fst
gs
mov
mov
xor
ins
pop
adc
pop
popf
pusha
fimul
mov
shr
xchg
lds
movs
pop
loope
ret
cmp
mov
adc
clc
jecxz
and
and
mov
add
enter
cmp
(bad)
leave
cmps
jmp
xor
ror
dec
or
add
sub
jmp
and
and
daa
bound
(bad)
loopne
(bad)
mov
jnp
sub
push
fldz
inc
cli
bound
mov
sub
(bad)
fld
jmp
push
lods
mov
jle
mov
mov
imul
jle
fmul
sbb
mov
and
push
(bad)
mul
push
lods
call
les
and
jle
je
into
fiadd
pop
cmp
pop
sub
inc
test
push
xor
inc
cmp
sub
clc
into
xchg
xor
sahf
cmp
icebp
xor
cmp
pop
mov
adc
nop
test
push
(bad)
xchg
push
inc
cmp
jle
imul
das
jb
mov
iret
mov
pop
push
push
or
stos
mov
shr
lock
lods
not
repnz
pop
jmp
gs
jmp
xchg
jbe
hlt
imul
dec
add
jmp
sub
xchg
fwait
mov
mov
xchg
sub
dec
inc
mov
clc
sub
mov
adc
sbb
pop
fwait
cmps
xchg
cmp
cmp
aam
jb
cmps
rcr
loope
outs
in
jbe
add
fs
dec
pop
std
fsub
mov
mov
movs
push
mov
sub
and
or
xor
inc
adc
das
sbb
leave
fiadd
pop
test
test
ficom
sbb
mov
daa
push
xor
pop
cdq
cmp
aas
sub
das
out
push
in
movs
outs
push
cs
mov
loope
sbb
mov
stos
aad
sbb
pop
or
dec
cli
add
jp
(bad)
cli
push
pop
sub
jge
aaa
xor
cmp
cld
retf
jl
cld
stc
fsubr
enter
mov
(bad)
mov
dec
xchg
dec
mov
shl
add
ficom
and
inc
enter
sub
gs
gs
popa
pop
(bad)
js
xor
scas
int
mov
pop
adc
repnz
add
jae
sbb
int
imul
sub
mov
cmp
sub
push
mov
adc
stc
dec
adc
push
sbb
shl
fadd
dec
push
sti
sbb
fucomp
mov
sar
push
ss
ss
jb
clc
lea
ret
jecxz
and
pop
xor
mov
in
ds
cdq
add
mov
xor
mov
adc
lods
je
push
mov
cld
cwde
shr
fisub
(bad)
test
repnz
jbe
dec
and
mov
ins
lock
mov
or
or
cmp
or
fisttp
dec
in
mov
add
cmp
fdivp
sub
test
xchg
sub
sahf
pusha
cmp
push
add
int3
and
je
xor
aas
inc
pop
or
arpl
and
cmp
pop
clc
mov
cmp
xor
mov
lahf
and
xor
cdq
xchg
lea
add
or
xor
bound
push
es
pop
nop
pop
pusha
popa
test
or
fadd
ret
hlt
pop
jmp
push
push
adc
movs
and
and
leave
iret
retf
fmul
iret
or
sbb
cmp
jg
cmp
adc
repnz
mov
xchg
add
jmp
mov
leave
and
jecxz
out
fdiv
(bad)
ins
(bad)
xchg
ficomp
inc
sbb
xchg
or
sub
dec
push
jne
shl
fst
mov
imul
pushf
call
jmp
lea
ss
sub
dec
cwde
aaa
int
les
push
mov
mov
xor
arpl
icebp
xor
cmps
outs
jl
adc
and
jmp
xchg
dec
mov
mov
xchg
pop
pop
pop
std
add
dec
xor
(bad)
scas
jge
sete
std
pop
test
and
add
jmp
mov
and
sub
sub
inc
lea
fcom
sub
out
lods
ins
inc
hlt
cs
popa
sub
jb
les
sti
(bad)
sbb
sub
aaa
rcr
imul
sub
push
and
fistp
jecxz
mov
(bad)
dec
push
cmp
retf
push
pop
mov
jae
adc
lds
sub
and
adc
pop
sbb
shl
mov
adc
pop
loop
popa
mov
cs
or
jbe
pop
xor
sub
and
pop
rcr
sbb
mov
pusha
jecxz
push
mov
outs
mov
xor
or
call
push
and
dec
jbe
test
out
xchg
cmp
jp
jmp
cwde
fadd
adc
loop
cs
jo
adc
jbe
cmp
ja
mov
cmc
stc
imul
mov
hlt
jae
pop
adc
cld
mov
fdiv
aam
push
(bad)
adc
push
or
and
cmp
jae
and
movs
push
movs
jge
ss
push
fist
imul
rcr
dec
stos
retf
imul
push
arpl
ins
or
data16
dec
(bad)
stos
imul
bound
outs
js
xchg
mov
or
xchg
fldcw
ja
pop
add
xchg
rcr
setne
mov
sti
inc
neg
pop
push
gs
xchg
aam
lods
cli
jle
inc
dec
sbb
dec
fld
push
mov
add
push
(bad)
and
add
sbb
pushf
jg
inc
aas
mov
pop
scas
cmps
xor
imul
mov
jno
jno
mov
mov
std
ror
or
outs
mov
data16
cmp
fistp
pop
mov
cdq
in
jle
dec
add
ins
(bad)
iret
data16
out
lea
cmps
jmp
cmp
xchg
fnstenv
mov
ret
or
scas
std
inc
lods
cli
cmc
(bad)
or
std
xchg
xor
inc
mov
xchg
or
daa
xchg
add
les
or
jl
sahf
mov
push
adc
add
dec
sbb
inc
add
mov
mov
fwait
xchg
shl
mov
sbb
add
cmp
mov
aad
rcl
jmp
rcl
ret
sbb
xchg
push
adc
(bad)
xchg
stos
in
int
ret
push
pop
inc
or
mov
pop
mov
xchg
mov
push
mov
add
cmps
jmp
xlat
or
or
or
loope
mov
ja
das
mov
mov
test
inc
mov
fdivr
int3
jge
cmp
(bad)
mul
mov
inc
std
addr16
mov
in
stos
sub
dec
jns
cmp
lods
jl
jae
xchg
ret
stc
lahf
mov
mov
jnp
into
xchg
pop
mov
sbb
cmp
push
inc
gs
mov
add
fnstenv
push
sub
dec
test
xor
mov
gs
push
fnstsw
setle
repz
cmps
jmp
xchg
sbb
mov
in
dec
mov
mov
pop
(bad)
repz
retf
popa
mov
(bad)
pop
jns
inc
mov
or
sub
and
mov
fist
xchg
xor
cwde
xor
stos
fs
mov
jo
test
call
mov
leave
sbb
xchg
cs
dec
mov
jo
mov
xchg
mov
push
(bad)
in
lds
aaa
inc
xchg
(bad)
and
xor
inc
mov
mov
ret
mov
xlat
rol
cli
popf
repnz
in
push
pushf
pop
mov
xor
add
sahf
jnp
sbb
and
fst
ret
sbb
mov
outs
or
mov
xchg
ficomp
mov
loopne
ds
test
xchg
cld
and
(bad)
push
stos
mov
and
lahf
daa
call
jno
movs
and
jnp
mov
push
data16
stc
leave
push
lods
xchg
hlt
lock
rol
push
jne
into
mov
pop
xchg
mov
je
and
retf
add
push
ret
stos
movs
jnp
mov
scas
and
or
fnstsw
dec
aam
scas
movs
je
sbb
xor
cmp
xchg
int3
add
inc
mov
lea
cld
fcomp
mov
lods
addr16
pushw
or
fmulp
mov
inc
xor
das
leave
cli
aas
dec
jne
stos
cmp
inc
push
or
dec
mov
mov
mov
out
lea
and
cli
jne
addr16
iret
sbb
ror
(bad)
scas
adc
cmp
ins
and
xor
aaa
aas
add
dec
sbb
mov
shl
mov
xor
fisub
cld
lahf
or
sti
shr
pop
stos
pop
mov
mul
mov
jl
retf
pop
mov
loopne
mov
popf
adc
inc
mov
and
and
cmp
(bad)
imul
popa
test
push
call
dec
mov
pop
jb
out
in
cmp
rcl
cmp
pushf
jns
call
les
rcr
aaa
retf
sub
sub
nop
xlat
js
lock
pushf
(bad)
test
adc
ss
pop
addr16
jmp
pop
push
and
cli
aad
xchg
xchg
arpl
mov
dec
clc
mov
xor
das
popa
sub
fs
int
fdiv
sub
push
inc
xor
cmp
lods
xchg
dec
pop
imul
or
ret
cmp
retf
fsubr
ror
and
adc
mov
and
dec
xchg
sub
out
xor
aaa
das
push
dec
cmp
ficomp
xor
ret
mov
outs
pushf
mov
and
jbe
lock
pop
push
pop
pushf
add
popa
(bad)
imul
retf
sbb
sbb
jge
jle
or
pop
les
adc
xor
(bad)
and
cmps
popf
dec
(bad)
and
mov
stc
inc
out
or
mov
not
cmp
test
lea
mov
mov
add
dec
cwde
call
(bad)
movaps
cmp
scas
push
inc
test
add
or
cmp
adc
add
test
pop
fidivr
push
mov
mov
xchg
repz
jge
push
push
xchg
mov
ds
sub
and
sbb
movs
push
xchg
pushf
pop
in
adc
in
sbb
dec
sub
xor
xchg
jle
popf
dec
adc
mov
dec
test
pop
inc
outs
lea
(bad)
pop
or
sbb
adc
ret
add
daa
pop
pop
hlt
sbb
or
or
inc
or
aad
dec
add
icebp
(bad)
fist
cmp
test
loopne
pop
rcl
fwait
jp
sbb
js
shl
in
ret
push
sar
pushf
aam
mov
in
icebp
cmps
test
icebp
jge
les
ds
push
lds
out
ficom
pop
cmp
xor
inc
mov
xchg
retf
mov
repnz
xchg
xor
outs
cwde
push
pop
jp
cs
push
cmp
dec
jp
xchg
das
mov
xor
(bad)
jmp
ds
aad
xchg
enter
or
cli
cli
ret
neg
sub
inc
loope
imul
ins
movs
cwde
jno
ja
mov
inc
or
add
aam
fadd
hlt
push
aas
sbb
enter
xchg
popf
mov
or
add
xor
mov
and
out
addr16
js
push
ins
or
xlat
inc
fcomi
fxam
add
sbb
mov
mov
movs
pop
xchg
(bad)
loope
fwait
mov
mov
xor
mov
pop
push
pop
jp
xor
cmps
and
jne
push
fnstenv
pop
test
dec
ss
or
mov
shl
movs
inc
shr
xchg
sbb
jmp
pop
push
fwait
out
sbb
out
jmp
and
std
sub
xor
sbb
xlat
xchg
loopne
mov
(bad)
jnp
stos
aam
and
xor
and
div
jo
stc
pop
dec
jns
xchg
adc
fimul
movs
popa
shr
jle
enter
jnp
clc
pop
xor
jb
xchg
add
adc
push
push
lock
iret
dec
sub
sub
sub
pop
mov
push
popf
add
mov
inc
mov
sbb
out
(bad)
retf
or
jle
sbb
push
pop
in
out
push
inc
xchg
or
fs
pop
cdq
inc
xchg
inc
aam
and
xchg
ja
aaa
int3
and
xchg
sub
ret
jg
sbb
(bad)
in
stos
and
sbb
inc
and
pop
aam
and
add
int
adc
xor
out
stc
jge
jbe
push
mov
pop
jge
jne
xor
adc
cs
push
out
or
xchg
push
sub
(bad)
cmp
sub
repnz
(bad)
xor
loopne
fidiv
mov
arpl
push
pop
push
cmp
je
cmp
push
xor
rcr
jecxz
inc
loopne
enter
mov
cmp
rcl
(bad)
enter
ror
sbb
sub
mov
mov
mov
retf
jnp
mov
push
jmp
mov
imul
mov
inc
inc
adc
adc
imul
mov
xchg
push
stc
and
or
mov
and
outs
xchg
dec
sub
cmps
mov
dec
clc
mov
ss
sbb
neg
pop
dec
push
mov
pop
push
inc
dec
and
in
jo
jmp
iret
int3
enter
adc
bound
(bad)
or
mov
jl
stc
pop
int3
sbb
loopne
stc
jb
enter
out
shr
sub
push
jbe
ins
repz
das
push
aas
sub
cmp
pop
xor
dec
inc
adc
sbb
jg
push
or
and
test
(bad)
jae
test
test
and
scas
cmp
jne
push
adc
sub
fstp
inc
mov
add
dec
pop
xchg
push
mov
test
push
clc
mov
idiv
cmp
lahf
out
xor
in
dec
mov
adc
inc
into
dec
movs
sbb
lahf
(bad)
mov
xchg
mov
pop
nop
mov
and
cmps
sbb
gs
pop
or
cmp
inc
aaa
cmp
mov
cmps
inc
fst
jle
out
(bad)
xor
nop
aam
jb
in
clc
ins
fild
dec
inc
(bad)
sbb
movs
cmp
push
hlt
into
(bad)
out
sti
je
pop
cmps
and
fisubr
or
sete
clc
pushf
fldcw
out
add
pop
shl
pop
mov
mov
jle
aam
mov
adc
push
sub
jmp
pop
rcr
in
push
cmp
pop
and
cmp
jg
mov
sbb
sbb
pop
xor
inc
ret
mov
inc
ja
js
scas
xchg
ret
sahf
jmp
xor
in
mov
movs
sub
mov
cmc
loop
mov
les
lds
repz
into
hlt
into
out
call
xor
and
test
clc
iret
(bad)
push
repz
pop
ficomp
gs
cmp
test
scas
push
mov
jo
xchg
loopne
sub
shr
or
pop
push
aas
in
sbb
and
adc
sub
sbb
shr
add
mov
ins
mov
mov
or
xor
cli
mov
rcr
cmps
adc
lods
sub
in
mov
inc
cmp
push
arpl
cmps
rcl
int3
mov
sbb
xchg
adc
jl
bound
jg
enter
in
mov
mov
dec
or
mov
sbb
pop
aas
lahf
and
mov
sub
mov
xchg
xor
mov
lds
add
push
mov
cmp
mov
cs
adc
sbb
pop
loope
mov
jmp
cdq
imul
xchg
xlat
dec
xchg
push
xchg
cmp
inc
out
fnstsw
mov
das
adc
dec
movs
xchg
add
cmc
inc
jmp
pop
inc
mov
call
pop
mov
out
jle
out
lods
fadd
call
mov
adc
mov
test
add
and
jmp
(bad)
xchg
jle
data16
(bad)
sbb
pmaddwd
std
out
mov
xchg
in
push
fs
xchg
dec
xlat
push
jge
or
inc
jp
inc
inc
stc
sbb
repnz
mov
add
adc
(bad)
mov
jmp
dec
pop
pop
dec
lock
dec
mov
sahf
sbb
xor
xlat
xlat
in
dec
sbb
iret
popf
arpl
mov
test
xchg
in
cmp
mov
mov
adc
es
inc
mov
xchg
pop
cmp
sbb
jb
cmp
inc
shl
pop
xchg
jns
lahf
hlt
push
stc
jmp
and
loop
outs
out
sub
mov
jns
or
add
repnz
das
scas
out
cmp
cs
xchg
xchg
int
ror
cmp
loopne
push
test
out
jp
nop
xchg
xchg
jl
sub
or
xchg
sub
or
add
(bad)
out
fstp
mov
dec
ins
push
pop
out
sahf
int3
push
push
sub
jg
pop
or
sbb
jno
jle
popf
test
lods
retf
push
xor
stos
imul
fld
scas
(bad)
fstp
mov
mov
ror
out
outs
call
xor
into
or
jmp
cmps
cdq
pop
xchg
imul
sub
jno
pop
fisttp
js
jmp
inc
mov
fimul
xor
ret
push
out
jmp
or
rol
out
jmp
in
(bad)
mov
ss
cmp
sahf
rcl
xchg
ficom
pop
push
mov
lahf
xor
repnz
pop
add
inc
mov
addr16
inc
jmp
push
(bad)
push
adc
mov
xor
in
xchg
stc
nop
push
sbb
xchg
add
sub
jmp
pop
out
push
pop
shl
add
pusha
repz
(bad)
inc
sbb
mov
mov
add
mov
jmp
in
ret
dec
aaa
mov
imul
nop
ss
aaa
jg
not
shl
push
test
push
push
in
or
pop
ja
jnp
and
cli
cmp
imul
test
aam
sbb
mov
jge
dec
or
xchg
jmp
sub
sbb
pop
ret
cwde
clc
pop
repz
mov
xchg
aas
inc
mov
js
int
push
jb
fist
pop
cmp
adc
jo
add
cmc
(bad)
pop
cwde
test
aas
test
mov
movs
shl
sub
in
shr
scas
inc
dec
inc
push
cmps
inc
iret
cmp
sub
cmp
fwait
mov
mov
ds
cmp
repnz
jne
jo
jmp
mov
inc
cld
pusha
jg
mov
in
es
in
scas
arpl
mov
int
sbb
adc
dec
xchg
xlat
add
xchg
xor
scas
mov
add
call
jge
cli
add
push
ret
pop
cmp
and
adc
push
mov
push
xchg
xchg
ret
mov
out
push
in
lock
inc
lds
icebp
inc
jnp
mov
in
repnz
sahf
xor
mov
stos
retf
or
(bad)
aad
push
rcl
xor
mov
xchg
ret
adc
sbb
fstp
hlt
xlat
and
push
xor
dec
mov
stos
add
pop
scas
and
(bad)
sub
and
inc
test
iret
lds
ins
sti
adc
sub
mov
dec
and
adc
ss
pop
sbb
fiadd
js
out
aaa
xchg
mov
pop
mov
outs
loope
push
ret
pop
fadd
or
add
repz
movs
fist
retf
cmp
test
pop
aam
or
cwde
in
mov
and
push
or
sub
mov
cli
movs
out
sub
les
xor
hlt
hlt
pop
sub
scas
ds
xchg
sub
xchg
jle
pop
xchg
push
sbb
adc
aas
mov
cld
fwait
loopne
ret
xlat
sbb
adc
xchg
inc
xchg
(bad)
push
mov
iret
cs
xor
dec
jns
push
daa
std
dec
ds
sub
mul
lods
pop
pop
mov
add
mov
stc
pop
sti
dec
mov
jl
(bad)
ror
jecxz
sub
mov
cs
dec
mov
xlat
or
add
sbb
test
pop
or
test
dec
adc
and
or
adc
fdivr
dec
mov
push
hlt
push
sbb
pusha
sub
adc
dec
std
jmp
lods
fcmovbe
stos
jbe
dec
push
sbb
stos
bound
pop
mov
clc
cdq
(bad)
jmp
mov
and
mov
push
dec
pushf
cs
fldenv
mov
mov
inc
sub
mov
jl
cmps
iret
sub
mov
dec
rcr
xchg
pop
in
or
fld
fimul
sbb
cli
dec
sub
mov
not
or
mov
mov
or
enter
fsubr
push
or
pop
xor
add
mov
mov
or
cli
mov
out
std
pop
in
repz
sub
jns
jb
(bad)
pop
aas
lea
aam
pop
call
add
sbb
push
mov
adc
pop
popf
mov
repz
lea
int3
movs
ds
cwde
out
arpl
pop
push
mov
xchg
mov
adc
fdivr
mov
push
or
push
cs
jmp
and
xchg
sub
xor
jle
dec
or
mov
cwde
add
movs
or
jo
inc
pop
fsub
cmp
pop
imul
push
pop
or
mov
sub
mov
and
in
mov
mov
and
cmp
and
inc
mov
jl
inc
xor
punpcklwd
fist
lea
cmovbe
adc
ja
or
ficom
in
cmp
fsub
(bad)
jmp
leave
addr16
xchg
inc
cmps
aaa
sub
jb
or
xor
mov
sub
nop
xchg
pop
sbb
aad
icebp
test
loope
push
xchg
inc
xor
xor
ret
pop
sub
std
stos
mov
loopne
ds
loope
mov
xchg
inc
sub
into
push
mov
dec
es
cmove
sbb
push
or
test
pop
or
xchg
add
push
xor
sbb
nop
fwait
(bad)
or
cmc
stos
outs
mov
jns
mov
mov
xchg
pop
cmp
gs
pop
das
xchg
xchg
sub
cwde
sbb
mov
mov
mov
jl
(bad)
sbb
and
data16
push
xor
bound
imul
cmp
xchg
dec
jle
popa
imul
sub
aam
sub
pop
cmp
xchg
xor
cmc
pop
lahf
xor
loopne
ror
mov
pusha
jecxz
lahf
shl
sub
ret
jmp
scas
adc
nop
js
loop
cmp
je
clc
dec
pop
pop
ins
mov
imul
shl
sub
jl
leave
daa
leave
test
mov
inc
push
lds
dec
(bad)
ss
sbb
push
imul
shr
pop
fcomip
shl
sbb
icebp
fisttp
jns
ins
out
push
fcmovbe
pop
fmulp
mov
dec
iret
sahf
cmc
into
and
mov
jae
pop
(bad)
mov
call
mov
jbe
inc
mov
pushf
movups
mov
dec
fmulp
xchg
mov
jae
push
xor
out
js
ds
lods
or
and
out
ins
(bad)
sub
lahf
ja
ja
(bad)
sbb
fwait
xor
scas
dec
mov
sbb
pop
mov
inc
or
popf
pop
icebp
stos
adc
mov
inc
clc
and
inc
mov
cmc
iret
call
test
cmp
xor
out
clc
pop
dec
fwait
cmps
je
int3
mov
int3
push
cmp
fsub
mov
mov
cwde
dec
popf
cmp
sub
ret
add
push
lahf
mov
ficomp
std
dec
aas
out
cmp
fdivr
(bad)
xchg
jge
jns
mov
xlat
push
js
fwait
jae
out
stos
sbb
sub
pop
test
jecxz
adc
mov
xor
cmp
push
push
push
repnz
xchg
jmp
dec
fs
adc
ret
adc
jge
push
push
ins
neg
ins
lea
outs
jmp
or
xchg
mov
fadd
push
jnp
pop
ja
or
sbb
mov
cmc
add
stos
jmp
xchg
jnp
xor
jnp
scas
mov
cmp
test
je
(bad)
mov
mov
push
lock
cmp
in
ins
fisubr
mov
loope
je
mov
test
add
push
test
iret
leave
mov
aaa
fwait
xor
mov
mov
mov
(bad)
jmp
ret
mov
mov
jne
push
iret
add
lock
les
sar
xor
dec
outs
cli
or
add
jo
jecxz
pop
add
retf
xor
out
fcom
(bad)
mov
inc
xor
xchg
inc
sbb
cs
lds
lods
mov
test
xchg
rcl
xchg
aas
add
(bad)
test
movs
dec
mov
adc
repnz
in
xor
push
lods
or
adc
sbb
mov
scas
mov
mov
dec
(bad)
sub
dec
xchg
ror
hlt
clc
sub
ins
inc
stos
popf
jns
add
jmp
push
out
out
xlat
mov
popf
loopne
push
sti
outs
int3
xchg
mov
sbb
pop
rol
fnstsw
addr16
or
ins
add
imul
out
push
sbb
add
push
xchg
cdq
xchg
jne
and
ja
push
out
mov
lea
(bad)
loopne
adc
fsub
push
inc
(bad)
mov
pop
(bad)
not
loopne
jmp
inc
xchg
dec
inc
popa
icebp
mov
les
aas
loope
sbb
imul
cmps
lock
aaa
out
push
cmps
push
pusha
aas
cmp
cmp
test
adc
or
and
bound
sub
in
mov
ror
dec
je
clc
retf
jmp
push
test
xor
pusha
call
fstp
mov
(bad)
xlat
sub
retf
mov
loope
cmp
xchg
icebp
mov
fbld
push
add
inc
pop
inc
inc
outs
pop
and
inc
xchg
outs
adc
dec
cmp
or
cmps
push
aas
push
rol
mov
imul
aad
shr
mov
scas
cmp
retf
and
mov
add
or
cdq
push
xchg
adc
cmp
jns
(bad)
int
dec
mov
add
push
fnsave
inc
dec
adc
or
cdq
jl
jmp
test
out
jno
xchg
adc
jbe
daa
mov
sub
push
int
jno
push
stc
push
xchg
pop
test
mov
dec
and
or
stos
mov
pushf
(bad)
cli
imul
jg
les
adc
jb
and
sbb
cli
mov
mov
jno
dec
pop
add
ficom
cmp
cmps
inc
out
adc
xor
mov
aas
fs
call
stos
inc
adc
or
pop
retfw
outs
call
dec
and
imul
cmp
jo
fcmovne
call
(bad)
nop
dec
fs
shl
scas
test
adc
xor
sub
xchg
shl
jmp
aam
mov
mov
xor
mov
and
bound
xor
adc
scas
pop
clc
fld
sbb
das
in
ret
enter
jmp
inc
mov
push
cmc
loop
mov
dec
sbb
jns
sbb
xor
mov
and
outs
mov
xor
pop
idiv
jns
and
xor
add
in
cmp
enter
aad
and
sub
sub
xchg
call
jae
dec
xchg
and
cdq
jo
mov
enter
shr
retf
sbb
jb
mov
mov
pop
dec
cdq
sti
mov
pop
xlat
sub
leave
sbb
push
mov
and
clc
loopne
cmp
inc
jbe
pushf
test
sub
mov
pop
je
call
xor
shld
and
in
cmps
(bad)
mov
xor
pop
mov
dec
test
call
aam
push
mov
sar
fsub
cld
outs
xor
idiv
cwde
xchg
popa
repz
(bad)
mul
xor
lahf
cwde
lea
(bad)
cmps
retf
nop
mov
inc
and
mov
jle
sbb
mov
imul
fdiv
and
dec
mov
add
add
bound
mov
sbb
lock
shr
adc
and
(bad)
(bad)
loop
mov
and
test
stos
iret
add
add
xor
popa
xor
retf
ss
call
sbb
inc
icebp
outs
imul
arpl
pop
lock
shr
nop
mov
or
je
(bad)
jnp
push
fbld
and
mov
push
xchg
popa
sub
inc
adc
addr16
mov
out
cmp
lgs
jo
clc
mov
mov
add
das
dec
ins
or
fwait
inc
cs
pop
sbb
inc
push
push
enter
jg
repnz
mov
jmp
test
test
jne
mov
xor
lock
push
inc
pop
ja
add
mov
mov
inc
pop
dec
ret
xor
into
push
mov
push
pop
movs
mov
(bad)
(bad)
dec
stc
fst
(bad)
je
ds
jne
jo
jmp
and
xchg
mov
cmp
ss
and
cld
and
hlt
mov
lahf
(bad)
imul
jae
retf
sahf
mov
es
les
call
cmp
in
mov
aas
xor
sbb
movs
aam
sar
cli
out
jp
out
fcmove
xor
adc
ds
enter
push
movs
adc
(bad)
push
int
shr
adc
push
lea
pop
int3
pushf
cli
scas
xor
push
cmp
push
dec
add
push
push
outs
and
(bad)
dec
(bad)
mov
or
sbb
xchg
jno
or
inc
jmp
fcmovu
cmp
into
sub
xchg
xor
cmp
mov
add
inc
mov
addr16
mov
bnd
and
test
fist
mov
sti
push
mov
rol
and
outs
ret
mov
dec
(bad)
cld
in
in
add
test
outs
pop
out
lods
mov
adc
xor
jb
dec
push
gs
xchg
test
out
loop
retf
movs
scas
outs
fwait
int3
div
inc
dec
jl
mov
scas
jne
mov
mov
test
sbb
retf
pop
loope
or
inc
mov
repnz
shl
or
mov
mov
jno
cwde
push
mov
adc
inc
sahf
jb
shl
repnz
inc
xor
sbb
or
jne
cli
sar
cmp
pop
adc
push
ins
mov
dec
out
xor
adc
int3
push
jne
js
xor
ficomp
cld
lds
jnp
leave
cs
(bad)
cvtps2pi
xor
adc
jne
lods
jns
push
pop
sbb
je
sbb
icebp
mov
sti
sbb
add
jmp
and
out
nop
(bad)
pop
mov
imul
cmp
icebp
xor
inc
retf
je
mov
test
mov
sub
mov
dec
je
add
in
xor
push
dec
int3
pop
(bad)
popf
cli
jb
dec
fld
mov
push
jg
xor
xor
not
fnstcw
shl
fidiv
arpl
lahf
jmp
mov
lods
mov
fidivr
or
adc
and
call
lds
fwait
add
adc
jno
push
fnstenv
mov
jg
jb
or
inc
hlt
push
iret
dec
lock
cmp
(bad)
cmp
add
shr
retf
push
push
push
or
xor
mov
jnp
xchg
in
sub
dec
lea
push
adc
xor
and
pop
loope
xchg
mov
pushf
mov
outs
iret
inc
pop
xor
jmp
mov
mov
call
cmps
sub
fucomip
pop
mov
addr16
push
add
sti
movs
data16
mov
adc
pop
mov
mov
mov
mov
loop
fstp
mov
daa
mov
int
fwait
mov
aam
shr
push
pop
or
lea
push
pusha
xchg
daa
sub
xlat
imul
test
in
inc
and
xor
stc
push
mov
push
out
and
dec
in
push
outs
cmp
push
mov
xor
loope
addr16
mov
test
mov
lahf
hlt
call
bound
cs
inc
sub
sti
add
sbb
inc
mov
ins
jg
fs
push
lods
xchg
cmps
bound
les
outs
dec
push
retf
push
(bad)
fldenv
out
pusha
fadd
cmc
sub
popf
cmp
mov
sbb
sub
xor
pop
xor
iret
mov
test
cmps
or
mov
rcl
mov
mov
cmp
popa
push
pop
dec
mov
sahf
mov
js
lock
cmp
mov
sbb
fild
popa
adc
out
pop
fcom
aas
sub
xchg
popa
sub
mov
aam
push
retf
push
dec
out
jl
ds
test
jmp
data16
cmp
mov
pop
fisub
inc
call
loop
ror
mov
in
les
pop
mov
adc
imul
mov
dec
mov
jmp
adc
mov
addr16
push
xchg
fsubp
or
inc
inc
fnstcw
(bad)
repz
xchg
inc
fwait
pop
aaa
cs
cmp
(bad)
and
repnz
xchg
test
mov
outs
lds
sbb
and
mov
imul
mov
icebp
sti
pusha
jbe
mov
and
add
sub
sub
aam
outs
sar
xchg
push
mov
or
mov
xchg
mov
lock
gs
xor
pop
cli
add
int
div
push
jecxz
or
xchg
sbb
inc
push
mov
dec
push
xchg
cmp
in
fcomi
and
jb
and
pop
iret
sub
out
aas
add
pop
mov
and
hlt
pushf
jl
and
out
inc
jo
jmp
(bad)
retf
cmp
je
popf
mov
and
mov
lea
enter
leave
scas
sub
repnz
les
loopne
test
lods
jge
fild
rcr
ins
retf
aad
dec
call
or
(bad)
outs
pop
jge
imul
fsubr
cmp
mov
lea
sub
rcr
lods
xor
sub
inc
jne
test
fisttp
fsubr
cmp
inc
sub
and
sub
in
test
dec
xchg
inc
jno
sub
sub
fld
lods
(bad)
cmp
dec
inc
(bad)
xor
pop
sahf
outs
push
push
xchg
loop
dec
pop
adc
ins
mov
das
xchg
or
inc
ss
dec
ret
bnd
bound
mov
rcl
mov
test
ret
inc
xchg
fsub
fxch
hlt
mov
and
faddp
cmps
and
scas
or
or
int3
retf
and
in
call
xchg
or
mov
data16
(bad)
push
sahf
sbb
ja
mov
dec
cli
imul
mov
fild
mov
jnp
std
lea
mov
(bad)
jno
xchg
imul
fsubrp
or
push
xchg
xor
test
in
dec
inc
mov
and
js
mov
pop
inc
neg
imul
retf
loopne
mov
xor
mov
fucomip
dec
lods
ins
fs
mov
(bad)
lahf
ss
xor
jb
pop
adc
nop
(bad)
addr16
inc
xchg
pushf
call
aad
pop
popa
cmp
repnz
xor
push
popa
fsubp
mov
(bad)
add
shr
sub
dec
repz
repnz
imul
addr16
call
sub
movs
and
shl
out
or
test
and
sbb
add
push
inc
cmps
lods
outs
adc
in
into
test
in
scas
shr
fimul
mov
js
jle
lods
mov
inc
int
dec
les
pop
fnstcw
int3
(bad)
mov
inc
mov
cmps
cmc
ret
popa
pop
dec
xchg
mov
sub
fcomip
retf
daa
jne
inc
adc
inc
dec
test
je
fild
pop
jmp
jmp
and
mov
adc
pop
sbb
pop
cmp
in
push
nop
pusha
fcmovbe
inc
xor
sbb
mov
jb
jecxz
pop
jno
adc
test
push
(bad)
cli
inc
jmp
scas
outs
call
push
mov
lea
clc
invd
in
and
nop
jecxz
fild
jae
push
cmc
push
xor
lea
pop
call
xchg
das
jmp
cli
aaa
das
adc
inc
xor
pop
and
lock
cdq
(bad)
rcr
sub
in
imul
lods
and
jl
cmp
lock
jg
mov
cmp
push
adc
jmp
cmp
outs
mov
adc
fadd
adc
push
ja
xchg
lods
dec
inc
aas
movs
lds
fist
xlat
push
push
stos
jmp
test
mov
inc
les
punpckldq
clc
jl
xchg
shl
imul
sbb
out
repnz
xchg
cmp
sbb
adc
daa
mov
dec
dec
or
or
idiv
pop
mov
bound
loop
stos
sbb
cmp
push
sahf
cmps
sbb
aaa
cld
add
int3
xchg
push
pop
sahf
xor
or
pop
push
arpl
or
or
push
mov
sti
mov
int
imul
xchg
movs
pop
push
mov
xchg
mov
push
aad
pop
out
lea
push
mov
and
aaa
scas
lods
hlt
sbb
jp
jnp
mov
ins
mov
push
lea
adc
(bad)
out
mov
sar
jb
xor
sahf
(bad)
loopne
push
push
adc
mov
shr
cld
inc
sub
push
imul
pop
add
xlat
adc
sub
xchg
mov
jl
movs
std
neg
xchg
fs
xchg
jl
or
std
nop
mov
jmp
add
fstp
arpl
push
xor
stos
test
shl
fsub
xor
stos
je
ror
pop
jle
or
dec
xchg
jg
ja
int
js
lods
mov
(bad)
cmps
mov
pop
mov
das
xor
lock
push
shr
out
push
jecxz
fcmovnu
gs
(bad)
retf
sti
test
test
mov
sahf
xor
adc
dec
in
mov
sbb
mov
(bad)
outs
mov
push
dec
mov
jb
jp
outs
hlt
and
jnp
adc
mov
fnstenv
pop
jo
mov
sbb
sbb
xchg
nop
jns
(bad)
add
rcr
imul
cmps
sbb
or
dec
aas
inc
je
popa
push
inc
(bad)
and
inc
shl
jl
ins
jge
sub
std
dec
push
inc
xchg
dec
push
mov
cld
mov
out
sbb
out
sti
mov
scas
push
int
adc
ud0
cmp
fdivp
addr16
(bad)
push
push
and
pop
cmp
mov
ror
jnp
jb
ins
fadd
mov
pop
fwait
ds
cmp
xor
js
lahf
cdq
dec
mov
adc
pop
push
ror
lods
aaa
jno
aaa
in
(bad)
mov
movs
cmp
clc
cmp
inc
cmp
mov
outs
dec
pusha
lea
xor
call
mov
or
sub
jecxz
inc
iret
in
dec
call
mov
repnz
out
fs
cmp
push
je
push
in
and
repz
xlat
mov
aaa
jnp
inc
enter
js
xchg
retf
not
inc
mov
pushf
push
push
pop
push
mov
daa
jb
fsubrp
ret
addr16
pop
jnp
jne
cli
fsub
fwait
shl
mov
mov
sbb
mov
and
jo
adc
(bad)
pop
inc
push
xchg
fld
or
pop
fidivr
leave
jg
fsubr
push
in
push
add
mov
mov
pop
mov
mov
(bad)
fisubr
dec
pop
dec
nop
out
xor
in
inc
push
test
push
push
and
xchg
xor
fld
(bad)
out
imul
loope
lds
loop
fst
inc
fnstsw
in
fidiv
mov
cmp
ror
xchg
int3
dec
mov
fs
movs
stos
push
ret
push
push
adc
ja
add
cs
push
aas
push
dec
adc
shl
les
jl
dec
mov
mov
xor
retf
sub
inc
pusha
pop
push
cmp
xor
add
jge
shl
(bad)
mov
mov
mov
sub
jmp
(bad)
popf
and
rcr
or
pop
xor
inc
and
fwait
ror
mov
push
inc
sbb
imul
mov
test
dec
mov
jb
mov
outs
lds
or
stos
and
add
jns
cmp
div
jno
lock
pop
clc
repz
mov
pop
cmp
les
cdq
sbb
push
pusha
sar
dec
cmp
pop
test
mov
sbb
nop
adc
jecxz
mov
cmp
mov
add
into
outs
fdiv
push
dec
jbe
cmp
inc
(bad)
(bad)
sbb
inc
mov
adc
xchg
arpl
in
(bad)
jb
fs
enter
cmc
or
cmp
aad
dec
dec
rcl
dec
inc
cs
repnz
inc
sbb
push
out
bound
cli
xor
fimul
dec
lahf
fs
jl
pop
cwde
push
(bad)
out
jge
out
xchg
aaa
xchg
dec
(bad)
mov
stc
xchg
xchg
pop
int3
jge
sbb
sbb
std
xchg
push
sub
cmp
or
pop
in
inc
in
fisttp
push
sub
push
outs
dec
mov
jbe
mov
mov
ror
sub
pusha
imul
(bad)
and
popa
mov
ins
rcr
stc
mov
ss
(bad)
xchg
cmp
jge
(bad)
xor
inc
std
je
aas
test
jl
xchg
out
enter
push
xchg
cmp
pusha
pop
dec
data16
data16
adc
sti
mov
push
adc
inc
mul
or
sbb
shl
xchg
or
cmp
test
sub
xor
js
inc
inc
cdq
jo
pop
leave
push
sbb
pop
pop
rcr
neg
clc
popa
sti
addr16
(bad)
rcr
jmp
mov
aad
or
sbb
iret
sub
mov
sbb
push
fisub
dec
aad
outs
add
into
fbld
icebp
push
mov
ins
mov
mov
inc
dec
dec
mov
cmc
jnp
mov
pushf
jno
in
loop
pop
pusha
cli
or
xchg
xchg
xor
pushf
adc
adc
mov
mov
pop
dec
cs
push
and
adc
adc
add
hlt
ror
pop
in
in
call
mov
mov
(bad)
push
(bad)
repnz
pop
in
push
xor
mov
scas
shr
pop
pop
dec
adc
les
jae
mov
pushf
xor
fwait
inc
mov
mov
add
ror
leave
test
sub
lahf
jmp
jns
cmc
xor
xchg
jne
dec
ins
mov
xchg
jmp
fs
pop
in
lea
mov
jbe
int
adc
dec
jg
jmp
pop
cmc
je
add
mov
cli
mov
dec
outs
sub
push
bound
les
into
lea
push
out
call
sub
stos
data16
sbb
cmps
or
fst
pop
xor
push
adc
dec
aam
jecxz
movs
int
xor
xchg
mov
bound
imul
(bad)
jle
fdivrp
mov
dec
xor
repnz
jecxz
es
lods
das
mov
fisub
mov
or
cdq
mov
pop
inc
sbb
js
and
and
jno
aam
push
xchg
adc
(bad)
(bad)
or
fdiv
mov
hlt
cmp
dec
sub
dec
adc
xor
dec
dec
and
xlat
and
retf
imul
test
xchg
pop
xchg
retf
adc
pop
shr
in
ins
ds
inc
shl
pusha
adc
nop
push
cmc
push
fnstenv
sub
aaa
xchg
inc
add
pop
scas
inc
enter
cmps
(bad)
mov
xchg
jb
push
jns
fistp
mov
scas
shl
inc
and
cmp
imul
mov
pop
in
and
push
xor
xor
sbb
xor
ja
sahf
loope
xor
inc
leave
ins
and
xorps
cmps
movs
sbb
inc
cmp
xor
dec
out
lds
(bad)
loope
push
jmp
mov
nop
pop
stos
inc
out
xchg
lods
push
push
push
adc
or
nop
int
fist
mov
pushf
int
lock
aas
fsub
mov
push
xor
push
cmp
jp
push
imul
fisub
jmp
add
dec
mov
mov
(bad)
icebp
in
xchg
das
clc
popa
cmps
outs
pop
sbb
xchg
out
dec
cmps
(bad)
aaa
scas
mov
mov
mov
sub
mov
adc
ret
lods
cmps
xor
xchg
add
jecxz
xor
xchg
lahf
in
(bad)
cmp
aad
pop
dec
or
pop
jl
movs
das
imul
sub
pop
movs
aam
mov
push
xor
gs
cmp
adc
add
cmp
out
mov
sbb
mov
xchg
test
imul
inc
dec
das
mov
sahf
(bad)
cmp
dec
(bad)
fisttp
push
invd
mov
jl
mov
mov
mov
or
fiadd
or
adc
sbb
hlt
cmp
popf
inc
idiv
push
mov
mov
sub
movs
xchg
enter
fnsave
push
into
push
mov
rol
and
xchg
push
mov
and
pop
(bad)
cmp
(bad)
adc
cs
sub
xchg
nop
add
jb
fwait
js
jmp
std
push
sbb
das
pusha
adc
sar
mov
mov
dec
call
lods
out
mov
fs
sahf
aam
rol
(bad)
in
xlat
add
scas
inc
mov
nop
jmp
js
push
jo
cld
arpl
repnz
and
ffree
jo
jno
adc
jle
add
hlt
dec
adc
test
lock
mov
xor
inc
mov
dec
cwde
and
pop
lea
icebp
dec
cmp
es
movs
dec
rcl
and
fdivr
xchg
test
cdq
popa
sti
cmc
mov
dec
dec
sbb
das
xlat
popf
inc
jle
cmps
addr16
push
imul
xor
or
xchg
push
les
dec
xor
dec
lods
fcmovne
pushf
or
push
xchg
mov
xor
repz
(bad)
xchg
popf
sub
out
sub
mov
pop
jnp
cmovnp
jo
add
sub
sbb
mov
xchg
retf
fwait
call
outs
inc
cmp
jecxz
push
or
loopne
add
mov
bound
mov
mov
inc
fst
cwde
mov
cmp
addr16
ficom
mov
sub
dec
das
icebp
xor
and
push
lahf
cmp
pop
fistp
aaa
je
adc
les
jne
pop
xchg
js
dec
nop
xchg
mov
mov
jno
pop
fs
or
jmp
test
into
ficomp
fcmovnb
cmps
jge
fmul
dec
jo
adc
into
and
pusha
mov
(bad)
cmp
nop
jae
out
ret
or
push
mov
adc
into
sub
and
call
mov
sub
rcr
jo
pop
xchg
ss
ss
ins
fdivr
mov
or
and
sar
jle
inc
in
sbb
inc
into
aam
mov
repz
inc
jmp
mov
fstp
(bad)
test
ficom
xor
(bad)
cmp
fwait
pop
mov
mov
sbb
xchg
jmp
clc
cmp
jge
rcr
movs
(bad)
setae
es
mov
adc
aas
cld
gs
xchg
popf
jnp
arpl
int
pushf
pop
fidivr
mul
cmp
mov
leave
sbb
add
(bad)
mov
arpl
jns
adc
push
pop
add
stos
sbb
gs
shl
mov
test
or
adc
cmp
dec
push
push
out
mov
(bad)
sbb
es
bound
(bad)
inc
jg
int
mov
daa
sub
mov
ret
stos
std
push
xor
pop
xor
out
cmp
call
rol
sbb
int3
clc
cmp
in
dec
xor
inc
addr16
cmp
std
retf
fwait
xchg
icebp
(bad)
shr
jle
dec
sbb
add
mov
shl
cld
jmp
ss
imul
jb
pop
dec
fstp
or
in
lods
cmp
jp
xchg
aaa
mov
(bad)
in
dec
dec
jnp
push
cmp
ja
xchg
jle
icebp
jmp
cmc
popa
shl
cmps
add
push
adc
inc
lods
or
jb
adc
lock
pop
sahf
and
(bad)
mov
cmp
lds
out
leave
test
mov
add
jecxz
inc
jns
retf
icebp
ficom
fnstcw
jno
fist
nop
mov
sub
sbb
js
push
fbld
pop
cmc
int3
or
jns
ret
sbb
daa
push
adc
xor
sub
adc
xchg
retf
adc
pop
std
fdiv
sbb
inc
int
ss
mov
inc
out
cmp
mov
repnz
in
dec
mov
mov
or
stos
dec
cmc
lahf
sbb
jo
test
pop
pop
clc
ret
mul
mov
dec
inc
adc
mov
xchg
dec
pop
pop
icebp
jp
js
adc
and
jecxz
loopne
and
lods
and
and
inc
inc
jnp
push
and
xor
pushf
dec
inc
xor
mov
out
lods
jmp
js
inc
call
enter
ins
nop
xchg
mov
xor
mov
ficomp
or
and
cmp
imul
cmp
xor
jl
mov
mov
icebp
out
stc
dec
lea
out
and
sub
xchg
push
jnp
xor
inc
test
push
pop
fdivr
cld
inc
xchg
jg
je
retf
retf
dec
push
loopne
rcl
dec
icebp
add
movs
sbb
test
dec
jcxz
adc
pop
fcom
sbb
fbstp
ss
mov
fcomp
or
in
addr16
jl
sub
scas
scas
mov
pop
inc
jo
fwait
lahf
cmp
adc
outs
inc
sbb
push
sti
(bad)
fs
leave
xchg
push
movs
hlt
mov
jnp
jp
jnp
pop
push
push
stos
xor
and
inc
ja
fscale
push
cmc
loope
in
adc
dec
push
dec
pop
cmps
jbe
loopne
or
test
outs
mov
inc
mov
sub
jmp
int3
lods
movs
mov
cdq
push
jns
jmp
lea
inc
aas
xor
addr16
xor
gs
jle
imul
popf
das
repnz
cmc
out
dec
pop
daa
bound
and
das
inc
mov
in
sbb
push
out
xor
in
cwde
fisttp
mov
(bad)
arpl
mov
ror
aam
scas
jmp
dec
sbb
retf
xchg
or
add
iret
out
fucomp
fs
xchg
aas
cli
call
and
inc
or
fiadd
icebp
add
and
cmc
iret
push
mov
imul
jo
cmp
in
inc
push
xchg
mov
movs
out
ins
out
add
mov
mov
aam
std
jl
shl
cwde
inc
add
iret
xchg
aaa
into
pop
sbb
or
or
push
push
xor
xor
push
mov
push
rol
push
xchg
dec
call
sti
mov
and
adc
add
xor
and
xchg
(bad)
stc
mov
mov
jae
cmp
out
inc
xor
pop
icebp
std
pop
jb
ins
sbb
inc
ins
pop
dec
jp
mov
push
jp
or
fwait
dec
dec
call
in
mov
data16
sub
out
gs
jo
jbe
adc
and
call
pop
imul
leave
jp
(bad)
in
add
xlat
pop
(bad)
jne
jmp
inc
popa
or
mov
push
mov
fld
cmp
pop
lods
pusha
ins
jecxz
and
mov
xchg
jge
mov
stc
aam
push
pmuludq
mov
rol
sti
dec
fcom
int
cld
and
sahf
jmp
dec
ds
and
pop
imul
stos
push
and
rcr
imul
mov
dec
test
cs
js
push
ja
xchg
fwait
in
xchg
jp
jecxz
sub
loop
and
sub
or
out
test
in
std
pop
mov
pop
fsubr
das
rcr
pop
mov
addr16
mov
mov
push
jbe
inc
sbb
mov
dec
cld
lds
(bad)
out
and
or
jmp
test
ret
xchg
push
inc
(bad)
addr16
add
jmp
pop
dec
sbb
in
outs
pop
push
xchg
fnstsw
cld
movs
lea
mov
lock
mov
lods
sub
lock
push
push
adc
shr
icebp
pop
add
cli
or
rcr
aam
in
and
repz
dec
xchg
mov
cli
cdq
pop
ror
add
add
xchg
in
push
dec
idiv
push
fs
and
out
into
jne
cs
out
push
test
call
jno
jmp
jg
pusha
lods
std
mov
call
dec
inc
pop
loope
inc
adc
out
jl
xor
mov
mov
arpl
mov
or
and
and
inc
mov
sbb
shl
scas
xor
dec
jg
inc
mov
and
pop
(bad)
jns
pop
scas
fld
add
sbb
xchg
cmps
hlt
or
push
push
adc
nop
stos
cmp
xchg
test
pop
loop
in
call
outs
out
inc
enter
rcl
mov
test
push
inc
push
add
out
test
popa
movs
or
or
jae
push
pop
cmp
mov
xor
mov
add
mov
mov
bnd
xor
xchg
fstp
ins
push
fs
cdq
lods
inc
test
dec
cli
or
ja
pop
mov
ret
in
mov
movs
dec
dec
sub
jle
mov
mov
xor
test
push
adc
clc
ret
push
push
and
pop
jle
bound
movs
lods
popa
xor
iret
xor
dec
and
imul
scas
push
push
mov
or
sub
pop
inc
ret
inc
ror
icebp
rol
jle
mov
cmp
mov
int3
mov
shr
pop
daa
retf
mov
test
mov
add
jb
cld
or
outs
dec
push
rol
fs
iret
xor
inc
push
mov
stos
add
sti
pop
xchg
xchg
stos
sahf
mov
outs
or
mov
dec
inc
jge
div
repnz
out
cmp
test
(bad)
cwde
cwde
cmp
mov
sbb
cmp
movs
jmp
jle
mov
push
xchg
lock
sbb
or
mov
adc
(bad)
sti
pusha
adc
mov
and
mov
fcomp
cmp
xor
mov
or
imul
sti
mov
fsubr
xchg
mov
inc
(bad)
stos
or
mov
test
xor
fwait
or
push
xchg
test
pushf
test
xchg
cwde
xor
jecxz
jge
xchg
cwde
pop
xchg
mov
sbb
stos
mov
rcr
sets
into
fs
sub
lods
fisub
mov
(bad)
aas
inc
mov
retf
ins
sbb
aas
iret
test
push
xchg
fst
fimul
out
jp
es
mov
inc
cmovb
mov
sub
add
xchg
add
xchg
cmp
cwde
je
mov
fistp
sub
fild
xchg
mov
stc
or
or
ds
lock
rol
in
dec
push
xchg
(bad)
lahf
inc
mov
and
sbb
mov
jecxz
jmp
int
pop
push
pop
push
dec
inc
and
cmp
fs
test
xchg
mov
mov
in
cdq
jmp
and
jns
popf
call
mov
data16
xchg
test
jge
call
mov
pop
cli
sbb
lds
repz
xchg
in
inc
and
jle
test
outs
sahf
into
adc
idiv
mov
mov
out
rcl
je
popf
rcr
in
mov
cmp
retf
movs
mov
jb
nop
mov
cmp
ss
xchg
outs
cmp
retf
push
jle
arpl
pop
jno
out
stos
sub
shl
push
test
add
gs
bound
test
adc
mov
jle
call
rcl
repnz
jae
ins
fnstsw
dec
pop
xor
push
outs
repnz
jno
xor
xchg
out
xlat
in
mov
pop
mov
cli
jle
xor
movs
xchg
xor
mov
(bad)
jg
imul
inc
addr16
jecxz
jbe
cld
mov
test
or
dec
retf
leave
jns
test
xchg
ja
sub
inc
test
and
and
std
mov
or
int3
jnp
fcmovbe
push
mov
pop
add
sahf
adc
popf
dec
mov
xchg
xchg
sub
mov
and
or
test
inc
cmps
pop
pop
nop
ss
pop
mov
out
pop
out
add
or
sub
ret
mov
cmp
cmp
jl
xchg
fadd
shl
movs
cmc
idiv
and
setne
adc
mov
retf
add
pop
shl
imul
in
ret
push
cmp
pop
pop
mov
inc
arpl
lods
popf
int
pop
cmp
pop
mov
ret
sub
cmc
cmps
addr16
cmp
pop
jae
fs
mov
mul
in
mov
cmp
(bad)
sbb
inc
bound
or
fidiv
inc
and
sbb
fsub
inc
fmul
jp
push
xlat
xor
xlat
add
push
shr
add
and
sbb
adc
(bad)
fadd
dec
mov
pop
test
fsub
mov
popf
int3
sub
in
out
aad
imul
dec
pop
push
cs
mov
mov
enter
xchg
cmp
(bad)
sub
pushf
shl
cmps
lods
xor
jmp
sbb
cmp
sub
addr16
inc
or
mov
movs
mov
loopne
adc
(bad)
in
stos
outs
jae
jbe
add
push
jge
cmps
dec
dec
inc
loopne
mov
push
in
and
test
shr
outs
(bad)
leave
sbb
daa
dec
rcl
push
test
adc
(bad)
push
xor
push
add
xor
sub
xor
mov
mov
mov
call
push
push
fadd
push
lock
icebp
push
mov
out
popf
stos
adc
and
sub
dec
xor
pop
dec
fucomp
inc
in
pop
fiadd
ins
mov
adc
push
cmp
mov
xchg
fcom
mov
ja
mov
mov
jge
mov
mov
add
adc
ja
pop
jne
xchg
fadd
(bad)
addr16
jecxz
mov
sub
add
shl
into
shl
js
cs
jne
mov
xchg
inc
icebp
xchg
mov
outs
or
and
int
xchg
sbb
into
(bad)
lahf
nop
clc
pop
imul
ds
shr
out
bound
cwde
or
mov
adc
mov
push
test
dec
cmp
dec
dec
test
aaa
cld
inc
dec
bound
aam
jge
mov
inc
ins
sub
loope
pop
sub
xchg
fist
fadd
fwait
push
jge
std
inc
psubq
mov
push
push
add
xchg
pop
mov
inc
repnz
xor
(bad)
or
cmp
scas
mov
daa
aaa
push
pop
scas
fisub
lock
push
mov
mov
out
cmp
dec
jmp
xor
int
pusha
int3
pop
cmps
cmps
push
sahf
mov
imul
jno
mov
call
and
call
inc
inc
retf
mov
dec
popf
and
ja
imul
imul
mov
lds
mov
xlat
cmp
mov
sub
(bad)
push
shl
fisubr
or
enter
mov
add
dec
inc
loopne
cwde
std
xor
cmp
(bad)
xor
call
cmps
(bad)
ins
jno
sar
pop
movs
xchg
iret
out
cmp
sbb
push
xor
(bad)
mov
inc
stos
mov
lods
dec
xor
mov
sbb
mov
ss
leave
jno
in
imul
cmp
ss
adc
into
sub
pop
ror
mov
xchg
dec
pop
call
loop
dec
sahf
in
mov
add
adc
in
jno
add
call
push
adc
mov
mov
xchg
mov
fld
and
loop
test
mov
mov
jg
or
stos
rcr
inc
out
fild
jg
xor
loope
push
xchg
icebp
pushf
fbstp
xchg
cmps
push
sub
push
sbb
call
sub
lock
sub
jnp
shl
push
mov
fsub
test
test
cmp
dec
addr16
dec
ds
movs
and
jae
(bad)
cmps
cmp
jp
mov
or
mov
mov
ins
(bad)
scas
xor
rol
dec
mov
les
test
xor
xor
xchg
out
icebp
mov
cmp
jne
dec
adc
cmps
add
mov
rol
pop
add
or
lahf
xchg
push
mov
dec
dec
sti
(bad)
push
jb
pop
sub
adc
mov
sub
adc
pop
inc
xchg
int3
or
dec
cdq
repz
push
cmp
xchg
mov
add
test
stos
pop
dec
mov
add
or
in
adc
sub
inc
jae
aad
add
rol
in
popf
xlat
sub
xor
mov
imul
sbb
clc
outs
add
das
stc
push
jge
repnz
cmp
and
dec
mov
sub
aas
mov
or
fld
ficomp
loope
add
xor
hlt
pop
repz
xchg
sub
xchg
xor
add
jns
popf
std
mov
pop
sbb
imul
mov
ds
movs
xor
xor
ins
jae
xchg
jb
xchg
int
mov
mov
xchg
out
ret
das
fcmovnu
repz
add
push
mov
adc
xor
mov
(bad)
jmp
and
mov
mov
int
cmc
push
mov
repz
aad
and
cmp
into
out
sub
mov
ja
jmp
stos
add
inc
aas
lods
mov
out
retf
pop
data16
inc
sub
pop
stos
aad
mov
push
push
mov
test
adc
sub
sbb
add
sub
pop
sub
jo
jno
jns
leave
cdq
fadd
push
inc
mov
addr16
ret
xchg
inc
pop
lods
out
dec
ins
cwde
xchg
outs
aam
pop
xchg
xchg
sub
clc
fdivr
mov
stos
xor
adc
push
stos
ss
cmp
gs
test
cmps
test
outs
call
dec
(bad)
out
mov
mov
popa
aaa
call
les
cmc
cmp
and
out
mov
jbe
mov
mov
sub
std
adc
inc
jle
(bad)
dec
adc
loopne
and
(bad)
bound
and
imul
sub
sbb
and
cli
cmp
outs
mov
cmps
ins
cmps
push
xor
xchg
retf
and
fcomp
mov
lods
std
cld
lock
dec
jmp
jl
leave
jp
mov
in
cmp
or
dec
mov
inc
xor
jne
mov
add
pop
adc
fild
sbb
fmul
fs
mov
and
dec
cld
rcr
inc
and
adc
outs
adc
pop
or
scas
jb
mov
mov
jp
dec
xchg
(bad)
jmp
imul
sbb
fst
adc
neg
dec
fidiv
shl
sbb
mov
call
adc
jmp
dec
popa
int3
ins
into
push
mov
out
mov
inc
mov
nop
mov
dec
push
mov
push
sub
ror
cmp
ja
es
pushf
or
pop
mov
and
dec
push
inc
es
cmps
mov
movs
stc
std
je
jnp
push
sbb
or
lea
(bad)
js
test
ret
scas
mov
cmp
mov
pushf
xor
sbb
dec
rcr
adc
arpl
push
mov
mov
or
dec
cmps
repz
jbe
mov
into
and
lahf
iret
mov
fdivr
fistp
jmp
xor
fistp
aaa
mov
mov
cmp
inc
xchg
jl
inc
push
mov
dec
jmp
mov
popa
push
popa
into
retf
dec
xchg
mov
call
out
or
push
mov
mov
js
add
cmps
cdq
xor
mov
push
xchg
in
inc
lods
adc
fdivr
add
mov
push
int3
add
and
movzx
cmp
sub
outs
retf
bound
(bad)
add
sub
or
neg
xor
pop
call
xor
fwait
xchg
outs
push
mov
shl
adc
into
sub
ins
xchg
inc
mov
popf
and
test
dec
scas
loope
rcr
int
retf
sub
push
sbb
imul
sub
(bad)
iret
ficomp
xor
test
nop
repnz
xchg
lods
ror
xchg
nop
in
cmp
and
aad
mov
cmp
je
inc
das
jge
test
inc
dec
rol
dec
jae
xchg
call
jns
jle
adc
iret
fucomp
pop
lods
xchg
or
jo
loop
call
(bad)
ins
sahf
or
adc
mov
mov
mov
loop
shr
dec
movs
sub
stos
or
jae
xchg
lock
cmps
test
jb
(bad)
sti
mov
sahf
xor
pusha
or
adc
mov
pop
lahf
addr16
movs
push
scas
mov
hlt
mov
add
sub
into
mov
repnz
lea
cmp
pop
or
push
pop
cmp
sub
int3
xchg
enter
test
ins
sub
leave
es
ficom
cld
mov
std
stos
sub
rcl
xchg
retf
ficomp
sahf
jl
pop
sbb
add
add
(bad)
into
scas
outs
xchg
cmc
in
pop
xchg
dec
pop
lods
movs
and
(bad)
jge
push
cmp
hlt
dec
jo
jle
ror
and
aas
xor
in
mov
and
(bad)
fidiv
mov
or
inc
push
nop
mov
out
shl
inc
and
mov
mov
sub
outs
call
je
inc
xor
lods
gs
out
xchg
inc
shl
jb
in
fst
ds
pop
xchg
jecxz
retf
adc
inc
push
imul
dec
fnstsw
test
or
stc
sub
in
call
xor
xchg
daa
pop
jno
add
pop
ror
outs
xlat
stos
sbb
mov
pop
ret
cmp
aam
xchg
mov
or
xor
cmc
or
outs
call
jmp
and
test
bound
adc
or
xchg
push
(bad)
dec
outs
inc
shl
jne
lds
push
into
lods
inc
fidivr
pop
ins
and
mov
mov
in
nop
mov
mov
out
int3
jmp
jmp
rcl
cdq
loope
push
jo
sbb
dec
mov
pop
outs
sub
(bad)
aam
push
stos
aas
jl
fild
clc
cmps
sbb
mov
dec
cmp
stos
and
(bad)
mov
xor
jmp
ret
stos
xchg
lods
xor
aaa
inc
mov
cmc
inc
gs
xor
aas
iret
push
or
mov
js
push
retf
jae
jle
inc
out
or
or
cmps
or
ss
retf
mov
movs
imul
xchg
rcr
out
sub
inc
in
mov
loopne
aam
add
push
push
sti
or
or
cwde
imul
cmp
hlt
push
push
jl
scas
push
add
std
pop
push
repz
rol
arpl
movs
jae
xlat
mov
fdiv
ret
and
(bad)
fldcw
push
cs
fild
call
lock
cmp
addr16
adc
stc
js
inc
imul
inc
mov
dec
mov
outs
inc
rcl
sbb
push
mov
sbb
dec
jge
jnp
icebp
push
add
and
and
push
inc
xchg
pop
mov
ret
push
fidiv
mov
popf
push
xchg
cmp
imul
shr
movs
into
or
rol
mov
mov
test
jns
xor
adc
mov
ror
div
call
and
xor
js
xchg
iret
repz
retf
cli
add
sahf
cmps
shl
xor
ja
fwait
psrld
dec
out
daa
jp
push
xchg
sub
jg
(bad)
jno
lahf
pop
ret
repnz
mov
inc
sbb
cmps
xlat
cmp
retf
jo
xchg
ss
pop
xlat
jp
packuswb
stos
repnz
fst
call
inc
and
mov
add
stc
stos
pushf
(bad)
cmc
rol
dec
out
jle
mov
daa
sub
imul
xor
inc
sub
xor
(bad)
dec
out
mov
or
inc
cmps
jb
int3
push
jns
pop
aad
push
add
imul
cmc
inc
adc
add
dec
call
fwait
loopne
mov
call
and
out
adc
test
mov
popf
xchg
sbb
mov
cmp
(bad)
jmp
push
mov
mov
aad
shl
cmp
sub
add
dec
xor
push
push
stos
repnz
cli
jno
cmps
int
icebp
or
xchg
xor
mov
movs
adc
sub
out
cs
jns
mov
je
shr
aad
xchg
lds
dec
sbb
cmp
or
or
cmc
je
stos
in
cmps
mov
pop
nop
loope
sbb
inc
mov
lock
pop
int3
nop
daa
xor
sbb
sub
jns
mov
sbb
xchg
into
mov
adc
mov
xor
outs
test
test
outs
mov
or
dec
jecxz
jp
in
ss
into
repnz
nop
push
sub
addr16
nop
sti
cmp
or
outs
sahf
shl
repnz
jecxz
retf
xor
repnz
mov
mov
int
push
lods
or
fcmovbe
mov
sub
xchg
pop
cmp
pop
cld
aam
cmp
clc
jns
push
fimul
arpl
pop
jl
xchg
outs
cs
or
sti
sbb
or
out
cmp
or
lds
mov
dec
xor
lea
or
xchg
ss
aas
xor
jl
movs
inc
or
jp
mov
or
cmps
pop
clc
fcomp
sub
inc
sub
cdq
pop
push
cli
and
movs
inc
push
pop
push
je
xor
or
inc
mov
xor
out
and
dec
or
nop
xor
adc
sti
xor
pop
in
cmp
push
or
(bad)
cmps
xor
mov
sbb
sbb
cmps
(bad)
call
xlat
sbb
psllw
inc
and
dec
inc
ret
jne
cs
in
das
mul
and
xchg
inc
cmps
or
(bad)
jmp
out
xchg
stos
jne
mov
mov
aad
add
pusha
sub
mov
fdiv
adc
mov
in
aaa
cmp
repz
fdivr
xor
xchg
leave
xor
or
or
lds
or
pusha
je
les
or
das
xor
ss
xchg
sbb
rcr
cmps
push
sbb
xchg
add
pop
and
xchg
sub
and
jle
mov
dec
out
es
sbb
push
bswap
sub
out
mov
mov
inc
les
out
pop
rol
outs
inc
imul
fwait
cmove
push
loopne
es
stc
les
out
pop
ficomp
dec
fnstenv
or
pop
mov
jle
mov
(bad)
lock
jns
mov
pop
add
clc
loop
inc
bound
inc
pop
lods
jp
sbb
ror
mov
mov
dec
dec
push
in
fnstcw
rol
fwait
into
sub
int
movs
mov
sbb
cmp
xor
out
mov
(bad)
cld
mov
xor
ja
nop
add
and
(bad)
out
mov
ss
aad
mov
xchg
cmc
mov
pop
cld
nop
outs
or
xor
and
xchg
into
rcr
mov
sub
fistp
adc
pop
adc
push
dec
xchg
push
out
cli
pusha
xchg
loop
pop
loopne
in
push
js
aad
(bad)
in
push
push
push
ja
push
and
xchg
adc
sub
ficomp
xchg
ret
repnz
rcl
lahf
aas
xchg
mov
jae
xor
fcom
mov
aas
in
aas
cli
(bad)
dec
loope
mov
xor
mov
jle
push
and
xor
mov
mov
and
adc
xlat
data16
outs
inc
repz
xchg
nop
jmp
lahf
cmc
xchg
and
pop
mov
jno
sub
xor
retf
lds
mov
mov
cmps
xchg
adc
sbb
(bad)
jae
pop
inc
sub
mov
(bad)
cld
push
mov
retf
add
mov
test
mov
icebp
aaa
push
iret
xchg
push
out
mov
mov
mov
repnz
inc
add
jmp
popf
jp
and
jno
cld
cdq
jl
sbb
mov
nop
fwait
sbb
sbb
pushf
sbb
sub
sub
push
cmp
inc
inc
ret
pop
shl
mov
pop
(bad)
repnz
gs
(bad)
out
lods
out
cmp
dec
add
jne
mov
gs
xchg
ins
mov
leave
or
dec
bound
ins
mov
test
xor
vmovq
xchg
add
(bad)
sub
icebp
push
fiadd
aas
push
push
push
clc
pushf
mov
into
outs
push
retf
sahf
cmp
push
push
in
xchg
inc
mov
das
(bad)
pop
psrad
mov
rcl
and
mov
in
es
adc
int
cmp
mov
mov
push
jno
dec
adc
xor
sub
dec
lahf
jnp
inc
dec
sahf
or
and
lds
pop
jae
pop
mov
rcl
mov
mov
xor
and
xchg
and
pop
push
scas
ins
inc
inc
clc
add
adc
stos
dec
fdivr
mov
std
aaa
ja
sbb
int
add
xor
outs
icebp
aam
mov
xchg
cmp
std
sti
mov
inc
and
adc
data16
push
add
xchg
fs
mov
mov
(bad)
shl
movs
and
hlt
jbe
xchg
add
adc
ret
ret
pushf
(bad)
dec
stc
mov
and
lods
jnp
push
(bad)
dec
iret
imul
fstp
mov
stos
cdq
sbb
fidiv
cmp
movhps
and
imul
sar
jbe
int
inc
dec
fcomi
pop
jl
xor
aad
dec
(bad)
fisub
mov
pusha
js
je
jae
sub
xor
retf
rcr
xor
jl
xor
pusha
xor
aad
lods
lods
adc
popa
mov
xor
popa
inc
cmps
cmc
(bad)
adc
cwde
xlat
push
push
add
pop
pop
pop
movs
out
mov
dec
imul
mov
jmp
jnp
into
jo
fistp
ret
sub
sahf
dec
add
mov
push
cmc
stos
fsub
repz
stos
xor
and
or
or
stos
push
shl
push
outs
jae
scas
into
pop
bnd
ins
inc
push
fdiv
mov
mov
call
mov
fist
adc
clc
retf
jge
mov
push
ss
adc
stos
mov
push
(bad)
icebp
inc
hlt
xchg
mov
and
movs
es
xchg
icebp
jmp
les
sub
jo
sub
aaa
xor
xchg
sbb
repz
pop
cmp
jmp
ret
xchg
push
sbb
stc
addr16
push
mov
int
cmc
fcmovbe
sub
lea
stos
and
or
jmp
mov
ins
push
rcl
push
test
js
adc
push
lock
test
mov
lods
gs
xchg
stos
push
dec
sbb
mov
(bad)
(bad)
jno
jb
lods
xor
or
mov
and
test
call
jae
imul
cmps
push
loope
dec
jecxz
ja
inc
into
ror
sub
jmp
aam
add
sub
call
in
add
das
push
inc
jo
and
jo
xchg
call
bound
mov
mov
jmp
adc
mul
xor
xchg
movs
mov
xlat
je
mov
jnp
test
test
adc
shr
cmc
dec
fstp
xchg
(bad)
dec
loope
ja
shl
repnz
aam
xor
arpl
dec
pusha
lea
lds
movs
(bad)
loop
(bad)
adc
sbb
xor
cmp
ror
pushf
mov
adc
inc
movs
(bad)
arpl
cmps
cdq
fwait
jbe
mov
pop
and
out
push
add
mov
pop
lods
call
or
shl
mov
mov
and
ss
dec
push
push
inc
pusha
loope
stos
push
jecxz
adc
loope
pop
push
push
and
jl
es
inc
pop
mov
xchg
out
jl
ins
aaa
outs
dec
lds
cmc
add
and
or
popa
pop
aam
sbb
mov
gs
mov
ins
sar
dec
mov
mov
sahf
lds
dec
movs
scas
sti
call
xchg
add
lods
inc
js
mov
adc
std
enter
pop
cli
jnp
jmp
mov
shl
mov
test
xchg
sub
adc
cs
scas
lods
in
push
js
and
sbb
int
fwait
cmp
mov
clc
push
imul
pop
ja
pop
hlt
mov
xor
inc
sbb
push
lods
fldcw
pop
imul
xchg
loop
and
push
fs
jmp
lock
data16
inc
outs
les
pop
push
je
xchg
xchg
je
test
mov
fld
xchg
sti
jl
in
retf
xchg
mov
jb
pop
sahf
les
sub
mov
into
test
cdq
add
outs
mov
ins
cmps
mov
hlt
ret
and
xchg
in
mov
dec
and
and
jno
stos
xor
push
test
sahf
test
shr
xchg
or
sub
jne
es
mov
in
retf
mov
add
bound
pop
std
cdq
or
jp
test
clc
ret
rcr
mov
cmp
mov
mov
stos
fwait
mov
mov
int3
or
fsincos
stc
das
imul
and
fs
mov
cmp
aam
bound
test
(bad)
imul
hlt
pop
jmp
dec
sub
popa
sub
shl
lds
sbb
scas
xchg
std
int3
mul
das
adc
adc
fs
cmp
push
adc
hlt
pop
daa
repnz
mov
sub
(bad)
(bad)
rol
test
adc
cmp
lods
mov
xchg
pop
test
mov
jp
add
xchg
push
adc
das
and
sub
ror
jp
aaa
lock
fwait
retf
inc
cwde
aas
imul
add
push
retf
hlt
and
or
dec
ror
xchg
sub
cmps
in
jns
mov
sub
adc
loopne
mov
enter
jnp
movs
cmp
pop
mov
pop
add
pusha
in
pop
pushf
pop
out
mov
add
rcr
xchg
jne
es
or
mov
lahf
sbb
test
jmp
add
fs
inc
stos
jns
push
dec
mov
mov
and
and
shl
aaa
add
jo
jl
mov
je
movs
fwait
pusha
mov
dec
std
cli
mov
scas
jmp
mov
outs
jbe
jae
add
(bad)
and
fcomp
sub
add
adc
lahf
inc
jae
repz
xor
icebp
sar
jns
cmps
in
dec
mov
xor
pop
add
jl
mov
mov
adc
rcr
cmp
test
dec
enter
fcom
xchg
rcr
mov
call
in
mov
int
pop
jg
ins
repnz
ds
into
lods
push
sub
ror
sbb
mov
out
adc
push
cmp
mov
pop
push
sbb
retf
pop
push
movs
ret
push
push
jecxz
imul
add
(bad)
(bad)
movs
pop
sbb
pop
push
outs
(bad)
or
xchg
sar
(bad)
jb
xchg
call
ficom
cmps
and
in
fidivr
in
pop
rcr
sbb
or
dec
stc
leavew
pop
xchg
ds
sub
ret
fcmovbe
rcr
jmp
call
jp
jae
jbe
inc
mov
scas
dec
cwde
push
leave
shr
jns
sub
mov
or
jmp
and
adc
jg
xchg
xor
loope
pop
mov
popa
ror
(bad)
out
xchg
rcl
jb
sub
and
das
fwait
jl
xchg
inc
loopne
mov
js
shld
mov
call
jo
scas
inc
inc
mov
push
inc
sub
xchg
test
lea
jp
or
nop
add
dec
(bad)
ror
in
sar
scas
test
iret
in
enter
jnp
aad
xor
das
mov
add
xlat
mov
(bad)
cli
inc
inc
pop
lods
fimul
dec
ret
(bad)
outs
mov
push
cmp
mov
js
pop
dec
dec
xchg
add
ret
mov
fs
inc
xchg
call
adc
adc
add
mov
addr16
rcl
pop
cmp
mov
and
fwait
xchg
inc
mov
pop
rol
aam
adc
cli
xchg
test
add
aam
xchg
dec
add
xchg
lds
mov
hlt
or
(bad)
jge
retf
lea
mov
outs
(bad)
xor
rcr
mov
mov
cmps
xchg
ret
xchg
mov
out
jns
xchg
mov
xchg
mov
sub
jnp
(bad)
ins
aaa
or
and
xlat
int
mov
dec
fild
mov
xchg
ins
or
adc
dec
jne
fcmovnu
sbb
(bad)
(bad)
mov
adc
(bad)
pop
std
dec
dec
(bad)
rol
add
sbb
jbe
xor
gs
xor
pusha
dec
xchg
cmps
pop
mov
mov
test
cld
ins
and
add
cmp
jo
je
pop
scas
bound
aam
sub
ficom
cld
int3
mov
sub
jge
push
pop
push
and
jmp
push
sub
pusha
loope
mov
cmp
cld
dec
xchg
xchg
shr
loope
inc
jae
(bad)
mov
and
inc
jmp
out
mov
int
sub
dec
xchg
test
sub
add
add
inc
dec
sub
pop
xor
int
xor
mov
sbb
push
(bad)
sbb
lock
sbb
fs
lods
cmp
nop
cs
inc
adc
fmul
loope
(bad)
xchg
leave
or
jp
push
inc
inc
movs
aad
xchg
inc
cdq
push
scas
add
scas
ins
js
ret
inc
sub
jnp
jp
or
adc
aad
jno
mov
dec
push
pop
cmp
dec
leave
cmp
adc
pop
addr16
push
sbb
push
iret
mov
add
fmul
pop
out
push
jge
cdq
add
sub
ins
jbe
(bad)
sub
xchg
push
ret
cmp
lahf
xor
jmp
cwde
mov
jbe
movs
ins
fnstsw
jb
push
fadd
stc
jbe
sub
mov
push
stos
dec
xchg
mov
mov
outs
adc
mov
push
cmp
or
repnz
sbb
in
and
or
pop
sub
stc
adc
or
mov
in
cs
stc
fidivr
fwait
cmp
les
xchg
or
stos
js
xchg
rcl
jmp
jae
(bad)
ficomp
ja
loope
adc
sub
mov
inc
scas
add
mov
or
or
sti
lds
je
and
mov
in
int
sub
push
cld
or
sbb
ja
sbb
pop
cdq
sub
cmc
(bad)
jp
adc
adc
pop
xor
jo
lea
cmp
arpl
test
cmp
out
fs
hlt
test
xchg
inc
lahf
cmp
sbb
mov
shl
pop
sub
pop
xor
sbb
shl
xchg
nop
popa
or
mov
sbb
and
pop
jnp
push
push
xchg
mov
cs
test
pop
aas
push
push
test
jbe
fisub
mov
xchg
xchg
inc
(bad)
hlt
in
clc
ret
sbb
into
sahf
imul
fnstenv
dec
cmp
xchg
adc
pop
adc
stos
loop
dec
in
mov
jmp
jle
das
mov
outs
test
dec
jl
xchg
and
inc
popf
lods
pop
sbb
fmul
pop
push
inc
int3
repnz
sbb
rol
xchg
sub
ret
dec
pusha
pop
outs
aad
dec
or
mov
jge
mov
xor
mov
or
enter
pop
sbb
mov
js
adc
rol
cmp
je
mov
daa
cmp
retf
push
sub
and
push
iret
dec
jbe
mov
or
js
std
mov
addr16
mov
test
sub
(bad)
int
mov
jg
into
psllq
inc
hlt
cmp
xchg
mov
inc
shl
test
jg
sub
jmp
add
pop
shl
jne
js
and
dec
push
(bad)
cs
mov
jns
mov
(bad)
jb
push
not
leave
cs
ret
cmps
das
push
pop
daa
mov
stos
js
jmp
pusha
push
clc
add
xor
fdiv
xchg
ss
adc
clc
ror
jbe
mov
adc
into
int
stos
rol
fst
in
icebp
sub
pop
jbe
cdq
or
retf
adc
mov
push
icebp
or
jl
call
call
jmp
or
mov
dec
sbb
sbb
sete
push
(bad)
cmc
in
mov
jo
push
dec
stc
cwde
(bad)
sub
cwde
push
(bad)
hlt
adc
inc
push
push
lahf
and
push
cmp
sub
sub
mov
lods
hlt
xchg
iret
sbb
daa
jp
mov
ins
xchg
outs
xchg
sar
out
aaa
xchg
repz
xchg
push
or
test
adc
sub
cmc
mov
and
sub
cld
sbb
cmp
sbb
das
xchg
hlt
dec
mov
cmps
mov
ret
jg
int3
(bad)
(bad)
push
retf
les
sbb
test
jnp
mov
lds
dec
imul
ret
push
xor
mov
pop
add
mov
cmp
test
sbb
std
or
sahf
push
dec
mov
mov
enter
lock
imul
xor
loope
push
not
pop
pop
and
push
imul
xlat
cmps
ficom
dec
or
test
packuswb
inc
outs
scas
es
sub
mov
cs
ins
ins
mov
xchg
data16
das
aaa
ficom
or
das
psrad
fs
pop
xchg
cmp
and
adc
mov
jl
ret
fnsave
ror
adc
dec
gs
je
xchg
cmp
div
dec
jno
inc
lods
adc
into
xchg
push
mov
loopne
sbb
inc
test
mov
fstp
lahf
push
sub
shl
or
shl
dec
inc
sub
mov
xor
lea
xchg
jl
xor
retf
in
jp
or
inc
cmps
xor
pop
shl
push
adc
ja
aaa
test
cli
ja
add
mov
cmp
jle
pop
push
or
mov
push
frstor
int3
push
add
adc
fs
iret
and
test
(bad)
cwde
(bad)
pop
dec
add
(bad)
mov
fcomp
fdivr
adc
jge
iret
outs
mov
mov
push
push
pop
pop
std
or
and
mov
pop
and
(bad)
dec
xchg
mov
dec
ret
out
or
cmp
ret
and
hlt
sub
sahf
stos
daa
gs
and
inc
pusha
neg
call
and
push
je
scas
jg
(bad)
dec
mov
repz
inc
scas
aaa
scas
leave
mov
push
mov
add
cdq
jp
push
pop
jmp
push
xchg
cmps
das
pop
(bad)
xor
add
push
cmp
or
pusha
call
jmp
in
xchg
mov
(bad)
fimul
sub
jbe
xor
pop
xchg
xor
adc
inc
jbe
ins
cs
sahf
or
cld
shl
shr
(bad)
jp
cmp
pop
xchg
pop
mov
xor
or
repnz
sar
movs
jno
mov
test
adc
add
jg
lods
pop
jb
inc
or
sbb
mov
das
dec
mov
inc
addr16
pop
out
retf
adc
inc
adc
inc
shl
out
sbb
and
mov
dec
(bad)
test
mov
(bad)
jecxz
(bad)
cmp
push
arpl
dec
(bad)
cmp
test
jmp
loop
and
push
outs
int
cdq
adc
in
add
cli
iretw
dec
pop
mov
or
xor
js
jns
daa
cli
add
loopne
push
cmp
pop
mov
das
lahf
cli
out
stc
stos
inc
shl
mov
inc
rcr
or
int3
ins
ret
icebp
out
jmp
adc
es
xlat
mov
cdq
push
idiv
cmps
call
ds
push
add
push
sub
ret
gs
sahf
and
clc
sub
mov
inc
mov
ja
popf
imul
test
xor
fiadd
dec
ins
jl
cld
cwde
scas
xchg
dec
ficomp
gs
pushf
dec
cli
cmps
mov
jp
lock
leave
cmp
out
fwait
in
mov
cmp
add
(bad)
fwait
rcl
fwait
or
push
mov
adc
ja
call
sub
sbb
xchg
push
mov
pop
mov
shr
sub
pop
sar
ss
aas
xchg
mov
cld
std
cli
lods
mov
data16
jecxz
mov
(bad)
sub
mov
sub
sahf
test
jb
mov
ja
pop
enter
dec
fdiv
add
out
pop
in
pop
and
ins
push
ret
repz
std
popa
scas
push
in
ror
imul
sbb
sub
mov
and
aad
rcr
sub
dec
(bad)
call
rcl
loope
inc
mov
idiv
xchg
ja
xchg
call
stos
data16
cmp
call
sub
mov
xchg
xchg
xlat
sub
mov
addr16
cs
sbb
mov
out
lds
mov
cmp
sub
adc
mov
outs
cli
sub
jp
mov
xlat
push
jns
inc
mov
push
xor
repnz
int
fwait
(bad)
fisttp
in
dec
icebp
xchg
and
mov
repnz
cmps
int
fwait
repz
sbb
jno
inc
mov
lods
dec
popf
add
add
rol
fs
jb
int
add
xor
je
sbb
xchg
adc
bound
jbe
adc
and
mov
sub
jnp
and
in
retf
scas
mov
or
in
addr16
test
lds
mov
shl
leave
fist
les
or
adc
add
pop
(bad)
or
inc
jae
aas
out
pop
test
pop
ror
cmp
fimul
(bad)
aam
fs
cmp
shl
sar
scas
imul
or
in
rol
push
inc
xchg
in
ror
lds
pop
cmc
jo
mov
or
cmc
inc
add
out
jle
sbb
mov
gs
sub
pop
mov
push
jns
cmps
jp
xor
adc
and
std
cdq
movs
ret
test
jmp
cmp
add
mov
mov
aad
jbe
inc
jo
mov
mov
xor
mov
sbb
jno
pop
jge
jmp
pop
adc
cld
bnd
jmp
sbb
pop
shr
mov
mov
push
push
fwait
daa
dec
pop
ja
popa
popa
add
popf
fs
jnp
addr16
ja
pop
xor
cmp
stc
or
mov
es
nop
add
xchg
aaa
jo
sub
int
mov
xchg
stos
ret
adc
add
pop
out
xchg
push
es
out
inc
cmp
sbb
pop
in
or
dec
scas
ins
fadd
jmp
xchg
push
add
pop
push
mov
xchg
dec
adc
or
les
aam
mov
cmp
in
ret
ins
jae
mov
jp
test
dec
lahf
mov
ret
dec
sub
popa
rol
xor
push
add
adc
stos
neg
cmp
pushf
xchg
cmps
enter
mov
gs
mov
cmp
inc
in
xor
lods
ret
shl
into
jl
je
imul
xchg
jmp
cmps
fbstp
dec
es
mov
inc
inc
push
mov
jo
(bad)
xchg
int3
lock
sub
mov
lea
enter
sub
test
jne
or
jp
mov
ja
jg
xor
pop
std
jb
mov
pop
mov
ss
inc
mov
adc
adc
fist
iret
sbb
imul
cmps
mov
mov
ja
jp
mov
(bad)
and
xor
xchg
dec
mov
adc
mov
xchg
push
cs
lahf
xor
sahf
mov
cmp
xchg
mov
push
dec
pushf
jne
push
(bad)
inc
test
or
mov
mov
movs
cmp
cwde
add
xor
inc
iret
add
jecxz
scas
loope
mov
bound
ja
rcl
shl
xchg
mov
test
push
dec
sbb
aam
adc
inc
shr
push
xchg
pop
sub
push
push
das
push
in
fcom
pop
cmps
jge
inc
adc
xchg
test
mov
mov
mov
add
jae
adc
idiv
adc
or
sub
inc
aad
jbe
pop
or
jmp
sub
cmp
xor
mov
inc
(bad)
out
inc
fnstcw
sub
adc
push
and
dec
fmul
push
adc
repz
pop
(bad)
adc
pop
cmps
and
jns
imul
cdq
ds
mov
les
inc
or
test
scas
push
not
mov
and
into
adc
daa
sub
ficomp
mov
aad
adc
loop
rcr
adc
pusha
and
xor
div
(bad)
fnstsw
sti
push
sbb
mov
fsub
(bad)
and
jb
arpl
mov
add
add
fldcw
rcr
push
sbb
aam
gs
(bad)
and
fdiv
test
hlt
aam
mov
cmp
cmp
repz
jmp
pop
int3
xor
jbe
jge
jb
in
jecxz
ror
es
cwde
leave
push
sti
outs
stos
pop
push
(bad)
fucomp
mov
mov
or
push
out
cmc
add
mov
int3
pusha
add
fist
lahf
jl
(bad)
adc
lds
outs
test
popa
shl
test
sahf
sahf
gs
(bad)
out
in
cmps
mov
jle
mov
fmul
xchg
in
pop
call
mov
dec
or
dec
imul
pop
mov
jge
pop
fild
push
pushf
mov
adc
shr
push
fnstenv
mov
inc
mov
mov
dec
leave
or
jle
pop
push
mov
or
sbb
jge
fbld
(bad)
hlt
adc
mov
xor
test
push
cmp
dec
cmp
retf
mov
movs
sahf
mov
cmp
fsub
xor
out
adc
xor
or
lods
test
jecxz
sbb
int3
(bad)
mov
scas
sti
fs
out
xor
std
sub
aas
sub
lds
pop
fild
aas
adc
sahf
int
and
ds
hlt
jmp
fwait
leave
cmp
push
ror
ds
rcl
push
call
mov
ss
xor
aaa
jl
aaa
or
mov
sbb
push
and
daa
mov
pop
test
or
ror
cld
cmp
sub
mov
pushf
arpl
push
(bad)
sbb
adc
imul
daa
and
out
inc
push
loopne
jbe
outs
ror
popf
in
jp
out
xchg
mov
hlt
push
cli
xchg
jge
pushf
push
cmp
inc
icebp
and
mov
daa
repz
jbe
xchg
lods
mov
or
das
ja
(bad)
add
ret
fadd
xor
test
inc
inc
cwde
stos
mov
jmp
data16
cmp
or
out
mov
fdiv
ja
mov
adc
dec
mov
sub
mov
and
fbstp
int3
hlt
fisttp
imul
push
mov
push
mov
(bad)
frstor
cmp
mov
sbb
mov
push
add
out
scas
ret
mov
ror
adc
aaa
in
add
dec
outs
in
in
inc
daa
leave
lock
aas
push
jl
div
ret
lock
movs
mov
aas
out
test
ins
or
std
fsubr
fstp
dec
pop
fld
sub
add
dec
bound
mov
scas
mov
jmp
addr16
fild
mov
push
ret
outs
adc
test
xchg
push
ins
ror
shr
push
push
shl
lods
xor
sub
and
imul
add
mov
jns
jl
retf
ins
scas
sbb
sbb
mov
sub
cmp
pop
mov
test
pop
jecxz
pop
pop
push
dec
gs
dec
test
push
lea
cmp
add
xchg
jo
shr
scas
ret
loop
mov
stc
inc
push
jbe
jg
fnstcw
fbld
inc
add
adc
jns
(bad)
hlt
retf
xchg
(bad)
bound
enter
adc
fld
mov
lahf
call
daa
jge
jb
idiv
aas
jmp
add
pop
out
jno
xchg
jmp
push
jecxz
push
adc
ffreep
mov
arpl
mov
daa
aam
(bad)
sub
push
or
popf
inc
cmps
stos
sub
sub
cmp
push
adc
and
(bad)
(bad)
jmp
addr16
in
sti
sub
fcmovnu
adc
test
mov
or
pop
in
imul
xrelease
test
int
arpl
jecxz
mov
mov
pop
dec
lea
cwde
mov
push
lea
or
xchg
retf
xor
(bad)
cmps
aam
adc
mov
fbstp
fwait
lods
lock
lods
mov
inc
mov
push
fistp
out
test
shr
fisttp
das
shr
das
call
aad
mov
jle
dec
jg
call
rcl
(bad)
xor
sub
mov
rep
int
sar
add
jmp
cmp
gs
gs
outs
das
mov
push
js
mov
into
cmc
adc
sti
(bad)
imul
lods
inc
mov
inc
cmp
ds
pop
mov
sbb
mov
(bad)
adc
sbb
or
sar
jg
sub
xchg
push
scas
mov
enter
js
mov
cs
mov
lds
aam
lock
and
into
test
fist
test
push
inc
adc
test
das
popa
cli
mov
add
push
(bad)
inc
mov
call
pop
imul
inc
inc
lds
cwde
mov
pop
ss
jl
(bad)
cdq
xlat
push
std
lds
adc
ins
inc
ins
pusha
imul
cmp
int
and
js
add
inc
cmps
sahf
push
jge
dec
shr
shr
stos
int
aad
scas
and
popf
jns
rcr
out
pop
(bad)
imul
jge
sub
sub
popf
cmove
(bad)
call
sti
pop
loopne
cdq
xchg
ret
inc
loope
dec
out
add
test
sub
sbb
movs
xor
mov
pop
aam
sbb
mov
into
lods
pmaxsw
jns
or
mov
loopne
and
and
stos
rcr
sub
and
pusha
dec
mov
dec
leave
dec
push
xor
jno
call
add
jle
push
test
int3
push
loop
dec
test
inc
xchg
ds
mov
shl
ret
inc
pop
mov
cmps
pop
mov
sbb
test
xchg
mov
sub
xchg
xchg
mov
mov
aam
retf
mov
aaa
movs
adc
dec
into
sbb
sub
cmp
or
cwde
sti
dec
sub
sub
add
jmp
cld
pop
jne
lahf
mov
sahf
and
popa
add
cmps
xchg
loop
(bad)
call
adc
pop
lods
imul
inc
dec
in
fcomi
in
dec
jmp
or
cdq
popf
les
sub
out
ret
mov
jl
inc
mov
call
aad
call
scas
mov
add
loopne
mov
out
jp
shl
ds
lock
int
xchg
sahf
xchg
sar
ins
gs
adc
int
inc
and
scas
in
or
jns
adc
mov
cmp
xchg
lahf
out
(bad)
push
xchg
add
rcr
mov
sbb
clc
je
fisubr
mov
enter
pop
and
(bad)
retf
loope
inc
jo
adc
xchg
dec
test
out
in
std
cmps
pop
jae
sti
sbb
clc
test
jl
icebp
sbb
daa
mov
loope
cli
jo
popf
xchg
sbb
movs
cmps
jne
pop
inc
aas
shl
add
int
xchg
xor
sub
ins
(bad)
(bad)
(bad)
jns
xor
stos
xchg
dec
popf
test
and
out
sar
pop
(bad)
mov
mov
dec
inc
sbb
push
add
or
mov
scas
or
repz
sbb
movs
call
fidiv
cmc
cmp
jge
xor
lods
cmps
mov
add
push
out
(bad)
(bad)
push
or
mov
fild
mov
xchg
ins
sub
cmp
mov
rcr
aam
(bad)
pusha
gs
das
in
rol
shl
push
pop
cmps
pop
int3
pop
sahf
(bad)
adc
sbb
jnp
cmp
xchg
xchg
adc
xchg
movs
push
es
cmp
into
dec
sbb
inc
inc
enter
pop
add
xchg
addr16
gs
imul
cmp
mov
cmp
ss
dec
mov
and
neg
or
push
lods
push
ficomp
mov
sar
sar
sbb
adc
ds
aam
or
xlat
imul
or
int3
jp
inc
sub
lahf
nop
fisttp
(bad)
sbb
lahf
scas
inc
pushf
ror
or
rcr
js
in
add
cmp
in
js
int
mov
popf
sbb
lods
mov
popa
lods
popa
xchg
jae
or
lods
add
sub
loop
call
sub
ret
lods
mov
out
jecxz
outs
int
ins
adc
cwde
pop
pop
push
retf
or
mov
push
lea
rcl
gs
sar
and
inc
add
add
setnp
dec
push
xlat
lds
cli
cmp
call
lods
dec
mov
pop
lea
out
addr16
pop
pop
xchg
and
in
cdq
pop
mov
xchg
inc
loopne
mov
les
sub
sar
out
mov
into
jmp
and
adc
loop
add
lahf
sti
xchg
sbb
mov
pop
jg
pushf
xor
out
jo
fsubr
jo
push
add
rcl
jo
push
out
cli
jne
push
and
push
push
dec
sub
push
stos
xchg
ror
xor
fild
fisubr
in
enter
in
sahf
fs
stos
cmp
inc
mov
in
cmc
in
mov
cmp
popa
(bad)
xor
xchg
dec
shl
pusha
and
fiadd
aad
jne
inc
xchg
outs
mov
bound
add
or
enter
add
das
ins
xchg
(bad)
jae
int3
pop
jmp
(bad)
imul
fbld
mov
inc
mov
icebp
popf
mul
jae
cmps
dec
cmp
rol
mov
mov
sbb
mov
movs
fisubr
aam
push
xchg
sub
call
fisubr
or
mov
scas
adc
sbb
mov
lock
or
aad
ret
mov
jmp
(bad)
mov
clc
mov
jge
mov
repnz
mov
lock
sub
xor
aam
sbb
adc
dec
mov
stos
push
xor
lods
sahf
test
sbb
retf
and
jp
(bad)
sti
xchg
je
mov
ins
or
aaa
jg
fisub
xchg
(bad)
pop
lahf
mov
out
dec
pop
call
xchg
fist
inc
mov
mov
in
and
push
shr
cmp
mov
xor
sub
sub
xchg
(bad)
int
in
out
mov
push
les
icebp
mov
call
and
mov
retf
pop
jge
loopne
inc
dec
push
mov
das
mov
mov
and
or
and
test
mov
leave
out
pop
jecxz
push
sbb
and
fidivr
cmp
arpl
dec
int
loopne
imul
mov
pop
test
popa
xor
cwde
pop
clc
mov
jb
pop
jne
dec
sub
stos
jl
int
out
dec
arpl
mov
and
aam
mov
add
mov
fwait
push
and
add
std
mov
loop
xor
aaa
inc
lods
or
arpl
push
inc
jecxz
sub
xor
outs
jmp
out
lahf
push
iret
mov
xchg
sub
push
or
push
push
jmp
dec
sub
scas
out
push
push
pop
test
popa
lahf
adc
fidivr
data16
in
add
adc
(bad)
fistp
es
xchg
fsub
or
push
jb
out
(bad)
or
sub
js
sti
push
xchg
iret
dec
and
push
sub
fisttp
iret
aam
sub
dec
adc
jecxz
inc
stos
retf
cmps
jae
inc
xchg
cli
jp
iret
int3
scas
or
hlt
sbb
xlat
test
sbb
lea
mov
mov
sub
jo
dec
xor
idiv
mov
xchg
call
clc
(bad)
xchg
or
aaa
stos
or
lea
cmp
sub
pop
inc
jo
mov
ins
sub
out
mov
add
adc
cld
xchg
pop
lods
pop
outs
jae
lods
(bad)
sti
lods
add
push
pusha
add
aad
add
nop
es
cmps
pop
imul
sbb
push
and
cld
mov
add
icebp
rcr
gs
outs
mov
out
es
retf
fwait
mov
jmp
jmp
imul
lods
or
call
sbb
cmp
mov
push
addr16
loope
mov
push
inc
sub
adc
iret
jno
xlat
dec
jmp
movs
test
and
xchg
es
leave
inc
loopne
(bad)
jp
sar
push
sub
rcl
cmps
push
add
xchg
hlt
imul
loopne
jmp
mov
jmp
cs
outs
mov
dec
push
jnp
cmp
pop
(bad)
sbb
fwait
ds
cmp
fdivr
xor
xchg
pushf
cdq
dec
push
into
imul
movs
and
sbb
cld
dec
fwait
into
outs
push
jb
add
xchg
add
pushf
inc
sub
mov
xor
inc
pop
pop
adc
mov
fidiv
push
stc
adc
mov
jnp
movs
sub
fisttp
cmp
inc
mov
enter
movs
add
ss
lods
or
xchg
daa
test
mov
(bad)
in
lock
ret
mov
jae
sbb
test
out
gs
rcl
add
push
dec
and
outs
xor
mov
or
int3
sti
pop
fcomp
inc
xlat
push
push
shl
fs
xchg
repnz
mov
and
out
neg
stos
push
sub
loope
outs
fild
jg
mov
add
push
inc
xchg
sti
mov
fwait
inc
pop
dec
outs
mov
rol
rcr
mov
xchg
test
js
mov
and
cwde
dec
mov
adc
mov
lahf
in
(bad)
xor
mov
jmp
jl
cdq
cmp
lods
dec
into
xor
ret
lods
(bad)
sbb
mov
repnz
ret
inc
dec
ins
loop
mov
aaa
fbstp
cld
or
add
addr16
cmp
fs
sti
or
add
ja
sbb
aaa
push
lods
or
scas
cmp
jne
mov
pop
mov
sahf
jb
mov
rol
lods
(bad)
out
add
xor
bound
mov
add
push
out
and
jle
cli
aad
cmp
aaa
leave
push
hlt
test
popa
or
push
cmps
mov
fiadd
in
cmp
pushf
jbe
lea
out
cmp
mov
push
xchg
ins
(bad)
pop
pop
xchg
loope
xor
(bad)
pop
fiadd
sbb
out
push
call
mov
gs
jno
sbb
into
cwde
aas
add
mov
lods
out
add
fnstcw
sti
mov
jg
ins
mov
mov
enter
movs
push
daa
jmp
xor
out
push
inc
adc
fcomp
lds
jmp
imul
pop
out
aaa
adc
sbb
mov
fbstp
ret
loopne
lock
xlat
bound
jmp
sar
mov
scas
dec
dec
pop
mov
mov
aaa
dec
xchg
clc
mov
adc
jg
dec
int3
hlt
sub
jo
lea
dec
pop
pop
mov
imul
movs
or
and
lock
xor
out
(bad)
dec
mov
inc
mov
adc
cmp
mov
inc
(bad)
in
sbb
test
cmp
out
fist
test
lock
mov
jle
retf
push
cmp
sbb
inc
dec
imul
adc
cmp
cmp
fwait
hlt
sub
add
cmc
dec
or
or
(bad)
pop
nop
pusha
repnz
xchg
dec
out
nop
inc
jns
mov
test
pmuludq
pop
cmp
sbb
xor
mov
adc
add
pop
push
mov
mov
cmps
adc
add
dec
cmp
xchg
xchg
jbe
rcr
ins
dec
lds
and
mov
lock
stos
mov
fstp
clc
xchg
lahf
add
xchg
push
mov
xchg
pop
repz
xchg
nop
popa
lahf
rcr
in
inc
jl
cdq
mov
mov
add
sub
jecxz
fnstsw
inc
iret
jbe
imul
les
and
mov
loop
jmp
repz
push
push
je
mov
mov
push
inc
pop
push
rcl
and
sub
and
and
neg
inc
add
mov
cmp
inc
adc
add
ret
add
sbb
pushf
scas
mov
fs
imul
lods
mov
mov
cli
push
pop
xchg
fsub
loope
fnsave
xchg
jae
pop
mov
aaa
add
cdq
rcr
sbb
xor
xor
int3
mov
mov
call
pop
iret
out
ja
lock
xchg
pop
inc
xor
test
std
and
sbb
add
cmp
jp
xchg
repz
pop
retf
dec
test
cmp
mov
xchg
popa
addr16
outs
jge
cmp
loope
push
cmp
xlat
mov
std
daa
sbb
mov
sub
sub
pop
cs
loop
mov
push
out
dec
push
ret
pop
push
nop
stos
and
outs
adc
pop
loope
xchg
xchg
stc
(bad)
adc
push
pop
jae
frstor
sbb
xchg
dec
xchg
into
icebp
cmp
mov
(bad)
or
sbb
or
mov
stos
aas
addr16
shr
or
dec
add
ret
or
fimul
adc
jo
pop
test
outs
jae
aam
cli
dec
std
adc
mov
scas
adc
and
push
mov
cli
movs
pop
mov
lea
xchg
shl
mov
(bad)
mov
cmp
daa
outs
push
rcl
mov
dec
(bad)
call
sub
jecxz
adc
aad
in
ins
ja
iret
inc
in
clc
adc
cmp
or
js
or
and
inc
push
mov
and
fcmovne
sti
xlat
jne
fs
xchg
loop
jge
xchg
pop
xor
jle
xor
fwait
xor
jne
jecxz
imul
sub
leave
jb
fstp
(bad)
dec
loopne
ins
jae
ret
test
aad
out
into
loopne
setnp
dec
xor
into
arpl
in
mov
mov
lds
adc
rcr
inc
cmp
mov
jmp
or
fdiv
(bad)
or
push
std
test
popa
aaa
stos
mov
push
mov
outs
sti
cmp
popa
push
in
dec
or
cmp
sub
sub
push
pusha
xor
or
fadd
xchg
cmp
jl
push
(bad)
mov
cli
and
mov
sub
retf
bound
sub
jbe
push
xlat
hlt
sbb
add
mov
jmp
mov
adc
popf
pop
test
jmp
out
push
and
jo
mov
push
ret
cwde
mov
jmp
xor
xchg
aad
sbb
cmp
or
jo
lods
pop
neg
scas
and
std
leave
std
pop
mov
mov
sbb
adc
push
lahf
mov
sub
inc
and
sbb
icebp
sub
xor
pop
adc
jp
test
pop
or
aad
lds
xchg
call
outs
push
lock
inc
test
push
les
mov
sbb
xchg
mov
iret
int
mov
stos
ror
and
mov
loopne
ret
scas
xor
sbb
test
dec
adc
repz
and
fbld
dec
shl
adc
mov
int3
jle
fisttp
push
push
stos
mov
adc
jecxz
ret
fadd
mov
and
jmp
mov
fiadd
cwde
jne
imul
shr
sti
pop
cmp
cmp
inc
sub
cwde
jb
jmp
outs
jmp
popf
xor
std
add
ja
push
stos
ror
mov
jno
popf
dec
adc
xchg
neg
mov
add
dec
js
or
sub
cmps
xchg
add
pop
push
jle
nop
inc
mov
add
sbb
mov
mov
sbb
loopne
bound
mov
repnz
pop
sbb
or
xor
xchg
sbb
cdq
and
jle
xchg
out
stos
adc
add
sar
fwait
pop
add
movs
jo
xchg
and
pop
icebp
xor
fs
pop
or
scas
and
xchg
jbe
outs
arpl
cmp
lods
rcr
inc
pop
push
std
(bad)
fistp
sub
xor
cmp
ret
out
or
repz
iret
imul
cmp
lods
xor
cmp
stc
icebp
inc
shr
(bad)
neg
ins
fdiv
xchg
call
sbb
mov
jl
mov
xor
loop
lahf
xchg
test
scas
jge
jne
jg
ret
fstp
sahf
adc
pop
cmp
in
add
out
pop
or
ret
adc
cmp
cmp
add
or
xchg
add
cwde
sbb
mov
movs
push
test
jmp
adc
mov
hlt
or
cli
mov
les
shl
js
mov
jmp
sbb
xor
clc
jg
sbb
mov
or
fldcw
in
add
ins
inc
mov
fs
(bad)
aaa
stos
cmps
into
mov
mov
loop
aas
into
adc
es
sbb
pop
adc
ffree
ror
sbb
sbb
fldcw
pop
mov
xchg
add
icebp
adc
or
cmc
mov
ja
adc
pop
cwde
pop
leave
jg
loopne
js
xor
pusha
fcom
jnp
jno
cli
sbb
outs
adc
repnz
mov
hlt
pushf
dec
out
stc
pop
cmps
imul
pusha
and
inc
sub
mov
add
dec
sub
fsub
pop
xor
repz
mov
jecxz
sub
into
in
cmc
ins
(bad)
test
pop
into
das
pop
xchg
push
jmp
cmp
ins
retf
push
sbb
bound
or
bound
ds
out
(bad)
loopne
mov
mov
cmp
jns
data16
mov
int3
js
or
cwde
sub
push
cld
sub
repz
pop
js
xchg
adc
add
push
lock
loop
jns
test
nop
and
gs
cmova
scas
jno
push
ret
push
out
fcmovu
dec
push
sub
jae
pop
(bad)
loopne
pop
daa
and
inc
(bad)
dec
rcl
sub
(bad)
ja
bound
dec
stos
test
xchg
mov
xchg
imul
fadd
xor
pop
push
dec
stos
int
ficomp
pop
retf
call
adc
pushf
clc
stos
push
xor
dec
outs
cdq
jae
repz
add
push
mov
repz
add
arpl
push
dec
popf
test
std
or
outs
fst
push
mov
or
add
and
inc
sar
mov
jg
lock
enter
ins
mov
xchg
mov
push
mov
std
sbb
sub
sub
rcl
aaa
mov
sub
mov
loopne
push
sub
dec
or
repnz
popa
jbe
bound
xchg
sub
pop
push
push
sbb
inc
daa
cdq
aad
add
shr
out
fnsave
mov
mov
sub
xor
dec
shr
dec
mov
aad
mov
es
rcr
int
hlt
fstp
pop
or
imul
clc
imul
movs
adc
outs
test
out
stos
daa
and
ins
out
enter
loope
fwait
call
jmp
mov
arpl
les
mov
xor
dec
add
mov
nop
inc
std
call
sub
dec
jnp
into
scas
stc
fnstsw
pushf
jbe
jecxz
sub
inc
push
cmps
xlat
add
inc
sub
pop
mov
push
pop
mov
int3
cld
cmp
lods
jns
jb
push
jne
or
fsub
inc
mov
pmaxub
adc
mov
or
cdq
lock
into
fs
imul
or
in
inc
inc
mov
popf
push
dec
cmp
imul
cmp
cmp
pop
movs
pop
push
push
mov
std
dec
scas
fadd
test
dec
loopne
imul
or
dec
stos
sti
retf
jmp
ss
test
data16
cmp
or
sub
push
mov
sub
hlt
xchg
mov
sbb
dec
lods
shl
xor
je
add
mov
lods
ficom
xor
sub
inc
inc
leave
test
fidiv
cmps
sbb
sub
pusha
fmul
fdivp
rol
out
push
push
mov
sbb
cmp
mov
mov
scas
xlat
push
pop
fwait
pop
fimul
mov
(bad)
mov
jmp
jne
jle
xchg
into
mov
imul
scas
mov
aam
(bad)
call
adc
repz
jl
js
pushf
add
push
cmp
xchg
inc
jo
xchg
ret
fiadd
jno
add
jno
fild
(bad)
in
xchg
aaa
adc
inc
mov
push
and
adc
sub
jne
fdivr
pusha
inc
pandn
cdq
scas
repnz
jbe
icebp
jmp
movs
repz
in
mov
xchg
or
xor
jae
sti
cs
lock
popf
sbb
jge
jle
les
out
ret
jns
inc
iret
cmp
add
and
xchg
fwait
iret
push
mov
jne
je
ret
add
das
mov
int3
and
sub
aaa
ja
add
call
cmp
pop
dec
icebp
push
sub
cmc
aas
out
out
mov
out
sub
scas
add
push
vpunpcklwd
call
mov
xor
icebp
dec
(bad)
adc
(bad)
dec
cli
add
daa
jb
stos
sahf
movs
inc
add
retf
gs
xchg
inc
jle
pop
xchg
ins
sub
jbe
xor
sbb
add
xchg
int3
fimul
dec
test
cmp
inc
and
jbe
imul
pusha
(bad)
xlat
int
mov
add
call
out
mov
jge
mov
pushf
xchg
addr16
nop
out
add
jg
cmp
adc
retf
(bad)
lock
jle
jecxz
shl
mov
inc
or
dec
shr
mov
push
add
mov
mov
lods
jle
push
sub
mov
(bad)
outs
sub
pop
gs
bound
loopne
or
stc
pop
fld
adc
(bad)
pop
clc
cmp
fbld
fisub
and
xlat
add
aaa
ficomp
inc
pusha
xchg
scas
inc
add
mov
retf
jb
inc
and
jns
ss
sbb
cmc
mov
in
bound
nop
mov
ret
rcr
cmps
daa
add
xchg
push
(bad)
(bad)
cld
popa
jmp
les
mov
cmp
push
mov
loop
outs
mov
outs
icebp
mov
neg
les
(bad)
das
sar
daa
loop
sub
(bad)
data16
movs
xor
(bad)
add
inc
popf
sub
idiv
jb
gs
jae
jmp
jmp
call
iret
in
mov
cwde
stos
stos
mov
stos
pop
pop
and
imul
arpl
dec
cdq
call
push
out
pop
shr
mov
js
ds
in
loop
xchg
and
mov
lea
adc
loop
mov
ud1
aad
aaa
pop
outs
test
mov
xor
adc
cmp
xchg
pop
sub
cdq
into
add
test
cmp
jae
fld
inc
test
adc
jmp
sbb
test
fdiv
arpl
cmc
clc
pop
dec
lahf
sub
pop
clc
sub
pop
nop
jmp
xchg
and
mov
mov
sub
mov
addr16
(bad)
fst
stc
icebp
popa
dec
in
mov
xchg
xor
imul
int3
lahf
pop
retf
jmp
cwde
xor
sti
mov
mov
cmps
mov
or
push
out
or
bound
mov
jo
xor
nop
in
pop
shr
(bad)
xor
dec
xor
call
dec
retf
adc
and
mov
mov
retf
or
mov
loope
push
or
mov
cwde
push
dec
lods
mov
leave
xlat
mov
out
int
icebp
xor
or
xor
inc
xor
inc
fs
fld
mov
ret
xlat
mov
inc
adc
sub
cmps
jmp
adc
xchg
lods
repnz
fsubr
and
aaa
add
mov
cmps
test
sub
sub
in
fidivr
cld
sub
jbe
sar
ins
push
push
mov
add
aad
ret
cli
jnp
inc
and
imul
shr
js
sbb
xchg
aad
jp
mov
pop
adc
xor
sub
cdq
and
mov
mov
ror
mov
pop
or
dec
jae
push
sar
in
leave
outs
jmp
fld
sub
das
(bad)
mov
(bad)
aad
cmp
push
nop
pop
js
mov
mov
inc
inc
outs
mov
xor
or
and
fdiv
mov
dec
add
dec
and
stos
jecxz
jo
adc
stos
pop
and
test
movs
sub
sub
retf
mov
add
fild
adc
adc
cli
jl
cmc
pop
adc
xor
push
pop
xchg
jmp
push
cwde
xchg
in
or
sub
xor
ja
ss
loope
or
inc
add
or
push
ds
push
std
mov
lock
orps
push
test
test
inc
(bad)
out
in
cld
cdq
popa
xchg
retf
jnp
inc
fstp
mov
daa
mov
pop
pop
mov
pushf
pop
cmp
cmp
cmp
mov
out
leave
inc
push
bound
mov
add
adc
js
test
int
and
jmp
dec
sub
pop
aas
stos
cmp
cmps
cld
inc
inc
mov
xor
mov
jae
xor
xchg
push
or
daa
mov
add
mov
push
pop
sub
ins
add
or
push
jns
dec
repnz
pop
mov
mov
push
lock
mov
in
adc
mov
ins
xor
in
sbb
cmp
fistp
push
icebp
aaa
leave
mov
pop
in
daa
lods
fld
xchg
push
jl
stos
or
es
mov
push
nop
pop
addr16
mov
and
(bad)
mov
mov
movs
pop
fnstenv
ret
jbe
scas
or
xchg
or
dec
std
or
xlat
pop
mov
cld
sub
push
mul
mov
inc
adc
arpl
pop
pop
push
dec
inc
imul
ja
add
out
or
jmp
sti
enter
add
and
int3
push
jl
mov
cmc
in
xchg
adc
data16
jbe
test
or
pop
fidivr
fimul
dec
and
daa
cmps
mov
adc
inc
adc
adc
jl
pop
icebp
sub
jp
mov
add
inc
push
jnp
ja
xor
fwait
jmp
stos
xor
enter
and
call
push
or
pushw
mov
daa
inc
cmp
dec
in
mov
mov
in
repnz
jno
sbb
cli
push
sti
xchg
push
in
xchg
into
loop
in
inc
push
inc
push
out
(bad)
shl
mul
in
std
loope
scas
aam
jle
fscale
xor
repz
or
stc
or
mov
adc
jno
pusha
push
sbb
sub
cmps
mov
sbb
outs
in
jmp
inc
(bad)
outs
pop
adc
ins
add
push
popa
call
sbb
loopne
mov
test
repnz
fsub
data16
addr16
pop
jo
mov
bound
into
mov
mov
add
pusha
out
cmp
(bad)
fisub
mov
cmp
dec
and
dec
mov
into
and
imul
cmp
xor
cmp
sub
push
jmp
jmp
pop
xchg
loope
pop
pop
mov
xlat
mov
test
sub
jmp
mov
mov
(bad)
cmp
jne
jg
sbb
jge
pushf
ror
mov
jns
push
stc
pusha
mov
mov
repnz
add
cli
aad
aas
(bad)
je
out
mov
jnp
ds
in
mov
jns
je
sub
jecxz
xchg
outs
inc
jge
cmp
stos
xchg
and
js
ds
pop
fstp
arpl
sub
push
and
shl
push
(bad)
mov
pop
xor
sbb
push
mov
dec
sbb
push
cmps
mov
jne
xlat
push
movs
dec
ins
mov
dec
js
(bad)
in
rcr
or
jb
pusha
mov
movs
out
add
lods
mov
(bad)
stos
and
xchg
adc
aaa
ins
std
mov
sub
and
mov
imul
mov
enter
ja
aaa
jecxz
scas
mov
xor
leave
mov
sbb
movs
cs
nop
jge
fisttp
shl
js
lock
sub
dec
sbb
leave
outs
inc
fs
jae
in
enter
les
scas
test
into
fidivr
ja
out
fcmovu
jge
bound
push
or
nop
repz
sub
nop
mov
call
sub
pop
retf
icebp
cmp
ins
push
mov
fld
inc
je
dec
in
xchg
mov
mov
mov
adc
lods
loop
mov
jns
outs
out
je
inc
test
fdivr
enter
out
adc
mov
std
(bad)
lods
lods
ds
shl
into
sbb
lods
in
pop
aaa
jp
xchg
js
int
in
jno
popf
test
sbb
cmp
inc
dec
cwde
inc
mov
xor
pop
pop
push
gs
lods
fcos
mov
pop
frstor
jecxz
cdq
pop
xchg
dec
sbb
xlat
out
in
inc
push
pop
(bad)
mov
jg
pop
cmp
and
push
xchg
mov
dec
ja
dec
mov
stos
(bad)
sub
sub
jge
mov
xor
xchg
nop
stc
clc
jmp
out
icebp
out
inc
mov
mov
pop
nop
mov
adc
mov
push
sbb
rol
cmp
mov
mov
push
mov
arpl
arpl
fistp
xchg
mov
cld
fs
int
fsub
fistp
add
xchg
dec
mov
dec
inc
inc
and
adc
dec
cli
imul
mov
cmp
cmp
les
or
dec
call
(bad)
out
gs
sub
sti
sbb
jp
dec
push
stos
jo
adc
push
adc
push
push
(bad)
jnp
dec
mov
fs
pop
(bad)
imul
js
cmp
outs
fisttp
cdq
xlat
in
test
enter
cmp
dec
ins
inc
xchg
xchg
mov
sub
test
fcmovne
pop
push
cwde
adc
push
in
add
leave
cs
jle
pop
pop
rcr
gs
jl
dec
inc
aad
jecxz
xchg
mov
fdiv
lods
lahf
jb
mov
clc
adc
es
mov
loope
add
push
xchg
pop
push
xchg
pop
sub
mov
ja
jmp
cmp
push
xor
pusha
dec
std
je
hlt
add
fimul
adc
fwait
jo
mov
imul
push
xchg
pusha
sub
add
mov
push
or
mov
ret
retf
popf
sti
test
jg
in
xor
or
jae
test
xor
ins
(bad)
xchg
bswap
stc
mov
add
mov
(bad)
aaa
fisubr
mov
ret
inc
fld
xchg
dec
xor
pop
movs
sub
jmp
sar
retf
in
out
fisttp
mov
sbb
push
mov
ss
jp
adc
lds
nop
je
jle
and
adc
(bad)
or
sar
mov
(bad)
(bad)
or
jns
rcr
add
out
jo
mov
or
jae
push
mov
and
dec
xchg
js
inc
ret
int3
jp
(bad)
loop
ins
push
sbb
fistp
xchg
data16
icebp
mov
inc
data16
jmp
loope
fild
enter
mov
stos
xor
mov
fmulp
ds
shl
dec
aas
mov
cld
mov
ss
mov
ja
dec
sti
pop
add
or
rcr
shl
rol
gs
popa
out
call
mov
or
push
cmp
xchg
inc
mov
pop
icebp
ret
mov
inc
int3
pop
cmps
adc
jl
sbb
dec
in
dec
lahf
mov
shl
(bad)
rol
sti
push
and
mov
mov
xor
(bad)
aaa
pop
mov
nop
dec
rol
lds
sbb
sahf
push
jae
mov
arpl
out
xchg
jo
js
push
sahf
dec
movs
xor
test
dec
hlt
push
int3
imul
xchg
enter
rcl
pop
jge
fcomp
bound
ret
jle
out
in
js
sti
into
xor
dec
xlat
lahf
fstp
loop
sub
adc
sub
lea
xor
inc
lahf
repz
push
test
loop
push
mov
(bad)
sub
pushf
fld
fsub
add
mov
cmp
pop
lods
fist
mov
test
pop
cmp
outs
cmp
mov
outs
pop
add
push
jle
cmp
iret
(bad)
cmc
pop
mov
test
inc
jle
mov
ins
inc
call
jl
aaa
push
loope
inc
push
les
mov
dec
addr16
xor
dec
lds
xor
cdq
inc
sub
ins
out
inc
mov
inc
push
push
and
mov
sahf
stc
dec
stos
mov
lds
call
ret
jnp
pop
pusha
add
pop
jno
lods
movs
and
test
clc
jge
adc
add
fwait
jmp
xlat
ds
mov
cmp
push
retf
jns
ret
fdivr
cmp
clc
jnp
shl
add
lods
imul
retf
out
or
dec
lahf
stos
jg
mov
jns
loopne
les
pushf
(bad)
imul
call
xchg
sub
cmc
xor
and
test
gs
not
popa
in
loop
inc
push
xor
sbb
ins
xchg
nop
cmp
lea
fwait
lea
mov
adc
cmp
nop
or
sbb
sbb
inc
std
cmp
inc
bound
xchg
fisubr
(bad)
push
fsubp
arpl
sbb
mov
inc
in
jno
(bad)
mov
jp
fild
(bad)
push
loope
pop
lods
loope
add
(bad)
fstp
out
xlat
out
bswap
scas
xor
(bad)
sub
mov
test
inc
mov
cwde
(bad)
xor
mov
push
jo
xor
push
push
xor
js
xchg
in
call
xor
lods
add
push
push
gs
mov
popa
hlt
les
pop
(bad)
cmc
jno
punpcklbw
cmps
loope
mov
pop
dec
out
call
in
push
lahf
cmp
clc
xchg
fistp
inc
div
add
mov
xchg
xor
jnp
not
inc
dec
sbb
xlat
sti
clc
jmp
add
fnsave
in
pushf
movs
enter
nop
out
fst
jg
nop
lods
shr
dec
xchg
test
xchg
jg
lods
ret
jp
sub
sbb
out
pop
int
xchg
inc
inc
test
cmc
repnz
dec
std
or
add
jmp
xor
mov
or
inc
jmp
mov
movs
(bad)
mov
jne
xchg
outs
xor
dec
cs
jge
xchg
mov
push
loop
lock
stos
(bad)
mov
pop
les
idiv
bound
int
std
adc
repz
shl
ins
jle
jmp
cmps
retf
push
jge
ror
or
fnsave
popf
outs
repz
lds
inc
(bad)
and
outs
shl
repz
lahf
in
(bad)
out
adc
movs
dec
icebp
pop
addr16
jno
scas
iret
sub
leave
neg
push
pop
lea
repnz
sub
test
pushf
stos
jle
sahf
loopne
imul
rcr
adc
mov
call
xor
mov
and
pop
sub
inc
popa
addr16
popa
xchg
test
sbb
jne
cmp
in
pushf
dec
pop
lea
mov
xchg
dec
jnp
fidiv
rcl
push
retf
mov
imul
lahf
push
out
lea
(bad)
mov
out
push
xchg
int
sub
and
pop
pop
sti
xchg
jp
inc
enter
mov
arpl
retf
daa
es
jp
xchg
inc
es
loope
xchg
leave
es
lahf
in
pop
xor
rcl
les
xchg
sub
out
js
mov
stos
rcl
in
mov
cmp
shl
xchg
inc
push
push
ins
jae
hlt
repz
cmp
pop
sar
test
inc
cmp
sbb
mov
xchg
jmp
imul
fcomip
fimul
and
mov
sahf
jge
pop
cld
into
in
and
mov
mov
aam
bound
sub
mov
adc
imul
into
inc
add
jge
std
stc
mov
mov
xor
imul
(bad)
out
sbb
fcmove
ret
inc
mov
adc
push
in
cmp
movs
outs
push
xchg
pop
sub
xchg
add
out
movs
or
dec
out
iret
xor
gs
imul
(bad)
push
adc
jle
cmp
mov
sbb
repnz
and
fldenv
imul
sub
ins
jns
mov
aas
test
lea
and
xchg
das
leave
(bad)
std
cwde
and
sub
sub
(bad)
outs
loop
popf
cmp
or
in
inc
loop
jne
sub
mov
cmps
hlt
sbb
push
dec
push
push
ja
cmp
sub
mov
mov
pop
sar
add
and
sti
mov
push
mov
pop
pop
ja
repnz
fld
jge
or
add
push
push
pop
adc
push
pushf
test
inc
sahf
aaa
mov
inc
push
fisubr
and
test
cmps
cdq
and
ins
mov
xor
mov
add
out
ss
rol
add
push
inc
hlt
pop
jl
data16
mov
sbb
test
clc
data16
(bad)
add
cdq
faddp
inc
sbb
cli
jg
push
das
mov
in
shr
cmp
lock
pusha
in
fs
pop
add
mov
or
sbb
out
int3
xchg
cwde
adc
cmps
jae
cmp
pop
or
daa
cmps
pop
cmp
or
imul
scas
or
ins
xchg
xchg
cdq
xchg
(bad)
retf
dec
inc
xchg
jno
mov
movs
jecxz
clc
pop
and
inc
jns
(bad)
cmp
(bad)
mov
pusha
push
fs
xor
stos
(bad)
popf
or
mov
retf
retf
dec
xlat
mov
(bad)
pop
xor
stc
xor
test
xlat
jl
push
(bad)
or
gs
cmp
xor
and
adc
out
clc
gs
mov
cld
adc
das
pop
jl
pop
shl
hlt
enter
inc
test
ds
inc
ror
pushf
gs
cmc
or
out
sbb
sbb
jle
adc
fsub
or
les
pop
stc
mov
(bad)
pop
outs
sub
scas
test
dec
push
test
shl
stos
sbb
ret
daa
shl
push
cmps
fistp
jns
mov
mov
js
out
push
test
mov
xchg
in
imul
cmp
int3
jno
push
pop
call
lds
xchg
and
cmp
sbb
outs
and
push
inc
std
mov
cmp
sub
jno
ja
stc
outs
scas
adc
or
cmp
nop
mov
adc
sbb
dec
loopne
sbb
mov
lods
adc
pop
int3
inc
pop
xchg
js
dec
sub
sti
fs
mov
(bad)
std
adc
(bad)
adc
js
outs
out
in
int
jae
stc
dec
sub
(bad)
adc
ror
push
mov
outs
repnz
in
scas
nop
cmc
and
dec
adc
sar
(bad)
add
rep
jbe
stc
sahf
and
jl
addr16
dec
sbb
call
in
aam
or
fcom
sub
or
jmp
addr16
xchg
stos
jl
in
nop
push
sub
int
mov
cmps
mov
aam
mov
or
pop
mov
xchg
in
or
add
out
data16
mov
fs
call
lods
es
gs
js
lods
mov
jns
or
and
call
xchg
adc
jns
in
push
pop
xor
std
js
push
inc
add
mov
cmp
mov
jg
sub
fnstsw
lods
push
mov
sub
ficomp
xor
in
pop
jl
fcom
mov
inc
sbb
loop
ds
das
(bad)
(bad)
popa
cmp
sub
lods
sub
adc
push
adc
adc
adc
mov
(bad)
in
xchg
outs
jnp
sbb
das
int3
sub
xor
or
ds
ret
lods
xchg
aas
ret
stos
push
ret
out
mov
fimul
sub
push
(bad)
jmp
into
push
lds
f2xm1
sbb
push
mov
outs
mov
adc
adc
mov
pop
enter
mov
push
movs
inc
inc
inc
mov
xchg
or
adc
fnsave
xor
xor
push
cld
mov
in
outs
push
inc
xor
rol
xor
cmp
or
bound
out
add
cmp
inc
imul
jne
jle
movs
mov
and
push
mov
push
fld
repz
stos
sub
dec
adc
or
test
fstp
repz
mov
add
dec
mov
cdq
mov
and
mov
rol
mov
rcl
stc
loopne
jecxz
mov
jle
out
lock
out
cld
int3
hlt
mov
sbb
push
push
inc
and
test
iret
inc
ret
mov
pop
sub
pop
inc
push
jne
loop
lahf
mov
shr
ins
dec
pusha
mov
jle
fs
je
addr16
stc
std
dec
jmp
mov
(bad)
icebp
call
cwde
lea
push
mov
xchg
adc
nop
inc
mov
loope
xor
xor
out
xor
in
mov
inc
gs
xlat
pop
aas
in
sub
stc
pop
mov
fsubr
and
push
shl
and
or
add
cld
or
sub
mov
movs
push
sbb
(bad)
js
push
add
inc
hlt
repnz
retf
and
and
xor
lahf
cmp
push
pushf
pop
adc
ds
test
mov
sbb
cs
ins
mov
iret
mov
imul
fidiv
cmp
ss
inc
(bad)
outs
popa
int
push
scas
in
repz
fcomp
sbb
sbb
out
bound
sar
jae
in
inc
mov
nop
mov
push
idiv
fadd
je
cmc
or
push
mov
push
fst
add
fidiv
gs
ins
dec
movs
sbb
sti
imul
out
adc
jp
pop
pop
push
xor
xchg
lock
outs
fisttp
pop
gs
pop
add
and
dec
and
mov
xor
sub
mov
push
mov
mov
rcl
mov
add
cmp
adc
stos
ss
mov
inc
adc
call
inc
js
ins
shl
stc
jne
scas
mov
sbb
sbb
stos
ficom
fwait
adc
call
dec
sub
cmc
loope
fiadd
or
mul
ret
shld
add
sub
test
popa
(bad)
(bad)
add
xchg
mov
push
cmp
aaa
addr16
or
fwait
sar
or
pop
jg
scas
out
and
fldenv
es
xchg
add
bnd
pop
in
in
outs
aad
mov
retf
xor
outs
or
leave
scas
jmp
daa
aas
xchg
in
inc
jae
aad
inc
lods
add
mov
push
lods
fsub
aas
mov
dec
pop
lods
push
xor
cmps
loope
add
jo
sbb
sbb
push
sbb
fs
adc
outs
pop
sbb
inc
push
or
hlt
pop
add
fs
pop
cld
mov
mov
mov
popf
call
popw
jge
int
pusha
stc
and
mov
pop
outs
pop
and
aaa
cli
adc
adc
data16
mov
sar
mov
pop
pop
imul
xchg
dec
mov
xor
mov
and
cmp
stos
sbb
ja
das
mov
xor
lds
mov
iret
dec
or
popa
repnz
jns
fdecstp
call
mov
and
jecxz
(bad)
xchg
inc
sub
mov
or
lods
or
add
fs
pop
(bad)
xor
mov
jb
xchg
push
lds
ret
push
and
mov
ins
dec
ret
cmc
stos
adc
push
jle
xor
mov
adc
or
and
pop
jp
pop
sahf
sar
sbb
aam
dec
add
rcr
and
in
cmps
mov
pop
nop
inc
cmps
and
mov
call
and
mov
clc
in
fwait
jb
pop
push
test
pop
push
jecxz
push
xchg
sub
mov
add
mov
sub
mov
hlt
clc
fcom
scas
ds
cmp
loope
sub
pop
mov
sbb
pop
jg
or
add
clc
pop
push
xchg
sbb
mov
mov
movs
aaa
gs
jge
ds
cmp
(bad)
arpl
and
pop
or
pop
mov
or
mov
mov
idiv
sub
daa
push
ss
inc
inc
stos
ret
push
cmp
mov
andps
in
cmps
js
mov
(bad)
dec
aas
mov
jge
push
jg
mov
pop
fwait
ds
es
jbe
jmp
xlat
sar
(bad)
mov
and
xor
sub
stc
jne
xchg
cmp
push
fisubr
sub
cs
inc
fmul
mov
cmp
(bad)
add
xlat
test
lods
hlt
jns
int3
pushf
ins
das
xchg
into
(bad)
jmp
pop
inc
retf
mov
adc
inc
lock
dec
jae
xchg
pop
mov
(bad)
cmp
jae
and
xchg
push
rcr
cld
add
aad
sar
fs
gs
lea
jb
or
data16
cli
aas
fiadd
sti
mov
iret
and
mov
inc
xor
add
and
scas
xchg
or
cmp
out
mov
sbb
cmps
fisttp
cmp
mov
pop
in
imul
dec
and
pop
outs
int
sub
jl
and
movs
and
lea
out
aas
jno
call
xchg
mov
fs
inc
(bad)
xor
dec
jmp
and
(bad)
mov
imul
xchg
and
and
add
das
js
mov
xchg
idiv
int3
das
sub
adc
mov
mov
dec
jmp
jne
add
or
sbb
or
xchg
hlt
push
inc
add
stos
fstp
call
mov
add
adc
daa
in
in
xchg
loope
jbe
and
(bad)
in
cmp
and
cmp
test
leave
jmp
fsubr
xchg
retf
es
cmp
pushf
push
stc
dec
add
push
clc
ror
inc
mov
ror
jp
and
or
sub
adc
lock
or
test
jmp
daa
fwait
inc
sbb
in
(bad)
xchg
mov
ret
retf
lahf
and
cs
out
call
sbb
jno
mov
icebp
mov
fnstenv
jecxz
or
mov
lods
in
jecxz
xor
cmps
mov
jecxz
lods
inc
fcmovne
popa
sti
or
out
seta
repz
dec
xchg
xchg
pop
lds
dec
lds
(bad)
(bad)
jmp
dec
scas
mov
mov
loop
sbb
mov
movs
push
xor
and
xchg
jbe
cmp
add
ret
push
dec
loop
pop
cmp
daa
fs
bound
cli
adc
frstor
or
pushf
pop
inc
scas
lds
in
mov
cld
jae
cmps
add
push
and
adc
ins
cwde
ja
cmps
sbb
mov
mov
xchg
lods
test
cmp
push
movnti
sub
inc
scas
add
ja
xchg
ins
rcr
fisttp
outs
dec
push
pop
mov
arpl
mov
sbb
xchg
push
xchg
out
mov
inc
inc
cwde
jmp
dec
cdq
adc
jne
daa
xchg
imul
push
(bad)
addr16
add
fwait
push
out
int
push
rcl
inc
jecxz
pop
lahf
adc
pop
popa
xor
addr16
call
(bad)
fst
(bad)
jae
popa
pop
imul
je
mov
int3
pop
jno
mov
int3
mov
aad
repz
or
(bad)
or
and
and
or
js
repz
rcl
mov
mov
add
in
mov
adc
push
retf
jns
cwde
push
or
push
pusha
adc
mov
or
and
sbb
enter
xor
es
in
ins
jmp
mov
add
in
pop
jns
ds
and
adc
stos
ins
test
push
add
in
aas
arpl
daa
(bad)
sbb
sti
mov
cmp
jl
adc
mov
ja
xor
gs
push
stos
cli
mov
ins
push
add
dec
vshufps
and
cmp
and
aaa
push
adc
jl
or
int3
mov
js
mov
adc
add
push
jle
cdq
adc
fdivr
lea
mov
or
sbb
mov
lods
test
and
cld
fwait
xor
mov
sub
les
jg
cmps
out
adc
ins
dec
and
mov
push
daa
dec
dec
pop
cld
test
mov
and
jo
xchg
cmp
(bad)
stc
lds
sbb
lods
cli
test
cdq
cmps
dec
xor
in
push
and
sbb
xchg
pop
das
scas
(bad)
cmp
imul
addr16
or
dec
aad
and
pop
(bad)
xor
adc
xchg
and
jbe
pop
xor
ret
ss
and
test
iret
xlat
inc
data16
popf
cli
mov
test
sbb
(bad)
mov
pop
in
call
lock
adc
cmps
aas
jge
cmps
imul
in
xor
push
cmp
lds
loop
dec
xchg
(bad)
hlt
test
pop
cdq
xchg
dec
movs
pop
les
mov
(bad)
jecxz
mov
ins
jbe
lods
sbb
test
sub
jae
push
test
rol
stos
dec
pop
hlt
xor
test
je
(bad)
in
xchg
jle
push
repnz
pop
push
pusha
adc
cmp
mov
mov
xor
cmp
cmps
and
push
push
push
jg
test
aas
fisttp
call
pop
cmp
aad
inc
retf
outs
xchg
bound
mov
les
sub
jle
mov
imul
loop
add
xchg
retf
cmp
inc
push
repnz
cli
mov
xchg
ret
bound
xchg
stos
mov
fst
mov
cmp
inc
loop
outs
push
cmp
sbb
adc
and
aam
test
jl
or
enter
bound
inc
pushf
adc
mov
dec
xchg
not
sub
push
dec
idiv
pop
pop
test
or
stc
sub
jmp
js
jmp
cli
dec
in
pop
cs
cld
mov
jmp
les
dec
addr16
lea
out
mov
ins
xor
cmc
mov
stc
push
jle
clc
ret
cdq
xchg
cli
fs
stc
mov
and
ins
neg
xor
and
iret
pop
xor
je
push
int
mov
jle
cmp
lods
mov
pushf
sbb
pop
pop
ja
mov
popa
or
sub
gs
sar
out
sub
cmps
mov
sub
dec
xchg
add
pop
out
pop
int
jae
adc
lea
inc
push
push
pop
sub
ds
mov
cmps
mov
inc
pop
bound
push
push
fisttp
lahf
dec
shl
sbb
and
push
sub
inc
mov
rcl
outs
jl
sbb
gs
push
add
cmp
out
js
adc
lea
vpextrw
lds
or
xchg
and
rcl
mov
cmp
jae
nop
sbb
push
mov
aam
aas
inc
les
jle
cmp
cmp
lods
es
mov
imul
(bad)
and
mov
jle
in
dec
add
aad
mov
and
mov
pop
cmc
imul
es
je
mov
inc
inc
push
movs
mov
nop
mov
pop
inc
pop
sub
popa
test
and
call
jg
jns
sbb
js
int
aad
sahf
xor
jbe
push
pop
fs
cdq
sbb
in
out
aad
cmp
in
push
jns
aas
cmps
jecxz
loope
cmp
or
cmp
xchg
das
sub
lock
aaa
(bad)
and
mov
pop
jnp
stos
pop
push
(bad)
push
mov
or
movs
jne
cwde
add
pushf
push
mov
leave
outs
push
mov
ins
mov
pop
mov
jmp
cwde
loope
shr
movsx
je
pop
(bad)
xor
or
add
jle
jmp
pushf
push
inc
lahf
push
ins
jmp
sub
xor
(bad)
cld
std
inc
sub
sub
mov
add
mov
xchg
ja
adc
or
enter
push
mov
iret
jg
or
sar
imul
into
cmp
call
lock
xor
repnz
movs
sar
inc
test
sbb
pop
fisttp
jo
push
ret
icebp
call
scas
(bad)
push
cs
adc
xchg
push
mov
repz
cmc
dec
(bad)
out
jmp
or
mov
and
jo
imul
leave
fild
sub
in
mov
push
push
dec
arpl
into
pop
pop
addr16
push
retf
jne
inc
mov
or
mov
test
bswap
test
sub
pusha
xor
add
fsub
repz
adc
call
ficomp
jmp
add
add
ror
jnp
ds
xor
sub
push
inc
lea
jo
dec
adc
mov
retf
mov
or
outs
pop
or
push
addr16
out
push
push
jns
inc
add
mov
or
lds
mov
inc
xchg
cmp
cmp
mov
retf
adc
add
or
inc
cmp
mul
pop
adc
add
cmps
gs
in
fs
jbe
cs
sbb
popf
shl
jo
(bad)
dec
or
push
in
popa
pop
movs
icebp
dec
inc
mov
fmul
inc
int3
xchg
scas
jae
sbb
mov
fwait
or
cmp
fcos
sbb
rcl
jnp
dec
add
adc
rcl
cli
sbb
stc
(bad)
cdq
mov
and
stc
xor
jp
mov
aaa
dec
fsubp
into
mov
test
cmp
mov
jno
inc
pop
movs
mov
sbb
pop
pop
cmp
pop
outs
ror
add
cld
aaa
and
out
pusha
mov
int3
call
loopne
push
push
cmp
xchg
popf
ror
cwde
pop
push
mov
outs
mov
jg
sub
or
jns
add
mov
out
ficom
loopne
and
nop
clc
stos
cmp
fild
movs
push
dec
mov
loopne
dec
inc
das
and
dec
popa
(bad)
jmp
pop
add
mov
mov
aas
xor
lods
out
xchg
sub
outs
std
pop
push
retf
mov
repnz
loop
sub
cmp
inc
loopne
mov
aaa
jmp
pop
ja
in
(bad)
pop
loopne
pop
jge
push
push
adc
or
inc
in
gs
scas
mov
sub
test
inc
in
mov
in
les
ds
das
push
inc
mov
(bad)
cmp
idiv
pusha
(bad)
enter
pop
cmp
xchg
pop
test
out
lock
mov
sub
cmp
xor
popf
sti
adc
pushf
pop
jns
les
dec
int
xor
fidiv
or
(bad)
cld
into
xchg
jl
sbb
and
dec
pop
fstp
or
pushf
cmc
(bad)
and
sbb
sub
add
retf
fwait
jge
push
push
sbb
iret
dec
int3
add
mov
xchg
iret
xchg
mov
hlt
xchg
(bad)
mov
(bad)
push
mov
xlat
sbb
enter
aam
(bad)
cmc
cmps
adc
outs
call
rol
js
mov
outs
pop
mov
add
mov
js
sub
xchg
mov
xchg
xor
or
sub
sbb
(bad)
es
dec
std
xchg
sbb
mov
lahf
pop
(bad)
addr16
dec
inc
jnp
ds
fisubr
pop
xchg
dec
cmp
inc
dec
(bad)
xor
push
into
sbb
sti
outs
jmp
pop
mov
leave
inc
xor
jae
push
push
(bad)
mov
push
sbb
fcomip
push
push
int
stos
mov
or
loop
sbb
sti
sbb
pop
aas
cmp
dec
mov
xchg
es
jo
or
iret
(bad)
xchg
xor
mov
pop
push
pop
xchg
mov
cmc
stc
iret
mov
and
call
out
push
inc
add
jb
je
in
and
push
push
hlt
call
xchg
mov
pop
jb
(bad)
sbb
pop
imul
out
imul
and
dec
mov
in
sub
xor
xor
lods
inc
retf
dec
stos
pop
(bad)
mov
xor
and
pop
aad
ja
xor
movs
mov
xor
stc
neg
xor
dec
and
add
sub
cmps
xchg
scas
les
push
sub
jmp
lahf
xchg
and
push
or
sub
xor
in
mov
pop
mov
popa
fild
fist
call
sbb
dec
and
stos
test
mov
iret
aad
nop
pop
js
std
push
inc
mov
fmul
popf
xchg
ja
pop
cmps
scas
out
std
movs
cmc
data16
ds
(bad)
sub
lds
test
mov
call
xor
mov
stos
fs
xchg
jno
add
test
mov
cli
sbb
pusha
dec
sar
jns
cmp
cdq
aam
inc
xor
fnsave
jg
ror
xchg
mov
sar
test
mov
sub
dec
test
lahf
mov
rol
inc
aas
out
es
adc
xchg
xchg
xor
aas
mov
push
gs
and
shl
dec
fbld
sbb
fild
mov
cmp
pushf
sub
hlt
sbb
outs
jmp
add
mov
inc
cld
fld
sahf
mov
jg
adc
sbb
in
jl
sahf
rcr
or
or
popa
vandps
std
add
add
sub
test
pop
adc
or
xchg
push
adc
sti
std
movs
mov
cmc
mov
imul
shr
dec
push
dec
into
pop
daa
fld
or
sub
inc
push
(bad)
ss
jge
jmp
add
inc
aad
jmp
pmovmskb
sub
jp
add
xor
lahf
dec
push
enter
(bad)
push
les
scas
lods
(bad)
cmp
mov
mov
push
xor
mov
xchg
pop
adc
movs
xchg
ins
pop
mov
xlat
loop
or
push
(bad)
into
adc
mov
and
xor
mov
push
dec
sub
or
add
pop
adc
inc
pop
and
mov
jno
ja
rcr
aad
stos
or
jae
pushf
sub
in
loop
je
call
dec
xchg
xor
push
mov
cmps
in
sub
jb
jmp
int3
enter
cmps
rol
xchg
jmp
sub
xchg
fstp
stos
ins
inc
sub
neg
jge
(bad)
arpl
push
in
jecxz
ficom
mov
and
ret
mov
out
inc
inc
repnz
ja
sbb
(bad)
mov
push
or
mov
push
(bad)
adc
call
(bad)
cmp
loope
jns
push
imul
mov
pop
imul
adc
call
int
(bad)
sub
call
ins
cmc
add
push
add
inc
fmul
mov
add
ss
inc
xchg
inc
xchg
and
lgs
jp
mov
data16
stc
pop
ficomp
je
into
inc
imul
adc
cdq
aas
xor
ret
jbe
out
jp
jmp
fucom
cmps
and
or
lea
xchg
and
mov
dec
icebp
call
les
test
jb
loope
mov
loope
es
push
xor
jge
aas
jmp
shr
loop
clc
mov
mov
dec
xchg
shl
mov
rol
xchg
pop
int3
mov
pcmpgtb
shr
sub
test
fisubr
cmp
fstp
ja
inc
pop
cdq
and
mov
outs
mov
mov
jne
outs
inc
jl
sbb
enter
dec
retf
sbb
lods
pop
arpl
out
(bad)
xor
push
mov
sub
movs
mov
mov
repnz
cmp
adc
loop
movs
out
mov
sub
sbb
jmp
pop
jns
push
cmp
jbe
hlt
inc
scas
enter
mov
stc
test
(bad)
call
inc
pop
push
ja
xor
cdq
mov
les
push
shl
mov
add
push
or
sar
lds
retf
js
xor
sub
inc
call
(bad)
(bad)
mov
cmps
ret
xor
mov
push
les
ds
cdq
mov
cmp
mov
push
test
stos
stos
jp
(bad)
jae
sbb
ss
add
and
add
jne
pop
sbb
add
sub
sub
sbb
enter
cld
xor
rol
sbb
cdq
jns
sub
add
lds
ds
lods
and
inc
outs
mov
adc
mov
jecxz
xor
cwde
push
pop
jmp
sahf
pop
sbb
sub
fadd
xchg
jmp
inc
push
mov
enter
das
shl
cmp
mov
mov
shr
and
jl
(bad)
fdiv
jns
das
test
inc
sbb
xor
das
sub
rcl
xor
and
gs
into
xor
hlt
gs
addr16
(bad)
fstp
dec
dec
cmp
cmp
sbb
cmp
jns
inc
fcom
clc
je
and
add
(bad)
and
sar
jmp
leave
data16
test
ficomp
push
cmp
mov
xor
jecxz
cld
xchg
test
pavgb
movs
push
xchg
ret
int
dec
gs
dec
push
mov
and
dec
jnp
xchg
pop
xchg
call
mov
jne
or
loope
mov
sbb
jle
jmp
add
pop
mov
mov
push
loop
and
mov
mov
mov
cmp
lods
jg
pop
cld
inc
jle
mov
jge
and
mov
push
loope
std
sti
push
adc
fadd
jne
rol
gs
cmps
xchg
arpl
movs
call
leave
jmp
mov
and
push
movs
add
push
or
hlt
add
pushf
into
or
cdq
sbb
sbb
mov
stos
cmps
data16
in
nop
or
jecxz
mov
xor
popa
rcr
adc
nop
push
imul
fninit
in
xchg
or
fmul
jg
in
lock
sub
inc
mov
test
sahf
lahf
cmp
das
sbb
leave
add
xchg
into
iret
sub
adc
scas
adc
and
mov
dec
push
out
push
cwde
cmps
imul
aam
and
sub
call
out
mov
and
shl
(bad)
cli
push
mov
shl
sbb
jmp
dec
fisub
scas
sbb
inc
sbb
mov
(bad)
xchg
cmps
xchg
ret
push
xchg
sbb
jmp
xchg
sbb
inc
dec
daa
ror
and
push
fidiv
and
bound
mov
hlt
es
out
imul
hlt
fld
and
mov
(bad)
and
sbb
int
outs
cdq
fs
lahf
cdq
add
inc
cmp
adc
adc
leave
xchg
sbb
les
cmp
mov
add
mov
jbe
loopne
mov
mov
inc
dec
inc
mov
daa
jmp
push
and
or
pop
loopne
jl
mov
cmp
outs
jmp
sbb
loop
adc
call
adc
sub
popf
in
int
xchg
push
xchg
retf
push
cmp
or
sub
push
push
dec
adc
dec
xlat
rcr
or
mov
mov
pop
mov
sub
add
mov
out
mov
ja
dec
fnstenv
ss
loopne
inc
push
das
imul
push
add
dec
jp
mov
and
je
aam
xchg
adc
mov
cmp
test
push
lods
repz
xor
rol
les
cmp
adc
mov
and
pop
paddb
cmp
jno
arpl
jle
jb
cmp
or
out
add
pop
xor
scas
das
test
test
cmp
or
outs
inc
xor
xchg
push
or
push
add
imul
lods
das
ss
gs
imul
sahf
or
mov
xchg
mov
(bad)
xchg
jmp
data16
sbb
sub
jbe
shl
push
xor
icebp
and
adc
in
push
mov
jmp
pushf
aaa
movs
ins
sub
int3
repnz
ror
test
inc
dec
push
pop
(bad)
lods
mov
pop
cmps
ret
pusha
bound
pop
push
pop
or
icebp
out
mov
push
jg
sub
test
nop
or
into
fld
inc
not
test
stos
stos
adc
popa
pop
dec
aaa
xor
das
mov
out
clc
lock
das
cmps
xor
cld
or
(bad)
out
jl
mov
mov
cmp
in
cmc
cmp
cmp
lahf
push
sbb
adc
sub
int
lods
mov
mov
aas
rcl
cmc
test
mov
cmp
sub
add
gs
dec
fnstenv
mov
stos
mov
ins
pop
fld
(bad)
dec
inc
fisubr
xor
jg
or
ret
mov
push
fwait
loope
pop
sbb
mov
(bad)
fadd
inc
sbb
fist
mov
add
xor
mov
or
mov
and
shr
sbb
cmp
ret
xchg
jecxz
add
icebp
jmp
mov
mov
js
out
add
pop
and
adc
push
inc
inc
mov
movs
bound
inc
sar
sbb
cld
fst
mov
xchg
hlt
(bad)
pop
and
sub
mov
std
in
push
mov
mov
fist
mov
je
jb
add
or
stos
pop
xchg
test
call
ror
test
mov
sbb
aam
pop
jno
in
loope
jnp
mov
ror
cmp
mov
sbb
clc
and
sub
in
jge
aad
mov
jp
xor
sbb
mov
sub
loop
pmaxub
or
shr
mov
scas
ss
leave
cmp
push
mov
nop
fldcw
je
movs
rcr
dec
loopne
addr16
cmp
push
jbe
pushf
mov
mov
jecxz
movs
pop
imul
push
cdq
mov
hlt
add
(bad)
mov
leave
xchg
frstor
mov
jo
jecxz
dec
lds
inc
inc
mov
pop
jne
adc
mov
cmp
mov
cs
fst
sub
test
or
out
cmp
out
fst
adc
adc
push
and
add
sub
ja
movs
shr
sbb
jo
(bad)
test
(bad)
aas
mov
(bad)
scas
nop
sahf
xchg
loop
loope
xchg
sahf
inc
sbb
xchg
clc
mov
movs
pop
dec
xor
arpl
fist
std
cmc
pop
and
inc
adc
int3
stos
or
mov
jecxz
push
rcr
test
mov
test
jbe
dec
inc
dec
fcomp
dec
js
ret
outs
mov
xchg
mov
add
dec
push
dec
adc
jg
inc
sub
mov
ja
lock
iret
in
push
repz
fadd
add
or
jmp
push
sub
scas
pop
dec
(bad)
ret
loopne
adc
mov
in
dec
fsub
sub
jp
and
es
sbb
pop
(bad)
mul
inc
cmp
cwde
cld
dec
sub
adc
pop
xchg
out
jno
jg
js
adc
(bad)
dec
mov
cmc
and
rcl
xor
fiadd
aas
dec
pop
push
jns
sahf
mov
popa
das
lods
add
sbb
imul
xor
sub
punpckhwd
inc
loope
unpckhps
dec
add
xlat
push
aam
test
les
xlat
jne
frstor
inc
jmp
data16
jmp
xchg
bound
dec
div
xchg
fwait
jae
inc
fcom
jle
js
ds
sub
xor
shr
mov
inc
hlt
pop
mov
retf
jmp
mov
out
inc
mov
cs
repz
xor
and
push
push
inc
cmp
or
into
loope
mov
mov
loopne
fist
mov
push
xchg
push
(bad)
fidiv
push
xchg
in
ins
push
fs
cmp
aaa
dec
push
lock
shl
mov
inc
inc
pop
popf
cmp
sbb
jmp
stc
(bad)
enter
cmp
mov
aam
sbb
xlat
aas
xor
adc
mov
jbe
adc
loope
ss
mov
test
dec
sub
mov
outs
int3
dec
xor
inc
dec
adc
scas
pusha
fstp
cmps
je
adc
int
stos
stos
mov
out
dec
mov
inc
shl
dec
jmp
pop
mov
adc
lds
pop
mov
ret
mov
pop
mov
push
adc
sub
int3
mov
int3
aad
mov
jmp
dec
hlt
xor
ins
dec
iret
jbe
in
fwait
mov
into
je
xor
cmp
dec
leave
inc
push
aaa
lods
les
lahf
sbb
loop
cld
xchg
outs
jnp
mov
fidivr
xchg
lock
push
imul
ss
pop
dec
dec
daa
(bad)
mov
push
or
mov
loope
mov
aad
adc
movs
popf
in
in
mov
test
mov
cmp
bound
stos
mov
test
mov
lock
out
je
mov
(bad)
xchg
nop
xor
ds
repz
pushw
stos
push
mov
push
cmp
push
add
jb
push
jecxz
push
test
mov
xchg
in
adc
dec
leave
add
popa
lods
iret
mov
xchg
out
iret
xor
cmc
aam
push
push
sbb
loope
loop
je
cdq
lods
add
sub
sub
ror
and
lahf
cli
clc
xchg
sahf
popa
lock
movs
pop
(bad)
das
jns
xchg
or
test
push
into
pop
out
popf
mov
xor
xchg
ins
sub
nop
push
mov
ins
popa
jmp
addr16
or
xchg
xor
or
lahf
mov
popf
push
jecxz
sub
out
aam
inc
sbb
ret
mov
movzx
mov
(bad)
pop
fcomp
jne
sbb
loope
nop
jb
sahf
add
push
and
imul
icebp
adc
mov
or
jg
mov
mov
xchg
(bad)
pop
push
iret
fstp
cmps
out
addr16
cwde
or
mov
test
push
xor
pop
sbb
sbb
fdivr
mov
cld
sbb
pop
push
js
call
mov
inc
rcr
pop
mov
mov
jp
in
popa
in
lock
mov
fmulp
cmp
sbb
ins
clc
repnz
data16
(bad)
sahf
aad
fild
push
and
and
(bad)
cmp
les
loopne
sbb
mov
push
xchg
loop
pushf
test
(bad)
dec
adc
fisttp
inc
pop
mov
aas
pop
jno
retf
push
shr
das
push
aam
xor
dec
xchg
dec
fcom
jmp
pop
or
mov
into
addr16
cli
fistp
in
push
xchg
stos
jp
mov
mov
mov
adc
in
rol
imul
popa
js
mov
inc
dec
jb
push
cwde
adc
push
and
mov
inc
fs
sbb
nop
popf
or
adc
pop
imul
or
scas
lods
rep
aas
add
ds
adc
mov
jnp
lods
push
or
cmps
test
es
and
inc
add
pusha
sub
inc
je
inc
in
mov
in
push
addr16
or
int3
or
jae
adc
xlat
mov
cmps
sbb
icebp
mov
cld
jb
inc
(bad)
imul
cwde
(bad)
sbb
mov
or
fbstp
and
hlt
fist
jb
xchg
xchg
mov
in
and
mov
out
hlt
out
jnp
shl
inc
cmps
ins
pusha
mov
adc
add
sub
(bad)
cmp
adc
pop
fild
nop
loopne
cmp
fild
jmp
fcom
xor
cdq
xchg
in
mov
pop
ds
pop
sbb
cmp
push
inc
(bad)
(bad)
loope
jno
repnz
lahf
gs
dec
fs
add
pop
adc
or
add
mov
bound
loope
add
mov
mov
stos
in
pop
xlat
mov
push
mov
icebp
out
sub
cdq
and
sub
fdiv
cmps
movs
das
pop
ffree
and
mov
mov
xor
pop
ins
scas
and
cmps
jb
jl
ins
movntq
(bad)
and
retf
push
pop
mov
jo
cdq
in
push
mov
adc
addr16
cs
cmp
pop
inc
push
stc
lods
sub
inc
dec
fs
stos
mov
cs
jp
les
cmps
sahf
int3
push
shl
dec
clc
pop
push
jo
xor
push
push
imul
pop
pop
pop
pop
mov
jecxz
and
sub
sub
sbb
or
mov
mov
sbb
in
cmp
mov
xor
xor
test
rcr
xor
test
mov
mov
aad
xor
mov
pop
aaa
jae
pop
movs
repz
push
mov
lea
dec
push
in
cs
es
stos
lea
sub
mov
or
xchg
jmp
sub
adc
out
bound
and
cli
lahf
mov
and
push
repnz
sub
call
fistp
cli
fsub
int3
inc
jb
dec
arpl
mov
dec
out
add
mov
jmp
sahf
popf
fnstsw
ror
loop
std
movs
push
into
push
popf
cmp
pop
arpl
inc
imul
push
xor
push
dec
sahf
aas
xor
cmp
sbb
sbb
inc
dec
pop
(bad)
fisttp
fld
ja
inc
repz
(bad)
std
jo
jmp
xor
pushfw
ret
and
sbb
inc
jnp
mov
add
mov
je
ja
mov
fisubr
outs
cmps
mov
aas
div
mov
push
or
outs
or
lds
popf
xchg
pop
or
adc
cmp
js
(bad)
sbb
add
xchg
fidivr
cmp
shl
dec
cmp
add
inc
xchg
iret
jb
mov
pop
mov
rcl
xchg
out
mov
adc
out
mov
sub
fimul
scas
out
mov
and
aaa
push
lods
mov
int
je
outs
jne
mov
stc
lahf
loop
pop
inc
mov
jle
ja
inc
xchg
cmps
sbb
xor
in
lds
stos
or
aaa
(bad)
fst
in
rcr
dec
add
rol
cmp
(bad)
mov
popf
mov
cmp
xchg
ja
(bad)
pusha
inc
xchg
es
pusha
fld
jl
mov
nop
push
repz
xchg
push
xchg
shl
hlt
loopne
(bad)
add
mov
dec
lods
jg
xor
lds
inc
pop
push
xor
inc
ret
arpl
pushf
lods
fld
bnd
sbb
xchg
mov
xor
cli
jecxz
sbb
dec
and
lds
aad
pop
cmps
add
cld
(bad)
sahf
push
push
popa
push
mov
jnp
gs
shl
dec
cmc
jae
cmps
aad
mov
push
ins
retf
sub
inc
cwde
shl
pop
mov
iret
cmp
enter
sar
xchg
sub
data16
(bad)
fnstcw
call
scas
cmp
mov
jb
push
imul
add
mov
std
jmp
loope
mov
push
jecxz
jle
lock
mov
scas
cmc
push
stos
rcl
sbb
xchg
sbb
repz
and
mov
int
sbb
jge
mov
mov
mov
fs
inc
es
movs
and
movs
imul
sub
jbe
xchg
cmp
dec
ret
cmp
movs
int3
cmp
ror
xchg
sbb
mov
imul
jmp
mov
pop
inc
adc
(bad)
sub
jecxz
ins
leave
xchg
ds
add
pushf
retf
idiv
mov
xchg
fs
div
jmp
push
rep
sub
aad
imul
sub
pop
retf
xchg
imul
sbb
mov
fld
mov
fstp
cli
gs
mov
arpl
cld
cmp
inc
push
call
lods
aam
in
in
ins
cmp
pop
and
add
in
scas
xchg
mov
repz
(bad)
mov
cmps
jnp
cmp
in
adc
fimul
jbe
into
mov
jb
(bad)
out
cdq
jmp
push
movs
in
out
(bad)
dec
fld
(bad)
int3
pop
xor
jbe
rcr
imul
and
sub
ja
daa
aam
mov
cmp
adc
gs
jns
and
sub
imul
mov
int
aaa
cdq
add
sahf
leave
mov
lock
mov
clc
jno
hlt
push
arpl
ja
sub
xlat
or
in
popf
mov
add
jo
xchg
ret
jg
jo
xchg
js
ret
rol
das
std
mov
push
mov
add
sbb
adc
push
fst
mov
dec
out
push
ss
fdivr
cli
imul
(bad)
sar
mov
push
loope
pop
mov
xchg
mov
ret
jo
xor
movs
adc
bound
jno
aaa
pop
xor
js
jl
out
jno
dec
(bad)
xchg
aam
std
out
xchg
inc
cmps
test
mov
push
add
xlat
fild
push
adc
mov
call
mov
mov
jge
and
adc
cmp
ins
out
(bad)
push
rcr
inc
mov
inc
pusha
sub
aad
ja
push
xor
ror
dec
lea
test
sti
and
xchg
fisubr
cmps
and
loopne
movs
ins
test
mov
in
xor
js
xor
test
jne
inc
jne
and
inc
gs
push
jecxz
or
and
dec
jg
add
dec
vandnps
xchg
adc
sub
mov
mov
jno
push
into
inc
idiv
jl
mov
mov
(bad)
aad
mov
inc
dec
rcr
movs
mov
sbb
jmp
or
data16
fistp
pop
imul
adc
or
push
arpl
repnz
sbb
test
cmp
pop
and
cmp
push
retf
out
rcl
push
pop
push
test
stc
sbb
inc
or
inc
push
mov
popf
in
fwait
ins
movs
ins
std
pop
je
int
xchg
sub
retf
mov
inc
clc
sbb
(bad)
cmc
mov
push
test
fidivr
mov
or
retf
cmps
sbb
adc
sti
fucomi
in
inc
jb
pop
or
clc
sbb
enter
mov
in
sub
lock
mov
fcom
push
jo
inc
adc
cs
cld
scas
xchg
aam
ret
cmps
cs
fld
fst
cmp
jle
je
jg
push
jns
imul
push
movs
enter
push
les
inc
lods
push
popf
cdq
dec
adc
add
sbb
cmp
(bad)
je
aad
xor
out
je
cmp
xor
cmp
out
pop
sbb
shl
inc
mov
enter
inc
jmp
pop
stos
rol
rcl
adc
xor
sbb
(bad)
das
dec
mov
push
test
cmp
jmp
dec
repz
mov
lock
pop
cvtps2pd
xchg
aam
mov
int3
xor
jns
push
add
fld
(bad)
loope
inc
sub
add
xchg
into
gs
out
stos
rcl
xlat
ins
(bad)
dec
adc
not
and
mov
xor
std
lods
imul
sbb
xchg
adc
dec
ror
repnz
jmp
and
or
jb
sbb
and
mov
(bad)
jge
cld
mov
nop
xchg
outs
inc
sbb
cmps
call
sar
push
leave
xchg
ss
sbb
jbe
dec
push
pushf
dec
loopne
mov
adc
scas
adc
aam
and
das
push
arpl
dec
mov
jns
or
sbb
ret
nop
xchg
(bad)
shl
lock
pop
cmp
sub
les
int
lods
fist
xchg
or
mov
in
gs
or
sbb
clc
cmp
fs
inc
dec
sbb
retf
push
ret
xlat
cmp
(bad)
fstp
mov
mov
out
iret
xlat
mov
iret
xor
and
movs
call
xchg
int
pushf
xchg
jo
xchg
daa
mov
out
cmp
cmps
pop
adc
neg
or
das
mov
mov
int
inc
movs
sbb
mov
loop
jne
mov
or
jns
ins
in
sbb
mov
jne
add
popf
pop
xchg
aam
and
push
and
cmp
xchg
push
xor
aas
pop
(bad)
cmps
or
xlat
fstp
sbb
sub
ficom
scas
test
mov
xor
xor
xchg
cmp
(bad)
in
lock
lahf
mov
jb
jno
jle
loopne
pop
out
or
and
repz
mov
int3
add
xchg
add
scas
mov
fst
inc
addr16
sahf
(bad)
jl
lahf
xchg
inc
xor
mov
mov
lods
dec
fdiv
inc
pop
hlt
dec
and
pop
jmp
jb
dec
shl
hlt
out
enter
cmp
mov
das
add
ins
retf
repz
js
jbe
sahf
dec
push
and
hlt
in
dec
mov
mov
ss
jle
dec
daa
fwait
sbb
arpl
mov
mov
rcl
fiadd
enter
setle
and
in
push
jne
not
pop
and
inc
mov
dec
call
xchg
lods
popa
(bad)
repz
mov
cmp
xor
mov
frstor
sbb
dec
hlt
pop
mov
jle
mov
mov
xchg
pop
pop
mov
fisttp
and
cli
into
push
mov
and
adc
(bad)
int3
push
and
leave
dec
sub
add
pop
xchg
hlt
pop
std
pop
jp
ror
call
adc
cli
adc
inc
adc
(bad)
aam
sahf
pop
cmp
cmp
sahf
sbb
fneni(8087
gs
mov
pop
movs
dec
xor
inc
inc
fwait
lahf
mov
inc
rol
mov
pop
pusha
and
popf
push
sbb
ds
lahf
pop
lahf
push
jns
(bad)
push
out
ds
fwait
inc
sub
ret
jmp
adc
test
leave
lahf
out
test
jp
jecxz
sbb
xchg
mov
add
inc
lds
xchg
adc
ret
movs
jo
test
jmp
or
mov
pop
into
cs
push
bound
call
imul
out
sbb
dec
mov
xor
cmp
sub
cmp
dec
dec
mov
mov
add
xchg
icebp
push
lods
ret
stc
sub
mov
leave
mov
outs
fld
scas
(bad)
pop
arpl
je
pop
mov
cmp
in
inc
sub
mov
sbb
inc
cmp
jb
jbe
and
mov
enter
dec
mov
xchg
inc
scas
xchg
clc
jl
mov
movs
xchg
ret
mov
cld
mov
fdivr
pop
inc
sbb
sbb
aas
mov
enter
dec
inc
mov
sbb
xor
adc
sub
adc
fs
out
sub
ds
push
shr
sar
sub
gs
lock
imul
adc
fstp
stos
add
inc
mov
gs
or
xor
out
xchg
ja
jp
test
out
mov
stc
out
ret
out
jge
ins
or
test
xchg
stos
mov
mov
mov
pop
jg
sub
je
retf
and
and
lds
cs
mov
lock
fisttp
pushf
add
inc
cmps
cmp
dec
and
xor
mov
data16
pushf
shl
pop
out
and
sub
gs
lods
dec
mov
ins
mov
xlat
out
dec
call
sbb
xor
jp
sub
fcom
lds
fidiv
xor
rcr
shl
shr
and
sbb
inc
loopne
mov
inc
retf
test
bound
cli
fist
push
mov
and
xlat
cmp
push
pop
jmp
pop
sub
inc
mov
rcl
mov
mov
imul
xor
fisubr
xor
push
jecxz
or
shr
outs
add
nop
xbegin
imul
mov
sar
cmp
pushf
lea
lds
cmp
dec
pop
retf
inc
mov
jp
xor
dec
adc
scas
stos
jmp
test
movs
inc
add
jnp
dec
or
or
jl
pushf
push
cmp
cld
push
xor
xor
adc
test
and
test
shl
and
pop
and
sub
arpl
add
and
cmps
mov
pop
clc
out
cs
mov
les
outs
and
iret
lods
les
xor
jb
in
adc
icebp
pop
xor
les
add
pop
call
outs
aad
or
or
lods
push
dec
in
push
aad
add
test
xchg
push
retf
inc
cmp
pop
retf
js
mov
mov
add
inc
or
outs
ins
jmp
loope
mov
pop
movs
sar
out
jne
dec
into
pop
loope
cmp
rol
lods
gs
adc
inc
sub
cmps
pop
sbb
xchg
daa
aam
push
cs
mov
shl
test
aaa
xchg
(bad)
out
pushf
mov
xor
and
scas
retf
pop
xchg
xchg
jp
fidivr
ja
sub
jmp
addr16
mov
mov
xor
pop
pop
dec
popf
retf
add
mov
or
cmp
push
adc
cmp
jle
bound
iret
fdivr
mov
sub
aam
add
pop
mov
loop
sbb
fsub
stc
push
aam
ja
gs
out
cmp
pop
mov
cmp
fbld
fstp
(bad)
xchg
jle
mov
jge
pop
pop
clc
dec
hlt
xor
dec
les
sub
xchg
test
add
lods
fwait
sub
xchg
arpl
jo
cmc
popf
cmc
cwde
fiadd
xor
fs
ss
add
ins
mov
outs
dec
sbb
shl
push
add
ret
push
pop
lods
std
jecxz
pop
jmp
jl
and
fs
jo
les
cmp
fsubp
call
push
mov
fwait
xchg
cmp
xchg
pushf
jecxz
push
mov
enter
ins
fwait
mov
jbe
push
mov
adc
repnz
out
sub
cmps
aas
jns
sub
add
js
or
outs
pop
sar
call
sbb
or
push
rol
icebp
jle
inc
and
out
in
out
mov
mov
call
push
dec
jns
jmp
(bad)
pop
mov
adc
xchg
cdq
daa
inc
in
(bad)
pop
add
ja
dec
cmps
pop
or
in
jnp
mov
cmp
test
cmps
cmp
sbb
loope
inc
pop
cmp
mov
cmps
in
lods
cmp
jnp
or
call
pop
add
in
sbb
lods
test
out
es
push
xchg
and
cmp
rcr
out
jae
sahf
add
iret
sub
sahf
call
cli
mov
pop
gs
jbe
ror
imul
mov
mov
cmp
sub
sbb
mov
iret
inc
push
test
inc
pop
hlt
jno
or
jbe
mov
adc
pop
sbb
xchg
xor
int
scas
outs
icebp
sbb
ror
mov
data16
hlt
push
or
daa
(bad)
hlt
(bad)
mov
sbb
adc
ret
push
ret
rcl
iret
fcom
sub
inc
aas
add
adc
ss
sbb
or
sti
xchg
xchg
aas
push
cmc
push
sub
adc
lock
pop
jmp
xchg
shl
fisub
lea
or
cmps
mov
test
es
in
dec
or
stos
(bad)
xchg
push
add
dec
xor
xor
push
push
mov
xchg
ss
inc
mov
mov
sbb
cmp
mov
push
sbb
or
dec
xchg
mov
pop
pop
jp
mov
and
add
ror
mov
movs
push
js
dec
push
stc
ds
xchg
loope
gs
outs
jmp
fistp
mov
mov
in
sti
jb
sbb
ret
cmc
outs
rcl
mov
mov
cmc
sti
cmp
sti
jno
mov
mov
stc
sub
push
es
popf
and
test
mov
adc
xor
fistp
xchg
ins
outs
out
inc
xchg
cmp
ret
add
xor
jmp
mov
pushf
clc
or
ret
inc
aad
jg
sbb
(bad)
ins
test
out
dec
sti
aas
es
ret
cmp
jg
mov
rol
std
add
mov
rcr
adc
jae
jo
jmp
fistp
int
pop
push
mov
int3
push
mov
rol
lea
and
leave
std
mov
js
mov
addr16
sahf
xchg
pop
xchg
jle
pop
xor
mov
sbb
test
cmc
jae
adc
sub
xor
mov
icebp
(bad)
rcl
push
addr16
cmp
loop
push
xchg
les
inc
outs
call
mov
mov
das
sub
inc
(bad)
out
adc
or
mov
(bad)
mov
push
mov
scas
mov
mov
lods
into
mov
push
mov
into
or
and
repnz
mov
loope
add
ins
jmp
(bad)
adc
cmp
jle
ins
or
mov
fld
inc
pop
loop
mov
das
dec
dec
rol
ret
das
hlt
addr16
inc
js
popa
push
dec
jecxz
fwait
(bad)
lods
loop
push
retf
xor
mov
fstp
hlt
jbe
int3
in
push
lods
neg
(bad)
pop
pop
sub
cmps
xchg
(bad)
gs
mov
push
jne
add
mov
sub
loopne
movs
aaa
jecxz
push
inc
add
ja
into
and
push
in
and
aam
xchg
ins
repz
scas
cdq
sub
nop
ret
pop
add
movs
cmp
arpl
(bad)
sti
dec
ficom
mov
add
popa
inc
mov
(bad)
mov
or
pushf
icebp
stos
cdq
sub
lds
sub
sub
mov
inc
repz
fild
aam
out
scas
int
adc
mov
dec
popf
stc
test
pop
adc
add
or
xor
push
aaa
mov
les
jae
out
pop
xor
dec
lods
loop
outs
repnz
ds
add
dec
mov
call
sub
dec
add
popa
mov
mov
jne
xchg
(bad)
fninit
add
(bad)
push
aam
arpl
mov
dec
clc
(bad)
or
add
mov
out
cwde
xchg
movs
call
pop
push
pop
push
ins
scas
dec
int3
adc
repz
mov
inc
repz
and
dec
and
push
repz
pop
into
inc
dec
inc
pop
cmp
daa
pusha
fld
mov
fdivrp
or
jg
push
adc
or
imul
jns
hlt
mov
and
ror
mov
ins
or
add
scas
xor
mov
lods
xchg
push
fsubr
sbb
inc
dec
jae
push
mov
fucomp
push
push
or
test
pop
push
and
ins
daa
sub
mov
add
mov
pop
lea
out
scas
push
inc
inc
retf
cli
mov
adc
cmp
test
repnz
test
sahf
shl
loopne
xchg
bnd
inc
fidiv
sti
jb
std
in
js
out
mov
jns
loop
(bad)
pop
pop
sar
fcmovnu
out
push
xlat
inc
sub
or
and
lods
loop
out
jg
mov
(bad)
dec
jle
or
pop
test
into
jmp
sbb
mov
(bad)
jns
int3
rcl
push
adc
pop
ins
les
and
push
dec
fld
mov
(bad)
lock
not
push
xor
ret
xchg
sbb
inc
mov
push
sbb
dec
nop
aad
mov
xor
inc
lea
or
into
arpl
sub
mov
cli
(bad)
cmps
popf
addr16
pop
sub
clc
mov
movs
xchg
(bad)
xlat
cmp
aas
psrlw
call
pop
lock
sti
(bad)
or
adc
pop
dec
fwait
pushf
cmps
push
xor
inc
loopne
push
imul
pop
fdiv
cmp
mov
add
sub
cmps
jg
jle
push
repnz
mov
div
es
imul
clc
fwait
pop
imul
sub
mov
movs
inc
sub
xor
aas
pop
and
test
mov
out
leave
push
fadd
jmp
rcr
ficom
pop
stos
jmp
jns
mov
in
inc
mov
icebp
ins
loopne
push
bound
or
in
add
and
sbb
lods
mov
rcl
dec
add
js
mov
cli
pusha
mov
dec
cmp
je
daa
xor
jnp
push
push
sub
(bad)
pop
jo
cmp
(bad)
int3
jo
pop
xchg
xchg
or
int3
xchg
add
and
sub
shl
dec
imul
shl
inc
xor
or
sub
and
xchg
dec
(bad)
mov
imul
xor
and
push
sub
inc
dec
stc
mov
nop
movs
jno
in
aas
cmp
sbb
jnp
inc
mov
jne
mov
and
popa
sar
sbb
fisub
bound
mov
inc
dec
jl
fdiv
sub
sub
pop
inc
dec
sbb
pop
inc
push
fidivr
ins
scas
mov
int
jle
push
push
adc
ret
and
lock
dec
or
xchg
stos
add
les
mov
popa
xor
jle
pop
test
push
cld
ss
mov
push
(bad)
mov
rcr
cmp
add
inc
(bad)
cmc
adc
xchg
movs
xor
cli
push
test
mov
or
in
dec
fsincos
add
cmp
add
jns
jge
cmps
cmp
mov
jle
fs
jnp
repnz
enter
dec
mov
pop
shr
in
imul
pop
jmp
fsub
cmp
fidivr
mov
mov
cmp
out
mov
xor
mov
iret
in
stc
pop
stc
push
test
lds
icebp
jno
in
dec
xchg
mov
add
popa
jno
mov
adc
pop
fisubr
xchg
ficom
or
mov
xor
clc
add
aas
add
add
push
push
add
xor
inc
aad
in
int
popa
adc
imul
pop
xor
pop
shl
fcom
xchg
push
inc
mov
add
lahf
retf
cdq
es
inc
loop
fisttp
sub
fwait
in
ss
aaa
sub
mov
fist
mov
cmp
loop
retf
jp
adc
mov
cmp
pop
push
test
mov
mov
sbb
in
cmc
pop
inc
xor
inc
inc
data16
lds
sbb
mov
pushf
and
jo
out
int
push
mov
cmps
pop
and
sbb
adc
pop
inc
xor
rcl
loop
xchg
pop
xchg
movs
or
loopne
cmp
mov
fnsave
mov
enter
mov
add
imul
stos
and
rcr
inc
pop
iret
call
cmp
mov
popf
xchg
xlat
nop
and
into
and
jae
(bad)
(bad)
es
fsub
or
jb
push
jmp
cmp
adc
cwde
les
aaa
push
popf
stos
mov
fwait
enter
sahf
icebp
mov
cmp
mov
es
sub
push
inc
aaa
fdiv
test
push
ror
jmp
fistp
fisubr
call
jl
adc
(bad)
popf
cmp
mov
stc
stos
repz
push
shl
cwde
mov
and
scas
cmps
pop
into
cmp
sbb
loop
retf
cmp
hlt
setb
pop
inc
xor
test
(bad)
mov
sahf
pop
add
data16
and
retf
fs
shl
and
jmp
jno
mov
jo
movs
sbb
inc
cmp
fs
nop
fadd
add
mov
out
in
push
hlt
test
test
aad
outs
fimul
ins
pop
push
pop
call
nop
jns
pop
xchg
xchg
pop
dec
loope
push
popa
adc
sbb
xchg
jne
arpl
jno
mov
cmps
pop
fsub
cmp
cmp
gs
add
xchg
push
sbb
ret
push
out
js
les
mov
loope
add
or
mov
cmps
popf
xchg
sti
ins
xchg
fwait
pushf
cmp
pop
pop
call
ins
call
movsx
sub
mov
jnp
cli
test
stc
cli
xchg
mov
jmp
cmps
adc
mov
dec
dec
sbb
pop
xchg
icebp
cmp
inc
test
(bad)
imul
xor
frstor
(bad)
cmp
ret
bound
xlat
push
mov
push
mov
test
inc
rcl
lods
stos
cmp
pusha
loop
(bad)
and
or
mov
mov
leave
xchg
in
or
sub
int3
mov
(bad)
dec
jg
cmp
mov
pop
fsubr
imul
loop
out
sbb
imul
out
dec
xor
arpl
add
xchg
jmp
push
lock
pop
jecxz
xchg
cdq
jg
pop
lahf
stos
sub
and
pop
je
test
js
xor
mov
ss
inc
mov
mov
inc
xchg
(bad)
aad
ret
inc
(bad)
stos
jmp
fidivr
stc
out
sbb
movs
adc
loopne
call
jl
or
call
sbb
push
fcmovb
push
je
aas
push
jo
xchg
and
sub
clc
xchg
into
inc
mov
leave
sbb
in
les
call
leave
call
pop
jge
repnz
pop
jmp
mov
fistp
(bad)
adc
or
mov
test
xchg
jg
push
cld
imul
mov
xor
and
sbb
jb
lds
dec
addr16
aas
pop
ret
cdq
sbb
add
mov
add
add
sub
neg
arpl
xchg
dec
gs
data16
jo
adc
sti
push
cmp
mov
(bad)
dec
jge
lds
xchg
cwde
in
add
xchg
mov
stos
mov
ret
sub
sbb
pop
mov
mov
cmp
jnp
ret
or
inc
fcom
shl
sbb
neg
std
jb
stos
das
inc
mov
mov
call
inc
scas
iret
les
into
xchg
dec
out
fsub
test
(bad)
mov
push
fcom
mov
outs
inc
popf
sub
push
pusha
cli
xchg
mov
mov
push
icebp
outs
aad
pusha
stos
dec
or
lods
fs
push
mov
int3
aaa
cmp
and
int
jge
sbb
or
jb
xor
mov
int
adc
mov
retf
dec
pop
retf
arpl
std
xor
adc
mov
pop
cld
pop
fidiv
push
mov
mov
out
jecxz
adc
mov
xor
into
hlt
cmc
mov
pop
and
xchg
int3
into
xchg
adc
push
sbb
inc
in
js
popf
fs
inc
div
jecxz
dec
stos
xchg
les
pop
push
fbld
in
jb
xchg
aam
int
push
adc
out
hlt
jl
add
and
jno
xor
pushf
and
add
sbb
bound
stos
or
addps
sahf
pop
fist
sub
push
push
xchg
(bad)
pop
rcl
xchg
rol
hlt
or
cmps
ins
test
cdq
jl
cmc
mov
movs
mov
call
retf
sub
sbb
nop
push
mov
retf
mov
sub
lds
push
mov
adc
cld
out
stos
js
push
cdq
aam
or
pushf
retf
xchg
pusha
pop
sub
std
push
fidivr
rcl
(bad)
aad
pop
pusha
inc
call
and
mov
add
dec
cli
fs
dec
xor
cmps
scas
test
rol
mov
fcomp
adc
sbb
inc
mov
fistp
mov
inc
or
daa
shr
out
mov
outs
dec
cmp
xor
push
cmp
sub
sbb
mov
push
jmp
push
(bad)
clc
lds
add
mov
mov
sub
jno
int3
call
pop
push
iret
pushf
sar
pop
lea
mov
sbb
outs
loope
mov
lock
retf
jmp
xchg
sahf
movs
mov
lods
stos
sbb
clc
mov
and
addr16
aam
cdq
fwait
pop
stc
sub
fsubr
and
mov
loopne
inc
sbb
jle
or
cmps
(bad)
iret
push
mov
fwait
repz
xchg
cmc
ffreep
inc
frstor
int3
aad
ins
aaa
push
dec
cmp
pop
lock
(bad)
out
fucomi
jno
push
xchg
shl
icebp
xchg
mov
adc
ja
pop
sub
mov
inc
jne
adc
iret
sbb
dec
pop
mov
mov
hlt
outs
out
daa
push
jecxz
sub
xor
clc
sbb
dec
out
xchg
sbb
sbb
push
adc
mov
test
mov
mov
neg
mov
pop
mov
je
out
mov
leave
cmp
jbe
inc
jno
mov
outs
stc
xor
int
loope
cmps
fisub
push
xor
idiv
add
(bad)
fnstcw
lods
cmps
sahf
mov
push
jbe
jne
and
or
cmps
sbb
int3
mov
dec
mov
pop
cmps
jg
das
xchg
cmps
xor
sti
add
mov
ds
fwait
push
xor
pop
retf
xor
xor
movs
push
fstp
xchg
fsub
adc
movs
xchg
jecxz
retf
push
out
imul
outs
push
xchg
jl
or
int3
or
mov
push
or
movs
rol
sub
mov
(bad)
cld
inc
lods
dec
push
mov
sub
fbld
(bad)
mov
add
repnz
and
jmp
lods
dec
inc
sub
shl
push
pop
xlat
pop
push
(bad)
fwait
mov
pop
push
jne
cmp
test
mov
mov
(bad)
or
test
fist
lock
xor
lds
jne
mov
sub
int
lea
xchg
daa
dec
jl
sub
jns
icebp
call
shl
lock
mov
add
sbb
js
push
xchg
add
adc
stos
and
mov
push
jae
add
jno
sbb
mov
pop
pop
cs
cwde
fmul
adc
adc
add
arpl
retf
pop
or
retf
sbb
or
(bad)
sahf
arpl
ins
int3
fmul
cmp
mov
test
inc
int
cmp
pop
dec
cmp
jnp
push
or
(bad)
adc
add
outs
aam
clc
test
jae
cld
mov
mov
and
test
ja
xor
outs
mov
pop
jo
dec
push
aad
or
sbb
mov
pop
sub
sar
icebp
and
retf
in
and
(bad)
and
sub
scas
push
std
jp
gs
outs
pop
sub
adc
jne
mov
dec
mov
push
cmp
movs
add
jmp
fstp
loope
out
adc
dec
xor
and
fisub
leave
push
dec
outs
cdq
add
popf
sub
not
ja
cmps
xchg
mov
and
pop
mov
stos
ins
push
ret
push
push
sbb
mov
xor
dec
cwde
shl
adc
sbb
test
rol
int
inc
aam
popa
jge
aad
dec
ins
or
es
(bad)
cmp
fcmovnbe
pop
aas
push
sahf
push
es
add
inc
or
fldenv
jl
retf
fadd
data16
sti
pop
js
sub
imul
pop
loop
adc
adc
and
pusha
jl
xor
icebp
out
cmp
test
sbb
add
aaa
inc
xor
mov
push
push
inc
pop
sar
scas
push
jl
inc
xchg
lds
dec
movs
sub
test
fisubr
inc
inc
jae
pop
push
and
das
jle
pop
and
dec
push
add
ret
mov
mul
sbb
rcl
fadd
repz
dec
jl
loop
loop
adc
fld
outs
scas
and
adc
mov
cs
ret
mov
inc
pop
cmps
xor
iret
lods
(bad)
inc
inc
jno
add
test
adc
mov
das
cmp
scas
cmp
imul
pusha
add
push
sub
jmp
sub
movs
jl
out
push
adc
dec
and
dec
inc
and
jl
or
add
iret
cld
dec
xchg
mov
mov
ins
ins
shr
add
rcl
lods
and
loope
daa
mov
dec
ds
enter
mov
mov
pop
jp
pop
pop
mov
xchg
xchg
scas
(bad)
loopne
mov
les
into
and
lods
cli
cmp
lock
inc
adc
mov
mov
pop
mov
popf
push
clc
fwait
cwde
loopne
cs
add
adc
es
enter
cmp
adc
repz
mov
mov
adc
pop
sahf
jmp
fsub
popf
fadd
fwait
dec
ret
retf
pop
or
fld
jg
fucom
mov
dec
mov
cli
neg
push
mov
sub
ins
std
test
adc
push
dec
out
dec
or
jnp
aas
test
push
inc
inc
cmps
xchg
movs
aam
fwait
sar
xor
jp
sub
push
cmp
std
and
(bad)
loope
xor
xor
retf
sbb
sti
je
outs
ret
je
ins
dec
jns
dec
sbb
or
test
push
mov
test
dec
mov
or
ret
jp
in
mov
sti
jb
ins
and
outs
adc
xchg
data16
push
fsubr
push
adc
cmp
pushf
loope
hlt
loop
mov
js
loop
inc
mov
pop
mov
and
mov
mov
inc
(bad)
or
out
jb
loope
imul
adc
cmp
test
lahf
jb
push
ja
jmp
xor
outs
std
ret
cmp
loope
jle
and
sub
sub
call
aaa
ret
dec
sbb
or
add
and
ins
imul
and
retf
test
(bad)
aas
test
jge
mov
test
mov
retf
inc
dec
cmp
add
(bad)
in
(bad)
push
pop
jl
gs
(bad)
fiadd
sbb
xchg
mov
(bad)
push
fsub
test
in
jle
push
cmp
xor
xchg
cmp
cmp
outs
sub
jle
sbb
add
xchg
push
xchg
aad
in
out
xchg
sub
add
lods
xor
and
test
dec
mov
pusha
out
pusha
mov
js
xchg
inc
scas
pop
adc
dec
mov
mov
mov
out
sub
lods
fcom
aad
xor
xlat
pop
test
fcom
jl
arpl
int
fwait
call
mov
and
mov
imul
sbb
mov
jb
call
mov
daa
scas
adc
jne
and
ficomp
in
in
fs
push
push
xchg
xor
sahf
cmp
jecxz
out
retf
pop
inc
or
xor
(bad)
adc
jne
adc
pop
rol
lods
popf
(bad)
pusha
dec
enter
popf
in
mov
sti
js
nop
popa
jge
pop
jl
imul
mul
idiv
push
inc
stos
mov
mov
(bad)
aas
loopne
cmp
cmp
(bad)
retf
in
adc
cmps
imul
cmc
jns
pop
mov
mov
adc
push
(bad)
sbb
xor
add
mov
popf
dec
jl
mov
jg
loop
sbb
adc
adc
test
sub
dec
adc
in
xor
xlat
adc
xchg
jecxz
jecxz
test
and
xor
xor
popa
pop
pop
into
leave
arpl
mov
xor
shr
mov
inc
call
in
mov
pop
mov
iret
pop
imul
mov
xchg
test
jbe
dec
clc
inc
or
jecxz
aas
je
sub
dec
movs
mov
adc
and
ins
scas
enter
jmp
xor
leave
or
xor
dec
les
or
mov
pop
push
cmps
push
push
dec
popa
push
cwde
sub
adc
(bad)
mov
inc
add
(bad)
out
ret
data16
xchg
test
aaa
mov
loope
adc
inc
add
xchg
cs
xor
mov
(bad)
sub
data16
and
xchg
dec
mov
dec
(bad)
cli
add
aam
mov
sahf
sub
xor
gs
or
fwait
sbb
mov
loop
mov
(bad)
push
and
add
mov
cmp
jne
shl
or
mov
fisub
lock
in
mov
adc
fwait
imul
out
cs
(bad)
adc
mov
jmp
xchg
sub
(bad)
stos
div
cmp
jmp
sub
jl
sub
or
cmp
(bad)
or
test
add
jb
inc
gs
aas
mov
mov
and
xlat
and
mov
cmp
dec
sub
push
or
mov
inc
cmp
add
loop
in
xor
cld
sahf
xlat
int
jmp
xchg
or
mov
jg
jp
push
cmp
ins
(bad)
jecxz
or
(bad)
retf
sbb
adc
nop
sbb
adc
sar
js
imul
int3
cmc
loopne
out
clc
inc
daa
imul
pop
test
inc
or
mov
xor
(bad)
lods
sbb
rcl
push
in
xchg
loop
je
rcl
xchg
push
test
pop
mov
and
aad
(bad)
mov
add
lahf
xchg
retf
jmp
and
leave
lods
outs
push
cdq
test
sub
dec
push
pop
es
mov
in
cmp
ds
jb
inc
cli
sbb
xchg
inc
sbb
es
jp
jae
sbb
pop
dec
sbb
fadd
outs
out
mov
daa
jno
fstp
dec
mov
repnz
sbb
iret
pop
lfs
out
mov
adc
xchg
fidiv
cmps
call
add
loopne
sbb
or
popf
(bad)
push
(bad)
sbb
mov
(bad)
sub
es
fnstsw
xchg
mov
and
cmp
xchg
les
xchg
dec
sahf
adc
dec
jl
xchg
(bad)
enter
dec
mov
jb
ja
dec
mov
dec
aaa
fidiv
or
xchg
mov
dec
ret
adc
outs
mov
sbb
fcmovnbe
addr16
icebp
inc
dec
mov
nop
pop
(bad)
stc
adc
(bad)
adc
dec
add
adc
adc
jmp
sti
sub
pop
xor
dec
push
ret
mov
push
sbb
xor
dec
mov
nop
(bad)
retf
aaa
push
mov
in
sbb
lods
push
xlat
mov
pop
xor
jg
mov
xchg
push
xor
pop
in
cwde
push
xchg
sub
fwait
pop
fs
(bad)
sti
push
push
ds
push
loopne
nop
sub
add
popf
stc
and
inc
cmp
lds
dec
in
mov
jecxz
jb
or
xchg
pushf
add
sahf
push
shr
je
cmp
lahf
sub
hlt
mov
mov
xchg
cmp
stos
rcr
lea
jecxz
or
into
stos
jnp
lods
jp
dec
mov
in
sahf
mov
sbb
clc
ss
ins
movs
jg
cmp
aas
fxch
cwde
ficom
jmp
jmp
xor
dec
aam
dec
pop
jp
pop
or
es
emms
push
add
pop
test
addr16
push
inc
scas
add
push
mov
inc
lock
ins
sub
jle
mov
jmp
daa
inc
cmps
pop
popf
jmp
jge
daa
push
dec
and
adc
setne
int
popa
bound
mov
nop
xchg
and
jno
cmp
mov
lahf
loopne
stc
(bad)
in
mov
pop
mov
inc
shl
or
(bad)
pop
sub
and
fs
or
or
fist
scas
xor
push
ss
or
xor
mov
mov
cmp
mov
es
push
mov
pop
icebp
inc
sbb
nop
inc
pop
cwde
mov
fild
mov
loope
xor
dec
out
clc
adc
aas
mov
je
push
inc
adc
inc
xchg
hlt
and
or
mov
imul
in
in
dec
sbb
jge
pop
daa
inc
lods
popf
lahf
pop
imul
push
fnstsw
cld
mov
imul
cmp
and
ffreep
push
vpminub
and
retf
push
mov
lea
jp
imul
addr16
inc
dec
fs
adc
sub
loopne
jmp
mov
sar
cld
sub
fwait
or
std
in
and
test
fnstenv
ins
jge
xor
leave
cmp
ret
lds
sahf
and
rcr
pop
mov
adc
ret
cdq
dec
jle
pop
into
ds
imul
xchg
mov
sub
mov
shl
xchg
adc
jns
lds
idiv
test
stc
test
fs
dec
dec
push
sbb
sbb
loope
retf
fld
and
iret
mov
popf
inc
push
push
xlat
movs
fmul
mov
mov
es
dec
mov
out
sub
xor
or
push
popa
inc
sbb
bound
dec
xchg
stc
fldcw
std
adc
mov
int3
ins
cmp
cmp
xor
in
lods
arpl
and
cs
xor
pop
xor
int3
jbe
push
scas
js
fbld
fiadd
fisub
dec
or
int3
jnp
xor
stos
int3
jle
lods
mov
cli
jmp
fild
xchg
ins
inc
add
mov
test
cmp
cmp
xor
jns
loopne
int
add
cmp
jmp
jne
xchg
xchg
push
(bad)
movs
jne
cmp
xchg
jb
mov
cmp
and
pop
mov
neg
cmovge
push
jecxz
pushf
hlt
mov
fs
(bad)
inc
jp
xchg
add
xlat
neg
loop
mov
sbb
xor
fimul
xchg
inc
push
sub
sub
ins
xchg
pop
cmp
pop
xchg
push
push
shr
das
and
adc
cmp
outs
jmp
mov
inc
(bad)
pop
cwde
add
push
xor
jl
mov
in
daa
adc
ja
fild
mov
test
adc
ror
mov
clc
and
std
inc
mov
repz
jne
push
mov
mov
(bad)
inc
mov
adc
dec
into
sbb
jns
int3
sbb
fcomp
mov
cmp
mov
test
in
movs
sbb
jge
xchg
inc
push
dec
(bad)
and
outs
xchg
imul
cmp
jb
out
arpl
and
push
push
hlt
ror
push
jmp
pop
retf
push
dec
sub
sub
imul
xchg
add
or
je
addr16
cmp
fwait
xor
push
arpl
icebp
jmp
clc
arpl
inc
push
adc
sub
mov
jns
in
inc
and
jo
dec
xor
mov
dec
(bad)
iret
pushf
mov
lock
aad
ret
(bad)
dec
fcom
xchg
xchg
dec
mov
mov
call
push
loop
in
icebp
test
adc
cmp
imul
sub
inc
cmovns
outs
jecxz
mov
jle
mov
cmp
inc
icebp
je
daa
sbb
or
sub
inc
inc
daa
mov
inc
cdq
sub
cmp
icebp
rcl
adc
push
scas
cmp
dec
in
out
xchg
inc
je
inc
xchg
outs
mov
in
sahf
leave
das
push
out
or
and
or
sbb
test
add
jge
es
or
arpl
push
push
sub
test
jl
jbe
jmp
in
or
scas
jge
xchg
mov
pop
mov
sub
jo
dec
lods
outs
fcomp
xor
cs
cmp
jg
pop
and
push
jns
mov
ja
retf
enter
mov
jno
aaa
inc
je
mov
mov
sar
aam
jmp
add
inc
mov
add
sahf
jmp
sub
cmc
das
xchg
adc
mov
repnz
fimul
adc
popf
adc
jno
scas
hlt
retf
cmps
sbb
jb
repz
pop
iret
cmp
out
adc
iret
push
mov
mov
xchg
stos
jmp
rcr
add
pop
pop
jns
fs
push
xchg
add
(bad)
mov
retf
shl
out
scas
adc
mov
sbb
xor
aam
dec
mov
call
xchg
sbb
jae
pop
jge
add
out
std
call
movs
pop
fwait
xchg
inc
pop
mov
xchg
push
cmps
xor
jge
arpl
into
call
adc
mov
push
imul
stc
jns
sbb
mov
and
dec
add
adc
out
mov
retf
cmps
pop
mov
jo
shr
adc
push
mov
inc
xchg
into
mov
inc
mov
xor
dec
ins
cs
cmp
mov
mov
iret
das
outs
pushf
pop
popf
sbb
mov
sti
cs
int3
fistp
pop
xchg
out
les
mov
pop
iret
aaa
pop
je
and
hlt
cmc
dec
and
add
out
sbb
or
xor
pop
sahf
fisttp
mov
dec
xchg
ja
and
imul
mov
into
test
jno
push
shl
into
retf
dec
inc
and
mov
mov
xchg
stos
and
cmp
or
cmp
push
imul
stc
or
xchg
test
jbe
push
in
icebp
stos
xor
std
push
push
test
adc
aas
mov
fiadd
dec
retf
sub
fadd
adc
and
icebp
add
jbe
fs
jne
jo
ins
sub
jge
mov
sub
ins
mov
ret
pop
fbstp
push
sub
fnstsw
outs
jmp
push
in
fisttp
push
push
nop
mov
jle
mov
inc
adc
aad
xor
stos
fmul
xchg
mov
shl
push
adc
repnz
pushf
ds
cmp
movs
cmp
cmp
mov
aas
aaa
pop
push
adc
cmps
leave
call
test
hlt
dec
sub
in
xchg
out
test
or
repz
push
inc
mov
repnz
popa
iret
cmp
lds
jno
push
sbb
sbb
cdq
adc
jo
dec
repnz
cli
dec
adc
(bad)
jne
(bad)
ror
push
icebp
mov
or
loopne
mov
push
lahf
xor
mov
test
call
adc
mov
xlat
cmps
mov
sbb
movs
inc
lods
gs
push
mov
loop
and
jno
call
jns
mov
push
fwait
stos
jno
push
ds
pop
pop
daa
or
fwait
and
nop
xor
xchg
(bad)
sbb
pop
pop
xor
std
ins
pop
pop
dec
inc
or
mov
cdq
inc
repz
and
(bad)
sub
mov
retf
pop
xchg
add
or
fwait
or
mov
not
call
push
daa
add
sub
xchg
push
push
pop
lea
jnp
in
add
gs
mov
fmul
sti
je
mov
sub
mov
mov
xchg
jp
out
int3
rcr
inc
push
sbb
push
arpl
sub
inc
xor
sbb
inc
adc
xchg
(bad)
adc
pop
xchg
lds
add
inc
cli
fstp
sbb
rol
xor
gs
xchg
pushf
mov
retf
test
jmp
mov
js
push
repnz
xchg
imul
imul
mov
push
jecxz
sti
lahf
movs
sbb
pop
pop
and
xor
add
mov
mov
cmp
ret
cmp
push
dec
adc
push
pop
or
add
(bad)
lock
mov
movs
das
inc
jns
mov
sti
test
lea
mov
aad
into
mov
adc
xchg
pop
push
sub
fisttp
pusha
xor
jmp
xchg
cmp
sub
(bad)
fld
lock
stc
add
int3
cmp
aad
fwait
out
icebp
push
push
xchg
aad
dec
pop
in
ins
and
xchg
push
and
and
mov
sti
pop
cmp
outs
inc
popf
xor
pop
cmp
xchg
scas
in
jne
imul
mov
mov
dec
pop
inc
mov
dec
add
inc
jbe
les
fnstcw
xchg
mov
movs
leave
aam
gs
in
cdq
shl
sub
ror
test
lahf
in
sub
test
bound
call
fs
outs
rcl
je
loope
dec
cmp
or
lahf
js
out
mov
mov
mov
addr16
aad
jmp
addr16
fidiv
outs
sub
ds
and
inc
enter
ficom
in
call
pop
jo
add
cdq
nop
jmp
cmp
adc
mov
nop
and
adc
mov
fmul
sub
scas
in
data16
jp
jnp
adc
pop
push
fist
xor
aaa
sar
scas
mov
jne
mov
and
je
icebp
mov
push
sbb
and
adc
adc
cmp
fs
add
push
and
shr
push
(bad)
out
add
adc
aad
loopne
mov
call
and
ja
arpl
out
xchg
xchg
sbb
xchg
mov
sbb
jo
int3
or
cmps
and
out
hlt
xchg
mov
dec
call
std
add
shl
adc
pushf
aad
pop
pushf
mov
es
xor
ret
and
cmp
ins
popa
cmp
and
sbb
gs
in
push
popa
push
adc
mov
push
jb
jge
std
in
inc
xchg
jne
mov
jno
cmps
pusha
lods
pop
out
dec
fs
aam
into
xchg
and
and
push
mov
inc
mov
cmps
iret
int
loopne
scas
loopne
mov
push
mov
call
aas
pop
jecxz
add
jnp
sub
stos
adc
xchg
cmp
add
aas
data16
ss
add
jp
movs
ss
stos
inc
pushf
les
mov
ins
mov
add
in
jp
jmp
(bad)
das
test
mov
mov
sub
or
aam
mov
sbb
cmp
pop
dec
xor
xor
xchg
xchg
rcr
or
dec
mov
lea
jb
jnp
fstp
xchg
push
mov
mov
rcl
dec
movs
cmc
and
ss
jb
dec
push
mov
test
ds
enter
mov
shr
test
lods
movs
jne
cmps
sub
push
mov
lea
inc
dec
mov
inc
fisttp
es
loopne
(bad)
test
dec
xor
cmp
pop
cli
mov
shl
dec
int
jns
gs
pop
or
bound
(bad)
pop
mov
jns
aaa
adc
pop
aam
fcomp
xor
hlt
add
xchg
jb
xchg
pop
xor
sbb
test
(bad)
and
adc
out
ds
addr16
jmp
add
pusha
xchg
push
mov
fistp
std
lds
mov
mov
sbb
stc
mov
push
and
adc
mul
loope
popf
xchg
pop
xchg
add
dec
cs
push
call
xchg
xor
mov
or
sub
adc
mov
jo
push
enter
arpl
fwait
mov
cmp
pop
pop
mov
mov
mov
ret
push
mov
ret
or
xor
fwait
in
push
adc
mov
cmc
cmps
inc
xor
out
push
idiv
test
ret
sbb
scas
outs
push
movs
in
test
cmps
call
int
pushf
nop
jl
shl
mov
adc
dec
push
mov
mov
(bad)
fidiv
or
inc
cmp
sub
fild
outs
mov
adc
mov
mov
xchg
and
add
and
sahf
(bad)
pusha
sub
xchg
test
sbb
or
ja
xchg
and
pop
pop
sub
shl
dec
push
div
leave
pop
add
cmc
mov
pop
retf
mov
aad
pop
out
pop
cvtps2pd
imul
fst
add
xchg
xchg
jle
shr
push
xchg
jl
jno
(bad)
fwait
cmc
mov
loop
pop
(bad)
in
jle
sahf
pop
inc
inc
hlt
inc
fmul
inc
(bad)
jne
dec
out
call
ds
xchg
outs
lods
xchg
jecxz
into
mov
sbb
add
push
xchg
rcl
xor
arpl
fcomp
sbb
adc
mov
imul
sub
or
cwde
sub
dec
fnstsw
jnp
xchg
fld
fiadd
out
push
sbb
aam
daa
inc
adc
imul
inc
pop
pusha
js
iret
xchg
sbb
or
jge
aas
sbb
sbb
cmp
ficomp
neg
mov
pop
(bad)
out
addr16
sar
dec
xchg
outs
int3
xor
jmp
sbb
into
retf
ret
adc
pushf
mov
jb
ret
or
loopne
add
aaa
or
and
jg
shr
mov
sar
movs
inc
hlt
mov
sub
ret
add
out
cmp
ret
and
inc
xor
(bad)
jb
pop
arpl
in
sahf
xchg
adc
imul
pop
fisub
nop
pop
out
lea
in
retf
push
fistp
into
add
mov
cwde
or
mov
dec
push
scas
sub
out
std
xchg
add
jmp
add
sbb
cli
cmp
jne
ss
xor
jno
mov
mov
cmps
stos
scas
jae
cli
outs
sti
dec
cmp
adc
mov
jbe
dec
inc
scas
pusha
loop
or
mov
push
aad
mov
ss
repz
cmp
aam
xchg
jle
or
pop
xchg
pop
loopne
rol
push
dec
mov
mov
(bad)
cld
int
lock
bnd
data16
gs
and
mov
xchg
xchg
mov
inc
jnp
imul
dec
cli
mov
jae
xchg
jne
push
mov
mov
cmp
mov
(bad)
mov
das
dec
out
scas
and
adc
sub
imul
adc
inc
pushf
xchg
scas
shl
cmps
fwait
mov
cmps
sahf
xor
mov
cmps
cmc
call
in
push
jmp
and
pop
xchg
enter
or
jae
test
mov
add
leave
xchg
test
loop
sti
js
inc
inc
push
(bad)
mov
push
sub
mov
movs
cmp
and
adc
pop
test
bound
cmp
aaa
loopne
movs
or
jmp
ss
push
mov
mov
fdiv
xor
add
dec
pop
push
mov
mov
cmp
mov
fisub
hlt
add
mov
sub
test
js
jp
cs
stos
pop
loop
pop
mov
cmp
mov
sti
ds
jg
outs
push
mov
ds
neg
and
mov
mov
sti
nop
cmp
cmp
les
(bad)
shr
adc
cmp
or
or
and
fdivr
pop
jb
hlt
out
ja
out
push
addr16
adc
js
adc
push
fcom
fs
push
jecxz
js
mov
jne
xchg
jmp
xchg
in
std
movs
cmp
loop
xchg
push
sub
leave
push
andps
mov
arpl
out
imul
ret
jp
scas
jo
pop
fidiv
ins
call
pop
adc
push
stos
push
or
sti
ja
jmp
jmp
or
and
int3
jns
addr16
adc
or
(bad)
cli
(bad)
cmp
mov
cmps
mov
(bad)
push
jge
jmp
mov
fcom
(bad)
fisubr
mov
retf
loopne
xchg
lods
mov
cmp
mov
xor
call
xchg
stos
fdivr
xor
into
in
enter
mov
mov
dec
adc
jo
inc
mov
xor
sub
out
xchg
cmp
sub
jl
cmc
dec
mov
mov
cmps
jle
rol
jp
loopne
and
xchg
retf
push
pop
jge
push
add
sbb
mov
sub
cs
jp
xor
xor
mov
rcr
or
pop
xchg
sbb
fcmovb
lock
(bad)
ror
or
jmp
xchg
mov
pushf
out
sbb
cs
pop
cmp
adc
and
popa
adc
and
movs
mov
jbe
je
xor
out
pop
push
push
cmp
mov
sub
jnp
js
sqrtps
pop
sbb
inc
pop
xor
in
add
repz
lds
gs
jno
xor
sub
mov
shl
push
fwait
lea
sub
mov
into
hlt
inc
jbe
in
scas
pop
xchg
jbe
loop
in
dec
cmp
fcmovb
xor
lea
rcr
out
aas
repnz
stc
and
pop
or
push
shr
imul
cmp
(bad)
pop
retf
movs
das
shl
(bad)
cwde
sbb
neg
sti
ja
jecxz
pop
or
fwait
ret
xchg
mov
mov
mov
mov
test
jo
adc
jp
jb
ret
jmp
sub
dec
pop
enter
mov
jo
mov
fstp
add
xchg
mov
ja
or
or
sahf
mov
je
lods
cs
sbb
sub
jg
jle
add
push
(bad)
out
lahf
lahf
jmp
cld
mov
sub
push
rcl
ins
je
sub
or
int3
(bad)
cmp
test
leave
sti
and
fmulp
lea
jecxz
mov
dec
fdivp
mov
push
lock
cmp
popa
or
push
imul
sbb
mov
ret
in
dec
gs
rol
push
mov
xchg
out
fdiv
and
enter
push
jb
push
loope
jae
mov
sub
mov
cdq
mov
rol
sbb
pop
ret
leave
sub
pop
sti
adc
dec
loop
xchg
shl
push
xor
pusha
adc
lods
pop
dec
int
jns
stos
mov
sar
mov
sbb
cmp
xchg
nop
push
xchg
xchg
push
fistp
or
lds
mov
adc
loop
adc
and
daa
adc
inc
jp
in
(bad)
push
das
es
pusha
rcl
cmp
enter
xchg
sub
fsubrp
in
add
dec
jnp
imul
popf
stos
cld
gs
cs
mov
repz
test
xchg
scas
sahf
xchg
sbb
inc
fwait
shl
pop
lds
jno
lds
or
mov
rcr
sbb
xor
xchg
sahf
sti
aam
push
add
cmp
arpl
xchg
add
(bad)
ror
dec
sub
cld
push
mov
mov
in
imul
lods
jg
stos
or
ds
stc
mov
adc
or
fs
push
jecxz
push
aas
lea
repz
ret
adc
shl
retf
fcmovb
pop
gs
addr16
(bad)
retf
push
retf
ja
daa
sar
sub
push
test
call
mov
sar
mov
mov
(bad)
mov
or
mov
and
jmp
pop
sahf
lods
adc
sub
xor
sbb
test
push
cmp
(bad)
ins
adc
rol
jmp
jg
or
stos
mov
mov
dec
hlt
out
jmp
push
cmps
push
clc
retf
mov
int3
fld
mov
bound
ror
adc
repz
pop
fldl2t
cdq
cmp
sbb
fwait
push
mov
jne
(bad)
fwait
jo
xchg
sub
mov
pop
xor
pusha
jmp
sahf
adc
int3
jb
jge
scas
adc
jns
and
rol
loope
xchg
shr
clc
push
push
pop
adc
and
lahf
push
in
xor
sbb
inc
and
lds
xchg
out
xor
jg
jns
mov
loop
push
push
clc
out
les
mov
inc
cmp
sub
fist
dec
call
mov
fiadd
call
cld
fdivr
adc
daa
dec
xchg
cmp
(bad)
jg
enter
repz
mov
cmc
ss
ror
rcl
mov
jne
in
mov
xchg
mov
ret
daa
jg
fimul
scas
adc
add
inc
xchg
iret
adc
sbb
dec
lock
sub
mov
test
mov
add
xchg
int3
cwde
adc
stos
ds
shl
cmp
fsub
out
push
dec
mov
shl
mov
ror
(bad)
rcr
mov
mov
jo
mov
dec
mov
pop
push
aam
pop
lods
or
sub
repz
dec
fwait
sbb
and
js
stc
xor
pop
mov
sbb
dec
lea
pop
gs
push
push
or
jno
add
cmc
ret
adc
jle
mov
lods
xor
out
jge
daa
mov
loopne
cmp
jg
add
hlt
xchg
outs
push
out
jp
rcl
xchg
xchg
jae
xchg
popa
jb
lock
ret
adc
dec
cs
les
cli
nop
sbb
addr16
aas
cmps
dec
cmc
bound
cli
ss
push
dec
les
sti
dec
aas
out
jmp
nop
pop
xor
adc
adc
and
std
cmps
in
retf
fcmovnu
int3
cli
rcr
jnp
call
mov
loope
sub
pop
inc
jno
dec
pop
jge
mov
aaa
sbb
in
sbb
jge
mov
ffreep
clc
dec
xchg
sbb
sbb
enter
stos
jg
(bad)
pop
lods
dec
jo
xchg
aas
rol
mov
sbb
mov
test
mov
pusha
in
xchg
push
or
mov
pushfw
mov
aaa
jge
pop
clc
ins
dec
dec
push
outs
jl
sbb
or
outs
add
dec
inc
jmp
lds
les
and
mov
icebp
sbb
ds
(bad)
push
add
add
inc
dec
in
mov
and
repnz
ror
or
push
push
les
mov
cli
add
lahf
mov
add
push
pop
or
fild
icebp
and
jmp
aad
cld
outs
push
sub
sbb
inc
and
pop
and
xchg
inc
xchg
mov
lods
push
lock
(bad)
adc
pop
cli
sbb
ins
cli
xchg
lods
mov
scas
repnz
(bad)
cmp
in
std
pop
mov
std
lock
rcl
iret
push
cmp
push
addr16
sub
dec
es
ja
in
mov
ins
jb
rol
cmp
sub
in
loopne
imul
aas
pop
mov
adc
pop
and
je
lahf
mov
mov
out
xor
inc
and
dec
and
(bad)
int
lods
sahf
(bad)
pop
xor
jae
xchg
push
xor
popf
mov
xor
and
mov
sub
push
lock
add
retf
js
mov
adc
inc
mov
mov
dec
sbb
inc
lods
xchg
jp
xchg
lods
push
pop
inc
jne
adc
and
jmp
mov
ins
adc
test
pop
adc
mov
cmc
push
mov
sub
sbb
fs
adc
and
sbb
hlt
push
xchg
adc
inc
js
push
gs
mov
scas
add
or
add
cmp
out
rol
data16
(bad)
aam
stos
inc
ret
lods
adc
xchg
jmp
mov
jmp
aas
icebp
adc
inc
add
nop
ret
fist
jmp
std
les
dec
je
mov
ret
xor
(bad)
clc
add
and
popa
cmp
xchg
cmp
sub
mov
jb
or
lahf
mov
(bad)
loope
mov
int
aas
jge
push
and
dec
ins
in
mov
out
cmp
pop
das
int
add
popf
test
ror
in
and
xor
push
sbb
add
adc
in
int
ret
mov
jno
mov
aaa
mov
out
in
out
and
jns
and
stos
lds
aad
cs
and
and
push
cli
daa
sub
cmp
sahf
std
mov
ss
sub
lea
fsubr
jne
xor
iret
cmc
or
sub
xor
inc
xlat
add
cmp
fdivr
sar
xchg
fimul
jge
cmp
xchg
ret
mov
adc
push
adc
test
icebp
bound
pop
sahf
out
or
call
push
fstp
enter
mov
cs
lahf
dec
and
in
dec
test
sub
mov
mov
in
mov
in
jl
jge
retf
rcl
mov
or
xchg
pop
cs
push
mov
push
mov
sbb
sbb
in
push
add
loope
mov
lds
outs
sahf
and
sbb
mov
ins
adc
inc
and
sub
mov
out
mov
xchg
pop
mov
mov
mov
adc
mov
enter
stos
mov
add
into
lock
movaps
mov
mul
int
ja
ds
std
fld
xlat
shl
push
and
xchg
jp
lods
or
jle
jp
out
add
cli
(bad)
out
xor
dec
inc
sub
cmps
push
sub
dec
mov
pop
and
outs
popa
add
cdq
cmps
iret
imul
pop
cwde
daa
jns
repz
pop
das
jb
shl
mov
jo
mov
push
cmp
sahf
or
sahf
push
inc
mov
and
fwait
pop
jnp
xchg
cmp
(bad)
stc
mov
mov
cmps
fild
(bad)
cdq
and
outs
sub
cdq
popf
xor
add
jmp
fnstcw
retf
and
ror
or
(bad)
mov
sub
xor
out
dec
mov
push
add
sub
cmp
and
not
ror
dec
sbb
test
cmc
leave
xchg
rcr
sub
lea
pop
daa
sub
inc
jnp
inc
mov
cdq
call
shl
cmp
and
adc
test
sbb
pusha
adc
les
jg
pusha
mov
fwait
cmp
out
ret
xchg
(bad)
push
and
ret
in
adc
fisubr
rcr
adc
shr
stos
inc
add
out
add
jbe
imul
push
push
push
std
iret
call
pop
cld
cld
(bad)
fadd
mov
mov
fist
ss
in
popf
mov
stos
or
mov
lds
loopne
sub
rcr
and
xchg
jle
jae
jg
test
add
xor
dec
push
(bad)
add
xchg
mov
xor
addr16
ins
in
xchg
adc
scas
jl
in
cdq
jns
xchg
jmp
sbb
in
out
enter
inc
mov
rcl
mov
out
jle
mov
faddp
sbb
call
mov
in
call
or
sti
jae
mov
scas
jae
mov
cmp
ds
push
imul
sar
sbb
stos
aad
push
cmp
mov
mov
mov
mov
cwde
sti
fcom
pop
xchg
cwde
cmc
add
jb
(bad)
add
and
mov
nop
clc
out
xchg
pop
out
jecxz
ret
enter
add
mov
pusha
lods
mov
cmp
das
pusha
mov
jns
rcr
test
ss
shl
cld
imul
mov
icebp
push
loope
sbb
int3
mov
fcmovne
rcr
jb
push
pop
outs
xchg
clc
popf
sbb
xchg
das
push
xchg
fnstsw
ins
pop
repz
rcr
(bad)
pop
adc
retf
jmp
xchg
stos
jge
mov
adc
add
sahf
pop
dec
in
fsub
mov
aaa
or
pop
in
hlt
cmps
and
loope
cmps
fimul
scas
out
cmp
dec
lods
aad
(bad)
pop
lds
int3
and
inc
popf
bound
lahf
test
ficom
or
jmp
push
mov
stos
xor
xor
nop
add
ret
add
into
cmps
loop
mov
in
cmp
lods
repnz
cmp
lods
in
daa
scas
stos
test
dec
pop
mov
out
loopne
or
or
xchg
movs
ins
call
in
mov
sbb
dec
xchg
push
mov
jne
mov
in
das
adc
and
movs
mov
into
cmps
push
inc
lods
sahf
sub
xor
ror
sub
ja
add
push
pop
sub
mov
sub
jge
xchg
fwait
test
clc
push
vshufpd
and
bound
jae
std
repnz
mov
out
daa
push
add
test
pop
jmp
pop
adc
lea
sub
scas
xchg
sub
fstp
stos
loope
cmp
and
and
lds
mov
addr16
jb
xchg
pop
sbb
fadd
and
jns
push
test
cli
mov
inc
es
pop
inc
addr16
jae
adc
sub
push
cwde
ret
addr16
sahf
enter
adc
inc
mov
jb
retf
adc
jge
mov
pop
xchg
xchg
sbb
dec
mov
shr
int
jmp
pop
ret
arpl
fnstenv
inc
stos
stc
sub
(bad)
out
or
fsubr
cmp
lea
cmp
mov
xchg
test
sahf
sbb
pop
sub
std
xor
repnz
int3
cli
sub
repnz
xchg
jno
aaa
jl
in
and
mov
push
mov
ret
mov
imul
mov
ins
push
sub
add
mov
ins
dec
rol
xor
jge
mov
retf
sbb
mov
mov
das
push
(bad)
sbb
pop
sbb
js
les
push
and
adc
mov
ficomp
shr
jbe
and
inc
xlat
xor
aad
fstp
or
(bad)
push
in
add
add
or
imul
pop
rcr
xlat
std
add
popa
jae
(bad)
fdiv
dec
btc
aad
movs
add
mov
mov
aaa
dec
xor
mov
shl
in
in
pop
or
movs
jge
call
and
int3
mov
sub
mov
popa
scas
in
sub
sbb
jo
sbb
fcmovb
fnstenv
cli
sub
xor
rcl
lods
inc
sub
cmps
sub
ret
mov
cmp
in
(bad)
loop
daa
movs
test
call
xor
sbb
jns
mov
push
movs
sub
add
or
jae
js
jno
ret
adc
mov
aam
data16
loop
(bad)
scas
sub
push
loope
push
lods
mov
es
mov
out
push
add
pop
fnstcw
cmps
jg
lods
mov
or
push
dec
xchg
sahf
add
jbe
ffree
inc
push
pop
shr
addr16
cmp
in
lahf
pop
sbb
rcr
jmp
cmp
into
inc
not
fs
or
adc
inc
jno
(bad)
xlat
fdiv
addr16
cmp
in
outs
(bad)
sub
mov
enter
mov
test
pop
test
shr
dec
ss
in
test
cmc
lock
fs
inc
pop
pushf
push
sbb
jmp
or
ja
mov
mov
js
xchg
inc
adc
adc
jmp
daa
push
jle
jbe
fisttp
lods
(bad)
aas
jmp
movs
xchg
jg
push
(bad)
retf
dec
xchg
xchg
cmp
push
xor
popf
ss
mov
sub
aas
inc
sti
dec
push
add
mov
not
mov
push
or
mov
ror
adc
cs
fs
enter
push
stos
bnd
inc
mov
cwde
mov
lea
jmp
jmp
mov
lods
(bad)
cmp
mov
(bad)
xor
cdq
adc
xchg
sbb
cdq
inc
ret
mov
jb
cmps
and
retf
xchg
dec
icebp
or
sbb
cdq
mov
daa
cmp
data16
js
int
ss
xchg
call
ins
lods
outs
dec
inc
inc
push
add
inc
add
sti
cmc
shr
in
mov
ja
pusha
bswap
movs
jo
cmp
mov
push
ins
ss
inc
sub
rcr
retf
mov
mov
mov
scas
fld
call
xchg
pusha
add
or
jmp
(bad)
aad
push
leave
mov
mov
mov
stc
sahf
jmp
add
cmp
mov
jno
out
scas
sub
fld
jno
icebp
sub
clc
inc
dec
add
cmp
pop
mov
add
jmp
jge
ds
push
sbb
push
std
mov
addr16
fwait
pushf
push
pop
cmp
in
cmp
jo
adc
fs
mov
scas
enter
stos
add
outs
lds
lock
std
enter
inc
inc
outs
and
lods
mov
popf
or
in
pop
or
mul
jg
mov
sub
pop
or
pop
mov
cdq
or
je
gs
pusha
xchg
cmp
pop
push
outs
fisttp
adc
xchg
addr16
cmp
enter
stc
shl
jle
mov
sbb
cdq
retf
and
mov
and
das
data16
pop
inc
inc
stos
(bad)
jle
aaa
imul
test
in
dec
cmp
inc
loopne
or
pop
mov
mov
push
das
loopne
je
(bad)
jae
jmp
mov
stc
retf
in
sahf
xchg
std
out
sub
test
ds
shl
loopne
jnp
bnd
cli
mov
mov
adc
or
xlat
popf
mov
lea
not
push
push
jne
hlt
jmp
test
loopne
inc
loopne
in
sub
inc
xchg
jmp
inc
(bad)
out
inc
bnd
idiv
pop
fs
push
in
in
jecxz
sbb
pop
and
call
clc
mov
xor
ret
mov
fs
push
loope
cs
mov
cmp
pop
out
push
or
sub
jmp
sub
mov
adc
aaa
mov
imul
sbb
jnp
mov
adc
test
jb
bound
out
add
cmp
sub
push
add
setge
lds
(bad)
shl
and
out
data16
fadd
cmps
xchg
mov
pop
popf
popa
fstp
icebp
push
stos
cmp
add
imul
je
mov
sub
mov
pop
mov
and
push
push
and
xor
and
repz
les
jo
in
int
adc
loope
shl
mov
loope
int
loopne
popa
sahf
and
test
adc
sbb
(bad)
dec
adc
pop
in
cmps
test
(bad)
popa
dec
mov
xchg
leave
pop
ins
dec
and
sub
sahf
mov
push
cmc
dec
sbb
daa
jecxz
pushf
cmp
iret
inc
nop
dec
sub
and
or
mov
in
jle
dec
fidivr
aas
push
inc
sbb
loope
pop
pop
jg
fs
push
iret
ret
mov
xor
sbb
and
dec
cmp
dec
aam
(bad)
fidiv
fsubrp
or
dec
adc
jge
lods
sub
jnp
call
loope
call
ds
cli
ror
or
inc
xchg
or
int
adc
pop
jne
inc
xor
loop
mov
test
stc
xchg
xchg
add
fistp
xor
and
mov
je
in
xchg
jecxz
fucomi
mov
fisttp
and
and
cmc
fisub
dec
(bad)
stos
rcr
mov
test
adc
andps
jl
les
or
fistp
je
pop
dec
cwde
div
imul
push
mov
not
mov
sub
adc
add
imul
cs
sahf
fmulp
pop
popf
xor
std
clc
and
jmp
jle
(bad)
mov
sub
adc
jns
rol
stc
fs
(bad)
iret
int
cmp
fs
retf
cmp
fist
inc
or
sub
mov
mov
and
jl
mov
push
xlat
aad
call
jb
xchg
mov
jecxz
add
inc
inc
fwait
ror
add
lods
xchg
xchg
outs
inc
(bad)
and
test
clc
out
pop
imul
dec
mov
mov
push
(bad)
outs
test
add
jno
mov
sbb
repz
jle
xor
sub
xchg
scas
xor
jns
fild
in
or
mov
shl
xchg
mov
in
cmps
mov
das
push
movs
(bad)
sti
sub
repz
js
and
mov
out
mov
mov
jp
into
mov
mov
stc
mov
dec
sub
sub
jae
nop
pop
add
enter
rol
xor
add
mov
mov
imul
fcomi
mov
sub
rcr
loopne
sbb
xchg
scas
push
xor
sahf
aad
jo
adc
cmp
stos
push
aam
pop
sbb
out
fiadd
fimul
stc
pop
mov
jns
mov
fld
push
add
into
std
add
or
sahf
mov
loop
jns
or
in
or
sbb
mov
cmp
fisub
fstp
mov
adc
sbb
movs
out
lea
push
and
loope
fidiv
test
mov
(bad)
in
sub
inc
es
sbb
inc
dec
ins
mov
xchg
dec
and
gs
mov
sbb
mov
retf
mov
adc
sub
movs
test
jne
ins
sahf
sub
cmps
rcr
rcl
dec
sbb
jae
ret
dec
inc
jmp
call
and
xchg
shl
mov
push
mov
xor
adc
mov
hlt
(bad)
cld
push
xchg
repnz
ja
xor
mov
mul
mov
and
pop
aad
repnz
sbb
fimul
ficom
dec
add
xchg
retf
jo
fcomp
dec
jg
lods
ficomp
adc
xor
mov
stos
dec
pop
data16
inc
jmp
lea
pop
(bad)
imul
loopne
mov
(bad)
push
dec
and
xchg
cmp
fiadd
test
adc
fdivr
pop
add
ss
pop
lods
fld
xor
ss
icebp
repnz
jecxz
inc
shl
fadd
inc
addr16
ficomp
jecxz
mov
push
push
loope
test
jns
pop
mov
lods
dec
dec
std
retf
xor
loop
push
xor
dec
(bad)
scas
out
push
mov
cmps
jns
outs
mov
out
fnstcw
add
inc
fiadd
sub
xchg
sub
pop
xor
mov
or
ja
call
dec
mov
xchg
js
lock
repz
or
and
fild
add
xchg
out
imul
popf
jmp
vorps
sbb
ss
push
(bad)
fst
int3
stos
add
lds
jb
sbb
fdiv
mov
and
ret
in
bound
pop
out
ret
movs
sbb
add
jae
in
mov
cwde
and
xchg
lods
mov
jp
or
dec
dec
ret
pusha
call
adc
or
imul
pop
jg
jle
or
adc
add
les
jno
adc
cmc
stos
scas
cwde
sbb
xor
pop
pushf
xchg
jns
jne
dec
mov
arpl
dec
pop
mov
xchg
outs
pop
movs
lea
cwde
test
ins
ficomp
pusha
pop
jp
push
cli
mov
(bad)
mov
jnp
loope
imul
and
ret
je
sub
adc
or
pop
ja
jno
add
fs
mov
ret
mov
das
(bad)
mov
push
sub
imul
xor
add
bound
adc
xor
ins
ret
sub
shr
mov
(bad)
cld
enter
in
jmp
pop
lahf
in
bound
rol
cmc
pop
mov
adc
mov
or
mov
mov
or
sub
xchg
or
push
(bad)
add
outs
out
test
jae
std
xchg
div
mov
in
inc
les
mov
jmp
cmc
add
ret
dec
jle
test
fiadd
dec
mov
cmps
lahf
xor
nop
lods
call
sub
(bad)
aaa
jae
int
jg
pop
daa
mov
dec
mov
adc
cmp
pushf
pop
pop
fcmovnb
cs
dec
mov
fsub
ds
fistp
cld
adc
stos
xor
mov
sti
cld
shl
lock
xchg
out
aas
inc
sti
pushf
retf
aas
mov
data16
outs
pop
mov
test
or
ficomp
inc
jp
jb
mov
mov
cs
push
retf
cwde
xchg
fsub
and
cdq
cmp
xor
rol
(bad)
xor
dec
push
je
sub
sbb
and
mov
je
pop
retf
ret
mov
imul
shl
jae
mov
ds
dec
pop
push
shl
push
retf
imul
push
test
sub
dec
xchg
mov
fld
xchg
addr16
xor
std
adc
ins
mov
or
cmc
mov
pusha
inc
not
in
fwait
adc
ss
into
cmp
inc
inc
(bad)
stos
xlat
cmp
adc
and
cmp
lods
mov
fs
(bad)
cmps
lods
imul
pop
cmp
shr
lds
adc
std
icebp
mov
(bad)
fcomp
mov
(bad)
or
int
fidivr
cmp
pop
enter
adc
sbb
repz
retf
cmp
add
cli
mov
cmc
pop
xlat
push
mov
cmps
loopne
ins
loop
mov
mov
jo
out
pop
mov
push
dec
adc
add
out
jecxz
in
xor
xor
mov
sbb
aam
js
mov
adc
stos
loopne
cmp
mov
push
loopne
(bad)
out
or
dec
es
mov
and
xchg
lds
lahf
lock
adc
shr
xor
enter
inc
imul
sbb
dec
mov
cwde
and
les
cli
pop
dec
stc
pop
(bad)
mov
out
and
mov
mov
xchg
jo
scas
and
ret
fiadd
pop
retf
out
mov
fcmovne
lea
sar
es
mov
jns
xchg
div
inc
and
pushf
cmps
xor
mov
push
mov
fs
and
shr
cmps
push
xor
pop
shr
pop
bound
in
mov
jbe
rcl
dec
inc
pop
(bad)
addr16
xchg
mov
push
xor
push
inc
cmovae
mov
lods
or
pop
adc
mov
and
or
lock
adc
sub
data16
out
xchg
cmp
out
sub
pop
sbb
aam
sub
adc
push
xor
movs
(bad)
inc
xor
or
inc
in
inc
dec
jge
mov
pop
jnp
call
jnp
rcl
xchg
sub
aaa
lahf
pop
(bad)
call
lahf
add
inc
mov
fadd
movs
ins
sahf
cli
or
iret
fdivr
jns
sub
test
xor
cmp
jno
mov
inc
jo
sbb
int3
mov
mov
sub
pop
ret
mov
sbb
hlt
repz
and
sar
aaa
push
in
lea
call
and
inc
stc
inc
lds
pop
mov
imul
mov
repz
or
daa
mov
lds
mov
mov
mov
out
and
pop
cmp
dec
mov
mov
fwait
jno
(bad)
and
sub
add
jbe
cmp
pop
movs
(bad)
lock
and
xchg
xchg
and
imul
jmp
es
mov
ins
sbb
inc
dec
jl
push
popa
lods
mov
cli
jbe
aaa
pushf
cs
sub
ins
mov
cs
jge
sbb
jnp
jno
pusha
(bad)
iret
pop
xor
imul
jnp
mov
mov
jge
and
int3
ror
xor
jge
cld
test
mov
cmp
xor
adc
(bad)
sub
in
mov
pop
inc
inc
addr16
fstp
mov
ja
retf
sbb
repz
mov
and
adc
shl
dec
mov
in
push
push
loope
push
jle
mov
repnz
movs
(bad)
sahf
xsaveopt
pop
nop
in
push
and
cs
(bad)
adc
push
cmp
cld
mov
pushf
jnp
repz
jg
shl
test
sbb
shr
xor
sbb
ror
scas
and
ds
std
push
popa
xchg
mov
rol
loop
adc
retf
add
scas
(bad)
es
cwde
mov
je
pop
pop
jns
dec
xchg
jge
(bad)
or
mov
jle
in
hlt
repnz
or
ror
cli
cmp
out
cld
scas
sub
movs
pop
sub
mov
in
add
push
cdq
in
mov
mov
xor
loopne
outs
shl
movs
and
mov
xchg
mov
push
cli
jne
xor
shl
imul
add
mov
(bad)
xchg
pusha
mov
popf
xor
sbb
nop
jmp
mov
mov
or
jecxz
dec
pop
mov
iret
fs
xor
aad
pop
sbb
pop
inc
jge
sub
mov
pop
mov
adc
jno
ja
mov
clc
jmp
jp
push
or
div
lea
es
neg
mov
movs
sbb
dec
sbb
add
jmp
mov
add
inc
mov
shl
mov
jg
cmps
(bad)
push
mov
mov
std
mov
jo
push
xor
(bad)
mov
sub
mov
nop
mov
gs
jnp
outs
dec
cdq
aas
(bad)
pop
mov
sub
push
out
mov
mov
mov
xor
xchg
ror
mov
cmp
shl
sbb
xor
inc
aas
(bad)
mov
add
jmp
mov
out
les
or
xor
dec
cmps
fld
jl
mov
add
or
mov
and
stc
or
pop
test
xchg
out
stos
mov
int3
xchg
repz
icebp
jmp
jg
js
cs
mov
call
mov
dec
xchg
push
jecxz
push
stc
mov
retf
adc
fisub
and
scas
cmps
xor
xlat
sar
xchg
out
fst
push
nop
jno
mov
inc
ins
pushf
ja
out
fimul
mov
xchg
enter
mov
(bad)
scas
mov
mov
iret
inc
add
cmp
fistp
jb
scas
mov
ret
add
dec
hlt
mov
mov
mov
frstor
mov
fcomi
add
fnsave
enter
repz
mov
in
in
jp
out
imul
in
loop
inc
pop
inc
ins
mov
or
out
imul
mov
repz
or
test
jmp
dec
mov
inc
mov
pop
rcpps
add
inc
neg
mov
out
jae
and
sub
ins
je
pop
mov
lock
push
arpl
cmps
retf
test
add
lea
inc
nop
imul
inc
aas
daa
jmp
xchg
cmps
test
das
outs
mov
out
inc
and
sub
ja
into
sbb
xchg
test
mov
lds
ret
push
data16
jp
and
mov
jl
pop
sub
popa
xchg
int
push
loop
ror
mov
(bad)
fst
inc
cwde
and
nop
rol
out
aas
dec
inc
cs
ret
sbb
dec
xchg
imul
lahf
ret
mov
je
jo
(bad)
test
dec
mov
xor
call
out
cmp
idiv
dec
xor
pop
inc
mov
xchg
cli
arpl
jecxz
in
lds
das
aad
jmp
fcomp
pop
in
sub
adc
mov
jecxz
sbb
dec
jae
push
lods
xor
xor
data16
mov
fs
pop
jbe
pop
mov
or
and
loop
mov
(bad)
adc
mov
jbe
add
push
xchg
adc
jbe
and
jecxz
retf
mov
mov
popf
icebp
mov
cmp
and
loopne
xchg
movs
jbe
push
sbb
ds
cmp
cmps
xchg
sub
outs
ins
mov
mov
add
not
push
push
xchg
xchg
fmul
add
(bad)
jns
pop
mov
ins
stc
cmp
and
(bad)
xor
inc
push
pop
(bad)
sub
mov
xor
add
jmp
jo
hlt
add
dec
mov
pop
pop
push
pushf
mov
mov
test
add
inc
ins
cli
inc
(bad)
add
clc
loop
in
dec
aad
dec
mov
pop
loopne
push
xchg
push
adc
push
arpl
mov
popf
sbb
inc
cmp
xor
out
js
sbb
sti
dec
mov
pop
mov
sti
cmp
shl
mov
in
cmp
jnp
test
jl
mov
js
and
adc
nop
neg
(bad)
inc
call
iret
inc
xor
call
icebp
pop
cld
imul
lock
test
test
sbb
test
lea
loope
dec
outs
cmp
dec
push
fist
hlt
inc
jae
push
arpl
mov
pop
movs
out
daa
dec
or
int
js
clc
add
mov
mov
lahf
jb
pusha
mov
rcl
xor
sub
std
dec
inc
jns
in
ins
aad
push
pop
sbb
(bad)
(bad)
pop
and
dec
out
pop
mov
retf
add
retf
inc
cmp
out
fistp
mov
adc
sbb
xchg
test
mov
cdq
inc
ins
test
adc
adc
dec
js
xchg
xor
imul
out
mov
out
add
pop
xor
jg
rcr
or
retf
cmps
push
adc
mov
mov
cmp
dec
aam
pusha
add
outs
and
pop
test
mov
jp
xchg
inc
in
inc
mov
cmp
(bad)
in
sub
imul
sbb
or
push
std
shr
js
dec
adc
add
sub
adc
sbb
jb
jmp
movs
sbb
outs
sub
imul
dec
pop
and
adc
fs
adc
enter
jae
dec
scas
xlat
in
fistp
cmp
nop
shl
sub
loopne
stos
cmps
add
pop
int
aas
add
xchg
retf
aad
sbb
xchg
lds
jns
xor
mov
out
lahf
cmc
and
push
sub
call
popa
xor
and
mov
cmp
cmp
rcr
sbb
ins
mov
retf
xor
cmp
push
sub
cmp
fst
clc
and
(bad)
ins
mov
mov
and
les
xchg
and
dec
xor
aad
jecxz
and
jmp
inc
aad
mov
xchg
jb
adc
std
xchg
sbb
adc
cdq
fxch
push
push
or
add
jge
lahf
pusha
jl
in
bound
sub
inc
jge
fnstcw
jne
jns
inc
repz
and
fild
aas
fadd
enter
outs
popf
fstp
and
mov
xchg
xchg
xor
push
popa
vphaddubw
mov
add
mov
push
adc
pop
rol
xlat
mov
mov
mov
pop
mov
mov
sub
jo
jmp
cmp
sahf
mov
adc
sub
inc
je
mov
cmps
arpl
or
stc
mov
fwait
and
outs
mov
mov
push
clc
fld
inc
iret
mov
ja
mov
js
cld
jecxz
std
push
inc
push
mov
in
and
dec
mov
mov
ret
adc
test
dec
push
jp
jp
xor
test
xor
inc
fstp
sub
pop
scas
xchg
call
cmp
push
out
retf
sbb
mov
fs
add
pop
lds
adc
inc
xlat
mov
cmp
inc
add
xor
bnd
addr16
dec
jb
loopne
test
(bad)
das
inc
movs
mov
xchg
dec
cs
movs
push
xor
scas
jbe
pop
push
adc
dec
out
push
jg
add
pop
cmps
xchg
adc
sbb
sbb
aad
or
and
(bad)
fs
(bad)
fcomi
jnp
and
cmps
arpl
add
sbb
loope
or
fucomp
jne
jo
push
mov
loope
sahf
sahf
or
lods
jnp
pusha
ror
xor
jl
mov
cmp
mov
stos
pop
fiadd
repz
pextrw
cmp
mov
mov
rcl
cmp
jmp
mov
push
mov
or
dec
cld
mov
and
jns
jmp
mul
jb
cs
mov
ror
push
cmp
js
(bad)
mov
pop
jle
aam
popa
inc
pop
scas
mov
jge
push
xchg
jae
stos
mov
jbe
and
out
and
adc
retf
mov
dec
inc
jmp
inc
jl
fcmovb
fld
repz
or
mov
ja
mov
cld
push
cmp
cmp
mov
jbe
push
xor
dec
movs
push
aad
dec
inc
sbb
dec
sahf
fs
jp
mov
rol
mov
inc
(bad)
push
jno
in
pop
in
icebp
scas
mov
jge
dec
fst
dec
dec
push
out
in
jb
das
int
pop
pop
sbb
sub
retf
adc
ss
rol
mov
iret
and
xchg
into
mov
imul
call
mov
(bad)
dec
and
rol
jns
or
lock
push
shl
jb
mov
and
into
repz
in
fisttp
jg
push
mov
jmp
jo
mov
and
dec
imul
aaa
adc
cmp
cmc
jmp
mov
sub
(bad)
mov
(bad)
lock
mov
cmps
(bad)
in
dec
adc
leave
imul
xchg
jo
call
xchg
in
dec
test
xchg
popf
aaa
push
sub
jb
mov
mov
pop
inc
loop
xor
push
(bad)
add
repz
sbb
jmp
xchg
push
dec
push
bound
ss
or
pushf
test
int
rcl
or
out
xor
stos
jp
enter
ja
test
xchg
retf
daa
movs
iret
aaa
ss
mov
icebp
and
mov
mov
dec
pop
sbb
in
fadd
sar
outs
pop
stos
push
push
add
(bad)
or
cmps
in
dec
pusha
lods
dec
paddw
xchg
jmp
(bad)
push
push
rcr
and
scas
not
pop
loopne
mov
xchg
xlat
xchg
push
pop
jne
xchg
jge
mov
pop
and
mov
(bad)
mov
cmps
and
shr
mov
mov
and
add
inc
daa
mov
arpl
mov
add
cmp
xchg
aas
out
fwait
xor
dec
pop
nop
and
or
iret
mov
test
shl
(bad)
pop
mov
and
add
jo
std
call
outs
xchg
or
push
or
sub
pop
mov
or
xchg
out
out
aaa
jns
(bad)
cmps
cwde
fiadd
cld
push
jo
scas
and
(bad)
jb
dec
adc
xor
mov
push
inc
nop
enter
scas
std
cmp
mov
int
sbb
jmp
rcr
fidivr
mov
(bad)
into
mov
fimul
cmp
add
daa
push
lock
stos
sti
mov
icebp
push
mov
dec
aaa
enter
fst
sub
lods
sub
cmp
je
push
pop
cmps
push
dec
dec
pop
adc
jg
iret
rcl
mov
outs
ja
fwait
xchg
imul
mov
addr16
out
stos
inc
inc
cmp
add
hlt
inc
pusha
xor
imul
adc
jecxz
mov
out
pop
xlat
cmp
pop
ret
hlt
cs
sahf
cdq
dec
std
(bad)
xor
cmp
jae
(bad)
jg
dec
xor
mov
inc
repnz
fdivr
inc
mov
into
add
fbld
repnz
clc
sub
sub
into
retf
rep
mov
ins
std
push
push
inc
(bad)
mov
idiv
(bad)
adc
and
xlat
imul
push
ss
mov
call
mov
js
scas
movs
fdiv
int3
dec
cmp
adc
out
imul
in
loop
mov
sub
ret
aaa
int3
mov
pop
je
mov
int3
cmp
sbb
sub
mov
(bad)
cmp
fwait
in
push
xchg
test
cld
repnz
icebp
gs
push
(bad)
ffreep
(bad)
jl
mov
xchg
cmp
call
lds
pop
out
mov
xchg
sub
out
mov
shl
xor
adc
mov
gs
pusha
dec
pop
sub
stc
sbb
xor
cmp
and
(bad)
arpl
mov
push
xor
push
addr16
cmp
and
dec
ins
xor
ja
xchg
mov
mov
in
in
push
sbb
or
out
pop
pop
sbb
mov
push
push
sub
outs
or
js
das
ins
scas
shl
pop
mov
and
mov
sbb
int3
pusha
les
fld
xor
jb
lock
call
into
pop
jb
push
or
mov
or
sar
lahf
call
mov
pop
pop
ins
xchg
fcmovb
cmp
out
cmc
rol
sub
int3
fimul
mov
test
adc
stos
xor
aaa
mov
or
outs
inc
mov
xchg
aas
out
cmps
add
nop
fbstp
std
call
(bad)
sub
sbb
pusha
(bad)
leave
jnp
ds
sbb
test
je
sahf
sub
xchg
add
cdq
mov
shr
call
push
das
push
cmp
daa
test
mov
jnp
inc
in
xor
(bad)
into
mov
js
out
mov
mov
retf
add
xchg
pop
adc
shl
or
sub
pop
maskmovq
div
sbb
sub
outs
rcr
pop
pop
push
cs
jno
or
adc
xchg
(bad)
pop
or
popf
pop
cmps
sub
jnp
call
push
aad
fwait
sbb
inc
test
jp
es
and
daa
mov
cmp
adc
icebp
push
dec
xchg
ss
rcr
popa
in
push
xchg
xchg
fdiv
xchg
aaa
stos
test
cmps
mov
retf
cmps
je
xchg
icebp
cdq
pop
test
data16
pop
js
pop
mov
test
mov
in
pop
neg
pop
(bad)
and
(bad)
scas
xor
and
mov
jae
div
xor
cwde
inc
fcmovne
mov
inc
ja
mov
mov
push
lahf
in
xor
xlat
cmp
ins
mov
jne
jmp
jno
lods
test
imul
dec
jge
push
sbb
cmp
push
in
icebp
cwde
push
shl
add
jns
sub
movs
inc
out
aaa
inc
hlt
and
or
xchg
mov
retf
(bad)
pushf
mov
fcomp
or
inc
retf
push
push
xor
fucom
fdiv
out
mov
into
jno
fst
test
sahf
dec
imul
add
add
dec
shr
jle
ret
sub
rdpmc
mov
mov
xchg
xchg
out
mov
jo
dec
mov
ret
ffree
add
fisttp
into
mov
ds
inc
mov
enter
stc
push
addr16
xor
inc
inc
inc
jnp
adc
jle
jo
je
(bad)
dec
inc
lahf
xor
ret
cmps
mov
nop
mov
into
fnstenv
call
mov
dec
aam
arpl
xchg
pushf
mov
mov
xchg
ss
popa
push
jae
mov
cli
push
jnp
pop
dec
dec
cmp
or
xchg
ins
inc
pop
mov
call
mov
or
pushf
movs
arpl
mov
xchg
iret
ret
cmc
pop
xor
loop
mov
mov
cld
hlt
jmp
xchg
cmp
retf
std
xlat
cld
mov
sti
repnz
ror
aas
or
pop
outs
test
es
xor
ret
iret
mov
call
in
jbe
sub
arpl
fs
adc
inc
or
pop
dec
sbb
sub
fs
push
arpl
xchg
xor
mov
ins
ds
mov
popf
bnd
or
push
ss
ret
neg
lock
inc
xor
pop
sar
pop
ficom
cmps
or
add
int
push
dec
jg
ror
or
sbb
(bad)
and
clc
dec
dec
rol
sbb
push
stos
mov
not
repnz
adc
xchg
add
pop
or
jae
sub
out
scas
push
cli
pop
lods
jl
out
xor
jns
jp
cmp
data16
mov
aaa
push
add
dec
xor
cmps
or
test
dec
retf
in
xor
int3
mov
cmp
inc
rcr
xchg
pop
or
ins
cmc
sti
aad
fild
js
adc
add
test
and
xchg
ret
adc
pop
enter
pop
pushf
sub
popf
pop
shl
push
push
xchg
(bad)
pusha
adc
lds
adc
outs
push
jg
rcr
stc
icebp
enter
xchg
repnz
loopne
lods
push
(bad)
nop
cmp
cmp
rol
stos
and
mov
or
sub
call
test
pop
mov
inc
xchg
and
(bad)
in
mov
movs
jmp
sbb
and
sti
outs
gs
pushf
and
sub
jno
mov
bound
rcr
inc
cmps
in
mov
fdiv
ss
movs
scas
mov
out
mov
movs
or
cdq
inc
mov
xor
fdivr
lods
sub
in
xor
popa
push
add
or
in
jecxz
xchg
xchg
add
push
sbb
xchg
sbb
cmps
dec
scas
ss
jle
mov
bound
cmp
mov
jbe
fcom
mov
movs
in
rol
jo
test
inc
test
sbb
push
xchg
jmp
add
scas
rol
dec
dec
sbb
and
pop
mov
in
sbb
sbb
aaa
push
or
pop
cmp
fidivr
xor
push
test
ins
mov
jmp
and
sar
jle
mov
(bad)
dec
popw
call
or
sub
and
cwde
dec
lods
lds
sub
jno
enter
push
mov
int3
stc
sbb
bsf
cmp
or
fld
aaa
and
pop
and
mov
pop
cmp
xchg
mov
into
xchg
or
mov
or
jo
cmp
lods
pop
jmp
and
and
shl
adc
dec
sub
rol
outs
mov
or
jp
cmp
movs
sbb
mov
inc
add
fsub
adc
add
js
add
inc
dec
fcomp
sbb
outs
push
out
es
mov
sub
jle
jle
aad
adc
jne
shl
sub
adc
bswap
dec
inc
outs
mov
mov
js
jl
frstor
jne
and
ds
fld
jge
shl
sub
retf
mov
outs
add
or
adc
xor
into
(bad)
shr
test
jge
xor
pop
inc
adc
ret
fidivr
push
into
lods
adc
inc
int
fs
outs
pusha
hlt
sub
fwait
jnp
(bad)
popa
hlt
or
mov
and
ins
(bad)
xchg
add
xchg
and
ja
mov
int
dec
nop
icebp
xor
sahf
xchg
test
xor
xchg
test
popf
sbb
call
pop
icebp
das
dec
cmp
test
ins
loopne
mov
cmps
sti
xor
outs
test
jmp
inc
ja
jbe
movs
lods
xchg
push
sbb
sub
rcr
cld
cmps
cld
dec
dec
adc
mov
lock
jmp
fidivr
clc
sahf
sbb
mov
jl
adc
leave
jmp
(bad)
cld
outs
dec
push
jno
mov
pop
imul
mov
mov
pop
adc
repnz
in
cmp
push
call
jmp
adc
push
push
(bad)
add
pushf
pop
adc
imul
pop
ins
aaa
xchg
stc
push
xchg
and
mov
int
jge
mov
inc
xchg
ss
pop
les
jnp
inc
adc
inc
enter
sbb
retf
outs
fisttp
fimul
or
mov
pop
ret
push
cmps
or
jo
dec
test
cmps
dec
push
(bad)
std
jnp
(bad)
pop
imul
jecxz
mov
outs
int
sub
dec
adc
xchg
popf
sbb
icebp
mov
mov
sahf
sub
imul
push
cli
cmp
sbb
fwait
pop
retf
scas
and
push
xor
fwait
xor
rcl
jecxz
cmp
add
xor
xor
fs
xor
or
mov
ins
data16
xor
cmp
push
retf
daa
in
pop
mov
add
xchg
add
sahf
out
scas
jmp
stos
sub
adc
lods
loop
test
mov
pop
mov
push
or
dec
vpaddusb
movs
ret
cmp
in
adc
pusha
sbb
movs
xor
xchg
cs
in
lods
stc
not
fst
sbb
push
push
cld
mov
outs
pop
retf
scas
fwait
test
out
or
inc
sahf
jmp
push
sbb
inc
xor
jno
test
jne
or
std
cli
cmp
push
ret
test
mov
mov
xor
push
data16
rcr
mov
icebp
sbb
mov
jo
(bad)
jle
push
(bad)
lock
frstor
push
adc
xchg
jbe
jno
inc
xor
imul
jnp
dec
push
mov
pop
adc
(bad)
int3
mov
xchg
retf
adc
daa
jno
push
xor
xchg
mov
retf
movaps
lds
lods
mov
lds
sahf
push
cli
mov
fsub
cmp
leave
mov
add
scas
pop
call
shl
ja
xor
xchg
or
mov
phaddd
mov
push
inc
clc
cmp
popf
aaa
sub
lds
jl
div
enter
nop
ret
(bad)
jge
lods
leave
icebp
add
icebp
call
mov
stc
imul
fsub
jp
stos
inc
sbb
and
dec
push
and
mov
push
mov
lea
push
push
movs
push
ds
std
jg
fstp
lds
enter
(bad)
daa
cld
clc
add
outs
or
pop
sub
adc
fist
in
sbb
dec
xor
(bad)
xchg
fdiv
xchg
pop
mov
mov
(bad)
sub
loop
mov
pop
xor
add
xchg
ud0
shr
int3
retf
pop
mov
sti
test
cs
sbb
mov
push
xchg
call
test
mov
sub
push
out
push
ret
xchg
cmc
aaa
inc
aad
push
aad
push
mov
jo
imul
add
in
std
nop
cwde
out
out
bound
test
sub
cld
xchg
retf
push
add
dec
sbb
pop
pop
jp
sub
loopne
outs
xchg
iret
test
popa
or
test
scas
iret
cwde
push
sbb
in
inc
mov
or
rcl
add
test
ds
xchg
and
pop
xchg
outs
test
pop
inc
jp
cmp
dec
aam
cmp
mov
inc
cmps
fdiv
scas
push
out
lods
sti
adc
(bad)
jbe
movs
fcomi
imul
jns
cdq
or
retf
mov
pop
loopne
aaa
sbb
mov
pop
mov
stos
cmc
xor
cmps
mov
and
enter
add
retf
ret
or
out
xchg
or
or
cmp
call
mov
bnd
pop
scas
sbb
bound
or
mov
call
mov
pop
sbb
jmp
(bad)
das
imul
xchg
or
push
div
enter
test
ja
and
imul
jo
loope
cmp
jle
stos
shl
push
inc
mov
shr
cmp
ds
inc
in
sbb
rcr
stc
jns
push
popf
loopne
ret
in
adc
sbb
stos
ror
inc
imul
and
das
dec
repz
or
push
aad
fiadd
test
mov
mov
cmp
gs
add
adc
mov
mov
test
pop
movs
adc
enter
sbb
adc
sub
jmp
xor
mov
or
mov
ret
aas
std
lahf
movs
and
push
aam
ficomp
cmp
outs
xor
jmp
xor
inc
das
(bad)
repz
pop
sahf
or
cmp
jecxz
cmp
jmp
ret
loope
xor
cs
mov
mov
mov
push
jmp
or
repz
cmp
mov
arpl
jns
fld
inc
pop
cmp
adc
sbb
sar
(bad)
cmp
inc
clc
aam
fldlg2
and
mov
mov
scas
pop
and
or
aad
inc
es
not
into
les
sbb
fadd
xchg
pop
jne
mov
imul
adc
in
js
mov
sub
jp
outs
out
pop
addr16
popa
mov
mov
adc
stos
out
call
cmp
stos
cmp
in
(bad)
fcomp
gs
and
mov
cmp
cld
ret
mov
inc
aam
lods
dec
leave
(bad)
mov
leave
(bad)
fstp
sub
test
mov
call
pop
and
xor
scas
add
xchg
daa
jp
push
pop
fisttp
xchg
jbe
cmps
mov
inc
fidiv
scas
lahf
jae
cmps
adc
push
xor
mov
mov
xor
hlt
(bad)
fdivr
and
outs
pushf
xchg
std
inc
xor
jecxz
int
jbe
mov
and
sar
outs
xchg
inc
add
(bad)
stos
std
mov
test
mov
xchg
cmp
push
(bad)
into
push
or
movs
xchg
jb
mov
jns
sbb
fld
lock
aam
adc
cmp
jno
mov
retf
or
push
xor
adc
xor
add
add
or
push
mov
out
pop
mov
sub
icebp
rcl
push
xchg
jecxz
mov
or
jp
cmp
jmp
push
pop
or
dec
int3
sbb
cld
mov
retf
scas
or
stos
pop
pop
(bad)
jae
iret
add
jecxz
xchg
sbb
fs
fabs
sbb
inc
xchg
xor
sbb
aaa
sbb
sub
out
inc
dec
cmp
mov
jle
sbb
lahf
ss
jmp
pop
xor
jbe
mov
xchg
xchg
retf
xchg
mov
push
enter
in
xchg
dec
dec
cmp
jp
xchg
aas
(bad)
xchg
add
xor
not
sbb
mov
inc
inc
lds
sbb
inc
ss
jae
cmp
add
stos
fist
sbb
xchg
popa
pop
jne
data16
jmp
jnp
aad
mov
push
iret
mov
repnz
push
iret
cmp
mov
push
loop
adc
adc
cdq
inc
daa
or
mov
mov
and
ja
mov
fld
push
xchg
adc
inc
pop
dec
inc
scas
leave
jp
mov
add
lds
inc
fisttp
sub
cmp
xchg
loopne
push
push
mov
enter
xchg
jo
je
push
mov
jno
fmul
cmp
aas
out
outs
xchg
sahf
or
mov
xor
cld
xchg
aas
sbb
fcmove
sub
lea
sub
sbb
mov
cwde
cmp
xor
cdq
mov
dec
sbb
inc
lock
and
sub
ins
push
mov
pop
call
fs
div
mov
jmp
pop
mov
push
add
pop
loop
mov
clc
scas
stos
pop
aas
ja
adc
cmp
jmp
adc
cmc
rcr
adc
sbb
xchg
gs
fisubr
jo
push
inc
xor
inc
sub
cmps
or
mov
aam
(bad)
sub
adc
pop
adc
push
sbb
shl
sbb
popf
xchg
add
cwde
sbb
mov
popa
and
and
cmp
mov
sbb
push
mov
sub
fmul
xor
and
icebp
imul
xchg
out
push
adc
fnstcw
xor
and
sub
retf
les
data16
shl
or
adc
(bad)
test
jge
xchg
mov
dec
popa
push
cmps
xor
std
mov
adc
test
push
jmp
inc
jnp
pop
jne
pop
ja
lods
pop
sbb
mov
xor
scas
mov
ins
pop
dec
cld
fidiv
inc
jge
addr16
enter
and
mov
cmp
inc
or
dec
aam
add
js
jns
and
addr16
pop
sbb
sub
ja
aad
ret
push
(bad)
lods
jecxz
sar
aas
jb
sub
mov
fld
mov
pop
inc
outs
push
fsubr
fwait
xchg
idiv
aad
xchg
inc
add
xor
fild
div
repnz
aas
mov
fidiv
push
xor
ss
stc
mov
sub
fld
stos
or
xchg
fwait
dec
leave
sbb
sbb
sbb
and
outs
outs
and
(bad)
shr
outs
inc
dec
add
(bad)
mov
dec
repnz
addr16
mov
nop
fwait
sub
push
jbe
out
call
dec
popa
push
push
sbb
add
or
jge
and
repnz
(bad)
fstp
cmp
cmp
imul
cmp
xor
xor
cmp
clc
mov
mov
fcom
push
scas
stos
aam
cli
out
(bad)
cmp
int
adc
not
jp
mov
push
aad
push
mov
movs
out
and
jmp
xchg
out
jmp
jge
jb
xlat
adc
scas
adc
out
and
add
inc
or
and
or
adc
mov
jp
xchg
ret
(bad)
mov
stos
repz
ret
push
push
sbb
xlat
mov
jae
pop
push
imul
jg
shr
add
xchg
aam
iret
mov
mov
dec
dec
and
imul
cmp
xchg
hlt
pop
pop
fcmovu
jbe
add
in
scas
fild
(bad)
pushf
pop
jge
or
xchg
adc
nop
xchg
cmp
(bad)
unpcklps
jle
dec
pop
mov
push
xchg
outs
ds
fild
add
jmp
jnp
cld
add
mov
jo
pop
adc
(bad)
jmp
bound
inc
push
(bad)
rol
mov
in
sub
xchg
mov
and
push
and
pop
outs
and
push
dec
leave
pop
movhps
lss
dec
lea
shl
lods
or
inc
add
fsubrp
ins
xchg
xor
fisub
jge
stc
pop
ret
cmc
not
xchg
push
xchg
xchg
repnz
inc
and
or
push
mov
sti
fisttp
fdiv
daa
int3
aas
adc
and
inc
jnp
sub
lods
sbb
shr
icebp
xor
std
je
mov
mov
pop
sub
xor
ja
xchg
or
cli
add
pusha
loop
jl
cmp
mov
nop
fcomp
imul
in
arpl
retf
xor
and
outs
(bad)
sbb
pop
adc
cdq
jo
sti
jbe
iret
push
sti
loop
rol
sbb
xchg
jmp
adc
xor
dec
or
movs
pusha
hlt
mov
pop
pop
and
mov
iret
xchg
ins
ret
cmc
imul
ror
add
scas
dec
mov
(bad)
or
je
pop
js
out
ds
or
into
fcmovne
inc
pop
pop
inc
aas
pop
bound
mov
cld
cli
cmps
ror
int
sbb
inc
xchg
scas
ror
jbe
gs
xlat
clc
out
in
adc
test
dec
nop
adc
addr16
mov
xchg
mov
dec
ins
mov
das
int3
mov
leave
mov
xor
and
push
call
dec
sub
sub
call
pop
mov
sbb
jle
sub
push
scas
cdq
inc
dec
rcl
leave
mov
push
xlat
ds
mov
xchg
cdq
mov
aaa
pop
xchg
lahf
pop
and
jg
mov
sub
push
(bad)
or
sbb
test
je
(bad)
cs
movs
jge
pop
pop
(bad)
in
in
pop
fadd
out
add
xlat
iret
push
icebp
(bad)
fdiv
sub
jge
es
daa
push
adc
rol
in
xor
lods
xchg
mov
stos
or
add
nop
mov
ror
or
sub
adc
or
addr16
sbb
xor
out
in
or
adc
dec
enter
jmp
jmp
sar
xchg
add
test
pop
lock
pop
adc
inc
lods
add
xchg
xchg
in
in
push
cmp
mov
cmp
ja
add
and
cmp
jmp
fs
mov
mov
mov
(bad)
jbe
fst
mov
dec
sbb
adc
data16
xchg
sub
imul
(bad)
jg
xchg
out
push
pop
(bad)
pop
inc
pop
fstp
out
loopne
fidivr
pusha
mov
cmp
inc
xchg
pop
xor
cmc
pop
mov
or
push
mov
enter
popa
or
call
fdiv
add
mov
lock
push
int
jmp
pushf
jmp
daa
pmaddwd
inc
(bad)
xor
inc
push
pop
loop
adc
pop
add
(bad)
hlt
cli
mov
sbb
add
push
push
daa
inc
jmp
cmp
inc
cwde
dec
jae
inc
jge
mov
mov
enter
cdq
stos
popf
mov
and
mov
mov
retf
and
and
or
xchg
cmp
sbb
sub
inc
cmp
cwde
int3
add
popf
mov
mul
in
jmp
add
push
(bad)
or
aad
sub
lods
ret
les
aad
rol
pop
xchg
jg
adc
cdq
rcr
sub
xchg
lods
in
pop
push
(bad)
js
mov
jmp
or
(bad)
aas
cmp
mov
cmc
adc
cmp
ret
movs
mov
xchg
fcomp
pushf
addr16
mov
sbb
sti
dec
dec
cmp
inc
out
aaa
(bad)
jl
pop
mov
inc
clc
cmps
jge
leave
loope
dec
test
push
and
xor
ss
das
in
adc
inc
xor
mov
mov
pop
add
and
jle
fild
pop
outs
push
adc
lahf
jne
in
mov
push
jno
xchg
imul
je
fwait
cmc
adc
jb
inc
sbb
bound
adc
mov
sub
adc
rcl
jno
ret
or
xor
pop
(bad)
in
sbb
cld
jmp
in
mov
jp
xor
adc
mov
test
sahf
dec
jne
cmps
xchg
or
and
(bad)
aam
adc
adc
mov
fisubr
jmp
or
inc
rcr
fstp
xor
loop
pop
jge
dec
fld
daa
jb
fnsave
test
or
jo
jmp
add
jns
pop
mov
(bad)
dec
hlt
mov
xor
shl
push
dec
mov
inc
pusha
push
dec
or
aaa
aad
mov
and
cmp
mov
imul
retf
or
mov
dec
scas
(bad)
cmp
adc
adc
pop
int3
push
js
mov
loop
mov
push
and
or
aas
cmp
call
pop
pop
pop
fst
(bad)
or
in
fidiv
lock
mov
out
ret
retf
test
push
aad
mov
sbb
sub
cdq
dec
dec
sub
bound
out
inc
loop
bnd
xchg
pop
aad
sub
out
cmps
and
cmps
or
ret
imul
test
push
mov
dec
nop
adc
int
lods
(bad)
or
push
stos
in
fisubr
jge
jnp
xchg
adc
repz
(bad)
jl
xchg
xchg
dec
retf
pusha
lods
add
xor
fild
std
mov
cs
xchg
(bad)
jl
push
push
cli
test
mov
(bad)
out
mov
mov
in
addr16
mov
sbb
mov
pop
xchg
retf
jb
lds
aad
ret
pop
cmp
or
cmps
and
scas
into
fcom
movntps
enter
push
add
adc
aaa
push
jnp
pop
adc
mov
aad
pop
mov
ficomp
jns
cdq
sub
imul
sbb
xor
rcl
push
xchg
sbb
cmps
fist
jle
fld
adc
je
mov
xor
outs
or
stc
sub
cmps
push
pop
mov
out
xor
jecxz
das
jge
out
mov
ja
and
xor
or
add
cdq
loopne
push
bound
push
scas
iret
push
jecxz
and
jmp
cli
cmp
pop
sti
je
das
add
cli
jg
ror
leave
fist
sbb
fadd
xor
ins
dec
ja
push
pop
or
mov
sbb
shr
pop
cmps
mov
and
ficomp
adc
dec
outs
loop
push
cmp
xor
je
out
sbb
call
mov
ins
pop
pushf
clc
outs
out
mov
xor
push
adc
add
jbe
dec
bound
mov
in
cmc
pop
and
pop
fbld
ins
pop
or
dec
add
out
test
pop
jmp
mov
sub
mov
in
dec
xor
add
or
test
mov
mov
jmp
jmp
mov
aad
pop
and
adc
jmp
sub
adc
loope
xchg
rol
mov
hlt
jp
push
test
cdq
cmps
aam
daa
and
mov
jmp
adc
rol
repnz
dec
pushf
adc
xchg
push
jns
cmp
in
xchg
fwait
das
cmp
retf
mov
leave
mov
jo
push
xlat
enter
je
or
adc
or
sub
ins
enter
lods
or
dec
mov
add
sbb
cli
pop
xchg
out
sub
lods
rol
int
add
pop
idiv
popf
xchg
test
leave
push
ja
lods
pop
ret
lea
inc
sti
add
stos
mov
aas
jmp
fs
sub
icebp
test
jne
jecxz
(bad)
jb
fmul
dec
pop
sar
inc
add
push
mov
push
pop
jg
mov
retf
and
and
sahf
jae
test
cs
jbe
fs
pop
mov
pushf
adc
fsub
mov
sahf
movs
lods
inc
movs
jmp
adc
pop
cs
out
int
cmp
in
or
lods
sar
xchg
cmps
dec
and
pop
cmp
outs
inc
stc
ret
xor
pusha
adc
clc
xchg
ret
sub
loopne
lds
sub
dec
adc
xor
out
adc
dec
cmps
rcr
xchg
dec
fsub
movs
cmps
repz
cs
sub
dec
loope
test
lds
std
xchg
lock
mov
retf
sahf
cmp
adc
fwait
repz
clc
and
aam
cmp
test
mov
xor
push
movs
pop
cmp
xor
add
xor
out
scas
sti
mov
xor
fidivr
mov
jmp
mov
mov
stos
dec
jp
ins
sub
sub
ja
mov
je
aad
sub
push
mov
and
xor
pop
jmp
das
jno
cld
(bad)
call
push
jmp
out
enter
dec
or
cli
xchg
jecxz
mov
push
aad
dec
aaa
rol
mov
pushf
aam
sub
push
mov
dec
xchg
mov
xor
xor
dec
repnz
inc
scas
fs
push
dec
in
xchg
pop
ror
lahf
xchg
xor
dec
repnz
fcmovnb
jg
add
call
jne
orps
aam
sbb
in
gs
jne
ds
ret
sahf
dec
les
jp
pop
mov
jecxz
push
and
stos
inc
cmp
pushf
and
xor
out
aam
adc
sbb
or
fld
scas
push
sub
jge
cmps
retf
std
int3
mov
adc
add
les
add
out
lea
mov
cmps
inc
sub
cld
push
scas
xchg
es
sbb
jle
and
ret
jecxz
adc
pop
scas
sub
addr16
or
inc
fstp
mov
xchg
rcr
push
inc
adc
jp
imul
jecxz
or
std
gs
and
clc
shl
nop
cmc
imul
sub
aaa
pop
call
and
xlat
push
into
inc
add
xchg
jae
in
adc
add
mov
lds
sbb
cmc
repz
(bad)
mov
dec
aaa
hlt
jecxz
out
repnz
xchg
icebp
cmp
into
xchg
inc
push
les
mov
cmps
fsub
cld
sub
sahf
icebp
lods
(bad)
jle
jmp
cmps
scas
cmp
test
lahf
(bad)
push
ret
sub
mov
inc
or
dec
scas
test
inc
imul
inc
xor
xchg
test
in
mov
je
es
jge
or
pop
xchg
jl
in
sbb
and
pop
loop
loope
dec
(bad)
or
pop
fdivrp
pusha
mov
sbb
pushf
repz
fcmovnb
mov
add
lahf
mov
cmp
aaa
adc
and
(bad)
adc
mov
loop
mov
push
mov
leave
and
pop
mov
mov
mov
test
ffreep
jb
int
ins
fs
fcom
pop
stc
xlat
sub
pop
push
bound
fnstcw
mov
or
xchg
and
out
jae
cmp
mov
cld
mov
cmp
dec
ror
stos
test
cmc
iret
dec
fstp
mov
(bad)
int3
pop
add
test
int3
call
mov
inc
fwait
mov
pop
jmp
stc
movs
retf
mov
add
jmp
jmp
mov
sbb
pop
scas
xor
inc
add
push
push
and
test
jl
mov
xor
xchg
je
mov
jp
jno
scas
lock
sub
pop
or
and
enter
sub
xchg
rol
add
jg
fnstenv
rol
xlat
mov
popf
iret
mov
xor
fidiv
adc
out
popa
call
pop
repnz
pop
pop
test
cmc
cmp
(bad)
call
movs
dec
add
push
idiv
cmps
inc
adc
in
cmps
(bad)
sbb
popa
ins
adc
fbld
mov
mov
imul
(bad)
dec
mov
add
sbb
(bad)
sbb
cmps
add
and
push
out
pop
cmp
xor
js
mov
lock
mov
hlt
add
test
bound
inc
cmp
into
fxtract
push
sub
aad
cmp
imul
jmp
mov
jmp
nop
mov
adc
ror
arpl
mov
dec
gs
shr
inc
rep
xor
pavgw
loope
mov
lods
push
nop
rcl
jecxz
int
repnz
imul
push
scas
into
mov
out
lds
std
jns
ret
mov
add
shr
aaa
jne
mov
lods
pop
aad
jp
lods
xchg
ret
ds
and
jbe
repnz
ret
push
sub
push
mov
inc
mov
mov
adc
push
arpl
cmp
adc
pushf
fwait
movs
scas
and
dec
loopne
retf
xor
pop
push
jmp
(bad)
jne
aam
mov
pop
test
mov
jmp
xchg
in
and
outs
xchg
fwait
cdq
dec
out
rcl
out
loopne
call
and
mov
arpl
jne
mov
out
push
pop
mov
jo
jle
(bad)
mov
(bad)
outs
adc
inc
sub
mov
and
in
xchg
rcr
arpl
xor
mov
push
add
fs
adc
pop
movs
or
push
push
mov
sub
lock
add
sub
(bad)
fldl2e
fs
aaa
push
xor
jnp
das
mov
aad
xchg
(bad)
push
sub
inc
(bad)
ficomp
adc
push
or
add
into
cmps
fstp
inc
push
daa
jne
call
sbb
lods
dec
loopne
xor
sbb
loop
sbb
retf
lds
daa
repz
mov
ins
adc
lahf
jae
es
pushf
cmp
call
in
cmp
push
fld
jb
add
sub
es
mov
loop
sti
xor
int
mov
in
ds
jo
fist
stos
add
pop
mov
(bad)
clc
jle
mov
jno
xor
repz
push
dec
add
or
pop
mov
jne
ja
fadd
in
mov
fidiv
push
mov
jbe
gs
cmp
in
mov
mov
hlt
loop
fnstcw
pop
jns
mov
fmul
sub
loopne
test
test
aaa
stos
add
xchg
clc
aad
mov
jecxz
loope
dec
sub
sub
enter
sbb
je
cmp
cmp
imul
into
dec
pop
push
call
cld
daa
mov
pushf
mov
movs
sub
out
push
or
test
mov
or
inc
loopne
jne
test
adc
scas
aam
mov
nop
and
loopne
fcomp
leave
sbb
dec
dec
aaa
jns
add
or
(bad)
mov
xlat
ins
scas
add
aam
std
fcmove
aam
test
mov
mov
mov
mov
pop
rcr
hlt
pop
stc
add
rcr
mov
sar
loop
movs
xlat
pop
pop
js
dec
jl
cmp
pop
adc
out
pop
cdq
into
(bad)
jns
or
dec
jno
std
movs
sbb
cmps
mov
inc
push
cmp
dec
fdivr
add
pop
jno
sbb
repz
imul
cmp
imul
xchg
xchg
loope
sub
leave
std
ret
arpl
hlt
or
mov
push
movs
cmps
retf
or
retf
js
in
popf
mov
jb
ret
icebp
mov
nop
sub
jl
jae
xchg
test
jmp
jbe
mov
push
mov
xchg
and
inc
jno
push
scas
inc
scas
out
sbb
into
push
arpl
mov
aaa
jecxz
push
push
test
aad
push
(bad)
outs
into
jnp
pop
clc
jae
cmp
fadd
add
and
ds
push
idiv
push
mov
push
ds
in
add
jg
pop
fild
ror
and
scas
or
xchg
loopne
push
(bad)
cwde
push
fisub
cmp
repz
pop
clc
xchg
or
sub
add
retf
jmp
and
aam
sub
(bad)
nop
sbb
psrlq
mov
jns
sbb
ror
and
mov
xchg
xchg
adc
scas
lods
sbb
pop
gs
scas
iret
jmp
mov
add
jg
adc
push
stc
loope
mov
loop
jecxz
ret
inc
cwde
lahf
dec
shl
cmps
out
pop
inc
pop
(bad)
mov
inc
xchg
inc
out
mov
and
push
int
push
add
jne
cmp
xchg
sbb
fisub
xor
lahf
sti
cmps
fsub
in
(bad)
out
add
jns
mov
cs
stos
nop
fild
xor
cld
and
xchg
dec
js
jb
sbb
into
sbb
pusha
sar
mov
sub
sub
adc
ret
add
outs
mov
enter
test
into
xchg
adc
inc
int3
jg
add
outs
and
and
and
dec
adc
mov
or
mov
inc
xor
ins
sbb
in
out
add
xchg
scas
test
sahf
jp
lea
fidiv
mov
mov
shl
retf
sub
daa
mov
pop
arpl
lds
jle
sbb
std
dec
sbb
xor
repnz
sub
push
test
mov
push
loope
xor
push
inc
mov
std
xor
ror
clc
hlt
mov
call
clc
xchg
repnz
out
or
sub
jmp
fadd
cmp
mov
pop
inc
mov
jmp
add
arpl
adc
and
in
cmp
mov
xor
inc
dec
addr16
sub
pop
or
ja
xchg
das
sbb
bound
cmp
fisttp
movs
das
dec
push
out
out
cmp
retf
outs
and
outs
jno
dec
in
xchg
inc
adc
inc
(bad)
(bad)
hlt
or
sub
leave
pop
movs
mov
(bad)
aas
and
xchg
cwde
movs
sti
add
retf
mov
push
mov
mov
fld
cmp
cmp
cmps
scas
mov
add
add
bound
loopne
lods
stos
pop
mov
lods
pop
imul
or
pusha
movs
test
xchg
rcl
sahf
pop
clc
loopne
sub
cwde
cmp
mov
hlt
ffree
cmc
mov
mov
pop
aas
pop
xchg
call
sahf
enter
(bad)
aaa
sbb
mov
in
jle
xchg
push
push
dec
mov
test
ja
xchg
jae
stc
jmp
adc
xor
js
retf
push
push
adc
push
aas
add
inc
ins
das
jae
jp
cmc
push
out
cld
sub
adc
retf
sbb
push
cmp
xor
sysexit
loop
sub
and
fcom
push
sbb
mov
push
jecxz
loope
and
mov
repnz
pop
sti
stos
mov
test
in
or
mov
fisub
sti
inc
bound
fwait
retf
ins
mov
cmc
fldcw
shl
or
cwde
sub
push
neg
adc
mov
mov
(bad)
mov
inc
cmp
mov
xchg
sbb
ror
sbb
sbb
push
in
fcomp
shl
adc
enter
xchg
xor
xchg
sbb
mov
loop
nop
pop
inc
mov
out
push
imul
mov
sbb
mov
push
cmp
popf
stc
gs
in
add
(bad)
push
inc
pop
lock
lds
inc
in
cdq
ins
push
test
or
cmp
push
push
sahf
out
icebp
and
js
out
add
push
mov
pop
ret
pop
mov
mov
pop
hlt
xor
push
dec
jno
jbe
xor
sub
push
mov
pop
inc
adc
xchg
jmp
movs
aas
xor
cmps
mov
jecxz
test
fsub
adc
mov
imul
in
sbb
std
pop
jbe
imul
daa
sbb
aaa
pusha
mov
cdq
in
(bad)
scas
fbld
imul
adc
mov
cli
mov
or
add
mov
cmp
das
sub
cwde
push
sub
xchg
lahf
mov
adc
out
addr16
mov
mov
inc
pop
test
out
fwait
jecxz
cmp
pop
push
add
xor
add
outs
retf
(bad)
xchg
es
mov
jge
xor
cs
mov
imul
add
dec
and
adc
push
bound
pop
xchg
outs
pop
ret
jae
imul
pop
jmp
mov
ret
xchg
cli
inc
jecxz
(bad)
jmp
repnz
jno
xlat
pop
xor
fdiv
in
jb
outs
cmp
xor
test
in
dec
fdivr
inc
ror
sbb
pop
jns
lock
xor
inc
sbb
bsf
jnp
jno
repz
or
jo
addr16
jp
cs
push
jns
dec
cmp
clc
mov
cmp
add
aaa
pop
add
daa
test
inc
dec
push
xor
jmp
xor
int
lods
(bad)
push
push
dec
mov
retf
sti
in
mov
je
xlat
out
mov
dec
pop
sub
and
(bad)
mov
xchg
fist
test
jge
(bad)
pusha
mov
pop
or
stos
dec
int3
ins
pop
mov
push
push
mov
xor
mov
push
inc
inc
outs
ins
jo
arpl
xchg
jns
mov
pop
ret
ins
or
jno
ss
cli
mov
cmc
ss
int3
rol
rol
mov
add
aas
mov
leave
add
aaa
aad
fcmovnb
ror
cmp
sbb
fidiv
push
jae
std
push
inc
ss
jecxz
xor
cmp
inc
dec
loop
xchg
out
popa
sbb
lods
inc
aam
(bad)
mov
cmp
fisub
xor
enter
and
std
cld
gs
or
and
xchg
inc
and
int3
js
jmp
or
ret
test
xor
icebp
out
lods
das
mov
int3
sbb
ins
pop
dec
dec
scas
push
mov
or
cmp
clc
inc
fadd
inc
data16
fisub
(bad)
gs
mov
sbb
and
push
inc
je
xchg
aas
or
mov
int3
xchg
clc
gs
movs
rcl
jecxz
(bad)
bnd
stc
inc
push
adc
lods
data16
xchg
int
in
aas
jg
xor
cmc
lock
jge
lods
xchg
and
ins
dec
fimul
push
and
mov
cld
add
loopne
dec
sub
inc
sbb
jmp
add
int3
pop
xchg
pop
cmp
retf
jae
int3
mov
mov
aam
mov
pop
push
pop
cmps
ret
push
pusha
je
and
popa
leave
gs
jmp
adc
cli
mov
rcl
xchg
mov
sub
dec
stos
mov
jns
and
xchg
pop
imul
ds
mov
neg
xchg
inc
shl
outs
test
ficom
xor
pop
jmp
dec
js
or
mov
test
leave
xchg
xchg
mov
xchg
or
push
pop
mov
cs
cmp
jae
fild
(bad)
jle
add
cmps
stos
xor
dec
fs
adc
loope
adc
pushw
dec
push
cmp
(bad)
mov
repnz
xlat
and
push
sub
adc
dec
add
lods
int3
jmp
xor
add
mov
dec
pop
mov
fidivr
jae
lahf
inc
hlt
je
imul
mov
into
mov
jmp
shr
int3
retf
iret
sub
push
lods
xor
mov
adc
xor
sti
cmc
(bad)
mov
jnp
pusha
cdq
push
in
jbe
add
not
dec
jbe
xchg
push
lds
and
adc
push
repnz
