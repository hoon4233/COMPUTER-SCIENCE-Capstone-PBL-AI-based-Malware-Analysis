mov
push
mov
push
mov
push
push
xor
mov
int3
mov
inc
add
jmp
jne
mov
mov
and
rol
add
mov
inc
inc
and
je
mov
and
mov
add
sar
je
inc
mov
jne
add
je
add
rol
add
add
add
mov
ror
inc
mov
add
add
jne
int3
inc
rol
and
jne
rol
nop
inc
jne
nop
je
inc
int3
dec
jne
jne
mov
rol
je
or
je
je
je
and
or
mov
add
rol
mov
mov
shr
mov
cmp
jbe
mov
mov
mov
cmp
jbe
lea
jmp
jae
mov
lea
shr
cmp
jb
jmp
cmp
jb
enter
push
xor
push
mov
mov
pop
dec
add
push
add
push
mov
jmp
jne
jne
int3
int3
nop
je
xor
add
je
add
or
inc
call
mov
or
nop
or
add
add
nop
mov
and
mov
int3
inc
add
jne
mov
and
or
nop
mov
nop
and
add
int3
or
nop
jne
shl
mov
add
mov
add
jne
je
jne
add
inc
ror
add
je
je
inc
shl
inc
adc
add
mov
jne
add
inc
mov
mov
xor
add
mov
or
inc
and
jne
inc
xor
add
jmp
mov
mov
mov
not
inc
and
cmp
jne
test
je
add
jmp
mov
xor
mov
mul
seto
neg
or
push
call
mov
add
test
je
mov
mov
add
add
push
push
push
call
mov
push
call
mov
add
mov
test
je
add
jmp
mov
xor
mov
mul
seto
neg
or
push
call
mov
add
test
jne
mov
cli
pop
mov
pop
xor
je
inc
pop
dec
jne
mov
call
xor
add
dec
jne
push
jmp
cld
push
add
sub
mov
mov
add
add
push
push
push
call
mov
push
call
mov
mov
add
mov
cmp
jbe
mov
mov
lea
mov
mov
mov
lea
dec
mov
cmp
ja
mov
mov
mov
mov
inc
mov
test
je
mov
push
call
mov
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
cmp
jg
or
out
inc
aas
shr
mov
jne
int3
jne
shl
mov
xor
or
shl
add
ror
or
nop
add
mov
add
nop
ror
mov
add
inc
and
int3
je
shl
or
add
nop
xor
add
and
nop
int3
mov
xor
add
and
inc
and
and
jne
add
mov
jne
je
push
int3
add
jne
int3
and
int3
mov
sar
dec
add
ror
mov
and
jne
or
nop
jne
rol
add
mov
or
or
int3
ror
rol
je
int3
or
nop
or
or
mov
int3
int3
int3
int3
mov
push
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
push
call
mov
add
test
jne
push
call
add
lea
mov
cmp
mov
mov
jae
mov
mov
mov
mov
add
add
cmp
jb
lea
push
call
cmp
je
mov
test
je
mov
lea
cmp
mov
lea
jl
mov
mov
mov
cmp
jge
mov
push
call
add
test
je
mov
mov
add
mov
lea
cmp
jae
mov
mov
mov
mov
add
add
cmp
jb
mov
mov
add
cmp
jl
jmp
mov
mov
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
mov
mov
lea
mov
mov
mov
inc
inc
add
cmp
jl
mov
xor
mov
mov
lea
cmp
jne
test
mov
jne
mov
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
mov
or
jmp
cmp
jne
mov
or
jmp
mov
or
jmp
mov
or
mov
inc
cmp
jl
mov
push
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
mov
push
push
push
push
xor
cmp
je
add
inc
cmp
jb
cmp
jne
mov
cmp
je
test
jne
cmp
je
cmp
je
lea
push
push
push
call
test
jne
mov
mov
lea
rep
movs
movs
lea
or
xor
lea
repnz
not
cmp
jbe
lea
or
repnz
not
dec
push
mov
lea
sub
push
add
push
call
add
mov
mov
lea
xor
rep
movs
or
mov
repnz
not
sub
lea
mov
mov
or
mov
repnz
mov
dec
shr
rep
mov
lea
and
push
rep
mov
or
repnz
not
sub
push
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
lea
and
rep
mov
or
repnz
not
sub
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
lea
and
push
rep
call
add
pop
pop
pop
pop
add
ret
mov
test
je
mov
cmp
jne
push
call
mov
mov
lea
push
push
mov
or
xor
repnz
not
dec
push
push
push
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
push
push
mov
mov
mov
xor
push
mov
mov
cmp
jb
mov
mul
shr
mov
add
add
mov
sub
sub
add
sub
mov
shr
xor
sub
mov
shl
xor
sub
sub
mov
shr
xor
sub
sub
mov
shr
xor
rol
mov
add
inc
add
mov
mov
or
mov
jne
push
shl
inc
nop
mov
mov
xor
int3
jne
and
mov
and
nop
shl
push
int3
add
add
add
mov
add
mov
add
or
mov
or
ror
and
je
or
jne
and
add
int3
or
mov
and
je
mov
and
int3
or
add
mov
rol
je
inc
add
add
je
mov
and
mov
and
add
and
add
inc
dec
jne
or
mov
call
lea
test
jne
(bad)
sub
sub
mov
shl
xor
sub
sub
sub
mov
shr
xor
sub
sub
mov
shr
xor
sub
mov
shl
sub
xor
sub
mov
sub
shr
xor
add
sub
jne
mov
add
mov
dec
cmp
ja
jmp
movzx
shl
add
movzx
shl
add
movzx
shl
add
movzx
shl
add
movzx
shl
add
movzx
shl
add
movzx
add
movzx
shl
add
movzx
shl
add
movzx
shl
add
movzx
add
sub
sub
sub
mov
shr
xor
sub
mov
or
or
jne
add
sar
inc
nop
mov
je
inc
dec
rol
add
dec
adc
mov
inc
add
nop
inc
je
nop
or
inc
mov
and
shl
add
add
inc
mov
shl
or
int3
nop
mov
and
inc
add
je
mov
jne
add
int3
inc
add
and
int3
mov
int3
add
inc
dec
add
nop
nop
int3
add
mov
inc
rol
add
nop
int3
mov
push
mov
je
add
mov
add
int3
je
add
inc
add
inc
inc
add
or
pop
mov
mov
pop
push
add
stos
push
call
test
jne
shl
xor
sub
sub
mov
shr
xor
sub
sub
mov
shr
xor
sub
sub
mov
shl
xor
sub
sub
mov
shr
xor
mov
sub
sub
mov
shr
xor
sub
sub
mov
shl
xor
sub
sub
pop
shr
pop
xor
pop
mov
pop
ret
mov
and
test
dec
add
test
dec
add
test
add
test
add
test
add
test
add
test
add
test
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
mov
push
jne
inc
nop
or
mov
jne
inc
xor
int3
rol
int3
jne
and
and
ror
add
mov
jne
je
and
or
and
add
nop
add
add
and
jne
mov
mov
call
or
and
add
add
shl
or
mov
add
inc
and
and
je
nop
add
xor
add
or
add
je
or
jne
mov
inc
inc
nop
int3
inc
adc
add
or
nop
je
add
mov
shl
mov
shl
mov
jne
mov
add
inc
dec
jne
mov
int3
add
adc
mov
int3
add
add
ror
mov
ror
mov
add
ror
fst
add
pop
mov
pop
mov
push
lea
push
call
mov
push
push
lea
call
pop
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
push
mov
push
push
mov
lea
call
pop
pop
mov
add
mov
jne
mov
and
dec
add
add
je
add
jne
add
or
je
je
or
inc
inc
nop
mov
and
add
ror
add
jne
dec
add
mov
add
shl
add
je
int3
add
inc
add
int3
(bad)
call
and
je
or
inc
nop
mov
nop
int3
rol
mov
jne
push
nop
add
or
nop
add
jne
add
add
call
mov
and
push
and
mov
int3
ror
int3
and
rcl
or
and
add
and
ror
and
or
inc
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
lea
push
call
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
push
push
push
push
push
lea
push
call
push
push
push
mov
push
call
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
mov
pop
ret
int3
push
call
add
ret
nop
nop
nop
nop
nop
mov
push
push
push
mov
xor
mov
test
je
test
je
mov
test
and
jne
nop
or
or
nop
ror
add
inc
nop
and
int3
mov
je
shl
add
je
nop
inc
mov
nop
int3
jmp
nop
and
add
inc
add
mov
cmp
add
ror
nop
inc
jne
inc
nop
nop
inc
add
je
rol
je
jne
or
je
or
or
add
push
inc
je
inc
mov
mov
rol
add
nop
je
xor
int3
ror
or
jne
mov
mov
rol
je
mov
jne
mov
int3
(bad)
dec
mov
dec
or
nop
nop
inc
je
mov
int3
or
or
dec
ror
mov
adc
mov
and
mov
inc
add
inc
add
mov
pop
mov
add
pop
dec
push
mov
add
mov
pop
mov
mov
test
jne
(bad)
sbb
inc
dec
test
jne
pop
dec
pop
mov
mov
pop
ret
test
jne
pop
dec
pop
mov
mov
pop
ret
pop
pop
mov
pop
ret
int3
int3
mov
xor
mov
mov
mov
mov
dec
inc
mov
int3
or
jne
mov
and
mov
dec
(bad)
dec
int3
and
or
inc
add
inc
inc
add
add
or
mov
call
mov
nop
add
je
rol
add
nop
or
ror
add
int3
jne
jne
je
ror
and
dec
add
nop
je
int3
je
inc
je
jne
int3
int3
nop
mov
inc
jne
je
mov
add
or
rol
and
add
ror
mov
inc
pop
inc
mov
push
inc
inc
pop
inc
inc
push
dec
stos
pop
mov
dec
lods
sub
mov
add
dec
jne
call
pop
push
inc
dec
jmp
dec
sbb
inc
sbb
add
add
mov
ret
int3
int3
int3
int3
int3
int3
mov
push
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
call
test
mov
jne
ret
call
test
jne
mov
push
call
xor
ret
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
cmp
push
jne
mov
jmp
mov
push
push
push
call
mov
test
je
mov
push
push
push
push
call
mov
test
je
push
push
push
push
call
test
je
cmp
jne
mov
test
jne
mov
mov
test
jne
mov
jmp
mov
mov
mov
mov
mov
mov
lea
lea
lea
mov
mov
mov
mov
xor
mov
xor
cmp
setge
dec
add
and
dec
inc
mov
mov
cmp
jl
mov
xor
mov
rep
mov
add
cmp
jae
mov
mov
lea
mov
mov
mov
mov
add
add
cmp
jb
mov
pop
pop
pop
ret
push
push
push
call
cmp
je
mov
push
push
push
call
pop
pop
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
call
push
push
call
add
push
push
call
add
ret
mov
test
je
mov
push
call
add
test
je
mov
ret
xor
ret
push
mov
push
mov
push
push
push
mov
mov
cmp
je
mov
lea
mov
sub
sub
sar
shl
add
cmp
jae
mov
cmp
jl
cmp
jbe
push
push
push
call
add
test
jne
mov
mov
add
add
cmp
jb
mov
mov
lea
cmp
jae
mov
cmp
jl
cmp
jbe
push
push
push
call
add
test
jne
mov
mov
add
add
cmp
jb
mov
mov
cmp
mov
je
jmp
mov
mov
mov
sub
mov
mov
pop
pop
pop
pop
pop
ret
mov
mov
mov
sub
mov
mov
pop
pop
pop
pop
pop
ret
mov
or
cmp
je
mov
test
jne
mov
cmp
je
jmp
mov
mov
mov
mov
sub
mov
sub
sar
shl
add
xor
cmp
jne
cmp
jge
mov
add
inc
cmp
je
mov
push
shl
push
push
push
mov
call
cmp
jne
mov
mov
xor
test
mov
jle
lea
lea
mov
mov
mov
mov
mov
add
add
dec
jne
mov
lea
mov
cmp
jae
cmp
je
add
cmp
jb
cmp
sbb
and
mov
mov
mov
mov
sub
mov
mov
sub
lea
mov
mov
lea
pop
pop
pop
pop
pop
ret
call
test
je
mov
mov
lea
mov
mov
mov
sub
and
mov
mov
sub
mov
lea
pop
pop
pop
pop
pop
ret
pop
pop
pop
xor
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
xor
push
test
push
jne
push
call
mov
test
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
mov
mov
mov
push
push
push
push
call
pop
pop
pop
ret
pop
pop
xor
pop
ret
nop
mov
push
push
push
push
call
add
test
je
mov
test
je
cmp
jne
mov
mov
pop
pop
pop
ret
cmp
jne
or
pop
pop
pop
ret
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
sub
lea
mov
add
dec
jne
mov
mov
cmp
mov
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
push
push
call
add
mov
mov
or
pop
pop
pop
ret
push
mov
call
add
mov
or
pop
pop
pop
ret
mov
push
call
pop
pop
pop
ret
nop
nop
mov
push
push
mov
push
xor
xor
push
mov
test
jne
call
mov
test
je
mov
jmp
call
mov
test
je
mov
mov
cmp
jne
test
jne
call
mov
test
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
sub
push
sar
inc
push
mov
push
push
push
push
push
push
call
mov
test
je
push
call
mov
add
test
je
push
push
push
push
push
push
push
push
call
test
jne
push
call
add
xor
push
call
mov
pop
pop
pop
pop
ret
push
call
xor
pop
pop
pop
pop
ret
cmp
jne
test
jne
call
mov
test
je
mov
mov
test
je
mov
inc
test
jne
mov
inc
test
jne
sub
inc
mov
push
call
mov
add
test
jne
push
call
xor
pop
pop
pop
pop
ret
mov
mov
mov
mov
shr
rep
mov
push
and
rep
call
mov
pop
pop
pop
pop
ret
pop
pop
pop
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
test
je
lea
lea
push
push
push
call
add
test
je
mov
push
mov
push
push
call
add
pop
pop
ret
mov
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
mov
push
lea
mov
and
cmp
ja
mov
shr
push
call
add
test
jne
mov
push
push
push
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
mov
cmp
je
xor
lea
mov
cmp
jne
mov
push
add
push
push
call
test
je
mov
mov
dec
mov
mov
test
je
cmp
jbe
mov
mov
inc
dec
mov
je
sub
sub
test
jge
mov
mov
test
je
cmp
jne
mov
lea
cmp
jne
inc
add
cmp
jl
cmp
jne
push
call
add
cmp
je
mov
test
jg
pop
pop
pop
pop
ret
nop
nop
nop
push
mov
cmp
push
ja
test
jne
mov
mov
cmp
ja
push
call
add
jmp
xor
test
jne
test
je
push
call
add
test
jne
xor
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
push
push
push
mov
call
mov
xor
or
adc
dec
or
jne
push
push
push
pop
mov
push
mov
jmp
inc
adc
inc
adc
dec
sbb
sbb
push
sbb
inc
and
and
dec
and
push
sub
pop
xor
pop
mov
pop
mov
dec
mov
inc
test
jne
mov
mov
dec
dec
jne
inc
ret
sub
pop
sub
adc
add
or
ror
je
pop
mov
pop
pop
pop
ret
pop
pop
xor
pop
pop
int3
int3
push
mov
mov
sub
cmp
jne
push
push
push
mov
push
call
mov
add
cmp
jne
push
push
push
mov
push
call
add
mov
mov
pop
ret
int3
cmp
jne
call
mov
push
call
add
push
call
add
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
push
call
mov
push
push
push
mov
push
call
push
push
push
mov
push
call
call
mov
lea
push
mov
push
call
mov
mov
mov
mov
push
call
add
mov
push
mov
push
call
add
test
jne
xor
jmp
push
push
push
lea
push
call
test
je
lea
push
call
lea
push
call
jmp
call
mov
mov
pop
ret
int3
int3
mov
push
mov
cmp
je
push
lea
mov
mov
push
call
add
xor
mov
or
nop
int3
and
int3
or
mov
or
add
shl
add
add
jne
call
or
or
inc
je
and
nop
or
mov
shl
inc
jne
rol
or
add
int3
or
and
or
nop
nop
inc
and
add
rol
nop
mov
mov
add
nop
add
or
and
int3
nop
nop
add
mov
sar
or
int3
ror
je
add
rcl
add
mov
inc
je
or
mov
mov
je
int3
jne
mov
or
push
mov
mov
push
push
sub
test
je
call
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
xor
test
push
je
cmp
je
inc
mov
or
xor
repnz
not
dec
mov
lea
test
jne
lea
push
call
mov
add
test
mov
mov
jne
push
call
add
mov
mov
test
je
mov
or
xor
repnz
not
dec
mov
inc
cmp
je
push
call
add
mov
test
jne
push
call
add
mov
or
xor
repnz
mov
not
sub
mov
mov
mov
shr
rep
mov
and
add
rep
mov
mov
mov
add
test
jne
mov
push
call
add
mov
mov
pop
pop
pop
pop
pop
ret
nop
nop
push
mov
push
push
push
mov
push
mov
add
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
call
test
jne
push
call
add
mov
call
call
call
mov
call
mov
test
je
mov
test
jne
push
call
add
call
call
call
mov
mov
cmp
jne
inc
mov
mov
cmp
je
test
je
and
push
call
add
test
je
inc
mov
jmp
cmp
jne
inc
mov
mov
test
je
cmp
ja
inc
mov
jmp
mov
lea
push
call
test
je
mov
and
jmp
mov
push
push
push
push
call
push
call
mov
push
call
jmp
mov
mov
mov
mov
push
push
call
add
ret
mov
mov
push
call
add
mov
mov
mov
pop
pop
pop
mov
pop
ret
cmp
jbe
inc
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
cmp
je
push
lea
mov
mov
push
call
add
mov
test
nop
add
or
and
ror
add
nop
or
mov
add
or
add
or
xor
add
rcl
nop
int3
or
inc
mov
inc
rol
or
add
inc
add
mov
inc
rol
and
inc
shl
ror
and
je
mov
and
inc
inc
and
add
add
add
push
and
and
and
je
or
and
or
add
xor
je
int3
int3
and
rol
add
je
je
int3
shl
add
in
sub
push
push
mov
mov
mov
mov
mov
mov
and
mov
dec
dec
and
inc
mov
test
jne
push
pop
xor
mov
mov
mov
cmp
jbe
mov
and
lea
inc
cmp
jb
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
xor
test
je
cmp
jbe
mov
test
jl
mov
push
push
lea
mov
push
mov
or
add
mov
inc
add
dec
jne
add
nop
ror
shl
or
je
dec
jne
or
mov
mov
je
inc
inc
nop
cmp
and
add
jne
add
jne
mov
je
nop
mov
rol
nop
int3
add
and
shl
je
push
mov
add
add
and
or
inc
dec
mov
or
and
jne
int3
nop
mov
inc
or
je
je
add
or
add
nop
mov
int3
or
inc
je
and
mov
nop
int3
nop
add
int3
mov
or
and
or
mov
add
inc
and
add
jne
and
int3
mov
sub
push
mov
dec
inc
mov
dec
jne
push
push
push
xor
call
add
test
jl
cmp
ja
jne
mov
pop
mov
pop
pop
ret
mov
mov
pop
mov
pop
pop
inc
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
push
push
lea
push
call
add
mov
mov
mov
mov
mov
mov
push
mov
push
call
mov
mov
push
push
call
mov
push
mov
push
call
mov
lea
push
call
mov
pop
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
call
mov
xor
mov
mov
push
push
push
push
push
mov
push
mov
lea
add
je
int3
or
inc
int3
jne
add
inc
int3
je
add
je
add
inc
or
inc
or
int3
or
add
mov
je
mov
nop
and
nop
or
mov
add
add
mov
inc
or
and
add
jne
je
mov
je
and
jne
jmp
int3
je
je
rol
nop
mov
mov
add
add
add
add
mov
and
inc
je
or
mov
add
je
shl
add
or
nop
dec
rol
inc
add
mov
inc
mov
mov
dec
mov
add
add
mov
add
xor
mov
dec
mov
push
mov
lea
mov
pop
inc
mov
add
test
jne
call
test
jl
lea
mov
lea
call
test
jl
mov
mov
sub
lea
mov
call
test
jge
inc
push
call
add
test
jne
pop
mov
pop
mov
xor
call
mov
pop
ret
mov
mov
add
push
mov
add
push
push
call
add
pop
xor
pop
mov
xor
call
mov
pop
ret
inc
lea
mov
call
mov
pop
xor
pop
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
lea
push
mov
push
call
test
jl
cmp
jne
mov
mov
and
add
dec
mov
je
mov
mov
mov
add
dec
or
inc
and
int3
add
mov
int3
add
add
mov
and
mov
mov
je
ror
jne
or
nop
mov
add
call
jne
jne
or
mov
je
mov
mov
int3
add
or
add
mov
inc
add
cmp
int3
or
mov
and
jne
add
je
adc
add
or
or
jne
int3
and
or
inc
nop
and
nop
nop
call
inc
add
rol
mov
int3
inc
inc
inc
mov
add
add
mov
ror
shl
and
lea
mov
or
lea
pop
pop
mov
pop
ret
cmp
jne
mov
mov
or
lea
pop
pop
mov
pop
ret
mov
mov
mov
and
pop
inc
xor
mov
jne
inc
add
inc
push
dec
jne
push
cld
and
lea
mov
lea
and
or
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
mov
push
push
push
push
mov
mov
mov
cmp
mov
mov
lea
jb
lea
mov
cmp
jae
mov
mov
add
sub
mov
mov
jmp
lea
mov
mov
lea
lea
mov
lea
shl
sub
pop
pop
pop
pop
ret
add
cmp
je
mov
lea
cmp
mov
jae
mov
test
jne
cmp
lea
mov
jne
inc
inc
cmp
je
cmp
jae
mov
cmp
jne
mov
mov
mov
jmp
sub
cmp
jb
mov
mov
jmp
and
add
lea
lea
cmp
jb
jmp
lea
lea
cmp
jae
sub
mov
mov
jmp
lea
mov
jmp
lea
mov
cmp
jae
lea
lea
cmp
jae
mov
test
jne
cmp
lea
mov
jne
inc
inc
cmp
je
cmp
jae
sub
cmp
jb
mov
jmp
and
add
cmp
jb
xor
pop
pop
pop
pop
ret
lea
lea
cmp
jae
sub
mov
mov
jmp
mov
mov
lea
mov
lea
lea
shl
sub
pop
pop
pop
pop
ret
pop
pop
pop
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
cmp
jbe
cmp
jb
mov
cmp
je
jmp
test
jne
mov
and
cmp
jb
mov
mov
mov
mov
and
sub
mov
sub
sar
lea
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
dec
pop
mov
or
nop
out
inc
add
into
xchg
gs
leave
mov
dec
mov
in
rsm
in
xor
xchg
mov
ror
inc
repnz
mov
scas
sbb
dec
adc
dec
and
out
inc
inc
mov
push
(bad)
stos
shr
ja
sub
sti
or
outs
in
pop
pop
sub
mov
jecxz
fidiv
xor
call
into
ficom
clc
xchg
xor
call
loop
clc
or
push
in
add
inc
ror
jg
dec
or
outs
mov
mov
xor
mov
ins
inc
and
pushf
in
cmp
add
mov
aaa
inc
rcr
pushf
aas
rcr
sar
cmp
dec
and
gs
pop
xchg
shr
pop
cmp
loope
pushf
sub
fldcw
lea
scas
setl
mov
mov
ss
adc
outs
outs
and
xor
sub
(bad)
xchg
cmps
ins
mov
add
pop
xor
loopne
imul
ja
shufps
jl
aaa
imul
lock
and
je
das
fadd
unpcklps
(bad)
loopne
or
fiadd
outs
loopne
ds
cli
shl
les
sbb
retf
nop
push
inc
xor
icebp
cli
cmp
xchg
mov
int
sbb
shr
in
mov
bound
loopne
dec
mov
shr
lock
int
out
fwait
cli
je
mov
es
push
inc
xchg
dec
cmps
lahf
or
or
or
xlat
call
xchg
ins
movs
and
pop
aam
push
jb
aaa
pop
push
pop
adc
repz
idiv
hlt
sub
add
call
pop
pandn
jnp
in
jae
adc
fldl2t
mov
sub
dec
(bad)
lods
mov
int3
jmp
cmp
test
sub
or
(bad)
or
adc
jecxz
cmp
mov
mov
and
in
jno
int3
adc
lds
adc
call
ja
aam
dec
inc
add
push
popa
jmp
fbld
jno
mov
jl
dec
lock
fsubr
xchg
xor
shr
pop
enter
pushf
test
stos
pop
out
push
jnp
popf
in
repnz
fsubr
fadd
std
sbb
das
jg
ja
out
jg
aam
xchg
mov
call
into
pop
push
cmp
retf
int3
add
mov
mov
mov
cli
mov
mov
or
dec
inc
mov
sti
and
or
adc
mov
add
sbb
push
and
clc
push
xor
and
add
add
or
dec
nop
scas
sbb
sub
inc
dec
push
push
in
inc
dec
in
enter
xchg
imul
mov
inc
mov
dec
adc
adc
xor
pop
adc
add
push
in
or
loope
fwait
loopne
cmp
jecxz
adc
adc
xor
aad
mov
cmc
test
dec
or
xchg
xor
retf
out
jle
jg
push
push
lods
add
cld
and
inc
or
cmp
aam
sbb
test
inc
stos
sub
nop
int
cld
lock
(bad)
retf
mov
shl
lods
mov
jg
popa
lods
jge
scas
arpl
cmc
xor
das
inc
or
sbb
nop
sub
cdq
pusha
ret
mov
hlt
repz
iret
jmp
shl
out
or
test
pop
aas
loopne
loope
loopne
sbb
xor
push
cmp
add
add
mov
aad
mul
mov
mov
xchg
addr16
mov
sbb
mov
repz
(bad)
xlat
xlat
shl
adc
in
push
sbb
add
push
jp
mov
push
push
jno
jno
push
push
add
movsx
test
ret
dec
movs
aam
mov
or
cmps
dec
ja
shr
pop
and
ret
xor
in
dec
sbb
dec
rcl
js
jmp
inc
iret
out
sub
enter
push
idiv
mov
cld
mov
out
mov
ror
pop
push
div
sub
ins
out
sar
shl
dec
jnp
or
adc
and
ret
cli
mov
xchg
xchg
(bad)
pusha
iret
cmp
mov
out
out
and
pushf
xchg
inc
iret
xlat
icebp
or
popa
jg
xchg
les
sub
sbb
jb
pop
and
jnp
mov
jge
dec
bnd
push
sahf
stos
out
imul
or
outs
sub
loop
cmp
xchg
sub
icebp
jae
mov
xor
cmp
in
sbb
inc
mov
cmps
das
mov
(bad)
dec
pop
loopne
cmp
call
(bad)
clc
mov
mov
mov
sub
or
xor
sbb
inc
jmp
sbb
push
jg
cs
sahf
enter
mov
cmp
repnz
xchg
xor
xchg
cmc
shr
imul
xor
into
js
push
sahf
stos
jmp
aad
or
or
repnz
popa
mov
fsubr
pop
bound
and
ror
sub
ins
int3
adc
jp
ret
mov
xchg
(bad)
mov
push
mov
sbb
mov
mov
push
repz
fcom
or
std
inc
mov
into
mov
push
sti
iret
or
mov
add
jmp
shl
mov
rcr
and
dec
push
cmp
push
mov
adc
mov
lods
mov
inc
or
push
mov
jmp
cmp
mov
and
xchg
in
inc
mov
xchg
rcr
adc
mov
xor
inc
xchg
(bad)
icebp
jae
(bad)
iret
movhlps
and
add
xor
outs
jp
jno
add
les
xchg
inc
or
int
cmp
cmps
movs
mov
mov
imul
movs
pop
cmp
push
dec
mov
ss
(bad)
push
mov
xor
adc
pop
jmp
inc
inc
push
add
inc
mov
scas
add
mov
push
and
jae
inc
push
bound
adc
xor
add
pop
adc
pushf
mov
sti
add
pushf
repz
mov
pop
test
ret
dec
sbb
mov
(bad)
fs
(bad)
mov
push
jb
int
sbb
int3
daa
movs
and
icebp
cwde
adc
mov
xor
push
outs
scas
ud0
add
mov
push
xchg
cdq
inc
outs
inc
(bad)
xor
jbe
cmp
leave
add
sub
sbb
cmp
jl
sti
sti
gs
add
xor
xchg
mov
push
sahf
mov
xor
mov
mov
(bad)
adc
lods
mov
cli
aas
loop
inc
jmp
xor
lds
push
or
jl
movs
stos
push
mov
add
xchg
xor
bound
imul
inc
push
enter
gs
or
(bad)
out
pop
sti
push
cmp
pop
xchg
or
xor
sbb
outs
repz
push
jne
cmps
dec
cmp
pop
(bad)
mov
xchg
inc
popf
mov
push
mov
aaa
cmp
(bad)
aad
jno
push
jmp
jl
cli
sti
fild
add
pusha
push
or
loope
clc
fst
fnsave
mov
sub
(bad)
test
cmp
mov
call
dec
mov
rol
xchg
lock
sbb
aaa
jecxz
call
jno
inc
mov
xchg
jmp
sti
cmp
or
int
sbb
int3
dec
popf
mov
retf
stos
popf
push
sar
repz
hlt
jmp
neg
inc
daa
sbb
mov
pop
cmp
push
xchg
xor
sub
or
push
add
or
les
pop
shr
fs
pop
call
es
sbb
cmp
adc
jb
into
inc
stc
sub
mov
inc
dec
test
cli
and
(bad)
test
das
pushf
mov
aas
add
jo
aaa
outs
and
mov
movs
data16
adc
jne
outs
aam
xchg
fnstcw
cmp
js
mov
mov
jns
xlat
stos
adc
pop
fwait
aas
xor
mov
add
pusha
xor
movs
pop
cmp
push
sub
clc
lea
add
addr16
aaa
in
sub
rol
cmps
dec
pop
jge
cli
cmp
xor
or
push
loop
imul
add
outs
cs
in
xor
jne
fnstenv
mov
sahf
cmp
add
xchg
cmc
adc
lock
shl
pop
js
jno
sbb
jno
mov
sub
popa
xchg
sub
push
xor
leave
mov
sub
or
stos
push
xchg
mov
sub
jne
cld
div
add
out
imul
push
dec
(bad)
push
push
push
std
adc
add
aaa
ret
sub
aad
sar
hlt
fstp
add
mov
fs
test
pop
fmul
aad
in
lds
push
fsubr
xchg
mov
popf
es
inc
xor
sahf
and
daa
idiv
mov
xor
lds
shr
sbb
cmps
xchg
dec
inc
int3
fnstsw
cmc
fiadd
mov
jo
cmps
nop
cmova
fsubr
imul
(bad)
xor
sbb
jmp
and
cmp
jns
jl
dec
ss
sub
mov
push
retf
dec
mov
xlat
sbb
(bad)
aad
and
fcmovbe
or
mov
dec
fstp
xchg
fadd
daa
xor
xchg
push
add
push
inc
mov
fdiv
int3
dec
cmp
xor
rol
ret
pusha
fadd
(bad)
out
mov
clc
hlt
(bad)
and
pop
pop
ds
adc
mul
pop
pop
push
mov
pop
adc
inc
enter
jbe
push
xchg
inc
and
test
push
je
inc
pop
inc
mov
xor
sar
movs
popa
mov
stc
push
pusha
cmps
xor
nop
jne
push
and
xchg
sub
ror
sbb
aaa
pop
popa
lahf
aas
shl
inc
xchg
sti
ror
jmp
xor
add
push
test
jno
adc
ins
and
mov
movs
xchg
cdq
inc
outs
inc
(bad)
ja
push
add
sub
cmp
dec
mov
pop
inc
mov
je
out
mov
add
lds
rcr
js
adc
cmps
push
xchg
movs
or
retf
shl
add
sbb
jmp
rcr
idiv
pop
test
out
lods
xchg
mov
sbb
inc
shl
xchg
cmps
jmp
mov
clc
jbe
dec
push
repz
mov
nop
jp
popf
or
jb
push
lods
sbb
movs
xchg
cmp
push
ins
pop
inc
sbb
ja
xsaveopt
mov
pop
lds
pusha
push
or
imul
call
aad
outs
js
shl
movs
fmul
call
adc
and
hlt
push
jbe
imul
mov
(bad)
call
cdq
lds
shl
add
cld
jnp
cmp
stos
(bad)
cmps
sub
and
call
fbstp
lds
push
leave
mov
add
cmps
pop
ficomp
ror
xchg
test
xchg
(bad)
outs
ds
es
rcr
jne
fcom
xchg
mov
ins
arpl
ror
pop
(bad)
jge
movs
retf
mov
stos
scas
jmp
icebp
lahf
mov
cmp
fsubr
stos
add
cld
and
inc
or
loope
xchg
shr
add
into
add
test
js
and
das
xchg
xchg
mov
loopne
in
add
fldcw
rol
ret
bound
out
sub
int
inc
sbb
dec
cmp
xchg
ret
add
cmp
not
les
popf
mov
mov
test
add
cli
fidiv
push
pop
sbb
cmp
or
sub
pop
rcr
sbb
dec
mov
mov
adc
or
rcr
fadd
fcom
pushf
daa
popf
shl
das
pushf
pop
(bad)
mov
add
dec
push
clc
cmps
xchg
cwde
gs
xchg
out
xchg
enter
je
call
mov
jne
push
adc
or
aam
pop
leave
mov
fs
js
jbe
cmp
cli
pop
jne
aad
push
mov
bnd
mov
sbb
cmps
dec
scas
rcl
xchg
leave
mov
test
xchg
lahf
push
jno
cmp
fnsave
mov
add
jbe
cmp
(bad)
stc
xor
loope
in
arpl
mov
mov
enter
sbb
xchg
in
and
(bad)
call
and
movs
in
out
(bad)
inc
cmp
jmp
and
loopne
enter
(bad)
jg
les
ret
pop
fwait
fwait
xor
push
jnp
pop
in
enter
je
jbe
rcr
aad
and
shl
fcmovb
dec
mov
pop
add
out
cmps
add
dec
add
enter
ror
xor
rol
stc
outs
repnz
xor
shl
js
pop
jecxz
das
cmc
scas
test
inc
retf
or
enter
dec
movs
xor
popa
(bad)
sub
push
ss
push
(bad)
mov
and
pop
(bad)
rcr
adc
ret
jns
int
outs
or
adc
std
cmp
in
mov
mov
inc
daa
add
push
daa
cmp
mov
mov
popa
push
push
pusha
mov
daa
gs
or
nop
sahf
or
mov
pop
or
mov
ja
hlt
mov
jb
loopne
lea
xor
loopne
jmp
mov
mov
inc
fadd
jo
(bad)
mov
cmp
aaa
movs
push
aaa
call
shl
push
leave
add
cmp
sub
(bad)
out
sub
iret
stos
push
jno
rol
dec
retf
adc
(bad)
jle
add
call
enter
add
int
and
aas
xchg
inc
nop
mov
adc
mov
and
jmp
sar
lahf
pop
test
sbb
dec
in
xchg
xchg
inc
dec
imul
inc
fidivr
cmp
mov
push
cmp
jns
dec
stos
je
imul
cmp
xchg
(bad)
stos
je
push
pop
sbb
mov
push
cmp
jg
add
mov
push
cmp
jb
std
stos
je
das
fisub
dec
inc
mov
movs
mov
je
bound
lds
push
cmp
ins
ret
je
imul
xchg
js
push
cmp
je
dec
jb
lds
push
cmp
retf
stos
je
ins
pop
repnz
push
cmp
dec
sub
je
cld
les
mov
push
cmp
jle
int
je
popf
jl
lds
push
cmp
sbb
stos
je
inc
popf
or
mov
push
cmp
rcr
je
lock
xchg
lds
push
cmp
jb
xchg
lds
jb
sub
xlat
int
mov
push
push
or
loopne
les
inc
xlat
rcr
mov
push
push
adc
rol
mov
xlat
aad
mov
push
push
adc
cmp
fcomp
mov
push
push
sbb
rol
mov
add
fcmovnu
mov
push
push
pop
pop
loopne
les
inc
xlat
(bad)
mov
push
push
sbb
loopne
les
inc
xlat
loope
mov
push
push
and
rol
mov
add
in
mov
push
push
es
loopne
les
inc
xlat
out
mov
push
push
sub
rol
xchg
add
jmp
pop
loopne
les
inc
xlat
in
fdiv
pop
loopne
les
inc
xlat
lock
pop
loopne
les
inc
xlat
repz
pop
loopne
les
inc
xlat
neg
mov
mov
add
push
mov
shl
mov
and
inc
adc
int3
je
rol
mov
nop
mov
nop
add
nop
inc
mov
add
and
add
inc
call
add
je
jne
mov
add
push
jne
jne
jne
je
and
dec
add
add
inc
inc
xor
nop
add
and
xor
add
int3
or
rol
je
add
and
and
nop
shl
mov
mov
dec
mov
ror
mov
int3
inc
add
int3
mov
je
or
mov
and
je
xor
jne
add
mov
or
inc
jne
int3
xor
mov
cmp
mov
add
rol
rcl
add
rol
inc
int3
int3
add
or
mov
mov
int3
int3
int3
int3
int3
int3
int3
mov
cmp
je
test
jne
cmp
jne
push
call
mov
add
test
je
call
push
call
add
ret
nop
nop
nop
mov
push
mov
push
push
mov
mov
test
je
cmp
je
mov
test
je
push
push
push
call
test
jl
mov
lea
mov
inc
test
jne
mov
int3
mov
jne
add
je
and
ror
int3
rol
add
int3
inc
add
inc
rcl
or
int3
inc
and
mov
add
mov
shl
and
push
int3
mov
shl
mov
add
and
int3
inc
inc
add
mov
dec
and
rol
nop
nop
int3
je
mov
add
mov
nop
je
sar
mov
jne
or
add
int3
and
inc
shl
jmp
ror
nop
je
mov
sar
je
add
mov
jne
and
add
inc
adc
je
dec
je
jne
adc
mov
je
or
xor
inc
je
add
int3
add
push
mov
mov
mov
pop
mov
mov
inc
mov
inc
cmp
jne
dec
mov
mov
jne
stc
sub
add
sub
mov
cmp
je
test
jne
mov
mov
inc
push
push
push
push
push
call
add
test
jl
mov
lea
nop
mov
inc
test
jne
sub
add
sub
mov
test
je
mov
push
push
push
push
push
call
add
test
jl
mov
lea
mov
inc
test
jne
sub
add
sub
mov
mov
push
push
mov
call
test
jl
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
push
push
call
mov
cmp
jne
xor
jmp
push
mov
push
call
mov
push
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
push
call
mov
mov
cmp
jne
mov
lea
lea
push
push
push
push
push
call
mov
mov
add
lea
push
call
mov
add
test
jne
push
call
add
mov
lea
push
lea
lea
push
push
push
push
call
mov
add
dec
mov
pop
mov
pop
add
ret
nop
nop
push
mov
sub
push
mov
mov
cmp
ja
cmp
je
cmp
je
cmp
je
cmp
je
jmp
cmp
je
cmp
je
jmp
mov
mov
mov
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
push
mov
push
push
mov
push
push
push
push
push
push
push
push
push
call
mov
call
jmp
lea
push
mov
push
call
mov
lea
push
mov
push
call
push
mov
sub
push
mov
sub
push
mov
push
mov
push
mov
push
call
mov
push
mov
call
lea
push
mov
push
call
jmp
mov
push
call
jmp
jmp
mov
and
movzx
mov
mov
shr
and
movzx
mov
mov
mov
cmp
je
cmp
je
jmp
jmp
mov
push
call
jmp
mov
push
mov
push
mov
push
mov
push
call
jmp
jmp
push
call
jmp
mov
shr
and
movzx
mov
mov
add
mov
mov
push
call
add
jmp
mov
push
mov
push
mov
push
mov
push
call
jmp
xor
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
push
push
push
push
push
call
mov
mov
add
cmp
mov
jne
xor
pop
pop
pop
pop
add
ret
xor
cmp
jne
call
xor
pop
pop
pop
pop
add
ret
xor
mov
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
mov
xor
mov
rep
stos
cmp
jbe
mov
test
je
lea
mov
test
je
xor
and
mov
cmp
ja
mov
or
mov
inc
cmp
jbe
mov
add
test
jne
mov
mov
or
mov
inc
cmp
jb
push
mov
call
add
mov
jmp
mov
mov
xor
xor
mov
mov
mov
pop
pop
pop
pop
add
ret
cmp
je
call
xor
pop
pop
pop
pop
add
ret
or
pop
pop
pop
pop
add
ret
mov
xor
mov
lea
rep
stos
xor
shl
lea
mov
mov
test
je
mov
test
je
xor
and
mov
cmp
ja
mov
or
inc
cmp
jbe
mov
add
test
jne
inc
add
cmp
jb
mov
push
mov
call
mov
mov
mov
lea
add
mov
mov
mov
pop
pop
mov
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
mov
push
xor
sub
sar
mov
lea
mov
mov
add
mov
mov
mov
mov
cmp
jne
mov
inc
cmp
mov
jne
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
push
call
cmp
jne
mov
mov
cmp
je
mov
mov
push
push
mov
mov
mov
mov
mov
push
call
pop
ret
mov
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
(bad)
(bad)
(bad)
jg
pop
mov
xor
test
jl
mov
mov
sub
add
call
pop
pop
pop
ret
rcl
mov
dec
jne
ret
add
jge
mov
mov
call
mov
pop
jmp
mov
mov
dec
dec
and
mov
mov
and
xor
jne
inc
inc
jcxz
jmp
pop
pop
pop
mov
jmp
ret
int3
int3
int3
int3
mov
push
mov
and
sub
xor
test
je
mov
mov
mov
mov
mov
mov
and
int3
add
dec
int3
inc
je
int3
add
add
and
add
mov
add
or
nop
or
dec
mov
add
shl
and
jne
int3
or
add
je
nop
and
or
mov
and
int3
inc
add
mov
mov
mov
ror
je
je
mov
sar
or
add
add
jne
add
je
int3
int3
or
or
int3
inc
mov
ror
add
xor
jne
mov
inc
add
nop
rol
je
ror
or
inc
nop
and
inc
jne
and
mov
mov
dec
dec
lea
call
mov
add
and
mov
jne
nop
and
add
and
mov
inc
rol
int3
mov
inc
mov
rol
dec
add
and
dec
and
add
rol
and
ror
rol
and
jne
je
nop
inc
mov
inc
adc
int3
or
mov
mov
je
je
mov
add
inc
nop
nop
je
jne
rol
add
or
inc
jne
inc
je
mov
shl
je
je
mov
ror
mov
add
jne
mov
nop
jne
mov
mov
and
and
and
and
and
mov
mov
mov
mov
lea
mov
mov
push
push
lea
call
mov
pop
ret
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
cmp
push
jne
push
call
push
call
mov
mov
test
mov
mov
jne
mov
test
je
mov
sub
cmp
jb
mov
test
je
call
mov
sub
cmp
jae
push
push
call
add
push
push
call
add
test
jne
push
mov
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
mov
push
mov
cmp
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
lea
cmp
jae
cmp
je
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
and
test
jne
mov
test
je
xor
mov
mov
and
jmp
xor
test
jne
ret
mov
ret
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
mov
test
mov
mov
mov
mov
je
mov
add
mov
cmp
jne
mov
inc
cmp
je
test
je
and
test
je
mov
inc
test
mov
je
mov
mov
inc
inc
mov
inc
test
mov
je
mov
mov
inc
mov
inc
cmp
jne
mov
inc
test
mov
je
mov
inc
cmp
jne
inc
jmp
mov
inc
test
mov
je
mov
mov
inc
mov
inc
mov
mov
and
test
je
mov
inc
test
mov
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
cmp
je
test
je
mov
add
mov
mov
inc
mov
xor
cmp
mov
jne
mov
inc
inc
cmp
je
cmp
jne
test
jne
test
je
cmp
jne
inc
jmp
xor
mov
xor
test
sete
mov
shr
mov
dec
test
je
inc
test
je
mov
inc
mov
inc
dec
mov
jne
mov
test
je
test
jne
cmp
je
cmp
je
test
je
test
je
mov
and
test
je
mov
mov
inc
inc
inc
mov
mov
mov
mov
inc
inc
mov
inc
jmp
and
test
je
mov
inc
inc
mov
inc
inc
jmp
test
je
mov
inc
mov
mov
inc
mov
mov
jmp
test
je
mov
mov
pop
pop
pop
mov
pop
inc
mov
ret
nop
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
ret
nop
nop
nop
mov
add
cmp
ja
xor
mov
jmp
mov
ret
mov
ret
mov
ret
mov
ret
xor
ret
sbb
pop
inc
add
pop
inc
add
pop
inc
add
add
add
add
add
add
add
add
add
add
nop
push
mov
xor
mov
rep
stos
xor
pop
mov
mov
mov
mov
mov
ret
nop
nop
nop
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmp
jne
push
mov
call
call
jmp
pop
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
test
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmp
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
