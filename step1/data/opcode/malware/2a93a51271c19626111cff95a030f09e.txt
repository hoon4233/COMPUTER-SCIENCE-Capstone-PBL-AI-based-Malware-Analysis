add
inc
sub
les
out
sar
repz
retf
xchg
sub
jecxz
cmps
ficom
addr16
jp
add
outs
dec
pop
adc
aaa
aaa
mov
ja
jnp
test
sbb
movs
jp
push
pop
xchg
scas
adc
cmp
pop
add
adc
and
lea
cwde
mov
sbb
add
cli
xchg
mov
inc
add
cli
cmps
lods
in
addr16
fst
add
sub
sub
mov
add
mov
repz
mov
xlat
pop
pop
ins
rcr
mov
pop
sbb
das
dec
dec
clc
cmp
mov
sbb
popf
xchg
add
movs
fsubp
mov
add
js
repz
or
imul
adc
inc
scas
mov
popa
dec
repz
pop
push
jns
xor
cmp
test
xchg
ins
ret
hlt
sub
sub
push
dec
xchg
xlat
xchg
les
cmp
daa
mov
cmp
or
xchg
(bad)
push
mov
dec
inc
add
adc
in
je
jmp
(bad)
adc
push
pop
ins
or
mov
push
xchg
iret
adc
xor
jecxz
lods
mov
sub
pop
mul
imul
icebp
mov
xor
ret
lock
cmps
push
push
mov
lea
push
stc
add
dec
jp
jae
cld
sti
cmp
sub
fadd
pop
(bad)
or
lods
das
or
inc
scas
pop
push
ins
dec
(bad)
in
rcr
pop
mov
mov
mov
fmul
ror
sahf
mov
test
jno
jp
and
shl
fstp
jbe
xchg
in
and
sbb
popa
popa
popf
dec
add
push
les
fdivr
xchg
xor
cmp
pop
shr
jmp
mov
or
mov
aam
pop
mov
xchg
sbb
movs
out
or
adc
xor
pop
fs
shl
fwait
test
push
cmp
jecxz
mov
test
or
(bad)
or
cmp
dec
inc
dec
pushf
loopne
jl
in
test
dec
out
add
xor
sub
div
(bad)
sahf
jno
push
push
or
xor
jge
xor
aad
shl
and
cs
out
sub
push
sub
cmc
mov
lds
cli
cmp
enter
hlt
int
stos
rcl
retf
inc
aad
xchg
cli
fdivr
ja
mov
mov
scas
xor
adc
mov
sbb
outs
rol
mov
bound
cmps
push
je
sub
sub
add
inc
test
ds
mov
xchg
push
fnstsw
cmp
add
test
dec
inc
fsubp
ss
pop
cmps
jecxz
scas
sub
jnp
xchg
sbb
fs
jmp
jg
in
pop
sbb
add
and
in
aas
cmp
retf
or
mov
dec
xchg
(bad)
cmc
cmp
iret
push
xor
xor
ja
bound
mov
inc
or
mov
aad
aad
push
popa
imul
jnp
cmp
sub
in
hlt
mov
and
cli
add
push
(bad)
mov
fabs
cld
out
pop
fwait
xor
adc
push
(bad)
imul
inc
lea
mov
inc
xor
and
call
adc
jbe
loope
ja
test
pop
mov
dec
pop
ins
inc
sbb
(bad)
dec
out
jb
test
aad
mov
sbb
jp
adc
icebp
dec
out
pop
cmp
mov
daa
add
cli
sub
inc
ret
sbb
pop
pop
jmp
aam
movs
imul
aas
imul
bound
aam
cwde
adc
cmps
dec
lds
sbb
xchg
inc
push
je
pop
xor
push
dec
fwait
addr16
add
shl
(bad)
clc
mov
sub
xor
push
sub
jb
mov
pop
sub
(bad)
loope
sbb
pop
jmp
mov
fild
cmp
cmp
loop
fmul
mov
loop
hlt
scas
push
(bad)
dec
hlt
ficom
add
or
fsub
movs
aaa
jge
nop
sub
out
jmp
push
sbb
push
scas
sub
nop
or
sbb
frstor
mov
sbb
jmp
retf
mov
je
(bad)
out
mov
mov
sbb
adc
js
jle
fnstcw
arpl
pop
jmp
popa
push
pop
jp
cmp
cmp
dec
cmp
bound
leave
fild
sti
sub
mov
fsubr
push
or
dec
adc
push
cmps
add
jo
sbb
or
mov
in
into
xor
xchg
mov
pushf
lea
cmp
pinsrw
js
fisttp
es
int
dec
pop
xchg
sbb
out
int3
pop
xor
gs
jne
sbb
jbe
lahf
mov
repz
outs
rcr
(bad)
cwde
sbb
mov
push
or
ins
xor
cmc
in
dec
mov
jae
sbb
jmp
add
sub
mov
aas
sbb
sub
aad
dec
repnz
sbb
cmps
shr
nop
mov
mov
mov
test
xchg
lahf
imul
cmp
and
and
xchg
mov
cmp
inc
push
sti
cwde
xchg
pusha
ja
mov
and
(bad)
xchg
es
loopne
movs
sahf
les
xchg
xor
dec
mov
sbb
sti
mov
mov
out
sbb
push
sub
cmp
pop
cdq
loopne
mov
adc
rcl
pushf
adc
fwait
add
jg
jl
retf
and
xchg
popa
enter
ss
xchg
fcomip
fwait
dec
cdq
cmp
mov
jbe
mov
or
adc
mov
test
adc
iret
xor
jp
into
mov
mov
jge
sbb
mov
cli
inc
mov
les
fsubp
inc
fisub
mov
mov
stc
add
cmps
scas
stos
clc
push
int3
mov
adc
dec
stos
(bad)
jno
inc
(bad)
mov
popa
(bad)
cmp
jno
es
(bad)
call
push
cmp
addr16
adc
push
pop
ss
pop
movs
popf
outs
mov
sub
mov
sahf
repz
adc
in
xchg
pop
call
and
retf
push
jg
aam
inc
sub
xor
into
mov
push
fisubr
mov
sbb
test
fs
arpl
mov
xchg
aad
(bad)
call
lods
xor
jno
adc
cmp
clc
push
xor
fcmovbe
mov
loope
popa
pushf
sbb
xor
dec
pop
dec
clc
sub
fisttp
dec
add
inc
jmp
sub
shr
mov
repz
mov
cwde
ins
or
in
mov
ds
ds
pop
cmp
je
mov
mov
jnp
aas
mov
cli
call
xor
ins
sub
arpl
pop
dec
adc
sub
jo
scas
pop
or
xor
fimul
xchg
inc
ficomp
mov
clc
mov
xchg
xchg
cs
pop
inc
inc
in
bound
mov
loopne
sub
sbb
cmp
cmp
pop
cld
test
mov
outs
movs
sbb
rcl
rol
loopne
mov
inc
sub
sbb
loopne
aam
cmps
push
cmp
cmps
je
shr
icebp
cs
add
and
sub
ja
in
jae
call
lods
lods
pushf
cli
rcl
cmp
sub
stos
cmps
sub
or
sti
dec
xchg
(bad)
lods
ret
push
imul
lahf
mov
cs
cwde
int
std
cmp
in
mov
in
aas
mov
lea
gs
repnz
scas
mov
cmc
mov
pop
cmps
or
mov
mov
push
mov
and
cmp
sub
xchg
or
call
mov
nop
in
cdq
mov
mov
adc
sbb
repnz
pop
pop
push
movs
in
jg
cs
das
mov
dec
imul
mov
arpl
xchg
mov
xor
xlat
popa
std
adc
dec
iret
sbb
out
xchg
xchg
fcom
mov
xor
adc
jno
inc
lea
adc
xchg
dec
mov
adc
out
out
push
cs
add
lahf
(bad)
je
push
sub
imul
aaa
jae
imul
xlat
cmp
clc
or
xchg
ja
outs
mov
mov
mov
aam
aaa
jbe
into
dec
aaa
jmp
jl
sbb
push
push
iret
cmp
xlat
call
fwait
imul
sti
push
mov
xchg
cmp
push
aam
pop
dec
pop
stc
int3
enter
jbe
sti
pop
mov
adc
hlt
cmp
xchg
dec
mov
sahf
sbb
adc
jmp
push
cdq
hlt
pop
scas
push
sbb
lahf
test
and
scas
fcomip
aam
aaa
add
jle
adc
cmps
adc
pop
adc
out
js
(bad)
fild
sub
and
jns
xor
sub
(bad)
push
lock
fisub
mov
enter
fcmovne
pop
mov
into
shl
mov
retf
add
(bad)
retf
inc
fsub
in
loopne
mov
xor
mov
dec
jo
push
imul
pop
adc
sbb
or
mov
add
sbb
js
mov
aaa
cmp
or
jmp
mov
cmp
sbb
pop
mov
mov
mov
mov
rcl
push
cmp
pop
scas
call
and
int3
sar
fild
cmps
cmp
(bad)
sub
(bad)
shl
pop
and
sub
nop
test
addr16
sub
in
mov
in
mov
xlat
(bad)
adc
cmp
test
inc
call
repnz
fst
inc
(bad)
out
js
inc
aaa
fcmovnbe
es
stos
cli
cmp
out
inc
lahf
fistp
stos
mov
and
sar
add
out
mov
push
out
or
push
jp
pop
arpl
mov
jmp
fist
adc
xchg
out
loop
push
rcr
aam
stos
adc
sub
ds
mov
aam
xchg
rcl
aad
out
mov
xchg
mov
dec
jne
xor
pop
dec
les
mov
lods
imul
mov
dec
out
aad
daa
adc
ja
fidivr
cmps
scas
push
pusha
out
inc
jl
clc
dec
sub
mov
adc
lods
cmp
(bad)
cmp
or
ins
push
adc
cwde
cmp
or
(bad)
lea
push
fdiv
adc
pavgw
fild
jle
repz
mov
mov
out
mov
mov
add
pop
jmp
push
in
and
push
mov
cwde
lahf
or
shr
or
and
mov
in
xor
jo
cld
add
jns
out
adc
cdq
scas
push
inc
cwde
jns
xchg
out
mov
movs
inc
sbb
sar
add
icebp
push
movs
dec
arpl
xor
rcr
jb
jnp
push
add
xchg
(bad)
popf
add
xchg
xlat
push
mov
ins
stc
call
cmp
or
xor
loope
push
fimul
out
adc
pop
cmp
jbe
xor
scas
xchg
icebp
cwde
jbe
sbb
pusha
inc
cmps
jae
cmc
(bad)
jmp
sbb
sbb
sbb
ds
seta
out
jne
popa
fdivr
in
xchg
jge
std
mov
nop
daa
scas
in
mov
leave
and
push
add
fldlg2
jmp
in
sar
push
xor
push
jmp
ja
pusha
lea
dec
stos
outs
push
fucom
popa
xor
fidiv
push
and
mov
(bad)
mov
int
add
test
shr
dec
mov
icebp
in
int3
test
fucomip
dec
add
icebp
or
adc
mov
and
movs
pop
daa
sbb
mul
adc
bound
xor
call
cmc
sbb
sbb
pop
cmps
pop
pusha
in
sbb
aad
sub
jge
add
sub
loope
daa
adc
mov
icebp
movs
ins
jb
mov
push
(bad)
mov
and
(bad)
cmp
ins
test
inc
xchg
ss
repz
jmp
mov
stos
loopne
repz
dec
icebp
pop
mov
pusha
lds
retf
mov
mov
mov
lods
adc
sbb
retf
retf
into
test
jg
dec
fistp
rol
xchg
enter
pop
cmp
adc
or
into
xchg
ret
aaa
jbe
cmps
push
or
mov
mov
ja
iret
adc
daa
xor
sub
mov
outs
dec
add
iret
loopne
outs
and
mov
icebp
xchg
ja
lods
push
(bad)
fs
pusha
dec
xor
jb
jmp
or
jecxz
pop
clc
sbb
xchg
cwd
out
aaa
call
(bad)
int
mov
xchg
cmp
xchg
cmps
(bad)
call
in
jns
xchg
adc
mov
bound
dec
pop
sbb
out
cmp
add
pop
and
cdq
mov
push
neg
and
cs
or
cwde
adc
ret
setnp
fsubr
(bad)
fwait
ds
retf
sub
inc
or
xchg
xor
mov
add
addr16
mov
arpl
xor
lods
jecxz
adc
dec
retf
adc
and
pusha
cmp
mov
mov
(bad)
xor
xchg
cmp
pop
mov
xor
cld
bsf
call
gs
outs
add
ins
dec
mov
stos
inc
add
mov
mov
call
out
jne
xor
out
fld
cmp
mov
push
or
mov
sub
xchg
ficom
jo
out
not
mov
(bad)
jge
or
out
jge
xchg
xor
pop
push
addr16
and
or
or
das
sahf
ss
cmp
sub
popf
test
mov
push
and
test
nop
es
lock
jg
push
lock
fs
xor
push
call
cdq
lahf
adc
mov
push
rcl
fs
inc
iret
inc
fs
outs
ins
out
shr
int
cmp
out
(bad)
xor
xor
jbe
mov
jo
xor
push
xchg
jbe
fist
sub
ja
xchg
jne
mov
jle
add
out
push
ds
dec
jmp
or
xchg
push
in
pop
mov
xor
xor
int3
add
mov
sar
mov
cmps
(bad)
cld
mov
or
sbb
jno
pop
dec
jp
xchg
xor
imul
repz
dec
mov
retf
ficom
rcr
dec
cmp
ss
js
test
js
or
call
cmc
gs
jl
sbb
jno
fcomp
lea
push
fild
and
add
lods
daa
or
jno
and
mov
popa
in
test
out
add
push
xchg
xor
movs
pop
leave
div
sbb
add
fs
inc
jmp
hlt
add
lods
pop
mov
pop
cwde
jbe
jl
sbb
popa
pop
fsubrp
pop
pop
(bad)
sub
out
push
xor
pop
jge
mov
jbe
fisttp
arpl
arpl
jnp
jle
sar
xor
xor
add
and
outs
sar
int3
fwait
push
data16
mov
stos
pop
adc
loopne
popa
(bad)
and
repz
repz
and
xchg
push
sub
mov
movs
xchg
dec
je
cmc
sub
stc
ret
jl
xor
call
test
or
xchg
jg
and
(bad)
imul
cli
stos
cli
jl
dec
loop
mov
ds
daa
ins
call
pop
jecxz
inc
call
fisubr
mov
mov
in
mov
jbe
or
dec
jg
repnz
popf
sbb
xor
out
sub
or
pushf
arpl
inc
test
pop
cmp
xchg
retf
push
mov
ja
mov
or
loopne
adc
dec
sbb
sbb
lea
hlt
js
hlt
adc
xchg
mov
sar
push
cmp
mov
mov
dec
sbb
jmp
test
stc
pop
xchg
mov
jmp
mov
scas
aaa
mov
cmp
fsubr
fimul
and
xchg
repnz
aas
clc
and
xor
les
addr16
xchg
in
out
out
jg
mov
add
and
call
inc
stc
in
into
inc
addr16
adc
sbb
sbb
jecxz
cmovb
mov
add
fist
out
lock
pop
or
aad
dec
jnp
inc
jb
push
cs
and
in
shr
stos
push
jo
rcr
adc
retf
test
fcom
or
xchg
xchg
test
jo
pop
dec
add
in
mov
out
cmp
mov
mov
jnp
push
pop
cdq
movaps
retf
rcr
fsin
push
lock
je
(bad)
jno
dec
inc
push
cld
ins
mov
and
call
push
xchg
mov
and
pop
xchg
cmc
movs
out
sti
sub
pop
in
rol
xor
mov
fidivr
push
(bad)
jno
inc
mov
inc
pop
loop
mov
xor
sbb
(bad)
add
daa
sahf
rol
cmp
mov
js
push
xor
add
fcom
jne
inc
popf
dec
cmc
popf
out
push
push
push
jae
pop
mov
into
ins
cmp
daa
mov
sub
(bad)
cmp
jg
ficomp
cmc
stos
lock
mov
in
dec
jg
or
xor
mov
(bad)
outs
(bad)
into
sbb
int
int
in
mov
shl
sbb
and
sahf
add
and
clc
lods
jle
push
mov
hlt
les
or
das
sub
loopne
pusha
push
pop
loopne
or
and
fnstcw
xor
test
jge
cmp
imul
xchg
test
cmc
xor
gs
push
div
sub
test
jo
bound
retf
jge
mov
std
lea
imul
mov
inc
push
mov
inc
fisubr
in
pop
xor
es
aaa
lea
and
push
neg
dec
jg
out
add
in
arpl
retf
jg
mov
jp
dec
sbb
xor
aas
test
sub
sbb
mov
movs
bound
ficomp
sub
stos
mov
adc
mov
fcmovbe
xchg
fstp
sbb
sbb
retf
lods
out
jns
sahf
rcl
xchg
push
fistp
mov
ret
fstp
out
add
jge
mov
outs
ret
shl
mov
cmps
dec
rol
dec
fsubr
stos
and
ins
in
aam
in
fadd
(bad)
mov
and
sbb
add
clc
push
adc
or
outs
mov
cmps
pushf
sbb
sar
push
mov
jecxz
adc
push
je
xor
sbb
sub
mov
in
les
mov
mov
int
mov
mov
xchg
cmps
jne
popf
lds
cmc
jbe
pusha
or
mov
dec
xor
mov
pop
inc
stos
cmps
adc
daa
mov
mov
in
add
iret
jns
xor
push
adc
dec
mov
or
xchg
add
sbb
mov
lea
dec
pop
daa
leave
inc
gs
jge
pop
in
sub
sbb
inc
dec
ja
rcl
hlt
xchg
xor
or
jbe
rcl
cld
jmp
mov
adc
mov
pop
adc
sbb
mov
pop
or
es
ret
stos
int
sub
in
repz
stos
push
test
retf
pop
dec
ds
push
mov
xor
aam
pop
pop
shr
jb
call
hlt
sbb
inc
cmp
xor
xchg
cmp
sub
shr
fbld
xchg
movs
mov
es
ss
pushf
(bad)
fdiv
mov
or
fisubr
dec
pop
shl
mov
hlt
inc
cmp
mov
push
add
lahf
add
mov
scas
icebp
pop
dec
jp
add
dec
dec
sbb
adc
and
cmp
add
pusha
or
sbb
mov
shl
call
jge
lods
xor
xor
cld
inc
movs
xor
mov
ds
dec
or
xor
push
lahf
daa
fs
stc
push
push
outs
imul
push
outs
loopne
mov
enter
inc
pushf
push
loope
clc
inc
div
pop
mov
or
push
retf
mov
mov
cwde
fwait
ror
inc
iret
mov
data16
sti
add
into
(bad)
mov
xor
inc
push
(bad)
ins
xchg
jne
jle
stos
jle
sbb
adc
mov
test
adc
and
ds
and
and
dec
mov
dec
cdq
jp
push
pop
test
loope
sub
jge
in
lea
mov
cld
jo
sub
inc
mov
test
xchg
cmp
mov
aaa
dec
stos
int3
jmp
add
test
xor
xor
xor
sar
push
out
cdq
jae
jecxz
pop
lahf
and
cmps
mov
test
pop
pop
dec
xor
imul
or
mov
pop
cwde
mov
lods
imul
std
pop
nop
cs
mov
pop
scas
pop
jmp
mov
cdq
xor
cmps
fucomip
adc
(bad)
pop
jmp
jb
sub
lods
jg
shl
mov
push
sub
push
aad
adc
pop
xchg
xor
in
stos
cwde
cmp
cdq
ins
mov
add
rol
adc
dec
(bad)
sub
mov
and
js
dec
pop
scas
inc
or
(bad)
outs
mov
test
pop
pop
(bad)
sar
jp
jg
and
mov
call
pop
sahf
fadd
cmps
test
dec
adc
xchg
out
bnd
and
pop
cmp
xor
dec
pop
xchg
and
out
outs
push
mov
push
mov
aaa
cmp
or
xlat
sub
sbb
ins
pop
out
cld
stc
cmp
jns
mov
vshufpd
sub
adc
lahf
mov
push
mov
stc
pop
sub
(bad)
cmp
ins
lds
cmps
out
out
scas
jmp
adc
out
fidivr
je
(bad)
mov
int3
push
mov
sub
mov
fld
imul
add
or
jle
inc
push
in
and
xchg
ja
fcomp
cs
or
in
pop
sub
xchg
adc
mov
repz
and
cmps
hlt
movs
and
xor
mov
enter
mov
cmp
iret
outs
stc
aaa
dec
ins
cmp
das
add
std
inc
xchg
ja
jge
mov
dec
and
xchg
mov
fistp
adc
scas
scas
std
sub
add
xchg
mov
push
push
fisttp
mov
bound
pop
cs
mov
ror
cmc
xor
push
jl
sub
or
cmc
cmps
outs
dec
xchg
(bad)
rol
test
hlt
push
sub
and
jmp
add
out
jne
stos
add
jnp
stos
out
int
inc
es
das
and
push
clc
repz
shl
mov
inc
push
in
nop
jge
ss
mov
pop
add
and
mov
cmp
cmp
inc
add
aas
push
test
out
and
xchg
cmp
scas
xchg
push
mov
mov
ss
fs
ret
out
mov
push
leave
ss
fdiv
xchg
sub
dec
clc
mov
adc
fcom
imul
outs
jl
ret
out
fisttp
repnz
movs
call
div
ins
mov
jg
jmp
popa
cmp
xchg
cld
xor
ins
js
loop
push
xor
(bad)
xchg
sub
adc
test
cld
jne
add
leave
jge
mov
cmp
cmp
push
out
leave
ins
lds
or
xor
std
std
pusha
je
xor
aam
dec
add
pop
mov
cmp
push
jo
jecxz
pop
cmp
enter
jp
dec
mov
jmp
dec
cmps
rol
sub
jmp
mov
mov
loope
dec
cwde
enter
adc
fcom
adc
ficomp
rol
dec
or
fwait
and
sub
xchg
mov
stos
cmp
cmp
adc
mov
xor
add
or
mov
adc
inc
mov
cmc
sub
jbe
cdq
mov
dec
sbb
out
pushf
outs
cmp
test
fldenv
jbe
cli
pop
xchg
xor
and
sti
jae
mov
in
out
in
fcomip
inc
inc
ret
or
pop
mov
lea
aas
cmp
push
push
or
add
cmc
(bad)
jae
nop
xchg
and
sbb
pop
lods
fstp
xor
(bad)
xor
pop
sti
jae
icebp
scas
jmp
movs
arpl
and
jge
jns
loope
test
mov
mov
jno
stos
scas
das
psubsw
push
sbb
fs
mov
iret
fmul
test
dec
shl
pushf
pop
loopne
mov
in
add
mov
test
pop
pop
cmp
and
jno
cdq
push
out
aam
xlat
push
inc
out
jns
jp
cmps
mov
fsub
jo
push
mov
dec
sbb
mov
mov
std
jmp
push
push
sbb
(bad)
adc
and
mov
in
adc
aas
imul
aas
(bad)
jne
cmc
es
xchg
(bad)
(bad)
xchg
and
jmp
cld
rcr
jmp
aaa
and
stos
mov
pop
cdq
pop
dec
stos
jo
aad
outs
jl
and
daa
retf
dec
scas
aam
stos
lods
cdq
ins
xor
jg
daa
pop
ror
dec
cli
adc
cs
adc
xchg
add
mov
cmp
fwait
sbb
test
jge
cs
push
es
popf
dec
iret
test
fild
ds
sbb
ret
or
jle
adc
cs
or
fimul
add
jae
sub
mov
test
sbb
pop
(bad)
shr
jp
xor
xchg
mov
adc
push
and
add
aaa
ret
inc
int
aas
cmps
fwait
adc
sbb
and
sub
add
xor
fwait
nop
pop
adc
push
cmp
add
xlat
js
fstp
adc
hlt
mov
push
stc
fs
je
pop
or
sbb
jmp
test
adc
mov
and
sub
jne
jmp
mov
out
and
ficom
(bad)
out
adc
test
mov
and
xlat
es
ret
cld
ror
mov
imul
sbb
mov
xor
repnz
sbb
fcomp
(bad)
ret
xchg
(bad)
sub
push
ja
pop
mov
lods
ret
data16
sub
xor
jecxz
ins
cwde
mov
or
or
loope
add
sbb
int3
sub
aad
xor
and
push
jne
imul
dec
sbb
pushw
cli
mov
out
in
jle
mov
daa
cs
sti
jne
mov
jb
adc
fdiv
jecxz
test
adc
and
ds
loop
inc
pop
mov
in
(bad)
data16
repnz
retf
jne
fs
jns
xchg
push
xchg
pop
sub
popf
xchg
jge
inc
mov
jmp
and
or
fst
int3
push
nop
and
aas
sti
or
ins
stc
bound
jae
jns
stos
ret
dec
pop
push
and
loop
imul
inc
mov
(bad)
mov
mov
push
xlat
addr16
jb
jno
je
ja
lods
mov
outs
dec
loopne
mov
(bad)
and
mov
adc
or
mov
push
jecxz
adc
clc
pop
call
sahf
loope
fbstp
adc
mov
or
mov
ja
jecxz
stc
cmp
xacquire
mov
xchg
in
jns
ins
dec
ffree
pop
div
fwait
out
xor
scas
or
shl
jno
and
mov
ins
aad
(bad)
push
fucomp
push
(bad)
adc
sbb
in
scas
sub
out
sti
neg
enter
push
jp
sub
mov
xlat
xchg
ja
scas
mov
mov
mov
mov
mov
cmc
or
addr16
pop
sub
add
cmp
clc
sub
into
inc
xor
(bad)
sbb
sub
retf
mov
imul
idiv
mov
jbe
jge
jns
dec
cmp
jecxz
or
aaa
sub
repnz
sbb
into
ficomp
call
ins
xor
fwait
push
out
sti
xchg
stc
sbb
add
les
mov
adc
xor
sbb
pop
mov
push
into
rcl
lea
pop
add
jb
push
leave
in
movs
shl
aam
sti
ss
and
cs
out
ds
retf
cmps
jno
jbe
out
sub
xor
and
jbe
lahf
mov
push
les
add
lahf
inc
lods
popa
stc
cwde
xchg
out
mov
push
nop
(bad)
dec
sbb
pop
mov
rcr
xchg
jno
arpl
nop
jae
fs
jb
stc
adc
and
repz
in
cli
loope
fstp
inc
jp
sub
in
sub
lds
fist
clc
je
or
jnp
and
xchg
lods
add
pop
and
adc
cmps
rcl
fs
sahf
aas
mov
xchg
mov
lock
fwait
pop
jl
mov
xor
sti
ins
sbb
fisttp
(bad)
cmp
fld
mov
fcom
adc
movs
add
push
pop
aas
pushf
mov
dec
xor
(bad)
cli
imul
mov
xchg
adc
pop
and
cmps
push
cmp
inc
push
add
xor
movs
fucomip
or
rcl
retf
jmp
aad
ins
sbb
pusha
sbb
add
into
push
(bad)
neg
fcomp
push
mov
aaa
and
test
xchg
or
scas
dec
movs
test
xor
fdiv
and
stc
xor
sub
push
data16
mov
ret
pop
call
sub
xchg
mov
push
sub
iret
cld
sub
sub
xchg
inc
popa
push
mov
neg
fist
mov
fnstenv
push
xchg
sti
sub
jnp
jmp
lods
test
pop
push
mov
dec
xchg
aaa
ins
jns
xor
and
jne
mov
int3
cmp
jae
push
mov
gs
cmp
(bad)
ins
mov
xchg
loopne
pushf
pop
jle
pop
imul
outs
mov
add
add
cs
and
mov
sbb
xchg
adc
in
sbb
das
cmp
dec
(bad)
sbb
fidivr
add
fwait
test
in
(bad)
arpl
inc
sar
rcl
enter
clc
xlat
iret
and
mov
mov
inc
lahf
dec
jg
popf
or
mov
and
xor
mov
repz
push
pop
mov
loopne
retf
inc
adc
call
fstp
out
cmp
push
jae
loopne
(bad)
sbb
and
fwait
cwde
adc
sti
aam
mov
mov
jne
leave
mov
sbb
adc
test
aas
add
sub
aad
int3
dec
lock
(bad)
aas
xor
xor
test
or
ja
sub
push
push
add
(bad)
enter
mov
cmps
and
js
fdiv
iret
popf
mov
mov
jnp
cmps
adc
rcr
lea
and
(bad)
fadd
leave
add
mov
mov
ret
cs
xor
popa
and
loopne
xor
mov
jmp
xchg
inc
vphadduwq
sbb
ror
jg
add
push
jl
and
jge
loop
jb
xchg
jae
jl
imul
cmp
hlt
cmp
adc
sub
xchg
mov
sar
js
pop
push
add
addr16
not
adc
pop
xchg
xchg
cwde
or
sbb
popa
mov
mov
mov
xchg
les
imul
dec
fimul
es
int
mov
repnz
hlt
retf
icebp
aaa
ins
or
jbe
jle
pop
or
dec
ins
jbe
mov
jae
xor
xor
je
jns
pop
jmp
mov
sahf
test
adc
sbb
inc
in
outs
adc
push
mov
jg
test
gs
das
jnp
xor
mov
mov
sbb
in
dec
dec
les
cmp
push
(bad)
cmps
stos
arpl
mov
xchg
cmp
movs
test
dec
adc
inc
sbb
sar
add
push
into
inc
shl
bound
cmp
outs
mov
(bad)
arpl
rcr
xlat
jne
and
xchg
lahf
mov
push
add
mov
ficomp
out
pop
leave
xor
pop
add
mov
sar
push
dec
pusha
sub
cmp
int3
leave
int
movs
mov
mov
pop
pushf
sbb
mov
cmp
add
inc
push
fdiv
or
sub
test
aas
jg
repz
add
add
(bad)
cs
out
scas
pushf
movs
loopne
inc
in
test
xor
cmp
enter
xchg
mov
jge
and
pop
dec
ret
lahf
retf
push
add
xchg
into
inc
jns
add
packuswb
mov
dec
mov
gs
(bad)
popf
les
xor
add
(bad)
lds
pop
movs
pop
jmp
xchg
cwde
and
out
xor
arpl
loop
jge
inc
sub
pop
pop
int
xor
push
pusha
dec
xor
cli
in
(bad)
in
inc
push
push
in
fisttp
int
add
in
dec
mov
or
xor
sub
out
adc
in
not
push
mov
cdq
inc
mov
nop
pop
ja
mov
daa
mov
les
jb
int3
push
out
imul
inc
out
out
loope
in
int3
xchg
ins
sahf
rcr
push
leave
lock
inc
pop
pop
icebp
push
xor
call
(bad)
ja
mov
cwde
div
pop
outs
jae
sub
lods
pushf
pop
sbb
outs
sti
inc
outs
and
fs
sbb
mov
mov
outs
dec
(bad)
fcomi
mov
stos
jb
mov
mov
es
lds
popf
jecxz
xchg
popf
into
sbb
cmp
dec
iret
mov
mov
imul
fwait
js
mov
pop
repnz
stos
jge
in
inc
mov
dec
push
jb
repnz
mov
sbb
test
out
pushf
lock
lea
pop
les
adc
pop
repz
retf
cmp
cmc
sub
mov
xor
push
popa
push
lea
push
(bad)
fs
arpl
shl
push
mov
mov
or
sub
cmpps
sbb
mov
mov
scas
jae
jecxz
cmp
mov
int
jns
jae
pop
dec
mov
push
cmp
dec
sub
pop
mov
xchg
and
jbe
dec
push
and
pop
push
sbb
std
gs
in
sub
fisttp
cdq
inc
jle
daa
pop
mov
arpl
arpl
in
jne
mov
xlat
std
mov
mov
or
and
fucomip
push
xlat
and
shl
sub
jb
mov
(bad)
adc
sub
repz
int3
mov
pop
xor
and
outs
cmp
in
iret
jmp
int
out
hlt
cmp
ds
mov
add
cdq
loopne
mov
lds
daa
pop
ins
pop
lods
rcr
adc
mov
and
shr
sbb
ret
cmp
adc
je
(bad)
pushf
push
bound
pop
dec
jecxz
jecxz
add
into
in
pmulhw
sahf
xor
lahf
aaa
mov
xchg
lahf
(bad)
mov
(bad)
rcr
rcl
push
cmp
inc
gs
inc
jae
icebp
sbb
mov
daa
mov
leave
sahf
jno
sub
aas
(bad)
adc
jnp
mov
push
add
into
arpl
adc
fs
and
sub
or
gs
inc
sub
cwde
stc
jge
cwde
sahf
inc
cmp
mov
movs
(bad)
fstp
rcr
ret
loop
mov
cmc
xchg
cmp
inc
push
mov
ins
inc
jo
fcomi
xor
imul
mov
inc
pop
mov
lock
cmp
lock
mov
mov
dec
outs
add
ss
movd
mov
retf
add
outs
sbb
pop
dec
retf
daa
or
sub
cwde
sbb
sub
leave
sub
jge
cmp
lahf
into
(bad)
shr
adc
stos
jle
loopne
mov
jecxz
mov
fld
jge
sub
mov
mov
daa
neg
sbb
shl
fisubr
aam
mov
jle
retf
lahf
mov
or
shl
fst
bnd
popf
imul
loop
movs
mov
xchg
jno
lds
pop
lds
sbb
xor
dec
xchg
icebp
mov
enter
icebp
cld
jmp
xchg
(bad)
push
and
call
fwait
sbb
cmps
add
les
sub
cs
shr
pop
sbb
enter
sbb
adc
and
add
add
jmp
xchg
cmp
bound
(bad)
cmp
or
dec
sbb
test
add
cdq
ds
push
mov
es
xchg
pop
sub
stos
push
ss
div
xlat
pcmpgtd
mov
jb
xor
retf
lea
xlat
mov
(bad)
lock
sub
add
push
push
adc
mov
aaa
inc
dec
les
out
cmp
and
aam
cmc
fwait
sbb
jo
stos
(bad)
and
mov
mov
jge
sahf
es
dec
push
xlat
arpl
not
in
cmc
dec
daa
not
inc
push
jno
retf
cwde
mov
movs
daa
cmps
sbb
stos
sahf
lods
mov
outs
push
mov
sahf
mov
sar
mov
add
mov
aas
adc
xchg
and
xchg
clc
xchg
clc
enter
push
and
in
in
loopne
xchg
mov
sbb
imul
jp
mov
pop
stc
xchg
nop
mov
inc
cmp
leave
push
ret
jmp
xchg
movs
mov
retf
xchg
ins
fisub
cdq
cmp
fwait
sub
push
mov
in
mov
aam
xchg
les
jns
or
cmp
xchg
fs
or
aad
xchg
mov
sbb
sub
push
mov
lock
icebp
pop
js
mov
movs
jle
mov
push
jp
push
addr16
mov
dec
dec
sbb
nop
or
pop
sub
jp
cmp
jecxz
daa
fwait
outs
xchg
dec
push
stc
test
push
mov
cmp
or
pop
push
mov
push
mov
xor
xlat
sbb
mov
adc
repnz
mov
outs
(bad)
mov
aaa
adc
cmp
xor
pop
mov
retf
es
pop
ror
pop
and
fcom
pushf
inc
push
stos
mov
pop
je
and
shr
int
fistp
add
adc
in
sbb
out
stos
outs
fxch
test
dec
mov
sbb
retf
lahf
mov
out
cli
push
fwait
xchg
xor
jge
jp
sub
mov
mov
into
cmps
jne
mul
mov
imul
fs
mov
ds
test
dec
sbb
test
add
(bad)
or
(bad)
nop
pop
xchg
sub
xchg
aad
and
inc
adc
mov
sti
out
in
mov
out
mov
into
push
loopne
jmp
sub
and
mov
leave
inc
jno
sub
test
xor
test
arpl
jp
mov
dec
adc
push
xchg
adc
test
xor
fs
dec
jge
pop
or
aaa
sub
jno
fild
jge
lock
inc
int
jns
(bad)
push
inc
lock
pop
fbld
mov
aad
pop
pop
daa
and
push
sbb
xor
push
ret
push
or
icebp
and
xchg
and
jb
pop
cmp
push
pop
ud0
dec
dec
mov
cdq
fsincos
das
mov
fsub
mov
retf
xor
mov
popa
pop
js
test
mov
jb
(bad)
aas
lahf
push
jnp
retf
clc
ins
mov
dec
outs
sbb
icebp
out
imul
sub
adc
dec
loopne
fld
xlat
loopne
movs
test
inc
adc
daa
popf
dec
jb
push
lods
nop
cmc
outs
mov
jecxz
(bad)
mov
mov
xchg
out
in
jne
dec
ret
push
leave
sahf
mov
push
or
push
mov
adc
dec
dec
jmp
dec
adc
mov
loop
out
movs
or
dec
add
xchg
mov
sbb
iret
cdq
lods
pop
shr
push
jnp
or
js
pop
retf
(bad)
fistp
sub
mov
popa
inc
and
pop
dec
cmp
outs
(bad)
outs
inc
neg
test
and
dec
call
(bad)
push
stc
dec
xchg
and
aad
cmp
add
nop
lahf
or
jl
mov
lds
or
enter
in
test
stc
pop
mov
fwait
add
add
jne
cmps
xchg
sti
sub
popf
fisubr
outs
ret
or
(bad)
and
push
and
clc
adc
jmp
stos
mov
jge
das
into
xlat
call
in
adc
jp
pop
or
pop
(bad)
neg
sbb
inc
ror
inc
mov
test
mov
jle
add
scas
push
shl
jo
fnsave
xchg
xchg
aam
jp
add
frstor
nop
pop
into
sub
movs
faddp
ficomp
hlt
leave
sbb
stos
cld
or
bound
lahf
(bad)
in
fst
in
adc
mov
pop
cmps
adc
pop
fidiv
sbb
inc
addr16
(bad)
xor
cdq
out
mov
xlat
adc
cmp
sub
fdiv
clc
lods
jbe
xchg
pop
fcomp
(bad)
ins
outs
fnstcw
int3
adc
or
retf
icebp
lods
(bad)
outs
xchg
mov
scas
cli
sub
and
push
add
popa
push
jno
data16
(bad)
push
mov
jecxz
int
rcl
cmp
(bad)
push
lods
fadd
jns
jmp
int
cmps
rol
inc
pop
xlat
outs
or
addr16
movs
push
call
vscalefps
jbe
bound
(bad)
mov
mov
mov
fld
jp
jnp
cmp
pop
dec
xor
fisubr
pop
rcr
jae
add
icebp
enter
imul
xor
mov
pusha
inc
dec
mov
outs
sub
(bad)
rcr
jns
dec
aam
inc
pop
sbb
add
cwde
mov
movs
int3
push
and
les
scas
retf
inc
js
add
rcr
aaa
mov
fwait
pop
mov
pusha
adc
mov
pop
adc
inc
push
stos
and
xor
aas
out
call
enter
das
push
loop
adc
xchg
pusha
xor
ror
pop
mov
xor
mov
and
fdiv
cmp
mov
xchg
movs
ja
push
add
xor
xor
mov
jo
repnz
cli
cld
stc
mov
(bad)
cld
mov
(bad)
mov
(bad)
loop
fild
push
cmp
and
dec
cmp
jle
xchg
loope
ss
jl
jg
daa
xor
test
or
push
loope
pop
xor
movs
mov
mov
xchg
jge
aam
loope
hlt
add
dec
sbb
add
mov
xchg
cdq
loopne
in
inc
retf
fs
pop
lods
mov
ss
fbstp
ds
cli
xchg
fcomp
add
iret
and
cmp
mov
mov
xlat
shl
(bad)
push
or
cmps
movs
lock
mov
fisub
jns
test
mov
adc
cmp
push
push
push
(bad)
call
xor
nop
ja
ds
mov
mov
push
mov
inc
and
rol
or
pop
mov
push
xor
(bad)
ror
mov
adc
hlt
pop
ins
adc
sub
pop
push
push
fdivr
push
test
xor
mov
(bad)
retf
mov
xlat
ds
aaa
cwde
lahf
bound
int3
dec
sbb
jnp
stc
dec
sbb
push
jne
add
adc
push
cs
ds
in
stc
or
push
fsub
test
inc
scas
aam
xchg
inc
mov
xlat
je
mov
jno
pop
popa
xlat
jo
xor
add
jbe
adc
int
cwde
(bad)
jmp
and
je
jl
scas
cmp
and
fnstenv
data16
cmp
repz
sbb
adc
les
or
dec
test
cmp
(bad)
xchg
jmp
add
mov
push
jae
mov
xchg
lahf
cdq
clc
mov
out
test
xchg
dec
inc
repz
pusha
push
sti
inc
jl
(bad)
repnz
add
pop
mov
jbe
mov
xchg
adc
test
lock
dec
arpl
pop
or
inc
enter
xor
es
jnp
lock
push
push
aas
icebp
mov
and
aam
adc
gs
pop
daa
loope
or
sub
xor
and
in
(bad)
mov
les
push
popf
call
(bad)
sti
loope
repz
fcmovnbe
idiv
pusha
bound
adc
lea
fisub
fst
sar
ret
push
xor
jge
aaa
popf
pop
xchg
ret
add
mov
fisubr
push
ins
fiadd
inc
pop
and
loopne
loop
mov
sbb
or
push
(bad)
xor
jno
ror
jp
(bad)
scas
mov
test
adc
push
icebp
push
aaa
inc
jo
rol
xchg
stos
adc
jg
ins
scas
repnz
and
movs
in
xchg
xchg
push
mov
adc
std
inc
adc
push
call
pop
in
mov
mov
stc
push
xchg
repz
xor
cmp
retf
fbld
stos
mov
sahf
add
mov
das
jae
dec
retf
jae
jae
jae
hlt
mov
xchg
pop
push
js
inc
or
sbb
loopne
xor
jg
xor
in
mov
xor
add
push
jg
dec
scas
fimul
inc
out
mov
cmp
(bad)
mov
cmp
arpl
bound
imul
push
arpl
std
inc
and
ins
mov
lds
inc
(bad)
dec
inc
pop
int
mov
enter
pop
into
test
add
js
cmp
sub
(bad)
or
icebp
mov
jno
popf
rcl
pop
push
jnp
jl
call
div
ror
js
inc
or
adc
xor
jno
or
inc
sub
popf
pop
sub
aaa
push
rol
push
aam
jae
mov
dec
mov
lods
clc
shl
xchg
sbb
(bad)
push
mov
dec
leave
mov
retf
bound
inc
xchg
shl
jge
or
inc
jle
and
mov
jecxz
mov
lahf
lds
pushf
mov
in
rcl
or
xor
ds
scas
bound
or
aas
mov
ficom
lock
in
dec
mov
out
cmp
jno
cmps
add
push
aad
jbe
lods
or
cmps
mov
cld
jbe
clc
enter
xchg
scas
int
xchg
lahf
inc
cvtpi2ps
fs
stc
sub
jecxz
xor
aas
adc
inc
imul
push
lods
adc
jae
into
pop
cdq
rol
cdq
icebp
int
sti
xor
scas
gs
loope
inc
adc
(bad)
xchg
addr16
fld
loop
sub
movs
dec
inc
push
inc
dec
or
mov
ja
inc
mov
mov
aam
or
bound
dec
inc
aas
fisub
lea
pop
retf
jnp
in
(bad)
in
repz
movs
xor
loop
int
rcl
scas
jno
rcr
fmulp
fidivr
(bad)
lahf
inc
ror
cmp
cmp
test
push
aaa
leave
dec
repnz
(bad)
sbb
jg
xchg
mov
cld
pop
shr
or
push
clc
imul
nop
sbb
lahf
lds
dec
es
sbb
jl
dec
mov
loopne
ins
or
(bad)
aad
sub
out
lods
stc
or
jecxz
jge
xor
movs
stos
mov
pushf
and
add
jmp
shr
repz
in
(bad)
mov
ds
add
xor
aas
dec
int
movs
xlat
imul
repz
popa
and
pop
inc
and
or
cwde
in
sub
mov
ss
in
jmp
sub
pop
out
sti
jns
cmp
sub
inc
push
xchg
lea
in
and
lock
and
lods
les
jmp
fild
add
inc
ret
imul
xor
mov
pusha
mov
mov
cld
mov
jg
les
call
shl
mov
test
daa
scas
sar
mov
mov
push
or
xchg
outs
test
mov
and
gs
or
dec
call
inc
xchg
clc
data16
stos
outs
inc
out
jns
xlat
mov
mov
scas
and
outs
add
cmp
sub
test
adc
lds
call
or
lods
retf
mul
cmp
out
pop
stos
inc
xchg
push
pop
xchg
cmp
and
rcl
xor
cmp
(bad)
cmp
in
push
mov
cwde
inc
clc
clc
mov
ss
out
xchg
push
sbb
call
or
dec
mov
retf
and
and
sbb
push
pop
sbb
and
test
dec
mov
jo
lock
and
dec
push
bnd
mov
mov
retf
paddsb
into
sub
push
push
push
popf
jecxz
inc
dec
loopne
adc
xchg
imul
pop
in
repz
loopne
mov
fisttp
fnsave
repz
stc
mov
xchg
fmul
leave
jo
xchg
cmp
add
sbb
cmc
sti
adc
iret
push
lods
sbb
jne
fwait
(bad)
adc
movs
jno
jle
and
push
arpl
into
sub
mov
loop
ds
adc
xchg
ror
cmp
stc
jl
cmp
jbe
fldenv
sar
dec
inc
fwait
sub
lahf
cmps
inc
ds
arpl
cmp
mov
inc
test
mov
imul
inc
popf
retf
mov
out
lods
jo
fsubr
stos
add
push
xchg
xor
rcl
sahf
mov
das
call
js
js
jmp
mov
mov
cmc
repnz
inc
mov
or
jmp
mov
scas
out
fistp
xchg
stos
pop
call
jbe
gs
xchg
mov
mov
int3
jg
out
stc
jmp
daa
aam
icebp
add
jge
xor
cmps
addr16
mov
adc
inc
dec
call
push
mov
jmp
dec
fucomi
push
pushf
push
pop
out
dec
and
clc
cs
inc
ins
test
inc
fnstsw
mov
and
int3
in
or
jne
fwait
mov
and
out
out
mov
add
scas
mov
rcl
icebp
adc
fistp
lds
daa
fiadd
sub
mov
xchg
mov
jne
dec
cmp
ror
loopne
out
inc
or
xchg
xor
xchg
pop
and
aaa
lods
int
jae
ja
fucomi
cwde
pop
das
lea
pop
or
mov
rcr
xor
push
mov
mov
sub
mov
dec
js
neg
mov
in
add
inc
sbb
or
daa
cli
mov
push
iret
mov
fwait
add
push
in
and
pop
mov
sub
aaa
jnp
sub
jge
jns
xor
or
jnp
sbb
push
xchg
scas
pop
push
ffree
sub
shl
popf
cmp
dec
mov
dec
jmp
lods
xchg
ja
inc
push
aaa
or
sbb
add
push
jmp
mov
paddb
call
xchg
cs
imul
add
pop
fs
fiadd
retf
push
cmps
fstp
push
(bad)
lods
shl
sbb
pop
push
lods
fbstp
ret
mov
inc
js
inc
pop
cmp
mov
stos
dec
xor
mov
push
mov
div
cli
and
addr16
fs
fwait
cmps
sbb
sbb
push
cmp
xchg
jb
xchg
loop
out
ss
inc
push
jne
fisubr
pop
int
ds
cmp
xor
or
sub
sub
mov
mov
adc
int3
aas
fwait
jp
sub
fsub
xchg
stos
daa
daa
ret
pop
inc
ins
jb
std
jge
retf
sub
out
mov
cld
in
rol
mov
shl
mov
jmp
cmp
cmps
pop
cmp
stc
inc
dec
cmp
movs
outs
pop
sahf
jbe
mov
outs
jbe
cmps
retf
add
cmp
in
xchg
push
sub
ror
retf
test
mov
xchg
aam
aad
xchg
dec
jmp
xor
test
mov
popf
repz
mov
push
mov
inc
jp
sub
mov
(bad)
and
mov
xchg
push
frstor
mov
leave
or
cmp
mov
cmps
pop
das
cmp
xor
jmp
mov
sbb
mov
mov
adc
bound
push
fnstcw
test
ret
adc
rol
pop
jbe
mov
lds
fdivr
mov
pop
clc
jle
ds
repz
mov
xor
(bad)
jmp
xor
loope
xor
daa
sub
mov
sub
lock
not
sbb
push
hlt
push
mov
xchg
mov
jo
fs
icebp
jno
fisubr
jg
int
loope
fnstsw
(bad)
(bad)
mov
mov
aas
shl
adc
cmp
cli
scas
shr
sub
sbb
popa
push
mov
repz
mov
jmp
pop
std
and
push
mov
leave
sahf
sbb
out
jns
rcr
lods
cwde
retw
gs
(bad)
adc
jns
pop
jge
loop
jp
repz
lea
sub
mov
jns
stos
cmp
int3
js
les
retf
pop
out
fisubr
rol
xchg
sbb
dec
jo
push
sbb
and
add
stos
sbb
jmp
mov
call
mov
aad
mov
push
jp
cli
fwait
test
lods
xchg
es
push
ss
mov
(bad)
aad
(bad)
enter
movs
push
add
jno
movs
in
dec
mov
mov
lds
ret
dec
xor
add
push
and
cmp
push
leave
jecxz
test
push
mov
lea
cld
mov
mov
in
out
fs
(bad)
or
out
retf
fmul
push
mov
(bad)
and
adc
aaa
dec
jmp
jmp
or
push
arpl
pop
and
add
sub
lahf
nop
loopne
daa
jmp
ret
sub
rol
lahf
push
push
loopne
add
cmp
imul
dec
sub
pop
push
add
mov
jmp
retf
lahf
hlt
jae
pop
jo
jno
jo
adc
cmp
sahf
jne
(bad)
retf
jo
xchg
retf
test
stc
mov
inc
test
push
pop
sbb
adc
aaa
psrlw
xchg
mov
outs
cmp
push
out
fadd
mov
or
mov
push
popf
ret
push
jmp
sti
xchg
scas
sub
mov
cld
(bad)
sub
call
push
pushf
cs
into
xchg
sub
test
into
pop
xor
loopne
xor
in
jl
lock
sbb
cld
sbb
mov
mov
lods
adc
mov
sub
and
out
pop
ss
ret
popf
jmp
imul
push
das
push
sub
fwait
aas
cmp
call
shr
xor
inc
mov
pop
inc
mov
xor
mov
or
arpl
call
or
or
sbb
xor
in
ja
pop
pop
outs
adc
inc
loop
cli
xchg
lods
stos
dec
and
add
and
add
movs
jmp
(bad)
aas
in
jge
pop
fidivr
jne
bound
fcmovnu
inc
fs
icebp
enter
shr
scas
mov
int3
xor
mov
ss
jle
ins
jae
sbb
add
jecxz
mov
dec
mov
(bad)
scas
push
mov
imul
pop
lods
xor
jl
push
leave
mov
mov
jnp
popa
add
mov
(bad)
mov
xor
mov
lods
shl
sub
mov
out
loop
dec
dec
sbb
repz
scas
pushf
push
mov
xchg
push
aam
in
rcr
jle
(bad)
sbb
adc
out
fucomip
jmp
gs
dec
shl
frstor
cmps
jnp
dec
iret
lahf
jmp
in
mov
push
mov
sub
adc
push
(bad)
fisttp
daa
sub
int
movs
add
dec
adc
xor
gs
jle
push
or
sub
arpl
or
adc
lahf
call
mov
mov
cli
push
mov
dec
xchg
and
mov
sbb
pop
cdq
fild
aad
inc
int
leave
sub
xor
fwait
mov
dec
das
popf
mov
and
mov
mov
mov
push
pop
cld
cmp
sub
jne
sbb
and
loopne
sbb
test
out
inc
(bad)
jmp
aas
xor
ror
adc
jo
dec
mov
sar
maxps
sahf
adc
(bad)
pop
xor
js
xchg
inc
inc
xchg
or
push
xchg
movzx
pushf
ja
in
dec
lea
jl
push
pop
xchg
fldenv
ja
pusha
cmp
mov
int
pop
inc
pop
inc
lahf
cmp
stos
aad
repz
sti
je
pop
daa
mov
jns
cmp
out
cld
push
fst
add
jae
sbb
pop
sub
repz
out
jae
add
cmp
mov
dec
jne
adc
push
adc
call
pop
test
loopne
jb
sub
iret
sbb
(bad)
test
sbb
push
fcomp
imul
pop
jb
dec
iret
cli
cmps
xchg
sbb
add
test
jno
repz
or
sub
mov
iret
shl
call
iret
test
jp
jl
push
mov
add
jge
(bad)
cdq
push
popa
or
cmp
pop
sti
dec
repz
(bad)
pop
cwde
mov
cmp
lock
inc
mov
mov
sbb
xchg
xor
push
lods
and
push
fbld
loope
sar
fcomp
pop
mov
jmp
je
mov
inc
sbb
and
or
mov
mov
xor
popf
fcom
cli
xchg
jl
xrelease
fsubr
mov
push
enter
adc
push
fcmovnbe
pop
scas
mov
cdq
test
or
pop
das
loopne
jp
adc
pop
and
enter
push
or
jg
les
cmps
stc
sub
retf
xchg
jbe
adc
movs
adc
int3
add
cmp
or
or
ins
fist
ror
arpl
inc
inc
int
xchg
cs
dec
fst
push
shl
pop
stos
repz
mov
out
jle
adc
jne
out
in
or
mov
dec
and
dec
ss
sub
js
fcomp
into
xor
push
fisub
sub
cld
adc
cli
xchg
sub
outs
fs
push
outs
push
scas
pop
ins
mov
stos
lods
adc
ss
jo
pop
sbb
mov
lods
test
and
test
mov
emms
pop
sub
xchg
push
cmps
mov
or
mov
es
outs
(bad)
and
dec
jno
xor
popa
and
(bad)
inc
mov
adc
inc
mov
ds
retf
outs
mov
or
ret
movs
ja
adc
mov
aaa
fwait
or
repz
mov
xchg
jle
push
xor
icebp
retf
jae
sbb
(bad)
mov
fstp
mov
lods
(bad)
jge
pop
mov
fucomi
outs
and
mov
idiv
adc
add
mov
pop
jmp
sbb
movs
cmp
add
(bad)
ds
xor
push
jg
cmp
jno
xchg
pop
ficom
dec
das
mov
imul
cmp
rcr
daa
and
sub
or
pop
cmp
arpl
and
sub
jecxz
pop
lock
cmc
lods
cmp
shr
adc
int3
fwait
nop
fwait
sub
or
hlt
adc
(bad)
cdq
sbb
les
ret
dec
sbb
cmp
fidivr
inc
push
xor
inc
(bad)
xlat
neg
sbb
in
push
dec
push
jnp
inc
dec
jae
loope
or
loop
pop
mov
xor
fsubp
out
test
loop
xor
mov
jae
sahf
in
and
and
mov
mov
(bad)
sbb
or
leave
adc
lahf
pushf
fst
or
rol
inc
scas
push
pop
xchg
sub
outs
pop
icebp
in
inc
jbe
test
pop
enter
mov
push
xor
mov
cwde
sbb
push
mov
cmp
dec
jmp
loopne
pop
or
push
jecxz
sub
ror
jecxz
push
movs
xchg
jp
call
push
data16
in
dec
add
popa
jb
xor
retf
mov
js
test
hlt
dec
aas
loop
xchg
js
call
push
mov
je
sti
xchg
xchg
rol
daa
inc
cmp
jno
cmp
sbb
test
cmp
jle
clc
sub
inc
jae
xor
xchg
adc
inc
pop
and
in
cmp
leave
ret
push
add
sub
fisubr
or
mov
and
sub
ret
dec
sub
int3
dec
jge
mov
adc
fisub
xchg
add
sbb
lods
cmp
imul
cmps
cmps
icebp
cmp
pusha
and
shr
cld
pop
push
xchg
jle
add
adc
fs
xchg
sbb
loope
lods
xor
mov
sub
mov
mov
add
mov
jmp
(bad)
push
imul
lock
dec
xchg
sbb
jno
push
jae
loopne
fs
fisub
sti
fdivr
inc
and
fst
jb
jecxz
mov
push
mov
mov
or
jecxz
or
xor
push
or
sub
xlat
fs
jp
xchg
ja
or
add
adc
movs
and
fild
and
mov
add
inc
fdivr
ins
es
xor
(bad)
fwait
adc
and
or
mov
sar
xchg
out
mov
gs
add
aam
and
inc
push
push
repz
fldenv
jle
push
ins
das
jmp
inc
aas
jmp
push
xor
das
into
std
jmp
push
push
pop
rol
stc
adc
dec
ins
cmp
pop
sub
dec
popa
mov
mov
jg
jb
das
sub
out
ins
sbb
ss
aas
add
push
mov
es
adc
test
dec
sbb
cmp
sub
dec
inc
sbb
outs
push
js
fs
or
push
mov
iret
push
imul
pop
add
adc
imul
(bad)
push
ins
sbb
cmp
pusha
scas
mov
cld
mov
adc
cmp
loop
add
jo
mov
push
mov
mov
ret
cld
mov
lock
pop
popa
xlat
in
cmp
call
les
sbb
es
adc
shl
loop
ss
imul
ret
imul
xor
inc
mov
(bad)
repnz
imul
mov
clc
push
dec
mov
inc
mov
push
jmp
push
popa
arpl
jmp
adc
cmp
cmp
xchg
and
aas
fs
mov
mov
repnz
idiv
jmp
xchg
xor
and
xchg
ss
jb
mul
call
sbb
mov
dec
(bad)
or
mov
gs
add
mov
pop
mov
inc
mov
mov
outs
sbb
jge
(bad)
jl
into
mov
ds
out
xor
jmp
mov
(bad)
dec
cmps
data16
push
ds
mov
sbb
jne
jp
jae
add
loopne
int
mov
jle
test
lahf
mov
mov
cdq
loope
add
ret
js
sbb
fcom
push
cdq
push
test
and
loop
lock
adc
stc
mov
arpl
xor
sbb
jne
and
sub
jbe
xchg
leave
in
in
mov
or
jo
adc
cmps
mov
xor
sub
inc
je
add
jne
mov
inc
cmp
ja
xor
popa
aam
push
mov
call
push
jle
jae
add
ds
mov
cmp
dec
dec
dec
retf
sbb
cdq
cli
icebp
xor
push
cmp
add
(bad)
cld
cmc
cmps
fwait
xor
inc
xchg
jnp
ins
mov
sbb
leave
(bad)
fsubr
ss
inc
ins
and
and
xor
add
jo
enter
mov
test
fdivr
lock
fild
mov
mov
ret
outs
sbb
loope
jle
push
or
in
sbb
call
(bad)
sbb
dec
jne
and
sbb
(bad)
js
sub
or
pop
mov
or
pop
jle
pop
pop
fwait
inc
mov
aaa
mov
push
dec
pop
ret
inc
push
or
inc
add
ds
dec
fimul
int3
jg
popa
add
mov
xchg
frstor
sub
sbb
clc
jp
jecxz
jbe
mov
stos
lods
(bad)
push
(bad)
clc
jb
mov
sbb
mov
sti
in
inc
push
data16
enter
nop
(bad)
and
sub
cli
mov
push
(bad)
or
xchg
nop
lahf
ds
sbb
repnz
(bad)
push
sub
ja
call
test
fs
sbb
mov
push
mov
sti
rep
mov
es
ins
lock
and
stc
sbb
dec
fsqrt
in
pop
les
or
mov
push
adc
ins
enter
das
dec
gs
movs
fs
mov
cwde
out
ins
cmp
cmovo
fadd
not
xor
cli
cwde
sbb
dec
test
pop
lods
ins
xchg
xchg
sbb
fcom
inc
addr16
cld
mov
(bad)
out
outs
fistp
test
and
cmp
jbe
inc
adc
sbb
xchg
sub
jmp
adc
out
pop
pushw
xchg
dec
movs
xor
push
cmp
cld
shr
pop
pop
cmp
fcmovnu
mov
imul
pop
pop
mov
sti
mov
into
mov
les
adc
sub
mov
ins
enter
stos
int
js
sub
dec
add
jnp
mov
movs
lock
vpmulhuw
jl
retf
clc
test
mov
enter
push
popf
sub
popa
es
cs
jns
(bad)
out
sub
(bad)
jecxz
inc
xchg
pop
test
outs
lods
retf
das
lahf
or
sbb
fidiv
push
js
or
xchg
inc
sub
mov
pop
adc
pop
movs
mov
jbe
popa
inc
pop
adc
mov
xchg
jnp
mov
mov
xor
inc
cwde
xor
(bad)
xor
pop
or
call
leave
push
sahf
icebp
imul
inc
push
fisub
adc
(bad)
addr16
jmp
cmp
sar
data16
add
retf
ds
int
cs
cmp
adc
mov
xchg
ja
cmp
dec
mov
push
movs
fild
mov
pop
pop
push
retf
(bad)
movs
shl
jae
add
pop
cmps
mov
mov
mov
xlat
mov
aaa
repz
popa
pop
in
and
(bad)
adc
adc
leave
fwait
rol
loopne
mov
clc
push
outs
push
push
out
aam
icebp
dec
jp
mov
dec
mov
fcomp
in
xchg
imul
xlat
jle
jb
clc
adc
cmp
cmps
sub
adc
and
loopne
jmp
xchg
jle
inc
cmps
or
jo
mov
sbb
mov
pop
stos
lds
push
jo
sub
push
mov
sbb
std
xchg
or
iret
mov
lock
cld
fcomp
jp
fnop
xchg
imul
mov
ror
(bad)
push
fwait
outs
push
movs
sti
(bad)
sbb
fisub
xor
mov
jle
mov
mov
inc
loop
mov
add
scas
(bad)
fcomp
push
mov
adc
(bad)
into
adc
xchg
dec
jl
jnp
or
jl
jns
test
cmp
test
mov
add
shl
cmp
stos
add
(bad)
lahf
jmp
xchg
sbb
lock
adc
adc
imul
push
mov
or
aam
aam
xor
rol
mov
repz
int
stos
push
push
inc
jg
call
xor
into
jl
out
int3
stos
xchg
test
aad
into
retf
scas
mov
pop
cdq
dec
loopne
dec
and
ja
pusha
fdivp
mov
stos
pop
jne
or
inc
sub
hlt
shr
out
mov
gs
mov
outs
sub
jg
out
sti
in
add
daa
jns
aaa
mov
mov
(bad)
sbb
inc
lods
jnp
mov
push
out
mov
div
push
out
xchg
int3
cmps
mov
xchg
(bad)
ja
dec
mov
lods
mov
dec
fwait
ror
xchg
push
retf
xchg
aas
retf
xchg
out
shr
cmp
pop
arpl
cmp
push
cdq
sub
jle
(bad)
xchg
movs
push
mov
inc
rcr
jo
pop
mov
scas
data16
aam
mov
sbb
inc
sahf
(bad)
call
xlat
call
jp
add
stos
lea
mov
outs
popa
iret
push
mov
push
jno
ins
sahf
cmps
inc
mov
repz
inc
adc
leave
call
sti
sbb
or
pop
mov
inc
mov
mov
aas
in
xchg
adc
add
movs
sub
sbb
aam
fnstenvw
jbe
inc
xor
push
mov
or
push
js
call
cli
dec
rcl
data16
gs
mov
cmp
xchg
fs
and
sbb
loop
jae
pop
cmp
lods
sbb
cs
xchg
mov
retf
dec
es
mov
mov
in
xchg
add
shl
mov
in
(bad)
fiadd
sub
sbb
inc
sub
lock
call
shl
pop
ret
add
inc
inc
sbb
adc
test
xchg
xchg
popf
pop
push
push
je
sub
inc
xchg
test
jg
xchg
jle
gs
xchg
in
mov
and
sbb
inc
mov
or
cmps
pop
mov
fwait
xor
movs
ds
(bad)
fmul
cmp
pop
imul
dec
inc
mov
and
addr16
dec
mov
js
fcomp
retf
add
iret
dec
adc
es
xlat
pop
and
stos
mov
js
shl
ror
call
ss
js
mov
sub
loope
add
jno
and
push
pop
mov
xor
lods
test
aas
xchg
sbb
xor
adc
add
inc
jbe
or
mov
ds
outs
loop
sbb
jns
push
into
inc
cdq
mov
xor
fisttp
popa
cmp
adc
cmps
and
inc
imul
jmp
xor
mov
shr
jne
test
mov
lods
inc
ins
inc
push
sub
jecxz
and
ret
mov
inc
pop
lods
adc
(bad)
mov
push
imul
lods
xor
icebp
adc
and
xlat
out
mov
out
jecxz
sbb
jmp
js
les
stos
mov
not
mov
movs
mov
(bad)
dec
outs
sbb
imul
cld
ss
mov
dec
(bad)
aam
retf
mov
sub
dec
sahf
test
rol
pop
shl
(bad)
lahf
xchg
jb
dec
xchg
imul
sbb
xchg
sar
lods
dec
test
mov
aas
out
jl
cmps
jmp
shl
test
movs
mov
outs
idiv
(bad)
adc
and
repnz
rcr
jmp
adc
inc
adc
cli
push
icebp
pop
pop
loope
(bad)
dec
pop
or
cld
push
je
cmps
sub
ins
pop
ins
jno
aaa
xlat
les
lock
scas
jbe
test
jns
adc
mov
sub
sub
in
jae
arpl
fcomi
adc
sub
push
seto
adc
repnz
jge
mov
add
mov
jno
or
test
pushf
sub
popf
out
mov
ret
dec
stos
and
jo
imul
(bad)
stc
mov
pop
cwde
jno
mov
std
sar
xor
loope
cmp
sub
test
cmps
push
lock
rol
sub
outs
(bad)
lock
mov
mov
push
sar
push
ror
call
inc
jp
or
cli
js
cmc
push
inc
not
aad
div
mov
push
jecxz
call
mov
out
stc
out
sahf
fiadd
mov
movs
xlat
dec
mov
mov
cmp
xchg
lahf
sub
mov
stos
retf
or
loop
xchg
nop
xor
sub
sbb
and
test
retf
adc
mov
out
sbb
fwait
ret
retf
push
lods
push
in
cwde
mov
inc
inc
jmp
xchg
add
mov
lock
ins
lods
mov
test
mov
xor
xchg
inc
test
or
sub
ret
ins
shl
ret
jl
sub
pushf
jb
test
pop
iret
inc
mov
(bad)
and
or
je
dec
inc
adc
and
push
fldcw
inc
das
dec
popf
fisttp
jp
mov
movs
cli
cmc
loope
test
movs
sbb
push
test
mov
xchg
dec
dec
hlt
adc
ja
cmp
push
sbb
push
inc
jle
sub
inc
push
das
mov
fstp
(bad)
sbb
inc
or
jmp
push
in
mov
aaa
not
inc
push
gs
xchg
mov
(bad)
jl
out
loope
jmp
div
jmp
rcl
out
or
cmps
or
add
add
cwde
cmps
push
xchg
lods
shr
pop
sub
cmc
jp
sbb
inc
dec
push
inc
jmp
shr
xchg
push
pusha
call
pop
mov
xor
xor
sahf
cmps
and
mov
ret
inc
aam
fadd
or
(bad)
push
aam
cmps
dec
rsm
mov
retf
mov
(bad)
dec
jns
push
push
iret
repz
cld
lods
test
mov
fisub
pop
push
dec
test
retf
in
add
ins
fcmovne
pop
adc
cwde
mov
es
jmp
int3
jmp
or
cli
ins
xor
push
inc
mov
xor
push
sbb
(bad)
fnstenv
cwde
mov
mov
enter
cld
push
push
jp
pop
stc
dec
push
mov
mov
(bad)
dec
dec
(bad)
and
cld
push
icebp
jl
std
and
or
leave
push
or
jge
sub
cwde
ss
fwait
stc
inc
test
jns
pop
aaa
mov
aad
xor
add
push
push
jns
sbb
sbb
sbb
push
mov
cli
adc
inc
jne
das
mov
add
das
mov
xchg
call
clc
ficomp
stc
and
mov
mov
sbb
jmp
ja
(bad)
ja
popa
adc
pop
adc
sahf
fcmovnu
push
ins
out
in
icebp
pop
mov
cmps
push
mov
pop
imul
lods
push
mov
movs
stos
mov
sub
sbb
imul
adc
(bad)
cmp
enter
pop
mov
sbb
xchg
out
idiv
inc
push
pop
cmp
rcl
add
popa
bound
daa
add
inc
movs
jle
sub
sbb
push
shl
cmp
(bad)
loopne
xchg
cmp
adc
daa
jecxz
jbe
out
inc
cli
in
aaa
xchg
icebp
mov
push
mov
nop
pop
adc
mov
push
or
add
xchg
sbb
loop
pop
push
pop
imul
inc
or
pop
iret
(bad)
in
jg
sahf
or
jecxz
mov
aam
cmp
mov
mov
outs
pop
cmp
psubusb
sub
xchg
ja
lds
push
xor
jae
test
lahf
int
rcl
dec
xchg
stc
mov
jnp
and
lds
add
mov
dec
sahf
in
mov
popf
cmp
and
dec
sbb
push
addr16
mov
xor
test
jnp
(bad)
in
xor
div
(bad)
dec
pop
movs
repnz
int3
or
std
xor
or
callw
repnz
aam
enter
add
xchg
push
or
(bad)
rcl
xor
pop
xchg
ret
fmul
mov
jp
xor
mov
push
adc
inc
xchg
jmp
xor
adc
jle
stc
test
xor
(bad)
cmp
leave
inc
rol
enter
sbb
fwait
sub
test
pop
test
imul
sub
adc
or
and
jecxz
mov
xchg
jns
(bad)
lds
call
mov
scas
jp
dec
pop
mov
jge
inc
les
cmps
xchg
jmp
sbb
pop
pop
sub
sahf
xlat
das
cld
js
inc
or
leave
cmp
sbb
xchg
fs
leave
(bad)
das
sbb
cld
mov
icebp
add
scas
test
test
jns
les
aad
cmps
fistp
jae
push
xchg
popf
push
xchg
pop
mov
xor
mov
call
jne
mov
add
lods
in
jne
jo
or
mov
es
pop
xor
jmp
sbb
retf
adc
repnz
and
xchg
sub
and
(bad)
fst
add
xor
adc
or
xchg
push
dec
call
je
les
jae
scas
mov
push
and
jecxz
pop
in
stc
push
shr
mov
push
hlt
enter
mov
xchg
inc
shl
(bad)
jmp
aad
xchg
sar
imul
xor
sbb
sbb
popf
shl
dec
inc
(bad)
sbb
movs
dec
add
xchg
es
add
jle
lock
pop
mov
sub
fs
push
fisubr
aam
ds
gs
add
sbb
mov
iret
or
pop
test
fdiv
rcl
push
and
pop
ficom
push
adc
retf
dec
fild
(bad)
sahf
lods
sub
mov
sub
jp
and
ins
xchg
jl
push
or
and
sub
cdq
or
pop
das
popa
(bad)
ins
loop
jne
pop
cs
inc
retf
js
cmp
fiadd
add
sar
dec
fcmovu
mov
xchg
and
xor
pushf
or
imul
cmps
popa
sub
adc
mov
dec
adc
dec
pop
cs
pop
jnp
jmp
in
enter
lock
pop
imul
(bad)
in
aam
pop
outs
rol
jg
cmp
and
movs
shl
jnp
imul
jb
pop
(bad)
jp
stos
adc
mov
mov
xchg
mov
sahf
sti
stos
dec
dec
pop
or
cmp
and
lock
das
aad
(bad)
xor
sub
fild
and
prefetcht2
mov
sbb
retf
movs
xchg
stos
jbe
jo
loope
dec
imul
inc
mov
aad
push
adc
push
xor
fbstp
scas
sub
bound
push
in
sbb
ins
ins
xchg
add
test
push
xchg
mov
sar
sahf
mov
pop
not
repz
imul
push
adc
test
inc
gs
cmp
repnz
dec
outs
data16
sbb
sub
neg
ret
jae
add
cmps
xchg
mov
ret
cmp
bound
inc
sub
daa
jo
mov
sub
popa
mov
jp
ins
push
fstp
fistp
adc
loopne
push
in
push
je
jnp
rcr
leave
jmp
test
xlat
repnz
inc
ins
call
pop
lds
sti
movs
jmp
sti
fcompp
clc
mov
jmp
pop
adc
repz
sahf
in
mov
inc
adc
mov
bound
and
and
aad
or
lock
pop
mov
push
mov
push
fild
inc
push
and
cmp
pop
das
aad
jp
dec
in
cs
jmp
sbb
jg
test
cmp
cdq
xor
mov
xchg
mov
pop
pusha
or
jns
xlat
push
sub
test
out
pop
aas
or
retf
lahf
mov
enter
adc
pop
mov
cmc
test
bound
pop
adc
cmp
fisub
sahf
stos
fsub
push
add
jmp
mov
(bad)
mov
adc
add
sbb
or
mov
xchg
push
mov
mov
mov
mov
adc
dec
out
mov
fwait
adc
shl
dec
shl
cwde
mov
xor
push
jmp
icebp
repz
mov
cli
sub
or
shl
movs
mov
xor
in
daa
pop
cmps
(bad)
sbb
cwde
daa
mov
sub
adc
xchg
mov
(bad)
loopne
in
es
es
adc
adc
or
or
ja
int3
js
jecxz
push
mov
jle
jno
add
xchg
xor
and
es
and
and
ins
in
out
dec
inc
pop
mov
mov
inc
sub
rcl
inc
test
mov
push
dec
and
mov
push
ret
fmul
push
xchg
aam
jp
jo
sbb
sti
leave
movs
sub
ins
sub
jbe
push
std
mov
and
addr16
jecxz
xor
fmul
shl
push
ret
jne
ins
pushf
sub
ds
inc
aam
dec
mov
imul
sbb
adc
mov
ss
jecxz
and
mov
inc
push
fcmovbe
or
xchg
sub
clc
inc
cld
in
sub
dec
aam
fsub
scas
je
or
iret
mov
imul
sahf
sbb
mov
mov
dec
lds
xchg
imul
test
loop
mov
rep
add
jg
sub
out
sbb
shl
and
dec
daa
push
push
(bad)
out
mov
jge
fcomp
(bad)
hlt
sub
lods
and
repz
jge
neg
sbb
cwde
dec
cmp
jecxz
and
retf
gs
les
mov
cmp
sbb
loopne
outs
xor
cs
mov
les
idiv
jb
pop
cmps
aam
fnstsw
jmp
cmp
push
mov
ja
fcom
test
leave
dec
les
hlt
pop
jnp
fwait
in
push
xchg
fidiv
dec
dec
jno
(bad)
push
aad
mov
pop
(bad)
cmp
enter
(bad)
mov
xlat
aas
xor
adc
popa
int3
push
or
cld
mov
xchg
in
fs
int
pop
push
test
sbb
test
cmp
add
test
add
xchg
call
cli
cmp
lahf
mov
retf
jbe
push
cs
add
sbb
adc
cmps
dec
mov
pop
or
mov
loope
or
mov
pop
dec
mov
leave
jbe
mov
jmp
int3
pop
lods
iret
xor
pop
(bad)
outs
pop
inc
aad
dec
pop
jmp
lahf
jecxz
or
dec
push
fadd
in
mov
stos
repz
mov
stos
stos
sbb
xor
xor
sub
add
std
push
sub
or
out
xor
mov
ror
xor
sar
inc
ret
stos
cdq
call
out
jmp
pusha
iret
call
dec
add
jmp
repz
push
mov
and
sahf
imul
test
and
ins
mov
mov
jnp
ja
clc
lds
push
jge
xor
jo
jae
dec
jo
fcmovnu
mov
xor
xchg
mov
and
push
sqrtps
bound
(bad)
mov
cmps
outs
sub
in
cmp
dec
ror
fwait
push
call
xor
pop
cmp
mov
dec
pop
xor
dec
mov
enter
sbb
cmc
cli
mov
sub
pop
push
std
push
stc
adc
enter
test
fldenv
fstp
mov
iret
pop
push
sub
jns
cmp
and
cmc
bound
push
ret
jbe
lods
fisubr
rcr
sbb
mov
sbb
les
mov
inc
(bad)
vpsllw
xchg
retf
popf
sbb
adc
adc
sbb
or
lds
repnz
inc
push
add
xor
bound
imul
retf
mov
jp
js
jecxz
mov
xchg
stos
add
cdq
xchg
int3
in
dec
xchg
stc
out
or
or
pop
ret
sti
inc
or
pop
xchg
(bad)
and
adc
mov
push
(bad)
sbb
push
or
cmp
mov
or
in
arpl
iret
clc
xchg
jo
push
mov
stos
popa
pop
cmp
cmps
mov
cld
xchg
test
xor
out
aaa
jo
push
dec
(bad)
xor
scas
jg
adc
pop
into
mov
sbb
sub
jnp
jl
cdq
add
gs
push
fucomi
mov
enter
stc
int
pop
test
in
call
mov
sbb
aaa
mov
pop
push
arpl
sbb
adc
adc
add
repz
movs
shr
jle
fdivr
adc
mov
dec
rol
aam
imul
push
jg
sub
pop
call
cmp
stos
out
les
mov
test
or
xchg
pusha
adc
jo
cld
shl
jnp
(bad)
jae
mov
in
jge
std
add
jmp
repz
inc
inc
pop
test
dec
aas
cmp
rcl
outs
and
mov
in
sbb
imul
or
call
(bad)
out
mov
xchg
out
mov
(bad)
ds
jns
cmp
xchg
es
mov
dec
loop
pop
inc
xor
sbb
das
dec
xor
es
sbb
aam
arpl
adc
ret
(bad)
lea
out
inc
pop
(bad)
fs
cmp
outs
jae
out
loopne
enter
add
xchg
pcmpeqb
loopne
lods
sbb
addr16
mov
mov
sar
ins
and
bswap
push
pusha
push
inc
push
shl
lea
retf
mov
pop
ja
inc
mov
xchg
retf
adc
dec
addr16
jno
es
dec
xor
rcl
cs
not
xor
xor
inc
adc
sbb
inc
cmp
out
call
lods
jnp
cmp
out
push
jnp
repnz
pop
xchg
dec
sbb
cmp
in
mov
dec
test
sub
outs
gs
mov
push
lea
les
cwde
mov
push
pop
call
jge
xchg
repnz
movs
icebp
lods
mov
test
jb
mov
div
jle
mov
xor
loop
in
out
sbb
mov
or
cmps
push
inc
shl
hlt
xlat
adc
and
in
ret
dec
stos
xchg
mov
das
jl
ret
jp
inc
int
pushf
stos
retf
(bad)
imul
push
mov
inc
(bad)
push
and
mov
fs
jmp
ins
gs
inc
add
sahf
lock
sub
test
push
xchg
lock
test
mov
xchg
cmps
xor
and
rcl
lock
hlt
ss
inc
pushf
shl
adc
cmps
jmp
inc
(bad)
(bad)
stos
mov
mov
mov
add
mov
xchg
fcom
es
(bad)
int
test
mov
inc
shl
pop
enter
aaa
xor
mov
mov
cmp
fild
jb
in
adc
jne
jl
mov
fst
mov
call
ss
mov
popa
mov
data16
dec
and
cmc
mov
aas
scas
jmp
fsub
jb
cmp
mov
js
fisubr
jmp
inc
add
lods
sub
(bad)
pushf
ins
mov
ja
mov
mov
add
mov
pushf
xchg
scas
int3
call
bound
add
xor
jle
and
movs
(bad)
cmps
inc
xchg
jne
mul
ss
outs
pop
cmp
out
mov
dec
and
xor
sbb
jmp
jae
xchg
movs
and
(bad)
cmp
test
inc
imul
mov
cli
mov
and
pop
xor
cmc
outs
sub
(bad)
push
rol
jno
idiv
mov
add
stc
in
sahf
cmp
pop
or
adc
mov
lea
add
lock
jb
mov
fnstenv
addr16
inc
std
imul
dec
into
jnp
es
(bad)
push
lahf
loope
imul
mov
pop
dec
dec
push
les
adc
sub
pop
dec
cmp
xchg
sub
ins
mov
idiv
aam
sldt
sub
(bad)
xchg
jne
rcl
cmp
ficom
mov
dec
xor
sub
inc
(bad)
sbb
cmp
sbb
sub
fs
xor
dec
inc
cmp
adc
inc
out
xchg
nop
or
jmp
mov
jle
jae
(bad)
push
mov
repnz
fdiv
cmc
imul
adc
test
cmp
stos
cli
dec
push
fwait
push
aad
fcmovu
push
retf
les
mov
jmp
jb
dec
shl
or
in
jl
sbb
dec
dec
jne
addr16
cmp
xchg
xchg
fadd
and
ins
imul
jns
out
or
retf
push
jp
mov
je
clc
xor
inc
sbb
push
jbe
fiadd
xor
mov
loopne
int
js
fsubr
imul
mov
sbb
mov
add
jge
aam
shl
out
jle
(bad)
cmc
jne
jle
gs
lahf
jmp
mov
les
inc
bound
push
std
and
icebp
icebp
(bad)
mov
or
push
jae
mov
push
xor
cmp
stos
mov
sub
or
mov
cmp
xchg
sar
dec
out
in
and
lods
in
cwde
and
fstp
mov
sub
dec
dec
adc
pop
and
ret
fmul
ret
add
loop
ins
jae
retf
xchg
jae
sub
sbb
pop
inc
dec
dec
jp
mov
outs
aas
push
and
sti
inc
push
sub
jmp
stos
shr
nop
cmps
add
pop
xor
ja
movs
in
rcl
fs
push
sti
push
lds
(bad)
sub
xchg
bound
(bad)
stos
das
mov
jbe
sbb
push
mov
add
dec
scas
jle
aad
enter
adc
cmps
cs
xchg
popaw
push
add
pop
jnp
inc
xchg
mov
fisttp
pop
not
cld
pop
push
mov
jo
adc
push
retf
adc
dec
iret
outs
das
mov
aam
je
bound
je
fwait
inc
dec
fnstenv
sti
outs
mov
jmp
pop
cmps
cs
adc
fdivrp
pop
mov
xor
mov
cwde
outs
cmp
rcl
sbb
pop
cmps
(bad)
jnp
sysret
je
dec
mov
jmp
dec
clc
in
popf
call
out
ins
pop
ret
push
push
and
call
cmp
xchg
adc
mov
push
sbb
xor
ins
sbb
jns
add
add
jecxz
jnp
push
inc
das
push
cmps
mov
cs
xor
pop
in
and
adc
cmp
push
popf
into
ds
mov
cmp
ja
scas
fwait
cmp
jmp
mov
in
or
xchg
push
jbe
lahf
xchg
xor
nop
jne
retf
aad
jnp
inc
inc
loop
xor
sub
out
dec
inc
std
dec
mov
dec
jno
adc
inc
(bad)
rcl
and
fincstp
lods
dec
enter
pinsrw
xor
scas
shr
add
rcl
cwde
jmp
(bad)
adc
ss
mov
ins
and
js
sahf
ret
call
sub
pop
pop
sbb
fistp
jno
dec
nop
jae
mov
bound
pop
leave
fisub
or
addr16
stos
(bad)
or
mul
fcom
sub
inc
test
pop
or
dec
cs
jle
pop
stc
lods
cmp
shl
imul
or
inc
jno
gs
xchg
xchg
sbb
aaa
add
js
nop
sbb
sub
adc
sbb
push
test
mov
pop
rcl
jge
rcl
shl
pushf
xor
(bad)
ret
clc
cmp
call
mov
sub
lods
push
pop
pop
push
icebp
xor
xchg
or
outs
mov
push
cmp
mov
jns
popf
xor
jmp
and
ss
jno
xchg
mov
push
sub
popf
data16
add
out
and
test
lea
lock
arpl
rol
lock
and
test
loop
sub
inc
test
imul
adc
fs
pop
mov
enter
and
call
(bad)
pop
add
or
jecxz
pusha
not
push
mov
mov
mov
adc
cmps
add
clc
scas
mov
pop
jbe
mov
xor
test
inc
cwde
(bad)
cli
sti
cmp
ret
cmp
fldz
fild
xchg
repnz
pop
mov
cmp
sub
mov
pusha
pop
inc
fs
sahf
pop
push
loope
xchg
jb
call
test
pop
push
inc
mov
frstor
cdq
jecxz
cld
sahf
sbb
or
mov
jno
out
inc
sbb
dec
pop
ret
sbb
dec
push
lock
fbld
mov
pop
push
sbb
xchg
mov
lods
adc
cmps
adc
(bad)
shr
loopne
stc
pop
int
xor
mov
and
cmp
aas
cmp
or
in
std
outs
inc
clc
xor
aad
retf
add
pusha
jns
ficomp
and
out
aas
outs
repz
movs
mov
push
sbb
ins
push
loopne
rol
push
nop
cmp
call
in
or
xor
es
lock
jne
sahf
cwde
ret
(bad)
sbb
push
loop
adc
ret
pop
fimul
(bad)
dec
sti
push
or
sub
imul
inc
mov
push
xor
clc
xchg
push
sbb
movs
lock
aaa
inc
inc
repz
pop
sub
inc
outs
fst
cmp
(bad)
pop
push
sub
scas
pop
sbb
jb
and
jecxz
mov
jns
lds
adc
int
js
inc
inc
mov
xchg
mov
mov
push
mov
push
push
cmp
sbb
pop
mov
(bad)
clc
ss
inc
fwait
xchg
pusha
stc
mov
addr16
xchg
adc
or
jne
xchg
(bad)
xchg
or
xor
cdq
xchg
jne
or
adc
call
sbb
fcmovnb
lahf
shl
idiv
popf
(bad)
sbb
pop
out
xor
fisttp
(bad)
xor
fs
cmps
jnp
arpl
cmp
jbe
dec
pusha
pop
enter
fdivr
dec
popf
mov
dec
sub
movs
mov
fst
and
pusha
or
sbb
test
pop
mov
cli
fld
cmps
bound
push
sbb
rol
cwde
cld
jg
call
jmp
pop
out
cmp
inc
pop
xor
jae
pop
ficomp
fwait
int3
gs
cmp
clc
inc
test
xor
js
xor
fidivr
pop
into
pop
aaa
dec
mov
adc
in
fs
cdq
loop
jb
in
push
fidivr
cmp
jo
fsub
imul
shl
mov
out
sbb
scas
jecxz
jle
jae
(bad)
mov
enter
outs
fsub
inc
repz
std
push
call
and
clc
arpl
push
jnp
jns
xor
fld
jle
out
push
and
mov
xchg
cmp
or
jg
out
pop
add
or
popa
add
push
mov
xor
test
jl
int
mov
dec
mov
xchg
sub
sti
fisttp
mov
sub
push
adc
sbb
aas
mov
pop
cmp
mov
and
fld
adc
cmp
push
imul
mov
push
add
lds
(bad)
mov
jle
lock
or
scas
pusha
fs
cli
sub
mov
ins
mov
cmp
out
loop
and
and
xchg
test
fldcw
fwait
xchg
icebp
out
retf
adc
adc
adc
push
lods
push
popa
jae
js
inc
fiadd
mov
mov
xchg
dec
jb
lods
jp
xchg
sub
pop
push
sbb
push
and
repz
adc
or
xor
stos
shl
xchg
rcl
ins
inc
xchg
mov
loopne
and
scas
fdivr
push
add
jmp
fild
scas
cmp
in
mov
or
das
push
and
in
jle
adc
and
sub
mov
lods
xor
cld
cld
in
(bad)
aam
xchg
dec
ficomp
loope
jmp
mov
dec
sbb
daa
rol
aaa
inc
sub
mov
loop
inc
and
pop
test
jno
out
mov
sbb
push
pop
add
lds
lods
bswap
fcmovu
xor
dec
mov
and
mov
mov
jae
ficom
outs
aas
push
in
ror
(bad)
xor
ficomp
push
ins
inc
(bad)
jnp
ins
imul
loope
sub
or
mov
mov
into
mov
sub
out
jns
inc
das
xor
popf
add
and
mov
adc
out
or
mov
iret
rcl
js
xchg
fst
push
mov
mov
xchg
test
out
fiadd
clc
mov
jge
popf
das
xor
sbb
push
push
cli
xlat
aaa
sub
inc
popa
cs
test
int
test
jb
xchg
push
sub
or
fnsave
ret
cmc
test
xchg
lock
adc
jmp
outs
jg
pop
ss
xor
stos
aad
mov
aas
mov
mov
xchg
scas
aam
sub
xchg
cli
stos
push
pop
mov
fist
mov
mov
push
jns
test
mov
ja
clc
retf
xchg
lds
sti
push
rcr
stc
test
adc
push
out
xor
xor
add
ja
aaa
outs
xchg
stos
or
out
jns
shl
dec
and
sbb
retf
or
mov
xchg
mov
loopne
fdiv
scas
inc
sub
fcomp
stos
push
or
jne
sbb
sbb
sbb
or
adc
outs
push
iret
out
mov
ret
cmps
or
jo
push
mov
dec
jbe
shl
outs
or
cli
mov
pop
scas
add
jmp
in
cdq
es
add
or
out
cmp
in
sar
scas
test
mov
retf
aam
or
das
pop
sti
aad
and
xchg
ret
je
push
ret
stc
gs
push
mov
sub
mov
scas
fisttp
xor
sbb
push
cmps
mov
dec
int
cs
mov
hlt
mov
jecxz
mov
xchg
pop
fsub
push
js
add
mov
or
mov
fcom
inc
and
and
ds
retf
scas
data16
imul
ins
hlt
ins
mov
sub
pop
popa
aas
in
pop
icebp
fmul
rep
int
lods
push
aam
push
dec
xchg
pop
push
jmp
out
mov
aaa
push
in
dec
lds
scas
and
pop
dec
mov
xor
jns
mov
call
cwde
sub
je
pop
retf
ret
jmp
rcl
xchg
lds
daa
and
lock
sbb
mov
mov
pop
lods
sbb
jno
jle
lods
fisub
rcl
sub
xchg
aad
call
jmp
repnz
out
xor
adc
les
in
or
shl
inc
cmp
inc
pop
test
adc
fwait
mov
jno
mov
push
fldcw
adc
cmc
mov
cmp
repnz
push
dec
fist
aaa
js
aam
xor
cmp
sub
lock
jno
dec
xor
push
aas
mov
jo
enter
lock
inc
xlat
push
jmp
mov
sbb
lods
push
xchg
repnz
push
pop
fs
sbb
enter
dec
mov
shl
push
mov
cdq
mov
mov
cmp
stc
mov
inc
xchg
xor
je
xchg
sahf
test
cdq
fbld
std
mov
gs
ins
mov
call
(bad)
xor
sub
jmp
push
push
lahf
js
bound
jge
sbb
aas
pop
pop
xor
loopne
(bad)
xor
sub
mov
cmps
cmp
popf
popa
outs
and
push
sub
or
(bad)
loope
mov
dec
or
adc
adc
scas
hlt
out
(bad)
cmp
test
mov
adc
pushf
dec
movs
push
push
jg
stos
cmp
in
call
pop
imul
mov
iret
jns
lds
out
add
and
mov
mov
jbe
ret
push
les
shr
aad
loop
clc
jbe
lods
adc
xor
mov
das
sar
loope
retf
inc
pop
and
enter
gs
test
movs
call
ja
sub
xor
nop
mov
push
pop
sub
fwait
mov
iret
pop
inc
jb
iret
xchg
cli
cdq
jp
push
inc
loop
enter
sbb
leave
call
aam
repnz
pop
outs
in
inc
sub
outs
or
stos
in
enter
outs
stc
sbb
cdq
pop
sub
jo
sbb
pusha
icebp
pop
cmp
pop
fistp
xor
fisubr
jge
sub
adc
inc
shr
leave
jg
xchg
gs
scas
lds
ret
push
sbb
int3
or
scas
or
pop
add
test
and
addr16
test
cmp
adc
mov
mov
adc
(bad)
ficomp
in
retf
pop
adc
out
sbb
and
fdivr
imul
shl
mov
retf
and
sub
dec
popa
movs
jns
popf
push
mov
test
and
mov
mov
int
movntps
pop
sar
test
(bad)
xor
cmp
arpl
push
jne
fwait
sub
xor
rcl
push
jo
mov
jmp
jo
scas
mov
int3
je
scas
loopne
cmp
dec
sti
sub
repz
fmul
push
mov
fldcw
(bad)
int3
lods
loop
push
push
or
iret
movs
mov
push
lds
scas
fbld
out
frstor
pop
test
hlt
je
push
les
xchg
inc
stos
test
ss
scas
push
cmp
mov
dec
dec
iret
pop
test
imul
mov
adc
loope
leave
imul
and
adc
mov
inc
dec
jnp
cmps
mov
call
enter
test
cwde
in
mov
out
xchg
into
sub
push
mov
popa
mov
dec
push
sbb
clc
popf
icebp
nop
xchg
mov
ins
fdiv
gs
add
pop
cmp
mov
xchg
in
sbb
sub
or
movs
into
int3
cmp
add
inc
add
pop
sub
test
daa
fcomi
enter
sub
adc
jae
push
add
idiv
mov
jmp
push
push
ss
(bad)
mov
jo
inc
sti
mov
(bad)
push
test
mov
xchg
stos
ror
ds
jno
add
push
jnp
aad
ins
cdq
rcl
sti
inc
inc
mov
fnstcw
jnp
repnz
and
sahf
fnstcw
mov
push
jb
inc
mov
mov
mov
idiv
cwde
ins
or
dec
lods
imul
fdiv
sbb
imul
(bad)
loopne
fidivr
je
inc
xor
mov
cmp
sbb
sub
sbb
jmp
add
cmp
int3
int3
movs
stos
ret
mov
retf
add
add
xchg
lods
mov
hlt
dec
or
aaa
mov
fdiv
xchg
inc
jnp
jl
mov
sub
mov
jl
cmp
sbb
rol
ins
sbb
popa
fninit
mov
or
js
cmc
mov
and
push
pop
mov
pop
mov
rol
retf
push
xor
jge
dec
sub
or
sub
sbb
jo
push
jecxz
(bad)
mov
jne
into
xchg
test
arpl
inc
popa
adc
das
(bad)
mov
push
jmp
xchg
lds
mov
or
jns
mov
out
pop
nop
lea
retf
ror
mov
inc
sub
xlat
aaa
iret
jg
scas
fistp
addr16
call
fcom
xor
fiadd
js
xchg
pop
xor
les
js
js
xchg
push
cmp
and
test
repnz
into
(bad)
std
jns
repnz
jno
repnz
push
ret
hlt
ror
adc
rcr
(bad)
ins
cdq
aad
scas
div
adc
push
out
mov
push
ja
rol
inc
jno
fist
mov
xor
xor
imul
dec
retf
mov
mov
scas
ret
inc
xchg
xchg
fistp
cld
call
and
ret
inc
sbb
push
add
or
fdivr
push
sub
scas
jb
inc
(bad)
cmc
not
fsub
jmp
repnz
ss
mov
push
push
add
and
sbb
int3
and
mov
icebp
jg
and
xor
sar
adc
inc
mov
nop
test
leave
aas
inc
xor
mov
adc
add
and
mov
sar
adc
cld
mov
jno
dec
adc
jae
cmp
inc
mov
fwait
ds
pop
shl
xor
rol
sbb
inc
mov
das
or
cs
test
fld
jae
call
and
mov
xchg
inc
(bad)
mov
fldcw
stos
mov
xchg
out
in
outs
pop
stos
fs
mov
pop
call
push
pop
test
mov
icebp
dec
imul
movs
(bad)
cmp
xchg
cmps
mov
adc
es
mov
push
cmp
pop
dec
mov
pop
imul
push
mov
sub
mov
mov
mov
and
pop
test
and
add
icebp
call
aad
push
push
sub
popf
outs
or
jbe
pop
pop
jo
jle
enter
dec
mov
cmp
(bad)
xor
call
ins
or
or
adc
add
cli
mov
imul
jae
hlt
fdiv
add
rol
jecxz
out
daa
hlt
cdq
sub
push
loop
xor
fwait
xor
(bad)
adc
ins
shl
pop
mov
clc
(bad)
and
sub
sub
sbb
in
sub
clc
xor
sbb
int3
icebp
mov
xchg
popf
sahf
inc
sbb
push
pop
pop
push
pop
in
sti
jnp
dec
out
in
sbb
outs
popa
xchg
int3
fisub
push
pop
mov
push
rcr
add
pusha
cld
ret
mov
push
cmp
sub
popa
pop
je
sti
xchg
in
push
sub
jp
std
repz
push
aad
call
jb
mov
jns
in
mov
cld
retf
sub
pop
mov
in
ror
ficomp
(bad)
push
in
mov
adc
arpl
in
out
in
add
jno
mov
mov
fs
adc
in
out
xchg
add
rol
gs
push
sub
imul
js
mov
adc
int
add
cld
in
sbb
sub
icebp
test
retf
xor
out
mov
std
xabort
icebp
loopne
pushf
ins
jnp
test
pop
not
mov
stc
cmp
inc
iret
fcmovnu
loop
push
shl
popf
xor
bound
and
cmc
out
in
xor
fld
cs
les
add
and
scas
aad
enter
xor
in
mov
das
lock
cmp
leave
adc
stos
dec
cmp
test
bound
push
jl
enter
push
mov
pop
int
xchg
mov
dec
adc
(bad)
push
pop
xchg
xchg
gs
mov
cmp
sbb
xchg
loop
push
lea
inc
inc
xor
dec
enter
imul
pop
scas
jnp
call
dec
mov
sub
dec
pop
xchg
push
lea
out
jle
cmp
ins
out
and
xor
jbe
shl
mov
adc
push
mov
lock
cmp
and
cmp
mov
mov
mov
les
nop
xor
and
cmp
jb
adc
idiv
xor
lea
xchg
jns
jns
mov
stc
push
ss
shl
(bad)
mov
cmc
stos
test
ins
cmp
mov
pop
and
adc
mov
lods
fidiv
push
add
retf
jbe
retf
inc
xor
push
mov
fs
or
daa
push
mov
loopne
shl
scas
inc
or
das
test
adc
mov
cwde
and
adc
mov
mov
and
adc
sub
retf
iret
lock
sub
mov
addr16
jno
shl
movs
inc
retf
jl
mov
jmp
out
fidiv
mov
cli
frstor
in
mov
jg
mov
add
fwait
sub
push
pop
jmp
sub
push
or
inc
mov
xor
dec
push
sub
pop
xor
sub
rcr
pop
adc
add
aas
cmp
inc
push
paddsb
push
retf
daa
(bad)
inc
pop
push
enter
out
pop
cmp
mov
cmc
test
jne
cmps
inc
add
pusha
ss
iret
fsubr
ret
inc
pop
(bad)
jno
dec
fstp
(bad)
pop
lahf
mov
inc
pop
inc
sahf
shr
cmp
and
(bad)
push
js
inc
push
(bad)
iret
push
push
adc
jle
jb
popf
push
in
sub
add
pop
stc
mov
add
add
stc
inc
lds
int3
loop
mov
mov
loop
scas
loope
or
call
stc
fldcw
loopne
inc
out
mov
shr
leave
jmp
es
push
xor
push
ds
sub
push
lahf
out
sbb
dec
ror
std
inc
cmp
sub
test
ret
outs
push
daa
adc
xchg
ds
sbb
add
in
pop
and
adc
cmp
pop
call
loopne
xchg
leave
test
xchg
sub
cmp
pop
inc
lods
movs
daa
xchg
or
mov
inc
ficom
outs
dec
sahf
std
pop
mov
shl
movs
push
les
jo
cmp
sbb
call
push
pushf
jle
adc
add
cmp
bnd
xor
rol
push
inc
cmp
cli
adc
addr16
xchg
shr
and
in
mov
inc
pop
inc
push
cmps
pop
neg
xlat
inc
mov
mov
cli
in
leave
push
stos
lock
jmp
test
mov
mov
mov
ins
pop
call
in
repz
mov
(bad)
jae
imul
into
mov
das
add
fwait
(bad)
and
xchg
test
aaa
sub
push
sbb
fmulp
in
mov
dec
mov
push
and
push
inc
jne
fst
lods
mov
or
pop
out
dec
mov
lods
outs
nop
mov
sub
mov
lahf
jg
test
add
fsub
mov
(bad)
clc
mov
jb
es
mov
sub
aad
dec
mov
hlt
jl
xchg
aaa
jg
or
jnp
and
push
pop
inc
add
inc
sub
and
sti
repz
mov
rcl
xor
sbb
push
sti
popf
jp
xlat
mov
mov
sbb
dec
lds
jl
mov
call
sub
ins
cmp
cmps
std
xlat
pop
scas
ss
js
cs
in
cmp
loopne
jne
test
cmp
xchg
mov
xchg
test
aad
(bad)
out
lock
hlt
std
cs
push
and
mov
or
jg
add
fild
sub
sub
jns
ret
ins
out
push
aaa
shl
xchg
outs
and
pushf
mov
iret
retf
ds
push
imul
icebp
sar
and
lock
mov
bound
movs
fisttp
push
lock
sahf
sahf
cmp
stc
mov
rcl
lds
stos
stos
push
cld
push
cmp
or
inc
loope
cmp
loop
adc
loop
call
add
call
lea
pop
sar
ds
imul
mov
scas
mov
jmp
fcomp
add
js
jle
pop
or
mov
add
cmps
adc
in
dec
popa
pop
iret
sub
in
cwde
sbb
test
ficom
push
fld
sub
push
xchg
das
mov
cli
fisub
add
nop
hlt
mov
pop
ins
inc
mov
sbb
lahf
arpl
mov
ins
or
push
rcr
in
mov
out
inc
nop
pop
xlat
cmp
sub
add
mov
and
dec
or
push
ins
dec
cmp
jno
cmp
cmp
sahf
sbb
or
cwde
cmp
pop
mov
mov
add
hlt
push
pop
mov
jecxz
jecxz
dec
inc
ins
cdq
fwait
mov
adc
out
xlat
jmp
cmp
jmp
xor
sbb
inc
std
pop
pop
mov
adc
sub
mov
push
pop
add
cmp
icebp
test
scas
jbe
dec
sbb
fwait
aad
(bad)
mov
cld
arpl
pop
test
cmp
dec
clc
or
mov
cli
and
fisttp
test
fcomp
rcr
dec
aad
das
repz
(bad)
jecxz
lods
iret
lea
push
addr16
data16
loop
out
cdq
das
aad
pop
sbb
dec
jp
add
jl
push
loop
iret
fst
cmps
mov
push
test
sub
data16
pop
sub
shl
and
(bad)
scas
enter
cmp
or
das
add
es
mov
mov
xor
int3
(bad)
fsub
(bad)
mov
test
push
call
mov
mov
aaa
xor
cmp
ret
mov
in
fiadd
inc
xchg
xchg
sub
adc
add
test
aam
mov
jecxz
lock
std
int
cmp
pop
ja
jnp
jmp
out
cwde
out
jne
out
inc
aam
fnstenv
mov
das
out
aad
inc
inc
stos
rcl
push
sub
fwait
mov
mov
pop
mov
jmp
pop
(bad)
mov
outs
daa
retf
out
aas
shr
sub
aam
aas
cwde
adc
xor
sbb
xor
sub
pop
add
adc
add
scas
pop
mov
push
inc
mov
xchg
stc
jae
sbb
popa
icebp
mov
jge
lock
jne
fnsave
inc
push
loope
adc
push
aam
out
add
xchg
pop
lods
fidiv
int3
push
inc
xchg
je
es
arpl
popf
hlt
mov
cmp
movs
je
into
popf
fsubr
push
stos
dec
repz
add
add
sbb
adc
push
out
and
sub
push
cmps
or
or
xchg
fsubr
mov
mov
mov
sar
sub
mov
push
or
iret
cdq
jnp
add
push
cmp
les
jae
pop
inc
cmp
xlat
cmps
jecxz
pop
je
push
add
add
dec
aaa
sbb
jecxz
scas
adc
and
iret
pop
or
push
outs
bound
out
inc
mov
push
mov
cld
pop
or
daa
sub
push
pushf
retf
loope
sbb
pop
stos
mov
mov
xchg
adc
push
repz
fsub
pop
lock
sbb
cs
shl
jns
cmp
fimul
mov
sahf
or
pop
inc
xchg
cmp
das
mov
mov
movs
scas
clc
fwait
mov
mov
stos
jbe
fs
cmps
xor
sub
pop
push
lahf
mov
sbb
in
ror
pop
or
sbb
jg
js
sbb
push
mov
ror
mov
push
mov
add
xchg
fisttp
not
pusha
iret
mov
dec
imul
add
mov
fist
imul
xor
jae
aam
cld
(bad)
in
inc
xor
test
push
or
mov
fldenv
sub
dec
shl
nop
and
push
ret
sub
pushf
mov
addr16
dec
jl
fmul
(bad)
in
std
inc
test
hlt
(bad)
adc
stc
jl
mov
cmc
push
arpl
cmp
mov
test
jae
(bad)
fst
adc
xchg
aas
movs
inc
into
movs
loop
dec
inc
cs
jbe
jne
or
lds
std
fs
pop
jo
repnz
(bad)
leave
lock
dec
bound
sub
cmp
sahf
retf
or
fcom
aam
xchg
mov
mov
mov
int
sahf
mov
mov
jg
and
xchg
mov
dec
sub
sahf
lods
sti
cmp
leave
cli
push
add
sub
fwait
mov
dec
mov
mov
les
retf
iret
fldenv
push
adc
inc
das
ret
repz
out
mov
inc
jae
jmp
jle
test
xchg
popa
push
fbld
jmp
cmp
lahf
or
retf
aad
scas
inc
jae
stos
scas
push
test
mov
pop
sbb
and
inc
xor
es
movs
fisttp
outs
or
int3
sbb
mov
les
rol
cwde
mov
add
push
ss
jmp
pop
(bad)
ins
enter
push
dec
mov
ss
nop
mov
sbb
(bad)
push
out
shrd
fldenv
add
pop
add
push
div
mov
dec
xor
jbe
(bad)
xchg
aad
cs
add
jns
jno
imul
outs
cmps
sbb
je
fsubr
xchg
dec
add
inc
xchg
pusha
mov
inc
jl
jae
leave
leave
add
dec
mov
mov
inc
retf
jae
std
dec
push
push
mov
stos
call
fcomp
pop
xchg
push
xchg
enter
adc
or
dec
or
sti
ret
pop
add
pop
or
stc
dec
push
daa
js
or
lods
popa
and
xchg
fsub
xor
mov
pop
cld
ins
push
cwde
enter
enter
push
sbb
sub
sub
cwde
ret
mov
dec
lds
sub
pop
add
inc
cli
sub
push
mov
or
int
add
ror
loope
into
push
sub
jle
sbb
(bad)
dec
jle
mov
rol
cmp
sub
or
(bad)
lods
leave
lock
adc
fld
fst
jnp
xchg
push
mov
pushf
xchg
out
in
xchg
scas
out
inc
jno
push
out
out
add
ds
sub
inc
xor
jecxz
mov
les
out
cmp
sub
or
cli
(bad)
push
cld
daa
out
(bad)
in
retf
mov
or
movs
mov
pop
push
xchg
jmp
test
add
xchg
iret
movs
jbe
mov
fsub
addr16
test
lods
xchg
arpl
and
data16
nop
aad
arpl
inc
inc
rcr
jg
aaa
aas
cdq
lods
sbb
mov
cmps
icebp
std
test
retf
div
jecxz
mov
nop
iret
fdiv
pop
jmp
cmp
mov
fst
xlat
add
rcr
push
adc
aas
mov
jae
sub
add
outs
xor
ja
sub
cmp
mov
mov
das
pop
pusha
mov
jns
stos
ds
xor
repz
mov
mov
arpl
pop
xchg
rcr
loope
inc
call
mov
and
jb
push
sbb
inc
xchg
mov
mov
pop
pusha
js
clc
mov
out
sub
dec
sub
sbb
fld
ja
cs
xchg
xchg
pop
ja
test
fucomi
cli
mov
test
popa
mov
mov
repnz
push
aaa
cmc
inc
pop
rcl
xor
inc
sbb
stos
scas
pop
inc
sub
sub
ficom
ds
test
je
sbb
push
lods
xor
jmp
push
scas
sbb
out
retf
mov
sahf
bound
dec
adc
mov
jnp
loopne
fnstenv
sub
outs
mov
cmps
sbb
not
push
push
retf
push
shr
popa
stos
mov
mov
and
jl
mov
jno
sbb
sub
aad
cld
dec
sar
jns
xor
retf
jnp
in
add
jbe
push
test
jno
fadd
push
mov
adc
add
push
stc
popf
jmp
mov
imul
mov
sahf
mov
daa
sti
call
jmp
in
sub
retf
adc
in
rol
cld
cmp
ja
cmp
int
sbb
repz
lock
adc
jle
int
in
call
or
call
jl
jnp
mov
xchg
mov
sar
sti
mov
mov
mov
cmp
mov
(bad)
mov
xor
jbe
dec
ret
mov
xor
sub
sub
loop
out
or
shl
mov
pop
xchg
das
(bad)
icebp
xchg
or
inc
cs
mov
out
adc
jns
dec
jne
retf
sbb
(bad)
jmp
dec
imul
mov
std
out
or
aas
sub
push
dec
fstp
movs
out
fisttp
and
js
sub
mov
int
add
inc
pop
ja
cli
dec
test
loopne
xor
jge
scas
adc
xchg
or
mov
jg
and
or
jmp
mov
stc
shl
inc
mov
pop
mov
pop
pop
add
scas
pop
sar
push
inc
mov
nop
data16
mov
jbe
mov
mov
mov
mov
push
and
out
cmps
pop
into
push
sub
add
or
push
inc
out
push
mov
stc
imul
retw
push
sub
push
int
xchg
imul
mov
mov
mov
xchg
jo
(bad)
fisub
cmp
mul
shr
inc
lds
and
push
jle
pop
push
mov
mov
cld
xor
outs
ret
xor
inc
in
fcomi
(bad)
mov
push
icebp
mov
rcr
call
jnp
jne
in
jl
dec
leave
adc
push
mov
sahf
repnz
aas
pop
pop
xchg
cld
push
mov
scas
je
and
outs
cmps
retf
test
mov
pop
dec
frstor
scas
mov
mov
addr16
stos
inc
xor
pop
jnp
int3
mov
sbb
mov
int3
mov
sbb
adc
mov
fadd
ss
sub
in
icebp
xlat
lds
pop
xor
mov
iret
mov
je
adc
or
lea
pusha
fucomip
shr
jp
mov
repnz
ror
bound
or
adc
jecxz
inc
out
dec
mov
or
sub
mov
xor
ficom
addr16
shl
push
cmps
in
ja
mov
cld
push
outs
mov
mov
jmp
pop
mov
add
dec
shl
idiv
dec
adc
aas
mov
repz
jg
xchg
push
mov
mov
movs
mov
sti
jno
pusha
push
jmp
cld
and
loop
and
in
fs
mov
sub
enter
aam
out
pop
sub
stos
sub
and
fist
push
(bad)
sub
(bad)
jg
fisub
push
stos
les
dec
or
loop
inc
pop
repnz
sbb
cmps
mov
stc
mov
fcomp
ins
fisttp
dec
mov
leave
mov
lahf
call
dec
mov
mov
popf
cwde
sbb
push
mov
mov
mov
mov
xor
mov
xor
out
jb
jmp
jmp
xchg
or
movs
dec
dec
mov
pop
xchg
movs
imul
cmp
adc
ss
jmp
scas
sub
cdq
mov
or
ret
and
inc
pop
jbe
mov
daa
xor
jb
rcr
dec
mov
adc
adc
push
dec
aam
pop
mov
mov
mov
or
call
xor
pusha
and
pop
push
push
and
mov
inc
mov
sub
int
call
adc
std
std
xor
sub
inc
call
mov
jbe
imul
mov
hlt
or
call
mov
mul
mov
sub
jle
(bad)
xchg
and
in
mov
addr16
out
jmp
jecxz
imul
shr
sbb
mov
imul
std
cdq
imul
sbb
inc
adc
adc
jnp
jp
jle
sbb
jnp
(bad)
cmovbe
adc
cmp
(bad)
mov
out
into
xchg
xor
int
push
fdivp
add
adc
out
cwde
xchg
(bad)
(bad)
mov
xchg
aaa
shl
stos
outs
ss
test
push
xchg
inc
ins
fmul
mov
jmp
dec
xchg
test
bt
mov
(bad)
test
js
dec
outs
xor
dec
mov
outs
ret
mov
inc
mov
and
pushf
pop
xlat
cmp
mov
sub
aam
or
add
js
jecxz
inc
cmc
inc
test
or
pop
and
push
mov
mov
js
jl
xchg
add
push
enter
sahf
dec
add
ror
add
mov
mov
ror
stos
dec
loopne
xchg
xchg
frstor
mov
es
cmp
push
xlat
leave
retf
outs
dec
sti
sbb
mov
and
cwde
jnp
and
ret
into
push
test
cdq
popf
and
mov
dec
push
ficomp
aaa
cmc
add
dec
mov
jmp
and
(bad)
mov
mov
fadd
cwde
jb
lods
pushf
fstp
mov
push
aaa
pop
(bad)
ds
daa
sbb
repz
inc
in
lahf
mov
test
jbe
xor
pop
adc
in
fs
cmp
dec
xchg
popa
out
ficom
test
cmp
push
dec
push
cs
xchg
add
nop
cmp
in
pop
jnp
fsub
push
or
jmp
int3
xor
push
mov
mov
not
out
sbb
out
cmps
or
ds
pop
pop
sbb
push
mov
call
out
stc
ficom
ror
adc
adc
into
int3
lods
mov
pop
inc
mov
icebp
in
ins
inc
pop
ret
dec
mov
dec
mov
pop
outs
push
std
jns
sub
jecxz
addr16
adc
in
push
dec
dec
and
and
mov
out
gs
cmp
ret
mov
shl
mov
inc
push
les
mov
inc
inc
dec
or
jae
bnd
mov
mov
fsubr
sahf
fisttp
jg
retf
xchg
sti
jmp
cmp
mov
inc
loope
out
pop
dec
xchg
adc
push
adc
aaa
cmp
adc
out
xlat
mov
or
iret
lods
mov
lock
push
and
aaa
fist
adc
movs
nop
jp
pop
push
in
mov
in
add
push
int
or
repnz
add
sub
jmp
push
push
or
and
daa
jl
mov
dec
mov
and
mov
lods
std
cmp
fnstsw
aas
sub
lods
loop
sbb
repnz
cld
xchg
(bad)
mov
inc
in
pop
mov
stos
jg
push
fisubr
sub
enter
mov
jg
in
jb
sub
sub
sbb
fist
call
repz
sbb
ss
xchg
sbb
call
movs
mov
adc
mov
fs
cmp
sbb
inc
cmc
mov
fyl2xp1
mov
in
pop
ja
ss
call
es
call
dec
xor
mov
cwde
leave
or
int3
into
sbb
dec
jg
fdivr
mov
mov
sub
repz
out
or
lea
sbb
fnsave
nop
cmps
(bad)
cmp
cld
sub
scas
leave
sub
mov
in
add
movs
stos
sahf
aad
and
outs
mov
es
xor
cmp
sub
or
into
es
push
fcom
pushf
mov
mov
(bad)
jns
nop
rcl
and
cld
jp
add
and
mov
sbb
or
cwde
aaa
push
mov
mov
jo
mov
and
fucom
cmp
or
inc
gs
(bad)
dec
sti
or
mov
xchg
imul
loop
adc
inc
adc
fwait
xchg
scas
mov
push
fstp
out
lock
movs
xor
and
sbb
sbb
sbb
or
cmps
imul
jmp
add
aaa
mov
add
jne
sahf
nop
neg
xchg
pop
mov
mov
mov
add
sbb
fnsave
loope
aam
xchg
dec
cdq
xor
lock
xor
jns
popa
clc
into
repz
loope
(bad)
int3
mov
daa
push
fidivr
jae
inc
lea
sub
push
jno
daa
mov
sub
fisub
jmp
neg
sub
mov
fsubr
sub
adc
push
into
sahf
xor
push
sub
pusha
or
push
and
aad
aad
inc
ja
mov
(bad)
inc
out
stos
out
and
stc
ficomp
push
mov
jmp
inc
xchg
mov
outs
add
imul
mov
mov
push
mov
sbb
push
scas
sbb
and
push
cmps
cmps
cwde
leave
loop
inc
dec
jae
push
pop
pop
jmp
shr
dec
inc
and
enter
jl
sbb
push
loope
mov
mov
push
xchg
pop
adc
clc
in
xchg
push
or
xchg
dec
jne
fsub
fnstenv
push
mov
out
mov
movntq
cmp
mov
aaa
jae
jmp
cdq
fs
jge
stos
fldenv
jmp
mov
jge
icebp
js
cs
cmps
xor
mov
shr
repnz
sahf
loopne
jno
sahf
xor
mov
retf
push
xchg
jmp
push
push
xchg
(bad)
mov
cmp
ficomp
fcmovbe
push
mov
movs
pop
jo
ins
stos
jns
fbld
jmp
dec
pop
fimul
and
pusha
and
sbb
data16
(bad)
cmp
cwde
or
sub
sti
std
mov
jae
sub
dec
or
repz
enter
les
cmp
cmps
loop
test
imul
sbb
pop
xchg
fwait
repnz
out
inc
adc
push
cmps
dec
and
xlat
push
mov
cmovae
in
shl
push
pop
cmps
lods
pop
rcl
cmps
outs
sbb
jne
daa
cld
push
ja
inc
ins
mov
mov
fs
scas
add
cmp
sbb
pop
cmp
pop
sbb
dec
mov
jb
ja
mov
push
adc
(bad)
in
adc
int3
adc
cli
xchg
add
adc
and
pop
out
mov
loop
ret
lea
ins
lods
(bad)
cmp
push
pop
sahf
jg
sbb
jp
xchg
sub
sub
int3
add
inc
fwait
test
and
and
pusha
pop
sub
mov
daa
jecxz
jns
mov
cmps
fs
data16
lods
popa
fldln2
movs
inc
ror
mov
add
adc
stc
inc
sub
push
and
sbb
ins
ins
pop
mov
scas
pop
pop
jg
and
int
xor
jno
cli
cmps
inc
retf
ja
test
es
xor
sub
cs
jg
mov
mov
mov
out
mov
fld
mov
js
adc
imul
jl
lds
fsubr
xchg
cmp
lods
cwde
call
test
ins
ja
outs
cmp
jne
std
lods
sbb
and
mov
rcr
sub
scas
jno
pop
sbb
fsqrt
imul
or
pop
in
ret
push
mov
mov
jmp
mov
mov
push
test
es
push
dec
dec
fsubr
jnp
into
adc
inc
fcmovnbe
fbld
pop
ja
push
jb
std
sub
retf
dec
nop
push
jo
lsl
mov
xor
xor
push
dec
jmp
or
sub
lock
inc
and
cld
cmp
(bad)
mov
out
sti
inc
dec
outs
iret
(bad)
sbb
call
mov
shl
jp
adc
push
or
into
ds
add
pop
iret
and
dec
xor
adc
sbb
mov
ss
test
and
ins
clc
mov
xchg
mov
ja
std
xchg
mov
sub
sub
xor
adc
jmp
inc
data16
dec
je
ror
cmps
or
bound
dec
loop
cwde
add
scas
int3
mov
pop
pop
inc
mov
add
mov
cmps
xchg
cs
or
repnz
push
inc
int
cmp
jb
xchg
xchg
into
leave
add
jb
mov
movs
pop
push
mov
adc
mov
inc
ficomp
adc
addr16
retf
dec
push
ret
clc
and
hlt
shr
loop
shl
fscale
mov
pop
sub
xlat
or
ret
xlat
repnz
sti
adc
daa
pop
out
mov
(bad)
pop
sbb
and
mov
xchg
cmps
pusha
dec
pusha
xchg
cmp
test
sbb
fstp
pop
pop
pop
data16
int3
cmps
retf
shld
jl
pop
adc
mov
cmp
fild
dec
push
dec
jmp
fiadd
movs
dec
out
pop
fbstp
(bad)
push
nop
outs
inc
in
loope
mov
imul
movs
jmp
cli
mov
je
pop
cmps
or
cmp
neg
cmps
shl
adc
pusha
lahf
cli
cmp
dec
jge
loopne
fs
cmp
lea
leave
loop
stos
pop
repz
(bad)
stos
add
push
push
adc
xchg
mov
imul
sbb
nop
mov
nop
adc
inc
jmp
dec
inc
icebp
xchg
or
dec
mov
iret
sub
cmps
pop
push
cmp
mov
pusha
sbb
dec
stc
xchg
and
imul
cmp
push
outs
mov
rcr
mov
test
hlt
adc
inc
jl
mov
add
inc
scas
lds
jmp
push
iret
int
sbb
add
rcl
mov
add
inc
adc
dec
dec
sub
popf
jle
ins
mov
xor
xchg
and
sub
les
pop
adc
jnp
outs
je
xlat
ins
les
inc
shr
fcmovnu
lock
adc
cmp
in
dec
xor
inc
scas
out
retf
stos
mov
adc
test
sub
outs
lods
loope
lods
sub
out
lods
xchg
bound
fst
or
outs
xchg
ret
push
(bad)
test
xchg
and
pop
arpl
loopne
inc
dec
cdq
clc
fisubr
repz
leave
xlat
pop
sub
ret
mov
xor
push
fwait
movs
mov
xchg
sub
in
add
xor
mov
jnp
push
mov
in
inc
mov
xchg
loope
or
cmp
xchg
mov
mov
lea
push
mov
add
xor
cmps
je
fisttp
dec
mov
in
and
repnz
pop
xchg
sbb
out
cld
idiv
mov
and
fptan
(bad)
jecxz
dec
push
or
pop
jge
push
adc
push
nop
shl
xchg
test
rcl
(bad)
sbb
inc
mov
popa
inc
sti
je
lods
xchg
push
mov
loope
pop
inc
push
loope
sub
push
sbb
std
and
fisub
mov
les
mov
cmp
cwde
cmp
out
mov
shr
push
add
rcr
sahf
rol
ja
pop
(bad)
jmp
and
ins
dec
jge
add
pop
sub
jno
xchg
(bad)
push
pop
adc
in
xchg
fs
int3
fsub
jl
jle
push
mov
shr
push
jle
leave
or
and
in
jg
dec
push
fsubr
fadd
call
jg
jmp
mov
sub
mov
test
mov
add
shr
xor
arpl
out
stc
cmp
into
ds
test
cmp
sub
push
sub
or
inc
push
xor
imul
xchg
xor
mov
push
scas
pop
cwde
out
push
aaa
jo
mov
and
sub
add
inc
std
(bad)
or
adc
and
shl
dec
arpl
push
or
push
push
jle
sbb
popa
loope
push
mov
out
mov
pop
out
pop
dec
pop
sbb
mov
pop
xlat
dec
scas
xlat
cwde
xchg
pop
adc
inc
xchg
dec
(bad)
mov
dec
aam
xchg
inc
inc
xchg
jmp
sbb
mov
xlat
push
call
mov
inc
daa
mov
leave
dec
jecxz
jae
push
xchg
adc
(bad)
lods
sahf
mov
shr
jns
int
pop
loope
sbb
mov
dec
fisttp
stc
je
mov
pop
inc
and
rcl
adc
inc
stc
mov
dec
test
repz
push
jmp
into
sub
sbb
jp
aaa
sub
sub
xlat
ret
mov
movs
dec
retf
out
cmp
nop
jg
push
pop
cmp
imul
cmp
leave
inc
push
push
and
aaa
jl
jle
(bad)
and
call
leave
out
in
pusha
cld
push
fstp
and
sub
push
lds
or
aam
scas
mov
test
push
pop
imul
addr16
dec
dec
(bad)
outs
jecxz
iret
push
mov
test
mov
sbb
and
add
sub
pop
mov
leave
aad
xor
xchg
call
out
jnp
in
ret
jae
fimul
inc
jae
sbb
push
bound
aas
dec
cli
clc
fmul
clc
das
(bad)
(bad)
pop
add
arpl
jl
mov
fucom
mov
xor
add
stos
sbb
sti
aaa
mov
add
and
adc
outs
adc
push
mov
inc
cmp
jbe
xor
or
mov
outs
pop
out
and
inc
icebp
into
mov
pop
aaa
fcomp
dec
push
push
std
or
lea
sbb
pop
add
push
jo
jmp
xor
ins
and
adc
hlt
sti
ret
add
nop
in
(bad)
mov
xor
cmp
loope
je
(bad)
sub
lods
jecxz
enter
xor
push
xchg
push
adc
sub
ret
and
mov
repz
lods
gs
dec
pusha
test
out
and
mov
sub
sub
inc
dec
sub
inc
in
xchg
cwde
stc
fidivr
mov
in
push
push
inc
jb
jl
cmp
xchg
into
xchg
cli
inc
aaa
add
or
cmps
jnp
cmp
int3
aad
jae
rol
xabort
rcl
push
push
jmp
lahf
mov
ins
jo
xor
(bad)
mov
sbb
(bad)
aas
add
out
sti
nop
test
jnp
in
mov
rcr
inc
dec
pusha
retf
mov
out
push
repnz
(bad)
sub
repnz
push
clc
lods
std
push
leave
or
jno
sbb
in
es
outs
xchg
lea
dec
fist
sub
sub
mov
cmps
jmp
cmp
stos
sbb
into
sub
rol
sar
call
push
cmps
mov
fdivr
cmp
mov
rcl
dec
std
(bad)
cmps
adc
std
into
dec
addr16
arpl
in
dec
(bad)
(bad)
dec
inc
cdq
pop
dec
dec
mov
xlat
pushf
adc
int3
push
addr16
(bad)
pop
in
movs
jae
ret
push
dec
jmp
or
pop
rcl
push
jne
ja
(bad)
mov
mov
mov
mov
sub
cwde
adc
jae
sbb
mov
xchg
jmp
add
pop
mov
sbb
xlat
lea
pop
retf
mov
fprem1
sub
pop
pop
aam
(bad)
xchg
mov
repz
jne
mov
sub
out
add
jg
jp
lock
jmp
lea
mov
jecxz
pop
sbb
xchg
xchg
in
and
test
push
xchg
xor
gs
(bad)
cld
rol
in
sub
mov
les
data16
and
fs
dec
jo
rcr
pop
mov
arpl
cmps
dec
retf
cmc
xor
pop
out
push
jg
sti
sub
(bad)
xchg
mov
push
add
mov
push
mov
arpl
xchg
arpl
leave
ret
mov
and
mov
ins
or
adc
mov
inc
push
add
sub
dec
cmp
mov
dec
je
xabort
dec
xchg
ds
mov
or
jecxz
mov
dec
daa
xchg
mov
push
push
jb
sbb
fld
dec
jmp
aad
mov
cdq
clc
(bad)
jne
call
jmp
daa
(bad)
stos
pop
mov
xor
dec
xchg
js
ja
inc
nop
sahf
jecxz
push
imul
inc
into
ficom
pop
sti
ins
sub
inc
sar
std
cmp
pop
and
enter
push
xor
call
add
push
addr16
mov
lods
inc
sti
into
push
xor
scas
mov
push
sbb
retf
fdiv
ins
test
or
test
out
nop
cmps
sub
xor
inc
mov
aad
call
lds
push
jne
inc
inc
mov
mul
push
cmp
xor
add
sub
pop
cmp
or
jbe
mov
adc
mov
sub
pushf
icebp
in
mov
lock
sti
arpl
sub
push
inc
aas
ds
stc
dec
sti
mov
add
dec
or
add
stos
test
push
and
icebp
aaa
mov
lock
cmps
pop
gs
int3
lods
idiv
dec
push
jne
pop
and
scas
sar
add
jmp
adc
addr16
jmp
rcr
sbb
scas
xchg
sub
loope
mov
cmps
dec
cli
dec
aam
and
cwde
(bad)
hlt
mov
add
call
adc
adc
in
daa
sub
xor
mov
and
ss
cwde
mov
aaa
test
jns
inc
mov
mov
dec
mov
out
mov
shr
or
jae
(bad)
aaa
stos
aad
shl
ret
or
xor
pop
ja
xor
mov
pop
and
mov
int
xchg
ror
cmp
aaa
fucomp
and
pop
push
dec
cvtps2pd
jp
xchg
les
or
repz
pop
fwait
mov
imul
add
cmps
dec
xchg
leave
bound
ss
int
jo
stos
lea
jmp
mov
adc
sbb
enter
fnstsw
dec
add
lds
inc
inc
mov
scas
sub
stc
pop
adc
test
fcomip
shr
out
or
in
sbb
sti
ret
rcr
pop
or
pop
inc
mov
clc
pushf
xlat
shl
call
das
(bad)
pop
push
rcr
aas
sbb
mov
in
add
sti
ss
jl
lods
xchg
jp
stos
sub
dec
mov
sbb
data16
pushf
push
sub
jecxz
xchg
push
mov
pusha
xor
scas
(bad)
cmp
sub
xor
fld
aam
or
outs
mov
aad
dec
ja
push
pop
outs
int
xchg
fistp
add
mov
sahf
push
xor
inc
gs
mov
loope
int
adc
mov
xchg
gs
cli
test
out
mov
les
xchg
push
outs
and
inc
cli
out
lea
sub
das
loope
fst
and
sbb
pop
rol
push
and
daa
aad
call
add
xor
ror
or
mov
(bad)
std
sbb
retf
push
xor
and
jg
xlat
aaa
test
jmp
mov
ret
in
fdiv
xlat
push
jne
adc
(bad)
repnz
mov
std
jae
inc
mov
jne
inc
into
xor
adc
xor
xchg
cli
scas
aam
mov
fnsave
ret
push
mov
lods
call
popf
call
or
fbstp
cmp
(bad)
retf
jo
retf
rol
not
test
jmp
mov
mov
shl
or
sub
add
adc
sbb
ja
jnp
jmp
sti
jo
fcomp
mov
mov
mov
les
jecxz
add
cmc
sbb
and
dec
(bad)
mov
dec
cmps
into
cmps
push
add
mov
ss
cmp
in
fiadd
xchg
das
sti
dec
lods
daa
neg
fmul
jae
pop
aad
push
retf
xchg
nop
xchg
pop
push
popf
sbb
xchg
add
lea
addr16
xchg
inc
popf
xchg
(bad)
in
jmp
es
hlt
dec
pop
cdq
mov
xchg
rol
aas
test
sub
sub
dec
pop
rcl
mov
xchg
adc
es
in
jno
xor
test
or
sub
(bad)
xchg
aam
in
je
mov
lahf
cmc
(bad)
xor
lock
retf
ins
scas
jne
shl
or
xlat
mov
mov
and
fadd
adc
dec
jb
or
push
cli
fimul
adc
sbb
pushf
and
mov
mov
in
xchg
aam
push
in
jmp
add
cmp
sti
inc
repz
dec
int3
inc
(bad)
and
jb
fwait
clc
jp
sub
pop
mov
repnz
lods
cmp
test
xor
inc
push
cmc
in
sub
cmc
sbb
aad
cmp
cmc
and
xchg
fs
jbe
int
daa
or
cmp
sbb
inc
dec
mov
stos
popa
xor
or
shl
btr
pop
and
and
and
popa
fcomp
xor
pusha
add
add
lods
inc
pop
repnz
mov
push
adc
scas
dec
std
push
clc
add
call
jb
fcmovbe
mov
jp
add
pusha
pop
mov
mov
mov
mov
pop
sti
gs
int
mov
cwde
push
add
cld
fsubr
fsubr
ffreep
jle
into
scas
rol
mov
dec
and
call
jmp
push
ret
scas
jecxz
in
or
jge
addr16
mov
ds
and
mov
lock
sbb
retf
push
push
or
dec
add
push
addr16
pop
jne
mov
sbb
sbb
mov
pop
cli
xchg
jg
jns
inc
ins
bound
rcr
imul
jmp
and
cli
and
loop
jmp
retf
int3
push
xchg
adc
loop
mov
call
mov
lock
inc
mov
arpl
mov
popa
lds
pop
(bad)
cmc
mov
movs
aam
xchg
push
scas
rol
popa
clc
cmp
jmp
mov
push
sar
mov
into
sahf
test
retf
xor
shr
rcr
mov
add
dec
es
adc
cmp
imul
sub
mov
and
mov
idiv
xchg
pop
lods
dec
sbb
rcr
jbe
setbe
jp
mov
mov
add
mov
mov
sahf
imul
repnz
repz
xchg
fdivp
retf
leave
int3
fmulp
pop
out
ds
pop
dec
add
push
test
lock
xor
movs
cmc
retf
push
mov
mov
mov
cmp
cmps
mov
cmps
mov
out
xchg
add
inc
add
push
xchg
dec
jecxz
dec
push
sbb
int3
sahf
jns
and
popf
push
mov
icebp
jg
out
adc
adc
add
xchg
ds
fwait
into
shl
ret
aam
retf
(bad)
jb
jmp
popa
sbb
inc
mov
pop
(bad)
data16
or
mov
sbb
loop
push
sbb
dec
jle
in
sub
fild
into
mov
lock
idiv
enter
test
xor
inc
xchg
movs
mov
scas
lock
sub
sub
movs
or
ficomp
mov
cmp
dec
mov
pushf
or
movs
mov
or
movs
jne
jmp
shl
loop
cmp
aad
ret
dec
ja
dec
mov
adc
xor
in
data16
mov
cmp
ret
enter
and
mov
ss
jb
js
jle
xor
out
cmp
sub
dec
mul
gs
call
mov
stos
mov
xchg
stos
jbe
jmp
cmp
dec
and
enter
popf
mov
pop
dec
fcomp
sbb
addr16
pop
lods
cmp
inc
pop
outs
jecxz
push
mov
adc
cmps
mov
or
cmp
rcr
push
aad
leave
jl
lods
outs
cmp
lahf
stos
std
and
xchg
push
cmp
xchg
ret
out
pop
out
or
mov
test
(bad)
(bad)
rol
cwde
test
or
retf
out
not
xchg
mov
sub
jo
fiadd
pushf
test
stos
and
fcomp
(bad)
call
and
out
jecxz
adc
test
out
sub
inc
cmp
sti
push
pop
stos
addr16
mov
and
mov
and
push
fst
jg
ss
loop
sti
dec
inc
arpl
pusha
and
xchg
arpl
repnz
rcr
xchg
jns
or
xchg
jge
iret
push
ins
jl
repz
mov
sub
mov
loop
mov
pop
mov
inc
(bad)
and
imul
mov
jnp
cwde
sub
aad
je
shr
xchg
movs
mov
mov
loopne
xor
push
out
or
fwait
mov
mov
sub
bound
jmp
out
dec
mov
arpl
popa
cli
push
popf
dec
push
dec
mov
hlt
into
sbb
sbb
or
sub
hlt
faddp
xor
in
jl
mov
push
repz
inc
loope
aas
enter
jl
sub
mov
mov
fnstsw
(bad)
lahf
out
inc
jl
push
sub
(bad)
mov
cld
ror
cmc
xor
inc
adc
push
push
aaa
xchg
in
icebp
pop
outs
popf
xchg
cmps
xchg
cmp
adc
sahf
(bad)
test
cmp
into
sub
mov
and
lds
and
xlat
cdq
and
dec
and
lods
jbe
mov
inc
pop
enter
jmp
in
sbb
dec
pop
mov
lahf
sub
pop
jp
push
test
mov
xchg
dec
mov
sub
shr
jns
mov
adc
cmp
ret
test
mov
pop
cs
add
fwait
adc
and
outs
scas
inc
xchg
fsub
adc
sub
pop
(bad)
jo
xchg
jmp
jg
in
cld
jmp
cdq
xchg
cmps
dec
test
push
rcl
sbb
dec
add
dec
in
outs
(bad)
(bad)
cmp
push
mov
mov
xor
inc
mov
pop
push
nop
rcr
sub
sub
mov
rol
stos
retf
sbb
js
sub
lahf
sub
cmp
sbb
cld
data16
dec
idiv
(bad)
mov
icebp
out
and
test
inc
cmp
aad
push
ja
cmp
jl
cmps
mov
push
mov
stos
push
mov
pop
shl
xor
mov
or
push
push
addr16
and
mov
pop
stc
mov
mov
nop
(bad)
not
div
push
mov
sbb
mov
and
sti
nop
enter
fiadd
xchg
add
mov
inc
out
sub
cmc
inc
jmp
add
dec
pop
(bad)
cmp
cmp
gs
inc
sbb
push
pop
outs
idiv
(bad)
mov
add
les
mov
inc
ffree
mov
xlat
imul
adc
jno
cld
pushf
jns
and
inc
(bad)
loop
lock
iret
xchg
js
inc
push
int3
adc
shr
icebp
mov
shl
mov
dec
cmps
mov
push
sbb
test
cmp
mov
inc
adc
call
and
xor
aas
aaa
aam
mov
inc
mov
mov
jmp
cmc
ja
add
pushf
stc
pushf
add
enter
out
dec
imul
pusha
adc
or
out
fistp
hlt
dec
imul
ficomp
push
test
inc
xor
add
dec
or
mov
push
jnp
leave
outs
push
mov
aam
xchg
fcomp
fs
xchg
retf
fild
add
clc
pop
mov
iret
ficom
aas
movs
pushf
mov
test
leave
inc
jns
(bad)
cdq
push
sbb
push
mov
ja
pop
mov
shr
bound
inc
(bad)
lock
sets
aaa
push
add
and
sub
dec
rdtsc
push
fst
out
aas
sbb
xchg
pop
ja
push
cmps
push
push
arpl
mov
or
fcom
xor
xor
aam
test
sub
in
pop
fsub
mov
lea
pop
mov
pop
xchg
daa
mov
mov
and
test
cs
out
adc
adc
or
sbb
jnp
(bad)
mov
cmp
dec
stc
jp
cmp
data16
movs
inc
dec
sub
xchg
sbb
and
xor
mov
dec
stc
mov
dec
jl
sbb
in
out
sbb
loop
gs
inc
jl
out
lahf
scas
inc
shl
jb
adc
push
(bad)
icebp
fidiv
mov
dec
out
popa
repnz
jmp
push
add
mov
pop
pusha
xchg
mov
jmp
bound
push
and
mov
jae
(bad)
cmps
mov
dec
and
dec
dec
add
sub
pop
xor
push
or
xchg
push
dec
sahf
mov
loopne
imul
call
or
mov
(bad)
hlt
jae
jl
inc
inc
je
or
sahf
jge
mov
dec
(bad)
xchg
push
push
xor
hlt
shl
pop
pop
pop
pusha
loopne
jle
psubsb
fwait
jge
dec
xchg
into
add
xchg
cdq
xchg
stc
jnp
test
test
fidivr
ror
push
std
jge
pop
push
push
adc
jg
mov
xchg
and
push
sti
or
dec
inc
xor
shr
fimul
or
(bad)
lods
repnz
(bad)
mov
out
out
sub
cli
cmp
mov
rcl
jns
cmp
adc
cmp
mov
push
lock
nop
mov
stos
sub
jns
push
jne
loop
inc
inc
xor
cdq
test
daa
cwde
adc
out
repnz
add
loopne
inc
pop
adc
sub
or
out
cdq
adc
cmc
jmp
xor
shl
pushf
lods
push
(bad)
test
pop
stos
push
pop
mov
mov
outs
aaa
mov
push
mov
enter
(bad)
or
les
add
and
pop
arpl
sub
adc
addr16
pop
test
or
inc
push
mov
jnp
call
xor
call
je
sti
and
xor
or
mov
cdq
sti
cs
pop
inc
and
jo
push
(bad)
add
out
mov
push
xlat
movs
cmps
jno
xchg
scas
cmp
jecxz
inc
sub
mov
mov
mov
les
mov
xlat
push
push
movs
jle
ret
jns
mov
push
inc
test
inc
adc
cli
push
aam
stos
lods
daa
inc
xor
movs
std
adc
icebp
dec
test
shl
rcl
je
test
mov
add
add
jne
cmp
mov
scas
sub
and
loop
icebp
jmp
cmc
sbb
movs
iret
cmp
inc
pop
js
add
inc
xchg
xchg
je
pusha
cmp
hlt
cmp
lods
in
push
das
dec
movs
or
popa
scas
cld
sbb
popf
adc
sar
fstp
rdpmc
sbb
xchg
repz
in
dec
push
mov
xchg
fwait
mov
pop
cld
dec
dec
test
(bad)
cwde
sbb
jg
pop
aas
(bad)
fistp
push
jge
in
sub
scas
mov
pusha
inc
add
cmp
xchg
sahf
dec
pushf
retf
sbb
xchg
adc
sbb
mov
stos
xor
and
sub
and
mov
lds
arpl
ds
test
(bad)
fs
sar
popa
(bad)
xor
push
leave
push
iret
push
repz
ror
les
daa
push
std
mov
test
popa
push
dec
mov
xlat
(bad)
jl
add
lds
cmp
cmps
fwait
or
sahf
add
add
inc
mov
sbb
sar
and
mov
aaa
movs
sbb
jg
in
movs
rcr
jg
lods
pop
out
lahf
cmp
mov
sbb
sbb
fiadd
or
es
pop
xor
jae
inc
and
mov
xchg
addr16
test
mov
fs
xchg
pop
xor
js
pop
lds
pop
jmp
out
dec
push
leave
cs
imul
push
rol
mov
pusha
xor
sti
scas
mov
cmps
bound
(bad)
int
or
daa
jae
or
mov
add
pop
daa
int
jbe
test
sbb
fwait
lods
push
adc
shr
sub
or
fcomp
jecxz
push
out
dec
out
in
cs
vmread
imul
mov
daa
or
out
outs
dec
xchg
inc
adc
and
push
adc
jnp
in
arpl
sbb
cld
ret
ja
pop
out
xor
add
fisub
lock
vpshaw
test
add
retf
jmp
pusha
dec
(bad)
(bad)
mov
test
or
and
addr16
fisttp
mov
add
lahf
xchg
cs
jp
rcr
mov
xor
lea
xor
inc
adc
repz
inc
in
outs
fild
rsqrtps
imul
jno
out
(bad)
adc
xor
adc
mov
test
or
add
xchg
cmc
dec
js
mov
and
xchg
cmps
out
pushf
outs
xchg
outs
xchg
pop
fstp
std
stos
pop
and
jg
dec
and
sub
fist
sahf
push
pop
pusha
adc
xor
in
je
jmp
outs
aad
xor
jmp
sti
and
dec
cld
mov
repz
or
movs
cmp
and
fistp
push
adc
jmp
sub
stos
jge
stc
aad
mov
data16
jp
retf
lods
test
jle
cmp
pop
fs
popa
jbe
pop
in
mov
dec
push
mov
mov
(bad)
cmc
cmp
mov
out
lea
pop
xchg
xchg
jns
aam
or
fadd
sub
repnz
pop
inc
call
jne
and
add
ins
je
out
fnsave
retf
mov
cwde
lock
gs
sti
(bad)
dec
sbb
pop
inc
jo
fucomp
xchg
out
mov
fs
mov
lds
cli
add
push
in
ret
or
xchg
fsubr
es
les
repnz
ret
cmp
push
mov
push
xor
sub
or
pop
clc
(bad)
loopne
div
or
outs
pop
xchg
call
xor
dec
jo
and
mov
mov
leave
pop
(bad)
mov
add
inc
or
repz
scas
mov
shl
mov
mov
xlat
int3
mov
xchg
add
ror
retf
lock
xchg
daa
mov
inc
xchg
adc
aam
sti
lahf
in
mov
xchg
pop
xor
xchg
mov
fld
push
add
out
je
cmp
or
or
hlt
shr
mov
mov
cmp
bound
jle
mov
xlat
cmp
or
xchg
jmp
xchg
mov
mov
jecxz
cli
(bad)
adc
stos
xor
cmps
(bad)
dec
out
in
dec
ror
add
std
shr
jbe
dec
sti
and
ja
loope
xor
inc
test
pop
pop
loop
pushf
sbb
or
movs
sbb
pop
or
retf
repz
fcomp
sub
shl
mov
push
or
sbb
xor
dec
sahf
push
adc
xchg
retf
ds
das
stos
mov
fld
sbb
fild
pop
sbb
mov
cmp
leave
popa
(bad)
mov
repnz
sub
and
or
ror
or
inc
cwde
and
icebp
ins
lock
push
push
inc
xchg
das
add
cmc
adc
mov
mov
xchg
xchg
pusha
mov
inc
rcr
sbb
push
dec
fdiv
push
ficomp
xor
and
rol
push
mov
cwde
cmp
loop
cli
or
push
sbb
(bad)
cmc
pop
push
js
aas
ins
sub
lock
(bad)
js
stos
lahf
dec
pop
adc
cmc
aad
daa
stc
rcr
push
retf
and
sub
jns
jb
in
xor
(bad)
pop
enter
into
addr16
cdq
xchg
inc
stos
in
mov
mov
jbe
clc
or
jns
movq
adc
mov
rcr
inc
inc
stos
mov
xlat
rol
sub
sbb
mov
inc
cmp
sbb
jmp
xor
and
(bad)
jne
cmp
(bad)
mov
cmps
pop
repz
push
add
pop
mov
xor
in
add
fisttp
pop
pop
jg
test
mov
cmp
cmp
enter
sub
push
jno
or
mov
pusha
in
xchg
pop
xor
clc
cmp
mov
dec
fldenv
or
push
mov
imul
jno
pusha
clc
xchg
imul
jmp
mov
mov
in
push
fld
daa
hlt
jmp
mov
mov
push
mov
sub
push
dec
pop
jmp
ficomp
pop
jbe
mov
inc
dec
xor
(bad)
mov
add
ds
aaa
ds
stc
lds
mov
adc
adc
xor
push
es
and
loopne
jbe
aad
inc
jg
jle
sbb
cdq
popa
xor
scas
xor
jg
xor
mov
adc
mov
test
retf
(bad)
nop
xor
scas
push
inc
add
mov
loope
icebp
aad
in
jle
mov
call
jge
inc
push
aad
rcr
xchg
loopne
int3
mov
jno
inc
xchg
xor
in
daa
sar
movs
jo
mov
pop
push
in
aaa
mov
ss
adc
jb
or
xchg
hlt
gs
not
fild
neg
retf
imul
(bad)
sti
movs
dec
scas
xor
loopne
dec
pop
retf
xchg
into
jge
in
add
dec
out
jg
and
test
xchg
jns
ret
test
jecxz
push
sbb
jns
adc
xchg
loopne
sbb
cld
ss
fimul
xchg
cld
(bad)
retf
and
call
adc
pop
in
pusha
loop
int
jecxz
outs
cmps
pop
xchg
add
iret
fucom
dec
add
cld
aaa
aad
sub
add
cmp
lock
dec
mov
mov
dec
jl
inc
or
jmp
(bad)
mov
pop
push
push
add
hlt
push
jmp
js
jno
pushf
xchg
mov
mov
push
pop
and
xchg
fdiv
jbe
and
dec
shl
enter
shl
iret
mov
pop
ja
pusha
daa
movs
mov
add
iret
mov
out
out
sar
imul
or
mov
int3
gs
dec
xchg
xor
lds
xor
push
and
(bad)
mov
pop
dec
mov
daa
cdq
sbb
dec
(bad)
(bad)
mov
sub
adc
and
or
mul
out
daa
jno
mov
call
mul
fadd
fsub
xlat
stos
mov
repnz
cmp
popa
pushf
mov
mov
fwait
loop
out
inc
mov
jae
enter
mov
add
add
or
imul
pop
into
and
clc
fisub
out
nop
sub
pop
pop
xor
scas
sub
and
popa
xchg
mov
into
pusha
fnstsw
ds
or
(bad)
jae
jmp
lods
or
loopne
mov
pusha
pop
ret
mov
fidivr
in
mov
add
inc
xchg
je
jae
jg
pop
pop
mov
pop
push
dec
(bad)
sbb
cmp
adc
repnz
push
adc
dec
inc
fs
sysexit
popf
dec
enter
cmp
and
sti
add
push
cmc
jb
clc
push
retf
cmp
clc
fdiv
inc
ret
add
and
push
ds
push
xor
(bad)
(bad)
ret
(bad)
das
stos
mov
sar
aad
arpl
js
jle
xchg
mov
dec
push
jne
retf
test
mov
clc
or
imul
movs
xchg
and
pop
cmc
adc
jl
xor
xor
mov
arpl
jp
sbb
mov
jnp
nop
sahf
hlt
cmp
inc
call
leave
xor
xchg
add
push
add
mov
jecxz
(bad)
fs
mov
sbb
and
hlt
int
mov
ins
dec
movs
mov
stc
jp
push
push
and
lods
pushf
lahf
xcrypt-cfb
cmps
and
jge
test
test
in
mov
cmp
stos
aas
push
pop
imul
push
sub
add
or
test
sub
or
and
mov
cmp
xor
xchg
or
mov
mov
or
clc
push
ss
xchg
aad
out
les
aad
or
mov
jnp
int
cdq
cmp
mov
pop
sti
(bad)
jmp
xchg
add
pop
mov
lods
iret
clc
fwait
xchg
test
inc
call
mov
xor
sti
jecxz
fsubr
mov
sub
mov
int3
aas
add
addr16
push
cmp
push
inc
xor
es
sbb
shr
mov
leave
mov
sub
lea
mov
cmp
fnstcw
or
sbb
jb
stos
test
mov
jo
jp
mov
ins
add
pop
mov
ins
inc
mov
xor
in
pop
pop
imul
daa
push
scas
pusha
pop
push
mov
test
push
aas
and
xchg
gs
imul
mov
out
retf
test
or
pop
add
push
jb
or
fsubr
mov
scas
mov
and
mov
and
cwde
ins
test
neg
or
iret
add
jl
xchg
sub
xchg
mov
mov
push
sti
stos
call
mov
gs
mov
adc
clc
neg
pushf
stos
cmp
dec
jmp
push
in
loopne
add
loope
and
xchg
call
fld
add
xchg
cmp
sysret
outs
cmp
push
mov
stc
mov
loopne
jle
(bad)
fnsave
adc
pop
dec
cmp
add
adc
in
add
sbb
adc
pop
dec
scas
les
adc
sbb
nop
cmp
mov
daa
adc
pop
jmp
jmp
xor
aaa
fwait
jge
int3
into
dec
lock
fwait
add
push
or
mov
leave
std
dec
jbe
jae
push
jmp
pop
sbb
push
xchg
push
or
(bad)
mov
push
xor
dec
pop
pop
dec
aam
int3
push
arpl
stos
push
mov
das
fucomi
ins
je
shr
popf
pop
inc
repnz
jge
sbb
imul
out
nop
outs
or
or
lea
mov
add
scas
sbb
adc
sub
lock
es
sahf
(bad)
test
xor
mov
inc
and
loope
mov
ret
add
repz
fsub
frstor
sbb
push
scas
daa
test
inc
fist
jmp
push
arpl
and
pushf
push
sub
fist
push
cdq
dec
mov
xchg
sub
jg
jmp
xchg
xchg
xlat
push
int3
daa
leave
ss
test
adc
rcr
inc
jge
mov
jl
imul
add
dec
iret
jb
jno
jmp
jns
add
jge
cs
xchg
out
jns
mov
les
jp
sub
test
mov
(bad)
xchg
add
pusha
pushf
mov
cdq
loope
rcl
and
adc
add
and
adc
jo
dec
in
(bad)
ds
dec
loop
xchg
sbb
mov
push
jl
movs
xchg
test
pop
mov
jp
add
xor
xchg
jb
xchg
ins
addr16
sbb
xchg
dec
push
pushf
adc
nop
push
out
sbb
sbb
cmp
shr
jae
pop
imul
dec
ins
cmps
mov
rcl
pop
xor
mov
lock
gs
inc
arpl
inc
inc
push
fld
movs
fsub
mov
push
out
mov
das
cmp
xlat
push
xor
or
int
pop
addr16
into
mov
cmps
xor
sub
sub
fwait
(bad)
loop
lods
ror
stc
(bad)
cmps
lock
dec
fistp
xlat
imul
push
xchg
pop
or
mov
iret
jg
fld
cmps
xor
call
outs
sub
int3
fs
ret
enter
fs
loope
mov
(bad)
adc
adc
(bad)
dec
or
jb
mov
mov
mov
add
es
enter
daa
jle
push
dec
jle
sbb
arpl
gs
adc
push
or
js
cli
cmp
scas
or
imul
test
int3
lods
sbb
mov
test
leave
mov
pushf
jnp
ins
fst
sbb
jns
xor
sbb
lods
pop
xchg
xchg
mov
aam
mov
pushf
fs
mov
and
push
pop
int
push
adc
adc
jle
xlat
mov
push
movs
sti
push
or
sub
ds
in
pop
test
in
outs
xlat
pop
(bad)
fisub
lock
test
imul
nop
shl
xor
fisub
inc
addr16
in
inc
cs
or
idiv
sub
cdq
sub
cdq
mov
cmp
sbb
jmp
sub
xchg
out
aam
jp
fsubrp
jle
arpl
rcr
xor
mov
or
fidivr
outs
in
shl
movs
inc
fld
pop
loope
popf
push
mov
add
jg
or
mov
cs
aad
add
out
sahf
cld
mov
dec
inc
sub
shr
inc
retf
int3
xor
cwde
scas
and
adc
ins
add
sub
add
jl
retf
mov
inc
mov
cmc
into
mov
pusha
inc
mov
cmp
or
push
out
das
cmp
(bad)
movs
mov
mov
pop
dec
or
imul
xor
(bad)
ins
call
mov
aas
dec
mov
pop
jmp
jbe
std
stos
cmc
adc
mov
repnz
fdiv
or
jno
enter
sti
push
sbb
cmp
adc
ficomp
push
out
addr16
fild
(bad)
xchg
imul
xchg
pop
mov
fcom
les
pop
rcl
mov
cmp
push
pop
pop
adc
enter
out
dec
icebp
les
dec
in
aad
mov
dec
addr16
inc
and
xchg
xchg
mov
push
loop
cwde
icebp
jmp
push
mov
stos
adc
movs
mov
pop
jmp
xchg
dec
sbb
add
fnstenv
xchg
stos
outs
sbb
mov
scas
aam
ins
dec
into
pop
mov
lea
push
data16
mov
sbb
mov
jge
dec
cli
push
push
(bad)
enter
jbe
inc
jg
or
xor
mov
and
out
js
cwde
scas
adc
inc
mov
inc
movs
fisubr
sbb
jp
lods
inc
sub
stc
adc
mov
pusha
sbb
push
jns
sbb
mov
out
(bad)
push
adc
xchg
je
fsub
fldcw
mov
ss
lock
pusha
aas
or
mov
div
and
out
aam
fs
daa
dec
rcr
and
movs
xchg
in
mov
out
mov
adc
fcomi
in
cmp
rol
retf
rol
sub
inc
adc
cmp
jmp
ins
pop
dec
sahf
jns
repnz
inc
sar
hlt
mov
xchg
out
sar
iret
ret
cmp
movntq
in
pop
ret
pop
adc
inc
sbb
retfw
mov
ret
rcl
hlt
lods
fsubr
push
mov
xor
mov
pop
cmps
push
xchg
sbb
add
pop
mov
bound
pop
fs
adc
and
push
scas
cld
mov
cwde
lock
lea
out
idiv
jge
int
cmp
ret
sub
pop
push
(bad)
jmp
inc
mov
or
jg
add
call
ret
mov
cs
push
mov
cmp
cmp
out
ret
jnp
fnsave
cmp
or
mov
jb
mov
push
aaa
push
and
in
mov
hlt
cmp
mov
xchg
xor
mov
and
xlat
pop
adc
push
scas
xchg
aas
add
shl
repz
std
xor
pop
ret
retf
inc
rcr
cli
sbb
jge
daa
sbb
mov
xchg
cdq
enter
push
push
aam
adc
cmp
xlat
and
sar
clc
dec
xor
rcl
pop
dec
pop
ss
icebp
xchg
ror
push
in
jb
xchg
or
aas
push
(bad)
push
dec
in
jecxz
adc
inc
mov
and
test
mov
xor
shl
iret
stos
xchg
icebp
jmp
pop
sbb
es
inc
push
ins
xchg
lea
inc
outs
cmp
or
sub
jo
jmp
cmps
jb
dec
cli
test
adc
dec
push
out
clc
cwde
push
jg
inc
push
and
add
xor
push
ja
jo
aad
out
outs
(bad)
out
int
repz
jnp
add
pushf
mov
sbb
scas
imul
mov
popa
inc
cmp
retf
cdq
sub
xor
adc
fisttp
push
pop
mov
xchg
ins
mov
cld
movs
mov
mov
xchg
cli
out
ror
aaa
loope
cmp
or
mov
sub
scas
and
repnz
dec
jge
test
jnp
scas
ins
xchg
pop
xor
mov
ds
cmps
sahf
inc
push
rcr
pop
ja
mov
loop
xor
dec
inc
int3
(bad)
bound
rcr
sbb
mov
xlat
adc
xchg
inc
clc
jmp
cmp
inc
ins
inc
test
jmp
mov
fild
lock
mov
es
ds
mov
stc
jmp
jecxz
sbb
push
call
mov
aas
inc
test
pop
outs
ss
mov
std
xchg
inc
jmp
cmp
and
retw
pop
sbb
dec
lock
retf
jns
sub
add
shl
or
mov
push
dec
inc
sahf
pop
inc
xor
test
add
xchg
(bad)
rcr
push
mov
cmps
idiv
call
(bad)
push
jge
or
pop
pop
cmps
loop
push
(bad)
repz
jnp
sti
call
bnd
inc
sub
adc
jg
cdq
xchg
inc
lahf
mov
lods
aaa
js
xchg
idiv
shl
imul
out
xchg
mov
jb
in
mov
pop
pop
rol
mov
leave
icebp
std
adc
jmp
push
lea
jns
jae
sub
nop
or
fucomp
sub
out
clc
sbb
xchg
and
xor
adc
adc
add
std
rcr
dec
aad
fwait
mov
ss
mov
les
xor
call
leave
mov
mov
add
test
and
outs
arpl
(bad)
jp
add
cdq
jb
ret
jnp
addr16
xchg
xchg
adc
cmps
pop
dec
dec
sub
scas
scas
push
stc
adc
ja
fisub
jo
outs
cmps
loopne
adc
ror
dec
mov
inc
cmp
icebp
jmp
mov
xor
call
sub
aas
jp
add
cmp
shl
inc
cwde
jmp
and
mov
mov
aad
int
movs
and
stos
cmps
adc
stos
dec
push
mov
dec
addr16
jo
ja
outs
call
ins
rcl
dec
scas
das
fmul
in
enter
js
ret
out
dec
xchg
arpl
dec
retf
pop
dec
psubd
sti
push
out
pop
lock
xor
mov
mov
pop
or
sbb
ins
in
mov
loop
xchg
int3
into
gs
and
and
popf
jmp
ins
xchg
ficom
jecxz
repz
pop
pop
aam
adc
dec
fs
data16
ja
bnd
xor
lock
into
push
sar
sar
cmps
cmp
cmp
mov
pavgw
sahf
jmp
or
jnp
adc
mov
fsubp
jnp
push
jae
jmp
shl
jmp
std
ins
mov
dec
mov
or
jge
fidivr
into
fst
inc
lock
mov
ret
mov
inc
mov
dec
pop
ror
jnp
retf
sar
xchg
test
mov
or
cmp
dec
xchg
cmp
pop
fild
ins
xchg
xchg
mov
add
imul
(bad)
out
xor
test
fld
clc
xchg
sbb
ss
rcr
pop
mul
retf
push
and
and
int3
retf
in
mov
aas
(bad)
push
add
push
data16
in
in
aam
xchg
push
jno
out
shl
mov
mov
add
fnclex
lds
cli
jbe
push
scas
call
xchg
mov
cmp
or
jnp
icebp
xor
adc
popf
ss
je
mov
sub
pop
add
cmp
(bad)
xor
lock
cwde
stos
inc
out
xor
fs
dec
add
iret
test
pop
ds
mov
dec
mov
xchg
pop
jmp
test
aas
pop
xor
in
adc
mov
ficomp
sbb
sar
pop
leave
sub
scas
inc
mov
and
pop
imul
lock
loope
cmc
call
rol
leave
fiadd
dec
push
pop
mov
jno
rcr
ret
ins
xor
jle
pop
stc
push
das
bound
cmp
out
inc
js
mov
(bad)
(bad)
outs
fidiv
fsubp
jae
add
xchg
inc
mov
loopne
jge
mov
lods
call
test
cmc
pop
and
cmp
jmp
dec
pop
cmc
(bad)
push
nop
cwde
and
ins
(bad)
out
std
fsubr
mov
sub
push
in
jns
adc
ins
mov
xchg
popf
sbb
jl
pop
(bad)
stc
inc
jmp
sti
jmp
dec
dec
mov
mov
imul
and
hlt
mov
sbb
mov
popf
add
imul
jbe
xlat
dec
popf
aad
aas
cmps
sbb
jbe
dec
js
jle
add
scas
cmp
in
add
sbb
xchg
je
jo
cmp
mov
fs
les
psrlw
xchg
jle
mov
pop
jne
cli
clc
jmp
mov
call
adc
int3
jecxz
xor
and
sub
in
(bad)
ficom
mov
mov
mov
xchg
xor
sti
inc
in
and
enter
ins
jne
int3
jle
popa
dec
ror
imul
out
int
xlat
pop
jno
pop
mov
(bad)
addr16
stos
std
into
and
pop
(bad)
movs
mov
add
lods
cwde
and
or
fsubr
pop
mov
js
rcl
lods
cdq
push
ja
out
push
mov
cmps
pop
imul
sub
mov
dec
mov
mov
mov
sub
jo
mov
sub
jno
adc
nop
es
movs
pop
adc
movs
mov
into
into
xor
xor
cmp
cmp
xor
cmp
mov
pop
jb
ins
and
adc
sahf
(bad)
cs
sub
out
icebp
and
mov
(bad)
sub
and
gs
inc
xchg
pop
pop
stos
push
pop
mov
mov
clc
xor
and
cmps
movs
std
or
ss
mov
or
sub
(bad)
rcr
retf
mov
and
xor
test
loope
lds
add
call
mov
popa
adc
mov
cmp
lods
shr
stc
aas
sub
jg
push
jp
scas
psubusw
pop
push
arpl
cs
bt
repz
jle
shl
aad
outs
jb
out
push
clc
jo
aas
rol
test
call
xor
in
stos
and
mov
xchg
or
jg
imul
loop
inc
aas
or
inc
mov
rcr
dec
repz
sub
cmp
xchg
push
stos
shl
outs
cmp
icebp
ja
add
pop
or
cmp
adc
push
jb
jno
jg
and
jmp
out
adc
in
jge
lock
test
xchg
lds
sbb
out
(bad)
dec
cmp
inc
pusha
xchg
jle
sbb
movs
arpl
xchg
xchg
lods
mov
jns
call
loop
inc
rcl
pop
cmp
and
in
xchg
dec
xchg
or
fistp
cmp
push
retf
xchg
inc
les
push
and
mov
cmc
imul
fdiv
add
push
inc
pusha
adc
mov
xchg
cmps
out
inc
(bad)
mov
xlat
outs
push
pop
icebp
sub
push
xor
mov
xchg
pop
outs
pop
in
or
sti
mov
jecxz
call
pop
mov
enter
iret
jl
mov
(bad)
retf
xor
push
mov
mov
mov
test
jp
lods
lea
ficomp
xchg
push
jb
xor
pslld
js
inc
sbb
mov
cmp
pop
push
mov
adc
lahf
cs
mul
(bad)
push
arpl
(bad)
jmp
adc
cmp
lea
lahf
mov
push
repz
ror
mov
jo
(bad)
ds
les
loopne
sar
cmp
pop
repnz
pop
xor
or
adc
and
jno
not
mov
jns
or
pop
dec
retfw
aas
pusha
xchg
repnz
push
(bad)
mov
dec
sub
jecxz
shl
xchg
call
pushf
sub
xor
ret
leave
pop
push
and
mov
div
cmp
xchg
cmp
xchg
ret
into
or
imul
repz
pop
stos
cli
adc
xor
push
fild
gs
test
add
adc
in
push
xor
mov
cmp
cwde
into
cmp
in
lods
xchg
jne
xor
jmp
add
(bad)
aaa
sub
cmp
addr16
in
out
inc
nop
call
sub
mov
cmp
sub
mov
popf
mov
mov
lock
cmp
jle
aas
push
mov
lods
and
sbb
stos
ret
cwde
in
int
sbb
rol
dec
cmp
ins
loopne
add
xchg
mov
jae
in
add
mov
jbe
test
pop
mov
adc
sub
pop
movntps
pushf
sbb
sti
pop
xchg
sti
ficomp
call
adc
push
adc
mov
sub
dec
ins
and
jecxz
dec
sahf
dec
jno
mov
push
fnstenv
in
mov
scas
push
cli
mov
xor
jmp
jle
stc
movs
loope
rcl
jbe
leave
imul
int
sub
mov
inc
and
lods
mov
xchg
aas
xor
je
or
sahf
jl
mov
mov
test
mov
outs
lock
jecxz
sbb
and
stos
dec
movs
add
aaa
fcom
pop
unpcklps
pop
pop
daa
pushf
jae
sbb
lahf
dec
add
in
lahf
pop
add
or
jmp
rcr
cmp
data16
into
mov
xor
fiadd
sub
fnstsw
dec
jg
pop
idiv
outs
mov
jl
mov
rol
jmp
push
lahf
daa
int
cmp
jmp
outs
cli
into
out
jle
jg
mov
test
stos
fild
sti
cmp
arpl
repnz
jns
jno
mov
dec
mov
call
fsubr
rcr
sub
in
(bad)
xor
dec
push
fild
(bad)
jmp
repnz
and
mov
inc
popa
test
pushf
sti
pusha
cdq
stos
inc
sbb
add
addr16
rcl
add
pusha
dec
ja
pop
or
lds
call
retf
mov
inc
adc
hlt
push
arpl
arpl
inc
mov
mov
jle
mov
scas
cmp
jecxz
xchg
clc
scas
pop
(bad)
pop
and
mov
sbb
arpl
test
pop
mov
inc
inc
dec
adc
inc
cli
ret
outs
stc
nop
icebp
inc
inc
sbb
or
inc
and
xor
sub
mov
pusha
in
mov
ret
push
stc
jl
retf
out
lock
cmps
movs
repz
ret
mov
stos
jg
mov
iret
sbb
mov
inc
iret
jmp
loop
dec
xor
cmp
cmp
repnz
cs
daa
and
adc
aad
or
retf
add
out
in
mov
pop
jl
mov
push
push
jns
ins
or
aaa
jmp
repz
add
pusha
xchg
cdq
(bad)
(bad)
in
mov
shl
popa
pop
hlt
mov
pop
int
add
bound
xor
ins
fcomp
dec
adc
pop
mov
xchg
mov
add
retf
mov
movs
(bad)
xchg
or
fiadd
sub
test
scas
aas
or
adc
sar
mov
and
adc
test
add
imul
ror
out
idiv
mov
jle
mov
sbb
bound
sti
push
fdivr
sahf
enter
popf
dec
cmp
shl
adc
inc
dec
test
out
mov
and
jnp
out
rcr
stos
fidivr
div
bound
cwde
stos
jmp
std
int3
dec
test
xchg
jns
mov
pop
sub
in
or
inc
int
jns
les
into
xor
or
add
add
test
jl
mov
pop
outs
or
fmul
push
icebp
mov
jo
xchg
test
adc
imul
mov
xor
push
xchg
cmp
xor
scas
push
dec
push
enter
enter
adc
jmp
xchg
shr
int3
test
ja
neg
shl
(bad)
add
push
dec
add
mov
add
popa
setns
rol
or
std
(bad)
xor
push
push
mov
inc
nop
ret
cmps
or
out
iret
cld
lods
mov
and
push
out
add
imul
sbb
clc
ret
xor
test
and
bnd
push
ss
inc
adc
aad
je
push
inc
outs
pop
je
jb
imul
mov
push
mov
addr16
mov
cmps
sub
mov
xor
jae
int
sbb
imul
scas
cs
ja
pop
shr
retf
xchg
int
mov
push
inc
xor
sub
push
push
jmp
pop
sub
xor
jmp
rcr
or
neg
jecxz
inc
sub
sbb
pop
movs
inc
shr
lods
mov
jo
inc
mov
test
hlt
mov
jb
mov
call
cmp
sub
shr
adc
retf
stos
sahf
bound
inc
pushf
popf
aas
cmp
fwait
stos
inc
jns
xor
dec
bound
adc
pop
or
push
mov
bound
es
and
cwde
sar
fisub
mov
pop
ficom
int
ins
ss
inc
imul
ficom
add
mov
pop
mov
outs
nop
mov
and
add
loop
cmp
dec
out
test
jge
xor
mov
jbe
call
outs
xchg
adc
jo
(bad)
mul
sti
push
and
mov
jnp
cmps
iret
mov
mov
push
std
mov
movs
pavgw
sub
ficom
cmps
movs
pop
jmp
ins
call
ret
xchg
mov
sahf
pop
repnz
pop
xor
aaa
xor
je
or
jns
inc
scas
cmp
adc
icebp
jae
and
sbb
cmp
dec
movs
ins
rep
sbb
xchg
xchg
jmp
sar
xchg
xchg
stos
push
loopne
into
popa
or
push
or
cmp
xor
push
lock
hlt
test
outs
sbb
cmps
adc
cwde
ret
mov
ss
mov
add
adc
mov
fidivr
mov
loopne
xchg
jge
movs
mov
addr16
and
cmp
adc
cs
loope
sti
mov
out
mov
fs
pusha
adc
xchg
sub
mul
sti
add
and
add
test
retf
stc
dec
sub
add
jmp
movs
push
push
cmp
es
and
scas
imul
cld
sbb
sbb
inc
xor
push
pop
cld
xchg
add
pusha
outs
push
pushf
xchg
cmc
enter
mov
jle
inc
cmp
into
pop
cmps
mov
mov
arpl
out
dec
inc
pminsw
repz
push
fdivr
into
fsubr
jb
or
xlat
call
sahf
stos
sub
jecxz
lahf
push
mov
movs
or
rcr
rol
sbb
icebp
pop
pop
mov
mov
rol
cmc
sub
mov
stos
outs
mov
or
in
adc
dec
dec
jmp
(bad)
xor
leave
mov
jnp
sub
lahf
xchg
test
in
stos
lods
das
mov
stos
jecxz
lods
ror
loop
cmc
mov
push
in
out
adc
xor
das
lds
jbe
or
pop
arpl
fld
push
mov
mov
lahf
sub
movs
jnp
xor
xlat
pusha
mov
push
repz
pop
outs
test
sbb
jmp
(bad)
dec
repnz
aaa
pop
jnp
xchg
pushf
mov
xor
sbb
or
fld
(bad)
dec
add
dec
movs
or
xchg
mov
outs
mov
movs
iret
cmp
lds
out
push
push
lock
jns
imul
test
mov
das
cdq
xor
data16
mov
pop
pop
xor
test
iret
inc
fwait
ret
fwait
mov
jae
jo
(bad)
jg
sahf
shl
jns
dec
in
push
stos
and
clc
(bad)
jp
bound
iret
xchg
and
frstor
ins
xchg
cmp
nop
push
pop
sub
in
jle
fcmovne
add
or
jb
and
ss
stos
add
jns
push
outs
xchg
lea
inc
mov
je
dec
repz
test
push
add
mov
mov
mov
xor
xchg
nop
and
daa
inc
and
dec
fcomip
fs
mov
add
pop
outs
pop
rcl
adc
js
int3
mov
sbb
cmps
sub
push
sub
push
addr16
sub
pshufw
push
mov
ja
mov
dec
stc
stc
sub
pusha
daa
adc
arpl
repz
pop
into
mov
jg
cmp
mov
jo
ds
dec
mov
pop
adc
fnstsw
sbb
int3
add
push
fcmovnb
cmc
in
push
int
pop
pop
test
not
push
test
stc
pop
retf
mov
das
add
hlt
add
scas
xor
xchg
sub
(bad)
mov
jb
scas
scas
dec
das
test
shr
hlt
inc
xor
push
fwait
sub
repz
lea
call
ja
push
fbld
mov
jb
cmp
xchg
out
xor
xor
cmp
sti
in
fs
push
pushf
arpl
out
aam
lods
(bad)
mov
mov
xor
int
or
or
aas
out
inc
mov
cld
das
outs
jge
dec
xchg
scas
xchg
int
aam
push
mov
icebp
aad
or
pop
adc
cmc
mov
pop
stos
pop
sbb
sub
fcom
jle
sub
or
push
popa
mov
adc
js
das
xchg
pop
imul
mov
or
pop
das
pop
dec
push
xchg
xchg
mov
xor
je
bound
sbb
mov
ficom
cli
pop
stc
or
pop
xchg
xchg
dec
lea
movs
xor
xchg
dec
inc
mov
add
push
icebp
sbb
xchg
sbb
mov
stc
mov
adc
in
pop
std
push
ret
(bad)
cmp
and
jp
sub
retf
scas
mov
push
and
jnp
xlat
xchg
cs
inc
jp
inc
lock
sbb
push
stos
or
into
scas
jmp
jbe
jbe
fwait
(bad)
retf
or
add
mov
ficomp
bound
sub
xor
in
fmul
shld
or
in
fwait
jnp
push
iret
sahf
xchg
mov
bound
sar
jb
or
arpl
loop
xchg
arpl
into
shr
sbb
test
fstp
pop
add
fisub
rol
jmp
add
xchg
sbb
xchg
xchg
sbb
(bad)
inc
popa
mov
data16
lods
int
ret
(bad)
add
out
mov
je
cdq
add
sub
mov
jbe
inc
xor
into
dec
push
inc
aaa
add
sub
mov
vmaxsd
out
out
fmul
dec
ret
pop
sub
ins
stos
inc
push
fidiv
dec
adc
movs
aam
cmp
push
sbb
mov
movs
mov
xchg
mov
stos
cmp
cmp
pop
xchg
and
out
pop
jne
test
mov
mov
lds
push
add
mov
pop
add
mov
inc
ins
out
mov
rol
rcl
sub
aaa
imul
adc
mov
sbb
out
aad
fdivr
mov
cmp
inc
rcr
and
sub
push
(bad)
push
aaa
into
fwait
in
and
push
ss
push
dec
dec
xor
cmc
hlt
push
sub
mov
ins
(bad)
adc
pop
push
int
pop
jge
add
jmp
ret
and
int
mov
push
xchg
lock
iret
mov
mov
into
into
sbb
xor
cmp
in
mov
cmp
mov
jp
xchg
pop
xor
sub
into
out
xor
adc
call
cmp
inc
in
sbb
xchg
outs
and
xchg
sbb
into
(bad)
ins
inc
ins
jno
push
sub
or
xchg
nop
sub
xor
(bad)
sub
sub
inc
aam
adc
add
xchg
xchg
loopne
(bad)
mov
add
xchg
not
jns
pop
movs
sub
fimul
pop
xor
mov
pop
daa
dec
mov
push
cwde
inc
test
adc
mov
push
pop
daa
pop
pop
push
lea
mov
pop
xchg
out
ja
(bad)
mov
pop
test
sahf
fnstenv
aad
das
push
(bad)
and
add
iret
or
cmp
and
pop
push
pop
push
sub
test
into
mov
icebp
aam
lds
leave
test
or
push
sbb
jns
shr
or
mov
test
xchg
mov
add
xchg
push
adc
hlt
enter
mov
out
pop
or
dec
cmp
imul
push
mov
jge
mov
sbb
(bad)
repz
jmp
js
jne
dec
jne
bound
ss
das
jle
and
test
cmp
and
(bad)
jmp
adc
add
in
out
cmp
pop
cdq
mov
jmp
add
push
jecxz
mov
stc
add
js
bound
repz
sub
ja
es
mov
ret
mov
mov
mov
xor
mov
xchg
stos
inc
mov
push
sub
ss
push
inc
popf
cdq
sub
adc
loop
out
fist
stos
and
ds
xlat
pop
pop
in
inc
pop
(bad)
xchg
ins
ror
rcr
and
jo
mov
push
imul
test
cwde
cwde
or
inc
enter
push
mov
sahf
lea
and
cs
push
dec
and
aas
leave
pop
inc
stos
cmp
jp
xchg
inc
loop
sbb
jp
sbb
push
imul
nop
movs
clc
mov
popa
das
rcl
dec
xor
jnp
push
rcr
xor
aad
push
mov
ins
pop
lahf
popa
dec
sbb
call
xor
inc
xor
jg
adc
movs
aas
inc
popa
mov
lods
fisubr
ins
xchg
fwait
mov
mov
xor
inc
xchg
lahf
out
and
cmp
pop
mov
jnp
mov
sub
test
mov
fs
sub
retf
or
ds
mov
jecxz
or
pop
push
xchg
jg
dec
int
push
outs
ror
xchg
popf
inc
ss
mov
aaa
jmp
add
jle
dec
icebp
push
cmp
inc
push
nop
xchg
out
test
fdiv
mov
xor
test
jge
xchg
sbb
xor
jmp
and
nop
ins
repz
bound
ins
add
leave
cmp
inc
push
or
mov
sar
bound
je
std
pop
jb
and
xchg
or
rcr
fistp
aas
mov
mov
cmp
mov
mov
shl
mov
mov
xor
data16
inc
sbb
mov
rol
mov
dec
in
js
cmovp
inc
fisub
outs
jbe
add
ja
dec
sub
out
fs
outs
mov
jmp
shr
jb
mov
stos
in
les
not
repz
(bad)
out
lea
(bad)
in
jne
or
int
or
mov
mov
xchg
and
bnd
iret
jmp
adc
cmp
jnp
test
addr16
int
ror
sbb
hlt
xor
push
fxch
out
fsub
jl
imul
mov
push
mov
aad
pand
mov
mov
mov
push
jb
push
or
fbstp
pop
pop
add
jo
cld
fild
add
add
mov
jns
cmps
mov
lods
add
mov
ror
cdq
(bad)
xchg
lea
mov
pop
xchg
rcr
les
les
mov
xchg
push
xchg
or
pop
retf
cli
std
xlat
bound
push
dec
vpcmpgtd
jno
mov
(bad)
mov
dec
aam
(bad)
enter
jl
push
xchg
rcr
movs
lahf
push
outs
retf
mov
adc
cmc
push
cli
leave
xchg
repnz
pop
inc
mov
icebp
ins
xor
test
mov
je
or
add
push
sbb
dec
fld
(bad)
and
add
sub
in
addr16
jmp
jne
lahf
shl
(bad)
mov
jmp
push
push
push
out
neg
cmps
cmps
sahf
inc
je
xchg
jle
pop
cmps
adc
call
out
fld
inc
and
int3
ret
rol
push
xor
sbb
cmp
(bad)
pop
and
sbb
inc
jl
into
por
outs
mov
mov
push
mov
mov
pop
or
cmp
(bad)
jne
mov
or
mov
ret
add
into
loop
xor
jbe
mov
pop
xlat
lods
jno
ret
iret
fstp
(bad)
sti
mov
aas
pop
dec
xchg
jge
or
mov
fiadd
pop
mov
rcl
push
and
cdq
or
(bad)
iret
sbb
rol
cmps
or
xor
pop
mov
pop
inc
fisubr
cmp
imul
push
mov
xchg
push
add
in
cmp
or
mov
mov
mov
cwde
test
push
mov
es
mov
data16
call
out
mov
mov
enter
jecxz
scas
fisttp
cld
adc
jmp
retf
cmp
scas
xchg
mov
arpl
cli
(bad)
push
mov
mov
and
out
xor
add
mov
stos
cdq
js
mov
push
(bad)
dec
sbb
sub
inc
mov
mov
bound
dec
push
cld
jae
out
inc
inc
aas
dec
mov
mov
(bad)
js
out
mov
sti
jns
rol
rcl
pop
push
mov
fdiv
idiv
loope
cs
call
(bad)
ss
mov
lods
add
push
leave
sub
sub
sub
push
pop
or
test
out
dec
push
xchg
or
std
loop
enter
pusha
rcr
pop
jp
xchg
xchg
(bad)
cmps
cmp
ror
lods
pushf
xor
icebp
sbb
sub
inc
ja
jmp
data16
mov
nop
loope
div
ret
stos
repz
call
mov
pop
jp
clc
stos
add
xchg
sub
pop
mov
add
(bad)
rol
inc
retf
xchg
cmps
popf
cmps
xchg
or
int3
mov
hlt
inc
das
in
mov
loopne
pusha
lea
int3
cmp
inc
dec
int3
lea
cmps
dec
pop
dec
cmps
stos
pop
fsub
mov
mov
hlt
cmp
inc
sbb
cmps
repz
fcmovne
mov
loopne
mov
mov
pop
mov
jmp
sar
mov
ja
pop
loopne
std
mov
stos
fwait
ret
lods
ins
pushf
(bad)
das
push
mov
or
push
or
mov
ror
popf
stos
cmc
jp
cmp
and
cmps
mov
mov
idiv
and
cmp
je
xchg
dec
movs
rcr
xor
sub
dec
iret
dec
clc
jmp
jnp
or
sbb
sub
jl
mov
adc
and
leave
cs
push
ins
enter
cmp
stos
jmp
cdq
lods
aaa
mov
push
xchg
adc
movs
loope
pop
dec
clc
mov
cmps
mov
sbb
ror
mov
mov
inc
pop
outs
ja
inc
dec
stc
pushf
adc
clc
loopne
cmc
out
adc
(bad)
retf
xor
sub
daa
add
test
not
and
inc
mov
jbe
sahf
add
into
or
xchg
cli
mov
mov
pop
sbb
les
in
xchg
lods
or
add
js
out
xchg
loopne
xor
push
mov
pusha
fimul
call
add
inc
mov
fisub
out
in
push
fdivr
jle
pop
xor
outs
sub
mov
sti
cmps
int
inc
retf
(bad)
enter
sub
push
push
jmp
cvttps2pi
push
mov
int
in
scas
inc
fwait
mov
in
jmp
push
or
loopne
push
or
sub
pop
xor
(bad)
jmp
inc
sbb
xchg
xor
adc
scas
loope
repnz
les
movs
fistp
pop
fwait
sbb
sti
cmp
or
loopne
mov
mov
add
(bad)
add
pop
nop
xchg
sahf
ja
clc
gs
cwde
inc
loopne
lods
inc
add
into
(bad)
mov
outs
push
test
push
jo
xchg
adc
jae
(bad)
loop
jle
das
dec
dec
add
or
pop
dec
imul
cmp
ror
sti
in
jo
sahf
sbb
xchg
test
shl
(bad)
push
add
movs
and
int
mov
imul
ror
call
mov
jp
mov
ret
jg
mov
adc
imul
in
pop
cli
add
push
xlat
nop
mov
arpl
enter
jg
pop
xor
pushf
movs
in
add
hlt
test
mov
cmc
test
mov
add
jg
sahf
mov
mov
jecxz
jl
xor
ds
ja
mov
aaa
aad
gs
stos
sbb
ss
sbb
int
jnp
push
jp
pop
cmp
rcl
mov
xchg
xchg
enter
dec
push
mov
mov
or
or
je
jb
adc
int3
in
pop
jbe
popa
loopne
mov
pop
dec
scas
mov
jge
add
xlat
lods
fild
dec
adc
jge
dec
jmp
inc
ins
js
cmp
pusha
ret
push
je
pop
mov
arpl
retf
and
pop
mov
pop
punpckhdq
mov
adc
jbe
or
dec
loopne
sbb
clc
or
cmp
loope
xor
cmp
jns
rcr
into
mov
sbb
sbb
dec
les
movq
adc
mov
xchg
(bad)
popa
inc
xor
leave
pop
mov
push
call
or
and
data16
scas
cmp
call
imul
fbstp
inc
mov
ret
dec
fnstenv
ucomiss
aam
inc
imul
xchg
pop
loope
ja
add
mov
mov
jl
push
out
or
push
stos
daa
das
out
pushf
mov
push
cwde
mov
lea
lods
ss
push
dec
cld
pop
pop
fdiv
dec
in
fs
xchg
jge
lahf
fstp
inc
sub
(bad)
dec
pop
sar
sbb
push
adc
or
and
and
fwait
retf
inc
shl
pop
pop
push
mov
pop
mov
mov
dec
int3
mov
mov
int3
addr16
and
fnstcw
adc
mov
or
add
cmp
inc
nop
(bad)
jns
push
addr16
adc
pop
inc
mov
pop
aad
pusha
ss
aam
(bad)
mov
mov
cmp
in
mov
ror
outs
pop
push
in
dec
mov
cwde
pop
out
jl
mov
pushf
and
cmp
and
bound
iret
xor
dec
mov
(bad)
cmp
lods
mov
sub
add
outs
fadd
cli
js
pop
inc
outs
fsub
mov
inc
mov
outs
bound
mov
fcomp
sbb
push
xchg
mov
in
imul
jo
cmp
rcl
mov
and
mov
retf
arpl
fcomi
lods
sbb
lock
shl
inc
ss
in
sbb
(bad)
cli
scas
mov
repz
and
xchg
repz
sbb
inc
dec
pop
loope
xor
lahf
adc
mov
add
xchg
fiadd
sub
shl
and
pop
pushf
imul
pop
cs
mov
jle
xlat
push
mov
push
cdq
std
mov
cmps
ja
mov
sbb
xchg
mov
outs
add
std
js
and
sub
rol
cmp
cwde
fdiv
sub
stos
cmp
cmps
dec
jae
add
inc
mov
mov
mov
mov
or
bound
pop
dec
xor
mov
stos
pop
in
enter
cmp
push
pop
inc
sbb
mov
add
add
test
jg
sub
lods
vpsubq
imul
in
add
add
mov
sub
push
mov
jo
pop
fisttp
inc
pop
mov
ret
push
loopne
loopne
ret
xchg
loop
and
adc
mov
call
dec
jb
mov
mov
mov
push
fstp
ins
push
adc
mov
call
iret
daa
cmp
pushf
push
dec
dec
cli
dec
scas
retf
shr
push
gs
mov
dec
push
sub
adc
shl
cmp
sbb
mov
jge
aad
sti
call
xor
sbb
pop
(bad)
xchg
mov
arpl
fwait
jo
or
push
mov
push
mov
fmul
push
cmp
mov
loope
jmp
jge
pop
sub
dec
and
adc
mov
retf
push
push
jecxz
xor
sbb
sbb
and
or
lods
xor
(bad)
cmp
cwde
je
push
test
and
sbb
aaa
jbe
cmp
pop
pop
jl
push
push
sti
std
clc
aam
inc
out
push
fdivr
out
mov
enter
xor
popf
mov
mov
cmp
mov
xchg
cmp
scas
inc
pop
or
push
dec
push
iret
not
mov
sub
ja
sub
or
call
mov
outs
cwde
ja
imul
inc
mov
mov
(bad)
pop
mov
and
fcomp
xchg
cli
pop
(bad)
fldenv
sbb
stos
xchg
imul
gs
cmp
repz
push
and
push
adc
clc
cmp
sbb
aad
in
repnz
shl
cdq
jle
or
aaa
mov
pop
xchg
int
xlat
adc
jnp
sbb
pop
pop
(bad)
push
jbe
(bad)
or
adc
mov
in
jno
add
imul
in
jnp
adc
lock
sar
cs
sub
push
in
sbb
add
dec
or
fidiv
add
in
dec
popf
cmp
adc
shl
cs
cmp
mov
sub
push
inc
div
or
and
jl
repz
rcr
daa
inc
pop
outs
sbb
adc
adc
inc
out
sti
mov
fld
dec
clc
outs
loop
ja
jge
push
icebp
sub
out
pusha
aam
adc
into
pop
movs
xor
xchg
retf
mov
lahf
sub
xlat
das
cwde
jg
push
adc
enter
inc
adc
test
mov
add
ins
jecxz
clc
inc
push
(bad)
fsub
nop
pop
(bad)
xchg
mov
push
and
(bad)
mov
sbb
sub
outs
or
arpl
loop
add
in
int3
push
add
cdq
aas
xlat
shl
dec
xchg
xlat
lea
stos
mov
sbb
push
call
xchg
xchg
sub
into
pop
into
repz
push
(bad)
mov
pop
dec
call
or
fdivr
jge
data16
cmc
mov
(bad)
ficomp
jp
and
movs
sub
sbb
(bad)
sub
jle
in
test
pop
jecxz
and
out
je
cmp
stc
out
cmp
xchg
sbb
int
or
pop
xor
push
popf
repz
adc
push
push
dec
pop
les
sub
ds
call
ficom
and
sahf
jmp
das
je
sahf
(bad)
in
inc
in
dec
pop
adc
mov
(bad)
fiadd
sub
xchg
sti
nop
outs
and
push
push
push
stos
ret
out
xlat
mov
mov
shl
jbe
add
jecxz
outs
and
and
xor
rcr
aad
xchg
cli
push
pop
rol
sbb
dec
xchg
neg
jb
movs
xor
clc
fadd
stos
pop
push
add
mov
mov
mov
lock
shr
and
jp
fld
imul
mov
int
cmps
add
mov
(bad)
fcom
sbb
nop
add
cld
sti
cmps
sbb
lods
stc
movs
out
std
test
mov
jg
mov
fstp
stos
xchg
into
mov
push
pop
xor
sti
ret
bswap
imul
sbb
mov
and
push
fild
sbb
fsubr
inc
and
loop
inc
mov
xchg
sbb
gs
mov
lds
cmp
sti
pop
aas
jp
pop
lahf
es
inc
jg
ds
adc
stc
jb
xor
jns
in
out
cmps
xor
mov
je
cmps
neg
jmp
out
stos
or
add
cmp
dec
shr
pop
scas
pop
mov
dec
iret
cmp
push
xchg
data16
dec
xchg
xchg
mov
cld
mov
sub
inc
popf
mov
ja
jae
push
mov
add
adc
push
addr16
fxch
fiadd
stc
mov
imul
mov
mov
fwait
lahf
sar
sahf
lds
cmp
adc
mov
mov
movs
sub
(bad)
mov
ret
push
into
xchg
jge
loop
movs
adc
inc
lods
dec
xor
and
das
int
cli
outs
mov
movs
mov
xor
loope
int3
pushf
and
cli
(bad)
(bad)
pop
sub
pop
pop
add
test
popf
iret
mov
sub
adc
mov
add
cwde
imul
std
lds
or
cmp
cli
sub
mov
jmp
shl
jne
shl
push
shl
push
jl
push
jecxz
test
mov
loop
mov
push
mov
(bad)
fbld
jmp
arpl
xchg
sti
add
sbb
cmp
imul
mov
in
jg
jne
inc
in
or
test
sub
das
(bad)
jbe
test
movs
dec
es
inc
cli
xchg
dec
arpl
(bad)
push
popf
mov
cs
mov
dec
(bad)
repnz
push
loop
pop
iret
jmp
xchg
ss
pop
push
cli
lock
sub
xchg
dec
jecxz
mov
in
or
push
jg
add
adc
ret
in
test
jg
into
xchg
in
add
lods
ins
jmp
inc
sub
es
lods
outs
dec
stos
js
out
push
jp
mov
in
mov
sbb
out
addr16
mov
std
aad
jg
jp
hlt
mov
add
dec
movs
adc
xchg
cmc
fmulp
xor
jbe
ja
cmps
push
mov
mov
jbe
xchg
cmp
push
adc
iret
into
pop
jno
xchg
push
xor
sbb
shr
push
add
xchg
xchg
adc
hlt
mov
in
sbb
fnstcw
aam
jg
(bad)
out
and
jl
aam
xchg
int
xor
daa
mov
dec
push
lods
int3
movs
fdivp
js
(bad)
inc
nop
pop
sbb
int
xchg
fs
js
xchg
pop
pop
mov
xchg
push
mov
fld
sti
mov
jb
pop
cmp
(bad)
mov
jge
out
js
in
ja
xor
loope
cmp
xchg
ds
mov
xchg
push
and
ins
mov
lahf
pop
pushf
cli
push
(bad)
stc
xchg
pop
addr16
leave
loope
pusha
ror
pop
lods
stos
call
outs
and
jge
nop
jmp
mov
fcmovu
cmp
ds
pop
shl
cmp
xor
aaa
es
mov
call
dec
call
inc
xchg
jecxz
outs
adc
pop
xor
in
push
cmc
lds
rcr
jge
dec
add
ja
cmp
mov
int
push
inc
icebp
rol
ins
xor
pop
pop
inc
mov
push
int
inc
iret
and
jmp
pop
shr
test
or
aad
and
dec
push
jmp
jecxz
jne
add
fisubr
daa
loop
shl
adc
and
dec
sbb
sub
loope
gs
ss
xor
xchg
outs
jecxz
ficom
inc
dec
mov
sbb
inc
sbb
mov
mov
push
dec
jecxz
xor
inc
xor
cmp
ds
lahf
sub
xor
rol
in
shl
aad
ror
mov
loopne
addr16
mov
mov
xchg
inc
mov
xchg
push
push
inc
sbb
and
(bad)
(bad)
arpl
add
inc
mov
ret
call
mov
xor
jmp
push
test
xchg
iret
je
(bad)
sub
pop
pop
das
pushf
mov
adc
add
bound
push
adc
sub
jno
jp
das
cmp
pop
pushf
dec
push
cmps
stos
sahf
sbb
ins
jmp
outs
pop
stc
sbb
rol
mov
push
adc
xor
loop
inc
mov
es
adc
enter
sub
hlt
je
mov
test
push
leave
jns
std
in
repz
cmps
mov
std
and
data16
mov
lds
inc
aad
call
push
mov
jno
lahf
aas
retf
xchg
aaa
dec
out
pop
call
push
inc
inc
jno
adc
(bad)
mov
push
aaa
outs
xchg
add
adc
idiv
xlat
inc
xor
cdq
js
fisttp
mov
arpl
(bad)
clc
xor
xchg
lock
xor
sub
shl
inc
jp
and
into
lds
(bad)
scas
test
dec
jle
or
sar
outs
xchg
fist
pop
lahf
scas
leave
stc
lds
or
push
dec
mov
and
retf
int3
inc
xor
mov
cmp
in
inc
lods
(bad)
mov
ret
cmp
mov
scas
jbe
adc
adc
mov
xchg
ss
jle
(bad)
lock
retf
xchg
in
jp
(bad)
dec
test
xchg
popa
in
inc
adc
(bad)
clc
mov
or
sub
sbb
mov
out
int
cli
fbld
inc
outs
mov
sbb
dec
mov
lds
add
dec
mov
shr
dec
int
jge
jp
dec
nop
pop
jle
retf
inc
mov
mov
imul
mov
in
push
sti
pop
pop
das
adc
(bad)
jge
push
repnz
call
out
dec
adc
add
ret
inc
call
adc
out
inc
in
pusha
dec
(bad)
in
bound
push
int3
xchg
pop
rep
push
clc
xor
push
popa
jbe
inc
fstp
ins
stc
movs
cmps
jmp
lahf
mov
test
in
jmp
cmovnp
push
mov
xor
jns
idiv
pop
aam
in
dec
sbb
sbb
lock
and
pop
leave
xchg
or
push
lds
iret
outs
pop
out
cmp
pop
sub
lods
ret
jmp
jp
jl
ins
cmps
mov
cwde
stos
inc
mov
mov
jmp
add
out
mov
mov
adc
and
push
lods
inc
fmul
xchg
mov
lods
aaa
das
mov
sub
mov
scas
popf
sbb
push
fsubr
hlt
inc
xchg
cmp
mov
popf
inc
dec
push
mov
xor
(bad)
gs
(bad)
ror
rol
sub
pop
fdiv
pop
or
xor
clc
xor
add
cdq
in
xchg
add
adc
jno
mov
js
sub
xlat
push
xor
add
pop
push
cmp
sub
lods
pop
cwde
mov
cmp
or
cmp
inc
ja
inc
(bad)
popf
out
push
fcomp
cdq
scas
sti
jmp
int3
fwait
sbb
xchg
test
sbb
imul
mov
push
cmp
cmp
adc
out
push
ins
outs
push
jns
shr
xor
inc
icebp
pop
jmp
mov
fld
sub
push
or
movs
addr16
pop
movs
sahf
xor
addr16
dec
nop
jg
inc
jge
mov
sub
adc
js
aam
push
retf
retf
and
jp
adc
mov
(bad)
adc
jmp
not
leave
in
xor
scas
out
data16
push
jae
in
add
test
jno
add
lea
lods
mov
adc
mov
fnsave
cmp
in
rcr
sub
ret
jno
mov
hlt
movs
lods
inc
cmp
in
inc
or
push
cmps
jl
inc
mov
iret
cmc
movs
mul
pop
lods
pop
stos
repnz
popf
or
jne
mov
jge
dec
into
call
pop
inc
pop
mov
in
jmp
jge
adc
hlt
(bad)
jle
and
shl
mov
iret
(bad)
cmp
mov
xchg
pop
jno
pop
aaa
(bad)
stos
cld
sub
jmp
movs
shr
cdq
sub
inc
mov
push
jmp
mov
adc
xchg
popa
outs
or
out
mov
add
addr16
jp
push
out
mov
retf
adc
lds
jns
mov
dec
cmp
and
test
call
rcr
pushf
sub
cmps
adc
stos
inc
mov
mov
sub
xchg
sbb
dec
cmps
mov
inc
ret
sbb
and
in
inc
test
sar
pop
cmp
cmp
sar
lods
std
or
(bad)
div
cmc
inc
jne
aas
xchg
imul
leave
sub
mov
xchg
pop
ror
and
sbb
mov
cmc
jb
mov
lahf
pop
mov
inc
idiv
xor
and
fld
mov
pop
sahf
mov
xchg
leave
jp
aaa
dec
cmp
fimul
fadd
or
jno
pushf
cs
sub
ss
cdq
ins
std
push
adc
inc
jo
outs
xor
dec
xor
ins
int
adc
mov
jno
jae
or
jge
xchg
addr16
stos
xor
adc
inc
mov
xor
cmps
sub
sbb
test
mov
sub
outs
dec
xlat
inc
push
outs
and
fisub
iret
(bad)
sbb
(bad)
and
icebp
mov
mov
sbb
out
cs
mov
ret
inc
mov
out
mov
movlps
movs
mov
popa
mov
in
mov
mov
dec
adc
aam
js
dec
test
popf
rep
call
jle
(bad)
loope
sbb
and
pop
outs
push
sbb
xchg
aas
push
clc
or
ins
test
fiadd
dec
or
inc
repz
and
mov
or
fadd
sbb
sti
add
mov
jb
ror
scas
shl
stos
ds
loopne
push
sti
pop
dec
jg
inc
popa
adc
sbb
sbb
xchg
aad
pop
shr
push
adc
jb
ins
into
mov
add
add
cmp
rcl
push
stos
jnp
out
js
adc
lahf
push
lods
add
(bad)
rol
xchg
mul
shl
pusha
fist
and
inc
pop
and
mov
fdiv
mov
dec
or
mov
xchg
dec
push
inc
pop
and
imul
pop
and
jb
and
rcl
imul
ds
ds
xor
xchg
push
lock
test
retf
out
rol
call
add
push
movs
jecxz
ins
daa
ret
out
sahf
push
pop
mov
sub
and
xchg
jl
sub
aas
xchg
jmp
(bad)
rol
push
dec
cmp
enter
pop
sbb
int3
mov
sub
jns
jecxz
(bad)
and
push
dec
in
or
inc
xchg
mov
mov
jae
sti
sar
addr16
mov
inc
mov
push
ret
mov
psraw
sub
call
cli
xstore-rng
cmps
inc
pop
(bad)
cli
loop
jnp
jbe
jmp
cld
ret
jle
test
sahf
inc
or
push
push
xchg
inc
cmc
or
adc
dec
rol
int3
xchg
push
push
push
nop
outs
ja
gs
mov
lea
movs
icebp
push
xlat
pop
jle
push
not
cmp
xchg
sbb
out
and
int
mul
jns
out
movs
scas
fiadd
push
in
push
and
enter
ins
jo
test
xchg
jns
xchg
mov
into
jle
ja
bound
(bad)
xor
cmps
mov
in
xor
into
mov
add
push
push
xchg
into
aaa
jg
push
sub
lock
xchg
cmc
mov
push
sbb
mov
gs
rol
iret
mov
daa
outs
cmp
pop
push
fisttp
mov
stos
push
dec
out
test
push
push
idiv
sub
test
pop
sar
sti
les
fnstenv
sub
mov
inc
inc
repnz
repz
mov
pop
fmul
sub
(bad)
xchg
dec
add
jae
xor
jge
push
pusha
xor
sti
(bad)
(bad)
fmul
cmp
add
sbb
retf
mov
nop
xor
pop
test
cld
adc
mov
repz
sar
push
ins
movs
mov
pop
pop
push
lahf
icebp
xchg
ins
jmp
or
(bad)
cs
movs
mov
test
ins
ret
cmp
fild
and
imul
mov
mov
jl
in
add
push
test
enter
pop
add
cs
popf
shl
or
lods
shl
jb
pop
mov
(bad)
cld
xchg
inc
mov
pop
imul
mov
jb
or
jae
std
ret
adc
push
inc
popf
adc
lea
push
mov
mov
cs
jp
aas
sahf
js
(bad)
xor
mov
jle
les
sub
mov
ret
mov
dec
sbb
mov
sbb
add
mov
jp
xor
inc
add
jne
push
rcl
loope
mov
sub
mov
sti
jno
xchg
push
lock
jno
jle
or
aas
out
cs
test
stos
mov
mov
pop
loope
rcl
mov
xchg
adc
xchg
add
inc
and
mov
addr16
mov
or
push
adc
cmps
cwde
and
push
scas
fld
push
ss
sub
das
and
inc
adc
jbe
call
sub
outs
dec
cmp
ret
clc
mov
bound
ret
call
cwde
loop
es
repz
jg
pop
dec
jcxz
cmp
(bad)
sbb
dec
inc
cmp
mov
adc
cmp
adc
leave
jg
sbb
aad
xchg
mov
test
sub
nop
push
popa
mov
out
push
inc
mov
call
arpl
push
or
dec
(bad)
loope
inc
pop
mov
push
push
in
mov
ficomp
xor
dec
lock
or
jecxz
not
or
add
push
stc
dec
rcl
inc
cld
mov
jmp
mov
fdiv
pop
lods
call
aas
(bad)
xlat
pop
inc
lds
xchg
cmp
enter
or
cmp
into
retf
push
in
xchg
jns
daa
adc
fmul
and
xor
jo
push
gs
leave
inc
popf
lods
movs
sbb
(bad)
(bad)
push
sbb
cmp
ret
lods
imul
pop
cld
jmp
loop
add
and
mov
and
pop
xchg
mov
adc
dec
sbb
dec
cmps
push
mov
pop
mov
add
outs
add
mov
popf
mov
loopne
arpl
sub
in
fld
xor
(bad)
fsub
sub
mov
push
test
lahf
push
push
add
or
inc
pop
jle
fmul
call
inc
inc
rcl
rcl
icebp
into
push
stos
jb
imul
mov
sub
dec
fld
ja
jmp
shl
pop
idiv
mov
popf
shl
std
mov
xchg
loop
fwait
lds
jmp
nop
pop
fsubrp
pop
bound
repnz
int3
jp
mov
enter
(bad)
and
iret
in
dec
jne
xchg
lahf
sub
mov
shr
(bad)
in
pop
ins
aaa
(bad)
nop
addr16
sub
loope
pop
leave
add
fimul
scas
jg
mov
jge
out
mov
sbb
mov
cmp
jmp
(bad)
push
aad
mov
mov
retf
data16
lods
lods
repnz
mov
xor
lods
mov
out
push
mov
cmp
rcr
mov
fmul
rcr
jb
mov
jnp
popf
(bad)
stos
inc
push
ins
pop
mov
mov
mov
sbb
cs
or
cmc
sbb
movs
inc
pushf
out
and
(bad)
lock
mov
test
inc
push
lods
repz
and
ins
pushf
data16
pop
jae
int
sbb
add
mov
xchg
(bad)
sub
cmps
mov
cld
call
retf
mov
cdq
and
in
cmp
ja
aas
mov
mov
pop
xchg
or
movs
sub
(bad)
pusha
shl
fs
dec
jo
cld
sub
sub
call
in
mov
shl
ins
and
push
mov
mov
int
add
mov
pop
jne
iret
jge
fld
xchg
adc
(bad)
push
pop
xchg
cmc
sub
adc
sub
ja
jmp
or
stc
rol
mov
xchg
mov
mov
lock
mov
mov
jmp
adc
imul
sbb
cmp
inc
ds
into
les
loop
fcmove
mov
stos
or
jecxz
movs
xchg
ret
lods
push
std
pushf
std
push
iret
xchg
dec
out
dec
sar
sub
inc
out
jmp
mov
loopne
ja
push
jo
inc
out
fadd
mov
movs
push
out
inc
and
(bad)
mov
pop
mov
sar
ja
add
adc
jne
mov
cmp
int3
mov
mov
adc
outs
fs
inc
mov
jl
in
add
or
add
xor
lock
add
xchg
and
in
loop
pop
mov
cmps
fild
mov
push
(bad)
loope
sbb
in
cwde
jno
xlat
scas
jp
inc
rcl
push
jnp
cld
invd
out
fmul
outs
mov
ror
es
xor
popf
cmp
xchg
xchg
and
mov
push
push
dec
inc
fidiv
sahf
inc
push
mov
inc
rcr
pop
fisttp
retf
pop
dec
rcr
ret
je
sbb
lea
and
xchg
icebp
pop
inc
jge
hlt
popf
mov
mov
jne
xchg
and
popf
sbb
pop
xor
(bad)
pop
xchg
std
xchg
cmp
call
push
fs
jnp
std
or
mov
and
xchg
inc
ror
fild
sub
xor
add
jmp
mov
cld
in
mov
cmp
sub
jmp
sub
mov
imul
ja
enter
leave
adc
push
pop
into
adc
and
mov
sbb
push
test
pop
cs
inc
mov
test
jns
jns
lahf
cli
nop
sub
pop
mov
ror
cmp
jmp
pop
lahf
mov
bound
mov
pop
retf
push
dec
fild
xchg
xchg
sahf
sbb
loopne
scas
jle
jmp
out
arpl
jne
mov
inc
pop
add
push
mov
bnd
pop
sahf
sub
push
add
xchg
iret
sbb
je
loopne
jp
lds
cld
xor
(bad)
test
mov
int3
xchg
sub
inc
xchg
ja
sub
sbb
mov
inc
dec
std
push
mov
into
or
mov
mov
sbb
jne
movs
sbb
sbb
push
and
aas
xchg
adc
add
xlat
icebp
outs
bound
pop
imul
aam
cld
sbb
xchg
test
pop
(bad)
les
stos
ja
call
xor
lds
and
dec
adc
mov
cmp
(bad)
mov
sub
scas
dec
push
cld
and
pop
xchg
push
test
cmp
mov
sbb
or
ret
les
cmp
pop
sub
push
jne
inc
or
shl
mov
add
clc
in
cmp
out
mov
xchg
mov
or
in
jmp
or
rol
ja
aad
mov
shr
sbb
dec
push
repnz
lods
inc
dec
js
push
cmp
mov
adc
popa
mov
cmc
xor
int
add
push
mov
cdq
add
mov
ret
cmp
stc
or
cli
pop
outs
sbb
aad
jne
stos
and
dec
imul
push
outs
jp
test
push
test
pop
call
clc
inc
frstor
(bad)
cmp
pop
ret
pop
fst
in
imul
pop
pop
mov
pop
mov
(bad)
cmp
or
pop
movs
mov
and
fstp
bound
or
push
loope
pusha
sub
loope
dec
sbb
dec
test
pusha
sbb
repz
scas
mov
push
in
or
cmps
mov
fnsave
adc
dec
mov
fld
cwde
and
loop
jle
repnz
cwde
push
(bad)
pop
xchg
mov
fcmovbe
lock
imul
or
not
xor
into
fld
js
fwait
or
enter
push
inc
jmp
(bad)
mov
in
call
or
fisub
sbb
sbb
xor
jge
imul
lock
rcl
fisttp
imul
bound
jbe
in
mov
jmp
aad
(bad)
jnp
(bad)
fdiv
inc
inc
ins
cdq
jle
arpl
in
movhlps
or
out
and
xor
les
xchg
mov
mov
and
(bad)
mov
cmps
jl
in
jno
xchg
xchg
psraw
xchg
mov
ficom
adc
mov
push
mov
inc
mov
les
and
mov
retf
in
cmp
adc
lock
cld
adc
aas
stc
jle
ins
scas
sub
test
jl
int
jb
inc
cs
test
or
popf
xchg
sahf
mov
xchg
es
mov
xor
gs
pop
mov
push
arpl
sar
outs
xchg
not
mov
mov
xor
lds
xor
push
test
call
lahf
ror
and
sbb
je
test
aas
add
add
inc
std
and
mov
xchg
pushf
outs
arpl
dec
cld
sbb
(bad)
stc
rcl
jb
dec
pusha
mov
je
pushf
dec
or
ins
ins
inc
jno
rcr
mov
jmp
pop
lds
arpl
pop
outs
mov
inc
popa
xorps
inc
cmps
cdq
mov
or
push
aad
mov
cmps
(bad)
mov
push
sar
push
inc
in
mov
dec
adc
and
add
add
and
(bad)
aam
hlt
nop
cmp
sub
inc
pop
adc
mov
add
das
mov
mov
push
hlt
std
add
data16
dec
pop
cs
dec
call
push
mov
add
xchg
cs
retf
adc
shr
cld
sub
shr
jbe
cwde
xchg
scas
jb
add
cmc
pusha
xchg
or
gs
or
cli
jne
fisttp
pop
push
(bad)
xchg
pop
in
mov
lods
mov
cmp
(bad)
inc
retf
lahf
aaa
push
jg
cs
mov
in
or
les
and
xchg
sbb
dec
pusha
xor
arpl
adc
jnp
iret
stc
loope
adc
jmp
pop
mov
push
xlat
outs
repnz
add
sar
sbb
ja
movs
mov
out
(bad)
push
es
jb
dec
cli
adc
gs
pop
lods
push
adc
ins
ret
sub
stos
mov
stos
mov
popa
xor
jle
fnstsw
ret
(bad)
pop
xor
mov
inc
mov
fisubr
fcomip
scas
lahf
xor
ins
aaa
ja
pop
xchg
add
daa
add
aas
adc
pushf
xor
or
call
ror
pushf
adc
mov
cdq
push
lahf
adc
mov
dec
add
fsin
cs
jmp
push
cs
pushf
jle
scas
jns
stc
or
neg
or
in
mov
jo
xchg
enter
adc
sar
inc
push
cmp
sbb
cmps
call
lahf
mov
jb
mov
sbb
dec
fwait
adc
inc
(bad)
jb
jge
and
fucomip
or
stos
jmp
cmp
add
sub
dec
imul
adc
(bad)
(bad)
nop
inc
out
jnp
shl
xor
pushf
adc
stos
xor
movs
fild
sti
lock
in
add
lea
add
push
fldcw
jb
lahf
out
mov
mov
or
sbb
not
xor
jmp
dec
jge
jp
lds
and
adc
rcl
mov
cmps
sbb
sub
movs
fild
ret
jg
xchg
pop
ret
xor
shl
adc
test
loopne
ftst
xchg
add
loop
mov
je
inc
ficomp
test
pusha
inc
cmp
out
mov
cs
loope
outs
mov
and
fbstp
sub
mov
cmp
cdq
jg
push
ds
scas
stc
cmps
mov
mov
push
jg
xchg
adc
je
jo
pop
push
and
ja
pop
bound
mov
push
cli
je
scas
ins
pop
sub
int
dec
inc
pop
pop
inc
push
outs
inc
push
inc
adc
xchg
mov
add
test
cmp
push
es
je
mov
outs
pop
jbe
in
addr16
mov
aaa
or
pop
mov
pop
cmc
dec
fcomip
or
mov
fistp
out
add
test
in
xchg
jmp
pop
adc
jne
pop
jo
cmp
or
loopne
shl
movs
sub
imul
and
aas
out
push
dec
xor
adc
add
out
out
xor
xchg
mov
inc
iret
pop
jmp
inc
dec
div
mov
aaa
out
cmp
mov
add
and
push
retf
adc
mov
push
leave
adc
int3
xor
xchg
clc
cmc
mov
jb
in
cld
daa
pop
shl
mov
cmp
jge
ins
test
fdivr
fsubr
aaa
sub
dec
or
fsubr
add
xor
or
or
hlt
mov
pusha
neg
fs
mov
pop
cwde
cmp
lea
fdivr
xor
test
push
xchg
hlt
lea
lods
lahf
nop
push
mov
dec
pop
xor
jnp
neg
(bad)
sbb
mov
fwait
push
enter
xor
add
xchg
(bad)
sbb
fisubr
ja
add
int3
jmp
add
rcr
nop
mov
dec
and
popa
mov
mov
int
stos
dec
ins
xchg
popf
and
call
sti
sub
das
dec
jecxz
mov
in
or
punpcklwd
mov
out
jmp
popf
dec
add
cmp
mov
das
in
cs
pop
lods
mov
sbb
les
xchg
pop
sub
pop
outs
test
pop
bound
push
pop
das
out
sub
in
jg
mov
xor
xor
inc
ja
pop
(bad)
cli
adc
iret
mov
lock
(bad)
or
int
dec
movs
pop
mov
les
jg
pop
ins
mov
dec
mov
sti
lea
outs
adc
push
rcl
jno
fld
jb
mov
pop
retf
push
fidivr
(bad)
push
jne
daa
sbb
and
cmp
test
xchg
sbb
cli
cmps
aas
and
mov
out
add
jae
sbb
jmp
cdq
js
enter
cld
fs
mov
sbb
jnp
dec
loopne
(bad)
mul
stc
mov
or
adc
push
cwde
sahf
jge
cmp
daa
ja
xor
sub
pop
out
jmp
ficom
int
xchg
push
cdq
sbb
scas
mov
pop
cld
mov
cmp
adc
lods
or
push
pop
push
and
mov
mov
xor
ret
adc
neg
pop
or
in
jne
das
mov
dec
arpl
mov
fs
or
add
and
repnz
push
mov
cmp
std
push
pop
dec
fmul
test
fbstp
push
rol
nop
dec
push
pop
(bad)
iret
adc
mov
pminub
jae
in
lea
ja
push
or
and
sbb
mov
enter
mov
jnp
icebp
pop
jge
add
movs
aaa
mov
push
push
mov
pop
mov
push
daa
(bad)
hlt
sub
sti
jg
pop
lods
xor
test
ja
inc
jmp
ret
xchg
and
sar
xor
rcl
stos
add
pusha
std
mov
xchg
into
sub
test
je
cmps
dec
mov
dec
aaa
pop
push
sar
dec
or
add
push
sar
imul
sub
stc
mov
mov
sbb
xor
shr
add
imul
xor
jb
push
sbb
xor
jbe
icebp
mov
inc
fild
test
popf
cmc
fs
or
(bad)
or
leave
jb
jecxz
and
or
aam
inc
scas
xchg
into
call
int3
in
sar
and
imul
xor
(bad)
inc
call
or
xchg
sbb
jns
mov
dec
and
cmovb
test
repnz
pop
retf
adc
int
lock
lods
or
mov
mov
adc
mov
or
shl
mov
mov
or
ins
dec
adc
outs
or
test
ins
xor
jl
sbb
sbb
repz
mov
jne
fldenv
fst
out
aam
out
add
pop
adc
xor
and
ja
mov
xor
cld
(bad)
xchg
xor
leave
mov
sub
sbb
sbb
push
and
add
dec
(bad)
jmp
sbb
xor
int3
add
cdq
clc
cmps
jp
push
or
cmp
push
icebp
cmps
adc
aam
inc
dec
xchg
adc
scas
call
dec
cmps
rol
dec
out
add
mov
inc
mov
pop
push
cmp
mov
push
push
test
repz
scas
loop
data16
jge
stos
sub
(bad)
mov
xchg
enter
popa
call
inc
cmp
ds
into
daa
psraw
pop
add
pop
rcl
sub
xchg
sub
mov
test
scas
ins
loopne
add
(bad)
pop
push
sub
stos
push
dec
cs
movsx
popf
stos
push
jno
lods
xchg
push
xchg
jle
(bad)
jecxz
stc
fimul
stc
clc
mov
sbb
les
enter
out
mov
push
lds
(bad)
div
sub
es
cmp
jle
out
and
adc
mov
scas
sub
inc
pop
repnz
pop
xor
jp
xchg
or
fwait
pusha
jecxz
xor
gs
jle
dec
cld
jg
xor
add
push
(bad)
push
inc
rcr
push
mov
mov
dec
scas
(bad)
loop
mov
or
pop
aam
out
lods
mov
push
test
inc
jmp
xor
push
enter
jbe
and
fcom
cmp
pop
popa
mov
pop
(bad)
aad
push
test
stos
pop
jb
pop
jae
enter
hlt
push
cmp
or
xchg
push
add
sbb
add
xor
mov
sub
mov
jnp
xor
(bad)
out
sub
sbb
jl
in
cmp
xchg
or
cdq
xchg
push
(bad)
jge
cmps
out
clc
jl
or
pop
stc
in
adc
jb
call
sub
push
leave
cmp
or
mov
fst
lea
outs
mov
outs
test
xor
push
dec
adc
scas
test
sub
loopne
cld
jp
push
dec
call
aam
cs
inc
in
mov
mov
xchg
cld
mov
jns
and
add
sbb
out
icebp
stos
mov
std
jb
pop
and
fs
adc
ins
adc
scas
es
inc
mov
jne
adc
imul
sbb
mov
fs
clc
in
push
dec
or
mov
fmul
popa
fs
in
hlt
sbb
or
fwait
retf
inc
lods
jmp
xchg
retf
xor
xor
repnz
int
cmc
fiadd
xchg
mov
dec
int
push
daa
sub
repnz
shl
test
loope
jmp
xor
or
sbb
xchg
imul
mov
jnp
sub
cmp
mov
sbb
or
and
(bad)
cmp
clc
or
mov
fnsave
and
jae
adc
push
imul
xchg
mov
add
add
int3
lds
mov
sub
push
fsub
xor
test
or
inc
int3
cmps
mov
data16
jg
dec
sub
out
scas
adc
xor
sub
and
test
push
xchg
xchg
sub
ins
stc
dec
and
imul
icebp
add
fld
icebp
test
jmp
out
sub
(bad)
pop
fbstp
aam
push
jno
mov
shl
loope
in
dec
(bad)
mov
and
dec
bnd
pop
pop
mov
sbb
xor
xchg
cwde
mov
das
sbb
movs
cmp
out
loopne
mov
outs
lock
sub
fld
fdiv
add
mov
lds
mov
ret
dec
push
repnz
dec
jl
xor
(bad)
pop
sbb
ret
shl
mov
adc
mov
mov
lahf
aas
(bad)
sub
mov
mov
addr16
inc
or
scas
cmc
inc
sub
adc
inc
sar
adc
adc
ret
xchg
(bad)
jmp
jge
add
movs
push
and
test
mov
out
out
ror
stos
test
ror
mov
popa
ins
pop
dec
add
outs
inc
pusha
push
jno
iret
inc
cmp
movs
inc
mov
inc
sti
xchg
(bad)
fs
dec
movs
(bad)
ins
fs
leave
dec
sub
add
mov
ret
addr16
xchg
xor
jbe
sub
mov
retf
cmps
and
dec
shr
cmps
jmp
xor
push
popa
and
pop
fist
mov
es
push
in
adc
inc
std
(bad)
inc
push
and
(bad)
sub
sbb
adc
loopne
push
mov
popa
pop
sub
push
dec
loope
rcr
imul
xchg
cmp
and
mov
sub
mov
outs
or
pop
mov
(bad)
cmp
add
push
jns
data16
add
mov
pop
out
pop
loope
cmc
adc
mov
data16
jo
and
(bad)
loopne
js
adc
cmp
fist
push
jo
mov
mov
es
arpl
test
scas
sub
jge
mov
xchg
cmps
out
push
dec
mov
jmp
dec
sbb
stc
into
or
daa
mov
fcomp
jp
or
mov
in
and
cld
xchg
jo
(bad)
adc
dec
xchg
in
cmps
jnp
(bad)
cmp
inc
add
retf
icebp
test
push
ror
or
or
jecxz
rcl
pop
iret
imul
in
into
mov
dec
sbb
mov
mov
cmp
or
lea
fwait
(bad)
jb
pop
aas
lods
popa
sub
outs
mov
mov
cli
adc
sahf
cmp
(bad)
jl
inc
xchg
sbb
add
push
(bad)
jge
mov
(bad)
jb
mov
and
and
(bad)
mov
stos
inc
aas
xchg
adc
(bad)
outs
test
pop
fadd
cmps
lea
pop
mov
popf
xchg
xor
imul
mov
adc
inc
dec
push
out
push
push
and
dec
(bad)
xor
or
dec
(bad)
mov
cmc
cmp
int3
cmp
push
xchg
scas
or
fst
push
cmps
ret
out
pop
push
jg
mov
test
cmp
push
push
jge
in
aaa
adc
push
les
outs
mov
mov
sub
mov
mov
xor
dec
jae
addr16
mov
aad
xchg
jns
test
adc
jno
and
ss
out
sbb
push
shl
call
out
cmps
ffree
dec
iret
ror
jmp
jns
fbld
fld
mov
jbe
int
mov
jo
ss
rol
dec
outs
das
jmp
jb
push
in
push
ret
push
add
jne
cli
into
push
nop
int3
xor
lods
cs
pop
test
ret
shr
fs
retf
out
add
jg
pop
test
(bad)
pop
push
ficomp
stc
cmp
aaa
movs
sahf
shl
mov
sub
and
sub
inc
fwait
dec
popa
xchg
cmp
movs
xchg
and
lea
test
sti
idiv
lods
mov
sbb
in
out
sub
fiadd
jmp
outs
pop
push
fwait
or
inc
lahf
jg
xor
lea
out
ja
cwde
cmp
leave
je
add
inc
push
out
ret
jne
inc
add
xor
hlt
dec
cmc
inc
adc
fwait
xchg
rcr
stos
mov
xor
dec
sti
cs
in
(bad)
and
push
movs
jbe
int
pop
mov
xor
enter
jmp
add
pushf
hlt
sahf
outs
arpl
js
int3
push
push
(bad)
imul
adc
dec
inc
mov
push
pusha
call
in
call
inc
loop
jnp
cmp
cld
(bad)
mov
or
ret
pusha
sub
adc
cli
xchg
inc
jecxz
ss
movs
div
and
or
shl
enter
adc
mov
retf
sbb
jno
pop
cmp
xchg
daa
arpl
es
mov
fisub
push
or
xor
add
lds
sar
mov
sti
add
mov
push
mov
lock
add
jb
cmp
fs
dec
jno
lods
inc
imul
xor
pop
sub
dec
xchg
mov
hlt
sar
push
aam
mov
(bad)
rcr
lea
mov
dec
fimul
ds
fwait
inc
or
xchg
pop
(bad)
aad
popf
jne
adc
retf
loopne
loop
and
adc
dec
push
inc
cmp
mov
inc
sub
xchg
pop
sub
pop
pop
ret
in
mov
sti
movs
scas
add
jecxz
and
fsub
and
aaa
sbb
repnz
enter
sbb
stc
xchg
mov
xor
cdq
or
in
int3
psubusb
jl
pop
in
out
loop
pop
lods
(bad)
fcomp
fldln2
movs
fnsave
xor
jecxz
dec
jge
pop
sub
jns
mov
mov
jnp
es
mov
lods
jge
dec
shr
inc
jp
cmp
cmps
add
retf
(bad)
test
leave
sub
sbb
data16
jo
mov
or
push
ja
pushf
or
push
xchg
aaa
mov
test
in
mov
icebp
sbb
pop
sbb
fst
inc
sbb
mov
xchg
add
shr
dec
adc
fnstsw
inc
push
and
movs
and
repnz
mov
xor
and
mov
out
dec
repz
sar
cmps
push
retf
sub
(bad)
loope
sbb
cmp
lds
test
jae
repz
leave
es
sti
mov
or
mov
inc
and
sub
dec
loop
jns
(bad)
mov
inc
mov
pop
fistp
sbb
push
xchg
cmp
inc
adc
or
das
and
sbb
aas
mov
jg
add
or
call
iret
sahf
fwait
in
xchg
and
movs
and
adc
push
add
inc
cwde
test
fild
ins
inc
jb
loopne
cmps
pop
dec
inc
jge
sub
loope
int
std
clc
or
adc
gs
les
(bad)
repnz
out
and
fcmovnu
mov
jbe
inc
popa
(bad)
lock
lods
movs
pop
sub
cmp
fbstp
mov
pop
mov
stc
jo
aas
sub
dec
add
ins
iret
pop
mov
push
pop
addr16
push
add
xor
jl
ror
jg
pushf
cmp
cmc
adc
mov
mov
lock
leave
int
cmps
fist
or
les
pop
mov
jle
loope
mov
add
dec
sub
fsubr
mov
inc
or
in
std
js
popf
jb
test
cli
outs
ret
ret
push
cmp
popf
jg
std
movs
dec
fsubr
push
popa
lods
rcr
(bad)
loopne
xchg
lds
push
mov
push
dec
jmp
imul
ins
scas
fsub
and
jmp
cmp
sub
sbb
call
jg
fcom
sbb
pop
outs
setb
sbb
leave
je
adc
cli
nop
mov
dec
test
or
dec
inc
cmp
js
add
mov
fwait
(bad)
stos
shl
jns
dec
(bad)
fcmovnbe
xor
mov
xor
cmp
adc
pop
(bad)
js
xchg
retf
sbb
add
jle
pop
cmp
fucom
pusha
sub
push
xchg
aam
mov
mov
xchg
mov
cmps
lock
jo
lds
out
mov
xchg
rol
in
ret
mov
adc
xor
cmps
sahf
ss
inc
and
and
add
js
call
jmp
push
or
jb
push
enter
and
les
icebp
enter
iret
mov
mov
or
std
push
push
jne
dec
icebp
cmc
xchg
cwde
ficom
xchg
inc
fs
inc
sub
xor
push
mov
jne
gs
jne
dec
aad
push
push
xlat
and
rcl
adc
inc
or
inc
mov
test
in
xor
fstp
pop
push
ins
xor
div
lods
repnz
adc
(bad)
(bad)
retf
add
aaa
pop
movs
xchg
out
jg
push
add
in
mov
inc
shr
aam
mov
mov
inc
fcom
mov
dec
sbb
or
mov
sbb
and
out
popf
xchg
stc
add
popa
push
pop
xchg
mov
ror
pusha
pop
xor
cmps
and
outs
cmp
repz
(bad)
xor
cmp
push
popa
sub
fsub
push
cmp
push
stos
adc
sbb
xchg
xor
add
iret
or
leave
shl
mov
nop
gs
das
fwait
aam
retf
lock
ret
mov
fs
in
mov
cmps
jecxz
std
jecxz
stos
and
jne
push
scas
dec
mov
nop
sub
jl
adc
addr16
cmp
sbb
add
test
cmp
loope
aam
in
lds
dec
icebp
or
ror
inc
xor
cmp
pop
and
enter
lods
aad
inc
xor
movs
pop
dec
inc
fistp
mov
jmp
cmps
cmp
and
imul
push
mov
std
lods
jo
jp
push
xchg
mov
pop
test
jmp
add
jmp
adc
leave
xor
mov
hlt
fbstp
daa
pop
jbe
repnz
cli
inc
jnp
jmp
mov
mov
hlt
je
ja
jmp
(bad)
push
arpl
outs
pop
aad
ss
pop
rol
mov
sub
arpl
or
ret
sbb
add
fidivr
cwde
push
cli
adc
xchg
or
cmp
fwait
add
jp
sbb
adc
jmp
stc
(bad)
mov
out
sbb
lds
mov
enter
inc
cmps
(bad)
dec
loop
mov
and
mov
mov
cli
jbe
inc
outs
xor
and
cmps
xor
mov
inc
jo
div
ds
pop
popa
xlat
stos
pusha
dec
cmp
(bad)
sahf
push
dec
fwait
mov
scas
jae
jnp
pop
xlat
sbb
shl
mov
sbb
pushf
lock
stos
jmp
lods
xor
std
xchg
sbb
cmp
dec
js
ret
or
test
int
dec
lods
cmp
mov
lock
(bad)
retf
sbb
call
imul
xchg
dec
mov
inc
pop
pop
lea
out
call
pop
sub
or
repnz
fldcw
and
cmps
retf
xor
repnz
(bad)
int3
add
ss
addr16
das
into
dec
pop
jno
mov
sub
xor
jp
and
pushf
dec
push
add
cmp
mov
mov
push
mov
jae
nop
aam
xor
dec
arpl
sbb
sub
mov
icebp
ror
inc
cmp
jmp
pop
bndldx
add
inc
test
cli
mov
mov
sub
push
test
pop
stos
mov
xchg
pop
imul
dec
add
fdecstp
sbb
arpl
sub
sub
nop
mul
xor
mov
cli
or
out
jp
mov
push
pop
popf
sahf
pop
sbb
sub
xchg
push
cmp
mov
or
call
sub
pop
fst
jnp
lock
fimul
mov
jmp
(bad)
jo
sub
es
mov
addr16
jg
arpl
add
xor
pop
mov
test
pop
and
adc
aas
mov
daa
dec
mov
dec
je
add
repz
(bad)
mov
lods
inc
fisubr
fwait
ss
(bad)
sbb
cld
or
sbb
push
pop
xchg
or
in
pop
cmps
or
dec
pop
dec
cli
int3
movs
mov
and
xor
in
sbb
repnz
out
pop
xchg
imul
div
push
jle
aad
lods
fld
add
in
loopne
lods
data16
and
nop
int
btc
ds
sbb
cld
dec
data16
(bad)
jl
scas
gs
mov
xor
jbe
inc
scas
imul
iret
jne
es
call
bound
jnp
mov
push
aaa
movs
xchg
xchg
repnz
(bad)
cld
shl
or
pop
popf
xor
jecxz
jmp
xchg
xchg
dec
jno
push
mov
sahf
(bad)
push
or
bound
xchg
aam
cmp
adc
(bad)
jb
mov
push
fucomi
cmc
fdivr
jl
sub
inc
imul
pop
pop
hlt
pushf
pcmpgtw
pop
adc
leave
mov
(bad)
in
in
xchg
pand
and
mov
sbb
sub
push
inc
jnp
out
rcr
adc
scas
iret
or
dec
inc
fnstsw
sbb
mov
fwait
push
xchg
ret
pop
fprem
pop
pop
xor
les
cmp
out
mov
cmps
ret
sbb
jne
jno
inc
stos
push
jge
or
add
or
xchg
popf
ret
fsubr
(bad)
jl
stos
pop
fstp
(bad)
not
movs
jmp
into
scas
dec
push
push
sub
clc
jmp
mov
mov
fcmovnb
cwde
cwde
xor
ins
sub
mov
jb
loop
sub
popa
ins
mov
push
imul
ror
push
mov
mov
imul
inc
add
scas
inc
scas
xor
push
into
add
mov
push
sbb
fidivr
movs
int
mov
push
push
xlat
scas
mov
dec
sbb
lods
not
cmp
mov
jb
scas
pop
imul
jo
xor
test
sbb
(bad)
mov
dec
pop
data16
push
scas
sub
or
(bad)
pop
inc
in
js
out
adc
gs
adc
push
pop
mov
in
mov
sbb
adc
pop
scas
fs
clc
adc
in
or
jmp
jmp
bound
push
daa
ja
cmps
ins
call
mov
scas
push
push
mov
into
inc
lahf
daa
sub
ds
adc
sub
xlat
sbb
imul
pop
mov
clc
int3
out
xor
jmp
xor
int3
inc
push
fcomp
xchg
jl
xor
add
pop
adc
fimul
inc
mov
inc
add
sti
or
aaa
add
cmp
mov
sub
mov
dec
es
outs
mov
cdq
stos
shr
call
push
inc
cld
das
das
(bad)
in
sahf
pusha
repnz
jnp
sbb
retf
mov
call
mov
loopne
or
(bad)
cmp
or
fnstcw
out
in
or
inc
sbb
sbb
add
xor
inc
lods
and
or
gs
sbb
jne
mov
pop
test
stc
pop
mov
lahf
in
push
sbb
popf
push
pop
out
lea
lods
ficomp
outs
(bad)
in
bound
sub
cs
sahf
rcl
xor
(bad)
fmul
pop
out
mov
js
xor
in
and
mov
cmc
shl
leave
pop
xchg
test
sub
and
into
dec
cmp
jmp
shl
and
test
xor
cs
add
jmp
es
scas
ja
pop
mov
cld
shl
addr16
call
sbb
jl
inc
addr16
call
xchg
cmp
adc
aad
(bad)
mov
loop
adc
xor
sbb
ror
shl
or
xor
pusha
add
xchg
shl
shr
jo
mov
cmps
lock
dec
int
fsubr
fwait
sahf
fcmovnu
fst
dec
xchg
jnp
fisub
dec
fisub
and
icebp
fdiv
sti
stc
sub
jae
mov
and
shl
cwde
adc
adc
xlat
test
loopne
pushf
pop
cwde
jbe
sub
jne
je
pop
jbe
loopne
inc
push
jmp
and
pushf
adc
add
or
jne
xchg
dec
sub
mov
xor
ds
jbe
sub
movs
and
jp
mov
(bad)
loope
cmp
lods
enter
xor
dec
cld
mov
aaa
popa
adc
inc
hlt
and
cld
mov
out
nop
mov
add
adc
sub
in
jmp
mov
in
loopne
out
nop
int
test
sbb
ss
add
xchg
inc
xchg
dec
out
xor
call
add
mov
add
sahf
loop
sub
jge
cmp
lods
cmp
mov
cmp
out
xor
pop
sahf
cmp
xchg
pop
cmp
and
lock
dec
hlt
inc
sbb
out
mov
jge
ins
out
pop
mov
dec
repz
rcl
cmps
fwait
cli
adc
mov
icebp
test
xchg
adc
in
movs
xor
gs
jg
push
addr16
sub
jnp
xor
xor
mov
sahf
push
ret
out
push
ss
xchg
js
xchg
xchg
inc
cmp
iret
xchg
lahf
or
loop
es
fdivr
aam
idiv
fst
ja
and
movs
add
mov
gs
cdq
mov
adc
jmp
push
sub
push
push
shl
enter
fstp
in
cmc
mov
jmp
fidiv
sti
jae
ins
xor
cmovg
fisub
fisttp
pop
inc
lahf
(bad)
mov
mov
les
inc
and
fnsave
dec
bound
hlt
int
xchg
ss
dec
fidiv
jge
and
sub
(bad)
push
adc
daa
ins
int3
sahf
lods
test
out
sub
push
adc
xchg
sbb
push
pop
and
or
mov
sub
sub
xchg
out
jbe
xchg
aaa
das
popf
mov
fstp
(bad)
(bad)
pop
inc
js
idiv
jecxz
adc
js
cmps
add
(bad)
out
iret
xchg
daa
cmp
pop
scas
sub
pop
sub
xchg
nop
pop
jae
push
xchg
repz
nop
xor
jp
mov
adc
pusha
out
and
inc
es
int3
jg
std
mov
loopne
arpl
cmp
fst
or
fnstcw
mov
ja
test
in
adc
mov
pusha
add
pop
int3
push
add
pop
fst
aam
(bad)
jecxz
stos
clc
mov
in
sub
or
xor
mov
xchg
cmp
cmp
jmp
xchg
mov
shr
imul
dec
push
sbb
adc
and
sbb
and
or
je
stc
outs
push
or
mov
fild
out
inc
mov
dec
nop
and
push
sbb
mov
lods
mov
push
fdiv
xchg
xlat
enter
out
ret
dec
call
sar
mov
popf
add
xor
mov
mov
mov
icebp
rol
inc
sub
xchg
pop
ss
(bad)
dec
mov
shl
das
cmp
mov
mov
xor
lds
mov
rcr
dec
dec
xchg
mov
std
inc
cmps
in
test
jo
mov
sbb
and
jno
cmc
dec
jg
scas
rol
std
sar
xchg
cmc
cmp
mov
mov
cmp
xor
arpl
enter
push
xor
pop
adc
adc
data16
xor
xchg
arpl
fadd
outs
push
not
sar
aaa
lods
jmp
addr16
add
push
pop
loope
ja
std
stc
js
push
push
push
adc
stos
sbb
jl
mov
loop
shl
in
jnp
arpl
retf
dec
push
repz
pop
sub
inc
xcrypt-ofb
cmps
outs
xlat
adc
lea
mov
jns
(bad)
and
cmps
or
arpl
pop
inc
fnstsw
inc
sub
adc
or
(bad)
cmp
rcl
sbb
stos
cmp
jbe
fcmovnbe
mov
xor
push
add
loop
sti
js
push
sti
jne
or
pop
or
not
fiadd
(bad)
movs
push
adc
xlat
out
xchg
dec
mov
fsubp
mov
add
mov
jo
in
xor
or
pop
mov
xchg
push
lods
mov
aam
hlt
jne
jae
(bad)
(bad)
(bad)
rcl
pop
sbb
or
inc
inc
out
int3
data16
jno
mov
out
stos
test
loope
out
or
in
js
neg
add
push
(bad)
pop
fisub
add
jl
mov
scas
adc
neg
dec
inc
ja
retf
push
(bad)
add
xor
fadd
push
mov
dec
test
inc
jecxz
leave
dec
mov
movs
inc
sub
imul
stos
arpl
outs
sub
je
cmp
jbe
lds
jmp
icebp
xchg
pop
push
and
xchg
pusha
inc
dec
or
xor
or
or
cs
test
leave
rol
hlt
movs
(bad)
ins
cdq
inc
call
cmps
mov
jecxz
dec
adc
shl
push
cmp
pusha
fwait
jl
jmp
mov
loopne
or
add
pop
mov
loope
sub
test
cdq
test
addr16
jmp
lods
add
(bad)
out
xchg
cmc
int3
cld
out
jno
inc
sbb
mov
mov
(bad)
mov
(bad)
jle
sub
mov
push
pop
mov
mov
sub
jmp
aas
inc
pop
xor
jmp
push
ret
aam
push
xchg
dec
add
(bad)
pop
retf
xchg
arpl
push
sbb
and
inc
push
adc
mov
test
scas
je
jecxz
inc
out
loop
cmp
loop
and
out
push
cld
test
sbb
add
test
mov
call
rol
xchg
fs
sbb
test
push
repz
(bad)
int3
add
pop
xor
cld
sub
sahf
stc
ins
sbb
push
xor
adc
adc
jp
out
cmp
xcrypt-cbc
cmps
push
mov
out
sbb
aam
xor
inc
mov
xor
stos
xchg
push
and
and
cmps
(bad)
retf
sbb
mov
lahf
xchg
out
in
xchg
jge
lock
sbb
(bad)
retf
sub
test
pop
and
push
test
and
cmp
es
lea
aaa
(bad)
cwde
inc
pop
std
ret
ret
sbb
jae
jne
loopne
inc
mov
mov
jl
stos
xor
pop
ins
adc
scas
mov
sbb
retf
or
aad
imul
fwait
ror
sahf
les
xchg
inc
(bad)
cmp
push
in
dec
jns
mov
mov
popf
out
shl
nop
mov
jno
pop
xchg
sbb
in
(bad)
frstor
arpl
je
fimul
call
cwde
xor
int3
rcr
pop
fwait
cld
sbb
pop
xchg
mov
das
sub
loope
out
and
xchg
or
fsubr
add
fistp
pop
lods
out
pop
(bad)
sbb
push
pop
and
pop
push
xor
stos
iret
cdq
add
sub
into
cmp
ror
mov
test
xchg
cmp
movs
and
jns
fnstcw
pop
jg
imul
movs
jmp
sahf
(bad)
in
daa
int
pop
fist
icebp
es
popf
in
pop
loope
push
leave
dec
sbb
xchg
inc
mov
add
or
xor
dec
dec
inc
pusha
or
lock
shr
out
test
inc
sub
xchg
jge
aad
and
inc
nop
ja
xor
js
dec
cld
xchg
(bad)
push
cmp
push
dec
in
add
aad
pop
rol
and
loop
mov
jno
sub
jge
dec
pandn
(bad)
fild
xchg
retf
das
cmp
fdiv
les
ins
pusha
add
or
jl
addr16
mov
(bad)
stos
dec
fld
mov
imul
push
push
sbb
mov
popa
add
shl
push
shl
shl
cwde
and
cmp
mov
popa
outs
jmp
lods
fwait
adc
dec
gs
xchg
adc
inc
loopne
stos
jo
adc
dec
retf
or
or
push
shl
pop
add
push
fstp
rol
pop
popf
cld
shl
repz
fild
jmp
rol
sub
fadd
fwait
inc
test
jp
add
add
xchg
dec
or
and
ficomp
jne
out
sti
call
fsubr
xor
fdiv
outs
int
repz
cmp
lock
cmp
cmp
xchg
xor
push
out
push
cmp
into
retf
xchg
cmp
dec
sub
pop
pop
sub
in
jmp
out
jnp
jmp
retf
lods
fsubr
ins
add
sub
adc
xchg
nop
sub
ins
push
cmp
pop
cmp
pushf
mov
adc
inc
imul
(bad)
(bad)
repz
push
test
test
paddsw
mov
mov
test
imul
push
mov
mov
pop
jns
(bad)
fidivr
sahf
xchg
(bad)
scas
ins
jnp
outs
xchg
xor
arpl
mov
lock
pop
jle
or
bound
jge
into
mov
xchg
add
icebp
mov
inc
test
adc
sbb
or
push
add
scas
dec
movs
add
or
(bad)
jae
push
leave
and
pop
pop
scas
punpckldq
pop
push
out
fisttp
stos
push
aas
pop
mov
add
fimul
xlat
and
push
int3
(bad)
sar
xchg
gs
xor
mov
mov
and
cmc
in
sbb
ret
sbb
clc
es
gs
inc
xor
mov
adc
out
and
jnp
(bad)
aaa
xor
pop
dec
push
mov
mov
hlt
sub
fidivr
out
aad
hlt
out
pop
add
dec
gs
(bad)
mov
fwait
or
dec
(bad)
iret
pushf
xchg
retf
push
leave
fisttp
pop
cmp
pop
or
das
push
enter
movs
sbb
pop
fnstsw
cdq
inc
sar
mov
xchg
jp
add
mov
int
mov
dec
add
mov
leave
xchg
mov
int3
xchg
push
jge
xchg
mov
in
push
imul
mov
int
push
jl
scas
ror
in
clc
xor
jnp
sti
cwde
(bad)
fcmovbe
push
shr
sub
adc
pushf
sar
sub
inc
aaa
pop
fwait
stc
xor
push
xor
pop
inc
add
(bad)
in
jle
cmp
scas
jmp
xchg
jle
movs
pop
xor
into
leave
and
xchg
jae
lock
mov
test
sub
sbb
inc
repz
addr16
cdq
and
sbb
cmp
dec
sub
ret
or
add
out
mov
mov
call
(bad)
xchg
cld
adc
cmc
fsub
jbe
stos
cdq
xchg
cmp
mov
xchg
(bad)
xchg
int
into
aam
in
mov
(bad)
push
jle
jns
mov
mov
dec
mov
in
aad
pop
stc
mov
(bad)
scas
popf
sub
in
mov
and
or
lea
add
pop
cmp
lea
mov
xchg
out
in
nop
in
sti
cmp
push
stos
pop
adc
imul
(bad)
jno
jno
add
dec
mov
adc
test
stos
fisttp
repz
jmp
add
ins
std
sub
loope
mov
fadd
leave
les
pop
jge
mov
cdq
or
jg
das
movs
xchg
ret
(bad)
fiadd
fcomp
retf
jno
pop
pusha
lock
js
mov
push
cmp
push
mov
(bad)
ror
iret
ss
push
sbb
loop
xchg
xor
pop
mov
add
cmps
push
dec
mov
inc
ficom
mov
call
jle
call
ss
mov
sar
(bad)
push
rcr
push
aam
js
mov
lods
jle
or
adc
rcl
fidivr
sbb
lods
add
sub
retf
fs
mov
int3
dec
xchg
pop
dec
sub
or
fnstcw
sti
push
das
mov
test
push
mov
add
(bad)
adc
sbb
sbb
hlt
test
popa
jbe
ins
mov
(bad)
movs
mov
pop
aaa
cmp
or
mov
loop
je
add
or
mov
pop
xchg
nop
pop
adc
and
xchg
ror
mov
cmp
aaa
cmp
jg
ss
add
clc
stos
je
lods
push
aam
xor
jb
mov
xor
into
xchg
out
shr
psraw
jo
(bad)
xchg
not
int3
mov
adc
cmps
ins
mov
or
daa
jl
adc
ret
es
cmp
sbb
and
mov
gs
mov
inc
cmp
pop
movs
and
fstp
out
loopne
scas
add
push
inc
pop
sahf
xchg
add
addr16
adc
pusha
(bad)
mov
popf
and
ror
aaa
jecxz
sbb
xor
dec
movs
(bad)
outs
push
jbe
cmps
mov
push
rcl
adc
ror
mov
cmp
test
adc
xchg
inc
jmp
sbb
aaa
sbb
xor
fucomip
or
enter
xor
sbb
call
sbb
inc
icebp
mov
sub
xchg
call
(bad)
mov
iret
xor
(bad)
lea
adc
xchg
das
bswap
dec
in
fistp
test
push
movs
out
inc
mov
jp
sbb
mov
adc
mov
sub
dec
je
mov
rol
mov
inc
(bad)
ret
sub
shl
retf
ds
dec
xor
(bad)
out
jbe
iret
and
mov
call
sar
dec
movs
pushf
push
retf
(bad)
shr
call
aaa
adc
push
popf
mov
push
xor
mov
jbe
and
and
xor
test
imul
ror
add
fadd
sbb
nop
fst
fwait
cmp
ss
mov
sar
enter
sar
push
scas
scas
pusha
jge
outs
and
jmp
dec
(bad)
inc
lahf
cmps
sub
mov
xchg
pop
mov
and
adc
dec
mov
pop
fucomp
outs
and
aad
in
jno
ins
mov
outs
inc
mov
xor
push
jns
jle
lds
mov
enter
add
cmp
jp
dec
mov
enter
cmp
or
scas
outs
jmp
pop
stc
and
mov
mov
and
outs
mov
jecxz
jnp
(bad)
hlt
jne
nop
add
imul
push
inc
rcr
mov
cmp
add
or
pop
(bad)
mov
xchg
cmp
je
xchg
xchg
mov
mov
jg
cmp
push
mov
push
or
inc
push
lahf
repz
mov
mov
in
mov
aad
xor
mov
addr16
sub
push
push
sbb
sub
frstor
xchg
dec
lahf
popf
out
push
cli
out
iret
ror
data16
mov
xor
inc
or
sub
cmp
sbb
adc
adc
sbb
out
mov
stos
xchg
push
xor
mov
mov
mov
movs
es
scas
(bad)
xor
pop
in
push
mov
pop
imul
and
dec
aaa
lods
dec
inc
inc
ror
jnp
clc
loopne
and
dec
repnz
inc
pop
or
loope
push
(bad)
dec
mov
stc
shl
movs
adc
sub
jle
mov
jmp
and
xchg
jmp
sbb
mov
mov
hlt
(bad)
lock
mov
xor
sti
cmp
or
mov
pusha
out
pop
ror
adc
(bad)
mov
and
movs
sub
cmps
cmps
es
movs
ins
jl
cmp
es
icebp
add
sub
pushf
mov
ret
mov
push
dec
fidiv
sub
sub
popf
mov
daa
dec
int3
push
sub
sub
sub
pop
mov
lds
into
pop
ds
loopne
ret
scas
add
mov
test
scas
inc
lahf
jbe
arpl
addr16
stos
dec
std
fist
(bad)
push
jnp
pop
sahf
rcl
add
int
cld
xchg
sub
sahf
and
iret
pop
sub
cmc
out
(bad)
push
xor
jge
call
ins
lds
dec
xchg
retf
cmp
inc
xor
call
dec
rcr
(bad)
cwde
jle
fs
pop
jne
inc
into
rol
scas
in
bound
mov
cmp
(bad)
sbb
jmp
pushf
mov
into
push
adc
loope
pop
iret
pop
loope
adc
test
mov
sbb
dec
cmp
add
cmp
test
or
mov
sbb
mov
xchg
push
test
xor
stc
and
mov
shl
ficomp
cmp
inc
cdq
xor
mov
push
movs
adc
sbb
mov
jg
mov
and
sbb
push
jo
sti
loop
cmp
repnz
movs
(bad)
mov
inc
dec
cmp
(bad)
pop
ss
cmp
sbb
ficom
sbb
nop
dec
push
pop
jno
outs
aas
push
scas
test
add
pcmpeqb
aas
dec
pop
lea
jns
fnstcw
outs
loope
dec
and
mov
js
vmwrite
mov
ret
push
sub
movs
(bad)
jg
inc
jecxz
ss
(bad)
fwait
mov
sti
cli
cdq
mov
lods
mov
sbb
in
test
dec
in
cmp
std
cmps
or
shr
sub
mov
pop
fist
adc
out
retf
aaa
ror
test
push
mov
aaa
nop
inc
test
sub
inc
test
push
push
sub
dec
test
dec
push
ins
ds
inc
push
or
inc
adc
dec
fsub
push
ins
pop
add
pop
xor
test
movs
mov
aad
retf
push
out
out
gs
adc
les
sbb
and
into
out
or
and
pop
mov
loop
lahf
fwait
dec
jb
shr
push
jns
fs
fcmovne
mov
pop
scas
mov
shl
dec
jae
shl
rol
lods
push
fwait
sar
sub
pcmpgtw
pop
inc
fcmovne
inc
jmp
cwde
shl
pop
pop
mov
jae
aam
addr16
mov
push
mov
mov
sti
scas
iret
fcmovb
shl
dec
stos
ret
stc
or
cmps
(bad)
jle
int
cdq
rep
pop
aas
xor
cli
test
sbb
xchg
pushf
pop
and
outs
stos
dec
push
leave
mov
retf
fwait
aaa
xchg
addr16
popa
out
cld
cmps
adc
dec
xchg
add
lock
repnz
fwait
mov
mov
jmp
xchg
pop
jge
add
pop
push
rcr
aam
(bad)
jmp
or
and
scas
jge
gs
pop
add
and
push
push
pop
ffree
jmp
pop
test
outs
sub
ins
out
mov
mov
jg
cmc
shl
and
jp
sbb
retf
or
sub
push
(bad)
cwde
sahf
sub
ins
(bad)
aam
sub
mov
add
pop
stc
aaa
das
and
mov
enter
mov
lods
sbb
jecxz
leave
sar
inc
aaa
add
mov
sub
mov
mov
xchg
dec
jmp
into
fisubr
cmp
xchg
stos
pop
add
inc
and
sub
mov
test
jecxz
cwde
sub
xor
test
dec
int
imul
cmp
sub
lea
addr16
movs
xor
inc
sub
mov
sbb
xchg
cld
cmc
ja
rcl
in
retf
add
fdivrp
clc
adc
push
fwait
pop
xor
push
xor
sbb
arpl
xchg
neg
push
adc
add
mov
icebp
ror
pop
mov
je
loopne
mov
iret
xor
rol
inc
push
cmp
fst
cwde
(bad)
scas
test
ds
outs
mov
addr16
adc
or
mov
iret
or
retf
in
xor
add
pavgw
scas
sub
fstp
nop
adc
test
(bad)
loope
sub
add
out
adc
push
pushf
movs
lock
loope
pop
mov
xchg
pushf
sar
mov
test
loopne
xchg
mov
clc
jno
(bad)
cld
(bad)
jmp
and
fisttp
ret
int
jne
hlt
xor
enter
and
leave
pop
gs
jg
mov
and
push
mov
rol
(bad)
mov
loopne
sbb
pop
jg
push
fldenv
xor
xor
mov
push
nop
sub
ja
sbb
retf
inc
pop
int
adc
xor
adc
ret
lods
(bad)
fsubrp
mov
adc
stc
jns
push
in
(bad)
mov
test
mov
ret
cli
sub
xchg
shl
push
out
pop
adc
aaa
cs
fucomip
outs
pop
jmp
daa
int3
or
inc
xor
sub
adc
jo
mov
fidiv
sbb
je
xchg
es
(bad)
iret
test
out
pop
into
pop
ficom
es
test
loopne
inc
add
dec
idiv
pop
jmp
(bad)
out
mov
cmp
sub
pop
dec
sahf
or
jno
mov
or
inc
inc
rcl
pop
push
movs
cli
dec
fidiv
or
fwait
sbb
lods
pusha
jbe
push
adc
out
mov
lods
adc
inc
inc
mov
(bad)
mov
dec
out
jno
loopne
ret
aam
fmul
mov
ins
and
out
imul
jmp
(bad)
movs
movs
nop
icebp
repnz
dec
dec
cmp
inc
sub
sbb
xor
jnp
mov
sub
adc
mov
loop
or
mov
mov
mov
pop
aaa
inc
mov
add
sti
dec
pop
clc
cs
pop
dec
nop
and
cmps
or
call
les
mov
sub
cmp
ins
stc
cmp
pop
pop
jb
xchg
ss
sbb
gs
ret
je
mov
ds
call
test
imul
jmp
inc
psllw
adc
pusha
sub
call
leave
retf
call
and
pop
call
xchg
mov
lods
or
ds
and
bound
cmp
arpl
mov
scas
(bad)
shl
mov
(bad)
ds
test
and
fld
idiv
mov
jg
lds
adc
dec
adc
sti
cwde
adc
stos
mov
jns
xchg
leave
(bad)
cmp
sub
pop
inc
lods
rcr
mov
in
mov
lahf
(bad)
mov
aad
ret
cs
cmp
pop
retf
adc
lds
pop
xchg
jmp
or
repnz
fldcw
test
das
imul
cdq
call
push
daa
loope
push
mov
dec
push
adc
inc
jns
xor
sub
dec
daa
rcl
sub
mov
jb
sbb
frstor
inc
shr
ja
xchg
push
les
lods
fcom
add
mov
(bad)
(bad)
fwait
mov
ret
xor
adc
mov
mov
add
ret
inc
fst
cdq
add
fisub
dec
int3
xor
add
cmp
outs
pop
fidiv
jbe
push
xor
xchg
iret
push
pop
cmp
(bad)
mov
adc
add
enter
es
scas
inc
jns
std
push
out
js
xlat
repnz
dec
mov
jne
lahf
mov
mov
sbb
jg
xchg
gs
jbe
cdq
les
je
fidivr
add
mov
loop
sbb
pop
push
pop
sbb
sub
mov
iret
and
add
xor
xchg
in
inc
dec
les
dec
ss
mov
nop
adc
dec
mov
dec
ins
rcl
shl
pop
ins
mov
jge
or
retf
ja
mov
add
int3
mov
sub
stos
sti
js
push
outs
pop
ins
test
mov
fdivp
cmp
outs
(bad)
sahf
ins
mov
mov
inc
mov
repz
or
or
test
mov
pop
cli
jne
aas
xor
dec
dec
push
push
sub
xchg
shl
push
or
inc
test
cdq
jbe
inc
xchg
bnd
mov
fstp
xor
jp
iret
mov
popa
outs
test
xor
in
jno
int3
bound
push
or
sub
or
adc
push
mov
rol
movs
jg
sub
inc
mov
xchg
fidiv
mov
loop
stos
mov
fdiv
data16
mov
stos
clc
xchg
jo
sub
movs
mov
push
jg
fsub
adc
fcmovu
out
mov
call
mov
dec
outs
or
xor
inc
jae
xchg
xchg
mov
xor
push
jo
stos
in
out
addr16
cs
outs
outs
push
fsubp
dec
lock
xor
test
or
leave
mov
hlt
popa
dec
test
arpl
pop
gs
mov
dec
mov
sub
mov
mov
sbb
mov
outs
les
fs
fsub
xor
cli
add
imul
stos
mov
add
loopne
mov
pop
lods
mov
sbb
add
frstor
xchg
add
idiv
dec
inc
es
(bad)
push
scas
mov
add
cmp
or
pushf
sub
in
or
pop
xor
mov
sbb
cmps
mov
imul
push
sbb
jle
mov
mov
pop
js
and
push
push
xchg
mov
pop
test
scas
cmp
out
icebp
inc
out
adc
xor
push
cmp
xchg
xchg
xor
aaa
outs
sbb
pushf
mov
xor
or
mov
sbb
xchg
or
sar
adc
stos
jno
sub
or
push
into
or
fsubr
rcr
dec
loope
call
das
jg
je
mov
xor
sub
push
mov
cmp
shr
inc
jmp
jnp
mov
ret
sub
cmps
bound
and
cmp
xchg
(bad)
push
xlat
ds
cwde
push
out
mov
in
and
jae
fisubr
pop
cmps
ds
les
mul
sbb
out
push
xchg
push
push
sbb
int3
mov
nop
xor
ins
sub
mov
sbb
cmp
and
mov
(bad)
or
sub
scas
in
or
xor
test
ins
xor
ret
mov
xor
ins
mov
sub
cmps
jmp
fisub
adc
cli
fimul
int3
aas
(bad)
jns
ins
push
push
into
dec
das
imul
daa
ins
mov
pop
ss
test
inc
daa
out
jb
pop
pusha
sub
test
mov
es
sar
pop
enter
cs
xchg
retf
sub
jp
mov
push
sbb
mov
sbb
sahf
mov
adc
fcomp
mul
test
mov
sbb
enter
xchg
cmp
xor
mov
or
repz
les
xchg
(bad)
mov
pop
out
in
mov
mov
call
fisttp
lea
dec
jo
sub
scas
jg
or
sbb
ja
inc
movs
mov
ins
in
fbstp
or
and
bnd
ins
inc
cmc
retf
sbb
test
add
mov
mov
pop
sub
or
and
cmps
shr
test
popf
pusha
mov
add
and
jl
inc
mov
xchg
scas
(bad)
lods
int
repz
pushf
inc
mov
dec
pop
cmp
add
out
js
lods
lods
fidiv
or
sub
ret
out
icebp
scas
aaa
push
aad
inc
mov
xor
jecxz
push
push
dec
and
in
cli
jl
test
fiadd
pop
shl
scas
stos
cwde
shl
cmp
mov
ins
clc
xlat
inc
mov
push
iret
sti
mov
adc
iret
ss
adc
(bad)
and
sbb
sub
push
or
xor
add
cmp
xor
xor
icebp
movs
push
or
and
iret
dec
pop
cs
(bad)
xchg
ret
pop
jns
xor
imul
pop
popf
sub
mov
fadd
dec
sbb
lods
ret
sub
dec
js
and
mov
xchg
xchg
xchg
fstp
or
mov
or
in
popf
in
stos
push
in
mov
or
add
inc
fwait
push
pusha
les
fimul
mov
sbb
retf
fld
jmp
jne
sbb
cmc
fucompp
mov
mov
movs
aas
add
hlt
or
jle
pushf
mov
pop
pop
scas
mov
loop
cs
xor
sbb
xor
in
sbb
outs
loop
adc
(bad)
mov
mov
xor
stc
xchg
cmp
adc
das
xor
repz
aam
jbe
pop
data16
pusha
cs
pop
retf
pop
push
mov
mov
shl
cmp
cmp
inc
jecxz
adc
mov
mov
mov
mul
in
and
fwait
test
je
cmp
adc
xlat
push
(bad)
je
cwde
dec
dec
test
sar
(bad)
pop
push
mov
sar
mov
and
aaa
call
gs
sub
hlt
pop
adc
in
fimul
add
call
adc
cmp
xchg
ins
std
in
test
push
int
int
into
inc
js
fwait
mov
loope
xchg
retf
and
call
bound
or
fisttp
(bad)
cmp
icebp
lock
ins
popf
adc
enter
cmps
sub
pop
fwait
push
cmp
jo
push
test
push
mov
xor
adc
repnz
lock
cmp
adc
in
mov
(bad)
mov
or
xchg
mov
and
cmp
pusha
popf
adc
jecxz
aas
ror
(bad)
int
xor
icebp
mov
push
mov
cmp
rol
cmps
mov
add
pop
and
lds
dec
pop
out
call
test
push
ja
jle
cmp
addr16
push
pop
in
imul
ss
adc
jge
xlat
xor
dec
adc
dec
adc
mov
jle
and
mov
xor
call
jbe
(bad)
pop
aam
add
cmc
dec
popf
sbb
mov
arpl
mov
jmp
fisttp
jmp
and
das
inc
jmp
mov
or
jp
push
dec
retf
and
sahf
arpl
or
mov
(bad)
xor
cmp
jge
imul
xchg
push
ins
(bad)
mov
jbe
push
call
test
out
clc
(bad)
lock
fmul
shl
lea
or
sub
sbb
push
sub
push
and
repnz
fimul
mov
retf
pop
out
in
sbb
inc
mov
sahf
or
dec
fistp
repnz
inc
or
xchg
and
xor
sub
jo
retf
add
sar
je
fisub
test
sbb
stos
xchg
push
jb
add
sti
jo
push
and
in
adc
fcomip
sbb
cmp
shr
push
mov
stos
mov
sub
mov
aam
imul
or
aam
cwde
jns
sub
pop
mov
add
fucomip
out
xchg
cli
test
out
cdq
movs
push
cmp
(bad)
ficom
les
stos
in
mov
dec
lahf
and
jb
out
mov
sbb
push
mov
sti
rol
cwde
movs
mov
outs
push
test
(bad)
call
inc
pushf
add
aad
sub
int3
push
mov
or
cmp
xchg
pop
les
mov
popf
push
inc
or
push
jne
loopne
les
jnp
pop
dec
cmovbe
jo
ins
ret
jge
inc
test
outs
jnp
push
xchg
adc
push
je
inc
cld
rcr
sub
cld
dec
icebp
xor
nop
pop
push
sar
inc
push
pop
shl
ficom
scas
fcom
mov
daa
stos
adc
stos
pop
lods
aam
(bad)
pop
and
es
inc
push
xchg
adc
push
mov
dec
mov
int
inc
sub
adc
sbb
retf
movs
mov
xor
in
or
mov
test
adc
add
sub
jmp
and
inc
jl
fcmovnu
or
jmp
mov
mov
sbb
cdq
cwde
sar
sbb
and
retf
xchg
in
imul
fdiv
mov
xchg
mov
mov
cmps
imul
mov
jmp
mov
cmp
rol
test
call
cli
jmp
push
mov
outs
sub
icebp
xor
das
fst
and
adc
add
mov
mov
sbb
push
push
xor
push
scas
and
iret
xchg
ret
and
cmp
std
jmp
mov
pop
push
jo
scas
bndstx
data16
push
clc
add
pop
xchg
jge
popf
addr16
jecxz
sub
aam
out
sub
sub
cmp
leave
repz
mov
popa
mov
loop
pusha
out
call
es
sahf
push
dec
cwde
add
xor
sbb
and
adc
out
mov
or
xchg
imul
push
in
push
ficomp
rcr
push
(bad)
fmul
movs
or
or
in
mov
and
pushf
leave
imul
mov
icebp
repz
dec
xor
mov
and
outs
ffreep
mov
xlat
(bad)
mov
xor
cdq
shl
test
ret
mov
lock
das
xchg
or
in
mov
test
shl
fistp
stos
fwait
adc
mov
popa
jne
push
xchg
out
inc
mov
dec
cmp
adc
push
iret
in
sub
xchg
mov
push
fsub
por
mov
push
int
sub
idiv
bound
(bad)
div
das
cmp
push
inc
test
sar
and
loope
sub
out
sub
dec
daa
mov
push
jnp
adc
fdiv
bound
aas
bound
rcl
xchg
xor
inc
xor
inc
xchg
in
div
xchg
mov
adc
shl
jmp
xchg
and
leave
pop
cmp
jo
or
sbb
fsub
add
jl
in
mov
sub
dec
push
adc
mov
fld
adc
add
sub
mov
adc
fild
adc
mov
xor
mov
ficom
out
fcomp
push
in
dec
xchg
cmp
mov
test
out
bound
int3
jg
mov
gs
mov
and
rcr
lods
and
xchg
fidiv
fidivr
mov
loopne
mov
adc
mov
jge
xor
xchg
mov
ins
mov
scas
mov
xor
iret
pop
pop
mov
cmp
in
mov
or
stos
inc
jg
push
sbb
xchg
push
mov
cmp
pop
sub
test
xlat
inc
mov
test
div
mov
sub
xor
(bad)
je
xor
arpl
icebp
ret
and
addr16
pusha
cmps
xchg
sub
arpl
aam
shr
je
mov
fstp
mov
push
test
cdq
nop
mov
fsub
mov
clc
inc
or
mov
inc
cmps
jge
dec
dec
outs
test
mov
lock
mov
inc
add
sub
cld
and
test
dec
inc
or
pop
pop
mov
mov
mov
mov
jae
inc
and
sbb
sar
fsub
add
push
int
sbb
xchg
stos
add
lods
push
popf
inc
mov
push
adc
cmp
cmp
add
in
fmul
xchg
sub
enter
dec
push
es
setle
xor
iret
fadd
mov
fnstenv
push
in
ja
xor
mov
movs
ret
cwde
xor
movs
aad
mov
jecxz
in
inc
test
sub
daa
imul
add
push
gs
sub
add
inc
xchg
out
mov
sub
and
bound
scas
jae
loop
xchg
out
inc
mov
imul
pop
inc
call
jp
movs
mov
mov
mov
mov
mov
inc
jo
sub
push
ret
pop
sbb
adc
mov
js
ror
pop
popf
sahf
xor
int3
jo
cmp
push
(bad)
call
push
jmp
sub
mov
enterw
jns
in
sbb
xor
cmp
xchg
or
add
push
sub
dec
test
stos
jne
popf
push
push
fidiv
fwait
dec
fld
jmp
push
push
dec
and
push
mov
pop
sbb
arpl
push
call
jle
js
ja
mov
cmps
cmp
or
call
lea
int3
mov
inc
or
int
xchg
loopne
aam
(bad)
imul
sar
loopne
pop
push
cmp
add
div
mov
dec
pop
imul
shr
pop
pop
xchg
push
mov
hlt
or
pop
mov
dec
in
movs
test
sbb
xor
nop
rcl
mov
out
iret
(bad)
sti
sbb
cmp
call
push
jo
inc
(bad)
(bad)
mov
mov
pop
and
or
addr16
xchg
pop
xor
jmp
xchg
push
ret
fild
push
fcmovbe
xor
dec
aaa
sub
mov
gs
and
(bad)
xor
xchg
cmp
mov
enter
xor
mov
sbb
sub
stos
push
inc
mov
(bad)
call
mov
daa
out
fbld
mov
js
sahf
dec
push
mov
adc
xor
and
daa
xor
push
icebp
out
jne
cs
cld
pop
iret
in
jno
daa
dec
cmp
adc
pop
dec
inc
add
sub
jae
add
sub
add
out
adc
sahf
mov
sbb
(bad)
push
fnstsw
clc
dec
pop
cmp
daa
dec
jp
lahf
fild
rol
cld
pop
pushf
mov
inc
and
shl
pop
inc
test
cmp
mov
xor
xchg
pop
and
sub
(bad)
shl
(bad)
mov
or
btr
push
xchg
les
mov
jmp
mov
aaa
and
cld
cmp
xor
cmp
dec
out
rcr
push
sub
out
sbb
or
cli
ds
dec
nop
aam
xchg
repnz
(bad)
and
psubq
sbb
popf
cs
fidiv
cwde
or
dec
adc
call
mov
jns
out
lds
gs
jb
mov
pusha
nop
cmp
inc
(bad)
jp
adc
add
and
cli
inc
lahf
aaa
call
test
inc
das
push
aaa
mov
mov
js
shl
pushf
sub
cmc
add
shr
adc
xor
js
sub
das
mov
icebp
mov
push
dec
popf
push
int3
jl
dec
icebp
loopne
loop
std
or
sbb
(bad)
fstp
pop
add
(bad)
mov
lods
arpl
(bad)
push
shr
int3
sub
mov
div
les
bound
clc
sahf
cmps
sti
cmp
pushf
ins
outs
cmps
dec
in
fsub
add
(bad)
push
aas
sub
aam
and
es
inc
cmc
add
pop
(bad)
icebp
leave
push
and
sahf
popf
sbb
aas
mov
aas
int3
inc
stos
xor
test
dec
cmp
cmc
jle
packuswb
(bad)
and
dec
inc
mov
(bad)
push
jg
push
lahf
aas
retf
lods
ins
mov
and
mov
loope
fcmovu
add
mov
jae
imul
fldcw
inc
cmc
xor
jl
(bad)
push
cs
inc
rep
or
mov
popa
fdivrp
pop
xchg
xchg
out
addr16
mov
push
fwait
std
adc
inc
mov
into
in
jbe
sbb
cli
cmp
ret
xchg
and
call
test
cmc
and
mov
sbb
outs
(bad)
push
xchg
in
and
retf
aaa
ss
jl
in
jmp
or
cmovne
jae
pop
add
jge
bnd
dec
and
gs
inc
cmp
adc
call
popf
(bad)
and
xchg
std
mov
xchg
inc
es
inc
in
jmp
test
in
sbb
push
push
outs
inc
out
sahf
sub
aad
popf
ret
or
push
arpl
or
ror
add
dec
jno
and
popf
in
or
scas
test
jae
adc
mov
mov
in
mov
adc
lods
scas
fbstp
jmp
jg
jne
(bad)
popf
in
sub
je
les
retf
sahf
int3
jecxz
xor
fwait
jne
xor
sar
icebp
lods
fdiv
fild
jecxz
in
adc
mov
(bad)
jge
lods
xor
jo
cli
jl
enter
and
mov
pop
xchg
add
cmp
arpl
sub
mov
es
push
pop
iret
in
sbb
jo
faddp
adc
out
retf
sbb
inc
pop
xor
in
add
add
inc
out
add
mov
inc
mov
mov
pop
ins
dec
test
loop
and
(bad)
or
daa
es
pop
jne
repz
xlat
popa
movs
mov
add
retf
cld
es
cmp
cmp
out
fdiv
ja
push
inc
std
sahf
jnp
pop
ins
jp
test
jne
xor
sbb
out
cli
jp
or
enter
into
mov
xchg
aaa
fld
mov
jno
push
rcr
ja
bound
or
lea
and
imul
outs
xor
lods
and
push
out
xor
movs
inc
cmp
mov
lea
inc
or
push
ror
xchg
out
sti
jb
xor
mov
sbb
ins
push
mov
xor
mov
mov
push
pop
jecxz
add
imul
sub
stc
xchg
cmp
mov
add
aas
push
mov
and
sub
pop
or
es
inc
mov
repnz
push
leave
call
loop
in
mov
xchg
pop
sti
xchg
int3
push
imul
xchg
and
arpl
pop
test
enter
das
cld
sahf
and
popa
inc
aaa
out
sbb
xor
push
pop
mov
xchg
push
jno
lea
or
xor
jno
push
int3
call
sbb
mov
mov
mov
(bad)
mov
push
pop
or
pop
add
pusha
and
sbb
(bad)
sub
in
jae
push
leave
mov
mov
fadd
sbb
cmp
or
sti
and
inc
sbb
cwde
sahf
sub
inc
adc
retf
push
cmc
mov
inc
and
sub
call
imul
aas
inc
in
and
add
les
jmp
jecxz
cmp
xor
movs
sub
cmp
cli
mov
sti
xchg
xchg
fsubr
sbb
lods
sbb
jp
jns
in
(bad)
add
mov
das
pop
mov
push
lahf
mov
xchg
std
cli
in
mov
aas
dec
xchg
adc
cld
add
daa
xchg
dec
sbb
mov
or
scas
cmps
mov
sub
out
mov
je
retf
sbb
(bad)
push
dec
push
movs
inc
bound
movs
add
dec
pop
sub
je
retf
outs
jl
cmp
lods
aaa
xor
ror
icebp
in
test
(bad)
cmp
cwde
std
aaa
clc
push
in
iret
adc
mov
into
test
push
lea
into
inc
imul
nop
fst
daa
fld
icebp
aaa
push
sbb
pop
and
pop
ins
jp
or
jne
cs
adc
test
shl
dec
jns
jnp
in
jmp
jp
daa
loope
cmp
daa
adc
repz
pop
inc
cmp
sub
mov
adc
inc
pop
loop
sub
mov
cmc
xchg
add
cwde
sbb
xchg
int3
std
xchg
mov
cmp
mov
sti
xchg
inc
cdq
adc
push
fcmovbe
mov
xchg
mov
cmp
push
call
mov
dec
add
sub
mov
push
ds
xor
sbb
sub
jmp
mov
sub
paddw
mov
sub
es
fsubp
test
sbb
in
pop
pop
out
mov
and
ins
xor
or
adc
push
nop
jmp
push
icebp
sub
leave
ja
mov
xor
lods
or
mov
sub
ds
and
xchg
(bad)
fld
loope
fwait
mov
jns
add
cdq
sub
ins
popa
in
mov
scas
and
jne
sbb
dec
cmps
icebp
push
daa
dec
add
into
jp
mov
pop
ror
cmp
jns
mov
cwde
out
add
aam
xchg
sub
icebp
xchg
xchg
dec
jle
je
call
dec
ins
jecxz
stc
inc
push
mov
mov
es
inc
ds
push
cmp
sbb
dec
in
je
cmp
packssdw
movs
mov
jae
inc
xor
int
mov
lods
out
inc
cmp
sbb
xlat
iret
mov
and
addr16
sahf
call
inc
dec
push
out
addr16
sub
fstp
pop
call
inc
jnp
and
aas
dec
xchg
and
scas
test
(bad)
mov
pusha
jnp
loop
into
inc
out
outs
shl
bound
ror
sar
(bad)
rcr
nop
ja
add
jns
not
sbb
or
int
pop
mov
out
daa
or
dec
in
sub
dec
mov
inc
mov
cld
sbb
imul
sti
sub
or
call
daa
dec
aaa
nop
cmp
jl
mov
dec
jne
aam
pop
arpl
fistp
mov
mov
mov
jl
pop
pusha
scas
pop
sbb
sub
xor
and
mov
or
je
dec
pop
ficomp
add
std
adc
fst
xchg
hlt
sbb
imul
cdq
mov
enter
in
and
jl
out
xor
(bad)
cmp
mov
iret
jns
stc
pop
(bad)
pusha
cmp
jne
cmps
xor
jns
jge
int
or
mov
test
pop
ja
inc
sub
xor
out
jo
fidivr
jle
cmps
push
cmp
call
cmp
and
mov
imul
jl
cmps
mov
aas
aas
iret
test
mov
lahf
jecxz
jbe
imul
jmp
pop
call
mov
xchg
mov
add
sti
xchg
rcr
mov
mov
outs
and
dec
daa
adc
imul
pop
xchg
jno
call
lock
pop
inc
pop
adc
pop
add
call
mov
jns
fs
or
addr16
bound
fucomp
pop
xor
ror
inc
adc
(bad)
nop
push
and
mov
push
cmp
mov
retf
sti
neg
mov
inc
ret
fisub
out
cmps
je
into
mov
mov
mov
push
mov
jge
test
and
call
inc
shl
jns
ja
(bad)
in
pop
and
in
inc
js
sbb
pop
add
cmp
adc
fiadd
js
mov
out
add
or
jae
int
aaa
cdq
push
imul
fsub
dec
imul
cli
fcom
dec
aad
adc
ja
fpatan
adc
inc
daa
dec
inc
(bad)
mov
xchg
cli
mov
fs
jecxz
ret
sbb
mov
sub
dec
loop
(bad)
mov
into
or
xchg
xor
int
or
sbb
pop
sub
sub
add
loop
pop
xor
jno
ret
pop
cmc
mov
mov
out
xor
sahf
je
lahf
pop
ins
jbe
pop
jnp
ins
pusha
mov
ja
or
jno
shl
sahf
mov
setns
dec
inc
mov
mov
outs
scas
push
and
rcl
bound
jmp
jo
call
adc
mov
cld
jge
call
mov
outs
psadbw
cdq
inc
inc
jae
pop
sbb
inc
std
cmps
fadd
loop
aam
sub
in
ror
lods
outs
xor
or
in
dec
jmp
xchg
lds
add
pop
xchg
xor
pop
jns
jmp
jge
test
pop
iret
xchg
fcomp
mov
daa
fwait
bound
push
mov
mov
mov
add
neg
jp
cmp
mov
fcomip
mov
outs
imul
xchg
xchg
retf
daa
xchg
inc
cmp
aam
sti
inc
mov
jb
push
outs
daa
shl
fistp
adc
xlat
pop
mov
scas
inc
movs
xlat
out
ins
in
gs
test
inc
loop
sbb
adc
cmc
dec
pop
inc
mov
jmp
test
(bad)
sub
mov
pop
and
xor
adc
mov
pop
xchg
pusha
fnstenv
dec
mov
jge
xchg
daa
cdq
dec
inc
inc
cmps
test
clc
dec
pop
shl
into
jno
sbb
pushf
clc
lods
jo
jns
inc
ins
lea
shl
pop
es
cmc
mov
adc
push
sub
js
out
push
mov
stc
imul
call
in
cmp
test
setl
test
outs
jmp
in
push
mul
pop
retf
mov
fbstp
push
jbe
cdq
jmp
cs
ret
les
adc
inc
xlat
xlat
dec
xchg
cmps
outs
mov
cdq
and
mov
clc
push
or
dec
ins
or
or
mov
add
inc
mov
mov
cwde
ins
mov
test
or
and
push
adc
add
pusha
dec
xor
or
dec
cmp
nop
sub
pop
mov
jmp
into
out
shl
jg
shr
or
pop
push
arpl
sub
xor
sub
daa
lahf
ret
adc
arpl
xchg
mov
daa
push
mov
(bad)
lea
sbb
cmp
push
cmp
stc
test
fbstp
ror
nop
add
stos
cmp
mov
imul
or
retf
xchg
shr
sbb
pop
dec
enter
cmp
cs
(bad)
push
dec
jmp
into
sub
and
retf
mov
inc
mov
xchg
xchg
pop
movs
icebp
jae
pop
dec
rol
sbb
push
out
push
cdq
sub
push
jecxz
xchg
test
cmp
cdq
leave
movs
iret
xchg
out
enterw
xchg
mov
cwde
setl
dec
and
add
hlt
das
int3
aas
xor
jns
and
or
jae
in
and
cmovs
xor
aad
xor
dec
ret
(bad)
push
(bad)
dec
and
outs
jmp
and
test
aaa
sti
cs
add
movs
mov
dec
or
push
add
ret
push
sti
in
fs
sub
(bad)
out
sbb
adc
into
push
sbb
cmp
lods
loope
add
sbb
repz
pop
repnz
sbb
jge
(bad)
pusha
jmp
xchg
adc
sti
mov
sbb
sub
std
pop
and
cmp
lods
push
int
into
in
mov
cwde
mov
pop
fdiv
jae
mov
dec
shl
popa
xchg
ja
lods
mov
rol
fcmovne
dec
shl
add
shl
add
stos
aas
aam
sub
(bad)
cli
idiv
cmp
pushf
ja
cdq
push
inc
mov
xchg
add
shl
fs
mov
and
jae
lods
cmps
mov
ins
xor
dec
adc
xchg
ja
and
mov
add
cmps
add
daa
fst
ficom
mov
pop
daa
sub
hlt
add
test
mov
aad
push
push
aam
jecxz
jns
iret
and
dec
lods
add
loop
fist
repz
lods
jle
or
scas
lock
js
inc
push
pop
xchg
cdq
mov
dec
push
adc
cmps
mov
ins
std
mov
fmul
inc
mov
adc
pop
ins
push
js
(bad)
int3
fdiv
test
pop
popa
mov
adc
xchg
and
or
pop
sbb
out
mov
call
(bad)
pop
mov
or
lock
push
adc
cmps
jge
imul
pushf
xor
jbe
callw
adc
mov
and
inc
icebp
popf
push
sub
retf
iret
and
int3
cli
cmp
sub
aaa
fstp
loope
sbb
dec
jge
cmps
(bad)
cmp
jmp
mov
dec
(bad)
sub
xchg
cmps
cmps
dec
jnp
js
pop
dec
(bad)
jg
adc
std
mov
popa
cld
xchg
fdivrp
mov
cld
stc
das
or
adc
mov
xor
mov
ins
and
pop
inc
and
add
mov
icebp
call
call
mov
arpl
and
mov
add
int
loop
sub
scas
popa
inc
jge
push
dec
xchg
pop
mov
std
hlt
cmp
jg
pop
into
hlt
xchg
outs
addr16
scas
mov
gs
mov
push
dec
xor
dec
ja
outs
shl
sti
scas
jmp
rcr
pop
cli
add
sub
pop
dec
(bad)
mov
sub
sbb
(bad)
daa
jnp
jg
fild
cmps
push
xor
test
mov
nop
mov
outs
pop
pop
pop
cmp
mov
outs
push
sbb
mov
dec
sbb
xor
rcl
shl
add
adc
mov
stos
dec
mov
outs
jne
or
add
mov
jl
xchg
jnp
mov
pop
or
pop
bound
test
pusha
dec
and
mov
rol
mov
mov
rcl
mov
xchg
dec
adc
xchg
popf
aas
and
dec
lea
xchg
loope
mov
and
sub
push
mov
inc
dec
ror
or
cld
jns
sbb
push
and
inc
adc
stc
mov
lock
ss
and
test
rol
xor
inc
into
call
(bad)
dec
xchg
add
push
mov
loopne
fistp
movs
adc
fisttp
shl
push
push
sub
mov
out
xchg
xchg
into
sub
mov
out
inc
and
fsub
pop
gs
jns
in
sahf
arpl
retf
mov
mov
retf
add
mov
fdiv
ror
in
mov
(bad)
fimul
adc
rol
and
daa
sbb
icebp
into
loop
xchg
rcl
aam
xor
mov
or
loop
add
dec
push
mov
add
inc
je
add
push
int3
fcmove
mov
in
aam
adc
mov
cmp
imul
cmp
cmp
daa
jmp
hlt
and
test
xchg
adc
dec
ja
cmp
mov
pop
or
xor
popf
fimul
cmps
aam
mov
add
or
sbb
push
int
xor
imul
mov
ss
mov
jecxz
cld
cmc
push
add
aam
add
int
jae
mov
xchg
ss
fstp
test
mov
mov
mov
fst
sub
mov
stos
(bad)
push
xor
rcr
xchg
mov
ror
leave
xor
jb
test
adc
pop
dec
mov
dec
cwde
outs
int3
into
xor
mov
das
sbb
lahf
fcom
loope
mov
in
in
out
jb
mov
add
or
cwde
lea
cmp
adc
inc
xor
pusha
inc
sahf
fstp
mov
xchg
das
into
add
cmp
mov
and
push
fwait
dec
mov
cs
stc
jnp
jae
xor
mov
imul
and
loopne
outs
sub
sub
mov
stos
iret
jmp
xchg
xor
out
clc
sbb
js
out
loop
pop
mov
into
mov
movs
fst
popa
mov
jecxz
jb
or
test
bound
(bad)
fsub
repz
push
dec
or
mov
loop
xchg
int
into
pop
stos
xchg
cmp
and
mov
cmc
adc
inc
mov
bound
sbb
std
leave
retf
adc
push
das
popf
add
sbb
xchg
mov
(bad)
mov
pop
mov
and
in
inc
and
jbe
or
or
jge
and
cs
push
add
jmp
add
(bad)
pop
cmp
adc
loop
scas
arpl
and
xlat
dec
(bad)
jle
pusha
or
inc
and
or
adc
(bad)
std
cs
xor
and
enter
ret
fisttp
scas
pushf
test
pusha
sbb
dec
stos
xor
add
call
jo
lock
or
xchg
dec
pop
push
cs
(bad)
shl
int
int
ins
cmp
mov
mov
cmps
and
mov
jle
imul
sbb
repnz
pop
pop
inc
xchg
outs
pop
in
sar
loop
push
jecxz
icebp
test
sub
adc
stos
mov
mov
and
jge
out
cld
mov
popa
sub
xlat
ret
call
xchg
ja
dec
cld
cmp
mov
(bad)
mov
mov
xchg
mov
mov
out
jecxz
cmp
mov
push
push
push
add
fsub
sbb
mov
stos
or
cmp
sar
jmp
leave
inc
add
xor
pop
xor
push
enter
sbb
mov
cmps
in
dec
mov
mov
pop
sbb
push
call
mov
pop
rcr
xor
out
or
imul
clc
out
mov
cmps
mov
sbb
movd
or
jno
mov
or
ja
fwait
mov
pop
into
daa
outs
jmp
leave
xor
mov
lock
mov
test
lds
jae
outs
in
jge
in
sar
mov
js
and
mov
stos
cmps
or
test
mov
shl
pop
jp
sub
jne
imul
xchg
and
test
mov
cmps
stc
push
xor
and
sbb
or
adc
mov
sub
dec
xor
cmc
adc
dec
ds
sbb
pop
mov
call
pop
hlt
call
div
jbe
adc
ins
mov
gs
cmp
push
mov
jno
aad
test
mov
cmp
pusha
push
jo
leave
cmp
(bad)
sbb
fmul
jge
push
dec
sbb
or
dec
mov
mov
sub
jge
jp
(bad)
push
mov
and
stos
arpl
or
jmp
sbb
hlt
ins
jecxz
mov
call
int3
das
shl
jb
lods
mov
loope
jno
add
fwait
or
sub
mov
cwde
mov
xor
xchg
ret
sbb
ds
fld
mov
arpl
outs
addr16
jbe
std
dec
int
ret
push
adc
xor
sub
addr16
das
mov
or
jl
dec
lock
pop
loopne
cmp
in
rcl
sahf
push
inc
mov
inc
inc
mov
pop
sub
xor
aad
mov
adc
dec
or
xor
xor
push
mov
pop
cmp
fcom
vmulss
(bad)
es
arpl
mov
jmp
push
xchg
aas
dec
lds
outs
add
(bad)
adc
push
mov
sbb
test
mov
stc
outs
hlt
fs
push
lock
stos
mov
adc
mov
mov
add
jle
adc
mov
and
(bad)
ds
sbb
mov
dec
or
push
xchg
enter
and
or
dec
(bad)
mov
(bad)
mov
test
or
add
mov
sub
cdq
or
dec
adc
test
popa
mov
mov
mov
gs
data16
add
sbb
stos
movs
push
outs
xor
aad
add
aaa
sbb
in
lds
cmc
add
jp
pop
jb
add
xor
pop
jecxz
fnstsw
inc
repz
loop
add
inc
push
sbb
sub
push
dec
movs
inc
ficom
mov
test
stos
cmps
jnp
xchg
daa
mov
cmps
(bad)
cmp
xchg
call
enter
mov
test
movs
mov
popf
movs
ins
cmp
xor
inc
stos
adc
cwde
jp
bound
mov
lods
dec
mul
sahf
mov
pusha
mov
mov
sti
push
dec
call
rol
jns
add
pop
sub
xchg
and
popa
jle
popa
cmp
sub
shl
push
gs
retf
xor
ficom
cld
call
and
xchg
inc
pop
xchg
pop
fld
ss
in
out
jle
cmp
in
xor
daa
retf
es
sub
mov
lock
pusha
pop
cs
xchg
push
ror
bound
in
repz
dec
mov
mov
lock
adc
adc
jne
scas
xchg
scas
js
sahf
add
adc
(bad)
and
movs
cmp
ffree
add
jp
and
or
jmp
push
jmp
mov
pop
mov
jl
sbb
push
add
cmp
lods
(bad)
das
jo
fcomp
mov
shr
adc
int
sub
repnz
xchg
or
aaa
adc
aaa
sbb
outs
hlt
mov
xor
retf
std
outs
sub
les
fisub
fsub
cmp
(bad)
cmp
ret
jb
mov
fld
lds
or
push
popf
imul
xchg
mov
pushf
mov
sbb
xor
pop
lods
shr
outs
push
loope
sub
add
xor
lods
js
stos
cmp
inc
into
iret
jo
and
js
push
call
jae
push
jmp
inc
adc
enter
inc
jns
adc
push
cmps
stos
xchg
retf
xchg
(bad)
cmc
mov
push
out
sbb
xor
daa
and
hlt
es
adc
aad
cmps
add
mov
jne
jecxz
nop
dec
call
and
jo
mov
pop
clc
cmp
scas
(bad)
sbb
or
sub
movs
aam
stos
push
cmp
xor
jle
int3
sub
pop
stos
ror
popf
xchg
xchg
in
ret
xor
xchg
ss
xchg
pop
and
xchg
ret
nop
cmp
xor
ins
push
adc
mov
xchg
adc
arpl
std
rol
ret
or
hlt
out
int
fbstp
call
sub
aaa
pop
dec
dec
rcl
cmc
add
in
xor
scas
out
cs
ins
push
dec
push
into
cld
lods
sar
dec
pop
in
or
xor
or
inc
sub
int3
xchg
xchg
dec
stc
sbb
lea
mov
cmp
daa
pop
jle
call
push
or
lock
cmp
arpl
shl
jbe
push
or
les
vmovhpd
pop
nop
aaa
push
mov
inc
(bad)
vsubss
and
mov
push
sbb
push
ret
cmp
push
adc
pop
(bad)
xlat
xchg
jne
(bad)
in
or
je
push
mov
jp
(bad)
es
retf
push
idiv
pusha
pop
ror
cld
push
xchg
daa
mov
sub
mov
dec
retf
pop
je
jne
push
dec
aas
mov
mov
repz
mov
mov
xchg
pusha
movs
cs
mov
mov
mov
fist
adc
lahf
pop
xchg
call
movs
push
arpl
adc
or
sub
jmp
mov
mov
xor
fstp
sub
ret
pop
out
mov
add
cmps
call
fild
dec
cmp
fdiv
xchg
scas
test
cmps
cdq
out
push
fdivr
lods
push
pop
mov
jbe
out
add
ror
and
jg
dec
lea
loopne
or
or
adc
(bad)
stc
mov
push
jge
jnp
je
sub
in
cld
xchg
pop
pop
lock
ss
stos
jmp
in
push
jae
pop
pop
lock
fisub
and
and
repnz
fdivr
cwde
adc
xlat
mov
dec
inc
adc
add
test
adc
ror
cmp
add
push
fpatan
push
cdq
jnp
aaa
test
mov
cli
sub
hlt
std
and
rol
pop
mov
shr
add
adc
sub
push
fld
xor
out
mov
xchg
loopne
and
add
inc
loopne
data16
shl
outs
xchg
push
mov
leave
fwait
mov
stos
das
aam
loop
add
ss
inc
(bad)
mov
mov
inc
jg
adc
jno
pop
stc
adc
jno
test
xor
add
push
push
test
or
jecxz
nop
arpl
inc
push
mov
or
test
xchg
mov
adc
push
push
push
sti
cli
iret
test
test
push
pusha
pop
inc
cmp
mov
movs
push
xchg
icebp
sbb
aam
cmps
outs
jl
cli
movs
lds
call
or
fdivr
xchg
push
sar
arpl
outs
retf
cdq
mov
aam
mov
outs
inc
stos
(bad)
jmp
nop
imul
addr16
or
lock
sub
jge
sbb
mov
shr
pop
out
sbb
push
data16
xchg
stos
or
(bad)
or
jmp
jp
push
fbld
push
adc
or
or
sbb
arpl
addr16
jne
dec
fld
cmps
mov
es
inc
push
popa
test
or
div
jbe
cmp
cdq
rcr
jae
xor
mov
dec
mov
cmp
arpl
add
ins
iret
mov
arpl
sbb
ds
std
xor
popa
or
mov
in
call
pushf
sub
inc
les
outs
popf
sub
cmp
xor
mov
sbb
retf
or
dec
gs
test
mov
test
pusha
fsubrp
xchg
test
push
sbb
out
cmp
sbb
adc
jmp
jo
inc
cmps
xor
(bad)
push
mov
sar
lock
and
sbb
aam
or
cmp
outs
ja
jmp
in
inc
shl
inc
and
mov
pop
add
or
fdiv
test
ret
xor
imul
sub
add
mov
mov
inc
fimul
fs
dec
jo
mov
mul
mov
scas
dec
retf
or
aad
sbb
sub
push
pop
mov
jg
test
sbb
add
dec
in
lods
xor
div
bound
in
cld
push
je
ds
mov
scas
add
dec
cmp
pushf
xor
scas
sbb
(bad)
idiv
and
or
push
mov
ss
xchg
hlt
outs
cmp
push
mov
test
push
sub
fs
push
cmp
jmp
or
jle
in
outs
push
add
jmp
pop
fistp
loop
and
into
es
jmp
movs
inc
dec
popf
mov
movs
push
jne
adc
popf
ins
sub
retf
ds
push
jge
jge
push
push
add
mov
xor
sti
mov
xor
loope
or
jle
jmp
je
call
stc
xlat
ret
leave
movs
and
pop
pop
inc
xor
cld
and
mov
pop
mov
push
pushf
push
dec
std
adc
fwait
mov
(bad)
retf
lahf
ins
pop
fdiv
je
add
cmc
add
leave
retf
xchg
pop
call
sub
push
or
xchg
test
call
sbb
inc
mov
adc
in
(bad)
xor
ficom
and
jg
mov
sub
mov
pop
mov
mov
xchg
push
popf
pop
dec
and
es
xor
pop
push
in
mov
stos
and
pop
mov
pop
bound
sub
cwde
push
sar
aas
into
xchg
push
mov
push
cmp
leave
add
pop
lea
pushf
push
jg
jae
sti
dec
or
pop
dec
enter
aad
fs
rcr
popa
and
adc
push
xlat
iret
inc
xchg
jne
pop
sbb
stc
and
dec
sbb
fisttp
adc
ds
adc
mov
add
mov
push
lahf
or
xchg
aad
fsub
scas
sub
inc
pop
push
jmp
inc
movs
pop
stos
add
int3
ss
mov
push
(bad)
fisttp
sub
in
les
fsubr
ins
xchg
sbb
(bad)
stc
add
mov
pop
push
cmp
adc
in
inc
out
dec
or
sti
mov
sub
fistp
sub
neg
xchg
aaa
loopne
cwde
repnz
cmp
xchg
sbb
cmp
sub
cmp
dec
xchg
shr
enter
mov
lahf
xor
jmp
sbb
push
das
mov
ja
add
scas
jmp
and
xor
cmc
add
jnp
cld
(bad)
or
outs
dec
out
xlat
or
sub
xchg
inc
outs
das
call
jmp
sub
into
stc
inc
mov
cld
rol
sbb
movs
xor
add
loopne
loopne
pusha
(bad)
out
dec
and
pop
call
mov
jl
int
xchg
lods
(bad)
shr
mov
mov
repz
adc
mov
(bad)
jae
sar
retf
xor
fld
push
xchg
repnz
pcmpeqd
jbe
(bad)
mov
xor
sub
leave
call
push
daa
int
pushf
enter
push
inc
(bad)
ret
loopne
inc
and
mov
(bad)
lods
or
mov
inc
dec
jp
mov
jmp
call
adc
cmc
cdq
dec
fdivr
outs
xchg
imul
fild
pop
sub
test
hlt
mov
sub
jmp
sub
hlt
ja
add
cli
bound
jo
mov
out
das
hlt
pop
cld
mov
and
stos
das
cmps
jle
sbb
out
dec
mov
xchg
push
mov
push
loope
call
adc
addr16
cs
jnp
sub
and
std
or
cmp
xor
fimul
mov
mov
ds
idiv
shr
pop
ret
push
leave
(bad)
clc
inc
ss
adc
js
mov
in
fld
into
ins
mov
add
mov
adc
mov
ins
shr
test
push
jns
xor
sahf
jmp
xor
jb
cmp
jl
add
mov
outs
jnp
sub
lahf
dec
dec
mov
outs
inc
lahf
adc
cmp
hlt
xchg
dec
xlat
sahf
and
cmps
out
cmc
bound
test
xor
cmp
aaa
jbe
popa
dec
jle
or
call
leave
fcomp
cdq
mov
cmp
inc
xchg
fs
mov
mov
mov
jbe
jecxz
dec
cmps
push
mov
aam
stos
fcom
(bad)
inc
sub
gs
and
dec
inc
lods
push
push
retf
adc
mov
les
gs
pop
xchg
ins
add
cdq
in
and
fiadd
std
mov
leave
aaa
sbb
movs
fld
push
dec
lds
fsubp
ss
cmc
dec
xchg
dec
retf
addr16
mov
ret
adc
and
daa
xor
pop
cmc
cmp
sbb
out
mov
push
lds
cmp
add
cmp
jns
retf
out
inc
dec
in
jle
int3
popa
xchg
addr16
ret
aas
call
push
jae
jecxz
mov
neg
mov
cmps
lds
and
(bad)
iret
push
adc
aas
leave
sar
adc
pop
(bad)
jge
inc
popa
pop
dec
(bad)
fnstenv
in
fst
jnp
lahf
cmps
test
push
push
mov
sbb
push
inc
shl
inc
cdq
inc
jle
cmp
push
loopne
cld
cmp
aam
and
pop
ret
push
sub
mov
push
jge
cmp
fwait
mov
jns
sub
mov
test
int3
inc
inc
jo
cmps
ins
clc
cdq
lea
push
mov
and
cmps
lods
sbb
inc
mov
sbb
dec
inc
xchg
(bad)
cmp
adc
aas
call
outs
pop
sbb
scas
fs
lea
mov
xchg
aad
push
(bad)
mov
sahf
xor
pop
push
inc
jns
popa
cld
retf
(bad)
aad
adc
add
pop
icebp
(bad)
(bad)
cmc
xor
(bad)
fild
(bad)
jmp
jecxz
aam
jge
push
mov
scas
mov
ror
shl
iret
ror
jb
dec
sub
shl
retw
ja
mov
or
test
fwait
pop
jecxz
imul
xor
pop
pop
and
cmp
dec
das
dec
jno
xchg
lahf
sub
les
pop
push
cs
jmp
mov
or
sbb
ror
add
clc
iret
mov
leave
sub
and
jmp
push
daa
pop
cld
mov
sub
dec
sub
cmp
sub
and
jge
shr
or
push
(bad)
fisttp
int3
mov
add
shl
(bad)
cmp
inc
(bad)
and
cmp
mov
sub
mov
mov
mov
jne
and
aaa
fsubr
(bad)
popa
xchg
mov
fidiv
xor
int
lods
sti
or
ins
dec
push
(bad)
int3
sub
pop
cs
aaa
xor
xor
div
pop
mov
xor
aad
loope
ja
cld
in
in
inc
adc
lahf
mov
loop
test
jno
sar
clc
mov
iret
and
test
rol
pop
push
cmps
inc
dec
adc
aam
jns
jo
retf
pop
inc
movs
stos
repz
in
xor
leave
mov
pop
vmaxsd
xor
mov
push
leave
int3
daa
jb
gs
cmps
out
push
inc
fst
sbb
test
cmc
jae
fwait
loop
ja
rol
mov
dec
(bad)
and
or
add
sbb
sti
(bad)
pop
retf
push
pop
mov
inc
inc
inc
cmp
mov
xchg
aas
adc
sahf
mov
test
inc
dec
test
sar
pop
sbb
aas
mov
sub
call
in
(bad)
add
mov
add
aad
mov
dec
and
mov
xor
call
ror
sub
and
aaa
xchg
and
xor
xchg
mov
lahf
push
nop
sub
jle
retf
push
cmp
sbb
fistp
cmc
repz
retf
out
addr16
or
pop
push
pop
sub
rcr
into
inc
scas
(bad)
popa
popf
mov
or
in
scas
inc
movs
aaa
outs
pushf
push
jl
push
std
lods
or
or
or
jle
xor
(bad)
cmc
ffree
or
test
movs
cmp
mov
cld
sub
aad
cmp
aaa
mov
int3
push
jb
or
mov
push
in
test
mov
icebp
dec
fild
dec
imul
(bad)
iret
mov
mov
mov
sub
test
shl
out
xchg
rol
dec
or
idiv
sub
stos
outs
ror
js
push
mov
add
xor
sub
cwde
neg
ss
mov
rol
arpl
scas
xchg
push
xchg
mov
xchg
push
pop
js
out
mov
xor
(bad)
es
out
loopne
xor
pop
mov
mov
je
cmps
pop
cmc
dec
sbb
aas
cmp
stc
sbb
lods
jno
cmp
adc
leave
sub
mov
iret
dec
pusha
in
leave
inc
jg
jg
mov
lds
adc
dec
xor
and
pop
xchg
rol
fstp
sub
popa
inc
pop
call
lods
(bad)
out
pusha
rcr
fwait
into
inc
clc
fistp
loopne
pop
adc
push
adc
mov
xor
stc
fistp
scas
fst
movs
jge
les
mov
test
arpl
push
mov
out
hlt
dec
lea
and
mov
ror
fadd
push
out
movs
cmp
fs
push
adc
push
cmps
cli
popf
mov
mov
arpl
lods
or
push
cmp
aaa
cdq
test
test
inc
add
cmp
ffreep
cmp
pop
pusha
add
(bad)
(bad)
leave
pop
dec
inc
xchg
(bad)
retf
ja
(bad)
clc
fwait
aaa
clc
cmp
sub
fild
rcr
pop
add
stos
icebp
aas
pop
jp
mov
cli
(bad)
mov
out
pop
stos
mov
dec
shl
sbb
push
mov
dec
pusha
pop
(bad)
jg
pushf
adc
mov
lds
jge
xchg
sbb
xor
imul
loope
or
aaa
xchg
aam
jmp
xchg
jb
aam
loope
leave
leave
out
pop
fstp
mov
int3
call
movs
stos
arpl
xor
cmps
adc
in
jl
dec
mov
xlat
mov
pop
pusha
mov
cmp
outs
(bad)
ds
stc
pushf
or
xchg
adc
cmp
push
xchg
sbb
jo
leave
call
sub
cmps
pop
inc
pop
dec
mov
test
adc
mov
fnstenv
stos
sar
fwait
dec
mov
aam
div
mov
pop
or
bound
jbe
cmc
out
loopne
daa
push
loope
cwde
mov
adc
pop
out
bound
jge
mov
fnstcw
(bad)
jo
jg
xchg
(bad)
jbe
cs
mov
cmp
mov
cmps
cmp
les
scas
jns
js
push
inc
int
xchg
sub
inc
lods
mov
jns
call
cmp
dec
mov
out
int3
mov
push
sub
mov
xor
repnz
cmp
mov
sbb
pushf
(bad)
xor
mov
rep
add
mov
pop
mov
mov
sbb
mov
push
test
jecxz
push
aas
nop
mov
lds
fwait
ret
int
fcmovb
adc
inc
push
xchg
pop
xchg
jne
lds
mov
or
into
or
pop
mov
mov
cdq
pop
fisttp
fdivr
popf
xchg
jp
push
pinsrw
push
mov
fnstsw
push
aaa
popf
rcl
mov
mov
adc
lock
mov
inc
arpl
xor
sub
dec
out
stos
imul
aad
sar
or
sbb
lock
ins
into
xchg
inc
xlat
xor
repnz
cwde
jmp
mov
cmc
jmp
cmps
pop
xchg
jle
ins
push
cmp
sub
cmp
add
adc
sbb
push
fld
adc
les
call
ins
adc
cli
mov
pop
fcomi
mov
adc
cmp
out
pusha
inc
jle
iret
dec
adc
das
repnz
dec
fsub
popa
shr
repnz
pusha
mov
dec
fidiv
mov
retf
or
and
push
or
mov
clc
inc
aas
mov
mov
sub
pop
in
stos
push
addr16
sbb
inc
mov
pop
shr
sti
arpl
or
add
std
call
repz
test
jno
pop
push
add
mov
dec
mov
mov
bts
sub
outs
rcl
repz
push
test
xor
push
cli
jp
mov
push
pop
out
lods
xchg
push
jp
push
fisttp
out
in
pushf
and
(bad)
rol
xchg
pop
push
adc
mov
xor
mov
mov
push
pop
aad
inc
shl
(bad)
fimul
and
sbb
sbb
sahf
outs
pop
inc
jns
adc
ins
rcl
loopne
sbb
xchg
out
aad
lock
ret
lods
cli
lock
cdq
stos
ss
popw
sbb
push
xchg
or
mov
cwde
push
dec
inc
rcr
fs
into
shl
dec
lock
jge
ins
xor
in
(bad)
sub
dec
dec
sbb
es
inc
adc
pop
loopne
stos
sub
mov
int3
add
jb
dec
inc
push
mov
and
or
movs
sbb
cmp
jo
cdq
adc
pop
or
xchg
in
or
sbb
into
mov
(bad)
add
call
push
sub
add
addr16
daa
mov
es
es
push
pop
push
retf
je
add
xchg
cmp
mov
popf
mov
fisubr
rcr
out
popa
cmp
out
jnp
and
fldenv
or
push
mov
mov
call
adc
cmp
mov
or
mov
(bad)
xor
je
push
sub
add
dec
std
sbb
xor
nop
pop
test
xor
int
pop
(bad)
aam
fldcw
push
push
lock
(bad)
loop
retf
mov
dec
xchg
pop
lock
out
xchg
sbb
pop
loop
loope
inc
retf
sub
mov
jne
inc
mov
dec
or
xor
fidivr
xor
hlt
push
jns
ret
sbb
mov
jae
mov
sbb
dec
mov
popa
mov
xchg
cld
loopne
sbb
pop
fwait
mov
loope
repz
jns
add
fs
pop
(bad)
lock
cmp
sbb
retf
jo
pop
xor
inc
xor
popf
mov
jbe
jg
mov
jno
inc
mov
mov
movs
jae
fs
imul
sub
xor
das
pop
test
push
xor
sub
jns
inc
fcomp
mov
cmp
cmps
cdq
popf
add
and
add
xchg
aam
push
mov
lods
leave
data16
ror
je
cwde
and
rol
test
call
cmp
movs
pushf
pop
dec
or
xchg
jae
jmp
mov
lods
mov
pop
xor
sbb
mov
aad
pop
mov
jg
cmps
xchg
xlat
out
mov
push
jp
adc
popa
mov
jecxz
cmp
stc
in
xor
mov
dec
cmps
lds
xor
jns
cmp
ret
js
sub
pop
jecxz
pop
add
repz
adc
cmc
xor
push
jle
nop
stc
loope
xor
pop
ds
mov
test
push
test
in
xor
pop
int
nop
or
xchg
arpl
jp
xchg
push
mov
jno
pop
hlt
or
push
repnz
inc
popf
inc
jle
seta
inc
cmp
and
push
retf
pusha
sar
push
jae
push
loopne
adc
xor
enter
mov
push
(bad)
stos
xchg
aam
cmps
es
(bad)
(bad)
mov
mov
adc
sub
and
jae
or
dec
loopne
ss
shr
je
jmp
movs
ss
lock
cs
add
mov
xor
mov
das
retf
(bad)
jecxz
mov
push
mov
mov
pop
iret
loop
shl
rcl
in
scas
fild
pop
and
in
or
mov
pusha
mov
cli
or
inc
or
nop
dec
arpl
fstp
mov
push
aad
jle
loop
adc
or
inc
pop
retf
sbb
adc
push
xchg
xor
ret
call
(bad)
ins
push
test
mov
add
in
sbb
dec
imul
stos
jle
jle
dec
lock
shl
cwde
push
xchg
in
out
daa
push
sbb
inc
imul
inc
sti
xchg
int
repnz
scas
adc
mov
test
cmc
outs
or
daa
push
pop
cmp
out
dec
and
bound
out
shl
stos
movs
fisubr
les
xchg
pop
sub
inc
test
mov
xchg
loop
sub
loopne
adc
xchg
jns
outs
in
test
jp
sub
mov
jno
sub
xchg
or
dec
mov
(bad)
xchg
ror
loop
mov
dec
sbb
cmp
cmp
fwait
cmps
stc
sub
push
pop
das
jp
push
adc
mov
fdivr
outs
adc
lods
shr
cmp
xor
rcr
mov
jmp
mov
cmp
or
mov
(bad)
mov
ret
js
movs
jmp
mov
jecxz
aam
movaps
mov
add
dec
mov
cmp
sbb
ins
shl
adc
dec
pop
inc
push
xchg
and
mov
push
sub
push
mov
mov
leave
jmp
imul
dec
add
xchg
ins
adc
jmp
in
dec
dec
inc
xchg
(bad)
retf
mov
pop
mov
aam
ror
xchg
bound
and
fstp
and
fwait
jle
adc
and
icebp
(bad)
jnp
pushf
mov
fwait
int
lahf
sbb
xchg
add
xchg
in
test
bsr
sbb
adc
mov
adc
nop
in
dec
jle
outs
aaa
mov
into
inc
imul
mov
adc
clc
imul
adc
rcl
xor
xor
xchg
fiadd
xor
xor
mov
adc
cmp
and
retf
sti
xchg
ds
jp
loopne
hlt
fbld
fdivrp
xchg
xor
add
(bad)
shl
inc
fiadd
(bad)
stos
aaa
mov
adc
xchg
ins
inc
dec
jp
xlat
mov
stos
loope
sbb
out
push
xlat
aam
push
inc
adc
test
outs
fsub
cwde
fnstcw
jmp
and
(bad)
call
pushf
clc
addr16
lods
jmp
dec
loop
(bad)
push
inc
enter
(bad)
(bad)
mov
cmp
aam
sub
xchg
pusha
imul
jo
out
mov
fbld
out
pushf
in
rcr
ror
pop
es
jl
xor
xor
and
int
adc
fucompp
jbe
out
cmp
or
aad
sar
call
sub
pop
jb
and
mov
lods
mov
aas
lahf
mov
aas
sbb
mov
cmps
fwait
(bad)
mov
cli
jmp
mov
cs
test
pop
adc
lds
push
fcmovne
sbb
out
sbb
les
or
adc
pop
mov
adc
mov
add
pop
dec
icebp
mov
not
sahf
pop
leave
ja
in
sbb
imul
or
push
clc
shl
dec
lods
mov
or
pop
mov
inc
mov
popa
daa
retf
push
in
cmp
cmp
std
mov
push
ins
fdiv
adc
out
(bad)
loopne
stos
cmp
jne
xchg
and
and
int
int
ins
call
in
lods
mov
dec
mov
mov
inc
test
movs
cmp
and
add
js
clc
push
mov
xor
inc
mov
push
push
loopne
sbb
retf
outs
fild
xchg
sbb
std
fcomp
sbb
pop
add
(bad)
popf
scas
jle
bound
ret
or
movs
jbe
or
push
shl
sub
sub
cdq
fcmovb
mov
adc
fsubrp
sub
fcmovnb
test
push
mov
nop
inc
retf
ret
sti
or
jecxz
pop
std
sbb
lock
pop
jmp
fidivr
xor
es
jb
jne
cwde
jl
push
mov
sub
popa
or
add
mov
jae
jno
mov
xor
add
cli
repnz
outs
in
mov
fst
aam
mov
shr
and
dec
fsub
jne
cmp
mov
mov
inc
sbb
pop
dec
cli
mov
cmp
or
pop
xchg
sub
lea
mov
mov
leave
popa
fptan
push
push
mov
int
stos
das
adc
xchg
xchg
jmp
fiadd
stc
xor
repnz
adc
mov
jno
push
mov
sub
inc
ins
or
sub
add
pop
sbb
mov
mov
dec
mov
fistp
clc
cmc
and
mov
xchg
idiv
dec
mov
jae
add
jnp
out
add
sbb
mov
or
dec
sar
nop
pop
call
call
mov
pop
call
repz
mov
push
movs
int3
js
das
(bad)
enter
mov
ja
mov
sbb
test
xchg
in
pop
test
push
jecxz
loope
inc
pop
lods
mov
out
div
int3
dec
je
rcl
dec
into
dec
inc
cmp
sbb
retf
repnz
gs
cwde
and
shl
mov
mov
cmp
push
push
jmp
lar
mov
fld1
dec
pop
xchg
out
icebp
cli
sbb
cmps
mov
pop
into
leave
fstp
je
xchg
dec
push
ja
cmp
push
icebp
enter
sub
jmp
sbb
(bad)
mov
ret
mov
fidivr
(bad)
mov
add
arpl
fld
xor
sbb
lock
xor
mov
icebp
daa
jnp
mul
popf
movs
pop
sbb
mov
sar
rol
pushf
pop
fstp
cmp
add
xor
add
sbb
or
cld
jno
add
inc
in
jns
loope
je
jecxz
xchg
jno
cld
pop
inc
mov
mov
push
movs
adc
inc
aad
push
jno
shl
xor
sub
call
cmp
xchg
(bad)
and
stos
and
and
gs
xchg
inc
and
jne
lods
lods
icebp
std
sub
push
loop
cmc
cmp
mov
mov
xchg
es
jo
mov
push
push
data16
std
xchg
ror
xor
sub
xchg
pop
inc
stc
hlt
das
sti
pop
scas
not
cmp
inc
mov
jg
(bad)
fstp
test
call
inc
pop
xchg
mov
dec
sbb
mov
outs
mov
bound
add
dec
in
fwait
inc
xor
dec
lahf
(bad)
fsubr
and
mov
les
dec
ins
mov
cmc
sub
in
ja
and
mov
pop
shl
add
(bad)
test
or
add
into
push
out
lods
and
cmps
cmp
cmps
cmp
dec
mov
not
sbb
cmps
repnz
dec
jne
inc
(bad)
clc
or
scas
cli
mov
je
mov
mov
pop
add
dec
das
aad
dec
add
mov
daa
test
sub
ror
push
lea
xchg
jg
pop
push
sar
xor
fsubrp
or
xor
and
lods
cmp
pop
dec
mov
lds
pop
stos
cmps
and
test
les
add
mov
inc
dec
fisubr
ror
mov
lods
imul
push
mov
aaa
loop
pop
cmc
shr
sub
(bad)
out
jmp
mov
call
jno
fisttp
and
sub
xchg
mov
cmp
jb
jl
ins
scas
pop
push
xchg
add
jae
test
and
aas
test
cwde
xor
push
inc
or
call
push
mov
xor
shl
icebp
arpl
(bad)
xor
mov
xchg
jnp
test
sbb
push
xchg
or
dec
addr16
(bad)
rol
ins
aad
pusha
std
sub
popf
jg
inc
out
pop
repnz
sbb
mov
es
fiadd
rcl
mov
and
or
movs
or
adc
pop
ffree
mov
push
jns
call
fstp
loope
and
pop
adc
adc
dec
push
pop
movs
fld
rcl
repnz
push
push
test
mov
lods
adc
shr
mov
xlat
ud2
out
push
mov
inc
sbb
jnp
mov
add
scas
cmp
jno
loopne
add
in
sbb
mov
not
cmp
cmp
mov
sti
daa
sub
bound
sub
mov
pop
into
jmp
inc
std
jmp
in
in
mov
jns
jmp
dec
mul
retf
xchg
in
rcl
fnstenv
aas
aad
in
ins
test
rcr
sbb
sbb
cli
sub
dec
jl
into
cmp
adc
push
mov
or
dec
cmp
repz
jno
ds
lods
jb
mov
aad
inc
(bad)
fidiv
psllq
bound
arpl
rcl
enter
out
and
mov
mov
pop
mov
mov
fwait
(bad)
loop
les
push
pop
ficomp
pop
arpl
sub
fstp
stos
(bad)
jecxz
xor
xor
mov
test
jmp
or
push
adc
mov
push
loopne
mov
pop
and
mov
scas
daa
lods
sbb
retf
dec
cwde
dec
(bad)
pop
ficom
pop
mov
and
out
dec
and
js
adc
ret
outs
mov
and
les
xor
sbb
nop
xchg
das
jmp
int
test
adc
scas
aas
jne
inc
xchg
push
shl
pop
or
push
and
xor
ds
daa
outs
popf
ror
mov
sti
mov
pop
lods
adc
pop
dec
cwde
fs
stc
aam
mov
pop
cmp
mov
mov
sbb
inc
or
pop
clc
xchg
jecxz
fdivp
sub
jb
mov
dec
jge
pop
jg
push
xchg
push
jbe
mov
cmp
aad
xchg
or
jle
sbb
mov
dec
push
mov
pop
and
pop
jmp
inc
dec
jbe
xchg
pop
push
cmp
in
call
jne
bnd
mov
dec
leave
or
inc
add
fstp
xchg
add
(bad)
mov
lods
inc
or
xor
adc
xor
outs
cmp
(bad)
je
jmp
repz
jmp
cmp
dec
dec
cmp
jp
jae
ins
pop
fs
ds
lock
inc
arpl
pop
cld
lods
ret
mov
sbb
xchg
das
inc
mov
sbb
dec
mov
xor
ja
pushf
dec
aaa
test
test
lea
pop
aad
push
xlat
fcomip
fidiv
pop
fistp
or
dec
sti
jns
xor
mov
sbb
out
ret
(bad)
xor
in
xor
mov
inc
outs
sar
jle
imul
ficom
inc
push
retf
sar
fwait
shr
mov
addr16
cdq
stos
cwde
sbb
popf
sbb
lds
push
out
imul
int3
in
sbb
pop
fstp
sbb
adc
test
repnz
addr16
push
push
ficom
shl
pop
pop
test
test
leave
cmp
data16
hlt
int3
mov
ds
add
enter
bound
dec
leave
daa
and
dec
pusha
xchg
add
push
mov
jmp
mov
lods
inc
daa
std
push
loop
xchg
add
jp
pop
pusha
push
mov
pop
das
arpl
cmp
mov
dec
ret
mov
icebp
pop
pop
xchg
loopne
xchg
cmp
(bad)
inc
jmp
jbe
(bad)
sbb
xchg
aad
or
outs
outs
arpl
cmp
cmp
inc
inc
outs
div
jne
push
mov
sbb
rep
mov
mov
inc
push
mul
pop
retf
push
repz
jbe
xchg
hlt
xor
fs
or
test
push
shl
jecxz
div
icebp
pop
pop
jge
je
push
xor
mov
dec
div
xor
push
cld
mov
out
push
jmp
sar
xchg
clc
std
dec
in
push
(bad)
sbb
xchg
test
adc
jle
xchg
js
cdq
jl
xchg
or
adc
fdivr
lahf
sbb
inc
or
lds
sub
add
fnstcw
inc
or
add
mov
hlt
inc
push
jge
add
cli
fadd
pop
lock
jo
and
jne
loope
dec
out
dec
xor
cmp
xchg
pop
dec
cmc
(bad)
adc
stos
jecxz
dec
mov
push
cld
or
mov
mov
cmp
pop
xchg
inc
xchg
xor
aaa
and
inc
aas
int
movs
std
das
icebp
clc
movs
push
push
pushf
fimul
idiv
out
cmp
push
jge
out
stc
xlat
jg
mov
mov
push
retf
repnz
and
mov
fisttp
mov
es
add
int3
(bad)
movs
sar
jecxz
loop
xor
xchg
sbb
in
hlt
sbb
mov
jae
cmp
mov
ins
sub
dec
mov
test
out
dec
test
fild
pop
shr
imul
inc
fld
push
je
xchg
mov
adc
ins
ror
and
push
xor
sub
daa
stos
lahf
sbb
mov
scas
into
sahf
jnp
dec
or
repnz
adc
sub
dec
enter
mov
movs
inc
cmp
(bad)
sbb
retf
not
cmps
jge
sbb
iret
outs
hlt
xchg
jae
dec
and
jne
push
enter
iret
add
(bad)
(bad)
jae
clc
pop
mov
cmp
jl
mov
retf
loopne
imul
cmps
pop
(bad)
pop
mov
xor
xchg
add
dec
div
sbb
mov
adc
call
les
sbb
mov
mov
ret
rcr
inc
sbb
mov
aaa
inc
test
and
inc
jmp
jecxz
int3
push
clc
ja
rol
cmp
push
jns
push
xor
jle
cmp
out
and
in
lea
sub
mov
sub
adc
pop
sub
scas
scas
mov
inc
stc
aas
lods
aad
scas
icebp
repz
daa
or
sti
pushf
pop
xchg
ret
sbb
daa
popa
les
fs
lods
push
retf
jno
aaa
enter
push
int
das
mov
or
cmp
in
jp
dec
xchg
fsubr
pop
xchg
lahf
or
push
mov
test
inc
pop
sahf
clc
and
pop
ds
pop
inc
xchg
inc
mov
jnp
inc
xor
daa
sti
inc
xchg
out
adc
add
das
adc
clc
inc
xchg
and
(bad)
fimul
sbb
rol
sub
inc
ins
inc
test
aam
sbb
sbb
in
cs
pop
fcomp
jl
cmps
ins
ss
sbb
jp
(bad)
sbb
push
xor
mov
mov
dec
push
dec
in
push
and
xor
add
xchg
push
adc
(bad)
mov
ret
(bad)
push
jmp
mov
cmp
xor
dec
xor
into
cmp
mov
stc
adc
add
fsubr
int3
and
mov
out
ficomp
out
cmps
pop
mov
scas
jl
icebp
jnp
(bad)
cmps
push
daa
shr
xchg
cmp
sbb
dec
xchg
pop
fwait
lea
gs
sub
out
retf
dec
movs
fsubr
xor
dec
out
jmp
fs
jae
jmp
into
mov
pusha
push
cmps
icebp
mov
sub
xor
test
fisub
mov
cmps
xchg
daa
add
jo
pop
ret
je
jmp
push
lock
out
pop
mov
add
ins
cmps
sti
push
mov
jg
sbb
cmc
(bad)
in
jp
jecxz
and
push
mov
xor
xlat
aas
inc
in
push
xor
sub
scas
xor
pop
cmc
cmps
xor
jmp
cmp
in
jo
and
sahf
rcr
addr16
jo
shl
(bad)
sub
push
jge
inc
dec
adc
cli
mov
xchg
mov
(bad)
(bad)
shl
int3
into
int
xor
mov
xchg
adc
cld
adc
dec
cmc
pop
jecxz
and
lds
(bad)
mov
mov
imul
mov
stos
(bad)
sti
sbb
add
bound
aam
hlt
push
lahf
xchg
pop
mov
push
mov
int3
shl
jb
(bad)
gs
pop
sbb
repz
(bad)
jl
loop
mov
inc
jno
lahf
mov
hlt
sbb
push
adc
cli
jle
pop
pop
push
cmps
ret
add
mov
lock
jecxz
jmp
jbe
rcl
mov
cli
jg
mov
shl
data16
cmp
and
test
call
or
mov
cs
sbb
and
call
inc
test
jbe
xchg
je
test
mov
and
cmp
leave
adc
data16
add
or
sub
push
stos
and
cs
fldcw
retf
mov
sbb
clc
mov
cld
ja
loop
in
(bad)
in
inc
xor
cld
cmp
mov
pusha
add
fmul
lahf
out
in
les
std
mov
dec
adc
js
mov
nop
jg
jmp
push
ja
in
adc
add
iret
add
jg
clc
adc
sub
mov
sub
sbb
cdq
sub
jne
retf
jbe
and
out
xchg
pushf
pop
mov
sbb
cmp
cwde
adc
or
fwait
repz
add
jecxz
adc
inc
int
jb
out
dec
cmp
fsubr
test
add
pop
jne
xchg
out
xor
imul
jl
rol
sbb
les
xor
mov
movs
repz
sbb
sahf
lds
popa
pop
and
or
pop
dec
mov
imul
push
cmps
and
pop
loopne
rol
ja
add
sbb
xchg
inc
mov
hlt
pop
cmc
mov
inc
mov
lods
inc
xchg
(bad)
hlt
pop
sti
jmp
mov
fcmovne
loop
push
lods
xchg
inc
pop
enter
(bad)
xchg
push
inc
cmp
gs
ja
sub
add
rcr
ret
sbb
pushf
inc
mov
imul
lds
sub
popa
mov
push
aad
stos
mov
cdq
xchg
test
sti
xor
push
cmp
in
mov
mov
dec
pop
and
(bad)
dec
jno
jns
push
in
lock
jne
lock
mov
sub
ret
xor
push
imul
xchg
movs
xchg
push
bound
jb
cdq
(bad)
lahf
(bad)
ins
ret
cli
fstp
addr16
and
sub
or
add
(bad)
dec
ffreep
fdivr
jno
push
xchg
mov
lods
and
xor
push
and
add
push
sbb
repz
jp
mov
lock
xchg
lea
out
scas
aam
nop
inc
in
enter
movs
enter
bound
(bad)
cmp
arpl
pop
mov
mov
inc
sahf
mov
xacquire
jb
xor
js
push
out
les
xchg
div
push
test
xor
aad
neg
enter
or
inc
add
mov
add
mov
sar
popa
mov
adc
aad
and
rcl
mov
cs
jns
sub
movs
dec
lods
push
scas
lods
stc
mov
rcl
cmp
inc
aad
push
scas
ficomp
mov
test
push
aaa
mov
sbb
xchg
add
jl
icebp
cmp
dec
jge
jecxz
stos
iret
pop
(bad)
stc
mov
mov
cmp
pop
sbb
loopne
call
push
icebp
(bad)
lock
iret
leave
jp
aam
loope
add
ror
push
mov
push
fwait
test
ds
mov
mov
mov
pop
xchg
shl
fidivr
loope
xchg
test
(bad)
sub
gs
fidivr
in
bound
mov
movs
aaa
dec
(bad)
pop
push
mov
daa
pop
push
mov
jns
(bad)
pop
(bad)
jp
inc
add
cli
mov
loop
enter
leave
adc
push
lea
xchg
jbe
or
ror
repnz
movs
sub
push
sub
dec
jmp
sahf
dec
cdq
iret
data16
test
in
loopne
cwde
jnp
cmp
pop
or
adc
cli
(bad)
call
repz
es
jg
mov
adc
loope
push
jo
lock
jle
int
sub
inc
adc
cld
mov
dec
sub
repz
jb
mov
hlt
jmp
ror
or
jmp
aad
push
and
inc
xor
jmp
xchg
inc
jae
js
ds
inc
dec
cwde
fdiv
dec
push
or
ds
hlt
xchg
add
imul
and
mov
bound
adc
js
jg
out
push
in
sub
or
or
out
and
lods
test
push
fidiv
ds
fucomip
out
xor
or
scas
xchg
shl
(bad)
mov
pop
xor
add
dec
fcom
push
push
nop
retf
outs
test
movs
pop
ret
cmps
add
in
ins
addr16
fld
jns
mov
add
lahf
adc
xchg
into
repnz
iret
cli
and
in
add
cmp
add
rcl
sti
popa
test
cmp
repnz
movs
mov
cmps
sbb
jbe
xchg
(bad)
fcomp
retf
mov
rcl
movs
stc
sahf
jmp
jg
je
jne
loope
pop
or
data16
mov
xor
loopne
pop
cmp
jns
leave
adc
inc
mov
cld
add
(bad)
test
int
into
fsubr
xor
sahf
mov
jmp
sub
loope
adc
adc
pop
call
out
xlat
rcr
sbb
push
stc
imul
and
cmps
cmp
mov
out
fisub
push
test
inc
leave
sub
push
dec
lds
mov
adc
sti
push
jb
ret
(bad)
popa
iret
and
mov
and
mov
(bad)
mov
and
addr16
cmp
cmp
ins
dec
out
mov
fwait
retf
dec
xor
mov
pop
gs
gs
int
sbb
sub
xor
outs
xor
add
stos
sbb
enter
aas
mov
in
jg
mov
repz
push
sub
xchg
mov
and
mov
mov
dec
cmc
cli
push
jmp
xchg
sub
adc
(bad)
dec
mov
in
aaa
mov
mov
pop
loop
stos
inc
xchg
mov
mov
xchg
mov
sbb
xor
sub
push
inc
imul
jmp
jne
jmp
rol
clc
inc
xchg
test
jl
jae
adc
lock
mov
sub
fdivrp
stc
out
lahf
int3
cmp
mov
cmp
aam
add
movs
jae
test
test
loop
inc
inc
and
sahf
xor
inc
mov
push
sbb
pushf
adc
inc
and
sbb
xor
mov
dec
xlat
ja
cli
jg
in
mov
int3
and
sbb
inc
cld
pop
mov
ret
sbb
dec
inc
push
daa
sub
mov
jecxz
jecxz
push
push
jo
jne
(bad)
sahf
xor
adc
fcomp
fst
les
xor
outs
xchg
dec
and
sbb
ficom
xchg
xor
sbb
ror
xor
add
outs
aam
in
mov
xchg
jno
xchg
and
dec
fmul
adc
or
ins
jmp
adc
(bad)
jno
push
pushf
test
les
rcl
(bad)
scas
(bad)
and
xchg
iret
test
movs
cld
pop
repnz
sar
loop
mov
xor
out
push
lea
gs
sbb
arpl
ins
push
inc
loope
mov
cli
mov
mov
xor
rcl
bound
sbb
add
mov
fmul
sti
cmp
mov
cs
inc
xor
xchg
mov
inc
retf
sub
xchg
dec
or
sbb
add
push
and
jg
call
popa
mov
adc
sbb
data16
jbe
mov
pop
mov
sbb
pushf
or
jno
mov
xor
lock
aas
in
and
mov
ja
nop
js
cmp
inc
in
imul
add
jne
bswap
scas
pop
(bad)
xchg
imul
push
xor
in
mov
cmc
popa
lahf
jno
mov
inc
pushf
ficomp
pop
dec
sbb
dec
dec
add
pop
or
xchg
fld
rcl
pop
inc
fucomip
and
jmp
call
inc
xor
adc
xchg
sbb
mov
int3
xchg
fwait
mov
les
mov
lahf
fucomp
push
inc
push
fistp
xor
inc
fadd
lock
rcl
call
movs
xor
dec
in
(bad)
retf
retf
fild
fcomp
push
mov
(bad)
es
jae
fwait
outs
mov
add
xchg
inc
cwde
jb
pop
adc
inc
ins
jne
fadd
int
sbb
(bad)
fisttp
add
mov
out
xchg
ss
outs
jmp
in
fs
dec
js
out
jg
cmps
sub
jg
sub
mov
sbb
imul
xchg
mov
and
shr
movs
sbb
rol
jmp
cmp
sub
or
sar
inc
jne
add
inc
xor
gs
sub
sub
push
pushf
fptan
jl
or
bound
sbb
ss
jb
fadd
mov
test
(bad)
fist
and
fsubr
xlat
(bad)
rcr
mov
fwait
sbb
jnp
div
mov
xor
and
out
inc
push
popa
pushf
mov
inc
xchg
jno
jne
jecxz
mov
pop
pop
adc
pop
dec
sub
push
mov
and
not
push
mov
aas
test
lds
neg
call
je
lds
stos
add
out
ret
aas
ins
not
xor
inc
cwde
adc
ds
adc
sbb
ret
fild
icebp
js
jle
xor
xchg
inc
jg
push
adc
gs
mov
retf
sar
push
or
popf
ret
adc
jnp
mov
and
scas
popa
outs
neg
xor
fisub
mov
fimul
ss
mov
jmp
cmp
cmp
pop
and
adc
ret
mov
mov
sub
push
outs
xor
xchg
rcl
add
dec
cli
sar
sbb
pusha
mov
enter
sti
retf
repnz
cmps
int
jp
movs
sub
adc
push
test
dec
(bad)
adc
std
sub
ret
sub
adc
xor
cwde
sbb
sahf
in
scas
pop
bnd
(bad)
lock
neg
xchg
dec
mov
imul
call
pop
dec
aaa
xor
je
dec
ins
(bad)
retf
in
xchg
mov
loope
mov
leave
jo
or
mov
push
test
leave
hlt
push
push
clc
inc
ins
mov
inc
push
mov
fcom
pop
pusha
outs
cmp
mov
jmp
sub
mov
cmp
fld
jne
out
stc
(bad)
(bad)
jl
inc
fsub
jmp
stc
xchg
popf
sub
ficomp
(bad)
loope
test
cmp
jmp
cwde
push
adc
sbb
(bad)
xchg
or
xor
dec
and
icebp
ins
dec
sahf
sbb
jge
movs
clc
jb
sbb
popa
aas
ret
mov
jg
in
jno
loope
(bad)
xlat
adc
(bad)
outs
jmp
cmp
arpl
push
xchg
lock
sbb
leave
mov
je
daa
mov
xchg
int
pop
push
jno
inc
bound
push
dec
xchg
stc
mov
das
or
mov
mov
adc
dec
rol
cmp
aaa
mov
(bad)
sub
mov
dec
and
sar
int
test
push
mov
inc
int
jmp
rol
test
mov
xor
push
mov
sub
and
(bad)
pop
mov
adc
pop
dec
or
clc
pushf
pop
leave
push
cmps
imul
rol
pop
push
pop
fadd
dec
sti
mov
sub
mov
jg
push
pop
sbb
jbe
aas
push
fs
or
stc
je
pop
out
movs
push
sub
fcomp
mov
inc
adc
test
int3
sahf
or
shl
(bad)
fidiv
in
mov
sub
fcmovne
les
jecxz
test
daa
inc
into
(bad)
cmp
addr16
sub
push
bound
pop
fldl2t
out
cs
aas
aas
call
movs
mov
mov
lahf
sub
and
mov
mov
sahf
add
mov
ret
dec
retf
fs
mov
inc
sahf
xor
push
jmp
inc
mov
fild
sti
mov
js
js
or
stos
adc
movs
sub
pop
outs
push
into
sub
out
dec
add
mov
jb
sbb
movs
mov
jecxz
arpl
xchg
movs
data16
sub
mov
das
out
xchg
(bad)
neg
cmps
push
push
ja
fnstsw
push
test
imul
xor
(bad)
mov
add
loope
daa
fistp
retf
ret
xor
scas
sub
rcl
mov
lods
outs
pop
in
xchg
mov
(bad)
mov
mov
fisttp
mov
cmc
ins
(bad)
dec
dec
cmp
jae
and
retf
(bad)
leave
mov
xor
pushf
add
outs
jmp
jmp
out
xlat
addr16
gs
adc
addr16
mov
xlat
inc
pop
imul
cs
aas
sub
cmp
fbld
(bad)
mov
test
sbb
gs
mov
rol
jo
imul
icebp
repz
adc
pop
push
das
rcr
sub
out
test
fs
mov
and
bound
in
or
add
mov
aaa
inc
fsubr
fnstsw
fnstsw
(bad)
cs
push
(bad)
or
bnd
adc
dec
push
int
xchg
(bad)
or
cmovg
sub
inc
adc
int3
mov
mov
push
outs
or
jae
ds
loopne
adc
sbb
xlat
out
mov
mov
popa
push
push
mov
call
bound
sub
cmps
rol
jo
mov
dec
es
pop
call
add
hlt
shl
xchg
xchg
or
ja
clc
push
or
repnz
(bad)
sub
lahf
popf
out
adc
popf
pop
aas
xchg
push
push
mov
das
mov
xor
push
pop
cmp
cmp
sub
les
cmp
pop
es
fs
cmp
cs
out
rcl
jge
sbb
es
or
div
dec
repz
adc
data16
out
xchg
inc
mov
(bad)
clc
scas
popf
test
jge
cdq
mov
sub
ret
mov
bound
mov
sub
fnstsw
push
das
(bad)
cld
adc
or
out
outs
sub
outs
inc
push
cmp
es
fcmove
or
(bad)
in
arpl
inc
lds
div
mov
add
addr16
gs
or
test
pusha
pusha
shr
dec
out
std
ds
addr16
adc
push
sub
mov
pushf
and
sub
je
loop
pop
dec
outs
lods
xchg
and
push
jmp
xchg
inc
fwait
inc
inc
pop
xor
push
rol
sbb
mov
mov
sbb
cld
cmp
xor
push
stos
leave
arpl
fsub
xchg
shl
test
or
shr
push
lods
add
repnz
test
das
and
sbb
out
inc
xchg
jo
jg
rol
xor
inc
mov
add
lldt
push
fdiv
jnp
pusha
pop
mov
cmp
and
or
inc
push
ret
adc
adc
jmp
dec
inc
add
mov
inc
pop
push
fwait
mov
xor
dec
shr
mov
cmp
push
or
aaa
movs
pusha
icebp
and
sbb
pop
mov
out
xchg
dec
leave
repz
icebp
cmc
test
mov
call
inc
push
push
adc
and
jbe
les
aas
inc
xor
sbb
sar
inc
adc
and
cmc
inc
sahf
jecxz
lods
es
cmp
loopne
sbb
or
mov
stc
test
lahf
fisttp
sbb
sub
xchg
jmp
cmp
mov
jne
mov
cmp
xor
fdivr
inc
add
cli
stc
jp
push
xchg
xor
(bad)
addr16
popa
push
scas
mov
into
aad
ins
xchg
ins
xlat
(bad)
out
outs
sbb
iret
dec
mov
(bad)
mov
jmp
sti
int3
pop
out
xchg
ret
xlat
je
or
retf
out
add
sub
(bad)
mov
pop
sbb
xor
xchg
and
mov
loope
(bad)
or
mov
xor
jmp
cmps
mov
push
and
xor
jge
dec
movs
or
xor
xor
fist
mov
sub
jp
xchg
loopne
mov
stos
push
shl
cld
mov
mov
add
push
sub
dec
test
iret
jecxz
push
out
push
loop
or
in
ds
xchg
cmps
xlat
cwde
cmp
test
sub
or
mov
out
mov
leave
scas
std
aaa
push
xchg
dec
sahf
das
lea
out
sbb
xchg
push
ja
(bad)
int
mov
sub
into
xchg
cli
je
pop
xchg
adc
mov
add
idiv
xor
pop
sub
addr16
xlat
mov
mov
mov
jo
cli
out
and
cmp
add
dec
aas
cmp
or
mov
mov
addr16
cmove
jno
sbb
ret
cmc
pushf
ret
das
add
jae
ret
lods
adc
xchg
adc
(bad)
lea
add
adc
sbb
xor
adc
lods
sar
fcomp
retf
mov
adc
adc
(bad)
call
test
sbb
call
in
adc
add
sti
outs
jae
pop
mov
xchg
pop
jg
xor
repz
xchg
jae
jbe
(bad)
test
dec
jnp
or
cmp
popa
push
retf
xor
aas
mov
hlt
int3
mov
xor
xlat
test
imul
cli
in
xchg
popa
data16
pushf
data16
outs
popf
enter
push
adc
dec
stos
push
int3
pop
fsubr
jle
add
imul
hlt
dec
add
stc
or
sbb
xchg
sbb
xchg
add
inc
clc
add
adc
dec
into
push
aas
out
or
fisub
popa
push
out
cli
jo
push
or
int
pushf
sub
xor
add
ret
mov
aam
or
ja
and
je
cmp
stc
mov
aad
movs
ror
test
pusha
call
mov
(bad)
fmul
jp
dec
pop
movs
ret
gs
dec
test
(bad)
pop
arpl
sbb
retf
pop
xchg
les
mov
(bad)
pop
pop
dec
push
and
mov
dec
ds
je
jmp
cmp
and
or
int3
arpl
mov
add
adc
cld
xchg
sbb
jbe
stos
mov
mov
mov
xor
cmp
mov
mov
sbb
adc
stos
loope
(bad)
sub
jmp
test
push
push
(bad)
in
push
cmc
gs
js
dec
add
pop
cmp
inc
add
or
jno
adc
test
aas
int
arpl
xchg
sar
out
pop
dec
setbe
push
adc
retf
out
shl
test
jge
int
into
mov
into
jo
inc
daa
je
and
xchg
push
dec
not
loop
xor
fmul
mov
aas
jb
fidiv
push
iret
setnp
and
es
in
xor
(bad)
mov
in
mov
mov
pop
outs
outs
dec
sbb
mov
retf
mov
xor
test
mov
cdq
cmps
mov
aad
out
loopne
xchg
(bad)
fimul
inc
jp
leave
jg
sub
(bad)
cdq
fist
gs
pusha
es
fdiv
xchg
mov
sub
(bad)
in
std
je
into
test
sub
xor
and
ins
popf
and
call
mov
adc
imul
loope
call
inc
(bad)
pop
(bad)
dec
pop
push
jne
mov
xchg
jne
jecxz
jle
dec
dec
push
add
jmp
push
push
dec
sub
rcl
jb
cs
inc
adc
push
gs
and
vmread
add
fst
ret
jecxz
mov
cdq
mov
daa
mov
inc
retf
dec
xchg
push
jecxz
mov
push
loope
in
jp
xchg
xchg
dec
fimul
test
or
and
cwde
inc
cmp
and
dec
addr16
scas
in
scas
cmc
sbb
sbb
das
je
cld
aad
jne
and
inc
dec
mov
dec
fwait
mov
retf
mov
cli
push
dec
xchg
ret
test
add
lods
push
fcmovnu
push
sbb
adc
mov
stos
shl
ins
pushf
push
jl
fcomp
mov
(bad)
pop
je
jns
or
cmp
leave
jmp
jmp
(bad)
in
add
pop
je
mov
loope
(bad)
fs
hlt
or
aam
loope
retf
pusha
(bad)
or
lds
mov
xchg
or
mov
int3
jp
ss
repnz
cmp
(bad)
mov
les
pop
sbb
out
lea
push
xchg
mov
push
inc
push
add
xchg
xor
call
std
mov
push
cmp
(bad)
cdq
push
in
mov
adc
jbe
cmp
push
adc
ret
popf
(bad)
dec
fld
mov
call
loope
add
fwait
and
int3
push
loope
ret
jle
add
sahf
sub
or
mov
int
dec
adc
mov
push
sub
xchg
or
nop
mov
adc
test
inc
scas
lods
sbb
ret
jb
aaa
iret
xor
stos
nop
pop
(bad)
pop
xchg
mov
aas
ret
cdq
xlat
jbe
fstp
mov
daa
or
jl
movs
push
sub
xlat
dec
retf
add
pop
sub
mov
mov
xlat
in
in
gs
add
and
add
mov
pop
je
cmps
push
mov
adc
dec
shr
xor
sbb
push
add
retf
sub
fidivr
popa
(bad)
or
xchg
xchg
je
leave
stos
push
test
push
lock
ret
xchg
aam
movs
mov
mov
or
(bad)
and
imul
lds
jae
ret
pop
and
push
sbb
push
jo
mov
mov
dec
xlat
ins
data16
pop
pop
or
int3
mov
rcl
sbb
mov
hlt
xchg
mov
dec
adc
cmp
mov
cld
aas
xor
push
test
and
xor
or
pop
push
in
std
popf
in
or
stos
movs
(bad)
dec
cmp
sub
fmul
sub
lea
dec
rcr
daa
les
sbb
jne
xor
xor
dec
fldenv
(bad)
add
cs
(bad)
mov
mov
inc
in
or
rol
mov
sti
out
cdq
(bad)
xchg
call
dec
cdq
or
sbb
sahf
mov
inc
aam
push
in
lods
comiss
test
dec
(bad)
repnz
das
jge
inc
(bad)
fimul
stos
js
inc
xchg
sbb
loop
or
inc
or
fidivr
and
dec
sub
in
(bad)
lahf
ror
xchg
ins
idiv
sbb
and
rol
mov
dec
sub
into
scas
bound
xchg
sbb
xchg
stos
lock
sub
sbb
sbb
cs
pop
jno
fadd
jbe
inc
sub
push
mov
cmp
push
push
push
arpl
std
test
nop
movs
jle
lds
out
in
hlt
test
sbb
xchg
aam
lds
shr
jo
mov
jmp
fmul
in
add
int
xor
add
jae
cmp
jo
push
xchg
stos
mov
jb
(bad)
loope
out
xchg
jo
cmp
mov
adc
jmp
jns
mov
hlt
push
pop
pop
movs
test
outs
adc
push
out
cdq
sbb
and
and
jno
pop
dec
mov
adc
or
rol
fsubr
(bad)
dec
jg
sar
stos
cmp
adc
movs
dec
inc
mov
sub
in
cdq
cmp
in
or
cmps
leave
push
sub
ins
scas
add
adc
cmp
push
or
push
pop
jp
jnp
inc
fstp
and
test
adc
sub
dec
mov
jo
push
(bad)
sub
(bad)
mov
push
idiv
(bad)
or
cwde
jmp
jge
adc
aam
inc
adc
xchg
jge
dec
mov
jo
sahf
or
leave
cli
xor
or
and
and
(bad)
xor
inc
movs
sbb
jmp
cld
in
xchg
inc
pop
(bad)
sbb
lods
xchg
and
jnp
adc
inc
mov
fidivr
mov
mov
test
push
cmps
je
and
out
cmps
mov
cdq
xchg
lea
ja
outs
ins
lahf
ss
jns
or
cmp
rcl
ins
dec
xor
cdq
push
in
and
ja
and
das
mov
repz
(bad)
xchg
loope
mul
inc
cmps
popf
jns
add
cmp
mov
inc
mov
push
sub
xor
inc
cwde
fcom
jmp
inc
pop
lock
retf
sub
aam
call
int3
adc
xchg
enter
mov
push
fisttp
pop
add
xchg
pop
xchg
sbb
xchg
loopne
test
aad
and
push
mov
or
dec
cmc
push
std
std
inc
or
jg
xlat
mov
jb
lods
sbb
xor
xor
sub
js
pushf
pop
retf
dec
test
cmps
cwde
fsubr
repnz
std
jo
cs
push
cld
jmp
popa
inc
inc
std
xchg
daa
pop
gs
ret
add
xchg
xchg
add
dec
mov
cwde
repnz
jp
dec
shr
test
or
out
les
leave
mov
stc
jle
das
cmps
ins
prefetch
jl
xchg
or
sbb
and
inc
push
fbld
nop
mov
data16
loope
hlt
pop
sbb
neg
pop
and
cld
xchg
cmp
jge
add
fstp
arpl
cmp
sub
cmc
jp
in
aaa
dec
xchg
pop
or
retf
sbb
xor
daa
jmp
popa
adc
(bad)
sbb
and
call
and
add
sbb
in
xchg
daa
(bad)
cdq
inc
fcomp
cmp
or
cli
adc
mov
and
mov
cs
test
mov
and
das
jbe
ds
mov
fdivr
mov
adc
fs
cld
mov
inc
fiadd
xor
or
xchg
mov
push
cmps
cmps
pop
pop
(bad)
imul
fucomi
jl
jmp
lahf
stos
mov
inc
pop
sub
mov
or
loop
push
adc
pop
daa
out
add
cmc
xor
mov
div
mov
mov
xlat
jg
mov
mov
adc
jns
dec
cwde
int3
mov
bnd
rcl
sbb
retf
cli
sbb
adc
mov
sbb
xor
adc
je
sub
cmps
xchg
in
mov
iret
or
mov
in
test
jo
sar
push
lahf
mov
hlt
sub
ins
scas
or
std
xchg
aam
aam
mov
pop
xor
(bad)
xor
stos
jnp
(bad)
(bad)
cmp
clc
ss
repz
jmp
jmp
(bad)
daa
das
daa
mov
icebp
xor
xor
lds
mov
pusha
pop
mov
cmc
xchg
iret
in
xchg
outs
mov
das
cmp
dec
pop
arpl
pop
add
xchg
ins
pop
sbb
push
(bad)
out
ret
push
pop
push
jb
and
cmp
and
bound
aam
cmps
dec
dec
aad
stos
pop
rcl
mov
sbb
push
mov
(bad)
lods
inc
mov
add
or
fnstenv
sub
das
or
es
sub
retf
jle
pop
fst
and
add
add
hlt
loop
cs
cs
ins
pusha
cwde
retf
ret
mov
xchg
paddd
and
mov
daa
inc
dec
mov
mov
xor
mov
pop
shl
daa
(bad)
scas
add
lea
lea
pusha
pushf
pop
gs
mov
in
pop
ins
popa
cmps
mov
dec
add
jl
ins
jl
dec
xchg
add
mov
sub
adc
and
add
scas
mov
and
mov
gs
dec
into
xchg
add
jmp
sub
adc
inc
lock
mov
and
jne
push
dec
fwait
push
inc
or
jmp
(bad)
sub
pop
pop
mov
xor
fsubr
aam
lock
add
in
call
or
jnp
data16
cmp
sbb
push
clc
jp
fadd
aaa
ins
in
mov
cmp
hlt
push
ror
stc
pusha
test
xlat
das
or
mov
iret
out
cmc
mov
cli
jmp
push
and
jae
pusha
(bad)
mov
xor
push
jns
xor
mov
addr16
xor
dec
and
adc
push
neg
mov
push
fs
mov
push
dec
dec
rol
sbb
jbe
enter
cs
es
(bad)
add
and
cwde
dec
xor
in
jno
pop
imul
inc
xchg
gs
mov
das
jg
mov
retf
mov
cmp
fcmovu
mov
cmp
jge
jecxz
mov
cld
loop
or
xor
retf
sbb
out
mov
outs
scas
mov
in
mov
(bad)
mov
aaa
movs
lds
sub
add
add
push
pop
ds
out
imul
cmp
mov
jmp
mov
pop
stc
rcr
dec
jg
(bad)
cmp
adc
jbe
mov
repnz
test
jno
push
dec
mov
mov
inc
lahf
jmp
hlt
stos
push
jp
push
scas
mov
pusha
hlt
add
lods
sbb
ret
loop
mov
loopne
pop
mov
test
add
call
cs
imul
enter
(bad)
jecxz
call
xchg
inc
aaa
call
fdivrp
les
das
or
and
mov
push
out
aas
mov
mov
and
popa
inc
shr
add
sub
or
xor
out
inc
mov
in
jmp
fs
adc
or
push
jb
icebp
mov
mov
aad
push
push
push
xor
fcomp
inc
mov
push
push
sbb
adc
mov
aad
cmp
cmc
test
(bad)
ror
push
rcl
repnz
pop
adc
xor
ds
adc
xlat
xchg
mov
adc
test
mov
jge
lods
out
sbb
not
pop
pop
sub
sub
aaa
lahf
fsubr
cmp
rol
mov
int3
mov
leave
mov
ret
pop
mov
push
mov
add
mov
int
imul
(bad)
dec
mov
icebp
jnp
dec
xor
frstor
dec
jns
add
in
xchg
jne
mov
dec
inc
xor
rcr
sti
dec
and
fidivr
mov
xchg
pop
js
xchg
pop
call
sbb
aam
pop
sub
movs
(bad)
pop
pop
pushf
push
push
add
fadd
in
dec
loop
xor
fdivr
pop
push
fisubr
lock
aam
js
cmc
cs
cmp
and
cmc
mov
les
mul
je
aam
inc
popf
in
sbb
cld
pop
(bad)
fucomip
fcmovnbe
inc
sbb
loope
inc
inc
int
mov
sbb
mov
xchg
aam
dec
cmp
movs
out
jp
jmp
jnp
jbe
test
test
mov
push
sbb
cwde
jmp
and
pop
pop
cs
xchg
jne
out
pop
mov
xchg
adc
or
jmp
cmp
pop
pop
jae
push
fldcw
jae
les
retf
mov
and
xchg
sbb
inc
loopne
xor
out
cmp
lds
or
xor
add
imul
imul
(bad)
adc
shl
icebp
lods
jo
int
mov
mov
push
adc
jmp
inc
fwait
mov
out
ss
adc
fdivr
fdiv
imul
mov
jp
add
mov
jmp
movs
pop
pusha
sub
test
popf
cmp
cmp
jmp
xchg
scas
stos
call
jae
mov
jno
cmp
pop
clc
inc
add
or
sbb
out
test
xor
fst
arpl
mov
jmp
outs
and
inc
and
inc
ficom
or
enter
movs
jge
push
push
or
add
mov
lods
inc
jge
jge
pop
mov
pusha
sub
fadd
adc
push
xor
xchg
adc
mov
jg
xor
mov
mov
xor
jno
mov
call
adc
add
dec
outs
mov
clc
mov
cmp
mov
js
scas
pop
fsub
hlt
adc
xor
inc
mov
das
sub
stc
popf
out
dec
loopne
clc
mov
cs
xor
call
loope
outs
lods
adc
push
ja
pop
addr16
fwait
add
sbb
mov
pop
cmp
hlt
iret
das
xlat
out
dec
xor
or
mov
sar
arpl
pop
je
and
dec
pop
out
popf
jmp
ss
std
test
mov
push
ss
(bad)
(bad)
cmp
shl
or
sub
bound
adc
(bad)
dec
jb
xor
pop
movs
mov
mov
mov
cdq
pop
lea
repz
or
push
sub
fisttp
xor
loopne
xchg
xor
sub
mov
or
push
xchg
jmp
inc
mov
and
xchg
lods
pop
xchg
dec
arpl
pop
xchg
imul
pop
cmp
mov
mov
and
rcr
dec
outs
xor
rcl
xor
xor
mov
hlt
es
into
aam
shl
adc
mov
push
(bad)
out
and
mov
test
shl
push
scas
mov
adc
push
xchg
fisttp
or
ins
push
cmp
fidiv
dec
sbb
test
fsubr
(bad)
cmp
in
out
out
mov
lahf
push
pop
pop
dec
mov
push
or
cmp
pushf
sub
mov
repz
leave
aad
mov
mov
or
test
rcr
int
jo
add
lock
mov
adc
dec
mov
cmc
xor
jne
cmps
shr
scas
neg
lahf
pop
sub
mov
imul
cmc
ror
xor
int3
retf
mov
ja
push
inc
mov
cli
push
xor
je
or
adc
(bad)
std
push
pop
mov
push
inc
jb
adc
xor
mov
test
jne
mov
dec
dec
sbb
inc
push
cmp
(bad)
call
mov
sar
pop
cmps
stos
test
(bad)
aad
aam
fisttp
inc
shl
add
and
lahf
leave
(bad)
dec
in
iret
adc
cmp
jmp
sub
mov
sbb
enter
pop
loopne
stc
dec
dec
int
mov
aad
(bad)
jp
mov
call
test
mov
xchg
fisttp
mov
bound
cmp
les
repz
arpl
cli
arpl
adc
add
sub
cli
enter
pop
es
pop
dec
xchg
adc
jmp
push
clc
or
and
xchg
imul
xor
xchg
adc
cmp
rcr
pop
cwde
inc
pop
mov
mov
sub
jae
(bad)
adc
(bad)
jns
jbe
test
iret
out
xlat
pop
nop
mov
aam
int
addr16
lahf
push
sub
lods
mov
and
gs
fisub
push
fstp
fimul
dec
in
dec
aaa
jne
ins
pop
pop
les
mov
mov
aad
or
ins
lods
cmc
push
loopne
int3
jb
jmp
in
imul
(bad)
jae
jl
pop
mov
mov
xchg
and
test
push
out
cld
aas
div
les
jecxz
push
int3
int
out
push
xor
dec
scas
enter
xor
loop
fidivr
xor
mov
ffree
mov
sub
call
js
lds
(bad)
adc
add
fwait
xor
bound
xor
lea
mov
mov
rcr
(bad)
jo
lock
test
jmp
addr16
mov
or
xchg
jle
(bad)
(bad)
jecxz
xor
jo
lods
loop
xchg
mov
jl
push
out
fcomi
repnz
dec
test
or
cmp
mov
sbb
cmp
mov
xlat
clc
and
test
push
movs
mov
adc
adc
fisttp
imul
or
push
dec
jae
jge
arpl
cmp
les
les
cmp
cmp
cld
jnp
clc
sbb
mov
adc
out
jae
pop
sub
and
mov
out
cwde
ins
dec
push
xor
adc
pop
outs
mov
jae
cli
cmc
add
(bad)
jbe
mov
sbb
xor
enter
data16
sub
mov
cmp
data16
imul
pop
add
leave
loop
jno
(bad)
dec
adc
aas
bnd
adc
or
aam
cmc
pop
outs
shr
bound
sub
mov
scas
push
mov
in
adc
jne
push
pop
sar
sbb
xor
(bad)
imul
outs
and
sub
cld
in
movs
xlat
loopne
mov
mov
pop
aam
(bad)
aam
adc
loopne
add
mov
cli
pop
mov
out
xchg
loopne
xlat
push
pop
iret
push
outs
retf
cmps
fld
popf
addr16
ins
or
mov
sub
or
mov
fsub
cmp
scas
js
fs
fwait
sbb
jl
mov
dec
mov
xchg
xor
mov
add
inc
imul
call
ins
or
rcr
jns
imul
and
xchg
outs
cli
sbb
xor
inc
out
aam
mov
push
push
pop
mov
xchg
mov
div
fs
clc
mov
xchg
jns
callw
push
add
mov
dec
aad
add
icebp
push
mov
xor
mov
pop
mov
(bad)
cmp
dec
lds
pushf
test
mov
loope
int
and
movs
jae
xchg
xchg
fs
(bad)
fdivr
aaa
outs
fs
fiadd
mov
mov
or
jnp
xchg
sbb
jg
jecxz
fidivr
icebp
mov
popf
dec
jp
mov
outs
pop
jmp
or
lods
adc
rcr
xor
push
pop
mov
outs
add
int3
popa
mov
shl
sbb
cmp
aad
gs
dec
jle
xchg
sti
mov
out
push
mov
rcr
aam
pop
fbstp
mov
movs
inc
mov
sub
ja
sbb
fdiv
sub
xor
inc
int3
ror
dec
or
or
sbb
imul
push
xchg
adc
mov
in
mov
pop
inc
adc
or
pop
push
push
xor
mov
movs
sbb
and
mov
(bad)
xor
dec
in
out
or
xor
xchg
jae
cld
inc
lock
cld
data16
test
rol
fimul
push
jns
ret
div
mov
add
add
push
inc
and
int3
inc
xor
js
jmp
or
pop
dec
pop
push
movs
adc
add
in
jmp
fisttp
mov
retf
dec
sbb
popf
sbb
hlt
ret
or
sbb
xchg
cwde
sbb
adc
dec
and
adc
retf
pop
jae
(bad)
mov
ins
or
cmc
sbb
xor
(bad)
mov
dec
cmps
xlat
test
popf
ins
(bad)
cmc
mov
jle
dec
test
scas
xor
mov
mov
mov
in
into
pushf
pop
inc
mov
dec
xchg
test
fistp
dec
jne
shl
std
ins
xchg
(bad)
sahf
pop
cmp
dec
in
push
fcom
jno
push
into
fisttp
xchg
mov
js
lahf
mov
xchg
sbb
mov
and
inc
ja
and
pop
stc
and
jbe
mov
mov
test
inc
mov
cmps
lahf
imul
lods
fst
jo
jge
sub
or
arpl
push
add
lea
fstp
lock
test
xrelease
and
ins
dec
shr
(bad)
in
es
out
sbb
fsub
cmps
mov
add
pop
je
lods
lods
jmp
into
cmps
popf
mov
mov
data16
aas
pop
sub
or
or
mov
adc
stos
cwde
mov
adc
dec
pop
xlat
inc
std
push
sub
dec
je
leave
inc
in
loopne
js
and
mov
and
jl
jno
cmovle
retf
inc
sbb
xor
push
(bad)
iret
cmp
xchg
mov
iret
in
(bad)
push
jb
test
pop
pop
dec
xor
sahf
outs
mov
lock
xchg
jae
iret
lods
ficom
loopne
int3
sub
and
mov
outs
mov
xor
out
outs
cs
(bad)
scas
fisttp
pusha
sub
fisubr
mov
jge
push
hlt
shl
xor
sub
pusha
(bad)
jecxz
in
push
sub
inc
mov
not
pop
inc
retf
mov
push
cmp
push
sbb
sub
gs
or
pop
sbb
in
aam
data16
pop
mov
ret
xor
sub
xor
mov
aas
aam
inc
fisttp
out
fiadd
ret
shl
push
ret
push
scas
xor
jnp
(bad)
(bad)
stos
clc
inc
xor
add
pushf
aad
(bad)
sub
xchg
cmp
gs
sub
jbe
jp
nop
addr16
scas
xor
mov
inc
retf
xchg
jnp
inc
dec
jle
inc
cli
pop
add
jb
cmp
repz
jno
daa
push
adc
or
push
inc
add
xlat
dec
inc
fist
push
stc
mov
je
inc
jne
mov
pop
mov
(bad)
enter
pop
mov
(bad)
sub
pop
dec
dec
mov
xor
and
lods
dec
and
inc
xor
xchg
cmp
pop
sub
jmp
sbb
shl
mov
push
mov
push
cmp
xor
rcl
inc
dec
xchg
pop
dec
push
stos
int3
in
mov
jmp
push
fs
das
xchg
popa
sbb
xor
dec
mov
lahf
adc
movs
add
ret
mov
ficomp
retf
cmp
hlt
mov
into
jl
xor
into
inc
and
stc
lods
and
lods
(bad)
mov
ja
xor
fcomp
push
adc
std
inc
fstp
push
jg
pop
mov
push
push
aas
jle
mov
fiadd
ins
sti
sbb
iret
jecxz
pop
dec
push
enter
mov
fisubr
fisubr
icebp
push
add
inc
jmp
and
nop
or
xor
inc
sub
xchg
addr16
mov
or
add
shl
out
dec
fbstp
sbb
inc
sbb
push
out
aam
mov
lods
ja
or
push
cmc
mov
outs
add
dec
fwait
cmp
movs
out
out
add
and
sub
add
test
lods
dec
mov
sbb
mov
(bad)
sub
mov
sub
pop
inc
mov
scas
stos
icebp
out
mov
je
push
mov
ficom
fstp
inc
pop
test
rcr
outs
pop
jmp
in
loop
xchg
pop
adc
push
in
shl
push
sbb
jecxz
dec
out
xchg
inc
jmp
sub
sahf
icebp
out
shr
pop
(bad)
gs
mul
mov
adc
into
push
fmul
mov
or
xchg
call
add
cmp
iret
shl
jle
sub
ffreep
hlt
js
or
pop
xchg
push
call
mov
gs
ficomp
pop
jge
sub
cmps
fstp
xor
cmp
lea
pop
xchg
mov
inc
mov
adc
mov
sbb
(bad)
or
mov
add
ret
push
mov
fild
mov
inc
cli
cmps
dec
aam
mov
aas
(bad)
fidivr
inc
fdiv
xchg
sbb
into
pop
or
ins
sgdtd
shr
adc
je
cmc
mov
xor
mov
pop
mov
mov
ror
test
int3
repnz
pushf
mov
inc
cmps
jb
jns
cmp
addr16
and
scas
lods
nop
jmp
cmps
(bad)
popa
cmp
and
mov
sub
loopne
adc
test
ja
in
jo
imul
or
data16
xchg
test
popa
jne
push
and
fcom
push
push
movs
pop
jl
dec
popa
mov
or
jecxz
adc
popa
push
cmp
mov
shl
dec
pop
icebp
xchg
add
inc
js
popa
nop
fucomi
and
cmps
and
nop
add
xchg
fsubr
jecxz
pop
loop
(bad)
pushf
xchg
mov
shr
jecxz
cmp
int3
(bad)
das
dec
retf
(bad)
mov
push
mov
sub
inc
push
mov
stos
(bad)
popf
mov
data16
out
out
aaa
jmp
add
clc
inc
xor
sub
dec
sbb
outs
(bad)
mov
adc
jo
in
fnstenv
sahf
pop
push
sub
(bad)
mov
lods
mov
jmp
xor
add
sbb
repz
jnp
das
gs
mov
jae
xchg
cld
push
and
ja
fsubr
int
cmps
test
pusha
add
pop
mov
retf
push
sbb
jle
jnp
std
inc
dec
lds
loop
repz
lea
imul
mov
mov
es
fs
stos
push
cdq
lock
(bad)
out
loopne
adc
pop
mov
inc
or
ror
xchg
dec
ficomp
call
add
int3
xchg
out
icebp
repz
push
push
mov
push
and
sahf
shr
inc
call
adc
std
rcr
in
ror
fwait
jns
push
xchg
clc
dec
push
daa
enter
pop
cmps
inc
jl
paddusw
mov
pop
out
imul
cmc
jl
cmp
push
loop
fst
pop
test
adc
mov
mov
in
inc
lods
and
ins
je
out
(bad)
xor
fiadd
pop
(bad)
aad
cmp
xchg
lods
(bad)
push
das
cwde
repnz
lea
mov
cmp
sub
mov
push
sti
xchg
dec
or
push
test
outs
mov
into
pop
bound
stc
mov
imul
adc
stc
sub
adc
push
fist
in
xor
sub
inc
jl
movs
shl
push
pushf
leave
fnstenv
ficom
aam
cmc
rcr
retf
sbb
mov
gs
mov
ds
sti
xchg
xor
cmp
out
mov
ss
rol
out
pop
add
dec
mov
sbb
mov
sahf
fisttp
or
mov
xor
js
add
movs
(bad)
data16
test
and
cld
mov
xlat
pop
sahf
(bad)
lahf
shl
les
jns
sti
movs
cs
push
ret
or
push
jge
mov
sbb
hsubpd
push
js
jg
inc
ins
jbe
shr
push
xor
push
lods
jns
cmp
icebp
fnstsw
test
mov
aam
cmp
cs
daa
push
mov
lahf
shr
xlat
arpl
xchg
cdq
jg
ror
mov
std
lods
cmp
lock
sti
add
xchg
xchg
outs
xchg
jg
mov
sub
push
in
xlat
sbb
adc
mov
inc
cmc
mov
sub
gs
mov
mov
xchg
xor
test
add
out
jge
push
xchg
cmps
daa
aas
in
push
xor
(bad)
aad
bound
mov
mov
pop
shl
sub
jns
push
es
fwait
enter
xchg
cmp
inc
mov
or
mov
pop
push
test
add
ret
mov
push
and
test
pop
or
popf
inc
pop
outs
out
inc
jo
(bad)
mov
cmp
dec
in
mov
ja
aaa
fwait
jb
inc
ret
jns
xchg
push
test
into
cmp
jns
shr
inc
ficomp
dec
cmp
add
test
mov
call
mov
xor
sbb
push
out
jb
xchg
add
push
std
nop
mov
inc
sub
mov
and
dec
xor
mov
pop
cmp
and
iret
int3
jecxz
pop
(bad)
push
pop
jmp
shl
dec
mov
pushf
xchg
dec
arpl
add
add
outs
cmp
cmp
je
bound
push
jle
nop
or
inc
dec
and
cwde
jno
jge
pop
push
das
xlat
aaa
fwait
js
psubusb
imul
and
aaa
scas
xchg
adc
call
sub
mov
mov
xor
push
mov
push
inc
and
xor
in
xchg
mov
cmps
dec
push
retf
sub
adc
mov
adc
les
xor
mov
adc
(bad)
daa
imul
es
shl
dec
add
icebp
xor
dec
out
movntps
and
push
out
int3
inc
mov
jns
mov
(bad)
cdq
mov
ret
loope
data16
and
push
mov
mov
leave
pop
not
inc
hlt
or
dec
std
shr
das
push
lods
sub
aaa
push
cdq
bound
in
sbb
leave
mov
and
repz
or
dec
cmp
pusha
movs
dec
cmp
cmps
and
xchg
shl
les
test
stos
adc
bts
cmps
inc
popf
fld
pop
and
(bad)
cli
push
mov
mov
mov
adc
pop
sub
inc
neg
(bad)
mov
inc
pop
cmp
xchg
pop
stos
cmc
iret
test
or
enter
mov
ror
sahf
sbb
push
add
leave
stc
(bad)
xor
jmp
dec
aad
(bad)
(bad)
cmps
rcr
lock
jge
cli
jg
in
adc
jp
scas
lahf
adc
cld
arpl
loop
bound
aaa
das
test
push
sar
cmp
xor
out
inc
gs
dec
je
sub
sbb
mov
xor
cld
sbb
add
push
cmp
or
cli
out
add
daa
call
cmp
retf
cli
push
mov
sub
int3
lea
(bad)
fstp
dec
xor
dec
mov
sub
lods
fmul
mov
popf
xchg
cmc
push
sub
hlt
ror
lock
pop
mov
pop
mov
cmp
mov
out
dec
js
jae
sbb
xor
and
addr16
fld
scas
push
stos
mov
(bad)
sti
push
retf
fdivr
adc
outs
gs
mov
mov
jo
push
dec
cmp
push
cmp
and
in
pop
pop
(bad)
mov
or
mov
pop
mov
dec
xor
(bad)
mov
ins
and
jmp
pop
cli
dec
push
and
mov
sub
push
pop
aad
inc
jmp
cs
ds
or
push
packuswb
push
cmp
loope
pop
or
out
cmp
mov
fcmove
xlat
mov
jmp
call
mov
cmc
adc
test
xchg
jne
ret
fnsave
scas
and
jp
sub
pop
pop
pop
shl
push
out
pop
and
cld
sti
or
sub
mov
movs
retf
mov
scas
retf
outs
jns
pop
cmp
mov
fld
xchg
dec
dec
out
pop
out
int3
mov
and
xor
pushf
jnp
jecxz
xor
mov
or
in
cmp
(bad)
ds
sbb
adc
jp
nop
push
jbe
shl
or
sbb
lods
je
or
push
rcl
(bad)
pop
cmp
ret
dec
push
out
sub
out
dec
dec
pop
xor
and
mov
clc
retf
mul
stos
ror
arpl
mov
das
push
sbb
cmp
sub
movs
xor
lea
das
lahf
aas
xlat
cwde
jno
mov
shr
pop
es
sub
cmc
cmp
jle
in
push
aas
mov
push
cwde
das
cmp
sbb
xchg
adc
je
mov
bnd
daa
loop
mov
jns
mov
repz
jne
push
dec
retf
fucomi
stc
or
bound
int3
xlat
test
fild
lods
inc
sub
cmp
(bad)
lods
int
push
mov
nop
mov
call
cmc
sti
adc
xor
icebp
call
nop
jbe
dec
jg
xor
mov
pop
inc
cmp
in
jge
ffreep
ret
push
push
loope
add
outs
lahf
mov
inc
mov
aaa
(bad)
pop
dec
inc
mov
test
imul
outs
xor
xchg
mov
dec
jge
inc
sti
push
test
into
mov
mov
nop
mov
outs
xchg
clc
dec
mov
xor
or
(bad)
in
mov
mov
mov
fsubr
sbb
push
imul
aam
pop
popf
leave
or
js
jno
or
test
mov
in
pusha
mov
int3
add
dec
lea
mov
jmp
stc
int3
pusha
fsub
test
or
add
push
in
gs
ret
out
mov
push
mov
repz
dec
out
ret
pop
inc
sub
or
pop
std
xor
add
add
fisub
test
lods
imul
lods
sbb
imul
sbb
mov
shl
cli
movs
mov
push
lods
(bad)
gs
jle
mov
ret
out
out
or
clc
rcl
push
pop
cmp
nop
mov
jle
or
sbb
mov
add
dec
jge
outs
(bad)
sbb
jg
(bad)
push
push
ss
jno
mov
pop
mov
sbb
aad
es
(bad)
int
fimul
mov
inc
popa
mov
or
pop
jmp
adc
mov
lods
cmp
ffree
ins
(bad)
aad
xor
mov
in
cmc
xchg
aaa
test
(bad)
arpl
int3
gs
call
adc
popa
mov
dec
fnstsw
sub
scas
xlat
add
fwait
aad
jne
loopne
dec
bound
push
jno
xor
repnz
iret
mov
push
aam
repnz
repz
pop
mov
push
cdq
jnp
push
mov
sub
xchg
scas
fs
rcr
imul
retf
fdivr
jne
fcom
es
jmp
adc
or
cmp
test
test
xchg
rol
push
cdq
movs
dec
push
push
dec
mov
push
mov
cld
inc
pop
pop
mov
mov
(bad)
push
sbb
ins
inc
sub
inc
fild
push
daa
sbb
sub
popf
inc
pop
xchg
dec
cmp
dec
xor
push
push
push
repz
mov
dec
cmc
pop
je
sub
jbe
dec
loope
adc
pop
es
out
push
cmc
shl
dec
cmp
and
pop
pop
sub
ret
pop
popa
mov
sub
out
xor
cdq
inc
mov
inc
xchg
sti
mov
cmp
cmp
loopne
jle
icebp
or
push
out
call
icebp
inc
das
dec
inc
cmp
jl
ins
test
xor
ret
and
jns
mov
jb
fdivr
cwde
shl
in
mov
pop
dec
pop
pop
or
push
jmp
pop
movs
jbe
imul
cmp
inc
mov
jae
stc
cmc
mov
add
cmps
iret
mov
cmp
enter
(bad)
xchg
jnp
dec
rol
retf
scas
stos
lds
fcom
outs
pop
sbb
pop
mov
sub
imul
cdq
pop
jmp
mov
lods
std
or
add
xchg
push
bound
movs
mov
jg
pop
mov
inc
add
sub
das
shr
and
and
ror
out
jae
push
scas
cli
xchg
(bad)
imul
pop
ficomp
pusha
mov
das
stc
test
fld
or
outs
movs
pop
cmp
repz
in
in
lds
data16
outs
xchg
or
ds
jbe
push
bound
in
jg
retf
icebp
and
imul
scas
sub
loop
pop
xor
cwde
jns
xchg
dec
dec
xor
xchg
bound
mov
and
daa
pop
inc
addr16
aad
push
test
ror
and
imul
test
in
mov
mov
or
jmp
adc
sub
mov
scas
dec
stos
test
aas
push
xor
in
adc
pop
mov
imul
jge
fisubr
adc
movs
push
adc
cdq
jecxz
retf
jl
lock
sbb
aam
push
bound
sbb
dec
and
scas
jecxz
inc
dec
cld
cmp
call
push
dec
test
pop
sbb
jmp
fcom
outs
stos
sub
test
lods
inc
imul
jp
ret
ret
jno
mov
clc
add
xchg
scas
sbb
push
rcl
push
js
gs
jo
outs
cli
push
xor
xor
push
vpcomuw
adc
hlt
sti
std
sub
ret
out
retf
push
sbb
sbb
aam
jno
sub
popf
in
stos
mov
pushf
sbb
shr
pop
add
clc
lahf
cdq
sti
mov
jmp
or
hlt
iret
fs
dec
retf
mov
mov
leave
es
loop
test
mov
shr
imul
icebp
or
stos
sub
pop
mov
xor
addr16
ds
adc
mov
add
and
outs
in
pusha
xor
add
popf
call
(bad)
stc
or
sbb
and
arpl
aad
jb
xchg
call
out
fidiv
sub
sub
xor
push
mov
pusha
push
xchg
xor
in
dec
rol
xchg
xchg
sar
push
sub
arpl
push
retf
jle
scas
sbb
adc
push
or
xchg
jb
mov
cmp
popf
add
lea
shl
test
mov
push
mov
mov
xchg
adc
out
mov
ficom
jbe
fnstsw
(bad)
dec
rcr
mov
bound
mov
std
stos
and
retf
jl
ficomp
js
dec
mov
call
test
jg
fstp
bound
gs
nop
out
sub
xor
in
jae
and
push
test
test
inc
inc
cmps
fs
fistp
pop
popf
bound
data16
xor
in
pushf
add
dec
lock
xchg
fistp
add
pop
clc
dec
in
cmp
pop
cdq
movs
cmp
outs
fwait
and
fcmovnb
ret
dec
mov
outs
sahf
sbb
sahf
movs
pop
sar
and
mul
mov
and
and
cs
loopne
mov
sub
mov
inc
push
push
mov
and
or
add
cmps
arpl
sbb
jno
add
cmps
add
arpl
(bad)
mov
lock
jno
dec
call
into
(bad)
fsub
add
pop
ins
push
int
(bad)
jle
fs
add
movs
rcr
icebp
xor
ficomp
mov
movs
je
jp
xor
jb
js
xor
jnp
icebp
inc
sub
icebp
sar
and
adc
in
nop
push
jne
rcl
daa
add
(bad)
jo
stos
in
std
out
ret
popa
stc
mov
sub
mov
fld
fdiv
test
iret
shr
outs
dec
dec
jmp
pop
rcl
jle
ja
dec
in
popa
out
lahf
inc
popf
cmp
pop
fistp
shl
jns
inc
push
out
add
mov
dec
xchg
cmp
call
sub
test
push
fcom
mov
xchg
out
xchg
ret
inc
int
iret
ret
inc
sbb
push
out
sub
inc
xchg
xor
leave
arpl
mov
call
cmps
dec
pop
inc
jmp
call
mul
and
jo
jo
out
in
inc
jmp
daa
adc
jmp
dec
ret
mov
jp
xlat
cmps
aam
test
cmp
mov
mov
sub
fisub
push
data16
pop
test
dec
jno
mov
js
xor
loope
sbb
mov
out
add
retf
ins
int
in
mov
push
not
sub
xchg
dec
int3
in
add
pop
jne
lahf
fcomp
push
push
stos
hlt
jge
js
and
loopne
sub
pop
push
mov
xchg
push
mov
sbb
mov
aaa
popf
lods
add
aam
xor
test
dec
sub
stos
and
xchg
push
dec
add
jno
scas
xchg
call
inc
or
and
cmp
mov
or
xchg
pushf
test
inc
sub
aam
push
pusha
lock
mov
(bad)
mov
mov
cmp
imul
push
dec
fs
sub
ins
mov
mov
adc
or
adc
push
scas
and
ret
into
jbe
imul
jmp
fmul
sbb
div
push
movs
adc
(bad)
int3
sbb
jl
inc
jae
(bad)
rol
sbb
aas
jb
int3
rol
(bad)
pop
push
movs
test
xor
mov
push
xor
inc
mov
loopne
mov
mov
retf
dec
movs
mov
sti
or
sti
push
js
push
adc
push
adc
lea
mov
jp
in
fsubr
inc
aas
in
and
or
xor
sbb
iret
mov
lods
retf
cmc
mov
push
out
cmp
call
jge
popf
jp
push
std
add
mov
cli
out
out
in
push
xor
sbb
add
icebp
cdq
fs
ror
jg
mov
retf
cmp
leave
rol
add
ds
dec
mov
leave
adc
cld
jnp
and
or
int3
sbb
xor
fstp
imul
aaa
cmp
dec
movs
xchg
(bad)
imul
inc
dec
out
aaa
dec
pushf
fidiv
sbb
arpl
inc
mov
mov
and
xchg
push
cmps
cli
scas
pop
test
aad
sub
inc
cmc
dec
pop
or
mov
mov
inc
push
ficomp
add
cmp
repz
mov
cld
adc
sete
pop
dec
jl
daa
or
dec
aam
push
and
out
fadd
mov
mov
jns
fwait
lods
cmps
loope
rcr
adc
inc
sub
push
retf
add
add
jle
mov
pop
jmp
pop
jmp
sbb
icebp
inc
adc
sub
adc
inc
mov
push
adc
pop
les
sub
mov
ret
cmps
mov
xor
sbb
jmp
cwde
lea
mov
or
push
js
mov
in
aaa
inc
mov
sub
jge
imul
fstp
popf
inc
or
xor
sub
(bad)
jmp
ss
sub
and
mov
outs
in
ret
stos
adc
push
lds
xor
fdivr
ret
push
scas
or
js
lea
rol
add
cs
sahf
clc
icebp
loopne
stos
(bad)
in
retf
adc
call
xor
push
cli
add
xor
imul
adc
add
push
sbb
adc
outs
repz
fst
jo
mov
mov
lea
sbb
mov
test
push
pop
adc
add
inc
ss
sbb
jl
outs
jo
fwait
sbb
adc
inc
mov
push
call
call
jp
push
mov
test
xchg
push
leave
mov
arpl
pop
cld
cmp
sahf
(bad)
movs
jne
lods
addr16
xor
sti
test
inc
xchg
cmp
repz
add
sar
loope
shl
fwait
dec
popa
xor
outs
pop
add
push
mov
ror
ret
test
mov
inc
cmp
imul
in
arpl
mov
neg
xchg
mov
mov
shl
inc
or
aam
dec
int
push
test
aad
pop
push
sub
imul
(bad)
jno
or
call
dec
shl
repnz
dec
mov
imul
inc
dec
cdq
or
stos
data16
mov
xchg
cli
mov
xor
out
ins
std
retf
loopne
not
cwde
test
cld
adc
daa
fist
push
int3
mov
dec
fdiv
bound
into
mov
sbb
xor
fidivr
std
movs
add
cmp
and
xchg
iret
test
push
mov
iret
xchg
test
aaa
push
mov
mov
mov
(bad)
rdpmc
in
popa
mov
mov
ja
in
psrad
mov
hlt
test
xchg
loop
rcl
sbb
sbb
sahf
xchg
add
sub
mov
ficomp
mov
add
push
pop
dec
popf
xchg
ja
lea
sub
sar
gs
jmp
sahf
ffree
sub
sbb
ins
pop
sbb
fidivr
jl
cmps
jmp
pusha
enter
cmp
mov
ja
cmp
sub
mov
sub
icebp
ror
push
cdq
mov
inc
and
out
repnz
sahf
and
hlt
cmp
push
test
outs
add
add
cmp
mov
retf
cmp
fld
xchg
call
pop
mov
mov
arpl
cli
fninit
sub
xor
sbb
movs
repnz
outs
push
cs
push
xchg
int
xor
or
test
outs
fistp
lea
div
sahf
stc
sub
test
(bad)
dec
movs
les
leave
pusha
int
les
movs
pop
lea
ret
(bad)
jge
in
nop
sbb
push
cdq
nop
cmp
or
adc
cmp
adc
or
(bad)
push
mov
add
js
sub
inc
pop
xchg
pop
push
sbb
and
sahf
xchg
dec
inc
(bad)
xchg
xchg
push
loopne
and
sbb
inc
mov
js
or
mov
fstp
mov
loop
sbb
ja
mov
dec
xchg
and
cmp
arpl
imul
add
dec
pop
std
ret
lods
das
cmp
fwait
mov
retf
and
mov
outs
sti
inc
sub
(bad)
aaa
dec
loopne
mov
mov
fmul
test
push
sar
mov
mov
xchg
add
addr16
and
or
int
sbb
lods
popf
sub
mov
clc
leave
shl
cmp
adc
popf
fistp
inc
sub
cli
movs
out
loop
dec
call
inc
les
push
test
pushf
(bad)
into
das
fs
jmp
push
jb
cmps
dec
ja
mov
test
stc
(bad)
mov
or
sbb
push
imul
idiv
inc
(bad)
ret
ss
out
aad
test
mov
int
jp
jmp
in
cdq
sbb
bnd
pop
leave
hlt
inc
lods
mov
ins
pop
or
dec
aad
rol
sub
lock
dec
retf
sub
adc
rol
add
mov
test
adc
xor
mov
jo
mov
cmp
mov
mov
cmps
inc
loopne
adc
shr
fisttp
xor
shr
mov
sub
pop
jmp
sbb
or
mov
xchg
jns
inc
mov
aaa
adc
(bad)
xor
aaa
loopne
data16
mov
sbb
sub
add
xchg
call
push
pop
stc
push
mov
cmp
cmp
xchg
arpl
mov
jp
les
mov
out
lds
pop
outs
popf
mov
dec
mov
repnz
cmp
mov
lods
xchg
hlt
sub
les
sahf
dec
(bad)
aam
or
sbb
ret
adc
out
fimul
cdq
(bad)
neg
aas
out
sub
adc
stos
inc
push
ror
mov
arpl
push
sbb
mov
inc
loope
and
adc
sbb
cli
xor
push
cmp
dec
aad
jnp
or
xor
loope
test
and
pop
loopne
and
mov
sbb
adc
ret
pushf
cwde
add
cmp
add
jns
lods
dec
aaa
or
(bad)
(bad)
xchg
jmp
xor
sbb
push
into
das
xchg
push
and
aam
jmp
call
popa
xchg
loope
xor
pushf
jbe
sahf
fstp
rcl
mov
jns
mov
xchg
sub
not
jmp
xor
ret
and
scas
add
push
in
(bad)
mov
mov
(bad)
fstp
icebp
or
mov
jbe
fsub
test
(bad)
sub
mov
or
pop
pushf
nop
xchg
sub
xchg
fwait
push
cli
and
nop
add
pop
push
stc
out
sub
push
arpl
mov
inc
aam
xlat
jae
sti
inc
aam
stos
push
cwde
adc
sar
sbb
aam
mov
out
les
sahf
sbb
arpl
xchg
jecxz
add
xchg
daa
pop
jb
js
dec
add
daa
sub
mov
xchg
int
sub
pop
adc
ficomp
add
sub
int3
in
leave
ins
pop
retf
call
mov
dec
inc
or
rol
sub
inc
repz
dec
movs
add
aad
leave
sbb
jmp
cmp
inc
out
inc
pop
movs
jae
ror
fwait
xor
jne
sub
or
aam
dec
jbe
mov
iret
or
lahf
push
(bad)
(bad)
add
inc
in
stc
fsubr
(bad)
jb
inc
mov
stos
stos
sbb
mov
mov
(bad)
jo
dec
push
aas
(bad)
and
jnp
arpl
jns
sar
movs
rep
aas
xchg
jg
or
sahf
sub
rcr
inc
dec
mov
hlt
mov
ss
fdiv
jecxz
fwait
test
das
repz
mov
in
jnp
inc
(bad)
lahf
es
in
xor
jo
ds
stc
sbb
nop
dec
xor
xchg
cmp
cmp
jbe
int
movs
sahf
cmp
lods
jne
jb
mov
cmp
dec
dec
push
inc
and
mov
(bad)
jg
les
push
enter
mov
fadd
loopne
jmp
fnsave
push
pop
cmp
xor
sub
pop
adc
sahf
call
adc
pop
cmp
ficomp
xchg
adc
jb
mov
loopne
scas
inc
jecxz
mov
popf
in
pop
fst
pop
out
sbb
out
cdq
pop
rcl
inc
push
mov
mov
mov
into
jecxz
add
(bad)
(bad)
jmp
push
enter
jo
scas
ins
mov
call
dec
mov
add
aad
fldcw
into
jnp
gs
mov
cmp
ins
pop
push
mov
jo
sub
outs
xchg
push
clc
add
sub
in
fs
sbb
sub
sahf
pop
pop
and
mov
pop
adc
aaa
push
inc
stos
sub
add
cmp
sbb
sbb
js
ret
js
jp
or
sbb
in
add
imul
sbb
sar
in
je
dec
pop
mov
push
rcl
lds
rcr
xchg
ins
ds
ret
inc
xchg
xchg
(bad)
adc
mov
sub
(bad)
imul
cmp
call
out
in
fsub
mov
mov
jg
inc
mov
ficom
dec
push
mov
mov
sbb
popa
shl
push
dec
adc
rcl
fcomp
and
rcr
repnz
mov
bound
out
sbb
aam
retf
pop
inc
xchg
push
mov
xchg
or
imul
push
pop
imul
add
and
jns
sbb
push
pop
inc
jne
xor
es
das
xor
ds
stc
in
pop
pop
mov
pushf
mov
loope
xor
imul
mov
inc
ds
jns
mov
arpl
pop
repz
xor
popa
xor
mov
add
shr
jb
call
popa
or
dec
leave
lods
cmp
or
cmp
sbb
cmp
addr16
mov
scas
push
xchg
pop
(bad)
out
dec
cmp
pop
inc
ds
mov
cmp
add
jge
jno
outs
mov
(bad)
mov
mov
or
adc
call
sbb
dec
(bad)
fistp
cmps
test
outs
retf
xchg
sbb
dec
ins
fsubp
jbe
and
inc
in
mov
mov
rcr
sbb
repz
fdivrp
push
add
lock
xchg
loope
ds
iret
cmc
jbe
xor
xor
ficom
aam
push
data16
dec
add
sub
(bad)
cmps
jle
and
lds
and
ror
mov
es
daa
jae
sbb
or
movs
adc
js
in
ins
or
sub
out
xor
fnsave
mov
nop
outs
xchg
cdq
stos
popf
lods
lock
lea
test
push
outs
pop
(bad)
adc
push
sbb
lea
out
xor
dec
scas
jecxz
jg
add
int3
xchg
js
and
int
cmp
dec
test
(bad)
repnz
test
sbb
das
pop
cli
add
fild
je
cmp
daa
ret
loope
or
movs
push
addr16
and
lds
hlt
inc
(bad)
lods
das
mov
retf
adc
test
(bad)
cdq
dec
xor
stos
mov
and
push
ficomp
mov
mov
shl
in
(bad)
fstp
fcom
aas
clc
out
sbb
adc
or
(bad)
leave
pop
movs
(bad)
jl
xchg
jg
xor
pop
inc
inc
ins
sti
clc
dec
mov
enter
jp
pop
cs
out
adc
or
sbb
fldenv
out
sbb
push
movs
inc
cmp
(bad)
je
jmp
sbb
and
or
fild
sbb
mov
mov
les
leave
xchg
ss
push
jge
loope
ficomp
mov
sbb
arpl
xor
or
sbb
push
scas
rcl
xchg
test
in
xor
xlat
fcmovnb
mov
sub
retf
ror
popa
es
aas
mov
pop
aaa
jae
call
xor
cmp
and
(bad)
les
add
adc
mov
loope
adc
or
mov
ret
add
aad
jp
push
aas
ins
ds
cmp
cmc
sub
cwde
push
scas
ds
cmp
and
loope
pop
push
sar
xchg
retf
repz
and
sbb
(bad)
push
aas
retf
int
mov
add
pop
int3
push
add
cwde
jmp
test
mov
mov
sbb
dec
mov
out
les
or
xchg
(bad)
adc
loop
dec
jle
sbb
in
mov
mov
jmp
pop
jns
je
jbe
(bad)
shl
push
push
mov
cwde
inc
push
aad
pop
xlat
or
iret
test
push
in
cdq
imul
dec
jge
jge
add
fdiv
mov
cld
loope
cmp
(bad)
push
jp
push
push
push
mov
in
sub
and
ds
xchg
rol
pop
push
mov
lock
loop
call
std
xchg
clc
test
in
dec
mov
sbb
fcmovnu
rcl
inc
out
push
add
ds
loope
(bad)
loope
test
gs
mov
mov
out
daa
(bad)
ins
(bad)
shl
adc
nop
(bad)
stc
outs
aam
push
movs
push
(bad)
stc
cmp
jbe
cmp
mov
jne
xchg
pushf
popa
in
jl
inc
rol
into
mov
mov
cmc
out
lds
pop
or
jno
call
jnp
dec
adc
lahf
je
sub
neg
(bad)
add
and
cmp
sbb
int3
add
mov
fist
and
xchg
push
int
pop
xchg
jle
stos
ins
loopne
sbb
jl
(bad)
bound
mov
mov
mov
mov
pop
sbb
call
cmp
sub
and
cwde
aad
or
mov
or
test
out
jbe
in
outs
out
pop
scas
mov
and
mov
adc
fmul
popa
dec
cs
das
cli
aas
push
push
inc
aam
push
jmp
cmps
push
sub
cwde
sub
add
push
push
mov
xchg
sub
jb
jmp
jns
pushf
test
mov
push
mov
push
dec
stos
add
sbb
fadd
jg
inc
lds
in
or
fst
out
mov
sbb
ror
outs
pop
popa
popa
ins
xor
push
cmps
mov
jmp
aas
jo
pop
push
(bad)
fidivr
mov
lea
jecxz
and
mov
sub
mov
adc
cld
lahf
mov
mov
cmp
cmp
mov
and
sbb
jmp
dec
not
fld
loopne
add
jl
inc
in
popf
and
ins
sub
mov
xor
lods
adc
repz
sbb
mov
xchg
jmp
cmp
loopne
sti
push
dec
mov
jmp
les
pop
xchg
outs
popf
lahf
outs
ds
and
dec
and
mov
bound
ds
pop
jg
adc
inc
stos
fisttp
xor
fstp
fistp
jg
in
pop
(bad)
sub
inc
xor
jnp
mov
xchg
pop
jle
das
xchg
leave
sub
or
cmp
(bad)
fs
arpl
xchg
mov
repz
pop
add
sub
or
xor
sbb
inc
push
out
dec
jno
or
mov
rol
adc
(bad)
test
rcl
neg
mov
jae
inc
pop
pop
ret
fimul
and
cmp
and
cmc
inc
dec
jns
lods
data16
add
test
mov
into
jo
xchg
fiadd
jae
sub
sub
inc
mov
mov
loope
pop
sti
push
adc
cmp
(bad)
in
loopne
xchg
sub
jne
jb
in
adc
adc
test
dec
xor
xchg
or
push
cmc
add
push
dec
mov
sub
stc
add
js
loopne
jl
stos
test
mov
adc
mov
jg
xor
stos
mov
jmp
dec
lea
cmp
mov
lea
hlt
callw
sahf
mov
push
mov
aam
sub
sub
push
mov
xor
xlat
dec
mov
icebp
repnz
xor
dec
add
js
jmp
dec
jp
jo
add
add
mov
jmp
mov
xchg
es
outs
cdq
rcl
hlt
in
cld
xchg
add
cld
out
dec
adc
int3
xor
aad
jnp
out
inc
or
jmp
jmp
mov
xchg
mov
add
jl
xchg
mov
(bad)
inc
je
out
mov
(bad)
cld
and
mov
lods
jmp
fwait
inc
arpl
inc
lea
(bad)
sti
and
push
mov
test
jmp
bound
mov
lea
out
sahf
mov
(bad)
pop
dec
pop
dec
cld
pop
xchg
cmps
daa
mov
push
lock
jmp
in
cwde
adc
xchg
or
sub
xchg
cmp
fisttp
loope
out
cwde
std
stos
or
js
or
sub
(bad)
cmp
xor
xchg
fiadd
les
out
and
push
cmp
mov
fisttp
cmps
mov
add
(bad)
cld
jb
jmp
sbb
push
mov
test
or
test
fimul
ret
inc
and
loop
xchg
repz
es
imul
xchg
sub
pop
sbb
(bad)
jo
rcl
aaa
jmp
or
sub
in
mov
mov
xchg
lock
stc
push
clc
stc
js
aad
inc
inc
dec
dec
pop
sbb
clc
adc
xor
mov
sbb
sub
sbb
ror
mov
pushf
add
xor
sahf
xchg
adc
xchg
jns
(bad)
daa
cmp
bound
rol
inc
and
push
xor
cs
hlt
mov
cdq
lahf
imul
rcr
inc
adc
mov
push
imul
add
dec
aad
ss
or
in
adc
arpl
or
lahf
xchg
add
dec
lods
mov
mov
sub
ret
jae
stos
imul
add
imul
lds
push
mov
pop
mov
and
or
add
mov
and
sub
scas
mov
retf
cmp
push
leave
jl
out
mov
sbb
jo
mov
xor
push
xchg
or
cmp
cmp
sti
outs
or
pop
jne
xor
sbb
ja
aas
and
fsubrp
push
(bad)
adc
push
sub
popa
push
mov
fldenv
push
jnp
mov
push
pop
gs
(bad)
push
mov
cmp
mov
shl
pop
addr16
xor
in
pop
sbb
jne
fstp
(bad)
repnz
xor
pop
sbb
enter
inc
push
mov
pushf
ja
xor
dec
adc
rcl
adc
cld
stos
pop
jp
sbb
retf
and
ds
xchg
add
ret
loopne
fistp
mov
push
shl
inc
mov
fcom
cli
sbb
clc
jb
xlat
sbb
xor
es
push
cmp
or
scas
jle
inc
lods
iret
leave
call
cmp
aas
and
out
add
dec
gs
gs
ss
mov
dec
hlt
push
fs
cmp
inc
les
cmc
add
retf
(bad)
ror
adc
add
aaa
mov
adc
pop
add
fld
nop
add
cmp
sbb
mov
je
sub
cwde
xchg
mov
jmp
ss
mov
dec
aas
pop
bound
mov
movs
pop
in
data16
xchg
neg
stos
ins
xor
test
pushf
cmps
(bad)
fidivr
inc
push
call
sbb
and
daa
and
bound
inc
aad
mov
push
(bad)
xchg
cmc
inc
sbb
xchg
xor
pop
jmp
sbb
test
push
popf
mov
inc
call
iret
adc
fnstsw
retf
repnz
and
pop
pop
adc
int
lahf
pop
sbb
cwde
pop
mov
ret
push
into
xlat
sub
jle
ret
inc
dec
popf
push
xchg
mov
out
pop
pop
test
in
cmp
aam
xlat
loope
and
cmp
test
pop
mov
inc
mov
lea
outs
std
lock
(bad)
push
or
dec
mov
pop
cmp
inc
pusha
xor
adc
jmp
fnsave
sub
pusha
aam
jns
shr
jns
xor
pushf
test
xor
mov
and
adc
rcr
mov
cmovo
mov
bound
jae
test
(bad)
mul
push
test
inc
adc
inc
aam
movs
daa
lahf
dec
xor
sub
(bad)
xlat
adc
(bad)
(bad)
mov
stos
outs
cdq
(bad)
mov
ins
test
pop
lods
sbb
and
add
pop
mov
mov
pop
fdivr
jnp
scas
sbb
repz
pop
mov
outs
fld
es
pusha
jecxz
ror
add
xor
add
jg
xchg
or
xchg
and
jle
jle
adc
mov
je
ror
popa
les
jg
mov
push
push
pop
out
aaa
cmp
cmps
stos
cli
jb
lods
cwde
jle
mov
fidivr
lock
loopne
sbb
lods
cmp
pop
add
stos
ja
sub
add
inc
sub
push
into
add
and
and
mov
retf
call
or
scas
mov
cmps
out
inc
lods
or
sub
mov
inc
fmul
ss
dec
xchg
fcomp
test
in
test
xchg
adc
dec
adc
pop
adc
push
stc
xor
ss
jge
loop
sub
ds
inc
mov
add
fwait
sti
or
dec
sar
adc
cmps
test
jl
jbe
push
outs
je
imul
mov
jle
inc
sbb
jg
adc
cmp
and
cmps
out
pop
xchg
jbe
leave
pop
(bad)
jp
adc
adc
cwde
or
push
ror
pop
push
lds
aas
xor
movs
(bad)
xor
sbb
dec
cmp
aas
jne
scas
jns
pop
jo
outs
pop
fist
imul
or
push
arpl
dec
dec
lods
jl
fnstenv
scas
imul
xlat
sub
cmp
(bad)
jmp
in
(bad)
inc
and
popa
ins
rcl
mov
mov
not
loopne
popa
je
js
push
ret
mov
jns
fwait
int
xor
outs
in
movs
hlt
ins
pop
xchg
fisttp
fstp
push
mov
lds
cmp
xchg
in
xor
icebp
icebp
(bad)
cld
out
ficomp
mov
dec
xchg
inc
mov
push
push
int3
loop
inc
ror
push
sbb
sbb
imul
aad
jnp
aaa
dec
dec
cmps
je
test
jecxz
add
lods
pop
xchg
mov
int3
in
adc
adc
and
fwait
je
lock
fsubr
je
test
std
push
shl
sbb
test
mov
in
and
addr16
repz
daa
mov
push
das
popf
outs
call
or
in
je
and
dec
lds
not
nop
jnp
pop
test
pop
lahf
test
dec
inc
ds
pop
push
dec
mov
cmps
pop
fs
pop
jg
int3
or
or
mov
mov
nop
and
xchg
or
and
gs
das
add
mov
das
xor
iret
pop
ret
dec
add
mov
mov
push
mov
cwde
sbb
neg
mov
fwait
cs
add
mov
xchg
add
pop
add
fs
std
inc
aas
xor
jo
xor
rol
add
(bad)
mov
out
stc
ins
pop
cmp
addr16
les
adc
loope
imul
xlat
jno
mov
pop
icebp
movs
adc
push
or
mov
sub
retf
popa
cdq
cs
pop
sub
pop
movs
xchg
cmp
or
dec
(bad)
sub
or
xor
call
mov
or
dec
movs
pop
pop
and
cli
mov
inc
add
fisttp
movs
xor
mov
movs
xor
stos
ss
call
shl
loop
inc
inc
sbb
sub
loop
mov
lea
mov
lock
mov
fadd
arpl
scas
jle
mov
inc
cmp
lahf
mov
xor
and
mov
jmp
sar
cdq
cmp
xchg
xchg
dec
mov
into
lods
jg
ret
ss
xor
fs
out
jmp
aad
push
jmp
jne
cmp
inc
ins
mov
mov
scas
outs
mov
mov
repz
sub
(bad)
leave
inc
mov
pop
lds
in
xchg
dec
fistp
std
fs
inc
out
mov
adc
lahf
in
xor
adc
xlat
and
and
dec
ins
jmp
adc
into
imul
push
adc
cmp
cld
fimul
mov
in
int3
sahf
lock
inc
adc
stc
inc
xor
das
fs
movs
test
jmp
fxch
into
sbb
cmp
aaa
mov
icebp
dec
mov
jo
push
push
cmps
outs
mov
dec
mov
adc
push
mov
dec
loop
sub
mov
and
cmc
(bad)
pop
xor
retf
mov
sbb
xor
popf
and
or
mov
pop
add
jae
lock
(bad)
call
arpl
jnp
popa
cwde
dec
jge
or
iret
sbb
cmp
mov
test
dec
cmp
dec
or
js
(bad)
mov
test
sbb
shl
cmps
jns
push
(bad)
fimul
bound
mov
test
jo
stos
stc
test
ins
dec
mov
sbb
jmp
ja
fisubr
psrlw
sbb
(bad)
xchg
mov
sub
sub
cmps
lds
xchg
jge
cmp
js
jo
cmp
jecxz
dec
cli
jne
mov
adc
(bad)
scas
out
out
inc
adc
mov
ds
out
ja
cmp
jecxz
repz
pop
inc
add
movs
jmp
mov
push
addr16
dec
ds
push
mov
cmp
push
sbb
idiv
test
sbb
xchg
mov
mov
jns
popa
ret
add
inc
mov
(bad)
inc
clc
xchg
sub
sahf
mov
jae
aas
arpl
mov
test
add
stos
fcomp
inc
or
es
in
(bad)
xor
fwait
sbb
(bad)
cli
xchg
(bad)
imul
out
dec
xor
loopne
pop
fiadd
es
add
cmp
or
cld
movs
push
xor
pushf
fsub
jecxz
ret
ja
mul
and
stos
lock
inc
pop
and
dec
mov
xor
mov
jp
repz
jmp
mov
jl
add
test
test
dec
cmp
inc
mov
jae
mov
sar
shl
rcr
mov
inc
mov
jo
mov
mov
xchg
fst
inc
fwait
inc
mov
addr16
aaa
xchg
jp
(bad)
push
sbb
das
fnstsw
dec
cld
ror
int3
hlt
stc
mov
sar
push
mov
mov
dec
cdq
dec
and
push
repnz
add
adc
pop
fld
inc
adc
sub
sti
lods
lds
xchg
pop
cmp
add
jb
push
mov
mov
aad
xchg
pop
xchg
sbb
or
sbb
pushf
shr
pushf
mov
loope
cmps
add
mov
mov
jle
retf
and
pop
inc
cld
xchg
cmp
fs
stos
jns
jp
pop
repz
lods
sahf
sub
xchg
sub
fldcw
data16
popf
enter
shl
call
xchg
sub
xor
xor
dec
cmp
in
movs
jle
jge
imul
cmp
xchg
mov
cmp
adc
fcomi
jle
lahf
inc
mov
add
mov
and
sbb
push
stos
je
int3
test
sbb
inc
test
scas
mov
jbe
dec
int3
ret
adc
cwde
pusha
mov
dec
push
dec
add
push
or
pop
(bad)
clc
dec
jne
ss
adc
fsubrp
sub
push
cwde
and
add
fmul
inc
cmps
test
shl
mov
lock
dec
mov
jbe
mov
les
pop
ja
pop
retf
cmp
out
xor
cwde
cmp
or
(bad)
mov
mov
out
sub
and
dec
adc
test
test
test
(bad)
cmp
cmp
adc
jge
inc
mov
pop
rcl
inc
out
call
scas
fisttp
mov
sti
inc
lahf
(bad)
(bad)
pop
push
mov
xchg
(bad)
nop
mov
lahf
xor
fucomi
sbb
fucompp
jbe
inc
pop
(bad)
hlt
(bad)
and
xchg
dec
adc
push
mov
or
pop
mov
lds
jle
mov
ja
daa
mov
sti
jge
or
aad
jg
and
mov
stc
jl
adc
dec
jno
jb
mov
loopne
pop
dec
inc
out
pop
call
les
je
clc
and
loope
push
in
cmps
pop
fnstcw
adc
sar
sbb
out
scas
adc
jno
test
int3
cmp
loope
loope
adc
leave
ss
inc
ja
(bad)
data16
xchg
stos
imul
cmp
mov
pop
xlat
pop
add
loop
xor
xlat
sbb
or
in
out
sbb
inc
dec
jge
sbb
sub
jl
stc
lods
imul
cmc
fs
(bad)
push
cdq
push
or
test
push
inc
sbb
add
je
mov
loope
addr16
pop
rol
dec
cmps
and
(bad)
pop
pop
aaa
inc
sahf
cmp
sub
pusha
cmp
cmp
fimul
sbb
sbb
fdiv
les
sahf
xchg
stos
in
hlt
sbb
and
add
inc
and
jg
pusha
ret
mov
in
frstor
mov
call
jbe
and
mov
and
retf
push
ret
jl
stos
or
leave
out
mov
ja
pop
ficom
je
or
cmp
pop
jge
sti
ins
iret
pop
mov
sub
pop
mov
call
pop
cdq
arpl
push
aas
push
push
xor
data16
fnsave
mov
adc
mov
jp
lds
ror
ror
mov
stos
push
mov
repz
mov
test
out
in
lahf
and
gs
push
jmp
into
mov
cmp
ds
jl
je
mov
es
in
cs
adc
add
fcom
shl
and
es
mov
test
sub
lahf
mov
idiv
inc
aam
push
fwait
test
aas
jns
lods
fs
iret
loop
mov
adc
inc
pop
fmul
mov
loope
dec
jge
pop
lea
cmp
repnz
out
push
push
mov
aas
int
cmps
shl
and
xor
dec
(bad)
push
in
sub
loopne
mov
sti
or
and
or
mov
jb
mov
inc
jmp
aaa
push
adc
pop
sub
mov
div
jae
nop
push
push
and
out
std
popf
mov
fbstp
inc
mov
or
xchg
pop
daa
cmps
and
inc
clc
pusha
mov
aad
push
daa
fcmovbe
dec
lods
scas
sti
and
sbb
xor
xchg
clc
out
ss
jl
shr
sub
in
or
mov
xor
das
xlat
cmp
pop
sub
xor
pop
test
cwde
pusha
jecxz
imul
cmc
add
pop
dec
bnd
xor
push
pusha
icebp
jns
cmps
jl
inc
scas
dec
sub
xor
mov
xor
push
push
fsubr
jo
mov
popf
into
mov
mov
xchg
icebp
scas
pop
jmp
fldcw
add
adc
not
lds
cli
lea
mov
addr16
mov
int
jle
push
test
enter
xchg
stos
add
lea
outs
mov
mov
pop
ins
sbb
daa
mov
or
scas
dec
call
ss
add
test
lock
wbinvd
shl
pop
mov
retf
and
je
jl
ins
pop
inc
shl
lock
popa
adc
xor
lods
lds
pop
push
mov
add
(bad)
xor
call
arpl
adc
mov
fist
push
test
inc
jmp
push
add
idiv
cmc
int
xchg
xchg
jg
xor
jae
ja
int
and
push
mov
jo
mov
inc
xchg
cli
stc
pop
xor
adc
add
(bad)
aad
xchg
int
pop
pop
mov
mov
mov
lods
or
xor
push
xor
int
and
add
jge
js
outs
daa
bound
add
jb
push
enter
and
(bad)
daa
not
loop
mov
pushf
ds
sub
pop
xchg
das
jecxz
mov
and
(bad)
sbb
and
leave
push
dec
dec
ins
adc
mov
scas
fdiv
jle
jmp
test
add
push
sar
xor
sub
je
cmp
cs
aaa
in
retf
adc
add
test
outs
and
int
call
out
inc
or
mov
stos
or
add
ins
imul
xor
mov
push
cs
sbb
xchg
movs
in
cs
inc
xchg
in
mov
xchg
fist
and
pop
push
pushf
(bad)
push
popa
dec
ret
jno
test
mul
stc
ds
imul
pop
or
inc
daa
retf
into
int3
(bad)
fidiv
mov
(bad)
cmps
mov
cdq
mov
in
repz
pop
jg
push
retf
dec
sar
clc
call
fmul
mov
inc
pop
adc
adc
(bad)
retf
inc
xor
adc
movs
fcmovnu
lods
dec
fs
imul
pop
and
xor
cmp
stc
mov
jecxz
outs
xchg
stc
jb
adc
outs
xor
aad
(bad)
pop
enter
es
sub
mov
ins
mov
xor
jle
neg
test
jp
into
or
mov
inc
mov
push
aaa
fdivr
mov
(bad)
jecxz
daa
inc
call
and
mov
aad
shl
lds
xor
fs
xchg
add
dec
pop
add
pop
lods
call
xchg
cld
movs
mov
push
adc
cmps
movs
aas
or
or
icebp
cmp
outs
(bad)
mov
sub
xchg
outs
cwde
iret
fidivr
popa
inc
pop
sub
mov
pop
sub
pop
imul
test
imul
ds
sbb
retf
out
movs
mov
add
sar
das
pop
sub
or
dec
in
xor
fadd
in
and
test
cmp
mov
mov
fwait
mov
xchg
outs
loope
cmp
and
mov
clc
inc
inc
dec
and
add
loopne
sar
push
pop
push
jo
mov
or
cwde
in
add
loopne
fimul
mov
(bad)
ds
mov
fwait
rcl
jns
jmp
jge
mov
mov
cmp
pop
mov
int
jge
cmp
iret
dec
sub
xor
(bad)
fs
into
dec
jo
in
sbb
fadd
bound
add
cmps
jo
aad
xor
fdivp
imul
ret
fimul
or
adc
repz
fwait
mov
(bad)
test
add
popf
inc
in
mov
cmp
leave
mov
push
lods
bound
test
cmp
mov
dec
or
dec
inc
daa
pop
rol
sar
push
cmp
add
std
jbe
xlat
outs
sub
sub
push
pop
repz
or
cli
mov
cwde
xor
repz
shl
and
retf
jmp
imul
fimul
mov
push
dec
jno
ror
dec
push
aaa
enter
add
cmps
ins
mov
les
popf
cmp
or
sar
mov
jg
(bad)
cli
in
xchg
dec
dec
and
std
call
dec
mov
inc
mov
out
out
mov
cmp
stos
push
movs
inc
dec
out
test
aam
xchg
sbb
fstp
xor
xor
inc
push
ret
push
push
in
pusha
mov
movs
cld
mov
add
mov
cmp
push
add
jg
jbe
adc
call
shr
dec
mov
xor
ret
xchg
mov
lods
iret
pop
inc
add
enter
jle
xchg
jno
push
in
cmp
jg
nop
ins
mov
lods
mov
cmp
xchg
add
movs
mov
pushf
xor
fcomp
call
pushf
outs
push
rcl
jae
mov
dec
icebp
loopne
mov
mov
aad
enter
(bad)
arpl
push
sub
popa
mov
rol
push
lea
mov
sti
mov
sub
imul
mov
mov
ins
pop
jle
or
inc
pop
cmp
loop
sbb
sub
in
pop
xchg
lds
icebp
push
cli
push
outs
pushf
fisttp
and
ja
sub
adc
inc
xchg
ins
add
inc
inc
icebp
jl
cld
cdq
jae
xor
sbb
ror
cdq
jmp
les
xor
jne
imul
retf
sub
cmp
fld
inc
cmp
pop
xchg
cdq
outs
(bad)
aad
jmp
out
jmp
and
frstor
aas
inc
push
pop
jns
xchg
mov
pop
call
in
ret
and
ja
xor
out
dec
mov
in
and
test
jl
aam
cmps
inc
and
or
or
xchg
loopne
retf
test
cmp
push
push
jo
pop
adc
hlt
inc
inc
pop
push
mov
jbe
and
in
mov
mov
dec
pop
lods
push
inc
out
inc
or
das
jne
ror
sub
out
or
(bad)
aas
rcl
pushf
dec
jb
mov
shr
or
in
shl
push
xor
das
push
add
jecxz
xlat
mov
outs
push
nop
je
pop
dec
sub
and
cli
lods
lods
cs
das
cs
xchg
add
jbe
push
and
push
fiadd
and
mov
adc
mov
das
rol
bound
jbe
call
cmps
dec
inc
cmps
ja
sub
xor
ret
bound
mov
mov
push
mov
out
clc
ss
adc
mov
in
xor
or
lahf
jbe
dec
cmps
leave
mov
mov
outs
mov
jns
loope
imul
fstp
dec
ja
mov
xchg
int3
jge
sub
arpl
aam
sub
jmp
push
dec
cmp
jo
movs
pop
jle
imul
into
mov
xor
or
and
adc
sub
sbb
cmp
imul
cwde
scas
pop
pop
xlat
ror
mov
mov
sbb
push
test
push
int3
and
mov
mov
sbb
movs
inc
jmp
sti
xor
sbb
ds
adc
js
out
test
leave
push
jge
push
in
lods
or
ret
adc
jns
arpl
call
sub
pop
lahf
xchg
dec
popa
lds
mov
(bad)
out
xor
mov
fstp
xchg
sub
jl
cmp
fimul
xchg
test
xchg
movs
stc
push
fild
sbb
add
pop
inc
test
xor
pushw
xchg
push
loopne
repz
sub
cdq
and
dec
jbe
in
mov
ds
mov
popa
ja
dec
das
or
pop
jge
out
push
aam
cmps
shl
iret
cdq
in
sbb
pop
and
push
sbb
xchg
xchg
mov
and
pop
jl
sbb
or
sbb
lock
in
xor
dec
pop
addr16
es
ficomp
(bad)
clc
pop
dec
cwde
and
pop
sub
mov
sub
cmp
ret
icebp
loope
xchg
stos
add
mov
pop
mov
sub
or
or
outs
inc
popa
sub
jg
adc
sub
enter
ret
sbb
mov
repnz
cld
(bad)
sar
sbb
xchg
aam
inc
hlt
jge
sti
scas
dec
call
and
and
cdq
xchg
cmc
aam
movs
sbb
sub
xor
movs
jb
sbb
mov
pushf
or
adc
fstp
jmp
scas
xchg
push
int3
mov
push
mov
imul
xor
cmp
leave
dec
jge
or
adc
aaa
sahf
in
ds
pop
iret
and
ss
jae
fiadd
mov
or
mov
(bad)
stos
cmp
(bad)
addr16
mov
mov
gs
push
mov
test
mov
je
dec
add
mov
and
jnp
cld
inc
cld
mov
ficom
mov
mov
mov
dec
int
push
das
mov
or
mov
jnp
test
mov
mov
push
es
lods
mov
sub
jb
xor
je
mov
mov
sbb
into
or
jge
ror
mov
jge
ret
mov
movs
jno
or
retf
adc
adc
pop
div
sub
push
add
xchg
frstor
into
add
xor
or
inc
fsub
or
std
loop
call
jns
fiadd
aas
add
or
xor
rdtsc
or
and
je
adc
shl
mov
ja
xchg
jo
data16
inc
jae
sbb
sbb
(bad)
loopne
jnp
or
fld
push
sub
ins
sub
push
ret
sti
mov
adc
inc
mov
jmp
cdq
mov
cdq
test
js
and
jo
xor
out
(bad)
lock
je
shl
popa
pop
adc
fistp
cli
pop
mov
xor
aaa
xchg
popf
mov
sbb
cmp
or
xor
sbb
jb
jle
cwde
lea
scas
push
dec
add
pop
test
sti
call
js
fsubr
dec
imul
sahf
inc
test
pusha
cmp
sub
test
xor
cdq
jmp
aad
scas
daa
mov
daa
add
nop
cmp
push
nop
(bad)
out
scas
aam
sub
and
iretw
adc
or
xchg
adc
shl
xor
popa
mov
push
mov
mov
mov
das
pop
pop
xor
jg
pop
add
pop
jmp
jp
ss
and
out
adc
add
pop
fist
cmp
xchg
xor
aaa
stos
xor
inc
popf
push
popf
cld
inc
sub
xchg
inc
cdq
rol
shl
xchg
loopne
loopne
movs
std
ja
aad
inc
mov
fld
xor
movs
(bad)
mov
mov
test
mov
cli
ins
pop
shl
pop
mov
add
push
in
adc
test
cmc
dec
push
pop
jns
mov
into
fwait
bswap
scas
inc
inc
and
fisttp
sbb
cld
and
ret
ins
sub
fs
jge
ins
mov
in
cdq
ins
ror
not
retf
aaa
mov
mov
in
mov
js
jne
dec
push
cmp
iret
out
mov
fcmovnu
loopne
popa
mov
sbb
adc
shr
std
push
add
jg
data16
ins
xor
stos
sahf
les
aad
sbb
int3
iret
aaa
js
xor
arpl
xchg
jb
aas
popa
bound
lods
jns
mov
jmp
outs
lea
sar
add
mov
into
jns
adc
and
mov
(bad)
scas
out
ret
sahf
popa
pop
pop
and
jo
aas
gs
sub
ins
into
and
and
mov
pextrw
xor
jp
push
enter
(bad)
dec
cld
pusha
jb
pop
popa
test
or
aam
add
pusha
mov
or
inc
push
sub
shl
lds
aaa
cmc
cmps
sbb
fs
xchg
(bad)
in
xchg
sbb
iret
fwait
scas
imul
imul
es
fbstp
adc
push
xor
add
xchg
mov
stos
in
and
stc
lds
dec
add
sub
add
and
adc
outs
(bad)
retf
scas
fild
es
dec
(bad)
dec
ja
jbe
call
lock
stos
dec
mov
pop
jg
sub
ss
adc
stc
ret
xchg
mov
dec
pop
dec
sub
cmc
(bad)
retf
test
fsub
aad
repz
mov
sbb
ror
push
(bad)
fmul
xchg
push
sub
adc
sar
scas
aas
iret
mov
std
adc
mov
dec
xchg
mov
mov
imul
cmp
js
aas
sbb
jecxz
sub
fwait
arpl
mov
outs
arpl
push
cmp
xchg
push
(bad)
fild
mov
out
fs
in
fld
jns
outs
popf
mov
pushf
jg
add
cmp
adc
and
test
fwait
arpl
std
sbb
xlat
popa
cmps
das
and
xchg
lods
adc
shr
sub
mov
pop
leave
cmps
pop
sahf
sub
pusha
xor
mov
mov
or
bound
mov
test
pop
retf
pop
es
enter
bnd
mov
and
sbb
inc
mov
sti
je
add
data16
arpl
gs
xchg
shr
iret
sbb
sbb
xchg
out
jg
test
push
inc
out
adc
mov
dec
add
(bad)
xchg
stc
es
hlt
dec
rol
push
push
xchg
fstp
loope
call
iret
mov
push
cld
xchg
aad
or
ror
mov
inc
push
cmp
aaa
pop
sub
mov
mov
push
call
dec
ror
mov
mov
aam
sbb
clc
fisub
aaa
test
or
xchg
sub
fld
fldenv
jne
and
jne
hlt
hlt
jb
test
mov
movs
xor
mov
pop
lods
inc
push
sbb
outs
push
and
push
xchg
jns
pop
cs
push
sub
pop
adc
or
test
fild
push
cmps
fsub
push
into
or
xchg
sbb
(bad)
outs
jg
nop
ja
hlt
adc
cmps
sub
cmp
int3
data16
ins
idiv
mul
mov
movs
repnz
(bad)
mov
loopne
nop
jg
aas
push
cs
mov
add
mov
repnz
jmp
mov
mov
or
adc
xchg
int
dec
jle
out
in
in
pop
loop
daa
popa
cmp
push
xor
lock
cmp
mov
mov
fcomp
daa
ins
jecxz
sti
and
mov
xor
dec
xor
or
jle
sub
push
add
xchg
xchg
xor
add
mov
mov
cmc
inc
icebp
sub
aaa
mov
imul
je
ja
xor
sbb
call
enter
ficomp
test
jmp
mov
and
cli
inc
jl
mov
shl
adc
aam
or
scas
sub
sbb
cmc
fdivr
sub
adc
sub
std
popf
pop
ror
in
cmp
mov
sar
outs
icebp
xchg
in
dec
ins
iret
ins
dec
int
dec
out
pop
repz
or
in
je
push
lock
call
leave
shl
in
pop
loopne
int
data16
push
ins
popf
das
push
xchg
jnp
xchg
xchg
jle
xchg
jmp
pop
movs
out
push
les
ror
push
icebp
repnz
sbb
or
cmp
enter
ins
stos
mov
mov
and
sbb
pop
out
clc
push
inc
hlt
mov
or
mov
popf
push
sbb
jae
retf
xchg
shl
ja
imul
aad
jle
pushf
inc
iret
fs
jmp
lds
xor
test
adc
nop
pop
xor
xor
and
jns
jg
jge
push
add
pop
sbb
jmp
cdq
jae
cdq
fst
sbb
popf
mov
aas
mov
idiv
pop
inc
dec
dec
mov
push
jge
cmp
in
fs
lds
xchg
mov
rol
int
test
cmc
xor
mov
gs
jae
fiadd
xchg
mov
or
fs
daa
inc
(bad)
test
mov
les
mov
iret
push
and
sub
test
pop
adc
sub
pop
ja
cmp
bound
xor
dec
fisttp
adc
jne
ds
js
mov
mov
(bad)
lahf
xchg
rcr
retf
(bad)
pop
ins
ficom
ret
loop
pop
adc
jns
xchg
jnp
rcl
sub
repz
push
aad
scas
sbb
sub
mov
pop
xchg
mov
mov
sub
lea
aam
or
test
sahf
dec
je
mov
xchg
pusha
push
nop
mov
xlat
neg
mov
pop
xor
inc
push
scas
add
aas
xor
sub
and
fld
dec
push
add
retf
sub
xchg
add
mov
in
inc
mov
out
mov
stos
retf
xchg
and
and
or
pmulhuw
cmp
into
push
jmp
repnz
out
mov
xor
out
xchg
repnz
pop
pop
lahf
mov
mov
inc
adc
pop
pop
and
retf
sbb
cmp
loopne
jge
add
inc
xor
mov
mov
jle
cmps
mov
cmps
mov
sbb
xor
jl
mov
dec
add
xor
mov
adc
iret
les
and
lods
pop
aam
adc
fidiv
(bad)
stos
push
std
clc
sar
xchg
aaa
retf
dec
jno
mov
and
sub
out
js
fs
movs
in
ret
stos
mov
add
fwait
out
aaa
icebp
mov
cwde
and
call
inc
mov
sbb
sbb
mov
scas
les
jne
or
xchg
stos
mov
mov
aas
test
les
mov
push
mov
stos
loopne
fisttp
inc
movs
pop
jecxz
lods
ds
scas
fdiv
fwait
mov
add
inc
dec
pop
xchg
data16
nop
in
stc
xor
push
inc
mov
(bad)
loope
icebp
adc
loope
outs
nop
fsub
sahf
push
mov
aaa
nop
mov
cmp
xchg
push
lods
inc
sbb
and
(bad)
fst
scas
xchg
in
adc
pushf
xor
es
jae
lock
xlat
cmps
movs
adc
cs
jp
mov
inc
(bad)
out
jl
dec
jno
lea
outs
inc
add
push
jmp
pop
fs
mov
sub
inc
lahf
push
xor
pop
or
or
outs
mov
xlat
data16
ins
xchg
stc
sub
push
sbb
dec
pusha
enter
enter
movs
sar
mov
mov
(bad)
retf
fdiv
out
mov
pushw
shl
les
or
adc
retf
add
retf
xchg
outs
popa
movs
sub
sbb
push
and
push
outs
cld
sbb
cli
push
aad
and
call
pop
mov
fstp
jecxz
icebp
mov
inc
test
div
and
into
mov
imul
retf
movs
loopne
out
(bad)
hlt
sbb
xchg
call
lds
adc
inc
mov
outs
outs
xor
dec
(bad)
pop
mov
mov
sti
aad
jbe
rcr
rol
or
aam
push
imul
pop
ins
lahf
or
cmp
xor
into
adc
jg
shr
cld
xchg
sub
rcl
in
imul
pop
cmp
mov
xor
xor
enter
adc
mov
imul
add
call
jp
imul
outs
nop
push
pop
fldenv
push
sub
mov
pusha
movs
je
inc
dec
cmp
test
jb
or
mov
pop
mov
aas
jl
xor
mov
sbb
xchg
imul
xlat
adc
pop
mov
fiadd
inc
pop
sbb
cmp
xchg
xchg
(bad)
fist
jnp
or
dec
arpl
shl
(bad)
mov
pop
jbe
or
and
cwde
dec
xchg
and
shr
adc
adc
int3
mov
adc
scas
sub
or
mov
adc
adc
jecxz
icebp
add
cmp
(bad)
(bad)
xlat
(bad)
nop
xor
push
ins
fwait
dec
imul
mov
cmps
sub
add
pop
std
mov
bound
punpckhwd
je
ja
pushf
pop
adc
sub
mov
push
push
gs
das
and
cmp
int3
sbb
or
pop
mov
std
jp
sbb
add
jae
push
sub
clc
mov
std
inc
xchg
push
arpl
fsub
enter
bound
push
pusha
lahf
push
repz
data16
mov
or
cs
ret
shr
add
iret
dec
xchg
mov
(bad)
pop
and
sub
loopne
cmp
cmps
ins
repnz
loope
pcmpeqb
pusha
popf
sti
pop
adc
jge
push
test
push
mov
cwde
xchg
pusha
xor
pop
inc
movs
pop
mov
mov
cmp
in
mov
lods
div
scas
ja
in
dec
stos
mov
sub
jp
adc
cld
dec
dec
or
sbb
adc
aas
pop
sub
cli
outs
ficomp
mov
mov
gs
mov
sub
outs
sbb
shr
xchg
nop
(bad)
iret
and
mov
nop
mov
or
jge
sbb
pop
xor
popa
pop
leave
fiadd
movd
mov
fisub
repnz
daa
xchg
push
mov
sub
rep
out
adc
mov
xchg
dec
mov
test
mov
lahf
push
aaa
sti
cmp
sub
(bad)
push
(bad)
sti
js
push
xor
fwait
xlat
dec
jmp
repz
clc
test
sub
sti
mov
or
push
ins
xchg
test
push
xchg
rcr
jae
push
xor
loopne
rol
es
mov
outs
add
xchg
std
pop
aaa
push
dec
inc
stos
adc
jl
hlt
cmp
push
xchg
mov
repz
mov
xor
dec
cmp
pop
int3
jmp
and
loop
add
outs
aam
fistp
movs
mov
sbb
cmp
fimul
mov
bound
fxch
retf
push
dec
push
in
ins
fimul
pusha
shrd
xor
stos
addr16
push
data16
stos
dec
fs
sahf
mov
push
jno
daa
popf
adc
repnz
mov
mov
ins
daa
xchg
scas
daa
cmc
xor
pop
mov
mov
(bad)
xchg
push
fstp
(bad)
loope
or
mov
jns
pusha
into
xchg
sbb
cmp
sub
push
jnp
mov
(bad)
xchg
push
mov
and
into
retf
mov
xor
adc
minps
leave
ins
or
add
cdq
shl
lds
arpl
ss
std
jg
test
cmc
les
mov
xor
ret
and
or
jno
fwait
sbb
pop
je
inc
push
repz
jmp
sbb
and
dec
nop
and
sbb
sbb
js
cli
sbb
fs
dec
or
sub
jmp
xchg
xchg
call
es
and
imul
dec
sub
sti
aam
sub
scas
test
repnz
rol
movs
adc
cmps
(bad)
pop
mov
retf
in
jo
data16
addr16
pop
sub
sub
jle
lahf
push
add
mov
jg
mov
pusha
pop
sub
fwait
(bad)
rcl
popf
xchg
adc
dec
imul
inc
sbb
cmp
call
loope
push
push
xor
mov
mov
or
jmp
call
xor
cmp
mov
fnsetpm(287
inc
jl
fcomp
leave
mov
jle
or
inc
sub
(bad)
(bad)
repnz
ds
ret
cmp
icebp
sub
push
leave
adc
dec
sub
das
sub
jnp
es
(bad)
jle
neg
sbb
jno
push
push
and
add
ret
(bad)
lea
and
fsub
pop
fcom
rcr
push
out
adc
push
shl
out
cs
mov
aam
jecxz
xchg
lds
xchg
inc
arpl
cmps
xchg
mov
cmp
int3
jmp
mov
xor
aam
jnp
aas
push
mov
bound
cmp
adc
pushf
stos
call
mov
cmp
mov
pop
cdq
(bad)
add
ret
push
mov
adc
jg
mov
mov
dec
icebp
icebp
shr
je
adc
cld
or
adc
jnp
cmps
xor
pop
fs
inc
mov
div
pop
and
scas
lds
das
leave
mov
repnz
fidivr
repnz
xor
mov
mov
pusha
or
mov
xor
mov
xor
xor
retf
test
das
mov
pop
arpl
mov
mov
xor
sub
addr16
xchg
add
mov
jno
jg
xchg
mov
rcr
shl
rcr
inc
push
and
pop
hlt
add
pop
int3
enter
sbb
sub
jp
leave
ror
or
jno
sar
inc
mov
loop
push
pop
sub
sub
mov
jbe
xchg
cld
cdq
out
out
out
shl
mov
mov
add
mov
or
mov
fdiv
arpl
inc
test
ss
mov
mov
jg
std
adc
sar
(bad)
mov
leave
aas
push
cdq
mov
mov
imul
push
jno
jge
or
push
sbb
jmp
aad
pop
fmulp
jbe
pushf
bnd
not
repz
cmp
cmp
je
cmc
stos
popf
aas
and
test
pop
and
pushfw
in
xor
lock
add
xchg
dec
sub
cli
inc
inc
adc
add
mov
loop
fnsave
xchg
sub
ror
ret
sbb
loope
test
out
loopne
rcl
pop
ret
imul
inc
cmp
cli
push
call
xchg
pop
dec
bound
fadd
jbe
jb
pop
add
repnz
xor
inc
jmp
cs
xchg
cmp
mov
(bad)
addr16
not
xor
and
in
mov
cmps
mov
and
in
scas
stos
popa
xchg
cwde
push
mov
arpl
push
add
stc
cmp
mov
mov
jbe
call
lea
jl
leave
test
in
bound
ffreep
pop
mov
xchg
cdq
xor
and
test
push
jg
stos
fisttp
adc
stc
jo
jl
popf
jp
inc
popf
fadd
and
adc
mov
shl
sub
in
adc
dec
cmps
imul
out
push
push
sbb
pop
cmp
(bad)
cmp
pusha
add
fmul
retf
in
adc
es
ss
cs
mov
xor
ins
inc
test
fiadd
dec
jmp
iret
inc
mov
fdivr
pushf
push
or
out
xor
add
or
xor
inc
dec
push
cmp
cmc
in
push
or
gs
cld
mov
stc
fwait
and
mov
ss
cmp
ins
push
les
cmp
es
pop
push
jmp
test
fwait
mov
data16
or
mov
into
mov
rcl
int3
mov
push
jge
mov
pop
push
mov
lods
aas
jecxz
xor
add
lods
inc
mov
pusha
cmp
or
and
ds
mov
cmps
add
add
and
scas
push
push
xchg
mov
sbb
and
push
loop
xor
popa
retf
loop
lea
cmps
outs
lea
sub
dec
xchg
inc
push
fdiv
jmp
jp
xchg
faddp
pusha
ds
xor
or
imul
push
jne
int
iret
inc
loop
adc
inc
popf
cmp
pop
ja
mov
cmp
adc
sbb
push
mov
mov
jae
arpl
rol
pop
mov
pop
jmp
inc
les
out
xchg
cmps
or
dec
je
xor
dec
lods
push
adc
mov
int3
mov
xor
mov
enter
repnz
sti
push
pushf
push
mov
pop
cmp
or
jae
push
inc
movs
arpl
int3
imul
adc
sti
movs
fwait
pop
addr16
jl
fwait
mov
clc
lds
ja
mov
lahf
and
add
outs
mov
sbb
mov
add
adc
and
jmp
int3
call
mov
or
push
xchg
or
shl
ds
out
xchg
pop
cmp
iret
mov
(bad)
cld
test
xchg
or
xchg
(bad)
sbb
cs
push
or
sbb
int
or
jmp
pop
mov
pop
jg
cmc
mov
adc
in
and
cdq
cdq
(bad)
pop
dec
or
add
cli
popa
bound
push
lahf
or
dec
or
sbb
dec
push
mov
inc
cs
cdq
nop
xchg
out
xor
jns
pop
fwait
sbb
pop
ret
or
mov
cmp
hlt
push
dec
mov
stos
ja
sub
xchg
fnsave
and
or
push
xlat
jo
pop
or
cmp
enter
xor
push
push
mov
or
mov
or
(bad)
mov
in
scas
pop
xor
(bad)
fcomp
sbb
push
je
push
int3
(bad)
loope
or
xchg
push
jge
enter
or
push
xchg
shl
sbb
cmp
nop
sub
adc
add
sbb
mov
std
and
cmp
sub
bound
cli
push
popa
cmps
(bad)
pop
repz
scas
stc
jne
int
or
jecxz
and
pop
jne
cwde
ins
mov
int3
cmp
dec
xor
ds
xchg
add
and
mov
or
mov
dec
mov
cmc
and
call
fnstenv
pop
jecxz
mov
clc
adc
into
xchg
shl
rcl
cmps
fdiv
lods
in
cld
sbb
pop
retf
stos
xchg
sbb
lahf
nop
xor
adc
aaa
cdq
push
mov
jb
xor
mov
ficom
push
test
inc
lahf
cmps
sub
ror
or
or
push
imul
sub
push
les
push
bound
push
jge
outs
cmp
retf
in
xchg
cmc
loope
ins
cmp
aad
push
imul
std
retf
out
pop
push
jg
add
sahf
mov
sbb
jmp
add
push
ja
imul
mov
sar
push
and
or
xor
aam
sbb
stc
ret
cmp
pop
or
int3
sub
cli
and
nop
push
cmp
mov
mov
loop
aad
inc
jle
add
or
push
sahf
int
sti
add
ucomiss
add
clc
inc
pushf
pop
mov
cmp
adc
add
mov
test
or
retf
push
inc
hlt
pop
mov
adc
sub
push
scas
ret
adc
adc
sub
xchg
xor
or
dec
xchg
dec
cmp
xor
into
cwde
pop
cmps
add
and
mov
xor
mov
inc
jl
sub
add
shl
enter
fiadd
jmp
int
aas
jmp
mov
lods
into
int
rol
or
xor
outs
retf
adc
mov
xor
push
add
push
push
dec
adc
outs
neg
repz
neg
mov
leave
retf
mov
push
pusha
(bad)
or
(bad)
xchg
ja
movs
jmp
and
mov
mov
(bad)
adc
xchg
les
mov
pop
and
(bad)
std
cs
outs
fistp
add
(bad)
aam
in
mov
lods
cmp
xor
jo
loopne
xor
cs
(bad)
pop
aas
imul
jg
mov
jmp
mov
arpl
stos
iret
ret
out
add
pop
xchg
fs
and
sbb
gs
adc
add
dec
pop
add
daa
leave
aad
ss
add
sbb
in
mov
hlt
add
mov
ins
xchg
sub
clc
cmp
fs
pushf
in
(bad)
cmps
les
or
pop
mov
xlat
ret
int
xor
cmp
loop
dec
loopne
xchg
push
add
mov
pusha
sbb
xchg
xor
cli
aas
fs
pop
call
pop
adc
fisubr
and
test
cwde
xchg
sub
jno
xchg
shl
imul
lods
outs
add
jno
sbb
sub
jle
mul
mov
ins
jg
pop
imul
jnp
outs
xor
push
pop
sub
dec
aaa
push
(bad)
leave
ins
fisubr
and
ja
xchg
ret
pusha
int3
or
sbb
mov
add
mov
sahf
div
fnsave
xor
sbb
idiv
out
mov
(bad)
mov
dec
fbld
mov
jne
ins
test
mov
or
cmp
push
shl
sbb
in
jg
jne
rol
dec
lds
fistp
push
add
jmp
inc
stos
lods
xchg
adc
fsub
or
add
mov
inc
add
ret
push
shr
cli
lock
mov
adc
ficom
inc
mov
cmp
jmp
das
fxam
(bad)
hlt
push
sahf
cmc
inc
test
ss
loope
shr
xchg
dec
xor
inc
xchg
xor
jo
stos
das
pop
mov
pop
sbb
fmul
mov
shl
xor
gs
push
cs
mov
and
adc
pop
push
stos
push
in
ss
(bad)
add
enter
loope
pusha
ins
mov
cmp
hlt
dec
cwde
hlt
aaa
pop
mov
jb
cmp
mov
mov
inc
sbb
xchg
idiv
aad
sub
adc
pop
jge
and
jp
or
sub
mov
dec
movs
cwde
mov
push
sub
push
ret
(bad)
inc
jbe
mov
sub
and
mov
aad
ret
push
pop
stos
add
or
jp
dec
nop
imul
imul
mov
push
dec
push
pop
mov
mov
and
sub
mov
fbstp
lods
lods
mov
shl
sub
jecxz
test
addr16
cmp
push
push
mov
imul
cmps
push
fcmovne
cmps
mov
cs
inc
ins
loopne
jle
cmp
adc
mov
mov
mov
cs
arpl
mov
mov
data16
cmp
push
fldenv
sub
out
inc
mov
aam
mov
jmp
mov
in
jge
cli
fsub
sub
test
mov
xchg
movs
bound
adc
lods
and
cli
jmp
or
push
lds
call
or
and
call
jae
lea
aas
add
adc
(bad)
and
mov
dec
inc
cmps
pop
jmp
(bad)
loopne
out
push
mov
push
add
ret
pop
movs
adc
inc
jbe
or
inc
mov
movs
out
push
jnp
mov
push
xchg
popf
inc
ss
pop
bound
retf
repz
jnp
cmc
rcr
mov
ja
push
xor
cmps
mov
retf
add
lock
or
pop
fild
imul
xchg
add
jecxz
(bad)
xor
adc
mov
jae
hlt
and
stos
jl
stc
cwde
mov
adc
aas
loop
out
mov
cld
dec
xchg
fnstsw
neg
rol
rol
add
adc
call
(bad)
stc
cmp
ja
retf
or
in
sbb
vunpckhpd
add
mov
and
pop
fwait
int
mov
add
ins
cwde
lahf
sbb
sub
lock
fwait
rol
mov
push
(bad)
sbb
push
push
push
imul
aam
(bad)
fidiv
bound
loopne
sub
mov
cmc
mov
(bad)
in
lods
mov
jae
cmc
sub
dec
loopne
jecxz
inc
jb
pop
ins
imul
pop
dec
sbb
xchg
xor
test
xchg
(bad)
cdq
xor
fcom
call
sub
cs
int
das
in
sbb
dec
inc
rcr
and
push
pushf
loop
lods
mov
scas
mov
cs
jne
add
push
js
push
xchg
adc
pop
stos
popf
jne
add
xlat
cmc
ret
mov
scas
push
or
sbb
aam
mov
mov
push
xor
scas
push
sbb
js
cmps
mov
push
mul
adc
mov
sbb
sti
out
push
mov
sbb
imul
movs
lds
pminub
pushf
std
daa
dec
jg
cld
fisub
repnz
dec
sub
inc
jns
sbb
retf
sub
fisub
pop
sub
mov
mov
(bad)
mov
pop
addr16
ins
jnp
push
jmp
cmps
cmp
loop
stc
and
dec
or
outs
sbb
rcr
inc
dec
pop
pop
cmp
inc
sar
rcr
cdq
jns
cdq
mov
push
or
mov
dec
movs
mov
mov
aad
cmp
jl
inc
call
jmp
pop
mov
xor
jbe
pop
push
mov
add
nop
mov
les
mov
loop
pop
popa
pop
pop
retf
xor
out
jmp
loop
mov
add
repz
mov
push
(bad)
jne
nop
push
enter
mov
sub
adc
fcomp
adc
add
lds
xchg
jns
in
mov
or
push
sahf
scas
push
cmc
scas
movs
ds
add
ret
test
xchg
pop
mov
imul
mov
ficomp
dec
cmp
dec
jp
xchg
cmc
cld
mov
ja
sub
push
adc
dec
sbb
pusha
add
pop
cmp
mov
les
adc
outs
repz
imul
and
adc
lods
cmp
(bad)
mov
movs
xchg
inc
ss
jge
or
sbb
and
dec
loopne
mov
push
cmp
enter
bnd
and
xchg
xor
cld
sbb
aaa
push
jae
das
daa
push
sti
jmp
jle
fstp
movs
imul
ret
mov
leave
(bad)
int3
and
(bad)
mov
sub
or
int3
(bad)
and
popa
mov
sbb
lahf
mov
add
mov
retf
xlat
cmp
jb
cmp
ficom
shl
mov
and
push
jb
aas
movs
in
add
cmp
xor
sahf
pop
test
pop
cmp
mov
sub
dec
in
mov
xchg
jl
xor
jmp
sahf
lods
jp
add
loop
inc
sti
jno
pop
pop
mov
push
inc
mov
out
fwait
xor
stc
fsub
das
shl
mov
popf
sbb
jo
repz
xor
sahf
and
outs
sub
mov
(bad)
les
mov
rcr
pop
iret
int
jae
ret
push
arpl
fbld
cmps
and
add
mov
mov
nop
jno
cmp
lock
add
or
nop
loopne
icebp
dec
add
(bad)
and
and
push
pusha
jle
call
stos
push
enter
sbb
nop
aam
repnz
or
push
repnz
les
out
adc
mov
daa
mov
ds
repnz
imul
cli
gs
xor
cmp
iret
out
xor
jge
out
inc
pop
cdq
gs
std
scas
jecxz
(bad)
inc
push
jmp
dec
pop
add
in
mov
dec
int
jg
mov
inc
les
mov
mov
jnp
or
cs
(bad)
mov
push
neg
scas
xchg
(bad)
jmp
(bad)
addr16
enter
cmp
xor
add
mov
out
out
cmp
(bad)
cdq
xchg
jo
fbstp
sub
xchg
fisttp
push
daa
dec
hlt
pop
imul
sub
xchg
or
out
push
dec
pop
cwde
pop
mov
inc
xchg
push
sub
mov
stos
mov
fs
or
xor
into
ds
adc
or
addr16
add
pusha
daa
sub
aad
rol
lds
adc
jne
test
dec
sbb
fs
lds
xchg
stos
out
movs
or
popa
and
dec
sbb
hlt
adc
sub
ins
call
enter
pop
lock
cmp
(bad)
rcr
aam
gs
mov
das
xor
loope
fimul
cmp
rcl
sbb
int
jp
jl
or
push
movs
mov
call
fadd
adc
std
pop
cmc
retf
xor
pop
cmps
mov
or
aad
iret
scas
xor
jbe
fild
ss
xlat
fmul
cs
or
(bad)
sbb
or
push
ret
das
xchg
jmp
sbb
rcr
pop
push
cli
xor
sub
inc
xor
dec
cs
jnp
and
jmp
jecxz
(bad)
cmc
xor
mov
xor
xor
ins
nop
adc
and
or
mov
mov
cmc
addr16
push
out
jp
lods
push
daa
and
icebp
jl
hlt
jg
inc
push
jmp
test
pop
adc
sbb
sub
call
pop
and
sbb
xor
mov
push
popf
sbb
mov
into
push
popf
jg
dec
sub
add
rcl
and
ja
xlat
enter
inc
sti
xor
sub
lds
shl
lock
push
sbb
jmp
fs
add
or
loop
fisubr
mov
mov
call
cmp
daa
in
and
or
jmp
mov
movs
lock
not
sbb
xor
sbb
fist
sbb
xor
fbstp
jno
in
pop
leave
fwait
stc
rol
out
gs
sub
push
cmp
cmps
lock
mov
mov
or
jo
xchg
movs
sub
paddw
push
rcl
add
jl
and
leave
cmp
or
imul
inc
or
mov
inc
or
rcr
dec
imul
add
arpl
mov
adc
in
xlat
mov
dec
and
xchg
xchg
push
mov
fnstenv
dec
mov
ficomp
lahf
xchg
pushf
mov
lea
jle
xchg
out
jb
mov
pop
mov
dec
stc
ja
jbe
push
push
dec
cmp
cmp
inc
or
xor
push
into
mov
nop
fbstp
lds
mov
mov
and
sti
inc
sub
test
pop
fldcw
xchg
test
cmp
sbb
fisub
call
and
sbb
mov
retf
cwde
xor
pop
add
xchg
sub
call
in
shl
mov
dec
mov
out
data16
stos
cwde
jb
xor
xor
xlat
lods
shr
test
pop
cdq
movs
jle
mov
mov
mov
push
lds
out
mov
inc
popa
out
mov
pusha
in
loope
inc
jmp
mov
xchg
or
push
inc
mov
sub
push
fsub
and
popf
xor
ds
inc
or
xchg
or
cmps
add
adc
test
retf
fld
jne
test
(bad)
sub
sub
cli
push
sub
cs
push
call
js
xchg
scas
mov
aam
sbb
shl
mov
cmp
cwde
outs
popa
test
sub
inc
xchg
jne
and
fcmovne
fsubr
aam
cmp
mov
cmp
mov
dec
adc
stos
mov
push
fnsave
fild
fild
lds
pop
jne
loop
repz
ins
push
lods
fidivr
sub
add
mov
mov
fsub
in
lods
adc
(bad)
into
cld
mov
xor
rcr
arpl
dec
popf
sbb
push
mov
or
fistp
push
imul
(bad)
in
jecxz
push
outs
add
movs
sbb
push
icebp
cs
jb
(bad)
fstp
ins
out
push
dec
sbb
fwait
dec
adc
add
les
lods
shl
cmp
outs
and
xor
loope
scas
xor
pop
or
jg
push
adc
das
xchg
(bad)
in
mov
mov
hlt
mov
and
xchg
sbb
(bad)
test
xor
movs
out
aas
leave
fimul
or
or
icebp
dec
lods
loop
pop
xchg
sub
jo
push
ret
push
dec
sahf
jno
retf
sub
pop
mov
fldcw
push
ins
lds
outs
add
iret
(bad)
popf
sub
and
out
or
jecxz
retf
dec
outs
iret
into
and
xor
inc
ins
dec
(bad)
bnd
and
or
cmps
pushf
xchg
xchg
xchg
pop
or
and
push
lds
jne
ret
lock
jb
mov
add
inc
cmps
ja
or
lea
pop
dec
xor
in
jmp
pop
cwde
mov
sahf
cs
add
mov
and
pop
add
adc
xlat
loop
inc
test
push
int
dec
rol
scas
fdiv
hlt
jae
push
cli
dec
test
xchg
sub
xor
mov
jge
cmp
sbb
cmp
mov
into
pop
sbb
push
dec
(bad)
and
adc
retf
cmc
xor
add
push
and
sbb
in
inc
push
popa
mov
and
mov
daa
mov
mov
shl
xor
mov
test
add
pop
adc
sahf
or
adc
jg
mov
(bad)
xlat
ins
cmps
xchg
movs
sub
out
ss
mov
gs
repz
leave
jg
or
fmul
xchg
test
xor
jbe
pop
lds
mov
icebp
mov
loope
call
sub
jg
fsubr
dec
call
sbb
xchg
xor
stos
inc
in
fcom
jg
(bad)
sub
or
push
sub
cmp
jne
push
jecxz
inc
mov
test
cmp
popf
inc
ins
(bad)
in
mov
(bad)
xor
scas
clc
inc
jg
jne
mov
or
inc
pop
std
into
push
dec
jge
repz
in
enter
out
mov
imul
retf
cwde
and
inc
pop
fdiv
dec
cmp
lahf
xchg
push
test
jmp
outs
and
std
cld
add
scas
xchg
ret
pop
fild
retf
in
fxch
call
pop
mov
cmps
imul
sub
outs
cmp
dec
int3
mov
cwde
cmps
push
add
mov
xchg
push
mov
or
jns
fdivrp
push
pop
shl
fisub
js
xchg
mov
and
(bad)
sar
hlt
jnp
shr
jbe
(bad)
fnstsw
sub
movs
fisub
icebp
int
imul
mov
adc
stos
idiv
scas
rcl
sbb
pop
or
cmp
sahf
sub
adc
fs
push
ret
lock
add
cs
pop
xor
mov
out
shr
cmps
pop
sub
xor
out
sub
mov
xlat
mov
dec
test
loopne
ss
(bad)
sub
sbb
lea
or
pop
mov
jne
jbe
jae
sbb
call
or
push
and
cwde
jmp
and
jg
rcr
jo
cmp
cmp
ds
lods
push
and
jle
fidivr
cmps
and
dec
pop
adc
mov
sub
ss
dec
mov
mov
mov
sbb
fisub
fs
mov
xchg
jne
pop
out
shl
sbb
mov
mov
iret
sti
ret
lods
jbe
addr16
push
stos
and
outs
jbe
ins
je
dec
hlt
data16
pop
jbe
jg
mov
scas
and
jo
push
clc
call
mov
xor
les
jp
jge
sub
lods
jg
repz
xor
imul
jp
in
sub
jmp
jp
mov
jle
mov
sahf
mov
scas
fsub
inc
xor
lods
xchg
ret
icebp
inc
mov
ins
dec
pop
mov
cmp
scas
iret
mov
pop
adc
out
dec
sub
outs
cdq
call
pop
cmc
xchg
xor
enter
mov
inc
std
je
inc
pop
push
repz
bound
je
sar
jnp
pop
out
adc
je
gs
movs
add
inc
mov
aad
out
pop
(bad)
sub
nop
xor
mov
mov
test
rol
cmc
xchg
retf
xor
and
mov
scas
mov
push
xor
cmps
outs
into
mov
sbb
adc
xlat
push
es
add
sar
sti
fwait
rcr
xchg
in
mov
icebp
imul
inc
sbb
and
lods
mov
push
jne
xor
pop
imul
mov
fadd
dec
mov
(bad)
xor
jne
pop
arpl
cmps
xchg
mov
push
je
idiv
xor
bnd
xlat
mov
(bad)
test
push
je
aas
cdq
fcom
jb
xchg
push
shl
xchg
sub
cmp
das
cmps
sub
sbb
das
push
into
sub
(bad)
out
out
addr16
int3
pop
mov
adc
and
inc
test
fcomp
repnz
cmp
out
pusha
cmp
fisttp
das
sbb
lods
mov
in
mov
int
and
push
inc
inc
jmp
les
mov
mov
jmp
das
sti
adc
mov
or
mov
test
cmp
mov
cmp
call
or
mov
in
nop
mov
ja
add
add
mov
inc
das
test
out
push
push
inc
es
jne
test
aas
and
retf
repnz
dec
cdq
push
mov
stos
loopne
cmp
(bad)
jp
mov
pop
dec
inc
fs
adc
stos
pop
pop
mov
push
fcomp
mov
dec
out
cmp
sbb
(bad)
fcmovnbe
das
mov
mov
jmp
dec
cmp
xchg
aad
sbb
mov
xor
je
stos
xchg
add
or
int3
je
push
scas
iret
ss
push
popa
push
je
mov
sbb
test
xchg
xor
mov
inc
sbb
mov
ror
adc
pushf
mov
call
dec
imul
cmps
xchg
xchg
mov
add
push
sti
jmp
xchg
mov
pop
aas
cmp
push
nop
aas
add
cs
jbe
pop
fdivr
mov
cli
repz
or
jb
cmc
test
and
(bad)
outs
cmps
clc
nop
mov
jns
sahf
jb
daa
popf
adc
pop
add
call
enter
jp
xor
btr
or
inc
int
pushf
retf
dec
cmp
cs
jl
push
mov
mov
xchg
xor
sub
sbb
mov
repz
(bad)
jmp
xor
jle
aas
gs
sbb
jg
xor
loope
shr
jle
mov
xor
cmp
jmp
and
xchg
les
dec
rdtsc
mov
loope
aaa
out
mov
push
add
stos
bound
rol
sub
pusha
(bad)
jge
dec
xchg
push
jg
popa
je
shl
popf
scas
ss
xor
(bad)
aad
and
arpl
sahf
test
jb
push
daa
jl
jnp
cmp
out
iret
mov
aad
(bad)
or
jae
cmps
movs
stc
ins
int3
(bad)
mov
shl
cmp
sub
fs
jnp
inc
out
or
outs
shl
es
pop
or
ins
or
jne
out
mov
xchg
int3
jbe
outs
gs
mov
mov
mov
test
bound
push
int
fwait
mov
mov
xor
mov
stc
push
lods
mov
jmp
push
dec
adc
sub
call
fxch
fwait
add
nop
rol
lock
lahf
pop
sub
fisubr
cmp
push
(bad)
and
stos
addr16
iret
mov
push
(bad)
pop
and
pop
pop
or
push
test
cli
sub
and
fs
rcl
enter
popa
leave
sbb
sbb
fisttp
out
retf
js
retf
loope
scas
inc
outs
add
outs
inc
jo
(bad)
dec
bound
push
cmp
mov
cmp
cmp
data16
mov
xchg
(bad)
lds
mov
sbb
or
mov
push
add
inc
bound
or
xor
shl
test
mov
sbb
sub
arpl
sti
jb
enter
ror
jl
add
int3
push
mov
dec
aas
fsubr
call
mov
out
nop
sub
mov
pop
xchg
das
jmp
leave
adc
jne
dec
aaa
daa
mov
mov
rol
int3
push
test
jo
not
xchg
pop
push
inc
adc
or
(bad)
mov
and
add
inc
xchg
jnp
shl
jns
jnp
xlat
lea
loop
xor
lea
lahf
mov
and
mov
into
or
adc
in
cmp
sar
cmp
(bad)
bound
inc
div
aaa
sub
cmp
ds
jle
dec
ret
or
jmp
jo
mov
push
je
int3
dec
cwde
js
mov
outs
mov
mov
inc
clc
cmp
fwait
pop
adc
cmp
dec
das
sub
cli
xor
xor
stos
je
push
es
std
add
adc
movs
pop
dec
sub
ja
push
xlat
rcl
add
std
and
leave
adc
popf
push
pop
sti
(bad)
push
dec
stos
mov
add
popf
jbe
sbb
hlt
push
out
cmp
mov
imul
mov
xchg
enter
cmp
out
jmp
jne
mov
test
sub
imul
xchg
sub
imul
fcom
adc
std
outs
jp
xchg
movs
pop
out
sub
xchg
mov
adc
in
test
sbb
cmp
out
inc
cs
add
pusha
push
pop
dec
mov
xor
sub
loope
cmp
mov
mov
mov
pop
sti
aaa
push
popf
inc
xchg
int3
rcr
or
push
pop
shl
xlat
pop
sub
adc
or
neg
(bad)
into
adc
imul
movs
dec
aad
gs
sbb
dec
or
dec
inc
push
stos
push
push
imul
bound
mov
mov
ja
and
pop
jns
loopne
add
cdq
sub
xlat
push
or
jmp
push
jae
hlt
mov
jle
jbe
cmps
lods
loop
inc
fmul
inc
or
dec
enter
adc
sub
scas
pop
and
mov
test
push
fwait
in
push
jb
mov
mov
or
lahf
div
sbb
jmp
xchg
mov
in
(bad)
mov
divps
add
push
push
fbld
xchg
dec
adc
sub
mov
pop
loope
cmps
push
xchg
and
cs
mov
aas
mov
in
mov
or
test
and
sbb
mov
ds
imul
and
adc
jo
mov
jmp
dec
pop
cmps
cmp
ins
mov
gs
ins
xchg
paddusb
xor
aas
pop
cmp
and
sbb
jge
aaa
ins
es
rcr
sub
das
out
in
mov
jle
push
fs
sbb
inc
outs
mov
push
lock
adc
ret
addr16
lock
sub
ja
cmp
pop
cli
movs
cmp
adc
cmp
dec
frstor
nop
gs
int
fist
sbb
xor
lods
lods
lahf
test
add
call
push
or
std
int
mov
push
ja
push
iret
dec
dec
int3
jnp
cmps
mov
sar
popa
inc
xchg
sbb
sahf
call
in
(bad)
pushf
mov
aaa
jp
(bad)
jmp
sub
sti
inc
pop
icebp
inc
in
dec
dec
(bad)
in
out
push
shl
fild
inc
xchg
fdivr
lods
jmp
mov
adc
aad
fst
int3
pop
jge
call
and
or
mov
loop
cli
push
pop
jge
xchg
int
or
jmp
and
repz
aam
xor
les
fs
mov
call
add
inc
cmps
jmp
shl
adc
mul
outs
shl
fnsave
movs
call
test
das
inc
stos
mov
mov
cmp
adc
loopne
imul
dec
(bad)
fadd
mov
rol
das
fisubr
xor
pop
or
lock
stos
adc
or
sbb
jnp
aas
sbb
out
fdivr
sbb
push
or
dec
cmp
add
hlt
and
cmp
sub
push
loop
std
or
test
xchg
std
adc
mov
fwait
movs
mov
sbb
push
arpl
sbb
mov
xchg
test
cmps
and
adc
rcl
pop
icebp
ss
shl
or
add
cmp
mov
push
mov
call
mov
stos
mov
jne
xor
pop
movs
xchg
popa
cmps
adc
cmp
push
push
hlt
jmp
add
mov
jmp
push
cmp
sub
rcr
das
and
or
inc
cmp
enter
jge
mov
sbb
sub
xor
stos
and
(bad)
in
nop
inc
cmp
sbb
das
sahf
xor
lock
(bad)
mov
pop
ss
mov
pop
cmps
sub
mov
mov
jo
fadd
dec
add
xchg
adc
jne
leave
aaa
enter
leave
(bad)
dec
cmp
push
in
ins
or
push
pusha
or
or
push
inc
sbb
fld
stos
and
sahf
scas
jo
jae
ss
jne
iret
out
loop
and
pop
cmp
in
rcr
pushf
icebp
xchg
and
mov
and
sti
xchg
mov
dec
fistp
xor
mov
lea
call
(bad)
mov
mov
xchg
int
cmc
pushf
jbe
jge
ret
pop
pop
and
and
(bad)
cmp
sub
cmp
mov
sti
and
sar
das
mov
cmp
aam
mov
push
inc
movs
ret
test
jp
inc
inc
jo
jb
in
movs
push
mov
mov
pop
cmp
sbb
ins
scas
addr16
mov
cmc
push
or
out
aam
add
cmp
pop
inc
mov
fcom
(bad)
jge
jns
dec
jo
mov
sub
jo
fsub
pop
addr16
mov
and
pop
loop
adc
stos
xchg
pop
cmp
aad
les
fucom
dec
or
fnstenv
sahf
jns
push
add
addr16
stc
test
fidiv
loop
mov
shl
loope
cld
lods
xor
push
add
and
fcmovu
loop
or
push
bnd
sub
push
les
mov
(bad)
into
and
iret
jo
int3
outs
jmp
fcomi
sub
sub
push
cmp
pop
fsubrp
pusha
ins
aad
xlat
stos
cli
mov
jnp
out
std
jb
inc
retf
xchg
mov
mov
pop
push
adc
or
adc
lds
fsub
into
inc
idiv
shr
lods
dec
and
out
sbb
mov
lods
jne
cmp
and
arpl
ins
push
xor
jo
arpl
pop
mov
sbb
idiv
mov
arpl
out
or
jg
jg
out
cmp
and
or
and
leave
xchg
sub
(bad)
test
mov
mov
jmp
xor
pop
out
fisub
not
test
aaa
icebp
fdecstp
sahf
(bad)
fcomp
shl
hlt
inc
call
push
(bad)
in
mov
push
push
scas
sbb
jp
out
mov
xchg
dec
dec
sub
inc
cmps
mov
mov
xor
scas
addr16
mov
mov
and
test
adc
popa
push
or
les
xchg
jmp
mov
scas
cld
sub
xor
sti
pop
clc
sti
aad
pop
and
or
jmp
fadd
hlt
out
jne
sub
mov
outs
add
cdq
mov
in
inc
bound
cmp
xchg
adc
push
loope
mov
or
push
jno
mov
repz
enter
das
bound
clc
sbb
dec
(bad)
sbb
jae
adc
mov
or
sbb
inc
xchg
mov
lds
fwait
and
daa
inc
sub
leave
les
lds
xchg
and
cmp
stos
push
std
sbb
das
pop
hlt
pop
popa
sub
js
push
add
and
and
sbb
and
xchg
cmp
retf
inc
dec
or
sbb
fsub
inc
mov
leave
cmp
(bad)
imul
imul
jp
rcr
mov
sti
and
ins
add
push
mov
adc
lahf
rol
mov
lods
neg
addr16
popa
jmp
enter
nop
pop
adc
sahf
(bad)
aad
xor
adc
adc
aam
or
lahf
retf
movs
cdq
js
xchg
xchg
xor
mov
lfs
mov
xor
mul
or
(bad)
mov
shl
test
fwait
bnd
in
push
xchg
cdq
ret
retf
xchg
lock
sub
jnp
(bad)
jo
dec
ins
in
dec
or
data16
lahf
je
dec
xor
push
jge
das
jns
test
mov
or
push
dec
lods
add
stos
xchg
dec
mov
xchg
xchg
mov
lds
pop
icebp
test
test
and
or
add
pop
sbb
adc
arpl
aam
add
repz
ins
sbb
test
push
fwait
imul
out
rcl
fdivrp
or
(bad)
loopne
std
push
mov
cdq
test
adc
lea
mov
xor
inc
out
adc
test
jbe
jg
fstp
in
out
xlat
gs
mov
xchg
ins
cmp
call
pop
int
and
mov
sub
and
call
cmc
xor
pusha
into
push
mov
xchg
test
xor
sbb
jno
test
inc
std
and
clc
xchg
(bad)
adc
cmps
mov
push
jmp
xchg
cs
iret
lods
das
mov
inc
add
sbb
sbb
(bad)
dec
jecxz
mov
jl
fdiv
in
test
movs
cmp
pop
adc
mov
adc
shl
pusha
or
gs
int3
cmp
push
pop
push
mov
jne
jbe
stc
push
lock
je
pushf
jecxz
scas
dec
push
js
mov
sub
mov
das
sbb
dec
jmp
out
in
mov
mov
or
rol
adc
dec
or
lea
fs
into
push
test
or
inc
mov
jbe
sbb
mov
(bad)
not
xchg
leave
and
xor
add
leave
mov
jmp
jmp
or
and
rcl
jbe
sub
repz
pop
and
cmps
scas
inc
mov
sbb
in
pop
fistp
dec
dec
push
popa
(bad)
fmul
popa
test
xchg
fdivp
pop
ins
push
test
lods
xor
aad
aam
sub
clc
inc
or
stc
mov
cmp
loopne
ins
sub
mov
retf
dec
push
test
mov
sbb
retf
sub
int3
dec
cmp
popf
sub
repnz
and
dec
xor
fsub
jl
loopne
loopne
sub
sub
repz
dec
scas
les
ret
not
sti
call
rcr
jecxz
aaa
sbb
(bad)
cmp
push
sbb
rol
push
mov
les
jnp
in
cmc
mov
iret
mov
jecxz
push
imul
cmp
push
(bad)
mov
out
test
mov
sti
ficom
sub
and
mov
xchg
push
cwde
lods
adc
jb
outs
pusha
add
add
adc
sub
dec
std
inc
sahf
add
in
push
push
int3
repnz
xchg
lock
adc
dec
call
or
stc
push
jmp
movs
retf
lods
int3
push
scas
cmp
cld
cdq
(bad)
sub
jmp
push
mov
adc
into
xor
shl
pop
ins
xor
mov
adc
jae
xlat
cmp
clc
xchg
or
in
push
adc
sti
fadd
xor
out
cmp
in
xchg
int
jp
scas
jns
and
mov
test
(bad)
push
div
jbe
and
mov
imul
out
push
mov
push
pop
mov
mov
inc
mov
mov
jl
and
add
out
pop
mov
xlat
push
cli
lea
popf
or
call
in
div
xor
or
std
out
or
xchg
test
(bad)
mov
loopne
mov
jmp
mov
stos
popf
jno
fdivr
push
mov
and
pop
mov
sbb
rcr
pusha
mov
add
or
pop
sub
jo
icebp
xchg
retf
in
lods
or
adc
cmp
xchg
mov
fild
outs
xor
or
sub
mov
add
pop
sbb
(bad)
lock
ret
and
movs
in
jo
int3
scas
popa
inc
sub
fs
mov
or
call
cmc
inc
xor
retf
int
fldcw
cmp
inc
push
arpl
mov
jo
stc
test
imul
js
fisubr
or
in
jb
pop
sbb
test
pop
(bad)
dec
(bad)
in
xchg
jo
jb
push
lods
mov
outs
call
loop
je
adc
movs
inc
mov
cdq
in
sar
mov
js
mov
push
outs
std
pop
xor
ret
dec
neg
cmps
(bad)
movs
sub
outs
scas
inc
pop
cmp
cmps
xchg
add
xor
dec
ins
jmp
retf
ss
sbb
hlt
stos
xchg
imul
cmc
push
mov
ss
ins
dec
loope
pop
inc
xchg
mov
add
sub
dec
jnp
aad
shr
sbb
arpl
repnz
jno
fnstcw
loop
jge
in
jno
jno
lock
sub
loop
call
or
movs
sar
jne
addr16
pop
inc
sbb
jecxz
test
in
xchg
je
mov
stc
cs
inc
out
xchg
mov
stos
es
scas
mov
jl
(bad)
mov
jb
inc
push
punpcklwd
mov
lock
popf
les
push
fist
mov
rcl
mov
(bad)
jge
or
and
in
icebp
or
pusha
ins
sub
push
vmovshdup
in
sar
fabs
mov
hlt
xchg
mov
sbb
outs
xor
sub
pop
and
sbb
xor
fbstp
cmps
fdivr
jp
jb
gs
mov
inc
add
outs
(bad)
aam
mov
lods
imul
cmc
jmp
add
adc
(bad)
into
mov
out
mov
movs
gs
call
jle
push
add
into
pop
call
repz
xor
mov
lea
dec
push
fscale
jns
push
aas
mov
and
ss
into
test
mov
fisubr
arpl
fild
mov
call
or
outs
xchg
test
cmc
ret
jmp
loope
jl
xor
daa
dec
pop
mov
pop
xor
loopne
lds
iret
cdq
test
xchg
sub
rol
adc
mov
shr
jecxz
aad
mov
movs
fwait
ror
pop
cwde
addr16
ficom
imul
or
pop
loop
sub
push
cmp
int
push
aam
push
jne
adc
mov
arpl
int3
inc
in
ret
and
push
movs
or
push
shl
and
fcmovu
pop
mov
mov
mov
mov
xor
popf
in
dec
jbe
and
shr
jmp
push
xor
jb
ret
mov
arpl
loope
pop
pop
xlat
or
pop
sbb
out
leave
not
pop
push
jmp
inc
sub
adc
imul
fucomip
addr16
sub
mov
in
pop
outs
ret
aam
pop
jg
cmp
lock
(bad)
and
add
mov
jl
cmp
scas
cmps
test
outs
or
pop
pop
sahf
in
xlat
das
test
push
dec
arpl
ret
adc
push
dec
dec
je
jl
loopne
test
test
mov
out
add
jo
cs
enter
xor
push
mov
push
mov
xlat
imul
ja
enter
(bad)
mov
adc
mov
(bad)
enter
loope
iret
sahf
inc
rol
lds
jnp
dec
popa
repnz
(bad)
stos
inc
mov
push
mov
sahf
in
jne
dec
xor
inc
fadd
ins
(bad)
dec
(bad)
sbb
enter
add
or
jns
adc
inc
jbe
js
ret
push
cmp
sbb
mov
cmps
push
int
mov
or
les
jno
addr16
lock
xchg
or
jbe
iret
addr16
test
ins
jge
dec
mov
je
je
xchg
lea
arpl
dec
mov
ja
pop
inc
shl
adc
(bad)
or
rol
push
sbb
cld
cmc
inc
and
xchg
sub
hlt
push
in
add
push
in
into
(bad)
(bad)
sub
aas
imul
adc
mov
sbb
inc
mov
lods
jmp
pusha
pop
outs
cld
test
pop
dec
xor
std
push
pop
scas
div
fdiv
test
leave
in
or
add
adc
mov
clc
div
enter
nop
jle
daa
or
in
dec
sub
cmp
push
or
mov
aaa
mov
mov
std
stos
fcomi
sbb
(bad)
jmp
add
sbb
out
pop
fimul
cmp
mov
int
adc
fwait
(bad)
aad
adc
push
retf
inc
outs
gs
xchg
cmps
js
push
dec
add
sub
jno
inc
mov
jp
adc
pop
enter
or
(bad)
stos
sub
xchg
mov
push
rcl
xor
pop
sahf
loop
jecxz
mov
ret
mov
mov
int3
pop
jno
xchg
dec
and
aaa
arpl
push
enter
sub
and
push
mov
xchg
nop
adc
outs
xchg
pushf
lods
bswap
inc
jbe
lahf
jmp
pusha
pop
lods
jne
jl
fs
mov
push
pop
cmps
cmp
sub
into
mov
xor
outs
cwde
adc
push
or
mov
(bad)
adc
in
lea
pop
rcr
sbb
pop
aaa
cli
fdivr
fs
outs
or
shl
inc
mov
lahf
sub
cmp
sub
cmps
and
dec
ins
xor
enter
pop
dec
dec
sub
mov
test
hlt
cmp
test
mov
neg
or
out
gs
fmulp
test
mov
mov
inc
cmp
cmps
test
iret
xor
daa
add
pushf
xor
push
pop
inc
adc
icebp
addr16
bound
add
push
sbb
icebp
or
sub
scas
es
out
mov
out
mov
(bad)
nop
mov
out
cmp
retf
fwait
sbb
xchg
lods
cmc
cmp
add
bound
movs
mov
sbb
loopne
fs
sbb
push
cmps
fidivr
push
inc
push
sbb
cmp
dec
clc
pushf
dec
sbb
or
adc
cmp
not
enter
xor
push
add
repnz
sub
push
mov
push
cmp
dec
add
stc
dec
out
in
and
ror
loope
xor
scas
xchg
jns
pop
jmp
cli
int3
test
ins
jb
pop
push
dec
jecxz
fcomp
xchg
jbe
lock
fwait
xor
test
cmp
mov
mov
test
cmps
imul
pop
mov
mov
inc
mov
in
mov
jbe
mov
xchg
dec
mov
mov
rcl
int
repz
movs
or
mov
shl
mov
mov
add
scas
jo
lods
in
mov
scas
ret
mov
push
test
xor
(bad)
mov
cs
push
xchg
push
pop
leave
gs
ins
mov
xor
jmp
lock
movs
cmp
mov
dec
dec
retf
je
popa
aam
add
lea
dec
sub
jmp
jg
or
dec
mov
addr16
push
inc
sbb
xlat
ret
cld
aaa
aam
into
pop
loopne
dec
mov
imul
mov
mov
stos
pushf
nop
or
push
cmc
mov
cdq
jae
add
ret
dec
push
rcr
adc
push
xlat
outs
icebp
cmp
(bad)
mov
icebp
push
in
les
fistp
adc
(bad)
push
mul
jno
mov
push
cmp
or
aam
mov
jecxz
(bad)
aad
jmp
jno
mov
xor
into
adc
movs
loopne
mov
or
fnstenv
lods
xchg
imul
push
fimul
and
or
lahf
add
retf
and
stc
loope
and
inc
call
test
cmp
loopne
inc
out
hlt
or
stos
sbb
xor
mov
fwait
cmp
out
mov
(bad)
nop
repz
mov
mov
rol
jbe
cld
sahf
mov
dec
test
adc
cmp
loop
add
push
cmps
jnp
fs
fmul
in
test
jmp
mov
fisub
out
pop
xor
mov
sbb
xor
movs
sub
mov
mov
aaa
and
sub
je
je
nop
imul
xchg
lods
xchg
repz
xchg
adc
out
push
cs
sbb
adc
out
mulps
dec
xor
int
jge
sub
jne
ret
dec
lahf
(bad)
sub
retf
push
dec
sbb
add
sti
xchg
out
sbb
push
jns
out
test
cld
jne
sub
cli
push
sub
jb
mov
mov
adc
ss
mov
add
mov
stos
test
jae
fs
dec
enter
nop
xor
cmp
inc
jae
retf
sbb
data16
fstp
and
push
retf
retf
gs
mov
inc
pop
cmp
bound
shl
ss
cmc
nop
ja
adc
add
xchg
push
xchg
in
adc
loope
hlt
cmp
add
pop
inc
xor
xchg
cs
leave
scas
adc
sub
inc
popf
pop
or
retf
xor
retf
ret
fwait
dec
ss
dec
push
add
push
div
jge
jecxz
or
test
mov
or
ins
jne
data16
adc
xchg
and
addr16
ds
lahf
or
jmp
je
cmp
sub
sar
ror
das
jne
inc
es
out
sub
dec
push
(bad)
mov
pusha
out
ret
cmp
popf
int3
shl
push
mov
movs
xchg
cli
sub
aas
je
(bad)
cmc
test
pop
jp
cmp
shl
clc
enter
mov
stc
(bad)
push
lahf
movs
xchg
fisub
or
dec
and
add
mov
pop
or
mov
and
adc
push
inc
add
xchg
mov
add
inc
cmp
mov
mov
mov
sub
push
cwde
ja
and
cmp
imul
adc
inc
adc
aaa
pop
cmp
(bad)
sbb
push
jp
(bad)
xor
push
pop
dec
or
cmc
adc
jmp
test
mov
cmps
fdivrp
nop
aaa
test
xchg
dec
push
jae
shr
cld
xor
hlt
dec
xchg
sar
push
outs
test
out
les
frstor
inc
rol
out
sub
jecxz
pop
or
pop
mov
into
add
popa
add
push
pop
xor
push
and
jecxz
fist
or
bound
pusha
ret
popf
in
sub
aad
sbb
retf
mov
xor
pushf
adc
outs
repnz
fmul
fwait
dec
push
push
outs
sbb
aas
or
(bad)
fld
mov
inc
cmp
push
mov
pop
jg
bound
sub
mov
cmp
mov
js
mov
iret
inc
inc
dec
mov
jnp
push
out
and
dec
push
xchg
out
push
out
push
mov
lods
(bad)
dec
pop
pop
or
xchg
xor
leave
xor
and
xchg
push
fld
shr
mov
in
inc
cdq
and
icebp
adc
je
retf
cli
jge
fs
aaa
test
js
xchg
sbb
shl
mov
sub
fistp
out
hlt
out
iret
cmps
ins
mov
test
push
out
cmc
xor
xor
push
ss
jg
push
mov
inc
sub
repnz
and
imul
adc
jle
sbb
imul
stos
aaa
push
inc
push
add
xchg
push
push
lock
inc
enter
in
or
test
test
nop
cmp
(bad)
dec
jne
sahf
bound
shl
fdiv
test
add
popa
daa
ret
dec
add
rcr
mov
pop
(bad)
mov
pop
push
enter
jmp
ror
out
dec
mov
aam
adc
add
jecxz
lea
push
sub
lods
or
mov
mul
pop
pusha
out
sbb
(bad)
sbb
call
arpl
sbb
mov
jle
mov
inc
call
pushf
(bad)
push
loop
aaa
jl
je
jg
cmc
pop
iret
adc
and
loope
xchg
jecxz
inc
cs
bnd
inc
lea
cmps
sub
fild
test
imul
xor
mov
les
cld
fnstenv
fild
mov
jb
clc
nop
sub
adc
push
fmul
mov
les
pop
scas
mov
(bad)
adc
mov
fistp
inc
inc
mov
inc
lahf
pop
jae
xor
prefetch
pop
add
out
and
sti
imul
(bad)
jo
jp
fdiv
repnz
dec
dec
sub
mov
pusha
mov
adc
xor
sub
mul
stc
jecxz
dec
sbb
cwde
push
pop
jne
addr16
retf
push
pop
rol
gs
mov
fcomp
outs
aaa
popa
cmps
cmp
das
xlat
in
ja
xor
adc
int3
sahf
add
out
(bad)
lock
jmp
outs
movs
xlat
dec
dec
das
mov
dec
dec
div
mov
cmovge
dec
loopne
mov
cwde
adc
out
sub
jmp
adc
in
dec
cmps
adc
lock
pop
rcr
cld
aam
enter
imul
pop
call
sub
or
inc
cmp
cmp
fs
adc
jbe
sbb
jne
jb
mov
mov
jnp
inc
jmp
push
xlat
loopne
sub
pop
push
stos
int3
mov
push
das
push
cmp
mov
push
imul
xchg
adc
sub
rol
or
pop
into
retf
sub
(bad)
fsubp
sub
mov
dec
popf
hlt
xchg
sbb
movs
scas
push
jg
movs
dec
out
jb
icebp
add
bound
in
call
cmp
sub
cmp
in
(bad)
mov
shl
cmp
add
aas
or
fcom
add
stc
js
retf
dec
sub
add
jbe
sub
mov
adc
hlt
mov
scas
mov
sahf
sub
jnp
mov
push
mov
stos
test
cmp
in
imul
mov
mov
ja
push
cld
and
add
xchg
xlat
(bad)
in
sbb
add
or
xchg
aad
movs
adc
jno
ror
inc
mov
call
(bad)
je
out
out
daa
les
aad
int
shl
cmc
sti
xchg
loop
popa
sti
fst
pop
and
sbb
jle
xchg
loop
hlt
dec
push
(bad)
lahf
loop
cmp
adc
call
mov
fild
or
mov
mov
jl
jmp
push
aam
ds
sbb
jne
cmp
xor
mov
test
sub
or
jne
test
cmp
cmp
or
inc
or
cmc
out
push
push
xor
sub
or
cwde
fbstp
shr
xor
pop
jecxz
pop
lea
mov
or
pavgw
jge
les
jb
cmp
std
sar
or
jmp
retf
push
fdivr
ja
(bad)
sahf
(bad)
movs
out
stc
sbb
ins
in
fmul
stos
xor
mov
stos
sahf
pop
aad
bnd
xchg
jbe
out
push
sub
popf
dec
out
shr
dec
sahf
jae
inc
in
push
data16
cs
xor
xchg
jmp
aaa
jmp
mov
pop
adc
imul
fistp
int3
jmp
rcr
in
test
and
sbb
retf
cwde
(bad)
aad
xchg
es
popa
and
out
es
ret
add
div
adc
dec
and
pushf
mov
enter
push
fwait
inc
test
and
stc
lock
cmps
enter
int3
push
clc
shr
cmp
pop
sbb
sbb
cmp
pusha
cmps
mov
or
adc
fcom
fld
lods
jp
sahf
in
imul
movs
or
mov
sbb
in
lahf
fs
retf
add
sti
inc
sub
cmps
adc
jne
mov
fidiv
push
xor
or
mov
or
add
pop
inc
div
jbe
and
dec
jl
ins
mov
jae
xchg
pop
popf
inc
scas
dec
jbe
jge
mov
cmps
jno
out
mov
and
pushw
daa
xlat
mov
cmp
enter
aas
mul
shl
retf
in
dec
int3
jge
(bad)
push
inc
jg
retf
imul
shl
stos
shr
jmp
ins
mov
in
adc
inc
test
push
ins
mov
push
pcmpgtb
push
(bad)
xchg
mov
add
into
push
xor
mov
in
pop
push
call
and
gs
rol
outs
in
fwait
push
or
push
inc
push
sub
mov
xlat
div
ret
inc
lock
xchg
pop
mov
jecxz
cmp
inc
sti
sub
dec
push
jne
(bad)
stos
or
xchg
mov
ret
ss
xchg
cwde
xor
cdq
add
stos
cld
jo
cld
mov
sbb
repz
aas
vmovshdup
icebp
mov
add
jo
add
int3
push
cmp
(bad)
mov
mov
cmp
retf
or
fistp
adc
shr
cmp
jo
pop
adc
xchg
cwde
cmp
(bad)
add
mov
dec
dec
retf
scas
imul
push
dec
jne
fidiv
add
push
xchg
mov
dec
push
sbb
mov
test
jl
adc
and
pushf
mov
outs
test
jbe
jno
clc
je
bound
popa
pop
push
icebp
mov
(bad)
ins
or
gs
scas
inc
out
clc
xor
add
mov
les
jecxz
push
mov
loope
ds
movs
xor
xchg
hlt
inc
sbb
jle
dec
(bad)
hlt
loope
imul
xor
fadd
xor
jno
pop
dec
mov
fistp
call
sbb
iret
das
pop
arpl
cmp
loop
sub
or
das
jb
iret
adc
cwde
push
dec
fiadd
fcom
pop
jne
xor
movs
mov
pop
test
xor
sti
push
iret
and
push
and
pop
sub
mov
and
shr
ret
jne
pop
add
in
jne
dec
jnp
repz
adc
imul
(bad)
dec
jo
jo
loopne
or
int
scas
push
push
mov
pop
in
mov
(bad)
out
xor
jecxz
test
ret
retf
in
push
xor
push
leave
sbb
int3
xor
pop
cmps
hlt
inc
sbb
in
sub
and
nop
cmps
adc
imul
ins
inc
enter
jmp
fucom
mov
and
xchg
lds
test
dec
sub
pushf
cwde
std
frstor
stc
daa
push
data16
out
and
push
mov
cwde
dec
test
sti
arpl
cmp
or
or
cmp
in
in
popf
cmp
mov
mov
mov
push
mov
mov
out
pop
lods
or
pop
xchg
fdivr
inc
mov
leave
lods
out
fimul
sbb
jmp
and
out
sbb
or
cmp
add
in
outs
mov
push
in
mov
dec
retf
cmp
aad
gs
(bad)
xor
dec
cs
mov
(bad)
add
stos
fstp
or
dec
jnp
jmp
xchg
data16
retf
push
push
fucomp
xchg
xor
mov
scas
outs
and
test
sti
jmp
pop
dec
cdq
pop
imul
jne
adc
pop
cmc
test
outs
inc
hlt
retf
repz
push
in
ss
xchg
dec
es
sbb
mov
pop
jnp
aam
push
dec
pop
je
pop
mov
pop
xor
dec
jl
popa
push
daa
mul
mov
and
mov
movs
clc
cmp
mov
fdiv
imul
dec
lds
fst
jno
mov
test
mov
pop
shl
into
out
sti
imul
cmp
mov
cdq
push
dec
out
bound
jbe
imul
pushf
jbe
scas
or
aad
les
pop
movs
lods
in
cmp
movs
jae
test
push
mov
cmps
aas
xchg
xchg
(bad)
rcr
mov
xor
dec
mov
cdq
pop
hlt
sub
adc
imul
cmps
dec
xchg
arpl
in
test
mov
mov
bound
dec
jge
lods
jge
pop
imul
in
ror
loopne
adc
std
pop
mov
cdq
mov
mov
aam
and
push
inc
mov
jb
dec
enter
mov
mov
push
fwait
xchg
(bad)
fnstenv
xor
aaa
jmp
pop
push
dec
mov
daa
not
lock
dec
fmul
out
sbb
add
test
pop
and
repz
ret
test
dec
sub
xchg
outs
mov
outs
pop
dec
stc
in
dec
repz
aad
(bad)
imul
mov
lds
inc
mov
mov
popa
push
inc
mov
push
push
push
scas
push
or
add
ret
out
push
mov
lock
stc
jle
clc
ror
and
jmp
fist
adc
sub
(bad)
push
pushf
scas
outs
mov
mov
in
aad
jl
rol
mov
add
lahf
les
test
pushf
mov
jns
cmp
fsubr
mov
loope
sbb
sbb
outs
fisttp
(bad)
jmp
sub
jmp
es
jmp
cwde
out
int
(bad)
bound
mov
adc
icebp
mov
mov
mov
cli
cli
push
test
xor
shr
or
mov
xlat
ret
sub
arpl
xor
icebp
cs
sub
mov
xor
add
gs
bsr
call
pop
push
ficom
clc
fild
ds
mov
arpl
cmc
push
repnz
mov
mov
push
test
movs
fbstp
popa
ret
shr
in
aaa
fidivr
jae
ss
repnz
xchg
sbb
xlat
jno
enter
lds
sub
sub
or
xchg
dec
and
sbb
fwait
pop
call
pop
jmp
mov
dec
sub
dec
xchg
dec
push
das
fistp
sbb
mov
mov
jecxz
add
(bad)
lahf
jo
ss
cmc
inc
push
shr
xor
jae
or
(bad)
mov
(bad)
push
dec
adc
shr
cmp
rcr
sar
mov
pop
push
test
mov
je
pushf
sub
mov
mov
data16
pop
push
adc
ins
push
ins
aas
scas
daa
and
sahf
mov
xchg
mul
jl
cli
cmp
or
outs
xor
mov
jge
add
mov
fisttp
loop
or
aam
and
lock
jmp
jbe
pop
adc
ins
fidivr
and
test
xor
mov
sub
movs
sbb
dec
fisub
xor
sub
sar
sub
mov
iret
out
ins
pop
mov
(bad)
dec
jb
les
adc
pop
mov
iret
or
xchg
mov
fnstcw
push
stos
sbb
int
sbb
fcom
add
popf
cli
jo
inc
mov
ret
jbe
int
and
jmp
mov
jmp
in
enter
push
cmc
xchg
ja
mov
loopne
inc
and
sbb
cmc
leave
les
add
iret
movs
jo
mov
jp
jecxz
dec
or
jl
xor
jbe
mov
xor
mov
xor
rcl
outs
mov
add
stos
mov
fneni(8087
imul
and
xor
fcomp
jecxz
xor
loope
jmp
push
ss
push
repnz
push
test
xor
arpl
out
movs
or
push
arpl
sbb
add
xchg
movs
or
jne
(bad)
jge
inc
sub
stc
retf
sbb
stos
out
daa
imul
je
popa
sbb
mov
and
in
inc
out
xchg
arpl
adc
std
jb
sti
cmp
sar
fs
mov
movs
sub
pop
mov
mov
xchg
jg
fisubr
mov
jmp
ret
aam
mov
addr16
jns
(bad)
mov
cmps
and
(bad)
fld
mov
add
sti
add
sub
mov
push
mov
mov
(bad)
sahf
pop
out
es
mov
data16
popa
shl
in
dec
jp
mov
enter
mov
dec
out
push
xchg
movs
sub
add
popf
pusha
pop
out
add
pop
sbb
adc
aaa
pop
and
xchg
push
inc
fst
icebp
mov
pop
cmp
(bad)
(bad)
mov
jecxz
les
fs
rol
cld
or
addr16
loop
aaa
mov
pop
pop
inc
adc
cmp
jae
popf
pop
push
jle
cdq
xor
mov
inc
clc
sub
jnp
inc
mov
mov
and
and
dec
pmuludq
pop
ret
call
test
pushf
add
add
mov
bound
aas
outs
call
fs
je
repnz
sahf
imul
push
enter
cmc
dec
jnp
cld
jl
cmc
and
mov
test
pusha
bound
pusha
arpl
sub
sbb
cmp
mov
loope
xchg
cmps
jbe
icebp
jb
sbb
scas
ret
jo
and
sub
aas
jmp
nop
out
mov
add
push
cmc
jno
mov
stos
out
inc
pop
(bad)
cmp
push
icebp
sbb
push
xchg
mov
out
loope
dec
jo
and
inc
cmp
fdivr
mov
retf
mov
xchg
rcr
mov
scas
and
in
enter
sub
mov
mov
xchg
xchg
mov
dec
outs
lods
cmc
sub
and
mov
(bad)
push
sbb
add
mov
(bad)
ss
and
push
mov
cmps
jbe
out
cmp
jmp
stc
pop
ds
cmp
xchg
adc
dec
ret
dec
push
cmps
jp
aaa
shr
jne
mov
pop
ss
cmp
push
arpl
jne
dec
xor
sbb
push
or
jns
pushf
iret
es
sbb
test
stos
lds
iret
cmp
xor
movs
call
mov
enter
mov
jno
call
sar
xchg
sub
mov
ss
and
call
sub
mov
scas
fsub
inc
sbb
mov
sar
xor
js
and
je
jns
lds
xlat
mov
aaa
stos
dec
pop
xor
cmc
pop
ficomp
push
mov
repnz
test
jbe
cld
pop
xor
inc
in
movs
mov
xchg
sub
jne
out
and
pop
ret
dec
adc
mov
add
jae
lods
int3
es
std
ret
in
push
fcomp
cmp
leave
lods
retf
push
inc
dec
clc
jae
mov
pop
call
push
es
lahf
cmp
mov
aaa
dec
sub
sahf
adc
jg
adc
dec
outs
and
leave
pop
push
push
mov
or
(bad)
dec
or
xchg
std
scas
adc
(bad)
adc
jg
fldcw
push
pop
jecxz
movs
outs
stos
ja
dec
jne
mov
pop
leave
test
into
or
mov
xlat
stc
cmps
xor
fisttp
in
adc
rol
inc
pop
gs
inc
lahf
jbe
cmps
inc
sbb
jae
jle
in
pop
mov
sbb
and
pop
lods
rcl
data16
jp
inc
stos
mov
jo
adc
xor
add
cmp
cdq
mov
(bad)
mov
stc
in
sahf
adc
(bad)
mov
mov
xchg
and
cmp
cmc
push
xchg
xchg
dec
stc
retf
cmp
pop
pop
leave
cmp
div
sar
push
xchg
in
or
scas
in
cmps
outs
jns
(bad)
imul
xchg
mov
fs
out
add
pop
mov
popa
in
aas
shr
fistp
int3
mov
test
dec
iret
and
cmp
inc
lea
dec
test
(bad)
mov
sbb
cmp
int
xchg
xchg
in
or
and
adc
fdivr
scas
les
push
mov
sub
in
std
data16
sbb
or
ins
(bad)
or
push
xor
fs
jo
scas
cmovo
stos
pop
add
fs
sahf
pop
jne
pop
jge
cli
inc
jo
sbb
jl
pop
jecxz
xchg
xchg
sahf
lock
pop
sar
lds
dec
or
(bad)
enter
push
mov
jp
(bad)
xchg
lock
mov
les
dec
in
push
mov
sbb
test
jl
scas
std
ss
pop
scas
loop
adc
sub
clc
movs
mov
test
lahf
pop
call
dec
cli
cmp
inc
out
retf
mov
cmc
fwait
mov
pop
js
adc
sub
cld
pop
pop
lahf
push
mov
loopne
adc
dec
aaa
add
hlt
js
aas
jae
xchg
xchg
loop
jl
scas
faddp
call
out
sbb
sbb
pop
cmp
pop
dec
cmps
xor
retf
sbb
mov
imul
ret
xor
jno
ror
cs
cmc
adc
cmps
dec
pop
ss
adc
sub
outs
and
sti
int3
fstp
dec
call
xchg
jno
(bad)
push
mov
(bad)
jne
push
out
mov
push
into
fisub
sub
jle
jo
aaa
dec
sbb
adc
aam
aad
xor
xchg
or
into
xchg
adc
jecxz
aas
dec
into
out
scas
mov
out
leave
or
sbb
in
adc
pop
xchg
(bad)
cmp
cmp
inc
ins
(bad)
or
lock
lock
dec
and
in
or
repnz
or
add
mov
retf
mov
(bad)
cdq
out
stos
in
add
dec
mov
stos
mov
data16
push
leave
mov
sub
pushf
out
addr16
sbb
nop
cmp
cld
and
movs
cmp
loope
mov
mov
mov
loopne
mov
xchg
popa
xor
sub
pop
mov
adc
inc
add
leave
popa
cld
imul
jbe
xchg
pop
lds
mov
addr16
sub
sbb
movs
mov
shl
add
lods
sbb
stos
push
aam
adc
and
push
in
addr16
mov
rol
push
loopne
inc
push
xchg
shl
cmp
jle
push
in
mov
call
cld
sub
sbb
outs
loope
pop
add
mov
nop
add
shl
pop
ins
sbb
cmc
stc
or
les
inc
add
sub
fild
dec
fisttp
cmp
movs
cli
xchg
add
and
test
scas
ins
push
xor
sbb
fdivr
pop
retf
in
jb
jl
jb
lods
cmps
jbe
dec
push
sub
sub
adc
(bad)
aaa
inc
sub
mov
xor
(bad)
out
mov
add
test
and
xor
add
or
push
sub
into
mov
icebp
bound
scas
(bad)
adc
adc
out
sbb
test
popa
das
inc
xchg
mov
pop
fcomp
out
jle
pop
mov
call
scas
dec
iret
inc
xchg
popa
inc
js
add
cwde
xchg
mov
cld
int3
pop
inc
cld
pusha
inc
ret
mov
lds
ror
sub
xchg
cmp
repnz
fcomip
repz
data16
mov
sbb
xor
iret
inc
adc
stc
jmp
arpl
push
fmulp
pop
inc
add
lods
ror
push
xchg
pop
imul
mov
dec
shl
into
jecxz
fxch
fisubr
mov
cld
sub
adc
mov
es
pop
scas
out
pushf
(bad)
aam
dec
mov
inc
cmp
fcomp
cmc
cmps
mov
mov
mov
movs
push
loope
xchg
rol
jecxz
adc
jp
dec
pop
shl
jmp
cmp
and
gs
fs
dec
pop
pop
xchg
shl
jmp
into
in
xor
ins
add
popf
sub
adc
cld
inc
pop
dec
add
sub
and
pop
loop
dec
inc
jbe
mov
jp
pushf
inc
(bad)
pop
jne
mov
pop
(bad)
mov
retf
jo
outs
sub
add
mov
or
adc
shl
sbb
cmps
inc
iret
mov
push
dec
or
adc
ins
test
jp
ret
ret
pop
xchg
pop
cdq
or
and
inc
jnp
mov
and
std
push
pop
mov
aam
ret
cmps
gs
frstor
sub
repnz
gs
mov
adc
inc
xor
rcr
or
mov
dec
add
scas
push
(bad)
mov
movs
rcl
sbb
sbb
xchg
mov
sbb
or
js
or
and
push
aam
mov
test
jns
js
cmp
xchg
pop
inc
fs
push
mov
or
mov
call
popa
xor
(bad)
sti
xlat
cmp
outs
out
push
inc
xor
mov
xchg
dec
mov
cwde
out
or
mov
mov
xchg
pop
pop
jae
dec
mov
push
shl
cld
xchg
fnstcw
inc
xchg
xchg
mov
aad
addr16
call
push
or
iret
imul
js
repz
mov
mov
push
push
inc
push
fwait
imul
pushf
cmp
xor
sahf
mov
fcmovbe
daa
xor
mov
xchg
push
cmc
fdivr
into
push
xchg
push
scas
xchg
(bad)
xor
ficom
adc
mov
jnp
and
ret
xchg
inc
cmp
inc
cmp
ss
(bad)
pop
ss
jmp
inc
sbb
cmp
jp
cs
shl
fldl2t
cmc
clc
sti
jmp
pop
pop
xchg
mov
movs
scas
in
daa
nop
pop
mov
push
loope
sbb
out
or
mov
mov
or
bound
mov
mov
mov
daa
jecxz
inc
jo
xchg
pop
xor
jmp
mov
sub
retf
jbe
in
fs
or
mov
sub
je
cmp
rol
xor
push
lock
addr16
sahf
push
mov
inc
fld
test
popf
mov
ret
fild
shr
(bad)
out
test
xchg
rcr
pop
add
cmp
(bad)
movs
jns
sbb
les
pop
(bad)
pop
test
xchg
call
xchg
cmp
jno
in
pop
dec
push
lods
jecxz
mov
movs
sub
pop
ror
cli
mul
icebp
mov
outs
cdq
sbb
inc
and
mov
and
or
push
out
add
mov
fst
aad
pop
lea
test
cs
stos
pop
jecxz
xor
sbb
adc
lock
call
les
lea
aas
in
xchg
xor
inc
outs
lahf
xor
shr
sub
repz
movs
ror
outs
test
cmp
cdq
push
cmps
add
bound
mov
sahf
adc
mov
xor
sbb
jnp
jnp
or
pop
shl
dec
push
outs
xor
test
mov
xor
push
pop
nop
ret
push
xor
mov
cwde
and
out
push
or
or
push
mov
dec
pop
sub
(bad)
xchg
dec
outs
xchg
sub
sub
stos
dec
cmps
mov
mov
xor
(bad)
neg
je
dec
or
and
mov
fdivr
int
call
add
bnd
sub
jb
or
scas
push
mov
out
arpl
pusha
ins
lods
fnsave
inc
rol
loopne
in
sbb
jmp
pop
shl
pop
xchg
and
loop
pushf
nop
mov
mov
xchg
and
xor
call
add
in
adc
pop
adc
or
pop
push
mov
inc
mov
lahf
cmps
adc
lods
adc
jmp
dec
and
lea
popa
mov
(bad)
xor
mov
mov
jmp
xor
jo
or
push
push
xchg
pusha
test
out
dec
mov
addr16
xchg
xor
les
cmp
mov
pop
pop
fcmove
lds
or
test
xchg
add
mul
jns
mov
aad
outs
mov
adc
idiv
imul
push
push
pop
adc
xchg
stos
push
outs
sbb
lds
xor
mov
aam
pop
mov
adc
in
push
adc
jge
les
mov
sub
hlt
pop
pusha
sar
mov
sar
sub
mov
xor
aam
in
sbb
jmp
xchg
(bad)
fist
packsswb
loope
dec
jge
or
push
(bad)
(bad)
out
xor
iret
cmp
inc
es
adc
fwait
xchg
lds
mov
in
inc
cld
or
daa
repz
jo
test
push
pop
push
out
ins
stos
sbb
adc
sbb
aas
xchg
and
mov
or
jge
shr
jg
rol
pop
inc
sub
mov
retf
pop
std
out
jge
cmp
and
(bad)
jp
iret
jns
outs
retf
jns
mov
sbb
mov
ret
inc
ins
cwde
shr
inc
loope
outs
(bad)
adc
fild
in
mov
sub
lods
scas
xchg
sub
and
test
push
xor
jns
std
dec
fwait
(bad)
mov
jbe
aam
fcom
rcr
inc
shl
and
jge
mov
pop
mov
je
mov
shr
rcl
jmp
sti
mov
mov
mov
push
lods
lahf
lea
xchg
test
or
xchg
mov
and
cs
test
add
stos
push
cmp
sub
sbb
call
or
out
jb
adc
nop
and
outs
mov
fisubr
jbe
xchg
pop
mov
push
jne
sbb
pop
ret
es
xlat
sub
sub
cmp
sbb
sahf
int
test
push
mov
es
pop
add
or
inc
mov
test
or
arpl
int
pop
add
stc
mov
ja
xchg
outs
and
add
scas
push
pop
xor
cdq
xchg
int3
mov
inc
(bad)
cwde
sbb
add
adc
mov
ss
sbb
int
fsubr
shl
stc
fistp
out
push
push
push
in
cmp
fisub
aad
mov
jmp
lock
mov
add
mov
arpl
iret
daa
push
test
or
cmp
xchg
xchg
jnp
pop
bound
movs
mov
jne
sbb
jmp
retf
add
push
inc
inc
xor
sub
imul
movs
out
xor
leave
cmp
inc
(bad)
stos
xchg
cmp
mov
stos
and
outs
mov
loopne
rcr
dec
movs
mov
pop
xchg
aad
push
jp
add
jnp
add
jp
push
inc
lods
mov
jg
pop
out
ss
dec
inc
popa
aas
pop
lods
xchg
das
push
inc
or
or
or
push
jmp
jmp
adc
add
cmp
inc
sub
xchg
popf
jb
stos
dec
pop
push
ds
xor
push
aas
bound
popf
dec
xor
sub
mov
sub
cs
add
push
jg
aaa
in
sub
jmp
lods
ins
ja
out
push
fbstp
push
out
mov
and
call
shr
sar
ret
jbe
xchg
add
mov
cmove
add
ds
inc
add
mov
pop
imul
adc
pushf
sub
mov
loopne
popf
arpl
pop
pushf
push
cmp
jmp
mov
in
out
cmp
stos
or
push
pushf
push
add
pop
cmp
add
push
add
ret
jp
cdq
cwd
push
pusha
imul
dec
shr
mov
sub
ds
stos
test
pushf
fs
je
aam
(bad)
xor
lods
mov
jmp
or
je
and
mov
aam
inc
imul
mov
and
ror
mov
arpl
adc
adc
clc
out
sbb
clc
sbb
mov
(bad)
cs
(bad)
les
neg
sub
cs
ret
int
jmp
or
fsub
pop
mov
xor
adc
mov
mov
mov
and
or
ja
or
inc
dec
and
jl
inc
adc
movs
pop
push
mov
mov
sub
push
jp
jae
jne
sub
js
sub
int3
mov
sbb
sti
or
mov
dec
inc
pop
call
stos
sti
mov
add
xor
dec
jecxz
loop
jnp
push
sub
xor
xor
dec
and
(bad)
fdivr
out
(bad)
sub
mov
and
shl
jbe
cli
xchg
jne
jmp
pop
jg
dec
cmp
lods
(bad)
push
cmp
mov
mov
nop
stos
or
mov
and
mov
xchg
jne
and
ja
mov
inc
sub
xor
xor
or
fldcw
imul
js
fxch
xor
mov
xchg
cli
pushf
inc
cdq
in
cmp
lods
push
mul
(bad)
icebp
inc
xchg
sar
pop
repz
push
std
dec
pop
ds
sbb
or
das
mov
into
mov
repnz
mov
addr16
cs
jp
cs
(bad)
shr
mov
inc
mov
xor
jg
gs
push
pop
aam
sub
xor
push
addr16
test
cli
or
clc
dec
int
inc
jge
xchg
fisubr
sar
ret
sbb
loope
call
iret
lea
push
mov
adc
mov
xchg
jmp
addr16
cli
neg
sub
inc
clc
mov
cmp
sub
retf
out
aaa
dec
ret
ror
das
jne
and
inc
out
dec
cbw
or
(bad)
hlt
lods
shl
or
cwde
cld
data16
sbb
jle
add
les
loopne
lahf
pop
jno
hlt
mov
jb
xor
arpl
push
call
cmp
cs
and
cwde
adc
mov
jno
repnz
(bad)
sbb
in
xchg
imul
test
dec
jle
cmp
sub
(bad)
mov
cs
fmul
mov
mov
test
jle
inc
lahf
mov
and
mov
xchg
jl
add
ds
fst
loope
adc
cmps
mov
or
jge
test
push
retf
iret
scas
into
ins
shr
mov
add
repz
or
adc
dec
(bad)
pop
out
ins
gs
and
fidiv
cwde
ficomp
xchg
inc
pop
cmp
pop
or
xchg
or
call
sub
das
shl
or
stos
cmps
gs
jno
sub
xchg
push
push
mov
adc
js
inc
cmp
ficomp
(bad)
cmp
aad
inc
(bad)
sbb
inc
sahf
pop
jle
jmp
bound
lea
scas
stos
xchg
lahf
cmp
imul
fimul
sub
mov
sub
sahf
mov
jp
mov
dec
mov
test
mov
jae
ja
xchg
mov
pop
div
rep
lahf
xor
ss
xor
or
mov
xor
adc
int3
sub
xor
cdq
lahf
mov
or
pop
add
jae
ss
mov
mov
int
mov
adc
mov
cmp
test
and
pop
adc
and
xor
add
sub
jae
sbb
outs
pushf
xchg
cwde
cs
pop
cmc
aad
sbb
out
cmp
xor
scas
xchg
mov
imul
adc
ins
repz
cs
adc
addr16
icebp
enter
test
fwait
mov
jae
and
push
loope
dec
(bad)
cmp
and
popa
adc
jmp
or
(bad)
pop
lock
popa
dec
xor
(bad)
es
inc
add
daa
cdq
adc
mov
(bad)
cmc
call
sub
std
ficomp
inc
lahf
adc
retf
mov
push
stc
push
adc
mov
pusha
rcr
mov
adc
xchg
das
pop
jg
pop
push
shr
outs
inc
mov
xchg
inc
sub
add
fimul
rcr
sbb
call
mov
mov
push
fdivr
lea
xchg
cmp
mov
adc
outs
sub
fs
mov
fsub
sbb
lods
pop
stos
out
fcom
outs
sub
out
ret
sbb
dec
(bad)
push
out
je
xor
in
cs
bound
xor
or
cmps
pop
adc
add
or
loopne
jb
mul
shl
pop
test
push
push
popf
outs
je
dec
dec
mov
loop
sbb
ret
pop
std
push
iret
and
fmul
xor
jne
push
mov
ins
mov
ror
pushf
iret
jo
aam
out
adc
sbb
int3
jae
out
and
jmp
leave
retf
je
and
and
sti
ins
sbb
add
mov
push
jle
ret
push
pop
movs
hlt
stos
out
enter
inc
sahf
push
(bad)
fild
out
pop
xchg
ret
xchg
scas
jmp
(bad)
in
mov
loope
pop
movs
aaa
int
xor
mov
mov
mov
fbld
mov
add
inc
rol
cmps
aaa
xor
sbb
xor
loop
mov
add
retf
jp
pop
shl
mov
push
pop
mov
mov
pop
sbb
mov
pop
test
cmp
fdiv
mov
mov
jmp
cmc
adc
mov
stc
dec
outs
sub
jl
mov
sbb
cli
out
shl
ins
mov
test
(bad)
cmp
xchg
cmps
jne
imul
stos
out
lahf
shr
xchg
mov
ja
push
lock
repz
test
cmp
aaa
adc
lods
xor
jle
cdq
cli
call
dec
out
loope
ret
out
sub
mov
in
xor
push
aas
cwde
stos
es
mov
ret
test
pop
add
mov
push
and
aas
retf
xchg
sbb
cli
xor
hlt
xchg
dec
mov
jno
xor
shl
fist
mov
ret
or
mov
inc
(bad)
xor
push
xchg
xor
inc
test
test
mov
stc
dec
pusha
dec
rcl
push
mov
stos
test
call
das
in
inc
icebp
jno
push
lock
es
add
mov
ret
push
bound
mov
jecxz
pop
nop
and
jae
jmp
mov
aad
or
mov
ret
jbe
and
add
xor
inc
scas
ror
fistp
add
push
mov
cmp
add
fnstcw
or
dec
or
cmps
pop
dec
pop
cs
xchg
jmp
push
loop
or
jp
jle
mov
jne
or
ins
in
dec
ins
ret
ret
add
icebp
xor
or
cmps
cmp
xor
and
jecxz
inc
sub
jb
test
xchg
adc
adc
scas
into
adc
aaa
push
popf
aam
jg
jg
inc
retf
push
jne
add
(bad)
in
out
jge
adc
mov
arpl
retf
cdq
imul
push
xor
xchg
push
push
inc
mov
pop
push
dec
or
add
mov
xchg
sub
mov
jmp
jno
mov
adc
std
repz
xor
mov
lods
mov
mov
sbb
fisub
jecxz
shr
dec
outs
popa
xchg
sbb
mov
imul
mov
(bad)
push
(bad)
mov
mov
frstpm(287
clc
mov
sbb
add
pop
cmp
pop
movs
mov
cmps
lea
out
es
push
dec
mov
dec
repz
push
outs
mov
xchg
dec
aaa
or
outs
and
xchg
ret
xor
xor
adc
sub
xlat
in
adc
lods
xlat
sar
shl
or
pop
leave
repnz
loope
in
adc
and
dec
inc
dec
jge
sbb
or
inc
cwd
inc
adc
inc
out
xor
mov
retf
add
arpl
std
or
out
mov
dec
dec
hlt
mov
movs
movsx
out
dec
ins
mov
lods
jns
addr16
and
jmp
(bad)
ds
xchg
dec
arpl
lods
into
in
sub
xchg
mov
rcl
arpl
call
out
and
clc
dec
dec
xor
les
xchg
jne
mov
push
xchg
shl
adc
and
in
xchg
movntps
add
and
xchg
adc
jbe
outs
and
shl
cld
xchg
fnstcw
jle
pop
not
shr
xchg
out
mov
loope
jmp
jge
out
jae
mov
xchg
adc
jno
fiadd
jmp
loope
dec
loopne
ret
enter
frstor
sub
xchg
(bad)
pop
xchg
aas
ja
and
test
mov
push
add
fs
cdq
(bad)
or
(bad)
push
(bad)
add
push
neg
or
or
addr16
dec
sahf
shr
ds
mov
sbb
mov
mov
push
cli
enter
shl
sub
add
sbb
sub
call
xchg
in
ret
dec
mov
add
sbb
popa
mov
mov
push
sub
ds
clc
cmp
cmc
loope
mov
xor
retf
sub
jo
xchg
sub
loope
xchg
mov
pop
fild
mov
sbb
pusha
sub
add
(bad)
mul
sub
mov
and
pop
in
daa
adc
sub
scas
bound
lahf
mov
pop
inc
out
mov
adc
aas
inc
(bad)
push
xchg
ins
stos
cld
ret
xor
mov
xchg
setae
stc
outs
pop
cld
retf
xchg
ins
gs
sti
push
pop
and
fdivr
jbe
adc
ins
add
addr16
cmps
fstp
fstp
inc
movs
sub
lods
clc
aam
adc
sub
ret
adc
xor
cwde
clc
push
sahf
ds
inc
and
mov
jno
outs
mov
lods
rol
push
inc
rcr
or
cmc
sahf
stos
shr
aaa
xor
xchg
nop
retf
fild
fwait
mov
cmp
jae
xor
cmps
ins
push
mov
popa
div
cmc
retf
xchg
(bad)
out
jae
loop
icebp
daa
loop
and
nop
adc
shr
(bad)
ins
and
inc
sub
or
mov
pusha
inc
xchg
sub
fimul
cmp
pop
out
adc
xchg
dec
adc
fwait
sub
push
jo
scas
call
fs
stos
lods
or
stos
or
je
pop
xor
sub
add
je
imul
pop
int3
repz
fnstsw
xor
fild
loopne
push
aad
add
cmp
mov
iret
mov
pop
pop
div
pushf
adc
mov
pop
cli
adc
fst
dec
ret
shr
cmc
and
and
xlat
mov
aas
xlat
mov
cld
je
sub
inc
adc
cmp
mov
jb
push
inc
(bad)
pop
dec
and
gs
inc
dec
xchg
outs
xor
(bad)
loop
fwait
cmp
pusha
xor
jl
imul
aad
or
ror
add
in
fwait
mov
mov
xor
hlt
movs
push
in
and
int3
pop
cdq
(bad)
push
daa
xchg
pop
xchg
inc
and
movs
push
and
jmp
loop
and
into
aas
cmp
push
adc
adc
leave
mov
icebp
into
stos
inc
cli
pop
push
mov
popf
imul
fisttp
cmp
fwait
mov
mov
fld
or
sbb
sbb
cdq
retf
js
dec
ds
and
dec
fwait
fs
outs
add
mov
and
outs
imul
test
and
int
cmp
out
mov
je
es
fst
(bad)
sbb
dec
mov
push
mov
imul
clc
mov
mov
push
sub
push
xchg
jp
mov
aaa
mov
ret
push
out
movs
hlt
pusha
imul
and
sub
out
repnz
jb
mov
xor
push
icebp
mov
dec
stos
add
xchg
(bad)
mov
ficom
or
(bad)
pushf
pop
inc
in
dec
pusha
and
ja
je
mov
cld
sbb
pusha
out
xchg
hlt
xchg
mov
fs
(bad)
bound
aad
scas
mov
xor
mov
dec
movs
push
lds
push
sbb
inc
icebp
rcr
in
xor
fld
fsub
sub
pop
shr
pop
jmp
jne
fs
sti
iret
xchg
ja
sub
pop
push
(bad)
xlat
arpl
movs
les
inc
outs
ja
mov
ja
and
sub
sbb
loope
arpl
cmp
popa
or
pop
or
pop
repz
icebp
cdq
push
mov
xor
sbb
push
dec
sub
pop
pop
dec
xor
jbe
test
rol
sbb
les
pop
sbb
mov
ss
imul
adc
pop
mov
lods
sub
call
pop
inc
jecxz
mov
outs
mov
test
imul
outs
movs
cmp
ror
das
xchg
cmp
push
inc
dec
sub
sahf
nop
mov
cmp
inc
call
push
shl
(bad)
jmp
fild
mov
adc
stc
in
(bad)
mov
add
jge
adc
mov
fs
hlt
mov
(bad)
xor
mov
jne
adc
rcl
cmp
sti
call
xrelease
push
pop
mov
fst
sbb
xchg
cmc
nop
ret
adc
scas
push
pop
and
xchg
movs
out
pop
imul
retf
es
pop
pop
hlt
sbb
and
xchg
inc
pop
and
fist
shr
fcmovne
sbb
sbb
in
ja
mov
dec
outs
test
add
call
jmp
les
push
ror
or
add
test
ss
(bad)
outs
adc
ds
mov
in
xchg
in
fdivr
adc
mov
sbb
mov
add
and
and
inc
call
pop
icebp
aam
pop
pop
pop
push
cdq
ins
dec
fbld
adc
loopne
cmp
mov
loope
lods
inc
jae
inc
scas
push
adc
popa
loop
inc
mov
add
cmps
cwde
(bad)
fmulp
hlt
or
cwde
jmp
ja
mov
jp
inc
mov
shl
jnp
inc
test
push
mov
add
xor
in
cmp
cmp
mov
lahf
popf
xchg
test
mov
enter
xor
add
imul
jb
scas
dec
jno
aas
cli
push
xor
loope
or
iret
fwait
pop
or
pop
cmp
mov
inc
mov
out
test
dec
iret
cmp
lea
push
cli
sub
mov
aaa
jmp
xor
dec
lods
sbb
cmp
mov
cmp
(bad)
popf
into
mov
in
stos
xchg
test
push
inc
and
mul
jp
jecxz
pop
(bad)
(bad)
jmp
xor
aam
jbe
jo
inc
pop
push
push
xchg
pop
or
cmp
jb
lods
xchg
cld
jle
and
mov
add
mov
push
(bad)
lock
xchg
dec
mov
jno
icebp
adc
cs
aad
and
push
pop
sbb
add
lock
pop
mov
fsubr
pop
and
pop
jnp
pushf
mov
aas
test
xor
jle
sub
adc
mov
mov
gs
repz
nop
and
sbb
add
leave
push
imul
mov
mov
dec
dec
jb
sti
push
adc
pop
ror
int
aam
push
int
jb
pop
mov
test
(bad)
jnp
retf
lahf
mov
je
fisttp
mov
mov
in
pop
cmc
xchg
adc
cmp
mov
mov
je
stc
sub
xchg
lods
mov
add
push
push
inc
es
call
pop
mov
rcl
xchg
push
movs
xchg
sub
pop
je
cli
jb
or
sbb
loope
(bad)
enter
stos
mov
aam
add
stc
jecxz
sbb
dec
enter
inc
mov
repnz
cli
mov
in
pop
cli
test
adc
pop
lahf
shr
sbb
enter
mov
adc
test
sbb
push
push
std
loop
retf
loopne
and
cmp
ja
mov
fnsave
jnp
dec
fdivp
mov
std
call
push
outs
scas
dec
xchg
es
in
mov
and
inc
aam
push
les
bnd
mov
push
test
icebp
xchg
pop
data16
xchg
shl
cli
repnz
add
les
fs
lods
push
mov
xchg
mov
or
(bad)
idiv
jg
(bad)
add
sbb
gs
mov
mov
popf
hlt
stc
retf
retf
xor
add
(bad)
push
mov
ss
(bad)
(bad)
(bad)
test
fisubr
xor
ss
jp
push
jl
push
pop
test
xchg
xor
das
sbb
cld
outs
xor
movs
cmp
adc
cld
push
scas
out
inc
stos
enter
jne
mov
das
ror
ret
out
and
int3
imul
lods
dec
mov
dec
icebp
movs
ins
push
mov
loopne
push
std
sbb
pop
ja
loope
retf
push
mov
int
lods
outs
mov
mov
not
dec
mov
and
cmps
pop
xchg
cmc
inc
jge
dec
pop
outs
imul
pushf
inc
cmps
addr16
cmp
addr16
mov
sbb
inc
xchg
push
cli
jno
or
ss
cwde
int
in
adc
dec
cmp
cld
shl
aaa
cmps
neg
jbe
pop
push
push
loop
cmp
fmul
sbb
jge
mov
or
in
pop
into
cmp
inc
stc
add
test
push
xchg
mov
xor
std
mov
in
xchg
mov
cmp
popf
push
inc
sahf
and
jecxz
hlt
mov
mov
or
ds
addr16
fld
test
addr16
mov
xor
cwde
inc
call
xchg
inc
cdq
fucomip
dec
loopne
add
jge
pushf
jge
mov
arpl
and
dec
sub
mov
imul
popf
(bad)
fwait
int
ins
mov
ss
mov
dec
cmp
int
cwde
or
call
adc
popf
or
inc
rol
and
sub
push
push
mov
xchg
mov
inc
inc
iret
sahf
xchg
mov
pop
ds
nop
rcl
stos
mov
cmp
repnz
dec
sahf
sub
aam
leave
jle
leave
jno
rcr
(bad)
push
push
mov
jno
jnp
(bad)
aad
sahf
movs
or
test
pop
jle
call
mov
jbe
jg
jno
cmc
jecxz
jnp
mov
xchg
sbb
sbb
mov
popa
ins
adc
adc
shl
aas
fistp
bound
aas
sbb
cmp
adc
aas
push
data16
mov
inc
pusha
jp
movs
sar
(bad)
(bad)
mov
data16
ins
imul
popa
mov
adc
aad
mov
addr16
fimul
xor
and
ficom
xchg
mov
pop
inc
into
in
int
or
add
mov
pusha
jne
cdq
sub
out
mov
fisubr
and
jecxz
(bad)
xchg
gs
mov
inc
ja
mov
adc
jne
sub
ret
cmp
ret
clc
in
pop
test
aam
and
in
in
(bad)
gs
dec
fistp
or
stos
xchg
pop
xchg
push
stos
or
call
xchg
mov
pop
push
fadd
mov
and
sub
sbb
popa
data16
push
sub
sbb
and
shl
and
outs
xchg
mov
jl
dec
fwait
xchg
ss
lahf
lahf
(bad)
outs
inc
out
scas
xchg
push
stc
xlat
pop
sahf
inc
mov
push
xor
aad
jmp
push
push
jb
lods
xchg
loop
out
mov
jmp
jp
sar
enter
ja
ret
not
scas
out
adc
dec
dec
ja
shr
inc
or
scas
stc
aaa
mov
push
and
bnd
aad
xchg
mov
lahf
(bad)
cmp
das
popf
mov
sub
imul
aas
sti
aam
mov
adc
xor
jb
jo
fist
scas
cmp
adc
int
test
mov
mov
mov
movs
xor
les
data16
jne
test
(bad)
shr
(bad)
jg
mov
sbb
dec
sub
cmc
or
out
cmp
rcl
int3
mov
ret
inc
ja
push
pop
icebp
lods
xor
mov
daa
xchg
inc
inc
or
xchg
xor
push
jnp
xchg
fwait
in
addr16
ficomp
add
movs
cmps
push
faddp
fmul
bound
mov
not
adc
loope
lods
dec
pop
cmc
ds
cmp
mov
pushf
sti
cdq
add
cmp
sbb
or
adc
push
shr
xchg
sahf
cmps
jae
adc
xor
or
sub
and
add
xor
add
lahf
pushf
adc
push
mov
xor
fistp
sbb
sti
dec
clc
scas
mov
rol
lfs
jle
ins
repnz
popa
jge
jno
jnp
mov
mov
sub
jae
mov
retf
icebp
cmps
push
fs
or
jecxz
shr
sub
xchg
cdq
mov
push
inc
mov
push
(bad)
ficomp
xchg
js
cmps
in
es
outs
adc
mov
jle
in
fst
fiadd
and
mov
lahf
outs
mov
stos
ret
and
or
call
add
mov
mov
cld
jb
add
jmp
ins
lock
jbe
pop
call
cmp
adc
or
jle
daa
fimul
rcr
jg
stos
(bad)
hlt
cmp
cmps
dec
mov
add
mov
dec
and
fs
adc
dec
loopne
push
lahf
inc
jne
(bad)
or
cmp
outs
mov
aaa
and
movs
pop
mov
stc
or
test
outs
sub
ficomp
imul
out
or
dec
stc
inc
js
arpl
enter
nop
ret
push
jle
or
(bad)
adc
push
cmps
daa
icebp
jns
test
movs
xor
cwde
push
enter
call
jmp
mov
repz
mov
fadd
mov
sbb
(bad)
(bad)
adc
into
btr
sub
imul
das
retf
sbb
xor
test
xor
pop
sub
or
mul
mov
mov
inc
pop
stos
enter
or
push
fmul
jb
imul
or
pop
add
jg
sub
sub
add
fist
jmp
jp
ret
mov
push
xor
add
(bad)
add
les
leave
test
inc
jne
mov
inc
shr
lahf
xlat
xor
stos
and
stos
or
mov
hlt
mov
cmp
and
xor
es
xchg
mov
std
sbb
cwde
add
sbb
pop
xlat
add
mov
sar
cmc
iret
aad
adc
lea
jge
sbb
(bad)
in
jns
in
pop
jns
cld
out
fwait
sbb
and
mov
jmp
mov
mov
adc
xchg
jmp
lods
push
push
popf
pop
inc
adc
std
xchg
gs
jnp
nop
push
adc
cwde
addr16
jge
ins
mov
mov
cmp
test
fwait
add
push
mov
xor
sahf
xchg
dec
nop
(bad)
pop
dec
call
mov
pop
xlat
loop
and
cli
fcom
hlt
or
sti
mov
and
je
inc
or
into
xor
push
pusha
inc
inc
cmps
je
ret
xor
jecxz
ja
mov
xor
dec
jg
(bad)
fisubr
jecxz
mov
inc
sbb
or
and
and
not
cld
and
sub
push
fnsave
out
repnz
ret
cmp
sbb
fwait
out
mov
ror
xor
or
mov
push
pop
and
mov
push
xor
out
mov
adc
repz
and
fwait
adc
adc
cmps
int
pop
(bad)
shr
shl
cmc
or
xchg
or
push
xor
pop
xlat
push
test
fild
push
mov
or
fmul
addr16
(bad)
cwde
jl
mov
add
xchg
xor
mov
mov
add
xor
mov
jp
mov
test
ret
cwde
sbb
(bad)
mov
jns
jmp
lods
gs
add
xchg
enter
cmp
hlt
mov
pop
fcomp
adc
stc
xlat
into
bound
mov
pop
fnstenv
mov
pop
mov
mov
push
jns
sub
adc
mov
sti
push
ins
adc
sti
cmp
fistp
out
cwde
sbb
cld
movs
push
std
xchg
pop
arpl
loopne
mov
lock
test
in
fist
mov
pop
popf
aaa
and
cmps
dec
aad
aam
popf
cmp
mov
dec
mov
into
dec
xchg
adc
jb
mov
mov
mov
cmp
cld
imul
js
sub
jmp
push
xor
int3
popf
push
pushf
movs
xor
rcr
dec
cmp
xchg
sub
aas
or
push
lods
stos
fsubr
push
idiv
mov
rol
xchg
pop
lods
sub
mov
test
push
mov
das
cld
dec
sbb
push
fwait
popf
arpl
out
ss
inc
mov
lods
jge
scas
pusha
sahf
and
call
pop
push
imul
mov
jne
fwait
adc
(bad)
sbb
inc
sub
jp
xlat
jnp
fistp
aaa
jmp
data16
mov
ds
or
sub
cdq
jecxz
ror
pop
ins
fisub
retf
xlat
test
aad
pop
test
cmp
cli
addr16
mov
in
pop
loop
enter
iret
scas
or
cmp
mov
test
call
imul
mov
adc
aam
sub
nop
(bad)
mov
lods
out
jg
js
jmp
es
inc
xlat
mov
lods
ins
(bad)
hlt
push
mov
mov
bound
xchg
jl
loopne
(bad)
je
dec
or
sub
cmp
jno
pop
and
stos
xor
imul
lods
jo
fmul
mov
push
lahf
sub
cmps
movs
jbe
test
jmp
fist
cmp
stc
fisttp
xchg
cmp
pop
rcr
cmps
push
pop
cmp
dec
adc
mov
mov
pop
mov
sbb
pop
pop
mov
xchg
fisttp
fnstenv
clc
and
mov
cdq
std
arpl
js
xor
xor
fdivr
jmp
fcmovu
mov
mov
or
rcl
pop
cmps
jno
dec
xor
aaa
imul
jg
xchg
sbb
es
in
sbb
pusha
jg
aam
sti
adc
arpl
or
sub
pop
push
mov
mov
and
movs
sub
imul
fstp
rcr
rol
aaa
cmps
xchg
mov
out
in
inc
lahf
out
es
pusha
and
imul
test
xor
mov
fwait
inc
or
pushf
scas
pusha
inc
in
push
and
loop
mov
sbb
cmp
mov
xor
or
jp
push
push
in
pop
jmp
scas
aas
jae
shl
dec
(bad)
pop
shr
ja
int
sbb
mov
mov
outs
(bad)
pop
push
sbb
xchg
cmp
in
enter
jns
xor
pop
fimul
iret
cmp
sub
cmp
push
jae
mov
nop
jb
sbb
xor
in
or
aam
repnz
rol
mov
rcr
cmp
test
push
leave
imul
repz
xor
cmp
mov
cmp
inc
in
hlt
out
mov
or
ret
lock
jmp
jno
jmp
dec
movs
(bad)
adc
pusha
jnp
int
icebp
loopne
inc
out
xchg
cmc
add
or
movups
in
or
xchg
les
mov
pop
jae
push
mov
and
stos
leave
mov
pop
fs
outs
into
push
seto
movs
stos
cmc
fwait
and
or
xchg
pop
push
add
cdq
sbb
mov
icebp
cmp
dec
mov
std
cmp
or
aam
and
mov
rcr
outs
ins
mov
lea
add
aas
ror
test
jbe
cmp
lds
xor
adc
xchg
aaa
movs
pop
mov
sub
push
dec
sbb
imul
(bad)
jbe
xlat
xlat
out
jmp
fdiv
dec
and
mov
push
or
ror
mov
imul
fistp
es
sbb
inc
sub
mov
div
das
xor
inc
pop
jnp
mov
mov
imul
adc
jle
test
icebp
mov
mov
loop
ret
ror
movs
mov
div
xchg
retf
mov
push
stos
ins
jge
popf
sub
gs
iret
jno
sub
aad
and
push
(bad)
(bad)
lock
out
dec
lahf
sbb
adc
test
mov
sbb
aas
adc
and
cli
xor
push
fstp
or
gs
push
push
cdq
xlat
xor
cmp
inc
fbstp
das
jno
sub
sub
push
pop
or
je
pop
mov
leave
mov
xor
jmp
into
pop
inc
fwait
enter
jae
mov
push
arpl
in
pop
lods
jb
mov
mov
ins
jne
push
int
mov
fdiv
jae
adc
mov
mov
pusha
sbb
sub
pusha
jecxz
add
pop
ins
sbb
cmp
mov
pop
push
mov
mov
paddsb
lods
push
pop
inc
push
sbb
stos
fsubr
mov
out
in
mov
inc
or
mov
sub
lods
push
mov
int
int
int3
gs
fs
push
mov
ret
pop
push
mov
lods
cmp
push
cmp
and
pushf
cs
sti
inc
mov
imul
shl
xchg
fimul
rol
repz
ins
mov
sbb
mov
cmp
jp
jno
bound
(bad)
mov
xchg
adc
gs
loop
pop
je
pusha
push
jmp
(bad)
mov
push
lods
push
aas
jle
out
adc
push
pop
cmp
bswap
mov
mov
in
int
xchg
pop
dec
mov
into
add
into
add
inc
sbb
pop
push
inc
(bad)
fndisi(8087
das
sti
mov
or
cdq
jo
call
arpl
imul
in
pop
push
test
and
scas
cli
sub
enter
aad
xchg
adc
jbe
xchg
push
sbb
test
mov
mov
sbb
sub
mov
inc
imul
add
(bad)
icebp
cli
push
iret
push
mov
test
shr
pop
adc
mov
pop
stc
fst
fist
cmps
repz
stc
mov
fdivr
jmp
int3
es
lods
call
mov
mov
out
fs
inc
push
mov
ds
xchg
into
cli
push
test
int3
jmp
pop
ds
push
lahf
pop
test
push
sub
sub
inc
inc
or
add
inc
mov
inc
push
retf
test
xchg
xchg
pop
rcr
adc
dec
sub
fsubr
test
push
jecxz
pop
jns
jb
or
aam
and
je
div
nop
mov
lock
mov
scas
ret
sbb
pop
stos
test
push
inc
pushf
repnz
cmps
jmp
sbb
cmp
pusha
mov
or
daa
das
jecxz
sub
adc
(bad)
(bad)
cs
push
sub
and
shl
pop
xor
sub
outs
push
mov
out
mov
pop
movs
lods
cmp
push
push
aad
cmps
add
int3
outs
ss
sub
fnstcw
pop
adc
adc
inc
inc
adc
sbb
ds
lods
sti
(bad)
(bad)
xchg
(bad)
gs
pop
repz
jns
xchg
add
adc
in
adc
lea
into
std
and
add
cmp
xor
inc
sub
pusha
lds
jbe
das
shl
cmps
jb
iret
pop
addr16
stos
scas
jb
lock
push
cmc
popw
test
(bad)
fdiv
or
xor
scas
inc
mov
cdq
pop
ret
fistp
mov
pop
daa
lahf
enter
retf
int
jb
jecxz
push
(bad)
push
(bad)
lock
test
aas
(bad)
fs
ret
sti
(bad)
sar
out
dec
push
enter
retf
(bad)
sub
mul
pop
int
(bad)
xor
cmp
mov
mov
ret
fs
jp
adc
test
outs
inc
mov
test
shl
inc
dec
rol
sbb
and
push
pusha
jns
leave
sbb
pop
cmps
dec
les
int
outs
push
mov
dec
pop
adc
call
cmp
push
repnz
cmc
sbb
sub
mov
ins
jno
xor
or
call
sub
aas
pop
and
pop
(bad)
mov
rcr
xor
mov
cmp
xchg
mov
inc
shl
sbb
adc
into
shl
sub
push
sbb
popf
push
sub
dec
mov
sub
es
test
pop
outs
dec
gs
jmp
ret
scas
mov
(bad)
int3
sub
jno
xor
out
xor
xchg
xor
cmp
movs
gs
xor
imul
mov
add
fwait
xchg
dec
test
mov
mov
add
call
(bad)
push
es
jle
xchg
add
bound
lahf
jo
dec
leave
jge
cli
mov
mov
gs
mov
and
mov
mov
cmp
loopne
jns
dec
int3
fild
mov
dec
push
rcr
fsubr
mov
adc
test
xor
imul
cmp
cmp
fs
push
test
xchg
out
inc
sbb
dec
mov
pop
lds
movs
enter
dec
mov
lock
and
push
arpl
popf
dec
dec
fcmovbe
mov
mov
adc
sbb
test
fstp
rcr
xchg
pop
sbb
mov
mov
push
inc
mov
bound
cmp
xchg
add
ins
push
dec
inc
pop
clc
aad
int
pop
mov
pop
inc
(bad)
cdq
sbb
or
mov
inc
jge
stos
pop
retf
xor
jbe
mov
push
cmps
mov
mov
xchg
jnp
out
mov
mov
mov
fs
bound
daa
popf
sbb
mov
fcmovnbe
inc
ins
jo
mov
sbb
das
inc
mov
add
xchg
fadd
pop
cmp
arpl
pop
sub
(bad)
cs
pushf
(bad)
popf
dec
cli
sub
pop
sbb
xor
repnz
shl
mov
ret
add
add
shl
or
out
and
shr
sbb
push
dec
popa
in
inc
loope
int3
inc
ret
jl
(bad)
shr
aaa
sbb
mov
lock
sbb
jmp
les
mov
rcr
or
mov
mov
out
aas
mov
movs
aam
cmps
push
imul
inc
enter
dec
mov
jno
inc
je
daa
add
sbb
add
and
mov
fisttp
jle
bswap
in
push
pop
xchg
mov
mov
sbb
aas
jmp
test
(bad)
aas
arpl
shr
movs
push
inc
(bad)
loop
adc
mov
push
lahf
movs
aas
mov
(bad)
xchg
aas
iret
in
imul
(bad)
mov
mov
or
push
dec
rol
mov
test
inc
add
and
cmp
mov
shl
and
push
test
mov
xor
jge
je
repnz
das
retf
mov
fld
xlat
repz
pop
pushf
jb
pop
push
xor
add
mov
jbe
pop
bound
cmps
fisubr
dec
out
idiv
cmp
jge
jo
(bad)
fs
ficomp
rcl
mov
or
jp
sahf
inc
mov
sbb
and
scas
shl
test
in
sub
out
(bad)
or
or
mov
sub
jp
bound
push
in
pop
cmps
neg
in
push
sbb
cmp
mov
call
in
push
out
cmc
or
or
scas
sub
pop
push
iret
jmp
jb
dec
push
jmp
and
mov
mov
int
daa
jno
es
fnstsw
je
jge
movs
addr16
lods
xchg
out
leave
ja
int
mov
test
repz
test
pop
mov
ret
jle
pushf
inc
mov
xchg
out
enter
imul
xchg
dec
shr
fndisi(8087
stos
pop
mov
push
cli
or
fldenv
xor
push
ror
jbe
adc
lock
(bad)
sbb
jecxz
adc
jmp
fld
mov
fwait
or
mov
jne
pop
xchg
test
cmp
pop
or
cmovg
push
dec
psubusb
ret
mov
call
jl
mov
mov
xlat
sub
sbb
inc
dec
pop
ins
ret
movs
aas
ds
in
imul
ds
sbb
int3
add
fisubr
add
pusha
cli
mov
sub
mov
jg
pop
inc
mov
jb
push
xor
es
or
scas
aam
cs
push
add
mov
int3
mov
push
lock
dec
inc
adc
inc
icebp
ret
imul
into
mov
mov
push
and
sub
and
mov
xor
mov
mov
pop
or
out
fdiv
mov
push
fdiv
cmp
cld
es
or
push
out
je
movs
xchg
dec
into
mov
cmp
adc
adc
stos
pop
sbb
xor
scas
or
pop
push
clc
out
jmp
dec
jecxz
stos
ror
jge
leave
sub
scas
pop
and
inc
out
mov
pop
sbb
push
les
jg
push
sbb
pop
or
inc
mov
hlt
cs
int
pop
cli
cmp
jle
or
push
dec
pop
sbb
jmp
inc
push
sbb
movs
movs
push
cmp
adc
xor
push
mov
add
not
jmp
add
rcl
mov
popf
push
xor
mov
dec
(bad)
fimul
push
(bad)
add
dec
imul
(bad)
out
and
les
rcl
mov
int3
retf
dec
pop
jecxz
or
pop
(bad)
xchg
ins
ret
sub
scas
sbb
and
out
dec
pop
sbb
and
pop
outs
sahf
cmp
aam
jns
packssdw
ret
mov
ss
stc
push
gs
adc
push
inc
mov
xchg
or
outs
pop
pop
(bad)
inc
xor
xor
mov
push
or
out
pop
int3
add
cmps
adc
sub
out
das
cmps
add
cmp
sub
enter
jle
dec
mov
or
mov
sbb
sub
pop
mov
cmp
pushf
cmc
jg
push
fs
sub
adc
test
popf
and
cmp
dec
dec
lods
mov
sub
pop
sti
push
sbb
pushf
and
sbb
inc
cwde
stos
jmp
push
push
push
dec
mov
nop
dec
adc
pop
fcmovnu
rcr
fcmovnbe
mov
mov
cwde
xor
pop
mov
adc
xor
push
xor
xchg
jne
out
test
mov
mov
cmps
lea
push
add
js
fld
adc
mov
lea
pop
xchg
aam
or
ja
xchg
mov
fsub
test
out
xchg
imul
scas
adc
inc
push
push
jne
jae
xor
mov
jp
lock
ins
(bad)
sbb
xchg
stos
iret
imul
jno
in
into
fwait
mov
dec
movs
int3
stos
aas
cld
push
pop
out
test
pop
sub
pop
xrelease
pusha
mov
push
stos
fwait
dec
inc
mov
ret
jbe
jp
(bad)
paddd
movs
add
shl
idiv
jg
pop
imul
scas
repnz
loopne
fst
mov
adc
lods
ret
out
(bad)
or
mov
ror
mov
jne
mov
xchg
imul
jmp
movs
add
add
mov
lahf
mov
sar
jmp
stos
mov
imul
popf
inc
test
cld
and
mov
xchg
ret
jmp
repnz
sbb
mov
sar
pusha
sub
rcl
sub
dec
mov
add
scas
sbb
sub
out
shr
mov
scas
sar
pusha
in
mov
das
push
in
fs
dec
cmc
je
adc
add
push
enter
jle
aad
sbb
int
loop
fs
sbb
dec
jmp
sahf
imul
lea
and
(bad)
xor
cmps
fyl2x
dec
js
sbb
sbb
inc
das
sub
call
fimul
mov
cmp
pusha
cld
push
mov
and
push
loopne
ins
scas
pop
retf
pushf
jmp
xor
sub
pop
test
movs
jmp
dec
hlt
call
stos
sbb
sti
(bad)
xor
adc
cmp
iret
(bad)
jp
loop
add
(bad)
data16
push
sbb
ja
push
mov
fcom
push
(bad)
nop
pop
ffreep
jecxz
pop
lock
mov
push
push
stc
fs
push
sbb
ins
test
cmp
call
push
and
push
xor
adc
int3
popf
in
xchg
dec
mov
inc
(bad)
test
add
sub
cmp
cmp
int3
cmp
into
fmul
lods
arpl
mov
(bad)
mov
outs
jl
(bad)
cmp
fld
add
(bad)
pop
loope
sbb
cmps
add
ror
pop
mov
xchg
fbld
xchg
(bad)
xor
jmp
outs
gs
mov
jno
jmp
mov
jl
or
add
mov
push
fisttp
out
xor
(bad)
rcr
dec
aas
push
xor
sub
sub
icebp
outs
pop
cmp
dec
push
sahf
aas
push
mov
cmps
push
popf
xchg
nop
mov
jge
iret
ins
cld
shr
out
sbb
xchg
cmp
movs
pop
ja
enter
ins
dec
add
cmp
mov
leave
retf
pushf
mov
fld
cmc
test
enter
int3
nop
out
cmp
popa
movs
xchg
fidivr
inc
sbb
test
hlt
(bad)
call
leave
sub
cwde
xlat
rol
dec
push
adc
xchg
adc
div
call
mov
(bad)
adc
mov
add
pushf
stos
shl
test
cmps
stos
push
sahf
sar
adc
jmp
add
loop
push
ret
inc
test
mov
pop
jg
out
out
scas
imul
lds
cmp
stc
ins
popf
sub
(bad)
xchg
adc
jge
mov
xchg
xchg
mov
shr
inc
add
mov
xchg
mov
jle
in
pop
in
push
fidivr
out
sbb
retf
xchg
pop
es
mov
sub
cmp
xchg
or
mov
bound
xchg
scas
jmp
in
pop
(bad)
aam
pop
dec
jge
sahf
sub
push
mov
mov
es
sbb
adc
xlat
jno
(bad)
cmp
loope
sar
fiadd
cmps
ret
jp
pop
and
lds
xor
mov
and
jmp
add
arpl
or
cli
mov
dec
and
sub
dec
sbb
mov
xor
scas
sub
push
clc
and
xor
outs
cli
xchg
aam
aaa
inc
scas
or
xchg
out
mov
jo
neg
stos
sub
jecxz
es
addr16
inc
call
add
mov
or
ss
pop
cmc
adc
cmp
fsubr
jg
lock
xor
cmp
lahf
int3
inc
sbb
mov
xchg
gs
push
mov
add
imul
pop
nop
pop
mov
mov
pop
inc
rol
xor
xlat
inc
fidiv
dec
mov
dec
jnp
mov
xchg
cmp
mov
out
xchg
mov
pop
jae
cmp
repnz
cs
xlat
stos
inc
mov
xchg
jno
pushf
cmp
popf
mov
jmp
push
imul
adc
in
xor
and
or
cld
and
mov
or
fisttp
mov
inc
and
push
sub
jae
shr
out
enter
xor
dec
add
dec
and
adc
inc
pop
dec
cmc
in
dec
adc
in
and
loop
mov
sub
inc
pop
fisub
xchg
and
mov
mov
sub
jmp
test
jmp
xor
pop
jge
in
adc
jl
icebp
adc
daa
int
xchg
or
cmp
xchg
xlat
cmp
stos
loopne
int3
jecxz
pop
mov
sbb
movs
xor
jnp
stos
fs
mov
mov
xchg
mov
mov
xchg
int
imul
out
in
jbe
mov
frstor
push
fistp
sub
pop
xor
lock
or
push
jnp
cmps
in
shr
ins
mov
and
xor
sub
push
pop
in
fst
sbb
popf
lea
xor
imul
mov
push
push
mov
(bad)
lods
lea
fidiv
cdq
imul
pop
stos
inc
adc
jg
stos
mov
and
test
out
in
loope
popa
aad
nop
je
jne
retf
mov
jl
xchg
mov
in
inc
and
add
pop
lahf
cmp
nop
dec
out
out
dec
ins
(bad)
jmp
mov
cli
icebp
imul
add
mov
loopne
inc
in
iret
in
inc
xchg
inc
movs
jl
in
adc
ds
or
or
and
jne
cs
jns
mov
xchg
jl
xchg
dec
adc
push
mov
cmp
xor
jp
int
mov
retf
cli
mov
gs
lea
aas
xchg
bound
dec
push
xchg
jae
push
mov
imul
imul
cmp
les
push
dec
jge
clc
nop
inc
cmp
stos
adc
inc
push
inc
inc
(bad)
das
sti
idiv
pop
int
test
mov
lahf
mov
cld
int3
dec
retf
call
cmp
shl
push
retf
adc
or
daa
add
sub
inc
push
(bad)
sub
mov
dec
neg
xchg
bound
xchg
cld
loop
stos
mov
cmps
or
test
jecxz
pop
std
leavew
nop
ins
je
sbb
retf
mov
in
mov
out
(bad)
cmp
cmps
cs
pop
(bad)
(bad)
or
add
popa
jge
gs
add
add
sahf
inc
ror
adc
rcl
dec
push
sar
in
xchg
sbb
sbb
inc
cwde
add
loop
lods
pop
jne
pop
repnz
sbb
repz
pop
pop
mov
add
push
(bad)
or
std
(bad)
xlat
xor
daa
xor
dec
iret
jmp
sbb
inc
sbb
aaa
mov
cmp
sub
mov
fdiv
dec
pop
mov
mov
mov
stos
xchg
es
ret
scas
fs
loop
cmps
sbb
js
(bad)
jecxz
into
jo
iret
or
cmp
mov
lods
pushf
xchg
adc
in
repnz
mov
aas
inc
rcr
(bad)
fwait
rol
mov
nop
add
fnstenv
lea
dec
add
cmp
sbb
pushf
dec
call
ja
and
dec
cld
mov
mov
mov
pop
fstp
push
push
inc
shl
repz
or
jle
sar
xor
xchg
xor
and
and
xchg
push
cmp
sbb
mov
js
stos
ins
mov
icebp
cmps
cmp
jb
in
gs
fstp
ficom
repz
pop
inc
retf
dec
repz
push
test
sbb
call
loop
or
in
bound
aaa
and
dec
xchg
cmp
jmp
xor
scas
dec
adc
test
out
jbe
sub
xor
test
mov
xchg
sub
ss
jge
lods
mov
adc
mov
out
jecxz
adc
jmp
lea
xchg
dec
mov
jmp
fwait
jp
retf
out
dec
in
or
jge
stos
xor
ror
rcl
inc
add
fdiv
jecxz
mov
rcl
sub
scas
ret
jo
pop
or
mov
or
test
cmps
data16
mov
push
pop
cmp
cmp
lds
cs
(bad)
cmp
(bad)
arpl
iret
mov
rcr
xchg
in
xor
retf
jb
das
imul
mov
aas
xchg
test
jno
adc
jmp
lock
mov
fstp
mov
dec
and
enter
movs
jecxz
mov
adc
cwde
cmp
call
push
je
movs
jmp
scas
in
call
and
call
call
rcl
jae
jne
lods
sub
call
cmp
mov
pop
fwait
cmp
inc
scas
bound
pushf
imul
dec
int
mov
popa
sub
daa
in
imul
xchg
je
and
jmp
enter
xchg
outs
scas
inc
jnp
popa
les
fsubr
test
loop
cmp
nop
movs
xor
cwde
scas
(bad)
cmps
loope
xor
mov
ficomp
test
mov
mov
imul
sar
enter
mov
jle
inc
ss
int3
(bad)
add
into
push
out
sbb
lods
adc
add
dec
push
fld
ins
sub
cdq
aas
mov
data16
mov
dec
ror
jp
fwait
jnp
cwde
aaa
dec
mov
adc
stc
or
pushf
ins
xor
jnp
push
dec
jne
hlt
leave
mov
jl
movs
jl
xor
mov
inc
ret
adc
sbb
inc
xchg
leave
mov
inc
push
bound
neg
cmp
sbb
stos
das
mov
sub
ds
inc
lds
jmp
call
test
movs
adc
imul
push
cmc
popf
xor
sbb
mov
xchg
jns
cmp
jnp
adc
mov
dec
cmps
in
xor
call
mov
cmp
mov
sti
call
shr
adc
mov
xor
jge
(bad)
mov
mov
jle
push
lds
neg
mov
mov
jmp
sti
fs
and
lods
loop
xchg
push
and
cmp
mov
pop
or
mov
sub
jno
adc
push
xlat
cmp
cmp
push
sar
popa
or
push
pop
retf
xchg
xor
or
pop
adc
xor
sub
inc
repnz
mov
pop
sti
neg
push
mov
dec
or
jmp
test
push
pop
nop
iret
test
mov
adc
sbb
push
mov
dec
repz
(bad)
mov
jns
mov
jle
xchg
xor
inc
ss
cwde
inc
addr16
dec
inc
mov
xchg
xor
xor
leave
mov
shr
push
jno
dec
push
bound
push
sbb
or
dec
out
stos
jle
pop
xchg
pop
or
imul
cmc
ins
mov
mov
(bad)
sub
pop
adc
mov
cmp
lea
sbb
pushf
pop
out
pop
push
and
mov
mov
and
pop
mov
inc
push
mov
dec
je
add
mov
outs
wbinvd
lea
enter
cmps
setle
popf
js
(bad)
in
and
iret
or
sahf
frstor
repz
clc
and
push
jae
and
hlt
mov
in
mov
sbb
iret
xor
adc
ss
shr
mov
cmp
ins
rcl
in
mov
xchg
sti
add
mov
adc
cld
and
ds
push
data16
mov
cmp
nop
(bad)
into
int3
or
push
push
rcr
pop
imul
cmp
xchg
imul
scas
loopne
cmps
sbb
(bad)
sub
mov
outs
mov
jnp
aam
sbb
je
das
pop
iret
inc
sbb
adc
mov
stos
aas
hlt
dec
jbe
cmp
test
xchg
cmps
out
sub
data16
mov
adc
mov
inc
mov
daa
dec
stos
jmp
push
(bad)
cmp
add
ja
loop
in
cmp
xchg
and
aaa
outs
lahf
cmps
fisubr
sbb
adc
mov
dec
ins
xor
in
ja
xchg
stos
(bad)
mov
mov
das
sub
call
xor
adc
jo
jge
sbb
rol
mov
mov
pusha
and
add
pop
cdq
xor
mov
popf
idiv
sub
mov
pop
pop
fwait
icebp
adc
test
(bad)
stos
inc
cmps
mov
pop
add
test
out
jecxz
ror
fbstp
inc
adc
mov
loope
icebp
ficomp
and
inc
ja
sub
push
in
adc
repnz
mov
cmps
(bad)
nop
aas
(bad)
cs
mov
and
fidiv
cdq
pusha
jne
ins
jle
popa
lea
fidivr
mov
movs
mov
dec
pop
imul
xchg
push
inc
jg
dec
and
inc
test
xor
fidiv
xchg
aam
iret
inc
cmp
sbb
jmp
sub
dec
push
sub
scas
add
jecxz
lods
inc
or
jne
cmp
out
test
and
clc
nop
sahf
dec
inc
pop
in
push
xor
popf
test
je
mov
xchg
popa
stos
xor
jecxz
adc
xchg
jbe
xlat
(bad)
cmp
cmp
xor
cwde
rol
inc
sbb
jae
shr
sub
pop
cs
dec
cdq
call
mov
(bad)
std
dec
mov
xchg
aas
movs
dec
mov
ficomp
jg
dec
int
sub
ror
jno
mov
jno
test
stc
push
pop
adc
lock
ss
scas
retf
jg
call
jbe
js
dec
outs
jmp
fs
jns
les
push
sti
sbb
mov
loop
mul
cmp
test
mov
arpl
jae
movs
sbb
mov
push
and
pop
jne
mov
dec
xchg
adc
arpl
fsubr
dec
mov
imul
jmp
cmp
and
mov
ret
push
xchg
dec
es
inc
inc
jmp
sub
aas
adc
jmp
jmp
test
or
shl
and
mov
out
aam
ret
das
in
rcl
mov
or
xchg
sbb
adc
ja
push
and
and
hlt
leave
int
fwait
inc
dec
test
jle
adc
mov
and
push
dec
pop
hlt
outs
fld
call
mov
cmp
pop
dec
xor
xlat
push
push
xor
mov
xchg
mov
xchg
mov
(bad)
mov
inc
in
repz
bound
popa
in
push
stos
ja
push
push
test
clc
ins
jp
mov
idiv
es
push
pop
neg
adc
aas
out
leave
inc
add
dec
stos
jge
cmp
nop
mov
call
pop
inc
arpl
cwde
pop
in
outs
sbb
jae
cmp
jne
ins
mov
and
outs
dec
xchg
hlt
mov
pop
mov
lahf
sbb
and
sub
rol
test
dec
push
in
shl
and
cmp
and
daa
div
(bad)
xchg
pop
jno
mov
sbb
add
in
sub
in
outs
fimul
sbb
mov
jl
dec
xor
mov
dec
fldenv
push
adc
jle
sub
xor
add
jno
je
popa
sbb
ins
dec
xchg
add
and
mov
aas
jbe
sbb
shl
sbb
enter
sbb
movs
popf
arpl
or
mov
cmp
bound
jmp
push
stc
les
ret
jmp
mov
and
sahf
popa
addr16
pop
mov
cli
scas
pop
cdq
call
mov
outs
sahf
and
xchg
std
dec
pop
sbb
push
lahf
xor
xchg
pop
sub
movs
sahf
cld
adc
push
mov
cli
xor
ins
js
mov
and
sbb
pop
imul
loop
shl
push
dec
push
sub
(bad)
outs
ret
fsub
or
ficomp
int3
mov
pop
xchg
imul
dec
out
mov
cmp
add
adc
jb
pop
jb
push
aaa
and
jo
mov
sub
pushf
pusha
mov
mov
outs
(bad)
loop
adc
mov
xor
mov
pop
loop
pusha
pusha
das
push
inc
jmp
fild
popf
lods
sub
(bad)
sub
je
jecxz
ds
mov
ret
movs
push
cwde
mov
popf
imul
cmp
push
popa
arpl
out
sub
mov
and
mov
cmp
xor
inc
bound
push
scas
inc
or
test
xchg
mov
scas
icebp
pop
mov
bound
xchg
cmp
add
push
xchg
inc
pop
(bad)
jg
mov
adc
sub
pop
xchg
or
mov
scas
das
repz
adc
cmp
dec
fcmovbe
or
push
out
mov
pop
fadd
call
nop
repz
in
iret
sub
(bad)
push
stos
add
aaa
sub
cwde
popa
cmp
cmp
repz
je
shl
bound
and
xchg
mov
pop
pop
loop
mov
push
sub
cld
jae
clc
aaa
call
call
fcomip
xor
lea
loope
daa
shr
into
retf
imul
push
ds
mov
pop
pop
inc
sub
int3
inc
mov
sub
jl
pop
das
out
in
adc
div
imul
xchg
xor
jecxz
xchg
jns
aam
adc
sub
bound
sahf
stc
cmp
jne
fadd
leave
dec
jmp
pop
(bad)
sti
pop
cmp
fwait
xor
movs
xchg
mov
ffree
mov
or
dec
into
sbb
stc
add
movs
mov
arpl
stos
loop
sbb
jae
cmps
mov
in
sbb
jbe
nop
push
cmp
or
sahf
hlt
sti
cmp
push
xchg
(bad)
(bad)
sbb
jb
jo
sar
push
ror
push
das
aam
test
fsubr
sbb
xchg
adc
lea
in
xchg
hlt
pop
push
cmps
pop
lahf
pop
cmps
cmp
popf
push
push
add
cli
arpl
pushf
push
adc
in
scas
inc
movs
jbe
imul
fnstenv
push
push
out
sbb
out
add
out
lds
push
add
xor
(bad)
jne
in
cmp
jg
mov
scas
sub
mov
lods
xchg
mov
iret
popf
fptan
daa
pop
xor
test
pop
pop
ret
scas
imul
mov
test
jno
test
xlat
stos
pop
mov
repnz
gs
add
popf
inc
mov
mov
test
add
inc
jmp
jno
sar
adc
jg
or
sbb
mov
fdivr
pushf
adc
xchg
lea
add
inc
scas
stc
pop
in
movs
push
daa
cmps
imul
jp
pusha
call
pop
shr
sbb
int
retf
or
hlt
pop
test
adc
out
inc
push
inc
aaa
xchg
pop
dec
fs
fstp
inc
jbe
xor
mov
add
out
out
jb
in
bound
sub
call
and
or
jl
lahf
inc
lock
push
fidiv
iret
or
mov
fiadd
push
jmp
xor
xchg
fcomp
push
mov
lods
inc
rcl
aad
stc
out
push
into
adc
mov
loope
mov
push
shl
(bad)
mov
les
je
cld
xor
sbb
push
cdq
shl
test
fwait
not
mov
push
sub
les
jg
(bad)
(bad)
inc
push
repnz
push
nop
in
add
cmps
xchg
lock
stc
out
sub
inc
pop
xchg
inc
mov
push
and
push
cmp
test
xor
push
or
or
mov
nop
jge
rol
rol
sub
push
cwde
and
pop
popa
stc
in
jmp
js
jnp
and
or
cmps
add
sbb
jmp
pushf
adc
sahf
mov
cmp
ss
and
sub
sar
call
push
test
push
scas
sub
fdivr
dec
dec
neg
adc
sbb
jge
xchg
jo
cmps
movzx
aas
loop
scas
sahf
add
pop
add
ds
push
xchg
fidivr
push
call
sub
int
(bad)
jbe
shl
repnz
cwde
xchg
cmp
repnz
test
icebp
jl
mov
mov
xchg
retf
loop
test
xor
jmp
push
mov
fwait
adc
sbb
dec
fwait
pop
fst
(bad)
mov
movs
outs
adc
rcr
scas
xor
ds
in
daa
pop
dec
jmp
xor
cdq
je
jmp
mov
mov
arpl
loop
jmp
mov
into
fs
lods
push
mov
inc
mov
or
ss
retf
mov
leave
push
xor
cmps
lods
inc
es
cmp
mov
js
sub
pusha
or
xchg
shr
outs
ret
pusha
lods
mov
call
rcr
jmp
xor
push
mov
std
xchg
or
pop
stc
pop
mov
sbb
scas
out
iret
dec
data16
int
into
jg
xchg
push
mov
icebp
or
nop
jecxz
dec
rcr
mov
lds
outs
add
gs
inc
nop
xchg
mov
xchg
lods
(bad)
jbe
xor
stos
push
mov
movs
scas
mov
mov
jmp
mov
stos
sbb
fs
sub
cmp
out
mov
rcl
dec
aad
cmp
clc
scas
dec
adc
xchg
iret
pusha
pop
lds
int3
add
cmp
cld
retf
clc
push
mov
and
sub
mov
push
xchg
sahf
lods
test
outs
popa
xor
(bad)
push
fild
mov
hlt
sbb
adc
mov
fld
mov
and
loopne
lods
icebp
jno
cmc
icebp
adc
popf
adc
arpl
push
inc
jno
fdiv
sub
inc
repnz
popa
in
daa
inc
cmp
mov
add
mov
cmp
aas
fistp
dec
loopne
push
loopne
xchg
repz
pop
jne
outs
(bad)
cmc
mov
jp
and
sbb
cmps
mov
dec
xchg
js
dec
ins
xlat
fwait
dec
push
mov
mov
push
mov
xchg
test
out
rcl
xchg
xchg
inc
pushf
push
test
cli
mov
mov
(bad)
fisttp
xor
dec
aad
scas
popf
je
lahf
inc
out
mov
push
mov
adc
divps
mov
(bad)
cmp
mov
shl
loope
add
in
and
dec
sbb
push
(bad)
and
mov
and
cmps
xchg
imul
loopne
in
loop
mov
loop
not
je
sub
pushf
test
xchg
aad
mov
sub
shr
pushf
(bad)
pop
lods
xchg
data16
dec
aas
dec
in
fsubr
popf
pop
or
fwait
and
daa
jns
lock
shl
mov
or
and
fnstenv
(bad)
mov
and
mov
xchg
hlt
fs
mov
cmc
xchg
mov
dec
jecxz
jge
jno
stc
push
xchg
push
test
jle
call
test
jmp
inc
push
and
jne
jmp
and
pop
call
enter
test
pushf
cwde
movs
push
mov
(bad)
std
sbb
sahf
(bad)
hlt
pop
sub
sub
bound
stc
or
imul
pop
mov
add
jne
outs
xor
push
ins
test
push
fiadd
cwde
lods
cmp
mov
inc
push
fwait
or
sbb
aaa
jl
arpl
jge
test
bound
lock
pop
call
jmp
jg
mov
mov
leave
mov
out
add
std
mov
sub
popa
bound
scas
arpl
ds
jl
adc
inc
imul
lods
or
sub
sub
test
or
xchg
data16
cmp
inc
movs
jge
xchg
ds
cmp
and
jno
rcr
cmps
ficom
pop
cmp
xchg
push
pop
test
(bad)
cdq
sar
and
enter
xchg
aaa
adc
shr
in
or
arpl
mov
ins
repnz
lods
mov
jne
adc
rol
cmp
push
cmp
push
retfw
and
sbb
sar
outs
sub
out
or
and
imul
push
scas
inc
in
add
jecxz
add
and
aaa
movs
inc
dec
(bad)
pop
adc
xchg
mov
inc
pushf
sbb
push
mov
mov
lea
iret
aam
aas
ret
inc
call
and
or
mov
aam
movs
mov
mov
xor
lea
lahf
imul
shl
mov
dec
add
pop
dec
fimul
gs
sbb
cli
iret
sbb
fadd
mov
outs
(bad)
xchg
mov
jb
mov
and
pop
mov
es
jne
dec
sub
enter
std
dec
mov
mov
repz
sub
jno
sbb
sbb
xor
neg
adc
pop
je
push
inc
aas
cmp
test
cmps
imul
add
stos
test
fadd
adc
push
sti
cmp
ret
clc
pop
mov
jo
(bad)
shl
mov
jno
mov
add
lahf
and
fwait
popf
xor
cmp
nop
cli
jno
pushf
cmp
or
pop
inc
daa
gs
fistp
es
sbb
into
data16
rcl
or
in
inc
rol
xor
ds
mov
mov
fisubr
mov
cmp
loope
xchg
stc
cmps
xor
sub
adc
mov
clc
mov
test
(bad)
out
std
mov
cmp
shr
mov
sbb
dec
sub
aam
mov
test
pop
dec
nop
add
in
in
ret
shl
xor
xor
aas
mov
xchg
pop
sahf
dec
push
add
gs
int
movd
pop
and
dec
in
adc
adc
cmp
stc
xor
outs
aaa
adc
in
add
aas
pop
call
push
lahf
fiadd
inc
in
sbb
int
cmp
data16
test
rcl
je
fmul
pop
std
pop
xor
scas
dec
test
ds
enter
xchg
enter
adc
add
je
enter
stc
mov
ja
jo
sar
dec
sbb
lods
cwde
cmc
pop
and
mov
dec
jl
icebp
xchg
(bad)
loopne
shr
add
pop
cli
and
ins
(bad)
outs
mov
sbb
cmp
sahf
xchg
xchg
fild
ds
mov
push
cmp
ins
and
loope
jecxz
cmp
iret
mov
test
dec
cmps
fidiv
mov
stos
xchg
imul
imul
push
add
shl
dec
push
and
mov
lahf
je
aam
cmps
cmp
or
lock
pop
rol
cmp
mov
push
adc
xor
push
mov
mov
cmps
mov
sub
mov
push
les
push
ds
xchg
jo
or
mov
movs
push
js
cmp
sub
rol
jle
jl
sub
jne
jmp
mov
pusha
jle
into
ror
xchg
push
jbe
push
retf
push
xor
xlat
xor
xchg
test
sub
jno
bound
ret
jo
and
add
sar
push
or
jae
les
test
push
mov
pop
push
and
cwde
or
xor
(bad)
jo
mov
lods
int
adc
imul
test
pop
outs
int
mov
cmps
arpl
sti
lods
mov
mov
xor
mov
outs
mov
stos
xchg
xlat
jg
inc
sub
mov
inc
xchg
mov
das
push
fistp
dec
ret
mov
scas
in
cli
(bad)
bound
inc
cli
das
xor
sub
pop
loope
inc
or
enter
xchg
stos
add
ss
fsubr
cdq
icebp
cmc
sbb
pop
and
in
or
mov
mov
shr
shr
repz
inc
cwde
xor
shl
sub
icebp
shl
std
push
adc
push
mov
jl
mov
repnz
je
mov
ds
hlt
pop
push
cwde
movs
or
call
aas
cmps
cmps
adc
pop
mov
mov
pop
ds
and
sbb
in
lods
xchg
pop
and
lods
xor
aaa
retf
sbb
push
test
pop
scas
cmp
sahf
clc
mov
inc
inc
mov
xor
ror
add
mov
ror
sub
sub
adc
push
push
push
lahf
fistp
push
jg
int3
pop
mov
inc
ins
sbb
xlat
cmc
stos
sbb
cmps
(bad)
sub
sub
mov
ins
pop
fdivr
fs
mov
dec
pop
adc
xor
(bad)
fidivr
cs
xor
push
mov
xchg
cdq
(bad)
mov
inc
jne
icebp
dec
(bad)
jae
mov
or
pop
push
jns
add
out
push
mov
aaa
test
jbe
fidiv
xchg
stos
xchg
add
out
inc
mov
jmp
imul
cmc
mov
lods
sub
sbb
or
inc
fisub
dec
mov
mov
adc
call
(bad)
xchg
idiv
fnstcw
and
cmp
mov
jp
mov
mov
push
jmp
cli
xor
pusha
lods
sub
jne
lods
(bad)
out
inc
sub
adc
lock
add
cld
shr
cmp
into
cmp
mov
sub
and
cdq
scas
cmps
(bad)
repnz
xor
mov
mov
or
sar
inc
or
adc
or
clc
in
sar
ins
dec
jmp
push
pusha
sub
ror
enter
mov
add
daa
sub
call
popf
movs
aam
pop
ja
lods
xchg
cs
les
movs
das
mov
daa
retf
imul
pop
(bad)
mov
cmp
aam
xchg
inc
push
je
mov
movs
(bad)
test
jns
and
xor
out
sbb
arpl
call
add
fcmove
test
sub
add
sti
add
xor
stos
push
adc
cmp
enter
mov
dec
mov
xchg
popf
pop
add
imul
sbb
dec
push
cld
jmp
add
setl
inc
xchg
cmp
ins
ror
sbb
adc
inc
jae
into
sbb
cmps
sbb
mov
mov
push
sub
xor
iret
push
test
fadd
(bad)
jbe
xor
pop
fimul
test
jns
rol
js
(bad)
cmp
aaa
dec
inc
or
lods
cs
mov
lds
adc
ja
mov
movs
pusha
call
cmp
and
pop
mov
mov
dec
and
jns
stos
and
mov
scas
pop
mov
in
fistp
and
adc
repz
or
daa
xor
lea
ret
jg
sahf
int
in
aas
mov
mov
add
hlt
(bad)
xchg
dec
add
xchg
scas
mov
adc
dec
mov
inc
rcl
mov
pop
mov
loop
xchg
inc
cmps
stos
dec
in
pop
or
mov
les
cmp
and
pusha
scas
mov
xchg
sbb
inc
or
aas
in
mov
push
call
xlat
dec
dec
or
arpl
jge
xor
pop
inc
add
repz
imul
cwde
add
ficomp
adc
mov
mov
add
mov
jmp
inc
sbb
cdq
call
lods
(bad)
rol
jp
das
inc
test
or
add
int
movs
adc
fwait
or
mov
push
lods
rol
(bad)
and
test
push
inc
pop
dec
jmp
in
dec
fadd
pop
pop
jmp
ss
push
lock
call
(bad)
jb
jne
inc
sub
sub
jecxz
jno
dec
sahf
mov
repz
sub
sbb
hlt
jae
dec
cmp
je
js
mov
adc
sub
mov
jns
inc
mov
leave
shl
retf
and
sub
mov
mov
cmp
rcl
(bad)
ficom
mov
(bad)
or
retf
pop
(bad)
mov
loopne
push
daa
sub
sbb
out
(bad)
add
cwde
in
xor
fnstsw
mov
pop
cmp
mov
or
inc
(bad)
sahf
mov
push
leave
(bad)
in
test
inc
or
ins
sbb
add
movs
adc
stos
cld
xor
sbb
jmp
scas
outs
into
enter
adc
icebp
and
jnp
out
and
fild
jno
je
retf
xchg
pop
dec
aas
cwde
movs
fisttp
or
push
std
pop
mov
mov
jo
xor
xchg
fiadd
xchg
nop
sti
jns
jmp
outs
shl
or
arpl
push
sahf
rcl
call
hlt
retf
push
mov
jae
mov
clc
jmp
mov
mov
xor
jecxz
xchg
cmps
jmp
adc
jmp
adc
movs
cmp
cld
sbb
bound
adc
mov
sbb
ret
aas
das
jne
test
or
push
push
push
fbld
mul
adc
mov
inc
pop
popa
pop
add
jl
xchg
cdq
ret
xlat
and
jbe
addr16
sbb
aam
fwait
and
enter
in
mov
jae
mov
or
(bad)
ror
adc
push
cmp
rol
xor
inc
sar
ficomp
fisttp
scas
cli
(bad)
(bad)
sbb
adc
mov
inc
les
cmp
cmps
sub
mov
bound
gs
into
push
mov
lahf
test
test
shl
cmp
mov
mov
fnstcw
xor
js
(bad)
ret
ret
mov
xor
adc
jae
mov
jle
push
aas
xchg
sub
mov
(bad)
mov
mov
leave
out
mov
call
call
cmp
jp
add
bound
sahf
test
lock
in
inc
call
sub
cli
dec
sbb
std
mov
mov
ins
ss
jb
cmps
or
lds
add
dec
stos
test
cmp
mov
out
mov
xor
jno
cmp
sub
int3
jmp
sahf
xchg
cmc
mov
and
out
xchg
jg
lods
cmp
arpl
mov
pop
xchg
stos
pusha
xchg
stc
out
fstp
es
lahf
sub
cmp
adc
and
or
mov
dec
ins
cmc
xchg
loopne
cmp
jmp
sbb
in
dec
mov
fmul
ret
or
imul
inc
es
in
jb
mov
pop
jae
xchg
push
(bad)
add
xchg
nop
mov
jmp
jl
cmp
cmp
fsubr
ins
dec
inc
outs
push
inc
push
xchg
pusha
mov
dec
xor
mov
ss
hlt
fiadd
(bad)
mov
xor
rcr
push
call
mov
mov
clc
cld
psllw
adc
fsubr
sar
or
push
iret
setbe
jns
push
repnz
ret
inc
xchg
ins
add
mov
test
pop
retf
dec
fimul
mov
mov
ss
(bad)
fs
dec
jmp
sti
fistp
jmp
add
pop
ds
xor
dec
inc
fist
shr
mov
xchg
(bad)
out
lods
imul
mov
lods
fwait
daa
std
mov
inc
dec
push
in
or
cmp
repnz
mov
(bad)
in
push
mul
sbb
iret
pop
and
int3
hlt
gs
pop
bound
inc
or
imul
mov
jg
and
sbb
(bad)
or
stos
dec
push
and
std
jge
lea
jle
test
add
leave
mov
arpl
into
cmps
call
jno
mov
pop
xor
ins
add
cld
sub
iret
xchg
mov
(bad)
mov
xchg
mov
loopne
in
loop
fidivr
fmul
push
iret
xor
cmp
inc
pop
sub
sub
repnz
(bad)
sti
imul
jb
scas
lds
jb
xchg
pop
pop
jae
mov
inc
ror
(bad)
mov
and
mov
jo
mov
mov
bound
das
sbb
jnp
aad
add
lock
cmp
jae
call
inc
mov
pop
in
or
add
xor
sub
push
into
jns
dec
int3
scas
add
sbb
pop
jno
cs
jge
fs
dec
sbb
imul
pop
xchg
add
pop
in
xchg
pop
pop
out
mov
push
stos
xchg
or
sbb
ret
je
pusha
push
bound
leave
dec
mov
inc
(bad)
fwait
into
shl
mov
es
mov
repz
loopne
pushw
sbb
lods
into
dec
sub
pop
pop
cmp
ret
cmp
inc
imul
xor
jmp
fnstenv
sti
outs
fs
push
mov
sub
icebp
jno
xchg
xor
ficom
inc
mov
jmp
add
(bad)
mov
sub
and
mov
push
push
pop
jg
add
pop
into
and
pusha
rol
clc
pop
add
cmps
cmp
test
sbb
xor
(bad)
test
lock
jnp
sub
dec
xchg
shl
xor
or
xchg
ja
test
jns
add
adc
mov
inc
inc
pop
xor
jle
adc
or
and
mov
movs
cmps
adc
cmp
and
jb
mov
or
jnp
mov
push
push
jnp
arpl
gs
aam
out
test
or
test
call
pushf
ss
adc
pop
lock
sbb
inc
lock
xor
aas
push
pop
xchg
ret
cmp
xchg
or
sahf
cmps
xchg
loopne
sbb
sbb
outs
(bad)
movs
pushf
(bad)
popa
cs
movs
and
dec
pop
outs
loop
xchg
addr16
pop
cmp
jno
ret
xor
imul
adc
pop
or
xchg
pushf
stc
ror
mov
sub
mov
pop
sahf
imul
pop
push
adc
sbb
ror
sub
fstp
nop
data16
mov
dec
pop
test
mov
adc
inc
adc
push
push
dec
or
out
cmp
dec
dec
das
or
pop
lahf
ja
dec
jno
sub
cmps
sbb
dec
mov
es
push
add
dec
and
ds
movs
and
ror
inc
mov
push
aaa
mov
or
cmc
fucomp
sub
lock
xchg
mov
ret
fsub
loope
add
mov
mov
sub
repz
xchg
pop
retf
cld
(bad)
mov
ds
mov
cli
test
test
dec
rcl
jb
jl
fisttp
cmpps
adc
das
in
ja
or
lea
stos
int3
pushf
shl
fild
inc
aas
dec
test
call
stos
cmp
push
inc
es
adc
sbb
mov
adc
outs
cdq
pop
test
pop
jbe
in
jge
dec
push
data16
and
ja
adc
jl
shl
stc
xchg
mov
push
sub
push
pop
xchg
ror
lds
ins
mov
xor
dec
cmp
cmp
jp
adc
(bad)
mov
and
popa
or
sbb
mul
pop
rcr
jecxz
adc
div
ss
push
test
mov
or
out
dec
mov
xor
call
mov
and
xchg
sub
and
mov
inc
fadd
xor
sub
add
jnp
ds
ins
das
jle
sub
and
push
or
xor
(bad)
sbb
jl
data16
jmp
lea
ficomp
clc
mov
and
les
fwait
or
mov
mov
dec
enter
ret
adc
push
cmp
dec
dec
or
je
(bad)
leave
push
je
fs
cmp
loopne
mov
jo
xor
sub
pop
lods
lahf
shl
repnz
ds
sub
imul
mov
cmp
jbe
cmp
lds
test
cwde
and
sbb
ret
adc
shl
mov
frstor
pushf
cmp
mov
push
loop
mov
cmp
inc
sahf
sub
shl
(bad)
cmps
pusha
gs
inc
mov
scas
jecxz
mov
jnp
clc
adc
scas
(bad)
mov
push
test
xchg
stos
pop
xchg
mov
mov
pop
push
or
test
jl
sub
cmc
xor
push
imul
jne
stc
sub
push
out
mov
(bad)
push
pop
xor
or
cs
fistp
in
test
in
push
dec
test
mov
fcmove
mov
cmc
or
fdivrp
shl
cmp
xor
dec
cs
idiv
xor
jle
stos
je
sbb
stos
es
ins
and
pop
stos
icebp
in
je
dec
ret
mov
movs
call
(bad)
jmp
pop
lock
sub
aam
push
dec
fidiv
enter
dec
test
xchg
cwde
std
stos
(bad)
dec
aad
popf
je
bound
mov
cdq
fisubr
add
(bad)
dec
mov
mov
push
mov
sub
sbb
pop
aas
aaa
adc
enter
std
mov
fwait
push
add
or
loope
movs
mov
push
jnp
ret
imul
cmp
and
jno
arpl
arpl
ins
sbb
xor
mov
push
aam
aad
xor
mov
es
xor
(bad)
sti
sbb
cmp
and
fmul
js
stos
cmps
ins
jge
mov
inc
sahf
jg
xor
ret
jnp
inc
jbe
xor
sbb
mov
in
mov
inc
and
shl
or
mov
add
test
adc
jle
pusha
ds
mov
push
scas
inc
cmp
sbb
pusha
mov
push
(bad)
and
jmp
pop
dec
cmp
push
cmp
jne
xor
scas
aad
jmp
jl
xchg
push
jae
pop
sbb
push
ficom
cmps
jae
push
movs
cmp
mov
add
mov
icebp
lds
fisttp
mov
mov
cmp
or
(bad)
test
xor
repnz
neg
ficomp
jl
dec
or
mov
push
push
cli
mov
mov
add
out
mov
pop
sub
dec
leave
xchg
int
pop
mov
retf
xor
xchg
mov
or
adc
pop
inc
sbb
out
(bad)
xor
bound
movs
push
sbb
push
fwait
push
les
xchg
dec
out
icebp
aas
enter
shl
jmp
into
in
retf
pop
cli
push
sub
leave
shl
inc
cmp
outs
push
punpckhdq
cmp
push
xor
cwde
mov
and
dec
ss
sbb
dec
jbe
rcr
retf
dec
sub
push
ret
nop
pop
dec
fsub
inc
push
fbld
into
(bad)
test
xor
or
push
jp
addr16
pop
call
xchg
leave
aas
or
loope
dec
adc
or
pop
sub
dec
clc
hlt
pop
mov
bound
push
and
add
xchg
jg
fdecstp
or
adc
mov
outs
popf
cmp
mov
sbb
lds
js
popa
ins
mov
cli
jl
retf
ds
or
lahf
popa
push
stc
mov
xor
or
inc
push
inc
adc
add
fisub
lods
es
mov
popf
enter
(bad)
shr
mov
aaa
(bad)
push
and
daa
scas
ss
jae
push
mov
pop
and
or
push
cwde
test
or
mov
jnp
xor
lea
les
mov
mov
sti
(bad)
shl
jae
stos
aaa
dec
or
cmp
ret
adc
push
ins
adc
into
shl
out
repnz
rcl
div
outs
cdq
scas
mov
(bad)
push
in
xlat
repnz
and
movs
daa
cld
cmps
jg
outs
xchg
sbb
xor
xchg
or
fld
and
sub
ret
sub
inc
dec
xchg
mov
in
or
mov
or
xchg
add
ja
ss
mov
(bad)
leave
push
mov
fadd
imul
and
int3
or
mov
jge
add
push
jl
pop
movs
pop
jo
pop
mov
call
in
xor
cmp
adc
cmps
into
pop
push
mov
dec
daa
adc
push
lahf
sub
jbe
jne
dec
mov
cld
mov
sahf
sub
mov
push
mov
fwait
pop
ins
mov
pushf
cmc
jmp
into
loopne
mov
outs
mov
(bad)
xlat
dec
dec
jp
scas
pop
mov
mov
mov
in
pop
xor
fsub
ja
jae
and
test
retf
mov
rol
mov
add
xchg
imul
aas
mov
idiv
icebp
lea
jmp
mov
add
lds
cmp
jle
jecxz
repz
shl
jbe
push
pop
cs
test
(bad)
(bad)
repz
repnz
clc
loope
into
cmp
stc
dec
out
ret
xchg
dec
stos
push
sub
mov
shl
scas
outs
cmp
pushf
add
and
push
rol
mov
imul
push
pop
sub
mov
sub
dec
mov
mov
add
hlt
je
adc
jne
push
mov
popf
enter
int3
pusha
ds
(bad)
dec
repz
pop
dec
mov
enter
out
icebp
ja
jae
adc
or
or
inc
xor
mov
fmul
mov
sub
jmp
dec
mov
test
mov
xor
push
lods
inc
push
mov
xchg
ret
and
jl
mov
xor
xor
mov
xor
cmp
fcomp
imul
adc
outs
adc
push
pop
cmp
out
pop
jmp
lods
pop
je
sub
ror
jno
jnp
in
add
jge
es
and
icebp
xchg
xchg
(bad)
xor
fnstenv
cmp
scas
mov
outs
jno
mov
or
xchg
icebp
mov
lods
cli
push
xchg
cwde
fdivrp
popf
(bad)
jmp
cmps
sub
ret
mov
push
movs
push
lahf
idiv
cmp
and
mov
adc
out
(bad)
push
pop
pushw
sub
dec
ret
iret
cli
dec
or
add
call
or
add
jmp
cld
shl
aas
push
xchg
shl
inc
es
push
movs
adc
push
add
fdiv
retf
lea
out
stos
push
test
outs
shr
sub
stos
mov
and
inc
movs
pop
(bad)
out
push
daa
or
fdiv
movs
jne
ffreep
pop
push
in
pop
mov
cmp
arpl
mov
or
in
int3
mov
sbb
rcl
jle
call
movs
xchg
ret
dec
sahf
dec
adc
mov
lea
sub
inc
cmp
fstp
scas
and
dec
add
add
fadd
add
retf
aaa
fwait
adc
mov
sub
add
idiv
xor
xchg
lods
push
sub
xlat
jmp
fidivr
movs
test
sbb
mov
idiv
push
popa
dec
rcl
cmp
adc
ja
xor
cmp
dec
aad
jno
test
or
popf
scas
pop
(bad)
imul
mov
inc
imul
cmp
pop
out
jae
mov
push
(bad)
dec
lea
(bad)
xor
int
ins
loop
mov
mov
xchg
lods
repz
sar
inc
push
dec
cdq
sub
mov
popf
or
jae
push
rcr
ret
fisubr
or
idiv
xor
dec
push
cmc
nop
mov
imul
out
into
push
inc
mov
xchg
scas
movs
lods
push
pop
fbld
inc
push
push
jp
xor
sub
int
test
mov
ins
js
mov
add
mov
mov
adc
sub
xchg
pop
es
pop
push
mov
pusha
mov
adc
mov
addr16
ins
outs
mov
test
sbb
hlt
push
dec
lods
ja
xor
(bad)
adc
mov
dec
add
iret
sub
(bad)
sti
sti
mov
sahf
jmp
leave
mov
cmp
scas
clc
cwde
aas
mov
dec
xor
mov
xor
pop
push
sar
mov
cmp
and
add
sbb
xchg
xchg
push
mov
rol
cmp
pop
mov
inc
test
or
test
rol
adc
mov
(bad)
das
retf
adc
sbb
push
pop
mov
mov
rol
test
sub
cmps
pop
stc
test
sbb
dec
cmp
jge
ins
mov
cmp
data16
scas
cmp
xor
push
addr16
lods
int
pop
sub
loop
mov
rcr
mov
pop
sbb
mov
mov
je
mov
pop
mov
fst
js
(bad)
int
xor
push
inc
push
inc
ja
xor
dec
adc
jl
test
jp
popf
loop
dec
xchg
out
in
lods
leave
fidiv
sub
(bad)
cli
inc
sbb
xchg
outs
and
rcr
out
movs
call
dec
loope
pop
xlat
lods
or
int
lahf
adc
or
pusha
and
or
inc
dec
mov
pop
(bad)
call
jno
dec
shl
push
sbb
cmp
adc
pop
sti
lds
test
std
or
loope
sub
lahf
mov
jg
into
push
jnp
out
jecxz
push
mov
loopne
inc
out
(bad)
cli
sub
jg
pop
or
out
adc
addr16
mov
int3
cmc
retf
imul
pop
inc
mov
and
pushf
lods
add
mov
dec
lods
inc
ss
nop
popa
(bad)
jmp
sti
dec
shl
jmp
dec
dec
ins
loope
or
or
shl
sub
adc
or
js
dec
mov
sbb
and
enter
les
lods
(bad)
lock
mov
xor
xchg
or
and
mov
xchg
mov
cld
fdivr
sbb
adc
stos
jle
int
sbb
sbb
mov
or
arpl
mov
in
sbb
shl
loop
mov
jmp
repz
sub
jno
xchg
inc
inc
fstp
push
mov
call
ret
in
sbb
mov
and
pop
dec
dec
push
addr16
in
sub
push
mov
movs
mov
cmps
hlt
sbb
rol
loop
(bad)
aas
mov
inc
test
sbb
les
sar
or
fcomp
push
mov
inc
xor
(bad)
push
ja
add
mov
(bad)
pop
cmp
repnz
call
dec
movs
pop
mov
mov
jmp
fsubr
fwait
test
addr16
enter
inc
stos
mov
and
push
push
inc
ins
sub
and
sub
mov
repz
aam
sbb
or
movs
mov
mov
or
cdq
inc
mov
std
das
lds
popa
sub
rol
dec
fisub
mov
mov
jb
xchg
push
xchg
lods
xchg
aaa
fcmovu
cmp
xor
stc
imul
fwait
aad
(bad)
and
call
jbe
les
popf
nop
pop
retf
mov
jp
cmps
cmp
mov
mov
cmp
lea
xor
out
add
ss
pop
ins
mov
adc
cmc
pop
or
and
arpl
fimul
and
retf
sub
(bad)
pop
dec
xchg
sub
and
(bad)
dec
jns
xlat
mov
ins
xlat
fld
add
in
call
jle
pop
cmp
pop
mov
and
mov
test
xchg
jns
mov
(bad)
xchg
and
push
movs
loope
push
inc
jmp
lods
pop
inc
(bad)
cmps
or
dec
push
movs
mov
ja
loope
test
enter
icebp
mov
sub
inc
xor
jo
je
mov
retf
fsubr
mov
mov
pop
int3
add
sub
loopne
jle
dec
push
jns
aaa
and
ret
leave
je
xchg
mov
jbe
hlt
sbb
jmp
fidivr
enter
sar
adc
movs
movs
adc
pop
enter
push
hlt
xchg
dec
mov
mov
rcr
and
pop
dec
push
test
fadd
into
int
jnp
xor
inc
pop
icebp
cdq
or
out
mov
ret
pop
fs
adc
inc
daa
inc
add
mov
push
popa
pop
lds
cs
sti
scas
hlt
mov
mov
add
ror
xor
cmp
pop
mov
cmp
fsubr
fstp
pop
push
sbb
dec
xor
ins
into
mul
xor
mov
test
push
xchg
nop
or
or
sub
mov
adc
xchg
adc
or
aad
stc
sahf
add
addr16
adc
mov
or
(bad)
and
adc
in
pop
xchg
xchg
pop
xchg
or
(bad)
jle
mov
pop
loop
daa
push
pop
scas
call
push
sub
stc
and
jmp
pushf
or
sar
or
push
hlt
pusha
jl
push
iret
push
retf
sbb
cmps
ret
cmp
lods
inc
xor
enter
pop
jecxz
sub
leave
js
adc
dec
loopne
dec
cld
fbld
aas
inc
in
stos
sbb
leave
cmp
fidivr
mov
sub
sub
ja
ror
adc
fdivr
ja
fmul
adc
mov
jo
scas
imul
ss
mov
sbb
inc
adc
shl
ins
js
ror
mov
div
bound
loop
xchg
ror
aas
sbb
push
sbb
lods
cmp
or
add
mov
in
push
movs
scas
jmp
jbe
jmp
das
cmp
leave
enter
(bad)
push
test
stc
pop
pop
mov
imul
push
add
push
adc
inc
sub
mov
adc
xchg
shl
jle
aad
fmul
mov
outs
push
fiadd
repz
add
adc
pop
stos
repz
int
aad
sub
ror
in
jns
add
mov
cmp
inc
jno
int
cs
jp
push
into
stc
pop
pop
xor
mov
(bad)
mov
test
pusha
xlat
and
imul
pop
jne
aaa
mov
sub
jmp
cmp
mov
inc
add
pop
xor
sub
fsub
cld
aas
rol
inc
es
jbe
xchg
inc
aam
xlat
dec
dec
adc
mov
mov
or
movs
popa
mov
cli
pusha
mov
or
sub
popf
retf
cmp
(bad)
ins
xchg
fsubr
sbb
cmp
jmp
lods
ins
cmp
aad
and
push
or
das
sub
imul
js
mov
sbb
stos
les
lods
popf
xchg
push
inc
jbe
and
fwait
mov
adc
jns
jo
rol
rcl
pop
push
fild
xchg
ret
movs
jp
icebp
dec
mov
sub
enter
outs
mov
sbb
dec
xor
(bad)
and
js
add
jns
fsub
cmp
cmp
std
push
hlt
or
xor
sti
in
push
mov
outs
and
sub
and
dec
cmp
add
push
push
mov
xlat
ins
xor
dec
push
mov
sti
es
adc
mov
inc
xchg
jecxz
xor
mov
dec
pushf
adc
mov
dec
dec
mov
js
sub
std
xlat
(bad)
sub
mov
fidiv
dec
out
movs
add
adc
dec
xor
jne
adc
jmp
sbb
nop
mov
inc
and
dec
cmp
mov
rcl
mov
dec
retf
jo
std
out
in
addr16
and
push
mov
in
fcmovb
push
adc
mov
xlat
dec
repz
inc
mov
push
shl
sub
iret
int
mov
fs
mov
hlt
cli
adc
loopne
fldcw
arpl
loop
inc
mov
aam
call
lahf
inc
push
adc
cmp
mov
data16
scas
or
mov
bound
arpl
cmp
and
and
(bad)
xor
sub
jmp
jnp
rol
idiv
scas
adc
jmp
iret
push
es
inc
and
cmp
xlat
mov
data16
jbe
pop
fcom
push
dec
mov
aad
cld
(bad)
setge
std
test
inc
out
lods
loopne
pop
nop
(bad)
loopne
clc
inc
ds
jmp
mov
inc
daa
mov
mov
pop
jmp
pop
imul
or
std
cmp
loopne
in
outs
mov
nop
and
and
rol
(bad)
push
retf
arpl
jp
test
xor
sar
xor
imul
ficomp
cmp
jb
sbb
dec
fist
dec
mov
inc
xor
xchg
pop
bound
pop
push
mov
xchg
push
xor
push
out
lods
sbb
or
sbb
add
out
daa
int3
mov
adc
shl
push
xor
leave
scas
inc
fstp
xchg
enter
mov
pop
adc
add
mov
pusha
stos
xchg
pusha
not
pop
sbb
or
cld
pop
push
ins
aaa
mov
xor
ficom
movs
add
daa
repnz
fs
ror
rsqrtps
scas
int
fisub
xor
inc
and
mov
xlat
shl
fld
push
lea
movs
jns
push
or
and
das
enter
in
xor
xor
ss
fbld
daa
xlat
in
arpl
pusha
pop
in
jmp
cmp
ss
xchg
clc
repz
push
mov
jg
popa
aad
push
lods
sbb
push
lea
cmps
push
sar
sub
add
and
cmps
sbb
dec
push
cmc
sub
xchg
loope
add
cmp
fmul
sbb
aad
jae
jne
je
outs
mov
cmp
lock
scas
jmp
cdq
(bad)
fist
ins
in
cmp
(bad)
test
div
push
cmp
add
xchg
sti
or
push
mov
sbb
lods
fldcw
and
push
cld
out
jmp
push
iret
mov
aas
sbb
add
sub
out
cmps
jns
call
xchg
or
push
iret
stc
ss
push
retf
push
(bad)
frstor
push
xchg
(bad)
(bad)
push
les
shr
xchg
mov
rcl
mov
mov
mov
ja
fdivr
ret
mov
and
cmp
fst
push
popa
cdq
and
or
pop
xor
aaa
mov
pop
iret
jne
and
or
lds
(bad)
cmp
mov
aad
jmp
and
inc
sti
fisubr
ds
ret
mov
aad
xlat
imul
xchg
pop
jne
loope
xor
pop
shr
cmp
mov
sbb
ror
pop
fwait
loope
in
mov
inc
push
xor
add
adc
scas
mov
sub
(bad)
aad
jbe
mov
jb
xchg
call
mov
pop
jge
or
mov
in
gs
mov
adc
and
call
sub
loop
daa
adc
xor
ror
jo
cmp
in
loopne
add
xor
das
pop
retf
xchg
cmp
adc
pop
cmp
cmp
jge
in
mov
pop
xor
in
xchg
cmp
pop
xchg
cmps
cwde
mov
in
repz
mov
mov
and
fcomip
sub
fist
jecxz
jge
loope
xchg
neg
mov
loopne
es
mul
aaa
mov
and
and
push
push
pushf
pusha
push
mov
xor
mov
(bad)
movs
lock
div
jbe
int
push
rol
adc
dec
dec
cwde
loope
rol
(bad)
(bad)
test
lock
ficom
sbb
jnp
adc
cmp
test
(bad)
xor
cmp
push
mov
leave
aas
jno
mov
lods
jno
call
push
push
(bad)
jmp
mov
mov
mov
sub
sub
push
jmp
fst
sub
pop
faddp
sbb
stos
jl
aas
mov
mov
cmp
mov
and
(bad)
push
push
push
xlat
pop
xor
lea
icebp
(bad)
or
jl
call
adc
ror
push
or
dec
pop
jno
ins
ror
test
mov
push
(bad)
stc
repnz
push
mov
test
arpl
leave
sbb
pop
hlt
mov
or
stos
cmp
mov
and
in
adc
aaa
movs
ror
hlt
push
cmp
pop
sub
jns
mov
sub
ds
es
mov
cdq
lods
pop
inc
stos
sbb
xchg
addr16
mov
ret
add
punpckhdq
dec
mov
dec
ror
in
inc
fdivr
scas
call
mov
push
and
mov
sbb
out
retf
push
adc
sbb
mov
and
lds
xchg
xor
sub
xchg
imul
add
cmp
stos
scas
ss
pop
xchg
cwde
lea
jle
and
xor
mov
sbb
pop
int
push
push
xor
rcr
mov
and
sbb
pop
mov
mov
nop
bound
fldenv
test
retf
sub
xchg
inc
sbb
dec
enter
cld
add
sub
inc
stc
addr16
in
pop
xor
enter
aad
scas
add
add
or
ins
dec
adc
cs
imul
fs
adc
jbe
sbb
xchg
sub
sub
std
ret
dec
popa
pop
(bad)
fsub
pusha
add
movs
pop
jmp
lock
aad
pushf
shr
leave
mov
or
mov
jnp
and
and
jne
js
(bad)
stc
aam
jecxz
(bad)
cdq
stos
push
pop
loope
mov
inc
push
data16
and
adc
idiv
xor
xchg
cmp
mov
sbb
lods
or
adc
rcr
and
cmp
test
cmps
jbe
mov
mov
jno
dec
sbb
inc
in
pop
test
jbe
aad
mov
push
cmp
add
int
dec
pop
xor
test
push
outs
inc
outs
dec
leave
and
retf
push
mov
dec
in
mov
and
aas
adc
imul
movs
icebp
rcl
(bad)
mov
inc
test
das
sub
ss
push
inc
add
jg
cld
mul
sti
or
test
mov
les
mov
jb
or
xor
or
sbb
jae
stc
not
cmp
sub
cmp
adc
jmp
movs
adc
add
xor
mov
fsubr
ret
push
es
cmp
mov
mov
mov
iret
aas
(bad)
scas
jl
sbb
pusha
fcom
sbb
aam
cmp
xor
lods
sbb
repnz
out
xchg
push
xor
stos
das
xchg
adc
cmps
mov
sbb
jle
xor
jb
xchg
leave
cmp
je
sub
xchg
icebp
arpl
sub
push
(bad)
push
retf
cmp
xor
ficom
mov
and
push
cmps
and
daa
jbe
rol
nop
jo
ja
pop
mov
mov
mov
push
push
mov
mov
mov
jecxz
(bad)
neg
sti
jo
inc
and
ins
jecxz
mov
nop
inc
jae
push
dec
xchg
out
cwde
out
fsub
mov
add
sahf
pop
or
push
push
push
push
pusha
clc
out
ja
mov
or
dec
jle
mov
rep
xchg
pop
add
pop
in
popf
out
mov
pusha
clc
std
mov
pop
rol
cmps
xor
pusha
xor
push
lock
mov
mov
(bad)
and
retf
sub
xor
xor
(bad)
xor
adc
ret
pop
daa
jo
bound
call
mov
xchg
mov
push
(bad)
imul
popf
mov
mov
push
mov
(bad)
sbb
fcmovnbe
pop
dec
inc
adc
sar
cmpps
sbb
ret
inc
lea
add
mov
xchg
rcl
jecxz
clc
inc
das
rol
inc
cmp
movs
xor
and
repz
bound
(bad)
fwait
call
cmp
mov
pop
adc
mov
fcomp
cmp
dec
mov
jne
mov
inc
add
out
jae
mov
inc
sbb
fld1
push
aam
and
loope
and
aaa
mov
push
cmps
xor
mov
push
ja
fs
aas
adc
cdq
or
and
aas
es
jo
xchg
shr
popa
sub
(bad)
dec
out
not
cmp
shl
mov
fnstenv
jae
xchg
or
lea
xor
aad
repnz
inc
jo
pop
test
jle
neg
mov
fld
or
cs
add
ficomp
or
cmc
mov
mov
adc
add
and
sub
icebp
push
imul
aam
jl
or
fs
add
mov
scas
push
call
cmp
mov
jecxz
sbb
push
jecxz
out
push
sub
stos
leave
fdivr
cmp
scas
out
add
in
popf
les
gs
cmps
ins
test
add
jo
mov
cwde
test
and
sub
pop
les
and
(bad)
jmp
add
cld
xor
aaa
ficom
repz
ins
cmp
add
inc
pushf
inc
imul
lods
sbb
jge
out
cmps
xchg
pop
lods
inc
add
jno
ds
shr
sbb
push
xor
scas
cdq
shr
pop
adc
inc
adc
cmp
(bad)
cmp
test
push
jne
pop
or
push
pop
ins
inc
xor
ds
fadd
or
enter
cld
rcr
ins
mov
sub
outs
push
in
pop
or
addr16
in
push
xor
sbb
(bad)
mov
retf
xor
repz
fild
rcl
push
div
out
pop
mov
xchg
in
cmova
sbb
loope
mov
outs
inc
cmp
mov
ss
inc
jg
lds
xchg
mov
dec
rcl
inc
pop
in
inc
fwait
sti
push
inc
inc
scas
aad
add
enter
cmp
inc
push
xchg
mov
out
in
inc
dec
in
jmp
cmovle
sub
shr
arpl
in
cs
sbb
push
sub
pop
pop
cmp
add
inc
sbb
jle
aam
shr
jmp
push
sbb
es
xchg
test
(bad)
push
or
xchg
(bad)
test
repz
dec
push
jle
xlat
xchg
shl
xor
sub
int
sbb
dec
aad
xchg
or
js
loop
imul
movs
adc
push
dec
add
pop
jae
in
pop
cmp
adc
cwde
push
mov
cmps
inc
dec
sbb
inc
out
js
or
xchg
mov
stos
out
dec
mov
sub
pop
dec
out
hlt
fldenv
xor
shl
cmp
mov
dec
jmp
cmp
out
sub
sbb
mov
call
pop
add
(bad)
pop
dec
dec
cmc
push
jmp
push
xor
xor
imul
sub
dec
and
mov
mov
mov
xchg
pushf
lods
mov
pop
(bad)
sbb
dec
mov
sub
call
and
jle
xlat
push
ins
jnp
xchg
push
ins
in
sub
add
ffree
addr16
pushf
xor
les
or
ffree
leave
xor
sbb
cmps
cmp
mov
and
shl
mov
mov
jecxz
test
dec
sub
add
lds
into
xchg
dec
ror
or
les
jns
push
cdq
sbb
pop
mov
sti
call
fild
cmp
adc
push
in
lock
fdivr
and
adc
jmp
(bad)
inc
inc
jns
mov
adc
pop
aaa
xchg
jg
lea
and
shl
ins
std
sbb
nop
cwde
dec
fist
xor
inc
mov
arpl
loopne
mov
pop
mov
fmul
movs
pop
rcr
(bad)
nop
and
mov
jle
push
mov
mov
test
or
cmp
mov
pop
mov
add
mov
sub
ins
adc
xchg
mov
mov
dec
jecxz
ret
jno
div
inc
fild
or
and
mov
inc
add
test
sbb
dec
jecxz
jp
std
scas
das
cmps
(bad)
or
lahf
sbb
hlt
es
sub
outs
inc
sar
or
movs
mov
mov
mov
mov
add
mov
iret
and
std
(bad)
sbb
inc
std
in
sub
lods
imul
adc
inc
or
ins
je
retf
mov
jl
mov
jne
xchg
inc
stos
cmp
inc
push
add
out
(bad)
jno
scas
mov
jmp
fbstp
sbb
jbe
mov
xlat
retf
xor
sar
fwait
mov
pop
sbb
jle
ror
mov
dec
or
xchg
dec
(bad)
jnp
or
cmp
sbb
xchg
in
jnp
cmc
dec
loope
(bad)
xlat
push
add
pop
mov
pop
mov
fistp
(bad)
es
jg
cvtps2pd
imul
movs
jg
nop
jbe
jno
pusha
leave
pop
jo
ja
sub
ret
jp
adc
jns
test
adc
mov
mov
lea
leave
test
push
out
inc
adc
rcr
call
stos
shl
sbb
push
inc
fstp
fld
mov
pop
(bad)
cmc
sbb
mov
sbb
mov
push
cdq
(bad)
cmp
bound
xor
aam
xchg
clc
adc
inc
arpl
lahf
fidiv
cmps
push
push
es
(bad)
jp
std
adc
cs
sbb
mov
xchg
ret
fisubr
push
mov
scas
sub
cdq
mov
and
add
sub
or
repz
shl
iret
cmps
xchg
jg
sub
add
and
outs
add
jbe
sub
mov
sub
add
dec
in
mov
pop
jg
pop
push
jp
jns
mov
pusha
jl
cmp
inc
cmp
sti
sti
mov
xchg
inc
dec
ficom
or
retf
aaa
push
in
jno
xchg
stos
int3
mov
fiadd
xchg
add
push
pushf
rcr
stos
dec
lods
js
push
lds
call
std
add
ret
mov
pop
push
int
(bad)
enter
jae
push
icebp
js
dec
js
mov
and
dec
jmp
(bad)
loope
fiadd
mov
mov
ins
rcl
or
hlt
mov
push
sub
mov
dec
dec
cmps
inc
jmp
fsubr
or
jne
sbb
push
add
mov
mov
add
push
out
cmp
mov
fild
outs
dec
mov
ins
mov
ror
mov
mov
les
jle
aam
inc
int3
xchg
mov
add
movs
pop
jg
lea
repz
pop
mov
and
scas
pop
imul
addr16
scas
mov
pop
fwait
push
sbb
retf
in
xor
jne
pop
mov
jnp
popf
xor
mov
dec
mov
rcr
stc
push
sahf
add
inc
xchg
rol
iret
in
popf
div
fst
fild
adc
push
ret
fld
or
test
mov
xor
cwde
sub
xchg
sub
enter
mov
ss
sbb
xchg
lahf
sbb
dec
jno
ret
mov
and
fadd
sub
cdq
or
ins
sub
add
retf
sub
push
rcl
arpl
pop
(bad)
mov
test
ret
push
pop
dec
stos
jb
xchg
sbb
pusha
push
sub
push
aas
fcom
ins
inc
(bad)
call
mov
pop
xor
adc
dec
loopne
push
cmp
enter
sahf
shl
data16
sbb
or
xchg
mov
sbb
cs
push
xor
(bad)
rcr
imul
ins
push
or
sub
lahf
test
test
mov
iret
mov
mov
sub
add
mov
or
leave
sti
adc
(bad)
imul
jno
and
xchg
push
jb
xlat
repz
enter
dec
adc
fild
xchg
add
add
loope
and
jns
int3
outs
jmp
push
add
aam
pop
shl
sub
and
lods
ds
pop
mov
cmp
rcr
es
jle
cmp
mov
ja
not
repnz
adc
jg
fs
mov
push
or
xchg
adc
xor
sar
mov
sahf
xchg
das
adc
xchg
mov
cmp
xor
mov
fnstcw
rcr
in
aaa
jnp
nop
test
lock
jne
adc
fisub
bound
push
out
xchg
push
out
xor
and
popf
pop
loopne
push
dec
(bad)
test
xchg
fst
xchg
stc
push
cmp
test
sbb
add
push
scas
dec
retf
pop
fwait
or
lock
test
mov
xor
movs
sbb
cld
lock
pop
pop
call
loope
mov
cmps
pop
fsub
push
push
mov
movq
movs
sub
or
push
pop
xor
(bad)
in
ret
mov
pop
mov
inc
and
pushf
push
outs
fcomp
add
sbb
dec
fsubr
mov
push
in
xchg
sbb
inc
das
cmp
scas
inc
ret
aam
and
mov
add
data16
lods
push
dec
jne
pusha
inc
cmp
and
fs
add
cmp
shl
and
pop
inc
mov
cmp
mov
sub
in
pop
in
icebp
pop
gs
pop
jns
loope
sbb
call
sahf
cmps
or
es
inc
lahf
aad
add
add
or
push
fdivrp
or
movs
fcmovnu
pop
cmc
xor
jl
movs
aad
mov
cmp
sbb
scas
outs
rcr
or
mov
loop
mov
ficom
pop
fst
fidiv
hlt
push
test
sub
call
fisub
cmp
cmps
xlat
jp
scas
inc
stos
sti
inc
(bad)
mul
repnz
inc
shr
dec
mov
fwait
push
cmp
cmp
rcr
dec
push
ja
cmp
mov
mul
xchg
movs
mov
and
dec
dec
push
(bad)
fsub
stc
sbb
lods
in
push
cmp
add
jnp
xchg
jge
mov
or
add
idiv
and
movs
jg
mov
call
aas
lahf
lods
shr
mov
sbb
or
or
inc
popf
sbb
fadd
mov
add
data16
cld
sti
(bad)
cld
(bad)
mov
adc
mov
fist
mov
js
js
inc
or
push
out
inc
lock
sbb
inc
mov
and
jae
xchg
mov
sub
fisub
push
pop
sbb
pop
into
fdiv
sbb
icebp
cli
inc
pop
mov
lods
ss
push
inc
movs
and
pop
sti
jl
pop
jge
cs
ins
rcl
sbb
bound
xchg
jno
outs
xor
pop
iret
jle
fisttp
jmp
in
xor
js
cmp
cmp
adc
xor
mov
idiv
fisubr
test
mov
dec
cmp
call
xchg
dec
or
xor
xchg
test
xchg
in
sub
(bad)
in
js
push
call
and
sbb
addr16
test
push
adc
loopne
out
mov
inc
inc
cmp
jb
cmp
xor
das
and
sbb
stos
push
and
mov
inc
sub
adc
(bad)
pop
mov
in
lds
jbe
ret
pop
dec
lods
mov
mov
mov
and
xchg
sbb
aad
jae
adc
and
push
and
xchg
lea
inc
imul
imul
(bad)
dec
cmc
add
je
test
nop
fidiv
mov
or
js
out
or
pop
push
out
mov
jno
ret
outs
test
jge
xchg
jmp
mov
fbld
cmp
loopne
stos
inc
cmp
lds
je
dec
stc
jecxz
das
in
(bad)
pop
sub
(bad)
loope
adc
pop
popf
xor
outs
push
push
add
push
icebp
(bad)
enter
mov
and
and
mov
inc
lods
adc
push
xlat
pop
ins
sbb
jl
xchg
das
add
loop
push
pop
gs
test
inc
jecxz
adc
cmp
and
cmps
sub
gs
cli
inc
(bad)
aam
(bad)
add
lock
das
data16
popf
mov
shr
add
xor
(bad)
and
rcl
adc
dec
jl
xchg
add
pushf
xor
push
call
pop
cmps
lahf
xchg
push
inc
aas
enter
sbb
mov
fnstsw
loopne
retf
inc
sbb
imul
loopne
adc
mov
repz
(bad)
push
add
cmp
sbb
jo
jns
dec
pop
and
jl
stos
cmp
pop
mov
mov
adc
clc
test
sti
inc
inc
cmp
iret
neg
jnp
fwait
(bad)
mov
push
clc
and
dec
shl
outs
xor
imul
jle
addr16
dec
int
(bad)
ret
sub
fild
mov
jle
and
cs
jmp
pop
aas
leave
popf
dec
pop
xor
rol
pop
dec
mov
and
inc
dec
lea
cmps
mov
jmp
mov
ja
fimul
fisubr
fnstcw
jns
push
dec
jns
and
adc
mov
sar
cmc
mov
out
shr
mov
fwait
cld
ret
stc
fisttp
mov
js
add
xchg
jne
outs
aad
lods
fcomp
push
sub
sbb
mov
xchg
imul
xchg
scas
fmul
ret
adc
clc
dec
inc
xor
imul
movzx
jnp
add
add
hlt
push
add
xchg
adc
xchg
xchg
inc
cmps
cmp
mov
rcl
das
(bad)
(bad)
dec
mov
add
sbb
and
cmps
adc
in
and
add
add
sub
jae
pop
push
push
push
test
ret
cli
das
dec
push
ret
test
push
adc
lea
hlt
leave
ret
xchg
jb
daa
das
adc
sub
cwde
or
hlt
xchg
fidivr
push
inc
adc
adc
cmp
mov
rcl
mov
inc
pop
pop
(bad)
pop
lods
fidivr
jnp
xlat
adc
xchg
mov
stos
jp
in
mov
leave
ds
pop
pushf
inc
mov
sti
dec
sub
mov
stos
retf
pop
pop
or
xor
arpl
cmps
dec
xor
dec
jg
or
mov
and
(bad)
and
aam
push
jae
jns
idiv
jns
xchg
pop
popa
dec
xchg
in
lods
xor
in
jge
and
or
xchg
cmp
pop
push
dec
iret
hlt
sbb
jb
dec
enter
pusha
and
loope
cmp
xor
adc
dec
lds
pop
les
leave
pusha
jbe
lods
loope
xchg
lods
dec
into
cmp
mov
or
bound
daa
test
xchg
xor
mov
int3
aas
dec
rcl
lds
mov
in
inc
and
mov
jl
xchg
stos
cmps
popa
and
leave
pop
sbb
push
cmps
lahf
or
pmulhw
pusha
jb
adc
push
cmp
mov
mov
(bad)
data16
push
ss
sbb
imul
shr
mov
inc
mov
(bad)
call
mov
in
pop
mov
add
jne
push
outs
mov
dec
sar
jb
cwde
pop
test
shl
xchg
jnp
mov
mov
xor
or
mov
push
xchg
push
out
dec
mov
imul
retf
cmp
repz
mov
cmps
cmp
jae
mov
int
outs
std
retf
aaa
push
ins
enter
leave
sub
mov
jp
test
fistp
xchg
icebp
out
dec
fild
fsub
sbb
xchg
pop
mov
cwde
push
js
adc
call
mov
mov
jp
rol
xor
stc
test
or
fld
push
leave
jl
adc
cmp
and
inc
fwait
xchg
jae
add
mov
outs
xchg
cmp
fstp
mov
(bad)
gs
mov
inc
scas
push
pop
(bad)
push
and
sub
xor
add
cli
cmp
mov
das
(bad)
mov
in
int3
jb
test
daa
mov
jo
push
and
mov
pop
mov
xor
push
stc
push
arpl
pop
dec
jmp
test
push
dec
sbb
fist
scas
lds
push
lods
int
scas
dec
xchg
cdq
and
aas
and
adc
push
das
sahf
pop
movs
or
pop
(bad)
popf
push
adc
add
push
lds
out
add
jb
pop
jne
retf
pop
scas
mov
and
rcl
enter
icebp
test
mov
pusha
stos
in
repnz
sbb
push
xchg
loop
push
clc
pop
cmps
fdivr
jp
adc
scas
imul
jo
daa
jmp
out
imul
jmp
jae
push
pop
sub
or
call
test
and
das
leave
mul
in
cmp
into
(bad)
mov
cmp
jg
jae
dec
push
or
popf
call
dec
or
and
std
inc
imul
ins
mov
clc
push
and
xchg
jb
scas
ror
fldcw
pop
out
aad
fist
add
sbb
cmp
mov
pop
addr16
outs
fdivr
(bad)
push
les
fnstcw
pop
call
inc
or
xlat
cmp
loope
iret
or
jbe
xor
repnz
cmps
js
(bad)
jle
xor
lods
dec
or
cmp
mov
mov
in
loope
ins
popf
push
xchg
xchg
adc
or
stos
lea
inc
jl
mov
retf
in
outs
dec
or
adc
test
nop
das
or
adc
push
mov
mov
adc
and
push
pop
cmc
out
xchg
xchg
repnz
jne
imul
movs
loopne
and
mov
adc
jnp
daa
in
loopne
adc
or
(bad)
aaa
out
inc
jmp
jno
(bad)
jnp
pop
hlt
loopne
xchg
xchg
xchg
jmp
push
mov
out
xor
jns
adc
jb
dec
sti
xchg
push
mov
xor
jle
or
push
or
jp
inc
mov
ss
or
push
xor
stc
fld
out
loopne
xor
xchg
xchg
pop
jle
cmps
scas
mov
xchg
int3
ins
xor
dec
mov
int3
fs
mov
leave
mov
sub
cmp
les
xor
test
jae
pop
jns
push
ret
scas
mov
popa
dec
or
sub
inc
add
rol
mov
sub
scas
jbe
ds
mov
inc
push
mov
adc
jmp
fsubr
inc
mov
(bad)
es
xor
mov
test
pusha
mov
aam
loopne
repnz
out
and
jmp
adc
aaa
rcr
imul
pop
cmc
mov
cmp
sbb
adc
pop
jmp
jmp
cmps
sbb
xlat
jb
pop
jnp
push
test
cdq
push
arpl
mov
or
mov
cwde
sub
out
cmp
xlat
rol
mov
call
lods
stos
fidivr
lods
sahf
mov
xchg
jecxz
neg
push
mov
shr
and
inc
add
or
out
cmps
push
cmp
js
mov
sub
mov
scas
and
fcmovnbe
add
js
retf
in
xchg
xor
div
dec
scas
(bad)
out
arpl
call
and
repz
mov
inc
cwde
repnz
repnz
es
cmc
mov
push
out
jge
mov
xchg
nop
loopne
add
push
pop
push
mov
loope
outs
xlat
stos
(bad)
sbb
mov
aam
repnz
movs
ret
nop
sub
xchg
mov
call
sbb
or
mov
push
jecxz
add
hlt
or
push
xor
js
mov
xor
test
clc
add
lock
and
add
(bad)
call
dec
fwait
push
pop
rol
inc
push
cmp
push
stos
jmp
call
daa
xchg
push
mov
(bad)
cli
mov
je
sar
jne
shr
xchg
dec
hlt
fmul
push
cmp
and
push
add
test
repz
adc
ret
add
rol
jge
jo
add
pusha
xor
popa
jbe
aaa
dec
popa
in
mov
je
pushf
jg
sbb
test
mov
jnp
mov
xchg
and
movs
scas
retf
pop
adc
out
push
push
out
lea
jno
mov
mov
and
in
mov
add
jg
xlat
jge
jmp
shr
(bad)
mov
mov
sub
jg
bound
call
sar
sub
fcomp
pop
ficomp
imul
(bad)
call
das
inc
pop
out
je
jns
cmp
mov
mov
adc
add
and
(bad)
lods
cli
idiv
test
jns
cld
mov
mov
or
aam
movs
cmps
pop
ja
test
(bad)
pop
jne
xor
jl
test
loope
aaa
ror
sub
xchg
jmp
loopne
xor
sub
push
mov
jle
pop
and
stos
pop
sbb
add
dec
call
rol
cwde
call
or
cmp
sub
xor
push
xor
repnz
mov
movs
adc
mov
inc
dec
mov
sub
stos
adc
and
jbe
lock
pop
mov
adc
lea
retf
iret
outs
outs
cmp
inc
nop
mov
test
mov
rol
pop
push
jle
jmp
sahf
xchg
adc
and
in
sbb
cld
retf
sub
inc
push
stos
mov
pop
xchg
cdq
scas
mov
adc
das
jmp
adc
shr
mov
movaps
sbb
mov
or
jae
(bad)
in
movs
mov
dec
adc
ror
cs
pop
stos
adc
ret
pop
ret
cld
cmp
push
or
pop
xchg
in
jno
test
inc
and
xchg
mov
and
icebp
arpl
cmps
fidiv
bound
idiv
jl
lds
mov
add
add
push
lahf
add
jecxz
jbe
sub
lods
push
icebp
adc
sub
mov
dec
inc
xor
xchg
xor
jp
cmp
leave
mov
mov
scas
loope
push
popf
out
add
or
mov
jmp
sbb
retf
push
sub
add
cmp
ror
push
fcom
adc
xor
add
cmp
xchg
out
lods
pop
and
xor
pop
mov
gs
outs
cmps
adc
jns
rcr
addr16
push
fsub
pop
(bad)
out
cwde
hlt
push
xchg
int3
stos
adc
inc
inc
pcmpgtw
push
not
pop
xchg
iret
in
mov
jg
cmp
inc
arpl
mov
jns
sahf
adc
int3
or
fist
loopne
push
mov
inc
ins
in
xor
xchg
retf
mov
push
push
dec
call
das
fsubr
and
pusha
jecxz
mov
std
inc
pop
push
xor
mov
dec
or
mov
mov
popf
out
xchg
or
push
pop
sbb
pop
popf
and
pop
and
push
jnp
jg
ror
adc
(bad)
outs
jecxz
pop
pusha
js
and
(bad)
addr16
scas
sub
sbb
mov
hlt
fcmovnu
fist
pop
add
cmp
dec
dec
out
push
mov
cmps
dec
lock
scas
push
cmp
lock
fisubr
mov
ds
sub
add
pop
xchg
push
sbb
push
xchg
imul
xchg
and
dec
rcr
shl
push
pop
icebp
sub
push
sbb
push
pop
ret
arpl
sbb
fcmovnb
pop
fild
push
mov
out
loope
pop
inc
ficomp
popf
or
lds
loope
inc
add
xchg
dec
movs
sar
or
ins
scas
mov
scas
and
test
mov
xchg
jg
sub
or
mov
sub
xchg
jo
mov
mov
stc
xchg
cmc
les
out
scas
dec
retf
ror
das
jmp
mov
xchg
mov
and
cmps
xchg
pop
mov
cmp
in
fwait
ins
push
cli
jmp
jecxz
(bad)
and
lock
iret
imul
jg
jbe
xchg
inc
xchg
push
je
scas
jmp
cs
and
push
add
jbe
jg
and
call
sbb
add
inc
pusha
movs
fs
xor
movs
cmps
adc
xchg
mov
adc
mov
mov
pop
movs
(bad)
push
nop
leave
cwde
mov
xor
sub
jo
ins
and
mov
xlat
xchg
add
mov
add
inc
push
add
or
in
or
out
cmps
repnz
push
scas
xor
or
call
arpl
pop
arpl
push
sub
fild
xchg
retf
sbb
sbb
(bad)
xor
add
rol
mov
inc
fistp
jg
adc
mov
daa
cmp
ret
push
add
arpl
into
das
push
leave
cmp
xor
xor
cmp
das
in
pop
in
dec
jmp
sub
aaa
imul
lea
aad
mov
aaa
jg
mov
icebp
test
(bad)
adc
xor
pop
dec
mov
in
sbb
inc
adc
sub
xlat
fsubr
imul
aam
test
and
xlat
aad
ret
pop
and
cmps
dec
sahf
ret
fild
sbb
jno
jae
jmp
adc
rcl
rcl
jne
imul
shl
inc
adc
ficom
and
push
pminsw
inc
lods
and
cmp
push
sbb
jae
mov
add
mov
das
pop
jnp
fwait
mov
retf
repz
test
aaa
add
add
outs
leave
(bad)
loope
jecxz
sub
movs
inc
add
or
cmp
movs
and
jg
in
push
fisttp
test
xor
jle
sbb
enter
fcomp
sbb
cmp
and
lahf
push
push
pop
or
ins
cdq
sbb
out
lock
mov
(bad)
std
add
in
lods
stc
push
sub
mov
add
dec
lods
cmp
jns
pushf
jge
and
and
dec
js
dec
adc
mov
mov
jnp
cwde
cmp
mov
enter
and
es
(bad)
jbe
adc
inc
add
push
mov
mov
cld
dec
pushf
add
cmp
rcl
test
fist
add
fnsave
jmp
lock
and
clc
xor
ficomp
fistp
jno
mov
cmp
leave
cmp
xor
movs
add
or
repz
jecxz
adc
into
jbe
movs
pop
sub
push
fidivr
cmps
outs
pop
mov
and
cmp
lds
push
je
push
stos
inc
outs
(bad)
scas
mov
pop
adc
inc
daa
fbstp
mov
and
jl
outs
imul
int3
clc
test
mov
mov
xchg
push
mov
sub
xchg
push
cmps
(bad)
jp
std
sub
mov
jl
or
psubsw
rcr
sti
cs
and
cwde
out
aam
fsubr
mov
inc
int3
and
add
out
adc
arpl
out
daa
mov
dec
shr
repz
fisttp
pop
add
cmp
dec
dec
dec
in
mov
ror
pop
jo
push
and
imul
xchg
push
pop
xor
test
mov
enter
mov
retf
add
xor
adc
(bad)
xchg
sbb
cmp
fild
xchg
fwait
sbb
out
cmp
movs
sbb
xchg
sub
leave
push
lea
popf
pusha
xor
jp
dec
push
aad
daa
cmp
and
stc
nop
xor
(bad)
xchg
add
adc
jmp
sbb
lahf
nop
iret
add
pop
jmp
fisub
sbb
pop
cs
push
pop
in
pushf
adc
cmp
push
fnop
call
inc
mov
out
cmps
lahf
movs
popa
xor
and
test
call
dec
or
jns
pushf
fs
outs
loope
data16
jne
mov
imul
jb
shl
or
add
outs
iret
in
and
enter
mov
inc
pop
dec
push
sbb
dec
imul
imul
adc
add
in
pusha
inc
push
repnz
ror
ins
or
cli
cli
jno
add
and
mov
mov
jl
loopne
inc
push
shl
xchg
pop
popa
pop
add
fs
push
push
ja
adc
mov
push
aam
mov
rol
xchg
fmul
or
push
cmc
movs
fstp
xor
call
movs
xchg
pop
shl
inc
pop
adc
add
push
ret
xor
pushf
nop
push
ins
adc
mul
mov
rep
fstp
pop
cs
inc
std
fs
in
sbb
fcom
fnstsw
xchg
mov
push
ss
int
sar
scas
jmp
call
cmp
ds
cmp
adc
cmp
inc
ror
pop
xchg
int3
enter
dec
cmps
(bad)
arpl
xchg
add
dec
pop
add
pop
cmps
pop
(bad)
leave
jle
and
push
shl
mov
movs
pop
pop
push
in
cmp
retf
pushf
xor
xor
sti
adc
mov
in
push
repz
and
xor
mov
imul
jbe
(bad)
jmp
test
cmc
ss
adc
in
imul
jne
ins
imul
fnstsw
test
in
adc
neg
loop
mov
or
mov
mov
mov
dec
(bad)
push
fst
pop
retf
(bad)
loop
push
and
dec
fist
mov
sbb
or
inc
jne
inc
loope
adc
pop
stos
out
aad
stc
xchg
ja
(bad)
ficomp
sbb
test
xchg
mov
mov
loope
aad
and
cld
xlat
repz
(bad)
(bad)
jae
add
jo
lea
or
inc
dec
out
adc
push
sbb
retf
adc
cmps
xchg
inc
cmp
jle
imul
(bad)
movs
hlt
add
test
out
daa
out
xchg
sbb
and
push
and
stos
jmp
push
cmp
jne
(bad)
jns
mov
and
or
jbe
mov
ret
mov
mov
div
push
add
cdq
xor
std
popf
or
iret
out
outs
pop
fadd
jb
cld
sbb
popa
xor
jle
out
das
push
pushf
and
rol
loope
ret
and
jmp
(bad)
add
retf
stc
dec
aas
push
ror
xchg
cmps
div
icebp
pop
cmc
and
gs
scas
push
cmp
outs
std
ror
mov
ficom
into
pop
add
scas
adc
mov
in
sub
jnp
xchg
pop
std
imul
repz
add
cmp
add
rcl
mov
lea
xchg
lods
mov
iret
jae
je
out
push
pop
int
jmp
dec
stos
sbb
sbb
and
je
loopne
aad
sbb
loop
xor
scas
leave
das
jbe
add
pop
jg
cwde
popf
mov
pop
inc
jae
lahf
cmp
push
sbb
or
out
dec
mov
cmps
in
adc
ficomp
xor
add
pop
in
in
add
daa
cmp
ds
push
dec
fwait
out
mov
mov
repz
gs
inc
das
mov
mov
icebp
test
clc
mov
in
dec
sar
mov
jno
mov
gs
add
repz
add
adc
out
or
lock
adc
jge
jns
in
cmc
push
les
xchg
lods
xor
adc
inc
sti
rol
push
mov
dec
pop
cmp
xchg
xlat
lods
ss
pop
inc
call
and
mov
dec
sbb
jns
jb
pop
aas
pop
sbb
cmps
sbb
cmp
dec
jns
retf
pop
mov
mov
movs
stos
sub
fiadd
mov
mov
mov
xchg
jle
push
xchg
mov
and
push
fs
dec
mov
repz
not
mov
adc
or
mov
push
jae
or
xor
movs
jle
in
sbb
outs
fdivr
sbb
cld
mov
add
sar
int3
ret
cwde
fs
cmp
ret
repnz
mov
nop
mov
jp
dec
xor
fsubr
mov
lock
(bad)
(bad)
pop
push
popa
adc
popa
jmp
mov
xor
adc
stc
sub
mov
inc
scas
ds
ja
push
aaa
ror
scas
out
jns
sbb
ror
push
xor
mov
push
inc
in
jle
jge
repnz
adc
inc
(bad)
and
sbb
pusha
pop
push
nop
xchg
data16
ins
jge
pop
jns
(bad)
jl
popf
mov
add
sbb
arpl
icebp
mov
lock
stc
dec
ror
cmps
sti
cli
imul
sbb
xor
cmp
lods
mov
loopne
(bad)
std
repz
add
(bad)
mov
in
adc
sub
out
cld
cmps
out
mov
aaa
nop
in
sub
ja
fwait
adc
mov
bound
push
out
mov
inc
inc
inc
mov
fisttp
sbb
movs
or
(bad)
mov
movs
inc
(bad)
gs
jg
push
mov
adc
test
(bad)
push
mov
sti
cwde
int3
stos
push
jne
repz
js
xor
cmp
xor
cld
aam
or
cwde
loope
add
jnp
inc
data16
push
xchg
and
xchg
leave
in
sbb
aaa
xchg
call
pusha
(bad)
or
rol
inc
arpl
push
xor
cld
inc
(bad)
das
jmp
inc
test
aam
rol
or
(bad)
repz
sti
test
cmp
dec
outs
xchg
push
inc
fs
movs
and
push
repz
push
scas
mov
(bad)
push
sub
xchg
les
dec
aas
adc
fild
push
push
js
test
xchg
dec
push
and
popa
mov
in
cdq
push
ins
and
add
aam
in
loop
mov
out
ins
jnp
pusha
mov
sar
mov
xchg
aas
rcl
push
scas
cmp
xor
out
outs
sbb
in
push
mov
jmp
or
add
pusha
xor
ins
daa
push
pushf
arpl
mov
cmp
pop
xor
mov
add
ins
pop
mov
xor
mov
out
stc
jp
xor
sbb
ins
mov
mov
loop
aaa
lea
out
icebp
add
sub
ja
mov
out
dec
lock
fld
retf
pop
outs
pop
stc
retf
shl
iret
push
pop
mov
cmp
loop
pop
aam
jno
add
lods
pop
adc
sbb
mov
cmc
aad
jecxz
fbstp
add
sbb
mov
fcom
and
mov
retf
iret
mov
out
push
xchg
aam
mov
ja
or
data16
mov
out
pop
bswap
call
xchg
out
in
mov
cmps
inc
es
jecxz
fadd
xchg
call
add
push
jbe
je
jl
xlat
aam
int
xchg
ficomp
scas
ret
imul
lea
(bad)
cmps
out
(bad)
mov
les
mov
call
add
icebp
inc
gs
das
and
or
push
dec
push
in
mov
sbb
xor
mov
outs
call
ss
xchg
xchg
es
xchg
repz
pop
scas
fcmovbe
and
lock
inc
jmp
std
and
fwait
or
lods
cmps
(bad)
mov
xor
pusha
lods
mov
call
push
ja
imul
repnz
ss
jge
or
retf
and
pop
jo
mov
aam
mov
push
sub
sar
sbb
push
pop
clc
not
xchg
ror
(bad)
push
xor
add
ds
jo
test
sub
add
fistp
inc
sbb
out
in
jne
ds
pusha
sahf
fisttp
jb
pop
les
pop
push
js
mov
xor
mov
push
mov
sbb
xchg
xor
rol
mov
scas
sub
push
pop
mov
outs
out
jg
xor
mov
mov
mov
call
shr
xchg
jmp
sub
sbb
pushf
out
adc
fs
imul
in
push
fdiv
jmp
enter
in
lods
shr
xchg
mov
jge
xchg
inc
push
xor
jge
jns
mov
or
jp
adc
das
bnd
add
sbb
rcl
ret
push
inc
aaa
pop
inc
and
test
push
inc
xor
loope
movs
jnp
repz
push
xor
inc
pop
cmc
jge
pop
or
xchg
adc
mov
(bad)
or
push
push
pop
push
mov
retf
push
leave
xor
xchg
sbb
sub
dec
or
fadd
mov
cmp
ins
in
js
or
or
fwait
cli
cmp
in
test
or
icebp
inc
loop
fisttp
and
jge
sbb
retf
dec
jmp
(bad)
or
retf
jl
and
jae
pop
push
xchg
inc
inc
cli
mov
cli
adc
cmps
sbb
mov
mov
jbe
rol
or
push
(bad)
sub
fstp
cmp
xchg
cs
scas
mov
imul
jmp
xchg
or
es
int
dec
sbb
jmp
aad
(bad)
pop
mov
xchg
dec
pop
in
mov
test
dec
sbb
iret
sub
or
mov
call
push
sub
stc
push
retf
adc
and
(bad)
ret
mov
xchg
fdivr
cmp
cmp
imul
test
pop
adc
sub
inc
mov
and
dec
pushf
ds
es
retf
pushf
mov
clc
inc
or
xor
xchg
rol
enter
dec
lock
xchg
jle
push
lds
jl
fdiv
push
pop
mov
or
mov
test
pop
clc
adc
cmp
pop
push
outs
dec
es
dec
xor
cmc
sub
das
and
out
popf
cmps
jns
add
push
cmp
jg
repz
adc
popa
mov
mov
cmp
(bad)
cmp
(bad)
leave
out
or
popf
adc
xchg
xor
das
fwait
gs
out
or
aam
push
or
pop
inc
mov
pop
push
push
push
dec
jae
fidivr
dec
mov
add
add
mov
outs
or
mov
out
push
fisttp
push
inc
fs
jmp
push
cmc
addr16
retf
cmp
pusha
out
mov
lods
mov
sti
xor
loopne
mov
shl
cmp
out
cmp
push
xchg
nop
(bad)
mov
push
or
jle
mov
cmps
retf
xchg
or
xor
ja
shr
outs
mov
push
cmp
mov
iret
scas
xchg
adc
jle
jl
cwde
xor
arpl
out
movs
mov
dec
shr
movs
(bad)
jmp
mov
sbb
aam
cld
shl
xchg
shl
pop
lods
jnp
(bad)
xor
xor
sub
and
push
and
movs
sbb
cli
(bad)
cwde
adc
cmp
mov
mov
int
adc
mov
pop
dec
stc
or
xchg
outs
inc
stc
test
xor
pop
outs
into
ret
in
test
cdq
jle
icebp
es
push
sbb
cmps
sub
push
mov
jae
jmp
imul
xchg
xchg
push
aas
out
jecxz
mov
sbb
push
jg
cmps
lahf
pop
jecxz
sti
leave
push
or
or
add
or
mov
enter
mov
and
arpl
sbb
es
dec
jno
in
sub
ret
lods
xchg
mov
add
stos
sub
mov
xchg
mov
mov
ins
inc
mov
fld
push
mov
outs
jmp
outs
push
ja
sub
and
inc
mov
ja
jno
fcomp
cmps
adc
(bad)
sub
lds
jle
ret
mov
mov
mov
enterw
lea
scas
scas
sbb
fucom
add
sbb
xor
xchg
or
xchg
loopne
mov
fnstenv
addr16
mov
test
fdiv
or
fmul
arpl
cwde
mov
lock
inc
push
icebp
xchg
mov
mov
add
aad
or
cdq
rcr
movs
or
jbe
mov
into
pop
jns
cmp
cmp
shl
xchg
and
fcom
mov
clc
mov
jg
sub
or
cli
mov
push
sar
popf
mov
call
adc
and
lahf
(bad)
outs
pop
push
mov
pop
aaa
sub
mov
inc
in
jecxz
xlat
mov
lock
mov
movs
stos
jmp
pop
sub
mov
retf
jno
adc
push
jmp
cmps
mov
sbb
sub
inc
inc
into
push
xchg
jecxz
outs
mov
xchg
cs
adc
pop
jo
jg
bnd
movs
lds
dec
shl
popa
ret
sbb
sbb
loope
add
xor
ins
xor
sub
jge
inc
add
push
jg
in
push
adc
mov
mov
mov
or
repz
and
xchg
or
int3
mov
ret
or
scas
cmp
push
pop
lods
mov
cmp
xor
dec
cwde
mov
mov
cmp
sti
loope
jle
xor
sbb
jg
loope
push
mov
push
arpl
pop
call
dec
mov
xchg
dec
sbb
retf
inc
das
or
in
and
mov
dec
adc
add
retf
add
(bad)
call
loopne
and
or
adc
and
mov
push
imul
or
iret
pushf
or
fs
inc
xor
je
jmp
add
and
mov
inc
push
push
mov
push
fild
cmp
jmp
ins
pop
dec
outs
push
ss
idiv
sub
adc
test
mov
inc
cli
cmc
cld
cmp
mov
neg
int
cmp
scas
test
into
loop
push
add
das
repz
pop
jnp
push
sbb
hlt
aas
ror
pop
jo
and
out
jmp
popa
hlt
add
daa
xchg
adc
fcom
inc
dec
nop
dec
lea
test
rcl
lods
mov
mov
mov
xor
aam
mov
retf
iret
fistp
bound
push
ret
mov
inc
sub
adc
xchg
cwde
pusha
pop
out
repnz
scas
push
lods
pusha
cmp
retf
add
sub
xchg
lea
sub
or
adc
outs
push
iret
sub
mov
inc
xchg
cli
enter
push
test
in
mov
cmp
fwait
sbb
(bad)
mov
mov
fisttp
pop
sub
aam
mov
ficom
movs
out
jns
inc
into
sub
push
lods
push
call
test
call
test
aad
cdq
mov
shl
cwde
mov
jne
add
xchg
adc
mov
aad
imul
push
ins
or
loop
inc
sbb
gs
out
test
shl
add
(bad)
in
test
scas
and
cmp
dec
mov
call
xor
iret
and
leave
cs
in
shl
cmp
data16
sti
nop
push
cdq
push
aaa
pushf
add
push
aaa
jle
push
dec
and
lahf
xor
xor
in
stc
mov
in
mov
sbb
leave
or
xchg
jo
pop
ror
lahf
jp
xlat
or
sbb
lock
or
xchg
movs
or
xor
stos
call
cmp
dec
pusha
das
clc
jl
pop
mov
cs
sbb
les
lock
fucomi
sub
call
push
add
call
mov
adc
out
xor
cmp
mov
sbb
aas
dec
sbb
mov
out
inc
fcom
push
cld
jl
pop
aam
jle
jge
push
lock
nop
inc
cmps
push
aam
push
ss
mov
dec
loope
popa
dec
in
cmp
cmc
sub
stos
mov
pop
mov
in
inc
inc
into
(bad)
adc
or
add
xchg
rcl
mov
dec
dec
lods
inc
jmp
push
xlat
pushf
test
test
mov
xchg
aaa
and
dec
aad
and
mov
adc
or
mov
push
mov
adc
push
jo
int
cmp
adc
pop
std
push
add
mov
inc
stc
je
out
outs
dec
cwde
cld
repnz
xchg
push
push
sti
test
mov
cmps
sub
ffreep
jp
scas
fist
inc
sub
outs
das
fmul
imul
push
sub
mov
xchg
in
inc
iret
ja
imul
out
inc
rcr
neg
fidivr
in
cdq
mov
ds
enter
inc
imul
xor
mov
repnz
mov
mov
push
test
push
fisttp
(bad)
mov
mov
fst
jmp
mov
outs
arpl
mov
les
or
div
outs
and
test
dec
(bad)
cmp
ror
pop
lods
dec
mov
test
in
mov
mov
movs
imul
shl
sar
pop
jp
in
mov
(bad)
adc
pop
add
mov
lahf
(bad)
sti
jg
fist
mov
pusha
pop
jl
loope
cmps
mov
fdivp
dec
int
fisub
sbb
add
pop
cmps
jnp
ficom
iret
icebp
(bad)
es
adc
pop
enter
dec
popa
out
add
add
lods
test
les
mov
retf
and
popa
fdivp
jmp
and
add
push
mov
not
test
(bad)
push
mov
push
add
daa
cmp
test
jne
mov
dec
push
jnp
js
mov
adc
cmps
adc
addr16
add
dec
das
repz
daa
inc
jecxz
leave
sub
mov
ja
addr16
pop
mov
or
adc
in
or
imul
notrack
push
pushf
js
cmp
(bad)
push
mov
sub
movs
inc
jmp
js
push
pop
inc
mov
call
or
and
loope
xor
dec
cwde
push
mov
cmp
adc
sbb
imul
push
and
push
daa
pop
add
pop
das
jo
mov
gs
xor
ret
dec
int
xchg
xor
lds
dec
cmp
popw
and
test
iret
test
mov
mov
cmps
jmp
hlt
xor
iret
or
adc
mov
cdq
and
dec
sbb
or
into
cmp
lds
je
cmps
sub
or
daa
cli
cmp
jne
xchg
pop
xor
cdq
mov
addr16
jg
call
pusha
das
add
out
xchg
sub
push
mov
jbe
jge
and
in
xor
ret
mov
fnstsw
jl
mov
repz
mov
shr
gs
sbb
pop
cdq
cmp
daa
jmp
stos
adc
pop
push
add
dec
jae
adc
and
fst
or
rcl
mov
cwde
xchg
jle
leave
cld
ja
pop
and
push
add
add
add
mov
outs
mov
inc
(bad)
in
aad
es
sub
cs
xor
shl
cmp
arpl
sahf
stos
out
push
sbb
pop
jl
test
jmp
iret
sbb
cmp
add
mov
repz
ss
int3
mov
push
in
or
nop
std
jecxz
mov
mov
pop
push
fdivr
mov
mov
push
fxch
dec
cli
and
jge
popf
ret
aad
ins
cld
jl
enter
mov
sahf
into
cdq
loope
das
add
mov
(bad)
in
pop
jge
repz
pop
lea
xor
enter
and
cli
jae
data16
xchg
rcl
sbb
adc
in
cld
mov
push
(bad)
xor
xlat
aam
pop
bound
mov
push
xchg
aad
in
pusha
sbb
mov
test
not
fsub
jbe
mov
and
xchg
mov
imul
and
ds
pushf
pop
cld
dec
in
and
pusha
sub
jecxz
inc
sub
out
sbb
pusha
fiadd
out
int
dec
fbld
sub
leave
jns
sub
and
push
dec
pop
jle
test
iret
mov
xor
leave
fisttp
pop
cmp
xor
in
or
xchg
fcom
iret
jb
outs
bound
inc
mov
jmp
aaa
adc
pop
xchg
dec
cmp
std
data16
into
adc
lods
mov
lds
popf
aas
in
(bad)
jmp
inc
out
push
dec
jb
mov
int
push
gs
mov
repz
push
mov
lea
fist
xlat
in
xchg
cmps
jns
repz
sbb
mov
mov
aaa
enter
push
xor
repz
xor
fs
(bad)
fiadd
icebp
out
jno
ror
add
inc
mov
mov
xor
sub
cmp
or
push
xchg
call
and
fild
and
jmp
mov
out
test
sbb
inc
les
scas
and
mov
shl
popf
test
adc
and
retf
aaa
jg
mov
(bad)
push
push
jo
push
or
and
or
test
push
xor
ins
or
push
and
adc
lods
mov
and
mov
jo
outs
jo
xor
add
cmp
add
cmp
mov
ins
inc
jb
(bad)
mov
inc
push
add
xor
sbb
ror
xchg
fwait
and
sub
mov
mov
cmp
(bad)
ds
nop
cdq
int3
inc
inc
repz
push
pushf
xor
xor
and
mov
ret
cmp
mov
fild
mov
mov
pop
add
xchg
mov
xor
repz
(bad)
jae
pushf
bound
idiv
retf
lds
mov
dec
data16
out
mov
aas
clc
fidiv
nop
cmp
adc
jb
add
pop
push
stos
lods
popa
adc
adc
and
jne
sahf
push
fcmovne
add
xor
retf
in
stos
inc
mov
mov
stos
push
add
sub
sahf
mov
mov
jmp
jmp
inc
pop
mov
repnz
jnp
popa
add
int
cld
fadd
or
(bad)
pop
movs
cmps
and
fdivr
xor
aas
jne
xchg
and
or
ret
and
jp
daa
xchg
xchg
fdiv
cld
adc
aaa
nop
xor
sub
add
jmp
add
adc
popf
mov
fdivr
loopne
shr
mov
or
fsubr
in
pop
sub
(bad)
pop
stc
cdq
xchg
fistp
mov
rcl
pusha
aaa
push
mov
rcr
popa
mov
jnp
inc
(bad)
or
sbb
lods
enter
lahf
add
pop
jecxz
cmps
xor
mov
mov
xchg
repz
imul
fadd
bnd
xor
jmp
xchg
xor
mov
imul
addr16
add
js
or
sbb
aas
or
mov
lods
lock
test
(bad)
pop
sub
add
inc
outs
daa
int3
sub
dec
popf
xor
xor
outs
imul
sub
ror
fxtract
gs
xor
inc
cmp
inc
jbe
and
add
push
adc
test
rcl
mov
arpl
add
fbld
xchg
aam
mov
sar
mov
das
jecxz
lock
lock
dec
pop
push
ds
jle
jnp
xlat
ds
dec
and
fnstcw
jl
add
call
scas
pop
pop
cs
mov
shr
dec
outs
mov
leave
pop
pop
adc
and
xlat
iret
mov
cs
xchg
int
dec
cli
mov
es
fild
mov
out
punpcklwd
mov
out
sub
bound
enter
push
ret
xor
push
mov
sbb
in
fcomp
test
pop
jmp
push
and
shl
add
fs
cmp
ja
ss
int
pop
dec
push
cdq
cmp
or
push
call
inc
push
or
jle
mul
xlat
sub
ds
or
push
outs
sbb
ds
xor
cmp
ret
or
fist
sub
dec
xchg
mov
jo
fnstcw
cmp
call
cmps
nop
mov
cdq
adc
push
sbb
inc
loope
pop
adc
xchg
xchg
ss
(bad)
jno
aam
inc
or
js
repz
adc
cmps
outs
inc
jle
rcr
sub
xchg
clc
pop
gs
mov
fwait
pop
adc
sar
sub
aas
(bad)
inc
aaa
xchg
cmps
mov
aad
pop
sbb
clc
jbe
mov
mov
nop
mov
icebp
js
xchg
adc
sub
xchg
nop
pop
(bad)
aas
arpl
scas
call
pop
push
es
xor
cmp
lock
mov
mov
div
dec
ficom
xchg
pop
cmps
pop
xor
lea
jb
sahf
add
add
sub
pop
mov
and
jne
sub
add
(bad)
fstp
xlat
fbstp
hlt
movs
xchg
xor
pop
or
add
xor
dec
or
sbb
cmp
call
inc
ja
mov
or
mov
cmp
pop
push
stc
inc
xacquire
xchg
inc
xchg
jp
fldenv
pusha
(bad)
and
scas
outs
dec
ja
nop
cdq
fnclex
and
ss
lds
jb
clc
sub
std
fstp
adc
mov
ror
imul
or
loope
repz
lock
ds
and
adc
fwait
mov
icebp
ins
int3
push
pushf
and
(bad)
mov
arpl
xchg
leave
sbb
test
dec
dec
add
push
pop
in
pop
out
and
js
mov
xchg
imul
movs
jns
lahf
dec
push
clc
imul
sbb
neg
dec
cmp
mov
retf
xor
sti
out
clc
(bad)
jmp
fild
int
test
jnp
int
pop
arpl
mov
mov
pop
int3
loope
xchg
repz
mov
push
mov
je
adc
adc
or
push
fimul
es
inc
int3
adc
ins
dec
std
lds
xchg
ror
(bad)
mov
inc
shl
push
adc
xor
mov
cmp
dec
(bad)
cmps
fisubr
cwde
sbb
cmp
dec
stos
jmp
cmp
iret
dec
js
pop
mov
and
mov
and
cmps
retf
inc
not
pop
lods
push
icebp
(bad)
dec
icebp
mov
or
inc
adc
cmp
jg
dec
data16
push
xchg
lods
retf
add
movs
sub
pop
cld
mov
jns
xor
lock
mov
fs
sti
cmp
(bad)
popa
xchg
xor
jecxz
xchg
sub
push
jns
adc
add
adc
xor
mov
pusha
popa
jmp
ins
jo
mov
pushf
ds
mov
dec
ja
stc
enter
or
jbe
cs
hlt
push
xchg
(bad)
mov
mov
mov
push
jmp
or
int
xor
and
cmp
or
popa
inc
dec
jne
loop
cmp
loopne
fnstcw
adc
sub
lds
xchg
movs
shl
xchg
jl
jmp
rol
int
cs
xor
add
and
imul
lds
(bad)
pop
fsubr
das
and
fwait
pop
jge
pop
xchg
mov
push
xchg
pushf
push
adc
sub
mov
sbb
xchg
dec
push
out
dec
loope
cld
xor
repnz
adc
or
mov
push
jmp
cmc
push
push
mov
fcom
or
xchg
push
add
ins
add
pop
add
inc
sub
jnp
mov
fidiv
and
sub
imul
or
dec
lods
neg
inc
stc
xor
test
push
and
ja
inc
jo
jo
out
jo
out
push
dec
mov
mov
data16
or
dec
test
imul
retf
cmp
inc
push
mov
(bad)
inc
xchg
movs
(bad)
and
hlt
mov
jo
aad
xchg
xchg
or
mov
repz
lahf
lods
dec
sahf
sub
stos
iret
call
(bad)
mov
or
xor
fdiv
(bad)
or
mov
sub
xchg
sub
test
push
ds
stc
jle
ds
jl
sbb
mov
adc
ja
push
jb
test
cmp
sbb
push
das
xor
(bad)
(bad)
mov
test
mov
cdq
push
jmp
add
rol
add
adc
sbb
xchg
dec
push
pop
not
jne
(bad)
dec
aad
push
inc
scas
xor
or
mov
ja
imul
sbb
push
adc
and
shl
jo
outs
cmp
sti
xor
ja
aam
cmp
jmp
outs
hlt
retf
rcr
xchg
repz
cwde
out
pop
cmp
mov
cmp
pop
imul
or
je
(bad)
mov
stos
add
stc
mov
leave
rcr
popa
push
fcom
sub
adc
mov
cmps
xor
jle
and
inc
pusha
(bad)
cmp
sub
daa
cld
mov
or
cmps
sub
pop
jb
sahf
stc
push
push
les
ins
test
out
pop
or
dec
out
push
test
push
cmp
jle
mov
mov
push
dec
pop
pop
mov
cli
dec
repz
dec
xchg
leave
sti
cwde
jl
enter
fcom
pop
xor
sub
jge
ja
sbb
inc
inc
or
push
(bad)
dec
xchg
xchg
div
and
mov
fwait
pop
inc
pusha
cmps
inc
jp
sub
push
mov
cmc
jmp
sti
push
push
push
data16
movs
push
cmps
push
push
in
pop
jge
jne
mov
xchg
aaa
outs
aam
jnp
fidivr
aad
xchg
add
pop
shl
mov
sbb
seta
ds
dec
and
retf
push
sub
cs
adc
mov
jle
pop
mov
in
(bad)
adc
cmp
lea
fimul
and
in
jno
loope
fadd
call
aas
mov
(bad)
ds
repz
add
mov
cld
cmps
test
leave
adc
stos
inc
in
and
mov
sub
jns
pop
jp
push
mov
repz
movs
mov
idiv
mov
sub
and
(bad)
mov
imul
push
dec
mov
inc
pop
add
adc
arpl
cmp
addr16
pop
rcl
sar
(bad)
mov
retf
pushf
add
jo
hlt
imul
retf
stos
rcr
pusha
leave
out
xor
jne
pop
enter
(bad)
jmp
retf
repnz
xor
adc
(bad)
aam
pop
and
pop
pop
addr16
sar
retf
jno
call
and
mov
cmp
dec
aaa
fidiv
call
je
xor
mov
aad
inc
leave
push
inc
add
jge
jne
je
loope
jo
adc
sbb
pop
inc
(bad)
adc
(bad)
cs
ret
jno
cdq
inc
mov
jb
ret
add
shl
inc
ja
int3
push
mov
repz
inc
fstp
mov
int
movs
inc
(bad)
mov
xchg
mov
loope
fcmovb
push
movs
jl
sahf
sbb
push
div
push
xchg
sub
ja
sbb
or
push
jo
in
pop
xor
cwde
or
(bad)
fisttp
pop
cmp
cmps
scas
repz
rol
mov
rcr
push
retf
inc
add
push
imul
jb
popf
adc
repnz
mov
mov
mov
xchg
push
mov
fld
sahf
inc
popa
ret
jge
dec
imul
adc
scas
adc
xor
mov
arpl
pop
sub
add
pop
mov
(bad)
and
ins
std
xor
int
sbb
sbb
retf
or
call
stos
mov
mov
(bad)
(bad)
sbb
imul
arpl
mov
add
sbb
fwait
fwait
imul
leave
or
push
call
pop
pop
rcl
(bad)
xchg
xor
push
jo
push
push
pop
push
pop
push
(bad)
fdivr
pusha
xor
xchg
dec
mov
jns
sbb
repz
clts
ja
mov
xchg
push
jmp
fdivr
xchg
loop
sbb
or
hlt
add
dec
out
cmps
mov
out
mov
cmp
mov
(bad)
out
dec
and
jae
pop
out
(bad)
hlt
xor
inc
dec
dec
lods
cwde
nop
std
jle
stos
shl
call
mov
dec
nop
jle
out
lock
int3
mov
jno
and
shl
sahf
ja
xchg
test
mov
or
or
(bad)
pop
push
sbb
xchg
push
js
data16
xchg
test
push
fst
xor
int3
cmp
lahf
mov
xlat
pop
std
test
in
arpl
cmp
or
loop
lock
inc
xchg
adc
xor
inc
dec
cmps
popf
sbb
hlt
rcl
jecxz
outs
jb
daa
cld
adc
xor
sbb
push
mov
xchg
es
repnz
(bad)
scas
adc
add
inc
pop
cmp
lods
(bad)
cmp
xchg
pop
retf
in
fld
loopne
ds
inc
ja
mov
cmps
add
xchg
sub
jo
aas
jmp
xchg
dec
jmp
xor
(bad)
rcr
mov
xor
dec
jmp
data16
mov
dec
or
mov
dec
adc
pop
mov
push
nop
dec
sub
mov
cmps
je
inc
sub
(bad)
in
aad
xor
repnz
pop
mov
add
fnstsw
jp
adc
pusha
push
and
loopne
add
or
and
mov
push
(bad)
cmc
lods
sti
xor
pushf
mov
push
rcr
push
jle
in
mov
int3
adc
or
and
cmps
gs
int
mov
dec
shr
test
lods
int3
out
adc
jge
sub
mov
call
mov
loope
lahf
sub
push
ret
pop
stos
(bad)
mov
popa
and
xor
mov
or
add
jmp
mov
mov
pop
inc
cmc
shl
dec
mov
pusha
stos
dec
mov
fdivr
sbb
in
lock
mov
or
jns
push
xor
mov
jbe
xchg
mov
int
mov
nop
or
xchg
push
pop
scas
jg
pop
mov
hlt
add
mov
pop
mov
imul
pop
push
rcl
cmp
jns
gs
mov
mov
adc
mov
mov
jmp
push
call
fs
add
es
ja
rcl
jno
sub
xor
dec
mov
and
xor
popf
lahf
push
int3
add
pop
dec
sbb
xor
(bad)
movs
out
stos
or
test
pop
sbb
out
addr16
iret
sbb
aad
fldenv
mov
dec
and
cmp
stos
xchg
test
xchg
and
inc
sub
pop
lahf
fs
sub
xacquire
pop
jno
inc
mov
ds
outs
scas
iret
push
dec
adc
adc
mov
rcr
imul
mov
xchg
sar
stc
and
loope
lahf
push
int
pop
jge
aaa
out
push
repnz
pop
inc
or
add
mov
in
rcl
lods
dec
sub
call
movs
mov
and
adc
dec
popa
imul
ja
or
nop
dec
arpl
or
pop
test
add
and
cmps
inc
das
and
sbb
loopne
fidivr
sub
inc
pop
or
lahf
(bad)
dec
pusha
stos
(bad)
xchg
adc
scas
call
xor
jl
ss
cdq
jl
std
sub
pop
cld
(bad)
aad
fwait
outs
xor
leave
xchg
sub
das
cmps
dec
adc
scas
and
repz
ret
sti
fwait
cmc
enter
or
jno
out
fidiv
mov
sar
lods
(bad)
mov
scas
mov
adc
mov
adc
rcl
test
sub
jmp
mov
push
lods
ss
(bad)
mov
bnd
dec
xchg
repz
xchg
inc
pop
out
mov
dec
or
jl
push
jg
cmps
(bad)
lahf
sbb
add
sub
or
stos
call
int3
jmp
frstor
es
lea
mov
and
jb
(bad)
jnp
mov
jecxz
add
dec
mov
pop
and
outs
data16
dec
sbb
push
neg
sub
fwait
cmp
cmp
mov
pop
push
clc
dec
jne
sti
push
es
jbe
enter
imul
jge
popa
jmp
cld
outs
hlt
fnsave
les
nop
test
push
outs
mov
das
and
push
arpl
aas
daa
mov
pop
pop
xchg
dec
and
ret
cmp
rol
adc
jb
sbb
cmp
gs
popa
sbb
hlt
xor
jno
outs
test
mov
ret
aam
fst
dec
xor
xor
xchg
addr16
jbe
sti
movs
push
jmp
mov
sub
rcl
sub
sbb
and
inc
dec
repnz
dec
push
sub
sbb
dec
or
sub
imul
pop
mov
icebp
cmp
ss
dec
scas
add
gs
lock
push
fprem1
div
add
push
imul
dec
pop
and
scas
stc
or
xlat
ins
fld
xchg
dec
push
int
adc
loop
mov
(bad)
repnz
ret
xor
xor
imul
aad
or
inc
repz
stos
add
cmovae
arpl
lods
mov
(bad)
int3
jbe
push
cmp
dec
das
js
xchg
dec
add
sbb
ds
dec
(bad)
adc
cld
xor
pushf
and
sbb
cld
pop
jp
mov
push
add
cmp
out
repz
push
cmp
sub
fsubr
addr16
ss
dec
imul
and
in
inc
aas
std
movs
cwde
hlt
in
dec
xor
and
jp
jne
(bad)
mov
in
jo
xor
cs
(bad)
mov
pop
call
xlat
std
test
jg
jno
ins
arpl
jle
xor
push
fcomp
mov
mov
dec
(bad)
jnp
cmp
push
and
xchg
movs
jb
or
mov
in
xor
and
mov
sbb
dec
sbb
mov
loop
jbe
push
push
jl
adc
lods
lock
nop
jmp
imul
clc
pusha
lea
xchg
lea
pop
adc
dec
mov
cmp
and
or
push
adc
fwait
pushf
and
adc
test
fwait
lahf
out
stos
dec
xchg
shr
mov
cmp
pop
dec
jmp
repnz
jns
jmp
(bad)
icebp
mov
push
adc
dec
ins
push
repnz
fmul
or
out
cmp
mov
call
or
repnz
sar
aam
shr
sub
xchg
xor
das
data16
or
xchg
dec
leave
xchg
retf
inc
or
ret
pop
ja
movs
adc
mov
and
mov
jne
fsub
icebp
sub
mov
or
xor
jg
mov
pop
adc
mov
std
clc
int
mov
dec
inc
(bad)
or
mov
jle
push
jg
cmps
mov
mov
movs
stc
mov
sbb
mov
push
pop
xor
push
cmp
(bad)
pusha
idiv
cdq
mov
into
arpl
stos
(bad)
jno
jnp
mov
push
lds
repz
fcom
mov
mov
jae
push
mov
inc
das
js
movs
add
sbb
mov
and
mov
push
cmp
jns
stos
out
jo
movs
data16
cmps
and
inc
sti
mov
push
jb
jb
(bad)
jmp
scas
push
xor
fwait
xlat
les
es
xchg
scas
aad
inc
into
out
cmps
or
jmp
mov
retfw
xchg
add
btr
sbb
inc
or
int3
dec
add
test
push
adc
push
js
lea
mov
jmp
xor
dec
in
fidiv
jne
adc
loop
mov
loope
mov
ins
mov
rol
or
mov
sub
mov
and
cld
xor
mov
pop
(bad)
sbb
mov
add
pop
fist
cmps
stos
jnp
ret
dec
push
sbb
out
mov
adc
push
mov
and
je
dec
dec
fs
mov
data16
inc
xor
sbb
pop
test
sahf
jmp
cld
lods
lahf
imul
jnp
xchg
jl
xchg
fstp
mov
cmp
inc
cmp
xchg
jnp
shl
mov
and
loopne
clc
dec
cld
fs
hlt
ds
add
inc
jne
es
rcl
jmp
clc
and
xchg
repnz
mov
adc
jl
sub
push
cmps
mov
loope
xor
and
xchg
dec
ss
xlat
repz
scas
push
popf
inc
push
fcomp
fwait
push
mov
stos
in
push
popa
jo
les
ror
xor
fcmovne
push
add
iret
sbb
dec
ins
jb
inc
stc
pop
inc
std
(bad)
mov
jbe
fcmovnu
push
in
mov
xchg
xchg
add
inc
push
mov
pop
cmc
push
in
imul
sub
add
inc
stc
mov
push
cmp
pop
push
jb
test
sbb
data16
or
inc
out
adc
xchg
or
test
popa
bound
xchg
repz
dec
push
sbb
outs
call
push
mov
fstp
clc
(bad)
push
test
push
mov
add
or
pop
movs
retf
aam
cmp
test
fdivr
dec
mov
fwait
in
cmp
ss
xor
xchg
lods
jbe
xchg
pop
dec
inc
xlat
stos
scas
jne
aaa
out
out
lock
jmp
mov
mov
add
mov
cmc
movs
in
(bad)
int3
and
inc
xor
mov
aaa
or
and
pop
loopne
adc
scas
and
movs
mov
and
movs
jns
or
stc
mov
lods
js
mov
jl
pop
push
inc
jmp
sub
inc
daa
sub
test
xlat
jmp
sbb
xchg
add
pusha
sub
or
or
mov
dec
push
cmp
rol
cmp
mov
jle
into
test
jmp
or
xchg
pop
retf
pop
cld
aam
adc
push
mov
(bad)
ss
ss
jbe
and
in
into
cmp
lea
sbb
outs
pop
pop
pop
pop
sti
lods
ret
jae
mov
ja
int
push
mov
mov
loopne
fnsave
or
pop
adc
and
lock
outs
mov
sub
jge
mov
xor
sbb
es
add
adc
aas
retf
dec
adc
mov
arpl
repnz
jb
(bad)
fisubr
pop
sti
cmps
js
jmp
outs
xchg
dec
sbb
out
outs
shl
sar
xor
std
add
adc
jg
clc
push
adc
test
ss
in
mov
mov
fld
dec
mov
pushf
(bad)
mov
xor
or
movs
out
mov
xchg
icebp
iret
xchg
adc
push
pop
inc
test
pop
push
jge
stos
enter
add
fild
movs
out
push
int
mov
inc
xchg
lahf
scas
sbb
sti
ret
or
pusha
cdq
sub
(bad)
loope
xchg
or
dec
mov
mov
test
jno
dec
ja
cmps
jg
das
inc
mov
ja
mov
lods
push
xor
add
xchg
push
or
scas
div
jmp
jno
in
xlat
nop
jmp
mov
rol
sub
(bad)
jne
pop
retf
in
shr
cs
shr
mov
ja
xchg
(bad)
inc
inc
mov
cmps
sub
mov
add
jg
jmp
daa
add
in
es
ret
pop
or
xchg
dec
nop
push
cmp
or
sbb
sbb
push
scas
out
fsub
test
push
cmp
or
(bad)
mov
repz
mov
(bad)
fbstp
daa
mov
mov
xchg
(bad)
hlt
pop
fwait
sub
aad
fiadd
jmp
into
xlat
ins
cs
(bad)
fadd
adc
lods
ret
mov
je
sub
jo
lock
sbb
sub
les
movsx
xlat
out
aam
mov
xchg
or
out
pop
jle
pop
cmp
pop
cdq
jnp
dec
mov
push
pop
ret
imul
lock
adc
xchg
mov
mov
jecxz
cmp
fs
mov
cld
sbb
jnp
xor
sar
addr16
cmp
dec
iret
xchg
mov
jg
jecxz
nop
and
rcl
enter
pop
mov
inc
mov
lahf
leave
lahf
stos
call
xchg
out
cmp
inc
sbb
fild
sbb
or
rcl
int
cmp
nop
retf
add
ds
lds
push
and
xor
inc
sar
call
mov
mov
test
cwde
test
scas
mov
das
sbb
xchg
sbb
fld
or
mov
iret
jmp
push
scas
mov
daa
das
movs
mov
stc
mov
retf
pop
(bad)
loopne
loopne
jo
or
pop
xrelease
cmps
orps
arpl
xor
mov
pop
scas
and
ror
jo
mov
push
int3
sub
ror
xchg
into
jae
es
add
lea
pop
mov
bound
inc
cmps
outs
or
aad
adc
mov
add
or
mov
dec
pop
lea
or
test
xchg
inc
push
sub
lock
mov
stc
dec
ret
in
mov
popf
push
xor
dec
std
test
inc
div
std
mov
clc
outs
jo
fidivr
mov
jnp
dec
es
pop
scas
cmp
adc
push
icebp
mov
in
xchg
je
aam
movs
mov
ret
es
(bad)
cli
out
or
adc
(bad)
stos
sub
cmps
movs
inc
enter
aad
sar
outs
adc
lea
and
adc
adc
test
icebp
push
sbb
jnp
retf
add
hlt
or
sub
jl
jmp
or
and
cmp
sbb
or
test
push
dec
movs
loopne
mov
push
cmp
add
js
pop
cld
imul
pop
add
fucomi
ins
adc
jmp
add
dec
movs
shl
out
xchg
xchg
les
mov
push
(bad)
div
xor
sub
jp
mov
push
sbb
cmp
arpl
add
(bad)
mov
sbb
sub
xor
mov
loop
mov
adc
je
les
add
cmps
mov
ret
iret
or
ret
mov
inc
mov
add
mov
mov
jo
mov
fisub
mov
jbe
xchg
and
push
add
jl
mov
mov
mov
and
data16
(bad)
es
push
lea
xor
push
pusha
xchg
sbb
jp
cs
pop
loopne
movs
or
rcr
outs
in
pop
mov
pop
mov
push
cmps
data16
dec
add
mov
mov
lods
cld
ret
cmp
call
xchg
lahf
addr16
bound
dec
push
push
dec
(bad)
pop
mov
xchg
cmc
xchg
xchg
mov
cli
push
pop
popf
xchg
enter
and
repz
push
adc
pop
mov
inc
cli
dec
mov
push
out
into
xchg
jne
cdq
cdq
dec
push
add
jp
retf
aam
sti
loop
xchg
adc
push
aam
repnz
aam
shl
jbe
test
pop
in
inc
dec
or
mov
shr
sbb
mov
icebp
push
inc
iret
jl
lods
sbb
stos
dec
push
dec
out
push
sbb
mov
dec
mov
rol
add
shl
dec
sbb
mov
imul
out
mov
arpl
xchg
adc
push
xor
int
test
jmp
test
scas
stos
stos
mov
dec
lock
cmp
aam
lock
outs
mov
sub
dec
adc
mov
dec
loop
jb
inc
aad
daa
(bad)
movs
add
mov
inc
(bad)
div
scas
fwait
add
xchg
out
bound
add
mov
inc
jo
xor
popa
mov
dec
lahf
clc
cmps
cld
add
shl
dec
std
rcr
push
in
js
dec
sqrtps
mov
(bad)
xchg
lock
mov
enter
ret
cmp
aam
data16
scas
and
fwait
ss
cmps
dec
push
xchg
cld
sub
je
int3
xor
and
jbe
or
inc
cmp
mov
in
fs
xor
cmp
cmps
mul
test
mov
aaa
cmps
rcl
and
add
ret
lds
jmp
fisttp
cmova
imul
sub
push
and
inc
jl
lahf
ss
sub
xor
or
mov
xor
stos
lahf
push
mov
and
inc
or
cmp
mov
hlt
inc
cmp
sub
mov
daa
fmul
sub
sbb
dec
mov
mov
add
pop
adc
xlat
addr16
cmp
jecxz
rcr
pushf
in
sti
stos
mov
into
retf
adc
mov
mov
cmc
aaa
sbb
sub
stos
pop
inc
pushf
dec
bound
pushf
aas
(bad)
adc
xor
xchg
adc
(bad)
imul
cmc
jo
mov
ds
fdivr
pop
daa
sub
sbb
inc
inc
icebp
leave
jnp
push
leave
push
test
ret
stos
leave
xchg
mov
jle
stos
inc
daa
fwait
adc
inc
mov
fisubr
jl
int
pop
fstp
in
dec
hlt
mov
pop
aaa
xor
push
dec
daa
lahf
div
add
addr16
push
rcl
pop
out
int
js
mov
add
sbb
js
cmp
mov
out
push
push
mov
lock
mov
jmp
shr
and
pushf
push
je
or
or
push
inc
xor
ror
push
mov
sub
scas
inc
dec
jne
sub
int3
mov
dec
xchg
imul
fsubr
mov
push
sbb
ja
push
mov
repz
fs
sti
std
stos
mov
xor
jb
xor
rcl
and
and
add
push
pop
mov
pop
add
es
fimul
and
adc
jmp
pusha
pop
pop
mul
arpl
xchg
dec
ss
pushf
nop
xchg
fcmovnu
mov
push
push
add
retf
jb
cmps
test
inc
out
aaa
jmp
mov
mov
imul
jle
xor
sbb
push
(bad)
mov
lods
aam
jno
xchg
xor
lods
dec
lds
push
push
loop
or
inc
lahf
mov
jle
xor
in
push
or
out
ja
pop
loopne
ret
pop
test
scas
pop
pop
je
ss
fbld
sbb
dec
jnp
sbb
repnz
(bad)
push
cmp
or
inc
sub
xchg
imul
icebp
cmp
bound
cdq
sub
mov
add
sub
sbb
scas
div
imul
dec
push
sub
into
ror
fisub
pop
and
sbb
sub
clc
pop
in
and
or
mov
test
xchg
cmp
sbb
add
push
sti
fisttp
in
cmp
test
mov
das
dec
int3
jb
dec
outs
bound
or
test
pop
mov
cdq
mov
mov
and
mov
scas
cwde
pop
cmp
cmp
jmp
mov
xchg
xor
xchg
test
addr16
pop
test
rcr
mov
adc
sub
lock
pop
in
xor
jne
(bad)
(bad)
mov
push
and
inc
adc
jno
dec
push
out
repz
in
push
mov
mov
std
inc
push
push
jge
sbb
fs
pop
shl
dec
inc
or
inc
movs
outs
shl
cmc
fst
ins
cmp
or
xor
je
out
popf
mov
retf
dec
dec
outs
(bad)
clc
int
push
cmps
adc
shr
test
scas
xchg
add
ins
mov
(bad)
pop
mov
dec
adc
sbb
imul
test
mov
mov
sbb
scas
(bad)
icebp
or
jl
mov
inc
pop
jmp
jb
into
pop
sub
xchg
lds
in
pop
push
call
rcr
out
ret
ret
stos
add
xor
pop
mov
mov
inc
test
adc
data16
xchg
pop
and
inc
mov
xchg
call
push
mov
rcr
jne
xor
inc
cmps
push
xor
das
cdq
and
inc
lods
push
in
cmp
clc
pop
xor
sbb
sbb
ds
pop
nop
aad
dec
xchg
pop
pop
imul
dec
jge
adc
js
xchg
call
(bad)
cmp
stc
pusha
sub
cmp
cmp
in
repnz
(bad)
js
cmps
in
adc
xchg
dec
push
inc
imul
jecxz
xchg
mov
imul
push
inc
xchg
lds
popf
cmp
fst
pop
xor
sbb
mov
mov
push
dec
ins
fidiv
aam
fidivr
fst
push
mov
ret
inc
cmc
inc
ds
fwait
inc
inc
push
push
ins
jbe
pop
xchg
sub
je
cmps
cmp
jmp
jo
shl
ret
mov
retf
call
xor
cmp
mov
or
cli
mov
jbe
inc
outs
mov
mov
pop
leave
stos
adc
ja
es
xchg
cmps
or
(bad)
retf
sub
add
add
movs
push
jmp
ins
lods
ja
retf
adc
xor
outs
add
or
sar
jb
or
call
imul
hlt
movs
mov
jbe
lods
aam
mov
dec
repnz
or
aam
lds
movs
sbb
xchg
jne
lods
ret
addr16
jne
test
ror
jmp
in
jmp
setl
fwait
or
inc
cmp
push
iret
shl
(bad)
jg
pushf
and
iret
jmp
lahf
push
inc
pop
push
test
retf
jbe
(bad)
cmp
inc
cmp
cmp
imul
mov
mov
mov
retf
jno
int
stc
sub
in
sti
mov
sbb
mov
lock
xor
fistp
inc
je
add
mov
and
add
mov
int
dec
cmp
fstp
sbb
dec
movs
adc
pop
outs
(bad)
outs
fmul
dec
push
jns
arpl
in
fadd
xchg
push
jle
retf
dec
aad
mov
jo
fild
in
(bad)
jns
test
sbb
int
test
mov
cmp
or
loop
xchg
xchg
es
(bad)
loopne
mov
sbb
inc
ins
push
out
aam
jg
call
inc
dec
pop
xor
sub
out
sbb
or
mov
das
mov
dec
shl
jg
ins
rcr
jecxz
jle
das
pop
mov
push
retf
lahf
in
arpl
retf
pop
shr
mov
pusha
pop
or
adc
xchg
sbb
push
xchg
and
adc
mov
push
mov
je
push
sub
stos
loope
(bad)
sbb
retf
sahf
retf
inc
js
loopne
cmc
and
inc
js
loope
inc
cli
movs
jecxz
sahf
or
push
fldcw
xor
je
sub
mov
ror
pop
pop
repz
movs
lahf
sbb
xor
movs
shl
mov
xchg
(bad)
mov
out
pop
dec
fcmove
mov
or
lea
add
test
adc
frstor
push
push
outs
out
add
mov
repnz
sahf
mov
aaa
and
js
pop
xchg
xchg
ror
pop
imul
outs
out
call
or
pop
lods
pushf
push
mov
je
mov
ret
das
mov
les
sahf
imul
call
jmp
scas
int3
or
lea
ins
pop
dec
cs
(bad)
clc
sbb
movs
and
or
cmps
aaa
je
test
push
sub
jp
imul
cwde
dec
and
pop
push
mov
lahf
arpl
inc
movs
dec
mov
es
(bad)
fidivr
sub
fistp
push
mov
cmps
mov
mov
dec
mov
sub
push
add
inc
repz
dec
jno
xor
or
inc
xchg
(bad)
stos
xchg
icebp
sbb
pushf
xor
pushf
adc
adc
(bad)
dec
dec
adc
push
push
(bad)
mov
adc
rcl
push
and
or
jmp
cwde
cli
das
and
idiv
push
movs
pushw
cld
aaa
fisub
mov
daa
loop
call
mov
rol
lods
lahf
(bad)
icebp
js
fistp
imul
psubusb
movs
dec
aad
out
xchg
je
pusha
sub
ins
jbe
fadd
test
inc
and
pop
aam
das
in
nop
cmp
adc
xchg
sahf
scas
retf
inc
push
pop
dec
nop
jge
(bad)
jl
mov
outs
jns
(bad)
push
idiv
adc
cs
sub
mov
aam
xacquire
mov
inc
xchg
push
psubd
push
cdq
jmp
mov
push
and
mov
mov
dec
stc
xor
push
jo
jmp
inc
dec
neg
ret
mov
scas
je
xor
inc
out
scas
adc
jg
cmp
dec
or
loopne
test
das
(bad)
push
push
xchg
push
call
fidivr
mov
fstp
sub
pop
push
or
std
lods
cdq
sub
sti
xchg
sbb
mov
cmp
retf
xchg
sub
std
pop
jb
and
mov
mov
loopne
cmps
pop
xchg
mov
sti
call
push
repnz
mov
pushf
or
repnz
and
adc
inc
push
(bad)
in
(bad)
(bad)
mov
das
loopne
push
mov
add
in
data16
dec
(bad)
sub
sahf
dec
je
hlt
sar
outs
imul
ds
sub
or
mov
xor
xchg
lds
cdq
xor
sub
cmp
dec
out
scas
test
push
xchg
stc
pop
or
fistp
cdq
sbb
test
push
sbb
push
jnp
inc
jecxz
test
cmp
cmp
push
(bad)
pop
movs
outs
or
inc
icebp
or
push
cld
call
cdq
inc
sub
fnstcw
mov
sbb
ror
(bad)
out
push
popa
clc
jno
test
je
mov
and
pushf
int3
sbb
xor
adc
dec
jb
inc
push
add
and
fmul
xchg
push
mov
fsubr
iret
repz
and
lods
stc
(bad)
(bad)
xor
mov
sub
imul
mov
imul
fs
cmp
outs
mov
ss
fist
add
shl
sub
aad
and
jecxz
daa
dec
mov
sbb
jge
push
pop
mov
out
lods
xchg
dec
jns
push
sub
mov
push
out
add
rol
dec
mov
movs
movs
jp
add
fcomip
gs
cwde
inc
or
jmp
pop
push
xor
frstor
jns
call
fwait
or
mov
leave
pop
inc
cmp
(bad)
jno
in
jle
dec
imul
jmp
pop
rcr
mov
test
inc
scas
mov
and
adc
cmp
pop
test
mov
jne
push
iret
xchg
jmp
std
inc
mov
jne
pop
js
mov
add
call
lds
adc
fld
and
mov
(bad)
loope
cmp
(bad)
jae
retf
push
in
in
lods
lahf
outs
mov
fwait
pop
pop
pop
repnz
cmps
jnp
xchg
fsub
add
cmps
aam
lea
jecxz
movs
scas
sbb
sbb
and
jbe
mov
icebp
leave
jbe
mov
ror
popf
mov
sub
rcr
sti
inc
xor
inc
pop
clc
jp
mov
jge
(bad)
sub
push
ret
xor
in
add
and
inc
scas
inc
sub
cmps
movs
ins
sbb
dec
mov
push
add
cld
push
mov
test
or
cmp
push
sbb
dec
sti
adc
or
nop
sti
mov
jecxz
enter
aam
cwde
stos
inc
and
dec
inc
dec
pop
jmp
rcl
add
mov
std
iret
and
mov
outs
nop
sti
sub
adc
jle
neg
fcom
or
and
mov
mov
arpl
mov
out
aas
daa
xchg
outs
pop
test
clc
sub
xchg
xor
xchg
or
in
(bad)
sub
inc
dec
mov
or
mov
cmc
pop
dec
retfw
pop
adc
add
sub
loop
aad
xchg
sub
adc
ins
mov
dec
jp
into
or
sub
jl
sbb
out
sahf
adc
pop
fucomi
xchg
jge
outs
je
mov
mov
lds
or
fbstp
dec
jns
inc
pop
je
mov
ror
mov
mov
jne
test
or
add
test
aam
repz
cmp
popf
cmc
sbb
cmp
lea
or
mov
rcr
cwde
jno
sbb
xchg
xor
jl
mov
jns
fbld
out
pop
cmp
jno
mov
xchg
lea
inc
dec
mov
arpl
sub
mov
pop
jnp
cmc
jmp
enter
fcmovnb
add
mov
add
into
addr16
gs
out
daa
ror
dec
lea
test
pop
mov
ins
sbb
sub
fstp
fisubr
sub
push
arpl
imul
sub
test
adc
jae
jl
imul
cmp
adc
loop
fisttp
cmps
into
xor
jle
xchg
adc
or
ds
push
and
fs
aaa
mov
mov
sbb
mov
sbb
cs
jb
jbe
fild
pop
shl
sti
push
out
mov
nop
ins
and
fistp
mov
jmp
movs
add
xchg
cld
sar
dec
pop
pop
sbb
dec
fiadd
sbb
add
in
inc
cdq
cmp
pop
cmp
sub
dec
cdq
sub
test
dec
push
data16
call
or
ret
sbb
fild
ja
fcomi
pusha
mov
lahf
into
es
sub
repnz
push
mov
inc
ss
or
sti
fisttp
pop
imul
mov
cwde
repz
cmp
jns
push
mov
push
inc
jle
add
lds
mov
cmp
push
dec
(bad)
jp
stc
or
test
pop
mov
mov
sub
jl
add
mov
ds
sbb
add
fist
addr16
mov
cmc
jae
movs
xchg
and
xlat
mov
popf
xor
clc
cmp
mov
push
sbb
pop
lods
xor
jmp
jecxz
(bad)
adc
fst
dec
repz
je
sbb
and
fcmovnu
mov
push
addr16
and
xlat
xor
xor
loopne
add
jns
in
movs
repz
push
icebp
stos
(bad)
dec
fisttp
dec
in
movs
or
enter
add
cmp
sub
fstp
rol
popa
pop
dec
dec
outs
js
sbb
cmps
rcr
cdq
xor
enter
repnz
stos
and
cmp
ins
fidiv
pop
(bad)
cmp
jle
iret
outs
xor
pop
dec
add
jmp
stos
sbb
popa
lahf
pop
(bad)
mov
fimul
mov
ins
cmp
or
cwde
xchg
push
aas
or
clc
add
std
movs
pop
mov
or
pop
xchg
jle
or
inc
or
cmps
jb
(bad)
stos
scas
leave
add
xor
mov
xor
xchg
mov
push
test
inc
mov
push
or
jge
mov
lock
or
jecxz
xlat
(bad)
mov
mov
adc
jno
inc
lods
stc
push
addr16
dec
and
mov
jp
cmps
and
movs
cdq
and
ins
cmp
sbb
adc
mov
in
call
xor
pop
retf
std
push
mov
mov
outs
inc
(bad)
ficom
dec
add
test
cmp
(bad)
jo
sbb
(bad)
lahf
cld
adc
inc
inc
inc
movs
pop
lods
push
mov
(bad)
dec
fstp
xor
test
xor
xor
inc
mov
rol
push
push
test
and
mov
jle
fldcw
add
inc
shl
fmul
inc
call
adc
sub
pusha
jg
scas
push
ins
and
cmp
cli
dec
dec
fcmovbe
xlat
sub
xchg
sar
push
jb
add
ds
mov
push
or
lods
add
mov
cs
int3
cmp
pop
adc
dec
dec
(bad)
mov
push
or
inc
(bad)
jmp
inc
sub
xor
fucomi
or
aam
or
lods
in
repz
lods
pop
push
shr
loop
mov
push
dec
sbb
fidivr
aas
mov
push
and
outs
xchg
retfw
imul
daa
xchg
neg
dec
pusha
lds
push
dec
sar
mov
leave
jae
pusha
inc
pop
sahf
pop
(bad)
loopne
neg
pushf
mov
sbb
pop
xchg
pop
xor
pusha
add
(bad)
int3
xchg
mov
lahf
mov
and
sub
jmp
outs
aad
mov
adc
popf
clc
fsub
or
xchg
xor
mov
inc
or
iret
(bad)
add
fldcw
hlt
std
cmp
cdq
int
adc
fdivr
icebp
push
sbb
push
xchg
call
fs
xchg
inc
aaa
lds
es
add
fidiv
test
loop
mov
inc
sub
push
and
in
add
xchg
outs
repnz
cs
xchg
jmp
jg
push
enter
jns
push
scas
and
ds
shr
jae
sbb
push
les
es
adc
retf
shr
into
push
test
xchg
xor
ror
or
or
lock
lea
inc
push
enter
ret
test
rcl
push
arpl
imul
mov
xor
icebp
jb
cmp
jle
mov
jge
popf
pushf
popf
cld
out
std
jmp
xor
dec
fdivp
adc
push
sub
cmps
fwait
out
or
mov
xor
jns
pop
ret
comiss
inc
jge
aas
loope
sahf
push
sub
lock
fisubr
outs
jp
jo
test
iret
popa
dec
sbb
dec
jg
inc
test
hlt
in
mov
iret
outs
pop
and
push
push
jnp
pop
push
enter
xor
xchg
cmp
jp
sub
bnd
or
(bad)
fwait
jno
mov
ja
mov
test
sbb
dec
mov
pop
cli
in
(bad)
mov
pop
mov
xchg
pop
bound
lock
mov
jb
sbb
xchg
jmp
push
data16
pop
xchg
retf
(bad)
rol
pop
xor
enter
sbb
arpl
lds
(bad)
add
push
outs
repz
movs
mov
lahf
pushf
ret
sahf
dec
inc
cmps
mov
cmp
push
lea
movs
ret
adc
jle
lods
sbb
mov
or
xor
mov
push
and
gs
stos
adc
cmps
aam
pop
mov
sahf
(bad)
adc
mov
out
gs
pop
mov
pop
mov
push
or
mul
adc
dec
pusha
jl
jno
jecxz
pop
jge
inc
pop
inc
cmp
or
mov
xor
fs
popa
fsubr
jmp
and
outs
push
jl
adc
imul
cs
sbb
and
inc
shl
rcl
or
rol
push
and
fdiv
jo
lea
pop
popf
mov
push
in
adc
jge
sub
nop
pop
hlt
ins
int
stc
(bad)
mov
adc
pop
mov
lea
ins
xchg
mov
inc
xchg
ret
loopne
push
xor
movs
(bad)
xchg
and
mov
mov
cmp
arpl
cmp
stos
call
xchg
lock
mov
xor
jbe
(bad)
inc
retf
scas
jl
jbe
mov
test
xchg
mov
les
pop
mov
cmp
and
sbb
shld
retf
sub
ss
or
mul
sti
xor
xchg
jl
(bad)
ss
inc
xchg
ss
(bad)
jle
daa
cmp
push
lds
leave
int3
adc
rcr
aam
cmp
pop
std
repnz
cmp
pushf
retf
repnz
sbb
fdiv
sub
xor
les
add
cmp
sub
dec
add
shl
pop
fnstenv
dec
push
in
or
in
movs
cmp
jmp
or
jge
mov
push
(bad)
retf
test
popa
cmp
mov
mov
pop
sar
pop
mov
pop
bound
add
mov
je
(bad)
(bad)
(bad)
call
sub
sbb
iret
push
dec
or
mov
cmp
mov
test
rcr
jae
ins
retf
mov
mov
les
jno
mov
cmp
cwde
sbb
sti
into
xchg
pop
sbb
mov
shl
les
loop
sub
push
call
cmps
call
mov
(bad)
add
dec
mov
out
fcom
mov
inc
pop
cmps
jp
test
push
mov
cli
xlat
mov
or
mov
dec
xor
inc
arpl
loopne
shr
in
jge
jae
pop
push
add
add
mov
ret
adc
aad
xor
add
xchg
jg
and
pop
push
and
fdivr
jecxz
scas
test
dec
dec
fsubr
jmp
test
nop
inc
and
bound
push
push
jge
cmp
imul
fcom
cmp
dec
pop
in
inc
pop
retf
int3
push
inc
mov
jecxz
cmp
shl
rol
or
mov
aad
xchg
mov
mov
mov
mov
test
xor
push
ja
stc
dec
add
adc
addr16
(bad)
mov
lock
cmp
jle
jbe
dec
dec
and
inc
aaa
enter
pop
iret
mov
dec
popf
je
mov
(bad)
sub
mov
imul
lods
inc
ja
fistp
in
imul
rcr
arpl
cs
shr
jle
mov
inc
push
lock
cmps
add
push
sbb
ret
adc
or
shl
test
mov
jle
jnp
dec
inc
pop
mov
mov
dec
jae
jecxz
fwait
jp
daa
or
push
jecxz
mov
fs
inc
jne
and
pop
fld
mov
pop
pop
cmp
jg
mov
clc
xchg
je
mov
out
mov
mov
out
ret
sub
fistp
sti
ret
add
push
and
retf
push
or
adc
inc
mov
in
jns
idiv
pop
push
gs
ins
outs
sti
jb
jbe
mov
aaa
cmp
xor
mov
push
out
lea
or
arpl
clc
stos
sbb
push
dec
popf
or
out
xchg
pop
push
hlt
jnp
cmp
xor
and
leave
mov
fstp
(bad)
(bad)
dec
mov
shl
(bad)
addr16
nop
lods
test
xchg
sbb
ret
adc
fsub
stos
daa
bound
jnp
nop
test
and
movs
mov
push
adc
add
jb
lock
(bad)
gs
mov
out
aad
int3
test
xor
sbb
add
jbe
jnp
repz
aas
out
mov
mov
int
push
or
sub
cmp
pusha
or
dec
bound
mov
dec
(bad)
mov
adc
push
pusha
movs
cmp
jb
aad
mov
shl
sub
dec
dec
mov
das
test
loopne
xchg
sar
pop
sub
test
iret
push
and
sar
sub
fucomi
and
and
xor
inc
(bad)
xchg
(bad)
xor
xchg
jae
and
pop
dec
cmp
dec
add
sub
mov
jg
sbb
add
inc
xor
sub
inc
adc
mov
or
imul
(bad)
or
pop
jb
or
fcom
stos
popa
ret
push
mov
mov
adc
ins
movzx
pop
(bad)
jmp
xchg
inc
lahf
or
iret
mov
mov
mov
aam
pop
or
aaa
jp
mov
add
out
fstp
dec
xchg
addr16
lahf
test
shl
jb
mov
pop
cs
ja
mov
js
test
push
popf
cli
mov
mov
sbb
jmp
or
inc
pop
shl
rol
sbb
push
daa
or
sub
sbb
jbe
jecxz
test
mov
push
and
in
add
and
mov
xlat
mov
jmp
out
jp
hlt
scas
jle
cmp
sub
loopne
aam
xchg
test
xor
mov
jg
test
in
mov
enter
mov
mov
mov
std
test
cmp
scas
out
movs
push
repz
jo
dec
jl
xchg
inc
or
sub
push
mov
mov
scas
jmp
cmp
rol
stos
mov
pop
mov
add
mov
fcomp
jnp
shr
sub
pusha
and
dec
mov
cld
dec
pushf
mov
arpl
retf
ins
ret
or
adc
adc
push
add
adc
fs
adc
cmp
rcl
push
xchg
arpl
rol
mov
(bad)
retf
loope
sbb
dec
jne
xchg
out
push
mov
lock
dec
movs
cdq
ins
push
inc
mov
or
rcl
inc
cmp
mov
mov
push
add
(bad)
outs
mov
dec
cmp
add
out
test
mov
imul
in
fcmovu
cmp
cwde
mov
mov
test
call
adc
rol
imul
sub
leave
jge
xor
addr16
mov
push
cmc
or
mov
iret
sbb
shl
popf
push
fisttp
xchg
retf
ret
ret
mov
fsub
loopne
sub
fmul
(bad)
les
inc
lea
xor
xor
inc
cmp
push
jge
jns
and
sbb
add
mov
xchg
cmps
daa
sbb
fld
xor
cmp
addr16
cwde
out
or
out
stc
shl
mov
pushf
mov
add
xchg
xchg
retf
hlt
dec
mov
mov
push
sbb
and
xchg
sbb
fs
pop
adc
mov
jno
data16
mov
adc
addr16
push
adc
ds
add
mov
push
dec
cmc
cmp
loop
data16
push
and
xlat
in
xlat
lock
aaa
shr
jp
add
retf
jg
adc
(bad)
fcmovbe
mov
pusha
xchg
sti
clc
sub
sub
and
lods
js
das
push
out
inc
shr
inc
daa
push
adc
gs
jmp
int3
mov
sbb
cmc
psubb
iret
test
adc
mov
shl
lahf
ficom
movs
mov
fisub
cmp
shl
icebp
or
sar
sub
cmp
jmp
push
xor
pop
popf
xchg
shl
fwait
add
std
imul
fsubr
fimul
test
rcl
pop
pop
and
outs
fisub
mov
aam
xchg
scas
mov
adc
jbe
test
js
pop
cmp
sti
jmp
sti
push
unpckhps
sub
pop
out
inc
pop
push
xor
es
jmp
jmp
push
adc
test
test
jmp
or
les
jp
mov
jmp
cmp
lea
(bad)
(bad)
iret
pusha
mov
out
sub
(bad)
popf
push
dec
cwde
mov
dec
inc
call
mov
adc
push
fidivr
call
(bad)
out
adc
addr16
mov
and
clc
popa
repz
js
or
mov
cmc
jnp
pop
mov
xchg
and
dec
and
shl
sbb
jecxz
sub
sbb
ss
and
add
mov
pop
es
jecxz
jno
daa
pushf
call
ja
mov
(bad)
(bad)
jp
int
xchg
in
fidiv
add
mov
sub
pop
loope
push
or
and
and
push
add
popf
dec
pop
jns
(bad)
fadd
int3
lock
mov
xor
call
es
cmp
xchg
fnstenv
cli
jp
adc
push
jae
sbb
push
or
mov
sahf
loopne
xlat
xchg
in
push
enter
and
test
retf
sub
cmps
inc
sbb
mov
cmp
aaa
sbb
xor
sar
and
inc
stos
ins
cmps
sub
ret
mov
fst
sbb
add
mov
rol
adc
adc
imul
aaa
repnz
ficom
out
aaa
mov
xchg
sbb
rol
fld
in
int
addr16
mov
(bad)
imul
dec
xchg
mov
icebp
sbb
xor
and
out
loop
push
sti
clc
or
or
adc
dec
lods
or
mov
js
mov
pop
mov
cmps
ret
jmp
push
jg
ret
fs
retf
cmp
sbb
outs
pop
idiv
fwait
jno
loopne
and
dec
sbb
icebp
mov
mov
sti
rcr
add
ins
inc
mov
push
cli
test
retf
mov
cdq
pop
mov
fidiv
jl
(bad)
xchg
pop
or
push
add
xor
aad
scas
leave
jo
add
iret
dec
mov
loopne
fs
mov
fisttp
out
mov
sub
enter
iret
mov
mov
cmp
xor
sbb
mov
das
popf
stos
(bad)
scas
jb
fsub
pop
fwait
imul
inc
xor
(bad)
call
inc
sahf
fwait
sub
cmps
mov
in
and
mov
ret
gs
sbb
adc
int3
loope
cmp
arpl
std
and
push
jnp
pop
cwde
stc
xchg
cmp
add
mov
jno
out
mov
loope
pop
push
sti
push
rcl
cmp
loopne
dec
lock
loope
fstp
and
arpl
js
fs
outs
ficom
cmps
fimul
sub
mov
test
scas
mov
sub
jmp
add
dec
xchg
int
(bad)
popf
mov
xchg
cld
std
pop
in
sub
or
cmp
scas
xor
ss
lods
sar
(bad)
call
in
cmps
mov
jle
js
and
in
jae
adc
mov
rcr
add
iret
int3
lock
adc
or
push
outs
pushf
retf
ret
pop
int
sub
push
ret
in
add
cmp
out
cmps
cmps
sbb
mov
je
mov
cdq
sbb
jge
jmp
xor
fld
cmp
pop
ret
sbb
lahf
ror
int3
and
retf
repnz
inc
pop
push
cmps
sub
ret
imul
rcr
hlt
pop
(bad)
mov
add
lea
nop
push
into
cmps
mov
inc
mov
jmp
sbb
mov
cmp
and
ret
adc
xchg
pop
pop
sbb
add
fwait
lock
je
xchg
pop
xor
jae
mov
nop
inc
rol
jno
adc
sbb
or
push
mov
movs
jg
sbb
fwait
mov
mov
movs
mov
fdiv
mov
pop
lea
jns
cwde
inc
pusha
test
cmp
cmp
push
test
sbb
inc
xchg
push
movs
mov
or
vpshufd
dec
popa
lods
mov
clc
sbb
int3
mov
jl
mov
iret
es
rcr
arpl
lea
lds
inc
scas
dec
pop
and
sahf
mov
rcl
les
pop
lahf
xchg
mov
leave
pop
jbe
jge
loopne
add
repz
js
rcr
inc
mov
icebp
jl
daa
sbb
mov
jp
lds
imul
sub
push
jno
pushf
test
in
push
js
call
adc
mov
jne
stc
inc
int3
xlat
sbb
xor
jns
imul
xor
ret
in
push
mov
and
jbe
outs
outs
(bad)
ins
fcmovu
xlat
dec
dec
xor
rcr
push
cmp
retf
pop
cwde
pop
inc
jmp
sub
mov
dec
hlt
cmc
es
mov
adc
xchg
loop
inc
scas
sbb
push
hlt
push
push
cmp
or
xchg
(bad)
cmps
add
shl
xchg
or
sbb
stos
sbb
inc
mov
stos
pop
adc
addr16
ins
adc
out
xor
ret
test
lods
pop
xchg
repnz
aad
enter
inc
cmps
loope
cdq
enter
stos
movs
fwait
dec
jns
push
adc
(bad)
lea
fwait
ins
fcmove
cdq
retf
jle
xor
out
aam
fld
xchg
jbe
enter
cmp
xor
lods
xchg
(bad)
loopne
pop
imul
adc
xchg
jecxz
into
loopne
arpl
mov
retf
sub
scas
adc
push
push
xchg
sahf
arpl
std
popa
mov
mov
inc
pop
xor
and
hlt
movs
mov
daa
out
adc
fist
cmp
sbb
push
pushf
je
or
nop
mov
loop
enter
push
outs
push
inc
les
or
cmp
enter
test
es
iret
popf
cmp
adc
iret
or
adc
and
popa
adc
xchg
pop
in
js
xor
outs
imul
rcl
jno
sahf
or
(bad)
xor
xor
jns
adc
jae
or
mov
mov
cmp
xor
mov
ins
ja
push
or
adc
retf
jmp
jnp
inc
adc
mov
movs
and
ror
or
mov
dec
fst
pop
call
pop
and
div
mov
sub
ins
outs
popf
xchg
call
stos
test
xchg
jno
mul
mov
xchg
imul
pop
jne
loope
aaa
cmovnp
stc
in
scas
mov
push
stos
mov
mov
outs
and
inc
or
sbb
in
sar
adc
mov
xchg
mov
call
test
aam
pop
data16
stc
or
pop
stos
push
adc
test
add
xor
add
jno
scas
mov
mov
ins
xor
mov
push
hlt
cdq
adc
ror
xor
sub
iret
cmp
fbstp
push
dec
xor
cmc
push
inc
push
push
jbe
sub
shl
(bad)
(bad)
gs
out
in
pop
movs
stc
adc
pop
push
sub
push
mov
sbb
adc
xor
mov
mov
loopne
pop
pop
push
aad
xor
ds
ss
mov
ret
stos
imul
aam
or
cmp
(bad)
shrd
jns
sbb
jmp
repnz
imul
add
fistp
das
lahf
jmp
(bad)
sub
pop
enter
aaa
jl
push
sbb
push
inc
jmp
(bad)
xor
data16
adc
sub
adc
xchg
aas
test
jmp
sbb
mov
hlt
das
(bad)
cmp
jns
test
jbe
xor
push
mov
loop
mov
bound
ins
jmp
mov
adc
cli
call
mov
(bad)
stos
jmp
add
inc
push
inc
test
cmp
imul
mov
test
dec
sub
cli
mov
jecxz
int
add
out
icebp
mov
or
jle
push
xlat
iret
xchg
std
rcr
shr
fidivr
ins
inc
pop
mov
stc
enter
mov
test
sub
xlat
or
ins
ins
push
mov
mov
or
dec
adc
sbb
mov
pop
mov
enter
into
xor
and
ret
retf
jnp
mov
xchg
mov
jecxz
mov
mov
ins
icebp
repnz
add
cmps
sub
adc
(bad)
push
stos
push
loop
in
push
mov
and
mov
sub
aaa
and
dec
mov
jae
mov
mov
dec
sub
test
push
add
inc
inc
scas
pop
xor
jge
pop
and
xor
mov
sar
xchg
ins
imul
xchg
jge
cmp
or
add
push
loopne
push
stc
mov
inc
leave
jmp
ds
rcr
dec
sub
jge
xchg
iret
xor
popa
inc
push
aam
mov
cdq
and
sub
mov
fwait
loop
push
adc
mov
(bad)
lods
adc
adc
das
pop
ja
popf
or
imul
cmps
ret
jmp
inc
test
xor
sub
test
and
and
adc
fld
xchg
das
movs
add
add
mov
lahf
inc
sbb
lahf
cs
mov
test
mov
xchg
jp
add
das
div
add
and
jae
sub
add
add
mov
std
pop
rcl
jne
out
fsubr
mov
ds
inc
div
movs
pushf
xor
xchg
outs
mov
mov
cmp
lock
ret
je
icebp
mov
lock
mov
iret
dec
fimul
ja
(bad)
push
les
or
arpl
sub
mov
cmps
ins
mov
aaa
mov
cmp
movs
pop
mov
(bad)
movhps
out
(bad)
and
xchg
or
mov
call
cwde
mov
mov
mov
push
cdq
ret
push
or
jno
xor
aad
dec
jmp
mov
outs
pushf
cwde
adc
pop
mov
and
xor
out
in
stos
jae
dec
jnp
add
dec
add
std
fdivr
xor
(bad)
scas
enter
ds
mov
add
retf
dec
dec
xchg
bound
push
fcomp
xor
stc
jmp
imul
lock
mov
mov
call
cmp
jbe
push
cmps
loope
out
add
jmp
(bad)
repz
push
fcomp
lods
cmps
bound
push
retf
pop
mov
fcomp
pop
xor
fcomp
in
push
retf
popf
sub
retf
xor
push
stos
out
lock
(bad)
fistp
pop
mov
lods
out
stos
adc
ffreep
leave
int3
sti
mov
pop
xchg
jno
nop
cmp
sbb
aam
into
adc
daa
out
repnz
jle
sub
cmp
or
mov
pop
xor
cmps
(bad)
sbb
es
retf
cmc
dec
mov
arpl
jmp
sbb
std
inc
dec
dec
adc
popa
clc
pop
and
cld
fs
jb
jmp
in
push
sbb
cmp
sbb
(bad)
out
ficomp
xor
pop
lea
mov
dec
xor
pop
inc
mov
sub
inc
into
cmp
mov
lds
xor
stos
or
cwde
sbb
rcl
int3
xchg
mov
stos
fdiv
into
sub
mov
movs
pop
and
push
movs
call
lea
and
fdivr
arpl
mov
sbb
mov
inc
imul
dec
fisubr
sub
cmc
mov
sbb
and
jo
fnstcw
popf
cld
jns
cmp
jl
mov
push
je
adc
or
pop
lods
cmp
nop
mov
xor
add
outs
push
mov
adc
push
out
fisub
ss
jmp
mov
stos
or
shl
scas
fld
cmp
cmp
fst
(bad)
int
jmp
in
pop
ja
movs
adc
test
pop
retf
add
and
dec
fdivp
xchg
scas
das
xchg
mov
rol
nop
std
adc
mov
aad
push
jl
mov
jmp
in
mov
aam
scas
sub
xor
dec
dec
cmp
push
dec
cmp
retf
scas
xor
dec
cmp
cmps
call
bound
test
stos
sub
and
int
add
repz
pop
mov
sbb
retf
cmp
sti
mov
in
pop
sbb
fldenv
sbb
(bad)
ficomp
xchg
adc
adc
scas
mov
mov
sub
outs
pop
mov
in
jl
jb
inc
test
jg
in
mov
or
arpl
call
fnstsw
sti
xchg
int3
push
pusha
in
arpl
das
loop
cmp
sbb
pushf
sub
loope
ret
jae
std
imul
pusha
ja
jecxz
pop
rol
push
mov
scas
nop
inc
push
and
jecxz
sub
mov
adc
inc
adc
jb
jp
in
push
pusha
inc
push
add
push
sbb
mov
fstp
les
mov
push
lock
loop
test
jbe
(bad)
fnsave
inc
pop
dec
test
call
jmp
add
and
cmp
int
add
rol
xchg
adc
pop
pop
sub
ds
loop
mov
cmp
and
cmp
cli
movs
jecxz
mov
dec
jp
ins
ja
call
inc
pop
gs
outs
stos
and
sbb
xchg
xor
sub
arpl
stos
and
loop
aad
in
mov
mov
(bad)
jno
push
mov
addr16
gs
js
jp
xchg
xchg
div
sbb
clc
add
push
and
xchg
cmps
sbb
(bad)
loop
push
mov
pop
pop
jmp
shl
(bad)
repnz
outs
fnstcw
imul
sbb
cmp
fild
(bad)
xchg
add
xor
test
cdq
popf
cwde
call
or
xchg
inc
sbb
mov
ret
jb
push
es
push
cdq
mov
mov
lea
dec
adc
dec
sbb
xor
daa
call
inc
stc
fadd
scas
aam
out
iret
addr16
sub
inc
ret
sahf
sub
xchg
rdpmc
mov
cwde
sbb
bound
jb
mov
push
inc
enter
in
addr16
push
push
mov
dec
retf
popa
or
jnp
fidivr
or
in
rol
sub
pop
sub
sar
add
mov
dec
mov
sub
sub
dec
sbb
and
and
inc
sub
dec
fild
fimul
mov
int3
jp
fwait
adc
dec
loope
push
(bad)
xor
ret
pop
iret
mov
inc
ficom
fstp
sbb
cdq
lahf
inc
fmul
test
daa
pop
push
mov
inc
rcl
scas
int3
pop
int3
push
jmp
push
adc
pop
jb
loop
xchg
fstp
inc
ins
iret
test
loope
pop
mov
imul
jecxz
push
jge
sbb
bound
(bad)
daa
push
ja
xor
sti
lods
cmc
mov
in
adc
xchg
shl
inc
and
(bad)
mov
jnp
and
xor
ss
push
or
out
adc
js
mov
mov
mov
sub
cld
pop
sahf
mov
fldenv
fs
inc
mov
or
call
dec
int3
jae
add
fs
xchg
cmp
in
jle
(bad)
imul
dec
sbb
xor
lahf
mov
int3
iret
daa
lea
mov
out
pusha
lea
dec
in
fidivr
mov
xlat
pop
and
hlt
push
sub
xchg
cmp
popf
inc
xlat
(bad)
std
lods
into
retf
xor
lods
xchg
ror
fld
es
ja
scas
outs
stc
jns
hlt
leave
push
push
ret
mov
fs
xchg
and
push
mov
out
movs
aam
and
addr16
loop
push
das
pop
add
pop
retf
jl
and
mov
fdiv
(bad)
loop
adc
(bad)
pop
rcl
pop
das
lods
xor
ja
mov
shl
lock
mov
push
or
push
mov
add
in
push
push
dec
pop
mov
popf
shr
or
jecxz
jo
xor
sub
jmp
add
pushf
lods
push
xchg
pop
or
hlt
mov
loopne
add
es
and
addr16
jg
sub
xor
push
dec
xchg
lods
(bad)
dec
(bad)
xor
pop
xor
add
inc
push
xchg
out
pusha
pop
and
sub
scas
fbstp
in
xor
mov
dec
push
(bad)
in
mov
outs
pop
and
pop
adc
js
inc
fucom
sbb
retf
imul
rcl
xor
adc
lds
jnp
fs
outs
inc
fs
out
movs
gs
(bad)
mov
stos
mov
enter
call
push
sbb
fs
ja
lods
push
call
ret
repnz
xchg
sar
xor
sti
and
popa
stc
pop
sub
adc
out
bound
push
inc
or
into
and
add
test
stc
mov
outs
xchg
dec
aas
jbe
jbe
pop
and
test
int
loop
add
jbe
(bad)
fnstsw
mov
cmp
shl
jns
xor
jmp
cli
and
inc
sbb
in
xor
stos
jmp
popa
scas
inc
shr
popa
shl
fisubr
push
enter
or
nop
push
xchg
pop
lea
dec
fisub
hlt
rcr
mov
sbb
mov
mov
add
push
push
pop
stos
and
or
outs
pop
cmp
add
sbb
push
in
xor
add
loop
jecxz
push
dec
adc
sub
loop
push
addr16
mov
lods
xor
pushf
ss
xor
je
sub
adc
push
psubd
icebp
mov
out
inc
std
aaa
aam
sbb
lods
dec
in
shl
xor
jmp
push
movs
inc
or
pop
inc
xor
adc
ror
fld
pop
(bad)
sti
jl
adc
push
jl
(bad)
(bad)
mov
pop
cmp
adc
push
retf
mov
fld
outs
xchg
pop
jmp
enter
dec
or
add
neg
pushf
sahf
cmp
sbb
std
xor
push
ss
(bad)
jmp
mov
dec
mov
test
fld
ins
mov
inc
jp
push
and
lea
inc
int
pop
sbb
out
das
aaa
cmp
mov
or
push
cmp
mov
repnz
and
(bad)
adc
jnp
mov
or
dec
mov
sub
and
scas
into
std
leave
loop
stc
and
mov
add
clc
push
xchg
and
les
loop
shr
jmp
dec
lock
mov
loope
cmp
arpl
push
in
scas
(bad)
xchg
jle
mov
fimul
jle
ins
pop
loopne
push
pop
xchg
jo
mov
sbb
mov
loopne
xchg
push
outs
dec
xor
enter
shr
hlt
outs
add
push
repz
lods
or
scas
add
(bad)
nop
xchg
push
pop
dec
jo
aad
lea
mov
xor
repnz
sbb
fisubr
jmp
test
pop
add
mov
cmps
cmp
xor
(bad)
imul
sub
popf
mov
fidiv
xchg
xchg
retf
inc
or
push
xchg
les
cmp
cwde
add
jp
dec
div
push
pop
and
leave
shl
jne
jmp
jle
dec
movs
dec
in
push
rol
in
fsubrp
fchs
sbb
jmp
jg
mov
xchg
add
sub
pop
mov
pop
mov
pop
sub
inc
movs
jle
xor
lahf
and
adc
loope
aas
xor
jge
xor
jl
mov
fistp
cs
pop
xchg
movsx
add
pop
outs
hlt
(bad)
mov
push
loope
loopne
aad
mov
es
inc
xchg
into
mov
shr
stos
mov
ret
stos
out
mov
cli
in
in
mov
pop
daa
push
adc
inc
daa
dec
add
mov
xor
adc
retf
jle
jbe
sub
add
pop
imul
hlt
dec
enter
fwait
inc
cmp
mov
imul
sbb
cmp
in
add
cpuid
add
into
sar
xlat
and
inc
(bad)
loopne
inc
adc
rcr
(bad)
imul
inc
jb
inc
clc
ds
mov
and
movs
jnp
xchg
pop
sbb
test
aad
enter
pushf
pop
pop
mov
pop
push
ds
add
sti
mov
cli
dec
or
out
pop
in
fs
sti
jge
fs
push
loop
fucom
cwde
outs
ja
push
cmp
std
addr16
xor
cdq
jb
div
fbstp
movs
dec
shl
add
fidiv
sub
std
pop
or
fcmovb
test
aas
xor
cmps
(bad)
dec
mov
cmp
enter
ins
dec
in
pop
test
add
jnp
lock
pop
scas
dec
mov
add
dec
mov
xor
ins
dec
fnstcw
cmc
cli
out
fimul
or
leave
xor
popf
xchg
pavgw
into
add
xchg
cmp
loope
ins
sbb
jne
xchg
cli
mov
dec
push
inc
test
sbb
js
mov
xchg
inc
dec
(bad)
in
pop
in
inc
push
ds
in
jecxz
lahf
mov
shl
adc
call
popa
or
mov
or
inc
dec
(bad)
popf
je
sub
movs
jb
xor
push
data16
out
popa
inc
xchg
imul
mov
lea
fdivr
stos
and
mov
inc
mov
ret
adc
lea
add
push
cmps
or
push
jge
xchg
cmp
stos
iret
dec
xchg
or
mov
pushf
push
aas
cmp
fwait
mov
xor
xor
push
enter
jo
pop
daa
cli
sub
pop
outs
shl
xor
xchg
sub
mov
xchg
in
test
(bad)
jl
stos
mov
ins
aaa
mov
scas
push
jno
popf
aad
jg
imul
mov
hlt
sub
idiv
mov
int
fs
dec
inc
xor
dec
push
add
inc
sbb
push
int3
fstp
push
adc
add
jp
jmp
or
aaa
sub
mov
dec
mov
rol
iret
mov
add
(bad)
lahf
stc
and
push
and
ror
add
adc
xor
rol
mov
pop
sub
jmp
push
pop
into
xor
(bad)
bound
pop
pop
mov
addr16
leave
or
pmaxub
or
xchg
xor
lods
int3
sub
xchg
and
lods
cdq
fsub
xchg
adc
cmp
lahf
or
xor
push
pop
mov
dec
sub
lods
jno
loope
mov
out
aad
int3
pop
mov
xor
xchg
test
sbb
fisubr
mov
mov
fidiv
jb
lods
aas
mov
add
sbb
int3
pop
clc
cmps
in
gs
jp
xor
pop
add
sbb
pop
pop
inc
push
mov
ret
ds
push
dec
sub
push
in
rol
shl
fdivp
jbe
adc
pop
loope
jno
mov
xlat
dec
add
mov
std
pusha
push
rcr
sar
push
mov
mov
xlat
adc
ret
inc
cdq
fnstenv
inc
out
lahf
mov
rcr
(bad)
or
pusha
fimul
sub
dec
mov
pop
retf
mov
lods
jnp
xchg
mov
ror
pushf
and
mov
lock
xchg
jnp
add
mov
push
mov
in
jmp
mov
dec
mov
cmp
xor
(bad)
repnz
push
popa
ret
fld
mov
or
rcl
(bad)
out
pop
std
(bad)
daa
cmp
jl
mov
xor
mov
pop
cwde
scas
xchg
push
aad
test
movups
or
adc
mov
and
cs
pop
push
cwde
test
inc
(bad)
nop
jecxz
xor
mul
ret
out
ficomp
jbe
pop
lds
scas
sbb
adc
pop
scas
shr
in
sub
xchg
je
xor
cmp
push
(bad)
xor
lahf
push
push
xchg
adc
xor
cmp
jmp
sub
mov
pop
loopne
cmps
mov
cli
cmp
fisttp
xchg
inc
sbb
inc
in
dec
std
mov
xor
mov
ret
out
dec
mov
jge
jp
jb
jo
add
lods
fwait
xchg
outs
fnstcw
imul
jae
out
pop
and
jo
push
mov
movs
xor
push
sbb
xchg
xchg
dec
dec
mov
mov
fidiv
sub
xchg
stos
test
mov
sbb
imul
fwait
aam
and
cmp
inc
sbb
add
mov
mov
enter
fs
adc
das
shl
fcomp
(bad)
call
jno
ret
cmp
add
cmp
shr
sub
inc
aad
data16
test
sbb
fld
jecxz
test
jl
ss
or
push
ret
xor
xchg
jbe
inc
ficomp
not
sub
pop
mov
add
sub
gs
adc
dec
jnp
mov
shr
popa
test
in
cdq
mov
ins
xchg
loopne
ds
mov
loopne
jbe
dec
retf
popa
xchg
pusha
rcl
cmp
mov
xchg
adc
inc
outs
xchg
xor
mul
jl
mov
dec
jle
xlat
and
pop
jge
mov
pushf
cmp
jge
jae
dec
dec
cmp
retf
cld
mov
fld
xor
and
mov
jg
js
sbb
(bad)
dec
fdivr
adc
xor
jecxz
mov
je
pop
sbb
and
fisub
out
jnp
lock
push
pushf
sbb
adc
mov
adc
in
jmp
push
cmp
pop
mov
add
aas
cs
jp
cwde
fwait
push
inc
fbstp
stc
pop
jecxz
or
test
retf
stos
xlat
mov
sbb
or
or
mov
jmp
mov
popa
outs
call
retf
es
aam
mov
mov
and
mov
push
pop
and
xlat
cmc
xchg
xchg
pusha
push
xor
adc
pop
stos
movs
mov
dec
loope
adc
(bad)
jle
push
sbb
mov
cmp
sti
sbb
xchg
jmp
(bad)
outs
add
xchg
push
fst
fstp
retf
mov
(bad)
mov
push
cli
nop
jl
jle
mov
in
out
std
mov
fst
jp
jecxz
sub
jb
dec
xchg
inc
push
inc
cmp
inc
in
xchg
inc
mov
inc
push
pop
mov
js
jmp
out
dec
jno
inc
pushf
inc
pusha
mov
mov
xchg
sub
ficom
dec
sbb
add
rcr
jns
push
mov
mov
popf
push
mov
mov
jg
sbb
pop
(bad)
rol
stc
stos
retf
and
and
outs
jmp
and
xor
inc
js
mov
xor
dec
mov
enter
add
mov
inc
mov
mov
pop
pop
ror
and
and
lds
or
xchg
movs
pop
jmp
and
or
dec
lock
push
imul
fsubr
jns
xor
pop
bnd
outs
movs
fcomp
push
call
mov
jbe
adc
fwait
(bad)
pop
or
das
lock
cmp
vmovmskpd
repz
(bad)
jno
div
cwde
fld
retf
jnp
arpl
mov
fist
sbb
test
aaa
push
aas
test
jmp
cmp
movs
cmp
aam
loope
mov
js
pusha
xchg
sbb
bound
movs
shr
or
ret
fwait
mov
and
jb
out
inc
mov
mov
mov
mov
and
cs
dec
out
loopne
jmp
xchg
test
fldcw
sar
dec
aaa
daa
shl
push
stos
sar
aam
sbb
jno
sub
mov
mov
cmp
jle
scas
cmp
push
mov
js
cmp
fnsave
mov
xor
jg
jl
mov
add
push
sub
iret
dec
push
push
jnp
jne
cmps
test
jae
test
lods
cmps
and
jge
test
(bad)
adc
inc
sti
xor
cmc
(bad)
jbe
cld
inc
mov
or
inc
jb
(bad)
cmps
dec
lock
dec
call
mov
dec
clc
sub
loop
cmp
cmp
int3
ss
sar
jmp
aam
mov
cli
retf
jbe
xor
arpl
shr
sbb
sub
scas
dec
push
cmp
leave
fptan
(bad)
fsub
push
fstp
xor
jo
jge
inc
ret
sbb
mov
inc
xchg
mov
sub
mov
sub
retf
test
loop
sub
in
mov
ds
mov
xor
cdq
in
mov
cmp
and
mov
or
xchg
ja
xchg
aad
pop
jae
and
push
push
(bad)
mov
jno
icebp
test
(bad)
pop
test
cmp
outs
imul
mov
fmul
add
rcr
push
movzx
retf
scas
ja
pop
adc
xor
sub
sub
push
add
out
retf
setge
mov
jecxz
movs
pop
sub
pop
and
jno
xchg
clc
lea
sar
inc
ret
jno
xchg
leave
shl
or
mov
pop
pop
ret
mov
cmp
in
addr16
mov
mov
fsubr
mov
jmp
jno
push
je
mov
sahf
outs
arpl
popa
test
push
cmp
retf
pop
stc
jge
cmp
not
popf
xchg
fsub
add
fld
mov
jle
add
dec
loope
outs
xchg
push
int
fist
aaa
fimul
add
lods
xchg
or
mov
sub
mov
push
fsubr
fistp
xchg
sub
sub
adc
cmp
mov
in
adc
pusha
and
lds
cmc
and
test
push
pop
pop
stos
mov
movs
(bad)
imul
xor
iret
xchg
mov
fcmovne
push
mov
aas
cli
and
fistp
mov
push
imul
push
ins
stos
sub
(bad)
shl
mov
es
jge
dec
inc
ret
or
sbb
ins
imul
dec
or
or
enter
jp
inc
jp
xor
sar
(bad)
cmp
pop
clc
ins
mov
ret
mov
push
shr
push
cld
test
loopne
or
sub
std
test
mov
(bad)
mov
pop
out
fcomip
jecxz
sbb
and
loop
stos
inc
es
outs
test
and
adc
das
mov
fisub
pusha
inc
mov
or
sub
jo
mov
sub
mov
icebp
xor
arpl
stos
sub
xchg
push
movs
xor
movlps
stos
(bad)
in
push
sahf
test
add
xor
das
sub
sub
sub
in
xor
mov
sahf
sub
mov
shl
push
xor
push
pop
fwait
fwait
cmp
xchg
stos
ja
or
add
sti
push
pop
mov
inc
xchg
and
shl
lahf
and
aaa
das
fwait
ds
xor
xchg
retf
retf
sub
iret
jnp
stc
(bad)
jne
jg
ss
cmp
push
jg
fwait
cmps
jp
push
lods
dec
inc
jne
add
mov
pop
mov
cmp
cli
jecxz
out
cmps
aad
xchg
xor
xor
and
iret
ror
loopne
(bad)
or
shr
repnz
inc
jge
cmp
or
out
jge
hlt
dec
or
les
ins
in
push
imul
lss
ret
test
outs
cmp
adc
adc
cmp
xor
jmp
loop
dec
daa
ins
add
mov
xchg
add
dec
scas
pop
not
or
div
test
(bad)
pop
out
sub
pop
loope
sub
pop
hlt
movs
mov
es
ret
push
je
xor
mov
gs
jl
xor
out
mov
mov
cmp
cwde
pop
xchg
pop
mov
inc
and
xchg
gs
jnp
call
dec
loopne
data16
icebp
push
sbb
pop
pop
lahf
scas
aam
jg
pop
test
enter
and
cmp
add
inc
add
push
cmp
inc
cs
mov
mov
in
pop
idiv
test
sbb
scas
and
sbb
jmp
cmc
pop
mov
jbe
sub
ss
add
les
push
sub
mov
je
fcomp
xchg
enter
mov
fisttp
inc
add
jl
(bad)
loop
enter
sti
loope
add
outs
add
ss
mov
mov
mov
mov
jnp
(bad)
call
mov
pop
mov
jae
les
cmp
sub
test
adc
ss
mov
getsec
ds
and
popf
imul
xor
lods
or
sbb
imul
inc
pushf
mov
call
jmp
cwde
ficomp
and
pop
sahf
in
mov
xchg
bound
dec
pusha
jecxz
scas
xchg
(bad)
call
sar
pop
mov
sbb
push
fs
shl
lahf
and
fisttp
fcmovne
iret
sahf
mov
xchg
popa
adc
or
test
xchg
adc
jo
add
rcr
push
adc
test
loop
xlat
xor
pop
mov
cmc
mov
movs
arpl
xchg
cli
jb
sbb
(bad)
push
sar
iret
add
int3
push
jnp
addr16
sti
push
je
xchg
mov
(bad)
(bad)
(bad)
jmp
lahf
jnp
(bad)
out
jo
nop
out
push
frstor
jle
ins
pusha
cs
jge
leave
sbb
mov
cmp
xchg
movs
iret
pop
daa
xor
cmp
mov
popf
inc
add
push
mov
mov
and
ficom
(bad)
inc
lahf
iret
iret
mov
fadd
cmp
mov
(bad)
sub
cdq
icebp
out
and
or
inc
addr16
popa
inc
adc
mov
sbb
std
hlt
out
sbb
sub
out
inc
movsx
hlt
mov
xchg
sbb
mov
xlat
mov
xchg
xchg
and
icebp
pop
and
xchg
jbe
inc
cmps
cdq
fild
dec
sub
clc
add
aam
(bad)
xor
adc
inc
ins
add
xchg
fwait
ins
push
imul
sbb
jae
sbb
sti
inc
push
pop
jne
push
outs
push
adc
push
stc
sub
xchg
mov
pop
(bad)
dec
xor
sbb
pop
sti
fs
(bad)
repz
pop
jge
add
test
rol
aad
fsub
sbb
mov
les
xchg
mov
lock
inc
out
ss
cmps
fisubr
(bad)
xlat
jl
in
aam
movs
and
stc
fdivr
lea
aas
push
cmps
ins
ret
adc
or
or
cmp
push
inc
ds
xchg
cmp
xlat
pop
retf
dec
mov
ins
push
cs
xchg
rcr
inc
cmp
test
jmp
push
jnp
jne
pop
and
mov
push
or
xchg
cmp
cmc
xchg
cmps
fimul
mov
rcl
pop
mov
call
int
icebp
and
cs
cli
xchg
cmps
jmp
inc
xor
or
stc
push
jne
jmp
lods
enter
push
fisub
gs
cmp
jns
mov
xchg
dec
push
cmp
ds
(bad)
cmp
(bad)
sub
in
ret
test
jecxz
test
pop
push
cmp
xchg
inc
repnz
(bad)
movs
rcl
rcr
mul
dec
or
retf
or
and
sub
xchg
sti
mov
mov
sub
popf
or
add
pop
xchg
sbb
jb
push
push
inc
std
push
fs
add
test
leave
add
jnp
pop
push
je
and
icebp
call
and
jae
js
dec
sub
test
dec
test
pushf
cmp
fstp
and
hlt
sub
sbb
add
cmp
outs
mov
sub
retf
xor
jae
dec
dec
dec
cmps
shr
in
pop
pop
in
scas
(bad)
stos
repz
fsubr
mov
ret
hlt
fnstsw
dec
(bad)
or
mov
cmp
dec
jne
movs
fcomp
shr
mov
movs
mov
sub
stos
and
retf
jo
mov
add
mov
dec
mov
cmp
fst
enter
popf
(bad)
jb
in
sbb
ds
sar
and
xlat
cmp
int
inc
xchg
or
aad
and
ror
aam
push
inc
lods
sub
inc
xchg
fisubr
xchg
mov
push
je
dec
mov
mov
mov
pop
int
xor
sub
and
pop
sti
repnz
test
gs
rcr
sub
xchg
mov
or
mov
sub
mov
dec
pop
aad
adc
aaa
and
(bad)
test
mov
jle
or
into
mov
stos
imul
(bad)
sub
jmp
call
or
popf
or
fidivr
rcl
int
jecxz
mov
mov
cld
dec
paddsb
adc
fistp
imul
inc
fmul
jae
dec
adc
(bad)
iret
sbb
mov
data16
movs
xchg
leave
cdq
vdivss
or
hlt
or
loope
push
cld
std
pop
stc
cmp
add
ficomp
mov
ret
imul
cmp
push
xchg
pop
adc
popa
adc
leave
mov
cmc
and
ficom
out
add
dec
das
test
pushf
jbe
dec
pop
and
sub
mov
or
cdq
test
dec
add
adc
inc
nop
or
xchg
aas
xchg
ror
loopne
addr16
test
cmps
icebp
js
and
cmp
in
jp
pop
inc
mov
push
(bad)
fnstenv
sbb
inc
int3
(bad)
fnstcw
movs
xchg
test
mov
popa
pop
iret
inc
ror
imul
mov
pop
xchg
loop
and
xor
sti
sahf
sub
mov
jmp
inc
push
lods
call
enter
icebp
pusha
rdpmc
mov
loop
mov
or
and
cmps
mov
xchg
mov
pusha
ins
nop
and
push
retf
scas
ror
jb
or
mov
test
ins
xchg
(bad)
sbb
js
jl
loopne
add
xchg
mov
es
mov
mov
adc
outs
or
pop
rol
or
imul
push
mov
(bad)
mov
jl
out
shl
(bad)
fcomp
(bad)
out
repnz
scas
adc
adc
jbe
(bad)
mov
test
clc
or
fnstenv
fwait
push
fisttp
mov
fild
call
icebp
xor
jmp
dec
lock
jmp
ret
mov
out
and
mov
and
cmps
sbb
adc
clc
in
aas
dec
into
mov
push
xlat
jo
mov
pop
dec
call
pop
retf
ds
cmc
mul
inc
xlat
popf
faddp
call
xchg
xlat
std
mov
sbb
int
dec
stos
enter
lahf
mov
jge
or
cdq
cs
jb
pop
mov
mov
data16
rcl
jl
aaa
fcom
xlat
ret
push
jne
cmc
dec
or
pop
adc
aam
outs
cmps
push
inc
not
popa
jae
mov
or
lea
loopne
out
inc
sbb
or
xor
jb
int3
inc
xlat
and
aam
mov
mov
in
mov
or
in
jne
sub
mov
mov
retf
xor
stc
stc
and
call
jb
pop
jbe
(bad)
popa
jg
mov
push
sbb
lock
ss
ins
frstor
mov
lods
rcr
aam
adc
and
imul
mov
sbb
jbe
sbb
pushf
push
pushf
mov
inc
pop
aaa
(bad)
repnz
and
mov
xchg
lods
jecxz
adc
in
push
or
fldenv
das
sub
pop
xchg
je
aas
or
sub
mov
sbb
cmp
call
pop
cmc
mov
sbb
sbb
inc
out
dec
jmp
movs
dec
imul
cwde
mov
push
cdq
xchg
push
jp
add
dec
sbb
pop
stos
mov
in
push
test
loopne
push
mov
leave
test
rcl
or
ja
xor
daa
add
sub
mov
out
cdq
pop
mov
mov
cmp
sbb
cmps
pop
add
fstp
into
repnz
cmp
jle
ja
cwde
xchg
sub
call
sub
repnz
push
inc
aaa
and
inc
sahf
rcl
xchg
and
arpl
push
inc
dec
inc
rol
push
int3
cmp
pop
inc
adc
dec
shr
and
in
fcmovbe
iret
pushf
sub
lods
sti
cli
les
movs
stc
jbe
mov
push
repz
in
sbb
in
mov
push
mov
(bad)
jb
inc
lahf
and
fist
and
sub
cli
push
rcr
arpl
hlt
and
or
pusha
inc
lahf
inc
(bad)
jns
dec
push
dec
ror
push
jo
mov
lock
(bad)
or
mov
jecxz
jbe
leave
mov
in
inc
cdq
test
or
sar
ins
mov
push
adc
lea
addr16
ins
aam
cs
and
mov
jmp
mov
movs
shl
cdq
and
cmp
aas
lock
sub
std
gs
fistp
test
ffreep
test
push
inc
les
out
and
lahf
and
push
jnp
pop
out
and
cmps
adc
xor
jmp
iret
test
adc
inc
in
dec
mov
and
jmp
fadd
pusha
lods
aam
adc
jecxz
mov
rol
push
ffree
pop
mov
xor
aad
ret
mov
movs
ret
repz
cmp
xchg
pop
xchg
call
mov
pop
rol
add
into
pop
push
idiv
or
pop
int3
test
sub
(bad)
int3
adc
mov
push
adc
jecxz
add
dec
fstp
pop
xor
or
call
jl
test
nop
cli
cld
stos
fst
pusha
pop
fsubr
iret
int
jne
call
xchg
mov
add
adc
(bad)
mov
in
test
push
sbb
inc
xchg
mov
mov
jnp
fcmovnbe
and
(bad)
mov
mov
xchg
xor
jbe
or
adc
fld
aas
dec
dec
popa
aam
sar
loope
mov
mov
inc
cmp
sbb
mov
stos
dec
cmp
mov
mov
ret
jae
(bad)
rol
(bad)
(bad)
scas
jmp
aaa
push
sbb
(bad)
jns
lahf
(bad)
loopne
outs
daa
cmp
sub
imul
jl
push
pop
mov
xchg
repz
scas
xchg
jg
push
icebp
ds
fmulp
or
or
jo
shl
pop
stc
fistp
mov
js
imul
inc
adc
(bad)
ins
xor
inc
rol
retf
push
adc
js
adc
cld
ins
js
mov
stc
pop
cmp
nop
push
movs
sub
add
pop
pop
ja
sbb
cmps
cdq
in
xor
repz
add
aaa
loope
and
(bad)
xor
sbb
arpl
xchg
xchg
xchg
add
daa
adc
mov
mov
mov
leave
sbb
jge
mov
xchg
nop
div
mov
cmp
test
adc
add
push
aaa
xor
ins
bound
sbb
cmc
sbb
iret
adc
push
jns
mov
ss
jae
retf
(bad)
ds
mov
sub
pop
call
lahf
sub
xchg
mov
push
xor
cwde
and
imul
call
push
js
jbe
dec
(bad)
or
cmp
adc
cmp
aaa
cmp
sub
xchg
inc
push
and
iret
pop
sub
iret
dec
bnd
jb
ret
xchg
outs
outs
ja
jle
pop
inc
lods
xchg
(bad)
add
cmp
sub
mov
arpl
and
lods
sbb
scas
addr16
rcl
mov
icebp
or
mov
sub
ds
jns
sbb
and
add
add
pop
inc
or
fstp
fst
pop
add
add
out
call
stc
cdq
xchg
inc
test
mov
js
xlat
sbb
pop
jmp
mov
sbb
jl
bnd
ins
sbb
out
adc
fwait
(bad)
stc
dec
inc
loop
jno
pop
fld
movs
test
cdq
es
jle
movs
hlt
addr16
xchg
jle
mov
pop
mov
inc
enter
and
jmp
neg
mov
pop
xchg
jns
xchg
mov
out
xchg
mov
lds
sub
inc
jns
adc
push
je
in
in
push
mov
stos
in
and
outs
or
mov
or
adc
mov
add
push
or
mov
adc
out
and
in
cmp
jo
add
and
aaa
scas
mov
call
cmp
add
aad
mov
inc
and
inc
into
lds
es
and
mov
jae
push
or
fwait
sbb
movs
xlat
inc
ins
inc
cmp
out
and
push
pop
jb
add
xor
mov
jecxz
and
fcomp
jecxz
push
fwait
shl
rol
stc
and
push
dec
mov
sbb
pop
add
lahf
data16
loop
xor
(bad)
adc
xchg
fidiv
mov
shl
sub
(bad)
ficom
inc
jmp
ins
adc
push
mov
jae
and
mov
jno
(bad)
adc
cmc
inc
mov
adc
movs
push
add
ror
push
gs
loope
pop
hlt
scas
mov
popa
and
rcl
mov
mov
cmc
inc
inc
mov
sbb
or
adc
pushf
cmp
ror
fbstp
and
mov
push
outs
pop
ror
xor
scas
add
(bad)
jmp
rol
add
cmp
js
xor
ja
repz
cs
stos
icebp
xchg
jle
jo
call
or
xor
ja
cmp
(bad)
dec
add
in
sub
cmp
pop
jo
es
mov
out
mov
mov
pop
sbb
mov
ins
fucom
stc
jne
ret
leave
dec
sub
pop
jmp
inc
mov
outs
jbe
sub
popa
rcl
retf
cmp
aad
push
pop
dec
dec
js
xchg
outs
out
cwde
test
adc
push
dec
add
ds
push
cmp
dec
pop
mov
ins
mov
cmp
or
lahf
leave
cmp
xor
and
jle
inc
data16
xchg
addr16
dec
pop
pop
in
mov
rcl
sti
in
sbb
add
icebp
dec
and
in
and
or
xor
movs
ja
xor
mov
cmp
add
adc
fs
xor
sbb
xchg
retf
inc
mov
dec
add
popf
and
pop
adc
mov
dec
sbb
cmp
push
inc
xor
icebp
or
popf
rol
sub
and
push
jecxz
sub
cmp
leave
aas
out
leave
enter
inc
sub
dec
pop
ror
sub
push
sbb
ins
add
dec
adc
ret
mov
xchg
std
or
cmp
jle
mov
push
int3
push
cmc
adc
dec
es
mov
sub
imul
jo
mov
jb
retf
ficomp
add
mov
sub
imul
js
or
xor
stos
mov
xchg
mov
mov
mov
fdivr
adc
and
adc
or
jns
mov
mov
jecxz
push
push
jb
sar
add
mov
jns
outs
out
mov
int
hlt
rcl
sub
stos
outs
xor
mov
mov
and
mov
jno
sub
adc
(bad)
nop
mov
sub
sub
push
push
lock
(bad)
sbb
add
dec
add
sbb
fld
imul
or
mov
fstp
shl
es
dec
sub
mov
mov
and
lods
ror
mov
and
inc
mov
(bad)
sub
(bad)
shl
dec
jne
ja
imul
aas
xor
mov
es
mov
popa
add
mov
push
cmps
dec
shl
cdq
inc
or
fnstcw
inc
mov
and
adc
data16
clc
arpl
fidiv
cmc
scas
fidivr
or
mov
in
xchg
data16
sbb
and
add
mov
or
sub
out
mov
mov
xchg
adc
pusha
sub
hlt
ret
loop
std
pop
jmp
sahf
mov
rcl
fstp
popf
ins
pop
fimul
jo
adc
push
pop
repnz
jecxz
adc
mov
sbb
sar
mov
add
fs
inc
push
aam
fcmovu
cld
xchg
inc
mov
dec
bound
repnz
lods
adc
ss
push
jle
out
xor
sub
push
(bad)
mov
mov
or
enter
xor
in
jmp
adc
sub
mov
(bad)
sahf
cmp
aas
mov
add
pop
fs
xor
add
pop
xchg
in
lock
les
cs
arpl
pop
fnstcw
mov
sti
xor
mov
pop
and
or
sbb
and
mov
cld
cs
mov
xlat
ret
mov
xchg
daa
jnp
rcr
stc
jge
aaa
cmps
push
xchg
ror
clc
pop
or
add
bnd
xchg
jmp
inc
popf
hlt
(bad)
in
cmp
and
fs
adc
or
loopne
in
jno
jmp
cld
or
mov
pop
mov
test
in
fwait
in
mov
hlt
mov
jae
and
adc
rol
add
lahf
jne
dec
maskmovq
neg
jg
add
movs
mov
in
lods
xchg
mov
lods
dec
xor
mov
xchg
je
or
jge
xor
fsubrp
and
in
fisttp
mov
ror
arpl
xor
clc
lods
cmc
sbb
mov
cmp
(bad)
xchg
cmps
and
(bad)
popf
leave
inc
scas
movs
xor
(bad)
cwde
sbb
jo
scas
dec
int3
stos
cmp
jmp
jbe
push
xor
aas
inc
cmp
das
sahf
push
ds
dec
pop
and
or
adc
mov
out
cmps
push
stos
jbe
jle
ficomp
popf
cwde
or
mov
sbb
popa
hlt
movs
adc
or
xchg
imul
xchg
into
mov
fsubr
mov
push
icebp
clc
push
push
repnz
hlt
sub
repnz
lock
mov
arpl
push
ins
mov
cmps
and
mov
cdq
nop
mov
pop
add
xchg
cmc
push
mov
fidivr
ret
sahf
add
jbe
adc
popf
push
out
jp
dec
pop
or
jmp
adc
shl
cmp
(bad)
test
mov
sub
(bad)
inc
cli
xor
dec
jns
mov
fmul
mov
rol
add
hlt
(bad)
and
mov
into
loope
cmc
sub
sbb
(bad)
hlt
stos
aad
(bad)
mov
pop
test
xchg
sub
adc
push
imul
aas
jne
mov
sbb
pop
(bad)
lods
or
cmc
pop
push
mov
aas
(bad)
fist
jae
out
xchg
jl
push
in
jmp
and
stc
cmp
inc
les
js
jo
outs
retf
xchg
xchg
out
pop
add
jecxz
dec
inc
push
scas
ds
pop
jl
xlat
mov
jmp
xchg
mov
push
arpl
jbe
sbb
(bad)
out
sub
retf
div
xchg
add
or
lea
sub
inc
push
or
fucomip
sar
xor
cmp
retf
cmp
sar
pop
retf
pop
ins
shl
loop
test
pushf
aad
test
xchg
sub
sbb
in
mov
cmp
pop
inc
pusha
cmp
push
sbb
out
ret
sti
push
xor
popf
mov
out
nop
xchg
cmp
bound
test
mov
popa
mov
inc
cmp
mov
sub
out
mov
inc
add
jge
repnz
outs
dec
mov
xor
jbe
jle
or
aam
lds
add
js
ins
xchg
mov
(bad)
in
mov
push
jmp
int
scas
icebp
inc
lds
cmp
(bad)
xchg
inc
nop
out
pop
enter
and
stos
jge
(bad)
push
or
gs
cmps
jmp
fdivr
movs
(bad)
out
jns
mov
and
or
inc
dec
xor
loope
lods
xor
popa
fwait
push
in
lods
pop
cmps
mov
test
dec
sub
nop
sbb
sbb
(bad)
movs
in
cli
inc
sbb
enter
mov
xchg
xor
or
mov
int3
add
inc
nop
shl
clc
repz
adc
dec
jo
outs
lea
out
mov
ror
push
sub
inc
clc
imul
lods
or
imul
xor
push
adc
je
jno
daa
and
jb
fistp
sbb
xor
sbb
sub
int
cmp
aam
push
iret
pop
mov
mov
mov
lds
mov
and
jbe
lock
gs
movs
xchg
not
cmp
fwait
cmc
adc
pop
add
ror
out
test
out
and
push
imul
popa
jge
and
fdiv
imul
sbb
lea
shl
popa
and
inc
in
mov
bound
sub
fldcw
xlat
pop
jo
fldl2t
mov
cmp
stos
aam
cmp
jg
jo
icebp
mov
push
sbb
popa
dec
test
push
pop
sbb
jmp
mov
push
cmc
iret
into
outs
adc
mov
push
xchg
add
and
inc
addr16
mov
mov
das
xchg
mov
jge
lods
sbb
adc
and
sbb
push
sub
add
sub
test
inc
lds
mov
jnp
sub
xchg
push
mov
mov
aad
sbb
test
in
cdq
in
xor
std
pop
or
push
xor
sbb
jl
dec
inc
xchg
push
dec
mov
push
daa
gs
jmp
rol
(bad)
dec
sbb
ins
arpl
movs
icebp
leave
(bad)
cmp
loop
or
add
mov
xchg
hlt
cmp
jmp
enter
sub
cmp
mov
push
xor
xor
pusha
cmc
int
imul
cwde
(bad)
icebp
enter
(bad)
test
adc
jno
jno
jbe
shl
jnp
mov
jbe
test
jl
adc
js
xor
das
shr
jne
cmp
jle
cmp
sub
test
push
mov
or
adc
gs
or
pop
mov
aad
rol
into
into
shr
pop
mov
fiadd
sub
xor
mov
mov
je
sub
cmps
inc
dec
pop
jnp
mov
mov
cmp
ins
div
and
clc
jmp
dec
in
aas
js
cmps
xchg
jo
leave
adc
sbb
fdiv
jp
bound
dec
jae
lods
ss
lahf
jae
pop
ja
xchg
inc
out
mov
icebp
ffreep
out
xor
hlt
pop
mov
adc
mov
rcl
sub
push
fdivr
lods
loop
mov
xor
push
inc
dec
int3
retf
and
push
add
add
outs
lods
mov
in
scas
mul
mov
(bad)
adc
mov
xchg
cwde
xor
mov
cmp
stos
retf
pop
lock
xchg
mov
pop
mov
clc
mov
push
loope
movs
jl
(bad)
test
jl
add
cld
mov
cmp
and
ins
cmps
fwait
(bad)
bound
ins
dec
mov
push
xchg
loopne
jo
pop
xchg
ret
push
sbb
jbe
leave
cmp
outs
es
dec
mov
sub
cld
xchg
arpl
lods
(bad)
jb
xchg
std
sbb
adc
jecxz
or
rol
stos
cld
cmps
das
jmp
or
test
push
scas
inc
push
xlat
and
xchg
mov
mov
jle
jnp
int3
aam
push
pop
jae
xchg
pop
push
outs
stos
stos
repz
mov
pop
dec
cmp
pop
pop
mov
out
aaa
xchg
std
inc
jge
sbb
hlt
dec
sub
sub
fstp
adc
mov
scas
adc
jmp
and
xor
jo
scas
in
test
mov
pushf
test
call
cmp
dec
push
jge
shr
and
leave
cs
ins
das
aam
mul
sbb
push
mov
cmp
push
mov
shl
jbe
inc
pusha
scas
sti
clc
xor
daa
retf
inc
aaa
push
loop
push
cli
add
xor
retf
nop
mov
dec
lea
dec
das
ret
or
mov
lds
test
and
push
loope
or
adc
mov
push
outs
or
mov
dec
mov
push
out
icebp
cmp
xrelease
jmp
aas
push
cmp
stos
mov
ret
lods
xchg
fwait
mov
call
outs
push
mov
dec
mov
push
and
popf
repz
dec
push
stos
repz
mov
pop
jne
dec
int
div
aas
leave
xchg
jmp
(bad)
repnz
mov
ja
fiadd
push
fcmovu
push
cmp
adc
mov
push
(bad)
jg
icebp
mov
sbb
mov
in
mov
fidivr
pop
imul
mov
jb
pop
cwde
sbb
and
ins
xlat
sbb
in
or
pop
or
xchg
mov
sub
aaa
adc
cdq
fistp
lods
daa
xor
sti
push
or
and
jmp
enter
dec
lahf
out
mov
popa
mov
ss
enter
out
(bad)
cmp
jge
mov
das
add
sub
dec
cmp
adc
xchg
call
mov
test
test
ins
sub
pushf
cmps
cmp
mov
sbb
sahf
cmp
add
enter
lahf
iret
retf
cs
sub
aam
jmp
std
pop
stos
jbe
lea
ret
bound
inc
inc
sbb
retf
jae
into
lea
(bad)
fnstcw
pop
jl
repz
nop
dec
fidiv
ins
pop
lock
sahf
je
retf
dec
inc
(bad)
mov
jnp
rcr
xor
or
lock
adc
mov
pop
out
and
pop
push
scas
leave
mov
xor
sbb
push
js
jg
inc
inc
sahf
add
mov
and
ror
call
imul
enter
in
adc
lock
fs
test
int
add
and
(bad)
dec
xchg
push
retf
cs
xchg
cmp
loope
ins
cli
mov
xchg
ins
aas
push
cmp
scas
push
retf
in
push
jnp
push
dec
push
jnp
cwde
cmp
jl
dec
xchg
(bad)
pop
jle
addr16
leave
(bad)
push
jne
add
outs
mov
cmps
adc
in
mov
xlat
data16
jmp
xor
inc
pop
xchg
int3
adc
inc
mov
ins
ret
sbb
xor
stos
mul
lods
dec
sub
inc
pop
iret
pmaxub
xchg
sbb
popf
test
mov
push
ds
jns
repz
xchg
mov
test
ss
mov
adc
xor
xor
or
add
mov
les
neg
cmc
dec
or
movs
(bad)
rcr
xchg
jg
imul
les
daa
or
imul
mov
jmp
movs
ret
das
push
loope
imul
mov
inc
ret
push
out
jno
cld
jmp
ins
fimul
repz
and
(bad)
(bad)
mov
(bad)
icebp
add
xlat
and
lahf
push
int
ins
ja
jne
shl
adc
push
pop
adc
mov
ret
cdq
mov
inc
in
retf
mov
or
cmp
ret
push
ja
push
push
test
mov
adc
cwde
aaa
les
addr16
sbb
mov
adc
(bad)
add
es
loopne
dec
test
dec
add
setnp
xor
push
in
pop
daa
sub
add
test
pop
arpl
jge
mov
pop
mov
mov
jecxz
ffree
test
sbb
mov
out
neg
scas
repz
inc
add
xor
mov
(bad)
retf
fisttp
cli
inc
adc
adc
call
jnp
jo
push
scas
fcmovbe
test
aad
sahf
mov
cld
popf
dec
ret
mov
xor
inc
(bad)
mov
xchg
xchg
xor
inc
mov
xchg
cwde
cli
xor
mov
sub
mov
cmc
add
jecxz
shl
pop
mov
loop
pop
les
mov
cdq
cmp
cdq
rol
(bad)
push
ds
pop
into
mov
int3
js
jno
mov
sahf
mov
adc
jp
jecxz
(bad)
movs
pop
xor
nop
pusha
iret
adc
and
lahf
mov
ins
lods
or
cmp
xor
out
mov
sbb
in
sub
jge
outs
push
clc
repz
jns
mov
fistp
adc
pop
cmp
repnz
test
and
sub
test
(bad)
movs
loope
mov
mov
test
rol
fstp
jb
shl
scas
adc
cli
out
ins
mov
mov
mov
jg
push
ins
scas
push
push
jbe
clc
jmp
aam
mov
sub
int3
pop
xor
movs
retf
dec
rcl
(bad)
pop
stc
pop
dec
sbb
push
(bad)
and
ss
add
inc
push
fnstsw
int3
leave
mov
mov
mov
ins
(bad)
fst
cmp
ror
pop
xor
test
add
jmp
icebp
inc
leave
jb
xor
leave
ss
add
pushf
jae
out
mov
cmps
or
mov
pusha
rol
add
pop
push
cmps
es
dec
add
clc
pushf
dec
push
call
jle
out
add
ret
dec
and
mov
push
sbb
push
mov
sbb
popa
jnp
inc
mov
push
popf
aam
mov
out
mov
pop
push
mov
mov
cmps
imul
call
push
aaa
pop
mov
dec
clc
fimul
pop
cmp
fidivr
imul
push
dec
fimul
add
jle
jp
pusha
mov
enterw
sub
sub
pop
pop
push
shl
sub
inc
mov
sbb
imul
xor
pop
out
add
cmp
adc
dec
xor
mov
and
sub
pushf
rol
addr16
sub
repnz
jg
mov
cs
mov
dec
mov
fwait
adc
stos
jl
xor
cmps
push
cmc
sbb
add
mov
or
xchg
(bad)
pop
ficom
and
and
sbb
inc
in
out
mov
bound
cmp
mov
outs
ss
mov
movs
daa
inc
sbb
pop
rcr
(bad)
cli
not
push
dec
fs
jae
xchg
lahf
mov
in
pop
push
ins
imul
movs
jo
out
jl
mov
hlt
dec
pop
aas
mov
add
adc
aaa
rcr
imul
xor
stos
adc
data16
mov
outs
cwde
sub
jle
xor
xchg
lock
(bad)
xor
jmp
jp
ror
push
loopne
data16
add
xor
or
inc
aam
pop
rcr
enter
loope
add
add
lods
push
call
imul
jnp
aas
icebp
mov
and
loop
dec
ins
(bad)
imul
aas
pop
js
pop
rol
aad
int
fisubr
cmp
add
adc
ins
cmp
jmp
push
cmp
mov
push
pop
add
adc
fimul
mov
and
jbe
bound
and
push
mov
inc
jnp
pusha
scas
cs
dec
jecxz
movs
sub
add
inc
add
pop
mov
sbb
pop
cmp
sbb
or
mov
cdq
inc
or
pop
inc
pusha
add
movs
mov
mov
add
popa
sbb
push
mov
cmp
cmp
lock
xor
mov
ss
dec
inc
js
stos
and
hlt
lock
js
sub
jecxz
fcmovnu
(bad)
add
xor
push
aad
jno
cdq
push
retf
mov
dec
(bad)
sbb
shl
mov
stc
pop
(bad)
fistp
int3
(bad)
shl
mov
mov
mov
loop
add
xor
ins
inc
ins
aas
mov
or
lock
mov
cmp
sbb
mov
je
gs
ret
ss
loop
xor
test
lods
dec
inc
shl
inc
outs
pop
cmc
loopne
outs
xchg
mov
inc
inc
int3
pop
aaa
mov
ucomiss
in
aaa
cs
mov
inc
mov
inc
cs
out
jge
cld
xchg
xchg
sub
inc
dec
mov
adc
jo
cli
jnp
stos
ja
adc
mov
pop
cdq
xchg
aaa
les
out
jne
push
into
or
push
push
cmp
outs
push
add
lods
sub
shl
(bad)
ins
jecxz
neg
jmp
dec
sub
inc
call
addr16
mov
jmp
(bad)
dec
jmp
rcr
or
cs
sub
mov
mov
sbb
mov
sbb
fwait
dec
cmp
xchg
stos
out
mov
sbb
outs
ins
or
sbb
push
retf
pusha
imul
mov
xchg
adc
pop
mov
je
inc
xchg
mov
and
mov
lds
inc
cli
scas
pusha
mov
das
push
xor
les
mov
mov
retf
xchg
daa
push
fsub
loopne
mov
inc
jp
jb
(bad)
jae
call
sti
mov
mov
inc
sbb
(bad)
pushf
sub
bound
cdq
mov
sar
sub
lahf
loope
aaa
adc
cdq
jp
nop
inc
push
out
hlt
gs
cmp
pop
inc
sub
mov
push
jns
pop
daa
jns
add
sti
cmc
sar
adc
out
in
inc
pop
add
mov
ffreep
push
aad
out
inc
xchg
mov
add
inc
mov
and
sbb
dec
jecxz
push
mov
test
pop
aam
mov
nop
xor
or
inc
repnz
call
fsub
ds
call
cs
ffree
and
mov
imul
hlt
shr
test
or
sub
jle
jmp
adc
retf
adc
dec
daa
fidiv
and
pop
jge
or
popf
shl
add
xchg
rcr
jb
and
inc
ss
daa
pop
mov
fisub
leave
iret
xor
std
leave
mov
ficom
sub
push
fnsave
cmps
jmp
sub
(bad)
sbb
dec
sub
or
ins
out
popf
shr
aam
adc
cmp
dec
pop
dec
jl
adc
ja
sbb
mov
inc
cmp
in
adc
cmp
aad
jae
jge
iret
cmp
lahf
pop
sub
dec
jl
cld
inc
inc
je
mov
mov
jmp
fsubr
sti
sbb
inc
push
jmp
pop
dec
xor
fwait
jnp
je
inc
adc
sub
dec
sbb
bound
nop
mov
or
push
adc
sub
ret
cmp
cdq
inc
sar
sbb
sahf
jecxz
or
repnz
pushf
xchg
and
inc
ja
in
je
out
xor
ja
push
push
fnsave
in
xchg
imul
inc
inc
outs
sub
popf
xchg
mov
add
and
sbb
in
ins
mov
pushf
lock
ins
jne
sub
dec
dec
mov
jnp
hlt
cdq
shl
sbb
push
xchg
mov
adc
xchg
ret
js
xchg
gs
ins
sahf
xchg
sub
bound
es
jle
div
clc
add
test
popf
les
pop
imul
popa
sub
or
pop
push
push
fimul
imul
or
test
inc
in
adc
push
xor
cmc
sbb
mov
xor
or
xor
out
fidivr
aas
sub
jle
mov
adc
imul
cmp
out
imul
add
add
inc
les
xchg
xchg
or
or
xchg
outs
out
fs
sbb
rcr
stc
pop
shl
in
sub
and
and
int
mov
jbe
ret
(bad)
jmp
mov
outs
mov
mov
loopne
sti
jge
xchg
mov
out
stos
div
in
movs
mov
mov
jg
xor
xchg
pop
stos
pop
(bad)
clc
add
pop
or
xchg
mov
inc
outs
add
div
mov
mov
out
outs
sbb
xchg
mov
std
xlat
retf
inc
mov
or
fwait
or
pop
sub
(bad)
sbb
les
xlat
aas
add
jmp
fsub
out
mov
jg
test
mov
push
push
repz
sahf
xor
hlt
retf
or
add
hlt
add
loopne
xor
enter
fisttp
in
xchg
mov
cmp
cld
les
cwde
mov
fcomp
adc
push
std
stc
mov
sti
xor
(bad)
cmp
hlt
jmp
out
(bad)
call
inc
jns
xor
pop
cwde
push
sub
fs
int3
ret
sub
mov
and
cmp
in
int
push
mov
pop
sti
pop
sbb
imul
int
add
xchg
jp
aad
fs
lock
lds
pop
ret
mov
jecxz
dec
mov
popa
outs
cmp
inc
jecxz
push
xchg
add
loope
push
fnstcw
push
retf
pushf
jns
inc
repnz
lock
into
pop
pop
adc
push
jne
push
daa
out
mov
or
retf
nop
mov
(bad)
ja
pop
int3
sbb
hlt
inc
jnp
jne
xor
add
test
ins
imul
scas
adc
xor
arpl
mov
mov
bswap
xchg
and
adc
(bad)
sub
jge
mov
rol
mov
jne
jmp
ret
mov
dec
ins
(bad)
sar
lea
lods
gs
test
in
xlat
sbb
imul
mov
xlat
xchg
pusha
aas
jge
leave
cdq
pop
xor
(bad)
in
xlat
lock
sub
pop
scas
cmp
xor
jmp
sub
sub
inc
in
arpl
xor
es
push
pop
test
lods
sub
(bad)
and
cli
fisubr
mov
data16
xchg
std
in
je
mov
inc
push
test
add
push
sub
repz
sub
and
jb
pop
int
(bad)
xchg
test
packsswb
mov
xchg
and
lock
fmul
push
xor
mov
fdiv
xchg
mov
lock
(bad)
jmp
lahf
jle
repz
mov
js
xchg
(bad)
ds
sub
xchg
les
stc
mov
push
iret
nop
mov
or
push
mov
fdivr
pop
inc
fcmovb
mov
cmp
add
lods
xor
inc
movs
arpl
(bad)
out
loope
iret
ds
stos
retf
mov
xor
sub
push
(bad)
cld
sub
outs
mov
(bad)
jmp
into
sub
out
xchg
mov
stos
sbb
mov
add
jo
cmp
inc
call
jmp
loopne
mov
ror
dec
push
and
(bad)
mov
mov
lea
pop
mov
cmp
loopne
mov
push
jae
imul
icebp
sub
xor
daa
popa
push
mov
mov
mov
xchg
aad
loope
jae
aad
sbb
push
jl
popa
fstp
es
push
lahf
push
(bad)
ja
pop
dec
iret
push
jmp
loopne
fcomp
xor
popa
pop
cmp
data16
and
mov
cwde
out
xchg
or
int3
push
std
fs
hlt
repnz
ds
mov
fstp
xchg
jecxz
jne
outs
jno
pop
sub
ror
outs
cmps
cmp
add
cmp
out
mov
jnp
int3
jno
inc
push
push
sbb
and
push
adc
or
jae
sub
pushf
mov
jbe
mov
mov
dec
mov
inc
xchg
ins
mov
dec
jmp
test
xor
inc
je
xor
sbb
rcl
mov
in
or
add
sbb
jecxz
mov
repz
push
in
sub
scas
in
and
pop
sub
aad
icebp
xchg
ja
and
adc
int
push
out
in
sub
add
cmp
add
and
outs
xor
ins
(bad)
(bad)
jmp
adc
in
into
out
jle
push
mov
xor
lea
imul
es
hlt
shr
test
(bad)
out
repz
cmp
adc
sbb
in
fst
mov
mov
cmc
stos
pop
push
outs
sbb
lahf
mov
jge
mov
into
jae
fcom
inc
xchg
gs
cmps
push
test
cmp
xor
retf
test
mov
dec
xor
loopne
dec
mov
dec
icebp
jo
cdq
dec
jbe
xchg
stos
rol
pop
push
dec
adc
arpl
daa
cmps
dec
sub
fsubr
sbb
and
dec
sbb
dec
lock
lea
jnp
sub
call
loopne
test
mov
std
ja
mov
lds
add
stc
fwait
xchg
mov
int3
fiadd
mov
imul
mov
xor
repnz
into
ret
nop
aaa
aam
inc
adc
jne
push
retf
popf
xor
stos
push
addr16
jmp
and
push
mov
aam
iret
mov
jecxz
call
imul
or
fucomip
jae
jne
(bad)
shl
push
popa
imul
(bad)
pop
pop
cmps
push
or
xchg
and
inc
pop
cmp
stc
rcl
cmp
dec
int3
push
gs
jbe
ficomp
xchg
mov
(bad)
mov
mov
add
cmp
xchg
in
jne
dec
fldenv
scas
sbb
or
(bad)
push
sub
ror
xor
lds
fldenv
dec
(bad)
cli
or
idiv
rsqrtps
mov
stos
lods
enter
and
fstp
mov
pop
jge
sub
push
leave
cs
mov
outs
pop
lahf
aaa
adc
sbb
cmovno
out
sub
mov
stos
sbb
div
sbb
add
and
jo
outs
(bad)
loop
data16
jnp
mov
(bad)
and
dec
mov
mov
pop
pop
inc
jnp
xchg
es
aas
ins
jmp
xor
jb
push
cmp
ret
sar
pop
inc
jae
push
push
jge
push
into
push
(bad)
xchg
(bad)
cmp
cdq
out
out
fild
pop
sub
dec
and
popf
inc
into
inc
push
xchg
int
repnz
push
mov
ins
xlat
push
pop
and
mov
dec
int3
adc
fcos
jecxz
in
imul
pop
jo
pop
and
push
and
retf
lock
cmp
int
dec
and
test
xor
xor
into
pop
sbb
jecxz
mov
rcl
adc
repz
je
enter
enter
sbb
lods
scas
or
out
mov
dec
adc
cmp
or
cmp
xchg
clc
dec
icebp
into
sbb
cmp
test
jo
or
or
lods
mov
pop
pop
enter
clc
jno
mov
mov
pop
sbb
jl
pop
lock
pop
enter
push
xor
jo
sbb
movs
ret
loope
repz
dec
mov
sub
pop
fild
int3
cmps
scas
ret
scas
das
jle
pushf
pop
cdq
call
jmp
push
mov
bound
gs
test
out
cdq
scas
mov
hlt
data16
mov
sub
xchg
loope
int3
push
mov
inc
lods
cwde
cdq
(bad)
pusha
and
movs
dec
retf
jg
jbe
xlat
jae
cmp
in
sub
pop
sti
mov
or
mov
out
dec
mov
cli
and
sbb
outs
(bad)
int3
(bad)
cld
mov
aam
outs
cld
inc
shl
clc
mov
addr16
jl
inc
(bad)
lock
stos
mov
shl
cdq
icebp
pop
mov
mov
sub
push
mov
cmps
push
into
dec
xchg
xchg
or
pop
mov
jecxz
xchg
aaa
xchg
(bad)
es
pop
xchg
pop
mov
add
ficom
sub
data16
out
dec
ss
lahf
add
leave
sbb
in
xchg
sbb
xor
fisubr
sbb
sbb
mov
push
inc
adc
in
lds
test
pop
neg
adc
cmp
ds
adc
hlt
sbb
xor
sti
jo
cmc
stos
jmp
jl
js
push
stos
out
sar
outs
jp
lods
out
jae
push
(bad)
mov
test
mov
or
ficomp
cmp
loope
adc
pop
std
cmp
sub
ror
inc
mov
aaa
cmp
repnz
into
jb
or
pop
or
icebp
iret
retf
xchg
test
jp
movs
aad
cmp
or
xor
fnstsw
inc
fdiv
movs
(bad)
cmp
mov
mov
mov
movs
enter
dec
mov
fldcw
mov
mov
jg
imul
rcl
inc
dec
repz
sahf
(bad)
mov
or
push
mov
inc
pusha
and
dec
int
jno
cmp
(bad)
call
push
imul
mov
pop
and
aaa
addr16
and
or
or
adc
lds
xor
cmp
jo
cmps
ins
fst
xor
(bad)
and
or
out
xchg
xor
add
lock
rol
xchg
push
push
pop
adc
outs
pushf
mov
add
out
mov
push
mov
sbb
jnp
pop
inc
push
or
or
fwait
aaa
jne
add
imul
shr
outs
test
lock
imul
or
xchg
pop
jle
std
aas
hlt
mov
test
inc
les
rcr
mov
lods
das
and
inc
sar
cdq
lahf
mov
xchg
add
sahf
repnz
sbb
xor
movs
test
in
add
popf
jecxz
sahf
(bad)
adc
xchg
ret
ret
dec
scas
hlt
and
pop
pop
push
aad
repz
cld
mov
out
cmp
rcr
pushf
mov
xor
push
cs
mov
pop
dec
add
adc
mov
jg
in
add
cmp
cmps
mov
cmps
cmp
mov
inc
push
and
movs
pop
lds
xor
inc
dec
dec
push
jge
or
mov
sbb
add
jge
inc
xor
and
fnstcw
add
stos
out
xchg
call
inc
dec
icebp
rcl
inc
push
xchg
push
ins
inc
xor
sbb
cld
jmp
pop
(bad)
sub
iret
(bad)
jg
retf
test
sbb
pop
(bad)
aaa
xchg
repz
test
out
test
adc
ret
jle
fstp
push
lods
sahf
sub
xchg
test
das
cld
xor
sbb
xchg
addr16
fwait
dec
jp
sbb
pop
cmps
lock
pop
push
sub
or
jge
cld
mov
fsubr
mov
xor
cld
or
addr16
je
inc
inc
or
mov
imul
sub
push
mov
das
hlt
in
and
repz
cmp
adc
lods
xchg
sahf
aad
aad
fild
and
mov
inc
xor
cmps
mul
push
ja
mov
dec
loope
xchg
das
jae
jmp
hlt
push
jo
shl
adc
jmp
mov
mov
call
in
sti
and
xor
adc
add
xchg
int3
jno
aad
pop
pop
mov
ja
mov
jl
in
ja
cmps
inc
in
push
mov
movs
test
sub
jne
xor
dec
jo
pop
retf
fs
or
push
mov
xchg
dec
xchg
nop
int
jns
push
hlt
cmps
inc
aaa
les
int3
mov
test
mov
out
into
inc
sub
retf
ficom
push
push
cwde
mov
push
loope
mov
inc
jne
out
mov
fxam
and
jne
mov
pop
mov
and
retf
xlat
inc
inc
fs
add
sbb
outs
pop
neg
xchg
and
retf
in
xor
pop
(bad)
lods
or
aaa
lods
push
movs
jns
jp
and
sti
sbb
push
movs
and
jne
xor
xor
mov
cdq
out
popf
pop
xchg
ins
pushf
mov
mov
and
push
jg
mov
(bad)
adc
inc
test
ds
xor
jl
iret
cmp
inc
(bad)
or
inc
jp
adc
and
aaa
xor
ficomp
(bad)
dec
ja
cmp
(bad)
mov
rcr
ficomp
and
sbb
jb
sbb
sub
sahf
enter
or
or
jne
jge
xchg
push
fild
int3
xchg
repnz
stos
cmp
dec
loope
pop
stos
pop
int3
dec
mov
xchg
jno
add
sub
mov
vcvtss2si
fbld
leave
fcomp
jmp
movlps
sub
mov
cmp
idiv
inc
mov
jl
xor
pop
inc
jo
arpl
sbb
sti
push
push
or
adc
sub
test
sub
iret
mov
mov
jbe
inc
lock
sti
sbb
pop
pushf
inc
ss
std
loopne
sub
jp
repz
jae
enter
movs
adc
pop
hlt
dec
mov
cmp
daa
out
mov
sbb
mov
cmp
aas
xchg
push
test
imul
sti
aas
and
ds
(bad)
jmp
imul
mov
out
jb
jnp
dec
inc
test
(bad)
inc
shl
add
adc
ret
xor
mov
(bad)
pop
repz
sahf
sbb
movs
inc
(bad)
aad
and
pop
(bad)
sub
jp
push
pusha
sub
movs
jb
call
out
xor
clc
fdiv
stos
cmp
xor
test
sub
daa
inc
jnp
jg
push
adc
mov
in
or
retf
out
cmp
xor
js
dec
or
fsubr
aas
or
inc
mov
cmp
ret
out
cdq
xor
mov
push
and
push
inc
pop
outs
cmp
gs
popf
mov
pop
adc
es
ds
inc
mov
mov
xchg
add
push
inc
pop
clc
xor
sbb
ja
stc
ja
stc
ds
out
iret
popa
pop
mov
repz
inc
jmp
inc
sub
add
aad
inc
sub
hlt
xor
cdq
dec
into
(bad)
outs
retf
in
das
aaa
adc
mov
dec
jo
cmp
aas
retf
sub
xchg
clc
sbb
ret
add
xor
call
les
outs
cwde
sbb
fisttp
inc
in
movs
inc
dec
xor
pop
sbb
cld
rcl
dec
add
outs
scas
sbb
stc
sbb
adc
inc
dec
aaa
pop
fcmovnb
push
ficom
mov
or
jmp
mov
lahf
jge
iret
arpl
pop
mov
enter
adc
inc
push
(bad)
dec
daa
mov
fdiv
mov
mov
pop
mov
(bad)
pop
in
xor
mov
test
rol
scas
pop
dec
shl
imul
out
scas
cmp
mov
outs
xchg
pop
addr16
test
mov
sti
div
mov
push
nop
add
cs
push
add
jl
vpaddusw
xor
out
inc
add
sub
imul
jnp
call
sbb
pop
daa
mov
outs
push
in
cmp
mov
xchg
repz
stc
js
out
daa
out
xor
cld
fwait
imul
retf
xlat
dec
clc
fidivr
jbe
fidiv
cmp
int
jp
ds
push
mov
pop
push
fcompp
sbb
cmp
jnp
mov
jno
out
mul
mov
inc
mov
jmp
pop
bound
inc
and
adc
push
sub
or
mov
pushf
push
leave
or
rcr
ja
imul
xor
xchg
loope
adc
dec
mov
in
sub
out
repnz
pop
mov
mov
enter
cs
push
jb
sbb
sub
jmp
nop
xchg
scas
test
stos
stos
sbb
jb
stos
shl
add
jmp
imul
js
fld
push
fld
test
pop
mov
and
push
jno
push
xchg
xor
mov
xchg
in
loop
lock
int
cmc
mov
out
ret
jp
lock
pop
sti
mov
mov
fidiv
add
retf
sbb
or
repz
popf
xlat
inc
xchg
cmp
xchg
leave
push
fst
test
std
out
ins
dec
jle
xor
xor
fst
pop
jns
sub
test
cmps
stos
push
icebp
cmp
xchg
into
adc
add
sbb
cmp
push
shl
pushf
sbb
push
mov
js
retf
sub
cmp
jmp
aam
sub
daa
mov
inc
mul
jle
fdiv
jle
mov
lds
or
xchg
mov
int
cmp
cli
imul
mov
jge
(bad)
shl
sub
inc
or
sbb
mov
fwait
dec
or
inc
adc
fwait
add
fwait
xor
aam
mov
dec
xchg
aam
popfw
jg
and
jns
cdq
lods
add
lea
popa
add
mov
or
push
xchg
mov
sbb
stos
ret
sbb
and
fwait
ins
scas
cmp
inc
mov
push
mov
pop
les
mov
test
jge
out
mov
(bad)
mov
mov
outs
test
add
lods
ja
lods
fist
je
jmp
lds
mov
mov
mov
popf
push
mov
add
cmp
jmp
lea
stos
mov
cmp
xchg
data16
das
or
pusha
jle
ret
in
hlt
xchg
test
cld
mov
push
mov
aaa
into
mov
and
ds
add
es
test
fucomip
cmp
push
repnz
enter
jmp
and
xchg
dec
mov
add
pop
loop
push
jbe
push
xor
dec
pop
in
sbb
ins
and
dec
mov
shr
fdiv
neg
mov
aaa
retf
pop
pop
inc
scas
mov
loope
(bad)
out
movs
ss
push
push
add
inc
jle
pcmpeqw
daa
sub
pop
pop
dec
int3
sahf
loop
fnstcw
and
sar
scas
iret
pop
sbb
and
cmp
inc
lea
popa
or
arpl
stc
or
fstp
cmps
sbb
add
inc
xchg
cmps
jmp
dec
mov
gs
jge
nop
hlt
retf
jnp
mov
cmp
in
ins
xor
fldenv
bound
dec
cli
out
add
lods
push
xchg
cmps
push
cmp
jg
lahf
push
into
inc
call
jae
aad
pop
push
fld
stc
or
push
adc
enter
and
nop
test
cmp
push
jae
pusha
loop
sub
push
dec
mov
aam
inc
dec
xchg
pop
adc
xor
cmp
fs
jle
mov
pop
sbb
and
jo
stos
pop
xchg
ins
test
mov
pusha
shl
retf
cld
sahf
cmc
ins
aaa
ret
outs
out
adc
push
inc
inc
dec
sub
test
cmp
leave
clc
popa
push
aaa
xchg
pop
das
vpcmpgtw
mov
imul
and
fsubr
out
or
mov
in
dec
inc
pop
mov
cmp
jl
pmaxub
loop
iret
sub
outs
cmp
cmp
inc
push
mov
add
in
xchg
push
nop
test
adc
mov
sbb
loope
add
xchg
aad
xchg
adc
mov
ss
cwde
popa
in
fwait
push
xor
push
pop
sub
fist
retf
jno
pop
cs
jb
repnz
add
adc
push
in
shr
xchg
mov
in
fxch
lahf
in
sub
stos
xor
xor
ss
cmc
dec
sbb
mov
xchg
rcr
xor
mov
in
test
lock
cdq
xor
cli
mov
movs
imul
jbe
ss
sub
scas
xchg
inc
xor
jp
mov
adc
sub
sub
cmp
aad
fcomp
ins
or
inc
or
and
in
lods
iret
(bad)
retf
jnp
pop
push
dec
std
cmps
add
jbe
fs
loop
sub
cmps
push
rol
push
cmps
xchg
fistp
jmp
xor
dec
or
clc
out
outs
push
jns
in
mov
rol
test
or
data16
jl
sub
pop
xchg
xor
cmp
gs
call
in
cmc
cwde
test
in
mov
xchg
cmp
mov
add
jl
pop
sbb
mov
sbb
adc
pop
sti
sub
jmp
push
dec
mov
dec
icebp
dec
cld
jnp
daa
int3
pop
cli
push
test
aas
stos
or
mov
dec
or
pushf
les
xchg
sub
sub
and
outs
out
inc
mov
cs
inc
cwde
mov
aaa
sub
jmp
add
xor
popf
div
push
ds
lds
jmp
je
fadd
dec
jg
cdq
cmps
adc
inc
scas
ret
cdq
mov
dec
sbb
and
addps
or
call
in
xor
test
adc
jae
jp
pop
xchg
shl
aam
push
cli
jae
sbb
adc
call
inc
dec
mov
cmp
loopne
xchg
and
pop
push
ss
(bad)
fistp
rol
aaa
hlt
xchg
cmp
movs
dec
ss
sti
jmp
jle
cmps
imul
in
xchg
(bad)
cmp
mov
or
cmc
xor
daa
arpl
sub
inc
mov
loope
mov
mov
stos
xchg
jb
cmp
cmp
(bad)
push
adc
xchg
and
sub
es
or
test
cmp
test
fincstp
cmps
repnz
(bad)
fcomi
stc
sub
push
scas
test
push
fsubr
std
fdiv
or
and
cld
rcr
jbe
push
loop
(bad)
arpl
xlat
aaa
jnp
pop
(bad)
sbb
test
es
out
hlt
mov
jmp
mov
jbe
push
xchg
cmc
arpl
pop
or
pushf
and
cwde
test
mov
in
mov
add
pop
test
mov
or
mov
mov
jno
xchg
outs
and
ja
mov
push
dec
rcr
arpl
movs
out
add
lds
in
mov
jmp
ds
scas
mov
jmp
in
push
das
ds
out
movs
mov
jb
jae
sbb
sub
jmp
sahf
test
inc
jecxz
adc
xor
imul
mov
sbb
cdq
inc
sub
xchg
mov
mov
jl
sbb
mov
push
and
push
adc
scas
ins
jecxz
sub
pop
les
or
jmp
jne
mov
push
enter
cli
mov
sbb
push
xchg
test
jmp
mov
loop
add
rcr
xchg
mov
cmps
sahf
sti
adc
mov
(bad)
cmp
(bad)
fyl2x
inc
cmp
pushf
xchg
pop
mov
jmp
pop
test
nop
enter
cmp
mov
and
mov
aam
ss
push
mov
scas
jecxz
ret
(bad)
js
ficom
imul
es
push
addr16
add
mov
loope
pop
jecxz
pop
or
in
mov
sbb
out
retf
cmps
jmp
xchg
out
sub
fwait
or
mov
jg
dec
dec
in
sub
xor
pushf
xchg
add
mov
xchg
ins
fiadd
push
and
adc
jge
shr
xchg
dec
pop
xlat
sbb
adc
mov
pop
jmp
pushf
xor
rol
inc
js
dec
cmp
clc
xor
jmp
mov
xor
fistp
jbe
fmul
and
test
mov
sub
data16
jne
mov
mov
fld
xchg
add
(bad)
div
aad
fld
test
mov
dec
rol
or
lea
sbb
mov
outs
stos
inc
dec
xchg
jecxz
lahf
push
mov
jmp
gs
iret
mov
adc
in
dec
(bad)
int
and
bnd
clc
sbb
clc
dec
push
rcl
test
(bad)
out
repnz
sti
ror
out
out
xchg
sti
push
stc
push
out
aad
dec
and
dec
push
xlat
inc
pop
sbb
cmps
or
lock
cmp
xor
cmps
or
fidivr
in
jmp
test
pop
movs
pop
stc
and
dec
dec
sahf
iret
les
cmps
sbb
imul
push
sub
lock
sar
or
or
cmp
jg
pmaddwd
dec
enter
cmp
rcl
fbld
or
repnz
pop
call
jns
mov
out
jle
mul
cs
outs
das
test
(bad)
jo
cld
test
inc
fcomp
jb
jae
jge
add
or
push
mov
into
jp
inc
cdq
inc
jmp
in
fs
rcr
or
push
cmp
rcr
jmp
xor
pushf
pusha
push
out
xchg
in
out
sub
dec
dec
imul
dec
movs
xchg
dec
sub
in
(bad)
mov
jle
xchg
push
cmps
xor
mov
rcl
das
push
adc
idiv
aaa
mov
mov
or
xchg
mov
inc
out
(bad)
pop
lds
jl
jg
out
dec
(bad)
in
inc
ror
fwait
sbb
imul
sub
sub
(bad)
dec
jns
or
cmp
push
add
retf
sub
dec
pushf
shl
inc
dec
lock
or
inc
sbb
push
mov
jno
xor
call
and
sub
imul
jl
adc
mov
dec
lods
mov
mov
pop
xchg
xor
int
sub
mov
xor
dec
jmp
mov
pop
pop
pop
ins
mov
es
and
imul
out
pop
(bad)
fdivr
sar
inc
pop
imul
pop
push
inc
sub
cs
das
hlt
xchg
cwde
cmp
or
dec
in
sub
mov
jo
cld
cmp
xchg
das
inc
add
cmps
mov
push
add
scas
test
ds
xchg
cmps
daa
stc
xor
sahf
shl
xor
xor
jb
ja
pop
enter
pushf
mov
lods
ss
mov
ja
dec
shl
push
push
shl
iret
stos
xchg
fdivrp
out
sub
push
std
in
add
sub
fdivr
jne
sbb
movs
ss
aam
sbb
sub
mov
xor
out
mov
out
ja
imul
(bad)
cmp
(bad)
popf
in
mov
gs
push
enter
jno
inc
mov
in
es
pushf
add
inc
imul
sub
xchg
dec
sbb
mov
dec
fisubr
mov
push
cmp
adc
xchg
test
bt
ret
loope
sahf
test
(bad)
ins
cmp
aam
push
xlat
sbb
adc
and
sub
dec
push
and
movs
inc
lock
fcmovbe
inc
push
add
repnz
inc
dec
retf
int3
aad
xchg
add
cwde
icebp
icebp
mov
ss
add
nop
pand
push
xor
test
stc
inc
mov
add
lock
xor
push
dec
mov
arpl
cdq
repz
xchg
mov
inc
jo
gs
in
push
jecxz
pop
mov
mov
xor
imul
frstor
popa
sbb
in
push
movs
inc
pop
in
loopne
dec
inc
pop
(bad)
outs
sbb
mov
adc
call
push
xlat
cmps
mov
mov
push
inc
out
leave
mov
add
test
or
sub
fucomip
lds
or
test
sub
or
pop
(bad)
sub
sti
cmp
fucom
std
in
xchg
sti
dec
(bad)
pushf
movs
add
test
imul
arpl
xchg
sub
pop
arpl
adc
sub
into
mov
ss
xchg
frstor
adc
mov
icebp
inc
pop
push
pop
aaa
jg
push
xchg
mov
mov
push
jnp
inc
out
push
sar
daa
adc
xor
mov
sbb
cmp
ss
mov
test
scas
(bad)
pop
sahf
sbb
lds
inc
pop
not
sbb
test
jno
push
push
dec
cmps
xor
cmp
inc
inc
imul
mov
and
loop
mov
mov
push
add
push
xchg
(bad)
mov
out
daa
dec
mov
stos
fisub
retf
ds
dec
mov
movs
aam
aaa
sub
retf
je
cmp
xchg
mov
adc
adc
inc
xor
add
sub
movs
or
pop
jmp
add
jmp
outs
ins
test
dec
aad
hlt
outs
mov
mov
push
sti
jle
mov
cmps
mov
mov
cmps
pop
cmp
adc
and
fbld
xor
ins
aas
cwde
in
retf
(bad)
or
sub
jnp
cmps
jle
fild
pop
sbb
bswap
mov
inc
push
(bad)
dec
cmp
icebp
fidivr
push
dec
ret
mov
leavew
addr16
mov
mov
cmp
add
jmp
int
dec
push
xlat
repnz
dec
jae
cmps
cld
add
(bad)
test
or
cmc
hlt
test
dec
pop
mov
dec
xchg
or
scas
inc
adc
imul
jb
dec
sub
pushf
test
adc
inc
push
and
popf
cmp
stos
jle
mov
mov
push
pop
scas
mov
mov
mov
cmp
enter
mov
mov
shr
jnp
push
pop
cld
out
sub
je
sub
or
out
movs
cmp
mov
sub
cmp
jle
mov
push
ins
and
fdivr
ds
cwde
test
movs
int
add
(bad)
cmp
mov
dec
arpl
sub
mov
aad
icebp
mov
jbe
sub
idiv
enter
inc
call
pushf
or
push
aad
xlat
or
cs
adc
xor
sahf
aaa
not
(bad)
idiv
inc
or
scas
arpl
mov
pop
sbb
adc
adc
cmp
rcl
mov
(bad)
push
(bad)
jg
loope
in
shr
(bad)
fnstenv
jge
push
mov
mov
cld
lods
adc
pushw
sbb
les
inc
or
nop
inc
push
mov
jae
pop
mov
or
ja
(bad)
data16
mov
mov
std
icebp
in
pop
and
push
jo
sub
sbb
shr
inc
movs
es
pop
and
mov
int3
xor
(bad)
je
les
(bad)
xchg
sbb
cmp
fdivr
mov
fcomp
inc
cmc
push
push
or
and
or
mov
xchg
aam
lea
rcr
scas
jmp
ror
popf
ins
pusha
push
adc
(bad)
movs
mov
mov
sub
aad
mov
fdiv
adc
mov
ror
sbb
lock
jge
pop
mov
pusha
gs
minps
xchg
sub
gs
mov
cmovs
adc
or
jecxz
mov
sbb
in
pop
(bad)
pushf
xchg
fst
dec
sbb
ffree
push
push
jo
xchg
fnstenv
dec
add
dec
imul
out
out
adc
xchg
test
enter
xor
bound
sbb
into
jmp
or
ror
pusha
gs
push
scas
fiadd
or
sub
nop
(bad)
push
inc
pop
cmp
test
in
sub
pause
and
inc
inc
(bad)
(bad)
imul
daa
sbb
mov
mov
jmp
rcr
cmp
cmps
(bad)
stos
push
mov
das
fdiv
lock
xchg
mov
stos
and
shl
loop
dec
adc
jmp
test
(bad)
pop
les
mov
lods
sti
sub
retf
mov
pusha
fmul
nop
ror
mov
pop
pop
fdivrp
and
lods
cmc
cmps
mov
mov
mov
data16
pushf
push
jb
retf
ins
pop
(bad)
loopne
hlt
retf
mov
jmp
adc
or
jo
cmp
in
push
dec
pop
scas
fstp
dec
jmp
inc
inc
test
add
inc
mov
and
or
or
jbe
stos
xor
sub
sbb
xor
xchg
mov
ret
pop
push
cwde
lods
push
inc
push
sbb
add
ficomp
dec
xchg
outs
jno
mov
out
call
mov
jae
xor
fiadd
cld
jno
ror
(bad)
mov
dec
or
or
mov
adc
out
daa
sti
call
sub
out
ficomp
cld
into
pushf
jp
shl
push
pop
rol
inc
push
call
ins
mov
aad
pop
aad
out
jno
popfw
ins
add
scas
pop
cmp
(bad)
std
xchg
(bad)
push
and
je
xchg
add
xor
repz
add
lods
outs
jl
outs
cmp
push
jb
fdivr
mov
sbb
or
(bad)
ret
cdq
or
std
mov
add
pop
jp
stc
call
sbb
mov
adc
popf
inc
out
xor
push
cmp
and
jns
add
mov
dec
xchg
mov
dec
pcmpeqb
ror
aaa
mov
test
into
call
sub
add
xchg
or
loop
imul
mov
fmul
mov
sub
(bad)
cmps
js
ja
or
stos
aas
fdiv
cmp
iret
neg
std
mov
dec
jno
mov
push
pushf
cdq
adc
rcr
inc
out
ror
cmp
jecxz
jnp
or
inc
popf
adc
mov
cmps
lea
mov
sub
ror
adc
pusha
sbb
mov
loop
push
addr16
fmul
(bad)
shl
cmps
retf
test
mov
push
std
je
mov
jae
xlat
das
xor
push
inc
cmps
pop
adc
and
inc
mov
jp
out
retf
push
icebp
xor
fucom
call
fisub
cmp
rcl
sar
mov
gs
xchg
inc
xor
xor
xor
cmc
jp
imul
outs
cmp
xor
sbb
repz
mov
inc
stos
into
pop
mov
cmps
cmps
scas
aam
(bad)
push
sub
mov
xchg
xchg
and
push
fild
mov
rcr
sbb
push
lds
ret
scas
leave
jb
lahf
xchg
inc
add
pushf
(bad)
stos
xor
lahf
or
out
sbb
mov
jmp
inc
dec
push
dec
push
cmps
(bad)
cmp
ins
xor
popa
cmps
mov
xchg
dec
(bad)
mov
test
push
add
stc
cmp
fstp
jbe
mov
push
popa
mov
xor
sbb
mov
mov
je
and
je
stos
jmp
mov
retf
mov
sti
stos
out
aad
add
ins
nop
out
movs
sub
jno
mov
xor
mov
add
sub
sti
push
loopne
pop
call
mov
push
mov
pop
mov
and
ror
lods
push
xchg
mov
daa
ror
mov
jmp
test
cli
mov
add
ins
and
(bad)
fmulp
bnd
xchg
push
xchg
sub
movs
aam
(bad)
loopne
ror
mov
inc
imul
sub
sub
pop
loopne
repnz
rol
pop
mov
lock
(bad)
repnz
fiadd
test
enter
inc
push
inc
add
retf
mov
pop
cmp
ja
xchg
gs
and
mov
jl
or
pop
loop
add
daa
(bad)
lds
mul
popa
add
xlat
jecxz
into
pop
pusha
in
in
jmp
data16
sar
mov
dec
(bad)
ins
mov
pusha
add
mov
xchg
std
or
in
sti
enter
push
pushf
jns
xor
dec
push
js
sbb
popa
adc
xchg
lods
aaa
cwde
or
xchg
mov
test
leave
xchg
mov
inc
cmp
loope
fwait
imul
or
das
cwde
push
push
aam
imul
pop
int3
ret
es
shl
ret
sub
cli
ror
fadd
jnp
mov
jecxz
mov
xchg
adc
pop
pop
cmp
daa
in
add
jp
test
jecxz
push
or
sbb
jne
loop
cmps
cdq
mov
jl
or
test
dec
test
or
adc
sahf
fs
adc
sti
les
jge
jmp
pop
loopne
push
fcmovne
sub
mov
fcmove
sbb
bswap
rcr
push
rcl
dec
test
stos
or
sub
jo
in
lea
pop
loopne
adc
mov
add
cwde
inc
dec
xlat
sbb
(bad)
pop
into
dec
mov
dec
push
push
inc
push
cmp
lods
ins
push
pop
cs
sub
pop
jl
data16
(bad)
push
mov
inc
ja
mov
sbb
pop
xlat
inc
ret
add
int
pop
add
pop
push
int3
push
xchg
scas
jae
push
mov
xchg
fwait
add
mov
inc
sub
push
(bad)
mov
sub
or
ins
js
jno
or
sbb
sbb
dec
jno
inc
mov
fwait
xchg
inc
jae
mov
leave
fisubr
fs
jmp
mov
pop
call
push
mov
cwde
dec
jl
cdq
leave
(bad)
jmp
mov
adc
loope
inc
jmp
or
sahf
icebp
mov
jno
mov
fisttp
es
mov
xchg
mov
add
push
fist
dec
and
ja
stos
xor
mov
push
mov
pusha
scas
push
xchg
and
sti
jb
sbb
push
fistp
cs
(bad)
jge
pop
(bad)
pop
inc
(bad)
rcr
or
xchg
fsub
fcomp
push
sub
fld
(bad)
cli
aaa
popa
in
mov
or
das
jmp
mov
pop
mov
and
mov
adc
mov
jg
cmps
daa
shr
scas
sti
mov
popa
lock
shr
xchg
xchg
mov
or
cs
mov
cmp
cmp
es
mov
imul
mov
xchg
ret
jl
xchg
jns
idiv
(bad)
(bad)
inc
aam
repz
sub
out
dec
dec
sbb
loopne
push
xchg
sbb
push
fistp
mov
pop
or
das
mov
popf
add
int3
aad
mov
and
xor
cs
mov
ja
inc
mov
loop
loope
(bad)
loope
ins
dec
neg
adc
retf
out
cmps
dec
and
in
jnp
pop
push
and
adc
mov
js
inc
adc
push
mov
pop
cmp
aad
stos
or
movs
push
hlt
test
add
pusha
ins
cmp
sbb
int
dec
adc
out
pop
xor
mov
push
data16
ja
sub
mov
cmps
repnz
or
sub
pushf
imul
jnp
outs
jns
dec
addr16
xchg
inc
aam
or
xor
cmps
sbb
call
inc
mov
xchg
loop
push
inc
fdivr
shl
ja
xchg
and
cmps
aaa
jl
adc
jp
fmulp
cld
adc
(bad)
dec
ja
lahf
push
ins
mov
and
sub
out
jno
daa
popf
icebp
in
xchg
rol
xlat
test
shl
dec
inc
bound
mov
sub
mov
(bad)
in
popf
cmp
jnp
mov
(bad)
adc
lahf
pop
mov
jno
add
movs
out
fwait
lods
push
pop
inc
fisttp
pop
pop
and
cmps
enter
pop
popa
cmp
or
loopne
or
bound
mov
loope
mov
jecxz
mov
sub
mov
add
jo
dec
xchg
push
mov
mov
mov
add
and
push
das
inc
add
cs
movs
inc
mov
outs
test
cmp
sbb
les
inc
sahf
xchg
mov
adc
push
pop
sub
pop
or
and
enter
out
test
mov
pop
mov
jae
or
bound
pop
test
iret
cmc
lods
dec
stos
test
test
imul
call
cmp
mov
(bad)
iret
sbb
mov
mov
push
sub
mov
or
xacquire
pop
sub
jns
mov
mov
ins
das
rcl
fneni(8087
daa
hlt
stos
jg
ret
js
rcl
inc
fstp
nop
sub
mov
(bad)
arpl
fucomp
enter
daa
loopne
aaa
push
movs
mov
xor
jl
mov
mov
call
(bad)
test
or
in
jmp
fst
xchg
daa
cdq
jg
cdq
and
lods
add
mul
adc
or
inc
pop
xchg
mov
fsub
fwait
pop
jo
and
in
mov
push
std
sbb
(bad)
fst
std
mov
and
rol
add
jg
sbb
ins
dec
jmp
cs
lds
(bad)
xchg
sti
sbb
mov
test
iret
ds
cmp
rcl
mov
fimul
dec
jno
inc
fwait
jge
pop
inc
(bad)
jg
ins
int3
test
in
in
std
lea
cwde
jb
sbb
jne
fld
inc
mov
cmps
(bad)
dec
cmp
xor
pusha
jo
aad
repz
add
push
call
es
xchg
icebp
out
jnp
cmps
cli
mov
enter
ins
inc
add
pop
jbe
dec
daa
inc
jl
add
jg
xchg
mov
pop
lods
call
xor
in
imul
ja
xor
ins
inc
outs
js
jg
jne
(bad)
sbb
sbb
dec
mov
iret
mov
jg
aas
(bad)
(bad)
mov
push
push
xor
xchg
not
mov
arpl
outs
test
(bad)
lock
mov
out
ror
xor
loop
dec
mov
push
pop
inc
add
and
sti
mov
push
fnsave
jecxz
loopne
lods
(bad)
sub
mov
test
ins
dec
movnti
fmul
sub
mov
inc
mov
cs
loopne
pushf
inc
push
cmp
aaa
mov
sub
dec
fs
and
jo
add
(bad)
sti
dec
mov
push
mov
scas
sub
push
sti
or
adc
in
loopne
sbb
sahf
adc
xchg
cmc
fisttp
and
push
add
add
sbb
pop
mov
xchg
cmp
ficomp
je
movs
sub
xlat
retf
adc
repz
lods
and
hlt
movs
mov
addr16
movs
push
adc
push
or
out
inc
iret
loop
out
dec
jle
pusha
xchg
dec
mov
jmp
fisub
mov
pop
mov
jmp
mov
xchg
cs
xor
sbb
pop
fcom
push
pushf
scas
cmp
ins
and
mov
ret
dec
xor
rol
retf
cmc
lock
stos
push
add
out
sbb
aas
jge
mov
pop
sub
lods
inc
xchg
mov
push
push
mov
push
pop
inc
sti
jnp
cmps
push
fstp
push
sbb
pop
dec
js
push
dec
hlt
stos
pop
xor
push
cld
movs
outs
fst
push
pop
add
pop
not
les
xchg
scas
mov
outs
(bad)
jmp
add
inc
inc
and
xchg
shr
push
retf
fnsave
aas
mov
jmp
dec
popa
adc
pop
les
dec
pusha
mov
sar
scas
xchg
sub
in
push
xor
adc
cwde
fwait
lock
das
les
call
std
int3
xor
ror
inc
mov
jne
adc
loop
inc
push
pop
fwait
imul
dec
outs
mov
inc
or
fst
sbb
cmp
shl
jb
fcom
cmp
xchg
mov
retf
add
xor
and
jns
popf
adc
and
into
pop
out
mov
ret
inc
xor
mov
out
ror
shr
mov
xor
int
es
inc
stos
sbb
retf
push
stos
adc
ds
(bad)
aas
pop
ja
fwait
xor
ja
adc
jo
in
outs
jmp
stos
jb
add
xor
div
shr
js
mov
int
(bad)
ficomp
xchg
push
xchg
pusha
repnz
dec
or
xchg
jmp
cmp
push
out
test
xor
add
in
add
iret
js
test
add
ds
jl
pmaxsw
or
shl
call
inc
mov
data16
adc
xor
call
pop
leave
push
cs
inc
and
mov
fwait
jmp
ja
xor
loope
jmp
mov
push
xor
push
mov
outs
arpl
mov
sbb
or
(bad)
repz
pop
ja
xchg
lea
inc
jl
mov
jle
leave
mov
pop
lods
fwait
dec
sysenter
or
xchg
loop
call
mov
and
hlt
inc
jo
push
sbb
xor
clc
pusha
pop
ja
push
mov
(bad)
push
add
(bad)
jns
enter
cmc
jno
xor
ins
sbb
adc
mov
xchg
fisubr
xor
loope
ins
js
je
int
pop
cli
jnp
cmp
nop
xchg
pusha
mov
sub
jae
mov
je
call
sub
jmp
mov
sub
imul
push
inc
loopne
outs
pop
(bad)
dec
adc
ret
jmp
xchg
push
cmp
xchg
and
ret
jne
cmp
push
inc
sub
ficom
cmp
and
stos
scas
(bad)
div
push
cmps
xchg
push
mov
stos
js
js
out
mov
jle
test
jae
dec
push
jo
ret
mov
mov
jge
jbe
jmp
xor
ret
movs
dec
jge
repnz
and
jne
and
call
pop
cmp
and
push
imul
pop
clc
xchg
test
and
addr16
outs
pop
mov
ror
mov
mov
cmp
cmp
dec
popa
add
btc
test
les
mov
pop
and
inc
psadbw
dec
jbe
jns
sbb
pop
add
xchg
fisttp
mov
push
pop
cmp
push
(bad)
fadd
out
fnstsw
pop
lods
jle
sahf
rcl
iret
mov
push
push
or
ins
sub
xchg
out
cwde
popf
outs
inc
mov
add
cdq
cdq
dec
mov
jb
and
add
imul
mul
jl
int3
dec
xlat
cdq
adc
jl
sub
in
push
cwde
xor
cmps
fwait
adc
or
jnp
mov
icebp
adc
stc
dec
sub
mov
ret
pop
xchg
inc
inc
dec
cmps
aam
mov
add
cld
xchg
aas
cs
xor
jo
sub
xor
loope
mov
in
mov
jnp
(bad)
pushf
popa
fist
or
cs
or
arpl
jns
addr16
mov
cld
test
mov
mov
sub
repz
sbb
or
(bad)
imul
mov
test
aad
neg
adc
int3
mov
push
xchg
mov
dec
xchg
arpl
cli
xchg
adc
adc
inc
cld
xor
or
push
lods
mov
enter
(bad)
sub
sub
(bad)
jb
stos
sub
cmp
call
push
sbb
jmp
xor
gs
test
inc
or
xchg
mov
xchg
fldcw
cld
shl
xchg
pop
or
or
mov
data16
cmp
repnz
ret
mov
mov
rcr
fild
psllq
inc
inc
adc
or
mov
adc
mov
enter
inc
ss
sahf
and
cmp
jb
mov
xor
or
js
jmp
cmp
fs
sahf
push
dec
inc
inc
pop
inc
test
adc
xor
(bad)
fsubp
movs
inc
push
ror
xchg
call
xor
(bad)
js
mov
mov
xchg
push
fadd
in
and
ret
int
dec
cmp
push
out
lds
(bad)
push
and
out
(bad)
dec
call
xchg
fistp
mov
or
cmp
dec
sub
jmp
stos
fmul
repnz
xlat
bound
(bad)
jle
inc
cmps
int
mov
mov
sub
pusha
jns
add
imul
sub
ins
adc
shr
xchg
mov
or
sub
mov
fnsave
push
out
push
inc
sbb
stos
lods
(bad)
dec
and
mov
nop
xor
and
call
pop
scas
rcr
push
(bad)
jecxz
dec
adc
sbb
fisub
pop
sub
inc
inc
retf
and
(bad)
xor
jnp
and
inc
scas
sub
js
sbb
ins
xchg
xlat
mov
je
mov
mov
nop
xchg
icebp
in
lods
xlat
fwait
pop
sub
aam
push
sahf
movs
in
sbb
out
(bad)
pop
cs
fadd
jmp
pop
lahf
jg
cmp
ja
sbb
pop
gs
ja
xor
clc
dec
mov
les
lahf
add
inc
lods
sbb
fwait
jae
cdq
mov
fyl2xp1
test
inc
enter
es
pop
enter
and
(bad)
push
mov
popf
xor
retf
sub
ret
or
repnz
push
aam
shl
or
push
dec
clc
fistp
icebp
imul
jns
cmp
xchg
jno
jl
sti
jne
mov
and
add
popf
aaa
stos
pop
sbb
test
dec
and
mov
xchg
jnp
out
mov
mov
lds
sbb
inc
push
or
or
ss
xor
bound
push
sbb
sub
dec
pop
call
and
mov
pop
xchg
(bad)
int
in
sbb
push
scas
adc
aaa
in
jb
mov
ins
sbb
mov
cdq
pusha
leave
sub
repnz
mov
mov
dec
or
stos
pcmpeqd
mov
xchg
out
in
jbe
dec
int
mov
dec
mov
mov
pusha
fld
scas
inc
les
xor
xor
cmp
pop
inc
sbb
shl
mov
jbe
popa
or
ds
xor
outs
mov
sbb
(bad)
aas
out
xor
stos
add
enter
xor
and
ja
jge
cmc
add
retf
call
adc
stos
(bad)
sub
cs
aaa
push
xor
sbb
call
mov
ss
loope
push
sbb
mov
inc
mov
fs
pop
mov
mov
inc
aam
mov
jns
xor
mov
mov
mov
pop
in
ds
hlt
sub
mov
adc
mov
fild
mov
xchg
scas
lods
sbb
fwait
aaa
mov
dec
lods
add
aad
aaa
adc
adc
and
fsub
and
sub
in
(bad)
mov
or
and
in
pop
call
sahf
popa
or
fisttp
inc
sub
out
retf
dec
cmp
out
add
fwait
dec
loopne
clc
pop
dec
push
cmps
in
test
outs
or
call
mov
dec
je
xchg
or
retf
cmp
cli
mov
mov
jbe
jp
outs
xor
jnp
outs
inc
inc
nop
jnp
inc
hlt
dec
pop
das
xchg
jnp
rcl
xchg
xchg
sub
or
xchg
sub
adc
les
fldenv
(bad)
sub
push
mov
mov
mov
in
jbe
add
ret
xor
dec
xor
jnp
and
bound
fucomip
movs
mov
sbb
frstor
xor
jns
or
pop
pop
jge
pop
adc
mov
repz
mov
hlt
cs
cwde
addr16
fdivp
dec
push
mov
and
xchg
in
pop
loop
inc
or
mov
xchg
call
mov
push
clc
jae
int
repnz
inc
rol
mov
jbe
int
xchg
xor
nop
scas
mov
ins
ins
pop
ret
adc
out
movs
mov
(bad)
sub
pusha
adc
and
ja
inc
lock
js
mov
mov
test
in
mov
push
and
mov
mov
test
enter
shl
mov
cmp
jns
pop
adc
jnp
and
(bad)
cli
call
adc
ja
daa
xor
xchg
fwait
adc
movs
fwait
jb
or
and
das
into
jbe
in
out
out
push
or
jns
xchg
(bad)
xchg
pop
sub
gs
std
dec
sbb
xor
aad
xor
cmp
push
je
rcr
mov
dec
cmp
leave
jmp
adc
push
fisub
add
pop
mov
sub
ss
add
inc
mov
adc
imul
sub
call
test
cmp
aad
adc
xchg
mov
mov
outs
enter
cli
aaa
mov
or
add
push
loope
cmc
in
or
in
mov
cmp
xor
sub
sub
inc
rcr
test
mov
and
xor
out
inc
ret
xor
cmp
inc
(bad)
out
(bad)
sbb
or
mov
sbb
fiadd
dec
dec
shr
mov
add
(bad)
(bad)
fidivr
push
or
xor
shr
mov
add
std
aas
stc
and
and
in
sbb
iret
int3
cs
ins
pop
cmp
pop
in
jmp
mov
mov
fmul
cmps
push
cmp
and
test
dec
sub
sub
aad
pop
sub
mov
iret
rcr
adc
adc
shl
mov
sub
stos
sub
data16
popa
mov
add
add
cmp
push
aad
je
cwde
cmps
fisubr
jmp
or
lods
adc
ret
enter
pop
out
in
cmp
mov
enter
lea
push
jecxz
repnz
fs
or
and
xor
scas
pop
inc
lods
loope
repnz
mov
stos
push
sub
xor
ds
inc
xor
mov
jg
test
(bad)
and
es
mov
retf
stos
jo
sbb
lahf
adc
mov
pop
cmp
sub
pop
cmp
xchg
push
mov
add
into
push
and
call
push
or
xor
push
dec
mov
mov
gs
or
pop
cs
iret
sbb
mov
xchg
push
aad
or
(bad)
xchg
sub
pushf
and
sbb
mov
in
ficomp
icebp
mov
inc
adc
daa
ror
stc
sub
test
icebp
mov
push
fsubp
aas
or
dec
mov
out
pop
(bad)
ret
or
mov
out
out
ds
add
adc
addr16
pop
mov
mov
cmp
adc
popa
(bad)
xor
add
xor
movs
and
and
inc
jb
mov
mov
and
js
or
sar
loop
mov
pop
mov
pop
and
xor
ret
jb
loopne
mov
aaa
jo
inc
or
add
stos
imul
leave
or
xchg
dec
dec
push
(bad)
push
push
ror
in
push
xlat
mov
ins
fwait
mov
pushf
popf
mov
arpl
xchg
or
mov
adc
mov
pop
int
(bad)
adc
jnp
ret
out
jb
or
xchg
pop
mov
adc
popa
add
(bad)
hlt
cmp
jbe
mov
push
adc
push
cmps
mov
nop
cmp
sbb
pop
inc
sub
gs
inc
ins
and
xchg
jp
mov
popf
xor
aaa
dec
mov
imul
ror
sahf
fcmovb
mov
dec
push
into
xchg
or
test
mov
outs
retf
movs
cmc
repnz
cmps
jmp
pop
js
mov
mov
call
and
fs
mov
or
(bad)
lock
xchg
lock
push
xor
xor
jecxz
addr16
int
leave
adc
sahf
shl
cmp
outs
fldcw
iret
pusha
cmp
pop
jbe
jg
pop
xchg
test
int3
push
in
shl
call
sbb
into
cmc
(bad)
pop
fdivr
push
bound
int
(bad)
aam
fstp
inc
push
xchg
mov
push
inc
or
xchg
sahf
inc
dec
mov
ret
arpl
arpl
jle
outs
(bad)
sub
lea
sub
(bad)
aaa
sti
movs
add
test
xor
sbb
mov
push
(bad)
out
test
mov
jmp
in
or
push
push
shr
das
push
lods
jmp
add
xlat
imul
popf
inc
pop
sti
call
add
or
sub
(bad)
lds
out
pusha
test
push
xchg
mov
retf
mov
inc
push
add
adc
arpl
scas
pop
add
js
xchg
jb
pop
mov
push
add
pandn
add
sbb
xchg
ret
nop
adc
jle
adc
cld
fimul
jg
jecxz
pop
mov
ret
jae
jbe
jb
fcmovne
jnp
jae
(bad)
or
jge
adc
jge
push
into
into
repnz
xchg
leave
xchg
lock
loopne
dec
test
mov
fst
jo
popa
fldl2t
sub
jge
xchg
sti
adc
mov
(bad)
mov
hlt
loopne
in
mov
fldenv
pop
sbb
dec
in
data16
inc
push
ds
clc
xchg
js
sub
loope
pop
add
pusha
dec
mov
jbe
fs
xor
or
xor
jnp
cmp
lock
lods
sar
cmp
jns
stos
jo
dec
jno
add
fidivr
push
dec
pop
inc
add
icebp
test
add
int
fadd
fidiv
pop
arpl
out
add
sti
pop
pop
cmp
mov
inc
xchg
lods
add
push
pop
sub
das
fld
mov
test
imul
imul
lods
mov
push
shr
in
inc
jmp
and
or
xor
jmp
pop
sahf
sub
xor
movs
or
or
xor
and
xor
dec
cmp
sbb
dec
ror
jmp
cmp
adc
mov
xchg
sbb
lods
or
push
imul
inc
jecxz
add
push
imul
sahf
xchg
popa
hlt
jg
out
iret
jmp
jmp
and
fcmovbe
push
sub
sbb
lea
(bad)
jno
fs
(bad)
and
mov
out
push
jno
xor
push
or
pop
cld
inc
dec
mov
mov
out
mov
mov
or
mov
push
inc
xor
inc
test
jg
in
cmp
xor
sbb
scas
cmp
in
cmps
aad
add
push
xor
inc
xor
in
shl
cwde
pop
fadd
or
sbb
cmp
test
dec
sbb
dec
push
rol
jmp
and
out
jmp
sbb
loope
inc
test
mov
or
mov
pop
cmp
arpl
adc
scas
pusha
push
mov
adc
push
cwde
in
cmp
ins
leave
call
cmp
add
and
push
cld
and
inc
adc
ja
aaa
xchg
mov
jo
lods
fld
sahf
test
inc
fldenv
fisub
push
or
mov
push
xor
jne
adc
adc
xchg
push
ja
fld
push
(bad)
xor
or
aas
pushf
mov
jmp
arpl
mov
in
mov
xor
sti
sahf
pop
int
cmp
out
dec
loope
mov
test
and
cmp
pop
popa
or
push
in
lea
neg
fwait
cld
cmp
ja
inc
jae
(bad)
xor
ror
xor
dec
jmp
pushf
int
int
call
inc
mov
aaa
dec
(bad)
cld
adc
ret
rcl
pmaxsw
push
loopne
mov
sbb
retf
call
dec
jecxz
clc
push
cli
aaa
cmp
shl
xor
les
pusha
cmp
mov
out
mov
xchg
mov
and
xor
cwde
jg
out
loope
pop
loopne
inc
imul
jle
sub
xchg
push
enter
ds
jae
and
int
leave
aam
dec
sub
js
sub
dec
or
mov
mov
test
push
sar
(bad)
(bad)
mov
and
mov
sti
jl
xchg
xchg
inc
cmp
xor
xor
das
ds
mov
addr16
mov
in
mov
xchg
adc
mov
push
mov
shl
popf
(bad)
pop
sahf
lea
xchg
adc
mov
scas
mov
sti
mov
and
fisubr
mov
jbe
mov
inc
or
dec
mov
mov
cmp
ror
cmp
movs
cmp
popa
adc
push
or
sbb
push
mov
int3
mov
sbb
(bad)
cmp
add
cmc
sbb
mov
xlat
mov
inc
mov
dec
mov
jle
jnp
mov
adc
jecxz
ins
push
push
push
or
sar
or
in
dec
and
loop
into
rcl
ja
sti
or
xchg
xchg
loopne
shl
jp
and
adc
fwait
outs
pop
add
dec
fwait
iret
pop
call
adc
inc
lock
xor
in
jae
jge
test
stc
imul
sbb
dec
iret
add
mov
cld
jnp
aas
push
cmp
std
jle
not
inc
retf
outs
jg
jnp
jae
addr16
and
scas
movs
pop
cli
sbb
adc
aaa
pop
xor
idiv
pop
push
jne
fwait
int
movs
mov
dec
mov
xchg
ins
dec
ds
sub
mov
mov
dec
std
dec
mov
pop
mov
dec
jle
cdq
adc
jle
cmp
mov
scas
push
and
sub
mov
mov
lahf
adc
pusha
mov
mov
int3
test
ja
jp
scas
ins
inc
pop
push
fdiv
cmp
ds
xlat
mov
loopne
sub
out
mov
mov
test
jl
jmp
adc
cld
shr
jns
lea
dec
sbb
pop
adc
jo
and
ret
scas
dec
in
jne
(bad)
sti
(bad)
nop
les
stc
adc
mov
imul
add
call
add
push
(bad)
jno
dec
dec
aad
cmp
ja
lahf
xor
push
stos
enter
jg
ret
dec
scas
or
jmp
(bad)
add
inc
or
data16
and
jle
dec
aad
lahf
or
adc
pop
sbb
push
pop
jp
xlat
test
movs
xlat
mov
leave
mov
cmp
push
adc
mov
mov
mov
cli
leave
inc
and
js
add
repnz
pop
mov
dec
cmp
cmc
iret
hlt
iret
or
rcr
adc
cmp
push
pop
mov
cmp
aas
xchg
loop
dec
ror
movs
push
sbb
ror
xchg
cmc
and
and
push
inc
xor
inc
mov
mov
dec
or
pop
xchg
retf
xchg
mov
call
out
ficomp
dec
repnz
add
push
loope
sbb
push
mov
xor
mov
sbb
mov
cmps
es
and
(bad)
sbb
fild
rol
jmp
mov
mov
les
fcmovne
and
lock
sub
fadd
push
sub
pop
jp
pop
call
lock
push
loopne
xchg
movs
les
pop
sar
add
or
mov
repnz
or
aad
cmps
mov
neg
(bad)
push
mov
dec
inc
inc
adc
outs
or
stos
push
fnstenv
xor
mov
inc
mov
mul
add
xchg
daa
bound
dec
fimul
repz
scas
dec
xchg
ins
sub
jae
test
and
sahf
xchg
dec
inc
jle
pop
pushf
cwde
jmp
in
add
fnstcw
push
adc
stos
cmp
add
or
loop
stos
shl
lds
push
sub
mov
push
rcl
inc
xchg
mov
nop
(bad)
mov
(bad)
(bad)
shl
xor
mov
sub
sub
dec
out
jo
sbb
mov
or
rol
xor
(bad)
push
repnz
imul
sub
sbb
jp
fs
jne
or
mov
cli
and
mov
mov
imul
and
sbb
(bad)
mov
sar
dec
sahf
sbb
and
mov
mov
mov
fidiv
iret
xlat
mov
mov
popf
cs
leave
sbb
sub
pop
mov
in
push
jae
xlat
out
jne
and
dec
aaa
scas
rcr
fcmovb
dec
bound
outs
sti
xor
add
push
mov
retf
xchg
push
ret
dec
fwait
inc
(bad)
mov
fisubr
push
mov
adc
xor
je
and
fs
pop
fnsave
xchg
mov
call
aam
hlt
iret
jg
mov
mov
sbb
jne
jp
mov
cmp
adc
pop
xchg
adc
mov
call
jmp
mov
loopne
pop
ins
cmp
pop
sub
aaa
or
ins
inc
adc
sbb
fsubr
xor
nop
sub
frstor
mov
lds
out
xchg
mov
inc
cld
jecxz
retf
inc
inc
cmp
push
mov
cwde
inc
mov
and
xor
mov
adc
addr16
sbb
mov
sub
je
call
popf
jo
je
pop
mov
loop
push
mov
cmp
mov
mov
jne
jne
mov
jne
sahf
not
cmc
inc
jb
dec
add
pop
jg
stos
sub
xchg
ja
mov
fmul
(bad)
loope
add
adc
loop
cmp
inc
js
int3
dec
cld
pop
(bad)
in
mov
jge
mov
xor
mov
dec
jae
pusha
cmp
xchg
(bad)
push
bound
aas
data16
sub
sbb
fmul
inc
test
fdivp
or
pushf
ret
jno
fdivr
std
test
in
fld
adc
mov
scas
xchg
lods
imul
enter
aas
icebp
xor
and
dec
or
ins
push
add
(bad)
mov
mov
or
int
int
mov
mov
mov
push
fwait
mov
(bad)
pusha
inc
dec
fcmovnb
loopne
mov
dec
sbb
cmp
xchg
sub
ins
lahf
push
test
sbb
or
das
and
pushf
fmul
push
pop
push
ror
add
add
pop
jb
das
std
adc
xor
push
mov
jge
es
sub
dec
mov
jp
fwait
stc
cmp
pop
out
xchg
in
aam
dec
lahf
hlt
loop
scas
retf
fbstp
clc
loope
xchg
cmp
cmp
fwait
ror
retf
scas
adc
mov
xchg
pop
daa
sbb
(bad)
jae
fisttp
frndint
retf
or
pop
cs
dec
pop
cmovl
mov
(bad)
bound
aad
int
gs
jns
sbb
and
data16
int3
or
xchg
add
jne
lds
mov
js
xor
mov
nop
push
ss
sbb
jge
push
or
cwde
movs
sbb
cmp
jo
cmc
xchg
jecxz
outs
inc
mov
ret
push
adc
jb
sub
scas
pop
call
inc
mov
lds
or
inc
dec
mov
dec
imul
nop
and
ss
cmc
(bad)
fild
cmp
jns
sbb
dec
retf
not
mov
sbb
mov
pop
cmp
add
pop
fcom
movs
inc
stos
sbb
jae
cli
outs
or
les
mov
jl
mov
lods
out
cmp
ffreep
mov
ror
repz
call
and
test
mov
call
or
cmps
ins
(bad)
push
aaa
gs
add
enter
loope
sbb
mov
cmp
hlt
jge
int3
push
jae
sbb
popf
lods
sbb
add
mov
mov
mov
jno
or
sbb
ins
cli
(bad)
cmc
cmp
add
pop
sbb
jo
sub
repnz
repz
sub
ret
pop
int
inc
in
dec
cmp
std
xor
cmp
mov
jge
or
xor
ret
dec
sbb
pop
aad
in
ror
arpl
xor
adc
add
push
add
xchg
movs
xor
xchg
fisttp
push
ins
sti
adc
dec
sbb
ret
(bad)
clc
jg
sahf
add
add
shl
outs
repnz
jge
fsub
leave
stc
loop
xlat
cmps
pop
rcr
mul
mov
inc
xchg
(bad)
push
cdq
or
repz
mov
pminsw
mov
mov
inc
stos
xor
jp
stos
xchg
mov
sub
cmps
cmp
sbb
push
push
ss
es
dec
push
repnz
pop
xchg
pop
or
cwde
push
dec
(bad)
cmp
xchg
adc
xor
mov
out
cmps
pop
mov
fld
hlt
mov
jecxz
adc
stos
scas
loope
inc
iret
jns
push
mov
mov
adc
pop
jns
adc
push
out
out
sub
adc
sar
push
stos
test
test
std
xchg
jne
jmp
dec
pop
jno
rcl
or
stos
clc
ss
movs
or
pop
adc
imul
iret
cli
cmp
inc
leave
mov
out
push
fdivr
xlat
bnd
in
cmp
xor
js
test
retf
xchg
cmc
mov
aam
mov
pop
mov
data16
xchg
cli
fs
loop
mov
daa
fwait
(bad)
call
mov
push
(bad)
cmp
mov
and
test
push
fstp
repz
sub
xchg
outs
icebp
sbb
js
inc
dec
sbb
mov
sbb
jg
into
mov
dec
mov
mov
int3
mov
push
sub
jl
daa
mov
movs
adc
retf
sahf
adc
mov
pop
and
inc
les
sub
ror
(bad)
aam
int
push
add
push
in
repnz
jle
ret
movs
adc
xor
adc
pop
xchg
imul
fbstp
mov
clc
adc
mov
push
clc
add
gs
mov
test
in
ins
sub
iret
loope
mov
pop
in
(bad)
dec
xor
repnz
xlat
test
hlt
xor
cmp
or
outs
aaa
xlat
loope
mov
xchg
add
or
addr16
mov
xchg
fdiv
pop
push
jb
into
sbb
stos
rcr
jo
arpl
mov
cmp
mov
je
test
daa
fadd
fdecstp
enter
retf
scas
sar
lea
std
sub
stos
scas
ss
imul
cmp
jno
lds
frstor
retf
shl
fimul
lock
xchg
in
rcl
cmp
fistp
pop
outs
mov
push
out
jl
mov
adc
clc
and
cmp
gs
shl
ins
int3
mov
movs
mov
push
jnp
je
push
push
or
pop
pop
jae
mov
push
loop
lds
jo
pop
shl
inc
add
or
mov
es
jecxz
adc
fisub
jecxz
pushf
out
mov
shl
adc
in
pop
pushf
or
or
shr
and
int
and
push
test
shl
mov
push
dec
in
rol
push
xor
in
sysenter
in
aam
mov
push
loope
js
lods
imul
retf
sbb
push
adc
xchg
rol
fs
or
push
xchg
dec
jb
jmp
mov
fdiv
push
fs
jmp
pop
test
xchg
nop
sbb
shr
xchg
jle
not
pushf
vpcomub
or
jmp
fistp
int3
dec
ficom
cli
aas
fdiv
jmp
mov
adc
jle
popf
fst
jmp
adc
popa
pop
daa
adc
ret
stc
cmp
add
in
jmp
and
push
or
rol
sbb
hlt
mov
or
repz
cmp
cmp
sub
inc
fadd
xchg
push
fs
jne
outs
and
fsub
or
jnp
test
mov
cs
or
imul
sbb
adc
fcom
add
lahf
and
int3
aad
or
iret
and
aaa
aaa
shl
aas
outs
xchg
lock
cld
push
test
std
dec
mov
cmp
retf
pop
test
lods
pop
and
rep
pop
cmp
xchg
fidivr
fsub
jmp
jle
mov
pop
iret
fmulp
pop
jnp
mov
push
cmc
pop
outs
jnp
test
jo
push
test
or
daa
das
lods
adc
add
xor
cmp
sub
lea
adc
jg
lods
mov
mov
int3
or
jbe
pop
or
lea
jo
movs
fucomi
lods
lods
add
mov
inc
mov
jg
mov
out
cmps
nop
rol
gs
ja
mov
jle
pop
dec
and
push
xor
fisub
mov
xchg
xchg
push
aam
add
sub
pop
mov
cmps
aam
mov
xchg
mov
mov
dec
aaa
push
mov
les
lea
dec
dec
(bad)
push
popa
mov
aas
iret
and
ficomp
push
stos
mov
das
fst
xor
adc
dec
inc
jno
mov
xor
in
jae
movs
cli
pusha
jbe
movs
inc
mov
call
fbstp
sti
ret
add
add
push
std
mov
cmc
out
shl
test
ins
icebp
test
sub
or
sub
adc
sbb
lea
es
xadd
fs
cli
out
cmp
test
nop
xchg
mov
sub
and
icebp
jae
push
dec
je
xchg
push
mov
jp
ss
mov
jecxz
add
jg
imul
std
xchg
aaa
jp
retf
pop
lea
jecxz
push
jno
outs
inc
je
shr
pop
cwde
fisub
xor
dec
into
push
loope
sub
jno
add
arpl
mov
mov
mov
mov
pop
js
cmp
cmp
stc
retf
mov
jmp
std
push
retf
test
out
jnp
cmp
pusha
xor
sbb
test
pop
xor
fild
inc
xchg
fdiv
fnstenv
out
xchg
fisubr
outs
loop
lds
clc
iret
std
cmp
mov
retf
or
cli
in
inc
add
jge
cmps
das
ds
test
dec
pop
mov
and
enter
out
pushf
mov
jg
les
enter
stos
xchg
dec
jge
adc
push
iret
cli
int
jp
outs
lods
ss
je
aam
aam
or
cli
fidivr
dec
pop
push
or
iret
add
repz
push
fsub
ss
pop
push
push
push
aad
lods
mov
inc
(bad)
cs
out
or
fisttp
or
mov
inc
int
inc
rol
push
sbb
imul
jbe
pop
sbb
ss
in
lods
jp
mov
jo
cmp
gs
and
cld
jo
and
pop
fmulp
adc
es
out
iret
out
inc
dec
jnp
ret
push
fcomp
int3
mov
or
inc
out
fisttp
sbb
push
fs
mov
shl
dec
xor
test
call
push
sti
push
jl
jnp
arpl
dec
(bad)
fild
adc
pop
push
jns
js
popa
mov
dec
stos
dec
stos
out
mov
and
xchg
jbe
inc
inc
xlat
inc
lea
pop
jmp
outs
scas
(bad)
loopne
xor
inc
jb
jnp
(bad)
loop
test
sub
test
or
das
ret
pusha
int3
dec
jb
enter
adc
mov
mov
pop
popf
mov
push
xor
jne
dec
mov
xor
or
(bad)
lods
shr
(bad)
inc
cmp
iret
out
cmp
test
test
mov
and
push
cdq
mov
adc
pop
dec
cdq
(bad)
in
add
fwait
jae
scas
test
dec
sub
mov
sar
jno
inc
icebp
mov
in
cmp
fcomp
mov
mov
out
pop
arpl
sub
pushf
scas
xor
ror
neg
lods
xor
loop
in
pop
imul
cmp
aas
call
sub
push
call
repz
mov
adc
imul
and
ss
push
push
and
pusha
sub
mov
xchg
aas
test
inc
test
and
pushf
xor
in
cmp
sub
outs
mov
movs
pushf
mov
inc
fisubr
push
xchg
add
(bad)
hlt
ja
stc
das
and
sub
jne
cmp
inc
outs
shl
mov
gs
or
iret
test
pop
mov
add
cld
loopne
and
sub
mov
(bad)
div
ficom
add
jecxz
mov
mov
dec
loope
outs
xchg
pop
mov
aaa
pop
pop
arpl
popf
sub
icebp
push
gs
mov
pop
movs
pusha
sbb
test
stos
lds
cmp
xchg
ret
mov
fnstcw
aad
mov
pusha
es
sbb
pop
js
stos
adc
(bad)
cli
mov
cmp
ins
stos
cmp
dec
sbb
movs
je
sub
pcmpeqb
inc
inc
push
repz
ins
dec
jge
dec
sub
shl
mov
and
neg
mov
sbb
int3
shl
mov
outs
fstp
test
sbb
mov
nop
addr16
cld
test
movs
add
sub
jmp
xchg
daa
or
ror
and
leave
or
outs
repz
mov
and
mov
into
adc
mov
or
cmps
ret
jo
mov
ret
jno
and
jne
or
cli
xor
stc
inc
xor
mov
mov
or
out
(bad)
cmps
sub
pusha
call
and
dec
das
repnz
jnp
aas
push
aaa
pop
fimul
pop
adc
sbb
nop
pop
mov
je
sub
mov
xor
ins
mov
imul
or
xchg
mov
jle
out
jg
sub
retf
loope
cld
rol
cmp
sub
pushf
dec
cmps
jo
jp
in
outs
and
mov
test
sub
or
or
mov
xchg
icebp
dec
mov
out
inc
iret
call
dec
mov
sub
mov
mov
push
je
fcomi
stos
sbb
stc
pop
pextrw
mov
pusha
push
sub
js
je
into
xchg
out
in
fbld
or
pop
fwait
ja
lock
call
aas
jg
xor
imul
jne
ins
jns
test
pop
sbb
mov
retf
nop
dec
mov
push
daa
sbb
es
mov
push
in
push
pop
mov
mov
lea
mov
cmc
push
aam
nop
aad
cdq
out
(bad)
and
loopne
xchg
je
fsubr
stos
or
jmp
cmp
xlat
mov
lods
jl
sbb
or
xor
out
repnz
cs
push
les
mov
pop
push
pop
clc
div
jmp
cmp
pushf
cdq
jns
and
xor
ja
stos
bound
push
mov
lods
aaa
lods
pop
shl
out
popa
lods
clc
(bad)
sub
mov
dec
hlt
cld
and
mov
les
jge
popf
inc
neg
lock
ja
iret
mov
xlat
xor
pop
out
dec
adc
outs
mov
(bad)
jns
pop
dec
xchg
add
call
jae
dec
retf
jo
xor
lea
retf
(bad)
and
add
imul
cmp
inc
loopne
and
ret
das
jae
pushf
sub
cmc
push
add
push
mov
fild
fs
je
pushf
(bad)
jmp
add
adc
sub
jmp
test
sub
scas
loop
test
and
mov
sbb
xchg
xor
aas
inc
lods
fldpi
imul
add
repnz
add
jge
popf
rol
clc
fadd
pop
mov
mov
mov
xchg
bound
ss
or
leave
dec
mov
repz
or
xor
aaa
sbb
pop
rcl
and
jb
mov
xor
in
mov
xchg
add
jnp
add
mov
xor
pop
int
sbb
retf
(bad)
xchg
xchg
fadd
push
push
mov
(bad)
aas
mov
pop
xlat
inc
xor
hlt
cmc
inc
retf
popa
shl
js
hlt
xor
mov
pop
sbb
jecxz
cmp
idiv
xor
fs
mov
test
repz
sbb
jns
adc
push
jne
lods
or
lods
mov
out
(bad)
or
push
loope
adc
mov
mov
dec
dec
dec
pop
mov
gs
popa
cmp
mov
cmp
sbb
neg
dec
aaa
dec
dec
imul
(bad)
pop
mov
xor
dec
out
lahf
int3
xor
bound
mov
les
dec
(bad)
out
in
pop
add
repz
(bad)
cmc
hlt
sub
mov
mov
xchg
mov
inc
fld
sbb
adc
mov
or
movs
ins
clc
inc
add
or
popf
mov
rcr
mov
popf
mov
in
loope
(bad)
dec
jl
(bad)
mov
out
arpl
fdiv
inc
repz
push
gs
inc
push
(bad)
jno
call
jg
ret
cli
and
pop
pop
jle
in
arpl
repz
xor
or
(bad)
push
sub
int3
and
xchg
fcmovu
or
xor
repz
xlat
idiv
push
push
or
pop
std
inc
and
adc
xchg
lock
shr
push
stc
pop
aad
xchg
leave
rcl
out
dec
mov
je
mov
aam
pop
xor
inc
call
pop
clc
test
fst
test
stos
sub
xchg
es
add
xchg
mov
mov
repnz
loope
jle
fstp
sahf
js
xor
and
(bad)
push
pop
in
pop
or
test
jl
outs
inc
aaa
add
sub
cdq
call
ss
or
fmul
jns
mov
iret
pop
cmp
icebp
in
imul
iret
jecxz
add
stos
out
add
xchg
xlat
sub
aad
sub
pop
out
repnz
cs
cmps
sti
cs
jecxz
push
push
imul
dec
inc
rcr
xor
or
add
popf
mov
ins
cmp
pop
rol
mov
dec
stos
mov
test
popf
dec
fs
dec
sub
pop
ja
iret
xor
ficom
push
mov
xchg
loope
xor
mov
dec
jmp
mov
call
sub
cwde
in
(bad)
lods
ja
inc
ja
sub
dec
clc
ret
adc
add
rcl
es
cmps
out
lods
data16
and
mov
jae
imul
stos
and
addr16
cmp
rcr
push
mov
daa
or
into
sbb
mov
das
mov
cdq
or
mov
imul
test
sti
jmp
mov
cli
arpl
cli
mov
mov
aaa
sbb
push
aas
stos
movs
ja
in
rol
div
rcr
fld
xor
mov
cld
data16
dec
ss
xor
shr
es
into
fcmovnu
mov
dec
jo
and
mov
js
cmp
jl
test
mov
(bad)
pushf
adc
jl
xchg
cmp
push
adc
mov
packssdw
fld
rcl
lahf
scas
fwait
jno
pushf
jge
adc
push
dec
loopne
test
cli
je
push
or
mov
stos
arpl
xor
inc
sub
jmp
inc
and
outs
xchg
dec
in
shl
clc
xor
fs
ins
add
xor
outs
sbb
mov
addr16
ret
es
test
loop
push
push
xor
sbb
leave
cmp
mov
aaa
xlat
lock
sub
add
test
add
cmp
enter
mul
and
mov
dec
pop
scas
mov
cmp
inc
cdq
outs
xchg
mov
fldenv
jmp
mov
adc
les
push
pop
dec
repz
jmp
or
dec
jae
pop
and
lods
jne
xchg
jne
push
mov
dec
mov
js
int
in
jne
mov
aas
or
out
leave
mov
arpl
push
clc
add
clc
pop
aam
fcom
sbb
xor
(bad)
xchg
movs
(bad)
fnsave
cmc
loope
leave
pop
paddusb
or
cmps
gs
rol
add
daa
jge
pop
test
popf
xor
in
out
movs
xchg
and
sub
bound
push
call
pop
(bad)
lock
push
inc
outs
pushf
push
das
cmps
jl
xor
xor
pop
add
xchg
xor
adc
test
in
pop
push
xchg
cdq
add
jnp
lods
outs
xchg
push
test
inc
inc
sub
pop
jp
mov
dec
cs
fld
cdq
mov
repnz
aaa
and
jbe
ror
add
aad
int3
adc
mov
sub
ss
es
jbe
inc
mov
sub
popf
cmp
rcl
sub
not
cmp
je
mov
jmp
or
stos
mov
mov
fmul
jmp
test
je
mov
mov
mov
das
add
and
inc
xchg
and
repz
or
xor
or
push
les
xchg
int3
movs
dec
in
push
dec
adc
push
das
outs
cmc
and
stc
xchg
leave
rol
or
in
ds
or
sub
cwde
ins
stos
in
fdivrp
mov
xchg
rcr
imul
call
xor
(bad)
mov
stc
(bad)
in
out
sub
sbb
std
mov
movs
dec
mov
xor
sar
lods
popa
fwait
jns
inc
lods
push
dec
cmc
mov
mov
fdivr
sbb
dec
popa
push
and
outs
outs
retf
inc
pop
cmp
gs
hlt
mov
loope
mov
fwait
addr16
loop
ret
jo
mov
popa
or
(bad)
cmps
push
jns
xchg
adc
sbb
shl
push
jle
xor
cmp
or
dec
mov
xchg
pop
mov
mov
inc
or
(bad)
sbb
push
pop
pop
xor
(bad)
icebp
sub
ja
jmp
jae
nop
mov
inc
pop
dec
(bad)
jmp
lods
or
fst
fdivrp
or
xor
es
rol
pop
imul
test
xchg
mov
fs
(bad)
mov
movs
mov
sub
add
push
fadd
in
gs
in
retf
cld
fidivr
popf
js
out
pop
mov
(bad)
adc
pop
inc
sub
aam
bnd
repnz
jg
rcl
mov
stos
xor
shl
(bad)
and
leave
jbe
rcl
lods
dec
js
cld
jmp
inc
cmp
test
out
mov
mov
mov
ror
push
mov
add
push
xchg
mov
mov
in
outs
jl
inc
(bad)
bound
pusha
lds
and
hlt
and
repz
fsubr
jg
xchg
sub
xor
movs
dec
sub
out
fidivr
mov
int3
sub
ins
sbb
cmp
sbb
jne
mov
scas
inc
add
push
xchg
inc
mov
ins
dec
mov
aaa
div
aaa
lods
repnz
add
inc
shr
add
xor
push
push
inc
lods
push
cmps
mov
and
outs
mov
lock
jl
imul
pop
sbb
cwde
inc
std
rol
mov
out
pop
mov
add
stos
and
movs
lods
pusha
loopne
enter
pop
sbb
icebp
xlat
cmp
mov
cwde
cwde
lods
and
mov
shr
pop
push
mov
gs
sub
pop
fcmovu
push
or
imul
push
aad
xchg
jmp
cdq
push
xlat
cli
data16
mul
dec
sbb
add
dec
imul
fldenv
xlat
mov
stc
inc
mov
mov
sar
add
mov
xchg
ror
fwait
push
outs
add
jge
call
sbb
push
clc
xchg
or
lods
xor
push
mov
cmp
cmp
call
std
retf
bnd
(bad)
dec
ja
mov
inc
jmp
cld
fistp
arpl
sbb
cmps
push
les
xchg
movs
cli
ror
dec
nop
lock
mov
sub
push
fs
mov
adc
mov
scas
push
lods
xchg
movs
dec
xor
jl
xor
jmp
aaa
std
mov
(bad)
js
cmc
jl
int3
ror
inc
dec
popa
mov
fs
push
test
add
stc
mov
loope
pop
into
nop
adc
inc
nop
push
js
pop
inc
jns
mov
in
xor
mov
retf
enter
lods
cmp
lea
mov
pop
push
jmp
jbe
loopne
xchg
retf
sahf
dec
jae
jp
inc
retf
ins
jb
or
mov
nop
push
gs
shr
jne
cmp
repz
dec
and
dec
cld
jo
jnp
mov
icebp
mul
or
ror
ja
retf
pop
bound
mov
pop
dec
(bad)
sub
xchg
mov
push
cld
ficomp
mov
adc
add
repnz
scas
push
in
cmps
and
int
lock
xchg
lods
jle
lods
pop
mov
aas
ss
adc
pusha
jge
jge
pop
mov
jecxz
jg
mov
cdq
sti
idiv
pop
ret
aas
js
aas
test
inc
jl
xchg
mov
mov
pop
pop
mov
pop
adc
shl
push
pop
mov
mov
inc
ret
ins
sbb
nop
(bad)
aaa
dec
rcl
movs
fs
rol
shrd
dec
mov
push
add
adc
ror
and
popf
xchg
je
outs
cli
mov
retf
pop
scas
add
les
xchg
jl
cmps
push
xor
lea
xor
mov
dec
dec
cwde
outs
nop
loope
pushf
imul
sbb
and
and
sbb
mov
clc
inc
jl
or
mov
push
xor
je
adc
rcl
mov
ss
xor
nop
je
js
in
push
or
leave
div
adc
in
push
push
clc
push
push
mov
repnz
jmp
cmc
add
push
cmc
(bad)
aam
cmp
jmp
inc
xchg
adc
push
sbb
xchg
sub
sbb
pop
mov
jnp
aaa
xor
mov
popf
pop
call
imul
(bad)
ficom
in
lods
cmp
sti
scas
mov
ins
lods
nop
cld
call
bound
jge
cmp
test
mov
push
and
push
xchg
je
ins
xor
mov
daa
iret
pop
jns
cmp
cmp
xchg
mov
xchg
xchg
(bad)
mov
xchg
push
lds
retf
inc
cmp
ss
pop
stos
cdq
sahf
js
fwait
sbb
jae
dec
cmps
push
scas
mov
sub
mov
inc
mov
push
popa
inc
mov
inc
bound
loop
add
sub
test
dec
mov
push
imul
adc
loop
call
arpl
xchg
scas
sub
fsubr
add
inc
adc
or
inc
imul
movs
mov
adc
sahf
loope
push
mov
stc
fisttp
out
fdiv
es
sub
or
cwde
sbb
movs
shr
mov
sub
pop
fsub
push
inc
(bad)
fstp
or
sbb
xchg
cmps
stos
jbe
jmp
jmp
ror
mov
js
mov
das
push
jns
mov
test
scas
push
and
and
test
fdivr
nop
(bad)
pop
test
cmp
(bad)
pop
cmp
xor
and
scas
ja
hlt
cmp
mov
mov
dec
xchg
in
and
pop
cli
xchg
add
push
or
inc
lods
and
sbb
push
rcl
cmps
pushf
mov
cmp
jno
mov
outs
and
mov
mov
clc
sbb
jmp
pop
cmps
sub
jo
push
dec
xchg
out
mov
mov
dec
push
outs
add
xor
aas
add
fisubr
loope
and
add
add
jmp
pushf
xor
enter
push
je
loopne
jmp
stc
hlt
or
into
cld
xchg
push
adc
leave
jno
test
sub
cmp
xchg
inc
jle
jp
mov
gs
sub
loop
les
push
jns
fmulp
shl
xor
adc
push
inc
add
mov
adc
cmp
lahf
scas
sbb
fwait
ror
(bad)
cmc
nop
cld
int
or
dec
pop
cmp
push
sahf
adc
push
stos
push
mov
or
sti
out
fs
pop
fsubr
mov
sbb
call
fld
aas
lds
lods
ja
add
cmp
inc
imul
xchg
and
lods
scas
(bad)
add
sahf
adc
retf
mov
into
inc
push
gs
mov
pop
push
cvtdq2ps
fwait
jle
jns
pop
ins
movs
jecxz
fadd
mov
xor
add
and
mov
stos
es
cmc
adc
pop
jns
jmp
mov
enter
mov
push
ins
pushf
pop
inc
or
cli
jbe
add
cmp
mov
test
sahf
push
fdivr
add
sar
cmp
ds
sbb
sbb
xchg
jmp
ss
sbb
mov
cmps
outs
sar
fwait
or
add
out
das
rcl
lds
aam
and
mov
outs
jecxz
sbb
sub
mov
mov
retf
cli
aad
or
fst
or
xchg
add
mov
push
fwait
xor
popa
pop
fwait
sti
sti
repnz
in
scas
sub
callw
fbld
and
add
cmp
fwait
push
fidivr
(bad)
pop
dec
inc
icebp
adc
and
xor
jle
enter
lahf
pop
adc
cld
cld
fisubr
add
fcomp
je
ds
daa
fmul
jge
out
lds
inc
sti
test
stos
pop
mov
aad
hlt
out
push
in
and
dec
cs
xchg
fcom
aaa
fcmovnbe
fwait
inc
jle
jmp
xchg
fld
cmp
mov
mov
ss
and
out
call
adc
sar
inc
dec
shl
aam
mov
mov
arpl
popa
cmp
mov
fidiv
loop
cmp
(bad)
bound
cmps
movsx
jge
outs
cli
sti
out
aas
mov
cmp
cmpxchg
loope
scas
sub
inc
pop
dec
push
fwait
(bad)
mov
adc
sub
(bad)
pusha
lea
out
in
jne
or
cmp
sbb
shl
repz
xchg
(bad)
cdq
inc
gs
retf
or
(bad)
sbb
mov
jg
cdq
xchg
test
ss
cdq
cmc
sub
ins
leave
ins
or
dec
inc
xchg
add
mov
jl
mov
stc
fwait
lods
in
mov
int3
adc
jbe
loope
and
dec
pop
test
retf
in
xchg
mov
popa
inc
arpl
mov
cs
pop
jns
dec
jns
adc
out
adc
jnp
outs
sbb
mov
aaa
inc
sub
fisub
leave
dec
or
fistp
sbb
pop
addr16
arpl
xor
mov
jge
repz
sub
push
jae
jle
cs
stos
mov
jmp
and
ja
rcr
sbb
or
dec
test
adc
jmp
sub
vmulss
cmps
aam
mov
push
mov
mov
ds
test
shl
mov
test
sti
test
xchg
fnstenv
cdq
ins
fidiv
into
shr
test
nop
add
pushf
ins
xor
pop
sub
mov
xor
(bad)
pop
call
std
mov
out
out
cmps
(bad)
jo
fidiv
sti
inc
mov
outs
(bad)
out
xor
push
aas
test
and
or
or
call
push
sub
aam
es
popa
mov
and
inc
loop
imul
je
loope
fisttp
call
push
inc
sahf
jnp
xchg
add
out
xchg
add
in
inc
add
or
cmp
mov
pop
ins
iret
jp
cdq
mov
xor
addr16
pop
sub
mov
xchg
fidivr
cmps
or
nop
nop
inc
enter
int
cmps
cmp
aad
xchg
cdq
std
clc
cmps
test
jmp
pop
js
sbb
mov
(bad)
and
int
push
cmc
mov
std
xor
or
cli
xchg
aas
movs
mov
jle
sbb
push
jl
aas
push
arpl
sbb
or
lods
sub
pop
inc
mov
int3
mov
or
pop
push
push
or
push
mov
mov
jp
jns
mov
aaa
xchg
or
out
in
lods
in
adc
and
add
sbb
mov
xchg
inc
adc
mov
dec
(bad)
xchg
mov
jle
ret
stos
sbb
and
not
dec
dec
mov
jmp
stos
lock
imul
ret
loopne
adc
js
cmp
lea
pop
pop
retfw
test
test
pop
push
(bad)
call
jmp
sbb
push
int
das
cmp
xor
mov
xor
mov
mov
bound
fsubr
xchg
mov
xchg
cmc
xor
lods
pop
in
int3
sbb
test
jmp
test
(bad)
sub
sub
push
xor
les
push
jbe
dec
or
mov
and
push
inc
je
sub
dec
pop
(bad)
lods
and
popa
js
sub
iret
dec
and
lock
int
mov
(bad)
push
mov
imul
mov
and
test
inc
sbb
mov
inc
aas
sbb
shl
cdq
movs
mov
loopne
(bad)
test
xor
rol
dec
scas
cmp
lds
push
cmp
or
mov
jnp
(bad)
cmc
jne
(bad)
or
push
xchg
pop
push
stos
xor
or
mov
lahf
retf
pcmpgtb
adc
jo
xor
imul
ins
hlt
(bad)
mov
cmc
cmp
xchg
lds
sbb
cmp
sub
mov
and
inc
jecxz
les
dec
xor
test
scas
popf
out
outs
lds
in
es
mov
lods
mov
sub
ds
mov
in
mov
int
xor
es
rcl
mov
loopne
leave
add
hlt
inc
aad
push
inc
or
loope
pop
add
gs
and
xor
push
xchg
bound
cs
es
cmp
callw
mov
xchg
dec
mov
add
jne
cmps
pop
cwde
aaa
or
aaa
(bad)
int3
clc
mov
das
loopne
push
fwait
push
test
inc
mov
cmp
test
jae
mov
movs
inc
cmps
and
add
lahf
jmp
and
icebp
jecxz
jecxz
daa
inc
jbe
lods
cs
rol
or
jns
sti
dec
aaa
push
xor
push
jns
retf
or
sub
mov
mov
mov
lods
adc
inc
sbb
fidiv
into
mov
sub
dec
test
mov
and
jmp
fmul
push
icebp
js
inc
dec
xchg
sbb
xlat
hlt
xchg
cmp
xchg
(bad)
frstor
lahf
(bad)
int3
icebp
or
xchg
ins
daa
mov
fcomi
(bad)
test
mov
repnz
popa
xchg
in
dec
mov
rcr
cld
inc
pop
mov
dec
mov
dec
retf
leave
sbb
out
mov
xchg
imul
popf
push
mov
les
xchg
push
dec
addr16
push
mov
dec
mov
pusha
imul
jno
ret
mov
inc
das
sub
xchg
in
jle
cld
push
sbb
mov
xchg
and
sbb
inc
dec
inc
in
mov
in
push
or
scas
xchg
shr
xchg
int
inc
inc
(bad)
fdiv
mov
fimul
div
sub
je
ret
inc
mov
pop
jns
addr16
and
sub
stos
add
xchg
retf
add
aad
or
lods
dec
jae
push
mov
ja
sub
ret
jo
call
pop
lods
jle
ins
sub
loopne
or
push
jmp
push
ror
ret
mov
and
das
fmul
out
jecxz
push
jno
push
push
in
mov
add
hlt
dec
imul
cli
es
in
aas
mov
mov
cmc
mov
daa
xchg
xchg
dec
icebp
sar
xchg
adc
or
das
(bad)
leave
jnp
mov
popf
pop
and
hlt
mov
pop
aaa
add
or
pushf
arpl
arpl
or
pop
fcmovnbe
jle
into
imul
call
xor
xchg
sbb
add
or
sub
push
xchg
sti
ins
fmulp
lea
push
clc
xor
scas
fnstcw
nop
adc
add
jnp
xor
push
mov
(bad)
pop
popf
mov
daa
pop
jp
adc
ins
add
pop
push
add
sub
scas
dec
repnz
sub
push
adc
cmps
cmp
fcmovb
outs
mov
push
push
test
or
pop
sbb
add
loop
jecxz
rcl
or
loop
mov
sbb
dec
and
dec
jae
push
or
(bad)
xor
iret
push
in
cli
jmp
jecxz
cmp
(bad)
je
out
cld
stc
and
pop
mov
jbe
jne
cmp
inc
call
icebp
mov
cmp
jle
and
mov
inc
ins
(bad)
leave
fisttp
test
and
push
lds
inc
inc
fsub
pop
jecxz
cwde
(bad)
mov
jp
sub
(bad)
sub
repz
push
gs
mov
iret
bound
pop
ds
outs
cmp
mov
xor
xor
lahf
xchg
pushf
dec
sub
jns
jnp
xchg
in
cmp
push
test
jnp
pop
pop
jb
imul
cld
ds
repz
cs
cmp
cs
mov
dec
sbb
dec
cwde
fsub
sbb
jo
and
jg
push
cmp
(bad)
bound
or
loopne
adc
mov
lods
jns
mov
repz
lock
xor
mov
fwait
int3
sbb
(bad)
iret
jmp
pushf
cmp
clc
push
xchg
cmp
lods
dec
cmc
loopne
sbb
(bad)
xchg
adc
retf
mov
pop
mov
mov
hlt
sub
xchg
lods
inc
mov
sub
sbb
sub
loope
cli
mov
cdq
cld
xchg
pop
nop
out
jo
daa
lahf
pop
mov
or
mov
enter
pop
inc
xlat
mov
push
ret
and
xchg
adc
fisubr
and
fidiv
cmp
sub
sub
adc
dec
mov
sub
sub
pop
mov
ror
int3
push
or
sbb
ss
out
jno
mov
(bad)
retf
mov
push
jmp
sub
inc
es
mov
jle
adc
xor
xchg
test
je
out
rcl
push
lods
retf
pop
mov
(bad)
pushf
fs
cdq
movs
mul
jnp
ss
pop
int
lods
(bad)
jmp
xchg
pop
in
(bad)
sbb
test
and
sub
loope
les
xor
push
lods
movs
mov
xor
loope
dec
dec
pop
lods
bound
rcr
mov
jo
addr16
and
jmp
cmc
shl
mov
mov
or
sbb
xchg
outs
inc
call
and
es
mov
mov
mov
xchg
adc
cmp
sbb
imul
push
iret
cmp
maxps
repnz
ret
out
mov
sahf
clc
or
xchg
jmp
sbb
and
mov
mov
push
gs
mov
aas
aaa
cmp
popf
mov
sar
xchg
or
cs
arpl
mov
retf
jbe
bound
cmps
dec
lods
cmp
jb
jg
pop
cmps
ins
push
cmp
loope
dec
mov
das
daa
int
adc
pop
int
rcr
xor
call
shr
jnp
fnstenv
shl
push
push
shl
enter
cmp
call
out
add
lock
fwait
out
cs
in
inc
or
pop
pop
rol
push
pop
mov
add
mov
and
inc
jo
test
inc
imul
call
fwait
mov
cmc
pop
adc
lods
jae
outs
mov
or
cli
sbb
mov
push
sub
in
and
stc
sar
xchg
or
fdivr
and
push
repz
or
push
mov
xor
in
mov
je
(bad)
pop
gs
mov
mov
loopne
and
es
sub
pop
inc
fs
enter
mov
test
mov
adc
sub
lods
loope
and
pop
mov
pop
pop
or
clc
or
mov
xchg
cmps
sysexit
dec
pcmpgtb
jnp
push
popf
mov
add
test
scas
nop
jl
inc
xor
fst
push
test
fs
adc
sbb
pop
stc
mov
xor
xchg
add
cs
je
pop
xor
in
popf
add
fst
cld
mov
mov
fwait
sub
sub
call
cmp
aas
dec
loopne
mov
dec
pop
and
adc
ret
ss
mov
loope
leave
mov
(bad)
leave
loop
push
neg
out
xor
mov
pop
stos
and
push
xchg
imul
mov
imul
pop
push
hlt
ds
sti
xlat
or
and
jno
enter
push
mul
stos
jge
ins
sahf
int3
movs
mov
mov
sub
leave
xchg
in
mov
xchg
rcl
loope
out
and
daa
neg
es
xchg
or
mov
outs
inc
push
rcr
icebp
(bad)
mov
dec
sar
sbb
ins
push
stos
xor
jo
aas
outs
in
es
stos
mov
xchg
lods
mov
cmp
les
jb
(bad)
sbb
std
es
jne
jl
inc
or
add
loop
repz
cmp
and
lea
mov
or
mov
add
fst
push
or
push
xor
mov
adc
cmps
or
stos
ror
inc
sbb
adc
idiv
(bad)
ficom
mov
cmps
mov
cld
push
dec
add
mov
gs
mov
cmp
cmp
push
out
mov
cmp
xor
addr16
mov
lock
pop
xchg
aaa
pop
and
sub
lds
mov
std
push
js
sti
mov
std
sub
mov
xchg
fdiv
iret
retf
sub
pop
xchg
mov
push
test
inc
add
cmp
enter
push
mov
add
pop
jle
adc
pop
mov
sbb
out
gs
xchg
push
xchg
int
sub
and
fimul
mov
jge
push
sub
pop
lods
sbb
int
add
mov
adc
inc
and
pop
ins
in
int
cmc
xchg
pushf
rcl
nop
xor
and
ds
and
xchg
arpl
arpl
jo
xchg
sbb
adc
push
imul
push
test
jo
adc
push
adc
call
adc
push
mov
(bad)
jne
push
test
sbb
push
and
mov
xor
loopne
sub
dec
and
lods
jmp
out
or
lods
xchg
pop
pop
jp
fldenv
xchg
push
or
mov
mov
adc
(bad)
fld
inc
leave
jne
push
enter
test
loop
mov
scas
lds
pop
(bad)
cmp
dec
scas
dec
les
mov
sbb
ss
jmp
add
cwde
mov
out
test
fnstenv
xor
call
sub
inc
arpl
test
cmp
xor
or
jae
jnp
fcomip
shl
cmp
sti
push
jo
movs
xchg
sub
cmp
ss
ins
xor
retf
mov
outs
mov
cs
inc
lods
xor
push
cld
mov
push
test
test
add
loop
push
fimul
sub
js
xor
ja
fsub
lds
mov
mul
ins
push
fwait
mov
fnsave
jp
fwait
jg
xlat
(bad)
dec
sbb
pop
out
push
mov
cmps
enter
cmc
cmp
leave
inc
aaa
(bad)
dec
(bad)
shr
dec
dec
pop
lock
mov
scas
push
xchg
mov
dec
cdq
or
gs
mov
push
out
fdivr
iret
inc
jp
fbstp
dec
ret
(bad)
scas
jmp
dec
sub
lea
icebp
cmp
sar
sar
jnp
cmp
shr
jb
and
into
mov
dec
not
jae
aaa
shl
inc
mov
xor
mov
lock
xchg
sbb
mov
mov
imul
mov
xchg
das
mov
sub
xchg
pop
mov
sub
adc
call
sub
sbb
imul
push
sti
inc
or
lds
and
mov
(bad)
mov
js
pop
je
mov
mov
adc
cmp
and
repz
(bad)
push
mov
movs
aas
pop
xor
cdq
(bad)
rol
jo
lahf
ja
sbb
sub
push
xor
add
sar
js
sbb
cmp
shl
xchg
test
xor
and
jl
pop
mov
xor
jg
dec
mov
sub
and
ss
popa
jb
jbe
neg
and
fisubr
popf
int3
push
jmp
mov
out
sub
(bad)
cmp
aaa
mov
movs
cmp
adc
sub
dec
aas
adc
inc
jl
sub
dec
or
test
hlt
movs
inc
mov
out
mov
pop
or
xchg
sbb
ret
dec
jmp
push
mov
movs
sub
xor
add
mov
adc
movlps
sar
jg
ud0
push
pop
fistp
enter
xchg
sub
in
adc
jbe
mov
dec
aaa
imul
jecxz
mov
add
xor
out
jne
cmp
dec
jl
and
mov
fldenv
jnp
dec
and
ror
(bad)
aam
adc
int3
ret
ds
mov
lods
imul
pop
adc
mov
loope
shl
test
pop
fsub
and
xchg
push
retf
pop
rcl
pop
sar
ins
inc
aam
outs
mov
jo
in
pop
cmp
mov
mov
jo
mov
mov
lea
lds
inc
sub
enter
sbb
xchg
sbb
cmp
je
lods
sub
fldenv
test
cmp
shl
xor
popa
sbb
idiv
addr16
and
pop
sub
cmc
popa
adc
dec
cmps
xor
lock
mov
push
xor
imul
cs
jmp
(bad)
lods
mov
jae
cmp
(bad)
(bad)
sub
test
pusha
xchg
sub
mov
push
jg
dec
pusha
aaa
test
pop
sbb
xchg
fwait
dec
adc
push
pop
dec
test
mov
xor
retf
ds
xor
icebp
push
sub
ins
rcr
mov
jmp
xchg
cmps
jmp
std
or
mov
cmp
jo
int
mov
arpl
inc
(bad)
int
and
ror
retf
fadd
pop
sub
mov
mov
mov
test
mov
fisubr
adc
sbb
sbb
xlat
xor
cmp
call
inc
mov
sub
loopne
(bad)
loop
push
xchg
xor
jmpw
pop
mov
add
fstp
cmps
loopne
xchg
sub
addr16
fldcw
jb
aam
add
or
sbb
jno
inc
and
sub
fdivr
sub
scas
sar
mov
cmps
mov
sub
sub
scas
ss
mov
or
iret
xchg
mov
cld
pop
mov
or
sti
cwde
out
out
push
adc
movs
inc
push
sub
sti
sar
addr16
mov
mov
sar
push
add
mov
out
xchg
fst
ror
leave
dec
jae
ss
imul
ret
sub
mov
and
sub
test
(bad)
jl
cmps
ja
or
mov
inc
loop
stos
add
ds
aad
jnp
cli
rol
out
inc
pshufw
out
sbb
add
int
inc
mov
fisttp
out
sbb
repz
xor
addr16
(bad)
pop
dec
leave
retf
adc
(bad)
push
jmp
inc
pop
jno
sbb
push
inc
outs
out
push
mov
inc
lods
mov
pop
call
xchg
sbb
jp
add
xor
pusha
jnp
xor
lahf
add
mov
mov
xchg
loopne
imul
dec
adc
push
addr16
pop
push
cmps
add
push
cmc
in
mov
ret
lahf
mov
add
fnstcw
mov
adc
cmc
xor
repz
pushf
pop
xor
xor
fs
add
aam
xchg
lock
push
add
sub
ror
es
push
mov
jo
dec
shl
adc
xchg
push
dec
out
pop
mov
rcr
icebp
push
jbe
sub
mov
xchg
aam
clc
xor
je
shr
sub
cdq
xchg
je
bound
sbb
movs
push
call
hlt
test
sub
or
add
mov
or
mov
add
loopne
xor
in
aas
push
call
dec
pusha
in
pop
sub
les
sti
int
jo
enter
fadd
movs
repz
imul
xchg
int
mov
pop
(bad)
arpl
jmp
pop
je
and
ds
sahf
cmp
js
test
cli
aam
mov
add
jno
push
add
popa
daa
leave
mov
xchg
ror
ins
ins
shr
es
retf
add
push
and
rcr
jne
arpl
mov
xor
jns
inc
xchg
in
jmp
idiv
scas
test
arpl
aam
js
push
cli
repnz
cmp
(bad)
push
jmp
sub
adc
jmp
lea
retf
push
adc
aas
arpl
pop
sahf
mov
popf
jno
sbb
inc
fdivr
mov
cs
lea
mov
or
test
or
sub
xchg
inc
push
pop
sbb
push
retf
dec
add
in
adc
jne
ja
push
pop
adc
xchg
in
jno
inc
mov
jbe
mov
xchg
fsub
jp
mov
out
ror
mov
lds
pop
or
mov
(bad)
dec
mov
mov
cmp
outs
jnp
call
push
inc
pop
and
movs
aad
(bad)
movs
pop
mov
out
inc
jbe
in
scas
push
es
pop
sbb
mov
test
mov
ss
scas
cmp
jns
fcmovbe
ret
xor
add
out
mov
ds
push
call
in
addr16
pop
xor
out
jle
pop
jle
stos
popa
dec
sbb
xor
lods
inc
or
iret
rol
inc
push
icebp
icebp
aas
popa
jl
test
in
lods
mov
int
adc
fcom
lds
mov
out
push
rcl
xchg
stos
add
and
push
idiv
fsubrp
(bad)
jno
mov
mov
inc
call
or
push
xchg
fisub
push
sub
test
popa
cwde
and
xchg
je
jo
pop
cmp
fcomi
mov
add
loopne
das
inc
ret
fwait
push
xchg
aas
punpckhwd
ror
mov
ds
xchg
call
in
(bad)
retf
push
mov
sub
inc
sbb
jns
pop
cmp
int3
and
pop
jbe
test
adc
popa
ds
sub
cmp
jle
sub
jl
sub
test
sub
mov
push
pop
or
and
arpl
sbb
or
push
and
mov
imul
int
jmp
imul
sbb
call
xor
dec
and
test
jnp
xchg
xlat
movs
xor
aam
mov
push
lea
outs
add
in
or
push
test
(bad)
jae
xchg
xor
ret
add
xor
adc
stos
ds
rcr
dec
lea
retf
cmps
fisttp
dec
pop
cdq
(bad)
jnp
jne
pop
jge
add
add
pop
inc
pop
xchg
jo
(bad)
push
sub
jl
push
push
in
xchg
ffreep
mov
mov
mov
hlt
cmp
pop
and
dec
shl
lods
inc
or
sub
pop
xlat
fnsave
aad
int3
aas
push
pusha
push
adc
sbb
in
add
mov
aas
or
inc
cmc
scas
js
push
xor
xchg
lea
push
cmp
sbb
pushf
fwait
arpl
xor
sti
es
inc
cmp
jge
xchg
stc
cmps
lock
loopne
jecxz
adc
inc
push
mov
dec
inc
and
movs
ss
in
cwde
pop
mov
pop
mov
gs
enter
dec
stos
mov
es
add
mov
aaa
in
dec
lea
push
call
out
inc
daa
mov
dec
mov
in
nop
xlat
dec
push
(bad)
(bad)
repz
loopne
xor
push
sub
jo
ficom
(bad)
fild
dec
jecxz
add
cmc
int
iret
pop
int
ret
sub
cmp
push
mov
cmp
cmc
(bad)
jp
xlat
xchg
sbb
jno
lahf
pop
mov
dec
and
jno
sbb
or
hlt
xor
pusha
or
cmp
add
adc
movs
stc
or
mov
sub
in
imul
cmp
sub
enter
into
add
sub
mov
movs
popf
data16
pop
call
scas
push
je
(bad)
jns
inc
ins
and
test
shl
loopne
aas
pop
xchg
or
mov
ss
xor
psubb
mov
or
mov
dec
or
dec
jns
mov
stos
icebp
mov
outs
add
icebp
cmp
out
mov
jp
add
sub
xchg
mov
stos
cmps
popa
jmp
repz
jae
mov
hlt
add
jne
(bad)
xchg
clc
mov
mov
jg
adc
xchg
call
push
fist
mov
push
scas
popf
sub
movs
cmp
xor
cld
gs
jle
xchg
fidivr
add
sti
(bad)
sahf
xchg
test
arpl
dec
sub
ins
lods
xor
cld
pop
push
cmp
movs
clc
(bad)
lea
add
sbb
mov
mov
inc
fimul
sbb
xlat
int3
loope
sti
mov
rcl
stos
jg
or
push
adc
imul
(bad)
pusha
jae
dec
xchg
int
jne
addr16
and
push
fimul
pop
xchg
loopne
adc
test
jge
mov
dec
adc
(bad)
(bad)
jno
mov
(bad)
jnp
xchg
lahf
call
out
lds
mov
retw
sub
popf
das
and
repnz
mov
jne
sub
retf
idiv
movs
data16
jle
dec
cmp
mov
xchg
in
and
cmps
das
int
xchg
sub
(bad)
fwait
aad
or
gs
cmps
pop
and
fwait
jp
dec
xor
xchg
push
and
movs
repz
lds
adc
sub
lds
neg
add
test
nop
(bad)
adc
ret
xchg
jmp
shl
lds
(bad)
mov
jns
push
loopne
xor
(bad)
push
aad
aad
mov
mov
loop
sub
push
fcom
out
les
jp
push
mov
inc
call
outs
sbb
cmc
rol
cdq
outs
push
cli
out
inc
mov
or
popa
cdq
repz
dec
aam
in
imul
ds
in
(bad)
push
push
push
mov
push
jmp
dec
xor
data16
add
xor
xchg
dec
jmp
in
mov
stos
jle
add
jmp
add
lea
nop
push
or
add
xchg
mov
aas
rcl
hlt
cmp
outs
ret
mov
jno
pop
lock
sub
aad
jne
inc
ret
sbb
jae
inc
sub
inc
sub
mov
ja
imul
bound
(bad)
sub
lock
shl
out
pop
aam
fmul
hlt
cdq
inc
int3
jl
ret
mov
jne
enter
xor
adc
and
data16
popa
test
hlt
test
jle
push
fucom
add
cs
jbe
pop
push
test
ret
test
inc
loopne
and
adc
mov
xchg
mov
or
inc
imul
je
ins
test
mov
shl
(bad)
call
sub
pop
lock
add
scas
xor
adc
iret
loop
mov
sub
jnp
inc
fistp
and
jl
lahf
cmp
jne
jl
lods
and
aaa
pop
or
in
xor
js
mov
push
jge
inc
(bad)
test
inc
mov
shl
cmp
xlat
sub
repnz
pop
add
pop
push
rcr
sub
mov
jno
shl
jbe
add
adc
pop
outs
jecxz
fld
jb
mov
repnz
rol
popa
(bad)
sbb
inc
leave
shl
retf
mov
add
sbb
(bad)
dec
sub
ss
cmp
shl
sub
mov
cmp
sahf
inc
cli
test
pop
xor
inc
jno
and
lds
xchg
callw
push
sti
xchg
mov
mov
cwde
loope
test
xlat
lahf
jmp
call
sbb
inc
inc
pop
clc
test
outs
arpl
add
or
cli
jle
push
mov
pusha
mov
repz
mov
mov
push
leave
push
cmp
in
(bad)
in
dec
(bad)
or
mov
js
and
or
ret
adc
push
sbb
adc
or
dec
mov
or
stos
popf
cmps
cmps
cdq
(bad)
mov
xor
pop
inc
test
sbb
aam
cmp
loopne
sub
enter
mov
fcom
ja
sbb
cdq
mov
add
mov
mov
and
jo
jnp
iret
cmp
(bad)
fsubp
fnstenv
add
(bad)
and
jne
dec
push
push
movs
inc
(bad)
sub
inc
mov
jmp
icebp
jge
(bad)
jb
ffreep
mov
sar
sbb
aas
sti
loopne
scas
jae
jmp
nop
fs
stc
ins
sti
or
stc
inc
jecxz
and
lea
movs
icebp
sbb
lahf
cmp
cmc
hlt
xchg
clc
pop
jecxz
cli
adc
aam
cli
inc
dec
call
add
mov
xor
xchg
jno
push
jo
pop
div
mov
out
or
sti
xchg
mov
xor
xor
dec
fcomp
jae
imul
mov
add
ins
sbb
sti
mov
xor
ja
call
aas
dec
cmp
in
cmps
fwait
sbb
jbe
mov
lods
out
pop
lea
dec
or
vpunpckhwd
dec
aad
adc
bound
ins
(bad)
push
mov
or
stc
cmp
dec
sti
(bad)
pusha
or
mov
add
ss
sub
imul
(bad)
test
out
jg
jecxz
sbb
out
and
inc
dec
lods
xchg
scas
sbb
test
scas
xor
mov
sbb
ds
push
jecxz
pop
scas
test
add
inc
ds
scas
in
idiv
jmp
sbb
ja
mov
push
sub
ins
sub
rcl
jnp
jle
push
add
jno
iret
xor
cmp
mov
push
pop
fwait
retf
inc
fist
jecxz
xchg
cmp
adc
inc
pop
jno
outs
jl
jecxz
jmp
js
outs
sub
and
lahf
lea
imul
fdivp
cmp
jnp
fistp
loop
ret
jmp
jmp
cmp
movs
cs
adc
adc
cmp
aaa
adc
fs
sbb
hlt
adc
mov
shr
mov
add
xchg
retf
xor
mov
test
pop
or
shr
xor
stos
stc
and
das
sub
xchg
xchg
mov
or
add
push
call
cli
inc
shl
dec
and
and
bound
mov
je
aad
adc
jae
mov
aam
jmp
or
dec
enter
jno
jmp
popf
iret
repz
or
pop
(bad)
out
call
dec
dec
daa
mov
enter
lahf
mov
sub
or
ins
pop
jmp
enter
mov
add
into
cmp
test
dec
cwde
leave
fidiv
and
mov
and
add
jne
or
fwait
xchg
cli
out
arpl
or
nop
iret
xchg
jp
dec
and
xor
mov
lods
(bad)
call
xchg
ret
pop
jecxz
out
(bad)
cmp
and
jge
mov
push
pop
push
cwde
sbb
and
dec
xchg
adc
push
(bad)
mov
jae
inc
pop
mov
mov
repz
div
push
cli
xchg
mov
sbb
ret
fist
inc
xor
and
push
jbe
cmp
dec
push
in
test
ret
jge
das
(bad)
xchg
pop
stos
hlt
push
loope
push
cli
into
jl
cmp
jle
jnp
outs
pop
dec
push
xor
sub
adc
xor
push
sbb
fiadd
mov
inc
fist
inc
inc
push
enter
int
inc
in
ins
or
lods
clc
and
leave
xchg
adc
test
clc
pop
shl
pop
aaa
push
add
sar
and
shl
test
jle
test
fdivr
movs
js
ss
and
dec
movs
aaa
add
enter
aaa
mov
and
jbe
movs
xchg
daa
jb
icebp
xor
jae
jg
cmps
inc
aas
cmp
or
add
jecxz
in
sub
cvtps2pi
adc
inc
push
and
into
in
xor
imul
std
mov
mov
add
or
data16
lods
jmp
cli
add
xor
test
inc
lock
dec
mov
frstor
xor
pop
fs
mov
mov
leave
fcom
jmp
sbb
test
and
lds
xor
cmc
cmp
popa
xchg
inc
cmp
stc
pop
scas
sub
js
mov
push
int3
dec
scas
repnz
scas
das
out
sbb
adc
ins
movs
jg
(bad)
adc
inc
dec
lods
add
pop
jp
movs
pop
and
fdiv
dec
mov
fs
call
ins
adc
out
add
cmp
sbb
adc
mov
pop
dec
jns
mov
push
sbb
out
and
jge
adc
sbb
xchg
addr16
mul
cmp
push
adc
adc
cmp
push
(bad)
cmps
cmp
leave
pop
ja
sub
sbb
loopne
jb
mov
or
(bad)
adc
sub
mov
jle
or
retf
hlt
out
xchg
imul
mov
dec
fs
mov
jns
movs
cmps
enter
movs
pop
adc
mov
int
inc
inc
sar
xor
int3
or
jmp
fisubr
push
ja
out
pop
xor
cmps
cmc
out
adc
dec
cmp
or
inc
xchg
adc
js
jbe
or
jmp
xlat
mov
xor
cli
cmp
enter
jecxz
repnz
aas
into
inc
mov
and
rcr
rol
daa
lds
push
adc
stos
jl
add
aad
pop
dec
cmps
aam
out
push
add
dec
ja
pusha
sbb
das
and
daa
out
sbb
movs
bound
pushf
out
xor
lods
std
push
cld
push
fistp
pop
push
in
sbb
bound
dec
arpl
jle
xchg
imul
jp
stos
cli
daa
into
mov
jmp
fld
call
cmp
mov
adc
inc
mov
std
and
inc
cs
push
cmp
les
add
xor
fcmovu
sbb
mov
clc
inc
lods
mov
aam
out
adc
xchg
(bad)
stos
and
mov
movs
inc
test
sub
cmp
ins
ins
jg
pop
add
jl
or
xor
pushf
cmp
sub
lock
rol
in
add
mov
ret
in
out
jle
retf
xlat
out
bound
sbb
adc
sub
(bad)
inc
test
sahf
xchg
jge
dec
or
arpl
ins
scas
fstp
mov
(bad)
out
jle
jg
nop
and
popf
sbb
mov
int
ins
je
out
cmp
sub
mov
popa
dec
inc
cmp
pop
dec
cmovns
arpl
jo
movs
bound
imul
and
data16
mov
sbb
jno
mov
mov
and
retf
xchg
pop
ret
adc
rcr
lods
mov
sub
std
mov
push
sti
das
out
int
out
inc
imul
add
movs
idiv
push
mov
pop
daa
sahf
ss
clc
inc
and
pushf
cmps
jmp
pop
pop
mov
jae
js
add
mov
mov
retf
clc
adc
push
or
jne
cmp
sbb
fsubr
outs
cmc
xchg
js
mov
mov
dec
bound
mov
fstp
sub
jns
pop
loop
mov
popa
fisttp
jne
cld
es
inc
sub
jne
adc
idiv
dec
leave
loop
jmp
dec
inc
xchg
ins
xor
lods
enter
mov
add
inc
das
dec
call
jmp
push
cmp
mov
and
jg
test
dec
ret
fnstsw
imul
cmps
lds
cwde
repz
test
adc
lods
loope
(bad)
jne
cmp
imul
sbb
inc
jmp
cld
call
or
xchg
mov
es
xor
addr16
sbb
jmp
xor
dec
outs
adc
or
cwde
sbb
mov
(bad)
jne
mov
cmp
fstp
jmp
ins
jmp
dec
ret
(bad)
or
cmp
cmp
outs
(bad)
lock
jmp
jl
(bad)
add
or
sbb
fst
sbb
xchg
loope
and
rol
test
ror
jp
scas
movs
mov
push
les
push
mov
adc
stc
xchg
jl
xor
daa
test
pop
cmps
push
data16
jno
dec
mov
push
into
ja
cs
sbb
loope
fstp
xor
jecxz
mov
gs
inc
sbb
mov
cld
test
sbb
dec
lods
inc
mov
lds
inc
movs
mov
push
jg
push
lock
mov
ret
(bad)
in
scas
and
aam
in
pop
mov
pop
lock
sub
bnd
dec
mov
shl
cmps
dec
popf
imul
dec
or
jp
push
scas
js
loope
mov
(bad)
into
cmp
xchg
iret
mov
mov
ret
pop
cmp
outs
cmp
fimul
out
jge
cmp
out
(bad)
iret
sahf
ins
lahf
imul
mov
(bad)
imul
in
and
mov
aad
sti
mov
mov
add
mov
pop
repz
js
ds
sbb
out
mov
dec
adc
cli
stc
dec
fstp
push
xor
cli
push
aaa
mov
mul
jnp
int3
dec
dec
fwait
pop
mov
xor
mov
lods
mov
data16
xor
adc
bound
ja
inc
adc
dec
cmp
(bad)
shr
mov
xor
dec
mov
ror
sbb
test
dec
pop
jle
mov
jge
test
cmp
dec
push
dec
xor
daa
repnz
movs
pop
sbb
pop
adc
xchg
div
sub
test
xor
in
xor
jp
jmp
shr
addr16
sbb
leave
adc
mov
or
dec
stc
xchg
pop
sbb
dec
jns
mov
pop
or
pop
jge
mov
imul
(bad)
mul
mov
out
sub
push
fwait
xchg
adc
test
aam
adc
sub
mov
mov
mov
inc
pop
pop
add
or
test
adc
xchg
bound
pop
mov
cmps
mov
fisubr
fiadd
nop
or
push
dec
mov
pop
stos
mov
movs
mov
pusha
mov
push
pop
mov
cld
outs
leave
xor
pop
push
in
ss
sub
cmp
outs
mov
pop
and
pop
bound
cmps
scas
inc
jno
dec
(bad)
fldl2t
test
pushf
inc
popa
xchg
aaa
mov
xor
dec
test
mov
dec
call
nop
dec
adc
stc
xor
or
mov
cmp
fldcw
pop
data16
dec
sbb
sar
mov
leave
aad
jne
xor
mov
mov
(bad)
sar
sub
shr
jb
xor
inc
or
mov
gs
pop
pop
dec
xlat
out
mov
sbb
jmp
inc
mov
inc
and
inc
test
cs
sbb
sbb
fcmovu
hlt
cmp
mov
jmp
push
(bad)
jb
aad
sbb
mov
data16
mov
jp
mov
scas
cs
push
push
(bad)
sbb
and
rol
stos
xchg
loop
cmp
mov
sub
scas
adc
fnsave
mov
or
and
iret
and
add
xchg
pop
aam
cmp
inc
push
jo
lods
scas
cmp
movs
std
fs
fld
xor
rcr
rcr
pop
and
fwait
mov
push
or
or
call
add
pop
or
ret
ins
hlt
sbb
fs
retf
inc
xor
es
jg
or
dec
push
stc
dec
fwait
mov
sbb
or
ret
adc
lds
dec
dec
repnz
out
imul
cmp
mov
pop
xor
stc
div
push
(bad)
xor
mov
fist
push
out
mov
push
es
(bad)
jle
add
cmp
add
push
xor
pop
mov
fstp
add
ficomp
cmps
ror
cmp
leave
jmp
dec
jge
stos
xchg
fwait
inc
popf
test
popf
jo
and
out
push
xor
jno
repnz
in
les
jmp
xor
call
scas
xor
popf
pop
mov
pop
mov
test
jae
cs
sti
mov
outs
ficomp
ss
(bad)
lds
call
sahf
xchg
retf
fnstcw
inc
sub
pop
push
ins
sbb
jns
pop
out
aaa
and
out
repz
jns
(bad)
scas
sub
cli
sbb
and
out
xchg
imul
test
pop
xor
(bad)
int3
dec
jecxz
dec
out
jmp
pushf
out
push
bound
adc
xor
lock
xor
cdq
jmp
in
imul
in
add
imul
pop
add
dec
add
pop
sahf
mov
imul
dec
lea
dec
or
cmp
mov
xlat
aas
fs
xor
and
(bad)
push
xchg
push
aas
push
xchg
jae
sub
mov
xchg
jecxz
mov
dec
jnp
out
add
xchg
ficomp
rcl
sub
mov
mov
pop
lods
mov
dec
mov
jo
sub
cld
retf
pop
cmp
mov
and
psubq
inc
xchg
cmp
xchg
cdq
test
xchg
adc
or
movs
jo
(bad)
inc
test
xor
popa
nop
and
jbe
sbb
int
jmp
or
and
fsubr
xor
and
fs
stc
cs
test
xchg
mov
mul
fisttp
fld
xchg
test
xor
pop
aad
cmp
push
or
lock
test
lods
pop
nop
test
xor
xor
pop
xor
push
pop
movs
add
stos
pop
sub
or
xchg
in
xor
push
mov
imul
push
pop
scas
sub
ins
enter
mov
add
jmp
aas
mov
xor
pop
hlt
lea
sti
jnp
mov
nop
fmul
fsub
fiadd
psrlw
int
cmc
xchg
sar
repnz
int3
adc
cmps
cmp
pop
sbb
adc
xchg
gs
sub
inc
or
jmp
push
inc
jmp
add
push
jb
es
xchg
adc
rcl
sub
(bad)
jns
mov
mov
xor
inc
inc
dec
jmp
cs
dec
les
(bad)
vhsubps
cdq
dec
inc
cmp
mov
mov
pusha
addr16
popa
and
xor
push
lock
xchg
(bad)
fild
loope
add
int3
out
cld
das
(bad)
xlat
xor
ret
outs
add
xor
out
fdivr
ret
dec
add
daa
pop
mov
cmp
sub
pushf
retf
sbb
pop
fwait
xor
add
pop
(bad)
add
pop
nop
add
stos
jmp
mov
mov
dec
sbb
jmp
pop
xchg
das
pop
jne
cmp
cwde
inc
dec
add
nop
push
std
add
ds
sbb
pop
addr16
jge
adc
shl
aas
jb
inc
cmp
cmp
jno
add
inc
mov
sbb
or
xchg
dec
rcl
scas
mov
or
daa
mov
ror
add
retf
int3
add
or
jae
ins
loope
test
and
mov
pop
dec
or
lods
xchg
xchg
jle
push
movs
inc
add
out
addr16
add
mov
rol
xor
push
xor
adc
enter
dec
out
and
test
inc
xor
inc
dec
sbb
sbb
shl
rcr
out
movs
mov
ret
dec
loop
dec
or
jae
dec
mov
mov
mov
xor
inc
pop
jbe
push
sar
jmp
fiadd
sub
fdivrp
cmp
out
(bad)
push
sbb
popf
stc
icebp
mov
fbstp
xchg
cmp
pop
(bad)
imul
push
(bad)
retf
add
movs
mov
fisub
repnz
adc
dec
adc
sbb
test
mov
loop
xchg
lods
jno
mov
mov
fs
mov
and
xlat
dec
or
repz
adc
movs
leave
dec
outs
cwde
(bad)
lds
jmp
pop
pop
(bad)
and
push
enter
pop
outs
lahf
push
sar
mov
add
mov
cwde
(bad)
les
fldenv
(bad)
int
jmp
push
mov
inc
or
mov
mov
push
xchg
stos
jnp
ins
jecxz
mov
aam
hlt
iret
(bad)
pop
pop
stc
pop
xor
pop
(bad)
xor
ds
mov
jge
xor
dec
inc
cmc
out
mov
or
adc
movntq
clc
lahf
adc
jl
xchg
shl
into
int
(bad)
inc
jno
add
cs
ror
jno
add
dec
(bad)
in
mov
sub
and
in
pusha
xchg
sub
inc
call
je
jno
xchg
jg
push
and
and
lds
jle
into
test
inc
rcl
xor
xor
aad
push
sub
pop
jmp
and
push
inc
push
pusha
push
mov
jo
sub
jecxz
mov
fadd
add
gs
xchg
into
cmp
(bad)
in
pop
enter
retf
aas
jno
ins
dec
std
(bad)
out
fsub
cmp
cmp
mov
pop
aas
xor
das
add
fnsave
mov
(bad)
imul
pop
mov
mov
and
xchg
movs
jmp
jg
data16
cdq
add
xor
cdq
or
cmp
cmps
jmp
fnsave
mov
pop
cs
inc
neg
pop
xor
sbb
lock
dec
mov
sbb
aam
popf
enter
bound
arpl
cmp
retf
retf
call
mov
cmp
retf
and
sub
pop
mov
dec
inc
cmp
jecxz
add
xor
shr
fbld
jle
xchg
cmp
dec
jmp
leave
pop
xor
(bad)
push
add
add
shl
sbb
pusha
arpl
adc
mov
stc
cmp
add
jg
push
mov
sar
cmps
cdq
inc
xchg
stos
daa
ja
gs
sub
push
jne
mov
jns
jbe
test
ret
movs
loopne
mov
mov
mov
test
mov
or
scas
out
or
push
retf
mov
inc
call
mov
push
pop
mov
leave
dec
loop
ins
fs
imul
xchg
cmc
sub
dec
out
pop
call
cli
cmp
and
call
je
movs
movs
(bad)
dec
sbb
jle
mov
sub
in
(bad)
sub
jl
xchg
mov
jmp
int
fwait
and
(bad)
retf
arpl
push
mov
cmp
sbb
cmp
mov
in
(bad)
enter
int
das
sbb
js
xchg
ja
ja
mov
sbb
push
pop
das
or
cmp
movs
sbb
call
in
jb
mov
in
arpl
callw
jnp
in
inc
lock
shl
(bad)
inc
fdiv
jg
rol
mov
jle
jle
clc
aaa
xor
mov
xor
repnz
xchg
pop
push
mov
cli
mov
xor
call
xor
outs
cdq
dec
(bad)
rol
and
add
mov
mov
nop
sub
mov
enter
retf
adc
test
into
jno
das
sub
xor
mov
mov
mov
cli
mov
jmp
call
pop
adc
mov
add
out
pop
and
fsub
or
add
push
mov
data16
aaa
enter
lods
adc
mov
jmp
cmp
iret
sbb
adc
les
jp
xchg
add
retf
sub
fcom
dec
gs
pop
sbb
nop
not
aam
bound
add
aam
mov
pop
or
push
pusha
lods
adc
or
enter
push
mov
pushf
test
push
jmp
(bad)
or
call
adc
push
loope
xchg
orps
hlt
aad
adc
xor
ficom
bound
cmp
mov
in
jl
cmp
inc
out
sub
or
mov
xchg
push
push
adc
sbb
sub
xor
jb
psubb
lahf
push
pop
and
dec
fnstenv
fs
jnp
xor
adc
test
jmp
mov
xchg
mov
mov
iret
push
push
pop
cmovae
pushf
jb
push
jg
int3
(bad)
icebp
mov
ror
aas
cmp
mov
cli
adc
inc
sahf
lods
call
(bad)
xor
test
jns
push
mov
dec
cmp
mov
jmp
push
push
xchg
test
mov
inc
jo
sar
fnstenv
aam
fs
into
mov
pop
loopne
nop
int
xchg
outs
mov
jmp
inc
rep
lods
mov
push
fistp
les
pusha
repz
adc
sahf
pop
push
test
lahf
pop
les
pop
pushf
movs
sbb
dec
(bad)
adc
mov
repz
call
popa
clc
enter
mov
inc
xor
mov
jmp
sub
lods
add
push
(bad)
retf
xchg
pop
pop
mov
xchg
mov
jno
daa
imul
or
mov
rcr
push
add
bound
inc
ins
shr
or
push
push
push
mov
xchg
loop
sub
and
adc
dec
cmc
sbb
fcmovb
pop
dec
in
mov
ret
inc
push
mov
cmp
xchg
lods
mov
push
out
cmp
icebp
dec
cmp
inc
fld
ss
jb
dec
mov
in
cmp
test
and
adc
xlat
js
pop
jg
dec
lds
inc
pop
sub
xchg
jp
(bad)
inc
test
fwait
test
nop
jnp
xchg
imul
push
addr16
clc
rcr
pop
push
adc
stc
push
mov
inc
les
cmp
es
sbb
xlat
(bad)
pop
push
shl
and
jno
mov
jae
push
and
xor
test
out
mov
stc
and
pop
scas
push
push
pop
and
ret
push
aas
mov
jle
add
jp
mov
mov
nop
addr16
cmps
arpl
gs
popa
movnti
leave
mov
inc
cmps
xchg
ins
or
mov
dec
push
mov
inc
mov
fbld
cmp
out
bound
add
scas
adc
xlat
or
jne
add
popf
call
hlt
jmp
xchg
xor
ss
cli
repz
pop
les
inc
out
xchg
adc
repz
sub
lock
in
into
cmp
cmp
mov
(bad)
in
pop
jmp
dec
call
push
stc
data16
sti
add
add
(bad)
cmp
movs
repnz
in
lea
loopne
sar
outs
cdq
add
inc
sub
xor
arpl
push
mul
ret
mov
bound
sub
push
popf
push
cmp
or
push
popa
mov
test
dec
xor
je
leave
or
xor
or
outs
mov
in
and
in
mov
pop
icebp
int
mov
xor
lahf
mov
jl
cdq
imul
push
inc
loope
mov
sbb
or
imul
ret
push
jmp
outs
sub
repz
icebp
mov
pop
mov
repnz
aad
enter
dec
jb
pop
int3
lods
aad
adc
and
inc
mov
mov
in
pop
inc
inc
push
push
int3
mov
pop
sbb
in
jle
pop
mov
xor
fdiv
lea
aaa
int3
stos
std
call
push
xchg
pop
outs
adc
add
dec
pop
test
xchg
xchg
jne
fcomp
scas
test
push
inc
sub
mov
leave
sub
and
push
mov
outs
movs
mov
es
sub
jge
mov
mov
sti
ss
sub
sub
mov
push
js
cmp
(bad)
loopne
xchg
pop
mov
movs
add
nop
pop
repnz
dec
imul
daa
jmp
jne
xor
popf
push
mov
enter
fdiv
jg
xchg
jno
xchg
ds
int
jnp
js
fmul
jno
mov
or
xchg
ffreep
inc
push
dec
repnz
ja
push
pop
jmp
je
add
mov
dec
pop
adc
test
push
int3
dec
xor
sbb
in
jno
loop
test
repnz
scas
movs
rcl
cmps
xchg
dec
dec
into
rcr
addr16
cmc
cmc
pop
xchg
enter
inc
mov
mov
movs
sub
pushf
pop
push
push
add
fld
mov
cli
push
scas
lods
push
cmp
pusha
xchg
push
aam
pop
inc
and
xor
push
mov
imul
mov
ret
sbb
jle
add
dec
(bad)
or
inc
repnz
cli
sub
in
dec
push
scas
sar
ror
or
pop
sub
ss
lods
pop
inc
aas
gs
cmp
je
loope
aam
push
or
jmp
adc
inc
mov
das
pop
shl
into
shr
inc
adc
ja
jnp
loop
xchg
test
(bad)
mov
cwde
mov
cwde
push
jne
sub
lds
ins
(bad)
sbb
cmc
xchg
pop
shr
shr
push
xchg
cld
pop
retfw
aam
shl
xor
or
push
ret
in
data16
adc
sahf
adc
out
ss
out
aam
std
push
push
movs
mov
jecxz
popa
sub
out
xchg
cmp
xchg
movs
xchg
xchg
mov
aaa
call
fcom
adc
jne
jae
and
push
xchg
in
add
out
sub
(bad)
push
(bad)
sbb
and
push
es
pop
cmp
popf
repnz
lahf
sbb
jg
and
mov
icebp
in
out
jle
mov
adc
cmps
retf
and
mov
xor
(bad)
sub
xchg
add
sub
(bad)
pop
dec
pop
ret
adc
imul
sbb
sar
jns
xchg
dec
jb
es
dec
in
jnp
inc
std
(bad)
lock
test
mov
test
lods
popa
shl
pop
push
mov
sar
jp
sub
jnp
inc
je
adc
jmp
into
in
sahf
sbb
inc
add
xchg
ror
(bad)
js
pop
and
pop
pop
mov
dec
mov
stos
sahf
push
in
push
cmp
or
es
cdq
pop
fwait
push
sbb
mov
jmp
xor
mov
adc
and
or
add
enter
mov
call
mov
sub
shl
pop
add
mov
fwait
jle
cmp
sti
sbb
rcr
test
mov
or
and
lock
pop
add
cmp
jmp
mov
pop
popa
jle
mov
mov
int
mov
cmp
pop
call
sub
push
sub
call
jae
mov
jle
push
mov
dec
aaa
xchg
jmp
mov
adc
mov
icebp
cwde
xchg
es
or
inc
pop
lds
sub
mov
fisubr
jbe
int
push
test
mov
scas
push
neg
test
cmp
push
mov
jbe
cwde
fisubr
fist
add
cmp
adc
cmp
in
or
xchg
add
dec
mov
xor
adc
into
pop
cmp
push
ret
mov
inc
jmp
add
push
jo
xchg
push
push
data16
ficom
shl
pop
fist
and
push
mov
sar
outs
sub
(bad)
jle
xchg
jo
hlt
mov
push
mov
or
ins
inc
push
push
xchg
scas
pop
outs
hlt
sub
dec
(bad)
push
call
jmp
call
(bad)
cmp
js
mov
add
pushf
xor
add
div
daa
mov
jae
jmp
pop
pop
jae
pop
mov
adc
retf
jo
inc
retf
add
test
mov
mov
std
test
sub
push
push
movs
cld
xchg
loope
fs
adc
cs
push
push
mov
add
mov
neg
and
sub
cmp
mov
pop
addr16
mov
mov
stos
ja
and
scas
xchg
mov
dec
xchg
xchg
add
fimul
pop
in
sub
sub
test
or
adc
mov
mov
inc
xlat
ret
and
add
sbb
jge
movs
pop
rcr
cmps
xchg
mov
mov
test
test
jg
fisub
xchg
lea
stos
and
jo
inc
pop
pop
pop
and
out
inc
sub
test
clc
cmp
scas
test
enter
ss
loop
test
pop
into
movs
aas
push
imul
jo
adc
pop
inc
inc
mov
jg
mov
sahf
pop
or
adc
iret
jl
push
(bad)
loop
or
xchg
lea
xor
test
fist
push
dec
cmp
fild
popf
mov
imul
pushf
ins
shr
lock
inc
mov
jg
xor
aas
lds
sti
dec
sahf
pusha
add
add
push
or
jp
je
or
scas
data16
shr
loope
or
pushf
dec
cmps
pop
not
or
jb
loope
sbb
mov
das
rol
mov
popa
mov
scas
(bad)
loope
pop
call
dec
mov
jle
outs
push
cmp
rol
daa
test
dec
repnz
dec
hlt
sbb
mov
pop
loope
xchg
pop
xor
sub
push
push
jge
push
dec
out
dec
arpl
xor
out
ficom
sbb
sub
pop
mov
pop
out
xchg
(bad)
and
jo
or
dec
jne
mov
dec
cdq
hlt
stos
mov
fidiv
daa
adc
cs
fcomp
ret
not
das
bound
inc
dec
jecxz
mov
cmp
jl
das
xchg
std
dec
mov
out
pop
dec
push
loope
mov
(bad)
ins
adc
scas
sub
xor
or
mov
mov
div
ret
pushf
aam
enter
or
mov
mov
inc
jb
jp
sbb
mov
xor
sub
mov
xchg
mov
mov
fcom
jle
or
mov
jecxz
pop
cmp
adc
fucomi
ins
call
test
mov
dec
mov
mov
mov
(bad)
(bad)
mov
jae
xchg
sbb
stos
push
test
sbb
ret
addr16
or
push
push
jo
xor
fnstcw
or
shr
mov
adc
lods
xor
fist
popf
push
or
and
scas
sub
retf
fiadd
sti
sti
push
mov
mov
cwde
xor
xchg
or
mov
das
xor
xchg
bound
aad
adc
fcomi
pop
and
jae
adc
cmp
retf
xchg
rcr
push
jg
mov
push
fwait
pop
repz
nop
add
loopne
aam
and
lahf
(bad)
mov
not
adc
cli
out
mov
lahf
mov
repz
push
imul
jno
dec
loop
sub
sbb
aaa
jne
push
inc
sahf
(bad)
sahf
outs
dec
shr
jno
mov
jg
and
mov
push
pop
mov
jo
nop
ror
cmp
sahf
mov
cli
jg
push
push
cld
int
or
xchg
jg
out
add
mov
aas
or
push
jmp
or
clc
sbb
pop
mov
xor
ss
stos
movups
cwde
cs
dec
push
out
jle
mov
mov
rcl
cmp
in
jne
mov
(bad)
sbb
mov
(bad)
imul
cmp
aaa
vmulss
cmps
aas
xchg
int
movs
inc
sub
jae
movs
mov
loop
cs
xchg
(bad)
fild
xchg
fwait
or
add
cmp
mov
sbb
mov
enter
mov
add
nop
lea
movs
mov
movs
(bad)
mul
jp
and
call
out
jp
inc
fwait
retfw
push
icebp
inc
add
push
ror
jno
mov
(bad)
mov
popa
push
call
inc
fldcw
fistp
(bad)
ins
scas
lods
dec
adc
mov
test
mov
cmp
fisttp
lods
push
adc
xchg
lods
mov
and
daa
aaa
movs
inc
leave
popf
(bad)
and
sub
mov
mov
xor
(bad)
mov
sub
add
ins
xor
and
dec
clc
lahf
pop
cmp
push
and
push
pop
mov
out
add
dec
(bad)
xor
jge
adc
sub
cmc
cwde
loop
mov
out
sub
mov
xchg
or
cli
pop
mov
push
loop
pop
push
jle
sbb
iret
sahf
sub
sahf
(bad)
test
dec
and
cmp
out
or
push
jg
or
js
in
sbb
mov
cmp
(bad)
idiv
mov
repz
jp
movs
mov
mov
js
lahf
inc
fnsave
(bad)
add
cmp
cmp
inc
cmp
pop
add
add
jmp
call
xor
fbld
sbb
in
mov
maskmovq
mul
dec
iret
and
jns
mov
mov
push
adc
(bad)
push
or
cmps
sub
in
dec
cwde
inc
int3
dec
js
add
lods
push
retf
addr16
aas
pop
or
stos
mov
sub
daa
push
ins
and
sbb
dec
pushf
push
inc
add
mov
adc
and
shr
and
jecxz
mov
(bad)
(bad)
call
popa
lods
jmp
repnz
ja
mov
ins
(bad)
dec
pop
popf
inc
idiv
jbe
fsub
jecxz
push
jmp
in
lea
push
outs
cmp
icebp
imul
or
sub
lods
ins
in
mov
shl
aam
(bad)
out
dec
ror
jecxz
clc
inc
in
or
pop
adc
jbe
xchg
retf
lahf
lds
cdq
(bad)
sbb
or
jno
ret
int3
xor
pop
pop
adc
jmp
nop
sahf
mov
pop
xchg
imul
pop
jae
cwde
ss
sar
dec
pop
lods
xor
add
icebp
push
enter
xor
adc
lods
pop
cmps
push
xor
(bad)
retf
shl
mov
or
call
adc
mov
cmc
aam
pop
stos
xchg
ins
sub
mov
fild
sbb
adc
xchg
push
in
lds
xor
sub
pop
jmp
shr
dec
mov
enter
repnz
cmp
dec
inc
stos
mov
mov
mov
sub
or
adc
jne
rcr
in
sub
ret
mov
xchg
cli
ror
lds
leave
adc
repz
aas
mov
jno
dec
scas
ret
adc
pop
jge
imul
sub
icebp
fdiv
mov
lods
mov
out
not
dec
test
sbb
mov
and
jecxz
jp
jnp
leave
sub
pop
adc
jmp
lea
loopne
in
push
and
cwde
ins
int3
movs
lods
add
movs
sub
jnp
xor
aas
in
(bad)
cs
nop
adc
arpl
cmp
pop
cli
dec
sub
std
iret
fs
ss
test
in
ins
xor
shr
adc
sar
cmp
dec
push
aas
scas
imul
leave
jb
xor
mov
bound
adc
mov
jp
jge
xor
bound
mov
lods
xchg
inc
push
jmp
push
lahf
mov
mov
imul
sub
xchg
loopne
and
ss
outs
and
pushf
arpl
out
mov
repnz
sbb
scas
pop
and
push
pop
popa
je
fs
mov
repnz
sub
(bad)
jno
scas
(bad)
ss
jb
lods
cmp
cdq
and
lock
ds
clc
int3
aaa
sub
sbb
inc
ret
cmps
scas
dec
push
jl
movs
ret
out
sti
xor
sbb
cmp
jno
pop
cmp
xlat
cmc
mov
mov
fwait
stc
mov
imul
retf
sbb
adc
dec
dec
movs
sar
pop
cld
loope
xor
pop
addr16
pop
std
inc
jae
fs
inc
ret
xor
sub
sbb
push
push
inc
xor
adc
ss
aad
mov
jbe
sbb
dec
ret
cmp
addr16
mov
jbe
xchg
or
jne
pop
(bad)
test
in
cli
in
mov
add
pop
mov
lmsw
push
jg
sti
add
pop
push
fwait
pop
dec
aas
push
ins
sub
ror
enter
pushf
stc
cmp
inc
stos
pop
retf
and
cmc
mov
loope
jg
(bad)
pop
div
aad
test
fdiv
sti
in
test
xlat
xchg
adc
pop
mov
jb
rol
ror
test
adc
retf
xor
mov
ret
sbb
push
out
stos
mov
mov
cmp
int
add
stc
xchg
aas
(bad)
into
sahf
lods
in
ja
js
icebp
aam
dec
mov
push
mov
lock
pop
or
ds
dec
dec
fidiv
add
xor
sbb
gs
loop
aas
inc
jno
je
shl
add
cmps
int
mov
mov
fs
jae
pop
retf
cmp
jmp
xchg
add
movs
push
push
pushf
out
outs
dec
cmp
lods
retf
leave
jae
push
mov
add
repz
push
retf
ret
xlat
cmp
shl
and
push
xor
jne
pop
add
fadd
repz
leave
outs
dec
dec
sbb
add
sub
movs
or
(bad)
jmp
in
pop
nop
inc
js
cvttps2pi
scas
je
setl
loop
xlat
fst
hlt
xchg
sub
sbb
xchg
(bad)
icebp
xor
inc
mov
adc
je
jecxz
(bad)
les
push
fst
inc
xlat
fstp
iret
pop
and
jge
adc
iret
das
popf
rcr
std
and
add
sbb
fnstsw
fsub
xor
and
xchg
mov
sub
pusha
into
push
adc
mov
inc
sbb
adc
xchg
mov
icebp
jle
int3
dec
mov
lods
clc
pop
std
mov
mov
outs
mov
not
enter
sbb
mov
sbb
(bad)
push
inc
lds
sub
push
sub
jne
dec
pop
into
dec
outs
(bad)
lock
or
pop
jnp
(bad)
xchg
mov
shr
mov
fldenv
xor
mov
dec
inc
mov
jns
cmp
pop
jns
stos
add
jmp
loopne
ret
sub
aad
pop
rcl
cmp
push
js
xor
movs
pop
sbb
mov
sbb
outs
dec
ret
ficom
stc
push
xor
inc
stos
mov
dec
sub
loope
mul
jle
push
pop
arpl
cmp
ins
ret
adc
loop
inc
adc
push
inc
aad
mov
fisubr
ins
mov
jmp
pop
mov
mov
repz
test
mov
dec
mov
jo
retf
mov
mov
ret
push
xor
dec
jg
ins
inc
push
pop
cmp
mov
xor
test
rol
mov
mov
pop
adc
and
add
jae
mov
sub
loope
add
xchg
sub
jle
xchg
push
and
(bad)
lea
and
or
in
jne
pop
pusha
xchg
or
outs
movsx
pusha
xchg
mov
pop
sahf
jmp
test
jno
cmp
scas
call
outs
or
xchg
mov
xor
push
imul
int3
cdq
push
and
inc
and
out
(bad)
jle
pop
sub
mov
or
cmp
and
jmp
inc
inc
jl
jae
pop
popf
cmp
xchg
div
fwait
and
push
cmp
jle
mov
pop
(bad)
and
bound
xchg
imul
pop
xchg
in
loope
sub
sub
je
jge
inc
test
mov
inc
push
push
dec
sub
or
outs
jl
fimul
add
sub
dec
ss
xor
ja
jns
pop
push
cmp
(bad)
(bad)
jae
dec
mov
push
xor
or
jg
iret
aaa
inc
repnz
cwde
mov
xor
pop
loopne
and
icebp
cmp
je
into
jl
rcr
dec
xchg
inc
mov
and
cmps
es
das
push
adc
mov
ret
pop
mov
neg
xor
mov
add
stos
jmp
mov
loop
rol
outs
leave
fwait
and
jnp
push
mov
out
std
test
and
fdivrp
ror
inc
es
push
lods
fstp
cdq
ins
(bad)
stos
cvttps2pi
and
pop
int
mov
ins
push
sti
imul
jnp
daa
leave
je
xchg
and
pushf
jle
mov
(bad)
dec
cmp
jb
jns
das
test
aad
scas
js
addr16
inc
sub
loop
in
sub
mov
stc
movs
xlat
mov
shl
xchg
mov
push
lahf
xchg
ja
sub
xchg
push
nop
mov
cmp
mov
adc
in
dec
xchg
pusha
xor
leave
add
or
rol
mov
dec
loopne
shl
cmps
sbb
and
in
fs
test
shl
in
cs
jp
mov
out
dec
pop
jmp
clc
pop
icebp
xchg
mov
test
shl
jnp
into
std
pop
xchg
cmp
clc
jae
push
ret
hlt
test
(bad)
pop
(bad)
leave
sub
inc
ret
and
or
cmp
cmp
dec
mov
(bad)
cmp
leave
sub
mov
xchg
enter
xchg
ret
nop
add
ss
mov
jmp
pushf
movs
addr16
and
cwde
aad
cs
imul
mov
jmp
out
mov
dec
in
sahf
scas
ja
test
lahf
(bad)
retf
dec
cmp
adc
sbb
xor
cmp
xchg
push
call
enter
jmp
out
fdiv
jp
mov
jno
stos
pop
dec
mov
mov
jge
sbb
push
enter
add
mov
loop
das
xor
xchg
ins
and
xchg
push
jle
or
sub
pusha
(bad)
mov
rep
in
sbb
fwait
aam
adc
out
out
mov
shr
inc
arpl
or
test
je
cmp
shl
jno
push
push
stc
pop
in
popf
imul
pop
push
cdq
mov
jp
cwde
das
jns
pop
xchg
retf
in
and
xchg
and
xchg
bnd
push
sub
lock
cld
mov
pop
out
shl
clc
outs
xchg
jns
not
dec
cmp
cmp
(bad)
pusha
test
lea
or
aam
out
test
rol
lods
out
push
arpl
fwait
sbb
xchg
test
dec
aam
fnstcw
(bad)
xchg
imul
push
cmc
pop
dec
inc
arpl
push
add
adc
xchg
into
out
repnz
call
and
adc
jmp
shr
fwait
cmp
in
test
cs
mov
loop
xlat
fadd
inc
mov
es
repz
in
loopne
push
out
xor
push
pop
stc
imul
jo
jb
add
and
or
or
push
icebp
out
push
or
icebp
sbb
cmps
leave
or
jns
xchg
adc
arpl
pusha
rol
loopne
mov
lds
pop
das
mov
cmc
push
jb
(bad)
ja
popf
pushf
cmp
add
es
inc
test
outs
pop
mov
xor
jbe
xchg
dec
pop
loopne
mov
ins
dec
fidiv
pop
shr
or
add
push
loopne
jnp
push
sbb
jne
test
scas
popa
lock
xor
inc
adc
bound
into
retf
and
ins
dec
add
cwde
xor
or
xlat
test
mov
xor
pop
mov
fdivr
mov
mov
test
punpckldq
jno
cli
mov
and
mul
adc
adc
mov
aam
cdq
das
fstp
ret
dec
les
pop
(bad)
jmp
aaa
retf
push
cwde
enter
cmp
xchg
mov
add
push
inc
scas
adc
std
jge
sbb
inc
mov
in
out
push
lea
pop
fs
pop
mov
mov
push
lea
cld
fld
ins
mov
mov
adc
pop
mov
mov
and
gs
test
push
or
push
or
ror
cmp
test
(bad)
mov
pusha
dec
arpl
aas
push
out
dec
iret
inc
les
jmp
and
mov
sub
push
push
cld
xor
call
xchg
mov
inc
movs
cmp
test
nop
int
shl
data16
ins
scas
mov
jecxz
push
pop
mov
int3
fistp
int3
sub
fsub
(bad)
mov
dec
aad
in
lock
cmp
mov
call
(bad)
int
aam
push
das
sbb
ds
(bad)
(bad)
jmp
jecxz
mov
scas
fisubr
ret
stos
inc
mov
mov
adc
pusha
mov
jecxz
jo
inc
inc
push
lods
inc
xchg
fnop
or
movs
dec
cmp
mov
test
loop
mov
cmp
mov
adc
sub
push
pop
sbb
pop
mov
xor
mov
loope
ins
scas
adc
jg
mov
push
cmps
mov
in
mov
ret
cdq
cmp
xor
inc
jnp
xor
add
arpl
imul
jle
pop
pop
retf
pop
fwait
mov
pop
int
in
int3
xor
retf
inc
pop
data16
(bad)
fimul
(bad)
cmps
(bad)
jno
int
mov
fcom
mov
pmaddwd
fild
mov
cli
or
jo
arpl
sbb
neg
stos
sbb
inc
jmp
je
adc
pusha
xlat
mov
xor
shl
pop
mov
xor
loopne
test
xchg
adc
into
fist
jge
adc
and
push
xor
add
adc
sbb
shl
mov
sbb
shl
fucomip
dec
in
mov
mov
or
xchg
fcom
div
dec
loopne
jb
add
mov
scas
pop
pop
or
adc
aaa
aas
gs
add
fs
mov
pop
es
push
mov
das
int
pop
fwait
xchg
outs
ret
inc
in
xor
fimul
sub
and
xor
adc
sbb
adc
mov
and
mov
fiadd
sbb
fs
mov
(bad)
icebp
pushf
repz
cld
stc
add
and
in
adc
and
pushf
pop
and
jnp
sub
xchg
cmp
mulps
leave
out
and
cs
lock
scas
out
mov
cs
xor
mov
bswap
push
movs
mov
movs
dec
xchg
xor
stos
out
movs
pop
adc
shr
int
fsubr
xor
pop
icebp
repnz
add
enter
inc
jbe
loope
fisttp
daa
adc
lods
xchg
xchg
sub
mov
mov
jg
xchg
jg
mov
xchg
pop
out
push
out
mov
das
rol
pop
jb
cs
cmps
push
rcl
push
xchg
mov
call
pusha
sbb
cdq
inc
dec
stos
icebp
add
(bad)
pop
mov
jle
jne
sbb
lock
jg
jp
cmp
mov
int3
sti
outs
cld
iret
sub
and
push
inc
cmps
popa
iret
and
rcl
pop
cmps
xor
jmp
lock
adc
cwde
out
in
(bad)
jno
xor
loope
ret
mov
(bad)
ror
jmp
jo
stos
push
(bad)
xor
pop
(bad)
test
lods
(bad)
adc
pop
mov
add
pop
or
inc
xchg
cld
jp
mov
movs
ret
cmp
mov
mov
rcr
aad
pop
or
(bad)
pop
popa
jp
outs
mov
dec
add
adc
ret
and
and
mov
out
mov
cmp
test
aas
int3
(bad)
pushf
xor
xor
xor
inc
add
push
es
inc
sti
daa
inc
and
cmp
adc
xchg
pop
pop
fs
fistp
mov
lock
leave
jno
dec
mov
aad
sbb
ss
sub
cs
push
or
aad
inc
or
ror
adc
fnsave
cmp
aam
ins
inc
push
dec
adc
cmp
pop
js
jo
push
movs
inc
fisttp
stc
mov
imul
or
lea
mov
fisubr
jne
mov
in
push
mul
xor
xchg
jae
fisubr
sub
pop
in
inc
push
add
das
enter
push
dec
movs
push
sbb
mov
add
jmp
fsub
stos
rol
push
inc
cmp
cmp
inc
pusha
xchg
leave
xchg
mov
pop
mov
imul
je
rol
adc
jo
cmp
sub
xor
xor
dec
cld
leave
scas
mov
popa
inc
gs
add
test
std
lods
xor
sub
xor
fcmove
movs
lods
xchg
or
mov
xchg
push
out
add
dec
sub
rcr
pop
mov
add
mov
aam
pop
and
xlat
js
add
push
add
movs
inc
xchg
mov
in
cwde
in
xor
pop
test
xor
lds
push
idiv
rcr
leave
xchg
into
mov
mov
hlt
test
mov
xor
jp
dec
stos
fs
sar
dec
cmc
retf
xchg
(bad)
fst
xor
test
daa
mov
clc
lds
test
enter
xchg
jne
add
js
inc
xor
(bad)
or
cld
loopne
pop
and
or
aas
jo
inc
cmps
xor
mov
out
add
inc
(bad)
mov
mov
scas
adc
scas
(bad)
jo
push
leave
loop
scas
jns
add
shl
xchg
push
cs
jmp
pop
(bad)
mov
sbb
mov
popa
jns
jle
cmp
cs
out
adc
test
pop
ja
icebp
xor
(bad)
mov
mov
fisubr
pop
mov
fcom
push
lea
inc
and
in
test
clc
sub
out
mov
push
push
jmp
xchg
push
adc
xor
sbb
add
fadd
(bad)
inc
mov
popa
xchg
push
sub
out
repz
pop
adc
mov
sar
call
add
fadd
retf
mov
cs
inc
xor
icebp
dec
pop
pop
and
loope
xchg
mov
adc
or
test
push
mov
scas
mov
dec
imul
popa
ret
sbb
jle
movups
mov
pop
popa
sti
iret
inc
dec
inc
stos
sbb
fcomp
xchg
inc
retf
push
fcmovnu
mov
pop
mov
sahf
gs
push
daa
dec
jb
scas
pushf
(bad)
jp
test
inc
lds
out
inc
mov
xor
arpl
repnz
dec
pop
mov
iret
or
add
cmc
cli
je
mov
pop
ja
sub
mov
in
push
aad
mov
cli
ror
test
mov
mov
xchg
cmps
mov
xchg
and
jmp
add
xchg
mov
ficomp
fdivr
rol
sub
int
push
fdivr
cdq
es
mov
sub
cmp
sar
pop
jne
es
or
adc
mov
ret
loopne
out
mov
jmp
pop
mov
pop
jp
adc
cmp
rcr
push
dec
sub
xchg
pop
and
mov
pop
inc
xor
call
cli
pop
add
mov
xor
sbb
neg
push
lods
sbb
xor
inc
lahf
adc
js
or
xlat
into
in
adc
mov
push
cld
(bad)
imul
aas
sub
aas
adc
push
mov
shl
fwait
pop
not
pop
sahf
mov
jmp
jmp
pop
pop
cmp
addr16
cmp
pusha
lds
pop
pop
or
or
and
pop
xchg
das
dec
dec
push
inc
movs
mov
es
adc
(bad)
push
call
xor
dec
jl
cli
stc
jbe
mov
or
push
out
mov
pusha
push
xchg
add
xor
iret
mov
jns
mov
lahf
sbb
ds
cld
add
outs
inc
jge
adc
frstor
loope
xor
je
je
sar
es
mov
aam
rcr
out
inc
fsub
or
loope
and
popf
int
sub
imul
mov
push
fild
or
ret
lds
sar
sar
aam
adc
lahf
xlat
xchg
retf
call
xchg
or
jae
cmc
movs
mov
in
aam
icebp
(bad)
pop
xor
inc
fmul
add
lds
daa
mov
hlt
pop
std
jnp
push
retf
das
icebp
inc
mov
jmp
cld
jle
inc
dec
les
repz
pop
jle
das
ret
movs
cmp
call
mov
inc
inc
mov
pop
xchg
xor
shr
dec
dec
push
xor
loope
ret
fistp
out
dec
pusha
out
out
lahf
(bad)
ins
and
cmp
ja
les
popf
jmp
pop
lds
mov
enter
fs
sub
sbb
pushf
jns
dec
xor
imul
cmp
and
mov
aad
arpl
adc
cmp
sbb
ins
or
ins
add
sub
xchg
(bad)
lods
pop
scas
imul
mov
das
out
xor
mov
mov
xor
(bad)
and
dec
adc
mov
mov
pushf
mov
(bad)
jle
cmps
das
or
in
ins
mov
xchg
sbb
push
and
xchg
push
push
test
outs
jle
fidivr
pop
xchg
out
call
pop
mov
pop
add
(bad)
jmp
jb
cli
aaa
push
and
dec
not
jecxz
scas
cmps
repnz
mov
popa
call
sub
xlat
mov
inc
data16
or
mov
mov
outs
and
mov
adc
dec
int
ret
dec
pop
pop
dec
loope
and
sar
aaa
or
sbb
sbb
hlt
movs
mov
push
xor
push
add
imul
xlat
js
mov
bound
mov
loop
pop
(bad)
rcl
dec
(bad)
add
das
cmp
adc
mov
mov
test
pop
mov
adc
pop
xor
scas
sbb
fwait
pushf
sub
lods
and
inc
ror
mov
mov
jg
aad
jmp
jg
xlat
sub
cmp
pop
stos
sahf
push
inc
mov
xchg
jecxz
fld
(bad)
call
pushf
push
or
push
sub
sbb
cmps
cwde
lock
push
mov
scas
add
retf
jnp
xor
xchg
(bad)
fcomp
dec
or
daa
(bad)
enter
adc
xchg
es
cmp
mov
jae
jmp
stos
and
xchg
sub
add
mov
add
xchg
mov
xchg
xchg
sub
arpl
xchg
mov
(bad)
pop
cmp
dec
outs
dec
int
push
iret
call
inc
fmulp
nop
inc
loop
mov
cmps
xlat
mov
movs
mov
push
gs
cmp
lods
mov
pop
adc
push
cmp
cmpxchg
mov
clc
jne
pop
sbb
iret
shr
push
mov
pop
cld
add
add
retf
ds
dec
mov
into
mov
add
cmp
jmp
scas
repz
retf
fadd
mov
daa
cmc
arpl
push
stc
call
sub
leave
cdq
dec
dec
sbb
(bad)
dec
sub
test
adc
test
jp
out
mov
retf
movs
pusha
adc
inc
dec
das
fdivr
test
arpl
mov
mov
push
pop
test
mov
push
and
(bad)
jmp
rcr
mov
jne
out
jg
xchg
je
dec
inc
xchg
cmp
sbb
ja
inc
sub
test
ds
sub
add
adc
ins
cmps
pop
stc
add
jno
mov
xor
push
xchg
push
mov
xchg
mov
stos
mov
push
sub
mov
xlat
clc
data16
push
int
ret
test
fist
es
in
push
xchg
mov
scas
inc
push
dec
shl
enter
push
icebp
adc
sub
stc
jg
mov
mov
fwait
shl
aad
push
aaa
dec
sahf
(bad)
imul
fcomp
inc
push
js
xor
ret
mov
loopne
and
call
lahf
push
test
mov
push
sbb
test
dec
popa
jecxz
in
jge
push
inc
xor
test
pop
xor
test
stos
bound
call
loopne
fadd
sub
movs
int
(bad)
pop
in
out
mov
adc
mov
lods
cmps
jae
pop
add
stc
(bad)
aad
and
out
and
(bad)
stos
inc
xchg
push
push
adc
test
ins
adc
pop
stos
cs
mov
addr16
inc
inc
sub
and
bound
jbe
fstp
xor
hlt
aaa
out
movs
int
out
shr
cmc
or
lods
rol
jecxz
ret
fsubr
ins
mov
inc
mov
sar
xchg
fnstenv
xor
test
imul
imul
lods
repz
adc
aaa
xchg
push
xchg
pcmpgtw
div
sub
dec
cmp
cmps
mov
je
pop
lods
out
pop
or
sub
add
je
jg
xor
push
(bad)
(bad)
mov
gs
mov
icebp
push
pop
out
iret
ret
sbb
(bad)
outs
and
xchg
push
push
pop
addr16
push
lods
mov
sbb
(bad)
mov
movs
xchg
neg
int
inc
mov
les
inc
dec
retf
pop
xchg
mov
sbb
or
cmp
mov
sbb
cmps
ins
test
stc
xor
scas
std
fcmovu
mov
mov
mov
pop
mov
jae
sar
scas
mov
icebp
xchg
retf
xor
jecxz
popf
(bad)
mov
and
setns
push
ret
cmp
ror
movs
into
lock
rol
shl
jne
fptan
bound
lea
rcl
mov
(bad)
pop
ins
sub
mov
std
dec
sub
and
pusha
ret
cmps
fcmovb
ss
pop
pop
mov
dec
pop
neg
(bad)
mov
cs
xor
jmp
arpl
lea
cmp
loop
pop
mov
in
xor
int
jno
dec
cmps
sub
xchg
sbb
sti
out
loop
xchg
mov
sub
push
in
cli
in
xor
jae
lahf
sbb
into
mov
mov
dec
dec
jns
push
mov
lds
jno
xchg
and
push
xchg
xchg
cmp
xchg
mov
mov
sti
or
jle
inc
sti
int
jmp
cmp
or
stc
adc
push
outs
pop
rcr
add
fsub
dec
sbb
scas
add
int3
test
rcl
jge
push
sbb
cli
mov
mov
pop
sar
sbb
je
fistp
or
xchg
retf
lea
movs
nop
lds
and
bound
pop
test
sahf
into
pop
xchg
push
ret
les
pop
movs
cwde
call
cmp
jbe
rcl
std
cld
mov
pop
(bad)
jbe
push
adc
or
and
sub
adc
add
fnstsw
pop
dec
inc
popf
pop
jae
dec
jle
mov
push
mov
cmp
jg
icebp
pop
shr
lock
dec
and
sbb
cmps
imul
call
mov
add
sbb
pop
mov
sbb
and
in
outs
mov
sbb
fs
(bad)
int
(bad)
bound
rcl
out
mov
popa
enter
mov
cmp
sub
or
cmp
mov
ds
mov
loop
fs
movs
loope
add
fstp
jmp
rcl
push
dec
movs
aam
add
fdecstp
cmp
dec
jmp
es
mov
cwde
cmps
loop
cmp
mov
jno
push
pop
push
dec
mov
hlt
push
mov
fdiv
ins
cmc
cmp
fcom
jle
and
fdiv
in
daa
mov
push
pusha
lock
fiadd
scas
mov
(bad)
arpl
jno
mov
cmps
cmp
jns
aaa
out
jle
mov
adc
out
mov
lock
je
jmp
pop
adc
jl
outs
movs
in
popf
mov
xor
movs
call
shl
retf
jg
jge
mov
or
xor
xor
and
inc
retf
or
and
xchg
add
(bad)
retf
pop
xlat
xor
jmp
sar
aad
xor
cmp
mov
loope
bound
mov
js
adc
mov
pusha
nop
scas
xor
pop
sbb
mov
push
les
dec
(bad)
push
cmp
retf
(bad)
pop
ror
jg
push
jbe
ficomp
cmovle
imul
sub
xor
stos
(bad)
push
dec
push
mov
or
into
test
jg
mov
je
stos
sbb
out
pusha
xor
es
(bad)
lods
mov
xchg
jb
ja
hlt
jg
out
push
adc
xchg
sbb
cli
in
loope
sbb
and
mov
cmps
cmp
test
cmc
push
nop
mov
cmps
stos
clc
xchg
jp
jmp
xor
std
push
push
loope
stc
and
imul
jae
pop
mov
xor
shr
js
push
push
call
sbb
mov
(bad)
fucomip
movs
inc
fdiv
mov
fcmovbe
mov
push
add
repz
add
imul
sub
xchg
inc
xchg
mov
adc
cmps
fist
mov
fld
adc
add
pushf
loopne
leave
sar
jne
call
popa
dec
out
jns
sar
rcl
xchg
push
jne
pusha
ja
inc
pop
inc
das
jmp
mov
scas
pop
aas
mov
aas
test
aad
xchg
and
sar
leave
cmp
cmps
push
push
cmp
pop
push
cwde
ret
inc
jmp
xor
cmc
push
sub
cli
fs
(bad)
stc
and
js
(bad)
fs
rcr
in
setb
adc
sti
ror
push
scas
push
loop
fist
ret
push
shl
mov
jle
or
bound
mov
add
cmps
jge
out
and
jge
or
add
xchg
mov
pop
or
test
push
sbb
shl
je
cmps
fucomip
xor
adc
inc
ror
fwait
ror
std
aad
push
call
ret
outs
fwait
push
sbb
mov
xchg
sub
mov
fldcw
adc
hlt
rcr
fwait
outs
or
rcl
rcl
mov
mov
iret
jle
and
push
les
aas
mov
sbb
pushf
xor
dec
adc
lods
xor
cdq
cmp
test
adc
cmp
jmp
out
xchg
pop
xchg
jge
push
pop
out
or
stc
xchg
and
(bad)
push
dec
sub
xlat
dec
xchg
xchg
lods
push
add
lods
lock
sbb
inc
dec
sub
xchg
sbb
sbb
fadd
pop
xchg
ins
ror
jl
xchg
mov
ds
aaa
gs
mov
or
lea
dec
in
push
dec
shl
pusha
pop
xchg
mov
dec
pop
push
scas
lods
sbb
jb
cld
lds
dec
inc
lds
cmp
xchg
xor
sbb
dec
dec
stos
xchg
call
sbb
push
adc
sub
inc
xchg
jb
push
add
jno
in
addr16
popa
cli
or
or
and
int
icebp
push
or
pop
out
test
adc
pop
in
mov
loope
jne
(bad)
fsubr
repnz
hlt
mov
imul
mov
xor
and
punpckhdq
or
jmp
ins
cmp
mov
mov
std
mov
test
add
dec
xacquire
lahf
jp
test
pop
sub
sub
pop
outs
retf
xor
dec
(bad)
adc
xor
lods
shr
push
push
in
push
cmp
fdiv
jg
xchg
add
loop
ret
inc
sub
mov
dec
lea
xchg
stos
(bad)
(bad)
aad
pop
movs
ret
addr16
test
or
loop
xchg
js
in
(bad)
retf
sub
(bad)
popa
scas
cs
push
popa
test
out
loop
xchg
dec
jecxz
and
jae
pop
cmp
pop
pop
movs
(bad)
push
jmp
enter
aam
mov
jle
mov
sbb
into
stos
push
sbb
xor
mov
mov
mov
xchg
dec
(bad)
jmp
adc
fucomi
jle
xchg
jle
sbb
data16
add
mov
push
mov
inc
sbb
(bad)
movs
mov
(bad)
mov
inc
stos
dec
ror
add
(bad)
(bad)
sar
mov
or
xchg
lds
cmp
jns
add
xchg
cmc
js
push
sahf
jmp
imul
jno
dec
ror
mov
leave
pop
fdiv
gs
das
jae
sbb
mov
stc
jb
fwait
retf
push
and
lahf
mov
cmps
sbb
mov
mov
cli
pusha
dec
(bad)
fild
jmp
ret
jb
inc
dec
popa
popf
test
dec
pop
push
mov
shl
adc
sbb
or
sti
jmp
xor
inc
sub
dec
jb
sub
dec
dec
pusha
jp
adc
xlat
jg
les
or
int
mov
scas
int3
adc
scas
adc
cmps
jg
cmc
push
test
inc
pop
dec
mov
sbb
push
jmp
mov
call
iret
inc
(bad)
cmp
or
in
adc
jo
push
(bad)
out
es
ins
jl
cmc
(bad)
jmp
inc
pop
sbb
int
mov
add
test
(bad)
popf
mov
rcl
or
push
cmp
(bad)
dec
add
xchg
sti
xchg
leave
add
or
fninit
xor
adc
cmps
push
jmp
popf
lods
jno
mov
sub
fsubp
mov
cmc
stos
arpl
jecxz
lea
dec
pop
sbb
ret
inc
sbb
push
or
sub
fdiv
cld
jns
mov
dec
xor
(bad)
xor
add
add
inc
push
or
cmp
test
xlat
movsx
jg
retf
or
icebp
push
cs
or
loop
mov
pushf
sbb
adc
aas
icebp
mov
imul
neg
(bad)
mov
jbe
mov
mov
aaa
pop
(bad)
fld
aad
xchg
aad
icebp
shr
mov
dec
pushf
and
and
sub
int3
mov
(bad)
jge
clc
ffreep
jl
aad
repz
mov
push
pop
push
ror
pop
out
in
lods
les
fimul
mov
mov
pop
push
pop
dec
dec
dec
jecxz
xchg
lea
dec
(bad)
pusha
retf
in
enter
enter
rcl
es
mov
sub
xor
sbb
(bad)
jg
dec
push
add
into
cmp
push
out
jne
add
adc
xchg
xchg
js
and
(bad)
fcomp
fadd
push
inc
dec
in
in
gs
shl
push
cdq
enter
xchg
mov
xchg
fcom
mov
mov
sbb
inc
mov
sub
mov
js
pop
cmp
adc
sub
push
dec
fistp
jnp
cld
iret
pop
jnp
sahf
xchg
cmp
sub
jge
sbb
jno
mov
push
sub
fidiv
ins
es
xchg
je
shl
push
sub
jb
push
inc
movs
out
ja
cmp
cli
pop
mov
fld
cld
push
test
push
fbld
push
aad
and
mov
out
shl
xchg
mov
xchg
jns
inc
sti
outs
frstor
(bad)
cmp
and
or
mov
add
sar
lahf
xor
mov
frstor
dec
out
hlt
into
loope
clc
test
fistp
cld
rol
rol
ret
pop
jmp
xor
fcomp
outs
cmp
nop
mov
mov
shl
jmp
loope
leave
inc
dec
sbb
cli
push
push
cmp
sub
pop
loope
sbb
in
pop
cs
jmp
pop
sti
addr16
out
sbb
add
sbb
sbb
xor
dec
sub
jmp
cmp
and
jl
jno
cmp
cwde
icebp
sub
out
mov
adc
push
xlat
dec
or
(bad)
xacquire
rcl
mov
in
fnsave
leave
pop
ret
in
je
xor
(bad)
or
xchg
adc
sub
rol
ror
iret
aad
cmp
dec
mov
push
loopne
or
outs
or
es
mul
jo
lds
dec
dec
sbb
das
push
xchg
ret
int
mov
bound
mov
mov
pop
cmps
imul
jnp
push
imul
scas
sub
sbb
out
data16
ror
ins
and
adc
in
pop
xchg
sbb
fdivr
out
pop
jecxz
popw
in
mov
mov
xor
cdq
cli
xor
sti
loop
clc
scas
cmps
sbb
sahf
iret
call
in
xchg
cmp
sbb
gs
pusha
jo
jge
sub
adc
fild
pop
sbb
sub
or
mov
adc
ja
push
lds
(bad)
out
mov
jl
push
inc
sub
ds
bound
mov
aad
inc
movs
or
inc
jae
shl
push
shl
jp
pusha
mov
std
jb
(bad)
aas
jns
outs
xor
mov
out
mov
ror
daa
mov
sub
mov
mov
jns
dec
push
retf
xor
ss
test
mov
stc
inc
pop
xlat
repnz
xor
js
dec
jmp
sub
sbb
xor
push
outs
ins
pop
sbb
push
imul
xor
sub
lahf
fmul
movs
or
jne
and
in
jnp
ins
out
mov
pushf
lds
stc
xor
stc
sub
mov
inc
sub
sti
xchg
(bad)
out
or
dec
mul
jmp
pushf
cmc
push
sub
cmp
pop
test
sub
add
pop
push
jg
clc
xchg
mov
aam
mov
rol
and
pop
or
jno
out
stos
mov
int
mov
mov
mov
ja
pop
lods
jns
sub
cli
ins
retf
rol
add
or
div
pop
iret
sar
push
hlt
dec
adc
aas
push
push
add
jle
out
sbb
pop
(bad)
mov
jno
scas
call
sahf
sbb
pusha
xor
pop
call
or
sub
push
push
mov
jmp
push
or
inc
push
add
cmc
iret
not
add
aaa
mov
hlt
mov
in
pop
push
shr
push
add
adc
sub
loope
inc
(bad)
aam
out
push
mov
retf
pusha
pop
jae
push
dec
and
data16
data16
ftst
rol
ja
jno
pusha
sbb
(bad)
sti
jp
pop
inc
sbb
retf
add
xlat
sub
ficom
idiv
adc
inc
dec
xchg
pop
sub
les
push
sar
call
movs
mov
sbb
nop
or
sbb
add
lahf
mov
push
fbld
xor
enter
jne
int3
or
(bad)
test
cmp
scas
push
stos
cld
out
es
add
je
fcomip
mov
int
in
std
retf
jle
bound
outs
rol
jb
adc
(bad)
ret
or
push
pop
fcomp
retf
jns
fistp
loope
cmp
pop
aad
sub
ficom
push
or
and
pop
cmp
dec
fsub
sahf
cld
xchg
into
bound
ins
mov
fdiv
rol
adc
fistp
hlt
outs
xor
or
nop
(bad)
xchg
push
and
xchg
ficomp
mov
icebp
xor
fcom
jno
fsub
dec
or
and
pusha
daa
adc
aas
ret
shl
mov
mov
(bad)
push
and
push
cmp
sbb
div
outs
or
adc
push
outs
push
ret
dec
aaa
adc
cwde
mov
test
movs
shr
outs
loopne
jnp
sub
retf
cmp
mov
sub
les
jne
cmp
adc
or
mov
xor
xchg
xor
mov
mov
add
mov
loope
push
jo
adc
cmps
cmp
sahf
shr
test
mov
dec
call
jnp
in
push
dec
fst
xor
xchg
cld
cmp
mov
ds
hlt
mov
inc
cli
ja
stos
sbb
je
movs
mov
out
xchg
mov
bound
jnp
push
in
jp
xchg
mov
retf
jle
inc
adc
push
(bad)
ss
inc
rcr
aad
out
(bad)
xchg
mov
cmp
mov
and
add
or
mov
push
jge
lods
ds
jl
adc
dec
fistp
(bad)
(bad)
push
mov
mul
mov
stc
mov
push
adc
dec
or
sub
shl
dec
js
mov
and
cmps
out
push
popa
popa
bnd
xlat
ds
lods
or
inc
retf
(bad)
test
inc
test
cld
mov
pop
adc
pop
(bad)
jg
xchg
xor
test
xchg
push
sub
jmp
les
jmp
fimul
jmp
adc
or
mov
push
jmp
or
adc
data16
fcomp
ficomp
imul
or
fwait
mov
xor
push
lods
fld
jmp
or
mov
test
(bad)
test
aam
dec
mov
rcr
std
sub
push
imul
jo
arpl
dec
pusha
enter
add
pop
call
rcr
ss
mov
cmp
mov
push
fidiv
jnp
rcl
sub
jb
jecxz
pop
mov
lock
xchg
xlat
cmps
sub
fldenv
lds
test
popa
mov
cmc
add
lds
dec
jge
or
leave
adc
cmp
test
js
add
stc
adc
push
pop
push
xchg
or
pop
jmp
dec
lds
push
popf
hlt
xor
movs
mov
or
inc
imul
(bad)
loopne
in
xchg
mov
nop
pop
aaa
pop
or
neg
daa
pop
inc
cwde
push
adc
pop
pop
mov
add
and
dec
jp
pop
rol
out
imul
test
sar
dec
repz
push
out
inc
inc
pand
jne
cs
sbb
outs
jg
pop
pop
or
mov
jmp
jae
sbb
das
arpl
xchg
sub
int3
hlt
cwde
dec
jp
retfw
push
jnp
inc
or
loop
mov
sbb
add
xchg
jb
cmp
xchg
aas
cli
xor
fisttp
cmps
call
xor
cmps
aad
sub
mov
(bad)
jmp
ja
or
bound
dec
mov
dec
fs
sbb
dec
iretw
dec
pop
mov
mov
pop
pop
lods
inc
adc
in
das
sub
stos
inc
fucomip
mov
mov
push
inc
leave
push
xchg
das
fisub
das
aaa
cmp
aaa
xchg
out
jge
ins
mov
arpl
mov
retf
stos
jle
pop
sbb
mov
fcom
sbb
movs
pop
test
int3
mov
inc
push
ins
cmp
dec
les
stc
cmp
dec
pop
nop
lahf
push
(bad)
pop
dec
adc
enter
pop
mov
call
cmp
and
sbb
inc
push
sbb
mov
sub
or
adc
loop
ror
mov
jns
popf
inc
in
dec
jno
add
(bad)
adc
mov
inc
xchg
gs
cwde
mov
cmp
test
pop
cmc
pop
outs
fnstsw
retf
push
retf
sbb
sar
sbb
add
loopne
test
ins
ret
js
test
fistp
addr16
xor
stos
push
cli
cmp
sub
dec
(bad)
jmp
fst
pop
ss
push
jge
pop
cdq
data16
adc
shl
cmp
sbb
neg
xchg
inc
inc
adc
sbb
hlt
cmp
fstp
ja
dec
xchg
fwait
sub
sub
aam
popa
pop
dec
movs
clc
in
sahf
cmp
mov
or
and
mov
mov
fbstp
cld
dec
paddusw
cmc
je
rol
mov
cmp
dec
add
es
push
mov
rcr
cmp
xchg
cmc
fcom
(bad)
xchg
jno
adc
in
mov
sub
repz
int3
add
add
lods
das
xor
mov
aad
push
stos
cmp
pusha
mov
and
mov
sbb
inc
out
lds
fidiv
in
imul
int3
jge
dec
push
dec
sbb
sbb
popf
mov
cdq
cmc
mov
aas
adc
fadd
loopne
jno
sub
fwait
or
cli
cmps
mov
sub
and
jne
jge
leave
rcr
out
(bad)
mov
xchg
lods
div
mov
pop
jge
cmp
xchg
ror
mov
test
repz
aas
dec
fwait
or
push
push
mov
hlt
jnp
in
xor
jne
hlt
dec
(bad)
sub
mov
or
inc
call
stc
loop
(bad)
xor
iret
mov
jnp
out
cmp
push
iret
aam
scas
outs
mov
push
mov
sbb
jmp
stos
mov
ret
test
lahf
mov
sbb
les
pop
fidiv
push
push
jbe
(bad)
lods
push
icebp
inc
loop
hlt
repz
ret
mov
out
pushf
xchg
ja
int3
ror
in
fwait
and
loope
pop
dec
std
outs
das
test
sahf
sub
lock
les
adc
repnz
inc
sbb
lds
das
or
push
bound
js
aas
leave
std
sub
pop
pop
or
dec
jbe
pop
mov
pop
pop
dec
push
xor
jae
mov
lods
mov
test
xchg
inc
ds
inc
xchg
adc
shr
mov
or
adc
cmp
inc
pop
push
cdq
scas
retf
into
jnp
jbe
ror
inc
icebp
stos
(bad)
out
jns
arpl
and
lds
bnd
or
das
inc
and
mov
ror
pop
jo
hlt
scas
push
ror
mov
repnz
sub
cmp
sub
ror
push
push
dec
frstor
dec
pop
mov
fs
test
stc
mov
push
adc
push
jae
pop
std
aas
neg
ret
mov
loope
lea
pop
lods
pusha
lods
jne
popf
cs
cmps
xchg
repz
pusha
and
pushf
lods
sub
or
and
xchg
xchg
sub
sahf
cmc
out
int
loope
out
mov
xlat
mov
dec
mov
push
and
ror
jge
lods
sbb
dec
inc
lods
xor
test
out
xor
adc
(bad)
stos
pop
pop
test
shr
adc
dec
fdivr
lods
shr
adc
cs
iret
mov
jnp
lods
js
shr
int
inc
mov
fbstp
or
(bad)
xlat
(bad)
ins
adc
xor
mov
ret
add
pop
push
add
and
aam
ja
jg
and
icebp
iret
push
push
ins
dec
dec
test
sub
int3
xor
inc
adc
test
ins
mov
in
push
adc
je
pop
push
inc
mov
dec
mov
mov
add
ins
add
pop
pop
sbb
push
add
cmp
inc
stos
xor
dec
mov
popf
les
jmp
add
lahf
sti
bound
les
xor
scas
gs
xlat
and
xchg
push
or
add
pop
jns
test
in
in
mov
shl
xor
pop
add
push
dec
inc
(bad)
shl
dec
daa
jbe
fdivp
lods
stos
aaa
and
xor
xor
pop
out
mov
and
dec
jne
and
not
clc
mov
pop
aaa
iret
pmulhuw
sbb
adc
add
cmp
push
xchg
cmp
jge
jb
arpl
xor
xchg
movs
pop
stc
pusha
pop
outs
fwait
enter
jmp
out
ins
cmp
xchg
and
stos
enter
arpl
sub
lock
test
pop
mov
call
loopne
xlat
ficomp
loopne
adc
push
add
dec
mov
add
mov
stc
test
sbb
add
test
cmps
lahf
dec
push
lea
pop
mov
sub
mov
xchg
add
leave
push
jbe
add
push
out
leave
dec
adc
cmps
std
(bad)
adc
imul
retf
outs
or
stc
dec
shr
sbb
add
inc
xchg
bound
mov
popa
cmps
fldcw
aad
dec
fcmovne
mov
nop
cld
xlat
sbb
push
xor
dec
dec
dec
mov
(bad)
loopne
jbe
data16
xor
push
jp
jecxz
clc
adc
jl
sub
sub
enter
and
call
adc
aad
in
nop
outs
pop
scas
push
fld
push
jp
rcr
lahf
pop
pop
inc
jae
sbb
or
in
jns
enter
popf
and
fst
xchg
xchg
sbb
daa
bound
scas
xor
stc
ins
jo
jg
jne
sbb
ficomp
push
push
push
(bad)
sar
pop
dec
dec
xor
je
mov
inc
push
(bad)
clc
or
outs
pop
stos
or
arpl
adc
or
aaa
sbb
pop
push
sbb
sti
gs
dec
loop
call
dec
adc
xor
mov
std
scas
mov
pop
jnp
cmp
cmps
xor
adc
stos
push
cwde
jnp
pusha
push
scas
movs
mov
mov
sub
stos
jno
add
shr
add
lea
fs
sub
add
push
sub
push
mov
mov
sti
add
adc
cdq
mov
jb
and
xchg
push
retf
fsub
jg
inc
or
xchg
fs
add
(bad)
(bad)
xor
loopne
inc
add
movs
dec
loop
dec
sti
pop
fistp
xchg
xor
dec
rcl
jecxz
(bad)
popa
out
cwde
add
push
sar
jp
ja
xor
test
sbb
dec
dec
rol
addr16
sti
rcr
inc
cwde
pop
nop
cmc
mov
add
jb
mov
jg
dec
push
push
lods
int3
stc
mov
cmp
mov
xor
cdq
cmc
xchg
push
dec
rcl
dec
xor
cmp
in
mov
es
mov
clc
lods
xchg
and
call
in
xchg
inc
lods
xor
pop
iret
lea
add
in
ja
mov
pusha
in
test
loopne
in
sbb
outs
push
sbb
sahf
out
fidiv
cmp
push
cmp
mov
je
sbb
jge
fldenv
push
cdq
daa
pop
imul
add
mov
jno
mov
sub
dec
xchg
aaa
into
movs
jns
sbb
xor
or
aam
inc
xor
in
repnz
push
stos
xchg
enter
inc
cmp
hlt
loope
push
cmp
inc
jnp
jno
xchg
pusha
cdq
out
test
test
mov
push
cld
xor
ror
outs
shl
xor
mov
in
jg
adc
jmp
nop
je
and
push
xor
adc
movs
aam
jbe
rcl
in
nop
cld
mov
pop
push
in
test
(bad)
enter
lds
sub
adc
adc
mov
dec
aas
loope
stc
sub
xchg
dec
sub
call
add
pop
mov
dec
dec
cmc
mov
scas
dec
xchg
je
pop
sbb
push
imul
pop
push
jp
mov
inc
sbb
sub
fcmovnbe
jnp
mov
xchg
(bad)
jae
pushf
call
and
hlt
xor
or
jns
js
daa
dec
clc
push
sahf
fnsave
scas
add
test
outs
push
mov
int
xchg
or
mov
jmp
sub
loopne
dec
sbb
mov
adc
inc
xchg
ret
arpl
stos
jecxz
push
imul
(bad)
hlt
mov
(bad)
lahf
mov
push
push
hlt
addr16
hlt
clc
mov
cmp
test
push
add
or
push
push
xchg
arpl
xor
les
xchg
mov
jnp
test
jo
inc
shr
call
xlat
leave
add
arpl
sbb
loopne
idiv
dec
xchg
shl
popf
mov
sub
in
fst
adc
xor
aaa
inc
retf
cmp
retf
pop
mov
pop
pop
cmp
ins
loop
test
and
pop
shr
cmps
dec
cmp
sbb
jb
pop
outs
cmp
dec
cmps
cmp
push
or
shr
dec
jle
fimul
jnp
add
jecxz
test
(bad)
stc
pop
adc
arpl
test
cmc
loop
jl
retf
cli
adc
and
cs
(bad)
div
pop
stc
sub
popf
mov
popf
or
sub
add
jnp
fstp
dec
xor
mov
pop
xor
int
movs
dec
inc
sub
ins
jle
sti
lea
mov
xor
mov
movs
out
in
adc
ja
xor
jmp
enter
pop
jo
(bad)
jbe
mov
(bad)
cwde
mov
ror
pushf
cmc
cmp
push
je
(bad)
(bad)
cld
icebp
or
add
test
mov
inc
sbb
or
out
movs
cmps
mov
movs
mov
not
fadd
pushf
ret
cmp
scas
adc
mov
jb
and
mov
add
rcr
popf
sbb
ret
std
cmps
adc
bnd
push
hlt
dec
out
arpl
call
xor
(bad)
aam
fs
mov
and
cmp
mov
outs
mov
and
(bad)
cmps
or
cmp
jbe
xchg
jmp
popf
add
mov
jecxz
sar
pop
add
lahf
lock
xchg
mov
dec
cmp
jae
int3
ins
and
dec
(bad)
sub
push
je
inc
mov
jmp
jae
add
cld
mov
sti
lock
push
push
adc
je
sbb
push
mov
repz
pop
jo
xlat
sbb
push
(bad)
(bad)
mov
cli
cwde
mov
jmp
int3
add
and
pusha
pop
sub
sbb
stc
push
pusha
imul
rcr
fld
and
dec
mov
push
mov
fld
aam
aaa
cmp
sub
outs
rcr
add
test
push
push
jg
xchg
(bad)
xlat
enter
int
aaa
aam
imul
ss
or
loopne
loop
(bad)
push
out
cmp
bound
jnp
mov
call
fidivr
lock
rol
dec
ret
pop
inc
(bad)
fidiv
iret
enter
xor
or
inc
push
lods
mov
jne
in
sub
imul
sbb
inc
aad
adc
data16
inc
pop
mov
pop
cmps
jle
adc
xchg
fnstenv
cli
clc
lahf
fst
pushf
out
pop
pop
cs
into
add
or
mov
adc
in
cmp
inc
add
(bad)
cdq
xor
mov
mov
std
mov
es
addr16
adc
repz
(bad)
xor
mov
add
inc
push
dec
ficom
imul
jae
int
sbb
adc
push
mov
xchg
out
jge
lea
xor
mov
xor
out
aaa
aaa
shl
sbb
push
call
daa
xchg
mov
ror
sub
adc
mov
enter
adc
jmp
cmp
pcmpgtd
add
dec
or
popa
xchg
or
mov
les
mov
pop
jae
shl
lds
cmp
jle
nop
pusha
jle
call
xchg
imul
popf
ins
mov
int3
adc
es
pop
cwde
cwde
not
push
lods
mov
ja
fwait
sbb
jmp
pop
(bad)
aam
adc
out
pop
daa
xor
dec
mov
not
cmp
dec
or
cld
push
shl
jmp
xlat
pop
add
inc
mov
and
pop
fcmovbe
dec
shl
ja
mov
cmp
ss
scas
add
push
sar
cmps
jbe
(bad)
int
clc
adc
or
sbb
in
sbb
in
(bad)
inc
js
xchg
add
xchg
mov
sbb
push
popf
cs
adc
mov
mov
rcl
rcr
xchg
jbe
in
jmp
or
sbb
loope
sub
and
xchg
sti
jp
(bad)
fst
popa
lahf
loopne
(bad)
mov
sub
lds
aas
in
mov
pop
or
jo
fstp
mov
pop
out
xchg
int3
les
sbb
sub
imul
inc
jno
cmps
sti
push
mov
in
fisub
mov
jmp
pop
mov
jmp
inc
sub
xchg
mov
inc
bound
mov
push
push
addr16
add
xor
das
adc
sti
add
imul
and
pop
mov
push
les
test
out
cdq
add
inc
js
cmp
das
call
add
mov
cmp
xor
or
mov
or
sbb
mov
cli
cli
jns
add
je
(bad)
sbb
div
(bad)
mov
sti
and
push
enter
inc
jmp
push
lea
push
lahf
nop
mov
push
dec
popa
movs
idiv
(bad)
and
dec
(bad)
pop
add
nop
sbb
dec
push
jmp
lods
mov
cdq
clc
ins
in
sbb
jo
jmp
push
cmp
pusha
mov
lock
leave
mov
int3
sub
clc
inc
sub
cmp
mov
mov
fisttp
xchg
or
stc
or
rol
adc
and
xor
rdtsc
xlat
test
jo
push
cs
or
outs
popf
cs
push
cmp
dec
aaa
mov
jle
inc
sub
and
cli
iret
xchg
lds
pop
inc
stc
sbb
cld
xchg
ss
mov
push
fist
cmps
pop
call
xchg
mov
mov
scas
inc
inc
pop
or
jg
and
test
push
(bad)
cli
lods
js
pusha
push
data16
iret
clc
sbb
mov
mov
mov
pop
in
xchg
pusha
push
inc
pop
loope
mov
xchg
adc
xor
add
jmp
(bad)
mov
pop
add
mov
cmp
xchg
outs
std
push
es
push
daa
fs
(bad)
jae
push
test
sub
and
std
std
repz
mov
icebp
inc
ss
out
in
fs
ret
clc
mov
sahf
or
push
xlat
mov
xchg
lods
and
cs
(bad)
cdq
pop
sbb
sti
dec
popf
leave
popf
add
loop
xlat
outs
arpl
xor
sbb
xchg
not
cmp
mov
xlat
xchg
adc
pop
push
mov
push
aas
imul
xchg
jl
adc
push
call
lahf
or
push
and
fwait
cmp
cmps
loopne
inc
mov
xor
dec
mov
sub
repnz
hlt
lods
or
pop
(bad)
fiadd
and
bound
fucomp
pop
retf
icebp
mov
mov
xchg
adc
(bad)
aad
pop
adc
shr
or
jo
jae
sahf
mov
sbb
mov
inc
jmp
xor
cmp
cdq
mov
and
xchg
jle
(bad)
mov
jl
(bad)
push
xchg
add
(bad)
loope
push
call
xchg
ins
addr16
ins
stc
out
cmp
(bad)
ret
jno
adc
jne
inc
ja
mov
out
(bad)
sahf
call
imul
test
inc
jno
ins
nop
movlps
ins
inc
push
push
xor
jl
lods
cmc
nop
hlt
and
out
jnp
push
mov
shr
rcr
mov
sti
push
dec
xor
xchg
sub
fdiv
arpl
pop
jp
mov
or
xchg
add
(bad)
repnz
retf
ins
fstp
xchg
mov
cs
xor
and
cwde
xchg
jns
enter
arpl
push
out
adc
test
or
sahf
add
dec
push
sti
add
movs
or
stc
dec
mov
adc
mov
pop
cmp
arpl
call
hlt
sbb
add
add
push
cmp
retf
jecxz
bound
popa
cwde
inc
and
sub
cmp
adc
mov
cmovns
adc
dec
mov
sub
dec
bnd
add
jge
sbb
mov
add
pushf
mov
loope
loope
add
pop
daa
out
pop
jge
in
and
fisubr
inc
stos
cmc
or
test
cdq
xor
pop
and
enter
fld
clc
adc
inc
shl
cmps
lods
inc
fcmovnbe
jbe
or
jne
xor
pop
or
dec
mov
xchg
or
mov
pop
outs
sub
dec
jno
gs
cmps
(bad)
jg
jne
mov
data16
jmp
arpl
pop
dec
popf
iret
fdiv
push
loope
hlt
(bad)
in
inc
fwait
adc
mov
mov
aas
mov
aaa
dec
or
sub
push
ror
cmps
in
cmp
es
jg
rol
repz
sti
cdq
outs
jno
fbld
mov
cdq
or
sbb
(bad)
iret
xchg
xchg
bound
sub
cld
popf
fistp
es
mov
dec
loop
xlat
pop
das
sahf
fst
stc
imul
fcom
dec
push
(bad)
fisttp
xor
les
repz
dec
int
ds
stc
xor
scas
mov
lahf
inc
add
out
fbstp
iret
test
out
push
jl
icebp
test
enter
sbb
ss
ja
fsub
pop
out
jns
test
stc
test
jae
jle
mov
push
or
fs
sbb
mul
push
repz
push
ret
dec
fisttp
pop
mov
rol
jg
mov
mov
jmp
jnp
mov
aam
ins
sub
cs
push
nop
test
jbe
push
jo
push
cli
add
jp
xor
daa
mov
push
cmp
xchg
ficomp
js
push
mov
xor
jnp
and
jae
inc
rcl
add
lods
push
xor
mov
shl
inc
rcl
jge
jbe
mov
rcl
in
inc
dec
in
fcomp
jg
fucomi
or
popa
sub
dec
ror
add
sub
leave
mov
mov
push
sbb
jle
add
inc
cmps
mov
mov
shl
mov
pop
test
inc
pushf
in
pop
icebp
dec
test
lock
(bad)
or
jmp
or
dec
and
ret
inc
pop
jb
into
les
dec
pop
push
sub
les
aaa
mov
mov
dec
out
les
and
cmps
dec
inc
icebp
aas
pop
jae
clc
adc
push
pop
into
ins
pop
ds
ins
sbb
and
fild
xor
rcl
into
cmp
sub
outs
stos
xchg
sbb
movs
mov
or
xor
les
cdq
push
cmc
push
adc
cmps
int
mov
scas
cmp
adc
mov
fwait
mov
push
push
xlat
jb
sbb
mov
xor
push
or
sub
jecxz
aaa
jg
nop
adc
fwait
or
daa
aad
jnp
inc
popa
or
inc
sbb
sbb
mov
cmp
sti
xchg
push
cmp
call
dec
adc
and
or
jae
std
arpl
out
les
fldcw
int
mov
sub
sbb
test
xor
mov
inc
push
pusha
jl
adc
inc
pushf
sar
gs
cld
cmp
ror
gs
push
in
dec
adc
pop
es
jg
push
or
rcl
lock
ins
in
rcl
and
test
lods
add
push
movntq
jne
ror
xor
jge
mov
stos
cwde
nop
outs
dec
push
jnp
popa
ins
adc
sub
xor
fistp
xchg
push
xor
jo
fucomi
out
stos
ja
add
mov
cld
sbb
xor
scas
fistp
cmp
aam
dec
in
cld
not
jbe
test
scas
jb
mov
jb
cld
(bad)
pop
test
adc
xor
and
sbb
and
pop
mov
add
xchg
jno
mov
sbb
push
inc
scas
pop
xchg
pushf
mov
(bad)
adc
dec
pop
or
mov
mov
xchg
idiv
cwde
cwde
pop
popf
hlt
jo
fs
and
fwait
xor
mov
xor
sub
popa
arpl
stos
int3
ret
shl
adc
sar
cmps
dec
das
mov
pop
repz
pop
and
mov
add
movs
mov
push
push
adc
sahf
sbb
into
inc
mov
shr
std
lds
mov
pushf
bound
in
pop
idiv
and
dec
nop
adc
shl
or
clc
inc
mov
retf
or
fisubr
sub
add
jg
outs
mov
jecxz
fwait
cld
lods
fcom
pop
imul
xchg
jge
adc
and
inc
fdivp
lahf
inc
jae
jns
sbb
inc
jp
je
pop
mov
cmps
jmp
aad
pop
mov
mov
xor
xor
clc
ja
enter
iret
ret
push
pushw
or
cmp
je
bound
retf
repnz
lea
push
cld
xchg
adc
retf
sbb
neg
mov
xor
les
pop
jmp
out
daa
pop
lea
jae
in
push
pop
mov
(bad)
and
movs
add
aas
in
or
sbb
test
fdivr
sahf
call
mov
mov
jge
scas
loopne
inc
push
sub
retf
cdq
jg
es
lahf
shl
in
xor
sub
or
cli
rcr
push
mov
fldcw
mov
and
enter
out
mov
add
inc
cmp
cmps
adc
movs
cdq
jae
mov
sbb
sahf
xor
sub
lahf
adc
leave
xor
push
frstor
(bad)
mov
dec
add
mov
mov
shr
adc
test
mov
jnp
mov
cli
fistp
fsubr
call
movs
(bad)
mov
push
jne
aad
push
jmp
sub
sbb
dec
inc
mov
sbb
mov
jmp
(bad)
jno
fist
and
cmp
cmps
into
imul
fdivr
jge
xor
adc
les
sbb
rol
sub
gs
mov
div
ror
call
push
mov
mov
mov
mov
sub
sahf
pusha
pop
mov
jmp
pop
add
jmp
jg
div
cmps
push
push
(bad)
out
repnz
cld
pusha
mul
push
lea
stc
ficom
mov
add
das
jle
xor
cwde
mov
sub
inc
cwde
cli
pop
retf
dec
sub
nop
xor
mov
cmps
add
xchg
sub
push
cli
(bad)
mov
pop
mov
xor
mov
int3
mov
loopne
jl
mov
ret
leave
out
add
ds
sub
or
lss
fs
(bad)
jecxz
xor
xor
pop
loope
mov
and
push
push
cli
cmp
mov
into
adc
adc
dec
mov
cmc
and
cmp
test
xchg
jecxz
cmp
pop
pop
dec
lock
or
jmp
test
xchg
das
dec
push
mov
(bad)
in
clc
outs
pusha
push
or
add
int
and
cli
sub
cli
hlt
mov
int3
mov
inc
test
xchg
pusha
and
call
jmp
inc
iret
pop
mov
retf
mov
mov
mov
fbstp
fs
pop
dec
jnp
call
std
xchg
sbb
mov
test
sub
add
hlt
test
cwde
sub
lods
repnz
adc
push
add
lahf
pop
stos
cmps
std
retf
shl
pop
mov
pop
stc
lods
and
xor
loope
dec
or
sar
std
inc
xchg
or
mov
add
inc
jns
sar
push
sub
or
xlat
cmp
add
in
jb
add
pop
push
xlat
aam
leave
hlt
xor
fnsave
add
inc
or
mov
add
inc
cmp
out
push
mov
int
scas
mov
adc
daa
or
sbb
mov
iret
test
mov
mov
(bad)
and
(bad)
std
xor
adc
enter
add
push
cmps
mov
adc
outs
sar
xchg
add
mul
aaa
add
inc
repz
push
adc
cmp
xor
pusha
mov
cwde
or
jle
push
pop
ss
loop
call
xor
and
adc
xchg
pop
dec
je
sbb
test
fs
movs
popf
aad
cmp
std
daa
bextr
mov
xchg
mov
cmps
pusha
(bad)
add
mov
movs
and
nop
in
adc
sub
jl
fwait
adc
fwait
inc
or
jl
in
jge
hlt
test
inc
fs
jl
add
push
xlat
fimul
xchg
sub
jae
and
xchg
loopne
data16
mov
test
mov
test
es
xor
pop
js
push
aaa
stc
add
loop
hlt
repnz
sbb
bound
cmp
pop
and
push
pop
xchg
push
cli
xor
push
pop
je
adc
mov
sbb
sbb
adc
mov
push
out
cmp
inc
ds
cmp
jmp
stos
push
idiv
leave
loope
scas
outs
xor
sahf
jg
mov
pop
and
mov
in
pop
sub
sbb
xchg
imul
pop
dec
cdq
sub
jmp
out
sub
xor
mov
cmp
adc
jb
pop
and
push
and
jl
pop
push
pop
test
jno
add
aad
or
std
ret
inc
cmp
fldenv
aas
inc
clc
aaa
pop
xchg
xchg
mov
fdivr
repnz
dec
dec
lock
push
outs
test
mov
jae
xchg
scas
fucomi
(bad)
xchg
arpl
dec
jmp
lock
sub
(bad)
movs
into
lods
imul
cmps
outs
iret
or
fidiv
sbb
int
jp
cdq
cld
sbb
lahf
jge
jnp
or
outs
lahf
pop
inc
mov
and
test
push
mov
xchg
jmp
test
cs
and
mov
mov
cmp
xchg
out
ficomp
inc
mov
inc
dec
shl
lea
xor
mov
je
mov
addr16
fs
popa
repz
xor
dec
pop
mov
mov
or
add
mov
outs
(bad)
mov
sahf
jne
in
daa
cmp
add
ror
idiv
sub
pop
in
int3
sbb
div
lahf
sbb
jmp
ins
gs
push
inc
and
dec
sbb
xchg
in
cld
cs
daa
xchg
inc
xor
inc
shr
jle
jne
repnz
sub
bound
les
lahf
popa
std
and
mov
push
adc
cmps
pop
pushf
lds
cmc
jle
in
adc
xor
bound
pop
adc
add
push
mov
inc
outs
push
and
and
mov
dec
gs
cmp
cmp
call
loopne
add
pushf
jbe
xor
jb
xchg
scas
jne
jmp
mov
add
arpl
es
stos
mov
pop
mov
mov
ret
add
stos
push
add
xor
sbb
cmp
pop
xor
sbb
push
dec
addps
xor
push
sub
ror
sbb
std
xchg
mov
lds
aad
std
pop
push
cmps
push
sti
sub
retf
cmp
enter
ins
addr16
loopne
dec
xchg
mov
xor
xchg
mov
pop
cwde
dec
aas
push
mov
mov
test
data16
push
lods
(bad)
push
lock
imul
into
xlat
adc
cmp
je
call
push
loopne
mov
pop
in
push
icebp
push
in
movs
addr16
mov
js
mov
xchg
imul
loope
or
stc
pop
xchg
mov
adc
cmc
stos
xchg
inc
cmps
sbb
imul
mov
push
xchg
and
inc
pop
xlat
enter
dec
test
pushf
dec
pop
cmp
add
mov
cli
add
jge
shr
(bad)
xchg
inc
push
pop
mov
mov
aaa
adc
das
dec
mov
xlat
and
push
inc
mov
jne
jmp
ds
jno
test
fist
mov
leave
push
cmps
jbe
mov
mov
push
je
xchg
iret
jmp
js
pop
repz
xchg
push
mov
jl
sbb
test
push
push
nop
fs
cdq
pop
mov
sub
in
stos
inc
(bad)
(bad)
sti
pop
push
adc
test
add
sbb
push
cld
sbb
clc
imul
or
fadd
arpl
push
jmp
and
cwde
repnz
ret
sbb
mov
xchg
nop
cmp
leave
cmp
sahf
or
imul
addr16
mov
loope
pop
out
jmp
sub
xor
xchg
mov
icebp
mov
arpl
repz
mov
jne
inc
imul
and
push
jp
push
sbb
pop
sbb
inc
or
fs
sbb
ins
add
mov
sbb
jb
sub
push
hlt
jne
or
sar
in
pop
dec
aad
and
(bad)
das
adc
inc
cmps
inc
sbb
sbb
lock
jp
popa
aas
sub
mov
inc
mov
scas
jmp
pop
loopne
daa
or
hlt
cmp
enter
shl
push
or
icebp
jp
fbstp
rcl
push
into
mov
out
xlat
push
mov
mov
je
pushf
xor
adc
bound
int
pop
sar
ret
mov
dec
mov
adc
(bad)
mov
or
pop
mov
mov
repz
into
pop
shl
lds
out
mov
inc
cmps
fnstcw
mov
call
cmp
sahf
in
outs
push
test
push
aaa
xchg
fild
mov
enter
(bad)
cmc
pop
jle
stos
adc
ficomp
movs
sub
xor
rcl
loope
jle
es
xor
popf
stos
adc
jg
data16
das
cmc
push
arpl
in
mov
jmp
push
xchg
arpl
xchg
mov
jg
outs
fld
jl
jne
dec
sbb
imul
stos
lea
push
xlat
stc
cmps
cli
pop
or
(bad)
jl
mov
inc
xor
push
fs
bound
inc
out
dec
popa
add
pop
xor
mov
push
in
cmp
jmp
jo
in
push
adc
inc
imul
mov
and
fadd
mov
mov
lea
jl
pusha
imul
inc
inc
mov
stc
push
aad
push
sub
adc
rcr
push
dec
adc
mov
lds
push
fdivr
div
fisubr
add
and
cmp
jecxz
sahf
push
mov
pop
push
popf
inc
cmp
fdivp
cmp
outs
sbb
jge
inc
mov
mov
adc
push
repz
bound
push
lock
xchg
adc
out
in
or
movs
xchg
fs
cmp
push
cdq
push
lock
stos
in
sbb
imul
hlt
cdq
push
hlt
mov
arpl
add
mov
dec
retf
push
(bad)
inc
out
jmp
movs
cmp
lods
stos
mov
imul
in
jnp
sbb
iret
pop
cs
(bad)
jmp
dec
jae
and
cmp
outs
sti
or
cs
cmp
jo
cmp
pminub
adc
cmp
shl
adc
push
push
sub
loop
test
call
ins
mov
and
arpl
xchg
clc
inc
or
push
push
enter
adc
mov
fst
push
or
pop
sti
xchg
adc
or
xchg
scas
xchg
je
or
mov
sti
lock
inc
inc
inc
sbb
sbb
cmc
in
imul
push
or
jae
ins
cli
pop
in
cmp
movs
fcomi
outs
xchg
or
dec
sbb
cmps
dec
mov
or
loop
or
aaa
fmul
add
rol
mov
dec
jae
in
test
add
xchg
stos
mov
fistp
sbb
outs
sub
adc
div
sbb
ss
xor
and
lods
mov
jp
add
arpl
retf
or
imul
jbe
stos
adc
fxch
cmps
add
test
retf
adc
xor
out
sahf
scas
push
xchg
xchg
out
and
fld
stos
xchg
sub
pop
retf
xor
jl
push
add
pop
mov
push
inc
adc
sub
cmps
jecxz
stos
into
out
adc
push
test
mov
push
pop
jae
mov
popf
sbb
(bad)
ins
or
in
repz
pop
cmps
jns
ja
inc
fwait
jbe
scas
(bad)
xchg
retf
minps
out
or
sub
(bad)
mov
ret
into
mov
sub
in
or
xchg
cmp
pop
fwait
dec
push
push
test
retf
fdiv
cmps
mov
cdq
mov
adc
lods
jmp
retf
lods
inc
xchg
pop
xor
je
rol
xchg
push
mov
mov
add
cwde
mov
daa
ds
jmp
dec
cmps
shl
dec
cli
add
jnp
adc
shl
pushf
push
je
inc
hlt
retf
enter
clc
inc
into
rcl
pop
cdq
retf
ins
lock
or
sbb
push
and
adc
mov
dec
or
or
shr
in
sahf
cmp
cmc
cli
push
scas
push
in
sti
fild
js
jge
(bad)
jno
cdq
outs
jnp
jb
cmp
push
popf
ret
and
aaa
cwde
jmp
mov
hlt
inc
sbb
das
arpl
mov
aaa
push
pop
mov
lods
aam
nop
das
xlat
push
sahf
rol
ss
and
inc
jo
jbe
fsubrp
mov
pop
sbb
jno
clc
mov
jecxz
dec
aam
dec
xchg
inc
jmp
aad
sbb
jecxz
jb
test
push
les
or
push
bound
pop
mov
adc
mov
sti
repz
aaa
ret
mov
push
clc
leave
call
push
add
jge
jo
jb
xchg
aam
mov
dec
xchg
push
loope
mov
mov
mov
test
mov
jecxz
push
inc
xchg
jle
sbb
sub
pushf
or
movs
js
ror
xchg
dec
mov
sar
leave
mov
push
movs
retf
fcomp
adc
cli
jl
or
inc
or
add
add
les
js
mov
or
push
or
xor
dec
movs
(bad)
daa
ins
les
rcl
and
and
push
jmp
mov
ja
fldenv
in
inc
nop
mov
int3
push
iret
cmp
pushf
cdq
add
aaa
mov
aas
sbb
mov
sub
inc
xchg
sbb
adc
sbb
fiadd
jge
repnz
xchg
push
mov
sub
mov
pop
leave
jp
test
cmp
bound
xor
outs
bound
mov
and
sbb
push
call
push
pop
bound
rep
push
push
in
jmp
mov
sub
movs
inc
push
sbb
outs
push
dec
ret
test
add
mov
inc
mov
fisttp
enter
fiadd
jecxz
int3
loope
lea
ins
pop
ja
les
sbb
arpl
sahf
xchg
push
test
fmul
call
loope
shl
or
push
dec
and
push
xor
(bad)
fld
pushf
or
sub
test
push
pop
das
loop
xor
nop
pop
mov
clc
in
mov
scas
xchg
mov
(bad)
dec
loope
sub
movs
movs
cmp
xchg
pop
movs
push
test
sub
push
retf
xchg
pop
ja
dec
cs
rcl
(bad)
push
leave
inc
ja
xchg
pop
jp
and
xchg
stc
push
mov
sbb
in
mov
pop
mov
mov
mov
enter
sbb
pop
xchg
mov
jge
push
jbe
addr16
mov
test
rcl
stos
mov
pop
mov
js
scas
sub
mov
mov
pop
xor
cwde
cmp
imul
sar
xchg
or
aas
in
pushf
in
cmc
cmc
mov
dec
or
jecxz
(bad)
hlt
fbld
imul
loop
shl
xchg
jne
and
cmpps
xlat
dec
stos
pop
jno
push
mov
movs
pop
sbb
ins
outs
fdiv
ja
sbb
mov
rcl
stos
sbb
jo
hlt
cmp
es
push
mov
jge
daa
mov
pop
pop
scas
sahf
lds
into
mov
ins
mov
and
cs
xlat
cmps
outs
mov
push
jae
ss
xor
jmp
jo
lods
push
xor
pop
js
dec
mov
jne
jno
xor
add
adc
inc
cmp
ja
sub
dec
jl
jmp
push
out
popf
push
loope
add
xchg
popa
mov
push
adc
mov
mov
dec
outs
les
test
cld
or
or
(bad)
mov
jmp
xor
hlt
out
jg
test
enter
aad
sar
in
and
popa
and
push
data16
mov
inc
das
dec
pop
xor
inc
adc
ror
mov
dec
jle
movsx
cld
cmps
leave
ins
push
inc
xchg
mov
call
or
int
enter
dec
cmp
or
inc
add
mov
lock
rcr
mov
fdiv
push
cmp
cmp
cmp
out
jo
fcomp
push
fst
stos
mov
mov
fxch
sbb
xor
or
jl
aam
or
mov
add
mov
adc
xchg
addr16
inc
cmp
retf
push
cmc
add
ret
outs
ret
jnp
ss
add
mov
daa
or
loope
ja
xchg
push
ins
dec
dec
adc
(bad)
nop
jmp
cmps
push
xor
mov
pop
jmp
or
mov
or
mov
ss
pop
fcomi
call
mov
sub
sbb
push
push
xor
(bad)
xchg
je
push
pop
test
cmp
sbb
out
push
push
and
xchg
shr
xor
jmp
sbb
shl
push
mov
jp
xchg
xchg
les
lods
pop
call
mov
cmp
adc
stos
sbb
sbb
in
sbb
push
mov
add
dec
mov
sahf
arpl
aas
loopne
dec
lea
call
push
in
shl
retf
lods
inc
inc
les
adc
aam
dec
(bad)
in
adc
inc
push
stos
ret
jae
inc
jp
jns
inc
dec
shr
into
push
loop
scas
clc
lock
jecxz
stos
pop
gs
dec
ins
hlt
repnz
xchg
lea
sub
(bad)
mov
outs
(bad)
sub
out
test
xchg
data16
test
or
dec
or
scas
inc
mov
dec
adc
imul
cs
mov
mov
push
repz
loop
xchg
mov
fldcw
sbb
push
imul
mov
movs
jge
jge
cwde
sub
adc
movs
in
and
js
iret
mov
or
into
pop
call
inc
inc
daa
cdq
cwde
push
out
scas
and
mov
push
cli
mov
arpl
push
ret
pop
sbb
aas
adc
adc
fadd
jmp
add
mov
pusha
scas
leave
dec
sbb
inc
loopne
pop
sub
sub
into
(bad)
popa
test
pop
mov
xchg
add
imul
or
test
arpl
not
fisttp
cmp
movs
sbb
jmp
jmp
neg
push
pop
dec
(bad)
jns
lods
inc
xor
repz
mov
(bad)
dec
lods
push
mov
shl
dec
cmps
loop
js
sub
(bad)
jmp
inc
mov
stos
add
xor
mov
inc
add
xor
sbb
div
push
dec
repz
xlat
sbb
sahf
repnz
ins
jb
pop
sub
mov
adc
dec
mov
lea
out
xchg
pop
mov
add
addr16
les
test
int3
inc
mov
das
or
push
adc
lods
stos
mov
mov
pop
fisubr
std
bound
in
lock
cs
pop
mov
dec
pop
sub
inc
lds
inc
or
imul
sub
add
sahf
inc
lods
fwait
hlt
les
cs
test
lods
inc
mov
(bad)
cmp
ret
mov
(bad)
push
mov
cmp
fs
push
and
test
loope
mov
leave
adc
xchg
pop
jmp
adc
push
repz
je
daa
xor
mov
scas
add
mov
push
int3
and
mov
push
or
jno
or
adc
retf
pop
push
jae
jbe
mov
ficom
jae
pushf
xchg
and
inc
(bad)
mov
xchg
out
(bad)
out
cmp
mul
pushf
fidiv
lahf
mov
(bad)
es
test
loopne
(bad)
add
cmp
icebp
lock
test
ret
(bad)
xchg
or
cmp
fidiv
xor
mov
inc
dec
scas
sti
mov
ret
xor
mov
imul
xchg
pop
mov
sbb
pop
pop
imul
aas
or
mov
movs
popa
xchg
cmps
fs
mov
sbb
iret
(bad)
dec
sub
add
adc
xor
mov
pusha
leave
dec
cmp
lea
mov
add
dec
cmps
and
lods
std
out
push
iret
pop
lds
adc
jnp
sub
mov
shr
pop
adc
das
add
mov
fsubr
fwait
and
sbb
call
pop
leave
stc
jge
out
inc
lahf
sub
sbb
adc
hlt
nop
xor
loopne
mov
adc
and
xchg
cmc
(bad)
in
add
sti
inc
mov
xor
sbb
fist
out
add
retf
or
xor
mov
mov
mov
cmp
fs
rcl
or
int
popf
mov
cwde
jae
fsub
adc
and
inc
mov
mov
mov
add
jmp
ret
clc
hlt
ror
stos
adc
loop
jns
imul
xor
inc
out
(bad)
pop
push
adc
jge
loop
mov
retf
bound
inc
pop
lahf
call
lahf
test
stos
in
push
inc
mov
aaa
cmps
push
adc
inc
sub
lahf
cli
rol
jb
mov
dec
(bad)
xchg
retf
jno
(bad)
jns
sub
cld
inc
scas
scas
aas
jnp
inc
push
out
sub
mov
xchg
mov
stc
fcomi
jmp
les
sbb
cmp
hlt
mov
inc
push
adc
push
retf
adc
mov
ror
scas
aad
cli
and
mov
movs
jmp
hlt
inc
lea
pusha
dec
rcr
xchg
cmp
xchg
imul
inc
xchg
repz
fdiv
sbb
pusha
jge
mov
shl
mov
iret
dec
sbb
ror
mov
sbb
lahf
xor
push
sub
mov
add
add
sub
out
and
push
test
js
into
mov
fistp
into
push
enter
nop
jb
mov
mov
movs
mov
aad
cmp
jno
or
retf
call
das
in
push
adc
pop
test
xor
in
dec
loop
fdivr
mov
push
mov
movs
jne
cmp
mov
(bad)
xor
mov
push
mov
les
int3
cmp
push
cmp
ror
int
jg
add
and
mov
out
xor
jnp
pop
pop
mov
lds
adc
repnz
retf
mov
inc
into
lahf
jns
outs
pop
outs
add
cmp
fadd
jb
jp
cmp
mov
loop
cwde
(bad)
loope
dec
cwde
repnz
push
ds
in
fisub
(bad)
popa
lds
cmps
jo
sbb
dec
das
mov
sbb
dec
daa
inc
xchg
push
int
test
out
popf
jle
popf
pop
cmps
push
inc
sub
aas
xchg
popf
scas
or
xor
stos
sub
(bad)
adc
in
jg
mov
add
neg
sahf
push
push
and
xlat
jne
mov
jns
fcom
jb
mov
xlat
stc
lods
aad
mov
not
mov
cld
(bad)
rol
(bad)
push
dec
inc
pop
mov
sub
retf
xor
add
js
add
dec
cmp
sahf
gs
add
not
icebp
adc
inc
dec
icebp
xor
pop
cdq
cmp
jg
or
push
repz
xor
lds
outs
retf
int3
cmps
jnp
clc
sbb
jp
cmp
dec
scas
ss
pop
sti
push
and
iret
xor
loope
jecxz
lahf
mov
dec
sub
in
(bad)
aam
push
(bad)
shr
ins
outs
aas
fist
repz
clc
jne
push
mov
gs
mov
not
es
xchg
js
xchg
sub
xchg
sub
xchg
popf
or
pop
jb
or
cmp
cmp
nop
adc
daa
daa
add
xchg
fcom
mov
push
jbe
xor
mov
stos
add
xor
sub
in
popf
in
add
fs
adc
jnp
xor
scas
pusha
lahf
sbb
in
test
sbb
pop
sub
call
rcl
xor
jp
or
dec
sbb
cmc
out
mov
mov
pusha
push
in
cmc
std
mov
inc
aaa
sbb
pop
dec
cmp
fild
aam
mov
lock
mov
dec
sbb
cdq
add
dec
imul
pusha
mov
std
mov
sbb
adc
mov
cs
cmp
xchg
test
push
cmp
(bad)
dec
cmps
shl
xchg
adc
(bad)
push
fwait
mov
push
iret
cmps
jno
jae
and
push
adc
mov
pushf
clc
(bad)
repnz
xor
push
fs
not
leave
push
inc
in
jle
cmps
(bad)
(bad)
call
fist
and
test
call
imul
imul
stos
sbb
int3
mov
sar
out
or
jno
stos
xor
jge
je
xchg
pusha
dec
jo
dec
pop
imul
lods
push
push
xor
mov
sbb
sub
iret
lock
cmp
pop
movs
ins
std
dec
icebp
imul
aam
add
mov
pop
jo
pop
xchg
dec
xchg
nop
mov
pop
push
jmp
outs
sbb
adc
arpl
mov
repz
push
cmp
push
adc
jno
sbb
jg
jecxz
sahf
jae
addr16
movs
mov
sbb
or
xchg
cbw
sbb
fwait
bound
mov
and
ret
and
sbb
jnp
(bad)
jbe
mov
pop
jle
fld
iret
in
cmp
mov
jno
loopne
and
and
mov
cmp
in
xchg
fs
inc
sti
dec
int3
sbb
outs
sbb
call
dec
sahf
add
and
xchg
aaa
out
call
call
dec
arpl
xlat
imul
add
test
cs
push
xchg
add
and
ror
push
jbe
js
xchg
mov
pop
fwait
popf
fwait
jmp
call
xchg
xchg
push
cs
imul
arpl
out
xor
test
stos
dec
pop
mov
iret
ins
mov
and
xor
push
es
(bad)
mov
ins
mov
jnp
and
loop
lahf
dec
and
lock
mov
ret
mov
sbb
push
lods
aas
adc
pop
pushf
scas
loope
stos
adc
or
cs
jmp
sub
add
imul
mul
add
push
and
outs
xor
dec
in
add
loopne
sahf
xor
pop
add
push
mov
inc
mov
nop
imul
cmp
mov
mov
loopne
mov
lods
jg
out
or
xor
push
repz
fst
mov
(bad)
das
loop
stc
pop
dec
pop
sbb
stc
gs
cmp
xchg
ret
mov
aad
push
or
jmpw
imul
xlat
push
fidiv
mov
or
movs
movs
pop
int
cdq
enter
lock
or
inc
stos
test
ja
ret
cld
ror
outs
dec
sub
mov
call
fmulp
dec
fadd
int3
and
sub
int
mov
adc
push
popa
jnp
icebp
cmps
inc
add
es
sub
retf
mov
repnz
(bad)
push
cmp
push
xor
jmp
ret
popa
test
jae
ins
aaa
xchg
pop
rcr
(bad)
in
lahf
pop
aam
mov
or
adc
dec
rol
sbb
fsubr
xchg
mov
dec
out
cld
ds
mov
pop
xchg
push
add
xchg
mov
and
aad
pop
mov
dec
lods
sub
loopne
mov
mov
pop
das
mov
pop
sbb
daa
test
out
int3
clc
mov
push
adc
and
sbb
shr
dec
jno
pushf
clc
jg
out
jmp
jecxz
lea
mov
je
in
and
sub
pop
inc
sbb
daa
xlat
jge
cmp
fcom
mov
loope
arpl
or
or
mov
frstor
inc
fsubr
cmp
cmp
imul
xor
dec
push
jecxz
lea
into
fs
aaa
and
jno
push
iret
sti
push
(bad)
sar
xchg
mov
icebp
jmp
lods
icebp
mov
stc
xor
jo
xor
jbe
not
pop
sahf
aam
xor
mov
or
in
les
mov
(bad)
gs
fist
jmp
jle
push
mov
mov
fs
cmps
mov
or
iret
mov
sub
stos
cmc
adc
inc
push
mov
sub
mov
mov
xor
push
pop
ror
cmp
mov
rol
pusha
dec
or
fadd
mov
lahf
adc
ss
cld
sbb
mov
mov
inc
test
pop
add
ds
mov
push
mov
inc
xchg
and
lds
xchg
je
fdivrp
mov
les
loopne
dec
les
ror
leave
adc
mov
sbb
stc
inc
mov
lock
mov
jbe
(bad)
push
shr
push
pusha
mov
mov
push
pop
daa
add
std
cdq
pop
add
sahf
outs
test
stos
pushf
test
sub
cmp
cmps
clc
rcr
rep
adc
jo
fwait
cmp
and
neg
push
push
imul
jl
idiv
push
adc
jbe
cmp
mov
sbb
xchg
push
lds
out
cmps
call
in
jno
ret
pusha
mov
cmp
cmp
repnz
cmps
push
outs
dec
lahf
pop
xor
js
in
jmp
pop
outs
and
cmp
std
mov
pop
pop
call
xor
out
push
ja
ror
jo
cli
dec
push
mov
inc
jmp
sub
mov
inc
fsubr
adc
js
mov
repnz
xchg
jbe
sub
xchg
ds
loop
scas
shl
(bad)
rcr
bound
sub
mov
out
int3
aad
outs
fist
inc
or
sbb
sub
pop
inc
(bad)
cmp
dec
jnp
rol
fimul
jecxz
aam
mov
(bad)
inc
in
mov
sbb
cmp
or
stos
adc
pop
push
fldenv
in
adc
lds
pop
lahf
fimul
adc
leave
clc
neg
arpl
call
les
movs
sub
pop
cmp
test
mov
(bad)
dec
in
and
mov
dec
and
mov
lock
adc
(bad)
call
in
mov
(bad)
int
jae
pop
je
(bad)
mov
and
mov
aam
pop
jb
push
mov
mov
sbb
jno
fs
and
retf
dec
adc
or
iret
mov
push
movs
mov
jae
pop
loopne
(bad)
movs
sub
cmp
add
aad
int
and
sub
ins
iret
call
in
jo
popf
push
dec
sub
pop
mov
xchg
hlt
in
add
xor
push
rcr
mov
cmp
or
mov
adc
xor
ins
sbb
xlat
arpl
and
dec
ror
(bad)
mov
(bad)
icebp
pop
sar
jbe
mov
and
pusha
mov
adc
out
cmp
loopne
cdq
pop
sbb
jle
adc
push
ror
popf
adc
bound
in
xor
sub
cld
pop
inc
mov
icebp
test
jno
push
(bad)
int
fcom
icebp
lea
mov
mov
pop
es
jge
xor
mov
jo
and
push
jns
and
cmp
sub
xor
aaa
push
cli
je
fiadd
sub
pop
jecxz
mov
fbstp
mov
out
dec
iret
xchg
add
fs
fdivr
fist
xchg
pop
out
mov
xor
sub
push
push
xchg
lahf
int3
and
out
xchg
xchg
in
in
sub
pop
out
mov
mov
cmp
(bad)
lds
scas
push
sar
jmp
mov
enter
(bad)
jmp
jmp
cmp
xor
mov
inc
dec
sub
and
(bad)
cmp
jle
mov
fcomp
mov
xor
cmp
dec
imul
fsub
adc
adc
cli
or
xor
add
jne
jo
or
les
lahf
fs
sbb
cld
mov
arpl
pop
and
std
ret
out
repnz
ins
imul
loop
pop
loopne
mov
jae
lock
iret
out
mov
test
xor
das
dec
mov
in
shl
mov
cmp
loop
mov
mov
xchg
xchg
stos
ds
fcomp
and
daa
hlt
or
lods
gs
mov
or
sub
movs
mov
sahf
dec
cwde
jb
lahf
ret
dec
mov
bound
out
into
mov
aad
leave
mov
and
ror
push
jo
add
pop
int
sub
das
cmp
ret
add
mov
popa
lods
adc
mov
imul
mov
lods
movs
lock
mov
fistp
shl
(bad)
stc
mov
cmps
push
sbb
or
mov
pop
mov
lods
std
ret
outs
sahf
xchg
ficom
push
add
adc
and
adc
jecxz
xor
pusha
in
js
sbb
test
jae
popf
push
sar
pop
inc
inc
xor
push
arpl
scas
push
mov
pop
sbb
fisttp
cmp
(bad)
and
mov
mov
outs
nop
scas
shl
or
mov
and
cmps
shr
fwait
xchg
out
jg
lods
or
out
(bad)
push
cli
push
fst
jp
mov
xor
add
dec
std
mov
inc
out
stos
and
movs
add
in
hlt
jns
or
in
add
mov
call
pop
stos
push
stos
ret
jl
scas
push
jmp
std
xchg
fld
or
mov
lock
dec
nop
add
icebp
adc
add
test
nop
retf
out
xor
loop
add
mov
retf
cld
ret
cmc
nop
test
cmps
outs
adc
leave
in
mov
pop
mov
dec
fsubrp
add
sub
push
push
test
loopne
xchg
mov
xchg
sbb
sub
xchg
iret
mov
push
ja
mul
not
mov
cli
pop
mov
push
std
xchg
das
mov
and
and
mov
jne
mov
dec
(bad)
and
adc
sub
in
inc
movs
out
jo
add
out
(bad)
jmp
es
prefetchw
pop
jmp
and
sbb
adc
mov
push
push
aam
fs
pop
das
sub
mov
mov
test
loopne
sbb
test
inc
sub
push
movs
push
in
xchg
and
cmp
(bad)
arpl
enter
fnstenv
into
cli
and
xor
iret
popf
adc
pop
pop
hlt
aaa
mov
push
cmp
dec
arpl
hlt
sub
push
jae
add
inc
dec
lahf
out
ror
jns
jmp
mov
push
pusha
add
sahf
sub
imul
and
push
fwait
jl
jle
cld
inc
test
sub
adc
pop
lahf
gs
mov
add
fs
lahf
fs
popf
call
(bad)
out
sar
jmp
lea
(bad)
sbb
and
sbb
cwde
lea
xor
aaa
cs
inc
xchg
xor
sub
and
cmp
(bad)
xor
call
(bad)
les
rcr
in
sub
stc
or
dec
cmp
push
cmp
dec
call
jo
rol
jle
fistp
call
rcr
mov
lods
adc
cwde
pop
xchg
cmp
sbb
lock
clc
and
add
xor
enter
shl
retf
aas
mov
jp
shl
addr16
cmp
sbb
mul
adc
and
xor
jbe
mov
loopne
lea
cmc
jecxz
imul
dec
inc
pop
mov
and
mov
xchg
jns
push
push
mov
test
pop
popf
or
push
inc
add
aam
mov
outs
push
xor
xor
pushf
aad
leave
int3
jnp
loop
addr16
in
data16
clc
pop
dec
push
lods
shr
test
mov
sbb
xchg
cmp
cs
or
mov
jo
push
aam
mov
bound
std
fiadd
xchg
(bad)
mov
in
or
jg
add
call
mul
jnp
stc
clc
mov
or
nop
cs
cmps
sbb
cmp
ds
lods
gs
cmp
das
stos
leave
and
xor
sub
in
push
adc
inc
scas
in
push
(bad)
xchg
push
call
jmp
aad
dec
sub
jo
out
adc
std
sub
pushf
jl
mov
add
clc
sbb
cmp
add
jb
mov
es
cmc
dec
xchg
fcomip
pushf
hlt
adc
jno
jb
jbe
mov
mov
repz
imul
lods
outs
shl
jb
in
cmp
and
inc
pusha
icebp
aad
sbb
pop
out
cmc
movs
push
and
scas
daa
addr16
rcr
jmp
mov
ds
fistp
mov
repz
dec
cmp
sbb
push
mov
int3
mov
and
rcl
and
push
loope
mov
cmp
test
or
cs
sub
sbb
imul
cmp
push
or
and
outs
dec
scas
dec
jne
(bad)
icebp
out
jo
scas
pop
jae
in
inc
addr16
ret
lds
clc
add
sub
dec
and
sbb
cmc
jmp
inc
sar
ins
fadd
shl
aam
inc
sbb
imul
mov
jb
pop
and
hlt
popa
clc
mov
jge
pop
cmp
movs
dec
mov
xor
dec
lods
sub
xor
jmp
mov
and
cmp
mov
cmc
int
(bad)
(bad)
jae
les
push
push
stc
outs
push
push
daa
(bad)
ss
scas
push
jae
or
lahf
scas
xor
outs
pop
jnp
inc
or
or
add
fucomp
mov
pop
fcom
retf
es
cli
mul
and
mov
(bad)
cli
push
add
sbb
aas
test
shl
test
out
pop
xchg
push
cmp
xor
jecxz
test
mov
and
repz
fidiv
int
test
lods
sbb
inc
repz
or
add
lock
repz
inc
mov
cs
sbb
fwait
xlat
jg
pop
jecxz
push
popf
xor
mov
fwait
je
pop
cmp
ret
movs
les
pop
pop
push
pushf
shld
cs
stc
je
push
push
sti
movs
call
out
dec
xor
cmp
std
mov
push
xchg
dec
aas
loop
dec
dec
mov
and
lea
fnstenv
loope
jb
in
adc
loope
shl
jecxz
sub
loope
out
inc
out
out
inc
cmps
repz
adc
mov
sbb
dec
out
cdq
jae
popf
and
inc
mov
jp
xchg
leave
pop
(bad)
shr
lock
int3
rcl
fs
dec
push
jle
div
pop
loope
xor
xor
mov
mov
xor
and
xor
pop
(bad)
(bad)
cmc
push
push
xor
aam
dec
rcr
fcmovb
mov
push
and
sar
clc
sub
scas
mov
cmp
dec
xchg
and
mov
test
shl
jns
push
xor
cld
cdq
test
out
mov
popa
or
or
inc
push
xor
jae
aaa
dec
pop
cmp
in
cmp
jne
and
pop
loope
dec
pop
test
ins
xchg
inc
fdiv
sbb
movs
or
(bad)
rol
xchg
xchg
pop
data16
mov
or
stos
sub
retf
inc
dec
cmps
jmp
jecxz
aad
or
aaa
out
neg
addr16
scas
push
fidiv
ins
repnz
int3
adc
cdq
scas
mov
push
xchg
mov
pop
mov
mov
movs
fld
mov
movs
dec
sar
aas
ja
cmp
cmp
pop
push
fnstenv
lods
mov
retf
jge
sar
or
mov
mov
into
leave
stos
enter
xchg
add
mov
icebp
jnp
enter
mov
dec
stc
mov
test
mov
pop
in
mov
stos
hlt
mov
inc
pop
int3
gs
sub
nop
lea
sub
pop
xchg
fwait
stos
fild
loopne
and
cmc
leave
out
(bad)
and
cmp
out
aad
mov
cld
add
mov
xor
(bad)
(bad)
jmp
sub
push
mov
ins
(bad)
dec
cmps
mov
std
push
out
mov
jp
div
bound
lock
mov
lock
sti
xor
sub
fild
scas
mov
add
cli
pop
mov
and
inc
jmp
std
sub
lods
xchg
dec
jl
popf
lods
(bad)
hlt
inc
mov
push
jne
loopne
add
retf
pushf
cmp
into
pop
test
outs
mov
fbstp
or
call
dec
cmp
ins
shl
daa
retf
loope
mov
fld
inc
lea
iret
push
cmp
sbb
sub
popa
jmp
rcl
jmp
xor
xcrypt-cbc
cmps
push
push
cld
fcomp
ins
cmp
pop
fmul
dec
daa
adc
popa
stc
movs
clc
mov
(bad)
mov
rcr
test
outs
outs
mov
ss
jne
hlt
sub
mov
popa
xor
pop
std
out
mov
dec
mov
jp
mov
daa
mov
pop
test
sub
aaa
jnp
mov
mov
test
mov
outs
repnz
fucomp
or
test
sahf
and
fsubr
push
xor
ins
sbb
(bad)
cli
push
pop
in
xor
cmps
mov
xor
add
nop
inc
mov
dec
adc
loop
rcl
sub
pop
popf
pop
sub
mov
enter
cmp
cld
pop
lock
jbe
mov
xlat
jl
adc
cmp
cdq
mov
xchg
fdiv
nop
aam
pop
out
fldcw
idiv
sub
push
test
jbe
test
sbb
xchg
idiv
xchg
retf
dec
ins
sub
jnp
stos
and
mov
out
es
imul
cmps
dec
call
popa
add
cwde
xchg
mov
pop
cmp
fstp
pop
push
fist
xor
int3
enter
pop
iret
loop
add
imul
mov
dec
dec
test
xchg
outs
add
adc
or
test
in
ins
ins
adc
pop
mov
cwde
or
jae
icebp
cmps
repz
mov
cmp
mov
fmul
inc
popa
popf
mov
cmp
(bad)
mov
or
mov
and
or
jo
inc
jno
(bad)
clc
mov
sahf
and
mov
shl
int
sbb
lods
clc
push
fiadd
adc
das
gs
loop
(bad)
arpl
(bad)
cmp
mov
mov
mov
movs
jmp
inc
cs
je
inc
test
pop
scas
in
mov
aas
mov
shr
stos
outs
jmp
inc
mov
xor
adc
addr16
cld
push
mov
outs
xlat
mov
lea
out
push
jno
scas
loope
add
call
push
mov
mov
mov
das
mov
es
mov
nop
aaa
push
cmp
jb
ins
mov
or
mov
out
cmps
scas
or
mov
sub
rol
push
neg
xor
jne
in
(bad)
fidiv
call
jecxz
inc
jecxz
push
jg
data16
push
xor
fsubr
lds
cmps
daa
jne
dec
mov
add
push
mov
pop
jo
pop
es
lods
cdq
jge
add
xchg
and
adc
push
and
or
and
mov
adc
sub
loope
outs
jmp
fwait
or
mov
mov
inc
fsubr
movnti
rcr
aaa
in
out
mov
lea
pop
jmp
js
(bad)
mov
xchg
mov
sub
jmp
sbb
push
mov
fsubr
adc
push
jne
loope
push
popa
neg
add
(bad)
push
iret
lds
movs
jno
js
push
jae
push
xor
inc
sbb
xor
dec
rol
sub
aad
and
push
sub
shl
cdq
mov
push
fiadd
lahf
sub
in
movs
sar
sub
adc
push
push
ficom
xor
mov
push
cli
push
adc
mov
mov
xchg
pop
mov
sbb
mov
fsubr
cmp
dec
sbb
cdq
lahf
cmp
pop
xor
sbb
test
push
cmp
js
and
adc
(bad)
lock
and
mov
mov
inc
push
dec
test
push
xchg
imul
out
mov
nop
xchg
and
xor
pop
mov
sti
cmp
(bad)
pop
mov
jg
sub
adc
cmps
into
adc
mov
or
push
stos
fnstsw
mov
lea
add
cmp
sbb
(bad)
jo
shr
aas
gs
mov
addr16
sub
scas
int
stos
cmp
ret
inc
jecxz
xor
arpl
shr
(bad)
jl
xor
retf
and
test
sbb
or
jmp
xchg
sub
mov
mov
fcomp
adc
jmp
inc
js
add
add
retf
scas
xchg
cmp
fadd
or
sbb
sub
out
sahf
add
repz
adc
test
pop
pop
xor
aad
sbb
das
xor
or
jne
icebp
jnp
inc
imul
retf
inc
and
(bad)
jo
pop
mov
call
ins
xlat
arpl
bts
xchg
xor
pop
xor
sbb
out
xchg
adc
sahf
xchg
sahf
movs
inc
cmps
test
sub
cmp
jnp
mov
mov
aas
xlat
jmp
daa
stc
mov
dec
std
adc
or
mov
loope
adc
dec
or
leave
sub
mov
add
shr
fcomp
lea
aad
mov
and
jmp
sti
sub
mov
test
jge
cwde
scas
je
mov
push
add
push
bound
inc
loopne
ret
jb
add
aas
enter
aam
xlat
pop
mov
or
xor
(bad)
pop
aaa
or
or
iret
call
jg
mov
inc
or
fisttp
push
jae
add
xor
test
shl
add
and
jb
test
inc
ret
and
xchg
loopne
mov
call
pop
fcomp
leave
mov
cli
bound
loop
sti
fwait
imul
pop
inc
mov
outs
xor
sub
retf
push
mov
fucom
xor
fnstsw
(bad)
xor
xchg
imul
call
pop
dec
ret
mov
int
push
fidivr
dec
cs
jge
pshufw
sub
mov
or
fstp
fwait
jge
aaa
push
dec
fmul
inc
scas
push
enter
(bad)
mov
jg
xchg
mov
aam
mov
mov
fnstsw
stc
mov
icebp
mov
pop
or
mov
or
mov
ror
jp
ss
fisubr
hlt
or
pop
arpl
push
aaa
push
push
fmul
lahf
fwait
cdq
and
xchg
aam
pop
or
adc
cmp
pop
das
dec
push
push
add
dec
or
jae
dec
dec
pop
jge
xor
and
jnp
mov
out
ficomp
outs
mov
(bad)
in
mul
pop
iret
mov
pop
enter
repz
cmc
test
out
fs
push
sbb
jp
(bad)
bound
or
dec
mov
add
jecxz
movs
rcr
nop
(bad)
out
int
pop
mov
int3
ins
and
stos
push
call
leave
push
jae
aam
lock
shl
and
sub
das
sbb
jg
xchg
inc
inc
mov
shr
(bad)
shl
movs
jns
pop
dec
stos
xor
das
imul
xlat
ret
fisttp
mov
mov
jbe
enter
xchg
call
(bad)
iret
xchg
nop
mov
add
pop
mov
out
leave
fsubr
test
bound
hlt
sar
xchg
arpl
lea
inc
add
loopne
test
loop
fnstcw
test
int3
adc
adc
xchg
jns
lahf
add
xor
shl
aad
mov
test
mov
cmp
push
and
ret
pop
ins
adc
add
outs
idiv
js
pop
mov
sub
jle
popf
jge
xchg
test
push
out
pop
push
jg
mov
xchg
or
popf
pop
cld
lahf
clc
jmp
call
in
and
xchg
adc
imul
mov
jo
dec
cwde
mov
sub
mov
stos
repz
dec
cmp
add
inc
sub
adc
xchg
(bad)
add
leave
pop
ret
stc
sbb
adc
pop
mov
push
scas
jno
lods
ss
adc
fwait
dec
ins
fld
mov
dec
outs
and
fnstsw
push
inc
repnz
clc
stos
daa
adc
xor
int
sub
jge
adc
repz
mov
jno
push
inc
xchg
movs
and
mov
inc
jns
mov
ja
cmp
imul
test
mov
pmulhw
and
adc
or
fidivr
gs
xchg
or
sbb
scas
cmp
xlat
sbb
repz
bnd
sbb
jle
xor
dec
outs
into
dec
jmp
mov
and
retf
adc
jnp
stc
test
or
dec
xchg
sahf
test
popa
jb
xor
stc
jg
xchg
cmp
jbe
loop
(bad)
fistp
enter
mov
not
cmp
lods
pop
xchg
sub
pop
sbb
jno
scas
ins
loope
mov
mov
jnp
sahf
jne
outs
xlat
ret
cmp
or
push
inc
shr
sub
mov
aad
rcl
mov
mov
mov
inc
imul
fs
les
cmp
mov
jno
and
push
(bad)
aam
ret
push
inc
ins
xchg
mov
lods
adc
push
mov
inc
das
mov
ror
call
mov
imul
dec
std
xchg
add
popa
pop
mov
pop
cld
mov
fstp
xchg
xor
pop
xor
in
iret
pop
inc
xchg
cmp
idiv
push
mov
call
in
mov
jnp
xor
(bad)
dec
outs
lea
retf
daa
mov
add
cmp
xor
add
sub
add
jbe
mul
push
in
xor
repz
sbb
dec
mov
je
pop
sbb
aam
xor
push
popf
hlt
dec
mov
mov
adc
repz
push
push
dec
dec
(bad)
sbb
cli
fs
xchg
and
inc
iret
push
int3
adc
std
jge
cmp
aam
jmp
ins
(bad)
xchg
cs
in
stc
popa
retf
cmc
add
sahf
(bad)
mov
push
cmp
(bad)
sbb
and
mov
push
sub
sti
dec
or
dec
xor
mov
xchg
ds
in
and
xor
or
scas
test
test
out
jns
sub
pop
data16
and
imul
shl
mov
adc
mov
lea
mov
js
mov
and
mov
adc
mov
and
sub
in
and
pusha
out
mul
retf
add
int3
pusha
pop
and
call
fbld
lods
and
xor
and
inc
jns
(bad)
mov
out
mov
push
ror
rcr
sbb
jne
imul
push
outs
mov
add
loope
push
dec
test
xlat
adc
push
sub
and
pop
popa
popa
mov
mov
add
imul
pop
scas
nop
fst
dec
mov
hlt
scas
jp
addr16
icebp
cmp
and
xlat
jecxz
inc
dec
setne
add
push
aad
repnz
push
sub
sub
cmp
ja
pop
adc
xor
int3
mov
stc
mov
lods
or
mov
popf
mov
test
leave
sub
ficom
mov
adc
(bad)
add
jmp
xchg
dec
ss
and
lods
ret
push
jb
sbb
mov
daa
xor
mov
xor
data16
adc
xor
xchg
add
push
out
(bad)
adc
dec
push
cmps
mov
pop
loopne
ret
pop
mov
mov
jmp
push
sbb
jne
push
into
pushf
and
js
push
dec
push
pop
adc
jp
repnz
aam
and
gs
mov
das
and
aaa
scas
inc
popa
jg
push
add
dec
fwait
jg
imul
cmp
sub
cmp
gs
push
jb
cmp
fld
in
out
push
and
inc
movs
and
das
sub
scas
rcr
lods
in
jp
adc
mov
enter
arpl
mov
sub
cmp
adc
dec
repz
inc
adc
or
pop
inc
adc
add
sub
push
rcr
jl
mov
gs
gs
cmps
fistp
cs
fisttp
mov
fidivr
in
hlt
cmp
and
sbb
and
in
scas
xor
stos
inc
les
sub
fnsave
push
dec
dec
sar
out
sbb
lods
clc
imul
sbb
rcl
inc
inc
fbld
daa
xchg
jno
arpl
cmps
sti
xor
sbb
xchg
iret
inc
xchg
sahf
push
push
mov
adc
jmp
push
stos
hlt
(bad)
adc
pop
sub
dec
xor
mov
rol
aad
mov
idiv
lahf
(bad)
jae
or
xchg
pop
push
pop
nop
es
pusha
xchg
retf
nop
ss
inc
add
push
loope
mov
arpl
cs
and
popf
xchg
push
in
dec
jnp
aad
xchg
aad
dec
and
dec
mov
cmp
xchg
lds
daa
xchg
stos
and
dec
cmp
dec
inc
add
pop
retf
ja
lods
cs
mov
push
cmp
jno
(bad)
iret
or
(bad)
mov
or
test
daa
fs
sbb
sbb
jmp
ss
mov
int
xor
sub
popf
sbb
je
dec
push
push
fdivr
jge
mov
div
inc
xchg
sub
xchg
dec
scas
push
or
(bad)
lock
cmp
ret
adc
pop
xchg
cs
imul
sbb
ret
cmp
shl
push
jmp
jo
cdq
or
rcl
adc
mov
pop
jle
adc
data16
cmp
sub
xchg
or
sbb
call
dec
adc
xor
jmp
retf
mov
mov
mov
mov
mov
(bad)
(bad)
aas
dec
fs
pop
ret
and
pop
add
adc
repz
mov
inc
stc
jmp
cmp
add
icebp
fisttp
and
jl
mov
dec
xchg
add
aam
shl
mov
xor
mov
jmp
shr
inc
ficomp
adc
fcmovb
daa
mov
xor
xor
iret
pop
or
test
add
xlat
mov
jl
fdivrp
idiv
jmp
jg
(bad)
stos
movs
out
dec
mov
ret
push
setns
mov
jecxz
mov
push
adc
mov
aaa
adc
aad
sahf
lods
pop
and
pop
cmps
jge
call
push
jno
dec
xchg
setne
add
sub
mov
bound
fistp
or
push
ins
(bad)
mov
push
cmc
(bad)
cmp
sbb
add
jl
sbb
fisub
dec
in
cmc
jl
pop
cmp
jp
jge
fs
xchg
pusha
and
ret
call
(bad)
sub
ret
test
and
movs
jno
std
sub
dec
inc
push
rcr
jmp
in
mov
sahf
(bad)
and
or
dec
scas
mov
adc
xchg
xor
cmp
idiv
mov
dec
inc
or
or
add
test
mov
mov
sub
sbb
mov
scas
add
mov
sbb
add
adc
shl
mov
jne
inc
adc
sbb
and
xchg
add
je
sbb
jp
std
add
(bad)
mov
icebp
sub
mov
fidivr
jb
sub
cdq
mov
bound
xchg
popaw
adc
jbe
inc
xchg
push
pusha
dec
in
adc
jne
cmps
shl
aaa
cmp
sbb
out
pop
push
jnp
outs
sbb
push
xchg
jns
add
lahf
and
adc
retf
mov
imul
sbb
mov
and
movs
add
mov
dec
push
sbb
stos
jge
shl
inc
fisubr
mov
popf
inc
jecxz
cmps
pusha
mov
inc
cmp
adc
loope
call
push
js
popa
dec
lods
mov
test
aaa
sub
adc
pop
and
leave
mov
mov
inc
and
retf
xor
mov
sbb
mov
jmp
scas
in
retf
and
push
sbb
xchg
mov
cmp
jo
popa
stos
push
test
movs
mov
xor
ret
adc
sbb
mul
cli
push
imul
aad
or
and
ins
test
and
lods
int3
lock
dec
imul
or
retf
cmc
inc
fdiv
dec
and
shl
adc
or
ror
ror
jle
iret
mov
test
popf
das
cmps
cli
mov
adc
push
cmp
iret
xchg
push
out
je
popf
jmp
or
push
dec
pop
and
int
adc
sub
enter
(bad)
and
push
out
sahf
aas
pop
jg
dec
adc
sub
es
aas
inc
or
jno
fmul
in
pop
mov
jmp
data16
into
and
(bad)
das
or
retf
int3
dec
push
pusha
jns
or
push
sub
xor
adc
pop
or
jp
xor
in
movs
mov
test
ret
shr
mov
fisttp
xor
ins
imul
not
daa
sbb
repz
call
stc
sbb
push
pop
jmpw
(bad)
mov
sbb
xor
cdq
cmp
movs
jne
test
mov
and
and
pop
or
repz
cld
enter
fcom
into
dec
out
mov
in
mov
and
leave
(bad)
mov
loope
lock
mov
jnp
push
cmp
jg
inc
push
pop
dec
jne
sbb
jne
jmp
dec
jp
add
xor
adc
aaa
push
cwde
int
adc
dec
xchg
fisub
add
pop
(bad)
cld
cli
jb
sbb
jmp
stos
in
sar
shl
inc
aas
out
mov
out
adc
mov
mov
shr
adc
lea
bound
popf
mov
int
or
xor
adc
sbb
out
idiv
ss
(bad)
aas
jle
out
(bad)
ins
stc
(bad)
jo
cmp
jnp
dec
call
dec
add
add
out
stos
mov
push
dec
call
push
in
test
jecxz
jge
into
fist
push
jo
lds
sbb
cmp
jno
sub
jecxz
shl
pop
cmp
test
push
cmp
mov
int
lods
sub
pop
mov
inc
xor
leave
pop
sub
mov
inc
xchg
test
popf
mov
xchg
mov
inc
in
push
sub
and
shr
popf
pusha
daa
pusha
scas
ret
in
pop
jp
fucomi
jmp
push
dec
shr
pushf
ds
dec
mov
xor
in
mov
std
mov
cmc
add
jno
hlt
fild
lds
fnstenv
mov
pop
addr16
dec
data16
cmps
or
shl
jecxz
add
mov
xor
and
aad
test
push
loop
inc
add
loop
add
xchg
sub
stos
inc
cmp
mov
ret
inc
mov
daa
push
adc
iret
dec
cs
cmp
ror
leave
pop
inc
jne
sub
das
out
mov
les
ins
sub
into
fistp
jno
(bad)
mov
in
sbb
adc
scas
fcomp
ins
or
(bad)
stos
cmp
mov
sub
adc
or
mov
sub
call
fs
bnd
cli
xor
push
xor
xor
sub
mov
xchg
mov
retf
dec
sub
fucomp
lahf
test
es
mov
xor
pop
jg
cmp
aam
xchg
pusha
jb
js
(bad)
in
(bad)
push
mov
xchg
mov
repnz
aas
xchg
lods
jo
xchg
pop
cmp
aas
in
or
jmp
daa
pop
cwde
sub
and
cmp
push
add
dec
sbb
cmps
inc
xor
cmps
adc
fwait
xlat
bound
and
and
inc
add
adc
add
(bad)
cld
outs
mov
fwait
or
xor
mov
leave
rcl
fs
test
sbb
dec
inc
cmp
mov
pop
mov
cs
mov
push
icebp
fild
adc
xor
aad
and
and
mov
sbb
outs
mov
mov
mov
loop
stos
test
aaa
mov
out
in
sbb
adc
add
leave
xchg
es
ins
jo
loope
nop
jnp
aaa
lea
mov
xchg
ss
inc
and
stc
xchg
inc
stos
mov
movs
fcmovb
stos
or
add
lds
push
and
add
or
jle
iret
pop
loope
shr
ja
pop
xchg
jb
lea
sub
mul
lds
sub
push
pop
push
push
inc
inc
nop
mov
mov
out
mov
sahf
addr16
push
sbb
mov
arpl
jb
cmp
jae
imul
xchg
xor
rcr
iret
mov
adc
dec
int
sub
icebp
aam
mov
cmp
lods
iret
xchg
pop
nop
psubw
mov
retf
cmps
aas
and
js
mov
cld
shl
fst
test
and
loop
les
push
pop
mov
pop
aas
fstp
shl
(bad)
aam
inc
add
shl
jo
gs
adc
cs
stos
or
or
cwde
xor
stc
lea
cmp
inc
push
lods
out
and
jo
mov
mov
jne
mov
outs
aas
sub
in
adc
les
jmp
(bad)
adc
loope
adc
scas
xor
add
and
xor
and
lea
ins
pop
adc
fimul
aas
cmp
aaa
cmps
test
ret
scas
popf
pop
jnp
shl
(bad)
aad
imul
hlt
mov
push
lock
push
not
mov
retf
sbb
fstp
imul
pop
call
or
add
das
mov
mov
int
cmps
jge
mov
mov
mov
jns
push
and
(bad)
mov
pop
cli
jae
repz
sbb
ret
not
mov
xchg
cld
xchg
cld
outs
cmp
arpl
ror
mov
(bad)
or
ins
or
xor
lock
mov
loopne
imul
jl
(bad)
mov
sbb
adc
push
jae
mov
in
sub
test
pop
push
and
neg
scas
add
cmp
out
movs
adc
cmc
inc
sub
push
cmps
and
nop
pop
add
xchg
inc
out
push
and
bound
pop
or
shl
fstp
popf
pop
lods
je
jg
inc
cmps
stos
popa
cld
mov
dec
imul
cmps
out
cmps
sbb
jno
pop
fstp
xor
inc
mov
out
xor
adc
daa
int3
(bad)
mov
sub
pop
sahf
cmp
cmp
xor
push
mov
cmps
repz
add
lds
fwait
int
not
cmp
xor
test
ss
xchg
push
push
push
ds
(bad)
les
inc
bswap
ror
in
add
or
aaa
pop
rcr
lods
mov
jmp
lea
gs
sbb
xchg
test
or
xor
inc
inc
arpl
push
xor
pop
test
into
sar
inc
pop
pop
ss
data16
push
mov
ret
xor
cmp
movs
pusha
cs
imul
imul
js
enter
cld
test
pop
add
jp
repz
xor
add
rcr
adc
popf
xlat
pop
pusha
xchg
xchg
retf
ret
jge
xchg
inc
or
and
in
push
in
add
loopne
lahf
cs
ss
cmp
jmp
stos
stc
jmp
dec
mov
and
idiv
adc
adc
inc
pusha
jns
pop
rep
imul
dec
and
in
push
ds
xor
push
stc
or
cmc
out
mov
push
jne
mov
stos
out
loop
mov
jae
cmp
xchg
rol
stc
mov
inc
and
jp
sbb
lods
xchg
mov
dec
xor
call
push
adc
dec
and
xlat
lock
nop
loopne
jecxz
push
and
cmp
cmp
sbb
pop
stos
stos
cmp
out
mov
mov
xchg
lea
leave
lahf
aaa
ficom
push
arpl
stos
out
mov
movs
out
fst
mov
and
mov
ss
jb
cmp
loopne
pop
in
and
push
ror
repz
pop
ja
fmul
setno
aaa
in
loop
sub
push
push
in
xor
ja
scas
inc
or
push
mov
xlat
and
outs
or
sbb
int3
dec
xchg
int3
es
pusha
or
test
dec
sub
mov
sub
inc
in
addr16
add
add
adc
lock
mov
mov
pop
mov
xor
push
fs
cs
jle
into
iret
scas
movs
or
or
imul
or
cmp
mov
cmps
mov
dec
cli
mov
mov
push
(bad)
iret
cdq
mov
(bad)
outs
cmp
pop
sbb
push
add
xchg
or
sub
les
les
mov
data16
cdq
cmp
pop
ja
and
jg
test
jmp
xor
(bad)
add
xor
(bad)
mov
gs
cmp
sub
push
pop
or
cs
mov
xchg
mov
ret
cmps
dec
inc
vprotw
jp
test
int3
xchg
(bad)
call
stos
add
or
outs
mov
loop
sub
ins
sar
adc
sub
cmp
jo
or
sub
or
xchg
lods
jae
xor
aad
jecxz
enter
jg
sub
xchg
movs
jns
pop
imul
or
into
dec
xchg
jae
icebp
dec
jmp
cmp
pop
and
test
fdivr
jne
fwait
out
inc
scas
push
dec
xchg
push
out
xchg
fild
aaa
dec
nop
out
sbb
xor
addr16
popa
not
imul
jmp
jns
mov
gs
sub
push
pop
jecxz
push
push
cdq
add
jge
adc
jmp
scas
icebp
data16
scas
test
popa
mov
or
mov
arpl
inc
sbb
les
movs
add
mov
mov
inc
jmp
add
popf
stos
not
in
adc
stc
gs
(bad)
(bad)
sub
add
dec
dec
xor
outs
inc
lea
cwde
faddp
fisttp
jb
mov
push
sub
movs
xor
fld
std
fcom
add
hlt
aaa
loope
mov
xor
mov
push
mov
and
pusha
int
dec
mov
shr
daa
xchg
push
inc
adc
pop
cmps
fwait
sbb
mov
push
je
dec
test
push
popf
sub
push
xchg
mov
dec
cld
push
sahf
in
les
or
inc
fdiv
sbb
test
xchg
popa
mov
xor
or
into
push
es
xchg
jne
and
inc
rcr
pop
out
mov
sub
jle
repz
push
out
cmps
pop
push
jmp
sub
addr16
and
data16
outs
add
xchg
imul
hlt
xchg
shr
popf
rol
pop
push
pop
mov
dec
add
jmp
dec
loopne
xor
adc
sub
adc
mov
(bad)
push
cmp
retf
xor
jg
inc
xchg
ds
cdq
pushf
push
sub
cdq
xor
lock
sbb
jmp
or
sub
shr
gs
das
and
push
mov
ins
mov
scas
sbb
xchg
test
mov
mov
add
(bad)
fwait
sub
daa
push
push
add
pop
sti
minps
push
xor
jecxz
shl
(bad)
popa
add
adc
cmp
fisubr
sub
xlat
xchg
cmps
lock
test
jae
xchg
xchg
repnz
daa
(bad)
push
push
je
jne
std
dec
call
(bad)
sti
outs
jmp
call
mov
fistp
(bad)
mov
xchg
cmp
retf
cmp
dec
arpl
les
test
pop
sbb
push
fcomp
ret
fild
daa
ins
jns
sub
int3
(bad)
loop
inc
sti
int
xor
cmc
icebp
xor
out
sbb
movs
into
and
jp
cmps
ret
(bad)
bound
fnstenv
mov
pop
push
xlat
repnz
lock
jno
sub
pop
imul
cmps
ins
cmp
jnp
sub
lahf
pop
outs
je
or
arpl
lods
mov
test
dec
outs
imul
jb
retf
mov
dec
jnp
fcomp
push
aaa
(bad)
xor
pop
add
outs
out
lds
movs
mov
adc
sbb
mov
sbb
stos
or
jg
call
add
inc
hlt
pop
out
bnd
mov
dec
test
test
in
fdiv
fidiv
sub
mov
cmp
mov
sti
fwait
inc
scas
sbb
nop
int
and
push
adc
mov
mov
xchg
(bad)
arpl
jne
stc
and
add
add
xor
sbb
pusha
mov
dec
ja
cmovs
test
stos
pusha
lea
stos
jo
dec
sub
inc
data16
mov
xor
adc
adc
retf
fst
jne
out
sbb
adc
mov
imul
shr
ror
and
sbb
aas
fiadd
add
inc
ja
hlt
jb
jmp
push
cmp
movs
iret
lds
jg
stos
pop
pop
xor
jnp
xor
xchg
dec
pop
je
test
xchg
arpl
ins
inc
test
or
aam
fs
xchg
clc
into
jmp
mov
or
hlt
cs
arpl
imul
ret
sub
fwait
mov
cmps
js
xor
add
ror
jne
xor
dec
or
es
inc
push
or
fbstp
xchg
cmp
jb
pushf
pop
push
dec
mov
int3
call
mov
in
jmp
push
jae
cmp
mov
idiv
add
pop
pop
repnz
dec
popf
loop
and
icebp
or
fs
retf
add
cmps
inc
movs
ja
ins
inc
scas
popf
dec
leave
mov
cmp
cdq
cmp
outs
in
dec
(bad)
or
mov
mov
inc
push
clc
(bad)
aaa
pop
in
mov
xchg
inc
fstp
jnp
mov
mov
test
lahf
sbb
je
fiadd
jns
movs
int3
xor
test
cmp
bound
mov
not
add
cmp
out
push
and
out
lods
and
push
neg
sbb
or
outs
dec
lock
jmp
and
mov
aaa
push
inc
xchg
js
shr
imul
or
(bad)
push
sub
sbb
cld
in
push
clc
movs
push
fcmove
mov
movs
(bad)
sti
scas
add
adc
in
cmpps
lea
push
adc
and
sbb
sub
push
xchg
push
inc
or
shl
xor
dec
mov
mov
popa
sub
and
mov
mov
into
sbb
or
sub
jb
jnp
lods
ins
stos
pop
(bad)
(bad)
sbb
ds
nop
sti
test
jmp
inc
mov
lock
popf
fcomp
cli
call
jno
call
repz
test
jp
test
data16
clc
in
add
and
fsubr
sti
fldenv
js
dec
test
cmp
aam
push
stos
stos
nop
push
das
enter
push
lods
xchg
shl
in
jbe
popf
jno
data16
clc
lock
pop
dec
mov
ins
or
loopne
mov
xchg
(bad)
daa
adc
pushf
outs
sub
add
jbe
mov
in
shr
mov
out
xor
aam
fcom
mov
test
dec
call
sub
sbb
mov
dec
mov
mov
pop
jae
aas
gs
xor
adc
jmp
cmp
fimul
mov
push
rcl
push
sub
pop
sar
(bad)
adc
mov
jmp
mov
inc
sub
sub
cli
outs
jge
jle
add
arpl
adc
repnz
scas
mul
sbb
outs
std
retf
mov
repz
mov
inc
stos
popf
xor
pop
cli
into
aam
outs
add
arpl
sbb
inc
sbb
jl
jno
xor
sbb
pop
adc
cmps
aas
sub
sti
out
nop
cmp
out
pop
push
xor
mov
and
fcmovnu
xchg
cld
push
push
sub
or
adc
mov
xchg
lods
test
cld
retf
scas
(bad)
ds
push
or
mov
shr
sti
mov
sbb
popf
mov
mov
dec
mov
inc
aad
shr
jbe
inc
push
xchg
jg
pop
rcr
stos
push
sub
xchg
xor
pusha
lahf
test
clc
inc
into
adc
jl
(bad)
repz
mov
pop
in
jp
mov
loopne
mov
add
push
popa
xchg
adc
call
inc
(bad)
loope
adc
mov
sbb
es
out
fsub
mov
push
les
sbb
pop
push
shl
mov
cmp
inc
inc
mov
pop
in
mov
imul
fmul
jnp
adc
jno
pop
inc
or
inc
fs
jne
aas
lods
jbe
cmp
clc
stc
mov
jecxz
pop
adc
test
mov
lods
add
xchg
test
inc
(bad)
addr16
bound
push
cmps
jmp
test
pop
aad
sbb
pop
lock
ins
out
les
int3
xlat
mov
xor
and
loop
stc
or
mov
jmp
popa
mov
mov
jmp
mov
pop
mov
or
mov
int
or
lock
bound
nop
inc
push
adc
mov
or
jno
test
and
test
hlt
ins
(bad)
inc
cmp
hlt
pop
push
out
push
add
and
sahf
mov
mov
xchg
stos
mov
xchg
adc
fild
pop
pop
xor
dec
daa
or
adc
pop
push
jmp
daa
pop
clc
lahf
dec
mov
push
jbe
movs
(bad)
pop
outs
cli
and
jno
mov
data16
addr16
in
mov
or
sub
mov
std
or
mov
jle
js
sti
rcl
mov
pop
jge
and
add
sub
dec
push
sbb
lods
xlat
jno
aas
je
dec
sbb
sbb
out
add
push
pop
xchg
stc
mov
cs
jbe
mov
jb
lock
in
mov
(bad)
xor
(bad)
hlt
sbb
retf
ror
jne
xchg
and
lods
and
or
mov
jecxz
sbb
push
xor
das
pop
and
(bad)
push
cmc
ins
pop
jmp
mov
xchg
mov
push
mov
aas
and
call
les
sbb
mov
js
push
jo
cmp
sub
js
sub
iret
cmps
jnp
adc
push
les
cmp
in
das
jg
adc
xchg
mov
jnp
cmp
jp
mov
mov
ds
test
add
movs
pop
sbb
push
sbb
popf
lahf
cmps
leave
mov
movs
dec
mov
jl
mov
jmp
inc
jmp
aas
push
inc
push
or
mov
jns
xor
sti
push
or
int
jae
fadd
sbb
adc
adc
cmp
data16
inc
mov
lods
fucom
sub
lea
enterw
cmp
cdq
xchg
psubusb
pusha
fcom
sti
enter
aad
sti
mov
scas
sub
xor
adc
in
arpl
arpl
test
and
clc
movs
jno
out
fmul
lods
mov
dec
xchg
test
adc
bound
mov
mov
das
push
push
dec
mul
xchg
xor
jl
or
imul
sub
jge
pop
or
xchg
cmp
cmp
cmps
jmp
test
push
cli
outs
mov
mov
jbe
and
scas
adc
dec
xchg
mov
mov
inc
test
push
sar
lea
or
pop
pop
movs
mov
fstp
dec
inc
mov
retf
or
fimul
or
mov
sub
enter
lahf
nop
aam
stc
pop
xchg
mov
nop
call
sub
pushf
dec
pop
test
sub
nop
jb
cld
out
add
lahf
mov
jle
add
lahf
retf
add
loop
xlat
and
xchg
pop
int3
clc
jns
cld
in
mov
and
inc
mov
mov
mov
cld
lahf
rcr
(bad)
in
jbe
repnz
popf
or
mov
arpl
ret
lds
mov
and
jecxz
shl
adc
pop
mov
xor
jno
into
mov
mov
jbe
scas
pop
js
aas
dec
adc
mov
push
bound
jb
in
outs
mov
push
pop
and
movs
adc
cmp
or
jecxz
pop
int
xchg
mov
push
mov
jo
lea
dec
and
lods
retf
cmp
inc
js
sbb
imul
popf
(bad)
lds
jecxz
jo
add
sbb
xor
pop
cmc
mov
clc
jne
ficom
xchg
shl
fs
fwait
mov
mov
imul
mov
lahf
or
pop
and
hlt
popa
push
aaa
cs
adc
leave
jb
cmp
fisubr
mov
push
jl
aam
test
sbb
(bad)
cmps
fild
inc
sub
push
ins
inc
sub
jo
cmps
aas
stc
ss
cli
jae
mov
jge
and
test
mov
jbe
or
push
xor
fdiv
ret
pop
push
inc
and
cmp
lods
push
rol
fisub
xchg
sbb
push
mov
test
jp
pop
pop
jae
(bad)
jbe
movs
sbb
sbb
cmp
mov
mov
lahf
or
nop
xchg
xlat
add
mov
pop
ret
movs
sbb
jle
jo
aad
iret
cmp
ins
(bad)
(bad)
fisubr
mov
popa
in
call
test
scas
jg
mov
bound
(bad)
jb
inc
adc
enter
and
ret
es
fidiv
dec
cmps
gs
cmp
cmp
and
dec
mov
mov
mov
pop
mov
(bad)
mov
dec
jns
retf
(bad)
call
loop
cs
xchg
xchg
movs
sub
loopne
jne
sti
adc
jle
sahf
sbb
add
jmp
and
mov
push
inc
in
clc
aaa
push
call
mov
cwde
out
(bad)
dec
call
popf
loop
mov
mov
pop
pop
mov
and
ret
dec
call
and
daa
mov
pop
push
popf
into
movs
in
test
xor
xor
(bad)
in
jmp
add
iret
sub
leave
mul
movs
pusha
sub
xor
jge
daa
fsubr
mov
fld
fld
push
ret
outs
gs
ss
jmp
fisubr
xor
and
retf
cld
mov
test
cmps
mov
mov
cmp
gs
or
xchg
xor
xor
mov
adc
mov
out
mov
and
push
cmps
and
ins
lds
outs
pop
and
mov
push
and
lods
mov
jbe
and
div
mov
cmp
jecxz
ds
xlat
lea
rcl
pop
xchg
cli
loop
or
add
ja
into
xchg
fwait
aas
lds
xchg
inc
adc
ins
adc
inc
jno
lock
add
xchg
pop
into
fs
mov
mov
scas
sub
adc
cmp
out
je
pop
(bad)
push
jns
adc
or
icebp
shr
cs
mov
dec
push
rol
cmp
adc
jmp
and
shl
pop
shl
pop
iret
and
push
imul
lods
push
sub
and
in
add
mov
in
mov
sbb
pop
test
mov
in
pop
ds
fbld
(bad)
mov
in
cmp
or
mov
addr16
pop
mov
mov
cmp
int3
mov
loop
inc
jo
xor
xor
adc
xor
clc
fistp
cdq
test
out
pop
jmp
mov
sbb
pusha
enter
mov
(bad)
in
mov
sar
cld
icebp
div
test
std
daa
push
add
add
mov
mov
int
adc
or
or
sahf
pusha
and
in
sub
push
lock
dec
xchg
cwde
leave
jno
mov
push
mov
mov
loopne
mov
loope
(bad)
das
dec
fiadd
hlt
js
pushf
mov
dec
icebp
push
push
pop
loop
or
out
test
cmc
dec
movs
fadd
ret
mov
jnp
lods
xchg
retf
(bad)
scas
adc
jnp
xchg
shr
mov
cld
cmp
ja
push
lock
imul
sbb
scas
sub
mov
push
push
dec
int
or
or
xor
xchg
jecxz
pop
and
xor
fnstcw
or
aaa
mov
fmul
jecxz
int
cli
repnz
sti
pop
div
mov
jne
xor
shl
sub
jg
repnz
mov
and
in
jnp
rol
pop
mov
rcl
cli
call
cmp
iret
dec
hlt
xchg
popa
mov
mov
xchg
lods
prefetch
or
pop
jo
enter
js
pop
or
js
call
repnz
push
daa
daa
xor
add
mov
enter
das
sub
(bad)
and
scas
loop
push
adc
sbb
adc
and
sbb
add
mov
mov
iret
jbe
ja
mov
nop
dec
and
scas
movs
mov
mov
and
mov
int3
(bad)
(bad)
push
xchg
aad
pop
sub
outs
sub
mov
shl
ja
or
xchg
or
mov
loopne
push
imul
retf
add
bound
add
cmp
sbb
sbb
sbb
xchg
(bad)
mov
repz
cmp
inc
jmp
cmps
xor
inc
test
jg
sub
mov
xchg
pop
shr
sahf
or
mov
pop
daa
and
cmp
cmp
(bad)
ror
jbe
imul
(bad)
cs
adc
and
cwde
js
pop
outs
mov
xor
int
sahf
xor
sti
or
and
pop
test
call
sbb
inc
jp
sub
and
mov
adc
aam
lock
add
sub
ins
es
sbb
add
cdq
fwait
push
mov
iret
cs
(bad)
popa
fwait
xchg
pop
fild
icebp
xor
inc
dec
sti
or
jl
jecxz
ja
xor
ffreep
add
les
ror
jecxz
inc
cmp
push
ficom
fwait
xor
aaa
aaa
je
sub
jp
mov
push
cmp
lock
addr16
pop
sub
out
push
outs
inc
int3
fs
bound
int
xor
or
mov
mov
(bad)
adc
xchg
inc
out
popf
or
je
add
mov
and
mov
pop
lds
add
mov
and
in
or
sti
pushf
add
loopne
xor
or
fs
jg
push
(bad)
sti
jae
dec
adc
add
scas
cmc
mov
mov
sbb
push
retf
loop
test
test
std
leave
adc
cmps
in
dec
jne
lods
cdq
jmp
sbb
mov
push
call
cld
icebp
int3
out
xor
adc
popa
pop
sub
loopne
push
mov
clc
stc
pop
xchg
pop
xchg
dec
mov
pop
pop
sbb
or
mov
std
call
push
retf
dec
test
sbb
sbb
test
add
rcr
add
and
cld
inc
sbb
adc
nop
pop
and
add
in
push
iret
push
cmp
clc
sub
sub
push
and
jno
jg
sub
sbb
jno
cdq
cmp
mov
cwde
xchg
push
outs
ja
daa
into
stos
cmp
push
sub
fiadd
pop
(bad)
adc
jbe
(bad)
and
das
call
push
mov
sbb
xor
and
xlat
int
call
ret
hlt
int
mul
push
cmp
dec
adc
inc
popa
pop
inc
les
test
add
push
and
rol
(bad)
popf
mov
xchg
dec
ins
gs
(bad)
retf
cwde
push
add
xor
ja
sahf
adc
fldlg2
push
add
mov
movs
movs
clc
cmp
clc
mov
pop
scas
retf
int
mov
or
jnp
repnz
xor
outs
jge
fldcw
test
nop
inc
ja
stos
fs
sub
test
jno
aam
sub
sub
es
xchg
dec
shl
repnz
gs
xor
int3
cwde
mov
retf
inc
jge
test
xor
and
pop
xchg
cmp
xchg
cs
pop
std
and
or
mov
mov
dec
hlt
mov
cli
movs
add
fcmovu
mov
call
jne
in
pop
sbb
cld
sbb
aam
arpl
push
dec
or
les
loop
js
in
xor
(bad)
daa
xor
fidivr
(bad)
jg
xchg
push
and
mov
lods
xchg
jo
jno
xchg
pop
aad
aas
outs
fldenv
push
pop
(bad)
(bad)
mov
dec
in
dec
es
test
(bad)
in
dec
loopne
sub
(bad)
outs
sbb
ret
mov
(bad)
dec
nop
push
mul
xchg
stc
fwait
xor
adc
push
or
test
sbb
nop
mov
enter
add
add
fiadd
adc
push
jae
xor
cmp
leave
push
dec
clc
cmp
or
shl
sub
or
fild
call
sbb
repz
popa
cmc
sbb
shr
xchg
jno
jae
xchg
shr
pop
es
stos
stos
inc
sub
(bad)
loop
push
dec
loop
adc
(bad)
and
stc
clc
cdq
aam
push
and
pop
fist
xor
mov
cmp
jnp
fadd
dec
pop
test
into
xchg
dec
jne
mov
mov
and
xchg
dec
jo
mov
in
adc
mov
leave
cmps
push
ja
sub
rcl
ss
aas
add
(bad)
nop
outs
int
or
xchg
jmp
repnz
jmp
test
push
and
xchg
mov
(bad)
sub
hlt
cli
fcomp
add
cmp
xchg
sbb
mov
xchg
call
ds
rcl
xchg
int3
mov
pop
(bad)
fbld
cli
into
test
adc
jmp
clc
mov
push
jnp
and
pop
fsubr
xlat
out
inc
stc
hlt
rcr
and
fstp
or
(bad)
inc
mov
into
popf
jg
scas
call
xchg
jle
sub
dec
jne
pop
cmp
les
rcr
mov
(bad)
addr16
sub
aad
cmc
xor
and
(bad)
jge
or
mov
mov
xchg
arpl
adc
not
popa
adc
leave
fst
sub
mov
fwait
xor
jmp
test
xchg
jbe
cmp
mov
mov
(bad)
sbb
ins
stc
mov
shl
push
push
and
repz
sub
hlt
loopne
xor
push
leave
ret
loope
outs
push
mov
xor
jmp
xchg
loop
or
js
nop
cmp
mov
cld
jne
cli
mov
leave
mov
dec
xlat
fsubr
call
test
or
aas
push
push
inc
(bad)
int
js
retf
js
push
mov
call
or
enter
xchg
cmp
fld
xor
retf
cmp
ror
iret
(bad)
cmp
repz
xchg
fimul
dec
sub
icebp
lock
enter
dec
mov
aam
stc
stos
dec
es
mov
call
jne
imul
inc
sahf
push
xor
add
imul
test
idiv
bound
pop
sbb
xor
add
xor
sbb
into
rcl
lods
stos
or
fcmovb
sahf
cmps
and
ja
xor
adc
daa
arpl
mov
xchg
cmp
pop
es
cmc
mov
pusha
pop
je
jbe
dec
add
dec
pop
push
jb
mov
push
cmp
lods
aad
inc
adc
push
les
popa
arpl
push
outs
add
dec
xchg
and
xchg
mov
jle
jl
cmp
out
sub
inc
in
adc
rol
and
ss
jnp
fld
mov
and
xchg
imul
hlt
dec
or
ja
shr
mov
push
mov
aad
push
js
adc
and
in
je
adc
out
stc
stos
(bad)
add
inc
ret
cmp
movs
sub
dec
inc
in
xchg
pop
rcl
fsub
xor
mov
add
je
dec
lahf
push
leave
int
push
mov
fld
push
cmps
call
ja
mov
xchg
popf
test
cwde
mov
mov
mov
cs
sar
rcl
sbb
fisub
in
pop
mov
xor
adc
inc
xchg
pop
mov
push
lock
fsubr
jo
and
in
fld
fs
mov
mov
xchg
(bad)
pop
fwait
pop
cmps
sti
or
pop
xchg
sub
sar
mov
(bad)
jae
adc
(bad)
and
mov
outs
fndisi(8087
ja
mov
jge
dec
xchg
mov
add
or
cmps
jg
sub
mov
mov
sti
(bad)
jbe
mov
sub
icebp
test
push
iret
ins
lods
mov
aad
sbb
pop
or
pop
cli
pop
pop
stos
lods
repnz
pop
pop
sub
sti
cmp
(bad)
mov
push
out
xor
dec
sbb
push
inc
sbb
cmps
outs
pop
out
and
mov
xchg
les
push
sbb
or
sbb
out
xor
push
(bad)
lock
fcmovbe
les
sub
std
sbb
mov
inc
dec
inc
or
aas
les
or
gs
xlat
js
call
(bad)
mov
cld
inc
test
outs
xor
es
pop
aaa
pop
mov
aaa
out
mov
aad
ret
sub
hlt
loope
cld
(bad)
sbb
cmp
sti
mov
push
inc
fsub
mov
es
jo
sbb
xchg
xchg
jnp
aam
add
jmp
jae
fisubr
xchg
je
and
mov
mov
mov
mov
cld
sbb
and
gs
(bad)
int3
ins
jns
mov
ja
add
mov
dec
mov
jo
shr
dec
mov
cmp
xor
ret
push
repz
cwde
out
or
ss
je
mov
imul
xchg
and
jbe
adc
push
cmp
ficom
lds
icebp
ret
push
lea
xchg
and
lods
lahf
push
fild
out
je
sbb
push
dec
ret
add
rol
test
jmp
repz
mov
(bad)
jo
or
adc
bound
inc
call
sbb
mov
mov
dec
sti
xlat
cmp
ret
cs
sbb
mov
loop
inc
add
imul
mov
scas
mov
inc
in
gs
leave
movs
xchg
test
dec
inc
jb
clc
jo
cmps
cwde
fst
cmp
aam
scas
pusha
add
inc
sti
mov
gs
(bad)
(bad)
into
jo
bound
mov
nop
or
shl
(bad)
stc
and
add
stos
pop
cmps
jb
aas
or
jo
cmp
dec
mov
fstp
xlat
add
or
fnsave
push
xor
mov
and
push
sub
cmp
mov
retf
cmp
xchg
push
ja
rol
mov
jp
push
dec
or
fsub
pop
pop
mov
push
repnz
dec
push
jmp
xchg
or
imul
push
inc
push
aaa
(bad)
ret
and
shl
and
dec
das
sbb
jp
cmp
adc
pop
(bad)
(bad)
jae
lea
sub
leave
xor
in
adc
into
movs
call
out
jle
loopne
ins
sti
push
or
xchg
sbb
jle
test
out
mov
and
push
xchg
(bad)
sub
fldz
adc
jne
mov
(bad)
pushf
sbb
mov
iret
aaa
(bad)
push
(bad)
hlt
push
ins
sub
mov
jl
div
clc
adc
movs
dec
pop
pop
into
popf
mov
add
mov
jmp
push
lock
in
jl
popf
xor
add
aaa
push
push
push
clc
sub
daa
mov
push
shl
shl
push
loopne
sbb
loop
(bad)
pop
xchg
icebp
cmc
and
(bad)
pop
pop
add
std
loopne
push
int3
sbb
mov
in
xchg
cmp
fild
push
arpl
nop
(bad)
(bad)
call
call
mov
or
mov
fwait
sub
cs
push
popf
or
xor
inc
in
add
or
and
push
fdivr
scas
jle
addr16
jnp
ror
cmps
add
push
xchg
xor
out
in
and
nop
(bad)
aam
and
pop
inc
jae
jmp
or
in
cmp
into
mov
dec
sbb
clc
adc
lods
aaa
pop
dec
pop
cld
push
jmp
inc
repz
jno
and
shl
(bad)
into
outs
loop
and
dec
mov
push
(bad)
int3
sti
push
ss
add
inc
push
adc
sub
pop
mov
jb
aam
iret
icebp
(bad)
mov
arpl
jg
xor
jge
dec
push
mov
aad
movs
push
xor
pop
xchg
iret
push
and
mov
ret
repnz
daa
in
inc
dec
cmp
xchg
mov
fsub
popf
xchg
lock
cmps
nop
rcl
leave
xchg
out
xchg
sub
mov
inc
lea
fnstenv
mov
push
in
push
xchg
repnz
xchg
(bad)
xchg
jno
neg
in
jg
push
out
inc
int3
movs
sbb
lods
ret
mov
(bad)
mov
hlt
and
add
repz
stos
sbb
adc
cmps
out
sub
jmp
ret
cmp
or
dec
ins
clc
inc
fld
mov
xchg
jnp
xchg
sub
dec
popf
sbb
icebp
jb
sub
or
fistp
aaa
inc
pushf
inc
dec
push
lahf
ds
add
pushf
gs
retf
push
sub
loope
fwait
das
pop
(bad)
ins
das
imul
jmp
lods
lock
sbb
or
shl
pop
rcl
neg
jg
xchg
inc
or
out
nop
mov
mov
jmp
out
dec
popf
outs
sbb
mov
aam
or
cmp
adc
into
fucom
sub
out
xchg
movs
mov
imul
sahf
arpl
pushf
push
repnz
pop
inc
xchg
or
and
loopne
(bad)
mov
sahf
sti
out
daa
pop
sbb
bound
cmp
push
inc
mov
call
addr16
sbb
repnz
and
xor
mov
repnz
je
xor
dec
mov
push
fmul
test
xchg
lea
dec
cmps
loope
cmp
jecxz
or
jmp
xchg
jmp
stos
push
loop
xor
ss
cmps
sbb
rol
push
in
test
sbb
jl
outs
jmp
mov
idiv
sbb
dec
or
or
push
stos
sub
add
movs
and
cmps
int3
xor
pop
sub
xchg
cmp
cmp
shr
sbb
cmp
outs
sub
test
idiv
pop
aam
pop
mov
xor
sbb
fnstenv
(bad)
jne
jecxz
in
data16
sti
jo
ds
push
stos
icebp
xchg
cmp
add
ror
setbe
enter
test
es
dec
or
mov
fist
and
into
adc
pushw
mov
push
push
xor
jne
jae
int
or
ds
lock
inc
ds
mov
mov
sbb
mov
fstp
or
stc
aaa
movs
mov
(bad)
and
jge
leave
mov
mov
rol
vhsubps
retf
inc
in
movs
imul
(bad)
mov
ins
fdivr
(bad)
inc
repz
inc
(bad)
and
sbb
ret
into
xchg
and
fdiv
mov
rcl
xlat
outs
into
xchg
mov
scas
cdq
cld
and
adc
pop
scas
aad
rol
scas
dec
das
add
inc
xor
loopne
(bad)
movs
pop
add
inc
inc
pushf
jb
mov
loope
in
stos
or
mov
je
push
add
mov
or
(bad)
adc
mov
jae
cld
sbb
jno
sbb
je
xchg
or
and
(bad)
cs
mov
hlt
lahf
inc
mov
pop
loopne
mov
jno
sub
leave
sbb
xchg
jb
mov
fwait
lahf
or
jmp
cld
sub
(bad)
in
xlat
jnp
cmp
mov
outs
jp
add
and
push
call
xchg
jmp
popa
dec
addr16
xchg
xlat
push
and
or
jge
inc
leave
add
inc
and
sahf
mov
jp
in
pop
sbb
popa
mov
fwait
dec
rcl
aad
shl
out
inc
fldcw
and
mov
icebp
sbb
or
(bad)
xlat
dec
mov
jge
test
retf
int
jl
sbb
pusha
mov
dec
sbb
jl
lods
repz
lea
mov
test
stos
mov
mov
scas
(bad)
mov
push
aam
shr
sti
pushf
mov
sub
dec
sbb
add
aas
mov
and
or
shl
imul
sub
out
pushf
rcl
mov
mov
ins
and
dec
pop
jns
lods
arpl
sbb
sub
xchg
movs
push
xchg
xchg
daa
cmp
test
mov
inc
add
fwait
jmp
(bad)
dec
xchg
dec
push
call
fcom
mov
sbb
imul
jb
mov
gs
iret
adc
jge
arpl
adc
outs
mov
test
xor
mov
into
bound
call
je
loope
fld
iret
inc
popa
pop
test
xor
std
inc
lods
(bad)
aam
mov
cli
pop
xor
jo
nop
mov
mov
je
inc
mov
push
sbb
xchg
cmp
sbb
jmp
hlt
xor
mov
mov
or
jl
jmp
cli
sub
(bad)
lods
xchg
or
mov
lods
in
sar
ja
inc
lock
mov
lods
enter
addr16
or
and
mov
mov
test
add
cmc
mov
and
pop
push
std
jno
movs
test
cwde
or
xor
mov
pop
jns
pop
(bad)
mov
mov
pop
inc
fadd
lods
jae
mov
and
mov
sbb
sub
leave
dec
stc
pushf
(bad)
sbb
mov
mov
xlat
pop
icebp
push
int3
jbe
aam
frstpm(287
adc
dec
iret
and
addr16
test
rol
sbb
adc
rcl
or
sub
out
sub
xlat
outs
and
repnz
jns
push
jne
lds
xchg
(bad)
(bad)
call
jl
xchg
dec
rdpmc
dec
mov
das
cmp
cdq
cmp
outs
cs
test
outs
mov
repz
popf
stos
mov
(bad)
movd
and
movs
fild
push
addr16
loope
push
cmp
loope
add
mov
pop
enter
cmp
lock
cmps
and
xor
cli
push
(bad)
out
and
lss
in
std
stos
out
or
leave
das
inc
(bad)
movs
pop
ret
pop
mov
dec
push
inc
sbb
dec
mov
inc
inc
xchg
aam
std
dec
mov
cmp
ss
addr16
sbb
call
popf
push
sub
xchg
inc
pop
(bad)
loopne
dec
shl
out
push
xchg
lds
jge
(bad)
push
inc
and
mov
mov
fisttp
push
in
adc
jmp
pop
sbb
out
inc
sbb
cmps
sahf
dec
imul
sti
es
add
hlt
test
pop
test
sub
lods
cs
gs
leave
xor
inc
xchg
dec
jl
repnz
pop
cs
and
jmp
lea
sbb
and
or
cmc
es
sbb
ret
push
xchg
adc
dec
pushf
rcl
push
pushf
test
jp
fnstcw
adc
call
daa
pop
and
cs
test
movs
mov
je
scas
xchg
call
es
and
push
test
(bad)
je
inc
xor
pop
out
fidivr
push
aam
pop
xchg
leave
mov
sub
cli
cmp
cs
mov
lds
lock
xor
sbb
fistp
popaw
outs
ss
push
gs
jae
push
mov
dec
(bad)
mov
bound
pop
pop
sar
ret
mov
cmp
outs
jmp
or
lahf
imul
cdq
xor
push
mov
(bad)
push
mov
iret
dec
into
shl
test
iret
(bad)
cmp
xchg
adc
sar
add
pop
mov
in
sbb
adc
pusha
test
idiv
mov
mov
ins
pop
cmp
pop
add
ins
std
xchg
pop
stos
add
jmp
xchg
imul
sub
cs
xchg
inc
shr
inc
add
push
or
mov
xor
movs
jge
aas
jb
ret
mov
push
repz
inc
pop
mov
fld1
mov
(bad)
mov
(bad)
mov
sbb
punpckhdq
lods
inc
test
inc
push
pop
mov
sti
outs
mov
push
pop
push
jecxz
xor
sar
jmp
push
dec
adc
or
in
cmp
or
push
dec
adc
je
pop
fwait
retf
add
mov
adc
pop
push
add
adc
adc
mov
push
fnstsw
dec
inc
dec
dec
xor
cli
out
inc
xor
and
shr
(bad)
leave
std
(bad)
jo
and
(bad)
int3
sbb
jl
push
in
test
dec
jmp
and
ds
push
dec
mov
fild
xor
mov
retf
jbe
dec
int
cmps
xchg
push
pop
pop
jle
push
add
pop
inc
(bad)
jmp
push
mov
adc
arpl
mov
fcom
jecxz
push
pop
add
mov
mov
adc
stc
retf
out
add
loop
adc
rcr
pop
and
aam
xchg
xchg
or
cmps
test
daa
mov
push
out
nop
push
mov
sbb
lock
cmp
sub
xor
fmul
xor
jne
cmc
mov
add
fadd
retf
out
ss
jno
or
fidivr
mov
retf
ja
add
lods
mov
dec
(bad)
mov
ins
scas
loop
cmp
nop
adc
iret
inc
pop
dec
xchg
shr
xor
pop
and
mov
dec
imul
jne
xor
std
imul
fldcw
popa
mov
add
jle
push
sbb
out
addr16
push
or
xor
adc
mov
nop
out
popf
add
cmp
outs
icebp
jb
dec
sub
pop
js
mov
sbb
cld
dec
mov
fs
xchg
cmp
or
push
ins
into
push
sub
mov
pushf
jne
stc
jp
jo
mov
(bad)
lahf
inc
sub
in
leave
dec
ins
fisttp
push
mov
pop
inc
(bad)
fld
mov
repz
sub
jnp
xchg
cmp
xor
mov
mov
jle
sbb
adc
cmp
xrstor
and
cld
push
xor
mov
push
test
aas
sti
adc
cmps
imul
mov
or
leave
jle
mov
call
adc
pop
jno
sub
fdiv
ss
xor
bound
scas
fisub
loop
(bad)
pop
jle
xor
fistp
and
and
not
and
call
mov
aad
arpl
or
in
fdivr
js
cmp
or
aam
cdq
repz
aas
nop
pusha
xchg
retf
push
std
mov
mov
pop
(bad)
xor
repnz
or
mov
das
push
add
xor
retf
add
shl
sbb
outs
shl
hlt
repz
gs
fs
ja
clc
push
lods
pop
(bad)
cmp
xchg
mov
add
jno
mov
and
add
out
mov
jb
inc
out
push
rcl
mov
push
in
inc
arpl
pusha
add
cmp
inc
mov
xor
sbb
cmp
xchg
jnp
ins
mov
pushf
cmp
mov
push
sub
mov
les
pop
and
mov
std
push
jnp
shl
cmps
push
and
aas
push
and
or
or
push
jno
sar
jg
clc
xlat
sub
in
arpl
cmp
dec
add
in
(bad)
into
pop
neg
mov
jb
dec
pop
int
inc
inc
mov
push
cmp
ins
dec
push
mov
xchg
scas
cmc
dec
pop
test
jle
mov
inc
dec
pop
rcl
loop
cld
fnsave
popf
aam
xor
fwait
pop
mov
push
adc
sub
mov
push
int
aad
cmp
xor
jmp
mov
sub
dec
adc
cmp
(bad)
add
std
loope
in
jp
pop
pop
fisttp
push
mov
push
and
fs
cs
cmps
mov
out
(bad)
(bad)
stc
dec
fist
sbb
jns
(bad)
into
popf
lds
enter
push
mov
cmp
pop
jmp
lods
add
jp
and
mul
nop
inc
xchg
fisubr
adc
rol
xchg
inc
stc
cmp
mov
xor
push
mov
sub
fisttp
int3
fistp
fcom
in
out
inc
je
cmp
in
lods
rcl
je
push
arpl
ret
movhps
push
fs
or
test
mov
out
push
dec
mov
outs
stos
xor
in
leave
pop
lods
stos
dec
push
xor
arpl
push
and
sub
sahf
cmp
lea
pop
rol
fld
loope
loope
out
call
fidiv
mov
cmp
loopne
adc
pop
inc
mov
hlt
inc
outs
ror
addr16
scas
adc
cmp
movs
xor
push
fpatan
dec
fdiv
test
or
and
aad
or
cs
popf
cwde
push
adc
test
fdivr
mov
ja
(bad)
shr
xchg
mov
xor
fisttp
vcmppd
shr
out
xchg
ins
cmc
and
pop
jge
pop
mov
aas
and
nop
add
mov
mov
ss
push
sbb
adc
ss
push
arpl
jp
not
retf
mov
jbe
imul
mov
into
mov
stos
sub
xchg
mov
call
pop
add
jmp
(bad)
repnz
paddsb
(bad)
scas
stc
cwde
xor
dec
lods
out
sub
pop
int
ja
inc
jae
rcr
push
call
sar
rcl
jns
lock
jge
retf
cmc
add
dec
call
les
cs
aad
ss
or
mul
inc
stc
mov
mov
loope
call
aas
fisubr
xchg
xor
sahf
and
call
or
jns
test
lds
and
and
je
aaa
jnp
ins
lock
aaa
pop
ja
mov
or
pop
cmps
aam
daa
pop
push
jmp
ins
imul
jbe
jl
not
cmp
in
scas
pop
cmc
lock
aas
and
loop
fstp
pop
inc
and
dec
push
cmc
xor
and
lds
cmp
pop
jns
jnp
pop
mov
clc
xor
xor
or
arpl
mov
dec
(bad)
into
sub
xchg
call
push
xor
inc
push
mov
scas
dec
aaa
sub
xor
jg
sti
mov
jbe
or
ror
pop
mov
mov
push
cmp
cdq
mov
das
inc
popa
je
inc
mov
cmp
movs
lods
ror
dec
das
fdiv
jnp
push
xchg
mov
outs
push
adc
outs
mov
inc
popf
inc
into
pop
add
std
dec
std
ja
sbb
xor
add
jle
pusha
adc
ins
mov
mov
mul
or
ret
sbb
xchg
je
rcl
out
mov
mov
sbb
movs
into
pop
test
pushf
or
mov
mov
jo
(bad)
in
jl
stc
(bad)
call
or
push
adc
outs
sub
test
adc
dec
mov
xor
pop
cli
stc
inc
fnstsw
movnti
pop
cld
dec
retf
mov
outs
test
and
mov
jecxz
jmp
sahf
mov
jns
cmp
fadd
call
into
or
(bad)
rcr
and
mov
cmps
dec
in
xchg
adc
test
xchg
push
sub
outs
fwait
and
inc
iret
or
(bad)
mov
pop
rcr
jp
bound
imul
push
or
arpl
push
jno
jne
push
jo
test
lods
or
repz
mov
ficom
(bad)
out
in
in
test
xor
jp
mov
cmps
xchg
outs
out
pushf
dec
inc
sbb
ret
scas
icebp
enter
and
int
adc
mov
arpl
xor
push
and
xor
mov
push
iret
pop
or
push
sbb
dec
jnp
push
sub
int3
jl
iret
mov
mov
dec
xchg
cld
sub
fld
test
movs
lods
je
cs
loope
sbb
inc
pop
sub
cmp
cld
aas
sub
dec
inc
iret
fadd
mov
and
cwde
sbb
cs
call
push
add
jp
rcl
test
xor
mov
retf
jbe
bound
and
mov
mov
data16
mov
mov
sbb
sub
scas
bound
push
jp
fs
jnp
repz
xchg
sbb
mov
inc
aaa
in
sub
cmc
xchg
pusha
lahf
or
shl
ins
out
cmp
push
xor
in
lea
mov
mov
mov
sbb
xchg
inc
pop
pop
xchg
sbb
pop
stos
cwde
or
mov
sbb
imul
xor
xchg
std
lahf
adc
scas
sbb
xchg
cmps
scas
and
mov
push
sub
mov
xchg
xor
mov
cmp
sub
dec
pop
mov
jmp
leave
sub
data16
lahf
jns
mov
lds
or
push
repnz
lahf
out
(bad)
shr
rcr
cdq
mov
xchg
sbb
(bad)
or
mov
shl
cmc
add
pop
lds
ds
push
int
inc
sub
nop
mov
cli
pusha
sub
sbb
test
jmp
imul
pop
stos
xor
mov
in
shl
adc
pop
pop
mov
mov
outs
mov
jno
stos
daa
pop
(bad)
loopne
(bad)
mov
loope
inc
cld
(bad)
jmp
into
(bad)
mov
pop
xchg
ror
xchg
das
adc
ins
loop
sub
xchg
jmp
sbb
inc
sub
repz
mov
cmp
and
loop
push
(bad)
nop
shl
stos
jg
sub
outs
sahf
add
adc
add
mov
cmc
add
cmp
int
dec
(bad)
repz
(bad)
xor
jge
scas
mov
or
mov
repz
das
mov
dec
push
xor
cli
fucomp
xor
es
test
imul
mov
and
and
loop
mov
add
dec
bnd
lds
std
jbe
das
xchg
dec
adc
pop
loope
or
shl
mov
out
add
mov
xor
(bad)
mov
ret
or
push
mov
das
push
add
mov
and
pop
xchg
pop
mov
clc
es
mov
mov
jg
inc
mov
dec
retf
outs
test
jno
lea
int3
int3
adc
lock
daa
jg
or
(bad)
dec
or
das
test
or
pop
add
xor
push
scas
mov
add
mov
pop
mov
cli
add
ss
sub
pop
leave
ds
mov
add
mov
(bad)
movs
cmp
xchg
adc
lods
retf
and
sti
add
push
push
cli
xor
shl
ins
xchg
mov
jmp
mov
mov
ins
movs
pop
rcl
dec
mov
loopne
add
xchg
aas
push
jmp
push
lock
mov
cmps
stc
mov
jb
shr
icebp
or
int
sub
mov
or
dec
mov
loopne
daa
int3
dec
jns
stos
xchg
cmc
sbb
mov
and
out
mov
stos
cmp
(bad)
psllw
or
adc
cs
dec
xchg
adc
push
in
jae
mov
pop
out
mov
jmp
dec
cmps
lods
pushf
pop
jne
clc
jo
iret
fs
inc
in
mov
in
fs
xor
call
and
and
int
or
iret
push
push
stos
arpl
sub
les
repz
movs
cs
pop
push
mov
cdq
sbb
push
cli
inc
mov
add
test
lock
dec
mov
jge
(bad)
jo
shr
in
(bad)
xor
xor
add
pop
stos
call
xchg
mov
dec
add
add
ins
leave
ret
inc
add
pop
lea
loopne
mov
dec
rcl
cmps
repz
ins
add
shr
loope
add
or
xchg
call
pop
shl
int3
xchg
fdiv
mov
mul
mov
test
add
aam
mov
imul
jmp
rcr
xchg
retf
jb
add
dec
mov
ret
mov
push
or
xchg
ror
dec
inc
mov
sbb
pop
inc
jo
call
mov
mov
mov
popf
fidivr
or
fimul
(bad)
call
dec
xchg
int
out
pop
dec
neg
mov
(bad)
sbb
bound
cmc
push
scas
fcom
adc
sti
outs
fnstsw
jg
jl
retf
imul
mov
sub
iret
mov
int
repnz
add
sbb
adc
fdivr
jle
das
shr
jge
sbb
push
cdq
inc
das
jae
cmp
fs
ja
enter
hlt
adc
lds
and
sbb
stc
jmp
sub
pop
aas
jae
std
mov
sbb
sub
pop
mov
outs
popf
mov
jmp
xor
cmps
add
in
mov
mov
pop
add
ror
iret
add
cld
inc
jecxz
and
fimul
cmp
mov
mov
lds
add
push
shr
mov
mov
mov
inc
out
sti
in
jmp
scas
sub
out
push
mov
fwait
lahf
mov
not
in
xchg
push
inc
mov
fdiv
ins
lea
in
je
sbb
cmp
mov
dec
adc
cmp
cmps
xchg
inc
adc
dec
xor
inc
(bad)
xchg
mov
and
and
mov
outs
or
or
out
dec
ficom
das
and
into
pusha
mov
jle
in
cli
ds
dec
scas
dec
inc
loop
mov
bound
mov
mov
cld
sub
and
pop
mov
or
shl
ins
push
outs
shl
pop
into
fs
ror
fstp
nop
loopne
arpl
jns
retf
sahf
cmp
mov
fwait
test
retf
push
shl
inc
jbe
push
sbb
adc
loopne
stos
sahf
(bad)
mov
ret
stos
adc
sub
ds
mov
or
int3
push
fimul
js
xor
or
xor
push
loop
push
ins
jmp
xchg
nop
adc
jne
mov
test
popf
dec
cmps
inc
(bad)
mov
push
int
cmps
push
xor
pop
inc
hlt
jb
cmp
pop
inc
mov
movs
fisttp
xlat
mov
popf
add
sbb
adc
loop
push
xor
dec
xor
pop
aad
xchg
mov
fcom
mov
jo
xor
cmp
push
jno
xor
pop
mov
pusha
adc
(bad)
add
aas
mov
mov
shr
adc
lea
popa
xchg
adc
xchg
add
(bad)
(bad)
sbb
popf
mov
mov
add
add
mov
add
cmp
outs
rol
test
div
sub
cmp
sub
or
out
fistp
or
lods
inc
push
retf
or
inc
inc
cmp
cmp
sti
addr16
and
lods
mov
and
push
push
ins
movs
pop
and
xor
dec
push
les
sub
mov
mov
rol
push
add
iret
mov
aaa
jl
mov
sti
inc
loopne
add
std
push
mov
(bad)
fcmovbe
mov
dec
rol
retf
das
xlat
dec
pusha
jnp
fbld
mov
dec
jmp
and
rcr
rol
push
lahf
add
sub
test
add
sub
mov
cwde
push
adc
xchg
test
bound
test
js
ss
pop
sbb
mov
mov
mov
(bad)
loopne
inc
pushf
cmp
xor
shr
or
repnz
and
dec
outs
mov
sbb
aaa
inc
aam
stos
xchg
xchg
xchg
jle
add
inc
inc
nop
fidivr
test
jno
add
loop
jbe
dec
or
paddusw
sub
out
adc
mul
xor
test
inc
(bad)
adc
icebp
ret
(bad)
xlat
or
cmp
adc
ins
push
mov
mov
ret
jecxz
(bad)
fiadd
cmp
ds
repz
stos
ins
jecxz
sbb
or
push
sub
push
dec
iret
ja
mov
push
fistp
xchg
sbb
and
adc
es
call
mov
dec
shl
sar
mov
cwde
mov
fisubr
mov
movs
or
mov
rcl
ret
repz
jno
nop
fisttp
mov
push
dec
js
lock
xchg
jbe
jl
daa
jo
(bad)
xchg
icebp
xchg
repz
mov
pop
mov
sub
icebp
outs
inc
cmc
inc
xchg
cdq
sbb
pop
adc
nop
adc
out
pushf
sub
or
les
cmps
sub
cwde
sbb
fidiv
out
mov
in
in
in
leave
push
ds
adc
adc
adc
pop
repz
(bad)
ret
sbb
mov
mov
dec
sub
dec
mov
lea
mov
xchg
loope
adc
pop
call
mov
or
fild
add
cmp
icebp
push
lock
(bad)
fisub
jo
xchg
aaa
cli
mov
inc
loope
test
adc
cmp
inc
jnp
and
scas
adc
jp
add
jmp
mov
retf
pushf
xchg
or
ds
ret
call
jb
dec
add
fs
scas
fcomp
test
(bad)
test
lock
mov
pop
mov
stos
mov
mov
daa
jge
mov
out
adc
mov
mov
xor
add
dec
mov
neg
sbb
pop
clc
cmp
adc
xchg
sub
mov
mov
sbb
mov
dec
popa
inc
lds
adc
ffreep
outs
add
into
mov
sbb
icebp
add
pop
leave
mov
das
pusha
jmp
in
jbe
test
mov
movs
jno
bound
mov
fisubr
js
mov
pop
clc
(bad)
xchg
iret
imul
add
mov
ret
mov
mov
test
xlat
xchg
mov
div
arpl
stc
fwait
mov
in
jnp
retf
jecxz
cmp
push
push
pop
and
cmp
(bad)
jmp
xor
push
jno
pop
fnstenv
out
xchg
mov
jecxz
mov
jge
out
sbb
daa
cli
int3
int3
es
xor
sbb
jmp
in
mov
fnstcw
and
mov
push
(bad)
mov
cmps
fisttp
xor
and
jo
mov
adc
xlat
imul
xor
ins
mov
mov
cmp
xchg
mov
jmp
inc
aad
(bad)
jmp
add
or
iret
sub
sahf
inc
ret
rol
hlt
jnp
sub
or
or
mov
push
lahf
push
push
add
bswap
jno
add
mov
jl
inc
pop
push
jle
js
rol
loopne
aas
hlt
push
ds
jmp
or
cmp
retf
loope
sub
mov
push
and
dec
(bad)
or
jmp
push
pop
pushf
push
pusha
fwait
inc
outs
leave
push
jecxz
pop
int3
je
sub
sbb
cmps
dec
out
ret
xor
or
xor
test
or
sub
push
or
gs
mov
push
push
pop
inc
pop
push
cmc
add
(bad)
push
mov
xor
scas
popf
int
repz
or
sbb
sbb
repnz
sbb
daa
not
repnz
add
popa
jp
jae
push
scas
sub
(bad)
push
lahf
(bad)
in
lods
jg
or
and
jp
mov
ficom
xchg
mov
das
inc
dec
cwde
and
iret
and
mov
xlat
add
mov
dec
jns
dec
mov
in
mov
cli
out
or
jno
outs
and
loope
pop
mov
and
leave
xchg
sub
sub
add
push
adc
bound
xchg
(bad)
xchg
mov
xor
enter
mov
xlat
jne
(bad)
lea
jg
sar
jo
cmp
jecxz
jbe
inc
inc
sahf
cli
fld
in
push
mov
int
adc
jge
gs
push
jmp
mov
aam
sub
push
or
cmp
lods
mov
fnstenv
mov
xchg
cli
mov
test
pop
scas
cmp
cmps
fisub
movs
fst
cmps
fisub
xlat
mov
shr
sub
retf
scas
pop
sti
mov
xor
or
or
mov
cmp
imul
shr
loopne
inc
ins
push
jl
aad
jbe
pop
nop
adc
cmp
test
push
or
add
mov
push
lock
mov
jae
jg
retf
dec
std
xlat
imul
(bad)
pusha
mov
push
test
ret
inc
sahf
sar
add
call
cmp
movs
jg
sub
mov
xchg
hlt
adc
push
and
jbe
out
mov
xchg
scas
cmp
aaa
mov
fcomp
push
xor
sbb
sbb
jmp
sbb
and
outs
dec
enter
cwde
dec
idiv
or
mov
adc
outs
push
neg
sub
idiv
jne
aaa
loop
and
enter
leave
out
imul
mov
push
add
into
lods
inc
ja
xchg
push
sub
jg
or
cmps
int
dec
out
mov
and
xor
xor
push
hlt
(bad)
(bad)
sub
xor
xchg
stos
add
(bad)
xor
add
or
pop
loopne
addr16
mov
add
pop
inc
mov
and
dec
jbe
xor
fldcw
(bad)
cli
xor
xor
sbb
mov
mov
stos
out
xor
out
mov
gs
int3
jae
pop
cwde
fidiv
mov
cld
adc
pop
sar
jg
adc
sbb
pop
cmp
inc
pop
lds
call
mov
dec
js
in
adc
add
sbb
inc
or
repnz
sub
shl
sub
pushf
sub
mov
jecxz
xchg
das
imul
fcomp
mov
es
and
(bad)
(bad)
add
cmp
dec
sbb
inc
repz
push
mov
xor
dec
(bad)
fcom
and
aam
inc
jg
out
sbb
icebp
mov
div
sbb
mov
sbb
sbb
in
sub
adc
mov
lods
cmps
jl
arpl
enter
fistp
mov
into
loopne
push
and
xchg
sar
mov
sbb
jmp
sbb
(bad)
mov
rol
mov
ret
push
bound
sub
call
dec
inc
sbb
mov
cmps
mov
test
xchg
push
sbb
and
push
inc
ins
or
ror
pop
xlat
dec
mov
push
mov
fidiv
sbb
inc
fnstenv
push
clc
ins
test
mov
xchg
data16
pop
ins
je
mov
jmp
xchg
sbb
inc
fstp
xlat
ja
mov
retf
sar
rcr
jns
dec
xor
add
jmp
jne
cmp
out
fsubrp
(bad)
jo
jmp
xchg
pop
jbe
mov
add
int3
jl
bound
sub
cld
cdq
mov
sbb
sub
push
or
popf
aaa
xor
dec
mov
jne
push
dec
pushf
popa
mov
pop
retf
sbb
fwait
xor
sbb
mov
pusha
cdq
neg
outs
mov
pop
scas
pop
dec
pop
and
lock
xor
or
pop
mov
sti
jae
(bad)
or
mov
dec
sti
mov
and
out
xor
es
pushf
(bad)
xlat
adc
push
jge
dec
sub
xor
inc
and
cmps
sbb
jae
(bad)
pop
push
sub
fld
sahf
popw
and
push
stos
or
dec
mov
div
mov
bound
pop
fst
nop
xchg
test
push
js
fcom
sbb
ffreep
ja
je
scas
push
cli
sbb
xchg
movs
push
cmp
ror
pop
sbb
xor
enter
jnp
cmp
sub
adc
push
mov
mov
stos
xor
and
jns
push
lods
and
das
(bad)
lock
dec
stos
mov
xchg
push
movd
pusha
mul
xchg
shl
in
jo
xchg
in
and
xchg
adc
mov
sbb
cmp
and
clc
inc
add
dec
cmp
imul
inc
dec
sar
in
push
mov
xor
call
lods
mov
inc
lds
in
sar
xor
mov
repz
cmps
fwait
ds
mov
addr16
(bad)
int3
mov
mov
pop
push
imul
outs
and
call
addr16
pmaddwd
adc
test
loopne
xchg
sub
lea
dec
loope
(bad)
ins
pop
xor
fwait
mov
fadd
or
loopne
or
xor
fcomi
inc
add
mov
cld
mov
sub
jecxz
adc
sbb
daa
sub
jmp
push
shl
fsub
mov
arpl
sub
(bad)
ficom
adc
iret
out
adc
inc
ror
xor
pop
jb
imul
ror
popf
pop
mov
(bad)
ss
out
or
imul
cmc
or
sub
dec
inc
inc
sbb
in
jae
and
shl
mov
je
push
call
iret
inc
scas
ror
movs
xor
ret
sbb
movs
pop
ror
cmp
das
jg
js
out
push
pop
fst
inc
push
push
mov
fmul
and
stos
call
mov
addr16
fild
adc
sbb
outs
mov
xchg
sbb
mov
mov
rol
test
in
dec
test
inc
sar
aam
out
jge
retf
mov
add
push
cmps
sbb
xor
jl
retf
ins
pushf
rol
xor
sub
sub
xchg
stos
push
fdiv
lods
aam
push
inc
or
pop
and
cmp
jmp
imul
push
movs
add
pushf
mov
fs
pop
add
out
mov
pop
dec
loop
test
sub
cdq
neg
ror
test
test
pop
test
sbb
inc
xchg
mov
daa
mov
fsub
cld
imul
mov
cld
sub
nop
jp
int3
inc
mov
int
xor
out
cmp
ja
and
daa
xlat
out
pop
cwde
sar
(bad)
(bad)
iret
jmp
jge
and
sahf
push
jnp
daa
loop
fstp
mov
jmp
xor
call
mov
or
sti
int3
stos
or
mov
repnz
cmps
adc
lds
xor
push
test
out
mov
pop
xor
mov
dec
jne
sti
das
sub
mov
pop
and
minps
cmp
inc
pop
sbb
add
mov
shl
enter
retf
add
cmp
ins
pop
neg
mov
push
lds
fwait
xor
outs
cmps
sti
jecxz
mov
jae
jno
pop
fadd
and
cmp
in
out
jb
and
into
adc
sbb
jo
in
movs
add
test
add
fs
loope
hlt
jmp
cld
arpl
jne
sti
out
push
mov
jns
aam
pop
jmp
retf
cmps
fnstenv
push
pop
call
cs
icebp
popa
cmp
mov
aad
cwde
adc
arpl
ds
sbb
retf
add
jmp
xor
cwde
adc
xor
pop
jno
xor
lea
xchg
cli
aaa
add
daa
sahf
test
mov
fucom
or
loop
adc
pop
push
mov
pop
cmc
push
cmp
retf
aaa
stc
inc
lock
cmc
imul
in
mov
scas
clc
ret
(bad)
inc
push
adc
inc
or
xchg
mov
addr16
sbb
mov
inc
push
adc
or
fst
retf
sahf
js
add
xor
xlat
ds
fxch
test
(bad)
xlat
and
pusha
inc
or
call
ss
fmul
data16
push
sahf
hlt
addr16
mov
mov
xor
loopne
sbb
xor
call
mov
cmp
mov
sbb
jge
aam
mov
cmp
jnp
pop
pop
out
mul
sahf
ret
std
retf
dec
dec
add
ins
add
popf
cmps
dec
(bad)
and
mov
mov
mov
cmp
add
mov
xor
repz
stc
fld
enter
scas
clc
mov
mov
mov
in
es
sub
mov
in
add
jbe
mov
test
mov
xor
loop
jns
clc
dec
pop
inc
enter
pop
test
hlt
mov
push
pop
sub
or
xchg
stc
loope
jbe
lea
movs
add
push
(bad)
sub
sbb
test
sbb
mov
cmp
adc
sti
jp
mov
push
dec
lods
add
clc
push
js
into
int3
cmps
test
das
retf
jmp
mov
into
cmps
(bad)
xchg
xor
sub
mov
mov
sbb
rcl
or
or
mov
mov
mov
test
cmp
imul
and
sub
out
or
stc
mov
outs
push
shr
out
mov
popa
mov
or
ficom
fs
call
imul
sub
dec
stos
pop
and
dec
xchg
sub
repnz
out
push
jb
xor
push
push
and
addr16
popa
push
inc
pop
jmp
call
mov
aad
iret
icebp
in
mov
dec
add
pop
sbb
jmp
sbb
push
enter
dec
inc
push
sar
daa
scas
lods
stos
arpl
fadd
std
dec
jne
sbb
lds
aaa
aam
xor
push
repz
ins
pop
aad
sub
imul
lds
inc
popf
xor
(bad)
pop
and
mov
xor
leave
aam
stc
pop
and
(bad)
add
sub
iret
pop
jne
xchg
add
bound
cmp
xchg
dec
jns
out
mov
scas
out
inc
out
shr
pushf
fcmovb
mov
fst
sbb
adc
neg
(bad)
data16
dec
jnp
std
in
mov
sbb
aam
xchg
gs
jge
pop
inc
or
jmp
ret
addr16
xor
xor
inc
scas
xchg
imul
xor
jg
fstp
adc
cmc
out
inc
in
adc
mov
test
mov
cmp
clc
jb
cli
les
inc
cmp
sub
mov
mov
push
mov
adc
pop
jle
jno
and
inc
(bad)
cmp
jbe
rcr
test
test
ror
sub
jmp
pop
fadd
icebp
xchg
or
xlat
fidivr
xor
in
dec
pop
sti
imul
push
adc
lods
in
call
cwde
bound
stc
mov
ret
sti
(bad)
rcr
inc
mov
mov
lahf
lea
ret
jmp
int3
pop
sbb
lds
cmp
ins
ins
test
pop
cmp
sub
pop
fisub
fmul
nop
xor
not
add
wbinvd
mov
inc
sbb
pushf
mov
aaa
cld
inc
aaa
xor
and
mov
mov
mov
fst
cmp
popa
shr
sti
neg
xor
xchg
dec
mov
enter
aas
iret
repz
aaa
int
mov
iret
rcl
daa
call
mov
xchg
push
icebp
or
sbb
cmp
sub
call
xlat
fmul
pop
jmp
icebp
jo
test
sti
aam
mov
icebp
sbb
(bad)
dec
ins
test
jnp
pop
mov
fldcw
mov
test
sbb
nop
xor
int
mov
or
and
jno
lods
cmp
into
aad
jl
enter
js
in
push
jmp
xchg
inc
push
sub
xor
xchg
stos
sti
jp
pop
clc
jae
sub
bound
aad
push
push
arpl
adc
jmp
movs
jmp
jo
fiadd
gs
int3
inc
mov
mov
sub
sub
mov
dec
xchg
test
pop
jnp
and
sbb
stos
add
out
inc
pop
scas
xchg
mov
mov
or
sbb
cmp
test
pop
push
adc
popa
je
and
adc
lea
and
out
nop
ja
and
sbb
add
mov
adc
and
lods
(bad)
shl
and
(bad)
xchg
mov
(bad)
pop
outs
stos
fistp
in
sbb
imul
ins
(bad)
mov
xor
out
inc
pop
and
ins
push
sub
inc
lds
and
clc
ret
and
js
mov
dec
sub
mov
add
mov
pusha
mov
frstor
cmc
arpl
test
xor
mov
adc
xor
scas
push
jnp
ror
jecxz
pop
test
es
cmp
cmp
pusha
xchg
popf
daa
fldenv
shl
stos
and
jl
ret
ins
cmp
loope
mov
movs
pop
popf
xlat
cmp
scas
mov
sar
inc
cli
aaa
push
mov
push
scas
imul
not
jb
inc
adc
fisub
xchg
fidivr
cmp
dec
data16
imul
mov
loop
cmp
jle
xor
mov
mov
jp
clc
inc
ss
push
loop
repz
(bad)
mov
je
mov
xchg
mov
(bad)
cmp
and
xchg
scas
loopne
lock
dec
push
rcl
stos
inc
pop
xor
sbb
sbb
cld
gs
ja
xchg
mov
sbb
jp
xor
in
rcr
jnp
or
sbb
pop
pop
aam
loope
enter
mov
and
xor
pop
movs
out
bound
addr16
sub
sbb
cmps
adc
aaa
mov
sub
mov
lds
xor
shl
adc
or
ffree
pop
pusha
scas
pop
or
mov
add
cmps
add
pusha
bound
push
inc
sti
loopne
push
dec
nop
call
iret
cmps
div
push
xchg
mov
out
in
push
add
push
adc
add
cmp
(bad)
mov
mov
mov
cmps
mov
dec
cdq
adc
test
push
jnp
adc
rcr
xchg
mov
ret
push
pop
cmp
jbe
push
mov
dec
int3
inc
push
jno
shl
mov
ja
sbb
in
int
es
sahf
xor
push
cs
pop
sub
shl
mov
mov
aaa
call
inc
sti
mov
jmp
pusha
sbb
pop
cmps
sbb
dec
push
retf
scas
jo
xchg
daa
inc
hlt
outs
rcl
inc
gs
adc
shl
fist
pop
jb
or
add
adc
cli
jmp
push
arpl
mov
loopne
inc
mov
std
and
and
jmp
bsf
shl
dec
icebp
dec
push
lock
aas
adc
ds
ret
push
jmp
jg
push
push
xor
cmps
in
push
adc
or
lea
adc
hlt
nop
adc
jmp
mov
or
inc
rcl
mov
in
xor
fadd
mov
sub
pop
jl
add
add
test
push
ror
rcr
gs
cmp
sub
mov
pop
and
mov
inc
ret
shl
into
cmp
es
dec
pushf
mov
push
out
hlt
jb
push
daa
movs
adc
icebp
loopne
outs
in
mov
data16
push
cli
dec
das
imul
pop
push
inc
std
lods
inc
fisttp
scas
cld
retf
dec
inc
xlat
out
cmp
out
(bad)
jnp
mov
mov
lock
leave
je
(bad)
fist
sahf
xor
das
push
fistp
out
cmp
loopne
lods
fstp
movs
ss
mov
pop
xchg
test
xor
cmp
pop
mov
rcr
xor
or
daa
out
out
nop
ret
lods
adc
(bad)
dec
xor
or
ret
lods
jo
fwait
adc
imul
cs
add
dec
dec
mov
jne
movs
xchg
mov
adc
inc
jmp
pushf
cmp
mov
les
sub
(bad)
into
dec
dec
mov
sti
sbb
pop
jmp
fistp
xor
pop
xor
into
cdq
inc
pop
inc
imul
js
test
push
(bad)
dec
dec
leave
adc
cli
add
inc
or
xor
sbb
push
inc
mov
and
adc
cmc
push
sar
lock
cwde
repnz
xchg
mov
loop
jg
mov
(bad)
out
xchg
dec
scas
movs
cmp
pop
(bad)
adc
pop
pop
jl
adc
jne
stos
ret
retf
icebp
sbb
sub
jl
test
(bad)
popa
frstor
fwait
retf
push
xor
push
jecxz
popf
(bad)
fwait
(bad)
adc
ins
sbb
(bad)
xor
mov
mov
xchg
(bad)
fisttp
jmp
movs
mov
cld
sbb
sub
fdivr
mov
ins
daa
sbb
fbld
and
push
mov
xchg
arpl
adc
mov
jge
push
jmp
in
rcl
out
in
jmp
mov
imul
cmc
and
xchg
repz
dec
inc
cld
dec
xchg
(bad)
cmc
mov
lods
push
les
add
shr
adc
cmp
mov
lods
ret
movs
cmps
sbb
and
add
mov
bound
dec
mov
inc
rcl
data16
cwde
lock
push
nop
jo
int3
push
movs
xchg
aaa
jg
icebp
addr16
jb
dec
inc
or
sbb
jl
neg
in
out
pop
jo
es
data16
fwait
cmp
xchg
push
adc
les
mov
in
imul
mov
bound
test
lahf
lea
pop
call
loopne
dec
pop
popf
or
loope
aaa
out
retf
inc
call
cmps
cs
cli
bound
mov
repnz
jle
push
fmul
inc
xor
add
mov
mov
sub
scas
jno
pop
out
test
pop
sub
adc
out
mov
data16
in
dec
das
in
sub
xor
sbb
and
sar
ror
inc
or
pop
out
hlt
std
jmp
loopne
fisubr
leave
or
adc
inc
cmp
inc
outs
inc
xchg
scas
(bad)
loopne
stos
stc
cmp
sub
push
out
xor
or
div
sbb
xchg
retf
xchg
(bad)
lods
jae
mov
mov
ficom
sbb
sar
xchg
add
shl
test
pop
(bad)
jns
movs
xchg
popa
cmp
sbb
adc
dec
push
call
out
adc
lods
mov
fidivr
pop
cmp
(bad)
fbstp
imul
push
mov
sar
mov
xchg
dec
sti
retf
pop
into
mov
pop
lea
ret
fwait
or
dec
xor
mov
jg
mov
call
movs
mov
xchg
fmul
mov
mov
outs
inc
ins
inc
push
or
sbb
add
cdq
inc
jmp
call
lods
mov
fsub
in
arpl
das
inc
(bad)
out
test
nop
stos
stc
bound
sbb
mov
mov
ror
dec
inc
test
or
rcl
push
fisubr
in
adc
sbb
mov
pop
call
jno
imul
pop
out
frstor
mov
push
mov
(bad)
shl
inc
sub
sbb
xchg
adc
mov
xchg
into
popf
push
sbb
call
test
pop
clc
cmp
mov
test
jbe
fstp
aam
rcr
inc
jmp
jmp
enter
pop
cmps
into
out
xchg
sub
es
mov
mov
jmp
test
and
repz
(bad)
mov
xchg
adc
pop
cmp
xor
loope
in
(bad)
jmp
scas
sub
es
je
inc
lods
cld
dec
(bad)
sahf
ret
mov
pop
fisttp
cmc
(bad)
lock
pop
test
paddsb
add
call
arpl
outs
jmp
into
out
dec
out
jno
das
add
sub
clc
loopne
cmps
dec
adc
mov
and
popa
or
ret
and
mov
(bad)
and
scas
or
jmp
cld
mov
fimul
inc
inc
pop
mov
mov
ficom
andnps
jg
es
aam
inc
retf
add
cmp
nop
mov
call
dec
rol
test
jle
mov
xchg
test
into
sub
data16
not
retf
xchg
(bad)
adc
lods
pop
or
mov
ins
cmps
out
mov
jecxz
lods
adc
test
xchg
push
jmp
and
mov
xchg
dec
cmp
jge
sti
xor
daa
or
jle
sub
jp
jecxz
ss
sub
push
bound
jp
mov
(bad)
fdiv
inc
aas
add
add
sbb
pop
fstp
jae
adc
addr16
es
mov
scas
pop
jnp
adc
sub
daa
aas
std
fnstenv
cmp
mov
push
fadd
enter
mov
jb
pusha
ret
xor
movs
add
mov
push
mov
mov
mov
in
dec
pop
mov
pop
scas
dec
inc
ins
jecxz
int3
add
repnz
mov
cmp
popf
xchg
mov
push
bound
jmp
push
mov
mov
dec
je
lods
xchg
ltr
jne
test
aam
cmp
mov
pop
inc
idiv
mov
xchg
imul
lock
popf
dec
or
cmp
mov
xor
call
sbb
xor
test
and
stos
add
es
fs
dec
arpl
fmul
scas
test
rcr
cli
imul
mov
call
xchg
ds
push
lds
in
int3
push
and
xchg
cmps
mov
jae
jo
jge
call
mov
or
gs
test
clc
cmp
test
loope
call
scas
push
pop
bnd
or
and
push
xchg
clc
sbb
std
jne
dec
daa
mov
adc
jmp
mov
push
mov
sbb
retf
mov
js
xor
les
jne
retf
mov
or
and
fucom
push
mov
imul
test
mov
hlt
test
mov
jnp
(bad)
cmps
add
bound
adc
cli
lock
inc
(bad)
lods
icebp
out
sbb
sahf
rcr
push
mov
into
fs
push
jns
popf
add
jbe
mov
mov
cmp
sti
sbb
arpl
ret
add
add
mov
or
add
mov
or
mov
test
xchg
mov
pop
js
jecxz
dec
sahf
lea
mov
stos
sbb
mov
push
movs
add
mov
dec
mov
(bad)
(bad)
mov
imul
int
jno
shr
inc
aas
fsubr
outs
mov
aam
pushf
mov
ins
cmp
pop
fwait
or
jp
adc
scas
dec
test
sbb
sbb
aam
adc
ret
pop
jecxz
into
and
xchg
movs
popa
movs
sbb
les
cs
pop
or
fisttp
(bad)
retf
pop
add
jg
popa
add
jl
sbb
fiadd
add
jmp
ficom
inc
fild
dec
mov
cmps
sahf
add
add
or
fild
pop
push
lds
enter
bound
in
mov
cdq
mov
mov
repnz
stos
push
adc
ret
mov
mov
mov
sahf
dec
mov
ins
sub
inc
out
jns
xor
pop
test
retf
test
add
sbb
aas
daa
aad
sbb
sub
or
push
enter
pop
sub
movq
ss
pop
in
out
(bad)
int3
shl
js
or
adc
cmc
adc
xchg
xor
sub
imul
outs
retf
gs
test
es
retf
inc
sahf
cmp
xor
fnstenv
mov
es
shr
stc
fisubr
inc
test
mov
and
out
sbb
xor
(bad)
xchg
adc
or
mov
fistp
enter
cmp
xlat
rcr
push
mov
xchg
adc
mov
maxps
shl
mov
(bad)
sbb
enter
pop
xchg
ja
ret
or
xchg
pop
fsubr
push
cwde
push
retf
adc
mov
arpl
xor
stc
or
cmps
fld
jge
push
or
fcom
call
mov
mov
inc
scas
imul
and
outs
sbb
sahf
sbb
and
mov
test
mov
add
aaa
push
xor
cmp
(bad)
push
arpl
daa
stos
cld
(bad)
clc
and
idiv
fisttp
push
add
fadd
mov
test
xor
jb
sub
sbb
fstp
cdq
inc
(bad)
and
scas
sbb
mov
cwde
ins
cld
mov
sbb
jmp
outs
fistp
push
sbb
mov
jecxz
lock
inc
inc
out
shl
jl
rcr
scas
mov
js
mov
jp
(bad)
cs
hlt
out
(bad)
push
fs
fcomp
cmp
ins
cmp
mov
aad
pop
sub
push
inc
(bad)
and
add
mov
test
inc
mov
mov
std
push
inc
adc
jecxz
xchg
or
adc
shr
adc
retf
jl
stos
stos
inc
outs
leave
mov
xlat
pop
push
mov
xchg
xor
addr16
sbb
and
sub
pop
ins
push
jg
push
and
loopne
cmp
ds
pop
arpl
dec
mov
xlat
dec
mov
rol
sbb
(bad)
sbb
mov
pop
sbb
pop
jo
test
sub
cmp
push
gs
push
pop
jp
pop
push
dec
loopne
imul
in
adc
fdiv
dec
mov
lods
mov
adc
push
outs
lahf
push
fwait
xor
call
xor
xchg
dec
cmp
mov
outs
out
mov
mov
jns
inc
ret
int3
retf
jmp
lds
xor
iret
data16
cmp
cmp
or
adc
pop
fcmovu
mov
ins
cs
fwait
loop
jmp
cmp
mov
and
xchg
ror
cs
mov
arpl
inc
test
sbb
sub
mov
add
xchg
ss
inc
mov
pop
mov
push
ds
push
jne
push
xor
pop
xchg
mov
(bad)
jmp
jecxz
jge
xchg
cmp
fs
pop
jecxz
lods
pop
out
mov
inc
mov
push
jns
lea
adc
je
mov
pop
xchg
(bad)
dec
hlt
loope
repnz
outs
mov
jge
scas
daa
pop
(bad)
fcmovne
ret
dec
mov
push
sub
pop
mov
mov
fnstsw
repz
retf
push
mov
push
jnp
sbb
jne
stos
jmp
sbb
pop
mov
or
mov
xchg
cmp
leave
xor
add
xchg
jp
icebp
aas
jns
xchg
inc
fwait
stos
xlat
mov
or
test
cwde
call
sbb
popa
pop
mov
nop
clc
movs
leave
jle
add
pushf
popf
sub
jo
fs
in
and
adc
push
imul
or
jnp
cld
out
popf
iret
mov
mov
mov
das
sahf
xchg
loopne
imul
loopne
adc
pop
je
mov
push
xor
in
into
je
das
cwde
ins
popa
xor
cmc
mov
cmps
fsubrp
outs
sbb
test
bound
mov
out
sub
out
(bad)
shl
push
pop
xchg
loope
ret
pushf
aad
jmp
lods
shr
pushf
inc
xchg
adc
sbb
jnp
cdq
sub
xchg
iret
cld
add
hlt
push
jge
push
stos
sti
add
ins
test
out
mov
mov
push
mov
and
push
cmps
jmp
push
inc
bound
daa
cmp
xchg
jecxz
sub
mov
jmp
aam
dec
fistp
jl
pusha
arpl
jnp
cmp
jg
and
or
add
clc
ins
aam
xor
xchg
sbb
pop
lock
cli
scas
outs
mov
inc
or
adc
je
loopne
popa
out
xor
jbe
xchg
in
jl
stc
repnz
cmp
ins
ss
sub
and
in
fwait
out
inc
adc
push
and
sar
push
loop
dec
jb
xchg
cmp
adc
(bad)
push
jne
hlt
pop
pop
ins
mov
in
jno
jl
sub
pusha
ror
lds
loope
mov
out
jno
sbb
mov
outs
and
rcl
cmp
retf
xchg
addr16
sbb
bound
cli
addr16
sbb
icebp
jne
adc
retf
dec
and
cmp
out
sub
shl
sbb
cmp
mov
jle
int
cmps
iret
in
xor
add
dec
mov
imul
mov
inc
cld
fmul
jo
xchg
pop
test
inc
inc
pop
jne
fxch
scas
push
pushf
iret
movs
ror
out
xchg
xor
sub
mov
push
ss
add
rcl
adc
push
iret
adc
push
inc
pop
fxch
icebp
sbb
sub
sub
xor
lock
cmp
(bad)
jecxz
daa
sahf
cmps
rcl
in
sahf
in
aad
arpl
call
push
popa
adc
mov
pusha
std
push
dec
mov
pop
out
mov
adc
dec
lods
inc
mov
adc
pop
pop
cwde
pop
mov
sub
push
push
sub
jmp
sahf
mov
and
or
add
push
xchg
fdiv
inc
mov
popf
test
pop
ret
cmc
ret
mov
dec
mov
mov
push
dec
adc
fisub
into
mov
mov
xchg
sbb
fnsave
pop
jb
mov
data16
push
je
mov
sub
mov
loop
pop
sub
jae
add
(bad)
pop
shr
mov
lahf
inc
xor
add
cmps
(bad)
(bad)
fbstp
and
xor
fcomp
ret
jb
and
fmul
push
in
dec
xchg
push
push
mov
push
loop
add
mov
not
fsubr
retf
call
adc
repz
enter
mov
(bad)
cwde
int3
xchg
ds
lds
mov
test
stos
shl
in
xor
leave
mov
and
das
int
pop
adc
int
sbb
cld
jmp
sbb
aaa
lock
imul
imul
lea
fucompp
push
shl
fisubr
mov
call
mov
pop
cmovb
test
lods
adc
ficomp
sahf
call
mov
mov
cmp
bsf
iret
mov
mov
pop
inc
pop
fstp
int
push
in
ins
mov
or
jmp
push
ins
adc
scas
(bad)
push
jnp
std
pop
jp
sbb
dec
dec
adc
cli
pop
dec
jmp
fsub
adc
pop
xor
push
arpl
add
xlat
mov
push
mov
in
dec
jmp
sub
int
dec
call
mov
and
cmp
dec
lahf
jge
mov
mov
out
inc
dec
mov
aam
sub
test
mov
pop
inc
mov
jns
and
sbb
and
sbb
(bad)
or
les
and
in
pop
aas
sub
push
(bad)
aam
hlt
xchg
adc
mov
(bad)
mov
mov
fild
push
lock
cld
shl
ds
jge
jp
gs
inc
and
xchg
stos
jmp
mov
jno
int
push
and
and
mov
ret
(bad)
scas
push
dec
mov
push
test
sbb
int
add
cmp
(bad)
rcr
cs
pop
jbe
fstp
call
jl
add
rcr
sub
inc
call
bound
jmp
and
mov
add
fcomp
or
fistp
movs
stos
xor
push
dec
push
adc
ds
jns
and
inc
test
xchg
adc
inc
xchg
or
stc
outs
stc
add
jne
jns
js
mov
lods
(bad)
imul
push
scas
rcl
out
fcomp
mov
push
mov
push
mov
dec
adc
adc
mov
xor
mov
popa
mov
(bad)
cmps
(bad)
shl
call
push
sbb
jp
mov
outs
shl
pop
push
sub
ret
jne
popf
rcl
pop
mov
repz
stc
fsubp
sub
adc
dec
mov
mov
pop
pop
test
int3
jmp
cli
test
aaa
out
(bad)
jno
mov
jno
adc
sub
xchg
scas
push
mov
sti
mov
pusha
jno
cdq
xchg
lock
mov
pop
retf
and
mov
enter
adc
pop
push
stc
sbb
inc
and
and
mov
sbb
sbb
popa
xor
sbb
adc
enter
(bad)
clc
cmpxchg
xor
mov
jo
stc
mov
inc
or
and
cmp
aam
cmp
cmc
adc
jge
inc
sbb
daa
sbb
push
pop
add
and
stos
add
mov
cmc
mov
mov
pop
icebp
aas
sbb
fild
das
iret
ss
adc
pop
sub
jbe
cmp
repz
icebp
js
iret
sub
sbb
aas
es
fbld
inc
in
adc
xchg
cld
jnp
(bad)
movs
into
outs
repz
hlt
xor
or
push
movs
cmp
add
push
adc
or
aas
push
test
out
loopne
cdq
pop
dec
jmp
jge
cdq
mov
pop
setb
mov
(bad)
outs
mov
stos
sub
cmps
push
(bad)
rol
stc
adc
lahf
test
inc
in
js
scas
movs
sbb
stos
mov
xor
addr16
xchg
xchg
and
add
mov
sbb
mov
inc
out
add
loope
sbb
cmps
jns
or
cdq
fld
mov
test
in
sub
bound
xchg
mov
and
sub
or
div
in
jb
push
xchg
xor
repnz
sbb
mov
or
ds
sub
jecxz
les
jmp
cmps
adc
mov
dec
xchg
xor
pop
popf
sbb
imul
jg
push
ds
in
mov
rcl
sbb
leave
stos
clc
jnp
cmps
jge
push
imul
out
jle
push
outs
fadd
int3
enter
lahf
push
mov
dec
aad
imul
or
cmp
xchg
sub
mov
xchg
sub
shl
sub
pop
add
and
mov
(bad)
jp
loopne
sub
js
dec
sti
inc
stos
cmps
stos
stc
sbb
mov
std
test
pusha
xchg
popf
add
sub
cmps
jge
xor
pop
pop
xor
mov
mov
aaa
in
dec
pop
fstp
pop
daa
push
dec
in
int
and
mov
imul
les
jecxz
xchg
mov
cmps
pop
fsubr
loope
jmp
out
dec
xchg
mov
mov
mov
xchg
jle
xchg
ficomp
stc
inc
xor
call
pop
test
ret
(bad)
loopne
and
lahf
inc
jnp
pop
adc
inc
pop
mov
out
sub
sub
jns
out
pop
fstp
popf
mov
sbb
mov
rcl
(bad)
les
cs
inc
mov
int
xor
out
mov
aad
xchg
call
outs
sbb
jge
mov
jbe
jl
out
and
pop
in
out
pop
jp
out
xchg
pop
push
cmp
mov
and
mov
mov
(bad)
xchg
pop
dec
sub
scas
jecxz
cmp
stos
inc
test
jne
xchg
inc
cmc
lods
hlt
sbb
jo
mov
fstp
pop
cmp
push
fstp
clc
dec
hlt
pusha
sbb
xchg
cdq
adc
xchg
(bad)
(bad)
jmp
ja
dec
out
push
loope
std
loope
leave
mov
adc
pushf
mov
mov
inc
enter
or
fild
sub
fdiv
(bad)
sub
(bad)
cmp
mov
inc
loop
adc
pop
mov
push
loopne
ds
jecxz
cs
ret
loop
popf
test
cmp
push
dec
inc
xchg
outs
jns
imul
test
movs
repnz
fstp
or
imul
retf
pop
mov
lock
in
test
xchg
adc
xlat
imul
addr16
out
outs
jl
rcr
fwait
loopne
test
xor
fnstenv
jno
sbb
jmp
outs
mov
ret
cmp
aaa
xchg
adc
jle
cmp
sti
scas
push
and
sbb
xor
jno
jbe
fcmovne
cli
ja
xchg
mov
lahf
jl
pop
pop
push
bound
and
push
loopne
std
inc
out
sub
inc
popa
mov
mov
jbe
mov
cdq
dec
or
out
inc
adc
cs
ds
mov
cmc
(bad)
push
dec
sbb
std
or
clc
movs
xchg
sbb
add
pop
aad
jne
dec
mov
cmps
in
retf
jne
xchg
ins
push
jns
lods
mov
repz
fbld
test
imul
or
sbb
jmp
xchg
push
fcmovnbe
cmps
pop
sub
ret
mov
pop
sub
into
arpl
mov
jbe
xchg
xor
mov
or
pop
adc
xor
ins
push
imul
cmp
in
add
pop
mov
xchg
idiv
inc
sbb
push
xor
add
hlt
in
outs
sub
mov
push
mov
mov
out
dec
retf
aaa
mov
jns
jmp
xor
stos
sub
pop
or
jmp
fcomp
(bad)
pop
movs
rcl
jbe
dec
sub
iret
pop
inc
retf
test
mov
pop
mov
push
aaa
push
adc
popa
sar
inc
cs
sar
cwde
mov
sbb
or
and
cmp
(bad)
mov
mov
pop
(bad)
int3
shr
sbb
sub
sub
retf
pop
cmc
xchg
mov
lock
jg
lock
xchg
pop
ret
pop
es
loope
(bad)
(bad)
movs
pop
jp
popa
sti
dec
arpl
push
(bad)
out
loope
lods
mov
sbb
retf
pop
loopne
push
shl
inc
xchg
fcomp
sub
mov
pop
in
ja
rcr
fcmovu
test
mov
ret
fisub
ds
gs
mov
aas
cli
pop
mov
test
mov
jae
and
adc
loop
xchg
xchg
xrelease
aam
mov
psllq
data16
mov
sub
test
mov
dec
rcl
sahf
cmp
dec
jle
test
ss
mov
push
lods
lock
or
aaa
movs
add
jae
out
das
cmc
inc
imul
(bad)
std
mov
sbb
popa
test
in
xor
call
(bad)
and
aad
(bad)
shl
pop
push
in
jmp
fcomp
not
cmp
mov
popa
add
mov
mov
ss
or
cmp
adc
cld
cmp
imul
in
jbe
mov
or
jb
push
pop
sar
in
inc
test
mov
iret
or
push
sub
push
dec
ret
ficomp
jecxz
idiv
gs
nop
dec
push
fsubr
(bad)
div
mov
test
dec
pop
xor
sub
xor
mov
dec
inc
jo
fxch
mov
and
adc
push
adc
adc
xor
mov
out
lods
cmp
in
add
lea
mov
scas
pop
pop
pop
in
dec
in
(bad)
jbe
call
ds
(bad)
fsubr
and
adc
sub
pushf
dec
call
fisttp
mov
mov
mov
cmps
push
jmp
in
xchg
push
push
push
adc
push
add
sub
jge
adc
push
cmps
jge
push
or
mov
test
shr
mov
dec
lahf
shr
inc
mov
mov
dec
(bad)
test
(bad)
cmp
and
out
jnp
inc
cdq
mov
push
mov
jmp
dec
sub
and
dec
ss
adc
add
add
fbstp
jle
sbb
dec
add
hlt
movs
push
dec
sub
loopne
mov
xor
jle
push
loopne
adc
lods
nop
push
pop
push
(bad)
sti
imul
mov
and
lock
xor
lods
sub
idiv
popa
icebp
jg
adc
cmp
out
repnz
xor
cli
mov
mov
ja
jbe
icebp
retf
jge
pop
pop
mov
xchg
dec
jb
inc
out
(bad)
in
scas
cld
sub
imul
retf
cmps
adc
push
xchg
pop
sahf
or
ret
sar
ftst
hlt
aas
cmp
arpl
idiv
add
push
call
mov
adc
lods
mov
aas
xor
or
lods
data16
popa
movs
ja
std
imul
mov
cld
mov
pop
imul
push
xlat
mov
scas
add
retf
xchg
mov
mov
xor
sbb
shl
fnstcw
shr
stos
idiv
push
sub
std
stc
adc
sar
(bad)
cdq
jp
inc
jmp
getsec
fimul
mov
pop
js
mov
shr
pop
fstp
loope
or
xchg
and
xor
jo
hlt
enter
call
jo
into
nop/reserved
jle
imul
jmp
xor
fstp
pop
pop
mov
jmp
in
ja
scas
popf
ret
std
cmp
push
scas
scas
or
mov
inc
je
jl
cmp
mov
cmp
dec
and
jl
cs
pop
jl
iret
jns
movs
leave
int3
sub
fidiv
mov
and
add
cmp
add
mov
sbb
iret
jo
mov
out
xlat
aaa
fmulp
and
scas
xor
add
idiv
stc
xor
cmp
lock
push
xor
loope
inc
fbld
test
mov
push
jl
or
(bad)
imul
test
cmc
add
push
fdiv
pop
and
data16
inc
dec
add
sbb
pop
xor
leave
out
das
inc
mov
add
je
adc
repnz
dec
cmp
jecxz
add
outs
out
ins
xchg
aas
lds
mov
ret
cmp
mov
stos
sub
loopne
pop
clc
pusha
arpl
(bad)
int
out
rcl
mov
jge
fld1
push
push
mov
mov
in
xor
xor
jbe
mov
jbe
xor
and
les
call
arpl
mov
xor
jle
fild
and
mov
les
inc
xlat
mov
aad
in
xor
call
popa
ja
sub
fisub
mov
fstp
sbb
ins
dec
mov
aaa
sbb
push
daa
jmp
pushf
push
xor
mov
push
(bad)
xchg
imul
fcom
in
and
cs
(bad)
jg
pop
mov
jnp
loopne
ja
jns
cdq
leave
or
imul
test
and
adc
xor
daa
pop
pop
hlt
lods
lods
xchg
xlat
jge
sahf
scas
push
(bad)
dec
cwde
add
clc
dec
add
push
sbb
inc
xchg
aas
fistp
frstor
push
ins
fiadd
jo
inc
je
in
mov
cmp
shl
sub
and
ret
jno
jnp
mov
add
mov
cmp
cwde
cmc
fs
add
mov
cmps
xor
push
int3
mov
std
push
leave
sbb
mov
es
dec
fsubr
out
pop
mov
int
pop
pop
or
add
inc
loopne
ror
aad
loope
push
loope
sahf
lods
xor
mov
loope
arpl
stos
ja
popf
pop
rcr
pop
out
loop
inc
in
push
movs
inc
dec
mov
push
cmp
xchg
cmp
add
jnp
mov
es
mov
jl
dec
out
mov
or
push
or
xor
sbb
out
nop
movs
ret
or
dec
push
mov
xchg
inc
sbb
dec
cli
mov
addr16
jg
cmp
fild
call
aam
push
cmc
mov
ret
out
cmps
out
lds
cmp
inc
lods
ss
xor
sti
or
mov
inc
lods
scas
(bad)
or
fdecstp
pop
pop
mov
mov
inc
mov
mov
mov
xchg
stos
adc
push
or
add
loopne
dec
cmp
sub
jle
lock
in
enter
enter
push
std
sti
or
fimul
jne
test
ja
inc
pop
(bad)
(bad)
in
test
pusha
xchg
hlt
leave
push
in
movs
(bad)
call
int
xchg
sahf
in
fucomp
icebp
cli
mov
mov
pop
sbb
pop
pop
loope
cmps
or
cwde
scas
adc
and
sub
mov
jmp
add
push
or
adc
(bad)
mov
fsubr
inc
inc
inc
aas
add
jmp
imul
jmp
xor
call
mov
xchg
inc
jo
xor
or
leave
int
cmp
push
sub
jmp
sbb
sub
cs
stos
into
rcl
sub
mov
sbb
rol
jmp
cmc
jbe
jmp
push
xchg
jg
push
scas
pop
sar
ss
fst
xchg
pop
dec
xor
pusha
sub
test
cld
push
inc
sbb
dec
adc
xlat
adc
(bad)
sti
inc
xor
mov
shr
stos
pop
adc
jbe
xchg
sub
icebp
bound
dec
xor
popf
test
and
outs
into
cmps
and
fsub
mov
out
and
xor
pop
sub
jns
movs
lds
pushf
cs
retf
jae
inc
jmp
inc
ficomp
cmps
inc
mov
jbe
sub
pop
mov
popf
nop
push
imul
out
enter
inc
(bad)
cmp
or
fadd
test
enter
mov
iret
cld
mov
inc
lock
jnp
fsub
inc
pop
xacquire
fimul
cwde
mov
and
push
pop
hlt
mov
mov
call
pop
push
adc
fisubr
ins
inc
(bad)
lds
retf
xchg
or
div
aam
dec
cwde
(bad)
dec
stc
lods
retf
add
mov
add
xchg
mov
fidivr
jecxz
cmp
sar
(bad)
fisttp
mov
loope
mov
scas
jno
xor
sbb
cmp
pop
bound
imul
sub
add
mov
outs
inc
cmp
out
ret
xor
movs
ror
sbb
fstp
test
mov
mov
aas
inc
std
fdivr
sub
fstp
xchg
push
add
scas
div
fcomp
or
xchg
shl
cmp
mov
push
sub
mov
push
addr16
je
push
cmps
or
pop
stos
pop
dec
add
sub
loope
pop
push
add
dec
sahf
cmc
in
or
xchg
fs
mov
pop
cs
es
stos
ja
test
gs
lds
push
jp
scas
lea
or
mov
mov
pop
push
daa
rcl
jp
xlat
cmps
dec
cmps
xor
psubusb
or
add
(bad)
cld
shr
aaa
jle
sbb
(bad)
fnstcw
loopne
cmps
stc
ins
or
add
sub
push
cs
jne
inc
iret
mov
xchg
mov
ss
jecxz
mov
adc
push
pop
test
rcr
and
xor
jp
jbe
sbb
retf
test
dec
mov
shl
inc
dec
out
imul
call
sub
mov
call
add
xchg
ds
imul
clc
add
nop
jne
pop
adc
hlt
out
push
cld
push
fs
test
cmp
rol
push
je
mov
mov
out
xor
lahf
sbb
dec
inc
mov
inc
movs
lahf
test
cmp
imul
int3
scas
push
mov
nop
add
ret
jb
or
cdq
mov
clc
add
outs
ins
xchg
push
pop
stos
xchg
into
push
shr
cmp
jno
adc
pop
adc
jno
sbb
or
shl
adc
cmp
fisttp
fisttp
pop
rcl
push
loop
fadd
ds
pop
les
jne
test
aaa
push
popf
jmp
mov
push
sub
(bad)
sbb
imul
or
test
retf
cmp
xchg
jecxz
iret
test
mov
add
mov
ja
xor
push
fcmovnu
cmp
xor
jle
jbe
test
bound
aas
lahf
jecxz
movs
mov
sti
xchg
push
pop
lods
cmps
mov
xchg
pushf
or
cmp
in
out
not
(bad)
cs
mov
scas
push
mov
cmp
xor
in
adc
(bad)
cmp
sub
sahf
dec
mov
xchg
out
div
fbstp
jbe
lds
pop
test
mov
(bad)
repz
mov
mov
imul
ins
ins
add
retf
push
stos
inc
out
xchg
inc
outs
ins
mov
or
or
cmc
rol
loopne
and
push
add
adc
mov
std
test
stos
leave
adc
out
aam
mov
jb
rol
and
js
aas
pop
xor
cs
mov
xchg
add
iret
xchg
aam
stc
sub
outs
push
cmps
or
fwait
adc
mov
andps
pop
sahf
sub
xlat
scas
ins
dec
std
rcr
iret
fst
out
mov
pop
jb
fadd
fnstcw
in
push
nop
and
ror
xor
pop
ins
mov
xchg
sar
mov
jmp
jns
mov
lahf
pop
les
xor
push
(bad)
and
xchg
repz
mov
cmp
outs
imul
cmp
sbb
pop
fidiv
mov
repnz
cld
mov
bound
cmc
inc
scas
out
arpl
test
aaa
push
rcl
neg
cmp
sbb
jecxz
ds
aas
xchg
sbb
jnp
xchg
add
xor
cmp
xchg
ret
fstp
ja
pop
pop
shr
xor
fcomi
ret
std
cmp
popf
xor
mov
push
loop
lods
push
ror
not
stc
add
adc
aam
ret
stos
ret
scas
xchg
or
jns
mov
mov
xchg
(bad)
popf
js
jns
test
retf
std
xor
dec
gs
push
sub
popf
outs
push
cmps
repz
mov
push
fwait
jo
pop
push
fwait
enter
cmps
test
inc
fisttp
jecxz
ds
mov
fwait
jle
mov
xchg
sahf
repnz
mov
mov
sub
repnz
into
mov
shl
xchg
call
aas
dec
in
inc
mov
out
ins
push
jb
rol
test
cs
cdq
mov
push
fucomi
scas
cwde
sti
add
adc
mov
pop
push
in
pop
jae
mov
das
cmovg
dec
mov
leave
xchg
sub
fiadd
int3
rcl
stos
movs
popf
mov
(bad)
or
loopne
cdq
neg
xor
leave
enter
push
add
add
xor
sub
jge
push
jmp
sbb
mov
xchg
jbe
sbb
shl
nop
jl
sbb
out
cmps
dec
xchg
rcr
inc
adc
faddp
dec
jbe
movs
add
cmps
mov
mov
fdivrp
and
jl
jnp
jge
mov
sbb
jo
punpckhbw
xor
or
bound
xor
xchg
movs
div
xchg
daa
xor
xor
adc
xchg
call
and
jns
clc
sbb
mov
xor
pusha
or
jo
into
dec
shl
push
jle
mov
push
ins
fcmovnbe
shr
sub
pop
cmp
or
outs
fwait
cmp
mov
jne
dec
adc
shl
outs
test
pusha
stos
cli
js
xchg
int
mov
xchg
push
mov
jmp
(bad)
fidiv
mov
mov
dec
hlt
push
or
lock
jecxz
inc
sub
adc
pop
in
jecxz
cli
xor
push
retf
jns
pop
mov
dec
repz
int
push
xchg
add
sar
dec
ret
push
push
sbb
ins
jae
hlt
call
and
xchg
or
adc
xor
jo
fwait
data16
push
retf
les
mov
inc
push
jecxz
cmp
loope
je
iret
xchg
lock
mov
ret
jno
jmp
(bad)
jl
mov
mov
xor
(bad)
mov
fnstsw
xor
jle
cmps
sbb
pop
push
retf
(bad)
fisttp
xor
add
(bad)
push
fistp
fst
push
push
xchg
xchg
and
mov
ja
mov
fist
jmp
in
test
sahf
loop
into
jge
ja
jp
adc
xchg
mov
jmp
mov
mov
push
dec
sbb
jecxz
fstp
push
pop
iret
jge
(bad)
sbb
sub
dec
pop
mov
and
dec
lahf
outs
std
xor
xchg
leave
ret
mov
cwde
rol
in
mov
cmp
bound
adc
sbb
xchg
sar
ds
sahf
ss
shl
dec
jmp
and
neg
shr
add
cmps
cmc
stos
mov
mov
add
and
jl
jmp
sbb
js
xor
outs
add
ja
pop
icebp
in
jbe
pop
or
in
cmc
pop
adc
pusha
inc
push
push
sbb
sub
push
and
push
pop
sub
pop
dec
out
enter
stos
rcl
cmp
and
(bad)
ds
jmp
or
xchg
jge
xchg
daa
icebp
mov
inc
ja
fistp
jne
mov
add
fadd
pop
cli
cs
fwait
dec
cmp
popa
scas
mov
cmps
xchg
iret
retf
mov
gs
stos
jb
scas
dec
sbb
mov
sub
push
ja
pop
jb
push
pop
es
xchg
push
sbb
ret
xchg
mov
mov
mov
jl
hlt
in
mov
retf
outs
dec
jno
shl
aad
scas
mov
fadd
push
mov
sub
(bad)
and
push
in
jae
(bad)
adc
retf
add
icebp
jp
mov
sub
push
fld
imul
adc
psubb
mov
int3
xor
ins
inc
dec
mov
neg
mov
imul
push
adc
ja
cmp
mov
or
and
repnz
enter
xchg
mov
pop
repz
mov
push
push
fisub
sub
(bad)
mov
xchg
or
cmp
dec
ds
push
push
call
jnp
cmp
sbb
push
nop
dec
mov
mov
ja
mov
rcl
inc
xchg
dec
out
sub
cld
jl
retf
add
gs
dec
add
aaa
xor
xor
jbe
xor
(bad)
not
xlat
into
aaa
mov
fs
fsubr
dec
mov
dec
xor
scas
xchg
xchg
adc
mov
or
mov
jge
and
jg
xchg
jp
in
shl
jge
dec
shl
rol
ds
and
lods
xchg
pop
test
xor
jns
fldenv
dec
loope
sbb
jle
mulps
arpl
mov
dec
out
xchg
jg
pushf
mov
(bad)
adc
test
pop
push
adc
out
pusha
(bad)
loope
pop
jmp
add
add
ja
lock
sub
xchg
fsub
jno
push
cmp
scas
adc
faddp
imul
and
(bad)
pop
mov
inc
xchg
push
(bad)
adc
or
dec
push
cdq
shl
push
mov
inc
add
mov
jbe
loope
sbb
xchg
mov
and
in
or
push
or
mov
addr16
or
jnp
cmc
push
ds
cmc
sub
fucomip
ret
mov
add
ss
aaa
mov
or
stos
dec
daa
add
mov
out
int3
lea
dec
push
adc
and
jmp
pop
(bad)
clc
xor
cmps
dec
daa
test
in
inc
mov
pop
mov
stos
ins
sub
jp
fimul
pop
lea
inc
pop
add
int
sbb
jmp
hlt
mul
mov
mov
jae
jno
test
jae
dec
pusha
shr
cmp
dec
xlat
sbb
shl
test
shl
scas
fs
jl
rol
shl
popf
pop
out
jge
dec
mov
lods
cmc
test
shl
ins
pop
inc
repnz
stos
mov
scas
push
stos
jecxz
lock
xor
xor
or
pop
cmp
xor
idiv
dec
ins
sti
mov
and
pop
jmp
lods
xor
sar
mov
call
jno
(bad)
cs
mov
push
cmp
dec
sbb
xor
in
cmp
in
inc
fcom
sub
icebp
jg
icebp
ror
and
imul
mov
push
(bad)
out
adc
mov
cmp
push
xor
js
ins
jp
pop
push
gs
inc
lahf
add
popa
cmp
jp
(bad)
push
outs
and
dec
sbb
push
sub
dec
jnp
adc
jle
movs
or
das
jno
add
bound
cli
xor
in
popa
pop
jae
pop
mov
ss
daa
movs
add
cmp
std
pop
aad
aaa
mov
ss
dec
(bad)
pop
dec
mov
cmc
test
movs
test
not
inc
sub
rcl
arpl
mov
push
ret
push
mov
dec
jl
cdq
scas
(bad)
cmps
mov
add
in
jl
mov
sti
jle
pop
push
jne
ja
mov
push
dec
js
jmp
jns
or
mov
(bad)
(bad)
xor
push
mov
xlat
xchg
jl
inc
leave
lods
je
je
shr
and
push
sahf
(bad)
lods
push
clc
sub
outs
dec
loopne
repnz
ss
push
lahf
cmp
xor
jne
pop
inc
sub
push
mov
mov
mov
sbb
movs
(bad)
push
inc
test
ret
mov
pop
push
cdq
push
push
push
stc
repz
fwait
not
cld
add
dec
cmp
push
jb
push
xchg
mov
rcl
call
lods
push
js
clc
mov
out
sbb
mov
ins
pushf
retf
jnp
inc
(bad)
sub
outs
or
mov
jno
cmp
mov
in
jns
mov
mov
movs
add
pop
sahf
mov
pop
and
inc
das
pop
arpl
ror
enter
xor
add
(bad)
sbb
and
in
pushf
xor
fnsave
dec
dec
arpl
or
retf
dec
mov
imul
jmp
cmp
sbb
into
pop
mov
jmp
dec
push
pop
fld
into
retf
dec
inc
bound
xor
dec
mov
jbe
push
xchg
inc
xor
mov
xchg
in
pop
or
sti
jp
inc
sub
fistp
gs
call
xchg
mov
inc
sahf
icebp
and
mov
ret
push
mov
sar
pushf
xchg
jl
adc
popf
loop
mov
mov
push
and
push
sbb
test
lahf
cmps
mov
loope
rol
sub
bound
inc
hlt
mov
sub
ror
sub
repnz
dec
push
adc
mov
inc
inc
pop
test
mov
stc
mov
and
or
das
jmp
mov
add
(bad)
inc
push
push
xor
in
enter
pop
movs
pop
adc
mov
repz
xor
jp
fwait
xchg
call
mov
and
or
xchg
push
sub
xchg
lods
xchg
mov
dec
test
dec
les
in
push
loop
xor
fwait
test
or
jg
sub
push
cmps
mov
in
xor
mov
cmps
pop
test
les
paddusb
jbe
call
jmp
fadd
cld
ret
jae
fs
repnz
ret
sbb
push
pop
out
push
mov
aas
int
aam
sbb
mov
(bad)
ins
sub
inc
jnp
int
outs
pop
push
call
sbb
retf
sbb
mov
fistp
dec
sbb
sub
add
and
add
int3
stos
or
or
(bad)
dec
push
outs
out
inc
pop
into
xchg
ds
data16
ins
sub
and
je
push
inc
ins
xchg
fstp
inc
adc
xchg
inc
test
test
fiadd
xor
and
movs
sbb
je
dec
outs
out
add
rol
xor
popf
cmp
(bad)
in
mov
leave
sbb
jmp
pop
cmp
and
mov
xor
outs
gs
and
call
sub
and
mov
adc
jecxz
adc
xchg
cmp
ins
mov
add
mov
dec
std
aad
pop
and
push
loopne
ficom
mov
push
div
xchg
jge
jne
(bad)
call
push
(bad)
repz
popf
addr16
(bad)
mov
jne
push
ins
and
cwde
(bad)
push
xchg
mov
dec
mov
mov
mov
cld
pop
add
std
enter
(bad)
jbe
pushf
data16
xor
test
sub
hlt
loopne
ds
cli
adc
(bad)
test
faddp
xlat
ror
pop
fisubr
push
shl
push
pop
dec
leave
dec
or
pushf
mov
adc
aas
pop
int3
js
rcr
or
test
mov
add
xor
pop
not
jno
mov
mov
retf
mov
dec
dec
out
jle
push
dec
bound
mov
repz
xor
xor
mov
inc
rcl
pop
mov
ja
inc
out
mov
scas
ins
dec
leave
into
push
sbb
into
xchg
add
movs
xor
les
shl
sahf
and
push
into
js
mov
xchg
mov
sbb
xor
scas
cmp
dec
or
test
xchg
jo
jle
lods
xor
es
mov
jo
retf
loop
movs
or
mov
jl
cmc
sub
xor
gs
or
jmp
pop
cmp
nop
or
jmp
xchg
stos
inc
xchg
xor
xor
mov
repz
push
inc
fnsave
mov
fdiv
add
test
mov
xchg
ret
inc
pushf
mov
shl
jp
cld
ss
scas
cld
sub
call
jmp
ret
dec
jnp
test
pop
imul
mov
inc
jnp
dec
in
lahf
sbb
adc
sahf
or
cmp
sar
idiv
dec
push
lahf
sbb
xchg
push
addr16
pop
loopne
sbb
inc
popa
hlt
xor
int
outs
push
outs
xchg
xchg
adc
dec
jb
aam
sbb
sub
sbb
call
cmp
xor
and
loop
in
pushf
push
and
in
mov
(bad)
sub
dec
iret
cmp
sub
mov
das
cmp
aad
push
retf
sbb
push
gs
jmp
cmps
popf
or
pop
pop
mov
dec
shr
fwait
inc
cmp
dec
push
fadd
sbb
pop
shr
cwde
xchg
hlt
fnstcw
push
xchg
loop
jp
pop
jne
js
inc
in
pusha
(bad)
cli
pop
mov
stc
add
sub
jnp
jl
pushf
jno
and
je
jo
mov
pop
jbe
cmc
std
bound
test
ss
jae
movs
cmps
js
out
xchg
cwde
pusha
js
inc
jp
cmp
jp
mov
call
sbb
fs
push
pop
xchg
or
mov
pop
lods
(bad)
clc
fidivr
movs
int
lock
lock
push
mov
(bad)
cwde
bound
cmps
cmp
inc
mov
push
iret
jl
cmp
pop
mov
jl
ins
or
jae
fisttp
outs
push
out
ins
lea
std
sub
cmp
out
lahf
jb
mov
jge
ins
std
dec
adc
sbb
js
sbb
in
add
ins
pop
xchg
mov
out
(bad)
mov
add
mov
pusha
out
dec
movs
bnd
int
arpl
lods
movs
rcl
bound
ret
sbb
rcl
int
rol
fwait
aaa
sbb
mov
(bad)
pusha
shl
jns
jo
jle
or
xor
mov
mov
xor
adc
fdiv
mov
(bad)
jp
mov
pop
(bad)
fsub
fcomp
out
push
mov
inc
leave
or
jmp
fcom
sahf
mov
scas
sbb
aaa
jnp
sbb
or
mov
arpl
fwait
jp
clc
scas
pop
daa
xor
mov
pop
lods
sbb
arpl
mov
retf
or
test
mov
cmp
dec
cmp
push
es
or
popa
dec
push
mov
sbb
push
lea
pusha
call
dec
in
rol
into
sbb
cld
loope
sub
dec
ret
push
adc
mov
mov
adc
push
mov
loop
or
jmp
sub
mov
inc
xor
jge
mov
aam
pop
jno
mov
lock
loope
adc
and
mov
cld
sub
in
icebp
cld
call
pop
pop
mov
mov
push
std
cmc
adc
ins
and
add
adc
pop
les
mov
xlat
out
aad
int3
adc
mov
jae
ja
lea
sub
push
adc
mov
mov
pop
xchg
shr
dec
mov
rcl
mov
and
ret
sar
fild
dec
arpl
in
cmp
out
inc
jecxz
or
add
mov
add
jle
jae
xchg
mov
add
bound
xor
(bad)
jno
pushf
imul
cmp
xor
stc
sbb
not
nop
into
sahf
xchg
push
xchg
stc
add
es
loopne
sbb
mov
cmp
xchg
xor
mov
add
push
imul
add
and
inc
pop
or
adc
sti
loop
xor
xchg
push
mov
jp
sahf
add
(bad)
xor
xchg
xor
test
pop
fcmovb
dec
scas
adc
xchg
into
repz
popa
cmp
jne
sub
movs
inc
cmp
xchg
cmp
les
clc
mov
lods
imul
jo
or
add
cld
add
and
push
xor
idiv
mov
dec
add
sar
jne
stos
add
cmc
cs
push
lods
fisubr
dec
lock
sbb
jl
fdiv
inc
loop
xor
jp
push
ror
pop
or
mov
and
gs
xchg
es
dec
mov
mov
scas
jmp
xchg
mov
mov
call
jmp
neg
mov
jl
dec
int3
push
mov
mov
sub
sbb
add
test
xchg
in
repz
daa
daa
rol
jno
jle
fst
dec
mov
fdiv
xlat
push
outs
add
sbb
lds
push
imul
imul
sar
xlat
retf
cmp
xlat
je
or
loopne
and
xor
sbb
mov
or
movs
sbb
(bad)
data16
push
push
mov
cs
jmp
out
ins
push
mov
movs
push
test
or
jp
call
mov
movs
push
adc
sub
push
cwde
dec
mov
jno
inc
cmp
rol
sub
add
xchg
xor
stos
cli
sub
clc
push
cmp
(bad)
inc
(bad)
adc
and
dec
xor
stos
cwde
mov
inc
push
push
fistp
fbld
mov
je
sti
mov
stos
popf
inc
cmp
adc
popf
movs
nop
dec
je
iret
imul
mov
xor
mov
xchg
sub
in
inc
in
pop
jae
pushf
or
pop
sahf
ret
fnsave
retf
or
dec
pop
jmp
les
pop
mov
sbb
jp
scas
jo
jmp
or
jnp
dec
bound
dec
push
jl
or
in
pop
jg
enter
cmp
iret
fisttp
add
xor
aad
dec
pop
jns
shl
jmp
dec
sbb
inc
gs
push
xchg
mov
repnz
sub
mov
cld
je
mov
xchg
test
or
mov
leave
inc
cmps
mov
sbb
lds
or
or
jle
dec
xchg
dec
pop
jle
xlat
clc
int
(bad)
loopne
add
hlt
das
sbb
dec
inc
xchg
or
sahf
or
and
mov
mov
inc
and
inc
add
ds
adc
inc
cmp
in
hlt
push
sbb
call
js
sub
xchg
jne
stos
lock
sbb
mov
cmp
cmp
vpshuflw
and
shr
push
(bad)
aas
aad
(bad)
pop
jbe
and
sbb
xchg
fmul
inc
loope
aam
lock
sub
movs
lods
inc
mov
out
dec
pop
cmps
pop
jbe
sti
mov
and
mov
es
xor
lock
mov
test
aam
ins
xchg
es
in
cmps
call
stos
ficom
push
jnp
rdtsc
add
adc
aas
xchg
cmp
xchg
add
push
sti
out
cld
jnp
mov
mov
push
test
cmp
cmps
out
push
jp
ret
loop
push
xor
out
test
add
int3
stos
lea
clc
sbb
es
cmp
daa
pop
sbb
repnz
inc
mov
stos
neg
push
jl
sbb
dec
adc
push
inc
outs
fidiv
push
push
loop
xchg
xor
hlt
stos
cwde
pop
das
stc
dec
or
add
pop
dec
movs
add
shr
jmp
out
xor
outs
cdq
dec
push
sbb
repnz
xor
or
rcl
adc
inc
shl
xor
and
into
out
gs
or
retf
push
sbb
jae
popf
popf
fwait
mov
daa
dec
add
ja
jmp
div
add
(bad)
jmp
in
lds
fild
cdq
iret
imul
mov
repz
dec
aad
mov
test
xor
into
and
xchg
nop
cs
adc
ds
fcom
loopne
mov
test
or
aas
jmp
mov
imul
lds
cld
test
jae
mov
movs
or
add
dec
xor
cmp
mov
or
(bad)
mov
add
std
imul
dec
pop
and
xchg
jno
fsubr
inc
push
test
inc
and
xlat
mov
ret
aaa
mov
mov
dec
inc
ret
scas
xchg
push
cmps
sti
frstor
jb
push
outs
pop
div
mov
sub
int3
int
test
sbb
add
add
hlt
xchg
mov
out
push
jle
mov
das
shl
div
xor
sub
mov
jno
xor
add
cmps
(bad)
ror
dec
movs
mov
mov
mov
cdq
(bad)
cmp
pop
xor
sbb
jecxz
popf
cdq
cdq
push
imul
dec
mov
cmp
adc
or
push
and
aad
movs
addr16
into
call
call
enter
push
lock
sbb
out
push
ds
xchg
push
inc
xor
cwde
cmp
stos
test
xchg
aad
addr16
adc
jmp
dec
inc
mov
int
lods
pop
mov
inc
(bad)
mov
xchg
fmul
call
xchg
jno
in
pusha
push
lds
dec
mov
fidivr
or
repz
out
es
pop
icebp
(bad)
push
jmp
int3
pusha
inc
fld
mov
xor
mov
push
ins
mov
push
ror
xor
sbb
pop
(bad)
push
push
jecxz
cmps
xchg
mov
ds
inc
enter
push
or
push
call
cmp
leave
or
and
cli
std
mov
jg
mov
cmp
or
sub
or
retf
rcr
xchg
sar
add
cdq
(bad)
in
stos
adc
pop
push
test
rol
mov
xchg
popf
lds
cmp
push
cli
cmp
mov
xchg
js
(bad)
mov
sub
cmp
mov
ror
pushf
jmp
ins
sbb
sbb
jg
repz
push
lock
or
xchg
stos
pushaw
pop
xchg
xchg
in
xchg
mov
cmp
arpl
sti
or
popf
or
add
push
test
mov
or
sub
mov
or
cmps
into
frstor
aas
mov
test
and
inc
cmps
(bad)
(bad)
cmp
push
shl
jle
mov
int3
sahf
jo
mov
inc
(bad)
outs
cmp
sub
add
dec
addr16
fwait
push
into
loope
jns
sahf
enter
int
inc
jns
mov
mov
in
out
in
mov
aam
inc
loope
retf
mov
stos
sbb
aaa
add
add
add
xor
mov
jmp
cmp
add
xchg
loope
or
fstp
mov
fldcw
hlt
not
rcr
ja
lea
dec
(bad)
pusha
pop
dec
cmp
loopne
lahf
(bad)
cmps
mov
dec
fnsave
sub
push
enter
mov
push
cmp
sbb
mov
mov
add
ja
and
push
sub
mov
nop
in
mov
mov
hlt
cmp
and
ret
fucomi
(bad)
leave
xchg
and
std
inc
jnp
dec
clc
ret
arpl
leave
js
sahf
test
fwait
shl
pop
imul
jmp
movs
into
xchg
in
imul
movs
stos
int
leave
es
mov
add
mov
mov
add
dec
mov
and
pop
ret
jecxz
les
call
sbb
mov
sbb
imul
dec
jno
xor
mov
xor
icebp
mov
xchg
pop
pop
imul
add
inc
fist
mov
fist
mov
mov
mov
push
lahf
mov
pop
push
(bad)
hlt
adc
add
mov
imul
jmp
loope
in
or
ficomp
jp
add
fs
imul
out
imul
hlt
out
push
lock
dec
xchg
aaa
xchg
mov
pusha
fwait
sbb
ds
test
inc
movs
int
test
push
mov
dec
mov
or
fdivrp
add
fist
mov
loop
or
es
in
or
mov
xchg
mov
jp
test
jmp
jp
int
and
pop
cwde
ss
mov
sub
retf
dec
leave
push
lahf
cmp
(bad)
shr
dec
mov
push
test
wbinvd
fisttp
sub
scas
xchg
mov
jns
les
or
sub
das
cmp
sbb
adc
inc
out
add
aam
mov
repnz
das
and
jmp
sub
push
sub
or
and
and
mov
inc
xor
jmp
mov
xor
cmp
outs
stos
add
fsub
xchg
loop
cmp
popa
inc
push
mov
dec
loope
fdivr
(bad)
push
xchg
mov
sub
xchg
out
jno
inc
data16
sbb
mov
fwait
mov
sbb
popf
adc
in
repnz
imul
jae
sub
push
movs
imul
call
inc
jb
aad
leave
out
int
not
popf
inc
mov
test
mov
mov
psadbw
xor
pop
mov
stos
lahf
xor
xor
aad
or
dec
push
and
cdq
ins
cmp
les
jae
stc
in
mov
shl
test
dec
xor
add
jno
cmp
add
sub
pusha
movs
loop
or
out
call
pshufw
mov
ins
and
in
scas
inc
add
outs
(bad)
cmp
(bad)
fnstenv
retf
mov
inc
retf
or
jno
sub
call
aad
xchg
sti
push
xor
xchg
cwde
popa
pop
daa
fnstsw
out
(bad)
pop
mov
jnp
test
pop
add
sub
in
jge
adc
add
addr16
nop
or
and
cmps
sub
pop
loopne
jg
stc
mov
jo
mov
or
call
dec
jmp
dec
stos
adc
add
and
pop
push
inc
dec
fild
movs
mov
aam
ja
dec
jmp
sub
xchg
in
imul
xchg
jl
pop
xor
jbe
cdq
jl
jg
pand
aam
imul
sbb
imul
jp
mov
add
xchg
cli
cs
mov
dec
cmp
mov
cmc
cmp
jns
pop
mov
bound
mov
mov
mov
xchg
mov
fs
adc
pop
push
inc
inc
mov
cwde
fcmovbe
mov
cmc
sti
mov
cmp
push
mov
in
mov
mov
scas
mov
inc
iret
fs
sbb
aaa
inc
loopne
imul
dec
jge
adc
out
loopne
repnz
xchg
bnd
jae
sbb
in
sbb
sub
icebp
test
cmps
dec
mov
(bad)
adc
dec
push
adc
inc
pop
push
loope
imul
stos
mov
mov
fadd
xlat
fld
xchg
rcl
jno
mov
jecxz
je
movs
sub
xchg
int
add
inc
xlat
and
mov
lahf
(bad)
and
test
add
dec
jmp
out
int
or
push
bound
call
sbb
ins
hlt
out
in
xchg
pop
dec
cmp
dec
fist
ret
cmc
or
pop
mov
adc
test
in
mov
mov
in
inc
lock
hlt
jp
pop
add
fsub
js
loope
pop
(bad)
loopne
inc
std
push
mov
cmps
sbb
inc
inc
dec
xor
sbb
int3
mov
loope
sbb
mov
xchg
mov
dec
test
push
aad
xor
and
lea
ja
pop
mov
xor
mov
in
rcl
aad
sar
mov
(bad)
sub
mov
(bad)
jg
std
inc
mov
setno
adc
sub
ins
mov
mov
lea
xchg
lods
jns
es
mov
in
retf
jbe
cs
in
xchg
cld
add
jg
int
dec
dec
sbb
outs
mov
outs
xor
hlt
add
and
mov
or
push
fsubr
int3
mov
mov
test
js
mov
mov
pop
sub
add
gs
xor
inc
push
sub
jmp
inc
mov
mov
cdq
(bad)
lock
loopne
movs
inc
je
out
add
inc
mov
cli
lods
mov
jns
cmps
popa
call
xchg
pop
sbb
pop
ja
add
test
sbb
adc
sar
xchg
(bad)
mov
push
mov
pop
dec
xor
add
imul
cmc
(bad)
mov
lods
jmp
cli
mov
cmp
test
loop
jecxz
(bad)
mov
popa
add
sbb
scas
ret
mov
xchg
lock
mov
neg
sub
imul
retf
jns
out
rol
jne
idiv
mov
adc
add
outs
data16
inc
xlat
pop
jbe
sbb
es
dec
mov
loopne
and
pop
int
(bad)
fadd
inc
cld
ret
fst
das
mov
cmps
sub
or
lea
push
sub
adc
stos
into
(bad)
cwde
je
mov
hlt
pop
inc
push
pop
or
fst
sub
push
mov
push
sub
imul
retf
mov
fstp
cmc
pop
add
aas
mov
cmps
sbb
lea
jae
sub
push
push
test
addr16
rcr
fisubr
rol
jge
cwde
lahf
cmp
into
out
imul
add
(bad)
push
sti
jbe
jl
dec
cmp
fsubr
push
push
pusha
outs
aaa
xchg
cmps
ret
pop
(bad)
test
dec
mov
jp
out
xchg
js
aas
dec
arpl
push
cli
or
mov
adc
lds
sub
ror
je
fisttp
(bad)
sti
and
and
pop
sub
jle
push
test
pusha
xchg
sub
jbe
add
cmp
in
add
scas
sub
push
rcl
inc
add
push
fs
fbstp
or
(bad)
push
(bad)
(bad)
adc
call
add
jns
dec
icebp
mov
mov
mov
fidivr
(bad)
dec
add
dec
sti
cmps
sbb
adc
mov
aam
les
mov
scas
push
sub
push
mov
sub
gs
(bad)
xchg
xlat
xor
test
jmp
mov
test
and
or
fcmovnb
fsub
repnz
or
and
scas
and
in
shr
fcomip
out
or
test
(bad)
bound
retf
ret
sub
jp
loop
mov
out
push
push
stos
xlat
imul
leave
push
or
jg
pop
xlat
aad
mov
in
faddp
sub
nop
(bad)
add
(bad)
pop
ins
ret
in
xchg
mov
int3
sbb
scas
or
imul
sbb
push
movs
ins
cmps
pop
push
cld
mov
das
lds
xchg
pop
push
mov
push
js
mov
pop
jge
jmp
mov
jg
movs
scas
jge
ss
rcr
inc
add
into
cli
mov
mov
sbb
sbb
cli
push
ja
dec
pusha
in
das
stos
adc
in
inc
add
xchg
inc
add
cmc
fs
(bad)
jne
loope
daa
cld
push
cwde
inc
fcmove
dec
xchg
gs
sti
mov
hlt
les
repz
sub
sub
sbb
loopne
sub
out
scas
sbb
in
push
ins
jb
adc
push
add
sbb
push
mov
(bad)
scas
sbb
mov
in
loopne
xor
or
mov
ins
lock
ins
cmp
adc
xor
push
push
mov
sub
pushw
fnstcw
push
imul
sbb
xor
fild
push
je
popf
dec
fisttp
xor
(bad)
loop
and
icebp
sub
sbb
xchg
cli
dec
(bad)
add
fiadd
cmp
int3
scas
mov
push
mov
ins
adc
out
(bad)
punpcklwd
adc
adc
mov
clc
mov
repnz
xchg
dec
adc
sub
movs
cmp
ret
mov
int3
xlat
jno
sbb
push
leave
xor
(bad)
add
sbb
xchg
out
cwde
stos
cwde
push
test
or
pop
mov
loopne
push
adc
pop
add
mov
dec
pop
xlat
scas
lods
jle
cmp
pop
push
test
mov
rol
fadd
(bad)
push
js
cwde
mov
cs
repnz
mov
imul
ficomp
adc
fsub
bnd
(bad)
adc
push
hlt
pop
test
push
mov
cmp
mov
mov
popa
inc
out
push
adc
retf
stos
movs
push
add
mov
dec
push
loop
test
dec
sub
jnp
xlat
test
bound
call
loop
jnp
add
pop
push
fisub
push
inc
sbb
out
dec
ja
lods
xlat
js
push
repz
dec
mov
retf
jmp
je
or
cdq
jae
adc
leave
or
imul
scas
ins
mov
dec
mov
jp
push
sti
popa
mov
sbb
pop
clc
pop
call
sub
mov
jae
or
sub
in
stos
or
cmp
sub
pop
popf
add
lea
das
mov
xor
sub
or
add
(bad)
fsubr
sub
in
or
add
loopne
je
xchg
dec
cmp
outs
jle
inc
push
ins
ror
mov
add
mov
sbb
fwait
pop
(bad)
mov
xlat
or
neg
xchg
mov
or
mov
gs
ja
lock
push
sub
js
xchg
imul
inc
stos
add
xor
cmp
std
shl
xchg
(bad)
sbb
cmp
frstor
ret
neg
jge
sub
mov
cwde
outs
jno
cs
je
mov
out
stc
and
cld
sahf
cwde
mov
mov
push
enter
repnz
call
shl
cmp
(bad)
cmp
xchg
jl
(bad)
mov
out
mov
ins
adc
arpl
push
jmp
inc
ret
aad
loopne
sbb
outs
aam
das
cmps
xchg
add
fnstenv
mul
pop
dec
fcom
fdiv
xchg
add
loopne
xor
jne
das
adc
xchg
(bad)
cmp
push
ret
js
inc
dec
mov
into
test
(bad)
jp
pop
std
and
call
(bad)
push
add
sbb
je
test
or
xlat
jmp
cwde
sbb
inc
(bad)
xchg
mov
jg
mov
xchg
fistp
fsub
loope
(bad)
mov
sbb
imul
loop
loop
cmp
dec
div
and
outs
jnp
test
xchg
cmp
ret
lock
jle
dec
sahf
push
ror
inc
js
inc
xor
adc
sub
aaa
dec
out
in
outs
sbb
and
jno
fwait
out
out
cmp
mov
mov
jb
pop
adc
adc
es
mov
sub
add
pop
(bad)
add
in
fadd
popf
or
push
push
enter
dec
xor
xor
iret
sbb
ret
inc
sbb
jb
dec
jae
es
xchg
pusha
dec
jmp
popa
in
(bad)
mov
stos
xlat
js
xchg
pop
in
jmp
lahf
ficomp
cmp
call
dec
(bad)
test
cmp
out
sbb
cmp
cli
movs
nop
pushf
gs
cli
cmp
int3
lea
neg
call
fistp
inc
daa
stos
addr16
mov
xchg
in
inc
sub
pop
push
cld
fbstp
movs
pop
sub
mov
mov
xor
cmp
dec
xor
daa
sub
jmp
dec
aam
out
fnstsw
xchg
mov
daa
jp
dec
ret
jb
std
call
mov
inc
mov
fbld
(bad)
ror
xor
into
sbb
ds
xor
test
movs
or
int
xor
scas
loope
pop
xor
inc
mov
outs
test
xlat
jp
and
mov
inc
movs
bound
imul
mov
mov
jl
mov
gs
mov
loope
mov
mov
cli
int3
mov
jmp
mov
ror
fst
(bad)
int3
ficom
fmul
int3
mov
ss
mov
or
lods
push
push
cmp
movs
int
retf
mov
and
nop
mov
cmp
pushf
aam
iret
enter
mov
call
shl
and
(bad)
in
xor
or
push
into
dec
mov
(bad)
xchg
data16
jg
inc
fstp
fcmovne
xor
not
or
adc
pop
pop
lods
xor
push
mov
mov
sbb
mov
aaa
rcr
clc
test
out
mov
jecxz
clc
call
cmp
xchg
dec
movs
(bad)
repz
(bad)
sub
in
clc
mov
fwait
push
adc
or
push
push
push
lahf
push
and
es
test
jne
inc
repnz
inc
push
push
jge
fwait
mov
call
xchg
inc
jg
push
pop
(bad)
pop
mov
(bad)
mov
or
enter
sbb
dec
cld
and
cmp
mov
and
mov
fnstcw
bound
sub
sbb
mov
mov
cmps
inc
in
imul
clc
into
imul
clc
dec
addr16
cmp
(bad)
pop
in
adc
jmp
das
jo
dec
sbb
mov
pop
stc
dec
push
add
int
in
cli
sub
mov
iret
inc
xor
nop
les
call
(bad)
and
jp
push
xor
ds
je
sbb
aaa
cmps
push
lds
ss
rcr
inc
mov
inc
sbb
js
xor
out
loope
mov
mov
imul
nop
or
retf
push
push
xchg
adc
sbb
push
adc
lods
mov
sub
push
cmp
shl
pop
fild
into
xchg
push
pop
jae
int3
mov
call
pop
or
mov
call
jnp
js
popf
test
mov
adc
pop
jp
hlt
lea
or
push
xchg
push
add
popa
xchg
sub
push
sahf
sub
js
jecxz
sub
mov
in
fmul
(bad)
dec
aad
add
mov
jmp
into
jb
fcom
pop
inc
cmp
(bad)
adc
call
fistp
loop
out
sub
retf
ss
cmp
dec
jnp
sub
shr
icebp
xor
adc
(bad)
out
int
cld
push
in
sbb
inc
and
jmp
xchg
sbb
stc
jecxz
lock
mov
push
mov
push
cmp
push
mov
jnp
mov
fdiv
shl
mov
jmp
pop
lods
lock
mov
xchg
hlt
cmp
jecxz
pop
add
dec
cld
push
xchg
cmp
or
xor
cmp
lods
sub
lea
imul
(bad)
push
xchg
outs
in
sub
ror
and
pop
mov
rol
movs
fadd
addr16
push
fisubr
adc
cmp
fdivr
loop
fmul
inc
in
es
aam
pusha
stos
jl
sahf
mov
data16
nop
data16
in
sahf
inc
call
imul
xchg
cmp
mov
xchg
xchg
adc
mov
push
xor
push
mov
loope
mov
or
mov
mov
adc
fbld
in
push
mov
mov
xchg
jmp
icebp
popa
adc
adc
sbb
add
retf
stos
pop
js
imul
into
and
outs
mov
pop
retf
inc
xor
mov
into
test
xchg
pop
xor
dec
(bad)
loopne
cmps
sar
and
pop
pop
cs
fsubr
and
ss
mov
(bad)
pop
(bad)
clc
xchg
jle
cmp
pop
pop
mov
das
sub
loope
cdq
call
sbb
sub
xchg
jge
or
imul
cmp
dec
dec
inc
je
aas
outs
mov
out
fwait
lds
inc
sub
ss
stc
or
add
(bad)
mov
inc
nop
cmc
xchg
in
outs
sbb
arpl
mov
mov
movs
(bad)
add
push
cs
push
test
push
arpl
jmp
addr16
icebp
stos
inc
push
ror
mov
mov
rcl
inc
xchg
mov
mov
je
test
adc
add
sub
in
enter
scas
das
xchg
dec
push
loope
call
xchg
retf
fwait
jbe
ret
pop
or
dec
push
popf
lods
(bad)
mov
ja
lds
lods
sbb
mov
cmc
(bad)
(bad)
mov
out
cmp
push
push
mov
and
jecxz
lods
test
arpl
mov
jmp
inc
enter
stos
jmp
pop
les
mov
cmc
jmp
mov
sbb
mov
adc
xchg
dec
mov
mov
and
loop
pop
out
data16
mov
loop
push
mov
mov
sub
push
jmp
sub
mov
aaa
push
cmp
fwait
call
xchg
pop
daa
sub
xlat
sbb
mov
sub
rcr
pop
test
lods
in
dec
mov
jl
mov
add
cmp
xor
push
lahf
(bad)
icebp
test
sbb
popa
pop
dec
and
daa
(bad)
enter
pop
idiv
js
das
fcmove
jo
ds
popa
or
or
pop
imul
test
pushf
in
scas
xchg
stos
mov
jbe
push
adc
out
xor
std
adc
adc
sub
mov
movs
mov
lea
fistp
or
and
or
ins
or
xchg
repnz
iret
mov
ss
pop
ds
loope
and
fwait
shl
add
std
je
push
loop
out
push
retf
fiadd
cld
inc
into
popa
xor
sub
(bad)
sub
jecxz
fldenv
xchg
mov
sub
enter
cmp
aam
fnsave
shr
lock
cdq
movs
inc
inc
jns
add
mov
ja
ret
mov
or
sbb
mov
add
dec
shl
adc
fdivr
jle
fldcw
inc
es
loopne
(bad)
cmp
xlat
mov
and
gs
mov
inc
fs
mov
ja
icebp
adc
mov
repnz
inc
aam
jae
(bad)
loop
mov
pop
in
dec
loopne
jnp
push
hlt
dec
fiadd
scas
mov
pop
inc
aam
or
(bad)
leave
sbb
jo
push
dec
lods
mov
daa
je
rcl
out
fld
fwait
push
rcl
mov
jmp
mov
push
data16
cli
push
or
adc
push
mov
and
pop
fld
mov
lds
xor
cmp
mov
jne
test
xchg
adc
mov
cmp
and
daa
test
xchg
(bad)
or
test
loope
mov
stos
test
mov
into
retf
cdq
in
(bad)
shl
into
pushf
inc
sub
push
scas
ret
ins
ins
sub
shr
pop
or
cmc
mov
dec
das
add
or
into
shr
stc
mov
shr
loopne
lea
inc
xor
mov
icebp
leave
dec
and
jo
in
and
mov
(bad)
fwait
pop
lds
hlt
and
sbb
xchg
outs
adc
add
clc
adc
sbb
fstp
in
mov
shl
push
sub
sub
push
or
xor
lods
and
sbb
std
or
mov
dec
mov
enter
lock
jl
mov
call
dec
mov
call
int
push
adc
pop
push
mov
(bad)
ss
fwait
mov
or
push
sbb
mov
push
pop
out
or
push
call
fcmovne
neg
rcr
inc
icebp
cmp
rcl
lods
or
test
xchg
xor
ficomp
std
inc
or
pushf
sub
aad
aas
jle
rcr
dec
(bad)
fbld
clc
ret
or
adc
(bad)
jno
mov
adc
add
out
retf
fld
jle
mov
les
push
test
xor
sahf
mov
lea
lahf
inc
cmp
sbb
lods
jp
jecxz
xchg
in
cmps
cwde
dec
rcl
adc
ja
push
out
xor
idiv
stc
push
(bad)
clc
mov
aaa
rol
mov
add
lods
and
call
(bad)
stos
fisub
or
xchg
and
and
cdq
fs
cmps
add
pandn
loope
enter
jmp
pop
inc
test
inc
or
mov
and
shr
or
addr16
(bad)
sub
ret
xchg
fwait
cmps
cmp
add
xchg
mov
fisttp
call
mov
push
dec
lock
adc
sbb
jns
mov
repz
sbb
cdq
ret
test
dec
les
addr16
nop
jns
push
int3
pushf
cmps
or
gs
leave
mov
mov
adc
and
rol
rol
leave
pop
dec
push
mov
ret
(bad)
dec
push
pop
xor
addr16
jmp
aaa
iret
jno
inc
(bad)
(bad)
(bad)
pop
jne
dec
stos
in
ficom
out
fsub
sub
mov
sub
add
adc
jp
and
dec
xchg
push
loop
loopne
mov
imul
imul
xor
nop
xor
stos
cwde
sbb
cmp
sbb
cmc
and
enter
mov
jo
mov
pop
lahf
test
push
xchg
mov
movs
sub
dec
jle
iret
ret
in
or
popa
adc
scas
mov
ja
callw
sti
cmp
add
sub
stos
inc
cmps
outs
dec
js
sar
inc
mov
xor
movs
in
jo
fwait
mov
(bad)
out
(bad)
in
push
sbb
adc
(bad)
mov
add
mov
jmp
and
jmp
int
xchg
mov
pusha
push
cmp
adc
pop
mov
mov
mov
stos
mov
inc
mov
mov
ds
or
pop
pushf
neg
adc
dec
(bad)
sub
fiadd
mov
inc
sub
and
and
xchg
and
repz
cmp
xchg
ret
push
add
lock
iret
xor
neg
sub
or
enter
sbb
jo
push
gs
scas
pop
fcmovbe
inc
jae
push
lods
rcl
xchg
mov
push
repnz
mov
inc
mov
fild
aad
push
aam
jge
xchg
and
jl
shl
mov
adc
fisub
sub
push
sub
rcr
push
shl
adc
push
or
fdivr
in
mov
xor
xor
cmp
mov
sub
sub
cmp
xor
xchg
mov
mov
aam
mov
adc
lds
xor
popa
cwde
sub
jge
sub
loope
les
ja
ins
(bad)
and
xlat
(bad)
jne
ror
inc
(bad)
outs
push
and
leave
dec
jge
jo
fnsave
sub
xor
imul
sahf
mov
push
rcr
pop
xchg
jo
(bad)
ja
int
sbb
bnd
das
out
jmp
sub
imul
iret
mov
push
cwde
scas
in
adc
fst
loopne
mov
mov
and
jmp
cwde
aad
lea
mov
repnz
jmp
fild
movs
cmp
mov
inc
test
sub
fcomp
fs
mov
les
fldcw
and
jge
int
mov
call
setae
hlt
cwde
push
call
out
mov
ror
dec
and
or
inc
(bad)
les
cdq
sub
lds
sbb
ins
movs
or
rcr
out
mov
inc
xor
mov
sbb
arpl
call
mov
mov
das
dec
das
cmps
stos
jo
loope
dec
xchg
ror
(bad)
push
ja
addr16
pop
xchg
adc
retf
jle
and
aam
or
in
shl
imul
les
pop
push
push
ficomp
push
aaa
je
xlat
nop
cdq
lods
sub
mov
and
or
shl
cli
push
mov
jp
fidivr
ss
imul
add
or
not
mov
jne
push
fnstsw
inc
dec
pop
pop
dec
mov
ss
push
mov
mov
push
sbb
xchg
test
push
iret
repnz
aad
sar
mov
mul
mov
aas
stos
mov
aam
loope
cdq
test
pushf
xlat
xchg
xor
or
retf
cli
jns
fiadd
push
mov
dec
out
cmp
push
xor
pop
cmc
iret
les
xchg
in
dec
lock
sub
jnp
repz
fstp
out
sub
movs
f2xm1
add
and
pushw
push
outs
and
mov
or
xchg
fmul
adc
inc
call
cwde
fmul
jle
push
std
and
cld
shl
mov
les
cmp
idiv
ret
jmp
sbb
movs
outs
neg
dec
sbb
popf
mov
data16
sbb
loopne
push
mov
pop
mov
cmp
(bad)
mov
xor
fadd
mov
adc
les
jmp
mov
imul
shr
mul
lds
or
sahf
das
pop
lods
out
add
xchg
leave
ror
das
sbb
and
pop
cmp
sbb
scas
ja
das
sub
and
scas
out
movs
and
mov
push
hlt
or
shr
aad
bound
or
repz
push
imul
retf
movs
mov
add
pushf
inc
les
dec
scas
inc
mov
sbb
xor
cs
ins
lahf
lea
sbb
mov
daa
jae
popf
mov
sbb
jae
pop
mov
add
jmp
js
sbb
fldenv
shl
test
xchg
jmp
jae
cmp
mov
enter
pop
cmp
jo
push
sbb
xor
clc
mov
(bad)
cmp
leave
dec
pop
loope
ins
icebp
ins
std
push
pusha
sbb
adc
adc
mov
out
sub
loope
sub
push
das
movs
push
jge
xor
or
(bad)
mov
repz
mov
adc
or
scas
imul
ror
pop
xchg
adc
dec
pop
adc
cmp
and
sbb
cld
fnstcw
push
fnstenv
pop
pushf
(bad)
mov
ror
sub
jb
movs
les
sbb
mov
mov
aaa
lods
xor
mov
imul
fmul
movs
xchg
in
cdq
sbb
mov
xor
cmc
dec
fild
or
jl
push
je
enter
adc
retf
pusha
out
jno
fwait
add
fsubrp
mov
and
out
(bad)
mul
js
inc
mov
push
es
cmp
push
das
cmp
mov
cmp
pop
push
test
inc
sub
adc
or
sbb
pop
into
sar
stos
mov
(bad)
sbb
ror
jae
aam
dec
xor
push
daa
jnp
and
scas
(bad)
fwait
(bad)
sbb
cli
jmp
fcmovu
dec
push
(bad)
clc
pusha
sbb
cmps
aas
dec
scas
in
jbe
sub
jle
fimul
in
mov
je
xor
pusha
mov
call
adc
fmul
lods
fs
xchg
inc
mov
sbb
or
retf
mov
push
call
push
imul
xchg
pop
test
sbb
adc
ds
movs
ins
or
pop
inc
sbb
repz
fs
jecxz
dec
pop
inc
pop
loop
or
sub
test
inc
add
push
rep
and
fstp
test
xor
cmc
data16
xor
pop
xor
ins
mov
stc
cmp
ja
or
loopne
push
mov
cmc
shl
dec
cld
popf
or
mov
out
sub
xor
dec
adc
test
lods
mov
mov
dec
test
popa
and
and
dec
imul
mov
mov
repnz
jmp
fdivp
sbb
scas
add
ja
jge
stc
cwde
push
ss
push
sub
push
arpl
cmps
mov
in
scas
sub
pop
push
dec
cli
ret
jmp
cmp
push
push
xchg
add
dec
call
rcr
in
out
cmp
jno
dec
(bad)
outs
loopne
fdivr
popf
fcomp
cmc
ret
pop
pop
and
add
pop
mov
cmp
jno
xchg
mov
repz
inc
cwde
push
jg
adc
and
sub
cld
lea
adc
push
xchg
pop
inc
jmp
inc
and
mov
test
pop
out
rcl
into
pop
xchg
repnz
mov
jg
es
pop
pop
jmp
xor
popf
jecxz
mov
stos
xchg
push
jle
pop
popf
loopne
dec
adc
popf
pop
jmp
sar
and
repz
inc
adc
add
push
mov
xchg
sahf
imul
mov
sbb
aas
jns
push
(bad)
xchg
retf
add
pavgb
adc
fldenv
repz
fsub
movs
repz
add
jge
jo
inc
mov
pop
dec
adc
aad
inc
pusha
adc
ror
mov
sbb
mov
or
rcl
sbb
pop
or
repnz
or
loopne
call
pop
push
push
or
push
push
scas
pop
sti
add
js
xor
cmps
mov
out
add
xor
(bad)
cmc
addr16
rcr
add
fisub
(bad)
shr
xchg
sbb
aas
cmp
test
dec
outs
add
mov
pop
ds
scas
test
enter
jge
jl
dec
or
adc
gs
add
fld
mov
(bad)
fcmovnbe
ret
lea
sti
ror
rol
std
in
dec
mov
rcr
test
xor
in
push
mov
lods
xchg
call
sub
push
fidivr
xchg
mov
ins
shl
call
mov
push
mov
icebp
lods
xlat
inc
push
sahf
repz
sub
loopne
inc
dec
scas
xor
and
sti
shr
inc
pop
add
les
dec
popa
and
push
pop
in
enter
das
xchg
sub
addr16
lds
dec
(bad)
sub
mov
shl
sub
sahf
mov
(bad)
aam
and
push
aaa
(bad)
jp
push
sub
xchg
loopne
sub
jg
jo
and
adc
cmp
push
sub
mov
adc
push
mov
and
mov
lds
push
pop
push
mov
cmp
cwde
or
dec
jecxz
mov
mov
mov
mov
(bad)
jmp
adc
inc
inc
fwait
jl
aas
cmp
xlat
or
scas
ds
cmps
dec
pushf
std
sub
loope
sub
mov
pop
es
clc
lods
shl
inc
jecxz
movs
adc
xlat
shl
sub
(bad)
xchg
sbb
jmp
jmp
add
(bad)
(bad)
jl
adc
push
sar
sti
call
or
adc
sar
inc
adc
jecxz
jnp
xchg
fld
mov
sar
call
jae
jbe
fadd
mov
push
adc
shr
out
popa
xchg
cwde
imul
sub
movs
adc
xchg
out
jb
push
in
gs
outs
fwait
mov
pop
push
hlt
(bad)
mov
mov
sub
ror
test
dec
xchg
(bad)
or
xor
cs
jmp
hlt
xor
push
shl
sub
fstp
scas
and
scas
inc
fcomp
xor
sbb
out
movs
or
dec
adc
cmp
adc
or
loopne
mov
and
mov
xor
ins
dec
lahf
jge
or
stos
pop
imul
inc
js
pop
sbb
xchg
or
jo
aad
adc
call
mov
push
std
pop
call
dec
iret
dec
mov
cdq
or
pop
pop
ins
dec
jb
cmp
jle
push
int3
adc
pop
and
xchg
sub
push
ins
sbb
cli
pop
push
retf
jo
lea
enter
sbb
out
loopne
daa
pop
cmp
movs
and
mov
pop
dec
loop
out
dec
call
sbb
add
mov
rcl
sbb
mov
fsub
push
or
movs
sbb
aad
pop
out
lds
pop
inc
push
mov
out
(bad)
dec
popa
and
pop
stos
clc
mov
popf
in
shr
repnz
iret
push
jmp
sahf
leave
nop
jle
stos
out
adc
idiv
neg
aam
lock
pop
adc
stos
aas
lods
ins
sub
jno
out
lods
cdq
add
inc
mov
sub
mov
aas
mov
imul
push
fsubr
xor
or
int
shl
test
cmp
pop
jae
in
push
icebp
jl
and
js
xor
dec
cwde
into
(bad)
mov
dec
ja
or
cmps
sar
push
jb
jbe
push
push
push
jno
inc
sub
scas
push
sahf
test
out
movs
and
test
mov
xchg
retf
gs
call
xor
retf
mul
and
xchg
(bad)
aad
pop
sti
lods
mov
cwde
(bad)
push
xor
mov
imul
js
icebp
mov
push
xor
fnstsw
out
and
fs
loopne
sbb
call
dec
repnz
lds
enter
xor
jge
in
mov
xchg
jg
mov
push
fldcw
out
out
xchg
cmp
fidivr
adc
loope
mov
in
jmp
loopne
cmp
sbb
ja
test
xor
lahf
dec
cld
mov
out
cmps
and
inc
and
cwde
cmp
cmp
xor
jmp
hlt
add
clc
sbb
or
leave
xchg
mov
push
test
push
or
push
xchg
sbb
repz
adc
lods
mov
jo
adc
cld
jb
out
fsub
and
in
ds
call
xlat
mov
stos
and
push
dec
xchg
dec
adc
dec
xor
mov
mov
pop
and
cwde
jbe
loope
jo
jbe
loopne
mov
jge
mov
mov
fucomp
aaa
cwde
dec
dec
retf
aaa
mov
mov
pop
mov
push
cmps
addr16
aas
pop
les
ret
dec
xchg
push
and
arpl
push
stc
jp
jl
arpl
hlt
cmps
xlat
repz
mov
leave
inc
test
dec
fstp
pushf
lods
scas
mov
int3
inc
sub
scas
movs
imul
(bad)
push
or
lea
cmps
(bad)
sub
movs
ja
inc
jl
jmp
push
loop
jno
iret
add
daa
xor
inc
pop
mov
dec
mov
pop
sub
and
jns
fcom
outs
add
mov
adc
adc
inc
push
dec
lea
dec
dec
pop
rol
cdq
xchg
pop
xchg
inc
mov
dec
and
fnstsw
std
xor
scas
in
idiv
rcl
fwait
mov
js
sahf
(bad)
ins
mov
fnstcw
pop
hlt
cwde
shl
int
mov
outs
shl
fwait
mov
jo
push
xor
push
cmc
xor
pop
gs
cmp
sub
jl
push
data16
loop
mov
sti
mov
int
ret
sub
push
jecxz
mov
xor
xor
mov
(bad)
test
pop
cmps
pusha
sbb
fist
jns
(bad)
sbb
in
ss
fdiv
movs
and
push
call
ret
out
aas
xlat
xchg
dec
pop
pop
(bad)
jb
add
mov
xor
sub
inc
push
ror
jg
daa
push
stc
fimul
scas
xchg
jae
push
or
xchg
add
mov
aad
sub
int
gs
pop
ja
stc
rep
mov
mov
pop
aam
jl
xchg
mov
in
dec
inc
or
pop
or
mov
mov
push
xchg
push
inc
call
arpl
(bad)
repnz
pop
adc
push
iret
adc
mov
sti
or
mov
sbb
js
push
cmp
pushf
mov
jle
ficomp
pusha
les
lahf
add
jmp
bound
(bad)
fisttp
nop
cli
mov
jge
popf
imul
(bad)
mov
mov
and
inc
adc
cmp
and
movs
pop
in
mov
cmp
sti
xchg
dec
cwde
cwde
rcl
or
out
xchg
jne
mov
push
dec
inc
cmp
(bad)
jae
fs
or
and
and
mov
ret
xchg
jae
cld
push
mov
scas
dec
jo
mov
movs
les
mul
test
lds
cs
cmps
fcomp
xor
push
push
imul
push
push
fnstcw
data16
sub
ret
aas
xor
mov
mov
pop
nop
push
xor
scas
in
pop
fldcw
push
movs
dec
test
sub
sub
fdiv
lock
ret
mov
sub
lahf
mov
jge
rcl
inc
jmp
pop
jmp
jg
sub
sbb
fdiv
mov
rcl
xor
data16
sahf
cs
scas
test
push
out
push
nop
mov
or
mov
adc
mov
leave
adc
push
sbb
or
jmp
mov
rcl
(bad)
mov
mov
sar
pop
addr16
xchg
push
jnp
xchg
sub
inc
adc
outs
movs
cmp
aam
aad
in
dec
and
add
jmp
mov
mov
add
mov
jns
int
(bad)
dec
push
mov
ficomp
sub
mov
mov
or
or
mov
mov
sbb
out
daa
push
popf
dec
or
rcr
outs
mov
jle
aas
imul
inc
sub
imul
imul
jnp
int3
fild
cmps
xchg
aaa
jno
rol
push
mov
mov
add
and
imul
xchg
enter
and
mov
mov
inc
pop
sbb
stc
lahf
mov
push
into
cmp
imul
std
lock
cmp
sub
imul
pop
pop
pushf
xchg
jge
je
add
mov
cmp
daa
pusha
(bad)
fcomp
pusha
scas
cmps
jmp
adc
mov
jae
xchg
and
sbb
xor
push
adc
xchg
jne
imul
mov
xchg
sub
jg
mov
lock
fwait
ror
into
inc
push
sub
es
adc
xchg
mov
dec
sub
scas
sbb
and
push
mov
sub
sub
stos
call
inc
fsub
inc
jp
les
shl
daa
nop
xchg
stos
ja
and
jne
ss
sbb
pop
mov
jmp
loopne
in
scas
cmps
stc
xor
pop
(bad)
(bad)
adc
push
(bad)
or
jnp
sbb
into
loope
out
push
(bad)
pop
into
xchg
lock
repnz
mov
aad
add
ret
sbb
icebp
jno
cmp
jg
pop
pop
test
pop
test
add
pop
clc
mov
pusha
pop
std
push
ja
in
sbb
into
sahf
sub
push
jle
scas
je
(bad)
xlat
cs
mov
lahf
sub
adc
sub
mov
repz
data16
addr16
mov
xchg
out
sbb
ins
rcl
and
data16
lahf
les
aas
cmc
jne
cmps
shl
pop
push
in
pop
and
pop
mov
outs
pushf
(bad)
mov
xchg
aaa
retf
scas
cmp
mov
into
mov
packsswb
mov
clc
imul
mov
rcr
xor
(bad)
nop
xchg
(bad)
scas
loope
imul
sub
sahf
shl
mov
rol
(bad)
ret
jno
sbb
and
xor
add
xor
out
(bad)
jnp
(bad)
sub
fs
cs
sub
jbe
call
push
jne
cmps
lock
fs
fs
rcl
push
push
sub
add
cmp
fdiv
add
ror
mov
popa
jge
shl
pop
iret
lods
shl
lods
sbb
cmps
ret
xchg
dec
arpl
outs
push
in
lahf
into
push
rcl
into
sbb
pop
cmp
sub
sti
fscale
and
fld
fdivr
fwait
or
adc
ja
dec
ret
div
dec
sbb
jbe
test
xchg
shl
fadd
dec
inc
adc
mov
outs
push
mov
fwait
sahf
(bad)
out
lods
fxch
jno
jg
shr
push
mov
cmp
mov
pop
ror
sbb
(bad)
sbb
fidiv
ret
loopne
jecxz
jmp
push
(bad)
xor
dec
or
test
jb
add
ja
sub
mov
sti
sub
sbb
out
adc
mov
jns
nop
adc
pop
nop
jb
jg
loope
inc
mov
adc
xchg
scas
cdq
mov
(bad)
into
jmp
test
dec
inc
in
inc
jge
inc
aam
mov
sub
dec
xchg
jmp
jb
push
push
dec
retf
int
jnp
retf
gs
jne
shr
jno
push
xchg
adc
out
cmp
adc
stc
dec
push
fldcw
and
adc
imul
out
mov
shl
(bad)
bound
pop
dec
mov
sbb
adc
or
inc
dec
add
xor
out
fdiv
aaa
mov
pop
adc
add
aaa
arpl
sub
xchg
push
push
mov
mov
call
mov
adc
and
push
arpl
jae
daa
das
retf
cmps
jmp
dec
push
pop
jnp
or
mov
iret
mov
ins
add
into
je
sub
imul
push
pop
inc
adc
fnstcw
push
mov
js
add
push
popf
inc
shl
imul
add
or
adc
xor
outs
movups
adc
neg
sub
fld
pop
pusha
mov
aad
out
fwait
mov
int3
adc
pop
xchg
push
mov
inc
xlat
fadd
push
icebp
mov
jmp
mov
jns
sbb
xchg
js
jbe
mov
outs
dec
enter
in
sub
sbb
push
mov
pop
add
hlt
push
mov
stos
pop
movs
cmp
sub
sahf
dec
addr16
pop
inc
jno
les
test
jnp
fadd
fdivr
call
shl
mov
into
retf
and
push
push
pop
call
push
pop
cmp
(bad)
rcl
fld
fidiv
sbb
nop
add
jae
movs
mov
(bad)
xlat
and
aaa
ds
dec
outs
ds
stos
sub
fimul
fstp
mov
addr16
sahf
imul
xchg
enter
cmp
(bad)
imul
cdq
lods
inc
jns
std
retf
and
adc
retf
stos
cmp
push
cli
xor
call
fs
push
xor
fistp
dec
pop
imul
stos
test
cmp
sbb
mov
mov
push
mov
aas
xchg
ss
loop
ficomp
enter
aas
repz
or
gs
outs
sbb
inc
mov
leave
pop
lea
jns
das
out
aas
inc
call
and
loopne
jne
inc
jbe
scas
push
fnsetpm(287
or
mov
mov
cmp
adc
aad
push
in
lds
aaa
cmp
outs
scas
inc
jmp
fwait
lds
sbb
(bad)
enter
and
loope
cmp
dec
das
aad
and
adc
(bad)
mov
sub
sub
jge
retf
sub
sbb
xlat
add
cmp
sbb
jo
xchg
xchg
neg
pusha
ja
push
cmps
mov
popf
js
clc
add
aad
aaa
lods
sahf
jle
hlt
fadd
ss
pop
dec
test
les
mov
das
sar
int
mov
xchg
cmps
call
idiv
rol
mov
pop
pop
das
sbb
jno
sbb
mov
inc
inc
mov
repnz
stos
inc
jo
out
imul
rcl
pop
push
jmp
retf
inc
icebp
push
add
sbb
stos
adc
adc
mov
std
mov
stos
adc
mov
sbb
out
cmp
lods
adc
sub
arpl
retf
pushw
add
mov
(bad)
aad
cmp
adc
out
mov
dec
into
jg
(bad)
rcr
xchg
fdiv
repz
(bad)
pop
pop
pushf
jp
test
lods
out
hlt
mov
into
aad
test
pop
repz
add
mov
dec
dec
outs
pushf
mov
mov
ficomp
aas
orps
je
repz
mov
call
or
call
push
daa
shl
xchg
repz
jg
cmp
sbb
add
cld
dec
movs
add
rcl
popa
and
jae
xor
mov
inc
jg
mov
xor
cmp
test
add
and
imul
inc
dec
adc
jnp
cmp
retf
adc
outs
fwait
sar
outs
mov
xchg
mov
in
fimul
repnz
cmp
cmp
lahf
out
pop
and
dec
popf
jmp
ds
push
pop
repz
and
pop
fdiv
daa
xor
jns
mov
fnstsw
das
sbb
jne
sub
iret
dec
sub
mov
daa
out
push
ret
sub
cmp
aaa
xor
jl
push
fmul
cmps
add
sbb
sbb
fwait
jl
mov
mov
or
push
imul
sbb
out
(bad)
movs
lock
movs
mov
imul
add
sbb
push
sbb
cdq
sub
ja
test
adc
sar
shl
and
mov
ins
fdiv
pop
icebp
stos
or
pop
dec
(bad)
std
sahf
imul
ins
cli
cmp
xchg
push
mov
adc
mov
or
enter
add
or
jbe
mov
adc
aam
mov
jne
xchg
out
mov
or
or
into
into
mov
push
jl
mov
xchg
lea
cmp
cwde
cmp
loopne
add
xchg
int
sub
mov
lahf
dec
inc
jae
mov
repnz
(bad)
stos
cmp
ds
movs
cmp
cmp
cmp
dec
imul
mov
aam
jnp
pop
out
xor
out
idiv
in
xchg
sbb
or
(bad)
ds
inc
sub
retf
add
adc
fld
jbe
sub
mov
xchg
bound
cmps
add
xor
xlat
clc
xor
cwde
mov
test
adc
in
push
mov
imul
cmc
add
sub
or
add
jne
xor
sbb
dec
(bad)
int
dec
stos
dec
nop
push
retf
js
sub
xchg
outs
sub
out
cld
jbe
pop
std
loopne
cmc
fcomp
or
jae
movs
nop
adc
aaa
pushf
fld
stc
ret
(bad)
jecxz
in
out
push
and
and
out
mov
cmps
jl
sub
push
int3
repz
pop
pop
les
lea
jns
xchg
add
pop
xor
add
dec
inc
xchg
inc
jbe
stos
call
push
pop
hlt
out
and
lock
jae
aaa
lea
es
gs
js
mov
out
push
imul
loopne
enter
xchg
les
cmp
inc
push
or
push
js
and
mov
repz
shr
fnstsw
invd
pop
enter
mov
adc
sbb
fwait
mov
mov
add
jmp
adc
test
or
test
mov
pushf
inc
fisttp
ret
test
jmp
mov
lods
hlt
adc
xor
lods
pop
push
xlat
adc
maskmovq
not
mov
lds
scas
jae
mov
shl
aad
je
inc
mov
unpcklps
(bad)
pop
sub
sub
cmps
sbb
shr
cli
in
