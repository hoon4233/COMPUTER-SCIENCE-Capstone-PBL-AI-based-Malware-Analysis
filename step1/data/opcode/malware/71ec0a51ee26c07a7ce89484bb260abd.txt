xchg
nop
add
in
nop
add
mov
add
adc
add
mov
add
ss
add
lods
nop
add
les
add
add
add
pop
xchg
add
mov
nop
add
jle
add
int3
nop
add
in
add
popf
xchg
add
fcom
add
(bad)
nop
add
add
add
(bad)
nop
add
add
add
and
add
and
add
dec
xchg
add
add
add
dec
xchg
add
add
add
ins
xchg
add
add
add
ins
xchg
add
add
add
mov
add
mov
add
lods
xchg
add
add
add
lods
xchg
add
add
add
imul
gs
xor
cs
ins
add
cwde
push
add
add
inc
gs
outs
fs
gs
popa
outs
fs
gs
add
add
gs
xor
fs
ins
add
sti
inc
add
add
inc
gs
imul
outs
arpl
add
popa
fs
jo
xor
cs
ins
add
cmps
push
add
add
push
gs
jne
jb
push
popa
ins
jne
push
add
add
ins
arpl
xor
fs
ins
add
leave
sub
add
add
outs
jo
jb
jns
push
add
arpl
gs
ins
add
sldt
add
pop
inc
outs
jb
js
dec
popa
imul
ins
ins
xor
cs
ins
add
add
add
push
dec
inc
gs
imul
push
jo
arpl
add
xor
cld
ret
add
add
add
mov
cld
xchg
add
add
add
add
or
add
mov
add
add
add
rcl
or
add
pushf
jecxz
add
or
add
add
mov
add
inc
cmp
add
add
nop
inc
add
loopne
add
mov
add
cmp
add
lds
or
add
adc
add
add
add
add
add
mov
mov
add
mov
inc
or
add
or
add
add
add
add
or
add
add
data16
cmp
inc
inc
push
js
in
popf
or
lds
dec
xchg
das
stc
xchg
inc
xchg
mov
fild
mov
cmps
lods
add
in
pop
push
dec
mov
mov
arpl
sbb
or
ins
push
adc
std
adc
ds
push
pop
loopne
sbb
pusha
jecxz
ret
sahf
sahf
mov
dec
jl
xchg
cmps
stos
imul
imul
jns
int3
test
cmps
mov
outs
pop
out
dec
inc
and
add
adc
nop
add
xchg
in
push
add
sbb
or
add
add
dec
push
and
movs
add
cmp
xchg
add
xchg
in
push
add
sbb
stos
add
jmp
cld
cmp
stos
retf
and
ds
dec
stos
retf
cmp
enter
(bad)
lods
cs
mov
cmp
pop
gs
xchg
push
pop
dec
dec
pop
test
dec
and
shl
retf
xlat
repnz
push
xchg
sub
fs
test
jle
idiv
jl
jg
sub
inc
inc
xchg
sub
xchg
lahf
adc
mov
mov
dec
mov
lock
mov
add
and
jb
popa
inc
test
xchg
and
jmp
add
fmul
jge
fld
sbb
add
inc
lds
into
jmp
and
(bad)
push
adc
les
retf
inc
loopne
inc
cmp
xchg
aaa
push
xor
mov
dec
pop
hlt
jg
dec
stc
cmp
repz
aad
mov
dec
xor
xor
cmps
sub
sbb
and
or
add
jmp
and
push
mov
add
jle
in
push
add
mov
test
add
sbb
add
or
out
cs
mov
xchg
xchg
jg
push
push
rol
jmp
mov
dec
mov
adc
jle
fadd
ja
gs
data16
and
adc
in
or
cmps
stc
clc
mov
out
cmp
ins
fbstp
ins
pop
inc
(bad)
(bad)
cmp
mov
addr16
jne
xchg
mov
adc
sti
jp
fdivrp
or
popf
adc
jge
inc
(bad)
fisttp
xchg
pop
dec
xchg
and
mov
cld
fsubr
out
scas
pop
push
out
dec
cli
ds
lods
mov
add
fistp
push
push
or
aaa
add
cmp
in
push
mov
push
ja
lods
cmp
fcomp
xchg
fwait
inc
xor
cmc
retf
and
add
mov
clc
in
and
push
pop
cmp
int
stos
scas
sub
jbe
cmc
jo
ins
sub
xor
nop
rol
push
mov
jecxz
ja
jb
pop
mov
mul
ins
push
in
std
lea
addr16
mov
push
(bad)
icebp
(bad)
dec
cs
jge
xchg
dec
pop
add
push
push
jecxz
ror
push
rol
lds
je
sub
and
in
mov
pop
adc
fnstcw
sbb
jns
fmul
dec
lods
mov
add
ins
pop
stc
daa
int3
add
mov
or
xchg
nop
retf
jmp
cmps
js
ret
and
repnz
xor
push
sbb
jecxz
push
mov
jg
cld
fdivr
xchg
cmp
xor
cmp
mov
scas
xlat
jmp
inc
sub
aas
mov
gs
cli
je
inc
nop
and
adc
repnz
loope
clc
pushf
sbb
clc
ror
inc
xchg
stc
xlat
shl
fild
add
movs
movs
or
jae
aaa
add
jle
add
pop
iret
cmc
sub
push
push
xchg
push
mov
mov
leave
jmp
lock
jle
add
mov
rol
mov
nop
mov
cmp
in
mov
mov
mov
inc
daa
ins
stc
cmps
fiadd
push
cwde
cwde
retf
mov
and
mov
shl
and
ins
or
xor
mov
imul
mov
add
pop
fsubr
pop
dec
cmps
add
add
shl
adc
fisttp
out
dec
in
scas
jge
jmp
clc
push
push
inc
enter
mov
mov
aam
test
sbb
stc
std
lock
cmp
jbe
loopne
push
mov
mov
test
jnp
repz
xchg
xchg
bound
jp
mov
fcmovnu
nop
and
std
lock
out
add
mov
fsub
(bad)
stos
sti
arpl
mov
and
push
stc
mov
xchg
sub
xor
mov
in
pusha
xchg
stos
add
ins
btr
push
mov
xchg
and
cmc
imul
fcomp
inc
sbb
pop
push
movs
mov
cdq
movs
dec
retf
outs
inc
lods
sbb
mov
inc
pop
fsub
out
xchg
stos
pop
pop
stc
jbe
xchg
or
das
jbe
mov
add
sbb
ss
xor
inc
and
dec
retf
retf
div
add
mov
mov
getsec
movs
fidivr
loope
in
dec
or
xor
xchg
xor
jg
dec
dec
inc
adc
mov
dec
xchg
jmp
dec
adc
sar
or
cmp
hlt
xlat
and
stos
in
and
sbb
retf
data16
pop
dec
sub
or
jmp
in
jnp
pop
xor
ja
xchg
adc
sub
ins
stos
add
stos
xor
push
es
cli
inc
pop
jmp
add
out
mov
cdq
inc
es
jle
cld
fs
push
or
xchg
jecxz
mov
mov
xchg
inc
push
mov
pop
nop
mov
pop
inc
jno
mov
inc
loopne
push
add
xor
in
(bad)
or
pop
push
(bad)
std
mov
push
in
and
cld
dec
pop
add
fadd
cwde
jbe
rcr
outs
add
sub
cmps
out
xor
adc
xor
aas
jnp
or
(bad)
in
sub
mov
dec
not
xchg
add
idiv
movs
test
(bad)
int
out
test
nop
xchg
add
pop
outs
add
jns
shl
and
jle
pop
sbb
adc
adc
std
aas
xor
cli
pop
es
sahf
cdq
adc
and
mov
mov
outs
jmp
xor
mov
fisub
adc
pop
and
dec
add
or
in
jmp
or
add
inc
mov
jle
in
call
cmps
xor
push
xchg
mov
nop
adc
adc
cmp
cmps
popf
rcr
jmp
jns
retf
xchg
push
cmc
fsub
ss
leave
add
adc
cmp
jecxz
dec
adc
cmps
mov
pop
jl
mov
inc
jge
cli
es
ins
inc
mov
div
or
pop
aad
or
in
aam
sbb
adc
add
popf
or
jnp
(bad)
sub
add
jne
inc
into
jmp
dec
cmp
and
sysret
ja
or
loopne
xor
cmp
add
push
push
out
mov
dec
(bad)
int3
add
sbb
outs
cmps
imul
mov
sub
sub
push
inc
in
or
aas
xor
ror
in
mov
xchg
pop
push
xchg
and
xor
bnd
outs
les
cmps
add
pusha
scas
stos
(bad)
lods
dec
aam
adc
add
test
fdivr
mov
jmp
in
cwde
(bad)
jmp
dec
adc
cmp
pop
loopne
arpl
jbe
push
dec
bound
(bad)
mov
add
je
scas
(bad)
xchg
mov
pop
fwait
loope
mov
enter
(bad)
out
mov
sub
enter
jbe
(bad)
push
cmp
xor
jbe
sahf
dec
inc
dec
adc
mov
jg
fsub
daa
jmp
and
mov
pop
add
sbb
xchg
mov
pop
or
iret
jbe
jp
sbb
idiv
in
and
dec
inc
mov
popa
cmp
jne
aas
sbb
pushf
mov
int
sbb
loopne
push
cmp
retf
cwde
mov
and
pop
mov
inc
inc
rol
stos
out
ret
mov
cdq
push
dec
in
fistp
push
push
jbe
iret
out
fist
imul
out
xchg
or
xor
xchg
and
sbb
sbb
shr
sub
and
push
inc
aad
or
lea
add
push
mov
sbb
(bad)
xor
jl
retf
mov
fild
cmp
push
dec
mov
les
push
push
cmp
mov
outs
cmp
out
cmp
jg
adc
lock
out
mov
mov
cld
repnz
in
or
rol
jmp
and
call
inc
or
imul
in
mov
fadd
sub
rcl
mov
pop
stc
arpl
jmp
jo
mov
or
push
cmp
lds
inc
sub
fldcw
out
das
pushf
jnp
mov
sahf
enter
ja
int
dec
scas
pop
add
in
(bad)
pmaxub
fadd
cmp
dec
les
fucom
icebp
mov
loop
lods
dec
addr16
lock
(bad)
xor
jns
nop
ds
inc
mov
push
aas
mov
pop
std
popa
push
sbb
mov
cmp
imul
sub
imul
addr16
push
mov
dec
fnsetpm(287
mov
add
or
push
(bad)
cmp
adc
jg
test
cmps
sti
cmc
out
cdq
call
ret
jne
pop
mov
dec
inc
push
inc
adc
fsubr
out
or
in
lahf
arpl
daa
es
jns
gs
call
cmp
xchg
ins
and
int
or
mov
mov
int
sub
mov
mov
xchg
xor
inc
fdivr
fwait
mov
fistp
std
jecxz
retf
lods
adc
fptan
daa
pop
icebp
in
mov
or
pinsrw
movs
fld
pusha
mov
rol
add
and
jnp
adc
mov
pop
in
iret
fcomp
inc
mov
leave
inc
sub
data16
jmp
pop
xor
add
das
mov
in
int
test
into
es
adc
mov
pushf
push
ret
push
xor
cmp
fld
in
mov
xor
sub
les
out
adc
or
into
(bad)
jmp
outs
push
in
mov
sub
push
dec
push
cdq
mov
sbb
jge
pop
inc
mov
sub
iret
popf
or
iret
sbb
mov
aas
jne
out
pop
fild
add
sbb
retf
or
push
sub
test
adc
and
sbb
fs
aas
cmc
lock
sub
pop
pushf
cld
cmp
pop
fild
add
retf
int
lods
ficomp
loope
add
adc
and
and
add
repnz
test
sub
(bad)
xchg
rcr
cmp
jbe
sbb
(bad)
mov
cmps
add
mov
lea
hlt
cmp
mov
pop
jge
pop
dec
adc
js
inc
loopne
je
add
lods
and
loopne
xchg
stos
data16
mov
add
mov
xchg
push
xchg
mov
add
mov
lock
dec
in
push
and
add
in
mov
jge
jo
dec
lock
fld
sub
dec
lds
push
dec
dec
inc
dec
push
xor
aad
fwait
xor
hlt
inc
inc
pop
out
cmp
movs
sub
push
and
jmp
add
add
adc
sub
dec
push
mov
ja
add
mov
cli
lahf
jae
mov
dec
fisttp
dec
addr16
cld
shr
push
push
push
je
sub
xchg
outs
and
sub
ret
(bad)
sub
sbb
mov
mov
add
aad
dec
popa
mov
lea
or
arpl
dec
push
imul
jge
hlt
test
fisttp
mov
stos
imul
inc
add
(bad)
cmp
loopne
mov
mov
add
cmp
lods
adc
iret
sahf
add
jge
cmp
lock
loope
pop
push
add
dec
jl
iret
in
ds
call
add
xchg
xor
sub
or
mov
or
scas
pop
xchg
sbb
fmul
mov
lods
mov
xor
sub
inc
out
push
mov
push
mov
jmp
pusha
adc
imul
jbe
sbb
movs
or
iret
inc
adc
jmp
inc
mov
jb
jge
sub
mov
fs
lahf
pop
lock
push
pusha
out
cdq
and
sub
jbe
lds
jecxz
aas
push
pop
push
je
sub
scas
dec
adc
cld
rol
outs
xchg
dec
je
ficomp
jnp
xor
movs
stos
mov
push
jg
inc
add
mov
mov
shr
fcomp
inc
sbb
inc
xchg
sahf
inc
or
repnz
pop
sub
lds
pop
fsubr
int
frstor
ins
vpmaxsw
inc
add
loope
cld
xor
in
jecxz
xchg
fist
leave
lds
imul
fdiv
fsubr
push
push
jge
fwait
xor
dec
pop
sbb
adc
cld
cdq
movsx
fcomp
movs
pusha
cld
leave
shl
pop
mov
loope
lea
ss
call
stc
push
test
psraw
inc
xchg
sbb
jle
xchg
shl
aas
jnp
ss
xor
stos
(bad)
int3
xor
cwde
add
outs
scas
sahf
inc
sub
sub
add
xlat
popa
cmc
mov
bound
retf
scas
mov
clc
push
movs
out
leave
ds
adc
xor
in
fcmovnbe
mov
mov
dec
addr16
xor
out
add
cmc
aad
inc
jp
leave
cmp
add
imul
imul
push
push
sub
add
and
lods
cld
(bad)
jl
adc
sbb
sub
jle
jmp
test
push
jmp
call
shl
jne
cmp
mov
lock
ins
jmp
loopne
lea
lods
or
or
or
test
daa
mov
xchg
outs
(bad)
mov
mov
rcr
inc
or
pop
push
(bad)
in
inc
cld
out
loop
paddb
loopne
(bad)
push
and
clc
call
out
ret
xchg
and
(bad)
cmp
or
mov
or
addr16
loope
test
inc
inc
js
retf
cmc
rol
add
das
fcomip
jmp
push
add
sti
pop
stos
retf
das
dec
and
sub
fadd
push
int3
imul
add
inc
in
inc
dec
rcr
pop
call
pop
stc
mov
push
ficomp
mov
push
mov
pop
les
mov
cs
loopne
cmps
inc
mov
ror
inc
lock
sub
addr16
ins
fld
xchg
inc
push
shl
adc
sti
pushf
pushf
imul
xchg
call
xchg
or
and
in
xchg
fimul
in
fdivr
or
lds
pop
add
mov
pop
adc
mov
xchg
retf
xchg
aas
retf
loope
jecxz
jbe
outs
or
(bad)
fmul
mov
xor
pop
pop
outs
mov
clc
lds
mov
inc
adc
movs
or
movs
movs
jne
push
das
mov
js
mov
ja
ret
out
call
loopne
inc
mov
lods
cs
and
mov
add
sub
sbb
push
sbb
aas
dec
xchg
gs
dec
and
inc
fstp
sbb
push
in
fs
inc
stc
pop
das
jp
pusha
or
inc
mov
mov
sar
jno
add
mov
in
push
sbb
lods
cs
and
cld
fdivr
xchg
push
sbb
sub
out
inc
pushf
into
test
retf
jle
dec
add
fld
std
or
push
bound
push
test
shr
or
add
ja
fdiv
clc
and
add
pop
(bad)
sti
inc
push
mov
and
push
scas
jl
fcmovb
cmp
lock
inc
sbb
stos
pop
adc
add
movs
pop
dec
mov
jno
adc
icebp
xor
jo
xor
nop
dec
and
test
adc
push
add
xchg
add
jle
std
daa
cmps
add
lods
pop
push
jo
mov
test
rcl
ins
cld
daa
add
sbb
and
push
fcomi
cmp
mov
push
retf
push
add
fbld
sbb
rcl
push
and
aaa
add
cwde
and
dec
or
daa
add
xchg
dec
and
xchg
pop
paddb
adc
jl
dec
inc
retf
xchg
push
mov
fsubr
cmp
or
rcl
rol
lods
adc
fwait
sub
rcl
sti
stc
adc
ss
mov
pop
and
ss
mov
out
sbb
out
dec
movs
jecxz
add
outs
jne
and
pop
mov
scas
aas
fdivr
aas
arpl
bound
add
jg
test
inc
mov
cs
inc
and
ror
inc
xchg
and
add
sub
dec
jbe
mov
add
loope
(bad)
call
pop
pop
mov
xlat
sub
add
(bad)
cmp
rol
mov
aas
push
mov
dec
and
or
cld
ds
test
inc
shl
mov
fwait
or
ds
dec
and
add
bsr
in
mov
bound
loop
mov
push
mov
(bad)
mov
fild
mov
add
pop
and
inc
cmp
nop
inc
cmp
inc
cwde
jo
cs
icebp
xor
daa
add
rcr
das
stos
adc
sar
loop
lahf
icebp
add
pop
(bad)
or
in
mov
cld
arpl
mov
sbb
dec
xchg
mov
das
movs
fadd
shl
in
cmp
add
rol
mov
ins
jmp
loopne
aas
ss
or
cmp
or
xor
mov
push
xchg
xor
sub
xchg
fisttp
sub
(bad)
mov
push
loopne
and
adc
(bad)
cmp
shl
dec
dec
mov
retf
int
adc
xchg
ret
cmc
lods
lods
(bad)
retf
or
mov
xor
mov
cmp
or
scas
stc
xchg
les
inc
mov
push
bound
dec
ins
sti
push
dec
xor
sub
pop
lds
xor
(bad)
ins
jns
cmps
fimul
shr
das
call
and
daa
and
shl
jle
aas
xchg
hlt
call
xchg
mov
mov
jecxz
aad
lahf
xchg
xchg
inc
push
rcr
sbb
or
add
sub
or
les
jl
xchg
xchg
push
jge
(bad)
es
fisub
pop
pop
fdiv
add
ss
jmp
add
cmc
xchg
xor
cmp
es
nop
xchg
inc
(bad)
retf
scas
cld
iret
bound
(bad)
push
push
arpl
or
add
gs
ret
pop
jae
jno
stos
pop
and
cwde
xor
or
sbb
pusha
sti
mov
aaa
add
psllw
mov
in
push
dec
test
pusha
xor
cmc
in
pop
retf
test
push
jp
aas
mov
aas
test
and
pop
rcr
push
cld
sbb
popa
and
loope
lods
cs
shr
add
mov
xchg
cmps
imul
mov
js
mov
inc
hlt
aaa
jne
xor
cli
pop
inc
in
out
jb
call
jnp
xchg
add
es
adc
mov
cld
xchg
stos
pop
sti
(bad)
(bad)
push
mov
mov
xchg
add
mov
enter
xchg
push
fnstenv
retf
add
(bad)
shl
addr16
sbb
pushf
push
mov
aas
sbb
out
or
xor
test
sbb
inc
inc
mov
aad
or
dec
jge
aam
adc
stos
add
jg
out
or
push
aaa
add
aad
dec
jecxz
jg
sub
push
loope
pop
pop
cmp
or
call
sbb
mov
pop
bound
jg
(bad)
adc
and
in
(bad)
lock
mov
add
js
dec
imul
cli
rcr
sbb
loope
pop
mov
inc
clc
adc
sub
or
ds
fbld
cwde
cs
sub
add
dec
rol
enter
mov
out
fcomip
sbb
cmp
shl
jmp
jnp
sti
pop
add
(bad)
fwait
xor
pop
rcl
mov
inc
jnp
pop
pop
add
push
mov
inc
retf
sbb
stc
aad
shl
push
(bad)
ins
dec
ds
sub
mov
(bad)
test
mov
pop
int3
dec
adc
and
push
mov
jno
jns
add
push
iret
and
fwait
(bad)
neg
gs
dec
jbe
clc
daa
out
ins
ss
pop
cmc
shl
sbb
(bad)
pop
mov
pop
or
es
jns
sahf
cmp
nop
fst
pushf
jl
ds
ficomp
mov
(bad)
mov
(bad)
jmp
repnz
cli
adc
and
adc
stc
std
add
jo
nop
loop
mov
dec
push
rcr
in
jge
pushf
(bad)
stc
je
push
mov
sbb
sub
dec
mov
or
outs
ja
addr16
int
xlat
sbb
and
sti
aaa
test
repz
test
jbe
mov
and
cbw
retf
xor
retf
mov
mov
add
sbb
lahf
fistp
or
and
imul
popf
xchg
xlat
xor
mov
mov
mov
faddp
mov
int
ds
loopne
mov
cli
pop
jge
imul
fbstp
repz
pop
dec
sar
dec
in
aam
mov
dec
scas
mov
movs
or
jmp
add
(bad)
addr16
push
push
in
sub
repz
call
adc
mov
iret
sbb
or
(bad)
mov
test
(bad)
clc
pop
(bad)
pusha
lock
and
fistp
cmps
shl
or
test
in
fild
pusha
sbb
mov
icebp
xor
mov
mov
dec
retf
push
xor
(bad)
ss
jmp
out
stos
jmp
xor
xchg
or
add
or
stos
or
jbe
outs
dec
pop
in
adc
push
cmc
mov
inc
fdivr
loop
int3
scas
int3
or
xchg
lahf
cmp
ins
fistp
jae
addr16
ret
outs
in
repz
inc
add
add
xchg
cld
test
add
scas
sub
stos
fst
jne
test
jbe
jmp
call
xor
shr
fistp
pop
mov
sbb
inc
aad
push
jl
ins
dec
retf
xchg
gs
mov
or
jbe
inc
popf
cmp
adc
cmps
mov
fcomip
fild
inc
cmps
fild
stc
xchg
(bad)
xlat
or
cli
in
jbe
add
fwait
gs
or
rcr
(bad)
pop
fistp
pop
test
(bad)
xor
or
mov
dec
lock
push
jne
dec
mov
xor
mov
xor
sub
push
outs
les
and
or
or
ret
cmp
je
mov
xchg
jns
mov
fisttp
mov
in
in
int3
bound
push
in
fs
or
jb
mov
stos
pop
aaa
aas
jo
cld
outs
dec
dec
out
jae
scas
mov
add
lock
sub
jg
ds
cmps
lea
jns
xchg
inc
jbe
push
call
jno
lock
mov
sbb
cmp
pop
cmp
ror
ret
push
sbb
jmp
(bad)
fbstp
sub
cmp
ins
cmp
sub
sub
inc
sub
jecxz
and
mov
adc
xor
inc
pop
ficomp
mov
stos
mov
cwde
inc
xchg
popf
loopne
mov
imul
fs
aaa
push
je
sub
sbb
out
scas
sti
pop
retf
push
fcom
xor
xchg
sub
mov
xchg
push
jle
retf
loop
ror
mov
fadd
loope
dec
jecxz
cmp
pop
pop
(bad)
out
aad
or
dec
popf
pop
add
mov
dec
sub
test
jp
mov
sar
or
mov
(bad)
jp
mov
pop
shl
inc
int
das
repnz
int3
imul
add
xchg
aas
add
lods
sbb
sbb
mov
lock
sub
cmp
xchg
fistp
mov
jae
call
and
fwait
out
add
mov
cli
pop
dec
add
sbb
and
add
fwait
push
mov
dec
xchg
or
sub
movs
repnz
pop
xchg
cmps
xor
es
repnz
(bad)
lock
dec
pop
test
jge
xor
test
lahf
gs
jnp
mov
imul
or
push
and
aaa
mov
push
fucomp
call
mov
pop
mov
sahf
pushf
into
push
adc
xchg
fisttp
pop
mov
mov
adc
out
data16
dec
cwde
xor
fwait
(bad)
cmc
lods
scas
scas
xor
rol
sar
add
dec
sub
std
jp
imul
aaa
iret
inc
adc
cmps
int3
retf
sbb
popf
sub
pop
lods
sub
je
nop
inc
pop
xor
int
hlt
(bad)
loopne
sub
sbb
rcl
add
sub
outs
jg
mov
add
add
xor
fwait
mov
repnz
dec
or
shl
add
je
cmp
outs
cmp
jo
dec
iret
mov
or
pop
xchg
jg
mov
lods
mov
mov
xchg
cdq
or
ja
mov
push
add
repz
sahf
or
ins
mov
mov
cdq
xchg
push
or
inc
pop
add
mov
mov
xchg
cwde
neg
adc
push
test
pop
add
rcl
loopne
xor
push
xlat
mul
or
clc
jg
cwde
xchg
sub
das
mov
jo
xchg
or
js
addr16
push
out
mov
movs
sbb
pop
retf
inc
jp
mov
jne
add
mov
das
iret
pop
adc
xchg
fbld
jp
das
into
mov
cmps
add
add
push
cmp
xchg
cmps
in
adc
sbb
inc
push
pop
adc
mov
pop
xor
jecxz
cdq
sbb
jecxz
add
loop
mov
or
sbb
inc
pop
lds
xor
ins
mov
es
cmc
and
sub
js
mov
xor
out
div
mov
ins
(bad)
test
(bad)
adc
ja
iret
jo
cvtdq2ps
jno
(bad)
sbb
adc
arpl
outs
cmp
mov
movs
mov
xchg
sub
sub
add
inc
or
add
xor
xchg
fisttp
movs
in
inc
sbb
adc
xor
pop
sub
test
pop
scas
movs
push
iret
inc
push
jge
retf
in
and
loop
pop
std
add
or
push
mov
cwde
xor
xor
mov
sar
rcr
pop
pop
mov
pop
retf
mov
rcl
das
xor
fistp
push
movs
scas
inc
mov
popf
into
mov
loop
clc
push
mov
adc
cdq
(bad)
cmp
xchg
das
dec
fdiv
arpl
cmp
cmc
stc
ret
loope
sub
inc
mov
cwde
inc
retf
xchg
leave
shl
cs
pop
lods
dec
and
adc
xchg
ror
cmp
test
retf
push
sbb
dec
leave
jge
or
push
add
mov
lds
add
push
add
push
push
push
adc
xchg
in
fistp
adc
add
push
dec
xchg
cdq
or
(bad)
or
sbb
push
jmp
push
sub
inc
xchg
mov
sbb
pop
cmp
xor
push
mov
dec
push
mov
lods
cs
sub
adc
mov
and
fldenv
ror
xchg
jg
test
jne
pop
mov
push
xor
adc
add
fst
mov
sti
xor
(bad)
mov
add
mov
push
xlat
scas
mov
xor
daa
jns
mov
lods
cs
lods
or
mov
mov
jmp
mov
out
call
popa
cmp
mov
es
pop
mov
movs
out
(bad)
ficom
ins
lea
and
ret
bound
aad
push
inc
mov
jg
out
pop
or
ret
mov
inc
in
loopne
mov
mov
(bad)
repnz
or
sbb
jge
or
sbb
pop
int3
fwait
pop
icebp
stc
pop
loope
aam
rcl
push
fistp
sbb
xor
push
dec
pushf
rcl
xlat
ror
jle
das
mov
mov
jge
pop
inc
pop
inc
hlt
mov
pop
imul
inc
inc
in
sbb
add
mov
scas
retf
(bad)
xchg
mov
hlt
xchg
inc
xchg
aaa
retf
xchg
and
xor
outs
inc
jmp
jne
fild
add
pop
inc
and
dec
mov
cmc
xchg
or
push
mov
or
mov
outs
fst
test
add
std
adc
jle
jbe
lds
dec
pop
pop
push
loope
cmp
mov
scas
add
pop
cmp
ficomp
fstp
(bad)
retf
les
aas
fild
hlt
pushf
repz
mov
mov
add
loope
mov
mov
cmp
ret
ror
addr16
outs
add
cmp
adc
fisubr
in
dec
stos
mov
cs
(bad)
sub
jnp
fidiv
cwde
iret
lea
mov
mov
fsub
call
dec
adc
mov
inc
sbb
retf
mov
mov
bnd
or
repz
mov
pop
ins
and
mov
test
outs
enter
call
dec
mov
cmp
data16
in
inc
mov
inc
mov
int3
pop
push
out
jo
xchg
scas
mov
push
push
mov
fild
and
jb
dec
mov
sbb
jle
add
jle
das
aas
xor
loopne
lahf
jp
out
adc
mov
rcr
shl
push
rcr
add
sahf
add
pop
sbb
jbe
jb
jmp
mov
and
xor
rol
mov
add
push
sar
jge
nop
vcvttsd2si
mov
sbb
cld
cld
push
add
jmp
mov
ins
ret
xchg
inc
les
fwait
push
cwde
xchg
ror
jae
xor
js
int3
xor
xor
jae
(bad)
dec
pop
pop
inc
and
cwde
add
jle
and
jle
fstp
inc
sub
sub
outs
dec
mov
(bad)
fsub
inc
sub
mov
add
retf
aas
fcmovne
jmp
push
(bad)
mov
jo
mov
shl
fistp
nop
jb
call
pop
pop
mov
sar
mov
cmp
(bad)
inc
inc
adc
pop
pusha
jecxz
adc
aaa
shl
cmp
aad
cmps
mov
arpl
mov
stos
jno
(bad)
(bad)
mov
idiv
std
les
xchg
add
or
add
call
or
loope
cmp
xchg
mov
mov
or
test
popf
adc
(bad)
pop
cmp
add
adc
inc
fs
push
jle
imul
adc
ja
mov
xchg
pop
mov
push
dec
in
mov
clc
(bad)
mov
push
push
add
jg
ret
cmp
aad
sub
or
xlat
js
retf
and
dec
adc
enter
jmp
sti
and
je
xadd
mov
aad
or
mov
or
(bad)
mov
loop
shl
(bad)
jae
stos
les
jecxz
pop
jae
mov
pop
jo
dec
jl
pop
(bad)
adc
(bad)
adc
loope
test
fwait
push
in
add
mov
jae
in
arpl
pop
outs
dec
mov
aas
(bad)
jmp
jp
js
pop
call
int
mov
pop
add
int
lock
xor
or
cmps
xchg
xor
mov
(bad)
movs
(bad)
lock
mov
cmp
or
test
stc
add
imul
fnop
js
dec
or
push
adc
xor
push
xlat
dec
push
jl
inc
add
repnz
pop
(bad)
mov
jno
jb
pop
repnz
fcmovnbe
aam
pop
inc
inc
pop
add
cld
xor
ror
inc
or
mov
(bad)
loopne
mov
hlt
js
xor
fwait
outs
mov
mov
pop
add
cmp
mov
stos
pop
cmp
loopne
add
je
sbb
enter
sub
pop
jo
int
xor
mov
ins
retf
pop
dec
adc
int3
jmp
std
cmp
jl
sti
stos
pop
sti
repz
pop
pop
adc
xor
clc
xor
add
push
scas
cmp
sahf
mov
sub
test
sbb
push
xcrypt-cbc
cmps
xchg
pop
xor
shl
add
popf
or
inc
or
sbb
inc
repz
push
loop
add
(bad)
xchg
mov
std
or
scas
(bad)
je
pop
outs
dec
retf
shr
sbb
call
retf
sbb
ret
lds
push
loopne
inc
ins
std
push
add
and
xlat
repnz
fild
push
ret
push
stc
scas
test
js
into
xchg
hlt
push
dec
aas
cld
lods
pop
fdiv
and
xchg
lods
fcmovnb
pop
das
mov
inc
add
jno
xchg
sahf
jmp
dec
cdq
(bad)
fstp
lahf
push
(bad)
ficom
xchg
push
sub
cdq
push
ins
retf
sbb
das
cdq
arpl
jo
jle
jbe
jge
adc
out
mov
cmp
sbb
popa
jp
push
adc
sub
dec
sbb
pushf
sub
jb
xchg
mov
inc
mov
ins
jle
pop
mov
push
jg
test
cmp
jecxz
in
push
into
shl
cmp
jecxz
or
and
int
push
loopne
cmps
and
stc
je
mov
xchg
fs
cld
add
sbb
fnsave
mov
cmps
imul
js
or
(bad)
fsub
xchg
xchg
mov
scas
push
ins
mov
mov
mov
movs
repnz
ror
test
shr
sbb
cmp
repz
add
(bad)
mov
pop
add
call
and
je
int3
(bad)
jbe
popf
sub
jae
jns
bound
pop
push
fild
stos
mov
data16
and
sbb
fadd
sbb
pushf
jae
fcmovnbe
add
ja
xchg
mov
ins
xor
in
rcl
or
fcomp
neg
rol
mov
sbb
cmp
mov
sbb
pusha
pop
pusha
cmps
xor
mov
mov
inc
nop
lds
cld
leave
xchg
retf
jmp
int3
and
adc
mov
mov
leave
jnp
push
push
leave
aaa
and
push
pusha
mov
fmul
out
xchg
fistp
sbb
dec
and
fs
bound
prefetchnta
je
jmp
daa
arpl
mov
lea
iret
mov
push
push
int3
repnz
enter
sub
clc
sbb
outs
paddb
cmp
jmp
nop
movs
and
sub
fwait
leave
scas
xchg
adc
(bad)
push
fist
frstor
inc
les
mov
dec
cmp
call
aaa
jmp
add
sub
cwde
les
rcl
fisubr
(bad)
loop
jmp
dec
pop
and
loope
and
sub
xor
mov
fs
inc
enter
in
dec
push
ror
enter
stos
push
lock
rcl
or
imul
test
add
movs
sti
mov
pop
jmp
scas
cwde
popf
push
mov
in
dec
test
int3
jae
sbb
aas
inc
adc
mov
inc
std
cli
add
shl
ins
std
jb
pop
push
scas
dec
mov
adc
mov
inc
mov
fwait
adc
in
fnsave
dec
icebp
sub
rol
stc
mov
dec
call
jmp
add
xor
cmp
stos
in
pop
(bad)
cmps
cs
inc
ror
scas
pop
ja
das
sub
cmp
mov
retf
xchg
sbb
repnz
into
sbb
xchg
les
pop
mov
retf
xchg
mov
mov
mov
pop
js
lods
stos
sub
hlt
fidiv
push
ins
mov
jge
jno
sub
push
mov
jg
push
add
dec
loope
push
cmp
(bad)
std
or
and
sub
test
jmp
(bad)
aas
call
popf
mov
stc
sub
sub
cmc
cs
lods
jge
in
xchg
pop
mov
push
cmc
xor
repnz
mov
cmc
sbb
dec
inc
push
(bad)
fstp
pusha
in
or
call
pop
jmp
sub
cmps
xor
or
adc
inc
std
pop
xor
mov
push
arpl
cmps
add
mov
scas
and
jmp
sub
sahf
int
outs
test
daa
icebp
cmp
mul
jmp
js
movs
aam
cmovs
lds
cmps
js
outs
jl
cli
jg
and
loop
mov
sbb
or
call
mov
jns
or
jmp
sbb
or
call
cmps
jno
xlat
sbb
jns
stos
and
test
add
push
daa
dec
sub
lahf
rol
lods
adc
xor
jbe
sahf
dec
lock
cmc
jmp
(bad)
mov
add
loop
mov
push
imul
lea
push
inc
sbb
ds
imul
aas
ret
ja
adc
push
add
pop
jecxz
(bad)
add
aas
rcl
scas
lds
adc
or
push
(bad)
dec
idiv
cmp
sti
mov
and
mov
mov
jmp
adc
cmp
inc
mov
jo
push
push
and
mov
out
sub
hlt
(bad)
dec
shl
jle
xchg
xor
stc
out
push
mov
clc
aam
mov
push
sahf
lods
outs
fild
repz
push
and
cmp
scas
adc
sub
inc
dec
mov
dec
or
repz
inc
(bad)
ds
das
mov
jg
sub
cld
adc
cmp
cwde
push
pop
daa
inc
and
pop
mov
(bad)
jns
push
imul
cmc
std
nop
movs
call
loopne
pop
(bad)
addr16
dec
push
jne
or
jp
push
bound
outs
xchg
aas
xchg
dec
fisttp
pop
sahf
xchg
xchg
push
into
shl
fidiv
or
pusha
xor
shl
mov
or
pop
xor
scas
in
jns
or
and
call
shl
data16
or
sub
enter
sbb
loope
dec
ss
ins
cmc
cmp
outs
xor
mov
repz
inc
xchg
lea
imul
or
and
lds
js
sub
aam
or
add
mov
inc
loopne
dec
xchg
push
cmp
pop
mov
jmp
loope
mov
int3
loop
inc
out
bound
inc
and
sbb
pop
clc
or
mov
ror
sti
and
jbe
cmc
or
mov
loop
repnz
and
ds
(bad)
cmp
dec
(bad)
js
cmp
pop
les
rol
add
jmp
out
test
(bad)
jne
cmps
div
adc
stos
push
movs
rcr
and
mov
jo
mov
test
mov
stos
cmp
push
adc
sar
or
mov
push
sub
daa
fild
bound
jo
sbb
or
sub
aaa
js
mov
xor
jge
and
add
lock
push
xchg
add
(bad)
aam
fild
xor
push
fld
rcr
add
sti
cmp
sub
push
fadd
and
mov
inc
xchg
and
test
inc
hlt
stos
(bad)
and
push
add
mov
les
inc
in
in
repz
in
scas
jns
mov
lods
and
pop
rol
jmp
pop
mov
mov
mov
mov
jo
mov
cmp
jmp
cmp
mov
je
mov
pop
pop
jge
call
xor
or
mov
out
push
fmul
push
push
xor
push
mov
and
cs
jmp
pop
push
adc
es
shl
and
pop
ror
mov
outs
ja
shrd
scas
adc
pusha
daa
sbb
push
stc
push
add
add
std
mov
aad
ds
jmp
gs
rcr
sub
add
mov
icebp
daa
in
sub
push
fnstsw
mov
in
dec
push
jae
sub
cmp
mov
das
cwde
adc
in
push
es
adc
adc
retf
push
jne
mov
movs
popf
add
retf
in
sub
rcl
pop
mov
and
ins
out
sbb
inc
aam
push
xchg
aad
inc
adc
vpsllq
movs
les
dec
adc
ror
or
in
push
sbb
iret
xor
fdivr
xchg
xchg
add
adc
add
dec
cld
sbb
xor
stc
push
dec
mov
popf
push
mov
dec
xchg
jg
dec
bound
stos
jle
(bad)
mov
mov
pushf
inc
cmp
jae
pop
aas
push
lods
inc
dec
retf
stos
mov
push
add
inc
outs
inc
clc
push
pop
and
and
and
adc
mov
mov
xor
out
push
push
fisttp
dec
sti
jno
sub
test
and
movs
sub
cmps
out
cli
add
sar
wbinvd
xchg
mov
mov
add
(bad)
cmp
test
into
sbb
call
push
cs
mov
in
scas
mov
imul
lock
imul
movs
and
test
(bad)
mov
cld
jge
scas
pop
mov
std
call
dec
and
das
add
push
fcom
jnp
loop
and
test
inc
xor
jmp
ss
ret
jecxz
or
cmps
popf
popf
and
aas
lds
jp
inc
jbe
push
icebp
loope
jle
daa
stos
cmp
jmp
adc
loopne
les
fdiv
push
jo
dec
cmps
push
fistp
adc
inc
and
in
bound
jne
pop
sti
jge
repz
or
and
loope
retf
cmps
(bad)
cld
add
outs
in
add
mov
jg
aas
pushf
enter
shl
cdq
add
(bad)
(bad)
sbb
xchg
or
add
dec
addr16
mov
sbb
rol
sbb
sbb
arpl
es
adc
iret
mov
lods
(bad)
mov
bound
mov
push
adc
mov
adc
inc
mov
inc
pop
or
mov
dec
mov
pop
push
cdq
jbe
or
out
outs
ja
sbb
mov
fwait
mov
adc
int
inc
mov
push
pop
std
shl
sbb
shr
js
jae
fsubr
jle
xor
or
sub
add
mov
and
test
add
jmp
cmp
cmp
mov
outs
add
ss
imul
cli
push
dec
jl
pushf
clc
push
and
mov
fcomp
xor
push
clc
fiadd
or
pop
ret
retf
mov
out
movs
arpl
push
leave
and
sub
push
xchg
pop
mov
js
pop
mov
shl
adc
ret
pop
sub
mov
enter
xor
out
idiv
add
or
aas
adc
mov
call
mov
pushf
cmps
mov
jne
jmp
sub
dec
addr16
clc
sub
and
lea
out
mov
jnp
dec
push
or
(bad)
push
stc
punpckhbw
xchg
retf
jp
cmps
clc
adc
sbb
add
imul
add
cmp
rcl
sub
ins
pop
adc
cmc
(bad)
jb
mov
lods
adc
or
push
push
or
inc
push
lea
inc
sub
push
(bad)
xor
retf
pushf
ret
in
fdivr
(bad)
cmc
cmc
out
mov
dec
aas
shl
inc
icebp
jle
sbb
scas
pop
sbb
add
xor
out
hlt
cli
xor
in
mov
test
mov
scas
adc
jp
mov
stos
add
xor
jecxz
fist
cmps
xchg
push
sbb
cwde
(bad)
sbb
in
xchg
out
pop
sub
les
xor
pop
xor
add
pop
ss
icebp
add
jbe
mov
stos
sbb
stc
mov
jecxz
lods
stos
mov
lods
mov
rol
scas
jns
and
jb
jmp
mov
retf
jbe
mov
and
cmp
mov
call
and
je
mov
shl
rol
cmps
jno
mov
arpl
mov
and
and
imul
xchg
fcomip
mov
sbb
or
mov
sub
sbb
loop
call
dec
call
inc
or
mov
push
test
in
inc
xchg
cwde
imul
and
fild
mov
arpl
jne
mov
pop
xchg
imul
stos
scas
pop
and
pop
mov
cmp
sub
add
xlat
sahf
icebp
and
jae
pop
mov
(bad)
stos
(bad)
jne
and
enter
mov
mov
fwait
mov
mov
ret
adc
add
push
addr16
fwait
sbb
sbb
or
and
sbb
add
movs
movs
div
bound
inc
pop
sbb
test
and
in
xchg
loope
(bad)
sbb
pop
and
dec
daa
dec
cs
pop
mov
arpl
call
mov
sti
sub
mov
cmp
cld
arpl
loop
mov
test
out
mov
inc
out
xchg
int3
inc
or
cli
xor
push
fcom
inc
dec
push
nop
rol
outs
sbb
movs
xor
(bad)
out
loopne
inc
je
mov
lods
mov
mov
mov
add
push
mov
push
aas
inc
mov
in
adc
and
stos
xor
push
or
pop
in
add
sar
out
pop
sub
int
jb
mov
sub
(bad)
mov
xchg
mov
mov
shr
ss
mov
jmp
adc
pusha
jno
jge
add
adc
mov
and
out
rol
test
sti
push
movs
scas
push
(bad)
pop
and
mov
ret
pop
mov
je
jmp
addr16
aad
and
xor
jo
dec
inc
imul
pop
mov
mov
and
push
call
out
push
and
push
sbb
(bad)
(bad)
jmp
jge
xchg
in
inc
or
mov
clc
adc
in
or
fisub
bound
or
sbb
sahf
add
lock
movs
sti
bound
iret
pop
mov
not
and
pusha
in
inc
stc
pop
cs
add
stc
mov
emms
into
imul
xlat
outs
adc
(bad)
call
movs
retf
mov
inc
(bad)
scas
mov
xchg
mov
add
and
cmp
cmp
je
fs
sbb
fadd
sub
pop
in
sub
and
xchg
add
push
cmp
cmp
cmp
into
ds
leave
data16
mov
dec
mov
pop
mov
shl
lea
ret
out
cdq
push
mov
leave
aas
daa
mov
sub
sbb
sub
cmp
enter
mov
sbb
dec
add
and
mov
or
fst
jle
movs
arpl
dec
or
or
push
pop
or
call
dec
popf
ins
xor
cmp
pop
jmp
cld
xchg
stos
pop
sti
(bad)
push
fisttp
mov
add
jp
mov
mov
pop
jmp
loop
lahf
test
and
lea
stos
dec
push
or
mov
push
fdiv
retf
inc
sub
out
in
nop
stos
(bad)
lea
and
mov
inc
adc
and
xchg
pop
dec
sub
rcl
pop
int3
cmp
data16
(bad)
retf
mov
outs
and
unpckhps
mov
cmp
mov
cmps
popf
or
pop
(bad)
stc
sub
gs
pop
mov
mov
xchg
add
xchg
in
push
add
sbb
or
add
add
dec
push
and
movs
add
cmp
xchg
add
xchg
in
push
add
sbb
or
das
lds
and
add
add
dec
inc
scas
inc
pusha
add
add
add
add
pop
cmp
add
add
sub
add
sub
add
add
add
add
add
add
add
add
add
or
add
and
push
sbb
sbb
sbb
gs
sbb
jg
sbb
xchg
push
sbb
mov
push
sbb
mov
push
pop
pop
push
dec
sbb
dec
push
sbb
adc
mov
sbb
fimul
sbb
push
sbb
call
sbb
push
sbb
call
sbb
push
sbb
call
sbb
push
sbb
call
sbb
dec
sbb
lock
add
dec
sbb
or
sbb
sbb
xchg
push
sbb
aam
sbb
(bad)
push
sbb
call
sbb
push
sbb
call
sbb
push
sbb
call
sbb
push
sbb
call
sbb
push
sbb
call
sbb
push
sbb
call
sbb
push
sbb
fcom
sbb
add
add
adc
dec
sbb
pusha
dec
sbb
mov
sbb
not
sbb
push
sbb
call
sbb
push
sbb
call
sbb
push
sbb
call
sbb
push
sbb
call
sbb
push
sbb
dec
sbb
push
sbb
stos
push
sbb
jno
sbb
dec
push
sbb
and
add
add
push
sbb
inc
push
sbb
test
sbb
not
sbb
push
sbb
call
sbb
pop
and
call
sbb
push
sbb
call
sbb
push
sbb
call
sbb
dec
sbb
std
push
sbb
mov
push
sbb
sub
add
add
adc
dec
sbb
ficom
sbb
push
sbb
call
sbb
pop
and
sbb
(bad)
jle
sbb
call
sbb
push
sbb
dec
sbb
push
sbb
jnp
sbb
sbb
add
add
adc
push
sbb
in
push
sbb
call
sbb
push
sbb
sbb
cwde
push
push
jmp
push
sbb
call
sbb
push
sbb
dec
sbb
push
sbb
popa
push
sub
push
dec
adc
or
push
sbb
in
push
sbb
call
sbb
pop
and
inc
pusha
push
jmp
bound
(bad)
js
sbb
push
sbb
call
sbb
push
sbb
icebp
push
sbb
jb
and
pop
aas
add
add
sbb
jo
sbb
jmp
sbb
call
sbb
pusha
daa
sbb
mov
jmp
fs
jmp
pop
sbb
call
sbb
push
sbb
call
sbb
push
sbb
sbb
push
sbb
call
sbb
pop
and
sbb
jmp
fs
jmp
push
sbb
call
sbb
dec
sbb
not
sbb
add
add
adc
dec
sbb
cld
push
sbb
call
sbb
test
jmp
fs
jmp
fs
jmp
dec
sbb
call
sbb
push
sbb
loope
sbb
xor
add
add
sbb
sbb
push
sbb
call
sbb
jae
sbb
cmps
pop
push
jmp
fs
jmp
fs
jmp
push
push
call
sbb
push
sbb
call
sbb
dec
sbb
add
push
sbb
and
dec
pop
pop
adc
add
add
add
add
sbb
mov
sbb
push
sbb
call
sbb
xchg
push
push
jmp
fs
jmp
fs
jmp
fs
call
sbb
sbb
dec
sbb
(bad)
push
and
sldt
add
jg
add
push
sbb
out
push
sbb
dec
sbb
push
sbb
mov
add
add
dec
sbb
sbb
push
sbb
call
sbb
jne
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
and
call
sbb
push
sbb
into
dec
pop
pop
adc
add
add
sbb
push
sbb
call
sbb
push
sbb
call
sbb
push
sbb
aam
sbb
popa
dec
and
pop
push
sbb
inc
push
sbb
call
push
pop
sbb
lea
jmp
fs
jmp
fs
jmp
fs
jmp
popa
push
jmp
sbb
push
sbb
call
sbb
push
pop
pop
push
dec
sbb
daa
push
sbb
out
push
sbb
call
sbb
push
sbb
call
sbb
push
sbb
dec
sbb
push
sbb
ja
pop
pop
or
add
add
sbb
sbb
cld
push
sbb
jmp
sbb
mov
fs
jmp
fs
jmp
fs
jmp
fs
jmp
cmp
push
sbb
call
sbb
push
sbb
das
push
sbb
inc
push
sbb
sti
push
sbb
push
sbb
outs
xor
push
sbb
call
sbb
push
sbb
call
sbb
push
sbb
outs
dec
and
pop
push
sbb
adc
call
sbb
ins
xor
stos
pusha
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
call
sbb
push
sbb
call
sbb
add
push
sbb
jle
sbb
call
sbb
sahf
pop
sbb
push
sbb
push
sbb
call
sbb
push
sbb
dec
sbb
push
sbb
push
jg
add
dec
sbb
xchg
push
sbb
call
sbb
jl
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
and
call
sbb
push
sbb
test
aas
add
add
sbb
enter
jmp
sbb
lods
bound
jmp
pop
push
(bad)
js
sbb
call
sbb
push
sbb
call
sbb
xor
add
push
sbb
call
sbb
xchg
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
(bad)
jge
sbb
push
sbb
dec
sbb
push
sbb
adc
add
add
sbb
push
sbb
clc
push
sbb
dec
fs
jmp
fs
call
cs
push
sbb
call
sbb
dec
sbb
stc
push
sbb
jns
add
add
add
add
xor
push
sbb
call
sbb
mov
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
sbb
push
sbb
data16
add
push
sbb
mov
sbb
pop
and
jmp
fs
jmp
fs
jmp
dec
sbb
call
sbb
push
sbb
call
sbb
push
sbb
and
add
add
push
sbb
lahf
push
sbb
call
sbb
lea
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
cmp
push
sbb
dec
sbb
push
add
add
add
add
pop
adc
sbb
push
sbb
inc
fs
jmp
fs
jmp
fs
jmp
cmp
push
sbb
call
sbb
push
sbb
repnz
sbb
push
push
sbb
test
sbb
push
sbb
dec
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
sbb
dec
sbb
push
push
sbb
jne
sbb
call
sbb
stos
popa
push
jmp
fs
jmp
fs
jmp
fs
call
and
call
sbb
push
sbb
dec
sbb
push
sbb
imul
sbb
add
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
inc
sbb
call
sbb
jg
add
push
and
sqrtps
sbb
push
sbb
dec
fs
jmp
fs
jmp
fs
jmp
fs
jmp
das
sbb
push
sbb
call
sbb
push
sbb
mov
dec
sbb
push
dec
sbb
cld
push
sbb
(bad)
js
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
arpl
call
call
sbb
push
sbb
push
add
add
sbb
bound
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
inc
sbb
call
sbb
push
sbb
aam
sbb
push
push
sbb
sub
sbb
push
sbb
jmp
sbb
lods
arpl
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
call
sbb
dec
sbb
dec
push
push
adc
add
add
sbb
push
sbb
call
sbb
pushf
push
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
dec
sbb
call
sbb
push
sbb
loope
sbb
and
pop
pop
pop
or
sbb
push
sbb
jmp
sbb
lods
bound
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
cmp
call
sbb
push
sbb
rcl
sbb
add
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
push
push
call
sbb
push
sbb
dec
sbb
dec
sbb
sub
add
add
sbb
push
pop
sbb
mov
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
and
call
sbb
push
sbb
pop
push
sbb
jnp
sbb
jmp
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
call
sbb
push
sbb
dec
sbb
push
push
push
and
add
add
sbb
sbb
call
sbb
nop
dec
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
call
sbb
dec
sbb
cld
push
sbb
adc
add
add
sbb
push
sbb
call
sbb
movs
pop
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
push
sbb
call
sbb
push
sbb
fist
pop
sbb
add
add
sbb
push
sbb
out
push
sbb
push
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
dec
sbb
call
sbb
aas
add
add
sbb
repnz
sbb
call
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
push
push
call
sbb
push
sbb
call
sbb
push
sbb
or
add
add
sbb
sub
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
push
sbb
push
sbb
call
sbb
push
sbb
mov
jle
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
call
sbb
sbb
push
sbb
test
add
add
add
add
sbb
sbb
call
sbb
sahf
pop
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
push
sbb
call
sbb
add
add
sbb
push
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
inc
sbb
call
sbb
push
sbb
jae
add
add
or
sbb
push
sbb
(bad)
jp
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
call
sbb
push
sbb
dec
sbb
add
add
sbb
sbb
call
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
push
sbb
push
sbb
call
sbb
push
sbb
das
push
sbb
adc
call
sbb
test
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
bound
call
sbb
push
sbb
call
sbb
add
sbb
sbb
call
sbb
lods
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
daa
sbb
push
sbb
call
sbb
push
sbb
or
add
add
push
and
sbb
push
sbb
dec
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
call
sbb
push
sbb
or
add
add
add
add
add
add
sbb
call
sbb
cmps
pop
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
push
push
call
call
sbb
push
sbb
xchg
push
sbb
cmps
push
sbb
jmp
sbb
lods
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
sbb
dec
sbb
dec
and
pop
push
sbb
mov
sbb
test
add
add
sbb
push
sbb
call
sbb
lahf
pop
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
inc
sbb
call
sbb
push
sbb
inc
dec
sbb
and
sbb
cld
push
sbb
call
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
push
sbb
call
sbb
dec
and
pop
push
sbb
mov
sbb
call
sbb
push
sbb
test
add
add
sbb
push
sbb
call
sbb
sahf
pop
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
push
sbb
call
sbb
aas
add
add
add
add
sbb
push
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
call
sbb
call
sbb
dec
and
pop
dec
sbb
mov
sbb
call
sbb
push
sbb
call
sbb
push
sbb
test
add
add
pop
adc
sbb
push
sbb
call
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
call
sbb
push
sbb
call
sbb
add
dec
sbb
sbb
push
sbb
call
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
dec
sbb
dec
and
pop
dec
sbb
mov
sbb
call
sbb
xchg
push
push
inc
sbb
call
sbb
push
sbb
test
add
add
sbb
sbb
call
sbb
sahf
push
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
push
sbb
push
sbb
call
sbb
dec
push
push
adc
add
add
sbb
sub
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
call
sbb
push
sbb
or
add
add
sub
push
sbb
mov
sbb
call
call
fs
jmp
inc
sbb
call
sbb
push
sbb
test
add
add
sbb
push
sbb
call
sbb
mov
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
call
sbb
push
sbb
call
sbb
dec
push
push
adc
sbb
push
sbb
dec
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
bound
call
sbb
push
sbb
call
sbb
add
add
sub
push
sbb
mov
sbb
call
call
push
jmp
fs
jmp
inc
sbb
push
sbb
call
sbb
push
sbb
test
add
add
sbb
push
sbb
call
sbb
stos
bound
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
inc
sbb
call
sbb
push
push
push
sbb
add
add
sbb
push
sbb
call
sbb
scas
arpl
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
and
call
sbb
push
sbb
add
add
push
sub
push
push
sbb
mov
sbb
call
call
fs
jmp
fs
jmp
fs
jmp
inc
sbb
push
sbb
call
sbb
push
sbb
test
add
add
sbb
sbb
call
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pusha
push
call
sbb
push
sbb
call
sbb
push
sbb
rcl
sbb
add
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sub
sbb
push
sbb
bound
add
add
sub
push
sbb
mov
sbb
call
sbb
xchg
dec
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
inc
sbb
push
sbb
call
sbb
push
sbb
test
add
add
sbb
popa
sub
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
aas
sbb
call
sbb
push
adc
add
push
sbb
sbb
push
sbb
jmp
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
cmp
push
sbb
call
sbb
xor
add
push
sbb
call
sbb
xchg
dec
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
inc
sbb
push
sbb
call
sbb
push
sbb
test
add
add
sbb
jae
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
push
sbb
push
sbb
call
sbb
add
add
sbb
addr16
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
dec
sbb
call
sbb
xor
add
push
sbb
call
sbb
xchg
dec
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
inc
sbb
call
sbb
push
sbb
test
add
add
sbb
push
sbb
inc
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
cmp
push
sbb
dec
sbb
add
add
add
add
push
sbb
fist
sbb
mov
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
call
sbb
dec
sbb
stc
push
sbb
or
add
add
xor
push
sbb
call
sbb
xchg
dec
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
inc
sbb
call
sbb
push
sbb
test
add
add
sbb
call
sbb
call
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
sbb
call
sbb
push
sbb
cmp
add
add
sbb
call
sbb
cmps
pop
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
call
call
sbb
push
sbb
inc
xor
add
push
sbb
call
sbb
nop
dec
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
inc
sbb
call
sbb
push
sbb
test
add
add
sbb
sbb
call
sbb
lods
bound
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sub
call
sbb
push
sbb
cwde
push
sbb
jge
sbb
jmp
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
cmp
push
sbb
call
sbb
xor
add
push
sbb
call
sbb
xchg
dec
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
inc
sbb
call
sbb
push
sbb
test
add
add
sbb
jo
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
inc
sbb
dec
sbb
push
sub
push
push
sbb
lds
sbb
add
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
call
sbb
call
sbb
xor
add
aas
add
add
sbb
stos
push
sbb
call
sbb
nop
dec
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
inc
sbb
call
sbb
push
sbb
test
add
add
adc
push
sbb
dec
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
sbb
call
sbb
dec
sbb
dec
push
and
sqrtps
sbb
push
sbb
call
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
and
call
sbb
dec
sbb
push
aas
add
add
sbb
test
push
sbb
call
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
inc
sbb
push
sbb
call
sbb
push
sbb
test
add
add
sbb
sbb
call
sbb
lods
bound
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sub
call
sbb
push
sbb
xchg
push
sbb
inc
push
sbb
call
sbb
lods
bound
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
(bad)
jg
sbb
call
sbb
aas
add
add
sbb
test
push
sbb
dec
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
inc
sbb
push
sbb
call
sbb
push
sbb
test
add
add
add
dec
sbb
fst
sbb
jns
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
inc
sbb
call
sbb
push
sbb
adc
jmp
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
sbb
push
sbb
xor
push
add
add
sbb
sbb
dec
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
inc
sbb
call
sbb
push
sbb
mov
add
add
sbb
sbb
call
sbb
mov
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
push
sbb
call
sbb
dec
sbb
daa
push
sbb
mov
add
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
cmp
push
sbb
call
sbb
push
add
add
sbb
push
sbb
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
inc
sbb
call
sbb
push
sbb
test
add
add
add
push
sbb
iret
push
sbb
push
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
and
call
sbb
push
sbb
imul
add
add
add
push
sbb
call
xchg
push
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
call
sbb
push
sbb
call
sbb
add
add
add
push
sbb
cmps
push
sbb
call
sbb
mov
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
dec
sbb
call
sbb
push
sbb
test
add
add
sbb
sbb
call
sbb
lahf
pop
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
xor
push
sbb
call
sbb
push
pop
pop
push
push
sbb
call
sbb
movs
pop
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
cmp
call
sbb
dec
sbb
sar
add
add
add
add
add
push
sbb
movs
push
sbb
call
sbb
(bad)
dec
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
inc
sbb
call
sbb
push
sbb
test
add
add
adc
push
sbb
in
sbb
push
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
inc
sbb
dec
sbb
add
add
push
sbb
inc
push
sbb
call
sbb
lods
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pusha
push
call
sbb
push
sbb
call
sbb
add
add
add
push
sbb
mov
push
sbb
dec
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
inc
sbb
call
sbb
push
sbb
test
add
add
sbb
pop
and
(bad)
cmps
pop
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
push
sbb
call
sbb
dec
pop
pop
adc
sbb
sbb
jmp
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
dec
sbb
dec
sbb
push
sbb
xor
add
add
add
push
sbb
mov
push
sbb
dec
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
inc
sbb
call
sbb
push
sbb
test
add
add
sbb
sbb
call
sbb
lea
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
call
sbb
push
sbb
cmp
sbb
jo
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
xor
push
sbb
dec
sbb
push
sbb
adc
add
add
add
push
sbb
mov
push
sbb
dec
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
dec
sbb
call
sbb
push
sbb
test
add
add
add
add
pop
and
sbb
push
sbb
jmp
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
and
call
sbb
dec
sbb
arpl
sbb
cmp
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
call
sbb
push
sbb
dec
sbb
push
sbb
mov
push
sbb
dec
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
dec
sbb
push
sbb
call
sbb
push
sbb
test
adc
push
sbb
call
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sub
sbb
push
sbb
mov
sbb
inc
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
call
sbb
sbb
push
sbb
ficom
sbb
push
sbb
dec
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
dec
sbb
call
sbb
push
sbb
ficom
sbb
push
sbb
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
push
call
sbb
push
sbb
test
sbb
iret
push
sbb
dec
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
dec
sbb
call
sbb
push
sbb
dec
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
dec
sbb
call
sbb
push
sbb
dec
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
cmp
sbb
push
sbb
mov
push
sbb
call
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
inc
sbb
dec
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
dec
sbb
inc
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
inc
sbb
call
sbb
push
sbb
out
push
sbb
call
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
push
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
call
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
dec
sbb
dec
sbb
push
sbb
cmc
push
sbb
call
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
dec
sbb
call
sbb
push
sbb
sti
push
sbb
call
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
push
sbb
call
sbb
dec
sbb
std
push
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
push
sbb
dec
sbb
dec
sbb
not
sbb
sahf
pop
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
call
sbb
call
sbb
push
sbb
out
push
sbb
call
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
dec
sbb
call
sbb
dec
sbb
out
sbb
call
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
dec
sbb
call
sbb
push
sbb
fist
sbb
xchg
dec
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
inc
sbb
push
sbb
call
sbb
push
sbb
lds
sbb
mov
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
(bad)
jle
sbb
dec
sbb
push
sbb
inc
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
cmp
push
sbb
call
sbb
push
sbb
(bad)
js
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
xor
push
sbb
call
sbb
push
sbb
jmp
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
call
sbb
push
sbb
call
sbb
sbb
push
push
sbb
call
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
call
sbb
push
sbb
aas
push
sbb
sbb
push
sbb
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
jmp
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
call
sbb
push
pop
pop
sbb
and
dec
sbb
cld
push
sbb
call
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
call
sbb
imul
jmp
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
dec
sbb
call
sbb
dec
sbb
rcl
sbb
mov
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
call
sbb
push
sbb
call
sbb
imul
jmp
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
(bad)
jle
sbb
push
sbb
dec
sbb
add
add
push
sbb
pushf
push
sbb
push
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
call
sbb
push
sbb
dec
sbb
dec
sbb
not
sbb
imul
jmp
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
das
sbb
push
sbb
call
sbb
add
add
push
sbb
gs
sbb
jmp
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
push
sbb
call
sbb
push
sbb
sbb
dec
sbb
not
sbb
imul
jmp
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
arpl
call
sbb
push
sbb
dec
sbb
add
add
add
add
sbb
push
sbb
call
sbb
cmps
pop
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
call
sbb
push
sbb
call
sbb
push
sbb
add
add
add
push
sbb
dec
dec
sbb
not
sbb
imul
jmp
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
call
sbb
call
sbb
push
pop
pop
sbb
add
add
sbb
push
sbb
dec
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
call
sbb
push
sbb
call
sbb
push
sbb
sub
add
add
sbb
sbb
not
sbb
push
sbb
lods
bound
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
inc
sbb
dec
sbb
push
sbb
mov
ja
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
push
sbb
call
sbb
dec
sbb
and
add
add
sbb
dec
sbb
not
sbb
imul
jmp
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
push
sbb
call
sbb
push
sbb
pop
push
sbb
call
sbb
lods
arpl
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
call
sbb
push
sbb
call
sbb
push
sbb
sub
add
add
sbb
sbb
not
sbb
push
sbb
lods
bound
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
call
sbb
push
sbb
call
sbb
add
add
adc
push
sbb
call
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
call
sbb
push
sbb
call
sbb
push
sbb
and
push
sbb
dec
dec
sbb
not
sbb
imul
jmp
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
inc
sbb
push
sbb
call
sbb
push
sub
push
dec
sbb
mov
jp
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
push
sbb
call
sbb
push
sbb
and
push
sbb
dec
dec
sbb
not
sbb
imul
jmp
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
call
sbb
push
sbb
sahf
push
sbb
fs
sbb
call
sbb
lods
arpl
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
call
sbb
push
sbb
dec
sbb
dec
sbb
sub
add
add
sbb
sbb
not
sbb
push
sbb
lods
bound
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
sbb
call
sbb
push
sbb
inc
dec
push
push
adc
sbb
push
sbb
call
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
call
sbb
push
sbb
call
sbb
dec
sbb
daa
push
sbb
dec
dec
sbb
not
sbb
imul
jmp
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
inc
sbb
dec
sbb
aas
add
add
add
add
sbb
ins
xor
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
push
sbb
dec
sbb
dec
sbb
sub
add
add
sbb
sbb
not
sbb
push
sbb
lods
bound
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
daa
sbb
push
sbb
call
sbb
push
sbb
ds
sbb
call
sbb
mov
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
push
sbb
dec
sbb
dec
sbb
daa
push
sbb
dec
dec
sbb
not
sbb
imul
jmp
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
call
sbb
dec
sbb
push
sbb
add
dec
sbb
rcl
sbb
jp
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
call
sbb
push
sbb
dec
sbb
dec
sbb
sub
add
add
sbb
sbb
not
sbb
push
sbb
lods
bound
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
push
sbb
dec
sbb
push
sbb
addr16
sbb
call
sbb
test
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
push
sbb
dec
sbb
push
sbb
sub
add
add
sbb
dec
sbb
not
sbb
imul
jmp
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
call
sbb
push
sbb
call
sbb
add
add
and
push
sbb
in
sbb
inc
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
push
sbb
call
sbb
push
sbb
sub
add
add
sbb
dec
sbb
not
sbb
imul
jmp
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
push
sbb
push
sbb
call
sbb
add
add
push
sbb
jae
sbb
call
sbb
test
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
call
sbb
push
sbb
dec
sbb
push
sbb
add
push
sbb
inc
dec
sbb
not
sbb
push
sbb
lods
bound
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
call
sbb
push
sbb
call
sbb
add
inc
pop
pop
or
sbb
push
sbb
(bad)
jle
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
call
sbb
push
sbb
dec
sbb
push
sbb
sub
add
add
sbb
dec
sbb
not
sbb
imul
jmp
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
xor
push
sbb
call
sbb
jg
add
push
sbb
imul
call
sbb
movs
pop
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
push
sbb
dec
sbb
push
sbb
sub
add
add
sbb
dec
sbb
not
sbb
imul
jmp
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
push
sbb
call
sbb
dec
sbb
dec
xor
add
push
sbb
push
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
push
sbb
dec
sbb
push
sbb
sub
add
add
sbb
sbb
not
sbb
push
sbb
lods
bound
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sub
call
sbb
push
sbb
rol
add
push
sbb
push
push
sbb
call
sbb
xchg
push
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
push
sbb
dec
sbb
dec
sbb
sub
add
add
sbb
dec
sbb
not
sbb
imul
jmp
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
dec
sbb
dec
sbb
push
sbb
add
push
sbb
mov
sbb
jmp
sbb
lods
arpl
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
call
sbb
push
sbb
dec
sbb
push
sbb
add
push
sbb
dec
dec
sbb
not
sbb
imul
jmp
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
and
call
sbb
push
sbb
xchg
push
sbb
pop
dec
sbb
repz
sbb
(bad)
jg
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
call
sbb
push
sbb
call
sbb
dec
sbb
sub
push
sbb
inc
dec
sbb
not
sbb
push
sbb
lods
bound
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
push
sbb
push
sbb
dec
sbb
dec
pop
pop
adc
add
add
sbb
sbb
call
sbb
pushf
push
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
call
sbb
push
sbb
dec
sbb
push
sbb
sub
add
add
sbb
dec
sbb
not
sbb
imul
jmp
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
dec
sbb
call
sbb
push
sbb
push
push
add
add
sbb
push
sbb
jmp
sbb
test
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
call
sbb
push
sbb
call
sbb
push
sbb
sub
add
add
sbb
dec
sbb
not
sbb
imul
jmp
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
sbb
call
sbb
push
sbb
cmps
dec
sbb
sbb
push
sbb
push
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
push
sbb
call
sbb
dec
sbb
sub
push
sbb
inc
dec
sbb
not
sbb
push
sbb
lods
bound
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sub
push
sbb
dec
sbb
dec
push
push
adc
add
add
sbb
push
sbb
call
sbb
mov
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
call
sbb
push
sbb
call
sbb
dec
sbb
sub
push
sbb
dec
dec
sbb
not
sbb
imul
jmp
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
(bad)
js
sbb
push
sbb
dec
sbb
dec
sbb
cmp
push
sbb
xchg
push
sbb
call
sbb
cdq
push
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
push
sbb
call
sbb
push
sbb
add
add
push
sbb
inc
dec
sbb
not
sbb
push
sbb
lods
bound
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
dec
sbb
call
sbb
push
sbb
jne
add
add
xor
push
sbb
call
sbb
mov
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
push
sbb
call
sbb
push
sbb
xor
add
add
sbb
sbb
not
sbb
push
sbb
lods
bound
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
push
sbb
call
sbb
push
sbb
lods
add
add
dec
push
push
pop
push
sbb
loop
sbb
jmp
sbb
test
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
push
sbb
call
sbb
push
sbb
add
add
push
sbb
dec
dec
sbb
not
sbb
imul
jmp
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
call
and
call
sbb
push
sbb
iret
dec
sbb
or
add
add
sbb
out
push
sbb
jmp
sbb
stos
pusha
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
call
sbb
push
sbb
call
sbb
push
sbb
xor
add
add
sbb
sbb
not
sbb
push
sbb
lods
bound
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
call
sbb
push
sbb
dec
sbb
dec
sbb
sbb
push
sbb
ds
sbb
not
sbb
imul
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
call
sbb
push
sbb
call
sbb
push
sbb
add
push
sbb
inc
dec
sbb
not
sbb
push
sbb
lods
bound
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
sbb
call
sbb
push
sbb
in
push
sbb
sub
add
add
sbb
sbb
cli
push
sbb
jmp
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
push
sbb
dec
sbb
dec
sbb
xor
add
add
sbb
dec
sbb
not
sbb
imul
jmp
push
jmp
fs
jmp
fs
jmp
fs
jmp
daa
sbb
push
sbb
call
sbb
push
sbb
cmp
add
add
sbb
sbb
clc
push
sbb
jmp
sbb
test
fs
jmp
fs
jmp
fs
jmp
sbb
push
sbb
call
sbb
push
sbb
add
push
sbb
inc
dec
sbb
not
sbb
push
sbb
lods
bound
jmp
fs
jmp
fs
jmp
pop
sbb
call
sbb
push
sbb
hlt
push
sbb
aas
push
sbb
dec
dec
sbb
stc
push
sbb
jmp
jmp
fs
jmp
fs
jmp
sbb
push
sbb
dec
sbb
dec
sbb
xor
add
add
sbb
dec
sbb
not
sbb
imul
jmp
push
jmp
fs
call
sbb
push
sbb
dec
sbb
dec
sbb
aaa
push
sbb
inc
push
sbb
repnz
sbb
call
sbb
popf
push
sbb
jmp
sbb
push
sbb
call
sbb
push
sbb
xor
add
add
sbb
dec
sbb
not
sbb
imul
jmp
push
dec
push
sbb
push
sbb
dec
sbb
push
sbb
xor
add
add
sbb
dec
sbb
out
sbb
call
sbb
mov
call
sbb
push
sbb
dec
sbb
push
sbb
xor
add
add
sbb
dec
sbb
not
sbb
imul
(bad)
jg
sbb
push
sbb
call
sbb
push
sbb
(bad)
push
sbb
pop
push
sbb
pop
push
sbb
rcl
sbb
push
sbb
call
sbb
push
sbb
out
push
sbb
xor
add
add
sbb
dec
sbb
not
sbb
push
sbb
call
sbb
dec
sbb
mov
pop
pop
pop
or
sbb
push
sbb
out
push
sbb
xor
push
sbb
inc
dec
sbb
not
sbb
push
sbb
cdq
xor
add
push
sbb
push
sbb
xor
add
add
sbb
push
sbb
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
aas
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
(bad)
(bad)
(bad)
(bad)
jmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
(bad)
(bad)
inc
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
cld
add
aas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
(bad)
(bad)
(bad)
clc
add
aas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
add
(bad)
(bad)
push
add
jg
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
push
add
jg
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
jmp
add
jg
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
inc
add
(bad)
(bad)
(bad)
cld
jg
(bad)
inc
add
(bad)
cld
add
add
(bad)
(bad)
clc
aas
(bad)
(bad)
inc
add
jg
add
add
(bad)
push
pop
(bad)
(bad)
inc
add
jg
add
add
(bad)
jmp
ud0
inc
add
aas
clc
add
add
(bad)
inc
pop
(bad)
(bad)
inc
add
aas
lock
add
(bad)
inc
add
add
lock
add
(bad)
inc
add
(bad)
inc
add
pop
lock
add
(bad)
inc
add
(bad)
inc
add
pavgb
add
(bad)
(bad)
cld
add
jg
inc
add
pavgb
add
(bad)
(bad)
clc
add
aas
(bad)
inc
add
pop
rol
add
lock
pop
(bad)
inc
add
pop
rol
add
loopne
add
(bad)
inc
add
pop
rol
add
rol
pop
(bad)
inc
add
add
add
add
inc
cld
add
add
add
add
inc
add
add
cld
add
add
add
add
inc
add
add
clc
add
add
add
add
cld
add
add
jg
add
add
add
add
clc
add
add
aas
lock
add
add
add
lock
add
pop
lock
add
add
add
pop
loopne
add
add
loopne
add
add
add
add
rol
add
pop
loopne
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
loopne
add
add
add
rol
add
add
(bad)
add
add
add
add
add
add
add
pop
clc
add
add
add
add
add
add
add
aas
cld
add
add
add
pop
loopne
add
add
add
add
add
add
pop
loopne
add
add
add
inc
add
add
add
lock
add
add
(bad)
inc
add
lock
add
add
(bad)
inc
add
add
add
clc
add
add
add
(bad)
jmp
add
add
add
clc
add
add
add
(bad)
push
add
add
add
clc
add
add
add
(bad)
(bad)
clc
add
add
add
cld
add
add
add
(bad)
(bad)
cld
add
add
add
cld
add
add
add
(bad)
inc
add
add
aas
inc
add
add
(bad)
(bad)
(bad)
inc
add
add
jg
add
add
add
(bad)
(bad)
inc
(bad)
inc
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
inc
(bad)
(bad)
(bad)
jmp
add
add
(bad)
inc
(bad)
(bad)
(bad)
push
add
add
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
clc
add
add
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
cld
add
add
(bad)
jmp
add
add
(bad)
(bad)
(bad)
inc
add
pop
(bad)
push
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
ud0
clc
add
add
(bad)
(bad)
(bad)
(bad)
inc
(bad)
clc
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
pop
(bad)
(bad)
cld
add
pop
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
aas
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
jg
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
cld
add
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
jmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
(bad)
(bad)
(bad)
(bad)
cld
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
aas
(bad)
(bad)
(bad)
(bad)
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
jg
(bad)
(bad)
(bad)
call
(bad)
(bad)
(bad)
(bad)
stc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
loop
add
inc
add
sub
add
inc
add
add
add
add
add
add
inc
add
xor
add
push
sbb
pop
push
sbb
mov
sbb
push
pop
sbb
push
push
sbb
dec
sbb
sbb
and
mov
push
sbb
call
sbb
push
sbb
call
sbb
pop
and
dec
sbb
push
push
add
add
sbb
push
sbb
sbb
data16
mul
sbb
push
sbb
call
sbb
push
sbb
adc
and
push
add
add
sbb
push
sbb
pop
and
cmc
test
xchg
push
sbb
not
jmp
jg
add
push
sbb
inc
push
sbb
sbb
mov
jmp
push
push
call
clc
push
sbb
mov
or
add
add
sbb
push
push
sbb
mov
jmp
fs
dec
sbb
push
sbb
pop
dec
sbb
sbb
push
sbb
cmp
sbb
ins
cs
cmps
pop
push
jmp
fs
call
sbb
test
add
push
sbb
out
push
sbb
call
push
sbb
adc
push
sbb
outs
push
sbb
test
fs
jmp
pop
push
call
sbb
dec
sbb
push
push
sbb
fs
sbb
call
not
sbb
push
sbb
cdq
dec
push
push
pop
add
add
push
sbb
sbb
call
jmp
fs
jmp
sub
push
sbb
mov
add
add
sbb
popf
push
sbb
cmc
push
sbb
not
jl
sbb
or
add
add
sbb
mov
fs
jmp
fs
jmp
inc
sbb
loop
sbb
or
add
add
pop
or
sbb
(bad)
dec
sbb
call
es
push
sbb
fist
sbb
push
push
sbb
movs
pop
push
jmp
fs
jmp
fs
jmp
and
repz
sbb
dec
push
sbb
ins
pop
and
clc
scas
arpl
jmp
arpl
inc
sbb
stc
push
sbb
jae
add
add
add
add
jo
push
sbb
mov
fs
jmp
fs
jmp
fs
call
sbb
add
dec
and
pop
push
push
sbb
xchg
dec
sbb
jmp
fs
call
and
not
sbb
push
sbb
inc
push
sbb
stc
sahf
push
push
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
push
sbb
jo
add
add
sbb
scas
fs
jmp
fs
jmp
pop
push
jmp
sbb
push
push
sbb
push
sbb
adc
mov
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
dec
sbb
and
add
add
sbb
sbb
push
jmp
fs
jmp
fs
jmp
sub
not
sbb
push
pop
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
call
sbb
add
aas
add
add
sbb
push
jmp
fs
jmp
fs
jmp
pusha
push
call
sbb
push
sbb
add
push
sbb
dec
push
and
imul
fs
jmp
fs
jmp
fs
jmp
fs
dec
sbb
mov
add
add
sbb
mov
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
push
sbb
add
add
push
sbb
or
call
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
aas
sbb
xchg
add
add
push
sbb
lahf
jg
sbb
jmp
fs
jmp
fs
jmp
fs
call
sbb
not
sbb
push
sbb
jbe
sub
imul
fs
jmp
fs
jmp
fs
jmp
fs
jmp
cmp
not
sbb
jg
add
push
pop
sbb
push
push
sbb
push
sbb
lea
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
cmp
push
push
sbb
add
add
dec
and
pop
push
sbb
out
cwde
push
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
ss
add
add
add
add
push
sbb
mov
pop
and
not
sbb
push
sbb
mov
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pusha
sbb
not
sbb
add
add
sbb
daa
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
cmp
(bad)
push
sbb
call
add
push
push
sbb
cmps
pop
push
jmp
sbb
push
sbb
xchg
add
add
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
dec
sbb
xor
add
push
sbb
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
inc
sbb
mov
add
add
push
push
sbb
cmps
pop
push
jmp
fs
jmp
and
cmc
push
sbb
xchg
add
add
sbb
test
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
and
not
sbb
add
add
sbb
push
sbb
clc
stos
bound
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
call
push
sbb
add
add
push
push
sbb
cmps
pop
push
jmp
fs
jmp
fs
jmp
and
cmc
push
sbb
xchg
add
add
sbb
cwde
push
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
inc
sbb
fild
add
add
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
cld
dec
pop
pop
and
add
add
sbb
cmps
pop
push
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
push
sbb
xchg
add
add
sbb
push
sbb
cld
stos
popa
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
cli
push
sbb
xor
add
add
add
add
fst
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sub
repz
sbb
push
add
add
sbb
cmps
pop
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
push
sbb
test
add
add
sbb
sub
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
xor
sbb
dec
pop
pop
adc
sbb
test
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
dec
sbb
rol
add
add
sbb
pop
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
and
hlt
push
sbb
test
add
add
add
push
sbb
fimul
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
dec
sbb
in
add
add
sbb
and
repnz
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
push
sbb
dec
add
add
push
pop
sbb
cmps
pop
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
push
sbb
test
add
add
sbb
push
and
imul
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pusha
sbb
cld
push
sbb
sbb
cmp
cli
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
dec
sbb
rol
add
add
add
add
sbb
pop
and
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
call
sbb
push
sbb
test
add
add
add
add
sbb
fld
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
and
sbb
push
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
arpl
call
sbb
push
sbb
add
add
add
push
sbb
cdq
pop
and
mul
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
call
repz
sbb
test
add
add
add
add
sbb
scas
arpl
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
push
sbb
push
sbb
mov
sbb
xchg
dec
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
call
sbb
clc
push
sbb
ds
push
sbb
movs
pop
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
call
sbb
push
sbb
test
sbb
sbb
clc
popf
push
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
inc
sbb
ret
sbb
popf
push
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
dec
sbb
cli
pop
and
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
call
sbb
push
sbb
cli
lea
std
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
dec
sbb
in
sbb
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
inc
sbb
movs
pop
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
inc
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
call
sbb
sbb
movs
pop
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
std
push
sbb
cld
movs
pop
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
sbb
cli
push
sbb
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
call
sbb
lock
sbb
call
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
push
sbb
jecxz
pop
sbb
xchg
push
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
dec
sbb
aam
pop
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
inc
sbb
push
push
sbb
jbe
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
call
push
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
push
sbb
ja
sbb
push
arpl
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
push
sbb
stc
push
sbb
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
and
cmc
push
sbb
inc
push
push
push
and
sbb
stos
bound
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
call
sbb
stc
push
push
sbb
sbb
sbb
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
call
sbb
dec
push
push
pop
add
add
push
sbb
out
push
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
call
sbb
stc
push
sbb
add
add
add
push
sbb
bound
clc
fwait
push
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
dec
sbb
fadd
add
add
add
add
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
push
push
call
sbb
push
sbb
add
push
sbb
bound
clc
fwait
push
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
push
sbb
push
sbb
add
add
add
dec
sbb
inc
pop
and
hlt
scas
arpl
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
call
sbb
stc
push
sbb
add
push
sbb
arpl
neg
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
bound
call
sbb
push
sbb
xor
add
add
add
add
add
add
sbb
out
xchg
push
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
push
sbb
stc
push
sbb
add
push
sbb
arpl
neg
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
dec
push
sbb
add
add
push
sbb
jle
sub
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
push
push
call
sbb
push
sbb
push
push
sbb
bound
clc
fwait
push
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
push
sbb
ins
dec
sbb
adc
sbb
clc
mov
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
push
sbb
stc
push
sbb
add
push
sbb
arpl
neg
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
push
push
call
cmc
push
adc
add
push
sbb
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
call
sbb
stc
push
sbb
add
push
sbb
arpl
neg
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
push
sbb
lea
add
add
push
pop
push
sbb
neg
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
call
sbb
stc
push
sbb
push
push
sbb
bound
clc
fwait
push
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
dec
sbb
repz
sbb
adc
add
add
sbb
sub
scas
arpl
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
push
sbb
cli
push
sbb
push
push
sbb
arpl
neg
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
push
push
sbb
add
add
sub
push
sbb
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
push
sbb
cli
push
sbb
push
push
sbb
arpl
neg
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
cmp
push
sbb
aad
add
add
add
add
sbb
push
sbb
clc
popf
push
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
push
push
call
sbb
push
pop
sbb
add
add
sbb
sbb
clc
fwait
push
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
call
sbb
clc
push
sbb
add
push
sbb
sbb
test
fs
jmp
fs
jmp
fs
jmp
fs
jmp
push
sbb
cli
push
push
sbb
add
add
sbb
sbb
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
call
sbb
push
sbb
pop
add
add
push
sbb
mov
sub
imul
fs
jmp
fs
jmp
fs
jmp
push
sbb
cli
push
push
sbb
add
add
sbb
sbb
sbb
jmp
fs
jmp
fs
jmp
pusha
push
call
sbb
push
pop
sbb
add
add
or
(bad)
push
sbb
lods
arpl
jmp
fs
jmp
fs
call
sbb
stc
push
sbb
pop
push
sbb
bound
clc
fwait
push
push
jmp
fs
jmp
fs
jmp
sbb
push
push
sbb
dec
and
pop
dec
adc
push
push
sbb
aam
xor
clc
lods
arpl
jmp
fs
call
sbb
cli
push
push
sbb
add
push
sbb
arpl
neg
push
jmp
pusha
sbb
stc
push
push
sbb
push
sbb
or
add
add
sbb
push
sbb
sbb
test
push
sbb
cli
push
push
sbb
add
push
sbb
arpl
neg
push
call
sbb
push
push
sbb
push
adc
add
dec
sbb
or
scas
pop
and
push
push
sbb
add
add
sbb
sbb
sbb
push
pop
sbb
add
add
sbb
push
sbb
arpl
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
(bad)
(bad)
(bad)
(bad)
inc
ud0
(bad)
(bad)
(bad)
inc
aas
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
add
push
(bad)
(bad)
push
pop
(bad)
push
(bad)
(bad)
jmp
ud0
lock
(bad)
inc
ud0
add
(bad)
(bad)
clc
pop
(bad)
inc
aas
(bad)
(bad)
cld
add
inc
aas
(bad)
(bad)
cld
add
cld
add
(bad)
inc
jg
add
(bad)
inc
aas
clc
add
(bad)
(bad)
inc
aas
lock
(bad)
(bad)
inc
pop
loopne
(bad)
(bad)
(bad)
inc
pavgb
(bad)
cld
jg
add
rol
clc
aas
inc
pop
rol
lock
inc
add
add
loopne
inc
add
inc
add
inc
add
inc
add
add
add
add
add
cmp
add
add
sbb
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
clc
add
add
add
aas
cld
add
add
add
jg
add
pop
loopne
add
inc
add
lock
(bad)
inc
add
inc
add
clc
add
(bad)
jmp
add
cld
add
(bad)
push
add
cld
add
(bad)
(bad)
clc
add
add
(bad)
(bad)
cld
add
add
(bad)
inc
(bad)
inc
add
inc
(bad)
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
test
add
and
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
or
sbb
bound
sbb
push
and
popf
push
pop
pop
sbb
sbb
and
push
sbb
cld
push
sbb
call
sbb
pop
and
mov
push
sbb
inc
push
sbb
ss
and
pop
daa
sbb
ja
sbb
pop
and
sbb
push
sbb
inc
jg
add
push
sbb
and
sub
out
fwait
push
push
call
and
in
sbb
inc
push
add
add
sbb
pop
and
in
call
dec
and
int
sbb
adc
add
add
sbb
and
sldt
add
push
pop
pop
push
pop
and
retf
js
sbb
stos
bound
jmp
dec
sbb
push
pop
sbb
dec
sbb
or
add
add
sbb
push
sbb
clc
pop
and
push
sbb
and
dec
sbb
and
and
out
dec
push
std
scas
fs
jmp
pop
sbb
out
sbb
adc
dec
pop
pop
and
sbb
mov
cld
pop
and
jmp
sbb
push
sbb
sub
sbb
fwait
push
push
jmp
fs
jmp
xor
jmp
sbb
pop
push
sbb
sbb
scas
arpl
dec
pop
sbb
push
push
sbb
add
push
sbb
sbb
sbb
lahf
pop
push
jmp
fs
jmp
pop
push
call
sbb
aas
add
add
and
out
pop
push
jmp
pop
push
jmp
out
pop
pop
sbb
pop
pop
pop
or
sbb
xchg
push
sbb
jmp
fs
jmp
ds
push
sbb
arpl
add
add
jne
inc
sbb
scas
fs
jmp
arpl
push
sbb
pop
pop
sbb
pop
and
xchg
imul
fs
jmp
fs
jmp
es
dec
sbb
adc
add
add
sbb
in
scas
fs
jmp
fs
jmp
cmp
hlt
push
pop
sbb
push
push
sbb
das
sbb
scas
fs
jmp
fs
jmp
fs
jmp
and
fiadd
add
add
sbb
scas
fs
jmp
fs
jmp
fs
push
sbb
push
pop
sbb
xor
add
mov
fs
jmp
fs
jmp
fs
jmp
and
mov
add
add
add
add
sbb
cmps
pop
push
jmp
fs
jmp
fs
jmp
daa
sbb
push
sbb
aas
pop
and
jge
sbb
scas
fs
jmp
fs
jmp
fs
jmp
push
push
call
sbb
add
add
pop
and
movs
pop
and
lea
add
add
sbb
sahf
pop
sbb
jmp
fs
jmp
fs
jmp
and
in
pop
pop
or
add
add
add
pop
and
test
fs
jmp
fs
jmp
fs
jmp
pop
push
call
sbb
add
add
sbb
xor
out
pop
and
lea
add
add
sbb
mov
fs
jmp
fs
jmp
fs
jmp
aas
sbb
push
and
add
add
push
sbb
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
and
aam
add
add
sbb
jp
sbb
scas
fs
jmp
xor
out
pop
and
lea
add
add
sbb
cmps
pop
push
jmp
fs
jmp
fs
jmp
fs
jmp
pop
sbb
inc
pop
pop
or
add
add
add
add
mov
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
and
in
add
add
add
add
sbb
jns
sbb
scas
fs
jmp
fs
jmp
xor
sbb
xor
add
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
cmp
sbb
add
add
or
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
push
sbb
push
sbb
add
pop
and
mov
scas
fs
jmp
fs
jmp
fs
jmp
xor
out
pop
and
mov
add
add
sbb
cs
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
call
sbb
add
add
push
sbb
inc
jne
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
call
and
xchg
add
add
pop
and
mov
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
xor
out
pop
and
mov
add
add
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
call
sbb
push
sbb
adc
xchg
dec
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
and
out
sbb
adc
add
add
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
xor
sbb
add
add
add
add
sbb
sbb
lods
bound
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
cmp
sbb
and
ret
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
dec
and
pop
and
sahf
jne
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
xor
in
push
and
mov
add
add
add
add
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
dec
sbb
mov
lods
bound
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
xor
out
push
pop
sbb
push
pop
sbb
lods
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
xor
sbb
addr16
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
pop
and
out
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pusha
sbb
lock
sbb
lods
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
aaa
sbb
out
test
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
sbb
pop
and
jmp
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
call
sbb
pop
and
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
and
out
pop
and
out
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
and
jmp
and
in
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
and
out
and
fld
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
call
sbb
pop
and
lods
call
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
call
push
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
call
and
movs
push
sbb
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
dec
sbb
(bad)
pop
and
fcom
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
inc
sbb
push
sbb
push
sbb
das
imul
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
dec
sbb
xlat
dec
adc
or
pop
pop
sbb
xchg
dec
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
in
push
sbb
add
add
push
and
out
arpl
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
dec
sbb
fmul
adc
push
sbb
adc
xchg
dec
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
and
jecxz
add
add
add
add
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
dec
sbb
xlat
dec
adc
push
push
sbb
adc
xchg
dec
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
dec
sbb
xchg
push
sbb
sub
sub
jmp
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
dec
sbb
fisttp
push
adc
add
add
adc
xchg
dec
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
call
sbb
push
sbb
add
pop
and
int3
lahf
pop
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
dec
sbb
fmul
adc
push
sbb
adc
xchg
dec
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
call
and
ret
add
dec
sbb
inc
addr16
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
dec
sbb
fst
and
push
sbb
adc
xchg
dec
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sub
out
push
sbb
xor
pop
pop
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
dec
sbb
fst
and
push
sbb
adc
xchg
dec
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
dec
sbb
scas
push
sbb
pop
pop
and
in
test
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
dec
sbb
fcom
and
push
sbb
adc
xchg
dec
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
pop
sbb
in
dec
push
push
pop
push
pop
sbb
out
scas
fs
jmp
fs
jmp
fs
jmp
fs
call
and
push
and
sldt
add
push
sbb
adc
xchg
dec
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
push
sbb
push
pop
and
test
scas
fs
jmp
fs
jmp
fs
call
and
(bad)
pop
adc
add
add
adc
xchg
dec
sbb
jmp
fs
jmp
fs
push
sbb
pop
and
popf
push
sub
push
pop
and
les
fs
jmp
fs
call
and
fimul
pop
adc
add
add
adc
xchg
dec
sbb
jmp
fs
inc
and
mov
push
sbb
or
sbb
add
scas
fs
call
and
(bad)
pop
adc
add
add
adc
xchg
dec
sbb
(bad)
jge
sbb
lds
sub
pop
pop
pop
or
sbb
pop
and
fisttp
pop
adc
add
add
adc
imul
sbb
add
add
push
sbb
push
adc
add
add
adc
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
inc
(bad)
(bad)
inc
add
inc
(bad)
(bad)
inc
add
clc
pop
(bad)
(bad)
inc
add
loopne
(bad)
(bad)
inc
add
cmp
inc
add
add
inc
add
inc
add
inc
inc
add
pop
(bad)
inc
aas
add
lock
(bad)
jmp
pop
add
lock
(bad)
jmp
sldt
loopne
(bad)
push
sldt
ror
push
pop
add
ror
jg
add
add
add
add
add
add
add
add
pop
rol
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lock
add
rol
clc
add
add
loopne
aas
cld
add
add
loopne
jg
add
add
lock
inc
sldt
clc
add
inc
add
inc
pop
add
cld
pop
(bad)
jmp
aas
add
dec
(bad)
push
jg
add
pop
(bad)
(bad)
stc
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
stos
add
fmul
add
add
add
add
add
add
add
add
add
add
add
and
add
add
adc
add
adc
push
and
outs
dec
sbb
adc
and
and
iret
push
sbb
cli
pop
and
ret
sbb
dec
sbb
or
sbb
jge
sbb
popa
sub
popa
and
sbb
mov
inc
sbb
pop
sbb
add
add
sbb
push
sbb
add
arpl
sbb
inc
sbb
scas
fs
call
sbb
pusha
daa
sbb
and
mov
pop
pop
and
add
add
sbb
xchg
dec
sbb
jmp
sub
jg
add
push
add
add
sbb
cmps
pop
push
push
loopne
sbb
add
add
sbb
dec
sbb
scas
fs
jmp
push
sbb
pop
pop
es
cwde
push
push
cld
scas
fs
dec
sbb
pop
and
scas
fs
jmp
fs
push
sbb
push
sbb
or
add
add
pop
adc
sbb
scas
fs
jmp
push
sbb
pop
sub
movs
push
sbb
lods
arpl
jmp
fs
jmp
xor
outs
xor
scas
fs
jmp
fs
dec
daa
sbb
add
add
sbb
mov
scas
fs
jmp
fs
jmp
xor
pusha
sub
lahf
popa
sub
xchg
imul
push
jmp
fs
jmp
xor
fisttp
push
adc
add
add
add
add
sbb
lods
fs
jmp
fs
jmp
fs
jmp
sbb
pusha
sub
lahf
xchg
dec
sbb
repz
sub
xchg
imul
into
scas
fs
jmp
fs
jmp
pop
push
jmp
sbb
push
sbb
sbb
scas
fs
jmp
fs
jmp
fs
push
sbb
pop
pop
pop
or
add
add
sbb
scas
fs
jmp
dec
sbb
bound
sbb
dec
adc
or
scas
fs
jmp
fs
jmp
fs
push
sbb
dec
sbb
or
mov
fs
jmp
fs
jmp
fs
call
and
push
bound
sbb
scas
fs
jmp
fs
jmp
dec
sbb
bound
sbb
pop
and
pop
xchg
dec
sbb
scas
fs
jmp
fs
jmp
fs
call
and
pop
push
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
bound
sbb
scas
fs
jmp
fs
jmp
fs
jmp
push
sbb
bound
sbb
add
add
add
add
sub
retf
scas
arpl
jmp
fs
jmp
fs
jmp
bound
jmp
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
call
sub
jge
sub
popf
xchg
dec
push
imul
fs
jmp
fs
jmp
fs
jmp
fs
call
sub
pop
and
test
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sbb
ins
xor
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
inc
sbb
xchg
dec
push
imul
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
call
inc
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
xor
je
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
xor
fbstp
fldcw
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
push
sbb
jo
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
xor
push
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
inc
sbb
mov
out
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sub
sbb
cmps
pop
push
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
dec
sub
jp
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
push
jmp
sbb
mov
icebp
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
dec
sub
jnp
add
add
add
add
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
inc
sbb
sub
push
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
inc
sbb
arpl
sbb
add
add
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
sub
add
add
add
pop
daa
sbb
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
inc
sbb
arpl
sbb
add
add
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
push
sbb
pop
sbb
add
add
add
add
and
push
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
dec
sub
bound
sbb
scas
fs
jmp
fs
jmp
fs
jmp
arpl
jmp
sbb
aas
add
add
add
add
sbb
inc
sbb
jmp
fs
jmp
fs
dec
sub
popa
sbb
scas
fs
jmp
fs
jmp
fs
inc
and
inc
popa
daa
sbb
scas
fs
jmp
fs
dec
sub
popa
sbb
scas
fs
jmp
fs
call
sub
xchg
push
add
add
sbb
scas
fs
dec
sub
popa
sbb
scas
fs
call
sub
scas
add
add
xor
add
js
sbb
popa
sub
add
add
bound
sbb
popa
sub
push
and
push
and
(bad)
(bad)
(bad)
(bad)
push
(bad)
(bad)
inc
(bad)
(bad)
cld
pop
cld
(bad)
clc
aas
cld
aas
lock
cld
pop
loopne
inc
sar
sar
add
cld
aas
add
js
add
jo
add
pusha
add
add
add
add
add
(bad)
add
pop
clc
add
aas
cld
pop
loopne
inc
lock
dec
std
(bad)
(bad)
mov
add
add
add
add
cwde
mov
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
sbb
sub
pop
and
cmps
pop
and
xor
add
jp
sbb
imul
int3
pop
es
pop
sub
cmp
sbb
mov
sub
mov
pop
pop
or
add
add
push
pusha
sub
jns
pop
pop
or
add
add
sbb
lea
loopne
fs
push
sbb
push
pop
pop
pop
or
sbb
iret
arpl
sbb
add
add
sbb
mov
in
fs
jmp
sub
push
arpl
sbb
std
xchg
push
sbb
mov
add
add
add
add
adc
jl
sbb
scas
fs
jmp
inc
sbb
xor
add
push
sbb
or
fs
jmp
sub
add
ins
xor
xchg
stos
popa
push
jmp
fs
(bad)
jge
sbb
pusha
daa
sbb
pop
and
and
jnp
sbb
scas
fs
jmp
push
sbb
arpl
sbb
add
add
sbb
xchg
loope
fs
jmp
fs
(bad)
jge
sbb
pusha
daa
sbb
add
jl
sbb
and
jl
sbb
scas
fs
jmp
fs
push
sbb
jg
add
addr16
push
jmp
fs
jmp
inc
sbb
dec
adc
or
add
add
pop
sub
add
scas
fs
jmp
aas
sbb
and
add
add
push
sbb
adc
push
jmp
fs
call
daa
sbb
jne
sbb
scas
fs
jmp
fs
jmp
sbb
add
pop
sub
cmp
jmp
fs
jmp
ds
pop
and
and
sub
jnp
pop
push
(bad)
scas
fs
jmp
fs
jmp
xor
jg
sbb
scas
fs
jmp
fs
jmp
fs
inc
and
inc
cmp
jmp
fs
jmp
fs
jmp
ds
pop
and
shr
fs
jmp
fs
jmp
cmp
xlat
scas
fs
jmp
fs
jmp
fs
jmp
sbb
jmp
fs
jmp
fs
jmp
fs
jmp
inc
sbb
scas
arpl
jmp
fs
jmp
fs
jmp
inc
sbb
(bad)
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
(bad)
jg
sbb
jg
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
cmp
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
inc
sbb
mov
jecxz
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
cmp
mov
lods
arpl
jmp
fs
jmp
fs
jmp
fs
jmp
fs
dec
das
sbb
sub
dec
mov
loope
fs
jmp
fs
jmp
fs
jmp
fs
jmp
popa
push
jmp
sbb
pop
and
sbb
jmp
fs
jmp
fs
jmp
fs
dec
sub
dec
sub
dec
mov
jecxz
fs
jmp
fs
jmp
fs
jmp
fs
dec
sbb
add
add
jb
sbb
scas
fs
jmp
fs
jmp
fs
jmp
inc
sbb
addr16
dec
sub
dec
mov
jecxz
fs
jmp
fs
jmp
fs
jmp
xor
mov
add
add
pusha
and
sbb
jmp
fs
jmp
inc
sbb
addr16
dec
sub
dec
mov
jecxz
fs
jmp
fs
jmp
inc
sbb
arpl
add
imul
sbb
scas
fs
jmp
inc
sbb
gs
dec
sub
dec
mov
jecxz
fs
jmp
pop
sbb
imul
add
sbb
push
cld
mov
in
sub
dec
sub
dec
mov
jecxz
pop
sbb
mov
jg
add
addr16
dec
sub
dec
imul
add
(bad)
(bad)
inc
dec
inc
clc
aas
inc
lock
add
dec
add
inc
add
ret
rol
add
add
sbb
add
jle
add
inc
add
inc
add
(bad)
inc
add
add
add
add
dec
lds
add
push
add
add
add
add
add
add
add
add
sub
add
add
and
add
add
nop
push
add
pop
pop
pop
or
sbb
sub
ret
sbb
outs
das
sbb
inc
sbb
leave
pop
sub
sub
add
add
adc
push
add
add
xchg
mov
inc
sbb
adc
add
add
adc
jno
sbb
jno
sbb
movs
pop
push
sti
imul
add
imul
std
jg
sbb
arpl
add
add
ins
xor
addr16
imul
inc
sbb
push
sub
push
dec
and
pop
mov
fild
inc
sbb
sbb
add
add
sub
xchg
iret
scas
fs
jmp
inc
sbb
outs
xor
pop
test
int3
scas
fs
jmp
cmp
mov
add
add
sbb
popa
push
jmp
fs
dec
add
add
add
add
add
add
sbb
jmp
push
sbb
imul
pop
jg
add
mov
scas
fs
jmp
push
sbb
dec
jge
sbb
scas
fs
jmp
pop
sbb
popa
sub
inc
add
add
outs
xor
jmp
fs
jmp
push
sbb
push
sbb
add
add
sbb
mov
fs
jmp
fs
(bad)
jns
sbb
xchg
retf
scas
fs
jmp
fs
jmp
cmp
pusha
xchg
push
sbb
jmp
fs
jmp
push
sbb
push
sbb
jge
sbb
scas
fs
jmp
fs
jmp
inc
sbb
fld
fs
jmp
fs
jmp
push
sbb
scas
fs
jmp
fs
jmp
fs
jmp
push
sbb
(bad)
scas
fs
jmp
fs
jmp
inc
sbb
mov
fldcw
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
inc
inc
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
pop
sbb
cld
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
inc
sbb
jns
sbb
scas
fs
jmp
fs
jmp
fs
jmp
pop
sbb
call
push
cld
scas
fs
jmp
fs
jmp
fs
jmp
fs
(bad)
jp
sbb
pop
cmps
pop
push
std
scas
fs
jmp
fs
jmp
fs
jmp
xor
pushf
add
add
add
add
jo
sbb
scas
fs
jmp
fs
jmp
fs
jmp
sub
push
aas
add
add
inc
sbb
scas
fs
jmp
fs
jmp
pop
sbb
fwait
add
add
jae
sbb
scas
fs
jmp
fs
jmp
aas
sbb
jg
add
add
add
addr16
sbb
jmp
pop
push
cld
jno
sbb
add
add
jo
sbb
scas
fs
jmp
pop
sbb
push
outs
xor
xchg
cmps
pop
sbb
movs
pop
sbb
pushf
add
add
jb
sbb
cld
mov
xor
xchg
jo
sbb
add
add
add
add
jno
sbb
mov
add
add
push
add
aas
lock
stc
lock
clc
jo
ret
cld
xor
cmp
add
sahf
adc
add
add
add
add
inc
add
add
add
xor
xor
jecxz
jo
(bad)
push
add
add
add
add
add
int3
add
cmp
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
adc
push
pop
and
add
push
add
add
sbb
imul
mov
gs
xor
les
sub
add
sub
cdq
imul
add
ins
sub
sbb
cmps
pusha
sbb
pop
jo
sbb
cwde
push
sbb
js
sbb
test
mov
fs
call
add
add
add
add
add
add
dec
sbb
sti
jbe
sbb
add
add
jae
sbb
push
sti
scas
fs
dec
add
js
sbb
jns
sbb
nop
dec
sbb
call
sub
sbb
scas
fs
jmp
push
sbb
pop
and
push
add
add
jp
sbb
cmps
pusha
push
cld
test
sbb
js
sbb
add
add
pop
and
sbb
push
sbb
scas
fs
jmp
cmp
xchg
nop
dec
sbb
scas
fs
jmp
fs
(bad)
jle
sbb
cmps
pusha
push
cld
scas
fs
jmp
pop
sbb
ja
sbb
js
sbb
scas
fs
jmp
inc
sbb
loopne
fs
jmp
fs
jmp
push
cld
scas
fs
jmp
fs
jmp
pop
sbb
mov
fs
jmp
fs
call
dec
sbb
scas
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
fs
jmp
dec
sbb
mov
mov
scas
fs
jmp
fs
jmp
fs
dec
dec
sbb
scas
fs
jmp
fs
jmp
fs
jmp
inc
sbb
jl
sbb
scas
fs
jmp
fs
jmp
fs
dec
sbb
mov
iret
scas
fs
jmp
fs
jmp
fs
(bad)
jp
sbb
cwde
push
sbb
jmp
fs
dec
xor
and
add
add
add
add
sbb
lea
iret
scas
fs
jmp
fs
call
and
sbb
add
add
sbb
cmps
pusha
push
cld
scas
fs
dec
xor
and
add
add
sbb
lea
iret
scas
fs
jmp
aaa
sbb
add
add
sbb
shl
sbb
push
sbb
mov
sar
sbb
push
adc
add
push
adc
add
cld
inc
add
inc
add
out
add
loope
add
jo
add
add
add
add
xchg
add
out
test
add
add
add
jg
add
add
add
add
add
rol
add
jo
add
add
or
add
add
add
and
nop
cmp
add
add
add
add
or
add
add
add
add
and
sub
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
add
add
and
mov
add
adc
add
add
add
add
or
add
add
add
jo
add
add
add
add
add
mov
add
cwde
jno
add
add
add
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
popa
add
inc
add
ins
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
ins
add
je
imul
add
add
add
mov
mov
add
add
push
add
add
outs
add
inc
add
ins
add
dec
add
data16
add
add
add
add
add
add
add
add
add
bound
xor
add
pusha
add
add
inc
add
ins
add
add
je
jae
add
push
add
je
arpl
push
add
jb
and
dec
add
ins
add
popa
add
add
jns
je
add
and
inc
add
je
imul
popa
add
add
jb
add
add
add
add
ins
add
popa
add
jns
dec
add
ins
add
add
add
push
add
inc
add
add
add
pop
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
ins
add
popa
add
add
jns
je
add
pop
add
outs
add
add
add
add
jb
add
inc
add
outs
add
add
add
xor
or
add
inc
add
ins
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
and
add
dec
add
je
add
outs
add
ins
add
popa
add
add
add
popa
add
add
jb
add
jns
je
add
pop
add
outs
add
add
add
add
jb
add
inc
add
outs
add
add
js
add
add
add
adc
add
dec
add
add
ins
add
outs
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
add
add
add
add
add
popa
add
add
popa
add
add
popa
add
imul
add
add
add
add
add
inc
add
pop
add
add
add
and
add
dec
add
imul
outs
add
ins
add
imul
outs
add
ins
add
add
dec
add
ins
add
popa
add
add
jns
je
add
pop
add
outs
add
add
add
add
jb
add
inc
add
outs
add
add
js
add
add
add
pop
add
add
jb
outs
add
add
je
dec
add
ins
add
add
add
dec
add
ins
add
popa
add
add
jns
je
add
pop
add
outs
add
add
add
add
jb
add
inc
add
outs
add
add
add
xor
or
add
push
add
outs
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
jae
jae
add
bound
ins
add
and
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
aad
add
add
add
add
lock
add
jbe
add
add
add
add
add
mov
ins
ins
and
jb
imul
xor
and
arpl
imul
sub
aas
ds
jae
ins
bound
ins
popa
outs
imul
jb
imul
xor
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
popa
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
ins
gs
jo
ins
imul
cs
jo
and
ds
je
jne
je
outs
outs
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
ins
gs
js
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
and
and
and
sub
jp
outs
outs
imul
data16
outs
and
inc
outs
outs
je
outs
ins
ins
outs
and
ins
daa
popa
arpl
jne
je
jne
outs
je
or
and
and
and
and
and
push
gs
ins
outs
imul
and
and
gs
ins
outs
and
inc
outs
outs
je
outs
ins
ins
outs
and
ins
daa
popa
arpl
jne
je
jne
outs
je
and
push
imul
and
jae
imul
ins
and
and
and
and
and
and
outs
outs
outs
and
jno
gs
gs
js
arpl
imul
ins
and
outs
and
outs
and
and
addr16
outs
je
cs
and
and
and
and
gs
gs
gs
js
arpl
imul
ins
and
ins
gs
ins
cmp
outs
jbe
imul
and
inc
arpl
jae
cmp
jae
and
das
ds
and
and
and
gs
gs
gs
js
arpl
imul
ins
and
ins
gs
ins
cmp
jne
jb
inc
fs
imul
je
jb
and
inc
arpl
jae
cmp
jae
and
das
ds
and
and
and
gs
gs
gs
js
arpl
imul
ins
and
ins
gs
ins
cmp
push
jbe
imul
jne
inc
arpl
jae
cmp
jae
and
das
ds
and
and
and
and
and
and
and
and
arpl
imul
ins
gs
outs
je
and
jno
gs
gs
js
arpl
imul
ins
sub
ins
popa
and
outs
jp
outs
outs
popa
ins
imul
je
popa
ins
imul
outs
and
ins
and
jae
gs
and
jb
imul
imul
gs
popa
and
jb
ret
mov
popa
bound
imul
or
and
and
and
and
and
and
ins
jne
jbe
jb
and
gs
outs
and
gs
outs
je
and
and
jo
ins
imul
and
arpl
gs
gs
popa
and
jb
jne
ins
imul
outs
and
jb
or
and
and
and
and
and
and
ins
jo
je
bound
imul
and
jbe
jb
imul
arpl
outs
je
cs
and
and
and
and
and
and
and
cmp
gs
gs
gs
js
arpl
imul
ins
and
ins
gs
ins
cmp
jne
jb
inc
fs
imul
je
jb
and
inc
arpl
jae
cmp
jae
and
das
ds
and
and
jb
jno
gs
gs
jb
jbe
ins
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outs
outs
ds
and
outs
ins
jo
je
bound
imul
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
jo
je
bound
imul
or
and
jo
ins
imul
ds
and
and
sub
outs
arpl
fs
ins
and
jb
imul
and
outs
outs
ja
and
and
imul
je
je
and
je
je
and
gs
popa
and
jo
imul
and
or
and
and
and
and
and
jo
jb
arpl
and
test
jae
popa
je
and
gs
jae
outs
and
jae
and
ins
jne
jbe
jb
and
and
ins
ins
outs
je
and
ins
imul
outs
je
and
jo
outs
jo
imul
jb
or
and
and
and
and
popaw
jb
and
and
outs
and
and
outs
outs
ja
and
ins
gs
outs
outs
imul
ins
popa
je
arpl
outs
je
and
ins
bound
outs
je
and
ret
mov
jo
je
bound
gs
or
and
and
sub
outs
outs
ja
and
jae
popa
and
and
and
and
cmp
sub
jo
outs
jb
gs
push
and
cmp
xor
xor
xor
sub
sub
sub
gs
xor
and
ds
or
and
and
sub
outs
outs
ja
and
and
and
and
and
cmp
sub
jo
outs
jb
gs
push
and
cmp
xor
cmp
popa
sub
sub
sub
sub
xor
xor
jge
and
ds
or
and
and
sub
outs
outs
ja
and
and
and
and
and
cmp
sub
jo
outs
jb
gs
push
and
cmp
xor
cmp
sub
sub
sub
sub
xor
xor
ss
jge
and
ds
or
and
and
sub
outs
outs
ja
and
xor
sub
and
and
and
cmp
sub
jo
outs
jb
gs
push
and
cmp
ss
arpl
ss
sub
sub
sub
data16
cmp
and
ds
or
and
and
sub
outs
outs
ja
and
xor
sub
and
and
and
cmp
sub
jo
outs
jb
gs
push
and
cmp
xor
popa
xor
sub
sub
sub
sub
xor
popa
cmp
and
das
ds
or
and
popa
jo
ins
imul
ds
das
arpl
jo
je
bound
imul
and
cmp
sub
imul
and
jo
ins
imul
gs
test
jae
outs
jae
bound
and
and
ins
outs
jb
and
and
outs
outs
outs
and
jb
ret
mov
ins
popa
je
and
je
ins
popa
je
arpl
outs
je
and
push
imul
imul
and
or
and
and
and
jbe
ins
outs
jb
and
and
addr16
and
jo
imul
imul
outs
ja
and
gs
outs
je
je
outs
outs
and
jne
fs
je
outs
outs
and
push
push
inc
sub
jae
outs
outs
and
je
ins
popa
je
arpl
outs
je
and
outs
jae
bound
imul
popa
ins
outs
jb
and
sub
jo
jb
popa
outs
je
and
outs
and
test
outs
arpl
jae
jb
outs
and
and
and
popa
arpl
outs
jae
outs
je
jb
and
jo
imul
outs
je
and
outs
and
popa
jo
ins
imul
imul
outs
ja
and
jb
and
je
outs
popa
je
and
cs
inc
push
and
popa
ins
gs
jb
and
and
jb
arpl
and
test
jae
popa
je
and
arpl
jae
outs
je
je
and
jo
imul
outs
je
and
jno
gs
popa
and
jo
jae
popa
jp
outs
outs
gs
or
and
and
ret
test
popa
outs
arpl
and
arpl
jae
jb
outs
and
jo
jae
popa
jb
and
inc
outs
popa
bound
imul
outs
jb
jae
imul
jne
outs
push
gs
jp
outs
addr16
and
and
je
jne
daa
and
ins
and
ins
popa
je
jbe
and
ins
and
jo
arpl
imul
sub
and
sub
and
jo
ins
imul
and
ins
outs
jae
and
outs
cmp
push
sub
outs
jae
data16
arpl
cmp
ins
cs
and
or
and
imul
gs
imul
and
and
and
cmp
jo
inc
ja
jb
and
ins
outs
jae
and
je
cmp
das
jae
push
cs
imul
je
arpl
das
push
dec
dec
das
xor
xor
outs
ja
push
gs
imul
jb
gs
fs
inc
ja
jb
ds
and
ja
outs
outs
ja
push
gs
imul
and
cmp
popa
jo
ins
imul
ds
sub
or
and
sub
imul
je
ins
imul
imul
jb
and
imul
and
outs
je
outs
ins
ins
imul
outs
imul
imul
sub
outs
outs
ja
and
and
jbe
jb
imul
arpl
jae
imul
ds
and
and
gs
outs
fs
arpl
or
and
gs
outs
fs
je
jae
gs
bound
or
and
and
jae
gs
bound
fs
je
je
or
and
and
and
and
gs
xor
and
and
and
and
and
ins
gs
jb
jae
data16
push
imul
inc
outs
ins
ins
outs
outs
sub
jb
ins
jae
or
and
and
and
and
jb
imul
xor
xor
xor
or
and
and
and
and
outs
arpl
jae
jb
jb
push
je
jb
cmp
or
and
and
and
and
and
bound
dec
gs
outs
imul
and
xor
xor
xor
arpl
xor
or
and
and
and
and
addr16
addr16
or
and
and
and
and
ds
and
fs
outs
fs
je
jae
gs
bound
or
das
fs
outs
fs
arpl
or
sub
or
popa
jae
gs
bound
or
add
add
jb
add
add
add
add
int3
jecxz
add
add
cmp
add
(bad)
jmp
jmp
jmp
push
push
fnsave
lods
add
stos
clc
out
imul
mov
jle
fmul
push
add
out
in
lock
and
fidiv
out
adc
es
jns
inc
retf
or
lock
cmps
mov
leave
es
jp
jo
popf
aad
call
(bad)
nop
jecxz
sbb
push
add
mul
push
jb
dec
mov
push
jmp
push
inc
les
xchg
fdiv
mov
push
mov
ror
and
pop
les
push
jl
test
pop
in
scas
aam
jae
pop
and
dec
popa
push
push
pop
stos
pop
sub
in
jmp
push
push
inc
test
jo
fwait
dec
jge
inc
cdq
sub
jmp
lds
retf
mov
outs
inc
sub
movs
loopne
ret
jne
inc
add
iret
jmp
mov
mov
cdq
test
xchg
call
in
pop
jmp
fyl2x
jl
mov
(bad)
xchg
pop
lea
jg
cmps
inc
sbb
xlat
arpl
es
sahf
pop
pusha
rol
cmp
jmp
push
jmp
sub
adc
add
xor
jmp
icebp
push
add
jno
jmp
and
add
mov
jmp
lea
retf
enter
jmp
push
inc
jmp
fs
push
jmp
sub
mov
jmp
sbb
(bad)
xchg
pop
lods
sbb
or
pop
jmp
add
aas
or
add
and
shr
add
and
add
mov
xchg
(bad)
(bad)
inc
add
add
shr
mov
jl
add
mov
mov
jmp
mov
add
adc
cmps
shr
mov
dec
mov
jmp
(bad)
in
jecxz
jns
sbb
rcr
jmp
icebp
loopne
test
and
jmp
sub
add
add
adc
mov
add
add
add
jmp
lea
xor
jmp
push
jmp
cmp
mov
jmp
and
add
push
jmp
call
mov
jmp
sub
jmp
add
jmp
cmp
add
test
add
mov
add
jmp
lea
and
test
add
jmp
nop
jmp
imul
mov
jmp
mov
shl
shl
mov
add
add
jmp
mov
or
add
mov
jmp
mov
pop
add
add
mov
jmp
bound
jmp
sbb
sbb
mov
add
jp
jmp
and
add
jmp
and
jmp
push
pop
sub
ret
loope
add
xchg
jle
jmp
ror
add
(bad)
jmp
call
jmp
mov
jmp
fdiv
jno
pop
sub
or
add
add
add
jne
jmp
rol
jge
jmp
enter
xchg
add
add
add
lods
mov
jmp
mov
sub
jb
mov
jmp
and
push
hlt
jmp
retf
pop
(bad)
(bad)
(bad)
jmp
mov
jmp
mov
jmp
in
jmp
mov
add
add
mov
cld
jmp
sub
add
mov
jmp
adc
mov
addr16
add
add
add
add
fimul
jae
idiv
add
xchg
add
add
add
cld
jmp
sbb
adc
jmp
test
add
add
lock
mov
add
add
(bad)
dec
add
add
mov
mov
jmp
jmp
push
jmp
xor
add
add
add
add
mov
jmp
cmovl
bound
mov
jmp
adc
jae
or
sub
add
jmp
nop
jmp
add
jmp
sub
jmp
mov
add
add
in
add
aam
add
jmp
and
add
add
fwait
add
jmp
inc
adc
jmp
mov
stc
jmp
cmp
sti
add
add
ja
jmp
nop
jmp
xor
add
lahf
pop
xor
jno
mov
jmp
fild
xchg
add
mov
jmp
xor
out
add
jns
loope
jno
xor
jmp
xchg
aam
add
sub
jmp
imul
add
jne
jmp
jmp
fs
jmp
test
jmp
jno
jmp
fisttp
mov
and
or
jmp
call
iret
jmp
adc
add
and
jo
add
jmp
imul
sub
jmp
and
dec
sbb
add
lods
mov
jmp
test
add
cmp
add
iret
jmp
jmp
test
jmp
jno
jmp
sbb
adc
add
add
mov
or
jno
xor
jmp
retf
cmovae
jo
add
jmp
sub
adc
add
(bad)
pop
jmp
call
add
jmp
fadd
push
add
add
clc
jmp
ret
hlt
jmp
add
add
test
add
jnp
ins
std
(bad)
dec
xor
add
xor
fld
(bad)
jmp
add
push
jmp
mov
jmp
and
movs
jmp
imul
jmp
mov
add
mov
add
jmp
cmp
add
out
add
jmp
mov
stc
jmp
cs
jmp
or
add
jmp
xchg
call
add
call
pop
jmp
cmp
adc
jmp
cmp
jecxz
xor
dec
pop
jmp
jmp
sbb
mov
jmp
fsubr
(bad)
(bad)
(bad)
jmp
cs
fld
add
jmp
imul
ja
jmp
nop
jmp
fld1
test
(bad)
(bad)
jmp
jmp
adc
inc
add
sub
gs
sti
(bad)
(bad)
jmp
jmp
fiadd
sbb
scas
sti
(bad)
(bad)
jmp
jmp
test
mov
and
enter
lods
push
jl
lods
xchg
add
not
and
jg
push
iret
pop
ins
mov
cmps
or
mov
mov
shl
xchg
pop
xchg
sub
scas
daa
test
and
in
fcom
inc
jns
hlt
or
jae
imul
pop
adc
mov
mov
mov
pop
jne
and
xor
call
pop
sbb
rcr
sub
(bad)
in
mov
or
mov
push
jmp
dec
adc
scas
push
inc
mov
aad
or
push
repz
int
es
test
and
and
xchg
mov
mov
mov
sbb
aad
jp
mov
dec
fiadd
popf
out
cmc
cmps
add
inc
pop
div
clc
popa
in
test
sar
xchg
aas
mov
xchg
ret
and
mov
mov
pop
sub
push
inc
jnp
jmp
sub
retf
out
mov
pop
jnp
out
cmps
aas
mov
cmps
aam
pop
or
xchg
gs
pop
movs
mov
stc
cmp
cmp
cmp
adc
loope
ja
jnp
(bad)
(bad)
xor
test
and
mov
sub
sahf
stc
or
sub
dec
xchg
cmp
add
xor
rol
icebp
ins
add
pop
loop
lea
pop
mul
cmps
leave
stos
pop
mov
xor
xor
nop
inc
test
lods
outs
mov
ss
mov
inc
adc
gs
rol
icebp
outs
xchg
in
mov
add
leave
loope
jnp
mov
(bad)
push
mov
loope
enter
cmova
iret
mov
mov
cmp
jno
xor
jns
mov
inc
mov
cdq
call
test
(bad)
sbb
sub
mov
in
jae
addr16
mov
dec
mov
push
int3
pop
test
call
jp
ja
dec
in
cmc
xor
jo
outs
lods
jge
xor
clc
js
mov
mov
cdq
sbb
cmp
fsubr
dec
xor
adc
mov
dec
pop
mov
pop
add
cmp
mov
push
xor
mov
sub
push
popa
test
mov
in
out
xor
fisttp
into
inc
pop
icebp
pop
(bad)
(bad)
in
test
hlt
push
adc
sbb
retf
xchg
dec
outs
or
mov
xchg
sbb
mov
stos
(bad)
jl
(bad)
inc
and
leave
cmp
sbb
pop
adc
jne
jae
stos
movs
cwde
add
lahf
mov
loop
cld
nop
stos
push
pop
mov
push
mov
rcr
jno
aas
mov
inc
jbe
jg
dec
mov
daa
dec
pusha
dec
push
sbb
sbb
mov
ins
test
pushf
sbb
loope
int
loope
cld
lock
jp
aam
sbb
dec
data16
sub
pop
mov
lods
pop
add
sub
xchg
scas
cwde
ins
add
bound
mov
lea
idiv
mov
call
cmp
mov
out
xchg
clc
dec
sahf
xchg
xor
mov
mov
(bad)
or
loop
test
int
mov
cmc
mov
mov
ins
pop
xor
(bad)
xor
push
xlat
pop
add
sbb
xchg
pop
mov
(bad)
loop
pop
int3
adc
div
jg
test
fnsave
in
dec
sub
inc
xacquire
push
dec
cdq
push
rcr
call
adc
jnp
popf
stc
mov
iret
adc
sbb
cdq
scas
loope
adc
mov
dec
in
nop
xchg
add
push
mov
ret
int
stc
stos
xor
mov
lods
pushf
xchg
pop
jge
test
repz
or
les
inc
aaa
push
fwait
mov
ins
xor
out
inc
arpl
out
lds
pusha
push
mov
mov
push
(bad)
ret
out
icebp
sar
pusha
adc
imul
rol
sub
cmp
in
not
dec
push
shl
xor
addr16
push
movs
cmp
shr
in
test
mov
mov
jmp
cmps
hlt
stos
sbb
(bad)
pop
xchg
aaa
sbb
movs
push
dec
xchg
imul
adc
fimul
das
fcmovb
aaa
bound
adc
sbb
cmp
repz
xchg
stc
aam
(bad)
icebp
push
and
fwait
inc
rcr
ins
test
or
jl
xchg
jno
or
cmps
fistp
inc
out
arpl
and
mov
retf
add
xor
imul
pop
xchg
loop
add
(bad)
cmp
inc
inc
imul
sahf
int3
imul
test
mov
push
push
mov
fist
xchg
xor
idiv
pop
sbb
sbb
aam
mov
or
fild
pop
mov
into
cli
dec
test
push
add
enter
lahf
pop
pusha
not
or
mov
das
mov
ja
inc
rol
iret
inc
xchg
cdq
sbb
pop
popa
je
aad
jl
in
ficomp
jbe
in
(bad)
mov
icebp
or
mov
lods
loopne
sahf
(bad)
arpl
(bad)
pop
xchg
and
daa
nop
push
dec
test
mov
pop
mov
mov
ins
mov
and
jns
popa
out
arpl
je
aam
call
jecxz
adc
mov
push
test
sbb
dec
pop
ds
cwde
add
cdq
or
and
imul
push
mov
mov
loopne
js
jnp
xchg
movs
adc
mov
push
test
das
jg
pop
lea
dec
xchg
shr
aad
ret
cmps
mov
hlt
(bad)
cmps
sub
jns
pusha
je
sar
popa
les
in
mov
mov
jle
or
fimul
mov
push
fistp
mov
inc
lock
sar
dec
cwde
popf
loope
(bad)
cmp
les
sbb
and
enter
pusha
fld
test
jecxz
stos
jge
mov
push
push
ss
pop
lods
push
or
hlt
jmp
call
vpsubsw
pop
sti
xchg
inc
jl
test
js
shr
cmp
popf
jmp
sbb
xchg
and
dec
aaa
jne
pop
ds
xor
loop
xor
fcom
loope
mov
pusha
jae
repnz
sub
pop
test
dec
xchg
sub
outs
sub
pop
in
addr16
push
pop
pushf
xlat
retf
cmp
dec
pop
mov
cmps
fs
xchg
outs
stc
sub
jnp
jp
cdq
test
iret
scas
pause
ror
jb
push
adc
jns
inc
mov
inc
and
(bad)
(bad)
fsub
and
in
xchg
mov
jbe
cmp
xchg
xor
mov
call
jmp
mov
loope
scas
fwait
xchg
int
adc
mov
lea
xchg
fs
or
sub
sub
and
lods
or
in
push
pop
test
cmc
mov
pusha
(bad)
test
cli
mov
sbb
test
repnz
cmc
cmp
jmp
mov
inc
inc
mov
or
ret
xor
xlat
or
and
dec
or
pop
mov
sub
inc
pop
sub
shl
pop
fadd
lock
sub
add
(bad)
push
rcr
jp
jge
stc
cmp
(bad)
into
jecxz
push
mov
imul
inc
push
add
cmps
nop
aaa
fs
scas
xchg
mov
mov
lods
cmps
scas
jns
adc
xchg
ins
fdivp
movs
int
or
in
sbb
mov
sti
xor
jl
popa
inc
mov
jae
or
mov
xchg
pop
jbe
or
bound
(bad)
into
fisubr
loop
jns
xchg
les
je
cmp
sub
pop
pop
mov
inc
cmps
scas
add
add
push
cld
mov
test
jns
jp
data16
dec
arpl
clc
int
pop
inc
dec
sub
mov
lds
ret
pop
xor
shl
mov
es
int3
cli
adc
cmc
pop
mov
int3
sar
test
inc
mov
inc
mov
xchg
sub
loopne
xor
cmp
inc
mov
jne
test
bound
rcl
jne
dec
mov
rol
push
pop
fisubr
rol
add
out
shr
rcr
adc
int
test
cmp
pop
cmp
mov
xor
cmp
xor
mov
loop
ins
xor
in
int
cmp
mov
pusha
pop
(bad)
mov
ins
cmp
pop
std
cmp
cmp
rol
lea
cld
jns
pop
fstp
and
ss
aam
(bad)
cdq
adc
sbb
xchg
dec
int3
adc
pushf
inc
cmp
and
les
sahf
pop
dec
mov
hlt
pop
push
repz
es
jmp
sbb
push
pop
out
sub
ret
test
mov
fcom
cmp
add
ficom
jno
(bad)
push
add
pop
bound
icebp
in
xor
sub
cmp
ret
cs
xchg
adc
cmps
fst
inc
outs
sbb
inc
fiadd
cwde
inc
(bad)
adc
repz
loope
movs
fld
dec
imul
mov
jge
rcl
imul
cmp
mov
shl
loop
mov
mov
xor
movs
sbb
mov
out
fld
inc
and
fisub
lods
mov
pushf
mul
cmp
loopne
es
adc
les
ins
push
xor
xor
xor
movs
ret
mov
aaa
aaa
sub
jp
xchg
(bad)
sub
add
test
mov
sub
mov
mov
addr16
push
cmp
jno
das
test
retf
mov
rcr
jno
aas
sti
jno
xor
dec
push
inc
push
scas
call
or
mov
xlat
jmp
sub
push
lods
ds
in
icebp
jmp
push
retf
std
call
or
and
xchg
mov
inc
xchg
std
gs
or
repnz
xor
(bad)
addr16
(bad)
out
push
(bad)
xchg
fld
enter
xsaveopt
jo
repz
aaa
mov
(bad)
xor
loope
test
inc
stos
cwde
pop
cwde
sbb
stos
push
add
popf
out
inc
jl
test
in
inc
cwde
sahf
xlat
out
out
pop
mov
cmp
in
mov
pop
add
test
or
adc
jmp
ins
jo
xlat
out
dec
cmp
aad
xchg
xor
pop
cmc
fldenv
sar
imul
pop
jae
ficomp
retf
outs
sbb
sahf
pop
shl
pop
pusha
xchg
jne
gs
jne
and
mov
and
in
out
pop
sub
(bad)
int
pop
das
inc
add
mov
xchg
test
inc
test
call
inc
push
dec
add
aas
add
add
ins
dec
mov
(bad)
sbb
fbstp
mov
jle
lea
sbb
jae
fld
push
retf
das
jmp
xor
cld
movs
cmp
in
std
inc
mov
mov
jo
ins
inc
inc
xor
xor
sahf
call
adc
push
and
sti
mov
pop
das
fcmovne
cli
xchg
dec
xor
ja
xlat
rcl
repnz
adc
ja
sbb
imul
ror
sbb
lds
dec
inc
das
inc
jno
pop
jmp
mov
pop
fcmovne
dec
std
jo
retf
ror
test
sub
inc
iret
sahf
mov
movs
and
stc
mov
xor
push
sub
mov
or
jno
cs
out
movs
popa
and
jmp
mov
dec
mov
sar
pop
lods
xor
mov
sbb
mov
mov
iret
js
push
xchg
fdiv
jns
gs
aad
add
int
mov
cmps
jno
and
pop
pop
fwait
add
and
push
adc
push
and
shl
adc
cli
fcomp
mov
repz
fsub
icebp
mov
jg
jnp
loop
mov
xchg
loop
ret
sub
mov
jecxz
dec
ret
rol
pop
cli
or
adc
cmp
add
or
lods
jp
loopne
mov
popf
inc
cmc
inc
and
jle
out
dec
(bad)
dec
imul
push
or
mov
cmp
adc
loopne
(bad)
adc
fistp
xor
push
das
push
push
loope
mov
stos
mov
inc
mov
mov
or
mov
and
je
xor
lods
pop
or
movs
adc
(bad)
leave
(bad)
into
imul
push
xchg
mov
mov
sbb
gs
pop
ret
aaa
dec
jecxz
jnp
dec
call
add
mov
fsubr
loopne
dec
in
aad
sbb
mov
leave
sbb
and
jno
mov
je
stos
mov
inc
std
hlt
pop
sbb
clc
mov
cwde
sub
xlat
dec
sahf
xchg
aas
int3
test
gs
mov
sub
pop
inc
(bad)
repnz
xchg
int3
cld
inc
loope
std
fldenv
jbe
fist
and
mov
add
sub
ds
movs
pushf
cmp
jmp
xchg
inc
push
push
out
xchg
sbb
inc
sub
ss
sbb
mov
sbb
mov
rcr
in
sub
mov
or
imul
mov
adc
and
(bad)
nop
out
pop
mov
test
ret
mov
jns
xor
jmp
(bad)
jns
jecxz
mov
cdq
and
push
mov
cdq
jnp
sbb
leave
out
dec
cwde
lods
pop
lea
and
rcr
lods
sbb
les
or
or
sahf
dec
mov
pushf
out
mov
je
add
(bad)
sbb
clc
inc
adc
mov
xchg
retf
xchg
ds
cmps
adc
jp
cmp
mov
lahf
dec
movs
fsubr
ficom
ds
and
aaa
adc
(bad)
pusha
add
iret
push
ins
loopne
loope
inc
and
ins
mov
jmp
jmp
pushf
das
pop
in
jae
sub
sbb
pop
mov
fstp
dec
jge
mov
xchg
movs
mov
icebp
(bad)
jmp
sub
add
sub
(bad)
out
mov
xlat
sub
cld
mov
call
add
in
push
jge
ja
push
add
outs
pop
inc
cli
push
cmc
push
inc
in
cmp
div
jg
aaa
mov
sub
sub
pusha
jp
push
in
aad
jle
addr16
jae
mov
jp
xor
mov
and
xor
push
xchg
xlat
fucom
add
sub
dec
sub
es
push
xor
popf
out
or
inc
outs
xor
les
out
mov
jno
add
or
sub
mov
stos
cmp
sbb
adc
cli
(bad)
sub
(bad)
pop
test
pop
mov
jno
sbb
aaa
xor
sbb
or
ins
(bad)
adc
repz
jge
xchg
scas
mov
cmps
inc
add
scas
ret
and
je
addr16
add
daa
(bad)
lods
jle
movs
sub
sub
pop
and
call
aad
pop
adc
movs
mov
outs
pop
mov
dec
xor
inc
out
imul
and
xor
push
inc
cmp
ss
cdq
je
stc
ins
fisubr
xor
and
(bad)
push
push
jo
fincstp
add
jae
jno
push
test
cli
imul
cdq
imul
movs
les
jg
addr16
mov
pop
fild
mul
out
jp
scas
rcl
xchg
mov
cs
adc
in
inc
sub
ja
test
fs
idiv
call
in
fwait
dec
mov
arpl
pop
test
sbb
xor
mov
(bad)
jle
das
sar
loope
jmp
mov
test
hlt
sti
cmp
push
(bad)
in
aaa
inc
test
ror
mov
call
mov
dec
pusha
aad
pop
mov
addr16
inc
retf
xor
xor
(bad)
icebp
dec
leave
pop
enter
mov
and
or
sub
dec
add
cdq
push
mul
in
loop
shr
loope
pop
movs
lock
adc
and
in
xchg
sbb
mov
aad
xor
push
es
mov
ins
mov
push
or
test
ins
leave
pop
jb
fxch
ret
out
push
movs
jge
cmp
rol
test
shl
xchg
aam
out
int3
jmp
jae
inc
cmps
retf
mov
fxch
pop
jmp
jp
sbb
into
popa
dec
xor
ret
aad
enter
mov
idiv
mov
pop
jp
xor
lahf
sub
jne
inc
sbb
and
popa
scas
push
push
adc
or
iret
fst
cmp
sbb
movs
jne
es
addr16
test
mov
mov
loopne
addr16
xchg
icebp
dec
sbb
cmps
cmc
xor
jne
inc
or
jg
loope
and
popf
jle
and
pop
push
fnsetpm(287
mov
or
sbb
lock
retf
cmp
ins
adc
push
cwde
jb
sbb
adc
sbb
add
cld
jmp
or
sbb
xor
sti
xchg
stos
int
push
mov
pop
imul
ret
or
jp
stos
ja
mov
cdq
test
and
mov
inc
mov
xchg
retf
jle
mov
leave
xor
call
mov
stos
sbb
jl
test
or
adc
sbb
push
out
loop
jle
out
jp
lahf
or
outs
out
mov
pop
cmps
sbb
sbb
out
test
dec
inc
pop
pop
lock
test
retf
sub
shl
retf
mov
jp
jmp
les
mov
inc
pop
aam
or
or
sub
popf
icebp
push
dec
sbb
stos
xchg
cmps
jmp
sub
push
repz
ror
iret
or
push
or
fbld
ins
mov
popa
push
mov
sub
or
sub
dec
add
jle
and
lock
mov
sar
mov
(bad)
cdq
xchg
push
shr
test
inc
test
cmp
mov
push
int3
cmc
xor
popf
sub
rcr
dec
jmp
add
add
inc
add
mov
ret
and
out
push
xor
xchg
mov
lock
hlt
setno
inc
add
call
or
sbb
mov
cmp
xor
out
imul
cmp
fs
loope
xor
ficom
out
xor
mov
pop
xor
push
cli
stc
pusha
loopne
mov
jp
pop
pusha
jne
lods
pop
jmp
cmp
or
rcr
xor
lods
inc
push
jb
jge
xchg
dec
(bad)
pop
call
addr16
cmp
out
jno
pop
sbb
sahf
ins
or
es
mov
adc
xor
test
nop
inc
outs
jno
and
pop
adc
pop
pop
and
mov
add
outs
clc
xchg
cmp
mov
dec
or
add
pop
adc
in
mov
aaa
popf
cmc
fcomip
in
cmps
inc
mov
and
mov
std
cmp
ins
sub
call
sub
lock
cmp
push
fwait
pop
enter
mov
das
mov
test
mov
imul
push
sbb
xchg
imul
jo
inc
xchg
jecxz
fidiv
mov
or
shr
pop
mov
cmc
popf
xor
dec
ins
lahf
mov
fs
das
call
pop
add
sar
inc
inc
pop
shl
test
push
hlt
and
jmp
sbb
fnstsw
daa
dec
add
(bad)
std
aam
dec
sysexit
jno
and
inc
inc
or
(bad)
rol
loop
sub
inc
inc
jmp
sbb
jmp
mov
cmps
hlt
mov
in
xlat
or
xlat
cmp
movs
add
jl
stos
or
mov
scas
outs
cli
xchg
out
dec
jne
push
(bad)
jns
gs
popf
mov
jl
aas
push
push
movs
jp
dec
retf
jmp
stos
jnp
repnz
sahf
push
imul
dec
je
or
call
out
daa
cmc
out
retf
jge
out
push
dec
mov
jmp
xchg
nop
pushf
retf
mov
xchg
(bad)
mov
pop
(bad)
int
test
lock
pop
dec
(bad)
inc
sahf
in
js
int3
ss
fnstsw
xor
ss
bound
add
inc
loop
push
dec
jp
sub
add
popf
pop
ror
sbb
inc
lock
ins
gs
std
jo
adc
enter
push
push
and
movs
in
jbe
dec
mov
jo
xchg
out
rol
mov
xchg
xchg
aam
jns
(bad)
data16
enter
jo
outs
or
shr
pop
enter
jmp
scas
and
xchg
and
pop
jecxz
int
jae
test
adc
mov
(bad)
mov
out
fimul
pop
sbb
nop
lahf
rcr
call
pop
lahf
stos
or
mov
pop
movs
push
mov
ds
xchg
mov
push
adc
jmp
sub
add
sbb
outs
test
or
leave
mov
cli
xchg
leave
test
ins
lea
mov
out
pop
push
aaa
out
ins
stc
dec
dec
ret
sti
test
daa
cmp
xchg
push
scas
add
or
inc
xor
sbb
shl
mov
cmp
push
(bad)
popf
push
and
push
aas
mov
cmp
add
inc
rcl
loope
pop
jbe
xchg
xchg
jecxz
pop
(bad)
repz
cli
inc
cs
les
enter
sahf
clc
pushf
sub
adc
dec
xchg
mov
js
mov
test
out
cmps
and
adc
mov
out
jecxz
mov
loope
cld
pop
sub
adc
mov
fisttp
xchg
and
sub
pop
dec
mov
jb
jbe
mov
loop
mov
fwait
lods
jb
cmps
(bad)
iret
cmp
or
cli
inc
test
movs
pop
(bad)
dec
sti
jp
mov
lea
xchg
es
movs
mov
add
add
test
aam
jmp
and
mov
sbb
mov
pusha
pushf
test
add
mov
push
nop
imul
xlat
in
les
jnp
jp
scas
retf
jno
jns
or
push
mov
cmp
jp
or
cmp
mov
xor
and
and
jns
mov
fidivr
cmc
mov
fmul
jne
push
retf
cwde
out
popf
outs
sbb
idiv
dec
xchg
sbb
ficomp
adc
inc
cwde
dec
outs
imul
in
pop
dec
add
popf
addr16
dec
mov
cmp
popa
sbb
jne
(bad)
adc
and
lds
ror
ret
fsub
popf
fdivr
shr
or
ins
sub
aas
add
add
adc
xor
xchg
jnp
int3
cmp
jb
or
mov
sti
sub
(bad)
fdivr
or
movs
jmp
jg
xlat
mov
addr16
inc
or
push
sub
push
js
xor
or
repnz
test
pop
push
and
jle
xchg
test
stos
mov
cli
jecxz
fcomip
push
add
arpl
add
cmps
leave
xor
outs
and
or
in
loopne
out
push
pop
jns
or
or
repz
fidiv
pop
add
add
das
ret
jae
es
push
aam
sar
fld
inc
sub
and
mov
mov
inc
imul
mov
or
jb
mov
fistp
in
test
neg
xchg
cmp
adc
(bad)
ret
mov
imul
ins
add
inc
cdq
out
pop
enter
loopne
aas
add
cmp
ret
les
fisubr
in
aam
jne
adc
add
mov
lahf
or
xor
pop
das
aas
pop
inc
lahf
xor
mov
ret
scas
mov
mov
das
inc
in
or
call
add
jecxz
outs
lods
pop
rcl
xchg
fcmovb
mov
aas
enter
jbe
jmp
aaa
outs
mov
push
mov
fisttp
inc
jbe
pushf
cmps
(bad)
sar
lds
mov
in
ds
xchg
or
enter
pusha
inc
jmp
aas
shl
iret
daa
div
retf
and
jns
mov
outs
sar
push
sub
sub
hlt
xchg
clc
inc
out
iret
push
dec
leave
jae
xor
pop
test
sub
call
mov
lods
xchg
loopne
mov
sbb
mov
loopne
add
push
cmc
jb
repnz
fs
cmp
push
sub
add
in
fcomp
sbb
push
pop
sbb
inc
mov
mov
sub
inc
push
lds
adc
pop
mov
jl
mov
(bad)
loope
pop
gs
aaa
retf
pop
test
mov
xor
adc
cmp
sub
call
inc
cld
(bad)
push
adc
loop
inc
push
mov
adc
repnz
cmps
imul
and
and
aam
addr16
inc
stc
inc
mov
push
lahf
sub
or
retf
jno
test
(bad)
cmps
adc
arpl
mov
loope
mov
xchg
mov
sti
add
dec
sbb
jmp
dec
out
cwde
pushf
outs
add
jno
push
jbe
mov
dec
js
pop
adc
mov
pushf
ror
repnz
aam
dec
push
fcomp
cmp
sbb
gs
adc
xchg
rol
sbb
mov
in
pop
jecxz
sub
(bad)
cdq
(bad)
shl
clc
xlat
mov
repz
push
push
mov
jb
dec
les
mov
jecxz
and
out
in
mov
pop
jno
push
and
sti
push
(bad)
cli
cli
xchg
mov
scas
dec
ins
movs
mov
loope
cmps
xor
mov
sub
pop
jmp
push
jl
and
popf
sub
fwait
pushf
mov
jno
rcl
mov
imul
iret
xchg
icebp
repz
sub
push
jno
mov
and
out
xor
(bad)
test
test
or
push
lods
clc
cmp
inc
sub
out
push
push
fs
cmc
(bad)
in
xchg
sbb
push
cld
mov
call
push
xchg
xor
pop
mov
fwait
sti
push
xchg
xor
loop
xor
dec
js
stos
pop
in
push
add
add
jl
mov
out
imul
cdq
(bad)
stc
pushf
les
scas
pop
jg
or
xchg
(bad)
xor
fnstsw
enter
adc
or
xchg
retf
cmc
jecxz
movs
shl
(bad)
fist
cmp
retf
cs
cld
push
dec
sbb
or
das
xchg
xlat
iret
es
aam
jb
stc
and
stos
imul
(bad)
stos
and
in
jno
pop
cmp
repnz
jns
lock
or
daa
pushf
dec
mov
data16
cmps
pop
adc
sub
out
out
push
inc
xor
push
dec
out
repz
cmp
popa
(bad)
loop
outs
mov
stos
pop
jmp
dec
push
ins
adc
rol
test
cmps
ins
imul
inc
repnz
cmc
xchg
jecxz
retf
mov
xlat
test
jmp
pop
sbb
nop
bound
xchg
add
push
mov
retf
inc
rol
push
mov
lahf
mov
add
jmp
xor
pop
addr16
fadd
loopne
mov
add
ins
mov
loope
popa
pop
div
(bad)
push
fcmovnbe
push
dec
(bad)
(bad)
jl
xchg
push
les
inc
mov
ins
jnp
ret
jg
mov
imul
test
pop
test
rol
inc
jl
loope
fadd
dec
fwait
cmp
push
ror
cwde
lea
add
cld
xchg
and
lods
mov
sub
inc
xchg
pop
inc
cmp
call
fsub
dec
sub
(bad)
mov
cli
inc
sub
lahf
mov
jns
dec
jb
mov
ror
jo
and
cmps
(bad)
out
call
push
mov
add
mov
jmp
xor
fs
mov
mov
sub
ins
jle
cmp
dec
fst
inc
xchg
(bad)
xchg
scas
jo
push
fld
sbb
lock
popf
mov
and
outs
sub
xor
adc
and
fldcw
pop
dec
sub
pop
jmp
cmp
jecxz
sub
scas
in
lea
loopne
mov
mov
push
inc
(bad)
ins
pop
pushf
and
or
pop
jne
adc
push
jmp
push
out
ds
inc
mov
cs
enter
les
mov
lods
cmp
dec
adc
or
or
aas
div
cmp
or
loop
imul
or
(bad)
fstp
jle
movs
and
xchg
dec
jl
data16
sar
cmp
pop
gs
(bad)
mov
pop
aaa
xor
loop
xchg
mov
addr16
fbstp
mov
ret
xchg
test
cmps
and
data16
fcomp
jg
push
adc
aad
pop
cwde
imul
mov
stos
or
daa
xor
cmp
push
hlt
add
add
pop
mov
pop
movs
cmc
sbb
add
popa
div
cmps
mov
pop
sahf
imul
push
daa
jbe
(bad)
xchg
mov
jmp
lods
pop
(bad)
stc
pusha
cmp
sbb
xor
ror
pop
fmul
pop
mov
dec
stc
adc
in
mov
cmp
loope
cdq
loope
inc
inc
jmp
loope
jmp
scas
inc
cmps
jb
ret
aad
neg
and
ss
lea
dec
popf
stc
adc
mov
cmp
or
cmp
mov
xor
hlt
shl
gs
lds
push
push
or
inc
leave
mov
std
sbb
sub
or
loopne
cmp
add
cmp
pop
inc
mov
into
sbb
push
les
sbb
in
xchg
(bad)
std
popf
push
dec
pop
es
dec
inc
push
sub
mov
sbb
pop
ds
gs
and
dec
ds
fcmovnb
pop
out
test
add
mov
jae
jmp
pop
in
es
dec
gs
jmp
inc
or
mov
ins
popa
mov
addr16
cld
sahf
(bad)
test
outs
add
mov
cmp
sub
dec
int
xor
or
xchg
(bad)
fisttp
arpl
sti
enter
pop
or
ins
int
push
ja
cwde
add
jge
test
jl
nop
fild
inc
and
dec
sbb
pop
lea
faddp
pop
push
pushf
jb
(bad)
in
and
stos
enter
lock
cmp
je
jmp
mov
cs
(bad)
fistp
in
inc
std
cmp
xchg
outs
movs
cmp
shl
dec
les
jge
cmp
aad
xchg
sub
mul
or
btr
sbb
sahf
rcr
std
(bad)
jp
inc
(bad)
fld
xchg
jns
push
jp
fild
inc
xchg
bound
inc
(bad)
dec
arpl
les
jl
dec
add
enter
or
mov
popf
ss
mul
mov
shr
div
jae
cmp
push
inc
or
retf
cmp
inc
(bad)
mov
push
cli
jmp
jns
adc
and
ins
sub
loop
repz
lahf
in
fs
ret
fidivr
and
dec
hlt
mov
pop
adc
scas
test
sub
dec
outs
in
jg
jns
sahf
ins
call
dec
pop
add
mov
(bad)
xor
adc
mov
cli
test
sub
sub
neg
shr
jnp
mov
(bad)
and
add
(bad)
rol
int3
dec
out
xor
shl
push
jae
jo
pop
dec
sub
imul
loopne
cmp
jae
iret
mov
pop
mov
int
add
into
dec
and
pop
hlt
sbb
jb
(bad)
sbb
(bad)
lea
stc
mov
jae
mov
fs
adc
cdq
test
das
or
xchg
xchg
ret
inc
mov
aad
jecxz
(bad)
dec
xchg
iret
push
mov
scas
out
and
pop
cwde
push
es
pop
sub
(bad)
mov
push
sub
cmc
fst
mov
push
mov
sub
not
addr16
pop
xor
aas
mov
jae
mov
jecxz
dec
mov
out
sub
pushf
sbb
jnp
mov
pushf
das
pop
cmp
xchg
into
sbb
ss
repz
push
mov
sbb
xchg
mov
dec
cmp
cmp
(bad)
xor
push
iret
xor
into
adc
pop
mov
test
jne
jns
addr16
cdq
out
mov
loope
into
jns
not
mov
aaa
cmps
or
adc
pop
mov
cwde
retf
push
fisubr
addr16
(bad)
fistp
dec
cmps
xor
aas
sbb
inc
push
mov
shl
inc
mov
xchg
lods
cld
daa
lea
xor
jnp
pop
push
add
push
popf
dec
mul
into
jge
lahf
mov
popa
std
or
pop
lea
push
inc
cmp
sub
sub
or
pop
mov
jge
or
cdq
scas
sbb
jae
push
mov
sbb
fwait
(bad)
jo
int
sti
(bad)
mov
cwde
out
bound
sahf
jbe
mov
xor
ret
cmps
shl
mov
loopne
lods
stos
jge
push
hlt
sub
jb
scas
out
cmp
push
retf
cli
daa
add
or
and
out
pop
lea
retf
xor
sti
ret
inc
add
dec
fs
pop
cli
or
mov
(bad)
sub
dec
aas
stc
ja
inc
sbb
mov
stos
(bad)
repz
stos
mov
dec
cmp
xor
jno
pop
jo
xchg
rol
outs
sub
or
imul
cmp
loop
(bad)
xor
hlt
addr16
jbe
cmp
jns
retf
jle
dec
movs
lods
xchg
leave
cwde
mov
or
jecxz
call
pop
xchg
loope
retf
imul
daa
loopne
test
mov
pop
mov
fst
ret
sbb
dec
int3
and
shr
repnz
(bad)
xor
sub
sahf
or
popf
gs
xchg
mov
or
jge
mov
ja
fild
inc
stc
nop
(bad)
lods
sbb
shl
cmps
ror
hlt
ss
retf
xor
in
adc
aad
movs
fnstsw
out
fdivr
or
xchg
jl
fcomp
xor
in
mov
fisttp
sar
pop
inc
sbb
ret
jo
movs
jae
dec
inc
and
aam
loopne
cmp
dec
and
xchg
and
icebp
fwait
in
adc
and
pop
jp
sar
sbb
mov
jns
xor
ja
mov
mov
cli
addr16
and
nop
rcl
mov
cmc
loop
shl
xlat
and
xor
pop
xchg
mov
aad
clc
icebp
(bad)
pop
xor
cli
inc
inc
push
dec
cli
cmp
or
mov
xchg
add
or
sub
mov
xor
jg
aad
(bad)
aad
enter
ja
adc
in
ret
push
sbb
push
pop
inc
jmp
(bad)
repz
test
xchg
or
arpl
lods
jp
sub
or
fadd
jl
adc
ror
daa
sub
pop
ss
fidiv
sub
arpl
shl
sub
pop
cmovns
in
pop
retf
inc
mov
or
(bad)
cmp
mov
addr16
jnp
xor
cmp
add
push
(bad)
mov
jno
xor
fidiv
fidivr
std
movs
repz
cmc
pop
out
and
(bad)
ja
cmp
lea
cld
pop
int3
pop
sbb
cmc
pop
pop
and
jmp
leave
xchg
dec
cmp
add
dec
and
xor
xor
push
sub
shl
fistp
xchg
push
mov
push
jmp
mov
pop
inc
movs
cmp
retf
icebp
jmp
push
daa
stos
and
dec
mov
repz
fild
retf
xchg
pop
jnp
sub
cmps
mov
bound
in
xor
test
fld
inc
pop
xor
jecxz
rcr
mov
add
int
es
add
and
lock
in
in
std
data16
jmp
adc
cmp
stc
retf
cmp
movs
gs
pop
jle
imul
xchg
fwait
lahf
add
or
fimul
jmp
sub
sub
inc
clc
in
arpl
lds
mov
cwde
pop
pop
adc
outs
sahf
mov
retf
push
push
push
sbb
lds
pop
std
mov
fsubr
(bad)
xor
xchg
lods
and
mov
enter
inc
sbb
sub
mov
jne
inc
xlat
mov
mov
push
or
test
add
push
xchg
imul
dec
lea
or
mov
mov
jp
retf
xor
xor
out
fs
pop
sbb
outs
out
adc
sar
push
mov
jmp
sub
jl
repz
pop
fdiv
hlt
inc
pop
sti
imul
cmc
out
addr16
stos
push
iret
push
int3
call
cli
int3
fwait
dec
xchg
outs
and
push
xor
test
mov
imul
retf
jecxz
je
pop
std
es
pop
cwde
ss
js
or
dec
imul
mov
adc
and
sub
xor
jge
push
loop
xchg
and
scas
aaa
jge
mov
arpl
fidivr
lods
dec
imul
adc
je
push
add
jge
addr16
jp
or
test
adc
dec
popa
fimul
xchg
add
inc
shr
stos
out
add
ds
add
inc
pop
sub
add
pushf
push
ins
and
and
out
jne
adc
in
stc
add
xor
inc
adc
adc
jp
out
ja
retf
pop
out
push
clc
leave
inc
enter
sub
adc
or
mul
or
jl
and
dec
fisttp
shr
clc
push
pop
enter
mov
or
jmp
aad
je
jmp
test
and
loope
nop
mov
mov
pop
or
sub
or
test
adc
adc
cld
test
adc
sub
pop
pop
rol
mov
lahf
adc
popf
mov
inc
cmp
xchg
mov
xor
add
outs
arpl
mov
ja
pushf
stos
or
mov
scas
pop
ja
shl
xor
mov
enter
loop
sub
lods
sub
es
jmp
mov
(bad)
stc
repz
and
adc
add
test
cmp
rol
sub
fdiv
xlat
inc
mov
arpl
arpl
mov
adc
lea
fimul
inc
imul
pop
or
xchg
xchg
fwait
cmps
inc
inc
std
mov
mov
sahf
add
mov
jbe
sub
test
lahf
cmp
sub
mov
mov
rol
dec
and
push
pop
not
call
jbe
imul
xchg
lock
(bad)
pusha
xor
int
test
mov
xor
sti
xor
jg
add
lds
out
sbb
pop
stos
mov
or
stos
jle
aam
adc
pop
aad
add
sbb
cmc
mov
popa
mov
scas
(bad)
jbe
pop
rcl
push
mov
cwde
pop
sbb
imul
mov
pop
mov
mov
shl
psllw
jecxz
(bad)
cmps
jmp
push
int3
test
xlat
push
data16
xchg
int3
push
mov
cmc
pop
scas
movs
add
xlat
add
dec
adc
and
jmp
mov
jp
push
xchg
or
iret
(bad)
loopne
mov
xchg
xor
call
in
sahf
and
lahf
scas
and
sar
in
lea
sub
(bad)
xor
mov
shl
add
push
or
nop
push
mov
rcr
icebp
dec
jnp
or
test
fdiv
bound
test
lahf
out
mov
mov
xor
cmp
ds
jbe
outs
xlat
sti
xchg
jp
(bad)
jns
fcomi
pop
into
movs
or
sbb
arpl
add
call
lds
lods
cmp
movs
stc
mov
and
mov
mov
shr
push
pop
push
ins
cdq
xchg
cmp
cmp
movs
adc
dec
jmp
js
or
outs
jo
not
popf
mov
sbb
aaa
pop
rcl
mov
std
mov
sub
ret
ss
cmp
jne
xor
sbb
daa
outs
add
js
fwait
sub
xor
push
adc
rcl
and
fsqrt
stos
lds
(bad)
mov
pushf
jmp
leave
cmp
and
or
push
push
loop
dec
sub
sub
je
mov
pop
pop
dec
xchg
mov
iret
pop
arpl
call
sub
popf
add
or
or
out
fld
fs
dec
out
nop
mov
rcr
sahf
ffree
out
popf
jl
adc
jmp
clc
push
cmp
leave
shl
mov
push
push
fcomip
cmp
pusha
dec
push
fwait
jnp
sub
fldenv
(bad)
jmp
(bad)
xor
mov
fs
push
add
cdq
out
ss
ret
adc
pop
ins
xor
jbe
pop
lods
ja
mov
scas
call
push
mov
pop
retf
lods
cmp
adc
xor
sbb
cmp
add
pop
mov
pop
dec
jo
in
pop
imul
sbb
popa
jmp
add
cld
repz
pop
mov
repz
fidivr
imul
push
or
xor
fnstsw
xor
pop
xor
mov
int3
lods
push
nop
cmp
call
mov
(bad)
dec
lahf
push
mov
test
cmp
sbb
nop
in
sbb
push
cmp
add
int3
mov
int
inc
jns
(bad)
push
dec
adc
fistp
(bad)
pop
lahf
enter
jge
cmps
xchg
mov
fcom
aam
cdq
retf
push
xchg
cmp
mov
dec
int3
and
(bad)
sub
sbb
ret
movs
push
xor
retf
test
and
mov
mov
mov
ret
loopne
pop
adc
inc
mov
push
fs
xchg
retf
sub
push
jbe
lods
mov
mov
sub
(bad)
jnp
xor
fwait
loope
aam
daa
dec
(bad)
mov
mov
test
popf
adc
scas
imul
test
arpl
icebp
dec
mov
cli
mov
or
jp
cmp
lods
lock
in
mov
ret
xchg
(bad)
cmp
sbb
enter
mov
jo
jno
inc
xchg
mov
mov
(bad)
xor
inc
cmp
mov
mov
jno
jg
pop
pop
xchg
lock
movs
hlt
pop
nop
and
retf
pop
mov
lea
mov
xor
sar
pop
pop
push
outs
dec
ret
mov
mov
jl
stos
jnp
jbe
mov
imul
mov
sub
adc
lahf
inc
push
mov
shl
sbb
shl
pop
jb
jmp
cwde
clc
sti
jnp
pop
push
shl
retf
(bad)
push
jne
ret
dec
retw
jnp
xor
mov
loop
jb
outs
loop
jp
sbb
xchg
fidivr
cmp
mov
in
(bad)
in
pop
cld
sbb
xlat
push
imul
test
ret
pop
or
add
xlat
fisub
sub
mov
aam
mov
mov
in
into
test
outs
inc
(bad)
cmp
jbe
jecxz
lods
xor
mov
push
hlt
mov
cmp
sub
mov
pop
in
cmp
(bad)
frstor
jne
adc
nop
test
sub
scas
dec
push
aam
call
hlt
loop
sbb
cs
jmp
push
sbb
fiadd
xchg
or
dec
call
sub
mov
mov
in
add
add
jnp
push
loopne
lahf
fisubr
add
sub
in
in
daa
xchg
cmp
sbb
mov
or
out
cmp
sbb
ret
or
ins
scas
addr16
scas
shl
ss
jle
mov
xor
in
sbb
cwde
ret
cmp
enter
push
test
je
push
xchg
call
aaa
mov
mov
cmp
cmps
in
and
fistp
and
inc
aam
icebp
aam
stos
int3
mov
jb
pop
mov
inc
and
push
call
sahf
fistp
pop
jecxz
je
stc
repnz
pop
in
jmp
sub
sti
mov
cs
xchg
jl
jnp
in
mov
xchg
call
scas
outs
stos
mov
push
popa
scas
inc
mov
xor
mov
fld
test
repz
leave
(bad)
push
(bad)
sti
sub
adc
fsubp
shl
jle
and
mov
xchg
outs
(bad)
int3
push
adc
pop
cli
jle
mov
mov
pop
jmp
fldcw
inc
arpl
mov
and
fxch
inc
pop
in
cmp
jne
clc
xor
add
clc
and
adc
dec
in
pop
push
and
test
shl
inc
cwde
(bad)
jmp
xchg
mov
mov
and
ret
call
push
mov
scas
in
fldenv
and
(bad)
dec
fmul
loop
push
mov
sti
inc
xlat
shr
retf
mov
mov
mul
jne
push
cs
nop
push
xchg
(bad)
aad
cmp
std
mov
sqrtps
dec
push
sub
mov
xchg
popa
(bad)
stc
lods
loopne
xlat
sar
add
jl
ins
enter
mov
mov
and
push
rcr
sbb
jbe
mov
mov
idiv
sbb
dec
clc
mov
ficomp
fild
jmp
mov
int3
jo
cmps
add
ret
jb
(bad)
jecxz
mov
clc
add
cld
pop
jmp
lahf
inc
adc
add
pop
add
mov
inc
pop
out
clc
rcl
and
jns
or
pop
dec
fistp
data16
movs
js
jp
jo
je
(bad)
mov
repnz
lods
push
inc
jae
fwait
inc
repnz
jmp
xchg
fstp
mov
test
jmp
(bad)
fs
int3
fidiv
push
ins
push
pop
push
iret
xchg
fs
movs
imul
dec
inc
push
cmc
retf
es
add
test
movs
ss
int
mov
(bad)
xchg
movs
add
retf
mov
retf
(bad)
cmp
(bad)
jg
inc
loopne
mul
fistp
push
xor
sub
mov
sbb
iret
aad
pop
imul
xor
or
rcr
push
mov
leave
nop
xor
push
pop
add
jb
inc
fisub
sub
std
icebp
sti
shl
jbe
stc
xchg
test
repz
pop
and
jecxz
les
mov
inc
jns
int3
sar
or
pop
add
push
(bad)
sub
inc
and
aad
mov
in
in
fldcw
adc
jecxz
push
push
adc
sbb
dec
sub
dec
xchg
add
xor
repnz
stos
shr
pop
mov
sub
(bad)
push
pop
jo
test
(bad)
dec
mov
xor
ror
imul
mov
pop
into
ret
jge
lods
aam
dec
inc
cwde
mov
mov
jne
adc
mov
jb
icebp
mov
cdq
sub
jmp
sbb
sub
sub
mul
jl
dec
fdivr
lods
adc
pop
clc
sbb
iret
sub
jne
inc
mov
inc
push
sub
ficom
scas
in
fild
xlat
cli
mov
push
add
test
test
retf
sub
inc
arpl
lods
sub
pop
cmc
mov
cld
dec
jmp
fadd
xchg
adc
pop
push
xchg
jne
push
mov
sub
mov
and
aam
gs
(bad)
in
xchg
mov
mov
push
retf
test
add
push
inc
stos
mov
inc
and
das
sbb
push
mov
rcl
add
xchg
lods
pop
sub
int
pop
cli
shr
xchg
mov
sub
sbb
mov
hlt
lds
inc
push
sub
(bad)
(bad)
idiv
adc
xchg
test
inc
(bad)
jge
and
(bad)
pop
enter
cli
fild
sub
imul
shl
xor
icebp
and
dec
icebp
or
jmp
ret
sbb
sub
dec
jmp
fisub
call
cdq
xor
mov
repz
push
lahf
mov
icebp
lds
repz
add
add
sub
out
push
pop
pop
adc
sub
xor
into
cld
fld
add
stos
push
push
lahf
and
adc
xor
adc
push
inc
std
das
icebp
add
scas
pop
sub
xchg
adc
push
push
scas
mov
and
push
jle
imul
iret
dec
(bad)
sbb
jno
and
sbb
cmp
mov
push
retf
and
jmp
cmp
scas
nop
sub
lahf
cmps
dec
sub
jecxz
movs
xchg
repz
mov
jns
into
xchg
shr
push
push
imul
sbb
jge
sub
or
jmp
ret
add
jl
sub
jbe
mov
pop
xor
lods
leave
pop
test
enter
mov
fs
cs
fnsave
cdq
and
sbb
iret
jle
mov
rcl
xchg
xchg
jle
cmp
push
mov
repnz
call
adc
push
data16
add
add
retf
mul
into
movs
enter
ds
loop
lahf
repnz
int
inc
inc
xchg
sahf
ficomp
cmc
push
fdivr
mov
xor
mov
jmp
out
sub
or
mov
push
xor
ret
dec
dec
mov
xchg
retf
add
fldcw
fmul
jae
adc
popf
mov
sub
or
inc
or
or
mov
adc
sbb
and
add
pop
cmps
or
outs
sbb
xchg
xchg
or
js
lods
out
out
or
imul
cmp
stc
les
jne
stc
mov
fbld
sar
push
mov
in
mov
lods
nop
sbb
sbb
adc
sbb
jno
push
call
(bad)
pop
mov
push
mov
adc
cmp
cmp
aad
movs
mov
imul
mov
int3
mov
lds
outs
pop
js
stos
adc
add
jb
mov
in
sub
outs
test
xchg
mov
aam
(bad)
dec
outs
mov
ret
bound
arpl
inc
pusha
js
inc
call
push
cli
pop
out
sub
mov
scas
mov
mov
fwait
jle
inc
daa
dec
add
xlat
xchg
pop
jmp
ret
aam
in
daa
movs
sbb
jo
or
adc
xchg
dec
cmp
cmc
mov
cmp
jmp
mov
mov
(bad)
out
dec
and
(bad)
call
std
cmp
test
and
inc
push
adc
pop
movs
xchg
lahf
mov
js
push
outs
pusha
add
rcl
lahf
sbb
mov
bound
nop
pop
inc
sti
enter
cmp
sub
add
out
in
loope
jge
cli
dec
hlt
dec
mov
ficomp
push
push
adc
dec
aaa
xor
outs
les
ds
push
jl
out
mov
lods
lock
xchg
mov
sbb
sti
push
xchg
pop
push
mov
push
sbb
push
sbb
and
test
push
sub
into
adc
popa
sbb
popf
(bad)
mov
shl
xchg
movs
inc
int
movs
fwait
add
imul
sbb
xor
xor
call
lods
jno
dec
and
jae
jns
pop
retf
sti
mov
and
jne
xor
mov
sti
sbb
xlat
push
ja
inc
ins
inc
inc
std
jb
test
aaa
mov
pop
sub
push
mov
int
pop
sbb
pop
pop
(bad)
add
in
iret
mov
dec
repz
jnp
or
mov
ucomiss
in
lock
sbb
clc
jns
cmp
leave
jae
and
and
aam
aad
push
lock
outs
xor
mov
add
test
cmp
aaa
test
sub
push
sbb
lods
fmul
popa
dec
sub
fld
mov
lods
lock
js
push
push
pop
inc
jo
cmp
push
dec
enter
mov
push
xor
sbb
inc
xor
test
push
cli
test
mov
or
adc
mov
push
das
test
sub
or
xchg
out
sub
sbb
push
test
and
pavgw
mov
xchg
or
sbb
push
movs
test
xor
fcom
aad
or
sbb
scas
inc
adc
or
pop
pop
inc
dec
sar
pop
mov
xchg
stos
jbe
std
sub
cmp
xchg
test
xchg
cmp
out
outs
sub
and
cmps
repnz
sbb
hlt
inc
xor
push
mov
jnp
repnz
mov
sbb
(bad)
mov
(bad)
movs
push
sbb
ins
dec
sahf
fsub
bound
int3
scas
push
mov
cli
sahf
jne
mov
ret
imul
lods
(bad)
mov
add
xor
dec
mov
xchg
push
sub
mov
test
scas
jge
into
dec
(bad)
movs
fdivr
lock
push
sti
stos
sub
jae
mov
mov
xchg
push
popa
mov
les
push
fld
cmp
sti
test
pop
sahf
fwait
aad
pusha
pusha
sbb
xchg
repnz
mov
stos
mov
adc
in
mov
loopne
sbb
aas
cmp
sbb
out
sub
out
cmp
iret
push
adc
movs
in
mov
sbb
mov
mov
jecxz
adc
dec
cmp
mov
sub
xor
out
sti
test
pop
std
sbb
sbb
inc
repnz
ret
cmps
push
out
xor
push
sub
dec
add
mov
xor
or
xchg
rol
shl
les
lods
dec
xchg
into
jmp
popf
lock
aam
push
inc
xchg
jne
fdiv
(bad)
cs
mov
inc
fs
jb
std
sub
sub
hlt
setle
sbb
jmp
jmp
jo
in
cmc
pop
adc
retf
imul
in
adc
sbb
xor
stos
mov
cmp
das
mov
aas
and
mov
aaa
inc
push
and
or
xchg
aam
mov
ret
mov
mov
push
sub
push
mov
retf
jp
cmp
or
mov
jecxz
mov
stc
fnsave
xor
fadd
aaa
pop
mov
scas
xchg
(bad)
mov
loop
call
add
(bad)
clc
mov
lds
jmp
push
out
hlt
jp
gs
int
mov
or
pushf
sti
push
scas
jle
inc
inc
hlt
or
inc
out
loopne
(bad)
ins
pushf
mov
(bad)
stos
sti
mov
jl
xchg
pop
jnp
shl
mov
and
push
and
ja
dec
popf
lock
cs
push
or
in
loopne
mov
push
xor
test
adc
add
and
retf
fwait
pop
xchg
pop
test
outs
std
into
push
sub
dec
adc
and
into
fnstenv
retf
jae
int
mov
cld
call
out
dec
jo
rol
lea
fs
data16
outs
mov
push
ds
sbb
mov
int
jnp
mov
arpl
push
inc
push
retf
into
jle
jae
and
lods
sti
and
push
in
mov
add
adc
or
or
dec
push
adc
cmp
scas
ss
pop
pushf
xchg
cmc
xchg
jbe
inc
lahf
push
movs
or
lds
jg
mul
mov
add
sbb
add
dec
push
outs
inc
mov
js
fstp
or
test
lods
cli
push
pop
lods
setne
sub
jle
inc
xchg
pop
mov
les
inc
jmp
and
daa
or
cmp
pop
fwait
ret
and
inc
adc
xor
iret
in
and
mov
sbb
mov
sti
enter
xchg
xchg
inc
das
ss
pop
jbe
iret
shl
mov
fsubr
dec
into
scas
aas
arpl
xor
pop
adc
dec
or
sub
cmovns
sub
cdq
pop
imul
gs
mov
mov
inc
adc
cwde
or
cmp
pusha
cmp
cmp
mov
cmc
ffree
push
xor
mov
enter
mul
jnp
je
aaa
xchg
out
popf
or
xchg
std
inc
in
dec
cmp
das
push
adc
mov
inc
and
dec
mov
sar
pop
mov
cmp
add
fcomp
xchg
pop
mov
add
mov
cs
arpl
mov
cmp
jmp
inc
ja
and
dec
fs
push
cli
add
outs
pop
xor
aas
int
cmp
aad
and
jne
push
or
loope
pop
and
mov
inc
in
mov
test
ret
fcom
inc
mov
jb
push
bound
fadd
mov
mov
retf
and
int3
fsub
sub
popa
xchg
cmp
xchg
faddp
cmps
pop
add
sbb
stos
std
jns
icebp
push
enter
mov
xchg
and
in
pop
repnz
cmp
add
outs
fisttp
fiadd
dec
retf
adc
sbb
inc
cmp
lea
retf
jno
push
pop
add
arpl
and
mov
fdivr
leave
fbld
pusha
nop
jae
sbb
sub
inc
mov
cmp
cmps
aaa
ret
sub
pop
popa
push
popf
and
call
pop
mov
js
mov
adc
add
mov
jl
sahf
push
pushf
repnz
rcl
idiv
cmp
cmps
xor
push
mov
cld
cmp
dec
fld
mov
pop
sub
call
scas
inc
dec
test
dec
out
and
hlt
in
shl
pushf
pop
jg
imul
jne
fstp
and
adc
adc
outs
jge
ins
inc
jbe
test
div
xchg
out
out
loope
adc
outs
mov
inc
xchg
mov
xchg
mov
mov
push
loop
stos
in
cli
js
mov
aas
jmp
test
sti
aaa
enter
adc
sub
adc
ror
pushf
mov
js
mov
jl
pextrw
cdq
xor
cmps
aad
pop
rcr
mov
fcom
add
mov
jae
push
in
mov
retf
fwait
dec
das
rcr
stos
mov
loop
mov
ss
push
bound
sub
js
jae
scas
push
xor
arpl
push
xor
sbb
adc
repz
push
jecxz
(bad)
jnp
mov
cmp
pushf
mov
jo
in
xchg
loopne
cmp
es
(bad)
leave
xlat
and
fimul
add
test
ja
push
cmps
mov
aaa
add
dec
stos
cmc
sub
and
xchg
mov
and
and
pop
push
sbb
dec
pop
mov
cmc
ins
mov
cwde
jmp
cld
add
movs
hlt
mov
stc
pop
(bad)
add
rol
xchg
outs
fisubr
fld
and
or
addr16
ret
popf
sahf
hlt
test
mov
pop
js
mov
mov
add
add
xchg
jae
sub
in
jp
cmps
int3
test
push
enter
inc
sbb
cs
jnp
hlt
dec
mov
push
sbb
sbb
int
push
fiadd
inc
xlat
xor
std
pushf
or
dec
jge
mov
mov
sar
ja
jg
dec
jecxz
jae
stc
fabs
add
repnz
or
adc
movs
cmps
mov
js
pop
cmp
jmp
sbb
mov
sahf
xor
jecxz
lds
sub
cmp
ja
mov
(bad)
xor
xor
pop
jne
cld
mov
int
retf
inc
std
test
jno
ds
loop
xor
cs
rcl
fdiv
jae
stc
aas
test
and
inc
pop
cs
arpl
sub
inc
inc
(bad)
shl
mov
cmp
add
loope
mov
push
sbb
jae
add
rcr
jl
aad
dec
rcl
adc
pop
xchg
inc
xchg
cmps
dec
sti
lods
adc
fld
or
jle
sub
cwde
add
stos
mov
push
or
xchg
mov
xor
sbb
jecxz
cmp
xchg
test
cmp
mov
lahf
or
pusha
or
pop
jmp
inc
dec
pop
add
in
sub
mov
in
sti
xchg
sub
ja
mov
add
and
ins
pop
xor
pop
cmp
test
stos
out
pop
prefetchnta
sahf
in
es
mov
inc
das
cmps
popa
mov
lods
or
div
mov
push
mov
xor
push
in
inc
jecxz
sbb
das
mov
loopne
jns
out
ficomp
mov
push
sbb
fimul
hlt
mov
xchg
aam
shr
sbb
movs
xor
cmp
jae
mov
mov
pop
ss
pop
dec
xchg
loope
fwait
cmp
ja
fisttp
(bad)
out
adc
cmps
sahf
ja
shr
scas
ja
xchg
or
and
jg
test
out
sub
sbb
pop
xor
sub
loopne
imul
cmps
fsub
adc
imul
and
enter
movs
sub
int
fcom
pusha
(bad)
adc
aaa
jmp
dec
sbb
push
mov
call
adc
adc
xchg
jl
mov
retf
push
xor
mov
add
adc
sbb
add
sbb
daa
xchg
arpl
mov
sti
sbb
and
data16
clc
fwait
mov
mov
add
shl
add
in
pop
and
fisub
cmp
sbb
cmp
sub
out
add
cli
fisttp
ret
(bad)
cmp
mov
pop
push
sbb
outs
push
or
add
pop
mov
jecxz
xchg
(bad)
pop
adc
test
in
xor
fwait
and
jnp
sbb
std
xchg
lods
seto
xor
adc
in
cmp
cmc
mov
retf
and
arpl
mov
or
push
in
ret
mov
(bad)
int
push
jmp
es
xchg
mov
and
lea
lea
add
idiv
inc
fisub
jmp
jae
cmc
mov
stos
mov
jb
dec
mov
loopne
(bad)
ss
pop
adc
repz
iret
out
leave
outs
push
cli
addr16
cmp
jl
dec
shr
gs
push
mov
(bad)
jge
aaa
mov
cmp
jl
movs
jo
xor
inc
xchg
retf
jg
jo
lods
and
(bad)
adc
shl
push
push
out
aas
push
and
clc
mov
inc
mov
inc
js
sub
pop
xchg
fistp
mov
jne
xchg
shr
in
cmp
ins
mov
dec
sbb
out
inc
dec
or
pop
outs
outs
mov
imul
repz
mov
sbb
stos
inc
add
xchg
adc
adc
jae
xor
idiv
fisubr
mov
adc
mov
jmp
mov
push
icebp
pop
cli
(bad)
out
mov
push
inc
sbb
in
test
(bad)
fwait
push
or
jbe
lock
stos
xchg
or
adc
js
ucomiss
test
test
cmp
ins
jns
mov
les
ins
mov
mov
push
bound
mov
pop
push
pop
push
out
fsub
jecxz
add
or
(bad)
lahf
and
mov
int
or
ret
xchg
add
in
les
mov
ficomp
mov
jmp
xchg
bnd
sbb
mov
(bad)
mov
je
das
adc
pusha
xchg
les
jo
pop
imul
cmp
pushf
nop
sbb
cmp
gs
outs
(bad)
pushf
fisub
mov
inc
scas
test
mov
push
inc
ret
mov
ret
and
js
dec
add
pop
cmc
jnp
lods
je
cmp
loop
push
adc
jg
test
idiv
cmp
shr
mov
xchg
scas
or
test
inc
call
pop
xchg
xor
mov
cmps
jmp
stos
sbb
mov
xchg
nop
ffreep
dec
out
cmps
dec
retf
outs
ret
test
std
sar
std
add
into
inc
jle
rcl
jbe
retf
in
out
push
mov
outs
aam
fld
and
push
xchg
adc
ss
adc
xchg
ret
popa
xchg
sahf
mov
fisubr
cmp
mov
xchg
push
xor
icebp
xchg
jg
jbe
jne
retf
scas
add
jle
xor
aad
or
pushf
xor
mov
push
mov
or
push
adc
push
call
sub
enter
jae
mov
push
aam
push
push
scas
pushf
push
in
dec
(bad)
retf
outs
sbb
in
dec
ds
dec
mov
cmp
xor
mov
lock
mov
pop
jecxz
jo
pop
fild
nop
xchg
pusha
bound
into
sahf
dec
in
jl
(bad)
jg
xchg
inc
cmp
jbe
jg
(bad)
add
push
pop
js
jl
push
inc
sbb
jmp
cmp
test
mov
(bad)
mov
inc
scas
into
in
mov
or
hlt
and
xchg
stc
cwde
dec
rol
cmp
pop
das
mov
mov
test
jg
push
movs
fcomp
sub
mov
mov
push
mov
out
popf
push
es
out
or
retf
jmp
mov
sub
enter
mov
pop
outs
push
aad
out
inc
nop
and
(bad)
ss
leave
add
ja
mov
fwait
(bad)
aad
and
fwait
leave
and
outs
aaa
nop
data16
inc
fisttp
push
pop
lea
ja
sbb
and
dec
and
enter
aas
xchg
pop
mov
pop
or
cmp
test
fld
inc
les
dec
cmp
pop
fdivr
mov
sub
(bad)
push
or
inc
repnz
gs
inc
mov
dec
sbb
inc
pop
sub
adc
mov
pop
xor
sti
inc
dec
mov
addr16
(bad)
adc
mov
loop
or
mov
pushf
cs
sbb
add
add
(bad)
and
es
cwde
dec
lds
movs
lods
adc
(bad)
fst
leave
push
rcr
adc
cld
push
jnp
(bad)
jno
lds
iret
(bad)
cmp
cdq
sub
into
pushf
ja
jmp
push
stos
(bad)
fldenv
ret
cmp
movs
mov
pop
sbb
fadd
or
or
inc
add
dec
daa
jp
gs
popa
sub
mov
in
cwde
push
mov
bound
clc
or
das
xor
test
ror
sub
xor
lea
xchg
mov
add
sub
lahf
mov
inc
popf
xor
lods
inc
inc
cld
push
and
mov
addr16
inc
push
xchg
sub
xchg
dec
data16
add
pop
pusha
cmc
pop
or
sbb
sub
mov
inc
jbe
icebp
neg
cmps
addr16
mov
dec
call
lods
sbb
fsubrp
jp
jmp
xchg
mov
inc
adc
imul
test
xor
ror
sub
mov
xor
add
mov
mov
push
pop
xor
and
inc
outs
jnp
sub
ja
movs
popa
or
ins
mul
fcomp
out
fwait
and
ss
or
adc
cmp
stc
pop
imul
mov
jp
sbb
inc
and
adc
and
or
mov
xchg
pop
and
or
imul
test
ror
(bad)
jb
test
dec
test
mov
or
(bad)
or
xor
jns
cmps
data16
sub
mov
sbb
sbb
inc
pusha
sbb
sbb
scas
stos
pop
fisub
inc
ret
in
inc
fdiv
push
xchg
pop
push
jnp
mov
(bad)
mov
jl
push
rcl
scas
inc
dec
push
rol
imul
mov
push
inc
xchg
push
jle
or
mov
bnd
ds
mov
in
pop
icebp
loop
leave
push
push
test
icebp
es
fdivr
ja
push
jge
push
lods
adc
cdq
dec
cmp
stc
sar
or
sub
ins
cmc
mov
pop
rol
ins
(bad)
idiv
mov
in
push
add
ficomp
sub
stos
addr16
mov
sbb
push
movs
mov
stc
call
mov
mov
in
pushf
in
ret
test
xor
adc
out
cmp
mov
fst
rcr
ror
push
cdq
add
loop
sbb
inc
lods
(bad)
mov
mov
xchg
(bad)
fiadd
in
cmp
mov
jmp
jns
lods
push
xor
gs
xchg
sub
loop
nop
cdq
adc
cmp
inc
aam
in
sub
bound
arpl
shl
(bad)
xchg
inc
int3
sbb
mov
or
jno
popa
inc
inc
rcr
lea
fist
pop
sub
jbe
ins
fbld
push
and
mov
pop
je
test
cdq
add
pop
cmp
or
ss
jno
push
int3
idiv
jae
mov
enter
xor
inc
sub
imul
lds
stos
inc
into
adc
jp
fcmovnbe
icebp
(bad)
mov
test
cmp
fldcw
mov
ret
test
iret
xor
shl
icebp
mov
nop
sti
cwde
mov
mov
cwde
repz
jmp
in
pop
mov
aad
mov
pop
sub
xor
(bad)
out
inc
cs
loopne
pop
push
xor
out
mov
pop
pusha
xchg
cld
or
cmp
shl
and
inc
std
sbb
sti
lds
jge
pop
mov
arpl
pop
js
mov
xchg
inc
mov
(bad)
cdq
pusha
and
cdq
cmp
adc
leave
jbe
and
fisub
(bad)
mov
jl
adc
cs
dec
or
or
outs
xor
sbb
sti
arpl
xchg
cmp
test
mov
out
clc
test
jo
jecxz
daa
cmovb
test
dec
cmp
into
adc
sub
enter
shr
out
xlat
movs
cmc
adc
dec
mov
mov
dec
lock
inc
add
mov
jg
test
icebp
xlat
sub
aad
mov
(bad)
cmc
enter
xchg
cdq
mov
mov
add
es
sbb
cmp
aas
sub
mov
inc
push
jp
cmps
push
dec
jbe
jnp
cmp
rcl
adc
inc
jecxz
mov
inc
scas
mov
daa
les
inc
mov
sub
inc
cmps
xor
neg
in
repnz
inc
int
sti
movs
adc
cs
sbb
scas
shl
cli
sbb
(bad)
je
loop
mov
jb
lock
mov
push
stc
retf
outs
add
je
push
or
mov
inc
aas
icebp
xor
jl
push
mov
xchg
and
mov
je
add
xchg
sti
dec
lea
loope
mov
add
lock
jns
jnp
cdq
loope
loop
imul
out
shl
pop
mov
sub
pop
fs
call
data16
daa
(bad)
fild
push
jmp
cmp
retf
mov
sub
adc
xor
cmp
fdivr
cmc
fild
retf
(bad)
imul
(bad)
cwde
not
jmp
repz
lea
pop
or
call
les
push
es
out
dec
(bad)
icebp
adc
cmp
fnstenv
repz
ror
mov
jbe
adc
pop
mov
jge
jle
jne
jns
ficom
shl
mov
dec
inc
out
mov
enter
call
and
inc
ret
or
(bad)
add
retf
push
push
sub
inc
cmp
cmp
adc
sti
cmps
inc
push
loop
sbb
mov
ins
mov
loopne
call
xor
jle
cmp
repz
fistp
dec
pop
mov
retw
push
iret
add
movs
test
rol
shl
or
push
inc
xchg
mov
data16
(bad)
cdq
(bad)
aad
adc
fldenv
pop
jno
adc
sahf
xchg
adc
mov
jns
daa
mov
je
(bad)
xchg
jae
mov
je
jns
test
ja
and
enter
mov
mov
mov
dec
jle
mov
into
int3
add
xchg
icebp
or
pop
inc
ret
pop
mov
adc
pop
ret
mov
sub
movs
xchg
outs
adc
loope
(bad)
loope
mov
adc
idiv
aad
mov
enter
xlat
rdmsr
inc
mov
sbb
xchg
xchg
xor
stc
jne
popf
retf
add
or
and
jmp
rcl
sbb
shr
lods
in
data16
sbb
jns
rcr
call
test
cld
xchg
lods
leave
retf
outs
xchg
add
inc
popf
mov
dec
sbb
adc
pop
sub
cmc
push
or
push
xchg
mov
xor
in
lods
sbb
and
mov
pop
fst
mov
inc
pop
push
add
sbb
ss
addr16
test
mov
xchg
and
push
adc
cli
mov
xor
pop
inc
data16
mov
mov
jo
in
push
cs
lahf
(bad)
jmp
pop
inc
mov
pop
test
icebp
lea
(bad)
in
xchg
inc
cmp
inc
xor
repz
(bad)
mov
jns
dec
retf
mov
adc
adc
movs
xor
cmps
mov
mov
mov
mov
dec
sbb
fs
(bad)
std
inc
pop
shl
pop
cwde
stos
add
fmul
dec
mov
jnp
push
dec
or
inc
xor
jl
pushf
aas
ret
mov
inc
sub
in
push
adc
push
cmps
jo
xchg
(bad)
int
outs
fucom
enter
xor
test
adc
int3
hlt
pop
ficomp
cwde
in
in
aam
sbb
scas
clc
jl
in
cmp
test
dec
sbb
mov
lahf
(bad)
out
push
fimul
cmps
jns
dec
mov
cmp
sub
call
movs
mov
call
test
retf
adc
cmp
js
inc
push
sbb
and
inc
icebp
cs
jle
mov
fdiv
sbb
sbb
cmps
or
mov
rcl
xlat
or
pop
cdq
mov
and
dec
retf
popa
xlat
add
pop
xchg
sets
rcl
pop
in
xchg
imul
push
cmp
adc
sub
js
mov
dec
sbb
mov
mov
or
adc
inc
sub
xchg
cmp
bound
inc
add
stos
out
mov
rol
repz
cmp
mov
sub
ja
push
cmps
scas
lea
aad
sbb
lahf
jmp
xchg
cmp
mov
in
cmps
mov
push
and
lds
jb
mov
mov
pop
repnz
mov
adc
stc
cmps
ror
sub
test
inc
int
or
add
add
and
cmps
mov
test
push
pop
sbb
ss
jno
pushf
inc
in
inc
mov
pop
mov
cmp
lahf
adc
add
cmps
cmp
cs
sbb
je
imul
sub
aas
jmp
add
cmp
jmp
inc
lock
mov
ret
dec
std
enter
test
aas
dec
mov
push
lods
(bad)
push
jo
jge
mov
push
xchg
loop
and
pop
pushf
icebp
inc
inc
pop
sbb
jg
inc
fwait
push
add
cwde
cmps
cdq
push
aas
std
xchg
call
xor
cmps
push
fmul
cdq
mov
gs
shl
jb
push
(bad)
in
cwde
out
inc
lds
jge
mov
cli
pop
xchg
mov
in
push
in
adc
mov
or
mov
out
pop
cmp
psubsw
pop
pop
cld
adc
xchg
xor
xchg
scas
mov
mov
or
movs
cmp
mov
add
call
xor
push
mov
pop
repnz
push
out
nop
mov
mov
mov
iret
into
mov
jo
pop
xor
(bad)
not
and
sub
lea
and
iret
loopne
shl
ja
add
lods
cmps
fisttp
push
mov
cld
cli
outs
retf
adc
dec
and
add
mov
test
pushf
retf
pop
mov
int3
sub
pop
pop
mov
inc
jg
rcl
sub
mov
ja
push
(bad)
mul
sub
push
sbb
pop
ins
and
fs
mov
int
mov
or
rol
ds
ss
mov
fisub
cs
comiss
pop
jle
cld
test
hlt
int
xor
in
pop
add
(bad)
fnstsw
lods
ret
lods
inc
dec
cmp
jg
adc
ror
xor
scas
mov
mov
arpl
(bad)
bound
retf
leave
add
pop
js
or
adc
dec
(bad)
dec
xchg
pmulhw
mov
aas
cmp
mov
lock
lock
sub
mov
pop
int
cmc
jns
push
shl
jnp
movs
rol
dec
xlat
jae
or
jbe
cwde
xchg
xor
push
sar
retf
mov
mov
movs
out
cdq
mov
inc
cli
lea
fwait
icebp
cmp
mov
adc
xor
retf
inc
imul
sbb
sub
test
ins
das
pop
and
js
mov
cmp
xchg
or
jecxz
cmp
das
out
aaa
push
(bad)
std
lahf
push
gs
outs
mov
jmp
dec
inc
mov
test
xchg
or
or
xchg
cli
mov
cmp
jne
jg
mov
cli
inc
(bad)
fadd
data16
cwde
and
sbb
push
fwait
nop
test
jmp
sub
imul
add
mov
mov
dec
jl
aad
mov
scas
sub
jge
nop
fmul
(bad)
ins
xlat
and
xchg
and
adc
inc
or
dec
cmp
lods
mov
xor
fstp
cs
cmp
loope
sub
rcl
dec
xchg
sub
fdiv
jo
loope
mov
fidiv
jmp
and
jno
bound
pop
xchg
or
pop
fimul
pusha
cmp
push
cld
mov
inc
retf
ins
ins
mov
ret
fnop
pop
cmps
or
call
mov
dec
cld
mov
mov
retf
out
clc
add
lea
test
loope
int
ins
in
push
sahf
pop
jg
adc
jns
pusha
daa
leave
pop
push
repnz
sub
lock
mov
cmp
or
xchg
es
sbb
sub
inc
lea
mov
push
div
sahf
add
(bad)
jne
dec
mov
fstp
call
imul
xchg
(bad)
jecxz
ss
mov
add
jbe
pop
xor
push
les
adc
ss
xchg
adc
mov
mov
or
push
add
mov
mov
sahf
es
repz
dec
jmp
xchg
xchg
lea
push
xchg
inc
add
sbb
leave
js
ficom
lds
sbb
adc
(bad)
or
pop
push
jg
iret
leave
pop
mov
push
retf
ret
push
dec
jp
or
cwde
sbb
jecxz
out
(bad)
leave
mov
hlt
mov
(bad)
mov
imul
les
jns
mov
dec
add
xchg
stos
cwde
add
(bad)
loope
popf
out
xor
dec
test
unpcklps
in
inc
mov
adc
push
jbe
xchg
out
clc
xchg
cs
int
pop
(bad)
in
data16
mov
or
gs
out
das
dec
(bad)
sti
sbb
addr16
sbb
push
scas
fistp
(bad)
pusha
imul
fst
add
pushf
je
fwait
sti
pop
retf
dec
cli
in
inc
push
add
xor
pop
mov
mov
add
imul
shr
das
scas
or
outs
sar
(bad)
shl
push
loop
push
std
mov
lea
ds
push
out
add
mov
cdq
test
cwde
pop
inc
or
mov
push
pop
or
push
push
jns
and
js
mov
cmc
ret
pop
stos
cmps
push
jno
repz
les
mov
icebp
or
call
or
fnstsw
pop
lods
jmp
sti
pushf
js
dec
iret
pop
add
fincstp
cmp
inc
fsubr
popf
pop
out
sbb
ss
call
xchg
mov
js
stos
dec
xchg
enter
clc
inc
sbb
scas
sbb
shl
lea
or
rcr
xchg
lods
or
fsubr
inc
sub
jp
(bad)
clc
mov
cmp
pop
push
jl
sbb
scas
cmp
loope
dec
jle
test
cdq
cmp
ret
and
or
cwde
in
dec
sahf
mov
jmp
aad
add
push
cmc
jl
push
mov
sub
adc
mov
(bad)
lock
mov
je
stc
pop
repz
in
xchg
sub
jmp
jmp
jns
inc
mov
and
test
retf
pop
or
adc
dec
outs
mov
or
jns
test
loope
test
sahf
out
add
sub
xor
cmp
ins
cld
int3
add
imul
test
xchg
cmp
xor
push
adc
cdq
aaa
add
inc
and
push
jl
lods
ret
(bad)
int
ret
jb
sti
jmp
mov
outs
sbb
outs
or
pop
xchg
mov
sub
sbb
mov
adc
mov
cmp
sti
cmp
or
pop
jg
jmp
jb
test
sbb
mov
mov
cmp
inc
enter
cli
fwait
add
popf
shr
lock
mov
add
lock
inc
cdq
div
inc
or
(bad)
xchg
ss
pop
int3
mov
dec
push
mov
lods
aaa
out
in
dec
hlt
xor
mov
or
mov
or
sar
jg
imul
inc
pop
sub
xchg
sbb
jg
sbb
mov
inc
xchg
sbb
dec
popa
cli
nop
mov
pop
or
cli
movs
fcmovu
pop
xchg
jp
into
fsubrp
ss
jl
sti
loop
jns
ss
cmp
add
lahf
fs
scas
out
out
and
mov
jecxz
(bad)
dec
retf
pusha
and
es
aad
jae
and
cmps
and
sbb
jge
add
jb
pop
js
cmp
je
lds
or
divps
mov
adc
inc
mov
lock
test
pop
sbb
push
dec
jle
iret
or
pushf
movs
inc
imul
push
fsub
push
into
cmp
or
xchg
test
call
push
(bad)
mov
int
ins
imul
mov
icebp
in
retf
(bad)
dec
enter
adc
or
inc
inc
fsubrp
out
arpl
fsubr
fwait
mov
imul
sub
in
es
ja
push
fsubr
xchg
aam
fnstenv
push
arpl
cli
addr16
mov
ss
jp
jle
mov
jbe
xchg
mov
or
push
or
push
mov
jmp
aas
out
popf
aad
pop
sub
dec
sahf
(bad)
repz
push
sar
push
pop
mov
jmp
or
sub
sub
mov
test
or
imul
dec
push
dec
aam
sub
push
loopne
mov
sub
mov
adc
mov
add
xor
jno
jmp
sub
(bad)
dec
jl
xor
aad
cmp
adc
mov
xchg
adc
in
ror
jle
dec
repz
hlt
inc
(bad)
ret
mov
aam
fs
adc
xchg
ins
dec
jle
dec
xor
mov
add
movs
gs
lock
sub
jbe
fs
lds
pop
hlt
cld
sbb
dec
dec
mov
cli
fldpi
jecxz
bound
cld
nop
xchg
cld
cli
push
es
push
sar
ret
shl
pop
dec
lods
kmovw
xor
in
mov
jo
xchg
push
rcr
fstp
xor
xchg
dec
pop
lods
fcmovne
add
dec
mov
imul
mov
sbb
push
nop
xchg
push
adc
mov
aaa
sub
addr16
scas
xor
inc
(bad)
cmps
mov
jge
dec
xchg
lea
test
xor
xchg
rcr
xor
dec
jge
and
aaa
pop
jb
xchg
sub
xor
dec
stc
inc
xor
ret
push
aas
ss
mov
mov
jle
(bad)
fs
push
jbe
hlt
in
pop
jle
xchg
ret
out
or
mov
int
push
test
loope
or
dec
loope
shl
or
sbb
cmc
pop
cmp
mov
push
(bad)
ret
and
enter
outs
sbb
and
xor
cmp
std
jbe
jmp
xor
hlt
sub
test
jmp
push
cmp
shr
add
mov
int3
and
gs
pushf
ins
adc
jns
inc
mov
xor
sbb
jne
jnp
jae
retf
xor
xlat
push
xchg
(bad)
call
movs
and
inc
push
pop
cmc
cmp
add
mov
das
and
lods
jl
mov
cmps
or
mov
xor
popf
pcmpeqw
repnz
icebp
jecxz
out
cmp
in
cmp
lahf
and
jo
retf
sbb
xor
jo
lods
iret
cwde
leave
adc
out
jecxz
mov
dec
dec
cmp
xchg
dec
js
movs
repnz
jbe
repz
sub
les
retf
xor
xchg
arpl
sub
ins
and
data16
loopne
retf
jecxz
or
jne
lea
xchg
pop
arpl
cmp
push
mov
mov
adc
sub
xchg
dec
(bad)
fidivr
and
popf
das
add
fstp
ret
std
aas
loope
je
pop
sub
(bad)
mov
or
arpl
aad
mov
cmc
adc
mov
lahf
ror
repz
xor
xchg
loope
and
scas
pop
sub
xchg
in
repz
les
je
cmps
xor
sbb
push
ror
stos
add
xor
add
push
xchg
call
neg
push
mov
mov
(bad)
shl
push
call
stos
ret
mov
cmp
adc
scas
addr16
(bad)
sbb
lds
int3
mov
push
inc
xor
daa
movs
sti
pop
lock
fcmovb
adc
xor
cs
xchg
cmovno
inc
inc
push
adc
movs
nop
scas
pop
add
sub
out
xchg
mov
inc
inc
out
(bad)
in
cwde
mov
and
pop
call
push
xchg
mov
arpl
hlt
loopne
ins
mov
adc
fisub
movs
rol
inc
dec
mov
adc
outs
int
je
jne
pop
mov
dec
push
scas
ficomp
loopne
mov
or
inc
cs
dec
cmp
out
or
(bad)
pop
ficomp
xor
cdq
cmp
mov
add
rcr
mov
(bad)
repz
or
imul
in
test
lea
mov
mov
ss
sub
push
and
add
test
mov
add
lds
sub
sbb
hlt
(bad)
pusha
lea
xor
pop
out
mov
pop
jg
cmps
arpl
scas
mov
push
or
xor
push
test
jbe
cmp
and
mov
jno
or
test
or
mov
out
in
push
add
jmp
sub
mov
sar
and
push
dec
mov
mov
add
hlt
loope
cmp
popf
mov
sub
lods
lods
xchg
pop
pop
shr
push
push
cmp
jbe
mov
icebp
std
loope
inc
sub
cmp
daa
cld
rcr
push
imul
fadd
inc
xor
fisttp
mov
retf
push
data16
mov
mov
push
movs
and
mov
test
add
js
leave
jecxz
std
(bad)
mov
xchg
in
mov
push
mov
fdivrp
push
sbb
mov
cmps
lods
enter
adc
rcl
fcmovnbe
cmc
add
(bad)
(bad)
popa
shl
stos
mov
mov
(bad)
jmp
or
mov
ss
popa
add
iret
adc
mov
lea
cmp
retf
pushf
nop
fisubr
inc
xchg
fnstsw
mov
add
xor
mov
push
pop
xchg
cmp
movs
arpl
mov
sub
xchg
clc
imul
sahf
xchg
fwait
popf
out
inc
jmp
mov
cmp
jmp
xchg
imul
lods
aam
mov
cmp
xchg
fidiv
mov
int
shl
and
call
jle
xor
jp
inc
push
jecxz
arpl
adc
cmp
xchg
or
mov
dec
stc
mov
jg
jecxz
sbb
add
sbb
sub
mov
push
inc
sbb
std
or
(bad)
add
inc
adc
jmp
cmc
dec
(bad)
nop
mov
adc
xchg
cmp
(bad)
cmp
sbb
js
adc
xor
sub
inc
sub
xlat
dec
sub
loopne
pop
into
lahf
and
(bad)
jge
sbb
sub
add
pop
mov
aad
and
xchg
xor
repz
xor
mov
or
mov
jo
xchg
movs
frstor
fsub
pop
mulps
call
pop
addr16
lahf
push
popf
test
or
and
cmp
fstp
scas
jbe
aam
jge
test
data16
inc
dec
sub
inc
shl
mov
out
push
cdq
and
stos
sbb
sbb
adc
mov
test
push
jg
push
hlt
jns
imul
sub
cmp
jg
fnstenv
loop
aad
imul
fs
push
cli
xchg
cmp
ds
in
in
sub
or
or
and
mov
xchg
mov
mov
sub
jl
and
jo
cdq
adc
pop
jmp
ficom
test
cwde
pop
add
(bad)
inc
test
xor
jmp
dec
pop
(bad)
pop
(bad)
movs
out
cmp
jmp
add
sbb
ins
ins
cmp
jmp
je
fmul
or
and
mov
mov
test
pushf
inc
cdq
mov
jne
add
int3
xchg
aas
outs
jo
test
xor
shl
mov
cmp
outs
jne
or
sbb
sub
mov
inc
or
jmp
mov
pushf
dec
pop
icebp
and
push
push
push
xor
cmp
(bad)
inc
ja
cmovbe
inc
lea
aad
dec
mov
and
pop
xchg
(bad)
test
outs
mov
in
(bad)
pop
stc
xchg
popa
fwait
jp
add
aaa
cmp
imul
or
jbe
add
fdivrp
xchg
pushf
cmp
inc
leave
dec
repnz
push
adc
and
retf
adc
sub
xchg
push
and
imul
sub
or
sti
repz
xchg
ret
cmp
pop
lock
mov
push
in
sub
lods
(bad)
(bad)
cmp
inc
call
in
int
fdiv
jecxz
mov
fisttp
stos
in
fs
call
movs
sub
popf
and
imul
nop
xchg
or
outs
inc
dec
out
lods
mov
cmp
mov
mov
loop
xor
gs
ss
mov
push
call
adc
cmp
into
push
outs
xchg
sbb
out
lods
xchg
sub
ret
cmc
adc
mov
sar
retf
xlat
hlt
dec
sub
into
stos
sahf
xor
loop
or
xchg
adc
adc
xor
hlt
je
fsubrp
pop
xchg
mov
xchg
cmp
lds
outs
sub
sub
loope
js
add
in
adc
push
pop
jns
xlat
mov
inc
jmp
leave
js
int3
mov
xlat
pop
(bad)
jo
mov
in
fldenv
dec
xchg
mov
mov
push
retf
mov
das
xor
pop
push
inc
xchg
ins
(bad)
xor
mov
es
push
mov
(bad)
addr16
das
aam
ss
or
icebp
jg
ja
fst
mov
popa
xchg
xor
jnp
aaa
lods
cmps
push
test
xchg
mov
test
test
jns
cmp
or
push
imul
add
in
add
add
sbb
xor
mov
pop
std
pushf
mov
xchg
or
sub
mov
in
xor
out
mov
mov
jmp
xchg
push
sbb
jno
sar
dec
inc
ss
and
addr16
stos
add
inc
rol
ds
or
dec
hlt
inc
loopne
addr16
out
(bad)
bndldx
xlat
xchg
mov
(bad)
push
inc
pop
mov
mov
out
imul
(bad)
enter
push
into
(bad)
xchg
xchg
xchg
mov
aas
sbb
mov
add
pusha
push
pop
xchg
idiv
cdq
adc
mov
es
dec
loope
outs
pusha
pop
ds
or
jb
adc
fs
mov
sub
lods
cs
leave
clc
(bad)
call
mov
loop
xor
lods
adc
cmp
cli
repnz
movs
enter
imul
pop
add
inc
neg
or
(bad)
pop
aad
arpl
sub
mov
fiadd
sbb
dec
add
mov
or
movs
mov
cmp
adc
cli
adc
mov
int3
cdq
sbb
push
cmp
lods
in
xlat
cs
dec
add
in
(bad)
mov
adc
rcr
and
fwait
jmp
retf
sti
jo
inc
retf
mov
fild
fldenv
movs
cmps
pop
and
inc
push
int3
mov
retf
jmp
and
mov
(bad)
ss
shl
cld
push
jmp
add
inc
sti
hlt
dec
bound
pop
xlat
xlat
sbb
iret
mov
cmc
pop
add
dec
mov
(bad)
xchg
cmp
jbe
push
lods
pop
je
dec
push
pop
cmp
retf
int3
inc
push
sbb
iret
fnstsw
iret
mov
cmp
iret
xor
jmp
cs
or
mov
fs
mov
jmp
dec
push
inc
adc
aam
dec
mov
(bad)
test
cld
pushf
mov
xchg
ret
and
adc
jo
add
ds
pop
fild
mov
(bad)
cs
adc
lock
push
xchg
push
jmp
pusha
cmp
sub
(bad)
das
xlat
ins
sbb
mov
push
xor
js
and
add
js
nop
or
in
popf
xchg
std
icebp
(bad)
or
and
jns
pop
leave
ror
cmp
jo
call
in
idiv
cmp
mov
cmp
add
dec
mov
(bad)
call
ret
mov
jnp
mov
fsubr
sbb
lods
stos
sti
jbe
adc
cmp
int
cld
sub
es
and
adc
cmp
mov
cli
add
fadd
cmp
dec
aaa
rol
sahf
sbb
stos
fcom
lahf
sti
and
es
dec
movs
sbb
or
and
int
inc
mov
fucom
(bad)
sbb
pop
fbld
ret
fidiv
call
mov
push
or
mov
pop
repz
enter
(bad)
ret
pop
popf
arpl
mov
pop
mov
fistp
push
or
xchg
lods
loopne
rcl
xchg
scas
cli
loope
add
ins
test
xchg
cdq
xchg
adc
mov
retf
repz
jns
jne
jmp
pop
loope
sub
dec
mov
pop
jle
inc
popf
mov
inc
xlat
mov
sbb
jle
fldl2e
je
mov
mov
push
clc
out
dec
add
mov
in
ja
jl
dec
xchg
(bad)
das
cmp
test
push
fwait
mov
int
mov
ror
jmp
inc
ins
xor
pusha
and
mov
enter
les
fbld
cs
xchg
adc
inc
sysret
les
jno
cmp
movs
cmp
push
cwde
es
mov
adc
scas
ins
add
lea
pop
mov
in
jbe
adc
mov
sub
jae
lods
lock
(bad)
call
cmp
ja
sbb
mov
ret
mov
dec
in
ins
jb
inc
add
popa
mov
sbb
xchg
popa
lahf
xchg
ds
add
or
add
cwde
leave
jo
into
cmp
mov
mov
ins
stos
shl
inc
or
hlt
jg
jmp
fistp
mov
ss
test
std
in
xchg
sub
jne
mov
xor
(bad)
jbe
xor
or
test
pop
pop
cmp
inc
cmc
not
and
repz
jnp
idiv
test
mov
imul
icebp
hlt
pop
pop
push
cmp
cmps
das
mov
xchg
mov
stos
out
test
pop
in
jp
div
imul
cli
pushf
add
push
cmp
stos
(bad)
mov
pop
lods
mov
jae
add
rcl
ja
call
jle
cmp
jge
test
lock
icebp
and
aam
(bad)
jmp
jnp
xor
xor
and
dec
mov
mov
shl
jb
dec
sbb
and
ins
(bad)
adc
add
add
mov
rcr
inc
stos
retf
mov
jmp
call
xchg
xchg
pop
out
js
fmul
lods
mov
dec
push
add
mov
(bad)
xor
xchg
es
pop
push
or
mov
mov
jbe
adc
mov
sbb
hlt
(bad)
je
fisubr
inc
test
shr
xchg
and
sbb
icebp
nop
or
jg
and
mov
mov
movs
gs
mov
dec
cmp
outs
sbb
int
ds
dec
or
bound
mov
xor
pop
inc
or
fwait
(bad)
push
pop
data16
call
out
xchg
stc
jmp
fcomp
add
lock
sti
xchg
aam
jmp
into
pop
xchg
gs
add
aaa
frstor
xor
inc
cmp
cdq
mov
pop
push
jmp
je
aaa
push
jp
imul
call
pop
inc
sub
xlat
sbb
js
pop
fisttp
imul
jecxz
push
fdiv
out
ffreep
fistp
mov
dec
pop
jmp
mov
(bad)
(bad)
mov
dec
push
pop
jge
in
fdiv
or
pop
and
dec
dec
dec
invd
stos
push
mov
jo
ins
add
pop
mov
pop
mov
or
ror
imul
idiv
fsub
mov
(bad)
jo
dec
push
fcomp
add
jp
popa
xor
sti
iret
xor
idiv
sbb
ss
and
lds
push
push
lahf
sub
and
pushf
mov
iret
cld
mov
test
add
xchg
icebp
jo
(bad)
xor
pop
push
jge
nop
mov
test
inc
and
lds
retf
mov
cld
pop
push
or
arpl
pop
push
inc
jnp
and
dec
lea
add
push
sbb
pop
add
xchg
rcr
pop
cmp
cmc
sub
pop
adc
movs
pop
mov
scas
je
sbb
enter
fisttp
pop
out
outs
adc
push
fadd
outs
jge
retf
or
loopne
outs
and
jmp
xchg
and
mov
mov
xchg
sar
dec
(bad)
imul
cmp
test
addr16
fnsave
jno
bsf
pop
inc
jp
sub
sub
(bad)
retf
test
(bad)
shl
and
mov
rol
aaa
mov
ret
aam
iret
sbb
stc
lea
loopne
lods
mov
pop
scas
add
fsub
jnp
cwde
js
ret
lds
push
in
and
cmp
into
aas
nop
mov
lock
sti
mov
shl
cmp
and
sub
push
xchg
in
dec
(bad)
std
push
fprem
sbb
int
in
jae
cmp
les
cli
sbb
lahf
mov
pop
mov
clc
sbb
pop
and
adc
push
or
ds
or
sahf
aaa
cdq
or
pusha
aam
mov
and
inc
mov
cmp
pop
int3
fs
out
out
jno
or
xchg
inc
dec
xchg
mov
movs
sbb
cs
dec
jb
lahf
ja
outs
les
jg
mov
xchg
out
stos
pop
aad
(bad)
push
in
xor
js
or
test
sbb
cwde
rol
cmps
dec
push
fcom
sub
stos
fwait
mov
popa
dec
push
loop
adc
mov
addr16
aas
sub
imul
mov
cmp
cld
mov
lock
fcomp
sbb
inc
sub
adc
sbb
sbb
in
shl
outs
sbb
xor
xor
fadd
mov
mov
(bad)
mov
aam
dec
jecxz
cmp
cdq
sub
jecxz
jl
and
jb
test
int3
push
push
pop
fist
mov
cmp
je
inc
xchg
inc
test
mov
mov
jno
adc
sub
(bad)
push
dec
ror
inc
or
cmp
jb
xchg
inc
call
xchg
into
stos
xchg
dec
push
push
sbb
add
or
not
shl
push
mov
out
jmp
pop
scas
pusha
in
fidiv
enter
in
into
mov
jecxz
pop
(bad)
scas
xor
adc
jb
jge
and
ficomp
jmp
pop
sbb
or
rcl
pop
lods
loope
ja
inc
enter
shr
arpl
out
outs
sub
adc
cmps
bound
std
and
std
pop
xor
sar
mov
test
fs
ret
or
loopne
inc
pop
sbb
xchg
or
retf
and
pop
idiv
loope
push
ror
dec
mov
out
push
jnp
int3
mov
jge
ins
rol
sbb
adc
retf
clc
xor
into
repnz
es
imul
pop
pop
xor
xor
loope
and
jne
xchg
inc
loopne
push
jmp
push
(bad)
ss
int
rcl
leave
clc
xchg
jmp
cwde
push
mov
mov
mov
js
popf
hlt
push
add
das
dec
stc
and
pusha
cli
(bad)
dec
jns
inc
(bad)
adc
mov
lds
mov
push
pop
ins
mov
fidivr
jne
imul
ret
and
icebp
jge
jl
aaa
sbb
jp
leave
push
push
sbb
popf
jl
aaa
sbb
je
xor
xchg
mov
les
pop
cmp
int3
mov
shr
mov
fst
or
rol
imul
sbb
(bad)
out
shl
cmp
add
sub
or
xor
fldenv
into
add
(bad)
movs
mov
jo
sti
cld
loopne
repz
xor
or
mov
fidiv
inc
ja
jmp
ds
sahf
cmp
mov
enter
mov
fbstp
sub
ins
inc
dec
jno
loopne
pop
cmps
mov
retf
cmp
imul
push
shl
in
xchg
pavgw
sub
data16
mov
cdq
je
fwait
lock
cmp
inc
xlat
sbb
mov
int3
inc
inc
or
inc
mov
repz
movq
dec
inc
test
xchg
xor
pop
or
aas
dec
loopne
movs
jns
out
test
call
retf
lea
imul
sub
mov
std
mov
ret
mov
fs
inc
fidivr
sub
stc
mov
outs
int3
fidivr
pop
sub
cmc
mov
fist
mov
mov
inc
movs
jno
add
mov
scas
lahf
dec
sub
jbe
cmc
fisttp
jno
adc
popf
pop
ja
in
mov
pop
xchg
scas
cmp
jne
sub
test
cli
sbb
or
jmp
or
gs
xor
or
pop
call
mov
rcr
cmp
sub
lahf
push
pushf
inc
inc
loope
fld
xor
hlt
repnz
cmp
push
push
xlat
call
cmps
lds
or
and
adc
cdq
sbb
shl
jg
loopne
xchg
mov
adc
push
pop
scas
adc
dec
bound
xor
lods
push
in
mov
test
push
mov
(bad)
xchg
adc
cld
sub
gs
push
(bad)
sub
out
jne
jo
pusha
sub
push
pop
sbb
add
gs
xor
adc
test
arpl
in
arpl
mov
dec
jb
mov
mov
xlat
scas
sbb
add
js
mov
mov
and
mov
dec
push
push
sbb
shl
in
cwde
adc
inc
mov
test
aam
dec
pop
dec
bound
or
es
jl
in
xchg
cmp
jno
add
sbb
clc
jne
js
mov
mov
ss
and
mov
pop
mov
loopne
xlat
push
pop
mov
cmp
retf
scas
push
loop
mov
mov
test
mov
mov
icebp
pop
arpl
test
dec
repz
sbb
sbb
xor
std
cmp
push
call
cmp
inc
psrad
inc
and
add
ret
push
lods
push
(bad)
fs
out
jne
pushf
xchg
imul
into
mov
dec
pop
xchg
int3
sbb
adc
clc
mov
loop
xor
sub
dec
dec
mov
and
sbb
inc
out
sbb
sar
shl
xchg
pushf
pusha
lods
je
loop
sub
int
dec
xchg
loopne
sar
xchg
(bad)
arpl
cld
leave
in
sbb
inc
into
inc
inc
inc
sub
imul
lods
test
mul
jmp
sti
(bad)
and
inc
movs
jecxz
or
or
xchg
jbe
scas
lea
nop
fdivr
sbb
(bad)
push
les
adc
adc
loope
ja
arpl
add
push
ins
ja
ja
ret
xchg
les
mov
leave
test
je
shr
mov
push
dec
xacquire
or
test
mov
add
fcom
pop
adc
daa
into
dec
and
outs
xor
popa
or
add
jg
jno
call
rol
jns
pusha
test
or
jmp
mov
and
jmp
cdq
mov
ret
(bad)
pop
xor
cdq
jmp
xor
cwde
sahf
push
pop
data16
fcmovb
ins
mov
div
xchg
sub
js
cmp
fdiv
test
ja
int
or
dec
test
inc
or
xor
xchg
(bad)
dec
leave
cs
lods
jb
fmul
lds
cmp
je
test
mov
sar
dec
(bad)
jg
cli
rol
(bad)
aaa
pushf
cli
cmps
out
inc
lahf
push
sbb
inc
mov
mov
(bad)
adc
icebp
ret
or
ds
cs
pop
mov
shr
fnstenv
enter
xchg
jmp
aas
loope
int
outs
inc
ds
inc
shl
out
pushf
or
hlt
jg
icebp
mov
add
or
inc
aaa
inc
xchg
and
popf
inc
outs
add
pusha
mov
pop
add
call
scas
mov
xlat
data16
in
push
ja
cs
fxch
jg
mov
xor
mov
xor
jp
add
xor
imul
ret
add
sbb
and
stc
mov
enter
mov
mov
cmp
outs
out
aad
(bad)
scas
jp
jnp
adc
sub
mov
sbb
adc
daa
mov
stos
test
shr
mov
imul
sar
stc
mov
jp
ret
outs
sbb
out
add
mov
(bad)
cli
outs
xchg
jbe
jmp
mov
xor
cmp
or
ins
imul
hlt
inc
or
pop
xchg
test
cs
push
gs
xchg
into
fnstcw
mov
aas
cmp
dec
pop
pushf
cmp
mov
jp
mov
sub
xchg
(bad)
mov
call
jns
lods
jp
mov
vpmacssdd
cmp
mov
outs
xor
sub
xor
xor
cmc
dec
push
xchg
out
fild
push
mov
ret
mov
and
adc
jg
inc
arpl
pop
xor
arpl
cli
iret
adc
fcom
push
jp
inc
sbb
jmp
int3
std
cmp
scas
out
test
cmp
out
in
and
inc
jmp
mov
leave
out
imul
outs
loopne
inc
fmul
dec
dec
add
lahf
push
jp
xchg
adc
jmp
jmp
lods
sbb
mov
adc
sub
mov
jns
mov
outs
(bad)
jl
pop
mov
sbb
or
xchg
and
pop
jmp
das
ret
arpl
retf
arpl
jae
jl
and
sub
jl
out
fmul
retf
inc
or
rcl
push
popf
test
mov
jecxz
jb
xchg
dec
jmp
and
gs
mov
pop
jg
xchg
jb
and
jmp
jp
add
inc
inc
das
stos
ret
push
push
test
inc
jae
cdq
loopne
and
ret
imul
sub
outs
addr16
xor
stos
inc
jae
xchg
add
xor
add
inc
icebp
imul
inc
and
dec
movs
inc
arpl
js
loope
test
mov
and
jle
xor
ds
cdq
push
sar
loope
add
sub
or
test
and
in
test
popa
cmp
mov
xor
repz
enter
inc
mov
cmp
xor
rcl
mov
arpl
and
sar
ja
jle
dec
sub
mov
mov
jb
loopne
jmp
stc
dec
add
add
sbb
les
add
lock
inc
mov
mov
mov
or
scas
jl
jno
retf
and
mov
arpl
mov
cwde
cmc
scas
dec
das
int
mov
popa
inc
sbb
in
out
pop
or
(bad)
ss
ins
cmps
xchg
dec
sbb
pop
aaa
push
ins
shl
(bad)
std
fcom
(bad)
pop
push
or
fild
aad
sbb
dec
mov
mov
lock
inc
ret
js
mov
jbe
in
popa
or
lds
jp
pop
ins
jb
jmp
xchg
mov
call
shr
mov
fstp
sub
xchg
stos
loope
call
dec
ds
or
sbb
push
add
sbb
stc
ret
inc
adc
jl
cmps
mov
sub
dec
stos
inc
xchg
mov
add
xchg
add
adc
or
push
jae
pop
sub
mov
and
push
(bad)
jle
jl
sub
ins
mov
mov
and
cmp
(bad)
pop
push
inc
cmp
mov
mov
inc
and
cwde
and
lods
dec
cmp
stos
xor
nop
ret
shr
pusha
jmp
in
popa
jp
ins
xchg
xor
(bad)
repnz
push
inc
and
nop
sbb
sbb
adc
mov
jmp
ret
lods
jbe
add
sar
sbb
(bad)
icebp
add
stos
inc
mov
dec
stos
xchg
loopne
and
inc
mov
call
shl
lock
push
sbb
and
and
pop
mov
ficomp
mov
jne
sbb
mov
fcomp
dec
ins
fimul
leave
fiadd
lea
sahf
test
xor
out
and
pop
xchg
call
lea
mov
retf
mov
jmp
retf
lods
mov
rcl
sbb
scas
lds
xchg
sahf
pop
dec
push
leave
or
and
sbb
pop
dec
in
mov
pop
mov
add
add
cmp
mov
aaa
mov
inc
rcr
mov
(bad)
ja
ds
call
sar
sub
mov
stc
or
inc
or
add
inc
rcr
dec
mov
ss
inc
dec
adc
pop
clc
push
or
pop
sahf
retf
or
daa
lods
test
xor
retf
pop
mov
mov
lds
inc
xchg
scas
nop
bound
add
loope
jnp
mov
mov
es
fistp
mov
pop
div
fnsave
je
pop
push
adc
xchg
ins
push
(bad)
popf
add
scas
xor
popa
sub
or
dec
jbe
stos
enter
adc
or
stos
(bad)
or
sub
jl
arpl
test
push
sub
mov
add
push
dec
xchg
das
pop
bound
dec
pop
into
mov
mov
loopne
fisttp
call
loop
pushf
jmp
jmp
(bad)
clc
aad
aam
mov
popa
popa
jb
stos
pop
fisub
inc
mov
sub
jmp
shr
js
mov
fld
sbb
and
pusha
into
gs
mov
jno
sbb
dec
and
retf
inc
mov
in
mov
scas
stos
xchg
mov
jle
adc
movs
inc
dec
aad
fdivr
xchg
es
sbb
jg
cwde
inc
dec
call
lock
sub
push
daa
xchg
and
lock
push
arpl
mov
movs
loope
pop
mov
loope
jmp
addr16
arpl
sub
sbb
mov
pop
xor
mov
xchg
sub
pop
inc
cmp
xor
lahf
loopne
xor
mov
(bad)
loop
gs
cmp
(bad)
fdiv
push
mov
(bad)
inc
pop
test
push
mov
sub
inc
jne
leave
push
addr16
mov
arpl
in
scas
jns
lea
adc
movs
inc
push
rol
mov
fnstsw
mov
ds
popf
pop
mov
(bad)
mov
jmp
ins
in
ret
add
dec
mov
or
and
sti
xchg
xchg
inc
lock
adc
stc
inc
lods
or
(bad)
mov
xchg
xchg
call
mov
mov
gs
hlt
ss
jb
(bad)
mov
sub
loope
repz
leave
call
pop
es
jbe
pop
jo
cmc
rol
mov
inc
push
mov
mov
mov
lea
into
aaa
xchg
mov
jbe
ins
sub
and
inc
push
inc
mov
cmp
ror
scas
stc
dec
jno
jecxz
(bad)
jmp
xor
push
jne
scas
pop
mov
xor
inc
jno
mov
jge
loop
dec
ret
gs
out
test
sub
mov
dec
iret
loopne
inc
lds
inc
(bad)
or
fdivr
or
jns
push
je
test
(bad)
xchg
dec
bound
dec
fisub
in
jmp
pop
push
popf
sar
lahf
aas
imul
pop
(bad)
rcr
movs
out
lods
cld
pop
pop
jp
out
mov
cli
mov
push
xor
jne
xor
xchg
jmp
inc
mov
cmps
fsub
mov
(bad)
add
fs
cmp
es
dec
cmp
jb
arpl
mov
call
add
arpl
lods
sbb
inc
sub
dec
stc
mov
(bad)
cmp
scas
in
jnp
mov
push
fbld
sub
fld
(bad)
inc
dec
enter
(bad)
xor
pushf
mov
das
ficomp
addr16
mov
das
leave
xor
pop
retf
fisttp
in
cwde
adc
push
loope
jnp
jno
inc
rol
inc
imul
mov
jb
mov
push
lds
push
retf
jbe
jmp
cli
popa
sbb
cmps
pop
jbe
bound
sbb
adc
sbb
xchg
aad
fdiv
jecxz
jl
inc
cmc
repz
jmp
popa
push
fwait
mov
cmp
imul
cli
xchg
lock
cmp
enter
dec
cmc
sub
out
sbb
or
into
mov
pusha
pop
into
stc
out
add
add
or
clc
xchg
call
or
and
jns
hlt
hlt
test
mov
mov
movs
mov
test
pop
std
dec
sub
pop
add
aas
ret
out
ds
test
dec
sub
(bad)
dec
or
jnp
inc
aam
cli
add
dec
cmp
pop
jns
mov
mov
lds
(bad)
push
cmp
mov
and
push
mov
iret
leave
out
out
retf
ret
sbb
add
nop
retf
scas
dec
jecxz
movs
movs
adc
mov
jne
movs
lods
add
call
(bad)
out
jb
sub
mov
(bad)
cmps
add
sub
pusha
or
push
jbe
sub
les
mov
sbb
jbe
repnz
lods
push
add
mov
dec
xor
pop
xor
sub
ret
aad
aas
add
sbb
ins
std
adc
fsub
call
sub
adc
pop
loop
mov
xor
or
xchg
add
fbstp
push
mov
dec
(bad)
imul
stos
mov
jbe
icebp
cmc
sbb
pop
and
mov
jp
adc
and
stos
xor
xor
mov
addr16
mov
mov
(bad)
lock
push
addr16
int
stos
add
xlat
neg
jmp
loop
adc
and
mov
pop
jne
xchg
cmc
imul
fist
neg
jle
mov
int3
shl
movs
cmp
mov
lahf
ds
aam
dec
imul
cmp
cli
ja
or
aam
es
jae
fwait
sub
pop
aam
jge
stos
cmp
lds
mov
loope
(bad)
in
sub
xor
mov
jl
imul
push
xor
jmp
sub
aas
movs
outs
out
adc
add
stos
xchg
inc
lods
sub
push
adc
dec
jne
sbb
or
arpl
adc
sub
pop
test
or
and
inc
aaa
movs
xchg
nop
test
cld
cmps
pop
adc
ins
jns
stos
and
mov
int
mov
test
sbb
mov
stc
aas
mov
and
or
popf
bound
pop
dec
cmp
jecxz
push
pop
loope
dec
mov
or
cmp
addr16
and
retfw
or
(bad)
cmp
inc
inc
movs
inc
inc
cmp
cmps
xchg
cmps
test
sub
sbb
adc
and
xor
inc
lahf
cwde
(bad)
stos
das
xor
or
pusha
xchg
call
mov
bnd
pop
fcmovne
jb
mov
jmp
or
ins
sbb
dec
sub
add
mov
lds
add
mov
push
in
sbb
pop
mov
clc
or
cmp
(bad)
cld
cmps
fmul
mov
clc
mov
jnp
pop
test
outs
xor
leave
and
call
jae
(bad)
out
push
inc
mov
mov
fcomi
frstor
sar
mov
xor
inc
addr16
pop
rol
and
and
lahf
loopne
push
dec
sub
push
lsl
mov
inc
or
test
ins
adc
fstp
rep
lock
das
cmps
xor
(bad)
sub
inc
popf
call
lahf
pusha
mov
cmps
popf
test
cs
xlat
mov
(bad)
inc
adc
mov
bound
shl
xlat
pop
lods
mov
add
leave
cs
mul
idiv
leave
fsub
hlt
xor
lahf
ficom
mov
ins
fdivrp
push
loopne
out
(bad)
icebp
jae
loop
mov
loopne
not
stos
test
mov
mov
pop
and
jg
cmp
rcl
mov
sub
push
sub
adc
js
xchg
mov
jo
(bad)
aam
jo
pop
ret
add
xchg
ror
retf
xor
ds
out
call
retf
inc
pop
shl
gs
jmp
test
lods
add
and
rcr
(bad)
icebp
nop
pop
clc
cmp
(bad)
loope
dec
mov
xor
(bad)
push
aam
push
pop
jb
pop
stc
push
cmp
mov
pushf
test
ret
add
retf
scas
cmps
xchg
xchg
cdq
stos
adc
test
mov
mov
push
sbb
adc
or
add
and
sub
movs
lods
inc
or
adc
lea
psubusw
dec
ins
and
in
dec
dec
retf
jmp
call
fidivr
xrelease
sti
xchg
sbb
in
mov
inc
jle
push
sub
push
push
mov
imul
(bad)
mov
mov
jg
sub
push
pop
loop
push
sahf
xchg
or
arpl
jns
cld
mov
jp
inc
xor
mov
xchg
leave
fwait
je
out
cmp
je
push
sbb
dec
fdiv
out
push
and
and
dec
adc
pushf
scas
pop
pop
dec
test
rol
scas
std
bound
ins
push
jl
(bad)
mov
mov
(bad)
rol
sub
sbb
(bad)
out
vmread
sbb
mov
in
xchg
(bad)
retf
bnd
xchg
mov
scas
jecxz
imul
pop
xlat
mov
imul
mov
test
sbb
dec
jae
inc
cmp
or
adc
(bad)
(bad)
jmp
push
inc
stos
lahf
xchg
outs
mov
fiadd
dec
lahf
xchg
add
fucomi
ins
xor
cli
xchg
outs
into
pop
scas
aam
call
mov
push
xor
adc
xchg
in
add
and
sar
push
inc
push
push
jle
imul
clc
and
xchg
sbb
push
call
out
jmp
ins
adc
and
mov
sbb
sub
pop
aaa
pop
and
xchg
in
jnp
movs
mov
cmps
cmps
add
daa
outs
ja
jge
sahf
fwait
sbb
fcom
shl
sbb
xor
aaa
(bad)
mov
jbe
adc
lahf
pop
xor
push
retf
push
cdq
or
mov
cdq
add
fidivr
or
stos
pusha
mul
or
cmpxchg
into
and
fneni(8087
dec
push
test
mov
cwde
je
pop
dec
mov
or
fcmovu
into
or
inc
stos
or
sahf
retf
nop
movs
nop
fidiv
jmp
pusha
inc
inc
jl
push
fnstsw
jp
ss
push
mov
ins
rcl
jmp
in
cmp
icebp
add
mov
aas
test
mov
jne
adc
pop
adc
in
pop
movs
and
sub
mov
cmp
fild
(bad)
cmp
stos
or
inc
cmp
dec
mov
stos
cmp
cmp
mov
call
stc
test
push
mov
push
or
push
xchg
pop
sbb
xor
and
xlat
lahf
sar
push
pop
cmp
and
xor
add
mov
jo
adc
ins
clc
jae
pusha
inc
bound
cmp
cmp
mov
ja
call
stos
aas
sti
add
sahf
cld
je
mov
call
jno
push
stc
repnz
pop
jns
nop
jge
ds
into
or
mov
sub
ss
inc
push
pop
pop
sub
cmp
shr
call
push
push
or
outs
push
pop
cld
jle
enter
jl
lods
sub
out
cld
outs
in
imul
(bad)
out
jle
aas
push
pop
in
sbb
ja
mov
cli
xor
je
mov
out
add
add
inc
xchg
lds
mov
pop
pushf
test
xor
xchg
bnd
div
lock
fstp
nop
fisub
bound
sub
xchg
xchg
adc
nop
imul
pop
popf
popf
and
inc
sub
pop
sub
(bad)
std
retf
xor
mov
pop
shr
sbb
xchg
mov
jl
adc
push
sbb
dec
popf
lahf
fwait
sbb
mov
daa
pusha
jle
pop
cmp
in
popf
je
mov
addr16
dec
xor
add
lds
and
cli
add
sub
mov
and
lods
mov
or
xchg
loope
addr16
cld
pusha
push
aad
jp
imul
mov
inc
xchg
je
ror
aam
test
jno
jmp
push
mov
nop
mov
or
mov
cld
sub
mov
or
xor
aas
add
aam
hlt
mov
stos
pop
retf
dec
fild
jmp
pusha
or
sub
test
fcomp
adc
imul
xchg
int3
aas
jne
pop
adc
jge
shl
(bad)
ret
jo
add
(bad)
sub
jns
int
neg
stc
imul
add
jne
or
sub
or
sbb
movs
aas
add
movs
xor
xchg
lea
into
sbb
std
loop
retf
fsub
xchg
mov
stc
test
push
sti
jle
or
std
push
sti
push
mov
scas
mov
je
test
dec
push
jnp
outs
in
add
sub
push
je
cld
ds
push
nop
and
aad
jbe
push
addr16
push
enter
mov
sbb
adc
ins
aaa
cdq
push
sbb
out
inc
test
mov
mov
jnp
xlat
mov
or
pop
adc
fsubr
cmp
sbb
sub
jns
cmp
js
push
pop
jmp
ins
mov
fisub
push
enter
push
mov
cmp
mov
scas
lds
les
jmp
xlat
xor
add
xlat
es
adc
movs
leave
pop
enter
ins
(bad)
xlat
rcl
adc
and
lods
jl
imul
mov
int
test
sub
scas
and
pop
cmp
fwait
and
(bad)
lock
push
(bad)
fwait
sub
push
loope
xchg
mov
push
xchg
fidivr
test
in
gs
and
ja
(bad)
push
mov
xchg
sub
inc
xchg
loop
fwait
sub
ja
aaa
dec
test
stos
jns
cwde
xor
clc
or
pop
aas
pop
enter
or
push
jmp
add
jnp
or
leave
jbe
add
pop
add
mov
pop
xchg
call
sbb
repz
dec
iret
aad
add
out
add
pop
in
retf
popf
mov
mov
mov
out
dec
mov
push
mov
cdq
sub
jp
pop
aaa
leave
mov
mov
mov
xor
jge
in
cmps
jmp
or
and
(bad)
jge
popf
bound
add
(bad)
cmc
aas
outs
push
sbb
or
es
xor
push
inc
(bad)
pop
inc
dec
cmc
mov
out
cmp
call
cdq
jae
add
inc
movs
mov
(bad)
test
cli
mov
test
fsub
xor
inc
(bad)
ficomp
ins
push
pop
sbb
dec
inc
or
sbb
hlt
not
(bad)
js
pop
mov
ds
mov
push
sbb
inc
or
dec
or
or
cwde
and
add
push
sbb
fwait
jmp
pop
out
ss
dec
ror
adc
sahf
popf
stos
jns
(bad)
fwait
cwde
gs
call
jne
fs
jne
repz
in
pop
dec
mov
test
inc
sti
fistp
cli
jge
sbb
enter
or
push
jb
inc
arpl
sar
(bad)
repz
sub
test
cmp
mov
adc
sub
into
test
test
ds
cmp
ret
mov
mov
jns
mov
std
mov
rcr
idiv
mov
mov
sub
xchg
sbb
push
out
xor
movs
pushf
pop
icebp
inc
xchg
xchg
ror
mov
push
inc
cmp
xchg
mov
inc
outs
addr16
jp
pop
stc
add
xor
mov
or
cmps
pop
push
sti
xor
jp
dec
or
mov
mov
pop
add
mov
pop
inc
sub
fsub
scas
inc
jg
sub
push
loope
sbb
ficomp
xchg
hlt
mul
adc
cmc
fsubp
xchg
adc
xchg
xor
inc
pop
pop
cmps
mov
dec
rcr
dec
adc
fcomi
aad
iret
xchg
int
adc
push
bound
adc
sar
or
ins
mov
(bad)
sbb
mov
imul
in
mov
data16
movs
mov
dec
mov
adc
mov
push
repz
cmp
mov
mov
add
jbe
add
inc
pop
ds
mov
(bad)
enter
imul
mov
sub
fcom
clc
lock
int3
movs
jnp
movs
mov
rcl
push
inc
add
cmp
lods
inc
(bad)
outs
mov
ja
loope
loope
cmc
std
mov
xchg
mov
xchg
loope
out
mov
add
xchg
add
leave
or
sbb
ror
lea
pop
retf
jnp
xor
jae
sahf
push
xchg
mov
dec
aam
xor
xchg
xor
out
test
fistp
push
mov
aad
lahf
cmp
test
daa
cwde
js
xor
xchg
pop
or
repnz
in
sbb
out
mov
dec
(bad)
cmp
mov
ja
sub
mov
test
mov
into
stos
rcl
adc
sti
and
imul
push
pop
mov
dec
lock
adc
cmps
add
mov
cs
fsubr
cmc
or
(bad)
lahf
sahf
push
jecxz
ror
arpl
mov
sub
sbb
dec
outs
(bad)
lea
pop
inc
sti
movs
add
xchg
out
mov
inc
ret
stos
addr16
inc
fst
stos
aaa
out
inc
test
pop
ins
fdivr
push
push
push
scas
repnz
xlat
arpl
mov
sbb
rcr
lahf
dec
je
jnp
rcl
push
cli
ja
push
adc
repnz
movs
sbb
div
test
mov
or
shl
adc
dec
adc
mov
bound
pusha
or
(bad)
idiv
jno
or
push
add
loop
test
adc
sub
jns
sub
out
in
push
mov
or
ret
push
hlt
add
mov
inc
xor
aad
mov
dec
adc
shr
jne
dec
in
js
movs
pop
movs
inc
mov
add
mov
fsubr
outs
cmp
xchg
adc
cmps
das
fcmovnbe
adc
cmp
imul
cmp
call
scas
or
das
(bad)
imul
ret
test
cdq
rcr
out
jecxz
xor
xchg
mov
cli
jp
clc
in
cld
cmp
lds
ret
test
inc
xor
mov
cmp
dec
xchg
cvtps2pd
cdq
cmp
adc
pop
arpl
add
test
retf
sahf
sub
push
in
inc
ins
and
sbb
mov
lods
sbb
in
(bad)
sub
inc
retf
xor
xchg
sahf
mov
jbe
lahf
retf
jp
cli
fldenv
push
mov
xor
(bad)
fild
adc
call
xor
push
dec
and
and
inc
pop
nop
push
aaa
pop
mov
gs
xchg
jle
push
fcomp
ds
xor
sbb
cmp
in
fcom
fisub
pop
xor
sar
(bad)
test
outs
mov
cmp
(bad)
push
mov
popa
aaa
adc
stos
xchg
or
add
bound
sbb
sub
enter
jecxz
and
lods
and
adc
test
fsub
and
dec
xchg
retf
sti
inc
aad
and
xchg
ficom
arpl
pop
xor
mov
clc
add
clc
add
ss
jle
push
jbe
sahf
pop
std
pop
sub
pop
lock
pusha
cli
pushf
push
pop
fldcw
mov
push
push
fcom
mov
pop
iret
sbb
movs
inc
mov
loop
and
xor
fneni(8087
inc
mov
push
add
or
retf
or
adc
cmc
int
xchg
mov
fiadd
rcl
retf
out
sub
mov
adc
lods
shl
pop
in
fwait
mov
jnp
adc
pop
pop
in
adc
repz
push
inc
cmps
int3
repz
in
lods
pop
shr
ret
ror
das
fisttp
jns
or
jnp
fld
sub
xchg
test
xchg
sub
cld
adc
mov
inc
sbb
inc
and
jnp
cmp
push
dec
outs
adc
sbb
stos
lods
movs
scas
or
jae
or
icebp
js
dec
mov
outs
adc
sub
sbb
pusha
cmc
call
mov
jb
out
and
std
adc
test
pop
bound
outs
sbb
ret
dec
sbb
das
in
xchg
and
jge
dec
invlpg
and
jg
fidivr
adc
cmc
or
mov
adc
mul
jge
jge
add
xchg
xchg
cmp
(bad)
sbb
in
jns
(bad)
mov
cmp
pop
add
stos
pop
inc
and
sbb
cmp
(bad)
add
sub
stos
(bad)
dec
or
call
(bad)
xor
pop
xor
xchg
xchg
cmps
pop
mov
jbe
(bad)
mov
aaa
out
(bad)
sub
jmp
xchg
pop
loopne
repnz
ins
xor
cmps
(bad)
in
aad
stc
cmc
ret
popa
add
xchg
jecxz
fwait
mov
mov
mov
aaa
jne
pop
inc
push
pop
shr
xchg
(bad)
cs
ud2
fwait
mov
ins
cld
jp
fsub
data16
pushf
les
into
aaa
and
leave
xchg
int3
(bad)
rcr
ds
cmps
ret
pop
das
add
ins
jb
idiv
push
jmp
cs
mov
push
add
adc
enter
scas
cmps
int
daa
pop
sub
fsubr
outs
inc
out
les
lock
xchg
cld
dec
(bad)
(bad)
fcmovnb
out
mov
add
int
adc
fstp
imul
or
(bad)
sub
sub
sar
out
adc
enter
jl
ins
(bad)
mov
mov
and
(bad)
(bad)
mov
push
xor
test
add
retf
int3
dec
jbe
jg
mov
dec
inc
cmp
and
pop
xor
pop
push
sub
mov
repz
ret
sbb
jne
ret
lock
add
dec
mov
sub
ss
hlt
cmp
adc
mov
or
cmps
in
mov
test
out
add
mov
test
or
int3
jge
clc
dec
push
cmp
adc
out
adc
js
lock
test
mov
xor
in
ins
mov
and
pop
pop
cmp
aam
daa
not
sahf
mov
xor
or
sbb
mov
fidiv
add
add
in
ds
aaa
inc
je
imul
and
lds
fwait
mov
jnp
int3
and
or
sbb
icebp
adc
sbb
sub
jno
out
rcr
rol
inc
mov
jne
or
les
jge
fistp
enter
or
and
xor
test
inc
pop
lods
dec
pop
arpl
popa
cmps
pop
mov
jecxz
inc
fwait
int
cdq
into
cmp
jge
pop
jnp
popaw
sub
sbb
sub
dec
scas
or
aas
mov
inc
int3
adc
mov
arpl
lahf
cmp
out
(bad)
sbb
leave
(bad)
stc
xlat
mov
sbb
jnp
jmp
add
mov
cmp
jne
mov
xor
lods
popf
in
cdq
(bad)
lock
mov
jmp
ret
icebp
add
cmc
rol
jae
das
rol
and
imul
dec
xchg
dec
cwde
jmp
mov
mov
inc
out
mov
cmp
add
bound
mov
lds
add
icebp
mov
pusha
ror
outs
xchg
inc
retf
jge
xchg
sbb
scas
and
push
pop
dec
jmp
gs
fdivr
ds
jae
cdq
xor
xor
ja
mov
sbb
push
inc
rcl
popa
jl
retf
jns
repz
adc
mov
xchg
mov
fsubr
cwde
xchg
and
iret
sti
movs
scas
xor
lods
mov
jecxz
iret
ins
je
mov
js
enter
push
mov
xchg
inc
mov
pop
in
sti
push
xchg
jnp
ror
sti
xchg
xchg
pop
mov
(bad)
dec
fsubp
pop
cwde
and
xchg
int
push
xor
jnp
ret
xchg
lahf
push
adc
xchg
sbb
test
mov
lods
mov
jns
popa
enter
cmps
mov
and
inc
mov
sbb
inc
add
sbb
fidiv
js
xlat
mov
je
inc
cmp
repnz
mov
xchg
(bad)
outs
pusha
adc
(bad)
inc
cmc
imul
push
push
pusha
add
test
jno
out
jno
and
dec
fbstp
mov
jb
int
aaa
ja
push
mul
push
push
inc
jecxz
dec
xor
push
cld
or
mov
add
jae
(bad)
arpl
pusha
jne
out
sbb
pop
cmp
outs
js
outs
sbb
loope
adc
out
int3
fldcw
rol
out
das
dec
(bad)
sti
sub
inc
sbb
dec
(bad)
jmp
sbb
test
sbb
sub
popf
or
xchg
ja
(bad)
sar
or
mov
in
mov
mov
mov
scas
fucomp
cmp
xchg
call
mov
jmp
add
xchg
call
loopne
jbe
push
sub
push
mov
xchg
in
movs
dec
adc
jmp
clc
dec
xchg
mov
or
movs
and
sbb
dec
ins
mov
stos
shl
test
inc
lea
fisubr
dec
lock
in
xchg
out
jns
rcl
mov
clc
xchg
or
jecxz
int
scas
popa
cmp
std
cmps
sbb
ds
sub
das
std
out
cli
push
mov
sbb
cdq
sbb
popa
rcr
loope
cld
jge
cmps
bound
fsub
int3
jb
repnz
ret
movs
push
push
aam
outs
fs
inc
icebp
pop
mov
xchg
ds
add
aaa
push
mov
mov
test
imul
bound
xor
inc
jmp
jp
adc
push
sbb
push
ficomp
popa
pop
adc
cmp
jge
test
sbb
das
les
nop
pop
fsubr
mov
push
out
out
stc
add
outs
mov
push
stos
sub
iret
jo
cmp
sub
or
lods
jge
jecxz
repnz
push
mov
cs
imul
adc
mov
cmp
sub
jno
and
pop
out
and
into
jno
call
inc
sub
inc
xchg
aas
aad
out
mov
ret
or
bnd
das
arpl
and
pop
call
sub
idiv
out
(bad)
lahf
mov
dec
loope
mov
or
(bad)
hlt
adc
dec
lods
jne
xor
cmp
xchg
fdivrp
jmp
cmp
mov
adc
push
push
sub
in
jb
iret
out
fsubr
xor
and
adc
xor
jle
add
aaa
mov
jno
fnstsw
ret
movs
mov
push
jbe
into
xchg
aam
fld
cwde
cld
jl
(bad)
cli
mov
cmp
fmul
mov
sbb
mov
je
test
push
ret
stos
push
or
mov
cdq
push
dec
xor
adc
movs
out
shr
hlt
repnz
mov
and
pusha
in
lods
jmp
out
hlt
stc
sub
push
mov
(bad)
jmp
cld
jns
xchg
adc
je
sub
mov
xor
in
(bad)
ficom
mov
xchg
addr16
ret
sub
or
jb
cwde
jmp
jmp
lock
or
sub
mov
fistp
into
lds
mov
adc
lahf
pop
sbb
in
push
arpl
pop
mov
fdiv
std
lea
mov
xor
inc
push
aam
(bad)
sub
jecxz
push
out
adc
stos
or
cwde
imul
pushf
adc
call
test
call
lock
and
mov
or
bnd
dec
hlt
push
icebp
stc
hlt
enter
or
cs
sbb
cmc
xlat
imul
shl
lahf
sub
and
out
pop
fild
test
fiadd
cli
call
push
mov
inc
daa
arpl
aam
cmp
adc
mov
lds
cdq
lods
clc
mov
popa
push
std
loope
sti
das
sbb
into
je
int3
push
jae
inc
les
nop
adc
aaa
fistp
push
idiv
sti
cmps
std
cmps
jl
xor
bound
dec
fwait
jb
xor
jmp
jb
pusha
cmp
jl
sub
mov
dec
add
xchg
sub
mov
add
or
xchg
adc
ret
nop
xor
cmps
shl
mov
pop
pop
jmp
or
icebp
iret
mov
sub
cmp
fwait
sbb
cmp
retf
pop
cli
iret
push
(bad)
mov
sub
jae
test
xchg
ret
xlat
outs
sahf
jle
dec
rol
xchg
push
je
lds
popa
xor
arpl
xchg
in
dec
sbb
out
movs
add
cmp
dec
les
adc
call
dec
add
imul
dec
xor
aas
push
stos
xor
dec
mov
pop
ret
cmp
shl
iret
les
jo
mov
fidivr
dec
imul
loop
call
int
outs
cmp
shr
out
or
inc
sbb
(bad)
repnz
xlat
mov
test
jbe
shl
sub
movs
fwait
outs
adc
(bad)
cmps
jmp
or
mov
jmp
sbb
cmps
aam
loop
xchg
popf
(bad)
sub
lods
fisttp
mov
gs
push
outs
or
adc
into
pop
in
jl
out
cmp
retf
test
clc
scas
adc
pop
xor
dec
jbe
and
pop
std
pusha
pop
jnp
sbb
xchg
out
sti
mov
call
aad
aas
jbe
cwde
push
xor
xchg
jmp
test
pop
das
(bad)
dec
rcr
xchg
xchg
dec
sub
pop
in
and
mov
loopne
xchg
daa
push
sub
mov
sbb
rol
repnz
xchg
sbb
mov
xchg
xchg
and
mov
rcr
jecxz
imul
xor
push
mov
ficomp
imul
sbb
sbb
fisubr
dec
pop
mov
sub
popf
push
xchg
xchg
or
shl
mov
mov
lds
cmps
in
sbb
mov
pop
mov
fimul
movs
or
stc
push
(bad)
cmp
addr16
inc
adc
jge
or
daa
xchg
xlat
fadd
sub
(bad)
xchg
into
fisttp
pop
push
push
mov
push
repnz
dec
add
es
fiadd
xor
mov
test
push
cmp
push
pop
mov
rcr
call
enter
inc
imul
dec
sbb
aaa
outs
scas
mov
sub
jge
test
and
xrelease
xchg
call
repz
in
hlt
lds
or
loop
into
fimul
pop
push
(bad)
nop
jp
movs
in
mov
fidivr
or
xchg
xor
stos
mov
inc
in
add
xor
cmp
(bad)
and
mov
test
cdq
clc
(bad)
pop
jnp
sar
movs
inc
bound
in
in
push
lods
bound
ja
inc
popf
mov
fwait
pop
mov
and
mov
not
pop
aam
dec
icebp
add
in
and
add
or
or
popa
mov
cs
sub
mov
or
cli
jo
out
arpl
cwde
rcr
das
scas
sahf
push
mov
in
mov
ds
lea
pop
lahf
adc
shr
add
cwde
adc
or
(bad)
cmp
je
jae
pop
aam
push
adc
push
pop
scas
xor
lea
lahf
gs
mov
(bad)
inc
leave
sar
mov
mov
popa
fidiv
cmp
adc
leave
and
pop
add
stos
fstp
mov
sbb
nop
pop
xlat
inc
and
daa
mov
xchg
shl
add
rol
in
dec
adc
call
loop
cmp
test
adc
add
loope
ins
outs
xchg
push
pusha
mov
dec
adc
rol
ficom
fadd
jl
xchg
mov
inc
shl
jg
cdq
sbb
and
fld
or
lods
fdiv
movs
dec
dec
cmp
daa
mov
xchg
push
dec
add
into
sar
shr
out
dec
(bad)
lahf
fild
mov
out
jg
mov
jae
sbb
sbb
cmp
leave
jbe
mov
mov
and
js
in
jecxz
lock
push
jp
adc
cld
add
dec
cmp
mov
nop
cmp
jne
push
ret
imul
push
cs
xchg
in
jne
or
dec
fwait
push
jle
sahf
nop
cld
xor
movs
push
push
lods
das
pop
and
cmp
jp
or
idiv
retf
or
sub
loopne
add
push
and
das
ja
mov
fs
push
mov
ja
mov
inc
pop
fwait
cmps
mov
jle
in
fdiv
and
(bad)
mov
out
xchg
movs
outs
xchg
inc
cld
sbb
mov
or
cmp
xchg
or
jns
jp
enter
loopne
ins
inc
pop
xchg
mov
aas
inc
sbb
fwait
or
std
sub
xor
(bad)
jnp
add
ja
dec
daa
into
aam
fcom
or
lds
mov
mov
xor
adc
adc
inc
leave
shl
pushf
sub
sbb
xchg
pop
mov
aad
adc
mov
and
(bad)
out
fsubr
adc
fdivrp
imul
jmp
fld
dec
and
mov
inc
cmp
adc
xlat
xor
mov
imul
and
inc
xchg
or
stos
cmps
stc
stos
sahf
adc
sub
add
mov
lock
mov
int3
scas
mov
call
repnz
(bad)
mov
fs
fbstp
inc
out
adc
add
ins
add
inc
out
test
mov
adc
aad
dec
sti
jns
imul
fild
into
mov
or
sar
int
call
push
fadd
mov
xor
cmp
pop
add
lods
push
fimul
cdq
cdq
inc
or
shr
sbb
push
mov
mov
ja
les
jb
xor
nop
call
movs
lahf
push
retf
ja
aas
jnp
daa
xchg
movs
sub
into
sbb
enter
mov
inc
std
add
add
(bad)
repz
mov
jle
sbb
out
test
fild
test
sub
leave
adc
dec
movs
sub
mov
sbb
pushf
sub
hlt
pop
mov
aam
add
pop
cwde
or
data16
fild
and
adc
fcomp
fwait
cmps
sub
mov
mov
cmp
enter
add
ins
xor
lahf
std
iret
inc
xlat
push
or
adc
ds
push
pop
cld
mov
add
mov
lock
enter
ins
xchg
inc
rcl
iret
stos
pop
ret
xchg
mov
jmp
and
mov
pop
sub
out
mov
xlat
bound
mov
or
(bad)
pop
mov
jae
sbb
retf
xchg
jnp
mov
scas
push
inc
jmp
lds
xchg
push
adc
call
mov
jg
add
jmp
push
push
(bad)
movs
call
addr16
jnp
mov
mov
mov
lock
dec
pop
sahf
xor
aas
sub
icebp
pop
sub
retf
pop
not
xchg
addr16
xor
push
out
or
push
jl
or
ins
lods
cmps
pop
push
data16
pop
sar
fwait
(bad)
lahf
pop
inc
xor
je
arpl
jmp
push
jg
cmp
jae
mov
jmp
ins
fsub
(bad)
(bad)
sub
xor
rcl
add
sub
popf
dec
adc
and
clc
jmp
addr16
inc
loopne
pop
test
pop
or
stos
mov
outs
mov
out
fs
movs
push
and
shr
popa
into
xchg
scas
stos
push
mov
mov
jmp
je
int3
test
and
inc
xor
inc
arpl
inc
pop
or
or
pushf
clc
pop
mov
cmps
cmp
fld
cwde
std
mov
jecxz
outs
dec
mov
mov
add
or
ds
xchg
es
ins
stos
jb
mov
sub
dec
shl
jnp
mov
jbe
mov
dec
daa
jmp
leave
movs
pop
pushf
in
bound
ror
iret
adc
xor
cmp
jae
clc
sub
les
xor
sbb
adc
call
lea
sub
mov
loop
mov
jmp
add
iret
sbb
mov
jecxz
inc
fst
cmp
lds
sbb
jnp
xchg
cld
sub
sbb
jb
add
or
(bad)
rol
and
xor
xchg
add
int
clc
add
sub
push
and
aaa
push
mov
fld
pop
movs
push
popa
jno
lahf
(bad)
sub
jp
and
pop
sub
and
sar
sbb
in
push
or
jo
jg
mov
push
je
mov
jmp
ss
(bad)
out
(bad)
dec
dec
mov
mov
ret
jp
pushf
push
bound
daa
xor
cmp
add
aam
sub
repnz
js
outs
and
sbb
mov
and
pop
repnz
dec
and
push
jne
cmp
dec
mov
push
jb
pushf
ins
pop
popf
mov
sar
cmp
pusha
inc
mov
jo
sbb
cmp
dec
mov
mov
sub
sahf
jl
adc
push
mov
mov
mov
in
ja
jnp
push
call
add
cmp
jmp
xor
dec
pop
sub
fst
in
call
cmps
outs
ins
push
fidiv
out
int
inc
mov
mov
and
(bad)
int3
mov
push
cld
arpl
sbb
loopne
sub
xchg
or
(bad)
ret
mov
push
add
sub
inc
cmp
mov
adc
stc
sahf
fs
pop
dec
fcomp
mov
mov
push
mov
mov
xchg
movs
xor
xor
das
scas
out
add
and
mov
sti
add
popa
dec
xor
cmp
loopne
xchg
rcl
sbb
jnp
adc
ja
push
call
bound
stc
push
pop
pop
mov
cmp
pop
xchg
and
lds
pop
sub
lock
xor
push
lods
cmp
bound
cmp
(bad)
int
arpl
xor
mov
jmp
loop
scas
js
pushf
in
hlt
(bad)
imul
cmps
loope
jmp
nop
stos
outs
lds
inc
sub
cli
or
mov
dec
and
sbb
(bad)
retf
jo
xchg
aam
ja
dec
and
cmp
out
xchg
xor
mov
cmp
fcomp
mov
adc
adc
data16
aad
iret
adc
pop
xchg
adc
loopne
les
sub
adc
pop
pop
js
xor
sub
mov
out
jle
sub
ja
ret
ss
test
dec
stc
sar
cwde
gs
retf
pop
dec
cld
ficomp
mov
push
dec
cmp
inc
sub
lea
hlt
add
push
out
sbb
jmp
and
js
and
xchg
mov
inc
adc
pop
pop
jo
or
sti
or
sbb
ins
sbb
(bad)
cli
xchg
out
mov
sbb
dec
or
xchg
aas
out
xor
mov
div
add
xor
fstp
dec
mov
pop
add
std
aam
in
aam
pop
mov
data16
pop
outs
mov
sbb
fs
es
jns
mov
loopne
add
and
adc
sar
xchg
xchg
jmp
mov
fstp
xor
movs
push
imul
sti
stc
jge
mov
pop
dec
fnsave
imul
cdq
mov
push
fadd
xchg
dec
lds
imul
or
mov
(bad)
and
pop
int
repnz
push
dec
and
xor
fstp
stos
mov
std
sub
pop
aam
int
cmp
ror
jo
mov
xlat
add
jmp
and
mov
adc
mov
jns
lahf
int
sahf
jmp
xchg
jb
jne
inc
inc
loop
push
ror
adc
mov
(bad)
cmp
adc
adc
aaa
scas
cmp
xor
mov
jae
in
dec
push
ficom
pop
jmp
icebp
movs
pusha
enter
repz
(bad)
push
mov
(bad)
pop
push
push
or
imul
inc
cmp
mov
and
add
mov
test
jle
adc
push
cmp
pop
jge
arpl
cwde
mov
in
mov
mov
aaa
loopne
cmc
fwait
mov
xor
outs
xchg
add
(bad)
mov
push
test
adc
cmp
adc
inc
iret
jle
nop
retf
push
add
retf
cld
xchg
push
xchg
mov
xor
jmp
jmp
movs
cli
sti
lods
xchg
sbb
test
dec
push
hlt
push
clc
repz
enter
sub
test
mov
dec
mov
push
push
out
lea
sbb
aas
adc
mov
(bad)
shl
sbb
ins
(bad)
(bad)
dec
repz
mov
xor
xor
fsubr
hlt
pop
stos
pop
jns
and
push
test
jno
call
or
cmps
cmp
mov
(bad)
xchg
or
aas
and
cli
call
sbb
test
add
xor
sahf
mov
movs
shr
data16
cdq
inc
fwait
xchg
push
push
dec
sbb
pop
pusha
push
sti
xchg
lahf
bound
add
out
test
and
mov
pop
pop
xlat
inc
(bad)
jno
or
test
imul
cmp
stc
bound
int3
shr
xchg
addr16
mov
outs
jecxz
sbb
(bad)
outs
push
sbb
mov
dec
arpl
ret
mov
dec
dec
dec
mov
or
lods
setae
inc
xor
popf
ja
dec
pop
cmp
inc
dec
pop
or
(bad)
(bad)
dec
mov
dec
ror
xor
shl
out
sbb
jp
dec
out
jl
nop
jnp
imul
pop
xor
retf
cld
mov
inc
add
leave
(bad)
adc
(bad)
xchg
mov
xor
out
or
ins
movs
gs
push
dec
outs
and
mov
mov
gs
clc
mov
outs
(bad)
mov
js
cmp
stc
cmp
cmc
mov
sub
sub
jl
daa
test
aaa
test
inc
cwde
cwde
dec
pop
mov
inc
test
pop
adc
adc
nop
cs
adc
xchg
daa
sbb
pushf
jg
lds
lods
repnz
jne
out
cmps
add
dec
dec
cmc
mov
repz
mov
scas
sar
fld
jnp
pop
mov
mov
mov
adc
xchg
jge
mov
sbb
dec
xor
cmp
fucom
jbe
cmp
arpl
adc
fistp
movs
xchg
xchg
sub
ins
mov
inc
(bad)
fstp
aas
imul
jae
mov
or
and
imul
mov
sub
cmp
xchg
xor
fisttp
push
mov
shr
loope
inc
cmp
movs
addr16
in
jl
lock
cwde
mov
ret
mov
sbb
inc
mov
shl
fsubrp
out
adc
lods
add
hlt
shl
popf
mov
and
loopne
adc
js
mov
xchg
adc
and
mov
pushf
loop
mov
sub
loop
push
movs
nop
xor
int
xor
mov
iret
mov
jb
call
scas
dec
pop
je
add
mov
mov
xor
lods
sub
in
inc
mov
mov
and
scas
jb
push
inc
pop
mov
mov
xchg
test
xchg
test
push
jp
test
sbb
mov
xor
pop
and
xor
inc
hlt
clc
xchg
xor
pop
stc
mov
sbb
std
push
fwait
leave
push
popf
push
dec
cli
sbb
xchg
mov
les
xor
out
inc
cli
in
mov
push
mov
inc
xor
dec
gs
and
xor
aad
sbb
retf
sbb
sbb
aas
popf
xchg
(bad)
jmp
cmp
or
icebp
xor
loopne
movs
test
push
or
fst
ins
push
pop
cwde
sub
(bad)
cli
ss
push
mov
jns
pop
outs
mov
hlt
in
ins
sbb
inc
pop
dec
jmp
xor
call
dec
xchg
bound
je
(bad)
aam
xchg
imul
pop
sbb
pop
fistp
jb
call
gs
sub
inc
and
dec
pusha
bound
xchg
lahf
enter
cdq
ss
lock
pop
pop
ret
mov
dec
push
jge
cmp
test
sbb
mov
mov
pop
push
or
mov
icebp
mov
jno
add
adc
jno
push
data16
pop
sar
or
jmp
das
add
ds
sub
jns
jnp
adc
in
sbb
sub
jp
test
loop
jecxz
dec
(bad)
mov
push
das
add
adc
lahf
mov
adc
hlt
xchg
push
ins
cwde
xchg
fwait
bound
pop
shl
fld
popa
mov
inc
movs
sahf
adc
stc
dec
xor
xchg
icebp
ss
mov
fs
inc
or
adc
daa
pop
sub
inc
mov
popa
or
jmp
aad
call
jbe
arpl
or
loop
xchg
rcr
fbstp
fs
sbb
pop
pop
jmp
shl
repz
repz
or
xchg
xor
push
sub
das
shr
xchg
inc
add
pusha
pop
cmc
imul
jbe
hlt
aas
dec
imul
xor
sti
mov
inc
cmps
out
add
and
mov
sahf
xor
cmp
sub
fst
xchg
neg
sub
sub
fisubr
retf
cmps
pushf
or
lahf
pushf
loope
repz
jmp
pop
sbb
loop
int
cmp
fwait
push
and
enter
mov
int
shl
sub
jns
mov
add
inc
repz
xchg
cmc
cmps
loope
mov
stc
test
push
shl
adc
ins
jbe
and
leave
sub
push
adc
shl
sbb
out
dec
jnp
sbb
inc
into
jne
jo
xor
xor
pop
int3
adc
xchg
bound
adc
loope
icebp
mov
sbb
cmp
test
(bad)
dec
adc
and
loopne
and
cli
sub
mov
adc
ds
pop
pop
repnz
dec
aas
mov
fwait
inc
shr
stc
aas
retf
call
push
(bad)
ss
jmp
rcr
aaa
pop
inc
(bad)
jbe
clc
scas
sti
nop
ins
or
test
ror
jnp
mov
repz
sub
das
das
mov
jge
mov
xlat
inc
(bad)
cmp
add
into
xchg
out
or
pop
sbb
repnz
stos
xor
ret
mov
adc
or
(bad)
xor
scas
adc
dec
mov
jnp
iret
mov
mov
(bad)
stc
call
mov
ret
push
je
xchg
out
outs
or
mov
(bad)
loope
ret
cmp
push
push
cdq
sub
adc
das
sahf
loope
int3
test
cmp
dec
sti
call
fist
sub
inc
sbb
cmps
sbb
jecxz
xchg
dec
mov
es
arpl
fdivrp
out
lods
enter
mov
sbb
or
mov
fs
ja
sbb
push
jo
adc
stos
jbe
dec
scas
pop
sbb
pop
mov
pop
scas
mov
push
(bad)
fiadd
mul
ins
ja
pop
mov
sbb
mov
and
adc
adc
mov
out
retf
cli
push
fbld
xchg
das
jne
cmc
cli
or
sub
jmp
shl
pop
mov
add
sbb
out
in
icebp
in
adc
pop
cmp
xor
dec
neg
or
inc
lock
sbb
fcomp
adc
inc
fwait
stc
retf
pop
ror
sbb
pop
(bad)
jbe
pop
inc
xchg
sti
mov
dec
ins
es
call
stos
popf
xor
sub
mov
gs
daa
fimul
jb
hlt
mov
rol
popf
jge
in
imul
shl
xor
adc
jp
add
mov
add
or
jno
dec
xchg
in
lods
ds
inc
jp
or
arpl
fnsave
popf
call
ret
daa
popa
test
imul
hlt
xor
cmp
fs
add
sbb
push
ds
push
popa
popf
adc
rcl
repz
in
push
inc
xchg
(bad)
loopne
stos
lock
test
iret
add
xor
push
jbe
jmp
pushf
mov
(bad)
xchg
mov
scas
xor
lock
mov
test
in
nop
lahf
pop
fwait
push
push
in
sbb
cld
jle
sbb
mov
inc
pop
jp
add
aas
div
cmp
nop
or
setbe
sub
add
or
popa
inc
enter
and
sub
push
fidiv
fst
int
push
lock
adc
sbb
jmp
aaa
popf
popa
xchg
add
sub
out
pop
inc
mov
push
shl
mov
push
aad
push
out
(bad)
cli
push
xor
pop
xchg
inc
cmp
pop
adc
xchg
xor
packuswb
(bad)
mov
xor
mov
mov
es
cmp
call
pop
inc
mov
arpl
mov
inc
sbb
xor
sub
ficomp
rcr
mov
repz
jns
in
in
out
jns
test
in
jmp
adc
and
or
inc
aad
outs
inc
mov
inc
repz
fldpi
adc
cmps
xor
mov
(bad)
mov
das
retf
popfw
sar
push
fcomp
call
cmps
adc
addr16
sub
iret
in
add
xchg
mov
xor
pushf
pop
xor
es
enter
(bad)
in
jl
xor
mov
lods
icebp
xor
xchg
out
jl
pop
and
lods
repnz
pop
jb
pop
mov
add
pop
dec
or
std
retf
(bad)
or
mov
fadd
ss
aad
pop
mov
in
in
xchg
popf
stos
lahf
fstp
(bad)
cli
inc
or
and
jecxz
loop
pop
lods
mov
lock
rcl
sub
or
enter
jnp
stos
dec
popa
in
mov
xchg
cmp
jne
cmp
cmp
iret
fs
sbb
sub
push
(bad)
xchg
es
push
stos
add
sbb
jb
movs
mov
dec
in
and
aaa
(bad)
out
int
and
pop
mov
hlt
and
shl
push
pop
ret
push
cmp
ja
clc
or
call
stc
jb
cmp
scas
sti
aam
xchg
pop
sub
and
inc
aaa
push
jbe
movs
dec
retf
push
push
imul
sbb
in
jno
dec
mov
mov
jle
mov
jl
fsubr
nop
mov
jae
lock
push
jbe
mov
or
loop
push
rcr
pinsrw
loope
dec
push
outs
jmp
and
cmps
adc
or
sar
(bad)
dec
and
dec
and
out
scas
mov
and
or
fidiv
sbb
ud2
movs
push
inc
(bad)
and
xchg
jo
cld
aad
pop
xlat
iret
add
push
call
icebp
jge
xchg
inc
and
cli
push
stc
sbb
stos
push
sub
mov
ja
xchg
std
(bad)
sahf
xchg
mov
jmp
adc
jno
inc
xchg
push
inc
xchg
xor
mov
loopne
pop
cld
cs
pop
jb
cmp
mov
pop
inc
push
dec
sub
push
aaa
in
mov
scas
push
adc
fucomi
add
test
lods
repz
push
mov
push
xchg
fwait
(bad)
push
out
lods
cmp
cdq
loopne
jo
rol
dec
ja
ins
pop
arpl
pushf
repnz
mov
inc
fiadd
imul
xlat
in
clc
or
pop
jae
mov
jno
jns
jl
out
repnz
mov
xchg
imul
into
movs
cli
dec
pusha
neg
sbb
pusha
push
gs
stc
sti
add
je
aas
push
in
aaa
sbb
jecxz
cli
cs
adc
sbb
inc
mov
loopne
fwait
add
xchg
push
xor
pop
gs
cmp
add
repz
into
movs
adc
or
or
lock
mov
push
ins
pop
xchg
dec
rcl
in
and
sub
cmp
cdq
icebp
and
jnp
mov
gs
adc
sub
movs
sahf
outs
mov
ret
jno
mov
scas
push
das
push
sub
inc
repz
and
jbe
mov
xchg
mov
fild
adc
mov
pop
add
je
mov
pop
mov
repz
or
sub
xor
cld
dec
mov
in
popa
adc
out
dec
xchg
imul
arpl
in
xchg
stos
leave
pop
bound
or
in
sbb
fild
push
stc
mov
xchg
(bad)
test
jb
dec
push
test
mov
or
out
xchg
fs
ins
dec
mov
dec
mov
fsub
sbb
pop
rcl
clc
(bad)
mov
push
sub
jg
xor
xor
fucomip
jb
iret
mov
out
cmp
rcr
push
dec
rcr
cld
fs
cmp
into
push
in
popf
jge
out
iret
add
imul
test
pop
lods
(bad)
and
nop
movs
cmp
scas
sub
jl
dec
mov
add
adc
ret
pop
adc
xchg
sbb
and
fisttp
pop
and
ins
clc
test
mov
sti
pop
inc
mov
pop
sar
retf
sbb
loope
push
pushf
cdq
arpl
int3
mov
cmps
or
add
and
sub
inc
xchg
xor
leave
xor
inc
mov
dec
sbb
adc
lods
out
mov
fisubr
(bad)
mov
cs
leave
cld
xchg
sub
mov
jmp
dec
in
(bad)
aad
(bad)
mov
pop
mov
push
mov
outs
pushf
pop
cmps
sub
sar
scas
adc
and
sbb
int3
rcr
gs
rcr
cmp
cmps
xlat
ss
inc
retf
and
adc
arpl
in
dec
bound
mov
pop
xor
cmc
lea
int
call
jle
sub
popa
pop
push
push
cmp
mov
push
sbb
(bad)
stc
dec
push
push
bound
mov
retf
push
pop
mov
daa
scas
mov
mov
cdq
icebp
fstp
xor
js
dec
sub
aad
dec
push
jmp
test
adc
cmp
adc
retf
frstor
sub
(bad)
sahf
push
sbb
fs
shl
loop
pop
pop
inc
out
and
cmps
mov
adc
xor
and
mov
mov
retf
inc
out
jle
rcl
mov
mov
sti
test
(bad)
jmp
mov
dec
adc
jmp
push
(bad)
fdivr
xchg
push
out
cmp
outs
mov
bound
bound
je
mov
fmulp
clc
shl
mov
nop
mov
pop
jnp
inc
jb
xchg
and
sub
test
iret
aaa
sbb
xchg
icebp
imul
cmp
mov
lock
jo
in
sbb
sub
(bad)
movs
cmp
lods
adc
mov
outs
gs
jbe
arpl
push
outs
add
xor
cmp
ins
jecxz
mov
pop
cmc
xlat
pop
sti
mov
mov
loope
pop
fs
cs
les
dec
mov
cs
jle
and
mov
loopne
popf
bound
into
(bad)
sar
adc
jmp
popw
adc
mov
aam
mov
hlt
dec
jl
inc
jp
xor
loop
sbb
sub
mov
mov
cli
loop
mov
sbb
test
xlat
sub
add
push
and
test
jmp
aaa
mov
cmp
leave
in
adc
in
adc
jp
push
sahf
fs
xor
out
add
adc
f2xm1
mov
mov
aaa
and
push
int
mov
imul
sub
add
adc
cwde
cmps
pusha
add
shl
mov
dec
sbb
sub
imul
pop
push
test
out
mov
xlat
es
mov
in
xchg
pop
push
and
sub
mov
adc
int3
mov
test
adc
aam
fsub
stos
sub
loope
retf
pop
push
cs
dec
push
cmp
das
or
pop
sub
push
ficom
in
aaa
jae
int
mov
(bad)
call
(bad)
movs
jg
lea
push
mov
retf
fistp
mov
test
cmc
adc
aad
ficom
jb
xchg
mov
(bad)
adc
dec
inc
push
cld
xor
dec
(bad)
lods
fwait
push
fsub
dec
xor
sbb
cs
iret
fild
imul
add
stc
push
push
fistp
shl
mov
cld
jg
mov
aad
lock
sub
adc
cwde
aas
hlt
cli
or
neg
pop
mov
ja
jge
fild
retf
jmp
jnp
xor
mov
daa
inc
int
fucomip
xor
aad
cmp
int3
mov
imul
in
mov
pop
repz
scas
jmp
or
cmp
mov
cdq
repz
inc
daa
pop
or
fsubr
inc
mov
jns
cmc
xchg
add
mov
in
(bad)
test
jmp
shr
lods
adc
cwde
(bad)
mov
inc
repz
imul
pop
push
inc
dec
pop
jmp
or
jp
and
mov
xchg
xchg
push
repz
mov
out
dec
ins
adc
dec
in
sti
jecxz
pop
shr
dec
cmp
or
scas
pop
jne
loop
cmp
daa
or
dec
daa
and
inc
(bad)
or
dec
div
(bad)
bsr
aaa
pop
sahf
mov
or
mov
rol
adc
xchg
xchg
lahf
in
pop
cmp
je
xor
add
and
mov
lds
ret
fcompp
jmp
jne
inc
mov
(bad)
xchg
(bad)
in
cmp
fnstcw
fwait
cmp
(bad)
mov
shl
movs
dec
xor
repz
std
aaa
cmp
inc
cdq
xlat
mov
loope
or
push
mov
or
pop
nop
wbinvd
jae
xchg
jle
movs
into
sub
cdq
(bad)
sub
push
jbe
or
xchg
inc
pop
shl
hlt
mov
enter
adc
lock
jae
into
dec
mov
repnz
js
lea
dec
cmp
aas
sti
mov
lea
adc
int3
in
sub
ins
lock
mov
neg
mov
fisub
adc
push
test
pop
fimul
xchg
movs
nop
mov
mov
mov
out
cmp
test
jmp
adc
fdiv
add
mov
and
inc
and
mov
aaa
fnstsw
mul
in
int3
mov
mov
into
xor
psraw
or
mov
repnz
pop
out
push
mov
dec
pushf
(bad)
out
sbb
and
jg
test
int3
fiadd
mov
jg
dec
adc
cdq
mov
pop
loop
clc
adc
(bad)
dec
sbb
adc
or
aas
adc
std
jns
lods
mov
(bad)
stos
(bad)
(bad)
mov
pushf
or
and
iret
ja
push
push
fisubr
add
(bad)
and
inc
call
rcr
cld
pop
mov
lods
mov
xor
inc
call
sub
fisttp
dec
cmps
lock
sbb
sbb
cmp
pop
ds
and
repz
(bad)
out
ds
or
inc
inc
mov
cmp
mov
cwde
mov
pop
mov
jmp
fdivr
mov
outs
dec
pop
inc
sub
xchg
mov
rcr
ret
gs
nop
pop
aas
ror
and
pop
aam
sti
push
cmp
adc
fistp
fs
lods
dec
cmp
dec
mov
test
push
xor
push
ja
ins
adc
iret
sbb
stos
mov
mov
fild
jo
xor
cmp
in
pop
and
in
ror
arpl
jne
retf
xor
jp
and
dec
mov
xchg
pop
test
add
ret
mov
sub
pop
ja
in
in
mov
cli
fistp
js
xchg
iret
cmc
or
mov
(bad)
pushf
ror
sbb
loopne
jne
xchg
arpl
(bad)
test
push
stos
call
jmp
xor
mov
(bad)
mov
loop
dec
test
dec
jmp
sbb
out
push
arpl
push
cmp
and
cmp
mov
idiv
lods
mov
mov
and
addr16
xlat
mov
scas
jno
mov
enter
test
push
outs
jmp
sub
(bad)
in
ret
nop
and
add
aad
mov
dec
sbb
or
or
inc
mov
ja
cwde
xchg
fist
vpmaxub
outs
cmp
retf
push
aam
pop
add
test
cwde
inc
push
je
aad
scas
repz
mov
std
dec
es
mov
inc
lahf
inc
arpl
ficomp
push
push
inc
movs
repz
jge
test
data16
aad
mov
jae
cmp
in
xor
outs
repz
std
cdq
mov
push
push
(bad)
fnstenv
pop
outs
and
add
fadd
stc
dec
xor
push
clc
pop
cmp
fwait
sbb
mov
mov
outs
mov
iret
repz
out
mov
and
aad
push
das
inc
push
call
add
loop
lahf
hlt
dec
movs
test
cmp
ror
arpl
xchg
jmp
dec
ins
inc
out
fmul
scas
xor
push
and
rcl
je
pushf
cmp
mov
adc
outs
jbe
cdq
add
mov
xor
jb
movs
pop
pop
sub
lock
cmp
pop
in
mov
sahf
xchg
ss
or
shl
jo
(bad)
cmp
mov
ror
movs
add
xor
xchg
mov
outs
outs
jle
sbb
(bad)
loopne
mov
in
sbb
loopne
cli
aad
je
add
push
movs
jge
mov
push
mov
cli
pusha
repz
mov
jb
in
xor
and
sbb
sub
stc
test
adc
mov
or
xor
movs
jnp
xlat
inc
inc
(bad)
rcr
add
sti
int3
sbb
xor
pusha
mov
sub
je
popf
sahf
dec
push
leave
jnp
data16
sbb
fst
sub
jl
push
sbb
jo
pop
sbb
ins
fidivr
repnz
sub
sar
push
(bad)
or
cmc
pop
push
ret
in
inc
inc
pop
cld
aam
ins
or
lds
int3
cli
(bad)
xchg
(bad)
fisub
pop
inc
ficom
aas
loope
sbb
mov
adc
call
push
push
push
aam
fisub
dec
shl
pop
xchg
bound
mov
mov
fist
mov
add
js
sahf
cmp
popa
stc
popa
pushf
xchg
outs
sub
and
xchg
sti
or
iret
cmps
stc
call
out
iret
adc
jmp
into
sub
mov
test
sbb
push
adc
mov
mov
inc
lahf
add
jo
stc
ret
mov
jmp
mov
ss
jmp
or
mov
(bad)
call
out
xchg
imul
xchg
cdq
nop
movs
dec
push
xchg
or
rol
pop
popf
div
rol
sub
and
mov
add
ret
adc
and
inc
in
sub
mov
loop
xchg
rcl
mov
shr
jo
inc
stos
pop
jmp
test
movs
jmp
mov
fwait
leave
test
mov
mov
retf
jle
repz
pop
loopne
jmp
aam
adc
repnz
xor
push
push
(bad)
pop
aaa
lea
sbb
aam
mov
sub
push
inc
in
call
cld
clc
imul
jg
daa
cwde
shl
mov
mov
push
push
mov
inc
adc
pop
mov
lds
repz
stos
mov
loop
fcomp
fwait
xor
data16
in
or
es
sbb
scas
(bad)
dec
in
jae
retf
ss
add
mov
mov
out
in
xchg
ins
jg
jge
enter
les
add
xchg
xor
xchg
adc
ins
jmp
sub
xor
call
repz
inc
std
in
pop
sbb
inc
mov
repnz
jg
js
in
nop
or
fdecstp
mov
push
cmp
cmc
cld
test
arpl
jl
hlt
(bad)
mov
ja
xchg
sub
pop
cmp
aam
rep
or
ficomp
or
mov
cld
push
test
ret
mov
ins
icebp
daa
enter
add
rol
fild
mov
add
pusha
sbb
xchg
ds
mov
sub
jmp
or
sub
mov
stc
push
nop
cmp
sbb
and
add
push
mov
mov
xor
out
xor
xor
fidiv
cmp
lds
rcl
test
fld
cmp
lods
in
aas
sahf
push
push
and
xchg
aam
fmulp
push
dec
pop
lea
or
mov
bnd
push
cli
gs
xchg
cmp
sahf
inc
int3
xchg
mov
xor
in
push
lods
add
mov
jmp
clc
pop
mov
pop
adc
repnz
clc
xchg
ins
jo
pop
fst
pushf
dec
inc
movs
outs
aaa
jge
nop
shr
aam
sti
inc
mov
inc
hlt
add
cmp
mov
add
push
xchg
scas
fstp
pop
jmp
dec
mov
mov
scas
clc
psadbw
xlat
lods
adc
adc
mov
(bad)
push
add
(bad)
repnz
test
adc
inc
inc
jmp
cmc
scas
fild
push
mov
cdq
sbb
xor
push
cmp
cmp
clc
bnd
sbb
outs
movs
jge
mov
xor
dec
lea
mov
test
adc
adc
js
sub
dec
adc
dec
(bad)
dec
lock
and
xchg
imul
dec
sbb
shr
(bad)
mov
jge
xor
dec
js
jl
(bad)
ficom
add
out
inc
xchg
lds
or
add
xor
mov
out
in
push
xchg
into
cmps
addr16
mov
inc
add
mov
jmp
fidiv
cdq
test
xchg
cmps
aad
movs
push
lds
test
xchg
pop
bound
out
iret
ss
xor
adc
adc
mov
mov
arpl
mov
or
xor
push
push
retf
fwait
push
ins
fwait
iret
cmps
int3
repz
or
adc
das
cmc
or
cmp
and
xor
fadd
xor
mov
xchg
pop
xchg
and
cdq
ins
push
or
push
addr16
adc
inc
inc
pop
pop
push
(bad)
or
aas
repnz
jle
jg
and
lock
adc
out
xlat
mov
fnstsw
dec
fwait
aam
retf
and
stos
adc
sbb
movs
adc
test
mov
aaa
add
shl
xchg
sub
push
retf
popf
jae
pop
in
and
dec
and
iret
pop
inc
repz
jmp
in
mov
adc
inc
out
test
loopne
jl
test
pop
sub
sub
mov
jecxz
add
(bad)
jo
push
jae
mov
lods
loope
mov
js
lods
outs
outs
push
mov
jecxz
jb
repnz
xchg
sub
dec
mov
mov
fnsave
adc
xor
int3
lahf
pusha
jo
jge
sar
mov
mov
sub
add
pop
add
jno
inc
add
mov
sub
addr16
(bad)
fst
pop
mov
cwde
es
call
push
pop
push
ins
pop
sti
and
addr16
adc
loopne
xchg
inc
jmp
aam
movs
jb
popf
xor
xor
fbstp
xchg
push
push
xchg
sub
mov
lea
lods
stc
aaa
test
mov
fimul
add
xlat
in
mov
sbb
xchg
fsub
or
sub
cmp
leave
mov
(bad)
adc
ins
or
sbb
dec
xlat
xchg
add
scas
and
sbb
xor
dec
les
in
jecxz
ret
data16
mul
cli
cmp
retf
xlat
jno
retf
js
push
ficom
enter
daa
hlt
xchg
in
sbb
mov
(bad)
das
sar
add
jno
cmp
shl
xchg
add
dec
xchg
sbb
test
into
rol
int3
jne
imul
pop
retf
adc
stos
mov
push
cmp
popf
lds
jne
jp
cmp
xchg
aam
jmp
mov
and
push
addr16
std
fs
(bad)
jl
retf
cmps
test
fisttp
ins
xchg
in
in
mov
nop
lods
mov
xchg
movs
ja
loopne
mov
push
mov
fmul
outs
popa
xchg
(bad)
(bad)
jae
cdq
ret
into
adc
push
dec
cmp
dec
jl
mov
fcomp
test
pop
(bad)
ja
rol
(bad)
outs
call
sub
jb
ds
ficomp
cmp
fcmovnb
popf
or
ss
mov
mov
jb
inc
test
neg
jp
pop
mov
mov
add
loopne
(bad)
in
dec
shl
addr16
xor
adc
xchg
arpl
mov
dec
adc
add
sbb
jecxz
(bad)
adc
mov
mov
or
popf
pop
fwait
jecxz
push
loopne
mov
(bad)
jmp
jmp
jmp
jno
jmp
mov
call
cmp
sahf
loopne
mov
and
xor
pop
pop
cdq
jl
pop
inc
(bad)
and
jno
jnp
pushf
comiss
sbb
and
sar
call
hlt
push
sub
iret
mov
adc
fsubp
pop
fisttp
call
out
fcomip
xchg
inc
xor
int3
fisttp
add
and
clc
sub
jae
lods
xor
add
cmp
clc
repz
ja
imul
in
xchg
cmc
dec
aas
mov
xchg
ins
(bad)
pop
loope
dec
inc
inc
jmp
jmp
lock
and
jg
mov
aas
jl
outs
adc
xchg
or
jmp
xchg
or
add
es
fimul
ins
retf
outs
or
fyl2x
rcl
inc
jle
pop
mov
cmp
sub
iret
bound
jmp
xchg
sahf
cli
(bad)
fdiv
cmp
mul
data16
repnz
and
gs
cmc
in
dec
rcl
(bad)
sbb
shl
retf
imul
xchg
cmp
pop
mov
aas
es
jno
mov
jne
xor
addr16
mov
outs
sbb
in
out
adc
and
push
jg
je
mov
jb
nop
inc
(bad)
retf
cmps
jnp
cmp
les
out
jno
sbb
cmps
in
xchg
and
mov
and
mov
push
call
jae
test
(bad)
adc
mov
js
scas
les
mov
cmp
out
les
hlt
jb
mov
repnz
and
adc
jne
mov
movs
jle
push
(bad)
leave
xchg
sti
mov
mov
pop
cmp
sub
ja
nop
lea
jo
jmp
xchg
ins
movs
imul
push
aad
out
cli
enter
in
mov
pushf
enter
xor
xor
jge
cld
push
jo
pop
mov
jle
outs
jb
stos
adc
stos
scas
push
outs
idiv
push
jg
sbb
jne
dec
push
imul
es
not
sahf
fdivr
and
sub
arpl
push
jno
sub
add
cmp
pop
data16
dec
mov
jb
mov
mov
out
dec
dec
push
ret
outs
xchg
and
ds
pusha
mov
out
and
mov
imul
(bad)
jmp
ret
cwde
fs
stos
jb
ficomp
jo
in
rol
jns
scas
bnd
loopne
lods
adc
outs
in
leave
aam
loope
jbe
jo
pop
repz
mov
movs
aas
and
sbb
test
test
int
sbb
dec
mov
push
arpl
loopne
inc
(bad)
(bad)
xor
mov
xor
(bad)
sahf
aam
ror
inc
push
adc
push
outs
xchg
mov
mov
jb
mov
xchg
mov
aad
(bad)
cwde
pop
test
mov
xchg
push
aam
cmp
into
cmp
mov
mov
fcomp
dec
(bad)
test
jecxz
push
jae
sbb
hlt
in
sub
or
cmps
cmp
dec
add
fisttp
pusha
sar
dec
lock
cs
cld
and
xchg
js
fstp
mov
and
lsl
add
(bad)
in
mov
adc
mov
and
jmp
scas
mov
dec
inc
icebp
or
out
xchg
jns
nop
mov
xor
cmp
cmps
push
call
call
sar
sbb
out
jmp
mov
ds
ja
add
lahf
sbb
add
or
mov
addr16
mov
mov
div
retf
imul
sbb
mov
or
adc
sub
mov
je
xor
push
dec
xlat
mov
cmp
rep
inc
pop
aam
mov
mov
cmp
and
cmps
shr
icebp
inc
in
test
bound
cld
xor
cmp
ret
addr16
or
xor
mov
mov
cmp
pop
fcomp
(bad)
jge
iretw
outs
mov
into
jmp
mov
cmp
idiv
cmc
popf
jne
pop
mov
aaa
sbb
out
outs
je
push
ja
test
movs
xchg
addr16
mov
sub
adc
cdq
dec
jl
push
cmp
jmp
loopne
bound
nop
jge
(bad)
(bad)
dec
push
add
or
push
idiv
add
sbb
addr16
leave
adc
call
inc
sub
outs
mov
(bad)
sbb
inc
mov
pusha
xor
and
mov
mov
and
sar
mov
add
fs
mov
mov
jle
mov
pop
int3
in
loope
leave
retf
out
pop
sub
inc
jne
outs
pop
lock
adc
mov
inc
jbe
xchg
in
pusha
xchg
xchg
mov
lods
clc
and
sahf
cmp
or
xchg
stos
push
jg
test
out
ret
xor
shl
jl
stc
cmps
cld
jne
sbb
daa
mov
push
push
leave
leave
fs
shl
jo
cmp
pop
mov
cmc
imul
imul
mov
sahf
add
xchg
movs
lods
ficomp
fadd
push
dec
aaa
jl
and
dec
or
pop
in
dec
dec
gs
xor
in
jmp
es
ss
pusha
push
xchg
es
or
inc
mov
jb
inc
lods
cmc
dec
es
sbb
pop
aam
rcl
jmp
imul
mov
dec
sbb
loop
jmp
and
stc
(bad)
jg
cmc
leave
pop
std
xor
xchg
pop
aaa
stc
xchg
mov
jno
movs
pop
jns
scas
pop
cmp
sahf
cmps
sub
and
repz
pop
(bad)
sbb
(bad)
popf
shl
das
jb
out
(bad)
(bad)
fstp
out
mov
ret
hlt
pop
or
ins
or
hlt
cdq
xchg
jns
call
jo
or
inc
xor
mov
mov
shl
imul
and
mov
stc
not
loopne
test
call
xor
fs
sar
or
mov
pop
or
out
fld
repnz
pusha
jnp
dec
fs
adc
mov
pop
dec
pop
ja
lea
dec
pop
or
or
call
mov
sub
xor
mov
ds
pusha
pop
test
mov
xor
ds
mov
xchg
adc
inc
push
or
(bad)
sti
hlt
push
dec
sbb
or
pop
add
mov
cwde
outs
jb
sub
fiadd
fcomp
dec
jl
out
iret
and
mov
push
xchg
jl
inc
ja
(bad)
fidivr
mov
out
sbb
test
cdq
and
pop
and
jno
in
lea
ret
stos
sub
push
neg
out
neg
xchg
ins
cmp
mov
xor
call
pop
les
mov
and
sbb
push
sub
push
fnsetpm(287
sub
pop
inc
mov
aad
repz
popf
into
neg
(bad)
aaa
outs
push
aas
jbe
jo
cmp
mov
fwait
pop
mov
mov
in
inc
push
lds
add
enter
push
xor
test
mov
mov
in
cmps
test
xor
(bad)
and
mov
jge
or
in
mov
aam
xchg
jb
and
rol
cmp
cld
or
call
mov
push
stos
fsub
and
inc
pop
jae
pop
inc
sbb
push
fisubr
lds
and
sbb
pop
cmp
stos
xchg
cmps
mov
(bad)
hlt
fcmovne
ds
inc
movs
repnz
arpl
std
js
or
inc
neg
mov
repz
cmp
cs
pop
ret
mov
lahf
repnz
dec
jmp
push
mov
pop
test
push
ins
leave
sbb
clc
ins
inc
inc
pop
add
mov
div
stos
add
mov
push
push
jmp
mov
ins
pop
or
dec
mov
xchg
aad
adc
inc
arpl
pop
jl
xor
(bad)
mov
add
pop
jns
lahf
sahf
pop
push
add
test
adc
xor
out
test
cli
out
stos
jge
mov
es
sbb
scas
ds
in
sub
jmp
mov
cmps
cld
cmp
sbb
mov
or
sbb
movs
pop
les
pop
dec
sbb
inc
outs
sbb
mov
int3
xor
cmp
or
cs
scas
jle
dec
(bad)
mov
and
test
push
popf
mov
sub
scas
push
or
imul
sbb
ror
dec
mov
cmp
loopne
mov
stc
iret
jmp
cwde
push
push
retf
pop
fcom
mov
inc
int3
push
out
mov
lods
ret
pop
clc
jmp
sbb
xchg
mov
das
arpl
mov
call
iret
out
mov
fs
(bad)
pop
and
inc
mov
xor
or
xchg
movs
mov
test
sahf
scas
in
mov
in
arpl
neg
std
jne
dec
pop
lea
clc
fsub
add
scas
adc
cmp
inc
xchg
test
add
dec
cmp
add
div
xor
jle
mov
mov
or
cmps
push
jmp
xchg
adc
sbb
push
nop
push
push
sahf
sti
xor
or
test
gs
mov
outs
fbstp
cmp
pop
cs
xchg
in
imul
std
rcr
test
cmps
add
das
out
and
int
add
fucomip
push
or
js
cmp
in
call
cmp
out
dec
adc
in
jge
aam
inc
sbb
rol
hlt
mov
aas
sbb
mov
pop
(bad)
mov
shr
mov
js
vmovaps
js
(bad)
ss
xlat
push
mov
push
cli
arpl
add
add
fs
jne
jnp
out
mov
mov
pop
and
xor
cli
lods
jg
inc
mov
sbb
out
in
loope
jecxz
mov
push
pushf
imul
xor
out
inc
pop
cli
fadd
cmp
dec
(bad)
mov
and
push
sub
test
adc
mov
add
das
imul
xor
stos
ret
stc
xor
fiadd
sub
scas
pop
aas
repnz
pop
es
xchg
sbb
sub
cmps
jb
dec
dec
and
push
mov
sub
lea
sbb
sbb
je
or
into
ja
retf
cs
ret
inc
fstp
loopne
je
mov
sti
pop
push
cmp
test
xlat
jns
adc
call
add
xor
repnz
or
add
pop
hlt
push
ds
loop
mov
and
frstor
js
push
mov
dec
mov
mov
push
retf
mov
and
arpl
xor
movs
xchg
ss
sti
cmp
push
inc
imul
and
movs
xor
jb
cdq
mov
test
idiv
mov
push
jae
fs
cmps
sub
mov
scas
clc
push
fbld
cmp
aas
cmp
ins
scas
xchg
sbb
sub
jmp
jb
call
stos
stc
enter
sar
dec
rcr
xchg
jle
sahf
push
pop
test
out
lea
jmp
push
es
aam
sub
inc
iret
rcl
adc
into
neg
mov
mov
dec
loopne
mov
cwde
js
call
addr16
pop
cmp
sub
cs
aaa
xchg
sub
rcr
jge
pop
pop
pop
cmps
xchg
rcl
std
cld
mov
movs
shl
adc
xchg
xchg
mov
icebp
add
push
pop
js
jecxz
add
mov
jo
inc
out
jmp
and
mov
cli
js
loop
mov
inc
sbb
sar
test
daa
mov
jmp
call
stc
sbb
ficom
jp
out
mov
rcr
jg
daa
test
dec
test
repz
jecxz
je
adc
xchg
inc
int
cmp
nop
xlat
icebp
add
retf
push
pop
pop
mov
pop
imul
das
shr
iret
push
cdq
xchg
and
mov
or
push
adc
popf
adc
stc
lds
cmp
scas
(bad)
xor
push
add
(bad)
imul
div
mov
fs
enter
add
mov
int
jmp
push
cmp
xchg
inc
scas
scas
mov
aas
stos
mov
test
lahf
sub
aas
shr
in
or
mov
loopne
and
dec
jns
call
(bad)
dec
sub
push
in
pop
mov
fadd
xchg
movs
cmp
(bad)
(bad)
add
lods
in
pushf
aad
cmp
sbb
pushw
ds
pusha
cld
sub
jb
add
mov
iret
jg
jns
add
or
jl
xor
and
mov
es
leave
inc
mov
xchg
or
mov
sub
movs
dec
cdq
cwde
mov
mov
mov
sbb
pop
pop
cwde
push
add
int3
pop
aas
adc
imul
adc
fldcw
mov
popa
lods
call
pop
pop
jno
cmps
sub
mov
mov
jae
cmp
sub
push
call
cmp
push
fist
add
or
arpl
mov
push
clc
sti
jle
retf
cmp
test
in
xchg
les
or
pop
outs
sbb
jmp
popa
imul
adc
stos
popa
cmps
xor
jle
inc
and
sbb
sub
stc
ss
and
jb
icebp
jo
outs
xchg
(bad)
push
and
out
jecxz
ja
jae
xor
mov
lds
shl
inc
xchg
pusha
ds
lahf
cld
cwde
rcl
add
sar
mov
movs
cmp
mov
std
lods
and
push
mov
jno
inc
mov
mov
test
jae
sbb
add
xlat
xor
(bad)
test
mov
xchg
out
mov
mov
sub
and
pop
dec
data16
imul
sahf
xlat
mov
std
jb
retf
and
sub
daa
mov
retf
into
int
lds
mov
and
sahf
jl
push
imul
xor
rcr
adc
shr
cs
push
test
add
jae
movs
mov
div
popa
movs
inc
cdq
and
lock
shl
fistp
push
out
xor
hlt
or
jns
add
les
mov
jmp
xchg
jae
iret
fucom
dec
xchg
adc
push
outs
mov
mov
sub
and
mov
sub
rcr
and
and
div
fcomip
js
lds
xchg
sub
idiv
and
xchg
push
pop
fdivr
sub
inc
sub
cmp
test
rol
int3
rol
xor
xchg
push
push
cmp
inc
es
ret
pandn
mov
ret
add
add
ds
aas
pop
repnz
imul
or
out
mov
ds
and
pop
inc
cmp
xchg
pop
inc
ret
ins
sbb
push
arpl
sub
xchg
aam
ror
and
rcl
rol
jne
out
sub
jae
xchg
mov
loop
dec
dec
dec
imul
inc
push
inc
out
xor
and
or
ficom
or
pusha
sbb
hlt
jbe
lods
sbb
inc
cdq
test
mov
or
stos
loopne
xor
cmc
mov
dec
sub
adc
enter
aaa
jl
xor
test
adc
push
xor
test
inc
std
(bad)
out
sub
push
jae
pusha
jmp
imul
dec
(bad)
lea
jge
ss
add
sti
or
(bad)
lahf
xchg
pop
cwde
jp
lock
je
pop
or
adc
shr
in
dec
pusha
mov
clc
cli
inc
in
jno
lds
into
aas
or
test
hlt
bts
sbb
sbb
jmp
sbb
arpl
xor
popf
es
ret
call
addr16
adc
stos
in
sbb
jmp
fbstp
sub
lea
je
hlt
lea
fisttp
cdq
push
cmp
push
loop
into
cmp
(bad)
clc
in
aas
rcr
aas
pushf
jne
or
dec
cwde
es
jge
or
ds
movs
daa
sbb
pop
or
stos
(bad)
call
dec
push
popf
pop
and
sbb
sar
jmp
cwde
(bad)
cmp
pop
clc
push
adc
in
or
cmp
leave
xchg
mov
sub
mov
rol
mov
cdq
jnp
mov
inc
adc
stos
movs
fidiv
adc
aad
nop
fwait
jmp
movs
cwde
mov
xchg
mov
push
fwait
jbe
(bad)
lea
xchg
fwait
rcl
mov
inc
loop
shr
and
ret
je
sbb
dec
ds
inc
ja
push
loope
xor
addr16
out
(bad)
sti
pop
jmp
or
loopne
not
xchg
push
imul
push
pop
jb
in
add
dec
movs
mov
data16
repz
aad
cld
xchg
imul
cmp
mov
lods
mov
mov
push
jg
xor
pop
cmp
push
pushf
cwde
xor
sub
pop
pop
sti
mov
inc
sbb
jnp
jo
add
in
je
sub
xchg
ds
aaa
imul
aad
sbb
and
adc
out
mov
mov
jns
push
or
mov
fcomp
and
mov
scas
fnstenv
jmp
fld
mov
pop
pusha
xchg
xchg
pop
das
or
mov
mov
fcom
mov
xor
daa
std
xchg
ret
add
cli
cmp
movnti
ins
xor
mov
pop
sub
pushf
test
int3
inc
push
stos
adc
xor
cmp
aaa
outs
pusha
call
inc
add
pop
imul
push
mov
push
add
dec
jae
jmp
fisubr
popf
retf
jnp
cdq
mov
or
pop
sbb
inc
jnp
imul
mov
clc
and
cmp
mov
jg
xor
sbb
inc
(bad)
cmp
ja
aam
call
inc
jae
mov
aam
mov
fistp
or
mov
aad
fstp
cmp
popa
nop
dec
retf
in
in
fisttp
add
lea
int3
dec
cmc
jo
enter
adc
or
pop
mov
or
test
dec
cli
popa
xchg
or
pop
xchg
inc
fucomip
mov
test
pushf
test
dec
ret
jns
lods
shr
icebp
data16
cmp
rcl
in
jne
scas
mov
sar
xchg
div
xor
les
pop
sub
or
mov
and
enter
rcr
sbb
inc
xor
aaa
adc
jmp
(bad)
dec
fnstcw
mov
push
cmp
loop
cmp
ins
sbb
jg
or
sub
mov
sub
es
adc
js
xchg
jbe
mov
mov
enter
cwde
addr16
call
scas
and
pop
cmc
shl
push
adc
cmc
leave
cmp
adc
das
push
movs
out
out
mov
ja
jp
js
rcr
cs
cmps
or
pushf
adc
mov
rol
fxam
repz
lods
mov
sub
sub
mov
jb
cld
scas
add
sti
cdq
cmc
rol
xchg
sar
and
pop
sbb
push
push
int
jae
sbb
and
cmp
inc
or
cmp
lahf
jo
pop
jle
inc
fist
sub
mov
je
xchg
ficomp
dec
scas
pop
in
mov
retf
cmp
in
out
int3
jmp
les
ret
movs
or
pop
inc
in
xor
adc
cmp
mov
test
pop
lods
cmp
icebp
jb
jge
jae
cmp
retf
and
xchg
and
in
add
inc
dec
and
push
fnstenv
sub
xchg
jno
xchg
push
stc
add
lods
push
jb
sbb
add
dec
lock
test
mov
and
das
xlat
ss
push
cmps
pop
repz
lods
push
and
retf
and
or
shr
xchg
xchg
das
push
cs
lahf
xlat
ret
push
int
pop
js
mov
(bad)
rol
int
jae
sbb
fs
add
outs
pop
rcr
dec
lock
push
ror
add
jbe
int
jge
sub
je
adc
mov
sbb
fild
dec
mov
(bad)
(bad)
out
(bad)
mov
or
idiv
push
sbb
pop
imul
cmc
int3
push
(bad)
test
sub
dec
out
jp
xchg
mov
fmulp
scas
add
bound
cmc
dec
iret
jp
pop
cli
xor
nop
outs
int3
sub
fmul
jns
ffree
xchg
inc
mov
cld
fdiv
mov
adc
xchg
sub
lods
mov
cmp
sbb
jge
mov
sub
add
lods
push
adc
cmp
ins
pop
dec
sub
stos
addr16
xor
push
in
stc
fnsave
mov
cmp
jle
or
gs
std
pop
fimul
jl
int3
cmp
mov
jmp
jmp
adc
stos
mov
clc
push
xchg
(bad)
mov
push
jp
mov
icebp
or
rcr
xor
adc
dec
mov
arpl
push
mov
lds
dec
iret
adc
daa
sbb
push
pop
jmp
push
pop
pop
mov
pop
lea
int3
xchg
pop
pop
xchg
mov
pop
fnstenv
arpl
std
nop
jmp
scas
test
pop
and
add
sbb
push
push
popf
sbb
mov
lods
dec
hlt
pop
popf
sbb
and
dec
cwde
inc
mov
cmp
fs
cli
adc
jb
aas
ds
cs
jae
repnz
and
pop
(bad)
test
xor
sti
xchg
mov
sub
dec
xchg
data16
pop
test
cmp
adc
(bad)
cmp
fsub
or
mov
and
aas
cli
cld
mov
mov
jno
xchg
sbb
sahf
outs
cmp
je
cmp
mov
out
adc
mov
adc
cld
ins
push
add
dec
dec
inc
test
mov
pop
in
fdiv
retf
jecxz
test
xchg
mov
sub
xchg
(bad)
into
adc
loopne
and
and
pop
jecxz
icebp
retf
mov
or
cmp
mov
and
rcr
movs
and
xchg
mov
(bad)
add
ficomp
out
cmps
test
pop
cwde
mov
pop
mov
xchg
cmp
lock
mov
or
push
mov
mov
push
adc
popa
fwait
xor
mov
pop
mov
jo
xchg
xchg
je
mov
or
mov
fcomp
les
mov
icebp
retf
clc
mov
sti
add
(bad)
je
or
jl
lds
out
mov
jl
and
out
int3
push
jae
ret
cmps
push
jmp
mov
xchg
ds
or
sbb
inc
or
xchg
xor
call
adc
mov
inc
fisub
rcr
cmpps
int
in
mov
mov
fisub
fldenv
pusha
div
add
mov
cld
sub
xchg
mov
leave
and
sub
(bad)
loop
rcl
push
pop
fst
nop
mov
add
nop
xchg
ret
cmp
xchg
ins
jge
sub
retf
out
push
mov
addr16
imul
push
lahf
in
jbe
std
int3
or
and
jle
cmp
stos
ins
push
and
test
dec
jmp
pop
aaa
in
pop
pop
js
es
leave
int
jmp
and
pop
push
inc
jne
pop
adc
jo
enter
pusha
gs
clc
pop
ror
sub
fidivr
inc
hlt
retf
fcomp
pushf
dec
jno
adc
mov
into
sbb
fwait
das
jg
stc
les
cdq
(bad)
movs
or
pop
sub
(bad)
into
mov
into
add
add
ds
cdq
in
jnp
retf
sub
or
xor
and
xor
mov
adc
push
xchg
lds
adc
loop
jmp
ins
imul
push
inc
fmul
or
je
sub
loopne
sub
push
fistp
cmp
(bad)
mov
inc
xchg
(bad)
retf
mov
adc
inc
adc
imul
cdq
jmp
aam
imul
and
push
ins
pop
adc
xchg
ds
in
sar
push
je
lds
pop
test
stos
sub
inc
or
loope
jle
in
ss
jg
ror
movs
pusha
xchg
les
cmc
dec
sbb
sub
cld
maxps
xor
push
pop
not
daa
leave
inc
test
sar
fcom
shl
fcmove
add
or
jp
push
or
into
or
adc
inc
xlat
aaa
jmp
push
xchg
loopne
jae
outs
addr16
adc
sti
adc
enter
sbb
mov
retf
sub
jge
jmp
jno
push
scas
std
ror
pop
ja
or
mov
cmps
shl
popf
mov
jecxz
call
pusha
out
pop
cmp
jmp
out
das
cdq
xchg
sub
(bad)
xchg
xchg
sub
movs
sbb
stc
outs
(bad)
cld
lods
loopne
lea
movs
and
dec
xchg
lahf
fwait
dec
xchg
enter
int3
jp
inc
cmps
rol
loop
scas
sbb
mov
out
cmp
pop
mov
in
out
xor
mov
push
ret
test
mov
dec
add
movs
ja
jg
cmc
cld
repnz
xchg
or
(bad)
leave
mov
imul
add
or
jmp
ins
cmps
cmp
out
int3
ds
adc
(bad)
lods
repnz
ds
aam
je
mov
mov
sub
loopne
movs
mov
inc
xchg
in
add
(bad)
fnstenv
int
loope
loope
push
jmp
aas
ret
sahf
add
xchg
inc
test
xchg
ss
cmp
jb
and
shr
mov
xchg
xabort
mov
aaa
jmp
pop
sub
cmp
stc
mov
pop
sub
adc
ds
bound
das
inc
xchg
rcr
xor
mov
or
cdq
movs
add
inc
dec
ins
mov
push
xchg
push
pop
xor
idiv
shl
pop
lea
push
jnp
test
inc
jo
int
jbe
push
xchg
hlt
xor
pop
ret
mov
cmp
pop
loope
mov
push
xchg
sbb
cwde
push
xchg
adc
cmp
(bad)
lods
es
or
cmps
sub
cli
outs
mov
gs
mov
in
ins
adc
jae
ret
dec
inc
add
outs
inc
inc
mov
cdq
pop
not
sub
cmp
adc
inc
xor
nop
int3
mov
xor
jae
mov
mov
call
out
adc
jmp
ret
(bad)
neg
adc
adc
repz
cmc
jno
mov
sbb
call
retf
xchg
inc
add
sub
std
mov
in
mov
push
mov
cmc
jg
dec
inc
rcr
xor
add
pop
cmps
mov
mov
cdq
shl
rcr
cmp
pop
push
ret
(bad)
or
jp
stos
or
in
mov
fdivr
dec
adc
push
adc
aam
adc
out
sbb
jmp
fisub
inc
push
es
push
scas
ror
mov
xchg
jle
and
nop
sub
pusha
cmp
sti
out
mov
popf
(bad)
movs
mov
into
inc
mov
xchg
xor
mov
jg
jnp
enter
jne
out
xor
sbb
xor
sbb
mov
adc
cld
xchg
lods
mov
dec
pop
rcr
jle
sub
in
sbb
call
aas
lahf
call
sub
aas
xor
data16
jmp
lods
xchg
popf
cld
xchg
fisttp
mov
jg
adc
sub
aam
add
push
sahf
cmp
data16
lods
and
mov
fsub
and
test
(bad)
fisub
pop
popf
dec
mov
pop
mov
xor
hlt
ins
test
je
cli
push
pop
mov
add
add
add
iret
gs
inc
into
cwde
cmps
pop
push
dec
sub
dec
retf
and
mov
das
jge
enter
jmp
movs
je
pop
fbld
fsubr
outs
push
aaa
add
push
out
cmp
sub
sbb
ins
xor
adc
xchg
and
int3
pop
fcom
xchg
ja
shl
movs
xor
mov
lods
jo
dec
xchg
lods
ror
movs
pop
(bad)
sbb
xchg
test
or
test
push
test
in
cdq
ret
sbb
mov
pop
mov
cmp
xor
mov
xor
scas
fdivr
std
inc
mov
mov
jle
push
ret
(bad)
dec
sub
aaa
loop
pop
push
daa
or
or
pop
shl
lahf
in
push
inc
adc
push
repz
in
pop
test
mov
stos
jnp
enter
cwde
cmp
cmp
or
cs
adc
cmps
out
mov
repz
mov
test
stos
xchg
repz
fwait
es
cmps
sub
lods
pop
sub
sub
test
mov
dec
sub
jbe
or
das
cmp
adc
cmp
sub
sbb
es
lods
mov
xor
sub
fwait
(bad)
scas
jb
mov
mov
dec
cli
frstor
stos
loopne
mov
inc
add
push
adc
jnp
pop
xchg
fdiv
ds
cmp
sub
sti
enter
jp
cld
and
and
outs
jmp
fld
xchg
xchg
fld
mov
imul
(bad)
inc
mov
push
or
add
mov
mov
lock
retf
sub
inc
mov
sub
leave
cwde
or
dec
sub
fnstcw
popa
jmp
jl
js
fisubr
cs
add
sbb
fdivr
inc
push
mov
es
nop
adc
push
xchg
loopne
jecxz
cli
mov
xor
mov
xchg
mov
mov
inc
aaa
nop
jecxz
pop
sahf
mov
in
cmc
sub
aad
jge
mov
jg
in
sbb
cli
hlt
aas
xor
push
pop
cmp
movs
mov
icebp
cmc
inc
out
jae
jno
xchg
test
add
push
xchg
jnp
xor
js
or
add
jb
cmp
or
inc
inc
mov
jmp
push
fidivr
adc
jbe
adc
mov
xchg
xchg
cmps
push
mov
mov
jg
mov
inc
sbb
mov
jg
aad
sub
inc
les
mov
aad
inc
(bad)
lds
test
push
sub
mov
call
pushf
(bad)
sbb
xor
pop
cdq
and
stos
hlt
int3
inc
rcr
(bad)
sti
xchg
pop
xchg
stc
fucomip
mov
dec
ds
addr16
xor
bound
enter
mov
jbe
mov
je
mov
sbb
xor
out
push
out
jno
test
cmp
popf
data16
mov
sahf
xchg
retf
or
pop
nop
or
add
dec
dec
adc
outs
mov
imul
test
shl
retf
(bad)
or
and
lods
inc
neg
into
ja
mov
out
mov
mov
dec
sbb
xchg
jge
mov
jnp
jmp
ins
es
cmps
mov
dec
mov
or
ret
add
lods
into
add
cmp
xchg
sbb
add
cli
inc
dec
xchg
(bad)
sbb
mov
shr
jg
out
push
and
jbe
push
out
sahf
xchg
(bad)
repnz
imul
inc
xor
push
and
icebp
xor
push
shl
retf
xchg
sbb
ss
repnz
jmp
xor
dec
clc
mov
loope
enter
add
loope
ficomp
(bad)
(bad)
scas
test
sub
add
das
gs
or
mov
sub
dec
push
repnz
and
cmps
scas
sub
mov
retf
scas
xor
imul
adc
movs
sbb
movs
cmp
cmps
popa
xchg
movs
jns
or
add
xchg
in
inc
or
pop
imul
mov
xor
or
sbb
push
ss
jns
lock
arpl
(bad)
mov
push
scas
mov
mov
repz
push
enter
sar
or
pusha
mov
mov
inc
jno
pop
daa
mov
dec
(bad)
mov
scas
ja
inc
pop
xor
pop
add
repnz
mov
fcom
cmp
es
into
pop
push
(bad)
mov
inc
mov
dec
pop
data16
push
push
pop
push
hlt
inc
daa
(bad)
pop
mov
pop
mov
out
push
xchg
add
sub
int3
pop
retf
mov
adc
pop
out
(bad)
mov
dec
movs
hlt
arpl
xlat
fisub
test
sub
js
shl
daa
xchg
and
mov
pop
mov
gs
ret
pop
xor
or
jnp
cmp
mov
test
test
mul
loopne
cmp
push
test
jl
or
xor
pop
mov
cld
ds
data16
add
or
ret
ja
mov
push
mov
fcom
test
fsub
fld
mul
xchg
push
pop
pusha
and
mov
or
sub
enter
mov
add
push
jb
add
lods
and
popf
sub
jmp
xor
repz
jo
div
stos
test
mov
mov
or
sub
jb
aas
adc
inc
adc
mov
inc
call
add
out
ja
push
inc
cmp
out
mov
int3
mov
fcom
push
fbld
push
xlat
mov
jns
js
stc
call
jns
mov
repnz
stos
(bad)
sub
xor
pop
es
outs
jle
daa
popa
jmp
lds
stos
push
repz
ds
xchg
dec
cmp
adc
dec
popa
mov
or
sbb
push
and
scas
xlat
into
push
iret
aad
ins
icebp
push
jo
enter
jnp
jl
pop
pop
ja
lods
aaa
leave
fldcw
xchg
mov
test
mov
jb
ror
mov
mov
js
out
(bad)
in
dec
jo
(bad)
jo
xchg
repz
inc
pop
lods
outs
mov
cmp
retf
add
push
pop
and
aam
(bad)
retf
ret
xchg
fdivrp
cmps
cmp
daa
fldenv
sti
fnstcw
mov
and
cwde
out
mov
dec
movs
and
enter
pop
sti
add
pop
xchg
lods
jg
imul
and
and
mov
ins
fisub
hlt
out
mov
out
mov
fadd
pop
sbb
xchg
inc
das
rcl
mov
push
outs
mov
ret
inc
mov
mov
sub
pushf
mov
adc
shr
mul
or
and
int
xchg
mov
sub
push
jne
(bad)
cmp
jnp
inc
sub
cmc
xchg
cmp
inc
repz
iret
inc
jae
bound
mov
aas
gs
push
sar
daa
(bad)
cmp
push
jne
or
test
sbb
push
int3
push
hlt
xchg
pop
dec
push
gs
jle
or
rol
mov
(bad)
sub
cmp
enter
gs
push
jp
cmp
sbb
mov
xchg
test
movs
test
cmp
lods
int3
push
cmp
mov
imul
or
mov
sbb
jmp
inc
test
sub
movs
sub
dec
scas
pop
sub
sub
outs
xchg
sbb
jge
jp
xchg
dec
dec
je
or
add
push
sbb
inc
outs
dec
loope
and
jae
and
cs
sbb
push
sbb
add
ja
lea
out
sbb
xor
scas
mov
cmp
dec
(bad)
pop
or
xor
mov
pop
adc
pop
imul
jno
not
push
push
mov
ret
sbb
push
and
mov
adc
in
adc
ss
xchg
out
sbb
je
cmp
xor
in
add
adc
cmp
fimul
inc
gs
and
jp
movs
cdq
(bad)
fcomi
and
dec
cdq
scas
leave
push
sti
mov
rcl
outs
aas
rol
sbb
je
imul
mov
out
test
push
push
lods
cmp
pop
push
nop
out
sub
jg
loop
mov
rcl
sub
mov
fadd
adc
(bad)
push
lds
cmp
mov
jno
fsub
ins
xor
dec
(bad)
sbb
dec
arpl
inc
push
jp
add
sub
in
xor
dec
imul
pushf
dec
sar
mov
leave
gs
add
popa
xchg
unpckhps
out
mov
jb
push
fwait
cdq
sub
out
dec
mov
clc
imul
xchg
test
(bad)
fmulp
push
cmp
das
arpl
shr
dec
mov
(bad)
sub
je
data16
repz
test
std
sub
stc
je
xor
call
push
shl
mov
les
call
mov
(bad)
fbstp
or
pop
mov
push
cmp
rcr
mov
pusha
mov
xchg
jne
leave
pop
jl
cli
stos
cdq
xchg
xchg
fcomp
xchg
ss
ror
or
int
in
mov
mov
or
repz
fdiv
movs
dec
push
lods
mov
out
jne
gs
lock
or
dec
loop
jl
adc
lods
mov
test
ins
call
rcr
xor
mov
out
dec
stos
jbe
pusha
add
mov
popa
xor
aas
sbb
push
and
rcl
or
and
sbb
iret
aaa
les
addr16
push
in
cld
or
outs
cmc
js
add
mov
sti
stos
mov
jnp
jmp
lods
mov
or
dec
icebp
sub
xor
bound
faddp
fs
ss
mov
addr16
cmps
rol
sbb
mov
jo
sbb
xchg
mov
jns
pop
jmp
or
lock
pop
int3
shr
in
ret
push
adc
pop
adc
dec
xchg
sub
es
fidiv
cmp
pop
shr
xor
les
inc
out
or
cmp
shl
fcomp
adc
inc
bound
xchg
std
jae
jbe
and
movs
(bad)
sar
(bad)
cld
sbb
or
imul
xchg
pop
add
loopne
jle
mov
xor
dec
xchg
movs
jl
and
jmp
push
pop
(bad)
cld
pop
fistp
ds
imul
cs
test
pusha
dec
sub
jbe
jmp
in
shl
inc
dec
mov
icebp
pop
fs
push
lods
push
mov
sar
rcr
sub
outs
nop
adc
push
(bad)
cmc
adc
je
cmp
mov
cmp
imul
mov
adc
rol
enter
or
imul
(bad)
or
neg
dec
xor
les
mov
ja
fidivr
dec
test
add
mov
mov
icebp
ret
and
retf
inc
mov
loop
adc
loopne
in
imul
xor
dec
sub
add
sbb
xchg
pushf
aad
(bad)
out
clc
sbb
stos
(bad)
(bad)
mov
add
arpl
xor
sbb
add
xor
mov
push
stos
xchg
enter
fcom
push
pop
mov
push
lahf
call
cli
std
or
out
xchg
and
jno
mov
mov
fs
and
das
cmp
arpl
push
call
mov
mov
add
xchg
sub
add
mov
js
jns
imul
pop
mov
inc
push
xor
scas
stc
xor
lods
push
movs
mov
out
stos
je
sti
and
jle
sbb
xchg
dec
mov
pusha
mov
xor
ret
cwde
ds
es
cdq
enter
fidiv
pop
inc
jle
js
sahf
mov
fnsave
push
xor
add
mov
mov
call
xchg
jle
xchg
or
call
jg
mov
fcmovnb
jne
retf
add
xchg
sbb
and
shr
xchg
mov
xchg
aaa
test
out
fcmove
sbb
es
scas
mov
int
dec
pushf
xor
mov
std
movs
cwde
cmp
rcl
loop
loopne
(bad)
and
push
nop
cmp
fwait
or
and
push
movs
out
(bad)
call
xchg
xor
adc
add
push
mov
addr16
pop
inc
xor
popf
das
pop
in
lahf
add
pop
test
(bad)
sub
inc
call
add
mov
and
jmp
mov
ror
xchg
mov
(bad)
cmp
xor
xor
fcomp
(bad)
push
mov
pop
push
rcl
clc
and
jl
(bad)
cmp
cdq
mov
bound
pushw
imul
or
fsub
call
hlt
inc
call
xchg
jmp
dec
push
inc
mov
fst
(bad)
push
stos
xchg
ss
cld
movs
dec
dec
popa
adc
and
xchg
aaa
or
and
cwde
fmul
pusha
mov
ret
mov
inc
inc
xor
loopne
outs
iret
(bad)
jmp
push
xor
stc
pop
(bad)
sub
test
popf
call
mov
out
add
icebp
xchg
inc
pusha
jne
lods
lds
mov
xchg
ja
cmp
xor
xor
test
sbb
stos
lods
mov
fidivr
cmp
sahf
mov
cmp
mov
jecxz
loope
(bad)
imul
cli
ret
mov
xor
pop
lahf
jecxz
sbb
aas
js
cmp
inc
es
sbb
icebp
imul
ss
mov
les
iret
stos
xchg
ss
lds
inc
mov
sub
adc
cli
xchg
and
dec
push
cmps
xor
je
lea
hlt
cmc
mov
gs
fidivr
adc
xor
jmp
sbb
and
repz
bound
inc
aad
push
fs
xor
adc
jno
sbb
shl
je
add
fwait
nop
jne
call
cwde
dec
mov
add
pop
sahf
ins
mov
fidivr
retf
jle
cwde
add
inc
add
push
lods
fadd
mov
xchg
gs
or
mov
add
xchg
xor
pop
enter
mov
add
dec
cmp
icebp
icebp
leave
es
aad
or
dec
in
push
or
cwde
jmp
or
out
xchg
dec
xchg
xchg
xlat
sbb
push
inc
std
out
(bad)
ror
test
jge
push
lock
(bad)
pop
popa
inc
jo
fwait
gs
popf
outs
push
mov
jbe
inc
ja
hlt
lahf
jge
in
xchg
jbe
call
fdivr
mov
mov
mov
movs
inc
mov
daa
scas
xor
mov
mov
sahf
in
dec
call
cmps
mov
and
rcr
loope
pop
and
aam
(bad)
call
stos
sbb
jecxz
rol
add
rol
sar
jl
jno
jmp
sub
mov
retf
jge
repz
xor
aas
scas
xchg
dec
gs
lsl
and
add
icebp
xchg
add
sub
ja
(bad)
pop
dec
ret
shr
push
push
pop
cmp
(bad)
sub
imul
iret
pushf
or
cmps
jb
fistp
pop
addr16
sub
out
jmp
pop
or
push
add
mov
xor
jmp
stos
rol
pop
punpckhwd
nop
or
ins
cdq
test
aaa
fldcw
dec
in
enter
aas
lock
mov
push
cmp
les
fisub
call
gs
adc
xor
sbb
cmp
popf
push
bound
rcr
stos
test
ins
sti
mov
cmp
and
jmp
lods
outs
push
cmps
stos
jnp
mov
or
and
adc
xchg
jle
jle
mov
rcr
inc
xor
mov
adc
cmp
jnp
xor
scas
pop
sti
adc
sbb
mov
push
pop
xchg
mov
and
daa
push
and
sbb
xor
loope
in
mov
jbe
mov
(bad)
xor
xchg
das
ins
jb
inc
mov
push
adc
lahf
daa
xlat
xor
retf
jns
iret
dec
(bad)
(bad)
popa
jne
inc
adc
movs
fadd
push
ret
push
ja
aad
and
xor
or
and
cmps
mov
and
cmps
lods
sbb
jl
aas
pop
into
ret
jl
adc
mov
xchg
push
test
clc
mov
(bad)
lahf
test
sub
movs
push
loopne
rol
call
js
shr
gs
popa
data16
test
and
imul
shr
addr16
test
cmp
stc
es
popa
pop
mov
dec
and
out
cmc
xlat
pop
adc
dec
inc
(bad)
jge
repz
sub
push
rcl
(bad)
frstor
push
add
jnp
adc
fisttp
fstp
jne
pop
hlt
(bad)
data16
lock
push
retf
jno
loop
sbb
sub
jmp
push
adc
xor
stos
mov
or
aas
mov
sub
int3
pop
jns
sbb
jg
int3
pop
dec
push
adc
pop
xchg
out
shl
adc
cmc
pop
and
retf
pop
add
sub
push
loopne
fwait
loopne
(bad)
jecxz
xchg
stc
mov
dec
popa
mov
sub
push
xlat
mov
aaa
push
cmp
inc
sub
mov
pop
ds
pushf
ss
dec
jp
mov
fsubr
dec
rcr
dec
push
call
and
loop
test
and
pavgb
int3
jle
cmp
dec
push
xlat
cmc
sub
(bad)
sbb
mov
mov
jns
xchg
test
xchg
pop
cmp
push
cmp
cmc
out
mov
fmul
and
mov
jl
jne
(bad)
or
stos
add
(bad)
sub
cmps
shl
and
ins
out
les
out
pop
movs
jae
aam
retf
push
stos
stc
and
sahf
jge
and
je
xor
pushf
call
test
(bad)
mov
fnstenv
xor
stos
fnstcw
add
and
outs
mov
sub
ja
mov
out
iret
dec
les
test
pop
mov
sbb
leave
enter
xchg
out
inc
mov
and
dec
(bad)
int
cwde
fimul
fld
fistp
(bad)
mov
(bad)
sbb
in
xor
push
out
(bad)
call
dec
pop
inc
jb
cmp
jbe
dec
out
cmc
mov
sbb
jbe
sbb
jae
clc
or
push
xchg
gs
mov
pusha
lock
dec
fadd
push
inc
cdq
sub
push
jbe
fnstsw
jo
pop
test
lea
not
lods
push
addr16
xchg
jo
clc
pop
aaa
adc
test
lea
jo
cmp
lock
sbb
sub
arpl
mov
je
add
xchg
mov
mov
clc
jg
jle
ins
cli
int3
fsub
movs
cmp
cmps
call
mov
push
inc
out
jne
bound
jl
sbb
push
hlt
or
inc
scas
sub
mov
out
scas
js
push
sbb
repnz
push
shl
push
shl
dec
scas
adc
inc
cmc
fisub
push
mov
out
cmp
mov
pop
xlat
into
es
lds
dec
jno
sub
cmp
jle
es
cmp
add
cmp
repz
or
dec
movs
jbe
mov
js
ficom
mov
shl
shr
rcl
sar
out
mov
jmp
mov
push
jg
rcl
push
in
mov
mov
adc
fidiv
xchg
and
cmp
mov
lods
jge
xor
sbb
ds
les
lods
sahf
int3
mov
nop
push
hlt
es
mov
rcr
mov
(bad)
or
sub
nop
xchg
shl
(bad)
sbb
pop
cmp
fisttp
sbb
nop
jle
xchg
or
dec
inc
xor
cmp
cmps
in
jo
cld
hlt
loope
icebp
(bad)
jne
popa
stos
sbb
mov
or
dec
cdq
pop
push
hlt
or
mov
sub
fs
dec
or
rcl
push
xchg
das
xor
cmp
push
call
pop
imul
mov
sub
imul
sti
xchg
popa
mov
dec
jns
mov
pop
pop
scas
cmps
jo
into
pop
pop
jge
pop
cmp
lea
dec
ret
and
cdq
push
and
inc
popa
jae
jmp
fisttp
mov
les
scas
enter
mov
ds
jg
or
cdq
stc
add
jbe
loop
fsub
sub
add
test
mov
or
sub
pop
xor
in
dec
iret
dec
xchg
cmp
mov
dec
sbb
pop
mov
xlat
inc
push
xor
arpl
dec
pop
daa
popf
icebp
mov
(bad)
push
lods
jo
(bad)
das
mov
add
and
pop
rcr
mov
les
jge
sbb
mov
mov
(bad)
fdiv
xchg
loop
mov
pop
je
in
sub
fdivr
aam
ds
sbb
(bad)
in
dec
dec
cmp
inc
dec
in
pop
repnz
leave
jae
int3
inc
push
fsubr
lea
test
sub
add
ds
stc
dec
add
pop
dec
ret
cli
pop
push
aad
sbb
enter
stos
mov
inc
shl
adc
adc
pusha
push
es
dec
jo
test
cmp
mov
in
in
out
add
jecxz
movs
mov
mov
fwait
inc
loopne
mov
adc
mul
fst
push
or
sbb
sahf
mov
inc
jg
cwde
inc
cmc
dec
aaa
rol
loope
sbb
jmp
stos
and
retf
lock
and
in
push
and
mov
cmc
cmc
dec
and
loope
test
fs
sub
(bad)
hlt
aam
jecxz
call
add
cmp
ss
jns
inc
je
add
inc
xchg
mov
inc
fdivr
test
jl
movs
xchg
in
aas
imul
pop
mul
or
dec
stc
sbb
popa
pop
(bad)
mul
test
fnstenv
dec
das
daa
jns
dec
add
out
cwde
retf
mov
inc
clc
sar
pop
cwde
cmp
pop
in
data16
xchg
mov
and
sahf
stos
mov
int
ret
jmp
loop
out
xchg
dec
push
scas
pop
cmp
inc
retf
lds
and
bound
(bad)
adc
pushf
pop
retf
push
mov
xor
xchg
call
mov
mov
inc
and
and
dec
add
push
retf
fisttp
mov
mov
dec
fsub
and
ret
ror
xchg
mov
loope
add
rcr
xchg
int3
dec
inc
fwait
(bad)
sahf
icebp
je
in
clc
fidivr
dec
xor
rol
repz
out
cmp
inc
scas
pushf
aad
ror
xchg
aam
sub
dec
push
pop
jne
inc
daa
or
add
add
and
mov
and
inc
pop
idiv
rol
sub
gs
mov
and
aad
(bad)
dec
inc
push
adc
pop
xchg
mov
(bad)
fdiv
xchg
jb
ds
int3
dec
movs
inc
inc
in
push
cwde
ret
and
fsub
leave
enter
mov
arpl
test
inc
jo
out
mov
dec
(bad)
fwait
std
xchg
scas
out
icebp
addr16
jle
or
jb
pop
clc
jmp
(bad)
cmc
xor
je
popa
sub
cwde
lods
sbb
ja
nop
daa
pop
fld
test
fld
jge
push
imul
leave
into
fwait
mov
adc
fs
(bad)
dec
inc
ret
cmp
rcr
adc
mov
data16
mov
dec
inc
jno
adc
dec
pushf
xchg
xchg
push
cmp
mov
pop
out
imul
push
loope
mov
(bad)
fidivr
cmp
loopne
fist
hlt
inc
mov
and
and
test
stc
pop
iret
mov
cld
or
inc
xor
jecxz
test
cs
icebp
in
in
std
(bad)
lea
push
lds
mov
popa
rsm
data16
cmp
repz
call
pop
test
ds
sti
out
fwait
lods
push
and
mov
out
lods
out
pop
(bad)
es
call
cs
push
out
outs
jmp
retf
rcl
in
fcmovu
jnp
out
mov
cld
std
mov
ins
and
lahf
in
das
xor
cmp
sub
test
mov
retf
mov
enter
addr16
mov
jnp
cmp
mov
or
push
or
jge
sub
or
iret
cmp
(bad)
lods
mov
mov
sbb
je
fstp
mov
cs
int3
dec
xchg
jae
out
lock
in
add
in
inc
xchg
fistp
pop
sbb
dec
ins
sbb
cwde
push
push
sar
jbe
into
mov
push
jbe
inc
ret
mov
fist
jbe
shl
cmp
sar
pop
mov
or
sahf
xchg
out
fstp
xor
stc
add
in
adc
sbb
call
pusha
stos
push
xchg
ss
inc
neg
dec
stos
shl
sub
popf
or
xor
retf
dec
add
sub
sbb
ret
xor
scas
cmc
mov
arpl
test
mov
ror
fdecstp
aaa
fwait
out
mov
retf
pop
cmps
jo
inc
push
or
in
in
jae
cdq
lahf
add
popa
sub
jbe
rol
xchg
xor
inc
int3
inc
push
stos
mov
cmp
leave
addr16
mov
enter
dec
jecxz
sbb
ins
ja
popf
mov
fcmovb
mov
(bad)
jl
and
jge
or
icebp
push
mov
data16
ror
ret
popa
jb
cs
nop
fs
dec
test
inc
out
push
push
fsub
inc
in
outs
sub
and
(bad)
mov
stc
xor
push
mov
adc
mov
ficom
pop
mov
aad
sub
jmp
lods
jno
jmp
std
psubd
leave
add
retf
shl
sub
jge
ss
into
stos
ins
or
push
xchg
popf
call
jne
leave
mov
dec
ss
cdq
push
xchg
and
mov
test
add
mov
(bad)
jae
mov
adc
js
or
popa
jg
inc
shl
cmp
add
mul
adc
sub
nop
ins
outs
fs
and
and
(bad)
lea
sbb
jo
adc
not
and
ins
enter
stos
test
xchg
mov
out
int
cdq
pop
push
retf
jge
sbb
sbb
sar
dec
mov
push
dec
call
jne
pop
push
fidiv
push
mov
call
adc
lahf
fsubr
xor
bound
(bad)
mov
clc
inc
nop
ja
and
lock
jno
adc
out
dec
lods
je
cmp
xchg
stos
dec
movs
gs
aam
arpl
dec
(bad)
ins
inc
pop
enter
pushf
sub
sub
call
leave
int3
push
mov
fstp
mov
xchg
mov
loopne
mov
sub
mov
sbb
mov
out
jne
test
test
loop
imul
test
dec
aaa
inc
mov
mov
leave
mov
fsubr
cmps
push
pop
xor
sub
pop
adc
lea
push
mov
dec
cmps
dec
cdq
popa
sbb
or
inc
lock
xor
add
sub
xor
mov
je
mov
lea
adc
adc
sbb
sahf
mov
jp
aaa
jne
or
mov
aad
sub
inc
sti
inc
or
sbb
mov
nop
pop
mov
addr16
sbb
jp
lods
push
out
push
or
fwait
stc
mov
call
mov
es
and
test
mov
jmp
mov
cmp
dec
daa
mov
xchg
pop
fbstp
aaa
mul
je
test
xlat
xchg
retf
bound
push
dec
or
(bad)
icebp
in
or
shl
jae
retf
dec
inc
xchg
jbe
jb
and
es
xlat
dec
xor
inc
adc
mov
fcomi
icebp
outs
cmp
sti
jno
add
sbb
scas
cmc
jno
ret
and
inc
xchg
add
push
xchg
inc
and
add
add
mov
push
push
or
les
test
fcomp
lds
fsubr
icebp
xchg
add
out
push
out
push
adc
add
and
shr
jl
out
inc
jecxz
idiv
push
jbe
pop
in
mov
cmp
ficomp
repnz
mov
xchg
mov
cmps
jl
imul
sub
mov
jecxz
or
cmp
mov
jae
jae
sbb
push
lods
or
xor
jp
test
test
fwait
jge
daa
(bad)
mov
(bad)
pop
sbb
lea
push
jge
sbb
das
fstp
ror
pop
in
out
add
ja
fwait
add
shl
fistp
mov
jbe
xchg
neg
ins
fistp
xchg
sub
add
sbb
sub
outs
sti
bound
cmp
inc
and
idiv
xor
call
pop
add
inc
imul
cdq
(bad)
jo
ret
mov
push
pop
or
hlt
push
addr16
jg
imul
inc
popf
outs
rcr
jecxz
repnz
sub
popa
xchg
cmp
xchg
das
iret
call
leave
cmps
jmp
shl
aas
sbb
or
fnstenv
imul
adc
push
dec
mov
test
outs
or
inc
clc
jg
fidiv
movs
mov
sub
dec
sti
jmp
sbb
pop
call
lods
movs
push
rol
stc
dec
sbb
imul
hlt
mov
add
xchg
push
in
loope
and
pop
pushf
cmp
push
test
fnstsw
sub
int3
out
stos
imul
mov
scas
ret
and
jl
xor
adc
lods
popw
xchg
dec
xlat
inc
sahf
inc
icebp
lock
sub
aam
pop
push
adc
fsub
mov
add
jae
cmp
or
xor
jo
outs
pop
lea
les
or
mov
jge
adc
outs
cmp
mov
dec
sbb
xchg
inc
push
xor
test
push
rcr
xchg
mov
repz
out
sub
cmp
push
cmps
jns
sub
inc
dec
loop
sets
out
call
pop
cli
fmul
and
sub
popa
mov
stos
jae
sub
mov
xor
test
pop
mov
push
cmc
ret
stc
test
es
xchg
and
xlat
push
or
arpl
out
fidivr
repz
nop
sahf
inc
les
in
mov
add
xlat
push
ja
sar
and
jecxz
mov
fild
cmc
inc
leave
pop
xchg
mov
xchg
jae
pop
cmp
data16
daa
sub
lods
(bad)
fucomi
out
iret
fimul
ror
nop
imul
call
pop
int3
test
xchg
les
cmp
inc
push
xchg
data16
sub
xor
push
xchg
pop
and
and
adc
inc
imul
sub
push
xchg
scas
loopne
loopne
mov
sub
xchg
inc
out
cdq
mov
push
pop
popa
push
(bad)
iret
or
aaa
ins
mov
add
fist
dec
lock
mov
pusha
int3
mov
stos
popa
popa
adc
mov
scas
mov
int
hlt
shl
stos
pop
sub
sbb
mov
push
jb
jb
jmp
int
sbb
(bad)
aaa
and
dec
add
lahf
cmp
clc
sbb
or
push
and
and
cmp
mov
ret
xchg
(bad)
cmc
jo
bnd
pop
pop
js
pop
mov
pop
repnz
in
dec
cmp
cdq
bound
lds
iret
mov
ret
fwait
pop
leave
cmps
mov
cmc
cmp
imul
jmp
push
cmp
sbb
inc
mov
jbe
and
(bad)
and
fisub
fstp
jle
push
ds
and
inc
std
adc
mov
int3
loop
pop
cmp
jle
pop
sub
pop
bound
pop
int3
cld
sar
sbb
xchg
js
popa
imul
and
xor
xchg
inc
dec
aaa
pop
mov
jo
and
jmp
sbb
or
xchg
lds
jo
mov
dec
cmp
pop
popf
add
add
mov
dec
push
jecxz
movs
pop
inc
out
xchg
jmp
ret
sar
fsub
aaa
cli
popa
pop
call
fmul
xor
push
cmps
sub
outs
jmp
stos
sub
and
dec
dec
mov
xor
xlat
and
jnp
pusha
lods
out
push
jbe
fdivr
xor
ss
mov
adc
fdivr
mov
pop
lds
adc
sub
push
cmp
and
movs
test
js
lods
dec
pop
arpl
loope
dec
xchg
push
mov
jp
pop
retf
jl
lods
sti
sub
lods
adc
xchg
sar
imul
adc
js
cmp
outs
fstp
and
pop
xchg
jmp
or
inc
push
mov
push
stc
enter
nop
jecxz
js
lds
ja
sub
mov
cwde
call
(bad)
dec
dec
pop
js
leave
dec
jns
nop
pop
pop
shl
sbb
arpl
pop
out
or
mov
ret
aas
mov
mov
push
in
retf
mov
cmps
jmp
clc
dec
test
(bad)
cld
jbe
pop
jae
adc
sahf
out
icebp
adc
xchg
pop
mov
sbb
xchg
xchg
mov
ss
iret
call
stos
mov
bound
mov
(bad)
mov
pushf
mov
cdq
pusha
sbb
leave
mov
xor
add
movs
pusha
ds
test
pop
sub
mov
(bad)
add
(bad)
cmps
fmul
mov
mov
push
jmp
jnp
sub
mov
adc
xchg
push
std
mov
sub
lea
fs
lods
mov
jmp
arpl
cmp
and
call
int3
sub
cld
or
(bad)
or
xor
fs
daa
pop
inc
aas
fadd
fcomp
jo
loop
mov
and
mov
popa
xor
je
out
pop
dec
pushf
in
adc
and
test
mov
scas
jg
push
add
push
fidivr
loop
test
ja
imul
sub
push
pushf
dec
out
ss
dec
xchg
or
jnp
lods
xor
adc
fwait
push
sbb
xsave
mov
pop
pop
add
dec
scas
adc
movs
(bad)
or
addr16
jl
scas
test
dec
pop
nop
out
jns
imul
popa
fwait
addr16
in
or
iret
fcmovne
add
add
jmp
and
fisub
arpl
test
jnp
jmp
into
cmc
inc
cmp
sbb
inc
adc
pop
pop
daa
mov
inc
pop
call
xor
sub
mov
call
inc
call
call
or
adc
xor
mov
jge
pushf
inc
in
mov
and
(bad)
not
mov
dec
jb
mov
iret
jno
push
clc
xor
in
lds
(bad)
(bad)
xchg
clc
and
daa
setbe
aaa
jg
je
test
dec
inc
hlt
aam
cmp
cli
imul
push
add
mov
jp
int
mov
lods
shl
(bad)
fwait
or
das
shl
stos
ror
pushf
mov
push
mov
sbb
push
loop
and
mov
pop
and
lock
or
jg
in
test
jecxz
dec
or
push
push
add
iret
test
lahf
push
sub
scas
xor
popa
rcl
sub
or
and
mov
push
xchg
fiadd
pop
inc
test
push
pusha
clc
std
sub
xchg
std
iret
test
fdivr
rcr
cld
gs
into
xchg
mov
adc
push
pop
and
dec
(bad)
fdiv
dec
inc
mov
cdq
leave
push
ret
mov
push
iret
xchg
jb
mov
jl
es
sub
sub
push
cmp
ds
in
add
(bad)
push
xchg
pop
out
aas
cmps
ss
out
ds
sub
inc
pop
jg
je
push
add
pop
mov
test
fiadd
test
and
fidivr
cwde
(bad)
push
ja
pop
jle
push
jmp
or
outs
pop
cmp
adc
xchg
mov
jl
push
jge
xor
(bad)
mov
inc
adc
xchg
adc
lea
mov
ins
repz
fsub
jns
push
inc
in
bnd
(bad)
mov
and
(bad)
out
jge
imul
inc
dec
mov
cld
push
inc
adc
lods
adc
inc
neg
loope
aaa
bound
xlat
bound
pop
icebp
mov
cmps
lock
dec
fistp
fldcw
ret
dec
imul
in
mov
adc
jecxz
or
lahf
arpl
je
mov
xchg
or
stc
mov
xchg
int
cmp
(bad)
mov
jno
add
cmp
retf
dec
mov
(bad)
(bad)
pop
ins
cmp
div
sub
repnz
cs
mov
sbb
lock
cmp
sub
sub
jno
mul
aad
aaa
and
pop
loopne
pop
dec
push
mov
and
frstor
adc
sti
cs
lahf
push
stos
dec
dec
(bad)
push
pop
mov
rol
ret
cmp
xor
inc
or
dec
pop
push
xchg
push
sbb
sbb
sbb
das
inc
sub
jns
stos
mov
mov
dec
stos
jg
and
push
fst
aad
lea
jbe
(bad)
test
mov
inc
jg
pop
pop
(bad)
rcr
mov
cdq
dec
retf
fcomi
jg
test
inc
enter
add
fsub
fwait
push
addr16
or
out
es
and
dec
mov
lods
cmp
adc
and
xchg
imul
sbb
popf
xor
not
fsubr
bound
jnp
add
sbb
in
adc
xor
and
in
mov
jge
popa
in
hlt
xchg
cmp
mov
std
or
test
pop
cs
call
rcr
jp
mov
movs
jmp
scas
xor
data16
outs
jmp
ins
shr
in
or
pop
popf
dec
popa
mov
xchg
inc
ds
xor
imul
push
mov
dec
in
xor
icebp
ja
ret
adc
rol
dec
push
mov
shl
cmp
aam
xor
or
push
xor
cmp
icebp
mov
repz
mov
popf
out
imul
test
inc
dec
push
hlt
fs
outs
add
out
sbb
sbb
add
fnstcw
sub
cmp
fimul
inc
cdq
jns
xchg
adc
inc
dec
leave
mov
cmp
pop
in
(bad)
pop
stos
call
movs
bound
ret
(bad)
push
adc
inc
int3
fild
mov
push
les
cmp
js
(bad)
lock
jle
sub
repnz
cmp
pop
in
jmp
test
push
ins
mov
retf
gs
in
idiv
xchg
dec
pop
test
pushf
add
mov
dec
xchg
mov
xchg
ja
not
xor
sbb
into
pop
scas
pushf
repnz
pop
es
fwait
xchg
inc
sub
push
mov
pop
push
pop
stos
mov
mov
xor
aas
ret
(bad)
dec
(bad)
jno
push
jg
cmp
dec
pop
leave
lods
les
mov
xlat
cmp
popa
pop
push
sahf
xor
shr
call
xor
clc
sub
(bad)
std
ret
cmp
or
or
and
enter
dec
scas
add
or
cmp
push
outs
in
pop
mov
adc
div
test
sbb
out
xor
mul
cmc
fwait
inc
leave
shr
(bad)
(bad)
into
aaa
pop
gs
dec
cmp
outs
(bad)
sbb
sti
dec
lods
(bad)
(bad)
daa
mov
inc
pop
mov
fcomp
adc
jle
cmp
imul
stos
push
sbb
aam
int3
in
fcmovb
sbb
lods
ret
sbb
xchg
mov
outs
js
jmp
ret
pop
mov
sahf
add
mov
jo
sbb
sbb
addr16
cmps
and
pop
mov
push
jno
fcmovbe
jp
fisub
inc
pop
inc
fmul
add
xor
aaa
and
push
sub
push
test
jmp
arpl
loop
(bad)
xlat
pop
div
add
push
add
or
push
fs
mov
leave
stos
shl
loop
push
fsubr
add
mov
push
shl
pop
test
clc
and
push
sbb
shl
ret
ins
int3
sahf
sub
arpl
in
clc
xchg
jmp
sbb
out
les
sub
xor
in
xchg
out
sbb
adc
(bad)
push
imul
mov
jecxz
test
jl
adc
stos
or
cmp
xlat
mov
cmp
(bad)
gs
xor
icebp
cld
jae
lea
dec
sete
fistp
retf
mov
retf
mov
cmp
push
out
test
jo
std
sbb
xor
jmp
sbb
imul
add
adc
ret
es
js
jnp
pop
jmp
out
mov
cmp
test
repz
es
xor
pushf
add
sub
cmp
clc
aad
xor
push
retf
mov
test
fidiv
(bad)
jge
jne
outs
js
ja
call
push
scas
xchg
xor
add
sub
pop
cli
out
and
inc
retf
mov
cmp
aam
(bad)
mov
cmps
jmp
pop
dec
dec
test
jle
fmul
std
push
xchg
enter
push
mov
(bad)
xor
dec
shr
xor
fiadd
dec
push
pusha
xor
add
jae
xchg
jge
stc
dec
xchg
lods
idiv
add
mov
pop
and
repz
or
jg
mov
in
cmp
sbb
xor
jae
adc
xchg
(bad)
lahf
sub
repz
test
or
xor
inc
pop
sub
test
out
shr
adc
sbb
hlt
(bad)
out
xchg
add
mov
in
inc
pop
es
out
push
xor
pop
or
out
xchg
cmp
xchg
mov
jne
sbb
gs
inc
dec
repnz
icebp
and
loopne
ficom
dec
imul
psrlw
lahf
mov
cmc
xchg
pop
scas
je
dec
xchg
push
add
(bad)
arpl
dec
in
out
repz
mov
cmp
mov
inc
fdivr
mov
jmp
cmp
sbb
and
(bad)
mov
pop
pusha
into
ins
loopne
ja
outs
adc
push
cmp
clc
add
sbb
test
or
nop
in
sbb
call
sub
sbb
sbb
fbstp
std
pop
int
mov
fneni(8087
pop
mov
ds
ss
je
cmc
out
outs
inc
and
jmp
pop
add
lods
in
pusha
inc
call
das
dec
adc
test
aas
fisub
movs
mov
inc
loopne
js
into
scas
fmul
jmp
jmp
clc
imul
das
movs
mov
pop
xor
shl
mov
outs
fwait
add
push
ror
jno
popa
lahf
repnz
xlat
loopne
jno
or
into
mov
or
lahf
jge
fsubr
pop
push
cmps
shl
mov
(bad)
mov
dec
and
jb
cwde
jb
fisubr
mul
jmp
rol
xlat
das
inc
dec
lea
popf
in
sub
inc
xlat
mov
jmp
into
lods
xchg
mov
call
and
add
lods
cmp
(bad)
mov
xchg
pop
cwde
dec
jmp
movs
dec
outs
and
xlat
mov
shl
iret
mov
push
mov
jg
(bad)
stos
inc
das
and
xor
adc
dec
cmp
dec
or
xchg
jg
call
jl
push
jae
stos
cmc
mov
mov
call
ins
cwde
pop
out
dec
sti
mov
fs
adc
pop
or
push
iret
in
out
sub
fmul
enter
mov
mov
rcr
fwait
xchg
sbb
iret
dec
aaa
xchg
loope
mov
adc
push
pop
xlat
std
rol
mov
mov
inc
push
jp
hlt
jb
out
inc
out
rol
stos
inc
push
sar
stos
cmp
(bad)
mov
data16
sbb
cld
outs
jo
lds
adc
xchg
fld
adc
shl
popa
cmp
mov
ja
scas
and
aas
cmps
cs
sbb
fbstp
inc
lods
stc
push
iret
jl
out
out
mov
sub
dec
add
jns
retf
(bad)
jmp
adc
rcl
fstp
popa
repnz
mov
mov
inc
je
add
mov
mov
loope
cmp
pop
adc
pop
out
sub
in
xchg
xchg
mov
sub
lds
push
mov
mov
add
xchg
fbld
std
mov
jnp
cdq
mov
dec
ja
ret
xor
push
mov
fadd
scas
stc
test
movs
push
movs
frstor
(bad)
xor
sub
ja
fs
stc
and
mov
pop
jo
jp
iret
loope
mov
fld
outs
outs
test
jl
sti
mov
xchg
pushf
xchg
pop
lea
or
xor
jne
mov
inc
pop
pop
dec
aaa
jp
ret
xor
push
jl
xchg
js
mov
retf
pop
pop
inc
ds
mov
pop
pop
in
pusha
(bad)
shr
sbb
add
fldcw
push
adc
jl
xchg
and
mov
xchg
add
test
and
iret
inc
sbb
ja
(bad)
jmp
(bad)
out
dec
mov
arpl
out
pop
pop
and
jmp
retf
(bad)
call
xchg
retf
mov
jns
adc
push
pop
je
jo
sbb
imul
mov
mov
mov
and
mov
ins
dec
cmp
sub
pop
push
lea
fwait
mov
pop
or
jmp
cmps
movs
jge
mov
hlt
adc
cld
cmp
test
jge
inc
jg
jmp
xchg
out
add
gs
hlt
retf
xor
cwde
mov
push
adc
inc
mov
xlat
pop
iret
fwait
int3
outs
test
fisttp
pop
es
imul
mov
(bad)
xchg
push
out
xor
addr16
pop
aam
xchg
add
shl
push
dec
pop
jae
sbb
push
mov
sub
scas
das
push
cmp
push
out
(bad)
das
shr
inc
adc
mov
push
clc
mov
mov
shl
cmps
xchg
sbb
mov
int3
jno
fild
jo
ret
jbe
data16
ja
movs
pop
inc
push
add
sub
movs
jle
movs
loope
dec
mov
ret
mov
jno
lods
enter
fisub
cwde
and
clc
sbb
leave
or
out
cmp
ror
mov
and
inc
daa
cmc
int3
int
js
sbb
xor
dec
jbe
test
sbb
xchg
mov
test
ret
mov
add
mov
(bad)
sbb
adc
adc
xchg
fstp
int
mov
dec
out
adc
or
jno
in
mov
xchg
sub
test
jmp
stos
das
popf
xchg
repz
ins
pop
div
rcr
fisubr
pop
int3
adc
add
and
jmp
loope
mov
outs
xor
test
aas
test
sbb
mov
xor
jno
push
push
sub
inc
mov
test
std
mul
stos
repnz
dec
popf
push
xor
xchg
push
and
cmc
jb
addr16
jecxz
and
and
mov
fstp
shl
lds
mov
sbb
mov
test
sub
inc
stos
hlt
inc
jnp
add
cmps
adc
rol
inc
jge
adc
mov
pop
mov
retf
lahf
stos
push
loope
pop
mov
xor
add
mov
pushf
mov
out
out
push
sbb
push
mov
repnz
loopne
(bad)
out
sub
adc
(bad)
sub
lods
ss
out
sbb
jg
pop
scas
call
nop
xchg
call
jl
(bad)
xor
pop
push
and
xchg
rol
in
movs
pop
nop
fs
dec
push
pop
fisubr
sub
cdq
jp
ret
out
jle
jmp
mov
pop
mov
or
pop
and
into
in
adc
adc
outs
ins
lods
or
js
sbb
xchg
push
jb
inc
and
or
test
test
inc
lds
xor
mul
mov
cmp
(bad)
popf
ja
jae
or
mov
mov
mov
mov
cmp
push
or
loopne
mov
jmp
mov
pop
fidiv
hlt
jae
mov
add
sub
push
dec
jne
mov
mov
xor
inc
sub
push
loope
push
out
pop
cmp
xchg
inc
aas
or
adc
je
xor
(bad)
lock
or
add
fnstcw
pop
jnp
mov
cmp
call
sub
loope
adc
popf
dec
pop
add
xor
enter
hlt
stos
ficom
hlt
les
outs
xlat
in
jbe
popa
cmp
jae
or
or
(bad)
xor
adc
arpl
push
mov
mov
and
cmp
cmps
cli
push
ret
test
jmp
fwait
pop
cmp
js
dec
push
cld
int
lods
push
add
xchg
fcomip
jge
mov
call
mov
mov
jbe
in
out
fbstp
mov
push
call
vcvtps2pd
fnstsw
vcvtsi2sd
mov
ins
mov
jns
movs
jnp
or
dec
or
jle
dec
pushf
movs
pop
mov
stc
or
xchg
in
cmp
(bad)
xchg
or
int
xchg
or
scas
xor
add
jae
int
pop
gs
xchg
pop
nop
inc
test
retf
push
lds
(bad)
and
dec
loopne
pusha
sub
pop
jae
daa
mov
or
shl
popa
sbb
or
int3
iret
int
(bad)
cmp
in
inc
adc
fstp
pop
scas
in
dec
fwait
adc
jb
daa
jns
sub
sub
test
icebp
ja
pusha
jp
movs
int3
jns
iret
sub
aad
add
test
sbb
mov
inc
jmp
jmp
mov
pop
xchg
inc
mov
popa
les
adc
xchg
fist
enter
out
and
mov
jbe
fs
sbb
mov
loope
or
xchg
(bad)
pop
lea
or
xor
inc
push
sub
imul
ret
push
xor
shl
sub
add
and
mov
repz
jecxz
ret
fsub
bswap
iret
cmp
sti
jl
mov
jno
adc
popf
jnp
sub
push
popf
scas
xor
jle
pop
cmp
jne
inc
pop
mov
pop
je
sub
cmp
or
lahf
mov
imul
or
sbb
push
add
and
icebp
addr16
sbb
ja
out
(bad)
xor
in
mov
mov
jp
hlt
lock
xor
jne
pusha
sbb
push
jae
into
(bad)
aaa
test
cwde
push
dec
sahf
ror
mov
aas
inc
loope
pusha
jg
cs
idiv
sahf
call
aas
or
mov
mov
xchg
movs
repz
out
or
pop
mov
push
pop
pop
mov
out
std
cmp
lods
mov
outs
or
fdiv
rol
mov
shl
aaa
loop
push
or
mov
and
dec
repnz
pop
fxch
aas
pop
ds
in
shr
xchg
jl
lea
fcmovb
jmp
popa
fdivr
test
rcl
dec
das
inc
stos
inc
(bad)
mov
icebp
dec
pop
shl
arpl
jg
cmc
mov
mov
and
js
fsubr
xchg
ret
mov
sahf
repz
imul
xchg
bound
lds
mov
pop
mov
popa
xchg
das
jne
inc
pop
leave
pop
in
stos
idiv
sbb
jg
jg
or
jge
fisttp
jmp
mov
js
les
mov
fwait
ret
test
sar
and
pop
int3
cli
jg
push
cmp
fs
cmp
jbe
sub
cmp
dec
mov
push
das
imul
push
(bad)
rol
movs
es
sahf
mov
mov
pop
cmp
xchg
xor
sub
xor
cmp
repz
sti
add
mov
test
in
adc
cdq
int
es
lods
mov
cdq
sub
xchg
mov
adc
into
int
cdq
cmp
mov
ss
scas
lahf
mov
push
fs
push
cmp
xor
ret
sub
ins
stc
enter
(bad)
and
mov
mov
ins
test
xor
sub
repnz
push
or
xchg
aaa
fstp
xor
enter
fild
pop
or
xchg
dec
xchg
jnp
adc
xor
clc
cmp
js
mov
and
jne
jecxz
mov
jl
add
movs
pop
dec
aaa
(bad)
call
sbb
xor
stos
das
adc
in
mov
call
and
mul
push
add
or
test
mov
bound
retf
retf
rol
sbb
dec
jae
xchg
pop
int
addr16
pop
out
enter
pop
cmp
mov
imul
push
push
mov
sbb
add
fisttp
call
retf
pop
mov
pop
(bad)
(bad)
xchg
mov
jle
lahf
mov
in
dec
out
mov
adc
movs
or
pushf
xlat
cmps
sahf
xor
mov
and
in
mov
mov
push
jns
call
push
push
ins
pop
jns
or
pop
ret
cld
inc
pop
cli
and
popf
lods
or
dec
mov
lds
cmc
xchg
mov
sbb
hlt
sbb
push
into
loope
push
mov
and
enter
je
repz
fisttp
(bad)
jle
jne
imul
fld
movs
stc
sbb
dec
retf
cmp
adc
cmp
jmp
sbb
pop
ins
jo
cdq
dec
xor
and
inc
xchg
fidiv
ja
(bad)
ror
sub
jmp
lahf
inc
movs
sti
cmc
dec
retf
and
fist
popa
icebp
dec
and
fcom
repz
dec
mov
fstp
mov
dec
mov
stos
xchg
push
dec
ins
push
and
and
bound
push
sahf
test
repnz
dec
les
fisttp
retf
cmc
and
xchg
(bad)
aaa
(bad)
mov
xchg
retf
push
xor
xor
mov
cld
pop
retf
mov
mov
out
mov
mov
movzx
cmps
jmp
mov
pop
dec
rcl
sahf
lods
icebp
lahf
mov
dec
cwde
hlt
and
fwait
mov
inc
inc
fist
daa
xchg
lods
sti
cmp
jg
lock
push
mov
cmp
sbb
pop
addr16
jno
xor
or
movs
cmp
sbb
call
scas
mov
mov
(bad)
scas
daa
mov
dec
pop
adc
and
mov
xchg
gs
sbb
fs
(bad)
arpl
(bad)
push
jns
pusha
adc
sub
shr
fistp
lahf
lock
iret
sub
test
repnz
push
xchg
outs
leave
movs
inc
cmp
nop
cmp
adc
push
jle
sub
or
in
iret
out
cmps
xchg
arpl
mov
dec
fisub
cmc
(bad)
mov
inc
ins
add
scas
scas
and
sbb
lea
fnsave
or
mov
and
add
push
(bad)
jb
(bad)
cdq
not
out
pop
inc
push
fcomp
(bad)
jecxz
ins
inc
and
sbb
imul
or
out
jge
push
inc
inc
pop
add
add
jmp
test
call
pop
jb
jp
int3
test
test
(bad)
nop
hlt
jge
lahf
test
add
mov
and
xor
pop
mov
xlat
mov
shr
jmp
(bad)
(bad)
mov
out
cmp
push
mov
mov
push
adc
xchg
cmps
mov
imul
mov
xchg
callw
mov
pop
and
add
rcr
mov
out
push
lods
mov
test
dec
cld
xor
xchg
cmps
mov
inc
push
aam
and
cli
aad
fidivr
rcl
(bad)
mov
xor
cs
prefetch
or
movntps
outs
push
stc
xchg
mov
fstp
fwait
ret
pop
xchg
xlat
jle
dec
or
loop
into
jno
jp
data16
adc
sub
leave
mov
stc
stc
inc
mov
sub
pop
jmp
inc
xchg
repz
push
sbb
fdivp
mov
add
div
iret
imul
(bad)
retf
mov
push
mov
dec
stc
push
push
mov
dec
sbb
aad
dec
dec
aas
add
stos
xor
retf
sbb
scas
aad
cmps
enter
shl
popf
jnp
(bad)
pop
jb
sar
mov
add
jae
dec
add
clc
dec
(bad)
push
jl
xchg
(bad)
pop
fadd
lods
and
bound
rol
xchg
gs
(bad)
mov
mov
bound
adc
xor
mov
inc
(bad)
add
cmp
cmps
xor
prefetchwt1
nop
fstp
icebp
pop
test
(bad)
std
(bad)
xlat
pop
mov
aas
and
call
mov
jbe
sub
inc
jo
xor
pop
(bad)
test
fstp
xor
in
outs
(bad)
aas
and
fwait
mov
ins
adc
cmc
and
and
fsub
call
std
dec
push
dec
cmps
xchg
xchg
adc
in
pop
imul
mov
retf
test
pop
repz
mov
adc
(bad)
aaa
test
popf
mov
les
scas
pop
ins
sar
fs
xchg
pop
pushf
sbb
(bad)
fs
ss
jnp
out
js
fsubp
push
ret
adc
into
jl
mov
pop
loope
xor
adc
daa
inc
jmp
push
idiv
adc
cdq
mov
lds
dec
sbb
hlt
xchg
adc
(bad)
xchg
rcl
retf
and
lods
fidiv
out
cmp
add
xchg
ss
pop
lock
adc
test
xchg
push
pop
(bad)
push
xor
(bad)
hlt
adc
sbb
cmp
aaa
pop
ficom
inc
jmp
in
cmp
sub
and
icebp
mov
mov
out
int3
ss
nop
pop
inc
push
(bad)
push
push
popa
out
sar
pop
pop
mov
and
popf
icebp
xchg
push
mov
mov
add
dec
xchg
sub
and
inc
call
jne
(bad)
stos
mov
ins
imul
aas
jb
jne
out
fwait
and
call
and
aad
jl
inc
outs
sub
add
(bad)
xor
dec
mov
mov
movs
push
mov
jge
loop
add
stos
loope
mov
adc
and
inc
sbb
jmp
pop
daa
call
movs
lds
addr16
adc
jne
xchg
into
xor
out
push
rcr
lods
cmc
mov
or
(bad)
mov
ficom
sbb
and
mov
not
jne
push
into
sbb
dec
outs
in
jo
or
and
mov
pop
dec
je
sahf
out
rol
xor
mov
ds
mov
in
(bad)
adc
or
into
test
xor
stos
jmp
and
adc
into
xchg
xor
outs
lds
or
les
(bad)
rcr
or
jmp
aas
pop
fistp
and
or
cmp
jmp
mov
in
shl
imul
inc
inc
cmp
xor
(bad)
repnz
enter
scas
jp
mov
rcr
arpl
adc
or
cmp
retf
mov
stc
cmp
jp
ins
faddp
test
push
and
ja
jmp
pop
jno
ret
pop
adc
add
mov
dec
or
or
jecxz
ins
jo
xor
daa
xchg
jg
jns
pop
jns
pop
loope
scas
jg
(bad)
call
jns
sbb
jae
jmp
mov
pop
push
(bad)
xchg
out
xchg
mov
sar
mov
(bad)
mov
push
or
lods
jg
das
lds
aad
push
adc
cmp
daa
mov
clc
inc
push
fcom
pushf
xor
pop
and
cmp
(bad)
xchg
bnd
sbb
fstp
retf
and
rcr
jl
sahf
shl
es
cdq
imul
pop
cpuid
shl
les
jle
les
fwait
push
imul
or
sbb
push
jge
out
lea
fdivr
dec
add
in
popf
pushf
(bad)
pop
ins
test
bound
nop
mov
sub
shl
push
in
and
lods
adc
nop
es
pop
cmc
jo
gs
popf
loopne
add
fisttp
outs
mov
mov
fsubr
mov
stc
jo
retf
inc
cmp
out
nop
sub
into
push
dec
xchg
mov
popf
and
(bad)
or
jp
and
(bad)
nop
in
push
xchg
cdq
rcr
pushf
and
dec
xlat
jmp
arpl
or
into
mov
imul
pusha
dec
ror
inc
xchg
dec
and
stos
loop
add
push
or
xchg
fsubr
call
adc
push
lahf
mov
lods
mov
adc
fs
jle
popa
or
push
aam
aad
xchg
or
aas
mov
pop
imul
dec
in
add
cli
or
adc
pop
and
jle
out
(bad)
and
jmp
pop
cdq
mov
xchg
mov
mov
int
sub
mov
adc
xor
data16
cs
rcr
retf
std
aaa
xchg
cmps
jmp
(bad)
stos
xchg
and
inc
stc
push
mov
ds
test
nop
adc
lods
pushf
pop
retf
std
test
jmp
dec
(bad)
imul
loope
pop
push
int
arpl
ds
aam
push
xor
lahf
push
or
xchg
popa
aas
xor
jp
inc
or
popf
cwde
stos
dec
int
xor
retf
mov
sti
scas
fst
fisub
sub
sbb
and
cdq
sub
pusha
leave
inc
aad
lea
repz
fld
shr
fld1
rol
adc
cmps
cmp
ins
loop
pop
mov
xor
je
mov
xchg
aas
iret
mov
or
clc
jmp
gs
nop
mov
shl
or
and
mov
ja
jo
sub
cmp
jmp
or
mov
test
or
cdq
add
lahf
(bad)
dec
fcomp
xor
stc
pop
lea
adc
push
mov
mov
rcr
jns
in
cld
mov
shr
adc
sbb
add
and
add
shr
mov
mov
mov
add
sub
push
fs
mov
xchg
add
xor
mov
pop
xor
push
cdq
adc
and
cmp
dec
ja
repz
jo
(bad)
sub
fmulp
iret
cmc
aas
lahf
scas
ret
sbb
and
adc
pop
mov
jnp
cdq
(bad)
xor
xchg
cmp
jbe
imul
xchg
pop
jb
test
jle
jmp
inc
clc
jne
inc
lods
sbb
fild
jl
aas
pop
sbb
adc
fisub
xchg
repnz
jg
inc
popf
sbb
inc
fadd
jmp
test
push
scas
push
pop
inc
sub
test
loope
add
xchg
ins
cmp
mov
push
hlt
leave
jnp
and
push
or
scas
idiv
bound
ss
pop
and
inc
out
mov
push
sub
cmc
xchg
sbb
out
xor
mov
repz
mov
xchg
cmp
movs
inc
(bad)
dec
or
in
shl
push
add
jmp
sub
adc
das
mov
inc
sub
nop
leave
mov
push
xlat
iret
dec
mov
inc
iret
es
hlt
add
mov
mov
adc
mov
cli
pop
push
in
xchg
aas
sbb
movs
and
pushf
mov
scas
xchg
ins
add
pop
xor
jecxz
test
inc
ds
or
daa
adc
adc
adc
push
ins
mov
sbb
stos
call
enter
inc
mov
jmp
fs
je
movs
sbb
arpl
clc
jno
fadd
mov
jp
mov
(bad)
pop
push
les
xchg
mov
mov
shl
or
inc
dec
jmp
adc
adc
adc
aaa
mov
jb
jns
repz
(bad)
jge
mov
cmp
es
jnp
daa
cmp
mov
pop
sti
and
outs
jmp
(bad)
jns
xchg
int
vpmacssdql
mov
retf
push
lds
or
xchg
js
outs
mov
pop
and
stos
sub
mov
cdq
cmp
pop
xor
fs
lahf
sbb
repnz
fsub
inc
aam
hlt
imul
dec
lock
jmp
std
sub
push
jg
mov
jb
test
loope
push
inc
shl
push
rcl
hlt
jne
enter
add
mov
test
popa
aaa
pop
sbb
out
or
xor
cli
into
pushf
mov
adc
iret
pop
inc
xlat
inc
loope
mov
xor
mov
into
jecxz
nop
loopne
pop
push
stc
mov
movs
jnp
dec
push
inc
pop
xchg
pop
mov
icebp
aam
push
xchg
(bad)
xchg
mov
sub
sbb
ja
lds
mov
mov
xchg
jb
sar
jnp
fs
or
shl
sub
sbb
sti
push
xchg
sub
popf
icebp
add
int3
js
dec
xchg
sub
cmps
iret
jb
gs
mov
jmp
mov
fwait
outs
sti
cmps
je
(bad)
ficomp
into
test
inc
and
add
mov
cmp
xchg
add
inc
push
push
adc
aaa
jb
retf
(bad)
adc
or
gs
fdiv
cmp
xor
ret
cli
out
test
and
cld
xor
fsub
(bad)
repz
push
(bad)
fistp
popf
add
sub
xor
adc
(bad)
das
call
std
inc
movs
inc
push
and
push
cmps
mov
jl
sub
les
cmps
mov
xor
and
(bad)
loop
or
pushf
arpl
(bad)
fcomp
(bad)
daa
retf
xchg
mov
jb
fwait
pushf
sar
aaa
outs
hlt
add
es
cdq
xchg
jmp
jge
retf
cmp
(bad)
mov
pop
cmps
ficomp
push
clc
enter
in
cmp
ret
(bad)
cdq
mov
scas
xchg
ds
pop
push
fwait
les
jbe
cmps
pop
ficom
jbe
xchg
and
repnz
pusha
stos
mov
pop
mov
(bad)
xor
or
pop
mov
ja
scas
xchg
add
aad
mov
mov
or
(bad)
jo
leave
jae
mov
test
mov
cdq
sub
call
cmc
imul
(bad)
jmp
test
cmp
mov
fbstp
stos
mov
ja
or
push
gs
cdq
loope
aas
shl
nop
cmps
push
imul
push
add
imul
std
div
aas
and
popa
pop
cmp
out
imul
pushf
jno
dec
sub
cwde
(bad)
mov
sahf
mov
inc
mov
into
cmp
sub
cmp
adc
shr
push
mov
lods
fild
(bad)
pop
int
stc
mov
daa
bound
or
mov
call
out
sbb
pop
dec
(bad)
pop
jl
aaa
or
xlat
cmps
adc
push
xchg
mov
pop
dec
jnp
fmul
es
gs
jmp
rol
add
in
inc
and
out
test
cmc
inc
inc
out
mov
pusha
dec
shl
wrmsr
jmp
push
imul
xchg
or
fistp
xor
inc
rcr
adc
mov
mov
push
jb
fwait
mov
cmp
pop
outs
rcl
stos
cli
imul
add
inc
xor
cld
aas
(bad)
sbb
ss
jecxz
ror
push
push
aaa
adc
cmp
mov
xor
xchg
data16
push
pop
mov
jg
lods
mov
lock
xor
lods
pushf
sub
push
push
ds
xor
loope
dec
cmp
call
cwde
or
scas
popf
mov
lods
cmp
mov
icebp
adc
adc
jno
mov
cmps
lds
cmp
mov
inc
sbb
add
leave
inc
mov
and
out
xchg
cmp
mov
out
loop
inc
loopne
ss
cmps
mov
xlat
or
sub
inc
fdiv
lea
dec
mov
dec
(bad)
std
dec
(bad)
cmp
into
aaa
dec
das
(bad)
jp
xchg
pop
stc
adc
pop
ret
fwait
mov
aas
sub
fcmovnb
ret
js
jle
add
mov
nop
imul
sahf
mov
xchg
inc
idiv
jge
daa
fiadd
stos
push
mov
(bad)
in
imul
int3
mov
push
sub
xchg
dec
in
jmp
retf
shl
xchg
iret
fdivr
or
push
mov
nop
mov
inc
fsub
movs
pop
push
pop
cmp
ror
pop
xor
enter
clc
adc
retf
fild
neg
jecxz
mov
cmps
clc
xor
push
inc
dec
adc
xchg
dec
ret
or
dec
inc
push
cmc
loopne
out
and
out
pop
jns
add
fistp
rol
imul
push
aaa
mov
cmps
cdq
pop
hlt
mov
mov
int
popf
fbld
mov
aad
out
push
cmp
adc
aam
adc
inc
sbb
stos
dec
or
loopne
fwait
mov
fwait
pusha
stos
loopne
push
mov
lock
in
mov
adc
lods
push
lods
inc
repnz
pop
sti
xor
(bad)
lahf
push
jne
jo
pop
sbb
sbb
jno
ds
addps
std
add
xor
jge
pop
je
jge
stos
mov
test
imul
dec
adc
cli
(bad)
and
cdq
and
popa
rol
jo
add
lahf
mov
and
push
xchg
cli
sub
xchg
pop
mov
mov
faddp
dec
pushf
add
pop
sbb
jb
jae
call
push
xlat
jmp
pusha
mov
test
sub
and
cwde
mov
sbb
fdiv
push
sbb
and
imul
or
fcmovnu
pop
sub
and
scas
cmp
cmps
bound
mov
pop
repnz
push
cmp
push
popa
mov
fisub
xor
cmp
outs
sub
ffree
(bad)
and
xchg
jecxz
pop
xor
push
sub
dec
shl
push
dec
push
shl
iret
repnz
imul
mov
int3
ja
cmps
mov
push
mov
or
jmp
sub
aam
xchg
rcr
retf
mov
(bad)
clc
jns
dec
and
jno
mov
sbb
cmps
mov
test
xchg
xor
cs
sbb
add
mov
and
adc
stos
clc
cmps
pop
sub
xchg
out
push
retf
pop
in
mov
push
adc
outs
adc
into
jnp
jnp
aaa
lahf
in
jno
push
imul
jno
inc
into
sahf
mov
loope
in
inc
std
std
mov
ds
pop
cmp
push
pushf
cli
loop
mov
jg
add
outs
stos
loopne
(bad)
xchg
mov
xchg
pop
mov
sar
xlat
sbb
pop
loop
mov
fldcw
rcl
adc
ds
push
stos
adc
sti
loop
dec
sbb
lahf
cmps
cwde
lods
mov
stos
push
test
fimul
pop
int
adc
mov
sub
loope
inc
add
dec
movs
mov
mov
jnp
cmps
mov
mov
pop
outs
(bad)
adc
(bad)
pop
arpl
or
jno
aaa
rcl
gs
jns
test
cmp
inc
jmp
inc
cld
(bad)
sbb
dec
mov
sub
lock
mov
adc
adc
mov
dec
pop
int
cmp
jns
push
and
lods
js
(bad)
jns
(bad)
jg
cwde
and
push
xor
pop
rcr
pop
es
enter
shl
and
nop
xor
lahf
add
retf
sub
ret
loope
lahf
loopne
and
xchg
adc
xor
aas
inc
fdivr
sub
mov
clc
sub
loop
nop
out
inc
es
cdq
push
jb
adc
add
mov
mov
cdq
and
pushf
movs
pop
mov
pop
shr
cmp
or
dec
int
sbb
push
movs
fbld
into
(bad)
push
xchg
bound
mov
mov
pop
loop
cmp
shl
inc
inc
mov
lahf
cmp
leave
or
aad
cdq
test
and
push
dec
(bad)
sbb
gs
inc
iret
sbb
pop
int3
out
dec
pop
mov
std
fistp
cmp
dec
mov
mov
inc
lock
sub
adc
pop
pop
xchg
scas
cld
add
push
jbe
jo
jl
cmp
jmp
jp
add
jle
ror
mov
test
int3
sbb
pop
call
aaa
dec
in
dec
pop
out
(bad)
pop
jae
push
inc
add
(bad)
adc
cmp
xor
ja
fcmove
sahf
retf
mov
cmp
addr16
xor
push
int3
in
loop
repnz
aaa
or
or
push
je
scas
hlt
rcl
adc
lods
nop
push
or
lods
dec
mov
test
jecxz
pop
jecxz
fbld
add
jnp
xor
adc
xchg
popa
lea
jbe
pushf
add
sub
movs
cld
aaa
push
popf
hlt
ret
out
scas
aam
stos
cwde
test
push
push
inc
leave
cmp
iret
in
data16
enter
clc
push
mov
mov
(bad)
jmp
in
rcr
sbb
rep
mov
iret
jno
je
cmp
push
dec
push
xchg
jmp
lods
outs
(bad)
out
jp
arpl
add
stos
sub
fld
cmp
xchg
jmp
mov
xor
adc
sub
xor
push
shl
mov
sub
xchg
jecxz
into
nop
mov
adc
sbb
call
in
and
data16
loope
repz
push
mov
jb
adc
stc
ds
xor
fmul
inc
ret
sar
fnstcw
lea
mov
loope
jb
pop
int
ret
aaa
rcr
ret
vrcpss
push
hlt
push
jae
fsincos
popf
imul
iret
loope
je
push
jbe
aad
adc
jge
inc
inc
xchg
enter
and
inc
sbb
mov
arpl
out
adc
ret
xor
jmp
daa
mov
(bad)
cli
syscall
fdivr
xchg
hlt
dec
in
xor
dec
call
or
sbb
out
push
pop
fwait
pop
adc
stos
sub
xchg
and
enter
jge
xchg
dec
xchg
inc
(bad)
cli
mov
xor
pop
dec
outs
hlt
jae
fisubr
aaa
(bad)
pop
xchg
popa
ja
dec
add
popf
push
mov
mov
jle
stos
iret
sbb
and
packssdw
adc
popa
sbb
cdq
mov
jge
sbb
cmp
hlt
dec
mov
xor
(bad)
addr16
in
mov
pop
and
xor
clc
in
dec
sbb
fcmovbe
mov
sti
test
push
sbb
sub
mov
mov
repnz
inc
pop
jno
mov
and
jmp
cmp
mul
jbe
cmp
ror
xchg
cmp
or
pop
rcr
not
stc
xchg
pushf
mov
fdivr
imul
jle
dec
int
fcmovne
inc
jle
sti
sti
and
mov
dec
inc
mov
add
xor
cdq
neg
or
cmp
mov
jmp
lea
or
stc
xchg
sub
mov
call
call
div
iret
add
bswap
sti
daa
mov
mov
jbe
mov
and
pop
dec
in
cmp
mov
xchg
scas
sbb
mov
pusha
loop
inc
mov
int
cmp
sahf
repnz
mov
fwait
(bad)
pop
jmp
sbb
retf
test
mov
mov
ror
pushf
mov
test
rcl
jecxz
lds
fmul
mov
jle
xor
sub
pop
ror
or
loope
dec
fcomp
adc
xor
into
sar
mov
lods
xor
jl
push
adc
movs
add
(bad)
cmps
push
dec
sub
mov
adc
jg
stos
inc
(bad)
loopne
aam
(bad)
in
ins
sub
xor
addr16
lahf
nop
sbb
movs
and
dec
sub
arpl
add
jle
movq
sahf
adc
sub
inc
push
or
gs
out
mov
jmp
mov
in
ds
mov
sar
adc
ja
gs
cmp
mov
fs
addr16
test
les
fld
mov
daa
je
push
fcomp
in
loopne
add
outs
jbe
xchg
enter
cmp
cmc
dec
lock
jbe
adc
ja
daa
dec
cmp
sbb
loope
push
jmp
and
icebp
es
pop
or
cmps
adc
dec
and
js
jbe
or
push
cmp
enter
mov
pop
pop
xchg
push
adc
add
cmps
es
dec
int
xchg
lea
out
jns
jbe
mov
stos
in
mov
xchg
shl
push
xchg
into
jl
add
outs
cli
test
and
jbe
mov
adc
imul
or
add
pop
pushf
mov
xor
fisttp
mov
pop
ins
mov
ret
fidiv
jno
sbb
popa
into
popa
jl
test
call
test
pop
movs
cmp
or
sub
mov
stc
xchg
gs
jae
mov
or
xor
pusha
cdq
sub
js
dec
sbb
or
aas
xor
leave
pop
and
sbb
and
xchg
inc
ret
aad
pop
cmp
adc
in
int3
inc
sahf
add
mov
jb
and
and
cli
in
icebp
push
adc
dec
aad
push
sbb
arpl
sub
xor
or
pop
repnz
xor
jmp
dec
fmul
lods
or
mov
sahf
mov
jmp
fcom
scas
push
test
push
jbe
pusha
adc
iret
mov
add
inc
sbb
cld
sub
mov
and
jp
stos
add
ret
popa
adc
fisttp
(bad)
jg
ss
test
fdivr
mov
mov
jmp
lods
push
sub
imul
addr16
sub
sub
sub
cwde
dec
pop
js
add
pop
movs
sbb
mov
int
call
xchg
aam
pop
jmp
test
jb
dec
xor
js
fsubr
and
push
movs
not
sub
sbb
daa
in
xor
bound
enter
push
pop
xchg
or
sub
(bad)
stc
call
mov
xlat
push
mov
mov
sub
icebp
mov
aaa
idiv
mov
sti
mov
or
cdq
out
add
(bad)
loop
or
add
cdq
rol
jge
neg
lods
arpl
add
in
test
call
jecxz
cmps
into
retf
jne
pop
mov
out
adc
xor
cli
pop
data16
mov
lods
or
adc
sub
repnz
push
cdq
mov
icebp
inc
jle
mov
mov
add
push
jb
jo
push
mov
and
call
jb
imul
inc
cmps
jo
mov
nop
mov
mov
lds
mov
rcr
jg
movs
cmp
cdq
inc
adc
iret
mov
xor
xchg
and
mov
add
mov
sbb
mov
cmp
rol
(bad)
jns
cli
jo
adc
in
push
test
jmp
adc
jns
jnp
scas
cli
dec
cmp
arpl
inc
jecxz
mov
in
fmul
xor
pop
fcom
adc
and
jge
mov
mov
sar
int3
inc
stos
jnp
cli
and
outs
repz
ds
fmulp
sub
jl
xor
retf
imul
push
jge
lock
fnstcw
ss
mov
clc
or
adc
adc
out
(bad)
jecxz
push
lods
mov
pop
sbb
ds
jmp
mov
xor
test
cmc
aad
cdq
jo
jl
shl
mov
loope
popa
cmps
fdiv
dec
and
mov
out
and
inc
pushf
jno
jb
sub
push
and
imul
push
cmp
inc
or
fs
movs
mov
cmp
movs
mov
ins
or
add
xchg
mov
jmp
stos
mov
push
push
mov
mov
sti
repnz
push
mov
and
mov
nop
scas
test
ja
mov
cwde
pop
movs
xchg
repnz
dec
mov
push
xlat
lods
das
bnd
mov
les
xor
add
cmp
je
jno
inc
mov
fisub
mov
hlt
out
call
mov
std
pop
sub
call
xchg
or
adc
add
daa
jae
cvtps2pi
and
ret
dec
push
test
test
pusha
mov
inc
adc
bound
add
test
sti
pop
xchg
aas
jp
call
in
push
cli
jle
lds
test
xchg
push
push
outs
jno
inc
(bad)
pop
jo
shl
fdiv
pop
sub
mov
cmc
inc
xchg
arpl
inc
lods
inc
cmp
mov
xchg
ja
jle
loopne
xor
push
cmp
push
xor
cmp
adc
inc
inc
popa
inc
xor
retf
aad
aaa
add
es
std
imul
dec
movs
and
jb
xchg
popa
sbb
jo
xchg
mov
out
add
sub
pop
into
sub
push
into
mov
dec
retf
retf
push
fwait
ror
push
call
nop
jl
and
popf
lock
and
fs
cmp
rcl
pop
test
rcl
sahf
fucom
inc
jnp
mov
rcr
and
or
mov
rcl
mov
aad
pop
mov
or
adc
icebp
jmp
enter
and
mov
mov
jno
out
js
lea
aam
(bad)
and
and
xchg
and
jmp
mov
dec
inc
(bad)
xor
xor
fst
jmp
aaa
aam
push
adc
pop
dec
jge
pop
(bad)
sbb
std
into
xchg
mov
pop
(bad)
(bad)
dec
ficom
imul
dec
push
fld
std
xchg
cmp
cmp
inc
mov
xor
xor
pop
sub
imul
adc
leave
inc
sub
push
and
enter
into
fnstcw
ret
inc
in
inc
and
nop
inc
in
mov
add
xor
test
loopne
out
sub
mov
cmp
fwait
into
or
jnp
loop
test
fisubr
cmps
sbb
xchg
jns
cs
fwait
ins
mov
push
in
pop
hlt
jns
iret
jmp
dec
dec
xor
addr16
(bad)
in
sar
aas
dec
ficomp
add
adc
add
mov
and
jno
xor
dec
jns
mov
jl
cmps
add
mov
mov
and
sub
popf
push
sbb
mov
xchg
pop
popa
sub
jle
sbb
pop
push
mov
cmp
and
pop
(bad)
mov
sar
retf
mov
or
dec
stos
jns
push
in
dec
fldcw
mov
sahf
arpl
(bad)
xchg
(bad)
ss
xlat
push
xchg
push
and
lahf
movs
mov
mov
pop
out
ret
call
sbb
jne
add
mov
repnz
into
scas
mov
ins
mov
ror
sbb
pop
stc
aas
popf
movs
adc
xchg
(bad)
stc
xchg
hlt
in
and
mov
inc
xor
fistp
test
push
je
mov
(bad)
test
rol
mov
dec
loope
sahf
add
cmp
mov
mov
sti
mov
rol
add
int
data16
sbb
out
or
mov
scas
inc
int3
and
inc
cs
add
mov
stos
or
int
in
movs
add
(bad)
call
jo
inc
mov
mov
or
jb
fsub
jne
popa
rol
cwde
pop
ins
popf
clc
xchg
or
mov
inc
cmp
xor
inc
or
test
arpl
push
mov
xor
retf
dec
stc
cmp
test
mov
div
sar
and
scas
aam
aad
sahf
push
inc
out
push
or
aas
mov
pop
and
push
mov
(bad)
(bad)
jl
fmul
inc
pop
sahf
mov
jmp
dec
dec
aaa
or
jae
jns
mov
mov
xchg
pushf
fidiv
loope
push
mov
mov
stos
sar
push
cmp
pop
test
xor
inc
lods
dec
jecxz
cwde
int3
es
mov
mov
cmp
fisttp
shl
in
jecxz
lock
ins
mov
xchg
sbb
cmp
dec
and
and
into
mov
sub
pop
mov
lods
inc
mov
lods
je
mov
add
(bad)
push
xlat
rcr
cmp
or
imul
jmp
pop
inc
iret
add
lea
mov
inc
retf
cmp
aam
popa
shr
retf
add
daa
jle
jg
mov
(bad)
sbb
repz
fidivr
shl
shl
jge
pop
pop
test
rcr
retf
mov
sub
sti
xchg
sar
and
mov
mov
mov
test
call
jp
or
sbb
jp
and
pop
inc
jno
pop
mov
bnd
adc
jb
pop
in
add
and
arpl
outs
xchg
xor
jle
ins
cdq
adc
stos
pop
sub
and
dec
popa
(bad)
(bad)
rol
ss
dec
and
mov
jecxz
add
mov
jg
in
cmp
rcr
jmp
rol
jl
aad
push
(bad)
iret
aaa
ins
bound
dec
inc
mov
xchg
jg
pop
lods
gs
pop
(bad)
sub
cmp
sub
xchg
nop
sbb
pusha
pop
fwait
xchg
pop
or
test
push
xchg
xor
out
mov
cmc
cdq
jmp
into
push
push
clc
inc
lock
cmps
test
leave
xlat
push
aas
and
(bad)
arpl
mov
in
xor
neg
out
scas
mov
xor
cmc
cmc
jb
xchg
cld
mov
jecxz
mov
push
push
arpl
imul
call
jecxz
imul
movs
test
data16
jmp
ins
test
out
mov
loopne
rcl
loopne
adc
loopne
ins
xchg
xlat
xchg
ins
and
ror
das
scas
mov
rcl
inc
bound
in
aad
xor
call
pop
mov
(bad)
jl
jbe
daa
push
jno
push
add
mov
mov
xor
mov
daa
and
mov
out
xlat
xchg
imul
inc
adc
add
sub
fstp
and
sub
sub
sbb
fld
jno
(bad)
in
pop
pop
lds
add
jmp
retf
dec
adc
mov
call
out
adc
pop
stos
and
jno
sbb
pusha
inc
js
sbb
xor
das
jge
mov
addr16
xchg
or
mov
add
mov
fwait
jecxz
imul
arpl
push
dec
cmc
cmc
ror
loop
dec
pop
push
int
pop
or
or
cmps
dec
cmp
mov
or
inc
jno
xor
sub
movs
neg
fstp
ficom
nop
ja
enter
sbb
inc
cmp
pop
pop
call
fisubr
mov
dec
fldcw
mov
and
push
mov
jmp
inc
mov
jbe
jle
cld
sub
pop
ds
adc
sti
cmp
jmp
jp
mov
leave
sub
bnd
test
fdivr
mov
gs
lahf
adc
fstp
mov
and
daa
icebp
daa
xor
pushf
jne
mov
rcl
test
jl
xchg
loope
jbe
sbb
dec
cmp
je
pop
in
(bad)
jbe
push
or
mov
test
add
or
jo
std
and
mov
std
dec
add
or
mov
sbb
test
add
shl
in
in
jb
jo
ss
push
jge
add
jno
jne
rcl
xchg
sahf
xchg
in
inc
mov
dec
or
jg
xchg
leave
adc
dec
inc
mov
es
inc
scas
cmp
or
not
jo
adc
xchg
ss
and
xor
enter
cmps
aad
push
push
push
test
jno
jns
and
jns
aad
sti
je
test
out
inc
pop
movs
and
dec
sbb
call
adc
mov
iret
and
pop
sub
movs
int
and
and
loopne
hlt
das
ja
xchg
and
or
inc
in
movs
cmc
loop
enter
scas
dec
pop
aas
(bad)
btc
pop
int
jecxz
scas
xchg
xchg
or
es
inc
test
push
repnz
popa
(bad)
in
das
inc
inc
push
int
ror
scas
push
cwde
cmp
retf
jae
sub
or
sub
and
ins
ja
lock
xor
call
jg
cmovge
int3
mov
std
imul
clc
lea
or
inc
test
shl
pop
adc
inc
(bad)
rol
sbb
pop
(bad)
mov
sar
xchg
mov
pop
mov
xchg
sahf
push
dec
sub
inc
cmc
aam
xor
push
stos
dec
pop
aaa
retf
sbb
xor
jle
cmc
lahf
mov
rcl
and
(bad)
mov
xchg
(bad)
into
adc
inc
jmp
icebp
lea
loope
lods
arpl
or
pop
retf
jbe
add
sbb
test
sbb
(bad)
in
(bad)
fidiv
out
ja
mov
mov
inc
xchg
cmp
mov
sbb
adc
adc
push
aad
mov
icebp
ficom
push
xchg
inc
adc
or
jl
imul
mov
inc
cmp
js
sbb
sahf
lock
stc
movs
fdivr
jne
in
(bad)
fadd
outs
int3
and
inc
cmps
xchg
(bad)
aad
in
dec
mov
mov
and
jbe
repnz
jae
mov
jb
inc
push
data16
es
cwde
inc
cmp
int
stos
lods
outs
push
and
pop
add
adc
xchg
jecxz
inc
out
lea
push
mov
mov
arpl
adc
pop
popa
pop
inc
sbb
stos
sub
enter
dec
ret
xor
push
sbb
sub
add
lahf
fild
mov
push
in
and
sub
xchg
cmp
fdiv
or
fwait
push
stc
outs
imul
mov
pop
fwait
xchg
adc
pop
mov
mov
pminub
cdq
pop
xor
pop
add
scas
or
popf
xor
sub
arpl
dec
das
imul
pop
push
jmp
mov
outs
push
mov
or
push
imul
aas
xor
and
mov
imul
aad
mov
push
add
mov
stos
pushw
mov
jnp
push
fcomp
sub
inc
in
mov
adc
jg
pop
inc
pop
cmp
xor
sbb
rcr
xchg
popa
in
mov
aad
fbstp
scas
xchg
or
sbb
lock
popf
mov
call
xchg
pop
sub
and
out
stos
sar
retf
jmp
shr
ss
int3
xchg
or
inc
sub
pop
stos
retf
into
shr
sbb
popf
out
clc
aas
and
mov
xor
cs
cmp
aaa
imul
mov
fst
adc
fstp
in
call
leave
popa
xchg
(bad)
and
gs
dec
xchg
jno
cdq
xlat
(bad)
(bad)
cmc
stos
inc
dec
addr16
addr16
sbb
xor
pusha
adc
(bad)
or
inc
sbb
cmps
outs
in
and
push
sbb
adc
call
and
iret
dec
rol
sub
xchg
into
mov
sti
xchg
fs
xchg
push
(bad)
in
dec
cmp
ja
mov
sub
in
fst
ficom
stos
dec
(bad)
cli
daa
out
or
cmps
dec
add
ins
repnz
call
in
lods
mov
inc
data16
(bad)
(bad)
jno
daa
in
in
pop
add
add
and
jo
add
pushf
pop
mov
(bad)
int
cmps
in
jno
sub
pop
arpl
enter
mov
add
mov
add
scas
mul
jns
dec
js
retf
pop
and
int3
mov
leave
and
data16
xchg
cli
sub
dec
push
cdq
mov
cmc
inc
mov
cmp
out
seto
loope
mov
aad
dec
lock
dec
stos
mov
stos
add
cmp
std
in
push
fwait
loope
stos
mov
sbb
inc
mov
sub
test
js
daa
add
cmp
mov
out
sbb
sub
jbe
xor
sbb
mul
jg
test
fdivrp
push
dec
popf
push
inc
dec
xor
popa
leave
aaa
push
cmp
scas
push
xchg
rcl
ror
dec
sbb
cli
xchg
cmp
outs
ins
cli
(bad)
ja
cmps
outs
jns
dec
pop
enter
ins
dec
jl
sti
push
sub
cmp
pop
int
dec
xchg
jl
xlat
(bad)
lock
mov
call
int
xor
aad
outs
std
and
cmps
sub
mov
mov
int3
mov
adc
jl
imul
int
data16
sahf
pop
pushf
repz
aaa
xor
xlat
add
jle
add
xchg
in
iret
cmp
into
push
sub
xor
fist
cmp
shl
dec
je
cmp
jle
mov
cmp
jnp
dec
jg
mov
leave
cmp
jo
pop
mov
adc
jns
ror
push
rdtsc
scas
js
js
pop
inc
sahf
cmps
out
pop
or
sub
(bad)
outs
xchg
adc
sahf
jae
aam
dec
fisub
repz
sbb
push
mov
outs
xor
xchg
mov
(bad)
scas
sub
or
mov
add
addr16
std
lahf
in
in
dec
sub
or
push
ja
in
repnz
jno
test
push
jb
mov
gs
inc
inc
ret
push
and
jns
add
push
ret
lahf
push
jle
adc
xchg
pop
aad
cld
shr
rol
jl
shl
xchg
push
push
sbb
loope
dec
gs
je
jb
ins
pop
push
dec
cmc
mov
push
das
loope
data16
sbb
jp
lods
dec
push
inc
adc
mov
dec
cmp
adc
xor
sbb
movs
in
add
pop
sub
lea
lock
inc
popf
daa
aaa
sub
in
lahf
das
pusha
jmp
cdq
leave
pop
pop
cmp
mov
mov
xor
fidivr
cmps
imul
icebp
sbb
and
inc
xchg
and
loope
or
data16
push
not
and
daa
mov
xchg
call
scas
(bad)
movs
and
fisttp
and
dec
iret
adc
ins
pop
cmps
pop
and
lock
clc
xchg
lahf
loop
jg
mov
xlat
jo
fs
ins
popf
lods
call
fisttp
fst
test
inc
sub
ja
cmp
ja
jle
mov
loope
sbb
xchg
lods
and
mov
and
repnz
push
les
ds
cmp
popf
aam
mov
bound
adc
xchg
(bad)
jmp
or
sub
mov
loop
and
icebp
and
int3
je
retf
fstp
shr
(bad)
mov
or
shl
loop
mov
pop
and
rcr
aam
addr16
xlat
aaa
fiadd
je
xchg
jg
mov
push
int
push
adc
(bad)
enter
sti
mov
and
xor
dec
fdivrp
jno
jbe
fwait
into
scas
push
or
cmp
xchg
arpl
adc
add
hlt
jae
dec
push
mov
retf
lea
mov
lea
(bad)
call
fnsave
ret
xor
bnd
sbb
ficom
pop
inc
fisub
push
pop
xor
(bad)
xor
or
or
push
bound
movs
pop
int3
mov
mov
xchg
adc
push
adc
jmp
pop
push
and
xor
aaa
pop
sahf
and
add
and
adc
loop
out
imul
jbe
cmp
retf
jmp
xchg
mov
xlat
mov
push
dec
push
xchg
scas
inc
mov
lahf
mov
shl
int3
mov
js
mov
mov
jbe
push
xor
cmps
imul
xor
(bad)
retf
inc
dec
mov
or
sub
mov
jmp
cmp
xchg
xchg
mov
xchg
add
imul
(bad)
movs
xor
fwait
dec
pop
idiv
popa
popf
xlat
inc
imul
push
out
ds
out
in
dec
cmp
(bad)
or
add
(bad)
in
inc
cmp
mov
sub
xchg
imul
popa
mov
pop
movs
xor
pop
gs
jp
push
sbb
jbe
and
add
fisttp
xor
mov
adc
or
pop
xor
cmp
xchg
ret
into
pop
popf
imul
dec
dec
jae
js
mov
jmp
out
inc
and
(bad)
fucomip
jbe
mov
xor
push
movs
push
shl
cld
std
inc
and
add
pop
loop
hlt
sahf
mov
std
and
or
outs
pop
loope
in
loope
fidiv
aam
cmp
mov
cmp
je
scas
inc
push
fstp
pop
fsub
cli
test
and
mov
mov
popf
fdivrp
repz
dec
xchg
cmps
leave
inc
test
fist
scas
bound
inc
mov
dec
mov
and
sbb
jge
adc
dec
movs
mov
pusha
pop
push
lahf
adc
pop
xor
xchg
mov
mov
cli
je
pop
push
mov
retf
outs
lods
outs
or
lea
ins
jge
outs
or
sub
int
ins
dec
lahf
test
lods
cmc
test
lods
stos
mov
(bad)
cmp
ds
jmp
push
adc
and
das
cmc
cmp
jae
pushf
jb
sbb
out
sbb
mov
and
push
cld
cmp
inc
fucom
std
icebp
lahf
mov
sti
mov
fst
dec
retf
or
pushf
jnp
mov
(bad)
jne
xor
enter
std
out
(bad)
inc
mov
xchg
ja
jge
cmp
out
cdq
mov
xchg
stos
sti
lea
add
stc
pusha
mov
sub
sar
aas
fs
imul
pushf
cmps
mov
cs
add
sub
mov
xor
xchg
adc
or
push
mov
rcr
cmp
scas
cli
xchg
shl
pop
push
sbb
(bad)
ss
adc
mov
xchg
lds
mov
(bad)
xor
mov
jns
mov
mov
cs
mul
wrmsr
inc
fld
push
xchg
mov
mov
cmps
mov
xchg
mov
xchg
xor
push
sahf
movs
and
mov
daa
in
daa
sbb
and
xor
cmpps
cwde
cmc
dec
loope
fcom
and
pushf
in
pusha
pop
push
iret
inc
mov
test
daa
push
std
push
outs
aas
dec
push
ins
hlt
jno
xor
jp
push
clc
pop
mov
sar
outs
and
xchg
push
mov
xor
loopne
jno
call
dec
and
js
xlat
sbb
jnp
cmp
mov
xchg
inc
xor
mov
fild
test
out
xor
pop
pop
pop
sbb
adc
sahf
cmp
xchg
push
push
push
pop
ja
je
ficom
cmp
dec
inc
xchg
jno
jb
sbb
cmp
int
in
test
fild
fstp
test
sbb
clc
(bad)
dec
jnp
fisubr
lahf
pop
int
imul
pop
mov
stos
in
stc
test
push
inc
nop
ret
and
mov
mov
in
ins
dec
stos
imul
cmovb
fidivr
inc
jmp
inc
sbb
scas
fstp
fimul
xor
or
addr16
je
push
(bad)
scas
mov
add
cmp
retf
dec
cmps
dec
xchg
cdq
les
imul
mov
fist
xor
jecxz
inc
cmp
mov
imul
jecxz
scas
pusha
int3
stos
ret
ds
ins
and
mov
mov
mov
add
push
icebp
and
push
xchg
rcl
loop
sub
mov
test
xchg
enter
and
cmp
out
adc
push
pop
ja
lahf
pop
outs
fadd
cmps
push
and
xchg
aaa
call
sbb
aaa
test
repnz
cmc
sti
inc
fistp
in
xchg
in
cmp
inc
shl
test
mov
stos
test
addr16
push
sbb
mov
cmp
pop
psubd
inc
fst
inc
xchg
rcr
pop
rcl
stos
dec
mov
dec
jmp
fnstsw
xchg
ficomp
pop
rcr
xchg
sub
fcom
shl
sbb
xor
mov
mov
fisttp
cmp
xchg
mov
add
push
out
inc
adc
push
and
mov
(bad)
das
jmp
in
jle
repnz
sar
or
mov
fsub
pop
ins
or
xor
in
rcl
and
aad
xor
jp
movs
gs
jp
xor
sbb
loope
ins
cld
jo
retf
dec
jnp
nop
stos
cld
mov
xchg
in
aaa
fwait
out
inc
je
push
xor
fwait
arpl
sbb
arpl
inc
sub
retf
add
clc
add
mov
xchg
cwde
dec
call
jae
(bad)
jo
or
in
sub
test
iret
ds
mov
fwait
dec
mov
jno
jg
sub
or
stos
fidivr
sar
pop
adc
int3
loopne
gs
das
xchg
add
and
cmp
inc
cmp
dec
add
or
mov
xchg
sub
xchg
or
push
sub
daa
jecxz
(bad)
int3
mov
lds
add
pop
rcr
gs
sbb
pop
push
jbe
scas
mov
mov
mov
mov
in
sahf
cmp
jno
outs
test
sub
aaa
int3
xor
stc
imul
add
cwde
dec
pop
jnp
mov
ret
out
push
repz
pop
test
sub
mov
mov
pop
daa
adc
out
mov
lock
mov
dec
push
sbb
sub
in
push
cmp
js
or
es
cs
loopne
mov
push
out
jp
sub
aas
lods
mov
outs
imul
lds
loop
rcl
mov
mov
jnp
test
push
test
or
cli
inc
aas
mov
enter
jg
dec
je
push
das
daa
cwde
jg
mov
xchg
xchg
sbb
cmps
push
stc
add
aad
jmp
call
test
ins
popa
jbe
movs
mov
xor
cdq
xchg
sub
mov
pop
mov
xchg
clc
nop
adc
mov
dec
inc
jmp
adc
cmps
xchg
fiadd
xor
cwde
popf
inc
sbb
int3
fist
les
add
fstp
push
lods
and
aaa
mov
data16
push
loope
jl
ret
ins
push
movs
gs
xor
lahf
mov
xchg
inc
sbb
inc
sub
and
cwde
mov
push
or
mov
adc
les
outs
sti
daa
jmp
mov
mov
xlat
mov
sub
cmp
mov
(bad)
imul
test
bound
std
cmp
jns
stc
cli
fcmovnu
addr16
mov
inc
or
and
mov
jb
jae
fwait
test
int3
js
data16
ins
add
les
inc
int
or
cmp
or
cwde
add
js
(bad)
mov
xchg
push
scas
pop
lds
outs
mov
inc
mov
out
lods
mov
or
mov
pop
sub
mov
es
mov
or
xchg
js
in
xchg
mov
call
out
fld
je
popf
dec
rcl
and
ret
clc
cs
mov
std
dec
aam
popf
xchg
adc
lea
outs
out
adc
dec
adc
cmp
movs
fsub
fcmovnbe
repnz
add
es
ss
les
xlat
jl
add
jb
scas
frstpm(287
out
or
cmp
test
sub
mov
fisttp
aaa
add
mov
dec
int3
and
inc
cmp
inc
mov
retf
les
test
pop
ja
cmp
fld
adc
shl
nop
gs
int
mov
dec
imul
and
lods
jns
aad
mov
(bad)
fadd
push
or
jb
cmp
(bad)
mov
inc
pop
das
lods
fst
mov
(bad)
add
mov
rcr
sti
mov
popf
(bad)
xchg
sub
loope
and
aad
mov
inc
push
cmp
in
jp
adc
mov
inc
inc
je
cdq
mov
jae
les
add
ja
sti
jae
das
aam
mov
pop
nop
jae
cwde
cmp
sar
push
and
pop
ins
pop
mov
cld
adc
or
or
div
fdiv
inc
add
add
int
push
pop
jg
fs
test
out
and
xchg
pop
or
push
jns
popf
gs
ret
cmp
mov
dec
fbstp
xchg
mov
mov
jp
retf
xor
std
loop
sbb
test
mov
dec
inc
ins
pop
sahf
push
stos
adc
jp
and
rol
les
aam
popf
dec
cmp
lods
sar
and
mov
mov
mov
add
imul
adc
pushf
in
xchg
out
push
lahf
mov
aam
movaps
xchg
je
lods
aas
jecxz
or
add
inc
rol
mov
retf
(bad)
popf
jnp
xchg
push
pop
scas
and
imul
push
or
push
sub
dec
mov
das
mov
mov
xchg
and
rol
sbb
or
lods
push
lods
fild
int3
repnz
sub
in
lods
enter
pop
outs
pusha
out
and
bound
(bad)
iret
xchg
push
dec
movs
in
jge
call
xor
fidivr
int3
pop
or
mov
push
and
jno
pop
jl
push
add
call
push
aad
mov
sbb
aaa
add
call
sub
lea
sbb
retf
jmp
push
jne
(bad)
lock
(bad)
enter
mov
jne
cmps
push
mov
xor
xchg
push
push
xchg
stos
aas
push
sahf
inc
sbb
jnp
outs
arpl
rcr
sub
lds
rol
xchg
jge
pop
cmp
mov
imul
das
pop
in
adc
xor
cmps
scas
mul
sbb
mov
xlat
neg
pop
add
mov
std
jmp
out
jmp
loop
cwde
das
sub
mov
push
std
in
fldcw
push
movs
aas
test
push
gs
jb
mov
mov
add
jo
xchg
pop
sar
xor
add
and
mov
retf
mov
or
xchg
popf
das
mov
xchg
cmp
in
bound
jb
aam
inc
inc
loopne
aas
test
outs
stc
add
adc
lods
pop
xor
push
out
mov
push
add
(bad)
(bad)
cwde
shl
gs
push
push
mov
dec
push
sbb
xlat
fisttp
add
data16
out
out
jmp
(bad)
fbld
cli
cli
push
push
dec
fcmovnbe
arpl
fidivr
pop
pop
inc
into
sar
enter
and
add
sub
repz
popa
cld
or
retf
std
mov
pop
cwde
dec
std
fild
das
pop
push
or
out
icebp
rcr
(bad)
mov
mov
push
sbb
jmp
pop
sub
add
add
ins
fcmovnbe
and
fsub
cmp
loop
mov
ror
scas
sbb
xlat
add
pushf
mov
data16
and
jmp
push
fst
dec
adc
fwait
pop
cld
xacquire
stos
adc
mov
mov
test
out
xchg
dec
outs
mov
jmp
gs
add
mov
mov
movs
(bad)
cmc
lock
jmp
pop
add
fs
es
xchg
fmul
xor
cmp
dec
inc
scas
scas
aaa
and
ds
fyl2xp1
jmp
ds
mov
adc
sti
(bad)
jns
cmps
fisubr
cmp
imul
mov
xchg
das
adc
sub
inc
sbb
adc
retf
xor
sub
xchg
sbb
and
stos
movs
(bad)
aas
les
inc
sub
xlat
int
stos
jecxz
inc
shl
or
loope
adc
loope
imul
sub
and
stos
mov
ficomp
pushf
test
xor
pop
add
pop
test
cmps
movs
jnp
mov
inc
xlat
sti
cmps
retf
movs
aas
dec
call
mov
cmp
je
and
repz
xchg
push
add
aaa
sbb
push
jg
sahf
fisttp
or
pop
xor
test
mov
fisub
adc
je
inc
inc
test
sahf
aas
int3
inc
icebp
lahf
out
jmp
mov
loop
lock
daa
xchg
jb
shl
movs
sbb
or
or
rol
sar
add
xor
jl
xor
lahf
fstp
sbb
fdiv
dec
cli
data16
aas
jns
add
or
fnstcw
imul
imul
xor
pop
test
mov
jnp
adc
cmp
test
mov
ret
mov
call
repz
test
sub
pop
dec
dec
jbe
jae
fldcw
fild
pop
dec
sbb
bound
popa
icebp
das
dec
push
mov
and
add
add
or
lds
dec
lahf
fucomi
dec
adc
dec
xchg
test
aaa
mov
add
je
add
add
es
adc
xor
push
je
mov
imul
and
sbb
add
add
test
mov
dec
test
add
add
mov
mov
push
ret
les
xchg
popa
sbb
jecxz
jbe
js
repz
aam
(bad)
ins
sub
push
ret
movs
xchg
pop
add
outs
dec
in
mov
shl
setb
pop
lds
clc
xchg
int
push
jo
mov
adc
push
and
mov
sub
pop
push
cli
test
sub
pop
or
push
fistp
rol
mov
popa
mov
outs
xchg
stos
mov
cmp
jns
xchg
jne
xor
sub
sbb
push
xchg
daa
xor
lods
mov
inc
xchg
xchg
mov
cs
adc
cmps
cld
pop
bound
mov
xor
pop
cmp
inc
stos
jl
in
pop
test
inc
xor
xchg
push
xlat
sub
fcmovu
pop
pop
push
jo
adc
jl
ror
retf
pop
jge
jns
movd
xor
dec
push
mov
xlat
outs
test
mul
jp
xor
and
xchg
aad
imul
gs
adc
push
cmp
fcom
rcl
push
adc
lahf
test
ja
xchg
fistp
repnz
sqrtps
cmc
les
outs
xchg
sti
xchg
mov
push
push
cmc
call
pop
inc
dec
and
or
mov
jecxz
add
mov
jmp
cmp
mov
adc
cmp
gs
jl
jbe
dec
aaa
dec
aad
mov
add
jno
mov
mov
mov
inc
add
pop
mov
pop
fldenv
ficomp
jo
cld
dec
enter
and
sbb
pop
jne
(bad)
pop
out
xor
adc
aas
daa
mov
sahf
retf
cmps
xchg
mov
sar
lea
das
dec
inc
rcr
fsub
call
push
cmps
jp
sub
push
mov
out
inc
jg
inc
dec
dec
lods
sahf
retf
xor
xchg
push
add
fld
or
and
mov
arpl
addr16
xlat
les
cmps
jno
or
add
std
mov
dec
das
ror
cmp
fisub
xlat
push
mul
add
jmp
test
mov
xor
inc
lods
icebp
ret
xchg
ja
bound
rcl
and
pop
shl
mov
(bad)
daa
nop
test
adc
out
fimul
jle
ja
xchg
aaa
cmp
jo
(bad)
fwait
sub
out
mov
mov
xlat
pop
xor
cs
mov
sub
add
mov
add
js
inc
(bad)
jmp
in
mov
mov
fxch
jno
ss
mov
sub
dec
jno
xchg
xchg
out
push
mov
mov
dec
aaa
or
push
fdivr
cli
pushf
mov
sub
lahf
in
jne
sti
sbb
out
inc
mov
leave
lock
ja
repnz
jle
cmp
jecxz
int3
repz
adc
and
inc
pop
push
fisubr
jle
(bad)
adc
loopne
jmp
loop
xor
jae
nop
rcl
xlat
fstp
(bad)
in
xchg
imul
not
gs
iret
push
fist
scas
or
ror
mov
push
jae
sar
into
adc
inc
pusha
jo
mov
fdivr
dec
test
adc
mov
addr16
adc
fiadd
dec
sub
pop
inc
div
rcl
in
push
scas
adc
jp
mov
out
test
cmp
out
cmp
sti
cmp
dec
and
dec
push
xchg
mov
and
loopne
scas
daa
mov
sti
pop
dec
jns
jg
mov
push
dec
nop
inc
add
pop
mov
cs
into
mov
xchg
cmps
or
movs
fcom
and
mov
sbb
sub
pop
out
push
xor
scas
js
out
and
pop
inc
(bad)
and
aaa
int
inc
xor
inc
add
lea
addr16
movs
sub
xchg
jae
ret
pop
and
inc
push
push
shl
and
sub
ss
mov
inc
stc
movs
lods
inc
sub
shr
cmc
dec
xor
and
fstp
imul
ss
or
sbb
mov
lock
daa
sbb
pop
mov
retf
jae
icebp
out
lahf
sbb
xchg
lea
cdq
and
jp
mov
sub
popa
leave
adc
cmp
mov
cmp
jg
jmp
push
mov
lods
stc
inc
and
xlat
jbe
xchg
adc
lahf
rol
pop
xchg
mov
xchg
call
mov
je
inc
ins
lahf
lahf
adc
cmp
enter
push
lds
jmp
pop
fild
call
push
les
add
je
into
jb
bound
cli
push
push
cmp
mov
nop
out
loopne
inc
sub
retf
xchg
mov
imul
adc
mov
jg
in
outs
sar
adc
mov
add
pop
xor
mov
push
or
adc
xlat
add
ror
ins
push
mov
cld
data16
push
lods
adc
cmp
cmps
aad
jmp
cmps
or
mov
dec
in
(bad)
xor
(bad)
jmp
and
push
add
mov
test
mov
mov
cmp
mov
mov
addr16
mov
repz
inc
and
out
mov
fidivr
xchg
inc
jmp
out
mov
jae
xchg
jnp
mov
jno
loop
xor
cmps
jnp
mov
and
jl
pop
dec
push
jnp
jo
mov
sahf
add
sbb
sar
push
jg
adc
push
aam
xchg
daa
xor
and
cmp
inc
pop
push
loope
and
pusha
call
inc
xor
xchg
aad
xor
cmp
call
sbb
mov
div
mov
dec
jns
adc
xchg
call
gs
push
repnz
ret
add
cmp
sbb
mov
jmp
jmp
rcr
sbb
mov
(bad)
neg
adc
or
scas
lods
mov
ins
mov
or
add
js
retf
in
xor
pushf
loope
mov
loop
or
and
and
mov
push
iret
(bad)
pusha
jmp
push
retf
sbb
leave
mov
in
cli
or
fnstsw
stos
imul
fnsave
aas
adc
fwait
add
push
lahf
mov
test
cmp
xchg
aam
jno
inc
and
cmp
pop
xchg
in
inc
movs
mov
push
stc
dec
pusha
mov
jge
mov
ret
sub
ss
jae
or
xchg
(bad)
dec
dec
add
mov
(bad)
cmp
call
in
dec
cmc
mov
add
mov
(bad)
mov
jecxz
xchg
sub
or
cmps
data16
lock
push
mov
pushf
call
unpcklps
loope
mov
adc
aad
pop
rol
sub
cmp
inc
adc
nop
jmp
hlt
scas
inc
mov
stos
out
outs
ins
cmp
cwde
sar
mov
frstor
shl
cmps
in
js
add
cld
mov
push
lods
mov
cs
sti
sbb
cs
dec
push
out
jns
out
xchg
and
dec
out
punpcklbw
adc
(bad)
iret
jg
xor
aad
jb
fisubr
mov
dec
int3
and
ret
jns
dec
or
dec
mov
dec
(bad)
jl
pop
in
(bad)
mov
and
gs
push
or
sti
inc
js
inc
test
(bad)
push
loopne
cmp
scas
cmp
addr16
fisubr
lock
je
dec
leave
mov
jecxz
and
jae
fsubr
add
mov
xor
adc
pop
cmovns
add
cmp
mov
sub
dec
loope
push
add
les
test
call
je
adc
and
lea
xchg
push
cmp
push
mov
mul
jb
pop
fmul
sub
out
xlat
cmp
jno
and
jne
lock
jbe
and
retf
fidivr
outs
into
xchg
pusha
mov
rcr
mov
and
inc
shl
push
inc
pop
cmp
sub
adc
mov
les
repz
jl
leave
fadd
(bad)
sti
mov
cmps
dec
idiv
mov
inc
add
push
mov
or
jno
push
mov
inc
(bad)
fstp
bound
mov
sbb
xor
jg
or
dec
(bad)
repz
daa
in
dec
mov
(bad)
sbb
in
ins
dec
inc
sub
xchg
and
cmp
scas
retf
js
into
push
mov
jle
add
sub
xor
mov
popf
add
mov
and
sub
test
in
jne
push
xchg
mov
mov
jns
dec
sbb
call
aas
clc
mov
iret
enter
xchg
jge
mov
lahf
sub
mov
int
sub
xacquire
jnp
ss
pop
xor
push
test
jmp
popf
stos
int
int
cwde
out
data16
repz
sub
mov
pop
imul
push
loopne
lods
mov
cs
adc
xor
jne
xor
out
pop
add
push
add
push
jb
xchg
movs
aas
rcl
loope
aam
add
push
mov
fldcw
retf
jle
inc
xor
and
ins
xor
(bad)
daa
lds
mov
mov
aad
daa
ficom
or
repnz
jl
fisttp
mov
xor
or
push
aad
push
mov
xchg
loopne
addr16
int3
sbb
inc
shl
ret
ds
iret
sub
sub
sahf
mov
(bad)
fsub
inc
fadd
xor
and
ror
je
js
dec
ins
loop
retf
add
into
dec
add
outs
lods
ror
mov
jbe
out
push
aam
fiadd
sti
arpl
(bad)
cdq
shl
mov
pop
pop
jnp
out
(bad)
rcr
mov
pop
push
mov
xor
inc
adc
je
adc
ss
sbb
pop
cmp
arpl
add
movs
mov
stc
mov
xchg
or
inc
test
loope
lds
inc
iret
dec
sti
pop
pop
loopne
mov
jmp
jne
dec
and
lea
add
call
adc
ficomp
xor
mov
fst
and
and
add
push
sub
sub
repnz
lock
fnstsw
(bad)
sbb
loop
cmovnp
stc
pusha
jb
outs
repnz
aad
test
hlt
aam
outs
int3
mov
add
xor
and
pop
dec
jae
loop
mov
xchg
add
js
shr
mov
(bad)
pop
sbb
das
push
push
lahf
xor
pushf
mov
lock
sbb
jl
(bad)
xchg
bound
pop
pop
pop
dec
cwde
jmp
ins
icebp
outs
dec
jmp
push
or
or
pop
lock
mov
sub
leave
inc
mov
mov
ins
aad
dec
jmp
xchg
fld
jb
ja
mov
xchg
push
test
or
mov
sbb
ss
pop
dec
gs
rcr
or
mov
(bad)
(bad)
xchg
add
(bad)
rcr
mov
sbb
ins
hlt
fisub
push
mov
cmps
stos
jmp
sub
bnd
cmc
sbb
dec
push
icebp
pop
dec
cld
test
jb
sar
or
aad
aas
ins
push
mov
mov
adc
hlt
mov
leave
push
sub
loop
xor
cld
cmp
aas
mov
lahf
sub
push
xor
aaa
xchg
push
or
mov
pop
cmp
ss
aaa
mov
out
push
xor
je
jecxz
add
and
jb
sar
mov
pop
sub
fcomp
iret
call
dec
cmps
pusha
dec
jb
mov
fwait
sub
xchg
or
sub
or
xchg
inc
jmp
add
pop
fsub
neg
mul
sti
sbb
mov
in
xchg
lock
jmp
push
add
xchg
shr
pop
mul
mov
in
inc
sti
xchg
fdivr
rcr
ins
mov
(bad)
call
push
xchg
mov
idiv
or
fisubr
hlt
sbb
fcomp
(bad)
push
int
push
or
push
jne
imul
mov
test
aaa
jmp
clc
int3
cmp
fadd
cdq
clc
cmps
pop
int3
pop
out
sub
shl
dec
inc
mov
jns
dec
hlt
jns
adc
or
xlat
or
dec
xor
jp
icebp
cmps
xchg
mov
out
jne
ds
mov
dec
inc
sar
xlat
adc
test
mov
cs
or
jae
nop
mov
push
sbb
cmp
inc
sti
xor
sub
jmp
sahf
out
es
loope
sub
orps
sbb
adc
mov
in
jecxz
pop
sbb
mov
cmp
hlt
shr
gs
(bad)
mov
sbb
cmc
dec
rcl
js
sbb
fidiv
xchg
ins
call
xor
add
mov
adc
leave
fbstp
gs
lods
xlat
fs
adc
jb
and
ret
xor
mov
inc
mov
xor
xchg
sub
ss
xor
sub
push
mov
dec
int3
js
xor
stos
push
loope
pop
mul
inc
in
and
ret
add
dec
pop
inc
mov
mov
bound
rol
add
and
call
loope
pop
out
loopne
dec
jmp
das
ins
std
aad
mov
in
push
in
jns
jecxz
out
ret
out
pop
inc
data16
cmp
push
mov
add
out
sub
adc
cmps
ror
jp
cmp
cmp
jb
call
and
out
dec
mov
scas
clc
fst
lods
adc
cmp
lds
les
div
fst
mov
lods
jecxz
(bad)
jl
rol
lock
fsub
mov
shl
(bad)
out
retf
xor
cmp
sahf
xchg
hlt
ret
sub
lock
push
jecxz
(bad)
leave
shl
xor
mov
pminsw
gs
pop
rcr
jno
mov
add
shl
bound
mov
pop
ins
stos
mov
es
sbb
add
dec
jmp
mov
dec
mov
jge
fnsave
and
dec
mov
xchg
not
test
push
cmp
mov
shr
neg
fidivr
jne
(bad)
nop
push
or
inc
call
xor
sub
inc
sahf
in
adc
cmp
stc
into
sbb
in
mov
mov
mov
iret
rcr
lea
jne
rcl
mov
loopne
xchg
mov
xlat
mov
int
add
xor
push
stos
ins
dec
jp
retf
fs
fdiv
inc
mov
push
adc
jg
ins
cli
(bad)
jecxz
bound
xchg
sub
dec
sbb
push
retf
int3
or
mov
sbb
ss
cwde
enter
push
dec
es
sbb
add
add
sti
cmc
test
ret
push
loop
or
lahf
nop
lds
lahf
and
sbb
or
ds
and
mov
xor
pop
out
push
(bad)
or
movs
js
sub
div
adc
sub
dec
push
jge
jl
inc
je
jnp
sbb
push
mov
push
xchg
loop
mov
fcmovu
mov
add
xchg
dec
int3
ret
out
movs
xchg
adc
inc
popf
out
mov
(bad)
std
out
push
mov
iret
adc
aas
xchg
mov
mov
jnp
cdq
mov
fst
sbb
push
mov
mov
aaa
add
(bad)
adc
dec
into
push
stos
fistp
cmps
cli
std
cmp
jecxz
repz
xor
repz
mov
inc
and
jno
daa
std
or
mov
mov
aad
scas
stc
(bad)
lock
mov
shl
pop
fisubr
std
fwait
adc
jnp
addr16
inc
dec
xor
add
loopne
or
ins
mov
or
pusha
nop
xor
or
xchg
mov
xchg
ja
jmp
aam
and
or
cwde
(bad)
shl
stc
(bad)
mov
mov
fs
inc
cdq
icebp
clc
pop
out
retf
gs
imul
jb
add
jo
add
je
test
push
xor
in
and
and
les
sub
add
(bad)
dec
jb
sbb
cwde
push
in
push
cmp
test
ins
aaa
aas
rol
ror
frstor
xlat
enter
sub
and
pop
pusha
aas
dec
(bad)
out
mov
mov
(bad)
mov
rcr
push
sbb
loopne
push
pop
and
or
dec
pushf
mov
addr16
addr16
sbb
xor
mov
cmp
mov
fwait
jl
mov
sub
sar
xchg
mov
inc
or
add
xchg
xor
inc
xor
(bad)
push
or
popa
jno
out
push
ja
out
fst
and
fwait
out
push
mov
and
and
or
xor
mov
jno
call
xchg
popf
mov
and
mov
pusha
add
jae
in
rcl
xchg
adc
mov
fadd
push
xchg
xor
add
int
push
ret
xor
mov
pop
fst
push
mov
sub
icebp
pop
mov
xchg
mov
fs
shl
scas
ror
test
aas
bound
jb
xor
imul
icebp
mov
push
mov
push
and
cmc
adc
jne
dec
pop
sbb
mov
enter
jge
cld
mov
xlat
loopne
test
push
xchg
retf
cmp
repz
in
ds
xor
mov
inc
inc
mov
imul
ret
sbb
mov
test
adc
(bad)
push
scas
mov
inc
(bad)
(bad)
mov
movs
fs
in
or
adc
dec
not
hlt
(bad)
jmp
(bad)
add
jbe
outs
in
adc
or
ss
add
rcl
mov
icebp
jp
movs
call
int3
ins
dec
lahf
sub
int3
rcr
mov
pop
outs
mov
cmp
div
in
mov
mov
inc
stos
adc
jecxz
xchg
mov
push
test
xchg
pop
scas
out
popf
(bad)
test
data16
(bad)
xlat
jns
ds
cli
push
jl
popf
cld
out
dec
sbb
ds
mov
ins
addr16
lock
imul
jmp
pop
push
(bad)
pop
inc
(bad)
js
rol
and
jae
nop
stos
mov
pop
jb
jmp
ds
aaa
push
popf
jmp
js
mov
sar
js
sub
push
mov
lea
das
imul
sub
push
repnz
stc
call
inc
inc
sub
out
jmp
gs
jb
pop
dec
sti
xor
leave
das
mov
jle
sbb
cmps
and
dec
xchg
and
aad
cmp
or
rol
loop
clc
sar
jge
jns
mov
cmp
or
ss
fsubr
movs
mov
pop
je
imul
sahf
retf
or
scas
jmp
aas
and
in
add
inc
int
fs
push
xor
fsub
je
ss
fist
xor
inc
mov
xor
cmps
jns
pop
mov
dec
cld
in
aam
shr
stc
pop
adc
sub
cmps
enter
ret
inc
mov
pop
sbb
adc
mov
xor
inc
test
dec
out
cmps
scas
pop
jecxz
rcr
push
pop
inc
cld
jle
xor
add
inc
arpl
ret
aas
sbb
jl
mov
jl
test
or
cmps
pop
scas
or
xlat
dec
dec
data16
xchg
mov
scas
inc
mov
dec
add
or
mov
movs
push
and
cmps
out
neg
mov
sub
mov
ret
cs
dec
loopne
loop
daa
imul
pop
adc
pop
(bad)
(bad)
mov
push
es
fsubr
dec
jbe
test
mov
xchg
into
mov
dec
cmps
test
loopne
lods
sbb
aam
mov
mov
inc
dec
jmp
add
mov
pop
cwde
sahf
les
cmps
mov
sti
fsub
stos
dec
test
test
or
leave
push
or
pop
jecxz
sub
into
or
xchg
xchg
xchg
fidivr
cmc
pop
outs
push
dec
sub
fisttp
call
and
xchg
call
mov
dec
adc
mov
es
and
pop
cmc
dec
(bad)
bound
inc
mov
fadd
out
and
sub
pop
arpl
cmp
int
push
lea
cmps
out
xchg
imul
xor
inc
push
arpl
int3
pop
xchg
fs
or
movs
add
push
inc
sbb
sbb
ins
retf
icebp
xor
daa
mov
and
xor
push
mov
dec
out
lods
stc
fs
mov
xor
add
ret
jecxz
nop
in
mov
outs
test
mov
imul
std
inc
fcmove
fdiv
cmp
fadd
add
and
pop
sub
sbb
bound
mov
rcr
or
mov
popa
push
cmp
mov
outs
mov
jle
xor
loopne
test
out
int3
test
inc
call
pop
inc
sahf
ret
cs
std
jb
cs
daa
mov
push
push
gs
jmp
xor
sbb
iret
(bad)
push
je
repnz
pop
pop
or
push
pop
cmp
imul
inc
sbb
retf
je
popa
(bad)
sub
cs
sbb
push
outs
xor
sti
push
xor
lahf
xor
(bad)
out
imul
inc
aas
shl
mov
stos
mul
(bad)
mov
mov
daa
add
and
push
lods
mov
and
outs
cmp
repz
jb
xor
sub
out
sbb
js
and
xor
and
popa
mov
psllw
scas
fidivr
loopne
jne
push
mov
sub
lahf
xchg
pop
(bad)
into
fist
cmps
repnz
aam
aam
or
and
pop
pop
mov
pop
mov
jbe
shl
movs
mov
xor
movs
(bad)
out
xlat
leave
dec
pop
mov
js
in
aaa
movs
enter
lods
pop
cmps
xchg
mov
ins
or
data16
daa
xchg
xchg
dec
cdq
or
mov
pop
repz
retf
jo
dec
test
add
cmp
aaa
ja
fdivp
mov
jmp
arpl
push
cmp
fstp
and
push
int
je
retf
xchg
test
jns
sbb
mov
aas
pop
xchg
ss
sbb
sar
jmp
xchg
ins
icebp
push
int3
test
shl
dec
loopne
mov
pop
call
rol
inc
pushf
cmps
jns
mov
adc
mov
and
mov
ss
iret
and
outs
mov
mov
mov
mov
jp
mov
mov
pop
or
lea
xchg
push
jecxz
mov
and
wbinvd
sar
jae
ins
lahf
sahf
pop
xchg
push
mov
dec
dec
mov
dec
and
or
in
sub
or
adc
imul
cmp
sub
mov
mov
int3
sbb
iret
shl
pop
push
cmp
inc
mov
dec
push
call
lods
iret
pusha
cwde
ret
cdq
pop
mov
scas
jg
dec
adc
cli
lods
inc
push
nop
popa
xor
imul
sbb
pop
out
iret
sbb
movs
dec
call
(bad)
inc
jb
pop
inc
(bad)
in
nop
in
sub
jo
shl
rol
das
push
lods
inc
add
leave
sbb
pop
xchg
aas
pushf
mov
lds
fs
xchg
out
push
xor
sub
mov
fdivr
jle
or
push
les
mov
pop
mov
test
jecxz
xchg
xlat
mov
lock
mov
fnsave
hlt
jmp
mov
into
repnz
test
loop
dec
mov
(bad)
fnstsw
pop
ror
mov
xchg
mov
clc
shl
pop
adc
xchg
out
sub
push
jecxz
sbb
push
push
xor
pop
hlt
pop
lea
ja
add
push
push
sub
cmc
imul
out
cmp
into
jmp
push
loopne
pop
sub
adc
(bad)
outs
das
fidivr
sbb
fwait
push
mov
shl
fcomp
fild
cmp
lea
lock
and
inc
dec
cwde
jp
cmps
or
and
push
pop
lahf
adc
push
lods
daa
ret
mov
sub
and
fidivr
fisttp
add
call
mov
cs
std
aas
pop
add
adc
imul
mov
icebp
jl
rol
cmp
out
jmp
sub
adc
push
retf
into
ja
push
xor
jmp
push
dec
and
sub
cmc
ret
into
inc
or
mov
test
push
jl
adc
ins
call
out
pusha
push
ins
(bad)
sub
add
dec
xchg
mov
jb
int3
and
imul
or
sahf
or
push
sbb
mov
cmc
push
bound
shl
or
cmp
pop
and
and
xor
push
jecxz
daa
dec
sti
pop
cmc
jne
movs
test
es
fwait
cmps
imul
rcr
shr
mov
add
add
inc
or
repnz
and
sub
jle
movs
mov
mov
pop
int
push
out
xchg
ret
imul
jae
xchg
xlat
ds
scas
add
jb
je
lahf
les
pop
jbe
mov
xor
pop
xchg
loope
loope
out
rol
loop
scas
xchg
xchg
inc
jp
jbe
pushf
mov
fld
scas
mov
stos
mov
mov
or
mov
(bad)
rcl
out
jo
rol
into
mov
sub
mov
outs
std
nop
add
pushf
mov
push
sub
stos
(bad)
inc
sub
leave
push
and
jmp
jle
jae
dec
sbb
push
daa
test
push
cmp
push
sbb
rol
(bad)
cmps
jne
xchg
repz
mov
xchg
ret
dec
mov
lock
cmp
and
and
dec
sub
frstor
outs
add
lahf
fild
ja
bound
push
inc
sub
inc
mov
int3
push
jne
fcomp
cld
add
dec
ficomp
clc
push
mov
sub
inc
cmp
or
outs
xor
movs
jo
imul
jbe
int
and
out
out
clc
std
adc
inc
sub
test
pop
bound
(bad)
dec
(bad)
push
pop
mov
and
sub
dec
and
cli
ret
addr16
mov
in
mov
cli
mov
xchg
aam
mov
inc
daa
xor
dec
das
bound
mov
xchg
pop
pop
jg
and
(bad)
mov
push
jne
test
xor
lods
push
mov
or
cmps
xchg
cli
pushf
in
add
dec
xor
jle
(bad)
aad
or
lds
add
int3
inc
inc
mov
pop
pop
jne
jbe
jge
push
push
push
or
pop
and
mov
lods
sbb
iret
add
movs
test
mov
dec
jo
jbe
imul
sbb
ds
pop
or
in
shl
(bad)
call
rcl
sub
vpsllq
sbb
mov
mov
mov
jecxz
imul
cmp
xchg
inc
out
iret
mov
mov
gs
loop
cmp
out
cli
addps
int
inc
dec
pop
repz
or
push
loope
dec
add
imul
jmp
or
dec
repnz
push
sti
adc
or
js
push
sbb
sbb
jp
adc
or
loope
xor
xchg
push
add
ins
cdq
shr
lds
outs
mov
mov
(bad)
sar
mov
jge
jecxz
mov
fcomi
xor
adc
movs
cmp
test
aam
or
inc
jge
pop
ror
sbb
retf
cli
daa
call
pop
sub
mov
inc
pop
xor
loopne
fdivp
inc
ins
aas
fstp
sbb
mov
xor
inc
pop
sbb
int3
lods
or
in
mov
jne
mov
jno
cld
popa
aam
sub
push
dec
xor
hlt
or
mov
xchg
mov
hlt
mov
clc
jecxz
retf
mov
pushf
loopne
mov
add
xor
dec
mov
jmp
dec
jb
push
mov
pop
retf
add
sahf
mov
jmp
push
push
push
dec
shl
xchg
jnp
call
jge
repz
sbb
mov
or
fiadd
dec
push
or
xor
cli
retf
inc
adc
(bad)
ds
jle
cs
loop
lods
xor
adc
sbb
call
ss
add
cmp
repz
sbb
mov
ins
imul
lds
cmp
push
dec
dec
add
jno
mov
pop
out
cmps
das
test
adc
xchg
stc
and
in
ds
dec
mov
push
out
mov
outs
mov
or
lock
or
test
into
clc
inc
or
dec
faddp
push
je
in
jno
test
pop
mov
mov
or
scas
sar
(bad)
mov
inc
test
sbb
inc
xor
repz
add
mov
aad
adc
mov
push
cli
cmp
ss
sbb
repnz
push
out
push
xor
cmp
ins
out
aad
and
push
push
pop
mov
mov
fwait
cmps
sti
imul
or
adc
ret
into
pop
(bad)
pop
mov
call
xor
lods
and
mov
mov
pushf
sub
push
push
popa
aam
daa
cmc
jmp
icebp
nop
or
retf
mov
push
les
add
sti
push
xchg
push
cld
pop
addr16
pop
stos
pop
out
in
test
cmp
mov
mov
in
inc
xor
sbb
imul
and
in
jg
push
dec
adc
jle
xlat
cmc
xor
mov
(bad)
call
js
std
xchg
stos
xchg
je
daa
pop
outs
xchg
out
(bad)
cmp
mov
test
retf
add
mov
mov
nop
fwait
adc
lods
jno
jge
rol
ret
add
xor
jp
pop
and
dec
aad
mov
jmp
inc
in
push
sbb
mov
adc
das
add
gs
scas
sbb
jo
retf
mov
inc
std
fcmove
es
pop
sub
mov
push
clc
movs
mov
xchg
pop
fwait
test
addr16
inc
mov
hlt
or
add
sbb
inc
pop
push
sub
call
cli
or
jno
xlat
fwait
aam
add
jge
rol
mov
bound
push
nop
sub
xor
mov
dec
inc
mov
xor
adc
rol
pmullw
jmp
xchg
out
mov
sbb
aas
inc
xchg
sub
mov
aam
xchg
push
pop
sbb
pop
add
icebp
add
dec
mov
xchg
sti
xlat
das
stos
push
mov
sub
adc
call
test
dec
xchg
push
mov
jmp
or
mov
sub
jb
test
out
fisubr
mov
pushf
pop
scas
sbb
fcomp
mov
sbb
cmp
cmp
sti
adc
fsubr
lock
cmps
ss
jmp
imul
sbb
mov
mov
loop
adc
cmps
outs
jl
add
repz
aam
stos
(bad)
ror
cld
push
jmp
imul
loopne
cwde
jl
sti
mov
clc
ror
bound
adc
xor
push
retf
rol
xchg
stos
xchg
stos
dec
cmp
adc
pushf
jno
test
mov
inc
jmp
lahf
daa
cmc
sahf
ins
in
push
aad
pop
inc
ja
test
mov
jl
popf
(bad)
push
test
mov
sbb
mov
xor
xchg
pop
jecxz
and
inc
dec
(bad)
icebp
and
iret
ja
inc
popf
movs
repz
ins
cmc
cmps
adc
push
in
jmp
addr16
ins
mov
push
test
loopne
dec
rcr
xchg
pop
in
lods
aam
movs
std
sbb
dec
cmp
sti
sbb
ret
fld
cmp
jno
sbb
xchg
cmp
ds
sbb
in
cmp
ret
mov
cmp
(bad)
inc
mov
mov
fild
jp
out
popf
pushf
mov
push
push
xor
xchg
lahf
or
jb
adc
pop
cwde
sahf
cmp
sub
popf
xchg
jge
and
inc
pushf
mov
movs
pop
(bad)
outs
fdiv
cmp
pushf
cmp
icebp
jb
call
rcr
js
imul
gs
fild
sub
mov
adc
test
and
sbb
int
ret
push
iret
mov
jno
xchg
sbb
mov
sti
fcomp
pop
or
adc
shl
popa
in
mov
adc
xlat
outs
lods
movs
or
jg
xlat
hlt
les
sbb
cdq
rol
pusha
jmp
sti
pop
sbb
fwait
test
mov
mov
fild
or
mov
jge
imul
mov
out
mov
jo
stos
and
mov
daa
mov
sbb
mov
call
dec
lock
push
jno
jle
inc
mov
stos
jbe
ds
pusha
cli
popf
icebp
popf
mov
lods
sbb
jp
mov
enter
out
or
push
pop
xlat
mov
ins
xchg
retf
ds
ins
retf
and
and
fdivr
dec
idiv
xchg
pop
dec
cmp
enter
fistp
mov
dec
or
popf
cld
aas
pop
fmul
imul
je
das
dec
or
test
push
or
pop
push
out
push
hlt
pushf
dec
mov
sbb
and
push
xchg
pop
push
fwait
pop
or
daa
dec
push
adc
jb
jo
in
cmp
jnp
dec
push
xchg
lods
ficomp
add
outs
sub
push
or
fcomip
sub
jl
nop
and
jb
dec
aaa
test
dec
sahf
xor
nop
push
icebp
imul
stos
repnz
mov
scas
xor
es
pusha
mov
jmp
je
xchg
jo
dec
cmp
dec
daa
xchg
cmp
(bad)
pop
ins
int3
jmp
fisttp
xchg
call
sbb
jb
sahf
in
rol
(bad)
push
mov
mov
fs
mov
inc
sub
push
outs
mov
mov
inc
aam
cli
ins
xchg
jle
push
leave
imul
sti
call
rol
in
cmp
sub
sbb
das
mov
jmp
retf
push
cmp
sub
test
sub
sti
mov
loope
in
dec
or
outs
or
aam
and
jne
add
jmp
loope
out
fwait
xchg
mov
call
arpl
xor
inc
adc
pop
popf
cmp
cli
xchg
das
and
pop
add
and
jg
xchg
fmul
cmp
add
sbb
outs
fsubp
cmp
je
sbb
or
fcomi
popa
out
movs
cmp
sbb
sar
icebp
fdiv
mov
adc
add
mov
pop
sbb
pop
sbb
stos
shr
xor
loope
or
mov
lods
jmp
or
movs
mov
sbb
mov
cmps
jl
add
icebp
test
test
push
retf
(bad)
adc
xor
xor
mov
pop
sub
adc
pushf
hlt
xchg
xor
inc
or
popa
in
js
test
and
mov
movs
out
dec
imul
icebp
test
call
mov
dec
mov
xor
push
adc
mov
(bad)
sahf
cmps
or
in
or
int
nop
push
adc
pop
and
xlat
xchg
pop
pop
adc
push
daa
test
imul
nop
mov
push
push
mov
sub
hlt
cmp
mov
mov
into
aad
jne
outs
pop
or
icebp
sub
ficom
xor
aam
cmp
ret
ins
inc
imul
outs
or
or
shl
leave
push
pop
sub
or
in
addr16
mov
push
cmc
loop
mov
pop
movs
xchg
xchg
shr
fcomp
jnp
ja
retf
(bad)
xchg
cs
call
jae
mov
ret
xchg
xor
(bad)
enter
xchg
shl
mov
fs
retf
and
cli
xchg
adc
mov
push
xchg
xchg
test
and
xchg
std
xlat
sub
call
mov
data16
movs
test
adc
and
dec
sub
imul
std
mov
dec
pop
and
lock
in
cmp
mov
nop
ret
jp
shl
cmp
stc
mov
es
scas
cmp
outs
imul
pop
inc
jo
pop
cmp
mov
inc
lahf
cwde
mov
mov
mov
mov
dec
jbe
mov
cmps
cdq
xor
sub
mov
jg
imul
fsubp
(bad)
lea
call
pop
push
push
js
cmp
ins
mov
push
push
call
enter
pop
xchg
adc
sub
add
jp
rcl
mov
cmp
add
mov
push
mov
bound
sub
and
cmp
addr16
imul
mov
imul
dec
(bad)
das
mov
cmp
and
pop
mov
fwait
cmp
jecxz
je
stc
mov
cs
in
arpl
xor
jl
mov
in
pop
fadd
add
stos
dec
pop
dec
xor
xor
sbb
lods
stos
(bad)
sbb
je
xor
push
imul
or
stos
stos
scas
push
scas
pshufw
push
jecxz
adc
xor
push
shr
push
ror
stc
aaa
or
add
mov
inc
sub
bound
sar
sub
sbb
js
arpl
pop
inc
xor
cmps
push
cmp
cmc
push
mov
hlt
add
mov
jae
gs
(bad)
dec
iret
es
dec
or
sub
nop
jg
fs
leave
mov
int3
hlt
and
jl
fcmovnbe
sub
mov
xchg
and
pop
xchg
ret
jns
push
lahf
jbe
ret
mov
lea
retf
add
add
mov
int3
std
mov
adc
in
fwait
adc
jmp
test
pop
ret
loop
cmp
cmp
sti
xchg
aad
jae
dec
outs
sub
push
sub
xchg
not
xchg
std
sub
sub
mov
mov
loope
fidiv
adc
sbb
out
mov
fs
xlat
jmp
pop
sahf
pop
sub
imul
fidiv
lahf
sub
push
xchg
cs
jae
cdq
rcl
xchg
cmp
push
jb
daa
xchg
fisub
inc
push
dec
sub
dec
pop
stc
fadd
js
or
js
sar
call
pop
and
jecxz
adc
fsubrp
mov
in
xor
mov
cmp
mov
dec
mov
test
cmp
add
arpl
dec
pop
xlat
into
or
mov
cs
pusha
add
sbb
(bad)
mov
ins
adc
out
test
jmp
arpl
push
jns
sub
xchg
inc
sub
enter
sub
fmul
cmp
cdq
jno
sbb
pop
ins
xor
lea
dec
mov
xchg
jae
push
pmaxub
mov
mov
xor
sub
jle
js
idiv
jp
leave
adc
adc
outs
in
call
hlt
pop
pop
pop
popa
xchg
(bad)
or
fcomp
cmps
jb
xchg
out
or
mov
adc
add
into
loopne
sti
cmp
xor
sub
enter
out
pusha
sbb
lahf
mov
rcl
pop
movs
aam
jmp
fld
aas
lock
inc
idiv
loopne
and
enter
aam
push
mov
or
add
test
repz
mov
sub
pop
in
cmp
and
sbb
pop
call
out
movs
push
or
test
data16
pop
cld
pop
push
sar
mov
mov
nop
stos
sbb
sbb
dec
xchg
xchg
sbb
sub
ds
mov
mov
ss
faddp
fcmovne
xor
mov
shl
cdq
jmp
jmp
sub
mov
inc
ss
xchg
mov
nop
mov
shr
mov
add
adc
jno
cmp
cwde
pop
sbb
adc
scas
or
movs
mov
mov
neg
mov
xor
sub
xchg
data16
jmp
mov
sbb
or
clc
add
lock
cmps
cmp
dec
jge
jnp
or
mov
push
xor
loope
enter
xchg
or
cwde
leave
xchg
popa
(bad)
mov
movs
cwde
mov
ja
fmul
cdq
adc
fst
sub
js
inc
xchg
lock
gs
fucompp
in
mov
mov
and
arpl
xchg
push
out
cmp
mov
xchg
or
inc
push
inc
in
out
loope
gs
sub
(bad)
and
aaa
arpl
movs
mov
enter
inc
pop
not
mov
pop
(bad)
inc
and
sub
pop
pop
xchg
fsub
xchg
adc
arpl
lds
adc
fsub
cli
test
je
pop
mov
outs
push
leave
cld
sub
fisttp
pop
push
leave
repnz
cmp
cmp
in
sti
shl
mov
aaa
cmp
xchg
into
hlt
loop
pop
nop
in
xlat
push
mov
and
lahf
es
xlat
mov
mov
jmp
cmp
sbb
stos
xor
jl
cwde
popa
xor
xchg
mov
xchg
jb
xchg
test
loop
mov
int3
lods
into
nop
(bad)
push
xchg
cwde
out
loopne
test
xchg
mov
and
jo
aad
dec
xor
xchg
ins
add
jge
movs
xor
sti
pushf
inc
shr
(bad)
aam
(bad)
mov
call
je
jl
cmp
push
stos
mov
pop
inc
pushf
and
jmp
or
ficomp
cmp
in
int
(bad)
mov
imul
jne
out
sub
cmp
data16
dec
dec
jmp
sbb
popf
jns
loope
push
jp
mov
mov
dec
hlt
fimul
js
aad
xor
(bad)
add
imul
xchg
stos
mov
daa
mov
and
sahf
dec
mov
in
call
adc
lds
sti
mov
xchg
ins
popf
dec
sub
xchg
adc
and
sub
or
stos
xchg
cmp
movs
jbe
and
or
sbb
dec
movs
mov
pop
daa
dec
and
mov
mov
push
das
call
push
pop
dec
sub
adc
add
repz
mov
sbb
(bad)
inc
mov
mov
mov
cmp
push
enter
jae
sahf
and
xchg
outs
adc
push
retf
ins
mov
mov
inc
sbb
mov
cmp
dec
sbb
and
ins
push
fwait
adc
cmp
cmp
shr
sahf
sbb
(bad)
or
and
clc
add
adc
aad
pushf
(bad)
bnd
mov
mov
stos
out
out
xor
lock
mov
add
shr
stc
add
popf
fs
xor
pop
(bad)
mov
stc
dec
fdivr
mov
pushfw
sub
rcr
cs
sbb
addr16
sub
addr16
(bad)
(bad)
cwde
push
into
jp
push
xchg
lahf
lahf
imul
fbstp
fiadd
scas
in
or
ja
xchg
and
pop
or
mov
push
sahf
addr16
int3
sbb
add
dec
sub
icebp
dec
sub
cmps
loope
push
imul
push
ds
das
in
xchg
ds
add
sti
pop
(bad)
out
jb
call
or
or
test
test
jo
retf
(bad)
ret
and
addr16
xchg
ror
inc
sbb
and
aam
or
leave
test
call
mov
stos
jle
(bad)
arpl
std
retf
pushf
clc
icebp
fisubr
and
sti
mov
mov
pop
adc
imul
ins
xchg
(bad)
in
and
mov
pop
mov
push
or
(bad)
rcr
dec
test
add
dec
mov
sub
push
dec
iret
mov
fidivr
outs
cli
xor
xchg
and
mov
and
in
mov
xlat
xchg
add
xlat
mov
aaa
add
repnz
sub
mov
inc
lock
add
in
js
sbb
xchg
xlat
fisttp
add
cdq
jae
outs
push
fiadd
and
dec
cwde
adc
push
mov
adc
xchg
neg
stc
sti
(bad)
popa
inc
loop
pushf
sub
loop
(bad)
push
pop
jp
xchg
sbb
loope
jnp
test
in
pop
add
xchg
les
stos
pop
mov
out
into
call
iret
(bad)
and
arpl
inc
pop
and
lds
and
mov
cmp
lods
fisubr
pushf
int
mov
daa
xor
in
mov
(bad)
xlat
push
mov
stos
aaa
xor
add
rol
push
or
sub
repz
pop
jo
out
adc
out
push
dec
dec
mov
fistp
dec
xlat
mov
pop
mov
adc
mov
add
mov
fnstenv
sbb
imul
stos
sbb
dec
mov
jns
push
xor
hlt
xor
fadd
or
sbb
ret
or
loop
shl
jmp
mov
mov
out
retf
ret
test
mov
pop
(bad)
and
not
pop
(bad)
in
fs
(bad)
movs
pop
cmc
jmp
push
xor
adc
std
ret
push
jmp
daa
test
pop
into
pop
dec
fnstcw
push
xchg
inc
push
and
pop
daa
sbb
mov
push
cmp
out
dec
or
cli
aam
in
inc
addr16
push
xor
(bad)
mov
inc
xchg
jle
sahf
repz
cli
pop
sbb
sub
jno
xor
dec
xchg
fstp
sbb
xchg
adc
mov
mov
xchg
pop
in
cdq
xor
sbb
nop
push
xor
sub
hlt
(bad)
jns
ficomp
jecxz
jecxz
in
xlat
adc
jns
pop
xor
add
(bad)
dec
addr16
xor
xlat
add
enter
mov
or
(bad)
mov
retf
mov
lds
hlt
jb
adc
jmp
cmp
xlat
ror
cmps
push
stc
add
push
shr
inc
fxch
jp
arpl
pop
push
push
test
adc
lods
lods
sub
stos
cmps
popa
push
movs
jg
xchg
jno
mov
mov
dec
and
pop
loop
mov
mov
push
cmp
test
mov
fs
pop
mov
enter
dec
sbb
nop
adc
adc
xor
stos
cmp
mov
sub
sbb
ret
pop
push
add
ins
loope
jmp
inc
inc
idiv
fiadd
pop
pusha
loopne
cmc
adc
out
dec
pushf
arpl
outs
sub
daa
enter
clc
cld
pop
hlt
stos
mov
shl
and
ja
push
fcomp
add
bnd
out
pusha
push
cmp
nop
inc
xor
outs
cmp
adc
push
cli
in
jnp
aaa
xor
lahf
mov
sub
sub
icebp
or
cmp
cdq
mov
stos
jmp
call
fwait
jg
imul
sub
xor
push
stos
jle
push
push
sbb
mov
cmps
icebp
jg
push
cdq
push
or
dec
lock
mov
into
cwd
fcomp
xor
xchg
mov
cmps
into
xor
jmp
pop
xor
jb
div
scas
dec
and
aaa
adc
xchg
je
and
jp
in
(bad)
dec
test
xor
loopne
pop
sbb
repnz
and
ins
data16
mov
dec
ins
and
iret
inc
and
dec
sub
inc
les
dec
lods
jne
popf
out
add
sbb
mov
inc
lahf
out
fidiv
lods
push
sub
dec
les
push
and
mov
cmps
lock
or
xchg
sub
(bad)
lahf
lahf
ss
std
xchg
mov
xor
xor
in
mov
or
jb
add
add
imul
fisttp
mov
stos
idiv
mov
pop
push
int
mov
(bad)
addr16
sbb
ret
xor
mov
retf
(bad)
xchg
mov
adc
mov
sahf
jle
imul
aad
sub
hlt
inc
xor
ins
pop
pusha
add
retf
pop
pop
aam
in
cmp
xchg
in
push
xchg
sar
loope
scas
bts
add
mov
imul
jb
add
pop
pusha
and
outs
cmp
and
jecxz
add
xchg
outs
(bad)
cmp
fcomp
mov
mov
js
push
sub
int3
(bad)
push
lods
cmc
(bad)
movs
stc
mov
shl
cli
sbb
push
mov
cwde
loope
scas
inc
sti
mov
bound
jae
hlt
cli
xchg
fisttp
cmp
inc
scas
outs
stc
cmp
add
jne
pushf
out
stos
cwde
sbb
fbstp
and
out
mov
cmp
dec
arpl
jle
jge
and
jb
xor
pop
xor
clc
scas
mov
mov
mov
cs
mov
into
add
inc
imul
add
jle
sub
je
ja
jle
mov
sub
out
pushf
loopne
mov
aaa
test
push
outs
xor
dec
cmc
mov
sub
push
shl
(bad)
daa
pop
xor
daa
lods
sub
jp
aad
cmp
into
mov
dec
ret
and
cmp
mov
dec
xchg
jne
and
xchg
call
push
in
call
pop
xor
(bad)
sub
sub
or
pop
xchg
addr16
cmp
aam
enter
test
clc
pop
mov
xchg
arpl
jo
imul
mov
sub
sbb
dec
dec
call
(bad)
push
mov
aaa
inc
add
stos
push
je
mov
xor
xchg
dec
xchg
mov
in
mov
adc
adc
ror
lods
pop
pop
mov
mov
xor
test
mov
inc
add
inc
mov
cmp
lock
adc
xchg
popf
bound
outs
mov
adc
aad
xor
mov
dec
std
inc
ins
xchg
imul
shl
(bad)
dec
pushf
push
aad
jbe
stos
(bad)
sysenter
lea
aad
xchg
inc
(bad)
pop
jmp
xchg
dec
je
lods
pop
imul
mov
in
clc
(bad)
fldenv
aam
adc
into
inc
rcl
mov
adc
fidiv
cmp
xchg
les
sti
pop
add
mov
cmp
inc
popf
jb
xor
mov
out
sbb
fs
shr
xchg
mov
mov
call
pop
pop
das
loopne
cmp
mov
jbe
shr
sti
push
mov
mov
call
scas
add
mov
aaa
mov
pop
fstp
lds
xlat
inc
xchg
je
cmps
mov
addr16
(bad)
jnp
sub
scas
clc
or
int3
mov
out
push
mov
sub
xor
cmps
mov
add
loope
jp
hlt
mov
jns
lock
push
retf
xor
pop
sbb
(bad)
add
popa
mov
aas
add
scas
ja
clc
cmp
outs
repnz
push
outs
mov
call
loop
mov
ins
xchg
fucomp
add
dec
(bad)
sub
and
pop
cmp
adc
xchg
hlt
or
or
adc
sbb
sar
ss
imul
fstp
scas
cmp
cmps
out
inc
push
push
hlt
dec
imul
(bad)
fidiv
rol
cmp
iret
loope
dec
aas
add
shld
xchg
arpl
stos
stos
jp
sbb
xchg
ror
aaa
xchg
addr16
add
mov
fstp
jne
and
retf
enter
jne
dec
cmp
adc
add
mov
mov
jno
retf
sub
sub
xchg
iret
jae
xchg
jmp
(bad)
mov
jp
xlat
mov
pop
les
sub
leave
popa
xchg
pop
neg
mov
out
pop
les
sub
xor
adc
sub
sub
xchg
nop
xor
fisub
dec
popf
fst
xchg
stc
cmp
push
in
dec
xor
cmp
xor
cmp
fmul
and
mov
(bad)
outs
jbe
mov
jne
xchg
movs
imul
fwait
loop
test
sub
and
sub
mov
mov
(bad)
cmp
xchg
(bad)
mov
sar
mov
mov
aam
rol
push
ins
jl
push
ins
pop
xchg
dec
cmp
inc
pushf
push
std
and
cmp
fist
sub
mov
cdq
das
pop
cs
push
adc
push
pop
ja
sub
shl
xchg
jmp
xor
mov
(bad)
and
sar
iret
adc
loop
dec
dec
shl
mov
inc
shr
push
(bad)
adc
cmc
iret
and
(bad)
ret
and
std
pop
pop
adc
imul
inc
js
bound
rcl
sub
(bad)
fist
mov
loope
shl
adc
mov
test
pop
into
and
pop
xchg
aas
jmp
mov
inc
popa
imul
ret
into
out
jb
xchg
imul
lock
hlt
add
not
test
push
mov
mov
mov
adc
cld
mov
pusha
test
sbb
or
clc
xor
jp
cli
aad
inc
scas
retf
and
xchg
push
inc
xchg
jnp
push
daa
and
add
into
xor
ret
shl
cmps
jg
xchg
rdmsr
add
jmp
loope
jo
xchg
or
aad
out
inc
dec
jbe
jno
out
and
cs
aaa
in
outs
cmp
(bad)
loopne
push
mov
popa
stos
outs
cmps
pop
mul
dec
sbb
mov
sub
sub
sbb
lahf
jle
add
(bad)
aam
xor
in
test
das
add
jge
popa
and
fmul
sahf
(bad)
jb
jno
ins
dec
sbb
xor
out
cmp
movs
adc
lods
or
movs
xchg
cmp
scas
pop
aas
add
into
outs
jns
scas
dec
dec
(bad)
out
fld
lds
add
movs
lahf
mov
mov
dec
loope
cld
mov
retf
jmp
jecxz
pop
icebp
push
mov
pop
stos
xchg
cdq
loope
inc
pop
inc
(bad)
mov
int3
scas
mov
leave
int3
in
push
aaa
out
cdq
or
ret
pop
aaa
pop
sbb
sub
nop
mov
dec
sub
cwde
retf
das
fisubr
rol
and
dec
dec
dec
sbb
mov
daa
jle
xlat
fst
push
daa
inc
xchg
(bad)
adc
lods
xor
in
jp
push
lods
jnp
in
loope
(bad)
ror
jns
repz
enter
test
lds
ret
test
or
rol
lods
sub
stos
fcmove
dec
fucomp
test
inc
mov
xchg
mov
mov
push
loope
and
jns
sub
jp
out
and
sti
add
data16
inc
mov
sbb
cmp
test
or
gs
inc
in
(bad)
and
(bad)
or
das
push
mov
test
loope
jnp
sbb
add
loop
dec
(bad)
enter
dec
xchg
jbe
jo
fs
fwait
jp
repz
and
daa
xchg
pop
test
add
(bad)
xor
ins
stc
cmc
mov
or
dec
enter
sub
je
ja
imul
cs
pop
push
hlt
cs
xchg
xchg
dec
dec
add
scas
xlat
xchg
sub
pushf
and
xor
xor
gs
push
jae
push
ret
push
or
pop
and
xchg
inc
pop
and
jmp
dec
mov
movs
jb
ins
sbb
das
outs
rcr
retf
lea
add
stos
cmp
mov
add
mov
test
or
mov
sar
push
push
(bad)
ins
dec
movs
popa
or
or
xchg
test
popf
mov
fst
or
mov
outs
pop
aad
jae
sti
cwde
xor
data16
jle
sub
mov
(bad)
xor
adc
aad
jge
pop
cmp
and
adc
adc
(bad)
daa
pop
fwait
pop
stos
loop
dec
psllq
lods
mov
fs
pop
mov
jmp
lea
inc
or
cs
fstp
or
stos
adc
outs
pop
shl
mov
(bad)
mov
mov
enter
dec
adc
inc
xchg
dec
jp
int
cmp
xchg
sub
fimul
jbe
mul
add
cmps
push
jmp
fs
pop
in
scas
not
rcl
xor
inc
adc
aam
aaa
ret
(bad)
jl
jne
mov
adc
inc
xchg
in
aam
data16
inc
adc
mov
sub
cmp
mov
repz
nop
or
iret
jns
add
(bad)
(bad)
in
jnp
rol
test
cmps
(bad)
hlt
sub
pop
jmp
and
mov
repz
add
jle
jbe
pop
xchg
or
(bad)
mov
xchg
ret
lods
xor
pop
cdq
call
out
cli
sub
mov
mov
mul
outs
cmp
inc
in
mov
dec
xor
fadd
popa
cdq
loope
mov
stos
jnp
push
pop
xlat
xor
sbb
test
pop
mov
repnz
leave
out
mov
in
push
(bad)
je
fsubr
mov
push
popw
push
jno
or
popf
sub
mov
retf
stos
jo
and
aaa
popf
xchg
leave
pushf
dec
sbb
pop
int3
rcl
xchg
xor
addr16
in
aas
dec
add
in
mov
je
mov
ss
mov
mov
xchg
mov
aam
adc
xchg
lock
loop
xchg
ds
jbe
push
inc
inc
add
sub
ja
mov
pop
dec
aad
or
sub
pop
pop
and
jmp
jbe
hlt
or
les
pushf
repz
adc
and
push
popf
(bad)
enter
(bad)
fidiv
or
daa
in
jl
jae
ins
movs
add
cmp
mov
ror
adc
icebp
inc
mov
loop
out
int3
addr16
fmul
dec
pop
sti
sbb
popa
je
cli
mov
mov
ins
push
add
jo
shr
jg
das
mov
dec
cmp
das
mov
add
cmps
ds
add
nop
jmp
fdivr
sub
and
pop
add
cmp
shl
xor
or
sub
aam
fsubr
add
ror
mov
dec
les
sbb
or
mov
xchg
cmp
hlt
jb
jne
out
call
add
movs
lods
xlat
mov
dec
mov
and
dec
jns
(bad)
xor
fwait
sub
(bad)
adc
cdq
xor
dec
xchg
pushf
out
nop
cmps
(bad)
outs
nop
aas
idiv
mov
ss
mov
pop
mov
sbb
fsub
clc
imul
(bad)
(bad)
data16
mov
cmp
ret
push
ficom
xchg
adc
inc
lahf
pop
cmp
pandn
lea
cmp
ret
push
cmp
sub
cwde
mov
xchg
ret
jb
jmp
inc
mov
aad
cmp
mov
fstp
out
(bad)
retf
sub
loopne
(bad)
(bad)
mov
scas
aas
cmp
aam
mov
jle
cs
lods
cmp
clc
in
(bad)
fdivr
shl
dec
loop
loop
test
dec
mov
dec
in
cld
icebp
mov
and
enter
mov
imul
mov
xor
pop
fs
or
sub
scas
push
mov
sbb
pop
clc
mov
or
dec
icebp
mov
dec
xor
push
shl
sbb
sar
jmp
lock
out
iret
stos
arpl
and
xchg
jg
inc
enter
or
xchg
mov
ret
test
xchg
or
pop
loopne
xor
jl
sbb
fnsave
stc
pusha
nop
je
or
aad
or
and
lea
rol
mov
pusha
sbb
sar
mov
or
out
inc
pop
inc
adc
sub
xchg
cmps
adc
sbb
daa
cdq
pop
sub
xor
addr16
cwde
call
mov
mov
or
pushf
rcl
sbb
out
dec
jmp
push
and
jl
mov
push
cmp
push
(bad)
xchg
dec
out
mov
cmc
and
mov
or
jne
(bad)
and
pop
adc
movs
xor
sub
clc
add
ins
mov
icebp
push
fdiv
sbb
enter
inc
xchg
mov
jo
mov
out
sub
ins
mov
icebp
mov
mov
mov
add
adc
jae
pop
inc
imul
pop
push
outs
jg
inc
xor
(bad)
aad
test
mov
scas
inc
pop
lods
stc
xchg
jno
rol
sbb
shr
arpl
push
iret
test
push
dec
pop
data16
fcom
ret
xchg
shl
adc
xor
mov
xor
cmp
cs
sbb
and
in
mov
mov
fucomp
fwait
xchg
mov
dec
push
icebp
sub
add
add
mov
jmp
and
sti
pop
sar
mov
push
adc
mov
fnsave
scas
and
call
xchg
push
nop
out
jmp
fild
fs
cmp
mov
repz
mov
ins
jo
fmul
hlt
push
call
aam
push
push
dec
mov
jno
mov
bound
sub
jns
loope
test
into
shl
call
inc
gs
or
ret
mov
dec
scas
arpl
mov
sahf
and
imul
mov
and
pop
mov
rcl
imul
push
or
sub
nop
ss
ret
push
lods
sub
popw
rcl
dec
in
mov
mov
push
mov
ins
xlat
sbb
lahf
dec
(bad)
jp
push
test
inc
stos
pop
cmps
lock
dec
xchg
mov
jg
fwait
or
cmp
enter
dec
fcmovnb
call
loop
mov
push
cdq
cmp
jne
call
mov
test
cdq
mov
sahf
mov
push
push
jg
mov
dec
xchg
(bad)
and
sbb
jl
out
fsubrp
jae
mov
and
jo
lea
dec
in
test
pop
retf
aas
dec
jl
in
or
jecxz
pop
fucomip
mov
sub
and
adc
movs
or
inc
and
psubsb
jmp
mov
sbb
push
bound
xor
jmp
cdq
retf
int3
jns
adc
(bad)
repz
pop
movs
out
jge
cmp
xchg
or
neg
pop
add
inc
adc
xor
pop
or
xor
mov
add
lahf
loope
cmp
dec
div
retf
repnz
inc
aaa
jl
rol
xlat
fs
daa
sbb
out
xchg
loop
mov
scas
cmps
push
movs
mov
xor
popa
mov
cwde
mov
pusha
pusha
sbb
pusha
mul
loopne
out
push
and
sar
cmp
and
jmp
sub
adc
sub
and
pop
in
in
and
xchg
pop
std
ins
adc
js
popa
outs
rcl
data16
and
push
icebp
lock
or
push
cmps
jmp
pop
inc
adc
jmp
out
xchg
nop
imul
xchg
movs
sbb
push
mov
jle
in
or
sbb
jge
stos
inc
pextrw
mov
xchg
sbb
enter
push
jmp
pop
push
and
cwde
push
and
popa
mov
and
pop
or
in
mov
or
mov
push
ds
lds
and
add
dec
xor
(bad)
sub
adc
data16
xchg
cmp
cmps
int
cmp
jg
inc
push
pop
push
xor
adc
push
xchg
adc
jb
or
mov
xchg
arpl
sub
enter
in
dec
outs
xlat
leave
int
jl
sbb
stc
icebp
repz
pop
mov
ja
fld
xchg
mov
loopne
push
ror
ret
iret
and
outs
jne
(bad)
dec
mov
shr
sub
popf
aam
jle
push
and
pop
and
test
mov
sti
das
jo
repz
aas
stos
mov
popf
or
inc
aaa
sar
and
jae
xchg
xchg
loopne
push
xchg
shl
rcr
sub
lods
inc
dec
jo
dec
mov
ins
add
retf
sbb
ror
mov
sar
test
test
xchg
push
mov
enter
mov
in
retf
movs
popf
fsub
xor
retf
add
fdecstp
leave
imul
sbb
sahf
lahf
or
push
pushf
call
loope
loope
popa
pop
stc
pop
loope
xor
fs
stc
sbb
jo
dec
sbb
push
popf
cmp
jmp
pop
cmp
ret
adc
cmp
daa
mov
dec
or
movs
jmp
cli
(bad)
adc
sbb
sbb
jmp
imul
jl
stc
movs
je
scas
test
lock
imul
pop
or
ins
sub
neg
daa
addr16
dec
and
cmc
in
cmp
xor
ins
repnz
mov
clc
scas
pop
or
jl
repz
ja
std
xchg
pop
add
dec
xchg
xchg
sbb
and
pop
hlt
sub
and
aaa
loope
sbb
int3
adc
jmp
sbb
popf
test
lahf
xchg
repz
sbb
dec
enter
adc
ja
xchg
adc
xor
arpl
pop
(bad)
jns
jecxz
imul
mov
scas
jbe
pop
out
adc
loop
nop
xchg
repnz
scas
mov
in
xor
sbb
dec
or
mov
aad
addr16
retf
cmps
pop
lds
sti
jno
cbw
scas
and
inc
xchg
hlt
ret
icebp
pushf
ins
fs
mov
xlat
cmps
and
xor
xchg
sub
mov
cmp
sbb
dec
stc
jg
jbe
rcr
push
mov
mov
retf
ss
fwait
into
adc
call
lods
jmp
and
pop
mov
jae
push
shr
xchg
mov
dec
sar
push
test
pop
mov
int3
dec
in
xchg
test
or
fisttp
pushf
push
xor
adc
and
and
cmp
fstp
movs
je
adc
push
adc
imul
xchg
movlps
mov
add
loopne
dec
mov
xchg
in
xor
sub
in
xchg
in
imul
in
xchg
mov
cmp
xor
adc
xchg
ins
pop
inc
in
lahf
mov
add
out
rcl
mov
mov
adc
sahf
cwde
mov
fdiv
in
test
into
push
mov
inc
sahf
clc
repnz
scas
scas
sub
rcl
stos
dec
dec
arpl
push
sub
cmp
and
je
nop
loopne
add
cmpxchg8b
(bad)
leave
or
jmp
xlat
jmp
ret
mov
int
sbb
lods
jge
ret
int
xchg
dec
rcr
sbb
mov
mov
cli
stos
inc
mov
cmps
sub
push
lea
inc
ds
ins
pop
stc
push
stc
shl
mov
xchg
sbb
int3
mov
inc
mov
adc
adc
repz
scas
lea
pushf
push
stos
mov
ficom
shl
cs
or
ds
je
jmp
dec
fcomp
loope
xor
push
mov
push
and
es
jae
clc
lea
jl
adc
xor
add
pop
jl
or
lods
xor
push
je
aam
sub
fsub
ss
cld
mov
fadd
sub
ja
hlt
fdiv
nop
ins
(bad)
adc
(bad)
gs
daa
imul
add
inc
(bad)
mov
ud2
sbb
daa
ret
mov
mov
shl
shl
sbb
clc
pusha
xlat
or
or
div
sub
and
aad
mov
shr
pop
lods
xor
mov
retf
push
pop
or
push
dec
sub
call
mov
inc
xchg
jae
mov
aam
daa
ficom
sbb
dec
cmp
movs
daa
daa
xor
inc
push
aaa
cmp
retf
rcr
cmps
mov
xchg
mov
fiadd
into
adc
movs
iret
push
stos
adc
sbb
mov
fdiv
sbb
loop
mov
test
rcr
xlat
mov
mov
movs
loope
(bad)
imul
jae
aas
call
scas
add
sahf
addr16
mov
aam
push
dec
cld
add
stos
push
mov
cli
dec
mov
push
sbb
imul
push
and
call
ror
cmp
mov
push
inc
cmp
sub
sub
bound
xor
int
adc
out
imul
fisttp
fbstp
fdiv
dec
mov
push
push
dec
cld
stos
inc
pushf
hlt
lds
hlt
and
clc
xchg
fucomip
adc
inc
cwde
imul
jp
fcomp
push
jb
jge
shr
push
xor
mov
cmp
jns
in
sub
cmp
(bad)
xchg
push
int3
lock
or
jge
sahf
inc
fmulp
div
in
fucomip
movs
pop
addr16
mov
jl
sti
sbb
push
leave
movs
jns
rol
push
sahf
(bad)
nop
and
cmp
sbb
inc
mov
arpl
retf
mov
out
and
jmp
cmp
fcom
test
pop
mov
xor
aam
fbld
add
push
call
mov
std
ja
dec
test
iret
out
out
rol
push
outs
repnz
or
cmp
out
fnstenv
pop
mov
hlt
dec
mov
inc
adc
pop
add
sbb
(bad)
jmp
sub
add
sub
les
xchg
fwait
mov
js
ror
and
gs
mov
loop
int3
dec
pop
pop
xor
adc
shl
ret
dec
jmp
(bad)
mov
sub
in
xchg
lods
adc
call
mov
sub
xchg
pop
das
add
rcr
std
movs
sti
daa
dec
pop
sbb
mov
lods
into
cmp
rcr
jns
xchg
fcomp
lds
test
inc
sub
pop
jns
cmps
sar
jne
add
mov
mov
shl
and
jmp
push
xor
clc
push
cmp
sti
lock
mov
pop
fs
movs
mov
and
jmp
jns
mov
loopne
mov
ins
ficom
xchg
xchg
push
aas
push
mov
xor
push
rcl
pop
fdivr
fdivr
ins
mov
(bad)
pop
adc
push
mov
ins
sbb
shl
jbe
and
inc
xchg
mov
mov
fs
adc
jne
jp
lahf
fadd
loope
and
pop
shl
fidiv
cmps
xor
push
int3
ret
(bad)
jecxz
ins
xor
add
call
addr16
add
inc
(bad)
lock
rcl
dec
and
mov
imul
cmp
dec
jl
push
jbe
aas
pop
or
push
or
loop
dec
sti
push
(bad)
pop
pop
jbe
mov
cmp
(bad)
or
gs
xchg
cmp
pop
sbb
out
jo
lock
iret
adc
nop
dec
scas
(bad)
rcr
xor
addr16
dec
ss
add
xor
jbe
imul
inc
dec
mov
lock
sbb
mov
fsubr
scas
xchg
jo
clc
mov
xor
jo
or
inc
mov
inc
xchg
nop
in
pop
jp
push
cli
jne
test
rol
in
sbb
add
mov
push
mov
adc
jle
mov
data16
add
test
fsub
rcr
ss
dec
jae
inc
mov
jge
in
xor
(bad)
sub
fisubr
xor
and
mov
fcomp
push
adc
iret
add
inc
inc
cmp
(bad)
enter
mov
mov
aas
jmp
imul
cmp
jb
or
adc
push
push
xchg
lods
loopne
and
rcr
out
lea
sbb
aaa
sub
retf
out
push
stos
js
mov
inc
sbb
aad
or
pop
fcom
add
cmps
mov
mov
mov
mov
test
ds
aam
cdq
aad
xchg
int
jle
jmp
stos
pushf
mov
ficomp
repz
or
push
movs
adc
xlat
outs
scas
les
adc
mov
sbb
adc
std
mov
ja
ret
xchg
std
push
dec
xchg
test
push
sbb
adc
fld
inc
sbb
jecxz
mov
bnd
xchg
out
cmp
mov
or
mov
aaa
les
int3
test
lahf
les
ins
jo
fisubr
into
pop
ds
inc
add
mov
jg
rcr
jmp
jmp
adc
pusha
dec
leave
cmp
sbb
inc
dec
mov
push
dec
mov
cmp
push
nop
cmp
mov
outs
mov
clc
mov
mov
xchg
ja
fcom
mov
ins
repnz
dec
push
inc
add
popf
cdq
sar
bound
outs
fld
adc
data16
jp
push
sub
push
inc
lahf
jnp
cmc
mov
mov
lock
mov
(bad)
cmp
std
jp
stos
int
test
sar
push
sub
arpl
(bad)
fild
xchg
adc
mov
nop
pop
sahf
out
das
popf
js
fucomp
mov
sub
arpl
pop
ficom
ror
in
push
dec
lds
mov
pcmpeqb
pop
cmp
jmp
das
je
shr
jp
dec
in
pop
or
iret
inc
das
retf
cmp
(bad)
jns
lods
jns
inc
jecxz
sete
cli
lahf
pop
pop
push
pushf
fsub
or
push
mov
jo
test
lahf
lods
cmp
loope
adc
add
shl
lods
and
jae
cmp
mov
jbe
cmps
mov
stos
shl
jb
(bad)
mov
stc
(bad)
fidiv
das
sbb
nop
and
dec
lds
popf
add
int
dec
and
dec
test
mov
dec
gs
out
mov
jmp
shr
inc
push
dec
jecxz
inc
ja
inc
cmp
adc
add
pop
ins
icebp
sbb
sbb
mov
adc
nop
xchg
xor
gs
inc
imul
push
or
and
mov
adc
push
mov
jbe
sub
rcr
loope
stc
cmp
fsub
add
cmp
addr16
shr
pop
push
movs
pop
adc
fldenv
loope
push
add
fs
and
out
imul
pop
popf
inc
pushf
cmp
jge
push
xchg
sbb
sub
and
sbb
icebp
and
jle
adc
push
xor
mov
sbb
mov
cmp
scas
xchg
lock
inc
mov
or
es
xor
add
xchg
test
sti
ins
xchg
cmp
sbb
or
ss
jbe
jae
and
push
xor
pushf
sbb
pusha
mov
and
dec
rcr
popa
and
jmp
std
adc
mov
jmp
mov
push
jbe
jnp
pop
jno
xchg
push
scas
push
add
sahf
arpl
mov
int3
jne
and
xchg
(bad)
les
rol
cwde
jl
ja
fild
jo
cdq
sbb
pop
loope
cmp
cs
and
sub
cmp
mov
cmp
dec
enter
icebp
aad
cmc
mov
pop
stos
or
(bad)
push
mov
cmps
fsubr
and
vpunpckldq
shr
(bad)
sahf
movs
imul
cmp
push
cdq
pop
xor
fstp
jbe
sbb
in
jbe
data16
sub
sahf
pusha
into
push
jmp
scas
lds
cli
retf
pop
in
repz
cwde
lahf
mov
outs
dec
and
ficomp
jno
icebp
add
out
xor
shl
jl
sub
sbb
inc
and
inc
push
adc
pushf
inc
push
loope
and
pop
shl
pop
and
enter
mov
xor
mov
call
test
sahf
xor
out
jmp
adc
adc
in
pop
cmps
int
shl
jl
test
adc
or
shl
fwait
(bad)
sub
stc
rcr
fstp
jg
mov
xchg
ror
mov
cmp
pop
ret
sti
jmp
bound
cwde
jmp
daa
add
cli
jg
mov
(bad)
imul
push
dec
dec
push
mov
and
in
(bad)
cli
sbb
enter
popa
xchg
sbb
outs
xchg
mov
clc
xchg
xchg
mov
rcr
push
in
sub
xor
aas
leave
lock
scas
mov
dec
mov
xor
jmp
sbb
mov
xor
and
or
cli
add
daa
push
mov
or
scas
addr16
pop
call
std
ret
ins
out
mov
lock
cmp
not
push
fnstsw
nop
fs
out
shl
pop
stos
test
push
mov
or
imul
or
and
lfs
ins
nop
daa
les
jle
xor
or
rol
rcl
scas
or
adc
fisttp
xor
sysret
lods
dec
test
pushf
rcl
and
loope
popa
and
mov
shr
add
sub
(bad)
sub
sti
enter
imul
das
adc
push
je
dec
sub
in
xchg
jbe
or
das
arpl
xor
push
dec
out
mov
call
repnz
add
ins
scas
sbb
sbb
mov
push
mov
mov
xor
xchg
aas
(bad)
or
rcr
lock
lds
xchg
rol
aas
mov
daa
mov
aaa
lock
test
jg
jbe
rol
adc
inc
jns
xchg
repz
dec
push
mov
mov
jno
and
gs
stc
(bad)
jnp
adc
mov
retf
jnp
out
scas
pushf
out
enter
fwait
mov
mov
(bad)
clc
sbb
add
in
and
movs
push
inc
ins
(bad)
jl
movs
xchg
aad
jle
sub
pop
lods
xchg
test
add
jb
aam
mov
rol
mov
cmps
(bad)
cwde
push
xchg
retf
cld
dec
retf
add
inc
(bad)
push
dec
inc
int3
xchg
add
in
push
pusha
test
cmps
data16
pusha
adc
cmps
mov
cmps
pop
pop
push
js
test
xor
dec
push
dec
cmp
cmp
mov
scas
dec
xchg
xor
inc
adc
out
aaa
repz
(bad)
dec
bound
test
popa
mov
fild
icebp
fdivr
cmp
inc
cmp
add
jbe
stos
inc
inc
sti
sbb
icebp
pusha
sub
movs
rcl
and
ins
out
sub
adc
dec
jg
imul
xor
pop
jbe
cmp
cmps
cmp
test
lods
in
lods
adc
jge
jae
cmps
add
cli
mov
stos
and
(bad)
jns
pop
mov
mov
fsubr
ins
xchg
mov
into
pop
add
mov
or
into
mov
cmp
js
shl
mov
sbb
scas
ins
jg
call
(bad)
pop
js
sahf
iret
mov
push
cli
mov
movs
add
mov
jp
jbe
xchg
in
jns
es
cwde
dec
retf
xchg
jmp
(bad)
sti
js
mov
lock
(bad)
ffreep
jns
ins
push
cdq
in
das
push
es
(bad)
mov
loope
gs
mov
call
popa
mov
adc
out
bound
adc
xchg
xor
push
jno
jmp
gs
test
fadd
sbb
(bad)
retf
jo
push
scas
mov
in
fidiv
xor
les
dec
scas
xchg
add
and
mov
dec
xlat
in
hlt
sti
add
xchg
inc
out
es
inc
dec
and
dec
and
or
push
add
pop
gs
or
ins
outs
pop
pop
out
dec
ins
jmp
pop
in
push
mov
popf
dec
outs
and
jb
das
or
bound
outs
retf
daa
inc
movs
ins
ins
add
mov
sbb
mov
fs
or
xor
inc
mov
adc
out
ret
(bad)
push
inc
jp
in
out
push
clc
inc
gs
imul
mov
jmp
jecxz
cmp
sbb
dec
or
pop
js
mov
cld
(bad)
int3
cmp
mov
cwde
cmps
outs
in
loopne
add
adc
jmp
fist
loope
into
or
stos
mov
or
inc
mov
pop
ret
in
cmp
and
mov
out
and
call
repz
imul
loope
xchg
iret
repz
or
cmc
fild
xor
repz
mov
pop
(bad)
mov
mov
and
adc
mov
(bad)
mov
sar
push
mov
xor
outs
cmc
in
vaddss
mov
mov
das
outs
int3
mov
imul
dec
mov
sbb
mov
call
push
fdiv
cmps
adc
ss
pop
add
add
jecxz
into
jmp
xlat
inc
shl
test
rcr
sub
cmp
imul
cs
imul
xchg
jns
ret
jae
imul
add
pop
push
outs
xor
mov
shl
inc
hlt
jge
popa
or
les
pop
adc
push
sbb
jl
cmc
clc
mov
push
sahf
jns
sub
sahf
pop
aas
dec
iret
sahf
cmp
fadd
xchg
sbb
shl
sbb
jmp
mov
and
fld
lds
lods
(bad)
stc
(bad)
push
dec
add
inc
add
mov
dec
mov
sub
mov
shl
push
shr
movs
lahf
mov
xor
bound
dec
and
mov
mov
in
call
mov
push
sbb
jmp
push
das
inc
lock
sub
or
loope
addr16
xchg
adc
jno
mov
jnp
int
rcr
je
out
retf
xchg
mov
mov
push
adc
jg
sub
xor
or
pop
push
cmp
ret
cmps
imul
push
mov
hlt
push
fs
or
dec
test
pop
mov
pop
xor
mov
sbb
jge
loope
ds
nop
lock
ret
and
in
sbb
inc
mov
enter
xor
jno
enter
stos
xchg
stc
imul
and
out
jb
mov
and
cmp
jns
pop
adc
inc
loop
mov
and
leave
adc
push
pop
(bad)
enter
cmp
cmp
dec
mov
in
cwde
pop
and
adc
imul
or
jle
call
sub
mov
scas
lea
sub
mov
pop
pop
jo
jo
mov
cmp
pushf
inc
jae
sub
adc
mov
stc
dec
mov
mov
push
mov
fist
lds
test
cdq
xor
cmp
lahf
xchg
addr16
sub
das
xor
adc
in
jne
jmp
gs
addr16
fdivr
or
idiv
fnstenv
mov
cli
jmp
dec
loope
into
(bad)
sub
icebp
cmp
push
mov
pop
mov
mov
fild
out
cmp
repnz
mov
test
and
push
shufps
xchg
repz
sar
mov
xor
cmc
rcr
mov
dec
or
xchg
add
movups
xchg
rcl
ins
leave
cs
xchg
test
idiv
xchg
xchg
jg
iret
sbb
jmp
daa
mov
dec
das
mov
lahf
xlat
push
in
push
xor
and
push
push
xor
push
out
in
std
pop
cdq
shr
and
jne
or
mov
mov
stc
cmp
and
jo
in
jns
mov
js
lahf
repnz
or
out
scas
xchg
bnd
add
cmp
sub
pop
cdq
mov
inc
cmc
cmp
rcl
or
and
inc
adc
test
xor
xchg
mov
pop
mov
outs
mov
sahf
ret
cmp
loop
out
scas
adc
bound
test
jno
mov
xchg
dec
in
ins
lahf
lea
sbb
add
jo
movs
jg
in
jns
jmp
jae
imul
jnp
daa
push
inc
test
sti
in
and
pop
(bad)
rcr
inc
addr16
and
jbe
add
(bad)
stc
pop
and
dec
call
xor
mov
aaa
pop
idiv
and
mov
xchg
jmp
ins
and
ror
sub
stc
(bad)
push
pop
or
aaa
fs
push
xchg
mov
mov
ss
daa
push
iret
xchg
cmp
xchg
pop
lahf
push
xchg
fwait
mov
sub
test
retf
pop
xchg
imul
jge
add
loope
sbb
or
or
or
mov
or
sbb
shr
outs
movs
ret
mov
and
cmps
jo
fs
fistp
cmp
ror
loopne
mov
inc
cmp
(bad)
sbb
pop
pop
hlt
jmp
dec
jg
cmp
mov
push
mov
pop
lds
ins
xor
pusha
retf
pop
dec
ja
adc
adc
sbb
or
jp
out
fild
ja
dec
js
sub
push
push
lea
push
gs
aas
test
cmp
ret
xor
or
out
icebp
pop
int
jp
jg
shl
repz
push
(bad)
xchg
ja
sbb
push
mov
xchg
inc
ror
push
jmp
and
jns
sub
fbld
jno
stc
call
test
loopne
jl
repnz
inc
test
xor
sub
aas
ds
popf
mov
rcl
and
retf
call
call
or
pop
setnp
test
jmp
pop
cmp
daa
fdiv
mov
pop
jnp
fisttp
xchg
popa
cdq
mov
mov
push
(bad)
xchg
mov
fmulp
cmps
add
jge
iret
xchg
jmp
shl
sub
test
test
and
jb
pop
mov
not
sbb
push
fdivr
daa
loope
add
es
test
mov
outs
inc
cdq
push
cmc
mov
and
pop
idiv
dec
jne
dec
outs
pop
sbb
jle
clc
xchg
fcom
dec
into
in
mov
jbe
fwait
outs
mov
stos
inc
mul
movs
xchg
inc
imul
push
push
loop
arpl
(bad)
xchg
push
ret
and
fwait
(bad)
aad
sub
or
mov
mov
sub
inc
xchg
jle
jb
rdtsc
out
pop
pop
jo
pusha
dec
push
iret
outs
push
cli
jne
aad
data16
test
scas
push
cdq
mov
das
xchg
inc
out
lahf
aas
ss
cdq
lahf
jmp
and
out
pop
std
mov
sub
std
xor
sbb
mov
loope
ja
test
inc
and
dec
mov
add
pop
mov
fs
dec
mov
rol
lahf
out
popf
dec
mov
fsub
jns
pop
int3
aam
outs
stc
dec
(bad)
div
aam
call
cmp
mov
jnp
rcl
adc
shl
xchg
mov
sub
xor
in
(bad)
cmp
pop
icebp
fcom
cmp
movs
jge
dec
test
stc
jno
xchg
cld
rcl
and
outs
out
dec
sbb
xchg
or
pop
jle
add
mov
mov
jmp
cli
loope
retf
sub
repz
sar
push
(bad)
fbstp
mov
mov
mul
mov
sub
or
mov
(bad)
push
into
dec
jge
or
add
lods
push
test
pushf
xor
iret
(bad)
outs
push
jecxz
pop
and
mov
jmp
(bad)
add
cmp
lock
mov
pusha
inc
aas
adc
mov
cmp
adc
addr16
cmp
adc
push
xchg
pop
(bad)
imul
movs
fs
xor
sub
fdiv
ret
mov
cwde
mov
ins
or
adc
(bad)
out
enter
push
scas
call
jg
jnp
add
out
test
and
loop
sbb
imul
je
jmp
push
lea
aam
dec
cmc
inc
mov
out
sbb
sub
or
ds
mov
ficomp
in
and
es
cs
(bad)
ss
loopne
fistp
cmp
in
xchg
push
lods
shl
inc
inc
inc
mov
test
cli
lock
mov
not
mov
ficom
mov
mov
add
push
sub
call
imul
out
hlt
and
test
pop
jl
sub
ins
jle
loope
cmps
loopne
push
dec
cmps
jp
retf
fisub
push
xchg
inc
or
aas
push
ins
ins
sar
in
ins
hlt
mov
inc
adc
out
shr
jl
das
dec
and
cs
stc
jg
mov
data16
pop
test
or
cmps
leave
retf
inc
pop
iret
jecxz
popf
inc
mov
xor
jo
xchg
xor
in
in
ror
fstp
ficom
adc
je
xor
dec
xor
lahf
pusha
movs
ss
(bad)
mov
mov
adc
fwait
popf
and
arpl
or
sbb
xchg
cld
dec
mov
mov
cli
pop
and
jle
or
(bad)
sbb
xlat
mov
cmc
inc
ficomp
mov
mov
leave
nop
or
adc
push
mov
mov
cmp
jge
(bad)
xor
sub
out
repnz
js
inc
int3
in
xor
and
mov
fdiv
mov
mov
sub
ja
cli
shl
call
repz
stc
dec
push
fs
retf
dec
xchg
push
in
mov
or
mov
mov
mov
aaa
loopne
ja
cdq
outs
cmp
cmps
daa
ficomp
pop
in
lahf
popa
mov
xchg
dec
jmp
and
lea
repz
fst
add
or
push
jnp
sub
cmovge
jns
addr16
loop
ror
fst
retf
call
or
setno
dec
cmps
popa
inc
mov
test
and
push
call
inc
js
xor
div
retf
into
mov
dec
pushf
imul
aam
or
mov
in
xor
or
adc
add
xchg
mov
pop
push
addr16
shl
adc
pop
ds
jp
sub
bnd
ins
(bad)
imul
imul
push
push
pop
jbe
mov
popa
cmp
mul
sbb
fwait
repz
cli
adc
outs
push
movs
xchg
pop
mov
daa
add
add
in
and
or
aaa
or
test
sti
movs
dec
mov
cmp
rcl
ror
lods
cmc
push
icebp
and
pop
and
lock
push
mov
add
mov
or
xchg
nop
test
inc
mov
inc
movs
sub
aad
inc
sub
and
cmp
add
in
xchg
rcr
pop
into
sbb
push
push
cmp
mov
ficomp
fucomi
(bad)
inc
xchg
mov
call
or
mov
push
and
cmp
jnp
mov
icebp
cs
mov
idiv
jp
ds
fs
jno
sbb
loopne
out
push
or
cmp
bound
sbb
inc
mov
outs
and
loop
or
adc
scas
(bad)
jno
inc
jp
adc
inc
aad
and
imul
imul
inc
test
sbb
pushf
jns
xor
jb
cmp
jo
daa
ficomp
std
mov
adc
clc
pop
push
lahf
scas
sbb
test
fld
inc
dec
fnstsw
mov
mov
cmp
add
inc
inc
jmp
mov
add
cmp
stc
(bad)
and
lods
popa
fld
push
add
sbb
mov
shr
lahf
movs
dec
mov
aad
xor
retf
mov
lock
adc
das
(bad)
mov
cmp
cmps
mov
mov
jbe
test
mov
mov
pop
push
mov
mov
add
pop
xchg
in
fwait
test
mov
cdq
ret
mov
and
hlt
dec
jg
fbld
cmp
mov
test
cld
xor
daa
cld
push
int3
and
in
push
test
(bad)
shr
sbb
mov
fidivr
push
mov
and
mov
cli
ror
into
mov
mov
inc
and
jb
addr16
pop
jae
cmc
and
jmp
and
or
mov
fstp
mov
push
jp
sub
scas
test
out
scas
mov
pop
cli
and
lea
sahf
out
sub
es
movs
ins
mov
into
fs
inc
pushf
or
push
cmp
cmp
mov
add
ds
nop
(bad)
popf
sub
movs
xchg
pop
arpl
xor
or
xchg
sub
push
pop
cmp
fcomp
dec
cmp
inc
and
gs
mov
(bad)
loop
and
add
and
sbb
push
push
inc
push
cmp
lea
mov
adc
jo
call
dec
sbb
dec
cmp
int
sub
sub
outs
jecxz
xor
or
or
(bad)
push
mov
(bad)
lods
fstp
add
inc
aaa
fld
cwde
ret
push
nop
cmp
mov
xlat
mov
add
mov
pop
mov
stos
dec
push
pusha
mov
cmp
push
cmp
adc
xor
mov
(bad)
fdivr
aam
add
xchg
popa
(bad)
pusha
mov
(bad)
js
inc
pop
dec
jge
out
cdq
pop
xor
push
push
daa
fcmovb
inc
adc
int3
sti
pusha
push
jo
stos
push
scas
add
dec
mul
ins
addr16
iret
bound
mov
out
xor
mov
jmp
xchg
std
sub
mov
add
jnp
pop
cmps
and
dec
pusha
rcr
push
mov
jo
cmp
loope
sub
in
cmp
or
rcl
mov
popa
sbb
push
lods
dec
push
mov
push
inc
jno
scas
jne
sub
sbb
call
xor
pop
inc
fst
jmp
or
xlat
sub
(bad)
rcl
lea
mov
adc
bts
or
test
mov
(bad)
into
cmps
add
jnp
pop
loope
outs
mov
std
fdivrp
sbb
retf
ins
fistp
test
mov
pop
pop
sti
jp
fdiv
pushf
xor
fs
sbb
sub
(bad)
loop
test
ret
mov
idiv
adc
out
lds
xchg
test
icebp
push
jne
mov
xor
cli
and
shr
mov
push
pushf
mov
add
fiadd
cmps
push
test
xchg
into
das
and
add
rol
ret
nop
xor
shl
sar
icebp
aam
in
dec
or
lock
mov
sbb
(bad)
data16
mov
(bad)
push
arpl
lock
mov
sbb
mov
(bad)
in
pop
xchg
cli
add
or
mov
(bad)
mov
pushf
mov
xor
jmp
mov
pop
add
int
(bad)
mov
out
lea
mov
xor
pop
cdq
add
jecxz
xchg
dec
mov
addr16
cwde
add
ins
outs
(bad)
fld
fdiv
fs
dec
int3
xor
cmp
adc
jo
repnz
mov
cwde
in
cmc
push
clc
into
cmp
dec
add
lods
jmp
sahf
arpl
retf
sbb
scas
sub
push
mov
mov
cmp
adc
add
mov
dec
mov
retf
stc
inc
ds
add
mov
cmp
mov
fisubr
jne
out
dec
sti
popa
vmovaps
pop
jnp
add
dec
jae
inc
mov
popf
xchg
jmp
pop
daa
add
jge
aaa
add
xchg
inc
jmp
jmp
(bad)
jge
sbb
add
pusha
xchg
jae
scas
cmp
and
jmp
sbb
js
jne
jecxz
or
jae
pop
pusha
pop
push
sub
add
call
dec
call
jg
fdiv
scas
dec
push
jg
xchg
xor
sub
(bad)
sbb
and
add
lods
mov
int
inc
test
mov
xlat
outs
mov
sbb
test
adc
jae
lahf
rol
mov
popa
xchg
dec
inc
jns
es
les
add
mov
mov
jge
into
fcom
popf
int
push
call
jecxz
retf
mov
movs
(bad)
in
pop
out
pop
icebp
(bad)
and
clc
inc
dec
stos
mov
aas
std
pop
jmp
adc
mov
aaa
fiadd
enter
imul
xor
push
and
and
jns
std
or
dec
dec
dec
pop
cmp
frstor
mov
push
and
sbb
and
xchg
ret
push
xchg
push
pop
int3
out
(bad)
mov
aaa
(bad)
cmp
in
adc
inc
or
sub
xchg
outs
dec
int
sub
stos
imul
dec
mov
push
shr
jae
fs
test
sub
and
mov
call
cmp
mov
add
ss
sti
pop
hlt
in
sbb
cdq
ins
pop
data16
xchg
mov
loopne
rol
ins
sbb
cmp
ror
(bad)
mov
addr16
adc
fiadd
pop
mov
adc
mov
sub
cmps
pusha
aas
xor
sub
imul
add
xlat
(bad)
into
popf
shr
add
xor
fisttp
imul
aaa
dec
pop
inc
mov
jge
lock
mov
and
sbb
loopne
mov
les
call
in
mov
pop
sbb
mov
jmp
imul
outs
push
sbb
pop
push
jp
in
xchg
cmp
xchg
pushf
mov
pop
shr
add
mov
adc
ins
fwait
mov
arpl
loop
sub
jmp
std
fs
xor
cmp
push
retf
mov
sti
(bad)
xchg
pop
or
das
cli
jp
int3
add
dec
or
into
dec
dec
jmp
loop
mov
jb
dec
add
shl
fcom
dec
cdq
out
mov
fsub
test
xchg
ror
fld
inc
jmp
gs
shl
mov
sub
stc
or
xchg
dec
jb
push
aam
xlat
int
add
dec
jmp
mov
(bad)
jnp
fnstsw
pop
push
ins
inc
pop
inc
neg
scas
pop
aad
scas
cmp
jle
sub
push
mov
fwait
imul
pop
fsubr
cld
adc
pop
mov
cmp
sub
jo
mov
cmp
and
test
test
rol
inc
in
sbb
xor
jo
cdq
sahf
adc
cmp
arpl
xchg
outs
hlt
jbe
mov
out
jae
aas
push
aaa
dec
lock
inc
pop
sbb
push
mov
jmp
outs
xchg
xlat
int
ins
mov
stos
das
rcl
sti
pop
shl
je
and
or
pop
xchg
aas
sbb
xchg
xchg
out
mov
(bad)
jno
push
push
cdq
cli
jnp
add
adc
inc
adc
cld
mov
fnstsw
ins
lods
jmp
aas
xor
xchg
cmp
nop
jp
lahf
xor
fs
rol
xchg
push
gs
nop
rcl
sub
imul
sar
(bad)
mov
mov
xlat
jo
mov
or
mov
loop
je
cmp
(bad)
mov
mov
add
add
adc
cli
pop
fild
xor
test
popa
fld
dec
adc
int
add
ja
cwde
hlt
outs
fist
mov
xor
jmp
sar
mov
fucomi
sbb
add
(bad)
into
pop
jl
or
cmps
mov
or
inc
lds
sar
gs
sub
leave
mov
xchg
jbe
jge
or
loope
xchg
enter
sbb
xchg
retf
jge
(bad)
sub
pop
mov
sbb
push
and
(bad)
jecxz
push
inc
or
das
add
daa
and
enter
ficomp
fucom
dec
lahf
jmp
adc
cdq
and
dec
xchg
retf
aad
pop
es
xchg
mov
push
icebp
jmp
xchg
adc
adc
jmp
adc
cld
pop
jnp
xchg
inc
retf
sbb
jns
inc
xchg
mov
ret
pop
pop
mov
or
jle
stc
push
movs
cwde
add
and
ds
clc
out
jae
rcr
add
xor
dec
lahf
push
pop
jp
pusha
and
mov
xchg
fidivr
mov
or
popf
loop
jnp
popa
std
dec
out
cmp
(bad)
xor
jbe
pop
lahf
adc
popa
sub
push
data16
rol
inc
in
cmp
sbb
cmp
data16
xchg
sbb
and
push
adc
sub
int
push
ins
lahf
loop
imul
in
arpl
lods
jne
repnz
in
pop
sub
sar
mov
jae
sti
mov
cs
imul
scas
shr
std
pop
iret
mov
pop
add
(bad)
adc
pop
dec
xchg
pop
sub
inc
cwde
retf
pusha
(bad)
mov
cdq
or
mov
or
jmp
cwde
jl
pop
rcr
sub
not
jl
ins
sbb
retf
nop
xchg
sbb
shl
inc
sub
xchg
cmps
int
add
xor
pop
adc
adc
jl
out
pop
aad
mov
or
int
xchg
es
inc
push
push
das
mov
loop
push
inc
in
mov
cmps
stos
pop
xlat
jp
fidivr
and
ins
push
aam
and
mov
cmp
jbe
sbb
scas
xchg
loop
fbld
inc
mov
jne
mov
call
and
adc
lods
cs
enter
in
stos
ficomp
les
dec
les
push
jbe
not
dec
test
clts
sub
xchg
push
cld
pop
adc
xchg
and
out
cwde
xor
cld
sar
inc
jge
imul
cmps
pop
rcl
dec
mov
mov
std
out
gs
ja
int3
int3
jmp
scas
mov
sbb
icebp
pop
push
add
aaa
sbb
das
xlat
fiadd
xchg
adc
inc
ret
psrlq
mov
retf
stc
(bad)
lods
js
scas
push
jmp
xchg
mov
pop
push
rcr
dec
adc
ins
xor
mov
cli
sbb
add
hlt
dec
mov
cdq
xor
fmul
jbe
clc
pusha
in
jecxz
cmp
pop
retf
jns
dec
mov
stos
xchg
xchg
or
call
mov
mov
push
fstp
(bad)
jmp
inc
dec
lods
bound
jge
ss
xor
and
ja
xchg
outs
out
push
sub
push
mov
cmp
jnp
fimul
sbb
popf
ret
fs
mov
call
mov
loope
fsubr
cmp
pop
adc
test
jp
dec
mov
loop
mov
or
jo
mov
test
push
lods
out
xchg
mov
mov
in
sbb
test
int
xchg
jns
retf
and
and
fild
xchg
pushf
mov
pop
ins
push
cli
pop
or
cmp
bnd
push
iret
sub
cmp
jnp
cmp
jno
push
add
add
aad
mov
xor
loop
ins
lock
(bad)
mov
jb
dec
pop
imul
hlt
shl
mov
icebp
mov
and
imul
sub
rol
add
or
mov
in
mov
movs
jg
pop
mov
retf
repnz
mov
xchg
and
pop
es
aas
adc
sbb
mov
les
(bad)
mov
jnp
pusha
fisubr
push
loope
mov
test
addr16
lahf
ins
xor
lahf
cmp
hlt
mov
sub
add
sub
add
dec
ins
jnp
mov
imul
rol
xchg
pop
int
js
dec
pop
mov
sub
and
mov
adc
mov
jmp
stos
mov
xor
(bad)
mov
sub
aas
aad
push
mov
sbb
dec
retf
fist
mov
fstp
scas
jp
or
xchg
fs
dec
ret
stos
add
xchg
add
sar
mov
pop
adc
fisub
adc
out
out
mov
cmp
je
pop
mov
cmps
rcl
dec
jle
repz
sbb
xchg
jle
cdq
lods
bound
jbe
add
and
jno
aam
add
ret
rcr
or
addr16
dec
movs
fcom
pop
adc
(bad)
pusha
push
xchg
cld
fs
mov
push
push
and
and
loope
xor
or
jb
mov
mov
mov
mov
popa
(bad)
jmp
or
mov
or
outs
retf
push
mov
out
and
imul
pop
xor
outs
push
or
loopne
ds
popa
imul
fadd
lock
gs
retf
pop
(bad)
les
push
sub
jge
adc
mov
and
out
ins
push
fwait
int3
scas
pop
jmp
push
mov
inc
(bad)
loopne
pop
rcl
mov
inc
outs
gs
pop
add
fld
jb
adc
xor
pusha
xchg
sbb
cmp
jne
scas
retf
cmp
fwait
mov
cmp
jnp
ins
and
stc
mov
(bad)
push
test
addr16
pop
mov
jno
icebp
fidiv
aam
sbb
nop
add
lods
mov
adc
push
pop
fcomp
cwde
(bad)
mov
shl
cli
test
mov
aam
rol
sub
stos
outs
mov
in
push
sbb
xchg
push
sahf
mov
pop
stos
(bad)
adc
fist
jmp
in
jns
mov
xchg
mov
jecxz
pop
scas
sbb
cwde
lods
sub
fnstenv
sub
mov
add
cli
out
sbb
push
jmp
cmp
repz
std
xor
ins
push
test
sub
lds
das
jno
int
outs
inc
sbb
pop
leave
or
push
icebp
sbb
push
mov
mov
leave
add
sar
jmp
pop
sbb
(bad)
pop
or
adc
into
out
mov
aam
push
cwde
fisubr
int
jne
(bad)
mov
sub
adc
jbe
add
popa
fld
pop
jae
stos
inc
pop
call
sub
scas
stos
cli
rcl
cmp
jge
loope
cmp
arpl
and
jmp
hlt
and
mov
leave
retf
mov
dec
mov
repz
xchg
push
sub
pusha
mov
mov
inc
pop
loope
iret
dec
fnsave
cmps
mov
mov
ins
xchg
xor
scas
jno
dec
out
lds
ins
test
lahf
popa
ja
cwde
leave
lock
lock
test
mov
or
mov
(bad)
push
jle
xor
sub
or
add
mov
dec
fwait
imul
or
pop
cmc
adc
scas
sahf
jae
cwde
push
jns
fidiv
loope
lods
jp
jge
jecxz
or
add
(bad)
push
outs
stos
fwait
cmp
sbb
xor
imul
inc
xor
mov
mov
nop
or
xchg
pop
add
add
jmp
sbb
std
and
mov
sbb
cdq
jge
es
sbb
or
int
stos
(bad)
cmp
cli
sti
dec
sub
push
jp
cmp
inc
inc
jo
add
call
shl
mov
call
jae
pop
fnstenv
sub
sbb
mov
enter
lahf
clc
out
xchg
pop
enter
movs
dec
leave
sub
inc
adc
xchg
iret
mov
sub
fbld
push
movs
sbb
std
lahf
dec
mov
cmp
dec
jge
mov
dec
pop
and
add
aas
xchg
les
push
loope
xchg
or
fimul
test
(bad)
aad
movs
jg
cmc
mov
repnz
and
mov
loop
adc
dec
inc
(bad)
mov
push
stos
mov
aam
cs
std
fsubr
mov
mov
out
cmc
test
stos
pop
(bad)
push
dec
and
add
dec
repnz
push
je
mov
movs
adc
nop
movs
sbb
cmc
popa
jmp
mov
sub
pop
inc
sub
mov
push
(bad)
hlt
shl
xlat
cli
pop
sub
not
hlt
add
pusha
lock
out
jmp
(bad)
fld
lods
jp
jecxz
loopne
aas
inc
clc
adc
xor
call
frstor
clc
ins
outs
push
adc
test
pop
xchg
out
pop
xchg
or
jae
mov
aas
outs
jbe
pop
fistp
or
add
cld
fimul
push
cmps
add
mov
dec
sbb
movs
jno
sub
jnp
rol
in
stc
adc
loop
loope
add
xor
inc
inc
xor
push
inc
pop
pop
ret
addr16
sti
test
cmp
jmp
rcl
sub
imul
jecxz
repnz
jno
addr16
inc
test
bound
daa
and
lods
cmp
xchg
ficom
ins
fs
ja
v4fmaddps
bnd
call
jmp
cmp
push
movs
(bad)
imul
inc
popa
jl
ins
xchg
popf
and
mov
push
push
cld
jno
push
imul
int3
dec
push
dec
add
sbb
xrelease
jle
stos
xor
add
jo
out
or
aas
fild
push
and
in
out
shl
or
mov
sbb
dec
pop
addr16
movs
xor
retf
pop
loopne
pop
retf
cmp
adc
mov
mov
cmp
adc
stos
adc
mov
pop
or
adc
stos
dec
cmp
call
ds
shr
sbb
(bad)
xchg
adc
mov
mov
mov
mov
dec
out
mov
xchg
js
(bad)
xor
shr
aas
lock
es
xor
mul
data16
push
jge
and
adc
das
cmp
hlt
jae
arpl
dec
mov
lods
and
pop
mov
push
daa
lea
hlt
sub
es
(bad)
arpl
sbb
enter
data16
xchg
into
xlat
cmp
dec
inc
mov
add
add
daa
fsub
cmps
fmul
xor
xchg
mov
aaa
sbb
push
call
push
(bad)
and
(bad)
iret
fwait
or
ins
stc
in
mov
jecxz
xchg
push
push
mov
dec
es
nop
das
sub
jle
mov
pop
xlat
bound
xor
cld
test
sbb
dec
adc
cmc
call
int3
out
xor
outs
xchg
sub
int3
fs
add
dec
mov
retf
lock
push
adc
(bad)
dec
and
xlat
dec
dec
pushf
adc
push
sti
inc
nop
mov
retf
lods
mov
ja
ss
test
and
sub
imul
in
sbb
add
loop
aad
or
mov
lea
jge
mov
push
scas
jne
or
push
sar
xchg
inc
std
inc
inc
sbb
scas
ror
mov
add
or
cmp
daa
shl
xlat
dec
push
ss
mov
push
xchg
(bad)
mov
jmp
je
jl
out
enter
sub
test
sub
pushf
lock
cmp
loopne
gs
mov
dec
jmp
push
std
sub
sahf
call
sahf
inc
xchg
cmps
push
fxch
xor
in
mov
sub
adc
pusha
mov
inc
sahf
and
sbb
in
and
mov
out
push
cmps
imul
jle
cmps
lahf
je
repnz
rcr
adc
xor
xchg
inc
mov
push
loope
push
sahf
push
fsub
xchg
pusha
fwait
and
imul
sub
xchg
mov
xchg
test
jmp
movs
in
mov
in
ret
xlat
mov
and
idiv
pop
cmp
shl
adc
movs
inc
fmulp
add
call
mov
dec
loopne
mov
cmps
enter
arpl
nop
call
dec
cdq
cmp
sub
mov
test
xchg
sbb
stos
lods
sbb
pop
lods
jmp
fst
mov
stc
addr16
inc
cmp
arpl
dec
mul
std
mov
jns
jnp
(bad)
mov
icebp
mov
fist
jmp
jmp
out
ret
cmp
jmp
push
mov
mov
dec
setbe
rcr
dec
push
repnz
cwde
scas
movs
jmp
mov
scas
lahf
jmp
push
inc
or
jmp
loop
xchg
cmp
lahf
dec
outs
sbb
pop
cmp
add
add
ffreep
pop
dec
pop
push
jne
adc
pop
add
sbb
out
sub
dec
repnz
popf
or
mov
inc
adc
out
pushf
jbe
movs
xchg
push
loopne
and
push
cmp
cmp
es
je
xlat
test
sbb
inc
inc
push
icebp
push
(bad)
cmc
aaa
fmul
mov
xchg
lods
outs
loope
ins
sbb
jnp
and
mov
push
jge
pushf
rcl
aam
pop
push
add
mov
and
mov
or
shl
rol
inc
js
not
(bad)
ror
sub
mov
pop
test
inc
out
push
pop
bound
aam
pop
sub
inc
cmp
jmp
jecxz
cdq
mov
jns
pop
inc
idiv
int3
lahf
pop
dec
(bad)
rcl
aad
push
mov
ins
and
rcr
dec
add
jbe
adc
fdiv
push
sub
pop
pop
pusha
pop
mov
cli
icebp
pop
pop
mov
pushf
lock
or
mov
jmp
dec
popa
dec
sbb
dec
iret
ret
or
sar
js
nop
lods
lahf
sbb
sbb
mov
xchg
mov
addr16
inc
jns
xor
aas
(bad)
fcomp
shl
mov
pushf
rol
dec
gs
xor
sub
ds
pop
or
shl
into
in
(bad)
repz
ficomp
push
iret
nop
mov
jle
and
mov
stos
add
push
imul
or
(bad)
jmp
imul
sbb
mov
push
sar
jle
mov
enter
stos
or
mov
rcr
adc
cmp
rcl
ds
repz
adc
lods
popf
sub
out
(bad)
enter
imul
ja
mov
arpl
adc
mul
xchg
rol
cs
adc
or
cmp
arpl
test
cs
cmp
xchg
mov
mov
(bad)
aas
imul
cmp
push
sbb
ins
mov
mov
ficomp
push
pop
xchg
pop
pop
xor
xchg
vpcmpgtd
(bad)
pop
out
mov
xchg
push
pushf
jle
leave
fdivr
int
and
or
and
popf
inc
icebp
xchg
movs
xchg
add
adc
icebp
add
fisubr
add
mov
repnz
push
(bad)
aam
ror
inc
add
in
cmps
mov
ja
je
and
push
jnp
or
or
sbb
pop
dec
jmp
idiv
and
push
aaa
inc
xchg
adc
(bad)
(bad)
loope
xor
shl
xchg
push
(bad)
cmp
cld
bound
(bad)
mov
(bad)
push
clc
shr
js
pop
xlat
mov
ja
mov
xchg
jno
out
shr
xchg
sbb
or
xchg
outs
jle
mov
inc
in
mov
inc
and
sub
push
and
call
out
xchg
mov
repz
pop
dec
mov
ins
out
outs
ror
mov
es
jmp
dec
ss
xchg
mov
xor
imul
xrelease
les
adc
fist
xlat
or
les
dec
push
cwde
fwait
mov
and
minps
mov
adc
repnz
(bad)
adc
in
inc
loope
push
lods
aam
xchg
and
wrmsr
fwait
jb
add
(bad)
jmp
push
xchg
xor
call
jns
fwait
or
mov
and
dec
mov
add
pop
cdq
repnz
ret
pop
sbb
sub
sbb
jge
pop
xor
iret
call
mov
xchg
cmps
mov
pop
repz
out
fnsave
dec
mov
ret
and
mov
inc
or
or
sub
iret
mov
mov
pop
push
imul
and
cwde
adc
jb
(bad)
mov
loop
loope
pop
fidiv
adc
mov
lods
and
and
cdq
fisttp
out
xor
lahf
sbb
xor
pop
adc
test
push
fld
xlat
call
pop
add
js
xor
xchg
and
(bad)
inc
ja
sbb
or
daa
imul
lds
push
mov
cs
sti
movs
mov
mov
iret
cmps
jmp
aaa
inc
mov
(bad)
push
sar
out
test
bound
xchg
pushf
fst
dec
add
ins
outs
pop
or
cwde
pop
out
stos
enter
mov
dec
mov
sbb
sbb
es
cmp
xlat
pop
sub
aam
sub
inc
xor
(bad)
fldenv
jge
dec
sub
fs
movs
mov
aam
pop
mov
mov
jmp
mov
mov
adc
clc
fwait
stc
mov
loope
cmp
inc
jae
xor
ins
outs
jae
stos
lahf
jp
bound
and
mov
jp
shl
lods
jge
loope
jmp
cmp
push
daa
add
stc
gs
fidivr
jbe
mov
mov
pop
rcr
mov
shl
enter
xlat
jl
outs
iret
loop
jb
pushf
in
das
shr
imul
pop
daa
(bad)
popf
out
repz
int3
in
int
cdq
lods
gs
xor
sub
mov
add
sar
lahf
or
sbb
ja
jnp
repz
shr
retf
rcl
cld
cmc
fdiv
dec
and
xchg
in
xchg
push
push
sbb
lods
iretw
push
push
xchg
bound
data16
mov
repz
push
sub
and
leave
int
ins
jmp
dec
into
shl
push
sbb
or
test
movs
retf
repz
mov
xchg
jo
sub
push
mov
ins
jns
xor
dec
mov
out
fimul
pop
ja
push
test
enter
aam
jg
mov
mov
rcr
cld
scas
inc
les
xchg
in
dec
adc
sbb
cmp
clc
fmul
cmp
stos
rol
retf
das
mov
out
iret
pop
adc
xchg
sti
dec
cmc
out
xchg
sbb
outs
sbb
dec
add
add
sub
(bad)
aaa
test
or
push
sbb
fwait
and
add
xchg
sub
in
in
bound
sbb
sahf
push
dec
fidivr
mov
push
outs
sar
mov
xchg
cmp
outs
bound
xchg
cwde
movs
jle
inc
and
(bad)
fstp
data16
(bad)
jns
push
shl
stos
imul
clc
test
or
(bad)
pop
push
push
cmp
pusha
sub
outs
sbb
push
dec
test
int3
mov
mov
mov
push
push
mov
adc
and
sbb
or
loopne
imul
mov
bswap
cmc
test
push
sti
pop
not
push
jb
js
push
jbe
(bad)
push
aam
xchg
daa
jp
(bad)
cmp
add
pop
mov
nop
movs
fwait
enter
ds
ret
pop
pop
in
push
pop
xor
outs
loopne
mov
rol
jge
xor
dec
jmp
sbb
mov
dec
push
scas
clc
cld
sbb
and
inc
leave
test
imul
xor
and
and
shl
dec
int3
adc
pop
adc
bound
push
jg
jo
leave
sar
call
jnp
and
push
add
(bad)
(bad)
out
push
mov
lods
cmps
test
pusha
mov
cmc
ds
pop
mov
enter
xor
icebp
mov
repz
popf
dec
jne
das
mov
pushf
inc
cld
pop
xchg
shr
mov
sub
or
mov
rcl
leave
inc
jecxz
(bad)
lahf
(bad)
xchg
xor
std
xor
aaa
xchg
xor
mov
fnstcw
and
dec
in
and
clc
dec
mov
adc
mov
push
add
cmps
pop
add
and
dec
fdivr
push
pop
(bad)
rcr
popa
in
inc
lahf
jb
in
cmp
mov
(bad)
popa
mov
mov
cmp
test
add
jg
repnz
inc
ins
in
retf
es
xor
mov
movs
mov
sub
xor
js
sub
gs
pop
pop
ins
and
mov
hlt
(bad)
ja
popa
cmps
(bad)
jbe
and
mov
and
daa
sbb
inc
push
xor
and
inc
xor
pop
dec
mov
cmp
bound
jle
rcl
and
push
(bad)
out
cli
imul
out
sti
pop
xchg
test
cdq
pop
mov
cmps
add
adc
leave
jge
add
mov
cs
lea
push
ss
inc
mov
mov
sar
fwait
mov
jns
inc
push
je
jg
sub
in
push
jmp
popf
cmp
push
sbb
loop
dec
imul
sub
fwait
xor
loop
test
lock
mov
sbb
call
dec
pusha
out
in
imul
retf
xchg
out
sti
mov
pop
lods
cwde
lods
push
mov
xlat
jbe
push
lahf
sub
adc
pop
mov
push
jmp
cmp
pop
mov
sub
xchg
jmp
sbb
enter
fcmove
lea
xor
mov
loope
mov
(bad)
mov
out
(bad)
(bad)
mov
in
retf
jbe
mov
ret
adc
xor
push
stc
mov
ja
out
cmp
dec
call
stos
push
jmp
mov
mov
fcmove
sar
mov
dec
loopne
pop
adc
jl
or
lahf
sbb
rcr
push
ins
jb
je
xlat
icebp
mov
pop
inc
fisttp
rcr
fcmovnb
mov
inc
inc
loope
aam
in
inc
sbb
cmps
out
cmc
xor
xchg
push
popf
pop
or
scas
mov
clc
pop
int
push
fcom
mov
push
daa
fs
push
push
xchg
cmp
ja
cld
and
mov
mov
sub
pop
popa
mov
fwait
push
outs
cmps
mov
nop
test
cmp
int
xchg
adc
dec
pop
rcr
lahf
repz
jle
fwait
imul
jge
xchg
pop
fcom
into
mov
cmp
mov
loope
outs
and
adc
push
into
mov
cmps
inc
in
inc
sbb
push
call
std
nop
mov
add
fistp
icebp
loope
(bad)
sti
mov
dec
(bad)
je
push
dec
mov
lods
inc
mov
mov
xchg
ror
push
cli
add
scas
push
add
and
aad
sub
push
push
inc
xor
out
xchg
pop
add
arpl
aas
and
mov
int
pop
jmp
out
mov
rcr
or
sti
xlat
mov
jp
arpl
sub
call
jno
dec
movs
into
cmp
cmp
inc
adc
push
jb
test
nop
mov
xor
(bad)
push
mov
lods
dec
adc
cmc
outs
bound
mov
jp
dec
daa
mov
or
pop
aas
adc
enter
jae
jnp
jle
inc
in
movs
inc
shl
repz
sbb
fst
(bad)
mov
outs
cmp
xor
cmp
adc
popa
jne
sub
inc
or
inc
lods
mov
inc
out
lds
rcr
jg
arpl
jb
aam
jge
jecxz
jmp
leave
das
dec
retf
leave
out
ins
movups
inc
fst
push
push
shr
add
cmp
jg
dec
enter
mov
cmp
fucom
int
in
rol
and
sbb
push
push
cld
fdivr
push
icebp
and
shl
jmp
test
les
and
jo
test
(bad)
mov
xlat
push
int3
mov
fidivr
pusha
pusha
add
movs
xchg
(bad)
mov
jbe
pusha
jmp
cmp
stc
test
out
mov
inc
xchg
push
std
call
test
enter
outs
sub
push
push
jg
sub
cmp
cmps
pushf
push
add
fsubr
sbb
sub
xor
push
dec
cdq
push
adc
cmp
dec
cmp
repnz
data16
rol
imul
pop
lock
mov
daa
stos
push
in
rol
int3
mov
loop
out
xchg
aam
test
pop
mov
pop
loopne
ret
retf
mov
ins
pop
and
dec
outs
leave
movs
imul
mov
js
shr
out
sar
imul
cs
mov
into
adc
in
sbb
cmp
jno
aad
hlt
or
test
data16
cli
in
adc
outs
cdq
sub
mov
xchg
inc
xchg
dec
xchg
mov
xchg
or
xchg
mov
outs
jbe
xor
lea
fwait
dec
shr
bound
leave
mov
cmp
push
cmp
arpl
mov
sti
imul
stc
mov
mov
xor
ds
stos
call
dec
dec
dec
and
outs
and
repz
push
fistp
push
pop
outs
scas
fbld
jno
jecxz
or
inc
push
sti
cmp
or
leave
ins
in
add
xor
mov
cwde
pushf
xchg
mov
xchg
or
mov
out
stc
fcom
pushf
lods
in
sti
dec
push
sbb
das
push
popf
sbb
cdq
rcr
inc
mov
scas
sub
inc
cmp
pop
cmp
daa
cld
sbb
and
test
lock
shr
in
ins
xchg
int
(bad)
fsub
mov
call
push
push
test
adc
mov
push
(bad)
cmp
call
jne
adc
cmp
out
pop
daa
enter
jp
ins
enter
xor
sub
or
cli
jg
inc
push
and
popf
sub
test
mov
pusha
mov
movs
test
outs
xchg
add
daa
push
cmp
retf
xor
cwde
lds
or
lds
mov
sub
data16
aam
rcr
jo
(bad)
fs
ins
fs
les
ja
add
ret
cmp
mov
int
pop
mov
push
mov
scas
jl
sub
pop
mov
push
pop
xchg
shr
sahf
jo
jle
mov
rcr
icebp
daa
les
call
dec
push
pop
mov
xor
dec
jo
add
ror
mov
les
mov
mov
dec
mov
mov
inc
xchg
fyl2x
out
xor
mov
mov
mov
push
mov
ret
mov
sbb
test
dec
(bad)
fst
(bad)
in
out
stc
ds
mov
(bad)
cmp
sbb
(bad)
mov
inc
jmp
int3
sbb
mov
mov
add
repz
call
xchg
sbb
fiadd
hlt
jno
xor
add
fs
inc
add
and
js
sub
dec
xchg
repz
push
mov
mov
cmp
cmp
dec
cmp
adc
sti
(bad)
test
shr
mov
outs
stc
mov
jp
inc
aas
xchg
xlat
pusha
jnp
in
cmp
fimul
pop
sub
fsub
mov
(bad)
std
mov
sbb
hlt
sub
std
pop
rcl
push
cld
retf
xor
imul
add
rcr
and
pop
movs
sbb
rol
and
bound
pop
lahf
fsubr
or
rol
mov
aaa
(bad)
jmp
ficom
sbb
pop
push
and
push
dec
inc
cmc
cdq
aad
ins
mov
into
(bad)
aam
mov
jo
jae
scas
into
adc
movs
xor
or
jb
dec
(bad)
test
push
retf
in
pop
dec
aas
retf
xor
push
stos
cmp
scas
push
imul
hlt
cmc
mov
push
retf
addr16
jmp
sub
push
cld
jae
add
jnp
mov
pop
aas
add
or
mov
jns
sub
and
dec
fcmovnb
ret
std
xchg
jmp
xor
pop
sbb
retf
jge
inc
outs
leave
or
xchg
stos
xchg
xchg
lds
outs
clc
imul
or
and
lds
cmps
or
rol
scas
das
push
inc
dec
pop
jmp
pop
add
jle
mov
cmp
out
adc
les
bound
xchg
(bad)
and
mov
pop
mov
inc
leave
jg
cld
retf
push
gs
sub
in
test
push
rcr
dec
cdq
in
add
mov
jae
mov
icebp
je
or
or
dec
daa
fisub
ins
scas
and
lock
addr16
dec
fs
xor
and
mov
cmps
nop
pop
mov
pop
fist
pop
or
sbb
jecxz
nop
jle
mov
and
loope
movs
push
adc
ins
jno
adc
addr16
out
(bad)
ror
jge
inc
xlat
rol
addr16
sbb
lods
mov
and
cmp
xchg
mov
push
imul
test
jg
push
fisttp
xor
jbe
mov
(bad)
mov
je
xchg
mov
pop
jae
fadd
fbld
mov
loope
mov
arpl
stos
jl
popa
or
mov
dec
inc
arpl
iret
cmp
inc
push
mov
jge
or
scas
xor
cwde
xor
cwde
cmp
mov
stc
adc
test
aam
adc
cli
or
ror
pop
rcr
ss
je
add
dec
ins
ja
mov
jle
pop
dec
adc
rcr
stc
cmp
sub
jg
test
int3
jle
pop
xchg
lods
outs
sub
push
mov
lods
dec
jno
jb
fdivr
(bad)
imul
add
mov
aam
and
int
push
jno
out
jno
hlt
adc
push
sahf
push
jp
add
jno
stc
stos
into
sahf
or
mov
and
pop
js
daa
push
cmp
pop
std
jmp
fwait
adc
inc
mov
jne
popf
fiadd
jmp
test
xlat
test
in
idiv
lods
cld
xor
loope
test
icebp
mov
push
push
jle
add
mov
jmp
jp
bound
shr
xchg
add
scas
mov
push
mov
shl
stc
jbe
sar
adc
pop
adc
retf
cmc
rcr
call
lods
stos
sbb
lods
jmp
push
mov
call
or
adc
ss
xchg
mov
leave
inc
out
add
and
xor
inc
or
(bad)
sub
push
or
iret
xor
stc
inc
and
cli
and
cs
(bad)
int3
xor
push
cld
dec
xor
inc
dec
lea
and
(bad)
mov
loopne
icebp
ja
push
das
mov
pusha
(bad)
rol
cs
xchg
dec
pushf
mov
mov
hlt
rol
push
pop
repnz
pop
adc
xchg
sbb
dec
into
call
movs
in
mov
dec
pop
fld
inc
add
je
cmc
mov
(bad)
or
cli
lmsw
sbb
test
sub
xchg
pop
inc
ja
fsubr
imul
or
sbb
sub
mul
or
adc
cdq
push
les
pop
push
outs
sub
cmc
sub
cs
xchg
(bad)
(bad)
sbb
jbe
(bad)
sahf
push
mov
push
jmp
pushf
repnz
jbe
int3
add
and
push
mov
dec
xor
outs
js
out
adc
call
enter
mov
jnp
ret
(bad)
push
sbb
lods
mov
inc
nop
xchg
dec
pop
cs
dec
retf
add
or
loope
popa
iret
and
jmp
inc
mov
xor
and
(bad)
rep
jge
je
xchg
sbb
push
adc
xor
dec
cmps
and
mov
mov
imul
popf
enter
xchg
sub
cmp
and
push
sub
fld
add
sti
mov
daa
xchg
inc
sub
cmps
add
push
lock
(bad)
out
jg
mov
lods
mov
sub
or
outs
and
stc
icebp
sub
sub
adc
hlt
mov
inc
out
xchg
cmp
lahf
sti
je
imul
stos
popf
adc
daa
pop
aam
lock
or
rcl
frstor
into
in
pop
xor
in
ret
and
xchg
xchg
pop
push
sbb
sub
gs
dec
mov
sahf
dec
ror
xchg
mov
bound
int
ret
pop
adc
mov
push
dec
jp
test
out
xor
dec
stos
add
cmp
lock
fidiv
jmp
les
cwde
push
push
jmp
adc
push
in
adc
out
scas
data16
cmps
xchg
push
daa
enter
inc
mov
or
jae
mov
shld
pop
dec
lods
and
out
xor
dec
ret
movs
adc
xor
sub
js
add
mov
lahf
(bad)
jmp
lahf
fsubp
fstp
jne
aad
pop
daa
(bad)
test
leave
inc
(bad)
call
mov
int
pop
xchg
dec
clc
cmc
(bad)
scas
add
fmulp
push
jl
push
sub
cld
scas
dec
jmp
lahf
mov
shl
stc
ss
push
shr
pop
dec
neg
push
sub
mov
into
and
xchg
ss
and
mov
sti
and
div
mov
ins
mov
inc
push
loopne
das
and
push
and
add
jno
add
jne
ins
stos
mov
sahf
scas
movs
leave
loop
adc
es
add
outs
or
and
xchg
jmp
mov
data16
out
ret
or
add
js
in
outs
movs
jmp
call
outs
xchg
shr
(bad)
fldenv
scas
adc
aas
enter
sahf
les
inc
xor
scas
mov
inc
gs
cdq
jecxz
inc
imul
les
pop
pop
xchg
adc
arpl
jo
and
sub
loopne
lods
jae
cli
sub
out
in
shl
adc
jl
shr
imul
fld
enter
sbb
mov
repnz
out
in
fimul
int
cmps
pop
jne
enter
mov
shr
mov
mov
adc
in
in
test
xor
int
notrack
sub
sbb
data16
mov
cmp
mov
gs
mov
adc
sbb
rol
movs
jmp
mov
shl
xchg
pop
mov
adc
xchg
popf
mov
loopne
mov
(bad)
or
or
cld
or
mov
push
push
dec
icebp
mov
sub
mov
jl
lahf
and
(bad)
lds
ss
add
add
mov
push
jo
fdivr
xor
hlt
ja
pop
sbb
out
pop
inc
rcr
test
xor
mov
mov
mov
xor
add
retf
in
js
cmps
jge
and
pop
or
stos
jle
sbb
jg
mov
or
mov
add
int
push
xlat
jne
mov
jmp
mov
lods
jo
stc
ja
cli
aas
mov
adc
in
popf
xor
repnz
cmps
inc
js
jae
inc
rol
movs
dec
shl
stos
jmp
fucom
cmp
test
sub
call
add
call
adc
cld
xchg
cmp
shl
fistp
jno
gs
sub
jp
cmp
fmul
lods
mov
push
sbb
mov
(bad)
sub
cmp
aad
add
lahf
cmp
mov
scas
sub
pop
sbb
outs
out
cdq
retf
mov
sti
mov
sbb
lods
push
mov
inc
sbb
in
adc
inc
in
mov
aas
test
xchg
cmp
ja
mov
xor
out
add
xchg
xor
mov
pop
dec
xchg
fs
nop
and
xor
mov
sti
int3
xchg
mov
mov
pusha
clc
mov
xchg
lods
sbb
in
and
cld
sub
pop
aam
dec
stos
sbb
jp
pop
mov
cli
jo
mov
popa
int3
xchg
mov
dec
out
mov
ds
shl
add
cs
push
adc
div
pop
inc
in
adc
mov
inc
mov
sti
and
sbb
or
(bad)
cmp
test
addr16
jnp
xchg
ins
xchg
data16
nop
and
add
jp
push
cwde
imul
pop
sub
or
outs
in
sub
jmp
sbb
jno
mov
scas
add
dec
dec
out
adc
pop
loop
mov
inc
scas
sub
xchg
sbb
cmps
sub
mov
adc
mov
jle
jne
cwde
inc
xchg
pusha
add
fcmovnbe
leave
xchg
aas
ins
add
in
xchg
aam
cli
or
pushf
push
faddp
shl
mov
xchg
fidiv
jo
lahf
mov
mov
ret
xor
test
leave
rcr
(bad)
retf
and
outs
ret
cmp
in
das
xor
icebp
in
mov
mov
mov
inc
jmp
cmc
movs
jno
mov
(bad)
cld
sbb
add
adc
data16
push
pop
lock
shl
mov
adc
and
and
inc
pop
(bad)
sahf
cmp
jns
int3
aam
xor
or
mov
or
add
inc
mov
dec
mov
adc
lock
mov
clc
jmp
popa
ja
cmp
pop
popf
pop
test
jo
jle
sub
mov
in
xchg
pop
sbb
cmp
into
and
or
(bad)
jmp
dec
jecxz
scas
sub
repz
mov
imul
movs
sar
inc
retf
nop
rcr
add
xchg
retf
pop
mov
mov
mov
jno
test
leave
dec
sub
sbb
loop
mov
cld
dec
hlt
iret
das
loopne
fmul
sbb
push
sar
or
cmp
nop
xor
mov
sbb
movs
mov
xchg
mov
call
mov
sbb
add
pop
hlt
or
mov
push
push
sub
xchg
xchg
jmp
inc
push
inc
or
pop
rcl
ds
cmp
xchg
iret
sti
xchg
aad
push
fcom
jae
adc
mov
das
ins
iret
push
arpl
sub
adc
call
loope
ja
sub
and
mov
loop
xchg
dec
in
dec
xchg
xchg
and
mov
pop
lods
push
ror
xchg
jbe
mov
pop
mov
sub
mov
inc
aam
test
setge
sbb
add
push
scas
sub
xchg
dec
sub
mov
and
ss
xor
daa
retf
mov
(bad)
xor
not
xchg
outs
mov
add
retf
inc
and
cmp
add
enter
clc
dec
(bad)
clc
jecxz
call
mov
dec
mov
in
cmp
outs
enter
(bad)
and
lock
jmp
and
jne
push
movs
scas
jo
push
pusha
pushf
add
push
xor
inc
xchg
and
into
pop
rol
mov
push
xlat
push
sti
or
push
rcl
fnstcw
dec
aas
add
fst
sub
mov
xchg
dec
test
and
out
xor
loopne
shr
xchg
sbb
cmp
test
push
push
ret
retf
sub
mov
or
mov
(bad)
xchg
aaa
das
outs
dec
lock
mov
das
cmp
std
sti
push
add
lahf
mov
outs
sub
fsub
hlt
loope
add
xchg
push
and
aad
xor
mov
loopne
push
cld
aam
lods
aaa
stc
cmp
pop
push
addr16
push
hlt
adc
(bad)
adc
push
push
push
pop
les
mov
sbb
add
mov
inc
push
xchg
sub
mov
popa
psadbw
mov
sub
out
cmp
test
out
rcl
pop
mov
div
arpl
in
(bad)
cmp
ret
loope
sub
hlt
(bad)
(bad)
jg
mov
xchg
mov
push
movs
imul
xchg
jmp
mov
pop
xchg
dec
sub
inc
fimul
add
or
mov
xchg
ficom
xor
pop
fucom
mov
push
test
jbe
rol
(bad)
xchg
push
xchg
addr16
mov
sub
je
lods
test
inc
mov
dec
mov
in
pop
adc
mov
push
sar
jmp
sub
lods
ror
sbb
(bad)
in
sub
mov
std
cwde
xchg
mov
arpl
xchg
pop
cmp
mov
repnz
and
or
xor
int
mov
jp
push
sbb
mov
jb
cmp
push
out
ja
(bad)
movs
xchg
inc
repz
sub
hlt
xchg
sbb
inc
(bad)
sbb
adc
xlat
int3
fsubr
sbb
loope
mov
dec
(bad)
push
fst
push
ja
sbb
xchg
push
nop
sbb
jle
dec
in
repnz
push
jmp
sub
and
aas
inc
sar
arpl
mov
fstp
clts
xor
mov
lods
lock
mov
inc
push
push
std
std
fs
(bad)
das
adc
mov
enter
dec
ret
bound
jno
mov
or
jl
sar
jo
aam
mov
xchg
pop
mov
inc
in
(bad)
in
add
pop
sbb
adc
sub
xor
mov
je
les
out
mov
in
inc
mov
jno
mov
sub
xchg
aam
gs
pushf
mov
push
jne
pop
mov
fadd
push
fisub
fsub
mov
mov
test
lock
dec
inc
cmp
dec
sub
and
xchg
xchg
cmp
aad
xchg
ja
pop
test
aad
sub
clc
or
xchg
call
jge
mov
ins
repz
dec
and
mov
mov
mov
xchg
or
inc
jge
dec
out
popa
cmp
scas
mov
data16
out
ins
add
pop
fmul
iret
hlt
and
pop
mov
and
xchg
lahf
xchg
stos
mov
mov
cmp
outs
sub
pop
ss
ret
mov
xlat
dec
dec
movd
cli
lock
int3
inc
cmp
xor
shl
out
loopne
mov
dec
push
jne
test
sub
arpl
jns
ins
cmps
cmc
into
pop
add
pushf
push
pusha
push
(bad)
mov
mov
sahf
push
jo
enter
cmp
gs
(bad)
pop
repz
jbe
(bad)
in
jl
jl
call
retf
ins
sbb
daa
xchg
test
gs
out
fiadd
xchg
sub
xor
and
mov
out
inc
cmp
aam
shl
cdq
xchg
mov
add
mov
push
mov
(bad)
mov
mov
cmp
scas
call
xchg
cs
retf
and
fldenv
pop
dec
xchg
xor
mov
(bad)
in
xchg
test
push
imul
mov
jmp
pop
push
cmp
push
loopne
pop
mov
nop
xor
std
aad
jb
fs
loopne
push
inc
xchg
xor
sub
or
mov
xlat
and
jb
add
es
push
loop
dec
icebp
adc
iret
les
sub
ins
pop
(bad)
mov
pop
(bad)
mov
cmps
mov
stos
and
pop
and
mov
faddp
sbb
add
pop
xlat
adc
call
lea
or
jno
push
sub
int3
repnz
xchg
mov
rol
cmp
inc
(bad)
not
js
sub
jp
mov
ds
ror
out
repz
xchg
inc
pusha
sub
jne
sub
cmp
stc
test
pop
les
in
cmp
ret
jp
loopne
arpl
fs
jp
sbb
ja
adc
popf
ss
scas
gs
pop
sub
pusha
mov
mov
out
std
jns
in
sub
push
push
mov
sbb
pop
xor
pop
scas
shl
push
mov
sbb
cmp
das
and
or
xlat
out
movs
dec
rcl
int3
shl
out
fstp
mov
enter
pop
mov
test
xchg
sbb
ret
cld
mov
movs
xor
xchg
inc
dec
pop
add
dec
mov
cmps
or
sub
mov
jbe
dec
add
lods
mov
retf
sbb
(bad)
aad
arpl
adc
or
in
in
hlt
call
in
add
and
retf
xchg
mov
xchg
xchg
sub
jns
pop
adc
fs
or
gs
and
cmp
mov
loop
jns
retf
inc
mov
fsub
dec
xchg
xor
inc
outs
test
mov
mov
push
cmps
nop
or
sbb
mov
mov
cwde
pop
sbb
inc
(bad)
test
data16
push
cmp
pop
sar
lahf
dec
adc
inc
add
out
pop
lds
ftst
mov
pop
dec
mov
out
mov
sub
mov
aaa
stos
popa
(bad)
push
push
inc
add
adc
int3
add
push
cld
or
ins
add
xor
and
test
mov
je
jmp
sbb
dec
dec
sahf
in
fidivr
(bad)
push
test
mov
pmulhuw
mov
arpl
pop
stc
popf
repnz
ror
or
xor
call
adc
dec
xchg
pushf
pop
cmps
jp
nop
pop
or
or
(bad)
clc
adc
jo
icebp
icebp
xchg
mov
dec
ins
arpl
aaa
push
jecxz
add
mov
mov
xor
sub
call
icebp
in
jmp
adc
repnz
lods
fdivr
test
mov
sub
or
lods
push
adc
pop
(bad)
pop
pop
add
pop
cmp
leave
jnp
xchg
xchg
loopne
nop
jnp
add
iret
imul
cmps
test
xor
dec
test
fwait
js
or
ss
loope
adc
pop
mov
ins
fs
fdivrp
push
mov
ins
fidiv
je
mov
sub
out
inc
xor
sub
push
or
mov
test
lds
jb
(bad)
das
push
pop
loop
out
push
popa
jmp
cmc
test
adc
mov
push
inc
cmp
mov
inc
gs
cmps
ret
fnstsw
pop
sbb
push
sbb
inc
retf
fs
in
stos
gs
add
cli
xchg
push
xchg
fimul
sbb
mov
lahf
retf
pushf
push
adc
and
push
fistp
sbb
jecxz
sub
push
adc
iret
pop
or
xor
fst
stc
sahf
push
and
dec
lods
(bad)
jg
xor
cmps
jmp
pushf
repz
test
das
movs
lock
mov
in
fucom
jle
retf
lahf
and
movs
jp
add
pop
imul
(bad)
mov
ret
jmp
jo
cwde
leave
add
xchg
(bad)
add
push
mov
inc
enter
or
addr16
and
jle
mov
cmps
or
xor
inc
jns
adc
(bad)
mov
pop
(bad)
cmps
pop
sbb
shr
hlt
mov
scas
ret
and
rol
sub
and
mov
sti
arpl
pop
sub
sub
ficomp
les
dec
fsub
push
clc
pop
gs
inc
cmp
aad
nop
addr16
push
vpsllw
pop
xor
pop
rcr
mov
idiv
aam
inc
sub
repz
out
mov
push
das
pop
push
idiv
mov
call
fs
pop
in
mov
popf
ss
test
pop
jmp
xor
dec
or
sub
sahf
mov
pop
add
addr16
push
scas
ror
mov
and
mov
jecxz
sub
cmp
test
movs
jl
not
test
cdq
xlat
jle
add
cmps
pop
xor
sbb
imul
popf
out
dec
mov
mov
mov
mov
js
dec
push
ins
popf
test
arpl
push
rol
sbb
sub
push
inc
push
xor
mov
xchg
adc
adc
lds
sar
outs
call
call
mov
rol
rol
daa
or
cmp
mov
sahf
out
jmp
push
in
cmp
out
out
mov
add
jno
les
jae
cmp
sub
pop
and
nop
xchg
dec
add
xor
(bad)
mov
pop
pop
xchg
cmp
icebp
add
add
cmc
sub
jecxz
pop
das
or
mov
lods
scas
xor
pop
retf
push
cmps
cmp
fisub
int
aaa
mov
fist
jno
mov
je
cmps
jp
lods
lea
in
inc
ror
add
push
int
jmp
iret
fs
dec
div
leave
cmps
das
pop
pop
add
test
push
es
xchg
icebp
popf
pop
loope
test
adc
loope
mov
je
imul
add
sbb
out
ds
cmp
and
mov
cs
mov
popa
and
movs
push
cmp
adc
sub
jmp
stos
fisub
jo
popf
mov
xor
iret
mov
adc
pop
stos
xchg
jbe
stos
retf
xchg
das
jae
and
stos
jae
test
ret
mov
cmp
lds
or
adc
mov
xchg
aaa
push
xor
jae
adc
mov
nop
ror
pop
dec
(bad)
cmp
in
aaa
xor
mov
lods
and
lods
scas
ins
les
mov
test
lds
xor
stos
punpckhwd
addr16
push
ret
pop
sbb
in
xchg
and
(bad)
mov
push
in
xchg
push
mov
or
mov
inc
xlat
mov
or
aam
out
cmp
retf
cmp
xchg
mov
fisub
and
sti
add
fidiv
xchg
xor
into
sbb
xor
aam
stos
mov
movs
pop
and
int
mov
adc
js
jp
sbb
push
(bad)
pop
lahf
out
lahf
imul
dec
ret
in
ret
xchg
mov
adc
add
outs
mov
or
aad
adc
je
test
push
stos
mov
aas
pop
call
adc
dec
sbb
(bad)
and
retf
push
call
mov
sub
dec
add
sub
fsub
clc
push
pop
sti
xchg
cdq
xchg
scas
xchg
int3
rcr
arpl
sub
fisubr
repz
stos
jns
and
dec
ja
sbb
inc
sub
push
loope
add
ret
pusha
cmp
cmp
mov
adc
or
push
in
mov
enter
cmp
cmp
xor
xor
mov
push
out
inc
les
jne
ds
ins
pop
shl
adc
mov
mov
add
xor
lods
lods
xor
fldcw
lea
mov
xlat
xchg
enter
lock
sub
jno
push
dec
imul
and
mov
call
das
clc
iret
push
sbb
xchg
push
push
inc
xor
dec
inc
push
xor
mov
outs
sahf
sub
fisub
pop
jg
cmp
jns
gs
cmp
fs
dec
jmp
push
mov
iret
pop
nop
jl
les
xor
mov
mov
adc
jns
or
sbb
repnz
data16
jge
ins
(bad)
sar
test
sbb
call
or
jg
pop
cmps
retf
xchg
xor
out
add
bound
jle
loop
mov
lods
in
in
aaa
and
stos
mov
icebp
shl
mov
clc
dec
xor
adc
aad
xchg
jnp
scas
mul
in
(bad)
retf
jbe
xor
sti
push
ret
sbb
jbe
pop
xchg
cs
push
sub
sbb
pop
mov
jecxz
mov
fwait
shr
test
xchg
or
add
sbb
hlt
mov
xchg
dec
sti
add
jnp
add
dec
cmp
cmp
mov
cwde
inc
jne
addr16
mov
xchg
lds
mov
out
xchg
xor
push
adc
das
dec
jns
mov
cmp
jge
dec
jge
sbb
mov
(bad)
adc
inc
cmp
popa
lahf
(bad)
cwde
fstp
pop
cwde
xchg
es
inc
ss
(bad)
jge
cwde
or
inc
aad
or
cs
push
aad
(bad)
lock
dec
nop
mov
pop
js
fwait
imul
sbb
and
or
xchg
retf
add
call
cmp
cmc
bound
push
mov
inc
ficomp
icebp
int
repz
mov
jne
inc
std
xchg
and
xor
jb
loope
not
pop
mov
and
lds
aas
or
jae
add
cmps
es
push
pop
sahf
jge
cld
pushf
mov
push
mov
not
aad
cwde
xchg
sub
xor
(bad)
hlt
adc
push
xor
mov
dec
mov
mov
and
and
xchg
adc
cs
loopne
lods
cmps
adc
repnz
loop
xor
nop
mov
push
sti
or
fisub
fwait
mov
das
cmp
loope
dec
cmp
push
ins
xlat
jg
inc
mov
repnz
add
push
fsub
adc
fld
out
(bad)
movs
mov
inc
pusha
dec
mov
lahf
ins
add
cdq
std
in
push
lods
and
dec
xchg
xchg
les
fs
fsubr
rcr
iret
aam
and
pusha
cmp
jmp
leave
inc
inc
mov
mov
mov
xchg
scas
sub
jne
popa
dec
fimul
movs
mov
loope
add
(bad)
jp
test
out
mov
xchg
aam
cmp
xor
push
cmc
lock
iret
int
cmp
xor
fcom
sub
out
xchg
int3
mov
xchg
inc
bound
jno
pushw
loopne
es
pop
dec
adc
sbb
ds
dec
push
mov
or
mov
(bad)
dec
imul
loop
cdq
cmp
mov
add
xlat
loopne
push
or
fsub
inc
mov
sub
inc
bound
das
push
clc
int3
push
inc
dec
xor
mov
push
les
(bad)
xor
repz
retf
lock
mov
pop
in
outs
lea
outs
mov
xor
and
adc
pop
and
or
adc
js
and
adc
ret
jmp
ret
(bad)
xlat
je
mov
push
or
adc
xchg
ins
xchg
js
test
std
mov
pop
pushf
stos
arpl
dec
xchg
das
loop
jae
fisub
cmc
movs
js
sub
jp
mov
cmp
out
xor
fcmovnbe
sbb
(bad)
jle
push
(bad)
pop
(bad)
or
mov
inc
sahf
(bad)
daa
ja
inc
loop
das
retf
or
scas
sbb
gs
pushf
xor
stos
aas
mov
mov
jns
adc
cmp
pusha
adc
and
dec
retf
(bad)
cmp
and
call
sbb
mov
xchg
das
xchg
aam
into
ins
mov
add
stc
xchg
jg
test
or
push
aas
scas
iret
jb
cmp
xchg
xchg
iret
out
(bad)
mov
pop
test
rcl
inc
and
not
sub
sbb
mov
loope
aad
jbe
dec
jns
xchg
push
lods
cmp
and
sti
jnp
xor
lahf
mov
cdq
add
mov
repz
cli
mov
sub
ss
inc
pop
pop
arpl
cmp
xor
ret
fxch
outs
push
dec
push
scas
inc
and
mov
jge
ins
es
sub
cmp
inc
sbb
xchg
idiv
(bad)
cld
cmp
mov
arpl
js
imul
and
and
jne
sti
mov
fucom
call
xlat
and
stos
adc
mov
xor
call
sub
xchg
sub
dec
push
cwde
mov
xlat
pop
stos
fsubr
push
aad
call
imul
cmps
imul
(bad)
jl
xchg
bound
(bad)
retf
jbe
daa
xchg
pop
pop
mov
(bad)
out
inc
xchg
jb
mov
xlat
cmp
pop
rcr
fidivr
retf
es
push
imul
iret
pop
inc
imul
lea
aaa
adc
dec
rcl
mov
mov
repz
mov
push
loop
dec
icebp
ss
not
sar
sbb
jae
ins
dec
xor
cmp
dec
fstp
mov
rcl
xor
es
mov
push
and
xchg
test
pop
dec
popf
inc
pop
sbb
add
iret
mov
add
test
dec
lea
push
shr
(bad)
pop
and
mov
push
in
inc
cmp
lods
adc
(bad)
pop
dec
mov
fmul
add
rcl
push
xchg
push
cmps
adc
xchg
movs
xor
xor
clc
pop
ins
(bad)
mov
or
bound
mov
mov
jno
ja
mov
inc
xlat
adc
mov
pop
ret
sahf
dec
repz
mov
mov
adc
jo
or
daa
cmp
xor
inc
addr16
ins
cli
mov
pop
ret
(bad)
(bad)
(bad)
fbld
fwait
cmp
(bad)
xor
jnp
sbb
or
mov
xor
adc
mov
call
cmp
aaa
jge
push
pop
frstor
jb
cli
lods
and
mov
inc
ror
fild
aad
stos
push
xchg
lods
ds
out
shr
inc
inc
add
xchg
cmp
je
sub
daa
dec
je
xlat
popf
cmp
mov
fist
je
inc
fsub
jb
jge
out
icebp
push
push
jmp
adc
icebp
lock
xchg
cmp
add
inc
sub
sub
mov
es
jo
mov
test
cmp
cmc
mov
cmps
add
xchg
jmp
add
jp
inc
fs
scas
lods
dec
test
out
sahf
scas
rcl
rol
cmc
xor
mov
mov
in
dec
aas
lea
xor
daa
mov
sti
arpl
out
xchg
pop
in
ss
fimul
mov
into
ds
push
iret
mov
jae
sbb
sub
xchg
push
addps
adc
addr16
ins
cmp
outs
cmp
pushf
pusha
nop
push
push
jmp
ror
dec
adc
cmc
movnti
bound
sti
xchg
idiv
call
cmp
(bad)
push
pop
into
mov
xor
cmps
jne
adc
lds
test
push
not
cs
mov
retf
test
jns
cdq
jmp
fs
sbb
cs
jp
aad
push
push
xchg
pushf
je
sar
lock
inc
imul
fs
push
pop
aas
scas
addr16
popf
icebp
ret
push
adc
push
jl
out
push
mov
out
xlat
inc
fst
jl
xor
(bad)
imul
into
mov
mov
push
outs
mov
mov
pop
mov
rcl
dec
clc
xor
jne
push
jge
sbb
jb
inc
outs
in
lods
js
lds
ror
jecxz
adc
es
(bad)
push
aaa
sub
ja
pushf
repnz
xor
movs
fidiv
out
stc
and
push
add
inc
pop
inc
bound
adc
mov
push
popf
inc
aad
jbe
outs
mov
cmp
shl
or
push
sahf
cmp
outs
loope
cmp
push
fs
aam
aad
ficomp
enter
repz
imul
les
or
push
cmps
adc
mov
cmps
ret
clc
loop
jne
adc
jb
aad
xchg
ret
dec
rcl
xchg
jecxz
dec
dec
pop
mov
rol
aam
loop
sub
mov
and
sahf
(bad)
or
outs
xlat
js
fidivr
pop
push
call
jle
aaa
push
repnz
sub
sbb
jmp
in
stc
cmp
add
mov
push
enter
jno
dec
inc
retf
sbb
add
push
inc
retf
mov
jae
jg
ins
jae
frstor
add
in
std
test
cwde
in
mov
jmp
popf
push
imul
mov
pop
aam
not
call
out
scas
mov
inc
test
mov
jno
mov
xor
jg
dec
xchg
xchg
mov
cmp
cwde
clc
rcr
mov
dec
sbb
fld
in
mov
mov
add
popf
cmp
push
mov
int3
bound
adc
mov
sti
sbb
xor
mov
arpl
sub
sub
adc
sub
fwait
in
(bad)
dec
inc
push
or
cmp
(bad)
out
mov
push
xor
arpl
cmp
fdivr
pop
sbb
(bad)
bound
dec
arpl
in
(bad)
and
push
hlt
adc
inc
scas
adc
ss
fadd
xor
cmp
ret
mov
or
ds
or
pop
in
mov
jecxz
(bad)
imul
add
mov
fdivr
popf
jle
imul
push
mov
fcomp
add
popf
jg
push
int
addr16
dec
paddd
(bad)
ss
int3
pop
movs
mov
sbb
cmp
gs
jne
mov
cmp
or
fist
mov
jge
adc
loope
inc
(bad)
and
xchg
xor
mov
dec
ins
out
mov
leave
out
xor
in
das
mov
out
push
out
adc
mov
sbb
push
dec
dec
dec
pop
(bad)
adc
out
mov
ret
mov
mov
or
das
popf
mov
test
xchg
in
mov
aaa
add
push
cmps
adc
stc
ror
ror
pop
leave
aas
xor
mov
mov
test
xor
sbb
add
aaa
mov
jne
or
pop
jmp
inc
fwait
xchg
movs
jns
mov
mov
push
call
scas
daa
xchg
test
sar
test
cmp
inc
adc
jo
outs
(bad)
and
ds
xlat
enter
pop
mov
sub
enter
jnp
pop
mov
push
(bad)
test
sub
mov
mov
jne
ja
loopne
push
scas
cmps
ret
mov
jle
add
jae
ds
scas
pop
aas
sar
out
ret
repz
mov
mov
pop
pop
mov
popa
mov
hlt
imul
xlat
cli
or
fadd
mov
and
iret
cmps
nop
xor
gs
div
cmp
in
popf
out
ja
xor
sub
or
call
jno
mov
test
jge
inc
push
cmc
dec
adc
mov
stos
sbb
push
int3
(bad)
mov
pop
cdq
popf
test
add
ret
setne
mov
int3
std
push
out
call
adc
fcmovbe
and
lods
xor
xchg
push
test
push
shl
or
dec
or
pop
xchg
ss
aad
dec
mov
xchg
mov
push
xor
xchg
movhps
pop
adc
ret
cmp
pop
and
or
popf
push
jp
les
mov
inc
pop
iret
jno
loop
out
aas
pcmpgtd
das
fsubp
cmps
ins
lods
in
popa
sbb
clc
inc
jp
inc
in
add
pop
mov
cmp
cmp
adc
pusha
lods
popa
jno
sub
sbb
jmp
jb
mov
fadd
cmp
leave
mov
adc
in
add
add
sbb
pop
sub
push
dec
cwde
and
inc
cmp
(bad)
xchg
imul
imul
call
popa
cmc
xor
cmp
dec
or
fmul
sahf
jecxz
and
mov
sahf
lahf
sbb
jb
adc
lock
jb
call
adc
(bad)
jo
fild
movs
out
ins
lahf
inc
imul
sub
shl
movs
(bad)
lock
jns
stos
addr16
sub
push
dec
cmps
mov
lock
ins
adc
clc
not
mov
(bad)
lea
and
adc
repnz
popa
jp
sahf
push
adc
mov
pushf
popf
js
add
sbb
cmp
ins
out
fdiv
repz
mov
mov
fwait
push
outs
cwde
mov
push
call
mov
mov
pop
pusha
jo
ror
nop
mov
inc
aad
add
out
and
push
arpl
lea
out
sub
xchg
push
xor
out
xor
xchg
mov
dec
cwde
lahf
and
pop
jmp
push
cld
cmps
xlat
dec
shr
pop
test
dec
push
mov
lods
rcl
jle
mov
test
adc
sub
fsub
imul
mov
clc
ins
mov
popa
es
(bad)
(bad)
pop
jecxz
das
sub
add
repz
push
int
add
je
ror
push
mov
sub
adc
and
stos
add
mov
xchg
fisub
xlat
jo
inc
lahf
imul
and
jmp
or
not
xchg
int
xchg
mov
fdivr
jecxz
dec
sbb
imul
inc
add
mov
pop
fbstp
add
hlt
sbb
xor
sti
out
mov
data16
fistp
mov
lods
add
dec
xchg
fcomp
pop
inc
sbb
add
mov
jmp
jecxz
pop
fild
pop
jbe
xor
(bad)
pushf
ss
(bad)
(bad)
daa
xchg
mov
(bad)
or
push
inc
das
(bad)
cmps
pop
das
pop
out
(bad)
adc
jmp
lods
push
lods
inc
cmp
pop
lods
pop
ret
and
aam
or
and
push
out
sub
xchg
out
xor
pop
adc
bound
repz
rcl
inc
jp
cmp
ja
sbb
adc
mov
ret
cmp
push
cmc
loope
gs
sti
shl
cmp
mov
dec
mov
ror
mov
and
mov
xor
daa
xlat
sub
xor
pop
push
mov
mov
leave
jmp
or
pop
mul
frstor
adc
sar
sub
imul
fsub
sbb
ja
push
adc
out
imul
bound
in
mov
test
xor
setl
pop
dec
cmp
mov
or
jmp
cmp
out
push
ret
inc
fs
xor
pop
sahf
push
mov
in
lods
or
cmp
and
mov
xor
sbb
sub
jnp
push
adc
add
sub
push
int3
sub
sub
loope
cld
and
pop
and
or
mov
mov
pop
xor
cmps
add
dec
retf
movs
sub
sub
fcomp
push
data16
into
ror
sbb
data16
cmp
xchg
leave
mov
mov
sub
int
dec
cmp
(bad)
xor
cdq
ret
(bad)
daa
dec
aas
push
jmp
pop
(bad)
cmc
std
mov
jecxz
shr
loopne
cdq
mov
cld
shr
arpl
lods
dec
adc
jle
int3
scas
mov
pop
push
(bad)
xor
lds
loope
rcl
mov
pop
sbb
sub
mov
stos
jne
lods
cwde
push
mov
imul
fmul
and
je
adc
out
gs
enter
(bad)
clc
daa
xor
pop
mov
in
pop
rcr
test
cld
fcmovu
inc
sbb
xchg
adc
xor
das
push
lock
cld
cmp
jle
and
add
in
mov
adc
sbb
(bad)
push
inc
clc
xor
(bad)
jno
push
out
fdiv
scas
pushf
dec
mov
or
iret
mov
ss
and
ret
dec
cmp
(bad)
pop
jmp
test
cmp
and
xchg
push
movs
loope
pop
push
sub
cmp
ret
mov
mov
(bad)
jge
cmp
or
pop
fstp
ins
lods
and
xor
popa
loope
inc
clc
adc
sub
xchg
fst
cwd
and
xlat
mov
or
or
xchg
ins
push
iret
mov
jp
fisttp
dec
add
sbb
cmp
push
mov
(bad)
test
mov
and
xor
ins
stos
adc
jmp
std
je
push
push
fcom
in
test
int
addr16
sbb
adc
lahf
sub
cmp
fld
jne
enter
xchg
jae
aam
and
cmp
test
mov
jecxz
and
dec
sub
jne
pop
pusha
mov
xchg
xor
out
pushf
jae
pop
pop
pinsrw
push
push
mov
scas
jae
mov
pop
dec
inc
shr
aam
outs
ror
adc
sub
sub
cmp
leave
inc
adc
movs
sub
(bad)
adc
aad
pushf
add
std
dec
add
int3
jbe
ret
int
scas
lods
or
test
xchg
mov
dec
in
jbe
clc
add
push
lods
ins
adc
add
cmp
pop
mov
sbb
pop
mov
ins
in
data16
aam
mov
iret
xlat
sub
push
or
push
adc
shr
popa
mov
jge
(bad)
loopne
cli
mov
push
sbb
out
jnp
sub
add
push
inc
into
shl
ret
inc
(bad)
(bad)
or
outs
mov
icebp
push
outs
push
mov
(bad)
inc
pop
adc
jmp
je
(bad)
or
shr
sahf
add
cmp
cld
pop
(bad)
cli
pop
mov
nop
packuswb
pop
dec
loop
stc
in
mov
imul
push
sub
push
xchg
mov
stos
aam
add
or
mov
xchg
hlt
mov
push
and
adc
test
shl
and
xchg
or
inc
ret
or
inc
(bad)
call
test
cmps
add
xor
shl
call
fninit
dec
aad
stc
inc
xor
xchg
mov
es
fidivr
cmp
lods
arpl
icebp
mov
ins
fidivr
test
mov
test
mov
lds
aaa
cmc
pop
dec
nop
or
adc
cmp
(bad)
jmp
mov
fmul
cmp
add
cmp
jbe
mov
mov
xchg
into
mov
mov
jae
mov
xchg
cs
pushf
outs
nop
dec
in
pop
mov
ja
sub
stos
cdq
mov
sub
(bad)
lock
xchg
cmps
sar
dec
push
mov
loopne
in
mov
test
mov
cmp
and
add
mov
pop
and
pusha
push
in
adc
cmp
xchg
jmp
mov
xchg
push
push
add
lea
ja
das
in
aas
(bad)
mov
imul
add
push
sub
stos
inc
fs
in
and
jp
inc
sbb
adc
xchg
out
xlat
push
(bad)
mov
retf
sbb
ret
ins
jmp
sub
outs
jp
scas
adc
pop
push
xor
jo
lea
xor
mov
push
test
imul
out
mov
pusha
sbb
gs
test
cmp
shl
jno
in
cmp
jae
add
push
jno
cmp
jo
cmp
(bad)
push
cwde
sbb
sahf
test
xor
jns
daa
inc
ret
ja
fistp
jp
imul
sub
out
cmp
pop
jp
int3
std
cld
sub
sbb
sbb
xchg
mov
test
(bad)
and
and
mov
inc
pop
xchg
and
pop
fstp
pop
sub
inc
ret
shl
mov
or
pop
pop
sub
inc
rcl
push
data16
test
xchg
wrmsr
adc
ss
mov
daa
pushf
jge
pusha
adc
ficomp
imul
push
fild
stos
jle
and
mov
adc
enter
fcom
sub
sub
jnp
xchg
ins
dec
ror
pop
mov
test
retf
add
jb
add
and
jmp
mov
add
cs
in
pushf
adc
mov
inc
lods
inc
pushf
aaa
es
lds
in
bound
xchg
out
pushf
pop
stos
les
sar
mov
cs
cdq
jmp
push
and
sti
xor
enter
mov
mov
lds
mov
dec
lahf
mov
nop
dec
mov
adc
sbb
adc
push
dec
push
fwait
ror
js
mov
sbb
je
in
xor
in
jns
push
mov
mov
pop
mov
gs
adc
add
pop
adc
int3
test
stos
stos
cdq
dec
scas
jle
(bad)
push
jge
or
(bad)
sahf
mov
je
ret
movs
xchg
push
push
fdiv
call
test
div
ins
sub
inc
cs
push
inc
and
adc
ror
add
mov
dec
aam
shr
out
pop
ret
push
sub
mov
icebp
fsubp
xchg
loopne
cmp
hlt
jbe
retf
jnp
pop
lods
jmp
mov
xchg
leave
fucomip
mov
jo
cmp
dec
jns
cmps
lods
adc
mov
hlt
add
imul
sub
ficomp
push
xchg
and
in
repz
ins
das
jns
jae
push
in
add
sahf
sbb
out
mov
imul
add
loop
cs
jmp
arpl
(bad)
(bad)
jno
dec
adc
push
fnsetpm(287
das
push
stos
push
sbb
add
aas
sub
ret
imul
xchg
and
rcr
mov
push
pop
pop
push
int
mov
add
imul
sahf
xchg
sbb
rol
cmps
add
in
or
cmp
pop
in
mov
mov
push
adc
or
popf
sar
iret
not
lds
push
adc
inc
sbb
fidivr
stos
pop
xchg
dec
fs
outs
ret
push
in
xor
sub
xchg
aam
lods
push
sbb
arpl
retf
call
mov
or
fadd
je
bound
sub
pushf
jmp
into
pop
jge
call
mov
mov
and
fcmovnb
push
xchg
and
out
mov
aam
xchg
add
lahf
int3
push
ds
les
push
mov
lods
mov
test
mov
sub
pop
leave
inc
xor
sub
das
or
mov
or
or
sar
dec
xchg
popa
data16
jge
rcr
push
aaa
inc
out
mov
push
leave
lock
shl
push
cmp
mov
lock
bound
shl
push
mov
push
jo
in
pop
jge
in
mov
xor
sub
xchg
mov
pop
sbb
sbb
inc
mov
stc
int
push
es
movs
aas
mov
in
inc
clc
and
popf
cld
loope
push
repz
das
js
sub
dec
and
xchg
int3
test
pop
fcom
mov
cmp
jae
mov
or
or
dec
add
out
xchg
stc
sub
mov
fwait
sub
clc
xchg
frstor
xor
adc
lds
sbb
out
mov
fild
jae
mov
js
(bad)
lea
data16
cmp
and
dec
pop
mov
loope
xor
sbb
loop
push
cmp
data16
mov
push
retf
mov
ret
mov
cs
mov
and
cs
cwde
pushf
jle
les
bound
jmp
hlt
clc
sub
xor
cmps
add
outs
pop
jmp
push
adc
stos
push
xchg
stc
xor
in
shr
add
xor
push
and
cmp
mov
push
cdq
inc
fs
mov
cmps
scas
jg
ficomp
xlat
lea
fcomp
stos
scas
rcr
push
jnp
test
ret
mov
ficomp
add
leave
js
vcvtph2ps
adc
jnp
sub
int3
jl
sub
mov
sub
sbb
add
dec
ins
add
xchg
cmc
test
push
movaps
retf
mov
push
lods
xchg
jp
test
and
pop
aam
iret
out
mov
imul
(bad)
fidivr
jae
sbb
dec
inc
loopne
xor
jle
mul
pop
inc
movs
inc
inc
sbb
fs
pushf
sub
lds
mov
movs
cmp
test
in
pusha
and
ror
out
inc
icebp
shl
ss
inc
mov
mov
inc
xor
data16
pop
jnp
mov
lods
cmc
js
xchg
sub
adc
rol
movs
jns
scas
jnp
push
sar
push
cmps
cmp
add
pushf
stc
inc
popf
icebp
ins
add
cmc
ror
inc
xchg
sbb
sub
fild
xchg
js
int3
les
and
cmp
mov
test
push
aam
lods
pop
jae
outs
clc
ins
nop
xor
mov
fstp
and
or
lea
and
movs
jmp
out
mov
xor
arpl
adc
jmp
mov
daa
or
iret
push
cmp
adc
retf
mov
add
dec
and
xchg
pop
sub
dec
js
rcl
sub
test
adc
add
cmp
ficomp
mov
test
add
and
imul
adc
jmp
clc
mov
adc
sar
xchg
stos
ins
push
inc
mov
jbe
call
aas
mov
in
lds
jecxz
ins
inc
or
mov
cs
fisubr
lea
cli
ficom
mov
loop
sbb
arpl
adc
mov
jle
push
push
in
cmp
add
xor
inc
push
ret
imul
aaa
push
mov
test
inc
xor
out
addr16
push
cli
xchg
imul
mov
inc
mov
movs
pusha
adc
inc
fdivr
or
and
neg
mov
dec
xchg
xlat
sub
shl
mov
lea
fwait
in
aas
loope
js
loope
outs
or
scas
or
cmp
pop
adc
xchg
or
fistp
jbe
cmp
pushf
shr
xor
scas
test
loopne
and
int3
leave
imul
and
scas
test
shr
add
pop
rcr
outs
(bad)
xchg
cmps
stos
out
popf
sbb
test
arpl
loopne
fs
and
and
in
mov
shr
cdq
jle
add
ja
jg
adc
clc
leave
mov
cmp
dec
data16
test
mov
pop
fs
shl
cmp
pop
sbb
ds
lods
jbe
outs
hlt
pop
in
out
jae
xchg
mov
in
imul
ficom
sbb
add
ja
inc
dec
or
ret
inc
xor
or
sbb
popf
sar
in
mov
(bad)
jecxz
loop
addr16
mov
(bad)
ror
or
cmps
xor
outs
pop
nop
aam
push
cmp
es
(bad)
scas
das
loop
int3
pop
loop
sub
ret
mov
push
pop
or
adc
xor
dec
(bad)
imul
lds
push
jbe
dec
mov
aas
cwde
sub
cld
push
in
lock
arpl
ret
pushf
sar
stos
cmp
sbb
jne
adc
cs
or
push
push
stos
js
(bad)
jb
sub
(bad)
rol
adc
aad
aas
shl
jne
test
arpl
out
cmc
daa
int
sbb
loope
les
dec
inc
(bad)
push
jns
shl
scas
es
xor
lods
jmp
(bad)
push
dec
mov
xchg
inc
sub
lods
fsub
sub
cmps
jb
push
repnz
sbb
mov
add
int3
stos
dec
mov
in
inc
jnp
cli
sbb
push
cdq
adc
and
sub
cmps
fimul
and
sub
gs
mov
cmps
inc
mov
cdq
and
mov
push
add
outs
cwde
adc
out
sbb
fwait
mov
fcomip
(bad)
sbb
fwait
mov
pop
fs
scas
inc
loopne
ret
inc
mov
xchg
mov
push
xor
xlat
ds
stc
ja
jns
jecxz
mov
push
push
mov
jno
cmps
mov
cwde
mov
loopne
aas
or
mov
movs
mov
pop
mov
jb
stc
inc
std
mov
outs
mov
fwait
js
mov
mov
ja
mov
and
xchg
aad
xchg
popf
pop
pop
stos
or
(bad)
out
pop
and
pop
cld
out
das
jbe
mov
xor
repnz
hlt
idiv
js
cmps
test
cmc
loopne
(bad)
movs
jae
ins
fsub
int3
stc
ins
movs
xchg
neg
gs
jno
aad
push
loopne
jle
ret
iret
xchg
inc
loope
or
mov
push
jmp
scas
shl
xchg
dec
std
arpl
fcomp
mov
jl
idiv
call
loopne
gs
cmc
das
stos
fmul
sbb
sbb
xchg
push
add
ins
(bad)
neg
leave
fwait
sub
bound
adc
push
ins
cmc
xchg
in
fadd
xchg
stos
mov
bound
pop
shl
jno
icebp
xor
(bad)
ja
jbe
cwde
test
(bad)
cmps
xchg
xchg
fadd
inc
mov
sub
ins
mov
shl
(bad)
or
gs
push
xchg
push
ins
push
or
mov
lahf
push
inc
fcmovne
pop
sahf
add
and
fs
push
sbb
popf
test
inc
out
inc
inc
fld
dec
fcmovnbe
push
movs
into
(bad)
leave
cmp
(bad)
pop
mov
cdq
jp
mov
xor
into
sub
mov
mov
inc
mov
cmp
inc
pop
movs
xor
inc
mov
fsub
cmp
cwde
inc
jne
and
jbe
(bad)
mov
fcomp
sbb
jnp
cmps
mov
mov
add
pushf
and
mov
sbb
push
xor
test
sbb
int
pop
gs
out
les
(bad)
jbe
sahf
sbb
pop
push
add
cld
inc
sub
push
add
xchg
mov
sti
mov
xchg
repz
inc
jne
ins
mov
or
das
mov
inc
sub
ror
arpl
push
sub
and
pop
jae
xlat
fs
xor
je
cmp
xlat
sbb
imul
loope
cld
push
rol
aas
and
ret
pushf
out
jecxz
ins
pop
(bad)
xor
push
jmp
push
shr
inc
pushf
add
daa
and
dec
cmp
retf
sbb
inc
fs
mov
inc
fadd
push
aas
rol
(bad)
imul
and
xor
dec
and
pop
jnp
pop
push
or
jge
les
int3
add
sbb
jo
test
(bad)
sahf
sub
adc
jg
or
imul
pop
jg
icebp
(bad)
std
imul
adc
xchg
dec
in
xor
jne
cmp
je
mov
call
adc
jbe
dec
add
jae
mov
sub
dec
mov
push
inc
xchg
mov
adc
jne
and
add
cmps
fdivr
mov
adc
lods
or
xor
test
lds
xlat
pop
outs
inc
jge
and
es
shl
bound
xlat
movs
mov
pop
(bad)
cmp
mov
lods
mov
ja
pop
jmp
repz
xchg
test
xor
pop
jle
pop
sbb
cmc
sti
or
pop
arpl
call
push
sub
mov
push
or
lods
in
scas
push
aad
push
adc
sbb
aad
lea
neg
jle
mov
movs
int
fistp
ins
jo
(bad)
aad
adc
add
sbb
mov
movs
mov
in
jb
xchg
xchg
je
xchg
in
xor
pop
bound
mov
and
or
sub
inc
ret
out
cmp
pop
data16
aam
cmp
sub
pop
xor
mov
lock
sub
repnz
mov
jecxz
push
iret
stos
leave
into
(bad)
outs
cli
mov
das
jmp
aas
cmp
add
push
js
xlat
adc
fiadd
cmp
(bad)
loope
dec
inc
gs
repz
xor
dec
adc
cs
popf
fbstp
icebp
dec
call
in
or
xchg
mov
clc
push
mov
cdq
cmps
test
pop
fld
es
and
int3
sub
jno
and
mov
mov
popa
push
jle
xor
push
xlat
pop
add
movs
cmp
adc
adc
pop
movs
xor
clc
push
ror
ja
sbb
ins
push
icebp
hlt
jb
fsub
xor
into
mov
fnsave
cmp
fs
ficomp
inc
js
lds
stos
add
mov
cmp
cmps
cmps
dec
adc
jns
mov
xchg
in
call
jmp
xor
mov
hlt
loopne
and
pushf
imul
mov
push
adc
dec
enter
or
xor
mov
mov
adc
inc
jnp
and
sub
call
and
sti
mov
mov
xchg
into
int3
mov
inc
jmp
mov
pop
stc
mov
jge
mov
dec
cli
adc
mov
fcom
cmp
shl
pop
xor
fild
out
add
in
mov
adc
test
in
xchg
inc
and
punpckhwd
mov
pop
sbb
or
mov
out
stc
dec
inc
loope
pop
push
lahf
not
push
js
test
cld
cmp
clc
stos
xor
repz
mov
sbb
push
mov
mov
div
into
mov
mov
scas
inc
add
out
test
inc
xchg
aaa
je
sbb
clc
sar
(bad)
ret
repz
adc
sbb
movs
push
or
pop
pop
arpl
movs
or
mov
not
test
xchg
fs
push
or
push
xchg
jno
fcmove
adc
sbb
push
sbb
lahf
mov
mov
dec
pop
test
adc
and
enter
cmp
xchg
outs
push
mov
cmp
enter
jno
add
movs
xchg
cmp
bound
stc
pop
xchg
fwait
add
iret
lods
inc
pushf
adc
mov
jo
adc
into
pop
add
jnp
ins
outs
adc
and
add
push
adc
xchg
mov
pop
mov
jno
inc
mov
xlat
jns
lods
not
aam
cmp
jge
and
pop
fldcw
repnz
in
movs
pop
xchg
push
or
rcr
and
xor
icebp
sub
enter
adc
pop
adc
pop
sub
inc
and
pushf
cmps
mov
mov
add
and
adc
jns
scas
sbb
stos
mov
cdq
push
xchg
jecxz
call
ins
popf
pop
cld
jle
cmp
retf
jmp
pop
sub
inc
pop
xchg
or
jecxz
push
pop
lock
aaa
loope
fiadd
fcom
ret
push
xor
xchg
out
test
cvtps2pd
cmp
sub
into
fiadd
cmp
pop
(bad)
int3
sub
test
mov
retf
ins
mov
pop
aam
add
loope
mov
out
mov
dec
fs
int
aaa
ds
lahf
cwde
add
das
scas
inc
imul
jl
jg
cmp
xchg
push
xchg
pop
bnd
xchg
adc
mov
mov
shl
mov
push
xchg
cmps
iret
pop
mov
imul
stos
adc
mov
ja
mov
test
inc
mov
mov
pinsrw
loop
(bad)
fild
push
addr16
and
adc
jb
scas
(bad)
test
push
jg
lock
lods
jo
xor
lss
dec
or
call
shl
add
out
and
lock
push
xchg
or
les
dec
sti
sub
scas
shl
mov
scas
cli
mov
dec
test
fadd
movs
inc
into
js
shl
add
add
add
xor
not
lods
push
adc
mov
ror
inc
cs
and
add
retf
inc
xchg
push
(bad)
fistp
retf
xor
jp
pusha
jnp
dec
push
push
inc
xor
adc
xor
add
out
sub
lds
lock
jmp
or
jg
jnp
in
test
and
mov
or
test
rcl
and
jbe
cli
pop
mov
mov
dec
adc
dec
sbb
jge
jo
imul
or
addr16
sub
pop
sub
mov
daa
pop
mov
daa
ss
push
xor
aad
pop
out
push
inc
test
xor
les
int3
xor
inc
xchg
repnz
shl
push
je
imul
fidiv
mov
or
lock
(bad)
sub
daa
cmps
retf
adc
and
outs
mov
inc
jmp
sti
sbb
jl
outs
push
js
sbb
hlt
aad
test
add
in
or
push
in
pop
aad
add
push
iret
aas
mov
dec
dec
add
ds
inc
in
xor
mov
pop
push
inc
mov
mov
adc
stos
jl
cmps
push
push
sar
or
sti
adc
or
les
push
jp
lock
sbb
scas
mov
shl
sar
neg
dec
fs
rcr
cwde
add
mov
cmp
xor
mov
loope
xchg
sub
or
neg
shl
inc
cmp
daa
and
mov
stos
add
inc
xchg
shl
js
and
pop
mov
(bad)
lods
(bad)
test
mov
dec
pop
stc
xchg
popa
lahf
and
add
push
cmp
jle
lea
sub
shl
pop
movs
and
in
rcl
or
js
mov
pop
push
mov
add
lds
imul
les
dec
sub
movs
ds
pop
xchg
data16
adc
push
hlt
push
add
mov
adc
pop
sbb
sub
in
or
pop
or
add
dec
mov
xchg
aas
(bad)
lea
cld
sub
arpl
loop
jp
push
in
inc
mov
adc
jle
daa
cmp
shr
test
loope
stos
outs
sbb
push
add
test
xor
mov
in
xchg
jle
call
in
sar
das
xchg
sub
(bad)
xor
pop
fstp
loop
shl
cld
nop
sub
jp
jo
(bad)
mov
ret
in
shl
je
in
sahf
jg
out
(bad)
sbb
add
mov
ins
(bad)
jecxz
pop
in
call
cli
fdiv
pop
xchg
and
js
fcomp
test
lock
popf
inc
imul
mov
mov
or
inc
adc
xchg
cdq
sbb
add
jmp
repnz
nop
xchg
enter
push
ins
arpl
add
sub
sbb
aad
repz
jo
xor
je
cmp
or
jne
mov
clc
shl
xchg
dec
or
punpckhbw
sub
out
or
push
dec
cdq
push
pop
push
movs
xor
loope
fnstsw
fld
push
mov
jecxz
add
mov
mov
pusha
sub
jp
cmc
test
test
mov
out
push
mov
mov
xor
retf
aam
jecxz
repz
xlat
fnstenv
jb
xchg
retf
enter
sti
jns
lahf
cmp
jo
mov
mov
push
and
or
add
adc
cmp
cmp
(bad)
jo
hlt
lahf
add
das
test
enter
push
in
cs
loop
and
cli
jl
or
test
push
mov
jnp
dec
mov
retf
in
repz
daa
sbb
movs
xor
pop
mov
gs
push
mov
xor
imul
push
adc
or
and
test
xor
xor
add
and
push
sbb
(bad)
jmp
mov
out
pushf
dec
ja
lahf
mov
xor
stc
jmp
lds
add
adc
add
sar
popa
push
out
rcr
adc
inc
mov
mov
mov
sar
js
imul
inc
jmp
ss
loop
inc
dec
ret
adc
push
mov
xlat
fmul
sbb
push
and
out
(bad)
faddp
and
sub
xchg
pop
xlat
dec
or
mov
sbb
and
rol
adc
div
(bad)
push
es
adc
into
xchg
push
push
ja
aam
cdq
xchg
push
push
retf
jb
jbe
pop
repz
icebp
dec
icebp
push
dec
jne
sub
dec
lods
(bad)
cli
xlat
fndisi(8087
movs
nop
int3
ret
inc
mov
das
fcomp
sbb
ds
pop
jmp
test
enter
mov
arpl
fptan
mov
(bad)
push
pop
test
mov
enter
push
jno
(bad)
ret
add
sahf
in
xchg
push
jne
lods
shl
lea
ss
fld
mov
aad
outs
(bad)
loopne
test
xor
pop
test
imul
movs
sysexit
adc
stos
and
jle
lock
xchg
pushf
sbb
daa
stos
xor
popa
sub
sbb
pop
loopne
ret
lahf
ret
loop
das
retf
cmp
xor
test
lea
iret
arpl
out
cwde
sahf
add
fmul
fbstp
adc
mov
mov
mov
jecxz
xor
push
mov
mov
imul
cmp
call
scas
mov
lds
xchg
daa
xchg
aas
xchg
je
xchg
cmp
jno
hlt
fldenv
push
sbb
je
mov
dec
cmp
scas
icebp
push
mov
lahf
pop
cli
cmp
add
sbb
stos
hlt
loope
mov
push
shr
sub
(bad)
xor
leave
stc
and
jno
push
cmp
pop
push
cmp
movs
pop
aad
outs
(bad)
leave
mov
iret
cmp
rcl
lea
dec
mov
add
push
daa
cwde
or
stc
add
push
imul
xlat
add
xor
les
dec
sub
sbb
and
mov
cmp
mov
bound
lock
mov
pop
clc
and
imul
stos
aam
mov
loop
icebp
push
scas
inc
rcl
sub
lea
mov
scas
sbb
jbe
mov
add
jmp
mov
and
call
iret
cmp
repz
mov
clc
fwait
mov
cmp
lds
ret
ror
jns
adc
int
inc
mov
ds
push
adc
cdq
ss
mov
imul
mov
pop
mov
pop
jno
mov
xchg
loope
int3
int
ins
lods
sub
(bad)
daa
and
leave
dec
inc
daa
in
bound
test
cld
test
cli
adc
sahf
(bad)
test
or
outs
xchg
ror
and
in
jae
ret
mov
mov
inc
sbb
repz
lds
inc
and
(bad)
fisttp
fs
pop
ins
jle
in
lods
js
pushf
pusha
mov
sub
sub
sahf
mov
jae
(bad)
repnz
xchg
imul
add
jne
cmp
lods
sub
cmp
call
mov
adc
inc
retf
or
or
and
or
dec
dec
into
push
into
in
xchg
cmp
mov
add
loop
mov
jle
jb
iret
je
jae
push
ins
jnp
cs
cld
sbb
fsubr
sub
mov
cmps
int3
or
shl
and
sub
xchg
sbb
pop
mov
ror
cmc
sub
mov
(bad)
mov
push
or
adc
js
xlat
push
mov
mov
call
ss
enter
cwde
jmp
cmp
pop
frstor
daa
call
mov
ret
ss
push
sub
inc
shl
mov
mov
dec
in
cli
loopne
adc
jl
cmp
sahf
cmp
(bad)
pop
or
imul
and
test
cmp
push
lods
add
jae
inc
nop
cmp
mov
mov
aad
sub
mov
fwait
inc
movaps
(bad)
cmp
call
mov
leave
cmp
fdivr
(bad)
repnz
mov
loope
sub
cmps
cdq
push
in
stc
es
dec
lahf
jne
xor
les
push
lock
jecxz
and
in
mov
mov
int3
rcr
std
call
add
mov
xchg
fwait
jmp
dec
sub
sti
jmp
push
jmp
lods
fimul
imul
or
shr
cmps
and
bound
mov
xlat
xor
in
and
mov
mov
into
rol
pop
push
push
xchg
mov
scas
sbb
cmp
test
jle
jl
mov
loop
or
mov
sub
or
add
into
jno
cmp
sbb
sbb
pop
pop
and
call
ret
mov
rcl
popa
sbb
jnp
jno
add
pop
push
xlat
push
lahf
push
neg
pop
jb
(bad)
adc
test
jnp
adc
jb
movs
adc
mov
add
push
cmp
inc
sub
fdivr
mov
ds
cdq
cmp
sbb
mov
inc
xor
dec
fnstcw
dec
adc
jnp
xor
add
in
xchg
xlat
xor
retf
mov
imul
lea
js
inc
outs
sar
xor
out
push
xchg
cli
push
ret
pop
outs
cmp
sub
dec
cld
push
xor
div
test
fld
js
push
ins
sub
and
test
xlat
call
mov
in
scas
ror
imul
dec
mov
ret
xor
stos
addr16
push
add
pushf
je
retf
and
adc
dec
cmc
je
jmp
popa
mov
push
ret
das
add
ror
lods
scas
ret
mov
add
push
jno
jge
push
mov
ja
dec
mov
inc
and
pop
aad
push
fnstcw
inc
push
or
test
dec
jg
shl
sub
push
stc
push
pop
gs
and
cmp
inc
loope
in
sbb
pop
and
sti
arpl
mov
dec
fnstenv
cwde
stc
(bad)
dec
fistp
mov
in
adc
scas
std
adc
cmp
inc
out
sbb
cmc
aad
xchg
inc
dec
jl
lea
lock
sbb
stos
inc
dec
mov
lock
jo
rcr
jmp
xor
pop
mov
push
sbb
adc
movs
jmp
lds
push
sbb
aaa
popf
ror
call
repnz
loop
push
retf
add
pop
mov
jmp
mov
adc
or
jb
idiv
adc
jge
xchg
ins
jmp
dec
pop
pop
and
add
xchg
mul
fsubp
adc
pop
dec
lock
mov
dec
aas
hlt
(bad)
popa
sub
dec
mov
sti
cmps
xchg
push
pop
and
push
sar
mov
pop
jne
lods
add
lahf
test
test
lock
xor
pusha
sbb
cmp
retf
gs
cmp
or
fsubr
repz
jge
cmps
adc
call
cmp
push
scas
cmp
into
mov
movs
lods
hlt
jne
test
ret
or
mov
cli
xlat
jmp
std
sysexit
jmp
push
int
xor
ror
je
popf
push
out
pop
sbb
pusha
push
dec
repnz
mov
xchg
xlat
dec
sbb
pop
inc
ror
pop
push
sbb
cmp
push
ds
mov
lock
sub
inc
mov
mov
aas
outs
xor
js
push
nop
pop
in
adc
xchg
sub
mov
shr
xlat
fnstsw
mov
rcl
sbb
xor
pop
movs
test
cdq
push
test
jmp
pushf
xor
cld
out
clc
mov
xor
pop
cmps
xlat
shr
aad
arpl
ins
push
adc
xchg
out
cmp
(bad)
das
inc
std
sbb
mov
mov
retf
jbe
arpl
rcr
adc
test
cwde
imul
fsubr
mov
fbstp
stos
pusha
call
add
mov
fmul
inc
rcr
aad
lea
jmp
sub
es
adc
ins
mov
inc
mov
rcl
sub
sub
(bad)
mov
ret
cmps
pop
jge
into
stc
pop
(bad)
std
data16
ins
loopne
cmc
shl
lods
inc
int3
dec
push
push
pop
add
mov
sub
jno
call
je
jle
push
cwde
or
outs
(bad)
scas
pop
ror
rcl
cmc
push
jae
xchg
xor
imul
(bad)
push
es
test
jae
fist
iret
outs
(bad)
cli
scas
adc
cmp
sbb
call
jg
(bad)
aad
stc
out
jae
adc
jge
xlat
jle
pop
sbb
int
jbe
or
movs
shl
data16
sub
dec
jns
push
cmp
xor
fcmove
scas
call
push
push
scas
lods
ins
jp
out
es
cld
inc
jo
add
iret
mov
push
jmp
mov
and
xor
sbb
mov
inc
repnz
aaa
sbb
shr
mov
pop
je
in
sub
mov
cmp
xchg
in
shl
pop
inc
lahf
inc
sub
xor
je
mov
ds
mov
sbb
dec
jnp
in
xor
xchg
ins
mov
or
(bad)
into
das
sbb
mov
mov
pop
fcomip
inc
repnz
inc
add
sbb
mov
pop
mov
lods
add
dec
ins
imul
jb
inc
fdiv
mov
pusha
add
out
xlat
loopne
xlat
or
sbb
lea
in
jno
cdq
mov
cld
popf
cmp
mov
mov
jp
retf
mov
push
aaa
dec
fwait
push
call
mov
cli
lahf
das
mov
push
jno
and
mov
dec
ret
or
cmp
sti
push
sub
in
inc
sub
lea
cmp
es
out
pop
sbb
out
xchg
sbb
jp
ins
or
mov
sbb
jecxz
xchg
jmp
inc
xor
cdq
and
add
mov
movsx
add
pop
mov
and
mov
cmps
dec
retf
mov
(bad)
rcl
xor
xchg
jge
cmp
push
add
xchg
push
call
push
mov
int3
ja
dec
cmps
mov
mov
shr
ja
pop
mov
xchg
std
ins
mov
sahf
adc
dec
push
test
push
xchg
mov
inc
lock
in
rcr
jb
xlat
cmp
sub
push
xchg
xchg
jmp
dec
pop
outs
jnp
pop
mov
aam
mov
dec
out
inc
xchg
xchg
fwait
sub
mov
xor
ret
pushf
out
mov
jecxz
pmulhuw
addr16
cmp
mov
fs
scas
out
mov
xor
jp
mov
ror
std
test
xchg
cld
mov
and
outs
xchg
ins
xchg
push
jno
in
jl
cs
jne
mov
scas
mov
(bad)
loopne
(bad)
sti
jle
add
add
fsub
bound
mov
test
lea
aas
mov
jae
xor
sbb
dec
mov
jno
aaa
and
pop
adc
mov
inc
sahf
aaa
or
sub
xchg
jo
lods
jge
aas
data16
pop
jp
ss
dec
add
xchg
sub
jns
mov
aad
out
jg
xor
mov
out
jae
push
jl
pop
rol
sub
cmp
sbb
addr16
pop
inc
mov
mov
scas
xchg
call
sbb
call
fiadd
imul
mov
mov
(bad)
out
jo
sbb
cmp
rcr
(bad)
data16
adc
xchg
or
mov
pushf
pop
test
pop
int3
dec
mov
xchg
mov
aam
lods
mov
push
jb
jl
sub
call
cmp
jg
xchg
adc
pop
xor
jb
repnz
cs
mov
add
stos
mov
xor
test
movs
sahf
pop
mov
push
jns
ror
cdq
fdivr
aad
adc
in
pop
popa
sub
and
mov
cmp
mov
cmc
adc
ja
nop
jne
sbb
jg
imul
or
inc
sub
push
fsub
push
repz
and
scas
or
retf
test
inc
stos
fs
add
lods
inc
pop
dec
call
or
mov
shr
mov
sub
retf
in
mov
xchg
inc
daa
ins
mov
jg
inc
xchg
sbb
ror
stos
mov
or
and
aaa
data16
sar
inc
mov
shl
jnp
das
and
repz
aaa
sbb
js
mov
popf
xchg
jne
outs
mov
out
ror
fld
add
les
jbe
cmp
cmps
retf
pushf
sbb
adc
cmp
or
je
add
aam
icebp
mov
sub
mov
outs
jb
adc
inc
ins
icebp
call
stos
adc
scas
out
xor
es
dec
adc
fxch
out
and
out
cmp
dec
std
ss
adc
and
in
xor
retf
pop
call
push
popf
js
jmp
das
dec
sub
cmps
fs
xor
jno
mov
leave
xlat
dec
sbb
rsqrtps
enter
push
adc
push
and
test
retf
sahf
ret
push
adc
mov
les
outs
mov
addr16
push
xor
xor
add
mov
aas
ret
cmp
fnsavew
jecxz
fist
icebp
push
popa
xchg
fimul
xor
and
mov
xor
push
jo
ret
pop
fsubr
xor
xchg
test
pop
test
mov
xchg
jb
or
loope
shl
sti
sub
rol
cld
stos
mov
xchg
dec
add
rol
dec
popf
cmp
pusha
fs
ins
xchg
xchg
arpl
adc
mov
out
inc
(bad)
push
frstor
mov
pop
push
lock
outs
jl
mov
mov
in
inc
cmps
sub
inc
addr16
push
out
mov
sbb
sahf
mov
outs
adc
shl
sti
std
sbb
dec
dec
mov
bound
mov
inc
imul
test
xchg
scas
sub
jbe
inc
fisubr
pop
js
retf
cmp
mov
ret
int3
xor
cmp
fs
(bad)
mov
inc
popa
sub
aaa
push
xor
mov
sbb
(bad)
jmp
xchg
mov
lods
mov
(bad)
cmp
outs
inc
fs
sbb
movs
cli
scas
mov
mov
les
jnp
jb
dec
adc
out
into
cld
sbb
mov
xchg
stos
js
sub
mov
push
pop
sbb
test
pop
shl
jl
xor
leave
lock
sub
shl
shr
push
push
mov
jg
push
cli
or
adc
test
push
ret
inc
shl
pusha
mov
add
xor
ins
or
add
sbb
test
(bad)
pop
ins
mov
or
sar
in
or
jp
into
inc
xor
leave
jno
and
fld
stos
scas
cmp
add
dec
mov
push
out
call
mov
mov
cmp
jne
dec
sub
mov
push
xchg
sbb
daa
mov
mov
(bad)
in
mov
push
inc
inc
dec
fild
sti
push
mov
sub
xchg
mov
xor
cdq
fadd
lock
mov
pop
pop
lods
outs
fwait
jl
test
test
std
and
out
es
bound
not
cdq
fist
dec
in
sahf
into
cwde
mov
imul
fcmove
js
xor
mov
cmc
jnp
xor
push
js
out
movs
sti
push
adc
pusha
pop
inc
or
arpl
mov
cwde
test
sbb
les
in
jl
xchg
mov
outs
outs
pop
dec
hlt
ins
in
jecxz
mov
cmps
hlt
xchg
(bad)
sub
pusha
jg
push
cmp
not
rcl
mov
or
pop
dec
push
xchg
(bad)
mov
cmp
(bad)
ja
mov
popa
sbb
fistp
clc
lea
xchg
add
movs
cmc
mov
jbe
adc
fimul
mov
and
out
retf
mov
or
sbb
push
pop
jnp
jg
xor
pop
pusha
test
in
inc
pusha
mov
retf
adc
sub
test
lea
mov
test
shl
adc
daa
mov
test
pop
shl
push
or
in
push
push
mov
mov
sub
push
jmp
fwait
popa
pop
cmps
dec
mov
fwait
add
test
xor
loopne
outs
cdq
mov
mov
fisttp
ja
dec
xchg
test
xor
lods
dec
xor
cmp
mov
retf
jbe
cwde
xor
test
push
mov
pop
add
lods
cmp
adc
stos
jle
mov
(bad)
stos
adc
in
and
push
aad
xchg
ds
jo
jl
cmp
xor
xlat
fs
jne
jnp
(bad)
scas
ins
icebp
add
movs
jecxz
enter
adc
adc
mov
cmc
cmps
sub
in
ror
imul
add
jp
mov
mov
stos
sbb
pop
adc
xor
pop
cs
ss
mov
dec
(bad)
les
fs
or
mov
sbb
sbb
jo
mov
inc
push
aas
adc
pop
cdq
cwde
jmp
mov
js
cli
xchg
jno
popa
dec
dec
mov
sbb
or
daa
test
jecxz
sub
jb
add
or
jmp
adc
mov
xchg
mov
jmp
movs
push
jne
cmp
aad
push
in
data16
mov
(bad)
fdiv
ret
aaa
(bad)
xor
lahf
repnz
and
mov
mov
pop
imul
fwait
cmp
cmp
xor
fistp
ds
and
aam
dec
mov
das
aaa
pop
xor
shl
pop
mov
mov
dec
aad
clc
mov
mov
xchg
cld
pop
or
pop
(bad)
push
push
xor
push
loopne
ins
mov
(bad)
(bad)
inc
mov
mov
push
out
pop
inc
xchg
(bad)
jp
add
push
pop
and
and
retf
hlt
and
fldcw
xchg
mov
fmul
push
dec
into
movs
ficom
gs
and
mov
mov
call
sub
ins
ret
shl
mov
adc
jbe
scas
jmp
sub
xchg
stc
ror
xchg
adc
mov
outs
and
scas
jge
das
sahf
outs
jo
mov
jne
xchg
data16
xor
cdq
mov
or
mov
cmp
jbe
lds
movs
add
in
push
adc
fidivr
dec
or
pop
loop
test
cwde
inc
rcr
jge
mov
stos
xchg
push
loope
mov
adc
cmps
repnz
fst
push
neg
mov
das
repnz
fcom
push
out
dec
add
fwait
rcl
leave
shr
cmp
into
iret
stos
adc
icebp
jecxz
add
push
dec
lahf
jg
pop
js
das
and
aaa
imul
outs
mov
mov
mov
pop
push
out
shr
outs
sub
inc
fnstsw
mov
mov
pop
and
mov
cmp
xchg
repz
mov
(bad)
adc
pop
inc
ds
idiv
add
fcmovu
adc
mov
(bad)
push
or
bound
fmul
cmps
popf
movs
sbb
sar
test
out
call
push
xor
push
jmp
not
sbb
aas
and
fwait
and
outs
pusha
jno
fcmovnu
mov
ins
test
retf
pop
rcr
lods
into
jmp
xchg
mov
jecxz
add
jge
xchg
xchg
data16
ins
fmul
jmp
loop
sbb
(bad)
pop
out
test
ins
out
add
jle
jns
xchg
std
sub
sub
xchg
cli
scas
mov
lods
addr16
(bad)
(bad)
adc
jns
mov
xor
push
add
fild
add
das
stos
or
mov
inc
and
loopne
mov
push
ja
add
in
pusha
ficomp
aas
add
sub
div
pop
es
sub
ret
xchg
push
int
push
mov
pop
hlt
movs
inc
rcr
dec
int3
xchg
cmp
sar
push
adc
or
dec
dec
inc
stos
popf
cli
sbb
cld
rcr
adc
(bad)
pop
mov
mov
adc
sbb
or
fisttp
mov
adc
cmc
sub
lds
xor
mov
repz
fsub
in
mov
out
adc
inc
lea
mov
sbb
enter
inc
mov
(bad)
or
(bad)
and
cmp
enter
shl
in
fsubrp
push
mov
loopne
xchg
fist
mov
cmp
(bad)
sbb
jae
lods
fdivr
and
jo
sbb
(bad)
dec
mov
outs
in
cmp
inc
(bad)
pop
cmp
dec
or
int
cmp
xchg
add
jmp
addr16
clc
pop
test
mov
retf
stos
mov
sbb
test
mov
mov
jbe
pop
arpl
or
inc
(bad)
sbb
loopne
js
xchg
out
mov
scas
dec
scas
push
xchg
je
int3
imul
pop
or
lods
div
pop
or
sub
mov
mov
in
int
sbb
add
push
pushf
push
xchg
sahf
movs
popa
repnz
ret
lods
shl
stos
std
inc
leave
cmp
jae
inc
pop
stos
repz
int
gs
hlt
out
push
pop
mov
mov
add
or
sbb
dec
daa
imul
in
ja
hlt
sbb
ds
cs
add
dec
je
rol
test
inc
sahf
pop
jl
jmp
ret
fs
mov
push
mov
mov
retf
and
xchg
repnz
out
or
push
mov
fisub
sbb
pop
jl
(bad)
fwait
sub
pop
mov
les
nop
pop
call
loope
repnz
mov
ror
stc
dec
jle
loope
mov
comiss
stos
fsubr
push
out
bound
loop
outs
loope
push
cmp
mov
xchg
inc
ja
or
mov
(bad)
adc
bound
cld
dec
mov
and
nop
mov
or
ja
sahf
push
xchg
in
push
movs
or
popa
dec
xlat
mov
(bad)
jb
out
fisub
test
rol
and
inc
jl
leave
test
sub
xor
lock
inc
mov
dec
add
jmp
popf
out
cld
adc
shr
pop
push
pop
popf
xchg
adc
frstor
fmul
jecxz
test
repz
rcr
fisttp
stos
jge
jo
sbb
lahf
arpl
xchg
imul
enter
sbb
iret
ins
jb
cmp
cli
fdivr
pop
jns
pop
inc
add
cli
dec
dec
loop
xor
inc
aaa
test
ds
mov
adc
test
sahf
fdiv
or
cmps
xor
ins
fs
pop
into
call
xchg
ret
aaa
mov
out
call
and
mov
std
jle
sub
inc
push
rcr
jl
sbb
aam
sbb
adc
jge
mov
fld
sub
xor
retf
arpl
adc
lahf
sti
icebp
nop
repz
adc
adc
movs
repz
mov
adc
fs
(bad)
mov
or
cmp
loop
add
ins
imul
(bad)
or
or
mov
pop
in
popf
fwait
aaa
outs
dec
push
jb
jmp
mov
pop
sbb
pop
push
adc
sbb
inc
xlat
out
iret
leave
jmp
popa
repz
inc
pusha
jmp
dec
cdq
clc
jbe
fwait
rcl
xchg
push
loop
mov
or
and
aam
cmp
neg
rcl
arpl
dec
sti
mov
xchg
or
sahf
divps
in
data16
outs
shr
aam
xchg
dec
and
dec
and
xchg
adc
outs
pusha
add
loope
dec
daa
in
cs
push
imul
fiadd
adc
push
or
pop
push
sub
in
push
aaa
and
mov
lods
aas
iret
cmp
test
test
add
push
fbstp
ja
sbb
or
mov
xor
int3
mov
jg
scas
fs
mov
adc
in
sub
push
add
xchg
push
std
cld
jo
inc
push
movs
outs
add
cwde
sub
mov
mov
movs
mov
mov
sub
pop
mov
sub
inc
xchg
or
adc
call
jnp
xchg
into
xor
mov
mov
mov
sub
adc
inc
js
pushf
jmp
jecxz
push
popf
mov
enter
cmc
ins
add
sbb
pop
mov
int
xchg
mov
xchg
scas
sbb
or
dec
aad
test
push
test
or
jns
jmp
test
mov
jp
push
dec
sbb
cmps
shl
push
inc
cmp
out
fistp
jp
std
retf
aas
inc
outs
movs
xchg
outs
aam
cmps
aam
mov
cmps
jmp
inc
outs
cmps
push
ret
imul
inc
mov
push
jge
mov
sub
xor
fisub
in
lods
adc
pop
sub
mov
das
inc
adc
jo
aas
stos
mov
inc
in
gs
xchg
dec
sbb
or
cwde
pop
das
sbb
(bad)
sbb
aad
test
jns
inc
movs
rcr
add
push
out
mov
pop
fdiv
and
mov
xchg
aaa
dec
pop
pop
xor
push
sub
das
arpl
cdq
iret
pop
movs
call
pushf
sbb
cmps
popa
hlt
jo
(bad)
dec
jo
pop
inc
loop
or
cmps
jnp
(bad)
fistp
cmps
xchg
stos
retf
jecxz
sub
loope
shl
imul
pusha
(bad)
mov
cwde
push
xchg
or
(bad)
loopne
mov
sbb
jg
dec
lds
xor
cmp
cmps
loop
data16
jnp
jno
lods
cs
in
(bad)
icebp
movs
jmp
repnz
mov
jae
in
loope
out
mov
stos
mov
inc
adc
imul
pop
xchg
icebp
je
mov
push
popa
xchg
shl
sar
call
ss
add
outs
aas
(bad)
les
inc
repz
push
cmps
dec
dec
pushf
ror
push
test
call
hlt
push
sbb
sahf
fwait
xchg
test
ficom
sub
push
jle
xlat
xor
ds
mov
jge
popw
xchg
jne
mov
(bad)
sbb
jmp
adc
pop
test
jmp
data16
nop
scas
mov
mov
jmp
les
test
mov
inc
shr
stos
xchg
std
cmp
xlat
movs
xchg
scas
mov
sub
inc
pop
loope
xchg
adc
ret
(bad)
js
or
add
xchg
mov
dec
outs
std
into
sbb
fld
loop
outs
rcr
rol
push
sub
and
cmp
inc
shl
clc
and
adc
jge
aas
dec
sbb
jb
(bad)
push
mov
clc
jl
cmp
int3
inc
fstp
fcmovnu
xor
mov
js
xor
ret
mov
dec
iret
fmul
xchg
repz
rol
pop
enter
loopne
loopne
out
add
xchg
mov
mov
fucomi
mov
cmp
xchg
int3
pop
(bad)
in
push
mov
jmp
arpl
fidivr
mov
push
fwait
pop
mov
cmp
es
xchg
mov
jge
dec
std
imul
cmps
stos
xor
xchg
cmp
push
(bad)
push
nop
or
adc
sbb
das
lods
inc
push
jl
xor
sub
jecxz
scas
or
add
adc
jge
jg
add
jno
push
adc
xlat
or
adc
je
pop
ds
mov
xchg
lds
mov
pop
mov
movs
test
lock
cmp
xchg
imul
jbe
enter
jns
pop
or
xchg
(bad)
and
mov
mov
(bad)
les
js
fs
dec
sbb
pop
jmp
int3
enter
push
jo
mov
dec
cmp
cmp
push
sbb
les
jge
mov
cmp
(bad)
aaa
in
(bad)
mov
jl
test
ror
ja
sbb
lock
inc
push
std
cld
mov
jns
out
mov
mov
lock
push
retf
jno
add
cld
push
jmp
add
add
jmp
aaa
lea
(bad)
jo
(bad)
mov
test
pop
nop
mov
fwait
stos
jmp
add
and
les
sub
or
xchg
jbe
in
jle
pop
push
aam
in
jecxz
cdq
jg
sahf
sar
dec
dec
dec
jne
cmps
in
mov
fldcw
in
xchg
retf
add
mov
jns
cmp
in
div
cmp
adc
in
mov
xor
lods
jmp
cdq
and
daa
in
mov
inc
pushf
sbb
push
jnp
mov
test
sub
xor
daa
ja
mov
mov
and
ss
retw
xor
mov
sub
js
shl
pop
test
sub
pop
ins
jp
in
xor
inc
sub
out
xor
inc
sub
iret
xchg
movs
xchg
mov
cmps
jge
imul
repnz
lods
xchg
xchg
inc
cmps
jnp
loope
jecxz
adc
dec
inc
adc
dec
in
cli
xchg
cdq
je
or
aaa
xor
arpl
nop
mov
lods
pop
pop
xchg
(bad)
xchg
jns
pop
dec
inc
mov
pop
jbe
jnp
xchg
fsub
add
cli
mov
dec
adc
enter
jno
pop
cmp
bnd
imul
arpl
and
sub
repnz
inc
fnstenv
xor
xor
push
mov
xor
cmp
sbb
and
pushf
pop
cmp
ja
xchg
push
out
repnz
data16
pusha
aaa
mov
std
fbstp
sahf
enter
cmps
repnz
mov
aad
xor
mov
and
mov
pop
adc
popf
cwde
mov
scas
xchg
dec
mov
rcl
and
add
in
sbb
sti
cmp
mov
jae
sub
jbe
inc
inc
bound
or
test
push
je
or
xchg
in
call
push
pop
repz
ins
(bad)
nop
inc
push
mov
bound
js
mov
mov
jmp
jns
mov
lods
mov
movs
repz
cmp
adc
adc
nop
retf
dec
(bad)
fdiv
(bad)
ret
or
cli
push
pusha
inc
dec
ror
test
call
loope
mov
aaa
je
add
mov
or
ss
cmps
sbb
in
jo
xchg
inc
mov
popa
out
mov
aaa
popf
(bad)
xchg
adc
xchg
repnz
sbb
jbe
test
hlt
loopne
(bad)
out
addr16
outs
ror
sub
and
stos
les
mov
popf
add
std
or
jb
dec
push
mov
retf
jnp
add
sub
out
(bad)
hlt
or
aad
scas
push
pop
lahf
cmp
cmp
test
out
aam
stos
fdiv
xchg
inc
mov
xchg
xor
ret
pop
in
popa
mov
sbb
mov
(bad)
sbb
mov
or
pop
and
test
mov
mov
dec
mov
and
cmp
into
add
pusha
out
mov
or
jge
stc
sbb
and
adc
(bad)
ja
and
push
push
out
in
pop
mov
loopne
cli
(bad)
mov
repz
pushf
push
mov
adc
cmp
vpmulhw
push
cmp
scas
daa
or
xor
inc
xchg
xor
push
xchg
pop
rol
imul
cmp
jne
mov
and
(bad)
fild
push
dec
dec
cmp
add
cmps
xlat
dec
not
push
adc
cmp
dec
push
jae
scas
(bad)
sbb
aas
pop
pusha
shr
ja
mov
pop
repnz
jl
mov
mov
mov
dec
pop
push
sbb
(bad)
mov
enter
ja
nop
mov
lock
add
icebp
jb
into
sbb
mov
loopne
(bad)
mov
aaa
aas
test
push
imul
fld1
mov
push
inc
mov
mov
ret
sub
pop
into
out
xor
outs
push
xchg
pop
push
scas
int
push
cmp
mov
shl
push
(bad)
ins
mov
or
xchg
cli
imul
fndisi(8087
xor
jae
mov
and
scas
retf
add
dec
mov
pop
out
sar
xchg
add
xchg
fucom
shl
jo
mov
and
jle
daa
xchg
cdq
fsubr
add
(bad)
stos
fstp
adc
sub
repnz
mov
mov
mov
imul
out
pop
test
xchg
push
mov
out
jns
std
test
repnz
cli
cmp
fmul
xchg
jp
cmps
dec
sbb
fnsave
pop
push
loope
mov
xchg
outs
and
(bad)
fnstcw
fdiv
shl
(bad)
dec
add
mov
and
cmp
inc
les
ret
and
xchg
inc
mov
inc
frstor
or
addr16
ins
dec
fs
cmc
cmp
das
ds
psrad
into
mov
xchg
ins
fmulp
fisttp
dec
dec
retf
loopne
sar
or
jp
ja
jp
jno
mov
sahf
push
into
inc
(bad)
dec
jne
mov
push
jnp
pop
xor
or
lods
cmp
add
popa
(bad)
aas
xchg
retf
movs
stos
lock
fdivr
movs
(bad)
or
jmp
adc
fnstcw
and
shr
mov
mov
in
mov
mov
or
and
and
push
rcr
inc
inc
(bad)
xlat
cmps
mov
inc
test
mov
sub
pop
xor
out
mov
jmp
and
xor
push
or
mov
aam
leave
out
fstp
inc
popa
(bad)
test
mov
lea
sub
int
or
gs
(bad)
fldpi
mov
cs
cwde
sti
(bad)
and
jo
test
push
jo
cmps
mov
xchg
cmc
mov
mov
mov
das
xor
pop
cli
sbb
retf
aad
retf
fcmovu
dec
jae
outs
jg
and
cdq
dec
mov
std
lahf
push
mov
fmulp
rol
adc
mov
pop
outs
cs
imul
sub
aam
add
cdq
mov
frstor
and
or
clc
and
inc
xchg
ja
jbe
in
cmps
mov
test
std
movs
int3
test
cli
push
out
adc
call
movs
push
jo
repz
ss
jae
stc
ins
stc
and
push
std
pop
or
movs
and
or
call
inc
repnz
xor
mov
sbb
leave
dec
xor
adc
and
add
xchg
out
mov
stos
and
cmps
pop
cmp
sub
popa
(bad)
sar
hlt
mov
jae
je
repz
sar
repnz
mov
dec
add
and
rcl
dec
fwait
outs
xchg
imul
or
bound
call
ja
push
ret
adc
dec
psubq
add
(bad)
outs
loope
pop
mov
stos
pop
push
mov
sub
scas
out
shr
fnstcw
cmp
daa
lock
or
pop
mov
mov
mov
shr
xchg
ror
mov
loopne
dec
jg
stos
xchg
and
mov
nop
pop
push
arpl
int
pop
push
adc
in
(bad)
(bad)
stos
mov
movs
xchg
push
sub
popa
jae
xchg
jnp
loopne
dec
dec
cmp
mov
or
(bad)
xchg
cmp
add
mov
mov
adc
ds
dec
rol
add
in
or
(bad)
and
add
hlt
push
pop
cli
xacquire
sbb
scas
mov
xor
cmp
sbb
push
push
stos
push
mov
(bad)
lock
dec
je
mov
inc
push
pop
popf
mov
lahf
xchg
xchg
cmp
dec
mov
push
push
test
jns
nop
mov
xchg
(bad)
outs
int
std
add
or
add
push
call
mov
jbe
call
stos
jg
dec
ret
loope
xlat
js
fs
push
std
out
add
jno
xor
adc
pop
xchg
mov
sub
or
push
inc
cmp
dec
loopne
fidiv
dec
or
retf
jns
rcr
push
dec
sahf
ss
in
mov
test
xchg
test
xor
and
jns
inc
add
fild
ins
pop
jge
ds
sbb
adc
out
mov
fsubp
loopne
inc
lods
out
hlt
div
jmp
cmp
xchg
xor
stos
mov
fst
inc
rol
inc
xor
adc
xchg
jno
push
int
scas
(bad)
and
ins
mov
xchg
adc
adc
aam
popf
add
les
hlt
mov
mov
xchg
aaa
mov
jmp
inc
enter
cmp
jno
cmp
call
scas
(bad)
div
in
jno
push
xchg
dec
test
pop
pushf
aam
cmp
jo
lock
push
cli
dec
sbb
mov
stos
aad
ja
xchg
iret
fild
test
fincstp
imul
cmps
jmp
xor
loopne
cmp
mov
dec
cli
pop
cmp
dec
pop
and
pop
cmp
fwait
outs
inc
outs
loop
ja
adc
mov
xor
adc
aas
sbb
pop
jecxz
push
jle
imul
clc
inc
clc
out
adc
jae
cmps
or
fsubr
cmc
xchg
cwde
lea
cli
jno
retf
cli
cmp
and
fdiv
dec
ret
inc
pop
mov
es
(bad)
cvttps2pi
mov
cli
(bad)
jge
xchg
xchg
aam
xlat
and
cmp
ret
jge
popa
xor
ss
sbb
pop
cmovge
cmovo
jge
inc
lds
and
in
imul
adc
dec
outs
jnp
inc
mul
nop
clc
sar
xor
les
sub
sti
add
xchg
push
xor
cmp
xchg
fist
ins
(bad)
or
clc
push
and
mov
stos
enter
mov
sahf
in
and
stos
inc
aam
fdivr
(bad)
xchg
(bad)
cdq
mov
gs
fadd
popf
jno
push
push
in
int
cdq
inc
pop
xor
retf
mov
jmp
or
retf
mov
sbb
cmp
xor
adc
sbb
pusha
loopne
push
push
sbb
push
dec
pop
daa
pop
sar
push
nop
mov
add
neg
add
cmp
push
pop
nop
push
pop
xchg
adc
mov
dec
push
mov
sub
cmp
test
out
sbb
(bad)
mov
dec
add
lods
pop
ftst
jmp
jmp
in
cmp
cmp
mov
rcr
mov
imul
and
cmp
gs
stos
cwde
(bad)
fcmovnbe
jno
popf
loopne
xchg
sbb
test
dec
sub
xchg
rcr
(bad)
xchg
mov
daa
push
mov
js
pop
lods
inc
mov
mov
pop
add
scas
inc
aas
stc
jecxz
call
lods
call
outs
and
or
xchg
ret
cmp
push
lods
xor
cs
(bad)
pop
bound
rcl
lock
shl
xlat
push
inc
pop
add
std
hlt
lods
into
jmp
fsub
outs
loopne
mov
pop
(bad)
in
push
add
std
pop
adc
push
ins
jcxz
cs
aaa
push
cld
cmp
pop
out
sub
inc
xchg
dec
pop
mov
shr
and
int
mov
cmp
lea
dec
bound
sbb
add
sbb
sub
pop
push
jmp
cmp
xchg
cmps
and
mov
mov
repz
xchg
adc
sub
int3
fsubr
mov
les
aas
repnz
jp
into
or
cmp
retf
into
out
sbb
inc
outs
xor
cmc
xor
repz
mov
add
test
pop
sbb
pop
mov
sub
and
pop
sbb
pop
sub
cs
call
adc
inc
dec
xor
repz
push
add
cmps
pop
ja
inc
es
push
in
movs
jno
dec
js
cmp
ja
loopne
call
mov
mov
xchg
into
fs
repz
mov
mov
pop
mov
pop
mov
push
outs
mov
mov
push
cmp
adc
dec
(bad)
movs
popf
mov
mov
call
test
les
pop
pop
int3
ins
push
fdivr
call
stc
ficom
into
loope
xchg
pusha
and
jne
shl
(bad)
xchg
inc
in
cmps
es
xor
loopne
loopne
pop
lds
pusha
push
test
fistp
and
(bad)
mov
add
add
inc
sub
shl
pop
or
jo
and
scas
sub
mov
data16
dec
fcomp
sub
lods
mov
icebp
jae
pop
pop
mov
inc
call
rep
and
push
xchg
or
and
cmp
jp
jo
or
jmp
es
out
es
jne
jmp
(bad)
mov
cmp
xlat
js
push
sbb
push
int3
pop
imul
mov
aas
ret
mov
xchg
inc
test
sub
shl
sbb
add
mov
je
dec
aas
ss
stc
pop
or
pop
xor
int3
dec
ja
pop
push
in
cmps
rcr
xor
sub
pop
push
cmp
nop
and
call
retf
jle
test
push
stc
in
push
xor
das
pop
xchg
xchg
xchg
mov
mov
jno
imul
push
mov
leave
sar
or
data16
mov
je
jmp
loope
(bad)
pop
adc
pop
mov
sbb
in
xchg
inc
mov
scas
lea
fwait
cmp
outs
(bad)
dec
jl
sar
dec
mov
lock
(bad)
cmp
push
leave
dec
mov
vpextrw
sub
mov
pop
sbb
xchg
jne
cdq
xchg
xchg
cmp
cmp
call
ss
mov
and
les
je
cmp
push
sub
xchg
sbb
shl
call
mov
xchg
rcl
push
bound
xor
in
cmp
adc
aas
xlat
call
sahf
in
fmul
neg
mov
es
add
pop
dec
pop
push
test
pop
clc
outs
sbb
jns
mov
popf
ret
push
xchg
push
sbb
add
and
pop
fld
in
cmps
push
jne
xor
xor
test
mov
fld
outs
leave
dec
and
xor
test
popf
push
(bad)
cli
inc
mov
jb
call
movs
rcl
jl
lods
inc
mov
cmp
sbb
aad
pop
js
movs
dec
push
xchg
dec
push
push
aaa
add
mov
cmp
push
push
movs
mov
adc
call
jae
sar
jg
adc
lahf
push
div
loopne
or
or
stos
in
push
mov
arpl
fs
push
jae
and
xchg
xor
loope
jmp
in
cmp
push
fs
and
shr
out
imul
push
int
jbe
out
js
fsubr
cli
mov
lock
ja
test
inc
cmp
ins
loope
mov
cmps
js
fadd
lods
addr16
pop
mov
xchg
or
repnz
dec
mov
popf
cmp
add
aaa
add
pop
aam
out
cmp
xchg
fisttp
or
pop
cmc
(bad)
xchg
ins
push
aaa
aaa
xchg
or
lea
js
fld
cli
inc
inc
les
in
mov
jge
mov
lock
pop
and
in
pop
repz
xlat
cmps
fisttp
ss
mov
out
push
test
loope
push
mov
call
outs
sbb
popa
mov
inc
outs
js
jmp
cmp
xor
jge
pop
(bad)
jmp
xchg
xlat
arpl
mov
and
ror
lods
dec
scas
cmps
mov
mov
jge
je
inc
push
cdq
dec
fdivr
es
pusha
cmp
mov
adc
adc
cmp
and
dec
ret
sti
inc
dec
es
sub
add
xchg
rol
outs
push
cmp
pop
inc
ret
fsubr
inc
sbb
scas
jge
fst
mov
fwait
mov
xor
or
cmp
mov
fild
mov
or
addr16
outs
push
pop
sysenter
inc
pop
mov
inc
stos
xchg
ja
jmp
adc
dec
add
jbe
lds
jle
and
xchg
inc
into
repnz
dec
push
mov
sbb
fs
imul
test
and
sub
std
mov
dec
inc
jnp
sahf
repnz
