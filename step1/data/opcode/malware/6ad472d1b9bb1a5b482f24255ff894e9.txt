jne
add
add
add
add
sub
inc
icebp
fwait
sub
mov
mov
lea
rcr
(bad)
and
and
sub
iret
lds
push
sub
pop
and
sbb
stc
pop
ins
aas
jns
xchg
data16
xor
add
push
in
sbb
popf
test
pushf
and
mov
cmp
ins
mov
imul
mov
and
mov
mov
mov
xor
aas
mov
xchg
lock
pop
jmp
mov
mov
scas
cli
lea
ret
inc
pushf
bound
sub
dec
enter
shr
jb
std
add
stos
sub
cs
and
xor
int
mov
jns
adc
add
out
je
sub
pop
pop
dec
push
iret
pusha
in
in
hlt
push
or
enter
xor
add
in
movs
pusha
das
jno
xchg
retf
mov
pop
(bad)
xor
mov
push
out
je
pop
mov
jle
xchg
scas
fucomip
daa
jg
outs
push
les
push
add
pop
int3
mov
adc
fldcw
mov
inc
push
cs
je
add
and
out
mov
(bad)
pop
add
gs
xchg
jecxz
jecxz
(bad)
and
pop
rol
imul
leave
and
mov
repz
inc
sub
mov
xchg
dec
cmp
and
xor
ror
scas
or
fistp
cmp
fst
fldcw
xchg
fimul
call
mov
(bad)
xor
mov
sbb
add
push
ret
imul
adc
in
push
adc
leave
push
cwde
mov
xor
add
lds
cwde
mov
jo
imul
rcr
pop
imul
cwde
cli
mov
and
fisttp
cmp
mov
cmps
stos
push
ret
mov
shl
mov
dec
mov
pop
mov
pop
call
das
push
ss
jns
xlat
js
jne
dec
adc
xchg
and
fnstcw
jnp
push
push
das
xchg
outs
mov
cmp
cli
pusha
add
xor
mov
adc
retf
addr16
inc
popf
dec
pop
dec
jge
add
add
pop
ss
xchg
je
xor
inc
and
push
cld
lock
push
mov
push
retf
les
popf
xor
or
es
call
pop
inc
fdivr
push
pop
sub
(bad)
out
out
jmp
jbe
fst
xchg
dec
retf
xor
add
shr
and
fwait
int
and
sbb
add
add
push
and
xor
ficom
cli
ins
adc
cmp
in
popf
pushf
mov
ret
add
dec
sub
sahf
das
repnz
push
inc
cmp
push
push
or
es
and
jge
loop
jl
pusha
mov
jp
cld
lods
sbb
xchg
rcl
jmp
inc
pop
outs
jo
mul
fcom
jo
(bad)
iret
lods
jne
fnstsw
mov
fcmovb
ds
in
shl
mov
sar
(bad)
mov
mov
push
jne
ins
cmp
inc
clc
xchg
shl
ins
sti
shl
pop
out
adc
dec
or
push
sbb
jle
add
sbb
and
stos
inc
ds
ins
in
imul
push
cld
xchg
call
pop
(bad)
hlt
cmps
out
popf
mov
fisttp
jmp
jo
out
mov
pop
inc
ss
cwde
cmp
retf
and
cmps
ins
mov
sub
mov
push
mov
stc
or
adc
inc
xor
mov
cmp
arpl
add
pop
stc
jp
add
push
sti
mov
pushf
mov
sbb
out
xor
iret
jp
ins
sbb
hlt
add
imul
add
mov
mov
pop
sub
cmps
inc
inc
sub
loop
jnp
inc
mov
push
push
jo
xor
sar
into
pop
movs
push
sahf
pop
xchg
in
push
push
push
add
ins
xchg
xchg
call
sub
push
popf
mov
fild
push
outs
and
movs
(bad)
sub
pop
psubd
jb
adc
pop
inc
popa
lock
and
jo
adc
jl
cdq
jecxz
pop
je
lea
shl
xor
mov
fcmovb
mov
sub
or
imul
sub
sub
out
out
and
inc
sbb
lods
mov
mov
psubsb
xor
lods
xor
pop
and
(bad)
push
in
int3
dec
into
cmp
daa
lahf
mov
int
mov
or
push
retf
mov
scas
dec
jmp
push
into
daa
push
fnstenv
repnz
stos
dec
fimul
add
mov
test
cmp
mov
sti
push
pop
push
adc
add
push
fidivr
xchg
out
jmp
clc
mov
xchg
inc
arpl
in
rol
daa
jg
add
arpl
cwde
ins
jbe
cmp
fs
push
imul
jge
out
rcl
pop
mov
outs
aam
repz
push
jge
lods
pop
daa
cs
fcos
retf
retf
fisub
mov
jbe
jle
add
lods
call
clc
lahf
xlat
or
push
(bad)
jbe
inc
je
pop
cli
sub
test
lds
mov
xlat
mov
adc
and
and
repnz
icebp
imul
or
outs
jmp
cmp
mov
cmp
loop
test
xchg
lods
dec
and
pop
invd
test
leave
movs
mov
cmc
inc
jns
inc
dec
add
and
sar
aad
test
push
sub
pop
in
(bad)
outs
inc
add
scas
gs
dec
rcl
leave
jno
jecxz
test
es
push
cmps
rcr
retf
add
icebp
and
sbb
lahf
inc
nop
jmp
sbb
mov
xchg
push
mov
cli
and
xor
pop
jecxz
ficom
sbb
cld
fcomi
jbe
and
pushf
ja
add
sahf
les
rol
pop
cdq
pushf
int3
push
inc
mov
or
pushf
xchg
jmp
jmp
or
nop
fistp
lahf
pop
jmp
and
fimul
jno
es
push
imul
js
xchg
stos
movs
out
mov
and
jb
mov
stos
xor
sub
sub
push
out
(bad)
jns
push
jmp
repnz
xor
xor
out
call
xor
xchg
adc
shl
scas
add
cmps
mov
mov
ins
add
xor
dec
test
pop
sti
lahf
and
in
ins
jle
adc
mov
outs
jns
fist
sub
or
out
push
call
pushf
stos
cmps
mov
pushf
sub
mov
inc
add
es
lods
test
lea
rol
mov
leave
cmps
adc
fucomip
arpl
(bad)
ror
test
sbb
ds
sar
adc
inc
and
mov
fst
int
add
(bad)
scas
jg
pop
call
adc
sbb
mov
sub
cli
jmp
cmp
mov
fld
jmp
ds
fs
jbe
xchg
or
adc
pop
xor
arpl
imul
or
aad
pop
xor
sahf
fimul
movs
push
call
and
push
cdq
(bad)
lea
cmp
sub
std
fwait
iret
loopne
mov
jnp
xor
sbb
xchg
cmp
outs
mov
dec
std
(bad)
ret
data16
jns
xchg
sbb
fsubr
sbb
pop
(bad)
pop
push
jb
call
loopne
in
and
inc
sbb
ja
pop
ins
push
sar
int
ja
in
mov
hlt
dec
mov
test
dec
adc
mov
jg
imul
and
mov
sub
push
inc
sbb
xor
mov
std
inc
adc
cld
mov
and
int3
mov
jno
int
mov
jmp
dec
ja
cmp
mov
shl
cs
sub
cmp
mov
clc
xchg
shl
mov
sar
add
add
mov
dec
out
add
adc
pop
(bad)
mov
lea
outs
dec
or
outs
dec
test
xchg
fisttp
fdivr
stc
push
xor
je
and
mov
cli
neg
leave
adc
mov
nop
push
popa
push
rcl
jl
scas
scas
inc
fnstsw
popf
daa
cmp
inc
mov
inc
frstor
lahf
xor
shr
cmp
push
jnp
push
xor
xchg
loope
out
lahf
out
or
fwait
sahf
pop
fild
shl
pop
adc
loopne
jl
fwait
fwait
add
rcl
adc
cmp
rol
push
stos
hlt
push
sub
jmp
pop
or
aaa
cmps
loopne
fsubr
push
inc
fdiv
pop
inc
adc
xchg
add
and
pop
jp
mov
add
mov
sub
jmp
dec
clc
cmps
mov
add
push
push
dec
int
pushf
cmp
sbb
icebp
pop
xchg
sbb
stos
dec
or
add
xchg
mov
stos
jmp
mov
add
pop
dec
(bad)
pop
push
mov
push
retf
mov
mov
dec
mov
es
mov
nop
les
stc
fistp
add
cmc
test
mov
sbb
push
inc
xchg
test
std
inc
fs
jae
xor
std
jmp
call
push
dec
push
mov
cmps
jle
sub
and
sub
in
out
stos
push
pusha
stc
test
rol
pushf
or
inc
cli
xor
lea
jno
loope
(bad)
fbstp
out
jmp
scas
or
adc
push
fidivr
sbb
push
fnstenv
xchg
add
jle
xor
sar
test
aad
iret
inc
scas
shr
jae
dec
out
movs
scas
mov
or
repz
ss
add
ficom
pusha
push
push
ins
jne
ror
or
(bad)
push
dec
arpl
sbb
les
(bad)
mov
sub
inc
push
jg
out
xor
jb
cmp
dec
inc
repz
std
mov
ret
dec
jg
sub
sub
fdivr
ins
push
movs
pop
or
repz
rcr
push
mov
dec
in
int
ret
add
imul
sub
pop
scas
sbb
imul
mov
addr16
lahf
leave
xchg
shr
mov
cli
jo
mov
movs
out
pop
fwait
enter
add
(bad)
dec
cmps
cdq
and
data16
cmp
push
shr
jle
sar
sub
mov
mov
fwait
sbb
inc
dec
movs
leave
js
bound
mov
adc
adc
mov
cmp
cs
add
jg
mov
or
ror
pop
das
inc
and
loop
(bad)
or
inc
ins
(bad)
fdivr
leave
xchg
push
outs
sbb
movs
pop
cmp
fbstp
xchg
add
pop
popa
xor
jnp
lahf
and
pop
ins
mov
shr
xchg
rcl
es
fimul
mov
cmc
das
mov
mov
xor
jns
aam
inc
lods
push
(bad)
sar
in
vgf2p8mulb
xchg
mov
xchg
mov
bound
xchg
in
les
leave
test
lock
push
int3
jnp
imul
inc
(bad)
repnz
loopne
jmp
inc
sub
mov
mov
jb
das
jnp
mov
mov
fiadd
mov
(bad)
shl
push
into
pusha
push
cmp
stos
xchg
mov
clc
scas
inc
xor
push
mul
adc
scas
aad
stos
(bad)
cmc
jp
fsubr
and
cmp
add
nop
bound
dec
shl
push
fld
xchg
add
pop
sub
fadd
jge
jmp
aam
cs
adc
jecxz
jne
pushf
std
gs
add
ja
xor
ja
jnp
sbb
clc
fs
retf
xor
push
in
jle
push
ret
xchg
adc
in
sub
inc
lahf
pusha
or
xor
hlt
sbb
and
out
dec
out
mov
cmp
test
loope
or
pop
test
out
aad
dec
int
xchg
or
(bad)
loop
jge
movs
jns
fcomip
pop
test
and
dec
mov
jmp
cs
pop
test
jg
adc
cdq
mov
not
mov
shl
in
(bad)
icebp
cmp
adc
lods
pop
lea
cld
adc
cmp
xchg
pop
sbb
sub
mov
push
push
sub
(bad)
xor
test
and
pop
and
lods
in
test
fldenv
fild
pop
dec
xchg
cli
clc
sbb
mov
cmp
jp
sub
or
in
mov
call
scas
inc
jecxz
fadd
mov
popf
mov
sti
xchg
ficom
bound
mov
xor
imul
movs
push
or
fist
mov
loop
aam
cmp
xchg
inc
adc
lods
inc
je
std
cmp
dec
xchg
and
jno
icebp
ins
lods
stos
das
dec
xchg
mov
pop
mov
daa
or
cwde
mov
xchg
push
movs
idiv
and
int3
mov
cli
mov
popf
(bad)
lods
jmp
jo
loopne
(bad)
and
lea
(bad)
push
outs
push
aas
outs
mov
fisttp
adc
scas
jl
mov
and
sbb
je
add
sar
xor
test
mov
std
and
cmp
xor
sahf
lods
jo
pop
arpl
push
lock
rol
or
mov
mov
adc
cld
inc
adc
adc
mov
and
call
push
jecxz
sbb
mov
(bad)
jecxz
jno
jge
retf
(bad)
sub
or
pushf
jmp
push
repnz
push
add
or
mov
xor
pop
data16
dec
sbb
and
sbb
xor
test
movs
and
and
dec
dec
leave
lods
test
or
ret
sbb
lds
sbb
dec
(bad)
cmp
and
cwde
scas
pop
mov
mov
rol
cld
pusha
in
jbe
ror
dec
fnstsw
jo
and
inc
push
mov
pop
xchg
ins
into
fnstsw
fucomip
and
mov
aas
push
xchg
mov
xchg
imul
fiadd
and
mov
pop
cs
test
loope
dec
mov
ss
mov
mov
push
mov
dec
cs
inc
outs
push
xchg
fimul
outs
out
xchg
in
add
pop
or
mov
adc
or
pop
cmps
jecxz
mov
aam
fnstenv
or
imul
arpl
pop
xor
test
add
int3
ret
jle
jb
jbe
xchg
cwde
push
dec
ror
lock
outs
aad
cmps
les
push
dec
mov
pop
(bad)
adc
je
and
jbe
les
push
out
imul
inc
cdq
add
jbe
dec
sahf
sub
repnz
cmp
xor
jp
push
mov
dec
lahf
dec
xchg
jne
inc
and
jmp
jns
adc
mov
jb
sbb
push
cmp
(bad)
mov
and
xchg
inc
or
jg
jnp
fidivr
jle
std
add
and
xor
xor
adc
(bad)
sbb
pop
pop
inc
jbe
ins
push
sub
hlt
inc
cmc
mov
cdq
in
mov
pop
sub
sbb
je
inc
stos
iret
sti
inc
ins
data16
adc
in
jne
inc
cli
test
dec
iret
mov
add
push
in
mov
jecxz
out
fld
sahf
xchg
adc
mov
scas
mov
and
cwde
jb
mov
iret
inc
out
mov
mov
in
and
mov
jmp
push
test
cmc
add
xchg
jnp
or
js
sub
jbe
inc
rol
jae
jbe
mov
sub
sub
aam
jb
in
cmp
and
dec
call
and
mov
and
or
xchg
not
and
int3
pop
je
push
fsubr
sbb
cdq
adc
jns
retf
adc
mov
sti
test
ror
cmps
rcr
inc
mov
adc
mov
jl
mov
out
jmp
jmp
xlat
sub
fstp
call
sub
dec
retf
mov
jae
and
cmp
xchg
call
loop
aam
mov
call
rcl
push
sar
ret
int
mov
addr16
mov
loop
cmp
cmps
pop
inc
arpl
jmp
push
shl
inc
xor
nop
or
scas
adc
in
cs
mov
retf
movs
mov
loop
push
loopne
ret
ja
loopne
cmc
and
shr
int
int
out
int3
mov
xchg
mov
(bad)
out
into
addr16
call
jne
mov
xor
pop
mov
jmp
cmp
xchg
lds
jmp
ret
bound
cmp
jl
inc
cmc
mov
sbb
pop
imul
dec
enter
mov
pop
out
aaa
nop
sub
pop
jns
sti
jle
popf
xchg
push
or
mov
cmc
cmp
pop
push
rcl
ret
pusha
sbb
popa
jg
pop
retf
mov
retf
test
adc
sahf
cmp
out
push
cmps
test
pop
xchg
(bad)
fidivr
sbb
pop
(bad)
xchg
jmp
sbb
xchg
jg
bound
enter
popa
cdq
lahf
sbb
cdq
cmp
mov
pop
bound
push
sbb
add
pusha
pop
rcr
and
push
sub
pop
pop
ret
repz
call
mov
int
xchg
inc
add
sti
int
dec
mov
or
xchg
push
test
xchg
fwait
sahf
jo
add
push
int3
cmp
adc
dec
ficomp
data16
mov
xor
mov
movs
push
dec
push
jecxz
add
adc
aad
pop
(bad)
jb
(bad)
jmp
cli
lock
leave
dec
push
mov
cmp
cdq
gs
mov
(bad)
in
in
push
sub
xor
lock
xchg
push
ins
cmp
adc
jae
mov
cmps
jmp
sbb
out
test
push
fwait
xor
imul
leave
mov
loop
into
push
in
fucomp
cmp
retf
mov
xchg
icebp
pop
jns
mov
jp
push
loope
adc
or
outs
adc
push
push
in
sahf
sbb
std
ds
lock
lds
outs
sbb
data16
out
dec
in
pop
call
lods
ja
iret
xlat
enter
dec
add
adc
xchg
fisub
jno
lods
(bad)
in
nop
mov
dec
or
push
mov
push
mov
or
jecxz
lahf
push
jbe
fwait
into
ds
clc
aam
pop
mov
arpl
out
fist
sbb
or
push
jle
jmp
mov
push
cli
lock
push
rcr
sti
sahf
cmp
adc
outs
fs
js
aad
imul
sub
pushf
and
mov
out
ja
icebp
aam
idiv
and
cmp
daa
or
out
lahf
cmp
xor
dec
movs
push
cmc
lds
call
mov
mov
and
shr
cmps
xlat
ds
iret
jmp
fcmovu
mov
jns
mov
gs
xor
(bad)
rol
and
mov
fcmovnu
or
test
(bad)
shl
jmp
scas
xor
dec
and
adc
push
cs
push
pop
cmp
scas
sti
mov
push
cmp
jo
jge
call
ror
cld
jmp
xor
xor
call
ret
add
fst
jg
push
ja
and
push
mov
data16
pop
push
scas
dec
scas
xchg
mov
mov
sbb
push
mov
jge
out
push
mov
lahf
xor
into
sbb
add
fnstsw
adc
xchg
in
shl
repz
cmp
std
nop
mov
jns
mov
js
and
shl
push
mov
std
ret
(bad)
in
ins
pop
mov
add
sbb
(bad)
cmp
test
ins
fsub
push
sbb
mov
pop
aam
in
sbb
mov
stos
sub
xchg
xchg
das
ret
inc
mov
pop
dec
out
mov
jmp
movs
xchg
mov
jmp
xlat
bsr
mov
dec
cmp
retf
push
dec
(bad)
jmp
mov
stc
mov
sub
fiadd
mov
cmp
das
push
pop
push
in
adc
add
jne
xor
mov
outs
imul
les
imul
mov
adc
ins
xor
xchg
outs
rcl
jnp
push
div
hlt
sub
ror
jbe
fiadd
jns
outs
pop
add
call
jae
retf
xchg
and
cmp
jb
inc
mov
movs
pop
mov
inc
std
iret
mov
fisubr
neg
outs
pushf
dec
inc
loop
shl
loopne
push
out
test
movs
mov
push
push
sti
bound
jecxz
mov
adc
push
jle
fmul
cdq
jns
(bad)
retf
pop
sbb
mov
sub
sbb
(bad)
cmc
daa
xchg
fnstsw
push
cli
add
shl
(bad)
retf
xlat
dec
pusha
aas
movs
arpl
test
out
ud0
test
or
popf
aaa
aad
push
add
inc
mov
mov
sub
xor
mov
xlat
fst
cmp
fadd
and
fld
sbb
jne
mov
test
cmps
xor
mov
mov
cdq
in
adc
cmp
inc
(bad)
jge
aas
push
mov
mov
scas
test
push
jl
lock
rcl
cmps
jmp
sti
push
cdq
(bad)
sub
jg
mov
cld
dec
and
fnsave
(bad)
fcomp
inc
lahf
dec
fmul
ficomp
(bad)
popf
data16
sti
sbb
fst
cwde
or
mov
pop
adc
movs
jae
aas
pop
push
loop
je
sbb
scas
pop
pop
icebp
das
loopne
add
mov
lea
jno
jnp
xchg
clc
cmp
xor
sub
ins
cmp
xlat
(bad)
adc
sbb
inc
adc
push
mov
icebp
retf
les
mov
push
pop
es
in
pop
jbe
adc
imul
xor
ja
pop
pop
loope
pop
test
aam
cmc
and
mov
push
stc
(bad)
retf
or
cmps
pop
inc
xchg
call
popf
iret
push
ficom
shr
sbb
adc
adc
pop
cmps
iret
popa
nop
add
add
and
inc
je
movs
pop
dec
nop
outs
jge
xchg
mov
cmps
movs
je
call
sahf
hlt
jae
lock
ret
and
shr
jp
out
sub
dec
(bad)
jns
call
inc
adc
mov
sub
jmp
pop
mov
mov
lahf
dec
sbb
pusha
ins
sbb
pop
das
dec
lahf
aas
enter
cwde
dec
jle
pop
adc
in
loope
fdiv
test
fcom
mov
popa
sbb
add
sub
pop
mov
pop
jl
unpckhpd
adc
xchg
xchg
sbb
sub
(bad)
mov
(bad)
push
mov
scas
jne
addr16
pop
adc
add
inc
mov
or
mov
mov
les
sbb
sbb
xchg
push
jle
into
das
sbb
and
jnp
or
mov
add
xchg
add
pop
push
call
cmp
add
add
jb
jns
sti
test
push
les
mov
lods
cmps
gs
and
(bad)
lods
cld
cmp
bound
jns
jmp
cli
ins
xor
pop
or
jge
nop
test
push
jbe
iret
in
dec
mov
les
or
xchg
je
movs
cli
lahf
ds
sbb
xchg
std
adc
add
(bad)
lea
scas
icebp
mov
loopne
dec
out
xchg
mov
sahf
lods
in
daa
push
add
xchg
mov
(bad)
mov
rcr
cmc
mov
arpl
jp
frstor
jp
repz
mov
mov
mov
das
mov
retf
xor
sbb
push
mov
aam
sbb
push
shr
fmul
pop
lods
jmp
out
retf
pop
pop
or
nop
cmp
leave
in
xchg
ret
mov
ss
mov
mov
push
xchg
aad
xor
jl
add
ins
dec
sub
sbb
scas
mov
out
(bad)
cmp
cmps
mov
and
push
fst
imul
mov
jne
adc
dec
retf
stos
sub
pop
retf
pop
ins
and
jnp
in
xor
inc
(bad)
sar
push
adc
dec
shr
xlat
or
fnstcw
lds
pop
sbb
jb
clc
sub
mov
pop
pushf
retf
and
xor
jb
mov
movs
jae
jmp
leave
out
sub
pop
gs
std
fisub
xchg
jno
lahf
xchg
jg
mov
mov
add
add
mov
jb
loope
add
outs
popf
jns
es
pop
mov
jmp
cld
xchg
pop
or
(bad)
jnp
ret
(bad)
or
xchg
popf
or
sbb
cmp
(bad)
sti
mov
xlat
sbb
gs
xchg
rol
gs
je
pop
inc
lods
test
std
pusha
retf
push
xor
cmp
or
(bad)
idiv
neg
ins
pop
mov
(bad)
pushf
sbb
add
inc
push
jb
mov
cmp
adc
gs
adc
out
rcr
mov
lods
jge
mov
aaa
mov
inc
xor
pop
pop
xchg
clc
dec
mov
push
dec
push
mov
mov
mov
ffree
pop
xor
hlt
ja
pop
aaa
dec
xchg
jnp
mov
cmp
je
test
es
outs
and
jmp
inc
pop
pusha
adc
xor
aad
in
dec
or
aam
scas
scas
xchg
dec
test
or
fsubr
fucomi
stc
jns
pop
mov
sbb
std
mov
(bad)
inc
into
stos
movs
(bad)
and
sbb
pop
lds
xchg
push
pop
es
rol
pop
test
hlt
mov
inc
cli
test
sar
push
push
mov
xor
mov
push
inc
inc
outs
ins
jo
arpl
mov
mov
mov
xor
cmp
mov
xor
adc
cmc
dec
das
mov
and
add
push
loopne
sar
shr
add
cmp
std
cs
ins
sbb
push
jb
pop
cmps
xchg
not
xchg
inc
mov
push
test
and
(bad)
test
push
outs
mov
inc
std
sbb
imul
cmp
les
jb
mov
mov
jl
test
mov
bound
imul
jnp
push
mov
aaa
and
sub
in
in
enter
pop
int3
sbb
add
fiadd
rcr
mov
lahf
sub
inc
cmc
loope
cmp
and
popa
adc
mov
jle
addr16
add
push
loope
leave
loope
mov
add
jp
scas
enter
jmp
sbb
enter
daa
sbb
add
in
ror
int3
xor
xor
jae
or
scas
push
cmc
add
inc
jns
jb
mov
in
mov
add
xchg
jmp
iret
push
cmp
xchg
add
mov
xchg
mov
xor
pop
in
(bad)
fiadd
das
scas
or
and
xchg
pop
scas
test
cmp
mov
(bad)
dec
inc
je
push
inc
cdq
jbe
inc
push
test
push
jns
arpl
pushf
push
mov
jge
jb
xchg
push
loopne
sahf
dec
iret
lods
clc
jl
pop
cvttps2pi
loope
(bad)
push
dec
setg
sub
popa
sub
dec
mov
and
inc
out
scas
outs
adc
mov
daa
test
(bad)
jmp
xor
xor
fs
daa
cmps
fwait
mov
outs
(bad)
jp
mov
popa
scas
inc
add
cld
mov
outs
sbb
mov
ror
(bad)
mov
cmc
js
jae
push
mov
sbb
xchg
jo
cdq
jle
push
cmp
out
cdq
out
xchg
adc
(bad)
jns
stos
cmp
mov
pop
aam
lods
in
nop
mov
mov
inc
xchg
ins
dec
sahf
xchg
add
cmps
pop
imul
jmp
push
inc
add
repz
push
idiv
adc
arpl
push
mov
cmp
xchg
and
nop
popa
push
fistp
fwait
sbb
inc
aam
test
pop
cmp
xchg
cmps
dec
cmps
jg
dec
ins
cmp
push
inc
push
xor
(bad)
in
inc
inc
xchg
fisub
hlt
loope
jg
push
daa
dec
cs
test
jo
inc
and
cli
lods
cmp
repnz
data16
jo
and
stos
enter
sub
push
jbe
(bad)
mov
sbb
jae
cmp
xor
fwait
sbb
out
adc
ds
mov
dec
push
pop
sub
xchg
pop
ins
pop
cdq
mov
jns
xacquire
mov
sbb
dec
or
inc
addr16
and
mov
ins
cmp
sbb
or
pop
mov
jnp
push
pushf
(bad)
(bad)
aad
retf
js
dec
stc
mov
mov
sbb
cs
stos
and
ds
dec
or
out
stos
pop
pop
push
stos
mov
stc
push
into
xor
iret
push
jne
stos
push
out
inc
pop
jae
dec
popf
ret
jmp
or
or
jmp
mov
pop
stos
rcr
push
mov
push
stc
ins
sbb
jnp
enter
jae
mov
sub
pop
(bad)
push
pop
mov
sub
test
les
pop
cdq
fdivr
stos
adc
mov
ins
cmp
mov
or
idiv
jnp
scas
outs
cmp
sbb
icebp
test
mov
xlat
xor
es
sbb
mov
adc
pop
mov
cmp
mov
(bad)
repz
sbb
mov
sbb
mov
add
adc
sbb
adc
pop
ins
mov
ror
and
push
and
cmp
int3
rol
fmul
out
sti
ret
cmp
or
test
mov
add
out
adc
not
cmps
inc
sbb
mov
or
inc
jmp
push
add
and
mov
rcl
movs
in
fsub
(bad)
js
jne
test
bound
jecxz
andps
nop
sbb
clc
cmp
push
pop
imul
imul
repnz
in
cs
shl
les
int3
sbb
dec
pop
mov
dec
pop
dec
icebp
idiv
sub
push
(bad)
sub
neg
popf
inc
jae
sbb
cli
cmp
inc
arpl
retf
push
mov
pop
jae
(bad)
into
repz
scas
xor
cli
aad
mov
fistp
or
out
fsubp
fdivr
push
pop
shr
arpl
dec
shl
and
cmp
mov
test
lea
fs
dec
mov
test
xor
pop
shl
clc
sub
and
add
aas
call
add
cld
mov
mov
xor
mov
xchg
ins
test
sbb
loopne
pop
xor
mov
cmc
mov
pushf
and
sub
out
dec
mov
jmp
lds
int
mov
stc
popf
mov
add
mov
call
xor
dec
cmps
xor
sbb
fdivr
adc
jns
pop
inc
leave
jbe
dec
xchg
adc
or
push
out
lods
push
imul
jl
daa
imul
test
adc
mov
outs
jge
lahf
pop
out
push
pushf
pop
retf
arpl
repz
xlat
push
fisub
xor
dec
xchg
xchg
mov
push
mov
addr16
xor
add
pusha
sub
jmp
and
sub
jl
inc
mov
push
push
xor
loope
cmp
and
dec
xor
gs
jge
add
sub
cmps
mov
cmp
pop
xchg
into
enter
pop
push
shr
std
in
fdiv
cld
es
aaa
repz
jae
out
xor
adc
adc
mov
popf
in
jnp
xor
mov
(bad)
jmp
xchg
adc
jg
movs
ja
ret
cmp
rcr
xchg
mov
push
fucomip
data16
adc
lods
xchg
xor
mov
fisttp
imul
(bad)
das
xchg
repnz
sbb
rcr
stos
outs
jmp
xchg
shr
adc
stc
pop
jmp
jecxz
adc
adc
shl
xor
aaa
pextrw
cld
cmp
add
cmc
pusha
adc
outs
jae
sub
sahf
inc
xchg
pop
sbb
pop
aad
xchg
pop
xchg
adc
mov
fcmovnb
rol
adc
neg
xchg
sub
mov
iret
adc
in
outs
dec
push
mov
cmps
pop
mov
mov
and
cmp
add
ds
ret
(bad)
mov
arpl
mov
adc
js
call
pop
ins
idiv
shr
cmp
pushf
inc
jmp
inc
out
xchg
adc
mov
pop
mov
xor
pop
pop
out
and
das
inc
(bad)
rol
adc
dec
in
(bad)
cmps
int
cmps
lods
cmp
sbb
aas
xchg
data16
push
in
into
or
mov
popa
movs
test
push
jb
and
pop
jge
(bad)
fisub
pop
loop
nop
lock
sub
fisttp
test
xor
push
adc
and
es
std
dec
daa
fcmove
es
stos
loop
(bad)
sahf
mov
mov
dec
push
popa
test
inc
das
add
jge
pushf
inc
out
pop
sbb
dec
mov
and
jl
call
pop
and
jg
sbb
mov
test
jmp
cmps
lods
add
sub
daa
aas
dec
int3
xchg
movs
iret
jp
(bad)
stc
js
scas
aam
inc
sbb
jle
outs
sbb
sub
retf
rol
and
xlat
xchg
xchg
shl
(bad)
sub
and
into
push
rcl
lods
lds
jle
cmps
aad
imul
jns
mov
jl
mov
jns
popa
cmp
or
pop
ins
sbb
xor
movs
adc
shl
stc
cs
pop
push
jne
cmp
mov
stc
pop
test
sbb
pushf
es
lds
mov
sbb
fwait
(bad)
out
stos
and
sar
mov
sub
loopne
push
mov
dec
test
or
or
shl
mov
stos
ins
sub
inc
rcr
dec
sbb
ss
shl
retf
push
es
and
xchg
pop
push
sub
cmc
ja
dec
shl
aad
pop
sub
rcr
enter
pop
push
sar
jae
pop
es
(bad)
inc
adc
xchg
daa
jns
or
and
jl
sbb
test
push
(bad)
cli
mov
inc
xor
mov
rcr
mov
dec
pop
out
retf
jle
icebp
loope
popf
dec
xor
movs
in
ret
arpl
lods
aas
xchg
adc
push
test
test
aam
bound
loop
cmp
in
cmp
push
inc
xor
push
hlt
mov
pop
jmp
out
mov
imul
dec
sub
dec
xor
sbb
dec
mov
mov
icebp
inc
les
push
imul
rol
cmp
cld
(bad)
pop
pop
arpl
push
sub
retf
push
mov
pmulhw
push
add
push
push
jle
dec
xor
add
vpcmpgtb
in
mov
aaa
push
dec
or
mov
mov
call
loop
xor
out
int
pop
test
(bad)
jmp
sbb
xchg
pop
repnz
inc
adc
inc
das
sub
sti
je
les
cmp
dec
inc
fwait
sbb
and
stos
and
stos
add
sbb
cmp
cmp
popf
mov
mov
in
movs
jnp
xor
imul
or
(bad)
ret
loopne
jge
sub
or
jae
cmc
cmps
out
ins
push
fimul
push
cli
aad
sahf
cmp
adc
into
aad
or
fsubr
mov
iret
je
stos
cmp
sahf
add
push
dec
mov
adc
add
cmp
pop
aaa
pushf
jg
out
cmc
dec
dec
mov
add
add
call
aam
(bad)
dec
js
scas
dec
iret
enter
push
adc
mov
in
add
mov
or
mov
add
adc
add
inc
int3
outs
jge
cmc
cmp
adc
mov
jns
popa
ror
jmp
xchg
xchg
sbb
sub
call
lahf
sub
adc
es
int3
neg
test
jmp
mov
ret
test
cs
inc
or
dec
push
mov
or
and
sub
push
ror
sub
fimul
cwde
jmp
popa
mov
push
push
push
jmp
call
sbb
xor
outs
addr16
push
dec
ins
xchg
push
retf
push
push
xor
inc
pop
je
cmp
add
into
adc
repz
jbe
test
in
cmps
enter
fstp
xor
(bad)
jno
aam
push
pop
xchg
pop
jo
mov
(bad)
mov
and
iret
lods
push
lods
iret
fs
adc
repz
inc
add
pop
(bad)
mov
out
inc
imul
mov
nop
pop
mov
pop
fdiv
dec
rcl
and
loopne
cli
cdq
inc
movs
imul
push
push
adc
pop
cmp
and
jge
xor
inc
ret
pop
sub
adc
add
int
add
sub
test
mov
popa
sub
fwait
hlt
test
and
stos
cmp
push
inc
out
imul
and
pop
fstp
mov
je
arpl
clc
scas
scas
fs
or
aaa
inc
adc
fucomip
(bad)
(bad)
dec
pusha
xor
loopne
lds
sbb
popf
stos
mov
pop
pop
mov
lock
and
fdivr
in
lds
push
popa
adc
das
ss
(bad)
mov
inc
fdiv
imul
je
mov
push
retf
push
cmps
inc
pusha
lea
out
cmp
cld
retf
xchg
les
fcmovnu
sbb
jl
icebp
xor
push
sub
adc
sbb
hlt
sahf
popf
retf
mov
lods
mov
cli
lahf
icebp
repnz
les
sub
xlat
sbb
add
cmp
cs
jg
add
enter
into
mov
xchg
mov
icebp
mov
ret
pop
pusha
mov
sub
jns
(bad)
(bad)
ds
movs
(bad)
stc
sbb
pushf
xchg
cld
inc
(bad)
lea
cld
mov
adc
sub
sub
cli
shl
push
pushf
or
cli
pop
daa
arpl
mov
(bad)
adc
jmp
mov
aam
mov
xchg
adc
sysret
outs
es
rcr
or
jp
mov
mov
push
pop
pop
aad
xchg
jg
mov
jno
out
(bad)
push
adc
ret
call
std
ins
xchg
scas
int3
ror
add
or
mov
mov
add
out
fsubr
sar
cmp
nop
xor
sbb
das
jb
arpl
inc
outs
scas
xor
mov
xor
fadd
mov
mov
inc
xchg
cmc
stos
sbb
mov
fdiv
sub
cwde
mov
mov
sub
int
ret
pop
xor
fstp
(bad)
clc
iret
jno
or
mov
scas
repz
es
adc
lods
pop
iret
fadd
ret
loop
cmps
mov
fwait
ins
jmp
ds
push
ret
pop
lods
jmp
fs
push
sub
sar
mov
ret
aaa
jle
xor
mov
in
inc
idiv
cmp
push
sbb
les
scas
sub
fsubr
dec
and
pushf
adc
and
mov
inc
pop
sbb
and
aad
bound
fs
idiv
xchg
mov
ins
std
push
xor
xchg
jbe
add
mov
das
xor
dec
hlt
les
sub
add
or
popf
es
clc
iret
or
imul
scas
jmp
(bad)
jnp
xor
add
cmp
mov
loope
mov
(bad)
xchg
sub
fld
inc
dec
pushf
or
jmp
jl
mov
in
rcl
dec
mov
repz
rol
jmp
les
mov
sbb
fwait
mov
sar
les
ss
pop
in
sub
ret
pop
or
cld
daa
push
jb
push
(bad)
lods
das
mov
jo
mov
(bad)
and
bound
add
ror
popa
scas
test
cs
(bad)
xor
pop
scas
mov
sub
das
jbe
jp
mov
iret
test
jp
push
test
add
add
jbe
push
(bad)
ins
mov
sub
mov
test
stos
mov
push
iret
ds
aaa
xchg
pop
and
test
push
out
push
xor
or
rcr
or
lods
cli
das
mov
lea
xor
and
adc
lds
jmp
(bad)
mov
and
and
test
add
xor
pavgb
adc
or
js
loopne
mov
push
bound
cmp
inc
es
mov
sub
dec
inc
push
in
inc
or
pop
sbb
jb
loopne
dec
add
sub
inc
mov
and
loope
and
push
pop
sbb
add
sbb
push
jno
cs
push
push
fisttp
rcr
cmps
xlat
inc
aad
outs
(bad)
sbb
mov
aad
out
fsub
mov
or
mov
pop
add
ja
je
pushf
adc
dec
pop
sbb
jae
scas
push
inc
std
and
adc
jmp
mov
idiv
xor
out
data16
xchg
or
xor
pushf
jmp
mov
jo
sbb
not
jmp
and
gs
rcr
stc
(bad)
daa
repnz
jb
or
ins
imul
pusha
ja
xchg
ret
inc
and
jns
add
push
pop
sub
cli
call
mov
add
sub
stc
inc
cmp
fst
xchg
mov
jl
popa
fwait
xor
popf
out
iret
mov
inc
or
lods
inc
pop
mov
aam
sbb
lock
in
(bad)
dec
add
in
in
mov
(bad)
outs
cmps
xor
adc
or
fbstp
push
pop
sub
(bad)
and
loop
scas
(bad)
push
into
pop
adc
and
pop
and
add
(bad)
in
xchg
add
call
push
push
fs
add
test
je
xchg
jbe
mov
imul
mov
mov
outs
test
in
cmps
add
sub
mov
mov
sub
(bad)
mov
cli
jge
sub
and
pop
loopne
das
adc
sbb
stos
out
jno
loopne
push
outs
into
lea
mov
xor
mov
int
dec
xchg
aad
and
std
cmp
cli
dec
scas
sbb
sub
mov
sar
shl
mov
dec
xor
iret
push
sbb
sub
pusha
mov
ins
sbb
cwde
fdiv
stos
and
sbb
pop
dec
sahf
push
add
xchg
adc
add
call
pop
js
pushf
test
mov
mov
(bad)
popf
mov
addr16
int3
cmp
mov
mov
jb
mov
xchg
enter
and
int3
(bad)
out
jp
shl
mov
and
idiv
pushf
aas
rcr
cmp
mov
(bad)
imul
stos
test
aad
enter
xchg
mov
jge
out
hlt
push
lods
mov
lock
xor
sub
jp
mov
cmc
mov
(bad)
xchg
pop
fimul
pop
push
mov
push
data16
(bad)
adc
mov
(bad)
jmp
mov
scas
das
int3
daa
push
jmp
jecxz
pop
clc
xor
outs
mov
jnp
cdq
int3
fisttp
adc
and
mov
into
mov
mov
out
xchg
add
dec
push
push
fwait
mov
jae
iret
push
jecxz
imul
add
aaa
cmp
fisubr
cmp
dec
add
loope
nop
repz
adc
cwde
cmp
sub
stos
jno
mov
mov
mov
add
arpl
dec
loop
std
pop
sti
cld
pop
ffreep
dec
pop
jp
add
mov
cmp
push
cmp
add
xchg
jecxz
mov
jbe
call
aaa
xor
es
xor
repz
int
or
mov
stos
xor
dec
pop
ins
sbb
pop
shr
and
sar
mov
jae
jge
jo
fsincos
hlt
mov
lods
mov
inc
sbb
mov
idiv
mov
mov
ins
iret
mov
cdq
or
mov
push
xlat
xor
cmp
add
xor
loope
jp
and
sub
sbb
cdq
cmp
mov
xchg
and
outs
lock
cdq
and
es
and
jbe
cli
dec
cli
ror
inc
adc
arpl
adc
repz
sub
adc
or
cmps
add
add
jmp
sub
pop
movs
and
pop
loope
cmp
into
(bad)
jb
push
cdq
aaa
in
pop
dec
retf
or
xor
fwait
mov
sub
mov
mov
stos
jecxz
jbe
mov
add
mov
adc
sub
rcl
cmp
mov
pop
ja
and
out
mov
imul
movs
pop
(bad)
popf
es
test
jnp
test
mov
repnz
das
daa
or
push
mov
mov
fld
dec
mov
adc
sbb
(bad)
mov
daa
out
call
cmp
adc
cs
adc
push
dec
jmp
pop
aas
jo
jmp
cmps
jge
retf
iret
sub
lahf
pop
push
push
repnz
and
das
je
in
jmp
dec
or
adc
call
add
push
je
dec
sbb
sbb
pop
xchg
lea
inc
mov
aas
adc
in
xor
mov
cdq
in
sub
shl
cmp
shl
outs
jnp
clc
pop
scas
std
call
jecxz
adc
mov
xor
push
or
or
es
enter
cmp
rol
sti
mov
cmp
sbb
pusha
or
sbb
dec
in
mov
test
xchg
ret
cmc
push
xchg
(bad)
jae
fmul
mov
enter
(bad)
ror
outs
loope
addr16
cs
ds
js
dec
mov
lock
dec
jmp
nop
es
and
jns
or
lock
(bad)
daa
in
cdq
mov
sbb
fidivr
icebp
(bad)
push
leave
sub
push
push
inc
gs
inc
add
mov
lods
cmp
movd
test
sar
jp
arpl
xchg
stos
inc
add
clc
sahf
movs
inc
(bad)
mov
lds
daa
mov
stc
test
pop
mov
cdq
fbld
or
nop
dec
ud0
pop
sub
inc
int3
and
inc
test
cld
inc
dec
or
cmp
xchg
outs
(bad)
repnz
cli
faddp
adc
loop
sub
fs
addr16
test
lods
cmp
adc
xchg
fcomp
arpl
push
nop
icebp
daa
mov
mov
jnp
or
stos
pop
cmp
shl
add
pop
ja
fcomp
daa
sub
dec
jmp
lods
or
push
(bad)
lea
fs
rol
adc
cmp
and
arpl
fisubr
sar
add
lds
sub
(bad)
push
aas
jmp
hlt
(bad)
xlat
fwait
in
inc
aas
sub
add
xchg
cmps
dec
prefetch
in
mov
mov
in
xchg
push
and
or
in
fadd
jmp
mov
call
jge
xchg
test
(bad)
pop
adc
pop
mov
loopne
(bad)
mov
jno
mov
pop
std
mov
push
xchg
fist
push
cmp
retf
mov
sbb
test
jae
je
mov
mov
int
lock
sub
dec
mov
jg
lahf
out
call
mov
mov
xadd
mov
leave
jae
inc
shl
mov
mov
jb
gs
mov
aas
fisttp
icebp
mov
jl
add
jno
sbb
push
sti
les
jmp
fcomp
retf
and
mov
inc
jle
jl
or
jno
pop
fild
cdq
(bad)
adc
adc
ss
lods
xchg
mov
xor
jl
cmp
add
(bad)
inc
push
lock
xlat
dec
rcl
push
or
xchg
js
push
movntq
out
(bad)
ret
cwde
rol
cmp
jge
lods
mov
out
ror
(bad)
sub
into
je
fst
push
movs
repz
retf
pop
inc
(bad)
cmc
push
jg
dec
sbb
pop
mov
xchg
pusha
sti
mov
and
fnstcw
mov
mov
(bad)
out
std
fistp
jns
add
call
mov
dec
dec
dec
mov
jo
sbb
push
jne
retf
sbb
sub
pop
mov
sbb
movs
mov
lock
in
out
retf
push
repz
mov
or
(bad)
cs
icebp
add
pop
pop
xchg
popf
push
cmp
adc
cmps
xchg
mov
test
dec
test
test
movsd
xchg
adc
mov
das
ins
jbe
dec
iret
dec
daa
fstp
and
fcom
in
(bad)
arpl
movs
mov
mov
jne
jo
stos
test
sbb
mov
mov
adc
out
add
pop
add
cmp
xor
xchg
cmp
dec
cmp
in
pop
push
sub
lods
dec
pop
mov
ds
cmovno
inc
mov
push
out
mov
pop
adc
cmps
dec
dec
inc
imul
add
sub
jmp
jmp
xor
sub
pop
cmp
jns
lds
cmp
inc
loopne
fucomp
or
and
pop
jp
pusha
push
jecxz
in
rcl
jecxz
ss
and
repnz
int
bound
(bad)
into
shl
arpl
sbb
pop
repnz
mov
or
stos
push
std
push
mov
cmp
and
pop
mov
enter
xlat
mov
inc
dec
les
inc
call
adc
out
pop
addr16
xor
pop
lock
shl
add
xchg
lock
push
rol
ja
inc
inc
push
xchg
shl
icebp
or
mov
mov
pop
mov
cdq
xor
cmp
push
or
pushf
ins
ds
out
js
cmp
sahf
or
mov
mov
xor
sbb
ins
call
dec
jmp
jno
fild
add
ss
push
stos
cdq
clc
push
sbb
fst
hlt
icebp
dec
cmc
jmp
stos
or
lods
or
ds
push
daa
push
ret
popa
shl
jmp
les
mov
cmp
jmp
aad
or
arpl
mov
pop
cmps
aad
test
and
addr16
add
rcr
stos
adc
cmp
rcr
mov
inc
jg
scas
fisttp
pop
xchg
pop
xchg
(bad)
loopne
out
cs
shl
xor
inc
sbb
adc
stc
(bad)
rcr
lea
and
sbb
loope
add
popaw
mov
jmp
jne
xchg
fnstsw
jmp
dec
or
xor
lds
xchg
jb
jl
shl
mov
jb
xchg
popa
popf
mov
shl
mov
mov
inc
inc
pop
cmps
xchg
sbb
movs
loopne
push
or
shr
js
daa
xchg
xchg
in
inc
fnstenv
rcr
xor
lea
repz
lods
out
sbb
add
jnp
add
push
inc
ror
cmp
out
mov
mov
out
loop
test
or
out
mov
sub
jp
mov
push
mov
add
lods
mov
lods
rcr
movs
dec
dec
push
ja
dec
shr
ret
(bad)
mov
hlt
pop
push
lea
mov
mov
out
cmp
cli
sahf
ror
(bad)
cli
cmp
cmps
or
call
push
sbb
repz
add
xchg
push
fsub
aad
push
push
mov
xchg
movs
sub
sub
or
daa
pop
aam
and
mov
enter
sar
mov
stos
mov
or
sub
gs
test
std
pop
jmp
push
outs
sub
jp
cmp
adc
push
(bad)
push
xor
jno
ror
add
fldenv
adc
pop
xchg
add
cmp
popf
push
neg
inc
push
pusha
(bad)
push
fidiv
das
jo
movs
fstp
xchg
call
pop
loop
and
xlat
(bad)
(bad)
jno
inc
xor
mul
jnp
push
and
inc
mov
xlat
dec
pop
xchg
call
cmp
mov
mov
xor
cmp
adc
dec
fild
ret
jo
fisubr
out
sbb
xor
jnp
inc
ja
or
adc
inc
js
call
xor
or
mov
pop
repnz
adc
jns
jne
mov
call
cmps
ror
stos
mov
clc
std
mov
adc
or
ja
fdivr
or
pop
rcr
movs
cmp
pop
jmp
pop
inc
add
push
sbb
ret
dec
pop
in
cmp
inc
cmps
xchg
xlat
push
mov
stos
push
sar
cmc
dec
cmp
jns
inc
test
loop
retf
pop
test
idiv
loopne
stos
cmps
cld
inc
imul
aas
fs
fist
stc
(bad)
fnstsw
lods
or
pop
dec
retf
mov
mov
or
sbb
mov
mov
lods
sub
xchg
js
shl
loope
xor
mov
mov
fidivr
cmps
pop
pop
adc
(bad)
sbb
daa
or
ficom
movs
or
or
add
jne
mov
retf
mov
dec
das
sub
stc
test
sar
lods
fwait
mov
or
int3
fstp
jae
jmp
or
mov
mov
xor
fsub
dec
push
sti
or
mov
lea
loopne
jp
sbb
mov
dec
jne
std
mov
dec
movs
xchg
and
in
stos
je
(bad)
iret
dec
add
ss
mov
and
mov
adc
cld
sub
fcom
dec
cmc
xor
(bad)
(bad)
in
jbe
aad
rol
xchg
mov
mov
sar
popf
loop
in
mov
bound
push
aam
lds
nop
sysexit
iret
out
arpl
imul
jmp
out
shl
rcl
lds
dec
xchg
(bad)
lock
and
loopne
imul
lods
mov
dec
push
jp
ficom
jge
nop
test
out
icebp
sbb
call
std
(bad)
pop
out
jnp
dec
or
and
push
jo
outs
jecxz
sub
data16
adc
mov
sbb
inc
jmp
mov
div
xor
mov
sub
pop
out
push
dec
in
cld
push
dec
pop
or
add
xchg
inc
inc
xchg
mov
add
mov
adc
outs
mov
jmp
push
(bad)
clc
sbb
push
scas
out
inc
pop
push
dec
out
push
inc
loop
dec
sar
shr
ret
in
sub
sub
pusha
mov
sub
pushf
adc
and
ss
loop
das
(bad)
shl
xchg
xchg
cmp
movs
imul
sbb
inc
lods
pop
inc
ins
fst
les
ficom
push
xchg
mov
mov
pop
fild
add
adc
dec
je
add
(bad)
lea
test
stos
jns
rol
fwait
inc
dec
jp
sbb
lods
push
jle
ja
test
stos
sub
add
adc
xchg
push
mov
cmps
dec
cmps
sub
mov
mov
pop
jnp
out
rol
test
and
repz
sbb
cmp
rcl
test
inc
and
xor
aas
sub
out
ret
(bad)
bound
(bad)
mov
fld
push
leave
jmp
(bad)
call
jle
and
or
push
pop
jmp
sub
push
cli
clc
repnz
sub
pop
jg
mov
(bad)
mov
shl
std
mov
sub
dec
cld
push
(bad)
mov
push
out
test
add
mov
cld
ror
movs
fsubr
or
xchg
mov
cmc
out
jp
mov
mov
jbe
xor
test
push
sbb
movs
pop
mov
add
inc
movs
lods
cld
sbb
stos
stos
shr
bswap
cmp
adc
mov
mov
pushf
add
cmp
hlt
ror
jmp
cmc
push
jo
lds
je
pop
cmps
retf
and
in
push
out
or
add
mov
lahf
jae
dec
stc
sub
arpl
gs
sub
scas
jmp
leave
(bad)
sub
lods
out
js
push
add
retf
add
cmps
mov
int
(bad)
call
(bad)
sub
int
or
imul
adc
cmp
(bad)
shl
aaa
ret
imul
adc
cmp
and
into
outs
or
mov
ja
dec
ret
out
popf
xchg
sbb
mov
and
fs
sub
pop
lahf
cdq
fisubr
inc
mov
mov
add
rol
jo
or
and
sub
cmps
push
ins
mov
test
push
sub
dec
cmc
imul
ins
push
scas
inc
adc
add
mov
pop
pop
or
xchg
ins
xlat
jmp
xlat
mov
enter
imul
pop
scas
dec
jae
add
jno
cmp
dec
sub
into
xor
mov
ret
jae
and
cmp
xchg
lods
dec
xor
add
daa
dec
iret
es
addr16
sub
inc
inc
mov
xor
push
mov
ret
scas
rcl
xor
lea
dec
(bad)
xor
or
inc
adc
scas
add
inc
xchg
ss
pushf
pop
fisub
adc
cmp
jns
(bad)
cmp
ret
call
js
jle
(bad)
aaa
cmp
pop
fidivr
pop
mov
ror
xchg
push
ror
pop
js
je
shl
push
jne
push
push
mov
xchg
int
inc
dec
push
inc
mov
push
push
test
push
inc
pop
outs
xor
mov
mov
pop
adc
lods
cmp
fsubr
adc
in
jnp
sub
test
dec
xor
xor
loopne
aad
retf
shl
mov
mov
shl
jmp
jmp
xor
cdq
arpl
mov
ins
cmp
xor
push
xor
jnp
idiv
dec
push
xchg
test
(bad)
aad
call
xchg
ret
scas
les
stos
push
shl
add
and
push
dec
sub
int
shl
rcr
aaa
sbb
dec
push
fwait
mov
mov
xchg
mov
mov
bound
jno
(bad)
mov
push
ss
cmps
shl
mov
repnz
cdq
and
push
in
les
jl
es
jne
mov
jnp
pop
jle
mov
dec
and
mov
dec
sub
ins
cmps
and
sbb
sub
gs
or
jl
ja
leave
inc
add
and
aam
push
mov
mov
aas
out
fsubp
dec
shl
dec
push
xor
mov
leave
fdivr
push
test
test
or
lods
in
and
dec
or
fld
xor
push
push
repnz
mov
cmp
sub
aaa
daa
repnz
mov
cmps
inc
loop
cmps
jo
push
sbb
loopne
adc
inc
fwait
leave
imul
inc
jg
mov
sub
hlt
mov
aas
push
push
jmp
and
out
aaa
pop
xor
fs
adc
mov
es
add
ss
xor
loope
push
(bad)
lods
ss
pushf
out
cmp
inc
jg
(bad)
scas
loop
push
arpl
dec
pop
fsub
pushf
pushf
cmp
js
jo
sub
int3
rol
add
fldpi
sbb
push
sahf
sub
mov
push
pop
iret
pop
cmp
fist
aam
xor
in
xor
test
pushf
ret
or
xor
arpl
in
mov
add
sbb
int
jae
lds
inc
loop
jo
in
addr16
rcr
jae
inc
rcr
mov
or
mov
xor
lock
(bad)
mov
pop
sub
xor
dec
push
jnp
fcomp
push
into
(bad)
add
xlat
dec
pop
sub
mov
add
xchg
clc
xchg
push
data16
jmp
xor
ror
test
pop
sbb
mov
pop
daa
cs
(bad)
ss
add
addr16
daa
xchg
psadbw
push
icebp
adc
arpl
add
loopne
jmp
fistp
daa
adc
in
retf
push
sti
popf
mov
retf
rcl
mov
loope
or
in
call
aas
mov
mov
sub
out
lods
mov
stos
pop
jae
mov
out
das
xchg
mov
(bad)
out
scas
daa
cmp
sar
into
dec
jp
pop
scas
mov
ins
add
adc
imul
push
push
gs
mov
loopne
mov
jg
sbb
pushf
fwait
mov
sub
mov
adc
pop
sub
mov
in
enter
pop
mov
(bad)
add
push
cmps
push
xor
and
jecxz
xchg
int
xchg
jmp
fcom
daa
sub
push
pop
mov
sub
dec
mov
je
push
rcl
inc
ins
pop
mov
arpl
outs
fmul
cmps
pop
test
(bad)
cmc
inc
loop
mov
movs
cmp
xor
int
sbb
retf
push
je
sar
mov
pop
icebp
fwait
icebp
and
xor
shr
jmp
mov
jmp
lock
push
and
rol
push
jp
(bad)
stc
cmp
mov
(bad)
lods
(bad)
xchg
jp
sub
sub
cmps
inc
cmp
adc
mov
or
or
out
pop
(bad)
and
sub
push
push
adc
aad
pop
mov
inc
movs
lds
cwde
sbb
add
push
sbb
sbb
sti
xor
xchg
outs
mov
cmp
pop
push
mov
(bad)
push
rcr
mov
add
mov
out
xchg
(bad)
in
ins
nop
fnstsw
inc
mov
pop
in
dec
xor
push
adc
enter
push
and
loop
movs
mov
mov
xchg
daa
(bad)
xor
dec
retf
adc
repz
mov
xor
mov
fisub
pop
sub
cdq
js
push
loope
fcom
mov
stos
cmp
cmp
fs
mov
fldenv
jb
inc
cmp
ds
popa
cmc
pop
fwait
nop
mov
adc
rcr
cli
lds
ins
es
dec
dec
adc
cmp
push
sar
lahf
jge
pop
cdq
ret
mov
popa
xlat
in
out
and
dec
push
movs
or
ja
bound
stos
push
bnd
jmp
hlt
out
sub
mov
jns
popf
bound
cmp
mov
sub
test
fld
add
xor
stc
cs
loopne
fwait
imul
add
aam
rol
lahf
inc
dec
test
sbb
pushf
mov
std
or
and
add
push
test
jo
pop
xchg
pop
sub
dec
movs
mov
or
test
int3
push
xor
jmp
mov
ds
ja
in
push
cmp
cmp
retf
xor
sbb
rcr
inc
(bad)
call
push
stc
pop
je
xchg
cmc
cmp
sub
popf
ins
outs
out
adc
repnz
lea
xchg
pop
jge
ret
mov
cld
out
sub
mov
out
adc
fcmove
in
lds
pop
inc
sub
add
dec
or
and
xchg
pop
dec
mov
fcomip
mov
push
cmp
inc
test
bound
xchg
mov
fld
lds
xor
sets
and
out
js
js
shl
mov
(bad)
je
push
cdq
sahf
mov
(bad)
popf
outs
adc
je
mov
cmp
cmp
inc
xchg
push
adc
add
dec
xchg
jmp
aas
xchg
sbb
cdq
sub
mov
nop
cmp
or
dec
jp
add
test
bound
out
sbb
and
xchg
jmp
int3
xor
shl
cwde
ss
jns
(bad)
push
cmps
loop
enter
imul
movs
cmp
dec
inc
dec
in
fs
push
jmp
outs
cmp
push
jmp
pop
rcl
add
xchg
hlt
popa
push
jl
or
outs
es
mov
mov
push
jp
inc
rol
repz
fdivr
xchg
lods
(bad)
imul
push
jae
daa
mov
fs
cmp
ss
jge
adc
mov
lods
adc
jecxz
mov
add
ss
mov
sbb
cmp
out
sbb
popf
imul
aas
scas
push
arpl
(bad)
pop
mov
jle
mov
push
int
stos
mov
or
pop
stos
mov
xor
sbb
ins
ss
inc
in
stc
lock
in
push
mov
shl
ror
xor
jecxz
xchg
push
sbb
in
mov
mov
loopne
retf
cmp
and
es
in
mov
xchg
inc
sbb
add
scas
xchg
jmp
test
or
and
repnz
out
jle
or
mov
lods
cmp
jl
imul
outs
(bad)
cdq
mov
mov
(bad)
lahf
(bad)
xchg
pop
std
repz
(bad)
dec
and
retf
rcl
mov
jmp
repnz
jl
sub
jge
mov
xchg
popa
loope
leave
ds
lds
sub
cmps
or
dec
mov
mov
mov
xor
mov
mov
dec
hlt
push
adc
pop
sbb
aaa
in
(bad)
(bad)
push
or
imul
clc
push
push
dec
stos
xchg
add
ja
xlat
push
popa
(bad)
pop
sar
add
dec
sbb
xchg
(bad)
xor
fbld
call
add
mov
stos
mov
cmp
xchg
fisttp
test
and
pop
in
pop
fadd
adc
push
dec
call
xor
cdq
push
js
cdq
fistp
sub
inc
dec
add
sbb
cwde
fadd
mov
xchg
sti
js
add
add
js
out
sub
std
dec
push
les
push
fld
and
mov
add
xchg
in
cmp
(bad)
movs
repz
jle
pop
loop
xor
mov
jmp
lahf
pop
and
clc
enter
lds
xor
pop
sub
shl
lods
in
icebp
push
mul
mov
mov
imul
arpl
hlt
stos
inc
dec
arpl
mov
adc
xor
call
and
into
jl
xor
adc
inc
lock
cmp
scas
mov
cli
repz
xlat
mov
(bad)
lods
push
add
dec
imul
cwde
shr
mov
(bad)
or
fmul
dec
dec
and
pop
loope
or
cmp
xchg
into
arpl
mov
push
test
mov
(bad)
out
jmp
mov
xchg
enter
push
inc
(bad)
jae
popf
pop
or
xchg
out
mov
icebp
cmps
pop
inc
stos
dec
xchg
adc
mov
push
and
add
mov
push
icebp
neg
stc
test
xchg
mov
sub
pop
add
sbb
sbb
ficomp
scas
jnp
(bad)
fcomi
sub
and
jb
push
push
xor
mov
push
cmp
cmp
lock
and
inc
jb
jae
jbe
jo
shr
int3
sti
mov
imul
dec
mov
add
mov
call
push
or
and
sbb
adc
in
aad
daa
mov
repnz
cmps
gs
in
pop
not
jle
xchg
add
xchg
fidiv
jno
and
sahf
fistp
sbb
pop
mov
inc
lahf
fmul
xlat
in
jbe
cdq
jge
lods
cmc
fidiv
jo
sub
inc
test
fst
push
mov
je
mov
and
or
jle
jl
pop
mov
(bad)
xchg
int3
xchg
push
pop
adc
ret
xor
(bad)
cmp
pop
dec
dec
jg
dec
mov
adc
inc
mov
fs
movs
iret
xchg
fmul
or
iret
lods
loop
inc
mov
push
or
cmp
sub
out
rcl
jbe
push
out
arpl
jecxz
jns
stos
std
mov
in
xchg
mov
outs
(bad)
jmp
jo
or
inc
test
xchg
(bad)
jg
divps
or
cwde
push
in
pop
mov
stos
xchg
mov
ja
pop
xlat
jecxz
lods
inc
fcom
pshufw
cmp
mov
push
or
div
push
jge
push
and
stos
ins
add
outs
mov
cmp
test
in
movs
fnstcw
ds
inc
inc
jg
scas
and
inc
mov
out
les
hlt
mov
sbb
and
pop
and
dec
xor
jmp
stos
outs
aad
mov
cwde
jae
inc
mov
cs
sbb
push
fs
and
pop
test
push
scas
iret
mov
adc
cld
rcr
call
jo
and
jns
or
lahf
and
pop
cmp
test
sbb
ins
xchg
xchg
pop
icebp
mov
jns
std
js
enter
(bad)
(bad)
sbb
ja
mov
mov
hlt
leave
dec
ins
inc
push
adc
push
ds
inc
and
pop
popa
xchg
and
cmps
add
pop
push
push
push
fwait
inc
retf
or
int3
gs
xor
sbb
imul
and
or
retf
adc
in
mov
bnd
pop
int3
or
mov
pop
sub
fstp
or
loopne
mov
adc
pop
sub
xor
movs
sub
xchg
and
xchg
mov
jmp
dec
iret
lods
push
jle
out
mov
(bad)
loop
test
mov
mov
inc
push
shr
ficom
pusha
sub
pop
and
int
cmp
test
add
es
xor
mov
addr16
rol
retf
mov
jae
int3
cs
mov
iret
shr
loopne
adc
sub
and
sti
into
jmp
sub
lods
mov
add
cmp
add
jecxz
mov
sbb
sub
stos
xlat
xor
mov
out
push
int
push
mov
out
mov
sbb
push
scas
nop
lds
stc
imul
ret
add
les
inc
dec
xchg
mov
jmp
xor
or
add
cmp
jnp
cmp
aaa
push
ins
loope
and
movs
mov
push
dec
imul
lds
xchg
fcomip
inc
inc
inc
add
adc
xchg
or
push
cwde
sbb
retf
or
push
sbb
out
stos
shl
dec
jae
call
bound
cmp
and
out
aam
jbe
sub
fist
jmp
je
adc
pop
push
mov
cmc
rol
fisttp
xor
gs
cld
out
sub
test
mov
adc
punpcklbw
mov
pop
iret
xchg
pop
cmp
lods
sahf
les
sbb
add
loope
sub
retf
cmp
std
in
jecxz
inc
mov
mov
add
push
shl
and
xchg
div
loopne
add
(bad)
pop
mov
xchg
push
out
push
lea
mov
fwait
ins
sub
add
push
sbb
retf
dec
and
aas
jl
jne
(bad)
repz
adc
jle
xchg
jbe
ret
jg
stos
push
mov
sub
xor
addr16
adc
adc
shr
mov
push
jnp
adc
sub
push
inc
or
mov
add
or
pop
(bad)
cmc
aad
xor
jmp
rcl
push
nop
lahf
cmc
or
sub
cli
pop
or
add
idiv
or
lock
or
adc
in
in
push
jmp
and
dec
mov
rcr
ins
inc
out
cli
loopne
(bad)
ror
or
and
jmp
movs
dec
imul
jle
lods
add
lea
mov
test
js
mov
pop
push
in
mov
lds
jmp
add
(bad)
bound
dec
or
mov
addr16
retf
arpl
jecxz
mov
fwait
in
test
and
(bad)
jecxz
jmp
cmp
cwde
cmps
leave
xchg
into
push
adc
arpl
into
idiv
jae
fs
fcomp
jl
mov
sbb
fstp
mov
add
cmp
sub
xchg
dec
ja
fld
mov
std
pop
fadd
(bad)
jmp
sub
sbb
pop
lock
xchg
out
xchg
gs
mov
ss
push
inc
push
ds
mov
jmp
ret
sahf
(bad)
mov
aaa
cmp
aad
test
cmp
imul
mov
xor
jp
jecxz
loope
add
loop
cmps
dec
addr16
push
cdq
scas
and
xor
in
inc
mov
ds
scas
mov
or
aam
cmp
pop
imul
sub
(bad)
int3
jo
mov
adc
ror
push
repz
xchg
xchg
mov
mov
ds
arpl
cmp
jl
cmovp
in
enter
jmp
mov
mov
lock
push
xchg
outs
rcl
fcomp
fsub
dec
or
(bad)
jmp
inc
mov
cmps
sbb
rcr
inc
and
cmps
rol
dec
mov
cmps
movs
aas
out
jnp
cmp
dec
jo
loopne
dec
push
add
fist
(bad)
cmp
sub
test
pop
sub
mul
loop
fadd
mov
dec
xor
push
out
in
cmp
test
loope
sbb
mov
mov
jmp
sar
mov
xor
cmp
sbb
push
jbe
rcl
sbb
pop
fs
and
sub
mov
and
pop
dec
mov
push
pop
mov
pop
add
lock
xchg
adc
cmp
ja
mov
xor
xor
push
fcmovnbe
and
repnz
mov
xchg
dec
mov
inc
push
test
mov
call
test
nop
or
cmc
adc
mov
sbb
mov
and
pusha
add
sub
jae
push
jmp
daa
push
push
or
stos
stc
cmps
pushf
mov
mov
sbb
inc
(bad)
fucomp
adc
push
jb
lea
ret
outs
stos
arpl
jnp
cmp
xchg
and
xor
xchg
fs
push
jge
in
xchg
pop
jmp
xchg
pop
enter
bound
adc
(bad)
pop
lods
fstp
dec
pop
out
fsubp
outs
clc
repz
retf
int
push
lods
push
cs
jg
mov
mov
and
xor
mov
mov
loope
push
rcl
mov
mov
pop
or
clc
inc
mov
out
lods
sub
rcl
lods
mov
push
rol
pop
ret
push
fs
pop
xor
inc
adc
push
mov
out
lods
lods
daa
test
and
sbb
sahf
cmps
stos
mov
ss
or
mov
jbe
or
and
mov
shl
test
dec
mov
gs
jl
mov
shr
push
fstp
pop
or
and
fimul
loope
xor
xlat
movs
retf
rcr
es
(bad)
aad
xchg
test
sahf
sbb
cmp
add
jp
and
adc
adc
scas
mov
inc
test
inc
inc
test
mov
dec
adc
fdiv
imul
pop
pop
or
adc
xor
fwait
push
xchg
loop
mov
test
add
xor
mov
adc
dec
sub
xchg
jnp
in
imul
aaa
fwait
jecxz
inc
sbb
cmp
inc
and
ficomp
scas
add
test
mov
inc
mov
mov
scas
or
fild
hlt
adc
pop
(bad)
outs
addr16
mov
mov
mov
push
or
mov
test
aam
outs
inc
aaa
push
nop
pop
in
loop
stc
xor
gs
jg
inc
pop
and
fisubr
aaa
ins
je
add
popf
cmp
lods
idiv
int
sbb
lahf
test
loope
ins
push
push
mov
cmps
add
cmps
push
jl
lock
jo
push
jne
add
xor
popf
out
data16
ja
(bad)
sub
int3
inc
cwde
dec
pop
cs
shl
cld
mov
stc
or
sahf
dec
mov
sbb
lea
(bad)
in
push
push
sub
pop
mov
jbe
fistp
and
push
sbb
jns
push
imul
repz
mov
dec
cmp
add
mov
(bad)
mov
loopne
mov
shl
and
pusha
add
sub
add
into
out
enter
stos
sub
pop
ins
mov
or
imul
outs
xlat
lods
sbb
xchg
cdq
aam
in
in
dec
clc
mov
pop
mov
mov
pop
mov
jae
pop
adc
pop
add
xchg
loope
inc
or
(bad)
push
enter
sahf
js
push
and
cwde
cwde
(bad)
xor
fwait
adc
cmp
iret
mov
or
mov
inc
mov
pop
jno
movs
dec
mov
sub
in
outs
mov
mov
xor
stos
sbb
cmp
inc
pushf
push
mov
push
test
popa
mov
fld
pushf
cmp
xchg
or
mov
ret
inc
mov
jge
test
mov
jp
lea
in
in
push
mov
or
data16
shl
or
mov
out
dec
ins
ds
sub
mov
inc
mov
ja
pop
fnstsw
push
into
sbb
pushf
test
lahf
mov
nop
lahf
pop
popa
cmps
mov
pop
fsub
mov
and
movs
pusha
aam
inc
xchg
sbb
fisttp
mov
cwde
or
sar
dec
add
jle
stos
sti
add
xchg
and
fdivr
sbb
push
in
push
pop
mov
in
rcl
and
mov
dec
dec
out
mov
jo
clc
imul
push
pop
add
pop
xor
jge
cwde
fsubrp
test
push
cmp
or
movs
test
dec
dec
dec
enter
retf
neg
mov
retf
in
push
ret
dec
je
cmp
inc
loop
ror
push
or
(bad)
rcl
ficomp
jmp
pop
out
push
pop
loop
mov
(bad)
cwde
sti
ja
stc
mov
out
(bad)
cmps
shr
mov
dec
adc
neg
cmps
mov
mov
fild
dec
mov
adc
sti
shl
mov
pop
ins
repz
xor
dec
scas
xchg
out
jecxz
ss
inc
and
xchg
std
cld
ret
test
je
mov
enter
mov
out
call
jns
xchg
and
sbb
shl
ja
aas
div
inc
jp
pushf
jae
or
or
inc
adc
sbb
int3
xchg
sqrtps
sub
mul
xchg
shl
mov
sbb
mov
push
mov
inc
and
xor
daa
cmp
mov
cmps
icebp
sub
sub
loope
jae
lods
loopne
inc
sub
sub
or
dec
xor
push
ud1
jmp
inc
xchg
and
add
int3
push
sub
push
inc
add
(bad)
test
in
xor
jg
mov
sti
sub
repnz
loop
sub
mov
call
mov
(bad)
retf
nop
call
or
xor
pop
rcl
xchg
retf
in
pop
mov
jmp
sub
out
mov
push
aad
test
inc
popa
dec
mov
pushf
or
mov
outs
inc
cmps
clc
cmp
scas
lea
mov
fidiv
shr
or
out
(bad)
jnp
imul
clc
sahf
lods
popa
pop
mov
lods
pop
sub
aaa
(bad)
dec
mov
cmp
loopne
mov
pop
mov
xlat
loopne
sub
ss
or
inc
dec
xor
cmp
sub
ja
mov
out
pushf
mov
fiadd
mov
popf
rcr
fs
push
jmp
add
jle
(bad)
test
pop
outs
(bad)
mov
out
popa
xor
inc
and
pop
lods
daa
inc
(bad)
push
cli
xchg
push
pop
mov
jo
enter
and
adc
dec
xchg
jno
jno
and
mov
aaa
cld
sar
ja
dec
mov
sub
es
adc
(bad)
pop
bound
imul
mov
pushf
pop
das
and
xchg
popa
inc
repz
into
push
and
add
pop
push
adc
add
or
cdq
mov
(bad)
int3
pop
dec
jnp
das
retf
cmc
and
cld
mov
outs
cmp
inc
sbb
sar
rcl
les
fistp
mov
mov
jle
jl
jnp
xchg
or
push
cwde
mov
sub
jne
in
xor
icebp
ror
movs
rcl
dec
mov
sbb
cwde
sub
sub
sub
xchg
movs
xchg
arpl
aam
adc
fsubr
ficom
adc
push
mov
sub
loope
vminss
or
mov
or
out
pop
adc
es
out
sub
sbb
js
popf
push
scas
xor
xlat
xchg
mov
jecxz
cmps
daa
js
inc
inc
test
test
or
sub
ja
or
fcmovbe
adc
inc
pop
mov
(bad)
sar
pusha
adc
push
stc
xchg
inc
sub
pop
or
sbb
jmp
out
jle
mov
frstor
mov
add
xchg
movs
gs
dec
inc
loop
or
pop
mov
(bad)
jmp
or
(bad)
(bad)
jecxz
or
push
out
dec
popa
and
add
hlt
xchg
ins
fsubr
lds
push
add
pushf
jne
(bad)
pop
add
cmps
mov
xor
adc
fistp
mov
sahf
pop
out
mul
nop
adc
jge
fnstenv
test
lahf
dec
repz
fstp
xor
(bad)
imul
(bad)
and
pop
cmp
add
or
sbb
iret
adc
fld
inc
sahf
lahf
mov
jo
cmp
shl
push
aam
and
stos
div
or
add
add
or
mov
data16
lds
inc
add
sbb
mov
fisub
ss
cmp
xor
ja
mov
pop
mov
aas
cmp
cs
push
cmp
mov
xchg
cmp
and
std
ins
adc
fcmove
dec
stc
mov
sub
push
inc
cs
and
mov
fdiv
leave
mov
jecxz
cs
inc
das
sbb
les
or
cmps
repz
xchg
addr16
cvtpi2ps
or
xchg
sub
jge
inc
jbe
cli
sbb
mov
ret
test
in
dec
aam
div
pop
pop
in
mov
push
lock
mov
mov
loop
sub
mov
push
les
idiv
push
or
cmp
int3
(bad)
mov
cmps
push
aas
lea
(bad)
adc
and
cmp
in
test
call
dec
push
push
into
loopne
dec
adc
aas
sbb
lods
leave
adc
jge
jmp
sar
in
ss
push
sbb
dec
test
ret
lods
mov
add
adc
in
cmp
and
pop
ret
fucom
dec
mov
jl
lahf
mov
add
or
test
or
mov
push
xor
mov
mov
repz
fadd
push
fwait
mov
cmp
or
aaa
mov
and
fcomp
sub
cdq
jge
sbb
and
call
sbb
xor
adc
and
mov
loope
add
shl
into
or
mov
cmc
bound
jle
shr
ds
push
bound
movq
xor
jmp
xor
xor
mov
mov
idiv
xchg
or
xor
xor
nop
ss
add
sub
mov
stc
sahf
ja
int3
mov
iret
jmp
jb
leave
mov
jg
sub
repz
pop
jbe
mov
push
ins
ret
scas
scas
lods
cmp
and
ja
sub
pop
aam
sub
cmps
pop
sbb
fbstp
jo
addr16
xchg
mov
popf
dec
lahf
pop
bswap
aad
sub
push
repz
out
push
cmps
inc
repnz
dec
leave
xchg
repz
cdq
mov
stos
enterw
cmp
sbb
sub
imul
dec
xor
cmp
jnp
push
stc
jp
clc
fs
retf
dec
cmp
xchg
mov
lds
sbb
jno
hlt
pop
mov
aas
rcl
popa
test
(bad)
pop
push
xchg
out
(bad)
daa
addr16
inc
pop
out
or
pop
sbb
and
adc
mov
jne
inc
repnz
xchg
pop
cmp
(bad)
cmp
rol
imul
mov
out
adc
xor
push
popf
cmp
cmps
sub
das
push
cmp
sub
mov
ja
adc
outs
inc
inc
xor
jae
jl
sti
dec
push
inc
ds
jnp
test
cmp
sub
sti
pop
ins
xlat
mov
rol
or
out
mov
imul
dec
je
cli
or
push
addr16
(bad)
mov
bound
sbb
outs
cmp
(bad)
addr16
pop
inc
push
xchg
push
fidiv
push
ret
mov
arpl
es
mov
in
je
adc
push
jne
test
bound
outs
cli
inc
gs
pop
and
pop
das
jl
fcmovbe
in
(bad)
jmp
aad
jecxz
jmp
dec
lods
jp
dec
adc
les
and
push
mov
test
sar
jmp
adc
xchg
jne
data16
and
adc
(bad)
or
mov
pop
test
and
mov
imul
cmps
add
mov
in
mov
cs
sub
pop
add
fidivr
pusha
scas
jle
stos
fistp
cmc
rcl
and
es
dec
or
jl
repz
add
mov
lods
stos
jg
(bad)
out
mov
mov
pop
movs
(bad)
pop
push
dec
mov
es
mov
push
mov
jmp
pop
pop
fdivr
(bad)
ja
daa
dec
push
sahf
add
ja
push
sahf
or
pop
xchg
xlat
sub
or
and
fld
cmp
xor
gs
popa
jle
stc
retf
cmc
mov
pop
push
in
fs
pushf
or
and
dec
inc
cmp
retf
in
(bad)
jno
(bad)
loopne
xchg
push
call
aas
or
cmps
push
push
das
mov
jmp
dec
sbb
gs
iret
jmp
dec
adc
sub
imul
mov
(bad)
ja
shl
mov
push
sahf
push
les
mov
int3
dec
dec
(bad)
daa
pop
pop
pop
mov
pop
mov
mov
mul
(bad)
adc
dec
pusha
dec
imul
ins
shl
adc
inc
scas
jmp
jbe
outs
dec
sahf
push
jnp
fld
push
stos
lds
or
into
ret
xchg
xor
adc
ficom
pushf
js
pop
shl
jmp
or
sbb
fs
push
ds
(bad)
enter
and
ja
out
data16
ds
pop
into
jmp
push
dec
outs
push
dec
jo
mov
and
repz
aas
fs
fmul
ss
pop
aas
ss
jmp
sbb
jge
outs
cli
inc
out
lds
stc
pusha
pop
inc
push
jl
mov
popf
push
mov
jmp
jl
inc
cmps
jecxz
adc
push
mov
or
pushf
ret
or
popf
sti
retf
mov
hlt
xchg
sub
mov
in
movs
adc
stc
add
inc
cmp
pop
cld
xor
sub
sub
adc
push
push
push
pop
or
nop
ds
inc
sbb
jbe
sti
inc
arpl
(bad)
push
mov
cmc
push
cli
mov
cmp
jb
jns
mov
jecxz
hlt
adc
push
jg
cmp
xchg
in
test
and
add
and
inc
adc
sbb
ret
mov
cmp
test
pop
mov
jg
inc
xchg
adc
adc
test
jl
retf
sbb
aaa
fbstp
addr16
jle
xchg
out
mov
ret
xor
jne
rcl
mov
xor
xor
push
push
mov
push
add
out
aaa
mov
fidivr
shl
xchg
into
sahf
ret
mov
dec
inc
shl
xchg
je
(bad)
or
stc
lahf
imul
adc
xchg
dec
scas
call
sbb
in
cli
jecxz
lds
push
xor
ficom
(bad)
ds
fmul
pop
retf
cwde
rcr
repnz
jl
xor
retf
addr16
bound
idiv
into
shl
(bad)
out
mov
or
pop
jle
fstp
in
mov
xor
movs
mov
fild
ret
aam
pop
call
sub
xor
sbb
jp
mov
mov
lahf
mov
icebp
jle
repnz
xor
imul
or
xchg
xor
xchg
repz
mov
ret
mov
add
cld
add
fld
cmp
pusha
fdiv
push
mov
pop
sbb
fistp
cmpxchg
lods
add
dec
lods
sub
fild
pop
das
jbe
dec
imul
mov
ja
jae
cs
inc
fistp
mov
mov
mov
sub
jne
int
addr16
mov
rol
ret
fisub
mov
or
clc
in
call
and
in
xor
add
sahf
dec
retf
cmp
shl
loop
dec
in
fist
comiss
jne
rcl
xchg
xor
pop
lods
push
adc
dec
pop
iret
leave
(bad)
outs
scas
ret
push
fcmovu
add
dec
cmp
dec
xchg
cmps
cmps
jnp
mov
aaa
add
inc
or
push
enter
int3
push
ret
(bad)
cld
das
ficomp
imul
push
dec
push
movs
pop
dec
xchg
imul
(bad)
hlt
xor
add
push
push
xchg
ror
(bad)
jb
outs
inc
push
add
clc
mov
pusha
neg
xchg
cmp
daa
sbb
inc
arpl
sbb
or
cld
and
jmp
data16
cmp
data16
add
jp
add
scas
and
adc
cmps
clc
out
jp
call
(bad)
dec
in
mov
hlt
fmul
mov
and
mov
mov
retf
inc
push
push
push
dec
mov
cmp
inc
cmc
in
pop
push
push
adc
sub
out
fs
in
or
in
xor
ret
fld
loope
(bad)
sti
cmp
mov
xor
js
dec
cmp
mov
fild
sbb
ret
or
adc
push
bound
sbb
mov
nop
fisubr
(bad)
js
jle
test
jmp
mov
mov
fild
shr
call
fisub
add
clc
in
ja
sub
xchg
adc
push
mov
fcomp
and
pop
jecxz
sahf
cld
and
xchg
popf
mov
dec
(bad)
bnd
(bad)
dec
inc
sbb
pop
cli
(bad)
aas
(bad)
div
mov
mov
jecxz
cmp
and
repnz
xchg
cmps
iret
test
and
movs
imul
mov
popa
cmp
dec
mov
lahf
in
push
jle
push
aaa
cmps
push
and
adc
enter
adc
push
sti
mov
imul
loopne
test
aaa
pop
lahf
loopne
and
int
push
push
xor
sub
retf
mov
sub
movs
(bad)
mov
cs
xchg
dec
in
hlt
cmc
pop
cmp
ss
sub
in
mul
xchg
rol
push
cmp
mov
pop
out
in
mov
mov
xchg
test
sahf
shl
sbb
jle
pop
pop
mov
xchg
push
out
pop
pop
jne
ja
inc
scas
push
fbstp
xor
add
pop
mov
push
mov
stc
imul
and
outs
bound
sub
int3
adc
mov
jo
ss
mov
pop
inc
xchg
sti
push
mov
sbb
pop
mov
or
push
lods
sbb
cmps
(bad)
mov
add
push
cdq
mov
addr16
pop
or
(bad)
push
(bad)
and
jmp
cmp
cmc
imul
cmp
add
enter
sub
pop
hlt
jp
jmp
and
add
jecxz
shl
jmp
jp
sub
xor
lahf
retf
retf
and
mov
mov
arpl
arpl
dec
cmp
in
push
(bad)
call
push
pop
adc
retf
(bad)
pop
adc
xchg
test
bound
cwde
ret
mul
dec
cmp
mov
test
stos
mov
leave
outs
iret
mov
movs
mov
jmp
or
iret
ffreep
js
inc
pushf
push
cmc
push
xchg
int3
push
(bad)
rcr
fdivr
push
push
les
mov
sbb
mov
xchg
add
je
mov
jnp
scas
mov
ret
stos
test
rcr
adc
xchg
sub
xchg
pop
push
mov
addr16
or
(bad)
dec
fldcw
jo
(bad)
dec
rol
in
out
adc
fbld
and
mov
mov
sub
inc
cdq
cdq
or
add
jle
lods
adc
repz
push
out
sub
stos
neg
or
push
inc
call
dec
(bad)
cld
jnp
gs
shr
lahf
xor
pop
add
test
out
pop
dec
sahf
jnp
call
mov
fs
and
clc
mov
aam
mov
xor
push
hlt
shr
and
retf
jne
mov
ss
loope
adc
sbb
adc
adc
jmp
fst
pop
adc
push
loopne
pop
push
and
inc
rcr
leave
fcomp
xchg
cmp
loope
jnp
pop
in
push
mov
pushf
daa
adc
mov
xor
outs
lock
test
cmp
sbb
jnp
iret
xchg
mov
movs
push
in
pop
inc
sub
test
xchg
nop
mov
repnz
ret
cmp
pushf
jmp
int
and
mov
pushf
sahf
shl
bound
pusha
jno
idiv
ins
shl
ror
push
jb
fild
call
cmp
jl
int
ins
adc
inc
in
shr
in
dec
sbb
popa
cmp
dec
mov
sbb
fbld
jne
or
push
mov
jecxz
pop
and
stos
fimul
xor
sbb
mov
mov
adc
dec
in
sti
ss
push
ja
xchg
test
xchg
test
push
imul
ret
jl
jb
dec
test
add
jne
add
mov
in
cld
push
out
xchg
es
push
test
fcmovb
je
pop
mov
xor
mov
push
push
adc
dec
xchg
inc
adc
into
adc
sub
sub
pushf
ret
mov
daa
inc
psubusb
(bad)
sti
and
fld
mov
inc
sbb
ins
cmp
xor
(bad)
rcr
ja
mov
sub
loope
mov
imul
add
jl
xor
stos
mov
test
or
xchg
int
sbb
sbb
sub
lea
or
push
pop
addr16
inc
jmp
js
das
push
xchg
sub
xchg
inc
push
(bad)
cmp
push
mov
mov
cs
cmps
dec
dec
xchg
sub
jp
out
pop
mov
xchg
mov
test
mov
repz
imul
(bad)
loope
sbb
mov
aad
sahf
pop
mov
inc
neg
fwait
mov
sub
jmp
int
sti
sub
dec
dec
(bad)
fimul
lods
retf
push
jae
lods
mov
retf
call
xchg
jo
jnp
sbb
repnz
pop
out
or
and
call
adc
iret
jmp
repnz
jle
lods
inc
imul
pop
mov
icebp
mov
mov
enter
out
pop
mov
fwait
adc
int
push
cmp
mov
or
mov
int
sub
test
lea
pop
xchg
pop
push
jle
cmp
(bad)
(bad)
xchg
pop
jg
adc
ss
sub
mov
out
mov
call
and
jl
xchg
gs
xlat
icebp
retf
pop
sbb
dec
cmps
out
fild
daa
arpl
fs
push
pop
sbb
outs
pop
lods
scas
cmp
pop
repz
aas
shr
sbb
rol
sahf
xor
ds
mov
loopne
rol
push
mov
mov
adc
jno
sbb
in
jmp
aas
push
sbb
cmp
xlat
jmp
pop
pop
mov
movs
mov
scas
jo
rcl
or
(bad)
or
(bad)
push
push
cmp
int
stos
in
sub
mov
inc
ins
add
ja
idiv
hlt
xchg
add
push
pop
xchg
push
push
adc
sbb
cmp
fmul
out
pop
enter
(bad)
ins
fcom
cmp
sbb
inc
push
jo
xor
dec
add
movs
sub
mov
jne
fsubr
cmp
or
std
mov
popf
sbb
repnz
adc
repz
movs
outs
(bad)
imul
ins
(bad)
pop
jmp
out
fs
jecxz
mov
push
movs
or
pop
mov
js
xor
sub
pop
fnstcw
jno
add
sti
jp
mov
das
xor
inc
jp
add
leave
out
xchg
xchg
es
imul
and
dec
jmp
dec
or
pop
(bad)
cmp
mov
aaa
loope
jmp
sub
xor
cmp
xor
fsubr
jecxz
xor
dec
shl
and
cwde
sbb
push
shr
fild
dec
sub
xor
xchg
push
mov
or
inc
ret
jno
sbb
repz
arpl
mov
sbb
js
retf
and
popa
xor
dec
hlt
sbb
push
pop
mov
dec
clc
or
mov
hlt
and
cmp
arpl
adc
scas
inc
pusha
or
jecxz
add
or
retf
pushw
clc
pusha
jmp
lea
fimul
push
adc
xor
pop
xchg
mov
loope
and
idiv
adc
add
xchg
repz
inc
xor
or
and
mov
icebp
or
adc
pushf
ja
mov
push
hlt
pop
mov
push
mov
sbb
inc
hlt
xor
inc
pop
into
iret
jne
and
rcl
(bad)
and
xchg
cdq
das
push
jo
outs
aad
mov
clc
test
stc
aad
in
icebp
push
inc
dec
addr16
push
popa
ficom
(bad)
dec
fmulp
dec
pop
fstp
cmp
enter
cmp
pusha
(bad)
xlat
in
cmp
cmps
mov
jae
repnz
jno
cmp
sti
lea
jne
(bad)
icebp
sbb
hlt
xchg
retf
(bad)
dec
or
call
lea
sub
fcomp
repz
sbb
jp
sbb
test
mov
scas
push
pop
loopne
pop
mov
inc
pop
test
fstp
jge
and
push
or
hlt
adc
dec
push
out
pop
sub
aaa
xchg
nop
inc
sbb
push
lock
mov
popa
shr
pop
xchg
add
inc
pop
in
xchg
jge
push
into
add
dec
out
mov
adc
push
mov
sar
cmp
mov
div
hlt
daa
xchg
jae
xor
out
loop
loope
push
and
pop
std
hlt
inc
jnp
xor
loop
adc
jmp
pop
sub
adc
cld
inc
lods
stos
lock
jb
sub
inc
call
or
and
push
test
out
pop
mov
inc
cwde
lods
jmp
xchg
mov
mov
jnp
out
or
mov
sbb
mul
int
outs
inc
not
arpl
ret
imul
sub
(bad)
mov
sbb
xor
push
int
in
ficom
ss
aam
bswap
jb
sub
rcl
pop
imul
stos
into
call
movs
jno
outs
dec
sbb
or
mov
xchg
ret
fisubr
div
push
sub
retf
clc
fstp
or
(bad)
mov
mov
mov
cmp
fidivr
mov
pusha
xor
push
data16
or
outs
iret
and
inc
dec
data16
inc
mov
outs
pop
mov
jle
or
jnp
cmp
aam
push
jge
movs
xchg
cli
shl
xchg
cmc
jno
inc
push
xor
jno
add
jmp
sbb
movs
femms
inc
ret
xchg
cdq
jle
cmp
mov
nop
lds
in
adc
and
int3
cs
add
in
dec
lods
jge
sbb
mov
inc
pushf
sbb
push
push
pop
nop
popa
pop
push
lods
xor
ficomp
sbb
dec
es
enter
or
and
das
lea
ret
shl
enter
adc
sbb
adc
out
int3
lahf
sub
inc
stos
or
popa
call
test
test
cmp
or
sub
dec
cld
fisubr
cld
xor
test
mov
sbb
iret
nop
fidiv
sbb
mov
popa
das
xchg
movs
inc
jg
in
loope
(bad)
rcl
push
adc
xchg
fisttp
mov
mov
dec
jmp
xchg
sub
leave
jge
mov
dec
xor
out
mov
sbb
je
adc
adc
jle
or
(bad)
fcomp
hlt
push
popf
mov
jl
jle
xor
adc
sub
or
xor
aaa
fdivr
xchg
or
mov
popf
std
mov
jbe
mov
pop
ficomp
push
retf
pop
mov
sub
mov
aam
adc
cmc
and
lods
mov
jb
clc
stos
jbe
sti
cmp
jne
das
mov
cmp
push
lods
add
lahf
mov
mov
and
mov
jl
adc
lds
adc
ret
mov
and
retf
mov
aad
mov
cmp
sbb
jb
push
es
imul
jb
xor
mov
pop
retf
sub
adc
fsubr
or
mov
shl
jl
push
jl
sub
or
push
and
adc
gs
cld
rol
lds
rcl
dec
fwait
xor
pop
fadd
retf
cld
mov
sub
inc
in
rol
xchg
nop
jno
sti
outs
lock
je
dec
movs
cmps
and
or
dec
cdq
or
push
adc
call
aas
dec
or
pop
(bad)
xor
dec
adc
pop
add
sti
add
dec
outs
imul
and
cli
out
shr
out
and
cs
push
aaa
aam
mov
loope
pcmpeqw
icebp
cmps
xor
jl
adc
xor
out
mov
dec
jbe
mov
fmulp
push
xchg
cvtdq2ps
mov
cmp
push
jo
out
pop
adc
lahf
test
add
mov
dec
mov
fwait
js
add
(bad)
xchg
fcomi
or
jmp
bound
pop
div
jecxz
mov
(bad)
mov
mov
aam
mov
mov
add
dec
xchg
add
sub
fcom
out
sbb
lods
pop
(bad)
sbb
fnsave
fild
inc
shl
or
fsubr
lods
call
inc
mov
inc
cs
push
(bad)
cli
scas
sbb
cmp
dec
mov
push
and
out
dec
pop
std
test
call
pop
and
(bad)
push
lock
jbe
rcr
jmp
scas
pop
pop
cmps
or
xchg
sar
call
pop
dec
cmp
and
sub
or
and
cmps
daa
xchg
sahf
xor
fcmovu
xchg
jbe
fdivr
jmp
aaa
mov
test
stos
test
cs
ins
mov
repz
dec
sbb
sub
jecxz
cmp
jb
mov
ins
mov
adc
aaa
add
and
imul
mov
xchg
adc
ficom
push
out
jle
int3
jle
das
aad
and
fucomip
xor
enter
movs
jp
iret
dec
sub
mov
adc
(bad)
mov
out
fwait
dec
popf
xchg
pop
mov
xchg
dec
push
ss
not
mov
push
mov
xchg
sbb
jp
mov
inc
cdq
out
adc
dec
lds
or
jl
cli
adc
ins
push
adc
jae
sbb
stos
sbb
stos
call
sbb
adc
out
out
daa
mov
int
adc
adc
outs
fs
cli
out
adc
daa
mov
jp
dec
lods
cmps
dec
nop
cmps
test
arpl
add
lods
inc
cmp
in
aaa
jae
sbb
adc
cmps
jg
test
jl
jne
lods
in
jnp
add
adc
dec
add
popf
jae
mov
adc
mov
xchg
fsub
not
or
outs
stos
pop
mov
lock
and
clc
xchg
sub
mov
push
xor
stos
in
xchg
cmp
pushf
(bad)
into
cs
add
push
mov
sbb
pop
retf
fsub
imul
rol
pushf
test
jo
dec
mov
imul
or
fdiv
push
aaa
sbb
repz
call
mul
clc
fsub
test
or
scas
jmp
jnp
lahf
(bad)
das
push
clc
xor
rcl
xchg
pop
inc
cmc
sbb
out
cmp
or
adc
cld
ja
push
mov
inc
sbb
mov
mov
scas
xor
mov
jmp
adc
mov
mov
pop
jae
mov
push
cmp
outs
fisubr
jo
stos
gs
jns
push
push
jne
lods
jno
or
mov
jae
mov
scas
mov
push
push
lea
aam
xor
add
xchg
push
and
mov
jecxz
jnp
inc
inc
inc
out
outs
test
stc
add
push
xchg
jge
lea
loope
cld
cdq
bswap
inc
ret
outs
test
leave
xchg
rol
dec
cmps
outs
jmp
popa
cmp
je
add
push
fnsave
jecxz
jmp
dec
mov
idiv
loopne
pop
mov
fs
popa
aad
out
mov
retf
inc
cmp
jne
mov
jle
mov
ins
bound
pop
and
fimul
or
inc
out
mov
or
xor
or
mov
dec
in
inc
ja
mov
push
lods
mov
add
cli
lods
and
add
fcmovne
lock
xchg
sahf
icebp
and
xchg
xor
aaa
and
enter
cmp
jge
push
sar
xor
(bad)
push
sahf
mov
adc
daa
lock
pop
sti
jle
outs
inc
outs
neg
dec
and
pop
test
jo
xlat
push
xor
push
cmps
dec
xchg
in
fld
sbb
add
clc
cmps
mov
pushf
xchg
iret
inc
pop
sub
popa
push
jno
arpl
test
push
pusha
(bad)
adc
(bad)
mov
mov
add
aad
or
inc
push
test
(bad)
push
pop
retf
inc
add
sub
sub
shl
stos
mov
xor
imul
and
pop
mov
cli
stc
(bad)
xchg
lods
mov
jae
ret
lds
or
mov
fwait
cs
adc
add
cmc
mov
mov
movs
mov
fcomip
popf
push
jg
shl
add
xchg
sub
ss
fld
mov
retf
push
pop
(bad)
xor
sub
or
out
popf
lods
add
add
cmp
xor
mov
outs
mov
adc
add
cmp
std
inc
xor
js
popf
mov
(bad)
imul
cmps
lahf
pop
adc
mov
sahf
imul
loope
daa
and
es
jne
inc
and
push
inc
fadd
cld
xor
and
push
add
fs
cmc
imul
lods
push
push
push
adc
ret
neg
lea
ret
mov
test
std
popfw
add
rcl
jg
out
ret
push
repnz
neg
xchg
nop
jp
xchg
inc
lods
mov
xchg
cld
mov
repz
sub
fld
pop
add
sbb
push
hlt
inc
adc
cli
je
cmpxchg
call
jns
mov
jp
mul
test
movs
xchg
mov
inc
mov
shl
test
stos
out
ins
fwait
jae
je
pop
push
mov
xchg
lds
int
loop
stc
pop
retf
mov
ja
jecxz
popf
retf
int3
nop
and
sbb
push
ror
(bad)
jmp
dec
xor
imul
mov
inc
dec
cld
mov
movs
adc
enter
fisubr
daa
daa
cdq
mov
mov
int
test
out
movs
push
push
jbe
xchg
adc
into
cmp
(bad)
je
xchg
inc
lods
mov
repnz
movs
test
xchg
imul
lds
and
add
xor
fld
or
outs
ja
aas
gs
adc
test
or
lock
pusha
push
lahf
sahf
enter
hlt
jno
sbb
ror
cld
cld
stc
add
xchg
push
iret
sub
int
scas
dec
push
pop
push
dec
inc
sbb
sub
scas
push
or
pop
sub
pop
not
pop
enter
jmp
outs
std
pop
cmps
mov
xlat
mov
aas
sbb
lods
call
movs
ins
push
mov
jp
mov
xchg
into
sahf
add
mov
adc
lods
ja
rcr
(bad)
cmp
sbb
addr16
inc
xchg
test
sbb
mov
rcr
and
aad
cdq
mov
xchg
mov
dec
lahf
dec
mov
cmp
push
mov
fcom
dec
out
cmps
out
popf
mov
xchg
mov
(bad)
scas
mov
mov
sbb
cmp
adc
lods
jg
repz
dec
push
pop
xchg
inc
jmp
xchg
fwait
pusha
add
push
push
sbb
rcr
inc
and
mov
std
push
push
icebp
xchg
ret
add
adc
sub
fdiv
or
sbb
inc
or
es
loope
lods
into
sbb
jecxz
jae
(bad)
repnz
(bad)
push
jg
loopne
push
xor
add
xlat
add
int
nop
mov
xchg
pop
lock
stos
add
sub
out
mov
inc
mov
cwde
scas
data16
sub
(bad)
(bad)
jg
mov
in
pop
push
add
xor
pop
add
xor
sbb
mov
xlat
sti
cmovnp
leave
loopne
repz
xor
movs
mov
out
ds
sub
pop
mov
test
outs
and
retf
hlt
xchg
push
xchg
jl
(bad)
popa
pop
daa
pop
push
inc
jmp
movs
jmp
add
fwait
imul
mov
sbb
pusha
imul
or
sub
jecxz
mov
stos
xor
jp
lods
adc
mov
mov
inc
enter
fcomp
jb
loopne
jp
dec
into
fadd
adc
call
or
shl
pop
dec
cmc
(bad)
cmc
and
cmps
(bad)
imul
jno
stos
stos
pusha
std
dec
mov
mov
loope
push
add
mov
int3
mov
fsubr
pop
pop
(bad)
mov
cmp
ret
ror
movs
fdiv
call
les
mov
dec
loop
ret
adc
mov
jge
mov
jmp
xchg
jle
iret
push
gs
xor
sbb
mov
js
(bad)
lahf
(bad)
shl
sbb
cli
test
xchg
sbb
cdq
mov
mov
repz
into
sub
test
xchg
adc
je
(bad)
cld
out
dec
pop
push
jnp
stos
sti
xor
push
(bad)
sub
out
jae
or
push
sbb
jle
stos
cld
inc
pop
popf
scas
and
(bad)
mov
push
push
out
ja
push
lds
and
push
adc
mov
mov
sub
fimul
movs
mov
cmp
jle
les
hlt
repnz
loopne
xlat
int
out
shr
push
fcom
xlat
sbb
adc
outs
aaa
cwde
pop
pop
out
mov
push
pushf
mov
push
inc
mov
jmp
add
cmps
hlt
and
ss
mov
in
out
push
ss
jmp
xchg
or
ins
push
nop
aaa
mov
jae
stos
pop
and
cmps
xchg
div
jo
mov
imul
ds
lock
or
xchg
rcl
and
setl
jb
and
call
mov
repnz
shr
outs
inc
dec
out
sub
cli
pushf
es
adc
jnp
jl
mov
xchg
jp
cdq
ror
xchg
push
dec
mov
(bad)
cmp
repnz
mov
jbe
out
xor
sti
sub
push
inc
pop
dec
js
xlat
stos
pop
scas
lea
mov
test
fisttp
fisttp
int3
scas
imul
xchg
stos
jno
jle
pop
mov
pop
mov
ja
test
in
ret
sub
repnz
cmp
adc
jp
inc
pop
aam
and
clc
pop
popf
shl
mov
fs
or
add
test
aas
mov
cdq
(bad)
arpl
cmp
ret
test
mov
jmp
push
fstp
cmp
mov
aaa
pop
ja
jmp
push
mov
sbb
mov
es
jb
(bad)
(bad)
inc
repnz
xor
and
bnd
pusha
retf
jo
bound
ret
cmc
or
mov
adc
gs
(bad)
stc
jnp
bound
stc
out
add
mov
push
bound
fsub
popf
sbb
mov
iret
leave
fwait
lods
xchg
mov
sbb
fild
and
data16
pushf
es
sbb
movs
clc
(bad)
jmp
jle
aas
call
dec
jle
sub
dec
stos
pusha
pop
dec
xor
cmc
jp
mov
stc
(bad)
mov
cli
or
xadd
aas
mov
fcmovnbe
cmp
pop
int3
mov
and
jnp
cmp
(bad)
cmp
pop
fsubr
int
sbb
ret
cmc
and
stos
adc
mov
into
movs
push
loop
jbe
cmp
fcomp
sbb
cmp
add
add
sub
enter
push
cmps
lods
(bad)
fist
inc
loop
jmp
sub
sub
dec
ins
and
add
test
cmp
sub
jmp
mov
mov
lock
stos
mov
fstp
mov
dec
pushf
adc
dec
clc
mov
cmps
in
pop
xlat
loop
add
mov
pop
ins
jge
jnp
pop
ror
mov
mov
sub
xchg
cmps
add
adc
lea
test
ins
daa
and
cmps
jae
sub
pushf
pop
ins
popf
lea
and
dec
retf
shr
test
dec
push
(bad)
in
xchg
not
inc
mov
cmps
retf
mov
mov
clc
dec
iret
mov
or
add
popf
fld
frstor
xchg
int3
rol
sti
add
pop
mov
jnp
mov
or
dec
cmp
pop
clc
jbe
adc
pusha
cdq
xor
adc
ins
jno
lods
jne
xchg
push
cmp
movs
in
pop
out
push
cs
mov
pop
pop
imul
outs
cmp
cmp
push
ret
enter
xor
int3
push
push
mov
push
adc
xchg
in
cld
push
sbb
std
fimul
jne
pop
cli
mov
(bad)
lock
les
xor
xor
jo
push
pop
out
sbb
in
iret
test
lahf
fnstsw
daa
sar
pushf
jns
aam
jmp
lock
cmps
fst
inc
stos
dec
sub
mov
in
fadd
fld
pop
push
mov
popa
cmp
push
out
sar
jle
lods
xor
cwde
mov
aaa
rol
push
popa
gs
nop
xchg
rcr
(bad)
sub
popf
mov
psubsw
cmp
jmp
mov
les
popf
int
rcr
push
icebp
adc
jmp
in
pop
mov
or
jp
retf
ja
movs
shl
mov
xor
ins
adc
xchg
lods
mov
inc
test
cmp
cs
(bad)
mov
mov
pop
jl
inc
xchg
ins
inc
xchg
fmul
adc
sub
mov
or
inc
pusha
(bad)
repz
pushf
dec
popf
mov
and
dec
push
cmp
jge
mov
test
mov
ret
and
rcr
movs
pop
ret
(bad)
sbb
mov
cmps
rol
add
lods
mov
out
mov
jg
fwait
stos
fiadd
push
retf
and
inc
iret
rcl
jo
(bad)
mov
and
mov
or
push
loop
xor
clc
jae
shl
(bad)
sbb
aam
jne
dec
cmp
sub
adc
cmp
jno
imul
or
sbb
sub
xor
ror
xor
leave
(bad)
repnz
sub
out
push
addr16
lds
pop
daa
jo
cmps
aaa
mov
out
or
clc
retf
fbld
sbb
retf
jmp
rol
jge
in
ins
sbb
lahf
fild
cld
sbb
outs
push
xor
enter
outs
test
fldpi
pop
jmp
loope
in
inc
mov
test
xor
xchg
call
xor
sub
push
(bad)
test
push
stc
or
retf
mov
push
mov
mov
iret
lods
mov
(bad)
mov
fnstcw
jge
push
mov
sub
aad
push
xlat
xor
stos
call
scas
imul
dec
xor
xlat
and
rcl
sbb
jns
outs
test
inc
mov
outs
cmps
je
xor
pop
mov
cmp
push
pop
push
add
lock
xor
fs
gs
lds
mov
add
aaa
in
pop
arpl
hlt
fmul
sahf
add
jecxz
mov
fidiv
xchg
and
gs
out
test
inc
dec
mov
stos
add
xchg
cmps
test
gs
jnp
pop
(bad)
movups
push
in
(bad)
dec
pop
ret
cmp
ins
xor
stos
jbe
push
cdq
adc
cmps
and
push
icebp
dec
push
fcom
xlat
fsubrp
mov
pop
leave
jg
sbb
je
xchg
lds
outs
jmp
loope
adc
out
fwait
push
add
cmc
cmp
pop
test
retf
cmp
inc
sub
cli
mov
sbb
mov
pop
popf
sbb
jne
popa
mov
push
pop
clc
adc
cmp
and
ins
scas
cmp
dec
movs
or
dec
jb
push
mov
out
inc
jns
and
retf
xchg
(bad)
fwait
mov
jno
pushf
imul
sub
test
add
adc
stos
mov
sub
sub
ds
movs
jbe
pop
ret
mov
aam
je
mov
inc
dec
(bad)
jne
and
aas
(bad)
push
or
es
popa
repnz
push
jg
lahf
sub
xlat
addr16
xchg
push
(bad)
cmp
cs
ja
in
push
fs
jmp
mov
pop
or
xor
jb
dec
mov
mov
dec
sbb
out
jb
pop
lea
pusha
jno
adc
add
sub
outs
fnstsw
mov
jae
mov
cwde
jno
cmps
imul
cwde
jle
fs
mov
dec
mov
push
push
neg
cwd
(bad)
pop
mov
xchg
push
das
ja
xchg
imul
mov
cmp
loopne
cmp
jbe
loope
pop
mov
cs
jmp
lock
lds
aas
fst
push
cmp
and
fwait
test
jmp
sub
inc
xchg
bnd
and
sbb
xor
jmp
std
xchg
test
aaa
sub
repz
push
xor
sub
loope
mov
pop
lds
xor
or
idiv
movs
xchg
cmp
sbb
sub
push
(bad)
mov
js
imul
mov
cs
cmc
inc
cs
jns
pusha
mov
out
out
sbb
or
loope
lahf
mul
outs
fdiv
movs
out
mov
mov
clc
cmp
cmp
movs
sub
fld
shr
sbb
nop
dec
fnsave
in
movs
sbb
or
mov
sbb
rcr
test
sub
cwde
mov
mov
and
pop
jge
ret
or
or
js
mov
and
mov
dec
mov
inc
mov
cmps
stc
or
nop
addr16
xchg
movs
cmc
dec
mov
aas
es
add
fxch
aad
cmp
cld
std
scas
int
jne
xor
push
add
retf
(bad)
std
mov
add
sub
fwait
cmp
add
cld
daa
retf
js
fstp
cmp
leave
loopne
xchg
ins
sbb
xchg
inc
xchg
call
cld
mov
retf
scas
aad
fist
push
je
push
imul
jbe
and
outs
xchg
ret
addr16
dec
hlt
push
pusha
push
pop
iret
daa
inc
popf
or
jg
inc
pop
fucomi
icebp
retf
inc
mov
adc
pop
xor
pop
ins
adc
sahf
movs
push
ja
in
out
lods
add
mov
loopne
enter
dec
sar
pop
(bad)
sbb
(bad)
fadd
pop
and
test
hlt
jo
(bad)
outs
adc
sbb
out
retf
in
xchg
pop
mov
or
not
fcomp
daa
inc
jmp
pop
nop
xor
mov
xor
sbb
and
std
shl
xor
add
mov
inc
(bad)
icebp
(bad)
jns
pop
sbb
out
pop
mov
pop
fsub
ss
lea
inc
jno
adc
in
lock
lods
pop
add
(bad)
das
push
or
jge
push
jmp
dec
push
faddp
outs
jo
sti
sbb
fdivr
ja
or
push
cmp
lods
je
arpl
cwde
cli
arpl
repz
sub
nop
xor
mov
mov
dec
das
ficomp
mov
retf
add
xchg
pop
mov
push
adc
add
ds
mov
adc
ja
lock
(bad)
and
mov
add
stos
xchg
pop
cwde
and
enter
mov
bound
imul
in
adc
sbb
mov
mov
lahf
mov
push
and
or
mov
jne
xchg
shr
inc
and
sti
push
sbb
mov
dec
test
dec
sti
dec
shl
mov
scas
lea
retf
jmp
add
jmp
jmp
mov
xor
ja
(bad)
gs
outs
scas
fcomp
cmps
inc
jns
lea
jnp
push
outs
cli
jmp
mov
nop
push
lea
cmps
inc
out
sar
(bad)
imul
test
pop
xor
push
inc
data16
mov
iret
adc
sti
(bad)
out
add
fisttp
or
(bad)
pop
test
mov
mov
push
inc
lods
pop
mov
ins
repz
sar
push
xor
cmp
mov
loop
push
inc
enter
pop
mov
pop
add
xor
inc
or
sti
jmp
xchg
cmp
dec
add
mov
shl
inc
sbb
jmp
repnz
out
dec
rcr
cmp
stos
xor
leave
test
mov
inc
jno
out
lahf
dec
cmps
inc
ss
cli
sahf
push
adc
jae
iret
inc
xor
xchg
or
hlt
retf
outs
mov
sub
clc
push
push
loope
sbb
cli
icebp
fild
and
push
mov
inc
add
out
xchg
push
scas
rcr
xor
inc
adc
push
addr16
shr
cmp
mov
ja
(bad)
mov
into
cmps
cmp
data16
les
inc
(bad)
lock
in
cmc
push
bound
in
push
pop
xlat
fbld
out
movs
test
repz
jg
int3
xchg
ret
jp
shl
ds
test
cmc
xor
push
je
out
outs
mov
push
xchg
repz
adc
(bad)
add
pop
fimul
and
jge
enter
and
fld
and
mov
aas
stc
or
stos
add
test
data16
mov
push
in
jo
test
sub
sbb
enter
(bad)
ret
or
push
pop
int3
sahf
xor
adc
bound
mov
push
dec
push
push
inc
xor
pop
enter
pushf
mov
out
inc
and
push
adc
xchg
xchg
push
add
jge
fs
jge
test
leave
in
inc
nop
or
cmps
jg
pop
cmc
js
clc
inc
int
lods
sub
mov
sbb
or
cmp
repnz
clc
pop
loop
mov
outs
std
popf
push
test
mov
test
pop
daa
lock
div
int
jecxz
shr
jmp
lahf
or
jl
sub
pushf
inc
out
sub
xchg
adc
push
outs
jns
gs
pop
sbb
sbb
cmp
lea
xchg
repnz
inc
in
mov
pop
nop
sub
pop
inc
pop
movs
cmp
cmp
popa
mov
dec
jb
movs
dec
sbb
daa
pop
in
mul
sub
mov
inc
mov
mov
jge
std
xchg
cld
xor
stos
fiadd
cmps
mov
daa
iret
mov
push
pop
sub
or
jno
outs
iret
imul
sbb
aad
jno
push
mov
ins
or
lods
fnstenv
push
sub
mov
xor
dec
scas
sub
push
aaa
xchg
pop
sub
jns
jae
xlat
ins
cdq
rcl
or
rol
xor
out
cmps
mov
and
sar
(bad)
xchg
push
ins
dec
pushf
std
nop
inc
inc
xchg
or
adc
aaa
jmp
pop
adc
cwde
sub
cmp
push
ja
fiadd
or
fwait
jg
cmp
push
mov
mov
add
ds
xchg
or
aad
ret
jns
ret
ret
mov
mov
jnp
jg
jp
into
pop
test
pop
pusha
push
clc
push
scas
inc
push
pop
mov
cli
jae
pop
fdivr
cdq
push
jne
out
and
bound
or
or
mov
push
mov
jbe
cmp
pop
jno
cmp
outs
(bad)
ss
in
sub
int
cmp
mov
shr
jns
pop
mov
add
imul
test
push
or
call
xor
sbb
sbb
sbb
aas
add
sti
fs
jo
scas
shr
sbb
int3
mov
sub
sub
sbb
adc
push
es
mov
cs
pop
hlt
(bad)
sbb
mov
test
xchg
sbb
sbb
test
push
dec
and
test
fldcw
xchg
adc
es
iret
sbb
repz
shl
or
outs
in
lahf
fwait
pop
xchg
cdq
cmp
xchg
push
cmps
ds
repnz
add
and
int3
addr16
fcom
aaa
idiv
or
add
cmp
inc
movs
jp
mov
test
push
ror
mov
sbb
fpatan
xor
add
cmp
or
pop
aad
call
loop
jecxz
mov
fnstsw
push
dec
out
dec
mov
sub
inc
fwait
mov
dec
mov
jo
sub
add
xor
imul
es
(bad)
sbb
mov
add
imul
loop
and
loop
retf
xor
mul
inc
cld
mov
in
ret
xchg
xor
sub
jmp
fdiv
sub
mov
lds
ret
cmps
in
adc
cld
cwde
in
cdq
mov
inc
je
lods
mov
adc
mov
into
push
xchg
jae
adc
sbb
lods
daa
push
pop
mov
pusha
add
(bad)
jl
shl
and
cdq
sbb
imul
jo
test
shl
into
xor
adc
pop
pop
mov
out
or
test
ds
and
ror
test
add
out
inc
fcmovne
mov
cwde
out
dec
xor
mov
mov
sti
iret
pop
outs
and
sbb
adc
jecxz
and
stc
ret
xchg
add
cmp
inc
cld
mov
xor
jecxz
or
sti
lds
out
fld
push
rcl
retf
or
adc
jnp
sub
je
daa
jg
mov
lahf
sbb
pop
ins
sbb
mov
or
inc
loop
cmp
test
lock
jae
fistp
xacquire
sub
test
(bad)
rcl
clc
add
fcomp
scas
pusha
cmc
lds
mov
fiadd
xchg
cs
das
push
sbb
fnstsw
mul
mov
hlt
or
lods
add
lock
repnz
mov
jo
mov
ds
paddsw
out
imul
or
sub
sbb
pushf
fsubrp
xor
add
loope
int
jle
pop
out
cwde
adc
div
mov
or
mov
pop
jns
jl
add
jo
dec
lock
ins
cmp
daa
scas
fnstsw
sub
out
call
sbb
nop
mov
ins
mov
movs
(bad)
fdiv
sub
cmp
je
repnz
fild
repz
cld
cld
int
gs
jnp
retf
ins
popf
(bad)
pop
dec
add
in
push
(bad)
stos
xchg
mov
cmp
stos
imul
sbb
xchg
xor
jmp
xchg
adc
sbb
lea
xchg
fisubr
mov
pop
sub
not
inc
mov
fadd
js
stos
sub
sbb
mov
pop
mov
mov
sti
sbb
sbb
lods
(bad)
gs
sub
or
sbb
xor
addr16
push
call
call
sbb
xchg
jge
mov
jmp
pop
(bad)
clc
inc
ins
and
lahf
fidivr
pop
adc
ret
jp
shl
and
imul
test
or
shr
jecxz
mov
pop
mov
mov
push
push
(bad)
popf
xchg
xchg
int
add
push
nop
mov
retf
sbb
or
ret
iret
add
dec
pop
jnp
or
ror
inc
shl
into
and
add
retf
add
cmp
loop
ret
pop
fisub
add
shr
push
lods
mov
xchg
inc
mov
rcl
ret
pop
shr
stos
inc
add
lahf
xchg
retf
push
scas
bound
xchg
cmp
sub
xchg
and
lock
sub
rol
xchg
mov
pop
les
out
call
test
and
pop
ror
nop
mov
cdq
(bad)
mov
adc
xor
daa
out
rcl
sbb
pop
lds
push
mov
scas
sub
mov
clc
lods
adc
dec
jl
jecxz
add
jle
test
popf
jns
dec
xor
inc
les
pushf
adc
jle
cmp
pop
loope
scas
cdq
popf
jle
push
lea
add
das
sahf
push
push
xchg
fwait
cmp
pop
adc
mov
inc
fs
xor
add
adc
loopne
push
daa
and
xor
lock
cmps
push
sub
mov
xor
scas
loopne
jae
mov
scas
mov
lods
or
add
jl
cmp
fsubr
sub
fmul
push
addr16
mov
mov
or
lock
jmp
add
xchg
test
add
sub
and
jbe
mov
neg
loopne
js
call
scas
(bad)
cmp
(bad)
pop
adc
addr16
push
inc
push
jbe
enter
mov
aaa
xor
shr
loope
out
es
cli
pop
mov
cdq
movs
sahf
(bad)
inc
jae
sub
pop
repnz
leave
or
outs
pop
push
pop
pop
fxch
xor
mov
mov
push
and
mov
or
add
loopne
cmp
js
ja
lea
mov
bound
div
inc
xchg
or
pop
popf
pop
mov
and
mov
xchg
and
and
push
mov
stos
add
nop
leave
idiv
adc
imul
cmp
shl
push
and
mov
pop
jb
retf
out
movs
mov
loope
sbb
or
jb
div
das
inc
jg
jo
dec
pusha
call
stc
ins
xchg
mov
push
mov
ret
(bad)
daa
mov
push
push
sbb
push
iret
push
call
test
pushf
cmp
and
mov
xchg
in
jno
xchg
(bad)
cmp
arpl
scas
pop
push
outs
fadd
outs
mov
cmp
fistp
cmp
xor
dec
jl
cmp
aam
in
inc
sbb
push
cld
xchg
adc
sub
xor
push
das
xor
inc
dec
into
daa
pop
test
ja
lds
ins
retf
or
cmps
and
sbb
into
lock
lock
cmp
ror
icebp
inc
je
sbb
lds
loopne
mov
mov
rol
dec
pop
add
or
jb
dec
retf
lahf
jo
data16
cmps
jbe
das
fistp
or
jp
retf
jmp
hlt
loopne
fldenv
sub
jle
in
aad
inc
add
popw
sub
mov
enter
dec
sbb
jae
loope
ret
jge
and
lods
pusha
push
cmps
sar
fist
lods
mov
and
mov
push
jmp
cmps
stos
nop
and
mov
cmp
(bad)
sbb
ds
push
adc
mov
pop
mov
and
sub
ins
jno
or
popa
xchg
push
fbld
ss
push
jo
mov
inc
xor
daa
call
cwde
xchg
lds
dec
push
fadd
xor
das
pop
scas
add
jmp
jne
aaa
cs
jl
in
imul
jnp
fsub
mov
lahf
pop
dec
or
mov
(bad)
(bad)
mov
cwde
xor
(bad)
aaa
fcmovnu
ss
aaa
fdivrp
add
pop
and
inc
pop
sbb
and
xchg
retf
adc
lods
repz
push
mov
packsswb
mov
loope
out
(bad)
lahf
push
xor
loop
je
add
jle
into
inc
fldenv
xchg
mov
mov
neg
pusha
mov
push
mov
sbb
mov
ins
addr16
les
jmp
or
imul
add
mov
sub
popf
imul
or
push
mov
daa
adc
ret
xchg
pop
mov
mov
shr
icebp
sti
mov
fdivr
imul
add
inc
dec
inc
and
sbb
cmp
gs
out
fdecstp
mov
xchg
ror
iret
pop
in
sahf
test
pop
jns
mov
mov
sub
mov
icebp
sub
rcr
sub
jl
push
inc
mov
xchg
mov
jne
push
jb
and
or
icebp
ret
adc
mov
mov
jbe
fidivr
out
call
inc
iret
sahf
and
jns
in
sub
push
popa
shl
mov
inc
cli
inc
mov
add
ds
push
adc
je
std
cmp
and
retf
fdiv
test
mov
and
or
es
sbb
xchg
sar
mov
aad
pusha
call
imul
push
je
jl
jbe
push
mov
ret
aam
mov
push
daa
push
xor
ss
jge
inc
mov
mov
aad
aas
mov
pop
das
movs
jl
mov
arpl
adc
pop
push
push
nop
cli
mov
and
dec
mov
push
push
xchg
out
xor
jnp
(bad)
nop
sbb
aaa
and
mov
jmp
bound
sub
fimul
and
rcr
mov
mov
mov
aas
loopne
xlat
stc
cmp
mov
sbb
and
pusha
jae
fild
sbb
pop
xlat
bound
out
not
icebp
stos
sbb
cmp
stos
mov
clc
xor
jg
add
inc
mov
(bad)
dec
dec
out
mov
imul
inc
mov
jmp
jne
sti
(bad)
dec
push
daa
test
and
jno
push
test
iret
hlt
and
scas
mov
pop
pop
jge
cs
inc
call
or
fist
xor
call
xchg
and
inc
sar
cmp
and
jbe
out
int3
into
(bad)
ja
mov
xchg
pop
jnp
scas
push
pop
inc
jmp
push
jge
sbb
fldcw
lock
push
pusha
pop
mov
retf
rcr
sub
jo
xor
xchg
add
rep
push
clc
mov
or
or
mov
pop
jns
cwde
push
(bad)
punpcklbw
mov
jbe
add
mov
push
or
adc
xchg
ror
stos
loope
cmp
cdq
stos
xchg
mov
push
lods
sbb
(bad)
mov
bnd
cli
lea
ins
mov
xchg
mov
xor
xchg
adc
movs
cwde
scas
mov
pushf
icebp
cmc
fistp
das
aad
push
dec
sub
jnp
xor
ins
jmp
and
aad
push
mov
xchg
jne
out
gs
pop
dec
cmp
dec
push
mov
test
dec
mov
mov
popf
xor
iret
mov
gs
inc
scas
or
xlat
dec
rcl
sbb
bound
scas
in
sub
pop
movs
daa
mov
jo
inc
dec
mov
jns
xor
sahf
or
inc
push
dec
sti
inc
je
lds
push
iret
pop
fdiv
inc
xor
out
in
loopne
into
retf
sub
jo
ins
push
cwde
sub
add
(bad)
xlat
bswap
ror
fdiv
repz
inc
jle
ret
daa
or
arpl
fistp
lahf
jo
mov
sti
aas
or
push
ins
sub
add
xor
pop
out
mov
push
(bad)
mov
pop
dec
cmp
sub
hlt
xor
lock
jae
stc
or
jno
jae
and
push
loope
mov
mov
fdivr
inc
ss
pushf
or
pushf
fwait
lock
xlat
fbld
stos
jmp
jae
sahf
sbb
(bad)
and
jno
and
lea
test
mov
jecxz
pop
xor
int3
jge
mov
mov
ds
and
lods
pop
ss
pop
fcom
jmp
sbb
jg
push
outs
cmc
adc
push
ja
or
sar
sub
inc
and
xor
rol
bound
aas
ins
outs
pushf
loop
rol
repnz
sbb
pop
xchg
mov
js
xchg
mov
inc
sbb
iret
popf
jmp
sub
enter
or
push
aad
and
aas
shl
or
push
call
cmp
in
std
push
enter
mov
in
std
or
hlt
inc
mov
ret
aaa
test
test
je
stos
dec
mov
pop
xchg
inc
aad
out
repz
ret
or
icebp
pop
stos
je
fnstcw
ret
cmps
jns
xchg
push
or
loopne
add
jg
jmp
call
iret
pop
mov
dec
lods
sub
xor
scas
sub
mov
enter
jo
push
jnp
shl
mov
and
cwde
xchg
and
dec
cmp
cs
jecxz
mov
push
adc
mov
shr
jl
icebp
mov
aas
push
aas
jle
(bad)
and
cmp
jo
loop
jmp
mov
call
add
inc
nop
jne
movs
mov
daa
push
fbstp
dec
imul
in
outs
mov
fadd
out
fisttp
xchg
adc
push
lahf
cmp
mov
xor
int3
into
popa
pop
xor
xor
inc
in
loope
sbb
mov
fst
aaa
xchg
sti
sbb
popf
out
sub
pop
jl
add
pop
mov
mov
das
inc
inc
xchg
(bad)
test
scas
std
aas
test
shr
lods
movs
ret
add
mov
test
ja
ds
gs
and
inc
jno
(bad)
mul
mov
sbb
cmp
dec
sub
push
and
dec
xchg
loope
cmp
es
inc
jmp
movs
imul
lods
xor
push
add
int
jmp
ja
sti
sub
mov
fdivr
xor
std
outs
push
pop
inc
dec
sub
popf
das
stos
and
mov
jp
sub
adc
rol
movs
jb
loop
popf
movs
add
push
push
call
test
hlt
ret
std
or
xchg
call
add
loopne
sti
mov
(bad)
jb
push
push
jbe
rcl
clc
and
mov
int3
mov
rol
jo
add
mov
in
sahf
inc
jae
jle
push
dec
popf
outs
mov
mov
or
movs
inc
stos
ror
(bad)
jnp
in
xor
fdiv
movs
aad
aaa
jb
cmp
jae
cmp
cmp
jl
fdivr
mov
movs
aam
sbb
pop
hlt
movs
das
mov
cld
js
cwde
jbe
loopne
pop
jle
mov
sub
fninit
call
jecxz
sub
in
inc
div
mov
rcr
add
shl
push
mov
fld
test
mov
push
icebp
adc
and
(bad)
and
(bad)
in
dec
xor
mov
jmp
xlat
(bad)
dec
push
aam
mov
pop
push
in
imul
dec
pop
test
lods
call
data16
inc
cmc
in
retf
push
out
adc
mov
pop
in
popa
xchg
cmps
ins
in
retf
das
jno
sbb
rol
pop
repnz
lods
stc
sub
rol
sub
in
std
cmp
neg
cmp
jecxz
mov
push
sbb
mov
je
inc
inc
push
stos
adc
sbb
neg
push
pop
mov
adc
nop
jb
lea
inc
sbb
test
std
fwait
mov
scas
lea
sub
and
fbstp
ins
sub
pop
mov
cmp
push
push
hlt
fdivrp
mov
push
lock
and
cmp
iret
inc
dec
and
mov
cmp
dec
xor
cmp
test
pop
jns
or
cmp
add
pop
scas
jl
cmps
dec
xchg
call
fild
leave
sbb
jns
clc
fsubr
retf
(bad)
jo
inc
retf
jg
fsubr
das
in
into
adc
and
scas
xchg
adc
enter
dec
xchg
mov
jnp
pusha
and
cmp
nop
aas
mov
adc
(bad)
push
jmp
sub
shl
jp
test
jo
pop
data16
mov
out
xor
arpl
add
jne
mov
xchg
and
xchg
retf
pop
mov
mov
in
xor
lahf
cmps
dec
icebp
or
xchg
ins
leave
fnstcw
xchg
push
and
inc
arpl
sub
xchg
repnz
push
popf
jg
stc
sar
(bad)
mov
sar
daa
sbb
add
inc
xchg
mov
ret
(bad)
ds
mov
fsubr
mov
xor
push
iret
push
inc
jns
cmp
js
pop
mov
add
jg
sti
das
jmp
dec
mov
push
call
shl
retf
push
neg
jmp
jae
inc
int3
jae
sbb
cmp
or
sub
mov
sbb
shr
mov
shr
fdivr
push
pop
loop
dec
jno
jle
jne
inc
jl
(bad)
cmps
imul
xchg
cmps
loopne
test
jp
inc
lock
pop
pushf
push
mov
mov
dec
loop
jge
call
(bad)
aad
mov
stos
push
pop
cli
sbb
dec
xlat
mov
addr16
imul
push
jle
sub
mov
lea
jge
adc
adc
in
inc
test
fidiv
jmp
cmp
mov
lods
ret
xchg
jns
in
std
xor
sbb
ret
adc
in
inc
rcr
in
jecxz
leave
dec
(bad)
cmp
jle
shr
cmp
mov
dec
jmp
cmp
pop
mov
leave
cwde
mov
push
gs
int
inc
xchg
dec
mov
xchg
jmp
push
shl
or
repz
lds
dec
in
add
jmp
imul
pusha
sbb
sub
sbb
jno
xchg
(bad)
mov
shl
sub
xchg
movs
sub
movs
jb
dec
push
and
cmp
fcom
(bad)
xor
std
je
fbstp
dec
jp
popa
enter
cs
push
ins
aaa
sub
xchg
xor
shl
xchg
fstp
ss
mov
out
pop
(bad)
stos
(bad)
push
popf
mov
fcomi
sbb
mov
inc
mov
mov
inc
pop
hlt
jle
sbb
sbb
sar
add
loopne
push
scas
mov
jp
mov
add
jle
and
xchg
cmp
jmp
pushf
sbb
repnz
jmp
outs
push
test
and
mov
inc
pop
push
dec
jb
scas
nop
test
dec
lock
retf
nop/reserved
pop
pop
das
push
aas
scas
cmp
inc
cwde
and
mov
inc
out
xchg
clc
iret
imul
push
jnp
cmp
add
lods
adc
jmp
jl
or
cmps
pop
mov
push
cmp
dec
mov
mov
sbb
xlat
stc
xor
sub
adc
dec
int
js
aam
or
xchg
scas
jle
ds
xor
sbb
loope
daa
sar
fnstcw
btc
jg
div
loopne
fiadd
ins
lea
jmp
iret
shr
nop
mov
cwde
fwait
push
std
loop
adc
repz
xchg
adc
or
sti
push
aad
leave
aaa
outs
mov
push
sbb
xchg
mov
loopne
xchg
fs
sti
fst
mov
data16
cmp
push
aad
mov
sbb
cmps
gs
mov
jecxz
es
adc
push
mov
aam
scas
mov
add
jg
or
sar
dec
or
std
popf
dec
aaa
pusha
inc
cld
pusha
fiadd
aaa
cmp
add
ins
ds
inc
test
popf
outs
ret
xchg
(bad)
(bad)
push
lods
outs
xchg
pushf
sbb
ret
in
jecxz
jle
jmp
dec
shl
sbb
in
pop
sti
ror
sbb
cmovbe
stos
in
lds
fimul
sbb
push
dec
enter
data16
push
dec
(bad)
out
stos
xor
add
cmp
xchg
in
hlt
out
mov
xor
add
inc
loopne
sub
xlat
movs
maxps
push
inc
mov
or
jbe
mov
sahf
mov
test
xchg
popf
xchg
lds
inc
dec
jno
int3
push
sub
movs
inc
mov
or
or
lods
sub
out
and
rcl
add
push
mov
xchg
inc
into
aam
xor
in
pop
fadd
adc
stc
jecxz
sbb
in
rol
push
popa
xor
sbb
out
and
popf
stos
int
lds
mov
add
stos
sub
push
bound
call
int3
mov
mov
cmp
bound
clc
aas
mov
arpl
inc
mov
jmp
je
imul
inc
pop
pop
cmc
mov
in
pop
call
add
push
and
sub
sbb
jg
sub
loop
aas
mov
movs
bound
inc
mov
je
dec
scas
leave
sub
mov
mov
test
aaa
fmul
call
jb
push
cmp
pop
mov
dec
jp
(bad)
sbb
jbe
scas
fsubr
lods
enter
jmp
test
xchg
xchg
jg
cs
or
push
scas
sub
pop
js
cmp
lahf
pusha
ins
mov
xchg
cmp
les
lea
inc
push
sbb
push
sub
push
push
cmps
xchg
cwde
jl
frstor
rcr
xchg
leave
ins
or
jle
std
iret
cmp
cmps
mov
test
cdq
(bad)
dec
(bad)
pop
add
cmp
mov
jmp
test
test
jl
out
push
call
jl
adc
clc
xor
not
(bad)
sar
push
xor
mov
inc
xor
scas
mov
(bad)
cwde
mov
stos
jecxz
sub
push
mov
call
iret
sub
pop
idiv
mov
xchg
imul
sub
dec
xor
ror
movs
pop
sti
mov
iret
sbb
push
cwde
inc
or
pop
stos
dec
and
sbb
jge
or
fprem
cmp
jmp
pushf
dec
mov
adc
ins
and
adc
mov
fld
es
(bad)
int3
pop
(bad)
pop
arpl
add
icebp
mul
repz
sub
push
inc
ret
jae
(bad)
mov
aad
std
jge
int3
daa
push
test
or
adc
out
mov
xchg
mov
test
push
mov
push
test
push
xor
adc
sahf
imul
push
ret
loopne
dec
jge
inc
rcr
adc
out
cmp
pop
jo
pop
and
sub
sub
sub
clc
and
dec
jg
inc
inc
or
mov
cmp
mov
and
pop
cdq
ret
pop
in
jecxz
xchg
stos
stos
add
inc
test
into
scas
adc
adc
mov
retf
nop
(bad)
pushf
adc
ret
lock
mov
mov
stc
mov
mov
stos
popa
fwait
aad
sub
push
xchg
fs
adc
cs
adc
std
sbb
mov
push
push
pop
jb
add
test
pop
and
loopne
pop
hlt
sbb
cmp
imul
nop
cs
xor
stos
sbb
sbb
xchg
mov
mov
mov
ret
rcl
adc
imul
add
xchg
push
pop
jp
add
xor
sar
test
mov
sbb
xor
stos
pop
add
cmp
das
fisub
pop
dec
ror
lods
das
cwde
pop
cmp
or
push
cmp
push
jnp
add
push
jbe
cmp
push
mov
mov
loope
pop
loope
inc
scas
jnp
jnp
mov
outs
fwait
adc
or
lods
rcl
std
mov
pop
pop
in
fist
sti
jns
ror
jp
or
sbb
sub
hlt
cmps
mov
jle
or
and
mov
inc
jl
sub
not
into
retf
pop
pushf
dec
mov
into
pop
mov
pop
sub
in
pop
inc
(bad)
rcl
sub
dec
and
pushf
leave
push
xor
mov
jne
aas
aad
ror
test
fnstenv
movs
push
pop
mov
push
repz
movs
dec
adc
fwait
jl
repz
daa
push
into
lods
and
mov
div
lods
add
xor
push
fnstenv
jmp
dec
xchg
ret
rcl
mov
outs
jp
add
and
mov
inc
imul
ja
stos
dec
retf
int
out
xor
(bad)
push
inc
es
mov
pop
cmp
cmp
(bad)
out
aas
das
mov
xor
push
sar
jecxz
js
call
sbb
dec
lods
and
call
jbe
xlat
outs
sub
cmp
sub
in
pusha
sub
imul
icebp
jb
bound
out
hlt
mov
(bad)
out
inc
out
dec
out
rcr
jecxz
aas
out
ss
mov
mov
pop
jl
adc
xchg
mov
jecxz
out
cmp
sti
sbb
xchg
je
cmp
test
jg
mov
sbb
xor
shl
hlt
cmp
mov
inc
(bad)
fwait
leave
sar
in
mov
xchg
sub
jno
lock
rcr
mov
ins
cmp
and
jo
sbb
rcr
or
pop
mov
adc
add
std
adc
arpl
adc
xor
jns
add
jl
(bad)
nop
pop
mov
pop
pusha
push
mov
(bad)
or
fwait
aaa
lods
jne
rol
mov
and
xchg
call
cs
or
pop
mov
dec
mov
sbb
aaa
cmp
push
imul
and
xchg
jp
and
xor
fld
dec
dec
sti
ds
imul
cmp
outs
(bad)
xchg
xchg
adc
mov
adc
xchg
mov
jnp
sub
aad
jg
jle
call
and
dec
jo
in
push
dec
jb
xor
enter
xlat
and
retf
inc
mov
jmp
fisttp
xor
jae
fsubr
std
pop
pop
cli
xchg
sti
xlat
jmp
push
mov
dec
scas
cdq
inc
je
scas
cmp
fs
in
sahf
aam
test
cmp
jno
xchg
mov
xchg
hlt
sub
pop
mov
repz
or
dec
and
inc
pop
mov
pop
outs
aam
xor
pop
xor
arpl
adc
sar
(bad)
call
repz
fcom
add
or
and
mov
xchg
inc
xor
inc
ins
data16
adc
inc
sub
cmp
ss
fidiv
add
fiadd
mov
sub
push
push
adc
and
pop
sub
jae
xchg
sub
imul
jne
mov
xchg
inc
(bad)
aad
push
test
adc
add
(bad)
jmp
sbb
add
jo
popf
jno
mov
adc
call
xor
adc
mov
lock
or
fwait
popa
push
push
dec
(bad)
dec
arpl
pushf
jno
push
inc
jo
shl
imul
jb
(bad)
inc
leave
fistp
pop
call
mov
mov
ss
test
je
push
mov
push
xchg
cmp
test
push
loope
lahf
push
mov
cld
adc
dec
cmp
jo
mov
cmp
fucom
aas
shr
call
push
xchg
inc
and
inc
or
jno
scas
cmp
jne
ins
pop
inc
mov
pushf
out
ins
jb
retf
cli
in
lds
popf
pop
lds
ins
arpl
outs
cmc
cli
fisub
sub
lods
out
mov
ja
jno
xchg
mov
mov
dec
ret
sub
ror
push
sbb
fucom
mov
jb
and
into
pop
rcr
push
cmp
pop
dec
js
sub
pop
xchg
lea
imul
or
daa
aad
xor
je
xor
stos
xor
push
dec
adc
mov
lock
mov
or
dec
push
xor
pop
in
sar
aam
imul
out
mov
add
retf
aas
aas
ret
sbb
lock
jbe
aad
jl
ficomp
dec
mov
jmp
bound
popf
jle
daa
pop
fwait
je
xor
cmps
xchg
ss
push
dec
dec
bound
aaa
stos
gs
adc
cmp
lods
rol
and
push
je
outs
in
repz
out
mov
pusha
imul
out
inc
mov
cmp
push
ret
push
rcr
mov
js
xor
sub
sbb
and
jg
fisttp
push
xor
or
xchg
pop
or
(bad)
cs
add
push
(bad)
dec
repnz
push
mov
sub
dec
cld
pop
fiadd
cmps
inc
neg
std
fbstp
and
push
pop
imul
pop
and
xchg
mov
es
lock
sahf
push
dec
call
call
aam
mov
inc
aam
stos
aam
(bad)
pop
xor
mov
jns
movs
and
xchg
xor
jne
push
loope
cs
pusha
jbe
inc
cwde
movs
push
test
movs
imul
jp
test
mov
jp
pop
pop
loop
repz
das
popa
mov
dec
mov
xchg
xchg
mov
mov
mov
jp
(bad)
push
add
cs
or
and
dec
dec
rcr
rcr
add
or
outs
pop
jae
add
or
pop
icebp
hlt
dec
fmul
mov
repz
inc
into
add
add
xlat
jne
mov
pop
sub
retf
xchg
sub
mov
(bad)
fadd
xchg
stc
outs
in
and
sub
inc
outs
mov
pop
push
mov
pop
xor
pop
outs
mov
stos
push
jo
cmp
cmp
mov
bound
pop
shl
xchg
add
ins
frstor
retf
pusha
(bad)
pop
fsubr
xor
sub
loopne
mov
(bad)
jmp
mov
xor
pop
dec
push
mov
aad
int3
(bad)
rcl
mov
aam
nop
shl
loop
adc
sbb
enter
sub
xchg
loop
mov
xchg
jmp
sub
out
add
fbld
fistp
push
mov
mov
pop
or
pop
enter
mov
jb
call
arpl
inc
popf
sub
test
or
nop
fimul
and
and
je
sub
mov
(bad)
mov
int3
cmp
add
push
inc
jmp
mov
rol
mov
mov
add
ret
or
mov
jo
loopne
mov
pop
pop
test
pop
fwait
movs
std
sbb
or
jae
sbb
mov
inc
sar
pushf
ds
jae
sbb
mov
push
inc
test
in
cld
mov
dec
fisub
sub
push
or
mov
add
sub
jo
dec
sti
loop
imul
inc
and
push
loop
dec
(bad)
icebp
out
jns
sbb
cmps
jb
ja
clc
mov
pop
push
mov
out
movs
arpl
push
loop
dec
cmp
mov
or
outs
xor
icebp
gs
pop
cli
mov
fs
inc
push
pusha
sub
cmp
push
push
gs
add
xlat
retf
add
sub
xchg
push
popa
add
push
jg
aaa
ss
(bad)
mov
add
es
push
call
or
loope
mov
xchg
dec
xchg
cwde
cli
ror
xor
pop
pusha
pop
loopne
and
in
pop
ds
fbld
xchg
(bad)
js
repz
mov
jo
sub
mov
ret
mov
pop
loope
fisub
and
pop
mov
repnz
lock
add
push
cmp
adc
dec
mov
and
sub
retf
fstp
sbb
xchg
mov
loopne
lds
xchg
mov
mov
icebp
add
fdivr
xor
mov
js
cwde
cmc
adc
mov
loopne
imul
test
(bad)
jns
(bad)
fdiv
mov
push
xchg
idiv
or
jbe
std
pop
pop
mov
(bad)
cmp
mul
arpl
cmc
jecxz
sub
push
(bad)
jae
(bad)
(bad)
push
movs
add
