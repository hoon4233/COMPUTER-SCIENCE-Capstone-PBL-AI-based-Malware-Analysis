push
mov
sub
push
mov
push
push
mov
xor
or
push
mov
mov
call
test
je
mov
mov
or
mov
mov
cpuid
mov
mov
mov
mov
mov
xor
xor
xor
mov
mov
cpuid
mov
mov
mov
or
or
mov
jne
and
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
or
mov
mov
jmp
mov
mov
mov
cmp
jge
xor
mov
jmp
mov
cpuid
mov
test
je
or
mov
mov
test
je
mov
mov
or
test
mov
je
test
je
and
cmp
jne
mov
mov
or
test
mov
je
or
mov
mov
pop
pop
xor
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xadd
dec
test
jg
mov
mov
push
mov
call
mov
mov
pop
mov
mov
pop
ret
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
mov
lea
call
mov
lea
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
push
mov
call
mov
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
add
mov
mov
push
mov
call
mov
mov
mov
mov
pop
mov
mov
pop
ret
push
mov
push
push
mov
push
mov
sub
push
mov
lea
mov
mov
mov
call
mov
lea
mov
call
mov
lea
mov
call
mov
mov
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
mov
mov
lea
mov
mov
call
xor
mov
lea
mov
mov
call
or
mov
lea
mov
mov
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
push
mov
call
mov
mov
call
mov
call
mov
push
call
mov
movzx
push
push
lea
call
mov
mov
pop
mov
pop
mov
mov
pop
ret
push
mov
push
push
mov
push
mov
push
push
mov
mov
mov
mov
lea
call
mov
mov
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
call
mov
mov
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
mov
mov
call
test
je
push
call
add
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
mov
call
mov
pop
mov
mov
pop
ret
int3
push
mov
push
mov
mov
mov
sub
mov
sub
mov
sub
or
jge
push
mov
call
mov
pop
pop
ret
int3
int3
push
mov
cmp
jb
mov
push
call
add
xor
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
test
mov
je
cmp
je
push
mov
movzx
test
je
nop
movzx
push
push
call
add
test
je
movzx
add
test
jne
mov
cmp
je
sub
mov
push
mov
sar
call
mov
mov
sub
lea
push
lea
push
push
push
call
push
call
add
push
mov
call
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
test
push
mov
mov
jne
call
pop
pop
mov
pop
ret
push
mov
test
jne
push
call
mov
mov
sub
mov
sub
mov
sub
sar
or
mov
jge
push
mov
call
cmp
mov
lea
push
ja
lea
push
push
push
call
jmp
mov
push
push
push
call
add
test
pop
jl
mov
mov
cmp
jg
mov
mov
mov
pop
pop
mov
pop
ret
int3
int3
push
mov
push
mov
push
mov
mov
mov
sub
mov
sub
sub
or
jge
push
mov
call
test
jl
mov
cmp
jg
mov
mov
pop
mov
pop
pop
ret
push
call
int3
int3
push
mov
push
mov
test
push
push
mov
jne
push
call
mov
push
push
call
mov
mov
mov
sub
mov
sub
sub
add
or
jge
push
mov
call
mov
mov
push
push
lea
push
push
call
add
test
jl
mov
cmp
jg
mov
mov
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
xor
mov
lea
mov
mov
call
mov
mov
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
mov
mov
cmp
jb
mov
push
call
add
mov
mov
mov
mov
mov
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
cmp
jb
mov
ret
lea
ret
int3
int3
push
mov
push
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
push
xor
cmp
mov
mov
je
mov
lea
lea
mov
add
cmp
jne
sub
sar
cmp
mov
jne
pop
pop
xor
pop
mov
pop
ret
mov
cmp
je
lea
jmp
lea
mov
add
cmp
jne
sub
sar
mov
jmp
mov
mov
mov
lea
cmp
mov
jae
lea
push
push
call
add
test
je
mov
mov
lea
push
push
add
call
add
test
jne
test
je
mov
lea
mov
add
test
jne
sub
sar
jmp
xor
lea
cmp
jb
test
mov
jle
mov
sub
mov
imul
mov
mov
add
cmp
mov
mov
mov
jg
mov
mov
mov
sub
mov
sub
or
jge
push
mov
call
mov
lea
cmp
mov
mov
mov
jae
jmp
lea
mov
mov
push
push
call
mov
add
test
je
mov
add
jmp
lea
mov
mov
sub
lea
sar
sub
sub
lea
push
lea
push
push
push
call
push
call
mov
push
push
push
push
call
push
call
mov
add
sub
lea
add
mov
push
push
mov
mov
call
mov
mov
add
test
jne
mov
mov
test
je
mov
lea
mov
add
test
jne
sub
sar
jmp
xor
lea
cmp
mov
jb
mov
test
jl
mov
cmp
jg
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
call
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
mov
mov
sub
sub
or
jge
push
mov
call
mov
lea
push
push
call
add
test
jl
mov
cmp
jg
mov
mov
mov
pop
mov
pop
ret
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
shr
push
mov
add
mov
movzx
push
push
push
call
test
je
push
push
push
call
mov
add
test
jne
pop
pop
xor
pop
pop
ret
mov
movzx
sub
mov
sub
mov
sub
or
jge
push
mov
call
movzx
cmp
lea
jne
mov
lea
mov
add
test
jne
sub
sar
add
lea
mov
push
push
lea
push
push
call
push
call
add
test
jl
mov
cmp
jg
mov
mov
pop
mov
pop
mov
pop
pop
ret
push
call
int3
int3
int3
int3
int3
int3
push
mov
push
mov
test
jne
xor
push
push
call
pop
pop
ret
mov
push
lea
nop
mov
add
test
jne
sub
pop
sar
push
push
call
pop
pop
ret
int3
int3
int3
int3
push
mov
push
mov
mov
test
je
cmp
je
push
mov
movzx
push
xor
test
je
jmp
mov
movzx
push
push
call
add
test
je
test
jne
mov
jmp
xor
movzx
add
test
jne
test
je
sub
mov
sar
push
call
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
mov
mov
mov
lea
sub
cmp
je
cmp
push
lea
jl
mov
cmp
jne
push
call
mov
add
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
add
pop
mov
mov
pop
pop
pop
ret
mov
push
push
mov
call
pop
mov
pop
pop
pop
ret
push
mov
push
mov
push
push
mov
cmp
mov
jae
call
mov
mov
sub
cmp
jae
mov
mov
cmp
jne
push
add
push
mov
call
push
push
mov
call
pop
mov
pop
pop
pop
ret
cmp
jbe
call
mov
mov
cmp
jae
mov
push
push
mov
call
mov
test
jbe
cmp
jb
mov
jmp
test
jne
cmp
mov
jb
mov
pop
mov
mov
pop
pop
pop
ret
lea
pop
mov
mov
pop
pop
pop
ret
add
cmp
lea
jb
mov
jmp
mov
mov
push
add
push
mov
push
push
call
add
cmp
mov
jb
mov
mov
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
cmp
push
lea
jb
mov
jmp
mov
mov
cmp
jb
cmp
jb
mov
jmp
mov
mov
add
cmp
jbe
cmp
jb
mov
mov
push
sub
push
push
mov
call
pop
pop
pop
pop
ret
mov
cmp
jbe
call
mov
mov
cmp
jae
mov
push
push
mov
call
mov
test
jbe
mov
cmp
jb
mov
jmp
test
jne
cmp
mov
jb
mov
pop
mov
pop
mov
pop
pop
ret
mov
push
push
push
push
call
add
cmp
mov
jb
mov
mov
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
lea
push
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
push
mov
xor
cmp
je
xor
cmp
mov
jbe
push
lea
mov
mov
test
mov
je
mov
lea
mov
mov
mov
sub
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
sub
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
test
mov
jne
mov
add
cmp
mov
jb
xor
pop
mov
push
call
mov
add
mov
mov
mov
call
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
xor
cmp
je
cmp
jbe
push
lea
mov
mov
test
mov
je
lea
mov
mov
sub
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
test
mov
jne
add
cmp
jb
xor
pop
mov
imul
mov
mov
hlt
xchg
push
sbb
add
mov
mul
add
and
cmp
inc
push
pop
gs
push
sbb
inc
popf
call
pop
or
sub
xchg
repnz
shl
xchg
mov
int
std
scas
in
jmp
mov
out
and
xchg
xchg
inc
push
std
movs
(bad)
lods
mov
cdq
adc
jg
jl
mov
int3
cmp
test
retf
iret
lods
js
mov
sub
add
xor
dec
cwde
xor
sbb
fdiv
leave
nop
sbb
pop
mov
jle
outs
out
cmps
rcl
pop
dec
xor
lahf
jbe
mul
jecxz
push
xchg
lds
out
sbb
cdq
aad
jne
arpl
sbb
mov
aad
jo
cmps
jmp
test
and
jnp
xor
add
inc
call
movs
repz
lods
mov
popf
xchg
mov
ins
in
popa
sti
adc
dec
mov
sub
cld
popf
int
shl
dec
clc
in
or
and
test
das
xor
adc
leave
scas
mov
lds
jecxz
jo
push
cmp
cmp
add
leave
test
xor
sub
or
ins
loop
xchg
pop
test
shl
lahf
cmp
and
jb
inc
jno
cld
sub
lods
loop
imul
mov
ds
add
or
pop
or
mov
shl
add
jb
mov
xor
sbb
lea
mov
inc
aam
and
cli
add
outs
call
movs
jb
push
jge
mov
mov
cmps
pop
cld
lods
sub
(bad)
mov
and
jge
sbb
stc
jae
aad
mov
mov
ret
xchg
pop
add
xchg
and
mov
xor
jns
les
popf
sbb
mov
imul
rcr
popf
sti
xor
movs
xchg
mov
dec
sub
test
pop
push
popf
cs
pop
push
sbb
inc
sub
xor
fldenv
fild
aad
fldenv
not
inc
int
mov
jne
cmp
pop
push
sahf
jo
stos
mov
pop
fnstenv
jne
hlt
sub
ins
pop
xor
mov
dec
sub
jnp
out
jno
retf
in
sbb
aaa
mov
sub
jge
push
sbb
mov
mov
in
ins
neg
fnstsw
inc
movs
les
fisubr
xor
fmul
jmp
icebp
xchg
icebp
movlps
lea
movs
jmp
fnstsw
jae
ins
add
test
push
mov
pushf
and
mov
add
in
gs
(bad)
aad
nop
(bad)
daa
pop
add
push
jno
fist
cmc
xlat
cmp
lahf
fld
and
dec
je
cwde
aad
and
popa
mov
inc
inc
xor
fstp
pop
ja
imul
push
or
js
inc
pop
push
repnz
inc
sub
jae
dec
xlat
daa
push
popa
push
icebp
pop
jbe
or
mov
mov
movs
mov
lock
jno
or
fldcw
fisttp
jne
es
call
push
outs
loope
jnp
add
fidiv
adc
cmp
shl
pop
nop
mov
sbb
xchg
mov
cmps
ror
dec
xor
sub
add
mov
call
test
addr16
cmp
icebp
jo
ss
pop
lods
mov
scas
popa
pushf
aam
or
in
mov
adc
pop
scas
(bad)
call
or
dec
pop
mov
pop
push
and
cmp
sub
je
lock
sub
gs
lea
sbb
ret
lea
cwde
add
sbb
sti
daa
mov
adc
jne
mov
(bad)
cmp
pusha
and
int
cmp
cmp
adc
mov
pop
mov
cwde
aaa
in
out
ins
xchg
imul
jb
test
mov
(bad)
push
stos
dec
mov
fild
imul
dec
and
and
test
jg
imul
mov
shr
loopne
adc
and
dec
push
xor
or
retf
scas
test
xchg
pushf
add
mov
loope
rol
or
jmp
cmp
pmulhw
and
sbb
jno
mov
inc
add
and
iret
or
cmp
fstp
xor
mov
cwde
push
jbe
ffree
call
dec
mov
sbb
fs
call
and
or
ret
js
les
fldenv
pop
mov
pop
out
jge
jmp
push
mov
push
in
into
mov
loope
push
inc
push
shl
and
xlat
inc
stos
mov
into
inc
cdq
mov
(bad)
jp
jecxz
or
mov
xchg
cmp
je
jecxz
pop
pop
test
aad
cli
mov
inc
dec
hlt
in
movs
sub
cmps
or
int
aaa
lds
cwde
dec
jb
jmp
sbb
mov
idiv
stos
mov
xchg
adc
pop
cmc
cmps
pop
adc
jge
jl
or
add
sti
stos
arpl
iret
jmp
lods
cmp
gs
popa
pop
stc
inc
lock
cmp
mov
mov
and
fldcw
mov
or
stos
pop
dec
inc
xchg
pop
push
xor
ret
inc
sahf
jmp
out
adc
adc
push
jp
or
fxam
xor
add
movs
inc
ds
in
(bad)
sub
sar
sbb
add
jl
cmc
cmps
adc
dec
into
fld
out
fdivr
xor
pop
cmp
add
jne
push
sub
push
mov
add
cmp
mov
jge
jno
scas
dec
fs
xor
test
in
cmp
call
je
iret
shl
test
outs
cmc
dec
ins
rcr
popa
sbb
call
shr
sbb
or
adc
pop
jl
inc
xchg
into
ret
xchg
cmps
jl
ficomp
mov
ja
out
aas
jbe
jnp
dec
sub
mov
getsec
xor
imul
or
int
aas
jecxz
sar
sbb
test
int3
lds
sub
sti
jl
aas
ins
mov
add
in
es
xlat
lahf
mov
fbld
xchg
addr16
xchg
icebp
xor
sub
dec
outs
js
test
xchg
adc
mov
std
jecxz
jns
inc
pop
xor
mov
aaa
js
movs
retf
in
aad
add
icebp
mov
dec
mov
cli
prefetch
pop
test
pop
xchg
int
mov
xchg
and
cli
jecxz
cld
push
fnstsw
scas
sub
xchg
dec
mov
add
loopne
inc
test
ins
bound
inc
mov
adc
mov
sub
aaa
outs
jbe
sbb
ja
rcl
inc
dec
icebp
(bad)
int
sbb
jbe
(bad)
and
sar
mov
adc
push
movs
xchg
dec
fprem1
push
fisttp
into
popf
pop
mul
pop
add
dec
(bad)
cmps
cmp
xor
lahf
imul
movs
rcl
push
(bad)
std
imul
push
and
imul
jmp
or
or
int
(bad)
lea
fsub
rcl
mov
jge
and
pop
mov
push
dec
addr16
pop
dec
fnstenv
enter
call
sbb
add
leave
(bad)
hlt
jmp
xor
add
dec
(bad)
add
cmp
add
cmp
mov
mov
loope
shl
cmps
js
adc
in
test
pop
int3
push
lods
mov
adc
rcr
lock
test
mov
cmp
sub
push
lahf
inc
dec
das
inc
and
mov
cmc
cmp
enter
imul
ss
xchg
fidivr
cwde
rcl
sahf
shl
jae
in
clc
xor
and
sbb
mov
add
pop
mov
sub
jmp
mov
cmp
xchg
jge
aad
cmc
pop
xlat
in
xor
scas
leave
xor
ins
jne
clc
ret
outs
xchg
scas
inc
xchg
(bad)
popa
add
cs
sti
inc
dec
jmp
in
mov
mov
add
pop
jns
repnz
push
and
test
xchg
stos
jb
pop
or
push
adc
in
popf
out
int
aad
in
icebp
out
in
and
pop
js
mov
jl
dec
add
leave
in
call
and
and
push
and
xchg
cld
sub
add
push
push
xor
jns
mov
not
pusha
in
sub
mov
shl
adc
sbb
xchg
jb
jae
sbb
dec
mov
(bad)
fild
mov
(bad)
ins
mov
enter
mov
outs
addr16
cli
daa
cmc
xor
call
mov
jg
loopne
or
pop
sahf
add
sub
in
rol
out
pusha
add
jnp
stos
adc
jmp
inc
jno
xlat
test
inc
test
sbb
mov
test
clc
push
mov
out
in
dec
dec
jnp
inc
and
add
mov
mov
and
addr16
nop
sub
or
clc
mov
popf
mov
jmp
push
mov
fdivr
imul
adc
xchg
pop
mov
movs
ffreep
arpl
icebp
mov
add
adc
mov
xor
sub
mov
lea
test
push
add
test
add
ss
inc
or
rcl
jge
cmps
add
dec
gs
mov
movs
ficomp
in
les
iret
retf
push
cmps
out
jp
pushf
gs
scas
dec
or
xchg
test
fadd
in
outs
pusha
mov
pop
in
cmp
fs
inc
out
inc
popa
lea
in
loopne
arpl
les
or
fcmovu
push
in
retf
out
sbb
xchg
mov
adc
pop
(bad)
sti
mov
sbb
dec
jl
inc
push
pushf
pop
and
clc
cdq
xchg
fisttp
(bad)
(bad)
lds
iret
mov
jnp
pop
adc
push
stos
js
fs
das
pop
or
jecxz
dec
push
dec
clc
mov
xor
ror
jmp
add
adc
dec
adc
push
(bad)
jp
adc
xor
iret
shl
loop
mov
jmp
sub
pop
mov
loope
mov
icebp
cdq
or
pushf
inc
inc
xor
and
lea
xor
lods
cld
sub
int3
mov
jnp
fs
and
cmp
(bad)
movs
mov
mov
jle
in
ficom
sbb
jmp
mov
leave
inc
leave
addr16
sbb
pop
mov
adc
mov
pop
push
xor
adc
sbb
push
movs
in
test
or
mov
mov
std
sahf
jmp
push
xchg
push
into
std
mov
xor
loope
mov
dec
inc
sbb
je
ss
adc
in
inc
cs
or
sub
xchg
pop
jl
cs
inc
xchg
aad
ret
dec
dec
and
sbb
fld
xchg
pushf
es
xchg
sub
pushf
arpl
inc
rcl
daa
mov
cdq
fld
mul
fsubr
mov
add
movs
out
add
pop
bound
cmp
leave
sbb
inc
cli
stos
sub
clc
das
pop
adc
mov
fwait
add
and
jbe
fist
(bad)
sbb
mov
mov
mov
call
xchg
mov
fwait
pushf
mov
mov
aam
inc
clc
jo
and
sti
and
adc
dec
bound
inc
test
cli
icebp
pop
aad
pop
pop
enter
xor
ja
sbb
pop
cs
lock
ret
mov
test
adc
cmp
mov
fist
mov
out
add
adc
loop
push
lods
rcl
stc
rcl
bswap
inc
xor
daa
cmc
pop
and
jge
rol
lea
imul
imul
push
xchg
test
or
jmp
xchg
or
(bad)
mov
or
shl
stc
xlat
sbb
xor
stc
test
dec
sub
xchg
test
enter
int
out
or
mov
rol
es
add
and
dec
sti
arpl
and
xchg
xchg
mov
je
(bad)
sbb
push
xor
xor
dec
jmp
xor
push
pop
xchg
dec
cmps
and
das
(bad)
in
jmp
mov
dec
ret
fimul
lea
sub
ret
mov
dec
fisttp
gs
or
shl
cmp
xchg
(bad)
jmp
lock
icebp
cmc
sub
cmp
sbb
push
xor
jle
xchg
lahf
sahf
pop
int
mov
push
inc
push
jne
sti
fst
push
sub
mov
mov
pop
adc
movs
sbb
or
stos
jns
inc
enter
inc
sti
je
cmp
fbstp
inc
push
fiadd
sahf
or
sub
stc
movs
mov
cmp
arpl
push
mov
(bad)
scas
cli
(bad)
jmp
movs
aad
add
leave
lods
(bad)
sub
push
adc
mov
test
and
push
mov
pop
sbb
lock
cmp
jg
ficom
push
and
fucomi
and
push
push
or
in
mov
pop
into
mov
sub
pusha
imul
mov
cmp
mov
inc
cmc
jmp
lahf
das
rcr
enter
push
inc
dec
jo
inc
test
push
mov
ret
xlat
xor
dec
icebp
jmp
test
jne
xor
xor
fidiv
or
hlt
(bad)
in
xchg
or
inc
cdq
pop
and
sbb
inc
jae
xchg
cmps
scas
xchg
xchg
ins
movs
sbb
enter
push
dec
in
pop
sub
imul
add
or
dec
test
aam
xchg
xor
dec
push
shr
sub
xchg
fmul
pop
mov
stc
inc
fnstcw
xchg
loope
lods
push
push
add
daa
and
ds
imul
movs
test
push
jno
inc
test
les
fs
pop
cmps
imul
xchg
out
ds
outs
out
mov
imul
or
mov
jmp
icebp
dec
cmp
push
mov
push
pop
rol
or
mov
cmp
js
dec
or
test
rcr
test
inc
dec
cs
push
daa
pop
pop
xchg
mov
jecxz
pop
adc
sub
push
movs
adc
push
or
xchg
sub
jmp
dec
cwde
fwait
pop
repnz
cmp
jmp
fild
pusha
and
mov
std
mov
mov
sub
addr16
inc
sahf
jbe
popw
xchg
aam
cmps
repnz
popa
enter
mov
push
or
test
dec
mov
push
mov
ins
mov
sti
mov
rcl
popa
add
out
xchg
mov
fwait
rcr
xchg
popa
test
xor
add
(bad)
das
cld
jo
je
sar
xchg
jns
std
xchg
xor
xchg
(bad)
mov
mov
ins
push
repnz
rcl
inc
stos
aam
adc
pop
(bad)
cmp
mov
inc
xchg
les
(bad)
loope
xchg
enter
aad
xor
daa
movs
daa
xor
jp
mov
test
call
mov
xchg
sub
push
cmp
adc
sub
add
test
arpl
sbb
and
addr16
ins
add
mov
outs
jmp
adc
inc
jmp
pusha
sahf
push
mov
cmp
jbe
mov
loopne
jnp
mov
mov
pop
push
cmp
jne
mov
les
test
rol
daa
fwait
aam
hlt
leave
and
dec
dec
adc
nop
cmps
das
push
jmp
gs
fldcw
mov
test
and
adc
mov
ret
(bad)
adc
cmc
xchg
jp
scas
std
(bad)
sub
push
sub
movs
lods
out
fwait
mov
xchg
fidiv
jmp
aam
out
mov
into
add
pop
and
pop
shr
pop
neg
movs
aad
sub
push
sbb
and
sbb
popf
sbb
movs
xchg
mov
and
mov
mov
daa
add
stc
sub
sub
inc
or
stc
jns
and
xchg
ins
mov
mov
xchg
lds
inc
(bad)
pop
lahf
mov
shl
pop
jb
repz
push
fdiv
mov
mov
mov
cmp
sbb
xlat
test
add
sub
(bad)
stos
movs
cmp
call
jne
pop
fidivr
(bad)
bsr
in
cmp
mov
cmp
pop
xor
xor
fwait
or
ret
jp
mov
imul
fimul
stc
in
cmp
fs
jns
add
jbe
lock
or
mov
jmp
push
mov
js
xor
inc
into
push
je
ss
or
(bad)
outs
(bad)
pop
int
loope
repz
shl
clc
loopne
add
aam
inc
not
mov
sbb
out
cli
(bad)
shr
mov
les
cmps
aaa
xchg
mov
xor
jb
sub
addr16
leave
ror
in
rcr
lock
daa
test
mov
push
mov
fprem1
lock
hlt
pop
inc
mov
sub
inc
lods
jne
adc
inc
sub
popa
data16
call
jnp
call
in
aas
(bad)
push
xlat
addr16
stc
xor
xor
shr
and
mov
retf
movs
mov
lahf
test
(bad)
daa
push
pop
es
cmp
xor
push
bound
sub
fs
mov
fwait
rol
das
inc
ins
and
int3
pop
jge
cdq
sar
and
dec
jmp
sbb
jecxz
dec
inc
inc
out
mov
push
xor
mov
leave
ins
mov
and
push
in
mov
(bad)
cmp
xor
leave
test
test
cmc
xor
jo
mov
mov
or
jmp
fstp
jg
jnp
imul
in
fisttp
jbe
jg
pop
jl
push
inc
sbb
shl
loopne
sbb
xchg
jl
test
add
pop
retf
call
push
jo
adc
cld
es
xchg
cwde
mov
fs
jecxz
push
test
test
add
or
sbb
jbe
test
jge
and
xor
pop
test
xabort
sbb
aas
xchg
and
dec
ds
in
inc
fst
aaa
mov
xor
inc
mov
dec
cmc
xchg
stos
pop
push
mov
addr16
xor
sub
iret
aaa
and
pop
sub
in
retf
dec
ins
les
shl
mov
enter
cmp
(bad)
mov
or
inc
push
ret
dec
mov
push
mov
cmp
sbb
sti
and
sahf
jl
jle
cmp
(bad)
sbb
cmp
movs
xchg
mov
cld
fwait
(bad)
jmp
mov
(bad)
je
pop
adc
and
or
sbb
mov
sar
jmp
adc
and
aad
or
sub
mov
rcr
and
dec
scas
add
mov
mov
xchg
sub
inc
fcom
mov
lods
sub
imul
aam
mov
mov
ins
sbb
js
mov
xchg
js
je
imul
sbb
push
(bad)
(bad)
out
xchg
enter
xchg
or
sbb
mov
daa
pop
pop
push
les
mov
xchg
mov
pop
inc
adc
xor
pusha
pop
cs
sub
pop
pop
test
je
into
push
adc
or
and
and
popa
and
test
jmp
ret
jmp
fnstsw
movs
enter
out
stos
adc
mov
std
pop
mov
(bad)
push
dec
loop
cdq
push
or
mov
fadd
xor
xchg
jecxz
xchg
push
fadd
aas
aaa
sub
test
addr16
dec
in
lods
(bad)
aas
mov
loopne
test
mov
enter
(bad)
mov
and
push
jns
ret
jb
xor
mov
inc
cdq
sub
test
mov
or
push
hlt
(bad)
mov
adc
aad
fucom
and
cdq
sbb
xor
arpl
ficom
mov
push
sbb
cdq
add
xchg
dec
add
xor
cs
pop
rcl
fs
mov
(bad)
push
pop
push
leave
ror
(bad)
pop
jo
and
lods
addps
ficomp
pop
mov
xlat
js
std
aam
fstp
sub
lds
fs
gs
jnp
cli
xor
cld
push
dec
mov
and
aad
hlt
cmc
js
mov
shr
scas
addr16
sub
fwait
loop
inc
mov
imul
hlt
jne
cmps
test
or
mov
pop
xchg
push
lods
fs
pop
push
xlat
cmc
xchg
mov
imul
sti
lods
call
aaa
jbe
xor
nop
fmul
je
lock
int3
mov
fist
cmp
jecxz
sub
lea
push
movs
add
stc
xchg
movs
xchg
mov
sub
in
jl
cmp
push
ret
mov
pop
mov
cmps
jno
mov
mov
fisttp
shr
out
jo
dec
xor
icebp
call
bound
xor
sti
jge
inc
mov
leave
fdivr
loope
js
mov
jmp
ret
xchg
test
sbb
pop
int
cmp
cli
sbb
xor
lods
adc
out
call
dec
dec
sar
mov
inc
sbb
push
call
or
out
rcr
mov
neg
mov
cmp
dec
cmps
(bad)
mov
fild
or
ins
jge
mov
cmps
mov
loopne
add
loop
mov
inc
cwde
mov
into
mov
sub
sbb
fcom
adc
lds
stc
int3
jb
inc
add
repz
mov
in
ror
jle
mov
repnz
jae
sub
jo
add
stc
jle
lock
in
push
movntq
outs
shl
rol
jae
jnp
mov
mov
cmp
xchg
or
mov
jbe
or
fld
das
pop
sub
push
cmp
pop
mov
int
out
or
hlt
imul
xchg
movs
fwait
out
(bad)
jg
idiv
je
mov
cmps
in
stc
pop
call
adc
mov
ds
xchg
jmp
xchg
popf
jae
ss
push
dec
aam
adc
popa
aaa
(bad)
cmp
sbb
stc
ficomp
dec
sbb
cmps
xchg
test
ins
es
and
pop
mov
mov
addr16
inc
clc
icebp
fbld
pop
std
arpl
inc
push
retf
fdiv
pop
inc
inc
(bad)
stos
std
cmc
(bad)
(bad)
cdq
icebp
enter
scas
pop
sub
lock
(bad)
fidiv
mov
and
sbb
cdq
test
mov
aad
push
sub
es
adc
js
cmp
adc
dec
xchg
mov
xchg
sbb
or
not
jns
pop
cmp
jne
xchg
mov
aad
(bad)
sub
xor
xor
es
push
jne
arpl
xchg
inc
movs
push
jecxz
sbb
add
push
enter
mov
xor
(bad)
sbb
xchg
and
dec
stc
xchg
lds
pop
test
xor
sub
adc
xor
adc
mov
push
cmp
pop
mov
pop
or
xchg
adc
fsub
popa
xchg
nop
fsubr
stos
ds
xchg
call
rcr
add
or
and
stos
movs
mov
adc
popa
add
fadd
ja
lea
cmp
call
push
cmps
pop
cmp
add
mov
adc
sbb
mov
es
stos
and
pop
push
mov
jno
loope
leave
mov
aam
clc
push
or
xlat
cs
sbb
and
test
jne
shr
jmp
lock
add
gs
pop
out
mov
xor
and
jmp
aas
dec
dec
add
mov
hlt
in
popf
mov
lods
add
pop
mov
inc
cwde
xor
push
mov
push
out
mov
mov
leave
cs
out
stc
sub
xlat
in
dec
jmp
jmp
(bad)
(bad)
loope
movs
sbb
mov
pop
sbb
leave
and
mov
push
enter
test
cmps
mov
ror
sub
adc
pop
sub
mov
aad
gs
lock
add
sub
gs
inc
fs
push
xchg
leave
leave
lods
into
sti
or
sbb
push
pushf
and
mov
pop
outs
out
iret
test
xchg
int3
sbb
test
popf
lahf
test
cmp
jmp
push
cmp
cmp
cmp
test
shl
or
push
in
(bad)
aam
xor
loop
fbld
xor
jae
mov
jns
or
push
sbb
jmp
xchg
lea
lds
div
icebp
sti
aam
and
sub
sbb
xchg
imul
ss
xor
sub
lock
push
pop
jmp
scas
inc
icebp
shl
push
(bad)
cwde
je
add
pushf
mov
test
test
sbb
aam
aad
ret
outs
call
mov
test
retf
mov
and
jmp
call
xchg
lods
stc
xlat
jnp
int3
jne
test
push
iret
ins
mov
cli
and
mov
retf
hlt
jp
icebp
add
movs
or
add
ins
and
rcr
xor
adc
lea
mov
inc
mov
not
cmps
sub
fimul
push
gs
mov
xchg
inc
inc
push
sbb
fnstsw
call
dec
mov
in
mov
xchg
adc
das
mov
lock
dec
add
pop
cdq
adc
ret
call
or
dec
fstp
sbb
sub
adc
jbe
mov
cmp
bound
jmp
daa
inc
cmc
mov
or
mov
jae
pop
imul
adc
fsubp
movs
mov
pop
mov
mov
stc
js
out
sub
adc
jne
ret
mov
aad
test
sub
jmp
jmp
push
xlat
cwde
push
mov
xor
cmp
cld
movs
dec
push
jae
js
push
add
(bad)
jle
push
or
fsub
movd
aaa
cmp
ret
int3
push
xchg
inc
stos
or
pop
sahf
pusha
inc
sbb
and
or
dec
repz
and
imul
sbb
in
inc
ja
fld
dec
inc
mov
jge
stc
jp
mov
cdq
pop
mov
mov
jne
cmc
fst
xchg
and
out
cmp
scas
mov
mov
test
inc
outs
jno
jno
mov
lahf
stc
loope
test
sub
imul
sbb
lods
inc
je
loope
mov
add
mov
and
stc
mov
push
inc
xor
adc
or
xchg
repz
sbb
shl
xor
into
mov
stc
mov
call
test
and
mov
fisttp
or
sar
xor
ins
outs
sub
xlat
sub
push
movs
xor
outs
inc
cld
test
push
adc
xlat
loope
mov
in
(bad)
in
fnstcw
mov
inc
rcr
aaa
xor
mov
xchg
adc
lods
cmp
fs
sub
aad
lds
call
adc
inc
jo
sbb
ins
or
inc
(bad)
fcomp
cmp
lahf
add
add
xor
and
sbb
leave
mov
or
lock
sbb
lods
or
jns
sbb
dec
jne
pop
push
les
pusha
stos
rcl
pop
and
repnz
mov
mov
add
mov
int3
push
ret
adc
jge
dec
cdq
iret
mov
mov
inc
add
pushf
adc
mov
adc
fstp
cmp
pop
jecxz
xchg
cld
pusha
sub
popa
ret
retf
(bad)
pop
hlt
stc
pop
loope
ja
sub
bound
inc
sahf
xor
mov
stc
jp
mov
fstp
add
(bad)
aas
imul
mov
in
stos
gs
dec
sub
or
push
inc
test
dec
out
or
jns
stos
xchg
mov
fmul
ins
(bad)
ret
js
sbb
popa
cmp
xchg
dec
ja
lods
int3
retf
retf
jp
scas
shl
add
repnz
dec
cmp
xchg
or
mov
dec
mov
push
add
pop
jmp
jne
jno
retf
ja
push
adc
call
pop
mov
xor
addr16
out
jecxz
jno
push
mov
scas
(bad)
or
iret
jnp
jae
sub
inc
mov
jne
add
xchg
jnp
mov
(bad)
push
in
gs
(bad)
jns
iret
dec
leave
fcomp
lods
mov
(bad)
adc
hlt
pop
xor
xchg
into
popf
cdq
dec
imul
call
daa
sti
scas
add
test
lds
test
lahf
lods
sub
repz
or
push
add
stc
outs
(bad)
jmp
stos
xchg
and
movs
in
scas
cmps
pop
or
int
shl
cmp
adc
xchg
rcl
ins
xor
and
call
pusha
jl
rep
inc
ret
daa
hlt
mov
shl
push
mov
fld
cmp
sub
inc
adc
ins
cs
mov
ret
ss
and
mov
or
or
enter
out
mov
cmp
(bad)
mov
addr16
jo
xor
je
jg
jae
lds
ret
repz
xchg
add
mov
fstp
clc
sar
dec
sbb
cmp
adc
loopne
loope
jp
pop
mov
mov
lods
mov
push
push
stos
sbb
icebp
xor
jnp
cmp
(bad)
mov
(bad)
enter
sbb
in
adc
or
stc
in
ficomp
push
popa
leave
popf
call
jne
xchg
inc
dec
in
xchg
sub
inc
int
shr
pop
push
retf
adc
imul
and
sbb
ror
mov
and
add
nop
leave
test
fnstenv
addr16
ds
lods
xchg
sub
jb
or
ficom
xor
push
pop
cmps
dec
or
xchg
mov
push
in
test
idiv
inc
clc
add
ja
pop
pop
dec
imul
pop
test
scas
jecxz
push
test
movs
pop
test
arpl
cmp
mov
xchg
(bad)
(bad)
outs
cmp
jne
test
cmp
lahf
mov
inc
add
rol
gs
xor
sub
test
push
adc
mov
mov
lock
mov
add
lods
add
pushf
pop
jg
sub
lods
(bad)
iret
inc
sahf
add
sbb
sub
imul
cmp
xchg
push
and
pop
repnz
int3
popa
mov
cdq
cld
retf
mov
loope
sar
inc
mov
dec
fisttp
jg
(bad)
stc
jle
(bad)
pop
daa
scas
sar
loopne
push
arpl
sti
shl
bound
xchg
mov
sbb
loope
test
pop
call
addr16
and
out
lea
pop
mov
aam
cmc
jne
je
test
out
lock
out
add
pusha
ror
les
cmp
ffreep
std
jmp
clc
inc
ja
cs
push
pop
xchg
ret
dec
dec
mov
cli
dec
xchg
leave
cdq
enter
push
jbe
retf
das
shl
push
jne
mov
mov
xchg
rol
lock
loopne
adc
or
pop
stc
movaps
lea
nop
cmp
in
add
push
js
rcl
inc
sti
jns
lea
add
ret
dec
out
rol
mov
adc
bound
movs
aad
cs
push
scas
std
retf
popf
iret
fcmovbe
add
add
stos
fstp
cmc
sbb
sub
test
mov
sub
mov
dec
test
xchg
movs
dec
outs
stos
lods
aam
hlt
and
cmp
mov
adc
(bad)
adc
shr
test
push
push
cmp
and
or
mov
mov
out
leave
push
das
mov
sbb
xor
iret
or
ret
ret
cdq
aam
fwait
cdq
or
push
xor
fdiv
and
add
fsub
cld
(bad)
dec
fucomp
dec
and
cmp
inc
sbb
and
fwait
stc
xchg
mov
pop
imul
push
js
popa
movs
add
popa
les
push
adc
push
fcomi
in
xor
and
pop
xchg
mov
sub
add
inc
sub
jno
mov
inc
adc
sub
dec
xchg
jne
cmp
dec
fist
xchg
(bad)
outs
shl
jge
xchg
pop
in
cmp
hlt
aaa
aad
out
fcos
sub
jo
je
movs
xchg
or
cmp
inc
(bad)
stc
mov
cmp
xor
mov
jl
ds
adc
cmp
add
loop
hlt
ss
xor
jno
adc
jge
fist
out
or
(bad)
cmp
sub
aas
sbb
push
out
cmp
mov
mov
inc
lds
cmp
sub
xor
xchg
iret
js
mov
fldenv
fdiv
(bad)
js
add
add
jmp
push
popf
push
inc
jns
fwait
xchg
iret
jge
aad
daa
in
xchg
scas
ret
fsubp
(bad)
sub
loope
inc
jne
stc
push
push
adc
cmps
adc
stos
or
data16
test
push
dec
sahf
into
jo
and
pusha
xchg
xchg
lods
add
adc
jecxz
ss
push
sub
mov
pusha
xchg
jp
fwait
mov
mov
and
stc
mov
jle
add
cmp
and
cs
cwde
add
out
push
mov
adc
popf
fisttp
idiv
outs
or
cmp
shl
adc
data16
outs
lods
mov
call
sbb
pop
pop
inc
push
ins
jge
inc
jns
add
xchg
les
outs
sub
enter
or
lods
or
sahf
aas
mov
mov
mov
cdq
cmc
call
pop
pop
es
ins
push
jae
jge
sub
or
pop
dec
push
test
xchg
sub
mov
pop
les
pop
or
call
popa
pop
pop
inc
shl
aaa
test
xchg
dec
mov
mov
mov
inc
xor
mov
clc
or
push
stc
dec
cli
lahf
test
push
xor
daa
daa
mov
jbe
cmp
jp
jnp
fnstenv
rol
or
adc
push
push
fadd
in
jl
hlt
cld
xchg
addr16
in
pop
fcmovnb
and
fdiv
dec
jg
mov
xchg
jnp
xchg
outs
mov
jbe
xchg
div
inc
dec
mov
pop
(bad)
movs
test
or
xor
sub
ror
add
or
jno
cmp
shl
jne
outs
pop
lahf
ins
adc
pop
std
dec
or
mov
mov
ror
lds
test
clc
adc
ins
ret
in
mov
xchg
xor
fwait
mov
enter
mov
pusha
clc
mov
jmp
shl
mov
sbb
sub
movs
jge
(bad)
cmc
xchg
mov
mov
out
pop
mov
jmp
jp
mov
rcl
inc
aad
inc
call
call
dec
aad
(bad)
loopne
fisttp
fwait
mov
mov
xchg
ret
fs
mov
push
dec
fstp
adc
and
sub
out
in
js
and
lds
out
mov
test
repz
pop
inc
out
lods
and
ret
inc
sbb
in
clc
in
inc
js
xor
cmp
pop
xor
fs
sub
sbb
mov
ffreep
int
or
movq
and
add
fdiv
push
xor
pusha
loop
test
cwde
movs
xlat
xor
sub
dec
call
into
ins
mul
mov
xchg
adc
dec
ins
imul
jo
jo
jne
pop
fwait
pop
mov
sbb
sar
sbb
popf
lods
and
or
push
lods
mov
out
xor
arpl
and
cmp
imul
(bad)
or
dec
sti
jle
fwait
xlat
xchg
and
dec
mov
movs
stc
mov
bound
and
fcmovne
arpl
dec
loopne
inc
scas
push
inc
xor
and
popf
retf
sub
adc
movs
(bad)
ins
cli
std
cmp
enter
push
mov
xchg
and
cmps
retf
mov
jg
inc
stc
idiv
clc
mov
and
jo
adc
out
daa
jl
(bad)
je
test
ss
or
js
and
pop
sub
sub
mov
push
sbb
or
mov
cmp
pop
or
lea
and
repz
jne
push
dec
add
mov
mov
inc
scas
rol
add
jmp
in
mov
fwait
inc
pop
xchg
stos
fst
push
ins
mov
aas
cmps
xor
mov
test
push
arpl
or
cmp
(bad)
ins
cmp
xchg
inc
fiadd
pop
jg
xchg
clc
les
jecxz
cmp
sbb
fisttp
pusha
or
popf
je
push
jge
inc
dec
add
sbb
into
stos
pop
pop
iret
or
div
xchg
mov
les
mov
xchg
scas
xchg
dec
sub
jnp
and
xchg
cdq
ror
xor
sub
and
jmp
cmp
sbb
xor
retf
out
test
jmp
xchg
and
and
mov
fstp
and
and
inc
cld
aad
sub
in
scas
mov
lds
xor
hlt
adc
jnp
xor
or
inc
cmp
jbe
popa
jp
mov
mov
scas
in
stc
cmps
clc
sahf
nop
mov
inc
dec
mov
test
gs
fsub
popa
mov
mov
xlat
call
xlat
(bad)
outs
pop
inc
sub
push
std
pop
dec
or
arpl
test
cli
sub
mov
cmp
push
cwde
or
into
jp
gs
loope
jmp
cld
iret
dec
or
cwde
xor
bound
mov
rcr
jne
jns
stc
mov
loopne
xchg
cmc
pop
nop
xor
cmps
add
pop
cmp
adc
cmps
mov
sub
or
gs
dec
shl
in
in
and
pop
mov
mov
sar
cmc
int3
imul
lea
cmc
push
xchg
stc
fmulp
mov
pop
sti
push
je
nop
cmps
jmp
clc
in
test
aad
jge
add
popa
pop
popf
and
int
movs
popa
test
std
and
(bad)
shl
cli
push
or
jbe
jno
xchg
or
and
leave
(bad)
stos
pushf
xchg
xchg
loopne
(bad)
(bad)
and
mov
in
xchg
in
mov
adc
adc
dec
xor
sbb
push
(bad)
fs
fisub
or
fucomi
test
jno
mov
js
or
iret
mov
ror
add
push
mov
retf
mov
cdq
bound
jnp
clc
mov
or
inc
lods
(bad)
lahf
and
call
fcomp
ins
jbe
test
mov
pop
js
lds
push
dec
add
adc
sbb
sbb
jns
pushf
test
(bad)
sbb
iret
call
jno
add
add
inc
test
pop
and
pop
sub
mov
lods
or
mov
gs
adc
ins
loop
out
popa
push
arpl
fdiv
cdq
xchg
sbb
inc
mov
hlt
cli
adc
gs
jne
jmp
and
adc
mov
fst
pop
jecxz
jp
in
test
and
adc
add
int
xchg
scas
fisub
div
xor
sbb
fwait
push
cmp
ret
shl
mov
mov
mov
fcos
pusha
jl
or
ins
or
sub
stos
mov
std
fld
inc
icebp
mov
sub
jecxz
aaa
test
or
jmp
jo
jmp
out
pop
stos
inc
or
or
outs
push
fwait
and
pop
add
clc
in
stc
xchg
sub
mov
ss
and
dec
icebp
ins
arpl
jbe
cmc
sbb
popa
(bad)
bound
cld
mul
int3
mov
cmp
repnz
xor
js
sbb
(bad)
loop
fild
jo
inc
lods
adc
cmp
mov
fwait
in
mov
aas
mov
mov
(bad)
out
push
xor
push
pop
xlat
gs
test
mov
and
das
into
xor
cmp
xchg
adc
cmps
inc
fadd
test
scas
pop
repz
into
push
pop
out
mov
iret
sbb
aaa
and
popf
dec
sbb
xchg
sbb
pop
ror
out
jge
jge
mov
xchg
call
fs
out
test
pop
xchg
cmc
mov
add
jg
data16
push
mov
adc
loop
call
mov
in
call
lds
pop
retf
mov
mov
mov
popa
je
outs
push
fstp
repz
push
jno
imul
cdq
test
adc
movs
movs
xor
ins
push
repz
dec
rol
pop
aaa
je
pop
les
das
cmp
pop
ins
cmc
fstp
repz
or
push
int
loop
repz
sub
call
sbb
aam
dec
pop
hlt
leave
mov
mov
jp
mov
(bad)
call
mov
push
loope
in
push
lea
pop
mov
mov
jns
cmp
mov
dec
pop
clc
sbb
lahf
int
pop
jmp
or
popa
js
dec
jle
aam
xchg
fild
je
movs
mov
loopne
xchg
adc
cmp
in
push
mov
fst
mov
int
push
popf
lods
mov
xor
pop
xor
cli
mov
xchg
add
adc
sti
adc
sub
das
dec
test
stos
pop
lods
mov
int
adc
sbb
mov
outs
fwait
or
and
repnz
inc
xlat
loope
sub
cli
(bad)
xchg
jno
and
inc
mov
jae
int3
push
xchg
sub
xor
ret
cmps
mov
(bad)
outs
std
xor
mov
lods
dec
add
cmp
call
mov
in
mov
xor
dec
loope
call
cmc
jmp
jmp
jns
add
mov
sub
lods
and
bnd
(bad)
jne
daa
ins
jnp
js
stc
clc
popa
js
jns
mov
rcr
add
lea
or
adc
pop
xlat
out
add
repz
rcr
inc
jg
or
imul
idiv
out
push
push
fldcw
cmp
jns
mov
(bad)
push
sti
(bad)
arpl
loop
mov
jmp
add
lea
imul
lods
mov
cwde
push
imul
out
sbb
cmp
mov
lahf
mov
call
xchg
mov
jp
sbb
dec
and
jne
gs
and
and
push
(bad)
adc
adc
test
add
or
dec
dec
or
add
and
retf
sub
hlt
jmp
adc
mov
mov
rol
dec
dec
jno
ja
mov
in
popf
sbb
popa
fld
mov
sbb
ins
sbb
inc
sub
push
xor
push
dec
imul
frstor
and
push
je
ss
clc
and
mov
imul
sbb
(bad)
leave
mov
jae
cmps
add
cmps
add
ror
push
retf
cld
fcomp
mov
in
mov
jnp
(bad)
cs
cmp
adc
cmp
stc
int
xor
mov
mov
cli
push
cmp
icebp
inc
sub
push
ins
imul
mov
movs
popf
test
repnz
push
aam
pop
xchg
cdq
(bad)
loop
sub
fidiv
stc
xor
or
leave
adc
jne
daa
adc
mov
xchg
dec
sbb
mov
loope
lahf
mov
xchg
or
sar
cmp
retf
shr
push
aad
dec
push
add
dec
in
dec
sub
and
repz
ret
pop
call
cs
inc
jno
outs
in
lds
je
pop
ins
aad
jbe
movs
push
cmp
adc
bound
push
mov
int3
ins
rol
adc
add
cli
js
push
(bad)
mov
lea
mov
addr16
cwde
jb
sbb
adc
(bad)
into
inc
nop
outs
mov
je
(bad)
ret
push
out
xchg
mov
pop
mov
pop
inc
mov
fstp
in
mov
dec
mov
call
adc
mov
enter
leave
movs
outs
cmp
cmp
dec
pop
inc
push
mov
ret
out
stc
mov
and
pop
gs
popf
bound
xor
dec
xchg
cdq
test
clc
leave
(bad)
idiv
cwde
fdiv
jbe
les
jmp
pushf
mov
jge
stos
add
sbb
xor
mov
imul
ds
add
clc
sub
test
jns
ficomp
push
retf
push
push
push
lds
scas
shl
jle
xor
sahf
mov
mov
in
aam
and
and
jne
test
mov
or
add
fisttp
and
xchg
lds
das
cmc
xor
mov
jecxz
stos
movs
test
rol
loopne
lock
xor
mov
and
add
xchg
out
cld
into
adc
xor
sbb
out
into
sub
lds
aam
and
pop
sbb
push
xchg
test
mov
xor
sub
inc
and
nop
das
movs
inc
mov
(bad)
push
icebp
sub
retf
test
movs
mov
out
ds
out
pushf
jmp
mov
xor
inc
push
popf
pop
or
mov
mov
xchg
pop
movs
push
sbb
xchg
cmps
stc
push
dec
scas
push
adc
mov
jae
jecxz
fild
ret
leave
ins
leave
sti
imul
dec
inc
mov
dec
xor
pop
push
arpl
mov
clc
enter
movs
jo
mov
enter
jnp
inc
js
in
cmp
js
sti
cmps
jbe
js
retf
ret
call
dec
adc
repz
adc
pusha
inc
dec
pusha
pop
jo
movs
xchg
in
out
clc
mov
pushf
cmps
mov
push
ins
std
inc
test
jno
dec
fistp
xor
jae
ins
pop
ins
imul
into
ret
cmc
sub
mov
cmp
clc
(bad)
ja
pop
out
fnstenv
mov
inc
jmp
jmp
mov
mov
popf
shl
push
jae
shl
jne
pop
retf
cwde
test
adc
mov
pop
jae
hlt
jmp
push
mov
repnz
add
mov
mov
push
(bad)
pushf
or
inc
stc
xchg
cld
jnp
sub
(bad)
fstp
mov
cmp
aas
pop
and
xchg
push
(bad)
cmc
mov
sbb
mov
rcr
std
pop
mov
jg
scas
push
jne
or
adc
add
inc
(bad)
(bad)
push
ja
adc
jbe
ins
pop
push
fld
(bad)
mov
add
jbe
daa
ins
or
gs
adc
jecxz
ret
jle
test
imul
cmp
(bad)
xchg
mov
addr16
bound
cdq
xchg
dec
cmp
pop
inc
into
movs
addr16
inc
clc
les
jno
les
adc
mov
pop
jo
lea
shl
push
sub
mov
cs
push
push
adc
and
pop
inc
mov
cmc
dec
jns
fnsave
es
rcr
sub
mov
inc
add
or
cli
pop
jmp
(bad)
pop
mov
pop
xchg
jl
in
xor
push
loope
fprem
push
clc
mov
mov
fld
test
leave
and
fdiv
sbb
sbb
push
mov
retf
xchg
cli
mov
mov
inc
leavew
mov
jmp
inc
xor
jno
and
lea
fstp
adc
and
add
pop
lahf
ret
stos
loop
sahf
js
cdq
inc
sbb
push
repz
and
adc
jmp
in
push
fidiv
pop
pop
mov
ror
pop
push
cmp
ins
repz
xchg
fst
icebp
push
out
scas
sbb
fdivr
ss
or
jge
out
jp
rol
cmp
shl
dec
shl
adc
sar
mov
jae
dec
jmp
adc
push
out
lock
cmc
or
dec
cs
jl
or
repz
mov
push
fs
mov
and
or
mov
and
lods
push
sti
shl
popa
test
cmp
pop
xchg
sti
add
push
push
and
cmp
mov
movs
retf
mov
xor
fwait
jg
mov
push
dec
shl
pop
fadd
or
or
ds
shr
xchg
cmc
cmp
lea
pop
lods
mov
add
ins
add
mov
jo
xchg
dec
retf
std
es
aas
adc
cwde
or
je
jge
inc
inc
cdq
mov
dec
fcmovnbe
ret
xor
fldenv
cmp
mov
adc
mov
sub
hlt
jnp
test
stc
shr
cmps
sub
jg
sub
xchg
sub
addr16
xlat
add
ja
je
cmps
xor
mov
xor
mov
outs
into
std
inc
imul
clc
push
and
and
jno
pusha
rcr
pop
inc
mov
retf
movs
loop
jge
loope
in
xlat
stc
loope
mov
outs
add
xchg
ins
jge
xchg
xchg
inc
lea
pop
iret
mov
sub
inc
in
jo
int
mov
pusha
sbb
aaa
push
pop
mov
jg
lahf
daa
sub
or
sub
jne
mov
sub
movs
or
retf
ror
cs
push
adc
jns
fiadd
pop
cmp
js
enter
std
fwait
and
ror
sbb
or
sbb
mov
fwait
dec
in
xchg
stc
mov
or
mov
rol
or
pop
bound
inc
pop
and
dec
xchg
mov
aas
mov
sub
xchg
xchg
pop
sbb
pop
mov
jnp
sub
int
test
call
mov
pusha
gs
mov
dec
xchg
jge
adc
not
xchg
xchg
pop
ss
or
int
xlat
pop
arpl
gs
jns
sub
dec
mov
mov
adc
movs
loop
pop
push
aas
stc
cld
fld
data16
rcr
inc
hlt
push
retf
inc
hlt
xor
xlat
sbb
push
adc
mov
lock
xor
in
mov
cli
ss
mov
js
imul
lahf
ins
add
cs
pop
cmps
(bad)
mov
inc
xor
lods
jbe
push
mov
and
aad
retf
fwait
or
fs
sahf
xor
xor
ret
pop
sub
jbe
or
xor
test
or
sbb
loope
paddd
cli
int3
lahf
arpl
mov
hlt
rcl
arpl
in
xor
call
loopne
fimul
mov
and
cmp
out
movs
sbb
xor
mul
adc
dec
xchg
mov
push
int3
mov
add
cmc
add
fistp
mov
cwde
mov
das
mov
scas
pop
jmp
(bad)
(bad)
and
jecxz
stos
dec
aas
(bad)
in
int
xchg
pop
mov
outs
in
adc
lods
adc
sub
and
loopne
or
pop
mov
jno
sub
jns
call
daa
(bad)
out
jo
pop
or
add
cmp
jns
dec
jmp
fwait
or
pop
xlat
loope
or
mov
test
mov
cmc
loope
lods
sti
(bad)
mov
dec
inc
pop
xchg
xchg
jmp
int
test
ret
xor
pop
cli
popf
scas
lods
mov
mov
mov
inc
mov
add
cmps
rcl
jns
dec
hlt
(bad)
mov
mov
pop
stc
inc
and
cmp
pop
out
cdq
sar
xor
xchg
xlat
test
pop
sbb
in
sbb
and
arpl
jg
sbb
fstp
push
dec
add
popa
dec
adc
imul
mov
aaa
mov
fsub
test
repnz
cmc
shr
xor
outs
cmp
sbb
call
cmps
pop
inc
fdiv
jne
imul
mov
push
jbe
iret
xor
and
sbb
or
push
popa
pusha
iret
cmp
repz
repz
test
mov
clc
lahf
repnz
or
jg
pop
pop
inc
or
sbb
adc
ret
lods
(bad)
jmp
iret
ins
fwait
sar
sub
imul
fisubr
dec
sbb
pusha
lods
pushf
loopne
jle
mov
mov
das
cmp
lahf
(bad)
push
or
mov
xchg
(bad)
adc
out
jecxz
lea
xchg
inc
dec
or
sub
icebp
push
xchg
js
mov
ins
xor
xchg
jmp
xor
dec
cmp
dec
jae
or
test
or
mov
cmps
push
icebp
mov
push
cmp
addr16
sbb
mov
shr
cmp
sahf
or
dec
jl
aam
add
adc
or
aam
push
data16
movs
or
inc
pop
aam
sub
scas
cli
push
sbb
mov
pop
(bad)
mov
mov
sbb
scas
push
jns
icebp
jnp
xchg
jmp
les
daa
sub
cmp
repz
movs
pop
sbb
imul
jl
in
mov
mov
stos
xchg
sti
cmc
ficom
mov
test
fs
fs
or
call
int
adc
(bad)
pop
ja
aaa
leave
in
inc
gs
(bad)
cmp
cwde
rol
push
pop
inc
lock
(bad)
pop
rcl
or
imul
mov
int3
lds
nop
(bad)
cmc
or
dec
dec
adc
inc
pop
inc
or
sub
mov
std
loop
push
bound
add
sub
popf
push
in
inc
bound
push
lods
sub
out
dec
jnp
add
jb
(bad)
mov
mov
iret
repnz
test
std
in
in
sahf
(bad)
xor
pop
gs
ja
inc
dec
sub
inc
ja
jp
cmp
fst
sub
test
jb
jo
push
ss
(bad)
add
lahf
inc
push
lods
popf
mov
rol
jnp
adc
push
jmp
in
stos
dec
adc
(bad)
jne
mov
xchg
fs
or
shl
add
cmp
and
rol
leave
pop
jg
gs
sub
shl
icebp
and
jmp
and
dec
sti
scas
sar
call
sub
lods
aad
sbb
cmp
ja
js
(bad)
push
dec
in
fdivr
(bad)
nop
aas
adc
pop
ret
je
pop
ins
out
test
movs
out
out
sti
push
cmp
jne
out
or
jl
cmp
xchg
bound
je
or
xchg
cld
cmc
xor
cmp
xchg
cmp
jae
and
in
adc
addr16
fist
(bad)
arpl
inc
mov
(bad)
jmp
jo
in
sub
inc
sbb
add
pushf
shl
jmp
xor
pusha
dec
and
leave
inc
(bad)
aam
jno
pop
pusha
ds
stos
popa
and
xor
dec
adc
xchg
pop
popa
js
push
pop
jns
fdivr
cli
xor
test
sbb
sub
add
(bad)
into
cld
jne
int
sub
ror
(bad)
push
mov
inc
lds
int3
in
pop
aad
xor
mov
xchg
adc
clc
jecxz
jbe
xchg
imul
popa
test
pop
sub
popf
fstp
test
cmp
stos
mov
push
inc
test
std
pavgw
mov
jmp
push
xor
outs
mov
cmps
mov
icebp
sar
(bad)
mov
jne
mov
jg
xchg
or
rcr
mov
pop
pop
or
or
pusha
or
fidiv
jl
std
sbb
in
xor
mov
retf
call
mov
loopne
ret
nop
xchg
mov
cmp
jne
dec
dec
mov
xchg
std
or
(bad)
das
(bad)
sub
call
ret
inc
sbb
js
and
scas
fst
ds
mov
push
jae
aas
adc
ja
pusha
rcl
jnp
xchg
mov
mov
cmp
jmp
add
cmp
pop
cmc
dec
add
popf
fisttp
cs
xchg
loope
adc
shr
retf
shl
pop
call
sbb
pop
adc
out
out
or
test
or
pop
int3
sbb
popf
mov
inc
ins
add
lods
adc
sub
ret
inc
wrmsr
cmp
cmp
sub
add
mov
enter
sbb
shr
cmp
scas
cmps
jecxz
enter
pushf
mov
jp
fstp
jo
jmp
dec
jno
xchg
push
pop
cmps
pop
cmp
cwde
std
fisubr
jge
mov
xchg
add
jb
add
dec
and
call
test
push
icebp
imul
pushf
mov
jne
test
cmc
loope
gs
fimul
mov
lods
dec
inc
gs
in
xchg
adc
and
sub
mov
nop
mov
(bad)
mov
lods
shl
push
push
test
sahf
fdivr
mov
mov
dec
lahf
sub
les
stos
xor
lahf
pop
xlat
sub
pop
movs
jns
std
inc
(bad)
xlat
outs
mov
(bad)
dec
test
das
aas
(bad)
sbb
pop
jo
add
cs
sub
icebp
pop
or
aad
ror
add
push
jmp
fcmovnb
jp
push
out
aaa
inc
cmp
movs
mov
in
inc
hlt
lea
adc
cmp
sbb
adc
jle
cdq
jge
adc
jns
enter
sbb
sbb
neg
pusha
add
lea
les
cmp
adc
ins
adc
icebp
xchg
jp
and
pusha
xchg
xchg
test
or
add
adc
sar
lea
dec
ror
push
pushf
data16
xchg
jg
mov
fxch
cmp
cmp
xchg
adc
pop
add
inc
popa
cld
outs
cmc
cmc
sub
in
cmc
imul
and
test
jnp
sbb
push
ret
outs
test
jmp
(bad)
add
or
rol
adc
or
mov
ret
pop
loop
ins
cwde
add
mov
sub
cmc
cmp
jns
dec
cmp
sub
jp
xchg
retf
mov
pop
jecxz
psrlw
shl
inc
jno
dec
out
jns
inc
mov
lods
arpl
mov
cs
(bad)
gs
sbb
je
sub
popa
push
fsubr
adc
sti
cmp
push
xor
enter
ror
movs
lea
sub
fs
rcr
or
aad
inc
sbb
jo
xchg
daa
xchg
pop
jno
clc
(bad)
mov
std
int
mov
mov
test
add
lock
scas
or
cmp
ror
mov
dec
xchg
out
mov
lock
xor
push
mov
mov
mov
adc
jb
pop
or
pop
retf
aam
cmp
mov
jo
pop
add
or
aam
add
push
popf
add
sub
jmp
mov
mov
sti
pusha
ins
jns
sbb
xchg
cmp
mov
mov
jmp
popf
fs
pushf
into
scas
scas
inc
push
dec
aam
dec
jns
clc
mov
mov
test
clc
jne
xor
adc
inc
leave
add
xchg
imul
inc
test
(bad)
popf
cmps
mov
fcom
clc
in
ss
xchg
push
test
aas
rep
jo
lock
add
xor
dec
xchg
shl
aas
shl
out
jmp
scas
and
jge
and
mov
dec
retf
test
stos
imul
ss
cli
pop
pop
movs
std
shl
scas
add
je
pop
inc
dec
adc
jb
pop
mov
bound
mov
jno
mov
aad
push
add
rcl
mov
ja
cmp
out
mov
imul
imul
cmc
clc
ins
fistp
dec
adc
pop
xor
push
jno
mov
ins
push
cmc
pop
cmps
clc
cmps
mov
lahf
std
int
test
shl
mov
push
mov
pusha
xor
jge
dec
movs
or
test
in
inc
pop
sti
stc
movs
cwde
pop
adc
sbb
inc
inc
in
das
inc
std
or
jno
lods
dec
mov
movs
repz
mov
push
mov
xlat
jp
mov
lds
int3
mov
mov
ja
add
jmp
push
cmp
jbe
cmc
outs
cmp
enter
and
(bad)
fcom
add
adc
push
push
cmc
push
jbe
mov
aam
pop
imul
jmp
neg
sbb
cmp
xor
or
cmp
imul
mov
mov
fnstenv
in
sbb
pop
leave
retf
inc
sbb
mov
cwde
popf
xor
ds
retf
mov
pushf
mov
stos
adc
add
ja
fs
aaa
imul
sbb
adc
stos
rol
or
jp
mov
inc
adc
push
imul
jb
or
call
dec
pop
mov
mov
imul
test
jecxz
sub
out
jmp
bound
test
sub
ins
(bad)
rcl
xor
xchg
sahf
mov
aaa
(bad)
fucomi
popa
push
rcl
sbb
into
aad
in
dec
or
jmp
jns
ja
mov
ss
fiadd
aaa
jg
dec
iret
fmulp
dec
or
cmp
cwde
leave
mov
xor
enter
out
gs
add
xchg
lea
xchg
cmp
sub
pop
std
stc
repnz
int
xor
enter
push
cmp
sbb
push
or
jne
sbb
test
mov
xor
adc
mov
je
pop
mov
test
jne
in
out
loope
dec
cmp
and
inc
addr16
mov
lods
add
xchg
sbb
mov
mov
xchg
mov
sub
popf
ja
lahf
addr16
rol
xchg
popf
out
sbb
ror
xchg
cmp
mov
in
xchg
cmp
adc
mov
xor
pushf
hlt
xchg
jge
mov
scas
xchg
and
adc
in
inc
dec
sbb
dec
fdivr
gs
call
arpl
mov
leave
into
push
jb
sbb
pop
enter
fsub
leave
fstp
(bad)
movs
stos
xchg
xchg
mov
add
ins
xchg
jl
xchg
ins
fisttp
mov
xor
fcomip
(bad)
jnp
loopne
and
test
jecxz
inc
pop
push
dec
sar
jecxz
pop
mov
ss
cmc
call
cmps
test
shl
lahf
sar
inc
imul
jno
push
mov
mov
out
mov
(bad)
dec
sbb
adc
cli
lds
xchg
mov
inc
mov
inc
xchg
jmp
jo
add
jno
ins
inc
movs
imul
mov
xor
push
mov
xor
daa
dec
ss
or
sbb
lods
jg
fnstsw
or
daa
cmovg
inc
stc
cmc
mov
icebp
push
icebp
pop
push
jp
mov
outs
daa
aad
mov
cli
loope
cmp
sar
dec
mov
push
lods
add
mov
pop
hlt
es
shl
in
gs
dec
lds
or
ror
adc
dec
cmp
jl
(bad)
push
pusha
and
xchg
inc
and
repnz
add
movs
mov
xlat
pop
jecxz
rcl
in
sub
sub
push
retfw
movs
aad
pop
jmp
aad
jmp
in
or
lea
(bad)
dec
mov
les
dec
(bad)
and
or
out
test
mov
lahf
cmp
inc
mov
gs
lods
mov
xchg
jo
mov
sub
loopne
jns
inc
add
int3
mov
je
fdivrp
sbb
and
enter
fld
or
push
cs
inc
xor
int
in
or
pop
adc
sar
imul
mov
sti
repz
push
in
repnz
pop
loope
retf
mov
xchg
sub
inc
les
and
mov
sbb
in
cmp
mov
cmc
lods
lds
icebp
sub
movs
push
xor
sti
mov
add
jp
fsub
leave
js
out
stos
aas
and
hlt
stos
(bad)
stc
les
and
push
retf
test
xchg
dec
add
inc
jae
fucom
in
push
jne
sub
aam
mov
pop
pop
dec
mov
dec
into
mov
hlt
out
cwde
mov
xor
and
mov
lea
sbb
test
dec
sar
(bad)
in
data16
fcmovbe
ret
mov
loop
and
imul
ficomp
and
sbb
jmp
jp
mov
js
(bad)
mov
aad
fnstcw
dec
jae
xor
push
test
or
sahf
jmp
inc
cld
jmp
inc
pop
lods
iret
enter
stos
in
mov
sbb
(bad)
jp
cmc
ins
jecxz
jge
mov
mov
mov
rol
adc
cmp
or
mov
adc
jne
arpl
inc
jl
xchg
mov
fistp
dec
pop
call
loopne
push
push
mov
repnz
imul
fimul
test
cmp
sahf
(bad)
in
gs
sub
je
xor
(bad)
mov
daa
fst
in
ror
fidivr
std
push
(bad)
ins
and
pop
sub
les
mov
pop
inc
stc
les
lahf
jg
int3
mov
pop
pop
sbb
imul
dec
pop
adc
jge
lock
or
mov
out
retf
xchg
movs
out
inc
xchg
scas
jnp
jb
mov
fs
add
mov
fistp
dec
jmp
sbb
bound
dec
pop
imul
adc
rcl
cmp
sbb
inc
aaa
or
js
xchg
test
jp
mov
int
mov
ja
and
fadd
pop
sub
jg
jmp
add
mov
ss
jmp
mov
rcl
inc
sub
add
fsub
(bad)
loopne
pop
pop
jp
xchg
push
or
retf
inc
xor
fmul
out
jb
inc
jle
mov
fwait
std
pop
cmps
test
cmp
fadd
jle
ficom
push
sbb
sub
pop
adc
sbb
test
bound
cdq
adc
data16
adc
xchg
out
cli
mov
push
xor
fs
retfw
mov
enter
or
test
retf
mov
sub
pop
jns
dec
sbb
clc
inc
movs
xchg
sahf
mov
xchg
xchg
cmp
push
push
js
jecxz
add
or
cmp
rol
shl
jbe
add
mov
mov
pop
xor
and
mov
or
iret
mov
sub
shl
xchg
div
pop
movs
jb
dec
retf
or
sbb
and
sbb
mov
jge
mov
mov
fdiv
repz
or
sbb
xor
cmps
test
je
stc
or
jne
lds
mov
xchg
xchg
test
imul
es
popf
push
jb
ret
xchg
mov
xchg
push
mov
lds
push
pop
test
push
mov
mov
ins
sbb
ja
adc
or
loope
(bad)
xor
cmp
inc
in
mov
fild
(bad)
aam
std
lea
lods
mov
pusha
and
mov
or
add
add
cmp
js
dec
add
mov
pushf
cmp
loopne
aas
mov
adc
dec
sbb
(bad)
lods
call
das
xor
shr
fwait
xchg
dec
fiadd
xor
shl
lock
adc
ror
jne
push
outs
and
xor
mov
call
cmc
sub
cmps
movs
in
ins
add
or
adc
lock
push
into
leave
dec
test
sbb
and
imul
inc
add
cmp
xchg
pop
fldcw
es
add
xor
jns
cmp
in
mov
icebp
pop
push
js
pop
int3
inc
lock
loop
ja
scas
inc
mov
lahf
shl
dec
sar
or
mov
pop
cs
push
int3
(bad)
adc
inc
mov
cld
dec
fistp
sbb
out
fs
push
mov
push
dec
test
push
jp
mov
cmp
aad
cmp
mov
push
and
xlat
ror
push
xchg
jmp
jne
and
sub
rol
mov
add
std
in
jae
inc
fnstsw
movs
add
jae
cmp
mov
iret
in
(bad)
(bad)
(bad)
mov
test
cmovl
jbe
leave
popf
imul
cmp
aaa
xor
stc
ss
adc
sub
adc
inc
mov
(bad)
fist
add
and
loopne
cwde
in
push
mov
repnz
pop
sbb
imul
(bad)
push
jne
xor
mov
dec
nop
nop
pushf
cmc
sbb
xchg
sbb
pop
xchg
push
pop
pop
pop
dec
and
mov
jmp
xrstors
fidivr
dec
hlt
js
loopne
movs
xor
add
in
lea
test
(bad)
cmp
xchg
jmp
mov
gs
pop
jns
fld
sub
pop
mov
test
xor
sub
sbb
pop
in
inc
add
or
jge
mov
add
jmp
pop
gs
out
push
data16
add
or
push
arpl
ins
cmps
lock
movs
add
inc
out
adc
test
xor
int
icebp
cmp
lea
retf
sbb
lock
mov
inc
adc
xor
fwait
int3
scas
test
hlt
sti
mov
aad
pop
imul
jle
mov
lods
cmps
test
gs
or
push
ja
push
fldcw
mov
in
push
mov
and
repnz
in
aad
mov
xor
bndldx
lea
cli
xchg
or
int3
adc
rcl
mov
lods
sbb
test
xor
lea
push
call
mov
sbb
xor
mov
adc
call
gs
mov
xor
das
push
pop
cmps
inc
sahf
push
mov
xchg
stc
sub
mov
and
enter
pop
fadd
popa
cmp
pop
and
in
inc
stc
rol
dec
sbb
stos
test
je
scas
sub
jmp
dec
sbb
mov
test
xchg
dec
mov
mov
daa
push
push
push
adc
mov
popa
mov
rcr
and
ficom
enter
mov
call
adc
imul
bound
cmp
aaa
sbb
popa
jl
and
cdq
or
jns
mov
sbb
fsub
enter
movs
test
mov
pop
push
inc
pop
mov
outs
lds
pop
ja
xchg
or
test
push
in
xor
and
imul
sub
daa
add
cmp
rol
imul
mov
push
arpl
sbb
lds
in
call
icebp
sub
dec
rol
mov
stos
push
or
fisub
fs
or
push
mov
jge
out
xchg
sbb
adc
mov
jno
xor
xchg
sub
aad
sbb
aaa
or
sti
(bad)
and
cmc
mov
xchg
lock
push
popf
cmps
ret
mov
mov
aam
in
push
add
movs
stos
cli
out
stc
in
dec
add
jle
add
leave
dec
mov
sahf
sub
stc
sbb
jb
into
cmp
adc
sbb
in
pop
mov
test
int
cdq
fmul
xchg
push
xchg
ds
add
rol
push
cdq
jo
lahf
sub
push
shr
xlat
pop
call
jmp
sbb
pop
hlt
xchg
add
std
cmps
sub
aam
(bad)
and
sub
pop
adc
mov
push
adc
dec
loop
outs
daa
mov
rcr
ja
cdq
movlps
xor
arpl
data16
mov
cmps
mov
repnz
push
xor
ss
and
cmp
stc
lods
push
inc
nop
sti
dec
xchg
in
mov
mov
sub
cmp
into
sub
xchg
jge
inc
inc
jmp
jne
sub
xchg
mov
(bad)
mov
test
sbb
mov
outs
fstp
jno
jne
jge
jnp
jne
rol
jge
lds
sub
in
pop
cmp
pop
fidivr
inc
fldcw
jnp
mov
xchg
sub
sar
pop
adc
test
cmp
pop
xor
leave
sbb
sti
aas
lds
cmp
pop
mov
xor
add
mov
push
shr
mov
test
popa
stc
xlat
sub
mov
sub
mov
mov
jns
imul
test
jp
(bad)
sub
adc
mov
jne
sbb
add
ret
into
mov
stc
aad
sub
sub
pop
ins
jne
mov
xchg
mov
push
xchg
loope
fcom
cmc
nop
pusha
cwde
pop
dec
in
pop
inc
int3
dec
jg
dec
mov
sar
xlat
vcvtss2sd
add
ss
pop
inc
scas
mov
in
ds
cmp
scas
pop
push
leave
pop
sbb
fwait
or
jmp
jecxz
mov
push
sbb
mov
and
cmc
jl
cmp
push
add
js
hlt
gs
jle
and
aaa
mov
pop
mov
into
ret
cmc
xor
xchg
xor
fldcw
cs
data16
adc
add
fnstcw
sbb
xchg
scas
or
movs
cmp
cwde
sub
cmp
daa
push
adc
lock
nop
clc
(bad)
das
xlat
xor
fnsave
cwde
ds
xchg
cmp
inc
loopne
lods
in
xchg
pop
(bad)
mov
shl
pop
idiv
pop
and
sub
out
and
js
inc
push
in
and
test
cmps
(bad)
gs
in
ss
push
sbb
jb
push
mov
lock
pop
scas
mov
outs
pop
add
push
call
jno
stos
cmp
dec
in
jbe
leave
sar
adc
sbb
xor
and
je
dec
sbb
push
push
mov
iret
mov
fldenv
push
shr
imul
loop
fs
stc
xchg
inc
dec
mov
xor
dec
pop
push
adc
push
mov
mov
sbb
(bad)
in
loope
mov
ss
lock
inc
je
cwde
xchg
daa
inc
lea
or
mov
and
(bad)
adc
jl
dec
pop
mul
sub
movs
movs
push
add
out
(bad)
add
(bad)
dec
cdq
cmp
les
jmp
mov
mov
iret
fs
addr16
mov
add
popf
jb
lods
adc
lods
cdq
sub
cmp
dec
xor
add
cwde
inc
push
lds
xchg
icebp
mov
icebp
cli
pop
push
loopne
lock
dec
and
dec
sub
pop
jno
jno
test
fstp
pushf
shr
push
xor
jnp
mov
pop
push
pop
addr16
sbb
jp
sbb
pop
movs
rol
stc
comiss
fstp
mov
dec
jns
add
xchg
xchg
fld
push
mov
daa
(bad)
lds
push
mov
fld
add
jge
sbb
scas
jmp
inc
jno
stc
xchg
outs
mov
pop
jne
push
jge
or
das
cmps
movs
pop
fild
lock
sub
pop
cmp
aam
xor
fstp
(bad)
pop
sbb
daa
cmp
enter
lock
imul
sub
add
dec
mov
(bad)
(bad)
clc
lahf
mov
(bad)
std
mov
jmp
mov
(bad)
out
sti
aas
gs
add
mov
mov
or
out
outs
sub
jo
test
jbe
pop
imul
in
push
push
mov
mov
nop
ret
xchg
mov
cmc
add
dec
mov
inc
les
pop
ret
aam
sbb
out
test
sub
push
in
inc
inc
push
mov
ja
jmp
and
cmp
adc
loopne
or
fs
push
dec
xchg
cmps
stos
fdiv
ret
fist
jp
test
ror
jge
xchg
sbb
mov
fsub
ins
fisttp
rol
je
in
jno
pop
daa
inc
out
(bad)
sbb
hlt
mov
fmul
dec
cmp
cwde
xchg
mov
adc
stos
fnstenv
aas
jle
fs
les
cmp
push
cs
aaa
pop
into
lahf
scas
out
div
aam
mov
repz
xchg
aad
push
ds
sbb
sub
aam
ror
std
adc
(bad)
jp
add
jne
pusha
outs
data16
scas
push
lods
les
add
xor
push
xchg
fnstcw
dec
cdq
sub
mov
ds
jecxz
(bad)
adc
push
xor
ret
or
test
xchg
mov
cmp
push
adc
cmps
mov
aas
add
aam
movs
inc
pop
popa
xor
popa
add
out
sbb
and
xchg
cwde
add
out
xor
mov
adc
icebp
lods
xchg
cli
sub
movs
ror
int3
pushf
xchg
mov
(bad)
cmp
and
ins
xchg
cli
mov
xchg
std
loope
dec
not
mul
in
jmp
sbb
je
lds
ss
adc
ja
sub
sbb
fs
xchg
sub
cdq
xchg
dec
xor
adc
daa
ins
mov
stc
mov
lock
add
retf
imul
sbb
aad
dec
sub
mov
sbb
ss
jns
adc
push
ins
enter
push
clc
movs
pop
sti
mov
xchg
cmc
stc
ror
scas
imul
push
push
pop
js
push
xchg
dec
add
mov
sub
inc
frstor
push
mov
xor
rcr
mov
fisttp
aas
cmps
aad
cdq
adc
sub
xor
dec
push
fcom
imul
pusha
in
rcr
pop
in
xchg
xor
dec
imul
sub
jb
jecxz
jnp
jae
xchg
loop
xlat
enter
cmc
ret
out
loop
retf
add
sbb
or
repnz
cmp
sub
sub
or
in
push
clc
pop
sub
fisttp
scas
pop
xor
nop
popf
cld
xchg
scas
mov
(bad)
mov
mov
(bad)
sub
and
push
or
and
enter
xchg
pop
xor
gs
push
xchg
push
mov
mov
mov
pop
add
out
jl
ja
fiadd
inc
xor
rol
dec
jmp
fnstcw
jns
leave
wbinvd
dec
cs
mov
xchg
mov
rcr
xor
jecxz
popf
jecxz
stc
scas
cmp
adc
pop
adc
loope
sti
cdq
dec
or
mov
scas
pop
or
rcr
cmp
pop
lahf
(bad)
mov
iret
daa
mov
pushf
test
mov
add
rol
jmp
xchg
xlat
push
pop
add
fiadd
bound
mov
fst
mov
jmp
leave
adc
lock
in
jns
xchg
inc
cmc
push
add
mov
jg
cmp
push
pusha
enter
sub
shl
fs
aam
jb
in
test
and
outs
mov
or
adc
test
or
popa
push
mov
(bad)
cdq
push
push
mov
jp
dec
dec
xchg
in
jo
mov
les
push
or
jno
add
jp
ins
dec
and
sub
cmp
clc
cdq
adc
stos
arpl
outs
mov
fimul
test
push
fcmovu
call
xchg
arpl
add
push
icebp
mov
inc
cli
xchg
call
adc
rcl
out
lea
imul
jmp
adc
sbb
lea
xor
fcom
sub
dec
adc
xchg
rcl
lock
mov
mov
push
cmp
je
arpl
add
cmp
mov
mov
xor
or
lock
push
js
xchg
or
dec
sbb
add
jno
mov
ret
idiv
jmp
xchg
push
pop
mov
ins
mov
out
add
mov
loope
inc
adc
aad
xor
ret
mov
gs
and
lahf
aas
pop
cmp
xchg
pop
sub
stos
(bad)
adc
cmc
sub
mov
xchg
xlat
jb
fdivr
iret
cmp
ret
fs
icebp
imul
push
call
sbb
sahf
xchg
out
mov
or
or
sbb
sub
mov
sub
outs
fcomp
enter
mov
or
pop
sbb
xchg
jmp
mov
jb
add
add
xor
or
jns
xchg
test
xchg
sbb
ror
jmp
sar
sbb
inc
mov
or
pop
xor
dec
aas
stc
(bad)
push
std
int3
cmp
(bad)
scas
push
xor
cmp
or
lds
xor
scas
or
ds
pop
fadd
mov
stos
sahf
mov
pushf
fisubr
xor
(bad)
mov
xlat
int
leave
push
jns
jmp
fist
rcl
ror
imul
lea
xor
push
mov
xor
push
pop
xchg
test
(bad)
fisttp
lahf
dec
add
jbe
and
adc
dec
jl
cs
(bad)
in
js
mov
jns
xchg
stc
mov
in
dec
jl
jnp
xor
jae
stos
mov
shl
jne
pop
mov
test
dec
jno
addr16
sub
lds
stos
lods
test
jmp
xchg
aaa
aam
test
mov
xchg
int
test
enter
mov
mov
cmp
lods
pop
(bad)
ins
icebp
sub
test
push
loopne
in
arpl
jge
push
pop
dec
test
mov
push
jmp
xchg
jg
xchg
mov
dec
je
and
lea
pop
inc
in
in
mov
nop
cmp
sub
pop
xchg
mov
jge
outs
aad
dec
fucomp
mov
sbb
pop
fdiv
and
pop
mov
dec
sbb
daa
(bad)
mov
push
rcr
jmp
mov
xor
inc
aaa
pop
cmp
xor
jp
das
jmp
out
push
stos
xor
cmp
pop
loope
cmp
xchg
adc
hlt
dec
cmp
jge
or
push
jns
loope
frstor
es
(bad)
mov
retf
cdq
push
jnp
shl
test
lahf
xor
ret
call
sub
daa
push
xchg
fsub
and
add
jle
sub
retf
retf
pop
and
add
cmc
pusha
add
outs
popf
out
mov
mov
push
test
fstp
mov
rcr
dec
push
lods
mov
(bad)
(bad)
mov
mov
lahf
gs
cmp
and
cmp
or
popf
push
adc
mov
mov
and
or
pop
clc
push
in
stc
push
or
lods
rol
cmp
inc
jmp
sub
fidiv
gs
icebp
push
aam
jne
dec
sahf
movs
out
loop
hlt
jnp
add
imul
mov
gs
fisubr
nop
stos
mov
add
jo
inc
sub
inc
imul
aaa
mov
push
repnz
retf
push
push
mov
fs
gs
sub
xchg
mov
mov
rcl
mov
shl
das
test
fistp
xchg
shr
out
pop
mov
out
mov
iret
lock
in
stos
bound
cmp
je
and
cdq
cmc
xor
xchg
pop
jo
imul
and
mov
nop
retf
jne
pop
or
adc
das
inc
retf
xor
stos
sbb
mov
mul
fst
ror
mov
push
cmp
lahf
lea
sub
int3
loopne
push
loope
(bad)
loope
ficom
mov
inc
jmp
jo
stos
jns
inc
popa
or
push
cwde
in
pop
pop
pop
(bad)
pop
and
lea
daa
xor
push
pop
dec
es
mov
sub
add
or
xchg
fistp
cmp
pop
mov
cli
cs
cmps
stos
fnstcw
test
jo
dec
ja
mov
jp
cmp
lds
or
jg
push
gs
mov
or
cmp
das
ja
cmp
movs
mov
inc
ss
xchg
imul
mov
popa
ds
dec
sub
inc
add
repnz
js
sub
mov
ret
cmp
inc
sbb
repz
cdq
in
mov
clc
sub
mov
and
ja
cmps
add
ret
fadd
loopne
pop
cwde
popf
cmp
jnp
xchg
lea
icebp
ret
or
mov
mov
mov
sub
mov
add
in
inc
pop
dec
sahf
adc
adc
mov
or
xchg
aad
push
mov
stc
jns
ret
cmps
je
dec
xor
and
sbb
mov
das
les
ret
rep
xchg
xor
int3
dec
cmp
js
fcmove
mov
repnz
push
inc
out
fidivr
jp
mov
mov
jecxz
cld
daa
inc
test
inc
sbb
outs
push
xchg
jns
outs
pop
retf
push
aas
sub
cmp
mov
adc
jae
fldenv
or
leave
add
add
cmps
inc
adc
iret
jne
sub
pop
stos
mov
mov
fldcw
push
(bad)
inc
mov
push
lods
call
sbb
mov
test
dec
pop
ds
aad
ror
out
mov
adc
test
jge
adc
ja
cdq
icebp
jmp
cmp
inc
enter
jge
in
test
jbe
push
ror
inc
inc
jmp
popa
push
in
xor
xchg
ror
std
fisubr
in
xchg
iret
mov
in
push
stc
ja
mov
cmps
xchg
std
pusha
nop
inc
jmp
cmps
cdq
add
sbb
and
pop
lock
std
cmps
and
pop
cmps
rcl
xchg
mov
dec
or
push
cmp
jmp
xor
cmp
shl
in
test
leave
mov
dec
xchg
fs
push
push
dec
push
mul
mov
mov
cld
jb
or
out
mov
pop
mov
ds
(bad)
mov
dec
ss
arpl
jg
fistp
mov
mov
dec
stos
hlt
inc
cli
(bad)
jmp
adc
adc
cmp
imul
adc
fdivr
sbb
fiadd
push
nop
sbb
imul
test
pop
call
test
lds
pushf
mov
ret
jns
or
and
call
pop
or
pop
or
pop
aaa
mov
add
fimul
lods
inc
xchg
mov
cmp
repz
sbb
movs
or
movs
or
adc
and
pop
mov
iret
pop
and
inc
xor
ins
mov
ja
cmp
push
fldcw
leave
adc
inc
je
or
cld
adc
cmp
sahf
popf
or
xchg
daa
fdiv
mov
sub
dec
cmp
mov
add
adc
and
fld
sub
and
sub
sar
shl
int3
cmp
test
clc
out
and
push
add
mov
(bad)
push
cmc
cdq
jmp
xchg
clc
add
outs
and
xchg
fldenv
xchg
cmc
call
mov
xchg
jmp
cmp
mov
pusha
or
cmp
jnp
adc
mov
fst
cmp
(bad)
fxtract
popf
dec
mov
adc
push
out
pop
dec
stos
imul
test
push
test
ds
sub
test
adc
fxch
ror
xchg
ins
arpl
enter
(bad)
dec
pusha
outs
mov
ss
jo
sub
lock
in
mov
xchg
jp
adc
shl
push
(bad)
xor
stc
stos
repz
adc
mov
jmp
add
cmp
test
mov
test
mov
push
fcom
cmp
sub
nop
adc
rol
dec
imul
dec
or
ins
dec
out
out
xchg
pop
aaa
int
cmps
mov
xor
movs
clc
out
add
stc
movs
test
adc
js
test
ins
loopne
(bad)
dec
outs
hlt
cs
dec
out
fimul
outs
movs
mov
push
stc
(bad)
pop
int
mov
(bad)
dec
jae
or
fcom
lahf
test
push
fiadd
test
sub
mov
aam
addr16
js
int3
xchg
retf
test
retf
mov
repnz
fstp
dec
mov
jae
lahf
jmp
mov
daa
dec
enter
ss
clc
ins
inc
or
jns
gs
nop
repz
fistp
and
sub
not
sub
loop
xchg
repz
jecxz
pop
mov
sub
ins
xchg
cmp
dec
xlat
sti
adc
cmp
jmp
cmps
daa
fsubr
pop
(bad)
fmul
mov
test
std
stos
xchg
add
and
sbb
xor
sti
fimul
adc
retf
out
jmp
iret
push
pop
dec
jbe
add
int3
push
mov
add
enter
sub
adc
xchg
dec
std
leave
nop
shr
aas
fst
mov
or
je
xor
push
cmps
call
retf
gs
fcmovnu
fld
mov
sub
daa
xor
cdq
retf
xchg
js
mov
in
ror
mov
icebp
iret
cmps
int3
in
fs
cmp
jg
aaa
mov
test
ss
sub
loope
in
adc
test
adc
mov
jo
sbb
shr
or
std
frstor
mov
fstp
scas
push
xchg
out
mov
daa
sub
or
and
sbb
mov
inc
nop
aas
pop
lods
(bad)
mov
add
sbb
out
inc
push
or
lock
add
lods
pop
stos
add
xor
sbb
lahf
aas
arpl
cmp
cmps
inc
push
fld
scas
push
aam
cmp
push
or
clc
adc
or
mov
push
mov
dec
in
lock
test
mov
lds
mov
push
dec
mov
nop
(bad)
imul
cs
dec
fldenv
outs
imul
fwait
loope
aam
xchg
jmp
pop
and
cmp
scas
mov
inc
fs
fs
fsubr
mov
cs
pop
dec
xchg
loopne
stc
adc
test
push
ja
jne
mov
and
and
int
fcom
mov
cmc
sub
inc
dec
and
clc
imul
adc
xchg
cmps
fnstcw
pop
sub
xchg
(bad)
xchg
dec
sub
es
sub
out
push
push
and
cwde
or
or
sub
xlat
fwait
mov
lds
xchg
add
test
dec
cdq
lds
(bad)
xchg
sti
cdq
mov
shl
lahf
lahf
mov
fdivr
cwde
test
es
and
stc
test
or
imul
mov
sbb
or
repz
fiadd
sti
enter
int
retfw
loopne
add
enter
inc
movs
cmp
jno
inc
add
adc
and
xor
out
imul
xchg
push
repz
mov
mov
mov
adc
cmp
popf
xor
or
cmp
inc
adc
cmp
dec
mov
fld
mov
xchg
inc
stos
loopne
xor
fs
push
gs
xor
push
lods
test
xchg
icebp
imul
mov
jecxz
push
lock
sbb
and
lds
mov
out
out
shl
jl
nop
push
icebp
mov
xchg
fldenv
or
jns
pop
arpl
push
(bad)
sub
imul
add
jne
aas
sub
cmps
aad
cdq
imul
fwait
call
test
in
ja
jo
xchg
sbb
push
pop
aas
ret
jne
jo
xchg
out
les
pop
in
mov
jne
jae
sar
adc
jns
mov
addr16
inc
test
dec
mov
or
sub
rcr
and
std
sbb
add
cmp
call
and
mov
dec
mul
(bad)
leave
arpl
jno
lods
(bad)
icebp
pop
call
mov
les
stos
inc
repz
jg
add
xor
add
push
outs
(bad)
in
mov
sbb
cmp
mov
inc
shr
ins
push
lahf
data16
in
fdiv
popf
add
cmp
(bad)
imul
jns
jb
inc
xlat
lods
iret
retf
fbstp
mov
push
cmp
dec
in
pop
push
fist
sub
addr16
cld
sub
cmp
and
inc
mov
cli
xchg
jmp
cmp
mov
sbb
push
aas
lods
or
push
sbb
mov
loopne
xchg
and
fmul
call
inc
movs
je
popf
mov
gs
and
cmps
add
cmp
push
jno
scas
shr
or
add
sub
adc
sbb
je
js
dec
mov
imul
lock
mov
pop
jo
sahf
or
std
js
fst
jmp
imul
retf
dec
jne
xlat
addr16
loope
jne
push
in
cmp
dec
mov
push
popa
jmp
add
call
popa
fs
mov
cdq
and
mov
cmc
mov
loope
mov
nop
pusha
ins
xchg
mov
ja
and
jp
mov
mov
out
jno
in
cld
push
and
pushf
out
scas
ret
into
imul
aad
xchg
fldcw
mov
jns
xlat
leave
stc
jl
pop
adc
neg
mov
xchg
jl
test
in
out
cdq
fisub
or
cmp
pop
pop
push
add
jge
cmp
jmp
(bad)
and
lea
adc
lds
push
jle
push
pop
jne
mov
mov
or
push
jp
lods
sti
in
jns
or
sahf
mov
pop
js
mov
ret
sbb
dec
repnz
lods
scas
in
(bad)
pop
call
sbb
or
loopne
stc
dec
mov
cmps
sbb
adc
lahf
sub
(bad)
pop
push
dec
imul
ins
sub
and
inc
inc
fild
jne
mov
dec
add
fst
retf
out
jge
pop
lea
jo
int3
out
loope
fadd
and
and
outs
psrlw
(bad)
std
fnsave
push
push
call
ss
pop
cmp
inc
adc
push
push
adc
test
fs
in
stc
cmp
ja
inc
inc
popf
dec
add
jl
ss
lods
mov
(bad)
popf
or
ja
scas
je
or
ret
(bad)
iret
(bad)
jp
int
jg
fcomi
mov
fcom
ret
sub
xor
push
rol
repz
sbb
lahf
es
scas
pop
dec
jnp
mov
dec
adc
retf
repz
sbb
adc
jp
sbb
vpshufhw
movs
push
pop
sub
mov
mov
test
add
imul
fwait
or
and
inc
jg
stos
fist
jp
aam
aam
or
add
xor
mov
push
push
fdivr
adc
gs
pushf
mov
pushf
xor
xor
call
jmp
dec
dec
push
and
xor
xchg
push
retf
leave
push
mov
jle
mov
je
push
cmp
xchg
ja
repnz
popf
ins
pop
or
cmpxchg
sub
sbb
icebp
rcl
loop
loop
add
pop
daa
xlat
in
inc
rcl
mov
push
cmps
xor
and
shl
inc
lds
ins
jns
adc
sbb
call
(bad)
lods
push
mov
fisubr
add
je
jmp
sub
dec
cmp
push
mov
mov
imul
ficomp
ja
int3
push
and
enter
test
jnp
(bad)
div
jnp
rcr
pop
push
es
push
mov
mov
mov
retf
idiv
mov
stos
pop
stos
dec
imul
inc
dec
lahf
imul
dec
and
cmp
jmp
mov
inc
inc
(bad)
jnp
mov
aas
inc
push
ror
ss
je
mov
xor
cmp
int3
pop
cmp
rol
(bad)
mov
fsubr
(bad)
imul
pop
dec
shl
and
cmps
push
dec
popf
outs
xchg
enter
enter
out
push
iret
jnp
in
xchg
push
test
and
rcl
xchg
xchg
cdq
pop
and
pop
cdq
push
pop
jge
jmp
xor
mov
push
cmp
dec
mov
std
leave
sbb
pop
sbb
cmc
in
pop
(bad)
push
sbb
and
test
or
xchg
xchg
sbb
xchg
fdiv
pop
lods
sub
and
mov
(bad)
jne
jg
sbb
aaa
imul
lds
and
lock
ins
add
dec
add
inc
jbe
xchg
pop
sbb
out
call
push
cmp
xor
icebp
rcl
xor
jb
cwde
and
push
cmp
mov
sbb
or
dec
gs
js
loop
test
mov
in
repnz
jo
dec
stos
and
std
jle
faddp
stos
sbb
sub
cmp
inc
adc
xor
and
jne
call
xor
pop
sti
rcr
retf
pop
loop
jle
push
nop
and
hlt
int
das
cdq
push
push
leave
(bad)
inc
call
xchg
out
sar
call
popa
sub
cs
sub
mov
call
les
and
jne
imul
inc
adc
mov
fdivr
stc
test
in
fild
ds
push
xor
sbb
mov
gs
test
cmps
pop
jns
mov
pop
jae
test
cmps
or
add
mov
mov
or
add
and
in
mov
push
jle
mov
movs
sub
mov
mov
rcr
in
mov
xchg
cmp
cmc
pop
gs
sub
mov
inc
mov
in
add
enter
test
(bad)
jle
xlat
xchg
in
in
test
jge
(bad)
or
movs
jb
dec
adc
push
repnz
mov
sar
imul
inc
leave
clc
retf
popa
and
jae
mov
mov
aam
nop
outs
popf
not
cmp
xlat
mov
jb
test
jmp
gs
mov
xor
test
ror
adc
and
mov
dec
ja
push
lds
or
ss
(bad)
(bad)
jmp
xor
test
das
adc
sbb
and
mov
(bad)
jmp
sar
out
scas
dec
xchg
and
inc
(bad)
stc
pop
dec
jp
std
fldln2
push
push
xchg
xchg
mov
cmp
mov
sbb
jbe
mov
cwde
and
inc
cmps
xchg
inc
push
mov
xor
loope
js
cdq
sbb
sub
pop
stos
into
add
into
dec
mov
fcmovnb
push
aad
iret
icebp
add
rcr
addr16
or
stc
ins
imul
fs
push
mov
and
mov
test
xor
retf
je
or
neg
sbb
sub
xchg
ss
aaa
repnz
adc
add
cdq
mov
dec
ss
jmp
mov
in
adc
jbe
das
pop
and
mov
cmp
push
cmp
mov
(bad)
sar
out
leave
mov
arpl
cmp
inc
fs
lods
jno
push
xchg
mov
fadd
icebp
(bad)
xor
pop
and
xchg
push
ja
ins
and
nop
leave
lock
out
stc
adc
xor
push
xor
enter
xlat
outs
outs
cmc
js
out
fwait
sbb
dec
and
imul
dec
and
mov
push
xlat
mov
jp
nop
and
test
in
cmp
dec
and
adc
jnp
cmp
paddw
mov
pop
mov
test
fsubr
add
pop
out
lds
sub
xlat
in
push
int3
jbe
xchg
ret
cdq
sti
aam
and
mov
and
leave
xchg
pusha
test
push
(bad)
xchg
icebp
test
(bad)
clc
xchg
leave
outs
or
push
mov
sub
xchg
inc
outs
imul
cmp
cmps
dec
jns
and
add
jnp
fstp
js
xchg
test
loopne
cmp
imul
adc
mov
pop
dec
add
push
dec
mov
push
std
enter
icebp
jmp
je
push
cmp
sbb
dec
mov
mov
in
cs
mov
and
mov
jmp
addr16
mov
jp
or
or
mov
aad
mov
sbb
push
push
fnstcw
cmps
stos
ss
bnd
sub
sub
sub
add
push
inc
mov
push
push
jae
movs
mov
xchg
es
(bad)
fst
cmp
daa
push
shr
ja
xor
mov
fwait
mov
xchg
adc
(bad)
jno
xchg
inc
cdq
in
xor
addr16
imul
push
arpl
leave
nop
fist
jbe
mov
and
cmp
and
adc
aaa
or
shr
push
mov
mov
mov
cli
test
pop
cmp
aas
and
div
mov
jle
xchg
je
push
pop
fcmovu
fcom
or
icebp
push
cs
leave
push
sbb
ret
xchg
mov
mov
in
and
inc
mov
inc
jns
sti
mov
pop
jmp
scas
sbb
push
addr16
push
dec
sub
jle
stos
push
or
mov
xor
mov
fcomp
out
sub
shl
push
inc
aaa
call
adc
ret
int
sbb
out
push
jo
cmp
std
in
adc
inc
test
retf
mov
jmp
xor
adc
cs
pop
push
xor
test
and
(bad)
iret
push
dec
pop
mov
sub
sub
daa
mov
jno
outs
dec
out
sbb
shl
dec
mov
not
dec
arpl
jle
rol
leave
jle
pop
mov
in
int3
add
outs
pop
jg
pop
test
sub
sub
inc
call
adc
lds
adc
xor
pop
inc
push
inc
fisub
mov
xor
fistp
or
in
div
xor
jns
adc
push
popa
dec
or
push
imul
(bad)
push
xchg
push
and
pop
movs
sub
jg
pop
mov
jp
mov
(bad)
mov
stc
jmp
add
adc
jg
jge
je
aad
mov
pop
lock
sub
scas
loop
mov
sbb
add
or
dec
nop
cmp
inc
inc
test
xchg
pushf
aad
jge
mov
jge
or
les
mov
fist
ins
retf
sahf
daa
mov
je
and
int
fst
aad
inc
or
mov
test
mov
add
xchg
cmp
sbb
cdq
or
push
sub
adc
jg
test
(bad)
shl
ins
add
icebp
dec
pop
mov
imul
in
sar
jno
xor
cdq
imul
jns
dec
mov
test
(bad)
and
(bad)
or
aaa
(bad)
and
je
dec
jno
dec
test
fisttp
pop
out
fcomi
jno
data16
jne
ja
adc
dec
loope
nop
dec
jl
and
sti
enter
or
xchg
jg
xor
dec
popa
xchg
jmp
dec
sbb
es
push
aam
call
call
in
paddsb
dec
add
ins
out
cmp
pop
loope
in
xchg
push
and
daa
jbe
out
push
stc
and
push
aad
(bad)
fnsave
stc
jmp
aad
aad
push
mov
mov
sub
dec
ins
add
int
out
hlt
push
aas
leave
es
(bad)
stos
out
push
lahf
jmp
sar
mov
ret
imul
les
fisttp
ss
je
pop
lock
cmc
sub
test
xchg
xchg
push
cmp
adc
hlt
ret
jmp
pop
push
leave
and
pop
outs
not
cmps
mov
aad
and
movs
lods
jbe
test
jns
xchg
jns
ins
fwait
ret
ds
mov
aad
cmovs
add
div
adc
push
repnz
jne
loope
mov
mov
cs
inc
cmp
jmp
pop
fdivr
ret
jge
and
(bad)
stc
push
(bad)
xlat
inc
leave
fidiv
inc
imul
mov
stc
sbb
popf
in
fadd
adc
out
imul
(bad)
jns
loop
fwait
mov
sbb
xor
mov
in
jbe
pop
mov
dec
fcmovne
inc
mov
push
xchg
jne
xchg
into
adc
ja
leave
gs
push
test
movs
fcomip
sbb
fidivr
or
imul
rol
ror
(bad)
jae
popa
inc
aas
mov
adc
and
fs
and
cmp
(bad)
xchg
leave
in
and
aam
stc
push
add
aad
aas
adc
dec
inc
inc
jno
sub
outs
cmps
imul
mov
sbb
movs
retf
(bad)
mov
pop
in
cmp
imul
movs
aas
pop
sub
rcr
jge
vmwrite
aaa
mov
push
sub
sbb
popf
pop
and
add
into
iret
bswap
clc
lock
aas
enter
(bad)
addr16
lds
mov
ror
lds
ins
daa
cmc
sbb
xchg
jp
sub
std
fdivr
mov
stos
xchg
xchg
xchg
in
ins
dec
cmp
ret
xor
sbb
pop
push
imul
iret
pusha
out
sbb
adc
pop
and
and
imul
ror
test
inc
pop
cdq
fcom
cmps
inc
ret
and
adc
pop
mov
test
cdq
shl
(bad)
cmp
rol
pop
aam
aad
xchg
loopne
std
xchg
sub
aas
adc
in
jmp
xchg
call
mov
and
jmp
movs
add
hlt
and
mov
add
shl
test
and
push
(bad)
in
das
out
cmp
push
jns
scas
fstp
mov
cmc
fdivr
jbe
jp
mov
mov
dec
mov
ins
add
cdq
xor
retf
or
mov
xor
add
jnp
arpl
pop
cmps
and
mov
sbb
xchg
xor
jmp
or
into
int
push
inc
aad
pushf
add
dec
cmp
jo
js
lock
aad
pop
or
mov
rol
aad
sbb
push
mov
ficom
cmp
retf
jmp
mov
mov
(bad)
(bad)
push
mov
sbb
or
xlat
in
xchg
sbb
dec
sub
inc
pop
imul
and
enter
push
mov
stos
sub
(bad)
dec
and
inc
mov
stc
mov
inc
aad
mov
mov
and
das
(bad)
aas
stos
push
push
int
push
icebp
std
movs
daa
clc
call
fild
stos
xor
or
xor
(bad)
stc
aaa
ins
test
idiv
or
push
dec
mov
adc
xchg
test
sbb
lds
mov
and
adc
out
out
retf
fwait
adc
push
pop
das
sbb
cmps
shr
jmp
xchg
leave
lods
or
or
lds
mov
jge
xchg
(bad)
jo
lods
in
lea
(bad)
leave
aam
in
in
rol
jnp
jns
pop
shl
test
fld
ss
sbb
lods
fdivrp
xchg
add
dec
push
xor
loopne
enter
jmp
xor
pop
push
out
xor
and
jne
lea
mov
mov
sub
jae
enter
inc
mov
stos
xor
(bad)
jo
adc
mov
retf
lahf
xchg
pusha
mov
call
adc
arpl
and
mov
(bad)
sti
jg
and
femms
enter
cwde
xchg
leave
adc
in
xor
mov
jecxz
lock
mov
xchg
xchg
test
xchg
cmp
jno
dec
pop
out
mov
ror
pop
dec
cld
mov
xchg
scas
mov
xor
jmp
adc
(bad)
or
push
cmp
xchg
daa
test
xor
(bad)
out
jmp
fs
fsub
dec
sub
jno
lods
inc
adc
jo
aad
adc
pop
mov
sub
test
outs
adc
xor
inc
sub
sub
mov
lock
xchg
pop
mov
stos
loope
aad
inc
(bad)
in
fmul
mov
sub
push
aas
jbe
jle
ja
dec
stc
xchg
call
hlt
mov
cdq
xor
and
jns
ss
and
stos
jg
xchg
and
je
jmp
mov
outs
or
mov
dec
adc
adc
xor
sti
cwde
(bad)
xor
out
out
fsub
mov
sub
mov
jae
dec
dec
fdivr
retf
push
pop
sbb
movs
les
fld
rcl
fdiv
xor
push
je
je
je
sahf
cwde
mov
js
(bad)
stc
(bad)
jle
clc
fmul
lods
dec
sub
and
popf
lds
in
pop
enter
sub
and
dec
loop
cmp
xor
jno
pop
lods
outs
leave
cmp
sub
pop
adc
(bad)
in
shr
mov
daa
cmp
push
mov
test
pusha
jg
movs
xor
mov
les
cmc
fld
adc
jmp
movs
jo
mov
gs
xor
mov
dec
imul
loopne
test
out
aaa
(bad)
xchg
inc
repnz
je
sbb
aad
jmp
mov
dec
dec
aaa
pop
lods
and
or
imul
test
lahf
inc
cs
mov
aad
in
pop
in
mov
pushf
mov
cmps
inc
loopne
dec
jmp
in
jmp
xor
push
mov
dec
jecxz
hlt
mov
dec
cmc
or
shl
sbb
js
mov
les
jns
inc
movs
fisub
int3
in
push
(bad)
xchg
jo
and
and
imul
and
add
dec
sbb
pop
out
aad
sbb
fs
js
sar
cdq
pusha
xchg
pushf
aam
dec
add
pop
mov
leave
cmp
inc
mov
fistp
xchg
js
mov
push
push
rcr
movs
dec
movs
leave
cmp
xor
mov
push
dec
cmps
outs
mov
les
sti
sbb
inc
mov
fld
add
je
(bad)
outs
mov
jns
div
or
js
sbb
xor
jo
aas
sub
mov
and
mov
lods
dec
jecxz
repnz
mov
adc
mov
cmp
pusha
dec
xchg
ror
rol
and
(bad)
push
inc
cmp
sar
repz
pop
sub
sahf
mov
js
mov
mov
loopne
int3
aad
add
sub
loope
dec
push
aam
lds
cdq
inc
fidiv
lds
cmp
cs
cmp
or
sbb
ss
sub
dec
popf
cwde
sahf
movs
xchg
pop
lahf
inc
fcomp
pop
mov
cwde
aad
aad
jne
cmp
imul
sub
fnstcw
lock
mov
imul
shl
xchg
cmp
fisub
call
add
and
ins
pushf
sbb
fs
shr
jge
lods
sbb
lock
ins
mov
popa
cmc
cdq
mov
lea
pop
mov
or
add
push
push
outs
sbb
cld
dec
mov
fdivr
mov
clc
in
(bad)
sbb
nop
xchg
or
inc
push
and
dec
pusha
xchg
jno
push
mov
cs
cmp
mov
dec
mov
in
inc
push
fdivr
fsubr
sub
push
mov
scas
gs
push
add
int3
push
xchg
aaa
cmp
pop
jge
les
or
mov
push
inc
call
jne
mov
mov
inc
inc
js
mov
xchg
jmp
xchg
scas
sub
pop
out
push
test
mov
outs
fldcw
clc
test
mov
fisubr
sbb
icebp
xor
fs
jnp
cmp
xchg
cwde
xchg
aad
sbb
mul
or
mov
js
nop
or
neg
fcmovu
mov
inc
fist
sub
xchg
cdq
std
push
push
cmp
inc
sub
inc
imul
mov
sbb
sub
(bad)
sti
inc
out
or
(bad)
dec
fs
div
push
movs
or
js
imul
jmp
xchg
pop
pop
popa
mov
xchg
pop
daa
sti
mov
ins
and
(bad)
out
xchg
cmps
lds
iret
mov
adc
je
in
mov
cmp
mov
das
cmc
xchg
jne
(bad)
sub
sub
cmp
imul
inc
mov
loope
dec
push
clc
push
mov
and
cmps
stc
repnz
fs
test
mov
lods
mov
aam
fadd
mov
or
cmp
out
cmps
mov
mov
cmc
js
sbb
movs
push
mov
jns
neg
test
cmp
ds
push
cwde
mov
imul
rcr
dec
mov
jl
mov
sub
or
jmp
and
mov
pop
in
int
mov
sub
imul
xchg
cwde
daa
fsubp
lock
mov
push
mov
ret
adc
mov
repz
fs
lock
dec
sub
dec
(bad)
lods
lods
shl
shr
jecxz
gs
ja
jp
pop
inc
ss
stos
pop
pop
data16
jmp
dec
push
pop
pop
pop
jg
mov
xor
lods
fidivr
mov
sbb
sub
imul
aas
adc
icebp
jb
cmp
add
and
sbb
mov
out
add
clc
sbb
test
xchg
xchg
push
sti
idiv
push
(bad)
retf
xor
or
lds
cmps
das
lahf
call
sbb
dec
cmp
cmc
js
cmp
xchg
mov
rcr
in
daa
pop
mov
mov
aad
retf
lock
call
inc
jl
and
xor
pushf
iret
dec
imul
inc
test
pop
mov
jnp
adc
xor
xchg
(bad)
je
adc
enter
push
cwde
mov
pop
sbb
fcom
ins
adc
out
inc
fiadd
dec
or
hlt
add
sub
rol
ficom
push
pop
or
sbb
enter
(bad)
sbb
add
or
stc
sbb
mov
jl
dec
jns
fisttp
gs
mov
adc
stc
mov
outs
pusha
push
std
sub
jb
out
pop
leave
hlt
mov
rcr
xchg
icebp
dec
inc
pop
push
jne
jae
test
loopne
fcom
xor
push
pop
(bad)
retf
(bad)
push
call
push
sbb
push
sbb
dec
fs
popf
sub
outs
imul
mov
sub
jbe
and
push
shl
pop
push
jg
pop
cmp
retf
add
in
push
popa
jmp
retf
push
add
inc
jge
jp
cmp
push
fcom
test
or
push
loopne
and
pop
push
ds
inc
xor
sub
sub
sti
aad
cdq
add
sbb
mov
sbb
sbb
mov
out
jbe
jg
pop
mov
adc
int
vpunpcklwd
pusha
sbb
ror
test
(bad)
cmp
and
pop
mov
sub
fisttp
pop
inc
push
test
js
add
push
stos
lods
(bad)
icebp
cmp
leave
aam
inc
fcmovu
stos
sbb
ins
fisttp
test
adc
mov
loope
(bad)
loope
xor
and
dec
and
dec
les
aad
test
aad
dec
retf
sub
or
das
out
add
or
mov
addr16
add
push
xchg
jecxz
imul
adc
jmp
xchg
sbb
pushf
test
out
fs
fmul
cmp
ins
aam
mov
xor
fadd
(bad)
cmp
and
retf
lock
pop
push
xchg
mov
aad
cdq
pusha
mov
mov
mov
adc
dec
cmps
mov
sub
xlat
sub
stos
test
push
sub
sub
push
pop
lds
jae
gs
inc
imul
mov
cld
lock
pop
sbb
in
cli
pushf
fmul
push
fist
loop
or
in
xchg
adc
pop
or
xor
icebp
add
mov
mov
cdq
sbb
int
push
sbb
pop
popf
xchg
jl
pop
movs
adc
mov
into
aad
lods
shl
adc
cmps
push
inc
lods
sbb
loope
out
je
jg
mov
sti
idiv
leave
push
inc
lds
push
push
into
mov
push
sub
mov
lock
cmps
xor
mov
xor
icebp
test
aad
lods
enterw
jg
gs
bound
adc
sbb
xchg
inc
imul
dec
dec
mov
shl
or
sbb
sub
sbb
cwde
ficomp
dec
mov
dec
sub
xor
retf
xchg
jge
mov
or
aam
adc
inc
adc
inc
out
adc
test
xchg
(bad)
mov
mov
leave
jge
nop
hlt
sbb
pop
bound
mov
pop
mov
ja
icebp
loope
rcl
mov
(bad)
mul
mov
and
pop
ffree
pop
sub
cmp
or
stc
xlat
retf
cmp
pop
(bad)
ins
lahf
addr16
sub
out
in
mov
aam
add
ss
and
inc
jecxz
imul
mov
pop
sahf
shl
and
(bad)
addr16
mov
push
fst
inc
shr
test
scas
push
ja
cmps
test
sub
pop
jno
lock
jmp
cwde
leave
or
iret
cli
mov
std
jb
(bad)
leave
cmp
movs
push
mov
xor
or
mov
mov
jmp
cmp
jbe
out
aad
cmp
imul
inc
xchg
ja
sti
stos
add
into
idiv
push
add
test
dec
and
add
bound
mov
loope
or
adc
dec
pop
fnstsw
or
mov
or
cli
or
xchg
mov
clc
inc
sub
fst
pop
and
sub
test
and
retf
inc
and
stos
loope
pop
popa
dec
je
out
cmp
mov
xchg
xchg
jne
enter
in
imul
aas
push
xor
call
or
loop
movs
mov
retf
repz
xor
imul
xor
sbb
cmp
ror
adc
xchg
push
jmp
add
dec
gs
xchg
or
js
call
ror
loop
adc
mov
mov
pop
pusha
imul
test
pop
imul
jmp
push
pop
and
sbb
pop
and
gs
mov
push
dec
push
cmp
daa
push
and
imul
sbb
pop
retf
mov
(bad)
ret
inc
and
int3
xchg
loop
sbb
test
mul
repz
popf
add
sub
sbb
or
jo
mov
stos
ss
push
sub
std
push
sub
sbb
imul
mov
psrlq
lods
loop
xor
inc
xor
push
dec
sahf
and
push
retf
test
mov
(bad)
mov
cmp
add
adc
stc
imul
cwde
add
mov
in
clc
(bad)
sbb
pop
xchg
sbb
sbb
push
lods
loop
inc
test
hlt
sub
jbe
and
vpcmpd
adc
mov
xor
loope
repnz
jmp
pop
push
cdq
imul
leave
xor
inc
stos
push
out
fcmovb
icebp
or
adc
mov
test
sbb
inc
dec
cmc
repnz
cdq
test
jne
cmc
cdq
mov
mov
cld
popa
pop
mov
les
xor
cmp
adc
leave
add
or
cmp
mov
sbb
jge
mov
fwait
cmp
outs
push
pop
mov
outs
mov
add
jmp
xor
jp
jmp
rol
neg
jne
and
sub
les
jg
or
test
leave
cs
in
cmc
scas
or
mov
xor
dec
pop
pop
and
test
imul
mov
cwde
int
gs
stos
shl
pop
mov
test
mov
sbb
outs
in
push
adc
nop
pusha
imul
dec
xchg
cmp
in
inc
in
mov
cmc
test
fist
mov
adc
jae
xor
aas
adc
(bad)
mov
ins
jecxz
sub
in
push
push
enter
mov
sbb
cmp
jnp
pop
cmps
mov
mov
cmp
es
imul
sbb
inc
or
xchg
adc
jle
rcl
add
sbb
add
dec
or
out
popa
sbb
jecxz
add
mov
(bad)
mov
add
or
pop
adc
fcomp
mov
loope
adc
lea
icebp
cmp
ror
aam
add
imul
mov
(bad)
or
sub
add
inc
jnp
and
inc
or
loope
and
fsin
dec
mov
imul
pop
fbstp
fldcw
fstp
dec
int
jmp
sahf
inc
lea
shl
jne
imul
popa
data16
std
lds
aad
jno
mov
loopne
pop
(bad)
shr
dec
(bad)
jae
sbb
je
js
dec
rol
push
inc
cdq
idiv
dec
fist
out
inc
(bad)
lods
cmp
cmp
aam
dec
rcr
fld
in
mov
adc
sbb
push
push
sub
nop
lods
or
xchg
pusha
inc
dec
mov
adc
xchg
cmp
cdq
loop
mul
cwde
cmps
adc
inc
ins
nop
aam
aam
sti
call
jb
nop
xchg
daa
push
repnz
pop
sub
cmps
jecxz
loopne
cmc
ffreep
in
jmp
mov
into
mov
daa
addr16
sbb
rol
mov
idiv
ss
add
inc
add
lods
stc
cmp
into
inc
ror
sbb
push
dec
loope
sar
or
and
(bad)
dec
(bad)
mov
pushf
std
lods
pop
jb
shl
shl
sub
out
ss
fstp
jbe
jl
dec
xchg
ss
cmc
xor
stc
loop
xor
pop
sub
lea
pop
mov
jne
mov
leave
in
in
jecxz
pop
cmp
push
dec
(bad)
movs
pop
or
jmp
push
sahf
fld
or
and
pop
sbb
push
aaa
les
jmp
imul
xchg
mov
add
fist
es
lea
std
mov
inc
xchg
adc
push
dec
aaa
ret
bound
movs
mov
aad
sub
test
cmp
rcl
lods
or
jp
lea
(bad)
adc
test
sbb
mov
jo
mov
fs
cmp
imul
dec
hlt
xchg
pop
mov
into
out
stc
add
and
jb
sbb
adc
rol
inc
jne
in
jp
dec
ins
ficomp
jl
popf
or
and
mov
cdq
ins
inc
jp
xchg
(bad)
fucom
aam
xchg
pop
in
retf
push
inc
cmp
aaa
addr16
stos
pop
js
aaa
xor
gs
mov
mov
mov
ds
or
sbb
sbb
scas
mov
mov
test
jmp
sbb
test
inc
imul
jno
fs
mov
push
or
sub
call
pop
adc
inc
ret
push
xchg
lods
vmwrite
sub
bound
jns
rol
sti
and
shl
add
fs
inc
div
test
fisttp
lods
dec
ror
dec
dec
adc
or
lds
test
or
aad
inc
inc
mov
push
xchg
test
je
sub
movs
cmp
lods
xor
scas
pop
es
movs
movs
pop
push
sub
nop
lahf
movs
das
cmp
xchg
pop
in
jnp
mov
mov
and
std
jns
cmp
mov
pop
lock
cmc
outs
fimul
xor
aad
mov
not
jne
xchg
push
leave
(bad)
and
jmp
retf
mov
cwde
dec
popa
cmp
sbb
and
xor
pop
jns
jb
stc
cmps
add
les
aaa
sub
sbb
stc
cmp
or
xor
std
mov
popf
jmp
in
pushf
mov
and
or
sbb
sahf
mov
repz
jmp
jb
add
dec
dec
and
mov
inc
add
fst
push
jo
mov
jns
or
test
js
cmps
cmp
mov
mov
fadd
movs
sub
mov
pop
inc
call
xchg
jno
or
sbb
mov
clc
aad
neg
gs
push
pop
xor
test
sti
fsubr
(bad)
rcr
push
jmp
sbb
stos
xchg
push
cmp
int3
sub
data16
pushf
cmc
jmp
(bad)
sub
cmp
push
aam
pop
jne
cmc
adc
and
ror
inc
inc
push
pop
ret
cdq
ins
sub
sbb
(bad)
pop
inc
add
inc
or
into
movs
sti
fmul
in
in
pop
and
movs
js
inc
retf
imul
aas
popf
call
leave
call
int3
repz
mov
es
and
enter
xchg
ja
jge
add
shr
xlat
into
jne
cmps
lods
out
ror
xor
mov
jb
adc
add
push
push
jmp
xchg
inc
loop
aaa
push
and
jmp
xlat
mov
cmp
scas
lea
mov
js
xor
call
into
and
pop
sub
iret
and
int3
jnp
fsub
frstor
out
adc
ja
jge
inc
std
pop
inc
dec
xchg
ins
cmp
aas
cmp
sbb
mov
mov
mov
or
aaa
mov
dec
pop
jmp
xor
pop
mov
leave
cdq
mov
mov
adc
push
adc
mov
mov
pop
push
push
inc
push
jnp
mov
and
sbb
ins
pop
and
mov
fs
pop
sti
imul
pop
jmp
aaa
sub
les
dec
mov
iret
data16
push
fiadd
test
in
outs
dec
add
sbb
mov
mov
mov
cmp
pop
mul
xchg
cwde
stc
or
push
cwde
and
mov
and
retf
aad
fs
and
les
add
int
sbb
xlat
stos
pop
pop
xor
lds
ret
push
in
mov
inc
leave
fmulp
cli
fstp
inc
sbb
add
mov
add
fidivr
popa
sub
icebp
leave
push
nop
repz
mov
in
sub
or
sub
std
mov
adc
xchg
inc
in
adc
jl
shl
test
shl
jne
stc
add
test
shl
leave
ja
push
jne
or
jns
aam
mov
lods
imul
cmc
and
pop
fadd
push
or
xor
sbb
adc
(bad)
xchg
test
lods
lds
or
adc
dec
call
jmp
jge
(bad)
mov
rol
cmp
fdivr
and
(bad)
js
add
xor
stos
sub
loopne
repz
add
ficomp
push
inc
xor
pop
dec
out
jbe
and
dec
sub
clc
cdq
jo
jns
sahf
mov
xor
pop
sub
jbe
fild
mov
xor
inc
call
jmp
sbb
dec
in
fadd
imul
jns
shl
sbb
movs
or
ficom
retf
sar
data16
adc
cmc
out
adc
in
std
add
inc
xor
loop
inc
scas
jnp
imul
sti
sub
mov
jnp
fwait
inc
mov
push
sub
daa
(bad)
mov
xlat
cwde
loop
dec
and
jecxz
jmp
xlat
jge
inc
jmp
sbb
jbe
loopne
fwait
cdq
(bad)
inc
imul
test
jge
sub
inc
jne
push
sub
ins
cmp
pop
mov
dec
rol
mov
js
mov
jmp
fsubr
inc
cmp
xchg
clc
cmp
bound
pop
aad
jmp
cmp
jg
push
shl
(bad)
cwde
adc
mov
(bad)
dec
mul
stos
xor
push
out
pushf
jmp
push
in
ins
ret
adc
push
sahf
push
cmp
adc
imul
gs
fldcw
mov
dec
jne
jne
sbb
jne
jge
gs
and
and
inc
in
(bad)
daa
fstp
jmp
xor
push
cmp
cmp
add
stos
dec
test
aad
cmp
div
xor
push
add
fimul
mov
mov
xchg
push
loope
lahf
jo
inc
movs
adc
xor
mov
cld
lahf
mov
loope
cmps
mov
rol
push
in
pop
cmp
cmp
(bad)
movs
in
ja
mov
mov
cmc
fbstp
cli
adc
and
xchg
push
test
mov
fs
mov
push
hlt
mov
jns
fwait
cmp
mov
call
call
mov
cs
push
push
daa
ja
addr16
xor
cdq
popa
int
and
imul
sub
mov
mov
or
adc
mov
xchg
cmps
xlat
dec
ficomp
xor
xchg
sub
mov
mov
sbb
push
or
mov
out
jecxz
mov
fstp
adc
hlt
jno
aas
add
pop
jno
jo
xchg
call
lds
pusha
test
imul
push
pop
and
ins
mov
std
fisttp
imul
inc
mov
add
leave
rol
pop
add
lock
call
jl
stc
shl
fsubr
or
push
mov
mov
dec
test
lods
inc
mov
and
pop
xor
sub
in
jo
lds
clc
(bad)
std
or
out
cmc
cmp
mov
fwait
in
and
lea
pop
cwde
add
retf
sbb
stos
ja
jno
inc
push
and
addr16
outs
and
mov
call
jne
and
push
adc
xlat
inc
mov
fwait
(bad)
jmp
(bad)
jmp
pusha
out
or
seto
je
js
les
push
ret
add
(bad)
loop
sbb
ins
std
pop
ds
hlt
popa
sbb
or
mul
int3
inc
push
movs
rcr
or
mov
imul
add
(bad)
out
dec
mov
in
out
sub
or
rdpmc
test
ret
xchg
popf
loope
pop
xchg
retf
dec
into
or
cwde
ds
adc
xor
jnp
scas
lods
sti
xor
push
mov
in
and
test
in
sar
pop
sbb
push
adc
mov
mov
call
sub
dec
pop
or
mov
test
enter
mov
imul
pop
mov
(bad)
mov
out
cdq
xor
pop
jg
ja
sbb
imul
pop
lds
add
repnz
fisub
jle
push
dec
adc
xchg
mov
leave
mov
mov
dec
or
addr16
jnp
mov
push
add
jmp
sahf
mov
xor
(bad)
in
test
movs
jmp
fcomi
js
xor
inc
jmp
neg
xchg
xchg
add
ret
loopne
hlt
xor
in
jns
jnp
mov
ja
jae
and
dec
addr16
sub
lock
dec
adc
cmp
sbb
pushf
sbb
int3
mov
(bad)
(bad)
aaa
in
inc
dec
add
jns
out
push
cmp
xor
ja
push
mov
xor
push
retf
push
and
sub
adc
jb
loope
stc
stos
test
push
icebp
aad
aam
dec
adc
daa
jno
pop
ficom
mov
inc
xchg
test
lods
aam
test
push
push
push
clc
xor
inc
xchg
cwde
test
jecxz
test
push
in
add
jbe
cdq
test
pop
(bad)
fst
xchg
test
dec
lock
fs
xor
jmp
xor
leave
push
fidiv
mov
xabort
rcr
cmp
in
aad
mov
sub
sbb
adc
hlt
jle
mov
jle
cmps
mov
fdiv
test
(bad)
push
xchg
jns
add
std
mov
pushw
jecxz
leave
ret
stc
xor
mov
sub
rol
aad
jmp
je
sahf
inc
test
mov
adc
cwde
gs
out
aam
xor
icebp
mov
sub
mov
inc
clc
aad
add
xchg
jne
popf
and
aas
lea
xchg
jmp
outs
jbe
add
push
outs
movs
movs
add
jecxz
pop
jecxz
gs
mov
cmps
imul
dec
inc
loope
jmp
mov
mov
f2xm1
and
inc
add
leave
inc
int
dec
addr16
cmps
add
sub
xchg
sbb
or
stos
pop
iret
ror
jno
mov
add
arpl
and
out
xchg
push
test
int
pushf
in
dec
(bad)
cld
and
sub
out
mov
xchg
aam
sub
loop
lds
ficomp
or
and
xor
out
imul
inc
out
xor
or
cld
push
sbb
and
push
inc
sub
xor
loop
mov
sbb
aam
jmp
sub
push
dec
pop
dec
dec
sub
dec
or
push
pop
or
cmp
sub
jge
mov
dec
in
dec
arpl
js
jg
shl
popf
cmc
pop
leave
retf
es
(bad)
ins
sbb
fs
pop
dec
mov
mov
pop
fidivr
(bad)
pop
xchg
mov
mov
jg
mov
stos
xor
xor
sub
dec
int3
stos
push
nop
iret
cwde
inc
or
movs
and
imul
std
sti
imul
mov
aam
cmc
mov
push
cmc
mov
mov
fsub
cmc
sub
and
stc
adc
push
mov
mov
pop
lahf
mov
jl
mov
sbb
dec
sbb
cwde
stos
dec
push
xchg
inc
jle
jns
jno
mov
inc
jo
xchg
and
xchg
outs
cdq
inc
jmp
retf
data16
or
add
arpl
or
jp
cld
dec
add
fwait
mov
pop
dec
xchg
mov
dec
mov
cdq
out
idiv
daa
retf
out
lea
cwde
std
cmp
enter
jge
addr16
leave
sbb
xor
icebp
lods
add
dec
add
inc
test
mov
test
mov
cld
in
jns
imul
inc
inc
mov
imul
mov
jmp
hlt
into
xor
(bad)
xchg
in
in
vpunpckhwd
jo
test
(bad)
in
and
sbb
pop
pop
sar
mov
xlat
pop
les
fwait
lock
sbb
out
jmp
shl
sub
sbb
test
xchg
mov
lahf
sub
test
out
jmp
inc
ins
and
pop
dec
adc
pop
pop
and
cmc
mov
mov
rol
mov
ret
push
pop
cmp
xor
sub
mov
pop
ins
jge
pop
sbb
out
pop
ror
push
cmp
arpl
cmps
in
lahf
jg
mov
sub
xchg
mov
dec
mov
mov
sub
cli
(bad)
xor
in
jo
hlt
imul
cmp
and
mov
mov
(bad)
test
mov
push
repz
inc
mov
out
std
jne
mov
inc
mov
mov
sub
cmp
pusha
rol
push
pop
xor
popa
sbb
(bad)
fstp
cmp
cmp
xor
ds
and
sar
push
fadd
sub
xor
push
pop
stc
fistp
scas
sub
pop
pop
jno
popa
add
jge
mov
xor
mov
lea
test
inc
push
aaa
push
or
jmp
(bad)
in
mov
jmp
sets
mul
and
sbb
aam
push
mov
test
mov
dec
outs
in
push
aam
xchg
push
ss
pop
add
pop
xchg
lods
call
in
add
xor
iret
mov
imul
cmp
jbe
cs
mov
add
test
imul
scas
addr16
xchg
enter
add
adc
dec
dec
gs
pop
je
fstp
cld
bound
adc
xchg
mov
pop
jge
jp
test
push
repz
push
or
sti
(bad)
call
dec
cmp
sbb
push
sub
xor
sbb
and
xor
jno
xor
sti
adc
push
in
xor
cld
mov
test
cld
cmc
sub
dec
cs
js
mov
sbb
popa
cmp
ins
les
sub
fmul
jg
xor
loope
mov
les
idiv
imul
sar
inc
cdq
das
addr16
jg
lds
and
and
pop
ja
mov
mov
dec
call
cmc
mov
xchg
and
daa
jp
retf
(bad)
jns
lods
shl
test
cmp
pop
inc
arpl
lea
cwde
adc
jne
add
jmp
pushf
adc
push
add
push
cmps
mov
push
mov
add
adc
mov
ds
sub
cmp
call
jb
sahf
or
mov
sbb
add
int
jb
mov
lahf
fcomp
inc
aad
lods
mov
cmc
cmp
pop
loope
clc
pop
adc
shl
jge
retf
mov
mov
xchg
test
inc
xor
xchg
cmps
push
clc
sti
fadd
mov
mov
imul
jns
mov
vpunpckhbw
push
sbb
add
cmp
pop
cwde
jl
mov
inc
push
xchg
ds
in
sub
mov
icebp
ffreep
jno
or
and
sub
sub
jo
xor
sub
aaa
dec
(bad)
fld
jno
jne
cmp
test
mov
cmps
mov
test
xchg
nop
aad
fnstsw
mov
inc
adc
push
ds
int
push
mov
outs
les
(bad)
adc
jp
loope
and
inc
and
cs
daa
mov
or
sbb
lods
cld
pushf
movs
jno
jmp
clc
xor
(bad)
das
and
adc
shl
pop
fs
cmc
stc
in
rol
cmp
push
add
xor
pop
pop
add
or
hlt
jo
cmp
(bad)
in
hlt
aam
call
or
xchg
mov
sub
jno
jbe
aaa
(bad)
(bad)
ss
and
xchg
xor
pop
scas
fild
ss
jecxz
(bad)
jnp
inc
aad
jb
inc
inc
dec
js
adc
and
fcmovbe
push
xchg
cmp
je
ficom
sub
stc
xchg
fadd
das
pushf
push
psubd
mov
imul
jnp
xchg
jp
pop
daa
dec
xchg
cmp
sub
pop
(bad)
enter
pop
arpl
jae
and
or
or
sbb
jb
mov
sti
out
mov
pop
sub
inc
pop
mov
cld
or
or
xchg
adc
call
fsub
arpl
pop
das
lods
and
jmp
push
sbb
or
lock
test
xor
mov
dec
inc
pop
rcr
fs
js
mov
pop
stc
in
cmc
pop
outs
leave
or
cmp
lock
js
popa
in
repnz
and
jnp
cmp
add
mov
cmp
std
repnz
mov
or
jns
imul
add
test
xor
cld
sbb
stos
int3
dec
pop
ss
imul
or
int
push
and
and
adc
mov
ret
adc
mov
arpl
sbb
sbb
sbb
xor
je
in
popa
ins
dec
fisub
add
(bad)
cmp
jmp
jl
or
jno
push
inc
sub
mov
test
or
ss
mov
mov
and
push
retf
aam
inc
inc
cli
or
imul
inc
jge
mov
cmp
jno
sub
je
dec
cmps
add
xchg
dec
call
ret
sbb
fstp
lds
dec
shl
pop
retf
mul
adc
sbb
inc
lods
sub
iret
cmp
loop
sbb
push
lds
dec
cmp
sbb
aaa
addr16
or
fwait
sbb
rol
lock
sub
mov
hlt
jne
jne
ficomp
inc
push
push
pop
and
mov
stc
xchg
pushf
jg
push
add
pop
jno
sbb
ret
pop
cli
jp
js
or
repz
pop
in
fiadd
lock
xor
dec
imul
inc
sbb
int3
cld
lds
stos
sub
jnp
sub
dec
mov
cdq
ss
lea
movs
aas
aad
neg
(bad)
call
sahf
lods
jl
(bad)
fcomp
pop
inc
cwde
test
mov
xchg
das
mov
out
repz
loop
adc
sbb
js
adc
aam
add
(bad)
mov
jbe
enter
call
or
cmp
cwde
jmp
in
sub
gs
add
movs
sbb
imul
les
adc
mov
shl
(bad)
jecxz
and
or
push
mov
push
in
dec
inc
or
int3
push
ja
jbe
clc
xor
jmp
pop
sub
mov
call
test
in
pop
mov
xchg
rol
jne
pop
cdq
push
sub
mov
add
pop
adc
test
xchg
idiv
xor
enter
out
jmp
ror
jmp
out
inc
xchg
js
aam
pop
xor
outs
push
pop
aam
pop
cmp
mov
sub
push
dec
(bad)
aam
jp
mov
cwde
mov
popf
std
shr
sti
lock
pop
mov
test
inc
lahf
inc
imul
inc
enter
cmp
loope
mov
lods
mov
pushf
mov
lock
lods
pop
jmp
les
jge
xacquire
retf
es
and
jg
cmp
sbb
dec
aad
dec
adc
cmc
test
pushf
lods
retf
cwde
pop
push
sub
sub
jo
sbb
push
int
cmps
and
mov
ror
mov
pop
jle
ja
mov
int
lods
ret
out
das
jecxz
lods
std
mov
pop
inc
test
adc
push
data16
fwait
sbb
jmp
in
xchg
mov
es
jnp
jle
jb
pusha
fnsave
pusha
pop
mov
pop
jl
adc
xlat
inc
sbb
dec
jmp
js
test
adc
pop
test
xchg
(bad)
xchg
(bad)
into
aad
dec
cmps
jecxz
bound
pop
pop
push
xor
stos
mov
movs
addr16
mov
mov
sub
js
pop
imul
xchg
pop
or
sbb
das
adc
stc
jle
xchg
dec
mov
stos
jmp
sub
mov
icebp
push
and
(bad)
jg
outs
push
pusha
cwde
mov
icebp
push
inc
xor
cmps
test
and
retf
mov
repz
test
fdiv
(bad)
cli
xchg
pop
mov
into
clc
lds
(bad)
nop
adc
pusha
push
pop
pusha
push
jne
jne
adc
mov
je
ror
cwde
xchg
enter
sbb
dec
and
xchg
cmp
cmp
mov
and
jae
mov
and
jmp
xchg
enter
push
xchg
sub
mov
pop
icebp
jns
jge
lea
adc
sub
lods
pusha
fdiv
cld
mov
rcr
mov
test
and
movs
cmp
outs
dec
inc
ja
or
cdq
jne
xchg
xor
cmp
jmp
push
inc
lods
leave
jnp
movs
xor
sar
adc
lods
push
jecxz
pusha
in
nop
mov
pop
pop
push
inc
dec
mov
add
repnz
mov
inc
ja
push
pop
pop
jns
or
fild
sbb
adc
(bad)
jg
and
xchg
cmps
pushf
movs
mov
js
fdivp
dec
call
jne
push
xchg
push
loopne
xchg
lds
mov
scas
test
(bad)
dec
in
stos
pusha
adc
emms
fistp
loop
imul
pop
jle
hlt
mov
xchg
sti
jmp
dec
ins
sbb
adc
xchg
xor
mov
cmp
add
dec
mov
jo
fcom
lds
neg
cwde
sahf
add
(bad)
jmp
mov
aas
push
outs
sbb
and
push
pop
data16
lea
movs
lds
(bad)
(bad)
das
adc
and
or
adc
pusha
pop
jg
add
pop
mov
sub
mov
repz
popa
inc
or
and
int
inc
inc
loop
xor
push
imul
push
mov
sbb
imul
fnstenv
pusha
or
inc
dec
ror
mov
and
data16
dec
adc
sub
pusha
mov
or
jnp
or
es
mov
push
mov
loope
(bad)
outs
xor
(bad)
sbb
mov
es
aam
or
in
jns
test
imul
cmp
ret
mov
lahf
inc
mov
cwde
sub
repz
je
and
sti
scas
fmul
inc
and
xor
stc
mov
fucomi
sbb
push
test
mov
and
test
mov
mov
popa
cld
pop
(bad)
mov
or
mov
daa
push
xchg
mov
push
lds
or
adc
and
ds
pop
jmp
in
in
sbb
sub
push
xor
icebp
ror
outs
scas
mov
sub
mov
popa
mov
add
mov
cmc
jb
cmps
mov
push
mov
ss
cld
and
(bad)
enter
movs
je
cmps
mov
xor
in
sub
stc
mov
add
(bad)
mov
cmp
or
push
pop
lds
jo
inc
jmp
xchg
mov
aam
or
mov
xor
mov
in
pop
mov
loope
icebp
outs
mov
lahf
rcr
or
inc
dec
popa
sbb
fcomi
mov
jmp
in
xchg
dec
mov
das
and
clc
in
inc
ins
inc
int
cmp
mov
or
ins
jns
push
fstp
sbb
xor
mov
(bad)
jnp
aad
or
mov
shr
push
adc
mov
int3
dec
pop
jae
cld
xchg
pushf
dec
add
dec
inc
je
hlt
mov
(bad)
jns
pop
rol
inc
jmp
and
xchg
(bad)
mov
test
inc
and
ins
xchg
in
icebp
lock
icebp
jg
lahf
pop
fs
jg
int
fnsave
push
xchg
add
mov
fsubr
cmp
add
mov
sbb
xchg
fldenv
push
lahf
addr16
sub
lods
iret
inc
add
mov
xchg
gs
push
outs
push
or
inc
xor
fwait
push
cmp
cdq
cmc
push
scas
gs
xchg
movs
int
adc
imul
(bad)
xchg
xchg
pop
imul
jno
vunpcklpd
jmp
pop
sbb
inc
sbb
xor
(bad)
jmp
dec
fldenv
mov
cmp
out
and
push
xor
sbb
mov
stc
cdq
in
mov
mov
or
mov
xor
sub
dec
cmp
jnp
fdiv
mov
aad
mov
cmc
jns
or
fs
imul
jno
push
mov
mov
and
mov
into
sub
adc
inc
dec
push
pop
gs
test
dec
daa
push
fsubp
jmp
adc
and
push
inc
popa
popa
sub
and
jmp
jns
and
test
fld
pop
push
mov
in
push
into
and
inc
icebp
test
rcr
add
icebp
retf
push
pop
imul
inc
adc
std
ficomp
sub
aad
fcom
or
loop
add
iret
cwde
test
sub
cdq
fld
int
shl
xchg
nop
js
add
push
push
(bad)
movs
cli
js
cmc
jmp
call
retf
inc
dec
xor
in
xchg
cdq
addr16
mov
pop
dec
aad
xor
jo
adc
and
sti
xchg
and
jge
in
loopne
push
retf
movs
leave
lock
cmp
jge
cdq
repz
cli
jbe
or
popf
or
sub
addr16
popa
rcl
inc
mov
mov
cmp
mov
inc
mov
dec
mov
cs
sub
add
lea
hlt
or
in
es
cld
fcomp
inc
dec
add
movs
mov
xchg
mov
or
jl
cdq
adc
call
imul
or
jns
adc
mov
gs
sar
xor
sub
jns
cmp
cmp
jns
fmul
and
leave
xchg
call
add
cmp
mov
(bad)
mov
mov
xor
hlt
mov
fldcw
jo
imul
inc
add
add
mov
stc
gs
jmp
stc
inc
movs
cmp
dec
sbb
or
bound
stos
js
retf
or
mov
test
cli
xchg
and
mov
test
test
scas
cmp
adc
lods
call
adc
pop
aam
push
or
ins
sbb
mov
sub
inc
lds
addr16
and
ins
mov
leave
aaa
add
adc
sbb
repz
shr
daa
imul
and
jnp
pop
xchg
xchg
outs
stos
adc
xchg
jb
lods
stc
in
jnp
(bad)
and
sbb
test
push
(bad)
mov
mov
xchg
mov
sbb
test
in
(bad)
lods
sbb
aad
dec
fnstenv
add
popf
loope
hlt
imul
hlt
push
fisttp
cld
push
xchg
lea
cmp
push
mov
cmps
mov
xchg
add
xor
lds
cmp
test
int
and
cmc
and
mov
push
imul
pop
xor
pop
fld
out
int
or
jmp
push
xchg
add
mov
xor
xchg
je
jae
adc
(bad)
sbb
cmp
aaa
stc
movs
jae
in
cwde
pop
jno
pop
leave
cdq
or
aam
push
push
mov
xor
adc
xor
adc
shl
push
gs
cwde
push
scas
pop
gs
adc
mov
call
sub
cwde
je
iret
fs
xlat
xor
xchg
enter
inc
cs
inc
fadd
adc
pop
imul
mov
or
loopne
ds
xchg
stc
push
or
dec
and
test
mov
stc
aam
(bad)
mov
fcom
mov
add
ret
xor
imul
push
lds
pop
aad
popf
mov
test
test
mov
and
pop
jg
mov
push
stc
mov
out
div
xor
or
adc
xlat
mov
scas
cmc
stos
mov
in
mov
stc
repz
(bad)
xor
rcr
pop
popaw
shl
out
out
mov
(bad)
scas
js
outs
mov
gs
or
push
sub
jnp
test
stos
xchg
test
or
lods
inc
stos
sti
push
push
js
or
mov
jns
xchg
cmps
test
test
retf
in
movs
dec
cmc
jb
add
xor
pop
push
icebp
pop
push
sub
mov
jmp
dec
or
dec
int
fnstsw
jmp
pop
pop
pmaxsw
jne
pop
out
or
stc
push
mov
fcmovnu
pop
xor
ja
pop
test
push
pop
jo
repnz
mov
pop
arpl
cmp
dec
(bad)
sub
inc
dec
jp
or
dec
mov
lahf
and
jg
or
retf
sbb
fisttp
jns
inc
aas
add
and
mov
cmp
aam
(bad)
out
add
aas
xor
xor
ror
jnp
stos
add
mov
cmp
test
in
(bad)
sub
jl
pop
jecxz
jge
mov
popf
frstor
out
pop
lock
mov
gs
cmp
imul
out
push
mov
es
fidiv
dec
loope
(bad)
fmul
adc
push
inc
jnp
jne
rcl
xlat
ins
mov
cmps
sti
sbb
mov
stc
adc
aaa
xor
sbb
add
sti
ja
jge
xchg
int3
mov
aad
push
rcpps
repnz
cmp
mov
xchg
aas
test
rcl
rcr
sub
cwde
call
pop
test
imul
scas
jne
(bad)
fist
hlt
add
cmp
popa
jmp
jns
lods
xchg
jns
mov
xchg
pop
in
hlt
sub
leave
xor
inc
push
xchg
rep
test
sbb
lock
fdivr
in
jmp
add
mov
adc
gs
out
cdq
leave
mov
fadd
data16
dec
sbb
std
push
loope
mov
jne
jno
popa
push
jne
mov
ret
sub
enter
jno
cmp
add
aam
lahf
sbb
stos
mov
int3
stc
jns
fisttp
cmps
and
pop
mov
in
xchg
adc
cdq
xchg
jns
dec
jnp
and
xchg
outs
out
xchg
push
sub
fwait
js
data16
fsincos
jbe
mov
in
neg
sahf
adc
or
lds
mov
enter
mov
mov
push
push
sub
and
dec
cmp
test
push
push
in
hlt
dec
adc
sub
pop
pusha
imul
aam
in
or
ins
jmp
sub
clc
call
std
cmp
and
aam
adc
sti
push
and
or
retf
aam
jno
push
add
pop
je
push
mov
mov
and
jmp
xor
cli
jle
lock
rol
push
mov
cmp
test
mov
push
sub
aad
popa
stos
sub
dec
(bad)
js
mov
call
jmp
ds
ins
sbb
pop
cmp
push
adc
cmp
inc
arpl
mov
pop
bound
iret
mov
fwait
retf
loop
daa
ficomp
cmc
mov
sub
pop
idiv
fwait
cdq
xor
test
sbb
sub
cmc
dec
in
jp
inc
lds
bound
js
lds
(bad)
jns
dec
adc
data16
push
clc
std
lahf
push
sub
(bad)
fcomp
sbb
mov
ror
out
scas
sub
gs
outs
push
ja
daa
and
xor
nop
mov
mov
sub
xor
aam
mov
xchg
pop
aad
cli
sbb
mov
mov
in
mov
add
add
lea
jae
arpl
xchg
fld
xchg
mov
mov
cs
dec
or
jns
loope
or
mov
in
mov
sar
mov
movs
out
pop
and
ss
push
or
test
out
pop
cdq
fsubrp
dec
sub
(bad)
mov
mov
push
int
cwde
stos
sub
jo
out
shr
clc
leave
sbb
mov
mov
xchg
xchg
cwde
sub
ds
mov
add
test
dec
imul
test
mov
cmc
dec
and
cmp
jg
adc
int
aaa
inc
fimul
pop
sar
mov
xor
xchg
mov
fmul
or
push
cmp
jne
xor
sbb
pop
pusha
pushf
cmc
mov
or
xor
mov
sub
mov
mov
cmps
in
imul
loop
mov
jno
stc
sbb
ss
jl
pop
gs
mov
cwde
xchg
xchg
call
aad
sub
jnp
cs
add
sbb
aas
push
pop
push
lods
push
push
pop
(bad)
mov
fucomi
xor
or
movs
les
pop
mov
iret
jne
scas
push
(bad)
fxam
out
mov
cmc
int
adc
ficomp
jb
xor
leave
ins
sbb
cmc
adc
jmp
fcomp
dec
inc
inc
dec
and
inc
push
daa
cmp
fisub
test
mov
mov
pusha
imul
jae
js
jge
dec
aas
mov
mov
dec
add
pop
mov
cmp
mov
cmp
pop
jns
mov
and
test
cdq
(bad)
jp
push
cwde
lds
rcr
out
mov
dec
sub
int
jg
jle
sub
rcl
sub
or
dec
fld
xlat
scas
sar
xchg
js
mov
mov
push
xchg
cmc
pop
sbb
pop
pop
adc
push
pop
inc
test
adc
jbe
mov
cmp
sbb
call
fmul
daa
stc
inc
test
xchg
(bad)
iret
pop
mov
sbb
pop
imul
and
xchg
mov
pop
sub
mov
mov
mov
fimul
adc
push
sub
test
push
shr
jmp
add
movs
call
es
retf
or
sub
movs
and
jns
movs
sbb
test
aad
retf
ror
jns
push
adc
sub
or
es
and
mov
sti
test
cmc
sbb
pop
ret
ficomp
les
ins
fmul
inc
xchg
add
add
add
sbb
pop
inc
mov
sar
inc
fsub
enter
or
ins
sbb
or
daa
xor
shr
mov
in
loope
jns
cmp
jmp
or
add
cs
jnp
leave
pushf
mov
retf
enter
in
neg
sub
loopne
mov
adc
jle
scas
aaa
(bad)
jbe
and
fs
aad
adc
push
mov
fs
pop
dec
ror
jmp
lock
push
enter
retf
mov
push
lock
call
fwait
shl
add
fxam
sub
cwde
loopne
jle
in
mov
xchg
call
or
push
in
nop
ja
cmc
test
mov
les
xchg
cmp
test
aam
xchg
and
xchg
push
int
je
outs
(bad)
lock
stos
gs
stc
mov
add
aam
lds
mov
inc
sub
jno
xchg
fsub
cmc
je
adc
mov
call
adc
ja
adc
lahf
ret
or
lds
mov
add
es
setle
aad
loopne
mov
jmp
pop
push
sbb
sbb
shl
cmp
push
or
call
inc
retf
push
pop
inc
jle
mov
pushf
fild
mov
ret
retf
gs
lds
push
cmp
push
adc
and
xchg
adc
stos
and
test
sti
sbb
xor
aad
scas
aas
inc
mov
or
cwde
gs
sbb
call
sbb
jmp
lds
sub
call
cmp
fiadd
push
mov
jg
sub
jecxz
jmp
aam
sub
aam
mov
lods
pusha
push
clc
jo
inc
push
retf
pop
jl
push
ret
sahf
inc
jle
je
jne
xor
inc
scas
gs
cdq
sub
mov
sub
add
ins
aaa
mov
int
xor
inc
mov
jns
test
sar
cmps
push
stos
or
js
jo
or
enter
mov
mov
push
in
mov
sub
(bad)
mov
sub
fld
test
(bad)
fdivp
dec
imul
sbb
cmp
jns
mov
add
aad
add
lods
and
adc
dec
cmps
cdq
movs
imul
nop
cmps
mov
pop
pop
in
add
ffree
js
in
mov
inc
xchg
jno
mov
push
dec
push
cs
lock
stc
cmp
pop
sbb
repz
xchg
push
js
mov
mov
add
cmc
xor
pop
leave
mov
in
test
inc
stc
sub
sbb
mov
leave
xchg
dec
inc
fs
test
call
sbb
fld
mov
xor
jmp
push
add
cmp
ja
push
idiv
mov
inc
xchg
imul
imul
add
jmp
jge
xchg
inc
out
aad
mov
icebp
xor
jns
cmp
fstp
fild
push
jnp
push
push
pop
push
jmp
jp
gs
xor
stc
int
xor
mov
ins
mov
jns
bound
or
popa
xchg
loopne
push
iret
push
adc
clc
aad
cwde
ja
mov
int
xor
rol
jg
add
nop
or
pop
pop
push
in
dec
mov
jl
xor
ss
mov
int3
mov
jnp
jns
fs
sbb
mov
mov
mov
(bad)
push
daa
dec
cmp
stc
pop
mov
aad
lea
or
cmp
stc
les
out
cmp
inc
stos
cdq
xchg
jne
outs
fs
std
sub
jmp
stc
pop
cmp
inc
sbb
ss
xchg
mov
jnp
mov
lods
sbb
xchg
fimul
or
sbb
std
lods
xor
in
in
mov
sub
test
jmp
sub
xor
jne
mov
call
in
cmps
cmc
add
sub
(bad)
vprotw
imul
mov
mov
aad
in
cmp
sbb
xchg
cmp
mov
jg
test
mov
mov
mov
frstpm(287
in
xchg
pop
or
adc
dec
(bad)
hlt
push
test
push
xchg
dec
pop
cmc
lahf
mov
mov
outs
(bad)
test
lds
sar
sub
inc
pop
dec
xor
jmp
or
xor
enter
fldcw
cmc
cmc
ret
xchg
fmul
and
inc
xchg
push
fnstenv
mov
inc
jb
leave
fstp
sub
aas
add
and
scas
mov
popa
mov
mov
mov
enter
push
gs
test
hlt
leave
call
rol
icebp
cdq
fnstcw
sbb
mov
(bad)
adc
test
sbb
ret
std
lock
pop
or
push
pop
push
cmc
fcmovnbe
(bad)
add
retf
or
ins
cmp
add
das
jne
aad
mov
fadd
sub
sti
aad
dec
xor
dec
pop
rcl
test
push
or
sbb
cli
xor
pop
pop
dec
inc
and
jle
inc
cmp
shr
test
add
scas
and
cld
pop
xor
les
js
call
fs
enter
hlt
hlt
fs
jns
add
pop
push
push
shl
cmc
and
ror
arpl
aam
add
jl
mov
or
pop
jle
int3
(bad)
xchg
mov
mov
sbb
dec
mov
mov
jge
scas
add
iret
lds
ss
mov
xchg
aad
cmps
fist
jmp
pushf
das
pop
js
push
xchg
inc
test
pop
popf
(bad)
pop
fsub
sub
xor
retf
ret
movs
outs
xor
and
adc
add
or
mov
hlt
pop
sahf
cmp
rcl
jns
adc
movs
jne
push
ss
add
push
les
movs
gs
je
dec
shr
fmul
in
das
ins
xor
and
cmp
xor
mov
and
aad
test
push
and
aad
inc
call
mov
cdq
inc
js
inc
scas
sub
add
(bad)
fcmove
sbb
prefetch
or
adc
aas
icebp
jp
dec
xor
push
pop
or
cwde
mov
sbb
ror
pop
cmps
jmp
stc
mov
movs
cmp
les
mov
xchg
jbe
sub
leave
or
sbb
sub
std
lock
sti
jo
ja
ss
imul
adc
cmp
and
in
or
cmp
xor
jnp
test
inc
push
hlt
adc
dec
aam
std
pusha
jecxz
and
adc
mov
push
push
inc
jns
ss
jmp
push
test
test
jmp
aam
push
mov
and
push
movs
push
mov
stos
cmps
lea
sar
in
add
pop
add
and
mov
pop
aas
xchg
js
mov
mov
mov
mov
std
cmc
cmp
leave
adc
push
add
nop
sub
bound
les
les
cmp
cmp
xor
xor
rcr
cwde
adc
mov
cmp
jne
cmp
sti
kortestw
pcmpgtb
sbb
inc
and
push
ror
sbb
or
add
out
cmp
cwde
adc
push
mov
popa
icebp
pop
lock
hlt
cmp
xchg
or
cmp
iret
ret
test
mov
push
mov
mov
cmp
mov
and
xchg
pop
aas
out
mov
cmp
iret
or
cwde
ror
ss
dec
retf
imul
movs
mov
or
adc
cmp
out
in
lea
dec
call
loopne
addr16
sti
sahf
call
pop
gs
loopne
test
cdq
cdq
push
and
pushf
push
cwde
jae
movs
dec
xlat
hlt
push
cmp
adc
retf
ins
xor
jnp
inc
or
je
push
test
addr16
aam
adc
cld
les
cmps
mov
hlt
rcl
loope
mul
icebp
mov
dec
xchg
jns
inc
xchg
movs
xor
push
clc
adc
dec
stos
jmp
sbb
xchg
ficomp
adc
pop
enter
or
adc
mov
add
sbb
mov
test
test
push
enter
cmc
enter
push
and
adc
test
adc
add
cwde
jne
jl
pop
idiv
push
jl
or
movs
xchg
or
mov
cmps
in
imul
or
nop
xor
pop
xor
and
in
dec
int
add
mov
cmp
stc
mov
clc
mov
in
jmp
jo
xchg
dec
pop
bound
hlt
adc
push
das
cmc
aas
mov
and
je
sbb
adc
in
cmps
and
pop
jns
or
call
mov
(bad)
mov
(bad)
jmp
addr16
pop
nop
sahf
test
inc
mov
add
shr
sbb
dec
aam
adc
dec
inc
mov
push
jns
pop
dec
mov
movs
xor
aam
int3
imul
loopne
les
xor
ins
mov
nop
jp
xchg
and
lds
cwde
call
sub
pop
cmp
sub
(bad)
push
js
outs
cmp
xchg
je
hlt
stos
test
add
jl
adc
ss
lods
pop
cld
mov
jae
add
xchg
repz
jmp
or
aaa
pop
dec
sbb
sbb
push
push
in
push
jne
js
xchg
mov
mov
psubq
or
xor
movs
cli
jle
cmp
(bad)
and
fs
mov
fadd
fist
xor
add
add
sbb
push
cmc
or
dec
adc
cmp
add
data16
sbb
sub
pop
js
mov
fdivr
pop
xchg
push
mov
in
mov
cmp
ret
movs
test
pop
ret
pop
in
retf
jns
movs
mov
test
pusha
add
into
vmovd
sbb
mov
xchg
mov
mov
hlt
sbb
arpl
add
test
sbb
loope
xor
enter
hlt
cmps
mov
and
aad
cli
les
jle
adc
dec
out
push
adc
cmps
jg
movs
lods
or
shl
and
stc
int
pop
in
into
pop
aaa
add
inc
fsub
push
mov
pop
jbe
cwde
or
mov
add
dec
jp
paddusw
into
mov
loope
stos
movs
hlt
mov
jns
adc
aaa
sub
inc
xor
(bad)
mov
rcr
dec
jno
inc
imul
jne
dec
cmp
jb
movs
jne
std
mov
ror
inc
pop
mov
in
fcomp
cs
rol
jmp
movs
popa
inc
jbe
jmp
jns
sbb
hlt
cmc
jbe
shl
mov
mov
xor
call
jns
pop
out
loopne
xor
xor
xor
cmp
inc
inc
inc
cdq
cwde
stc
mov
mov
mov
and
push
inc
sbb
out
das
shl
int
dec
push
sub
push
fcomp
sub
inc
jno
call
enter
mov
cmp
mov
fs
pop
jne
pop
mov
sbb
push
fimul
or
lea
mov
add
mov
push
fistp
arpl
cmp
jns
xor
or
test
lock
enter
(bad)
mov
ja
push
dec
jbe
sub
and
sub
js
or
retf
stc
add
clc
xchg
mov
jg
movs
push
daa
test
leave
lds
mov
lea
push
push
and
cli
xchg
mov
or
xchg
fisttp
mov
fwait
dec
adc
add
jg
push
push
pop
ret
sbb
adc
test
sbb
cmps
mov
test
retf
mov
push
sub
or
aas
sub
push
retf
stos
mov
(bad)
repnz
imul
and
push
add
add
cdq
enter
rcl
and
mov
gs
jns
cwde
(bad)
jns
jg
jmp
shl
(bad)
ja
or
or
push
sbb
sbb
fld
mov
enter
xchg
cmc
shl
arpl
and
stc
sub
aas
add
inc
mov
push
mov
mov
idiv
test
jo
or
xor
aad
out
shr
jb
push
rcl
icebp
mov
jle
and
mov
pushf
add
js
pop
pushf
dec
add
push
mov
inc
cli
add
jl
sub
mov
cdq
mov
add
popa
out
std
je
and
dec
test
or
xlat
call
mov
jecxz
or
popf
movs
(bad)
cmp
fbld
jecxz
lds
das
pop
push
inc
sti
ror
mov
mov
popa
push
jae
dec
sub
(bad)
push
inc
movs
adc
and
cld
mov
in
cmc
xor
fwait
pop
and
into
xchg
cmp
movs
jge
(bad)
jmp
mov
xor
mov
cmps
jnp
lahf
daa
pop
add
dec
mov
cmp
enter
pop
or
inc
(bad)
outs
or
outs
div
call
mov
fadd
xchg
enter
call
out
jns
add
popa
cmovl
push
sub
jns
mov
movs
mov
add
lods
lds
enter
xchg
dec
inc
adc
pop
(bad)
mov
or
leave
inc
inc
retf
dec
push
push
jle
inc
data16
ja
daa
hlt
das
test
push
pusha
js
mov
dec
mov
aam
or
aam
xor
jne
loop
and
test
retf
retf
inc
mul
cmp
inc
aad
pop
cmp
int
out
js
mov
push
imul
jmp
mov
cmp
gs
xchg
jns
mov
sar
xlat
pushf
mov
sbb
sbb
sbb
in
out
ins
js
mov
mov
jmp
daa
mov
rcl
inc
and
ret
cmp
loope
xchg
shl
das
aam
cdq
imul
xchg
cdq
rcl
stos
and
dec
dec
out
push
jo
mov
inc
sti
pop
setb
repz
mov
or
adc
sub
imul
daa
leave
retf
rcr
pushf
fisubr
aam
mov
sbb
call
(bad)
cs
popa
xchg
fnstenv
mov
repnz
imul
leave
xor
cld
push
add
out
cmps
mov
dec
loopne
pop
imul
or
inc
(bad)
fldenv
or
test
imul
in
pushf
cmps
cmp
mov
test
mov
pop
add
mov
pop
jno
test
pusha
cmp
push
xor
into
xchg
jns
in
mov
addr16
and
les
iret
lods
int
div
jne
mov
in
or
pop
adc
retf
in
mov
retf
xor
or
pop
into
xor
sbb
push
test
jg
add
add
cwde
int3
leave
ins
cdq
jl
sub
fistp
arpl
and
mov
inc
nop
dec
sahf
sub
push
cmp
daa
daa
jmp
xor
xchg
fwait
push
fwait
arpl
jmp
pop
clc
test
sti
daa
xor
mov
aaa
mov
pop
cwde
sub
jl
lds
hlt
jns
cmp
cmp
mov
sbb
fnstenv
(bad)
icebp
enter
repnz
mov
or
mov
jmp
and
push
push
pop
stc
xlat
in
mov
hlt
lods
nop
ins
jne
jo
pop
cdq
ins
sbb
or
sbb
lods
and
xor
repnz
adc
pop
or
sbb
and
in
sub
iret
jmp
xchg
dec
inc
push
sub
mov
jmp
cld
jmp
add
xor
xchg
sbb
lods
sbb
ret
movs
xor
clc
push
cmp
sbb
add
add
gs
inc
xchg
lods
inc
stos
cdq
and
arpl
stc
lds
imul
or
jno
adc
jle
les
rcl
dec
add
and
inc
and
icebp
inc
dec
neg
cmp
in
mov
(bad)
movs
jbe
pusha
gs
dec
test
inc
mov
sub
fcmovb
leave
stc
inc
or
sub
xchg
jne
and
retf
xor
fisubr
int3
sub
push
add
push
and
ss
sub
imul
retf
call
cmp
punpckhwd
fisttp
cmps
inc
scas
jbe
or
push
mov
ss
dec
pusha
imul
stos
add
sub
xchg
test
sub
xchg
cmp
sbb
dec
iret
leave
ror
ffree
ss
adc
and
jne
fst
sub
adc
and
pop
cmp
mov
shr
or
fwait
dec
(bad)
mov
pop
fs
movs
push
call
test
je
mov
retf
icebp
xor
push
mov
fldcw
push
push
fwait
sbb
cmp
push
movs
out
test
sub
inc
pop
mov
sub
gs
shl
and
pop
ret
push
jae
call
mov
jnp
imul
jecxz
sub
pop
aaa
and
inc
mov
fucomp
imul
ret
test
xchg
dec
into
dec
lods
in
mov
stc
(bad)
clc
and
cmp
inc
sub
aam
xchg
push
xor
mov
out
xor
add
test
movaps
jge
neg
call
out
test
imul
jmp
adc
push
(bad)
lahf
popf
or
add
jne
pop
pop
inc
and
jns
ins
adc
jns
mov
fadd
pop
sbb
(bad)
xor
add
retf
scas
adc
jb
jmp
das
(bad)
xchg
pop
fwait
mov
xchg
mov
ret
jbe
call
fstp
add
or
retf
pop
dec
dec
sub
jl
cmp
inc
jmp
idiv
xchg
daa
add
inc
add
pop
mov
or
fcmovb
mov
mov
test
jne
xor
xor
mov
xchg
xchg
lods
sar
hlt
xor
pop
or
push
mov
push
out
hlt
fidiv
ror
das
movs
xchg
xlat
jp
sbb
mov
pop
fstp
cmp
mov
mov
mov
in
sub
stc
mov
xor
sub
ss
icebp
movs
imul
hlt
mov
jns
xchg
daa
add
aas
mov
xor
mov
push
js
mov
mov
jns
and
and
sbb
cmovo
jns
inc
cmp
jbe
mov
xchg
push
clc
pop
mov
cmp
movs
movs
or
sbb
les
ret
iret
jmp
into
es
fwait
mov
cmp
sub
(bad)
push
int3
repnz
addr16
inc
inc
xchg
stc
mov
retf
jp
fnop
das
pop
jmp
out
mov
cs
mov
clc
xchg
jecxz
and
xchg
ficomp
ins
aam
scas
mov
icebp
stc
arpl
retf
mov
pop
js
les
cli
dec
mov
(bad)
shl
pusha
cmc
rdmsr
iret
dec
or
out
pop
dec
sub
test
sub
call
shr
out
loop
or
mov
jns
cld
pop
test
inc
xchg
jmp
dec
ret
call
mov
pop
idiv
mov
mov
imul
push
sbb
leave
mov
mov
sti
add
sbb
neg
daa
dec
push
dec
jl
mov
sub
mov
xchg
pop
and
es
sbb
std
adc
pop
dec
jbe
sub
mov
fldcw
inc
fwait
outs
shr
adc
xchg
aad
cmp
test
pop
adc
neg
cmp
ret
rcl
cmp
popa
mov
push
call
cmps
sub
mov
jb
ss
jecxz
outs
jl
jne
push
xor
xchg
fldcw
cli
push
movs
in
mov
loope
xor
cmps
int3
fcomp
(bad)
inc
jge
push
mov
mov
fidivr
mov
(bad)
retf
xabort
push
pop
lods
mov
push
and
mov
lds
cmp
dec
and
pop
adc
dec
cld
adc
fbstp
std
mov
add
or
mov
push
push
(bad)
cmc
add
ins
cmps
cmp
in
in
cmp
sbb
xchg
dec
cmc
mov
sar
mov
adc
mov
rcl
xchg
ja
ins
jp
ficomp
mov
lds
push
(bad)
mov
ds
cmp
adc
(bad)
cmc
xor
dec
and
jae
test
ss
and
xchg
cmp
sub
sbb
and
cdq
loope
jno
pop
fst
xchg
pop
ds
xchg
aad
iret
fnsave
mov
mov
mov
popf
cmc
jns
push
in
push
pop
test
pop
mov
mov
test
xor
imul
pop
adc
fadd
lods
xor
aad
mov
push
pop
mov
mov
inc
imul
sub
push
outs
cwde
icebp
aad
inc
add
in
mov
cwde
test
ret
in
in
add
in
rol
in
into
rcl
movs
xchg
add
dec
ins
das
ror
outs
sub
pop
nop
rol
lods
mov
ins
hlt
sbb
add
cld
mov
leave
(bad)
inc
hlt
in
sub
add
mov
pop
lea
test
sub
repz
jae
lods
repz
and
and
inc
in
mov
out
lods
test
in
test
mov
aas
in
push
pusha
and
or
mov
popa
adc
or
cmp
out
test
ins
addr16
jo
pop
and
fs
fsub
add
clc
leave
shr
dec
add
das
lea
jne
and
jge
in
enter
test
daa
lods
test
lds
rcl
inc
in
clc
or
adc
(bad)
loop
sbb
call
ror
mov
or
daa
test
push
pop
fs
leave
inc
mov
fsub
scas
pop
(bad)
jg
mov
aad
mov
repnz
inc
push
call
movs
test
addr16
xchg
shl
add
mov
popa
ins
dec
test
mov
mov
rol
aas
pop
outs
sbb
scas
xchg
jg
ja
sbb
xchg
rcr
dec
jnp
pcmpeqb
push
outs
push
and
cmp
mov
outs
xlat
das
xchg
jg
cmp
repz
jg
rol
repnz
imul
mov
repz
sbb
repnz
mov
sbb
arpl
jg
mov
mov
daa
xlat
out
pop
xor
sbb
ja
and
jecxz
xlat
sub
jg
inc
push
jmp
mov
aas
stos
jg
and
inc
sti
mov
xlat
scas
push
aas
xlat
sub
pop
push
fwait
ja
push
dec
xchg
jg
neg
(bad)
jle
pop
mul
xchg
hlt
pop
aas
mov
repnz
sti
ja
push
xor
rcl
repnz
fwait
and
dec
xlat
mov
cmp
xchg
xor
ret
aas
sub
xor
mov
call
out
xchg
(bad)
fdiv
ja
fcmovne
xor
scas
rdmsr
cmp
jns
adc
aaa
popa
ret
mov
mov
inc
scas
repz
xchg
dec
pop
mov
mov
ds
cmc
xchg
jg
xchg
mov
pop
aas
xor
push
jmp
jae
imul
mov
add
cmp
jno
sub
sar
mov
jp
pop
jae
and
mov
xor
cmp
mov
(bad)
or
ds
call
dec
in
dec
in
ins
mov
xlat
push
jmp
adc
push
call
push
test
in
add
mov
push
or
push
and
fist
movs
sbb
jmp
pop
fcomp
adc
in
loope
aam
in
aam
imul
cmp
call
xchg
test
test
add
jmp
frstor
(bad)
jmp
call
sub
cmp
hlt
pushf
mov
nop
xor
repnz
clc
push
(bad)
jmp
dec
and
adc
js
loopne
cmp
repz
xchg
sub
in
or
(bad)
div
jbe
and
sub
(bad)
push
mov
xchg
adc
out
push
scas
adc
(bad)
jle
jae
rsqrtps
test
(bad)
test
ficom
mov
js
and
test
lock
push
jb
adc
adc
inc
mov
lods
and
test
ins
int
frstor
jge
(bad)
test
test
shr
pop
int3
inc
imul
xchg
call
imul
xchg
out
fwait
in
fst
stc
sub
test
popf
xchg
mov
or
xor
mov
mov
jae
cdq
shl
mov
scas
inc
sbb
and
retf
mov
or
dec
aaa
cmp
movs
mov
push
jne
lea
mov
mov
adc
xor
mov
fdiv
xor
pop
sbb
movs
icebp
lds
mov
pop
and
cld
inc
or
fiadd
je
mov
or
add
sbb
cmp
or
jmp
int
adc
sbb
mov
xchg
mov
xchg
in
mov
cmp
add
mov
cdq
(bad)
cmps
adc
xor
add
inc
rol
lds
dec
push
sub
jno
sti
(bad)
mov
cmp
lock
push
pop
dec
stc
aam
cmp
imul
repnz
cmp
adc
and
movs
mov
popa
lea
in
jmp
mov
add
test
in
sar
lods
jmp
cdq
in
add
in
movs
mov
cmps
inc
jns
aad
std
in
xchg
fld
xchg
std
jns
jno
xchg
sub
cmp
cdq
in
sar
xchg
jno
repnz
cdq
cld
cmc
sub
lea
xor
imul
in
jmp
mov
and
inc
inc
sub
lea
rcl
pop
mov
sbb
mov
push
sub
call
sbb
xchg
lds
repz
add
and
mov
ret
mov
cli
mov
cmc
sbb
add
dec
es
aam
pop
call
fst
jnp
test
push
pop
fcmovb
inc
leave
sar
call
jno
les
mul
retf
arpl
or
ficom
xor
jmp
inc
sti
retf
jno
xchg
fidivr
icebp
xlat
cmc
and
jmp
push
fidivr
icebp
rol
jecxz
jmp
sti
fidivr
enter
sti
fidivr
js
outs
sub
int
fincstp
mov
and
call
movs
inc
jnp
xor
in
sub
in
jnp
xor
xor
mov
test
cmp
xor
and
lock
xor
and
in
mov
out
and
mov
add
cmp
retf
daa
std
cmp
daa
jne
call
jae
cmp
dec
shl
mov
cmp
loopne
(bad)
ins
jo
test
sbb
in
or
dec
stos
jge
shl
mov
add
mov
lahf
add
pop
mov
sbb
push
test
or
popa
pop
lods
and
stc
adc
and
stos
and
cmp
int
inc
push
out
inc
pop
les
fldenv
ss
xchg
jmp
xchg
(bad)
in
gs
fild
push
or
fst
aad
jno
add
in
std
cdq
push
dec
retf
xor
push
rol
xchg
push
hlt
sub
iret
mov
xchg
push
jbe
add
dec
popf
in
mov
cmps
adc
fabs
add
mov
add
mov
lods
call
stos
fst
lea
stc
dec
inc
mov
jne
mov
and
xchg
popf
fnsave
jo
fst
std
add
in
aad
gs
adc
stos
mov
cmc
std
add
sub
push
add
and
sar
inc
addr16
push
add
call
in
les
loope
fnstsw
mov
sbb
test
cmc
std
push
(bad)
std
test
push
dec
lods
lods
popf
xor
xchg
push
test
push
fstp
std
mov
xchg
add
popf
js
std
popf
xor
push
pusha
or
push
jmp
mov
jbe
cmp
lock
dec
or
jns
mov
in
jl
sbb
(bad)
jle
mov
fst
xor
je
movs
fnstenv
fnstenv
fnstenv
fnstenv
adc
push
(bad)
(bad)
cmp
dec
aas
jle
movq
sbb
push
in
push
pop
mov
ja
cmc
push
xchg
(bad)
addr16
xchg
and
push
jb
cmp
dec
pop
mov
pop
lea
in
mov
outs
addr16
addr16
ret
test
and
mov
out
inc
jecxz
inc
lea
scas
inc
retf
sub
test
or
test
and
cs
out
mov
jecxz
inc
test
jmp
pusha
aas
xor
pop
sub
inc
into
imul
out
cmps
jmp
mov
or
sub
in
jle
popf
mov
mov
push
clc
xor
inc
addr16
in
outs
cmps
dec
out
jmp
and
mov
cdq
stos
in
inc
jle
imul
scas
xchg
jl
mov
or
add
arpl
popa
movs
mov
xor
and
xor
push
pop
jae
imul
dec
addr16
adc
mov
cmc
ret
inc
scas
neg
mov
das
jmp
cmps
mov
cmp
adc
mov
pop
je
xor
(bad)
ud2
loop
sub
push
mov
jmp
fbld
push
fcomip
aas
pop
lods
cmps
(bad)
mov
out
addr16
daa
das
cmps
js
bndstx
lock
lods
out
addr16
mov
out
cmps
arpl
aas
daa
mov
aaa
cmps
pop
movq
cmps
jmp
fbld
ins
daa
fbld
in
cmps
fbld
outs
cmps
dec
inc
scas
inc
mov
das
icebp
add
outs
xor
outs
cmps
sbb
or
imul
addr16
pop
pop
inc
outs
out
sub
inc
addr16
loop
cmps
and
sbb
jb
or
dec
test
je
jmp
enter
rol
pusha
mov
xchg
xor
imul
sub
xor
neg
jbe
scas
and
in
in
dec
or
cs
bound
pop
test
test
hlt
dec
call
loop
data16
bound
and
out
test
lock
movs
jp
call
into
dec
int3
jle
mov
add
int3
out
or
jb
or
scas
mov
movs
outs
lock
and
sub
in
fild
lds
out
sbb
push
push
loope
or
es
mov
in
and
test
dec
pop
dec
sub
or
test
mov
xor
or
add
int3
clc
push
or
jg
mov
in
call
inc
rcr
dec
sub
movs
iret
imul
test
les
lods
or
movs
cli
xchg
xchg
icebp
iret
push
sub
stos
jb
imul
push
dec
movs
jg
jns
cmp
mov
push
and
dec
movs
dec
das
rcr
retf
fs
jecxz
mov
push
movs
cs
xchg
lods
retf
cmp
outs
mov
cmc
daa
push
sbb
add
imul
sbb
dec
aam
mov
inc
cmps
movs
es
in
and
dec
in
movs
idiv
out
or
(bad)
sbb
in
shr
push
loope
pop
das
and
and
in
sub
movnti
test
cmp
outs
push
mov
push
dec
movs
cmp
mov
aam
sbb
mov
hlt
mov
cmp
outs
add
pop
mov
push
cmc
adc
fnsave
sbb
ds
push
scas
(bad)
mov
jge
add
mov
and
repnz
sahf
adc
popf
addr16
mov
popf
pop
js
dec
xchg
mov
lock
popf
std
scas
or
xchg
adc
mov
push
bound
add
jne
std
loop
mov
jge
sbb
adc
loopne
ss
jge
mov
push
sub
enter
add
fsub
std
mov
mov
xor
rcr
adc
mov
jne
xor
nop
pop
xchg
mov
mov
xor
push
pop
xchg
clc
adc
mov
cmc
fdiv
inc
adc
jno
mov
cmps
xchg
cmp
jno
cmc
jle
pop
mov
cmps
xchg
int
xchg
jno
cmc
cwde
test
pop
std
imul
cmp
rcr
(bad)
push
adc
xchg
push
or
aad
xor
pop
std
popf
mov
pop
test
stc
sbb
frstor
enter
lods
add
sbb
in
test
mov
xor
mov
xchg
shl
add
sbb
cmp
mov
push
mov
inc
cs
cmc
shl
lds
jbe
push
mov
pop
pop
cmc
je
push
movs
pushf
(bad)
int3
lds
in
movs
mov
inc
(bad)
int3
out
xor
or
mov
or
mov
fiadd
add
xor
and
pop
adc
mov
call
or
xchg
adc
dec
xor
lods
sub
rol
mov
sbb
out
inc
xchg
xchg
push
scas
or
pop
hlt
jp
inc
jmp
inc
jmp
gs
jmp
hlt
jmp
pop
sti
inc
rcl
sahf
dec
out
push
ret
pop
clc
inc
sbb
repnz
rol
mov
inc
addr16
inc
call
es
inc
cmc
popa
inc
adc
daa
and
adc
and
int
rcr
jecxz
dec
pop
mov
pop
dec
fist
scas
pushf
int
leave
adc
test
icebp
cmp
sbb
and
pop
and
ss
add
mul
or
cmp
mov
retf
test
pop
mov
in
sar
pop
push
add
or
sbb
jns
push
pop
mov
stos
(bad)
jmp
dec
and
jmp
xchg
lea
mul
mov
mov
cmps
dec
xchg
pop
loop
sbb
addr16
mov
rcr
sar
popf
sar
rcr
sar
popf
sar
rcr
sar
popf
sar
rcr
sar
popf
sar
rcr
cmp
stc
jecxz
pushf
repnz
mov
in
rcl
mov
sti
mov
mov
xchg
mov
(bad)
shr
shl
rol
push
sbb
jmp
movs
mov
xchg
sbb
call
mov
sar
ror
mov
fidivr
lods
stc
mov
mov
popf
cmp
int
sub
mov
icebp
sar
xchg
cld
movs
adc
repnz
scas
mov
int3
mov
enter
scas
xchg
xchg
sbb
into
mov
pop
in
push
add
adc
mov
sub
sbb
sti
cmp
push
jmp
into
mov
popf
ret
dec
sub
js
enter
outs
aas
aas
outs
(bad)
fistp
dec
mov
adc
out
mov
push
push
xchg
(bad)
cmp
cmp
inc
mov
cmps
cmp
or
sbb
aad
xchg
aad
pop
cmp
push
sub
mov
imul
iret
aad
xchg
mov
dec
ss
sub
popf
cmc
mov
push
sbb
inc
(bad)
lods
mov
repz
pop
dec
jnp
adc
cmp
mov
cmc
aam
add
xor
dec
sub
icebp
test
push
push
push
sbb
mov
test
pop
cmp
xor
mov
push
push
jne
or
lds
jg
and
in
das
scas
pop
fidiv
xor
sbb
lahf
xchg
mov
movs
repnz
scas
leave
push
int
cmp
push
pop
xor
enter
cmp
push
pop
xor
xchg
js
pop
mov
imul
xor
lock
gs
xchg
(bad)
sub
sahf
or
dec
mov
sub
dec
xor
or
dec
dec
xor
sar
mov
dec
add
dec
pop
aad
lea
and
dec
pusha
sbb
stos
lock
mov
outs
push
inc
xor
pop
or
not
enter
pop
inc
pop
adc
aaa
and
rcr
pop
sbb
cs
pop
(bad)
fptan
movs
aad
mov
sbb
pop
jb
in
clc
stc
jmp
and
push
cmp
cmp
mov
jne
jne
out
int
rcr
jecxz
test
sti
mov
daa
sub
dec
inc
dec
xor
pop
push
(bad)
jne
sbb
cmps
sub
(bad)
sbb
xchg
push
xchg
mov
sahf
mov
(bad)
std
xchg
stos
es
mov
inc
bound
scas
mov
dec
(bad)
stos
ds
inc
ins
call
repz
mov
sbb
xlat
sub
repz
push
jmp
popf
xor
and
and
mov
in
adc
nop
nop
push
mov
mov
fbld
jae
cmp
call
repnz
jecxz
stos
imul
in
mov
bound
xchg
cmp
jle
add
sub
mov
adc
mov
jecxz
test
bound
les
jle
xor
adc
imul
repnz
idiv
dec
mov
xchg
inc
repz
jmp
adc
mov
out
call
rcr
mov
nop
dec
mov
in
pop
loopne
jmp
inc
mov
add
aam
loopne
in
xchg
jle
push
mov
cmp
or
test
lods
jae
jle
sbb
jge
call
xchg
cmp
(bad)
push
mov
adc
xor
push
in
xchg
xor
loope
movs
in
retf
cmp
mov
lods
push
xchg
sub
or
push
scas
mov
jg
icebp
adc
sbb
add
fidiv
and
cmp
call
leave
inc
cmp
js
imul
mov
xchg
sti
std
stc
jne
pop
pop
push
push
adc
fidiv
sub
push
cli
fld
aas
js
push
es
push
nop
fisub
gs
jge
popa
push
sbb
mov
es
or
or
or
xor
xor
fucomp
cmps
mov
adc
add
mov
cmp
xor
pop
mov
mov
sub
jp
es
mov
bound
inc
inc
sbb
fcom
push
jne
popa
js
test
call
push
pop
adc
retf
jmp
inc
or
cmp
mov
mov
pop
or
push
dec
jne
inc
inc
and
cli
imul
sbb
pop
inc
sbb
jmp
cmp
adc
jmp
pop
adc
popa
add
xchg
mov
inc
sbb
jns
inc
add
adc
repz
pop
sbb
sbb
xor
xchg
fld
cmp
ins
jp
pop
sbb
imul
dec
jle
and
cmps
jmp
mov
cmp
outs
push
sub
cli
pop
jecxz
mov
pop
hlt
ret
outs
fyl2x
sub
sbb
sbb
push
jmp
(bad)
mov
retf
aas
xchg
and
ins
div
mov
fbstp
lods
ins
scas
pop
neg
test
out
dec
ret
jle
ss
mov
cwde
jp
cmp
mov
cmp
jmp
add
add
rcr
sbb
call
mov
add
mov
loop
fmul
gs
dec
(bad)
mov
mov
jmp
dec
pop
push
jmp
(bad)
push
cdq
fisubr
push
sub
sbb
ins
in
sub
cs
jns
pop
lock
mov
mov
test
int
xchg
jle
pop
out
inc
(bad)
fcomp
imul
in
outs
cmps
sub
push
xchg
pop
mov
mov
jmp
fmul
stc
and
and
dec
xlat
mov
stos
push
or
pop
cld
cdq
arpl
cmp
mov
jp
mov
jecxz
fisttp
xor
mov
mov
lahf
cmp
pop
(bad)
jbe
addr16
imul
daa
cmc
jne
sbb
xlat
gs
xor
jb
jno
add
mov
shl
xor
xor
add
aam
add
xor
jge
sub
scas
push
add
addr16
jb
out
rcl
or
cmp
mov
test
loope
nop
arpl
aas
loope
add
call
mov
jmp
mov
jb
push
daa
shl
jl
or
(bad)
add
sub
pop
fucomp
ja
cmp
xor
pop
mov
enter
or
hlt
cs
cdq
pusha
cwde
fadd
fisub
add
sub
cs
cs
and
std
imul
daa
les
test
rcl
std
sub
shl
jo
jp
cmps
cli
jno
xor
add
cmp
cmps
cs
sub
xor
jge
jecxz
int3
mov
fst
or
test
loop
sbb
sub
mov
stos
push
mov
out
dec
fimul
jmp
call
sub
pop
stc
mov
test
or
pop
stos
cmp
sub
test
movs
jb
mov
adc
add
fist
mov
xor
jg
pop
in
mov
dec
dec
xchg
dec
mov
js
or
jl
pop
xchg
push
ret
add
ins
mov
je
(bad)
sbb
addr16
psubsw
mov
ss
or
or
pop
lea
das
fadd
add
sub
mov
pop
mov
mov
mov
js
jae
test
inc
jnp
inc
cdq
sbb
add
mov
bound
outs
mov
pop
cdq
je
int
xchg
dec
or
xlat
jbe
jno
pushf
inc
xchg
pop
pop
mov
dec
shr
pop
pushf
mov
lock
mov
pop
(bad)
pop
mov
jg
xor
test
xor
aas
jge
cmp
cs
cmp
adc
and
dec
sub
jne
jge
add
mov
ins
aas
inc
and
inc
inc
bound
push
and
xor
inc
pop
add
dec
jno
icebp
mov
or
push
adc
dec
outs
iret
xchg
xor
add
sub
mov
iret
into
nop
sub
cmp
and
adc
pop
sub
pusha
dec
(bad)
push
sbb
inc
daa
pop
xor
das
jp
add
aaa
inc
sub
(bad)
out
sahf
jge
xor
cmp
pop
xor
stos
(bad)
mov
inc
pop
sbb
inc
pop
xor
adc
sbb
cmp
pop
and
sbb
sub
dec
push
sub
add
sahf
ret
comiss
sub
push
pusha
add
(bad)
test
pusha
cmp
add
or
scas
popf
movs
or
arpl
push
aaa
sub
and
call
push
or
inc
adc
mov
push
js
adc
push
pop
xor
iret
cmps
add
adc
sbb
aaa
push
ss
in
sbb
mov
fst
out
or
inc
ret
into
(bad)
adc
popa
imul
adc
out
in
xchg
xchg
xchg
mov
sub
mov
dec
adc
inc
push
inc
mov
rol
xor
call
push
xchg
push
iret
sub
in
jl
and
imul
xchg
repz
add
test
push
cmps
(bad)
push
test
imul
add
call
shl
xor
mov
pop
add
js
inc
inc
mov
push
mov
hlt
xor
mov
sbb
lds
inc
repz
rcl
lock
in
jne
jb
push
fisub
call
aad
mov
inc
div
into
popa
ret
fs
rcr
movs
xor
and
push
ret
or
loopne
push
dec
ja
sbb
jno
stos
and
arpl
(bad)
sub
xor
dec
int3
add
push
scas
and
cmp
add
ficomp
int3
sub
in
sbb
pop
stc
push
jo
(bad)
xor
or
popf
add
xor
(bad)
xor
inc
cmc
or
sbb
push
jle
cdq
adc
sub
push
cli
sbb
push
sub
jmp
pop
loop
loop
call
xor
sbb
sub
ficomp
loop
sti
pop
pushf
add
nop
sub
fisub
xchg
add
sbb
fmul
idiv
popf
and
push
lds
adc
add
daa
ret
cmp
push
lds
jp
in
iret
add
push
mov
sbb
xor
dec
and
or
push
movs
jb
movhps
shr
push
retf
sbb
sbb
sub
or
add
pop
loope
cld
push
into
and
loope
aam
les
(bad)
and
or
cmp
retf
sub
or
(bad)
das
dec
fist
pop
into
inc
fwait
pop
in
dec
inc
ds
pop
in
cld
sbb
cmc
sbb
cli
push
retf
inc
nop
pop
jecxz
pushf
push
outs
add
or
cmps
add
adc
or
pusha
lods
adc
cmp
cwde
fwait
jns
add
jno
aaa
sub
ret
mov
test
ss
mov
movs
adc
inc
adc
fs
lods
(bad)
dec
aad
les
fld
dec
mov
xor
das
scas
xor
mov
ret
push
ret
jb
inc
xchg
inc
xchg
jb
shl
jbe
sub
cmp
mov
cmp
shl
mov
sub
xchg
inc
iret
jnp
inc
and
ret
aad
sahf
jbe
(bad)
cdq
xor
push
scas
push
or
outs
mov
lods
ja
dec
mov
test
inc
mov
mov
aad
ret
(bad)
mov
push
xchg
adc
dec
mov
push
(bad)
jae
lea
test
xor
sbb
ja
xchg
jns
dec
add
mov
mov
jne
outs
mov
jbe
dec
into
aam
push
lea
outs
lea
inc
retf
dec
fwait
nop
aad
mov
setbe
dec
aad
pushf
(bad)
(bad)
push
xchg
movs
pop
xchg
inc
mov
mov
fsub
xchg
pop
xchg
cs
and
pushw
pop
push
arpl
push
sbb
es
push
outs
and
push
ins
ins
dec
imul
cmp
dec
popa
imul
jno
push
pop
dec
adc
dec
and
or
xor
pop
sub
adc
jb
imul
pop
xor
push
and
ds
ins
sub
cmp
or
dec
ins
push
push
je
pop
cmp
outs
cmp
jb
sbb
inc
aaa
jbe
ja
push
inc
sbb
dec
cmp
inc
jo
es
adc
inc
pop
xor
cs
xor
outs
ins
push
imul
push
jb
cmp
dec
push
xor
and
jae
aaa
sub
outs
and
ins
ins
dec
xor
sbb
jae
sbb
ins
sub
push
inc
aaa
xor
dec
sbb
dec
aas
inc
sbb
jle
sub
ds
outs
ins
outs
ins
jle
xor
cmp
adc
outs
jle
xor
bound
jne
dec
ss
imul
push
jle
adc
ins
dec
jo
aaa
xor
pop
jle
xor
push
ins
ins
or
cmp
xor
jae
imul
inc
sbb
imul
pop
and
inc
adc
sbb
jae
and
sub
adc
inc
add
sbb
aaa
arpl
mov
jecxz
addr16
in
or
pop
pushf
adc
ja
jb
outs
fnsave
pop
out
dec
mov
fnstenv
outs
retf
pop
sar
dec
pop
rcl
and
jns
sbb
jo
push
(bad)
dec
mov
dec
cld
push
out
outs
pushf
jno
or
or
dec
cld
pop
jb
xchg
outs
fisttp
or
mov
addr16
jb
dec
fld
and
push
es
pop
out
ins
loop
cmps
inc
iret
pop
ret
outs
lahf
jl
add
jbe
jns
sbb
dec
int3
pop
jecxz
lahf
ins
cmp
jg
or
loopne
call
or
jne
inc
mov
inc
push
pop
fwait
ins
iret
push
mov
cmps
jno
jno
dec
mov
clc
or
push
jecxz
xchg
push
sub
js
jl
dec
lahf
push
loop
stc
shufps
jo
js
sbb
jno
or
fist
sub
ja
jno
jnp
or
addr16
push
popf
ds
sbb
mov
mov
add
adc
ret
xor
bound
adc
jae
add
(bad)
mov
adc
xor
inc
movs
retf
adc
xor
and
xor
and
gs
push
sbb
push
cmp
add
add
sti
test
shl
jne
stc
imul
in
mov
rcr
add
adc
adc
add
xchg
daa
loope
add
rol
aam
xchg
and
movs
mov
lods
pop
mov
inc
pop
cmps
int
fld
nop
je
in
daa
cmp
div
add
sbb
shr
rcl
jbe
jno
mov
nop
xchg
loop
in
jecxz
adc
lds
test
xor
(bad)
popa
leave
sbb
bound
adc
xchg
cld
retw
es
adc
xchg
cmp
(bad)
ss
xchg
loope
sti
test
data16
xor
ja
push
test
sti
icebp
add
movs
adc
dec
mov
int
mov
mov
test
push
push
ins
xchg
imul
jns
fstp
cmp
in
out
mov
pop
out
pop
outs
inc
xchg
into
dec
in
test
out
(bad)
mov
lds
lea
fimul
out
int
jmp
cmp
stos
or
dec
sbb
mov
mov
or
jmp
jge
mov
jo
mov
mov
cdq
int3
clc
fisubr
stos
pop
dec
mov
jmp
cmp
mov
lods
jmp
scas
xchg
xchg
cmp
retf
sub
lods
out
pop
popf
jmp
fimul
sbb
mov
push
or
cmp
or
mov
pop
fnstcw
(bad)
cmc
pop
pushf
movs
jbe
mov
ficom
add
pop
lods
sub
mov
jge
cmp
pop
jg
xchg
aaa
jmp
inc
inc
adc
mov
outs
loopne
(bad)
popf
mov
mov
sub
call
shl
push
stos
ins
sar
jge
push
fdiv
(bad)
repz
js
stc
mov
stos
loop
es
adc
dec
xor
clc
stc
push
jge
push
or
sbb
or
movups
outs
mov
ins
repz
ds
mov
or
jo
dec
out
and
xchg
or
dec
and
mov
dec
test
jno
inc
pusha
(bad)
jns
loopne
mov
jp
push
cmp
ss
jge
push
xor
inc
cmp
repz
inc
mov
push
into
jo
sbb
inc
dec
jg
cs
ja
mov
nop
dec
mov
fcom
push
push
adc
outs
sti
test
push
sub
sahf
test
sub
inc
sub
adc
loopne
aad
jg
js
inc
ja
leave
aam
adc
dec
push
inc
and
mov
cs
push
(bad)
sbb
xor
ins
xchg
call
xor
push
mov
sub
aaa
pop
(bad)
push
pop
push
ss
aad
xchg
push
call
push
cwde
gs
cmp
jo
jl
mov
jecxz
sbb
adc
inc
xchg
adc
mov
outs
add
movs
push
jo
sti
test
xor
push
pop
jmp
jle
sub
addr16
cmp
iret
into
and
and
int3
add
pop
dec
loope
clc
(bad)
inc
and
sub
pushf
adc
in
cmp
xchg
fnsave
pop
cs
xor
sub
sbb
jp
push
add
in
sub
add
xchg
ins
and
aaa
popa
pop
pop
dec
xor
jae
sbb
call
cs
aam
sub
xchg
push
jg
test
push
push
or
sbb
push
(bad)
(bad)
xchg
jae
je
aam
xor
daa
loop
fcomp
add
shl
std
push
mov
mov
cmps
push
adc
push
in
shl
add
xor
push
std
(bad)
frstor
xchg
in
std
mov
jb
mov
adc
adc
jbe
out
push
inc
ja
sbb
pusha
and
add
mov
icebp
jnp
je
mov
out
ret
xor
out
movs
std
add
repz
push
xchg
pop
nop
add
mov
adc
adc
popa
fnstcw
test
xchg
add
rcl
xchg
rcl
xchg
jl
push
test
fbld
push
push
(bad)
test
push
ja
and
push
rol
aad
in
ja
ja
xchg
push
push
push
and
sbb
pop
cli
push
jb
ja
and
xor
xor
and
test
clc
jle
mov
mov
push
add
ror
popf
jnp
push
fisttp
(bad)
jg
jbe
mov
mov
retf
scas
push
fdivr
out
mov
dec
sub
retf
das
cmp
scas
ds
push
js
aaa
fmulp
retf
sbb
inc
fisubr
xchg
(bad)
pop
pop
xchg
mov
pop
sub
dec
fstp
popf
xor
xchg
mov
jg
pop
retf
(bad)
jmp
mov
fcomp
push
(bad)
aaa
mov
mov
stos
dec
or
iret
stc
sub
pop
mov
xlat
fisubr
mov
mov
mov
out
sbb
or
pop
mov
iret
jg
ss
pop
cli
mov
mov
scas
sub
cwde
cmp
xchg
dec
fisttp
mov
into
gs
outs
mov
std
ja
dec
or
mov
fwait
rcr
sbb
jg
scas
mov
mov
adc
dec
mov
(bad)
cmp
pop
popf
aaa
cmc
xchg
pop
cli
jge
out
data16
or
out
out
je
(bad)
push
sub
sahf
fld
dec
idiv
pushf
jns
mov
fld
add
pop
mov
imul
xchg
xor
iret
or
sub
imul
pop
daa
push
jmp
dec
push
pop
frstor
and
mov
dec
inc
cmps
xor
sbb
in
inc
pop
inc
scas
jae
dec
pop
mov
xlat
dec
ret
push
xchg
push
inc
fbld
pop
add
jne
pop
inc
xchg
bound
mov
outs
hlt
inc
sub
jecxz
sub
pusha
jmp
add
add
dec
inc
icebp
bound
dec
mov
ror
mov
xor
imul
out
sbb
popa
xor
shl
std
test
(bad)
jno
sbb
test
movs
xlat
arpl
rcl
dec
loop
not
xchg
jne
mov
(bad)
mov
inc
loop
pop
and
push
xor
pop
stos
not
sahf
and
popa
pop
shl
push
shl
mov
icebp
add
adc
test
data16
xchg
test
sbb
xchg
xor
push
ret
div
movs
cmps
out
jbe
xlat
dec
loopne
mov
and
lock
fnstcw
retf
fidiv
daa
sbb
xor
cmps
jno
fwait
mov
mov
sbb
and
or
fisttp
dec
jae
shr
inc
xor
(bad)
icebp
lods
fldenv
jmp
xor
mov
add
stos
sub
mov
mov
or
inc
(bad)
leave
in
inc
lods
xor
xchg
jne
test
ins
shr
aad
push
adc
pushf
test
or
sub
nop
cld
mov
pop
ds
punpcklwd
xor
sbb
jno
push
pushf
mov
stos
jge
stos
in
adc
repnz
dec
call
lods
scas
pushf
in
push
out
(bad)
xlat
mov
leavew
jp
stos
xor
adc
das
pop
and
ins
out
(bad)
and
repnz
shl
cld
out
mov
jl
jle
sbb
xchg
lods
leave
mov
push
hlt
push
pop
lahf
mov
mov
je
sahf
je
sub
mov
loope
cli
bound
sub
push
cmp
popf
enter
pop
test
mov
xchg
or
mov
ss
outs
cli
and
jnp
jne
jg
scas
std
test
(bad)
cmp
js
jge
and
mov
sets
das
jg
jp
jle
push
dec
fisub
jmp
je
outs
xor
dec
loope
and
repnz
pop
int
into
dec
call
fld
js
jmp
pop
mov
jle
fisub
push
fwait
push
leave
xchg
sti
push
fisubr
outs
nop
addr16
(bad)
not
mov
or
mov
or
add
or
cli
mov
jle
mov
cs
shl
cli
adc
jne
stos
out
or
sbb
(bad)
jmp
cli
lock
bnd
jns
popf
and
mov
adc
jne
imul
clc
push
xchg
lahf
fisttp
push
jnp
sub
pop
inc
out
rdmsr
sbb
pop
and
cmp
mov
xor
outs
sbb
mov
scas
enter
push
xor
cs
adc
out
into
xchg
loope
cmp
jno
jle
or
fs
jnp
and
sub
and
jae
jle
enter
xor
ss
push
sbb
stos
jno
add
pusha
mov
jmp
lods
jno
mov
push
icebp
cmp
xor
xchg
and
les
and
push
cmps
adc
jnp
shl
add
sar
push
and
jmp
icebp
and
cmp
sbb
ret
mov
jae
adc
xchg
les
mov
and
fs
mov
mov
leave
mov
mov
popa
jo
mov
rol
adc
sar
movs
dec
mov
and
dec
sub
jo
test
not
add
add
movs
movs
xchg
inc
push
and
(bad)
movs
mov
aam
or
and
jo
popa
test
and
mov
sti
and
jo
jle
jne
arpl
loop
iret
movs
jo
add
movs
xor
jno
or
add
xlat
cli
push
mov
sti
and
movs
dec
push
mov
aam
fidivr
dec
aam
mov
int
or
mov
jp
in
push
stos
mov
cmp
or
inc
xor
pop
mov
cmp
aam
fcmove
cmp
mov
mov
push
cmp
retf
aam
cdq
or
pop
inc
pop
or
push
loope
repz
and
dec
mov
jnp
fistp
rol
sub
dec
es
mov
mov
imul
in
(bad)
cmp
es
adc
inc
int
pop
dec
lods
jne
sub
jnp
call
popf
jnp
xchg
add
pop
push
add
sub
and
mov
jnp
mov
cmp
repnz
mov
mov
sub
dec
popf
mov
pop
mov
dec
bound
cld
mov
jb
ret
add
retf
jl
into
inc
pusha
push
lods
cmp
repnz
cmp
or
std
retf
js
sbb
push
xchg
jns
inc
sub
lds
pop
mov
cmps
sbb
xchg
pop
loope
cmp
dec
inc
inc
push
lods
jo
setae
jns
int
xor
and
out
dec
or
cmp
lea
hlt
pop
dec
jno
add
ret
add
pusha
mov
movs
(bad)
mov
loope
push
mov
jecxz
jecxz
mov
mov
push
mov
pop
fs
ja
mov
movhps
dec
mov
loope
and
cmp
adc
popf
dec
vcvttpd2dq
sub
inc
add
adc
int
ret
jp
outs
push
out
dec
enter
xor
xchg
in
push
cs
loopne
adc
add
lahf
dec
popf
fnsave
retf
cwde
retf
or
fwait
test
out
push
adc
loopne
sub
hlt
int
fld
dec
adc
call
mov
mov
push
adc
ret
mov
push
jl
lea
pop
shr
int3
mov
push
mov
or
lea
loope
mov
inc
push
pusha
add
cmp
das
jl
xor
cmp
push
add
inc
dec
out
fcom
gs
scas
mov
jbe
mov
pop
mov
vmovups
xchg
shr
push
(bad)
pop
and
jge
out
cld
jb
add
js
or
and
imul
xchg
add
push
addr16
call
es
jp
or
in
push
shl
adc
arpl
repz
mov
xlat
repnz
pop
push
loop
cmp
repnz
inc
ja
mov
bound
and
dec
scas
mov
push
sti
aaa
cmp
inc
sub
mov
jmp
in
sbb
rcr
mov
ret
xor
popf
dec
cld
pushf
cwde
call
jmp
add
(bad)
packuswb
pop
xor
mov
or
xor
push
(bad)
retf
fs
cmp
(bad)
or
imul
pop
mov
add
ret
enter
ja
lock
mov
pop
xchg
cmp
(bad)
daa
adc
fcom
sar
ficomp
je
xchg
enter
out
repz
sahf
adc
les
sbb
sbb
test
dec
add
jo
dec
int3
(bad)
inc
push
adc
fild
dec
stos
fadd
push
xchg
mov
inc
lahf
xchg
in
pop
js
cmps
popa
jo
push
xchg
adc
mul
fs
outs
ficom
leave
test
mov
out
cmp
add
jmp
add
cmp
outs
(bad)
push
les
mov
xor
xor
sbb
inc
rcl
mov
adc
data16
bound
pushf
mov
or
xor
ret
movs
jne
aam
bound
arpl
mov
icebp
adc
out
pop
xchg
imul
fxch
jne
sbb
cmp
jg
inc
add
in
jae
aad
enter
fmul
ins
les
jmp
out
mov
outs
cmp
sub
cmc
sub
pop
je
js
stc
bound
ja
or
lods
or
addr16
int
in
jecxz
add
out
aad
(bad)
ins
sbb
cmp
(bad)
(bad)
dec
test
int
loop
fnsave
mov
push
dec
inc
leave
int
mov
enter
stc
push
fcomp
lods
sbb
or
icebp
les
jmp
xchg
mov
adc
shl
ins
mov
xor
(bad)
pop
mov
pop
int3
fcomp
adc
imul
cmp
retf
test
sub
push
lods
repnz
dec
mov
xchg
in
das
daa
jmp
popf
movs
mov
xlat
add
hlt
inc
ds
mov
pop
loop
aas
dec
into
div
and
clc
lods
data16
add
or
xor
cwde
loop
push
or
xchg
addr16
mov
mov
mov
push
pop
inc
movs
mov
leave
int
dec
inc
and
pop
sbb
push
pop
das
jnp
out
xlat
rcr
push
xchg
loope
rcl
aaa
pop
mov
ins
xchg
sub
loopne
iret
xlat
adc
test
inc
push
push
push
sbb
les
out
and
inc
mov
cmps
dec
push
mov
cmp
and
inc
mov
shl
jns
mov
loope
xor
ss
and
and
sbb
fisubr
lods
push
mov
jge
and
mov
dec
mov
jb
mov
cmp
mov
fstp
jg
jnp
inc
sub
add
add
xchg
scas
push
pop
ja
shl
inc
push
rcr
mov
call
in
out
xor
push
ja
and
addr16
push
icebp
adc
pop
add
xchg
cmp
test
faddp
int
add
ret
push
cmps
push
and
add
xor
sahf
push
cmps
mov
or
(bad)
pop
divps
xchg
sbb
jmp
fnsave
rcr
jl
and
mov
and
fwait
nop
or
ret
outs
adc
jae
dec
popf
sbb
sbb
lds
mov
mov
and
mov
cmps
mov
xchg
xchg
mov
jmp
cdq
xlat
popa
mov
out
lods
loope
mov
scas
or
mov
mov
and
ds
sahf
push
pop
xor
movs
jle
xlat
psrlq
int3
shr
push
(bad)
jmp
push
sbb
push
and
mov
jne
lods
rol
(bad)
sub
pusha
mov
pop
popa
xor
mov
mov
mov
xchg
mov
into
sbb
jge
shr
outs
ret
cld
ret
dec
rol
test
ret
rcl
xchg
mov
ret
mov
popf
fwait
sub
ficomp
cmps
push
mov
pop
test
loope
inc
mov
icebp
rcr
xchg
cld
repz
adc
scas
jb
pushf
add
add
adc
popa
mov
fisubr
test
dec
push
fnstsw
cld
scas
inc
sar
mov
pushf
push
adc
jmp
mov
push
fcmovnbe
mov
fwait
cli
inc
push
and
pop
popf
stos
(bad)
ficom
shl
pop
jle
add
sbb
add
sub
into
ins
sahf
adc
jle
mov
pop
cs
mov
xchg
sub
test
loope
js
fsubr
sahf
and
mov
xor
fldcw
pop
cdq
popf
push
pop
fld
add
sub
pushf
mov
mov
xor
outs
cwde
push
or
mov
fbstp
fisub
xor
shr
sbb
mov
inc
xor
movs
mov
sbb
or
push
cwde
fisub
stc
dec
push
mov
mov
push
das
cmp
or
sti
mov
sbb
or
jbe
pop
retf
sahf
popa
pop
pop
hlt
pop
iret
cdq
xchg
or
sub
sahf
xor
pop
fdivp
call
enter
sbb
mov
call
inc
pop
jne
(bad)
sahf
push
mov
sbb
ret
cmp
jne
stos
shl
jmp
or
test
cmp
out
pop
lea
or
cld
ds
dec
imul
xchg
and
je
xlat
out
stos
repz
push
cmc
loop
jp
jmp
fsub
push
repz
cmp
push
cs
into
push
out
rcr
sbb
xor
push
div
pop
fistp
push
add
push
jne
xchg
sub
or
cmp
int
xor
aad
jne
in
dec
pop
ror
pop
(bad)
shl
dec
jmp
ret
xchg
add
test
sbb
pop
sub
rcr
mov
and
mov
je
cs
jbe
sahf
jmp
xchg
cld
(bad)
loope
cmc
(bad)
jbe
xchg
outs
in
(bad)
jecxz
rol
mov
iret
mov
push
les
loop
push
jle
add
enter
lahf
pop
and
xor
daa
cmc
pop
int3
std
aad
add
xor
sbb
fdiv
push
add
sub
xor
adc
adc
xor
cdq
jp
sub
sbb
sar
push
loop
lock
inc
lock
cmp
aam
adc
scas
xor
lock
sbb
outs
call
cli
and
int
std
mov
into
jge
inc
lea
std
scas
inc
lods
imul
in
sbb
push
dec
dec
dec
in
or
pop
dec
cmp
jmp
pop
dec
outs
dec
sub
dec
mov
or
jnp
(bad)
std
mov
std
mov
int
cwde
pop
push
sbb
cdq
test
push
iret
call
mov
dec
retf
mov
lods
es
mov
dec
in
scas
add
sahf
add
lods
call
inc
iret
dec
mov
pop
sti
pop
popf
dec
loope
lods
imul
in
mov
cmp
cmp
cmp
jmp
or
mov
out
mov
jl
jl
add
and
or
in
(bad)
jge
dec
retf
cmp
sbb
outs
(bad)
stc
ins
pop
mov
imul
jge
arpl
mov
lahf
or
mov
lahf
aad
stos
cmp
outs
adc
pop
or
mov
retf
sub
clc
jno
jge
dec
pop
cs
retf
or
popf
lods
sub
cmp
popf
rcr
mov
cli
inc
outs
les
lods
adc
cld
lock
into
mov
clc
jmp
mov
call
lds
mov
mov
mov
mov
shr
mov
fst
mov
scas
mov
xchg
int3
mov
jns
neg
mov
shr
in
nop
pop
fistp
fs
loope
xchg
test
jmp
ds
xchg
clc
mov
cmp
test
lds
xchg
and
jbe
dec
int3
sbb
lea
dec
xchg
movs
gs
out
fsub
loopne
push
inc
push
fimul
retf
and
and
fs
shl
jo
imul
shl
jmp
jl
lahf
xor
push
les
push
imul
jmp
pop
xor
mov
xlat
mov
mov
repz
in
imul
stc
stc
and
push
add
aad
push
daa
(bad)
lds
sub
or
mov
int
inc
push
fwait
cwde
stos
retf
add
icebp
movs
push
push
mov
in
fiadd
aam
int
jo
bound
push
push
ffree
adc
jg
pop
popf
(bad)
lods
push
cmp
mov
outs
int
sahf
shl
xchg
shr
xor
(bad)
popf
(bad)
dec
xchg
and
rcl
pop
aam
dec
xchg
cmp
mov
xor
sub
push
jmp
add
cmp
enter
xchg
call
leave
mov
movs
cmp
aaa
pop
out
and
jns
mov
in
pushf
lea
sub
sbb
xor
mov
mov
aaa
std
inc
loope
xor
pop
sbb
adc
data16
mov
popa
cdq
inc
aad
out
lea
popf
adc
xchg
inc
in
adc
popf
mov
test
sti
and
and
and
jns
jns
js
clc
daa
jmp
(bad)
and
jno
jno
ja
cmc
sub
cli
and
jle
jge
jae
repnz
sub
das
imul
jne
dec
mov
jmp
(bad)
es
and
jae
jae
jno
imul
clc
and
jle
jge
jl
repnz
adc
and
sub
jbe
jbe
jne
cmc
sub
retf
and
jnp
jnp
jp
cli
and
and
daa
jmp
jb
jbe
jne
jne
hlt
sub
sub
and
and
jns
js
jg
jmp
(bad)
es
and
jl
jae
jb
repnz
sub
sub
sub
ja
ja
jbe
cmc
sub
sub
adc
and
jnp
jp
jp
stc
and
daa
jmp
(bad)
es
jge
jge
jge
std
and
cld
and
stos
jb
jb
jb
icebp
sub
sub
sub
das
ja
jbe
je
dec
mov
jmp
jmp
jg
jg
jg
jle
(bad)
and
cld
and
movs
jl
jae
jae
repnz
cmps
leave
jmp
imul
and
adc
add
loope
add
pushf
push
or
push
cmc
pop
jne
jmp
ret
jne
jg
inc
sbb
in
inc
(bad)
dec
lods
es
adc
arpl
xchg
scas
fs
ins
mov
sub
pop
retf
mov
sbb
sub
adc
call
jo
movs
xchg
pop
cwde
bound
movs
pop
movs
imul
stc
gs
addr16
movs
clc
jmp
cdq
jnp
push
(bad)
clc
cmps
and
div
sbb
sub
sbb
repz
imul
mov
inc
bound
lea
data16
(bad)
ror
aad
(bad)
leave
mov
pop
inc
test
sub
aam
pop
cmp
iret
fwait
pop
push
push
cmc
cmp
mov
mov
and
ins
pop
dec
stos
inc
out
iret
adc
and
stc
nop
cmp
loope
fisub
cmp
mov
mov
in
inc
jae
jno
bound
stc
cmc
(bad)
adc
hlt
in
sbb
mov
xchg
adc
mov
hlt
aas
(bad)
call
mov
movs
mov
sahf
fidivr
adc
sbb
stc
pop
je
ds
ja
cmp
icebp
jl
imul
inc
mov
and
call
pop
ss
ins
xchg
mov
pop
mov
ja
mov
ss
sbb
sub
mov
leave
or
cwde
xor
outs
out
test
add
int
in
cmp
or
rcl
dec
dec
popf
push
mov
mov
xchg
addr16
mov
and
cmp
out
adc
adc
popa
mov
sbb
mov
inc
fiadd
jecxz
cmp
clc
sbb
xor
sbb
imul
adc
or
fadd
sbb
lock
retf
add
data16
test
test
lds
aam
push
fidivr
mov
and
call
out
(bad)
scas
jg
in
test
mov
inc
idiv
in
pop
push
ret
dec
push
adc
arpl
mov
jnp
mov
mov
test
ficom
inc
mov
retf
sub
cmp
in
es
shl
stos
inc
and
daa
mov
mov
(bad)
test
sbb
jb
mul
xor
stos
mov
cmps
pop
fld
addr16
jns
inc
je
bound
inc
add
fld
cli
retf
push
push
sbb
or
xor
aaa
sahf
inc
mov
jne
dec
add
mov
xor
push
push
mov
das
mov
mov
out
mov
icebp
mov
jbe
pop
cmc
test
jns
retf
int
mov
cwde
fwait
mov
jmp
les
stos
lds
movs
sbb
and
(bad)
sub
aad
mov
xchg
cdq
push
and
mov
inc
cmp
sub
mov
daa
xchg
xchg
mov
ret
test
inc
and
pop
(bad)
(bad)
rcr
stc
retf
into
jne
js
test
jge
mov
mov
mov
xor
stc
push
or
inc
or
jnp
add
or
std
in
lods
mov
aam
sti
out
cmc
mov
sub
add
pop
mov
outs
pop
mov
mov
sub
ret
adc
dec
(bad)
jo
pop
gs
and
jnp
sar
mov
mov
mov
mov
sub
sbb
and
inc
pop
add
jge
js
lahf
inc
pop
scas
xchg
in
mov
mov
jns
outs
ins
cdq
call
dec
iret
pop
mov
pop
mov
(bad)
fcmovne
sbb
out
add
hlt
lods
scas
jmp
fwait
bound
pusha
retf
mov
fsubr
pushf
imul
pop
and
sub
cmps
daa
pop
loopne
into
movs
test
test
push
sub
test
data16
aam
jbe
shr
jl
(bad)
out
sub
icebp
test
shl
mov
sbb
(bad)
mov
inc
xlat
enter
call
mov
mov
push
push
mov
call
add
mov
mov
push
call
mov
call
mov
mov
call
lea
push
call
mov
call
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
mov
jne
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
call
mov
mov
and
mov
fild
and
mov
mov
fild
mov
sub
lea
fchs
faddp
fdiv
fstp
push
push
push
call
add
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
mov
push
push
call
mov
mov
add
push
push
lea
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
cmp
jne
lea
push
push
call
mov
mov
add
push
push
lea
call
call
mov
mov
push
push
mov
call
add
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
cmp
jne
mov
push
push
push
call
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
lea
push
call
mov
call
mov
push
push
mov
call
mov
call
mov
sub
push
call
add
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
call
mov
lea
call
mov
call
movzx
push
push
push
lea
call
lea
push
lea
call
mov
mov
mov
push
push
lea
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
(bad)
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
cdq
(bad)
cdq
add
sar
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
loop
lds
iret
push
cmc
inc
xlat
inc
or
jl
xor
int
gs
in
sbb
not
add
adc
adc
cld
adc
pop
sub
dec
popa
popf
sbb
jge
out
inc
sub
nop
xor
sbb
cdq
xchg
inc
jne
adc
cwde
test
xchg
xchg
(bad)
(bad)
adc
add
cmp
xchg
push
addr16
adc
movaps
jae
ficom
inc
xchg
cld
cmp
dec
and
xchg
movs
sub
or
mov
mov
sub
dec
lods
inc
mov
add
mov
push
fstp
in
iret
retf
loopne
int
pop
dec
sub
in
push
mov
xchg
or
push
mov
or
pushf
sub
inc
add
sub
fdiv
je
dec
mov
imul
(bad)
sbb
call
cdq
push
cmp
ret
inc
inc
lahf
mov
xchg
or
movs
sbb
(bad)
mov
adc
movs
cli
mov
mov
and
add
adc
cmc
sar
int
fwait
aad
mov
adc
test
in
iret
xor
dec
mov
gs
test
sbb
fnstsw
mov
neg
cdq
dec
stc
adc
cwde
xor
pop
or
mov
sbb
push
pop
aam
sbb
xchg
and
mov
cli
loop
push
fsub
cdq
add
inc
mov
rcr
retf
stos
jl
cmp
ret
push
mov
or
inc
in
cmp
lea
test
sbb
pop
rol
adc
inc
or
dec
sub
cdq
push
pop
add
shr
add
adc
inc
adc
dec
sub
in
push
pushf
add
shr
test
aam
inc
sbb
dec
xor
int3
push
add
cli
pop
or
jl
call
(bad)
repz
inc
(bad)
sahf
or
dec
adc
leave
push
shl
xlat
dec
cmp
add
cwde
xchg
jns
or
push
dec
sub
loop
inc
test
sub
inc
ins
movs
retf
adc
cmp
nop
and
outs
sbb
scas
pusha
shl
imul
jmp
xor
pop
in
std
adc
or
cs
sub
icebp
(bad)
test
pop
mov
cmp
aas
jmp
inc
jno
fwait
pop
xchg
inc
(bad)
mov
xchg
lahf
add
mov
shl
pop
lea
cdq
inc
and
cmp
dec
(bad)
scas
sub
sbb
sub
popf
fcom
inc
imul
in
mov
adc
pushf
aad
enter
push
push
sub
fsub
sub
fmul
in
pop
aam
sbb
aas
mov
int
and
inc
xchg
sahf
dec
dec
and
loop
sub
pop
(bad)
vmovups
out
dec
or
aam
adc
lahf
out
cmp
cmc
inc
xchg
push
jge
adc
add
inc
cmps
mov
xor
imul
ins
sbb
push
arpl
sbb
sahf
add
int3
adc
js
test
ins
push
pop
inc
stc
iret
cli
pop
or
stos
sub
sbb
xchg
pushf
inc
adc
xchg
sub
push
into
scas
adc
sbb
xor
pusha
xor
push
popf
cmp
rcr
(bad)
daa
xchg
in
adc
and
sbb
popa
adc
call
popa
dec
and
dec
mov
dec
and
das
das
(bad)
fisubr
fmul
sbb
xor
xor
push
pop
mov
in
adc
sahf
call
adc
fsubr
cdq
add
push
icebp
pop
rcr
mov
stos
js
imul
inc
and
cmp
stc
xlat
loopne
xor
mov
add
hlt
push
popa
jmp
mov
sbb
dec
int3
jmp
inc
adc
gs
dec
cmp
sbb
push
mov
fwait
inc
or
lods
jno
lahf
adc
aad
xor
mov
inc
ins
js
sbb
call
or
cmp
imul
inc
cmp
push
or
jl
sub
int
sbb
out
and
(bad)
push
lea
adc
sbb
push
(bad)
hlt
sbb
push
call
sbb
dec
xlat
jmp
inc
adc
gs
loopne
mov
adc
loop
in
fstp
mov
dec
cmp
jmp
adc
mov
sub
repz
aas
sub
loop
mov
test
iret
aad
dec
add
and
sub
aad
dec
jnp
fwait
xchg
xchg
mov
cdq
add
aas
add
ficom
cmc
xchg
pushf
xchg
adc
sub
dec
sub
loop
mov
adc
retf
lea
fisub
data16
aas
stc
test
xor
or
mov
pop
mov
jl
inc
daa
xchg
sbb
jle
and
pop
sub
adc
iret
ins
ret
dec
xor
jmp
rcr
sub
or
int
jno
in
or
sub
lock
cmc
jne
in
sbb
cmp
dec
cmp
xchg
inc
test
lahf
lahf
cmps
aas
imul
add
sbb
xor
lods
adc
adc
scas
add
loopne
add
dec
mov
fs
std
jmp
pusha
dec
and
cmp
in
dec
mov
mov
pop
in
in
inc
sbb
inc
mov
cmps
sbb
cld
or
or
mov
int3
jno
pop
sbb
adc
inc
mov
sub
mov
inc
add
mov
int
imul
dec
inc
mov
mov
or
in
into
adc
xor
lea
push
and
xor
loope
test
aad
cmp
ficomp
push
data16
inc
or
mov
out
xchg
pushf
cdq
mov
xor
jle
stc
cli
sbb
ja
or
iret
(bad)
xlat
ja
clc
int3
sbb
ret
rcr
cmps
dec
iret
stc
jbe
jmp
inc
call
aad
call
mov
sar
xchg
pop
or
sbb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
lock
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
cmp
jne
mov
push
push
push
call
call
mov
mov
push
push
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
mov
pop
ret
push
mov
cmp
jne
cmp
je
lea
call
lea
pop
jmp
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
lea
call
mov
call
movzx
push
push
call
mov
push
lea
call
push
push
lea
call
mov
mov
mov
push
push
lea
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
pop
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
lea
push
push
call
mov
call
xor
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
call
add
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
mov
add
push
call
add
add
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
sub
push
call
lea
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
push
call
add
add
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
sub
push
call
add
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jle
push
push
call
add
cmp
je
sub
sar
cmp
je
add
push
call
add
add
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
sub
push
call
lea
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
call
add
add
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
push
push
push
call
mov
call
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
mov
pop
mov
pop
ret
call
mov
mov
mov
push
push
push
mov
call
jmp
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
mov
mov
mov
call
mov
mov
mov
push
push
push
mov
mov
call
test
jne
mov
test
jne
xor
jmp
mov
lea
mov
add
test
jne
sub
sar
push
push
mov
call
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
xor
mov
mov
mov
mov
push
mov
call
mov
lea
push
push
mov
call
mov
call
mov
mov
cmp
setne
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
push
lea
call
mov
mov
mov
mov
lea
push
mov
push
push
lea
push
mov
call
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
call
test
je
push
lea
call
mov
lea
push
mov
call
mov
lea
call
mov
call
test
je
mov
call
test
jne
mov
call
test
je
mov
call
test
je
mov
pop
mov
pop
pop
mov
mov
pop
ret
call
mov
mov
mov
push
push
push
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
lea
push
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
call
mov
mov
push
mov
push
push
push
push
mov
call
mov
mov
push
push
call
add
test
jne
call
mov
push
push
mov
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
mov
cmp
je
push
call
mov
call
test
jne
mov
call
test
je
mov
call
test
jne
call
mov
mov
push
push
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
lea
push
mov
call
mov
mov
call
test
sete
mov
lea
call
cmp
je
lea
push
mov
call
mov
lea
push
mov
call
mov
lea
call
mov
lea
call
push
push
lea
call
test
jne
call
mov
push
push
mov
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
push
mov
call
lea
push
push
call
mov
call
mov
push
lea
call
mov
lea
call
lea
push
push
call
mov
call
mov
push
lea
call
mov
lea
call
mov
mov
cmp
je
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
lea
push
push
push
push
lea
mov
mov
call
mov
cmp
je
call
mov
push
push
push
mov
call
add
mov
lea
push
push
push
push
lea
mov
call
mov
cmp
je
call
mov
push
push
push
mov
call
add
mov
lea
call
mov
mov
cmp
je
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
lea
push
push
push
push
lea
mov
mov
call
mov
cmp
je
call
mov
mov
push
push
push
call
add
mov
lea
call
mov
mov
lea
call
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
pop
pop
pop
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
call
mov
mov
push
push
lea
push
lea
call
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
push
jne
push
push
mov
jmp
lea
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
push
push
mov
lea
push
call
mov
mov
sub
push
call
add
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
cmp
jne
mov
add
push
call
lea
add
mov
mov
lea
push
lea
call
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
call
test
je
lea
call
test
je
lea
call
test
jne
mov
lea
push
mov
call
push
push
lea
push
lea
call
cmp
jne
call
mov
mov
push
push
push
mov
call
add
call
mov
mov
push
nop
fwait
xchg
sbb
test
dec
nop
sbb
or
jl
mov
imul
test
test
enter
scas
cli
sbb
js
test
call
imul
mov
add
inc
push
mov
mov
neg
dec
or
jmp
imul
xor
mov
repnz
and
pushf
push
cmp
js
pop
mov
imul
mov
popa
jb
fst
neg
in
inc
sub
mov
leave
push
arpl
call
call
js
xor
clc
sbb
out
inc
pop
sbb
mov
push
push
jo
ficomp
retf
pop
mov
inc
cdq
aam
ror
inc
outs
stos
push
sbb
fimul
dec
ficom
mov
mov
sub
fs
mov
daa
cmp
dec
jge
sub
mov
mov
jg
ins
and
call
dec
dec
or
repz
jp
push
push
test
mov
mov
mov
daa
dec
dec
sbb
jge
or
call
pop
mov
pop
sbb
adc
loope
mov
imul
push
outs
sub
adc
xor
mov
loope
jmp
ds
iret
dec
sub
ror
pop
std
push
jb
ret
mov
(bad)
out
lods
ret
ds
mov
dec
cdq
test
dec
sbb
adc
in
pop
int
cmp
clc
or
inc
cld
sub
mov
js
loope
jns
test
iret
outs
fsubr
inc
mov
cwde
enter
pop
pop
lods
sbb
fsubr
and
jge
push
das
dec
push
or
push
dec
push
mov
movs
push
call
or
in
jmp
sub
cmp
hlt
push
cdq
dec
adc
cdq
out
popf
sbb
sbb
mov
repnz
repnz
add
aaa
mov
ret
cli
sbb
pop
retf
mov
push
sub
popa
or
retf
dec
mov
jl
mov
sbb
add
pop
lahf
loopne
iret
je
mov
test
idiv
rcr
mov
mov
push
sbb
fldcw
daa
pop
mov
or
pusha
int3
push
jbe
mov
rcr
fidivr
stos
leave
and
or
cwde
sub
sbb
adc
jnp
aam
cmp
xor
cmp
add
and
out
sti
adc
cmp
mov
cmps
jg
and
sbb
clc
mov
aaa
retf
dec
test
mov
jp
inc
icebp
mov
mov
pop
into
(bad)
retf
and
icebp
ret
clc
adc
push
cmp
cmps
mov
cmps
dec
mov
iret
push
stos
ror
mov
and
call
sbb
nop
scas
loopne
pop
pop
call
adc
int3
dec
test
hlt
loopne
mov
sbb
ds
mov
pusha
ret
inc
mov
test
je
add
or
pop
pusha
cwde
sub
xchg
cmp
sar
dec
cs
mov
(bad)
fdiv
fsubr
cdq
lods
stos
idiv
fadd
sub
inc
add
loope
(bad)
cmp
dec
mov
stc
xor
xor
sbb
imul
mov
movs
push
sub
jno
clc
mov
mov
retf
mov
hlt
(bad)
mov
sbb
leave
xor
sbb
enter
jle
test
adc
xchg
pop
sub
or
cli
shl
das
sbb
enter
push
inc
dec
add
psubw
cmp
sbb
sbb
pusha
fdivr
xlat
mov
lock
ins
aas
je
nop
xor
cmp
jns
jmp
sbb
fstp
jmp
mov
mov
ins
fsubr
rcr
mov
dec
push
aad
jmp
mov
(bad)
cmc
leave
cmp
in
dec
sub
aad
stc
or
ins
add
jo
xchg
jmp
aad
mov
mov
lea
mov
call
cwde
pop
ins
movs
cmp
mov
mov
mov
or
inc
sbb
shr
js
inc
jecxz
loopne
push
cmp
mov
dec
jmp
mov
inc
sbb
call
shr
repz
(bad)
cmp
test
sub
iret
inc
out
fsub
jae
rcl
arpl
inc
lock
mov
dec
push
ss
retf
sbb
(bad)
popf
pushf
mov
dec
test
or
sbb
std
xchg
jno
sbb
cwde
hlt
cmp
mov
ins
movs
clc
fsubr
call
fisubr
fld1
xchg
aaa
mov
mov
imul
or
jmp
(bad)
aas
jecxz
inc
stc
fldenv
jl
inc
test
call
jmp
xor
ds
push
cmp
sbb
xchg
adc
xlat
sbb
mov
cmp
pusha
jmp
(bad)
fdiv
jl
outs
jmp
cdq
cmp
pop
dec
cmp
sbb
jl
mov
inc
push
sub
xchg
movs
nop
ficomp
pop
push
xlat
xor
cmp
js
sub
outs
cdq
sbb
mov
leave
adc
pop
sar
clc
outs
push
xor
sbb
out
test
cmp
aad
push
sbb
sub
(bad)
push
inc
dec
jae
xchg
nop
cdq
sub
dec
gs
xor
sub
loopne
xlat
test
pop
scas
cmps
(bad)
ds
mov
call
cmp
and
test
cmps
movs
movs
test
pop
and
push
dec
mov
cs
pop
test
(bad)
fist
test
fcmovnu
test
(bad)
sbb
jle
push
dec
sbb
pop
cli
and
xor
mov
xchg
mov
pop
sub
test
mov
loopne
lods
dec
out
mov
sub
cmp
cli
push
lods
mov
push
lea
pop
lock
cwde
les
mov
mov
dec
ds
sub
test
jnp
nop
push
adc
les
jecxz
es
gs
enter
pop
dec
cmp
add
(bad)
rcl
fild
sbb
lods
shl
ror
out
push
adc
inc
jp
jp
mov
adc
and
shr
mov
fmulp
and
push
inc
adc
jmp
inc
test
mov
sbb
sub
sub
scas
jno
xchg
shl
mov
pop
nop
loop
popa
sbb
js
dec
test
lds
in
jns
loope
enter
pop
jo
jnp
js
inc
pushf
jmp
push
test
sub
or
or
mov
cmp
sub
pop
sbb
cmc
mov
dec
add
adc
xor
cmp
jge
and
sub
repnz
or
xchg
mov
inc
into
push
inc
dec
sub
push
jae
mov
int
loopne
pop
dec
xchg
jmp
pop
sbb
dec
ret
sbb
lock
pop
inc
mov
jbe
mov
rcr
inc
xor
jnp
imul
shl
mov
mov
push
lds
mov
in
mov
dec
pop
hlt
retf
loopne
in
in
pop
push
rcr
or
mov
call
dec
icebp
in
or
enter
dec
test
retf
cdq
int3
xchg
jno
sub
or
mov
cmp
pop
(bad)
call
push
adc
sbb
loopne
sbb
xchg
dec
cli
fisubr
int
into
int
cmp
call
ficom
fisub
mov
cmps
mov
stos
in
push
mov
icebp
sub
xor
jo
call
loopne
sbb
fbld
cmp
dec
push
dec
(bad)
xchg
or
push
mov
stc
fsubr
cmp
cmp
push
je
(bad)
cmp
aad
push
fdivr
pop
jmp
mov
mov
mov
add
cwde
inc
cmp
add
stc
sub
inc
jmp
(bad)
cmp
popf
inc
js
push
add
cmp
sbb
test
jns
fnstsw
mov
lea
jne
leave
cmp
lods
aaa
sahf
add
retf
movs
sbb
pop
push
das
sub
nop
and
sub
xor
enter
xchg
push
and
pusha
and
mov
lods
imul
or
lahf
scas
ins
sbb
dec
sbb
mov
inc
mov
jle
cdq
pop
xchg
pop
mov
xor
retf
mov
leave
add
retf
mov
mov
push
pop
and
xor
shl
shl
add
call
dec
das
push
arpl
std
fisttp
ret
sbb
fs
pop
mov
call
in
inc
scas
in
fs
popa
ror
mov
add
pop
out
push
and
mov
pusha
mov
xchg
inc
jb
jns
and
in
pop
lea
fsub
or
dec
inc
pop
call
cdq
or
test
push
(bad)
cmp
dec
mov
or
xor
gs
jbe
mov
cmp
lock
imul
lds
int
enter
out
call
xchg
test
or
inc
jbe
es
stos
and
cmp
enter
and
lock
cmp
jo
jl
daa
hlt
(bad)
push
xchg
mov
not
outs
call
sub
fstcw
fisttp
into
mov
mov
mov
sub
test
cmp
mov
clc
int3
inc
cmp
jmp
loop
inc
pop
xchg
call
rcl
jmp
fs
das
jp
cs
or
pop
lods
adc
ja
dec
cwde
frstor
pop
or
inc
imul
dec
jmp
sub
fdivrp
push
mov
jo
jp
dec
aam
jmp
or
stos
pop
adc
xlat
jl
push
fidiv
mov
sbb
add
cmps
mov
sub
dec
cwde
jno
cs
pop
ins
das
bound
sub
fst
inc
mov
push
retf
or
cli
stos
adc
and
and
mov
retf
enter
das
sbb
(bad)
into
pop
xchg
mov
jmp
push
das
aam
stos
call
xchg
or
popf
pop
mov
jmp
(bad)
cmp
jg
stc
push
xor
mov
xchg
mov
dec
imul
push
inc
adc
cmovg
nop
xor
call
retf
mov
lea
mov
dec
fld
mov
pop
seto
add
sbb
xchg
xchg
js
sbb
jnp
jns
cmp
mov
popf
pop
adc
sbb
das
call
aad
pop
cdq
imul
ror
fs
add
xlat
adc
dec
sbb
test
mov
sbb
inc
enter
cdq
(bad)
daa
sub
jg
jge
(bad)
int
inc
xchg
or
gs
fsub
cwde
fsub
sub
fwait
jl
sub
das
or
inc
jl
dec
sbb
clc
mov
push
pop
jne
dec
xor
(bad)
cmp
ss
sbb
pop
push
inc
jg
out
xlat
mov
sub
ins
xchg
std
mov
clc
adc
jge
call
test
or
jmp
push
cmp
sub
xchg
stos
xor
fdiv
add
or
jne
test
xor
call
push
cmp
imul
stos
push
and
mov
cmp
test
dec
push
out
jmp
and
mov
sub
xchg
or
adc
inc
dec
ret
retf
pop
push
xor
test
outs
stc
popf
jae
mov
mov
and
lock
sbb
sbb
pop
fstp
push
xchg
cmc
in
retf
movzx
mov
pushf
sbb
jns
cmp
enter
cmp
in
in
cmp
adc
mov
jp
adc
rdtsc
pop
cli
call
dec
in
(bad)
call
jp
fwait
jnp
imul
call
mov
add
test
cmp
clc
scas
mov
adc
sbb
sub
stc
call
clc
call
enter
stc
stos
jge
pop
mov
jno
test
js
out
and
addr16
dec
and
push
test
jo
cdq
and
fsubr
sbb
xchg
push
pop
jmp
mov
pop
out
and
mov
test
cwde
int
in
pop
cdq
retf
aas
mov
sbb
push
fcmovne
mov
mov
sub
mov
and
add
iret
pop
sbb
pop
push
xchg
adc
bnd
stc
lea
leave
or
scas
dec
clc
in
hlt
sbb
out
jp
stos
dec
enter
sbb
add
ds
mov
add
int
clc
fisub
ins
lock
in
lock
retf
leave
sbb
mov
sub
mov
mov
jmp
pop
sbb
hlt
lds
and
in
jns
adc
pop
call
or
lock
and
mov
js
add
cmp
ror
clc
leave
push
push
add
and
sub
int
push
push
fs
test
(bad)
sbb
adc
or
and
aaa
cmp
gs
cmps
jge
add
push
fnstcw
xor
and
add
cmp
enter
loop
arpl
mov
push
jnp
cmp
cmps
cmp
sub
mov
cmp
fstp
int3
pop
fsubr
test
add
jae
and
retf
inc
mov
pop
mov
and
sub
pop
out
stos
repz
sbb
add
(bad)
jnp
pop
pusha
ror
scas
sub
mov
ror
loop
mov
or
fcmovnu
fsubr
test
int
gs
repz
mov
pop
adc
iret
sub
jnp
fstp
outs
std
pushf
jg
sub
pop
xchg
mov
push
mov
cdq
int
test
mov
jo
lahf
jo
arpl
fsub
rcl
add
enter
bound
data16
jb
mov
sbb
cwde
(bad)
cmp
test
scas
cld
mov
jb
pop
cdq
cdq
in
mov
push
sbb
rcr
mov
mov
dec
cmp
fist
mov
data16
and
fstp
and
mov
jl
mov
movs
leave
cmp
sar
or
and
xchg
sbb
push
rcr
and
mov
xlat
sub
dec
mov
clc
aaa
mov
inc
ss
call
sbb
cmp
mov
lahf
js
rol
(bad)
or
cmp
cmps
push
mov
push
popf
cwde
push
inc
data16
xor
add
outs
icebp
mov
sub
fild
sbb
pop
or
fldcw
call
icebp
cli
push
sbb
ins
and
jne
inc
mov
sti
call
fsubr
push
adc
popa
popa
aas
cdq
sbb
cmp
loope
adc
repnz
movs
lods
add
xchg
sahf
mov
int
div
enter
jb
fdivr
cmp
jmp
shr
jo
popa
loopne
mov
fldenv
repz
outs
xchg
add
xchg
and
ins
js
sub
add
and
mov
mov
sub
inc
inc
enter
mov
enter
mov
mov
sub
push
mov
cmp
mov
stc
nop
dec
mov
test
or
dec
pop
cli
xor
push
nop
aas
pop
jp
dec
cmp
or
cmp
retf
fnstcw
stos
dec
push
add
rol
stos
push
gs
out
and
jmp
pop
lods
jae
dec
mov
push
sub
stos
jo
dec
or
xchg
std
fmul
push
clc
sbb
imul
imul
fwait
and
loopne
fisubr
inc
lea
xor
sti
retf
fnstenv
sub
pusha
shl
lods
xchg
push
enter
daa
jns
stc
test
pop
adc
cmp
push
dec
dec
dec
xchg
mul
fisttp
mov
sar
dec
out
or
adc
adc
pop
call
pop
sub
in
jmp
mov
dec
sbb
std
cli
(bad)
imul
mov
pop
pusha
xor
pop
or
xor
inc
or
out
jge
call
test
mov
leave
push
sets
lods
les
dec
mov
mov
fwait
(bad)
in
outs
cmp
call
(bad)
(bad)
dec
adc
enter
and
or
mov
arpl
(bad)
hlt
mov
fwait
jmp
xchg
fwait
arpl
jmp
out
xchg
jmp
sub
ror
aad
xchg
int
jl
jo
mov
cwde
sbb
lds
pop
xor
popf
fmul
add
dec
popf
mov
cmp
lods
mov
xor
inc
stc
adc
call
and
retf
int3
or
enter
int
or
cdq
pop
cmp
cmp
inc
leave
push
cmp
xor
clc
iret
mov
leave
pop
or
dec
les
imul
cmp
inc
cdq
adc
pop
dec
sti
cwde
mov
enter
xchg
dec
pop
cli
jl
push
jns
dec
mov
inc
or
jns
jg
adc
(bad)
ins
jne
dec
pop
or
inc
cmp
jmp
faddp
sbb
into
jns
rcr
fmul
push
cmp
mov
cmp
es
aam
outs
sub
(bad)
enter
cmp
test
dec
in
cmp
js
std
sub
sub
mov
addr16
jge
push
into
ins
fisubr
jno
scas
fstp
imul
push
(bad)
pop
popa
push
test
cdq
fcmovnu
jns
xchg
dec
push
inc
xor
xchg
mov
jmp
sub
jb
pop
cmp
xchg
push
sub
adc
add
iret
or
lea
or
add
je
clc
or
sbb
lock
jmp
adc
test
data16
cmp
cwde
dec
jmp
jecxz
outs
test
dec
add
rol
inc
test
out
sbb
mov
fs
aad
mov
adc
jmp
mov
test
adc
dec
xchg
dec
clc
fwait
in
test
movs
sti
xor
add
dec
dec
retf
sti
xor
stos
mov
rep
popa
cmp
dec
mov
test
fs
adc
dec
mov
shl
mov
mov
cdq
retf
stos
idiv
cmc
adc
data16
scas
dec
sub
stc
test
jae
je
xchg
mov
sbb
mov
cmp
imul
mov
cmps
stos
adc
imul
stos
lahf
pop
loope
test
sahf
cmp
shr
mov
enter
sbb
cli
mov
retf
xor
cmps
mov
repz
lahf
ss
data16
es
mov
cwde
pop
and
jl
pop
xor
pop
xchg
lahf
mov
xor
push
mov
adc
dec
fcom
popa
jmp
fstp
xlat
or
mov
aad
cmp
pop
sar
fistp
cmp
jge
retf
outs
jge
leave
out
mov
scas
push
pop
js
or
enter
sub
gs
loopne
outs
mov
stos
mov
sbb
into
ror
dec
pusha
push
arpl
ret
cmp
jmp
icebp
popa
push
ss
sub
enter
je
es
loopne
pop
xor
xlat
mov
mov
cs
sub
cmp
and
jae
xchg
jae
pop
sahf
inc
scas
jp
popa
mov
mov
idiv
iret
inc
and
stos
loopne
xchg
jns
mov
stc
cmp
cdq
push
jb
jecxz
call
mov
jae
enter
dec
sub
add
dec
mov
out
addr16
test
cmp
cwde
push
inc
ss
and
jnp
dec
mov
sub
xor
clc
outs
jmp
jno
mov
adc
cmp
leave
retf
repnz
enter
(bad)
mov
lock
test
mov
push
jae
cmps
in
mov
stos
add
stos
fistp
out
dec
sbb
pusha
fisttp
jbe
add
push
cmp
std
xchg
jbe
and
ret
sub
fistp
clc
int
out
clc
jns
mov
pop
sbb
xchg
pop
push
xchg
fdiv
jp
sar
mov
jbe
pop
sbb
add
dec
imul
leave
(bad)
jbe
add
sbb
mov
leave
sub
mov
xchg
stos
pop
mov
xchg
xor
adc
cmp
ret
outs
fchs
leave
(bad)
dec
or
add
jle
xchg
or
add
lods
sub
pop
xlat
mov
lods
dec
ss
enter
mov
call
jno
fldenv
leave
sti
adc
xor
xchg
and
fnstcw
ds
sti
retf
gs
push
jle
sbb
cmp
sti
imul
mov
push
or
dec
pop
cmp
push
push
mov
lods
dec
and
pushf
lods
pop
cmp
movs
mov
or
dec
and
cmp
into
add
or
add
cwde
in
das
loop
add
mov
test
rcl
jmp
call
fimul
retf
pushf
mov
dec
cli
mov
mov
retf
mov
jle
sbb
cli
je
inc
test
ret
pusha
inc
jmp
mov
jno
pop
push
inc
(bad)
js
cmp
cmp
mov
dec
jns
push
into
cmp
jecxz
jnp
and
sub
cmp
in
jne
movs
lods
dec
aas
cs
sub
neg
add
icebp
imul
stos
imul
rol
movs
shl
and
mov
int
popf
mov
adc
leave
call
cpuid
cli
addr16
sbb
popf
mov
int
clc
vaddss
sub
sub
pop
inc
mov
pop
aaa
ficom
dec
retf
call
and
xor
fsubp
leave
pop
mov
dec
aad
mov
and
inc
outs
retf
jmp
xor
into
adc
enter
jp
dec
retf
out
ja
dec
ds
imul
and
and
xbegin
test
and
adc
mov
cmp
xor
xor
in
enter
lods
rcl
push
pop
mov
mov
pop
fcomp
add
mov
nop
cmp
pop
adc
aad
retf
data16
clc
push
pop
loopne
in
rcr
push
dec
repnz
jp
dec
test
sar
pusha
cmps
jo
xchg
dec
test
cmps
jp
xor
fsubr
add
mov
or
push
stos
and
mov
test
push
fsubr
cmp
pop
or
imul
jbe
xor
or
or
sbb
sbb
cmp
or
or
push
(bad)
fld
ins
jns
imul
dec
fisub
push
jns
lods
jl
jl
push
aas
mov
and
jp
js
fsubrp
in
out
or
mov
add
and
mov
jb
dec
shr
es
test
gs
xchg
or
jecxz
cmps
shl
adc
sbb
or
test
out
mov
or
xchg
sbb
mov
fstp
test
test
adc
or
mov
mov
inc
mov
push
xor
icebp
loop
enter
or
fmul
(bad)
mov
fldcw
fnstenv
or
push
dec
pop
add
sub
jbe
sub
push
cld
sti
xor
mov
js
and
cmp
pusha
mov
or
or
mov
mov
mov
retf
cwde
scas
outs
and
sbb
jnp
fcomp
push
stos
ret
xor
call
mov
out
mov
imul
ror
push
das
mov
fcmovbe
push
ins
js
xchg
(bad)
jle
je
push
imul
mov
dec
repz
or
dec
in
mov
mov
ins
pop
loopne
cwde
fwait
adc
sub
jns
ins
cmp
sbb
ja
xor
out
sti
push
jns
xchg
cmp
cmp
aas
aaa
js
pop
mov
push
adc
jmp
adc
clc
loop
inc
hlt
sub
or
in
arpl
(bad)
sub
(bad)
je
movaps
mov
stos
aas
adc
or
lahf
mov
mov
fadd
mov
mov
push
mov
jns
scas
push
les
fsubr
mov
enter
ja
fld
jmp
push
xchg
jnp
sbb
pushf
les
mov
ffree
sub
ja
push
adc
in
push
sub
int3
scas
je
xchg
pop
dec
in
sti
sub
xchg
push
cmp
repnz
dec
es
dec
int
data16
in
mov
stos
jnp
pop
test
mov
jl
rcl
enter
fbstp
pop
or
or
pop
sub
cld
enter
jns
inc
cmp
ret
push
pop
push
imul
and
pop
sar
pop
push
adc
inc
aas
enter
imul
mov
inc
sub
jmp
cmp
xor
mov
mov
push
fisubr
jp
pop
scas
ret
leave
push
ins
mov
in
fimul
sub
mov
cmc
cmp
or
(bad)
pop
inc
ror
int3
push
dec
loopne
pop
test
shl
aas
in
mov
or
lahf
xchg
sbb
pop
daa
push
lods
clc
mov
dec
push
push
psubsw
mov
push
ja
test
mov
(bad)
clc
dec
js
mov
ds
push
jmp
jb
leave
inc
stc
xor
pop
outs
xor
lock
in
out
das
mov
or
sbb
cwde
outs
imul
test
inc
jge
imul
loop
clc
test
or
sub
sbb
push
dec
mov
xchg
jge
and
(bad)
jmp
or
or
or
sti
push
mov
lea
and
stos
call
pop
mov
test
mov
call
jle
in
movs
lock
xor
fld
pop
stos
fdivr
mov
push
push
dec
pushf
ret
mov
out
or
bound
sub
jmp
ret
xor
les
mov
dec
push
mov
mov
cmp
fsub
push
das
add
(bad)
int3
(bad)
push
cmp
sub
jmp
aas
or
cmp
enter
push
add
clc
cmp
inc
jp
fs
aam
paddsb
repnz
lods
cmp
inc
sbb
fnstsw
call
inc
lods
push
xor
jb
(bad)
cmp
sbb
in
out
jmp
or
nop
fidivr
test
mov
icebp
xor
retf
or
dec
icebp
movs
push
fstp
sbb
add
dec
inc
push
jns
cmc
mov
enter
enter
xchg
out
dec
cmp
rdmsr
or
ror
mov
enter
in
push
loop
and
adc
push
(bad)
sti
dec
add
jecxz
xor
sub
and
mov
nop
or
dec
xlat
ficom
and
fst
sbb
test
ret
cdq
pop
shr
mov
dec
stos
and
mov
dec
ds
in
push
cld
fs
in
pop
mov
mov
loope
ins
push
sub
xchg
jg
and
inc
in
retf
or
or
out
push
dec
and
test
sbb
xchg
and
xor
inc
push
icebp
xlat
cmp
outs
test
es
sbb
dec
or
sbb
jno
or
mov
sub
clc
imul
sbb
cwde
mov
leave
push
xchg
adc
mov
fimul
sub
mov
call
mov
leave
mov
lods
ins
std
dec
dec
call
push
fst
sub
sub
repnz
cmp
push
call
leave
lods
ficom
aas
mov
lock
pop
cli
clc
(bad)
push
inc
clc
push
aaa
push
and
sbb
inc
mov
call
jmp
movs
fcomp
nop
sub
mov
test
popf
and
jge
add
push
retf
add
mov
xchg
(bad)
aaa
enter
push
js
pop
sbb
mov
out
ficom
pushf
fnstcw
sub
or
mov
in
ja
inc
stc
out
sub
xchg
outs
sub
or
or
fimul
test
dec
xchg
xchg
fadd
xor
pusha
xchg
dec
lock
shl
sub
xor
out
nop
fst
xchg
jmp
repz
xor
clc
out
retf
sub
add
or
or
adc
or
rcl
movs
aad
lock
iret
and
cdq
imul
xchg
in
in
(bad)
mov
popf
adc
cmp
jmp
xor
mov
cmp
pop
mul
fiadd
ds
(bad)
enter
adc
popa
jp
scas
sbb
mov
or
mov
out
adc
add
fdiv
retf
pop
std
mov
ret
je
ss
push
xchg
ds
sbb
fwait
bound
jge
cmp
and
retf
dec
jecxz
or
lods
fstp
loope
or
pop
and
cmps
popa
push
leave
sbb
mov
(bad)
pop
es
or
push
mov
jnp
push
jmp
jp
and
xor
and
mov
mov
xor
jl
xchg
sbb
jmp
pop
push
sub
and
sti
test
push
imul
mov
(bad)
call
inc
jg
shr
fistp
dec
mov
(bad)
cmp
mov
sub
or
pusha
jns
in
jecxz
lods
in
(bad)
pop
xor
dec
(bad)
jns
sbb
mov
aas
lock
ret
ds
add
test
xor
cwde
ja
mov
out
sbb
or
ret
xor
and
mov
nop
mov
dec
inc
shl
sbb
xor
cmps
xor
imul
mov
sub
repz
clc
cmc
mov
sahf
xlat
data16
loope
cld
jo
add
pop
cmp
popf
fcmovnb
push
xor
call
call
jae
pop
sahf
or
js
in
cld
and
cli
jmp
sub
inc
jo
(bad)
fdiv
fdiv
enter
pop
xor
fwait
lods
mov
call
dec
sub
or
jecxz
mov
jns
into
dec
mov
fucomi
cs
dec
pushf
icebp
sub
sbb
pop
test
pusha
xor
in
fadd
sbb
cwde
imul
(bad)
lods
arpl
mov
push
ins
xor
dec
popa
cmp
ret
adc
nop
lahf
pop
(bad)
adc
bound
cmps
sbb
in
sub
cwde
dec
test
clc
rol
pop
ror
or
adc
fmul
int
cmp
stos
push
push
sbb
and
retf
pop
test
fisttp
gs
es
scas
fmul
cmp
adc
shl
and
call
lock
mov
sbb
sub
ss
jo
jne
outs
sub
mov
xor
hlt
pop
enter
(bad)
dec
cmp
imul
sbb
imul
lea
ret
push
cmp
or
push
fisttp
js
and
fptan
or
dec
pusha
mov
cmps
jl
lds
std
out
mov
movs
pop
mov
mov
pop
mov
pushf
jb
imul
das
pop
shl
call
dec
fcomp
mov
stos
pop
dec
cmp
stos
jbe
ficom
scas
adc
mov
fdiv
das
fisubr
fwait
mov
adc
pop
nop
es
mov
cmp
and
sbb
sub
(bad)
(bad)
clc
jns
popa
pop
(bad)
cmps
test
cmp
loopne
mov
and
gs
sub
jl
fwait
sti
sub
popf
clc
mov
shr
in
push
div
xchg
popf
test
in
sub
ins
sub
stc
cli
sbb
cmc
inc
jmp
jae
jo
icebp
pushf
hlt
push
or
inc
lock
dec
push
stos
xchg
dec
shl
dec
loop
stos
aas
or
jns
jnp
xchg
in
dec
push
mov
push
pop
xor
stos
jb
mov
cli
cli
test
or
ficomp
sbb
mov
sti
and
pop
fsubr
or
es
lods
in
sbb
aad
fsub
(bad)
mov
ret
inc
dec
cmp
push
pushf
stos
dec
xor
or
fadd
adc
cs
out
or
sar
jmp
sbb
mov
popf
or
pop
nop
sbb
xchg
cmp
pop
das
dec
lods
or
fild
add
jge
inc
xchg
or
popf
dec
popf
or
or
rcr
push
add
out
adc
mov
cmp
call
mov
add
outs
add
sbb
jno
ss
out
xchg
push
mov
mov
add
fcom
retf
ins
mov
sbb
and
mov
push
mov
loopne
sub
add
mov
sub
lahf
sub
lock
int3
push
call
sar
mov
pop
sahf
sub
stc
xor
test
push
jmp
jl
add
call
dec
icebp
cmp
xchg
aaa
loope
sbb
or
rol
jne
cmp
or
inc
or
stos
fdivr
adc
movs
push
icebp
jb
inc
jmp
fcomp
int3
pop
in
clc
push
mov
pop
xchg
imul
sub
ret
(bad)
test
xchg
sbb
sub
push
ins
mov
dec
call
xor
inc
mov
loopne
ret
mov
mov
das
mov
scas
add
fs
call
jmp
cmp
mov
push
pop
pop
adc
jg
mov
pop
loop
xor
fdivrp
cmp
pop
pop
and
mov
cmp
repnz
or
cdq
sub
push
pop
aam
or
pop
neg
daa
ret
dec
test
call
xor
enter
mov
dec
mov
mov
cmp
dec
stc
adc
mov
sbb
mov
out
gs
add
stc
loope
jp
dec
int
retf
xor
dec
sub
mov
test
movs
sbb
repnz
mov
mov
sbb
dec
sub
add
adc
fsubr
dec
into
or
push
or
dec
push
data16
push
xchg
sub
adc
cmps
mov
ss
jo
sbb
sub
les
adc
out
and
sub
cld
stc
sbb
popf
sbb
mov
add
xor
fnstsw
sub
or
mov
jo
push
(bad)
imul
test
pop
pop
je
mov
mov
ds
xor
pusha
lds
call
dec
retf
std
or
ss
mov
shr
pop
lock
fnop
cmp
jmp
and
push
sub
pusha
and
stos
mov
loop
fwait
xor
push
sbb
test
mov
xchg
or
push
add
(bad)
clc
pop
fiadd
xor
jge
daa
pop
jmp
call
jns
or
mov
int3
xor
dec
sar
mov
push
data16
sub
div
fdiv
sar
jns
mov
dec
xor
jmp
es
xor
mov
stc
or
mov
dec
test
loop
in
ds
clc
popa
aad
inc
fisub
scas
or
dec
inc
inc
fst
stos
mov
cmp
sbb
call
add
cmp
cmp
cwde
or
out
adc
and
(bad)
mov
lock
lea
test
add
jae
arpl
pop
arpl
loop
mov
xlat
inc
fsub
sahf
ins
cmp
pop
clc
add
inc
stos
lock
inc
mov
std
aad
out
adc
(bad)
mov
lods
dec
jbe
jle
pushf
mov
cmp
push
enter
in
adc
sbb
pop
fdivr
clc
push
jge
cwde
and
adc
and
lods
clc
out
sub
call
and
mov
mov
scas
or
ins
cdq
test
jmp
xchg
sbb
call
das
fs
cmps
jmp
xchg
or
dec
imul
mov
pop
repz
jmp
pop
xchg
fwait
or
xchg
sub
jge
push
mov
imul
fs
pop
aaa
cmp
sbb
(bad)
push
sub
push
inc
test
dec
retf
lahf
nop
sbb
push
mov
push
inc
int3
sub
lods
std
dec
dec
cmp
clc
xchg
or
sub
fwait
pushf
push
rol
push
push
inc
sahf
ss
je
iret
adc
sbb
cmp
jle
or
shl
repz
mov
pop
fs
daa
push
rcl
test
mov
xchg
jmp
push
retw
or
pop
cmp
mov
jp
sahf
add
std
mov
add
push
std
dec
and
xchg
imul
push
mov
mov
dec
inc
push
js
mov
fwait
push
mov
xchg
push
jecxz
dec
jecxz
(bad)
push
(bad)
push
cwde
jns
xlat
jne
fdivr
cmp
xor
cmp
cld
or
sub
xchg
fsubr
repz
lods
jmp
jae
ret
jecxz
(bad)
and
or
pushf
mov
cwde
adc
xor
adc
fmul
lods
in
xchg
gs
xchg
call
int3
dec
cs
ficomp
jb
sbb
in
test
sub
or
cmc
(bad)
fld
jmp
loope
scas
jbe
js
outs
cmps
or
cmp
mov
(bad)
sbb
movs
f2xm1
cmp
jmp
mov
sbb
sub
dec
imul
enter
jmp
arpl
(bad)
fisub
dec
aad
jae
xor
cmp
adc
fidivr
ss
not
jmp
dec
mov
ss
cmp
nop
outs
sub
inc
mov
or
push
push
lods
imul
add
aas
sub
jmp
sub
into
mov
dec
dec
dec
xor
outs
xchg
pop
or
inc
jo
mov
or
or
pop
ret
push
mov
fdiv
leave
or
push
fs
shr
xchg
dec
retf
sbb
out
cli
cld
mov
lods
and
call
dec
jge
sub
or
cmp
in
fcomp
test
int
and
adc
inc
or
sub
jl
pop
jae
xchg
lock
add
pop
lock
sub
and
aas
leave
cdq
(bad)
or
mov
or
add
xor
mov
jns
xor
pop
sub
add
sbb
fdivr
enter
call
xchg
pop
dec
ss
xchg
pop
mov
pop
outs
data16
and
sbb
mov
mov
lea
dec
cmp
mov
popa
dec
sbb
sbb
sub
cmp
enter
mov
pop
jmp
push
or
popa
jp
out
adc
jo
xor
xor
mov
test
add
hlt
sub
ins
jp
mov
js
(bad)
mov
jl
fdivr
dec
in
out
imul
sar
mov
test
sbb
mov
call
xchg
sub
jecxz
add
js
popa
iret
sub
test
call
bound
outs
frstor
xchg
shr
sbb
cwde
je
aas
(bad)
(bad)
push
or
mov
scas
dec
sub
shr
dec
lods
jne
adc
popa
outs
dec
fst
iret
inc
fimul
ss
aam
fsqrt
or
and
pop
xor
scas
push
adc
cmps
cs
btr
and
push
sub
xchg
test
icebp
or
cld
jl
dec
cs
mov
sub
aas
or
into
(bad)
outs
add
xor
aas
repnz
ret
add
mov
cmp
mov
mov
(bad)
clc
jo
fnstcw
daa
sti
cmp
stos
out
(bad)
dec
enter
cli
mov
jg
mov
test
inc
call
retf
mov
cwde
frstor
jnp
pop
push
cdq
add
or
mov
or
clc
xor
add
sbb
sub
or
push
or
adc
loope
sbb
sub
outs
mov
mov
cmp
mov
fwait
cwde
clc
and
jo
js
push
fisub
rol
cli
fmul
pop
push
push
mov
icebp
lds
mov
jl
enter
push
ins
jnp
shr
jnp
out
enter
dec
out
lds
push
push
in
pop
or
scas
mov
das
test
sar
enter
scas
xor
sbb
je
(bad)
jmp
enter
lods
sub
push
pop
pop
add
pop
aad
clc
xor
stos
mov
mov
and
movd
call
xchg
mul
push
mov
scas
pop
mov
int3
push
fmul
test
aas
fst
fimul
sub
or
xchg
ss
int3
jnp
imul
dec
inc
inc
nop
pop
push
mov
test
in
test
(bad)
jb
popf
retf
pop
sbb
push
cmp
inc
or
or
dec
mov
mov
add
inc
(bad)
jmp
mov
ins
cdq
fcomp
int3
repz
cmps
sub
adc
fwait
cmps
dec
push
loopne
add
xor
and
(bad)
das
arpl
and
jns
sbb
pop
enter
loope
or
test
repnz
in
pop
js
mov
ins
pushf
push
sub
or
jne
mov
call
mov
or
add
outs
test
ds
push
inc
sbb
pushf
idiv
sar
ss
ret
pop
xchg
mov
stc
test
cmps
cmp
repz
pushf
call
adc
push
int3
mov
xchg
ret
test
mov
mov
je
dec
clc
xchg
enter
bound
and
test
and
sti
sbb
mov
adc
test
cmps
mov
rcl
scas
dec
xor
xor
call
add
or
dec
and
mov
push
cdq
xor
(bad)
xor
ds
push
mov
repz
pushf
loop
mov
pop
ret
nop
xchg
lea
call
(bad)
sbb
push
mov
cmp
je
adc
xchg
sub
pop
cwde
daa
dec
fimul
loopne
fcom
fldenv
imul
mov
jno
stc
sbb
pop
xchg
cs
sub
fsub
cwde
pop
mov
dec
xor
pop
jae
mov
mov
cli
das
loope
lock
imul
mov
push
test
cmc
outs
dec
nop
sbb
loopne
sbb
mov
add
in
in
cmp
dec
sbb
push
js
data16
and
imul
icebp
addr16
inc
test
pop
scas
scas
xor
jno
adc
jmp
(bad)
jecxz
sbb
mov
jb
fistp
xchg
pop
mov
jmp
pop
sub
pop
push
jmp
js
nop
ret
mov
popf
jmp
fmul
ret
cs
mov
xchg
ficomp
fcomp
scas
jmp
adc
inc
pop
pop
icebp
retf
aaa
and
clc
mov
loope
push
sti
retf
sbb
jp
sti
inc
cwde
and
imul
sub
enter
mov
or
cmp
xor
js
jne
cmp
shl
add
out
or
imul
mov
movs
sbb
inc
mov
data16
call
adc
ror
pop
sub
inc
inc
jne
js
sub
push
frstor
imul
mov
test
pop
or
cmp
popf
xor
mov
inc
sbb
mov
sub
cmp
icebp
cdq
dec
loopne
or
nop
sub
icebp
or
cmp
mov
jnp
push
and
adc
pop
dec
and
leave
jo
fdivr
jnp
inc
mov
jns
or
rcl
push
inc
push
mov
sub
fist
and
loope
mov
xchg
push
pop
push
mov
in
push
or
bound
retf
inc
aas
lahf
in
es
sbb
or
push
or
lock
cld
fs
add
icebp
aad
repz
retf
sbb
in
int
jmp
loopne
or
dec
test
idiv
fwait
div
(bad)
mov
xor
cmp
xchg
in
jno
jnp
jle
add
aaa
xchg
out
dec
enter
add
pop
rep
or
out
test
mov
mov
add
inc
into
lock
push
test
sbb
add
not
lods
(bad)
shr
pop
cwde
pop
xor
xor
pop
sbb
or
or
adc
adc
or
mov
pop
cmc
in
out
jp
clc
cmp
test
in
jmp
mov
dec
hlt
call
inc
cmp
gs
sti
pop
sbb
clc
or
dec
mov
fadd
outs
sub
push
dec
or
or
ins
cdq
std
cwde
jg
ror
sbb
jl
aas
and
push
cli
sub
out
mov
pop
and
sub
pop
mov
stos
hlt
test
scas
jns
enter
leave
shl
mov
cmp
jmp
(bad)
fwait
push
mov
nop
mov
or
pop
pop
in
inc
repnz
cmc
or
or
jae
sub
sub
les
pop
hlt
or
std
hlt
jmp
sub
xchg
and
fidiv
pop
push
mov
(bad)
je
in
sub
jl
fistp
mov
jbe
rcr
ins
nop
daa
sub
or
sbb
leave
fisub
mov
leave
sbb
in
jle
sbb
cmp
push
es
mov
cmp
push
test
push
fsubr
add
jge
mov
fcom
sahf
lods
call
cmp
jg
jecxz
jns
sub
sti
add
adc
dec
add
push
lds
test
in
js
push
xor
or
test
or
mov
fwait
jns
mov
fbstp
in
mov
sbb
mov
cmp
sti
sub
adc
adc
xchg
ja
mov
rol
pop
or
add
int
cmp
cmp
add
sbb
in
and
inc
std
xchg
imul
push
imul
cs
mov
mov
push
jnp
test
ds
push
jl
pop
mov
mov
dec
mov
in
dec
sub
lea
push
ins
dec
add
test
fdivr
and
fsubr
xchg
leave
push
inc
inc
cmp
add
sub
jge
cmp
sbb
loop
rol
std
mov
xchg
adc
cmp
sti
push
xchg
adc
jp
jnp
(bad)
sbb
inc
push
inc
and
sub
in
or
jle
and
inc
mov
test
xchg
(bad)
stc
scas
sbb
and
add
dec
xchg
mov
jmp
clc
sar
xor
sub
ret
xor
into
sbb
fiadd
shl
jg
jp
dec
mov
adc
enter
or
test
fidiv
pop
xor
inc
fdivr
call
pop
ret
ret
sub
aam
adc
sub
jae
mov
nop
fsubr
fcom
xor
add
or
fadd
cli
sub
jns
sbb
(bad)
cs
mov
sbb
movs
push
xor
aam
xor
int3
cmp
mov
cmps
repnz
test
inc
fwait
imul
sbb
fld
add
add
fnstcw
xor
(bad)
adc
mov
and
push
cmp
(bad)
pop
cmp
(bad)
xchg
add
cwde
popf
jge
fstp
push
jns
adc
cmps
call
(bad)
loope
fnstsw
sub
jnp
sub
mov
iret
pop
hlt
in
jne
sbb
ret
je
scas
fimul
or
data16
(bad)
push
mov
push
pop
mov
loopne
dec
push
or
jb
mov
pop
dec
jmp
cmp
or
das
pop
fimul
and
outs
jle
fcmovnbe
fdivr
add
cmp
fist
sbb
leave
or
or
mov
fwait
fs
xchg
lock
pop
add
sbb
mov
jo
mov
push
mov
ins
aam
mov
and
loope
imul
push
push
in
pop
pushf
add
(bad)
outs
dec
fadd
adc
sbb
pop
sbb
mov
dec
inc
pop
(bad)
mov
pop
loope
mov
or
jns
mov
test
rcr
mov
pop
ins
adc
iret
aas
enter
and
mov
or
sub
cmp
test
mov
xor
call
call
iret
ins
enter
sub
loope
and
xlat
jecxz
sar
cmp
out
jae
mov
test
push
jmp
ss
or
test
inc
jge
out
std
enter
ss
mov
jmp
int
cmp
cmp
ins
stc
jns
adc
mov
mov
je
sbb
or
cli
mov
mov
repz
sub
mov
dec
fsub
or
fsub
addr16
in
and
mov
inc
xchg
fwait
add
(bad)
shl
push
cmp
jo
push
push
sbb
adc
dec
fs
cmp
inc
enter
jnp
movs
cmp
jmp
imul
add
mov
fs
cmp
lahf
test
or
push
inc
fcomp
xchg
sar
pop
adc
in
test
mov
cmps
outs
cwde
add
xlat
jmp
clc
leave
(bad)
inc
add
out
call
mov
mov
call
sub
fs
push
mov
adc
jecxz
fild
and
addr16
dec
push
cmc
add
jmp
jae
push
mov
pop
dec
xchg
push
fs
mov
fsubr
sbb
inc
jle
add
mov
rcr
jmp
mov
push
sbb
retf
cwde
adc
cs
mov
cdq
jp
clc
(bad)
lock
dec
sahf
adc
sub
lock
rcr
imul
cmp
pushf
pushf
out
push
and
lahf
sbb
adc
mov
mov
pop
fs
xor
nop
push
pop
ins
popf
xchg
adc
test
cmps
fmul
adc
nop
push
pop
test
stos
test
mov
cmp
movs
cmp
mov
gs
pop
shl
push
or
sub
pop
or
add
xlat
loopne
js
mov
test
mov
(bad)
imul
add
xchg
adc
and
push
nop
or
cmp
imul
push
out
gs
mov
mov
dec
lods
jne
sbb
cmp
cmp
imul
(bad)
cdq
push
test
aam
jo
sbb
fimul
stos
scas
dec
add
or
pop
push
pop
(bad)
retf
pusha
jmp
xchg
movs
test
jne
nop
pop
push
enter
pop
cmp
stc
adc
adc
jecxz
fwait
dec
ret
lock
(bad)
fld
scas
movs
inc
cmp
xchg
lea
or
into
(bad)
call
push
jmp
mov
jns
mov
add
dec
pop
nop
fldcw
scas
push
popa
inc
mov
pop
mov
cmp
into
xchg
xor
sbb
push
add
inc
bound
mov
fisubr
loopne
adc
push
dec
jge
jmp
lock
xchg
je
mov
jmp
test
sub
shl
(bad)
push
push
pushf
sbb
mov
shl
xor
push
sbb
jmp
sbb
xchg
jge
je
jb
sub
enter
movs
test
int3
bound
sbb
adc
xchg
movs
out
in
xor
xchg
fldcw
in
jns
jnp
sti
xor
enter
call
sti
jb
fwait
mov
lods
sub
sbb
leave
sar
sbb
test
cmc
sub
jnp
inc
inc
imul
call
jp
shl
xor
les
sti
inc
sub
fistp
xchg
push
stos
pop
sub
icebp
pop
pop
xor
cwde
pop
dec
shl
jns
rcl
push
sub
or
outs
call
add
xlat
in
(bad)
outs
inc
mov
ja
push
cmp
push
jno
adc
and
inc
pop
loopne
mov
adc
pop
ror
dec
lock
inc
cdq
fwait
dec
dec
bound
sbb
call
pop
cmovs
xor
stos
lods
je
enter
jge
fstp
movs
ins
inc
mov
clc
cli
daa
dec
mov
and
jp
fldcw
dec
mov
movs
sub
mov
outs
loop
mov
xor
loopne
leave
call
jmp
jmp
sub
cs
sub
push
loope
sub
imul
ins
(bad)
jo
cmps
out
and
cdq
xor
ins
scas
repz
pop
popf
cmp
dec
sub
or
pushf
inc
scas
scas
jnp
daa
push
push
jle
aaa
fcomp
xchg
mov
stc
data16
push
fld
sub
jp
ds
test
xchg
imul
lock
mov
xchg
xor
sub
fsubr
dec
cmp
adc
pop
out
sbb
add
movs
fwait
sub
mov
and
pop
stos
pusha
pop
sub
inc
test
ret
outs
adc
dec
sti
sub
jmp
cmps
mov
pushf
or
sbb
mov
adc
and
inc
int3
mov
int
or
scas
dec
int3
fnstcw
adc
lods
leave
inc
fdivr
lahf
pop
mov
push
ret
sbb
mov
iret
adc
cwde
or
or
xchg
jge
xor
sbb
pop
scas
fcomp
mov
mov
test
cdq
int3
xchg
sahf
dec
into
ins
fdivr
rcr
(bad)
jae
cmp
test
add
pop
and
jae
or
repz
shr
xor
les
cmp
daa
mov
jp
out
pop
sub
cmps
or
cmp
sub
and
les
loopne
loope
dec
add
sbb
sbb
repz
cmps
xor
mov
dec
out
inc
mov
in
sbb
hlt
or
dec
out
mov
retf
pop
call
adc
mov
into
pop
jle
iret
and
mov
sub
sbb
fisttp
in
dec
popf
loopne
inc
stos
push
imul
bound
outs
xchg
dec
push
fdiv
pop
pusha
inc
cmp
bound
jl
jbe
out
leave
dec
xor
push
and
jmp
inc
push
dec
dec
std
push
inc
add
imul
ret
rcr
(bad)
xor
xlat
mov
pop
jle
fadd
pop
movs
cdq
(bad)
loope
in
adc
scas
pop
sub
jb
movs
cmps
mov
gs
fdiv
dec
in
mov
dec
aam
push
call
sub
jle
retf
add
push
out
imul
into
loope
add
or
stos
xlat
ret
pop
sbb
clc
fsubr
sbb
pusha
sub
outs
push
leave
outs
stos
loop
adc
and
and
movs
dec
sub
inc
outs
sub
cmp
add
mov
sub
adc
or
xchg
or
inc
xchg
mov
mov
jmp
push
cmp
es
inc
xchg
gs
sub
push
sahf
cmp
push
hlt
jecxz
js
clc
outs
dec
in
into
pusha
jmp
sbb
pop
mov
xor
mov
mov
sti
xchg
jmp
mov
cmp
jmp
jl
vsubsd
das
push
xor
and
cmp
jle
(bad)
cmp
add
pop
or
lea
out
push
or
or
fs
mov
mov
mov
imul
push
mov
pop
sti
sub
mov
push
dec
lock
(bad)
sub
mov
cmp
ret
dec
or
sbb
mov
and
mov
pop
adc
clc
sub
mov
gs
clc
xchg
stc
sbb
imul
sbb
lock
adc
mov
dec
sub
sbb
push
retf
or
int3
adc
aas
leave
or
cwde
dec
popf
mov
sbb
or
mov
and
in
or
nop
repz
inc
iret
scas
jo
(bad)
into
shl
and
(bad)
sub
jge
idiv
lea
dec
das
mov
xchg
sbb
sbb
pop
mov
iret
ja
cmps
pop
jns
cmp
sbb
cdq
fnstsw
and
inc
jns
jle
sub
pop
out
push
dec
aaa
cdq
sub
outs
mov
imul
sbb
cmps
fcomp
clc
or
mul
and
leave
cdq
in
mov
arpl
js
stos
dec
hlt
mov
jmp
sbb
enter
sub
dec
mov
xlat
out
or
cdq
cli
inc
pop
cwde
leave
xchg
cdq
inc
add
jl
scas
lds
jns
outs
ja
pop
fstp
mov
xchg
imul
out
xor
sub
cmp
adc
xchg
jns
test
mov
push
es
xchg
sub
jnp
loop
cmp
outs
cmps
fisub
cmps
pop
mov
dec
push
xor
cmp
(bad)
leave
add
or
lock
dec
xchg
xchg
nop
call
push
adc
pop
aad
push
outs
sub
cmp
and
sub
into
sub
mov
mov
xchg
inc
cmp
rcl
ret
ds
dec
sub
add
or
mov
mov
dec
jp
dec
push
and
cld
or
or
xchg
cli
dec
(bad)
ss
inc
arpl
pusha
push
push
out
dec
or
cdq
sbb
mov
dec
push
xor
in
xchg
mov
lock
sbb
adc
jge
(bad)
jo
cmp
pop
mov
sub
stc
pusha
sub
popf
jmp
sbb
xor
sbb
rcl
int3
sub
push
add
dec
jmp
iret
(bad)
in
mov
fst
aad
jmp
push
lock
add
lods
push
ror
push
hlt
call
imul
ja
shr
xor
repnz
push
dec
mov
out
cmp
pop
mov
mov
jne
adc
ins
xchg
daa
jmp
stos
daa
jo
fbstp
or
bound
cdq
pop
xor
scas
or
call
cs
xor
fsub
test
jbe
out
neg
cmp
iret
dec
adc
fsub
sub
or
mov
mov
cmp
push
popf
dec
xchg
out
mov
mov
cdq
call
pop
enter
leave
in
pop
imul
sbb
add
nop
fisttp
outs
call
add
push
push
add
add
sub
dec
push
pop
sub
ret
js
lahf
push
mov
mov
cmp
sbb
bound
xlat
fabs
cmp
sar
test
mov
lods
inc
and
xlat
jne
das
push
jmp
sbb
mov
jge
and
call
jo
fisttp
push
inc
fmul
cmp
xchg
imul
pushf
ror
xor
mov
or
iret
push
xor
mov
push
rol
add
scas
mov
adc
push
stc
push
and
jo
mov
daa
mov
dec
xchg
or
ret
pop
std
cmp
add
xor
mov
test
dec
into
sbb
popa
(bad)
mov
test
or
sbb
int3
sar
mov
mov
dec
adc
in
mov
mov
xchg
lds
lods
cmp
call
ror
imul
aaa
test
lahf
std
sti
test
mov
cmp
mov
out
inc
jne
repz
mov
jmp
repz
fimul
(bad)
mov
out
jl
fstp
pop
push
jmp
mov
fimul
mov
enter
push
inc
in
sti
clc
cmp
or
fdivr
test
jo
loopne
inc
sbb
mov
cmp
sbb
jns
(bad)
xor
les
sub
cmp
pop
sub
sbb
fsubr
cmp
xchg
xchg
or
lock
sub
call
sbb
and
dec
cmc
mov
enter
push
mov
hlt
out
adc
scas
sbb
cs
push
jmp
sub
or
bound
push
and
je
les
sbb
call
mov
and
xchg
push
mov
fs
sub
dec
dec
push
mov
xor
mov
adc
nop
sbb
imul
pop
ror
and
pop
in
xchg
xchg
dec
push
stos
push
mov
pusha
lds
out
test
int3
bound
pop
or
sub
push
jl
fiadd
sub
mov
push
cmp
das
mov
fisubr
or
xor
test
(bad)
out
push
js
push
int
push
ins
cmp
xchg
jmp
jmp
sub
js
loope
sbb
rcr
clc
sub
js
sub
mov
int3
cmp
fnstcw
mov
jo
fld
and
enter
outs
scas
fldenv
mov
dec
adc
lock
inc
pop
cmc
add
and
sub
jnp
push
mov
sbb
cmps
sbb
lods
and
mov
xchg
fistp
jle
aad
mov
pusha
pushf
mov
inc
int3
je
and
dec
bts
jmp
inc
dec
cmp
adc
and
lock
lods
in
call
sti
sbb
cmps
rcl
(bad)
out
cmp
sti
lea
jp
inc
xor
push
js
push
ss
loopne
clc
or
inc
mov
lock
jno
bound
mov
mov
mov
out
mov
cmp
popf
cwde
movs
and
jns
dec
cmp
pop
ins
mov
shl
mov
(bad)
cmp
and
mov
out
sub
int
mov
cwde
sar
test
das
mov
(bad)
pextrw
cmp
rol
(bad)
or
and
movs
pop
sub
loop
jo
mov
test
add
fcmovne
inc
outs
retf
inc
add
(bad)
mov
es
mov
mov
jmp
enter
in
fstp
or
sti
xchg
pop
mov
sub
mov
adc
push
in
xchg
fidivr
xchg
bound
push
shr
fbstp
dec
xchg
xor
pop
or
push
pop
sub
add
dec
outs
or
xchg
cdq
or
or
call
pop
cmp
mov
call
outs
pusha
sbb
shr
adc
push
pop
call
jmp
mov
out
(bad)
aad
cmp
lods
(bad)
aas
or
and
mov
jecxz
cli
add
call
call
scas
rcr
sahf
inc
push
fbstp
mov
js
sub
(bad)
cli
mov
pushf
and
sbb
lahf
inc
or
mov
js
jae
mov
movs
scas
int
cwde
sub
sbb
mov
mov
int
in
mov
pop
test
movs
icebp
or
cmp
imul
std
cs
std
iret
loope
push
mov
test
jle
mov
mov
mov
sbb
push
or
retf
retf
xor
call
xor
dec
xchg
add
sub
sub
popf
sbb
or
xor
(bad)
xor
jae
test
mov
dec
mov
into
push
or
mov
(bad)
out
or
jb
gs
inc
xchg
ret
shl
int
push
cmps
xlat
cmp
ficom
cli
sub
mov
fisttp
or
or
call
add
aas
repnz
mov
fnstcw
and
retf
xor
adc
stc
adc
leave
or
dec
std
and
push
cs
clc
fs
and
retf
repnz
push
ficomp
movs
mov
cmp
fmul
daa
push
sbb
scas
and
sbb
and
inc
xchg
(bad)
pop
and
add
cwde
js
test
mov
ds
xor
dec
out
ins
cmp
cs
lods
xchg
movs
jnp
sub
push
mov
sar
stos
or
xlat
retf
jo
retf
inc
jl
jg
fimul
xchg
or
pop
or
fsub
(bad)
mov
xchg
stc
and
test
dec
mov
call
test
mov
dec
stc
push
sbb
add
sahf
mov
in
push
and
dec
stos
xchg
jmp
sbb
push
pusha
xchg
and
sub
idiv
mov
stc
dec
das
sub
push
adc
movs
cwde
js
call
outs
es
imul
(bad)
loopne
mov
ret
hlt
pop
cwde
fisub
xchg
mov
fidiv
mov
jno
fisttp
mov
aaa
adc
fucompp
std
inc
(bad)
sbb
fsub
loop
es
cmp
stos
sahf
fnstsw
pusha
jge
jecxz
pop
pop
int3
fsubr
call
jge
xor
or
cwde
xchg
dec
xor
test
jne
enter
ret
stc
add
imul
shl
xchg
std
add
fwait
aas
sbb
out
xor
mov
les
popa
xchg
gs
push
sub
cwde
outs
or
test
sbb
in
push
and
hlt
mov
cwde
fsubr
cdq
cmps
(bad)
test
rcr
lds
cli
stc
or
ja
daa
mov
inc
lahf
aas
(bad)
push
popf
test
test
scas
stos
push
push
stc
sub
cmp
(bad)
daa
jns
xadd
cmp
rol
inc
or
inc
push
mov
fdivr
xlat
cs
ret
call
mov
sbb
(bad)
dec
enter
dec
imul
sub
xlat
cli
pop
jp
cmp
lods
repnz
retf
jns
sbb
jmp
cmp
enter
jmp
loope
enter
rcr
mov
sub
xor
mov
mov
mov
dec
dec
push
mov
push
cmp
mov
sub
pop
hlt
jo
sub
aad
fcom
sbb
sub
xchg
dec
pop
dec
pop
sub
sub
movs
jmp
mov
dec
cmp
or
cwde
xor
js
adc
and
leave
test
(bad)
clc
loop
jecxz
(bad)
or
call
mov
push
push
ins
cmps
xchg
push
stos
mov
mov
and
sub
jnp
movs
jecxz
mov
repz
mov
sbb
hlt
sub
cmp
cmp
mov
enter
cwde
in
loope
mov
xor
rcl
sbb
repnz
push
mov
mov
scas
imul
sahf
iret
fsubr
stos
in
cmp
rol
jo
ss
cwde
sbb
fiadd
sar
push
xchg
(bad)
sbb
inc
in
idiv
dec
fldcw
adc
out
dec
in
call
sar
lods
sub
test
adc
cwde
test
mov
pushf
(bad)
cmp
push
cdq
fstp
adc
sub
(bad)
stc
adc
jge
mov
jns
cmp
inc
aas
dec
xor
(bad)
sbb
mov
add
pop
fcmovb
enter
(bad)
push
shl
mov
ja
leave
cmp
fisubr
sbb
mov
mov
ret
jnp
int3
or
js
mov
jge
dec
xchg
mov
pusha
call
es
sub
jo
pop
loopne
adc
pop
cld
push
dec
sub
aas
or
adc
push
or
sub
call
data16
or
aaa
push
mov
mov
es
fwait
sti
xchg
cli
mov
adc
xchg
loop
jbe
fwait
cwde
mov
mov
in
add
sbb
mov
add
(bad)
pop
sbb
sub
mov
cmp
dec
jl
retf
or
cli
hlt
or
mov
sub
ins
rcl
js
mov
fldcw
or
outs
les
aas
or
xchg
clc
push
dec
fwait
rcr
dec
in
lds
(bad)
or
and
fmul
jne
jecxz
mov
dec
adc
dec
jle
pop
pop
cdq
cmps
test
push
out
in
sbb
pop
cwde
add
movs
iret
xor
jns
pop
loope
dec
adc
dec
stos
ins
lea
push
(bad)
call
cmp
xor
jo
fcomp
fisub
add
pushw
mov
iret
mov
inc
mov
js
jns
js
into
push
pop
sub
shr
sbb
push
lods
sbb
inc
sub
xchg
dec
jnp
xchg
fcmovu
test
not
sub
sub
popa
or
repnz
(bad)
repz
movs
loopne
mov
pop
push
add
(bad)
loop
std
push
repnz
dec
shl
data16
or
add
sahf
test
cld
sbb
sar
ror
retf
or
lds
cli
push
mov
jns
(bad)
sbb
xor
not
inc
jmp
jns
into
sub
cmp
or
jae
dec
(bad)
pop
lahf
cdq
mov
mov
leave
leave
adc
lods
popf
iret
repnz
pop
jmp
mov
(bad)
cwde
dec
mov
fistp
inc
mov
imul
fcom
dec
fsubr
fmul
jp
push
cmp
cmp
pop
js
loopne
jmp
inc
cmp
retf
es
clc
xor
mov
or
into
xlat
fs
shr
loop
jno
mov
imul
xor
cmp
jb
fadd
imul
stos
mov
mov
mov
popf
stos
xchg
dec
xor
pop
arpl
call
test
jnp
int
pop
enter
push
mov
push
fwait
xchg
push
dec
xor
loopne
loopne
or
stos
or
jl
mov
xchg
push
stos
daa
call
test
mov
mov
and
and
retf
inc
mov
adc
addr16
sub
push
cmps
push
inc
test
adc
mov
add
pop
lods
lock
pop
cli
retf
xor
clc
shl
and
(bad)
loopne
sbb
js
mov
icebp
inc
nop
sub
xchg
push
mov
xlat
sbb
call
cmps
xchg
(bad)
cwde
in
sbb
nop
cmps
inc
xchg
xchg
push
lea
into
fdivr
enter
mov
cs
and
addr16
imul
cwde
mov
push
ins
mov
int3
enter
pop
dec
sbb
cmp
(bad)
ins
pop
ret
fnsave
test
mov
sbb
push
add
mov
pop
aaa
inc
push
outs
sub
repnz
ja
(bad)
mov
daa
xchg
sub
leave
test
mov
mov
or
enter
push
mov
mov
les
call
push
stos
xchg
sbb
push
fcom
cmp
int3
jmp
push
mov
and
pushf
or
and
cmp
es
leave
scas
add
jbe
push
xchg
sub
imul
jns
mov
mov
pop
std
and
dec
or
jmp
movs
movs
mov
pop
ins
push
cmp
pop
stc
(bad)
aad
int3
add
sbb
adc
inc
push
rol
cwde
outs
sbb
dec
pop
ja
ror
outs
pop
add
xchg
sub
mov
jg
mov
and
sub
bnd
jb
in
out
push
dec
fucompp
cmp
dec
mov
mov
dec
cmp
lea
(bad)
shr
cmp
call
mov
test
mov
or
jmp
iret
clc
adc
xor
add
dec
and
scas
push
mov
imul
dec
pusha
inc
inc
retf
(bad)
out
sub
mov
cli
xor
push
in
jne
jmp
pop
popa
(bad)
jge
pop
sbb
ins
sub
(bad)
cmp
push
mov
data16
stc
sahf
cmova
cmps
ins
add
push
push
cmp
outs
or
mov
sti
mov
je
(bad)
adc
pop
jp
cli
mov
fimul
sbb
inc
fcmovne
call
pop
add
nop
das
cwde
dec
add
in
fmul
pop
enter
cmp
mov
fisttp
jae
add
inc
xchg
call
pop
jb
fcmovbe
jge
pop
inc
jmp
pop
xchg
out
popf
pop
cli
retf
mov
dec
push
jnp
repnz
pop
mov
sub
ja
fiadd
cld
rcl
enter
fldenv
and
shr
clc
jbe
sbb
adc
jg
fdivr
out
cmp
xchg
add
inc
push
das
mov
dec
movs
jge
ds
lods
mov
cdq
ret
and
(bad)
sbb
ins
ror
js
inc
in
xor
mov
cmp
jb
inc
out
jg
shl
mov
dec
xchg
jp
outs
or
jle
out
shl
adc
stc
test
mov
ret
bound
retf
retf
sub
shl
es
add
adc
push
jns
aas
xlat
cmp
ret
xchg
lods
mov
pop
div
cmc
xor
test
std
mov
pop
outs
lea
fdivr
movs
sub
clc
loop
loopne
es
mov
dec
cmp
cmp
call
test
out
mov
sub
cld
sbb
pop
jg
push
sub
jmp
enter
arpl
test
in
cmp
push
test
and
enter
mov
into
pop
in
cli
mov
enter
mov
sub
test
jmp
dec
inc
(bad)
rol
stos
aas
mov
retf
mov
mov
lds
iret
ins
push
popa
mov
in
cwde
dec
or
or
push
das
lds
mov
xchg
cmp
call
pop
test
mov
jns
jns
imul
scas
cmps
sub
ja
dec
dec
dec
retf
pop
inc
daa
fmul
or
fwait
mov
xchg
mov
push
mov
jge
adc
push
inc
lock
mov
call
repz
pop
shl
call
push
jns
push
fbstp
nop
dec
dec
add
fucomp
(bad)
mov
pop
cld
jl
xor
pop
(bad)
cmps
or
sti
sbb
cs
cwde
out
push
or
xchg
jmp
push
cs
xor
add
fxch
or
cmp
sbb
jae
outs
push
pop
pop
retf
jmp
xor
xchg
sub
or
fdivr
cmp
sub
(bad)
sti
jb
mov
inc
dec
sub
lods
xlat
jge
stos
pop
and
frstor
xchg
pushf
mov
imul
bound
or
jp
stc
fs
rol
cmp
sub
mov
cwde
push
xor
retf
push
add
dec
inc
sub
mov
jmp
inc
fist
out
and
xor
inc
jmp
sub
movs
int3
mov
sub
outs
lds
call
or
mov
test
cmp
add
rcr
jno
jo
in
push
lea
xchg
clc
add
sub
hlt
push
fimul
cmp
(bad)
movs
adc
pop
lahf
fmul
cmp
mov
shl
and
ficomp
mov
cdq
xor
rcr
sub
in
cmp
fist
(bad)
add
js
inc
cmps
or
mov
std
aaa
icebp
mov
dec
cmp
jnp
sbb
retf
mov
cli
in
data16
sbb
shr
dec
jge
aas
popf
dec
jecxz
mov
fwait
(bad)
stc
sub
cdq
sbb
push
outs
fsub
aad
dec
and
xor
pop
xchg
mov
(bad)
mov
outs
pop
and
cdq
cs
movs
xor
xor
mov
sub
or
daa
cli
cmp
ficomp
test
call
leave
ins
inc
jo
push
in
cwde
xor
clc
mov
fld
pcmpeqd
sbb
cmp
xor
call
pushf
jl
sbb
mov
jnp
mov
std
imul
inc
push
inc
out
xor
(bad)
xchg
fwait
and
cli
dec
jbe
jmp
cmps
lahf
fild
and
aaa
or
lock
retf
popf
scas
mov
in
scas
cmp
cmp
push
jmp
adc
or
sub
cmp
ror
cmp
mov
into
xchg
cmp
jnp
push
pop
dec
xor
mov
cmp
enter
mov
sbb
(bad)
mov
and
add
mov
fldenv
leave
std
aad
adc
cli
or
adc
dec
xchg
fs
out
sti
cmp
xchg
fst
dec
pop
repz
sti
inc
adc
add
js
sbb
clc
or
in
aad
jg
loopne
inc
imul
addr16
or
ds
push
cmps
shr
xor
(bad)
jae
ja
lock
enter
cmp
pop
scas
test
(bad)
inc
(bad)
sbb
mov
sar
cwde
xchg
loopne
jbe
sbb
test
retf
jp
cmc
inc
call
sbb
dec
jmp
sahf
div
adc
test
adc
stc
(bad)
std
jne
leave
dec
fistp
dec
inc
mov
inc
cli
call
pop
scas
hlt
mov
xor
push
out
xchg
(bad)
sub
dec
add
clc
sbb
add
jo
int
arpl
repz
enter
lods
arpl
sub
js
sub
sar
push
int3
pop
ja
cmps
in
cmp
clc
fstp
and
stc
lods
rol
fstp
push
fwait
push
mov
test
or
pop
fsub
pop
sub
push
mov
xlat
mov
lods
fld
mov
inc
shr
or
adc
sar
pop
push
outs
xchg
sub
mov
cmp
outs
in
jne
lds
sbb
aas
icebp
std
mov
adc
fbstp
fsubr
or
mov
inc
les
faddp
jecxz
(bad)
into
adc
ja
and
sub
mov
xchg
and
cmp
setge
jns
dec
sub
pop
add
ins
test
sub
ds
int3
popf
pop
ins
test
rol
push
mov
sub
mov
cmps
(bad)
leave
scas
sbb
movs
(bad)
fwait
add
jmp
sbb
sub
ins
ficomp
dec
or
retf
(bad)
out
out
cli
or
ss
cdq
out
test
(bad)
xlat
setbe
cli
fcmovnu
loope
pop
dec
cmp
popf
leave
aaa
mov
sbb
shr
pop
js
xchg
or
retf
idiv
call
push
out
fsub
in
clc
shr
add
push
ror
dec
fdivrp
enter
enter
sub
sub
cli
sub
stos
mov
pop
in
test
aad
adc
push
mov
or
fcom
xchg
jl
sahf
mov
mov
or
dec
xchg
dec
enter
push
xor
pop
test
mov
(bad)
cmp
push
push
add
pop
scas
xchg
cmp
push
cmp
sub
in
test
dec
cs
sub
dec
ss
call
cmp
movs
push
fadd
pop
cdq
rcl
sub
(bad)
jmp
dec
aad
test
cs
test
je
movs
xor
icebp
push
push
stos
mov
ds
dec
in
jl
pop
inc
enter
mov
cmp
xchg
lock
nop
jmp
(bad)
fnstcw
jmp
lods
dec
std
xchg
xchg
dec
mov
es
popf
dec
call
mov
push
fstp
add
cmp
stc
adc
mov
sub
nop
fmul
retf
outs
pop
or
in
fimul
dec
clc
push
enter
mov
fimul
cld
jnp
pop
xchg
inc
add
inc
mov
retf
jns
add
test
rcr
sub
leave
mov
inc
xchg
mov
scas
push
cli
stc
dec
push
lods
mov
dec
mov
fadd
mov
xchg
sub
inc
jmp
jl
cdq
mov
lods
scas
cwde
push
js
mov
mov
xchg
cmp
clc
pop
inc
test
popf
clc
shl
ins
(bad)
sbb
adc
add
fidiv
lock
cmps
pop
stc
std
fwait
mov
fadd
add
(bad)
cmp
mov
jmp
cli
fcomp
dec
aaa
je
mov
mov
lock
mov
mov
adc
fsubr
out
frstpm(287
stc
cmp
xchg
cmp
cmps
dec
es
or
shr
sub
fstp
jno
mov
or
fadd
mov
ret
push
clc
mov
rcl
scas
mov
inc
out
push
cwde
xchg
xor
jae
sub
ret
mov
jmp
in
enter
jg
push
das
inc
(bad)
call
cwde
ja
adc
(bad)
shl
adc
jae
(bad)
xlat
mov
(bad)
ret
dec
retf
ja
cli
cwde
stos
jmp
adc
add
pop
clc
stc
pop
sar
ret
int
or
loop
cwde
imul
xchg
test
sub
test
enter
xchg
imul
push
shr
sbb
mov
repnz
and
push
(bad)
push
xchg
call
cdq
push
into
test
fisub
stos
iret
(bad)
lea
hlt
cmp
mov
bound
sub
mov
or
adc
mov
adc
lock
push
call
jmp
pop
pop
jbe
jmp
push
(bad)
xchg
mov
mov
mov
dec
retf
mov
sbb
enter
xor
fld
mov
aad
bound
push
xor
fimul
rol
mov
add
lahf
push
dec
dec
call
dec
out
dec
imul
nop
sbb
and
sub
clc
xlat
jns
xchg
xor
mov
xchg
rol
jmp
verr
pop
js
and
das
sbb
lock
int
xor
mov
sbb
lods
das
push
retf
call
jle
sbb
adc
mov
out
icebp
cmp
stos
pusha
dec
mov
push
jp
mov
ss
sub
or
fiadd
mov
xor
js
pop
pop
mov
data16
mov
sar
or
ficomp
les
imul
lods
outs
mov
mov
shr
pushf
stos
(bad)
lahf
dec
clc
cmp
pop
aad
test
jns
lods
push
cmp
fs
jmp
mov
mov
jecxz
fnsave
(bad)
mov
sbb
jg
adc
out
out
stos
loop
cwde
pop
mov
pop
ror
idiv
inc
pop
sbb
dec
ret
dec
fldenv
sti
fidivr
(bad)
push
mov
cmp
and
retf
sbb
pop
out
xor
cmp
js
pop
mov
out
or
ins
xchg
and
jnp
inc
ret
clc
pop
test
bound
push
adc
popf
lahf
in
fdivr
sbb
ficomp
and
shl
test
push
push
shl
movs
dec
push
(bad)
push
in
mov
in
jp
mov
sbb
icebp
dec
fsubr
sbb
sub
add
hlt
repz
cdq
cmp
retf
fmul
out
pop
pusha
dec
outs
or
inc
je
sub
dec
jmp
pop
or
xchg
mov
fadd
stos
mov
data16
sbb
call
repz
cmps
fnstcw
pop
sar
mov
dec
mov
call
and
mov
or
(bad)
sahf
repz
iret
call
aaa
mov
mov
and
pop
sub
(bad)
lock
or
mov
stos
nop
jle
mov
cmps
push
push
inc
adc
dec
sbb
js
cmp
enter
or
mov
sbb
mov
enter
fsub
adc
inc
out
out
cmp
mov
inc
pusha
mov
fwait
xlat
test
jp
sahf
mov
hlt
cld
fwait
mov
mov
mov
lods
mov
sub
fmul
cmp
cmp
mov
adc
and
pop
int
mov
inc
(bad)
psubb
mov
sbb
dec
mov
xchg
lea
ja
in
push
imul
pusha
ins
and
cwde
push
arpl
sub
xlat
jmp
inc
aas
dec
test
pop
retf
lods
cli
int3
inc
jecxz
add
aad
or
inc
dec
enter
mov
out
sahf
jl
(bad)
mov
sbb
imul
test
data16
repnz
mov
repnz
fs
adc
xchg
movs
inc
cs
stos
push
je
add
dec
out
add
jle
rol
retf
mov
adc
cmp
sbb
icebp
adc
outs
in
mov
fist
mov
jns
cmp
jmp
push
aam
int3
jnp
push
mov
mov
or
clc
add
mov
sar
call
cli
mov
popf
mov
vpcomd
sub
push
or
clc
repz
pop
cmp
dec
dec
inc
fisubr
or
dec
cwde
(bad)
sub
push
or
sub
(bad)
cmp
mov
test
dec
adc
js
mov
jmp
sbb
stc
clc
mov
or
dec
mov
iret
dec
fs
lods
jne
call
inc
stos
loopne
and
nop
pop
gs
mov
cwde
popf
cmc
sbb
xlat
and
ss
xchg
mov
cmp
mov
xor
jne
and
ja
cwde
enter
cmp
cmp
inc
jmp
sbb
js
or
mov
dec
(bad)
enter
sub
mov
enter
nop
fcom
(bad)
push
adc
mov
data16
std
or
push
inc
es
and
push
push
movs
loop
sub
cmp
mov
mov
clc
push
cmp
(bad)
sbb
pushf
jno
ins
outs
shl
mov
daa
fidivr
leave
jbe
sbb
sub
mov
popf
xchg
cmp
scas
pop
jae
sti
mov
clc
inc
jl
mov
cmp
add
aas
pop
jl
pop
mov
movs
pop
test
jmp
adc
jmp
inc
cmc
push
pop
jle
sub
sub
sti
out
or
pop
push
add
or
enter
jmp
mov
stos
out
mov
mov
or
adc
cmp
mov
mov
jo
retf
pop
repnz
push
jle
sbb
cmp
mov
cmp
call
clc
call
dec
shl
cli
mov
or
inc
call
or
(bad)
sar
sub
pop
out
ror
sti
(bad)
cmp
jecxz
imul
adc
cwde
pop
sbb
or
push
rcr
cdq
sbb
fstp
cmp
add
sbb
repnz
inc
inc
fcomp
cli
xbegin
sbb
loope
pop
pop
inc
into
out
cmp
cld
arpl
mov
jmp
bsf
sbb
jp
mov
out
sbb
jecxz
lods
call
mov
dec
cmp
jo
sub
adc
clc
mov
or
fld
cmp
sub
mov
inc
ficomp
call
adc
fnstcw
push
adc
imul
aas
(bad)
adc
xchg
dec
xor
(bad)
mov
push
retf
fs
in
pushf
pop
mov
sbb
loop
mov
ss
push
jns
dec
clc
and
bound
adc
cmc
ins
sub
xchg
mov
xor
mov
into
es
push
test
add
pushf
jge
js
fsubr
rol
xor
inc
jns
sbb
call
enter
mov
sbb
fs
pop
adc
aad
(bad)
lods
sahf
push
push
test
loop
js
pop
jnp
in
push
add
xor
add
add
adc
rcr
ja
out
pop
dec
push
cmps
cmp
cmp
xchg
sub
fmul
in
addr16
icebp
xchg
popa
sbb
xchg
mov
or
mov
xchg
sahf
or
sbb
out
sub
xchg
arpl
int
or
add
dec
cmps
(bad)
shr
lahf
mov
fcom
jl
push
(bad)
call
int
fisubr
sub
and
fwait
retf
clc
jmp
xor
sbb
mov
push
xor
rcl
jp
rcr
add
rol
call
pop
lods
int3
in
jmp
outs
ins
fnstcw
test
(bad)
fcompp
jbe
pop
mov
iret
xchg
xchg
push
(bad)
sub
aaa
xchg
push
lock
push
ins
adc
fdiv
cmp
sahf
nop
scas
or
jb
or
(bad)
inc
pop
push
sbb
imul
mov
mov
mov
mov
retf
xchg
test
dec
push
jmp
mov
dec
clc
sar
mov
mov
inc
mov
pusha
shl
push
xor
xchg
jne
(bad)
adc
cli
cmp
add
pop
icebp
sub
sar
call
sub
mov
in
lahf
imul
xchg
scas
shr
pop
cld
push
mov
shl
xlat
dec
cmp
cmp
push
imul
fcmovbe
test
pop
xchg
hlt
or
in
retf
hlt
push
adc
sub
sub
bound
sbb
sub
and
mov
cld
jl
or
leave
movs
in
adc
leave
dec
mov
mov
lods
dec
test
sbb
outs
mov
aam
push
lods
xor
pop
div
jp
ins
retf
push
cmps
popa
addr16
jae
jmp
leave
cvttps2pi
imul
sbb
fcom
vcvtss2si
mov
fld1
mov
mov
popa
mov
ins
enter
sbb
sbb
push
out
fisubr
and
call
or
push
sbb
sbb
imul
jmp
int
jnp
and
pop
call
mov
mov
imul
cmp
rcl
push
jecxz
pop
push
movs
jo
mov
or
xor
clc
jl
sbb
cmp
adc
mov
inc
lea
sbb
dec
mov
retf
test
add
fs
mov
sub
add
js
fs
in
sbb
sub
mov
or
sbb
lods
xlat
enter
cwde
add
cld
fisttp
mov
pop
mov
jle
in
test
dec
mov
mov
ss
xor
shl
shl
mov
and
pop
mov
push
xor
push
in
out
rcr
data16
jmp
popa
cli
test
rcr
int
test
clc
cmp
push
pushf
jbe
or
js
xchg
shl
test
add
sbb
dec
cmp
mov
mov
aas
sti
js
pop
shl
fsubr
hlt
jp
fisub
mov
test
fwait
pop
add
shr
inc
pop
fdivr
xchg
mov
daa
jb
ds
push
push
fld
sbb
sbb
mov
out
scas
data16
dec
or
test
xor
pop
sbb
cmp
into
sub
dec
dec
sahf
sbb
jle
pop
test
lea
inc
sti
leave
sub
fild
nop
sti
or
(bad)
int
mov
pop
jnp
add
pop
retf
add
aas
repz
mov
retf
int
retfw
sbb
or
push
out
xchg
mov
push
jns
shr
pop
je
sbb
push
gs
xor
popa
ficomp
jle
retf
inc
sbb
cmp
arpl
ja
ret
jo
arpl
icebp
sti
and
cmp
ret
mov
adc
mov
sub
arpl
mov
push
daa
aad
vmread
or
xchg
mov
mov
inc
cmp
xchg
mov
test
add
cs
mov
cli
test
rcr
lahf
inc
test
into
xor
pop
test
jge
mov
inc
xor
add
pop
imul
push
mov
out
push
into
cld
xchg
fsub
inc
cmp
xchg
jno
ins
clc
mov
xchg
sub
into
xchg
and
dec
or
js
jbe
dec
mov
mov
out
xchg
lock
iret
xor
fistp
cmp
retf
mov
xchg
ins
enter
sub
dec
ss
adc
pop
ss
jle
push
addr16
sub
pop
adc
retf
bound
push
call
bound
enter
cmp
daa
repz
(bad)
sbb
push
jmp
stc
stc
mov
call
pop
retf
in
dec
dec
and
enter
aam
sub
loope
mov
fild
or
cli
movs
cli
or
in
mov
cwde
in
cmp
add
sti
sub
pop
ret
fsubrp
lods
pop
mov
pop
pop
(bad)
pusha
pusha
popf
xchg
loope
pop
and
fs
(bad)
mov
lods
jnp
mov
sub
cmps
xchg
enter
or
dec
out
add
mov
clc
imul
adc
fild
sub
xchg
cdq
mov
lods
and
dec
mov
stos
idiv
fisubr
es
cmp
es
shl
add
loopne
adc
sbb
and
call
push
push
mov
mov
movs
in
xor
hlt
imul
or
xchg
(bad)
stos
das
stc
retf
mov
js
jecxz
(bad)
in
dec
in
or
pop
call
jno
pop
mov
pusha
mov
adc
push
icebp
adc
sbb
fs
or
call
pop
jnp
mov
shr
adc
fldcw
in
adc
in
sub
ret
push
nop
mov
std
neg
mov
dec
mov
sar
mov
stos
js
fistp
jns
dec
retf
xor
fadd
scas
js
iret
rol
xor
xor
pop
clc
adc
cwde
mov
cmp
mov
inc
ret
cmp
and
sub
xchg
jo
movs
dec
sub
cs
rcr
adc
jo
(bad)
adc
pop
mov
out
fcmovne
test
dec
inc
fisttp
mov
sbb
into
mov
push
dec
(bad)
imul
nop
cmp
xor
das
stos
mov
or
fiadd
js
cmp
mov
xor
push
or
fadd
adc
or
imul
movs
xchg
dec
test
mov
dec
jmp
push
fwait
in
ins
or
sbb
inc
aas
cwde
mov
jo
dec
cmp
sbb
icebp
xchg
mov
adc
sahf
sbb
retf
and
cmp
cwde
dec
jecxz
cmp
cmp
and
jge
adc
mov
push
cwde
xchg
mov
dec
clc
cmp
add
xor
mov
pusha
mov
and
sbb
sbb
imul
rcl
or
mov
outs
cdq
add
mov
push
iret
enter
cld
retf
and
mov
sbb
(bad)
adc
mov
js
xchg
fstp
cmp
dec
mov
shl
scas
cmp
mov
mov
dec
rcl
jg
pop
lock
mov
cli
jns
xchg
mov
jle
push
mov
adc
test
cmp
cmp
pop
cmovle
push
xor
inc
push
imul
add
dec
cmp
test
call
xchg
leave
icebp
sti
fs
imul
test
retf
mov
adc
icebp
stc
mov
lea
test
dec
out
fstp
jo
push
sahf
pushf
mov
cmc
dec
iret
or
xor
in
mov
lock
mov
mov
mov
mov
hlt
imul
cdq
call
pop
jmp
mov
add
add
push
fwait
cmps
cmp
outs
or
adc
lahf
lods
loop
push
mov
cmp
call
ds
js
ret
jmp
fadd
or
ret
pusha
mov
mov
pop
push
mov
sbb
lods
mov
sbb
nop
push
inc
mov
(bad)
push
inc
pop
mov
mov
js
jno
sti
into
push
out
pop
ror
and
push
stos
or
cmp
adc
jo
in
fdivr
jecxz
cmp
push
push
sub
xchg
out
sahf
adc
push
stos
xchg
aam
gs
dec
aas
xchg
call
mov
pop
in
jmp
(bad)
test
sub
(bad)
cmp
dec
or
loop
jmp
and
fwait
nop
js
or
xor
fs
pop
or
xchg
(bad)
fldenv
sahf
outs
outs
call
icebp
aas
fcmovne
or
inc
loopne
sahf
add
pop
sbb
cmp
pusha
call
aad
into
enter
retf
mov
cmps
test
loop
data16
fs
das
imul
jg
aas
sbb
add
sbb
dec
popa
push
mov
xor
jae
pop
lods
mov
jmp
jmp
cmps
sub
retf
add
sub
test
jl
aas
jmp
jle
xchg
fnsetpm(287
mov
jbe
sbb
cmps
ret
sar
push
repnz
dec
pushf
mov
cwde
(bad)
jns
in
or
out
cdq
jmp
ret
lahf
mov
ins
dec
push
popa
mov
sbb
ret
fadd
sub
fstp
loopne
out
test
shr
xchg
dec
pop
es
mov
fld
iret
ficom
or
scas
sub
sub
add
out
mov
in
daa
xor
out
enter
test
repz
mov
pushf
stos
sbb
jmp
mov
cmp
xchg
mov
dec
aaa
jo
std
xor
xor
pop
xchg
ds
xor
in
push
or
sti
dec
movs
push
xchg
mov
ds
enter
mov
sub
mov
stc
pop
jmp
gs
fidivr
pop
(bad)
lods
cwde
dec
xor
push
fmul
jl
pop
mov
enter
dec
enter
and
pop
jle
cmps
stos
mov
fiadd
dec
je
xor
daa
test
out
lods
xchg
(bad)
ss
mov
and
cmp
and
and
cli
std
pusha
lahf
jle
mov
sbb
or
into
pop
pushw
jns
fcom
jae
test
adc
dec
cmps
pop
sub
sub
pop
cwd
cli
popa
cmp
push
daa
es
retf
sub
lea
call
add
int
in
jle
mov
push
(bad)
xchg
pop
gs
js
in
push
mov
or
dec
or
sub
or
or
sbb
dec
mov
jmp
mov
or
call
or
pop
cs
pushf
stc
pop
mov
ja
inc
sub
and
test
sub
lea
pop
cmp
push
cmp
(bad)
jne
push
mov
out
cwde
or
or
pop
cdq
ss
add
sbb
sbb
mov
sub
push
lahf
sbb
gs
and
dec
test
fmul
sbb
cdq
stos
loop
cs
das
jns
enter
out
mov
push
jl
jmp
jl
xchg
ins
inc
ds
sub
and
ret
popf
push
ret
dec
jp
cmp
dec
test
xchg
pusha
or
mov
xchg
sub
cmp
stc
xchg
add
sbb
add
stos
std
jo
or
cmp
leave
ins
pop
ins
fcom
icebp
jbe
ins
into
cmp
stc
iret
cmc
cs
mov
es
cmps
test
jmp
mov
pop
mov
loop
inc
fild
sbb
rcr
in
(bad)
retf
scas
dec
mov
fadd
cld
dec
inc
daa
dec
aas
int3
or
in
addr16
fcmovnb
mov
out
cmp
cli
sbb
clc
ret
cmp
add
jns
fsubr
mov
enter
dec
dec
xor
xchg
ret
mov
int
inc
popa
dec
dec
fisttp
sub
pop
sub
mov
mov
dec
jae
push
jle
into
(bad)
out
sbb
repz
retf
push
fwait
jnp
sbb
pop
adc
push
jl
(bad)
pop
adc
sbb
loop
cld
sbb
(bad)
call
push
mov
imul
sbb
mov
fstp
sahf
mov
xchg
sbb
popf
xchg
mov
std
and
pop
mov
cld
sbb
pop
pop
ins
mov
addr16
mov
enter
shr
push
cmp
arpl
push
dec
movs
addr16
or
mov
cmp
lds
push
enter
(bad)
(bad)
cmp
in
mov
dec
cwde
push
mov
sub
in
mov
les
and
add
jp
fild
pop
aas
sub
sbb
push
lock
cmp
call
ds
(bad)
movs
dec
loopne
lods
arpl
ins
mov
sub
inc
dec
enter
std
loope
inc
pop
jge
leave
cmp
sub
add
adc
jmp
imul
or
xchg
cmp
pop
fwait
enter
pop
mov
dec
out
xchg
in
sar
lea
in
xchg
imul
mov
jp
jl
rcr
outs
jl
sbb
mov
lock
test
pop
ins
sub
sub
pop
jg
in
jae
enter
cmp
in
jmp
adc
xchg
sbb
fcomp
mov
ss
(bad)
cmp
out
sub
cmc
push
aam
or
inc
sub
test
shl
lea
fld
xchg
(bad)
jnp
push
sbb
mov
(bad)
pop
sbb
pop
movs
xchg
test
push
pop
jmp
lahf
jmp
dec
out
dec
std
sub
adc
and
dec
add
push
ins
xchg
mov
dec
aam
lods
dec
or
dec
or
adc
push
icebp
push
ret
pop
mov
inc
mov
js
pop
fcom
retf
push
and
jecxz
stos
mov
call
dec
cmp
add
cmp
imul
push
or
xchg
jae
iret
jae
jl
pop
pop
sbb
mov
inc
lock
mov
sbb
call
pop
dec
add
and
es
xlat
movs
mov
ss
fdivr
adc
pop
test
(bad)
add
cs
addr16
movs
sub
push
sub
adc
cmp
inc
jbe
cmp
mov
push
sahf
dec
pop
enter
hlt
push
mov
pop
popa
cmp
imul
jmp
and
dec
jecxz
push
inc
cmp
fwait
pusha
mov
or
js
outs
test
(bad)
ud2
xchg
inc
icebp
test
in
stos
sahf
mov
mov
dec
mov
xchg
outs
mov
jp
add
mov
clc
mov
cwde
lds
cwde
jno
test
sbb
cmp
add
push
dec
nop
es
cdq
imul
cmp
jg
inc
dec
jg
or
cdq
test
nop
jo
cmp
std
mov
sbb
or
mov
inc
mov
retf
jmp
imul
jno
xchg
add
jmp
loopne
mov
add
jmp
and
mov
inc
test
cld
and
xchg
fisubr
xor
jns
dec
(bad)
cli
aas
out
or
jno
sbb
or
call
cmp
sub
inc
ds
jp
cmp
(bad)
dec
add
into
data16
enter
cmp
mov
push
jmp
mov
js
dec
mov
sbb
(bad)
rep
add
stos
cs
sti
sbb
in
call
mov
fbstp
push
sbb
push
push
sub
xor
mov
and
fxch
fcom
cdq
imul
leave
lea
call
mov
idiv
mul
mov
add
ja
and
jmp
or
pop
cmp
shr
xchg
pusha
fistp
mov
jmp
sbb
clc
or
sub
jae
dec
or
lods
mov
or
test
adc
mov
adc
jecxz
pop
xor
test
jle
adc
out
retf
out
and
stos
rcl
dec
push
retf
pop
cmp
ret
fstp
enter
lahf
mov
adc
sub
stc
imul
data16
push
lahf
lahf
fsub
scas
fisubr
cli
sahf
imul
pop
sbb
push
mov
xor
dec
cwde
jl
in
pusha
adc
xor
sbb
ds
push
add
test
xor
sub
xchg
cwde
fdiv
shr
dec
xchg
sub
mov
out
call
fnsave
test
mov
data16
pop
pusha
pop
inc
lods
pop
add
(bad)
sbb
push
cmps
inc
mov
adc
pop
sbb
cmps
sub
sub
ins
mov
or
fs
or
dec
or
lahf
ret
shr
sbb
jecxz
pop
mov
dec
icebp
fild
in
push
aaa
and
dec
nop
sbb
or
dec
sbb
xor
loopne
loopne
mov
(bad)
js
jnp
hlt
push
je
sahf
rol
pop
ds
mov
int3
test
pushf
dec
add
xchg
sbb
inc
adc
pop
mov
xchg
jno
dec
sub
sbb
js
inc
out
fcomp
dec
fmul
retf
and
mov
enter
sbb
movs
pop
std
mov
ds
mov
jmp
retf
xor
pop
xor
dec
cmc
lahf
xlat
mov
fdivr
pop
in
cmp
push
cmps
lock
mov
add
sub
(bad)
inc
mov
mov
stc
cmp
dec
push
sbb
imul
mov
outs
push
in
cmp
pop
cmc
jno
aam
pusha
xchg
dec
mul
pop
daa
push
test
popf
fcom
(bad)
pop
mov
mov
jb
sbb
sub
cmp
adc
mov
or
movs
mov
cdq
mov
fmul
sub
mov
cs
jg
jo
mov
add
ret
out
dec
cmps
pop
mov
and
data16
push
pop
hlt
mov
call
lods
inc
push
cmp
or
xchg
aaa
call
scas
imul
cld
inc
sub
loope
fmul
(bad)
xor
shr
rcl
pop
sub
push
retf
sub
and
je
outs
(bad)
pop
xchg
lea
cmp
mov
jge
or
mov
push
imul
sub
add
xor
data16
or
fisub
inc
pushf
inc
push
jb
xchg
or
mov
mov
idiv
outs
lock
inc
sub
pop
inc
adc
sti
xchg
dec
xchg
(bad)
sub
in
arpl
inc
mov
(bad)
mov
push
enter
sbb
push
int3
mov
dec
jbe
loop
pop
mov
loopne
xor
fistp
outs
ss
add
dec
jae
sbb
addr16
dec
lods
adc
lods
and
pop
mov
push
int
cmp
cmp
mov
addr16
sub
cwde
sub
dec
or
or
mov
mov
mov
mov
mov
lock
push
push
pop
fwait
ds
dec
cs
clc
push
pop
xor
or
add
rcr
push
lods
fsubr
rcr
aam
scas
test
sbb
test
dec
sbb
mov
cmp
xchg
cs
jbe
fld
aam
sbb
jp
and
pop
push
sub
mov
mov
into
test
jp
cdq
mov
push
sub
xor
jns
push
inc
mov
sub
sbb
xor
mov
mov
stos
inc
call
mov
jmp
add
xor
clc
stc
sub
cdq
jae
dec
xor
push
xchg
sub
dec
jne
and
cmp
sti
clc
or
ins
cmp
xchg
test
clc
fdiv
out
dec
ss
call
jl
mov
test
imul
mov
jbe
push
fisttp
out
sub
push
or
pop
into
cwde
fimul
ret
cmp
and
dec
mov
mov
into
std
call
cmp
test
test
or
dec
xchg
call
mov
call
sub
sbb
js
jno
xor
stos
sub
inc
rol
cwde
sub
jmp
fcomi
push
push
dec
mov
mov
push
mov
mov
jnp
enter
inc
test
jo
imul
retf
pop
lock
and
mov
jb
fwait
mov
clc
or
xor
fadd
sub
cwde
push
xor
push
adc
fbld
cmp
not
aad
inc
fsub
mov
xlat
imul
imul
test
jle
out
pop
sub
rcl
cmp
jo
mov
or
sti
daa
js
adc
lods
(bad)
aaa
imul
add
sbb
push
dec
cmp
pop
test
lahf
js
imul
and
sbb
fcom
mov
fwait
push
sbb
call
pop
pop
sub
fadd
sbb
push
daa
jmp
and
mov
sahf
inc
stos
dec
popf
dec
mov
fist
pop
xchg
test
or
fcomp
pop
test
jns
enter
sub
leave
les
call
pop
inc
enter
das
mov
enter
add
mov
sbb
or
pop
loopne
push
cmc
pop
sar
mov
inc
sbb
pop
jl
stos
jae
ja
stc
stc
dec
in
cwde
sub
call
adc
je
push
or
mov
stos
test
in
pop
mov
sti
push
mov
pop
jg
loop
sbb
retf
push
or
push
pop
or
es
sbb
dec
mov
dec
fdivr
dec
mov
ficomp
pop
adc
fcmovne
retf
icebp
js
add
stos
jo
mov
or
test
scas
aam
repnz
inc
or
call
mov
ret
adc
stc
mov
mov
pop
retf
push
test
xchg
or
xor
mov
dec
add
mov
mov
adc
mov
into
push
enter
pushf
lahf
loop
retf
push
fcmovbe
jnp
ja
push
popf
mov
sub
daa
push
push
dec
popf
clc
add
jmp
cmp
cmp
mov
iret
jmp
pushf
sti
mov
xor
push
or
clc
call
sub
jmp
aad
mov
ja
cmp
push
mov
sub
pop
add
sub
aam
jmp
sub
mov
fldcw
into
mov
aam
les
jnp
loop
adc
and
xor
pop
push
sub
cs
bound
dec
mov
mov
xor
ins
and
fistp
popf
(bad)
sbb
push
mov
adc
cld
in
or
mov
or
mov
cmps
stos
out
imul
in
(bad)
cdq
addr16
xchg
push
(bad)
jp
mov
dec
aas
mov
pop
dec
es
sbb
pusha
mov
into
jmp
movs
or
imul
mov
dec
shl
ins
ins
sti
mov
cmp
ins
xor
arpl
adc
out
dec
cmps
rol
test
fstp
mov
xchg
jns
sbb
loopne
xor
dec
xchg
das
out
or
xor
cdq
inc
xor
dec
(bad)
pushf
call
or
in
push
leave
ja
mov
xchg
pop
je
outs
inc
dec
mov
add
stc
push
fimul
sub
loopne
inc
sbb
push
retf
sub
jl
add
ds
cmp
sar
adc
add
dec
test
or
pop
push
mov
or
lods
mov
xchg
loope
test
pop
fdivr
cmp
cmp
mov
cmp
clc
clc
es
adc
out
jg
clc
pop
adc
daa
mov
push
cld
mov
sbb
xor
pop
mov
mov
gs
popf
sub
ins
xchg
push
leave
xor
xchg
mov
gs
pop
cld
or
ins
sahf
cmp
pushf
ret
mov
out
arpl
outs
push
mov
xchg
mov
mov
dec
sbb
sub
js
xchg
stos
fild
sbb
push
stos
jae
cmp
add
repnz
es
mov
jg
stos
test
inc
pop
xor
es
sets
or
icebp
mov
jge
mov
mov
add
push
mov
mov
or
sbb
cmp
sahf
jns
sbb
fcomp
inc
mov
mov
sub
stos
iret
jb
xchg
mov
(bad)
xchg
imul
cwde
jmp
and
jmp
call
sbb
jbe
test
addr16
lods
test
sbb
test
jle
or
or
fadd
loopne
mov
hlt
inc
cmps
or
js
es
out
fadd
clc
pop
call
scas
or
adc
or
push
rcl
pusha
enter
icebp
cld
add
shr
pop
ja
in
or
test
push
popf
mov
mov
shl
add
mov
clc
div
mov
mov
out
jp
push
sub
jns
cmp
sbb
sub
dec
mov
outs
and
(bad)
test
adc
hlt
xor
jl
pop
cwde
ss
mul
adc
sub
iret
mov
cmp
mov
fisttp
repz
test
or
sub
js
sbb
xchg
adc
dec
aas
dec
inc
cwde
repz
xlat
mov
in
retf
cmps
cmps
cdq
cmp
and
xchg
call
call
clc
sar
rol
ins
and
mov
fstp
lock
mov
pushf
std
mov
mov
cmp
push
push
lock
js
dec
mov
mov
push
pushf
xchg
mov
ror
push
enter
icebp
push
mov
and
imul
nop
sub
cmp
int
xlat
mov
cmp
retf
jnp
push
dec
mov
pop
adc
shr
lock
in
pop
sbb
mov
movs
scas
xor
addr16
imul
rol
lock
jnp
pop
sahf
fsubrp
and
sbb
pop
cdq
imul
push
clc
cmp
cwde
loopne
mov
cdq
push
dec
leave
cdq
xchg
dec
cdq
dec
movs
scas
idiv
push
mov
mov
pop
jp
sbb
dec
ret
xor
jle
stc
stos
mov
adc
in
leave
mov
js
sbb
or
in
mov
(bad)
cmp
mov
aad
sub
sbb
cmp
jmp
pop
cmp
int3
dec
add
and
cmp
or
push
leave
jmp
sub
dec
mov
jno
and
dec
mov
and
ror
int3
adc
fdivr
out
cmps
fdivrp
fdivrp
xchg
pop
dec
sahf
sbb
clc
retf
and
in
shl
sbb
or
xor
pop
imul
dec
mov
test
shl
and
mov
hlt
dec
push
clc
push
push
lahf
fmul
call
dec
pop
push
sbb
fstp
pusha
call
sbb
adc
pop
cmp
rcr
enter
in
jnp
idiv
shl
cmp
sbb
or
cmp
call
sbb
mov
xchg
adc
jl
dec
shl
js
sbb
in
in
scas
mov
aad
push
fdivr
pushf
add
sub
or
push
in
fdiv
loop
pop
sbb
lea
mov
pushf
int3
nop
cwde
mov
xor
aaa
pop
jb
jnp
je
lods
adc
fyl2xp1
jmp
jge
and
cmp
adc
(bad)
aas
je
mov
mov
sub
test
jmp
addr16
sbb
dec
popf
cmp
push
int3
fistp
in
add
mov
ret
imul
or
jp
xor
xchg
call
iret
xor
sti
sub
mov
pop
push
rcr
outs
sub
or
pop
ss
dec
and
icebp
sub
sbb
test
fcmovu
out
sub
or
mov
cwde
jmp
sbb
pop
jo
sub
pop
mov
rol
inc
pop
jl
jp
push
pop
ins
add
das
dec
sub
jns
xchg
mov
js
std
mov
cmp
lods
mov
sbb
lock
mov
stos
call
dec
(bad)
fwait
push
fucomi
sahf
mov
mov
or
cwde
cmp
xor
cwde
push
test
gs
loop
test
cwde
pop
call
je
pop
sub
int
sti
add
stc
rcl
xor
sub
mov
out
gs
xchg
mov
jp
js
or
xchg
sub
push
shr
and
add
push
dec
xchg
push
or
or
cli
sbb
add
dec
cdq
ins
sub
pop
jne
or
leave
aad
cmp
add
dec
sbb
xchg
icebp
xchg
lahf
shl
xlat
sub
mov
enter
mov
scas
push
(bad)
sub
push
in
push
mov
test
pop
mov
pop
or
xchg
cs
leave
inc
push
mov
adc
sub
adc
js
xchg
sub
clc
fstp
jmp
neg
xchg
or
inc
add
sti
retf
fcomp
or
mov
sub
fdiv
daa
cmp
xor
js
rcl
pop
inc
mov
and
iret
(bad)
and
stc
xor
pop
movd
adc
cmp
icebp
xchg
js
adc
imul
fld
call
sbb
pop
loope
jns
dec
clc
cdq
in
enter
popa
nop
fdiv
add
clc
add
(bad)
gs
and
mov
pop
jo
mov
pop
pop
dec
jge
and
ret
sub
jbe
fsubr
mov
pushf
aaa
inc
out
mov
stos
mov
mov
and
inc
cdq
mov
aaa
sti
sub
push
loopne
push
jnp
call
sbb
pop
jmp
jecxz
cmp
jge
test
cmp
push
jl
into
out
test
push
pop
jg
rcr
sbb
ins
out
retf
xor
pop
(bad)
dec
test
ins
push
cdq
call
rcr
std
xchg
stos
pop
dec
mov
or
stos
inc
sar
inc
pop
test
mov
mov
imul
call
shl
push
push
ficomp
or
adc
push
mov
lea
fwait
jbe
div
outs
rcr
cmp
cld
mov
jmp
dec
retf
mov
pop
jp
inc
popa
mov
call
ror
xor
nop
xor
or
or
push
push
xor
out
pop
sub
shr
test
ss
dec
cwde
mov
aas
add
push
inc
push
mov
or
sub
loopne
push
jmp
or
test
sub
ss
pop
ret
dec
mov
push
mov
shr
das
or
scas
sbb
sub
arpl
push
sub
sub
inc
sar
mov
test
in
and
xlat
mov
mov
outs
es
lock
xchg
idiv
sbb
mov
mov
xor
fdivr
mov
cdq
sub
or
aaa
jmp
imul
sbb
ds
in
pushf
inc
popf
xor
cmps
xchg
stos
test
cmc
sbb
fcom
pop
(bad)
cwde
es
jle
cmovo
jp
mov
fcomp
push
stos
jo
fcom
sbb
mov
pop
lods
mov
ret
call
fcom
xor
aam
mov
je
push
adc
(bad)
movs
clc
ja
cmp
daa
push
imul
stos
stos
jl
call
mov
mov
inc
cld
cmp
add
dec
enter
xor
enter
push
clc
pop
mov
mov
sbb
push
call
rol
in
test
jg
push
cmps
cmp
lea
pop
(bad)
xchg
mov
push
cmp
mov
jg
cli
lea
adc
das
les
fidiv
in
mov
cmc
adc
stos
sub
mov
in
xchg
sahf
inc
xor
mov
ror
shl
pop
dec
sub
in
jae
mov
imul
div
or
rep
mov
fdivr
sti
jg
jne
call
out
out
sbb
mov
in
mov
adc
retf
pop
pop
xchg
cwde
mov
leave
push
jmp
sbb
pop
or
inc
push
dec
jmp
repnz
fild
nop
inc
and
in
pop
and
mov
leave
cld
leave
sub
sub
add
call
mov
out
aaa
xor
adc
mov
mov
cmp
push
mov
sub
and
jb
mov
fnstcw
add
push
cmp
lods
sub
movs
stc
pushf
or
pop
and
lds
push
or
jo
call
pop
(bad)
scas
stos
retf
jecxz
(bad)
pop
repz
xlat
mov
fs
fmul
push
je
jo
jl
in
psubsb
jbe
and
int3
(bad)
loope
out
scas
add
jb
mov
pop
mov
imul
jle
mov
mov
add
and
scas
or
cmps
sub
and
in
mov
mov
(bad)
pop
xchg
xor
(bad)
pop
std
xor
fnsave
inc
cmps
dec
push
xor
sbb
leave
mov
in
popf
clc
xchg
les
test
in
test
inc
cdq
sbb
jmp
pusha
cmp
in
mov
movs
sbb
out
neg
dec
mov
js
(bad)
mov
es
cmp
lea
fcmove
or
add
mov
push
stos
cmp
ja
push
add
bound
test
sub
or
mov
push
xor
inc
clc
sti
sbb
jp
imul
nop
cwde
cmp
cmp
lods
mov
clc
in
sbb
cmp
jmp
mov
ja
sub
or
hlt
pop
pop
lods
ret
dec
pop
pusha
adc
jno
mov
or
cmp
in
xor
xor
push
mov
mov
push
jo
outs
add
fincstp
aaa
mov
sub
sbb
fadd
sub
inc
lods
call
jle
and
jbe
adc
icebp
push
(bad)
push
xchg
xchg
push
icebp
or
sar
sub
lds
imul
iret
push
sahf
sub
jg
ror
call
or
jl
(bad)
pop
push
int3
in
sbb
pop
stc
retf
pushf
shl
dec
cdq
sti
in
xchg
retf
ins
popf
adc
inc
adc
push
pop
cmp
adc
mov
sar
sub
push
pop
leave
jae
push
cmps
mov
loop
ja
jmp
cmp
fsubr
int
xor
jmp
sbb
sahf
call
mov
in
pop
push
push
enter
dec
cmc
int
ins
test
lods
cwd
jbe
popa
cmp
mov
mov
pop
test
jne
sbb
xor
mov
fwait
mov
in
mov
repz
lods
pop
test
inc
enter
sub
sub
add
fild
xchg
pop
ret
mov
stos
nop
shr
lea
ror
daa
mov
jo
pop
push
sbb
dec
jle
imul
pop
enter
std
ins
imul
sbb
aaa
jecxz
cmp
sub
mov
enter
mov
jmp
iret
mov
out
jle
jmp
fwait
jmp
xchg
int
lahf
adc
ja
std
aaa
hlt
aaa
frstor
js
jnp
push
inc
pop
call
push
sbb
call
fdivr
mov
sub
mov
popa
shr
sbb
into
lock
aad
push
pusha
popa
mov
and
fsubr
push
sub
pop
sub
and
and
mov
or
mov
hlt
jbe
sbb
dec
test
cmc
imul
rcl
cmp
and
mov
sub
jecxz
xchg
test
popa
into
clc
push
call
mov
mov
in
cmp
inc
adc
inc
sbb
jmp
jb
daa
push
mov
mov
push
mov
ss
movs
int
mov
je
outs
mov
cmp
or
xor
or
pop
push
fdivr
inc
je
in
push
hlt
sub
add
repnz
jp
pop
inc
iret
and
loopne
and
mov
cwde
int
jg
pusha
ds
mov
sub
inc
and
sub
mov
mov
das
scas
or
push
jl
out
sub
mul
pop
mov
das
mov
cmps
test
cmp
push
jmp
inc
mov
enter
fadd
sbb
sub
xlat
xor
jns
sub
movs
fcmovb
dec
enter
out
jae
ins
lock
mov
das
jno
add
outs
dec
push
push
xor
mov
mov
ss
shr
push
dec
mov
push
std
ss
clc
jge
rcr
xor
adc
mov
cs
outs
stc
sub
test
push
jmp
jl
scas
(bad)
sub
fldenv
push
cmp
int
mov
jmp
nop
dec
stc
mov
rcl
push
pop
jmp
push
mov
dec
ds
movs
or
loop
adc
out
add
pop
pop
jnp
enter
jo
out
dec
cmp
gs
fneni(8087
lods
dec
dec
push
mov
pop
lock
fmul
in
dec
jmp
fimul
fcom
mov
sbb
sub
(bad)
mov
dec
mov
sub
lea
inc
ins
leave
sub
fwait
js
loope
inc
ret
sbb
mov
movs
cdq
pop
call
xchg
movs
mov
jle
xchg
inc
fnstcw
jecxz
test
cmp
fadd
ins
adc
test
shr
cmp
stc
or
cwde
cmp
push
adc
sbb
fisubr
cwde
dec
clc
push
xchg
push
stos
push
mov
cmp
or
mov
mov
aad
jbe
rcr
jle
inc
fcom
or
sar
add
and
cmp
push
mov
mov
dec
xchg
adc
mov
test
es
inc
jge
je
mov
dec
test
cdq
push
test
add
rcr
jle
leave
jo
pop
jp
pop
sub
lock
push
je
cdq
jp
lods
push
dec
mov
bound
ds
dec
enter
mov
cmps
les
aam
sahf
mov
or
in
and
xlat
test
arpl
mov
pop
mov
and
mov
cmp
ror
lods
(bad)
fsub
mov
jg
push
dec
(bad)
mov
(bad)
hlt
xchg
push
daa
push
cmp
mov
mov
lea
int
call
adc
cmp
fnstenv
sar
cmc
mov
mov
dec
addr16
stos
inc
xor
cmp
shl
out
clc
jns
pop
cmc
cmp
bound
mov
ret
push
lds
mov
pop
inc
sbb
(bad)
jmp
push
push
cwde
fsubp
inc
add
int
fcom
xor
fstp
fwait
sbb
scas
js
test
mov
loope
mov
lea
mov
jp
adc
mov
adc
cli
ret
xlat
dec
into
movs
mov
push
sbb
test
xchg
xor
or
jmp
imul
or
mov
leave
shl
dec
leave
ds
lods
(bad)
in
cmp
lea
cli
leave
cmp
pop
nop
addr16
das
jle
mov
mov
fs
popf
sbb
and
pop
mov
inc
je
fisub
mov
inc
test
pusha
lea
int3
aam
cs
ja
js
dec
jne
jg
xchg
mov
inc
inc
retf
push
pushf
hlt
fsubr
add
push
dec
test
nop
hlt
push
add
cmc
ror
sub
sbb
or
int
fwait
js
xlat
xor
js
add
xchg
inc
in
add
adc
test
cld
inc
pusha
nop
test
loope
fdiv
sub
cwde
cmp
in
cwde
test
es
mov
test
pop
cmp
dec
xchg
in
sbb
fcom
aaa
dec
inc
mov
mov
clc
xchg
mov
mov
lahf
push
jb
adc
inc
mov
or
shl
cmp
shr
fwait
inc
fisttp
fdiv
xor
js
imul
cmp
inc
mov
scas
sar
mov
cmp
pop
and
mov
(bad)
sub
mov
(bad)
adc
cdq
jae
sti
mov
sub
add
aam
dec
scas
in
popf
mov
call
or
adc
imul
fcomip
adc
popf
inc
mov
jno
or
add
cmps
test
pop
mov
lods
sti
jg
outs
fisttp
imul
xchg
adc
lods
xchg
cdq
mov
mov
aaa
or
pop
mov
push
xor
or
ror
mov
(bad)
stc
push
out
or
xlat
mov
int3
call
mov
retf
cmps
inc
sub
out
pusha
imul
mov
dec
inc
mov
retf
mov
adc
cmp
jmp
jmp
movs
inc
ficom
or
fstp
ins
add
push
fsubr
cli
test
xlat
sub
jp
or
retf
repnz
xchg
sbb
cmp
xchg
jg
lock
iret
or
call
inc
(bad)
test
add
mov
retf
cmc
(bad)
loop
dec
enter
dec
std
hlt
imul
dec
cwde
cwde
add
mov
pop
cmp
push
mov
loopne
mov
scas
mov
dec
pusha
mov
add
jae
sbb
imul
or
mov
popa
push
dec
mov
popa
scas
cs
repz
sub
sub
push
movs
sahf
retf
mov
int
iret
inc
das
(bad)
xor
xor
call
dec
jno
imul
inc
pop
push
add
mov
into
or
xchg
push
xor
lods
jb
dec
xchg
xchg
jmp
dec
cmps
mov
shl
in
xor
enter
push
imul
clc
daa
imul
je
sbb
fnstcw
lea
jl
cmp
jl
add
push
js
push
cli
mov
stos
pop
mov
pushf
js
ins
fs
leave
call
cld
dec
sub
jmp
dec
and
call
sbb
mov
ins
mov
adc
sbb
loopne
int3
fdiv
lods
ins
bnd
ja
and
lods
mov
fstp
pop
inc
mov
(bad)
stc
pop
xor
mov
inc
inc
das
in
pop
cmp
inc
jge
mov
lock
dec
mov
cmps
fisubr
cmps
cli
cmps
or
or
add
mov
push
loopne
sar
enter
cli
and
sar
jp
shr
mov
fwait
lock
sahf
jae
pop
outs
sbb
in
out
xchg
cmp
movs
sub
repnz
imul
pop
(bad)
in
movs
sar
mov
ins
cmp
jne
jns
xor
or
cmp
mov
imul
xchg
jns
or
adc
std
inc
pop
out
cld
cmps
sub
or
ins
ds
jo
scas
rol
mov
pop
sbb
cmps
mov
sbb
std
push
or
and
cdq
mov
cld
(bad)
mov
sub
nop
icebp
out
cmp
clc
mov
jl
jbe
sar
fisubr
imul
fucomi
xor
mov
jmp
sub
adc
cmp
in
outs
clc
pop
in
loope
lahf
retf
pushw
test
and
mov
je
lods
test
pop
cmp
call
repz
mov
cwde
sub
pop
leave
sbb
pop
stc
dec
loopne
(bad)
pop
fsubp
and
mov
ins
xchg
js
push
mov
and
aaa
push
pop
das
mov
mov
push
iret
repz
and
push
add
or
dec
call
in
pop
repz
push
mov
call
fld
loope
xor
adc
cmp
mov
sub
mov
and
fbstp
les
cmp
iret
dec
(bad)
loope
mov
call
xor
mov
cmps
js
int
addr16
clc
test
mov
pushf
das
fsub
cmp
js
mov
or
test
ins
inc
test
pop
pop
fst
push
out
sub
mov
mov
add
xchg
outs
jp
add
lods
xor
or
mov
sbb
cmp
jmp
mov
lods
dec
pop
sbb
out
xlat
pop
push
sar
enter
mov
push
(bad)
push
and
cli
fsub
bound
aas
push
pushf
in
test
repz
cwde
retf
push
sub
(bad)
inc
rcl
dec
sar
fistp
enter
mov
sbb
stos
pop
leave
mov
push
push
xlat
(bad)
sbb
test
sub
daa
(bad)
xlat
add
mov
sub
jmp
cwde
cdq
dec
pop
inc
std
cld
pop
push
out
cmp
cwde
pop
mov
mov
xchg
test
dec
test
push
sbb
les
into
xor
lahf
inc
inc
leave
mov
mov
mov
sbb
pushf
shr
cmp
movs
sub
call
movs
enter
js
test
mov
mov
add
jns
fstp
jns
cmp
xchg
call
cld
hlt
sbb
lahf
sub
or
inc
popa
jle
xor
stc
pop
mov
pop
sbb
pusha
iret
sbb
mov
jl
cmp
jp
les
mov
add
(bad)
mov
movs
popa
out
adc
sbb
ret
aas
imul
imul
and
cmp
and
popf
xchg
or
cmps
mov
jbe
push
ins
mov
(bad)
mov
sbb
sub
jne
push
dec
cmp
test
mov
dec
dec
enter
sub
fadd
mov
test
pusha
jnp
stos
sar
bound
pop
fs
cmps
cwde
and
xchg
lock
or
retf
jo
mov
in
jns
mov
mov
pop
sbb
dec
or
jmp
sar
das
jmp
jl
fmul
mov
xchg
or
sbb
cmp
test
into
cmp
in
jns
pusha
sbb
push
or
das
ja
scas
dec
movs
sub
out
cmp
test
mov
fbstp
sub
sbb
ins
mov
pop
inc
test
mov
retf
repz
xchg
xchg
test
sbb
scas
data16
sub
inc
push
(bad)
sub
sbb
call
jg
rcr
es
mov
jb
out
sbb
outs
stc
mov
xchg
add
(bad)
shl
scas
test
fldcw
call
xchg
mov
push
imul
adc
dec
or
outs
mov
fbld
mov
adc
mov
sub
cwde
dec
fst
mov
xchg
call
movs
aam
aaa
mov
pop
mov
mov
(bad)
loopne
clc
shl
mov
xor
inc
fsub
imul
pop
dec
jmp
jo
pop
jl
cmp
push
aam
daa
clc
cmp
outs
mov
idiv
retf
push
and
and
jl
mov
out
push
sahf
pop
jge
aam
sub
pop
je
leave
xchg
pextrw
popf
jnp
mov
cwde
cwde
inc
scas
cmp
cmp
xor
aam
inc
or
sti
loopne
enter
dec
retf
push
sbb
dec
cmovs
mov
cmp
inc
push
jmp
retf
imul
ds
cs
xor
sbb
sbb
sbb
and
leave
movs
mov
out
mov
dec
lds
push
xchg
pop
pop
xchg
push
jb
ds
fstp
icebp
sub
xor
ja
shl
mov
cmp
add
(bad)
std
mov
sub
jo
pop
iret
pop
loop
pop
inc
lea
or
stc
mov
jne
dec
call
add
jne
sbb
loope
repz
cmp
retf
lahf
mov
nop
shl
lock
xchg
and
push
mov
dec
sub
push
sbb
sbb
imul
sub
stc
mov
add
dec
lock
dec
push
fdivr
mov
xchg
fsub
mov
cmp
mov
scas
cwde
jecxz
dec
jnp
cld
out
mov
pop
repnz
dec
jg
dec
inc
jle
(bad)
jne
push
fwait
mov
jg
jno
nop
push
xor
ins
into
push
xor
push
sbb
push
push
clc
sub
jge
push
jmp
mov
adc
movs
aaa
dec
mov
stc
and
push
xchg
jmp
mov
xor
std
pushf
fstp
dec
fcomp
shr
xlat
outs
lock
repz
fisttp
mov
dec
mov
cmp
dec
mov
imul
cmp
sbb
les
cmp
fwait
add
jmp
dec
cli
into
sti
cmps
loope
nop
or
xor
or
das
fs
loopne
bswap
imul
mov
adc
jg
push
pushf
sbb
stos
cmp
pop
test
inc
hlt
sbb
call
lock
in
mov
jge
jo
hlt
mov
test
mov
push
(bad)
das
leave
shl
test
adc
mov
bndldx
mov
jns
in
(bad)
popa
cmps
pop
mov
mov
pusha
call
mov
das
adc
adc
mov
and
popf
ins
mov
pop
inc
fistp
test
xor
(bad)
sbb
jmp
sub
sahf
jp
ja
gs
jne
cmp
js
pop
ficom
cmc
dec
xor
or
clc
and
test
pop
dec
mov
cld
in
xchg
(bad)
in
cli
xor
test
dec
pop
test
test
jg
mov
cmp
fcmovb
sub
ds
or
pop
fucompp
xor
adc
frstor
cwde
xlat
fdivr
in
sub
jg
mov
in
out
mov
push
rcl
pushf
inc
(bad)
pop
adc
inc
pop
(bad)
inc
inc
add
push
xchg
stos
mov
adc
pop
mov
ins
or
(bad)
addr16
inc
stc
(bad)
pop
ja
aaa
xor
retf
leave
xor
cmps
out
test
push
jb
fsub
or
pop
iret
fucom
dec
(bad)
mov
mov
test
sub
cmp
inc
clc
out
adc
mov
and
call
clc
jnp
dec
stos
sbb
adc
clc
std
sbb
cli
sub
fstp
sub
loop
push
push
mov
gs
jp
xlat
xchg
call
das
mov
or
or
push
push
call
cli
jg
ror
pop
in
or
iret
sbb
dec
cmp
mov
or
or
and
xor
lods
xor
sbb
inc
pop
push
aam
jmp
lods
push
icebp
or
cwde
mov
pusha
dec
mov
dec
mov
leave
cmp
(bad)
push
mov
xchg
mov
pop
js
fs
xchg
dec
and
pusha
mov
pop
std
adc
fisubr
cmp
addr16
les
fstp
mov
imul
pop
aam
imul
inc
je
jns
xchg
or
xor
fcmovb
xor
imul
scas
dec
cwde
cmp
add
imul
pop
pop
hlt
aam
fadd
xchg
aas
imul
cwde
(bad)
adc
pop
sbb
push
xchg
pop
in
hlt
cmp
sti
ins
add
add
or
jp
mov
and
dec
cmp
outs
ins
mov
out
cmp
loope
fst
or
cs
mov
lods
pusha
jns
mov
(bad)
sbb
add
add
adc
call
mov
adc
or
retf
je
sub
push
stos
sub
movs
pop
in
sahf
mov
cmps
mov
clc
popf
cmp
fldcw
leave
add
inc
sub
hlt
adc
pop
mov
lea
mov
jnp
sbb
(bad)
cvtdq2ps
or
int
iret
dec
stc
int3
ficom
sbb
fldenv
sahf
or
lods
jp
cmp
mov
leave
xor
sub
xchg
cmp
stc
ins
fcom
ins
xor
xor
inc
cmc
sub
dec
sar
xor
xor
mov
mov
cmp
sub
jp
jle
mov
adc
call
sub
push
jmp
ret
inc
cmp
mov
xchg
stc
pop
jns
xchg
cld
push
dec
mov
pop
loopne
mov
mov
inc
stc
mov
sahf
shl
stos
clc
sub
cmps
lods
not
cdq
jp
in
hlt
mov
ja
or
and
sbb
or
stc
push
test
clc
sbb
add
and
popa
dec
(bad)
mov
jb
rcl
fistp
push
xchg
sub
js
mov
enter
xor
popf
mov
inc
push
or
movs
push
jno
dec
mov
inc
mov
hlt
and
ror
jnp
ja
mov
pop
inc
mov
xor
adc
call
cmp
outs
pop
test
aam
push
aad
pop
pusha
sbb
xchg
fcomp
mov
test
sub
pusha
and
add
fnstsw
jge
or
mov
dec
sub
mov
outs
int3
mov
xchg
cmps
popf
adc
inc
pop
hlt
or
repz
adc
pop
or
sbb
jmp
inc
je
stos
popf
retf
int3
repz
jecxz
out
cmp
dec
mov
outs
jo
and
shl
jge
dec
cmp
pushf
cli
cmps
cmp
pop
ins
dec
or
pop
js
cld
add
bound
xlat
pop
fdivr
cmp
inc
cdq
adc
stos
sbb
cmp
mov
movs
adc
sbb
rcl
int
icebp
push
mov
out
into
lods
shl
and
xchg
adc
in
cmp
xor
ret
(bad)
fmul
cmp
xchg
sbb
cmps
sbb
or
gs
inc
call
sbb
push
adc
mov
mov
data16
fs
sub
lea
adc
test
addr16
adc
jge
add
inc
or
jne
retf
imul
fstp
cmp
xchg
cli
xchg
inc
pop
sahf
ret
scas
jo
outs
jbe
mov
fst
mov
enter
lock
imul
or
dec
mov
mov
jmp
dec
retf
imul
or
movs
mov
sub
in
sbb
add
inc
out
shr
ror
test
test
ffreep
sbb
mov
mov
sbb
jns
cmp
pusha
rcr
xlat
and
mov
mov
enter
shr
mov
or
sbb
cs
pop
leave
push
ins
add
fldcw
jae
pop
imul
push
mov
pop
sbb
popa
push
dec
mov
sub
cwde
adc
push
mov
mov
adc
stos
jns
sub
popf
fild
call
test
mov
push
out
enter
stos
ret
jo
mov
test
mov
(bad)
sub
dec
(bad)
sbb
mov
adc
aas
retf
adc
sar
scas
sub
jno
inc
adc
clc
sti
pop
inc
dec
pop
cmp
hlt
xor
mov
enter
pop
mov
mov
lods
inc
dec
cs
cmps
mov
and
jecxz
inc
call
cdq
mov
pop
sbb
fiadd
or
or
loopne
das
test
fld
pop
dec
push
or
cli
cld
sbb
loopne
adc
push
and
jg
mov
adc
xchg
sub
xor
sub
int
lods
mov
out
les
(bad)
lods
dec
call
dec
pop
sar
pop
cwde
stos
(bad)
loopne
or
push
mov
mov
sbb
bound
push
pop
pusha
sub
popa
fimul
and
push
enter
bound
mov
popa
js
pop
push
push
shl
pop
cmp
call
bound
je
fdivr
jg
or
cmp
test
mov
push
pushf
push
cmp
xchg
dec
pop
dec
loopne
jae
jle
adc
mov
out
dec
into
push
pop
or
push
es
aaa
add
xchg
xor
mov
test
(bad)
or
mov
into
pop
cli
adc
fldcw
mov
or
mov
xchg
mov
push
sbb
xchg
jp
jmp
jge
sar
adc
pop
push
jmp
jmp
ret
(bad)
mov
push
call
sbb
inc
dec
ins
fs
test
inc
push
cmc
pop
call
sub
cmp
sub
add
or
mov
jne
stos
dec
movs
shl
jbe
adc
out
loope
mov
clc
jb
adc
mov
or
(bad)
jmp
in
pop
inc
or
std
clc
push
test
nop
dec
sbb
cmp
xchg
sub
cmp
pop
xchg
cdq
fld
mov
cmp
or
inc
cmp
jno
popf
call
loopne
sbb
add
pop
fnstcw
mov
js
pop
retf
and
mov
pushf
jmp
pusha
sbb
jno
aaa
sbb
push
inc
test
inc
cmps
xlat
pushf
inc
and
xchg
(bad)
push
fdivr
jb
add
mov
xor
aaa
jno
push
mov
adc
push
or
and
jnp
add
test
add
mov
test
out
or
cmps
mov
inc
ror
rcr
shl
sar
mov
cwde
add
pop
hlt
adc
icebp
sbb
test
sub
fwait
or
imul
js
mov
adc
mov
inc
dec
fiadd
inc
xor
mov
fild
jb
and
sbb
cdq
fdivr
in
jmp
sub
pop
jns
cmp
xchg
pushf
iret
icebp
push
je
cdq
ins
push
dec
(bad)
(bad)
pop
movs
clc
fcomp
dec
pushf
jmp
sbb
sti
mov
and
or
add
fisttp
test
mov
mov
push
cmp
aad
popf
and
sti
add
cmp
fisub
pushf
ins
aad
out
inc
enter
mov
cmc
jne
adc
fmul
inc
mov
repnz
jbe
jo
jmp
lock
xchg
shl
push
leave
add
outs
sub
call
cwde
jp
jle
pushf
es
sbb
imul
pop
or
fwait
test
clc
mov
cwde
sbb
sub
leave
fs
cmp
daa
push
inc
pop
cmp
jp
dec
dec
jecxz
sti
jbe
xor
imul
and
lds
ja
add
xchg
popa
cli
dec
sub
mov
dec
inc
mov
dec
aad
xchg
mov
mov
sub
sbb
or
dec
mov
mov
and
popf
cmp
jmp
std
or
xor
sub
xchg
jns
popa
stc
mov
mov
adc
fst
mov
mov
fcom
stos
retf
fld
(bad)
xor
and
mov
iret
test
ds
push
mov
sbb
push
jns
es
jl
sub
test
add
mov
repnz
rcl
and
and
and
push
cdq
mov
stos
call
inc
(bad)
hlt
dec
test
ret
xchg
cdq
jo
sbb
add
dec
add
xchg
pop
inc
stc
enter
shl
pop
inc
lahf
adc
and
pushf
or
pusha
or
mov
(bad)
test
add
fs
dec
mov
mov
clc
xchg
fld
inc
cmp
xor
js
jo
aas
cmp
cwde
fldenv
pop
lock
out
fdivr
push
fidiv
xor
or
inc
nop
shr
mov
mov
jo
inc
cmp
test
xor
ins
pop
inc
inc
sbb
int3
stc
xchg
mov
add
mov
cmp
lock
jl
xchg
fcom
adc
lods
jo
fcomi
enter
mov
mov
sbb
mov
cld
add
xchg
push
adc
int
xor
fdiv
or
sti
jl
xor
and
push
mov
push
inc
jo
movs
loope
mov
in
adc
sub
xor
inc
add
mov
fist
in
mov
mov
cmp
cmp
mov
mov
sbb
inc
mov
pop
cmp
mov
cwde
hlt
mov
movs
lahf
adc
fs
mov
and
clc
adc
in
mov
sub
cwde
scas
bound
test
fdiv
dec
add
xor
enter
nop
lahf
add
shl
je
scas
mov
xor
add
dec
call
fdivr
push
in
mov
mov
dec
push
std
call
lock
hlt
mov
add
ret
push
mov
stos
or
cmp
test
fmul
fistp
ds
lods
cmp
pop
test
mov
test
lods
enter
(bad)
sub
push
out
aad
push
movs
mov
adc
gs
addr16
jb
fmul
and
sub
in
retf
sbb
cmp
aas
lahf
loope
mov
or
pop
sbb
femms
cdq
stos
fmul
in
(bad)
or
enter
cld
ds
fadd
mov
sbb
out
nop
loopne
lds
ins
test
jg
cld
or
js
into
in
loope
fcomp
call
pop
in
and
ins
into
div
jl
js
cmp
clc
dec
sti
(bad)
in
cli
and
cli
inc
mov
or
pop
mov
mov
sub
xor
(bad)
adc
stc
call
dec
scas
call
sub
dec
xor
pop
lods
and
cmp
jne
mov
ror
das
stos
mov
stos
call
test
clc
or
call
sbb
in
rol
mov
scas
test
lea
cmp
movs
test
fadd
pushf
xchg
cmp
fsub
mov
mov
sub
hlt
test
xchg
es
nop
mov
push
or
sbb
pusha
dec
jmp
cwde
arpl
std
iret
fldcw
mov
movs
fcom
repnz
lods
dec
dec
jne
mov
dec
loopne
mov
retf
lods
xchg
dec
add
push
inc
(bad)
cld
jae
clc
sbb
cmp
addr16
inc
in
pop
retf
mov
in
jmp
dec
xchg
cmp
push
addr16
and
jmp
into
fbstp
inc
test
mov
in
mov
inc
enter
retf
pop
and
sbb
fld
hlt
movs
pusha
adc
test
pop
repz
in
fnsetpm(287
inc
cmp
sub
test
push
cld
(bad)
pop
xor
push
lods
dec
dec
leave
fmul
sbb
dec
into
fisttp
push
out
add
rol
sar
test
mov
int3
push
jns
or
add
into
mov
adc
test
cmp
mov
pushf
mov
out
movs
dec
call
jae
or
or
popf
aaa
(bad)
nop
adc
cdq
or
(bad)
pop
jle
or
sub
and
aas
push
out
sub
aas
inc
mov
test
test
cwde
fdivr
dec
push
sahf
ins
adc
mov
into
into
outs
call
pop
(bad)
sbb
mov
mov
cmp
stos
cwde
enter
xchg
out
mov
sbb
cwde
cmp
test
or
movs
stc
sbb
cmp
aad
(bad)
jp
sar
pop
jbe
fnstenv
mov
mov
cmp
xchg
sbb
xor
(bad)
clc
call
outs
pop
sub
dec
popa
pop
hlt
mov
cmp
xchg
add
call
mov
and
dec
dec
cmc
sub
lahf
jecxz
(bad)
dec
call
jmp
scas
jo
dec
cmps
push
repnz
xor
repz
inc
call
xlat
rol
mov
xor
leave
test
push
call
imul
xchg
(bad)
mov
mov
or
js
push
cmps
cmp
mov
les
mov
sbb
jns
jb
cmp
mov
js
cmps
mov
cdq
je
cdq
retf
mov
cmp
add
(bad)
sbb
pop
push
sub
dec
xlat
clc
dec
imul
fsub
scas
or
shr
inc
pop
mov
aam
or
ds
add
scas
pop
pop
fsub
pop
je
mov
es
repnz
fimul
(bad)
dec
movs
int
ror
pop
ins
test
mov
ins
mov
sbb
mov
pusha
xor
or
fdivr
aas
aam
pop
xor
and
mov
push
mov
rcl
icebp
jle
cli
sbb
fwait
sub
pop
jge
hlt
mov
stos
fs
into
and
jns
xor
pop
test
mov
test
mov
xlat
push
xchg
dec
in
addr16
mov
mov
test
dec
inc
leave
clc
push
sar
ret
jge
push
or
jns
push
mov
mov
leave
idiv
imul
push
xchg
lock
outs
adc
push
test
iret
scas
data16
cwde
aam
or
es
out
pop
cmp
aam
ins
dec
(bad)
out
or
scas
sub
scas
jae
arpl
pop
ins
call
mov
cli
pushf
outs
out
or
jecxz
cmp
pop
into
jg
inc
sbb
(bad)
cwde
int3
(bad)
aaa
jmp
div
mov
dec
adc
inc
imul
sahf
dec
(bad)
mov
pop
add
das
cmc
das
inc
enter
dec
sbb
push
and
fsub
mov
mov
cmp
sub
sub
iret
int
add
js
push
lahf
push
call
mov
jns
je
test
dec
sar
popa
dec
les
popf
mov
and
and
pop
movs
dec
xchg
ja
je
cmp
or
dec
leave
pop
stc
add
hlt
pop
clc
xor
xchg
movs
test
(bad)
(bad)
sbb
test
cmp
lods
sub
pop
in
js
push
push
push
jge
mov
mov
push
xor
call
and
cmp
loop
dec
mov
js
repz
pop
mov
sahf
mov
fnstenv
dec
out
sbb
and
cdq
imul
movs
and
enter
mov
cmp
cmp
cdq
fwait
jns
mov
scas
mov
sbb
or
jmp
xor
inc
iret
push
fdiv
hlt
jp
mov
dec
outs
sbb
retf
adc
popf
jmp
jg
jne
mov
cmp
scas
dec
enter
dec
cmps
push
push
stos
mov
and
mov
add
add
out
cs
dec
pop
ja
popf
test
cmp
xor
jmp
sbb
mov
cmps
aas
inc
lods
dec
aas
lahf
push
xchg
jnp
mov
push
xlat
fist
jno
or
cli
int
pop
cmc
or
jle
imul
retf
push
xchg
pop
sbb
aaa
mov
pop
shl
aas
sbb
movzx
call
(bad)
retf
add
xor
pop
fcomp
ret
fmul
(bad)
scas
mov
dec
outs
movzx
push
sub
jnp
fldcw
cmc
fcomip
in
mov
xchg
gs
sahf
jge
jge
fs
mov
add
and
sbb
out
cs
jp
add
jnp
sub
push
push
pop
fcmovu
dec
outs
test
jnp
cwde
cmp
cmp
mov
addr16
sar
add
fdiv
aam
hlt
dec
push
enter
cmp
cmp
js
mov
dec
enter
add
clc
and
or
fmul
fcomp
scas
jo
sbb
mov
and
pop
rol
mov
cmp
fistp
mov
cmp
out
imul
add
cmp
cs
push
push
mov
ins
inc
clc
jp
xlat
mov
xchg
mov
mov
les
cmps
push
js
inc
cmp
lahf
mov
test
sub
dec
jmp
push
xor
pop
dec
xchg
cdq
mov
inc
cld
sub
push
int3
gs
jbe
pop
(bad)
fld
in
inc
iret
fld
test
dec
dec
addr16
sbb
cmp
sbb
jae
jecxz
scas
sbb
sub
aad
mov
ret
movs
mov
jl
fidivr
inc
fwait
pop
cmc
push
retf
pop
jb
adc
fnstenv
xor
mov
sahf
mov
in
mov
xchg
fisttp
cmps
sbb
pop
(bad)
sbb
pushf
mov
sbb
sub
js
in
addr16
cmps
ds
push
ror
push
and
push
lods
ret
fcom
xchg
mov
xchg
mov
jmp
shl
adc
lods
jge
jb
xchg
jge
sbb
push
adc
scas
mov
adc
dec
adc
cs
jae
inc
pop
addr16
pop
js
dec
ja
into
mov
cmp
cmp
jnp
pop
les
push
mov
movs
jb
pop
pop
push
stos
movs
jle
shl
mov
sti
repnz
into
lea
push
fcmovnb
retf
hlt
repz
dec
cmp
arpl
clc
cdq
inc
mov
scas
sbb
call
neg
int3
or
cli
in
lock
fsub
pop
or
mov
push
sahf
xor
push
xlat
daa
dec
out
jecxz
jae
or
mov
xchg
push
sbb
sbb
daa
fsubr
pop
mov
push
in
mov
leave
or
les
and
dec
hlt
out
fist
cmps
xor
sub
sub
call
stc
xchg
out
mov
push
mov
outs
jns
cli
and
add
retf
aam
fld
loop
mov
je
dec
jge
cmps
jg
test
sbb
add
lock
fcom
(bad)
mov
mov
imul
test
lods
jecxz
cmp
out
nop
popa
sti
stos
(bad)
shl
push
je
jbe
pop
(bad)
mov
fcomp
dec
mov
mov
dec
xchg
fistp
dec
mov
out
call
xor
sbb
cmp
sub
xchg
and
movs
bound
jp
add
cli
iret
cmp
xor
mov
test
dec
ficomp
mov
or
xchg
(bad)
mov
sbb
adc
dec
pop
sbb
push
mov
sub
je
mov
movs
mov
sub
sub
adc
shr
push
test
sub
add
jmp
repz
push
(bad)
jmp
push
es
cwde
jp
test
pop
ds
sbb
add
pop
pop
bound
(bad)
js
cwde
ficom
aad
mov
arpl
test
cmp
sahf
adc
(bad)
out
stc
or
ss
cdq
ins
mov
sbb
lahf
push
ficom
dec
retf
cmc
mov
in
enter
clc
or
or
adc
sub
jmp
clc
mov
xchg
or
pop
in
jg
sahf
out
lahf
or
lods
dec
not
push
retf
data16
dec
shl
test
ficomp
leave
sub
mov
xchg
sub
and
adc
stc
lods
sbb
sahf
push
popa
jmp
gs
cmp
sub
clc
ret
ins
pushf
imul
pusha
hlt
ss
mov
sbb
aas
mov
jns
lods
in
scas
fmul
(bad)
retf
cld
sbb
mov
or
inc
mov
sub
xor
in
dec
jne
sbb
adc
enter
xchg
push
cli
sub
stos
cmp
dec
lahf
fwait
push
cmp
or
aas
adc
jmp
fistp
jp
arpl
jns
pop
sbb
int3
or
or
pop
js
stc
push
mov
sbb
sub
stos
sbb
lods
push
adc
dec
leave
cmp
stos
and
inc
adc
push
mov
dec
sbb
xor
aas
mov
lods
es
xor
pop
data16
call
mov
add
minps
jmp
loop
cdq
sbb
imul
(bad)
stc
xor
fwait
jns
jle
sub
fld1
xchg
dec
int
push
jmp
js
sub
pop
(bad)
and
ins
ror
lods
jno
xchg
out
push
(bad)
pop
cmp
mov
cmp
fsub
iret
bound
nop
cmp
inc
mov
inc
cmp
das
inc
push
in
lods
lds
cmp
mov
pop
fst
(bad)
scas
add
and
pop
fmul
hlt
pop
stc
sbb
jmp
inc
fwait
icebp
mov
jo
in
ins
inc
mov
hlt
dec
mov
and
inc
and
xchg
clc
sub
movs
and
and
leave
daa
xchg
mov
push
mov
maskmovq
(bad)
clc
leave
lock
jmp
cwde
js
xor
test
sub
fadd
sub
int
cmp
test
sbb
mov
rol
jle
sub
add
sbb
inc
push
or
popf
js
div
das
jno
js
mov
jne
push
cmp
sbb
leave
imul
fcomp
jns
add
xor
mov
mov
push
or
in
cld
pop
mov
sub
mov
cmp
and
xlat
rol
xor
out
mov
jne
bound
cdq
cli
stc
adc
fs
aaa
call
retf
lock
fisubr
ins
test
imul
enter
or
lods
add
dec
(bad)
stc
mov
mul
or
hlt
inc
jae
mov
test
in
fstp
xor
cmps
pop
enter
rol
mov
inc
repnz
sub
push
(bad)
push
adc
out
push
popf
mov
inc
adc
test
xor
hlt
jmp
adc
ret
repz
js
(bad)
mov
imul
pop
stos
movs
inc
in
push
out
or
pop
leave
pop
and
fcomp
push
jne
jl
inc
push
xchg
dec
or
mov
jl
clc
sbb
inc
cwde
fnsave
call
push
jae
push
movs
fstp
aam
push
or
mov
jb
push
mov
clc
aad
fs
adc
daa
js
movs
pop
ror
(bad)
cmp
clc
or
in
cmps
mov
aam
enter
sub
clc
out
xlat
and
repnz
clc
mov
aad
test
mov
dec
cmp
(bad)
sub
xor
xor
xchg
xchg
jmp
xchg
jbe
cmps
push
push
cwde
imul
pop
add
pop
aam
por
sub
adc
mov
sub
imul
movs
fidivr
iret
inc
daa
fstp
fbstp
jl
cmp
and
and
jne
stc
xlat
mov
cmp
frstpm(287
push
and
hlt
fsubr
jne
outs
jmp
or
jns
loop
call
jmp
js
pusha
push
mov
cmp
and
lock
pop
xor
stos
test
mov
js
push
je
xor
movs
sub
mov
loopne
enter
cmp
fdivr
inc
fs
sbb
mov
test
sub
sbb
inc
mov
cmp
xor
call
push
pop
xchg
mov
es
push
and
aam
test
cld
mov
add
cmp
sub
fadd
push
jne
pusha
js
fmul
mov
sbb
add
or
or
xchg
js
in
dec
test
aam
sbb
cmp
enter
mov
outs
inc
jb
mov
inc
fs
out
sti
mov
inc
or
add
call
cmp
sbb
gs
mov
push
mov
fsub
adc
(bad)
aam
scas
mov
jno
fprem1
dec
xor
mov
in
imul
xor
adc
adc
sub
in
test
(bad)
mov
cdq
and
fs
inc
fnstcw
ins
fwait
adc
cmp
adc
leave
movs
pop
out
mov
(bad)
jns
add
and
pop
xor
(bad)
aad
leave
sbb
mov
inc
push
test
mov
rcl
xchg
iret
sbb
mov
adc
fldl2t
test
push
cmp
inc
out
movs
dec
dec
dec
mov
add
fst
ret
in
sbb
jne
out
jl
cdq
dec
arpl
xor
outs
pop
cdq
stos
cwde
xchg
clc
and
adc
rcr
sti
(bad)
hlt
xor
cmp
icebp
inc
cmps
test
cld
or
jmp
(bad)
std
xchg
data16
inc
and
sbb
mov
test
or
movs
xor
test
les
xchg
gs
jbe
jno
or
pop
pmaddwd
adc
lds
sub
xchg
pop
retf
jle
jb
or
xchg
imul
out
hlt
(bad)
in
fmul
add
mov
cwde
jne
xchg
jnp
je
nop
mov
ss
in
pop
loope
inc
mov
mov
xor
mov
push
xchg
sub
add
jne
fdivr
dec
mov
mov
push
dec
mov
fdivr
jmp
imul
fild
scas
cs
popf
rcr
test
sub
ret
daa
pop
loopne
test
push
jle
dec
aad
movs
gs
mov
(bad)
out
adc
in
sub
xor
xchg
movs
xchg
dec
cdq
mov
test
or
push
xchg
hlt
hlt
fidiv
lahf
repz
hlt
test
sub
fs
push
jmp
cmp
vunpcklps
(bad)
lods
dec
mov
mov
mov
arpl
dec
lea
int
sub
and
sub
enter
mov
imul
ficom
push
js
add
mov
inc
test
(bad)
pop
stc
stos
pop
data16
mov
mov
pop
add
pop
iret
repz
jbe
mov
inc
sub
fsubr
pop
mov
cdq
mov
pop
enter
sbb
and
enter
leave
push
or
mov
(bad)
(bad)
adc
xor
(bad)
and
adc
xor
dec
pop
dec
add
js
call
stc
fsin
jmp
clc
aad
fmul
shr
les
fs
imul
or
jmp
clc
jmp
adc
popa
mov
inc
jae
(bad)
fld
test
mov
int
in
hlt
stc
jb
(bad)
cmp
sub
inc
mov
movs
call
mov
push
fcmovu
or
les
sbb
(bad)
sbb
or
imul
dec
mov
fldenv
call
adc
fmul
mov
dec
ds
or
add
jmp
sub
jo
add
retf
je
hlt
push
into
xchg
jb
pushf
push
jg
jmp
cwde
jo
inc
jmp
xchg
lds
sahf
mov
mov
xchg
sbb
fstp
in
xchg
test
or
ret
or
test
jne
aad
add
add
xor
sbb
sbb
adc
test
cwde
(bad)
mov
pop
js
mov
sub
fs
jmp
(bad)
push
sahf
mov
fldln2
dec
fdivr
fs
mov
xchg
and
dec
sti
sbb
and
movs
push
loop
lods
test
jl
cs
jp
inc
sub
movs
fs
or
sbb
in
jbe
mov
test
popf
test
push
lods
lds
cmp
ret
and
dec
adc
dec
cwde
mov
fs
xchg
stos
pop
sbb
sti
out
shr
jne
xor
test
imul
pop
pop
mov
cmc
xchg
in
or
xor
or
aam
ins
movs
test
inc
cmp
push
fs
mov
inc
cdq
stc
fsubr
je
cmp
inc
inc
clc
dec
push
in
xchg
xchg
in
xor
adc
jb
inc
add
ret
xor
jnp
or
sub
aam
les
aam
sbb
add
test
push
pop
xchg
movs
cld
mov
push
lods
jae
add
xlat
sti
xchg
fist
push
(bad)
jl
mov
(bad)
jo
ins
sbb
daa
enter
in
sub
push
xchg
jbe
jne
and
cdq
cwde
xchg
je
clc
inc
cli
push
rol
jmp
push
mov
sub
sub
pop
daa
sahf
sub
addr16
sub
gs
inc
add
repnz
dec
lea
xor
mov
ins
les
and
xor
cmp
retf
sub
xchg
test
inc
jns
mov
test
out
sub
push
inc
jmp
sbb
retf
pop
out
push
movs
in
imul
jne
adc
inc
adc
leave
cmp
or
mov
les
mov
sbb
pop
mov
add
mov
jne
test
lea
mov
les
cdq
mov
pusha
inc
test
and
mov
shl
fcom
mov
pusha
enter
(bad)
enter
fnstenv
cmps
mov
dec
dec
mov
sti
dec
mov
stos
xor
adc
cli
adc
fistp
sbb
(bad)
shl
ins
inc
jnp
gs
mov
inc
adc
sbb
call
mov
inc
fdivr
test
addr16
out
idiv
test
les
add
test
push
jbe
jns
pop
sub
std
add
cld
push
aaa
fcom
pop
std
pop
sbb
gs
js
push
push
pop
and
add
add
mov
xor
add
sbb
push
inc
pop
sti
js
nop
loopne
mov
lock
cmp
aad
push
sbb
fmul
cwde
test
std
movs
push
inc
sbb
cmc
inc
js
dec
sbb
xchg
add
adc
inc
enter
cmp
cmp
stc
(bad)
enter
adc
ins
aad
dec
mov
lods
and
movs
cmps
ja
test
inc
or
cmc
js
aam
cmp
mov
jmp
jb
test
enter
movs
in
pop
cli
add
xlat
ins
cmc
dec
call
push
add
test
fmul
mov
inc
loop
jo
aad
sub
es
dec
cwde
dec
mov
xchg
test
jne
fistp
xlat
retf
test
sub
sbb
push
xchg
push
cmps
mov
mov
popa
test
das
fldenv
or
int3
bound
and
sahf
xchg
fiadd
je
cs
fs
jp
add
call
enter
mov
cdq
mov
adc
lds
ja
inc
xchg
lods
dec
jmp
or
sti
out
hlt
push
rcl
fistp
jns
push
sub
cmps
ret
lods
xchg
xchg
sub
or
clc
pop
jp
xchg
cmp
inc
fcmovnbe
hlt
stos
cwde
js
aam
push
inc
jg
outs
dec
ins
mov
fst
(bad)
popa
mov
jp
fidivr
mov
int
movs
jbe
inc
fstp
int3
mov
pushf
js
sbb
lods
pop
retf
or
fwait
stc
frstor
or
sahf
cmp
test
cmp
pop
jg
test
pop
aas
adc
loope
xor
iret
push
cld
cwde
cld
cld
retf
jg
jae
popf
push
sbb
stos
sub
add
cmp
sbb
sub
inc
jmp
push
std
pop
sub
dec
enter
test
jmp
cmp
ins
aas
sahf
out
enter
call
cmp
fsubrp
dec
sti
adc
mov
mov
dec
pushf
push
jmp
sub
jno
adc
sbb
mov
pop
dec
xchg
cmps
enter
inc
enter
les
or
ins
push
cmovl
es
fwait
mov
outs
mov
cmp
mov
pop
dec
fldenv
test
enter
scas
dec
loope
retf
jns
pop
mov
jb
fidivr
push
xor
lods
cmp
dec
out
mov
cmp
xchg
fwait
jle
sbb
je
push
push
or
pop
retf
(bad)
mov
jg
sbb
mov
push
icebp
sub
ds
and
clc
out
lea
inc
scas
(bad)
pop
int3
add
cwde
inc
fcmovne
push
idiv
sbb
or
mov
ficomp
loop
imul
inc
dec
ret
sub
adc
js
push
ja
daa
xchg
fisttp
and
addr16
jns
dec
test
sbb
je
mov
mov
cs
ret
cmp
mov
cmps
out
(bad)
ss
jmp
dec
int3
and
cmps
lea
mov
call
jbe
arpl
int3
jns
sbb
mov
cld
out
inc
cmp
test
rcr
or
retf
mov
mov
in
xchg
sbb
jle
js
xor
dec
ja
in
popa
dec
into
jmp
sbb
out
in
cmp
pop
mov
jp
jg
pusha
push
or
ja
fisub
or
add
leave
call
imul
shr
cmp
pop
mov
and
jg
cmc
dec
jecxz
hlt
mov
xor
and
fcom
aam
js
xor
or
sbb
mov
cwde
sar
and
jle
js
cdq
dec
inc
mov
dec
mov
ret
aaa
or
sbb
je
jno
call
mov
test
inc
sar
jl
fs
pop
jp
int
xchg
xor
jb
add
jnp
jnp
mov
ret
lods
pop
loop
imul
inc
sar
adc
pusha
mov
mov
pushf
add
ret
in
dec
xchg
push
repnz
(bad)
call
pop
fild
and
ds
sub
shl
int
in
daa
dec
ins
jmp
loope
clc
call
mov
test
stos
mov
test
adc
std
test
mov
pop
dec
cmps
mov
int3
sub
daa
clc
call
mov
leave
out
push
repz
inc
mov
inc
fimul
mov
add
clc
ds
sbb
or
sbb
popa
stos
cmps
aad
push
push
mov
sbb
sbb
aaa
outs
or
gs
mov
or
pushf
mov
sbb
jge
fdiv
sahf
scas
out
inc
out
push
xor
loop
xchg
and
sbb
mov
inc
stos
(bad)
jmp
inc
cmp
call
in
pop
push
arpl
(bad)
sub
xchg
cmps
retf
sahf
fcom
or
and
adc
retf
paddusw
jne
dec
std
jle
and
mov
fld
es
call
mov
hlt
mov
inc
mov
xlat
sbb
sub
push
or
sub
fstp
xchg
mov
fs
mov
xchg
sub
fnstsw
mov
mov
pop
movs
mov
jns
mov
enter
clc
inc
mov
cmp
data16
cmp
xor
cwde
lea
je
fmul
or
xor
or
push
adc
adc
je
scas
call
inc
pop
std
adc
dec
fist
adc
inc
mov
xchg
dec
fs
movs
fbstp
stos
mov
hlt
int3
js
adc
jecxz
inc
fnstsw
cs
push
mov
mov
push
stos
fsub
cmp
jp
sbb
(bad)
fidivr
sub
idiv
scas
mov
push
cwde
jl
out
mov
add
sbb
dec
je
int3
or
lock
movs
push
jns
dec
push
fsub
push
cmp
retf
shl
clc
stc
fmul
mov
and
cmc
js
test
nop
popa
test
xlat
dec
push
fstp
scas
aam
sub
cli
in
(bad)
aaa
cmp
test
push
mov
scas
jmp
sub
mov
cmp
data16
fcomp
movs
push
int3
or
sar
mov
cdq
mov
(bad)
push
cwde
mov
push
dec
popf
cmps
dec
jecxz
aaa
inc
stos
std
cmp
sub
pop
data16
enter
lea
dec
xchg
sub
pop
les
retf
or
jo
sbb
sub
add
aaa
mov
test
mov
jns
pop
sub
aaa
adc
in
sti
(bad)
je
dec
fidiv
call
test
(bad)
mov
sahf
mov
push
mov
(bad)
call
sbb
and
icebp
lea
or
aaa
ror
data16
xor
push
repnz
adc
jp
std
and
pusha
cmps
aam
mov
fnstcw
lods
push
test
aaa
push
enter
pop
sub
aaa
stc
icebp
clc
aaa
hlt
je
mov
xlat
call
xor
inc
call
stc
repnz
fnstcw
call
mov
lahf
xchg
push
addr16
ficom
(bad)
sbb
pop
inc
mov
mov
xlat
retf
push
add
jg
addr16
js
mov
dec
cmc
xchg
fdivr
jmp
mov
jg
jbe
or
mov
test
jmp
int
inc
jae
or
pop
and
pop
bound
jns
or
call
cmp
mov
sub
pop
mov
jle
xchg
out
xchg
dec
movs
repz
sub
dec
lods
and
aaa
lods
sti
enter
test
sbb
pop
push
mov
and
aaa
in
or
push
test
inc
xchg
cld
ja
jg
xchg
dec
dec
cdq
popf
mov
popf
clc
jecxz
sbb
push
aad
(bad)
cmp
push
jp
mov
imul
jle
test
dec
lods
push
add
sub
fldcw
loop
jmp
leave
cmp
imul
mov
sbb
cmp
add
(bad)
pop
ret
inc
mov
cmps
mov
xor
mov
jnp
push
xchg
push
mov
popf
stc
pushf
sub
(bad)
fidivr
push
shl
imul
leave
push
or
push
pop
movs
sub
adc
into
sub
pop
ficomp
mov
call
mov
lea
scas
js
es
jnp
gs
movs
jno
sub
mov
sub
pop
ss
imul
fcmovbe
pop
repnz
retf
sbb
sub
mul
sub
aaa
mov
imul
popa
mov
(bad)
outs
(bad)
popf
fcom
pop
jne
pop
mov
repnz
mov
ficomp
mov
mov
cmp
imul
mov
cmps
icebp
pop
cmp
xchg
mov
fimul
mov
test
retf
push
(bad)
outs
cmps
and
(bad)
sub
mov
cmp
push
xchg
ret
sub
push
cld
leave
or
push
(bad)
cmp
dec
jne
adc
jns
xor
cmps
sub
push
in
(bad)
or
sub
leave
or
(bad)
div
popa
cdq
popf
push
fdivr
xchg
xchg
pop
gs
pop
shr
aaa
fstp
mov
clc
cmp
sub
xlat
sub
mov
xor
push
and
mov
int
dec
popa
data16
jnp
jmp
mov
mov
mov
push
cmps
push
add
push
mov
pop
push
scas
and
sub
xchg
xchg
icebp
xlat
out
inc
mov
movs
not
stc
fcom
mov
(bad)
jno
test
inc
(bad)
ds
xor
sub
retf
mov
adc
in
leave
repz
push
mov
dec
ret
ins
pop
inc
leave
hlt
out
in
pop
mov
jb
dec
lods
sub
js
cmp
fsubr
test
mov
movs
add
out
pop
call
inc
test
jge
or
sub
or
mov
xor
xor
in
les
clc
daa
out
mov
sub
mov
mov
aaa
pop
out
xlat
mov
jno
pushf
dec
sub
sub
test
push
cmp
inc
cmp
or
mov
add
enter
retf
or
sub
fcmovu
adc
inc
mov
xchg
call
mov
mov
mov
in
dec
retf
inc
dec
lea
stos
stos
inc
and
sub
dec
push
ds
jns
je
shl
fisubr
retf
mov
add
test
sbb
adc
retf
sbb
test
push
mov
dec
inc
enter
push
scas
sbb
pushf
xchg
or
fnstenv
iret
retf
push
mov
in
sub
sub
inc
push
and
dec
jno
dec
inc
adc
pop
ss
dec
aam
dec
fidivr
in
scas
inc
push
iret
dec
outs
dec
push
cmp
fmul
test
adc
lds
shr
out
into
adc
gs
sub
sub
dec
sbb
outs
sub
sahf
mov
mov
pop
outs
dec
push
loope
leave
adc
lods
and
inc
aad
dec
stos
daa
aaa
dec
jmp
cmp
xor
adc
sbb
sbb
sbb
mov
cmp
cmp
ror
jmp
in
adc
sbb
pushf
lods
mov
mov
xlat
scas
leave
dec
cwde
and
jp
push
mov
push
or
sbb
cmp
xor
mov
push
xlat
mov
cmp
pop
f2xm1
cmc
nop
sbb
cmp
aam
cmp
loop
push
test
lods
cld
shl
mov
push
sbb
adc
jge
je
jge
push
or
push
xor
jbe
cmp
jbe
enter
popf
adc
mov
cmc
push
std
jo
cmp
call
sbb
push
push
sahf
fstp
dec
pushf
push
ror
outs
popf
xlat
lods
aas
pop
adc
cwde
inc
call
or
(bad)
jns
fistp
push
xchg
in
je
pop
aad
cmp
aad
jle
mov
nop
fistp
mov
mov
lods
jp
and
pop
imul
cmp
pop
test
rcl
or
hlt
cmp
cmp
popf
js
sbb
jmp
cmp
sar
pop
adc
cmp
stc
lahf
stc
pop
adc
cmc
ja
fbstp
mov
cmc
push
sbb
mov
jl
daa
cli
mov
adc
addr16
xor
jmp
xchg
idiv
jge
jg
push
not
mov
add
pop
mov
sbb
sar
fld
ja
jmp
sahf
cld
aaa
push
bnd
adc
lock
pop
jp
mov
jp
fucomip
std
rcl
jge
and
xor
scas
cli
fistp
(bad)
mul
neg
jnp
jg
cdq
(bad)
jmp
push
mov
mov
pop
adc
mov
xchg
lods
neg
adc
aas
add
pop
mov
mov
jg
adc
add
(bad)
popa
sbb
mov
jo
outs
mov
mov
fs
jg
sar
mov
xor
ss
shl
cmps
mov
mov
xchg
test
inc
jne
jmp
cmp
dec
call
pusha
shr
(bad)
or
pop
xchg
fwait
(bad)
retf
jne
repnz
pop
out
cmps
fiadd
data16
or
mov
outs
xchg
ss
sub
mov
test
mov
xchg
jne
dec
jnp
add
xchg
mov
mov
sbb
arpl
pop
cmp
stc
mov
jl
dec
pop
jmp
ret
cmp
lock
mov
out
pop
xor
hlt
jbe
mov
sub
fidivr
neg
mov
cld
aam
idiv
cmp
fwait
mov
cmp
idiv
ins
std
aam
xchg
mov
push
neg
mov
mov
push
jl
rcr
fild
push
stos
cmc
xchg
mov
(bad)
cwde
std
sbb
sub
xor
xchg
cli
xchg
jp
mov
pop
lods
push
mov
mov
mov
cmp
ja
cmove
xchg
ret
pop
mov
aam
xor
xor
adc
push
jmp
rcr
cmp
mov
push
sub
fdivr
jmp
push
jbe
inc
pop
loop
js
repnz
push
cmp
ins
push
pop
adc
jg
test
mov
jl
sti
sar
sar
shr
call
push
mov
push
rcr
pop
leave
jmp
sub
sar
clc
popf
popa
xlat
stos
add
push
aaa
pop
mov
call
daa
sbb
aaa
push
cmp
ja
jg
cmp
sbb
jns
add
add
mov
push
in
cmp
aas
xchg
andps
xor
or
inc
xchg
pushf
retf
jl
add
sub
aam
mov
hlt
sub
aas
scas
sti
pop
iret
inc
and
pusha
add
nop
out
(bad)
stos
cmc
daa
jmp
adc
dec
out
push
xchg
fisttp
or
outs
jmp
iret
shl
call
add
iret
push
andps
popf
add
or
mov
mov
shl
shl
inc
add
rcl
loopne
mov
and
outs
xchg
(bad)
bound
fwait
(bad)
nop
inc
nop
dec
sbb
(bad)
cmps
add
fwait
retf
nop
ds
fiadd
jns
pop
aam
arpl
js
push
iret
fcmovnb
adc
rcr
sbb
js
cmp
mov
js
js
adc
cmp
mov
js
or
push
(bad)
adc
stc
je
(bad)
mov
test
adc
push
push
xchg
inc
fld
mov
sbb
push
mov
imul
aam
js
xchg
mov
xor
push
outs
adc
nop
pop
push
bound
(bad)
push
dec
and
mov
inc
mov
cs
jle
dec
jo
nop
scas
sbb
fidivr
xor
mov
stos
fisttp
xchg
loop
and
shl
adc
adc
adc
nop
scas
cmp
and
cs
(bad)
push
dec
fcmovne
cs
fsubr
(bad)
or
push
outs
ins
push
xchg
dec
popf
dec
dec
ja
outs
xor
popf
or
fstp
dec
nop
mov
jbe
dec
cmp
and
fsub
push
dec
adc
fwait
sbb
outs
frstor
push
fcmovu
inc
sbb
sti
lock
fld
arpl
test
adc
cmp
(bad)
pop
inc
xchg
in
mov
imul
xchg
cmp
push
int3
mov
or
out
cs
sbb
in
(bad)
jle
cmps
mov
inc
mov
jge
call
in
mov
mov
ja
and
ja
loop
dec
xlat
sbb
in
retf
pop
dec
jno
iret
sar
pushf
(bad)
idiv
jge
jns
out
call
mov
rol
(bad)
jg
mov
cwde
cmps
idiv
cmc
fs
cmp
idiv
icebp
sti
push
cmp
ja
mov
jle
aaa
es
sahf
and
retf
mov
jmp
loop
push
not
mov
push
cli
mov
mov
test
sbb
cmp
lea
push
mov
ret
(bad)
mov
aaa
push
mov
add
inc
mov
or
shl
push
mov
cmp
mov
sub
es
push
js
mov
in
cld
push
cmovbe
jnp
popf
xlat
call
sub
movs
cwde
adc
jecxz
test
and
mov
retf
add
pop
fsubr
dec
imul
and
in
jne
sbb
lahf
pop
inc
mov
scas
lea
mov
fcmovnu
xor
test
sub
mov
in
cld
movs
sub
cmp
mov
les
mov
mov
xchg
sub
cdq
aam
pop
mov
(bad)
adc
sub
jecxz
and
test
call
jmp
mov
adc
mov
dec
fidivr
imul
imul
cmp
cwde
mov
sbb
sub
jl
jecxz
cmp
icebp
(bad)
mov
sbb
sub
mov
dec
lds
mov
es
test
pop
mov
cmps
bound
addr16
sub
inc
(bad)
pop
adc
mov
jmp
loopne
loopne
mov
bound
pusha
sub
dec
mov
mov
lods
xor
fsubr
and
icebp
stos
cwde
mov
jmp
mov
stos
dec
loopne
stos
in
or
cli
fs
(bad)
mov
cli
push
(bad)
sub
scas
mov
lods
cmps
(bad)
mov
xchg
jl
mov
scas
mov
jl
pusha
pop
jo
pop
mov
ds
push
cwde
xor
push
test
loopne
push
push
mov
test
dec
retf
push
mov
pusha
or
pop
mov
sbb
dec
mov
hlt
out
mov
stc
imul
dec
jmp
pop
test
mov
sub
sub
call
push
lock
dec
xor
fisub
stos
arpl
ret
add
dec
ins
xchg
ret
inc
sub
(bad)
xchg
out
xchg
je
into
fldenv
int
addr16
push
sbb
xchg
dec
mov
(bad)
or
fbld
in
out
ret
iret
sub
or
ret
imul
jae
and
inc
mov
addr16
ret
inc
inc
iret
add
out
rol
scas
out
sti
out
dec
and
mov
(bad)
sub
mov
jo
into
cmps
iret
std
add
jge
or
xchg
test
ret
xchg
(bad)
mov
(bad)
cmp
add
cs
shl
add
sar
dec
leave
stos
mov
mov
pop
int
pop
add
inc
addr16
test
dec
pop
(bad)
sbb
(bad)
fwait
(bad)
outs
aaa
aad
sub
add
add
mov
stos
loop
das
inc
lds
es
sub
ss
xchg
cmps
fist
outs
mov
iret
cmps
pushf
dec
movs
ins
add
push
adc
(bad)
loopne
stc
inc
push
push
mov
lods
icebp
and
mov
retf
outs
xchg
movs
int3
mov
dec
jbe
push
iret
ss
(bad)
pop
jbe
push
fbstp
(bad)
push
iret
ss
push
(bad)
jbe
push
dec
mov
cmp
out
(bad)
and
iret
push
(bad)
jbe
sub
es
jne
(bad)
push
iret
ss
ss
(bad)
fbstp
ss
jno
pop
push
(bad)
jbe
push
dec
mov
push
(bad)
jbe
push
iret
ss
push
pop
out
cs
es
xchg
test
cmp
fist
out
dec
iret
(bad)
daa
ret
(bad)
jb
es
shr
cmps
cmp
ret
out
inc
les
(bad)
dec
pop
fld
(bad)
fwait
leave
lea
bswap
retf
(bad)
(bad)
(bad)
mov
cmps
pop
(bad)
dec
ja
cs
cmc
xlat
cmp
pop
int3
dec
lock
int
mov
enter
in
pop
imul
call
lea
or
or
and
into
xor
or
mov
dec
shl
je
xor
sub
pushf
cmc
xor
fmul
sahf
clc
int3
inc
sub
popf
add
xchg
movs
loopne
sub
loopne
cdq
movs
xor
or
mov
adc
hlt
sub
mov
hlt
cld
dec
je
push
aam
pop
pop
mov
bound
call
adc
xor
add
pusha
or
mov
(bad)
pop
in
dec
lea
pop
or
iret
or
push
cwde
dec
push
ret
pop
add
dec
sub
inc
xor
retf
sbb
int3
mov
test
movs
out
or
cmps
add
jg
push
dec
je
adc
popa
leave
dec
or
or
call
xor
adc
sub
or
cmp
in
mov
pop
icebp
mov
lahf
or
pop
cld
or
add
js
push
(bad)
or
add
lods
adc
jge
adc
xchg
push
cdq
push
out
or
fdivr
inc
adc
push
in
leave
je
fcomp
or
outs
or
sub
fst
(bad)
jmp
retf
mov
lds
pop
popa
mov
pop
fcom
add
shl
push
sbb
adc
ins
mov
fcom
mov
xchg
lods
mov
shl
or
int3
stc
int
pop
xor
cdq
jg
mov
mov
mov
mov
sbb
or
in
add
inc
or
dec
adc
xor
inc
repz
adc
or
pop
jl
xor
add
and
dec
hlt
cld
test
dec
push
or
in
and
dec
aad
hlt
or
out
aam
sar
into
adc
push
add
outs
mov
stos
mov
inc
loopne
std
inc
imul
mov
scas
jp
mov
(bad)
add
inc
xchg
lods
out
imul
sub
add
dec
lods
add
lock
aad
mov
mov
inc
fild
mov
or
adc
in
mov
sub
dec
push
dec
mov
jmp
add
sub
mov
add
jmp
lahf
scas
and
jmp
pop
cs
adc
lahf
jmp
mov
stos
and
loopne
add
pop
jle
push
movs
retf
fs
call
iret
sub
mov
inc
aad
mov
out
scas
iret
mov
aad
mov
(bad)
fsub
pop
rcr
push
pop
mov
mov
push
mov
mul
mov
out
mov
stos
adc
pusha
pop
pusha
mov
sub
test
pop
aad
and
mov
and
pusha
push
jne
jmp
aad
mov
inc
cmc
jmp
mov
jecxz
mov
imul
mov
sub
retf
mov
sub
lock
pusha
loope
mov
mov
push
mov
in
push
mov
xchg
std
and
retf
inc
cmp
xchg
jl
fnstenv
mov
jno
js
xor
js
xor
test
pushf
cmp
icebp
fsub
mov
inc
les
int3
add
and
ret
in
mov
jp
xor
(bad)
in
lahf
loop
sbb
call
jmp
fsubr
sbb
mov
in
sub
addr16
inc
lods
xchg
lods
mov
xchg
lods
hlt
lods
xchg
lods
mov
xchg
lods
je
xchg
lods
mov
xchg
lods
hlt
lods
xchg
lods
mov
xchg
lods
je
xchg
lods
mov
xchg
lods
hlt
lods
xchg
lods
mov
xchg
lods
je
xchg
lods
mov
xchg
lods
hlt
lods
xchg
lods
mov
xchg
lods
je
xchg
lods
mov
xchg
lods
hlt
lods
xchg
lods
mov
push
sbb
dec
dec
sbb
jecxz
leave
(bad)
mov
out
in
sub
jo
in
fild
sub
cdq
jg
cmps
inc
adc
and
mov
mov
(bad)
mov
mov
push
mov
dec
(bad)
int3
aaa
mov
dec
pop
lock
test
xchg
jge
xchg
cli
push
fmul
in
sub
cmp
mov
aaa
cmps
inc
enter
popf
test
sbb
pushf
pop
fisubr
aam
mov
and
hlt
xchg
out
cld
stos
pop
jmp
(bad)
nop
jmp
cmp
xchg
cmps
mov
sahf
push
movs
push
jbe
push
nop
fsubr
pop
sbb
cmps
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
xor
xor
xor
push
xor
xor
xor
xor
xor
xor
xor
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
rcr
cli
jmp
mov
mov
fsub
icebp
fs
ror
out
xlat
adc
(bad)
icebp
xchg
retf
mov
in
mov
loopne
push
mov
mov
rol
shl
jmp
mov
repz
mov
mov
mov
shr
pop
hlt
xlat
ret
mov
mov
mov
(bad)
cmps
fld
xlat
cmps
fcomip
cld
adc
xchg
xchg
(bad)
jmp
out
cmc
mov
retf
or
aad
test
neg
cmps
rol
(bad)
cld
xchg
adc
xlat
cmps
mul
rol
iret
mov
repz
ficom
je
cmps
dec
xor
enter
cmps
addr16
pop
xor
jecxz
jbe
dec
pop
pop
inc
outs
data16
inc
jb
and
xor
xchg
inc
leave
sti
mov
or
pop
push
int3
gs
cmp
inc
dec
test
mov
js
add
mov
test
cmp
sbb
sbb
pushf
scas
out
mov
xchg
sbb
add
xor
xor
mov
mov
xor
xor
cld
mov
scas
out
in
cmp
ss
push
inc
inc
out
(bad)
mov
pushf
mov
sub
sub
mov
movs
pop
and
sub
shl
dec
sub
and
push
dec
pushf
mov
inc
xor
jb
pushf
lods
mov
mov
mov
push
pop
and
gs
in
ror
pop
frstpm(287
fwait
xchg
dec
adc
dec
or
sbb
push
rol
add
push
mov
jne
xor
adc
adc
retf
shl
push
daa
inc
sub
retf
shl
pushf
mov
aad
fdiv
rol
xchg
dec
push
jo
adc
dec
mov
sub
les
push
sub
and
test
(bad)
pop
pop
adc
dec
fmul
aad
sbb
pop
or
push
dec
sahf
fwait
std
jmp
sbb
js
jb
gs
in
(bad)
ret
jle
add
(bad)
retf
out
test
into
(bad)
not
pop
pop
imul
fcom
retf
ins
inc
ins
inc
jg
jno
ret
iret
ret
loop
js
sub
xor
(bad)
vpsubusw
into
mov
jge
xor
int3
inc
call
push
or
test
mov
rcr
jmp
mul
mov
jne
mov
push
xchg
cwde
std
mov
or
(bad)
mov
sahf
in
in
test
int3
dec
in
call
jl
outs
nop
clc
push
push
mov
add
dec
clc
pop
push
call
in
push
jmp
cmp
xor
call
add
mov
mov
leavew
fmul
mov
into
push
jecxz
sub
mov
sti
pop
(bad)
ss
icebp
enter
xchg
bound
jb
aaa
mov
scas
sub
sbb
test
xchg
push
shr
adc
mov
mov
sahf
dec
test
mov
leave
inc
fcmovnb
push
shl
gs
repz
inc
shl
cmc
aaa
(bad)
call
push
stos
pusha
sar
add
test
test
iret
das
cmc
xor
xor
out
mov
push
mov
adc
stos
xor
stos
cmp
mov
loopne
mov
repz
ja
jno
aam
in
(bad)
dec
mov
push
enter
lods
push
cmps
mov
mov
clc
cmp
out
mov
push
mov
leave
retf
push
mov
aam
enter
xor
mov
mov
(bad)
sub
mov
(bad)
es
sub
popf
pop
mov
test
pop
into
pop
stos
aam
mov
inc
(bad)
in
inc
into
daa
stos
dec
iret
test
shl
(bad)
dec
jmp
and
jbe
push
shr
xor
inc
loopne
and
adc
mov
mov
mov
jns
xchg
cdq
fbstp
pop
addr16
mov
(bad)
cli
fldcw
inc
push
adc
xchg
mov
aam
xchg
gs
jo
pop
mov
repz
jno
push
xchg
rcr
ret
in
fidivr
bound
add
loopne
mov
stos
gs
inc
add
xchg
shl
scas
enter
mov
jle
arpl
xchg
loopne
ror
call
jg
sub
popf
cdq
mov
pop
bound
mov
(bad)
stc
rol
fisub
js
push
xor
cwde
in
ret
enter
xor
push
sub
add
pushf
cwde
add
arpl
rol
cli
popf
sti
mov
jae
adc
cwde
rol
xchg
lds
bound
pop
data16
(bad)
in
lock
sar
imul
in
cmp
mov
adc
sbb
in
ror
popa
pop
ins
cmp
ror
mov
mov
push
dec
js
sub
retf
pushf
pushf
pop
sub
call
xchg
jg
dec
push
inc
mov
out
in
rcr
(bad)
cwde
mov
sbb
mov
(bad)
rcl
jne
pop
mov
xlat
lds
outs
pop
gs
mov
fld
and
xor
sbb
dec
ins
push
sub
cmps
mov
(bad)
aam
push
jp
and
cmp
add
call
sub
sbb
ja
dec
push
mov
int3
nop
cmps
push
adc
popa
adc
inc
push
pusha
(bad)
rcl
out
push
pop
inc
das
adc
addr16
pop
std
retf
mov
adc
sub
rcr
xor
pop
dec
inc
jb
xor
mov
mov
nop
dec
cmp
outs
sub
mov
inc
push
dec
and
inc
leave
nop
xchg
pop
sbb
push
imul
add
repz
outs
push
inc
adc
jecxz
add
jmp
or
pop
and
adc
pop
add
xchg
shl
push
mov
mov
inc
push
jbe
fiadd
xor
add
cwde
imul
inc
rcpps
push
jb
(bad)
retf
shl
adc
xor
sub
mov
es
push
sbb
push
push
ret
mov
pop
das
dec
and
dec
outs
mov
add
inc
add
push
sub
dec
repz
push
cmp
and
jne
jnp
int
leave
nop
addr16
add
push
repz
add
rcr
mov
jl
mov
fwait
out
out
xchg
inc
mov
inc
(bad)
jae
mov
int3
ins
stc
add
and
inc
out
jnp
js
(bad)
add
or
popa
pop
call
iret
pop
movs
pop
xchg
or
adc
push
mov
sbb
(bad)
shl
pop
scas
and
xor
inc
iret
ja
and
pop
pop
xchg
pop
xchg
rol
pop
test
stos
cmp
jg
inc
push
mov
call
ret
push
rol
sahf
out
cmp
lea
push
aam
push
mov
int
jmp
push
ret
jbe
movs
pop
leave
repnz
in
jnp
push
fnstenv
neg
iret
sbb
mov
into
add
in
jle
mov
lods
xchg
inc
lock
cmps
or
xchg
push
add
enter
add
push
jmp
(bad)
in
mov
ror
xchg
arpl
int
leave
cmc
arpl
add
inc
repz
pop
fmul
sbb
xor
ret
add
cmp
sbb
stc
adc
mov
add
adc
add
and
pop
sbb
and
sbb
inc
mov
push
imul
mov
mov
ror
mov
loop
rcl
push
test
repnz
ret
fidiv
and
fimul
out
ss
out
stc
adc
xlat
push
std
push
cmp
std
inc
mov
or
or
icebp
sub
(bad)
adc
push
xchg
or
xor
sbb
lods
xor
pop
mov
and
cs
and
std
xor
dec
jmp
sub
push
xchg
xor
pop
sub
clc
push
test
jmp
dec
add
aas
out
inc
sti
sub
sbb
fild
cmp
add
and
dec
std
push
sbb
ins
ror
loope
repz
xchg
outs
rcr
addr16
aad
mov
dec
clc
add
pushf
sub
aad
aas
dec
jbe
xor
add
out
mov
outs
arpl
jnp
push
inc
and
mov
aas
pop
adc
cmp
iret
out
mov
add
xor
pusha
inc
dec
arpl
xchg
les
inc
jl
pop
sub
dec
jae
add
adc
jnp
cs
push
data16
adc
mov
dec
data16
popa
xor
adc
jno
push
add
inc
push
push
add
pop
push
push
inc
pop
push
aam
scas
push
add
jo
jae
outs
add
in
test
cmp
cmp
push
movs
movs
lods
add
pop
imul
inc
add
dec
inc
inc
cmp
pop
inc
outs
cdq
lods
mov
inc
push
cs
sbb
ja
dec
pop
ins
pop
push
add
mov
push
pop
add
add
cmps
in
cmps
pop
sbb
outs
sbb
das
pop
ins
sub
mov
(bad)
arpl
add
pop
ins
and
xchg
inc
adc
js
pusha
inc
mov
fs
jae
sub
jns
push
jae
mov
inc
inc
sbb
adc
arpl
xor
push
mov
xchg
xchg
sti
mov
fwait
aaa
jae
adc
test
mov
push
clc
lock
loope
fstp
mov
xor
movs
mov
aaa
add
out
cwde
mov
jo
stc
lds
repnz
mov
rcr
and
xor
repnz
not
rcl
repz
lock
cli
cld
add
xchg
xchg
jecxz
fsubr
rcl
mov
es
out
xchg
loopne
adc
xor
rcr
iret
iret
into
xor
or
popf
(bad)
fcmovbe
lods
sbb
or
xchg
loope
mov
rol
in
(bad)
xchg
popa
inc
fisub
call
xchg
xchg
mov
arpl
sar
xchg
test
mov
fsub
loopne
ret
loope
mov
iret
cdq
lahf
cs
mov
(bad)
adc
nop
lea
fcom
pop
aad
mov
mov
adc
xlat
pop
cmps
sbb
daa
mov
dec
test
push
xchg
bound
sub
inc
xchg
push
mov
stos
nop
or
(bad)
fldenv
jno
ss
out
push
test
mov
sub
sub
mov
rcl
push
mov
sahf
sub
in
cmps
or
imul
popf
fnstenv
jae
sub
and
mov
retf
das
(bad)
mov
mov
rol
adc
jbe
and
nop
or
push
stos
and
push
mov
xor
daa
mov
test
sub
and
lea
and
jb
and
leave
test
jb
adc
mov
rcl
enter
lods
aaa
(bad)
jo
adc
fmul
dec
stos
pop
sbb
test
lods
mov
dec
pop
xor
xchg
sub
jb
push
xchg
or
or
fidivr
into
and
or
add
push
in
lock
repz
jo
jae
sbb
pop
repnz
and
add
rcr
cld
dec
repnz
into
mov
xor
and
cmp
xor
(bad)
fs
xor
and
sbb
or
adc
push
(bad)
dec
jecxz
xor
adc
xlat
or
and
in
stc
test
sti
and
stc
imul
mov
fnsave
test
dec
shl
stc
pop
shl
retf
xor
loopne
rol
clc
jno
or
mov
cmp
ja
scas
icebp
inc
fstp
(bad)
sub
sbb
loope
shl
sbb
xor
sub
jnp
pusha
lds
sub
add
arpl
jp
sub
add
aas
(bad)
and
or
push
fwait
pop
shl
jge
inc
ret
adc
mov
xlat
and
pop
ret
inc
lds
loope
and
mov
ja
sub
test
add
pop
rcl
loop
imul
push
repz
inc
mov
(bad)
cli
ds
dec
icebp
xor
pop
xor
clc
xor
stos
mov
xchg
or
div
icebp
mov
mov
xchg
mov
out
lods
call
fbld
fcomip
xlat
xchg
xchg
mov
jmp
add
(bad)
(bad)
hlt
scas
hlt
int
retf
jmp
mov
test
sbb
mov
mov
mov
test
xchg
lods
fisub
movs
add
repz
leave
loopne
nop
mov
stos
mov
test
mov
nop
mov
mov
aad
test
xchg
add
icebp
(bad)
jmp
mov
scas
nop
mov
mov
mov
xchg
mov
lods
sub
mov
loopne
icebp
xchg
mov
out
stos
xchg
int
shl
mov
sti
or
movs
cmp
inc
mov
cmps
mov
pushf
mov
and
xchg
out
test
mov
lahf
stos
shl
mov
xlat
stos
xlat
xor
mov
movs
fdivp
les
retf
mov
mov
lods
xchg
test
in
(bad)
hlt
mov
mov
mov
mov
sub
pop
aas
gs
bound
pop
sbb
sub
add
adc
sub
or
push
maxps
adc
adc
add
pop
pop
push
sbb
push
sbb
sbb
and
and
sbb
push
add
imul
add
xor
sbb
and
aaa
dec
sbb
and
das
outs
adc
and
inc
pop
ficomp
ds
sbb
adc
aas
push
cmp
ja
adc
jns
cmp
inc
ja
or
ins
ds
and
ins
adc
dec
shl
ins
ins
inc
es
cmp
and
es
outs
arpl
add
jg
sub
adc
add
jp
das
inc
fs
xor
or
aas
bound
push
jno
punpckhbw
push
bound
movs
bound
dec
jns
sbb
pusha
sub
pop
adc
mov
jae
pop
xor
sub
dec
push
mov
xor
outs
xor
xchg
add
(bad)
adc
sub
mov
rcl
ins
(bad)
ds
inc
rol
mov
adc
repnz
pop
push
lods
jmp
adc
sub
add
push
addr16
xchg
push
out
rol
push
xchg
in
retf
and
ins
call
push
sub
fiadd
xlat
push
enter
jo
mov
mov
in
xlat
repnz
and
and
xor
and
mov
adc
add
or
add
sbb
xchg
pop
loope
xchg
or
push
repnz
inc
sti
dec
jo
clc
cmp
add
and
push
inc
pop
mov
push
mov
xchg
jne
aas
and
loope
add
inc
enter
rol
aaa
shl
test
mov
jbe
repz
dec
jge
push
movs
xor
push
and
jae
adc
fld
je
loope
ja
adc
add
shl
and
movs
adc
adc
push
dec
and
rol
popa
hlt
jl
add
pop
adc
xor
in
add
je
jbe
mov
mov
inc
fs
cmc
add
sti
sti
adc
inc
xchg
pop
rcr
neg
(bad)
xor
sub
mov
push
hlt
jecxz
add
out
xor
ret
popa
lds
mov
inc
loopne
adc
push
sub
lahf
and
jb
and
retf
cdq
xor
sub
mov
pop
push
xor
icebp
movs
arpl
rol
xor
add
hlt
adc
xchg
fs
sbb
add
pop
inc
test
popa
pop
add
or
pop
mov
sbb
je
push
sub
inc
jmp
mov
inc
movs
push
cmovbe
aaa
ror
arpl
adc
add
movs
out
xchg
xchg
xchg
xor
out
iret
pop
jo
mov
xchg
repnz
fs
xchg
push
ret
add
movs
mov
jmp
pop
out
ja
das
and
inc
loopne
push
cmp
cmc
xor
push
hlt
push
hlt
xor
arpl
daa
ret
es
push
cdq
data16
inc
xchg
nop
dec
jae
shl
inc
push
adc
adc
clc
xchg
mov
push
and
dec
adc
dec
mov
je
push
imul
inc
test
push
push
loop
add
jno
aam
push
push
pop
sub
adc
or
push
pusha
pop
jno
push
cdq
add
mov
inc
pop
mov
push
sub
and
and
dec
gs
pop
(bad)
ins
adc
add
test
repnz
ss
inc
pop
lods
dec
inc
push
push
es
pop
repz
xor
js
and
xchg
imul
pop
inc
ret
dec
dec
inc
pop
addr16
movs
dec
js
gs
shl
push
and
rol
imul
adc
push
xor
inc
add
je
les
pop
jl
xchg
and
sbb
adc
jl
cmp
xchg
inc
xor
pop
push
aad
test
jbe
outs
sbb
push
push
mul
pushf
daa
bound
cmp
xchg
out
jle
pop
inc
(bad)
imul
lods
daa
inc
push
inc
lahf
jo
and
retf
dec
test
ja
dec
xchg
mov
pop
jg
push
jg
or
push
xor
arpl
movs
adc
ins
rcl
inc
inc
daa
push
xor
test
addr16
push
mov
jo
(bad)
rol
dec
je
xor
xor
push
pop
jae
inc
add
fbstp
and
xchg
mov
rcl
ds
idiv
jns
push
arpl
adc
pop
add
pop
adc
push
xchg
mov
loop
sub
xchg
(bad)
or
mov
call
push
rcl
xor
xchg
into
rcl
lds
push
add
adc
aad
rcr
add
imul
fidiv
dec
(bad)
arpl
push
jae
neg
popf
sbb
shl
push
out
xchg
xchg
rol
loopne
call
stos
sbb
pop
and
daa
arpl
mov
popa
ret
shl
loopne
mul
sbb
(bad)
xor
xor
jb
adc
mov
inc
pusha
arpl
mov
push
xchg
fdivr
repz
loope
inc
dec
jbe
mov
mov
(bad)
and
mov
enter
pushf
mov
pop
push
xlat
push
xchg
push
gs
push
mov
push
test
inc
inc
fs
inc
xchg
push
test
mov
in
mov
xchg
add
je
jae
vshufps
xor
jmp
mov
shl
inc
jp
push
mov
mov
mov
inc
cmp
cld
adc
push
push
loop
shl
(bad)
push
gs
xor
addr16
jb
push
(bad)
jg
mov
inc
xchg
dec
rol
div
out
les
hlt
and
xchg
push
nop
je
cli
adc
push
jae
adc
inc
add
(bad)
adc
jecxz
push
cld
repz
mov
inc
push
and
mov
push
repnz
add
aam
(bad)
xor
fist
aas
and
push
add
xor
mov
xchg
jo
nop
fs
repz
jne
adc
sbb
ss
push
in
rcr
add
nop
jne
xor
repnz
inc
js
mov
in
and
inc
mov
xchg
push
and
cmps
jb
mov
xchg
inc
aas
ret
xchg
xor
adc
jbe
cmps
push
les
fist
push
je
cmp
add
xchg
sub
push
test
pop
adc
adc
xor
xor
push
pushf
xor
loop
nop
push
xor
sahf
pop
mov
neg
cmps
pop
cmp
inc
cmps
and
sbb
pop
repnz
pop
mov
shl
fnstenv
adc
icebp
mov
adc
push
mov
and
push
inc
push
cmps
pusha
mov
outs
loopne
push
movs
xor
dec
mov
(bad)
xchg
or
mov
cld
outs
sub
inc
mov
pusha
adc
dec
cmps
or
sub
out
push
or
mov
nop
ins
fwait
jns
popa
rol
and
es
rol
xchg
imul
pop
(bad)
pop
aam
mov
add
xchg
test
push
shl
mov
xor
xchg
(bad)
gs
inc
xlat
adc
dec
shl
sbb
cmc
(bad)
aad
repz
adc
mov
jae
je
mov
jmp
dec
out
xchg
mul
jmp
cmp
popa
and
xor
mov
lds
ret
mov
push
push
aam
ret
dec
or
jbe
inc
pop
das
fnsetpm(287
jmp
and
xor
xchg
mov
aad
sti
cmps
jmp
pop
rol
loope
leave
adc
int
xor
into
xor
jge
daa
aad
dec
mov
cwde
(bad)
push
mov
sub
sub
mov
push
jns
adc
retf
icebp
(bad)
int3
fsub
mov
(bad)
adc
push
and
add
jae
bound
jge
and
sub
ss
adc
mov
xchg
ss
mov
jae
mov
push
fnstenv
std
xor
dec
add
test
jmp
adc
push
mov
mov
aam
inc
repnz
cs
idiv
out
push
mov
sub
and
rcl
shl
(bad)
out
fstp
call
aam
xchg
sbb
dec
div
sbb
ss
icebp
fdivr
dec
mov
(bad)
mov
in
repnz
loop
aam
xchg
mov
(bad)
popf
inc
loop
std
in
inc
adc
cmp
imul
add
in
xor
inc
dec
repnz
xchg
lods
or
or
cmps
repnz
mov
mov
sub
loopne
xchg
div
adc
or
adc
out
xchg
aaa
das
adc
xchg
jge
pop
ins
(bad)
inc
push
stos
inc
popa
popa
and
and
mov
xchg
add
nop
lock
scas
cmp
fcomp
push
mov
inc
sahf
add
and
cmp
pop
jecxz
xchg
(bad)
je
cdq
xlat
inc
push
cwde
mov
cmps
jnp
adc
enter
in
lock
not
pop
and
(bad)
(bad)
and
push
adc
leave
fwait
sub
push
gs
loope
pop
test
imul
mov
xchg
jp
xchg
retf
inc
aad
leave
xlat
add
shl
clc
sub
jge
pop
mov
mov
mov
test
mov
add
jmp
out
and
je
daa
inc
sbb
lea
lods
or
sub
mov
pop
push
sub
inc
adc
mov
sahf
push
sbb
movs
test
and
pop
aad
nop
gs
shl
dec
adc
and
cmp
cmp
push
or
mov
fmul
fwait
or
push
jmpw
add
imul
add
push
cmp
daa
or
gs
add
arpl
add
retf
mov
(bad)
and
push
idiv
inc
inc
mov
inc
fneni(8087
in
dec
shl
add
fadd
xchg
das
outs
inc
sbb
xchg
ret
out
mov
rcl
fimul
in
sub
ss
popf
mov
rcr
ss
jnp
(bad)
jo
dec
(bad)
rcr
sub
mov
into
push
push
aad
mov
mov
pop
push
adc
in
out
in
dec
xchg
mov
popf
rcl
gs
cmc
test
dec
push
loop
mov
lods
(bad)
mov
shl
(bad)
xchg
jne
inc
lds
aam
sub
push
mov
or
inc
push
push
nop
add
cmp
inc
shl
outs
icebp
mov
call
mov
fnstsw
inc
les
mov
out
mov
hlt
mov
aam
(bad)
sar
imul
ror
in
xor
mov
lods
loopne
scas
js
or
daa
inc
aam
aad
test
push
cmp
call
mov
outs
push
ret
ja
push
xor
fmul
jo
or
xor
lods
mov
push
cmp
cmp
aam
and
mov
xor
adc
adc
sub
xchg
sub
pop
cmc
jle
push
icebp
inc
icebp
add
clc
add
test
int3
xchg
jp
mov
sub
jge
mov
pop
loope
fiadd
inc
push
out
inc
push
dec
addr16
sub
or
(bad)
sbb
jle
jl
dec
fs
hlt
fist
rol
and
add
inc
xchg
pusha
cmp
nop
in
idiv
scas
xchg
mov
mov
std
add
push
add
fucomi
push
rol
jno
popf
push
aam
cmp
fs
sahf
add
add
mov
xchg
test
nop
icebp
or
aam
pusha
test
je
test
jp
mov
out
add
mul
xchg
adc
cmps
pop
test
(bad)
sbb
inc
je
and
je
cmp
push
adc
xchg
or
test
pop
mov
xor
icebp
cmc
add
das
je
adc
cvtps2pd
jle
jbe
retf
xchg
xchg
add
and
sar
push
mov
les
xchg
test
icebp
stc
push
push
or
int
jb
imul
sbb
jne
addr16
add
(bad)
sti
lds
xor
cmps
repnz
and
(bad)
out
xchg
cmp
rcr
push
push
mov
loop
ret
cmp
popa
xchg
push
dec
adc
cli
loop
jno
xchg
pop
repnz
ins
daa
mov
xor
ret
sbb
rcl
and
call
push
xchg
push
into
inc
jae
xchg
push
fisub
(bad)
sbb
mov
xchg
adc
ss
mov
in
push
inc
ins
jb
mov
in
hlt
int3
and
cli
(bad)
pop
xchg
fild
sbb
jbe
jecxz
sub
js
jns
jb
js
cmp
inc
sar
loop
xchg
bound
mov
loopne
jl
adc
push
add
rep
(bad)
rcl
das
add
pushf
push
popa
mov
test
inc
fadd
cmp
popf
mov
mov
aaa
or
popf
mov
jecxz
jno
inc
add
pop
inc
cli
jecxz
call
push
mov
ret
push
jbe
loop
mov
inc
mov
mov
pusha
mov
rol
add
adc
mov
fs
inc
fsubp
add
xchg
xchg
xor
mov
xchg
mov
cmc
cmp
push
jl
test
add
or
push
dec
and
add
jne
dec
inc
mov
cmp
icebp
push
cmc
mov
popf
cld
mov
push
jmp
retf
jmp
and
push
in
fild
mov
cli
and
push
and
mov
mov
aam
add
fadd
mov
not
pop
sub
hlt
fstp
or
data16
adc
cld
out
mov
scas
jne
push
rcr
shl
mov
push
mov
inc
sbb
jb
xor
fisttp
stos
les
push
jnp
loope
or
sbb
push
push
ins
pop
ss
in
aad
jns
test
jne
xchg
pop
or
icebp
mov
adc
cmc
aaa
sub
iret
xor
mov
daa
pop
addr16
mov
push
shl
add
ss
enter
aaa
in
xor
cs
int
je
fst
xor
pop
cmc
sub
cmc
mov
inc
in
push
dec
scas
adc
loop
sub
cmp
mov
fs
aaa
jmp
adc
push
call
push
inc
fstp
lea
adc
sbb
sti
push
not
inc
ss
push
sbb
mov
enter
cmp
jae
sub
adc
push
push
in
ins
mov
pavgw
ret
lea
inc
ja
and
mov
mov
adc
and
pop
push
adc
push
(bad)
retf
and
lods
sub
test
mov
push
cs
xchg
push
inc
add
push
mov
cmp
sub
mov
pushf
repz
ds
rcl
push
xchg
add
out
pop
adc
and
adc
jnp
or
out
cmp
xor
inc
movs
cli
xchg
cmp
scas
mov
ror
pop
xchg
dec
fstp
mov
loope
jo
and
loope
out
rol
sub
jmp
in
aam
jnp
cs
jae
movs
pusha
fs
add
jne
xchg
push
dec
repnz
push
add
cli
mov
or
sub
add
and
and
not
daa
lods
fwait
jbe
xor
rol
mov
pop
pop
xchg
ins
outs
das
xchg
shr
(bad)
icebp
fstp
nop
push
cmp
(bad)
jmp
cli
test
mov
sub
dec
or
add
jo
(bad)
push
test
inc
sub
ret
div
js
cmc
pop
imul
add
mov
and
add
mov
xchg
and
mov
iret
ret
sub
push
pop
inc
in
scas
nop
push
xchg
gs
aam
gs
push
push
adc
icebp
xchg
iret
movs
ds
sbb
addr16
and
add
xor
cli
hlt
icebp
add
adc
pop
movs
test
fs
icebp
and
pop
add
xor
(bad)
jmp
aad
je
and
repnz
push
movs
loope
and
push
mov
adc
xchg
add
in
cmp
es
add
and
cmps
fs
stos
shr
into
push
mov
push
fcom
sti
jecxz
loopne
or
or
mov
int
jns
dec
mov
aam
mov
aam
rcr
pushf
cwde
xor
lock
(bad)
int
sbb
sbb
pop
push
scas
add
(bad)
int
out
xor
adc
push
ror
stc
add
sbb
inc
mov
adc
adc
push
inc
retf
nop
jmp
jo
jb
sbb
pop
rcl
test
push
xchg
lods
shl
mov
rcl
adc
push
xor
push
xchg
inc
shr
mov
or
mov
cmps
push
add
adc
inc
fs
fs
dec
daa
jb
lea
shl
cmps
gs
xor
(bad)
lock
mov
dec
inc
mov
test
push
jbe
ror
and
jb
xchg
jg
mov
bound
call
inc
bound
bound
lds
jecxz
test
(bad)
jbe
push
add
mov
std
retf
mov
(bad)
(bad)
es
in
test
push
ret
out
imul
push
aad
inc
mov
out
and
test
je
retf
inc
mov
dec
adc
sub
sbb
mul
push
jbe
adc
scas
stos
pop
mov
pusha
push
int3
leave
push
xchg
ins
mov
imul
cmp
mov
xor
mov
jbe
mov
mov
and
jae
sar
mov
bound
mov
sbb
sbb
ret
and
pop
cmps
inc
pop
aam
sub
sbb
and
add
pop
jle
adc
fldcw
es
jb
xlat
loop
out
inc
mov
outs
push
inc
xor
jae
into
out
in
fimul
enter
jae
outs
mov
mov
pop
push
stos
xor
hlt
and
adc
js
cmps
xor
or
out
mov
fcom
hlt
mov
sbb
jp
dec
sti
fsub
test
mov
cmps
jge
add
sub
cmp
ret
cmps
call
lock
movs
adc
pop
mov
(bad)
hlt
and
push
lods
ja
(bad)
sbb
imul
out
mov
mov
daa
xchg
addr16
imul
(bad)
dec
pop
hlt
push
cli
daa
fstp
jmp
mov
js
stos
mov
mov
sbb
mov
lods
sub
xchg
jnp
ja
daa
add
in
cmp
pop
or
fistp
sbb
xchg
js
(bad)
xchg
out
xor
push
mov
dec
inc
mov
es
xchg
adc
cmps
retf
repnz
xchg
loopne
push
ja
push
sbb
stc
in
mov
cmps
loope
fs
addr16
cmps
adc
pop
xchg
lea
mov
and
bound
fimul
int
fild
repz
sub
sub
test
xor
xchg
mov
lahf
fwait
(bad)
sbb
mov
push
cdq
lods
mov
xchg
leave
pop
pop
imul
movs
push
adc
adc
sbb
adc
mul
inc
jg
add
mov
movs
adc
add
push
xchg
xor
mov
add
pop
pop
or
loopne
mov
jge
ror
sar
adc
icebp
adc
cmp
adc
scas
mov
xor
fwait
pop
mov
cmc
pop
or
repz
je
xor
lods
jae
stos
aam
data16
push
mov
mov
and
rcr
add
nop
cmp
hlt
jg
ins
fistp
movs
adc
lock
icebp
jne
inc
pop
add
js
pop
push
add
sbb
hlt
mov
popa
je
shl
imul
inc
jno
add
jg
jmp
(bad)
mov
push
pushf
out
addr16
fwait
ss
inc
push
dec
arpl
mov
popa
jo
and
adc
push
adc
add
fbstp
push
test
hlt
enter
sbb
shr
je
mov
je
out
jmp
push
sbb
mov
lods
push
test
pop
shl
test
aas
push
and
ret
inc
xlat
adc
adc
rcl
lock
and
jecxz
not
es
loope
je
inc
add
(bad)
sbb
repz
pop
xor
xlat
or
inc
(bad)
(bad)
add
xlat
les
das
bound
stc
pinsrw
icebp
(bad)
daa
hlt
and
mov
xchg
aam
fadd
mov
push
aaa
bound
mov
xor
lds
inc
mov
cs
pop
cmps
inc
xchg
and
daa
xlat
push
out
adc
cs
test
les
cwde
inc
in
ss
shl
daa
popf
push
mov
aaa
cmps
mov
das
(bad)
push
mov
mov
or
test
inc
mov
jecxz
repnz
xor
mov
mov
bound
mov
outs
shl
ret
push
xchg
push
int3
xor
jo
xchg
loop
xor
(bad)
arpl
adc
popf
mov
inc
xacquire
xchg
jb
and
xor
fs
push
mov
add
and
push
shl
pop
jb
adc
push
xlat
rol
add
adc
in
mov
jb
sub
loop
loope
icebp
popf
mov
xchg
xchg
fstp
rcl
lods
cmc
mov
repz
shl
stos
jmp
loop
xrelease
push
mov
mov
movs
mov
cmps
fsubrp
add
xchg
loopne
add
jl
test
xchg
mov
xchg
enter
rcl
xchg
pop
nop
test
sub
inc
outs
adc
or
(bad)
mov
jle
mov
fucomi
or
mov
(bad)
movs
cmps
les
daa
out
shr
pop
imul
pop
mov
mov
je
sub
or
fwait
imul
fs
inc
cmp
idiv
push
movs
push
and
(bad)
loope
xor
out
push
push
lods
mov
add
test
ja
popa
ret
in
mov
mov
inc
xchg
mov
and
div
mov
push
icebp
cmp
or
mov
lahf
xchg
xor
std
mov
stc
out
and
mov
icebp
jne
cmc
push
mov
mov
push
and
pop
pop
ja
add
mov
sbb
xor
mov
rol
not
jns
push
adc
mov
lods
pop
mov
push
cmp
lods
push
sub
clc
mov
mov
mov
mov
pop
jle
push
sbb
retf
mov
sub
sbb
aad
fiadd
and
test
sub
retf
lds
mov
and
mov
push
dec
pop
inc
scas
pushf
das
cmps
and
sbb
and
sbb
mov
mov
ret
cmp
imul
sbb
or
adc
and
mul
add
push
daa
push
xchg
clc
cmps
dec
xor
adc
xchg
xchg
lods
shr
dec
ja
xchg
jbe
inc
call
pop
xor
je
inc
cwde
lods
push
inc
dec
idiv
jne
or
push
lea
fstp
cld
jmp
mov
push
mov
cmp
in
mov
inc
adc
and
into
cmc
pop
sbb
dec
pop
lahf
repz
push
or
(bad)
es
pop
jbe
hlt
pushf
mov
imul
outs
(bad)
aad
fild
fbld
inc
sbb
mov
shl
adc
lahf
xor
push
fmul
fst
or
mov
popf
cmp
ds
scas
data16
dec
mov
stos
cmp
sub
inc
push
push
ror
lods
xchg
inc
rcr
inc
mov
push
out
dec
imul
adc
dec
dec
into
(bad)
data16
ret
ins
daa
iret
int3
arpl
cmp
ret
mov
fstp
retf
mov
jp
sub
and
dec
push
add
inc
(bad)
fcomp
add
cmps
dec
addr16
out
pop
pop
and
inc
or
add
sub
iret
inc
repz
inc
repnz
mov
and
jp
ret
sub
pop
cmp
or
(bad)
xor
jnp
sti
mov
dec
enter
dec
xor
xlat
or
add
cmp
mov
cmps
not
sub
jp
imul
cmps
pop
imul
add
out
ror
cs
daa
jo
ja
gs
test
and
inc
mov
test
pop
repnz
clc
or
cmp
getsec
sub
inc
dec
push
cli
icebp
fcom
sbb
pop
cld
daa
(bad)
hlt
and
and
out
test
xchg
popf
pop
cwde
xchg
mov
leave
(bad)
sbb
in
cmp
(bad)
fdivr
dec
js
cmps
imul
xchg
mov
(bad)
jmp
hlt
aaa
ss
fsubrp
sub
ror
xor
enter
jne
(bad)
pushf
fidivr
xlat
push
and
cmp
xor
test
clc
inc
mov
popf
add
dec
cli
or
xchg
in
push
xor
fcomp
jmp
test
sbb
(bad)
mul
sub
pop
rcl
ss
inc
xchg
lods
cwde
dec
movs
and
aaa
mov
clc
js
(bad)
ror
mov
xchg
(bad)
sub
mov
jp
jp
mov
jmp
inc
clc
mov
int
xchg
aam
jns
dec
mov
push
loop
mov
cmps
outs
inc
add
cmp
ss
dec
sbb
aaa
xor
or
inc
ins
xchg
pop
mov
mov
and
(bad)
es
int
mul
out
shl
jae
xchg
mov
mov
int
jno
es
(bad)
push
(bad)
xor
or
inc
ss
add
push
popf
movs
vmovdqu
dec
pop
and
and
or
xchg
inc
fnstsw
pop
gs
sub
push
aad
dec
mov
inc
pop
movs
add
(bad)
imul
push
call
or
push
jbe
or
mov
ror
inc
adc
in
in
or
sub
gs
stc
or
push
hlt
adc
xlat
cli
int
sub
mov
(bad)
loop
enter
ja
xlat
cmps
je
out
xchg
jbe
push
ror
ins
mov
mov
mul
les
pop
or
push
mov
(bad)
test
or
fist
xlat
pop
out
and
mov
cmps
cmp
mov
out
(bad)
ds
clc
leave
adc
das
movs
adc
xchg
dec
or
lahf
sbb
gs
mov
cmp
or
and
cmp
ret
mov
out
jae
fbld
test
cmps
push
aam
in
mul
aaa
inc
test
dec
sbb
cwde
lods
mov
mov
sub
aam
mov
mov
xchg
arpl
adc
xor
xchg
xor
(bad)
add
es
dec
push
push
js
sbb
mov
mov
mov
in
imul
pop
or
ins
movs
push
mov
es
daa
push
std
(bad)
inc
cmp
jmp
retf
sar
adc
test
mov
add
and
js
cmp
sbb
or
sbb
imul
(bad)
pop
mov
xor
dec
pop
dec
fstp
dec
lods
dec
outs
mov
lock
push
dec
mov
or
lahf
jge
scas
test
sahf
clc
mov
pop
cmp
jns
jp
or
mov
xchg
inc
sbb
out
lock
fdiv
int
sub
pop
jmp
jne
scas
shr
sub
xchg
mov
mov
mov
mov
xor
fdivr
jle
clc
adc
fscale
or
pop
cmps
jns
daa
mov
dec
ja
xor
pop
or
push
cmp
and
xchg
dec
cmp
repnz
mov
retf
inc
shl
enter
push
push
loope
mov
dec
dec
fnstsw
outs
leave
mov
push
dec
pop
ret
dec
or
(bad)
dec
jmp
lock
xchg
pop
fmul
mov
ins
out
rcr
add
sti
aam
cmc
mov
pop
(bad)
mov
sub
push
call
add
neg
sbb
inc
ret
cmp
je
push
push
call
ret
cmp
je
mov
mov
push
call
ret
add
push
call
ret
push
mov
call
mov
lea
cmp
jne
xor
jmp
push
call
mov
test
jne
push
lea
call
mov
and
mov
call
or
cmp
je
push
push
call
mov
call
ret
cmp
je
mov
mov
push
call
ret
jmp
push
push
push
mov
call
test
mov
mov
mov
je
call
xor
jmp
push
call
mov
neg
sbb
and
add
pop
pop
ret
cmp
je
push
mov
push
mov
push
call
ret
jmp
push
push
mov
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
mov
push
mov
call
push
mov
call
pop
mov
pop
ret
push
push
push
mov
push
mov
call
push
mov
call
push
mov
call
inc
push
mov
call
inc
push
mov
call
mov
mov
push
push
call
push
push
mov
call
push
push
mov
call
pop
pop
pop
ret
push
push
push
mov
call
shr
mov
mov
call
xor
mov
mov
call
mov
push
push
call
push
push
mov
call
push
mov
pop
mov
mov
pop
mov
mov
mov
pop
pop
ret
xor
cmp
setne
ret
mov
test
jge
cmp
jne
call
push
call
ret
cmp
mov
mov
jne
neg
mov
sbb
jmp
mov
mov
ret
push
mov
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
mov
neg
sbb
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
mov
mov
mov
pop
ret
mov
test
jne
mov
cmp
mov
jne
cmp
je
push
push
push
push
call
push
call
ret
push
mov
cmp
je
push
push
call
push
call
mov
pop
ret
push
push
push
call
add
ret
push
push
call
push
call
ret
push
call
push
call
ret
cmp
je
push
push
push
call
add
ret
push
mov
sub
push
push
push
mov
test
jne
push
call
mov
push
push
call
push
mov
lea
push
push
call
add
test
je
fld
lea
push
push
push
fstp
call
test
je
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
xor
inc
jmp
xor
pop
pop
pop
leave
ret
mov
mov
mov
mov
mov
mov
mov
or
mov
and
mov
mov
mov
mov
mov
and
ret
mov
ret
push
mov
mov
push
mov
cmp
jle
mov
test
je
mov
push
push
push
call
push
mov
mov
push
call
test
je
or
mov
jmp
or
mov
and
mov
mov
mov
pop
pop
ret
mov
push
mov
cmp
je
mov
mov
mov
mov
push
call
mov
or
mov
and
mov
and
pop
ret
push
mov
push
push
mov
mov
cmp
push
je
push
mov
push
mov
mov
mov
push
call
mov
test
jne
mov
jmp
mov
jmp
mov
cmp
jle
mov
test
je
mov
push
push
push
call
push
mov
push
mov
call
mov
test
je
mov
inc
imul
push
lea
push
mov
imul
push
lea
push
call
mov
mov
mov
mov
add
mov
jmp
mov
mov
pop
pop
pop
pop
ret
mov
ret
test
push
mov
mov
je
push
call
pop
mov
pop
ret
push
mov
sub
push
push
lea
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
call
add
neg
sbb
inc
mov
pop
leave
ret
push
call
ret
push
mov
push
call
push
push
call
push
call
mov
pop
ret
push
mov
test
push
push
mov
je
cmp
je
mov
test
jne
test
je
cmp
je
push
call
push
push
push
call
test
mov
jne
call
or
push
mov
mov
call
pop
mov
pop
pop
ret
call
int3
push
mov
push
push
push
push
mov
test
mov
ja
call
mov
mov
lea
push
push
push
mov
call
cmp
je
lea
push
mov
call
push
call
mul
test
ja
cmp
ja
push
push
push
push
call
add
mov
call
pop
pop
leave
ret
mov
push
push
call
test
jne
jmp
ret
push
mov
lea
mov
call
mov
sub
call
mov
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
mov
mov
call
push
push
lea
push
mov
call
and
push
push
lea
call
mov
mov
call
ret
push
mov
call
mov
and
cmp
mov
je
push
lea
call
and
lea
call
lea
mov
call
mov
call
ret
cmp
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
xor
mov
rep
push
mov
mov
mov
mov
mov
call
test
pop
je
mov
mov
xor
ret
call
mov
mov
mov
mov
mov
push
mov
push
push
push
mov
mov
mov
mov
mov
mov
mov
call
add
call
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
push
mov
call
mov
ret
push
mov
cmp
jb
call
cmp
jne
call
push
mov
push
push
lea
cmp
mov
jne
push
call
cmp
jne
mov
imul
add
push
call
inc
push
call
imul
add
push
call
pop
pop
pop
pop
ret
mov
cmp
jb
call
imul
add
push
call
ret
push
mov
push
push
push
push
mov
test
jne
call
mov
test
je
and
cmp
mov
je
cmp
jne
movzx
cmp
jb
cmp
jbe
cmp
jb
cmp
ja
cmp
jbe
movzx
sub
jmp
movzx
sub
add
cmp
jge
mov
test
je
push
call
add
jmp
inc
inc
inc
cmp
jne
push
mov
mov
call
cmp
mov
je
movzx
cmp
jne
movzx
cmp
jb
cmp
jbe
cmp
jb
cmp
ja
cmp
jbe
movzx
sub
jmp
movzx
sub
add
cmp
mov
jl
mov
inc
inc
jmp
mov
lea
mov
test
je
push
call
push
mov
mov
inc
push
push
call
add
sub
lea
mov
jmp
mov
inc
inc
inc
inc
dec
cmp
jne
mov
sub
sar
push
call
pop
pop
pop
leave
ret
push
mov
call
call
push
lea
call
push
and
lea
call
test
jne
mov
add
jmp
push
mov
push
push
push
call
lea
call
call
ret
push
lea
push
push
push
call
ret
call
mov
ret
call
add
ret
mov
mov
cmp
jne
or
jmp
cmp
jne
push
push
call
xor
ret
call
mov
test
je
mov
jmp
jmp
push
mov
push
xor
mov
mov
mov
mov
call
mov
mov
add
push
call
mov
mov
pop
mov
pop
ret
push
mov
call
mov
mov
mov
mov
and
test
je
push
call
call
cmp
jne
and
or
mov
call
call
ret
cmp
je
mov
push
call
ret
push
push
push
push
push
push
mov
call
xor
inc
xor
mov
mov
cmp
je
mov
add
push
push
push
push
push
call
test
jne
push
mov
mov
call
inc
test
jne
xor
cmp
jne
mov
mov
call
test
mov
mov
je
mov
add
push
call
test
je
xor
inc
mov
push
push
push
push
push
call
test
jne
jmp
pop
pop
pop
pop
add
jmp
call
mov
ret
push
mov
push
push
push
push
mov
call
mov
xor
cmp
je
mov
mov
mov
cmp
push
push
jae
push
push
call
cmp
je
push
mov
push
call
xor
inc
jmp
mov
jmp
mov
mov
cmp
je
push
push
add
push
push
call
cmp
jne
call
mov
cmp
jne
xor
pop
pop
pop
pop
pop
ret
jmp
mov
cmp
jne
cmp
jne
xor
inc
ret
xor
ret
mov
ret
mov
cmp
jne
mov
cmp
jne
xor
inc
jmp
xor
ret
push
call
mov
test
mov
je
cmp
jne
push
call
test
je
xor
inc
pop
ret
push
call
mov
test
je
mov
push
push
call
test
je
xor
inc
jmp
test
je
push
call
mov
call
cmp
je
mov
push
mov
call
jmp
xor
pop
pop
ret
call
mov
test
je
push
mov
call
ret
jmp
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
inc
pop
ret
xor
pop
ret
push
push
call
push
mov
push
lea
mov
call
test
je
mov
cmp
jne
xor
jmp
mov
mov
mov
mov
mov
mov
xor
inc
pop
pop
pop
ret
call
mov
test
je
push
mov
call
ret
jmp
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
mov
mov
call
xor
mov
mov
mov
mov
mov
call
mov
call
ret
push
call
pop
ret
push
call
pop
ret
mov
test
jne
mov
test
jne
call
push
call
ret
push
push
call
mov
xor
push
push
push
lea
push
call
test
je
cmp
je
push
call
test
pop
jne
push
call
push
call
xor
inc
pop
pop
ret
call
mov
test
je
mov
jmp
jmp
push
call
cmp
mov
jne
test
jge
cmp
jne
call
mov
test
je
push
mov
push
call
jmp
push
mov
call
test
jne
call
push
push
push
push
call
pop
ret
push
mov
sub
push
mov
push
xor
cmp
mov
jne
xor
jmp
mov
sub
push
je
dec
dec
je
sub
jmp
push
call
cmp
je
mov
call
mov
cmp
je
mov
call
test
je
cmp
je
call
mov
mov
cmp
je
push
call
test
pop
jne
cmp
jne
push
push
push
push
call
jmp
call
cmp
jne
mov
cmp
je
mov
cmp
jb
cmp
ja
push
mov
call
mov
cmp
jne
call
cmp
jne
mov
push
mov
pop
lea
rep
mov
mov
call
test
je
mov
lea
push
mov
call
test
je
and
xor
inc
jmp
and
xor
pop
pop
pop
leave
ret
jmp
call
cmp
jne
push
call
mov
call
push
push
push
push
call
mov
pop
ret
push
push
xor
cmp
push
push
jg
mov
cmp
mov
je
mov
cmp
je
push
call
test
je
push
xor
inc
push
push
push
push
call
push
push
push
push
push
push
call
call
add
mov
call
mov
jmp
cmp
je
cmp
je
cmp
jne
push
mov
call
push
call
test
jne
cmp
jl
push
push
push
push
push
call
push
push
push
push
push
push
call
mov
cmp
jle
push
mov
call
or
mov
cmp
jne
jmp
call
add
mov
call
cmp
jne
call
push
call
pop
xor
cmp
pop
pop
setl
pop
ret
xor
ret
mov
ret
push
mov
cmp
push
mov
jne
xor
jmp
push
lea
push
push
push
push
call
test
jne
push
call
push
call
mov
pop
pop
ret
push
mov
push
push
mov
test
mov
je
push
lea
push
push
push
push
call
test
jne
push
call
push
call
cmp
je
push
push
push
call
pop
pop
pop
ret
push
mov
push
push
mov
push
push
mov
mov
mov
lea
push
push
push
mov
call
cmp
mov
jne
push
mov
call
test
je
push
call
push
call
pop
mov
mov
pop
leave
ret
push
mov
push
push
push
mov
push
xor
lea
push
push
push
mov
mov
call
cmp
mov
jne
push
mov
call
test
je
push
call
push
call
pop
mov
mov
pop
leave
ret
push
mov
mov
cmp
je
push
call
test
jne
push
call
push
call
pop
ret
push
push
mov
push
push
push
push
call
test
jne
push
call
push
call
pop
ret
push
push
mov
push
push
push
push
call
test
jne
push
call
push
call
pop
ret
push
push
push
mov
push
mov
call
push
call
test
jne
push
call
push
call
pop
ret
push
mov
push
push
push
lea
mov
push
push
call
cmp
mov
jne
push
mov
call
test
je
push
call
push
call
pop
mov
mov
pop
leave
ret
push
mov
sub
mov
xor
mov
push
push
mov
test
push
mov
mov
jne
lea
mov
push
push
push
call
test
je
push
push
push
call
jmp
test
jne
push
call
inc
jmp
xor
mov
pop
pop
xor
pop
call
leave
ret
push
mov
mov
push
xor
cmp
je
push
call
mov
neg
sbb
inc
or
and
add
mov
call
test
je
push
call
push
call
pop
pop
ret
push
mov
mov
cmp
je
push
call
or
lea
pop
jmp
push
mov
lea
mov
call
or
and
mov
pop
ret
push
mov
push
push
push
push
mov
call
test
pop
je
mov
call
mov
jmp
xor
push
mov
push
push
push
lea
push
call
push
push
call
push
call
test
pop
jne
test
je
mov
push
mov
call
push
call
push
call
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
push
push
mov
push
call
push
mov
push
push
call
push
push
push
push
call
add
push
call
mov
push
call
pop
pop
ret
push
sub
lea
mov
xor
mov
push
mov
call
mov
mov
mov
xor
cmp
mov
mov
je
cmp
je
call
jmp
call
push
lea
call
mov
mov
xor
push
push
lea
push
mov
mov
call
test
je
lea
push
push
push
push
lea
push
push
call
add
jmp
push
push
push
lea
push
push
call
add
push
push
mov
push
call
lea
mov
call
mov
push
mov
call
mov
ret
mov
mov
sub
call
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
test
je
call
push
mov
call
push
lea
mov
call
pop
ret
push
sub
lea
mov
xor
mov
push
mov
call
mov
mov
mov
mov
xor
test
setne
test
jne
call
xor
test
setne
test
je
lea
push
push
mov
push
push
call
test
jne
push
push
push
push
call
add
push
push
call
xor
jmp
cmp
jae
call
push
lea
call
and
lea
push
push
call
push
call
test
jne
push
push
lea
push
lea
push
push
push
push
push
call
test
jne
push
push
call
mov
add
call
jmp
test
jne
push
call
test
jne
lea
push
push
call
cmp
je
push
call
cmp
je
cmp
jbe
lea
push
call
mov
sub
sar
add
cmp
jge
lea
push
sub
push
push
call
add
mov
add
call
xor
inc
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
push
lea
sub
mov
xor
mov
mov
push
mov
push
mov
lds
xor
xor
mov
mov
pop
or
retf
daa
out
sbb
icebp
cmc
push
mov
cmp
movs
ja
xchg
in
push
mov
nop
aas
(bad)
dec
inc
mov
out
shl
sti
mov
das
xchg
sahf
xlat
movs
icebp
into
jne
jne
pop
enter
test
nop
push
test
loop
dec
ret
aad
mov
inc
or
test
iret
mov
adc
or
and
inc
xchg
test
or
cmp
stos
xchg
adc
push
cmps
pop
inc
push
mov
pop
loopne
icebp
adc
xor
jge
aas
mov
jl
ss
je
pusha
addr16
(bad)
sbb
xor
xchg
push
cmp
div
pop
out
jo
into
mov
add
adc
fldenv
fidivr
div
les
and
xchg
inc
int
cmps
xchg
push
jmp
dec
xchg
loop
xchg
sub
cld
pop
xchg
(bad)
mov
push
jecxz
mov
cmps
retf
adc
add
jmp
cli
jne
ss
gs
sbb
add
mov
imul
imul
xor
add
(bad)
push
rol
arpl
pop
movs
and
pop
aad
adc
push
inc
push
add
rol
xchg
sbb
out
shr
push
test
int
repnz
(bad)
test
pop
pushw
xor
lds
cmc
retf
push
mov
push
or
mov
sbb
or
scas
gs
mov
test
lds
pop
sub
test
test
jo
mov
cmps
jne
test
inc
jb
aam
inc
nop
retf
in
pop
xor
inc
test
icebp
push
ss
push
shl
(bad)
cwde
aas
inc
cdq
inc
pop
xor
jnp
test
mov
jne
inc
xchg
pop
mov
add
cmc
mov
fmulp
mov
mov
out
or
dec
imul
push
std
inc
add
add
sub
and
inc
test
cmp
imul
push
pop
cmc
pop
jmp
push
in
inc
shl
pop
lods
sub
int
add
out
out
popf
call
and
call
arpl
ret
mov
push
test
inc
push
stc
mov
mov
jmp
lahf
movs
push
xor
or
jbe
push
or
iret
sbb
les
in
and
push
sar
inc
or
dec
hlt
mov
mov
clc
mov
neg
or
add
xchg
or
sbb
(bad)
test
aad
ss
hlt
xchg
aad
stos
loopne
xor
jne
les
jg
push
shr
dec
retf
xor
push
sbb
mov
mov
movs
xchg
(bad)
mov
shr
leave
cmps
cmpxchg
lods
jbe
xor
es
xor
cmp
xlat
cmc
sbb
and
aas
out
aad
xchg
shr
loope
xor
adc
in
add
out
push
mov
call
mov
cmp
inc
fiadd
and
pop
out
mov
xor
xchg
ins
scas
(bad)
call
imul
(bad)
mov
test
cmp
pusha
and
daa
les
cmp
jbe
pop
xlat
outs
pop
popa
rol
sub
jmp
inc
xor
lea
add
mov
sub
pop
gs
not
loope
add
sti
repnz
outs
jns
jne
inc
push
dec
pop
std
cmps
shl
push
sbb
in
std
int
push
retf
sub
cs
loop
sbb
xchg
inc
retf
xchg
or
jbe
cdq
dec
sbb
xor
aaa
mov
jbe
pop
push
std
and
addr16
push
aam
xor
mov
inc
xchg
xchg
push
or
mov
into
xlat
test
or
pop
test
push
push
retf
pop
test
adc
mov
dec
add
push
int
cmc
adc
sub
es
lock
xchg
dec
adc
out
mov
push
adc
inc
(bad)
(bad)
jae
mov
xchg
(bad)
in
mov
cmps
loope
dec
in
cdq
push
push
aaa
and
cmps
in
or
mov
xor
inc
rol
sub
pop
cmp
jmp
ret
out
jae
inc
cmps
xchg
xor
xchg
xor
(bad)
jbe
sbb
mov
adc
xor
adc
ret
enter
cmp
lods
jne
std
and
jo
and
cmps
jne
push
out
bound
mov
dec
xchg
dec
call
rcr
pop
daa
clc
push
or
das
loopne
ins
out
and
jmp
fstp
addr16
mov
dec
add
inc
es
retf
push
adc
popa
jle
add
div
cmp
out
ins
or
movs
and
or
dec
fisttp
sub
adc
ins
leave
hlt
xor
inc
xchg
and
popa
daa
inc
push
movs
outs
jecxz
inc
or
jne
inc
fwait
popa
and
mov
fs
fild
push
adc
add
add
jno
jno
call
jno
test
cld
idiv
jne
scas
mov
cs
inc
idiv
dec
iret
fcmove
and
push
test
jb
rcl
lds
sbb
sbb
test
xchg
sbb
push
mov
call
sbb
push
scas
pop
ss
in
xor
in
lock
add
in
ds
(bad)
fst
jecxz
fst
aad
or
adc
add
mov
enter
dec
mov
sbb
mov
dec
add
aam
push
pop
cmps
jp
mov
cmp
xchg
cli
out
arpl
mov
out
xchg
mov
mov
in
clc
in
(bad)
jle
or
test
add
aas
push
std
jecxz
inc
pusha
or
ret
fs
mov
cmps
jb
xlat
test
rcl
jae
pop
inc
icebp
imul
mov
sub
adc
pextrw
mov
movs
imul
(bad)
outs
test
aad
fnstsw
daa
adc
xchg
push
adc
adc
jge
or
cdq
loop
enter
nop
sbb
jge
mov
shr
xor
hlt
mov
popf
or
xlat
in
leave
pop
out
gs
into
add
daa
add
popa
stos
out
in
movs
add
rcl
and
sti
lods
es
pop
push
sbb
push
jno
mov
pop
pop
pop
sub
mov
aas
movs
cmp
adc
test
hlt
loope
call
mov
or
cmp
out
out
pop
(bad)
cmp
test
test
fldz
cwde
icebp
sub
stc
dec
ins
adc
popa
fimul
fbstp
not
add
ret
push
ss
popf
in
into
dec
push
rol
cmps
adc
neg
fs
jno
add
imul
fstp
(bad)
in
fs
jne
je
test
push
ret
popa
or
movs
jno
and
jg
ja
popa
mov
jle
xor
jmp
retf
popf
jbe
aaa
lea
inc
mov
movs
test
and
ror
inc
inc
dec
out
pop
hlt
xchg
mov
int3
dec
mov
out
das
outs
loopne
fist
stos
xor
ss
add
out
aad
(bad)
hlt
loope
dec
dec
xchg
xlat
jns
out
pusha
mov
xor
ins
cmc
mov
add
mov
fs
scas
shl
enter
add
push
mov
and
test
cld
sbb
(bad)
push
sahf
mov
mov
cld
jle
popa
div
xor
xor
ins
mov
push
lods
fs
mov
in
icebp
outs
mov
adc
cmp
retf
pop
stos
and
push
mov
mov
cmp
xor
iret
pop
dec
mov
(bad)
push
loopne
lds
mov
dec
xchg
ss
or
out
pop
nop
aad
inc
jb
out
sub
fs
push
and
pop
xchg
push
mov
aam
inc
cmps
mov
lds
xchg
or
mov
xor
add
iret
fidiv
retf
call
cmc
mov
push
sub
xor
addr16
adc
out
std
enter
add
add
mov
xor
push
inc
popa
cdq
lods
and
outs
push
lods
fld
pop
jo
lea
mov
or
dec
loope
jge
jne
mov
push
ja
inc
(bad)
push
mov
mov
(bad)
pop
xchg
mov
outs
out
cmps
pop
mov
pop
xchg
cmps
xor
mov
(bad)
and
xchg
aad
jnp
test
repnz
sahf
daa
xchg
and
cmc
adc
jb
out
dec
outs
aaa
add
inc
xchg
gs
repnz
add
ss
aas
mov
push
stos
and
lods
sub
imul
popf
movs
psrad
adc
xchg
scas
push
call
push
movs
push
xchg
pop
add
bound
cli
mov
aad
aaa
mov
lods
add
fadd
fdivr
or
scas
cs
cli
test
adc
mov
hlt
inc
cmp
xor
dec
xchg
jl
ss
xchg
cmp
cmp
aam
push
mov
cs
sahf
test
pop
arpl
sbb
mov
cdq
ds
in
popf
in
cld
ret
std
sti
jo
or
push
cmovne
sub
pop
cmp
mov
mov
jl
mov
std
sub
xor
rcr
call
sbb
push
clc
fwait
outs
or
dec
aad
(bad)
adc
add
fs
sub
shl
gs
sbb
shl
call
rol
arpl
push
jbe
mov
ins
push
mov
div
xchg
out
and
mov
adc
inc
bnd
pop
(bad)
loopne
repnz
push
xchg
fldenv
out
iret
push
es
inc
sbb
js
aaa
lods
add
ret
sbb
push
push
popf
js
je
sbb
mov
and
retf
xor
in
popf
cs
mov
pop
push
fdivrp
pop
in
cs
xchg
aad
or
mov
loopne
add
jbe
push
ins
test
loop
repnz
add
add
shl
xchg
fwait
push
mov
dec
lods
jg
mov
inc
into
jbe
pop
push
fsub
add
out
xchg
sar
lea
xchg
lds
xchg
ja
(bad)
mov
cs
or
gs
jnp
shl
mov
ret
out
sub
inc
fcom
jb
jle
sbb
or
inc
test
movs
cmps
imul
outs
cmp
int
je
xchg
call
push
cmps
stos
js
daa
imul
sub
inc
outs
add
jmp
in
add
push
jge
sbb
jl
add
jecxz
ja
jne
mov
dec
mov
std
push
enter
sub
ret
xchg
rol
lea
(bad)
jl
mov
test
inc
inc
mov
(bad)
stc
mov
dec
pop
sbb
imul
dec
ret
ror
in
ss
jnp
xor
adc
out
xchg
bound
mov
nop
in
jbe
aas
mov
rep
jno
dec
rcl
bound
out
push
les
call
pop
cmp
xchg
and
mul
pop
jo
sti
je
adc
cmp
xchg
js
jae
xor
mov
mov
push
add
mov
push
(bad)
fdivr
pop
jg
push
ror
push
(bad)
xor
outs
inc
out
es
add
and
xor
ja
pop
adc
add
not
xchg
das
xchg
add
inc
inc
es
and
mov
scas
dec
ficomp
lahf
int
mul
enter
jecxz
addr16
nop
je
stos
mov
cmps
mov
inc
adc
test
sar
ficom
inc
rcl
das
scas
mov
inc
mov
and
(bad)
(bad)
outs
div
jnp
lods
mov
dec
inc
retf
pop
ja
test
(bad)
adc
mov
mov
not
push
sbb
xchg
into
aad
mov
add
loop
jle
dec
fwait
adc
push
repnz
or
mov
adc
stos
xor
sub
aad
cmp
jmp
or
test
lea
or
fsubr
daa
pop
and
loop
xchg
and
aam
outs
mov
xchg
push
push
push
dec
rol
and
imul
div
push
stos
adc
xchg
jbe
dec
dec
sub
fild
(bad)
out
xchg
imul
inc
outs
mov
test
ss
movs
jp
lods
mov
lock
push
cmps
or
sar
aad
mov
xchg
mov
lea
push
push
and
aaa
es
mov
idiv
push
sti
imul
push
(bad)
aad
cwde
inc
jbe
push
dec
dec
neg
cmp
or
adc
xchg
enter
and
dec
push
aas
arpl
aam
mov
cmp
xchg
cmps
loopne
mov
aad
sahf
addr16
movs
xchg
sbb
neg
gs
mov
sub
mov
mov
outs
retf
add
pop
lods
jge
xor
je
aaa
or
test
gs
(bad)
sub
lock
xchg
ds
mul
movs
in
jbe
lds
fwait
push
jp
jbe
adc
data16
(bad)
xlat
jmp
xor
pop
test
and
(bad)
(bad)
repz
in
jns
sbb
(bad)
out
mov
inc
xor
push
mov
pop
xor
jmp
mov
lods
xchg
mov
fucom
mul
xor
mov
adc
(bad)
push
push
in
fwait
pop
xchg
rol
mov
adc
(bad)
dec
ja
loop
cmps
cmp
jnp
addr16
repz
inc
and
push
or
(bad)
fnsave
mov
cmc
adc
iret
push
sbb
icebp
cmove
addr16
fs
(bad)
test
xlat
push
pop
out
bound
inc
ss
pop
popf
stc
aam
je
pop
sub
xchg
xchg
std
mov
fld
movs
adc
hlt
jo
pop
lds
or
pop
pop
adc
je
out
cmps
dec
rcl
bound
addr16
jbe
cmc
mov
xor
xor
dec
into
test
in
and
pop
(bad)
and
je
out
ins
pop
inc
jle
das
dec
adc
xrelease
gs
sbb
(bad)
hlt
daa
ret
fs
or
xchg
add
push
mov
jnp
or
cmps
xchg
dec
xchg
cmc
in
mov
mov
ins
pop
rcr
mov
adc
inc
aad
xchg
div
cli
xchg
call
lock
jmp
enter
out
cmp
pop
cmc
xor
clc
gs
mov
mov
addr16
stos
rcl
out
inc
out
aaa
and
es
add
mov
leave
retf
movs
std
stc
pop
push
popa
popf
inc
mov
add
into
pop
mov
outs
sbb
add
inc
xchg
std
(bad)
xlat
test
ins
sub
imul
adc
add
sbb
push
(bad)
cld
mov
xor
cmp
dec
repz
mov
or
jecxz
ds
xchg
test
movs
and
pop
(bad)
mov
xor
xor
or
sub
mov
sahf
jno
pop
bound
jno
fmul
movs
sbb
add
mov
fs
mov
dec
gs
inc
pop
test
push
gs
lods
data16
inc
mov
and
ja
xor
pop
and
xchg
push
inc
gs
inc
sub
jb
mov
es
test
js
dec
add
mov
fisttp
stos
cmc
in
sti
outs
xchg
repnz
je
jno
push
inc
jecxz
in
adc
loop
mov
or
jno
add
xchg
dec
fisttp
add
sbb
addr16
dec
scas
repnz
mov
(bad)
sti
fcom
repz
xchg
mov
arpl
xor
xchg
je
and
xchg
dec
stos
cmps
mov
inc
adc
in
push
fsub
jbe
movs
mov
pop
lock
int
jge
repz
xchg
and
jbe
(bad)
movs
popf
test
cmc
adc
inc
push
movzx
jo
(bad)
cwde
sub
shl
shl
rcl
xor
movs
or
cvtps2pd
sub
cmp
lds
les
(bad)
loopne
loop
inc
mov
pop
mov
pop
sub
sub
ret
je
jne
xor
mov
xchg
popa
clc
shl
mov
xchg
(bad)
dec
add
fstp
in
lock
lea
or
pop
mov
das
pop
in
push
test
mov
dec
daa
mov
pop
inc
ss
push
pop
test
popa
inc
cmps
out
(bad)
fwait
jns
rcl
sub
out
repz
test
call
xchg
call
or
xchg
xor
mov
shr
adc
xchg
add
or
dec
movs
xchg
test
mov
call
sbb
xchg
rcl
pushf
jg
test
(bad)
ins
call
adc
movs
cmps
xor
outs
in
push
dec
sbb
les
lock
cli
cmc
xchg
push
shl
hlt
call
xchg
in
push
mov
aas
or
jl
test
(bad)
dec
test
sbb
push
sti
and
or
mov
arpl
xchg
daa
adc
and
xchg
adc
pop
or
mov
sbb
mov
(bad)
movs
dec
cli
xor
das
aaa
mov
xchg
outs
ds
aaa
sbb
cs
add
pop
imul
or
iret
dec
int3
push
mov
or
and
(bad)
das
out
imul
and
mov
sub
cwde
es
out
jne
inc
add
sub
addr16
xchg
cmp
das
cwde
neg
xor
xchg
(bad)
xor
lock
out
or
add
pop
mov
jo
adc
out
jmp
(bad)
ret
mov
bound
lods
adc
mul
jae
pop
addr16
jge
leave
fisub
stos
cmc
pop
sbb
test
popa
pop
adc
mov
pop
xchg
scas
xchg
and
out
ins
ret
fidivr
ret
out
push
test
xchg
int3
cs
cmp
dec
cmp
nop
sahf
add
and
mov
test
dec
inc
mov
adc
lock
lahf
arpl
xchg
icebp
and
ret
pop
xchg
jecxz
ds
mov
imul
xchg
xlat
fimul
dec
sbb
test
(bad)
loopne
(bad)
lahf
lahf
(bad)
aaa
je
inc
pop
sbb
mov
mov
xchg
push
sahf
sub
add
sbb
aas
and
and
xlat
xchg
sub
dec
dec
(bad)
push
dec
pop
sbb
(bad)
sub
inc
pop
dec
mov
jbe
(bad)
movs
nop
xchg
cmc
jb
sub
inc
aas
sub
movs
std
ja
mov
imul
jno
in
in
ins
jmp
pushf
fadd
aam
pop
pop
mov
pop
fnsave
aaa
in
(bad)
cli
shl
je
test
dec
aad
sub
fwait
pop
into
(bad)
mov
mov
bound
pop
inc
add
xor
push
cmp
fwait
(bad)
adc
sbb
dec
fwait
popa
inc
cmp
xor
xchg
add
inc
or
div
add
hlt
daa
adc
mov
inc
jne
clc
mov
les
adc
aas
rep
or
jmp
inc
xor
sub
jl
push
mov
add
aad
cmc
push
mov
jno
mov
(bad)
push
cmps
addr16
(bad)
jl
sub
xor
mov
(bad)
fs
loopne
xchg
push
imul
rcl
xor
inc
xor
push
loop
pop
shl
sub
jl
sub
push
aad
dec
(bad)
out
loopne
loop
(bad)
xor
test
jns
ja
arpl
push
hlt
(bad)
xor
out
add
mov
push
adc
mov
inc
push
imul
call
xchg
mov
lds
xor
inc
cld
daa
in
or
push
movs
callw
push
call
loope
fld
xor
mov
adc
enter
sahf
xor
cmps
fnstsw
mov
and
add
movs
cmps
out
movs
xchg
xchg
cmp
out
sahf
(bad)
ss
add
enter
xor
jne
jle
push
jo
clc
add
add
inc
arpl
cmps
fcomp
push
xchg
je
mov
dec
inc
cmps
call
ds
add
mov
sub
fistp
in
xchg
xlat
scas
xchg
mov
not
push
xor
add
jbe
adc
sub
xor
pop
jle
adc
adc
sbb
cwde
dec
(bad)
mov
je
jnp
rol
icebp
lea
jno
or
arpl
test
in
adc
loope
mov
test
sbb
int
pop
sub
xchg
call
dec
pop
ins
mov
lock
mov
loopne
std
add
xor
adc
mov
xor
ret
movs
fsub
je
xor
ror
(bad)
adc
jo
mov
adc
mov
xor
stos
jg
ret
fwait
and
ja
test
mov
daa
ror
pop
cli
mov
movs
jne
xchg
movs
clc
ja
jg
outs
int
pop
or
cmp
push
or
enter
pop
mov
pop
add
js
xchg
xor
xchg
cmp
clc
cmp
aas
fsub
and
jno
rol
nop
pop
mov
cmps
dec
cmps
icebp
lods
inc
xor
xchg
xor
add
mov
out
cmp
xchg
je
in
movs
je
scas
jo
mov
outs
mov
imul
js
mov
push
push
xor
push
xor
js
loopne
sbb
in
lock
cwde
cmp
jb
sbb
ds
and
mov
or
lock
push
test
dec
jecxz
cdq
inc
mov
xor
repnz
aam
shl
mov
mov
outs
int
add
jo
pop
ret
sbb
in
addr16
popf
fs
adc
daa
xchg
push
sbb
repz
jbe
fs
sub
jo
aam
repz
mov
xor
fwait
push
(bad)
mov
rcr
dec
les
in
push
xcrypt-ofb
cmps
out
pop
cmps
out
pop
movs
xchg
int3
jmp
pop
hlt
inc
add
fwait
push
adc
pushf
(bad)
mov
test
adc
ds
push
mov
pop
outs
in
hlt
aaa
idiv
lods
shl
test
adc
jge
aam
cmp
push
jl
fld
mov
out
mov
in
cmps
dec
xchg
xor
test
jne
dec
fcom
aaa
in
adc
push
cli
mov
int3
jecxz
std
dec
jmp
aaa
call
out
push
and
cmc
add
dec
out
sbb
fmul
cwde
add
inc
and
mov
push
out
mov
push
xchg
fs
dec
nop
dec
iret
sub
and
cmp
data16
fist
pop
pop
xchg
or
dec
stos
(bad)
lea
gs
mov
adc
or
lock
sbb
mov
out
mov
mov
cmps
in
mov
or
test
out
sub
mov
xchg
sets
sub
jo
pusha
sbb
lds
xchg
pop
xchg
jne
daa
aad
je
cmc
lock
xchg
add
pop
inc
xchg
add
jnp
in
cmp
xchg
aaa
movs
sbb
mov
xchg
pop
jne
push
out
(bad)
popa
xchg
dec
std
rcr
(bad)
call
ins
mov
mov
lock
xchg
jecxz
xchg
dec
push
shl
je
or
aas
mov
ins
dec
mov
mov
adc
sar
mov
sub
mov
aas
aad
lods
ftst
popa
sbb
das
mov
push
mov
scas
jecxz
pop
mov
push
jecxz
push
mov
neg
nop
mov
mov
push
cld
mov
dec
(bad)
add
out
mov
cmp
cmc
imul
mov
push
ror
repz
int3
lea
pop
enter
or
(bad)
arpl
xchg
imul
cdq
push
movs
(bad)
(bad)
mov
adc
mov
call
jmp
ret
test
iret
sub
jecxz
mov
std
iret
lahf
in
and
mov
or
call
retf
sbb
inc
mov
(bad)
sub
xlat
cmps
daa
jnp
jne
test
lea
in
in
mov
(bad)
push
popa
jno
jb
adc
xchg
adc
xlat
cdq
(bad)
cmp
and
pop
push
scas
inc
stos
mov
cdq
jns
add
xchg
out
and
mov
push
sbb
scas
sbb
bound
adc
mov
rcl
adc
and
push
and
shl
(bad)
and
loop
inc
int3
(bad)
fwait
pop
dec
add
push
je
adc
in
inc
sub
loop
(bad)
sti
or
(bad)
lods
sub
pop
push
or
cmp
mov
pop
cdq
outs
gs
cmp
bound
xor
inc
popa
mov
adc
adc
inc
push
xor
push
cmps
or
test
cli
popa
pop
add
cli
div
mov
cmp
ror
test
pop
or
jns
out
push
push
sahf
leave
and
test
je
test
inc
jbe
pop
movs
dec
xlat
jg
add
mov
add
ja
sub
movs
push
(bad)
pop
adc
pop
xchg
or
in
fwait
inc
clc
or
add
pushf
test
jae
or
mov
mov
rcl
sahf
pop
mov
jmp
outs
cmps
stc
hlt
push
push
dec
movs
(bad)
xchg
out
dec
push
mov
aas
sahf
cs
cs
hlt
mov
xchg
test
stc
xchg
adc
cmp
imul
ss
stos
scas
mov
pop
inc
push
cwde
inc
ror
popa
imul
stc
gs
dec
aad
adc
and
jne
cmps
int
xchg
pop
mov
inc
mov
push
inc
jmp
es
adc
mov
jne
push
test
out
push
push
les
dec
push
mov
gs
push
out
pop
test
into
mov
push
dec
xor
push
ins
pop
hlt
jp
push
cmp
adc
push
sub
and
out
and
mov
movs
cmc
sub
adc
push
cmp
add
out
loop
xchg
push
fimul
out
scas
pop
iret
add
imul
test
sbb
xchg
jno
sti
sub
add
(bad)
clc
mov
or
popa
das
jbe
xor
dec
in
div
outs
fnsave
xchg
xchg
idiv
imul
jno
mov
test
test
pop
ins
inc
jne
pop
stos
xchg
imul
(bad)
ds
xchg
popa
add
imul
call
push
shl
xor
rcl
ss
xchg
(bad)
rol
iret
xor
pop
fist
ss
xchg
mov
adc
icebp
xor
mov
sbb
(bad)
aam
and
inc
(bad)
push
and
push
adc
xor
popa
repnz
push
mov
xor
shl
inc
or
inc
add
movs
ret
push
das
and
addr16
push
add
aad
clc
mov
ins
adc
lea
stc
xor
daa
ficom
outs
pop
fldenv
imul
pop
sub
adc
pop
xlat
xchg
sub
leave
mov
push
and
arpl
jbe
pop
lahf
or
pop
xor
shl
rcl
es
and
pop
mov
lock
dec
adc
lods
and
inc
out
lds
cld
cmc
add
scas
das
lods
lea
pusha
sub
sbb
adc
adc
inc
test
fst
daa
sub
jb
xchg
xchg
and
jne
movs
gs
ret
bnd
pop
mul
movs
push
inc
movs
mov
ja
pop
shr
adc
xchg
rol
in
fiadd
mov
jae
lds
push
xchg
lock
ss
cmc
add
mov
add
(bad)
cmp
ja
add
daa
push
push
das
push
aaa
shl
dec
xlat
js
je
dec
and
adc
pushf
imul
es
aad
cmc
test
(bad)
cld
mov
in
xchg
lea
stc
fs
imul
mov
sbb
lods
rol
(bad)
(bad)
repz
sub
bound
mov
pop
jp
ror
push
out
aaa
xchg
ss
das
mov
mov
sub
push
push
add
fwait
sbb
test
outs
mov
cmc
push
xchg
adc
push
aam
or
imul
and
(bad)
loop
shl
popa
mov
(bad)
sbb
xor
data16
in
jecxz
inc
call
dec
mov
cmc
and
popf
scas
xchg
cmc
movs
sub
push
dec
or
jmp
inc
adc
test
xor
jo
cdq
mov
adc
pop
mov
std
mov
mov
mul
jbe
outs
rcl
lahf
das
sub
fcmovnb
test
jnp
mov
shl
mov
test
cmps
jbe
cmps
jmp
das
sahf
pop
pop
pop
mov
sub
mov
and
fwait
cld
jnp
xor
shl
ins
push
mov
lahf
repnz
mov
outs
xlat
test
mov
push
test
(bad)
daa
loop
fwait
xor
inc
adc
in
add
inc
cmp
inc
lds
push
xchg
inc
aas
sub
add
test
inc
cli
and
test
cmp
and
cmps
push
test
scas
movs
dec
sub
(bad)
dec
or
push
inc
mov
out
loop
in
mov
es
in
aam
jo
(bad)
fadd
cmp
int3
div
daa
mov
sub
pop
call
mov
ja
je
jne
sub
pop
leave
movzx
imul
push
jl
stos
(bad)
or
ja
sbb
enter
xchg
lods
daa
mov
xchg
push
jmp
sub
pop
movs
mov
retf
mov
rcl
push
fwait
call
sub
xor
ret
mov
mov
ds
out
push
or
adc
stos
inc
sub
fstp
mov
lock
ja
repz
and
adc
xlat
adc
mov
je
movs
jbe
xchg
inc
(bad)
jnp
in
and
mov
movs
add
jo
xchg
xchg
aaa
cs
ret
popa
pop
jecxz
add
aad
push
call
mov
sbb
dec
xchg
push
out
test
out
ja
je
cmp
(bad)
not
call
pmulhuw
sub
ss
inc
fs
adc
add
(bad)
into
sbb
cmp
inc
sub
xchg
inc
cmp
call
and
test
test
xor
xor
fst
(bad)
or
cmp
fisttp
add
jl
sbb
push
xchg
in
xchg
inc
lea
gs
and
inc
lods
daa
pop
add
daa
es
je
push
mov
and
xchg
outs
test
mul
adc
add
dec
mov
push
cmps
push
leave
retf
out
mov
sbb
xor
outs
aad
pop
lds
sar
pop
add
jae
stos
sbb
pop
dec
enter
scas
repz
in
pop
dec
or
xor
xchg
aad
mov
add
cmp
stos
hlt
and
mov
test
(bad)
mov
dec
addr16
dec
(bad)
fadd
rcl
xor
push
mov
retf
gs
push
and
in
pop
cmc
aad
jecxz
sbb
sub
dec
jg
into
(bad)
hlt
hlt
add
xchg
pusha
dec
push
in
hlt
clc
out
outs
rcl
sbb
mov
mov
test
mov
stos
out
daa
cdq
jg
into
test
adc
cmc
cwde
test
outs
ins
jae
test
jne
inc
add
sub
shr
cmc
mov
shl
cmps
sub
hlt
in
and
je
inc
mov
xor
adc
retf
mov
test
cmp
stos
arpl
xor
adc
xor
sbb
cs
mov
icebp
mov
mov
dec
pop
xlat
add
and
out
ficom
mov
sub
imul
sbb
repnz
mov
daa
(bad)
int3
xchg
fdiv
inc
cs
sbb
shl
out
jle
cli
call
nop
dec
and
cmc
mov
in
mov
inc
cmc
sti
pop
(bad)
ja
test
pop
in
(bad)
sbb
push
and
pushf
or
test
mov
les
xchg
xchg
xchg
mov
jp
cdq
inc
xchg
hlt
rcr
mov
clc
sub
pop
test
or
sub
addr16
pop
daa
je
shl
aaa
cmps
adc
xchg
pop
push
pop
xchg
lea
sub
inc
push
add
xchg
mov
ror
cdq
dec
xor
push
sub
nop
mov
pop
in
pop
push
arpl
sbb
fs
dec
push
xor
cmp
and
dec
inc
daa
push
push
ficomp
ss
xlat
jl
popa
addr16
pusha
rol
push
or
mov
daa
into
fnstcw
test
les
aad
addr16
loope
les
xor
out
test
test
fidivr
arpl
jbe
or
ja
jbe
and
jmp
inc
into
dec
out
mov
sti
scas
ret
mov
pop
idiv
js
jne
rcr
test
mov
lea
movs
hlt
dec
outs
mov
fmul
pop
dec
dec
fwait
inc
inc
lahf
cld
pusha
push
aad
mov
mov
cs
out
not
adc
pop
outs
xlat
lds
and
popf
jecxz
in
outs
sti
clc
xor
dec
bound
jbe
push
into
jle
sbb
and
ds
int3
aas
mov
dec
add
xchg
inc
jmp
mov
jo
and
out
cmp
adc
rol
mov
mov
dec
popa
jo
sub
dec
out
add
xor
push
push
inc
nop
add
js
mov
test
test
cmps
xor
jge
stos
shl
es
xor
hlt
inc
movs
ror
inc
adc
ins
dec
jge
loop
sbb
test
aad
xor
out
bound
ret
mov
mul
pop
add
xchg
es
sbb
mov
in
xor
xchg
dec
push
xor
jl
jb
push
in
test
pop
xchg
lds
add
fist
ss
test
fimul
loopne
movs
dec
std
xchg
pop
nop
sub
imul
mul
scas
shl
hlt
mov
cwde
cmp
(bad)
xlat
push
cwde
add
xor
or
inc
repnz
dec
cmp
and
retf
in
add
inc
imul
mov
icebp
adc
lea
mov
push
xlat
cmp
test
dec
adc
mov
inc
hlt
ret
xor
jge
leave
xor
mul
xchg
ret
je
cmp
stos
sbb
(bad)
cmc
movs
hlt
paddsw
mov
stc
out
retf
in
and
and
add
call
add
cmp
icebp
pop
jg
jb
push
inc
cwde
aam
sar
repz
ja
and
and
push
pop
inc
mov
dec
les
cwde
add
push
cmp
fld
sub
push
iret
xor
daa
add
push
jp
out
jp
sahf
pop
jnp
add
or
mov
mov
fist
leave
nop
push
jbe
push
jmp
pop
xchg
cmp
push
xchg
push
pop
loopne
jmp
out
push
inc
lahf
jnp
outs
mov
test
add
mov
ins
popa
test
aad
jns
pusha
xlat
xchg
sub
xor
lods
hlt
jge
cmp
sub
mov
push
xchg
inc
and
fisttp
xchg
pop
es
fidivr
jg
xchg
lods
push
mov
xchg
push
jmp
push
test
pop
dec
inc
dec
and
sbb
xor
push
push
dec
jge
and
in
shl
cld
aaa
int
xor
and
retf
pop
mov
sbb
lock
cmp
pop
mov
inc
sub
mov
js
mov
inc
xlat
sbb
inc
add
mov
dec
mov
pop
mov
or
test
ja
adc
or
inc
jnp
in
add
fs
pop
sub
mul
xchg
dec
push
lods
out
xchg
in
lds
aam
dec
neg
inc
push
sti
or
xchg
int
push
rcl
fist
cmp
out
pop
inc
rcr
ret
movs
sub
aam
movs
inc
pop
test
sbb
or
fidivr
push
inc
inc
sahf
outs
movs
jb
mov
sub
mov
fild
les
lea
push
sub
xor
pop
ins
call
jo
or
cmp
jmp
out
mov
cdq
sar
stos
cmps
fist
int
aaa
in
aaa
cmps
xchg
inc
fcom
pusha
std
sbb
xlat
jne
cmp
sar
or
push
sbb
pop
int3
cdq
xor
add
dec
inc
pop
push
xchg
mov
mov
mov
out
fsub
inc
in
icebp
inc
xlat
jmp
xchg
dec
adc
les
js
jmp
xlat
cmp
adc
movs
inc
xor
sar
and
pop
stos
fsubr
xchg
rol
je
(bad)
sti
pop
xor
mov
mov
adc
inc
mov
jle
hlt
dec
not
fdivr
cmp
scas
jae
nop
in
mov
mov
jp
xchg
adc
mov
jmp
bound
inc
jae
inc
inc
lods
jmp
add
xchg
or
pop
ret
jne
pop
mov
aam
jbe
sub
(bad)
retf
pop
sti
(bad)
push
xlat
push
repnz
addr16
cmp
(bad)
mov
xchg
jne
dec
ds
movs
cwde
js
retf
xor
(bad)
test
out
sub
outs
mov
and
dec
or
push
sub
xchg
push
daa
fs
in
inc
xor
xlat
ss
test
shl
cdq
(bad)
pop
push
mov
push
sbb
sub
sub
ror
push
cmc
pop
and
sub
inc
das
jle
nop
rol
xchg
xchg
das
push
retf
into
dec
(bad)
scas
es
aam
nop
(bad)
in
push
lahf
fcom
dec
test
xchg
cmp
and
ja
xchg
mov
call
sbb
(bad)
inc
sbb
daa
icebp
scas
(bad)
cmps
mov
and
mov
push
or
aad
pop
mov
add
stos
bound
pop
or
lock
movs
and
xor
adc
ins
call
(bad)
cmps
adc
fcom
in
cmp
loop
(bad)
hlt
xchg
cwde
pop
fimul
stos
int
leave
inc
push
and
dec
lds
inc
xchg
or
pop
add
adc
xchg
lock
mov
outs
outs
jmp
xchg
ins
adc
aaa
fild
cmps
repnz
jnp
arpl
out
xchg
retf
sbb
xchg
fsub
mov
add
jecxz
jmp
xor
sti
pop
cmp
int3
inc
dec
leave
shr
mov
mov
into
cmps
not
xor
or
icebp
jae
jle
data16
xlat
xchg
mov
add
add
ins
fisttp
(bad)
push
int
cmps
pop
mov
(bad)
xchg
retf
es
pop
xor
not
test
hlt
and
popf
add
mov
mov
in
add
imul
sub
call
xlat
test
and
in
test
adc
adc
jne
in
out
movs
inc
xchg
jno
cmp
aam
cmp
jbe
and
aam
and
repnz
add
xchg
and
push
add
call
shl
data16
rcl
sub
mov
std
xchg
sti
arpl
mov
inc
ins
pop
rol
ja
data16
inc
scas
gs
mov
movs
and
shl
test
add
mov
push
mov
push
shl
out
push
jbe
es
gs
add
cli
add
xchg
rcl
cdq
movs
enter
xchg
(bad)
xlat
xchg
dec
sti
lods
std
pop
retf
leave
aas
add
push
push
xchg
(bad)
cdq
sub
xchg
jnp
sub
push
xchg
out
aad
or
xor
das
xchg
fist
(bad)
icebp
xor
mov
jae
mov
pop
movs
dec
adc
in
out
xchg
mov
loop
stc
fisttp
addr16
dec
jecxz
push
jo
jo
and
cli
mov
push
mov
mov
mov
cmp
lds
push
push
mov
add
add
jmp
scas
clc
push
lods
clc
add
sahf
mov
scas
fisttp
pop
xlat
pop
xchg
sbb
in
mov
mov
and
jnp
fisub
sbb
xlat
aam
loopne
jge
mov
adc
xchg
mov
mov
inc
movs
sar
xchg
es
scas
out
xor
test
mov
adc
in
sub
add
imul
outs
cmp
adc
inc
xor
pop
jge
lds
dec
sti
adc
sbb
xchg
fst
std
pusha
jl
push
in
neg
push
call
or
cmps
sub
movs
jns
mov
mov
xchg
adc
loopne
adc
popf
ss
push
xchg
push
or
xor
mov
into
ja
test
cmp
mov
xchg
in
xor
push
ja
add
std
in
ret
xchg
inc
mov
xor
ret
push
lahf
jle
(bad)
in
gs
jno
fs
out
xchg
adc
and
adc
jg
je
push
push
(bad)
adc
out
cdq
rcr
mov
mov
dec
jge
xchg
cmp
clc
push
aad
cmc
pop
scas
retf
cs
push
shl
or
mov
xlat
ror
pop
fdiv
inc
mov
cmp
shr
push
rcl
adc
out
jmp
inc
mov
inc
cmc
(bad)
int
adc
jp
aas
(bad)
movs
push
push
stos
xor
pop
or
xchg
loopne
dec
xor
and
out
push
inc
cs
and
sar
pop
dec
and
inc
out
push
or
(bad)
out
(bad)
out
inc
xchg
cmc
aaa
adc
(bad)
xor
out
adc
mov
push
xchg
(bad)
cmp
hlt
repnz
xor
and
pop
ret
movs
mov
jo
jne
dec
ins
retf
icebp
fld
ja
inc
jb
imul
sub
xor
hlt
sub
push
out
sbb
jmp
out
aad
in
loopne
test
pop
pop
je
repz
stos
(bad)
outs
rcl
pop
(bad)
xchg
je
push
(bad)
fldenv
and
pop
js
pushf
mov
(bad)
in
push
mov
dec
and
rcr
dec
push
xadd
xchg
nop
inc
outs
push
xor
idiv
jge
aam
jecxz
dec
addr16
(bad)
pop
(bad)
mov
and
mov
xchg
dec
lock
adc
push
xor
in
xor
add
aam
pushf
xor
add
movs
in
int3
repnz
jg
pop
rcl
cld
cmc
mov
dec
push
leave
add
rol
sub
call
mov
mov
les
xchg
(bad)
stos
cmp
pushf
pop
int3
lods
jnp
mov
data16
repz
mov
inc
push
cmp
ret
xor
xchg
inc
das
mov
jge
popf
repnz
mov
test
cmc
mov
adc
sub
pop
mov
inc
adc
add
mov
loopne
cmp
mov
aaa
or
repnz
nop
sub
fstp
sbb
imul
hlt
mov
add
add
test
inc
mov
arpl
and
ss
jae
add
mov
mov
es
pushf
or
pop
(bad)
cmps
hlt
xor
test
in
test
xchg
test
mov
mov
ror
inc
and
sbb
inc
(bad)
test
js
push
pushfw
mov
pop
fcom
sahf
mov
mov
ror
inc
ret
fimul
dec
mov
mov
out
sub
mov
into
mov
dec
inc
test
or
aad
push
icebp
sti
push
adc
mov
fld
gs
popf
icebp
dec
mov
stc
mov
ss
test
and
in
inc
push
push
rcl
xchg
dec
cmc
js
inc
in
lods
push
data16
arpl
add
repnz
xor
mov
mov
lock
xchg
outs
mov
mov
jb
lock
sub
jnp
push
sub
jae
mov
pop
jnp
and
mov
pusha
cmp
xchg
cmps
gs
cmp
xchg
ret
dec
inc
jb
dec
stc
aam
mov
pop
rcl
ss
sub
dec
out
les
jle
dec
jns
rcl
mov
mov
xor
into
jge
pusha
cwde
mov
aam
push
jp
loopne
mov
xchg
cmp
aam
fld
xor
xlat
ss
dec
add
or
sub
push
in
mov
mov
mov
jmp
xor
rol
push
sti
(bad)
test
movs
push
mov
inc
pop
pop
mov
shl
arpl
fiadd
inc
iret
cmp
rcr
cmps
into
je
fisub
add
cmp
jmp
lods
pop
add
push
mov
and
shr
add
retf
xlat
out
cmp
cmp
sub
mov
and
mov
es
adc
add
jbe
mov
lea
bound
cvtps2pd
mov
jp
in
add
jecxz
cdq
pop
mov
inc
add
dec
fwait
ja
repz
mov
shl
push
pop
push
ret
neg
lea
fdivr
test
jno
mov
mul
xor
pop
and
pop
shl
fcomip
inc
popa
rep
cmps
jl
add
scas
and
(bad)
and
xor
pop
test
lock
cmp
out
sub
add
(bad)
mov
or
mov
sbb
cs
add
(bad)
push
cmps
fnsave
mov
inc
(bad)
pop
repnz
pop
test
call
adc
(bad)
pop
or
mov
mov
ss
imul
xor
arpl
stos
mov
mov
inc
inc
and
ja
movs
mov
rol
lods
cmp
shl
mov
push
cmc
xchg
xchg
xchg
fs
push
xchg
jmp
push
pop
push
lds
cmp
je
inc
push
push
je
in
fidivr
aad
jbe
push
cmp
mov
xchg
pop
mov
gs
push
inc
or
jne
dec
int
mov
push
das
xor
sub
jne
stos
es
push
adc
inc
fwait
push
push
data16
jns
imul
out
inc
xor
xchg
cli
std
jl
shl
mul
leave
cdq
xchg
push
es
shl
pop
fwait
ja
js
out
inc
xchg
jo
and
sbb
xchg
cmp
(bad)
std
push
shr
sbb
pop
pop
dec
(bad)
rol
xor
pop
adc
int3
out
xor
xor
loope
in
jle
inc
add
push
push
jle
add
sahf
mov
jmp
gs
(bad)
leave
mov
adc
push
pop
cmp
shl
inc
push
or
mov
push
cmp
les
ss
daa
xchg
loope
ins
sti
popf
je
kaddw
in
push
add
es
push
mov
push
sbb
retf
xchg
daa
mov
es
(bad)
inc
jb
push
jne
inc
pop
mov
push
not
and
cmc
dec
inc
push
scas
bound
ror
call
fstp
fistp
mov
test
xor
xchg
xor
xchg
and
xchg
jmp
add
inc
ins
jno
jbe
mov
cmps
gs
sahf
call
fisttp
aaa
arpl
ficom
lods
int
mov
jmp
add
cmps
dec
mov
pushf
jno
pop
xor
sub
ja
mov
and
fst
pop
adc
movs
sbb
mov
xor
repz
jne
inc
(bad)
in
and
dec
and
xchg
jmp
xchg
or
aaa
fidiv
adc
ret
fisub
test
jbe
xchg
mov
sbb
nop
test
mov
adc
push
mov
addr16
or
cmp
sub
icebp
ficom
aam
inc
imul
sub
xchg
arpl
cdq
jp
and
inc
rol
in
add
xor
cmp
xor
aam
inc
push
popa
pop
fwait
cli
in
aam
jmp
add
loop
es
addr16
jne
jmp
jle
movs
jne
and
mov
or
add
not
ss
mov
mov
mov
mov
scas
and
and
imul
push
ja
inc
dec
and
sahf
push
mov
xor
ficom
xchg
jmp
or
sahf
(bad)
or
jbe
xlat
int3
add
xor
jecxz
(bad)
dec
cmp
and
fbld
xchg
shl
in
mov
test
call
push
cmp
dec
jnp
jno
jne
xor
add
and
fcomp
ss
pop
out
inc
leave
sahf
and
xchg
inc
push
mov
loop
cmp
loope
add
in
inc
sub
sbb
hlt
add
movs
xchg
push
pop
xlat
sbb
push
adc
in
in
test
out
into
push
mov
shl
and
and
nop
push
cmp
rcl
ficomp
lea
in
mov
jecxz
push
adc
adc
ins
inc
xchg
retf
mov
jo
mov
or
pop
popf
jp
mov
scas
xchg
xor
inc
add
mov
cmc
add
mov
adc
mov
mov
mov
dec
xor
sub
dec
xlat
in
mov
mov
or
push
inc
add
rcl
aam
jmp
in
pop
out
add
lea
sbb
jbe
arpl
push
mov
in
adc
mov
mov
(bad)
mov
outs
push
add
rcr
and
push
int
sti
pop
or
call
aad
xchg
aad
(bad)
repnz
adc
and
fld
rcl
out
pop
rcr
xchg
and
daa
fstcw
xlat
push
adc
ret
test
jno
add
scas
je
xor
add
push
pop
mov
inc
popf
add
lods
mov
aaa
sar
in
sub
and
adc
mov
push
push
inc
retf
mov
sbb
ret
lea
scas
fwait
dec
mov
inc
mov
pop
mov
sbb
cmp
cmp
sbb
ret
mov
(bad)
jle
loop
xchg
xchg
mov
cmp
inc
cdq
stc
movs
and
sub
sub
push
xor
sub
mov
test
inc
pop
ja
jmp
xor
ucomiss
int
dec
mov
mov
xor
shl
push
xchg
and
idiv
pop
inc
and
ja
pop
out
inc
push
xor
xchg
fisttp
cmc
xchg
int
icebp
cs
(bad)
stos
in
ja
jecxz
rcl
jge
in
mov
cdq
enter
mov
pop
mov
ret
cmp
mov
into
mov
xchg
push
call
cmp
aaa
sub
fld
iret
add
lods
inc
mov
test
in
jb
fdivr
xor
cmp
mov
icebp
cmp
jmp
dec
push
bound
and
adc
add
aaa
fadd
inc
cld
in
(bad)
iret
mov
movs
fdiv
es
rol
cwde
adc
xchg
in
dec
sbb
cmps
push
hlt
xchg
scas
lods
xor
out
(bad)
movs
test
icebp
aaa
sbb
dec
push
add
cdq
ja
lods
loop
mov
and
imul
push
es
inc
xor
aam
jge
es
dec
and
xchg
pop
xlat
aam
or
loope
nop
daa
stos
dec
jle
jne
aam
cmp
stos
cmc
out
sbb
xchg
xchg
push
jno
lods
xchg
pop
pop
jl
fcmovb
push
add
inc
out
xchg
mov
mov
out
or
pushf
fbld
xchg
xchg
sub
push
movs
bound
aad
xchg
in
push
pop
push
inc
test
ss
jnp
rcr
movs
cs
jmp
daa
push
push
xchg
popf
mov
inc
hlt
xor
fbld
inc
and
jno
pop
repnz
scas
add
add
daa
lds
cmc
inc
inc
adc
ins
cwde
mov
pop
pop
mov
push
jne
and
rcl
repnz
push
xor
(bad)
arpl
aam
xchg
add
push
adc
test
jnp
pop
in
push
xchg
sbb
jg
cmc
das
clc
fdiv
ss
inc
mov
adc
div
push
movs
pop
popf
ja
jne
mov
cmc
(bad)
(bad)
xlat
repnz
fisub
xor
ins
out
xchg
push
jbe
jbe
out
adc
mov
mov
inc
mov
call
mov
jo
pop
push
pop
sahf
out
fs
es
enter
clc
add
jne
fdiv
sub
inc
hlt
ins
jg
(bad)
loop
xchg
lods
(bad)
gs
loopne
add
je
pop
stos
int3
adc
je
mov
xor
push
mov
and
je
ss
es
pop
push
and
aad
mov
in
xchg
bound
add
mov
sbb
inc
pop
and
lock
push
mov
cwde
mov
mov
stos
je
sbb
in
cmps
imul
stos
je
push
out
push
jne
inc
pop
bound
mov
mov
loop
jmp
xor
call
fld
adc
leave
loopne
push
jge
adc
inc
loopne
pop
jno
test
les
pop
lock
adc
jne
or
loope
jmp
push
ja
imul
es
daa
in
xchg
mov
xor
jle
xchg
push
aas
mov
idiv
scas
add
sbb
scas
in
jge
loopne
fwait
sub
pop
jecxz
jecxz
sub
ins
out
loop
add
inc
mov
loope
mov
adc
mov
pop
cmp
les
xor
ins
jecxz
xchg
into
retf
shr
push
sub
aaa
xlat
pop
pop
cs
mov
imul
loopne
aas
and
dec
and
push
xchg
loop
push
sub
daa
imul
into
dec
(bad)
adc
mov
hlt
xchg
inc
inc
fidivr
mov
out
push
mov
and
fisttp
inc
cwde
repnz
dec
xchg
cld
sar
xor
cdq
out
(bad)
xor
movs
mov
je
dec
jns
loopne
jbe
leave
push
xchg
mov
inc
adc
aas
and
loop
push
mov
lds
(bad)
mov
daa
dec
inc
fs
int3
mov
mov
int
popf
add
sti
push
jle
push
movs
push
mov
push
popf
adc
out
jl
jns
outs
jbe
add
aad
jno
in
inc
cmc
push
jb
scas
ror
outs
lods
daa
xchg
add
in
xor
adc
test
cmps
push
pop
popa
clc
ss
push
out
out
push
repnz
pusha
sub
daa
sub
jno
jnp
xor
sub
mov
xchg
(bad)
sub
push
test
cwde
mov
cwde
mov
jns
sbb
xlat
push
leave
push
in
dec
cmp
fidivr
mov
(bad)
in
(bad)
shl
xchg
inc
mul
aaa
inc
in
xchg
mov
inc
dec
fsub
mov
dec
pop
dec
lods
or
movs
jne
xchg
sbb
adc
or
mov
pop
jns
xchg
jnp
and
iret
cmps
jne
pushf
fld
rcl
call
cmps
push
mov
stos
clc
xchg
aad
hlt
jle
mov
repnz
inc
pop
cmp
fcomp
and
sub
scas
(bad)
xchg
mov
out
mov
mov
mov
cmps
test
inc
sbb
adc
xchg
or
lds
mov
mov
or
fstp
loopne
or
bound
mov
aad
ins
push
fnstenv
or
push
xor
idiv
xchg
cli
cmp
mov
xchg
xchg
jbe
adc
jns
inc
mov
xchg
xchg
adc
xor
shl
push
mov
movs
cmps
(bad)
rol
xlat
cld
ret
pop
shr
and
gs
arpl
dec
fstp
cwde
push
add
mov
in
repz
les
push
imul
push
test
jl
popa
aaa
mov
popf
inc
out
js
sti
xor
test
xchg
and
test
mov
shr
test
lahf
and
push
push
xchg
inc
sbb
xor
ret
gs
sbb
push
sub
mov
in
mov
rcl
repz
dec
push
pop
adc
xor
pop
test
pusha
addr16
xchg
sbb
add
add
mov
shl
movs
xor
iret
ds
stc
popf
adc
cmps
mov
push
fwait
pusha
fiadd
mov
pop
pop
pop
icebp
hlt
jge
in
(bad)
cmp
sbb
jae
enter
in
inc
(bad)
mov
icebp
fisubr
add
mov
repz
(bad)
push
test
mov
jno
int3
retf
cmp
popf
lahf
jnp
adc
xor
and
add
hlt
pop
into
stc
ins
neg
xchg
aaa
loopne
ds
(bad)
and
outs
retf
add
or
dec
jbe
sbb
outs
jnp
xchg
rcl
mov
cmps
cmp
pop
loopne
and
push
ret
mov
or
test
outs
rol
push
sbb
test
mov
add
dec
pop
jno
daa
mov
(bad)
push
fidiv
in
pop
xchg
inc
add
jmp
gs
dec
daa
sbb
stos
dec
es
add
adc
xor
pop
adc
adc
push
inc
(bad)
out
xor
push
mov
jne
inc
aaa
xor
push
add
inc
stos
xchg
out
cmp
xor
out
push
jne
sub
or
mov
push
es
in
popa
test
(bad)
cmps
sub
push
cmps
lods
add
in
jo
mov
inc
xchg
mov
ds
dec
jmp
(bad)
bound
xor
stc
and
adc
(bad)
std
fcmove
sbb
out
add
je
xchg
inc
loop
not
clc
repz
fsub
mov
xchg
cmp
pop
cmp
mov
test
pop
lea
out
adc
adc
pusha
xor
(bad)
jl
shl
xor
mov
imul
daa
data16
xchg
cmp
jns
aam
rol
and
push
dec
daa
hlt
pusha
xchg
push
mov
xchg
mov
ror
lock
scas
inc
jno
data16
lock
adc
mov
inc
xlat
or
inc
dec
dec
push
add
pop
push
and
pop
add
idiv
inc
por
xor
popf
pushf
jmp
repz
outs
fwait
xchg
xlat
push
(bad)
or
dec
cmp
jbe
or
sbb
push
icebp
adc
out
mov
and
adc
xchg
lock
dec
hlt
mov
push
cmps
pop
mov
xchg
and
ds
das
inc
inc
adc
movs
mov
sub
sub
cmc
inc
lahf
(bad)
cmps
fs
jmp
jnp
in
js
in
adc
aad
push
cld
(bad)
popa
fbld
lock
xor
iret
scas
ror
add
das
or
sbb
test
push
sbb
in
lds
shr
lds
pop
fidiv
push
lds
mov
mov
add
gs
enter
je
nop
push
cld
scas
cmps
sbb
aad
lea
stc
jg
push
lods
(bad)
imul
pushf
cli
lods
lods
push
ret
int
mov
cwde
shl
ds
inc
xchg
xchg
jne
sbb
dec
xchg
push
mov
xchg
push
std
mov
xchg
aas
xchg
mov
mov
repz
in
adc
in
adc
out
out
fistp
outs
push
sahf
push
daa
and
repnz
inc
pop
sub
jae
out
jbe
dec
in
cmps
mov
imul
(bad)
push
push
xlat
push
sbb
loop
adc
and
sub
sbb
cdq
mov
ja
xchg
repz
sahf
dec
lahf
mov
lahf
mov
push
sahf
push
adc
fcomip
int
test
or
nop
jmp
push
mov
mov
es
adc
add
jmp
add
ss
test
pushf
adc
test
out
aad
push
pop
daa
inc
movs
(bad)
in
mov
bound
pop
rcl
push
xor
mov
xchg
dec
es
rcl
aad
add
jge
aam
enter
int3
(bad)
mov
push
movs
mov
pop
out
imul
adc
ficom
out
add
loop
retf
rcr
std
shl
push
push
pop
mov
cmc
mov
and
sti
sbb
mov
mov
inc
repz
retf
scas
loopne
les
es
xchg
sub
xchg
inc
cmovge
int3
and
pop
stos
fs
adc
scas
jno
mov
pop
inc
mov
lds
fimul
je
push
rcr
xchg
xchg
push
(bad)
mov
add
outs
mov
adc
call
aam
(bad)
jge
push
jb
(bad)
xchg
aam
repz
adc
mov
out
and
test
inc
push
ret
add
aas
test
push
(bad)
add
jp
frndint
adc
jbe
sbb
mov
add
movs
ret
bound
and
pop
test
dec
fwait
mov
xchg
inc
add
pushf
fcmovbe
jne
outs
mov
inc
or
jecxz
push
xor
mov
inc
cmps
les
lahf
jbe
push
mov
push
mov
pushf
retf
aam
adc
or
sbb
clc
cmp
inc
(bad)
cs
pop
not
(bad)
mov
lods
and
fistp
jmp
and
add
fucomi
push
xchg
cdq
dec
imul
xchg
mov
lock
ins
xchg
sbb
test
pop
jbe
xor
out
in
std
mov
push
ins
sub
das
adc
jo
das
sbb
mov
pop
inc
push
jne
clc
pop
and
gs
mov
xchg
ja
imul
test
push
inc
add
push
scas
xchg
mov
sahf
sahf
push
sbb
sub
jno
push
xchg
inc
sbb
xor
jae
nop
aam
(bad)
movs
inc
mov
aad
pop
pop
mov
mov
xor
stc
cmp
pusha
ja
jp
test
outs
push
mov
(bad)
(bad)
mov
in
std
js
push
fadd
xlat
std
aad
mov
ins
je
fdiv
fs
loop
mov
add
dec
in
shl
int3
test
cmp
xor
add
mov
je
cmp
cs
xchg
xchg
inc
xor
inc
movs
sub
pusha
in
sub
pop
test
out
mov
pop
loopne
lds
hlt
push
jbe
push
xor
pop
xchg
cmp
int3
outs
and
cmp
fiadd
adc
push
sub
data16
pop
add
fdiv
sub
inc
sub
add
adc
mov
arpl
ins
lahf
and
leave
push
test
push
retf
lods
push
movs
pusha
xor
ss
jne
xor
dec
sbb
das
mov
inc
repnz
sub
sub
les
add
and
push
and
out
push
inc
les
and
mov
imul
in
or
int
mov
les
pusha
and
push
mov
xor
(bad)
cwde
pop
mov
pop
xchg
push
loop
jb
pop
fst
pop
sbb
pop
adc
aas
aad
cmp
sbb
mov
and
mov
mov
jnp
cmp
xor
pop
adc
sbb
test
aad
or
out
pop
jmp
aas
(bad)
fidiv
push
adc
dec
mov
adc
xchg
aam
jno
xchg
push
xor
sub
mov
xor
xor
jne
sub
jbe
jle
sub
and
(bad)
pop
or
dec
add
ficomp
mov
cmp
in
test
xor
and
push
cmps
jne
xchg
and
(bad)
cld
ret
jmp
(bad)
int3
pusha
pop
and
int
mov
jno
movs
jns
lahf
les
lahf
push
jnp
xchg
push
mov
out
imul
pusha
mov
adc
pop
arpl
xchg
shl
jne
push
cmps
ins
test
test
sub
push
jbe
aaa
fistp
imul
cmp
mov
popf
and
add
call
shl
and
and
test
mov
xchg
xor
sub
outs
mov
mov
inc
ins
(bad)
aas
cmp
cmc
mov
aam
not
sbb
mov
leave
and
outs
scas
dec
daa
push
inc
aad
aad
imul
dec
leave
icebp
icebp
jae
rcr
cwde
and
and
daa
adc
cmps
pop
push
add
lods
mov
mov
daa
mov
xor
sbb
(bad)
jne
add
jmp
push
mov
push
inc
lods
outs
int3
rcl
xor
ftst
add
scas
les
mov
sub
lahf
cmp
and
gs
fisub
gs
mul
mov
call
sbb
adc
daa
pop
(bad)
movs
mov
mov
and
sub
cs
jnp
test
cmp
stos
mov
neg
push
push
jb
jnp
sub
mov
ss
shr
pusha
mov
xchg
test
(bad)
push
inc
fbld
jnp
jg
pop
adc
sbb
push
or
les
mov
lahf
sub
pop
push
jbe
mov
(bad)
mov
jmp
fiadd
js
daa
mov
cmp
div
sti
sbb
rcl
lods
cmps
aas
aaa
xchg
dec
outs
mov
out
xor
mov
js
(bad)
and
sbb
movs
sub
call
xor
pop
in
push
cmp
xchg
cmp
mov
xchg
mov
shl
call
mov
jo
xchg
cld
pop
lds
(bad)
push
mov
inc
mov
hlt
pop
lods
sbb
add
mov
(bad)
and
cmps
pop
add
(bad)
and
and
mov
mov
pop
ins
pusha
(bad)
ja
lahf
add
push
mov
xor
inc
shl
and
test
popa
dec
jecxz
pop
fstp
stos
in
jno
sub
mov
jne
dec
lea
popa
stos
lods
aad
xor
inc
(bad)
aad
fdivr
jno
scas
inc
mov
sub
jmp
les
clc
daa
mov
gs
hlt
add
ja
or
test
inc
mov
jb
popf
xor
add
jns
in
inc
push
ds
xacquire
daa
push
lea
sub
fwait
inc
mov
inc
xor
int3
jne
mov
sbb
mov
jle
dec
mov
mov
in
mov
or
push
hlt
mov
aaa
sbb
adc
jecxz
mov
push
in
pop
ret
or
fdivr
out
test
arpl
arpl
pop
inc
gs
push
xor
bound
jg
pop
out
clc
adc
retf
repz
bound
xchg
adc
es
out
sahf
test
mov
pop
adc
test
add
inc
push
mov
jbe
aad
(bad)
in
inc
cmps
sub
push
ret
loopne
adc
jbe
(bad)
sbb
loope
xor
mov
(bad)
mov
(bad)
dec
aad
gs
(bad)
or
rol
leave
or
pmaxub
addr16
mov
cs
mov
sub
xchg
inc
xchg
sub
mov
sbb
push
or
out
aad
push
xlat
and
inc
ins
and
xchg
mov
in
mov
jmp
cmp
int3
jne
or
xchg
cmp
movs
add
and
ror
test
mov
fs
jle
ins
dec
inc
inc
cmp
or
mov
cmps
dec
push
je
in
mov
mov
xchg
add
xor
fidivr
inc
push
lds
fidivr
push
aam
movs
cmps
sbb
cmps
(bad)
cwde
movs
push
in
and
(bad)
lock
aas
(bad)
adc
mov
adc
leave
bound
push
xor
pushf
cmp
jle
sbb
aad
pop
aad
mov
out
(bad)
cmp
and
fisttp
xor
dec
pop
in
xchg
xlat
sti
sbb
sub
pushf
repz
dec
pop
and
lds
or
dec
fistp
in
or
push
or
mov
retf
inc
movs
push
jl
(bad)
cmps
add
outs
inc
sub
xchg
retf
fsubp
mov
mov
adc
mov
aaa
ds
mov
std
loope
je
dec
lods
push
sar
(bad)
cmps
(bad)
xchg
push
push
mov
mov
cmc
popa
std
pop
icebp
mov
gs
xor
div
popf
jge
icebp
sub
icebp
je
cmps
push
add
sbb
cld
xor
jbe
out
inc
and
inc
sbb
stos
jle
jne
adc
(bad)
pop
mov
in
(bad)
push
jecxz
jo
movs
test
push
addr16
pop
sti
add
or
dec
mov
test
adc
push
stc
out
xor
inc
and
cmp
in
push
mov
sbb
aaa
sub
mov
mov
out
loop
iret
fdivr
sbb
ss
iret
or
cdq
loope
xchg
aam
adc
sub
imul
jmp
xchg
add
cdq
std
or
jge
rol
movs
or
sar
in
(bad)
or
jns
pop
out
jo
cmp
loopne
jo
push
fadd
inc
std
mov
xchg
movs
test
in
cmp
loopne
push
fst
cld
mov
adc
scas
jno
outs
xchg
movs
jg
adc
add
mov
cmp
retf
sbb
sbb
add
sbb
nop
push
xor
xor
int
push
hlt
or
jbe
mov
std
sub
bound
mov
jae
lahf
scas
mov
inc
out
cmps
mov
jp
inc
fild
js
call
(bad)
into
pop
cmp
(bad)
xchg
and
nop
in
ds
push
xchg
in
nop
out
xchg
sbb
xor
(bad)
push
xchg
dec
je
adc
scas
inc
popa
out
add
cmps
lds
out
into
push
and
xchg
std
push
or
or
push
cmp
(bad)
inc
add
or
push
inc
cmc
mov
sub
int
push
in
mov
mov
lods
inc
xchg
mov
js
xchg
(bad)
mov
aad
adc
fcomp
in
outs
xchg
outs
jbe
call
xchg
pop
adc
test
les
push
popf
icebp
cmp
xchg
xchg
mov
test
push
arpl
push
inc
inc
xor
(bad)
aam
retf
xor
cmp
loop
mov
fcom
scas
ds
stos
pop
(bad)
xor
jl
shr
adc
movs
xlat
scas
xchg
jge
leave
gs
pusha
cmp
fwait
push
mov
in
outs
sbb
jle
mov
pop
push
das
inc
cli
xchg
fwait
sar
jmp
push
popf
ret
sub
data16
jb
inc
xchg
lds
dec
in
sbb
fst
aaa
add
lods
mov
popa
mov
xchg
inc
adc
sub
xor
hlt
adc
push
or
out
ja
mov
pushf
pop
xchg
push
loopne
xor
xor
fdiv
cmps
adc
dec
and
movs
xor
jle
push
cmp
and
outs
retf
mov
mov
jle
addr16
hlt
fsubp
xchg
or
dec
pop
lds
fisttp
lock
dec
iret
xchg
scas
dec
xchg
js
and
xlat
in
push
aam
or
out
or
aam
lods
or
mov
xchg
adc
lahf
adc
les
les
ficomp
mov
inc
add
sub
mov
mov
aad
mov
sti
jecxz
inc
jno
int
xchg
imul
mov
div
adc
sahf
jae
fistp
lock
sub
jp
pop
xchg
imul
cmp
pop
(bad)
jns
std
and
ins
inc
clc
mov
lds
pop
push
ss
jno
(bad)
popf
retf
sub
dec
call
push
dec
(bad)
push
jo
xor
mov
dec
out
cmc
mov
or
mov
fmul
xor
cs
retf
call
gs
xor
aam
(bad)
(bad)
je
sbb
mov
js
push
inc
mov
mov
adc
jnp
dec
sub
outs
adc
je
stc
test
adc
xchg
xchg
mov
dec
repz
mov
clc
into
push
retf
xor
add
jmp
div
rol
mov
mov
xor
lds
cmp
je
and
fwait
push
xor
inc
enter
out
xchg
(bad)
sahf
mov
sbb
adc
add
xor
dec
xchg
ret
sbb
mov
ret
cdq
int
imul
mov
leave
rol
dec
and
hlt
jecxz
cmps
cli
data16
jns
adc
pop
or
xchg
sahf
pusha
adc
pop
inc
sbb
mov
inc
lods
dec
aaa
stos
lock
inc
outs
in
jb
adc
push
icebp
hlt
mov
bound
inc
xor
loopne
je
inc
rol
push
xor
lods
sti
inc
pop
push
adc
test
lods
icebp
cmps
out
in
add
mov
push
movs
fs
push
stos
inc
loop
jmp
(bad)
push
jo
shl
cmc
movs
ja
dec
inc
(bad)
jle
push
pop
(bad)
movs
or
xlat
mov
jbe
jne
push
nop
adc
mov
inc
cli
push
in
in
shr
inc
sbb
add
add
cwde
inc
in
aas
call
ds
push
dec
pushf
inc
pop
push
ss
test
pop
mov
jns
fist
inc
or
xchg
mov
sbb
dec
xchg
adc
jbe
dec
cmc
jbe
mov
outs
ror
sub
rcr
(bad)
out
lods
jbe
jne
adc
pop
push
adc
add
adc
cmp
inc
mov
shl
jnp
in
lahf
lea
jmp
gs
ret
ficom
sbb
adc
les
pop
mov
xabort
push
test
mov
xor
xchg
pop
int
xor
(bad)
sub
fidivr
test
imul
in
jg
add
jecxz
dec
ja
shr
jecxz
vpunpckhqdq
call
mov
je
mov
dec
sbb
inc
sub
sub
lea
push
jp
xchg
and
jns
neg
(bad)
cmp
cmp
or
mov
mov
movs
ins
rcl
add
pop
and
rcr
sbb
out
and
and
out
popa
jnp
ret
or
pop
jne
or
cmp
inc
nop
das
jnp
and
xchg
pop
fmul
int3
mov
ror
xchg
inc
rcl
ss
aaa
clc
xchg
cmps
test
fwait
dec
jb
and
push
call
aaa
or
in
scas
dec
shl
fucomi
scas
ja
and
loop
lock
cdq
xchg
retf
cmp
les
mov
and
jp
scas
and
sahf
xor
mov
xchg
test
mov
(bad)
mov
push
movs
push
push
(bad)
jg
push
or
not
push
mov
aas
cdq
dec
cs
call
or
rcr
inc
in
out
pop
pushf
cwde
cmps
ins
and
add
or
sti
js
aas
cmp
mov
imul
ss
into
repnz
(bad)
adc
cmc
xchg
adc
arpl
(bad)
jae
cmc
movs
bound
sbb
adc
and
mov
outs
into
xchg
and
jne
jecxz
(bad)
jl
stc
inc
jbe
sar
clc
cmps
jo
pusha
mov
cmc
popf
fcom
dec
lock
retf
out
add
cmp
xor
pop
aas
add
outs
xor
mov
cs
les
in
mov
jb
pop
es
mov
and
lods
iret
xchg
icebp
push
lods
jnp
jge
adc
imul
mul
mov
sti
mov
pop
and
lock
scas
push
neg
mov
ret
ret
xchg
adc
shl
sub
jle
(bad)
movs
call
(bad)
pusha
stos
out
push
in
stos
cmp
inc
xchg
stos
mov
arpl
and
(bad)
and
stos
push
in
icebp
push
movs
xchg
xor
movs
xor
into
in
or
push
gs
clc
jne
add
add
add
xchg
mov
push
out
adc
add
add
int3
inc
sbb
sti
or
and
gs
inc
in
cmps
(bad)
xor
movs
enter
xchg
push
add
imul
movs
mov
pop
adc
mov
mov
mov
sub
or
out
gs
pushf
inc
or
jmp
xchg
jno
lock
adc
dec
loop
(bad)
(bad)
adc
lds
cld
xchg
sahf
mov
inc
je
adc
call
jge
jns
and
ins
push
add
in
sbb
inc
cmps
jle
lock
popa
cmps
in
pop
xor
bnd
arpl
push
pop
dec
xchg
pop
dec
pop
pushf
add
push
jecxz
or
jne
mov
mov
sub
pop
jb
jg
aam
sar
mov
call
or
mov
sbb
call
leave
and
ds
out
cmc
cwde
jg
in
xor
and
ficom
sahf
jl
add
adc
sbb
rol
aas
pop
aad
mov
xchg
iret
cmc
cmp
(bad)
test
shl
addr16
xor
jmp
fcom
loop
adc
loope
out
in
rcr
push
stos
sub
(bad)
pop
ins
mov
mov
fnstenv
sub
lock
inc
and
sbb
lea
shl
sub
and
hlt
sahf
mov
shl
jle
or
xchg
movs
jnp
adc
stc
shl
cli
test
mov
mov
lods
ret
mov
push
pop
cwde
sbb
cmps
mov
push
xchg
add
hlt
cmps
and
jge
mov
les
(bad)
pop
mov
xor
retf
sub
push
idiv
ins
push
call
sbb
dec
mov
daa
pop
jae
push
jb
push
jae
sub
in
rcl
loope
repz
mov
adc
lahf
lea
push
stos
sub
mov
mov
add
clc
dec
mov
sub
aam
mov
mov
not
push
stos
push
rol
in
bound
and
test
or
in
cmp
adc
adc
inc
xor
rcr
je
iret
or
mov
jne
movhps
xchg
dec
lea
add
in
sub
gs
cmps
pop
les
jmp
jo
mov
repz
data16
sub
iret
cmps
dec
dec
jne
js
add
loopne
mov
xchg
xor
outs
and
aas
scas
xor
or
xchg
cmps
add
inc
out
cs
shl
mov
add
fdivr
jae
sbb
lods
(bad)
sbb
daa
imul
mov
out
pop
or
xchg
xchg
sar
push
sbb
daa
push
test
ret
push
mov
push
pop
mov
dec
hlt
fild
cmp
push
cmc
sbb
and
rol
loop
jb
in
pop
jmp
in
inc
push
fmul
mov
cmc
and
mov
xchg
das
ss
(bad)
inc
call
sahf
jl
jg
pop
mov
and
dec
mov
int3
std
shr
dec
(bad)
jo
std
push
jno
movs
or
je
test
and
xchg
jo
leave
repnz
movs
cmp
xchg
outs
fild
movs
out
cdq
mov
sar
shl
imul
fsub
stc
frstor
xchg
cmp
lock
dec
pop
lahf
sbb
test
in
inc
xchg
jns
pusha
sub
push
adc
out
mov
fld
pop
inc
iret
sub
lds
in
loope
sub
cmc
adc
cmp
jmp
xchg
ds
jnp
ret
and
std
push
sub
adc
pop
cld
fadd
cmp
into
adc
inc
rcl
inc
xchg
lea
fsub
xchg
out
test
jb
mov
(bad)
cdq
mov
out
in
mov
jmp
add
imul
call
xor
popa
inc
sbb
iret
or
ficom
push
push
popf
xchg
sbb
jae
pop
pop
adc
out
adc
shl
ds
and
adc
movs
sbb
pop
leave
dec
mov
xlat
mov
xor
movzx
std
bound
mov
jo
push
loope
adc
and
xchg
push
stc
ds
cmp
inc
ficom
push
push
add
fwait
loope
rcl
adc
(bad)
fsub
in
mov
mov
lea
lahf
(bad)
inc
xor
std
and
xor
frstor
mov
sti
test
push
adc
inc
ds
(bad)
adc
fwait
and
mov
jns
dec
pop
pop
rcl
mov
(bad)
mov
pop
les
and
jl
push
test
push
pusha
adc
imul
scas
mov
push
adc
add
mov
(bad)
shr
xchg
out
pop
jle
rol
pop
inc
mov
xchg
mov
fst
jbe
jmp
sti
cmp
and
cmps
xor
ja
add
into
mov
stos
rcl
in
push
cmc
jo
aam
(bad)
mov
add
mov
jle
pop
fild
fadd
aam
and
xor
es
invd
push
out
gs
mov
cmp
sub
mov
jecxz
inc
jae
cmps
daa
cmc
push
or
das
lds
fcom
jo
lods
jbe
push
movs
or
aam
push
pop
jb
out
push
test
jmp
push
mov
in
(bad)
xor
xor
shl
and
test
test
ins
xchg
ret
(bad)
(bad)
out
fimul
sbb
clc
shr
movs
and
pusha
jl
movs
pop
pop
in
push
mov
add
push
push
std
pop
xchg
and
mov
adc
jge
call
jg
int
addr16
xchg
aad
stos
mov
fcom
jbe
inc
push
cmps
cmp
mov
das
ja
in
xchg
xchg
xor
adc
and
and
pop
add
mov
loope
daa
test
sub
mov
xor
mov
cmp
push
push
sbb
les
cmp
lods
je
pop
adc
and
pop
mov
sub
call
or
jge
outs
nop
push
mov
xlat
jmp
mov
outs
ss
and
mov
push
sti
sbb
lds
xchg
and
add
pop
dec
jne
xchg
add
daa
xchg
adc
fdivr
out
and
or
add
inc
cmps
es
imul
mov
retf
ins
(bad)
xchg
xor
dec
movs
popf
adc
or
xchg
les
sub
mov
aad
mov
mov
pop
push
xchg
fs
int
arpl
ret
daa
pop
in
mov
and
and
mov
fld
add
xor
jbe
push
xchg
and
aaa
test
icebp
xor
or
jmp
push
sub
cli
and
ficom
(bad)
add
ss
xchg
mov
outs
adc
add
sbb
push
jp
push
xchg
ret
push
push
addr16
test
jge
sahf
std
jae
leave
out
push
out
repz
cmc
fldenv
data16
in
inc
ret
dec
or
add
in
ror
cmc
xor
push
mov
(bad)
add
icebp
dec
(bad)
add
pop
push
bound
cmps
sar
ins
pop
clc
push
aas
int3
test
add
into
mov
out
add
push
sub
aad
push
test
mov
sub
add
add
cmps
pop
(bad)
dec
or
in
push
adc
mov
bound
mov
imul
sub
out
stos
retf
sub
sub
or
(bad)
das
loop
loop
cmp
xor
daa
out
(bad)
popa
loope
xor
outs
lock
enter
inc
shl
aad
mov
mov
cmps
addr16
dec
ss
repnz
arpl
std
jne
push
lds
ins
pop
cmp
sbb
push
test
mov
jge
push
mov
mov
mov
mov
hlt
jbe
pop
daa
sbb
dec
lods
push
cmps
adc
outs
clc
stos
in
mov
rol
aaa
jge
fwait
dec
movs
pop
fdiv
push
call
xchg
xchg
test
movs
xchg
pcmpgtw
les
in
pop
xor
ja
aaa
cmp
mov
jg
repz
jno
xlat
mov
fcom
daa
les
xor
push
out
mov
call
les
adc
add
lds
mov
adc
mov
xor
rol
sar
and
jne
jno
dec
cdq
push
scas
sub
sub
popa
lds
cmc
scas
jne
mov
push
mov
hlt
mov
jb
xlat
(bad)
(bad)
add
add
cwde
cli
jb
push
mov
dec
ret
jmp
mov
push
aaa
ins
adc
push
not
jmp
push
and
les
pop
dec
add
mov
lock
rol
pop
mov
(bad)
mov
gs
gs
icebp
or
inc
aad
xchg
inc
inc
(bad)
xchg
sbb
push
in
xchg
mov
in
out
fldenv
pop
xchg
or
dec
inc
push
(bad)
sbb
cmps
inc
out
or
adc
enter
out
ja
lock
dec
adc
fidiv
pop
push
cmp
pop
adc
rcr
aad
pusha
jge
loope
cmc
dec
out
cmps
add
mov
push
mov
test
dec
movs
push
cmc
xchg
pop
push
adc
xchg
mov
outs
mov
jl
les
data16
out
js
dec
mov
out
inc
jp
add
dec
shl
and
movs
je
push
int3
cmc
loope
movs
gs
loope
out
daa
and
xor
mov
cmp
les
cmps
loope
cmps
test
pop
mov
push
hlt
data16
les
sub
xchg
dec
xchg
idiv
test
not
int
xchg
sahf
push
jne
or
clc
retf
push
(bad)
out
push
inc
mov
inc
clc
pop
aas
(bad)
or
fdiv
int3
and
mov
jmp
movs
jbe
ins
mov
dec
add
gs
cmp
and
mul
out
ss
xchg
repz
jbe
lods
pop
xlat
pop
and
nop
xor
xchg
xor
aas
mov
mov
jbe
jnp
imul
(bad)
jge
imul
in
jno
xchg
jne
ins
xchg
jne
adc
ret
jne
fs
push
daa
jmp
xchg
cdq
inc
(bad)
and
xor
ss
dec
xchg
inc
add
adc
jne
(bad)
daa
(bad)
test
daa
and
rcr
fist
and
xchg
add
arpl
inc
inc
add
gs
cmc
addr16
jb
inc
(bad)
fs
add
push
add
and
sub
xor
scas
xor
cmp
js
movs
dec
mov
inc
dec
and
pusha
xchg
daa
sub
sub
(bad)
xchg
std
xchg
sbb
xor
invd
xor
movs
pop
xor
push
in
xchg
adc
mov
mov
mov
in
add
mov
push
mov
mov
adc
adc
inc
xchg
(bad)
(bad)
ds
dec
addr16
mov
and
out
push
xor
dec
mov
mov
mov
pusha
out
scas
jmp
ja
add
mov
imul
push
in
push
hlt
sub
adc
ss
inc
adc
xchg
inc
aad
dec
outs
fwait
adc
mov
mov
cmp
clc
loopne
test
loopne
mov
jne
fisub
mov
sbb
addr16
xchg
pop
adc
jb
inc
mov
aad
repz
xlat
movs
xchg
sbb
fs
daa
xchg
ds
fcmovnbe
aaa
fld
mov
mov
jmp
sti
inc
mov
xchg
pushf
imul
or
mov
shr
mov
clc
mov
int3
in
not
cmp
mov
and
je
or
out
(bad)
(bad)
and
sar
adc
sbb
in
push
jbe
cmps
and
shl
cmc
push
shl
mov
and
cmc
fld
cmp
push
mov
or
inc
fwait
repnz
(bad)
in
ret
(bad)
into
inc
in
test
aam
or
pop
xchg
mov
pop
sbb
mov
imul
jge
pop
cld
xchg
add
ss
addr16
cmps
jge
aas
pop
gs
adc
cmp
pusha
inc
scas
outs
push
ja
jge
or
lods
mov
nop
mov
out
je
xchg
mov
add
out
cs
add
outs
mov
test
cmp
repnz
push
icebp
sar
pop
imul
xchg
pusha
cmp
ja
test
pop
or
adc
daa
add
dec
jge
call
movs
pusha
sahf
jp
inc
jmp
pop
fs
pushf
jg
or
dec
mov
jmp
push
jle
gs
push
push
sub
push
jbe
mov
gs
addr16
and
adc
or
inc
xor
and
(bad)
mov
cmp
mov
mov
sub
jns
xchg
das
gs
xor
cs
in
jmp
dec
mov
scas
out
push
(bad)
fs
xchg
cmp
mov
sbb
jb
jge
sub
mov
in
(bad)
out
les
mov
mov
and
push
test
ds
aad
jg
push
sahf
movs
xchg
add
sbb
(bad)
aad
and
pop
movs
out
add
scas
jns
pop
adc
mov
(bad)
in
and
test
xchg
lock
or
pop
and
es
mov
jne
adc
(bad)
jecxz
aam
and
in
jmp
(bad)
in
test
push
cmps
and
push
fistp
movs
xchg
pushf
xchg
movs
adc
mov
add
data16
xchg
or
pop
xchg
sbb
push
in
mov
stc
sti
repz
adc
xor
repnz
jae
mov
jmp
sub
lock
adc
adc
call
inc
test
xor
(bad)
loopne
inc
test
mov
add
imul
push
int
cmc
cmp
ss
adc
nop
retf
test
mov
out
(bad)
repz
test
ss
scas
lods
mov
inc
in
lods
xchg
repz
int3
xchg
ret
mov
inc
dec
fadd
mov
ds
cmp
pop
jno
daa
in
lock
and
xor
push
xchg
in
pop
add
lds
dec
jle
push
adc
mov
xchg
or
mov
stos
jae
aad
mov
add
xchg
xor
(bad)
movs
das
inc
repz
xchg
push
daa
inc
in
push
movs
mov
ror
mov
sub
mov
or
out
iret
inc
xchg
jmp
push
scas
push
daa
push
push
xchg
xchg
pop
ins
jo
les
ins
rol
push
adc
mov
mov
(bad)
int3
int3
sub
rol
ror
pop
mov
sbb
fst
inc
mov
add
imul
pop
inc
lock
cmps
push
test
mov
dec
sbb
add
neg
or
adc
push
nop
lea
xchg
xchg
std
pop
sti
xchg
ins
jae
pop
sub
adc
(bad)
adc
bound
out
dec
pop
sub
imul
lea
mov
dec
sti
add
loope
push
mov
xlat
pop
loope
cmc
push
mov
mov
push
mov
sahf
(bad)
mov
mov
fdivr
loope
and
scas
rcl
shl
mov
jecxz
push
xor
mov
xchg
mov
pop
in
(bad)
enter
sub
push
cmp
push
jne
lods
fild
in
adc
pop
mov
loopne
lds
inc
(bad)
pop
cdq
ss
and
push
repz
adc
out
or
mov
xchg
mov
mov
pop
jge
xchg
sub
push
aad
push
xor
push
and
movs
test
xchg
inc
addr16
jnp
in
dec
and
cmps
fwait
gs
les
push
fs
mov
push
push
call
in
and
test
loopne
cmp
add
xlat
push
addr16
ins
fucom
add
daa
jo
ds
inc
pop
sbb
jae
fsin
cmps
pop
add
xchg
nop
popa
pop
mov
and
fwait
push
sub
xor
fbld
int
adc
adc
mov
and
or
aas
div
push
add
mov
jo
xchg
cmps
jmp
xlat
je
aad
mov
test
sub
pop
inc
in
pop
sbb
mov
rol
push
jo
jbe
test
ror
sub
out
es
or
push
popf
push
imul
fs
xchg
sbb
pop
inc
mov
sbb
add
jne
fwait
xlat
push
movs
sahf
ja
ret
push
fisubr
adc
add
enter
int3
test
(bad)
hlt
add
imul
jmp
sub
sbb
nop
mov
addr16
xor
addr16
aaa
sbb
mov
adc
out
(bad)
lahf
push
adc
mov
int
pop
mov
(bad)
mov
inc
aad
and
mov
and
and
mov
rcr
pop
jae
sti
mov
add
pop
sbb
mov
pop
cdq
lahf
mov
push
add
cwde
out
mov
je
popa
ds
cmp
jl
xchg
cmc
xchg
inc
pop
xchg
call
inc
sbb
cli
jno
nop
inc
jle
adc
sbb
mov
cdq
inc
loopne
or
or
add
pop
mov
and
pushf
fnstcw
addr16
or
xchg
lods
pop
mov
int
rol
int
icebp
inc
movs
aaa
(bad)
movs
ins
push
out
add
or
(bad)
int3
jge
jo
out
adc
mov
out
ret
jg
mov
cmps
loope
cdq
hlt
inc
ret
xor
mov
in
xor
aas
loope
rol
mov
addr16
rcl
sar
retf
les
inc
xchg
scas
(bad)
cmps
xchg
call
outs
neg
gs
leave
push
fcmovbe
out
es
or
add
adc
pop
ficom
push
test
mov
ror
inc
ja
mov
or
(bad)
rol
into
mov
dec
sahf
out
jb
fnstsw
jmp
and
(bad)
int
jb
jl
aaa
pop
(bad)
aad
fisubr
aas
fmul
sub
data16
cmc
outs
nop
push
jae
loope
mov
add
adc
cmc
out
and
loope
bound
add
(bad)
add
mov
jbe
xor
ds
inc
repz
call
add
inc
stc
adc
repnz
lods
retf
xchg
idiv
and
aad
cli
int3
inc
ret
hlt
and
(bad)
data16
cdq
xchg
test
add
mov
and
push
lock
cmp
popf
lock
inc
jbe
inc
xchg
jbe
dec
mov
retf
push
cmp
rcr
add
jb
xor
aad
mov
fs
xchg
xchg
movs
repz
inc
(bad)
dec
mov
adc
daa
or
aaa
les
fbld
cs
bound
jbe
mov
fs
les
add
pop
lds
cmp
rcl
imul
dec
addr16
and
(bad)
jmp
xlat
(bad)
and
in
mov
xchg
data16
push
pop
icebp
mov
mov
add
cmp
jne
sbb
in
mov
fnstsw
repz
jno
movs
inc
ds
xchg
(bad)
jmp
mov
repnz
popf
mov
fsubr
out
mov
mov
hlt
push
cmc
xor
rcr
ffreep
ds
out
ins
pop
cmp
je
(bad)
outs
mov
addr16
out
int
add
inc
jp
ror
xchg
call
out
jmp
in
in
mov
enter
add
les
pop
mov
dec
pusha
inc
pop
idiv
shl
es
pop
in
std
add
add
mov
scas
inc
xor
xchg
cmp
cwde
jmp
or
fs
and
adc
(bad)
in
lea
dec
adc
adc
add
or
mov
(bad)
rol
in
sub
add
xchg
retf
mov
pushf
and
push
pop
scas
loope
stc
pushf
xchg
cld
stos
dec
repz
push
xor
aaa
sub
in
jae
sti
xor
mov
jne
sahf
in
hlt
jle
call
fadd
je
push
pop
rcl
dec
xchg
out
outs
mov
adc
adc
inc
iret
jecxz
movs
test
jg
hlt
addr16
dec
sahf
test
mov
push
ja
and
mov
mov
test
sub
outs
adc
int3
daa
mov
bound
aad
sti
daa
movs
out
popf
add
xor
xlat
cmp
mov
daa
adc
push
jbe
in
fnstsw
call
in
in
push
call
inc
cs
cld
xor
push
xor
push
xlat
cs
push
addr16
mov
test
rcr
pop
dec
daa
aam
ja
loope
mov
iret
jmp
in
xor
sub
jo
push
sub
sub
jb
or
or
mov
push
add
xor
xchg
mov
jg
repz
add
push
and
xor
cld
cmp
fwait
sahf
nop
or
push
mov
les
push
popf
mov
imul
and
push
push
jle
xchg
test
jg
sti
ret
xchg
ja
vpsadbw
inc
cs
movs
out
jp
repz
icebp
ds
std
xchg
rol
cs
and
fst
pop
ret
mov
scas
test
mov
imul
aam
add
xchg
dec
mov
xchg
dec
sub
in
lea
add
fsubr
daa
loope
adc
add
test
jle
add
xor
inc
xchg
outs
(bad)
push
jbe
jo
shl
pop
in
sbb
int
in
clc
sbb
test
shr
jecxz
cld
push
in
xchg
fs
mov
xchg
xor
std
add
mov
inc
xchg
pusha
clc
out
adc
retf
add
cmp
pop
jb
cmp
xor
mov
jecxz
cwde
pusha
ds
aaa
fist
loope
popf
and
stos
push
inc
and
jbe
dec
xchg
xchg
loop
fisub
gs
aaa
adc
push
frstor
div
push
mov
jbe
xchg
push
sub
mov
push
das
xlat
push
add
out
call
inc
cs
stc
cmc
(bad)
js
sub
sbb
out
add
scas
adc
jle
jae
sbb
cdq
rcl
sbb
pushf
push
pop
push
in
push
std
cs
imul
pop
int3
rcr
(bad)
out
or
lea
push
lahf
cmc
dec
pop
jne
mov
loop
push
jle
js
pushf
or
loopne
and
movs
and
pop
hlt
mov
(bad)
retf
add
mov
fst
outs
adc
iret
aam
xabort
daa
jo
out
cmps
ret
(bad)
out
call
push
cwde
add
push
push
movs
cmp
sar
call
xchg
fs
pushf
dec
stc
arpl
mov
adc
outs
mov
retf
push
movs
data16
nop
and
ss
cdq
cdq
push
test
gs
out
cmp
mov
jae
jmp
dec
add
rcr
add
lea
(bad)
xchg
or
and
les
cmps
lea
lods
pop
jae
std
inc
xchg
dec
shr
nop
mov
in
adc
int3
rol
out
cld
or
or
and
movs
mov
mov
imul
pop
xor
and
iret
(bad)
or
stos
lds
add
push
xchg
movs
cmp
mov
mov
mov
loop
outs
pop
es
mov
fwait
jb
jl
push
aam
adc
lock
inc
push
std
div
mov
and
mov
in
ins
dec
cdq
mov
mov
or
mov
lds
aaa
sti
jmp
inc
or
gs
pop
or
push
not
outs
fist
sbb
aas
ins
cmps
js
cli
sub
push
rcl
push
inc
mov
xchg
xchg
xor
es
xchg
in
xchg
dec
ja
jne
add
dec
jb
jmp
sbb
push
mov
adc
xchg
inc
push
cmc
sub
movs
mov
aam
scas
les
cmp
int
adc
in
gs
loopne
loop
stos
pop
lods
cmovno
inc
scas
dec
cmps
jb
clc
(bad)
xchg
add
and
daa
aad
shl
xchg
stos
add
inc
add
mov
and
dec
pop
jl
xchg
jno
dec
xchg
movs
cmp
xchg
or
mov
dec
add
add
shl
hlt
inc
add
add
xchg
jne
jne
pop
mov
push
sub
shld
push
and
jb
push
rcl
mov
dec
pop
stos
jnp
add
mov
daa
jmp
daa
add
cwde
mov
fistp
mov
push
in
push
jno
cli
pop
sub
gs
pop
stc
pop
call
mov
cld
jecxz
sbb
push
(bad)
and
push
mov
repz
and
or
les
out
ds
dec
fidivr
sub
adc
and
aaa
movs
shl
lock
sbb
xor
pop
mov
sbb
push
ss
fistp
(bad)
and
add
xlat
inc
jno
fldcw
xchg
or
or
repz
sahf
int3
aaa
stos
push
pop
ss
leave
or
pop
ds
adc
add
sbb
mov
(bad)
cmp
dec
fidivr
loopne
sub
out
xchg
lea
push
mov
mov
dec
or
pop
inc
mov
add
fwait
adc
xchg
add
shl
fld
fmul
xlat
xchg
jne
and
hlt
jbe
sbb
add
dec
outs
iret
adc
and
add
or
push
and
pop
lds
neg
adc
dec
push
idiv
mov
ret
(bad)
mov
push
push
retf
jmp
rcl
or
xchg
adc
sbb
sbb
iret
jo
push
add
mov
sbb
xchg
jo
cmps
rol
push
cmc
out
cmp
cld
jg
in
test
daa
xchg
outs
xor
sbb
ret
or
sub
and
add
pop
imul
add
push
mov
es
ret
push
cmp
lahf
xchg
inc
and
pop
xchg
test
add
in
xor
ror
cmp
fwait
add
jbe
imul
ja
or
popf
retf
push
fidiv
outs
jge
jg
(bad)
dec
fnsave
sti
stos
inc
jp
mov
push
cmps
out
test
pop
(bad)
das
shl
loopne
mov
movs
add
sbb
and
xchg
sub
movs
pop
mov
jle
(bad)
adc
std
jecxz
or
cmp
cwde
mov
jae
rcl
rep
imul
mul
(bad)
sbb
retf
shr
rcl
sub
xlat
inc
cmps
sbb
(bad)
arpl
mov
push
jbe
pop
jecxz
test
mov
xlat
add
dec
add
cmps
in
hlt
mov
mov
xor
iret
inc
jp
loope
mov
popf
and
add
sub
movs
std
mov
mov
(bad)
outs
scas
and
mov
mov
jecxz
les
imul
aaa
mov
cmp
pop
mov
push
push
cmp
pop
xchg
cmc
repz
pop
push
gs
ffreep
pop
mov
shr
mov
mov
or
push
sub
bound
jp
or
xchg
mov
arpl
stos
xchg
(bad)
int3
sub
xchg
das
in
div
push
cmc
pop
cmps
outs
jb
sbb
jle
out
xor
jge
arpl
add
jns
lods
aad
and
adc
jne
loop
mov
lods
(bad)
popa
xchg
xlat
mov
pop
xchg
mov
add
pushf
inc
(bad)
pop
jp
inc
ja
fcomp
mov
movzx
dec
fs
aam
inc
sar
jae
or
push
add
leave
mov
or
push
mov
add
ja
movs
out
mov
popf
(bad)
mov
(bad)
sbb
sub
sub
mov
dec
push
adc
xlat
add
in
data16
sub
push
mov
add
dec
enter
arpl
daa
add
out
out
cmp
sub
scas
mov
jae
out
jb
sbb
inc
sahf
jge
push
jae
adc
jmp
xor
xor
jno
sub
or
mov
mov
xor
je
add
lds
pop
xor
add
mov
xor
mov
div
lock
idiv
mov
stos
push
fs
aam
stos
data16
jb
(bad)
repnz
sub
ds
not
inc
loop
dec
add
scas
cli
xchg
je
cmps
dec
inc
mov
add
stos
push
in
xor
jecxz
das
cs
daa
hlt
(bad)
test
(bad)
mov
jge
repz
repnz
loopne
fdiv
(bad)
call
xor
add
das
xchg
adc
sbb
in
retf
adc
xor
loopne
inc
xchg
or
test
test
push
cs
xchg
retf
outs
es
cwde
jge
call
adc
jne
mov
into
mov
jmp
sub
in
or
int3
(bad)
or
gs
mov
mov
into
std
cmc
xchg
aas
in
pushf
dec
ret
sub
xchg
xchg
cld
test
ss
test
addr16
dec
iret
add
push
cmps
mov
cdq
inc
xchg
dec
cmps
pop
and
xor
mov
ds
adc
xchg
and
shl
aam
jg
test
sbb
sbb
cmps
adc
loopne
nop
xor
xchg
lods
xor
in
vmread
out
mov
lea
add
xor
mov
nop
add
and
mov
cmps
push
ffree
push
push
xchg
in
push
jge
inc
cmps
jmp
mov
stc
fs
mov
jnp
scas
hlt
js
xor
dec
ret
fcmovnb
sub
arpl
inc
hlt
es
jne
cmp
dec
push
mov
leave
jp
mov
int
pushf
mov
add
test
bound
mov
dec
sbb
mov
aad
in
bound
gs
hlt
jae
add
inc
fcom
out
xchg
jb
mov
fnstcw
stc
aaa
ficom
pop
xlat
jge
mov
xchg
scas
and
mov
fild
hlt
ss
inc
fld
mov
mov
pop
push
outs
mov
cmp
fs
add
add
mov
sbb
sub
push
test
xchg
(bad)
pop
fld
sar
mov
and
add
int3
ins
mov
pop
jno
inc
push
adc
imul
inc
in
movs
jne
push
jae
mov
inc
push
or
mov
movs
inc
sub
ficom
xchg
repz
arpl
dec
push
cli
xchg
rcl
popa
mov
test
add
hlt
or
ret
xchg
(bad)
push
push
ds
mov
mov
out
ss
inc
shl
push
adc
dec
mov
mov
shl
jecxz
sbb
in
xor
sub
cmps
call
push
push
movs
gs
je
jne
sub
fiadd
push
(bad)
pop
pushf
lock
adc
idiv
push
and
(bad)
fist
mov
jns
mov
dec
stc
mov
cmp
sub
loop
aad
sbb
ins
es
mov
cmps
inc
(bad)
mov
aad
inc
push
xchg
rcl
jp
push
sbb
push
jnp
aam
jmp
mov
inc
cmp
add
sbb
in
push
rcr
inc
pop
push
push
dec
adc
movs
and
cdq
ret
int3
inc
fs
aad
shl
mov
push
or
mov
mov
xchg
push
cmps
into
sbb
inc
clc
test
mov
js
push
lds
xchg
push
mov
xor
inc
(bad)
and
adc
mov
adc
jecxz
xchg
cmc
test
mov
adc
dec
scas
adc
adc
jo
jnp
aad
xchg
ss
jbe
(bad)
scas
xchg
inc
dec
in
stos
cli
pop
fdiv
push
popa
pop
fadd
xor
pushf
daa
aaa
jl
add
aam
adc
adc
pop
and
clc
sbb
jb
mov
(bad)
lods
inc
inc
xchg
imul
lea
addr16
div
mov
xchg
adc
and
mov
push
lods
out
inc
inc
xchg
scas
and
mov
popf
xor
out
loop
bnd
cmp
sbb
dec
ret
push
mov
imul
sub
hlt
movs
inc
enter
ins
sar
pop
aad
inc
xlat
adc
dec
add
inc
icebp
shl
lods
cmps
cmp
inc
loop
xchg
cmp
lds
loopne
rcl
ss
jle
std
add
shl
pusha
push
in
inc
out
and
out
sbb
or
and
cmp
jae
jae
aad
push
call
rcl
push
xchg
xor
sbb
adc
dec
jne
aad
cdq
jle
add
daa
loopne
or
jae
jp
inc
mov
inc
out
push
cwde
cwde
icebp
xchg
lds
xchg
or
lds
out
idiv
ret
scas
mov
cmp
int
dec
add
sbb
pusha
in
ret
mov
adc
adc
cmp
mov
push
and
or
call
movs
cmp
xchg
add
mov
(bad)
xor
std
(bad)
inc
test
les
std
push
stos
ss
cmp
outs
mov
mov
xor
xor
inc
(bad)
scas
in
xchg
shl
repz
movs
pop
cs
push
push
jmp
xor
adc
mov
movs
mov
jnp
mov
cmps
in
test
data16
scas
and
out
or
pop
fisubr
jnp
imul
mov
jmp
mov
(bad)
jge
(bad)
arpl
dec
ins
dec
es
mov
xchg
xchg
dec
xchg
jmp
jmp
(bad)
xlat
dec
cmps
jae
sbb
inc
pop
sbb
lds
sub
fldenv
out
pop
aam
movs
jmp
dec
push
xlat
mov
dec
in
shl
dec
inc
rcr
iret
fcmovbe
les
aam
mov
jo
cmp
std
push
or
xchg
dec
or
add
dec
lods
add
pop
in
hlt
sti
fwait
or
test
pop
ret
mov
and
(bad)
pop
xor
mov
aad
hlt
(bad)
add
xchg
cmp
retf
fwait
push
adc
dec
add
repz
stos
add
cmp
loop
aad
ins
push
push
sbb
pusha
jp
jl
cmp
(bad)
mov
scas
cmp
cmp
xchg
mul
jne
shr
push
cmp
mov
popa
xchg
lahf
and
add
adc
les
cmc
in
in
out
and
test
sbb
push
aad
inc
hlt
mov
aad
fisub
pop
fs
xor
out
mov
sbb
cwde
stos
lods
push
pop
adc
dec
sub
test
or
cwde
push
loop
push
int3
jl
fild
cmp
lds
in
pop
jp
inc
test
adc
(bad)
xor
push
jmp
inc
xor
sub
pop
inc
dec
inc
(bad)
sti
fild
or
add
ss
cmp
es
out
xchg
retf
dec
daa
mov
xchg
stc
cs
gs
add
test
and
or
xchg
mov
pop
fstp
adc
clc
sbb
int
mov
gs
and
cmps
xchg
ror
out
xchg
jns
pop
(bad)
mov
add
stos
icebp
sub
mov
and
sub
dec
ror
fcomp
pop
dec
aad
jno
push
bnd
je
pop
inc
adc
dec
adc
call
adc
add
test
push
mov
inc
pop
dec
lahf
cmp
push
xchg
mov
mov
fiadd
(bad)
xor
cmc
hlt
pushf
push
test
cmp
xchg
mov
aad
cmp
pop
shl
aaa
adc
xlat
cli
loop
ins
mov
jg
jg
xor
dec
cmp
ret
xor
clc
xor
push
adc
aad
cmc
xor
bound
xchg
bound
push
adc
pusha
fstp
jns
mov
(bad)
fidiv
xchg
(bad)
cmc
mov
mov
pop
xchg
(bad)
int
xor
cdq
sub
(bad)
sbb
jo
scas
inc
xchg
sbb
ret
mov
mov
mov
sub
div
retf
push
sbb
loope
test
inc
aam
shl
adc
xchg
out
inc
adc
push
(bad)
jno
jge
mov
jp
bound
out
aaa
mov
out
ja
mov
mov
pop
ins
inc
popa
dec
and
scas
int
es
mov
cwde
adc
(bad)
lods
inc
xchg
and
xchg
loope
stos
push
push
(bad)
mov
loope
(bad)
(bad)
aam
xor
test
stc
and
ret
xchg
add
cmps
dec
xchg
fs
out
(bad)
cdq
mov
xchg
arpl
cli
fadd
cmp
mov
adc
outs
xchg
ins
cmp
push
cmc
mov
pusha
in
push
mov
stc
sbb
ja
add
shl
inc
test
in
jo
sub
rcl
push
xchg
daa
call
mov
(bad)
jbe
inc
and
std
inc
pop
mov
loop
arpl
mov
clc
repz
jge
push
mov
cmp
push
in
push
scas
sbb
pushf
or
xchg
adc
sbb
mov
gs
in
mov
cmps
std
dec
in
jno
cwde
outs
mov
pop
data16
dec
sub
adc
push
xor
push
dec
push
fist
push
sbb
(bad)
out
pushf
jns
jg
out
shl
xchg
adc
inc
shl
and
aad
lea
adc
mov
outs
cmp
adc
add
mov
and
imul
es
aam
inc
sbb
mov
in
je
(bad)
neg
(bad)
aad
daa
xchg
xchg
ss
sub
sub
movs
xor
and
aaa
push
adc
mov
not
test
pop
push
stos
mov
cmp
xchg
(bad)
push
dec
xor
mov
cdq
ins
mov
mov
or
data16
cmc
(bad)
cwde
jecxz
xchg
and
popf
cmc
and
rcr
data16
push
pop
jg
xlat
les
dec
in
pop
and
cmps
pop
push
jno
shl
xchg
ins
sbb
fldenv
ss
add
sbb
imul
fs
das
add
aaa
test
cmps
dec
aam
out
(bad)
and
adc
inc
mov
inc
jge
mov
cdq
ja
pop
ror
imul
cmc
dec
mov
fwait
mov
hlt
mov
xchg
arpl
iret
mov
ror
js
inc
inc
and
nop
push
jbe
push
int3
(bad)
daa
mov
clc
gs
xchg
inc
or
push
(bad)
movzx
inc
cmp
and
add
shl
pop
js
fst
mov
xlat
jp
jmp
pop
adc
and
(bad)
loop
jg
add
daa
hlt
adc
push
cdq
test
xchg
movs
or
or
mov
jg
push
aad
mul
or
adc
loopne
adc
mov
addr16
cdq
mov
or
xor
retf
aam
or
mov
xchg
push
data16
ja
jbe
je
call
ins
inc
loopne
push
xor
mov
pop
stc
movs
std
movs
aaa
mov
lock
int3
inc
sbb
mov
inc
call
adc
movs
pop
sbb
dec
(bad)
mov
cmc
inc
clc
or
bound
scas
sbb
cdq
clc
repnz
inc
sub
and
xlat
inc
dec
jp
jo
int3
in
and
adc
push
in
xlat
cmp
sbb
sub
cmp
adc
push
jne
outs
and
xlat
jb
cmps
inc
sbb
mov
mov
xor
xchg
xchg
call
mov
test
out
cmp
(bad)
jnp
jbe
out
mov
mov
and
in
jecxz
add
mov
int3
pusha
hlt
mov
ja
mov
sbb
sub
add
ins
jge
or
rol
rol
mov
sbb
mov
dec
or
and
imul
sub
add
movs
adc
ror
movs
hlt
cmps
cli
loope
out
ss
lds
repnz
fsubr
mov
dec
hlt
and
in
add
adc
inc
iret
jnp
(bad)
and
fs
int
sti
inc
gs
xlat
mov
movs
pop
inc
js
jae
test
sub
jmp
xor
fmul
es
pusha
jb
or
call
push
push
idiv
cmp
cmp
and
hlt
sub
jns
sahf
inc
jle
and
push
data16
sub
xor
push
(bad)
jg
push
(bad)
imul
mov
mov
dec
mov
loope
jnp
jns
jmp
and
adc
and
fs
inc
imul
shr
je
(bad)
enter
mov
mov
lea
xchg
cwde
fsubr
inc
(bad)
adc
push
inc
sbb
jbe
ss
icebp
les
mov
(bad)
call
das
xor
cs
add
test
nop
out
fwait
jnp
jne
push
arpl
add
pop
(bad)
add
pop
adc
div
rcl
stos
fimul
mov
cmp
jo
fdivrp
push
int3
scas
mov
lods
inc
xchg
lahf
xchg
xchg
inc
jle
stos
into
and
test
dec
test
fsubr
xchg
iret
adc
dec
out
mov
out
shl
test
(bad)
fldenv
lods
mov
dec
mov
repnz
test
mov
aam
retf
jge
or
out
push
xor
mov
dec
daa
mov
cmc
imul
mov
and
adc
push
xchg
arpl
sahf
int3
xor
push
add
xchg
ja
mov
call
push
or
add
or
dec
aad
fdivr
mov
ss
(bad)
pop
and
sub
push
cmc
cmps
out
arpl
jmp
mov
mov
add
outs
pop
push
push
(bad)
cld
mov
mov
sub
movs
jmp
dec
mov
pop
mov
mov
cmps
lock
jmp
(bad)
cmp
lock
xor
inc
stc
add
fild
test
xor
cmps
neg
adc
jnp
idiv
adc
out
push
push
and
aad
outs
xchg
bound
ss
(bad)
cmp
pop
addr16
rcl
sub
in
xor
loope
cmp
adc
push
rcl
cs
movs
int
pop
call
add
rcl
mov
or
push
mov
out
fld
push
xlat
jmp
mov
leave
retf
leave
idiv
dec
pop
hlt
pop
inc
push
shl
into
jle
push
or
push
test
pop
pop
and
mov
jg
push
pop
push
adc
div
aam
or
cmp
sahf
out
mov
pop
mov
(bad)
sbb
sbb
jp
fs
mov
jns
je
test
push
mov
jne
dec
push
lea
movs
loopne
test
pop
(bad)
repnz
and
push
imul
pop
xchg
cmps
das
ror
test
push
inc
mov
xor
dec
mov
repnz
daa
(bad)
aaa
sbb
clc
pop
sbb
icebp
add
lock
pop
in
stc
hlt
pop
(bad)
cmps
adc
fsubr
imul
xchg
pop
jl
adc
or
push
inc
pop
inc
fild
push
cmps
pop
xor
ret
mov
movs
int3
adc
retf
inc
add
(bad)
div
jne
push
inc
push
mov
and
fnsave
lds
inc
fdiv
in
inc
push
(bad)
(bad)
fstp
mov
jmp
mul
js
cli
and
xchg
test
cli
mov
lock
test
mov
jne
jp
xor
in
imul
cmps
inc
leave
ja
adc
imul
movs
ffreep
push
clc
jno
scas
xchg
xor
ret
ins
pop
(bad)
fcomip
call
es
lahf
fild
js
fdiv
add
mov
shr
sar
mov
(bad)
shl
hlt
retf
xor
pop
push
or
sub
sub
cmp
sub
sbb
pop
lods
nop
(bad)
xchg
xchg
movs
pop
pop
pusha
fbstp
jae
fidiv
ret
xchg
lds
cmp
fadd
xor
pop
add
or
cmovnp
mov
push
xchg
push
and
ror
pusha
clc
xchg
jp
(bad)
mov
mov
scas
jnp
idiv
mov
mov
mov
jmp
jnp
dec
xchg
adc
rcr
dec
addr16
cmp
cmp
push
cmc
push
push
out
out
cmps
mov
gs
pop
mov
cmp
fwait
add
fadd
cwde
pop
xchg
mov
lods
mov
shl
(bad)
scas
mov
pop
xor
mov
clc
ret
int
inc
repz
mov
out
and
retf
push
push
push
sar
mov
inc
push
jecxz
jecxz
xor
cmp
cmc
pushf
ds
lahf
test
xchg
inc
loope
push
sub
xchg
pop
cli
popf
scas
adc
fcomp
adc
pop
lds
scas
ds
or
cmps
sti
ja
pop
in
or
out
mov
sbb
test
addr16
xor
ja
push
gs
push
hlt
outs
and
mov
ds
js
inc
mov
(bad)
test
mov
push
mov
mov
sahf
bound
push
sti
retf
or
inc
sar
xchg
pusha
cmp
mov
xor
imul
jmp
sbb
pop
(bad)
out
cmps
xlat
dec
movs
inc
ins
fcomip
push
stos
fidivr
and
xor
rol
xchg
mov
test
pop
xor
dec
or
cmps
cmp
popa
enter
and
jge
jle
scas
and
sub
and
ret
aam
xor
jo
(bad)
fstp
int
sbb
cmp
and
jns
repnz
cmps
retf
aaa
xchg
inc
push
pop
adc
repnz
cs
les
pop
dec
(bad)
outs
aam
xor
inc
jle
ins
inc
push
mov
in
sti
leave
inc
sub
cmps
add
cmp
cmps
fistp
call
je
cmp
mov
sub
xchg
cwde
push
push
xor
lea
xor
push
out
cld
adc
mov
adc
or
or
xchg
ss
inc
adc
nop
in
cmps
sub
push
sbb
mov
adc
pmaddwd
pop
xchg
clc
ret
loopne
xor
push
ds
sub
das
and
and
iret
dec
push
xor
push
add
(bad)
adc
sbb
lods
xor
fs
adc
mov
ror
ins
inc
fsub
(bad)
fs
add
push
adc
retf
mov
call
or
out
sbb
and
add
mov
(bad)
aaa
xor
inc
xor
test
mov
mov
cmp
and
push
sahf
bound
cmp
mov
ss
mov
pop
fld
push
sbb
jbe
xchg
fs
jle
mov
pusha
in
jecxz
icebp
mov
dec
loope
or
mov
push
pushf
mov
mov
inc
repz
mov
push
loop
add
and
xchg
push
pop
pushf
stos
out
sbb
jl
or
jge
ss
adc
aam
mov
sub
and
mov
xor
cs
shl
(bad)
mov
xor
and
mov
fs
frstor
pop
mov
fild
lds
inc
and
xor
fld
jecxz
ret
mov
pop
jmp
stc
ret
cmps
sbb
jbe
out
repnz
xchg
inc
movs
movs
sub
sub
mov
retf
pop
xor
scas
pop
aam
clc
or
pop
(bad)
and
jmp
xchg
inc
test
test
in
lods
sub
ds
mov
add
icebp
movs
jle
mov
mov
push
or
cmp
add
xchg
stc
fisub
xlat
aas
mov
mov
ins
mov
xor
push
inc
xchg
je
sub
mov
dec
mov
jg
cmp
in
hlt
xchg
mov
rol
dec
add
fdivr
aam
push
inc
or
dec
sti
mov
daa
fs
sbb
adc
outs
pop
xchg
inc
pop
out
test
jo
fs
daa
dec
xor
dec
mov
sbb
ss
ins
jmp
and
xchg
push
ss
data16
movs
les
mov
push
push
xchg
retf
cmps
fild
push
je
aaa
imul
cmp
push
aam
adc
movs
adc
mov
test
xchg
cmps
mov
push
loope
sub
jae
aaa
cli
and
sbb
cmp
lea
loope
pop
add
add
enter
mul
cmp
sbb
cmp
push
pop
add
pop
add
ret
cmc
mov
push
mov
mov
iret
scas
inc
mov
call
int3
cmp
enter
mov
es
cmp
mov
sub
gs
and
(bad)
cmp
test
jbe
pop
mov
mov
test
ja
movs
push
sbb
jmp
xchg
and
add
stc
mov
cmc
mov
fistp
fcmovbe
aam
fimul
sbb
inc
test
stos
xchg
jnp
test
arpl
aad
cmc
mov
adc
loop
fcmovbe
pop
mov
pop
push
je
fisub
(bad)
push
sbb
(bad)
std
jmp
dec
push
int
in
ins
cdq
dec
push
pop
jne
xor
and
push
mov
stc
gs
aad
movs
enter
(bad)
shl
inc
js
rol
shl
or
repz
cmp
xchg
aaa
repnz
sbb
bound
xchg
sahf
jge
and
mov
out
sub
call
xchg
aad
test
cwde
lea
inc
fbld
push
aad
xlat
in
aam
push
pop
adc
mov
sub
shl
sub
test
and
(bad)
mov
(bad)
out
adc
mov
movs
mov
mov
arpl
xchg
and
sub
xor
arpl
js
in
adc
sub
(bad)
cmps
jbe
adc
mov
add
push
mov
outs
mov
xor
mov
mov
popa
or
scas
xlat
outs
or
rol
push
inc
ins
lods
xor
gs
push
sahf
mov
xor
fld
cmp
test
push
enter
push
inc
outs
xchg
jbe
sbb
das
push
jbe
jns
push
sar
inc
inc
arpl
inc
jmp
call
shl
inc
(bad)
sub
push
pop
jle
mov
and
push
or
sbb
sub
inc
push
int
rcl
loope
mov
mov
cmps
div
dec
xlat
inc
ret
sbb
mov
ds
cmp
outs
daa
sbb
loope
push
add
or
cmp
(bad)
daa
fild
and
(bad)
push
inc
scas
mov
sub
ins
retf
cmp
mov
popa
push
ret
(bad)
movs
push
or
div
scas
inc
xchg
in
adc
shl
push
nop
aam
stos
jl
inc
mov
push
mov
(bad)
clc
fstp
into
jle
in
xchg
push
loopne
test
mov
xor
adc
and
and
movs
and
push
popa
inc
nop
inc
jb
mov
(bad)
or
std
cmp
les
and
psubd
fsub
adc
stc
int
xchg
or
enter
cmc
in
xchg
and
adc
enter
push
and
cmc
xor
int3
jecxz
pop
jb
out
mov
ins
stc
dec
movs
cmps
push
jne
repz
out
push
cmp
add
arpl
lds
(bad)
and
inc
adc
bound
inc
in
lds
mov
icebp
or
push
inc
sub
fidivr
add
lods
repz
fs
(bad)
mov
dec
stos
popa
ja
rcr
pop
ss
inc
mov
xchg
out
adc
xchg
into
ret
fst
jne
(bad)
mov
add
mov
fcomp
in
dec
mov
cmc
arpl
in
gs
push
rcr
rcr
mov
mov
sahf
mov
in
gs
xor
and
fstp
and
or
pop
cmc
es
push
pusha
cmps
mov
es
bound
fcomip
hlt
jns
fidiv
push
push
push
dec
cmp
or
mov
pop
stos
push
push
push
jmp
les
inc
mov
icebp
in
cwde
lds
jbe
int3
xor
adc
cmp
daa
retf
rcl
push
jbe
mov
mov
in
adc
shr
pop
mul
mov
pop
xor
jle
test
sbb
xor
aas
xchg
lods
pop
lds
mov
int3
sbb
cdq
mov
sub
imul
mov
lock
fiadd
adc
mov
lock
ja
dec
inc
cmps
add
adc
pop
ret
inc
adc
push
inc
dec
push
cdq
pop
sbb
sub
cmp
mov
inc
out
cmp
mov
and
inc
dec
std
inc
xchg
rol
nop
cmp
mov
retf
push
mov
add
mov
adc
inc
sahf
aas
push
es
sub
xor
and
mov
daa
daa
mov
enter
pop
inc
jo
stc
xor
push
shl
push
mov
inc
cmp
mov
inc
enter
stos
pop
jae
ins
cmc
test
cmps
mov
sbb
int
jne
jnp
in
pop
or
pop
test
sub
pop
xor
jmp
div
sbb
lods
mov
cmps
or
mov
jecxz
adc
add
pop
push
clc
mov
xor
stos
adc
mov
movs
fistp
je
daa
idiv
out
jecxz
sub
ins
iret
pop
push
push
xchg
(bad)
repz
jmp
jge
jg
outs
add
push
mov
mov
jbe
int3
(bad)
std
sbb
test
ins
pop
inc
xchg
push
neg
inc
dec
dec
xor
xchg
(bad)
fs
xlat
fst
(bad)
(bad)
out
jecxz
rol
push
sub
call
stc
pop
movs
outs
xchg
aad
push
sbb
shl
mov
cmps
cs
add
(bad)
mov
mov
fmulp
jge
add
in
push
test
mov
dec
dec
shl
cmp
jmp
(bad)
jo
jbe
test
scas
fcmovbe
fld
dec
jno
dec
fcom
xchg
movs
xchg
es
mov
adc
(bad)
sub
xchg
(bad)
xchg
push
mov
dec
movs
lds
test
pop
xchg
lds
ret
inc
mov
xor
inc
push
dec
call
xchg
jb
push
adc
jp
arpl
xor
nop
aaa
push
mov
pusha
pop
mov
ror
fstp
in
sbb
pop
mov
xchg
pushf
ja
cmps
inc
(bad)
in
inc
mov
push
and
pop
sub
jge
dec
mov
cli
xor
sub
lahf
pop
in
xor
sbb
scas
in
dec
popf
mov
aam
pop
or
sub
rol
aam
icebp
mov
and
mov
sbb
adc
or
push
out
inc
cmp
xchg
pop
sbb
inc
mov
fwait
xchg
enter
imul
sar
add
and
movs
ins
les
cmc
fwait
data16
daa
movs
adc
and
adc
adc
pop
and
pop
lds
push
xor
cld
test
fldpi
push
movs
hlt
inc
sbb
(bad)
adc
xchg
into
jae
mov
sbb
push
adc
dec
sub
jge
xor
es
mov
out
cmp
xor
hlt
push
xlat
xor
sub
(bad)
imul
sar
outs
inc
push
aaa
mov
xchg
jne
(bad)
jb
sti
inc
idiv
arpl
mov
aam
into
cld
xchg
pop
loopne
xchg
les
and
ror
adc
adc
mov
mul
mov
stc
mov
sub
test
ja
sbb
dec
add
or
cmp
ficom
je
movs
fst
mov
inc
popa
xor
push
rcr
(bad)
xor
push
test
and
je
jl
cmc
data16
mov
mov
push
push
jb
test
outs
jecxz
adc
and
movs
repz
jno
add
adc
test
int
jmp
jb
cmp
mov
jg
push
mov
out
ret
pop
loop
(bad)
cmp
div
adc
es
push
scas
inc
or
nop
inc
(bad)
dec
dec
arpl
xchg
sar
and
adc
sub
dec
es
pop
outs
xor
mov
movs
and
mov
dec
jne
push
sub
mov
ins
outs
aaa
stos
xchg
lods
test
adc
dec
cmp
les
mul
scas
adc
and
pop
xor
jg
and
jne
scas
cmps
inc
and
xor
adc
shl
cmps
retf
add
adc
cmp
xchg
and
jg
xchg
xchg
add
and
nop
(bad)
movsx
push
sti
in
inc
(bad)
xchg
add
sub
movs
test
push
xor
cdq
test
and
fcmovb
jmp
add
fwait
call
outs
sub
out
pop
div
lds
and
aad
aaa
stos
movs
pop
mov
xchg
mov
xor
xchg
fimul
mov
adc
frstor
les
mov
jmp
inc
jo
aaa
stos
jne
imul
pop
mov
and
mov
push
push
inc
xchg
cmp
adc
mov
pop
and
das
and
add
push
cmps
jo
out
out
into
sbb
and
call
data16
sub
into
hlt
sbb
fwait
movs
push
push
jecxz
xchg
gs
jne
xchg
mov
enter
xchg
es
and
in
fsub
les
push
mov
dec
popf
mov
add
cmp
add
std
fild
popa
xor
aas
outs
mov
jmp
iret
pop
loope
stos
les
jns
ret
out
dec
rol
sub
and
aad
mov
ret
jne
lds
pop
ins
arpl
cli
push
xchg
jp
inc
rcl
cmp
fdiv
loope
retf
push
bound
aad
mov
xchg
icebp
sahf
xchg
and
and
sub
and
neg
stc
fcmovu
stos
and
push
cmps
add
mov
mov
rep
sub
sbb
(bad)
sub
pop
inc
dec
and
and
xchg
mov
into
aad
not
dec
jo
xor
enter
ret
inc
dec
push
push
repnz
in
div
lea
aad
(bad)
and
push
cmp
(bad)
xor
xchg
jnp
dec
push
pop
or
pop
mov
(bad)
xor
xlat
and
(bad)
imul
sbb
push
cmps
mov
cmps
jbe
arpl
pop
test
repnz
and
add
mov
aad
mov
jge
aad
pushf
push
dec
mov
mov
arpl
ss
rcl
add
cmps
arpl
call
ret
les
push
je
data16
xor
aaa
clc
push
ror
jno
(bad)
int3
mov
sbb
push
nop
sar
cwde
push
test
and
lea
mov
push
cmp
test
and
imul
aas
push
mov
fs
lea
repnz
fdivr
mov
push
xchg
sub
(bad)
push
pop
cmp
div
cmps
cmps
stc
lds
js
pop
fs
mov
scas
or
mov
cmp
jp
mov
adc
add
pop
(bad)
in
adc
jg
and
daa
mov
lock
xor
je
icebp
cmp
adc
add
mov
sub
aam
mov
out
rcl
or
leave
sub
enter
ins
sti
iret
outs
in
xor
test
repnz
push
add
mov
shr
inc
and
and
xchg
xor
or
push
or
jne
aas
mul
ins
push
push
jo
bound
jmp
mov
push
adc
in
and
dec
mov
pop
mov
and
js
pavgb
xchg
mov
retf
xchg
movs
je
mov
mov
test
icebp
inc
call
adc
push
ja
in
out
loope
add
cs
repz
(bad)
es
(bad)
stc
push
retf
sub
jno
loopne
shr
or
xchg
push
adc
jne
cmp
xchg
mov
stos
pop
test
push
(bad)
or
into
push
inc
imul
xor
push
out
jle
mov
sub
cmp
inc
sub
fidivr
mov
ss
mov
fdiv
xor
hlt
xchg
mov
mov
das
loopne
cdq
xor
rol
inc
movs
jle
xchg
test
test
cmc
or
sub
je
adc
sbb
out
mov
fs
and
add
popa
dec
iret
bound
cmp
xchg
xchg
mov
and
xchg
inc
push
adc
push
push
sbb
out
out
in
in
mov
stc
ror
pop
shr
mov
and
dec
movs
add
in
sti
fimul
std
loope
push
jecxz
sub
xor
mov
(bad)
inc
cdq
jmp
push
mov
icebp
and
cdq
add
addr16
loopne
sbb
or
push
sbb
shr
cs
jo
cmp
push
xor
shr
lds
inc
(bad)
retf
(bad)
int3
push
mov
out
xlat
pusha
and
and
call
(bad)
push
add
sti
aam
mov
pop
mov
cwde
add
mov
dec
test
cmp
jae
out
jbe
xlat
shl
popa
dec
push
pop
fcomp
mov
nop
fmul
xchg
fs
movs
jbe
rep
dec
mov
cmc
mov
or
xchg
ins
xchg
or
pop
jle
pop
inc
dec
jb
test
fcomp
jmp
popa
adc
push
repz
es
loopne
cmc
dec
test
push
inc
iret
mov
lds
hlt
mov
jno
mov
sub
ins
sub
pop
mov
sbb
out
adc
les
mov
(bad)
imul
not
(bad)
div
xchg
rcl
xor
pop
div
inc
push
jae
mov
cmp
sbb
in
sahf
xchg
fistp
push
cdq
retf
inc
hlt
in
inc
(bad)
mov
imul
push
in
bnd
hlt
push
add
mov
daa
mov
not
mov
jo
gs
inc
mov
setg
xchg
cmp
mov
addr16
push
sbb
inc
vcvtss2sd
inc
fcmovne
xchg
push
aam
es
inc
sub
inc
popf
inc
fnstenv
lock
mov
les
pop
pushf
movs
test
mov
adc
(bad)
xor
pop
lahf
fcom
inc
test
xlat
cmp
jne
sub
xchg
sub
adc
push
mov
int3
lods
sbb
xchg
mov
ss
ins
xchg
div
mov
jbe
cmc
test
out
xchg
imul
jae
xchg
xor
ins
out
imul
jae
into
add
or
push
ror
mov
push
dec
jbe
push
inc
ja
test
push
dec
mov
fyl2xp1
rcl
mov
outs
test
pop
(bad)
fs
adc
rol
xchg
(bad)
and
femms
test
(bad)
repz
push
pop
dec
inc
shr
xchg
in
and
retf
cmc
imul
sbb
into
xchg
fadd
hlt
imul
push
(bad)
out
xchg
rol
aad
mov
pop
xor
jno
inc
cdq
les
fucom
push
es
inc
xchg
rol
leave
shl
repz
nop
out
in
xchg
icebp
int
fwait
inc
leave
ss
cmc
push
ret
(bad)
in
and
cmp
scas
push
in
sbb
ret
test
icebp
jecxz
outs
cmp
int
add
or
push
outs
push
jb
sub
fist
das
xor
gs
xchg
dec
movs
leave
mov
outs
ret
outs
adc
push
and
nop
dec
add
dec
movs
or
mov
popf
cdq
jbe
test
mov
xlat
sbb
outs
pop
mov
stos
mov
out
xlat
sbb
dec
xchg
aad
in
inc
pop
mov
mov
push
dec
xchg
xchg
push
retf
stc
shr
fstp
out
cmp
leave
xchg
and
mov
mov
push
mov
push
sbb
stos
push
push
inc
mov
adc
or
mov
out
mov
adc
aaa
inc
ror
je
xchg
mov
idiv
mov
sub
pop
xchg
and
out
inc
jl
sbb
adc
add
out
mov
nop
ficom
push
inc
xchg
fdivr
add
push
adc
cs
movs
cdq
push
fwait
dec
xchg
popa
mov
shl
call
inc
inc
mov
test
xor
add
mov
push
outs
je
mov
inc
add
repz
jo
xchg
rcl
cli
ret
push
push
in
mov
inc
js
test
test
sbb
repnz
test
das
mov
pop
mov
retf
ror
(bad)
mov
cmp
movs
lds
imul
mov
outs
inc
pop
push
mov
xchg
sbb
stos
adc
je
shl
fwait
mov
sub
sub
pop
dec
sbb
call
cli
mov
retf
mov
pop
cld
dec
jmp
dec
adc
ins
inc
xchg
lods
mov
adc
rol
cmps
arpl
lods
popa
mov
imul
xlat
sahf
lods
outs
pop
das
xor
sar
out
data16
pop
dec
and
push
add
leave
lock
daa
and
idiv
imul
in
lods
(bad)
rcl
shl
cmps
mov
xchg
inc
jmp
aad
fwait
les
out
out
xor
dec
add
jno
ss
std
inc
push
sub
iret
daa
retf
daa
cwde
inc
xchg
xor
jmp
scas
ja
aaa
cmp
scas
ins
dec
pop
xchg
fisttp
adc
data16
sbb
in
gs
push
and
mov
rcl
add
hlt
cs
sub
sbb
sub
push
call
scas
mov
and
sbb
mov
xchg
xor
sub
adc
and
test
xchg
inc
in
shl
outs
fstp
sbb
call
(bad)
nop
sbb
dec
cmps
loope
test
dec
lods
pop
mov
fs
push
dec
and
xchg
int
pop
clc
dec
test
inc
or
push
test
test
test
xchg
adc
clc
or
sub
xor
and
lods
push
cs
xlat
inc
pop
stos
jmp
ins
xor
xchg
mov
sti
xchg
jo
lods
push
mov
cmp
iret
sbb
push
pop
lds
into
scas
mov
xchg
popa
pop
fidivr
clc
int3
arpl
cwde
enter
aad
aad
jge
pop
shr
aaa
jno
xchg
movs
push
mov
and
(bad)
cmp
data16
cmps
push
inc
imul
test
rcl
lods
(bad)
mov
clc
dec
push
dec
sub
pusha
das
cmp
sub
in
or
sbb
movs
daa
call
or
inc
fs
sub
cwde
fld
call
push
stc
aad
xchg
call
mov
push
push
xchg
mov
mov
add
inc
push
xchg
bound
scas
addr16
xchg
shl
lds
(bad)
xlat
cmc
(bad)
fistp
ja
xchg
int
lahf
sub
push
data16
pushf
push
pop
cdq
test
add
jae
enter
pop
daa
add
mov
xchg
neg
hlt
xchg
in
in
push
pop
cmp
mov
stos
xchg
psadbw
cmp
xchg
pushf
clc
mov
and
mov
xchg
mov
imul
loope
push
push
aaa
push
js
mov
hlt
jne
and
inc
cmps
pop
add
test
aam
sbb
data16
xor
push
inc
pop
imul
addr16
dec
out
retf
aad
or
loop
mov
gs
sub
push
punpcklbw
add
rol
adc
push
shr
cmps
adc
js
sbb
adc
inc
sti
jne
(bad)
out
jbe
xlat
aam
(bad)
ins
mov
(bad)
mov
push
and
adc
call
jae
jns
imul
psllq
or
iret
fwait
daa
mov
fsub
mov
xor
in
and
jmp
mov
not
jge
jmp
hlt
pop
das
lods
xchg
call
lods
push
movs
cmc
out
jmp
std
sbb
adc
pop
and
and
gs
lds
out
test
bnd
sbb
ja
mov
push
dec
dec
mov
push
or
jle
push
xchg
adc
aad
iret
xchg
in
pop
add
scas
pop
push
imul
(bad)
sbb
mov
cmp
and
add
gs
mov
sub
lods
adc
aad
int
mov
das
cmp
getsec
pushw
xchg
cmps
aaa
mov
in
out
mov
dec
call
movs
pop
fimul
add
xor
dec
dec
xchg
test
sbb
inc
cmp
retf
jg
pop
iret
mul
jg
mov
cmp
cli
adc
xchg
pop
scas
je
ds
pop
pop
ror
lods
dec
test
mov
xor
cli
inc
cmp
jecxz
aas
cld
sar
outs
imul
scas
sbb
dec
and
repz
loope
imul
jl
test
or
mov
jl
jecxz
or
lea
add
mov
fcom
sar
clc
test
out
sbb
sbb
popf
mov
pop
sbb
add
sub
sub
and
inc
mov
aam
mov
in
add
adc
(bad)
stc
(bad)
add
test
aam
loope
cmp
aaa
add
into
adc
add
cmc
mov
test
daa
mov
mov
mov
fs
push
jge
loopne
mov
push
jnp
(bad)
popa
xchg
movs
fs
loope
popf
pusha
jmp
in
aad
loop
mov
daa
ret
call
je
xchg
and
mov
lods
(bad)
test
inc
jmp
sti
addr16
sbb
push
lds
push
dec
out
inc
push
xor
or
mov
inc
or
xchg
iret
popa
pop
dec
and
add
mov
pop
cs
pop
jb
xchg
out
xchg
push
pop
push
xchg
push
add
pop
sbb
mov
mov
movs
leave
fs
call
mov
xor
dec
xor
movs
cmp
ins
daa
xor
jmp
pop
add
mov
mov
iret
stos
je
mov
ficomp
or
inc
mov
add
inc
add
test
cli
push
cmps
arpl
(bad)
aam
cmp
dec
inc
sbb
xchg
pop
adc
(bad)
movs
add
mov
mov
test
jge
inc
push
xlat
sub
imul
je
cmp
cmp
daa
rcr
in
add
pop
gs
and
push
and
sub
mov
test
nop
jl
imul
xchg
mov
or
sbb
adc
add
leave
push
mov
dec
aaa
push
push
in
and
adc
fist
ret
neg
es
call
in
push
or
daa
dec
or
aam
cmps
gs
cmc
paddq
add
adc
sbb
adc
(bad)
ja
pop
add
rcr
shl
jnp
stc
addr16
push
mov
jle
adc
inc
test
js
fs
push
imul
pop
sbb
xor
test
mov
dec
(bad)
push
dec
outs
xor
jmp
div
add
imul
test
sbb
imul
je
mov
int3
aad
and
lods
lods
add
enter
(bad)
mov
nop
cmp
jecxz
pop
int
fistp
cmp
add
xor
mov
sahf
idiv
sbb
and
mul
movs
cs
cmp
mov
push
addr16
jne
cmp
xor
dec
cs
fild
push
adc
int
and
pop
sbb
mov
inc
push
dec
sbb
jo
jp
sbb
test
nop
push
pop
push
lea
int3
call
adc
mov
out
aas
lea
add
inc
and
fdiv
mov
sub
jmp
je
ins
into
popf
and
push
mov
stos
jge
int3
(bad)
mov
pop
or
mov
clc
enter
ss
sbb
xor
popf
sti
lods
mov
les
cmp
sbb
fdiv
xor
(bad)
xlat
jo
fwait
cmps
xlat
loop
sti
mov
stc
fptan
retf
cmp
test
add
cmp
test
push
sub
jo
push
mov
loop
add
repz
jne
std
push
mov
jl
cli
jg
shl
movs
out
loope
jg
inc
mov
test
adc
outs
mov
push
cmp
adc
cmp
outs
cmc
pop
div
in
ds
push
or
jae
aas
lds
inc
in
sbb
scas
pop
lods
inc
inc
pushf
cmps
mov
movs
xchg
mov
sbb
mov
add
ins
push
fstp
fsub
inc
adc
or
pop
fisttp
pop
xchg
ret
push
xchg
inc
or
mov
popf
jl
push
cmp
popf
sub
pop
xor
popf
mov
xor
jecxz
imul
add
mov
or
stos
std
loopne
movs
fs
inc
out
sub
sub
iret
push
inc
ret
mov
loopne
mov
fild
lea
xor
mov
es
std
arpl
mov
out
xor
in
stos
mov
std
jb
jmp
push
cs
add
inc
mov
jmp
js
mov
mov
dec
push
cmp
sub
data16
int3
cmps
fist
sbb
mov
test
pop
ja
pop
(bad)
inc
nop
and
js
mov
lods
loopne
sbb
ins
scas
jae
in
sbb
not
add
ficom
xchg
xchg
xor
mov
xor
or
adc
fld
sub
lea
add
movs
lahf
mov
(bad)
(bad)
mov
pop
and
push
xchg
test
cmc
jb
mov
sub
icebp
aaa
push
xchg
leave
(bad)
dec
out
adc
mov
(bad)
pop
jle
repnz
add
in
jmp
stc
mov
xor
loop
cwde
mov
in
nop
adc
jne
add
jmp
inc
es
push
mov
xchg
dec
xchg
sbb
cmp
out
out
xor
ss
sub
(bad)
and
movs
push
aas
dec
out
mov
add
inc
sbb
xchg
push
fdiv
inc
mov
mov
ret
fist
add
bound
jp
jne
jmp
add
jbe
data16
dec
xchg
nop
jp
fiadd
hlt
xor
cmp
mov
xchg
movs
xchg
mov
hlt
add
push
add
repnz
cmc
pop
dec
push
xchg
jp
repnz
in
outs
mov
cmps
dec
mov
push
sahf
xor
je
bound
inc
mov
jecxz
fist
xchg
and
dec
(bad)
ret
idiv
mov
fistp
fwait
cmc
mov
out
adc
cmps
arpl
retf
ficom
mov
mov
out
in
add
jne
add
push
mov
(bad)
xchg
push
adc
lods
mov
fsubr
mov
fild
test
push
test
and
mov
add
add
push
out
push
cmps
add
repnz
dec
not
add
mov
cmps
stc
mov
xor
cwde
adc
ss
(bad)
xchg
and
fs
out
pop
inc
pop
movs
test
imul
test
rol
and
add
xchg
and
xchg
push
mov
sub
pop
mov
lock
dec
jbe
stos
jmp
in
repz
push
and
or
pop
and
push
xchg
data16
or
mov
mul
sbb
pop
aad
mov
in
mov
mov
pop
out
and
or
mov
or
retf
out
push
dec
mov
retf
dec
pop
movs
data16
dec
jg
cld
xor
adc
sar
es
pop
stos
cmp
and
mov
fstp
into
fstp
or
int
push
pop
cmps
loope
cmc
dec
fdiv
mov
add
add
movs
(bad)
mov
js
scas
clc
jecxz
adc
jne
inc
and
repz
dec
aam
stos
dec
(bad)
ss
xlat
rol
(bad)
mov
stos
pop
dec
retf
inc
jmp
gs
mov
gs
jno
jne
sbb
adc
push
ror
movs
xchg
fimul
in
mov
call
(bad)
jg
add
ds
sub
and
dec
and
adc
mov
in
mov
jmp
adc
aas
mov
ja
add
sub
cmps
rcl
mov
mov
imul
addr16
fwait
or
movs
and
cdq
dec
jmp
call
lock
aam
ss
iret
nop
jo
cmp
inc
shl
stc
xchg
mov
popa
ret
xor
aas
stos
mov
fsubr
xchg
add
ss
stos
inc
imul
addr16
push
dec
add
mov
aam
sub
cmps
shr
jbe
lods
rol
or
cmp
jb
retf
ret
aam
jnp
rcl
jne
jmp
mov
add
sbb
dec
jbe
mov
repz
jmp
test
mov
sti
aaa
lock
push
int3
xchg
(bad)
loope
loope
iret
push
adc
xchg
dec
mov
inc
xchg
jne
jle
jp
lods
das
sar
movs
out
lea
push
mov
mov
xor
pop
stos
pop
mov
add
mov
push
fscale
xor
or
enter
pop
xor
loopne
xlat
sub
cmp
sub
es
cmp
push
cmc
pushf
inc
inc
pop
jmp
mov
es
adc
and
ror
stc
jae
clc
xor
pop
ss
push
pop
jbe
cmp
les
xchg
ja
xor
mov
cwde
mov
retf
cmp
push
cwde
sbb
jmp
push
daa
les
fistp
popa
add
mov
idiv
enter
stos
test
stos
(bad)
sti
mov
xor
inc
pop
fisub
or
test
mov
iret
pop
jns
xchg
test
xchg
cmp
movs
les
cwde
mov
je
loope
idiv
push
sahf
or
sub
xchg
xchg
test
pop
jle
clc
mov
adc
test
sub
add
push
(bad)
test
daa
les
push
out
lea
(bad)
mov
mov
sar
loop
add
sbb
cmp
mov
pop
xor
adc
call
hlt
or
cmp
adc
fld
pusha
call
test
vmovaps
push
sbb
add
hlt
jne
cs
test
jmp
cmc
push
push
cmp
mov
cmps
inc
adc
push
popa
jne
fs
dec
movs
movs
inc
mov
ss
and
add
xor
mov
es
in
mov
out
cmp
retf
inc
das
rcl
xor
jo
jbe
retf
jnp
add
gs
ucomiss
cli
mov
shl
adc
shl
mov
bound
add
hlt
lds
jge
ja
jne
pop
(bad)
lds
icebp
sub
cmc
push
ret
xor
push
pop
(bad)
jle
add
les
jo
inc
xor
mov
pop
ret
mov
pop
inc
xchg
gs
pop
addr16
jg
pop
push
jne
inc
(bad)
js
repz
cs
gs
ret
jmp
pop
fcmovnbe
mov
mov
aam
sub
bound
cwde
adc
and
add
data16
rol
sbb
mov
jbe
xchg
cmps
xchg
(bad)
gs
adc
ja
les
cmp
dec
xchg
pop
sub
call
adc
stos
jbe
(bad)
aad
mov
aam
stc
div
inc
cmc
pop
mov
jle
dec
push
ss
jge
cmps
imul
xor
push
or
lds
or
gs
stos
(bad)
pop
inc
push
into
xor
add
adc
out
cli
hlt
retf
mov
or
in
xor
jb
movs
jno
mov
cmps
ja
sbb
xor
xor
pushf
gs
jmp
popa
sbb
mov
push
inc
adc
ins
or
(bad)
jmp
push
and
mov
push
gs
dec
jo
dec
xchg
sbb
adc
add
jo
(bad)
dec
push
sbb
clc
cmc
cmp
popf
test
xchg
mov
pop
inc
mov
les
or
dec
stc
imul
int
cmp
mov
inc
push
je
data16
mov
loop
(bad)
fst
test
sbb
iret
pop
mov
ja
addr16
mov
fs
aam
hlt
icebp
sbb
push
xchg
jp
or
pop
mov
add
and
adc
test
xchg
dec
ret
xchg
arpl
(bad)
addr16
pop
xor
pop
cmp
fcomi
(bad)
fadd
fs
inc
xchg
jl
jmp
cmp
fdivr
sub
mov
dec
mov
jae
addr16
adc
loopne
cli
imul
dec
xor
inc
pop
xlat
mov
sub
jnp
cmp
sub
into
pop
add
daa
xchg
dec
not
js
xchg
rol
pop
fcomp
addr16
xchg
mov
mov
or
fwait
(bad)
out
nop
cmc
mul
in
pop
ss
(bad)
cld
xchg
int3
and
out
das
cmp
sub
or
ja
ins
(bad)
cmp
sub
or
hlt
add
leave
rol
es
sbb
inc
aad
in
jbe
inc
sub
xor
jne
int3
add
int
xor
mov
fadd
cmps
inc
cmp
sub
adc
xor
sbb
xchg
mov
(bad)
and
xchg
call
bound
cli
scas
inc
jecxz
xchg
push
stos
jl
and
fs
(bad)
sub
xor
xor
adc
idiv
add
repz
vpaddusw
push
lea
mov
mov
xchg
jmp
sub
fnstcw
sbb
addr16
cmp
mov
sub
imul
adc
stc
pop
xchg
add
push
dec
mov
nop
lods
lds
stos
inc
clc
movs
(bad)
loop
sub
add
retf
push
call
dec
test
retf
push
jo
pop
mov
stc
jmp
mov
add
push
bound
aam
(bad)
data16
data16
stos
xchg
call
add
daa
dec
sbb
pop
inc
movs
xor
mov
add
cmps
jl
movs
xchg
mov
mov
mov
nop
xchg
aaa
call
call
(bad)
fnstsw
enter
cmc
lahf
aaa
push
or
icebp
movs
lock
popf
xchg
pop
add
mov
pop
js
push
mov
loop
add
cmc
or
and
xor
add
lods
cmp
(bad)
call
xchg
pop
div
es
xchg
pop
(bad)
jb
pop
jne
popf
jp
jne
imul
aaa
repz
lock
or
sbb
or
clc
daa
mov
mov
in
or
push
cmc
out
lods
cmp
in
mov
cmps
es
out
and
test
imul
mov
inc
push
mov
in
jp
add
mov
dec
jo
adc
mov
lds
enter
ja
jle
movs
push
out
xlat
cmp
cmp
push
push
cmp
inc
adc
gs
je
xor
push
xchg
mov
stos
(bad)
loop
pop
xchg
shl
jecxz
pop
pop
push
into
test
or
ja
cmp
sub
jns
lds
xchg
ss
hlt
dec
dec
inc
mov
test
(bad)
outs
out
pop
clc
or
cmp
jmp
loopne
dec
xchg
gs
lds
fdiv
sbb
call
outs
jmp
add
call
sub
push
je
inc
xchg
stc
xchg
inc
sub
cmp
add
repnz
cmp
pusha
jl
mov
add
in
(bad)
xchg
psrlq
mov
cld
xchg
(bad)
mov
xchg
push
push
mov
adc
xor
int3
aam
lahf
(bad)
cwde
add
add
mul
push
xor
jne
pop
xlat
xor
jp
xchg
popf
or
ja
int
repz
aam
outs
mov
movs
mov
xlat
shl
(bad)
mov
ins
mov
stos
adc
bound
(bad)
jmp
in
inc
push
xchg
cmps
(bad)
push
inc
loope
pop
aad
push
push
mul
pop
repnz
mov
fisttp
jne
xchg
add
pop
stc
cmp
inc
cli
cmp
jmp
hlt
xor
jae
xchg
xchg
ss
in
jbe
leave
adc
out
lahf
sar
out
in
fmul
jae
test
pop
pop
xor
add
or
fmul
fwait
and
arpl
xchg
push
leave
pop
push
ret
lock
mov
xor
jnp
jg
or
loop
xchg
ja
es
xchg
leave
sub
sbb
arpl
cmp
dec
pop
inc
push
lods
pop
lock
clc
or
cmp
xor
cmp
push
in
ja
loop
adc
cmps
push
mov
fadd
mov
ffree
xor
sub
mov
jae
dec
push
shl
cmp
mov
cmps
xor
data16
mov
cmp
aam
iret
pop
sar
pop
addr16
mov
fld
out
enter
dec
pushw
mov
mov
lods
xor
pop
push
addr16
adc
inc
fdecstp
add
inc
pusha
lds
scas
sub
sbb
retf
inc
arpl
jno
div
jp
or
dec
push
mov
pop
xchg
jae
cwde
jae
pop
cmc
sbb
jp
pop
movs
lods
(bad)
xchg
xchg
xchg
jle
add
sub
mov
xchg
mov
mov
stos
add
mov
cwde
inc
push
xchg
das
sbb
inc
xchg
and
daa
sti
mov
jb
jb
test
mov
inc
add
icebp
and
jmp
mov
inc
cmc
xor
das
enter
lods
retf
push
pop
retf
leave
imul
cli
xor
fdiv
push
mov
fsub
aad
leave
ss
setno
or
adc
sub
push
mov
mov
neg
in
rol
fadd
or
inc
jg
pop
imul
cmps
sbb
lahf
xor
and
lock
push
cmp
or
mov
fwait
xchg
es
xor
hlt
test
hlt
mov
xor
cmc
push
sbb
cli
dec
inc
ins
sub
mov
loope
add
mov
inc
xor
jmp
jne
les
repnz
xchg
dec
mov
add
cmps
sub
push
adc
jmp
xchg
dec
imul
mov
jbe
fwait
repz
xchg
push
sbb
dec
mov
jbe
cmps
call
out
pushf
sysexit
(bad)
adc
(bad)
xor
adc
out
icebp
push
and
movs
mov
mov
in
sub
out
lahf
pop
ss
push
sbb
test
inc
add
cli
test
fld
out
sahf
mov
fstp
lea
cmp
sbb
sub
mov
cld
dec
in
dec
jge
or
cmps
clc
mov
xchg
loope
jbe
rcl
out
sub
movs
add
jp
pop
xor
inc
jp
fisub
dec
into
xchg
xor
pop
or
lds
out
movs
call
inc
test
stos
mov
dec
push
jg
dec
ins
sbb
jmp
cmp
adc
sti
lock
jp
mov
outs
mov
test
mov
pop
jbe
pop
or
aad
sbb
mov
dec
adc
arpl
pushf
out
fs
cmps
pop
dec
sub
out
xchg
mov
stos
daa
cmp
adc
xchg
pop
jns
hlt
movs
cmp
cmp
add
(bad)
rol
push
mov
(bad)
cwde
sahf
test
jne
push
lds
cmp
retf
cli
mov
(bad)
or
mov
pop
push
test
popa
stc
in
cmp
sbb
out
test
sar
dec
out
mov
xchg
mov
psubq
mov
retf
je
movs
out
jmp
mov
cmps
leave
cmc
push
shl
push
or
cmp
stos
adc
xchg
cmp
mov
in
lods
inc
fcomp
sub
out
aas
std
(bad)
cs
call
xchg
test
(bad)
dec
jbe
gs
jbe
dec
into
daa
cs
add
adc
cmc
imul
hlt
or
cmp
movs
test
or
daa
call
mov
daa
cmc
push
lea
in
sub
pop
jg
gs
pop
popf
js
cmp
mov
mov
pop
test
imul
js
repnz
popf
out
inc
xor
cld
add
sub
sahf
jge
pop
mov
cmps
jns
jne
push
pop
out
out
sbb
push
dec
ds
movs
test
popf
lock
out
lods
std
mov
ja
int3
aas
cmp
jmp
std
(bad)
(bad)
idiv
out
gs
test
cmc
cld
lods
jae
sahf
dec
mov
outs
mov
jbe
push
leave
imul
gs
retf
test
mov
pop
inc
cmps
and
inc
xchg
adc
xchg
int
aad
out
cmps
cmc
repz
dec
or
push
xchg
xchg
sbb
sbb
inc
sub
mov
das
push
movs
inc
push
hlt
movs
push
mov
mov
(bad)
xchg
in
jecxz
aas
out
scas
xor
pop
(bad)
xor
mov
test
test
movs
xlat
pop
in
or
in
sbb
jmp
les
aam
hlt
push
xchg
inc
test
mov
mov
add
xchg
add
jmp
mov
pushf
push
xchg
mov
mov
shr
nop
lds
fs
push
push
sbb
into
jmp
fs
aaa
hlt
cmp
dec
xchg
jbe
xchg
imul
fs
into
jmp
retf
cmp
mov
mov
cmps
xchg
ror
js
imul
or
and
sub
ret
daa
sub
xchg
xchg
xlat
out
push
mov
dec
dec
aaa
aam
xor
aad
sbb
(bad)
cld
xor
or
aaa
jae
cmc
dec
cdq
retf
mov
push
add
rol
retf
mov
pop
rcr
(bad)
cmp
cdq
or
lods
mov
test
rcl
sbb
arpl
sub
jmp
xchg
fdiv
xchg
cmps
aam
and
les
stos
cmp
in
inc
gs
mov
in
das
sub
pop
adc
cmp
test
and
les
icebp
xchg
xchg
jl
dec
jno
pop
inc
test
mov
es
xchg
aaa
aad
xchg
pop
shl
jecxz
lock
retf
(bad)
push
scas
mov
mov
sbb
ja
xor
push
jmp
xchg
mov
call
fistp
adc
mov
or
xchg
vcomisd
inc
call
add
stc
mov
jg
lods
add
cmp
mov
adc
ins
jo
xchg
retf
enter
mov
push
sbb
clc
imul
es
(bad)
fsub
push
dec
stos
fs
adc
in
sub
les
mov
stc
jmp
sbb
mov
mov
push
pop
(bad)
jae
into
lea
dec
dec
mov
pop
jns
mov
mov
imul
sub
and
pop
imul
lods
or
pop
ja
in
adc
addr16
cli
jbe
pop
sub
xchg
cmp
push
mov
jp
xchg
adc
mov
mov
(bad)
inc
(bad)
cmp
les
cmps
dec
pusha
clc
mov
mov
jae
scas
call
adc
scas
div
and
sahf
pop
sbb
ja
aaa
je
test
sbb
mov
pop
mov
mov
fimul
cmc
fsubp
(bad)
push
or
(bad)
ins
xor
adc
in
mov
movs
jbe
xchg
inc
test
add
sub
fdivr
sub
jmp
and
dec
dec
pop
push
pop
inc
dec
call
pop
out
aad
sub
add
xchg
neg
cmp
(bad)
cdq
sub
add
pop
sbb
(bad)
das
pop
inc
jmp
retf
hlt
xor
xor
jne
gs
dec
scas
test
adc
mov
pop
clc
sbb
cdq
push
xchg
sub
addr16
mov
jne
ss
add
in
mov
rcr
adc
sub
jns
retf
pop
hlt
sbb
dec
fisubr
hlt
cli
cmp
bnd
add
mov
sti
mov
xchg
xchg
jns
push
retf
es
mov
sub
mov
mov
pushf
push
lahf
mov
mov
mov
les
push
push
aad
loopne
xor
cmp
dec
pop
push
xchg
mov
mov
lds
adc
gs
push
imul
cmp
push
fwait
push
mov
test
imul
out
mov
retf
fst
xor
dec
sbb
xchg
fwait
arpl
and
push
jg
dec
adc
into
in
pop
inc
cli
je
retf
popf
rcr
test
mov
xchg
div
or
pushf
(bad)
hlt
mov
in
aam
retf
adc
je
xor
cmp
sub
sahf
dec
dec
call
pop
add
or
je
adc
add
fbstp
hlt
inc
sub
push
(bad)
jnp
or
fs
scas
retf
fcmovu
xor
es
dec
xlat
jg
sub
inc
hlt
jmp
movs
idiv
stos
cmps
je
jmp
fsubr
pop
sub
or
adc
les
push
mov
call
fucom
cli
cli
stos
repnz
aam
(bad)
sub
mov
ins
jb
jle
push
xchg
jb
call
loopne
fs
jp
data16
and
pop
dec
sahf
dec
sti
mov
jne
and
sbb
pop
imul
sbb
mov
xor
pop
xor
xrelease
push
je
push
add
div
ret
xor
xchg
test
cmps
jg
je
inc
pop
jp
mov
inc
ret
(bad)
cmp
sub
add
push
dec
jnp
pushf
mov
in
les
ret
add
sbb
mov
adc
test
push
repz
mov
mov
xchg
nop
push
cmps
gs
cdq
push
repz
mov
or
fnstenv
mov
add
mov
mov
loope
xchg
pop
call
in
adc
shl
call
daa
fadd
movs
test
imul
sub
test
movs
jnp
test
pushf
sti
in
enter
test
imul
and
xor
retf
xchg
mov
jp
pop
xchg
pop
xor
add
ja
les
jae
mov
aas
sbb
xor
push
mov
jbe
jp
xor
xlat
push
inc
out
(bad)
(bad)
aaa
loope
sub
push
(bad)
(bad)
push
cdq
ffree
loop
(bad)
in
mov
ficom
gs
push
shl
sub
sub
xchg
loope
add
push
lock
sub
push
xchg
out
sub
jbe
es
mov
push
cmp
mov
lds
imul
push
popf
and
adc
mov
push
repnz
std
mov
push
jmp
pop
mov
nop
dec
pusha
test
pushf
scas
movs
push
and
inc
cmp
retf
in
push
lds
xchg
popf
mov
inc
test
xlat
add
jmp
int3
sbb
add
test
or
aaa
mov
test
in
test
or
mov
movs
xchg
nop
ret
gs
adc
mov
cmp
lds
ja
fdivr
arpl
jb
mov
inc
popa
xor
jmp
loope
push
out
push
addr16
jmp
cmc
xchg
and
pop
mov
cmp
mov
js
or
mov
cli
and
mov
js
retf
in
and
xchg
inc
adc
ss
cmps
inc
mov
movs
push
aad
jle
and
daa
repz
je
xchg
jno
inc
and
icebp
out
out
or
fist
push
adc
nop
ret
mov
inc
ja
add
ficomp
jecxz
push
mov
push
or
loop
xor
(bad)
cwde
ins
xchg
jmp
pop
jns
inc
test
xor
shr
call
jmp
int3
mov
push
cmps
xor
push
je
cmp
fpatan
jecxz
jmp
xchg
xchg
cmp
push
mov
mov
(bad)
call
pop
test
mov
lds
fucom
jne
rcl
repnz
mov
sbb
div
cmp
fdiv
pusha
hlt
pop
mov
ret
jo
out
xchg
sbb
out
out
outs
data16
(bad)
mov
inc
outs
ja
inc
cdq
cs
and
and
rol
adc
nop
popa
jo
xchg
and
lds
popa
icebp
daa
clc
jo
or
gs
and
push
dec
dec
gs
or
ja
push
faddp
scas
and
or
push
add
jno
outs
mov
lds
jo
cdq
loop
rcl
jnp
xor
inc
(bad)
repz
out
pop
imul
repz
stos
gs
and
add
pop
cmps
add
je
popa
ret
inc
test
and
pop
(bad)
jne
adc
add
movs
cmc
jbe
inc
cmp
pusha
rcl
and
pusha
rol
cmp
cs
mov
and
push
loopne
cmps
into
mov
xchg
mov
push
int3
xchg
adc
or
xor
cmc
jb
jne
ja
ret
jnp
pop
mov
mov
xor
lods
cmp
ret
or
cdq
ret
hlt
add
jo
mov
mov
add
xchg
leave
sbb
shl
div
adc
pusha
outs
push
inc
into
xchg
push
cli
jns
xchg
inc
(bad)
fisttp
shl
xor
mov
adc
and
(bad)
aam
mov
mov
enter
and
and
pop
les
fwait
stc
xchg
inc
mov
mov
gs
pop
dec
fs
push
xor
sbb
mov
and
out
push
mov
int
xor
pop
test
sub
cmp
push
mov
in
loope
cmps
adc
hlt
and
int
pusha
jbe
xchg
add
cmp
xor
rol
pop
repz
mov
inc
mov
imul
out
ror
not
dec
in
je
test
dec
js
(bad)
mov
popaw
or
out
loop
pop
std
stos
shl
es
pop
inc
inc
xchg
dec
mov
xchg
push
mov
stos
or
adc
les
out
adc
jmp
or
xchg
mov
push
in
es
mov
inc
and
dec
lds
(bad)
jl
ret
enter
hlt
xchg
in
jne
or
cmp
(bad)
or
cmps
sub
cwde
push
test
jp
bound
sub
sub
mov
out
hlt
sahf
out
mov
cdq
mov
cmc
sbb
push
sti
or
sar
je
(bad)
xchg
mov
ins
push
popf
fwait
dec
push
cld
and
(bad)
xor
add
nop
outs
lds
cli
hlt
and
lock
jne
adc
retf
inc
pop
dec
in
rcl
pop
cs
popa
in
retf
push
xchg
loopne
fnsave
not
xchg
pop
lock
cli
(bad)
jno
in
push
push
out
inc
fmul
test
xchg
rcl
mov
cmp
es
adc
xchg
fsub
mov
test
mov
sub
movs
enter
push
test
dec
(bad)
jle
clc
ins
fcmovbe
xor
adc
cmps
jne
gs
adc
cmp
or
movsx
sti
lock
sub
fucomp
mov
jne
dec
ja
ret
pop
cmps
iret
xor
or
pop
(bad)
push
ret
out
xchg
daa
pop
shl
mov
xchg
xchg
mov
dec
or
repnz
sub
xchg
adc
pop
xchg
mov
test
push
pop
xor
test
test
cld
add
cmps
xor
cmps
ins
sub
ror
loope
adc
es
push
mov
xchg
aam
adc
cld
mov
push
aaa
pop
push
add
es
bound
cmp
mov
sub
mov
daa
aas
test
dec
clc
xlat
xchg
adc
cmps
mov
sub
xchg
fadd
xlat
push
rcl
cli
dec
inc
push
aam
stc
daa
jmp
push
jge
mov
fs
adc
adc
fchs
xor
sbb
xchg
inc
(bad)
jmp
loopne
and
add
or
mov
mov
inc
mov
out
sub
cmp
add
(bad)
fidiv
xor
jge
jne
push
jp
add
arpl
imul
jge
push
(bad)
out
push
sub
mov
cdq
movs
mov
inc
mov
pop
(bad)
jmp
adc
in
stc
pop
jne
clc
pop
and
sahf
data16
inc
mov
in
mov
add
adc
jb
mov
mov
mov
mov
mov
mul
jmp
les
cmp
jbe
js
pop
mov
movs
pop
xchg
movaps
out
pop
pop
inc
test
out
ret
cmp
jbe
es
push
mov
jno
cmps
sbb
adc
mov
xor
stc
dec
or
bound
test
lods
xchg
cwde
jmp
mov
das
push
loop
push
mov
sub
sbb
imul
xor
dec
mov
in
in
or
xor
scas
jns
dec
mov
mov
retf
mov
dec
jmp
nop
shl
push
jbe
movs
icebp
jl
pop
add
in
xchg
cmp
or
fmulp
(bad)
cwde
test
mov
shr
outs
cmc
pop
jbe
xchg
pop
xor
(bad)
lock
ins
out
stc
call
mov
mov
cmc
neg
je
add
enter
xchg
les
dec
cmc
cmps
or
fst
lods
adc
xchg
vpmullw
mov
cmp
stos
sub
(bad)
into
mov
out
sbb
imul
lds
ins
xchg
inc
std
mov
int
test
sbb
push
rcr
out
jbe
xchg
push
inc
mov
jle
push
sbb
sub
aad
inc
sub
and
imul
mov
and
cdq
sbb
and
sbb
jo
inc
popa
jecxz
mov
dec
and
(bad)
addr16
mov
jnp
retf
cld
clc
cmps
inc
jmp
mov
rcr
push
and
(bad)
pop
mov
mov
in
jo
ret
(bad)
retf
sbb
sub
and
push
sub
int3
test
sbb
out
cmovae
test
mov
mov
(bad)
outs
sti
push
xchg
call
mov
daa
ret
lahf
inc
cmc
inc
adc
cmp
jb
js
sbb
in
adc
test
test
cmp
cmp
xor
add
repnz
xchg
and
(bad)
out
and
adc
es
cwde
icebp
inc
mov
inc
movs
stos
adc
jns
fld
adc
sub
movs
xor
mov
and
push
stos
jnp
and
(bad)
sbb
aam
sub
push
jp
mov
fsub
xchg
jo
push
mov
adc
pop
inc
pusha
add
int3
and
xor
fwait
mov
icebp
stos
rcr
xchg
add
mov
xchg
adc
icebp
xor
daa
lea
movs
call
out
mov
retf
add
in
es
or
jmp
out
sbb
ficom
mov
mov
outs
rep
or
pop
test
scas
mov
movs
push
lds
stos
xor
add
cmp
xchg
fs
icebp
add
lahf
(bad)
fnstenv
pop
inc
ins
ror
mov
mov
movs
mul
jbe
imul
in
mov
or
cmps
push
lods
stos
inc
out
ror
xor
aas
retf
and
add
xor
lods
jmp
mov
push
jmp
push
xor
or
jmp
sbb
push
and
mov
xchg
stc
lea
mov
popf
in
cmps
mov
pop
pop
enter
and
or
enter
xchg
out
jno
in
fcom
ror
scas
inc
xchg
fistp
cs
mov
push
fs
jne
imul
sub
daa
lea
imul
(bad)
sahf
aaa
ins
or
inc
pop
movs
mov
test
pop
dec
mov
mov
inc
dec
mov
nop
jbe
xchg
les
sar
bound
mov
jnp
add
ret
fwait
xor
push
jns
and
or
retf
mov
xchg
mov
xchg
inc
lock
mov
int
push
xchg
ss
retf
pop
arpl
inc
outs
dec
cs
xor
mov
jp
ja
in
shl
sbb
out
fcmovbe
pop
xor
lods
test
pop
jnp
sbb
and
mov
shl
mov
scas
sub
jp
dec
xchg
adc
jbe
imul
ror
cli
sbb
inc
jmp
test
test
call
mov
jl
into
sbb
mov
fidivr
mov
aam
cli
adc
loopne
pop
pop
sbb
nop
sbb
push
sbb
fdivr
sbb
or
cli
push
push
mov
clc
ficom
mov
leave
sahf
pushf
mov
addps
sbb
je
popa
fwait
scas
mov
sbb
cmp
pop
push
mov
adc
xchg
outs
cmp
dec
clc
jns
call
pop
sahf
sbb
push
cli
scas
ins
js
scas
fcmovu
sub
push
cmp
(bad)
neg
js
adc
loope
and
jno
out
(bad)
jb
(bad)
mov
sbb
out
inc
jp
mov
stos
mov
mov
test
pushf
mov
fld
int
mov
adc
push
or
xrstors
pop
push
fimul
lahf
push
mov
in
repnz
mov
xchg
aam
and
and
inc
gs
pop
mov
fsubr
sbb
addr16
push
cmp
mov
ficomp
fstp
inc
inc
cwde
sahf
repnz
jb
jle
fdivrp
test
sbb
lods
jp
mov
das
ret
(bad)
cli
fimul
dec
sub
dec
imul
fmul
sub
ins
dec
push
cmp
inc
iret
pop
gs
mov
xchg
sbb
and
and
movs
in
mov
dec
mov
inc
out
call
push
mov
(bad)
cmc
cmps
call
hlt
and
xchg
adc
(bad)
enter
lds
sub
in
or
sar
ret
adc
clc
retf
das
iret
test
ret
cdq
js
mov
jmp
scas
or
daa
xchg
xchg
cdq
ficomp
scas
xchg
les
in
cmps
jne
int3
daa
gs
scas
iret
sub
dec
imul
ins
cwde
and
shr
xchg
xor
dec
in
mov
mov
test
and
push
cmps
mov
inc
in
(bad)
dec
and
push
sub
scas
cld
iret
mov
pop
pop
test
dec
sbb
sub
test
stos
sbb
jnp
or
iret
arpl
test
popa
scas
add
mov
and
mov
push
mov
test
enter
enter
mov
jmp
push
mov
jl
iret
int3
bound
iret
imul
dec
sbb
jecxz
sub
leave
iret
mov
sbb
jmp
sub
mov
pop
jl
cmp
enter
inc
or
cmp
test
int
pop
ret
adc
fs
aad
cmp
fst
jns
mov
ja
jl
ins
or
popa
sbb
pop
pushf
dec
inc
aad
cmp
fmul
add
pop
push
js
push
fprem
add
ins
cmp
arpl
mov
sub
cld
jbe
add
mov
sbb
and
sbb
cmp
sbb
loope
imul
pop
jns
ins
cwde
or
or
imul
cmps
sub
cmp
popa
mov
pop
cdq
cmp
push
cmp
das
dec
adc
pop
cmp
xor
rcr
dec
mov
jl
pop
sub
cwde
mov
lods
fcom
dec
(bad)
repnz
pop
popa
call
push
pop
push
xor
popa
mov
ins
clc
pop
sub
aad
cmp
popa
in
mov
dec
sbb
pop
or
mov
fnstcw
cwde
mov
call
inc
(bad)
int3
dec
mov
cdq
pushf
int3
cmp
dec
sbb
sub
cdq
jns
enter
mov
jmp
shl
ins
or
(bad)
in
hlt
or
or
cdq
mov
mov
cld
cld
ja
idiv
ja
cmova
test
pcmpeqw
imul
fldcw
sti
push
imul
cmp
mov
mov
or
sbb
push
and
lods
jmp
fsubrp
fmul
test
fisub
sub
jmp
into
data16
mov
fisubr
test
lahf
xlat
dec
call
cmc
push
push
lods
mov
gs
cmp
dec
test
imul
dec
scas
loope
fisubr
stc
pusha
fimul
stc
bnd
sbb
in
sahf
in
sahf
aaa
mov
call
mov
or
dec
push
inc
ins
sahf
aaa
dec
stc
iret
sub
and
pop
xchg
cmp
ret
cs
sub
loope
and
push
jle
in
outs
fdiv
cwde
in
shr
adc
cdq
cs
fldcw
stc
sahf
dec
xchg
movs
and
loop
jp
cmp
and
hlt
test
dec
stc
mov
add
pop
mov
into
lods
fs
sbb
push
push
imul
push
jns
repnz
push
dec
in
loop
enter
loop
scas
or
fidiv
push
mov
and
and
jns
mov
(bad)
mov
in
xchg
inc
or
imul
xor
pop
loop
push
lods
sbb
ret
jmp
pop
mov
retf
movs
mov
push
repnz
sub
int
mov
mov
push
fs
outs
cmp
adc
and
cmp
jns
sub
sub
icebp
and
inc
or
movs
sub
std
mov
jne
sub
je
jb
(bad)
out
and
outs
in
xor
fs
clc
jns
mul
aaa
adc
stos
call
jb
cmp
sti
or
out
sub
out
test
cmps
cld
das
ins
out
imul
jg
jns
jmp
imul
test
out
test
inc
(bad)
jge
ror
jns
cmp
mov
retf
sbb
scas
pop
stos
and
fisubr
outs
push
retf
jne
add
scas
sub
sub
sbb
stos
adc
sbb
adc
mov
mov
bound
outs
jmp
mov
in
cmp
inc
pop
push
pop
retf
add
das
mov
push
fs
test
hlt
sbb
arpl
retf
pop
mov
push
lods
mov
fiadd
stc
jle
rcl
scas
pop
push
xor
out
cmp
fisttp
std
inc
popa
les
adc
or
bound
retf
add
jns
xor
adc
retf
inc
jecxz
retf
jge
sar
lds
shr
inc
(bad)
jns
cmp
push
stos
sub
stc
mov
mov
adc
out
add
fwait
jns
test
jg
stos
sbb
mov
out
jmp
loopne
adc
sbb
stos
xlat
fwait
xor
mov
mov
lods
sbb
aaa
pop
loopne
xchg
mov
std
mov
xchg
inc
loopne
mov
shl
(bad)
mov
pusha
pop
loop
inc
ja
call
cs
add
pusha
pop
out
push
data16
popf
loopne
jno
repnz
dec
loopne
mov
ins
jp
popf
loopne
cmps
popf
cli
stc
mov
test
jnp
push
or
jmp
cmp
dec
out
loope
scas
popf
push
ins
pop
popf
loopne
push
in
cli
mov
movs
jae
mov
sahf
inc
popf
retf
outs
dec
test
fwait
(bad)
xor
pop
dec
movs
outs
sahf
into
sub
fsubr
cwde
pop
mov
sub
sub
inc
dec
and
cmp
mov
cwde
shl
aaa
and
jae
xor
mov
loopne
mov
rcr
scas
aad
mov
int3
movq
dec
jbe
imul
jae
movsx
popf
pop
jl
pop
push
cwde
inc
sbb
bound
dec
clc
fnsave
mov
pop
or
dec
stos
test
cmp
adc
sbb
ret
cli
outs
(bad)
fdiv
cmp
mov
test
inc
xlat
cmp
sbb
push
fisub
rol
fdiv
cmp
pop
inc
neg
xor
sbb
fcomp
xor
jmp
cld
stos
adc
clc
fisubr
mov
cli
cmp
cld
mov
mov
cmp
call
mov
xchg
cmp
jns
push
ficom
push
cli
jl
pop
dec
js
sub
sbb
fidivr
xchg
cmps
dec
push
cmp
ja
add
cmp
aas
dec
cmp
mov
push
repz
je
(bad)
sar
cmp
mov
fidivr
retf
cld
retf
(bad)
sar
inc
sti
pop
push
cmp
fidivr
push
call
cmp
cmp
pop
imul
cli
cmp
jl
jl
out
cmp
scas
(bad)
sbb
jmp
push
int3
sbb
mov
mov
sbb
xor
jl
sub
(bad)
xchg
jl
mov
cmp
push
cli
mov
cmp
sub
push
add
lods
loop
mov
inc
fisubr
fst
xchg
ret
mov
push
cmp
cmp
pop
jmp
test
cdq
or
fimul
idiv
sti
cmp
sub
xchg
fst
pop
adc
cmp
jl
xor
cmp
jo
cld
mov
jo
jl
jl
jo
inc
push
(bad)
cwde
retf
(bad)
pop
or
lahf
sbb
ret
jo
fidiv
pop
inc
cmp
js
or
cs
cdq
arpl
sub
fnstcw
mov
inc
pop
sub
push
cmps
jle
add
int
inc
and
jns
leave
inc
cmp
jge
pop
push
dec
sub
cld
fucom
or
pusha
sbb
cli
int3
popf
(bad)
(bad)
cmp
cmp
sub
cli
int3
mov
mov
imul
sub
jmp
push
sti
sub
fstp
sar
pop
loope
loop
sub
lahf
fs
pop
stc
pop
xchg
push
dec
mov
mov
in
jbe
dec
pop
clc
mov
clc
js
mov
imul
mov
xchg
cwde
pop
jns
push
repnz
neg
inc
xor
push
add
add
sub
js
cdq
call
and
mov
sub
mov
nop
pop
mov
add
sub
sub
mov
call
mov
fdivr
or
sub
loopne
add
mov
mov
jmp
stos
pop
mov
jmp
add
add
or
aas
xchg
sub
jmp
mov
inc
sub
or
add
rcr
jns
lock
jmp
add
add
ror
jmp
push
jno
pop
inc
pop
or
push
clc
out
xchg
cld
sbb
push
sbb
rcl
clc
cdq
lods
xchg
cmp
push
shr
mov
inc
inc
or
in
and
call
(bad)
call
hlt
push
pop
cmp
call
pop
rol
push
adc
xchg
test
stos
mov
cmp
ds
sbb
rcl
pop
mov
or
or
lods
and
div
stos
sbb
int
inc
mov
adc
bound
sub
popf
movs
and
into
test
sbb
adc
jmp
inc
push
dec
add
gs
sbb
stos
or
scas
add
or
mov
dec
add
mov
ficom
popa
int
int
gs
fimul
movs
jo
pop
cmps
sahf
int
iret
jns
mov
cmp
jne
dec
ins
sahf
stc
inc
dec
pop
dec
repnz
xchg
xchg
int
mov
push
add
dec
mov
jo
dec
gs
and
sub
(bad)
pop
stc
or
cdq
sub
or
push
(bad)
pop
movs
sub
dec
jmp
int
mov
dec
sti
sub
jmp
cmp
or
shr
sub
sbb
and
push
loop
addr16
lea
retf
or
scas
pop
stos
fst
call
dec
fimul
mov
mov
sub
dec
lds
pop
inc
inc
sub
add
or
into
int
mov
push
imul
mov
push
sbb
or
sbb
or
mov
retf
repnz
or
dec
jmp
or
xor
sbb
lds
or
jmp
lea
int
or
cmps
(bad)
jb
and
sub
add
movs
repnz
stos
hlt
mov
mov
stc
mov
fidiv
jp
stos
cmp
sub
jno
adc
push
or
dec
out
sar
fcmovu
mov
imul
cld
leave
aaa
lahf
cmp
xor
cmp
bound
test
scas
sbb
repnz
fimul
fisubr
inc
cli
cmps
mov
sbb
jle
outs
push
add
mov
mov
adc
mov
mov
mov
xor
js
adc
cmp
fidiv
mov
hlt
fcmovu
fwait
cld
call
lahf
fstp
sbb
call
fnstcw
fistp
call
pop
pop
ficomp
pop
cmp
fdivr
popf
fiadd
push
mov
jle
xor
(bad)
cmp
sbb
jmp
cld
cmp
sbb
jmp
ja
cld
loop
fistp
js
jbe
sar
hlt
rcl
push
cld
fisubr
cmp
sbb
cmp
repnz
jns
mov
jp
cli
pop
int3
mov
es
neg
sahf
cli
sbb
cmp
call
test
add
pop
push
mov
aas
mov
cmp
sbb
sub
icebp
mov
mov
cld
pop
cmp
fidiv
sub
jns
ins
into
mov
cld
stc
imul
out
mov
jo
mov
scas
jmp
mov
pusha
cmp
arpl
and
popa
iret
arpl
sub
popa
add
enter
popa
data16
sub
adc
jle
rcl
add
popa
iret
arpl
add
movs
pop
or
push
and
ficom
jb
es
mov
and
push
inc
dec
inc
mov
retf
mov
lods
or
push
or
jmp
lods
push
or
push
mov
jmp
sub
stos
sub
mov
jmp
lods
push
or
stos
lods
dec
xchg
data16
dec
xchg
and
push
retf
inc
fcmovnu
mov
xor
push
test
add
mov
dec
test
mov
dec
adc
loop
xlat
lahf
ror
jmp
mov
aaa
add
xchg
xor
xor
pop
scas
out
cmp
mov
(bad)
ins
popf
mov
test
mov
push
mov
push
outs
aaa
mov
addr16
ja
push
jae
das
xchg
stos
fld
mov
mov
adc
and
cmp
mov
sub
cwde
call
int3
dec
mov
sbb
pop
lock
xchg
das
mov
xor
adc
in
mov
test
in
add
loop
push
fs
cmp
push
bound
inc
sub
jmp
push
push
add
cmp
inc
dec
push
popa
in
aad
xor
inc
dec
inc
sbb
pusha
jmp
cmp
pop
arpl
emms
repnz
or
inc
jo
js
lea
pop
lock
pop
sub
pop
or
imul
or
add
push
push
or
imul
outs
adc
pop
push
pop
rcr
or
inc
adc
or
dec
push
mov
out
movq
sub
dec
inc
sub
js
inc
and
dec
or
add
arpl
adc
dec
adc
pop
push
sub
pop
daa
inc
popa
int
dec
ins
jbe
and
mov
gs
cdq
sub
xor
dec
pop
aaa
pop
dec
lds
jo
sbb
inc
fbstp
scas
jge
jno
and
dec
aad
(bad)
in
xor
adc
and
mov
ret
jmp
mov
in
inc
scas
dec
mov
jp
loop
mov
popf
pop
popf
psubsb
jmp
fistp
or
push
pop
std
sub
xor
mov
mov
mov
scas
or
inc
pop
fdivr
push
scas
imul
push
fcom
hlt
ja
(bad)
fsubr
ss
xchg
mov
(bad)
cmp
mov
jne
dec
pop
hlt
jb
xor
cmp
lods
jle
repnz
adc
sar
jmp
mov
call
sbb
sbb
dec
ins
stos
ins
mov
adc
pop
pop
sub
(bad)
ds
and
cmc
cmp
xor
jl
jl
mul
adc
stc
pop
push
movs
rcl
lock
jp
call
fcomp
fdivr
fdivr
jp
call
lds
stos
push
rol
cmp
dec
leave
inc
xchg
mov
icebp
sub
pop
in
jmp
xlat
inc
and
in
ins
mov
mov
out
movs
sub
sub
movsx
jge
lods
jnp
xor
ja
push
test
fdivr
sbb
xchg
pop
in
jl
cmp
int3
xor
in
bound
jl
shl
sar
cld
xor
sub
dec
mov
jge
fistp
sar
cmp
cmp
stos
push
push
lods
xor
pop
into
sbb
mov
neg
ss
ins
sub
xor
imul
mov
mov
ss
mov
sbb
fcmovb
mov
ja
push
sbb
jae
xor
mov
mov
gs
aas
(bad)
push
(bad)
in
sti
cdq
cmp
jp
or
mov
push
jb
icebp
aam
loop
xor
(bad)
daa
lods
sbb
and
push
xor
iret
pop
icebp
xor
icebp
jne
ins
push
mov
jl
dec
push
push
cmc
pop
mov
sbb
lds
jbe
sub
push
mov
jmp
aam
aam
int
icebp
xor
shl
mov
scas
pop
out
rcl
xor
imul
out
daa
dec
shl
dec
ret
sti
cmp
pusha
into
repz
xor
inc
mov
je
pop
xor
jb
sub
pusha
mov
or
inc
fidiv
push
or
push
fld
arpl
adc
lock
movs
ja
mov
repz
xor
cmp
retf
imul
cmc
inc
mov
shl
leave
pop
(bad)
outs
shl
into
push
ret
data16
rcr
jbe
pop
retf
outs
in
xor
mov
in
div
ins
pop
mov
dec
aam
push
push
fbstp
ficom
stos
cmp
jne
and
outs
lds
scas
push
cmp
inc
sti
adc
and
adc
je
cmp
pop
rcl
inc
int
xlat
inc
shl
mov
mov
ret
pop
inc
stos
ins
idiv
jbe
lds
push
jecxz
in
sub
(bad)
lds
sbb
cmp
pop
inc
adc
pushf
repz
pop
adc
dec
push
inc
xor
call
and
xor
push
arpl
ins
popw
mov
pop
pop
push
js
ss
js
mov
mov
addr16
sbb
sbb
pusha
sbb
cwde
fwait
inc
pop
add
inc
cmp
sbb
rcl
sbb
ins
jno
pop
jg
rcr
cmp
pop
push
inc
popa
jge
enter
sti
jnp
inc
addr16
xor
add
int3
mov
sbb
push
xor
add
imul
jl
sub
js
test
mov
jg
pop
push
bound
leave
test
xchg
fbld
dec
inc
add
add
leave
es
ins
jae
pop
imul
mov
push
pop
daa
dec
sbb
jno
pop
cmps
les
jbe
ins
aaa
inc
sub
inc
das
xchg
cdq
in
mov
or
cmp
jp
cmp
(bad)
sub
jb
ds
movs
icebp
xchg
(bad)
sub
cmp
push
mov
fstp
push
jb
inc
pop
jb
cs
jp
adc
adc
fst
jnp
inc
sbb
xor
jns
mov
mov
imul
ins
dec
add
in
sub
and
xor
add
mov
or
inc
and
adc
cdq
test
push
dec
push
addr16
dec
cmp
test
int
ins
push
jno
jb
dec
ins
arpl
stc
(bad)
sub
or
jae
outs
pop
or
shl
clc
icebp
iret
adc
adc
inc
push
daa
push
or
jne
mov
adc
push
jo
push
js
sbb
xchg
xor
inc
push
push
dec
inc
push
jno
enter
in
adc
push
jg
pop
dec
adc
push
fsubrp
mov
or
js
jns
add
and
in
loopne
int
xor
sbb
push
jmp
cmps
cs
adc
jl
dec
(bad)
jmp
jmp
and
jg
call
popa
sbb
pop
movs
pop
push
fadd
sbb
ins
adc
sub
(bad)
(bad)
retf
xor
sub
adc
or
fdivr
aaa
jbe
cs
pop
jb
ja
xchg
test
shl
push
es
push
outs
sub
jmp
adc
cmp
cmp
adc
sub
push
push
inc
jl
adc
sub
scas
in
(bad)
and
mov
shr
in
rcl
das
mov
mov
repnz
scas
das
addr16
cmp
(bad)
mov
das
ins
jne
lea
xlat
cld
stc
stos
icebp
pop
push
ja
arpl
std
shl
gs
pop
stos
sub
call
aam
es
jnp
push
scas
sub
stos
mov
cmp
pcmpeqd
mov
jecxz
lock
div
dec
inc
inc
mov
add
(bad)
retf
lods
arpl
pusha
xor
lahf
xchg
xlat
(bad)
mov
ja
inc
xor
mov
out
not
stc
jge
je
pop
out
mov
int
test
mov
pop
aaa
jne
or
mov
dec
jne
scas
lahf
mov
(bad)
jecxz
mov
ins
gs
cmps
aad
hlt
scas
xor
das
jle
outs
sbb
loop
movs
mov
jbe
das
jns
movs
hlt
ret
out
cld
mov
dec
xor
mov
out
lock
cld
mov
std
stos
out
cli
rcl
cmp
push
das
mov
cmp
rcr
aas
inc
retf
adc
inc
ret
mov
pop
jmp
inc
sar
test
sbb
adc
sub
add
adc
rol
jbe
dec
fxch
cmp
ds
ret
inc
stos
dec
cmps
push
lahf
inc
rol
and
pop
inc
out
repnz
pop
lds
dec
xlat
mov
cmp
add
arpl
jnp
add
cmp
dec
fcomp
pop
fadd
test
cmp
push
nop
sbb
rcr
loope
fimul
jecxz
mov
enter
xlat
pop
rcl
dec
ret
shl
xor
inc
sahf
pop
mul
stos
mov
fild
sub
pop
lea
mov
mov
shl
fadd
add
push
xchg
movs
pop
lds
xlat
inc
rcr
test
mov
std
jle
test
mov
fwait
inc
mov
psubsb
cmps
and
inc
test
inc
lds
adc
popf
xor
add
jo
adc
jns
xor
pop
cmp
ficom
jp
sar
test
mov
mov
out
mov
test
call
stc
ret
jno
xchg
out
stc
mov
mov
test
inc
xlat
mov
mov
cmc
mov
std
mov
xor
lock
loope
stos
mov
jmp
and
mov
mov
inc
xchg
lock
ror
xor
push
aaa
inc
cli
mov
in
cmc
mov
(bad)
pushf
(bad)
xchg
push
das
pusha
(bad)
shl
fidiv
xor
xchg
sbb
mov
cli
std
icebp
loop
movs
mov
fs
shl
xchg
movs
aam
sbb
sub
xchg
mov
mov
fcom
or
xchg
in
cmps
cmc
out
cli
hlt
mov
adc
test
neg
push
stc
cwde
call
test
addr16
fmul
mov
jmp
jmp
mov
sub
mov
repnz
mov
(bad)
mov
and
adc
mov
loop
(bad)
repnz
xchg
fucom
andnps
(bad)
mov
xchg
out
hlt
dec
mov
div
int
cmp
or
mov
sub
ret
sar
popa
icebp
popf
test
xor
sti
pop
pop
mov
retf
aad
int
jmp
jmp
in
xchg
aas
test
or
cmp
mov
aas
fistp
mov
mov
popf
push
int3
rcl
pop
in
pusha
cdq
retf
pop
mov
cdq
mov
in
mov
in
inc
cmps
mov
xor
sub
out
fwait
mov
call
cld
lods
fsubr
mov
fadd
vpmacssdqh
clc
mov
lock
mov
adc
fst
lock
cld
xor
mov
mov
cwde
out
(bad)
aad
out
popa
fs
movs
jmp
push
pop
sub
popf
test
push
jb
xor
pop
pop
fs
cmc
dec
dec
inc
cmp
or
push
add
enter
(bad)
jb
or
ja
call
or
add
cs
cmps
mov
dec
add
adc
xor
shr
cmp
ss
push
adc
lods
es
push
push
pop
or
sub
push
aaa
imul
push
dec
push
sub
adc
jns
lahf
icebp
cs
dec
and
inc
inc
dec
inc
jg
mov
js
pop
push
bound
outs
push
push
push
jle
in
and
aas
dec
pop
pop
sub
push
jge
adc
ins
imul
jle
adc
das
pop
xor
data16
ins
dec
outs
xchg
jo
push
jne
add
js
pop
jo
cmps
imul
sbb
push
push
leave
cmps
xor
pop
or
sub
ret
call
cmp
sub
dec
pop
push
lea
push
inc
adc
xchg
push
inc
adc
jbe
xor
sbb
and
pop
or
js
retf
adc
das
inc
cmp
arpl
int
jmp
movs
and
xchg
and
pop
js
cdq
ja
push
mov
sahf
add
add
mov
leave
sbb
add
loop
xchg
jnp
outs
cli
add
nop
popa
(bad)
jo
jno
push
mov
mov
mov
inc
cs
mov
and
xchg
add
cmp
sub
sub
sub
mov
adc
jp
(bad)
and
sub
pavgb
cli
rcl
or
mov
movs
xor
sub
cmp
add
xor
jp
jp
and
sub
sub
(bad)
pop
(bad)
ins
stos
outs
mov
popa
les
fwait
jae
add
and
movs
or
xor
or
jmp
xor
ins
jmp
cmp
repz
mov
and
jecxz
add
jae
es
ss
xor
add
les
loop
xchg
sbb
or
mov
xchg
pop
call
or
xchg
sbb
ins
test
mov
aaa
mov
jb
jnp
jo
and
ja
ins
push
push
je
pop
cmp
and
je
jbe
arpl
das
push
add
dec
push
sbb
pop
adc
dec
adc
jae
jae
inc
cmovb
dec
cmp
outs
adc
inc
xor
sbb
inc
sub
add
jo
jno
or
dec
add
dec
and
pop
cmp
dec
cmovl
adc
ds
inc
fs
outs
cs
ins
sub
push
push
dec
push
or
imul
ss
push
pop
adc
dec
das
jne
push
dec
jbe
pop
or
and
sbb
sbb
jnp
inc
add
sbb
sub
pop
push
push
jo
add
dec
push
jb
inc
inc
outs
and
push
punpckhdq
aaa
dec
cmp
and
addr16
jbe
push
pop
ins
adc
dec
push
push
imul
pop
sbb
outs
dec
inc
add
push
outs
sbb
dec
dec
jnp
bound
mov
dec
push
or
inc
or
or
cmp
jo
jns
sbb
dec
sub
push
jo
sbb
bound
cmp
push
xor
outs
ds
xor
xor
adc
sbb
sbb
xor
add
pop
sub
or
add
adc
jb
push
sub
push
push
cmp
dec
dec
js
dec
dec
pusha
sbb
je
imul
ds
loop
add
sub
inc
sbb
add
add
or
push
dec
jo
pop
inc
and
inc
loopne
sub
and
sub
push
or
inc
es
dec
sbb
pop
and
push
pop
adc
xor
cmp
push
push
imul
and
add
in
inc
inc
add
push
pop
sub
sub
sbb
and
push
xor
add
xor
cmp
pop
push
mov
dec
pop
daa
inc
or
cmp
xor
jp
add
dec
cs
adc
add
sbb
sbb
xor
jnp
aas
inc
mov
and
or
dec
cmp
sbb
inc
cmps
cmp
dec
xor
pop
aaa
or
jmp
and
or
aas
cmp
pop
adc
adc
add
daa
sbb
add
push
push
sub
sub
or
fild
sbb
push
das
sbb
adc
xor
sub
and
sub
adc
pop
push
sbb
sbb
sbb
mov
push
sub
push
arpl
inc
outs
ja
inc
out
and
daa
stos
lock
call
clc
push
mov
sahf
in
ror
out
jne
nop
mov
xchg
test
xchg
hlt
mov
(bad)
ffree
lahf
in
mov
mov
test
in
lock
mov
jne
xchg
in
mov
fwait
lahf
xchg
lahf
mov
mov
xchg
(bad)
icebp
or
pop
loope
xchg
mov
call
xchg
mov
(bad)
cwde
push
mov
mov
xchg
les
cwde
mov
fidiv
lods
cdq
jp
xchg
movs
lea
mov
sahf
mov
out
dec
(bad)
cmps
fwait
mov
mov
ret
mov
adc
push
clc
aaa
test
popf
xchg
pop
daa
movs
aam
mov
inc
mov
rcr
xchg
out
nop
mov
and
cmp
jmp
pushf
fwait
xchg
sub
cwde
mov
push
cmp
(bad)
jo
repz
cmps
xchg
loop
sar
mov
ja
push
jle
in
xchg
mov
popa
xchg
adc
add
xor
ss
aam
cli
jne
add
mov
add
dec
repz
push
mov
cmc
push
sbb
daa
push
data16
and
ja
sub
imul
inc
fadd
jbe
shl
add
stos
sub
je
push
mov
mov
push
hlt
(bad)
popa
jl
adc
sbb
mov
in
daa
(bad)
(bad)
xchg
xor
cmc
add
add
cmps
xchg
mov
inc
sbb
loop
int3
ins
cmps
cmps
cmps
in
test
xor
add
lahf
ss
jecxz
(bad)
mov
and
inc
lds
int
outs
xor
mov
add
push
out
mov
adc
xchg
and
push
lds
int3
and
xor
out
xor
mov
(bad)
push
mov
int3
inc
out
les
mov
cmc
popa
adc
xor
cmc
push
(bad)
mov
retf
mov
sar
xchg
inc
mov
mov
lds
into
and
add
mov
xor
fsubr
pop
(bad)
test
lods
dec
jb
cwde
fnstcw
lahf
(bad)
mov
movs
dec
jbe
stos
jp
dec
xchg
ins
aaa
push
rcr
mov
mov
xchg
or
xchg
push
adc
jecxz
aam
mov
add
mov
pop
dec
test
repz
adc
movs
retf
xchg
pop
cmp
shl
xchg
mov
stos
and
jmp
(bad)
mov
add
inc
std
push
in
test
pop
xor
mov
pushf
mov
xchg
gs
inc
mov
mov
fdiv
cmps
jmp
inc
call
in
mov
cmps
dec
cld
popa
ret
enter
out
retf
rcl
xchg
(bad)
shr
std
mov
ret
lods
cld
cmps
aad
fwait
out
bound
lds
or
mov
sub
lds
mov
dec
push
out
mov
pop
mov
retf
mov
lods
xchg
clc
ror
cmps
ins
pushf
or
loop
(bad)
sbb
mov
mov
test
daa
out
aaa
xchg
mov
sub
push
push
xchg
jbe
in
mov
leave
xlat
mov
aas
mov
clc
test
test
out
push
cld
push
xchg
add
xchg
push
inc
out
push
out
xor
mov
loop
test
je
out
out
xchg
pushf
gs
pushf
xchg
mov
push
imul
cmp
jns
les
mov
mov
icebp
inc
in
fld
jmp
js
sub
loopne
loope
dec
daa
lahf
movs
sbb
xor
outs
hlt
daa
adc
addr16
lods
mov
mov
rcr
and
sbb
std
xor
jmp
push
sbb
int3
xor
or
mov
hlt
fsub
and
out
(bad)
fs
push
int3
popf
(bad)
sub
int
fisttp
xchg
nop
xchg
scas
(bad)
mov
ror
std
cmps
jg
sub
js
std
xchg
or
in
in
mov
dec
in
adc
pop
movs
sahf
cmc
movs
mov
mov
or
ret
dec
mov
mov
in
cli
mov
test
ror
test
xor
cs
(bad)
jle
out
add
loopne
scas
loope
or
jg
faddp
adc
xchg
fcomp
push
and
out
add
sub
and
test
add
mov
mov
mov
lods
sti
adc
mov
sub
dec
jb
push
pop
push
stos
arpl
push
jmp
aaa
sub
adc
inc
imul
mov
loopne
pop
or
sar
push
outs
adc
daa
dec
and
into
xlat
cmp
fimul
jns
dec
addr16
cdq
mov
inc
adc
shr
add
xor
sub
push
in
shr
pop
(bad)
cmc
clc
xor
into
(bad)
mov
sar
stc
jno
push
outs
adc
mov
add
push
and
les
mov
sbb
clc
or
stc
js
daa
push
fchs
cwde
lea
jmp
inc
push
sub
jmp
adc
add
sbb
mov
jns
js
mov
shr
cmp
jle
movs
sahf
add
push
jno
call
cmp
pop
dec
add
push
push
enter
daa
mov
inc
sar
adc
jno
xchg
adc
or
dec
xor
and
aam
add
aad
ror
pop
cmp
aam
push
push
daa
cs
outs
and
or
push
fadd
add
popf
pop
sub
outs
cwde
aad
cmps
add
sub
inc
test
add
cli
out
mov
xlat
cmp
in
add
mov
mov
mov
mov
add
loopne
sbb
push
test
jp
xchg
icebp
dec
or
adc
cli
pop
shl
les
nop
jge
shl
icebp
push
in
daa
loop
mov
(bad)
aad
cmc
(bad)
aad
xchg
loopne
xchg
out
retf
or
scas
sar
popf
sub
pop
xor
add
loopne
push
xchg
add
loope
mov
sbb
mov
ficomp
xchg
pop
ret
popa
mov
xchg
xor
sysexit
test
adc
xchg
and
xchg
push
movs
les
(bad)
inc
mul
dec
loope
fs
push
jae
pop
jecxz
mov
push
loopne
shl
shl
cmc
cmp
neg
pop
out
sub
lahf
sub
pop
test
sbb
sbb
(bad)
xchg
jp
push
and
(bad)
xor
imul
adc
and
adc
shr
mov
cs
(bad)
mov
add
xchg
mov
jge
xor
jno
mov
mov
loopne
ins
sbb
mov
and
adc
or
sub
jno
(bad)
dec
test
mov
xchg
xor
sbb
or
fisub
dec
stc
cmp
mov
mov
mov
jns
les
pop
pop
mov
pop
adc
mov
ror
shr
cmp
sbb
mov
add
or
mov
retf
aas
xchg
add
cmp
jns
pop
sbb
mov
push
sub
lods
(bad)
lock
cmc
jno
mov
jns
sub
int3
in
mov
cmp
dec
mov
sub
(bad)
fild
lahf
or
mov
dec
movs
sbb
dec
push
aaa
aaa
dec
les
mov
pop
bound
daa
mov
cs
cmp
sbb
push
mov
add
imul
stos
or
dec
mov
jge
fist
cmps
xor
enter
dec
jmp
xor
sahf
and
cmp
loope
sbb
popa
sub
pop
fsubr
xor
cmp
adc
sub
cmp
mov
mov
aaa
cmp
cmp
xor
mov
cmp
pop
and
(bad)
and
cmp
add
xor
pop
push
mov
call
jle
or
inc
cmp
and
cmp
(bad)
inc
scas
adc
mov
xor
push
and
cmp
hlt
mov
(bad)
sbb
adc
inc
mov
add
add
fstp
jle
ja
aad
outs
jmp
jl
sbb
inc
out
mov
das
add
pop
imul
mov
fs
push
call
and
cmps
mov
ss
loope
mov
les
dec
and
shr
pushf
add
adc
add
push
mov
into
pop
inc
cmp
movs
jge
push
sub
jg
call
outs
inc
jge
cmps
sbb
sub
add
leave
lods
push
xchg
jnp
xor
pop
(bad)
into
push
lea
enter
xor
sti
lock
mov
sbb
mov
shl
jne
cmc
xchg
(bad)
in
add
test
cmc
sub
add
je
mov
mov
stc
(bad)
mov
sub
and
addr16
mov
add
sbb
rcr
push
and
out
jl
pop
ret
or
mov
lea
cmp
pop
in
pop
push
xchg
inc
mov
fmul
push
pop
cld
scas
jbe
lods
nop
mov
mov
cmp
xor
and
or
les
xchg
arpl
jp
lahf
mov
ficomp
movs
in
inc
xchg
(bad)
adc
je
cmps
cmp
mov
jne
stos
std
mov
xchg
movs
push
and
movs
int
add
push
xchg
arpl
in
sub
cmp
mov
inc
jns
sar
jae
shr
xchg
inc
push
add
push
rcr
fldcw
leave
repnz
mov
jnp
add
mov
scas
shl
dec
pop
adc
aaa
jo
xchg
push
sub
fstp
shr
(bad)
jo
push
inc
in
(bad)
pop
mov
adc
cli
push
aad
pop
in
mov
xor
jne
ins
xchg
jo
sub
lea
xchg
add
inc
or
jg
push
std
fisubr
outs
mov
lahf
aas
push
inc
sbb
shr
adc
and
rcl
sar
cmp
lock
loope
or
in
push
mov
add
div
pop
dec
mov
lods
xchg
pop
fisub
sbb
jae
inc
jecxz
mov
xor
inc
xlat
inc
jae
nop
push
shl
popf
xor
loop
fistp
add
aam
std
add
inc
and
in
int
dec
rol
lods
push
dec
pop
sar
push
shl
lea
mov
mov
jb
ret
add
aam
dec
mov
(bad)
dec
shl
iret
(bad)
(bad)
xor
imul
pop
pushf
mov
or
pop
hlt
call
mov
div
cli
or
ror
adc
out
sub
sub
cld
inc
xchg
mov
xchg
jmp
clc
sbb
mov
mov
xor
sub
cmp
push
retf
mov
xor
or
cli
sub
sub
cmp
ss
mov
mov
mov
daa
dec
sti
call
sbb
es
shr
fnsave
clc
mov
int3
mov
cmp
mov
jecxz
adc
pop
mov
jbe
jl
mov
repz
ret
clc
leave
pop
sbb
cwde
repnz
int
sbb
sbb
push
test
sbb
xchg
xor
clc
dec
ds
sbb
cmp
pop
gs
fnstenv
clc
std
pop
jle
enter
sbb
mov
pop
cmp
jl
cmovl
jae
sahf
mov
push
push
push
xor
scas
jmp
push
push
add
repz
mov
mov
and
loop
xchg
fisub
or
cmps
or
sbb
jo
adc
jmp
xor
sub
jbe
jmp
lea
xor
shr
lock
bound
sub
mov
cmp
mov
lahf
fs
add
and
loopne
js
imul
ret
or
adc
mov
xchg
jae
add
sar
xor
bnd
shr
jbe
xchg
sbb
sbb
add
jns
dec
jbe
adc
sbb
mov
mov
sbb
mov
dec
xchg
repnz
sbb
arpl
data16
out
not
div
loop
xchg
fsub
mov
xchg
ror
mov
fst
pop
and
jb
loop
adc
sbb
sbb
sub
jae
pop
and
pop
inc
hlt
or
js
push
jb
jecxz
loopne
jb
std
inc
jge
out
repz
jns
sbb
nop
pusha
leave
mul
leave
inc
imul
std
sbb
xor
in
shl
repnz
std
adc
jge
pop
jb
mov
repz
adc
sar
mov
ret
clc
pop
mov
cmc
and
test
repnz
(bad)
cdq
call
push
and
mov
mov
cpuid
jns
dec
jo
push
pop
cmp
mov
cdq
mov
sbb
je
movs
xor
lods
adc
nop
test
(bad)
test
add
fsub
mov
mov
or
stc
mov
jns
adc
cmp
repnz
jo
push
mov
sub
add
xchg
mov
adc
jb
mov
or
mov
loopne
or
out
xchg
pop
fprem
stos
js
xchg
or
dec
jge
stc
inc
inc
sub
aad
push
fidiv
rol
push
mov
mov
cwde
lods
mov
outs
scas
pop
dec
push
dec
pop
aad
jne
leave
shl
push
jae
dec
adc
inc
cmp
mov
xchg
xchg
movs
data16
cli
addr16
enter
outs
cmp
push
or
mov
xchg
inc
jns
sub
cdq
and
aas
xlat
cmps
shr
out
add
outs
in
xchg
pop
xchg
mov
jae
push
and
xor
push
icebp
inc
fsub
in
(bad)
int
cmps
jg
fstp
inc
mov
mov
add
adc
sbb
icebp
inc
scas
ja
adc
cmp
xor
push
and
fist
push
push
sahf
shl
(bad)
mov
ins
pop
sub
jb
call
inc
test
ja
scas
addr16
mov
fdivr
fidivr
rcr
push
int3
or
loopne
rcl
adc
and
xchg
jmp
xchg
fstp
out
push
push
xchg
out
sub
xchg
mov
mov
nop
and
push
jecxz
xor
pop
rol
xchg
mov
xchg
adc
and
ret
mov
adc
icebp
lods
pop
jl
cmp
stc
(bad)
add
sbb
repz
mov
nop
mov
xor
out
(bad)
repnz
mov
loope
xor
xchg
mov
and
in
xor
xchg
loop
push
(bad)
or
add
daa
xor
test
mov
and
sbb
mov
cld
pop
fs
clc
cmps
outs
mov
xchg
das
mov
nop
mov
push
adc
jno
adc
rcl
mov
mov
jge
and
cld
ja
and
jno
and
mov
cs
outs
sub
jg
adc
mov
test
shr
and
mov
jnp
sub
pop
rcl
int3
and
(bad)
jbe
mov
in
adc
or
sbb
rol
adc
je
and
cmp
test
sub
int3
mov
mov
fist
jge
sub
stos
outs
push
fild
xchg
xor
inc
test
loopne
out
stos
xchg
mov
cmc
cmp
mov
add
mov
cmp
mov
outs
add
dec
ins
jnp
loopne
clc
test
(bad)
addr16
dec
and
ret
sub
icebp
inc
(bad)
jp
or
sbb
ins
dec
call
inc
int3
imul
sbb
push
lods
fnstcw
sbb
aam
test
jne
adc
push
jno
inc
fnstenv
lahf
fnstenv
pop
and
je
fsub
stos
ret
push
jne
add
shr
mov
cmp
push
jne
mov
nop
iret
mov
popa
xchg
into
leave
mov
mov
jecxz
push
int
xor
into
push
or
pop
fisttp
add
aas
cmp
sahf
mov
not
push
fisub
sbb
fwait
xchg
call
push
neg
test
sbb
inc
fsubrp
cmp
shr
aad
add
test
jmp
push
pop
(bad)
xlat
jmp
add
icebp
fimul
out
call
and
ins
sbb
movs
xor
add
ffreep
out
out
sbb
xor
adc
and
aas
mov
xchg
out
rol
xor
xor
jae
(bad)
mov
icebp
mov
push
icebp
(bad)
movs
cs
cmp
pusha
push
jne
mov
inc
retf
fidivr
shr
push
xor
mov
aam
inc
mov
xchg
mov
outs
mov
dec
out
cmp
add
out
imul
xchg
cli
sbb
push
adc
movs
out
mov
and
mov
loop
adc
sti
in
sahf
stos
jg
repz
sbb
loopne
test
adc
lock
out
push
xor
pop
retf
mov
push
jmp
(bad)
adc
sar
sbb
xchg
jo
stos
mov
pop
loopne
sub
dec
adc
js
cmp
push
push
jge
xchg
mov
push
jnp
das
xor
dec
test
jge
adc
jbe
pop
push
ins
aam
xchg
pop
or
movs
data16
cmp
inc
je
stos
push
retf
std
inc
sub
inc
bound
scas
xchg
push
ins
sbb
inc
mov
fsubr
sub
mov
cmp
pop
cwde
lea
push
test
xchg
or
dec
mov
jns
pop
inc
adc
xchg
cmps
or
stc
loope
sti
fisubr
test
xchg
ins
mov
sbb
jo
dec
fsubr
imul
adc
jge
push
lahf
test
adc
push
rcr
jb
inc
pushf
push
lahf
xor
inc
lods
lea
sahf
arpl
jno
imul
cmp
int
ror
xchg
pop
imul
adc
adc
lods
mov
cmp
cs
inc
xchg
shrd
test
je
jp
cmp
out
mov
jg
std
cmc
jnp
lea
mov
push
gs
je
adc
xchg
gs
or
sbb
adc
out
aad
ins
adc
mov
imul
xchg
(bad)
shl
mov
adc
xor
add
inc
nop
add
(bad)
push
bound
not
clc
mov
add
adc
mov
inc
adc
pusha
adc
adc
loopne
xchg
jle
mov
jmp
je
push
mov
ds
outs
xchg
xchg
nop
je
or
loopne
movs
ja
xlat
add
xor
and
and
and
and
or
add
push
movs
adc
arpl
and
or
jg
push
push
xchg
fcom
sub
xor
and
data16
inc
mov
dec
add
in
aaa
movs
inc
mov
ret
jns
out
gs
xchg
movs
push
mov
push
and
push
xchg
inc
sti
push
into
loop
js
or
and
ret
fcomip
mov
xor
inc
movs
pop
mul
out
ja
adc
in
stos
sub
movs
add
xchg
mov
jbe
data16
sbb
frstor
ss
push
das
push
sub
mov
inc
push
adc
sti
imul
mov
imul
sbb
xchg
pop
shr
pusha
add
pop
push
inc
sub
sub
add
inc
dec
adc
xor
and
adc
push
dec
loope
push
add
and
inc
xor
xor
push
sub
sbb
push
inc
mov
rcr
outs
repz
xlat
mov
xor
je
les
xchg
xor
mov
mov
push
cmp
xchg
(bad)
movs
inc
push
call
add
arpl
outs
das
imul
test
(bad)
xor
(bad)
dec
mov
pop
mov
(bad)
stc
stos
xor
push
push
in
mov
sbb
cmps
clc
fcom
push
pop
inc
outs
inc
inc
and
jge
sbb
cmp
mov
push
jne
test
movs
scas
cdq
(bad)
adc
in
arpl
cmps
dec
dec
in
push
or
jle
jo
test
xchg
fisub
push
into
shr
je
cdq
imul
loopne
or
inc
outs
shl
xchg
outs
sub
add
bound
cs
sbb
dec
icebp
dec
push
test
mov
xlat
nop
adc
and
mov
rcl
bound
stc
jmp
mov
shl
aad
stos
shl
and
sub
movs
sub
jmp
lods
lods
cmp
push
jns
and
adc
pop
mov
repnz
test
push
pop
test
jg
(bad)
pop
sub
call
and
mov
(bad)
ds
sub
add
gs
push
push
jecxz
adc
in
leave
cmc
jne
mov
aad
or
inc
dec
sub
mov
and
inc
outs
dec
dec
das
jno
repnz
mov
lods
jmp
pop
outs
cmp
mov
loop
sahf
mov
sub
stos
dec
pop
or
sub
stos
retf
stos
retf
sub
dec
sub
dec
test
scas
iret
scas
int3
lods
int
inc
and
inc
es
movs
les
cs
cs
sub
shl
and
dec
sub
iret
scas
iret
lods
int3
lods
int
dec
and
inc
and
(bad)
stos
leave
test
das
dec
cs
sub
sub
mov
int
shl
es
es
and
lds
sub
dec
sub
retf
test
iret
and
inc
and
lds
sub
dec
sub
dec
scas
iret
scas
iret
scas
int3
lods
int
dec
sub
and
inc
mov
shl
daa
inc
es
movs
lds
sub
dec
sub
dec
test
iret
scas
iret
sub
dec
sub
int
int
int
inc
and
inc
and
shl
daa
inc
es
and
sub
into
scas
into
scas
into
scas
into
das
dec
das
dec
das
dec
cs
scas
int3
lods
int3
lods
int3
lods
int
dec
sub
and
inc
pop
aas
call
(bad)
nop
nop
dec
push
pop
in
mov
cmc
bound
cmps
cmp
sbb
fisub
dec
push
pop
test
pop
jne
hlt
stos
dec
stos
inc
or
xchg
cmp
or
aad
aas
push
das
mov
xor
cdq
das
cmp
mov
es
mov
out
mov
push
jb
call
jns
retf
xchg
push
movs
sti
sub
hlt
sub
fidiv
out
add
sub
mov
and
dec
cdq
fmul
pop
jle
cdq
mov
stos
sti
call
cmp
sbb
inc
inc
mov
out
imul
mov
fld
or
stc
sbb
cmps
aad
and
mov
or
stos
jp
jle
sub
push
jns
call
nop
iret
(bad)
jno
jg
xor
scas
mov
cmps
stos
or
in
movs
retf
ss
push
shl
aad
and
fwait
mov
jge
mov
shl
and
repnz
(bad)
in
mov
jp
fcomp
add
xchg
fsubr
and
rol
lds
mov
lods
mov
aas
jecxz
stos
data16
(bad)
fnstcw
mov
push
mov
push
xor
out
xor
mov
mov
dec
pop
mov
adc
icebp
aam
fsubr
aam
mov
add
stc
xchg
retf
or
dec
stos
or
stc
imul
cmovg
sub
inc
cmc
push
test
sbb
movs
int3
(bad)
jmp
sub
test
xchg
mov
aam
(bad)
push
clc
js
or
jmp
and
xchg
add
shr
lock
jns
(bad)
jecxz
mov
aaa
and
inc
pop
mov
xchg
clc
fwait
out
mov
pop
cmp
iret
repz
mov
in
sub
cmps
call
mov
pop
gs
mov
imul
push
call
jg
sahf
jmp
pusha
test
jne
and
cmp
push
stc
and
in
mov
jmp
ds
fcomp
out
xchg
fnstenv
mov
mov
jno
adc
push
push
iret
xchg
int
test
mov
push
cmps
adc
and
and
es
out
xchg
pop
push
push
jae
(bad)
push
push
jnp
bts
call
movs
scas
stos
xlat
aas
cmp
data16
xchg
sub
cmp
sub
test
mov
mov
cmp
add
mov
jae
test
xor
xchg
pop
in
cwde
push
and
movs
imul
add
and
in
lods
or
mov
mov
push
adc
loopne
popf
sub
mov
imul
mov
push
imul
sub
push
sbb
in
retf
sbb
sub
mov
jne
test
arpl
gs
sbb
and
mov
xchg
test
mov
gs
mov
mov
jne
push
add
or
jmp
fs
sti
ins
mov
mov
movs
cmp
lds
add
mov
mov
push
fwait
je
xchg
sbb
add
inc
xor
xchg
and
aas
loope
cmp
mov
rcl
loopne
out
cdq
cmp
rol
sub
not
daa
div
mov
inc
add
pop
or
data16
movs
add
stos
inc
jns
lods
dec
xchg
add
mov
xlat
mov
rcl
pusha
clc
jae
jbe
es
mov
sub
popf
and
movs
rcl
push
pop
jae
cli
or
sar
popa
pop
cmps
bound
and
push
lods
(bad)
aaa
imul
retf
pop
cmps
movs
adc
addr16
es
inc
xor
imul
fnstcw
je
push
(bad)
cmps
pop
mov
inc
sub
pop
out
(bad)
lds
movs
ror
pusha
cdq
fbstp
test
fmul
movs
xor
movs
push
movs
dec
ss
outs
xchg
ret
sbb
out
inc
xchg
jno
pop
inc
xchg
cmp
sahf
fwait
xchg
cmp
lea
mov
mov
je
mov
add
lea
add
push
mov
mov
pop
mov
movzx
test
mov
mov
je
and
or
mov
movzx
mov
cmp
jg
je
dec
dec
cmp
ja
jmp
add
add
mov
mov
jmp
add
add
mov
jmp
mov
add
mov
add
mov
mov
mov
mov
jmp
add
mov
fld
add
fstp
jmp
add
mov
fld
add
fstp
jmp
add
add
mov
jmp
add
add
mov
push
mov
call
cmp
mov
je
test
jne
call
add
add
mov
neg
sbb
mov
jmp
add
mov
add
mov
movs
movs
movs
movs
mov
push
pop
jmp
sub
cmp
ja
jmp
add
add
mov
mov
neg
sbb
push
and
mov
push
push
lea
mov
call
push
push
lea
mov
call
cmp
mov
je
push
call
pop
jmp
add
add
mov
mov
sub
sub
inc
mov
cmp
mov
jne
mov
xor
lea
push
xor
call
cmp
je
lea
push
lea
push
push
call
mov
mov
or
mov
add
lea
push
lea
push
push
lea
push
push
push
push
push
push
call
lea
mov
call
mov
cmp
je
mov
shl
lea
jmp
cmp
jne
push
call
sub
inc
cmp
jne
push
call
cmp
pop
mov
jge
lea
push
call
cmp
je
push
call
cmp
je
lea
push
call
push
call
pop
mov
cmp
mov
je
push
mov
push
push
call
mov
push
mov
mov
call
test
je
push
lea
call
push
mov
call
push
call
test
je
push
lea
call
push
call
push
call
test
je
push
lea
call
push
call
mov
mov
mov
mov
push
lea
push
mov
call
mov
cmp
je
cmp
je
push
push
lea
push
push
call
mov
cmp
jge
lea
push
call
push
jmp
movzx
add
cmp
ja
jmp
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
fld
mov
fstp
jmp
fld
mov
fstp
jmp
push
push
call
push
call
jmp
mov
xor
cmp
setne
mov
jmp
mov
lea
movs
movs
movs
movs
xor
jmp
mov
mov
mov
lea
mov
call
or
cmp
je
push
call
pop
call
ret
mov
xor
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
stos
inc
add
test
inc
add
stos
inc
add
stos
inc
add
test
inc
add
test
inc
add
test
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
test
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
lods
inc
add
inc
add
lods
inc
add
inc
add
lods
inc
add
inc
add
lods
inc
add
inc
add
inc
add
add
add
inc
add
inc
add
inc
add
stos
inc
add
stos
inc
add
lods
inc
add
inc
add
lods
inc
add
lods
inc
add
mov
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
mov
pop
mov
pop
ret
call
call
call
cmp
jne
push
call
mov
test
je
mov
test
je
mov
push
call
and
call
lea
cmp
jne
call
call
and
pop
ret
cmp
je
push
call
jmp
cmp
push
mov
jne
call
inc
mov
call
sub
cmp
jbe
call
call
mov
pop
ret
push
mov
call
call
mov
call
xor
cmp
je
or
jmp
push
call
cmp
jge
push
call
xor
jmp
mov
call
mov
cmp
mov
jne
push
call
pop
mov
mov
cmp
mov
je
call
jmp
xor
or
mov
call
mov
call
xor
inc
call
ret
mov
ret
push
call
test
pop
je
mov
and
ret
xor
ret
mov
test
je
and
mov
ret
push
mov
call
call
mov
cmp
jne
cmp
je
push
call
push
mov
call
pop
mov
mov
and
test
je
push
push
push
push
push
call
jmp
xor
or
push
mov
call
mov
call
ret
push
call
mov
jmp
push
call
mov
xor
test
je
add
jmp
ret
push
mov
push
mov
test
je
push
call
test
je
push
lea
call
and
mov
pop
pop
ret
cmp
jne
xor
ret
call
push
call
ret
push
mov
mov
call
test
je
push
call
pop
mov
pop
ret
movzx
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
push
push
push
call
mov
push
call
mov
add
mov
test
je
mov
lea
cmp
jb
mov
mov
mov
push
push
push
push
push
push
push
push
push
push
push
push
mov
call
mov
push
push
call
xor
pop
pop
ret
mov
mov
push
push
call
xor
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
call
cmp
je
test
je
push
call
mov
mov
not
mov
jmp
mov
mov
mov
xor
push
push
push
push
push
push
mov
call
cmp
je
test
jne
mov
mov
lea
not
push
mov
call
mov
mov
cmp
je
test
je
not
mov
mov
call
mov
pop
add
ret
mov
call
mov
mov
xor
mov
xor
mov
mov
xor
cmp
je
test
jne
mov
mov
not
mov
call
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
mov
mov
mov
push
call
mov
xor
mov
sub
test
je
push
push
push
mov
push
call
add
mov
and
test
jne
mov
sub
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
add
mov
mov
mov
mov
mov
add
mov
mov
xor
mov
add
mov
mov
mov
add
mov
cmp
jle
xor
jmp
mov
push
mov
push
mov
push
mov
push
mov
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
push
push
push
push
push
call
mov
or
mov
mov
or
mov
mov
or
mov
push
push
push
call
push
push
push
call
push
push
push
call
push
push
push
push
call
mov
or
mov
mov
or
mov
mov
or
mov
push
call
mov
or
mov
push
call
mov
or
mov
call
mov
or
mov
push
push
call
mov
or
mov
mov
or
mov
push
push
call
mov
or
mov
mov
push
call
mov
or
mov
mov
or
mov
mov
or
mov
mov
push
call
mov
or
mov
mov
or
mov
push
call
mov
or
mov
mov
push
call
mov
or
mov
lea
push
push
call
mov
or
mov
mov
push
push
mov
push
call
mov
or
mov
push
mov
push
call
mov
or
mov
push
push
push
push
push
push
push
call
mov
or
mov
push
call
mov
or
mov
mov
or
mov
mov
push
mov
push
call
mov
or
mov
push
mov
push
call
mov
or
mov
push
push
push
push
push
push
call
mov
or
mov
push
call
mov
or
mov
push
call
mov
or
mov
push
push
call
mov
or
mov
push
push
push
push
push
call
mov
or
mov
push
call
mov
or
mov
push
push
push
push
push
push
push
push
call
mov
or
mov
push
call
mov
or
mov
push
call
mov
or
mov
mov
or
mov
push
call
mov
or
mov
mov
or
mov
lea
push
push
lea
push
push
lea
push
push
mov
push
push
call
mov
or
mov
push
push
push
push
mov
push
push
push
push
push
call
mov
or
mov
mov
or
mov
mov
or
mov
mov
push
push
call
mov
or
mov
mov
or
mov
mov
or
mov
push
push
push
push
call
push
push
push
call
add
mov
push
push
push
call
mov
push
mov
push
push
call
mov
or
mov
push
push
call
mov
or
mov
mov
or
mov
mov
or
mov
push
mov
push
mov
push
push
call
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
push
push
call
mov
or
mov
call
mov
or
mov
push
push
call
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
push
push
call
mov
or
mov
mov
or
mov
push
push
call
mov
or
mov
mov
push
call
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
push
push
call
mov
or
mov
push
call
test
je
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
sub
cmp
jae
mov
and
test
je
mov
add
xor
mov
sar
mov
add
xor
mov
shl
or
mov
jmp
mov
add
xor
mov
mov
mov
mov
mov
add
mov
mov
jmp
mov
add
mov
mov
shl
mov
cmp
jge
mov
and
mov
sub
cmp
jae
mov
cmp
jae
mov
and
and
test
je
mov
and
test
je
mov
add
xor
mov
sar
mov
add
xor
mov
shl
or
mov
jmp
mov
add
xor
mov
mov
mov
and
mov
mov
add
mov
cmp
jbe
mov
shr
mov
mov
and
mov
cmp
ja
mov
jmp
mov
and
add
mov
jmp
mov
and
mov
add
mov
mov
and
add
mov
mov
xor
mov
jmp
mov
add
mov
mov
add
mov
jmp
mov
and
mov
lea
cmp
jbe
mov
jmp
mov
add
mov
mov
xor
mov
mov
and
test
je
mov
add
xor
mov
and
mov
jmp
mov
add
xor
mov
sar
mov
mov
add
mov
mov
shl
mov
lea
mov
jmp
mov
shr
mov
mov
and
test
je
mov
and
mov
add
mov
mov
and
add
mov
mov
xor
mov
jmp
mov
and
add
mov
mov
xor
mov
mov
and
test
je
mov
add
xor
mov
and
mov
jmp
mov
add
xor
mov
sar
mov
mov
add
mov
mov
mov
cmp
je
mov
add
mov
jmp
mov
and
mov
lea
cmp
jbe
mov
jmp
mov
and
test
je
mov
add
xor
mov
sar
mov
add
xor
mov
shl
or
mov
jmp
mov
add
xor
mov
mov
mov
and
mov
mov
add
mov
cmp
je
mov
add
mov
jmp
mov
and
mov
lea
cmp
jbe
mov
jmp
mov
and
test
je
mov
add
xor
mov
sar
mov
add
xor
mov
shl
or
mov
jmp
mov
add
xor
mov
mov
mov
and
add
mov
mov
add
mov
cmp
jne
mov
and
test
je
mov
add
xor
mov
and
shl
mov
mov
add
mov
mov
jmp
mov
add
xor
mov
and
shl
mov
mov
and
and
mov
lea
mov
mov
shl
mov
mov
mov
lea
cmp
jbe
pusha
mov
and
popa
mov
jmp
mov
mov
sub
mov
test
je
mov
cmp
jae
mov
add
mov
add
mov
mov
mov
add
mov
mov
add
mov
jmp
jmp
mov
cmp
jae
mov
jmp
mov
add
cmp
jbe
mov
jmp
mov
sub
mov
mov
mov
sub
mov
test
je
mov
cmp
jae
mov
add
mov
add
mov
mov
mov
add
mov
mov
add
mov
jmp
jmp
mov
and
test
je
mov
add
xor
mov
sar
mov
add
xor
mov
shl
or
mov
jmp
mov
add
xor
mov
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
jmp
jmp
mov
mov
mov
xor
pop
pop
pop
mov
pop
ret
mov
inc
add
mov
add
mov
add
mov
add
int3
int3
int3
int3
push
mov
sub
mov
mov
call
mov
add
mov
push
mov
push
call
mov
mov
mov
push
mov
push
push
mov
push
push
call
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
lea
mov
mov
xor
mov
rep
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
call
mov
push
call
add
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
call
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
lea
push
mov
push
call
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
add
jmp
mov
mov
call
mov
mov
mov
mov
push
mov
push
call
push
mov
mov
push
call
mov
mov
mov
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
pop
pop
xor
jmp
mov
test
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
push
sar
lea
call
and
imul
add
pop
pop
xor
jmp
mov
test
jne
cmp
je
mov
test
mov
mov
mov
mov
mov
je
inc
xor
cmp
mov
jl
mov
sub
cmp
ja
movsx
movzx
and
mov
imul
movzx
push
shr
pop
cmp
mov
je
push
pop
cmp
ja
jmp
xor
or
mov
mov
mov
mov
mov
mov
jmp
movsx
sub
je
sub
je
sub
je
dec
dec
je
sub
jne
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
cmp
jne
add
mov
mov
test
mov
jge
or
neg
jmp
mov
imul
movsx
lea
mov
jmp
and
jmp
cmp
jne
add
mov
mov
test
mov
jge
or
jmp
mov
imul
movsx
lea
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
jne
or
jmp
cmp
jne
inc
or
mov
jmp
or
jmp
or
jmp
mov
cmp
jne
cmp
jne
inc
inc
or
mov
jmp
cmp
jne
cmp
jne
inc
inc
and
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
and
and
lea
push
movzx
push
call
pop
test
mov
pop
je
mov
lea
call
mov
inc
test
mov
je
mov
lea
call
jmp
movsx
cmp
jg
je
cmp
jg
je
sub
je
dec
dec
je
dec
dec
je
dec
dec
jne
add
mov
mov
or
cmp
lea
mov
mov
mov
jge
mov
jmp
test
jne
or
jmp
test
jne
or
mov
cmp
jne
mov
add
test
mov
mov
mov
je
test
jne
mov
mov
mov
mov
jmp
sub
je
dec
dec
je
sub
je
dec
dec
jne
add
test
mov
je
movzx
push
push
lea
push
lea
push
call
add
test
je
mov
jmp
mov
mov
mov
lea
mov
jmp
mov
add
test
mov
je
mov
test
je
test
movsx
mov
je
cdq
sub
sar
mov
jmp
and
jmp
mov
mov
push
call
pop
jmp
cmp
jg
je
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
jne
test
mov
je
or
jmp
mov
add
mov
call
test
je
test
je
mov
mov
jmp
mov
mov
mov
jmp
or
mov
mov
test
jns
add
mov
mov
jmp
jne
cmp
jne
mov
jmp
cmp
jle
mov
cmp
jle
mov
add
push
call
test
mov
pop
mov
push
je
mov
mov
mov
jmp
mov
pop
add
mov
mov
mov
mov
lea
push
push
movsx
push
mov
push
push
lea
push
push
push
call
pop
call
mov
add
and
je
cmp
jne
lea
push
push
push
call
pop
call
pop
pop
cmp
jne
test
jne
lea
push
push
push
call
pop
call
pop
pop
cmp
jne
or
inc
mov
push
jmp
mov
mov
jmp
sub
je
dec
dec
je
sub
jne
mov
test
mov
je
mov
add
mov
mov
mov
jmp
test
jne
add
test
je
test
mov
je
movsx
jmp
movzx
cdq
jmp
test
mov
je
cdq
jmp
xor
mov
test
je
test
jg
jl
test
jae
neg
adc
neg
or
test
mov
mov
jne
xor
cmp
jge
mov
jmp
and
mov
cmp
jle
mov
mov
or
jne
and
lea
mov
dec
test
jg
mov
or
je
mov
cdq
push
push
push
push
call
add
cmp
mov
mov
mov
jle
add
mov
dec
jmp
lea
sub
inc
test
mov
mov
je
test
je
mov
cmp
je
dec
mov
mov
inc
jmp
dec
cmp
je
inc
inc
test
jne
sub
sar
jmp
test
jne
mov
mov
mov
jmp
dec
cmp
je
inc
test
jne
sub
mov
cmp
jne
mov
test
je
test
je
mov
jmp
test
je
mov
jmp
test
je
mov
mov
mov
sub
sub
test
jne
push
lea
push
push
call
add
push
mov
lea
lea
call
test
pop
je
test
jne
push
push
push
lea
call
add
cmp
mov
je
test
jle
mov
mov
movzx
dec
push
push
lea
push
lea
inc
push
inc
call
add
test
jne
cmp
je
push
lea
lea
call
cmp
pop
jne
jmp
or
jmp
mov
push
lea
call
pop
cmp
jl
test
je
push
push
push
lea
call
add
cmp
je
push
call
and
pop
mov
mov
test
mov
je
mov
mov
jmp
call
mov
xor
push
push
push
push
push
jmp
xor
cmp
je
cmp
jne
cmp
je
mov
and
mov
mov
pop
pop
xor
pop
call
add
leave
ret
nop
clc
loopne
add
inc
add
inc
add
fild
loopne
add
loopne
add
inc
add
loope
add
add
ret
push
mov
sub
push
push
lea
call
mov
movsx
push
call
cmp
jmp
inc
movzx
push
call
test
pop
jne
movsx
push
call
cmp
pop
jne
inc
inc
mov
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
inc
test
jne
cmp
pop
je
mov
and
leave
ret
push
mov
sub
push
push
lea
call
mov
mov
test
mov
je
mov
mov
mov
cmp
je
inc
mov
test
jne
mov
inc
test
je
jmp
cmp
je
cmp
je
inc
mov
test
jne
mov
dec
cmp
je
mov
mov
push
mov
cmp
pop
jne
dec
mov
inc
inc
test
mov
jne
cmp
pop
je
mov
and
leave
ret
fldz
mov
fcomp
fnstsw
test
jp
xor
inc
ret
xor
ret
push
mov
push
push
cmp
push
push
je
lea
push
call
mov
mov
mov
mov
mov
jmp
lea
push
call
mov
mov
mov
add
leave
ret
push
push
push
push
call
add
ret
test
push
mov
je
push
call
inc
push
push
add
push
call
add
pop
ret
push
push
call
pop
pop
ret
push
push
call
pop
pop
ret
push
mov
sub
push
push
push
push
lea
mov
call
xor
cmp
jne
call
push
pop
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
cmp
jbe
cmp
jle
mov
jmp
xor
add
cmp
ja
call
push
jmp
cmp
je
mov
xor
cmp
setg
xor
cmp
sete
mov
add
mov
call
mov
cmp
mov
jne
mov
lea
cmp
jle
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
sete
add
add
cmp
jne
or
jmp
sub
add
push
push
push
call
add
xor
test
je
push
push
push
push
push
call
add
cmp
lea
je
mov
mov
inc
cmp
je
mov
dec
jns
neg
mov
inc
cmp
jl
cdq
push
pop
idiv
add
mov
inc
cmp
jl
cdq
push
pop
idiv
add
mov
add
test
je
cmp
jne
push
lea
push
push
call
add
cmp
je
mov
and
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
push
push
push
mov
push
pop
push
lea
push
lea
push
push
push
call
xor
add
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
mov
cmp
jbe
cmp
mov
jne
or
jmp
xor
cmp
sete
sub
xor
cmp
setg
sub
lea
push
lea
push
push
xor
cmp
sete
xor
cmp
setg
add
add
push
call
add
cmp
je
mov
jmp
push
lea
push
push
push
mov
push
push
call
add
mov
pop
pop
xor
pop
call
leave
ret
push
mov
push
push
push
push
push
push
call
add
pop
ret
push
mov
sub
push
push
push
lea
mov
xor
mov
call
cmp
jge
mov
mov
cmp
jne
call
push
pop
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
cmp
jbe
mov
add
cmp
mov
ja
call
push
jmp
mov
mov
mov
mov
mov
shr
mov
push
and
xor
cmp
jne
test
jne
mov
cmp
jne
or
jmp
add
push
push
lea
push
push
push
call
add
test
je
cmp
mov
je
mov
and
jmp
cmp
jne
mov
inc
mov
inc
cmp
push
sete
dec
and
add
mov
inc
push
call
test
pop
pop
je
cmp
sete
dec
and
add
mov
mov
jmp
and
xor
or
je
mov
inc
mov
mov
inc
test
sete
dec
and
add
mov
mov
inc
neg
sbb
and
and
xor
add
xor
or
jne
mov
mov
mov
and
inc
or
jne
mov
jmp
mov
jmp
mov
inc
mov
inc
cmp
mov
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
and
mov
ja
cmp
jbe
mov
mov
cmp
jle
mov
and
mov
movsx
and
and
call
add
movzx
cmp
jbe
add
mov
sub
mov
mov
shrd
shr
inc
dec
cmp
mov
mov
jge
cmp
jl
mov
and
mov
movsx
and
and
call
cmp
jbe
lea
mov
cmp
je
cmp
jne
mov
dec
jmp
cmp
je
mov
cmp
jne
add
mov
jmp
inc
mov
jmp
inc
cmp
jle
push
push
push
call
add
add
mov
cmp
jne
mov
cmp
mov
sete
dec
and
add
mov
mov
mov
inc
call
xor
and
and
sub
push
pop
sbb
js
jg
cmp
jb
mov
inc
jmp
mov
inc
neg
adc
neg
cmp
mov
mov
jl
mov
jg
cmp
jb
push
push
push
push
call
add
mov
inc
cmp
mov
mov
mov
jne
test
jl
jg
cmp
jb
push
push
push
push
call
add
mov
mov
inc
mov
loope
cmp
jl
or
mov
hlt
mov
xor
in
xchg
jl
dec
scas
or
movs
push
mov
pusha
lods
hlt
cld
push
mov
shl
(bad)
cmp
jne
ins
jp
xchg
pop
mov
xchg
xchg
and
adc
lock
out
outs
mov
scas
fdiv
xchg
mov
xor
jb
rcl
test
clc
or
xor
fnsave
adc
fcomp
js
mov
xchg
mov
xor
sub
xor
or
dec
pop
dec
mov
(bad)
movs
xor
ins
add
fbstp
ins
mov
and
push
cmp
sub
adc
arpl
jnp
sub
dec
mov
xor
pusha
retf
lods
and
in
add
push
inc
cmps
sti
fld
not
out
sbb
mov
rol
lahf
adc
adc
add
push
ins
adc
ja
ins
pop
mov
xor
sub
std
ja
add
sahf
inc
mov
cmc
sub
adc
pop
aas
sar
mov
ins
out
inc
jp
in
pop
mov
cmp
les
in
in
inc
inc
push
sbb
pop
repz
pushf
xor
add
mov
or
dec
test
test
mov
in
inc
pop
jmp
xchg
or
xor
(bad)
push
dec
clc
pop
inc
jno
sbb
cmp
xor
jae
sbb
or
dec
in
push
pop
out
cmp
pusha
add
ja
popf
int3
out
daa
popf
dec
pushf
xor
ss
jae
loop
test
bound
jbe
sar
jne
pop
ret
aam
dec
rol
pusha
xor
ror
push
rcl
test
xor
and
cmps
mov
push
repnz
test
in
adc
imul
fwait
sbb
lods
inc
bound
sub
cmp
jns
mov
cmc
les
and
jns
repnz
sub
jmp
pop
lds
dec
and
push
push
in
mov
adc
cs
xchg
mov
or
xchg
cli
add
aaa
fld
sar
outs
sbb
add
in
push
inc
rcl
mov
lock
xchg
aad
inc
es
jle
sbb
push
inc
cmp
addr16
(bad)
icebp
push
pop
inc
jmp
xor
rcl
push
or
mov
sub
mov
in
or
enter
cmc
(bad)
cmp
xchg
xlat
lods
sbb
leave
mov
jnp
ret
ret
bound
das
out
retf
jb
sub
dec
jp
mov
inc
push
cmp
fucomp
or
aam
xor
push
push
das
inc
cmp
sbb
test
push
stos
repnz
popf
leave
xchg
lock
in
sbb
xor
aam
inc
shl
cld
mov
pop
and
cmp
mov
xor
pushf
mov
and
pop
xor
mov
xchg
mov
dec
or
push
imul
sahf
push
mov
push
ret
mov
ds
retf
jmp
pop
pushf
pushf
push
inc
and
jbe
sub
and
pusha
shl
lods
shr
inc
aaa
inc
in
repz
outs
pop
add
sub
jp
dec
outs
push
(bad)
push
add
push
xchg
jp
fsubp
adc
fst
fbld
mov
jle
adc
pop
xchg
xchg
mov
ja
mov
imul
dec
jae
loopne
dec
push
push
fdivr
lds
cmp
add
xchg
je
and
xor
ja
cs
dec
loop
repz
out
xor
ret
cmp
shl
mov
jns
inc
fdiv
ins
mov
mov
dec
xchg
pop
push
cdq
sbb
nop
pop
js
mov
sbb
cmp
aas
ret
(bad)
iret
pop
add
ins
xor
sub
dec
mov
dec
jmp
mov
push
repz
popf
call
fcom
imul
mov
jecxz
sti
dec
push
test
lahf
push
push
jbe
je
inc
out
mov
jl
int
adc
(bad)
out
inc
clc
addr16
adc
lock
push
or
jp
inc
int
mov
sbb
cmp
pop
pop
idiv
push
cmp
repz
sub
fs
adc
pushf
inc
mov
test
fsubr
mov
in
push
movs
cld
xor
and
jb
in
push
cli
xchg
fisttp
std
mov
imul
xchg
movs
jge
inc
outs
nop
out
repz
mov
push
ins
inc
stos
ja
jp
xchg
loop
push
xor
mov
mov
mov
mov
lock
jmp
push
and
inc
inc
repz
rcr
mov
rcr
fild
ss
or
or
repz
sub
cmps
cmp
xchg
out
ja
sbb
(bad)
stc
jae
repnz
cmp
retf
das
mov
mov
mov
adc
cmps
sub
in
in
mov
cmp
cmps
aaa
stc
dec
repnz
aam
and
test
push
rcr
lods
fadd
pop
int3
ficom
in
adc
and
push
pushf
int3
popf
cmc
aas
neg
pop
stos
sti
inc
aam
mov
pop
cmp
xor
xor
xchg
neg
push
xchg
or
adc
mov
aaa
shr
cmp
clc
pop
xchg
stos
les
inc
gs
sub
adc
cmc
sbb
into
shr
cmp
test
mov
mov
cmp
lds
jle
jge
fnstcw
pop
xchg
xchg
xchg
int
sbb
pop
(bad)
cld
ds
xchg
inc
pop
adc
adc
movs
call
inc
mov
mov
mov
mov
and
aam
div
fadd
inc
sbb
sbb
mov
jp
sbb
or
jecxz
popa
add
xchg
pushf
push
lock
ret
mov
cmp
lods
mov
and
mov
icebp
cli
adc
cld
inc
or
lock
jmp
es
sub
add
mov
int3
or
add
sar
jl
popf
test
adc
xchg
call
popf
bound
sbb
dec
rcl
push
mov
fsubr
push
sahf
loop
pop
cli
sbb
dec
pop
or
xor
mov
ins
pop
(bad)
xor
and
jge
and
out
xor
dec
sub
cli
sbb
jne
loopne
xchg
pop
shl
xchg
push
jl
mov
sbb
sbb
cld
sbb
loop
xchg
mov
ret
nop
dec
dec
inc
pop
sbb
xchg
arpl
mov
scas
not
dec
in
mov
mov
fmulp
loope
clc
push
es
xor
and
xchg
mov
push
mov
leave
lea
and
mov
sbb
xor
out
jp
mov
mov
test
xor
sub
les
push
xchg
ds
ror
xchg
add
mov
inc
cmp
jnp
xor
in
mov
in
repz
pushf
int3
retf
mov
jmp
adc
ins
pop
call
or
jl
mov
pop
push
dec
mov
pop
xor
adc
call
and
mov
or
inc
fnsave
pop
cmp
or
inc
inc
cdq
imul
jae
jle
pushf
pusha
cmp
jge
in
adc
popa
xchg
leave
cs
inc
pop
ins
xor
or
mov
sbb
add
fs
cmp
clc
loope
mov
mov
push
jl
js
mov
push
jo
les
cmps
cli
daa
jl
xchg
push
mov
push
mov
repz
dec
test
push
leave
adc
je
sar
sub
mov
adc
dec
mov
adc
retf
mov
jp
clc
in
jb
inc
jp
pop
test
push
jb
mov
sub
jl
xchg
call
aam
sahf
(bad)
cdq
adc
ret
xor
js
mov
loop
je
push
cmp
aam
and
repz
xchg
add
dec
into
add
adc
movs
and
xchg
call
int
in
push
sub
test
sub
sbb
pop
repz
xor
pop
ffree
push
imul
jmp
ja
sub
cld
arpl
sub
push
jnp
jecxz
cwde
ins
xchg
into
sbb
jnp
(bad)
int3
test
fisub
inc
sbb
pushw
xchg
xchg
jl
push
push
cmp
mov
mov
aas
sub
sbb
mov
loopne
inc
push
ds
ret
js
add
(bad)
scas
jnp
inc
push
(bad)
fs
sub
gs
int3
inc
mov
mov
fnstcw
enter
cmp
dec
retf
cmp
jle
imul
ror
inc
sahf
mov
mov
dec
fcom
sbb
mov
pushf
push
icebp
sbb
jmp
sub
lock
into
(bad)
in
and
test
(bad)
test
xor
xchg
adc
fucomi
push
in
fwait
or
pop
cld
push
lahf
(bad)
adc
dec
ror
cmp
and
in
cwde
mov
fisub
inc
out
mov
rcl
sub
call
scas
dec
mov
mov
(bad)
and
and
sbb
hlt
pusha
test
push
mov
push
lea
add
daa
les
fsubr
in
les
pop
mov
(bad)
mov
jl
add
inc
lock
jb
jne
cmp
adc
inc
out
in
ins
inc
test
je
inc
ret
ins
cmp
imul
mov
cs
inc
dec
pop
fnstsw
sub
jl
jns
pop
ret
add
je
int3
out
cld
lahf
sub
mov
jle
ficomp
cmp
cmp
ins
jo
sub
popf
fwait
mov
cmp
outs
fild
out
retfw
push
and
mul
and
mov
loopne
nop
adc
popf
add
mov
xor
(bad)
scas
cmp
int3
pop
fsubrp
fstp
push
jb
sbb
adc
ins
and
mov
ins
mov
lods
dec
push
addr16
or
push
inc
push
and
push
or
and
mov
ror
pusha
add
xchg
imul
and
loop
in
clc
ja
fst
push
push
sub
jl
adc
and
mov
mov
pop
in
dec
loopne
inc
call
xchg
add
sbb
push
and
(bad)
cs
in
retf
and
movs
inc
inc
ficom
out
jmp
es
xor
jo
inc
sub
or
nop
pop
pop
out
daa
and
inc
popf
rcl
loopne
ds
mov
pop
sbb
push
mov
outs
jnp
and
cmp
(bad)
push
aam
mov
dec
int3
mov
in
dec
add
mov
shl
inc
add
fild
imul
sub
fcom
outs
sbb
dec
mov
mov
or
sar
or
mov
add
lahf
ficom
(bad)
movs
cmp
imul
mov
addr16
and
mov
imul
push
(bad)
jbe
das
in
cmps
scas
ret
js
into
xchg
push
jmp
mov
sub
in
scas
ja
pop
inc
adc
das
(bad)
int3
mov
push
mov
push
aas
je
(bad)
mov
sbb
out
xor
mov
pusha
ins
je
jns
pop
xchg
in
adc
xor
addr16
shl
pushf
push
mov
jmp
repz
and
mov
je
push
mov
mov
and
jae
std
ds
inc
repz
or
(bad)
pushf
stos
and
popa
daa
cmp
int
aas
mov
xlat
mov
movs
mov
shl
and
mov
xchg
or
fidivr
out
addr16
sub
loope
rcl
dec
ss
cmp
out
sbb
test
jl
ins
jo
adc
jl
mov
jp
pop
add
mov
xor
fsubr
int
gs
mov
(bad)
in
in
stc
dec
push
push
xchg
cmp
adc
sub
scas
(bad)
mov
xchg
inc
mov
and
jb
imul
add
or
pop
jns
sub
es
sar
test
dec
inc
jp
jmp
out
adc
sti
sbb
push
push
ror
dec
sbb
je
mov
ror
inc
sbb
pop
scas
out
sub
not
dec
mov
punpckldq
enter
int3
push
push
inc
(bad)
ss
inc
xchg
pop
pop
push
jl
xor
xchg
int3
push
stos
ret
cmp
pop
mov
mov
int
push
and
in
shl
push
lds
sbb
popf
or
mov
js
pop
repnz
int
ret
mov
ja
sbb
mov
or
xor
mov
sar
xchg
mov
add
jecxz
repz
cmp
cmc
std
jo
mov
inc
ja
shr
jb
pusha
popa
and
or
mov
iret
jge
mov
mov
xlat
enter
sub
push
pop
lods
adc
popf
jp
cwde
sub
arpl
and
int
dec
imul
sbb
repnz
xor
(bad)
jmp
cmp
cmps
daa
mov
(bad)
ret
fsub
adc
cmp
outs
fisttp
aaa
jle
or
outs
push
xchg
push
mov
sub
xor
aas
scas
outs
inc
sub
xor
mov
iret
mov
jns
daa
dec
outs
and
dec
je
fisttp
cmps
push
out
jb
pop
mov
push
push
shl
xor
aaa
out
retf
dec
mov
jmp
cmp
stc
sbb
call
ficom
test
int
or
in
push
mov
xchg
and
jp
xor
and
fcmove
push
dec
int
scas
xor
xchg
xchg
retf
mov
pushf
push
outs
rcr
push
pop
xor
fsub
mov
les
ret
mov
ss
jae
and
inc
sahf
mov
sti
repz
pop
and
fidiv
bound
jo
enter
mov
push
retf
push
repnz
jmp
ds
cdq
adc
test
nop
pop
aaa
outs
or
jge
lods
push
and
push
in
or
mov
rcl
inc
mov
adc
adc
jle
mul
cdq
leave
cmps
aaa
retf
xchg
cmp
not
cmp
add
popf
jmp
lea
pop
das
outs
mov
adc
or
inc
cmp
cmp
xor
add
cmp
mov
and
sub
sub
gs
push
or
pop
les
push
mov
push
sbb
ret
pop
mov
cmp
sbb
push
movs
or
sub
cmc
fadd
mov
(bad)
and
stc
ret
into
test
bound
adc
fstp
jo
push
shl
outs
sbb
add
loopne
js
dec
sbb
adc
outs
lods
jg
nop
or
ins
mov
xor
jecxz
fcomp
ret
std
jle
mov
pop
xor
jl
push
scas
mov
cs
mov
rcl
cmp
daa
pop
dec
fst
cmp
cli
div
and
push
iret
shr
jl
or
ret
cli
jl
and
sub
rcr
push
jge
sbb
call
jnp
mov
loopne
call
sbb
pushf
scas
xor
sbb
popa
repz
out
jl
into
cs
or
je
xchg
mov
and
iret
or
jmp
mov
cmp
cmps
push
jno
bound
(bad)
retf
xchg
pop
ficom
sub
jecxz
ret
or
add
jne
jns
jp
mov
push
mov
xor
dec
or
sar
sub
push
mov
inc
jnp
inc
mov
mov
xchg
test
lea
adc
je
hlt
fidivr
dec
mov
cs
ror
stos
clc
test
push
inc
cmp
into
gs
iret
cmp
mov
and
sub
pop
pop
mov
lods
push
das
bound
push
mov
mov
mov
cmp
sbb
cmp
cmc
stc
movs
sbb
adc
repz
mov
cmps
add
mov
aad
xor
pop
push
jmp
in
ja
xor
outs
dec
mov
mov
pop
je
mov
add
outs
std
sbb
jne
pop
inc
inc
dec
jp
enter
adc
sbb
push
or
xor
add
or
jmp
mov
fsubr
arpl
mov
rcr
std
(bad)
inc
fld
out
sahf
int3
cmp
xor
mov
jle
xchg
and
jp
jge
sub
mov
call
jp
add
popf
jbe
xchg
sbb
pop
call
adc
fistp
lahf
xchg
mov
push
sbb
xor
movs
push
or
xor
jmp
pop
dec
mov
aam
ins
add
into
mov
add
mov
pop
xor
pop
shl
leave
mov
sti
jl
cmps
sar
(bad)
mov
lods
retf
scas
stc
inc
add
cmc
jbe
cmp
test
repnz
cwde
out
dec
aaa
xchg
or
mov
pop
shl
cmp
mov
jne
sub
lods
in
xor
outs
mov
ins
inc
fisubr
jge
sti
les
test
(bad)
fucomp
(bad)
cld
cmp
or
sbb
call
sbb
pop
popf
jb
ret
inc
ficomp
pop
dec
scas
jbe
pop
push
outs
cwde
arpl
test
jnp
add
xchg
or
jae
in
pop
pushf
ds
cld
push
fs
lods
adc
dec
aam
stos
mov
jl
cmp
xchg
push
pop
sub
mov
cdq
xor
mov
leave
gs
and
xchg
sub
xchg
cmps
(bad)
in
mov
jle
arpl
jle
sbb
ja
or
add
daa
retf
int3
cmps
int
dec
shl
and
loope
repz
add
push
and
or
pop
out
mov
cmps
mov
(bad)
aaa
pushf
push
xchg
jae
sub
jbe
and
mov
inc
mov
ds
mov
xchg
xchg
xchg
dec
adc
sti
mov
xor
and
lods
jl
shr
inc
out
aam
push
and
or
retf
and
mov
call
push
inc
test
das
bound
out
cmc
fild
sub
adc
push
push
jne
or
iret
xchg
inc
rol
jns
retf
or
ret
cld
mov
mov
sub
div
pop
pop
cmps
adc
push
xchg
xchg
out
add
das
stos
add
subps
imul
out
dec
fstp
dec
call
retf
ret
les
in
movs
sub
cmps
jbe
push
inc
stc
lock
add
fsubr
inc
data16
add
mov
out
nop
test
inc
outs
dec
(bad)
lods
adc
sub
xchg
sub
fwait
push
imul
xchg
cwde
cmp
test
popa
adc
pop
fisub
inc
stc
outs
mov
aaa
mov
mov
add
stc
xchg
jb
ret
clc
fidivr
lods
repz
push
out
xchg
mov
pushf
(bad)
mov
cmp
(bad)
dec
retf
and
ins
(bad)
ss
add
lods
stos
fdiv
dec
mov
and
shl
out
sbb
int3
sub
je
mov
xchg
addr16
out
sbb
or
retf
lods
add
jl
dec
popf
pop
jmp
aam
and
add
dec
ins
xchg
add
xor
pop
xchg
nop
jl
mov
ficomp
stc
addr16
sbb
adc
lods
out
retf
adc
dec
sub
gs
call
jne
shr
sbb
mov
xor
stos
jmp
iret
xchg
rol
xchg
jge
fidivr
mov
push
or
stos
and
sub
mov
jp
jns
or
jge
mov
sbb
loope
xlat
ins
mov
cdq
push
stos
pop
mov
push
scas
retf
xor
ret
cmp
fst
lea
sbb
inc
xrelease
mov
fstp
xrelease
lahf
push
lea
retf
aam
mov
cmp
xor
cmps
or
or
or
(bad)
jl
jb
jno
dec
adc
push
dec
hlt
lds
rcr
fwait
mov
lods
pusha
popf
add
neg
sbb
xchg
hlt
test
aas
xchg
mov
bnd
cmp
jo
cmp
test
stc
adc
(bad)
popa
add
pop
sahf
out
addr16
cmp
jecxz
fisub
lahf
(bad)
mov
cmp
sbb
jecxz
dec
adc
out
popa
add
fidiv
adc
jbe
loope
sub
test
in
add
ret
pop
nop
adc
pop
mov
jl
or
mov
shl
inc
add
jecxz
lahf
out
fnstsw
push
out
inc
aad
push
loope
lea
dec
ds
add
sahf
adc
push
cmp
jmp
inc
stos
push
imul
scas
xor
sbb
pop
cld
pop
pop
sar
sbb
(bad)
mov
xchg
repnz
dec
push
jmp
psraw
inc
push
or
add
xchg
or
inc
cmp
xchg
hlt
mov
das
popf
loop
xor
rol
adc
add
xor
and
pop
jle
fld
imul
xor
mov
inc
fucomip
out
adc
and
stos
mov
inc
movs
mov
sub
mov
cdq
xchg
mov
jge
or
daa
add
dec
xchg
imul
inc
stc
add
popf
mov
pop
push
mov
dec
dec
push
dec
movs
call
push
pop
pushf
mov
sub
ja
mov
test
outs
arpl
hlt
aaa
mov
sbb
push
push
mov
inc
or
mov
arpl
inc
mov
daa
mov
pop
das
xchg
pop
jecxz
rol
add
adc
inc
lods
pslld
xor
(bad)
adc
sar
sbb
push
jp
mov
dec
mov
jo
fld
lods
movs
pop
add
imul
sub
cmp
or
dec
call
adc
xchg
cdq
mov
sub
nop
mov
pop
xor
inc
dec
dec
and
into
jp
xor
int
in
and
push
adc
in
aaa
in
add
and
push
jecxz
ret
jl
pushf
mov
inc
inc
jnp
dec
(bad)
push
push
xchg
fisub
sbb
add
mov
sbb
loop
push
into
cmp
push
outs
and
ud2
or
mov
rol
jbe
mov
ret
mov
stos
loopne
or
or
in
sub
fimul
lods
das
lods
jbe
into
mov
into
ja
xchg
lea
mov
push
outs
stos
inc
pop
mov
sub
xor
pop
lahf
xchg
sbb
mov
sar
cld
jl
stos
mov
sub
push
lods
or
jo
jb
sub
fisubr
out
test
jp
push
movs
add
cmp
lea
jecxz
fild
xlat
sub
jne
push
jmp
rcl
pop
or
mov
mov
add
lahf
jecxz
lds
ins
and
fistp
lods
pcmpeqd
mov
sub
cmp
pop
xor
idiv
sub
cdq
cmp
fwait
adc
leave
mov
fdivr
xchg
sbb
jb
push
jp
into
mov
mov
dec
call
mov
(bad)
jae
inc
pop
ret
cmp
push
lods
cmc
push
scas
mov
rcr
fdiv
mov
out
sahf
mov
nop
push
mov
out
sahf
xor
sub
sub
std
data16
jnp
sbb
pop
mov
and
add
mov
int
mov
and
aad
dec
mov
loop
sub
fmulp
or
push
mov
jg
xor
or
push
ret
sbb
push
pushf
add
in
or
jp
fisttp
mov
in
pop
mov
sub
cld
repnz
hlt
jl
adc
int3
or
std
adc
mov
jb
icebp
mov
add
sbb
jp
lods
mov
push
and
rcr
sub
mov
(bad)
fnsetpm(287
jmp
push
rcr
mov
sub
xor
mov
xchg
ss
pushf
mov
(bad)
jl
in
lods
bound
pop
mov
test
add
xchg
bound
outs
call
sub
jp
xchg
xchg
aam
sub
movs
or
fwait
mov
fbld
or
cmp
inc
jb
mov
movs
mov
xchg
push
test
in
cld
mov
adc
fcmovbe
sbb
xor
jp
test
pop
pop
jmp
fmul
dec
cmp
ret
pusha
adc
aad
test
repz
mov
adc
adc
(bad)
outs
cld
repnz
mov
scas
xor
mov
add
xlat
xor
cwde
ret
les
cld
inc
push
cmp
add
or
xchg
xchg
jp
imul
mov
push
movs
test
das
mov
das
aad
ds
loope
ds
loopne
(bad)
cmp
leave
lahf
sub
mov
(bad)
stos
sub
leave
ins
inc
add
dec
or
dec
mov
mov
xchg
sub
loopne
loope
loopne
push
cld
test
and
daa
fcomp
sahf
jl
call
xor
sbb
stc
or
not
bound
xchg
xchg
push
add
mov
psllq
fadd
mov
imul
daa
stos
cmp
sub
add
jle
add
mov
xchg
out
js
adc
fisubr
movs
xor
fwait
not
jmp
or
pop
loopne
mov
inc
cmp
dec
adc
mov
xor
cmova
or
sti
test
pop
(bad)
mov
mov
(bad)
xchg
ret
mov
clc
adc
mov
popf
jns
xchg
out
mov
aam
sub
and
into
rcr
push
cmp
sub
je
aam
mov
scas
add
xchg
push
shl
sub
add
lahf
pop
push
inc
xchg
or
int3
sti
xchg
mov
mov
cmp
cs
mov
nop
push
and
stos
cmp
and
sbb
sbb
push
scas
sbb
in
add
loope
shl
enter
xor
cmc
aam
adc
mov
sub
adc
push
adc
fimul
rcr
icebp
retf
push
adc
or
inc
mov
addr16
mov
lods
rcr
cmc
push
enter
sub
in
mov
in
mov
cli
mov
test
sbb
mov
jb
push
sbb
sbb
add
mov
loop
es
mov
sub
sub
sub
dec
mov
inc
push
arpl
adc
movs
xor
adc
xor
mov
push
inc
push
or
adc
xor
inc
pop
daa
aaa
shl
les
or
lods
pop
add
cmp
xchg
adc
nop
sbb
loop
sub
sbb
jns
out
loop
pop
clc
inc
mov
xor
cmp
in
jmp
mov
mov
shl
inc
push
mov
(bad)
into
push
dec
inc
daa
lods
lahf
ret
stc
cmps
lods
scas
arpl
and
xchg
adc
cmp
fdiv
stc
lea
jne
push
dec
mov
rcl
mov
out
aas
inc
sti
xor
das
out
mov
xchg
cmp
mov
push
push
stc
jle
xchg
or
imul
ds
mov
push
inc
ins
sub
fcmovb
(bad)
mov
(bad)
retf
sbb
sti
shl
jb
sar
adc
fwait
int
into
test
bound
retf
jbe
mov
mov
imul
or
mov
loopne
popa
sbb
add
mov
lahf
pop
sbb
arpl
dec
ret
jmp
jmp
or
pop
dec
repnz
dec
sub
dec
cmp
retf
push
add
std
pop
ds
jmp
fsub
sub
leave
int3
or
add
int3
dec
push
xor
xor
in
inc
jl
pushf
in
adc
sahf
mov
mov
rcl
add
xor
sbb
adc
jae
xchg
ja
fidiv
mov
sahf
cmps
shl
dec
aad
movs
je
xor
and
and
dec
adc
out
lods
sbb
call
movs
mov
cli
lock
repnz
loopne
scas
test
adc
pushf
and
jl
ins
and
popa
inc
mov
pop
cmp
dec
ror
dec
and
xchg
fcmovnbe
pop
sub
dec
mov
cld
push
mov
pop
mov
inc
arpl
jecxz
ds
daa
rcr
push
or
mov
dec
fadd
das
or
adc
mov
or
xchg
dec
mov
dec
jae
xchg
mov
xchg
push
pop
cmps
sti
(bad)
lods
adc
or
ds
imul
and
dec
clc
xchg
xchg
daa
adc
outs
jnp
and
jo
loop
mov
cmps
inc
jg
sbb
inc
push
xchg
dec
sbb
cmc
test
mov
add
rcl
ret
out
rol
and
dec
mov
dec
mov
adc
and
out
push
mov
in
aas
xchg
and
daa
mov
jl
add
add
dec
mov
jl
mov
pop
int3
dec
fidivr
xchg
inc
jae
mov
dec
repnz
fsubr
mov
mov
cmp
jae
nop
mov
dec
jns
xor
push
nop
inc
mov
pop
dec
inc
sti
ficom
mov
test
cld
ja
jmp
mov
not
imul
pop
sar
inc
inc
jmp
add
test
mov
xchg
data16
cmp
emms
cmp
dec
xchg
leave
pop
cmps
retf
mov
cmp
sub
sbb
jge
adc
push
cmps
adc
lods
sub
int
(bad)
dec
and
and
ins
mov
mov
test
push
pop
xor
or
sub
xchg
push
call
es
iret
or
push
xchg
icebp
bound
adc
pop
popf
in
adc
(bad)
sar
add
sar
jl
jg
outs
inc
mov
push
push
(bad)
pop
inc
scas
xlat
loope
pusha
shl
out
cmp
push
ss
dec
popa
dec
cmps
jns
fild
jmp
and
xor
and
push
inc
xor
push
dec
repnz
fwait
nop
lods
or
push
mov
pusha
lods
scas
faddp
push
ins
jg
mov
sub
in
fwait
ret
(bad)
mov
mov
jno
nop
call
mov
jp
jmp
sub
cmp
dec
cmp
in
inc
leave
aaa
cmovbe
fisub
stc
lds
push
xor
push
bound
nop
cwde
clc
cwde
out
pop
sub
sar
mov
jecxz
std
lods
push
js
sbb
ja
or
leave
data16
rol
and
sub
xchg
imul
icebp
inc
sahf
fcmovbe
lock
fs
aas
sar
add
in
dec
or
loop
mov
cmps
aas
out
je
add
inc
loop
and
sbb
mov
inc
fsub
sub
xchg
movs
xor
gs
pop
push
dec
or
not
aad
mov
(bad)
jecxz
xchg
dec
push
ss
fst
dec
out
add
cmp
xlat
in
fnstsw
or
jno
push
pop
stos
test
pop
adc
test
push
adc
sub
sub
fidiv
add
xchg
div
or
jbe
rcr
mov
test
xchg
inc
in
rcr
mov
inc
dec
mov
fwait
pop
mov
repnz
cmp
inc
arpl
xor
sub
mov
in
and
pop
jns
dec
push
mov
mov
div
fild
repz
xchg
xchg
in
push
(bad)
push
rol
cmp
jmp
cld
test
jno
mov
jle
cwde
in
sub
xor
fmul
jecxz
inc
cld
xchg
fld
push
and
mov
cmp
or
(bad)
inc
ret
adc
mov
cwde
xchg
push
leave
mov
add
mov
cmp
push
test
lods
ret
ins
stos
out
popa
mov
jle
cdq
loop
add
ret
pop
mov
or
sub
outs
mov
add
dec
aam
jo
in
adc
arpl
xchg
jnp
int3
mov
aam
lea
mov
mov
dec
icebp
out
ja
test
fwait
or
xor
aas
push
push
jae
cmp
fsub
lea
rcr
dec
shl
push
jmp
sbb
test
popf
xchg
rcr
in
in
hlt
pop
ins
hlt
jg
sbb
cdq
sub
std
stc
push
sub
or
ins
xor
loop
or
out
jbe
jp
adc
ja
call
lds
or
dec
ror
cld
ret
int
and
popa
adc
stos
jmp
sbb
out
mov
cmc
ja
scas
sub
int
xchg
pop
push
xor
mov
movs
ss
test
ds
mov
inc
jnp
and
mov
jmp
or
cmp
jmp
test
test
ds
push
xlat
add
sbb
xchg
(bad)
out
xchg
cmp
cmp
or
fild
dec
mov
jl
test
pop
retf
add
sub
ret
nop
bound
test
xor
mov
jmp
add
(bad)
pop
push
mov
xlat
push
or
mov
push
adc
xchg
aas
xchg
jo
retf
fs
add
stos
or
mov
sbb
xchg
sbb
fisttp
lea
xchg
call
imul
mov
(bad)
(bad)
push
dec
mov
mov
cmp
xchg
xor
mov
fwait
std
inc
loope
push
mov
dec
cmp
cmps
fxtract
pusha
daa
adc
jae
pop
xchg
adc
push
rcl
cs
das
jp
add
adc
in
xchg
mov
add
jbe
aam
das
out
cwde
xchg
jns
shr
call
lock
test
mov
inc
xchg
into
ins
mov
sub
lods
mov
pop
mov
rcr
in
or
add
shl
inc
les
fild
pop
addr16
lahf
loopne
fsubr
es
add
daa
xchg
push
out
push
cli
dec
loopne
adc
fwait
bound
call
xchg
scas
repz
es
fisttp
inc
xor
retf
inc
sbb
mov
add
movs
ds
retf
imul
repnz
ins
in
cmps
pop
pop
(bad)
sub
mov
pusha
(bad)
es
jmp
pop
fisttp
push
push
sbb
lds
xor
adc
int3
jb
pusha
dec
sar
push
scas
loopne
and
xchg
inc
retf
cld
imul
xlat
arpl
sub
dec
sub
aad
hlt
(bad)
gs
imul
fs
lods
(bad)
xor
add
xor
sbb
ins
(bad)
cli
xchg
mov
xchg
inc
gs
inc
jp
xchg
inc
inc
shl
rol
jnp
outs
cli
stos
sub
lds
mov
jge
mov
pop
push
fs
fdiv
shl
jb
ficomp
arpl
hlt
ins
stos
mov
push
push
ror
(bad)
cmp
imul
inc
loop
sbb
and
mov
jae
dec
adc
xchg
pop
or
or
(bad)
stc
call
xor
cmp
jle
inc
mov
push
push
fwait
or
popa
sub
ffree
pushf
aas
les
hlt
imul
cmp
nop
mov
sbb
push
jae
adc
fdiv
repnz
call
push
xor
dec
mov
sbb
and
stos
push
gs
dec
sub
shr
xchg
int3
pop
mov
rcl
push
int
fsub
aas
test
fidiv
icebp
push
cmp
adc
addr16
repz
outs
push
ret
mov
or
int3
sub
sbb
ja
int3
in
mov
repnz
nop
mov
xchg
sbb
jmp
adc
pop
jno
repz
or
test
scas
shl
add
movs
ficom
es
jb
aas
int
js
or
sbb
sub
jge
je
sub
sub
clc
or
fsubr
nop
xor
xor
xor
cdq
pop
xlat
sub
repnz
adc
jmp
sahf
jae
inc
pop
(bad)
mov
je
xor
leave
push
mov
shl
(bad)
sub
adc
aaa
(bad)
sti
cdq
mov
pop
arpl
test
push
pusha
ins
fs
push
iret
mov
shl
mov
mov
in
xor
ret
imul
ret
mov
mov
fild
das
fcom
ficom
cmp
into
ret
sub
cmc
pop
cli
add
mov
movs
sub
aas
lods
or
adc
adc
adc
movs
xchg
cwde
push
ins
xchg
cmp
aaa
je
or
mov
test
lods
fcmovu
loop
dec
cwde
sahf
cmp
push
bound
xchg
dec
xor
dec
mov
mov
mov
call
ret
jp
stc
sub
ins
leave
push
cmp
sar
ins
inc
mov
sub
mov
aad
shr
mov
retf
rol
dec
or
test
push
jne
mov
out
rcl
xor
inc
jnp
loope
ret
xor
inc
imul
ret
in
ins
and
test
cmp
test
mov
or
and
or
adc
clc
sub
or
cmp
in
call
nop
cmp
xor
inc
xor
inc
out
mov
lea
push
sub
cld
jmp
mov
mov
outs
lock
jbe
pop
jno
out
cmps
in
sahf
adc
imul
mov
mov
pop
pop
push
int3
movs
movs
sar
fiadd
push
dec
rcl
out
je
(bad)
jb
clc
into
cmp
sub
sub
sub
adc
xchg
cmps
dec
ret
cmps
adc
sbb
fsubr
fldcw
sbb
cmp
lea
mov
cmps
or
or
cmps
cmp
cld
in
fs
pop
add
js
mov
mov
add
addr16
imul
xor
push
hlt
sti
cld
or
rol
scas
pop
std
add
cmp
inc
dec
fdiv
lods
repz
ins
sub
cmp
sbb
addr16
iret
add
jno
and
scas
lock
std
push
dec
(bad)
bound
inc
jecxz
leave
gs
aaa
loop
retf
movs
stc
mov
lods
loope
pop
adc
jle
push
test
sti
inc
out
inc
lea
loopne
mov
and
mov
inc
stos
jnp
test
jno
ror
push
loope
(bad)
sti
sbb
mov
add
retf
jns
or
bound
dec
xchg
inc
mov
sbb
dec
(bad)
int3
sbb
jecxz
mov
mov
cdq
jecxz
bound
ins
dec
push
push
push
jns
add
int3
pushf
fld
lods
int
lea
mov
push
dec
gs
jmp
iret
bound
mov
pop
xchg
push
ins
bound
mov
dec
inc
mov
mov
sub
adc
mov
cmp
ret
loop
ret
shl
dec
xor
ficom
ss
push
stos
dec
ins
out
cmp
push
cmp
push
jmp
mov
cmp
push
ret
jge
jle
sbb
sbb
stos
and
es
rol
mov
mov
pop
into
in
sub
sti
mov
sbb
lea
sbb
sub
jbe
jne
lea
mov
dec
loop
test
xor
inc
dec
jecxz
mov
ficom
xchg
xor
aam
in
aam
mov
mov
push
mov
cmps
mov
xor
add
sbb
add
jl
pop
jl
add
adc
lods
repnz
ja
xor
(bad)
sahf
dec
not
(bad)
add
xchg
lds
lea
jne
loope
rcr
ficomp
sub
hlt
jecxz
xchg
imul
jns
push
mov
icebp
lods
adc
int3
mov
mov
stos
push
add
sbb
jp
movs
into
ret
sbb
pushf
mov
mov
xor
pop
jmp
dec
mov
or
mov
lods
sub
bound
loop
xor
mov
mov
mov
add
(bad)
push
fsub
cwde
or
pop
adc
xchg
dec
jbe
leave
sbb
jp
dec
lods
sub
(bad)
aaa
add
mov
in
in
mov
mov
xor
mov
mov
data16
mov
aas
dec
shl
push
sar
fcmovbe
adc
das
push
fisub
aas
jl
mov
mov
cmp
sub
adc
in
icebp
clc
push
adc
sbb
push
test
inc
dec
lods
mov
sbb
(bad)
in
xor
sub
jb
es
je
xchg
cmp
inc
pop
mov
repnz
shl
ds
jo
(bad)
sub
cwde
sub
push
adc
mov
push
dec
or
pop
mov
sub
adc
rcr
aad
inc
jb
inc
jl
push
jmp
cmp
push
mov
xor
sub
adc
hlt
sbb
jl
pushf
(bad)
lock
ss
and
add
ror
ret
lock
retf
adc
or
inc
mov
retf
jp
lahf
loopne
sahf
rcr
fcom
xchg
test
xor
push
mov
add
loope
mov
ret
retf
push
shl
test
adc
dec
cmps
adc
add
stos
loope
fdiv
inc
inc
jge
adc
out
add
jb
bound
pop
jbe
js
adc
pop
and
cld
sar
loopne
in
cmp
and
xor
cmps
add
in
adc
(bad)
call
es
fcomp
not
xor
mov
add
mov
jae
pop
sbb
in
loop
adc
ror
popa
mov
cdq
push
retf
cmp
sar
push
fdivrp
repz
xor
sub
push
push
aas
cwde
inc
fisub
sub
adc
lods
out
sti
outs
push
xchg
push
pop
lods
pop
mov
pop
adc
add
inc
mov
mov
pop
push
rcr
repnz
cld
(bad)
mov
mov
inc
loop
jmp
dec
cmp
jp
sbb
push
dec
in
fadd
repz
out
aam
xor
outs
das
mov
push
add
outs
jg
mov
pop
mov
jnp
sub
jg
pop
mov
lods
fxch
and
and
cmc
mov
sbb
cmps
add
push
lods
ins
popf
xchg
xor
inc
push
out
pop
and
test
stos
cmp
arpl
adc
dec
enter
push
movs
pop
bound
adc
(bad)
paddusb
inc
inc
sub
sub
fwait
inc
dec
(bad)
repz
arpl
rcl
test
sar
mov
xchg
or
movs
or
arpl
arpl
sub
add
xor
inc
fnsave
enter
lods
retf
pop
loopne
mov
loop
mov
test
or
jo
push
cld
or
adc
push
sub
fsub
std
sub
retf
arpl
sti
push
dec
or
sahf
sub
xchg
cmc
sbb
xor
(bad)
mov
int3
fisubr
adc
mov
iret
add
pop
pop
aam
xchg
in
arpl
add
and
xchg
adc
sbb
jno
or
xor
cmp
arpl
inc
xchg
cs
int3
shl
pop
addr16
jb
xchg
sbb
sbb
sbb
loop
nop
cmp
mov
adc
loope
sti
sbb
test
sub
xchg
pop
test
add
push
pop
sub
sub
call
mov
cwde
rol
adc
push
jecxz
sahf
ja
(bad)
movs
dec
bound
inc
in
jb
jns
adc
inc
test
dec
mov
lock
daa
adc
repz
jle
cmp
ret
adc
xor
mov
arpl
lods
mov
push
jne
dec
dec
add
adc
xchg
push
fadd
adc
or
enter
dec
out
arpl
jno
ss
mov
jp
inc
xor
rol
adc
push
push
mov
mov
fs
pusha
fcmovu
hlt
push
std
mov
or
imul
imul
loope
shr
leave
ror
inc
int3
cwde
push
dec
cmp
out
loop
jl
ja
(bad)
js
pop
loop
adc
and
mov
sar
dec
ins
aaa
cmp
mov
outs
shl
or
fnsave
push
jo
mov
call
mov
jae
retf
in
jne
adc
adc
mov
outs
out
xor
callw
sbb
xor
sbb
scas
or
leave
sub
or
add
ss
sub
inc
dec
adc
inc
push
repnz
movs
xchg
ss
mov
shr
pushf
mov
popf
pop
sub
push
jae
inc
(bad)
dec
mov
pop
fidiv
adc
push
dec
and
jo
push
xor
out
call
rcr
int
xchg
call
xchg
hlt
neg
inc
push
pop
bnd
pop
int
add
add
cmps
outs
mov
js
fs
and
mov
adc
push
cwde
pop
fwait
cmp
ret
cmp
add
mov
add
push
cli
(bad)
int3
aas
sti
xor
fidivr
das
mov
xor
bound
lods
mov
jle
mov
pop
in
aam
add
and
cmp
rcr
or
out
(bad)
stc
(bad)
hlt
xor
adc
sti
inc
dec
aad
mov
cmps
or
mov
sub
inc
mov
scas
or
and
inc
inc
adc
retf
fisubr
lods
sub
loope
in
mov
inc
loop
sbb
js
xchg
neg
in
jmp
and
aas
dec
test
mov
jb
mov
sahf
pushf
push
js
pop
mov
lahf
and
jmp
cmp
add
inc
aaa
push
pusha
lods
xchg
dec
test
push
sub
aaa
sub
jmp
jmp
push
xlat
mov
in
mov
fidiv
lods
pop
stc
and
fmul
call
pop
push
data16
lods
adc
mov
jno
les
mov
ret
dec
movs
imul
mov
test
rol
inc
ds
out
cwde
cmps
aas
cmp
pushf
and
aad
push
rcl
sub
(bad)
jb
cld
jo
sbb
jne
sbb
and
and
ret
mov
mov
shl
sub
xor
jle
push
hlt
push
call
mov
xchg
hlt
pushf
push
or
mov
pop
cmp
outs
mov
or
inc
push
sub
xchg
in
pop
ret
lea
rcr
xor
add
pop
push
cmp
mov
jb
inc
inc
and
push
std
and
dec
int
jp
stos
jle
scas
call
xchg
dec
xchg
sbb
test
jne
out
leave
mov
lods
dec
pop
mov
movs
dec
in
lods
xchg
arpl
das
je
pop
jns
cmps
das
mov
(bad)
pop
aam
popa
pop
pop
std
stc
in
call
adc
in
or
ins
bound
inc
cmp
mov
iret
push
or
mov
dec
pusha
data16
pop
mov
fs
sahf
mov
addr16
int
(bad)
rcr
(bad)
fs
daa
ins
out
mov
retf
jae
cld
push
ins
leave
lods
mov
adc
outs
movs
mov
out
xor
hlt
fdivr
xor
adc
les
fdiv
(bad)
(bad)
sub
movs
xchg
shl
inc
lods
test
icebp
fidivr
out
bound
mov
jns
cmp
fnstcw
dec
out
push
jp
repnz
sub
mov
xchg
(bad)
push
mov
adc
int
imul
enter
push
das
clc
(bad)
xchg
push
outs
int3
shr
mov
ins
sar
setp
mov
into
and
cs
sub
hlt
mov
mov
adc
pop
(bad)
pop
mov
jae
movs
xor
push
adc
jge
scas
repnz
fist
hlt
pop
and
mov
mov
inc
mov
cmp
std
xor
sbb
sbb
stc
mov
and
push
mov
mov
mov
or
iret
imul
js
pop
mov
repnz
fidivr
scas
push
mov
repnz
xchg
sub
xchg
fst
loopne
aam
mov
push
sub
dec
xlat
mov
jle
mov
xor
es
adc
in
mov
out
ret
mov
pop
clc
es
(bad)
out
into
rol
mov
sub
cmp
and
inc
test
pushf
xor
xor
mov
cwde
rcr
ja
mov
mov
inc
in
cmp
push
adc
repz
adc
inc
pop
aaa
(bad)
repnz
je
or
push
out
adc
sub
mov
push
push
mov
into
xor
sahf
shr
das
sub
sub
test
arpl
outs
mov
mov
xchg
cdq
or
inc
int3
xor
sar
pop
std
cwde
daa
cmp
xchg
arpl
pop
scas
mov
jae
inc
clc
mov
shl
jle
in
pop
sub
mov
mov
push
xchg
jo
retf
cmp
repnz
mov
fdivr
xor
pop
call
arpl
dec
or
ret
mov
cmp
inc
mov
jge
dec
pop
js
mov
xchg
ss
scas
adc
jno
enter
addr16
sbb
jno
mov
test
cmp
arpl
popf
inc
cmp
fisubr
pusha
pop
mov
out
mov
fsub
jmp
iret
jbe
jo
cmp
push
add
xor
mov
push
sub
arpl
jno
pop
lods
ror
inc
je
pop
pushf
and
sub
jbe
jno
sub
clc
mov
das
or
int
data16
std
cmps
sar
loop
cmp
pop
popf
in
xchg
mul
cmp
inc
pop
dec
fisubr
lock
das
push
and
sub
ins
xchg
mov
in
out
fild
jmp
retf
push
movs
in
into
inc
xchg
sbb
pcmpgtw
mov
or
cmp
fbstp
fbld
addr16
and
and
in
icebp
enter
jge
adc
mov
xchg
loope
sahf
and
xor
adc
pop
push
xchg
mov
das
or
not
pop
or
sub
aam
inc
pusha
mov
pop
sbb
test
fucom
cwde
stos
into
adc
enter
cwde
push
jg
sbb
dec
lea
inc
or
adc
xor
add
sub
lea
or
mov
sub
repnz
mov
in
ins
aad
jnp
mov
pop
aaa
loope
push
jmp
into
shl
out
ret
and
push
inc
fnstenv
pop
sub
jecxz
xrelease
and
cmp
pop
mov
les
enter
mov
push
adc
cmp
mov
rcl
xor
loop
xor
add
in
sub
add
inc
jle
adc
cs
jmp
out
or
pop
sub
out
or
xchg
inc
fsubr
and
hlt
sbb
add
cmp
jno
aam
js
jmp
cli
je
ds
lea
int3
dec
(bad)
sbb
xlat
pop
out
fild
popf
aad
aas
mov
mov
mov
or
pop
jns
mov
jl
jno
fsubr
ins
jmp
mov
sbb
sbb
gs
xchg
test
cmps
ficom
xchg
add
jge
xchg
add
ret
push
jmp
lods
push
in
ficomp
xor
xchg
lock
xlat
stos
fiadd
retf
push
(bad)
cmps
mov
jo
je
cs
mov
cs
sbb
mov
outs
adc
push
pushf
sub
(bad)
sub
xor
aad
jle
inc
cmp
cdq
rep
xchg
int
scas
xor
xchg
fld
out
mov
add
js
repnz
xchg
lods
pop
jl
mov
mov
pop
in
add
int3
call
shr
arpl
not
pop
cdq
and
dec
add
lods
icebp
and
dec
addr16
dec
je
dec
inc
jg
movs
adc
movs
or
mov
lea
jne
pop
bound
and
repnz
adc
jge
pop
pop
push
and
call
push
push
js
cmp
sbb
xchg
je
dec
(bad)
jns
mov
add
cwde
std
adc
push
pop
es
or
daa
in
adc
call
mov
sar
push
test
retf
repnz
cs
cmovg
test
push
cmp
repnz
imul
iret
lahf
into
mov
shl
loop
push
pop
mov
push
pusha
test
mov
movs
lock
(bad)
outs
jecxz
jns
sub
and
(bad)
int3
jmp
adc
push
push
repz
mov
xor
(bad)
enter
pop
mov
push
jae
and
(bad)
icebp
inc
movs
fs
test
adc
adc
addr16
lods
sub
rol
push
mov
scas
scas
(bad)
mov
and
dec
(bad)
out
dec
dec
inc
call
data16
fcom
cmc
cmp
sub
nop
or
call
arpl
fdiv
pop
mov
cli
lock
test
sub
mov
(bad)
stc
test
mov
cmp
cli
sub
stc
cmp
out
sbb
sbb
outs
sbb
adc
push
(bad)
pop
ds
leave
adc
ja
addr16
mov
sub
adc
mov
fcom
cmp
push
aam
dec
cli
mov
inc
addr16
stc
jmp
sub
dec
jae
enter
in
push
es
pop
inc
lock
sub
rcl
ss
(bad)
dec
movs
lods
ss
in
jmp
xchg
clc
lods
ja
xor
iret
fcomp
adc
add
sub
adc
cli
fsubr
xor
push
or
inc
test
(bad)
iret
cli
xor
inc
shr
jae
xor
dec
in
rcr
pop
xchg
rcl
fiadd
ret
xor
xor
mov
dec
xchg
arpl
mov
sbb
mov
stos
dec
adc
jge
imul
mov
dec
fmul
mov
or
mov
ret
jge
or
push
fwait
or
jbe
inc
mov
mov
pop
ret
add
sbb
faddp
push
in
mov
loope
push
hlt
push
bound
push
(bad)
sub
pop
adc
and
dec
mov
aas
fisub
in
mov
icebp
or
add
inc
cmp
mov
jae
inc
clc
mov
xor
int3
mov
shr
retf
jecxz
pop
fcomip
xor
frstor
push
movs
sar
aas
icebp
xchg
cwde
push
and
mov
pop
cdq
and
mov
pop
push
pop
or
fwait
push
and
inc
jmp
inc
pop
pusha
or
test
xchg
adc
ins
sub
call
ss
ins
loop
mov
sbb
fs
into
bound
icebp
add
push
(bad)
out
enter
bound
adc
push
je
dec
xor
ja
(bad)
cmp
enter
adc
(bad)
or
ss
sub
cmp
stc
sbb
adc
adc
nop
pop
and
rcl
jg
push
xchg
mov
fsubr
inc
retf
sub
jbe
and
jb
js
icebp
cdq
test
dec
xor
mov
cmp
lds
repz
mov
aad
scas
fcomp
mov
cmp
mov
adc
or
mov
loop
arpl
fadd
add
push
fnstsw
sbb
push
inc
scas
fcomp
mov
mov
mov
xchg
div
and
icebp
and
add
fld
sub
enter
cld
or
mov
das
pop
lea
out
inc
mov
clc
xor
iret
dec
xlat
push
retf
mov
jo
dec
pop
cmp
xor
xor
xchg
xchg
fmul
lods
jmp
and
sbb
jg
out
adc
mov
pop
cld
mov
mov
mov
mov
and
xchg
div
cmp
or
jmp
sbb
cmp
cmps
push
fidivr
cli
popa
outs
xchg
cld
and
xor
icebp
clc
lds
enter
ret
out
nop
add
and
outs
pop
test
mov
in
xchg
adc
in
dec
push
jnp
lds
jecxz
mov
sub
pop
xchg
rcl
jle
cmp
pop
xchg
loop
adc
or
fcom
xor
bound
cmp
pop
imul
stc
in
xchg
xchg
sub
mov
out
aad
sbb
inc
pushf
mul
adc
and
outs
jns
psubusw
mov
xor
sbb
stos
inc
push
pop
inc
cmp
push
sahf
fwait
jmp
ret
sub
jle
sbb
jl
push
mov
mov
inc
aam
xor
pop
fwait
arpl
nop
fdiv
inc
into
jns
xor
or
adc
mov
xor
xlat
imul
sbb
bnd
sbb
test
adc
arpl
int
mov
shl
push
gs
std
aad
mov
xor
mov
jo
ret
fcom
fbstp
mov
xor
stc
dec
add
xchg
mov
fucompp
add
or
das
aas
xchg
loop
cli
xor
ds
pushf
mov
mov
mov
cdq
mov
data16
jp
mov
cmp
fs
scas
mov
pop
cmps
mov
mov
ret
test
push
(bad)
jo
inc
data16
adc
and
repz
xor
fbstp
ds
dec
lds
lods
adc
or
out
mov
inc
or
out
retf
jg
call
ds
dec
shl
jl
test
in
xor
mov
push
inc
sub
call
cmc
mov
ins
cmp
stos
fsubr
cli
pop
mov
in
mov
inc
cmp
mov
(bad)
xor
mov
lods
(bad)
pop
pop
mov
out
xor
rcl
pop
rcr
inc
scas
sub
jge
cdq
fs
jnp
pop
rcl
sub
dec
jmp
xchg
out
cmps
and
sub
dec
or
mov
adc
inc
or
sub
lea
cmp
mov
popa
add
ss
outs
push
mov
mov
out
and
add
inc
pop
out
sbb
push
fsub
cli
jg
adc
loop
int
add
jno
outs
pushf
int
or
lahf
push
ret
sub
inc
mov
cmp
ret
call
xchg
std
sub
pop
inc
push
adc
push
jne
jmp
pop
adc
dec
bound
add
xchg
add
dec
pop
push
jo
retf
lods
jmp
or
add
loop
pop
shl
cmp
jo
mov
in
sahf
lea
and
nop
(bad)
adc
cmp
cwde
jl
sub
mov
sbb
stos
outs
pop
inc
data16
femms
leave
dec
pop
mov
icebp
stc
xor
(bad)
or
shr
mov
add
mov
ror
mov
hlt
(bad)
xchg
fs
jle
int3
or
out
inc
xlat
pop
adc
rcr
xor
inc
adc
mov
popf
rcl
xchg
mov
(bad)
push
mov
pop
jmp
lds
inc
cld
or
add
pop
in
pop
inc
pop
cs
cmps
xchg
in
scas
xor
cmp
das
out
std
xchg
outs
inc
iret
sub
mov
cld
into
ret
add
xchg
add
mov
test
cmc
jbe
outs
fsubr
fsubr
pusha
push
repnz
mov
in
shl
pushf
daa
test
ror
lods
and
xchg
mov
xchg
ret
ins
aad
ins
ret
mov
test
inc
das
or
movs
in
int3
pop
jb
jo
outs
mov
js
gs
mov
test
std
cdq
pop
sbb
sbb
and
repnz
cmp
jge
sbb
arpl
sub
mov
push
pop
xor
cmps
hlt
and
add
mov
lahf
xchg
sub
adc
fld
sub
lods
mov
fwait
bound
adc
loop
push
jmp
cmp
das
cmps
das
mov
sbb
mov
lea
mov
in
into
aas
fsubr
mov
xor
sub
dec
and
jo
les
jbe
cmp
fnsave
popa
imul
pop
sar
add
xor
jbe
pusha
mov
rol
jmp
mov
xor
js
scas
rcr
mov
cmp
inc
pop
mov
add
sbb
popf
cdq
je
jg
jbe
cmp
or
xor
and
inc
jle
inc
arpl
mov
addr16
lods
and
mov
(bad)
mov
rcl
bound
mov
cwde
shl
xchg
mov
jbe
in
shr
jg
pop
cmp
inc
lea
jle
mov
fimul
mov
vaddpd
mov
ins
and
sub
test
mov
inc
(bad)
out
cmp
stc
xor
inc
fcom
repnz
in
mov
or
push
mov
ret
sub
push
dec
sub
and
sahf
inc
and
pop
loope
xchg
push
jmp
pop
ret
pop
cmc
jae
dec
imul
jl
jle
dec
cli
xor
mov
cmp
test
pop
dec
mov
shl
std
inc
mov
mov
ret
imul
aaa
ret
popa
push
les
bound
pop
into
sub
popa
es
mov
xchg
rcr
shr
push
adc
inc
in
mov
push
in
pop
jb
sub
xchg
(bad)
lds
jmp
cmp
or
icebp
enter
adc
pop
fwait
pusha
idiv
cmp
stos
dec
dec
into
jg
inc
cmp
mov
xor
and
test
data16
dec
loop
push
out
mov
mov
push
xor
inc
cs
jl
xchg
test
scas
xor
xchg
or
imul
and
shl
loop
(bad)
mov
inc
out
aam
mov
dec
call
sub
jmp
jl
mov
ins
jb
imul
std
add
retf
sub
sbb
std
sub
mov
jb
fs
out
aad
aas
popa
xchg
outs
or
jb
jns
and
stos
adc
sub
cmps
js
sub
and
adc
mov
outs
mov
and
jne
in
xor
adc
sub
es
lock
retf
retf
add
inc
inc
xor
jbe
ret
call
xchg
and
fdiv
inc
clc
jo
retf
cmps
mov
(bad)
sahf
jmp
push
xor
and
mov
xchg
pop
add
xor
sti
dec
call
and
add
cmps
mov
pushf
dec
mov
push
pop
mov
vcvtusi2sd
add
int3
fdivp
ret
(bad)
movs
sahf
cmp
sub
add
iret
push
cmc
ror
and
fidivr
cmp
ret
pop
pop
jl
inc
in
jae
in
adc
mov
adc
dec
push
add
ret
sbb
jmp
inc
push
idiv
mov
push
pushf
adc
fidivr
cmps
xchg
out
add
call
add
or
repnz
push
fs
xchg
mov
icebp
dec
loop
xchg
fisttp
popa
mov
pop
jb
rcl
mov
mov
repnz
dec
in
mov
lock
sbb
mov
push
out
mov
rcl
or
adc
rcl
and
adc
rol
push
cmp
sub
ins
jle
push
xor
add
and
sar
pop
push
imul
loop
xchg
ret
lods
jmp
retf
adc
or
loop
aad
add
push
int3
shr
aam
adc
mov
ret
jge
sub
and
fisubr
ds
sbb
xor
xor
stos
ret
and
cli
mov
shr
push
mov
or
push
jge
fs
pop
movs
addr16
mov
inc
xchg
std
push
outs
dec
sbb
in
push
fisub
test
rol
loopne
rol
cmp
sub
mov
loopne
test
jb
adc
adc
mov
push
jmp
xor
les
cmp
mov
pop
xor
in
popfw
cmp
rol
sbb
push
shl
test
dec
adc
push
daa
and
cmp
pop
popa
or
add
div
and
popf
jns
lea
mov
push
pop
outs
xor
sbb
sub
push
dec
xchg
mov
call
mov
sbb
cmp
and
sbb
add
shr
lock
inc
push
pop
sub
push
sub
adc
push
div
out
shl
adc
or
repz
push
xchg
pop
mov
and
and
mov
aas
mov
in
es
lods
push
sbb
inc
xchg
jmp
jo
inc
mov
inc
out
shl
dec
fld
clc
neg
xchg
out
mov
pop
jge
sbb
lea
stos
pop
jno
mov
mov
loope
or
in
cmp
mov
and
push
ja
lods
or
mov
sub
mov
xor
jbe
les
(bad)
shl
mov
mov
sar
popa
stc
mov
repnz
adc
mov
cmp
xor
xor
in
fldl2t
mov
mov
in
dec
cmps
loope
lock
pop
jp
into
add
adc
sbb
lods
ror
jne
mov
fs
and
mov
rcr
sbb
inc
xchg
mov
mov
sbb
sti
pop
mov
xchg
push
jbe
inc
(bad)
push
mov
clc
inc
pop
xor
shl
rdpmc
jb
cmp
stos
adc
loopne
pop
popf
mov
in
int3
sub
neg
pusha
into
popf
sub
loopne
push
call
inc
pushf
iret
fist
pusha
mov
pop
add
mov
mov
stos
xchg
adc
jnp
xchg
out
in
int
jl
xor
mov
pop
xchg
jne
scas
xchg
jno
adc
mov
and
and
cmps
xor
pop
mov
mov
cmps
mov
in
sti
loopne
dec
das
mov
mov
jl
sbb
cmp
add
add
faddp
jl
dec
jmp
dec
jb
out
lock
dec
cmp
mov
fcomi
es
or
sub
stc
jmp
or
outs
sbb
jb
daa
lds
loope
ds
repnz
mov
sahf
loope
aam
inc
jae
ja
inc
jp
fisubr
xor
and
fsubr
enter
lods
fst
xchg
inc
xchg
mov
retf
jecxz
mov
out
cld
jge
adc
in
push
push
xor
xchg
dec
cmp
mov
or
mov
xor
rol
xlat
jp
cld
and
rcr
in
ret
cdq
stos
add
movs
call
hlt
scas
stc
mov
fst
fisubr
sub
add
arpl
lods
bound
mov
inc
cmp
jb
addr16
sbb
jo
sbb
outs
ja
adc
cmps
dec
or
call
sub
xor
adc
movs
cs
push
lods
test
(bad)
jp
mov
mov
hlt
adc
or
xchg
in
addr16
dec
and
repz
repnz
mov
xchg
mov
or
addr16
inc
pop
clc
mov
and
add
cmps
push
sub
jnp
fwait
dec
pop
dec
sub
std
or
push
mov
sbb
inc
cmc
and
sub
add
sbb
push
push
imul
ret
icebp
jg
into
fst
pop
cld
dec
inc
adc
(bad)
and
pushf
loop
mov
jecxz
test
lea
or
xor
sub
outs
pop
cmp
call
mov
or
leave
inc
sub
(bad)
push
lods
ret
in
scas
fs
or
mov
sub
dec
repnz
repz
call
shl
jge
ins
lods
xor
cld
out
mov
mov
jecxz
ins
push
pop
jge
sub
retf
outs
ficom
cmp
sbb
fisttp
leave
and
ins
xchg
xchg
test
mov
shl
mov
int
(bad)
mov
daa
out
push
fsubp
or
dec
mov
jl
or
fwait
xchg
fucomi
int
cs
sub
pop
in
xchg
pop
mov
or
mov
or
ficomp
push
mov
bswap
stc
pusha
sbb
fadd
xlat
movs
stos
rcr
or
and
(bad)
in
add
add
jl
loopne
or
cmp
sbb
ins
daa
add
ds
cmp
xor
pop
ret
in
and
int3
leave
xlat
movs
push
dec
mov
popa
xchg
xchg
in
jne
and
cmp
inc
sbb
addr16
xchg
pop
sub
jae
and
and
or
pop
repz
push
into
and
pop
xchg
cmps
int3
int
push
cmps
sbb
mov
cmp
pop
stos
jae
dec
scas
clc
or
ins
cmp
movs
das
clc
cmp
lods
test
xchg
xor
int3
xor
ror
test
lods
mov
loope
loop
xor
xor
sub
hlt
push
pop
scas
hlt
cmp
arpl
jmp
(bad)
icebp
add
jo
cmp
sub
mov
xchg
xor
(bad)
clc
dec
inc
or
rcl
rol
into
(bad)
or
jecxz
not
xchg
jle
mov
xchg
scas
in
push
mov
mov
jl
or
jge
lods
add
pop
push
mov
mov
adc
pop
lock
or
or
add
repnz
or
dec
test
sbb
iret
add
jno
hlt
enter
ret
lock
pop
and
xor
ret
dec
xor
dec
inc
mov
out
or
das
jbe
xchg
or
rcr
dec
push
jmp
movs
xchg
pop
push
add
pop
js
xchg
repz
jb
dec
mov
es
hlt
push
adc
in
and
jmp
push
cs
data16
sbb
xchg
mov
shr
in
mov
xor
lods
jne
test
xchg
push
sbb
xor
push
adc
aas
ins
cmp
out
shr
mov
int
push
dec
out
data16
xor
lea
push
xchg
jno
popf
mov
mov
pushf
hlt
cmp
cli
add
add
aas
pop
rol
repz
daa
not
call
enter
xor
ja
mov
fdiv
int3
push
fist
repnz
jbe
xchg
adc
or
ds
cmps
das
mov
shr
icebp
pusha
lods
xchg
lock
inc
test
push
mov
mov
std
bound
xchg
cld
out
das
cmp
scas
sub
repnz
sbb
push
lods
fistp
cmp
outs
hlt
add
mov
inc
cs
pop
movs
cmps
imul
pop
dec
jmp
pop
bound
arpl
stos
bound
push
cmp
sub
movs
push
test
add
add
adc
je
adc
dec
dec
pop
ds
aad
nop
cmps
pushf
jmp
shr
fcom
mov
inc
xlat
lods
inc
sar
or
mov
sahf
in
cmp
adc
in
pop
mov
jge
js
inc
mov
or
lods
inc
xor
or
cld
adc
bound
push
ret
xchg
add
dec
scas
cmps
xchg
(bad)
popa
xchg
or
lock
jbe
and
lods
or
or
cmp
pusha
std
repz
stos
push
jbe
test
das
ret
mov
out
dec
stos
add
into
or
jae
movs
sbb
fimul
imul
push
pop
test
xor
loop
inc
sub
jo
ss
inc
xor
mov
test
aaa
or
call
ficomp
or
int3
(bad)
out
adc
stos
jle
stos
mov
sti
mov
aad
(bad)
fsub
pop
push
sbb
sub
rcr
push
mov
aaa
aas
adc
in
mov
mov
lock
xchg
std
or
jne
in
add
(bad)
aaa
imul
xchg
adc
push
mov
jnp
xchg
mov
push
aam
cli
shr
xchg
js
dec
xor
mov
int
fsub
jl
mov
sbb
mov
std
jb
mov
shl
sub
pop
rcl
fs
(bad)
adc
mov
sbb
(bad)
adc
cld
xor
aaa
sti
add
fdivr
pop
and
aad
pop
sub
inc
out
push
or
dec
xchg
or
call
adc
loopne
retf
out
pop
pop
adc
cs
and
sbb
or
data16
mov
outs
mov
in
or
pusha
test
in
aad
xor
sub
adc
fbld
std
ss
in
(bad)
or
and
inc
je
ds
xor
hlt
cmp
(bad)
xor
fwait
add
je
sbb
rcl
lods
ins
mov
(bad)
loope
pop
mov
push
test
pushf
leave
stos
xor
mov
imul
jmp
mov
adc
adc
mov
into
mov
mov
leave
push
sbb
shr
lock
repnz
inc
loopne
pop
out
mov
cli
or
sub
adc
jmp
test
pop
(bad)
push
iret
cmps
dec
push
jg
retf
or
push
mov
mov
pop
outs
dec
lods
aad
outs
mov
shr
retfw
sbb
add
ins
shr
jo
cmp
xchg
sbb
mov
std
jecxz
ret
dec
call
out
and
pop
add
mov
and
mov
jecxz
jecxz
pusha
mov
pop
stos
fimul
jmp
pusha
sub
xchg
pushf
jecxz
jne
inc
movs
lds
ja
inc
sub
cmc
xor
jb
inc
lods
ficomp
mov
cld
inc
dec
inc
fild
int
cmp
push
stos
or
push
into
(bad)
sbb
pop
xor
das
pop
imul
in
mov
mov
scas
dec
dec
fld
shl
pop
addr16
push
test
scas
cmp
cmp
pushf
in
push
pushf
and
adc
imul
sbb
stos
mov
stc
xchg
jmp
cmp
mov
ret
ins
arpl
jle
pop
int3
push
pop
sbb
inc
clc
adc
rcl
adc
sbb
stos
enter
add
cmp
div
push
xor
push
or
in
adc
xor
clc
sbb
dec
(bad)
xor
add
mov
and
and
pop
xor
cld
lods
pusha
stos
push
jae
push
stc
jbe
test
mov
or
jbe
stos
mov
bound
mov
jmp
arpl
movs
lds
add
pop
das
fwait
js
or
xchg
sbb
pop
sub
add
sar
enter
mov
and
pop
xlat
retf
out
xor
and
dec
add
push
cmps
outs
xchg
push
jb
xchg
in
pushf
mov
fs
cmp
cmp
ss
xor
aad
inc
scas
lods
jo
xchg
sub
mov
lods
dec
inc
add
pop
ficomp
xor
push
adc
out
mov
ss
bound
retf
mov
sub
int3
fs
clc
jl
sub
push
(bad)
outs
jbe
inc
add
xor
data16
ins
sub
mov
mov
inc
dec
call
ins
adc
aas
jmp
xchg
push
inc
enter
(bad)
mov
loop
add
je
mov
jo
lock
push
cld
popa
jmp
arpl
cmp
outs
mov
fst
or
add
(bad)
je
xchg
add
and
add
fs
lea
cmp
bound
mov
sbb
dec
pushw
(bad)
cld
pop
imul
jecxz
in
pusha
mov
je
xor
cmp
mov
or
and
iret
aad
enter
imul
push
cli
adc
jb
xchg
push
sbb
sub
mov
push
imul
ret
outs
int
outs
lea
test
out
jle
in
mov
out
das
sbb
test
add
fdiv
test
std
jmp
sub
out
popa
xchg
lea
xchg
mov
xor
ds
outs
sub
xchg
mov
add
pop
jl
xchg
addr16
retf
lods
jmp
and
push
lock
ret
mov
jmp
push
or
inc
lods
push
leave
mov
xor
fnsave
push
cmp
and
shl
mov
xchg
ret
mov
sbb
call
and
mov
or
push
push
in
push
sub
jp
adc
mov
jp
retf
hlt
pushf
mul
add
jg
arpl
xor
xor
sbb
ret
rcr
sub
inc
into
jne
mov
icebp
adc
pop
add
mov
adc
push
push
fisubr
adc
cmp
jb
rol
outs
fldlg2
seta
iret
or
lock
xchg
sbb
or
repnz
adc
pop
call
add
paddb
and
inc
jge
pop
in
push
nop
push
lods
and
bound
shr
fwait
xchg
inc
mov
xchg
loopne
bound
xlat
dec
mov
xchg
cmc
and
rcl
ins
lea
dec
cmp
adc
sub
pop
inc
jl
(bad)
xor
xor
fucomip
loopne
lock
cmp
or
dec
xor
int
dec
call
test
cmp
xchg
sbb
sbb
xchg
(bad)
(bad)
mov
stos
xor
adc
jp
popa
or
and
push
int3
retf
in
arpl
(bad)
leave
test
mov
cmp
push
jecxz
int3
inc
in
daa
imul
sub
push
gs
mov
or
mov
adc
and
loop
shl
test
push
jl
pop
xchg
xchg
mov
or
fild
push
xor
adc
adc
and
mov
mov
sbb
sub
adc
push
adc
xor
cmp
cmp
push
daa
loop
dec
pop
and
in
dec
test
in
xchg
push
ret
outs
retf
ins
mov
sub
or
cmp
fimul
ins
loopne
retf
cmp
ret
dec
and
xor
shl
mov
lahf
jbe
jecxz
lahf
int
fstp
xchg
and
jae
xor
in
inc
mov
add
fnsave
ret
(bad)
movs
clc
es
jb
popf
cld
pop
bound
into
in
pop
(bad)
fimul
jbe
push
lods
(bad)
and
mov
frstor
jnp
jmp
mov
jnp
jge
add
inc
mov
aam
out
retf
shl
mov
scas
push
fs
xor
mov
jnp
icebp
push
in
add
test
mov
xor
and
pop
out
das
mov
cld
xlat
cmp
lods
mov
aam
aam
or
cmp
(bad)
out
mov
mov
xor
out
pusha
test
mov
stc
xor
pop
cmp
jmp
test
in
xor
in
(bad)
(bad)
and
sbb
xchg
pop
push
mov
or
mov
sahf
out
mov
hlt
xchg
push
mov
mov
arpl
shr
shl
bound
mov
cmp
and
je
pop
scas
aad
aad
cmp
hlt
pop
loope
out
push
xchg
dec
dec
or
mov
sti
adc
cdq
push
jg
stos
aas
shl
je
pusha
xor
scas
push
inc
int3
into
ficomp
ret
mov
jge
mov
xchg
daa
jle
adc
neg
popf
pop
push
mov
fistp
sub
sub
mov
pop
ret
jge
xor
std
mov
(bad)
gs
aas
push
in
jbe
add
loop
inc
mov
in
dec
xchg
push
loop
retf
and
ret
mov
adc
mov
loop
jo
and
mov
push
inc
into
push
mov
xchg
leave
jb
mov
push
(bad)
pop
sub
xchg
call
jg
xor
(bad)
lock
xor
mov
adc
jmp
fild
lods
inc
test
arpl
and
std
xor
push
sbb
jnp
fld
lea
mov
jmp
mov
dec
dec
test
rcr
daa
bnd
mov
push
test
and
add
adc
and
mov
mov
and
cmp
add
mov
lock
pop
inc
test
cmp
fsub
mov
jno
loop
sbb
inc
jg
sbb
mov
in
sbb
shr
popa
movs
push
cwde
push
std
sbb
mov
xchg
xor
jle
in
push
xchg
add
add
mov
and
ret
neg
push
mov
cmp
push
ret
popa
clc
(bad)
fild
movs
rol
inc
or
sbb
int
pusha
cmps
mov
lods
in
mov
aam
in
(bad)
jbe
mov
div
imul
ret
das
idiv
dec
mov
popa
adc
sbb
ret
add
repnz
test
imul
pop
and
and
adc
je
mov
pop
dec
mov
xchg
sbb
jbe
(bad)
out
jg
xor
int3
ffree
rol
(bad)
mov
sbb
inc
xor
inc
bound
test
push
outs
jl
cli
cmps
dec
cdq
jp
mov
fisttp
sti
xor
stc
cmp
in
jp
cmc
cmps
pop
fistp
aad
push
rcr
xor
push
lods
mov
cdq
out
or
jle
in
(bad)
sub
xor
sti
push
in
rcl
and
jmp
cwde
je
adc
pop
inc
jp
(bad)
jl
inc
pop
dec
push
dec
xor
xor
or
test
lahf
sar
inc
(bad)
mov
pop
or
fidivr
shl
arpl
dec
add
movs
mov
xor
add
adc
jb
js
sbb
mov
cdq
mov
lea
scas
mov
or
xchg
out
adc
lock
mov
cmc
or
xchg
mov
mov
mov
sti
(bad)
xor
icebp
into
loopne
xor
sub
add
loopne
mov
jb
add
pop
(bad)
pop
inc
mov
mov
pushf
lods
push
repnz
mov
pop
sub
or
jns
test
leave
shl
inc
xchg
inc
mov
in
sub
push
xchg
mov
std
icebp
fisub
or
lods
cmps
adc
jnp
dec
test
ja
repz
sbb
popf
push
stc
push
js
sub
push
sub
in
jge
push
test
inc
(bad)
and
adc
mov
scas
sub
sub
sub
pop
in
cli
push
ret
clc
retf
dec
push
inc
movs
mov
xlat
gs
repz
inc
iret
or
dec
pop
fdiv
or
daa
xchg
jecxz
mov
adc
hlt
xchg
int
cs
ins
enter
dec
aas
sbb
fadd
mov
adc
sbb
test
test
(bad)
xor
sub
pusha
xchg
mov
into
pop
std
dec
mov
retf
xchg
pop
repnz
push
aam
mov
mov
jae
mov
in
add
mov
push
cmp
add
imul
jae
fs
pushf
mov
rol
push
jae
add
jmp
out
dec
in
in
jp
pop
in
popf
test
dec
lds
mov
adc
fistp
shl
(bad)
jmp
std
add
pop
dec
rcl
int
sub
pop
inc
shl
loop
mov
and
cwde
cld
repz
je
mov
or
pause
sub
ret
xchg
leave
jo
mov
fisttp
rcl
push
and
or
cli
push
iret
cmp
pusha
xchg
push
push
sub
ja
xor
loope
shr
dec
xchg
add
loopne
ins
fst
push
xchg
add
inc
dec
das
rcl
imul
pop
push
pusha
fcmovbe
jecxz
xchg
xor
sub
dec
xor
aad
leave
inc
daa
repnz
fdiv
rcr
in
cmp
inc
and
sbb
loopne
fcom
jo
pop
fisttp
dec
psrad
pusha
into
xchg
mov
mov
inc
stos
mov
rcr
es
add
cmp
cmp
xchg
jg
test
dec
jo
sub
mov
loop
sbb
jl
pop
xchg
push
inc
mov
arpl
bnd
mov
sub
or
lods
jp
arpl
lds
fadd
mov
outs
ins
ds
int3
cs
jnp
mov
sbb
test
out
dec
repz
pushf
rcl
ins
(bad)
pushf
int
scas
cmp
mov
pushf
sti
cmp
in
adc
ja
in
into
ins
cmp
jbe
mov
pushf
xchg
ror
pop
sti
addr16
cs
jmp
sub
movs
dec
shr
sbb
or
adc
gs
xchg
adc
push
pop
aas
movs
adc
pop
test
div
or
xlat
out
mov
mov
mov
jecxz
mov
ins
and
stc
ficom
cmps
sbb
test
dec
mov
sbb
test
out
shl
fistp
or
jecxz
loop
jb
add
sbb
(bad)
mov
mov
jmp
ins
dec
jp
mov
mov
stc
retf
jge
push
and
enter
lea
push
cmp
(bad)
sti
rcl
or
xor
pop
out
jecxz
mov
or
cdq
pushf
or
sahf
mov
push
call
aam
ins
lods
or
in
in
mov
leave
lods
jb
stos
fs
sub
jl
jge
les
jge
adc
push
(bad)
dec
into
add
pop
mov
and
(bad)
in
ins
push
in
lods
(bad)
pusha
int3
ret
scas
ret
enter
mov
add
movs
fwait
pop
jns
inc
fwait
cmp
int
in
inc
dec
cmp
(bad)
xchg
aam
push
out
mov
xor
loope
add
push
in
jmp
push
popa
and
sbb
jno
pop
mov
inc
stos
push
les
cli
or
dec
mov
fnstsw
add
xchg
nop
xchg
sbb
mov
ins
icebp
cwde
xchg
hlt
sbb
(bad)
sub
lods
cdq
jp
fnstenv
xchg
jbe
shl
test
fs
xlat
ret
es
add
repnz
xchg
mov
mov
cmp
mov
in
cmp
stc
lock
adc
dec
jecxz
push
sahf
mov
xor
push
shr
data16
pop
xchg
xor
and
adc
push
icebp
add
lods
in
stos
mov
call
cmc
or
adc
pop
dec
push
cmc
ja
jae
mov
ret
lock
imul
popf
jae
push
in
loop
sbb
xor
mov
jno
ret
push
stc
dec
lock
loopne
push
cmp
js
dec
jno
xor
imul
mov
mov
jp
rol
shr
inc
iret
adc
xchg
rcl
shl
adc
inc
pusha
adc
or
dec
cdq
out
mov
adc
mov
(bad)
popa
fdiv
loop
sahf
mov
push
fist
mov
sbb
add
mov
mov
imul
pop
pop
retf
jnp
ds
xchg
leave
pusha
push
mov
ins
enter
xchg
cwde
and
mov
mov
fdiv
inc
and
pop
cmps
sub
mov
loop
push
pop
jl
mov
fdivrp
stos
mov
nop
cmc
(bad)
mov
cs
test
mov
out
cmp
sbb
call
mov
push
cmp
pop
push
rcl
or
popf
or
fwait
js
int3
jecxz
(bad)
sbb
jle
jns
movs
repnz
int3
leave
or
jbe
pop
in
in
mov
outs
mov
xchg
pop
push
or
pop
out
and
in
(bad)
pop
and
push
jo
stos
fisub
arpl
jecxz
xchg
add
fidivr
push
sub
mov
loop
stos
movs
sbb
movs
or
stc
inc
call
popf
lea
popa
ror
leave
xchg
xchg
ror
int3
out
pushf
mov
and
jmp
mov
imul
mov
(bad)
jne
xor
ins
(bad)
popf
push
call
shr
pushf
(bad)
aam
adc
fild
xchg
ins
rep
and
loopne
mov
xchg
jne
inc
xchg
arpl
data16
div
in
je
sbb
mov
xor
cmps
jg
loop
ret
stos
ja
sbb
pop
sbb
scas
pop
add
cmp
push
jnp
das
sub
push
ja
mov
sbb
cli
sbb
ss
sub
sbb
cs
push
jecxz
push
mov
(bad)
daa
jb
xchg
jp
mov
pop
xor
aam
add
and
cs
ds
or
xchg
jmp
add
cmp
fnsave
movs
push
ficomp
into
mov
mov
push
or
lahf
cli
jno
fs
retf
test
lods
jl
cmp
xchg
mov
pop
loop
xor
and
popa
cli
aam
pop
sar
jns
and
mov
cmp
dec
pop
mov
pushf
and
push
mov
dec
out
adc
jmp
and
push
fnsave
fstp
push
je
mov
mov
dec
inc
ret
rcl
into
xor
(bad)
fimul
xchg
out
sub
xor
mov
sub
sub
rcl
test
lods
push
sbb
bnd
jl
or
and
pop
cmp
cdq
les
fisub
and
dec
stc
into
and
and
sbb
retf
iret
std
jge
or
hlt
ror
xor
gs
pop
sbb
cs
jle
shr
push
(bad)
das
es
std
bound
xchg
dec
push
mov
dec
bound
inc
cmc
mov
cs
(bad)
retf
add
mov
sti
mov
mov
mov
into
shl
pop
retf
mov
dec
mov
sbb
jecxz
cmps
mov
mov
pop
lock
imul
adc
sub
fwait
shl
sbb
sub
xchg
sbb
loope
xchg
repnz
in
sub
sbb
sbb
mov
lods
inc
ins
inc
(bad)
mov
pop
cmps
xor
xchg
or
dec
outs
cmp
dec
(bad)
pop
and
xor
pop
jl
push
or
mov
cwde
out
cwde
in
jmp
mov
pop
sbb
in
int3
scas
int3
sbb
add
mov
pop
sub
and
jo
(bad)
cwde
sub
sub
shl
pushf
es
or
mov
(bad)
addr16
in
aas
xlat
fsubr
(bad)
cmps
or
cld
repnz
lods
lods
cmp
cwde
loop
push
loop
repnz
ret
jmp
test
mov
mov
cmp
mov
mov
xchg
mov
rol
out
lea
mov
loopne
cmps
lock
pop
daa
xor
je
or
push
ja
xor
test
mov
adc
cdq
retf
mov
pop
out
mov
jne
fistp
stos
jl
daa
ret
xchg
inc
fnstenv
jb
rol
stos
fst
pop
pop
sbb
cmp
mov
fdivr
test
cs
outs
push
adc
xchg
mov
mov
in
movs
push
pushf
in
popa
push
outs
out
jp
(bad)
rcr
sbb
push
fidivr
sbb
dec
leave
mov
ds
clc
dec
outs
mov
mov
push
ret
pushf
inc
ds
ds
push
mov
nop
mov
xchg
jle
lods
shr
outs
mov
xchg
retf
pop
shl
add
inc
xchg
in
add
mov
cmp
adc
pop
test
dec
mov
loopne
aaa
pushf
and
shl
xor
or
js
ret
jnp
ror
popa
call
inc
fidiv
jle
mov
repnz
(bad)
jecxz
xchg
clc
adc
dec
cwde
rcl
sti
sbb
cmps
loop
aad
fsubr
aas
ret
lods
sbb
xlat
inc
sub
sub
sbb
test
pop
jl
mov
add
icebp
cmp
rol
mov
lea
dec
mov
pop
and
inc
popf
dec
or
in
ret
pop
shl
jl
int3
pop
cmp
push
loope
out
jl
ins
cmp
adc
out
popa
mov
inc
add
into
fs
dec
outs
stc
adc
mov
rcr
sbb
mov
call
add
inc
mov
or
xor
or
das
xor
xor
jl
mov
ret
sub
inc
mov
add
fsub
inc
cmp
adc
xor
call
mov
movs
cmps
jl
iret
les
adc
jns
imul
xor
cmp
mov
push
cdq
call
mov
retf
pop
retf
push
inc
xchg
inc
mov
pop
jp
jmp
aas
dec
sbb
adc
fist
and
pushf
lds
shl
add
je
sahf
inc
or
sahf
add
jl
xchg
ins
or
inc
add
test
cld
imul
push
(bad)
mov
outs
imul
mov
mov
loop
dec
clc
outs
jnp
dec
xchg
mov
test
mov
mov
dec
push
in
jnp
imul
push
ror
cmp
pop
add
xchg
xchg
mov
aas
ins
ins
and
stos
(bad)
int3
inc
icebp
mov
and
dec
(bad)
or
leave
gs
test
add
cdq
lods
into
sbb
fs
mov
lahf
pop
cmp
mov
cmp
sub
mov
jl
jge
pop
pop
int3
push
les
mov
xchg
cmp
inc
pop
call
stc
fnstsw
xor
inc
dec
cmp
add
mov
lods
(bad)
mov
inc
ds
neg
loope
pop
inc
mov
clc
push
push
fnstenv
mov
movs
lds
fld
pop
(bad)
push
mov
mov
xor
dec
and
aad
in
jns
pop
test
ror
fimul
cmp
push
push
add
mov
add
sbb
out
jecxz
mov
mov
test
(bad)
cmp
lea
enter
les
pop
pop
lods
(bad)
mov
scas
aam
icebp
jle
lar
lods
mov
adc
daa
int
les
scas
daa
cmp
test
jb
xor
(bad)
fmul
aas
int3
pop
jns
mov
div
lods
mov
xchg
mov
mov
nop
mul
adc
dec
sub
js
xchg
add
lods
xor
stos
fwait
jb
push
mov
test
(bad)
iret
or
movs
imul
icebp
inc
xchg
ja
imul
xor
out
arpl
mov
out
mov
ficom
xor
adc
dec
xor
inc
outs
push
test
ja
sti
jl
jo
out
mov
hlt
lods
xchg
jae
(bad)
jo
scas
cmc
nop
icebp
in
jae
xor
push
movs
jae
and
inc
sub
sahf
cmps
pushf
sti
sar
push
cli
and
sti
and
mov
pushf
and
sub
inc
or
pop
inc
sub
add
dec
pop
das
xchg
and
imul
xchg
cli
push
dec
mov
clc
pop
sbb
add
mov
rol
inc
rol
ds
mov
mov
hlt
push
mov
jge
test
leave
dec
push
push
mov
and
pushf
jmp
sti
outs
jns
scas
push
sub
cs
sbb
(bad)
pushf
inc
ja
lds
cmp
and
lods
inc
aaa
inc
add
pop
fdiv
nop
hlt
div
icebp
ja
pushf
xor
xchg
jne
or
leave
pushf
xchg
mov
stos
dec
sub
jae
sbb
jnp
and
push
lock
outs
les
imul
sti
mov
mov
scas
(bad)
jle
rcr
cmp
loop
push
cli
ret
movs
loop
loope
xchg
cmp
mov
(bad)
push
sub
arpl
movs
xor
dec
inc
mov
(bad)
push
in
jle
gs
dec
in
mov
cmp
int
retf
pop
cld
jle
icebp
mov
and
data16
(bad)
pop
cld
jl
dec
jl
jne
push
shr
in
out
add
mov
jmp
arpl
adc
xor
jno
mov
ins
int3
ja
ins
aam
(bad)
ja
in
fld
pushf
repz
pop
adc
mov
push
fdivr
push
xor
push
jmp
xchg
pushf
(bad)
xor
cmp
popf
cs
inc
adc
lock
dec
repz
or
mov
in
xchg
mov
and
and
fdivr
cmps
sahf
ds
clc
(bad)
std
jl
popf
xchg
cld
push
shl
scas
jns
add
sbb
and
repz
shl
pop
into
inc
cmp
jp
leave
(bad)
mov
mov
mov
or
sub
sbb
push
mov
test
push
inc
int3
ret
pop
in
out
mov
das
sub
jo
repz
lods
aam
ja
mov
xor
adc
(bad)
stos
arpl
loop
xor
push
loop
push
xchg
mov
and
(bad)
stc
add
xchg
aam
(bad)
cmp
shr
adc
jns
dec
jmp
mov
fnstcw
cmp
jbe
pop
test
mov
xor
inc
mov
mov
imul
mov
stc
add
repz
in
mov
or
or
pop
mov
imul
stos
jae
fs
rol
mov
jno
sbb
push
inc
test
jg
cs
dec
jle
jmp
pop
repnz
push
test
lahf
pop
xchg
popf
inc
loop
xor
repnz
pushf
cmps
add
adc
sub
mov
jle
xor
adc
pop
adc
pop
xchg
jl
outs
dec
lahf
je
sub
sahf
(bad)
in
cwde
jbe
mov
push
mov
sbb
std
xor
ret
push
xchg
out
int3
cmp
mov
lods
push
add
call
inc
fld
or
(bad)
jns
xchg
fstp
jle
(bad)
cmp
stos
in
add
lods
push
fdiv
add
cmp
cmps
shl
xor
(bad)
jp
xchg
mov
and
push
idiv
jmp
pop
test
lods
push
mov
inc
in
pop
mov
int3
inc
mov
fidivr
sub
sub
jbe
int
jmp
dec
lods
sbb
mov
push
addr16
dec
stos
sbb
xchg
xchg
sub
sbb
fadd
sbb
sbb
dec
cmp
adc
in
addr16
mov
or
or
inc
int
in
in
mov
lods
pop
(bad)
mov
scas
bound
rcr
and
xchg
aas
or
adc
add
ror
push
xor
mov
adc
loop
pusha
push
scas
mov
lds
pop
and
sub
sbb
inc
rcr
mov
enter
pop
sub
inc
mov
or
mov
es
es
push
dec
in
addr16
sbb
fnsave
js
gs
aas
add
iret
and
xchg
add
rol
mov
push
xor
dec
cmp
fwait
test
mov
jl
test
cmps
pop
mov
into
retf
mov
or
sar
ds
push
dec
in
sbb
push
dec
hlt
out
mov
sbb
repz
mov
adc
fsub
ja
cmp
inc
xadd
test
ja
cmp
sbb
test
sub
jge
outs
mov
ror
lods
lods
lock
int3
add
sar
ins
mov
sbb
push
pusha
jge
dec
or
sahf
mov
repz
inc
dec
jo
or
cmp
sub
jecxz
loopne
xchg
out
pop
cmp
push
stos
jb
sbb
add
lods
test
mov
jns
xor
sbb
fisttp
rcr
loope
xor
frstor
jns
dec
mov
xor
into
sbb
sbb
inc
sar
mov
(bad)
pop
ss
adc
cmp
mov
clc
fs
enter
lods
cmp
shl
fwait
jge
jge
sbb
dec
sub
stos
iret
pop
(bad)
aam
mov
sbb
fild
in
arpl
int3
jmp
cmp
retf
add
(bad)
mov
cmps
(bad)
dec
int3
jno
pop
xor
sbb
movs
std
out
and
add
add
pop
mov
inc
loop
mov
fidiv
cld
or
cmc
xor
push
lods
or
imul
int
lahf
fnstsw
stos
daa
fwait
ja
outs
ins
mov
je
pop
push
in
xchg
loop
mov
loope
lods
sbb
push
mov
loope
mov
stos
cld
pop
(bad)
ins
loope
adc
and
sahf
imul
rcl
dec
in
in
cmps
out
mov
hlt
jo
ret
stos
inc
retf
mov
aad
push
js
pop
and
sub
int3
addr16
or
and
out
mov
mov
(bad)
add
adc
or
adc
sahf
jecxz
inc
sub
int
ret
and
xor
ficomp
in
cmp
inc
sub
lods
movs
mov
sbb
cmp
add
lods
sub
jecxz
inc
rol
mov
(bad)
mov
loope
hlt
xchg
retf
ficomp
xchg
xchg
mov
add
ins
push
sub
jge
dec
test
cmps
int3
mov
sub
icebp
push
dec
mov
mov
lock
pop
mov
(bad)
int
mov
stos
xchg
cmps
(bad)
int3
(bad)
sub
adc
and
mov
sbb
push
add
push
bound
xchg
popa
xlat
cmc
dec
test
inc
in
inc
loop
cmp
mov
cwde
xor
ss
jecxz
mov
addr16
and
ret
and
loopne
pushf
ret
mov
mov
ins
cmp
xchg
in
lods
ds
aas
in
mov
xchg
and
mov
mov
cmps
mov
inc
xchg
jno
jnp
ror
fucompp
lock
lahf
jo
rol
push
sbb
xor
cmp
sub
(bad)
(bad)
in
dec
inc
jmp
not
idiv
xor
mov
nop
mov
movs
aam
pop
scas
inc
mov
mov
jge
stc
mov
test
lods
mov
pop
adc
hlt
fs
or
call
cmps
loop
push
jl
mov
add
add
mov
push
stos
mov
fnstenv
nop
daa
push
lock
sbb
fmul
mov
inc
sbb
pop
and
dec
dec
int
cmp
test
pop
bound
cmp
mov
mov
pop
icebp
pop
(bad)
mov
cmp
mov
mov
sbb
xlat
jne
fistp
sti
push
mov
mov
push
pop
jae
inc
dec
(bad)
iret
pop
or
xchg
sub
mov
test
sub
mov
mov
xor
das
imul
outs
push
imul
cli
mov
frstor
in
mov
jge
jl
out
imul
sub
mov
add
cld
int
sub
mov
bound
jmp
adc
push
(bad)
xchg
push
dec
or
rol
mov
nop
int
sub
mov
mov
and
shr
(bad)
ror
rcr
dec
(bad)
int3
test
loopne
mov
les
add
mov
popa
jne
add
out
or
jb
mov
or
call
jmp
ds
jmp
xchg
out
ret
jae
sbb
adc
gs
pop
data16
mov
push
pop
ja
fsub
xchg
xchg
cs
lds
xor
stc
neg
out
cmp
rcl
in
pop
or
test
cmp
test
outs
sbb
xchg
add
nop
pop
inc
mov
adc
and
fcom
pop
cmp
adc
repnz
fstp
sbb
inc
and
pop
or
cmp
mov
es
stc
pusha
mov
ror
mov
int3
xchg
push
and
in
adc
adc
jbe
add
mov
xchg
or
sub
pop
xor
fistp
dec
sbb
xlat
and
mov
sti
mov
mov
sbb
popf
push
ins
fwait
push
pop
pop
push
int
and
sub
popf
xor
repz
add
mov
lea
popf
mov
xor
add
mov
movs
jge
fistp
inc
into
gs
(bad)
fcomp
cmp
cmps
pop
clc
out
popf
call
xchg
jb
mov
(bad)
cmp
inc
or
adc
movs
dec
mov
arpl
push
data16
call
and
pushf
retf
pushf
aaa
sar
in
cmc
inc
and
dec
cli
add
inc
and
jle
fcomp
add
std
(bad)
mov
xor
push
outs
push
ins
test
mov
xlat
imul
sbb
ja
bndstx
cmps
stos
pop
pop
pop
lods
pop
mov
imul
cmps
popa
pop
cmc
fadd
add
inc
or
cld
ds
stos
les
sbb
rcl
fistp
test
pop
retf
mov
xor
mov
sub
dec
mov
imul
call
popa
or
push
pop
mov
lea
mov
ds
(bad)
fadd
mov
pop
sar
jne
ins
data16
pop
dec
fs
mov
and
adc
dec
nop
mov
pop
mov
dec
loop
or
pop
jge
mov
popf
enter
ret
xor
xchg
repnz
lods
jle
aad
push
push
jo
inc
ins
fs
ret
pop
mov
shl
fadd
mov
and
sub
out
dec
xor
int3
adc
out
int
aad
inc
sbb
imul
jecxz
push
inc
addr16
into
xchg
das
cmp
add
les
jmp
lahf
loopne
adc
sub
(bad)
dec
jbe
dec
bound
mov
sbb
inc
and
int
add
mov
push
pushf
call
inc
fcmovu
ds
ss
xor
jae
adc
vmread
mov
clc
and
or
dec
cs
pop
jmp
inc
push
js
cmps
in
xor
stc
mov
push
mov
dec
add
in
pop
fdiv
jl
ins
adc
repz
cdq
clc
jl
int3
rcr
sub
popf
pushf
jbe
xor
in
cld
push
dec
call
mov
mov
xchg
ins
inc
adc
and
or
sub
or
cld
(bad)
pop
jmp
scas
add
xchg
mov
sbb
mov
shl
inc
fnsetpm(287
adc
push
sub
scas
sub
shl
or
or
mov
push
mov
daa
push
sub
or
pop
mov
dec
lds
add
in
xchg
stc
and
fcmovnu
adc
mov
cld
shl
dec
nop
call
xor
jae
dec
loop
mov
ja
js
dec
(bad)
ret
sub
bound
jl
pop
aad
mov
mov
fucomp
inc
jbe
sub
pop
mov
sbb
add
mov
ror
fadd
cmp
jmp
mov
mov
mov
pop
sbb
xor
call
inc
std
xor
ret
fldcw
jae
mov
mov
sub
jle
lsl
or
xchg
push
imul
xor
add
imul
fsub
xor
jecxz
pop
mov
leave
add
jge
outs
push
fldcw
aas
pop
xor
clc
ficom
cmp
call
(bad)
jb
sbb
(bad)
jne
or
pusha
or
gs
cwde
pop
aas
push
dec
mov
bound
test
or
adc
mov
call
xor
jb
adc
call
popf
cmp
pusha
imul
imul
adc
push
stc
cld
push
(bad)
mov
in
pop
and
out
xchg
sbb
mov
or
jns
sub
or
mov
adc
mov
pop
je
pushf
in
sub
stc
adc
mov
jg
fcomp
sub
inc
add
pop
and
daa
jmp
int3
and
sbb
sahf
(bad)
xchg
loopne
push
inc
hlt
repnz
repnz
int3
fcomip
cld
fsubr
dec
cmp
dec
pop
lods
or
adc
ins
xor
pop
mov
inc
sahf
je
lods
loopne
js
mov
ins
nop
ficom
and
aad
or
outs
inc
movs
push
sbb
ins
in
sbb
inc
cmp
int
les
adc
jmp
ret
dec
rcl
mov
mov
adc
push
jnp
and
push
fidivr
xor
je
pop
pusha
shr
or
loop
loop
and
and
or
push
mov
les
and
(bad)
add
sbb
sub
push
scas
aas
(bad)
mov
sub
in
mov
out
ss
scas
or
push
sbb
mov
das
loop
xchg
or
movs
hlt
pop
push
aad
mov
mov
fild
xchg
test
fadd
retf
test
loop
in
push
lahf
out
mov
add
ins
and
xchg
pushf
popf
mov
call
aam
in
push
xor
inc
xchg
cli
jmp
xor
xchg
mov
pop
sar
mov
(bad)
scas
pop
cmp
adc
mov
xor
scas
cwde
lahf
push
mov
ret
dec
inc
inc
shl
and
and
or
mov
stos
sbb
or
adc
icebp
push
ja
mov
test
stos
pop
pop
jmp
dec
call
push
(bad)
sbb
mov
lods
dec
jg
inc
cld
sahf
cmp
jl
and
mov
cld
xchg
mov
stos
and
xchg
ss
stos
sahf
lods
jne
or
mov
gs
ror
ja
adc
push
or
pusha
adc
adc
inc
xor
add
popf
jl
cmp
sub
xchg
inc
mov
mov
inc
pushf
jge
adc
ins
mov
call
shl
int
push
(bad)
jno
in
icebp
push
sbb
dec
sub
sbb
lods
xor
cld
int3
xor
shl
es
and
repz
lods
retf
jns
pop
push
mov
inc
ja
push
and
push
inc
scas
ins
(bad)
fist
cmps
sbb
pop
fistp
test
mov
xor
adc
xchg
mov
(bad)
(bad)
cmp
int3
int
retf
movs
mov
test
mul
mov
les
stos
popa
out
sub
jmp
add
mov
lea
in
sub
(bad)
jno
xchg
pop
push
mov
jle
push
lahf
inc
or
push
and
xchg
mov
(bad)
shl
sbb
jae
out
mov
xchg
shl
push
rcr
jbe
push
mov
dec
lods
cmp
bound
add
and
push
add
sbb
push
ret
inc
or
call
push
iret
enter
fdiv
imul
and
in
jl
inc
idiv
xchg
je
dec
or
jle
rcr
loope
sub
xchg
gs
xor
add
icebp
pminsw
mov
in
mov
outs
in
inc
addr16
pop
out
inc
loope
sti
(bad)
shl
mov
test
jp
std
xchg
inc
inc
mov
and
fcom
mov
adc
mov
(bad)
push
ret
inc
imul
xor
outs
xchg
and
push
or
inc
sbb
pusha
stos
xor
leave
in
les
pop
or
cmp
test
ret
daa
call
push
std
in
add
xor
or
clc
ins
sub
loopne
stos
add
sub
add
shl
jmp
lods
sbb
ret
out
sbb
jns
mov
in
std
mov
pop
mov
inc
xchg
or
pop
jmp
xlat
lea
call
adc
mov
and
ficomp
scas
inc
adc
jbe
lods
mov
dec
imul
xor
movs
sbb
or
inc
test
mov
imul
xchg
ret
int
cmps
repnz
xchg
hlt
push
(bad)
loop
data16
dec
push
js
inc
(bad)
mov
mov
frstor
adc
mov
mov
leave
mov
retf
cwde
lods
ins
jl
aaa
enter
pop
sahf
cmp
jp
(bad)
mov
in
(bad)
pop
fst
cli
adc
xor
ja
mov
ret
das
imul
xor
out
fwait
jp
lea
pop
lea
cmp
daa
and
enter
xchg
ror
mov
pop
mov
stos
fcom
adc
mov
test
adc
xor
bound
xor
cmp
test
sbb
xchg
mov
test
mov
mov
loope
addr16
sub
pop
scas
lods
adc
inc
retf
pushw
xchg
leave
pop
enter
sub
scas
jl
out
add
sbb
jbe
sbb
fidivr
add
cmp
repz
lods
loop
mov
shr
sub
into
mov
xchg
fdiv
daa
out
std
ret
popf
push
inc
in
sub
ret
inc
nop
mov
rcl
lea
data16
mov
rol
fsub
ins
jp
push
xchg
and
add
or
cld
mov
ins
and
adc
add
or
nop
sar
inc
shl
clc
out
xchg
loop
rol
ds
fisttp
mov
push
cmp
popf
in
repnz
jle
xchg
jmp
stos
(bad)
cmp
adc
lea
outs
fisubr
inc
dec
add
pop
cmp
out
jo
cld
movs
mov
ror
xor
pop
dec
cmp
xor
movs
loop
rep
(bad)
(bad)
fistp
imul
mov
pop
push
mov
add
and
and
loopne
pop
retf
iret
xchg
xchg
outs
in
popa
mov
cld
ret
mov
fstp
xchg
dec
pushf
mov
xor
push
mov
inc
sub
(bad)
mov
or
movs
ror
dec
pop
jl
ins
xchg
push
jg
sti
push
aas
jmp
sbb
pop
xchg
and
pop
std
cmp
or
aas
inc
cld
push
xor
jne
retf
inc
sbb
mov
push
aas
test
retf
or
sbb
xor
outs
pop
push
loop
(bad)
cld
inc
(bad)
shl
ins
cld
sbb
(bad)
(bad)
enter
add
or
xchg
xchg
repnz
cld
or
je
test
fptan
test
fcom
fs
jle
add
fsub
cmp
mov
sar
ins
loope
out
fiadd
mov
mov
ins
repnz
xor
std
inc
std
aas
sar
popf
mov
hlt
or
(bad)
xor
jbe
mov
jg
push
in
or
push
repnz
loopne
stc
sub
scas
inc
icebp
jbe
das
push
bound
pop
int3
push
test
scas
jle
in
add
lods
lods
shr
xchg
jb
ins
sbb
daa
ss
cmp
test
mov
outs
inc
push
in
inc
xchg
xchg
add
mov
sub
adc
call
cli
ror
movlps
mov
cmp
sbb
mov
mov
nop
imul
ds
pop
clc
in
call
pushf
sti
mov
pop
adc
cmp
sbb
pushf
test
add
jge
aas
mov
repz
stos
mov
sub
cmovne
xor
sub
repz
cdq
jp
ss
sub
ret
mov
inc
xor
sub
mov
scas
inc
mov
inc
add
jmp
cli
int3
fcomip
adc
outs
adc
cmps
cli
rcr
jno
xchg
sub
in
in
cdq
pop
dec
out
jmp
pop
ins
jmp
xchg
jb
sbb
adc
xchg
and
cmp
mov
lods
mov
stc
test
jl
lea
pop
std
js
jnp
popf
jb
les
ins
pop
push
cld
adc
adc
jne
xor
push
add
push
repnz
mov
and
scas
mov
push
pop
jns
not
fs
shl
aaa
jge
sub
pop
mov
jb
cmp
adc
int3
and
push
cmp
outs
add
stos
dec
arpl
les
xor
test
push
out
mov
jl
shr
xchg
int3
xor
inc
mov
push
mov
std
(bad)
cdq
test
push
dec
jno
loop
sar
push
mov
in
ja
pop
xor
stos
xchg
push
fs
xchg
mov
xchg
adc
test
sub
add
mov
ss
rol
or
in
mov
into
push
pop
pushf
push
mov
dec
adc
mov
pusha
mov
ror
movs
mov
pop
int
adc
push
pop
aaa
mov
push
retf
mov
and
(bad)
pop
cmp
mov
(bad)
packsswb
push
push
mov
(bad)
out
or
iret
jb
xor
rcr
cmp
jne
inc
xchg
hlt
jb
mov
je
jl
jg
inc
mov
and
or
mov
xchg
jmp
lods
cmp
je
xchg
sub
enter
inc
or
mov
cmps
dec
xchg
cld
in
mov
push
pushf
icebp
aad
int
cmp
daa
push
(bad)
popf
sbb
and
mov
bound
add
inc
das
inc
out
ret
daa
inc
js
adc
jns
shl
mov
out
jb
inc
pop
test
sbb
and
jne
std
repnz
lock
add
dec
cmp
in
mov
daa
nop
(bad)
js
arpl
cdq
daa
pop
arpl
sti
ins
xor
sub
call
ins
pushf
jl
cmps
inc
push
mov
pop
call
inc
mov
js
mov
adc
sub
and
inc
adc
(bad)
fcomp
fidiv
xchg
sub
test
movs
hlt
je
sub
and
or
cmp
mov
add
or
mov
sub
pop
push
jb
or
inc
iret
aad
sbb
aam
add
pop
push
dec
repz
jecxz
scas
sub
cmps
inc
fild
loope
mov
push
dec
and
xchg
mov
(bad)
jnp
out
jp
pop
stos
inc
xor
lods
dec
xor
xor
aas
pop
push
mov
and
sub
loope
out
mov
inc
loopne
sahf
(bad)
in
xchg
or
pop
dec
(bad)
shr
mov
add
dec
cmc
sub
aam
jl
loope
test
ret
adc
out
pop
push
neg
dec
ror
xchg
cs
mov
sti
scas
out
jae
fsubr
shl
cmp
fld
fbstp
in
inc
js
jle
mov
sbb
mov
fsub
stc
xchg
push
push
jge
push
mov
daa
pop
jle
mov
test
in
xchg
xor
popf
xchg
push
sub
inc
or
sub
xor
je
add
ret
dec
cld
stos
repnz
adc
xor
xor
stos
push
jns
and
lods
sub
cmp
fwait
jo
cmp
mov
mov
ds
outs
and
jbe
jb
cmp
push
cmp
repz
inc
arpl
in
inc
popa
fsub
cdq
xor
pop
sbb
jmp
ins
adc
sub
imul
in
add
stos
stc
xchg
lods
mov
add
fldcw
mov
das
cmp
lods
call
pop
fidivr
mov
mov
cmp
(bad)
xlat
gs
mov
mov
test
push
retf
inc
out
push
pop
sbb
mov
dec
mov
pop
sti
fild
cmp
and
cmp
ja
ret
(bad)
sub
es
xor
ret
lock
leave
add
loope
mov
mov
retf
dec
iret
(bad)
xor
adc
repz
xor
clc
pop
sbb
fidivr
inc
xlat
mov
fild
mov
and
dec
jno
xchg
jb
pop
loop
mov
aas
pusha
sub
popa
(bad)
mov
xchg
mov
(bad)
fdivp
test
in
movs
push
loopne
mov
test
ins
in
fild
xor
cwde
push
test
sahf
cmp
sar
data16
shl
adc
fisub
aam
cmp
fldl2t
imul
test
les
call
ror
xchg
jns
dec
jmp
(bad)
in
mov
(bad)
repz
ror
adc
hlt
pop
test
repz
loop
movs
ins
and
mov
sub
or
rol
adc
or
loopne
dec
int3
jmp
jp
fimul
dec
popf
xor
repz
and
das
dec
xchg
inc
es
fadd
pushf
fcmovb
lods
pop
or
shr
mov
mov
jl
shl
pop
dec
push
call
(bad)
int
and
ss
ss
jae
mov
outs
push
sbb
jmp
cvtps2pi
ret
iret
push
jp
dec
rol
movs
inc
mov
sbb
(bad)
sub
fs
fsubp
and
cmp
jmp
push
add
fsub
je
mov
pop
iret
jge
scas
push
mov
lock
and
mov
jecxz
int3
addr16
inc
add
bound
js
daa
stc
mov
inc
sbb
or
loop
aam
(bad)
stos
ret
xchg
dec
add
adc
push
cmp
cmp
jecxz
lods
loop
push
and
test
push
inc
dec
jg
jbe
add
cmc
aam
or
push
in
repnz
push
add
pop
jl
dec
pop
in
out
lods
rcl
and
cmps
mov
pop
xchg
les
pop
add
mov
and
int
push
aaa
daa
ror
adc
mov
or
xchg
pop
pop
xchg
sbb
push
outs
stos
das
sub
mov
ins
mov
push
add
lods
dec
jge
enter
mov
retf
inc
fs
dec
jge
mov
xlat
dec
into
sbb
dec
les
stos
mov
push
in
in
push
pop
idiv
in
das
jo
idiv
dec
shl
test
loope
cmp
mov
and
outs
in
mov
shl
xor
xchg
and
dec
aam
jo
(bad)
mul
lea
and
scas
push
out
mov
xchg
fs
cmp
xchg
daa
inc
xchg
and
out
push
xor
pop
imul
test
outs
sbb
cwde
scas
xchg
ret
xchg
xchg
mov
or
cmc
sbb
dec
jae
pushf
dec
in
or
cmc
out
int3
mov
dec
dec
pop
popf
popf
test
jne
xchg
pop
lods
add
xor
mov
nop
pop
dec
add
int
adc
cs
xchg
int
dec
jae
mov
dec
cmps
mov
fmul
adc
mov
shl
and
and
mov
push
pop
ret
jnp
dec
clc
int3
addr16
stos
pop
sbb
jge
dec
sub
xor
mov
add
adc
pop
invd
dec
add
or
dec
and
mov
sub
mov
ja
iret
mov
shl
ja
mov
les
adc
sbb
push
adc
int
in
push
sbb
and
cmp
in
cmps
int3
stos
js
outs
push
cmps
mov
and
inc
mov
inc
bound
cld
jl
aam
pushf
mov
pop
imul
fld
adc
pop
(bad)
bound
dec
(bad)
out
mov
std
xchg
jmp
sbb
adc
and
add
es
mov
xor
jno
dec
iret
jl
pushf
fwait
mov
adc
mov
pop
or
xchg
adc
or
ret
sub
cmp
add
loop
sbb
aam
pop
mov
clc
fisttp
inc
jnp
sub
bound
repnz
adc
sub
pop
inc
cmp
add
mov
mov
adc
dec
cli
jmp
fwait
scas
je
call
push
dec
jmp
outs
sbb
enter
fs
fadd
inc
pop
pop
and
(bad)
inc
pop
or
inc
loopne
fsubr
dec
adc
adc
das
dec
daa
add
pop
test
mov
arpl
inc
shl
ret
stc
add
jmp
push
xor
data16
lea
push
mov
sti
xor
shl
cmp
fdiv
aad
sahf
shr
popa
sahf
push
sbb
push
push
adc
or
inc
stos
cmp
xlat
sbb
push
test
out
shr
push
lods
mov
icebp
mov
(bad)
mov
bound
cld
mov
jae
xchg
pop
mov
jae
and
(bad)
popf
mov
cdq
inc
(bad)
fbld
rol
out
xchg
inc
repnz
std
mov
or
ret
out
xor
jge
add
push
xchg
out
cmc
and
xchg
lock
test
xchg
arpl
jae
mov
xor
push
xor
jno
sub
sbb
mov
push
mov
(bad)
in
mov
jl
jl
xor
outs
loop
out
sbb
lods
pop
bound
sbb
xchg
fadd
lock
ror
add
sub
rcr
pushf
repnz
out
fisttp
jp
sub
imul
je
(bad)
js
pop
push
pop
xchg
and
jbe
xchg
sbb
jmp
inc
mov
out
pop
mov
xlat
mov
das
stos
call
cmp
or
movs
fdiv
cmp
mov
fbld
add
stos
jg
les
adc
pop
cmp
aad
xchg
xor
stc
jns
imul
add
outs
lock
adc
pushw
repnz
fsubrp
ins
inc
and
push
mov
cmp
adc
ins
or
inc
psubusw
and
fmul
inc
xor
ficom
mov
test
jmp
jmp
les
xor
test
mov
mov
in
pop
and
repz
mov
add
cmp
ror
xchg
mov
sbb
pop
xchg
inc
jge
lock
push
pop
jae
sub
int
adc
in
shl
scas
std
loopne
jmp
sti
data16
ja
int3
cmp
jb
mov
loop
hlt
clc
jne
mov
aas
push
jb
loop
cwde
inc
test
mov
js
adc
repnz
stc
and
sub
fist
repnz
loop
jmp
fnstsw
fcomp
mov
cdq
lea
add
test
popf
in
in
sahf
add
mov
nop
xlat
adc
adc
and
xor
push
not
or
repz
pusha
sub
int3
dec
mov
xchg
sub
adc
xor
ret
cmp
imul
mov
dec
fsub
or
in
dec
movs
dec
and
xor
into
loop
jecxz
jp
les
in
lock
or
(bad)
xor
jl
mov
mov
and
push
lock
cmps
data16
in
push
jmp
int
sbb
dec
push
dec
xchg
fdivr
cmp
mov
mov
cmps
dec
jns
jp
cmps
fwait
jp
gs
aam
mov
rol
mov
dec
jmp
popa
(bad)
leave
mov
aaa
pusha
jmp
retf
or
sbb
ins
jle
add
xchg
mov
push
sbb
sbb
add
cld
cmp
push
push
xchg
push
sbb
jg
xchg
add
(bad)
pop
mov
and
lods
sbb
add
les
inc
ja
add
loopne
cld
int3
jge
loope
ins
push
pop
push
mov
ret
jecxz
dec
mov
repz
sar
cmps
sub
jp
repz
jmp
(bad)
xor
push
ins
fcmovbe
push
call
pop
inc
jmp
and
int3
push
xlat
daa
push
sub
sub
hlt
adc
inc
mov
std
jbe
(bad)
je
and
jge
imul
loop
inc
push
out
mov
retf
in
add
jmp
fsub
arpl
leave
pop
xchg
push
ret
mov
lds
mov
jl
test
inc
hlt
mov
cli
jle
das
(bad)
or
push
jae
adc
dec
les
jg
lock
and
push
jae
or
pop
cmps
add
xchg
mov
mov
mov
pushf
cmp
ret
addr16
mov
pop
and
sar
movs
cld
push
in
mov
fiadd
loopne
out
mov
fld
xchg
stos
mov
add
mov
out
jmp
lahf
mov
es
add
and
(bad)
fstp
xchg
call
daa
je
das
cmp
xor
jns
(bad)
pop
es
inc
push
pop
rol
xchg
and
lds
jmp
mov
jmp
mov
ds
pushf
jnp
xchg
or
dec
sub
and
mov
sbb
ins
fstp
aad
repz
(bad)
cmp
xor
and
or
inc
mov
xchg
(bad)
inc
inc
sti
sub
xor
call
out
lods
sub
es
pushf
jb
ja
das
xchg
adc
nop
in
xlat
cmp
movs
mov
push
mov
xchg
mov
mov
test
outs
mov
cmps
popa
adc
rcr
sti
icebp
push
pop
(bad)
cli
pop
push
pop
cmp
shr
jb
and
adc
call
sbb
mov
cs
dec
adc
inc
scas
sub
fld
int
and
inc
mov
or
jmp
jb
ret
fsubr
and
push
fwait
inc
jecxz
and
or
cmp
test
clc
mov
add
mov
xor
test
sahf
xchg
test
sub
rcl
jl
enter
out
loop
xor
xlat
xor
lahf
int
mov
pop
cmp
(bad)
xchg
and
imul
retf
add
inc
int3
mov
int
lds
movs
mov
mov
scas
movs
popf
fisttp
sahf
xor
add
dec
scas
sbb
mov
sbb
sbb
jge
jp
xor
cmp
bnd
outs
cmp
mov
ret
in
add
sub
outs
mov
cmc
cmp
ret
and
retf
jmp
add
and
pop
cs
inc
ret
cdq
inc
call
or
xor
adc
psubsb
adc
imul
pop
sbb
cmps
xor
fisubr
js
movs
mov
loop
xchg
cmp
cmp
pop
mov
or
xlat
int3
mov
aas
lock
popa
lahf
call
sar
ja
sbb
icebp
es
dec
out
and
sub
in
pushf
rcr
inc
aam
ins
inc
es
dec
std
fcmovb
(bad)
call
xchg
and
xlat
bound
imul
mov
inc
push
in
adc
adc
push
retf
mov
in
daa
fptan
in
xchg
test
cmp
das
dec
sahf
mov
push
daa
adc
jge
pop
mov
rcl
jp
imul
mov
inc
call
into
jmp
ins
inc
jp
fs
ins
cmp
pop
xchg
ret
jp
in
jecxz
daa
sbb
lods
or
test
aas
or
mov
dec
xchg
adc
inc
mov
dec
xchg
xor
jge
daa
jecxz
mov
pop
fs
dec
je
mov
nop
movs
stos
(bad)
ja
jne
adc
adc
sub
loop
test
ret
and
jge
ret
mov
(bad)
(bad)
enter
lods
es
test
or
or
out
jb
mov
movs
cmps
push
lock
xchg
imul
pop
dec
add
cmp
xor
jle
jmp
sbb
sub
bt
cmp
imul
mov
and
je
ins
mov
sub
push
inc
mov
push
imul
fs
xlat
pop
aam
mov
and
xor
loopne
and
cmp
lock
xor
cmps
mov
jmp
jo
cmp
dec
and
dec
cmp
pop
ror
out
retf
pop
stos
mov
int3
xchg
(bad)
or
imul
xchg
dec
in
xor
shr
shr
xor
sbb
test
sub
pop
cs
scas
hlt
out
push
out
(bad)
std
outs
pop
xor
cmp
js
jb
repz
test
lock
jb
in
movs
int
fld
xchg
and
out
je
out
in
mov
adc
in
call
jbe
and
cdq
jge
ret
in
jmp
mov
xchg
pop
dec
sub
das
adc
(bad)
rcl
xchg
pushw
and
or
push
xchg
ret
adc
push
clc
cmp
push
push
sbb
imul
mov
sbb
inc
mov
inc
mov
in
das
sub
cmp
pusha
out
mov
jae
push
and
mov
xchg
or
cli
sub
or
xor
retf
pop
js
adc
loop
mov
push
jecxz
sti
daa
adc
cmp
xchg
rcl
mov
shl
or
(bad)
cld
or
adc
int3
sbb
mov
push
or
inc
out
add
int3
data16
fcmovu
mov
add
adc
push
test
add
mov
jb
in
push
sahf
adc
jns
(bad)
xor
or
mov
push
je
hlt
dec
dec
pop
(bad)
xor
xchg
inc
lds
scas
jle
xchg
in
jle
stc
pop
pop
add
inc
js
ror
pop
or
rol
sbb
cld
add
xor
inc
sahf
and
push
fsubr
call
repnz
mov
inc
pop
push
xchg
jae
pusha
lods
xchg
cli
in
clc
mov
xor
mov
cmps
push
inc
pop
int3
cmp
push
ror
jbe
push
int3
cmps
addr16
sub
repnz
leave
adc
ret
data16
mov
stos
mov
shl
jbe
je
in
sub
xor
pop
das
in
jo
xor
dec
add
push
jl
pop
(bad)
push
sub
repz
mov
or
xor
fs
sub
xchg
sahf
ret
out
mov
cmp
pop
fwait
test
push
push
leave
scas
mov
cld
inc
push
adc
cmp
dec
mov
xor
xor
adc
aaa
push
and
push
jns
jns
inc
add
mov
std
push
stc
ds
add
daa
xor
sub
ins
or
in
in
(bad)
push
aad
test
inc
outs
data16
mov
jecxz
xor
dec
adc
xchg
xchg
lahf
aam
adc
inc
out
cmps
fidivr
inc
cmp
ins
inc
(bad)
and
dec
mov
mov
sbb
mov
call
inc
lods
xor
stos
sbb
adc
arpl
mov
rol
jle
push
jg
ficomp
xor
ss
mov
out
arpl
mov
cmp
jno
jo
cmps
popa
mov
int
jbe
sbb
(bad)
sub
mov
movs
and
outs
test
scas
mov
mov
sbb
movlps
ror
bound
xchg
sub
cmps
xchg
mov
push
fcomip
fldcw
frstor
dec
mov
js
hlt
cli
ins
pop
sub
(bad)
or
ret
stos
xchg
mov
nop
pop
mov
repz
call
push
ja
(bad)
mov
movs
add
pusha
ret
xlat
mov
and
pusha
add
daa
ret
in
fisub
js
(bad)
cwde
jle
lods
bound
jb
out
fisttp
and
mov
cdq
cmp
rcr
dec
pushf
xor
loope
and
dec
dec
loopne
jecxz
mov
jmp
enter
je
or
inc
sub
push
xchg
dec
push
cmc
inc
sub
test
cld
or
xor
jg
xchg
sti
(bad)
in
sbb
aam
pop
xchg
das
aaa
push
push
outs
inc
sub
test
or
jge
imul
(bad)
icebp
adc
adc
lock
lock
mov
out
xor
and
or
sub
and
xor
cmp
xchg
dec
xor
retf
sbb
push
mov
mov
pop
dec
dec
aaa
bnd
adc
stos
jno
nop
out
add
lods
pop
xchg
int3
and
or
in
cmp
push
or
out
mov
push
jb
xor
push
shr
nop
fsubr
in
sbb
adc
mov
sub
add
sbb
ja
jmp
cmp
mov
dec
sbb
mov
or
and
and
int
push
adc
cs
jmp
ss
pop
mov
fsub
mov
adc
jmp
jl
mov
push
xor
jne
add
sbb
ds
xchg
loop
xor
adc
add
mov
pop
pop
xor
xchg
push
dec
lods
scas
inc
mov
adc
pop
out
xchg
scas
and
call
push
push
pop
(bad)
stos
out
mov
aam
mov
add
mov
je
mov
mov
add
add
in
lods
add
cs
or
xchg
pop
into
jmp
(bad)
call
push
mov
lock
data16
inc
outs
pushf
or
adc
std
adc
fdivr
xor
int3
sbb
movs
lock
jne
sbb
mov
scas
mov
add
(bad)
pushf
cli
ins
cmp
mov
aam
js
add
popf
test
fcom
or
test
ror
push
mov
mov
(bad)
out
mov
dec
xchg
push
jge
mov
fnstsw
jmp
retf
and
daa
jno
mov
mov
jge
ror
dec
sahf
ja
lods
push
xchg
movs
lods
xlat
xor
fisttp
adc
and
mov
out
jg
fistp
retf
imul
add
(bad)
fst
add
jmp
jae
ins
sbb
pop
mov
sar
adc
js
xor
and
inc
push
outs
add
icebp
dec
pop
xchg
bound
mov
sub
jb
adc
ins
jmp
test
pop
mov
cmp
pop
fsubr
mov
int3
in
jb
push
sub
std
jmp
dec
xchg
push
mov
mov
ret
call
sub
fsub
fchs
pop
adc
ss
shl
sub
test
jmp
dec
scas
add
mov
js
push
pushf
enter
std
mov
bound
push
dec
mov
xchg
arpl
push
gs
sub
sub
sahf
stos
mov
cmp
nop
das
add
fmul
pop
sti
dec
scas
outs
sbb
iret
dec
add
stos
cmp
jb
xchg
xor
(bad)
adc
pushf
add
movs
add
and
xchg
push
mov
out
xlat
hlt
ret
ret
xor
inc
(bad)
icebp
retf
jl
in
add
out
(bad)
aad
lods
leave
and
leave
pop
in
and
ja
xor
add
push
movs
xor
push
mov
sub
cld
adc
nop
fmul
(bad)
iret
mov
jb
movs
push
js
scas
sbb
scas
mov
and
pop
lock
adc
stc
jle
mov
xchg
push
enter
jb
xor
push
dec
aam
xor
mov
xchg
out
out
dec
enter
xchg
dec
xor
push
xchg
sub
mov
cs
lds
mov
icebp
retf
jmp
jns
jno
fisub
rol
aaa
pushf
cmp
rcr
mov
jne
adc
loopne
fdivp
push
in
rol
aam
xchg
mov
mov
and
pop
mov
cmp
dec
cmp
jmp
push
or
ror
push
out
es
mov
fs
sahf
xchg
lea
(bad)
ins
mov
mov
mov
jg
push
jg
mov
ret
ss
ins
les
jb
adc
mov
les
cmp
nop
mov
mov
and
cmp
and
sub
fs
add
jnp
call
pop
lock
loopne
test
bound
and
(bad)
cmp
scas
sbb
cmps
push
xchg
add
inc
xchg
mov
fsub
sbb
or
xor
adc
mov
add
in
daa
sub
mov
jae
push
(bad)
adc
xchg
dec
pushw
ret
cld
mov
sbb
dec
fld
and
push
stos
cld
adc
ja
xor
stc
mov
je
or
int3
imul
sbb
movs
inc
nop
push
int3
cmc
mov
in
inc
jge
mov
fucom
cmp
std
xor
popf
cmc
jg
bound
or
add
daa
inc
out
popf
mov
cdq
out
add
inc
or
movs
lock
sbb
imul
dec
int
mov
ror
cmp
adc
push
bound
mov
mov
pop
je
pop
pop
scas
sbb
jg
hlt
adc
punpcklbw
add
xor
cld
outs
jmp
repnz
cmps
push
sub
inc
mov
jle
and
adc
sbb
or
jl
sar
icebp
mov
sbb
test
jnp
imul
sahf
adc
inc
push
xlat
daa
fild
inc
(bad)
dec
cmps
fs
fimul
pop
call
int
push
scas
add
mov
(bad)
xor
add
pushf
test
jnp
adc
sbb
dec
mov
jge
xor
xor
rol
sub
jl
sbb
cmc
js
(bad)
xchg
mov
dec
sbb
js
fisttp
pop
iret
stos
enter
pop
in
xchg
sub
jge
mov
xchg
into
fstp
aas
jne
xchg
imul
in
mov
mov
adc
xchg
xor
inc
xchg
and
mov
imul
cmps
adc
push
cwde
pushf
fild
add
fwait
mov
out
sbb
call
mov
pop
cwde
mov
mov
jg
dec
cmps
xlat
sub
mov
or
ds
dec
mov
pop
mov
pop
xor
in
jb
sti
add
adc
adc
dec
ins
data16
xor
jbe
mov
add
cmp
mov
ror
scas
xor
mov
pop
repz
cld
xchg
or
mov
arpl
sbb
outs
or
or
sub
jge
out
es
das
jae
inc
and
into
jae
push
std
add
mov
popf
cli
inc
outs
test
inc
push
pop
mov
pop
xchg
loopne
and
movs
mov
ret
ficomp
pop
xchg
jns
cwde
fidiv
push
sbb
mov
bound
xlat
inc
scas
or
cld
jge
je
dec
jae
xchg
clc
lock
inc
and
dec
add
sahf
or
sti
cmp
mov
sbb
add
mov
dec
add
mov
ins
xchg
mov
mov
repnz
cli
inc
xchg
adc
test
or
pop
push
add
aaa
mov
nop
inc
mov
sbb
pop
stos
sub
out
xchg
xor
daa
cmps
neg
cdq
les
jns
fisttp
or
cmp
lea
repnz
movs
and
ins
lahf
push
xlat
daa
mov
inc
xor
add
sub
mov
call
test
sar
sahf
mov
adc
retf
loop
inc
pop
mov
(bad)
and
inc
lds
push
aas
and
dec
jp
sahf
dec
enter
sbb
mov
call
test
in
sti
mov
sti
xor
mov
pop
out
xchg
xchg
adc
loopne
ror
jo
repz
xor
pusha
jb
mov
sub
sbb
adc
clc
or
mov
frstor
adc
sub
cmp
(bad)
out
pop
stc
popa
mov
add
cmp
imul
adc
cmp
into
jo
mov
cmp
repnz
push
inc
imul
cld
or
cs
or
push
clc
inc
push
movs
pop
outs
shr
push
pushf
repz
cmp
push
lahf
loopne
stos
jp
(bad)
rcl
test
sub
xchg
adc
out
adc
mov
xor
xchg
pop
(bad)
mov
in
pop
clc
jmp
outs
xor
pop
or
int3
xor
lea
mov
in
mov
fstp
adc
push
hlt
adc
scas
xor
cld
sti
and
mov
movs
dec
out
dec
mov
dec
lods
inc
add
cld
inc
push
ins
(bad)
mov
loop
addr16
call
inc
inc
xor
jne
add
leave
scas
jle
cld
stos
cmp
mov
pop
pop
mov
jb
outs
(bad)
cdq
inc
pushf
aaa
loopne
pop
mov
or
(bad)
or
out
xor
add
and
rcr
ins
push
pop
and
xchg
jp
push
pushf
inc
inc
sub
out
jl
fdivr
bound
sar
fisttp
test
sub
stos
dec
cmp
mov
xor
stos
cdq
or
or
mov
mov
add
lods
cli
xor
or
popf
pop
out
and
pop
pop
imul
iret
xor
test
xor
cmp
dec
enter
sub
fst
(bad)
jo
xchg
ret
(bad)
call
push
cmp
add
push
iret
lock
aad
add
or
pop
lods
into
sahf
rcr
rcr
es
sbb
out
test
out
pusha
adc
imul
sub
lock
hlt
in
xor
std
shr
adc
in
(bad)
daa
scas
sbb
jl
push
cmp
ror
ffreep
mov
into
adc
scas
ret
mov
std
jns
mov
cs
loopne
adc
and
sbb
add
call
fsubr
test
push
in
leave
mul
fbld
add
and
xchg
lods
inc
add
push
cmp
shl
push
pop
hlt
lds
movs
sbb
cs
(bad)
(bad)
fmul
lea
xor
xchg
pop
jle
rcr
add
jae
out
and
sub
sub
stos
xor
mov
das
cmp
pop
add
repz
pop
mov
add
fsub
loop
xor
cli
mov
lods
test
xchg
retf
dec
sbb
scas
or
ja
xchg
xchg
mov
xchg
loope
sbb
jmp
add
sbb
sbb
pop
pusha
cmp
jne
dec
push
adc
std
(bad)
jmp
icebp
push
(bad)
jmp
adc
pusha
cmp
push
in
sub
add
pinsrw
fwait
test
sbb
push
and
xor
and
sub
sub
cld
sbb
aam
sub
loope
sbb
push
fmul
jge
test
inc
add
out
js
retf
aam
xchg
lea
adc
lds
cs
push
inc
repz
jl
and
mov
les
mov
loopne
pop
jle
movs
or
mov
and
and
pop
push
jmp
fstp
les
pop
or
lods
in
mov
mov
test
mov
cmp
sbb
sub
outs
arpl
cmc
inc
pop
mov
fstp
sar
popa
(bad)
and
ins
fcom
iret
xor
and
sub
retf
in
hlt
xchg
fidivr
cmc
test
(bad)
inc
xchg
bound
loop
in
mov
out
mov
jecxz
call
popf
sbb
mov
inc
les
fs
fldcw
(bad)
adc
mov
jns
sbb
jp
add
mov
lahf
jae
aaa
dec
mov
push
or
jmp
jmp
and
and
pop
sbb
sub
cmc
cmp
mov
xchg
pop
cmp
shr
jae
push
mov
jmp
or
jp
push
(bad)
cs
mov
mov
dec
std
frstpm(287
fwait
sbb
dec
jnp
dec
movs
xchg
mov
push
retf
mov
jae
call
or
cmp
icebp
in
arpl
sbb
ror
cmp
call
and
jnp
and
xchg
mov
pusha
call
fld
push
cmp
ds
pop
xor
ja
les
dec
mov
xor
ret
push
in
ins
xchg
pop
mov
mov
gs
pop
daa
pop
inc
mov
dec
mov
and
das
int
std
stc
pop
jae
push
push
je
jg
inc
repnz
fs
push
cwde
loop
icebp
sbb
out
imul
add
stos
lahf
mov
(bad)
jp
sbb
xchg
sub
cmp
pusha
ds
out
xchg
scas
add
outs
das
add
rol
repz
jecxz
xchg
or
xchg
sub
pop
loopne
xchg
fistp
movs
jmp
inc
and
adc
sub
lds
test
sub
rcr
into
mov
dec
and
add
outs
inc
movs
clc
jnp
nop
jle
jge
mov
enter
mov
dec
xlat
jne
(bad)
push
adc
jnp
lock
fld
stos
mov
adc
out
mov
movs
sub
mov
js
lds
fisub
cmp
xor
sahf
test
repnz
cli
mov
lahf
arpl
jbe
xchg
les
xchg
and
mov
jmp
fisttp
and
inc
pusha
pop
loop
ins
pop
xchg
dec
fild
mov
dec
(bad)
mov
xlat
sbb
and
mul
(bad)
ror
pop
ret
xchg
mov
call
inc
ins
jp
loop
xchg
fcmovbe
sub
ins
loopne
adc
or
outs
sub
movs
mov
ins
xchg
push
or
xor
pop
idiv
ins
ficomp
cmp
(bad)
cmp
and
arpl
xchg
jmp
rcl
mov
loope
pop
fs
mov
mov
push
mov
jmp
xlat
outs
data16
into
mov
push
(bad)
out
cld
cdq
inc
dec
dec
fstp
pop
aad
mov
pushf
outs
adc
push
std
xor
cs
xor
or
jo
inc
pusha
pop
inc
mov
adc
pop
pop
in
xor
and
sbb
or
out
cmps
sahf
jl
xchg
mov
outs
in
fisub
xor
and
adc
lods
repnz
ins
xchg
jl
pusha
fwait
cld
clc
popa
bnd
fsubr
sbb
lods
mov
push
test
sahf
mov
inc
dec
adc
dec
jb
outs
sub
fsubr
out
mov
mov
sahf
mov
scas
lods
loopne
mov
mov
(bad)
mov
and
aad
cmp
sub
test
pop
scas
popa
push
mov
ja
push
cld
ror
mov
movs
xor
mov
ins
jl
test
clc
sbb
into
cmp
and
loopne
ins
xor
pop
repz
mov
int3
push
mov
in
shr
test
and
rcl
cmp
jb
mov
retf
inc
push
test
cmp
mov
(bad)
(bad)
jno
push
jecxz
xchg
cld
hlt
inc
mov
add
xchg
js
shl
sahf
aam
jbe
ret
clc
add
xor
and
sub
in
dec
shr
mov
jno
lods
ficomp
bound
mov
push
fidivr
and
lods
test
in
mov
test
jae
adc
push
mov
fldcw
sub
ret
cmp
xadd
jl
xor
fmul
ja
and
fidiv
mov
pop
loop
aaa
adc
and
dec
sub
push
xor
sub
and
sub
cmp
test
jecxz
mov
fsub
sub
scas
and
sub
jmp
stc
loopne
movs
inc
out
adc
jg
sbb
in
sbb
pop
nop
loope
add
cmp
adc
arpl
pop
les
or
mov
jl
fiadd
and
xlat
push
mov
fmul
hlt
out
pop
sub
fist
outs
inc
mov
add
add
out
mov
loop
daa
push
mov
in
xor
and
sbb
cmp
cmp
xchg
shl
sbb
add
into
int3
enter
lahf
jmp
add
dec
sar
cmp
dec
ret
cmps
movs
mov
in
pop
sub
mov
daa
sahf
push
stos
cmp
fld
or
mov
jl
cs
imul
xchg
pop
in
adc
call
or
into
mov
pop
mov
fmul
adc
std
jb
popf
fidivr
or
sub
dec
lods
jle
xor
xor
les
lds
repnz
push
cmps
or
xor
pop
add
xchg
scas
inc
std
and
pushf
mov
ret
inc
xchg
sbb
inc
ret
fcom
add
test
sar
push
and
adc
ins
mov
fistp
xor
mov
dec
scas
jp
not
movs
aas
pop
push
cmc
(bad)
cdq
repz
(bad)
rsqrtps
cmps
call
add
pop
enter
fld
js
sbb
outs
mov
mov
popa
jb
aaa
jmp
adc
sub
repz
cmp
aas
movs
sbb
dec
mov
lods
js
pop
mov
mov
ret
in
or
or
xchg
cmp
inc
or
mov
push
and
push
cs
and
in
ret
add
mov
fst
(bad)
rcl
sub
mov
mov
aaa
mov
je
or
aaa
jge
(bad)
popa
mov
in
push
lock
ds
test
frndint
repz
int3
pop
jge
mov
xchg
cmp
push
cwde
out
out
dec
mov
pop
pop
ja
mov
stos
cmp
int
and
ss
inc
call
(bad)
fs
test
dec
push
and
idiv
(bad)
push
lock
je
adc
ins
sbb
xchg
xor
cld
(bad)
fdiv
pop
xlat
jmp
fidiv
pushf
loope
loop
xchg
jae
adc
push
pop
das
mov
push
rcr
aad
mov
jno
call
sbb
mov
arpl
add
mov
mov
(bad)
pusha
xchg
push
sar
and
push
and
psubusw
cmc
pop
sbb
repnz
popa
(bad)
(bad)
repnz
dec
mov
cld
push
push
mov
fs
in
push
add
mov
xor
movs
sbb
int3
mov
test
scas
call
cli
fadd
or
xor
aad
cld
mov
or
inc
neg
lods
fadd
jbe
arpl
sub
shl
lea
shl
mov
jno
dec
jg
and
and
out
ins
adc
push
inc
jmp
add
not
sti
pop
mov
(bad)
in
gs
div
or
xchg
std
icebp
push
adc
adc
mov
nop
dec
sub
leave
adc
bound
in
adc
cmp
daa
retf
add
sub
dec
adc
cmc
(bad)
pushf
hlt
and
fstp
ret
addr16
ins
mov
ins
(bad)
ins
cli
mov
in
lahf
cmp
or
cli
jmp
inc
add
ds
lods
or
pop
inc
lods
popf
in
mov
dec
iret
inc
jle
xchg
push
ins
bt
(bad)
push
jae
ret
aaa
call
cs
fdivp
pop
inc
fwait
in
or
adc
jmp
cmps
sub
cli
add
les
je
mov
shl
pop
jp
sbb
cld
sub
imul
sub
aaa
mov
sub
mov
mov
lods
sub
scas
jg
and
imul
dec
sbb
rcl
lahf
pop
or
mov
shl
or
adc
push
mov
dec
cdq
inc
mov
inc
mov
inc
sub
add
ins
xchg
or
loopne
out
aam
mov
inc
mov
mov
fld
pop
shl
sbb
cmc
div
xor
mov
pop
mov
loopne
dec
rcr
mov
shr
adc
add
cmp
pusha
pop
scas
or
cmp
jl
xchg
mov
pop
xor
int
fnstsw
in
add
aaa
out
loop
mov
repnz
and
hlt
shr
or
sub
mov
popa
sub
cmp
cmp
dec
scas
inc
mov
or
and
and
repnz
into
jge
in
pop
js
push
push
push
mov
shl
or
(bad)
int3
fs
fbld
adc
mov
data16
push
push
ins
mov
test
jle
repnz
xchg
jb
stc
ins
ds
inc
sbb
xchg
mov
or
mov
jb
cwde
xchg
les
and
xor
fs
xlat
push
into
or
add
out
repnz
jmp
inc
mov
push
jne
out
jecxz
xor
mov
adc
repnz
adc
test
mov
addr16
in
sub
std
ds
pop
fidiv
sbb
rep
xchg
add
fnsave
int3
bound
ror
xor
in
xor
mov
or
mov
fisubr
mov
mov
sbb
and
hlt
mov
pop
jno
inc
cmps
js
pop
mov
mov
dec
int
jo
sar
nop
leave
xchg
ins
iret
cwde
out
mul
cdq
dec
pop
aas
lods
dec
test
push
sbb
inc
inc
mov
outs
mov
mov
push
aaa
lock
aam
aas
cmp
lock
pop
inc
rcl
shl
dec
jmp
dec
cmps
sbb
in
addr16
mov
and
sub
fs
sbb
jno
pop
sbb
bound
loopne
daa
xor
fistp
fistp
fbstp
ins
ins
je
mov
jecxz
xchg
les
mov
lock
ja
sar
int3
repnz
cmps
mov
add
scas
lods
pop
jo
mov
mov
add
add
ins
dec
jnp
mov
mov
xor
inc
mov
jno
cli
inc
scas
push
es
int
push
popf
sbb
push
ffreep
jle
pop
mov
adc
xor
call
lods
mov
jnp
jmp
cld
mov
jecxz
lods
xor
adc
push
mov
inc
das
push
cmp
popf
xchg
cmp
loope
xor
and
pop
rcl
jmp
mov
retf
shl
jmp
nop
test
push
lods
mov
repz
sub
add
das
pop
xchg
pop
cmp
aad
and
push
dec
fisttp
repz
mov
dec
ficomp
xlat
dec
shl
ret
pushf
push
lods
push
mov
arpl
rcl
inc
cwde
mov
pusha
mov
lea
mov
fmulp
mov
jno
jecxz
(bad)
cli
in
jle
and
add
les
pushf
shr
and
loopne
xor
das
lds
(bad)
call
or
and
test
xchg
mov
and
arpl
mov
jb
add
cmps
cmps
cmp
xor
xor
call
dec
in
fadd
cs
jne
icebp
inc
cs
or
jge
add
ss
xor
mov
je
xlat
dec
pusha
popa
nop
xchg
jge
sub
add
idiv
cwde
cs
dec
int3
mov
retf
addr16
lods
imul
scas
mov
(bad)
xchg
adc
repnz
pop
repnz
mov
in
xor
mov
dec
push
jbe
mov
lods
fimul
pop
ss
aaa
xchg
popa
lahf
push
mov
mov
jg
add
mov
ficom
mov
sub
arpl
(bad)
lods
fisubr
xchg
mov
push
cmp
cmp
adc
mov
push
jbe
mov
lea
jle
push
push
rcr
pushf
and
sbb
mov
arpl
add
pop
pop
push
shl
shl
ret
or
jecxz
mov
test
jg
dec
outs
test
ret
pop
fisub
mov
sub
pop
mov
mov
mov
xor
dec
test
into
repnz
(bad)
lods
mov
daa
push
xor
adc
jg
and
mov
cwde
ror
cmc
lea
std
sahf
xchg
pop
adc
(bad)
repnz
mov
loope
mov
sub
repz
push
aam
mov
or
sbb
pop
aam
cmps
jno
(bad)
mov
sbb
mov
push
pop
push
ins
add
(bad)
ret
popf
mov
cmp
arpl
xor
ret
cmp
scas
prefetch
pop
sbb
cmp
and
mov
bound
jne
int
aaa
in
mov
xor
arpl
mov
(bad)
fisub
test
and
addr16
jae
and
not
xor
jp
cld
jae
sbb
xchg
jbe
scas
add
lods
shl
nop
test
adc
mov
cmp
rcr
cmp
jae
imul
mov
add
in
adc
add
mov
push
push
mov
popa
popf
addr16
and
ss
mov
mov
cmp
xor
xor
lahf
mov
xchg
cmp
cmp
in
fld
das
jmp
xor
ins
ror
and
imul
mov
jnp
gs
rcr
add
xor
push
outs
mov
test
add
scas
and
(bad)
ins
into
adc
adc
mov
sbb
inc
jo
or
es
or
pop
mov
fldcw
mov
pushf
push
lods
lea
shr
and
in
sub
addr16
aam
shl
iret
inc
stos
cwde
ins
rcr
lods
add
or
xchg
shl
ins
ins
jge
nop
dec
xchg
outs
mov
sub
(bad)
cmp
pop
fiadd
mov
je
lods
xchg
das
aam
rol
jnp
lahf
xchg
dec
or
xchg
jl
mov
cmp
add
push
lods
nop
xchg
stos
lods
xchg
jnp
inc
jo
or
mov
jno
aaa
or
jbe
xor
jge
dec
ret
xchg
in
(bad)
outs
cmp
fld
hlt
pop
add
jb
or
fnstsw
test
ds
jle
sti
inc
mov
sbb
ins
mov
lods
jne
xor
(bad)
ins
aad
ret
push
ret
call
xor
addr16
and
mov
push
out
adc
retf
pop
mov
fs
int3
das
out
inc
das
out
mov
pop
push
or
mov
je
sbb
adc
sub
add
arpl
std
jge
jp
retf
add
and
mov
xchg
xor
xor
jae
(bad)
test
lahf
arpl
(bad)
mov
sbb
clc
and
pop
icebp
push
mov
loop
inc
enter
adc
inc
jne
movs
loope
in
xlat
xchg
into
jo
cmp
adc
sbb
sbb
jge
jo
pop
mov
or
pop
cmp
ss
shr
(bad)
cmp
inc
clc
rcl
fst
dec
sahf
sub
stos
sub
into
xchg
or
jl
push
cs
pop
mov
mov
xor
repnz
dec
or
out
sub
jo
int3
fst
jo
mov
js
xor
adc
repnz
and
add
adc
push
push
aas
rcl
mov
sahf
and
in
int3
iret
push
sbb
out
cmp
xor
loopne
pop
mov
dec
xor
ins
mov
pop
xor
ins
sub
rcl
and
stc
mov
mov
cld
je
mov
sub
jno
mov
dec
in
xor
int
xor
sbb
cs
xchg
ret
jecxz
loop
das
push
add
pop
pop
int3
xchg
xchg
jg
inc
addr16
outs
pusha
call
daa
pop
sub
xor
xor
cld
or
add
neg
call
pop
push
jp
mov
dec
mov
out
inc
and
dec
std
xchg
and
adc
or
bound
cmps
(bad)
popa
sbb
jo
int3
fstp
and
push
cld
fist
sti
pop
mov
out
jae
imul
pop
ror
loopne
int
dec
pop
or
ret
in
mov
lods
pusha
jmp
mov
push
cs
sti
ds
das
ret
nop
repz
outs
pop
inc
(bad)
stos
jecxz
outs
in
fdiv
add
and
push
dec
dec
fsub
retf
out
lar
test
or
bound
sbb
stos
dec
and
std
jmp
xchg
jns
movs
lahf
and
jmp
lods
jbe
jnp
imul
dec
dec
push
add
(bad)
out
inc
rcr
jecxz
push
jge
dec
jle
retf
jg
sbb
add
outs
shr
stos
rcl
das
sbb
int
out
call
xchg
and
inc
les
sub
out
sahf
and
and
leave
fisubr
into
inc
mov
adc
pop
mov
dec
cli
int3
retf
adc
aad
int3
repnz
add
mov
js
jl
mov
xor
fcom
xor
xor
dec
jecxz
cmp
dec
mov
and
push
outs
push
xchg
mov
test
repnz
pusha
adc
xchg
cmps
movs
pop
mov
in
test
ja
adc
sti
cmp
push
sub
data16
cmp
(bad)
ins
mov
imul
cmp
mov
leave
in
dec
pushf
xchg
xor
pushf
into
icebp
neg
sbb
or
aam
mov
mov
adc
rcr
adc
sbb
dec
xchg
xor
int3
ficomp
stos
xchg
jo
in
in
lods
test
inc
inc
add
fmul
mov
dec
das
into
(bad)
xor
pusha
xchg
jo
inc
into
dec
scas
lods
or
std
push
pop
adc
iret
mov
cdq
shl
out
add
pop
cmp
rcr
cmp
mov
bound
xor
or
(bad)
xor
cmp
pushf
(bad)
jo
or
adc
jecxz
ret
jns
push
neg
and
mov
ret
imul
and
in
mov
fadd
dec
adc
lahf
imul
mov
push
scas
xor
(bad)
int3
fyl2xp1
cmp
fsubr
sbb
(bad)
fidiv
mov
jne
inc
int
rol
pop
dec
cmp
dec
jge
inc
mov
pushf
mov
pop
sub
mov
jle
or
pop
adc
sbb
repnz
dec
(bad)
mov
popf
fcomp
sub
mov
adc
iret
and
ins
add
inc
mov
popf
ja
fdivr
movs
inc
bnd
adc
xchg
jg
into
sar
dec
push
jg
push
pop
push
pop
ds
push
jg
and
idiv
pushf
fst
ficom
stos
icebp
mov
pop
pushf
push
clc
mov
inc
movs
lea
adc
add
mov
adc
dec
dec
das
cli
xchg
pop
cwde
jecxz
cmp
pushf
jle
sbb
add
aaa
ret
cld
pop
(bad)
adc
aam
mov
fistp
ds
push
jbe
(bad)
fnsave
add
and
ins
loop
call
mov
jle
shl
mov
mov
adc
push
mov
mov
adc
push
lods
ret
imul
xchg
jmp
jb
arpl
pop
das
(bad)
in
pusha
mov
and
int3
mov
pop
and
mov
jecxz
sbb
dec
cwde
in
cmp
pop
push
xlat
int
or
jp
push
sub
int
scas
xor
test
bound
lock
adc
sahf
bound
sub
mov
sbb
sar
jns
fsubrp
repz
dec
push
hlt
imul
je
fwait
inc
js
mov
adc
push
icebp
fnstsw
push
popa
clc
es
fdivr
xchg
scas
pop
cmp
rol
int3
int
pop
and
fwait
and
nop
cmp
inc
cmps
sub
imul
iret
std
pop
scas
std
jmp
(bad)
out
xlat
cmp
mov
jge
leave
fild
push
lea
arpl
pop
int
(bad)
sub
repnz
fdivrp
scas
push
jbe
pushf
pusha
ins
push
mov
lock
sbb
and
rcr
shl
adc
adc
mov
mov
add
add
mov
and
cld
data16
sbb
xchg
dec
xchg
inc
fwait
mov
fisub
pop
in
or
lahf
cmp
ins
inc
ficom
(bad)
ins
pop
fld
lods
push
jbe
nop
mov
jb
repnz
or
repz
add
push
rol
lods
icebp
pop
jge
push
mov
lahf
inc
in
xchg
and
leave
sub
popf
xor
add
jo
mov
mov
adc
popf
arpl
idiv
dec
push
das
(bad)
cmp
cs
mov
sar
mov
jmp
fstp
repz
adc
(bad)
test
jne
or
pop
das
rcr
out
aas
sbb
jecxz
and
and
jne
push
shl
movs
inc
mov
iret
jnp
cmp
xchg
dec
ss
xor
cmp
out
mov
ret
sbb
into
bound
dec
sahf
frstor
or
repz
imul
jmp
cs
popa
mov
mov
sub
dec
sub
jb
repz
and
sbb
pop
es
mov
lahf
clc
loope
in
sbb
pop
scas
das
dec
lods
mov
loopne
dec
mov
sbb
int
fucom
sub
shl
xor
jl
pop
jbe
sahf
jl
and
in
stc
in
or
mul
fs
adc
sbb
jg
mov
mov
pop
out
add
lock
repz
xor
jo
cwde
outs
xchg
in
dec
sub
push
sti
mov
adc
retf
push
sub
and
scas
xchg
cmp
sti
jne
stos
ja
and
jge
pop
xchg
retf
add
into
sub
int3
fisub
lahf
mov
cmps
std
cmovl
xor
push
sar
sub
rcr
mov
mov
popf
aad
push
in
pop
sahf
mov
sbb
jl
rcr
repz
(bad)
cs
jge
xor
mov
inc
jg
std
outs
push
loopne
sub
out
sub
add
or
xor
mov
lock
mov
push
inc
xchg
(bad)
cld
dec
scas
pop
xchg
and
add
sar
aam
(bad)
jl
pop
pusha
adc
inc
call
pop
imul
in
xchg
into
cmp
push
jg
jl
ins
jl
jnp
inc
mov
xor
daa
adc
xor
cmp
sub
xlat
pusha
jmp
sbb
mov
mov
fidivr
out
or
mov
dec
mov
xor
nop
dec
add
push
xchg
fmul
loopne
icebp
mov
xor
xor
add
daa
push
jge
popa
mov
push
push
push
adc
adc
std
add
in
pop
lock
fst
scas
sbb
in
xchg
(bad)
and
aaa
retf
jg
xchg
popf
cld
adc
xchg
cmp
rcr
jmp
lea
pushf
xor
mov
leave
and
mov
inc
sbb
adc
mov
add
repz
cmps
jp
leave
dec
data16
adc
and
and
sti
mov
mov
mov
fdiv
fstp
jo
add
icebp
rol
ds
pushf
pop
pop
mov
push
sbb
arpl
sub
ret
adc
pusha
in
jb
mov
xor
mov
fld
aaa
xor
xchg
test
repnz
mov
bound
sub
sub
shr
push
ret
aaa
(bad)
fadd
loop
push
cmp
call
test
and
aas
xadd
push
dec
std
fdivr
jmp
mov
popf
jno
ficom
sub
add
(bad)
lock
dec
rol
inc
add
nop
fimul
std
shl
hlt
aas
mov
inc
cmps
mov
mov
mov
adc
ss
in
sub
fistp
int3
mov
dec
mov
imul
mov
in
or
pushf
adc
and
(bad)
jp
jle
adc
(bad)
outs
mov
int3
mov
loope
xlat
jo
iret
adc
bound
shl
mov
fmulp
mov
(bad)
sbb
pop
jmp
sbb
or
or
inc
nop
mov
adc
repz
inc
(bad)
and
and
shl
or
nop
dec
xchg
mov
cmp
lods
div
test
pop
add
test
rol
popa
push
inc
mov
xor
add
mov
repnz
lock
sbb
popf
scas
stos
jmp
sbb
mov
aaa
xor
and
push
xchg
jl
pop
push
jbe
arpl
aaa
inc
cmc
mov
fld
mov
mov
sar
ret
fdiv
mov
mov
mov
or
bound
cmp
and
adc
mov
jge
jno
or
(bad)
jl
shl
cli
mov
push
pusha
in
ja
xor
push
add
mov
fld
cmp
push
pop
sub
xor
xor
mov
jge
adc
pop
and
call
or
in
popa
mov
(bad)
fisubr
xchg
push
pop
and
mov
jmp
pop
lea
ins
jg
aas
cmp
jge
dec
icebp
jo
pop
push
add
mov
test
jae
adc
dec
push
adc
std
pop
rcl
std
push
loope
pushw
mov
sbb
jb
aas
sbb
mov
in
xor
ret
or
mov
sbb
xchg
xchg
mov
pop
pop
movs
jne
xor
movs
push
sbb
int
mov
push
(bad)
adc
gs
mov
xor
mov
push
pop
xchg
stc
nop
movs
mov
(bad)
mov
cs
inc
test
ror
icebp
fadd
outs
xchg
fadd
cli
pop
cld
jae
pop
pop
retf
push
in
jecxz
jg
xchg
sub
or
mov
daa
pop
xchg
or
cs
xor
pop
in
div
push
fucom
int
stos
sbb
xchg
inc
add
(bad)
xchg
xor
mov
and
fisubr
fs
(bad)
adc
mov
inc
sbb
fs
pop
xlat
jbe
test
adc
xor
lahf
lock
mov
sub
addr16
mov
or
and
xchg
add
jbe
daa
shl
mov
rcl
xor
jecxz
arpl
push
cmp
out
fld
mov
or
mov
les
test
xchg
or
div
lds
pop
sbb
loop
cmc
retf
and
push
xor
xchg
cmp
leave
outs
fdiv
inc
je
fs
pop
dec
ficom
xchg
(bad)
jne
dec
and
and
pop
and
push
push
scas
push
inc
mov
xor
mov
and
mov
in
ror
sub
add
push
mov
mov
mov
repz
lods
adc
xor
mov
popa
and
push
stos
and
fs
out
arpl
add
ret
mov
adc
pusha
pop
call
scas
outs
adc
mov
pop
outs
cs
cmp
or
inc
aaa
add
pop
xor
jl
rol
mov
add
loop
jo
lods
sub
outs
ret
cmp
mov
push
outs
repz
fsubr
out
loope
outs
dec
inc
xchg
or
xadd
lock
mov
lea
daa
(bad)
xor
mov
inc
popa
xor
and
adc
loope
push
mov
shl
adc
jnp
and
call
stc
add
or
mov
sub
jnp
mov
int3
cwde
cmp
(bad)
pop
sbb
outs
pusha
pusha
mov
xor
movs
sti
outs
sub
imul
lods
dec
out
bound
ret
test
xchg
push
adc
shl
cdq
mov
arpl
lock
pop
stos
fldcw
lea
and
jno
out
repz
adc
adc
rcr
loopne
dec
pushf
outs
fadd
pop
repnz
xchg
imul
repz
mov
lods
fisttp
pop
push
ss
sbb
and
mov
ins
(bad)
fsub
(bad)
outs
loope
out
cmp
arpl
push
aad
hlt
cld
mov
dec
fdiv
mov
rcl
jge
call
popf
pop
mov
mov
jge
test
sbb
inc
(bad)
icebp
xor
das
stos
push
xor
cmc
test
repz
pop
addr16
xor
leave
pop
mov
sub
xor
not
imul
adc
sar
adc
mov
test
ins
sub
mov
push
loopne
pop
adc
add
faddp
inc
mov
xor
jb
cs
into
cld
sahf
xchg
jnp
nop
mov
std
push
stos
sub
cld
icebp
ret
fisttp
in
ret
test
fnstsw
mov
push
lods
ret
adc
retf
pop
out
fstp
sbb
pushf
outs
dec
rcl
std
xchg
outs
pop
push
loopne
clc
jae
bound
frstor
and
mov
cmps
fld
shr
rol
sub
lock
sub
ins
ret
xchg
lods
out
push
pop
ret
aam
xor
adc
mov
mov
lock
or
push
mov
fwait
sbb
popa
das
xchg
dec
jge
mov
lea
(bad)
lods
xor
and
or
scas
sub
pop
fucom
pop
mov
mov
sub
adc
inc
adc
xor
mov
dec
pusha
scas
jbe
add
mov
xchg
mov
cmp
add
sub
mov
stos
mov
adc
jae
adc
in
int
pusha
int3
loopne
cld
in
fdivr
xchg
xchg
popa
cmps
dec
mov
xchg
jo
adc
int
jmp
add
push
aaa
adc
mov
lods
and
pop
into
retf
jo
and
int3
or
xchg
arpl
(bad)
out
mov
stos
mov
inc
jae
test
pop
jl
ret
jbe
(bad)
out
in
and
iret
mov
ins
les
test
mov
inc
sti
pushf
inc
jmp
(bad)
(bad)
dec
mov
push
lds
pop
lods
or
sbb
ds
fld
pop
xlat
fnsave
sub
mov
inc
mov
scas
pop
mov
sub
int3
pop
or
mov
repnz
stos
xchg
sub
shl
and
in
fidiv
cdq
pop
push
jns
jecxz
out
xor
sbb
dec
pop
xor
retf
add
or
sahf
lock
(bad)
lods
mov
mov
adc
mul
(bad)
in
retf
(bad)
xchg
imul
inc
stos
jle
pushf
iret
dec
pop
out
enter
int
fnstsw
or
add
and
mov
sahf
cwde
adc
and
ret
pop
mov
dec
fisttp
push
push
shl
adc
add
es
es
stos
sbb
scas
xchg
or
aaa
mov
jns
mov
fidiv
(bad)
rcl
loop
jmp
cmps
inc
jg
int3
or
inc
mov
ror
and
adc
mov
jbe
push
lods
inc
sub
mov
jmp
cld
xor
dec
cmp
sti
add
ins
fiadd
inc
and
outs
or
jecxz
sbb
aam
shr
push
xchg
mov
adc
mov
aaa
ins
dec
nop
xchg
push
jno
(bad)
std
jbe
and
ret
xor
outs
xor
jne
mov
call
jmp
mov
(bad)
out
jge
mov
movs
dec
sub
mov
and
sbb
jnp
xchg
(bad)
or
mov
into
aaa
or
fs
inc
inc
call
lahf
xchg
add
adc
mov
xchg
mov
in
addr16
xor
enter
(bad)
fsub
jp
pop
mov
pop
mov
into
lods
adc
mov
call
pop
dec
jg
repz
test
setne
push
sbb
shl
mov
iret
push
mov
in
aas
mov
ret
xchg
stos
mov
xchg
out
cmp
in
shl
aam
popf
pusha
out
hlt
mul
mov
xchg
xchg
clc
inc
jge
repz
push
repnz
or
(bad)
leave
cmp
popf
pop
mov
in
and
cmp
stos
scas
pop
lods
shl
jg
jl
mov
push
es
aas
mov
and
ret
push
ror
leave
movs
mov
xchg
arpl
push
scas
scas
imul
div
cmp
sbb
iret
test
inc
cmp
push
mov
push
cmps
adc
add
add
test
push
ins
dec
fldenv
(bad)
cld
push
fld
xor
dec
jecxz
ja
jae
aam
cld
test
arpl
neg
inc
shl
add
aaa
arpl
cdq
dec
popf
repz
add
and
cmp
sub
fldcw
cwde
sbb
outs
cmp
scas
loop
mov
leave
sub
addr16
or
mov
out
xchg
jnp
sub
das
ja
imul
and
aad
add
hlt
sbb
lods
popa
stos
ds
push
sub
(bad)
sub
fld
jmp
out
bound
mov
aaa
ins
imul
stos
outs
bnd
xor
jnp
nop
adc
dec
xor
push
icebp
int3
mov
mov
jmp
add
repz
call
xchg
rcl
mov
adc
jno
in
push
push
push
or
push
mov
repz
pop
sbb
inc
mov
ins
pop
sbb
(bad)
pop
sbb
pop
add
pushf
ss
int
pop
lds
push
test
sbb
pop
fldcw
es
mov
fadd
rcl
(bad)
cwde
ds
outs
mov
and
and
fst
xchg
movs
or
jge
hlt
or
daa
jecxz
dec
xchg
add
lock
dec
lods
cmp
mov
xchg
call
imul
mov
les
pop
ror
fbstp
cmp
cmp
out
xchg
sbb
sbb
cmp
xchg
into
pop
pop
outs
nop
cmps
or
sbb
rcl
pushf
fxtract
imul
dec
dec
push
inc
into
push
cdq
mov
and
jecxz
dec
add
cmps
pushf
rcr
dec
jae
je
inc
jmp
cdq
hlt
inc
jecxz
sbb
fsub
je
int3
shl
fsubr
adc
fdiv
sbb
mov
pop
sub
lahf
and
inc
fsub
loop
dec
adc
sbb
sbb
pushf
es
pushf
das
pushf
mov
neg
pop
mov
fadd
push
in
adc
mov
pop
iret
pop
dec
test
in
fnstcw
push
mov
(bad)
daa
pop
xor
pop
mov
xchg
stc
test
xor
ret
xchg
xchg
xor
push
or
ret
xchg
mov
lea
fidiv
popa
sbb
mov
push
dec
mov
pop
xor
inc
in
mov
jno
shl
(bad)
dec
add
mov
push
lea
xchg
jns
jge
sbb
xchg
add
xor
pop
loopne
ret
xchg
mov
mov
jno
adc
xor
cmp
xchg
test
push
inc
fsubr
in
lock
sbb
mov
and
and
out
mov
clc
bound
mov
mov
shl
mov
mov
ja
jne
push
mov
popa
push
pop
icebp
outs
gs
std
inc
sbb
add
call
(bad)
sbb
call
lea
into
not
pop
mov
mov
fnsave
xor
out
add
jl
fst
jge
pop
sub
bnd
add
xor
xor
mov
fmul
pop
call
stos
xchg
mov
adc
xor
sahf
and
lea
stos
xor
xor
aad
lock
xchg
push
mov
inc
icebp
or
std
push
push
pop
imul
call
test
pop
xchg
inc
pop
add
pop
xchg
push
mov
gs
add
cld
push
mov
push
mov
mov
retf
call
(bad)
in
mov
push
jmp
dec
out
push
in
add
les
dec
dec
add
call
retf
stc
retf
sub
sbb
call
cmps
bound
jle
mov
out
mov
retf
dec
jmp
mov
dec
dec
jmp
leave
sahf
dec
mov
inc
mov
xchg
fs
jmp
in
sar
jo
and
jmp
call
or
adc
call
push
retf
inc
into
xor
mov
cdq
dec
in
and
jb
jl
(bad)
jns
dec
cwde
into
mov
popa
push
inc
sar
add
leave
mov
imul
aad
(bad)
int3
mov
stos
add
shr
je
pop
cli
push
inc
cmp
nop
mov
jp
retf
nop
fisttp
add
xchg
ret
mov
lods
jne
pop
pop
fwait
sbb
loope
dec
xor
push
xor
jne
xor
adc
push
add
bound
inc
out
jo
or
add
shr
or
inc
inc
pop
dec
ror
xor
popf
pop
mov
xchg
pop
(bad)
mov
xchg
mov
push
(bad)
mov
fidivr
push
dec
jno
fimul
adc
movs
fucompp
bound
mov
pop
pushf
je
fild
add
addr16
fwait
pop
xor
and
add
xchg
pop
scas
fwait
push
fwait
aam
rcr
push
mov
cwde
cwde
jnp
outs
gs
push
fnstenv
push
rol
arpl
sbb
fcmovbe
jle
fcmovnbe
xor
lahf
adc
dec
call
pushf
mov
mov
dec
pop
shl
rcr
sti
xchg
inc
test
stc
and
push
adc
jle
sbb
and
lahf
pop
sbb
mov
push
fist
inc
test
push
mov
pop
fcom
rcr
jnp
pop
fcmovne
xchg
pop
clc
loopne
sub
sar
pop
(bad)
rcr
fld
sbb
(bad)
pop
mov
jmp
test
cmc
sti
or
rcl
into
jg
xor
xchg
je
and
push
aaa
push
daa
je
adc
je
fld
push
(bad)
nop
movs
add
push
mov
stos
and
fadd
mov
xchg
inc
adc
mov
sub
pop
fstp
or
iret
mov
ja
inc
in
xchg
mov
push
mov
jbe
add
dec
stos
lods
dec
and
xlat
dec
lods
xchg
es
daa
dec
pushw
sub
inc
loop
xor
in
pop
lods
ss
push
or
imul
dec
pop
scas
retf
add
call
sub
sub
dec
inc
in
cmp
in
mov
retf
sub
sub
stos
or
sbb
jmp
sub
mov
std
outs
xchg
inc
jecxz
lods
dec
sbb
mov
outs
pop
sbb
mov
out
or
out
or
sar
jmp
js
js
push
add
ret
popa
add
sbb
push
cmp
mov
jbe
push
js
adc
push
sub
ret
sbb
(bad)
push
aaa
imul
ret
sub
add
ror
ret
adc
and
mov
or
sub
mov
add
in
pop
add
add
pop
es
mov
add
fcmovbe
inc
sub
fild
push
enter
sub
in
add
(bad)
xchg
mov
dec
mov
inc
push
jmp
rcr
mov
es
stos
dec
aas
je
xlat
ret
int3
cli
js
adc
jmp
lods
dec
rcl
iret
push
(bad)
stos
imul
fs
push
mov
lods
ret
rcl
push
sbb
(bad)
mov
add
dec
lds
clc
leave
xor
jl
mov
(bad)
push
lahf
push
push
dec
enter
xlat
out
in
lock
push
dec
imul
jecxz
je
xlat
sub
shl
push
ror
push
cmp
xor
mov
std
aad
mov
(bad)
mov
add
loopne
(bad)
cmp
shl
cmp
rcr
mov
shl
add
mov
(bad)
xor
fiadd
test
jae
fwait
push
sar
rcr
hlt
lock
inc
sbb
je
xor
ja
and
int3
out
repz
jbe
jl
jle
sti
jmp
mov
stos
dec
je
pop
cmps
mov
push
jb
jle
jp
push
jl
push
and
ja
sub
dec
dec
adc
repz
sub
sbb
cld
std
push
sbb
jl
mov
cmc
push
push
stos
cmc
mov
push
nop
mov
dec
mov
mov
lds
out
xlat
jb
inc
and
ja
(bad)
ret
push
mov
mov
jns
lods
jne
aas
jbe
stc
adc
and
(bad)
mov
ja
cld
loop
lods
mov
fnstsw
in
push
(bad)
es
cld
push
clc
es
sbb
cld
shl
xor
jg
adc
clc
mov
inc
aam
aaa
sub
mov
jns
adc
sub
mov
ret
sub
add
cld
jbe
shl
ret
cmp
ja
ja
mov
xlat
jno
ds
cmp
lods
jnp
inc
xchg
fldcw
lock
mov
cmp
push
xchg
mov
dec
addr16
jbe
lds
ins
jno
cld
jbe
xchg
cmp
jae
mov
add
imul
out
add
mov
sub
and
icebp
and
clc
nop
lods
ins
call
stos
xchg
add
test
cmp
push
ins
ins
aas
xchg
add
jmp
cmps
sti
mov
ins
jg
jne
jge
mov
ret
sahf
mov
mov
ret
inc
mov
dec
out
into
xchg
out
out
cld
push
lods
add
or
jno
aam
clc
out
inc
hlt
mov
xchg
out
out
cld
(bad)
test
xchg
sbb
(bad)
cld
(bad)
jno
mov
cmp
xlat
cmp
xor
sub
jne
aaa
cmps
pextrw
xchg
std
mov
out
or
jne
sub
ds
cld
jge
inc
cmp
js
ja
cld
mov
jns
out
cmp
out
stc
adc
cld
cmp
out
xlat
and
scas
call
add
mov
aas
pop
imul
cmp
cmp
ret
into
cld
out
inc
std
rol
adc
adc
inc
mov
les
retf
adc
mov
call
bound
xor
xchg
xor
lock
inc
or
xchg
and
adc
inc
call
repnz
xor
push
fdiv
call
xor
add
sbb
push
sub
fcmovu
push
xor
ins
jge
fiadd
rcl
adc
fs
pushf
xchg
fs
fwait
call
fwait
mov
fstp
(bad)
(bad)
sbb
sbb
mov
mov
call
sbb
xor
(bad)
call
mov
sbb
fadd
jb
das
rcr
mov
mov
scas
ret
mov
xchg
jo
idiv
fs
xor
and
mov
rcr
mov
retf
adc
dec
ficom
xchg
mov
mov
sub
pop
xor
or
sbb
icebp
jmp
adc
call
dec
rol
or
pop
data16
or
fcmovb
and
mov
fisubr
xor
dec
mov
sbb
mov
fimul
es
mov
fiadd
mov
inc
inc
dec
mov
int
int3
mov
jle
xlat
xor
retf
je
rcr
shl
retf
cdq
into
and
push
ficom
xchg
lahf
xor
mov
mov
inc
add
sub
pop
xor
cmp
adc
push
mov
xlat
rcl
jo
pop
xor
xor
push
xlat
xor
popf
call
ss
add
pop
mov
scas
cmp
ins
cmp
mov
popf
scas
mov
jb
dec
out
jno
shr
shl
inc
jmp
scas
mul
xchg
dec
inc
mov
adc
fsubr
push
mov
sahf
(bad)
mov
jbe
gs
scas
or
mov
xchg
dec
push
xchg
push
dec
push
push
fcomp
and
fsubr
or
shr
popf
add
dec
mov
sub
add
gs
loopne
jg
jmp
adc
scas
pop
scas
and
xchg
mov
mov
lahf
mov
inc
in
and
out
push
sahf
stos
scas
push
sahf
xchg
cdq
push
and
dec
sti
dec
clc
adc
xchg
dec
mov
push
mov
scas
stos
jmp
dec
jns
and
cmc
add
fxam
aaa
pop
adc
adc
push
imul
fimul
or
mov
xchg
dec
sbb
mov
scas
add
movs
fst
scas
push
fild
into
adc
sahf
ins
jo
in
push
dec
mov
retf
imul
cdq
stos
jno
fdivr
add
sbb
scas
test
xchg
push
scas
xchg
out
xor
shl
xchg
push
push
xor
inc
std
mov
xchg
scas
push
cs
outs
add
adc
adc
pop
sub
(bad)
push
add
jmp
xchg
xchg
outs
push
mov
std
scas
adc
xlat
lds
push
inc
push
stos
adc
retf
push
outs
push
movs
retf
adc
sahf
push
push
and
(bad)
pop
out
(bad)
dec
sub
add
out
cmp
clc
ret
mov
add
retf
ficom
cmp
mov
inc
xor
(bad)
or
pop
cs
pop
les
outs
jne
add
inc
clc
push
in
inc
aaa
aam
mov
mov
sbb
sub
adc
push
outs
inc
cmps
xor
imul
push
mov
arpl
cmp
sbb
push
cmp
xchg
jns
and
cs
ret
lea
cld
(bad)
cld
out
push
std
jbe
add
sbb
jecxz
out
daa
mov
inc
cmp
popf
out
addr16
ret
sbb
jecxz
out
cmps
cmp
pop
(bad)
fld
mov
cld
xchg
sub
ret
out
fnsave
mov
dec
jne
jno
cmp
mov
aas
inc
fmul
mov
in
cmp
jno
cmp
mov
aas
inc
fmul
out
sbb
pop
js
adc
dec
lods
repnz
(bad)
cmp
cdq
les
pop
(bad)
cld
outs
cld
(bad)
cld
sbb
push
cmp
leave
xchg
lods
retf
xor
adc
(bad)
xlat
outs
lods
xchg
mov
push
cmps
cld
jecxz
out
pop
sbb
or
idiv
cld
mov
cmps
cmp
pushf
(bad)
ins
aaa
xchg
sbb
dec
cld
in
pop
cmp
mov
or
xchg
cmps
mov
push
pop
(bad)
jno
cld
in
mov
(bad)
lods
cmc
lods
out
add
ins
repz
sbb
cmp
cmp
jl
mov
adc
jne
cs
int3
adc
aam
rol
aam
rol
aam
rol
icebp
cmps
jmp
scas
enter
mov
icebp
scas
popf
mov
adc
xchg
out
xchg
popf
rol
enter
ss
in
or
cdq
cmp
icebp
test
jnp
ins
cld
packssdw
ret
push
sub
push
icebp
add
jl
call
mov
mov
pop
mov
pop
mov
pop
mov
inc
sti
add
add
add
add
sbb
sbb
sbb
pop
in
not
sbb
or
hlt
or
mov
pop
mov
pop
mov
cmc
push
cmc
push
cmc
push
sbb
cmc
push
cmc
dec
mov
jbe
adc
push
xchg
mov
sbb
dec
xor
cmp
test
push
shl
div
pop
ficomp
inc
or
dec
jo
push
stos
mov
cmc
push
repnz
mov
leave
lods
scas
sub
sbb
test
mov
pop
push
jle
lds
mov
rcl
and
inc
adc
shl
add
push
ds
mov
jo
mov
dec
mov
mov
fnsave
jns
inc
push
inc
jbe
push
inc
jbe
push
inc
jbe
xchg
inc
jbe
push
inc
jbe
push
inc
jbe
push
inc
jbe
xchg
inc
jbe
push
inc
jbe
push
inc
jbe
push
inc
jbe
xchg
inc
jbe
push
inc
jbe
push
inc
jbe
push
inc
jbe
xchg
inc
jbe
push
inc
jbe
push
inc
jbe
push
inc
jbe
loop
and
sub
adc
stc
xor
xor
sub
xor
outs
sub
loop
adc
xor
pop
adc
cmp
adc
loop
adc
das
add
push
sub
xor
xor
xor
xor
(bad)
add
and
(bad)
enter
cs
adc
adc
sub
hlt
xor
pop
pop
push
cmp
xor
adc
xor
sub
ficom
xor
adc
xor
adc
and
and
and
xor
and
jbe
aad
pop
add
ss
data16
jbe
lock
pop
cwde
lods
sbb
ror
adc
in
test
mov
dec
dec
sub
push
aaa
and
mov
pop
gs
cmc
test
and
or
fcmovnu
stos
mov
cmp
inc
es
outs
sbb
sbb
out
ret
pushf
xchg
rcr
sub
jae
(bad)
out
repnz
iret
stc
inc
outs
push
sbb
sbb
jae
out
cmps
pushf
jmp
sbb
sbb
jae
jns
repz
stc
lds
jns
outs
sub
cmps
stc
cmc
lock
cli
inc
sbb
and
outs
dec
sbb
repz
out
call
sbb
jb
jno
jle
stc
shl
jge
jo
jae
jns
pushf
shr
xchg
rcr
pshufw
jp
jae
enter
repnz
sbb
xor
es
rcl
call
pop
es
inc
jle
push
(bad)
inc
ficomp
cmc
pop
mov
dec
(bad)
pop
dec
mov
xchg
or
dec
jo
mov
nop
mov
adc
fisub
sbb
dec
push
sbb
pushf
cmps
pushf
xchg
sbb
sbb
sbb
pushf
cmps
pushf
xchg
inc
xchg
sbb
mov
int3
out
jb
adc
or
sbb
jg
(bad)
shl
inc
inc
cs
int
cmp
jmp
inc
jb
push
mov
mov
add
add
(bad)
mov
push
sbb
or
sbb
ror
test
es
push
cmp
cmps
mov
or
mov
cmps
loop
mov
aas
adc
mov
xor
dec
sub
bound
mov
loop
bound
xor
into
cmc
cli
jo
cmp
push
xchg
mov
sub
test
inc
mov
xor
adc
cmp
enter
inc
dec
mov
xchg
push
inc
(bad)
mov
or
mov
lods
push
mov
ret
mov
and
mov
dec
lahf
mov
loopne
pop
xor
pop
cmp
rcl
dec
inc
sub
arpl
addr16
std
mov
mov
inc
sbb
pop
pop
sub
jno
mov
test
cmp
cmp
dec
jnp
mul
xlat
xchg
in
aam
pop
and
imul
dec
fsub
lock
sub
adc
jmp
jo
outs
dec
push
pop
jae
add
cmps
repnz
lock
je
adc
adc
push
out
les
jbe
adc
cld
xchg
xchg
or
dec
push
jge
pop
inc
nop
mov
movs
loop
call
aaa
bound
imul
lock
shl
inc
pop
adc
or
loopne
fwait
shl
jae
dec
pusha
sbb
jmp
jne
ja
or
punpckhbw
mov
cwde
popf
(bad)
into
addr16
and
adc
sub
loop
mov
add
pusha
ins
ret
mov
mov
in
(bad)
pop
adc
xor
or
lock
dec
dec
xor
add
mov
xchg
nop
out
out
dec
push
and
push
mov
jb
outs
xor
ja
shl
scas
lock
imul
jmp
mov
jne
and
push
inc
push
push
imul
sub
add
jns
movs
retf
stos
inc
inc
sub
pop
js
sbb
xchg
push
and
pop
sub
sub
xor
int3
push
dec
jp
or
push
fs
int3
lahf
mov
sbb
jo
movs
mov
(bad)
lods
stos
pop
dec
or
cmp
mov
jno
inc
add
mov
ss
sub
sub
jns
lea
push
or
and
sub
je
cmps
sub
mov
sbb
jl
jb
stos
lahf
cwde
cwde
cld
mov
sub
cmp
dec
jmp
inc
pop
arpl
or
cmp
cmps
retf
sub
sub
or
and
mov
dec
sub
adc
test
pushw
adc
and
inc
out
nop
mul
cmp
add
sahf
xchg
pop
and
push
cmp
sbb
mov
jnp
pop
push
adc
sbb
jmp
xor
or
push
push
dec
xchg
dec
je
cmp
cmp
mov
xchg
push
pop
xor
call
push
es
adc
pushf
lods
stos
and
cmp
xor
sub
js
or
sub
cs
loopne
add
leave
cld
adc
jge
adc
fst
iret
xchg
scas
sti
fnstcw
es
add
(bad)
enter
sbb
rcr
aaa
jl
push
and
aam
ret
add
and
cmps
call
enter
or
data16
daa
in
lds
call
adc
fcomp
lahf
cmps
popf
xlat
cmp
xor
(bad)
cmc
stos
fild
ror
push
sub
cmp
mov
or
(bad)
xchg
xchg
lods
jmp
push
mul
mov
ins
fnsave
inc
xor
not
push
push
add
add
aam
adc
or
push
aaa
arpl
movs
repz
ja
xchg
arpl
push
test
jmp
mov
ja
aaa
sbb
movs
jmp
push
pop
sbb
(bad)
jecxz
movs
mov
mov
ffree
daa
cmp
or
les
lods
add
icebp
rcl
in
rcl
mov
mov
mov
jmp
sub
aas
or
lds
(bad)
inc
loopne
mov
jno
js
mov
mov
ds
sub
outs
xlat
sub
inc
test
pop
scas
mov
fwait
adc
push
rcl
aad
cmc
sub
mov
xor
jmp
loopne
jmp
mov
push
mov
out
inc
icebp
bound
lahf
sub
in
dec
sti
sub
test
jmp
shl
lods
int3
dec
lahf
push
jmp
fcom
and
(bad)
jb
js
sti
and
imul
aad
movs
mov
pusha
rcl
cmc
xlat
pop
rcl
sti
dec
lods
shr
xor
retf
xchg
xor
(bad)
imul
in
and
jl
ss
xchg
ins
movs
xchg
xor
xor
jmp
mov
sub
and
inc
jmp
pop
sti
push
rcl
sti
dec
cmc
xor
dec
in
dec
sti
jae
add
jne
adc
fidiv
addr16
xor
iret
push
movs
xchg
adc
sti
test
arpl
icebp
ror
push
jecxz
and
xor
lods
nop
out
xchg
call
jmp
pop
leave
out
mov
cwde
mul
xchg
(bad)
jmp
inc
fld
enter
into
mov
std
clc
fst
lock
xor
scas
leave
lods
mov
pop
loopne
push
jg
out
xchg
mov
idiv
clc
lea
push
push
cmp
mov
pushf
clc
fmul
inc
and
sub
(bad)
mov
call
push
dec
cmp
in
fucomp
(bad)
aam
adc
jns
mov
leave
int
test
mov
jmp
rcr
sbb
cs
mov
(bad)
in
cld
mov
(bad)
call
hlt
loop
repnz
pop
cmp
xchg
cdq
sti
mov
mov
xchg
mov
pop
jl
mov
mov
in
mov
add
xchg
fmul
adc
mov
icebp
cmps
ret
icebp
fdivr
xor
xchg
mov
mov
jecxz
in
stos
mov
mov
shl
loope
bnd
mov
inc
jo
scas
leave
jmp
mov
fwait
mov
loope
mov
mov
jno
mov
(bad)
mov
xchg
mov
pusha
mov
test
mov
jb
mov
jmp
movs
mul
jb
push
mov
ror
lock
mov
fld
test
dec
mov
std
shl
lahf
xchg
in
movs
test
aam
mov
xchg
and
bound
lock
in
xchg
in
stos
xchg
je
outs
xchg
aam
stos
mov
push
mov
mov
mov
bnd
dec
cmps
mov
scas
mov
stos
popf
mov
mov
hlt
test
adc
mov
mov
pushf
or
(bad)
fnsetpm(287
mov
push
dec
xchg
jmp
mov
dec
arpl
mov
fbld
push
mov
sub
push
jge
addr16
sub
xor
loopne
add
push
pop
fmul
mov
loope
cs
jp
sahf
jl
cld
or
mov
add
mov
inc
call
fisubr
dec
inc
scas
mov
ins
ins
cmp
(bad)
(bad)
jmp
sub
cs
jge
loopne
dec
jmp
push
outs
fisttp
dec
pop
jle
outs
pop
daa
push
or
push
sub
cs
mov
mov
and
outs
pusha
pop
pop
or
or
es
test
mov
cmp
sti
int
or
clc
cmp
jmp
or
push
aaa
cmp
int
into
jle
sbb
dec
inc
jns
das
dec
push
sub
fcmovnu
bound
jns
or
cmp
cmp
daa
add
sbb
dec
arpl
cmp
repnz
pop
outs
cmp
and
sbb
das
push
jae
stos
inc
mov
retf
cmp
out
push
mov
dec
(bad)
gs
xor
out
sbb
xor
popa
mov
inc
adc
pop
int
lea
mov
repnz
fnstenv
pop
call
jne
pusha
mul
call
mov
jmp
jae
jbe
mov
jmp
jmp
adc
(bad)
cmp
pop
(bad)
and
add
inc
adc
lock
sbb
dec
in
pop
loopne
ins
movs
aad
icebp
jo
arpl
adc
inc
mov
mov
fidiv
adc
mov
mov
and
outs
xchg
mov
leave
inc
repz
sar
push
std
or
data16
xor
outs
fisttp
xor
leave
dec
cld
jl
mov
push
xlat
add
pop
mov
inc
jmp
push
movs
push
fldenv
inc
call
iret
fisubr
scas
jns
push
stos
and
and
jae
push
push
jnp
push
xchg
fild
add
inc
xor
aam
fcom
loope
int3
jno
jp
cmp
iret
pop
into
adc
into
and
add
mov
push
cld
and
aam
ins
xchg
push
pop
pop
cmp
dec
adc
cmp
and
popa
push
pop
das
jl
fs
xor
pop
(bad)
jne
and
das
cmp
push
sbb
adc
daa
fnstsw
sub
xor
and
pop
cmp
push
arpl
jae
inc
cmp
sbb
jno
inc
push
inc
push
inc
and
pop
adc
es
popa
sub
sbb
sub
sub
dec
pop
push
ja
add
push
inc
inc
mov
push
pop
ins
push
sbb
and
xor
fcom
pop
(bad)
inc
sub
and
pop
push
adc
sbb
js
xor
and
push
loop
aaa
es
arpl
daa
add
jge
and
sub
inc
push
data16
add
sub
push
je
jle
imul
inc
and
sbb
push
pop
and
xor
or
pusha
pop
push
push
inc
daa
jbe
dec
xor
add
mov
ins
xor
xor
mov
xor
jl
push
addr16
bound
sub
xor
pop
xor
add
inc
push
push
dec
jbe
jl
jbe
inc
add
jp
push
cmp
dec
inc
push
jbe
imul
pop
sub
imul
pop
push
cmovl
dec
inc
addr16
adc
push
or
pop
ins
dec
pop
pop
push
and
aaa
dec
dec
pop
dec
dec
push
push
jnp
jg
dec
jns
dec
and
push
cmp
push
dec
data16
jb
jns
cmp
push
xor
pop
dec
push
sub
jle
push
adc
pop
dec
jae
das
or
jb
sbb
push
imul
and
pop
sbb
ins
xor
dec
pop
jne
dec
dec
dec
dec
imul
pop
pop
jae
das
jbe
push
and
outs
cmp
bound
push
xor
and
dec
cmp
adc
dec
adc
dec
push
inc
adc
dec
ja
pop
outs
jns
push
bound
sbb
push
dec
dec
dec
or
sbb
pop
dec
sub
pop
jl
or
or
ja
dec
pop
jne
imul
xor
jno
jns
shr
imul
dec
jne
inc
add
imul
inc
pop
push
aaa
pop
dec
dec
pop
or
ja
inc
pop
jb
imul
dec
push
and
jl
adc
inc
cmp
pop
jns
xor
jnp
jb
cmp
dec
push
das
jb
jno
or
inc
push
xor
sub
jnp
add
outs
jnp
imul
jae
sub
dec
(bad)
dec
fs
shl
fdivrp
repz
in
bnd
int
ret
fadd
xchg
fmul
and
out
or
fist
test
(bad)
stc
out
icebp
fwait
stc
mov
lock
xchg
xchg
in
icebp
in
(bad)
cwde
cmc
sar
sti
jmp
loope
(bad)
fcmovnbe
add
aam
out
in
cld
out
(bad)
enter
fxam
jmp
in
into
out
shl
lahf
out
shl
mov
xchg
lea
icebp
call
fxch
mov
stc
ret
(bad)
aad
std
retf
les
lahf
(bad)
fst
xchg
rcr
iret
loop
cwde
lock
int3
out
in
in
clc
hlt
in
iret
fst
lahf
cdq
int3
loop
rcr
cli
ret
jmp
(bad)
lahf
in
out
div
repz
add
lock
in
mov
int3
(bad)
add
shr
out
out
stc
rol
(bad)
in
cmc
repnz
shl
les
jmp
mov
sti
lock
jmp
mov
xchg
aad
rcl
leave
cmps
jno
out
and
imul
or
mov
lods
push
mov
push
add
in
ret
fcmovnbe
pop
pop
mov
dec
cmp
xor
cmp
lss
mov
leave
sbb
sbb
cmp
push
std
ds
add
or
pop
mov
jmp
push
popf
or
adc
xor
addr16
lods
(bad)
pop
mov
xor
lock
pop
lea
add
ins
adc
push
std
fs
stos
push
mov
loope
cmp
add
(bad)
into
or
pop
retf
cmp
sbb
push
xchg
mov
mov
cmp
cmp
adc
sbb
sbb
es
add
push
lods
ret
std
add
lea
jmp
(bad)
iret
xor
pop
(bad)
cmp
pop
sub
jno
push
leave
cmp
mov
cmp
movs
addr16
bound
cmp
in
push
lods
loopne
push
icebp
arpl
out
repz
mov
js
out
cmp
sub
pop
mov
mov
lds
fdivr
jne
jns
push
idiv
leave
pop
mov
pushf
mov
cli
dec
or
mov
int
(bad)
(bad)
lahf
(bad)
in
test
cmovge
ficom
std
(bad)
mov
repz
mov
jge
mov
imul
ins
(bad)
sbb
clc
outs
cmp
pop
lea
in
retf
call
mov
jmp
in
ror
jle
fidiv
out
mov
jns
test
fidivr
imul
jb
xchg
mov
and
aad
xchg
add
movs
aas
bound
xchg
mov
pop
jmp
jmp
push
add
iret
cmp
out
arpl
add
enter
and
(bad)
outs
mov
push
mov
mov
int
mov
sar
add
movs
es
arpl
mov
ja
loope
mov
mov
shl
cmp
mov
xor
ret
and
push
aad
mov
nop
lods
dec
push
inc
mov
sbb
test
xor
gs
pop
fidivr
xchg
loop
scas
nop
jne
mov
mov
xchg
xchg
mov
mov
add
out
nop
push
xchg
mov
ins
pop
xor
push
out
rol
xor
mov
(bad)
rol
daa
inc
not
mov
gs
xor
mov
mov
lock
push
mov
loop
inc
imul
mov
into
bound
test
mov
mov
cmc
mov
adc
xchg
mov
lds
shl
cmp
lds
fnstcw
test
mov
add
mov
in
les
lods
cmc
fs
push
test
iret
adc
(bad)
mov
sub
mov
dec
test
shl
xchg
(bad)
add
mov
inc
pop
inc
iret
xchg
xchg
out
stc
out
loopne
jbe
rol
add
mov
add
movs
mov
loopne
test
les
mov
pop
add
mov
jno
rcr
js
rcl
mov
fild
mov
mov
(bad)
ficom
mov
not
cmp
or
loopne
jp
and
cmps
hlt
call
jmp
mov
je
push
loope
and
cmp
je
add
jg
cli
cli
sbb
and
clc
cmp
and
inc
sbb
push
cs
mov
cmp
jmp
sar
xor
inc
(bad)
xchg
das
cmp
jb
imul
mov
sbb
fisttp
pop
adc
sahf
pop
dec
xor
in
push
mov
adc
mov
fistp
call
repz
jno
push
push
sub
pop
pop
out
dec
aas
mov
sub
pop
adc
mov
ficomp
(bad)
(bad)
test
aaa
aaa
sub
hlt
enter
fnstsw
or
js
call
jp
and
jo
dec
pop
pop
push
pop
fistp
popf
sbb
cmp
pop
ins
jl
js
jp
cli
sahf
xor
clc
sbb
mov
or
push
imul
mov
int
into
call
jnp
fucomip
int
dec
add
sub
adc
ss
cs
pop
das
je
push
cmp
dec
push
das
ret
sbb
mov
push
stos
pop
and
lds
cs
rcr
and
sub
pop
mov
and
(bad)
popa
iret
adc
push
into
or
or
jmp
out
or
adc
cmp
fbld
adc
xchg
fist
and
xor
loope
sti
test
jle
stos
pop
in
scas
inc
ds
cs
loope
daa
jmp
or
dec
push
jno
in
xchg
mov
jle
(bad)
push
jmp
in
or
sub
adc
stc
xor
sahf
adc
test
mov
test
push
in
out
add
mov
popa
push
addr16
dec
in
test
jecxz
into
mov
gs
aad
aas
mov
mov
inc
mov
dec
sub
out
daa
dec
enter
(bad)
in
or
lahf
and
rcr
push
sbb
sbb
mov
loopne
and
loope
test
sub
int
mov
push
cmp
leave
outs
lea
and
fwait
add
(bad)
mov
nop
inc
mov
push
test
cmp
jno
test
dec
push
mov
and
imul
and
xchg
mov
inc
scas
push
sbb
mov
mov
and
shl
add
xchg
adc
inc
aas
ret
out
adc
aaa
sub
or
mov
jle
inc
dec
inc
pop
push
pop
cmp
adc
out
dec
ja
cmc
fs
push
inc
xor
jae
gs
sub
jne
push
dec
push
arpl
push
aad
or
aam
xor
test
and
leave
push
leave
ret
bound
addr16
mov
mov
shl
mov
es
adc
sub
call
and
push
jbe
dec
fs
ss
fadd
or
pop
in
loopne
(bad)
mov
and
add
push
inc
in
shl
in
test
aaa
cmps
inc
leave
icebp
xchg
loopne
xor
inc
cmp
push
or
dec
aad
rcl
push
and
aad
and
fwait
test
in
das
int3
dec
inc
fs
(bad)
xchg
test
dec
icebp
xlat
repnz
fild
ins
jmp
xchg
sub
inc
inc
repnz
dec
sub
ret
imul
mov
push
xor
js
jmp
test
jb
outs
sub
iret
out
jecxz
enter
call
test
and
(bad)
jno
or
imul
(bad)
out
(bad)
mov
ret
push
stc
cmp
leave
into
stos
xchg
out
clc
mov
int
cli
jnp
(bad)
and
pop
push
js
(bad)
sahf
cwde
or
scas
in
call
test
or
(bad)
jecxz
cmp
push
jns
pop
xchg
aam
sub
sbb
adc
mov
push
sbb
(bad)
mov
xchg
jmp
sbb
pop
in
pop
pop
outs
movs
xchg
ins
pop
push
retf
add
(bad)
loope
shr
outs
fs
or
or
cs
leave
out
adc
or
jg
rcl
adc
or
daa
shr
pop
pop
int
dec
cwde
cs
mov
js
ds
mov
int
or
imul
cmp
or
pop
dec
ror
add
clc
jmp
nop
jmp
lock
gs
adc
sahf
leave
xor
xchg
xchg
push
outs
rcl
cmc
adc
add
xchg
scas
lahf
inc
push
jae
mov
fidiv
push
pop
leave
mov
xchg
cmc
icebp
ret
call
push
imul
pop
inc
call
fistp
add
push
data16
pusha
adc
(bad)
mov
pop
pop
inc
mov
pusha
mov
and
and
(bad)
into
rol
ins
or
jo
popa
mov
xor
sti
mov
gs
loopne
loopne
pop
hlt
xor
xor
test
and
jno
add
xchg
clc
pop
imul
inc
shr
push
mov
(bad)
or
mov
nop
push
loope
retf
shr
hlt
inc
cs
mov
or
adc
mov
retf
aad
mov
pop
lea
cdq
lods
sub
xor
daa
push
push
mov
cmp
fwait
cmps
iret
xchg
sbb
(bad)
mov
xchg
jns
adc
lock
mov
mov
nop
test
es
sbb
mov
push
stc
xchg
pop
xchg
cmp
sub
sub
enter
cmp
or
out
cmp
js
pop
adc
stos
inc
add
scas
xor
push
js
loope
cmp
sub
xlat
call
push
ja
dec
inc
sub
(bad)
xchg
xchg
adc
cmp
es
test
cmps
(bad)
(bad)
aas
or
mov
mov
xor
hlt
pop
sar
stos
js
scas
out
lds
test
cmp
push
sbb
es
mov
sbb
push
mov
push
aaa
push
les
int
test
push
jb
ss
cmps
dec
xchg
cmp
lahf
mov
call
mov
xlat
sub
cmps
inc
inc
out
push
cwde
sbb
cwde
std
push
jl
jl
fmul
sub
fbld
mov
xor
pop
pop
fistp
pop
fwait
call
pop
cdq
fucomi
xlat
push
fisttp
add
gs
inc
das
hlt
dec
shl
aaa
fwait
loop
psubusb
aam
fistp
loope
mov
das
push
in
ss
(bad)
dec
lods
cmp
aad
ror
(bad)
loope
lods
ret
cmp
mov
fstp
fisubr
pop
(bad)
cmp
cmp
mov
(bad)
jp
cmp
push
(bad)
test
sub
inc
aas
stos
mov
jmp
pop
cmp
mov
fsub
(bad)
sbb
pop
sub
xor
mov
addr16
xor
fld
(bad)
fisttp
mov
jle
pop
(bad)
lods
push
sbb
mov
inc
pop
pop
sub
sti
sbb
sub
fsubr
mov
lods
cs
sub
pop
daa
pop
or
mov
lods
es
push
xchg
stos
ret
int
lds
and
sub
arpl
retf
xor
xor
push
(bad)
jo
nop
mov
mov
sahf
add
or
pop
fiadd
mov
push
sub
xor
add
xchg
shr
xlat
icebp
add
enter
mov
lahf
int3
jp
inc
and
ud2
inc
jo
out
mov
sar
(bad)
out
and
inc
add
push
std
popf
pop
shl
or
movs
fild
stos
xchg
sub
push
xchg
add
add
rcr
xor
aam
cmp
call
into
clc
sbb
(bad)
inc
cmps
pop
sub
std
lahf
repnz
lahf
mov
arpl
adc
ins
dec
dec
inc
pop
inc
es
mov
sbb
pusha
daa
mov
in
leave
add
xchg
or
ds
pop
(bad)
xor
dec
mov
iret
(bad)
xor
rol
dec
mov
mov
adc
int3
inc
ret
inc
rol
cmps
nop
or
les
and
and
or
outs
xchg
inc
sub
sbb
pusha
mov
mov
dec
movs
or
and
xor
int
jle
call
leave
mov
pop
adc
mov
and
movs
pop
pushf
pop
out
icebp
sub
jae
sahf
es
mov
adc
aas
xchg
adc
sub
mov
mov
pop
retf
out
jp
(bad)
jmp
mov
addr16
cmp
in
push
call
or
sbb
out
popf
jle
lods
xchg
cwde
inc
outs
aas
mov
fisttp
push
rcr
xor
or
leave
add
call
push
aad
in
stos
jmp
(bad)
push
sub
mov
mov
push
clc
xchg
icebp
fwait
cli
xchg
mov
mov
loop
into
out
std
dec
adc
lea
adc
pop
ffreep
add
pop
adc
xchg
push
mov
xchg
mov
push
jp
cli
out
(bad)
push
or
mov
std
clc
ficomp
push
and
dec
sbb
cmc
and
jmp
fadd
sbb
cmp
push
inc
sub
push
ins
cmp
inc
ret
cli
cli
cwde
cmp
adc
cli
mov
add
out
je
push
or
or
ror
into
mov
in
mov
push
hlt
stc
loopne
test
stos
push
or
fisttp
dec
sub
lea
mov
or
mov
mov
je
in
adc
push
iret
push
enter
or
into
sbb
fwait
mov
sub
fisubr
jne
jp
imul
clc
sub
push
mov
or
call
mov
jne
ja
repz
or
or
xchg
into
test
out
pop
scas
sub
mov
add
imul
add
add
in
daa
aad
sub
lods
mov
sbb
int
leave
sti
sbb
jmp
cmp
stos
cwde
mov
push
pop
scas
das
pop
inc
out
daa
js
mov
mov
fcmovbe
or
repnz
cdq
or
dec
xchg
out
push
or
inc
mov
je
je
xchg
pop
neg
adc
mov
fistp
clc
(bad)
cmp
in
mov
addr16
sbb
push
(bad)
sti
xchg
push
(bad)
daa
sti
cmp
(bad)
fcomp
(bad)
xchg
addr16
mov
lods
dec
jbe
and
nop
loope
jne
pop
cwde
clc
jge
imul
inc
pop
test
out
jle
xor
in
dec
je
imul
out
push
scas
daa
std
mov
mov
test
jnp
ja
sbb
push
adc
aam
push
mov
jno
pop
stos
pop
jl
aam
or
sub
push
lods
mov
lds
push
adc
mov
mov
test
push
xchg
js
dec
ins
push
jne
inc
cmp
nop
and
cdq
sbb
add
pop
add
inc
repnz
add
popa
xor
stc
stos
sub
cmc
cmp
mov
ret
adc
mov
(bad)
and
mov
in
(bad)
repnz
push
call
repz
and
mov
mov
jne
out
mov
pop
loopne
cmp
cmp
add
add
cmps
pop
jecxz
adc
cli
call
jne
hlt
xchg
adc
arpl
and
adc
daa
xor
imul
hlt
inc
inc
push
test
xor
pcmpgtb
icebp
repnz
call
ja
adc
inc
pop
mov
adc
cs
mov
(bad)
sbb
or
or
les
xor
jb
cmp
daa
push
dec
cmc
xchg
and
cmc
add
aad
jp
mov
mov
(bad)
xor
lods
sub
adc
jno
sbb
jno
mov
cmp
jmp
adc
mov
adc
adc
call
xor
clc
(bad)
mov
cld
(bad)
hlt
jae
ins
(bad)
fld
mov
imul
stc
jmp
sbb
call
dec
sahf
mov
and
addr16
mov
pop
(bad)
fcomp
arpl
xchg
jne
out
dec
call
movs
popf
xchg
outs
xchg
pop
jne
mov
out
or
push
jno
popa
mov
sbb
cdq
arpl
mov
xchg
xor
and
test
xor
mov
jb
fcom
xchg
push
ss
inc
push
cdq
lods
jmp
sub
sahf
call
cmp
dec
ja
sub
leave
aad
mov
ins
jbe
mov
std
fistp
rcr
fcom
xlat
test
stc
cs
mov
mov
in
cdq
xchg
cmp
sahf
fld
lods
js
outs
mov
data16
xchg
pop
sbb
test
jb
sub
mov
test
inc
test
jle
fidivr
out
or
pop
gs
fimul
and
adc
int
xchg
mov
fs
pop
sub
push
xchg
or
mov
mov
out
js
xchg
push
mov
and
scas
je
test
pop
push
iret
adc
xchg
les
retf
fisub
pop
aas
adc
out
mov
or
pusha
dec
inc
mov
pop
stc
jecxz
fimul
je
mov
cmc
outs
idiv
or
or
mov
call
adc
adc
mov
loope
inc
cdq
add
push
fld
test
in
dec
rol
repz
cld
fldcw
pop
mov
repz
cmp
(bad)
cld
push
sbb
adc
pop
rcl
(bad)
rol
jo
icebp
dec
cmp
scas
xlat
sar
sar
mov
adc
ret
sbb
imul
shl
and
xlat
add
push
pusha
je
sbb
aam
lods
mov
and
mov
add
retf
out
pusha
out
fdiv
push
push
cmp
das
fisttp
les
or
push
jmp
jge
je
fs
adc
ficom
imul
push
jno
mov
dec
fcom
mov
push
pushf
mov
bt
and
aam
xchg
inc
jmp
and
or
add
push
jl
and
jbe
pop
pushf
jno
push
jecxz
xor
cmp
fdivrp
mov
dec
sbb
dec
es
jbe
mov
dec
outs
xor
aam
sbb
in
push
sbb
dec
pop
add
xchg
mov
inc
mov
mov
shl
idiv
call
pop
dec
(bad)
pop
hlt
pop
fisubr
fs
mov
or
icebp
xchg
cwde
hlt
mov
bound
imul
out
push
push
cmps
mov
mov
cdq
push
mov
jle
mov
data16
loopne
cmp
cmp
fwait
sub
dec
mov
mov
jmp
retf
push
mov
imul
out
imul
fimul
pop
pop
iret
out
cwde
jno
(bad)
mov
ret
and
cwde
aaa
pop
imul
mov
mov
sbb
mov
cmps
cdq
jmp
add
dec
hlt
push
inc
mov
pop
cmp
scas
dec
out
cdq
cmc
pop
cmp
cs
xchg
mov
push
xor
sub
out
jecxz
pop
adc
xchg
lahf
or
aaa
adc
scas
hlt
or
jae
mov
push
aam
leave
in
(bad)
or
outs
lock
ds
(bad)
dec
or
or
out
or
or
cmp
lea
or
idiv
mov
in
outs
and
cs
std
(bad)
jmp
or
mov
or
add
jg
movs
in
lods
fcomp
adc
fld
sub
dec
sub
dec
sbb
xor
nop
icebp
ins
sbb
jns
imul
pop
mov
out
cmp
scas
int3
mov
daa
lods
pop
mov
in
jmp
or
js
idiv
retf
call
ss
dec
dec
sbb
sbb
jae
adc
dec
adc
pop
fwait
dec
jle
sbb
in
rcr
jnp
jo
jns
sub
jnp
ins
pop
cmp
syscall
xor
or
in
or
stos
sbb
inc
xor
sbb
in
jl
cs
leave
imul
sub
cld
cmp
mov
(bad)
or
ins
mov
pusha
xor
test
imul
jp
mov
lea
pop
enter
jmp
ds
jbe
push
jp
xor
xor
add
jecxz
das
(bad)
clc
adc
aad
inc
push
cmp
sbb
sbb
aad
add
adc
cmovno
sbb
pop
sbb
icebp
and
add
inc
inc
and
jbe
xchg
ret
push
dec
hlt
inc
add
push
inc
sbb
add
and
adc
xor
push
inc
inc
dec
mov
aas
imul
xor
dec
inc
cmps
inc
mov
or
inc
sbb
ja
clc
and
inc
loopne
dec
(bad)
xchg
jge
std
sbb
pop
imul
push
xor
pop
inc
nop
sbb
gs
dec
mov
xchg
dec
stos
pop
cmp
push
push
add
mov
or
aaa
je
sbb
adc
nop
std
xchg
dec
(bad)
vxorps
test
inc
dec
cmp
mov
scas
retf
mov
add
in
jbe
pushf
jo
inc
jg
push
inc
inc
mov
push
movs
mov
and
adc
dec
aaa
data16
stc
leave
sahf
cmp
mov
shr
popa
out
sub
xor
cwde
cmp
bound
shl
xchg
inc
inc
outs
inc
ja
xchg
pop
jl
dec
pop
sbb
rcl
nop
mov
add
outs
sbb
cs
push
mov
icebp
cmp
sbb
or
xchg
pop
jmp
ret
or
inc
nop
(bad)
daa
push
popf
push
jp
jbe
ror
inc
cs
mov
mov
inc
aaa
mov
dec
push
out
jp
mov
mov
dec
cmps
push
xchg
por
cmp
mul
add
(bad)
pop
inc
xor
sub
fmulp
xor
sbb
retf
(bad)
sti
cmp
rol
fdivrp
and
cwde
ficomp
push
cmp
cmp
pop
xor
jp
cli
adc
aam
loopne
mov
cld
call
repnz
jo
pop
in
(bad)
loopne
hlt
mov
bound
cmp
add
pusha
cvttps2pi
out
scas
add
xor
xor
das
mov
mov
mov
xor
xor
mov
mov
lods
mov
mov
mov
mov
movs
cmp
test
mov
mov
xor
xor
mov
mov
aaa
stos
mov
mov
mov
mov
cmp
test
mov
and
mov
add
mov
mov
mov
mov
xor
stos
xor
mov
mov
xor
sub
xor
xor
mov
movs
movs
aas
movs
aas
movs
mov
and
mov
mov
mov
mov
mov
lods
xor
mov
mov
mov
mov
xor
xor
mov
movs
aas
movs
aas
movs
cmp
mov
stos
xor
mov
mov
mov
mov
xor
xor
mov
jbe
mov
inc
dec
pop
or
les
cld
inc
shl
rcr
call
loop
or
outs
cmp
add
pop
inc
scas
jb
imul
std
pop
sbb
push
aad
rep
sub
mov
ins
int
jae
pushf
adc
sti
mov
rcr
mov
aam
cmps
adc
test
popf
jg
fisubr
mov
mov
mov
add
fcomp
cli
ror
pop
dec
push
or
lods
adc
xor
jge
or
and
or
(bad)
ret
and
pop
jecxz
ret
sbb
lods
mov
inc
cmp
fnstsw
shr
mov
mov
cli
cmp
lds
xchg
cmps
jno
shl
add
in
daa
xchg
(bad)
mov
jge
push
xor
inc
jmp
push
mov
add
std
cld
std
jns
ficomp
jb
fwait
adc
int
scas
sub
push
mov
jae
(bad)
mov
aam
and
add
pop
inc
int3
mov
inc
sub
popf
repnz
jmp
rol
fst
sub
in
clc
lea
dec
loopne
cmp
loope
addr16
ins
dec
loop
add
lods
dec
push
cld
or
icebp
sub
out
xchg
lds
sub
fmul
jbe
shr
lock
sahf
pop
xor
jae
outs
loopne
mul
ins
sub
or
jge
and
pushf
inc
mov
cdq
mov
ror
and
sahf
adc
xor
mov
mov
inc
xor
aas
into
popf
scas
push
iret
ss
bound
imul
les
shr
cmp
fsubr
(bad)
mov
mov
push
movs
add
push
mov
ds
xor
stc
pop
and
xchg
or
ins
fsubr
pop
cmp
imul
mov
cmp
xor
test
cmp
sbb
cli
pushf
adc
pop
cmps
enter
ja
mov
imul
sub
repnz
inc
or
pop
mov
mov
ret
repnz
mov
pusha
les
imul
or
and
jecxz
fstp
inc
test
add
lock
in
mov
out
mov
mov
dec
fnstenv
xor
retf
add
out
push
or
sub
lods
movs
mov
xchg
mov
lods
mov
cdq
loop
out
cmp
push
xchg
sbb
stos
adc
sub
dec
dec
xchg
xchg
cld
xchg
and
push
out
fbstp
arpl
sti
mov
gs
ja
jb
ror
js
(bad)
mov
dec
in
gs
push
sub
cmp
out
pop
xchg
inc
add
mov
mov
ins
std
lods
into
movs
jo
ds
clc
dec
dec
cld
sub
test
adc
lods
lds
xor
call
push
out
jp
loop
and
sub
arpl
pop
cmp
es
fwait
cmps
and
sbb
mov
nop
call
repz
xor
ret
inc
xor
xchg
push
or
dec
enter
mov
adc
sub
xor
(bad)
jge
ins
xchg
jge
inc
dec
inc
shl
jb
pop
shl
ins
lods
xor
cwde
gs
ds
pop
in
(bad)
fidivr
in
and
mov
and
xchg
mov
cs
push
and
aad
push
mov
mov
xchg
and
fdiv
jnp
adc
fnsave
cmp
adc
mov
ins
jl
mov
dec
loop
(bad)
in
iret
shr
into
daa
xchg
sbb
mov
mov
xor
jae
add
pop
test
mov
push
jge
(bad)
xor
in
clc
sar
je
iret
sbb
fld
mov
inc
in
jb
lahf
dec
jnp
adc
add
cmp
jl
pop
xchg
pop
mov
add
repnz
fist
sbb
xchg
mov
imul
retf
test
mov
scas
mov
jns
xor
(bad)
mov
imul
mov
popf
(bad)
in
sub
test
mov
mov
xchg
aam
rcr
shr
ret
sbb
test
shl
mov
sub
and
cmp
mov
jg
mov
cmp
jle
add
mov
cmp
mov
jge
mov
or
jmp
lea
lea
mov
cmp
je
mov
movzx
mov
add
shl
or
mov
add
mov
add
mov
add
mov
cmp
jne
add
cmp
jl
mov
mov
mov
lea
shr
add
mov
mov
and
lea
mov
or
jmp
mov
sub
js
cmp
jge
mov
mov
test
mov
je
cmp
je
mov
movzx
mov
mov
add
movzx
add
cmp
mov
je
test
jle
mov
cmp
jge
mov
movzx
sub
mov
add
test
mov
mov
jg
jmp
test
jle
mov
mov
mov
cmp
jge
mov
sub
mov
add
test
mov
mov
jg
jmp
mov
cmp
jge
add
cmp
jae
cmp
mov
lea
mov
mov
mov
jbe
lea
lea
mov
sub
add
mov
mov
sub
lea
mov
sub
add
mov
mov
sub
add
mov
lea
shr
add
add
movzx
mov
mov
movzx
mov
mov
movzx
mov
mov
movzx
mov
sub
sub
sub
jne
mov
mov
test
jbe
sub
mov
mov
jne
mov
jmp
mov
shr
mov
lea
and
add
cmp
mov
mov
jle
jmp
lea
mov
mov
mov
sub
cmp
jg
add
test
jle
mov
mov
add
mov
mov
mov
sub
sub
test
mov
jg
add
mov
mov
cmp
jne
mov
mov
lea
mov
jmp
lea
nop
mov
lea
movzx
mov
mov
lea
movzx
mov
mov
lea
movzx
mov
mov
lea
movzx
mov
sub
sub
test
jge
lea
mov
sub
sub
test
jge
mov
movzx
movzx
add
cmp
lea
lea
mov
je
movzx
mov
mov
jmp
movzx
mov
mov
mov
add
test
jne
mov
add
cmp
mov
jge
movzx
mov
mov
imul
add
mov
lea
mov
lea
add
mov
mov
mov
mov
sub
mov
mov
mov
mov
cmp
mov
jge
mov
or
lea
mov
cmp
je
mov
movzx
mov
add
shl
or
mov
add
mov
add
mov
add
mov
cmp
jne
add
mov
cmp
jl
mov
mov
mov
sub
mov
shr
mov
mov
shl
mov
sub
and
jmp
add
mov
jmp
mov
test
jl
cmp
jge
lea
xor
lea
mov
mov
mov
rep
mov
mov
add
add
sub
jne
mov
mov
lea
mov
mov
cmp
jl
cmp
jg
add
add
cmp
jle
cmp
mov
mov
mov
mov
mov
je
lea
mov
lea
rep
xor
cmp
jle
mov
movzx
mov
lea
lea
mov
mov
mov
sar
add
test
jne
mov
and
or
jmp
mov
mov
jmp
mov
mov
sar
xor
sar
and
xor
mov
mov
add
add
cmp
jl
mov
mov
mov
sar
movzx
movzx
and
add
add
shr
mov
mov
movzx
mov
and
shl
or
mov
jmp
lea
lea
mov
mov
lea
mov
mov
and
sar
movzx
add
add
shr
movzx
and
shl
mov
mov
or
mov
add
test
jne
mov
sar
and
or
mov
jmp
mov
sar
xor
sar
and
xor
mov
mov
cmp
mov
jne
mov
mov
imul
xor
cmp
mov
mov
mov
je
cmp
mov
mov
jb
pop
pop
pop
mov
pop
mov
xor
call
add
ret
lea
push
push
call
mov
mov
mov
shr
mov
movzx
movzx
and
add
add
shr
mov
movzx
add
and
shl
or
add
cmp
mov
jne
mov
mov
add
cmp
mov
mov
jne
mov
add
mov
xor
cmp
sete
xor
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
and
mov
mov
mov
mov
cmp
je
cmp
jne
mov
lea
push
add
push
call
add
test
je
fld
mov
fstp
lea
mov
mov
fld
mov
fst
add
cmp
fld
fst
ja
jmp
faddp
mov
fstp
pop
mov
pop
ret
fsubrp
mov
fstp
pop
mov
pop
ret
fmulp
mov
fstp
pop
mov
pop
ret
fdivrp
mov
fstp
pop
mov
pop
ret
fdivrp
sub
fstp
call
fmul
add
mov
fsubr
fstp
pop
mov
pop
ret
call
fstp
mov
pop
mov
pop
ret
fstp
mov
fchs
fstp
pop
mov
pop
ret
mov
mov
push
push
push
call
add
cmp
jne
mov
mov
push
push
push
call
add
cmp
je
mov
push
push
mov
mov
mov
call
add
pop
mov
pop
ret
mov
push
push
push
call
add
pop
mov
pop
ret
fstp
pop
fstp
mov
pop
ret
mov
stc
cmp
add
cmp
sbb
cmp
dec
cmp
bound
inc
add
in
and
sub
push
mov
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
fstp
mov
mov
add
mov
mov
test
je
add
je
test
je
mov
push
mov
call
add
cmp
je
mov
mov
mov
mov
shr
and
mov
mov
shl
mov
and
cmp
lea
mov
mov
ja
jmp
shr
shl
add
mov
mov
mov
mov
mov
mov
jmp
shr
shl
add
jmp
mov
shr
test
mov
mov
je
add
jmp
shr
shl
add
xor
nop
mov
sub
cmp
jae
jmp
mov
shr
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
shr
shl
add
push
push
lea
push
push
mov
mov
mov
call
mov
add
mov
jmp
mov
mov
mov
shr
test
je
and
shl
add
jmp
and
shl
add
shr
push
shl
add
push
push
push
call
mov
add
mov
jmp
mov
mov
mov
shr
shl
add
push
push
lea
push
push
mov
mov
mov
call
mov
add
mov
jmp
mov
mov
shr
mov
mov
mov
mov
mov
mov
mov
cmp
jl
mov
test
je
test
je
push
push
push
call
add
jmp
mov
mov
mov
shr
test
je
and
shl
add
jmp
and
shl
add
shr
test
je
and
shl
add
jmp
shl
add
push
push
push
push
call
mov
add
mov
jmp
mov
shr
and
push
call
add
push
shr
push
call
add
push
push
call
mov
mov
mov
add
mov
jmp
mov
shr
shl
mov
add
mov
mov
mov
mov
mov
mov
shr
test
mov
je
and
shl
add
jmp
and
shl
add
push
push
push
push
call
mov
add
mov
jmp
mov
shr
test
je
and
shl
add
jmp
shl
add
shr
test
mov
je
and
shl
add
jmp
and
shl
add
mov
cmp
jne
cmp
jne
fld
fadd
mov
fstp
jmp
mov
mov
push
mov
mov
push
mov
call
mov
add
mov
jmp
mov
shr
test
je
and
shl
add
jmp
shl
add
shr
test
mov
je
and
shl
add
jmp
and
shl
add
mov
cmp
jne
cmp
jne
fld
fsub
mov
fstp
jmp
push
jmp
mov
shr
test
je
and
shl
add
jmp
shl
add
shr
test
mov
je
and
shl
add
jmp
and
shl
add
mov
cmp
jne
cmp
jne
fld
fmul
mov
fstp
jmp
push
jmp
mov
shr
test
je
and
shl
add
jmp
shl
add
shr
test
mov
je
and
shl
add
jmp
and
shl
add
mov
cmp
jne
cmp
jne
fld
fdiv
mov
fstp
jmp
push
jmp
mov
shr
test
je
and
shl
add
jmp
shl
add
shr
test
mov
je
and
shl
add
jmp
and
shl
add
mov
cmp
jne
cmp
jne
fld
sub
fst
fld
fst
fdivrp
fstp
call
fmul
add
mov
fsubr
fstp
jmp
push
jmp
mov
shr
test
je
and
shl
add
jmp
shl
add
shr
test
mov
je
and
shl
add
jmp
and
shl
add
mov
cmp
jne
cmp
jne
fld
fld
call
fstp
mov
jmp
push
mov
mov
mov
push
mov
mov
call
mov
add
mov
jmp
shr
shl
add
mov
cmp
jne
fld
mov
fchs
fstp
jmp
mov
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
lea
push
add
push
call
add
test
je
fld
lea
fstp
mov
mov
mov
cmp
je
cmp
jne
mov
lea
push
add
push
call
add
test
je
mov
fld
mov
fchs
fstp
mov
mov
jmp
push
push
push
call
add
cmp
jne
push
push
push
call
add
cmp
je
push
push
mov
mov
mov
call
mov
add
mov
jmp
push
push
push
call
mov
add
mov
jmp
shr
shl
mov
add
test
je
cmp
jne
cmp
je
xor
mov
mov
jmp
mov
mov
mov
jmp
shr
shl
mov
add
sub
je
sub
je
mov
push
push
push
mov
call
add
cmp
jne
push
push
push
call
add
cmp
je
push
push
mov
mov
mov
call
mov
add
mov
jmp
push
push
push
call
mov
add
mov
jmp
mov
push
call
mov
fild
add
mov
fstp
jmp
mov
mov
fild
test
jge
fadd
fstp
mov
jmp
mov
mov
shr
and
push
shr
sub
add
push
push
mov
call
mov
mov
add
cmp
jb
push
call
add
mov
mov
shl
mov
add
mov
mov
mov
mov
mov
mov
jmp
mov
shr
lea
mov
jmp
mov
shr
test
je
and
shl
add
jmp
shl
add
shr
test
je
and
shl
add
jmp
and
shl
add
mov
mov
mov
cmp
jne
push
push
push
call
add
test
je
mov
jmp
xor
jmp
mov
mov
mov
shr
test
je
and
shl
add
jmp
and
shl
add
shr
test
je
and
shl
add
jmp
shl
add
push
push
push
call
add
cmp
jne
mov
mov
shr
lea
mov
mov
add
mov
jmp
mov
mov
shr
test
mov
je
and
shl
add
jmp
and
shl
add
shr
test
je
and
shl
add
jmp
shl
add
push
mov
call
add
cmp
jne
mov
mov
shr
lea
mov
mov
add
mov
jmp
mov
test
je
cmp
jne
cmp
je
xor
jmp
mov
shr
and
cmp
je
jmp
mov
shr
shl
mov
add
test
je
cmp
jne
cmp
je
xor
jmp
mov
shr
and
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
shr
lea
mov
add
jmp
mov
shr
and
shr
sub
test
je
shl
add
mov
mov
push
push
push
mov
call
add
sub
je
sub
jne
test
jl
mov
mov
mov
mov
mov
jmp
shr
je
shl
add
mov
mov
push
push
push
mov
call
add
sub
je
sub
jne
mov
mov
jmp
fld
fld
fadd
fld
fxch
fcomp
fnstsw
fcom
test
fnstsw
fstp
jne
test
jnp
jmp
test
jne
mov
fst
shr
lea
mov
mov
fstp
mov
mov
jmp
mov
mov
mov
cmp
lea
mov
je
cmp
jne
mov
lea
push
add
push
call
add
test
je
fld
mov
fstp
cmp
je
lea
push
push
call
add
test
jne
push
jmp
push
jmp
mov
cmp
je
push
push
call
add
test
mov
jne
push
push
call
add
fld
mov
fsub
mov
shr
lea
fstp
mov
mov
jmp
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shr
and
mov
mov
push
push
lea
push
mov
mov
call
mov
mov
mov
mov
mov
add
shl
add
add
cmp
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
shr
lea
mov
add
jmp
mov
shr
shr
and
test
mov
jne
mov
mov
mov
sub
sar
sub
mov
mov
test
jne
mov
mov
add
mov
cmp
jne
mov
imul
lea
cmp
mov
mov
jle
push
push
push
call
mov
add
test
jle
mov
shl
add
lea
mov
mov
push
push
push
call
mov
mov
mov
mov
mov
sub
add
mov
cmp
mov
jl
mov
test
je
mov
test
je
push
push
call
add
mov
sub
sub
test
mov
jg
jmp
push
push
call
add
jmp
mov
mov
mov
mov
shr
mov
mov
movzx
push
push
push
call
mov
add
test
mov
mov
jle
mov
add
mov
mov
mov
mov
mov
and
shr
cmp
jne
mov
mov
mov
mov
jmp
shl
add
push
push
call
mov
add
mov
add
add
sub
jne
mov
jmp
mov
mov
mov
pop
sbb
sar
(bad)
imul
xor
mov
push
in
mov
jo
es
inc
pop
inc
test
aad
ss
inc
mul
jl
lods
xor
into
loopne
mov
(bad)
or
push
push
add
add
stos
jns
fs
repz
adc
jle
mov
mov
push
repz
lods
push
jnp
sbb
out
out
test
shl
ret
ror
ja
push
mov
sahf
jmp
sub
leave
repz
cmc
mov
fisub
in
dec
out
jmp
bound
imul
rol
jmp
push
pop
daa
aad
divps
sub
xchg
sub
pushf
sbb
popa
mov
cmc
inc
dec
int3
xchg
movs
mov
loope
dec
jb
test
xor
adc
jge
pop
xchg
xchg
pusha
out
je
xchg
mov
and
xor
sti
adc
aam
and
ins
scas
inc
or
and
pop
out
push
pop
cwde
out
ret
call
ds
inc
lock
data16
mov
mov
out
fs
jbe
leave
jp
in
rcl
or
xor
cmc
mov
fild
sbb
jnp
sbb
fldenv
lock
int3
cdq
inc
int3
mov
lock
outs
imul
sub
push
nop
fild
mov
mov
lock
push
stc
add
and
push
and
and
add
(bad)
push
retf
sbb
dec
loopne
loope
inc
mov
cli
dec
sbb
jnp
jl
nop
and
or
test
add
sub
test
cmps
int
out
loop
jno
aaa
push
xchg
jo
mov
fnsave
inc
add
xor
cmp
into
out
fwait
add
add
jae
push
fdiv
out
push
js
stos
mov
test
mov
push
ins
pusha
das
mov
mul
cmp
xchg
sar
scas
loopne
sbb
xor
push
mov
fs
scas
inc
pop
adc
inc
xchg
scas
fcomip
jmp
clc
sub
push
mov
mov
dec
ds
fs
gs
mov
mov
fild
es
xchg
sbb
xor
ds
push
outs
popa
sti
ins
out
rcl
lahf
lock
daa
retf
cmps
loopne
jmp
sub
call
popa
inc
add
xor
(bad)
xor
sbb
clc
into
(bad)
xchg
stos
pop
push
scas
push
sbb
mov
fwait
and
xor
pop
popf
into
leave
aad
xchg
cli
aas
xor
lods
ss
iret
mov
push
and
cmp
call
mov
dec
popf
dec
xor
dec
cmps
mov
push
inc
inc
(bad)
sbb
cmp
push
jle
ficomp
cmp
or
mov
gs
push
shl
jb
stc
xchg
enter
push
sub
inc
test
(bad)
enter
xchg
mov
out
fdivr
mov
dec
dec
fiadd
shl
sub
jle
ja
mov
cs
clc
add
mov
and
div
sahf
or
cwde
dec
lock
pop
ret
cwde
cmps
retf
pop
jmp
out
test
loopne
sbb
(bad)
movs
test
mov
test
inc
inc
add
stos
in
adc
mov
cwde
int3
sti
sti
jno
fisttp
in
or
fadd
js
push
out
repz
or
iret
cmp
(bad)
enter
pop
clc
popf
test
push
cmp
mov
jge
ds
stc
adc
sub
mov
ins
ucomiss
outs
jecxz
jge
sbb
popa
fiadd
and
pop
repnz
xor
push
ss
mov
data16
(bad)
xor
movs
mov
into
mov
push
cdq
repz
lock
cmps
out
mov
(bad)
nop
push
retf
push
push
es
int
call
dec
inc
cmp
fiadd
lock
pop
pop
mov
dec
cwde
fst
sub
lock
mov
add
mov
adc
push
mov
and
imul
inc
mov
add
(bad)
jmp
cmps
xchg
stos
js
rcr
iret
popa
in
and
xor
stos
push
outs
fisttp
mov
mov
leave
jmp
mov
stos
stos
mov
pop
aad
push
inc
push
cdq
cmp
jo
(bad)
or
jnp
jmp
push
and
ja
xor
aaa
and
aad
sub
mov
aam
nop
lock
out
ins
and
dec
mov
rcr
xor
(bad)
mov
int3
outs
push
shl
inc
into
dec
mov
cmp
(bad)
cld
mov
xor
xor
sub
mov
add
mov
or
cmp
jo
sub
lar
sti
jmp
push
and
add
mov
xor
sahf
fprem1
data16
add
icebp
sbb
push
mov
sbb
pushf
lds
adc
mul
mov
and
call
mov
xchg
sbb
sti
cwde
(bad)
adc
or
xchg
mov
push
loopne
js
rcr
adc
and
mov
das
add
adc
fsubp
div
cmp
mov
push
xchg
adc
add
cmp
in
cmps
xor
icebp
or
add
mov
sub
enter
fst
or
aaa
jmp
inc
call
ins
icebp
inc
scas
sbb
fist
ds
pop
push
adc
test
sar
ss
sub
and
movs
jo
push
adc
jle
mov
cmp
jmp
xchg
push
inc
data16
jnp
pushf
stos
cwde
js
dec
imul
stos
mov
push
dec
out
xor
pushf
pop
dec
call
add
enter
dec
mov
in
bound
enter
retf
daa
cmp
push
pop
add
and
jne
add
mov
jb
push
push
sub
test
and
push
xchg
mov
inc
fwait
(bad)
out
sub
rcr
lock
or
in
inc
sub
cmc
mov
push
icebp
pusha
xchg
sub
jge
mov
leave
outs
push
faddp
jno
xchg
enter
xchg
repz
outs
dec
mov
enter
adc
or
mov
mov
fs
or
sbb
sti
mov
psraw
push
pop
mov
aas
mov
int3
xor
mov
mov
iret
push
int3
mov
inc
scas
test
xchg
xchg
push
inc
push
mov
aaa
cmp
cwde
mov
mov
cmp
rol
pushf
rcr
aaa
mov
mov
add
add
mov
mov
pop
xchg
push
fdiv
lods
jnp
cli
sbb
mov
dec
call
lahf
sbb
dec
xor
dec
cmps
clc
xor
out
mov
icebp
aas
dec
fimul
dec
jle
rcr
clc
add
mov
aaa
adc
xor
cmp
jmp
ficom
fidivr
ins
jp
dec
clc
xor
and
adc
loopne
mov
xchg
sti
push
(bad)
jo
and
jbe
enter
and
ret
jbe
mov
mov
and
jl
fsub
movs
lods
or
dec
mov
adc
jno
xchg
or
adc
div
xor
or
rcr
(bad)
jne
inc
jmp
sub
dec
adc
(bad)
jle
xor
(bad)
push
xor
jae
sbb
(bad)
rol
xchg
or
xchg
icebp
cwde
jecxz
retf
std
(bad)
dec
and
ins
test
scas
sub
jl
popa
and
adc
les
mov
and
and
enter
scas
nop
fistp
sub
rol
xchg
ss
jo
arpl
jle
pop
cwde
jae
int
loope
clc
(bad)
call
add
movs
lds
frstor
popa
push
retf
and
fwait
add
or
(bad)
jo
sub
adc
push
(bad)
in
jle
cdq
jge
cmp
mov
into
out
adc
pop
mov
pop
mov
loope
xor
add
in
js
inc
cmp
jno
mov
rcr
jo
loope
push
leave
mov
out
int3
xor
dec
retf
shl
arpl
mov
add
cli
pop
sbb
xor
in
call
mov
inc
sbb
out
gs
mov
add
inc
js
jmp
and
xchg
out
jne
mov
in
mov
fld
xor
aaa
jge
or
dec
pop
jb
ss
jmp
into
repz
repz
cmps
sbb
adc
adc
scas
add
fcom
inc
rcl
push
push
cmp
ret
xor
popa
mov
dec
ror
mov
mov
pop
xchg
dec
inc
cs
jbe
sub
frstor
std
xchg
push
lock
lock
pushf
pop
lods
mov
pusha
jno
shr
outs
adc
(bad)
out
xlat
loopne
jae
fild
or
xor
xchg
mov
daa
add
icebp
cld
lds
ret
pop
fs
pop
lods
mov
push
sbb
push
dec
or
in
imul
pusha
jle
mov
cmp
jno
test
sbb
xor
sar
into
enter
jmp
adc
mov
adc
imul
mov
push
sahf
clc
dec
mov
aad
inc
pop
shl
dec
lods
call
push
test
xchg
dec
(bad)
cmp
mov
and
jns
jp
and
xchg
add
into
or
pavgb
mov
test
and
lock
jmp
and
mov
shr
ja
popf
out
adc
push
mov
sbb
lods
cli
push
in
aaa
retf
sbb
push
sub
mov
jbe
xor
jle
pop
adc
cmp
adc
hlt
jbe
mov
push
push
push
lock
or
jbe
std
adc
pusha
cld
adc
lahf
bnd
cmps
test
push
inc
inc
inc
in
xchg
sbb
add
lods
or
ins
int
sub
test
adc
lods
inc
dec
fdiv
jo
shl
outs
xor
(bad)
dec
cwde
cld
add
cmc
das
rsqrtps
retf
pushf
icebp
outs
mov
in
sbb
nop
jbe
scas
test
jp
cmp
adc
cmp
dec
fcmovnu
sub
or
or
xor
call
pop
sub
xacquire
jmp
ret
enter
dec
cld
dec
in
pop
fnstcw
cs
pop
dec
ins
in
pop
mov
push
nop
pop
push
mov
lods
lods
ret
and
ja
or
imul
pop
lods
xchg
iret
jecxz
aad
sbb
inc
enter
cmp
mov
adc
mov
mov
cli
loopne
stos
mov
mov
mov
fbstp
nop
or
or
lock
ror
push
cwde
push
dec
popa
inc
scas
ins
rcl
or
in
adc
mov
jle
(bad)
jmp
or
mov
fidivr
pop
enter
jnp
inc
xor
rcr
out
xchg
xchg
fdivr
clc
pop
mov
gs
lahf
push
xor
sbb
mov
retf
out
hlt
xchg
into
mov
jecxz
and
out
push
imul
dec
aas
pop
or
jmp
repnz
jl
out
movs
mov
and
push
fcom
rcl
fdiv
cmc
inc
(bad)
xchg
jle
mov
xor
sub
push
sub
inc
pop
adc
push
ss
(bad)
ret
push
mov
xor
outs
out
lahf
les
or
xor
sti
adc
enter
js
jne
xor
cmp
stc
stos
sbb
jp
push
jl
scas
push
not
sub
movs
rcr
inc
lahf
stos
dec
pop
leave
sub
mov
xlat
loop
push
ins
inc
fist
int3
sub
ret
cmps
out
xchg
mov
call
mov
cmp
cmp
or
mov
push
(bad)
out
fiadd
push
cmp
repnz
std
js
push
add
jp
mov
dec
pop
sbb
push
fdiv
jle
mov
es
popa
pop
xor
das
xor
dec
xor
ds
je
cld
imul
xchg
push
iret
mov
inc
pop
push
ins
inc
ins
cs
xor
mov
jo
addr16
rcl
into
mov
xor
mov
dec
mov
data16
loop
mov
mov
add
and
mov
test
add
shl
pop
nop
inc
xchg
div
(bad)
jmp
lods
call
mov
cmps
in
jbe
mov
pop
and
gs
pop
(bad)
adc
dec
push
lahf
not
ror
jnp
pusha
pop
repnz
jecxz
loop
sbb
xor
test
jecxz
push
ret
jo
push
jno
xchg
and
add
test
movs
lock
pop
dec
cld
enter
mov
sub
outs
stos
retf
pop
loop
sbb
in
ror
mov
icebp
iret
mov
mov
sbb
iret
pop
aas
cmp
jg
cmp
jno
inc
mov
std
jmp
pop
aaa
(bad)
pop
test
mov
xchg
lahf
inc
fsubr
movs
es
mov
loopne
push
nop
fdivrp
and
add
sbb
xchg
adc
lock
mov
(bad)
fldlg2
push
push
and
dec
stc
or
sbb
cmps
and
scas
jge
(bad)
(bad)
call
adc
int3
jl
mov
inc
lahf
mov
rol
fisub
ret
inc
(bad)
pushf
fs
repnz
push
inc
mov
jg
cmp
outs
imul
jae
cli
ffree
(bad)
scas
push
in
inc
inc
das
rcr
arpl
dec
sub
into
rol
outs
xor
mov
mov
out
jl
mov
inc
addr16
sbb
xor
pop
fwait
int3
xchg
das
sahf
fimul
mov
jb
push
push
nop
pop
jno
aaa
fst
cdq
shr
aam
lea
cmp
push
int3
je
ret
jl
je
or
pop
sub
jg
int3
ret
mov
fcomi
xor
(bad)
popa
pop
not
data16
or
sbb
jg
jmp
mov
mov
mov
adc
aas
std
into
popa
xor
push
xlat
shl
rol
dec
js
sbb
ret
inc
cmp
ins
add
js
leave
pop
rol
imul
imul
jecxz
push
out
cmp
pop
cmp
mov
xchg
push
cmc
(bad)
cmp
pop
jmp
dec
clc
test
add
enter
pop
ret
shr
sti
bound
outs
stos
push
fimul
jp
inc
jl
or
cmp
call
mov
cmc
push
enter
cdq
mov
out
ja
dec
outs
iret
fwait
imul
inc
dec
and
cmp
loop
stos
xchg
out
pop
sub
push
cwde
dec
or
(bad)
sbb
scas
and
jecxz
mov
adc
cmps
or
push
or
shl
ja
nop
sub
ret
xchg
pushf
adc
sub
push
pop
add
test
es
xchg
std
sbb
jecxz
test
jge
dec
jnp
jo
icebp
or
pop
(bad)
or
out
loope
push
cwde
arpl
stos
test
jle
inc
fdiv
cmp
repnz
lock
push
cld
loopne
pusha
retw
or
add
xchg
out
fadd
push
add
fdiv
xor
hlt
mov
mov
adc
ins
xchg
(bad)
mov
add
adc
mov
test
mov
pop
xchg
mov
sbb
sub
ins
mov
stos
int3
pushf
inc
mov
(bad)
in
mov
mov
imul
pop
mov
mov
pop
pop
retf
sbb
repz
sahf
cs
cmp
push
fiadd
add
dec
jg
and
jmp
cli
(bad)
into
shl
mov
mov
aas
sbb
xchg
into
xchg
pusha
es
loopne
mov
mov
hlt
push
out
push
movs
mov
outs
in
dec
(bad)
cs
outs
and
push
stc
xor
xchg
sti
sub
dec
xor
mov
push
or
iret
pop
add
xchg
(bad)
loopne
nop
cs
adc
push
push
sub
mov
icebp
xor
push
mov
push
pop
ret
aad
dec
adc
fdiv
clc
dec
pop
adc
icebp
pop
pop
sbb
and
call
mov
mov
xor
imul
xor
popa
dec
rol
js
mul
in
fs
mov
add
dec
add
(bad)
sbb
imul
outs
pop
jecxz
xchg
push
dec
pop
inc
lea
out
retf
fbstp
dec
mov
imul
lock
int
cmp
sbb
pop
xor
and
outs
fisubr
icebp
sbb
mov
sbb
add
inc
pop
inc
add
scas
arpl
mov
loopne
in
or
pop
xchg
xchg
pop
fnsave
aaa
inc
lods
push
add
ins
mov
shl
(bad)
jg
pop
inc
xchg
into
out
xor
xchg
xor
repz
sbb
push
stos
xchg
gs
fild
inc
loop
mov
adc
cli
dec
jecxz
pushf
xchg
inc
lds
push
out
cmp
sbb
and
fcmovnb
jmp
repz
retf
and
jle
push
loopne
int
(bad)
sbb
add
lea
repnz
lods
fisubr
push
jecxz
leave
scas
das
add
push
dec
add
add
pusha
jp
xchg
cmp
test
jbe
xor
js
push
push
pop
inc
dec
mov
mov
cmc
iret
xchg
xchg
mov
sub
xor
mov
pop
pop
and
leave
and
and
xor
out
pop
push
mov
add
movs
push
push
bnd
in
ficomp
mov
test
jmp
dec
cmps
dec
dec
lea
inc
mov
dec
dec
add
dec
cmp
mov
adc
fwait
loope
dec
outs
jg
cmp
push
je
cmp
push
xchg
lods
add
add
add
and
outs
mov
aas
ret
cs
push
pushf
cs
dec
or
in
loopne
out
mov
xor
mov
ffreep
push
jae
jo
mov
mov
leave
xor
push
push
push
add
mov
outs
sbb
shl
mov
mov
loop
push
shr
mov
hlt
push
or
ins
jg
pop
imul
popf
jbe
dec
loopne
xchg
cmp
ror
sub
test
cmc
jmp
sub
sbb
xchg
mov
cmp
mov
pop
adc
or
fild
(bad)
in
cdq
and
cmp
xor
push
cwde
pop
loope
les
ins
pusha
lods
push
repnz
int3
xor
and
(bad)
mov
xchg
mov
and
push
out
mov
js
sar
test
adc
sub
mov
jle
pop
(bad)
push
jno
mov
daa
cmp
pop
call
dec
adc
jne
mov
ins
mov
pop
xchg
mov
sbb
lods
call
push
and
ds
mov
(bad)
enter
pmuludq
dec
mov
lods
stos
mov
in
adc
cs
mov
cmc
xor
lock
mov
shl
dec
pop
iret
ret
pop
daa
push
cwde
test
add
shl
loopne
out
ss
je
icebp
leave
cld
mov
push
cmp
add
inc
icebp
and
iret
mov
repnz
mov
repz
add
cmp
jle
gs
mov
push
and
mov
outs
push
nop
mov
movs
mov
jne
xor
cmps
xor
aas
mov
cld
mov
aas
in
push
mov
xor
xchg
mov
(bad)
in
das
push
and
in
xchg
aas
push
call
sar
xor
rcl
pusha
lea
lock
and
jle
add
(bad)
cs
xchg
xchg
xor
retf
iret
xchg
mov
or
add
and
ds
xor
and
cmp
jmpw
and
std
mov
mov
push
push
inc
mov
mov
test
cmp
xor
bound
sub
inc
pop
div
pushf
ja
sahf
xor
mov
lock
call
cmp
and
or
jnp
arpl
pushf
movs
popa
imul
pop
mov
xchg
(bad)
xor
imul
pop
pop
mov
jmp
int
int
add
imul
jmp
pop
ret
sti
cmovge
rcr
xor
add
sub
xchg
popf
add
xor
mov
outs
xor
xor
pop
mov
arpl
sub
xor
inc
mov
and
outs
jae
xlat
xlat
(bad)
nop
js
scas
push
or
into
mov
sar
sbb
push
lods
movs
scas
hlt
sbb
fsubr
cld
jge
sbb
sbb
add
mov
cmp
push
push
sahf
sub
mov
add
xchg
popa
inc
jmp
pop
fldcw
sub
pop
adc
ret
mov
pushf
scas
mov
add
bound
adc
mov
cmp
cmc
je
gs
fdiv
dec
lods
lock
push
cld
cmp
out
or
ss
fidiv
lods
mov
mov
popf
out
inc
push
call
dec
xchg
movsx
jmp
outs
std
fcom
fisttp
addr16
out
push
jl
and
ss
push
shr
pop
jae
aas
hlt
lds
push
sbb
mov
jge
cmp
mov
xor
(bad)
aam
(bad)
lock
xchg
popa
int
cmps
shl
add
and
rcl
mov
stos
mov
mov
sbb
mov
clc
aaa
sahf
lods
or
popa
gs
out
sti
movs
cmps
mov
mov
push
sbb
mov
inc
sahf
das
xlat
push
inc
fisubr
sbb
sbb
or
int
pop
pop
jp
loope
sub
ds
sub
sar
loop
xchg
ds
retf
scas
mov
mov
stos
and
adc
int3
shl
cmp
test
inc
dec
pusha
gs
or
cmps
movs
cmp
ficomp
test
pop
add
adc
out
mov
cmp
add
sahf
inc
fwait
push
lock
idiv
jbe
repz
imul
mov
cmps
sar
out
js
(bad)
xchg
aad
call
push
ins
push
ret
imul
lea
pop
fs
retf
cld
sub
push
loopne
outs
and
add
jo
in
or
jae
loope
jbe
push
mov
push
cmp
rol
inc
fwait
std
xchg
sbb
mov
add
stc
daa
and
mov
pusha
xchg
mov
into
aas
sbb
mov
je
jo
jno
add
adc
jno
fs
nop
mov
fsubr
mov
sti
hlt
adc
sub
ror
nop
aas
cmp
mov
lods
inc
push
jge
push
and
sbb
or
jno
je
pop
jbe
js
aaa
jle
shl
add
xchg
movs
mov
xchg
into
imul
ds
jle
mov
cmp
shl
out
mov
mov
bnd
rol
es
cmps
shr
xchg
loopne
mov
adc
cmp
arpl
pop
imul
ds
xchg
das
mov
jmp
scas
scas
xlat
dec
mov
into
push
cs
and
xchg
sahf
and
cwde
cs
stos
cld
js
clc
idiv
call
push
and
pop
push
sbb
xor
xor
sahf
dec
jnp
in
jge
mov
adc
and
jnp
data16
jne
test
ins
dec
xchg
xchg
cdq
fsubrp
nop
fadd
mov
movs
mov
ja
popa
pop
fsubr
popf
push
fdivr
hlt
sub
cs
mov
mov
pop
lods
push
aad
mov
mov
call
jge
(bad)
or
mul
icebp
cmp
sbb
or
loopne
push
cmp
(bad)
jbe
or
jmp
std
push
sti
add
mov
stc
in
(bad)
sbb
mov
mov
jne
pop
loope
das
stos
div
ss
out
clc
pop
out
retf
mov
jne
mov
jmp
jg
pop
adc
movs
sahf
fimul
in
outs
mov
mov
jne
dec
add
adc
frndint
nop
jecxz
aad
hlt
mov
and
inc
adc
iret
inc
add
xchg
addr16
push
and
or
call
stos
and
cmp
(bad)
ret
ins
jp
push
arpl
push
nop
cmp
nop
int3
dec
stc
shr
xchg
mov
fdecstp
fst
frstor
test
adc
mul
ret
scas
fnop
fwait
mov
push
mov
push
adc
pushf
inc
mov
rol
sub
inc
data16
push
sar
sub
dec
retf
aas
push
dec
jno
(bad)
retf
jbe
xor
repnz
pop
sbb
loope
mov
mov
adc
xor
fsub
pop
inc
dec
fdiv
inc
es
lods
repz
(bad)
loope
shl
jecxz
rcr
pop
outs
test
clc
cld
mov
push
out
inc
in
sub
scas
lods
lods
lods
xor
add
pop
repz
adc
sbb
add
cmp
int3
inc
imul
push
xchg
add
cwde
psrlq
out
sub
xchg
add
pop
test
push
sahf
sbb
arpl
mov
cmp
repnz
aas
rcr
mov
and
loopne
sub
mov
and
inc
pop
pop
mov
mov
inc
adc
jno
test
mov
adc
xchg
push
(bad)
mov
out
xor
ror
pusha
mov
loopne
and
mov
mov
pop
push
lods
loope
adc
sub
pusha
jmp
sbb
repnz
rcl
inc
or
xlat
pusha
pop
inc
cmp
out
daa
sbb
scas
or
shr
jg
and
test
jecxz
cmps
push
and
cmp
and
adc
mov
cdq
(bad)
push
call
inc
jmp
pushf
pop
popf
cmp
loopne
out
les
test
add
xor
test
inc
nop
cdq
add
outs
out
adc
push
push
cdq
(bad)
loopne
outs
mov
fsub
cmp
push
ror
in
inc
push
in
faddp
jne
ja
inc
dec
push
and
pop
and
sub
pusha
dec
ficomp
push
loope
nop
mov
outs
cmp
pop
inc
dec
(bad)
jno
add
adc
pop
(bad)
jmp
push
mov
pop
imul
cmp
and
adc
sti
in
retf
sbb
mov
push
pop
jns
addr16
push
sub
int3
xlat
(bad)
lock
pop
lock
iret
sbb
scas
jne
cmp
add
push
mov
inc
cld
sub
int3
fsincos
shl
mov
wbinvd
push
movs
cs
adc
pop
mov
cmp
xchg
inc
sub
pushf
mov
inc
cli
inc
mov
fidivr
inc
mov
sub
pop
dec
and
imul
or
lods
rcr
push
jbe
pop
xor
adc
cmps
je
hlt
dec
push
sub
out
stos
mov
jl
or
fisubr
xchg
(bad)
icebp
jp
cmp
out
inc
dec
ficom
push
inc
push
pusha
xor
popa
(bad)
mov
test
mov
cmp
inc
fistp
mov
push
mov
adc
sbb
dec
outs
pop
sub
jmp
ret
add
cmp
retf
inc
mov
daa
ja
inc
scas
aas
push
fs
shr
into
ins
mov
cdq
mov
bound
xor
lea
lock
(bad)
sub
jno
sbb
fsubp
mov
enter
retf
mov
and
cmc
pop
out
inc
pusha
mov
repz
shl
test
adc
cld
rcr
add
rol
adc
mov
and
mov
push
mov
push
movs
retf
sub
movs
jmp
cmps
jmp
imul
cli
jno
movs
inc
push
mov
les
xchg
push
(bad)
add
mov
xor
sbb
data16
jo
mov
cmp
cmp
sub
outs
cld
shl
sar
dec
jo
mov
pop
add
sub
jle
ret
cwde
mov
xor
(bad)
fiadd
add
shl
aam
cmp
cmps
and
jnp
arpl
fwait
or
sbb
in
lock
jo
lock
sbb
outs
in
xchg
inc
ins
inc
xchg
fwait
jmp
or
cmp
sub
jb
pop
jb
jno
loopne
popa
leave
xor
mov
add
xor
or
ins
push
push
cdq
push
add
adc
mov
cmp
mov
or
push
jmp
fs
push
int3
push
lock
push
shl
add
ds
out
lock
xor
into
fwait
xchg
inc
loope
pop
or
int
push
xchg
and
outs
xchg
in
sbb
hlt
fild
lahf
mov
popa
pop
mov
jp
jp
cmps
in
loope
out
mov
inc
pushf
loopne
lock
outs
loope
mov
pop
aam
push
pusha
int
jg
push
mov
int3
cmp
retf
add
loopne
test
or
cmp
sahf
push
push
pop
sbb
dec
inc
or
outs
out
mov
lods
test
push
mov
cmp
inc
call
ret
jns
add
mov
inc
pop
xchg
xor
outs
(bad)
pop
pop
inc
imul
push
xchg
ror
mov
into
cld
ins
add
loopne
dec
lahf
and
lods
add
repnz
(bad)
push
fidivr
leave
xor
in
arpl
stos
loope
jb
sbb
ins
movs
clc
cs
out
jl
iret
jle
popf
aaa
pop
or
(bad)
(bad)
xchg
loopne
cwde
cmc
es
es
popf
xor
gs
pop
add
sahf
sbb
scas
icebp
pop
fadd
popa
cwde
inc
icebp
and
push
repnz
inc
lea
hlt
add
lahf
mov
cmc
jl
ins
pop
loope
xchg
jmp
push
add
gs
pop
sbb
and
sbb
int
mov
mov
inc
sahf
mov
inc
ja
pop
aas
add
and
mov
push
(bad)
sub
or
vmread
jmp
add
aas
(bad)
add
scas
add
fiadd
mov
sbb
out
xchg
mov
pop
ret
pop
popa
bound
fidivr
xchg
cs
cmp
pop
sub
fst
cdq
inc
aas
dec
xor
xlat
jno
xor
das
int
jns
lods
ja
mov
retf
outs
mov
jo
inc
mov
add
ficom
into
xchg
mov
dec
mov
cmps
mov
bound
dec
in
xor
inc
mov
stos
jl
(bad)
repz
in
sub
fistp
les
jge
jb
nop
inc
or
cmp
add
(bad)
push
loopne
jg
or
int3
dec
(bad)
mov
cli
jge
ret
(bad)
scas
dec
mov
jge
mov
iret
sub
pop
out
pop
mov
xor
push
sti
inc
call
dec
inc
dec
(bad)
loope
mov
retf
xor
or
ds
mov
and
cmp
and
hlt
popa
test
add
xor
fistp
inc
jmp
gs
mov
mov
retf
inc
ret
dec
das
adc
jmp
ss
repnz
aam
xchg
loope
sbb
add
sar
gs
rcr
in
mov
jmp
adc
fcomi
mov
(bad)
in
out
cmp
jp
push
xchg
sbb
lock
mov
jb
lea
jecxz
fmul
inc
adc
pop
test
sti
xor
sub
lock
test
pop
test
dec
sbb
test
ins
pusha
mov
cs
mov
nop
pop
xchg
and
push
loopne
rcl
sub
into
xchg
mov
das
dec
and
jecxz
iret
lahf
sbb
and
jmp
pop
push
jp
mov
es
popf
jmp
push
shr
adc
adc
pop
nop
in
outs
push
ds
mov
add
aaa
fisub
fidiv
call
popa
push
ror
and
xor
aam
xor
ins
js
test
push
jp
mov
into
mov
repz
push
in
mov
into
push
sbb
lahf
xchg
or
mov
mov
pusha
mov
xchg
repnz
repnz
cld
mov
push
and
les
in
mov
xor
in
mov
or
fisttp
pop
ins
js
das
(bad)
stos
es
push
mov
jb
mov
pop
sbb
div
mov
and
and
test
fisubr
xor
mov
or
dec
cmp
cmp
mov
shl
mov
add
enter
sbb
inc
fidiv
sub
icebp
jnp
iret
add
jecxz
fisub
mov
ds
mov
push
mov
loopne
jmp
repnz
out
dec
sub
ret
push
jb
je
jo
add
mov
aam
push
dec
(bad)
jmp
fistp
lods
pusha
shl
mov
iret
fwait
adc
cdq
out
shr
mov
cmp
neg
(bad)
sbb
cmps
dec
sbb
je
sbb
hlt
out
mov
ss
pushf
xor
mov
dec
xchg
cmp
aas
push
adc
jecxz
out
xor
sahf
out
and
push
sti
mov
shl
scas
test
jecxz
(bad)
fld
ja
pop
or
pop
scas
or
push
inc
dec
jne
nop
mov
ret
mov
mov
inc
xor
fidiv
retf
jp
fs
jnp
or
lods
enter
lods
pop
jne
mov
repz
daa
lods
ror
and
push
popa
pop
mov
cmp
ds
sahf
inc
sbb
inc
test
xchg
(bad)
call
xor
and
add
or
repnz
push
into
sahf
sub
dec
adc
sub
bound
cmc
loope
add
push
pop
adc
sbb
clc
sub
push
add
movs
sahf
dec
and
sub
and
icebp
mov
(bad)
aaa
dec
cmp
xor
lods
test
pop
xchg
clc
sub
fwait
mov
out
mov
xchg
movs
imul
dec
adc
ss
rcr
aaa
dec
jne
pop
shr
or
(bad)
or
sub
jle
pop
xchg
stos
loope
adc
retf
cmp
cmp
jb
outs
lahf
add
into
fs
(bad)
jnp
mov
fistp
retf
mov
xchg
stos
jo
retf
loopne
scas
ss
gs
(bad)
shr
out
xchg
jne
add
push
mov
mov
jns
cs
mov
inc
xchg
stc
add
(bad)
sbb
mov
(bad)
sbb
dec
sub
push
enter
and
repnz
out
sub
inc
mov
pop
jmp
sub
mov
cmp
jmp
or
ds
mov
aam
sar
xor
rcl
xor
jns
add
mov
xor
lods
js
inc
mov
sub
ret
push
push
cmp
std
inc
(bad)
ds
bound
pop
mov
jo
and
mov
push
rol
ror
mov
adc
xchg
pushf
xchg
into
mov
mov
and
mov
or
call
test
test
gs
pop
inc
rol
adc
ds
adc
mov
mul
sbb
dec
sahf
jecxz
lds
sti
std
aam
into
mov
jg
push
sbb
repnz
sub
test
mov
or
add
push
aas
xchg
fidivr
inc
call
sub
call
xor
int
imul
call
inc
mov
popf
cmps
xchg
jbe
jae
and
jge
pop
movs
repnz
adc
cld
sub
retf
(bad)
mov
mov
mov
jnp
dec
inc
inc
pop
pusha
jp
sub
push
or
iret
cmp
sbb
inc
cs
dec
mov
clc
xor
cmps
dec
and
or
sti
pop
imul
movs
mov
(bad)
std
nop
mov
pop
dec
and
pop
push
mov
push
mov
mov
jle
xchg
xchg
mov
jns
xchg
jo
pusha
mov
mov
loop
fbld
mov
add
xchg
test
out
pop
and
jle
push
(bad)
(bad)
jp
add
loopne
ret
jmp
lds
call
cmp
xchg
cmps
add
or
mov
inc
shl
jmp
stos
nop
inc
xchg
inc
xor
fild
into
call
iret
sub
rcr
popf
sbb
imul
repz
or
jnp
rcr
repnz
adc
fmul
mov
(bad)
call
xchg
and
add
jp
into
movs
adc
xor
mov
aam
repz
rcr
es
shl
ins
pop
jg
loop
pop
push
xor
pop
xor
iret
aad
aad
sbb
call
cs
rcr
mov
xor
or
cmp
ins
arpl
shl
jb
sbb
or
scas
xor
aaa
pop
pop
or
movs
aas
or
(bad)
fsub
push
or
push
cmp
adc
adc
push
cmp
add
out
xchg
das
int
dec
leave
mov
gs
cmp
inc
add
mov
jo
fcomip
enter
and
loopne
cmp
mov
push
dec
jae
dec
cmp
xor
xchg
divps
mov
loopne
cmp
push
xlat
cmp
push
jle
pop
add
lods
(bad)
stos
je
mov
addr16
call
hlt
js
out
pop
mov
bound
es
lahf
mov
iret
das
scas
inc
mov
dec
mov
cmp
int3
inc
xor
rcl
lds
enter
(bad)
outs
sub
repz
mov
push
jp
mov
pop
inc
sbb
sbb
aaa
cmp
ja
scas
icebp
scas
mov
mov
push
scas
jne
dec
dec
bound
mov
sbb
int3
cmps
mov
mov
repnz
iret
je
rcr
push
pop
jp
cmp
imul
sub
mov
call
push
call
gs
(bad)
adc
and
sub
mov
xor
xchg
and
push
mov
inc
cmps
(bad)
call
sbb
sbb
sub
outs
dec
pop
inc
and
push
cmc
in
enter
idiv
rcl
icebp
in
mov
cmp
scas
xor
stc
sbb
xor
cli
xor
sub
jns
cmps
sahf
into
xchg
inc
cmovns
push
arpl
push
and
mov
cmp
imul
ins
pop
inc
ins
(bad)
(bad)
jb
rcr
das
and
push
or
xchg
fld
ret
mov
pop
xor
inc
sbb
inc
into
fs
or
ficom
ss
(bad)
mov
add
ins
(bad)
jl
(bad)
loopne
push
jno
enter
clc
cmp
das
or
dec
mov
jmp
aam
inc
inc
fist
push
pop
leave
cmps
jmp
lock
xor
(bad)
lahf
cwde
ins
push
pop
mov
push
dec
push
daa
push
sub
jnp
retf
cmp
push
(bad)
ja
(bad)
sub
mov
rcr
nop
push
loop
test
sti
sar
ret
pusha
pop
mov
fcmovnu
into
mov
rcr
scas
push
push
aad
sbb
imul
inc
mov
mov
(bad)
mov
fwait
(bad)
mov
fsubr
push
(bad)
loopne
inc
pushf
hlt
leave
(bad)
into
sub
shr
(bad)
out
(bad)
ret
dec
xor
adc
jmp
fcmovne
push
outs
out
sahf
add
sbb
rcr
jp
lock
nop
int
imul
aad
push
test
scas
mov
sbb
aad
jmp
and
bound
ins
pop
outs
outs
or
lock
push
xchg
mov
or
call
push
out
sbb
pushf
(bad)
pop
xor
inc
push
outs
test
popa
mov
icebp
mov
dec
add
out
mov
arpl
outs
mov
stos
icebp
push
mov
scas
cmps
add
jo
mov
pusha
pop
fisub
cmp
stos
jg
sahf
ret
mov
sub
jae
loopne
imul
mov
mov
adc
push
repnz
and
in
jmp
push
and
sbb
aas
add
sahf
adc
inc
sbb
mov
dec
xor
sahf
adc
test
enter
data16
mov
in
mov
push
enter
ds
jle
scas
out
pop
xlat
dec
in
cwde
(bad)
(bad)
adc
add
popa
jo
icebp
xchg
jb
ret
shl
pop
cmps
pusha
push
mov
adc
aas
pop
retf
push
pusha
aaa
mov
dec
sbb
into
shl
cmp
int
sub
cmps
mov
cmp
imul
pushf
cmp
stos
ds
adc
push
push
xchg
add
iret
ffree
sbb
mov
jmp
mov
add
or
jo
and
loopne
ins
sbb
sahf
jg
and
dec
shr
sbb
pop
fldcw
enter
and
xor
loop
jg
out
xor
push
jp
sbb
mov
fld
ror
lahf
push
das
or
xchg
mov
mov
cmc
xor
push
faddp
into
out
sbb
sub
enter
sar
rcr
pop
mov
and
sbb
jle
(bad)
call
mov
or
jge
add
loopne
in
stc
sub
and
retf
push
sar
out
in
mov
mov
fisttp
mov
arpl
push
call
retf
stos
addr16
js
test
add
outs
loope
mov
and
add
mov
shl
sbb
pop
jne
or
pop
(bad)
cmp
icebp
(bad)
fcmovb
pop
pusha
stos
sbb
rol
aaa
dec
cdq
push
fdiv
cmp
add
shl
fucomip
xlat
outs
and
das
mov
jge
pushf
mov
mov
ss
and
add
lock
div
loopne
arpl
fsub
push
mov
push
and
and
out
arpl
mov
pop
into
iret
cmp
ds
fcmovbe
shl
out
push
mov
fnstenv
aaa
wrmsr
pop
mov
das
or
sub
push
xchg
sbb
xchg
loope
in
cmps
adc
jg
cmp
adc
adc
xchg
sahf
mov
stos
mov
nop
test
mov
inc
mov
loope
cmp
cmp
pop
dec
dec
(bad)
out
call
fiadd
cmps
fadd
pop
inc
jne
jl
xchg
xor
pop
mov
rcl
xchg
rcl
adc
push
and
xchg
xchg
rcl
jns
loopne
in
dec
jmp
sbb
sub
pop
(bad)
adc
add
repnz
adc
aam
lock
push
adc
or
lock
mov
call
xchg
gs
in
xchg
cmp
inc
dec
pop
add
cli
adc
xor
mov
inc
dec
mov
inc
xchg
ficomp
outs
mov
cmc
repnz
div
sbb
mov
repz
jle
in
out
adc
popa
mov
lock
popa
data16
adc
push
pop
pusha
pop
js
jae
add
movs
fiadd
mov
idiv
jl
dec
std
aam
dec
xor
clc
cmp
add
dec
xor
into
xlat
(bad)
jns
mov
or
pop
(bad)
dec
lods
addr16
neg
mov
push
and
adc
dec
add
out
stos
mov
mov
dec
dec
inc
sub
imul
rcl
or
aam
xor
pop
pop
add
push
imul
pop
std
mov
sub
rol
cdq
cld
pop
in
or
popw
or
sbb
mov
cmps
ltr
and
es
mov
shr
or
std
stos
enter
ins
pop
inc
repz
sub
and
enter
mov
repz
mov
cwde
add
cmc
aaa
fistp
popf
inc
pop
xor
inc
outs
(bad)
jbe
aam
jecxz
sub
push
jo
push
stc
add
idiv
push
cmp
shl
push
xchg
sti
xchg
cli
sub
int3
outs
push
inc
jmp
and
dec
icebp
adc
sub
push
aad
xchg
sub
test
aad
push
inc
fs
stc
outs
shl
lock
hlt
cmp
fiadd
jp
mov
push
sbb
cmc
mov
jne
pop
or
xor
inc
enter
dec
and
cld
xchg
inc
lds
adc
add
jbe
mov
inc
dec
inc
push
jns
aas
ins
pop
ins
pop
bound
push
mov
xor
mov
add
adc
repnz
ret
mov
cmps
loop
stos
lods
mov
adc
push
xchg
xchg
(bad)
sti
into
jno
sub
stc
mov
inc
jno
pusha
ss
or
jo
outs
jecxz
test
push
lock
sub
loopne
retf
call
and
push
bound
adc
(bad)
adc
ret
cmp
adc
mov
clc
fmul
nop
outs
dec
nop
dec
cdq
sbb
add
inc
(bad)
std
mov
cs
dec
(bad)
pop
loop
mov
ins
jae
pop
sbb
sbb
xchg
sub
sbb
ror
lock
mov
mov
mov
bound
add
xor
dec
imul
mov
jne
scas
data16
cmp
push
dec
xor
in
pop
pop
enter
mov
ror
inc
mov
(bad)
outs
fcom
adc
push
inc
jmp
pop
mov
cmps
push
nop
fist
xor
fst
push
fnsave
(bad)
call
iret
push
jae
mov
iret
scas
mov
jo
sbb
or
push
mov
mov
pop
loopne
sahf
(bad)
inc
retf
mov
xchg
lock
push
or
push
ins
(bad)
shl
pop
pushf
and
push
mov
dec
cdq
repz
jnp
pop
push
xchg
loope
icebp
ins
fcmovb
test
gs
int
lods
(bad)
sti
push
pop
mov
push
push
add
mov
cwde
push
nop
jnp
rcl
ja
pop
(bad)
(bad)
lock
scas
dec
arpl
jp
out
pop
ret
cmps
jg
dec
sbb
or
aam
(bad)
fidiv
dec
loopne
(bad)
dec
cmps
push
mov
loop
out
and
fs
enter
jecxz
xor
xchg
jb
mov
jbe
cli
push
pushf
jns
js
test
popf
inc
jmp
fidiv
push
ror
jge
hlt
push
ret
es
ins
mov
dec
enter
arpl
inc
popa
lock
cmps
sub
repz
sar
das
jbe
arpl
(bad)
sbb
stos
ficom
sbb
out
sar
pop
and
aaa
cmp
dec
mov
sub
pop
addr16
xor
jmp
les
test
push
dec
sub
cli
cmp
add
xchg
stc
dec
or
jo
adc
(bad)
mov
sub
jbe
jbe
data16
mov
and
imul
sub
cld
add
pop
xchg
xor
es
and
sub
ror
retf
inc
fiadd
mov
into
inc
inc
adc
sub
(bad)
(bad)
ins
ret
sbb
mov
cmc
gs
fs
push
sbb
outs
push
inc
and
push
jns
pop
(bad)
lahf
(bad)
jno
adc
or
cmp
jmp
xchg
sahf
add
ja
es
jo
push
outs
mov
les
nop
sbb
push
cmc
fcmovne
mov
pop
scas
dec
clc
sahf
loopne
js
sahf
ret
test
(bad)
(bad)
int3
fsub
mov
adc
leave
xor
dec
pop
push
inc
outs
mov
sub
jo
repz
cmp
aad
outs
xchg
mov
dec
bound
xchg
pop
data16
add
repnz
jmp
out
xchg
sti
pop
and
mov
jmp
outs
gs
sbb
jl
pushf
out
pushf
mov
pop
adc
lods
sahf
repnz
loop
or
cs
fbstp
lgs
jle
inc
outs
ror
icebp
sub
inc
mov
mov
mov
inc
pop
adc
mov
jmp
sub
ds
(bad)
daa
xor
fcomp
inc
lds
stos
popa
loop
cld
neg
rcr
mov
loop
sahf
idiv
pop
cmc
js
outs
das
sbb
push
xor
and
inc
arpl
test
cli
and
pop
fdiv
inc
cld
inc
mov
test
movs
fwait
repnz
adc
loopne
jmp
xchg
sbb
lods
mov
adc
aam
outs
jo
(bad)
(bad)
stos
mov
jbe
add
rcl
sub
retf
daa
sti
paddsw
adc
rcl
and
scas
movs
jl
stos
sub
mov
xor
call
outs
inc
hlt
icebp
es
outs
push
ret
and
fs
shl
push
mov
loopne
fidiv
mov
fisttp
and
arpl
pop
shr
mov
xchg
or
popa
ds
bound
nop
dec
and
mov
rol
retf
loopne
pop
ins
test
jp
cmp
sub
jnp
imul
sub
std
push
sub
push
and
loope
xor
sysret
data16
jle
retf
add
sbb
adc
cmp
push
arpl
sub
mov
inc
jbe
cmp
jnp
jle
enter
lock
test
retf
scas
movs
xlat
loopne
aaa
hlt
mov
repnz
push
dec
jno
pop
dec
pop
scas
test
and
fst
pusha
add
and
inc
sub
into
repz
fbld
sub
out
clc
outs
daa
lods
add
dec
push
xchg
fcom
leave
inc
push
mov
fcom
inc
ds
cmps
and
mov
(bad)
and
test
pop
push
imul
sub
movs
cmp
and
dec
and
sbb
sbb
jg
push
out
jo
les
jnp
jmp
clc
cmps
pusha
lock
test
cmp
sbb
jp
sub
cmps
into
pop
cdq
mov
sbb
xchg
je
movups
cmp
xor
sub
aam
or
je
shl
jg
add
or
rcl
(bad)
std
push
lea
jg
jg
push
sar
repnz
cmp
popa
test
test
adc
jno
inc
xchg
jbe
mov
xchg
test
mov
push
jno
shl
push
push
push
in
dec
and
lea
lods
mov
aad
or
scas
call
repz
scas
mov
arpl
add
(bad)
dec
mov
into
icebp
jb
int
mov
adc
cld
stos
mov
call
mov
xlat
and
jnp
xchg
jle
rol
jg
mov
and
push
add
pop
sbb
pop
push
adc
xor
xor
pushf
add
jo
sahf
cmp
ror
xchg
lahf
xchg
mov
xchg
sub
xchg
or
cs
into
mov
sbb
push
out
xchg
jle
add
mov
dec
cmps
cwde
inc
je
add
sbb
mov
jecxz
addr16
xor
jno
enter
test
jle
mov
pop
or
xor
cdq
fidiv
xor
sbb
stos
pop
inc
call
xor
mov
movs
inc
aas
lds
xchg
js
jle
enter
sbb
cwde
mov
movs
sbb
xchg
ficom
les
mov
mov
push
mov
and
add
arpl
xchg
arpl
cli
lock
popf
leave
dec
add
loopne
mov
jne
sbb
adc
inc
xchg
scas
add
push
shr
dec
push
movs
jbe
out
jmp
inc
dec
stc
push
inc
jnp
pop
and
enter
mov
(bad)
fst
sub
cdq
mov
and
sar
leave
cmp
repnz
pop
int3
icebp
jae
shl
mov
sbb
popa
fld
add
jmp
cmp
push
add
inc
loop
rcr
inc
fmulp
lea
rol
mov
mov
and
(bad)
fs
fld
fsubr
push
mov
(bad)
fist
jb
pop
mov
push
cmp
dec
out
add
arpl
shr
xor
loop
fidivr
test
pop
(bad)
lahf
xchg
jno
data16
jno
(bad)
cdq
clc
add
mov
movs
pushf
pushf
jno
cmp
imul
ss
mov
idiv
mov
push
mov
and
pop
rol
inc
jne
add
js
dec
iret
mov
(bad)
mov
jecxz
push
push
mov
idiv
jle
imul
pushf
push
xchg
xor
sub
out
test
daa
jge
int3
sub
daa
scas
je
out
clc
and
jae
and
and
fs
in
int
retf
lods
sbb
ins
lahf
cmc
add
daa
jge
js
or
sbb
push
adc
int3
jae
push
cmc
test
xor
ret
sub
xchg
outs
dec
fld
aas
jp
cmp
jl
icebp
mov
pop
lea
xor
jo
pop
xor
or
xor
pop
int3
inc
mov
and
ins
js
fwait
jg
lock
jecxz
repz
sub
test
ret
lahf
sbb
das
dec
scas
mov
push
mov
xor
rcl
outs
adc
xor
jns
push
xor
bnd
mov
inc
mov
sahf
pop
sahf
cwde
sbb
in
out
pop
shl
iret
xchg
push
(bad)
call
xchg
jp
inc
icebp
xor
jmp
scas
dec
mov
mov
cmp
iret
inc
pusha
sub
adc
das
iret
mov
mov
movs
cmp
push
mov
inc
out
mov
xor
es
jmp
jle
inc
pop
and
mov
xor
inc
enter
mov
fwait
xor
sub
cmc
fild
mov
nop
lea
push
lds
call
mov
mov
rol
lods
or
mov
adc
imul
cwde
pop
outs
mov
push
inc
cmc
cmps
retf
faddp
sbb
loop
lods
lods
pop
addr16
and
mov
jno
pop
xchg
inc
sub
ficom
mov
jle
sub
pop
mov
xchg
and
outs
or
aam
lds
inc
iret
and
out
sar
(bad)
enter
lahf
enter
push
jecxz
mov
clc
inc
mov
jmp
icebp
(bad)
adc
out
retf
cmp
outs
mov
and
fld
cmp
enter
into
or
repnz
fbstp
xlat
ja
add
xor
jl
sahf
and
adc
aaa
out
sahf
std
cmp
les
xchg
jp
sbb
add
pusha
jo
sbb
pop
jo
enter
(bad)
lods
cmp
call
test
stc
jp
outs
sbb
test
xor
xchg
inc
push
movs
cmp
ss
call
jo
out
leave
mov
and
nop
or
int3
imul
sub
das
and
pop
ss
push
int3
cmp
rcr
xchg
cwde
scas
lock
sbb
(bad)
enter
jg
push
inc
dec
outs
out
(bad)
inc
inc
sub
std
jbe
xchg
ficom
popa
jno
sub
sub
inc
imul
ss
push
xchg
cmp
dec
rcl
icebp
ins
fsubr
pusha
or
fidiv
sub
out
xchg
or
fdivrp
sar
int3
push
int3
repnz
outs
aas
clc
jecxz
mov
and
arpl
iret
mov
icebp
adc
popf
pop
xchg
ror
inc
ja
loopne
fs
sub
mov
mov
and
add
inc
sub
cmp
das
clc
xor
aas
xchg
jp
bound
mov
jmp
rcl
xor
and
push
adc
pop
mov
pop
sbb
pop
cmps
xchg
outs
repnz
inc
aaa
test
aaa
mov
cli
push
sub
rol
inc
pop
dec
std
fwait
xlat
out
dec
(bad)
sti
sahf
or
or
fld
shr
xchg
or
dec
cmps
daa
push
inc
pop
dec
pop
sbb
das
sub
push
int
(bad)
loope
loopne
icebp
ret
xchg
(bad)
dec
sub
inc
(bad)
jno
sub
mov
stos
and
jmp
inc
mov
mov
scas
sub
and
ins
gs
push
fisttp
mov
nop
mov
mov
add
shl
dec
scas
xchg
jp
sbb
inc
shl
int
mov
fisubr
adc
(bad)
ds
inc
inc
xor
push
adc
stos
lahf
neg
addr16
mov
leave
js
push
jmp
and
retfw
and
out
rcl
mov
pop
sbb
mov
(bad)
push
ja
inc
outs
bound
test
iret
mov
test
inc
pop
fadd
add
push
inc
dec
int
inc
movups
fistp
pushf
(bad)
mov
mov
push
popa
in
and
adc
in
pusha
jg
in
mov
pop
jmp
mov
test
adc
into
ud0
push
adc
jle
sbb
adc
or
in
ror
xchg
mov
dec
lock
stc
add
jo
add
(bad)
ficom
cmps
inc
jns
fidiv
aad
adc
data16
xor
xchg
sar
sub
sahf
sar
or
mov
mov
icebp
popa
in
and
imul
sub
retf
pop
mov
mov
ficom
pushf
push
ds
out
rcr
adc
inc
(bad)
xor
sar
inc
es
push
mov
mov
in
dec
ins
int3
pushf
jp
push
lahf
imul
sub
(bad)
shl
or
dec
retf
xor
cmp
ror
adc
push
add
pop
bound
jge
clc
pop
xor
mov
pusha
into
imul
test
or
cmps
dec
jbe
popa
or
or
push
xor
jns
popf
dec
push
push
xor
mov
sbb
mov
mov
outs
sahf
aad
push
cmps
pop
jb
and
add
sbb
in
xchg
outs
(bad)
jmp
or
push
push
pmaxub
aad
push
shl
mov
jmp
inc
fisubr
test
add
jmp
das
neg
mov
les
ins
enter
pop
or
add
retf
repz
xchg
sahf
xchg
aam
jg
sub
inc
push
jl
pop
pop
push
push
(bad)
std
mov
mov
leave
adc
(bad)
cmps
movs
cmp
jno
add
mov
or
movs
dec
push
(bad)
clc
les
add
add
stos
mov
and
pop
and
jbe
lock
hlt
xchg
xchg
sbb
push
out
mov
push
or
mov
pop
adc
or
add
(bad)
xchg
pusha
push
xchg
push
pop
nop
adc
inc
pop
call
out
aas
push
repz
cmps
push
mov
jle
and
popa
aaa
mov
push
inc
cmps
push
jbe
test
or
mov
sub
rcr
outs
push
dec
repnz
pop
sub
pop
sar
fsubr
loop
add
cmc
cmps
(bad)
or
jle
add
ds
fcomp
mov
call
retf
rcr
fwait
int
add
fild
adc
add
push
push
xchg
in
sti
js
cmp
cmp
lock
push
ins
pop
fild
imul
cwde
mov
shr
fidiv
mov
mov
and
movs
imul
outs
inc
add
out
repnz
(bad)
mov
je
mov
pop
mov
lods
scas
or
cmp
outs
dec
xchg
jl
add
fwait
cmp
popa
jecxz
inc
(bad)
out
ror
xchg
out
push
dec
sbb
sbb
shl
mul
sahf
in
mov
xchg
inc
mov
sbb
daa
mov
sbb
popf
cmps
js
and
loopne
repz
mov
mov
iret
push
nop
jle
popa
inc
dec
clc
adc
pusha
and
mov
mov
call
daa
fndisi(8087
ret
sar
aam
enter
add
lea
or
sbb
es
cli
imul
fldcw
in
scas
mov
rcr
(bad)
out
xchg
sbb
pop
xor
std
push
mov
add
adc
and
(bad)
lods
cld
fild
das
push
sub
bnd
pop
call
xor
xchg
vandnps
aaa
rol
vprotd
in
push
fwait
xchg
dec
dec
std
inc
push
imul
add
std
inc
retf
cdq
xor
jbe
xor
jmp
jecxz
ss
js
pop
push
and
test
int3
(bad)
rcr
add
jno
push
das
push
add
das
je
and
inc
mov
push
rcr
sbb
dec
mov
ficomp
cmps
ss
cmp
ins
out
out
loope
loop
loopne
stos
lock
(bad)
mov
lea
add
add
shl
add
and
pop
cmc
(bad)
fisub
mov
cli
sub
mov
push
enter
je
shr
aaa
jp
and
repnz
jo
or
mov
nop
pushf
xchg
nop
out
dec
cdq
push
xchg
sbb
push
imul
dec
xchg
pop
jmp
in
pop
push
jmp
and
sub
cmp
cdq
xor
call
push
pop
jbe
dec
int3
clc
outs
mov
or
sub
sub
mov
addr16
ja
pop
fidiv
jle
cmp
xor
push
pop
mov
ss
(bad)
in
dec
scas
mov
ss
jbe
into
dec
(bad)
jg
fstp
cmovno
int3
ret
loope
pusha
imul
dec
mov
ret
dec
or
push
pusha
sbb
and
pushf
and
xchg
mov
mov
sub
into
jne
xchg
sahf
push
mov
jg
or
es
pop
jo
adc
inc
jo
outs
xchg
or
aaa
mov
(bad)
and
add
mov
test
rcl
outs
arpl
xor
push
retf
cmps
enter
jle
iret
cwde
sahf
loope
sub
shr
aaa
or
xchg
in
repz
sbb
std
and
cmps
loope
adc
or
loop
pushf
enter
fld
js
aaa
or
xchg
jecxz
hlt
fistp
cld
mov
cdq
xor
jmp
cs
pop
fisubr
(bad)
jmp
rol
jbe
mov
pusha
scas
(bad)
pop
adc
mov
or
into
fisttp
mov
std
std
ds
or
lods
cmp
mov
xor
adc
cdq
ret
add
cs
out
inc
scas
xor
cmp
pop
dec
stos
push
cmp
xor
push
in
add
rcl
mov
test
adc
dec
add
shl
dec
loop
inc
ds
inc
mov
xor
popa
mov
add
pusha
shl
jo
gs
and
and
xor
inc
add
nop
cdq
loope
and
shl
pop
push
ins
lods
pop
adc
ret
ret
mov
outs
fadd
push
push
dec
inc
in
xchg
jp
loop
mov
mov
inc
inc
xchg
cs
cmp
shl
xor
xlat
scas
test
cli
mov
ins
xchg
xchg
push
call
sub
sub
ficomp
mov
cmp
and
cmp
jl
(bad)
dec
mov
add
cmp
scas
les
daa
fnstsw
adc
sbb
outs
stc
in
adc
sbb
xlat
mov
xchg
aaa
xchg
int3
push
jl
retf
aad
push
in
icebp
push
sbb
sub
mov
aad
outs
scas
cmps
fwait
nop
adc
lods
test
push
out
and
xor
inc
popf
mov
push
loope
outs
mov
loopne
retf
mov
xchg
pop
ds
shl
jmp
xor
fs
jb
mov
int
shl
movs
add
mov
cmp
pop
xchg
icebp
mov
(bad)
cdq
pushf
xor
test
add
sahf
fdiv
push
pop
cmp
aad
sub
jae
push
fbld
cmp
or
into
std
push
idiv
nop
dec
cmp
mov
mov
ret
mov
jae
pop
cli
or
sub
push
push
idiv
ss
jg
push
cli
mov
lods
mov
aam
push
shl
test
xor
imul
jne
mov
jb
xchg
(bad)
rcr
cmp
xchg
cmps
outs
je
xchg
and
push
movs
jmp
(bad)
cmp
dec
xchg
xor
nop
mov
adc
xor
sub
mov
pop
fucom
out
mov
(bad)
jmp
call
test
outs
mov
push
jns
mov
jmp
push
(bad)
das
into
pop
cmps
mov
mov
sti
outs
inc
push
sbb
jmp
gs
jae
add
mov
or
pop
adc
cs
adc
stos
inc
cld
loop
js
add
(bad)
clc
dec
stos
mov
mov
pushf
mov
cwde
in
cli
iret
rol
add
loope
(bad)
les
ja
ret
add
mov
(bad)
lea
retf
imul
dec
pusha
cld
(bad)
icebp
cmp
popa
fs
push
lock
push
(bad)
lods
test
jne
mov
outs
adc
aad
bound
cmp
retf
mov
cli
aas
enter
ds
jbe
add
out
adc
push
jnp
retf
(bad)
lods
jbe
sbb
jge
test
push
jo
aaa
pop
sub
mov
mov
sbb
cmps
xchg
mov
mov
les
push
jne
lods
jns
push
ds
rcr
repz
shr
scas
xchg
arpl
mov
arpl
(bad)
(bad)
push
shl
or
mov
or
pop
xchg
dec
sbb
(bad)
scas
or
jo
push
icebp
mov
sub
push
int3
push
mov
stos
mov
outs
xor
enter
scas
pop
into
fbld
mov
int3
inc
and
inc
sahf
out
add
sahf
fsubp
jmp
push
mov
retf
scas
scas
inc
dec
mov
xor
sbb
adc
lods
lock
icebp
cmc
rcl
jbe
lea
mov
pop
push
xor
retf
xchg
xchg
dec
mov
js
aam
push
sub
fs
inc
loopne
ror
jmp
lds
and
xchg
xchg
xchg
test
pop
push
mov
call
push
clc
xor
not
xchg
repnz
adc
sub
mov
adc
out
inc
jle
dec
xchg
pop
mov
mov
scas
inc
mov
rcl
push
dec
outs
sbb
movs
add
mov
repz
and
les
aaa
push
arpl
sbb
push
pop
scas
mov
sbb
sbb
dec
inc
push
inc
xchg
lock
and
dec
pop
mov
cmp
xchg
call
inc
jo
cmps
sbb
js
push
cmps
repnz
call
pop
mov
inc
ds
jle
pop
xlat
repnz
iret
shl
mov
mov
or
sbb
xchg
je
push
add
(bad)
(bad)
rcl
jbe
xchg
sbb
xchg
jno
add
mov
add
mov
mov
bound
or
sar
add
adc
push
lods
and
add
es
fild
sbb
add
mov
ret
fimul
pop
cmp
mov
call
rcr
(bad)
inc
push
cmps
mov
cmp
or
jmp
inc
push
xchg
xchg
push
xor
cld
push
fild
(bad)
addr16
mov
jnp
cmp
xchg
lods
push
aad
add
pop
push
cmp
pop
cld
shr
fild
mov
addr16
xchg
cmps
jne
fs
jno
into
fisub
xchg
das
mov
fadd
jecxz
jo
test
out
mov
push
mov
xor
fistp
scas
clc
add
ret
or
shl
xor
sbb
ret
ja
(bad)
in
and
ss
pop
nop
movs
icebp
xchg
jns
and
mov
nop
xchg
add
pop
lahf
scas
les
pop
sub
mov
add
das
cmp
not
xor
and
cmp
sub
pop
lahf
ret
lahf
mov
cmp
push
mov
aaa
push
mov
outs
(bad)
mov
neg
and
inc
fisub
add
sub
test
in
stc
test
and
push
sub
aad
aaa
push
test
adc
cmps
cli
add
cld
lea
sbb
pop
inc
movs
sbb
xchg
add
retf
leave
and
xor
and
xor
arpl
shl
pop
add
and
out
cmp
(bad)
ins
in
fisttp
fwait
dec
add
dec
push
dec
jg
jl
lods
sub
lahf
in
es
push
inc
sub
mov
add
mov
retf
mul
jb
fimul
aad
jb
and
repnz
and
jo
test
xor
iret
add
bound
iret
xchg
cmp
mov
mov
dec
inc
sbb
bound
setb
mov
loop
fbld
jo
or
ret
add
jle
in
out
xchg
xor
inc
inc
pop
in
aas
clc
inc
cmp
mov
mov
mov
iret
mov
fisttp
mov
dec
sub
sub
in
mov
icebp
add
inc
clc
movs
out
jle
adc
or
fmulp
lds
and
pop
lock
dec
mov
jo
xchg
sub
sbb
icebp
out
cmp
xor
cmps
mov
jmp
fs
sbb
push
mov
push
imul
or
pop
les
js
clc
(bad)
jno
movs
stos
inc
inc
inc
ins
in
loopne
add
stos
and
and
loope
jo
sub
sbb
sar
jb
cwde
mov
xor
ficom
jg
int
pop
test
dec
jo
jne
out
out
shl
arpl
or
jge
adc
call
sti
mov
imul
(bad)
retf
dec
dec
add
cdq
daa
add
inc
mov
or
mov
mov
mov
add
in
xchg
pop
aad
shl
rol
leave
xchg
inc
mov
rcl
jl
pop
lea
sub
jbe
and
fist
mov
sub
cmp
pushf
fdiv
push
xor
sahf
call
cdq
inc
dec
ins
push
pop
xchg
fcom
adc
pop
mov
jge
jg
enter
stos
fs
cdq
call
hlt
mov
inc
fnstcw
xor
dec
cmp
dec
ret
(bad)
jge
mov
cwde
pop
mov
mov
(bad)
push
inc
shl
mov
rcr
(bad)
mov
xlat
and
lods
mov
push
push
push
movs
xor
mov
mov
jbe
(bad)
sbb
(bad)
leave
dec
cwde
and
outs
lock
cmp
mov
out
and
mov
ds
jle
test
sahf
cmp
sub
lods
mov
mov
inc
pmaxsw
jp
or
leave
(bad)
xchg
out
cmps
mov
lock
dec
movs
jle
jmp
rol
nop
mov
xchg
cs
ss
sub
mov
sar
jmp
(bad)
sti
sahf
sbb
mov
outs
xor
mov
push
test
jne
inc
mov
mov
and
fcomip
or
movs
int3
and
popa
mov
into
pop
cmc
xor
popf
sub
sub
jp
nop
jns
cmps
sbb
sbb
and
pop
lock
add
scas
sti
test
add
into
ins
sar
nop
into
xchg
and
enter
aad
cld
imul
js
rcr
cmp
dec
push
and
or
mov
daa
inc
out
mov
dec
add
inc
retf
mov
cli
pop
fld
push
dec
jmp
fnstenv
test
jo
adc
and
and
in
aam
jae
std
cdq
fimul
(bad)
jle
out
cld
pop
adc
int
out
mov
or
scas
ret
fidivr
xchg
out
or
mov
xor
jbe
dec
mov
mov
push
repnz
pop
xchg
icebp
aad
cmp
ficom
pop
mov
inc
pushf
test
and
dec
cwde
mov
jmp
das
pop
into
jno
jecxz
push
jle
jae
pusha
mov
loopne
push
add
jns
cli
xor
mov
jp
add
hlt
push
mov
mov
data16
ss
mov
cld
add
hlt
enter
mov
lahf
mov
gs
add
popf
push
push
pop
aad
and
jo
rdmsr
pop
cdq
cli
and
cwde
fwait
xor
xchg
pushf
sahf
shl
ins
and
scas
push
add
xchg
test
inc
or
je
xor
scas
dec
mov
mov
mov
rcl
xor
loopne
pop
pusha
sbb
cs
mov
iret
(bad)
mov
jbe
out
addr16
pop
push
dec
fpatan
jle
mov
adc
and
nop
test
mov
out
into
mov
push
dec
dec
movs
mov
hlt
or
push
mov
test
dec
or
push
popf
pop
and
pusha
mov
pop
ins
imul
ret
movs
call
(bad)
aas
loope
lds
sbb
(bad)
rcr
push
add
sub
push
mov
inc
in
sub
shl
in
inc
add
into
xchg
add
xor
into
leave
fcomp
and
mov
out
pop
sub
push
add
jle
nop
mov
jle
mov
leave
loop
retf
test
jno
dec
mov
ret
punpckldq
pop
mov
push
xchg
leave
xor
inc
push
cmc
pop
into
and
mov
push
push
(bad)
push
pop
xor
dec
nop
pop
or
sti
ss
pop
aad
jge
pushf
adc
aad
xor
jae
in
icebp
pusha
retf
lock
push
cmp
addr16
xor
ror
cdq
out
loope
out
push
and
aam
jge
ja
xchg
popa
outs
xchg
shl
movs
in
loop
xchg
sbb
cmp
out
jle
int3
push
js
int3
mov
cwde
jl
ins
adc
cmp
mov
fst
mov
pop
iret
jb
adc
xchg
mov
mov
sbb
push
dec
pop
call
jl
adc
cs
pop
pop
xchg
add
(bad)
xchg
test
cli
adc
xor
ds
mov
sub
jo
call
pop
push
loopne
call
lock
sbb
add
movs
lods
mov
fistp
aad
xchg
push
int
neg
pop
pop
bound
push
nop
(bad)
jecxz
jg
outs
xchg
ss
push
xchg
mov
add
sahf
out
cs
cwde
adc
sbb
call
cmp
(bad)
leave
and
repz
mov
nop
(bad)
mov
dec
inc
nop
imul
(bad)
lods
addr16
js
out
jmp
mov
mov
mov
adc
mov
out
mov
arpl
or
and
inc
data16
into
jae
mov
push
dec
jo
(bad)
out
or
sbb
jmp
sub
popa
icebp
shr
sahf
aaa
(bad)
jmp
mov
pop
movs
jns
jmp
fimul
push
xor
adc
and
push
sub
rol
adc
mov
dec
cs
mov
les
loopne
adc
enter
inc
cmp
ror
and
push
pop
dec
retf
ins
or
dec
xchg
xor
inc
adc
pop
cmp
and
push
lds
xor
xor
imul
pop
out
sbb
dec
adc
push
pop
add
int3
adc
sub
push
jae
loopne
cmps
xchg
and
outs
sbb
sub
mov
push
pop
into
inc
loopne
push
xlat
jne
test
mov
ficom
ja
test
add
and
and
cmp
and
lods
push
clc
jge
pop
fbstp
push
cmps
xchg
mov
or
pusha
lock
lock
or
dec
out
push
cmp
jmp
fisttp
movs
cs
mov
inc
xor
adc
add
into
idiv
adc
test
outs
ds
retf
jo
fwait
adc
loopne
ds
xor
jae
jne
push
loopne
add
ds
outs
lahf
mov
add
outs
push
imul
ss
adc
and
rol
cs
stos
aam
jecxz
loop
sbb
cwde
mov
sub
repnz
mov
sub
push
int
out
cld
jge
sbb
add
aas
jmp
mov
or
repz
mov
jg
aaa
mov
mov
sti
test
pop
cdq
jb
mov
cdq
loopne
fiadd
jl
js
cs
aaa
dec
scas
test
add
in
in
stos
xor
pusha
sahf
and
adc
cmp
add
add
lsl
xor
jmp
cmp
jmp
pop
lds
iret
mov
stos
push
push
ss
mov
sbb
repnz
sbb
push
cmp
sub
scas
stos
pop
mov
dec
das
push
inc
test
mov
scas
jb
dec
push
stos
and
iret
icebp
retf
pushf
mov
jge
and
imul
cli
not
sub
sub
clc
call
sti
inc
add
mov
cs
pusha
gs
pop
and
and
pushf
call
sbb
call
ror
mov
jge
pusha
or
pusha
(bad)
lea
push
pop
xchg
xchg
data16
xchg
inc
in
sbb
sub
nop
add
adc
call
mov
push
and
mov
mov
and
push
scas
and
pop
and
add
jo
stc
sbb
jb
in
cs
and
hlt
mov
mov
or
add
in
add
aad
mov
add
ins
or
fisub
and
ins
inc
jns
lock
inc
imul
in
ror
push
sbb
icebp
and
and
dec
cli
(bad)
stos
mov
mov
xor
mov
mov
fisttp
enter
cmps
(bad)
mov
xor
addr16
sbb
dec
inc
dec
jmp
f2xm1
call
cwde
loopne
fwait
sbb
mov
daa
inc
sahf
nop
scas
push
push
push
jle
out
xor
xor
or
cli
(bad)
pop
pop
mov
add
ss
xchg
jne
push
into
pusha
pop
retf
call
aad
pop
xlat
inc
cmps
xor
adc
test
outs
mov
stos
lahf
pushf
mov
cmp
idiv
cld
pop
test
jno
fstp
mov
call
adc
mov
cs
mov
sub
lock
lock
or
push
outs
mov
fcom
je
sar
mov
mov
data16
and
push
in
call
ins
adc
dec
pop
stc
fisub
cdq
leave
fcomp
ret
stos
jmp
in
ror
rcl
div
sar
in
daa
jns
and
xchg
mov
jns
jne
ds
cmc
pop
or
jb
and
sbb
adc
scas
mov
iret
test
push
jno
icebp
pusha
jns
inc
xchg
mov
jl
int3
ret
(bad)
mov
nop
std
les
mov
sub
call
add
dec
fstp
add
addr16
aam
inc
sbb
jp
push
push
or
mov
ror
mov
jmp
mov
push
(bad)
push
jo
push
popf
jns
dec
add
xor
xchg
or
pop
inc
call
cmp
bound
cmp
out
sub
stos
loopne
adc
dec
leave
icebp
push
mov
rcl
jbe
retf
and
loop
adc
sub
retf
xchg
xchg
je
les
imul
je
fdecstp
pop
xchg
sbb
cld
push
sbb
xor
mov
add
pop
in
loop
outs
jmp
dec
push
mov
jbe
rcl
sub
adc
inc
repz
loopne
mulps
sub
pop
ds
mov
sub
div
mov
mov
rcr
loopne
push
push
fnsave
daa
xor
xor
mov
push
mov
shl
mov
xor
adc
(bad)
fwait
xchg
jle
aaa
idiv
xchg
inc
mov
cwde
mov
cwde
lock
mov
mov
mov
xor
inc
mov
(bad)
cmp
inc
es
pop
xor
sbb
add
or
xchg
call
lea
add
scas
icebp
cmp
mov
in
pop
sbb
and
enter
stos
call
jmp
add
cmps
xchg
stc
out
and
cmpxchg
inc
sbb
mov
int
imul
out
cwde
fwait
cwde
into
int3
mov
int
mov
adc
inc
sahf
aad
(bad)
movs
test
dec
mov
push
xlat
or
out
sub
fsubr
ss
retf
movs
ror
div
sub
cmp
test
sub
push
repz
shl
push
sub
data16
ret
mov
adc
and
dec
jns
mov
icebp
ja
cmp
imul
mov
lahf
imul
fcom
jae
xchg
loop
lock
add
leave
popf
push
jbe
dec
test
imul
fs
pop
addr16
popa
iret
mov
in
or
jb
add
into
std
fdivr
and
mov
shl
push
into
inc
dec
sbb
(bad)
dec
xlat
inc
int
jl
(bad)
xor
xchg
add
mov
pop
pusha
jle
outs
and
and
fadd
imul
ins
jmp
pop
pusha
adc
fidiv
sub
jl
or
mov
ficomp
in
add
push
(bad)
lahf
sahf
ret
push
sbb
mov
adc
xlat
movs
iret
mov
push
cmps
lds
(bad)
neg
pop
out
or
ins
stos
(bad)
addr16
adc
or
loope
adc
add
inc
out
leave
movs
pop
inc
sbb
ror
mov
stos
mov
jno
scas
jmp
adc
loopne
test
mov
adc
jecxz
inc
retf
push
mov
adc
adc
(bad)
fsubr
in
mov
nop
mov
push
sti
pop
cwde
dec
adc
mov
movs
sbb
and
jl
dec
dec
and
(bad)
cmp
(bad)
mov
scas
mov
cmc
jne
mov
pushf
lods
hlt
mov
push
jle
mov
push
push
mov
clc
ficom
repnz
or
(bad)
lock
(bad)
or
(bad)
popa
or
ret
(bad)
adc
push
shr
cli
jns
mov
dec
fucomp
nop
mov
and
jae
sub
(bad)
and
rcr
xor
icebp
mov
dec
mov
pop
push
push
sub
pushf
lea
and
sar
or
xor
cmp
shr
mov
addr16
call
adc
and
mov
pop
loopne
fidivr
adc
scas
wbinvd
les
addr16
add
and
into
rcl
movs
outs
lock
imul
push
or
out
add
pop
cmp
add
or
dec
add
mov
jno
test
push
ins
neg
mov
call
sbb
fdivp
sub
sbb
and
pop
imul
mov
mov
push
scas
fst
fwait
xchg
push
leave
test
jp
repnz
mov
and
scas
rcl
or
cwde
mov
jb
(bad)
sti
push
add
mov
imul
xchg
dec
call
mov
arpl
xlat
rol
loopne
in
mov
out
push
cmp
jns
inc
dec
pop
fs
dec
sbb
sbb
leave
(bad)
rcl
sbb
scas
fadd
pop
inc
sub
xor
sbb
adc
dec
int3
icebp
cmp
jmp
into
test
push
xchg
addr16
clc
dec
or
ins
ins
outs
stos
fs
adc
mov
test
add
mov
adc
call
push
lahf
jb
psubusb
or
and
sar
xchg
in
inc
lods
xchg
leave
mov
movs
pop
sub
inc
inc
pop
xchg
push
popa
fadd
stc
cdq
pushf
push
lods
adc
jno
imul
out
dec
adc
mov
mov
and
jb
cs
scas
inc
sti
iret
retf
movs
mov
sub
mov
xor
pusha
jmp
push
push
clc
jl
faddp
cdq
xchg
popf
or
push
and
inc
pop
dec
jne
inc
sub
pop
cmc
fmulp
pop
adc
xor
mov
ret
push
xchg
jp
pop
sub
xor
sbb
mov
nop
les
retf
js
test
adc
ror
push
mov
loop
out
ins
and
pop
inc
stos
xor
faddp
jmp
sub
shl
dec
cmp
jmp
js
or
cs
ret
retf
jo
pop
ins
stc
out
push
xor
aad
xor
out
cmp
inc
fsubr
lods
and
call
inc
ds
das
js
and
into
push
stc
loop
pushf
xchg
push
jmp
inc
fcomp
push
adc
retf
push
adc
cs
(bad)
mov
mov
test
sub
sbb
pusha
call
dec
jl
cs
jmp
pop
in
xchg
pxor
into
stos
xchg
push
jne
sub
test
mov
sub
fcomp
cmc
jno
sub
jmp
inc
pop
adc
add
and
fwait
pop
ror
sbb
add
fmulp
es
pop
jnp
inc
ror
and
or
(bad)
dec
fiadd
pop
xchg
das
and
mov
cld
pop
popf
pop
dec
inc
jbe
mov
sbb
mov
sub
xchg
das
lahf
or
lea
test
jl
stc
cs
and
rcl
pop
cmp
pop
sti
not
xchg
cdq
cmp
mov
and
loop
and
adc
retf
sbb
mov
in
lahf
mov
add
mov
out
lock
sbb
in
loop
mov
fstp
loope
xor
inc
inc
mov
xor
push
fdiv
sbb
je
fbld
retf
shl
sbb
scas
or
hlt
pusha
(bad)
sahf
test
out
retf
push
jmp
pusha
add
sub
movs
sti
xchg
dec
setbe
rol
push
mov
les
mov
mov
and
cmc
enter
lahf
and
jmp
neg
inc
xor
scas
inc
push
pusha
push
adc
sbb
cwde
lahf
jbe
push
addr16
(bad)
jmp
xor
jl
add
and
push
loope
enter
imul
call
loopne
int
stc
scas
fdivr
jecxz
jp
loopne
push
inc
push
sub
jle
cmp
cli
dec
inc
pop
xor
or
icebp
ret
mov
pop
stos
js
jo
into
arpl
xor
jmp
ss
xor
loopne
xor
fbstp
int
push
jg
pop
inc
jbe
jg
imul
es
add
mov
into
push
jg
sub
pop
addr16
jne
sti
dec
into
ds
cmc
fiadd
nop
(bad)
pop
jg
pop
cmc
mov
and
cld
sbb
adc
mov
ins
add
in
gs
iret
and
xor
cs
dec
stos
aas
sub
fcomp
adc
xor
push
sbb
dec
cld
mov
and
pop
inc
pop
loopne
push
push
cdq
call
popa
dec
loope
popa
mov
ds
scas
rcr
dec
out
shl
jle
(bad)
or
sbb
push
ror
ja
and
jl
fs
pop
dec
out
(bad)
imul
mov
out
cmp
push
push
retf
enter
push
mov
mov
cs
cmp
mov
outs
sub
mov
(bad)
fidiv
and
cs
test
nop
push
adc
push
jg
scas
jecxz
pop
scas
fsub
jmp
imul
and
mov
test
mov
xchg
gs
mov
and
aad
mov
sbb
add
add
sar
movs
fbstp
cmc
repnz
mov
pop
sbb
sub
retf
sub
push
mov
cld
es
out
or
dec
sbb
imul
out
adc
adc
je
retf
push
fistp
ins
or
cmp
fmul
sbb
mov
cwde
icebp
cpuid
xchg
shl
test
daa
repz
loopne
jecxz
mov
jo
bound
aaa
inc
mov
aaa
xchg
mov
adc
aad
jbe
sub
fs
pushf
add
lock
xor
push
mov
mov
inc
pusha
inc
pop
xor
movs
adc
dec
aaa
mov
into
hlt
dec
stc
push
jae
repnz
jae
dec
inc
pop
adc
ror
retf
out
or
cmp
ss
sti
mov
dec
fwait
outs
(bad)
js
popa
out
pop
data16
lahf
pop
push
cmp
int3
xor
call
xchg
popa
sbb
jecxz
aam
les
out
addr16
leave
add
jno
xchg
aas
sahf
movs
inc
(bad)
vpminsw
inc
adc
mov
cli
pop
sti
retf
lds
es
push
loopne
mov
fcomp
mov
cmc
cmps
push
jno
(bad)
imul
add
fisub
cmp
bound
mov
fistp
sub
adc
and
enter
data16
call
psubsb
jp
jle
xchg
xchg
fist
jle
retf
mov
jle
mov
pop
lds
loop
or
(bad)
into
xchg
nop
leave
pop
inc
jbe
sbb
js
cmp
jbe
int
inc
inc
mov
sbb
or
cmp
and
loopne
fiadd
stos
mov
sbb
cs
dec
jp
lds
test
xor
inc
clc
adc
dec
pop
inc
jo
ret
mov
mov
shl
(bad)
sti
shl
call
ss
into
push
add
adc
push
or
push
jno
arpl
jge
dec
mov
xor
push
cmps
push
adc
out
sti
rcl
pushf
jmp
jl
and
popa
mov
outs
cmp
mov
jne
repnz
clc
rol
add
arpl
adc
popw
sti
ror
or
sub
into
jno
and
loop
mov
sti
push
push
lock
jno
dec
add
cs
mov
jmp
mov
fldenv
mov
stos
or
fdiv
mov
dec
scas
and
imul
cdq
test
fsubr
cdq
inc
imul
xor
out
push
aaa
les
pop
inc
int
aas
mov
inc
jo
dec
cmp
inc
add
push
mov
(bad)
dec
fbld
mov
adc
ds
js
or
pusha
jns
movs
outs
push
mov
cmp
test
jmp
mov
imul
in
xchg
inc
dec
call
sar
(bad)
fucomi
push
mov
push
inc
sbb
mov
pop
add
idiv
xchg
jle
arpl
sub
xchg
mov
xor
movs
push
adc
pop
mov
adc
les
(bad)
call
fsubp
(bad)
lock
add
add
int
cli
mov
fwait
cli
dec
pop
mov
ja
ja
sbb
(bad)
sub
stos
xchg
mov
imul
push
jno
rcr
or
jg
mov
aaa
into
push
int
mov
push
jmp
jno
in
inc
mov
or
ins
dec
mov
and
aas
test
icebp
jle
pop
ror
xor
lahf
jbe
(bad)
mov
mov
lock
pop
xor
and
inc
cmp
icebp
cld
popa
mov
add
push
xchg
test
mov
xchg
sbb
xchg
add
dec
ds
(bad)
cwde
pop
cmc
sub
inc
jno
mov
sub
add
xchg
mov
push
pop
sub
push
mov
sbb
(bad)
out
cmc
out
mov
add
jno
shl
mov
(bad)
call
ins
mov
cmp
les
sub
jle
rcl
adc
push
push
sub
dec
jns
mov
es
pusha
ja
(bad)
shr
rcl
sub
sub
push
jns
push
outs
out
call
push
loope
pusha
mov
ficomp
test
and
(bad)
dec
push
and
fimul
jl
outs
inc
dec
pop
jae
les
xor
xor
push
cs
call
ja
jg
or
pop
xchg
push
add
out
mov
mov
mov
jo
ds
lods
retf
(bad)
fisubr
out
push
sub
les
retf
push
js
pop
ins
stos
(bad)
pop
nop
int
mov
outs
mov
sbb
les
cmps
ss
addr16
daa
dec
cmp
xchg
nop
daa
arpl
mov
bnd
mov
mov
or
sbb
data16
sahf
add
pop
sub
bnd
shl
jne
cmp
imul
in
jo
js
mov
xor
ja
ror
mov
inc
xchg
jno
nop
cmp
adc
push
rol
and
sub
clc
adc
ret
rcl
pop
jge
cmp
ds
xchg
cmps
(bad)
and
mov
adc
cmp
test
(bad)
gs
call
jno
sub
mov
xchg
pop
jae
cmp
jae
retf
out
or
dec
sbb
test
mov
fisubr
sar
jge
jb
push
(bad)
pop
(bad)
pop
xchg
movs
loope
adc
mov
xchg
iret
ins
jns
or
aas
pop
inc
fwait
mov
jne
aas
nop
out
jle
add
jo
mov
add
ins
xchg
loope
adc
add
sbb
xchg
dec
rcr
mov
adc
cmps
and
bound
lods
pop
add
rcr
xor
in
xor
push
in
mov
sbb
push
xor
retf
push
jmp
and
cmp
add
jge
lods
inc
pop
xchg
bound
stos
xchg
and
mov
or
xor
dec
mov
xor
sub
mov
xchg
das
movs
ds
push
xchg
fidivr
jmp
sub
jp
pop
sub
push
or
fwait
mov
pslld
bound
into
add
nop
inc
push
lods
push
mov
retf
and
add
push
cmc
call
mov
add
movs
int3
jo
mov
sar
and
leave
xor
dec
loop
mov
scas
mov
xor
pop
lea
push
fcmovu
dec
push
bound
sar
loopne
inc
aaa
add
not
test
arpl
aaa
mov
(bad)
test
mov
inc
adc
jle
in
adc
sub
mov
ror
push
cmps
call
xor
js
lea
jg
xchg
adc
shl
out
outs
dec
imul
dec
xchg
and
and
cmps
pop
aam
sub
out
mov
xchg
lea
pop
pop
cmc
adc
outs
outs
adc
pop
js
aas
mov
out
pop
mov
mov
das
aam
pop
add
bound
push
sub
(bad)
inc
or
out
mov
inc
inc
cmp
sub
push
iret
mov
out
inc
mov
out
pusha
push
adc
cs
mov
clc
clc
push
mov
gs
dec
inc
push
dec
ins
dec
ins
pushf
aad
lahf
ss
aaa
aad
(bad)
fimul
sbb
sbb
and
xor
fwait
jg
dec
adc
mov
nop
stc
rcr
retf
xor
jno
fwait
inc
push
test
xor
in
aaa
mov
xor
ret
xchg
inc
dec
stos
(bad)
into
mov
push
and
xor
sub
xor
lods
push
lods
test
popa
hlt
mov
inc
adc
or
lock
push
shl
push
mov
push
fstp
js
cdq
sahf
xchg
lods
xchg
cmp
cmp
mov
rol
push
mov
enter
js
icebp
sbb
sub
pushf
inc
push
push
jg
cmp
out
and
inc
push
shl
cdq
jl
clc
cmp
xor
aad
inc
outs
jle
jg
dec
cdq
add
mov
jecxz
hlt
loopne
ret
xor
and
in
add
sbb
adc
ja
es
push
sahf
int3
and
iret
fild
xchg
jecxz
inc
or
mov
jl
mov
rol
adc
into
scas
and
cdq
in
sub
xchg
jb
dec
jg
sbb
xor
aas
jp
sbb
add
fidiv
imul
(bad)
int3
pop
dec
rcr
or
in
add
jno
lahf
xchg
add
fistp
rol
mov
and
mov
scas
dec
xchg
ret
or
jl
out
sbb
inc
pop
dec
adc
mov
scas
sub
fcomp
add
stos
stc
jo
test
fxch
fld
mov
jb
or
sbb
pop
dec
jmpw
pop
in
nop
add
dec
jne
add
inc
xchg
or
jp
mov
daa
cmp
mov
fwait
test
cmp
scas
dec
sar
add
stos
das
pop
or
outs
les
mov
js
jg
lock
loop
outs
sahf
mov
dec
mov
xor
call
dec
pop
mov
int3
fwait
sub
shr
ss
dec
lahf
mov
data16
push
loop
dec
inc
stc
popf
aam
test
jge
mov
stos
adc
jge
movs
cmp
sub
in
jmp
fst
dec
push
adc
in
into
cmps
test
mov
add
or
mov
sar
shr
(bad)
jmp
sub
cwde
out
inc
aam
jns
jge
outs
mov
(bad)
push
imul
hlt
fld
xor
mov
xor
nop
jle
movs
fwait
dec
mov
mov
pop
xor
gs
mov
xchg
icebp
adc
add
jae
fidiv
mov
repnz
in
retf
icebp
rol
jbe
rol
rol
add
jge
gs
shl
pop
neg
ss
in
repnz
mov
arpl
push
sbb
ret
outs
sub
lea
movs
scas
loope
popa
dec
mov
fcmove
nop
push
dec
or
push
and
xor
mov
sahf
xchg
test
out
call
sahf
in
dec
jbe
cmc
ds
imul
or
sub
mov
(bad)
fcomp
mov
xchg
shl
sar
xchg
jle
pop
xor
ret
mov
jle
sahf
adc
or
cs
nop
sar
sahf
pop
arpl
das
sahf
or
leave
inc
mov
inc
(bad)
rol
add
mov
pop
adc
cmp
in
inc
mov
mov
adc
adc
mov
mov
jae
inc
call
mov
xchg
adc
js
mov
push
dec
sbb
xchg
inc
fdivp
movs
push
add
lock
fstp
xor
sbb
fucomi
sub
xchg
cmp
popa
mov
mov
ret
rcl
pop
cmps
mov
or
xor
retf
out
sub
jo
in
push
clc
sub
mov
push
or
loopne
popa
add
retf
jg
(bad)
out
shr
movs
or
add
cmp
pushw
sub
xor
push
loope
popa
cmp
test
adc
clc
sahf
inc
cs
test
xor
rol
test
add
inc
ss
fsubp
dec
addr16
in
aam
ins
mov
mov
dec
aad
push
add
arpl
push
push
cmp
iret
ds
int
pop
xchg
mov
add
fnstsw
cmps
sbb
push
retf
std
push
and
scas
in
mov
(bad)
mov
sub
sub
popf
adc
jmp
mov
or
cwde
adc
push
movs
inc
pop
add
jge
or
fsub
adc
xor
fadd
cmp
inc
mov
push
pop
mov
push
jl
cld
inc
jge
aad
dec
test
ror
pop
mov
shl
loopne
mov
push
aas
jns
push
lock
xor
lea
dec
fild
xor
pop
push
arpl
(bad)
pop
inc
jno
in
in
daa
rcr
or
enter
movs
clc
jle
into
pop
fdivr
mov
jb
add
repz
ss
pop
xchg
cmp
push
mov
pop
inc
in
xchg
sub
mov
mov
mov
mov
adc
cli
je
lock
xor
push
scas
ror
fisubr
int3
adc
push
add
jns
mov
xor
aad
test
(bad)
xchg
mov
ja
outs
enter
scas
pop
ins
fsubr
cwde
outs
pusha
cs
or
mov
test
or
xchg
popa
popa
es
repnz
loopne
mov
mov
xchg
cmp
inc
scas
stos
aas
rcl
sub
aas
into
popf
push
dec
jae
sti
jmp
int
pop
inc
mov
sar
ror
test
inc
repz
lods
movs
and
xor
cs
fistp
(bad)
xor
xor
je
inc
(bad)
ja
mov
or
push
mov
rcl
xor
(bad)
das
mov
das
lods
sahf
(bad)
pop
push
push
sbb
aam
inc
es
shl
lods
or
push
inc
aam
in
aas
aad
sbb
rcr
pop
pusha
push
adc
sbb
lock
cmps
mov
mov
ds
fadd
adc
adc
cmp
pusha
jge
scas
aam
repnz
call
pop
jno
loopne
inc
jo
jmp
js
shl
shl
out
mov
out
test
fdivr
js
(bad)
stos
mov
out
mov
rcl
push
retf
das
cwde
sti
mov
cmps
sbb
xor
jae
mov
shr
out
js
cmp
gs
pop
adc
push
mov
and
xchg
fmul
repz
icebp
mov
push
mov
and
das
fimul
cld
mov
cli
sbb
jo
mov
push
pop
and
movs
mov
popf
pop
or
int3
sbb
dec
dec
sbb
xchg
inc
push
inc
inc
dec
loopne
mov
pop
or
add
push
mov
ja
call
sahf
repnz
xchg
call
les
pop
loopne
push
out
inc
jle
call
inc
rcl
sub
and
dec
dec
pop
pop
cmps
pop
jge
lahf
mov
jl
add
pop
add
add
popa
and
lahf
mov
pop
enter
mov
into
stos
cmp
repnz
adc
mov
sbb
mov
dec
jmp
sub
or
loop
and
scas
adc
paddd
pop
dec
dec
dec
ins
inc
adc
add
rcl
in
adc
lods
cmp
cmps
xor
cmp
push
mov
or
(bad)
aaa
cmp
scas
pop
movs
xor
out
or
fisubr
add
outs
in
sbb
mov
mov
sti
fsubp
(bad)
sar
fs
dec
jno
push
cmp
mov
jmp
mov
(bad)
and
sti
imul
jae
loope
mov
test
inc
cmc
fdiv
imul
mov
sub
shl
ror
nop
mov
into
cmps
push
sub
push
xchg
mov
xchg
and
hlt
pop
rol
mov
into
lods
or
mov
nop
sub
push
jmp
sbb
icebp
and
push
inc
ss
fidivr
cmp
and
or
repz
sub
dec
adc
dec
fwait
xor
pop
sub
(bad)
neg
aaa
cmps
fisubr
push
pop
jl
add
xor
rol
fdiv
dec
mov
jbe
shr
cmp
push
das
xor
lds
adc
scas
ds
fmul
retf
out
push
popf
scas
imul
xor
sbb
movs
inc
add
or
lods
mov
push
out
adc
ds
ds
add
stc
and
fnsave
lahf
xchg
inc
mov
cmp
jecxz
popa
stos
xor
xchg
cmp
dec
adc
sub
push
jno
xchg
leave
add
out
retf
dec
into
cmps
scas
mov
leave
lods
jmp
mov
mov
jae
or
xchg
add
ror
mov
mov
mov
jge
mov
xor
pop
out
sar
sub
sahf
and
outs
outs
gs
or
fistp
sub
scas
icebp
mov
jnp
mov
adc
and
xchg
in
push
jnp
adc
loope
icebp
push
loopne
or
push
jg
jle
retf
outs
scas
sbb
xchg
ds
out
shr
xchg
sbb
sbb
jne
fbstp
out
js
push
fild
stc
push
into
ins
xchg
mov
mov
mov
inc
lds
mov
ficom
inc
and
das
pop
rcl
ret
fldenv
sub
icebp
sub
pop
dec
in
(bad)
in
add
not
and
push
(bad)
sahf
stos
call
pop
cwde
div
ss
in
push
adc
push
mov
out
push
leave
push
mov
pop
push
and
jl
jle
cdq
push
push
push
jecxz
iret
imul
add
mov
add
scas
mov
push
enter
or
fidivr
xor
ret
in
outs
popf
mov
(bad)
jns
push
or
fcomip
movs
in
(bad)
sub
mov
push
fmulp
xchg
or
(bad)
cmp
inc
dec
shl
jnp
mov
ins
ins
call
rcr
dec
jg
push
(bad)
repz
sbb
inc
sbb
fbld
lahf
call
scas
jp
xchg
jecxz
dec
push
in
cmp
cmps
lahf
add
das
int
pop
popf
mov
into
adc
xchg
lds
enter
cmp
pop
aad
mov
(bad)
and
loopne
mov
dec
adc
daa
test
xor
fidivr
retf
outs
outs
inc
pop
jb
sbb
inc
mov
into
outs
xor
pusha
dec
dec
push
inc
xchg
mov
dec
out
mov
outs
loopne
test
push
ror
cld
jle
cs
mov
xchg
mov
mov
je
mov
inc
dec
or
fs
inc
xchg
lock
push
nop
ins
test
jno
jecxz
cmps
data16
add
adc
test
mov
xor
int3
call
xlat
call
xor
add
mov
ror
mov
mov
sbb
pusha
pop
shr
push
pop
jg
xchg
add
adc
push
mov
mov
push
loope
mov
adc
addr16
scas
call
or
or
jp
das
dec
stos
mov
jge
sub
popf
mov
xchg
call
shr
or
mov
dec
jnp
adc
fimul
sub
mov
xor
(bad)
imul
jp
jo
daa
and
sbb
out
xor
jle
sub
sub
(bad)
mov
adc
popf
mov
and
push
pop
sub
sub
in
dec
std
rcl
ss
add
push
adc
sub
xor
and
leave
fiadd
jne
push
cmp
dec
test
rol
mov
in
lods
in
hlt
cs
in
std
cdq
xchg
leave
mov
sub
inc
fwait
les
mov
mov
mov
in
iret
mov
out
fmul
mov
into
mov
mov
js
or
pop
adc
xlat
cs
loopne
lea
xchg
xor
movs
cmps
inc
jmp
fdivr
sub
clc
or
aam
loope
jmp
loopne
int3
mov
in
out
inc
push
mov
imul
lock
sahf
sbb
retf
fstp
cli
cmp
push
loope
push
push
jg
nop
inc
xchg
(bad)
push
repz
movs
sub
dec
cmps
jne
ins
cwde
ficomp
sub
pop
xchg
lods
cmps
sahf
jl
test
jmp
and
mov
mov
jo
mov
pop
sub
out
jmp
or
inc
pop
cmc
jo
ret
dec
sbb
jb
xor
lds
std
shl
lds
pop
sub
sar
shl
xor
cmp
mov
sbb
into
xor
mov
sti
inc
dec
sahf
sub
and
data16
push
in
call
outs
(bad)
mov
inc
pop
rcl
mov
lahf
aaa
jl
push
xor
and
or
ret
leave
bound
pushf
cmp
xlat
cmps
fcomp
push
cmp
mov
xlat
mov
cmc
push
xor
fcmovnu
lds
mov
or
mov
fistp
mov
jl
add
ss
shl
dec
loope
pusha
mov
out
jmp
mov
xor
fsubrp
pop
jle
shl
sbb
pop
xor
fdiv
dec
jge
xchg
hlt
dec
and
push
dec
jle
sbb
xor
pop
stos
stc
mov
adc
xchg
mov
rcl
dec
push
outs
sub
push
sbb
fistp
mov
xchg
std
popf
bound
adc
ror
bound
test
or
mov
sti
hlt
jnp
out
clc
mov
repnz
pushf
movs
inc
push
jno
out
or
push
sahf
(bad)
cmps
fiadd
mov
pop
xor
xchg
outs
or
mov
mov
imul
ret
icebp
push
adc
loopne
aas
call
add
adc
in
sbb
and
and
mov
out
jge
out
shl
inc
outs
jb
jbe
or
lock
mov
ror
adc
test
cmc
in
adc
push
mov
adc
jecxz
int3
jmp
and
aaa
or
nop
data16
xor
sahf
nop
jbe
rcl
jns
cld
jo
pop
jb
add
ret
je
push
jnp
imul
scas
sbb
dec
mov
shl
loope
dec
(bad)
jmp
mov
jns
mov
and
xor
sub
mov
out
jle
and
fnstsw
xor
adc
mov
mov
imul
ja
push
icebp
push
pusha
pop
dec
sbb
sti
push
xor
(bad)
lds
xor
pop
add
dec
and
fmul
inc
nop
frstor
inc
push
sub
sar
clc
sub
stos
outs
xchg
mov
mov
mov
ss
lahf
mov
lahf
push
xchg
arpl
daa
sbb
iret
rcr
xchg
cdq
test
sbb
jle
jb
bound
ja
xchg
add
jle
nop
fs
not
int
jmp
pusha
adc
mov
fadd
scas
aad
or
sti
mov
das
pop
cs
in
jno
clc
mov
or
pop
push
push
pop
fidiv
xlat
ds
or
int3
loope
je
push
and
outs
push
stos
ins
inc
adc
icebp
es
gs
or
xlat
sbb
outs
scas
dec
push
dec
xchg
loope
sub
sbb
adc
rcl
jns
mov
nop
xchg
sub
aam
pop
fnstcw
mov
cwde
call
cmps
push
loopne
adc
into
jle
fwait
jmp
std
in
jne
addr16
sbb
pop
loope
dec
xor
add
cmp
cmp
pop
sti
xchg
xchg
bnd
inc
aas
pop
jmp
mov
and
int
div
xchg
cmps
rcr
jo
cwde
loope
sub
cmp
sar
lea
in
movs
fdivr
aas
scas
(bad)
mov
mov
push
jmp
pop
lods
sbb
mov
mov
out
and
jbe
pusha
push
push
sub
aaa
pop
and
sub
into
int3
mov
fxsave
dec
inc
imul
cs
mov
cs
sub
int
add
xchg
mov
js
cld
popa
fs
add
and
psubq
or
sub
popf
jo
mul
fdiv
dec
push
ror
out
sbb
pop
test
cli
lea
(bad)
cmp
nop
lea
dec
int3
pop
inc
push
mov
arpl
jp
adc
addr16
ret
loopne
les
aas
sbb
pop
iret
je
xchg
xor
loope
cmp
inc
cs
sbb
mov
inc
add
sub
loop
scas
out
mov
iret
sbb
xor
fisttp
mov
pop
push
push
push
push
aam
loope
jno
jecxz
gs
push
fs
jmp
inc
adc
lock
push
pushf
add
in
inc
dec
pusha
jne
dec
test
and
xchg
aas
and
jmp
loop
(bad)
fmul
push
leave
pushf
scas
jbe
icebp
mov
push
or
jno
dec
sbb
sbb
sbb
jns
add
inc
xor
and
ins
out
dec
sbb
std
mov
sbb
fstp
dec
lea
push
push
adc
aad
stos
(bad)
xchg
push
lods
pop
push
push
inc
mov
out
mov
loope
sub
mov
sbb
inc
loopne
push
push
loopne
(bad)
hlt
jo
das
and
sub
pop
cmp
addr16
pop
mov
stos
cs
loopne
shl
push
adc
mov
vshufpd
in
lock
imul
inc
dec
rcr
iret
mov
push
xchg
push
xchg
jle
fadd
fild
ret
fisubr
sti
mov
lock
lea
ja
mov
or
mov
xchg
pop
pop
mov
lods
push
mov
xchg
jl
jnp
push
mov
or
cmp
lahf
add
cmp
pusha
cs
jmp
pop
stos
shl
int
out
or
mov
ss
pop
mov
ficomp
xchg
inc
pop
jno
mov
adc
(bad)
lds
sub
mov
pop
sbb
mov
scas
push
outs
sahf
test
sbb
sbb
cmp
jecxz
loopne
sahf
pop
lock
xchg
sub
jle
push
scas
pop
sbb
pushaw
xlat
pop
sub
mov
cmp
arpl
sub
or
ja
into
mov
or
and
sti
adc
push
mov
dec
daa
lock
push
into
mov
lods
repnz
shl
mov
pop
sahf
cmp
cmp
into
xor
jne
mov
and
repnz
ret
and
pop
stos
movs
dec
iret
push
mov
adc
dec
aas
outs
fstp
faddp
mov
stc
stos
mov
cs
test
xchg
lock
rcr
xor
outs
pop
gs
sahf
popf
mov
mov
inc
or
push
add
xchg
sub
mov
jno
mov
sub
add
cmp
pushf
sahf
jns
ds
inc
aad
pusha
lods
loopne
mov
lods
je
mov
inc
jg
mov
add
cmp
neg
scas
push
call
or
sbb
dec
imul
arpl
das
add
push
add
jbe
lahf
sbb
mov
jo
mov
shr
cmps
test
xchg
xchg
scas
mov
addr16
call
ret
lods
xchg
std
add
adc
pop
fist
mov
xor
jno
ins
mov
ja
dec
(bad)
out
fs
pop
xor
sbb
adc
ds
call
sar
push
std
clc
pop
mov
stos
jmp
cmp
adc
out
jle
jp
dec
jmp
cmps
mov
pop
mov
jl
jle
fstp
and
outs
mov
ss
into
int3
ins
lods
mov
xchg
jecxz
xchg
mov
adc
int3
add
push
faddp
cmps
cmp
mov
mov
push
jge
or
adc
jno
jl
mov
sbb
daa
out
mov
and
xchg
ja
ds
fdiv
or
mov
dec
loop
push
mov
cmc
and
push
sub
je
popf
pop
icebp
or
xchg
into
mov
sub
cwde
jb
out
push
mov
and
int
(bad)
fisub
scas
lahf
imul
bound
in
jo
fisub
adc
shl
jbe
cmp
hlt
in
fmul
scas
cmp
dec
shr
mov
xor
and
(bad)
out
shl
stos
sti
adc
xchg
inc
(bad)
repnz
fwait
pop
push
jbe
push
pop
outs
pop
push
mov
icebp
mov
ss
push
add
retf
inc
push
pusha
sub
adc
out
aas
retf
jp
jecxz
sbb
jnp
mov
movs
pop
push
jno
fcom
jno
sub
or
mov
mov
neg
mov
movs
xchg
add
or
inc
dec
lahf
xchg
data16
ins
bound
(bad)
fcomp
pop
pop
pop
outs
pop
xchg
out
adc
adc
push
adc
sub
shl
inc
rcl
ror
push
div
push
arpl
dec
and
mov
hlt
scas
out
call
iret
data16
sbb
(bad)
xor
sbb
add
inc
(bad)
xor
mov
test
retf
loope
sub
adc
imul
pop
and
in
(bad)
stos
xchg
add
(bad)
cmp
or
stos
stos
lods
fsubp
in
mov
sahf
adc
addr16
rcr
sysexit
iret
fmul
sbb
popf
loopne
scas
pusha
lahf
imul
sbb
pusha
ss
lds
fdiv
or
imul
and
dec
push
push
dec
mov
aad
aad
add
sub
jbe
movs
mov
sbb
scas
or
into
push
outs
lock
mov
arpl
cmps
push
xor
lods
mov
adc
out
rcr
sti
adc
mov
sbb
addps
adc
cmp
cmc
mov
pop
xor
inc
jmp
stos
fidivr
push
xchg
push
add
jae
adc
xchg
push
rol
lods
int3
(bad)
xadd
cmp
lds
cmps
mov
(bad)
pop
pop
inc
ja
add
mov
call
pop
arpl
xor
cld
xor
cmp
dec
iret
(bad)
mov
cmc
or
pusha
movq
mov
adc
push
mov
nop
leave
or
and
pop
outs
pop
data16
sti
xchg
xchg
loope
in
clc
mov
jl
fdivr
mov
cmps
sbb
jno
mov
and
xlat
xchg
ud2
dec
inc
ss
ret
scas
int3
or
sub
dec
imul
aad
sahf
push
sti
add
rol
dec
push
sbb
xor
xor
icebp
mov
jmp
pop
jnp
pop
cmp
add
mov
sbb
mov
aas
or
ror
arpl
jne
sar
push
cmp
mov
xchg
bound
xchg
xchg
in
xchg
sub
fs
rol
sub
shl
lock
out
repz
dec
rcr
int3
adc
mov
rcl
es
sar
lock
in
mov
lea
push
arpl
arpl
jge
jge
iret
push
xor
mov
adc
jge
mov
inc
jno
popa
outs
pop
jne
jno
jle
retf
loopne
xor
dec
(bad)
stos
adc
mov
stos
jns
add
jbe
xchg
xchg
(bad)
sbb
xchg
addr16
xor
inc
imul
dec
jae
jbe
pop
loopne
dec
dec
in
xchg
dec
mov
sub
inc
outs
xor
jle
popf
outs
and
in
inc
push
(bad)
aad
jmp
pop
push
orps
pop
pushf
jno
xchg
ins
jmp
gs
adc
cdq
clc
ss
call
pop
mov
(bad)
jl
inc
cmp
sub
(bad)
xlat
mov
lahf
cmp
sub
add
push
test
sahf
repz
dec
jnp
cmps
mov
je
adc
(bad)
scas
jmp
sbb
inc
sahf
cmp
jb
jb
loop
pop
pushf
jp
mov
sub
or
push
cwde
add
mov
retf
hlt
jmp
popa
push
xor
push
jo
jmp
aas
lods
scas
cmp
jmp
sub
add
and
clc
cmc
cmps
mov
inc
push
stos
pop
aad
pop
push
xor
ret
mov
bnd
add
jg
add
(bad)
lahf
xchg
lock
push
or
scas
mov
fcmovnbe
rcl
xchg
popf
out
inc
pop
push
xor
jge
fsubp
das
adc
pop
mov
ds
or
mov
push
outs
movs
imul
sub
xchg
mov
loop
rol
in
push
pop
dec
xor
xor
iret
aas
and
mov
xchg
cmps
pop
test
clc
inc
jne
add
or
ret
jmp
idiv
(bad)
loopne
stos
cmps
lahf
xor
mov
pop
pusha
mov
jmp
call
mov
cli
cmc
addr16
cli
lea
mov
outs
mov
outs
jg
out
repz
mov
repnz
aas
inc
push
fst
loop
out
not
inc
or
and
fidiv
scas
mov
add
pusha
into
aam
dec
rcr
xchg
lds
or
jmp
jg
push
imul
and
fucomp
xlat
test
jg
sti
xchg
fdiv
cmp
xchg
hlt
push
inc
or
(bad)
fmul
add
and
dec
mov
push
push
cmps
inc
sub
fdivr
and
rcr
or
pop
mov
lahf
cld
push
dec
push
jb
dec
cmp
ds
pop
gs
adc
sub
(bad)
clc
inc
in
inc
jmp
push
outs
inc
push
xor
cmp
jns
xchg
mov
(bad)
jmp
push
shr
mov
mov
pop
aas
mov
imul
or
or
es
xlat
adc
dec
fisub
and
jne
add
dec
out
sahf
and
into
push
mov
push
adc
mov
add
faddp
cmc
sbb
data16
ins
shl
js
or
or
pusha
ss
data16
add
xor
mov
mov
enter
movs
in
pusha
pop
jns
dec
xchg
push
inc
cmp
cmp
add
les
js
push
push
sub
pop
data16
inc
clc
(bad)
mov
cmps
lds
jle
ds
mov
jg
cs
xchg
jge
mov
push
cs
leave
sti
cmp
or
xor
je
icebp
dec
xchg
pop
or
call
xchg
adc
and
js
push
mov
dec
movs
push
int3
dec
jg
js
lea
inc
fs
pop
cmc
fwait
or
and
xor
mov
mov
xlat
mov
xchg
adc
bound
mov
dec
cwde
ins
dec
xchg
(bad)
xchg
scas
or
jnp
test
sub
push
and
add
fisubr
sbb
inc
das
fsubp
pop
cmp
xlat
inc
add
xchg
jbe
in
cmp
fdivr
push
jno
ror
dec
push
or
arpl
outs
loop
adc
cld
enter
(bad)
test
outs
nop
mov
pop
sbb
xlat
and
hlt
mov
mov
shl
jo
jmp
sbb
inc
ins
fist
stc
(bad)
sbb
jmp
dec
(bad)
pop
adc
enter
movs
movs
mov
enter
enter
pop
js
lea
push
sar
jns
jg
mov
sub
scas
sar
sub
outs
loopne
add
loopne
gs
fs
add
outs
repnz
adc
or
mov
pushf
pop
call
jmp
mul
xchg
outs
add
adc
cs
fbstp
(bad)
retf
sbb
mov
ror
jp
and
mov
es
mov
mov
jbe
or
aas
inc
ret
jb
nop
arpl
mov
and
jmp
pusha
push
mov
enter
adc
pop
mov
jae
mov
cmp
jns
cmp
movs
sub
lahf
fild
push
mov
test
test
jl
(bad)
sub
call
iret
or
dec
scas
ror
pop
jge
fcomp
mov
adc
stos
aad
nop
pop
mov
sahf
loop
bound
jmp
jg
fdivr
xor
add
sub
or
rol
sbb
icebp
jle
sbb
rcr
jo
call
int
mov
sub
mov
cmp
mov
dec
pop
dec
cld
movs
jno
push
adc
jno
mov
ds
movs
fcom
icebp
xchg
(bad)
xchg
lahf
mov
dec
xchg
mov
loop
or
sbb
jecxz
adc
push
push
pop
xchg
cmp
or
mov
mov
sbb
xchg
jne
dec
sbb
adc
ins
inc
mov
out
pushf
mov
cmps
xchg
push
adc
push
sub
cmps
push
ficomp
add
dec
out
je
mov
jmp
jae
jp
push
int
jle
inc
repnz
inc
mov
xchg
and
cmp
pop
xchg
jecxz
xor
jo
rol
push
cmps
jno
adc
cmp
aam
add
pusha
scas
mov
mov
ret
xchg
adc
pop
ret
mov
push
push
pushf
push
jl
pop
int3
loope
jb
(bad)
pushf
rol
sahf
gs
mov
dec
sbb
inc
iret
fst
nop
scas
push
dec
push
sbb
test
outs
mov
mov
shl
mov
sub
jno
rol
jae
sbb
mov
mov
in
dec
jp
inc
adc
jl
fwait
imul
out
jo
lahf
inc
xor
xor
ds
cmc
test
adc
ins
mov
out
and
mov
imul
test
rcr
popf
or
sti
mov
xor
mov
enter
and
aaa
sbb
cmp
jno
sbb
or
loope
ja
add
add
jno
es
cmp
iretw
mov
cli
lock
mov
push
jo
mov
aaa
or
push
(bad)
sti
pusha
inc
pop
loopne
sub
jg
arpl
mov
inc
push
test
push
outs
xor
mov
push
dec
dec
jmp
xchg
(bad)
(bad)
(bad)
outs
jne
repnz
jg
(bad)
mov
outs
mov
call
mov
pusha
xor
aas
gs
loopne
outs
into
(bad)
pop
sbb
fisubr
hlt
pop
add
xchg
sub
mov
data16
je
das
test
jns
xchg
mul
add
jae
icebp
and
imul
fdivr
es
in
mov
sahf
pop
mov
fld
out
push
push
xor
mov
fsubrp
lds
loopne
stos
inc
cmp
mov
mov
shl
ins
xor
push
cmp
sbb
movs
retf
pushf
outs
xor
jmp
sub
cdq
mov
xor
stc
cmp
cmps
loopne
or
sar
imul
test
mov
mov
mul
sbb
cld
pop
xchg
cld
iret
add
pop
cmc
ss
adc
js
call
mov
adc
mov
pop
or
loope
xor
push
push
dec
or
or
lock
movs
lock
outs
ss
call
mov
mov
lock
pusha
sahf
repz
mov
sahf
and
push
pop
xor
sti
outs
xchg
retf
xor
rcl
mov
(bad)
mov
or
mov
jp
std
sbb
pusha
push
push
jno
push
out
push
das
cmp
mov
jbe
mov
add
cld
sub
mov
push
cmp
sbb
dec
loopne
enter
iret
mov
pop
call
std
aaa
lock
jo
imul
cmp
jp
fimul
sbb
test
mov
dec
push
adc
cmp
xor
dec
pop
repz
xor
fnstcw
loop
js
popa
or
int
cwde
and
add
loopne
and
push
mov
cli
or
jns
cmp
in
(bad)
sub
push
inc
jo
fldenv
les
lock
out
lahf
daa
mov
pop
jae
pushf
mov
fwait
adc
add
mov
out
lods
xor
stos
push
test
and
fdiv
mov
lahf
repz
push
out
add
add
jl
shl
or
bound
(bad)
sub
adc
outs
(bad)
jge
je
sahf
or
pop
mov
fnsave
cmps
xchg
xchg
ret
mov
sahf
popa
push
shl
pop
pop
mov
jns
inc
or
mov
shr
and
sbb
mov
dec
pop
stos
dec
cmp
sub
and
add
add
pusha
and
push
jo
dec
or
push
mov
xor
shl
mov
addr16
int
out
xor
sub
jp
fild
mov
sub
jnp
xchg
pop
cli
jecxz
aam
pop
test
dec
push
pop
and
jnp
in
dec
fisttp
mov
sti
fstp
adc
jmp
pop
push
sar
or
or
dec
int
std
inc
sub
add
shl
cmp
lods
pop
jecxz
in
ror
push
fsub
ds
pop
pop
or
ds
dec
push
sbb
test
lods
stos
adc
nop
out
jg
adc
xor
lea
cs
mov
idiv
test
ret
sahf
lds
mov
pusha
xlat
cmp
inc
loop
std
(bad)
loopne
mov
inc
iret
les
ficomp
or
xor
pop
(bad)
mov
icebp
xor
mov
mov
mov
adc
int
outs
inc
jge
push
sbb
cmp
and
push
(bad)
stos
ret
pop
or
mov
bound
push
cli
adc
push
jns
dec
xchg
sub
cli
pop
mov
sahf
mov
ss
push
push
lea
dec
push
pop
pop
xor
or
ins
repnz
mov
mov
jnp
mov
mov
jle
adc
push
jne
mov
pslld
popf
sar
adc
loopne
int3
push
jnp
pop
jb
bound
dec
dec
add
test
outs
jmp
enter
(bad)
mov
jmp
jb
push
inc
(bad)
sub
sbb
(bad)
cmp
xchg
ss
mov
push
out
xchg
sahf
rol
mov
loopne
leave
dec
sub
pop
add
sar
ja
pop
jno
mov
mov
inc
js
jno
inc
sbb
outs
stos
push
outs
mov
lock
push
cwde
sbb
push
pop
imul
pop
das
ss
iret
(bad)
add
cmp
dec
xor
xchg
inc
jg
call
loopne
scas
fcmovne
das
inc
iret
sti
sar
movs
gs
pushf
sub
or
dec
into
scas
cmp
xchg
xor
cli
ja
int
out
xchg
iret
fsubr
loopne
test
scas
outs
scas
xlat
hlt
in
into
xor
and
neg
cmp
sub
xor
or
fwait
push
ret
clc
and
dec
jo
xchg
push
push
jl
in
jne
inc
es
and
jge
mov
mov
dec
ja
fisub
aaa
shl
loopne
ins
(bad)
mov
pop
jl
mov
cmc
or
pop
rcr
fild
inc
push
cmps
mov
dec
mov
inc
jg
xchg
cmp
cmp
jecxz
fucomip
mov
sahf
add
mov
cs
je
mov
pop
xor
test
jmp
lds
call
push
xor
and
fild
call
mov
mov
inc
xchg
dec
mov
fcomp
sub
fimul
adc
leave
adc
pushf
lock
pop
xchg
(bad)
(bad)
jbe
and
xor
sbb
xchg
xor
sub
test
cmp
(bad)
retf
mov
enter
sub
sub
adc
mov
ss
mov
shl
pop
mul
scas
cmp
inc
mov
ds
dec
pop
inc
jg
xor
xlat
clc
ret
enter
loopne
rol
fisttp
mov
aad
scas
push
sbb
mov
out
xchg
sbb
into
repnz
fisttp
and
xchg
pop
jl
or
and
cmps
ret
dec
mov
add
cmps
stc
xchg
sbb
out
add
aas
adc
jno
or
or
mov
push
push
jge
jo
fdiv
push
movs
(bad)
clc
in
inc
(bad)
scas
jp
retf
push
sub
mov
adc
inc
adc
loope
ja
in
rol
lahf
xchg
dec
inc
adc
cmp
pop
ins
adc
jmp
into
jnp
leave
xchg
or
mov
aad
sbb
and
sub
rol
and
fldenv
jmp
das
xchg
test
push
aad
push
lock
outs
pop
jmp
fsub
push
fcom
hlt
or
push
mov
push
es
xchg
pusha
mov
cmp
and
push
cli
lea
mov
jbe
(bad)
lahf
mov
xchg
inc
aam
sar
mov
inc
sbb
push
mov
jne
pop
mov
mov
push
and
adc
test
fbstp
iret
cmc
pushf
loop
pop
shl
mov
push
sar
push
push
mov
sbb
popa
scas
out
add
dec
ss
rcr
jne
mov
sub
push
dec
out
fidivr
cdq
adc
mov
(bad)
int
adc
cmp
pop
xor
jle
ret
mov
xchg
movsx
mov
(bad)
or
cmp
xor
ins
(bad)
lock
jo
fidiv
sbb
inc
dec
cmp
mov
xor
test
not
xchg
mov
lahf
xchg
cmps
test
xchg
sar
jno
int
jo
and
aam
aaa
add
sahf
xchg
sahf
rcr
into
lahf
push
inc
pop
sub
(bad)
shr
into
fwait
dec
data16
fdivrp
push
iret
pusha
jp
int3
mov
xchg
movs
push
mov
push
xchg
ror
mov
xchg
(bad)
push
push
ds
push
cmps
shl
sbb
push
cwde
mov
pop
mov
fldenv
outs
adc
and
jge
mov
xchg
lods
(bad)
xchg
test
bound
sub
and
or
push
push
lods
add
sub
mov
inc
mov
mov
adc
xchg
repz
mov
aam
punpckhdq
mov
sahf
sub
sub
pop
jle
out
aaa
pop
dec
jbe
xchg
fldcw
inc
jge
call
aas
mov
lods
daa
mov
inc
leave
into
inc
in
neg
add
dec
ret
push
daa
mov
push
retf
pop
mov
in
push
sbb
bound
repz
ins
ins
mov
and
or
cmps
icebp
stos
jg
lahf
or
dec
lahf
loopne
lock
inc
pop
inc
sbb
adc
retf
add
ret
cmc
rcl
sub
inc
out
mov
(bad)
sub
cmc
cmp
push
movs
(bad)
sbb
jecxz
mov
cdq
sar
ret
inc
popf
mov
xchg
push
pcmpeqb
data16
scas
scas
mov
pop
fild
movs
lods
adc
outs
jo
enter
gs
inc
repz
mov
iret
mov
(bad)
les
dec
test
and
sub
or
push
xor
repz
mov
pop
inc
lods
(bad)
push
(bad)
jb
in
push
enter
pop
scas
loope
xchg
pop
push
out
je
pop
scas
xlat
int
dec
lods
mov
movs
push
push
inc
movs
push
pushf
sub
rcl
mov
cmp
enter
aas
jmp
mov
lock
dec
xchg
xchg
out
sbb
add
ins
jge
ins
jp
xchg
mov
mov
out
ss
fisttp
retf
adc
dec
sub
mov
or
mov
pop
adc
out
xchg
cmps
repz
or
mov
std
stos
hlt
outs
pop
adc
test
and
xchg
push
mov
idiv
lods
test
cmps
push
fnsave
mov
int3
push
sbb
ror
iret
hlt
clc
movs
pop
and
stos
shr
mov
pop
imul
mov
pusha
push
hlt
and
cli
mov
(bad)
lock
xchg
int
popf
shl
inc
addr16
cmp
lods
sub
xor
mov
fstp
stos
pusha
mov
(bad)
ss
add
test
std
enter
jbe
xor
rcl
(bad)
or
xor
lea
add
xchg
sub
mov
pop
add
mov
xor
pusha
inc
or
mov
icebp
ja
or
inc
push
cmp
gs
in
js
jb
push
and
xchg
icebp
jecxz
out
ins
jmp
cmps
scas
scas
adc
jo
adc
push
push
shr
add
pop
test
pop
repz
jp
jb
gs
(bad)
cmp
rcr
test
das
retf
or
hlt
push
add
movs
mov
outs
syscall
mov
xlat
scas
(bad)
call
jo
or
jmp
mov
jnp
mov
dec
je
jo
jmp
xor
in
jle
mov
push
or
xor
jb
addr16
pop
adc
repz
nop
cs
icebp
call
stos
loopne
and
outs
push
push
adc
add
adc
mov
sbb
sahf
or
scas
mov
pop
retf
pop
mov
in
dec
mov
push
inc
jbe
mov
cmp
lock
cmp
fadd
hlt
mov
loopne
jecxz
and
xchg
and
sbb
imul
inc
inc
dec
cs
jmp
ficom
push
fild
das
call
into
inc
fdiv
mov
push
icebp
cmp
pop
test
push
mov
ret
push
cli
xor
fs
dec
(bad)
(bad)
shl
outs
adc
lods
sub
js
div
sub
sub
ds
loopne
clc
or
(bad)
pop
fidiv
dec
shl
fwait
jl
sub
pop
or
jo
int
(bad)
pop
or
sar
and
aad
cdq
push
xor
sub
sbb
mov
pop
inc
pop
lahf
xchg
adc
mov
fcmovu
or
dec
das
test
sti
das
add
cmp
adc
pop
adc
lods
push
dec
pop
mov
and
loop
add
cmc
ins
dec
(bad)
lods
popa
mov
mov
mov
(bad)
(bad)
push
push
sbb
sahf
test
adc
or
xchg
ror
aad
in
pushf
js
xchg
jle
pop
add
ins
jbe
sub
in
or
cli
hlt
sub
lods
mov
outs
push
(bad)
push
outs
out
mov
out
and
popa
add
lds
mov
lahf
retf
pop
mov
das
xchg
stos
stos
jle
(bad)
lock
cmp
sub
dec
dec
clc
repnz
nop
sahf
daa
jns
sbb
fcmovnb
cmp
ss
mov
lods
and
in
cmp
mov
pop
sub
pop
inc
dec
dec
sub
cmp
cmps
jmp
fbld
or
dec
cmps
stos
arpl
inc
test
mov
xor
ds
gs
ret
mul
lods
mov
push
pop
lds
shl
sub
or
xor
push
dec
imul
loopne
outs
mov
clc
mov
add
inc
mov
mov
sbb
xchg
scas
in
and
test
out
add
(bad)
jbe
popa
jae
sbb
fnsave
repnz
pusha
je
int3
call
mov
add
or
js
cmp
(bad)
je
pop
iret
mov
fwait
sbb
sahf
push
mov
neg
inc
inc
and
jo
or
add
push
gs
sub
mov
mov
popa
jae
add
push
in
iret
mov
faddp
shl
loop
sti
xor
and
sub
adc
js
xor
pop
gs
hlt
fwait
retf
sbb
sar
inc
dec
inc
push
dec
sub
add
pop
jo
into
dec
push
stc
daa
pop
sbb
mov
mov
jle
mov
cmp
fs
xor
(bad)
ja
or
es
loope
push
xchg
sar
outs
ins
int3
xchg
sbb
mov
mov
jmp
mov
rol
rol
fidiv
sub
lea
add
into
or
and
dec
(bad)
mov
push
lfs
mov
adc
sub
jnp
ret
jge
test
add
enter
mov
lods
nop
test
pop
sbb
ds
pop
das
pop
scas
xor
stos
sbb
add
pop
mov
outs
push
push
lea
xor
dec
js
pushf
add
xchg
inc
xor
(bad)
xor
lds
rcr
loopne
pop
in
mov
(bad)
fisub
cmp
int3
or
(bad)
test
and
xchg
jl
data16
fs
das
inc
mov
imul
push
or
out
xlat
jb
xchg
pop
push
jnp
mov
dec
inc
pop
in
in
adc
outs
or
sbb
enter
xor
fnstenv
pop
mov
lea
js
push
jge
les
daa
out
fcom
cmp
adc
jl
xor
inc
push
or
out
adc
lock
repnz
or
mov
retf
jbe
inc
mov
movs
or
add
sbb
cld
mov
cs
bound
xlat
std
or
ds
adc
mov
mov
inc
jle
adc
jno
dec
dec
mov
fidiv
pop
adc
mov
jg
jbe
sbb
xchg
repz
pop
mov
mov
retf
xchg
ret
pop
mov
inc
popa
push
jno
or
push
repnz
xchg
arpl
aas
xor
(bad)
push
and
jbe
jle
ret
jno
mov
push
adc
adc
cdq
es
push
inc
outs
adc
rcl
(bad)
adc
mov
mov
(bad)
jmp
xchg
popa
cmp
into
push
xor
fcomi
jmp
mov
stos
mov
scas
xor
add
pop
ds
les
push
rcr
(bad)
repz
icebp
pop
and
rcl
push
sub
sub
cmps
cmp
imul
xchg
mov
push
lods
adc
sbb
jno
mul
pushf
fist
mov
loop
dec
leave
mov
mov
test
ins
dec
jle
xchg
push
dec
dec
les
out
mov
inc
xor
push
mov
das
mov
out
jle
bound
mov
mov
cld
jmp
push
push
adc
inc
inc
dec
sar
fdivr
addr16
ja
and
jbe
outs
and
mov
repnz
sub
push
into
sar
push
outs
jl
mov
cmp
jno
jo
inc
(bad)
jmp
pop
fsubr
inc
retf
mov
pop
ficomp
test
(bad)
call
sbb
push
mov
xor
fs
mov
mov
daa
ror
xacquire
xlat
lea
test
xchg
stos
inc
inc
loopne
repz
repnz
add
pop
ds
add
fdivr
pop
(bad)
fistp
mov
jmp
push
pop
push
xchg
mov
and
out
push
jo
xor
sbb
stos
mov
(bad)
sbb
test
ror
sub
mov
icebp
fistp
mov
stos
(bad)
sbb
inc
jp
dec
bound
adc
lock
jae
std
hlt
jg
cmp
add
call
std
mov
xor
nop
sbb
fwait
xlat
xlat
daa
mov
lods
stos
pushf
bound
add
call
into
ss
mov
div
repnz
cmp
jecxz
jb
and
lods
pop
xor
dec
dec
movs
jo
test
xor
mov
fldcw
ins
pushf
mov
add
and
add
xor
jmp
mov
int3
in
outs
jmp
ins
lahf
nop
dec
add
and
mov
setb
and
cmp
cdq
ss
loop
or
cld
outs
outs
retf
in
lahf
(bad)
imul
sub
or
dec
pop
jnp
stos
xchg
mov
test
jg
push
aad
fsubr
jl
les
loopne
shr
movs
aad
xchg
mov
enter
push
ss
stos
out
sar
xor
dec
cmc
aaa
scas
pusha
mov
lahf
cmp
cmc
jb
fistp
pusha
pusha
fwait
dec
jl
ror
or
sbb
jb
push
jae
scas
mov
dec
push
inc
and
inc
imul
mov
adc
and
cmp
mov
dec
cmp
push
adc
add
push
cmp
and
jp
les
xchg
mov
mov
stos
jmp
rcr
mov
out
push
push
out
jmp
call
jno
sahf
(bad)
pop
(bad)
cwde
in
and
xor
pop
sub
adc
icebp
scas
jo
jns
popf
lahf
mov
bound
or
sub
loope
lock
inc
push
push
div
add
hlt
xor
pop
mov
or
in
jge
jle
pushf
adc
add
repz
lock
push
jmp
out
pop
(bad)
sub
ret
test
push
scas
cmp
sar
jmp
js
adc
js
mov
aam
mov
(bad)
sbb
imul
loop
jge
(bad)
fild
cmps
dec
inc
mov
jg
dec
movs
and
ja
mov
arpl
fdivr
push
mov
push
outs
lock
iret
mov
mov
test
test
mov
scas
jne
fistp
sbb
jno
mov
dec
mov
mov
pusha
es
adc
fstp
add
call
sbb
pop
les
pop
(bad)
popa
pop
jo
lods
add
or
cli
dec
push
rol
arpl
daa
test
push
sbb
jp
adc
mov
cs
push
mov
xchg
das
mov
xor
call
sub
dec
cdq
lds
(bad)
retf
das
sbb
xor
mov
je
clc
cmp
xor
outs
ret
mov
mov
jno
push
mov
jnp
xchg
pop
nop
jae
xchg
xchg
sbb
push
pop
add
inc
dec
movs
jnp
int3
xor
cmp
xchg
mov
inc
fadd
cmp
sbb
and
jle
ins
test
pop
jnp
and
mov
scas
cs
popa
jmp
test
sub
je
add
sbb
jo
pop
inc
out
dec
or
test
push
les
loopne
retf
arpl
(bad)
adc
test
push
(bad)
pop
mov
shl
ja
jmp
jmp
ficomp
(bad)
nop
sbb
(bad)
dec
das
cmp
pop
sbb
sbb
ds
jge
sti
iret
outs
lahf
test
pusha
add
sbb
add
fwait
ret
fucomip
cmp
sbb
mov
movs
xor
bswap
jle
outs
imul
js
pushf
xchg
shl
sbb
mov
ja
mov
rcr
cmp
sbb
inc
outs
clc
(bad)
mov
push
bound
mov
push
push
pop
mov
nop
mov
push
icebp
in
mov
repz
stos
icebp
int
ja
mov
sub
or
gs
jb
fild
iret
sub
mov
out
retf
retf
and
sbb
int3
sahf
adc
xlat
in
or
pop
inc
clc
xchg
out
sbb
jg
jle
adc
(bad)
(bad)
mov
gs
ret
rcr
cmp
dec
add
xor
xor
jl
push
fiadd
inc
sahf
lock
mov
mov
rcl
mov
jns
mov
lods
xor
aad
int
out
and
lods
ret
mov
es
pop
sbb
jg
inc
push
cmp
int3
aad
clc
cmp
push
jle
adc
nop
fidivr
pop
mov
gs
inc
cmp
sub
mov
mov
add
nop
out
push
cmp
inc
sub
jne
jbe
nop
test
ins
adc
stc
fisub
fcmovbe
out
jmp
mov
jg
lahf
jb
pop
mov
retf
fsubr
mov
sbb
inc
xchg
mov
test
daa
push
fcmove
stc
out
rol
pusha
lods
adc
ror
sti
add
ror
adc
cmp
sub
push
lea
jmp
lahf
xchg
push
push
and
add
pop
dec
push
sbb
fistp
sbb
xor
push
push
rcr
out
(bad)
out
idiv
jp
shl
jmp
(bad)
repnz
(bad)
fcomp
sbb
jo
or
lods
sbb
pop
push
push
in
loope
cmp
add
shl
fld
retf
lahf
fsubr
outs
arpl
call
in
lods
add
leave
data16
sub
inc
sbb
ret
xchg
loope
xchg
jge
xchg
cld
int3
test
sbb
aas
fld
hlt
pop
nop
mov
jle
mov
push
cmp
mov
cmp
popf
sub
push
mul
mov
icebp
cmps
jo
push
test
in
fisub
out
add
push
add
enter
xchg
add
mov
fsub
add
imul
cmp
out
pop
and
loope
xchg
mov
fcomp
push
mov
inc
sub
fsub
inc
jl
pop
repnz
mov
push
mov
aad
sbb
in
cmp
mov
into
push
cmc
repz
test
inc
out
out
in
sti
pop
pop
add
mov
or
xchg
pop
inc
xchg
nop
outs
stos
pextrw
mov
loope
mov
imul
(bad)
int3
aam
sbb
mov
mov
movs
mov
sub
vpmovsxbw
sub
push
pop
lds
in
push
xor
sbb
sub
dec
mov
stos
dec
fwait
push
mov
mov
cmp
maxps
jge
(bad)
cmp
outs
jbe
mov
into
add
push
call
adc
adc
mov
(bad)
and
inc
scas
adc
dec
movs
stos
sbb
cmp
arpl
add
xor
and
(bad)
js
out
movs
daa
xchg
pop
cld
dec
cld
jg
sbb
(bad)
not
mov
push
mov
mov
xchg
rol
test
or
adc
xchg
and
loop
stos
and
mov
mov
mov
adc
(bad)
dec
cmp
mov
iret
mov
jo
mov
push
mov
pop
adc
sub
sbb
aad
iret
fadd
(bad)
out
in
test
lods
jne
popf
adc
movs
jle
add
push
icebp
cs
mov
int3
adc
out
and
pop
je
push
mov
ss
hlt
xor
movs
ins
mov
dec
lea
ds
int3
sar
in
cmp
xor
sahf
jo
ins
adc
push
cmp
add
add
ds
int3
rcl
daa
ficom
cs
mov
jo
lgs
cs
shr
dec
xor
mov
mov
out
add
push
ins
mov
int
jle
and
cs
movs
push
push
push
(bad)
pusha
(bad)
ror
push
jecxz
ret
nop
or
scas
mov
lods
mov
mul
sub
pushf
inc
fwait
sahf
mov
dec
dec
pop
lock
add
dec
xor
and
outs
ror
scas
mov
mov
jno
jo
test
or
add
inc
pop
and
mov
loopne
nop
xchg
test
mov
int3
mov
adc
es
or
out
xchg
jle
pop
call
cmps
fs
lods
outs
jb
out
inc
xor
in
push
xor
cmp
xchg
out
mov
dec
cwde
int3
fdiv
push
ds
pop
xor
push
jle
test
adc
jecxz
ret
add
loopne
stos
dec
rcl
ret
ret
test
cs
pusha
mov
push
or
(bad)
mov
call
lahf
(bad)
jle
dec
inc
pop
and
xchg
push
pop
loopne
push
test
scas
in
lock
sar
mov
push
push
pop
mov
jp
jle
xchg
adc
jno
jmp
stos
nop
rcl
or
mov
jecxz
inc
or
xor
sbb
imul
adc
mov
repnz
dec
inc
jae
dec
daa
aaa
jbe
gs
cs
sub
cmp
fist
xor
int3
(bad)
popa
and
add
push
add
test
hlt
dec
add
mov
inc
out
mov
jne
xchg
(bad)
pop
scas
jecxz
sbb
pop
jge
and
xor
add
test
sahf
aad
pop
int3
jle
popf
adc
shl
add
out
aad
nop
and
jno
ds
ins
mov
int3
jo
fcom
pop
pop
in
and
mov
cmp
mov
clc
xchg
xchg
xchg
daa
inc
retf
add
sub
xlat
mov
nop
push
sbb
dec
push
or
xor
adc
add
adc
pop
xchg
(bad)
lods
in
and
outs
xor
inc
cmp
add
xor
call
sub
or
repz
outs
pop
push
scas
movs
dec
std
ins
std
fs
jnp
mov
adc
mov
fld
or
push
movs
out
adc
or
add
add
ins
ror
aam
data16
cmps
sub
cmp
jb
ss
push
into
sti
mov
ret
test
jno
and
xor
push
xor
push
leave
push
je
loope
xchg
add
mov
test
jle
push
mov
pop
push
mov
push
lock
lea
xchg
cmc
mov
add
and
add
add
inc
jae
pusha
jmp
lock
add
mov
mov
add
loopne
pushf
push
imul
lods
lods
loope
retf
neg
int
xchg
enter
dec
leave
pop
sbb
pusha
dec
int
add
sbb
fcmovu
repnz
mov
(bad)
push
jmp
sahf
pusha
fs
rcl
xchg
mul
or
mov
mov
cs
pop
sub
fimul
adc
and
enter
inc
and
js
test
xchg
mov
into
jg
shl
sbb
inc
xor
pop
xchg
cmp
(bad)
movs
js
aaa
xchg
outs
xchg
add
movs
or
push
test
jo
(bad)
pusha
push
add
ror
call
lahf
jle
dec
dec
adc
enter
repz
sbb
add
pop
cmp
aaa
loopne
hlt
loopne
out
(bad)
jmp
inc
pop
adc
(bad)
(bad)
or
rcl
rcl
cmp
jmp
or
movs
enter
fst
jle
cmps
ror
sbb
push
clc
scas
pusha
aad
fsub
enter
mov
je
push
mov
jg
punpcklwd
test
pop
xor
repz
scas
push
pop
call
sbb
ret
or
and
push
pop
sub
mov
shr
loope
mov
pop
enter
pop
cld
scas
std
cld
push
sbb
push
push
sar
stos
(bad)
bound
cwde
stos
lock
shl
or
pusha
scas
lock
jo
sahf
sar
aam
and
std
shr
xchg
in
pop
repnz
mov
jmp
sbb
pop
je
jl
push
sbb
out
popa
adc
add
xor
mov
cld
in
pop
mov
fstp
loop
gs
sub
movs
pop
xor
mov
sahf
ins
ins
inc
icebp
inc
repz
mov
repz
test
push
retf
pop
into
cmps
pop
shl
ftst
gs
add
mov
aad
and
lds
jl
push
and
push
outs
push
pop
shl
std
xchg
push
cmp
add
or
mov
push
(bad)
mov
or
xchg
stos
cs
icebp
pop
and
arpl
cmp
mov
scas
pusha
sbb
test
mov
test
test
(bad)
in
lods
push
cmc
inc
test
add
dec
cld
mov
pusha
into
hlt
stos
daa
leave
inc
mov
push
les
push
add
out
pushf
test
xor
repz
inc
jbe
(bad)
leave
and
mov
and
cmp
sub
aad
cwde
sub
sub
out
out
(bad)
mov
xlat
loopne
(bad)
mov
cmp
push
call
enter
mov
add
adc
pop
mov
dec
fcomp
icebp
call
bound
out
xchg
aam
xor
and
or
loop
adc
mov
aaa
mov
movs
jle
nop
sub
jmp
out
sbb
lods
ins
mov
pop
ins
sahf
jle
or
inc
mov
scas
cli
sub
scas
inc
pop
xchg
xchg
add
int3
jle
mov
xor
pusha
out
int3
add
icebp
inc
and
pop
inc
sub
mov
inc
arpl
pop
or
sahf
mov
ds
mov
mov
pop
adc
jae
fimul
sub
ins
xchg
xor
jbe
loope
rcr
dec
inc
xor
dec
xchg
popa
jg
inc
dec
aad
jno
lahf
xor
in
(bad)
pop
test
fsubr
je
xor
fbld
push
and
(bad)
mov
pop
cmp
cmp
daa
(bad)
sub
ss
and
jno
call
int
movs
sbb
and
fisubr
ret
lea
jne
scas
push
sahf
in
push
mov
push
outs
add
xor
sub
xchg
pop
mov
fstp
and
xchg
pop
inc
pop
xchg
jle
add
mov
pop
xchg
(bad)
mov
adc
add
dec
int3
rep
repnz
int
in
push
or
push
sbb
ret
das
inc
rol
ins
dec
jns
inc
mov
mov
xor
in
icebp
rcr
mov
xor
inc
xchg
or
mov
adc
cmp
fadd
pop
es
std
cmc
sub
mov
out
pop
fucomp
cmps
xchg
bound
(bad)
int
das
add
ds
mov
icebp
shr
jl
mov
dec
icebp
ss
or
adc
push
int
jecxz
dec
scas
push
inc
cdq
dec
jae
sbb
js
jge
xchg
mov
into
in
fwait
inc
fisubr
dec
xchg
mov
push
jo
add
(bad)
cmp
mov
add
repz
loope
mov
xor
ds
mov
out
or
cmc
jo
dec
rcr
(bad)
js
in
add
pop
aad
xchg
fadd
sub
sbb
das
imul
in
or
add
sbb
push
mov
fnstenv
mov
push
dec
pusha
add
jmp
push
fimul
idiv
cmc
imul
cmp
adc
out
fisttp
jo
retf
dec
lds
add
ret
xchg
push
mov
bound
cmp
jl
or
loop
or
mov
fadd
push
xchg
iret
fsubr
inc
shr
sti
dec
sar
ss
and
pushf
jg
xchg
ins
iret
lds
jae
xchg
pop
(bad)
mov
adc
or
rol
outs
lods
fidivr
mov
popa
outs
das
out
jmp
in
dec
jb
inc
add
loop
sbb
push
or
pop
cmp
cmp
aad
shl
popa
dec
and
cmps
outs
xchg
scas
xor
dec
mov
stos
adc
xor
jno
(bad)
ins
out
(bad)
in
jecxz
cmove
shl
push
lahf
sub
popa
push
test
jg
stos
jmp
mov
btr
scas
mov
mov
hlt
sub
cmc
inc
fwait
inc
push
push
xlat
sub
sar
sbb
ins
and
ins
mov
cmp
push
mov
add
out
add
pop
ficomp
je
and
xor
lock
lea
inc
add
mov
pusha
cs
cmp
arpl
pusha
xor
dec
test
ss
repnz
pop
push
jg
mov
sub
and
adc
out
js
scas
xchg
and
mov
xor
data16
test
(bad)
adc
mov
out
mov
cmc
sbb
mov
push
pusha
sub
xor
pop
adc
in
mov
or
imul
mov
je
jae
adc
jl
in
push
sub
iret
fsubr
in
sub
sti
movs
sahf
add
jp
mov
or
mov
adc
add
xor
pop
mov
repnz
lock
jle
lahf
or
pop
lahf
outs
jb
fs
push
lock
(bad)
out
(bad)
mov
mov
xor
lahf
xlat
mov
sar
mov
loope
loopne
adc
mov
xor
into
rcl
jp
loope
popa
ret
leave
pop
fild
shl
shr
pop
popa
js
mov
and
add
int
add
into
mov
jp
mov
xchg
popa
mov
inc
inc
dec
outs
mov
or
push
adc
xchg
adc
loopne
xchg
sahf
cmp
out
jne
jp
inc
out
jo
popa
outs
adc
inc
xchg
into
aas
mov
xor
cdq
(bad)
sar
adc
mov
enter
sbb
inc
inc
test
jnp
ins
inc
cld
mov
and
out
dec
cdq
sbb
pop
adc
pop
(bad)
jecxz
scas
gs
lea
jg
push
inc
ror
shl
push
cmp
stos
sub
sbb
or
outs
mov
gs
jno
ins
cwde
sbb
and
adc
mov
jno
(bad)
ror
out
xlat
shr
adc
and
outs
popa
dec
inc
in
ror
push
mov
mov
bound
(bad)
or
and
fcomp
jg
prefetcht1
std
adc
(bad)
jne
dec
push
sub
cdq
scas
jle
lock
sbb
sbb
sbb
cld
mov
ds
int3
mov
sar
mov
call
inc
js
pop
rcr
aaa
int3
inc
shl
idiv
pop
mul
add
(bad)
hlt
repnz
xor
sbb
lea
mov
fisubr
mov
mov
in
sbb
sahf
xchg
bound
or
scas
mov
loop
push
scas
loopne
mov
adc
or
jmp
test
lock
shr
mov
ins
push
and
pop
ds
push
and
pop
daa
push
cmps
and
aaa
xor
(bad)
sbb
div
dec
add
xor
pop
das
scas
iret
(bad)
mov
loopne
mov
(bad)
lods
movs
out
sbb
sbb
push
jg
and
popa
xor
mul
xlat
aam
nop
mov
js
adc
in
popf
sub
dec
jo
loope
movs
sub
repnz
outs
sub
das
mov
mov
inc
das
loopne
inc
imul
pop
sub
lds
in
and
shl
dec
mov
pop
mov
fmul
pop
mov
nop
mov
jae
mov
and
cmps
inc
sar
aam
adc
xchg
xchg
cmps
jge
mov
(bad)
rcl
ror
pop
cmp
into
shl
dec
add
push
jnp
xor
lods
xchg
call
loop
scas
adc
add
mov
push
mov
popf
dec
dec
lock
lahf
mov
call
test
or
arpl
adc
cmps
call
xchg
movs
adc
rcr
dec
pop
(bad)
enter
dec
xchg
gs
xor
loop
jbe
ss
cdq
push
mov
jo
lahf
xor
add
jb
mov
pop
and
adc
outs
inc
xor
retf
out
cs
mov
shl
scas
nop
adc
xor
fiadd
scas
stc
ret
sar
int3
aas
cmp
jmp
inc
mov
pop
ffreep
(bad)
shr
xlat
rol
test
mov
xchg
or
push
sub
sub
adc
and
or
push
push
inc
je
inc
les
sbb
ins
mov
mov
jp
dec
add
jb
mov
enter
lea
inc
sar
fidiv
mov
fdiv
add
sbb
or
xchg
push
cs
ror
add
xor
in
loop
or
adc
pop
call
jno
out
rcl
inc
cmp
pop
mov
jle
scas
pusha
push
inc
fcomp
repz
push
or
js
shr
xchg
int3
jae
imul
fsub
add
rcl
mov
mov
pusha
xchg
push
retf
dec
mov
dec
sahf
mov
addr16
scas
rol
loop
in
loopne
and
and
sahf
xchg
add
mov
mov
imul
jb
add
xor
or
lods
and
mov
stos
mov
shl
sbb
mov
push
ss
pop
jo
cld
inc
mov
mov
into
cmp
xor
pop
add
in
lock
sbb
sti
jl
scas
bound
js
or
jno
sar
ror
lock
cmc
cmp
not
pop
mov
stos
popa
add
pop
xchg
sar
or
jle
cdq
and
int3
fdivrp
repz
cmp
add
loopne
adc
sub
cmp
(bad)
loop
dec
ror
sbb
mov
ins
ret
and
and
fadd
jo
(bad)
fld
jns
jo
sbb
jae
and
lock
shl
jb
mov
into
mov
mov
test
popf
dec
xor
pushf
loope
mov
jecxz
add
test
or
gs
xchg
test
or
(bad)
(bad)
arpl
xchg
jae
mov
sub
push
push
jns
out
push
into
rcr
shr
(bad)
mov
mov
pop
jmp
lods
jle
or
push
and
mov
mov
xchg
ret
and
mov
in
outs
leave
xor
mov
dec
mov
cld
test
mov
(bad)
(bad)
and
sub
mov
add
out
inc
xchg
sar
in
(bad)
pop
add
out
lea
adc
cmps
sbb
imul
jecxz
ret
cld
and
(bad)
pushf
inc
push
sahf
jo
sub
nop
xchg
mov
nop
adc
mov
push
jbe
out
in
and
mov
pop
xchg
call
adc
pop
and
mov
out
repz
popf
jp
ins
push
pop
bnd
nop
lahf
jno
ret
and
xor
add
adc
aas
ins
xor
ret
and
cmc
icebp
dec
xchg
adc
xor
inc
mov
outs
xor
or
popf
fild
fadd
les
jns
fistp
adc
dec
daa
dec
scas
in
inc
icebp
fistp
loop
or
push
push
sbb
adc
adc
cs
pop
(bad)
jecxz
cmc
xor
ss
xchg
jae
dec
shr
pop
dec
dec
test
and
cmc
add
inc
adc
(bad)
in
setae
add
cwde
out
inc
ins
ins
xor
sub
lea
dec
aas
pusha
call
bound
pop
pop
std
scas
cmp
(bad)
rol
mov
es
pushf
mov
push
scas
xchg
pop
xor
cmp
mov
add
lods
les
rcl
lock
pop
jno
ins
movs
jge
pop
in
mov
cli
cmp
and
jecxz
out
or
and
dec
fisubr
push
jo
sbb
mov
adc
repnz
dec
xchg
test
mov
cmps
lods
push
mov
jge
push
pop
les
arpl
sub
in
sbb
sbb
jnp
imul
outs
cdq
nop
stos
cld
retf
pushf
jae
push
mov
push
inc
cmp
jo
sub
push
cmps
pusha
jge
and
add
or
sbb
add
mov
inc
sub
movs
imul
mov
mov
add
mov
iret
xor
or
or
mov
fadd
adc
cli
sub
mov
imul
mov
mov
cwde
add
test
shl
lahf
add
dec
xchg
xor
(bad)
pusha
pop
adc
test
mov
adc
repnz
into
and
fdivr
pushf
mov
sub
dec
sahf
pushw
pusha
inc
pop
shr
aas
in
jo
adc
push
cs
shl
outs
xor
clc
pop
nop
out
mov
pusha
mov
and
cld
ds
psllw
or
pop
jne
scas
mov
xor
cmovns
and
lahf
(bad)
adc
cmp
scas
adc
pop
and
jecxz
mul
addr16
sar
icebp
loop
test
jno
inc
inc
jae
jo
adc
loope
rcl
pcmpgtw
sar
shr
and
xchg
jmp
inc
scas
mov
aaa
jo
pushf
pop
sub
rcl
sub
and
(bad)
adc
dec
push
pop
fild
jno
out
sbb
jae
cmp
mov
sub
iret
sar
fist
popa
outs
mov
outs
pop
mov
mov
loope
jge
pushf
adc
stc
sahf
pushf
scas
in
in
cmp
inc
in
mov
adc
jmp
(bad)
rcr
add
icebp
xor
cmp
push
inc
inc
repnz
arpl
mov
shr
and
(bad)
arpl
das
ins
ret
push
clc
dec
and
fs
std
mov
pop
test
push
pop
shr
repz
add
adc
mov
pop
dec
mov
scas
fs
bound
in
in
cli
icebp
in
and
sub
stc
adc
dec
and
dec
scas
inc
push
cld
xchg
jge
mov
mov
lock
sub
aas
xchg
dec
outs
pop
jo
addr16
int3
pop
shl
outs
fnsave
mov
mov
mov
mov
outs
leave
std
dec
loope
sub
cmp
sub
sbb
and
add
cmp
addr16
push
lods
scas
inc
dec
retf
xor
mov
xor
and
sti
pop
mov
inc
adc
pop
jp
mov
mov
mov
enter
pusha
and
repz
aam
push
iret
mov
icebp
sub
scas
lds
mov
scas
shl
bswap
jae
das
rol
into
inc
icebp
mov
pushf
sahf
mov
jb
lahf
mov
dec
sbb
add
sar
mov
xor
sbb
mov
mov
adc
scas
xlat
movups
repnz
loop
mov
fdivr
repz
push
cs
mov
(bad)
icebp
push
sub
lods
mov
or
arpl
fs
aaa
data16
in
mov
push
dec
(bad)
mov
outs
inc
popf
pusha
mov
xor
push
cld
adc
in
mov
pushf
pop
fwait
lods
xchg
cli
and
mov
lock
mov
adc
mov
nop
mov
mov
mov
xlat
inc
add
arpl
rcpps
scas
in
and
out
xchg
mov
pop
stos
and
(bad)
mov
add
push
dec
sar
loope
pop
and
mov
popf
movs
mov
pusha
jmp
pop
inc
xor
fucomi
call
xchg
iret
(bad)
adc
mov
cmps
imul
cmp
popf
es
xor
cmp
xor
sbb
jmp
dec
jae
dec
movs
mov
pop
shl
repz
dec
cs
lds
pushf
push
(bad)
xchg
pop
fst
jae
lock
jne
and
test
out
loop
pop
retf
sbb
jno
in
test
mov
aad
sub
das
(bad)
and
xchg
lods
mov
(bad)
mov
xchg
pop
mov
mov
or
jl
sub
xchg
add
dec
lods
fsubr
pop
call
dec
lsl
push
fbstp
cmp
xchg
icebp
(bad)
shr
and
xor
pushf
mov
push
pop
ror
xor
retf
xor
call
ror
add
xchg
mov
std
jo
xor
push
or
inc
fisub
jl
fmulp
fadd
xchg
pop
mov
adc
pop
xlat
(bad)
pop
xor
jmp
or
psllw
aad
adc
call
mov
das
sbb
jecxz
test
cmc
jmp
(bad)
in
pop
ret
ret
aas
push
dec
pop
int3
and
das
inc
int3
adc
mov
cmp
loopne
add
shr
inc
pop
xlat
sar
fisubr
loope
and
js
rcl
std
frstor
or
lods
mov
push
or
int3
cmps
rcl
in
sbb
and
cmps
adc
push
mov
xchg
mov
add
inc
push
jg
pop
jge
and
repnz
dec
xor
popf
dec
jae
in
push
cs
shl
daa
pusha
fwait
int3
rol
ret
(bad)
popa
je
pop
mov
(bad)
fidiv
mov
cmc
hlt
(bad)
and
(bad)
mov
jle
clc
sub
jns
mov
inc
inc
call
lods
out
jl
ss
add
push
(bad)
sar
mov
lea
cdq
ja
or
cs
pop
push
pop
out
cmp
inc
call
inc
mov
pop
mov
ror
xlat
out
and
(bad)
shl
(bad)
pop
mov
sbb
jbe
pop
cld
ins
push
dec
push
popa
fiadd
in
or
lahf
xchg
ror
shr
inc
xchg
lods
pop
jg
push
push
inc
mov
out
test
lods
add
adc
jo
pushf
xchg
pop
mov
outs
xchg
int
add
xor
call
add
pop
sub
lea
add
and
mov
inc
mov
in
xlat
icebp
pop
test
pop
sti
ja
loop
pushf
jae
jbe
mov
pop
pop
outs
cmp
dec
sar
mov
out
sub
fldenv
(bad)
ror
scas
ins
sub
cmp
xor
dec
ins
push
in
sahf
add
jmp
shl
aad
and
pop
idiv
ror
loop
ret
pop
mov
xor
cli
ror
nop
dec
sbb
mov
dec
div
sar
in
sub
push
xor
xor
aaa
adc
addr16
mov
mov
jecxz
sub
fiadd
inc
pop
les
mov
sbb
lods
push
pop
push
xchg
push
retf
addr16
dec
leave
xchg
stos
shr
jecxz
adc
xor
jmp
dec
dec
jg
dec
and
mov
cmps
enter
lea
iret
dec
ss
mov
push
push
xor
into
pop
into
adc
aas
xchg
ds
xchg
bound
sahf
jbe
inc
dec
imul
adc
pusha
js
mov
stos
xor
(bad)
test
or
ds
bound
clc
push
pop
in
mov
dec
test
test
(bad)
hlt
fidiv
xlat
mov
and
lock
add
mov
popa
loopne
xor
mov
fimul
mov
push
xor
jg
pusha
push
(bad)
mov
add
mov
cmp
enter
pop
gs
push
cmp
cmps
sbb
cmps
push
cdq
mov
mov
fisubr
jle
xor
leave
outs
nop
loop
mov
inc
dec
ffreep
in
dec
xchg
pusha
xlat
push
mov
jle
jmp
addr16
and
and
(bad)
cld
loopne
fdivr
mov
and
adc
cmp
push
imul
inc
fisubr
pop
or
inc
pop
scas
jmp
nop
dec
ja
xchg
push
mov
out
add
adc
cmp
cdq
repnz
std
pusha
lahf
jecxz
and
and
pop
mov
inc
sbb
xor
into
push
cmovns
mov
adc
rcr
xor
(bad)
iret
ror
rcl
mov
in
int
sar
mov
push
inc
sbb
and
mov
popa
shr
out
cmp
jg
or
pop
mov
xor
iret
adc
(bad)
stc
adc
jne
cmps
mov
push
push
push
cmps
inc
push
mov
add
jle
xchg
fdivp
loop
aas
mov
jle
mov
fs
popa
popf
mov
es
leave
mov
outs
(bad)
cld
sub
popa
mov
retf
fsubr
(bad)
pop
sahf
fstp
push
lods
xor
das
push
xchg
mov
gs
xchg
mov
mov
out
sbb
jp
retf
mov
ins
xor
mov
mov
(bad)
call
clc
sar
mov
scas
mov
mov
ja
jg
int
pop
inc
iret
mov
xchg
push
pop
sti
push
mov
retf
nop
outs
fdivr
rcr
adc
mov
mov
cmp
or
aad
jno
inc
xchg
push
and
jecxz
or
lock
dec
xor
icebp
xchg
inc
pop
scas
ret
adc
sub
add
and
jmp
pop
xchg
xor
sub
jb
and
mov
(bad)
pusha
sbb
jg
mov
aam
ss
dec
or
jb
xor
test
dec
jl
leave
imul
(bad)
inc
ret
fadd
mov
mov
or
fild
adc
dec
adc
jmp
cmp
cmp
and
xor
push
mov
and
outs
call
mov
fidivr
jno
pop
movs
pop
retf
and
xchg
jecxz
rcl
jo
aaa
mov
mov
scas
gs
jmp
and
and
das
scas
and
iret
rcr
cmc
pop
add
(bad)
cs
int3
iret
and
xor
cld
jmp
adc
loopne
mov
pushf
popa
jo
sub
inc
xchg
ror
lock
ins
loopne
xchg
dec
sub
(bad)
mov
and
out
xor
fst
das
aad
xor
cmp
jnp
lahf
cdq
push
movs
mov
test
and
pop
inc
adc
and
fmulp
iret
adc
xchg
mov
mov
or
movs
pop
aad
add
mov
xchg
(bad)
cwde
stos
xchg
mov
or
scas
and
(bad)
add
sbb
into
ror
lods
loop
out
sahf
clc
lea
jbe
in
mov
jo
push
pop
pop
popf
adc
cmp
shr
xor
cld
in
loopne
pusha
jle
push
out
cmc
sub
xor
or
dec
adc
rol
xor
scas
fidivr
xchg
mov
xchg
div
add
repz
les
add
in
aad
ret
add
mov
test
jno
mov
arpl
aaa
mov
fsubr
ins
call
popa
mov
adc
outs
lahf
mov
cmp
push
ins
xor
xchg
fdivr
dec
out
(bad)
ins
lods
add
xchg
mov
xchg
inc
add
adc
xor
les
sbb
push
push
stos
sbb
mov
dec
cld
push
rcl
rcl
and
aas
out
mov
push
pusha
and
mov
loopne
mov
and
jle
sbb
into
cs
jns
lods
and
pop
sbb
xchg
gs
rcl
push
fwait
jae
inc
mov
pop
xor
cmp
(bad)
lods
mov
jmp
call
jg
call
iret
not
into
(bad)
fimul
or
jno
sub
sbb
ds
movs
sub
nop
sub
mov
mov
inc
in
xchg
xchg
nop
pop
jnp
and
mov
cmp
jae
outs
push
dec
mov
loope
sbb
or
ins
adc
ds
adc
repnz
push
cwde
popf
mov
jge
cdq
sbb
enter
icebp
mov
adc
rcr
lods
psadbw
pop
mov
fistp
stc
pop
dec
push
out
cmp
fistp
int3
aad
jo
xchg
repnz
shl
fadd
adc
ins
push
int3
cs
fadd
inc
lea
scas
ds
pop
inc
xor
and
jmp
clc
add
mov
push
leave
fsubr
stos
sahf
into
xchg
fmul
mov
rcr
in
jge
fisttp
lods
cmp
jns
icebp
pop
rcl
pusha
shl
pop
mov
fwait
out
(bad)
ror
mov
dec
pushf
sub
sbb
inc
retf
popa
outs
das
mov
clc
jl
dec
push
mov
das
iret
popf
frstor
add
outs
sbb
jge
aaa
out
test
xor
mov
dec
lds
and
sahf
pop
jge
pop
outs
sysenter
push
inc
jecxz
fisttp
mov
fmul
ror
das
scas
push
fwait
xchg
cmp
iret
cmp
cmp
or
mov
sti
inc
pop
or
clc
jbe
xor
popa
mov
ret
jg
mov
mov
rcr
clc
jae
add
and
mov
add
das
push
imul
ds
cmp
xchg
cmp
sub
xor
pop
in
fsubr
iret
mov
lods
loop
out
popa
xor
sub
pop
dec
pop
jecxz
push
sub
sub
loope
ja
stc
cdq
mov
test
sbb
mov
xchg
add
xchg
retf
nop
popa
(bad)
pop
ja
mov
(bad)
jg
dec
into
sbb
adc
pop
nop
or
out
mov
sbb
xchg
out
das
xor
pop
dec
add
fild
cs
imul
not
adc
test
xchg
xchg
(bad)
loopne
imul
fwait
outs
fcom
leave
inc
xchg
and
inc
mov
or
(bad)
cmp
add
push
(bad)
mov
jg
lods
push
jle
popf
xchg
pop
sub
repz
inc
arpl
in
push
jae
sti
ret
or
mov
mov
sub
xchg
pop
pop
jge
jnp
push
cld
mov
sbb
xchg
dec
push
ss
xchg
(bad)
xchg
imul
or
xor
inc
fstp
ficom
out
inc
scas
dec
ds
inc
sub
or
clc
cmp
push
aam
es
fwait
xchg
jo
mov
dec
push
fmul
dec
inc
sub
inc
cmp
add
ror
mov
aad
mov
(bad)
in
lock
mov
mov
push
sbb
mov
lods
cli
iret
stos
(bad)
and
xor
and
pusha
xchg
cli
add
add
mov
scas
stos
fiadd
pusha
adc
popf
push
mov
jns
movs
mov
xor
xchg
sahf
cmp
push
(bad)
dec
add
stos
cli
or
fsub
mov
jo
mov
dec
scas
add
enter
pxor
or
jle
and
jnp
sub
stos
mov
sub
stos
pop
ret
lsl
inc
lahf
stos
sbb
fwait
and
sub
inc
add
jp
xchg
pop
ror
retf
fild
sub
sbb
cmp
int3
inc
add
add
addr16
ret
jg
push
xchg
aas
adc
inc
fiadd
inc
int
mov
add
jmp
xchg
jg
jnp
jg
xchg
adc
imul
mov
mov
or
jp
dec
mov
scas
sbb
jg
jnp
mov
rol
cli
ret
add
mov
xchg
jne
inc
mov
out
cwde
lsl
enter
adc
jmp
adc
jo
sbb
push
fild
retf
mov
mov
mov
fstp
retf
add
rol
and
iret
sub
shl
pop
(bad)
sub
inc
aam
or
(bad)
je
xlat
mov
mov
adc
or
mov
inc
xchg
sbb
xchg
sub
int3
jp
sbb
xor
xchg
pop
test
test
jp
and
cmpxchg
or
out
dec
jb
ss
adc
pop
add
test
xchg
sbb
pop
pop
idiv
jmp
(bad)
or
pusha
in
jp
xchg
cvtps2pd
and
mov
iret
push
loop
fwait
push
fidivr
sub
cs
in
pop
test
cmp
push
sub
or
sbb
cmps
movs
jp
sbb
adc
mov
sahf
scas
aas
call
pop
ret
xor
enter
inc
mov
out
stc
enter
xchg
pop
ds
shl
fsub
pop
inc
mov
cdq
jmp
mov
pop
loopne
gs
pusha
pop
pop
loopne
(bad)
(bad)
mov
jmp
add
xlat
sbb
fsub
ret
add
dec
mov
pop
ins
mov
xchg
ss
clc
sub
in
mov
jp
push
sub
sbb
xchg
xchg
test
xchg
in
aas
call
xchg
or
jmp
jmp
push
dec
or
arpl
xchg
add
jbe
jg
icebp
sbb
push
jmp
jecxz
cmp
pop
js
lods
cmp
ins
hlt
sub
jb
push
arpl
dec
mov
xchg
data16
rcl
call
lds
cmp
(bad)
lods
loop
cwde
push
mov
pop
stos
sub
sbb
cmp
(bad)
sbb
mov
stos
jno
jns
push
sub
xor
in
sub
add
jge
mov
and
ret
adc
inc
cmp
sbb
or
js
pop
push
cmp
pop
mul
xor
inc
cmp
pop
movs
mul
mov
and
push
jle
push
je
ins
out
data16
pop
cmp
(bad)
retf
stc
pop
fld
mov
pop
rol
scas
fmul
loop
ret
pop
inc
pop
out
or
test
fldenv
push
sbb
jns
jge
sub
es
arpl
sbb
repnz
dec
stc
outs
fld
cmp
imul
loop
mov
outs
dec
ret
push
ss
and
(bad)
cmp
cmps
data16
pop
shl
addr16
push
sbb
cmps
inc
and
push
test
loope
ret
sbb
leave
ss
jno
movs
jno
outs
test
scas
push
jge
call
daa
jmp
stos
mov
outs
adc
and
(bad)
call
pop
pop
stos
repnz
mov
sbb
add
test
lahf
into
stc
(bad)
loopne
loope
jb
ins
out
rcl
adc
rol
ins
pop
add
data16
mov
js
mov
mov
xor
clc
mov
push
stos
add
xor
jle
jnp
cmp
xor
imul
xchg
xchg
inc
in
daa
jmp
sbb
push
adc
in
out
cmps
std
cmps
sbb
aas
xor
sub
add
outs
and
aam
je
nop
stos
jo
xor
leave
jmp
in
dec
mov
aas
(bad)
out
cmps
sub
push
jne
or
popa
leave
jne
outs
push
sub
cmp
adc
mov
cmc
addr16
xchg
scas
nop
out
repz
jmp
jnp
xchg
jmp
aaa
in
jbe
out
sub
push
lods
ja
pop
in
aaa
in
pop
lods
ja
cwde
popa
sub
sub
or
pop
dec
and
jmp
push
(bad)
fisubr
cmp
sub
sbb
mov
popa
fwait
and
push
push
jmp
jo
rcl
repz
pushf
stos
jae
nop
aam
pop
fwait
and
ins
lds
push
sbb
jae
aam
cmp
and
jo
sbb
dec
mov
adc
xor
sbb
inc
data16
dec
cmp
sbb
sahf
sub
jo
sbb
hlt
push
adc
xor
fs
mov
push
stc
adc
ret
jge
push
xchg
sub
mov
xchg
push
jbe
fst
jp
call
sbb
mov
stc
scas
stc
add
mov
lds
mov
fidiv
push
push
sbb
jo
es
ror
sbb
jo
fidiv
xchg
not
cs
outs
sbb
ds
pusha
add
mov
arpl
rol
add
dec
inc
sub
mov
popf
jno
and
cmc
je
imul
add
adc
cs
retf
outs
add
aad
popf
xchg
pop
in
inc
ret
adc
cmp
lods
add
jle
into
jne
jns
aad
rcr
outs
xchg
sub
cmp
cmp
sbb
jne
pop
jl
jge
mov
neg
push
jp
sbb
cmp
fisubr
mov
fst
aad
cmp
cmp
sbb
icebp
sbb
jge
cmp
jns
outs
mov
add
mov
jns
outs
mov
xchg
xor
shr
lods
shl
xchg
sbb
cmp
stc
sub
mov
add
push
imul
int
xchg
cmp
jne
fsubr
mov
pop
test
xchg
jmp
lods
jno
pop
xchg
push
xchg
and
sbb
lods
and
aad
not
pop
sar
ins
mov
sbb
rol
fdivr
add
mov
shl
pop
mov
xlat
jmp
mov
xor
int
call
(bad)
adc
lea
lea
sub
int3
(bad)
out
ror
cdq
mov
jb
dec
movs
in
cld
mov
add
bound
lea
cmps
mov
push
pop
lea
lea
lock
xor
xor
inc
and
lock
pushf
cmp
add
lea
pushf
xchg
jmp
pop
lea
mov
and
aas
lea
dec
imul
mov
test
(bad)
mov
daa
jmp
in
inc
dec
add
dec
dec
pop
test
mov
daa
jne
(bad)
xchg
(bad)
loopne
scas
loop
sbb
push
(bad)
dec
daa
retf
mov
stos
or
lods
sbb
dec
daa
inc
and
mov
dec
xor
cmps
ret
lods
push
das
inc
jnp
xchg
(bad)
lock
daa
cmc
xor
cmps
jp
mov
pushf
std
(bad)
dec
and
xchg
fsubr
mov
jp
ficomp
push
bound
or
lock
out
das
xchg
mov
jg
call
scas
inc
pusha
ins
sbb
ins
icebp
addr16
call
das
(bad)
shl
lock
retf
jl
fsub
xor
lahf
cmp
fcomp
retf
daa
mov
adc
(bad)
out
pusha
sbb
retf
retf
jnp
fbld
jmp
(bad)
jecxz
fistp
pop
mov
jecxz
fsubr
mov
addr16
fist
jnp
iret
(bad)
mov
repz
arpl
shl
mov
(bad)
mov
push
ja
je
jmp
push
fwait
pop
enter
shr
lods
jecxz
mov
retf
sahf
test
arpl
out
(bad)
imul
call
lahf
retf
and
addr16
pop
pusha
mov
and
and
mov
mov
xor
sbb
jecxz
sbb
cs
arpl
loopne
or
add
jecxz
or
repz
push
outs
jl
pusha
fdivr
test
fmul
xor
retf
xlat
and
out
mov
fcomp
pushf
retf
and
stos
push
adc
adc
jmp
jecxz
jecxz
sbb
aad
fbstp
jns
pusha
jae
pop
mov
sar
out
sbb
inc
addr16
and
fsub
mov
and
and
push
out
sbb
inc
sub
pop
mov
mov
xchg
arpl
cmps
and
fbld
xchg
mov
sti
push
pop
mov
jbe
push
jbe
and
inc
xor
lahf
push
xchg
call
lahf
test
outs
push
out
inc
pop
fsubr
test
test
push
lahf
test
loop
and
lods
into
jns
paddq
iret
adc
and
mov
pusha
add
mov
lea
dec
sar
out
bound
xor
mov
test
test
ins
xor
repnz
(bad)
push
sub
test
mov
add
mov
imul
arpl
sbb
and
sub
mov
lock
and
mov
(bad)
fstp
xor
sbb
and
clc
add
call
ret
or
(bad)
sti
push
mov
xchg
imul
xor
int
std
mov
dec
pop
xchg
das
and
xor
scas
in
xor
sub
and
fidiv
aad
mov
jno
fld
jmp
cmp
xchg
(bad)
fld
imul
jmp
add
shl
xor
pop
adc
add
int
loop
jb
push
or
bound
sbb
scas
jo
daa
sub
jecxz
jmp
int
stc
xor
jl
push
int
shl
mov
(bad)
ds
or
mov
loop
out
mov
bound
bound
(bad)
fnstenv
adc
loop
icebp
repnz
imul
xor
sbb
mov
fisubr
jmp
xor
fisubr
dec
imul
jns
jmp
xor
xor
jle
bnd
daa
dec
bound
int
bnd
(bad)
xor
xor
imul
jmp
sub
cmp
or
(bad)
sub
push
in
movs
sbb
movs
xor
(bad)
cld
mov
mov
in
gs
cmp
(bad)
inc
es
xor
imul
data16
in
mov
add
mov
ror
cmps
xchg
clc
jle
mov
mov
pop
(bad)
cmp
mov
fdivr
ja
push
mov
fdivr
adc
inc
aas
pop
je
je
mov
mov
movs
das
dec
jle
outs
mov
stc
mov
fidivr
sub
out
pop
xor
mov
in
ds
xor
pop
sbb
lock
push
mov
call
mov
add
hlt
xchg
jp
stos
not
icebp
mov
ret
mov
inc
je
mov
pop
in
mov
lock
into
mov
je
cmp
(bad)
in
jg
jne
cmp
dec
sbb
nop
ds
loopne
(bad)
in
hlt
cmp
lods
or
add
pusha
xor
cmp
out
mov
cli
mov
out
sbb
je
jo
nop
push
loopne
int
mov
fcomp
lock
out
push
jle
sub
mov
dec
pop
mov
inc
push
int3
mov
and
pop
jle
xor
pushf
les
xor
jle
jp
mov
(bad)
sahf
test
sar
mov
mov
pop
cmp
mov
mov
or
(bad)
icebp
sub
pop
in
sahf
jns
shr
imul
je
je
test
jns
hlt
cli
mov
dec
call
out
jge
aad
cmp
jle
jp
das
mov
test
hlt
push
jb
pushf
push
and
xor
mov
movs
ds
cs
ds
mov
xchg
dec
test
fdivr
xor
mov
mov
jg
mov
inc
and
nop
cld
hlt
jle
or
pop
dec
or
and
mov
retf
cmc
outs
mov
sbb
retf
retf
jns
arpl
fstp
pushf
inc
push
pop
and
or
retf
mov
addr16
dec
scas
mov
xlat
fcom
xor
xchg
fdiv
or
das
into
ret
retf
and
and
add
fdivr
cmps
das
cs
cmps
pusha
arpl
adc
cmp
das
inc
pushf
xchg
arpl
lahf
fcomip
sbb
xchg
pop
mov
das
retf
bswap
das
jecxz
inc
mov
ret
push
and
jecxz
sbb
mov
inc
pop
(bad)
pop
and
arpl
mov
(bad)
dec
pop
arpl
push
xor
pop
sbb
mov
mov
data16
sub
scas
mov
mov
or
out
and
arpl
lahf
and
repz
xchg
mov
mov
iret
lahf
das
push
jecxz
jecxz
and
daa
out
retf
loopne
daa
sub
jo
mov
jae
cmp
inc
mov
mov
(bad)
and
pop
das
jae
adc
mov
add
ds
arpl
and
scas
jne
mul
pop
and
pushf
ds
(bad)
xor
mov
arpl
push
pop
jb
cmovae
push
or
push
dec
das
sub
inc
jle
test
test
xlat
test
mov
xlat
test
mov
rcr
xor
lods
test
rcr
dec
movs
movs
loope
xlat
lods
mov
xlat
stos
les
xlat
lods
stos
dec
sub
xchg
movs
xchg
arpl
jmp
fiadd
pop
test
sbb
mov
or
sub
das
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
xchg
pop
xchg
pop
xchg
pop
xchg
pop
xchg
pop
xchg
pop
xchg
pop
xchg
pop
xchg
pop
xchg
pop
xchg
pop
xchg
pop
xchg
pop
xchg
pop
xchg
pop
xchg
pop
adc
adc
adc
adc
adc
adc
adc
adc
adc
hlt
ficom
adc
lock
ficom
inc
mov
xchg
or
ins
ret
lock
and
fstp
int3
les
outs
sahf
push
mov
lds
inc
and
and
push
mov
mov
jle
out
imul
add
and
mov
mov
xchg
adc
xchg
cmps
mov
(bad)
hlt
jmp
cwde
sar
iret
inc
in
adc
mov
mov
ins
nop
in
xor
sub
enter
push
mov
mov
dec
inc
jle
sti
arpl
adc
xor
push
(bad)
shl
mov
movs
mov
call
push
cmp
pop
dec
add
(bad)
or
add
cmp
mov
out
mov
cmp
ror
mov
and
adc
mov
nop
outs
xchg
sub
mov
sahf
js
xor
leave
adc
test
fimul
ss
xor
fstp
pop
enter
das
dec
mov
sub
jecxz
aad
lds
fcom
clc
sub
sub
xor
dec
int3
sub
ds
xlat
das
push
leave
adc
(bad)
ins
jmp
xor
js
pop
(bad)
cmp
cmps
fild
fcom
or
cmp
jmp
sub
aas
in
pop
fnstenv
sbb
adc
xor
pop
rol
retf
cmp
and
rcl
test
das
dec
or
cmps
push
ret
addr16
xchg
out
lock
repz
cmp
jle
push
fisubr
lods
jnp
aas
fcomp
cmp
dec
jg
packssdw
and
push
xchg
retw
xchg
ret
adc
jp
mov
lods
sub
cmp
sbb
inc
cli
sub
inc
xor
mov
mov
cmps
pop
rol
es
es
adc
xor
cmps
pop
mov
lods
xor
pop
inc
jbe
fild
inc
cmp
sbb
fild
es
adc
xor
xchg
sub
sbb
sub
and
and
jg
ss
push
stos
pop
outs
xchg
inc
mov
stos
sbb
cmp
jg
jb
fwait
inc
mov
mov
sbb
dec
repz
jae
jae
movs
or
(bad)
in
test
(bad)
sahf
sbb
bound
adc
dec
jl
adc
sub
xchg
mov
ret
pop
inc
inc
xor
inc
pop
ret
jg
pop
mov
ret
pop
inc
inc
xor
add
out
mov
ins
cmp
mov
stos
dec
or
sbb
(bad)
and
mov
adc
mov
arpl
aaa
xchg
mov
sub
fld
xchg
add
mov
mov
mov
xchg
cs
xor
xor
mov
adc
ds
cmp
mov
ss
mov
in
jno
add
cmp
cs
das
xor
mov
adc
icebp
cmp
jge
sub
jno
jno
mov
lods
sbb
ins
cwde
movs
pop
scas
or
xchg
cs
cmps
aam
push
or
ins
ret
jo
pop
or
sar
cmc
inc
push
adc
ins
mov
rcr
mov
pop
pop
sbb
cmp
retf
repz
lds
adc
pop
inc
mov
xchg
mov
mov
add
mov
pop
mov
daa
in
neg
push
fcomp
mov
dec
fdivr
fmul
fbstp
ret
or
cld
sbb
jl
and
fistp
push
adc
sbb
in
push
lea
inc
test
pop
jne
pop
(bad)
add
inc
(bad)
or
jg
cmp
fisubr
mov
icebp
push
call
scas
push
mov
push
out
add
outs
lock
mov
jnp
js
rcr
shl
fsub
dec
ficomp
outs
xchg
(bad)
fiadd
push
cwde
mov
push
popf
dec
shr
cwde
or
test
mov
jmp
jmp
enter
js
or
int
std
add
dec
xchg
mov
or
lock
and
cmp
fsubr
add
sub
pop
mov
pop
sti
rcr
add
xor
push
mov
cwde
add
ss
fdivr
dec
xchg
bound
std
add
inc
pushf
adc
retf
repnz
stc
cmp
dec
mov
jns
icebp
push
mov
retf
mov
dec
cdq
outs
mov
shl
jecxz
pop
mov
outs
mov
es
sbb
push
mov
sbb
div
pop
jmp
repz
dec
xchg
inc
fadd
xchg
xor
in
adc
daa
mov
or
jno
mov
cmp
pop
inc
fwait
jo
sub
mov
stc
and
pop
cmp
xor
aad
in
cmp
inc
call
cmps
outs
jecxz
mov
jnp
and
pop
in
adc
pop
out
jp
inc
and
shl
movs
outs
or
push
push
add
sbb
cmp
cmp
dec
mov
mov
and
sub
xor
pusha
loopne
mov
test
inc
js
cmp
ja
mov
out
test
sar
jge
and
xor
sbb
cmp
ins
call
scas
cmp
sbb
sbb
data16
cmp
out
inc
in
jecxz
fimul
popf
pop
cmps
data16
xor
ret
sbb
mov
inc
fbld
shl
idiv
ret
push
jg
jle
inc
ret
rol
in
lock
cs
push
push
cmps
sub
jle
push
repnz
pop
cwde
and
mov
add
out
test
inc
std
adc
push
movs
add
xchg
xor
push
inc
mov
cmp
xchg
es
clc
daa
out
(bad)
popa
cmp
xchg
ret
xor
dec
mov
lock
movs
push
pop
out
int3
cmp
dec
xchg
and
and
(bad)
leave
scas
mov
and
iret
call
xor
add
shl
pop
push
cmp
xchg
sub
mov
test
xor
add
(bad)
test
dec
push
outs
and
(bad)
scas
fadd
jne
mov
ror
ins
and
xchg
ror
mov
lods
out
cmp
add
add
(bad)
mov
pop
inc
out
les
adc
or
sub
sahf
retf
js
cmp
push
xor
dec
shr
xchg
mov
repz
push
iret
pusha
push
push
dec
nop
retf
repz
mov
nop
(bad)
sub
adc
and
rcl
sahf
jmp
cmp
adc
fmulp
sahf
mov
push
jge
cmp
jmp
mov
ja
push
or
scas
rcl
pushf
shl
cs
push
and
cli
in
fwait
leave
fucomip
lahf
xchg
sub
sbb
push
popf
xor
mov
rcl
xchg
sub
call
scas
pop
rcl
and
add
sbb
ds
aas
fld
mov
mov
retf
pop
ret
or
js
mov
(bad)
sub
imul
gs
jecxz
call
(bad)
and
push
stos
imul
jmp
iret
jnp
xchg
push
jns
gs
or
fidivr
xchg
stc
cmp
adc
sbb
sub
inc
lock
dec
mov
ins
pushf
add
dec
mov
int
sub
in
jae
or
mov
jge
ds
das
arpl
pop
retf
outs
jns
sbb
cmp
loop
ins
(bad)
pop
out
popa
hlt
or
push
mov
aas
pop
clc
and
or
js
or
cld
ins
mov
(bad)
push
inc
fsub
test
in
ds
push
dec
fisubr
ja
jp
mov
mov
mov
rol
mov
jge
pop
retf
inc
ins
mov
push
xchg
or
mov
mov
popa
cdq
jge
pop
pop
loop
jmp
call
jno
sub
idiv
cmp
mov
jo
and
out
sbb
or
xor
arpl
add
aaa
retf
cmp
outs
icebp
data16
lfs
push
mov
xchg
and
sbb
leave
adc
int3
ja
cmp
idiv
cmp
push
mov
ret
outs
sub
add
jo
ins
mov
(bad)
cs
daa
mov
mov
scas
cmp
out
aad
jmp
retf
jne
data16
lock
das
test
sub
jge
es
cmps
add
cs
sbb
cmpxchg
dec
mov
out
repnz
mov
pop
loopne
hlt
cmp
shr
jb
jae
sub
xor
scas
jbe
jne
aad
ror
mov
jecxz
mov
push
in
cmp
xor
inc
and
or
mov
loopne
mov
call
loop
push
sti
or
jae
push
int
push
mov
(bad)
and
mov
in
scas
in
and
sub
jle
jne
sub
adc
mov
xchg
retf
leavew
das
mov
mov
test
nop
mov
add
and
pop
popf
jp
pushf
dec
mov
cli
outs
dec
sbb
pop
lock
pop
scas
push
bnd
adc
dec
popf
inc
pop
mov
xchg
fnstcw
and
adc
cmp
ins
mov
inc
mov
mov
popf
xor
mov
imul
push
adc
dec
retf
push
in
les
dec
jg
or
cdq
or
mov
neg
shr
xor
movs
lahf
ds
imul
into
jo
pop
rcr
dec
mov
pop
loope
call
xchg
(bad)
push
outs
xchg
jge
retf
dec
out
aaa
test
(bad)
dec
or
mov
or
js
pop
push
scas
jle
mov
xchg
repnz
mov
xchg
jae
xchg
outs
(bad)
fsubr
inc
out
jo
adc
push
pop
test
ja
sub
mov
out
jp
test
or
cmp
xlat
fimul
push
cmp
int3
stos
ret
in
(bad)
in
jmp
(bad)
fist
mov
mov
iret
and
cli
mov
add
ss
adc
gs
jmp
pop
ffreep
push
push
and
rcl
mov
test
xchg
loop
mov
jne
mov
sbb
nop
ret
dec
adc
xchg
xchg
sub
das
call
inc
daa
into
and
add
clc
nop
test
mov
sbb
cdq
sbb
mov
mov
rcl
jl
sub
cmc
mov
int
movs
test
mov
call
les
nop
fdivr
jnp
dec
movs
fiadd
xchg
in
lea
lds
xchg
mov
add
test
les
retf
clc
js
and
sub
adc
jne
inc
cmp
xchg
push
pushf
or
and
xchg
cmp
mov
mov
daa
jmp
dec
xchg
push
mov
das
aad
dec
les
fadd
sub
adc
sub
inc
sbb
xchg
push
mov
lea
ret
xor
push
lds
daa
repz
scas
and
leave
lds
sub
pop
retf
add
push
mov
je
or
and
adc
add
push
lahf
adc
sub
repz
test
aam
pop
loop
pushf
and
push
mov
movs
sub
push
inc
(bad)
mov
xor
adc
xor
sub
lock
es
sbb
mov
retf
xchg
cmp
xor
pop
pop
(bad)
pop
in
nop
and
mov
xchg
jns
or
and
cs
in
call
push
adc
repnz
sub
or
push
mov
adc
sub
sub
or
cs
inc
std
loop
or
aad
add
(bad)
cmp
stc
dec
pop
sahf
aas
leave
sbb
(bad)
mov
fidivr
shl
jmp
sub
mov
mov
aaa
ficomp
cli
push
dec
in
xchg
push
fisub
push
repnz
dec
fisub
pop
out
in
add
sahf
push
shl
aam
jmp
out
ds
mul
in
cmp
sub
repz
cs
into
das
hlt
inc
les
das
retf
mov
ds
and
and
add
(bad)
in
daa
adc
pop
hlt
push
sahf
add
jmp
jmp
fdiv
xchg
dec
rcl
or
or
mov
pop
jmp
add
mov
or
data16
cmp
dec
int
(bad)
aas
bnd
(bad)
adc
add
les
std
and
sbb
mov
and
cmp
aas
cmp
sahf
adc
cmp
cmp
cmp
add
repnz
cmp
sbb
add
cmp
push
lock
fild
mov
out
push
lea
push
aad
mov
retf
inc
in
std
add
sub
pop
jmp
repz
clc
(bad)
pop
cmc
add
ror
xchg
cmp
dec
mov
jne
jo
push
les
inc
inc
jne
inc
test
xor
xchg
jo
jno
dec
adc
les
(bad)
adc
imul
push
xlat
imul
dec
xchg
outs
mov
ret
add
ja
pop
cmps
jno
jbe
dec
xchg
adc
mov
retf
push
idiv
sbb
(bad)
push
aad
mov
outs
mov
stos
dec
ins
call
xchg
dec
neg
(bad)
jae
dec
lods
add
push
stos
outs
cmps
adc
xchg
dec
mov
xchg
pop
sahf
push
test
stos
pop
test
inc
imul
mov
dec
mov
inc
popa
push
jmp
imul
ins
test
aam
movs
inc
aam
xchg
adc
lea
in
push
nop
sbb
push
jle
(bad)
push
jno
dec
les
add
dec
mov
fild
adc
ror
fs
ja
jo
arpl
pop
mov
push
ins
mov
test
push
adc
add
mov
movs
arpl
or
dec
mov
ins
loop
mov
dec
outs
in
adc
sub
dec
push
call
xchg
dec
movs
arpl
xchg
mov
test
lods
mov
mov
(bad)
xchg
xchg
fchs
fsubr
repnz
test
xchg
fiadd
in
mov
jmp
enter
xlat
popf
fdivr
jmp
xlat
xchg
sahf
int3
xchg
std
sub
sar
aad
cld
loope
in
lods
cmps
call
fucom
out
mov
ret
call
(bad)
xchg
test
cdq
in
(bad)
into
out
mov
(bad)
out
in
sti
cmc
jmp
icebp
not
mov
lock
mov
stos
sub
shl
rol
out
mov
cdq
enter
ret
loopne
mov
fwait
into
mov
cli
mov
in
mov
jmp
cmps
loop
fnsave
sar
stos
out
mov
repz
in
jmp
call
popf
lock
in
mov
in
clc
clc
call
mov
scas
lods
inc
sahf
ret
call
jle
ins
fist
mov
adc
or
outs
mov
sbb
mov
mov
mov
push
mov
mov
cld
mov
jle
or
cmp
push
lods
or
xor
int
mov
sub
scas
adc
pop
scas
pop
std
mov
cmp
fnstcw
pop
ins
retf
(bad)
fistp
scas
pop
xchg
dec
lods
push
icebp
sub
xor
cmp
imul
inc
scas
lods
sub
xor
cmp
jmp
xchg
cmp
pop
jmp
or
pop
inc
sub
cmp
sbb
sub
dec
mov
ins
mov
push
jns
scas
das
sbb
popf
adc
pop
repz
fldcw
mov
dec
pop
sbb
fwait
pop
sbb
aas
ins
cwde
push
mov
push
and
and
and
test
mov
(bad)
je
and
or
loopne
jae
push
(bad)
push
loope
icebp
inc
not
fbld
test
out
inc
jbe
addr16
stos
cmps
shl
push
loop
fdiv
add
fmul
push
mov
les
sub
and
or
cwde
xor
sbb
inc
in
add
loop
cli
cmp
adc
xchg
rcl
sub
fidiv
icebp
jne
xor
repnz
hlt
mov
jo
ins
xchg
ficom
rol
pop
repnz
rcl
inc
mov
inc
mov
(bad)
les
add
mov
(bad)
sub
or
and
pop
std
or
data16
ja
in
or
add
jbe
adc
add
xchg
push
(bad)
and
push
push
mov
rcl
ror
mov
loopne
ret
mov
lods
aaa
mov
(bad)
inc
je
xor
movs
push
sub
in
sub
les
adc
fcomp
out
cmp
jbe
sahf
(bad)
jle
add
and
mov
mov
mov
clc
push
pop
cdq
cmp
sub
or
or
jle
bound
cmp
stos
sub
pop
mov
out
jl
jns
dec
movs
sub
mov
loopne
cmp
mov
or
or
mov
dec
mov
cmp
bound
data16
out
daa
(bad)
ror
test
lods
pop
mov
mov
inc
push
push
call
sbb
ficomp
dec
int3
stc
cwde
(bad)
out
js
mov
dec
mov
jmp
cmp
aam
enter
fadd
retf
fcomp
lea
pop
lahf
cmp
pop
mov
sbb
outs
test
aas
inc
ins
add
imul
jmp
shl
pop
and
jge
sub
jp
int3
(bad)
cli
add
cli
shr
pop
fistp
pushf
dec
cmp
mov
out
pop
aas
jmp
pushf
inc
fld
or
pop
mov
fcmovne
lea
(bad)
cmp
test
(bad)
push
sbb
cld
clc
(bad)
gs
xchg
ss
cs
psubw
sub
or
jns
push
aam
mov
lock
data16
jg
cwde
popf
inc
cmp
int3
pushf
pop
fidivr
retf
dec
sub
sub
or
inc
cmp
(bad)
cmp
adc
jb
in
(bad)
fnstsw
jmp
cmc
cmp
retf
xor
mov
(bad)
icebp
mov
ins
out
cmp
jmp
add
fmul
out
retf
enter
sub
add
mov
and
popf
pop
mov
inc
jecxz
mov
cdq
push
outs
adc
enter
test
xchg
sahf
add
inc
pop
repz
inc
sbb
adc
lock
mov
xchg
mov
and
mov
mov
fdiv
lods
enter
aad
jg
nop
cmp
(bad)
cmp
jmp
adc
xchg
popf
test
jno
mov
stc
cmps
out
pop
fidiv
cmp
aad
pop
leave
mov
xor
loop
and
xor
mov
int
mov
stos
loopne
popa
ds
retf
fcmovbe
ret
mov
xor
push
mov
shl
fimul
or
jae
in
aad
xchg
add
sbb
(bad)
ror
fcom
int3
adc
xor
retf
mov
dec
vxorpd
mov
(bad)
pop
mov
push
mov
gs
sar
cmc
mov
and
sub
cmp
pop
shl
xor
xchg
mov
xchg
and
jo
mov
xchg
mov
and
loope
mov
into
ds
xor
jo
jbe
mov
or
inc
lahf
mov
imul
inc
mov
out
xor
xor
jno
inc
inc
mov
mov
cdq
ja
data16
xchg
mov
popa
inc
loope
cmc
push
dec
mov
dec
mov
xor
ror
push
(bad)
xchg
inc
pop
pop
test
inc
aad
(bad)
retw
aas
lahf
ss
add
cmc
mov
add
mov
icebp
jo
not
arpl
aad
in
jb
push
loope
and
cmc
push
mov
jae
xor
stos
jb
inc
dec
adc
mov
xlat
inc
rol
pop
pop
(bad)
pop
scas
pop
inc
adc
xchg
cmps
movs
fisub
mov
sub
jg
loop
int3
mov
(bad)
jbe
add
or
pusha
adc
mov
mov
call
shl
daa
loope
sub
jmp
sar
mov
adc
lahf
mov
cmp
adc
mov
out
inc
mov
dec
jne
fmul
cmp
les
cld
jnp
mov
(bad)
push
cmc
mov
sub
dec
mov
call
fmul
sbb
pop
add
arpl
rcl
int
adc
jp
jmp
pop
popf
call
loop
loop
mov
fsub
sub
cmp
in
pop
(bad)
inc
pop
sbb
pop
pop
ret
add
dec
cdq
mov
scas
movs
cld
sbb
js
mov
xor
or
repnz
pop
out
jp
push
call
or
sbb
jmp
cmp
add
cmp
xor
imul
or
idiv
fs
push
cmp
pushf
inc
dec
inc
pushf
lods
sub
pushf
ds
dec
cmp
inc
inc
dec
inc
imul
xchg
cmp
hlt
(bad)
js
sbb
data16
xchg
pop
xchg
call
retf
push
test
call
in
in
sub
cmp
or
sub
ss
jno
inc
mov
xor
repnz
jb
mov
call
fucomp
int
out
or
cmp
cmp
dec
div
mov
mov
jne
jnp
xchg
(bad)
div
lods
(bad)
cli
mov
sbb
loope
iret
int3
test
xchg
std
mov
arpl
mul
loop
jb
push
mov
fmul
ss
and
div
sbb
lock
or
xchg
out
push
movs
adc
addr16
adc
not
cmp
mov
adc
add
push
ror
inc
ins
fldenv
pop
loope
or
repnz
jge
repnz
or
in
pop
(bad)
xor
push
fwait
add
std
xchg
ret
icebp
ss
xchg
xchg
add
std
fs
jmp
push
jb
jp
push
test
or
es
mov
ss
sbb
not
cli
nop
sti
xor
shl
mov
lahf
xor
call
retf
dec
cmp
push
je
gs
mov
inc
and
cli
std
adc
scas
xchg
and
icebp
mov
push
movs
dec
add
in
mov
adc
cmc
sahf
lock
sti
cmps
mov
(bad)
inc
and
mov
ret
adc
retf
mov
sbb
imul
les
(bad)
fsubr
in
sbb
sub
adc
lahf
test
movs
aad
cmp
jb
adc
stos
mov
mov
and
cmp
jmp
addr16
gs
xchg
in
loopne
inc
scas
leave
sbb
hlt
xchg
(bad)
adc
sub
les
or
scas
test
dec
loopne
fst
push
out
mov
test
hlt
add
adc
push
les
sub
adc
add
mov
test
stos
add
xchg
fist
jle
test
je
or
ins
iret
hlt
aam
dec
clc
outs
mov
in
adc
test
scas
and
cmp
stos
xchg
fbstp
pop
pop
cmp
mov
test
mov
pop
lods
ins
cmps
dec
mov
and
pushf
mov
xchg
push
pop
scas
adc
xor
lods
jns
sub
fsubr
mov
jle
pop
jl
test
cld
(bad)
jns
ja
cmp
cmp
cdq
sub
loope
mov
adc
push
add
cmp
aas
mov
xor
scas
cmp
bound
dec
add
mov
xor
out
cmp
jmp
xor
add
jge
add
into
scas
xor
aaa
push
scas
mov
push
icebp
and
xor
(bad)
fisttp
shl
daa
sub
and
sahf
dec
or
mov
mov
sub
mov
cdq
sub
rcr
mov
stos
xlat
mov
test
int3
dec
mov
test
aaa
jne
fadd
adc
pop
fadd
jae
inc
pop
je
bound
and
and
jmp
mov
push
popa
xchg
sahf
mov
mov
popf
and
movs
xor
movs
push
bound
and
jne
xchg
fild
and
daa
loop
jo
jecxz
popa
mov
mov
push
daa
loop
loop
test
mov
and
int
stos
es
mov
loop
and
push
cmp
sti
jb
les
into
hlt
std
ins
in
fiadd
mov
add
js
inc
jo
adc
enter
or
xchg
sub
gs
nop
xor
das
add
in
or
cmps
dec
inc
sub
loop
adc
retf
mov
es
lea
or
push
adc
rep
inc
fadd
and
add
xchg
mov
bound
popf
push
pop
and
jmp
fwait
mul
(bad)
repnz
jnp
bound
push
push
shr
dec
fisub
lea
mov
leave
loop
sub
ins
and
xchg
movs
data16
jnp
xor
and
fsub
cmp
and
bound
out
loop
mov
out
repz
jb
pushf
xchg
sub
jge
add
cld
je
jp
push
pop
cwde
mov
pop
in
ss
fdivr
outs
push
into
or
or
add
jl
sbb
outs
or
fimul
je
push
mov
cwde
fimul
push
aad
push
xchg
dec
mov
jecxz
call
adc
xchg
mov
cmp
out
mov
popf
sbb
sbb
(bad)
aad
mov
sbb
idiv
sbb
jl
jl
or
pushf
or
icebp
js
call
add
cld
pushfw
ja
loope
mov
cmps
xchg
sbb
or
test
sbb
jl
or
pop
stc
pop
std
push
stc
mov
mov
int3
mov
in
or
jge
jns
xchg
pusha
xchg
ins
ins
stc
and
cld
adc
adc
ret
mov
stc
pop
enter
cmps
sar
pop
jno
dec
jl
stos
outs
(bad)
jg
sub
mov
push
dec
(bad)
sbb
inc
mov
stc
hlt
int3
add
leave
scas
sub
out
dec
mov
jne
or
cmps
lahf
inc
mov
add
cmc
stos
retf
mov
cld
mov
jbe
hlt
pop
retfw
cmp
or
ins
ja
mov
lahf
sbb
ficom
mov
push
cmps
ins
cmp
das
dec
out
mov
ret
in
aad
movs
or
push
sub
scas
xchg
cmp
test
icebp
mov
test
push
jnp
bound
adc
xor
bound
cli
and
push
or
mov
push
dec
mov
sbb
mov
or
jp
mov
je
(bad)
sbb
cli
xchg
jo
lea
retf
xchg
push
lods
leave
bnd
imul
inc
or
xchg
inc
or
aad
xor
aas
aas
fisttp
cmc
xchg
xchg
mov
fild
push
bound
dec
sbb
test
bound
sub
or
dec
aad
or
xchg
and
jne
js
stos
cmp
xchg
fld
(bad)
cmp
or
sbb
sub
jge
setp
sti
push
cmp
int
xchg
xor
je
jg
out
cmps
fisubr
jmp
push
pop
dec
fisttp
push
pop
xlat
ret
outs
out
jnp
or
sti
xor
sub
js
adc
aaa
push
lahf
jmp
adc
dec
ins
and
adc
push
int3
mov
pop
and
jne
enter
retf
sbb
repnz
jnp
xor
test
fist
in
in
or
in
arpl
jmp
(bad)
cmp
or
xor
jmp
sbb
mov
cmp
xchg
gs
adc
sti
jnp
or
test
or
push
or
sbb
push
and
ret
js
cwde
mov
adc
leave
dec
jge
push
mov
mov
mov
mov
mov
xchg
push
dec
push
shl
mov
jno
mov
cmp
jno
inc
sub
in
adc
mov
xchg
xchg
test
popa
or
popf
push
(bad)
fcmovnu
test
inc
jae
xor
pop
pop
mov
xor
in
cmp
mov
xor
pop
push
pusha
sub
sub
pop
icebp
adc
inc
popf
js
pop
pop
and
enter
aas
gs
aaa
jo
jns
mov
mov
std
adc
mov
(bad)
aad
loop
push
and
sub
and
and
lods
daa
imul
xor
jb
xor
sbb
push
into
in
leave
jecxz
xchg
cmp
shl
add
aam
call
aas
clc
mov
call
mov
sti
aad
dec
lds
movs
mov
data16
test
dec
pop
stos
mov
cdq
add
add
xchg
shr
leave
loop
pop
xchg
add
sbb
sbb
mov
inc
jmp
mov
(bad)
mov
sbb
shr
push
fist
ret
inc
in
mov
jns
test
aam
pop
jl
fcom
jp
cmp
jbe
jae
dec
out
fistp
or
jnp
mov
xor
fucom
pop
and
pop
dec
mov
or
or
pusha
sbb
or
pop
fdivr
add
(bad)
fimul
jb
xchg
shr
pop
add
je
in
or
fucomp
sbb
sub
jg
cdq
dec
lods
inc
or
scas
pop
sub
frstor
mov
sbb
stos
sbb
shl
rcl
fsubr
(bad)
cmp
loopne
sbb
jmp
pop
not
(bad)
pop
cmp
mov
cmp
js
icebp
push
movs
jmp
aaa
sbb
in
sub
inc
mov
cmps
in
popf
add
xor
pop
aam
shr
pop
test
int3
xchg
jecxz
in
(bad)
rcr
mov
dec
popf
jbe
dec
out
fs
lods
(bad)
(bad)
and
ret
je
stos
push
movs
push
cdq
rcl
adc
cmps
inc
cmps
inc
mov
outs
cmp
jle
sub
push
or
ja
inc
fadd
cmc
pop
jbe
mov
repz
xchg
(bad)
(bad)
and
shl
rcr
add
fdiv
and
jmp
inc
mov
mov
(bad)
call
pop
push
xchg
loope
frstor
fbstp
repnz
jb
nop
pop
push
lahf
xor
lods
sub
je
mov
push
sub
das
lods
xchg
inc
jg
(bad)
leave
sar
cmp
(bad)
out
data16
inc
ss
jno
test
and
xchg
mov
repz
ror
ss
popa
lea
bound
cmp
inc
mov
ins
xchg
std
arpl
push
lahf
popa
xlat
and
inc
push
xchg
xchg
ins
fnstenv
xchg
arpl
push
ja
data16
lds
xchg
test
cdq
jbe
mov
and
jbe
leave
mov
ins
imul
repz
(bad)
test
aad
jno
shl
dec
movs
pusha
mov
add
mov
add
test
mov
ret
and
xor
je
ret
cmp
jnp
ja
cmps
rcl
sahf
aad
xchg
imul
xor
jno
or
neg
or
pop
test
adc
mov
iret
fld
inc
aam
imul
ret
cmc
fild
test
mov
cli
push
xor
data16
sti
fs
inc
sti
or
stos
cmp
jge
test
inc
hlt
xchg
movs
jae
les
xor
jp
cmp
sti
mov
push
mov
jp
cdq
je
mov
bound
addr16
(bad)
cmc
pop
mov
adc
adc
or
jo
idiv
mov
mov
or
cmp
jmp
add
sar
lea
xchg
(bad)
into
sbb
je
fs
repnz
sti
mov
cmp
retf
iret
mov
(bad)
xlat
jbe
dec
cmp
xor
sub
mov
ja
mov
pop
in
movs
dec
je
iret
hlt
imul
sti
dec
or
sbb
out
mov
je
dec
sahf
xchg
cli
sbb
push
xor
enter
fwait
sti
mov
jo
add
sub
stos
outs
push
call
mov
in
loop
pop
loope
sub
out
ror
dec
fild
pop
retf
cs
push
push
xchg
cvtps2pd
scas
nop
gs
pop
sahf
ror
jl
cli
fbstp
sub
scas
std
jno
and
jns
push
mov
cdq
js
inc
sub
mov
push
iret
cmp
sub
xor
pushf
int3
dec
(bad)
mov
cmps
cld
sub
leave
out
jns
(bad)
push
repnz
data16
pop
adc
test
pop
xchg
sub
out
neg
data16
(bad)
cld
or
out
push
mov
pop
aas
in
mov
(bad)
dec
jno
jmp
(bad)
mov
jns
gs
jg
xchg
into
sub
int3
outs
push
push
mov
lods
xchg
mov
leave
jbe
cmp
ret
rcl
and
dec
mov
or
sbb
cmps
icebp
pusha
mov
test
mov
cdq
ds
push
dec
add
jbe
dec
cmps
cdq
sahf
adc
js
mov
mov
mov
push
leave
inc
cmp
outs
mov
ror
jno
repnz
imul
cs
ss
jmp
inc
nop
cmc
out
mov
sbb
sbb
movs
xor
xchg
out
les
shl
rcl
mov
(bad)
adc
lods
xchg
mov
(bad)
jbe
adc
xchg
push
xchg
daa
jbe
call
mov
mov
sbb
cmp
xchg
repz
cmp
xor
push
sub
mov
xor
repnz
push
movs
adc
adc
dec
push
push
out
mov
hlt
data16
test
mov
push
mov
pusha
hlt
addr16
push
not
cmp
aaa
xchg
inc
and
push
shl
adc
loope
push
mov
mul
cmps
xor
sub
xchg
cwde
jb
in
xchg
adc
test
xchg
and
push
hlt
fwait
rol
mov
(bad)
jb
jnp
call
stc
xor
je
pop
aaa
shl
push
pusha
mov
xor
xchg
test
icebp
adc
jb
and
in
jne
jno
push
adc
xchg
mov
and
out
mov
test
jb
loop
and
les
add
add
jo
aam
inc
hlt
sbb
movlpd
movs
aad
adc
push
add
je
das
mov
adc
js
fidivr
sbb
fisttp
data16
das
mov
(bad)
call
ds
or
sub
jne
icebp
add
int
loopne
movs
jbe
cmp
adc
jae
(bad)
cmp
jae
push
retf
ret
scas
dec
or
jl
cld
sbb
or
jg
int
fimul
dec
ins
pop
jnp
sti
pop
scas
or
outs
pushf
fcmove
pop
push
jp
adc
mov
pop
xchg
imul
adc
jmp
pusha
sbb
popf
mov
jno
(bad)
push
adc
mov
pop
mov
sbb
enter
stc
pop
out
jmp
iret
mov
lods
call
mov
sar
daa
mov
retf
aam
repnz
int
mov
jo
pop
pop
shl
(bad)
push
es
leave
not
inc
pop
adc
fisubr
xchg
test
dec
lock
nop
sbb
iret
pop
sub
sub
push
mov
cmp
ins
mov
fwait
cmp
mov
sbb
mov
cmp
(bad)
lock
cwde
std
hlt
iret
mov
clc
adc
ins
or
cmp
jb
mov
and
jb
sahf
mov
call
jle
inc
push
mov
mov
add
enter
sub
mov
js
jae
pop
mov
js
adc
push
ret
in
inc
mov
xor
xchg
xor
mov
sti
lods
jg
out
fstp
add
add
mov
jge
shl
in
fsubr
icebp
mov
(bad)
aad
xchg
pop
cwde
cdq
dec
mov
push
dec
xchg
movs
push
cmp
fistp
sbb
dec
push
add
sbb
jp
add
or
mov
ds
jl
repz
add
in
mov
aam
xor
cmp
cmc
fwait
ja
add
push
push
sbb
mov
and
xchg
dec
cmps
sub
sar
dec
mov
mov
mov
inc
imul
ja
push
jge
jge
std
idiv
aad
hlt
call
jae
push
jp
jnp
cmc
std
neg
lock
icebp
sbb
jae
jl
jg
stc
repnz
sar
push
push
jbe
ja
jo
jno
repz
(bad)
std
hlt
call
jns
jns
jp
jp
sti
push
fcomip
std
neg
jb
dec
push
jg
jg
clc
repnz
sar
lock
push
jne
dec
push
jnp
jbe
lock
icebp
(bad)
stc
repnz
jae
jae
jl
cld
idiv
xlat
std
idiv
push
jge
jg
js
jns
idiv
icebp
fptan
stc
repnz
jae
jl
jge
(bad)
cmc
(bad)
aam
repz
adc
jns
jns
jp
sti
lock
fcomip
(bad)
cmc
push
jne
jbe
ja
ja
lock
lock
cli
icebp
sbb
jae
jae
jl
cld
idiv
(bad)
std
idiv
adc
jns
jns
cli
icebp
cli
sar
icebp
cli
adc
jnp
jnp
jnp
hlt
(bad)
cmc
fdivp
(bad)
neg
ja
jo
icebp
cli
repnz
(bad)
cld
push
dec
jae
push
js
js
clc
repz
sar
repnz
adc
jp
jp
jnp
sti
lock
fcomip
push
pop
dec
xor
retf
das
ret
cwde
into
imul
adc
and
cmp
lock
das
movs
cmp
and
add
xchg
jae
inc
sbb
or
pop
ds
sar
pop
(bad)
push
pop
call
push
das
jecxz
mov
nop
daa
fprem
clc
mov
adc
into
outs
inc
adc
pushf
pusha
jb
das
js
cmp
lock
sub
xor
loopne
xchg
mov
cmp
push
outs
mov
push
lock
scas
or
stos
rcl
popf
les
cwde
xchg
popf
xchg
mov
adc
inc
adc
jge
add
pop
cmp
in
inc
(bad)
aas
aas
popa
cld
sub
addr16
xchg
mov
mov
push
cmp
adc
jns
add
pop
rol
dec
outs
mov
pop
je
mov
xor
jmp
pop
outs
lsl
inc
out
fiadd
add
fs
mov
call
mov
add
stc
jle
jo
iret
mov
jne
pusha
and
cld
jle
pminsw
mov
rcl
or
rol
jg
mov
repz
add
loope
lods
lods
rcr
dec
ret
add
outs
cmp
mov
mov
xor
movntq
add
repnz
and
push
dec
mov
shl
fidiv
sbb
jg
aas
add
pop
push
ret
add
mov
ins
rcr
shl
setbe
out
jg
or
sbb
sar
loope
adc
cwde
jp
xor
fwait
(bad)
mov
add
repz
das
push
loopne
shrd
jge
aas
in
sbb
jle
xchg
ins
add
xlat
(bad)
mov
push
shr
add
cmp
pusha
inc
push
inc
cdq
out
mov
retf
xor
les
in
bound
inc
or
mov
adc
mov
add
adc
dec
stos
inc
push
pop
dec
lock
scas
xor
pop
and
dec
fwait
add
push
inc
aas
sahf
call
popa
cmp
cmp
stos
xchg
pop
(bad)
lahf
js
lahf
int3
loopne
push
sbb
push
lods
sbb
sub
dec
int
xchg
dec
daa
scas
ja
adc
out
adc
pop
stos
movs
mov
mov
xor
sub
mov
mov
mov
ret
std
popf
loop
int
or
cmp
outs
mov
cmp
jle
or
movs
repnz
sar
or
ror
adc
dec
(bad)
xchg
mul
mov
fcom
cmc
das
icebp
inc
ds
dec
es
imul
pop
or
inc
xchg
jmp
in
iret
outs
mov
scas
jnp
mov
xor
mov
and
aaa
fsubr
and
lock
xor
shl
imul
push
add
push
punpcklwd
pushf
mov
jnp
fist
sub
out
adc
push
jae
aaa
pop
xor
inc
shr
or
out
in
repnz
mov
into
and
cld
out
outs
push
pop
mov
mov
mov
push
repz
dec
add
(bad)
jle
mov
test
call
mov
or
push
fwait
daa
out
push
sbb
outs
inc
push
(bad)
enter
cmp
test
out
cmps
int
pop
and
jle
test
cmp
clc
out
dec
out
lea
add
mov
cmp
out
sbb
mov
dec
mov
sub
stos
cmps
fucom
ror
jge
jp
mov
pop
scas
test
or
test
push
rol
arpl
xchg
push
aas
test
mov
nop
mov
dec
mov
stos
es
adc
adc
arpl
ds
jns
test
pop
movs
shl
dec
inc
jle
outs
inc
lods
sbb
push
push
out
push
push
sub
mov
mov
fs
mov
jno
xchg
retf
push
out
jecxz
inc
stos
sbb
mov
out
hlt
or
jg
mov
verw
and
xor
jmp
push
jmp
push
pop
mov
mov
mov
mov
mov
push
mov
mov
push
call
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
push
mov
push
mov
test
mov
mov
mov
mov
je
test
je
test
je
test
je
push
mov
mov
movs
movs
movs
movs
mov
mov
movs
movs
movs
xor
cmp
movs
mov
mov
mov
je
lea
push
push
mov
mov
push
call
mov
xor
cmp
jl
mov
lea
push
push
push
mov
mov
push
call
mov
cmp
jl
mov
push
lea
push
mov
mov
push
call
mov
cmp
jl
mov
mov
lea
push
push
call
mov
cmp
jl
push
push
push
push
call
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
call
mov
lea
push
push
push
mov
call
test
jl
mov
cmp
je
push
mov
push
push
call
mov
jmp
mov
lea
push
push
push
mov
mov
call
mov
cmp
jl
mov
mov
lea
push
push
call
mov
cmp
jl
mov
mov
lea
push
lea
push
push
call
mov
cmp
jl
mov
lea
push
mov
mov
push
call
mov
cmp
je
xor
cmp
jbe
mov
mov
lea
push
push
push
call
mov
cmp
jl
cmp
je
mov
movzx
inc
cmp
jl
jmp
mov
mov
lea
push
push
push
call
mov
cmp
jl
mov
lea
push
push
mov
mov
push
call
mov
cmp
jl
mov
mov
lea
push
push
call
cmp
je
push
push
push
push
call
mov
mov
add
push
push
call
mov
cmp
je
mov
push
call
mov
push
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
pop
jmp
mov
mov
pop
xor
pop
call
leave
ret
push
push
push
push
call
ret
mov
push
push
push
call
ret
push
mov
push
and
push
mov
push
push
call
push
mov
push
mov
push
push
lea
push
push
mov
call
test
je
mov
jmp
mov
push
mov
call
mov
lea
push
push
mov
push
call
test
jge
mov
jmp
test
je
mov
mov
imul
mov
call
mov
mov
push
lea
call
mov
mov
mov
call
cmp
je
test
je
xor
cmp
mov
setne
dec
mov
mov
test
je
mov
push
call
mov
pop
pop
pop
leave
ret
push
mov
mov
test
mov
je
push
lea
push
push
call
mov
test
je
mov
push
call
mov
test
je
mov
push
call
pop
ret
push
mov
call
mov
push
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
test
jl
and
and
lea
push
movzx
push
push
movzx
push
lea
push
call
mov
test
mov
jge
or
test
je
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
mov
test
jge
mov
or
test
je
mov
push
call
mov
jmp
lea
push
push
push
push
call
or
mov
mov
test
je
mov
push
call
mov
call
ret
mov
test
jne
mov
jmp
push
push
push
push
push
call
add
ret
push
mov
call
mov
mov
call
mov
xor
lea
mov
mov
mov
call
mov
mov
lea
call
lea
mov
call
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
call
ret
push
mov
call
mov
mov
mov
mov
mov
test
mov
je
mov
push
call
lea
call
lea
call
lea
call
mov
sub
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
sub
call
or
mov
call
call
ret
lea
push
push
push
add
call
ret
push
mov
mov
test
je
mov
push
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
mov
mov
xor
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
call
ret
push
mov
sub
mov
xor
mov
mov
push
push
push
mov
mov
mov
mov
mov
mov
call
mov
xor
cmp
je
cmp
jne
mov
cmp
jne
push
push
call
test
pop
pop
je
inc
mov
imul
add
cmp
jne
mov
jmp
imul
mov
mov
mov
lea
push
push
lea
push
mov
push
call
test
jge
xor
jmp
push
lea
push
mov
push
push
push
call
mov
pop
pop
xor
pop
call
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
push
push
push
mov
lea
mov
call
test
je
push
xor
cmp
push
jle
push
lea
call
mov
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
call
push
mov
call
inc
cmp
jl
lea
call
xor
cmp
jle
lea
push
mov
call
mov
add
mov
push
mov
mov
call
push
mov
mov
call
mov
mov
mov
add
push
add
push
push
lea
call
push
mov
call
mov
test
mov
je
mov
call
push
call
pop
inc
cmp
jl
lea
call
pop
pop
pop
leave
ret
push
mov
call
mov
call
mov
call
push
lea
call
xor
push
mov
mov
call
pop
mov
push
push
push
mov
call
cmp
je
cmp
je
push
lea
push
push
push
call
mov
add
push
push
push
push
push
push
call
jmp
mov
push
call
pop
mov
add
call
mov
call
ret
push
mov
call
mov
call
mov
call
push
lea
call
xor
push
mov
mov
call
mov
mov
push
push
call
test
je
push
lea
push
push
push
call
mov
add
push
push
push
push
push
push
call
jmp
mov
push
call
pop
mov
add
call
mov
call
ret
sub
push
push
push
push
xor
push
mov
call
pop
mov
call
lea
push
push
call
cmp
jne
push
mov
call
push
mov
call
mov
cmp
je
mov
call
cmp
je
mov
lea
push
push
push
call
test
jl
push
lea
call
mov
lea
cmp
jne
push
push
push
push
push
lea
push
push
push
lea
push
mov
call
mov
call
mov
push
push
push
call
test
jge
mov
mov
call
mov
mov
call
jmp
mov
cmp
je
push
mov
call
jmp
mov
cmp
je
push
mov
call
jmp
mov
cmp
je
push
push
push
push
push
push
mov
call
pop
pop
xor
pop
inc
pop
add
ret
push
mov
call
mov
and
and
lea
lea
mov
push
mov
call
cmp
je
lea
push
push
push
mov
call
mov
call
mov
or
test
je
mov
push
call
call
ret
mov
push
mov
cmp
jne
call
lea
cmp
je
push
push
call
lea
call
pop
ret
push
mov
call
mov
call
lea
xor
cmp
je
push
push
call
lea
mov
cmp
je
mov
mov
lea
push
push
push
mov
call
mov
cmp
je
mov
push
push
call
mov
cmp
je
mov
mov
push
call
cmp
je
push
push
call
mov
or
cmp
je
mov
push
call
mov
call
call
ret
mov
ret
push
mov
call
mov
mov
cmp
jne
and
mov
lea
push
push
call
mov
test
je
mov
lea
push
push
push
call
cmp
je
and
mov
mov
and
lea
push
push
call
push
lea
call
push
mov
mov
call
mov
add
call
push
or
call
push
lea
call
push
mov
call
mov
mov
push
call
call
ret
push
mov
call
mov
mov
push
lea
call
push
mov
push
and
mov
call
mov
add
call
call
ret
push
mov
call
mov
mov
push
lea
call
push
mov
push
and
mov
call
mov
add
call
call
ret
push
mov
call
mov
mov
push
lea
call
push
mov
push
and
mov
call
mov
add
call
call
ret
push
mov
call
mov
xor
xor
cmp
setne
cmp
jne
call
mov
mov
mov
mov
mov
lea
push
call
lea
push
call
mov
mov
mov
mov
cmp
mov
je
mov
lea
mov
lea
push
call
mov
mov
cmp
je
cmp
jne
mov
push
mov
call
mov
lea
push
call
lea
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
push
lea
call
lea
mov
mov
call
mov
mov
mov
lea
push
push
call
mov
mov
cmp
je
lea
push
sub
mov
lea
movs
movs
mov
movs
movs
sub
mov
lea
movs
movs
movs
push
movs
call
mov
mov
cmp
jne
mov
jmp
mov
lea
push
push
push
call
cmp
je
mov
cmp
je
mov
cmp
jl
mov
cmp
mov
mov
je
mov
push
call
mov
add
call
mov
cmp
mov
je
mov
push
call
mov
lea
push
call
lea
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
call
ret
push
mov
call
mov
mov
lea
mov
xor
mov
call
cmp
mov
jne
xor
jmp
mov
mov
mov
imul
lea
mov
cmp
je
cmp
jne
mov
push
lea
push
push
mov
mov
call
mov
xor
cmp
je
push
mov
call
test
jne
push
mov
mov
call
pop
mov
mov
cmp
mov
je
mov
neg
lea
sbb
push
and
push
call
mov
mov
jmp
mov
call
mov
ret
mov
mov
mov
test
jne
mov
or
push
call
mov
jmp
lea
push
push
push
push
call
test
mov
jl
lea
push
lea
call
jmp
push
mov
call
jmp
push
pop
cmp
jne
push
mov
call
test
jne
and
push
lea
push
push
mov
mov
call
mov
test
je
and
mov
lea
push
push
push
mov
call
mov
test
je
and
mov
lea
push
push
mov
call
cmp
je
and
push
mov
call
pop
mov
mov
test
mov
je
push
mov
push
neg
lea
sbb
and
push
push
call
jmp
xor
mov
mov
jmp
mov
call
mov
ret
mov
mov
cmp
jne
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
jmp
lea
push
lea
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
or
test
je
mov
push
call
inc
xor
jmp
mov
call
ret
mov
push
mov
cmp
jne
push
call
push
mov
call
pop
ret
mov
mov
mov
mov
jmp
push
mov
test
jl
call
cmp
jl
call
mov
call
mov
pop
ret
push
push
call
mov
xor
cmp
jne
mov
jmp
cmp
push
mov
jne
push
push
call
cmp
pop
pop
mov
jne
mov
jmp
push
mov
call
push
push
push
call
add
test
je
push
push
push
push
push
call
add
mov
pop
pop
pop
ret
push
push
call
xor
mov
xor
cmp
setne
cmp
jne
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
xor
mov
cmp
setne
cmp
je
xor
cmp
setne
cmp
je
xor
mov
cmp
setne
cmp
je
cmp
jne
call
mov
call
mov
call
ret
mov
push
call
pop
mov
test
je
push
call
pop
mov
mov
mov
mov
push
push
push
push
call
add
mov
mov
call
cmp
je
xor
jmp
xor
mov
push
call
pop
ret
push
mov
push
and
push
push
lea
push
push
push
call
mov
add
leave
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
push
call
pop
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
je
call
mov
push
push
push
push
push
call
add
or
cmp
jne
dec
js
mov
movzx
inc
mov
jmp
push
call
pop
mov
mov
call
mov
call
ret
mov
push
call
pop
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
xor
cmp
setne
cmp
je
mov
push
call
pop
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
je
call
mov
push
push
push
push
push
call
add
or
cmp
jne
push
call
mov
lea
push
push
push
push
call
mov
push
push
call
add
mov
call
mov
call
ret
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
push
mov
mov
test
je
mov
test
je
mov
mov
mov
add
cmp
je
test
je
mov
add
cmp
je
test
jne
pop
pop
pop
xor
ret
mov
add
cmp
jne
lea
mov
test
je
mov
add
cmp
jne
mov
test
je
mov
add
cmp
je
jmp
xor
pop
pop
pop
mov
jmp
lea
pop
pop
pop
ret
mov
pop
pop
pop
ret
int3
int3
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
or
je
mov
mov
dec
jne
mov
mov
jmp
mov
mov
dec
je
push
push
lea
lea
cmp
jbe
mov
rep
pop
pop
sub
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
push
push
push
push
push
call
pop
pop
cmp
je
lea
push
call
or
je
mov
cmp
jne
mov
or
je
push
call
jmp
mov
push
push
call
add
push
mov
call
mov
mov
mov
mov
mov
cmp
adc
mov
add
jmp
mov
pop
ret
push
push
jne
jae
xchg
test
repz
cmp
inc
push
retf
ret
lss
push
add
cmp
push
push
and
push
fwait
into
push
cmp
out
or
sbb
loop
jecxz
cmp
add
imul
dec
xor
mov
nop
adc
(bad)
retf
push
xor
pop
add
mov
in
jg
dec
sub
inc
inc
dec
hlt
inc
vprotd
mov
jae
nop
mov
xor
xchg
js
lahf
sub
inc
xor
jl
pop
jle
pop
cmps
out
push
push
cmp
(bad)
out
cmps
mov
daa
mov
not
fild
jge
aas
jg
jnp
add
xor
inc
movs
pop
jle
loop
pop
xchg
pop
mov
mov
dec
xor
imul
inc
mov
cs
xor
add
sub
data16
ret
sub
shr
push
fnstenv
out
mov
mov
rcr
into
adc
add
mov
stc
es
jge
push
mov
pop
cmp
and
push
adc
stos
data16
push
pop
jecxz
xor
aad
cmp
or
js
int3
es
leave
test
sahf
mov
es
sbb
sub
mov
and
stc
dec
mov
mov
fisubr
and
and
sub
sahf
mov
mov
xchg
mov
sahf
cmp
aas
cli
loop
adc
mov
loop
dec
loop
arpl
mov
dec
nop
adc
pusha
and
ficom
mov
cmps
scas
inc
pop
(bad)
in
dec
mov
cmps
and
cmps
js
xchg
fmul
ficom
sti
add
xchg
or
add
stos
mov
imul
sti
fidivr
jo
dec
out
repz
pusha
loop
fisub
call
fmul
push
mov
stos
fild
mov
mov
out
mov
mov
ja
pusha
retf
shr
pop
jo
iret
(bad)
adc
cld
pop
fwait
pop
push
sbb
call
es
mov
(bad)
in
fisttp
pop
data16
(bad)
push
dec
cmps
fucom
inc
pop
imul
pop
ja
xor
or
pop
mov
cmp
xor
sub
fbstp
ja
add
sbb
aam
adc
add
(bad)
not
dec
jo
and
ret
sahf
jbe
gs
(bad)
loope
stc
xor
loop
adc
cmp
inc
mov
ss
xchg
mov
aad
jg
jp
push
push
inc
loop
shr
add
inc
push
test
outs
scas
cmp
pop
sbb
scas
mov
add
mov
cmp
mov
add
mov
fstp
inc
mov
inc
xchg
imul
push
popf
mov
inc
inc
cmp
dec
clc
jle
pushf
jp
loope
xchg
jno
jp
mov
adc
fimul
jmp
sub
xchg
xchg
cs
jecxz
int3
retf
fild
ret
xor
jae
ds
es
inc
jns
enter
push
out
push
dec
xor
xlat
dec
out
push
jo
imul
retf
jl
stc
jnp
js
mov
outs
cli
dec
inc
lods
xchg
cmp
pushf
dec
push
adc
mov
sbb
gs
push
stos
xor
(bad)
and
mov
push
jge
xchg
add
jno
sub
cmp
push
inc
(bad)
cdq
je
scas
mov
push
lahf
inc
pop
sar
add
or
enter
sbb
mov
je
cmp
rcr
and
dec
or
pop
adc
daa
mov
lods
cmp
ss
mov
dec
fwait
nop
mov
shr
push
xlat
inc
rol
mov
shl
mov
inc
sub
xor
inc
mov
addr16
inc
fist
adc
jg
ins
push
mov
(bad)
xor
push
jns
jle
lahf
test
cs
add
cmp
clc
inc
int
mov
aas
xchg
shl
dec
mov
mov
cld
clc
mov
repz
push
sbb
lods
ret
arpl
jg
add
sahf
or
xchg
movs
jb
test
sub
jmp
jp
mov
movs
nop
adc
jle
(bad)
xchg
mov
int
jmp
stos
cli
outs
sub
ret
jb
shr
(bad)
add
fidiv
push
nop
mov
push
and
dec
push
call
xchg
test
ficom
sub
inc
jmp
(bad)
xor
inc
mov
cmp
(bad)
cld
into
sti
in
icebp
jb
push
push
inc
push
repnz
retf
ror
xchg
imul
and
sub
aas
xchg
in
push
and
fld
stos
dec
enter
push
xor
mov
push
or
cdq
adc
bswap
cmp
mov
out
mov
fcomp
mov
loop
jp
(bad)
mov
bnd
pop
sti
jb
xor
iret
dec
aas
in
dec
out
sbb
push
ds
mov
pop
lds
outs
int
sbb
mov
add
stos
(bad)
fadd
ficom
aas
mov
jp
and
out
fucomi
or
out
mov
cmp
cmp
xor
jmp
mov
and
and
movs
sahf
outs
sbb
jns
aaa
out
dec
xchg
retf
or
cmp
mov
push
sub
cs
pop
pop
pop
bound
das
loop
imul
leave
shl
xor
in
mov
mov
fcom
mov
xchg
ja
add
xor
rcr
mov
mov
pop
int
dec
jl
mov
leave
cmps
pop
adc
hlt
sti
push
cs
pop
push
sbb
ds
push
(bad)
jbe
and
push
push
fild
or
or
cld
inc
ins
dec
pushf
mov
adc
xchg
mov
repnz
dec
outs
fild
jge
add
mov
inc
mov
imul
sbb
mov
push
enter
icebp
xor
push
and
retf
into
push
inc
or
or
fild
dec
js
dec
ins
sub
adc
jae
xor
shl
pop
add
xlat
xor
jo
ret
push
nop
test
inc
rcr
sbb
cmp
sbb
outs
push
xor
and
push
arpl
cdq
(bad)
push
out
data16
(bad)
jo
pop
mov
lahf
sti
(bad)
mov
mov
dec
stc
mov
loope
add
jl
jg
cld
mov
pop
mov
cmps
mov
cmps
pop
or
js
or
pop
push
and
outs
fimul
clc
xchg
push
nop
loopne
call
jne
dec
xchg
mov
ret
leave
xor
xchg
and
mov
push
leave
and
popa
ja
test
sub
sbb
out
and
dec
sbb
or
sbb
mov
ret
pushf
cmp
leave
cmc
jge
(bad)
jg
leave
out
cmp
and
sbb
ror
inc
(bad)
push
cvtps2pd
mov
sub
repz
in
sbb
inc
push
or
mov
in
sub
add
and
shl
(bad)
add
dec
mov
cli
jbe
pushf
jo
xchg
sbb
mov
sbb
sti
or
push
rol
lods
add
mov
and
xlat
sub
(bad)
in
mov
mov
sub
jb
mov
lahf
xchg
lea
stos
and
scas
add
cmp
ret
jmp
loope
shl
fiadd
pop
sti
sbb
outs
aad
push
jbe
inc
mov
out
test
pusha
inc
or
mov
jno
nop
test
xor
stos
adc
and
xor
xlat
daa
mov
ins
lahf
xor
cmp
push
call
cmp
out
pushf
and
in
sar
loope
es
into
push
cmp
ret
push
mov
fbstp
pushf
jno
mov
rcr
push
sahf
ds
add
js
sbb
aad
fnstsw
in
cmp
xor
dec
xor
aas
rcr
xadd
ds
scas
shl
pop
repnz
fdiv
inc
mov
into
stos
or
mov
sub
ja
dec
xchg
jne
imul
rol
adc
and
cmps
add
dec
xchg
jp
pop
ss
push
dec
cmc
daa
jp
out
inc
ret
ss
in
or
inc
mov
retf
jnp
js
popa
xchg
jnp
push
push
icebp
sub
lahf
mov
ss
rol
stc
bswap
push
dec
test
out
mov
loopne
pop
xor
(bad)
fwait
scas
sbb
mov
mov
pushf
push
or
push
test
mov
dec
and
sbb
mov
dec
cli
xchg
(bad)
adc
loopne
ret
daa
mov
std
inc
adc
push
daa
push
and
xor
adc
sub
xlat
pop
push
and
aaa
mov
fbld
cs
out
sbb
inc
(bad)
fld
cmps
inc
inc
sbb
lahf
nop
mov
fisubr
jp
in
sub
std
icebp
sahf
xchg
and
das
xchg
in
xor
out
daa
mov
fsubr
add
mov
cmp
push
mov
imul
into
inc
jge
adc
add
mov
add
xor
cdq
idiv
cmp
jle
xchg
call
cmp
daa
xor
and
fild
mov
ror
push
xor
add
cli
mov
dec
iret
inc
enter
sub
ret
mov
mov
pusha
push
in
shl
or
and
mov
(bad)
cmp
mov
mov
cwde
stos
cli
jecxz
outs
cld
les
clc
dec
out
test
sub
dec
mov
cdq
aad
mov
inc
in
jge
into
sbb
arpl
jl
xor
and
or
or
mov
retf
jecxz
cmp
stos
int3
lock
adc
add
test
push
and
ins
mov
mov
push
jmp
mov
inc
and
test
fimul
push
out
mov
mov
bound
cmp
jl
ret
pop
or
dec
nop
sti
jnp
popa
aam
repnz
lods
es
mov
int3
mov
outs
cmc
pop
test
leave
mov
mov
fidiv
or
pop
xchg
(bad)
(bad)
mov
xor
push
push
push
dec
mov
cmp
mov
or
pop
xchg
fwait
xor
jmp
retf
xchg
in
div
out
ins
add
fbstp
aam
fnstsw
dec
jg
xchg
jmp
sbb
std
xor
mov
mov
inc
cdq
sbb
ror
mov
adc
shl
mov
scas
fistp
arpl
popf
dec
(bad)
lahf
jnp
jne
xchg
jno
lods
in
adc
add
xor
adc
mov
inc
adc
pushf
les
mov
add
sub
pop
repnz
pop
jo
push
sbb
scas
popa
cmp
mov
inc
mov
push
sub
arpl
outs
arpl
repnz
lahf
movs
inc
push
dec
dec
push
cmp
bound
cmp
push
or
push
and
(bad)
mov
out
scas
dec
jns
aam
lods
sar
gs
dec
pop
adc
retf
popa
cwde
ss
push
xor
jmp
inc
adc
into
push
adc
mov
xchg
mov
xchg
movs
cmp
out
jnp
jne
push
les
xor
ins
icebp
aam
mov
loope
daa
jmp
rcr
mov
xchg
push
movs
xor
ds
xor
push
stos
loope
(bad)
arpl
inc
xor
icebp
pusha
repnz
xchg
xor
outs
inc
outs
int3
add
sbb
ror
neg
imul
scas
cmc
dec
jne
sbb
outs
mov
jb
sbb
ins
and
fxam
push
shr
mov
or
mov
es
stos
xchg
inc
stos
add
xor
dec
push
cwde
push
(bad)
xchg
retw
gs
mov
jg
cmp
add
jp
fs
mov
push
iret
sahf
cmp
call
ret
ins
mov
scas
push
mov
leave
pop
mov
jmp
popa
pop
jmp
cmp
inc
adc
and
jmp
dec
pop
movzx
xchg
and
xchg
je
(bad)
cli
dec
sahf
data16
pop
retf
(bad)
pusha
sbb
cmpxchg
enter
inc
pushf
lods
adc
fidiv
lahf
rcr
pop
jg
sahf
fild
mov
lahf
pop
mov
adc
jecxz
fwait
(bad)
imul
mov
adc
sub
jge
pop
mov
int
xchg
xor
shl
xchg
mov
pushf
out
adc
bound
out
in
sti
mov
jbe
push
pop
imul
adc
inc
stos
popf
icebp
mov
and
pop
xchg
xor
cmp
loop
daa
dec
dec
lock
xor
push
pop
adc
sub
sub
fld
test
into
mov
rcl
mov
ins
sbb
and
popf
pop
shl
pop
xchg
imul
gs
(bad)
fmul
jae
and
jae
jb
xchg
jle
dec
xor
aam
mov
pop
cmp
shl
arpl
jecxz
xchg
mov
test
mov
mov
lds
xchg
add
cmp
repz
dec
or
add
fnstsw
cmp
jne
(bad)
push
lahf
push
cmp
fistp
jecxz
mov
add
loop
jae
add
add
shl
(bad)
stos
loope
cs
fstp
xchg
xchg
(bad)
pop
nop
pop
sub
inc
jb
ja
push
jmp
or
dec
mov
pushf
test
mov
push
sahf
jno
imul
xor
and
cmc
fimul
sbb
xlat
shl
(bad)
xchg
xchg
cmps
out
lods
loop
and
in
fadd
(bad)
mov
repz
push
xchg
popf
mov
cmc
xor
adc
xor
jmp
ret
jp
(bad)
mov
dec
jmp
push
popf
ret
lods
inc
mov
push
push
outs
adc
cmps
xor
mov
cmc
scas
xor
and
cmps
mov
sbb
sub
retf
ss
push
outs
dec
aam
add
add
xor
test
leave
or
adc
into
add
out
mov
sub
inc
inc
mov
pop
rol
pop
pop
xlat
sbb
mov
ret
cmc
ret
push
mov
mov
mov
ret
cmp
dec
jnp
and
inc
and
call
sbb
out
das
and
cmc
inc
xor
stos
pop
push
shl
out
retf
ss
je
movs
jle
ret
enter
mov
mov
and
pop
pop
xchg
inc
cmp
fimul
and
xchg
cmp
in
sahf
mov
or
loope
ins
scas
shl
cmps
retf
mov
das
lahf
dec
or
mov
xchg
mov
scas
mov
repz
xor
xchg
je
and
daa
sahf
push
mov
lock
push
mov
cdq
push
pop
sar
call
add
sub
jl
add
aaa
push
pop
sbb
ret
lods
jmp
sahf
mov
iret
jb
push
dec
inc
in
or
inc
loope
test
ret
mov
movs
cmc
mov
(bad)
cs
cmps
mov
dec
xor
jl
loope
cs
sub
sbb
aad
dec
mov
mov
stos
enter
enter
push
sahf
mov
in
jge
cs
push
mov
push
pop
jmp
stos
(bad)
jae
jne
ret
mov
and
cmp
ror
lods
arpl
sbb
and
jl
add
jge
jmp
inc
mov
jmp
dec
loopne
sbb
in
pop
and
push
fs
inc
fmul
mov
add
ds
fisttp
mov
ins
stos
inc
push
xor
xor
add
packuswb
mov
jnp
mov
jle
cmp
fistp
jnp
push
popf
mov
inc
nop
xor
in
add
mov
std
cs
nop
dec
or
loop
sbb
dec
leave
dec
fsubr
mov
xchg
add
jle
jg
cmp
ss
jb
ret
sar
xchg
jbe
cmp
push
ss
iret
jnp
rol
scas
fwait
xchg
mov
hlt
lods
mov
adc
arpl
lahf
fstp
call
gs
sub
out
(bad)
mov
icebp
outs
dec
add
(bad)
jbe
cmps
and
dec
es
jbe
xchg
mov
nop
stos
lea
scas
mov
push
jge
ret
add
mov
out
mov
test
mov
sbb
test
loop
pop
pop
sbb
mov
mov
dec
sbb
mov
popf
mov
pop
mov
jnp
pop
bound
and
mov
(bad)
out
dec
loope
push
nop
mov
xlat
pop
jge
add
cmc
dec
cdq
dec
iret
(bad)
push
mov
les
paddsb
pop
scas
es
inc
add
cmp
je
call
(bad)
xor
mov
xor
add
aad
(bad)
sub
sbb
sahf
pop
add
inc
in
jae
iret
mov
cmp
or
jb
sbb
lea
mov
xchg
add
mov
enter
lds
stos
jp
sbb
imul
ret
scas
rep
mov
or
jmp
repnz
xor
push
es
cwde
stc
xchg
mov
aam
mov
or
inc
xchg
mov
xchg
sahf
xor
cmp
call
sti
loop
pop
fistp
sub
xor
retf
mov
movs
and
add
arpl
cmc
push
in
mov
sub
dec
or
and
xor
aas
add
ret
push
std
ds
jo
mov
mov
xchg
pop
add
lods
add
out
arpl
or
lock
call
out
test
and
and
arpl
aad
push
stos
stos
fwait
mov
imul
arpl
enter
mov
and
add
(bad)
cmp
and
dec
dec
push
movs
jns
push
test
jae
sbb
cmp
cdq
xor
cld
sbb
inc
out
pop
in
ret
daa
inc
ja
push
cwde
repz
into
jb
fimul
pop
ins
out
xchg
out
outs
stc
push
js
jecxz
ret
adc
inc
sbb
sahf
in
(bad)
mov
mov
mov
or
test
adc
faddp
xchg
repnz
mov
push
mov
xchg
lahf
push
inc
cs
lods
xor
imul
imul
add
inc
es
xchg
dec
rol
and
(bad)
mov
scas
and
pop
les
(bad)
xchg
rcr
push
push
ret
clc
fwait
mov
repnz
jae
inc
inc
adc
xchg
daa
add
movlps
cmp
loop
add
shl
pop
and
xchg
dec
stos
xor
mov
xchg
xlat
jbe
es
adc
(bad)
pop
call
xchg
mov
addr16
mov
push
jp
push
(bad)
ja
jno
pushf
in
imul
xor
sbb
shl
into
fwait
sub
lods
adc
out
sub
mov
sub
nop
adc
xor
push
inc
push
into
cmp
sahf
push
bound
out
or
mov
xor
adc
mov
mov
pop
mov
pop
ror
xor
xor
call
nop
test
mov
and
retf
fiadd
hlt
ds
ds
push
or
(bad)
and
or
out
lea
je
outs
(bad)
xor
test
pop
test
pop
daa
sbb
lods
jne
loope
pop
loope
jp
test
fild
add
adc
xlat
ret
mov
outs
aad
js
loope
fidivr
mov
inc
jecxz
mov
(bad)
mov
retf
iret
add
arpl
push
pop
cmc
jbe
fbld
xchg
push
int
xchg
lahf
jl
cmps
xchg
push
imul
fdiv
push
cld
loopne
mov
fcom
sub
inc
inc
push
adc
xor
jbe
add
add
xor
push
mov
sbb
lock
jb
add
das
in
(bad)
fbstp
pop
inc
int3
jmp
cmps
xor
mov
int3
mov
and
stc
movs
inc
scas
inc
ins
cmc
and
mov
hlt
les
and
iret
xor
shl
xor
and
and
out
add
call
push
xor
hlt
(bad)
pop
in
jb
mov
mov
sub
add
push
cmp
rcl
(bad)
mov
outs
xor
mov
mov
aas
sbb
mov
out
repnz
movs
outs
sbb
jp
out
shl
(bad)
cld
dec
repz
into
pop
outs
xchg
or
out
lods
push
mov
int3
sbb
cs
imul
outs
mov
call
lahf
and
lods
(bad)
fmul
popf
into
or
rcl
xor
ds
repnz
fadd
jg
(bad)
sub
fcmovnu
in
push
dec
cmps
int3
mov
scas
mov
jae
xchg
cli
cmps
xchg
mov
data16
addr16
retf
rcr
inc
sub
jae
xlat
sahf
xchg
add
sar
ror
xchg
loope
inc
mov
clc
dec
ss
add
xor
inc
fnstenv
mov
xor
push
ss
and
rol
dec
mov
pop
mov
mov
mov
sahf
test
mov
mov
push
ds
jl
lahf
mov
ss
mov
and
in
adc
push
dec
jno
fisttp
xchg
aam
imul
or
into
lods
(bad)
out
ror
sub
das
xchg
les
cdq
push
out
cli
das
pop
(bad)
cmp
loop
push
and
cdq
xchg
cmps
je
xchg
sub
shr
mov
mov
(bad)
ficom
push
mov
jp
jbe
aaa
xor
cwde
fcomp
jo
jl
jecxz
jecxz
add
dec
fcom
outs
xor
jbe
adc
movs
test
adc
popa
retf
aas
out
or
pusha
jb
adc
das
(bad)
jmp
popf
jbe
loop
xor
push
or
inc
outs
pop
fcmove
adc
in
push
mov
jl
(bad)
(bad)
call
bound
es
add
shl
and
arpl
sbb
stos
test
and
xor
add
nop
cmp
ud0
or
inc
dec
pop
scas
fldenv
or
cli
cmps
ins
xchg
adc
sar
cmp
mov
xor
sbb
ss
add
dec
jnp
inc
dec
mov
and
enter
or
jne
cwde
xchg
clc
push
fdivr
bound
push
ins
ss
add
adc
mov
je
add
cmp
add
pusha
pop
lods
clc
fisubr
cmps
repz
stos
push
jecxz
fidiv
jno
popa
enter
mov
out
add
adc
mov
push
add
into
in
data16
idiv
mov
lahf
ss
jg
push
stos
jmp
jmp
mov
xor
fdivrp
ds
xchg
scas
js
(bad)
mov
(bad)
push
jg
loope
cld
sub
mov
shl
into
mov
or
mov
adc
sub
push
ret
cmp
ret
imul
mov
adc
outs
mov
jmp
shr
pop
cmps
movs
fdiv
loop
(bad)
inc
jb
jae
inc
xchg
sub
push
push
sub
loop
ror
ss
mov
pop
dec
(bad)
mov
arpl
dec
xchg
inc
js
shr
add
push
icebp
add
clc
cmp
mov
or
enter
xor
lods
call
mov
ret
mov
ret
adc
cwde
or
int3
pop
jae
ds
mov
sub
jb
shl
cdq
stos
clc
pop
arpl
bound
dec
clc
push
cmp
into
adc
dec
xor
xchg
lea
(bad)
pop
hlt
push
sbb
rcr
iret
sbb
ins
xchg
rcl
sbb
inc
xchg
xor
sbb
cmp
ins
and
outs
dec
cdq
lds
xor
mov
fnsave
dec
xor
cmp
out
mov
mov
outs
adc
mov
mov
fiadd
and
repnz
push
mov
mov
mov
mov
or
aas
shr
mov
into
add
loope
repz
or
sar
aas
mov
cmp
ins
jecxz
ja
pop
sahf
sar
mov
(bad)
ds
sub
je
mov
xchg
rcl
cli
mov
mov
inc
test
inc
mov
in
leave
inc
mov
les
movs
or
push
dec
outs
repz
dec
jge
dec
(bad)
int3
pop
fwait
das
imul
out
imul
mov
adc
es
das
add
aas
aad
pop
push
pop
in
pop
popa
in
inc
mov
popf
(bad)
cmp
pusha
cmp
lea
dec
or
mov
xchg
jge
mov
mov
push
fimul
mov
popf
xor
push
sub
stos
push
xor
add
mov
imul
aad
scas
mov
add
cmp
sbb
and
or
sbb
pop
repz
add
mov
jns
cmp
mov
dec
ins
loope
movs
pop
push
cld
scas
xchg
mov
and
pop
adc
idiv
push
push
push
ret
cmps
push
sub
push
aad
out
stc
and
push
sar
gs
xchg
shr
fcmove
(bad)
mov
xchg
xchg
xchg
data16
adc
mov
cdq
xchg
outs
adc
jae
push
pop
mov
test
ja
imul
inc
adc
arpl
push
shl
mov
xor
mov
sbb
fnsave
or
outs
outs
std
mov
inc
mov
in
or
adc
ret
aad
fwait
or
(bad)
shl
jg
cmp
mov
mov
xchg
or
fwait
mov
mov
hlt
xchg
mov
pop
jne
sbb
xchg
push
sub
push
daa
das
adc
sub
jbe
jg
and
lock
pop
out
ss
cmc
pushf
jg
mov
pop
push
stos
mov
mov
sub
dec
sti
push
jecxz
cdq
mov
mov
ja
push
scas
rcl
aaa
mov
push
scas
push
inc
mov
adc
lods
sbb
(bad)
nop
push
scas
pop
dec
xor
daa
out
and
pushf
mov
xor
sbb
loopne
cmc
mov
add
inc
pop
or
dec
mov
cmp
jbe
xor
aas
xchg
pop
(bad)
neg
pop
jae
mov
dec
mov
fsub
adc
mov
cmp
jbe
pop
rcr
sbb
push
xor
xchg
das
add
and
xchg
scas
xchg
add
cwde
sahf
mov
mov
fist
dec
fstp
xor
or
repz
imul
stos
cdq
pop
idiv
dec
retf
add
aaa
cs
sahf
(bad)
pop
rol
lds
mov
xor
cmp
mov
call
ret
fist
dec
arpl
cmp
sub
add
push
fprem1
push
shl
ins
fnop
mov
jmp
fs
xchg
pusha
add
ret
mov
jnp
mov
test
gs
xchg
clc
xor
test
mov
mov
int
jecxz
scas
mov
loop
in
cmp
sub
cmp
mov
ficom
pop
mov
adc
sub
push
rcr
dec
cli
jae
mov
ins
xchg
jae
xor
ror
(bad)
shl
jae
ins
or
aad
sahf
xchg
dec
repnz
mov
lods
push
xor
xchg
out
pop
shl
out
fldenv
shr
outs
repz
sbb
loopne
xchg
lods
leave
add
mov
jge
cmp
mov
mov
je
pop
and
arpl
fcmovnu
jmp
or
dec
loope
xor
inc
dec
test
adc
ins
mov
mov
pop
dec
fs
push
cmp
loope
popa
aas
(bad)
mov
aad
jnp
hlt
cmp
jmp
mov
dec
data16
adc
call
lahf
mov
pop
jl
sbb
push
pop
adc
and
retf
sbb
and
(bad)
fild
es
push
jl
add
inc
xor
dec
mov
adc
xor
add
scas
idiv
stos
aam
in
push
push
push
aad
out
mov
cli
cmps
push
sbb
mov
les
shl
mov
xor
cmp
dec
inc
and
cmps
fld
jne
cdq
jno
data16
mov
dec
stos
outs
pop
mov
lods
sti
push
rcl
xchg
sub
imul
cmc
and
cmps
push
popf
out
jb
cmp
loope
mov
ror
sub
sbb
lods
leave
hlt
xor
fimul
inc
mov
outs
cmps
mov
dec
pop
jo
mov
push
mov
inc
jae
pop
pushf
dec
clc
push
xchg
adc
jmp
xchg
jecxz
mov
sti
call
fimul
pop
jmp
pop
or
jne
lods
pop
push
loop
mov
out
dec
add
adc
lds
xor
jbe
dec
ins
mov
or
ret
ror
sub
jmp
adc
hlt
int3
test
pop
inc
sub
std
loopne
out
mov
outs
fcomp
idiv
outs
pop
stos
loop
jns
xchg
push
bound
int
fldenv
daa
sbb
xor
inc
gs
cmp
or
out
xor
(bad)
xlat
scas
jbe
rol
fsubrp
mov
add
cwde
push
pop
inc
leave
popf
outs
mov
ja
test
scas
xchg
fsub
mov
push
inc
out
xchg
pop
repz
xor
mov
mov
mov
jbe
xor
out
imul
jmp
xchg
pop
cld
or
cmp
outs
jp
mov
retf
dec
and
jge
mov
sbb
or
xor
xchg
pop
pop
in
or
iret
push
in
fxch
sti
das
lea
push
add
repnz
fistp
lea
shl
jp
xchg
(bad)
(bad)
mov
test
or
out
shufps
mov
leave
xor
inc
push
mov
adc
bound
xchg
cwde
fstp
mov
retf
ins
lahf
jp
loopne
das
add
or
xlat
jae
bound
dec
pusha
aam
xor
lods
jb
sbb
xor
jo
cld
push
and
daa
lock
pop
loop
hlt
xchg
daa
xchg
adc
ret
or
or
pop
retf
fisttp
aas
or
mov
mov
adc
or
sbb
xchg
ret
add
lea
ret
push
push
push
push
and
pop
mov
xor
retf
push
mov
pop
add
imul
out
pop
outs
pop
sub
test
psubsw
inc
xchg
and
mov
mov
push
jo
mov
repz
add
xor
jmp
out
repnz
out
or
lahf
inc
mov
fisttp
and
jmp
mov
dec
(bad)
test
dec
mov
pop
imul
sbb
(bad)
in
sti
jp
mov
jmp
jecxz
add
(bad)
dec
mov
or
xor
xor
mov
test
in
shl
push
xor
outs
dec
ss
inc
inc
ds
pop
pop
stos
fnsave
fild
dec
pop
jle
sub
xlat
ds
dec
jecxz
add
bound
int3
jno
mov
int3
mov
lods
outs
scas
int
mov
(bad)
scas
xor
push
stos
retf
inc
jns
and
jnp
sar
nop
ret
arpl
movs
fistp
in
sti
outs
dec
add
sbb
fcmovne
push
loope
push
pop
sbb
rol
mov
inc
shl
push
xor
mov
outs
std
cld
and
loop
lea
aad
aam
mov
mov
imul
cmp
mov
or
inc
adc
pop
push
lods
movs
call
cs
in
mov
enter
into
repz
fmul
pop
mov
lock
push
stos
loop
cmc
aas
popa
jmp
paddusw
arpl
test
fisub
pushf
xor
pusha
jecxz
push
jae
ret
in
mov
stos
push
lahf
mov
(bad)
clc
fwait
adc
int
in
jbe
adc
add
leave
loope
nop
add
call
mov
and
inc
ja
xor
sbb
sbb
out
cmps
stos
dec
mov
repz
xchg
push
mul
sbb
call
sti
(bad)
outs
mov
mov
xchg
mov
mov
dec
mov
and
cmp
ins
inc
in
jo
add
loop
push
push
imul
div
nop
ins
aaa
push
add
cmp
rcl
loop
and
inc
mov
out
ret
andps
sub
pop
xor
call
sbb
cmps
mov
mov
pop
xchg
data16
shl
cmp
dec
jecxz
out
and
ret
push
fldcw
outs
repnz
jno
fld
(bad)
cdq
mov
jge
imul
fadd
cmps
loop
dec
push
bound
mov
cdq
daa
popf
mov
pop
not
cmp
and
xor
jmp
scas
fcom
jg
retf
dec
es
cmp
hlt
pop
pusha
jnp
add
pop
in
cmp
shl
sub
sbb
or
adc
push
mov
mov
enter
or
das
mov
pusha
iret
call
lahf
iret
sub
and
test
mov
sub
mov
(bad)
stc
sbb
daa
mov
fs
cmp
loope
add
mov
jns
mov
shl
mov
jae
shr
push
add
pop
repz
in
test
mov
rcl
(bad)
out
or
jnp
jl
push
cmp
and
call
test
sub
jbe
jb
nop
rol
sub
pop
mov
xor
xchg
and
ja
pop
repnz
int3
lea
out
movs
and
sub
sub
fidivr
xor
cmp
xchg
inc
rcr
jle
in
xchg
test
sbb
in
jle
mov
sub
iret
int3
cmc
jg
or
inc
popf
ja
push
jp
lea
fnstenv
and
sbb
or
mov
ret
sbb
rol
cmc
adc
sahf
cmp
and
jmp
mov
mov
fs
jbe
xchg
cmp
sbb
xor
jbe
repnz
xchg
outs
lahf
out
(bad)
jmp
inc
call
mov
(bad)
xchg
cmp
jbe
dec
mov
fst
xchg
jge
sub
push
aaa
push
xor
icebp
add
fistp
dec
stos
and
jle
das
aam
into
add
add
mov
add
sub
cmp
sub
inc
sub
sahf
sbb
mov
clc
mov
mov
lahf
out
or
mov
aad
mov
aaa
icebp
(bad)
add
sub
xor
dec
dec
mov
repz
pushf
sub
and
push
mov
sub
icebp
adc
imul
dec
adc
mov
(bad)
jnp
push
xor
ins
addr16
adc
lock
pop
push
repz
jb
push
xor
pushf
(bad)
jb
pop
xchg
push
adc
out
cld
dec
lea
(bad)
jmp
mov
pop
sub
neg
stos
ret
add
xchg
push
sbb
jnp
inc
dec
sub
cmp
aas
mov
mov
or
addr16
movs
loopne
test
mov
jo
add
push
fnsave
vmptrld
mov
cdq
pop
sahf
inc
xchg
cmc
mov
adc
aas
cdq
addr16
inc
mov
dec
push
mov
bound
pop
jl
mov
mov
mov
push
dec
movs
stos
inc
inc
scas
mov
jge
lahf
lds
addr16
pop
outs
cs
cmps
push
in
mov
or
sbb
sub
or
leave
push
mov
ret
jbe
push
pusha
imul
push
cmp
test
push
push
es
test
test
ret
ins
fwait
pop
mov
dec
cmp
sbb
ficomp
mov
call
outs
pusha
pop
and
fidiv
adc
cmp
pop
fs
cmps
mov
mov
aas
adc
inc
clc
jnp
bound
daa
or
adc
sub
repz
pop
dec
mov
gs
and
mov
ins
push
add
test
or
jg
cmps
push
pushf
xchg
stos
popf
xchg
mov
xor
cmps
cld
pop
inc
lock
or
icebp
jne
inc
and
add
loope
cmp
mov
xchg
(bad)
xor
xchg
rcl
loopne
icebp
and
mov
xchg
es
leave
lods
mov
loop
inc
mov
adc
pushf
pusha
out
not
call
dec
jl
inc
sbb
lods
scas
xchg
push
lea
xchg
in
mov
mov
mov
mov
cwde
clc
mov
mov
push
jmp
cmc
retf
xchg
mov
add
scas
sub
adc
and
mov
xchg
inc
mov
jle
sbb
movs
scas
xchg
dec
mov
fs
pop
push
cmp
jae
loope
call
xor
pop
pop
mov
cmps
sahf
mov
mov
jo
movs
in
fdivr
adc
stos
jg
add
lea
enter
std
sub
pop
xchg
jmp
mov
test
adc
jnp
cmp
pusha
sbb
sbb
push
jp
adc
scas
sub
jp
xor
pop
mov
push
nop
(bad)
mov
into
pop
jmp
lahf
jae
cmps
inc
add
dec
mov
and
jb
adc
xlat
push
pop
inc
mov
add
fwait
int
push
out
fild
push
or
jnp
and
push
aam
inc
pop
mov
mov
and
int3
push
pop
jno
add
sub
add
mov
loopne
stos
push
and
ds
popf
and
repz
ja
ss
mov
(bad)
dec
add
cld
push
popa
jbe
add
xchg
jae
mov
inc
xchg
das
fild
jecxz
dec
xchg
aad
(bad)
xchg
inc
and
jge
adc
adc
ret
into
and
shl
fiadd
sub
stos
out
jbe
mov
xor
int3
mov
out
test
rcr
mov
xchg
xchg
xchg
mov
fst
xor
pop
pop
adc
popa
les
aam
xor
dec
aad
repz
mov
scas
inc
adc
push
xor
out
(bad)
outs
int3
jno
pop
push
cli
xchg
cmp
push
scas
sbb
mov
out
mov
dec
lods
int
hlt
and
stos
cmp
cli
push
push
rol
cmp
xchg
or
cmp
sar
popf
mov
inc
gs
push
(bad)
xchg
xchg
aad
sub
cmps
je
jp
add
bound
xor
icebp
push
dec
(bad)
push
mov
mov
or
(bad)
clc
mov
sub
and
fcom
xor
add
cs
outs
xor
imul
in
cmc
jmp
in
(bad)
div
inc
or
sub
ins
push
mov
and
mov
into
add
jecxz
fwait
sbb
(bad)
shl
imul
out
and
sub
pop
push
add
call
arpl
add
cs
dec
mov
mov
je
adc
mov
les
push
or
and
push
mov
xor
jle
adc
push
sub
pop
loop
sbb
in
repnz
retf
clc
jnp
arpl
loopne
ds
dec
gs
add
rol
xor
push
repnz
mov
adc
sbb
and
in
xor
push
pushf
mov
dec
add
(bad)
jg
dec
loopne
jae
cmps
nop
cmp
sahf
or
lods
push
ins
xor
mov
(bad)
sub
xor
repz
scas
ss
dec
out
sbb
fwait
das
mov
ret
mov
push
data16
shl
inc
sub
out
int
sbb
repnz
out
repz
mov
call
or
rcl
xor
out
inc
mov
sar
sub
inc
dec
mov
jl
mov
mov
(bad)
mov
in
aas
loope
scas
mov
inc
push
push
jmp
sub
aas
jbe
test
retf
mov
(bad)
pop
or
lods
jbe
ret
fstp
outs
xchg
cmc
sbb
mov
mov
(bad)
into
mov
xor
ins
jno
sar
frstor
jle
sub
cmp
fidivr
dec
cli
not
rol
mov
test
jne
pop
aaa
jecxz
ins
cli
sub
clc
cmp
adc
(bad)
jecxz
jle
ret
inc
cmps
cld
fbld
cmp
cmp
inc
call
cmp
arpl
clc
inc
call
lahf
mov
mov
xchg
bound
sbb
mov
dec
xchg
js
push
jns
and
pop
mov
mov
fcomp
cdq
or
push
and
push
(bad)
mov
shrd
dec
dec
repnz
int3
xchg
sbb
sub
xchg
sub
js
jle
inc
fidivr
(bad)
cs
mov
sub
shr
hlt
sahf
inc
xchg
daa
mov
pop
(bad)
out
dec
cld
aaa
out
out
mov
and
inc
jl
sub
outs
jnp
add
call
inc
adc
sbb
imul
(bad)
lock
aas
(bad)
cmp
or
cli
das
in
mov
hlt
repz
(bad)
ffreep
rol
out
push
cmp
retf
mov
mov
xchg
sbb
btc
rcr
outs
push
dec
mov
inc
xchg
xchg
pusha
mov
inc
idiv
sbb
test
in
jle
xchg
loop
(bad)
je
gs
jbe
mov
popa
outs
xor
sbb
cmp
add
hlt
sub
pop
jmp
test
and
mov
retf
or
out
push
and
aam
ror
mov
push
pop
call
mov
xor
mov
loopne
scas
cs
xor
bound
add
lock
ss
out
and
xlat
pop
test
mov
adc
fcomp
jnp
mov
mov
imul
ins
movs
adc
ds
and
jae
or
(bad)
loopne
inc
bnd
shl
push
and
(bad)
sub
push
sahf
xchg
fimul
mov
or
dec
mov
int3
sub
ror
inc
dec
push
fs
xchg
js
aad
fild
sub
loope
mov
out
ror
or
or
mov
xchg
or
or
inc
xchg
push
push
push
xchg
repnz
out
xchg
xor
ja
xchg
jbe
sub
nop
jb
pop
fidivr
into
add
inc
pop
repnz
xor
add
inc
int3
lahf
gs
jmp
fcomi
outs
xlat
(bad)
cs
rol
imul
dec
or
inc
bound
scas
out
push
mov
and
sbb
sub
mov
lods
shr
pop
loopne
shl
adc
or
outs
ins
push
ret
inc
sbb
clc
sub
cmp
pop
mov
cli
push
pop
jno
xor
arpl
shl
in
sub
cmc
outs
lods
sti
sbb
loop
cmp
lea
inc
cmps
ret
fst
add
or
mov
mov
inc
ds
loopne
mov
mov
mov
cmps
lock
rol
cmc
lods
mov
int3
shl
cdq
fild
cmp
xor
dec
sub
or
or
movs
xor
inc
dec
aam
daa
or
fdiv
scas
into
cmp
xchg
fcom
push
cmp
add
dec
repnz
sbb
mov
jle
inc
xor
dec
shl
push
jecxz
or
dec
dec
sar
xchg
mov
mov
pop
push
les
fild
xor
fstp
push
and
sub
call
loop
jae
mov
cmp
dec
scas
adc
sahf
xor
(bad)
repz
ficom
push
or
mov
rol
(bad)
aas
jno
jp
sbb
xchg
loope
mov
fld
mov
cwde
gs
add
jle
shr
jg
jmp
movs
cs
call
out
mov
rcr
pusha
sub
push
ins
lods
fwait
cli
mov
inc
cdq
leave
loopne
lahf
cmp
ss
mov
hlt
call
shr
xchg
jb
mov
ret
rcr
or
lds
and
sbb
loop
pop
jae
pop
mov
mov
push
mov
test
mov
jnp
push
cmp
jnp
xchg
in
cmp
fs
dec
xor
je
dec
ficom
fcomi
and
push
mov
xchg
pop
lock
adc
repz
test
cmps
mov
pop
ja
ins
lock
sbb
and
lods
dec
pop
mov
fwait
pop
mov
test
bound
inc
fcomp
arpl
push
loope
fidivr
sbb
das
mov
jne
xor
loope
xchg
adc
pusha
int
push
in
add
lahf
push
not
loopne
shl
push
leave
call
sbb
sahf
xor
out
fcmove
jb
pushw
ds
push
fcom
ja
rcl
outs
es
jle
mov
jmp
shl
bound
jno
and
cli
pop
rol
int3
mov
arpl
sar
adc
retf
retf
movs
adc
bound
lock
fs
dec
dec
mov
lds
or
scas
fdivr
into
push
fs
xor
iret
adc
mov
add
mov
jge
(bad)
push
xor
xchg
vpaddq
lock
and
icebp
jl
(bad)
leave
push
imul
sub
inc
pop
sbb
dec
xor
out
and
retf
jmp
mov
cli
or
mov
nop
fmul
test
cmp
stos
and
in
dec
sahf
out
pop
shl
movs
mov
data16
mov
scas
mov
fcom
push
out
jbe
ret
pop
adc
addr16
std
dec
fcomp
jp
push
inc
jle
out
dec
fidiv
shl
std
and
xchg
ja
test
push
jecxz
jae
mov
fwait
stos
mov
cmp
jecxz
enter
adc
imul
push
push
cld
ss
repz
ret
dec
mov
repnz
scas
push
mov
pop
xor
enter
add
cmp
push
stc
or
jge
fidivr
outs
lods
dec
mov
jle
pop
dec
shr
jmp
sahf
in
aam
pusha
(bad)
and
jns
arpl
xor
pushf
xchg
out
je
push
test
call
push
in
push
dec
dec
push
jb
ret
bnd
jmp
jo
arpl
xchg
xchg
inc
jp
retf
movs
mov
sub
sub
outs
xor
and
(bad)
cld
and
bound
hlt
inc
inc
mov
fmul
ret
mov
push
cmps
push
(bad)
jae
push
retf
pop
aas
repnz
(bad)
mov
test
xor
jle
loopne
adc
fadd
mov
cmps
push
stos
push
jnp
and
(bad)
bound
xchg
call
push
xchg
push
pop
sti
or
mov
pop
outs
(bad)
(bad)
popf
xlat
mov
push
fsub
loopne
xor
imul
adc
mov
mov
enter
mov
aas
fidivr
pop
adc
imul
inc
pop
mov
sub
cs
pop
push
out
push
jecxz
jno
adc
cvttps2pi
ficom
adc
jecxz
push
sbb
push
lahf
mov
mov
push
out
sub
addr16
inc
xor
jbe
mov
or
xlat
jl
cmp
jge
sbb
nop
dec
shl
rcl
add
lods
iret
mov
movs
pop
or
movs
sub
cmps
in
(bad)
ror
add
(bad)
stos
mov
arpl
repz
ins
test
scas
xchg
jecxz
mov
out
adc
daa
jmp
push
xchg
xor
xor
outs
imul
shr
mov
push
fst
iret
bound
test
imul
pop
cmp
dec
cmp
pop
jno
jle
inc
sbb
addr16
jns
mov
hlt
adc
jae
push
(bad)
aad
jmp
sbb
xchg
(bad)
loope
mov
push
mov
cmp
les
call
jl
cmp
retf
add
and
mov
(bad)
icebp
jne
(bad)
cmp
cmp
dec
fwait
mov
mov
fbstp
pop
or
outs
aad
fist
adc
sub
scas
popa
ss
inc
xchg
add
repz
cmps
movs
leave
je
cmps
xchg
sub
jae
scas
add
ja
inc
les
inc
in
or
scas
sar
repz
sbb
jae
push
mov
lea
retf
call
iret
cmps
imul
mov
jnp
xor
xchg
jecxz
pop
mov
mov
ja
jnp
jb
dec
mov
in
(bad)
bnd
cli
call
xchg
pop
jbe
movs
jb
popf
jne
arpl
retf
mov
test
out
inc
or
mov
stos
fs
stos
jb
cmp
mov
fcomp
in
imul
jmp
inc
hlt
in
dec
and
fistp
ja
dec
das
inc
sub
adc
and
and
mov
add
jg
clc
pushf
cmps
pop
sub
repnz
fimul
cs
sbb
push
fs
xchg
xchg
xor
sti
jmp
xchg
out
jle
scas
stos
push
sbb
xor
shl
sahf
mov
adc
xor
push
data16
mov
js
xor
test
xor
pop
scas
dec
jmp
std
(bad)
adc
push
(bad)
gs
xchg
adc
(bad)
icebp
outs
cld
dec
push
outs
jae
push
iret
fidivr
sbb
loope
stos
stos
in
call
pop
xor
jmp
adc
mov
jle
add
ja
cli
pop
fwait
jo
pop
jecxz
ror
jge
jb
add
mov
pusha
out
call
pop
pop
pop
loop
adc
(bad)
dec
ret
or
mov
mov
ss
mov
hlt
daa
movs
inc
sub
aaa
loop
jp
test
bound
pop
push
xor
dec
xchg
loopne
jo
call
inc
in
(bad)
cwde
jne
call
inc
mov
jne
inc
push
not
imul
movs
(bad)
fidiv
into
fistp
ins
and
ret
shl
cdq
call
mov
popf
sbb
out
ret
xlat
mov
push
push
or
sub
leave
sub
adc
inc
loop
pop
jae
mov
shr
jb
sub
int3
int
mov
pop
inc
out
mov
data16
mov
mov
pop
adc
(bad)
lea
sbb
inc
or
xor
icebp
sahf
push
clc
shl
adc
xchg
fwait
mov
or
jl
clc
or
dec
jne
xlat
cmp
push
dec
lea
push
fidivr
push
into
repnz
and
iret
cld
jbe
or
call
jnp
mov
adc
jecxz
push
xor
xor
pop
sbb
icebp
mov
jmp
xchg
mov
fistp
pop
ret
in
bound
mov
nop
fist
push
das
mov
das
mov
mov
daa
lahf
push
fild
jo
jge
shl
push
push
mov
mov
(bad)
xor
fmul
jne
dec
jne
cmc
fist
mov
aas
or
icebp
xlat
cs
mov
or
mov
out
adc
ja
fdivr
(bad)
adc
mov
mov
sbb
dec
aad
cwde
push
mov
inc
mov
out
xor
push
data16
in
xchg
mov
push
cmps
std
mov
sti
out
outs
pop
and
test
mov
cld
arpl
into
nop
lock
pop
mov
bound
inc
adc
or
and
sub
nop
and
rol
mov
scas
dec
in
test
cld
mov
or
sbb
jae
int
or
scas
(bad)
xor
cli
popf
mov
xchg
ds
sbb
inc
mov
aas
mov
cwde
xchg
adc
std
xlat
mov
mov
pusha
mov
andnps
fcmovb
mov
jecxz
mov
cmp
xor
and
fidiv
retf
icebp
cld
sbb
cmp
dec
jnp
mov
xchg
or
sbb
leave
stos
or
adc
test
(bad)
ins
xchg
rcl
jbe
into
(bad)
cmp
mov
add
adc
jne
lea
repz
sub
pop
mov
pop
ret
cmp
and
(bad)
aad
mov
xor
sub
xchg
inc
adc
jno
clc
stc
inc
xor
call
mov
ret
fwait
jecxz
xchg
inc
leave
movs
push
xchg
xor
mov
sbb
push
jg
hlt
adc
pop
sub
and
stos
int3
cs
push
dec
jmp
rcl
fcmovnu
inc
jmp
shl
push
xor
pusha
fst
jle
xchg
mov
(bad)
dec
cld
or
sahf
push
cld
std
int3
xor
add
add
sbb
mov
adc
xor
arpl
sub
cmp
imul
jecxz
int3
inc
cmps
std
jmp
fcmovnbe
nop
ins
jnp
inc
js
or
inc
sar
ffree
(bad)
jb
adc
cmps
shr
mov
in
adc
mov
popf
inc
mov
test
out
fwait
jmp
out
into
mov
and
fisttp
push
loopne
into
add
dec
pop
scas
call
dec
pop
retf
loop
and
xchg
icebp
or
ret
(bad)
push
retf
push
daa
mov
add
std
push
pop
aam
stos
js
adc
sbb
sub
in
xor
sub
xchg
cmp
(bad)
movs
call
ret
and
xor
jl
add
sub
std
xchg
nop
jmp
ficom
mov
dec
cmp
xor
scas
push
inc
push
pop
inc
jle
push
pop
lods
push
out
iret
ret
pop
lods
jb
ss
mov
dec
sub
push
hlt
xor
xchg
fwait
xchg
lock
xor
xchg
je
rcl
and
fdivr
(bad)
xor
and
adc
(bad)
pop
mov
fbstp
pop
retf
add
repnz
test
out
pop
outs
xchg
gs
sub
xor
dec
(bad)
sti
repz
dec
sbb
jmp
and
push
and
stos
and
loope
dec
scas
(bad)
cld
xchg
and
inc
jmp
lds
ret
inc
inc
fcom
inc
inc
adc
fstp
jb
icebp
push
pop
into
mov
sub
adc
push
pop
inc
xchg
xor
adc
stos
push
sub
add
and
xchg
vcvttss2si
or
adc
enter
dec
mov
mov
jp
repz
and
and
jge
sti
fcom
int
movs
xchg
jnp
xor
push
push
pop
or
imul
std
push
xchg
or
and
and
retf
and
dec
push
mov
retf
ins
cmc
test
cmps
mov
loope
xchg
(bad)
cmps
sar
pop
cli
mov
adc
sbb
jmp
(bad)
jl
jecxz
lds
inc
adc
pop
call
sub
and
adc
sbb
jnp
sbb
sar
jb
test
fst
movs
enter
aam
fsub
push
das
cmp
cli
jnp
dec
rep
sar
mov
mov
popf
jge
pop
stc
jmp
push
stos
and
ret
iret
call
xchg
out
xchg
lods
and
ins
mul
fimul
les
add
and
xor
std
push
aam
mov
jecxz
ror
sub
sbb
movs
push
nop
xor
mov
ja
sbb
push
mov
repz
ins
cmp
out
xor
mov
and
scas
and
sbb
xchg
imul
(bad)
gs
adc
mov
iret
cdq
lods
or
push
cli
loop
cmps
inc
lea
mov
dec
dec
pushf
xor
repz
or
mov
and
les
out
clc
xchg
jle
loopne
bound
pushf
clc
dec
push
movs
dec
iret
mov
jge
inc
in
mov
in
xchg
inc
xchg
jge
mov
popa
pop
out
idiv
js
and
pop
adc
hlt
cli
pusha
std
or
gs
movs
popf
jnp
in
sti
add
retf
jo
cwde
pusha
push
and
add
sub
paddsw
mov
les
pop
cmp
dec
or
jae
mov
cmps
cmp
int3
neg
sbb
xchg
jg
psrad
je
arpl
popf
test
add
popa
mov
pusha
repnz
mov
dec
test
push
mov
cmps
jle
jno
iret
dec
adc
outs
dec
pop
sub
xor
jecxz
mov
shl
clc
cmps
push
in
cld
ss
inc
clc
cmps
sbb
ds
scas
in
xchg
int3
xchg
pop
lahf
pop
cmp
sar
lods
cmps
dec
out
mov
inc
xchg
fisub
aas
lock
adc
in
mov
test
push
xchg
push
adc
sub
mov
int3
pop
es
(bad)
lock
and
push
sbb
lock
test
jb
jg
das
mov
mov
sub
jecxz
rcl
outs
pusha
icebp
and
inc
aad
scas
call
jmp
(bad)
add
and
bnd
stos
in
mov
mov
repz
enter
dec
lea
inc
jecxz
sbb
xor
call
cld
repz
iret
stos
div
jae
pop
jae
(bad)
ja
xchg
fbstp
mov
ins
je
mov
mov
dec
sub
push
add
ss
xor
icebp
std
mov
adc
sbb
jae
repnz
sti
outs
jp
aad
fwait
lods
add
in
test
mov
nop
pushf
push
ret
or
mov
fs
add
mov
xchg
and
jle
add
jge
mov
cmp
xchg
inc
out
bound
jae
ror
pop
and
inc
retf
(bad)
imul
popa
scas
mov
mov
ja
imul
adc
sub
jne
cdq
ja
push
jno
adc
nop
loopne
mov
inc
mov
xchg
or
fiadd
push
pop
sbb
jae
int3
sahf
div
adc
lahf
enter
and
and
test
push
pop
jnp
movs
out
das
ret
leave
cmps
and
or
mov
jno
add
js
xor
les
dec
push
mov
sbb
jl
jne
ficomp
and
mov
lods
mov
push
or
fsub
into
popa
out
xchg
sub
stos
lahf
(bad)
xor
ret
daa
mov
fild
push
mov
sbb
xor
fs
test
xchg
lds
outs
rep
xor
adc
jecxz
aas
es
sbb
cmp
jmp
xchg
mov
sub
fs
cmp
mov
jle
push
mov
(bad)
das
jge
mov
jne
sub
xchg
jecxz
icebp
movs
(bad)
jg
outs
inc
sub
sti
mov
pop
ins
or
fucomi
and
pop
push
cmp
bound
es
dec
shl
dec
es
fimul
xor
dec
out
sub
movs
inc
and
sbb
xor
adc
sub
int
test
int3
daa
mov
xor
into
mov
mov
pop
std
inc
xlat
dec
adc
lahf
jecxz
outs
icebp
jg
fbstp
xor
mov
(bad)
data16
adc
add
data16
xchg
data16
xor
jg
jnp
mov
inc
(bad)
jbe
jo
add
mov
inc
sub
xor
jge
clc
xchg
inc
sub
loop
jb
in
sbb
mov
aaa
loope
int
xor
jbe
gs
loopne
inc
inc
cmps
out
mov
jecxz
loop
loop
cli
jb
mov
xchg
cmps
and
shr
fisub
xor
jb
lods
add
dec
shl
out
xchg
lds
lahf
(bad)
mov
and
and
jecxz
out
xchg
icebp
sbb
dec
and
mov
add
in
outs
inc
xchg
mov
jnp
xchg
ret
push
cmp
xor
xchg
and
hlt
ret
push
int
cmp
inc
adc
mov
xchg
pop
or
(bad)
push
mov
sbb
inc
xor
cdq
inc
mov
out
out
icebp
and
pop
inc
mov
stos
(bad)
sar
sub
js
out
ret
and
push
arpl
mov
xor
(bad)
dec
(bad)
(bad)
inc
in
pop
push
push
sub
(bad)
aas
push
scas
sbb
es
jbe
add
cmc
mov
jge
adc
add
inc
div
call
add
js
jmp
pop
or
lds
std
xchg
xchg
lahf
iret
lahf
arpl
aam
sub
ret
test
push
loop
xlat
or
sti
xchg
sahf
mov
jae
mov
push
pop
das
(bad)
push
ja
jno
pop
fisttp
int3
sub
outs
ins
cmp
jno
fidivr
(bad)
push
push
scas
lods
add
mov
iret
cdq
push
test
push
mov
fidivr
shr
xor
loop
(bad)
jge
push
cmp
call
fimul
stos
shl
(bad)
out
jle
popf
aaa
fstp
and
out
int3
or
push
jle
fisttp
into
iret
pop
(bad)
push
cs
imul
lock
inc
mov
outs
push
push
fcmove
add
arpl
popa
push
mov
scas
mov
jmp
hlt
das
jae
jmp
sar
outs
inc
jp
outs
mov
ss
pop
lock
push
sub
pusha
jecxz
sub
xchg
pop
xor
sahf
pop
xor
push
adc
inc
sar
push
mov
cmp
test
js
add
out
imul
xchg
fsub
ds
ja
loop
xlat
jg
push
cmps
loopne
outs
inc
jbe
das
cwde
inc
jmp
sahf
gs
xor
mov
add
mov
inc
mov
jmp
cmp
(bad)
mov
ret
loope
sbb
stos
out
xchg
inc
lock
(bad)
hlt
mov
add
repnz
test
adc
nop
mov
jne
inc
mov
add
dec
cwde
aaa
push
jmp
sar
mov
fnsave
push
inc
push
push
sar
and
push
shr
scas
inc
loopne
fldenv
sti
mov
cmp
mov
push
mov
cmp
lock
(bad)
jae
push
retf
jg
and
push
or
fwait
pusha
cs
adc
mov
pop
int3
or
add
inc
(bad)
mov
add
mov
movs
sbb
push
movs
rcl
sbb
pop
xchg
repnz
jle
push
mov
or
and
sub
jns
dec
add
mov
push
mov
ins
dec
xchg
clc
push
jns
push
iret
push
push
xlat
std
inc
sub
sbb
or
leave
adc
mov
mov
jp
and
or
sbb
movs
pop
test
adc
icebp
sahf
mov
ss
jl
inc
call
lock
mov
pop
adc
adc
lds
out
and
fidiv
int3
push
mov
push
push
cmp
sbb
adc
jle
push
and
jmp
cmps
ficom
jns
mul
imul
dec
dec
jmp
outs
or
jo
test
xchg
push
cmc
in
and
fs
push
xor
movs
push
cs
push
(bad)
pop
sub
shr
xchg
in
pusha
out
inc
js
dec
adc
cs
mov
xor
imul
and
daa
std
out
mov
or
mov
push
movs
jbe
int
lods
and
das
jge
xor
imul
shl
mov
push
push
push
js
xchg
in
sub
adc
mov
xor
sbb
arpl
dec
cmp
inc
dec
jmp
lahf
mov
fsin
adc
sub
ja
in
(bad)
jle
xor
das
dec
pop
fcmove
push
test
out
and
icebp
add
mov
inc
pop
cmp
jecxz
aas
mov
cmp
jg
push
fpatan
(bad)
mov
mov
loop
ja
pop
xchg
les
push
push
mov
fs
inc
mov
aad
sub
adc
ins
and
push
sti
mov
sbb
push
xchg
lods
dec
pop
mov
lds
and
jb
sub
fs
push
add
call
aaa
xchg
lahf
in
inc
out
mov
mov
fsubrp
imul
popa
or
cwde
(bad)
(bad)
mov
stc
shr
pop
or
fdiv
jp
fwait
pushf
jb
test
lods
fild
cmp
aam
aam
dec
mov
mov
fild
mov
or
add
pop
cmp
(bad)
std
aaa
stc
icebp
mov
pop
ds
or
sbb
outs
ja
leave
jp
push
cmp
imul
or
add
jmp
xor
inc
cld
pop
movs
aas
mov
enter
ja
fs
popa
or
jp
xor
jle
dec
jle
push
cmp
jnp
xchg
pusha
mov
inc
inc
js
cmps
xchg
int3
or
jns
push
sahf
lea
fwait
in
loop
int3
dec
pusha
ret
xor
cmp
push
or
push
mov
xor
jb
in
int
dec
cli
jl
je
imul
imul
dec
mov
mov
mov
push
inc
out
dec
and
(bad)
and
push
iret
push
dec
add
jns
push
sub
enter
ss
xchg
fwait
inc
jo
arpl
or
cmp
clc
and
xchg
mov
xchg
enter
les
ins
sub
es
dec
hlt
xor
dec
mov
loope
pop
xchg
mov
lahf
jo
mov
aam
xor
pop
stos
loope
lock
(bad)
pop
jp
mov
push
push
arpl
sbb
and
jbe
sbb
popa
or
mov
mov
jno
inc
nop
test
and
out
mov
push
dec
out
stos
addr16
and
add
jne
push
inc
(bad)
fst
xor
adc
push
and
pop
inc
rcl
rcr
sahf
or
mov
jne
mov
sti
cli
cld
rcl
and
outs
in
ins
jb
clc
mov
jmp
mov
das
ja
sbb
mov
push
mov
xor
mov
xchg
loope
lahf
or
jp
xor
mov
cmps
xchg
jb
sub
into
movs
adc
loopne
loop
mov
out
mov
fcom
das
in
inc
icebp
loop
ficom
jnp
data16
cs
jl
daa
fbld
sbb
mov
rol
sbb
lahf
pop
imul
sti
imul
mov
sbb
cmp
test
imul
adc
and
push
es
add
mov
add
and
add
mov
mov
xor
cmp
clc
or
repz
sti
scas
ror
add
mov
pop
jnp
jle
xchg
outs
dec
xor
inc
mov
xchg
outs
fidiv
inc
icebp
jae
sub
lock
mov
inc
xchg
jnp
gs
jecxz
les
xchg
xchg
add
adc
cs
xchg
pop
sti
popa
(bad)
push
pop
jecxz
inc
stos
out
pop
(bad)
jge
and
push
and
ss
pop
mov
shr
sbb
mov
xchg
aaa
aam
loope
mov
loop
call
mov
out
int3
push
cwde
pushf
or
outs
ror
jnp
xchg
push
data16
das
inc
mov
push
mov
xor
mov
repnz
in
xchg
or
out
xor
or
sbb
lahf
xchg
push
stos
pop
xchg
ja
jbe
daa
push
or
push
mov
sbb
jle
in
cmp
out
pop
mov
cmps
add
(bad)
pop
dec
out
in
jecxz
sub
sub
push
iret
or
aam
push
sbb
dec
lea
xchg
mov
(bad)
stos
popa
jle
mov
(bad)
cmp
mov
sub
inc
pop
int3
cli
and
mov
sub
fldenv
popa
xchg
jp
scas
sub
inc
pop
iret
pop
daa
xor
retf
jns
jmp
or
xchg
movs
jae
out
mov
aaa
mov
outs
lds
fcmove
out
push
or
sbb
mov
(bad)
sti
pushf
in
shl
ror
sbb
fidiv
dec
addr16
or
and
push
mov
dec
out
push
xchg
test
(bad)
stos
and
aaa
iret
pop
mov
arpl
sbb
xor
sub
mov
fbstp
test
ret
retf
arpl
adc
pop
mov
mov
jbe
ins
xchg
into
lea
repz
mov
rol
mov
ins
mov
jecxz
sbb
xor
mov
cmp
inc
push
stos
imul
inc
pop
dec
aad
popf
xchg
push
inc
adc
das
loop
mov
test
jae
stos
aaa
(bad)
jb
and
movs
cmp
das
cvtps2pi
loopne
adc
or
rol
mov
out
jb
lock
and
ror
(bad)
mov
out
mov
or
leave
out
dec
mov
ins
(bad)
in
jecxz
adc
outs
int
jecxz
hlt
or
mov
xlat
add
sbb
push
(bad)
add
push
fisttp
pop
shr
jns
push
xor
push
shl
stos
call
imul
add
xchg
int
sub
inc
xchg
imul
imul
fdiv
cmc
scas
mov
fnstsw
aas
adc
aad
jle
push
jae
adc
sub
shl
enter
pop
push
jp
add
push
jmp
mov
pop
dec
sar
out
sub
ins
or
jb
(bad)
fldenv
push
cmps
add
and
push
lods
or
xchg
pop
jae
sub
outs
mov
push
adc
pop
jg
sahf
ret
out
repz
std
mov
neg
imul
lods
inc
daa
ins
outs
aas
out
xchg
xchg
jb
adc
mov
push
push
mov
push
lods
xor
or
cwde
out
fs
cmp
sub
(bad)
fwait
sahf
inc
mov
(bad)
jns
imul
push
cli
and
xchg
int3
repnz
pop
adc
sbb
test
and
ins
push
push
xchg
sbb
ins
pushf
pop
push
enter
sbb
cmp
dec
bound
pop
imul
ds
add
pop
aas
and
iret
fimul
fldenv
xor
push
js
push
jno
mov
fbld
pop
push
iret
retf
aad
in
sbb
push
xor
mov
es
cmp
inc
xor
add
and
jae
cs
jg
add
lods
xor
shl
(bad)
ja
dec
jge
retf
push
adc
dec
call
ficom
loop
mov
fiadd
dec
retf
xor
mov
and
out
push
or
xchg
inc
rol
jns
cmp
push
iret
pop
mul
adc
int3
sub
mov
mov
bound
sahf
leave
iret
xor
push
sub
pop
(bad)
dec
outs
dec
bound
(bad)
repz
dec
je
mov
fsub
out
(bad)
adc
test
sub
out
push
inc
sub
jnp
lods
ret
std
mov
aad
push
xor
add
(bad)
bound
mov
repz
pop
scas
cs
xchg
push
test
ret
in
inc
inc
xor
sub
lods
aam
cmps
or
(bad)
cmps
popf
scas
popf
aaa
inc
aas
mov
movhps
cli
out
leave
cmp
jns
xor
(bad)
call
pop
sbb
addr16
ror
bound
cmps
jo
cmp
add
mov
xchg
push
mov
fwait
adc
pop
sbb
xor
std
int3
adc
cwde
pop
rol
out
pop
movs
push
or
jl
out
xchg
outs
and
lock
adc
adc
sbb
test
js
adc
sub
mov
mov
fadd
mov
fmul
rol
inc
sub
fld
jb
pusha
test
pop
retf
fldcw
mul
mov
jnp
adc
cmp
inc
xor
jmp
push
jb
inc
rdpmc
mov
mov
jae
rcl
outs
cmp
inc
sbb
jnp
pop
jg
(bad)
iret
dec
push
test
cli
xor
add
std
aad
mov
xchg
sbb
outs
ds
mov
rcl
scas
inc
sysexit
shl
sti
pop
and
push
test
out
sbb
push
xchg
scas
(bad)
retf
scas
ds
sti
and
inc
pop
data16
xchg
fisttp
scas
push
mov
dec
(bad)
sar
push
sbb
js
jecxz
retf
dec
in
mov
cmp
push
push
test
lahf
xchg
ins
xchg
and
pop
leave
loop
adc
scas
je
xor
pop
cs
ins
mov
pusha
in
ret
jae
test
ror
jbe
or
cmps
lods
test
outs
ficom
jae
and
mov
ja
adc
and
cmc
movs
jne
mov
outs
mov
inc
mov
sub
xchg
mov
pop
repnz
sub
(bad)
xor
(bad)
fidiv
(bad)
xchg
shl
pop
sub
or
pop
pop
cs
or
test
jo
les
mov
dec
frstor
ins
add
cmp
aas
cld
dec
mov
fistp
mov
xor
lahf
pop
sub
ret
jo
xchg
(bad)
sub
hlt
scas
adc
js
push
add
mov
out
stos
inc
sub
fiadd
xchg
sbb
inc
add
xchg
dec
(bad)
jbe
inc
push
pushf
cld
mov
retf
and
mov
stos
mov
xor
xor
or
ret
(bad)
jbe
scas
jae
sub
push
xchg
dec
test
or
sub
sar
cmc
xor
outs
adc
lods
(bad)
sbb
xor
mov
fidiv
gs
xchg
clc
stos
push
mov
push
jnp
push
jle
dec
push
rcr
mov
adc
mov
(bad)
mov
fld
cmp
xchg
ret
sub
mov
mov
lea
fs
ds
mov
push
push
shl
loopne
dec
mov
out
repnz
jecxz
mov
loop
sahf
ins
fmul
lds
push
sbb
pushf
ret
aas
pop
mov
rol
sbb
in
ds
ret
ss
gs
popf
xchg
pop
daa
test
icebp
ficom
das
and
add
cmp
stos
cmc
cmp
xchg
jno
or
into
ret
xlat
sar
dec
sar
int
popf
inc
(bad)
sbb
ins
cld
xchg
mov
arpl
cmps
sbb
mov
inc
sti
mov
repz
sub
fdivr
mov
add
cdq
cmp
mov
pop
stos
mov
inc
and
(bad)
mov
xor
pusha
mov
shr
push
push
aaa
xor
push
ins
inc
xor
cmp
push
sahf
add
dec
and
mov
ror
adc
push
in
xor
mov
adc
mov
ror
pop
leave
rcpps
mov
push
stos
int3
mov
xlat
ret
cli
push
mov
fcmovu
xchg
sahf
and
loope
mov
push
jle
xchg
out
pop
cs
sbb
dec
scas
mov
clc
push
imul
fcomi
push
mov
dec
(bad)
and
push
data16
aad
mov
inc
(bad)
cmp
mov
dec
mov
pop
loope
arpl
dec
mov
pop
push
call
repz
rcr
jge
ror
inc
out
and
dec
in
inc
loope
add
push
mov
sti
ds
ds
outs
jecxz
push
lods
jno
cmp
data16
pop
and
into
test
mov
sbb
cmp
movs
mov
sbb
inc
sbb
jl
jle
loop
mov
ror
adc
cmp
push
inc
push
mov
mov
out
adc
dec
adc
aas
xor
arpl
push
push
cmp
lods
into
mov
pop
mov
fiadd
movs
jbe
lahf
sbb
fisub
dec
out
dec
cmp
icebp
mov
jle
or
cmp
ja
adc
or
outs
cli
icebp
cdq
retf
push
call
lahf
scas
lahf
arpl
or
sti
movs
call
stc
mov
pop
or
mov
push
loopne
je
into
lahf
scas
std
jo
pop
fsub
xchg
mov
jle
pop
cmc
adc
xchg
loopne
add
push
inc
retf
test
lahf
push
scas
mov
sbb
lea
mov
pusha
inc
stos
mov
hlt
inc
cli
je
jnp
mov
(bad)
pop
sub
dec
sub
push
lods
call
push
fsubr
mul
dec
add
cmp
or
aad
fcomp
sub
mov
dec
imul
push
ins
push
mov
adc
sbb
or
dec
and
and
inc
cdq
mov
repz
ss
adc
mov
jecxz
shr
or
sti
popa
pop
int
sahf
in
mov
das
out
sbb
mov
cmp
add
outs
shl
fdivr
add
xchg
shl
or
cld
test
adc
jnp
or
adc
xor
dec
arpl
shr
xchg
mov
aas
ja
out
es
mov
xor
dec
mov
ret
hlt
repz
popa
sbb
int3
jecxz
cmp
push
xor
cwde
xchg
dec
cmp
mov
or
xlat
sub
lods
retf
xchg
bound
push
ss
fwait
cld
pop
dec
pop
hlt
(bad)
push
addr16
mov
push
pop
lods
mov
mov
xchg
cmp
and
scas
dec
stos
xchg
mov
fsub
test
add
fisub
adc
test
dec
pop
nop
test
and
in
and
and
push
sub
add
and
adc
lea
mov
das
mov
inc
lods
(bad)
push
int3
push
mov
call
push
outs
xchg
dec
sar
jbe
ret
cmps
sbb
dec
into
xchg
push
retf
repnz
je
push
popf
in
pop
xchg
sub
and
inc
mov
inc
scas
repnz
inc
xor
sbb
std
xlat
rcr
or
mov
test
pop
fisubr
sub
add
or
mov
hlt
pushf
out
mov
cmps
ds
daa
dec
jge
adc
inc
stos
mov
(bad)
sub
or
sahf
add
adc
xor
retf
jge
pop
sub
and
push
out
(bad)
fdivrp
mov
in
cld
lock
das
scas
inc
adc
pop
je
int
fidivr
fsubr
adc
adc
mov
push
sbb
dec
cli
sbb
stos
push
add
ror
repz
in
pop
pusha
lock
call
das
arpl
(bad)
push
mov
scas
and
outs
setb
push
cmp
out
xlat
mov
int
cdq
mov
sub
push
jmp
in
add
dec
dec
sbb
and
sahf
dec
mov
test
adc
dec
fmulp
ds
xchg
sbb
out
sti
jmp
add
adc
sub
in
es
jcxz
repnz
sub
outs
pop
les
push
adc
jae
enter
jae
daa
enter
lahf
ror
jle
(bad)
adc
retf
jecxz
cmps
add
push
fnstenv
push
lea
jmp
rol
test
pop
scas
xchg
scas
mov
pop
rcr
dec
xchg
mov
cmp
div
inc
leave
add
dec
in
into
(bad)
into
aam
imul
jbe
jle
jmp
and
add
iret
sub
out
xchg
cli
and
stos
mov
ins
pop
sub
rol
mov
and
push
jmp
out
pop
push
test
add
jl
lods
dec
fwait
mov
cwde
out
ror
push
in
(bad)
jle
xor
pop
ffreep
aam
mov
in
xor
mov
add
sub
stos
shl
std
or
es
mov
cmp
xchg
pop
cmp
call
das
bound
imul
out
rcr
in
je
push
or
sub
aad
enter
push
jecxz
call
ret
mov
lea
sahf
mov
dec
fstp
xor
mov
pop
xor
and
pop
mov
pop
adc
data16
xor
push
push
mov
jns
js
or
hlt
or
and
or
mov
in
mov
cmp
push
iret
pop
cdq
mov
in
ja
popa
pusha
imul
fisttp
inc
cmps
lock
cmp
push
loop
pop
test
(bad)
pop
repnz
sar
cld
inc
test
mov
stc
in
xchg
std
nop
fld
xor
push
xchg
in
and
dec
push
jg
loop
dec
push
lods
xchg
mov
inc
dec
outs
inc
in
dec
cmp
inc
and
outs
scas
outs
mov
sbb
(bad)
gs
ja
jmp
cwde
mov
cld
xor
pop
mov
jb
xchg
xchg
sbb
retf
add
mov
inc
dec
dec
cmp
enter
(bad)
dec
inc
sbb
movs
aam
sahf
adc
inc
sar
enter
fnsave
sbb
nop
jnp
sbb
xor
pop
jno
frstor
das
lods
dec
lock
int3
add
and
cmp
fist
aam
sahf
jecxz
cmp
rcr
mov
sbb
or
scas
push
nop
sbb
fs
cld
sahf
pop
rcl
add
cld
add
ja
jns
(bad)
es
pop
sbb
ds
jns
ja
sbb
(bad)
lds
push
adc
adc
outs
ret
dec
es
jp
sbb
repz
aaa
test
jg
stc
fs
movs
cmp
xor
adc
out
arpl
mov
(bad)
stc
dec
bound
arpl
lods
(bad)
(bad)
neg
into
push
adc
mov
xchg
pop
inc
fstp
jmp
dec
inc
inc
fimul
cld
adc
icebp
inc
in
cmp
push
sub
push
jle
test
and
outs
add
cmc
lods
and
pop
rep
out
inc
cmp
and
fs
xor
mov
push
adc
dec
inc
mov
or
jle
jo
or
sti
movs
cmp
ret
sbb
or
popa
ror
xchg
pop
popa
sub
cmc
mov
or
out
jl
sar
push
stos
cmp
(bad)
inc
mov
cmps
mov
(bad)
mov
sub
dec
int3
aad
jnp
cld
add
mov
sbb
inc
mov
mov
cmp
or
push
sbb
push
push
mov
pop
dec
mov
mov
dec
pop
lods
in
inc
adc
xlat
leave
mov
hlt
shl
mov
mov
xor
add
push
cwde
add
xor
dec
or
int3
sub
out
jmp
ret
mov
pop
sti
pusha
les
stos
repz
movs
arpl
xor
sahf
lahf
out
in
icebp
pop
push
and
pop
and
test
gs
cmp
(bad)
or
add
or
cmp
xor
fimul
jno
inc
push
push
daa
ins
jge
neg
jl
cs
lock
jl
xor
(bad)
and
push
mov
clc
jo
fiadd
sbb
jno
stos
ds
push
lock
dec
(bad)
and
jno
cmp
jl
cmp
xchg
loope
data16
adc
jbe
popa
adc
and
mov
out
xchg
fdivr
push
repnz
dec
add
cmp
mov
jl
cmp
into
xor
jmp
lds
sub
(bad)
jb
aam
aad
enter
popa
cs
pop
jecxz
call
mov
jne
mov
lock
mov
pop
mov
xlat
repz
mov
jns
data16
pop
push
jl
imul
lahf
(bad)
adc
pop
fwait
cmp
je
jno
mov
addr16
cmp
cmp
out
adc
xchg
movs
repz
outs
adc
into
lods
and
jb
push
hlt
rcl
test
ss
xor
and
add
or
or
aad
popa
dec
jl
arpl
aaa
shr
mov
scas
outs
cmps
rcl
lahf
sub
and
pushf
dec
sbb
sub
cs
add
add
loope
push
into
dec
call
and
out
in
push
fnop
sbb
nop
sub
pop
push
sbb
sbb
fmulp
mov
xchg
sub
das
out
cmp
outs
add
ror
std
cld
mov
cs
bound
push
inc
jle
and
loopne
mov
mov
jbe
(bad)
in
xor
jnp
adc
icebp
into
pop
xor
pop
imul
xchg
imul
sub
mov
popf
pop
add
push
xor
jae
push
xchg
and
inc
xor
retf
xor
and
and
xchg
cld
mov
inc
jp
jmp
mov
add
das
nop
mov
ret
daa
jle
xchg
fstp
pop
scas
and
neg
adc
fdiv
stos
adc
cmps
mov
div
ins
jns
pop
repz
mov
shl
(bad)
ds
cld
fucomip
inc
sbb
xor
xor
pop
outs
fdivrp
repz
fld
test
enter
cmps
or
scas
or
cs
add
add
dec
xor
push
pop
mov
adc
jle
sub
out
pop
loope
cmp
cmps
sar
shr
outs
pop
ret
xchg
xor
and
mov
fisub
sub
retf
jge
xor
xchg
jno
dec
adc
push
imul
(bad)
push
inc
repz
xor
cmps
aaa
call
xchg
add
jecxz
adc
xor
enter
pause
aaa
xor
add
add
sbb
cli
dec
movs
mov
fstp
or
or
shl
jo
dec
jl
test
xor
inc
nop
out
mov
pop
jg
inc
fidiv
push
sbb
daa
or
outs
lds
push
lods
dec
cld
in
in
lods
pop
add
fstp
mov
das
jp
mov
and
adc
xchg
cmp
inc
mov
mov
ret
mov
ins
cs
iret
leave
xchg
and
test
mov
mov
into
repnz
int3
jg
lods
or
adc
into
xchg
fisubr
xlat
std
mov
dec
retf
int3
mov
adc
popf
or
imul
lock
outs
inc
sub
(bad)
retf
mov
or
adc
(bad)
jmp
aaa
(bad)
leave
dec
jecxz
jnp
repnz
dec
fwait
test
xchg
shl
jb
mov
xchg
cmp
stos
add
aas
outs
sub
aaa
out
mov
pop
or
jl
add
shr
fdivr
imul
stos
sahf
mov
scas
pop
out
xchg
sub
inc
(bad)
int3
test
jg
mov
in
pop
outs
dec
sahf
and
sbb
(bad)
cdq
outs
mov
shr
cli
clc
sbb
mov
mov
(bad)
mov
in
stos
mov
xchg
das
jae
gs
iret
sahf
daa
fisttp
(bad)
in
fcom
push
push
push
add
nop
outs
aad
or
pop
mov
push
retf
or
rcr
inc
cmp
je
or
push
sub
dec
mov
jnp
inc
mov
scas
mov
jle
test
cmp
idiv
mov
retf
mov
mov
cmp
mov
jo
xor
int
fistp
mov
aaa
mov
and
lods
jmp
inc
sub
div
sub
push
data16
sbb
ins
cmp
data16
aas
scas
sub
outs
fld
xchg
js
mov
xor
jl
popf
iret
and
mov
mov
mov
fnstsw
out
jmp
stos
mov
jns
jp
dec
lods
imul
jmp
adc
xchg
add
jp
sub
cwde
jae
fs
in
sti
sahf
int3
adc
fistp
and
rol
rol
pop
sbb
sti
push
push
dec
adc
popf
sbb
push
mov
push
jne
iret
dec
mov
sbb
outs
mov
outs
sbb
out
hlt
dec
mov
div
imul
pushf
pop
repz
inc
test
shl
push
add
outs
jb
mov
repz
dec
push
fisubr
ret
int3
pop
mov
mov
sub
lahf
neg
mov
cmps
les
sbb
adc
push
and
je
sahf
daa
pop
pushf
lea
(bad)
jl
dec
adc
add
pop
mov
sub
in
and
pop
sbb
cmps
xchg
dec
mov
sahf
loop
jae
and
xchg
mov
imul
dec
mul
inc
stc
push
push
rol
inc
fcomi
adc
stos
cmp
int
inc
mov
pop
hlt
not
dec
shr
cmp
sar
aad
jb
(bad)
adc
cmps
push
xchg
loope
in
pop
cmp
or
ret
mov
pusha
xor
icebp
xor
sub
mov
jge
sbb
jmp
inc
mov
mov
or
mov
lds
test
std
nop
mov
popf
fmul
pop
push
retf
sti
mov
sub
loopne
cmc
movs
in
dec
stos
div
mov
outs
in
test
lahf
rcr
leave
out
jnp
fidivr
mov
xor
jecxz
adc
mov
fild
push
sbb
xor
jecxz
div
aam
adc
repz
test
loop
enter
xchg
jno
retf
iret
adc
xchg
xchg
iret
sbb
test
cmc
out
xchg
xchg
int
jbe
or
xor
fidiv
lea
(bad)
bound
ret
push
ret
sbb
pop
retf
not
cs
sar
push
and
mov
add
xor
xchg
fnstcw
scas
jge
ret
jg
sbb
pop
jmp
jmp
mov
ss
adc
int3
cdq
stc
in
(bad)
imul
sub
fnstcw
sbb
aam
in
mov
cmp
adc
or
sub
pop
mov
mov
add
clc
xchg
rol
and
mov
sar
iret
jg
or
call
daa
sub
ins
or
outs
test
(bad)
clc
int
sub
ins
or
xor
cli
cmp
das
adc
adc
data16
and
lds
cmp
xchg
lock
or
jmp
adc
mov
cmp
mov
int
adc
mov
movs
mov
imul
pop
fdivr
adc
(bad)
sub
stos
inc
pop
xor
aad
retf
pushf
jge
sub
and
cmps
pop
cli
das
sbb
fwait
ret
xor
xor
rcl
xor
inc
ins
push
ds
ret
andps
push
adc
and
pop
jp
adc
cmps
cmp
popa
mov
cmp
(bad)
sbb
jno
mov
mov
push
xchg
xchg
jl
adc
inc
push
aad
and
stos
dec
loop
lea
clc
jecxz
pop
mov
mov
lahf
adc
lods
push
mov
fisttp
adc
mov
mov
imul
xlat
cdq
fld
pop
lahf
dec
or
dec
push
fdivr
jb
test
repnz
cmp
push
mov
push
adc
icebp
push
or
fsubrp
push
ss
mov
int
mov
shl
xchg
push
sbb
mov
cwde
fdivr
cmp
ins
daa
sub
push
xchg
lods
adc
leave
sbb
movs
pop
push
repz
adc
xchg
jae
scas
mov
sbb
daa
jbe
les
mov
pop
and
in
shl
and
cmp
xchg
in
fwait
sbb
je
mov
fcmovne
push
bound
pop
imul
shl
movs
ficom
xchg
jno
push
pop
cmp
mov
inc
dec
push
or
jmp
jle
mov
dec
push
dec
aas
pop
pop
aam
xchg
jb
in
ja
dec
in
in
push
cmc
push
repz
pusha
pop
inc
adc
adc
xchg
add
arpl
in
jbe
je
cmp
jle
shl
or
sbb
popf
call
inc
jae
sub
or
adc
repnz
sub
mov
dec
jo
(bad)
sub
inc
loop
cli
in
adc
inc
mov
dec
jb
call
stos
or
(bad)
(bad)
push
mov
dec
fisttp
cld
adc
add
mov
idiv
stos
ss
cmp
aad
jp
scas
stos
jp
jle
jae
dec
hlt
or
push
push
test
push
pop
xor
jl
fistp
cmp
sub
jg
repnz
xchg
clc
pop
lea
mov
dec
jecxz
(bad)
loop
jnp
das
(bad)
das
ret
ds
into
xlat
scas
sbb
in
mov
daa
dec
sbb
adc
dec
push
ret
das
push
adc
pusha
pop
add
outs
bound
ret
pop
and
pusha
fidiv
or
cmp
pusha
mov
or
cmps
rcl
inc
mov
fs
in
ret
fsub
das
lds
jg
adc
xchg
inc
stos
out
mov
loop
in
int3
add
ret
es
jae
push
popa
ret
int3
outs
(bad)
icebp
loop
dec
push
xchg
mov
fild
cmps
not
hlt
(bad)
xor
xchg
xor
push
out
jmp
push
jl
cmps
cmps
out
sub
aas
test
out
cmp
add
lahf
cdq
adc
xchg
les
mov
pushf
mov
addr16
scas
push
and
pop
dec
cmp
int
add
cmp
test
lahf
xchg
int
outs
dec
outs
ficom
mov
aam
out
(bad)
into
in
test
mov
test
out
or
mov
sahf
cmp
pop
sbb
retf
jae
in
cmps
mov
repz
jecxz
mov
cli
dec
mov
mov
gs
in
fsub
adc
mov
mov
out
and
(bad)
ss
inc
imul
imul
jge
lods
sar
lds
dec
(bad)
mov
(bad)
test
inc
movs
imul
jmp
(bad)
mov
call
rcr
lea
sub
ror
cs
nop
pop
lahf
movs
sahf
iret
mov
lock
jo
pop
retf
dec
cmp
sub
sbb
popf
mov
in
imul
jo
loop
loopne
xor
and
lahf
mov
ror
dec
test
call
jle
int
cmp
add
fdivr
out
es
mov
xor
cmp
in
sub
repnz
dec
dec
js
adc
inc
out
cli
ins
hlt
cmp
ret
mov
repz
push
addr16
enter
int
int
inc
mov
dec
ror
sub
outs
xchg
stos
cmc
adc
or
pop
popa
fadd
adc
adc
sbb
fst
or
sub
inc
mov
sbb
jle
out
push
fbstp
popa
iret
xor
sbb
pop
xor
das
enter
push
adc
dec
add
stos
lods
popf
pop
into
rol
dec
dec
neg
shl
and
dec
aad
cmp
mov
cli
xchg
int
xchg
and
sti
sahf
xlat
(bad)
clc
jb
fild
fidivr
xchg
ins
int
int
ror
gs
adc
hlt
(bad)
nop
xchg
push
(bad)
fild
cmp
rol
call
push
not
lea
pop
sub
xchg
and
xor
stos
scas
xchg
in
inc
call
jne
jl
out
or
add
std
seta
mov
lock
call
sti
xchg
out
pop
fild
mov
jno
fwait
(bad)
rcl
fnstsw
lock
add
inc
push
jl
lea
jnp
sbb
fcmovu
(bad)
ss
xchg
scas
faddp
sahf
mov
pop
push
jmp
idiv
pop
pop
sbb
sti
repnz
pop
mov
out
test
icebp
loope
mov
(bad)
pop
mov
jmp
rcr
jae
stc
mov
imul
xchg
cli
sar
dec
scas
sbb
ret
dec
int3
mov
cld
mov
xor
mov
sub
jecxz
mov
cmp
xchg
push
push
cs
jecxz
inc
push
push
cmp
mov
scas
jne
inc
lods
push
adc
xor
test
pop
mov
cmc
jle
(bad)
mov
cwde
jle
jecxz
shr
fidiv
(bad)
daa
cdq
pop
ss
dec
jge
icebp
jmp
aam
jmp
mov
scas
mov
out
xor
xor
sti
rcr
ins
or
or
inc
adc
mov
bound
in
(bad)
gs
jl
push
xlat
fwait
shl
cld
retf
mov
lods
push
and
jae
push
lock
rcl
jg
ret
inc
int3
jle
cmp
sub
sahf
cmp
push
js
adc
sti
pop
inc
ds
ds
test
push
inc
(bad)
popa
mov
jo
(bad)
mov
or
mov
(bad)
in
pop
push
imul
inc
into
sbb
mov
jp
cs
inc
xchg
out
outs
(bad)
fnstenv
sbb
scas
shl
packuswb
xchg
xchg
jo
push
mul
inc
pop
es
ret
cmp
lods
fwait
or
jo
out
sahf
mov
xor
xor
arpl
jp
fwait
dec
mov
mov
stos
out
dec
adc
bnd
push
loop
push
jo
lea
out
fstp
lahf
xor
outs
mov
or
cwde
mov
dec
icebp
adc
xor
and
ss
cdq
mov
pop
dec
in
(bad)
push
out
inc
mov
sub
mov
mov
mov
jl
adc
jbe
xor
add
ret
push
push
xchg
pop
popf
cli
mov
cwde
mov
mov
and
sbb
movs
sahf
adc
sub
loope
or
scas
xchg
sahf
mov
mov
scas
inc
and
push
sub
sub
mov
loope
out
sub
into
jae
xchg
shl
or
daa
shl
fdiv
addr16
std
jmp
push
dec
icebp
fild
adc
outs
cmc
jb
sahf
clc
cdq
pop
dec
inc
mov
cmp
pop
movs
xor
dec
sub
xor
(bad)
mov
xlat
inc
xor
add
and
fcmovnbe
xchg
jle
jo
fidiv
sahf
arpl
cmps
icebp
fs
aas
loopne
rcl
test
rcl
mov
out
pop
in
test
gs
xor
hlt
in
lods
jbe
adc
pop
pusha
cmp
or
imul
out
int
add
sti
or
jecxz
popa
retf
in
push
adc
jo
cs
pop
add
or
lods
cdq
jns
push
bound
dec
int3
inc
mov
mov
sar
add
iret
sti
stc
add
pusha
ds
jnp
scas
dec
jo
dec
shl
add
cld
add
test
addr16
and
mov
lock
dec
xlat
fdiv
mov
(bad)
jbe
jo
or
mov
sahf
das
pop
xor
mov
add
ss
bound
xchg
inc
xor
mov
lds
(bad)
jne
sub
mov
cmp
jns
loop
or
add
mov
fisttp
dec
sar
push
xor
cmp
mov
out
add
out
call
push
sub
inc
jnp
iret
hlt
add
push
dec
mov
jns
push
js
mov
push
mov
jae
sar
sbb
arpl
push
ja
push
hlt
shr
sub
cld
pop
adc
iret
arpl
cmp
out
jne
jecxz
mov
rcl
pop
and
mov
lahf
(bad)
pop
jne
xchg
ins
and
ins
or
and
pushf
jno
cmp
pop
xor
mov
test
(bad)
mov
push
dec
jne
push
ret
sahf
fist
call
mov
adc
adc
stc
sub
shl
xor
add
jge
dec
mov
sub
js
loop
clc
retf
imul
push
or
inc
jb
rcl
ins
(bad)
jae
icebp
jge
add
and
fwait
push
inc
jecxz
iret
xchg
in
add
loopne
sub
xor
mov
push
cmps
mov
loope
lahf
sbb
push
add
(bad)
and
jecxz
retf
fistp
into
nop
cmp
enter
mov
xor
rcr
sub
cli
ss
xor
out
shr
enter
lods
push
mov
dec
jecxz
and
adc
icebp
retf
les
out
enter
cs
dec
out
jb
inc
push
inc
inc
inc
cmp
lea
mov
fnsave
push
int
cs
cs
add
(bad)
clc
fisubr
mov
push
xor
retf
xor
push
xor
(bad)
into
mov
js
ds
cwde
push
shl
add
xor
push
ins
adc
mov
xchg
(bad)
mov
call
rcr
mov
sub
fst
daa
lea
retf
cmp
cld
into
cmp
pop
mov
xor
(bad)
ror
jbe
outs
or
sbb
ror
(bad)
sbb
adc
xchg
or
pusha
pop
or
into
mov
xlat
out
jb
xchg
jmp
cmps
retf
mov
sub
mov
retf
mov
ins
sahf
add
ja
dec
mov
xchg
cmp
test
ss
pop
mov
(bad)
mov
shr
mov
vpcmov
inc
sbb
sub
movs
dec
dec
add
xchg
mov
dec
inc
mov
aas
daa
mov
ror
push
mov
add
adc
(bad)
cmps
dec
fnsave
push
mov
rcr
daa
ret
or
mov
pushf
push
fucomi
pushf
jo
and
in
adc
pop
imul
sbb
call
mov
mov
shr
inc
(bad)
jmp
js
inc
inc
iret
xor
std
adc
das
stc
sub
xchg
cmps
xchg
push
adc
dec
pop
cmp
xor
sbb
int3
adc
inc
pusha
lods
mov
and
ret
fnstenv
sti
test
xchg
fild
iret
addr16
adc
icebp
pop
sahf
in
pusha
jae
pusha
mov
popf
pop
cli
test
lock
sti
rcr
mov
fistp
(bad)
adc
dec
mov
popf
ja
in
or
lock
and
cmps
mov
and
data16
add
aas
add
jmp
wrmsr
sub
iret
addr16
fldenv
movs
imul
mov
ja
xor
hlt
inc
pop
mov
cmp
adc
(bad)
mov
rcl
and
fcomi
int
rol
xor
inc
fdivr
lea
dec
push
cmps
(bad)
leave
ins
xchg
cwde
add
xchg
loope
xor
dec
pop
fisttp
xor
scas
pop
inc
shl
sub
pop
cmp
pop
gs
pop
scas
pop
xchg
and
mov
push
fmulp
repnz
mov
sbb
mov
sti
sahf
shl
cli
ins
into
fld
pop
add
aad
iret
push
add
shl
arpl
sahf
add
push
mov
rcr
xor
or
xchg
cmps
loopne
cmps
mov
push
push
jnp
inc
mov
mov
js
(bad)
out
jno
sub
movs
jbe
push
pushf
dec
cs
and
inc
dec
xor
out
push
aas
mov
mov
mov
(bad)
and
cmp
push
xor
dec
mov
jb
repnz
xor
lods
in
fisubr
push
jl
dec
inc
into
cli
out
push
sub
cmp
mov
data16
xor
and
inc
into
mov
xchg
xchg
(bad)
adc
fld
aad
sbb
out
or
xchg
sbb
rol
or
scas
mov
cmp
push
(bad)
clc
pop
sbb
mov
push
pop
xchg
ja
stos
adc
rol
fld
sbb
loope
xor
mov
cmp
pop
xchg
dec
outs
cmp
mov
int3
das
mov
mov
neg
imul
ins
dec
lods
imul
inc
inc
aaa
sahf
mov
jae
mov
pop
hlt
inc
aaa
fild
enter
lods
fdivr
and
out
(bad)
fidiv
inc
mov
repz
ret
fld
jae
pusha
mov
xor
scas
fwait
into
sbb
and
inc
mov
mov
pop
inc
pusha
aad
aaa
fisub
loop
inc
fistp
retf
std
sub
sti
mov
or
test
pop
pop
(bad)
jmp
sub
xchg
lock
mov
shr
cmp
jg
mov
sbb
xchg
pop
stc
repz
cmc
or
fs
pop
cmps
jmp
or
mov
aam
ss
mov
add
retf
loopne
(bad)
push
and
or
lea
les
xor
mov
mov
out
hlt
(bad)
stc
xor
and
repz
outs
fwait
pop
pop
xchg
adc
jne
ds
push
cmp
retf
mov
movs
cmp
inc
or
push
jnp
cmps
jne
pop
outs
cmp
out
data16
cmp
and
iret
jo
push
shl
adc
aam
mov
xor
(bad)
cs
xchg
rol
test
mov
fiadd
loope
sub
jle
xchg
adc
push
fsubr
shl
stos
jp
sbb
loop
push
in
in
mov
xor
xchg
rcr
pop
sbb
jae
aad
cmp
jle
mov
inc
dec
movs
daa
jns
call
dec
add
imul
and
inc
cmp
imul
or
cmp
sub
enter
pop
xchg
jle
aas
push
lock
fst
mov
ret
in
mov
out
repz
or
mov
inc
fisubr
gs
mov
add
xchg
cli
mov
loope
sbb
in
dec
xlat
sub
pop
mov
test
and
pop
fmulp
and
dec
imul
pop
push
out
lock
in
pop
shl
ja
sbb
sub
mov
ins
add
jmp
mov
jae
jl
dec
sbb
dec
mov
cmp
mov
or
cs
mov
lock
sub
repnz
cld
push
out
lds
sti
xor
sbb
add
add
imul
xlat
or
jnp
xor
xor
rcl
ret
icebp
and
aas
popf
js
(bad)
(bad)
test
out
jle
and
test
inc
adc
ret
retf
ds
mov
in
rol
scas
inc
xlat
pusha
fimul
adc
shl
adc
inc
mov
(bad)
cmps
jmp
mov
test
jnp
push
(bad)
cmp
adc
mov
push
adc
dec
outs
mov
stos
mov
icebp
add
outs
xchg
pop
(bad)
es
mov
jle
div
imul
push
sub
push
aas
sub
test
mov
sbb
sub
jle
addr16
pushf
sbb
add
outs
out
aam
xchg
mov
jbe
rol
fisub
push
stos
inc
or
je
arpl
and
arpl
fwait
cs
fsubrp
arpl
movs
push
jnp
inc
cmc
fimul
mov
jae
arpl
and
pop
sets
arpl
repnz
adc
add
xor
outs
ror
movs
scas
fwait
stos
mov
dec
cmp
sbb
xchg
cwde
ja
out
dec
sbb
mov
pop
(bad)
nop
enter
cmp
idiv
ins
in
dec
sub
and
push
sti
xchg
mov
mov
arpl
(bad)
arpl
(bad)
cmp
imul
xlat
outs
pop
ins
imul
xor
xor
lea
daa
retf
out
jg
mov
mov
and
not
fild
pop
mov
fs
push
inc
xchg
xor
xchg
mov
and
xchg
iret
int3
pop
(bad)
jne
push
pop
mov
icebp
(bad)
sbb
xchg
dec
mov
cmp
jecxz
clc
or
(bad)
fistp
adc
push
push
test
push
sub
ret
in
ret
pop
mov
cdq
(bad)
mov
inc
cld
popa
cmc
mov
add
std
out
into
das
outs
imul
mov
dec
leave
cli
sbb
push
cld
inc
lahf
sub
outs
ret
(bad)
mov
add
push
frstor
int3
mov
lods
ds
jnp
fadd
sahf
dec
mov
sub
push
jae
ret
cmp
fwait
push
fwait
pop
inc
jne
inc
jmp
cmc
arpl
shr
jmp
cmps
xchg
test
push
out
das
and
sbb
out
repz
int
sbb
(bad)
ror
jns
out
xor
lods
es
out
dec
and
outs
cmps
dec
mov
mov
fwait
sub
js
lock
mov
daa
(bad)
pop
ret
out
rcl
loop
(bad)
lods
fiadd
pop
rcr
and
inc
dec
cmp
sub
movs
inc
cld
mov
cwde
cmp
outs
sbb
xchg
mov
pusha
lea
xchg
xlat
or
cmps
shl
xor
mov
fstp
cmc
inc
sbb
xchg
push
push
cmps
gs
dec
adc
mov
js
lea
rcr
and
xor
add
les
aas
(bad)
or
sbb
sub
sbb
ror
jecxz
dec
xor
(bad)
in
in
arpl
xchg
in
adc
inc
loopne
in
(bad)
xchg
retf
je
jg
cdq
and
ficom
stos
ret
(bad)
push
add
mov
jns
push
cli
mov
sti
sub
adc
add
sar
dec
retf
jmpw
stos
inc
push
mov
gs
lds
cs
adc
mov
fs
cli
shr
loopne
mov
retf
jl
mov
push
scas
jle
lods
push
pop
mov
xchg
aas
in
aaa
pop
nop
fs
test
call
xor
lock
dec
sahf
and
cmp
jg
sahf
jno
or
mov
daa
mov
lods
cmp
not
imul
pop
ins
in
imul
sbb
repz
(bad)
dec
ins
out
in
jnp
pop
or
outs
mov
adc
adc
add
(bad)
fstp
repz
daa
cmps
mov
jae
scas
jge
sub
jmp
retf
stc
cmps
sti
int3
pop
lock
mov
push
repz
xor
cmp
in
add
mov
jbe
stos
call
aam
mov
inc
repz
and
sub
adc
push
xchg
pop
sub
ins
sbb
jmp
pop
mov
mov
jmp
repz
mov
push
enter
xchg
adc
mov
xlat
jecxz
mov
sub
xchg
sahf
mov
sbb
inc
cli
or
stos
call
into
inc
pop
aas
(bad)
cmps
and
or
mov
xchg
(bad)
mov
mov
sub
push
int
nop
push
nop
sub
dec
add
and
fs
jl
and
and
mov
aas
les
fild
xor
sbb
mov
mov
mov
stos
push
jno
xor
and
sub
(bad)
(bad)
into
arpl
loope
punpckhdq
or
jl
stos
or
popa
fadd
ja
cmps
dec
clc
xor
imul
(bad)
mov
jae
pop
ss
(bad)
repz
ret
pop
sub
in
popf
or
xchg
int3
xchg
ficomp
add
add
shr
lods
push
dec
movs
das
cdq
jnp
arpl
push
fistp
iret
push
push
das
xor
lds
(bad)
xchg
aam
fs
inc
jbe
aad
stos
pop
jmp
adc
or
fs
xchg
stos
xchg
add
fbld
sahf
mov
push
pop
mov
aaa
adc
dec
aam
cmps
out
aam
add
into
jae
(bad)
xchg
inc
les
mov
pop
(bad)
rol
mov
shl
lock
iret
pushf
jno
(bad)
add
sbb
and
and
leave
push
xlat
int3
ss
std
sub
(bad)
inc
pop
mov
mov
xlat
mov
push
mov
mov
imul
sub
popf
xchg
(bad)
cmp
outs
push
mov
cs
sahf
inc
mul
nop
sbb
jp
mov
fdiv
inc
das
int
ret
ret
test
and
jecxz
or
adc
int
cli
cmp
int3
nop
cs
sbb
inc
int
in
mov
jns
out
cmp
gs
jle
jb
popf
mov
rol
fsubrp
out
ror
inc
cmp
adc
mov
xor
xlat
inc
ds
movs
push
movs
or
sbb
mov
xchg
xchg
cmp
push
mov
out
into
sar
inc
iret
or
addr16
push
pop
and
or
push
adc
inc
sbb
pop
inc
adc
xor
sahf
or
mov
out
nop
ins
inc
lds
stc
jno
mov
sahf
cmp
inc
and
lea
sub
rol
inc
pusha
lods
fwait
push
jecxz
dec
xor
ins
popa
lock
xlat
pop
clc
jmp
xchg
cs
xlat
lods
pop
pop
mov
stos
sub
js
jb
mov
clc
add
sbb
pop
loop
pop
cmp
push
jmp
scas
pop
stc
push
out
dec
inc
je
ds
test
arpl
shr
add
cmp
push
mov
into
imul
not
pop
shl
pop
mov
pop
xor
imul
adc
lea
xor
push
mov
xchg
xchg
mov
out
pop
cli
rcr
aas
jne
adc
dec
(bad)
pop
repz
dec
xchg
and
xlat
loope
xlat
ret
call
mov
jnp
cmp
or
shr
inc
ins
push
out
mov
scas
mov
and
icebp
mov
test
call
pop
cmps
retf
rcr
or
jno
pop
idiv
jnp
mov
lods
push
dec
retf
adc
jl
pop
or
and
and
outs
ret
mov
push
jo
fisttp
retf
and
fld
icebp
scas
movs
inc
xor
(bad)
mov
stos
adc
sub
or
cs
mov
mov
int
add
dec
das
lods
int3
arpl
or
mov
dec
push
pop
xchg
cs
fmul
arpl
xchg
int
push
aaa
sbb
xchg
push
out
mov
mov
add
iret
adc
test
loopne
dec
pop
xor
xor
mov
mov
mov
xchg
out
mov
sbb
cld
pop
repz
in
cld
sti
cdq
push
mov
outs
jmp
mov
push
sbb
jo
and
jge
and
test
movs
fcmovnu
pop
ins
inc
and
mov
xlat
loop
int
jbe
test
jae
cdq
rol
imul
ror
ficomp
ss
pop
sbb
test
(bad)
arpl
jecxz
mov
cmp
or
js
aaa
pop
ja
pop
cmps
int
mov
inc
mov
push
mov
(bad)
push
xor
or
push
xchg
push
xchg
int3
idiv
lds
push
shl
push
pusha
fcmovb
or
popa
add
push
push
aad
or
mov
icebp
data16
dec
pop
jnp
arpl
dec
add
sbb
pop
neg
inc
mov
xchg
cmps
leave
cmps
add
and
jmp
aam
inc
cmp
jmp
inc
cmp
add
jae
es
or
inc
(bad)
scas
mov
push
dec
pop
xchg
shrd
mov
arpl
imul
push
push
xchg
hlt
lods
sbb
js
js
xor
jmp
addps
adc
lods
push
push
cmp
xchg
loopne
jge
gs
mov
xchg
adc
rep
out
icebp
in
and
push
jle
push
fild
and
fisttp
ins
or
arpl
inc
mov
es
sub
out
cld
add
loope
stc
bound
out
pop
dec
es
inc
cmp
mov
lahf
js
pop
cmc
cmp
mov
int3
jmp
ror
push
or
dec
ds
push
jmp
adc
inc
add
icebp
(bad)
pop
sahf
add
cmp
xchg
lock
stos
adc
pop
(bad)
lods
push
test
cmp
test
sub
ficom
ss
mov
sbb
in
mov
add
es
dec
mov
ret
pusha
sub
into
mov
push
mov
dec
iret
pop
fisubr
ss
sbb
out
test
aad
ins
xchg
das
clc
sbb
mov
leave
sbb
sbb
mov
mov
fst
jg
rol
pop
mov
cmps
(bad)
sar
sbb
pop
and
repz
(bad)
sub
stc
push
adc
out
push
pop
xor
es
retf
pop
js
repz
pop
imul
mov
retf
push
xor
mov
cli
lods
inc
cmovb
cmovs
mov
rol
(bad)
stos
jmp
adc
repnz
or
jmp
movs
add
mov
call
in
mov
xchg
sub
sahf
push
push
xchg
in
cmps
out
sahf
iret
icebp
fcomp
ds
push
repnz
retf
push
sub
(bad)
fbstp
icebp
call
sbb
jp
popf
fimul
out
push
mov
xchg
imul
adc
xchg
mov
das
arpl
push
scas
mov
inc
sbb
jp
mov
outs
xchg
fwait
leave
mov
mov
jns
mov
sub
data16
shl
adc
and
mov
inc
outs
push
inc
cli
inc
inc
jb
mov
push
sub
outs
fld
in
xor
jge
mov
jo
push
pusha
xlat
dec
jae
movs
xchg
push
test
(bad)
(bad)
test
lock
sub
pop
repnz
ss
lods
pushaw
hlt
scas
cmps
push
sbb
push
out
pop
cmps
int3
(bad)
sub
iret
je
jl
in
xchg
jl
and
inc
xchg
push
and
mov
pusha
xchg
mov
add
fdiv
jmp
in
mov
ins
push
imul
or
cld
fcomp
mov
mov
xor
push
(bad)
sub
push
jecxz
cmps
loope
mov
ins
or
or
ins
ficom
jge
idiv
sbb
or
or
loop
dec
(bad)
cmp
fnstcw
adc
sar
aam
into
movs
test
retf
xchg
outs
test
cdq
fisub
test
sbb
stc
pusha
push
cmps
(bad)
sti
mov
ds
jg
inc
lea
popf
gs
pop
adc
int
mov
mov
push
sbb
retf
inc
stos
adc
ror
push
mov
dec
mov
rcr
xchg
jnp
add
dec
clc
add
inc
in
dec
fcomi
xor
pop
add
addr16
cs
inc
push
jmp
push
(bad)
jns
mov
(bad)
out
xor
sub
sbb
xchg
scas
mov
fiadd
leave
jns
add
dec
sub
leave
(bad)
mov
stc
jle
aam
lock
hlt
dec
fsubrp
xchg
call
add
mul
std
cs
add
or
mov
sub
lods
pop
int3
lahf
movs
or
ds
adc
mov
outs
mov
bound
and
add
in
clc
(bad)
arpl
aad
sbb
xchg
inc
out
in
loopne
sub
clc
das
cmp
in
aas
aas
fcomp
cmps
outs
mov
jne
mov
adc
inc
(bad)
fsubp
arpl
aad
lea
inc
mov
sahf
sub
movs
dec
sahf
int3
push
xchg
fs
sbb
adc
jbe
jp
js
adc
jle
outs
repz
les
mov
cld
je
movhps
sub
sar
test
in
mov
retf
in
aaa
out
sub
cmps
pop
sbb
scas
jg
push
sar
push
repz
push
xchg
clc
mov
dec
mov
add
imul
into
pop
or
stc
int
push
sahf
ror
fcomp
xchg
out
nop
(bad)
mov
test
dec
pop
mov
nop
mov
mov
ret
inc
scas
cmp
xor
push
das
neg
addr16
mov
fs
push
imul
xchg
pop
xchg
cs
ja
div
pop
xor
push
dec
fldenv
mov
mov
jecxz
sub
lock
push
inc
cmp
dec
ins
test
dec
xor
bound
fimul
cmp
xor
lock
in
ret
ds
pop
mov
fnstenv
mov
call
pop
push
push
mov
inc
cwde
repz
xor
push
fld
add
or
jg
lahf
outs
and
inc
cmc
push
loopne
imul
retf
push
xchg
shl
and
dec
mov
or
or
test
jecxz
adc
std
cli
sbb
add
(bad)
sub
in
inc
fnstenv
push
popa
call
jg
mov
les
fidivr
iret
push
mov
arpl
arpl
jl
mov
xchg
loop
push
mov
das
sbb
mov
or
rcr
(bad)
lods
out
cmp
cmp
mov
mov
adc
mov
push
out
loope
pop
arpl
(bad)
test
ds
push
test
int3
inc
in
ds
and
inc
int
inc
xor
push
mov
shl
out
dec
fbstp
outs
cld
arpl
(bad)
shl
inc
xor
xchg
jno
ins
jge
addr16
in
retf
sub
push
xlat
scas
jns
jecxz
sbb
xor
or
cmps
out
push
nop
sbb
jne
mov
arpl
stc
sahf
cld
or
pop
and
repz
pop
inc
rol
hlt
cs
scas
int3
dec
mov
int3
add
xchg
sub
int
jge
je
ror
push
out
outs
ret
aaa
daa
js
into
and
xor
hlt
dec
int3
sub
fbld
and
sub
push
xlat
mov
push
movs
int
adc
jp
mov
mov
jo
test
add
lahf
and
push
jle
ror
dec
jecxz
or
inc
clc
ins
call
pop
in
push
fimul
popa
mov
inc
cld
sbb
sub
and
stos
xchg
repz
adc
jg
mov
sub
push
(bad)
push
xchg
jnp
sbb
popa
ret
inc
out
rcr
mov
xchg
popa
int
pushf
scas
cmps
fimul
mov
test
and
iret
push
daa
jb
cmp
imul
cmp
sub
bound
cs
xor
sti
mov
scas
push
stc
in
call
cmp
nop
ss
stos
mov
jne
and
inc
sbb
stos
sbb
inc
je
dec
imul
push
daa
(bad)
sbb
jle
jbe
stc
hlt
mov
pop
daa
icebp
cmp
jmp
add
in
and
retf
dec
or
ret
mov
dec
push
cmc
(bad)
xor
fidiv
pop
ss
cmps
mov
jmp
cs
adc
cmp
jns
dec
shl
adc
mov
lds
div
ss
push
repz
xchg
repz
popf
aad
mov
mov
adc
outs
fild
stos
out
pop
mov
adc
scas
adc
ins
mov
and
ja
lss
dec
inc
in
fbld
movs
in
arpl
les
ins
add
call
loopne
(bad)
ds
pushf
dec
dec
ins
(bad)
push
jecxz
cmps
bound
cs
aas
std
cmp
fs
sub
mov
iret
adc
mov
dec
inc
add
sbb
data16
mov
fwait
and
xchg
test
sbb
mov
(bad)
jp
sbb
enter
xchg
out
pop
lahf
in
rcl
dec
repz
rcl
or
arpl
out
adc
sar
push
push
lahf
adc
push
cmps
push
popa
scas
cmps
loope
cs
adc
fistp
movs
jge
mov
aaa
mov
out
add
ss
push
test
jl
shl
in
fisttp
je
adc
mov
ds
int
adc
adc
dec
fist
sti
pushf
push
data16
fidiv
(bad)
retf
cld
xchg
outs
or
push
gs
cmp
push
gs
stc
jae
rol
push
test
push
retf
inc
mov
test
mov
cs
inc
cmp
fild
aas
xchg
jl
push
sti
xchg
pop
hlt
pop
push
mov
cwde
out
sar
retf
imul
mov
jg
pop
push
std
repz
mov
dec
test
inc
call
push
cmp
test
sub
js
jl
pop
add
mov
jle
ds
into
shl
sbb
inc
call
and
xchg
sbb
and
inc
ret
cli
sbb
push
dec
pop
dec
cmps
and
push
ret
frstor
jp
lahf
jae
fwait
jb
rep
(bad)
cmp
and
jns
sub
jle
jno
mov
movs
cmp
imul
out
and
jmp
pop
enter
gs
loop
mov
jmp
bound
repz
mov
mov
scas
mov
pop
and
cmps
cmp
sub
test
xchg
sub
(bad)
(bad)
cmp
jecxz
ret
call
repz
sub
pusha
pop
fisttp
iret
sbb
sub
push
pusha
data16
jp
sub
ja
scas
mov
or
xchg
push
lock
sub
sub
sub
jl
arpl
xor
and
and
cmp
mov
retf
jo
pop
sar
or
mov
mov
test
loope
js
ins
ss
shr
mov
cmp
dec
iret
popa
cs
loop
push
sub
js
xor
mov
in
outs
js
adc
dec
out
jno
cmps
mov
or
cmp
imul
dec
arpl
daa
jmp
imul
push
inc
inc
inc
dec
xchg
outs
inc
sbb
xchg
jg
and
sub
jae
jne
mov
jb
fs
cmp
add
(bad)
jb
fwait
add
xlat
sub
es
pop
test
in
jbe
inc
retf
aad
cmp
pop
push
cmp
sti
je
cmps
out
or
sbb
shl
or
mov
mov
test
rol
jmp
add
movs
inc
mov
call
mov
fcomp
lods
arpl
inc
icebp
push
xor
cmp
in
add
std
repz
(bad)
sub
mov
sub
inc
pop
fdivrp
mov
les
rol
jmp
shl
loop
xchg
inc
dec
popa
push
fisubr
and
pop
add
ficom
mov
mov
aas
mov
mov
push
arpl
jns
xor
dec
call
xor
mov
jmp
mov
dec
push
jbe
das
arpl
rol
mul
mov
or
cmp
sti
mov
inc
sbb
and
mov
fidiv
push
jno
xchg
mov
mov
retf
jg
jne
and
mov
push
xlat
mov
(bad)
fcomp
mov
pop
out
add
repz
xor
pop
and
inc
retf
dec
xor
rcr
add
call
out
xor
hlt
jmp
ret
retf
mov
push
cmps
popa
jl
fwait
pop
push
outs
inc
outs
mov
ds
shr
loope
add
scas
xchg
out
pushf
scas
out
cmc
or
scas
mov
xchg
mov
jmp
inc
out
mov
out
jmp
ret
sbb
mov
xchg
push
or
jecxz
test
(bad)
fsub
lea
(bad)
das
icebp
pop
sbb
retf
leave
xchg
sub
cmps
add
add
arpl
cmps
push
sti
hlt
add
icebp
pop
out
xchg
sbb
test
cmc
xor
call
mov
inc
out
add
aas
jnp
xor
xchg
xchg
test
sub
pop
call
pminub
pop
push
nop
xchg
ja
inc
xchg
(bad)
pop
loopne
aad
sahf
ret
xor
ficom
loopne
cs
xchg
ds
xchg
or
dec
dec
aam
and
cmp
add
ret
push
xchg
(bad)
jmp
shl
and
xchg
pop
(bad)
jl
xchg
and
aas
mov
outs
sahf
mov
aad
test
in
aas
inc
and
(bad)
xchg
(bad)
mov
imul
xchg
mov
mov
mov
fwait
push
adc
rcr
adc
sahf
rcl
frstor
push
jp
mov
adc
push
adc
mov
mov
pop
xlat
arpl
jmp
add
jbe
cs
in
cs
dec
inc
mov
lods
shl
or
mov
sbb
jmp
xchg
push
fnstsw
push
(bad)
in
dec
mov
push
data16
dec
mov
push
cli
add
dec
adc
shl
arpl
mov
add
fnstsw
movs
imul
and
psllw
push
not
pmullw
mov
iret
ja
pop
adc
lods
inc
retf
mov
nop
and
or
sub
xchg
xchg
outs
call
mov
movs
cmp
aas
out
jne
out
cmp
adc
inc
xor
bound
je
loopne
push
fdivrp
stos
int
loop
inc
mov
jnp
jmp
(bad)
inc
xor
sbb
das
push
lahf
sub
add
push
push
repnz
jecxz
mov
dec
les
jge
shl
stos
push
and
push
rcr
mov
mov
cmp
(bad)
jnp
pop
jne
mov
call
into
push
popa
repnz
dec
cmp
ret
pop
cs
jo
jbe
push
stc
adc
mov
pop
cmp
jae
xor
nop
popa
not
daa
dec
repnz
and
and
sub
push
jecxz
jo
imul
test
fnstcw
sub
(bad)
in
xor
mov
std
std
adc
out
retf
inc
sub
jg
pop
mov
lds
loope
push
sahf
inc
ficom
inc
and
mov
test
jle
icebp
hlt
mov
fidiv
stos
lods
outs
mov
fist
cs
xchg
imul
dec
imul
and
mov
pop
push
mov
or
clc
mov
xchg
push
sbb
pop
add
or
lahf
xchg
movs
imul
inc
mov
pop
xor
and
jecxz
pop
fidiv
outs
loop
(bad)
lahf
push
ret
pushf
mov
bound
dec
scas
sbb
fsubr
push
call
push
pop
jmp
push
dec
push
sbb
lods
pop
mov
xchg
rol
add
xor
sbb
mov
push
xchg
pop
sub
dec
jmp
cs
cmps
push
mov
dec
pop
sub
mov
jb
jp
(bad)
and
shr
adc
aas
cmp
push
lock
inc
inc
imul
scas
mov
pushf
ds
fdivr
push
shr
(bad)
loope
(bad)
pop
sbb
adc
cmp
sub
push
push
outs
mov
cmp
(bad)
sti
mov
push
lock
mov
jbe
clc
dec
test
out
cmp
pop
sbb
mov
fsubp
mov
push
fistp
and
loopne
mov
jp
adc
rcl
jle
sub
cmps
retf
stos
test
aaa
into
ror
fwait
xor
cmps
cmp
(bad)
popf
bound
add
add
xchg
test
sub
or
mov
sahf
test
push
add
jno
pusha
adc
popf
adc
aad
jne
(bad)
int3
scas
out
push
mov
sbb
loop
cmp
pop
xchg
das
ret
call
and
in
aas
push
lahf
and
sbb
gs
jle
mov
inc
out
lods
outs
repz
add
nop
inc
je
aam
jb
pop
mov
into
loope
test
xchg
bound
mov
adc
pop
imul
call
iret
pop
clc
sbb
mov
mov
pop
mov
retf
sar
shl
bnd
cmc
and
popa
cmp
pop
iret
push
test
scas
adc
rcr
or
fwait
add
xchg
popf
into
adc
pop
mov
aam
cmp
fistp
mov
gs
adc
pop
and
lds
fidivr
int
pop
push
cmp
mov
cdq
and
xor
int3
jo
movs
add
mov
mov
inc
cmp
jae
dec
out
xor
ss
xchg
mov
scas
mov
jb
cs
imul
scas
sbb
sub
repz
hlt
sbb
mov
ret
loope
add
jmp
fcom
ins
(bad)
setae
xchg
pop
stc
mov
call
adc
stc
std
mov
out
(bad)
fwait
cmp
mov
ror
push
xchg
mov
push
mov
lock
adc
jns
lods
dec
pop
xchg
(bad)
repz
arpl
mov
not
sbb
in
loopne
pushf
int3
clc
loopne
int3
test
push
mov
fist
xor
lods
icebp
cld
das
inc
sbb
mov
fcomp
icebp
mov
mov
mov
inc
pop
inc
inc
and
mov
cmps
lods
rol
push
xchg
sbb
shl
bound
pop
mov
aaa
push
fwait
dec
xchg
inc
mov
outs
aam
nop
adc
sbb
(bad)
jg
mov
mov
cmp
pop
es
movs
mov
dec
cdq
push
inc
and
add
jmp
out
jp
ds
arpl
jnp
mov
mov
loope
mov
xchg
stos
inc
(bad)
enter
xor
sbb
(bad)
into
out
add
or
icebp
xchg
out
pop
retf
jecxz
(bad)
retf
jmp
arpl
ror
fistp
pusha
mov
rol
pop
and
cwde
daa
das
(bad)
cmps
call
cmp
or
gs
and
or
cmp
inc
adc
les
dec
fs
sbb
and
sub
lds
pop
pop
out
jmp
sar
aaa
nop
mov
mov
lock
mov
cmps
call
dec
cmp
jo
and
sub
mov
xor
pop
xor
out
ret
fcomp
call
add
push
imul
cld
test
lods
addr16
fstp
stos
mov
retf
cwde
jmp
mov
mov
in
data16
sti
jnp
mov
adc
inc
sbb
jl
push
enter
mul
sub
jg
dec
adc
xchg
daa
mov
pop
lahf
and
push
int3
ja
sub
xor
imul
inc
pop
push
jmp
sub
ret
and
mov
push
mov
dec
and
pop
bound
jo
mov
das
push
jae
inc
inc
fst
mov
fwait
out
iret
mov
add
sbb
imul
fwait
call
dec
xor
aad
popf
inc
sub
sbb
loope
shr
iret
xchg
dec
jg
mov
loopne
adc
std
dec
dec
fiadd
(bad)
mov
sbb
test
dec
inc
(bad)
sti
ret
mov
inc
or
shl
cmps
mov
repnz
sub
jns
ins
push
scas
pop
mov
cmp
pop
cwde
xor
ss
stos
sub
push
aam
(bad)
aad
xor
jg
mov
sub
sub
inc
stos
cmc
into
push
rcr
in
(bad)
xchg
aas
int3
cmp
das
jnp
adc
cld
ss
mov
(bad)
jecxz
mov
movs
scas
mov
cmp
xchg
push
out
dec
rol
sar
ret
hlt
sub
and
ret
inc
cmps
xor
cmp
sbb
stos
inc
adc
sub
cmp
sbb
xchg
je
je
ss
movq
jbe
sahf
cmp
jns
(bad)
shl
push
bound
sahf
ins
xchg
jle
gs
mov
clc
outs
repz
mov
lahf
clc
retf
xchg
loope
cmp
jno
repnz
leave
neg
dec
pushf
push
cmps
stos
push
push
mov
xor
add
push
fild
mov
jg
ror
cmps
dec
or
pop
(bad)
lods
jo
xor
lock
aas
stc
fnsave
mov
sbb
retf
jno
mov
cmc
pop
int
lea
mov
dec
inc
dec
daa
push
xchg
retf
or
fwait
jbe
rol
jmp
pop
pushf
in
dec
jecxz
loop
mov
stos
out
in
mov
xchg
and
popf
nop
add
test
daa
xor
out
push
mov
or
sysexit
nop
pop
scas
leave
test
dec
inc
enter
fiadd
mov
repz
xchg
jmp
jl
push
ror
pop
mov
ss
ds
hlt
movs
lds
retf
std
in
loopne
(bad)
ds
push
fld
aaa
jle
btr
outs
retf
nop
repz
ja
push
out
ret
repnz
mov
cwde
je
push
mov
sti
js
adc
push
cmp
ins
cs
add
mov
xor
pop
mov
pusha
fwait
out
mov
cmp
mov
push
mov
out
mov
and
xor
aas
sahf
xor
test
and
inc
and
xor
mov
adc
add
repz
inc
aam
scas
cdq
mov
jmp
jle
push
test
lea
or
xchg
dec
aaa
test
and
pop
push
pop
imul
cmp
jno
fisubr
xor
mov
add
adc
pusha
inc
add
shr
and
xor
adc
scas
stos
ins
scas
inc
ficom
enter
xchg
inc
in
mov
xchg
neg
push
push
cmp
enter
call
xor
adc
cmc
inc
mov
mov
cli
push
xchg
ret
(bad)
and
repz
fcmovnb
xchg
in
inc
fld
iret
add
pop
in
adc
(bad)
and
pushf
sub
inc
inc
or
mov
add
push
pop
adc
pop
push
mov
mov
in
xor
adc
pop
xchg
mov
mov
test
shl
push
fdiv
xor
adc
lock
repnz
sbb
sbb
repz
and
sub
ret
mov
shr
cmp
mov
dec
push
adc
mov
pop
pop
add
add
lods
adc
or
mov
xchg
or
loope
(bad)
add
data16
jl
adc
imul
ja
and
adc
jmp
fstp
repz
fldenv
jno
dec
jle
test
mov
lods
fild
push
mov
cmp
jns
dec
out
mov
lods
jg
mov
and
sar
mov
and
push
mov
out
sub
push
jb
xchg
fcmovnu
or
outs
cdq
push
push
mov
xchg
or
mov
adc
push
cdq
push
mov
loope
(bad)
(bad)
mov
pop
push
mov
inc
pop
scas
cmp
call
xor
in
xchg
inc
add
mov
push
pop
test
mov
enter
loopne
(bad)
rcr
cmps
or
out
push
xor
mov
les
xchg
adc
shl
mov
retf
xchg
movs
jno
push
mov
ret
jmp
xchg
xchg
iret
and
push
xchg
mov
push
scas
or
jne
sub
imul
sahf
inc
int
or
jmp
call
mov
adc
mov
sub
push
mov
(bad)
(bad)
push
mov
cmps
jecxz
je
mov
mov
add
push
push
sbb
ja
or
cmp
xchg
pop
sar
mov
pop
outs
sahf
push
mov
lahf
and
fwait
jo
jl
loopne
jge
inc
xchg
test
jnp
mov
jg
xchg
iret
mov
inc
mov
outs
out
xor
movs
lods
push
cmp
jge
push
inc
lea
mov
in
data16
rol
shl
out
idiv
or
ins
loope
mov
xor
and
cmps
pop
pop
jo
push
and
xchg
dec
mov
fimul
cwde
dec
outs
aas
xchg
(bad)
scas
push
lods
jne
xor
and
or
cmp
fisubr
std
(bad)
xlat
pop
or
retf
sub
out
push
jbe
jmp
out
inc
sbb
loopne
in
cmps
nop
out
inc
inc
adc
das
repnz
out
xor
xor
dec
mov
test
dec
movs
sbb
adc
hlt
jmp
inc
fidivr
out
or
mov
push
dec
mov
pop
test
pop
ret
pop
inc
xor
popf
push
jb
push
sub
mov
xchg
jle
and
or
mov
call
sbb
xchg
pop
mov
pop
cli
adc
leave
inc
adc
push
xor
push
adc
inc
inc
pop
sahf
xchg
fdiv
sbb
xchg
xchg
fld
push
call
push
add
out
xchg
push
mov
mov
(bad)
imul
push
pop
nop
jbe
(bad)
bound
mov
lock
add
mov
jae
(bad)
lods
(bad)
icebp
je
mov
fwait
mov
stos
ret
mov
jo
(bad)
fsubr
sahf
jbe
out
fwait
lock
xor
dec
movs
ficom
(bad)
test
pusha
addr16
inc
nop
call
out
or
dec
mov
xchg
pop
es
jnp
xchg
sahf
cld
adc
inc
fcmovnb
(bad)
xor
inc
xchg
mov
dec
cwde
(bad)
in
lock
push
ficom
xchg
ret
or
int
xor
outs
pop
enter
pop
shl
lods
jno
popf
lahf
in
sti
cmp
in
xor
and
gs
out
gs
xor
das
pop
jl
push
jo
(bad)
pushw
stc
repnz
or
rcl
rcr
stc
cmp
test
stc
xor
jg
sahf
mov
jmp
mov
jae
adc
mov
stc
(bad)
pop
adc
jl
ret
rol
mov
xor
lahf
pushf
mov
(bad)
pop
lahf
push
mov
xchg
sbb
pop
sub
jno
dec
or
sbb
(bad)
das
out
imul
inc
lahf
adc
(bad)
push
xor
nop
jae
out
(bad)
mov
mov
bound
mov
cmp
aas
adc
jle
jle
mov
or
sub
jb
push
mov
shr
inc
sbb
pop
mov
dec
outs
leave
or
pop
call
sub
xor
scas
aaa
cmp
int
clc
test
popf
(bad)
inc
pop
inc
add
cs
arpl
and
repnz
aaa
and
mov
lock
pop
sub
inc
retf
jae
cmc
(bad)
lock
cmp
mov
retf
jb
and
push
js
cld
lahf
ss
repnz
xor
xchg
fist
dec
cmp
inc
jp
push
sub
stos
adc
and
ror
div
stos
call
gs
push
in
hlt
ins
out
pop
mul
jb
push
ds
retf
cmc
(bad)
and
push
dec
pop
inc
mov
dec
fisttp
cmps
imul
dec
pop
sar
fcomp
das
push
jbe
lock
xor
and
jne
mov
cmp
mov
fimul
cmp
rcr
mov
ror
dec
push
xlat
adc
popf
xchg
scas
inc
and
loope
xor
dec
xlat
xchg
retf
les
ret
sahf
in
out
inc
scas
jns
pop
push
cmp
pop
je
repz
xchg
pop
dec
push
scas
cmp
push
jp
iret
jb
retf
mov
sbb
add
mov
repz
aas
mov
ror
sub
ja
mov
mov
icebp
mov
pop
xchg
js
and
cwde
into
mov
cmps
add
scas
repnz
arpl
push
aam
clc
in
jecxz
aas
fs
xor
sub
cmps
fimul
add
adc
mov
mov
imul
pop
xchg
rcl
int3
loop
imul
daa
xchg
add
cmps
les
jne
sub
xlat
adc
cmp
loop
fldenv
jl
jg
call
inc
pop
pusha
push
test
sub
mov
cmps
out
push
mov
aad
(bad)
jle
mov
xor
jne
and
aas
retf
fldcw
xchg
inc
out
inc
retf
sub
into
push
fnstsw
out
stos
mov
repz
int3
cmp
push
mov
mov
jno
sbb
test
aaa
psrlq
repnz
add
jg
ret
pop
hlt
jns
sbb
test
cmp
xchg
dec
cmp
arpl
pop
pop
sti
xor
xor
dec
mov
aaa
jns
rcl
leave
push
adc
add
shrd
jl
ins
cdq
lahf
mov
sbb
jne
iret
xor
mov
mov
xchg
add
mov
sti
retf
xor
(bad)
(bad)
adc
pop
jl
or
xchg
jg
or
lahf
and
push
jno
cmp
ss
xchg
dec
inc
xchg
sub
je
mov
inc
cmp
dec
cdq
push
add
mov
out
fist
fwait
adc
jo
inc
push
retf
push
retf
adc
mov
js
mov
ror
jl
and
dec
mov
and
push
fistp
pop
and
or
ss
xchg
push
inc
in
or
mov
mov
sbb
retf
sbb
movs
mov
retf
push
push
ins
adc
call
jno
fisubr
xchg
and
out
push
jns
aaa
xchg
add
jmp
pop
inc
add
add
cli
mov
int3
ret
retf
push
(bad)
into
cs
jmp
fisub
mov
shl
aas
push
stos
je
in
dec
add
cmp
inc
jl
mov
int3
cmps
jo
inc
xchg
loope
push
push
pop
mov
(bad)
lds
scas
in
loope
and
push
in
inc
cld
call
outs
les
jp
ds
inc
inc
fidivr
mov
pushf
lock
jae
movs
fisttp
sbb
or
enter
std
inc
push
cwde
iret
call
inc
test
push
jnp
into
adc
rol
jb
mov
mov
pop
jg
inc
bound
pop
pusha
ja
shl
(bad)
xlat
add
ret
push
cmps
jne
nop
cmps
fstp
imul
mov
xchg
out
pop
scas
xor
and
sub
xchg
fsub
fisttp
jo
jmp
(bad)
add
pop
mov
dec
or
inc
cmovnp
push
bound
sub
retf
dec
iret
inc
iret
cmp
or
sub
stos
jb
pop
xchg
pop
xlat
add
aam
cmps
in
fcom
arpl
out
sar
fmul
ds
dec
push
cli
fwait
out
xor
js
stos
jnp
dec
repnz
add
dec
(bad)
xchg
cmp
dec
into
mov
fidiv
lahf
ins
fadd
gs
pop
cmps
jge
retf
mov
adc
mov
add
pop
xor
jmp
mov
add
repz
push
arpl
stc
dec
int
xor
cmp
ret
ds
mov
pop
int
inc
std
pop
outs
test
inc
pop
out
scas
xchg
jle
loopne
xchg
sub
xlat
inc
popa
ss
out
mov
push
iret
rol
push
cmp
cmp
push
out
loop
int3
lock
sahf
adc
imul
sub
cdq
add
(bad)
jge
inc
fs
sbb
or
dec
jo
mov
fimul
arpl
cmp
fcom
repnz
out
ja
aas
bound
sar
jmp
push
mov
in
popa
mov
sbb
int3
and
push
add
push
outs
mov
mov
push
dec
out
shr
xchg
cmp
inc
dec
ins
daa
outs
xchg
xor
icebp
jl
ins
mov
repnz
mov
stos
mov
pop
popa
add
es
aad
dec
cmp
xor
and
jae
jle
aam
(bad)
lods
rcr
popa
aaa
icebp
popa
out
xor
sbb
mov
retf
sar
mov
inc
mov
mov
mov
fstp
fbld
adc
add
mov
jp
inc
cmp
daa
add
mov
es
lahf
ja
cdq
inc
dec
ins
add
arpl
faddp
mov
idiv
and
or
popa
mov
mov
call
xchg
pop
pushf
xchg
mov
loop
iret
jo
dec
mov
mov
lea
(bad)
loop
mov
jle
cld
mov
out
stc
cwde
ror
mov
lds
mov
xchg
inc
push
sbb
and
ins
(bad)
aas
(bad)
fnstsw
mov
xor
sub
mov
inc
sbb
jne
pop
xor
xor
clc
push
pop
fiadd
xchg
repz
pop
push
xchg
shl
dec
out
pop
and
aam
shr
inc
mov
sbb
addr16
adc
sbb
mov
(bad)
(bad)
dec
rcl
scas
mov
shl
sub
test
sub
loop
adc
arpl
mov
addr16
mov
push
test
jae
cmp
lods
mov
xchg
leave
mov
addr16
mov
sbb
or
outs
mov
ret
nop
xor
mov
pop
jae
iret
xchg
jmp
loopne
adc
jle
enter
dec
movs
mov
cmp
mov
or
cmp
fstp
sbb
inc
pop
fisub
sub
gs
and
ds
inc
lea
mov
pop
push
sub
or
and
repnz
cmp
mov
scas
sar
frndint
rcr
(bad)
push
rcl
pop
mov
jmp
pop
fdivr
ror
adc
adc
pusha
fld
push
xor
aam
mov
push
adc
jecxz
sti
aas
jmp
adc
jae
mov
jp
std
call
leave
mov
arpl
or
mov
and
outs
inc
pop
xchg
push
in
scas
pop
lods
pop
int3
pop
inc
sbb
xchg
mov
out
sbb
iret
dec
add
lahf
frstor
or
fiadd
cdq
int
out
jnp
(bad)
xchg
pop
sar
inc
ja
sbb
inc
ret
inc
jmp
(bad)
arpl
add
or
je
or
dec
cld
cs
mov
dec
push
ret
adc
frstor
in
xchg
jle
aas
enter
mov
dec
push
popa
(bad)
mov
mov
(bad)
pusha
(bad)
sahf
jae
adc
jl
dec
xchg
sub
daa
push
mov
push
xchg
jecxz
imul
sahf
fs
in
out
sbb
mov
and
dec
push
sbb
arpl
je
ins
jns
push
icebp
xchg
push
xchg
and
repnz
stos
inc
cmp
push
and
xor
into
add
lea
rcr
jno
sti
xor
bound
cmps
fcom
adc
das
sbb
cmp
sub
and
scas
cmc
mov
loopne
add
jmp
mov
jg
mov
push
sub
mov
pop
push
add
mov
sub
inc
jecxz
push
je
xchg
or
jmp
sub
pop
mov
lds
xor
in
mov
mov
ins
sub
inc
in
(bad)
int3
mov
pop
sub
cmp
mov
jae
ss
je
inc
xlat
cmp
lock
bound
jmp
and
mov
icebp
mov
into
adc
jp
hlt
sub
aaa
into
stc
sahf
jae
pusha
cld
out
mov
add
ins
push
mov
mov
lds
push
imul
call
aam
int3
cld
fist
sahf
sti
adc
xchg
lock
repz
inc
dec
repz
mov
fwait
stos
leave
scas
inc
jmp
adc
inc
outs
mov
gs
push
inc
mov
fistp
add
aam
(bad)
into
mov
outs
push
fist
jge
push
ret
std
mov
in
sbb
sub
jo
mov
cmp
pop
xchg
ins
pop
fdivr
mov
sbb
outs
fwait
iret
imul
popf
es
push
sub
jbe
movs
daa
out
mov
mov
inc
xor
mov
mov
out
and
pop
outs
add
test
ret
or
dec
scas
jle
mov
push
cmc
scas
dec
fidivr
in
cmp
sub
push
jmp
push
jnp
mov
adc
aad
aad
inc
mov
(bad)
out
nop
or
dec
push
inc
iret
pop
add
call
jmp
repnz
repz
and
shl
push
mov
mov
xchg
mov
mov
out
push
adc
add
pop
leave
out
call
scas
ret
push
mov
and
xchg
jae
outs
je
popa
jnp
fwait
aas
adc
pop
je
push
inc
fidiv
jp
mov
xchg
jae
arpl
push
mov
jbe
adc
loop
(bad)
aas
add
dec
es
mov
stos
xchg
mov
jmp
dec
sub
mov
rol
xchg
cli
and
inc
lock
mov
push
inc
dec
lea
cmp
or
lods
(bad)
scas
mov
test
push
mov
in
loop
and
in
xchg
jae
ror
push
mov
mov
jmp
addr16
push
dec
pop
sub
cs
ficomp
push
inc
inc
add
mov
lea
(bad)
std
and
in
shl
xchg
mov
cmp
inc
fs
sti
push
dec
mov
push
inc
fsubrp
pop
push
adc
pop
xchg
jge
sub
push
mov
int
or
call
ret
arpl
out
(bad)
add
mov
cmps
icebp
jge
lods
sbb
inc
clc
add
scas
xor
pop
jns
add
cmp
retf
adc
inc
xor
pop
push
mov
fs
or
test
xor
mov
(bad)
fld
xor
jbe
frstor
push
rcr
out
repnz
out
cmp
ins
and
pop
(bad)
ficom
lds
mov
daa
dec
lods
fimul
daa
rol
lods
mov
scas
and
dec
outs
push
push
push
adc
jmp
cli
sub
xor
mov
loop
or
mov
mov
call
into
xor
sti
xor
mov
cmp
add
ja
push
sbb
(bad)
cmp
cmps
push
clc
(bad)
mov
jmp
inc
mov
sar
jmp
push
push
and
fild
add
dec
in
sbb
ret
into
jno
adc
add
xor
out
dec
inc
mov
(bad)
scas
adc
idiv
stos
xor
jb
jmp
add
mov
pushf
xor
jmp
das
shr
add
(bad)
sub
and
popa
xchg
das
enter
jecxz
adc
out
cmc
mov
out
stos
loop
fidiv
adc
pop
and
adc
ins
dec
shr
ret
sub
inc
pop
fisubr
or
neg
add
push
lea
nop
test
xor
xlat
dec
ror
outs
rcl
scas
clc
mov
dec
in
or
ret
push
(bad)
in
xchg
sbb
xchg
leave
in
retf
push
mov
mov
sbb
stos
stos
sbb
scas
in
stos
jl
push
fidiv
scas
and
cmc
jle
sbb
shl
cli
sar
cmp
xor
popf
xchg
cmp
pushf
cmp
stos
sar
add
mov
je
int
xor
data16
sbb
push
jmp
setns
scas
js
jge
adc
and
sub
jno
jmp
dec
xchg
ins
stc
repnz
mov
cwde
mov
pop
sar
test
call
bound
pop
leave
mov
out
pushf
push
cmp
xor
xor
jns
dec
rcr
jecxz
lahf
cli
inc
dec
mov
mov
sub
dec
add
cmp
jb
test
add
xchg
push
add
shl
sbb
jae
into
xlat
mov
pop
mov
sti
mov
xchg
mov
dec
xor
jae
fild
iret
adc
cli
out
sbb
jle
aam
out
div
in
sub
arpl
cdq
inc
add
xor
xchg
xchg
aad
dec
mov
outs
xchg
outs
cs
xor
mov
hlt
ret
or
in
shl
xchg
jb
pop
fwait
push
in
and
mov
xor
pop
push
and
jg
adc
out
fwait
ds
push
pop
(bad)
push
dec
cmps
add
push
popa
mov
cmc
mov
repnz
or
xor
test
ror
adc
pop
mov
mov
jp
ficomp
sub
ja
sub
sbb
xchg
es
jge
rol
mov
mov
adc
loope
push
out
pop
das
adc
fwait
push
push
icebp
lods
icebp
or
stos
push
popf
ret
mov
jg
scas
repnz
mov
pop
mov
pop
inc
dec
adc
inc
ret
sahf
jge
cmp
mov
xchg
fidiv
cli
gs
mov
mov
push
jb
sub
ins
and
jnp
pop
mov
arpl
sbb
cwde
cmp
nop
fcmovb
pop
xchg
dec
repnz
shl
push
shl
imul
inc
jns
mov
int3
clc
cmp
xor
push
sti
(bad)
push
jecxz
mov
mov
mov
lods
inc
jmp
add
ret
push
(bad)
shl
je
lds
dec
sbb
xchg
nop
or
push
fiadd
int3
mov
jl
pop
mov
stos
ins
or
ror
movs
lds
add
aaa
xchg
jns
iret
jmp
daa
out
adc
pop
or
jmp
mov
mov
add
adc
xor
fcmovu
and
(bad)
repnz
xchg
dec
push
sbb
push
ss
jns
add
cmps
ja
and
jmp
cs
in
shr
mov
push
sti
ja
sbb
mov
shl
dec
jmp
and
nop
test
dec
mov
jge
gs
popf
pop
mov
lea
shr
xor
outs
mov
imul
ret
xor
push
repnz
rcl
idiv
(bad)
and
int3
mov
repz
bound
sub
enter
mov
mov
dec
jecxz
add
out
mov
jbe
xchg
inc
mov
mov
mov
adc
mov
adc
push
mov
imul
dec
mov
xchg
add
push
add
and
mov
loop
iret
ds
lea
sahf
push
scas
add
and
aas
lock
adc
jecxz
out
sbb
int
jg
push
dec
push
out
loope
add
add
jmp
pop
mov
fisubr
cmps
in
outs
or
mov
inc
xor
dec
ret
out
loopne
outs
iret
arpl
add
push
xchg
(bad)
pop
jle
das
mov
pop
sub
in
jae
repnz
adc
sub
adc
ins
or
xor
das
add
iret
rcl
cmp
aaa
xchg
dec
mov
mov
inc
(bad)
push
pop
jno
push
out
int
lods
out
mov
push
add
fdivr
(bad)
sbb
add
dec
pusha
lahf
loop
lahf
xchg
jae
fidivr
in
sbb
call
mov
aam
jb
mov
icebp
scas
push
jecxz
pop
mov
xchg
adc
xor
or
adc
adc
add
ror
icebp
mov
push
xlat
add
or
ss
popa
cmp
fimul
or
jnp
mov
push
std
into
pop
xor
gs
pop
(bad)
je
aaa
push
mov
imul
clc
jle
ret
mov
push
clc
adc
mov
mov
push
in
pusha
jns
push
mov
inc
aad
mov
out
mov
in
fistp
dec
xchg
test
iret
repnz
int
aad
mov
mov
inc
imul
and
(bad)
out
jge
jg
aam
and
leave
mov
mov
pop
adc
dec
pop
scas
dec
push
mov
das
call
fiadd
dec
jae
arpl
mov
xor
pop
bound
js
icebp
inc
mov
lods
icebp
outs
hlt
scas
es
sbb
imul
mov
test
fcom
dec
or
mul
sub
sbb
jecxz
in
jmp
and
adc
out
pushf
mov
push
int3
inc
fadd
mov
add
push
inc
lods
push
es
push
adc
xor
mov
out
xlat
call
scas
(bad)
mov
sbb
inc
mov
pop
ss
mov
adc
test
adc
xor
inc
pop
cmp
mov
cmps
mov
ret
mov
dec
pusha
out
dec
dec
retf
xor
mov
fmul
pop
mov
lock
(bad)
stos
mov
inc
movs
(bad)
int3
pusha
clc
pop
inc
repnz
sbb
adc
jle
mov
cmps
dec
dec
scas
mov
scas
sub
and
jb
inc
and
jmp
ss
mov
or
cmp
repnz
stos
icebp
int3
stos
push
mov
sub
mov
mov
dec
and
fsubr
mov
and
loopne
inc
push
push
xchg
xchg
nop
push
inc
sbb
mov
pop
cmps
ds
push
inc
out
xchg
cmp
cmp
mov
arpl
ret
stos
cmps
fisub
retf
bndldx
mov
addr16
add
adc
scas
pop
lahf
push
imul
dec
fwait
dec
adc
push
add
idiv
retf
or
dec
mov
sub
aad
out
(bad)
or
mov
add
scas
or
sub
cs
inc
retf
mov
mov
mov
(bad)
movd
es
daa
push
dec
xor
xor
ret
sub
ins
sar
addr16
xor
js
cmp
add
push
mov
gs
and
lods
cmc
cwde
mov
fist
test
lods
sbb
adc
jmp
xchg
adc
sub
fwait
pop
and
and
sahf
int3
cpuid
adc
fidiv
mov
push
mov
ret
cmp
out
sbb
pop
loop
stos
ins
ret
loop
cmps
repz
(bad)
outs
mov
sub
paddd
sub
lods
mov
push
dec
scas
nop
scas
or
pop
cwde
mov
add
outs
imul
in
ret
jae
dec
mov
add
dec
push
rcr
sub
xor
mov
mov
dec
pushf
fs
jmp
ja
movs
mov
push
sahf
cmp
adc
repnz
outs
jne
outs
mov
xchg
scas
loopne
mov
push
pop
mov
rcl
mov
cdq
imul
cmps
ss
jne
adc
add
fs
mov
lods
dec
xchg
push
mov
xor
pop
add
jl
sub
fs
out
adc
icebp
ds
push
or
cs
adc
lds
dec
sar
add
xor
test
stos
pop
push
(bad)
pusha
pushf
sub
and
jo
fmul
sahf
das
out
jnp
jno
dec
retf
jbe
cs
mov
sbb
scas
mov
jno
into
(bad)
out
add
arpl
cs
xlat
pop
and
sub
mov
lock
cmp
sti
movs
xchg
ja
sub
pop
mov
aaa
cmp
aam
loopne
inc
push
loopne
xchg
fcomp
sbb
out
jle
xor
sub
dec
loope
sub
lea
div
adc
dec
and
xor
inc
lds
ja
jge
dec
loope
cmp
mov
cmc
push
cmc
or
js
or
add
sbb
std
mov
(bad)
jge
cmp
ins
dec
out
loopne
fnstcw
pop
pushf
dec
or
ret
pop
mov
and
mov
push
call
pop
ds
cmp
ficom
fild
aas
bound
hlt
inc
or
std
push
sub
sub
ins
mul
adc
jae
arpl
pop
daa
fiadd
mov
mov
mov
outs
or
ret
cdq
stc
jns
and
std
xor
loop
movs
das
and
shl
stos
pop
push
jnp
pop
out
mov
jmp
mov
adc
dec
dec
mov
sahf
shr
sbb
ins
dec
out
sub
(bad)
fsub
lahf
loop
adc
inc
cmp
lods
fild
test
jnp
sar
dec
pop
imul
sub
jecxz
out
int3
or
div
test
rcl
pop
call
mov
mov
dec
lods
into
out
retf
fbld
sar
sbb
jno
test
in
mov
and
and
inc
pop
enter
lahf
pop
jmp
pop
adc
mov
mov
mov
shl
pop
xor
mov
dec
mov
repnz
jmp
mov
(bad)
sbb
(bad)
jmp
push
mov
cli
push
lahf
cdq
mov
jg
jle
sbb
xchg
sbb
xchg
scas
stos
outs
hlt
sub
ror
(bad)
adc
fwait
or
sahf
dec
mov
and
test
dec
fild
dec
ins
enter
lods
repnz
and
repz
xor
pop
inc
les
jae
out
sar
cmps
mov
jle
xchg
sub
dec
lods
lea
outs
lock
iret
(bad)
addr16
rcr
adc
inc
ins
jl
ins
xchg
cmp
inc
mov
push
jle
add
test
nop
stos
repnz
pop
imul
xchg
gs
mov
xor
fucomip
arpl
sti
movs
(bad)
ror
dec
sar
nop
lods
mov
lea
adc
sahf
scas
add
shr
lahf
mov
adc
fimul
mov
add
xor
mov
iret
adc
jae
fistp
pop
cmp
mov
mov
mov
sbb
pop
cdq
ret
cs
and
ds
push
aam
push
sub
test
cmp
inc
push
pop
into
mov
inc
mov
data16
xor
xor
xor
or
sti
inc
sub
stos
mov
jno
lahf
dec
xor
(bad)
scas
mov
jnp
out
jecxz
mov
arpl
shr
scas
out
bound
inc
inc
gs
pop
push
movs
push
xchg
outs
ret
push
clc
loope
xor
push
(bad)
test
xchg
out
jbe
scas
jne
scas
mov
xor
xor
mov
push
mov
push
rcr
mov
mov
xchg
fwait
mov
(bad)
outs
and
mov
sub
jle
jle
outs
sub
movs
repz
lds
push
shr
or
gs
ds
lds
dec
or
mov
pop
jecxz
jl
lahf
sahf
or
repnz
add
push
add
aas
push
arpl
mov
xchg
jb
test
scas
cmc
pop
xlat
shl
and
push
stos
(bad)
fidiv
jno
out
je
ins
outs
(bad)
ficomp
and
scas
ret
dec
and
ret
cmp
inc
repnz
or
scas
sahf
bound
pop
add
imul
jae
outs
rol
aaa
xor
into
call
cmp
and
jae
imul
(bad)
cs
sar
jg
jb
loope
out
sti
je
pop
mov
jae
mov
scas
pop
(bad)
sub
scas
arpl
jp
(bad)
jg
fild
mov
xchg
popa
dec
(bad)
arpl
out
repnz
add
jno
out
fild
adc
cmc
stos
cld
ret
hlt
dec
xchg
jae
dec
jbe
scas
dec
fidiv
into
sub
mov
add
jnp
iret
pop
fiadd
loope
bound
cs
out
repz
mov
(bad)
cmp
pxor
fs
ret
xchg
xor
gs
xchg
sahf
pop
push
shl
lods
jg
scas
mov
push
sbb
ss
out
rol
jg
out
push
push
inc
push
ins
inc
scas
mov
repz
jno
xor
(bad)
icebp
loop
jle
push
out
cwde
fistp
mov
jae
xor
mov
mov
ficom
adc
fs
(bad)
fiadd
xor
shl
and
stos
push
movs
mov
mov
out
aas
rdmsr
js
add
hlt
xor
in
cdq
cmp
sbb
repz
xchg
mov
dec
mov
jle
sub
adc
test
in
sahf
popa
stos
push
js
call
push
out
add
sub
bound
scas
add
cs
mov
jb
xchg
mov
dec
mov
mov
inc
adc
scas
gs
push
cmp
mov
inc
sar
mov
dec
lea
lock
int3
sub
ja
sub
movs
mov
push
movs
sub
lahf
(bad)
out
push
mov
pop
sub
(bad)
(bad)
jmp
ret
mov
xor
mov
mov
dec
adc
lods
and
out
and
add
dec
xor
out
xchg
mov
sahf
mov
je
push
add
(bad)
xor
and
or
cmp
push
jbe
sub
mov
or
cdq
ret
sub
push
adc
inc
clc
inc
mov
dec
scas
das
inc
scas
push
outs
jle
inc
mov
lahf
int
inc
jle
ret
sbb
mov
int
jae
mov
scas
mov
repz
pop
lahf
cli
test
cmp
repnz
add
pop
push
pushf
jg
popa
mov
ss
sub
jmp
inc
ret
pushf
mov
inc
sub
rcr
inc
lea
xchg
mov
mov
loope
pusha
repnz
xor
mov
shl
jmp
(bad)
les
frstor
mov
jmp
sti
inc
mov
mov
cmp
dec
inc
out
int3
inc
add
or
cmp
fistp
nop
fsub
mov
(bad)
mov
mov
sti
push
loopne
call
sbb
jmp
xchg
pcmpgtw
xor
jmp
test
mov
jecxz
inc
pop
push
addr16
sbb
iret
(bad)
fucomi
ds
add
loopne
xchg
das
xchg
cwde
retf
jns
mov
movs
rcr
fadd
arpl
jae
in
add
add
xor
xor
fild
addr16
mov
mov
dec
mov
stos
jecxz
aas
das
scas
repnz
out
push
(bad)
aas
(bad)
or
jle
call
add
cmp
push
das
ret
add
leave
fisttp
test
fwait
pop
je
xchg
scas
inc
xchg
sar
call
out
(bad)
out
fild
shr
aam
das
jge
outs
dec
pusha
mov
scas
inc
into
das
fisub
das
(bad)
add
out
or
test
sub
inc
xchg
je
mov
out
repnz
arpl
jecxz
and
jecxz
sub
push
scas
ja
mov
outs
popa
inc
lods
inc
call
shl
call
loopne
fsub
sbb
ret
mov
js
mov
inc
out
sub
out
enter
das
pop
cs
outs
sbb
lds
xchg
jae
mov
and
jmp
xor
ret
cmp
mov
and
and
jg
scas
push
aas
arpl
xchg
jae
inc
mov
add
and
retf
mov
lahf
lods
adc
xchg
xchg
test
pop
push
movq
cmp
iret
adc
xor
jnp
add
pop
inc
scas
(bad)
retf
cmp
push
lahf
xchg
and
adc
xchg
xor
blcfill
fbstp
xor
stos
outs
arpl
lods
clc
dec
mov
sbb
cs
into
sahf
inc
jecxz
adc
jae
cmp
jb
arpl
mov
mov
aad
daa
adc
dec
ds
ret
inc
lods
pop
popf
inc
and
mov
mov
xchg
dec
inc
mov
icebp
pusha
push
rcr
pop
loop
dec
jecxz
hlt
inc
outs
into
sub
cli
push
dec
dec
xchg
dec
pop
test
inc
mov
xchg
cld
and
dec
pop
or
mov
or
ja
fild
sbb
(bad)
clc
add
push
jb
jbe
xchg
not
mov
aaa
dec
push
jg
(bad)
ficom
sub
mov
add
inc
out
loop
int
out
int3
(bad)
out
add
or
mov
mov
jnp
pop
out
or
ins
push
and
or
jmp
(bad)
pop
pop
nop
ins
sbb
mov
fcom
xchg
into
adc
sub
xchg
out
test
push
add
dec
(bad)
jne
in
cmp
lods
xchg
mov
xchg
shl
dec
pop
sub
retf
out
jo
sub
sub
lock
sti
lds
ins
mov
mov
das
call
fwait
loopne
adc
das
bnd
push
pushf
jb
mov
fistp
stos
pop
pop
jg
sub
xor
out
(bad)
rcl
cmp
mov
stc
inc
outs
ret
outs
mov
mov
mov
add
outs
or
jecxz
inc
jae
push
fisubr
pop
add
adc
shr
clc
push
and
mov
aad
mov
xchg
adc
inc
mov
sahf
sbb
fisubr
sbb
fcom
nop
into
into
aam
inc
push
jle
lods
adc
call
cmp
push
repz
and
mov
add
pop
mov
ds
pop
repz
sar
and
mov
mov
mov
pop
mov
mov
ret
das
or
pop
ss
outs
das
sbb
ja
scas
das
mul
jle
sar
push
inc
ret
mov
in
inc
push
jg
add
outs
ja
jae
adc
das
das
jbe
out
cmps
cwde
adc
pop
movs
(bad)
jmp
arpl
add
mov
scas
inc
xchg
(bad)
(bad)
cld
push
int3
inc
cs
add
add
xchg
jmp
push
pop
ds
fwait
std
xor
sbb
adc
cs
sti
push
and
dec
pop
jecxz
sbb
xor
push
or
sbb
ds
add
dec
dec
inc
add
adc
popaw
jmp
out
mov
retf
call
(bad)
out
movs
and
outs
sub
xor
jge
cs
fistp
xchg
ror
sbb
inc
mov
jecxz
loopne
mov
sub
jnp
xor
mov
dec
aam
les
pop
mov
mov
aas
cmp
imul
fucomi
jno
and
(bad)
mov
outs
dec
ins
(bad)
pop
pop
outs
push
es
add
scas
in
adc
out
or
pop
inc
dec
push
(bad)
xchg
mov
iret
aaa
push
inc
xor
lock
lds
psllw
and
shr
jp
xlat
out
pop
mov
sub
add
(bad)
add
fldenv
fsubr
fs
shr
and
dec
mov
dec
ret
loop
jle
out
not
add
movs
ja
cdq
test
mov
mov
and
(bad)
xor
mov
mov
xchg
pop
ds
rcr
inc
pop
mov
pop
iret
xchg
pmaxsw
fdivr
daa
cmp
adc
aas
aas
test
push
push
mov
and
loop
fldcw
aad
push
outs
or
adc
push
mov
sbb
jb
data16
push
rol
sub
ficomp
outs
lea
and
mov
icebp
scas
xchg
fnstenv
sahf
pop
ror
imul
xor
add
in
inc
sub
iret
xor
dec
mov
xor
les
dec
xor
mov
pusha
inc
rcr
outs
xchg
mov
xlat
scas
mov
stos
mov
fwait
(bad)
mov
fadd
inc
aas
js
mov
shr
aaa
sub
outs
popf
inc
mov
pop
add
jge
lahf
cmc
push
push
jb
(bad)
cmp
xchg
test
and
xchg
cld
movs
mov
stos
adc
mov
inc
inc
movs
in
mov
and
adc
sbb
mov
push
pop
jecxz
test
ja
mov
out
sbb
xor
adc
arpl
cmp
enter
jae
dec
clc
test
arpl
enter
in
jmp
stos
(bad)
xlat
cmc
into
loop
jecxz
mov
mov
test
jns
sti
xchg
movs
add
cmp
ins
xor
cld
cs
and
mov
mov
inc
test
popa
xor
adc
js
cs
jnp
ins
inc
loopne
or
sub
rol
call
pusha
mov
or
movs
cmp
add
mov
movs
jg
mov
push
mov
dec
mov
sub
fnstcw
mov
and
out
not
adc
add
movs
and
or
jge
(bad)
push
cmps
dec
xchg
inc
sbb
mov
dec
sbb
sbb
imul
sbb
aam
popa
mov
dec
mov
bound
addr16
ja
add
shl
mov
fidivr
out
mov
test
inc
scas
or
mov
adc
leave
aaa
mov
movs
je
enter
sbb
lds
stos
loopne
push
push
stos
dec
sub
stos
or
repnz
sar
int3
add
in
stos
inc
fsubr
mov
outs
stos
test
adc
add
cdq
xor
sub
retf
mov
sub
jecxz
and
sbb
and
push
sbb
inc
add
dec
scas
jle
test
sahf
add
jg
dec
movs
pop
(bad)
jmp
jae
loopne
add
lock
xchg
adc
cmp
xchg
cmps
test
push
outs
push
into
int3
shr
shl
adc
add
adc
movs
jnp
pop
adc
(bad)
jno
mov
movs
ret
int3
iret
repnz
into
mov
add
pushf
mov
inc
arpl
jg
es
retf
sbb
dec
cmp
jecxz
adc
iret
xchg
mov
cs
lea
fwait
inc
shl
ret
xlat
into
add
cmp
ss
and
iret
mov
scas
adc
int3
xchg
mov
fdivp
mov
lock
adc
push
sub
shr
(bad)
fcomp
jmp
sar
jle
inc
mov
(bad)
fs
add
icebp
cld
dec
aaa
jno
cmp
sbb
sbb
xchg
xchg
(bad)
aaa
or
out
ret
push
(bad)
cmp
mov
or
jnp
adc
ror
sbb
int
test
sbb
add
or
jecxz
sbb
or
fidivr
jl
jae
mov
cmp
in
dec
cmps
jle
es
cli
outs
cmp
xor
jns
mov
pop
cmp
pop
out
mov
into
jne
inc
mov
push
mov
push
and
dec
fbstp
paddusb
out
repz
ficom
sahf
pop
aaa
jae
jb
sti
mov
jne
mov
test
adc
adc
add
cmc
pop
shl
lods
lods
and
paddusb
jg
scas
push
sti
ja
and
in
fist
ret
dec
ja
mov
mov
mov
popf
mov
push
adc
cdq
dec
xchg
outs
pop
in
test
cmp
jae
mov
dec
cld
stos
inc
rcl
mov
mov
fild
sub
and
mov
xlat
into
and
test
jge
mov
in
inc
jecxz
pop
mov
addr16
adc
pop
adc
fisubr
pop
lahf
ja
jle
or
jl
data16
sbb
retf
jnp
inc
jg
mov
mov
sub
das
push
inc
or
fistp
into
mov
adc
dec
(bad)
jmp
repnz
clc
in
adc
add
mov
mov
mov
push
jle
jmp
movs
in
push
mov
push
cmp
dec
mov
xchg
jae
movs
mov
push
or
or
mov
fild
(bad)
cli
pop
jmp
adc
or
addr16
mov
xchg
clc
(bad)
(bad)
or
into
adc
lahf
cmp
mov
fdiv
(bad)
pop
cmp
add
js
push
cdq
lea
mov
mov
popa
mov
inc
fucomp
stc
fwait
inc
add
lock
cmp
repz
mov
arpl
arpl
loop
(bad)
daa
aas
add
cld
aad
out
and
out
iret
or
dec
push
into
xor
ins
sar
(bad)
jmp
popf
sbb
xor
jae
mov
cmp
and
out
or
and
out
pop
stos
mov
jle
jle
mov
push
mov
loop
cs
adc
jecxz
fistp
iret
and
pop
xchg
repz
pop
lods
imul
add
sbb
nop
xchg
rcr
rcl
jae
stos
mov
adc
xchg
mov
add
sbb
sub
outs
cmp
sbb
(bad)
mov
outs
lds
into
push
xchg
xor
and
(bad)
jae
call
imul
int
xlat
aaa
fidivr
mov
popa
add
cmp
pop
cmp
add
and
das
cwd
lods
pop
or
and
aaa
or
pop
xchg
icebp
and
add
cmp
mov
add
ror
adc
je
adc
inc
out
sbb
xchg
in
arpl
imul
push
les
add
loope
rol
push
clc
or
inc
clc
jmp
sbb
aaa
pop
cmp
in
out
stos
or
pop
sar
mov
ss
push
jge
jns
mov
push
and
push
sqrtps
loopne
ficomp
xor
das
into
jb
inc
jb
xor
outs
push
dec
lock
outs
dec
jae
repz
pop
mov
outs
aad
mov
inc
into
cmps
sti
and
cld
call
add
and
push
jnp
movaps
lahf
and
arpl
mov
imul
xchg
mov
ins
xchg
push
rep
pop
xor
int3
xchg
scas
adc
mov
inc
pop
cmp
in
pop
movs
jl
cmps
mov
pop
(bad)
cld
repz
cdq
rcl
adc
xor
inc
dec
lea
jb
imul
enter
xor
ret
jmp
loop
cmc
dec
mov
fstp
adc
or
and
gs
(bad)
in
dec
enter
cs
xor
cs
scas
out
and
test
int3
push
(bad)
jae
shr
mov
idiv
sahf
cmc
ja
adc
mov
jmp
jb
(bad)
xchg
sbb
icebp
lea
js
dec
jns
mov
mov
outs
stc
xor
adc
icebp
outs
push
jo
xchg
cmc
mov
cmc
sti
fnsave
cmp
sub
or
(bad)
jmp
jecxz
in
add
mov
xlat
gs
call
inc
fwait
adc
and
cmps
out
icebp
pop
and
movs
mov
shr
mov
mov
inc
mov
cmp
stos
pusha
das
outs
xchg
(bad)
cwde
aad
xchg
cmp
test
cmp
push
ret
stos
fiadd
inc
aas
and
sahf
std
mov
mov
(bad)
loop
int3
xchg
(bad)
data16
adc
sahf
sub
sbb
ret
leave
mov
fmul
jns
loopne
push
rcl
and
inc
leave
pop
shl
xchg
enter
lods
push
iret
xchg
stos
dec
int
retf
repz
pop
nop
push
pop
pop
nop
or
stos
scas
je
lods
aas
add
stos
sahf
jb
dec
and
xchg
pop
jecxz
clc
das
add
pop
sub
les
push
jmp
loope
cld
rol
loopne
and
iret
bound
cwde
jb
out
pop
aaa
(bad)
mov
inc
pop
mov
cs
retf
adc
xchg
popa
cmp
mov
lods
inc
pop
call
xchg
icebp
mov
mov
sahf
cmp
out
or
mov
mov
imul
dec
(bad)
jae
add
div
and
jecxz
jmp
xchg
nop
mov
adc
sub
push
ds
out
vpsubsw
cdq
scas
ds
rcl
pushf
into
into
cli
xchg
das
ret
iret
push
xchg
push
cli
sar
cmp
aas
pushfw
stos
pop
jecxz
aam
push
stos
in
ds
push
fidiv
push
pop
sub
push
dec
js
or
cmp
retf
add
sbb
enter
fs
cmps
adc
mov
lods
mov
(bad)
jbe
stc
sub
mov
push
cmp
mov
out
mov
xchg
pop
repz
(bad)
imul
add
push
dec
mov
scas
daa
mov
mov
and
std
pop
push
xlat
jge
test
xchg
bound
push
mov
sub
je
aam
xchg
or
and
js
ds
adc
out
add
ret
mov
lahf
mov
and
ret
mov
ret
pop
push
push
(bad)
mov
mov
jnp
jb
and
pop
push
push
test
icebp
add
and
pop
pop
fst
test
data16
ret
push
adc
out
push
xchg
imul
dec
test
mov
cld
lds
(bad)
mov
cmps
push
add
popf
xchg
(bad)
and
aam
add
sub
mov
mov
add
dec
js
fadd
and
xchg
pop
inc
jmp
pop
xchg
mov
inc
jmp
les
rol
mov
jb
pop
jb
sub
mov
cs
cli
mov
push
sar
mov
pop
stos
xlat
mov
adc
aam
mov
cmp
jecxz
jg
pusha
shl
mov
jnp
inc
hlt
cmps
cmp
mov
iret
aam
pop
cmp
pop
sbb
leave
sub
leave
cwde
stos
lahf
sub
scas
mov
rcl
mov
inc
popf
push
dec
mov
ret
dec
ret
clc
stos
nop
cmp
hlt
daa
sbb
adc
cwde
mov
sub
retf
ret
sbb
mov
mov
and
sbb
push
(bad)
sbb
mov
adc
mov
xor
jl
clc
stos
lock
jmp
test
xor
addr16
das
movs
into
fsubr
cmp
cmps
cmps
ds
ins
mov
sbb
cmp
add
adc
clc
inc
js
in
jp
ins
pop
sub
stos
test
mov
pop
xchg
add
mov
sbb
cmp
xchg
adc
xor
test
push
mov
sbb
pop
sub
sti
mov
mov
cmpxchg
cmp
bound
pushf
mov
cld
ret
fmul
cmp
mov
adc
js
aam
jge
cmps
je
push
mov
(bad)
scas
sub
adc
mov
adc
and
jmp
adc
jl
dec
mov
pop
push
(bad)
(bad)
dec
mov
retf
add
lods
sar
shl
popf
or
push
fwait
jbe
xor
dec
xchg
bound
test
cmps
xchg
ficomp
jb
es
lahf
retf
ss
test
xchg
and
dec
mov
sub
test
retf
push
mov
jbe
mov
(bad)
into
sbb
stos
push
(bad)
imul
lea
and
mov
cs
(bad)
scas
xor
sub
loope
dec
neg
retf
push
retf
pop
dec
mov
out
inc
jbe
adc
sar
adc
mov
push
retf
push
(bad)
bound
pop
jg
(bad)
ins
jnp
cs
add
push
jb
dec
mov
stos
popf
and
pushf
mul
bound
out
dec
jnp
push
xor
repnz
push
mul
xlat
dec
jle
sahf
and
jmp
mov
mov
std
mov
and
popf
dec
neg
push
shl
or
dec
push
dec
data16
out
in
out
dec
call
out
outs
xor
outs
out
(bad)
mov
push
jbe
loope
mov
sub
fs
es
mov
ror
push
dec
and
jp
push
sahf
add
cmps
xor
and
mov
pop
int3
stos
mov
push
ror
xchg
adc
sub
adc
and
xor
stc
imul
mov
adc
adc
dec
aaa
shl
jnp
jmp
mov
sub
jb
xchg
iret
dec
rcl
mov
xor
pop
pop
mov
add
not
xchg
push
ret
push
push
jg
jg
inc
xor
in
or
rcr
xor
cmp
push
xchg
ins
sub
inc
add
add
outs
in
sbb
jae
dec
rcl
je
xor
adc
mov
sbb
loopne
inc
push
push
lock
cmc
loopne
inc
aam
out
xchg
or
cmp
adc
mov
pop
retf
xor
sbb
dec
sub
sub
shr
fist
(bad)
aas
xor
test
adc
inc
adc
jb
(bad)
lahf
je
jl
xor
dec
mov
xor
jl
xor
pop
xor
mov
sbb
mov
mov
(bad)
jmp
push
lock
push
lahf
aas
(bad)
xchg
jp
shr
jae
xchg
cdq
enter
dec
aaa
add
jmp
mov
shl
aam
pushf
(bad)
shl
iret
xchg
jl
jnp
popf
xor
lock
add
xchg
in
adc
sbb
mov
sub
push
adc
jne
ret
push
xor
mov
dec
push
ror
and
int3
mov
inc
mov
mov
xor
mov
or
inc
das
dec
aaa
or
es
push
sub
dec
fisttp
mov
outs
jns
sbb
pop
retf
cmp
scas
pcmpeqd
(bad)
stc
cmp
mov
dec
stc
cmc
outs
push
mov
sub
stc
push
scas
pop
pop
pop
pop
push
xor
mov
lock
popa
mov
outs
popa
leave
dec
out
outs
cmp
or
mov
out
inc
ja
cmp
mov
(bad)
scas
pop
leave
or
shl
ror
out
add
outs
sbb
(bad)
sbb
in
outs
push
push
or
call
mov
jno
sbb
jge
mul
adc
lahf
cmc
sbb
fwait
dec
jg
xlat
adc
pushf
test
jle
sub
pusha
push
xor
fistp
push
xchg
inc
push
lock
subps
jg
int3
dec
inc
sbb
retf
je
fistp
or
dec
dec
dec
xor
(bad)
out
ror
scas
dec
sbb
ror
jb
sbb
outs
cmp
cli
pop
push
dec
push
push
sbb
(bad)
jg
jecxz
das
fcmovb
inc
inc
or
mov
inc
inc
mov
mov
sbb
xchg
fwait
push
mov
sbb
pop
pop
mov
mov
cmp
aas
cs
push
pop
jb
add
test
jp
aas
add
test
sbb
push
cmc
sbb
out
fwait
int3
aas
cs
hlt
dec
jg
scas
jle
dec
int3
shl
out
or
jb
sbb
dec
or
lds
mov
out
bound
imul
in
dec
rol
(bad)
iret
dec
inc
movs
pop
dec
icebp
inc
dec
test
das
mov
int
addr16
pop
in
push
imul
ret
std
loop
push
addr16
inc
js
sub
ret
push
js
sub
inc
xchg
shl
adc
arpl
je
gs
inc
popaw
and
bound
je
push
sub
add
ret
addr16
ins
jmp
in
shr
and
sbb
mov
in
or
arpl
mov
arpl
push
and
pusha
sub
xor
push
adc
sub
cmps
mov
sub
adc
pushf
sub
or
add
daa
adc
mov
mov
cmc
inc
push
test
xor
xor
std
xor
push
lds
mov
leave
ret
mov
movs
inc
sub
push
inc
sub
test
mov
ret
push
repz
cmps
lods
stos
ins
ret
daa
dec
daa
jecxz
scas
loope
icebp
aam
sbb
(bad)
outs
mov
dec
stos
loop
xchg
mov
jmp
jecxz
dec
retf
and
pop
or
loop
jbe
sbb
mov
cmps
imul
out
ret
sbb
sbb
out
mov
daa
imul
adc
jecxz
xchg
mov
xchg
inc
fild
jb
cmps
adc
es
ds
mov
loop
sahf
fsub
dec
add
loopne
ret
cmps
fnstenv
jb
nop
jmp
daa
push
add
outs
es
jb
dec
mov
scas
sti
inc
ja
cmps
out
leave
out
out
jo
dec
imul
add
scas
daa
fsubr
dec
test
(bad)
out
ret
mov
(bad)
daa
cli
out
out
pop
into
cmps
jb
cmp
push
(bad)
repnz
outs
loop
shl
scas
stos
(bad)
out
cmp
xor
dec
nop
(bad)
mov
and
dec
out
call
daa
(bad)
push
outs
adc
out
ret
iret
inc
dec
popa
xchg
ret
lahf
add
and
daa
xor
repz
ret
stos
out
dec
(bad)
stos
and
or
adc
dec
(bad)
mov
sbb
jno
lea
fdiv
cmps
add
sub
lods
or
call
pop
loop
mov
or
sbb
adc
sbb
addr16
lods
out
sbb
sbb
outs
(bad)
pop
mov
sbb
jecxz
repz
add
mov
bound
loope
std
fiadd
ins
cmp
out
push
rcr
mov
mov
pop
xlat
stos
mov
push
jp
inc
jge
mov
out
inc
inc
jae
loop
mov
(bad)
cli
inc
mov
inc
jnp
imul
mov
jle
sahf
adc
jbe
mov
ret
jge
cmp
push
dec
jns
sahf
cmp
push
jnp
icebp
std
xor
mov
push
mov
dec
inc
cdq
xor
cmc
(bad)
leave
inc
jo
inc
(bad)
imul
cmp
inc
sti
push
mov
adc
dec
pop
mov
push
jns
add
or
icebp
inc
leave
cs
(bad)
xchg
add
ret
and
push
repz
mov
push
sahf
push
adc
test
iret
and
(bad)
jno
adc
adc
pop
jg
pop
dec
sar
jecxz
cdq
xor
lahf
dec
mov
xor
cmp
inc
xchg
pop
dec
shr
and
stc
sti
(bad)
push
push
sahf
mov
lea
(bad)
mov
cmp
lea
add
aas
jle
aaa
(bad)
out
test
clc
add
in
lea
cmc
jl
cmp
leave
dec
inc
xchg
inc
out
sbb
in
mov
loop
pop
mov
(bad)
xlat
pop
push
xchg
jp
mov
aam
cld
inc
inc
push
(bad)
aam
mov
add
jmp
adc
cld
jmp
into
cli
mov
dec
xchg
adc
xchg
inc
xchg
xchg
pop
add
rol
mov
ret
mov
retf
mov
(bad)
jmp
ret
mov
mov
cmp
jmp
(bad)
scas
mov
push
inc
push
test
inc
call
inc
sahf
dec
jmp
out
stos
hlt
mov
push
out
mov
xchg
mov
loopne
(bad)
scas
aaa
mov
and
cdq
push
and
push
xor
cmp
clc
xchg
leave
mov
dec
popa
dec
mov
push
in
shrd
xor
add
in
fldl2t
loope
dec
clc
or
push
lds
popa
jb
add
lods
out
popa
and
lea
dec
sub
leave
and
mov
popa
icebp
add
sub
leave
leave
lods
in
inc
leave
loop
loop
cld
ret
in
lea
fld
xlat
sub
and
push
scas
popf
pusha
add
and
jge
add
mov
in
mov
jae
mov
sub
cld
or
in
jae
les
lods
mov
int
mov
cmp
add
cmc
lods
cwde
std
fld
dec
in
std
add
in
lods
push
mov
and
push
jbe
pushf
jmp
cld
clc
test
push
std
in
pushf
stc
or
in
lods
mov
lods
mov
or
int
or
mov
xchg
mov
and
lods
mov
int
sahf
cmps
dec
in
fild
mov
cdq
pop
jge
rcr
leave
and
dec
lea
leave
fadd
dec
aad
mov
fldln2
lods
sbb
cmps
dec
sub
cmp
leave
pop
mov
imul
ins
stos
popf
lods
leave
in
add
leave
rcr
dec
mov
std
in
add
mov
les
push
in
mov
cwde
mov
mov
adc
mov
jmp
push
dec
xchg
ret
jecxz
das
in
in
cmps
and
ins
ret
sub
mov
mov
jge
xchg
or
sub
sbb
sbb
cmova
mov
bound
cmps
cmps
cmova
mov
ja
popa
stos
inc
push
scas
rcl
daa
dec
out
ja
and
pop
inc
cmps
loopne
ret
iret
pop
scas
pop
cmps
and
push
push
jmp
fadd
addr16
out
aaa
mov
push
inc
fdivr
pop
mov
sbb
addr16
das
mov
dec
ret
cmps
cmp
sub
sbb
cmps
call
add
xor
out
mov
jns
xchg
sub
mov
sub
scas
sub
lods
xchg
out
sbb
out
sub
out
ins
and
push
loope
cmps
mov
inc
daa
ret
cmps
push
adc
cmps
and
outs
lds
or
das
sbb
iret
xor
inc
push
ret
(bad)
mov
outs
loop
add
cs
and
out
imul
mov
imul
add
push
repnz
mov
out
shl
add
out
push
sbb
and
lahf
jmp
enter
(bad)
jl
mov
rol
nop
mov
rol
icebp
xor
les
mov
(bad)
rol
icebp
xor
mov
hlt
mov
stos
mov
je
je
mov
(bad)
icebp
xchg
(bad)
icebp
push
adc
icebp
repz
call
mov
pop
aaa
mov
jmp
pop
mul
lock
jnp
repnz
repz
pop
popa
add
lea
adc
mov
cmovge
xchg
and
push
cmp
jmp
pop
mov
jne
dec
mov
or
shr
cs
sub
or
aaa
jne
xor
fldcw
sbb
dec
sub
fisubr
sbb
pop
jge
cmps
xchg
pop
adc
inc
jnp
idiv
aas
mov
rol
(bad)
xchg
retf
stos
mov
xor
sahf
daa
les
adc
fisubr
out
xor
adc
pop
out
into
push
push
ror
lock
sub
dec
jecxz
lds
jg
pop
int
retf
and
mov
xchg
jle
bound
mov
jecxz
(bad)
xor
mov
ja
push
adc
inc
xor
lock
outs
pop
cmps
ss
sub
mov
les
pop
addr16
sbb
jns
pop
mov
xchg
call
nop
sbb
addr16
not
fnstenv
cmp
aad
out
fsubr
movs
push
ret
ss
daa
and
sbb
cmp
push
aad
icebp
pop
jp
call
xchg
sbb
jnp
pop
scas
jl
push
(bad)
pusha
not
pusha
rcr
pop
fwait
imul
aaa
fbld
push
mov
in
mov
mov
push
xchg
js
aas
shr
mov
push
ins
xlat
dec
aam
xor
cdq
ds
mov
fwait
jp
jns
pop
mov
sahf
jbe
pop
push
fistp
push
shl
xlat
push
test
jle
fistp
pop
mov
mov
xchg
ins
(bad)
or
in
xlat
pop
xchg
outs
mov
aam
xchg
pop
mov
jno
xchg
push
xchg
imul
not
jl
scas
mov
pushf
jno
push
mov
xchg
jo
outs
scas
aas
pop
stos
xchg
push
call
or
mov
repz
clc
fld
push
mulps
sub
or
inc
add
test
or
cmc
call
and
mov
ret
sub
jno
(bad)
stos
xchg
cmp
dec
mov
dec
push
push
jno
ss
in
xchg
rep
sbb
inc
xor
aas
jno
mov
out
sub
bound
inc
loop
xchg
fcmovnb
(bad)
push
jle
inc
loop
inc
(bad)
retf
in
popa
dec
pop
pop
push
addr16
sub
xchg
pop
outs
push
(bad)
jmp
xor
pop
imul
repz
mov
hlt
(bad)
push
pusha
inc
imul
ss
(bad)
test
sub
pop
imul
les
jbe
dec
pusha
jno
and
in
xchg
xchg
xchg
addr16
add
nop
mov
mov
mov
(bad)
loop
cmp
sbb
outs
xor
push
or
dec
and
fwait
push
or
mov
pusha
and
inc
xchg
xchg
and
add
pop
inc
xchg
add
mov
stos
xchg
scas
fcomp
cdq
retf
jmp
inc
sub
push
dec
adc
ret
gs
mov
push
icebp
inc
and
jb
ins
addr16
cld
ret
rcr
mov
les
add
sbb
(bad)
mov
(bad)
lods
sbb
dec
sub
(bad)
(bad)
mov
cmp
cmp
cmp
popf
xchg
fidiv
sub
add
(bad)
(bad)
fild
pop
push
sub
pop
(bad)
mov
mov
stos
(bad)
mov
pop
dec
cmp
pop
or
mov
stos
fistp
das
pop
or
(bad)
mov
cwde
fisttp
aaa
sbb
xchg
pop
adc
lock
pop
pushf
mov
dec
movs
in
fdivr
popa
fdivrp
adc
add
mov
adc
inc
mov
mov
pop
jb
stc
ror
(bad)
sbb
jmp
call
xchg
push
pop
in
cmps
ds
sbb
sbb
sbb
mov
jnp
push
add
sub
stc
cs
pop
or
sub
jbe
adc
pop
xchg
or
cmp
add
or
sbb
loopne
cmps
sub
xchg
cmp
mov
mov
cdq
adc
or
sub
movs
bound
in
jne
sub
jns
xor
pop
test
jne
div
(bad)
xor
or
add
mov
or
jg
and
sbb
aad
out
xor
add
(bad)
and
stos
mov
inc
(bad)
xor
push
ins
mov
mov
out
pushf
ss
imul
lods
ja
bound
and
push
mov
out
push
jmp
adc
and
pushf
inc
adc
add
mov
sahf
xor
mov
into
or
pusha
hlt
adc
push
or
add
mov
jne
(bad)
scas
inc
jmp
je
lods
ja
aaa
mov
and
pop
repz
or
cmp
add
test
push
enter
pop
ins
adc
cmp
daa
add
pop
xlat
aas
xor
das
hlt
dec
rcr
cmp
es
or
jge
and
pop
loop
stc
add
inc
fistp
dec
and
das
aas
call
cmp
push
nop
xor
pop
es
pop
ficom
neg
lds
(bad)
or
mov
(bad)
pusha
and
dec
add
sub
and
inc
add
dec
(bad)
cmp
or
(bad)
and
inc
xor
sbb
sbb
sahf
push
fld
in
call
mov
movsx
inc
cmp
cmp
jo
inc
mov
movs
dec
adc
add
add
jnp
cwd
jae
and
out
neg
and
je
and
inc
aam
rol
test
pop
enter
add
pop
sar
(bad)
and
mov
push
mov
call
adc
shr
fiadd
mov
(bad)
cmp
and
jbe
adc
jnp
pop
add
or
xor
pop
mov
jecxz
retf
xlat
jae
(bad)
fistp
xor
inc
rcr
xchg
lods
pop
scas
cmp
movs
and
and
pop
inc
scas
and
jge
dec
xchg
sbb
stc
or
dec
mov
xor
sahf
or
pop
dec
mov
xor
fcom
pop
stc
fcomp
dec
and
sbb
bound
(bad)
aad
mov
cmp
bound
jo
test
loopne
xchg
push
sub
dec
add
cs
dec
xchg
lea
imul
fs
retf
shl
xor
xor
or
imul
mov
add
cmp
mov
xchg
scas
(bad)
push
jno
push
pop
xor
dec
push
cmp
mov
sahf
stos
mov
add
push
sbb
mov
jno
and
dec
inc
push
cmps
xchg
ret
xchg
dec
pop
inc
sbb
bound
pop
das
push
std
addr16
idiv
adc
test
and
xchg
rcr
ins
adc
jmp
into
cmp
dec
daa
scas
push
call
and
adc
ds
ss
sar
or
fs
(bad)
mov
(bad)
pop
sub
pop
cmp
inc
adc
mov
mov
adc
add
and
mov
iret
adc
xor
xor
inc
jl
iret
stos
test
popf
inc
pop
push
or
sub
jno
mov
ret
(bad)
jb
fwait
mov
mov
movs
lods
cli
(bad)
sbb
xor
fild
mov
dec
add
xchg
popf
test
pop
and
dec
aas
mov
stc
rcr
add
xchg
scas
lds
xchg
or
push
xchg
retf
loop
(bad)
mov
sbb
xchg
jecxz
lods
mov
jecxz
stc
mov
pusha
es
cwde
mov
cld
fidivr
sbb
xchg
(bad)
mov
dec
pop
jmp
cmps
mov
or
jmp
sub
js
test
and
mov
mov
dec
aaa
jne
mov
ret
mov
sbb
ret
xchg
test
sbb
mov
out
pop
cmp
add
fnstenv
xor
movs
stos
mov
lods
pushf
cwde
fld
add
mov
fbstp
sub
scas
mov
mov
stc
mov
es
jmp
repz
push
or
xor
mov
lock
dec
pop
std
add
jmp
fnstcw
pop
sub
addr16
adc
stos
sub
xchg
outs
stos
xor
and
adc
sub
pop
mov
pop
std
adc
movzx
push
les
out
sbb
add
(bad)
js
mov
std
ins
mul
out
repz
sbb
das
lods
bound
loope
xor
xor
sub
or
stos
cmps
pop
and
jmp
(bad)
jp
add
and
clc
pusha
mov
clc
pop
cmp
jge
adc
inc
fstp
std
es
leave
and
out
cmp
sbb
es
sbb
and
inc
sar
jns
sub
mov
(bad)
lods
sbb
add
inc
ror
outs
xchg
out
push
repz
fwait
arpl
adc
sub
cmp
bound
cmp
(bad)
inc
popa
int3
and
push
xchg
inc
call
fbstp
das
cli
add
add
or
mov
xchg
pop
or
ja
push
jmp
cs
push
lods
or
push
cld
adc
hlt
ins
push
mov
bound
in
xlat
jnp
retf
jae
pop
and
add
call
(bad)
imul
xor
sub
out
cmps
sbb
test
retf
loopne
aad
mov
push
retf
retf
loopne
not
pop
popf
adc
or
push
cli
add
mov
int3
jle
js
mov
push
in
xor
lahf
push
and
push
sti
fs
push
sahf
add
sub
sub
mov
inc
xchg
add
inc
sti
nop
sbb
enter
and
add
jmp
xchg
cmp
fst
ret
ins
xchg
dec
cld
xchg
push
xlat
add
ficom
mov
test
mov
into
and
arpl
adc
call
push
fsub
sbb
push
es
call
and
cmp
and
enter
lahf
movs
mov
aas
cmp
mov
out
mov
adc
sbb
ror
stos
xchg
frstor
push
xchg
std
sub
pushf
pushf
hlt
xchg
xor
je
adc
out
inc
sti
xchg
in
mov
(bad)
retf
inc
mov
jns
or
or
(bad)
(bad)
aad
movs
in
dec
jbe
sbb
or
mov
mov
xchg
cld
int3
adc
jb
repnz
ins
repnz
out
rcr
mov
addr16
retf
inc
mov
and
xchg
inc
sbb
xchg
push
in
cmp
xchg
fwait
rcl
push
nop
mov
pop
in
int
imul
cli
fstp
push
ins
movs
lahf
mov
stos
mov
js
push
xchg
loopne
stos
xchg
xlat
fdivr
xchg
xor
mov
mov
mov
lods
mov
push
sti
div
dec
jo
push
push
ja
in
mov
xor
ins
emms
imul
add
xor
pop
xor
jo
push
xor
out
xchg
or
sub
jno
inc
jb
dec
int3
mov
cmp
ins
add
jne
add
ins
aad
es
sub
pop
adc
jg
or
sbb
add
sbb
or
shl
or
xor
sbb
sahf
xor
dec
sub
push
dec
adc
adc
sub
mov
cmp
or
sub
(bad)
xchg
and
or
dec
aas
jno
sbb
inc
aam
sub
sbb
cvttps2pi
pop
sbb
mov
and
pop
adc
pop
push
xor
retf
push
push
xor
or
and
leave
add
inc
inc
aaa
cmp
pop
sbb
xchg
jle
sub
push
sub
jp
iret
jb
inc
ins
pop
ins
or
es
adc
hlt
mov
jp
push
jne
adc
jae
dec
push
outs
mov
add
ins
sub
aaa
push
adc
cdq
je
sub
push
jno
sbb
jnp
dec
cli
xchg
add
and
pop
jae
push
sub
sahf
mov
push
push
popa
js
or
ins
dec
push
adc
int3
bound
inc
mov
and
push
mov
ja
xor
pusha
(bad)
ds
push
mov
fnstenv
int
xchg
jbe
jbe
inc
sbb
out
pop
cli
sub
jo
push
clc
pop
fsub
cs
mov
in
call
fs
inc
cmps
jge
pop
jmp
inc
sahf
popa
fiadd
pop
rcl
push
int
lds
ja
jg
cmp
jae
addr16
pop
mov
jg
jnp
inc
iret
sub
inc
push
pop
leave
jg
sub
and
jg
jg
xor
test
inc
sti
das
in
inc
sub
inc
stos
cmp
jecxz
add
fisttp
and
dec
loopne
bnd
dec
mov
(bad)
jg
push
leave
inc
out
fisubr
inc
sbb
and
les
dec
mov
jo
shl
pop
leave
dec
mov
cmp
fsub
jno
xor
ds
and
jae
jnp
and
cmp
inc
dec
mov
pop
cmps
push
(bad)
jno
sub
and
shl
jo
inc
cmps
dec
in
xchg
add
push
jmp
and
pusha
and
inc
in
cdq
pop
out
push
jbe
xlat
jne
push
cwde
adc
neg
jmp
xor
sub
add
xor
aam
stc
sbb
cmp
sub
outs
cmp
xchg
ss
call
aaa
cld
adc
adc
into
jne
pop
mov
sbb
adc
add
and
xor
cmp
push
sbb
repz
sub
jae
push
mov
loopne
fadd
jecxz
mov
stc
sbb
adc
jg
sbb
aaa
shl
sbb
pop
fild
adc
adc
pusha
in
add
add
xor
adc
jb
sub
ja
imul
push
shl
fst
enter
std
sub
adc
or
adc
fisubr
cmc
xor
jp
push
or
and
xor
adc
jnp
jb
jg
xor
xor
pusha
retf
jp
xor
outs
rcr
stc
cmp
pusha
mov
(bad)
ins
inc
das
mov
cwde
das
std
ins
fdiv
ss
aaa
int3
sbb
xor
pop
mov
leave
push
cmc
add
xor
jg
or
adc
sub
and
xor
and
int3
or
adc
cs
xor
xor
pop
jmp
sub
sub
adc
xor
das
jae
jae
and
sub
jnp
and
sbb
adc
add
mov
pop
sub
push
and
add
and
pop
pop
dec
gs
jno
push
sbb
pop
arpl
dec
and
push
jne
jp
sub
jl
pop
popa
pop
pop
pusha
cmp
je
inc
push
xor
inc
inc
sbb
push
pop
push
popa
push
arpl
ja
js
jge
push
gs
and
jge
inc
pop
or
sub
add
pop
or
inc
pop
adc
ins
push
jnp
dec
push
push
je
jb
dec
pusha
pop
popa
adc
jae
gs
jo
inc
jl
and
es
pop
push
cmp
dec
dec
push
bound
pop
jb
pop
pop
js
jl
jbe
inc
jae
jno
jnp
inc
inc
push
and
jnp
adc
jl
pusha
or
inc
pop
inc
add
sub
inc
inc
and
jl
pop
daa
jl
push
push
and
ins
push
push
pop
sub
push
sbb
xor
sbb
imul
push
jb
adc
jno
jae
dec
jns
xor
pop
fmul
xlat
sbb
lea
arpl
out
icebp
mov
repz
(bad)
push
retf
(bad)
ficom
adc
jno
and
pop
enter
xchg
mov
(bad)
retf
test
shl
jl
stos
in
fcmovnb
mov
jmp
scas
stos
icebp
les
jmp
jmp
inc
lods
xchg
call
ret
cli
mov
dec
cmc
mov
jmp
(bad)
xor
je
hlt
jmp
cmps
pop
add
pop
les
sahf
mov
(bad)
cli
clc
shl
pushf
mov
xchg
icebp
test
jp
xchg
dec
jp
movs
leave
cmps
mov
icebp
div
mov
sub
loope
adc
or
rcr
add
mov
scas
mov
retf
(bad)
imul
sub
test
mov
pop
aam
cmps
in
pop
mov
popa
mov
adc
xchg
push
movs
aad
pop
fistp
fld
mov
mov
sub
ret
jl
int3
push
pop
inc
outs
inc
popa
adc
xor
sub
push
push
and
xor
jbe
and
mov
and
push
(bad)
into
inc
push
mov
push
mov
xor
rcr
data16
mov
inc
jg
mov
movs
cmp
xor
push
loop
test
les
mov
data16
cmps
loop
mov
adc
cdq
mov
jb
push
mov
sub
xor
bt
daa
lods
js
add
call
fmul
or
shl
mov
adc
(bad)
jmp
bound
neg
push
clc
movs
test
jnp
xor
inc
fiadd
and
push
mov
in
adc
add
rcr
das
mov
mov
add
or
adc
add
cmc
jmp
in
arpl
add
bound
mov
(bad)
out
dec
xor
aas
mov
(bad)
aaa
out
scas
add
(bad)
sbb
sahf
fsincos
and
stos
and
outs
mov
xor
sti
and
add
inc
pushf
sub
cwde
and
movs
in
fcmovbe
mov
push
daa
ja
ja
cmp
daa
(bad)
inc
rol
idiv
push
mov
jb
add
daa
fisub
cmp
imul
dec
orps
and
and
(bad)
jp
push
call
cdq
add
fadd
cmps
cmp
ret
(bad)
xor
ja
pop
stos
xchg
xlat
add
push
xchg
fisub
sbb
pop
jae
sbb
and
and
dec
je
xchg
mov
mov
lahf
sbb
pop
enter
retf
xlat
mov
data16
imul
mov
aas
in
aas
stc
jg
xor
adc
ret
aaa
jmp
sub
ror
xchg
pop
inc
pop
sbb
aas
(bad)
ja
push
jp
pop
add
and
not
aas
dec
inc
mov
mov
and
loopne
inc
and
lea
inc
cmp
lods
jns
xor
inc
shl
ja
and
das
mov
and
mov
mov
icebp
or
push
xchg
call
mov
push
cli
and
popa
popf
and
mov
xlat
iret
repz
shl
repnz
retf
sub
cmp
shl
ror
mov
adc
and
sub
dec
retf
repnz
out
push
call
mov
adc
or
jne
push
fbstp
in
cmp
sbb
mov
pop
aad
inc
rol
jge
adc
int
jno
xchg
(bad)
sbb
dec
jmp
mov
mov
mov
aam
mov
jnp
and
test
(bad)
fnstsw
mov
sbb
or
nop
enter
mov
rcl
aas
stos
jnp
or
mov
mov
xchg
clc
jp
nop
retf
lock
scas
retf
test
sub
int
std
aad
mov
and
inc
push
test
mov
xchg
push
loope
adc
adc
jecxz
adc
popa
sti
ret
jge
mov
test
loop
mov
mov
addr16
inc
stc
hlt
leave
adc
ret
jmp
adc
aad
xchg
and
fild
cs
xlat
stos
xchg
call
push
xor
sahf
test
mov
mov
sub
mov
out
add
fcomi
mov
mov
adc
imul
xchg
or
ret
fwait
inc
jge
push
jae
sub
sbb
adc
je
inc
mov
movs
cmp
push
adc
mov
lds
jae
data16
pop
ss
inc
jl
or
sbb
or
and
(bad)
fst
push
arpl
push
imul
pop
mov
or
pop
pusha
sbb
sub
pop
outs
xchg
jp
out
inc
mov
in
push
push
push
mov
sbb
pop
inc
mov
inc
sbb
sahf
cmp
mov
xchg
lea
mov
push
pop
push
dec
arpl
adc
mov
pop
jge
add
pop
and
in
in
lahf
pop
outs
push
mov
ins
cmp
(bad)
(bad)
into
push
mov
ret
pop
loopne
add
sbb
jbe
add
or
(bad)
adc
push
sbb
adc
arpl
imul
or
or
pushf
and
sub
popa
aad
and
(bad)
ret
lea
inc
xor
std
(bad)
inc
push
sub
ret
adc
dec
add
and
pop
jne
xchg
inc
add
inc
jp
mov
push
and
pop
cmp
jl
xor
lods
gs
jmp
clc
adc
dec
ror
sub
add
dec
sub
and
fcmovne
mov
jnp
sub
and
jnp
or
mov
xor
sbb
das
mov
fcom
xor
enter
lods
mov
mov
jo
push
shl
aaa
inc
es
fidiv
or
jmp
ins
daa
in
mov
fidiv
sete
dec
inc
xchg
adc
sub
sar
inc
add
xchg
push
sbb
bound
inc
mov
xor
sub
(bad)
lea
lgs
xor
rcl
lods
(bad)
sbb
pop
leave
in
nop
aam
jge
push
adc
(bad)
(bad)
cmc
fstp
push
adc
cmp
mov
mov
push
or
ror
pop
test
dec
mov
jl
pop
mov
fwait
and
mov
jmp
adc
or
mov
add
mov
cmc
inc
jnp
mov
mov
rcl
inc
jp
pushf
ins
and
mov
repnz
and
ret
mov
(bad)
fwait
or
sti
lea
or
xor
adc
lds
mov
int
jge
adc
push
inc
mov
jns
mov
cmp
jp
mov
cmp
stos
aas
push
dec
sub
ror
cmc
sub
mov
mov
gs
mov
call
leave
adc
rcr
call
in
push
mov
gs
aaa
retf
adc
add
movs
xor
retf
and
mov
dec
lods
xchg
or
xchg
or
pushf
je
ins
push
mov
pop
inc
in
jmp
xchg
dec
jecxz
sbb
adc
cmp
imul
push
and
sbb
sub
or
mov
mov
adc
test
cmp
and
push
mov
lods
inc
call
pusha
leave
sahf
lahf
dec
inc
xchg
call
jae
bound
inc
pop
rol
ins
mov
sbb
adc
xor
jmp
xor
mov
leave
cmp
dec
mov
mov
adc
rol
mov
leave
outs
xor
pop
cld
(bad)
ficomp
mov
inc
dec
adc
sti
rcr
mov
mov
fidivr
mov
pop
rcr
push
pop
xchg
and
sar
loopne
ret
sbb
adc
push
fld
sub
push
idiv
jns
dec
mov
in
and
mov
ret
hlt
cmp
dec
hlt
lahf
jns
mov
shl
jle
dec
pop
ds
inc
cmc
sbb
imul
push
sub
and
jp
and
cmc
xlat
push
test
js
mov
jle
fnstenv
popf
pop
pop
push
jg
or
(bad)
enter
inc
test
push
and
add
int
jo
adc
pop
inc
je
test
xor
fnstenv
sbb
jns
push
sbb
mov
popa
cmp
adc
add
mov
cmc
pusha
(bad)
cmps
and
xor
dec
sub
adc
stc
mov
and
inc
scas
xchg
and
pop
in
scas
loopne
add
outs
gs
jb
out
push
mov
mov
leave
mov
outs
xlat
sahf
popa
repnz
iret
pop
adc
fld
dec
scas
pshufw
ror
mov
pop
xchg
das
push
movs
push
fcomp
int
mov
outs
mov
mov
add
in
push
daa
daa
out
and
ss
jge
adc
lahf
xor
shl
dec
xor
call
das
fisub
je
out
scas
jmp
ret
ja
sbb
sub
mov
add
dec
xor
xchg
sbb
mov
lock
sub
mov
scas
(bad)
mov
jl
cmp
or
mov
jle
out
jno
and
mov
imul
inc
out
mov
dec
adc
aam
jno
aas
mov
adc
sub
aas
inc
aas
sub
movs
ja
push
mov
jmp
mov
lods
int
cmp
shr
mov
jle
rcl
mov
div
(bad)
cmp
xor
mov
call
scas
imul
mov
es
outs
aaa
imul
hlt
xor
pop
and
dec
ss
mov
repnz
mov
mov
and
int
sub
cmp
push
aam
mov
mov
test
mov
adc
sub
ss
push
out
push
add
mov
out
int
fstp
movs
not
push
outs
adc
add
stos
mov
mov
jmp
ds
push
(bad)
mov
dec
xor
sbb
xchg
lock
daa
sub
cmp
mov
adc
test
mov
mov
mov
loopne
test
add
xor
pop
bound
push
mov
mov
mov
rcr
and
nop
out
xchg
ret
stos
ss
mov
push
cmp
test
mov
popf
mov
xchg
fnsave
or
cmp
inc
mov
outs
repz
loopne
call
push
outs
add
cmps
adc
test
cmps
pop
mov
lahf
push
inc
or
or
jg
loopne
shr
(bad)
mul
addr16
sahf
mov
xchg
jge
adc
outs
stc
mov
cwde
xlat
mov
cmp
int3
jne
xor
outs
and
je
pop
outs
out
pop
in
push
mov
pop
call
jge
mov
or
out
pop
push
sbb
scas
pop
int
jg
outs
cmp
xor
or
inc
jmp
out
lea
in
jg
loop
iret
and
xor
add
push
jmp
xchg
xchg
popa
jecxz
mov
pop
lock
(bad)
outs
loopne
mov
sub
mov
xor
cmp
sub
es
or
or
add
pop
pop
and
fnstsw
dec
scas
or
mov
jne
fadd
out
pop
shl
and
inc
sub
sub
cli
push
iret
xchg
int
test
or
(bad)
call
add
jge
ja
cdq
dec
inc
dec
pop
mov
or
ret
sub
mov
lds
test
xor
xchg
mov
inc
mov
sbb
aas
out
(bad)
rcl
ja
test
mov
je
fsub
xor
adc
adc
push
iret
iret
lods
mov
test
cmp
pop
les
sub
jne
aad
mov
xor
repnz
stc
mov
fld
adc
sbb
cld
dec
mov
push
sbb
ss
dec
mov
outs
cmp
(bad)
xor
or
mov
and
inc
mov
lods
dec
icebp
call
adc
push
in
and
in
(bad)
or
mov
xor
bound
test
dec
je
adc
cmp
push
pushf
xor
add
dec
or
jl
xchg
ds
push
fdivr
fwait
icebp
cmp
jge
xor
jne
call
ss
jg
into
xchg
lea
fnstcw
sub
add
mov
cld
into
int
dec
fs
ret
cmp
clc
cs
in
je
jb
and
mov
mov
inc
jb
dec
xor
inc
ret
adc
sbb
bound
cdq
add
add
arpl
(bad)
fstp
adc
jb
xchg
shl
adc
jnp
call
mov
inc
cs
ss
mov
std
in
mov
jo
daa
cmp
mov
movs
out
bound
leave
scas
xor
pop
mov
pop
jbe
adc
and
shl
xor
adc
mov
je
mov
jmp
sbb
pop
sub
mov
test
cs
xor
mov
clc
or
in
jle
sbb
cld
cmp
popf
in
mov
fdiv
pop
xchg
jb
xor
(bad)
pushf
fsub
sub
dec
ret
mov
hlt
(bad)
sbb
outs
sti
(bad)
jp
dec
aaa
lea
pushaw
adc
mov
ret
push
inc
and
dec
xlat
lods
cmp
push
sub
(bad)
mov
mov
je
mov
adc
fstp
ret
mov
pop
shl
sahf
iret
in
xchg
pop
repnz
inc
pop
or
(bad)
retf
loope
or
and
shl
pop
jl
shr
repz
fadd
stc
and
mov
aad
pop
jmp
mov
pop
lea
xor
sub
xor
xchg
int3
(bad)
imul
jae
xchg
add
mov
das
outs
sar
sbb
push
adc
mov
xchg
js
stos
std
inc
imul
sub
fild
push
mov
jmp
ret
cmc
mov
mov
inc
cmp
and
test
jb
xor
mov
mov
cld
jle
aam
xor
sbb
fisub
add
in
pop
rol
shl
ds
fs
cmp
outs
retf
add
sbb
movs
sub
jb
pushf
or
dec
fstp
loope
rcl
pop
into
sbb
mov
jecxz
ret
or
ret
es
jmp
retf
jb
cmp
mov
dec
frstor
inc
inc
pop
jnp
fisub
popw
std
dec
mov
loope
(bad)
inc
std
adc
movs
sbb
imul
push
xchg
cmc
sbb
mov
mov
je
dec
jecxz
and
por
in
in
test
jb
inc
retf
das
sub
dec
clc
pushf
cmps
sub
push
jmp
dec
sub
popf
dec
sbb
mov
xor
jmp
jmp
dec
add
and
arpl
mov
mov
movhlps
and
jg
mov
ja
hlt
(bad)
clc
stos
popf
lds
rcl
mov
push
adc
cmp
(bad)
inc
mov
fwait
inc
dec
stos
fdiv
add
popa
int
add
scas
ret
int3
jnp
cmp
cdq
xor
mov
jp
test
mov
int
add
loop
push
adc
add
sar
ins
int
push
mov
sahf
cli
and
cmp
mov
pop
cmp
and
dec
or
mov
push
mov
cmps
mov
(bad)
fcmovnu
pushf
ror
xor
into
js
mov
or
pop
repz
xor
jne
add
mov
adc
push
data16
cmc
add
sahf
jmp
call
js
inc
ret
repnz
add
call
xchg
fisttp
sbb
jecxz
sbb
fmul
pop
and
sub
in
mov
addr16
mov
xor
and
leave
aaa
fcom
sar
pop
sbb
or
inc
daa
add
cli
sub
adc
mov
out
mov
lods
jmp
or
push
(bad)
loopne
cmp
jl
lods
jmp
ret
je
jp
cmps
jbe
in
jnp
fidiv
sahf
rcr
mov
out
sub
lock
adc
push
push
loope
mov
or
push
pop
lock
lock
sub
(bad)
dec
dec
fwait
mov
lock
scas
mov
mul
inc
add
shr
add
push
push
addr16
xchg
scas
fmulp
movs
movs
fld
jb
mov
test
retf
dec
fcom
mov
mov
jecxz
mov
push
outs
clc
retf
pop
push
mov
cmps
ret
fstp
int
jmp
jg
imul
(bad)
jns
dec
nop
imul
lahf
shr
dec
into
jg
mov
add
in
jmp
jp
bnd
mov
pop
fbld
push
mov
inc
mov
cmp
mov
cmps
cmp
or
xor
push
das
mov
xchg
scas
fwait
ret
pop
ins
xor
pop
add
pop
jge
push
cmp
lds
mov
mov
ds
lea
out
div
adc
sub
inc
loope
push
push
cmps
xor
movs
xchg
call
ja
mov
lods
mov
push
add
mov
icebp
xor
pop
and
fld
push
xchg
or
shl
jmp
or
icebp
fnsave
inc
ins
sbb
sub
push
fld
jle
pop
push
and
adc
enter
xor
mov
sahf
jno
das
outs
jae
adc
cmp
jae
mov
add
lods
adc
sti
out
fadd
outs
cs
or
and
sub
inc
pop
outs
popa
inc
xchg
jno
fwait
into
jno
ja
(bad)
loop
and
mov
add
inc
add
cmp
mov
xchg
outs
popa
adc
int
add
test
jl
out
jmp
out
jne
shl
push
outs
out
cmp
adc
daa
add
retf
jae
xchg
cdq
push
or
fisttp
scas
xchg
dec
pop
push
add
mov
movs
jno
cmp
mov
dec
test
scas
enter
outs
je
inc
sahf
pusha
mov
adc
push
inc
sbb
cmp
push
adc
push
sahf
in
sahf
push
push
adc
dec
ror
push
jno
push
addr16
and
out
rcr
pop
pusha
lods
and
into
jns
push
and
fidiv
dec
(bad)
clc
sar
xor
ror
jecxz
and
ficomp
(bad)
ins
and
xor
mov
lahf
mul
or
or
js
dec
jo
ror
bound
aas
loopne
xor
fdivp
ins
or
pop
xchg
pop
aaa
outs
outs
jmp
add
retf
call
and
xchg
lock
jns
dec
mov
out
sub
std
sar
sub
or
xchg
sub
mov
pop
imul
popa
xchg
cmps
add
pop
jg
imul
mov
cmp
add
ror
hlt
imul
jns
daa
outs
in
in
sar
(bad)
icebp
xor
idiv
dec
loope
push
dec
shr
(bad)
xlat
xchg
fmul
or
dec
push
sbb
or
js
jns
ss
das
repz
outs
adc
lock
jl
cwde
rcr
cmp
ins
out
aaa
mov
sbb
or
test
mov
dec
mov
pop
xchg
push
mov
sahf
movs
inc
sbb
iret
fldcw
xchg
jno
sub
jb
pop
inc
and
cmp
pop
mov
sar
mov
adc
out
movs
push
xchg
add
cdq
pop
mov
mov
xchg
sbb
int3
fdivr
sahf
cs
jl
cmp
aaa
fst
shl
js
mov
pop
dec
xchg
sbb
jle
clc
ins
add
into
(bad)
mov
test
xor
inc
or
push
and
test
mov
xor
cmps
cmp
or
push
cmp
bound
mov
(bad)
fst
(bad)
jbe
ror
mov
add
(bad)
jmp
xchg
xor
xlat
or
dec
out
bound
pop
int3
cmp
xchg
pusha
rcr
aad
repnz
aad
xor
xor
pop
cli
cmp
movs
mov
add
add
ins
aas
(bad)
pop
jae
mov
pushf
popa
addr16
adc
mov
das
lods
xchg
jno
sbb
cwde
outs
xchg
stc
xchg
cli
ss
imul
xor
push
les
ss
(bad)
adc
or
adc
xchg
sbb
(bad)
pop
mov
lock
mov
(bad)
iret
cmp
xlat
call
cs
inc
aas
sub
xor
int
sar
mov
sbb
sbb
outs
add
xlat
sub
dec
jle
inc
dec
bnd
data16
popf
inc
fisubr
ret
mov
jne
pusha
std
test
fisub
inc
pop
(bad)
dec
ins
pop
out
pop
or
in
mov
stos
xchg
sahf
push
cmp
mov
stc
xchg
in
xchg
fiadd
sbb
push
push
mov
cld
pop
out
jnp
fiadd
(bad)
(bad)
fwait
mov
sub
mov
mov
pushf
ins
inc
js
inc
add
inc
push
call
stos
mov
nop
cmps
mov
mov
jnp
cld
outs
(bad)
into
pop
mov
mov
jecxz
dec
das
retf
nop
ins
or
xchg
out
fst
movs
push
loop
mov
js
sar
mov
push
jg
jb
cs
mov
mov
out
fdiv
cmp
mov
imul
cmps
pusha
popf
inc
jnp
push
mov
popf
jg
ret
stc
xchg
push
dec
aad
je
mov
jge
jg
out
inc
lea
retf
mov
lods
mov
ja
fs
add
sbb
mov
jg
sti
sbb
mov
push
push
dec
fsubrp
leave
push
and
lods
cwde
popa
loop
call
not
xchg
(bad)
in
jne
sub
mov
cli
cdq
adc
fsubp
mov
daa
mov
retf
fisub
(bad)
lods
xchg
push
sub
cmp
sub
jns
push
pop
das
or
stos
lea
fldl2e
div
ins
push
xchg
cmps
mov
pop
ret
pop
jecxz
add
mov
jecxz
xchg
xchg
jae
stos
outs
and
rol
aaa
push
mov
lods
or
ret
sbb
mov
sub
loopne
ret
popf
imul
jg
adc
or
mov
sub
shl
inc
fdivr
sub
pop
jno
into
dec
mov
repnz
loop
push
or
add
dec
dec
jl
arpl
cmps
jl
outs
mov
ds
outs
mov
cmc
addr16
icebp
out
cwde
xor
ja
js
mov
(bad)
push
loop
ret
and
adc
add
das
cmp
int
jge
jae
inc
pop
xor
jmp
mov
repnz
out
jmp
sar
or
dec
push
push
inc
in
pushf
enter
ins
hlt
mov
sahf
fstp
ins
xchg
sub
sub
(bad)
mov
xchg
jl
dec
push
arpl
dec
xchg
in
enter
repz
xchg
and
mov
mov
adc
mov
ror
and
and
dec
(bad)
fcomp
adc
repnz
gs
cmp
adc
dec
adc
int3
sub
xchg
jle
out
sub
arpl
sahf
jmp
xchg
sar
sqrtps
push
in
and
faddp
adc
addr16
nop
add
pushf
mov
add
add
sub
xor
xor
push
ins
mov
sbb
shl
shr
ss
adc
fdiv
movs
mov
sub
mov
ds
int3
gs
dec
call
cs
xchg
shl
push
adc
fsubrp
shl
imul
rcr
(bad)
dec
(bad)
stc
test
clc
in
nop
or
and
(bad)
cmps
pop
mov
movs
push
movs
push
jo
popa
pushf
jnp
inc
movs
dec
pop
icebp
push
sbb
mov
mov
push
mov
mov
xchg
pusha
jns
movs
pop
inc
sub
sub
in
into
mov
in
cmp
call
mov
out
test
sub
iret
or
lock
ffree
and
xchg
and
stos
mov
dec
jle
inc
bound
mov
cmp
and
ins
mov
or
and
cmp
stos
push
dec
or
xor
(bad)
es
or
and
jmp
mov
sub
sbb
in
je
push
or
sub
jae
jb
popf
lods
cmp
mov
sbb
inc
inc
out
arpl
sahf
adc
and
xchg
popf
jmp
lods
add
int
scas
xchg
cmp
mov
test
ds
jo
shl
mov
xor
ja
push
in
outs
push
push
scas
push
jb
inc
sbb
pop
jl
call
ror
jno
test
nop
dec
cwde
mov
(bad)
gs
fisubr
cmp
mov
pop
xlat
out
and
and
inc
push
cmp
not
adc
add
or
xchg
dec
push
ss
dec
xchg
sbb
rcr
mul
xor
(bad)
mov
pusha
sbb
rol
movs
daa
sub
push
or
jle
imul
out
call
test
and
fs
pop
push
push
fistp
fst
(bad)
out
out
(bad)
mov
xlat
jecxz
out
dec
dec
lods
push
add
push
lods
or
ficomp
inc
xchg
jne
and
xchg
ja
ss
(bad)
loopne
loope
mov
outs
mov
je
and
in
dec
ds
pop
int3
cmp
jnp
pop
inc
test
or
fs
ror
dec
adc
adc
nop
cld
or
and
ret
jecxz
in
daa
jbe
test
xchg
jns
sbb
mov
jns
mov
mov
or
push
outs
inc
pop
jae
mov
je
dec
jp
imul
out
cmp
inc
sahf
int3
mov
bound
jle
mov
inc
sub
mov
(bad)
int
sti
aad
(bad)
jnp
fsubr
mov
cmp
stos
arpl
outs
or
(bad)
bound
xor
pop
push
mov
sahf
jbe
sub
fs
cmp
sub
lds
jnp
cmps
mov
mov
pushf
bound
xchg
sbb
fldcw
fnstsw
xchg
(bad)
scas
outs
cmp
jbe
test
inc
jecxz
and
cs
int
(bad)
ud0
repnz
xchg
idiv
mov
lea
mov
xor
call
mov
xor
call
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
lea
mov
xor
call
mov
jmp
mov
lea
mov
xor
call
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
lea
mov
xor
call
mov
jmp
mov
lea
mov
xor
call
mov
jmp
mov
lea
mov
xor
call
mov
jmp
mov
lea
mov
xor
call
mov
jmp
lea
jmp
mov
lea
mov
xor
call
mov
jmp
lea
jmp
lea
jmp
mov
lea
mov
xor
call
mov
xor
call
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
lea
mov
xor
call
mov
jmp
mov
jmp
mov
lea
mov
xor
call
mov
jmp
lea
jmp
mov
lea
mov
xor
call
mov
jmp
lea
jmp
mov
lea
mov
xor
call
mov
jmp
lea
jmp
mov
lea
mov
xor
call
mov
jmp
lea
jmp
mov
lea
mov
xor
call
mov
jmp
push
call
ret
mov
lea
mov
xor
call
mov
jmp
lea
jmp
lea
jmp
lea
jmp
push
call
ret
mov
lea
mov
xor
call
mov
jmp
push
call
ret
mov
lea
mov
xor
call
mov
jmp
push
call
pop
ret
mov
lea
mov
xor
call
mov
jmp
push
call
ret
mov
lea
mov
xor
call
mov
jmp
lea
jmp
mov
lea
mov
xor
call
mov
jmp
lea
jmp
mov
lea
mov
xor
call
mov
jmp
lea
jmp
mov
lea
mov
xor
call
mov
jmp
lea
jmp
mov
lea
mov
xor
call
mov
jmp
mov
jmp
mov
lea
mov
xor
call
mov
jmp
lea
jmp
mov
lea
mov
xor
call
mov
xor
call
mov
jmp
lea
jmp
lea
jmp
mov
lea
mov
xor
call
mov
jmp
mov
lea
mov
xor
call
mov
jmp
mov
lea
mov
xor
call
mov
jmp
lea
jmp
mov
lea
mov
xor
call
mov
jmp
lea
jmp
mov
lea
mov
xor
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
int3
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
int3
mov
add
jmp
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
mov
add
jmp
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
call
add
ret
mov
jmp
int3
int3
int3
int3
int3
mov
push
mov
push
call
add
ret
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
mov
add
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
add
jmp
mov
jmp
mov
jmp
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
push
push
push
test
jne
push
call
xor
cmp
jae
mov
sub
mov
mov
add
push
push
mov
mov
call
test
jne
mov
cmp
jne
mov
push
add
push
mov
call
test
jne
mov
cmp
jne
mov
lea
push
push
push
push
call
pusha
xor
push
mov
xor
mov
lock
pop
mov
popa
mov
mov
lea
push
push
push
push
call
mov
mov
cmp
mov
je
cmp
je
cmp
je
cmp
jne
push
call
mov
mov
dec
mov
jne
pop
pop
pop
mov
pop
ret
nop
nop
inc
and
push
push
call
ret
push
mov
call
neg
sbb
neg
ret
mov
mov
cmp
jae
push
pop
mov
cmp
ja
push
pop
and
and
mov
mov
ret
push
mov
mov
call
and
and
pop
ret
jmp
push
mov
cmp
jne
push
lea
push
push
call
mov
mov
add
dec
imul
add
jmp
mov
mov
mov
dec
sub
test
jge
mov
mov
mov
pop
ret
push
mov
cmp
je
push
push
call
mov
mov
push
call
lea
push
push
push
push
call
mov
add
push
call
pop
pop
ret
pop
pop
pop
add
mov
sub
mov
pop
call
ret
push
push
call
push
mov
call
lea
jmp
push
mov
call
test
je
mov
push
mov
call
mov
test
jne
push
call
pop
pop
ret
push
mov
cmp
je
mov
test
je
push
call
and
mov
pop
ret
push
call
push
mov
call
mov
jmp
mov
call
mov
test
jne
push
call
pop
ret
push
mov
call
push
call
mov
mov
xor
cmp
mov
je
call
call
ret
push
push
mov
call
mov
test
jne
jmp
mov
test
jne
xor
pop
ret
push
call
push
call
test
je
and
jmp
mov
pop
ret
call
test
je
jmp
ret
inc
ret
mov
test
je
dec
mov
ret
push
mov
push
lea
push
call
test
jne
inc
mov
pop
ret
xor
pop
ret
push
mov
cmp
je
push
push
call
and
pop
ret
push
mov
sub
push
push
mov
push
push
push
xor
push
lea
push
call
test
je
inc
lea
push
call
push
push
push
push
lea
push
call
test
jne
pop
mov
pop
leave
ret
push
mov
sub
push
xor
mov
push
push
push
push
lea
push
call
test
je
cmp
je
cmp
jne
mov
shr
test
je
add
cmp
jb
xor
pop
leave
ret
xor
inc
jmp
mov
ret
mov
add
call
ret
mov
add
call
ret
push
mov
push
add
call
ret
push
mov
mov
sub
push
xor
cmp
jne
cmp
je
cmp
jne
push
push
mov
push
push
push
lea
push
call
test
jne
push
push
push
call
push
call
pop
xor
jmp
cmp
je
cmp
jne
mov
pop
leave
ret
push
mov
mov
call
mov
pop
jmp
push
mov
call
xor
push
push
push
push
lea
call
or
mov
lea
mov
call
cmp
jne
mov
mov
or
lea
call
mov
call
ret
mov
call
mov
ret
push
mov
call
xor
push
push
push
push
lea
call
or
mov
lea
mov
call
cmp
jne
mov
mov
or
lea
call
mov
call
ret
mov
call
mov
ret
push
mov
call
mov
push
add
lea
call
xor
cmp
mov
jne
or
cmp
je
push
push
call
or
jmp
mov
cmp
ja
or
cmp
je
push
push
call
xor
jmp
cmp
je
push
mov
mov
call
cmp
je
cmp
je
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
mov
xor
cmp
mov
jbe
cmp
jne
mov
lea
push
mov
call
test
je
cmp
je
mov
mov
push
push
push
push
lea
push
call
test
jne
push
push
push
push
lea
push
call
test
jne
push
mov
mov
call
mov
jmp
cmp
je
or
cmp
je
push
push
call
push
pop
jmp
push
push
push
push
lea
push
call
test
je
mov
lea
push
mov
call
or
cmp
je
push
push
call
xor
inc
call
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
xor
inc
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
cmp
jne
push
call
push
push
call
test
pop
pop
je
mov
mov
call
jmp
xor
inc
jmp
xor
ret
push
mov
call
push
lea
push
push
mov
call
add
mov
pop
ret
push
mov
call
mov
mov
mov
and
cmp
je
call
or
mov
call
call
ret
push
mov
call
mov
push
lea
call
and
lea
push
mov
call
test
jne
mov
call
or
lea
call
call
ret
mov
mov
xor
inc
ret
mov
ret
push
push
mov
call
push
lea
push
push
mov
call
mov
mov
mov
movzx
add
mov
pop
mov
mov
pop
ret
push
mov
test
je
push
mov
call
push
push
call
pop
ret
push
push
mov
call
test
je
push
mov
call
pop
ret
push
call
ret
mov
test
je
add
jmp
xor
ret
mov
ret
mov
jmp
mov
jmp
push
push
mov
push
mov
call
test
je
xor
inc
jmp
mov
call
test
je
cmp
je
xor
jmp
cmp
jne
mov
cmp
je
cmp
jne
push
push
call
test
je
push
push
call
test
je
push
push
call
test
je
push
call
test
je
push
push
push
push
call
jmp
push
mov
call
pop
pop
ret
push
mov
push
mov
push
push
push
mov
push
mov
push
push
call
test
je
xor
inc
jmp
test
je
cmp
jne
test
jns
cmp
jae
push
call
push
call
test
je
push
mov
push
mov
push
push
call
test
jne
call
test
je
push
mov
push
mov
push
push
call
test
jne
xor
pop
pop
pop
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
push
mov
call
mov
test
je
push
mov
call
mov
test
je
mov
lea
push
push
call
push
mov
call
mov
pop
pop
ret
push
mov
call
mov
call
push
call
test
je
push
push
call
and
call
mov
test
pop
je
push
mov
call
ret
push
push
mov
call
mov
push
mov
call
mov
call
pop
ret
push
mov
mov
push
call
call
mov
test
je
mov
test
je
mov
test
push
je
mov
push
push
call
jmp
push
mov
push
call
test
jne
push
mov
call
xor
jmp
mov
call
mov
test
je
test
je
push
push
push
call
push
call
test
je
mov
call
xor
mov
pop
pop
ret
push
mov
push
push
push
call
xor
cmp
jne
xor
jmp
push
call
cmp
mov
je
mov
lea
push
push
push
push
mov
call
test
je
xor
inc
jmp
call
mov
mov
lea
push
push
push
push
mov
call
pop
pop
leave
ret
push
mov
mov
test
je
push
call
jmp
push
call
test
mov
jne
push
call
xor
pop
ret
push
call
test
mov
je
push
call
mov
test
je
call
neg
sbb
and
push
mov
call
xor
inc
pop
ret
push
mov
push
push
push
push
mov
cmp
mov
mov
mov
je
call
mov
push
push
push
call
push
push
call
mov
cmp
je
push
call
mov
xor
inc
test
je
cmp
mov
jne
mov
movzx
movzx
jmp
movzx
movzx
test
jne
test
jne
test
je
xor
cmp
je
push
call
pop
pop
mov
pop
leave
ret
push
mov
test
jne
mov
test
je
lea
test
je
call
mov
test
je
mov
push
push
mov
call
xor
inc
jmp
xor
pop
ret
mov
ret
push
mov
call
mov
mov
xor
cmp
jne
call
mov
mov
call
mov
push
mov
mov
mov
call
push
call
cmp
je
mov
lea
push
mov
call
cmp
jne
xor
jmp
push
mov
lea
push
mov
call
mov
jmp
mov
cmp
je
call
push
lea
call
lea
push
lea
push
push
mov
mov
call
xor
add
cmp
sete
cmp
mov
je
cmp
jne
push
call
test
je
push
lea
call
xor
cmp
sete
mov
cmp
je
cmp
jne
mov
cmp
je
push
lea
call
push
lea
mov
call
lea
call
lea
mov
mov
call
cmp
je
push
call
mov
or
or
push
call
mov
cmp
jne
xor
jmp
mov
push
push
push
push
push
call
mov
add
mov
call
or
jmp
mov
call
mov
or
mov
ret
mov
xor
mov
mov
cmp
je
mov
lea
push
call
cmp
je
mov
push
mov
call
call
test
jne
mov
mov
call
cmp
je
test
jne
push
call
xor
cmp
je
push
call
push
call
xor
cmp
setne
call
ret
push
mov
call
mov
mov
mov
mov
mov
mov
call
mov
xor
cmp
je
call
mov
push
push
push
call
push
push
call
mov
cmp
je
push
call
mov
cmp
jne
or
jmp
mov
call
mov
call
and
cmp
mov
mov
je
call
cmp
je
push
call
test
je
push
push
call
mov
call
mov
test
mov
je
mov
mov
call
test
je
mov
call
test
je
push
mov
call
mov
and
push
call
push
call
push
push
push
mov
call
xor
cmp
je
test
je
push
pop
mov
call
test
je
push
pop
push
mov
call
xor
cmp
je
push
push
push
push
push
push
mov
call
or
jmp
mov
call
mov
or
mov
ret
mov
mov
xor
cmp
je
push
mov
call
cmp
je
push
push
call
cmp
je
call
cmp
jne
push
call
mov
mov
call
mov
call
cmp
je
push
call
mov
call
ret
mov
test
push
mov
jne
call
push
mov
push
push
mov
mov
call
pop
ret
push
push
mov
call
push
mov
push
push
push
call
pop
ret
push
push
push
push
call
ret
push
mov
test
push
push
mov
mov
jne
cmp
jne
movzx
mov
call
mov
push
push
push
inc
push
xchg
gs
lock
xchg
xlat
dec
cmc
lods
loope
stos
xlat
dec
push
loope
pop
mov
push
or
test
gs
add
dec
gs
cmp
shl
jno
add
and
pop
repnz
jmp
jo
dec
imul
test
rol
xor
test
jbe
xor
cld
loop
in
mov
rol
icebp
je
mov
cmp
fdivr
cwde
or
xchg
mov
mov
movs
mov
ffree
mov
ins
xchg
nop
arpl
add
mov
jo
mov
rcr
mov
loopne
cld
scas
out
push
and
mov
add
xchg
fwait
mov
inc
mul
mov
cmp
cmp
jg
jno
sub
and
movs
aas
in
mov
hlt
push
ss
pop
sbb
mov
inc
sub
sub
loope
lds
int3
movs
and
loopne
ror
push
mov
push
pop
xor
push
aam
sbb
and
jno
or
in
in
adc
(bad)
loope
mov
loope
push
repz
cli
(bad)
lock
aam
dec
or
fnstcw
fxch
ret
movs
sar
inc
mov
ret
mov
sbb
aam
push
aam
(bad)
xchg
lea
adc
ret
and
ffree
rcl
dec
mov
xor
and
add
and
xor
test
adc
add
sbb
(bad)
aaa
repnz
push
vpslld
(bad)
in
fnsave
push
mov
xlat
je
and
xor
loop
outs
add
push
leave
dec
sub
push
test
dec
xchg
fcom
xchg
fst
nop
adc
pop
or
xchg
lods
mov
nop
rcr
and
push
or
or
jecxz
xor
int3
fincstp
inc
push
add
jne
and
adc
mov
leave
or
js
mov
sub
jo
inc
cmp
dec
bswap
add
shr
setno
mov
jecxz
lock
add
sahf
icebp
mov
popa
push
or
int
(bad)
or
xchg
(bad)
pop
stos
dec
sub
in
not
xchg
icebp
pop
jne
enter
xor
in
popf
pop
inc
and
popa
cmp
(bad)
jno
cs
cmp
and
retf
cmp
sbb
xor
fmul
xor
mov
movs
test
adc
dec
pushf
mov
out
adc
popa
fsubr
and
mov
(bad)
shl
out
vpsubsw
lea
xchg
mov
jb
movs
add
push
and
mov
aad
loope
lahf
push
aas
in
mov
mov
fld
je
mov
cmovl
test
adc
add
test
mov
fdivr
xchg
sbb
fsubr
inc
adc
mov
stc
loope
mov
push
repnz
mov
inc
shl
jge
add
mov
scas
dec
mov
xchg
js
(bad)
mov
mov
dec
shr
mov
aam
aad
jmp
add
xor
adc
jno
out
inc
js
test
xor
push
xchg
and
mov
(bad)
jmp
movs
cwde
call
retf
add
ja
add
lods
xor
aad
out
add
bound
icebp
aam
add
mov
cmc
and
data16
push
int3
cmp
sbb
lea
stos
retf
stc
popa
mov
xlat
or
inc
test
cmc
adc
pop
rcr
sbb
dec
jmp
cs
push
adc
or
adc
or
nop
sahf
inc
mov
sub
pop
rcl
dec
dec
ret
xchg
ror
cmc
inc
mov
lock
nop
mov
jle
mov
mul
lahf
xor
push
push
vpmacsww
add
sbb
mov
jmp
(bad)
sub
mov
es
cmp
sar
dec
or
sbb
repz
fistp
mov
pop
pop
xor
push
mov
sbb
cmps
or
lock
sub
fild
in
je
add
inc
sbb
xor
rol
pop
adc
inc
out
dec
dec
and
lock
inc
cmp
mov
retf
mov
div
adc
loop
pop
pop
ret
push
(bad)
aas
mov
hlt
addr16
psubusb
or
(bad)
je
(bad)
cmp
xor
pop
imul
or
(bad)
rol
mov
lock
xor
pop
test
loop
or
adc
movs
in
sar
lock
push
pusha
or
push
fcmovnbe
fistp
ret
dec
dec
mov
nop
pop
mov
pop
push
xlat
pop
call
inc
add
call
pusha
add
jge
xlat
xchg
dec
ss
sub
into
jecxz
repz
xchg
popf
std
xor
ins
sub
pop
leave
xchg
or
and
jp
jle
test
xchg
pop
xchg
aaa
out
dec
out
rcl
outs
jns
jo
push
popa
add
(bad)
shl
pop
repz
movs
and
mov
rcl
or
mov
jecxz
popa
les
mov
clc
and
sub
(bad)
cld
and
cmp
data16
inc
adc
std
lods
gs
adc
adc
xchg
push
jno
in
adc
xor
sub
nop
jmp
push
cmps
ja
(bad)
clc
in
test
fadd
mov
pop
addr16
and
fld
test
sbb
pop
inc
pusha
shl
icebp
and
sub
jno
mov
fbstp
or
push
add
mov
add
xor
fstp
mov
test
jbe
jmp
mov
inc
test
push
retf
push
in
pop
mov
out
push
pop
mov
cmps
mov
(bad)
icebp
je
inc
cmc
scas
shl
add
mov
test
inc
or
dec
mov
imul
aaa
ins
lock
jmp
sbb
dec
adc
or
movups
or
xchg
cmp
repz
xchg
dec
xchg
scas
push
push
call
xchg
jg
rcl
xchg
xchg
cmps
stos
aam
pop
xor
cmp
sti
fnstcw
and
rcl
into
sub
stos
jecxz
cmc
dec
stc
int
mov
loopne
repz
push
pop
mov
xor
mov
in
and
or
lahf
inc
push
sti
adc
jg
jl
or
fcmovnb
in
add
in
lock
test
mov
ficom
xchg
pop
push
imul
lock
add
mov
cmp
pop
mov
fld
jl
test
xchg
pop
shr
xor
dec
adc
lea
jo
cwde
adc
add
in
ins
mul
xor
push
push
dec
xchg
jns
test
or
sub
aam
and
push
fs
lds
xor
sub
adc
jae
shl
clc
frstor
add
adc
mov
(bad)
or
in
mov
test
jmp
(bad)
xor
sub
adc
inc
xor
push
and
cmp
pop
lods
xor
loopne
push
or
gs
sbb
mov
lods
add
jno
inc
and
fld
popa
sar
psadbw
fdiv
and
sub
push
and
lods
mov
cmp
xchg
cmc
test
and
mov
cdq
mov
xchg
and
adc
push
stos
mov
xchg
in
xchg
add
pop
inc
mov
ins
mov
cli
inc
mov
xchg
push
lock
hlt
mov
pop
ins
ret
pop
xor
fld
shl
and
xor
addr16
pop
nop
aas
jp
sbb
and
mov
movs
inc
jmp
dec
leave
mov
in
shl
add
xor
hlt
(bad)
xchg
loopne
int
or
out
xlat
out
pushf
xor
rol
add
xchg
cmp
xchg
dec
xor
add
dec
inc
inc
adc
mov
inc
scas
shl
pop
pop
inc
push
mov
shl
std
sub
or
cmp
adc
cmps
cmc
repnz
loopne
jo
xchg
dec
inc
add
mov
mov
or
and
movs
aas
fwait
cmps
int
fwait
fwait
je
gs
mov
jb
imul
inc
inc
dec
inc
fsubr
jno
jmp
inc
pop
pop
push
inc
fimul
div
cmp
ins
aad
or
inc
adc
stos
icebp
inc
adc
inc
add
fcom
movs
pop
mov
imul
lods
lock
push
rcl
xor
dec
fst
or
cld
test
mov
hlt
adc
xchg
lea
or
inc
add
shl
or
adc
jmp
mov
cmp
cmp
sub
ror
mov
cmps
jge
inc
and
mov
aaa
and
dec
je
cmp
push
sbb
repz
outs
in
mov
out
sar
dec
mov
pop
mul
scas
pop
mov
fs
int3
ficom
inc
(bad)
mov
dec
std
add
mov
movs
mov
xor
push
test
jno
or
test
adc
aad
pop
loopne
cmps
sbb
lahf
in
pop
cmp
adc
jne
mov
xchg
push
or
aam
cmc
icebp
call
xchg
xchg
and
fsubr
mov
mov
push
movs
sbb
popa
mov
and
xchg
(bad)
rol
repz
shr
dec
pop
cmps
lods
in
sti
and
ins
call
xor
ds
in
lds
(bad)
xor
mov
out
mov
add
pop
push
mov
jae
push
cmp
ss
xchg
nop
lock
xor
in
adc
add
cdq
int
push
outs
xor
mov
js
outs
loop
int
add
fwait
sub
mov
idiv
loopne
jmp
xor
add
fcom
les
push
push
shl
popa
sbb
xchg
lods
push
jmp
push
imul
sub
cmp
sbb
in
push
cdq
es
inc
shl
push
xchg
xor
cld
ficomp
xchg
sar
push
add
(bad)
inc
fstp
or
fwait
push
xchg
fwait
cdq
sub
call
mov
cwde
stos
adc
scas
mov
pop
and
fmul
popf
and
inc
(bad)
dec
mov
shl
and
inc
shr
ja
in
add
hlt
jno
(bad)
mov
ror
sbb
xchg
outs
mov
icebp
dec
push
sbb
inc
in
xor
daa
or
jmp
and
push
pop
mov
jmp
and
lock
mov
lds
xchg
jo
add
mov
inc
mov
pop
inc
cmp
out
mov
aaa
fsub
push
jl
enter
ins
in
rol
dec
mov
xor
ror
jnp
inc
push
out
push
push
mov
add
mov
dec
cmp
add
dec
lods
icebp
leave
daa
(bad)
xor
in
push
test
jno
cmc
pop
mov
cmp
sub
push
mov
push
shl
hlt
mov
popa
jmp
retf
test
push
mov
aaa
dec
and
lahf
pop
and
jp
push
movs
nop
cmp
cmp
sbb
daa
imul
fdivr
adc
mov
sub
jno
dec
jo
out
pop
dec
movs
imul
gs
add
sub
jns
xchg
xor
or
fs
enter
les
push
lds
lock
outs
inc
jns
xlat
adc
xchg
icebp
pusha
cmp
(bad)
retf
mov
push
fst
imul
mov
(bad)
jns
adc
sub
xlat
jg
cmp
fs
adc
mov
add
push
out
and
mov
(bad)
dec
xlat
xor
aam
inc
sub
loop
rcr
sti
retf
fld
push
shl
jb
call
mov
daa
mov
lds
and
inc
jmp
and
inc
sub
imul
out
mov
jbe
ror
loopne
add
in
(bad)
pop
in
xchg
xlat
inc
mov
loope
leave
lea
loopne
or
mov
push
(bad)
mov
sub
mov
stos
into
sub
aaa
jne
(bad)
xor
push
mov
scas
or
adc
and
mov
popa
and
pop
rcl
mov
push
in
movs
and
cmp
jl
scas
dec
lds
pop
jp
out
lock
dec
lock
push
adc
or
or
imul
xor
mov
xchg
xor
inc
sar
das
imul
jo
(bad)
ret
(bad)
mov
(bad)
adc
cmp
fwait
retf
sti
xchg
adc
mov
je
in
jb
int3
xor
gs
jae
jecxz
sbb
or
ss
in
mov
dec
data16
es
and
inc
inc
gs
jne
sub
ror
sbb
inc
jbe
sti
mov
xor
movs
je
and
or
sahf
je
xor
(bad)
push
mov
jecxz
aam
add
jge
arpl
or
mov
add
jge
xchg
xchg
push
xchg
inc
sbb
fiadd
retf
adc
aad
push
push
mov
fnstenv
loopne
sbb
in
xor
pop
lods
movs
mov
push
pop
ffree
jg
lds
adc
shr
les
jbe
gs
add
outs
adc
lods
inc
loop
out
nop
pop
and
pop
dec
xlat
jns
xlat
xchg
xchg
cmps
xor
mov
ret
jp
gs
mov
sbb
stc
mov
mov
test
(bad)
ds
and
dec
cwde
sub
xor
pop
(bad)
mov
mov
cmc
fwait
add
sbb
cmp
or
fs
inc
in
ret
xchg
adc
adc
adc
xor
stc
add
aam
int
jne
(bad)
jne
adc
inc
mov
fistp
inc
dec
xor
jl
mov
inc
rol
sti
mov
dec
mov
sub
inc
movs
jae
popf
rol
fistp
sbb
mov
jmp
jbe
xchg
aas
loope
mov
pop
mov
shr
rcl
leave
mov
mov
test
mov
ret
nop
add
popa
adc
adc
mov
xor
call
fimul
mov
jne
pop
int3
jo
sub
test
xor
daa
hlt
xor
or
mov
sub
(bad)
out
xor
dec
fcomp
retf
pop
movs
daa
adc
stc
cmp
mov
gs
or
jle
leave
pop
aam
adc
mov
ret
out
(bad)
fs
into
test
popf
pop
or
retf
or
stc
xor
shl
fstp
cmp
in
xor
daa
mov
adc
hlt
scas
aaa
and
mov
and
movs
xchg
dec
ror
not
outs
add
push
cs
push
dec
mov
gs
mov
mov
outs
(bad)
ret
shl
daa
add
adc
and
stos
add
out
xchg
push
int
and
in
add
jo
lods
shl
and
pop
jmp
push
pusha
or
fistp
lods
inc
ins
loop
(bad)
and
mov
xchg
int3
pop
or
repz
mov
jae
cmp
mov
pop
ret
sbb
inc
arpl
xor
out
icebp
prefetch
or
outs
cmp
lds
push
sub
test
cmp
ret
or
jg
mov
mov
xlat
(bad)
in
push
aaa
test
icebp
jp
fistp
aam
icebp
xchg
jge
mov
jmp
sbb
and
mov
rol
shl
xor
dec
xor
push
and
dec
mov
js
ss
jae
xchg
cmps
jg
add
in
sbb
jle
loope
out
jno
and
fs
in
adc
sahf
loopne
sub
mov
jecxz
mov
movs
(bad)
rcl
jle
push
dec
push
and
stos
and
push
push
inc
mov
xchg
xchg
wrmsr
and
in
mov
hlt
mov
(bad)
lods
ja
jb
jno
movs
(bad)
ficomp
test
aaa
dec
fcom
leave
je
and
jl
std
ins
xor
push
and
test
stos
test
and
loopne
push
jg
jne
fld
cs
mov
mov
and
cmp
sar
movs
sub
cmps
in
mov
add
loope
inc
cli
sub
fsubp
dec
adc
and
xchg
clc
mov
jns
data16
lds
xchg
(bad)
adc
mov
or
adc
or
ins
(bad)
mov
movs
push
pop
not
rol
pop
mov
mov
mov
test
ret
add
push
jmp
adc
push
xor
add
ret
inc
mov
aad
dec
jno
dec
rcl
inc
loope
fnsave
(bad)
sub
sub
mov
adc
pop
stos
sub
in
imul
cli
jmp
popf
or
fadd
gs
jbe
shl
pusha
push
(bad)
(bad)
fimul
sub
movs
popa
and
xor
cmp
cmp
adc
sub
shl
cmps
aam
push
std
dec
lock
xchg
push
aad
fiadd
pusha
pop
cld
push
inc
lock
lock
test
data16
jb
push
pop
into
inc
outs
ins
out
scas
pusha
neg
lock
push
mov
mov
cwde
jae
je
jne
outs
lock
pop
jns
jg
clc
or
sbb
xchg
xor
fmul
cld
mov
cwde
cmc
inc
in
and
adc
adc
xor
je
push
nop
test
jnp
inc
adc
add
and
and
bound
mov
pop
pop
inc
cwde
pusha
cmps
or
mov
push
push
idiv
cmp
mov
xlat
xor
retf
fadd
ret
jg
inc
jnp
(bad)
push
or
aam
nop
cwde
mov
cmp
adc
mov
out
mov
add
inc
repnz
inc
rcl
xchg
jns
and
add
xor
nop
nop
mov
fbld
popf
mov
in
repz
lods
mov
jl
jle
inc
movs
and
sbb
pop
add
je
pop
add
adc
and
mov
push
test
add
xchg
aas
idiv
or
cmc
xchg
add
push
sbb
adc
cmps
push
adc
aaa
sbb
ja
je
mov
adc
(bad)
adc
dec
repnz
xchg
lods
push
cmp
movs
ror
mov
lock
int3
mov
shr
add
xchg
jl
loopne
mov
inc
repnz
nop
ret
mov
mov
aas
and
inc
mov
and
mov
mov
retf
xor
cdq
mov
in
inc
inc
lods
mov
adc
icebp
mov
jle
push
mov
nop
adc
jmp
xor
xchg
mov
inc
cld
push
in
xchg
cmp
(bad)
imul
xchg
inc
cmp
xor
cwde
push
jbe
adc
test
xchg
xchg
mov
fmul
dec
xor
js
mov
sbb
xchg
mov
xchg
mov
cmpxchg
inc
add
aam
stc
adc
mov
sub
adc
mov
mov
es
jge
je
les
in
pop
push
mov
inc
push
jno
mov
pop
jp
jo
leave
loope
xchg
aam
adc
xor
add
vpaddusb
out
push
pop
sbb
fs
test
mov
mov
imul
add
xchg
xor
mov
and
in
gs
imul
movs
dec
pop
cmp
sub
imul
push
and
xor
inc
rcr
or
ret
push
mov
ja
push
aaa
xchg
inc
xchg
jno
ror
mov
in
in
jbe
xor
mov
movs
dec
jle
out
jmp
popa
or
imul
mov
repz
and
ds
fs
popa
aaa
cdq
loop
iret
add
push
mov
das
or
inc
je
or
into
cmc
loopne
or
cmp
icebp
and
fwait
xor
add
and
arpl
daa
or
outs
add
cmc
mov
cmp
out
or
cld
cli
(bad)
xor
iret
pop
cli
int3
jne
in
push
lds
cmps
xor
mov
mov
in
inc
scas
lods
and
inc
add
ins
pop
add
or
xchg
addr16
fsubr
arpl
adc
inc
nop
je
inc
adc
lahf
cmp
enter
adc
pop
(bad)
adc
jl
sub
hlt
xor
hlt
aaa
popf
cld
mov
mov
xor
sbb
sub
jl
test
push
or
xor
inc
pop
mov
lods
add
push
dec
and
retf
loop
sbb
adc
inc
push
inc
pop
shr
add
adc
outs
shl
loopne
mov
xor
hlt
pop
cmp
sbb
xor
xchg
jne
push
ins
xchg
movs
adc
jp
pusha
std
push
jb
lods
pop
inc
enter
xchg
cmp
ret
ins
and
mov
pop
or
xchg
and
imul
and
in
arpl
cld
dec
push
es
jmp
cmp
inc
push
es
dec
jno
dec
mov
repnz
pusha
cmp
mov
xor
shr
js
jmp
or
ret
lds
cmps
add
mov
fmulp
xchg
imul
aas
xor
(bad)
div
xchg
addr16
clc
std
repz
fistp
mov
outs
xchg
addr16
(bad)
arpl
inc
jno
add
movs
sbb
call
sub
dec
jae
lods
inc
cli
clc
mov
ret
jp
or
jl
pushf
test
pop
mov
in
mov
inc
sbb
jecxz
inc
js
and
push
jbe
mov
ins
xor
jl
(bad)
(bad)
adc
cwde
cmp
rcl
push
fs
adc
ss
and
fs
mov
sbb
xor
in
cdq
test
outs
or
rcr
data16
outs
jmp
xor
and
jns
retf
les
pop
xchg
mov
loope
repz
inc
rcl
push
jecxz
lods
dec
xchg
mov
int3
out
dec
mov
(bad)
sbb
scas
mov
mov
cmp
pop
aam
xchg
hlt
mov
push
je
loope
push
out
add
lods
and
adc
dec
(bad)
and
inc
mov
sub
mov
fdivr
rcl
push
cli
adc
add
mov
dec
cmp
inc
and
jno
push
aaa
adc
or
in
out
dec
out
(bad)
rol
inc
cmp
xchg
fisttp
loope
mov
data16
icebp
mov
dec
add
inc
and
and
movs
inc
mov
lds
or
xchg
xor
retf
imul
in
push
jo
cmc
adc
aad
sub
xor
pop
and
js
test
adc
arpl
je
jno
inc
ins
fs
cmc
mov
and
inc
jecxz
xchg
xchg
cmps
jno
xor
inc
dec
mov
and
rcl
xor
popa
mov
cmc
jmp
jmp
lahf
cdq
add
pop
sub
(bad)
pop
add
dec
call
(bad)
xchg
jbe
aaa
mov
add
icebp
dec
inc
cmp
in
xor
repnz
cdq
inc
xor
fiadd
adc
fwait
aas
pop
outs
add
xlat
std
xor
inc
rol
sti
jae
ins
mov
in
inc
push
jmp
push
jecxz
mov
inc
jae
out
outs
popa
sbb
inc
xchg
std
out
daa
mov
in
jmp
test
ins
cmc
retf
push
loopne
bound
in
and
mov
inc
jb
sti
mov
stc
cmp
xchg
and
xor
inc
in
call
sub
or
addr16
xchg
jne
cdq
mov
adc
pop
cmc
or
xor
and
dec
icebp
out
sub
or
pop
nop
xor
repnz
push
adc
shl
mov
mov
adc
neg
sub
xor
fnstenv
xchg
mov
and
mov
mov
sbb
mov
div
and
clc
cmp
mov
xchg
pop
outs
hlt
mov
mov
sub
rcl
movs
js
add
mov
enterw
mov
lds
cld
movs
push
pushf
pop
shl
cld
mov
pop
into
push
mov
lock
rcr
jno
cmp
cmp
xchg
push
out
cmp
push
inc
inc
push
jmp
inc
mov
imul
jne
gs
cld
cmps
sub
fwait
xchg
(bad)
jae
jmp
loopne
outs
ror
cwde
mov
sbb
das
or
cs
leave
daa
and
or
test
inc
push
xchg
enter
dec
movs
or
imul
popa
add
sub
xchg
in
iret
lds
cdq
and
lds
pop
mov
add
nop
arpl
rol
lods
xor
pop
std
(bad)
test
hlt
adc
popa
jne
mov
cwde
and
loope
jl
pop
adc
std
jno
push
pushf
sbb
inc
rcl
ret
bnd
xchg
xor
jp
aam
stc
inc
(bad)
push
bound
dec
mov
mov
xor
iret
jno
and
and
add
fisubr
shl
(bad)
sahf
outs
nop
popa
test
mov
sahf
imul
(bad)
repnz
and
repnz
cmp
add
pop
iret
in
add
inc
jnp
mov
bound
mov
imul
inc
push
hlt
rcr
icebp
add
jne
cs
korb
(bad)
repnz
dec
mov
shr
in
std
add
mov
sbb
call
or
mov
mov
mov
cmps
pop
popf
cmps
das
inc
sub
xchg
aad
ds
add
xchg
ss
pop
xor
(bad)
aas
and
push
test
sub
ret
int
jno
pop
cmc
and
sub
jne
hlt
ret
sub
jbe
rcr
nop
sbb
add
loope
out
ret
rol
loopne
not
sbb
(bad)
out
aad
inc
repnz
in
and
jle
(bad)
mov
inc
xchg
test
pushf
repnz
push
inc
js
push
lock
pop
pop
rcr
inc
dec
pop
add
std
scas
hlt
icebp
jl
and
sub
test
fdiv
mov
mov
xor
retf
mov
and
pushf
test
lahf
fldenv
mov
push
call
movs
sub
push
xchg
test
fwait
out
test
mov
sbb
pop
dec
pop
push
and
ficom
cmps
cmp
(bad)
jae
repnz
cmp
mov
jne
mov
ss
retf
int3
std
mov
test
mov
dec
pop
sbb
adc
jae
inc
(bad)
xlat
fdiv
cmp
xchg
add
or
stc
mov
rcr
and
or
mov
jnp
push
and
lock
or
pop
fild
xchg
add
fnstenv
jnp
jae
(bad)
xchg
mov
lds
sub
adc
rcl
adc
sub
(bad)
rol
mov
lahf
retf
loope
lahf
test
cmp
fidivr
fs
push
push
mov
inc
les
outs
jns
inc
fwait
addr16
add
jp
adc
dec
mov
in
jne
fdiv
(bad)
popa
or
cmps
mov
mov
int
jp
test
(bad)
int
push
fnsave
int
aad
jl
xchg
scas
lock
fld
mov
test
shl
lods
pop
pop
pop
lahf
cmp
out
mov
pop
push
pop
les
shl
dec
addr16
sub
pop
jle
inc
daa
push
adc
or
push
mov
loop
pop
inc
push
ficom
mov
xor
pop
mov
xchg
mov
lds
(bad)
push
mov
into
pop
xor
and
pushf
lock
xor
mov
sbb
dec
and
scas
movs
es
add
push
and
and
and
(bad)
(bad)
dec
cmc
dec
mov
pop
in
je
int
push
inc
(bad)
out
inc
lea
inc
jnp
mov
enter
pop
pop
(bad)
xchg
(bad)
popa
lods
pop
lock
shl
sub
repz
cmp
jns
stc
aaa
jg
inc
(bad)
mov
xchg
ins
sub
mov
shr
xchg
ret
sti
sbb
fs
iret
adc
mov
pop
jns
pop
inc
push
bound
jbe
jo
mov
or
ja
mov
mov
test
ret
mov
in
shl
aam
jae
jbe
arpl
or
dec
ficom
adc
cmps
cwde
or
leave
add
test
dec
add
movs
psubw
cmps
imul
dec
ds
mov
xchg
sbb
mov
jno
jbe
push
add
xchg
or
push
les
xor
mov
pop
int
nop
or
mov
ins
jl
add
fldenv
pushf
pop
push
sub
jne
fstp
sbb
sbb
mov
xor
sub
out
sbb
add
test
jae
je
shl
xor
add
sbb
movs
popf
inc
and
sbb
jmp
in
xchg
fdivrp
xor
pop
popf
pusha
je
inc
inc
sbb
icebp
addr16
ds
pusha
aas
mov
stc
add
xor
adc
jo
inc
jecxz
aam
inc
lock
mov
ja
and
push
shl
pop
mov
jg
out
test
xchg
adc
inc
sti
push
jg
sti
fs
or
cwde
xlat
mov
mov
and
xchg
sub
rol
mov
jge
ror
out
and
add
sub
xor
mov
enter
sub
mov
cwde
(bad)
mov
xchg
rcr
inc
aam
fcomp
movs
cmp
fwait
stos
fsubr
sbb
mov
imul
js
inc
inc
imul
ins
(bad)
push
or
mov
ret
movs
add
mov
xchg
icebp
mov
icebp
add
les
push
mov
movs
nop
mov
ss
cmc
stc
ins
fcomp
rol
jbe
test
pop
hlt
mov
mov
and
test
sbb
aas
int3
ret
cmp
cmc
mov
rcr
mov
add
jecxz
test
fwait
ss
fs
dec
stc
jbe
mov
jle
inc
push
fbld
dec
(bad)
es
pop
lds
popa
in
movs
gs
bnd
mov
fidivr
mov
popf
mov
and
es
xchg
adc
icebp
movs
imul
dec
jmp
mov
mov
mov
add
in
pop
pop
ficomp
cmps
(bad)
cdq
movs
int3
or
cmc
popa
sti
push
xchg
inc
hlt
cmp
inc
inc
test
mov
or
pop
inc
mov
and
pushf
movs
or
hlt
push
mov
mov
out
push
pop
fist
jo
ror
xlat
iret
fucomip
sar
arpl
sub
jnp
dec
mov
retf
retf
sub
jne
jmp
and
and
add
(bad)
sbb
cmc
pop
mov
mov
or
clc
xchg
mov
sbb
loop
(bad)
sbb
cmp
and
out
les
dec
inc
xor
pop
aad
sbb
adc
cmp
xchg
aam
test
mov
test
(bad)
in
rol
jmp
ret
loop
pop
mov
or
mov
repz
push
fnstenv
jbe
in
cmp
inc
mov
aad
or
mov
int3
pushf
into
shr
cmp
std
push
inc
sbb
jge
cmp
pop
nop
mov
jecxz
sbb
jo
xchg
fsub
push
out
mov
push
(bad)
stc
sar
arpl
jnp
sbb
lock
pop
call
fnstenv
mov
(bad)
fld
dec
pop
mov
dec
out
ins
xor
neg
call
adc
add
pop
push
(bad)
jmp
sbb
push
mov
mov
or
(bad)
popa
out
gs
ficom
xor
mov
loopne
xchg
loopne
xchg
push
and
and
cmc
jno
mov
xor
repz
call
leave
dec
mov
inc
arpl
inc
ror
add
inc
and
jnp
cmp
or
lea
lds
scas
es
cmc
xchg
adc
int
in
mov
dec
hlt
imul
and
ror
or
sbb
popa
sar
pop
jmp
in
push
loopne
and
cld
adc
xchg
jne
cmps
in
sbb
movs
lds
adc
pop
inc
xor
cld
cmp
nop
cmp
mov
lds
repz
jmp
push
xor
adc
out
mov
shl
mov
loope
and
dec
jo
mov
xor
pop
aas
pop
or
fcomip
pop
mov
lods
lock
push
outs
mov
pop
ret
les
xchg
inc
ins
mov
mov
fisttp
jp
aam
inc
cli
lods
imul
jns
push
leave
sub
std
mov
ja
pop
add
jecxz
loop
aas
mov
ins
jge
lods
xchg
pusha
in
pushw
jae
xchg
inc
call
dec
jecxz
jb
pusha
mov
cdq
add
add
inc
hlt
xor
xchg
cdq
js
sub
out
cli
xor
adc
xor
mov
imul
dec
adc
(bad)
gs
lds
shl
cmps
jecxz
mov
aad
and
ds
cmp
out
icebp
jp
arpl
mov
mov
xor
out
inc
adc
xchg
sbb
xor
dec
out
mov
movs
stc
pop
les
test
or
movs
pop
icebp
in
sub
out
mov
pop
inc
dec
mov
aaa
cmps
addr16
outs
mov
push
shl
cdq
test
fldenv
das
push
(bad)
jno
je
movs
adc
dec
rol
or
aam
jmp
or
jo
and
aad
scas
xchg
or
cdq
mov
bound
and
add
ss
inc
outs
mov
popa
scas
imul
pop
(bad)
retf
mov
ret
int
adc
push
cmp
in
data16
lahf
add
jb
jle
jae
mov
mov
push
add
ins
add
jne
pop
scas
popf
jno
adc
addr16
mov
in
call
mov
mov
mov
mov
mov
fnsave
addr16
push
vsubps
clc
dec
push
lods
js
mov
loop
outs
shl
mov
add
sbb
cmp
addr16
loope
jle
fnsave
adc
gs
push
gs
push
add
push
es
(bad)
lock
aam
cmp
leave
movs
jno
mov
dec
inc
jb
pop
xchg
repz
outs
ins
retf
cmc
push
xor
sahf
and
data16
out
add
shl
jbe
mov
pop
ja
mov
test
fnstcw
aaa
jge
pop
mov
rol
out
movs
arpl
(bad)
movs
stos
cmps
sbb
mov
rcl
or
scas
xchg
stc
cmp
fwait
pop
push
shl
xor
sbb
jo
shl
js
outs
and
xchg
pop
add
shl
sub
cdq
push
popf
mov
hlt
mov
adc
pushf
(bad)
dec
call
pop
xchg
push
push
jle
or
bound
fidiv
mov
repz
xor
pop
in
sbb
ror
test
adc
push
call
xchg
push
or
fiadd
mov
jo
xor
movs
inc
idiv
mov
into
jnp
mov
movs
lea
mov
dec
xchg
shl
cmp
sahf
xor
dec
in
daa
rcl
out
dec
push
sbb
in
mov
loope
dec
push
mov
add
out
pop
push
adc
aam
ret
icebp
adc
or
add
pop
movs
push
out
push
cmps
mov
movs
jae
pop
shl
out
inc
pusha
adc
sbb
es
lods
adc
dec
push
inc
jns
mov
jmp
test
mov
inc
ins
movs
xchg
sbb
in
popf
dec
lods
jo
ja
xchg
test
xchg
retf
dec
push
push
inc
push
add
xor
jae
arpl
jno
push
push
fld
das
loope
mov
add
cmc
mov
loop
jmp
push
push
sub
xor
xchg
gs
cmp
lods
sub
jge
les
out
pop
clc
hlt
pop
xlat
jbe
loop
outs
xchg
cmp
xlat
leave
out
push
cs
or
rcl
ds
cmp
pop
sbb
mov
test
dec
fmul
not
push
push
xchg
ins
and
fiadd
les
xor
sar
add
cdq
loopne
xor
xchg
xchg
inc
inc
js
add
adc
adc
xchg
xor
(bad)
adc
out
aam
je
mov
(bad)
mov
loope
xor
adc
popa
cmp
rol
jo
pop
std
jne
test
sbb
mov
arpl
cmc
mov
sub
jb
xchg
and
cmp
add
mov
inc
inc
and
push
xchg
pop
aad
fild
xor
pop
and
and
and
xchg
add
retf
pop
aas
sbb
popa
lock
pop
fisub
je
push
test
cld
xchg
sbb
jmp
les
lock
xchg
push
cs
dec
icebp
test
mov
hlt
pop
cmps
and
or
sbb
push
push
movs
add
cmc
je
sbb
xor
and
cmc
xor
sub
push
fs
(bad)
and
push
aas
aaa
fild
push
push
dec
xor
add
test
xor
cld
idiv
add
inc
add
or
aaa
jle
(bad)
popf
cmp
cmp
lds
push
add
or
pop
pusha
cmps
test
scas
ret
or
dec
arpl
out
pop
adc
enter
std
and
adc
enter
shl
mov
mov
ja
mov
mov
jl
mov
sub
loope
add
aam
lods
pusha
push
jno
inc
cmp
jge
adc
sub
enter
or
daa
cld
push
inc
add
add
xchg
pop
adc
sar
adc
aam
mov
call
rcr
add
xchg
stc
pop
mov
out
call
or
adc
inc
aam
push
xor
add
addr16
jne
cmc
pop
outs
ret
xchg
arpl
mov
push
mov
loope
jae
jne
xlat
repz
test
es
movs
and
sbb
jmp
and
pop
hlt
test
inc
stos
add
sbb
popf
xor
fs
test
mov
inc
retf
adc
or
je
jecxz
adc
xor
(bad)
(bad)
out
leave
sbb
sub
rcl
in
iret
xor
arpl
into
push
add
call
in
jae
mov
test
xchg
add
retf
ins
cmp
xchg
jmp
pop
push
mov
dec
(bad)
fiadd
cmps
gs
adc
xchg
add
add
xchg
es
movs
lods
jecxz
ins
adc
xor
out
add
mov
lods
cmp
cmp
in
mov
inc
loopne
cdq
push
jmp
add
xor
aad
sub
stos
out
xchg
add
sub
inc
or
popa
push
xchg
and
push
ja
popf
not
mov
loopne
mov
jne
dec
push
pop
nop
xchg
stos
xor
psubsb
cli
adc
push
mov
cmc
push
cmp
in
adc
xchg
xor
adc
sub
dec
xchg
jne
mov
shl
mov
enter
xchg
xchg
loope
aam
out
add
aaa
aad
cmp
frstor
mov
sub
sahf
adc
mov
mov
push
add
inc
jge
sbb
sbb
out
lods
and
or
push
pop
mov
mov
mov
mov
outs
rcl
ins
aas
mov
in
(bad)
movs
in
fs
(bad)
jmp
icebp
xchg
cmc
repz
mov
in
add
pop
lods
mul
pop
imul
inc
std
add
ja
test
cmp
jb
inc
inc
pushf
std
jnp
dec
push
rcr
je
(bad)
and
sbb
setno
in
or
add
ror
xchg
cmp
clc
push
in
add
icebp
hlt
sub
sub
nop
in
gs
mov
cmp
sbb
jmp
fimul
add
mov
aaa
out
mov
mov
shr
mov
mov
adc
sbb
jns
dec
mov
mov
push
mov
loope
shl
dec
inc
cmps
ror
adc
cmps
mov
dec
and
adc
xchg
inc
mov
mov
jmp
and
ds
mov
les
xchg
scas
or
jns
les
aas
iretw
cmc
push
sar
fist
ss
ja
stc
jae
pusha
dec
aas
shl
push
fxch
arpl
popf
out
push
pop
dec
int3
pop
lds
fs
sub
push
aas
jge
push
rcl
xchg
cmc
xchg
cmps
mov
mov
adc
(bad)
mov
ret
jge
or
loope
add
cmp
(bad)
loop
sbb
stos
lods
fnstenv
test
add
jb
xchg
or
test
add
outs
neg
add
or
in
lods
enter
pop
int
sub
(bad)
xchg
push
rcl
sbb
push
call
fnstenv
mov
mov
mov
dec
mov
cmc
sti
bsf
inc
add
pusha
mov
movs
mov
mov
call
loopne
push
xor
aas
adc
sti
xchg
daa
adc
pop
mov
cmps
sbb
cmp
bound
fwait
ss
cmps
mov
ror
pop
jmp
sbb
sub
mov
pusha
push
jecxz
paddusw
and
rcl
pop
mov
push
mov
imul
ins
lock
arpl
mov
inc
into
adc
test
cld
cmp
mov
repnz
mov
mov
mov
mov
cli
mov
xor
sbb
sbb
and
fwait
mov
cmc
mov
loope
cmp
ss
mov
jl
add
dec
jecxz
xor
cld
jmp
stc
enter
mov
dec
js
xchg
cmp
(bad)
mov
push
add
cld
ins
bound
test
push
loope
inc
jmp
les
push
gs
std
cmp
ret
popa
add
fist
aam
outs
or
pop
or
jecxz
fucomi
add
push
and
dec
test
xchg
les
clc
in
mov
add
test
das
xchg
cmc
movs
out
ret
mov
mov
dec
sub
dec
adc
test
pop
pop
(bad)
adc
std
test
add
jne
cmc
pop
xlat
psrlq
hlt
xchg
add
ret
adc
pop
add
jle
cmp
jnp
movs
xchg
loop
xor
or
push
lds
adc
mov
xor
push
in
dec
fild
mov
and
add
ror
xor
pop
xchg
fdivr
push
dec
(bad)
or
aad
outs
add
and
pop
out
push
push
sub
pop
xor
ja
pextrw
fs
jno
or
cli
movs
sub
cli
leave
xchg
mov
or
inc
xor
or
and
das
test
xchg
inc
test
dec
jne
inc
test
ret
jbe
pop
aam
push
jo
jecxz
add
and
rcl
dec
aam
aad
xchg
loope
(bad)
mov
push
mov
jmp
not
aad
inc
fld
aam
mov
add
add
in
and
fidivr
lock
icebp
stos
daa
lahf
xor
fimul
pop
or
inc
icebp
movs
wrmsr
adc
add
test
idiv
inc
mov
xchg
jmp
je
lods
out
adc
jae
or
fnstcw
mov
and
mov
mov
cld
add
or
sbb
ja
xchg
push
rcr
xor
or
into
imul
sahf
fidiv
push
shr
or
fwait
out
arpl
rol
retf
sbb
cmps
rcr
xchg
dec
(bad)
imul
jns
or
pop
xchg
out
push
bound
mov
jecxz
pop
sahf
sbb
arpl
mov
jp
dec
xchg
scas
or
cmp
pusha
data16
cwde
mov
jns
add
mov
or
addr16
push
retf
xor
cmp
popa
(bad)
aam
dec
add
inc
into
xor
lock
push
iret
inc
dec
pusha
in
mov
movs
sbb
add
mov
data16
ss
mov
pop
push
cdq
and
adc
fst
rcr
call
mov
xchg
and
dec
aam
imul
(bad)
and
les
fabs
push
loope
and
in
push
jo
mov
(bad)
dec
cmp
stc
ja
sbb
test
adc
cmc
mov
sbb
and
sub
mul
mov
push
sahf
in
movs
xor
and
xlat
mov
jecxz
pop
sub
xchg
sahf
and
clc
add
ret
popa
adc
icebp
adc
and
lahf
icebp
into
push
dec
push
mov
test
icebp
jo
pusha
pop
xchg
int
cmp
mov
ror
or
out
sub
enter
ret
add
aas
adc
gs
aaa
rol
ret
mov
aad
mov
xor
lods
mov
pop
loopne
xrelease
and
aam
mov
and
xchg
retf
mov
leave
pop
nop
add
fst
shl
or
repz
in
enter
movs
sub
les
rcr
add
sahf
and
ds
pop
jno
test
popf
push
and
mov
adc
push
push
jbe
repz
shl
cli
stos
jns
gs
aad
adc
xor
and
(bad)
xor
daa
xor
mov
jns
sbb
mul
and
jb
xor
int
mov
mov
int
loopne
xchg
je
pop
pusha
or
cs
and
adc
mov
stos
adc
out
xchg
pop
movs
repz
xor
repnz
mov
retf
xor
jmp
inc
fild
fld
add
into
jne
nop
push
xchg
add
scas
pushf
add
xor
inc
mov
xor
mov
int
cmp
addr16
add
mov
pop
in
or
es
xor
je
and
fld
cmp
fbstp
call
mov
push
and
jno
imul
mov
xor
xchg
es
pop
pushf
lea
add
inc
xchg
cmc
sbb
inc
test
icebp
fs
int
cmps
push
mov
(bad)
fstp
xchg
lock
cmp
sub
cdq
mov
jo
sub
mov
dec
jne
dec
jo
xchg
jo
aad
pop
in
in
push
out
les
fcmovb
or
push
sbb
(bad)
mov
popf
bound
shl
inc
cmc
xor
movs
sbb
nop
mov
mov
stos
shl
les
mov
icebp
mov
gs
xchg
pop
test
sbb
xchg
sub
cmp
jns
enter
and
add
mov
cld
dec
pop
jne
sbb
imul
fld
sar
add
adc
stc
jne
loopne
mov
retf
adc
loope
fld
jb
inc
inc
push
lea
cdq
lods
jno
inc
pop
jns
loope
aam
pop
lods
jno
fldenv
push
je
arpl
ja
(bad)
xchg
adc
pop
xlat
(bad)
bnd
or
shr
adc
add
sbb
test
push
cdq
cld
adc
push
test
cmp
xor
jg
adc
and
test
mov
and
mov
cdq
cmc
inc
(bad)
cmp
jbe
fld
push
pusha
sbb
sahf
test
push
gs
pop
cmps
mov
lds
xor
retf
ja
cmp
and
cmc
loope
mov
xor
dec
push
add
push
rol
lods
and
push
test
pop
fsub
sub
push
xchg
lock
test
mov
icebp
xlat
mov
lahf
out
fild
pop
out
xchg
dec
outs
fimul
int
rcr
cmp
inc
mov
icebp
inc
pop
ins
in
mov
icebp
mov
and
mov
test
icebp
xor
cmc
ja
xchg
data16
xor
jno
movs
cmp
movs
inc
movs
ret
scas
mov
cmp
mov
sub
aas
pop
jp
(bad)
out
loop
gs
mov
push
shr
test
adc
out
bound
mov
mov
mov
or
cmp
sahf
cmp
scas
sub
adc
sbb
sar
mov
pushf
dec
add
or
cld
scas
adc
mov
xchg
pop
shl
clc
lods
and
addr16
mov
jo
xchg
xor
fsubr
call
je
pop
test
xor
mov
cdq
push
jmp
and
dec
xchg
(bad)
inc
pop
div
imul
or
pop
(bad)
hlt
popa
daa
inc
dec
call
mov
out
cmp
repnz
mov
jno
push
pop
sbb
shl
mov
cmp
neg
or
pop
xchg
rol
inc
or
pop
pop
dec
pop
jae
rol
xor
mov
and
shl
push
add
mov
pop
stos
sbb
call
inc
or
das
mov
push
cmc
nop
in
dec
shl
dec
mov
(bad)
mov
jge
push
loope
ret
neg
sub
movs
xchg
test
fucomp
pusha
inc
cwde
popa
mov
popa
jne
adc
pop
pop
cmp
int
idiv
push
das
inc
adc
mov
rol
mov
call
out
push
mov
mov
dec
arpl
lea
adc
jecxz
bswap
pop
xor
aas
jmp
mov
sahf
inc
xchg
leave
sub
ror
pop
xor
dec
cmp
add
test
outs
daa
(bad)
xchg
retf
das
aam
and
data16
push
push
push
addr16
imul
imul
mov
(bad)
call
sub
xor
popf
add
popaw
movs
ficom
fdiv
movs
and
hlt
add
dec
call
sbb
jg
hlt
inc
mov
repnz
and
shr
(bad)
mov
inc
jle
clc
inc
sbb
jbe
xchg
sub
test
cmps
xchg
mov
pop
add
xchg
or
gs
jb
add
mov
xchg
pusha
xor
adc
std
fwait
jns
xchg
cmps
fbld
push
lock
adc
pop
gs
add
iret
stc
jnp
mov
xor
out
in
std
das
ins
push
cwde
iret
mov
dec
pop
inc
(bad)
test
dec
outs
xor
mov
js
inc
cmp
and
pop
aaa
jecxz
pop
mov
sub
pushf
sbb
lds
rol
popf
loop
int3
aaa
pop
or
jbe
inc
and
xor
mov
add
(bad)
mov
or
mov
je
ins
in
push
mov
xchg
push
aad
loope
cmp
mov
mov
add
lods
loopne
adc
xchg
xor
cmp
ins
push
popf
add
mov
lds
pop
dec
cdq
jmp
arpl
lock
adc
jo
dec
scas
mov
rcl
xchg
retf
(bad)
cmp
push
iret
adc
loop
cmc
mov
out
lds
inc
adc
aad
movs
aam
mov
add
mov
(bad)
rol
stos
dec
push
xor
mov
mov
data16
shl
pushf
pop
xchg
adc
in
pop
pop
fnstenv
jb
(bad)
out
test
rol
dec
xor
neg
xlat
pop
dec
gs
xor
cmp
fldlg2
lods
cmp
cmp
shl
pop
inc
adc
nop
mov
mov
cmp
mov
mov
add
adc
arpl
test
ja
or
fcomp
or
push
xchg
data16
dec
mov
add
rcr
and
fcom
popa
push
jne
in
rcl
test
xor
in
fs
xor
loopne
(bad)
jae
jne
xor
jo
int3
adc
cmps
pop
push
dec
loope
das
dec
test
push
jle
pusha
sub
sbb
jno
and
cmp
js
pop
(bad)
cmc
les
scas
in
mov
pop
(bad)
rcr
mov
adc
imul
cmp
add
lahf
das
clc
jbe
mov
out
push
test
daa
lea
cli
mov
pop
dec
dec
xor
(bad)
jge
sti
dec
xchg
sub
add
and
shl
jg
push
push
imul
retf
repz
inc
outs
daa
lds
mov
ja
add
adc
loop
sahf
test
jo
mov
mov
add
and
in
xor
nop
ja
addr16
mov
stc
jno
std
cmc
mov
shl
jle
test
pop
movs
add
xor
shl
jns
mov
ds
add
sbb
daa
dec
ret
xor
xchg
pop
cmp
mov
mov
int
add
sub
sbb
sub
std
in
and
(bad)
(bad)
push
mov
push
inc
in
call
nop
mov
inc
jmp
out
mov
inc
shl
pop
loope
mov
mov
cmc
mov
and
cmps
push
cmp
ss
inc
xor
or
cmps
mov
mov
mov
jg
jns
mov
xchg
cwde
lods
sub
gs
jmp
and
mov
rcr
lahf
movs
cmps
xchg
xchg
mov
call
repz
(bad)
addr16
mov
(bad)
dec
addr16
xlat
ins
xor
push
xor
dec
out
int3
sub
mov
jbe
push
movs
imul
mov
mov
call
or
jb
mov
je
mov
pop
cmc
imul
pop
pop
adc
mov
adc
or
cmc
cmp
ja
fst
xor
mov
adc
mov
(bad)
rol
sub
ror
imul
mov
dec
xchg
lea
retf
pop
jecxz
daa
jg
enter
mov
fldcw
push
outs
mov
cmp
icebp
(bad)
out
repz
outs
and
cmp
add
jle
push
push
out
fdivr
cmps
xchg
test
scas
aam
jne
scas
dec
fild
add
in
inc
mov
scas
sbb
shl
out
and
pusha
sbb
inc
add
push
test
mov
inc
fcmovu
sahf
(bad)
push
mov
ret
dec
cs
icebp
ror
add
leave
pop
cdq
shl
arpl
sar
add
aaa
mov
ret
sbb
adc
mov
xor
test
cmps
loopne
mov
cmp
cmps
inc
bound
push
das
rcr
fistp
sbb
mov
aad
leave
xchg
ins
test
icebp
loope
loopne
lock
push
mov
xor
pusha
sub
xchg
and
fisub
xchg
xchg
or
pop
push
xor
pop
mov
(bad)
mov
ret
add
sbb
imul
repz
loopne
fwait
xor
jg
stos
out
mov
mov
movs
xchg
mov
inc
inc
cmp
mov
sub
or
shl
inc
js
sub
lods
rol
ja
cmp
mov
or
inc
dec
pop
xchg
mov
add
movs
add
lds
jns
int3
pusha
loope
stos
in
popa
pop
std
loopne
dec
cmp
cmps
push
adc
or
loope
into
popa
es
stos
sar
jp
push
rcr
pop
icebp
out
shl
mov
adc
cmp
adc
lock
fist
test
mov
ins
inc
pop
ror
jae
mov
xchg
int
mov
into
xor
adc
or
and
cli
bound
and
mov
push
int3
pop
jmp
les
daa
cmps
mov
mov
rcr
xlat
pushf
jmp
movs
addr16
jmp
pop
pop
ret
ror
pusha
jnp
in
xchg
xchg
repnz
cld
sub
(bad)
and
adc
sbb
xor
div
xlat
(bad)
lods
pop
rol
inc
in
cmp
sbb
popf
dec
test
or
fs
sti
(bad)
xor
aaa
lock
pop
test
arpl
popf
push
out
sub
and
jo
cmp
xchg
daa
ins
daa
inc
enter
clc
sbb
pusha
xor
adc
out
in
shl
rcl
mov
mov
mov
ret
out
pop
adc
jno
stos
fwait
loop
xor
in
xor
cs
push
mov
inc
out
(bad)
ds
mov
pushf
movs
adc
in
inc
jmp
int3
sbb
push
out
neg
adc
cmp
icebp
div
sbb
mov
shl
in
int3
xchg
cmc
inc
aaa
das
and
cmps
fldenv
out
rcr
shr
add
sbb
icebp
dec
ficomp
mov
out
push
pushf
(bad)
mov
shl
mov
pop
jle
addr16
pop
inc
xor
xor
jp
shl
into
xchg
loope
pushf
popa
(bad)
pop
(bad)
pop
mov
hlt
push
mov
dec
pop
js
sahf
shl
or
jno
mov
mov
ret
mov
(bad)
call
adc
fcmove
imul
mov
cli
and
adc
jae
addr16
xor
add
shr
push
call
adc
inc
sbb
pop
(bad)
xchg
sbb
pusha
mov
movs
adc
movs
xchg
jnp
jb
mov
(bad)
jae
outs
add
sbb
inc
popa
dec
int3
sub
adc
leave
popa
pop
loope
push
adc
add
cmc
xor
mov
mov
jmp
addr16
adc
xlat
or
jecxz
jb
test
pop
iret
xchg
(bad)
and
cmp
and
adc
jg
cmp
mov
mov
cmp
outs
loop
loopne
jp
lea
xchg
rol
inc
cld
add
jecxz
cmp
and
xchg
sbb
shl
dec
adc
ror
jle
cmp
xchg
pop
mov
clc
cmp
int
and
fst
adc
push
retf
push
push
test
in
jle
jmp
pop
xor
(bad)
cs
cmps
and
xor
sbb
stc
mov
xchg
imul
loope
and
cmp
jbe
popf
outs
rcl
mov
sub
push
ds
inc
xchg
jnp
jge
icebp
nop
mov
in
or
fld
mov
and
xor
ret
mov
add
mov
mov
cmp
fild
mov
push
sub
in
rcl
lock
popf
rcr
mov
fnsave
fld
push
cli
adc
lods
xchg
xchg
retf
xchg
stos
idiv
retf
retf
aam
aas
ds
jo
stos
pusha
movs
push
mov
in
(bad)
in
call
jge
add
sbb
retf
xchg
push
push
fadd
xchg
lock
and
lods
adc
test
scas
in
jno
xchg
jae
mov
push
fst
adc
addr16
rol
jo
call
mov
pop
fs
xchg
les
sti
sub
imul
hlt
mov
gs
loop
and
mov
push
xor
inc
pop
xor
leave
inc
push
popa
push
push
push
add
mov
fwait
xor
popa
push
clc
gs
push
add
xchg
mov
hlt
sahf
sbb
or
ss
add
nop
sbb
nop
enter
ret
xor
repnz
fs
adc
mov
movs
call
repz
xchg
cmp
mov
in
rcl
nop
js
mov
(bad)
fstp
jae
shl
fs
imul
xchg
inc
mov
dec
je
movs
jnp
rep
rcl
je
dec
inc
and
push
pop
adc
retf
aad
ret
or
push
push
fidiv
aam
sub
jmp
jne
xor
sahf
jle
std
jnp
mov
push
mov
sub
and
fdivr
imul
(bad)
icebp
in
lahf
movs
shl
jg
add
outs
pop
or
xor
iret
mov
pop
or
aaa
push
aaa
add
scas
adc
fidivr
mov
loopne
dec
cwde
mov
and
mov
jmp
test
fidiv
pop
xor
push
jb
aam
push
sbb
mov
push
add
xor
enter
leave
xchg
in
push
jg
icebp
mov
lds
lods
(bad)
jge
dec
loope
fstp
aaa
sub
rol
push
shl
sbb
add
movs
jb
pop
pop
xor
cmp
jl
sti
adc
push
in
mov
loop
mov
xor
sbb
mov
pop
aam
sti
dec
cli
jne
mov
dec
and
imul
xchg
mov
push
scas
stos
dec
jl
or
lds
cdq
add
push
shl
push
sbb
add
movs
inc
and
inc
mov
jg
jmp
inc
cmps
mov
and
mov
xchg
or
push
loope
xlat
add
pop
ja
mov
enter
in
mov
out
inc
shl
or
mov
inc
push
inc
add
test
dec
pop
cmp
psllw
pop
inc
clc
mov
ret
jae
mov
test
ss
mov
cmp
xor
bound
cdq
aad
cmps
ins
xor
inc
fst
sbb
ficom
push
imul
fwait
add
mov
movs
pop
push
sbb
fldcw
rcr
mul
dec
retf
iret
daa
loope
repz
test
inc
add
pop
push
ror
inc
lds
adc
pusha
jb
or
mov
mov
or
inc
ret
nop
inc
(bad)
mov
cmp
popf
movs
pop
test
inc
ror
and
gs
les
or
rcl
repz
jg
add
fild
fmul
(bad)
stc
mov
pop
mov
push
and
jmp
adc
in
test
loopne
sub
xlat
sub
je
lods
cmp
mov
mov
pop
add
xlat
jo
loop
fldcw
mov
jns
push
ins
icebp
shl
and
loopne
add
loope
aad
push
test
sar
ds
popa
push
push
push
sub
and
or
imul
mov
not
bound
loopne
shl
xor
frstor
sahf
dec
test
sbb
inc
jno
in
dec
xchg
push
xchg
sub
gs
or
pop
cli
xchg
mov
add
cld
jl
pop
mov
int3
aas
push
xor
adc
shl
pop
ja
sbb
arpl
dec
jmp
inc
adc
mov
ins
mov
in
out
popa
or
mov
aaa
xchg
xchg
scas
enter
arpl
js
in
out
add
gs
and
xchg
and
inc
ret
imul
and
stc
clc
jnp
popf
imul
inc
inc
pop
ss
xor
adc
popa
or
pop
add
push
cmp
(bad)
call
push
out
sub
add
adc
ret
lods
jns
mov
jno
enter
rol
stos
fs
sub
adc
jecxz
sub
and
xchg
or
and
xor
inc
sbb
or
outs
cmps
and
ins
int
arpl
push
fist
inc
sbb
lahf
xchg
pop
jecxz
int
gs
les
in
xchg
xchg
mov
adc
sub
push
sbb
and
push
xchg
(bad)
and
add
jl
jmp
in
or
sbb
jle
test
aaa
in
fiadd
push
pmulhw
cmc
loop
xor
pop
imul
das
xchg
xor
outs
xor
mov
retf
xchg
or
jg
xor
sbb
pop
stc
pop
add
xchg
xor
into
add
jmp
in
add
clc
out
jge
pop
adc
mov
iret
adc
outs
and
rcl
or
and
pop
pop
lock
add
out
cmc
div
in
shr
inc
outs
mov
pop
rcl
cmps
fs
jae
add
jecxz
retf
and
jae
and
in
mov
mov
cmps
je
push
mov
mov
push
jnp
xor
sbb
mov
rol
(bad)
mov
push
arpl
ins
add
sbb
(bad)
and
mov
sti
push
and
(bad)
loope
xor
nop
jno
daa
pop
jmp
pusha
sbb
jb
sahf
and
(bad)
xchg
retf
xchg
(bad)
lds
popa
leave
add
sbb
cmc
fild
bound
arpl
add
mov
and
fcmovnb
pusha
xchg
jo
xchg
fild
dec
xor
inc
outs
int
xor
pop
or
inc
mov
pop
push
xor
mov
fidivr
dec
rol
push
push
jb
mov
xchg
cld
xchg
in
sub
repz
xor
xchg
and
ins
dec
inc
mov
(bad)
cmps
mov
jne
mov
out
xlat
pusha
aad
push
add
xchg
clc
xchg
xor
xor
or
cmps
inc
adc
aaa
and
xlat
out
in
sbb
jb
and
aad
jno
lahf
mov
test
adc
mov
in
sbb
mov
xchg
std
xchg
mov
sbb
mov
add
loop
sub
push
ins
or
(bad)
jns
cmc
mov
sub
mov
cld
jb
jg
ins
jmp
ins
add
mov
aad
addr16
es
movs
xchg
icebp
imul
inc
out
pop
push
xor
push
test
repnz
test
(bad)
jmp
xor
pop
movs
jecxz
xchg
sub
xchg
pop
jmp
push
jns
cmp
push
shl
int3
mov
dec
add
dec
adc
fld
push
xor
mov
fist
frstor
test
dec
rcl
iret
mov
(bad)
int3
sub
ror
fstp
dec
test
jg
push
jne
xchg
and
adc
test
xchg
cmp
adc
cmp
js
int
in
cmps
dec
je
ds
leave
psubusb
and
jns
(bad)
jp
ret
inc
out
jecxz
call
dec
lahf
addr16
loope
fisttp
xchg
pusha
push
out
xor
pop
dec
pop
hlt
add
(bad)
mov
push
xor
pop
loopne
pop
mov
dec
repz
data16
in
mov
ja
pop
inc
dec
jle
ss
adc
add
push
out
xchg
test
ins
push
cld
inc
cmc
aad
xchg
add
xchg
leave
mov
and
cmp
mov
mov
loop
ror
jecxz
hlt
xchg
gs
mov
xchg
inc
jecxz
or
add
and
sub
or
pop
int
push
je
and
popf
cmp
xor
cmp
loopne
nop
nop
fstp
dec
int3
or
adc
cmp
or
pushf
test
(bad)
movs
loopne
push
repnz
cmp
jnp
xchg
loop
mov
sbb
inc
mov
mov
mov
pop
lea
(bad)
mov
pushf
(bad)
xor
mov
cmp
std
mov
mov
jb
jae
fs
inc
xchg
enter
retf
test
add
inc
(bad)
addr16
jne
mov
inc
xchg
punpckldq
sbb
aam
add
mov
je
ffreep
loop
jmp
mov
icebp
das
mov
inc
int3
ins
inc
jns
in
fwait
xchg
xor
(bad)
addr16
addr16
push
leave
out
mov
add
pop
inc
out
or
pop
mov
or
and
rol
or
and
pop
inc
les
arpl
jmp
out
sub
inc
xchg
pop
mov
dec
and
adc
call
xor
push
lods
in
xor
xchg
stos
mov
push
out
adc
and
add
sahf
mov
not
loop
pusha
inc
mov
and
mov
xchg
sti
icebp
ss
in
(bad)
inc
push
sahf
mul
add
cmp
ud0
out
cdq
mov
xor
repnz
mov
or
jno
jns
sbb
cmps
add
push
adc
nop
clc
inc
aaa
jns
or
mov
ins
repnz
push
cmps
out
fnsave
pause
or
sti
mov
in
inc
shl
repz
inc
outs
jmp
ss
and
add
outs
int
lea
push
int
ret
or
jg
and
rcr
es
xchg
shl
push
or
xchg
adc
xor
cmps
mov
les
movs
push
xlat
enter
out
jno
jecxz
push
ret
outs
stos
push
dec
aaa
not
cdq
loopne
mov
adc
ja
jp
dec
shl
cmp
push
push
shl
xor
xor
gs
jb
sub
adc
inc
push
rcl
pop
lahf
mov
ficomp
add
and
cmp
stos
inc
int3
mov
stos
xchg
(bad)
pop
push
sbb
xlat
push
xor
sub
loop
adc
xchg
and
push
mov
push
xor
mov
add
fstp
inc
icebp
(bad)
(bad)
out
inc
add
mov
ret
rol
cmp
(bad)
pushf
and
(bad)
mov
add
rep
pop
cld
mov
shr
sbb
sbb
adc
dec
and
or
xor
and
lds
push
inc
out
sbb
shl
inc
ret
jno
jae
loope
outs
or
push
pop
ror
cs
sub
add
add
mov
sbb
dec
pop
mov
pop
and
mov
sub
xor
popa
(bad)
cs
in
adc
(bad)
mov
sub
push
(bad)
jnp
pop
nop
push
sbb
nop
adc
and
das
mov
mov
jle
sub
add
jle
icebp
mov
cdq
cmps
xchg
push
cmps
aam
mov
jne
ja
inc
push
jne
lds
shr
pop
pop
xchg
fidiv
mov
jo
xor
imul
add
adc
and
out
cmc
pop
cli
retf
int
jne
xor
call
push
xor
push
mov
fs
pushf
mov
and
lds
popa
pop
mov
mov
mov
and
dec
in
icebp
add
mov
retf
jle
adc
xchg
test
mov
mov
(bad)
xor
xor
retf
xchg
dec
or
ss
test
shl
cmc
nop
sub
xchg
inc
mov
stos
shl
jae
in
rol
adc
out
sahf
and
add
pop
(bad)
in
int
or
mov
aam
pop
cli
mov
and
pop
lea
jno
out
xchg
pop
jmp
movs
or
mov
outs
mov
in
icebp
cmp
cmp
inc
cmp
mov
arpl
aaa
sub
out
push
(bad)
dec
aad
pop
jne
or
cmp
pop
and
test
cmp
push
icebp
mov
fstp
sub
stc
in
mov
repz
daa
pushf
add
outs
add
cmc
lds
jg
dec
xchg
mov
std
add
cmp
pop
out
icebp
pop
inc
adc
in
inc
outs
xor
iret
xchg
mov
add
add
xchg
or
(bad)
hlt
push
sbb
jne
add
cmp
xor
sbb
movs
xor
pop
stos
fwait
bnd
mov
inc
out
imul
sub
arpl
sbb
inc
and
clc
movs
in
(bad)
xchg
dec
ret
outs
jns
aam
push
popa
rol
inc
xchg
sub
sub
adc
and
shr
adc
test
std
(bad)
cs
ss
xchg
(bad)
jmp
js
mov
mov
xchg
jg
xor
(bad)
mov
lods
mov
push
(bad)
icebp
fwait
jmp
mov
movs
inc
xor
push
lds
or
loop
(bad)
call
xor
sbb
and
sub
daa
pop
xchg
call
xchg
mov
jnp
cdq
xor
icebp
ds
mov
dec
jno
sbb
or
shr
imul
fptan
mov
test
inc
inc
nop
inc
(bad)
rol
es
(bad)
not
pop
dec
cs
add
repnz
ins
lahf
push
mov
inc
push
dec
enter
push
mov
and
add
aaa
js
shr
lods
mov
mov
xor
or
xchg
es
add
xlat
pop
dec
xchg
jmp
nop
mov
loopne
out
pop
and
jg
das
cmp
inc
in
jne
stos
jmp
and
shr
cmp
cmp
cmp
arpl
(bad)
les
mov
cmc
in
mov
jecxz
sti
jnp
popa
xchg
inc
sub
aad
sti
push
data16
jmp
ins
and
nop
or
retf
lods
xchg
sbb
scas
cli
fwait
lea
int3
adc
mov
adc
leave
icebp
and
call
mov
bnd
scas
mov
pop
ret
mov
push
les
and
bound
xor
sbb
in
add
(bad)
xchg
lds
dec
cmc
lods
cs
adc
inc
aas
into
dec
mov
add
or
dec
imul
push
call
dec
jbe
xor
test
push
mov
push
xchg
fld
(bad)
push
fwait
push
mov
add
nop
inc
add
jnp
dec
jnp
shr
push
call
xchg
imul
(bad)
jge
fwait
outs
aad
shr
push
or
pop
out
cmc
loope
pop
adc
or
mov
clc
out
in
push
inc
loope
stos
adc
jne
mov
sahf
repnz
inc
ds
and
rol
push
stos
cli
std
test
repz
jbe
and
cmp
stos
xchg
mov
or
fsubr
sti
inc
cmc
mov
pop
push
call
mov
jmp
inc
stos
in
xchg
xor
mov
int3
dec
push
out
lock
push
sub
pop
mov
fdiv
mov
jge
push
repz
fistp
into
dec
push
sub
into
push
clc
dec
aas
sub
fdiv
sub
aaa
jae
jge
mov
(bad)
xor
fisub
inc
xor
lock
sub
add
fisttp
mov
push
es
hlt
aam
xchg
test
xchg
and
sbb
push
pop
mov
stc
xor
sbb
push
retf
mov
call
loope
cmc
sub
or
dec
mov
mov
data16
aam
push
(bad)
dec
sti
das
fwait
aaa
mov
aaa
push
sub
push
je
mov
dec
mov
adc
inc
sub
arpl
inc
test
adc
adc
jo
outs
or
sub
cdq
loopne
pop
jmp
(bad)
ja
cmp
sar
mov
inc
push
sub
shr
jge
(bad)
or
sub
adc
adc
data16
jns
loop
add
(bad)
icebp
jno
out
push
(bad)
jecxz
mov
adc
iret
movs
fild
inc
neg
jne
aad
call
jp
push
sub
sbb
pop
xor
leave
aas
fs
std
pmullw
cmc
sbb
xchg
mov
fs
test
mov
hlt
ret
dec
loop
aam
rcr
movs
ficom
scas
movs
mov
adc
(bad)
test
jl
cmp
pop
jns
xchg
loop
inc
or
jbe
ins
mov
cmps
into
retf
loope
xor
mul
test
(bad)
lock
and
mov
xor
test
sbb
arpl
cmp
in
aad
adc
or
mov
cmp
xor
cmp
in
or
adc
nop
ja
repz
xor
fcmovnbe
inc
add
adc
inc
mov
dec
in
popf
in
pop
or
adc
xlat
mov
or
inc
push
stos
sbb
nop
pop
cmp
mov
xor
into
sbb
xor
mov
in
jns
scas
hlt
xor
test
xchg
add
in
jno
mov
or
shr
popa
iret
or
sahf
pop
and
cmc
pop
vmovmskpd
mov
jno
push
in
mov
loopne
outs
xor
fisub
sbb
xor
icebp
aad
lds
and
mov
mov
movs
dec
add
seto
add
test
inc
repz
mov
push
cld
sbb
mov
mov
mov
add
sub
push
dec
daa
cmp
inc
fbld
into
jbe
pop
dec
pushf
jnp
and
jp
enter
or
scas
add
(bad)
xor
adc
mov
push
cmps
push
not
sub
rcr
jge
in
cmp
push
jmp
xor
or
cmp
inc
out
popa
das
add
and
xchg
daa
sub
loope
adc
mov
jno
cs
lahf
jmp
push
push
cmc
mov
loope
sub
loope
mov
cmp
cdq
cmp
je
adc
xor
std
gs
shl
dec
mov
mov
sti
jno
and
data16
jle
(bad)
push
pop
test
(bad)
outs
ret
rcl
sbb
fstp
icebp
mov
inc
jns
fsubr
jns
or
xchg
xchg
mov
movs
popa
scas
mov
mov
dec
nop
ret
shl
scas
push
dec
pop
test
push
aaa
scas
arpl
push
ret
es
ret
cli
mov
xor
rcl
add
jne
inc
sub
cmp
scas
mov
rcl
addr16
mov
xor
mov
js
popa
test
xlat
lods
inc
and
cmp
mov
fidiv
retf
ins
(bad)
jo
shl
pop
xchg
movs
call
imul
xor
push
aam
adc
test
lds
mov
daa
int
cmp
test
sub
fstp
and
inc
mov
xor
ret
or
fistp
and
or
and
xor
loopne
dec
and
fcom
pop
mov
bound
jb
adc
out
stc
or
popf
stc
cmp
mov
push
mov
sbb
xor
fxch
mov
inc
mov
mov
push
lods
or
loope
loop
and
mov
test
jno
jecxz
ins
(bad)
repz
popa
out
loope
ja
out
inc
aam
cmc
in
jno
aaa
imul
push
(bad)
sub
mov
add
mov
push
cmp
outs
cmc
clc
out
or
repz
pop
dec
inc
shl
add
adc
push
aam
dec
cli
dec
mov
or
push
push
jb
repz
outs
dec
push
gs
pusha
test
loop
xor
sbb
movs
cs
sahf
pop
xchg
jnp
add
out
call
popa
aad
je
xchg
xchg
dec
xor
mov
lock
pop
mov
std
mov
imul
call
inc
lods
ins
leave
rcl
jno
scas
int
cwde
mul
sbb
es
mov
fstp
dec
inc
stos
push
inc
and
in
adc
mov
les
inc
jb
mov
call
jae
cmps
in
xor
and
je
imul
jl
cmp
mov
aaa
popf
xor
xor
mov
cdq
pop
shl
jne
icebp
push
in
mov
cwde
sub
out
sub
add
sbb
pop
aam
xchg
sub
sub
adc
ins
mov
mov
mov
int
leave
das
data16
adc
sbb
sbb
push
fld
fst
gs
mov
cli
movs
cmp
dec
add
inc
ja
dec
cmps
xor
xchg
pushf
push
cmp
add
cmc
mov
mov
add
push
test
sbb
inc
jae
shl
sub
test
les
je
add
jmp
lock
call
adc
hlt
sbb
pop
xor
outs
xchg
stc
sar
add
xchg
sar
out
add
sti
(bad)
and
fsubr
push
pop
xlat
fld
jbe
pop
push
movs
inc
dec
xchg
pusha
push
xor
pop
jnp
mov
pop
cmp
add
es
fisttp
stos
mov
dec
sbb
inc
lahf
lods
xchg
inc
sbb
stos
xor
mov
rcl
and
test
rcl
std
mov
and
sub
xor
xchg
hlt
push
int3
sub
sub
mov
outs
test
lock
jae
mov
xor
dec
mov
push
mov
nop
ins
in
lahf
push
mov
mov
jbe
rcl
shl
pop
mov
dec
ins
add
mov
std
div
add
popf
sbb
imul
rol
cmp
retf
fnstcw
dec
ins
or
imul
into
inc
mov
test
and
repz
push
or
jp
push
xchg
mov
dec
pop
inc
inc
je
(bad)
(bad)
and
jnp
jle
mov
push
stos
inc
cmp
push
inc
movs
add
cmp
adc
je
gs
jno
mov
mov
rcl
xchg
or
int3
(bad)
or
rol
push
stos
mov
sti
sub
mov
mov
sub
ja
push
add
daa
movs
xor
mov
cmp
fsub
stos
mov
jp
in
ret
in
test
frstor
jns
cdq
push
and
xchg
icebp
in
orps
push
bound
jno
mov
push
ret
cmp
adc
adc
fs
test
scas
adc
aam
mov
push
cli
xchg
pop
bound
xor
ins
cmp
push
mov
sbb
and
ror
aam
add
adc
jl
mov
push
cli
jg
call
mov
push
into
cmps
and
test
cli
les
ds
out
add
lock
jne
xlat
add
icebp
mov
daa
out
inc
movs
add
mov
jo
pop
hlt
pop
test
and
push
dec
data16
adc
xor
(bad)
xor
ins
daa
xor
mov
sbb
add
test
clc
aad
addr16
mov
mov
add
mov
mov
cmc
sub
add
int3
mov
jo
ins
call
icebp
js
gs
add
xor
and
lods
leave
retf
mov
adc
mov
arpl
pop
sub
ret
rol
mov
adc
xchg
imul
sbb
xchg
adc
adc
lds
mov
cmp
cmp
lds
in
adc
aam
sub
outs
out
push
adc
mov
xchg
and
aad
cs
cld
mov
fsub
mov
cmp
xchg
and
xor
mov
ja
ja
jmp
sbb
inc
sbb
(bad)
jbe
pop
pop
push
jo
sbb
mov
loop
xchg
aam
movs
ror
or
or
pop
ret
inc
push
dec
ror
jl
xchg
ins
jns
pop
loope
mov
rol
mov
cmps
or
es
aad
xor
mov
sub
sub
in
das
daa
sub
or
sti
xor
out
dec
icebp
test
aad
sub
pop
sbb
adc
xor
imul
stc
dec
xchg
lods
rep
inc
loope
jne
adc
out
inc
lds
xchg
xchg
or
rcl
pop
xchg
jmp
inc
jg
pop
push
in
in
dec
inc
shr
push
add
adc
ja
fist
stos
xor
mov
add
mov
push
test
jmp
add
dec
mov
fist
into
sub
jb
jnp
add
fldcw
iret
fwait
push
out
push
jne
pop
inc
adc
stos
mov
inc
loope
rcr
(bad)
loope
mov
push
adc
cmp
rol
cmp
mov
push
(bad)
mov
pop
xchg
cmp
adc
xchg
dec
shr
xchg
fidivr
cmps
jg
cmp
clc
pop
cwde
outs
sbb
callw
in
mov
jle
xchg
sub
jmp
jl
scas
out
adc
ds
lds
xchg
test
mov
or
xchg
and
test
repz
sub
sbb
int
mov
pop
dec
lods
hlt
sbb
jnp
add
and
rcr
stc
loope
imul
lock
shl
xor
xor
add
push
in
in
out
cmps
or
sbb
mov
(bad)
adc
mov
xor
(bad)
mov
pop
adc
mov
nop
push
jns
pop
adc
int3
mov
js
adc
rol
gs
adc
stc
in
scas
ins
adc
sbb
jge
adc
push
push
mov
cmp
jg
mov
je
sub
jp
fwait
add
mov
inc
es
jns
or
ret
repnz
fld
(bad)
cli
add
inc
push
(bad)
xchg
or
into
mov
push
add
jmp
jmp
mov
xor
loopne
sbb
sbb
je
mov
inc
movs
push
and
por
or
adc
mov
inc
or
or
inc
xchg
sbb
cmc
in
mov
xchg
inc
adc
(bad)
stos
add
repnz
jmp
addr16
sbb
jecxz
xor
mov
xchg
add
leave
fisub
out
loopne
into
jno
inc
(bad)
lods
sar
adc
mov
test
int
inc
cli
iret
call
popaw
xchg
push
jmp
fdiv
jg
and
mov
bound
jno
rcr
cmp
fsub
ins
lahf
xor
mov
inc
xchg
push
into
or
loopne
retf
and
movs
adc
inc
popa
cmp
nop
pop
jns
inc
xlat
sub
sti
xor
aaa
outs
and
pop
xchg
not
outs
shl
xchg
std
(bad)
jae
jmp
push
call
inc
mov
cwde
cmps
and
ret
pop
imul
mov
les
push
stc
jnp
imul
gs
xlat
stc
jle
pop
push
test
push
(bad)
rcl
xor
dec
dec
mov
movs
and
cmp
into
jne
gs
int
loopne
xchg
adc
test
rcr
or
pusha
test
dec
jmp
push
inc
add
mov
dec
cdq
jne
push
loopne
inc
pop
sbb
hlt
fmul
mov
and
mov
add
adc
ss
mov
xor
and
add
fcom
adc
lds
mul
gs
and
movs
xor
shl
add
aaa
adc
lahf
cmp
mov
mov
sbb
push
mov
lds
movs
mov
jne
xchg
cmc
stos
inc
add
push
pop
cli
xor
xchg
adc
adc
add
sbb
test
mov
pop
lahf
mov
cmp
repnz
push
pop
and
and
sahf
mov
mov
inc
test
sub
inc
into
push
ja
xchg
in
cmp
xor
mov
test
mov
enter
scas
lds
xlat
mov
xor
cwde
sub
add
push
push
repz
xor
sbb
cmps
movs
test
mov
add
xor
aad
iret
pop
test
ins
sbb
test
rol
push
adc
cwde
icebp
fbstp
hlt
(bad)
ror
dec
rcr
add
inc
jmp
mov
mov
mov
and
mov
retf
(bad)
shl
lea
loopne
div
jo
jb
mov
in
popf
fimul
aam
aam
call
cmp
jle
mov
mov
vmovaps
xor
xor
jne
inc
sbb
mov
(bad)
movntq
xor
xor
inc
(bad)
push
loop
mov
dec
mov
add
sub
mov
jo
aad
or
or
bound
and
push
xchg
(bad)
push
adc
and
or
ret
aad
xchg
daa
(bad)
cmps
mov
fdivr
jp
xor
test
mov
xchg
and
pop
or
mov
cmp
pop
push
sbb
xchg
gs
xchg
sbb
rcr
das
outs
iret
iret
int
pusha
jle
pop
pop
inc
and
ss
dec
rcl
jbe
inc
sbb
mov
and
or
dec
xor
xor
pusha
dec
or
add
adc
in
pop
aas
add
movs
mov
xor
in
ss
movs
ficomp
and
cmp
rcr
add
and
xor
jl
ins
repnz
(bad)
fnstsw
sbb
ror
es
shl
and
mov
dec
adc
or
lea
adc
imul
out
aas
std
jno
jle
daa
fcom
pop
out
fwait
cmc
adc
cwde
in
fcmovnbe
hlt
push
outs
jno
and
std
inc
lock
rcl
mov
sub
ss
mov
js
ror
pusha
and
test
mov
fidiv
cmp
rep
enter
jle
mov
ss
pop
add
push
inc
mov
jo
add
pop
adc
dec
(bad)
jecxz
arpl
cmps
mov
ss
lock
shr
sahf
div
div
sbb
cmps
and
rcr
popa
jb
mov
xchg
or
dec
adc
xchg
not
sti
(bad)
pop
or
fs
aaa
xor
adc
je
xchg
jo
inc
sbb
add
leave
dec
add
sbb
test
jmp
jno
data16
pop
clc
push
inc
std
jne
jmp
out
mov
mov
mov
jmp
out
cmp
sub
adc
mov
inc
add
and
adc
data16
pop
mov
jne
ror
in
shl
bnd
shl
loopne
(bad)
push
call
stc
and
das
xor
test
retf
test
push
into
test
nop
stos
ja
dec
xor
rcl
icebp
mov
jge
leave
repz
call
pop
(bad)
ror
xor
push
bound
inc
mov
and
cmp
lds
les
dec
inc
cld
imul
jbe
jl
jb
cmp
(bad)
lock
stos
popf
xor
in
and
sub
push
pop
push
jnp
xor
or
adc
mov
dec
jo
mov
outs
adc
lds
jle
das
push
mov
shl
out
int
in
(bad)
cs
outs
add
sti
jge
ret
loope
cld
in
adc
stos
fbld
or
adc
stc
inc
mov
ds
mov
bound
sbb
call
cmc
loope
adc
dec
leave
test
xor
mov
and
mov
pop
rcr
inc
xchg
leave
sub
test
in
scas
sbb
test
mov
imul
ja
xchg
aam
je
jno
cmc
xchg
add
inc
mov
mov
cmp
adc
inc
rcl
jmp
sbb
ret
rcl
mov
std
movs
scas
in
jg
sub
xchg
mov
lods
(bad)
sub
mov
lock
or
inc
xchg
push
int3
popf
dec
test
iret
inc
pop
out
fadd
lock
pop
xchg
es
sbb
ror
push
repz
stc
imul
xor
pop
fisttp
or
ficomp
out
and
ret
aad
xchg
nop
adc
mov
xor
mov
adc
sub
gs
or
push
rcl
push
popa
jno
adc
test
scas
scas
xor
mov
adc
push
lock
imul
enter
fst
sbb
fscale
movs
push
pop
adc
retf
add
in
dec
inc
adc
shr
pusha
jp
cmp
pop
sub
sbb
jns
jge
or
add
jmp
cmp
xchg
pop
mov
jmp
xor
adc
sbb
mov
mov
adc
in
mov
out
push
push
xchg
hlt
push
(bad)
rcl
lahf
mov
fwait
inc
lea
mov
pop
and
jns
pop
bnd
inc
add
aas
les
add
inc
mov
add
(bad)
and
push
rcl
pop
iret
adc
sbb
inc
xor
add
hlt
pusha
xor
mov
xlat
push
mov
shr
call
xchg
adc
retf
jne
pop
add
jecxz
push
into
nop
xor
cmp
push
dec
rcl
(bad)
imul
loope
inc
icebp
jne
mov
(bad)
sub
xchg
enter
mov
cmps
mov
xchg
jge
pop
cli
mov
cmp
adc
pusha
fs
add
add
sub
or
sub
pop
add
call
mov
and
xor
and
lea
movs
mov
sbb
ins
and
mov
popa
jge
mov
loope
or
ret
or
inc
div
fldenv
movs
xor
lahf
push
es
xchg
or
aad
into
or
sbb
cmp
and
into
sub
mov
mov
rsqrtps
movs
(bad)
cdq
gs
mov
mov
cmp
repz
push
stos
in
mov
or
dec
lds
xchg
push
push
xlat
cs
adc
jno
pop
addr16
mov
test
icebp
gs
xor
cmps
leave
mov
xor
and
out
jmp
enter
push
push
mov
sar
ja
sub
(bad)
dec
sbb
ret
mov
cli
sti
(bad)
mov
fstp
mov
mov
test
adc
mov
fld
mov
pop
les
or
gs
xor
mov
sbb
mov
cmc
pop
and
mov
loope
adc
adc
mov
inc
gs
jae
cmc
jle
in
enter
push
fnstcw
sahf
and
fnstsw
sti
add
div
retf
fcom
sbb
test
not
mov
js
xchg
adc
xchg
push
sub
dec
add
pusha
ret
repnz
and
xor
xlat
daa
lea
adc
sub
sub
xor
mov
cdq
movs
popa
push
inc
xor
pushf
imul
lahf
pop
dec
dec
popa
cli
push
sub
pop
pop
(bad)
outs
pop
push
inc
mov
dec
push
xor
xor
pop
leave
repz
push
adc
inc
mov
dec
vxorps
out
inc
cmp
jae
std
add
add
xchg
jb
cmp
rcl
jge
retf
jb
in
mov
outs
in
pop
in
out
out
inc
xchg
sub
inc
call
mov
jne
xor
aad
fcom
jp
shl
fs
and
dec
loope
out
arpl
lods
test
and
(bad)
mov
retf
fild
mov
push
dec
mov
mov
adc
repnz
pop
cli
cmp
xchg
push
or
popf
add
push
div
pop
inc
gs
adc
mov
and
sub
and
jo
or
lock
aam
push
arpl
test
mov
sub
out
pop
inc
and
rcr
mov
mov
xor
cdq
xchg
xor
daa
xchg
daa
retf
xor
mov
aad
add
push
mov
adc
mov
popa
rol
xchg
cmc
sub
add
or
add
inc
cmp
cli
add
add
shl
shl
lods
mov
sbb
retf
in
test
ja
jbe
xor
cmp
inc
nop
dec
bound
sti
mov
inc
jbe
jno
sub
shl
mov
mov
sbb
lock
retf
mov
mov
push
(bad)
aam
call
cmp
add
push
or
xchg
cdq
sar
and
cld
ret
pop
lods
xchg
push
imul
mov
in
push
inc
aam
pop
xchg
loope
adc
xor
mov
int
add
push
push
test
push
xchg
nop
cli
cmp
ins
shl
mov
stc
xor
data16
xor
mov
push
(bad)
adc
les
xchg
mov
cmp
iret
and
aam
mov
addr16
test
and
das
aad
(bad)
jnp
cmp
icebp
test
mov
inc
add
cdq
xchg
or
cs
mov
das
jne
mov
popf
aaa
(bad)
jo
or
daa
push
pop
ins
shr
mov
jge
cdq
call
add
jge
pusha
stos
retf
arpl
mov
add
mov
cmp
imul
xchg
call
daa
xor
jno
pop
repz
cwd
test
test
enter
mov
mov
ret
pop
in
push
cs
hlt
jge
push
iret
inc
call
fistp
dec
pop
inc
add
or
xchg
minps
imul
dec
mov
cmp
add
loope
xor
mov
dec
call
js
mov
sbb
dec
cwde
aad
sub
cmp
xchg
add
or
fsubp
popf
ret
ja
xor
sbb
mov
xor
xor
mov
mov
rcr
jb
aas
inc
push
mov
pusha
nop
jecxz
shl
lods
aaa
sahf
repz
jae
adc
adc
movs
lahf
shl
jmp
mov
movhps
ja
loope
outs
adc
movs
dec
xchg
lock
shl
add
gs
add
out
cmps
out
xor
pop
loope
repz
mov
jmp
xor
daa
into
jmp
fwait
fs
jae
xchg
out
in
mov
inc
inc
sbb
xchg
neg
adc
mov
clc
sub
rcl
mov
aad
inc
out
sahf
nop
pop
jmp
adc
lock
in
test
mov
(bad)
aam
shl
push
jns
fistp
inc
push
adc
data16
jmp
fist
or
sub
xlat
sub
or
cmps
aad
jns
in
mov
cdq
cmp
dec
dec
dec
add
out
dec
mov
(bad)
shl
popa
inc
loop
fs
pop
nop
inc
cmp
iret
shr
cmp
loope
ds
inc
dec
dec
mov
stos
pmaddwd
xor
mov
xor
mov
mov
inc
in
neg
(bad)
out
pushf
or
push
fst
loop
(bad)
jl
and
pop
push
xor
bound
hlt
lahf
call
cmp
ffree
jne
xor
sti
mov
je
imul
mov
pushf
loope
dec
push
inc
leave
mov
jo
mov
popf
sti
jle
ficom
daa
pop
push
or
cwde
les
mov
lods
aas
sub
lea
popa
(bad)
add
push
xor
inc
xor
mov
mov
mov
fisubr
je
mov
pop
icebp
ins
jns
das
mov
or
test
popf
dec
shl
ds
cli
xlat
test
add
dec
pusha
mov
sbb
inc
xchg
cwde
call
mov
popa
loopne
push
mov
dec
rcr
and
ss
push
pop
mov
and
shl
push
ror
mov
cmp
sti
(bad)
into
fstp
inc
inc
inc
xor
cdq
lods
inc
mov
pop
jne
jo
pop
sbb
sbb
dec
pusha
enter
lock
ins
mov
xchg
push
sbb
dec
aam
push
sub
adc
gs
stos
mov
sbb
nop
xchg
xor
popa
push
push
mov
and
xor
mov
rcr
cmp
jge
inc
add
rol
add
jae
pop
jmp
mov
in
div
loop
adc
cmc
daa
into
push
cmc
fs
in
les
push
hlt
adc
shl
scas
push
mov
fwait
call
(bad)
xchg
adc
ror
add
cmp
lds
sbb
push
adc
dec
sbb
les
(bad)
out
movs
rsqrtps
push
pop
mov
ds
xor
shl
mov
mov
sub
arpl
shr
mov
std
lds
add
dec
and
xchg
stc
xor
xor
mov
jne
inc
xor
sbb
jbe
push
xor
pop
aam
aad
(bad)
mov
or
jecxz
cmp
cld
and
and
es
ins
scas
xor
fwait
add
pop
adc
sti
int
push
rol
inc
cmp
jns
aad
aas
out
fs
fwait
scas
or
ds
push
sub
movs
adc
mov
mov
pusha
add
pop
xor
ret
movs
jecxz
inc
das
or
and
mov
jmp
test
add
jmp
popa
cmc
lahf
jmp
push
dec
and
aam
repnz
mov
arpl
xor
aad
inc
in
(bad)
sbb
in
and
or
jne
push
mov
in
shr
icebp
jne
scas
cmp
loopne
and
adc
and
and
mov
daa
push
add
add
sub
aaa
cmc
aam
test
movs
add
clc
sti
and
mov
into
test
loopne
cwde
sub
add
and
popa
jne
je
ficom
pop
cmps
inc
xchg
jge
mov
mov
jno
adc
imul
sub
add
mov
fsubr
lea
cmp
(bad)
stc
aad
jb
jmp
dec
shl
xor
clc
adc
mov
scas
inc
xor
push
test
sbb
fdivr
and
xchg
dec
and
pusha
jmp
sti
sub
xchg
je
dec
cmps
adc
and
inc
sub
jmpw
adc
sub
and
xor
xor
cmp
pop
(bad)
rcl
mov
daa
ins
arpl
xor
mov
inc
loop
in
call
call
mov
push
(bad)
mov
aaa
cmps
shl
mov
or
in
mov
popa
xor
jns
inc
jl
shl
inc
sub
(bad)
cmps
adc
aam
inc
jp
adc
cmp
inc
stos
mov
adc
push
sub
fs
mov
cmp
aad
mov
mov
inc
adc
sub
outs
cmps
add
inc
adc
and
repz
or
add
sub
or
push
std
mov
test
push
cmp
mov
inc
or
sub
into
mov
movs
jmp
inc
inc
or
mov
ret
mov
dec
mov
rcl
lock
mov
scas
and
xchg
movs
or
mov
xor
fmul
fs
mov
cmp
mov
cmp
popf
rcr
adc
adc
add
rcl
push
out
mov
adc
push
jo
mov
jno
push
mov
nop
movs
js
push
or
push
xor
xor
mov
lds
scas
jp
sub
push
xchg
test
dec
inc
xchg
fidiv
outs
or
inc
and
cmp
sub
sub
(bad)
lods
adc
movs
and
and
xlat
in
bound
jecxz
lds
cli
das
xor
mov
jp
test
fdiv
xor
fist
push
jecxz
cmp
les
aad
pop
sbb
mov
adc
sbb
add
mov
cmc
test
out
fimul
lock
lods
aam
mov
push
and
cmps
xor
mov
mov
push
das
xchg
popa
adc
add
jge
sbb
mov
mov
int
shl
jne
mov
adc
lods
jle
mov
repz
or
stos
mov
rcl
xor
mov
(bad)
push
sbb
push
jnp
addr16
loop
inc
or
scas
jo
dec
jae
inc
loopne
sti
jae
cli
test
popf
ss
lods
les
inc
cmc
or
dec
scas
mov
sub
scas
mov
ins
clc
cmp
xor
or
mov
inc
sub
cmp
test
loopne
fld
adc
sar
xor
pushf
inc
jno
test
inc
dec
cmc
inc
xor
xor
test
push
add
inc
sbb
cmp
in
test
jnp
pop
xor
scas
or
sub
add
inc
ret
mov
popf
fiadd
inc
and
pushf
xor
xor
xor
xchg
retf
add
xor
aam
jmp
xchg
lods
iret
movs
out
lock
inc
or
shl
(bad)
aam
(bad)
xor
pop
xchg
ret
mov
dec
inc
push
mov
add
jo
sub
adc
or
sti
pusha
add
sub
cs
daa
mov
xchg
daa
scas
fnsave
rcr
and
jne
ret
arpl
fnstenv
adc
and
hlt
mov
ret
adc
call
shl
and
push
cmp
mov
mov
les
outs
loop
outs
jne
ins
xor
jnp
sbb
push
ret
cld
xchg
sbb
adc
gs
in
scas
popa
sar
xchg
hlt
mov
mov
cdq
xor
div
(bad)
cld
adc
mov
jno
or
pop
cld
dec
mov
repz
or
rol
ret
loopne
mov
in
into
fadd
adc
sbb
inc
in
shl
jo
ins
cs
dec
push
xchg
cmp
imul
mov
mov
out
xchg
lds
or
icebp
and
adc
jle
lea
jne
imul
fisttp
add
inc
add
pop
adc
ins
xor
xchg
in
cmc
push
xchg
outs
out
std
mov
std
and
out
in
fstp
and
(bad)
mov
pop
out
xchg
inc
or
cmp
loop
pusha
dec
ds
add
wbinvd
mov
mov
pop
stc
xchg
clc
push
pusha
aad
or
push
lock
loopne
mov
into
arpl
movs
mov
movs
mov
add
mov
pusha
pop
hlt
mov
shl
push
inc
mov
ss
xor
jno
and
fwait
jecxz
dec
mov
adc
cmp
mov
jo
xchg
sub
cmp
imul
mov
xor
jo
stc
popf
jp
xor
add
in
jo
sub
add
ins
icebp
fs
jno
out
pushf
call
push
push
dec
xor
ds
add
adc
ret
jl
jno
mov
pop
sbb
mov
jge
mov
sbb
xchg
ret
repz
adc
cdq
movs
repz
jno
sub
push
ja
bound
fwait
xor
daa
shr
push
push
stos
ds
fadd
cmp
dec
addr16
or
jp
ins
mul
push
adc
mov
dec
retf
and
icebp
dec
test
sbb
repz
mov
push
or
test
in
hlt
dec
mov
and
or
and
cmps
dec
adc
std
adc
ret
jb
cmps
push
fwait
mov
pop
sub
pop
sub
adc
mov
(bad)
mov
adc
cli
ja
(bad)
jge
repz
xchg
inc
pop
dec
cmc
ins
lds
lds
sub
push
lods
mov
sub
mov
stos
xchg
shr
pop
popa
cmps
ss
xlat
mov
cmp
js
fsub
xor
xchg
xor
gs
inc
or
fimul
and
pop
sub
sub
inc
lock
push
ret
pop
out
push
push
shr
sub
mov
(bad)
(bad)
adc
popa
test
(bad)
into
add
xchg
and
mov
mov
xchg
sahf
jecxz
push
hlt
les
mov
jo
lds
test
xchg
into
pop
sbb
xor
(bad)
test
pop
inc
and
ss
add
adc
cmp
and
lock
xchg
jecxz
jmp
and
add
mov
adc
mov
lods
add
fstp
popa
icebp
xchg
inc
jne
leave
xchg
xor
xlat
and
inc
xor
retf
fstp
scas
xchg
inc
add
imul
jne
enter
ds
xor
int3
inc
push
push
pop
out
in
iret
inc
lock
dec
pop
gs
ficom
cmp
adc
inc
mov
imul
ret
mov
loope
mov
sbb
inc
fdiv
sbb
jl
xchg
push
ret
test
fs
mov
jp
lock
xor
mov
fimul
mov
inc
mov
loop
outs
sub
jne
fld
rep
popa
(bad)
jae
pop
fwait
arpl
fwait
add
jecxz
adc
in
pop
xchg
sbb
pushf
out
lods
aad
test
pop
mov
ficomp
mov
inc
pusha
jno
ficom
adc
mov
dec
gs
add
or
cmps
fiadd
sbb
jbe
es
add
test
inc
ror
xchg
(bad)
adc
adc
ret
jne
pushf
sbb
mov
ret
arpl
xchg
xor
(bad)
int
sti
es
cs
jo
or
adc
sub
pop
fsubr
push
push
xor
mov
dec
out
fwait
sub
cmps
jae
sbb
jbe
popa
pop
lahf
pushf
inc
mov
cmps
mov
lahf
lea
ss
mov
add
mov
movs
inc
and
mov
shr
in
sahf
popa
pop
cmp
jne
dec
sbb
aas
ss
aad
imul
test
push
push
or
xchg
std
in
in
outs
cmps
sar
add
adc
lods
dec
push
call
sahf
into
sbb
dec
xor
scas
clc
call
mov
dec
outs
pop
retf
inc
arpl
pop
imul
mov
jns
inc
or
xor
imul
(bad)
out
xlat
jne
xchg
jg
aad
aaa
jp
xor
hlt
cmp
xor
inc
and
ins
call
popa
loopne
push
xor
push
jbe
sub
add
nop
lods
xor
xor
jo
cmp
jns
inc
aad
aas
dec
(bad)
retf
loope
dec
jp
call
add
sub
ja
xor
aas
jo
cmp
addr16
adc
adc
cmp
mov
hlt
jle
pop
mov
popa
xchg
adc
jne
out
sub
in
in
repz
aam
imul
add
stc
mov
sbb
popa
mov
mul
pop
loopne
push
int3
xor
mov
cmps
mov
loop
xchg
push
not
jae
inc
sbb
sub
repz
sub
fdivrp
mov
sub
arpl
adc
adc
push
mov
xchg
mov
pop
and
inc
int
push
mov
fsub
xlat
jp
sub
rol
movs
sahf
push
adc
int3
xchg
cmp
push
gs
add
add
inc
fimul
out
outs
test
mov
xchg
in
cs
jae
retf
pop
sbb
xchg
mov
in
xchg
mov
jmp
sbb
pushf
fistp
movs
test
imul
rcl
xor
mov
aaa
mov
into
in
xor
sbb
repnz
ja
data16
push
ror
ss
adc
inc
sub
and
mov
mov
and
xor
and
adc
mov
cmc
mov
and
mov
add
mov
cmp
xor
push
lods
push
add
dec
rcr
movs
sub
add
out
cwde
push
pop
iret
adc
pop
imul
fs
(bad)
adc
push
fild
(bad)
leave
adc
cmp
rol
or
mov
popf
push
ins
pop
inc
enter
into
or
out
out
xchg
(bad)
cli
cmp
jmp
jbe
pop
xor
cmc
js
aad
sbb
inc
inc
and
xor
(bad)
adc
ret
repz
data16
push
fdivp
push
test
js
dec
pop
mov
adc
mul
int3
push
xor
lds
mov
inc
icebp
jno
xchg
ss
out
lahf
jo
into
adc
inc
jp
mov
mov
pop
(bad)
cmp
xor
add
pop
mov
in
push
shl
imul
jle
xchg
inc
mov
cmc
mov
add
or
xchg
push
fisub
xor
test
inc
cmps
(bad)
sbb
xor
rcr
fldcw
enter
mov
push
push
loopne
inc
dec
(bad)
jg
xchg
jno
and
xor
xchg
(bad)
pop
adc
xchg
push
movs
fcom
jmp
jns
aam
xchg
test
pop
dec
sbb
push
loop
adc
jno
xor
loop
out
cmps
adc
popa
cdq
popa
mov
jecxz
aad
and
xchg
int
xchg
aaa
ror
push
pop
shl
ins
rol
pop
xchg
fsub
les
rcr
mov
and
mov
aad
dec
in
inc
push
aam
mov
fild
mov
sbb
popa
jnp
sbb
aam
faddp
outs
and
sub
and
dec
sub
arpl
popa
movs
fild
mov
xchg
mov
sbb
loope
mov
cmp
fwait
ja
mov
xchg
cmp
stc
and
std
adc
adc
xchg
aaa
repnz
(bad)
loope
jno
add
movs
jmp
nop
je
add
xor
loopne
stos
ret
shl
push
and
fld
inc
out
loope
jle
call
jb
out
loop
cmps
icebp
jne
dec
ins
stos
mov
je
fmul
ja
fdiv
lds
bound
clc
pop
xor
add
inc
inc
add
retf
mov
jp
enter
out
cmc
icebp
out
adc
mov
inc
int
xchg
inc
adc
int
xor
add
sbb
loopne
jecxz
jo
mov
xor
mov
shr
jne
iret
dec
fsub
rol
dec
clc
xor
push
push
inc
dec
xor
frstpm(287
push
xlat
mov
inc
aad
in
mov
jge
imul
movs
pop
lds
pop
dec
cmp
mov
popa
add
mul
sub
scas
and
in
pop
xor
inc
sub
xchg
movs
jne
mov
adc
push
jno
jmp
jp
jo
mov
es
ja
popa
cmc
sbb
xchg
xor
push
fsub
cmp
cwde
(bad)
push
cs
dec
xor
(bad)
cmp
cwde
pop
adc
jno
cmps
sahf
or
inc
pop
fwait
in
jne
ins
cmps
aas
gs
adc
je
mov
outs
mov
push
lea
pusha
aad
and
(bad)
sar
loopne
hlt
add
push
repz
mov
in
pop
int3
(bad)
(bad)
in
stc
stos
ins
mov
and
adc
leave
pop
push
int
hlt
popa
xchg
adc
mov
jle
lds
sbb
and
xchg
push
movs
in
jb
imul
push
inc
xor
(bad)
sbb
lahf
xchg
dec
nop
xor
test
into
xor
lahf
sbb
jo
pusha
mov
mov
out
rcr
sbb
je
jnp
mov
pop
push
popf
sbb
mov
mov
pop
shr
sub
ret
int
fnstcw
inc
cmp
mov
loopne
xor
int3
mov
sbb
xchg
mov
mov
xchg
add
jae
adc
data16
inc
jno
bound
mov
hlt
xchg
add
xor
movs
arpl
add
mov
xor
not
movs
adc
imul
fwait
inc
fiadd
cs
push
std
cdq
xchg
ins
adc
mov
mov
addr16
push
and
sub
add
push
or
shl
sub
ja
sub
mov
popf
fld
mov
mov
sbb
retf
push
cmp
dec
mov
shl
icebp
popf
clc
xchg
cmp
sub
and
mov
lock
jbe
mov
mov
out
inc
icebp
cmc
jne
add
xor
ret
adc
adc
pop
ret
cdq
pop
gs
dec
ja
in
xchg
mov
inc
lock
gs
movs
mov
mov
or
mov
jl
jno
add
mov
in
mov
push
adc
push
add
addr16
icebp
repz
cmp
clc
push
pop
sar
popf
lods
movs
inc
dec
pop
enter
sar
out
jmp
mov
sub
push
dec
(bad)
mov
xchg
push
inc
jnp
cmc
or
nop
mov
inc
cmp
push
cwde
(bad)
jb
add
dec
inc
and
cs
mov
xchg
sbb
adc
in
iret
dec
inc
jp
inc
mov
shl
push
shl
out
movs
adc
(bad)
out
adc
lds
and
es
pop
xchg
xor
mov
popa
pushf
hlt
jne
test
jb
inc
(bad)
pop
bound
div
aam
lods
in
or
ficom
adc
mov
out
in
(bad)
pop
fdiv
test
xchg
adc
fst
jle
std
xchg
pop
ss
ficom
hlt
jo
add
jmp
xchg
jge
leave
push
imul
push
cmp
adc
daa
xor
fdiv
and
mov
jmp
adc
and
(bad)
pusha
push
add
in
jecxz
das
xchg
ins
movs
out
cs
jg
mov
nop
fsubr
les
mov
mov
cli
retf
rcr
xchg
mov
xchg
gs
add
loope
mov
add
mov
and
in
mov
into
pop
cmp
jge
neg
rcl
adc
xchg
out
xor
jmp
test
mov
clc
imul
inc
push
jmp
xchg
push
inc
or
push
adc
(bad)
std
(bad)
cmp
add
aam
and
xor
sbb
push
xor
loopne
(bad)
push
xlat
rcl
mov
rol
cs
lahf
fst
dec
stc
dec
in
pop
push
(bad)
loopne
mov
fwait
and
(bad)
pop
push
push
push
add
inc
nop
adc
inc
loopne
cmp
xchg
cwde
inc
test
std
pusha
shl
inc
mov
and
gs
(bad)
movs
pop
aad
and
cvtdq2ps
jnp
sub
or
mov
add
and
outs
and
imul
xor
lahf
(bad)
cli
ins
sbb
div
lods
(bad)
(bad)
inc
in
addr16
and
adc
mov
sbb
push
sub
lds
sbb
cdq
add
test
and
push
dec
push
mov
cmps
clc
stos
and
adc
std
popa
mul
jbe
repz
xchg
lock
mov
nop
lock
jnp
adc
lock
mov
mov
idiv
jmp
push
and
cli
push
add
cmp
adc
sti
lods
mov
gs
pop
and
mov
xor
or
cmp
lods
out
lock
inc
test
adc
cmps
out
out
adc
jno
je
inc
mov
push
(bad)
mov
fst
push
popa
mov
div
test
cmp
push
mov
pop
adc
clc
or
fxch
(bad)
cmp
add
mov
mov
dec
push
jno
out
jae
lods
push
xchg
pop
and
adc
cmc
nop
sbb
xlat
in
adc
mov
repz
std
inc
loopne
or
pusha
lods
and
push
xchg
in
adc
pop
mov
dec
cmps
adc
cdq
fwait
jne
icebp
mov
push
dec
jge
mov
cmp
fsub
not
movs
jbe
adc
(bad)
js
rcr
aad
jns
shl
ins
xchg
and
in
cmp
add
fwait
scas
pusha
jmp
scas
xor
inc
inc
dec
xchg
jle
xor
and
xlat
sub
jno
loop
and
cwde
push
inc
cmp
sbb
inc
movs
rcr
int
pop
jnp
aaa
ret
jmp
movs
mov
mov
mov
popa
pop
repnz
enter
ds
adc
outs
push
inc
in
pop
add
cmp
xchg
rol
inc
adc
adc
aad
cmc
in
add
mov
push
adc
pop
jle
(bad)
mov
jns
mov
aaa
dec
inc
rol
jae
rcr
fwait
add
inc
mov
popa
in
mov
jns
pop
inc
rcl
xchg
arpl
adc
pop
test
ror
loope
in
push
mov
fldcw
lds
lea
inc
test
rcl
jmp
mov
icebp
xchg
xor
add
mov
push
add
xchg
cmp
push
xchg
jne
idiv
xchg
dec
pop
mov
and
bound
ja
jb
xor
dec
xor
xchg
(bad)
mov
jae
(bad)
xor
shl
xchg
pop
jmp
adc
mov
xchg
sar
adc
cmp
add
mov
sbb
xchg
ror
rcl
push
leave
fs
lock
ins
cmp
inc
sahf
or
jo
mov
out
jno
xchg
inc
ins
and
in
sar
xchg
push
test
jl
fst
cmp
ret
sub
lds
ss
push
adc
inc
xor
mov
sub
jmp
jmp
xor
jp
jo
imul
and
xchg
aad
or
add
gs
repz
jo
and
mov
gs
push
nop
ror
call
pop
ins
add
xor
lock
loopne
push
hlt
xor
xor
mov
jae
jmp
push
sub
je
xchg
inc
jno
add
sar
lods
shl
jae
xchg
push
mov
push
inc
ret
nop
xchg
hlt
xor
mov
shl
lahf
iret
push
mov
cmp
ins
push
movs
mov
div
jmp
xor
and
or
mov
adc
fwait
mov
cmp
aas
or
daa
aas
mov
push
sar
imul
sub
out
sub
shl
ja
cs
sbb
fwait
stos
mov
mov
out
fsub
nop
pusha
popf
shl
mov
jle
(bad)
icebp
retf
inc
and
jmp
mov
aaa
xor
mov
cmc
(bad)
hlt
mov
push
dec
mov
mov
jae
xor
icebp
addr16
(bad)
pop
rol
cmc
(bad)
jecxz
push
dec
xchg
mov
mov
jne
imul
fist
popa
sbb
addr16
je
jae
fidiv
push
(bad)
and
and
cmp
rcr
loope
test
xor
imul
retf
inc
mov
and
adc
data16
inc
in
rcl
adc
push
or
mov
shl
cs
test
cld
jp
in
mov
mov
mov
cmp
movs
js
lea
mov
sti
push
(bad)
cmc
mov
rcr
sbb
mov
cmc
ja
popa
(bad)
or
fild
outs
cmp
in
jae
les
shr
and
repz
sbb
xor
pop
shl
jno
and
movs
push
(bad)
mov
popf
sbb
pop
popf
lahf
movlps
shl
out
pop
xchg
rol
push
jb
sub
adc
data16
and
iret
lea
push
pusha
popf
aaa
mov
xor
pusha
lea
call
xchg
add
xchg
test
mov
dec
pop
(bad)
stos
add
sbb
inc
repz
inc
shl
cmp
loopne
pop
mov
test
stos
push
sbb
sbb
in
lock
mov
pop
or
fsubrp
push
cs
pop
push
xchg
xchg
jecxz
cld
push
push
nop
cwde
pusha
mov
mov
arpl
mov
xchg
fs
add
push
jecxz
in
xchg
test
movs
rcl
mov
push
jmp
and
shl
and
or
imul
leave
inc
stc
popf
push
and
sbb
xchg
add
stc
in
adc
lahf
lods
inc
(bad)
cwde
arpl
std
or
mov
jne
dec
push
sbb
cmp
leave
in
in
push
pop
and
adc
(bad)
std
mov
push
rcr
mov
test
mov
sbb
push
cmc
or
adc
sub
xchg
pop
adc
adc
hlt
inc
pop
mov
test
(bad)
pop
inc
xor
adc
out
cmp
test
loopne
mov
or
and
or
daa
std
pop
add
mov
and
addr16
mov
ret
mov
mov
gs
loop
mulps
add
mov
mov
pop
add
xchg
jo
pop
js
adc
push
or
retf
nop
xchg
gs
dec
add
mov
pop
(bad)
mov
push
icebp
test
sub
inc
ins
test
idiv
call
sti
ds
ins
mov
fstp
jecxz
lea
add
shl
mov
jbe
sbb
movs
mov
mov
jmp
fistp
imul
mov
fidiv
pop
outs
nop
jg
mov
mov
imul
pushf
and
outs
xchg
mov
sar
mov
rcl
xor
popa
mov
sar
cmps
ins
mov
jae
js
adc
fnsave
clc
in
and
popa
inc
add
outs
imul
fcmovu
jns
rol
test
sahf
mov
sub
jle
es
mov
into
das
mov
test
inc
add
rcl
lea
fstp
xchg
jge
jmp
sbb
dec
call
movs
xchg
sbb
hlt
push
jae
cmc
(bad)
lock
fyl2x
or
pop
mov
inc
add
scas
push
(bad)
daa
mov
repnz
xchg
jae
inc
frstor
stos
or
push
jp
sbb
loope
ss
ja
(bad)
stc
lock
(bad)
mov
jmp
scas
shr
xchg
adc
push
shl
push
clc
retf
dec
in
sti
out
pop
sbb
xor
push
js
fistp
push
int3
std
mov
jmp
xchg
or
sbb
mov
push
inc
mov
mov
gs
sub
xor
and
mov
jo
push
shl
jbe
fst
mov
fdivrp
xor
aam
loope
mov
or
clc
nop
stos
sub
shr
pop
push
outs
mov
sub
outs
add
repnz
gs
and
mov
fwait
(bad)
mov
inc
mov
xor
in
push
sbb
les
iret
mov
mov
or
rcr
mov
outs
xor
int3
pop
xchg
pop
popa
gs
push
xor
push
mov
inc
xor
loope
popfw
repz
out
mov
and
lea
sbb
push
inc
push
out
jnp
and
fdivr
in
in
sbb
test
mov
cmp
icebp
adc
jg
call
aad
xchg
adc
push
dec
aaa
test
and
or
js
pop
xor
or
and
push
lea
cs
pop
pop
gs
xor
es
mov
stc
sub
cmp
sbb
stos
inc
and
pushf
cwde
shl
pop
(bad)
loop
icebp
adc
xor
and
lahf
sub
pop
and
sbb
dec
and
rol
xor
in
jge
mov
fild
sbb
gs
jle
cdq
aaa
pop
xor
xchg
test
out
lods
push
push
cmp
push
inc
imul
add
sar
gs
pop
je
jns
sbb
adc
mov
lock
inc
lods
int
cdq
cmc
adc
pop
and
jo
bound
jle
pop
rcr
in
mov
rol
gs
inc
fs
mov
fsubp
fst
adc
icebp
push
inc
sbb
repz
push
mov
mov
xchg
push
or
lock
cli
or
and
sahf
and
repz
xor
dec
mov
mov
add
add
mov
push
mov
pop
mov
popa
and
xor
mov
lock
mov
retf
jle
or
add
aad
rol
xchg
std
push
mov
jns
mov
push
jns
popa
lahf
ror
mov
in
and
inc
push
frstor
xor
and
xor
and
cmp
xlat
add
adc
ret
xor
es
xor
(bad)
or
dec
jl
test
push
xor
and
fild
xchg
mov
inc
in
rol
sbb
ret
xor
adc
retf
xor
test
xor
and
and
push
test
mov
not
jl
sahf
xor
inc
aam
mov
retf
pushw
pop
xchg
dec
icebp
xrelease
popa
inc
jb
inc
iret
test
add
mov
mov
sbb
inc
jae
daa
psadbw
(bad)
fisubr
mov
aad
adc
cwde
xor
int3
aas
mov
cmp
pusha
scas
pop
imul
in
sub
jo
add
pushf
pop
loope
arpl
mov
out
aas
push
pop
popf
shl
in
fist
jp
add
mov
adc
jp
daa
jb
jno
add
mov
dec
cmp
loope
idiv
lock
(bad)
sub
fcomip
sub
leave
jecxz
jne
mov
mov
push
xchg
and
ret
dec
cwde
add
xor
sbb
and
mov
gs
dec
pop
inc
add
push
out
or
push
mov
inc
aad
xchg
cmp
add
mov
pop
xor
pop
push
shl
mov
sub
cmp
(bad)
shr
fld
dec
fsubr
pop
in
pusha
jb
pop
cmp
ja
xchg
loope
fucom
dec
int
retf
mov
mov
lahf
pop
loope
imul
inc
pop
fldenv
test
xlat
push
add
mov
gs
cli
lods
inc
xor
push
mov
in
shl
xor
call
fcom
mov
movs
imul
cmps
fadd
xchg
inc
and
nop
cld
rcl
mov
sub
inc
cld
add
mov
test
and
nop
stos
add
les
mov
ds
mov
xchg
xor
iret
jecxz
sbb
shl
or
cld
xor
imul
and
pop
inc
dec
adc
fdiv
xor
icebp
cli
inc
mov
jb
ja
ds
daa
add
ret
outs
add
lds
cmp
hlt
inc
and
and
xchg
add
icebp
inc
push
inc
iret
and
aaa
enter
and
pop
mov
cdq
into
mov
jmp
xor
cmc
jmp
sbb
fstp
inc
and
or
add
out
and
out
or
xchg
push
ret
lods
adc
jle
and
xor
fs
aad
push
movs
mov
loop
inc
std
mov
mov
jp
leave
sbb
cmp
rcr
movs
pop
and
and
xor
jno
loope
cs
iret
ja
test
in
xchg
out
dec
inc
or
or
and
imul
stos
adc
and
xor
adc
xchg
outs
xor
movs
dec
add
ins
pusha
addr16
push
inc
popf
out
mov
mov
fdivp
xchg
ins
mov
and
sub
sbb
jns
pop
mov
xor
sbb
test
sub
push
mov
xchg
pop
ins
cmp
lock
ins
jmp
aaa
sub
lahf
push
in
ins
mov
repnz
icebp
pop
icebp
dec
adc
xchg
cwde
jmp
xlat
pop
and
adc
add
in
mov
pop
hlt
mov
sbb
inc
dec
add
cwde
arpl
ror
sar
hlt
push
pop
arpl
fwait
shl
xchg
sbb
push
sub
dec
lock
jo
xor
aas
inc
mov
pop
or
into
iret
inc
jecxz
loope
xchg
push
inc
mov
adc
xor
loop
imul
xchg
push
gs
xor
out
mov
jmp
pop
pusha
push
aas
mov
addr16
add
pop
mov
sbb
add
loope
cld
pusha
sbb
pop
adc
aam
les
addr16
mov
test
test
xor
cmc
mov
fs
fwait
movs
pushf
xchg
gs
std
or
test
jmp
add
icebp
sbb
adc
mov
cmc
adc
mov
bound
push
xor
xor
xor
sbb
ret
leave
jmp
aas
jnp
inc
call
adc
or
js
sub
jns
xchg
dec
gs
push
mov
in
in
pop
xchg
or
and
rcl
lods
imul
fstp
lock
inc
aas
psraw
cs
or
(bad)
jb
sub
sub
inc
test
push
xor
push
mov
repnz
mov
ret
inc
popa
lea
adc
rol
int3
pop
fucomip
loopne
or
cdq
add
sahf
pop
mov
movs
and
scas
or
inc
stc
enter
gs
int3
mov
mov
stos
popa
imul
shl
sub
push
gs
mov
push
push
or
ja
mov
hlt
add
jl
cmp
shl
test
cmps
scas
push
and
push
mov
mov
in
test
push
sti
jg
je
mov
mov
bound
xchg
xchg
mov
add
sub
rcl
cmovp
movs
leave
add
push
in
fstp
and
xchg
addr16
repz
add
xchg
and
sbb
jle
inc
or
mov
mov
xor
sub
xchg
sbb
pop
pop
in
(bad)
vmovsldup
mov
or
cmp
jle
mov
icebp
test
pop
jb
je
push
ja
loop
mov
retf
push
fisub
(bad)
add
outs
fisttp
add
sbb
push
sub
imul
mul
inc
daa
ins
sub
sti
dec
mov
lea
arpl
out
sub
loope
and
(bad)
rcr
arpl
sbb
add
inc
jne
aam
gs
jns
xor
dec
pop
jb
pop
mov
add
jbe
inc
cmc
push
mov
(bad)
lea
push
sbb
lods
pop
xor
jecxz
mov
push
sbb
ins
push
cli
lds
shl
xchg
push
mov
dec
test
cmp
and
xor
pop
xor
popa
sub
icebp
push
sbb
xchg
in
hlt
cwde
lods
xchg
adc
je
xchg
lds
aad
stos
rol
jl
push
xor
pop
lds
in
(bad)
or
rcl
or
loopne
dec
dec
pop
dec
push
fstp
popa
test
rol
leave
xchg
push
cwde
push
pop
xchg
xlat
cmp
cld
shl
push
cdq
push
and
mov
inc
adc
shl
mov
rol
push
in
push
sub
clc
cmc
push
fwait
mov
stos
mov
test
pop
add
fprem1
mov
push
rcl
push
imul
cmp
and
data16
or
sbb
adc
adc
arpl
jge
adc
xor
aad
test
jg
out
push
xor
mov
mov
xchg
dec
mov
push
push
xchg
fisub
inc
sete
and
or
push
es
or
add
adc
nop
pop
sbb
gs
inc
fwait
pop
inc
lock
jo
add
push
pop
mov
push
xor
sbb
adc
ficomp
or
xchg
cli
mov
div
addr16
neg
adc
or
punpckldq
xlat
jge
aaa
mov
rol
xchg
adc
loop
mov
aas
mov
inc
ficomp
push
xchg
cmc
out
mov
not
pop
jmp
jae
push
jmp
add
xor
mov
ret
and
aad
jp
xchg
scas
or
xchg
adc
inc
push
nop
test
inc
push
add
jnp
push
aam
pop
ins
mul
inc
jecxz
mov
xor
sub
sahf
xchg
shl
test
pop
and
xchg
imul
xlat
jp
sbb
jne
inc
fs
add
in
repnz
neg
outs
mov
cdq
sbb
xlat
and
sub
fisttp
fwait
push
bound
iret
or
xor
std
xor
xor
inc
jp
data16
and
repnz
mov
ss
repz
jo
mov
in
shl
push
jno
pusha
pop
push
add
lahf
in
fs
aaa
hlt
dec
xchg
mov
loopne
fcmovne
rol
pop
mov
hlt
popa
mov
daa
nop
mov
jbe
add
stos
cmps
and
and
push
fisub
mov
mov
xor
mov
imul
xor
mov
out
push
aad
jg
rcr
inc
das
xor
inc
sub
arpl
inc
push
les
loop
aad
(bad)
mov
cli
and
retf
imul
loope
sti
add
ror
cmp
(bad)
je
mov
fild
loopne
shr
xor
sbb
or
sub
push
jge
enter
cmp
imul
jnp
loopne
sahf
stos
les
aam
adc
test
fldcw
inc
mov
jmp
hlt
mov
sti
xor
hlt
sbb
push
push
and
sbb
inc
cmc
js
mov
out
and
mov
movs
push
imul
ror
push
xor
hlt
or
jmp
fdiv
dec
add
dec
or
mov
cmp
rcr
jne
in
sub
or
rol
mov
jl
ins
ds
mov
das
popf
ret
leave
xor
dec
xchg
sahf
mov
sti
or
movs
movs
inc
dec
fwait
xor
xchg
sub
aaa
ret
mov
arpl
pop
aad
add
(bad)
and
xchg
cmp
mov
ja
jg
jno
add
push
pop
pop
fld
not
call
and
and
mov
cdq
pusha
and
in
icebp
or
sub
xor
hlt
add
cmps
and
push
add
xor
shl
xchg
inc
es
mov
cmp
add
inc
mov
and
add
or
lds
fdiv
xchg
adc
cmp
dec
aam
cdq
or
and
fcmovnb
jecxz
sahf
adc
xchg
aaa
xor
jne
mov
bound
ror
and
es
test
call
mov
or
jbe
movs
sti
ss
mov
inc
fmul
jg
arpl
sbb
clc
ret
dec
or
mov
and
movs
rcl
xor
inc
pop
adc
jno
popa
add
dec
stc
cmp
test
popa
mov
ds
jg
pop
adc
dec
mov
add
jg
imul
mov
(bad)
push
cmps
jmp
fsub
push
test
shl
lods
nop
xor
sub
pop
js
sbb
adc
mov
test
jle
dec
inc
adc
cwde
aaa
and
jecxz
xchg
test
and
sbb
pop
outs
sub
push
jmp
add
stc
out
mul
mov
fld
add
adc
xor
mov
aas
cmp
xlat
(bad)
retf
mov
mov
test
or
jmp
out
call
inc
sbb
je
jo
and
sub
mov
xchg
mov
lea
inc
adc
hlt
sub
push
into
pop
sbb
jmp
int3
ins
test
dec
inc
rcl
lahf
xlat
popa
out
(bad)
cmp
ss
mov
and
pop
cmp
push
movs
ja
inc
popf
fsubr
push
mov
cmp
loopne
rcl
jns
mov
xor
ja
push
lahf
dec
ror
mov
add
mov
test
adc
ds
aaa
or
lods
pop
shr
loopne
and
int
pusha
js
in
or
call
clc
dec
jmp
popf
int3
fcom
inc
xchg
ja
dec
stos
jmp
pop
and
cmp
push
jl
shl
jno
or
sub
lds
stos
xchg
push
add
(bad)
ds
outs
xchg
(bad)
push
icebp
mov
movs
cmp
ret
mov
or
sbb
mov
or
sahf
out
stos
fnstenv
test
sub
and
jne
sub
adc
repz
sub
rol
pushf
push
mov
sbb
rol
repnz
pop
jmp
mov
dec
cmp
mov
sahf
je
outs
xchg
in
or
xchg
mov
loope
lock
and
icebp
push
icebp
pop
rol
shr
add
cmc
xchg
loope
ret
and
and
aaa
pop
add
xchg
dec
sbb
test
ins
mov
pusha
lea
or
mov
(bad)
pop
dec
or
dec
xchg
mov
mov
jae
or
xchg
adc
in
sbb
push
pop
stos
and
hlt
stos
stc
mov
lds
cs
jno
add
adc
jge
push
push
(bad)
(bad)
sub
fadd
fcmovbe
cmp
iret
es
aad
shr
std
stos
xchg
hlt
lods
and
mov
lahf
stc
push
imul
gs
pop
int
mov
call
js
mov
xor
pop
and
pop
push
fwait
pop
(bad)
ds
inc
(bad)
test
cmc
jns
ret
pop
xchg
jge
daa
test
pop
(bad)
and
nop
inc
mov
inc
sbb
in
or
cmp
mov
rol
push
rcl
adc
or
stos
mov
xor
cmps
arpl
sti
pop
pop
cmp
adc
sbb
lds
add
repz
push
xchg
cmp
cmp
(bad)
fisttp
or
mov
add
jns
jmp
jg
xchg
adc
xchg
xchg
stc
cmc
adc
mov
enter
mov
lods
rcr
leave
sbb
jle
or
inc
add
adc
sub
or
add
adc
sbb
mov
pop
inc
ins
imul
in
inc
mov
daa
sub
pop
rcl
(bad)
shr
popf
dec
cwde
mov
(bad)
int3
dec
cmp
pusha
jae
fs
inc
mov
popf
add
jge
push
sbb
mov
out
(bad)
and
xor
adc
and
and
dec
int
aam
adc
mov
ror
pop
inc
mov
mov
jns
gs
retf
lahf
adc
push
xchg
fistp
into
iret
mov
outs
xchg
shr
inc
mov
js
jl
pop
adc
inc
and
cmp
jo
xlat
pop
les
mov
dec
inc
rcr
or
pop
shl
cmp
test
enter
mov
cmp
movntq
dec
cmc
fcomp
push
loope
sbb
cmp
pushf
fld
xchg
mov
and
ja
and
cdq
add
jbe
inc
popa
push
mov
fwait
cld
xlat
lea
(bad)
imul
inc
cmps
pop
bnd
aam
arpl
lods
jno
mov
dec
mov
mov
jne
movs
cmp
pop
add
clc
xchg
cmps
call
jnp
xchg
add
and
mov
out
sub
adc
loop
mov
or
add
out
sbb
mov
mov
jg
xchg
les
leave
mov
mov
cs
arpl
mov
enter
nop
xor
fadd
fld
jb
push
and
stos
xor
or
shr
push
loopne
cmp
cmp
adc
sbb
dec
popa
mov
dec
and
xchg
pop
or
mov
iret
push
cmc
(bad)
aad
xchg
push
and
push
adc
popa
jecxz
sar
jo
enter
lea
out
(bad)
fwait
loop
add
xchg
lods
push
les
lds
arpl
nop
push
push
addr16
xchg
and
mov
popa
cmc
add
mov
mov
adc
add
and
add
(bad)
ja
mov
sbb
ret
mov
adc
aas
rep
dec
fisttp
stos
lods
and
ficom
pop
jmp
fcom
call
xlat
cmps
(bad)
repz
test
mov
rcl
cld
fadd
cmp
cmc
retf
shl
sbb
xor
dec
stos
sbb
xor
sbb
pop
xchg
dec
loopne
rcl
fidivr
test
test
dec
retf
mov
cmp
jp
bound
mov
sar
imul
(bad)
ffree
leave
leave
aam
xchg
outs
test
or
jecxz
push
add
outs
pop
icebp
sbb
sub
test
jle
cmp
sbb
add
xor
aaa
gs
ret
mov
fsubr
test
inc
les
fld
xor
inc
retf
fst
or
in
popa
pushf
dec
cmc
jmp
not
hlt
and
mov
xor
push
pop
and
popa
adc
cdq
aad
les
das
aaa
dec
in
out
lods
(bad)
fs
loope
rcr
cli
fs
mov
int3
inc
out
jbe
ins
int
int
movs
fst
cmp
shl
imul
mov
sbb
ds
sti
xor
mov
jo
stc
aam
in
aaa
mov
loop
sbb
les
adc
test
mov
xchg
and
jns
sbb
js
add
pop
test
dec
mov
stos
shr
cwde
in
mov
mov
mov
popf
cli
ins
arpl
inc
inc
dec
add
sbb
cmps
sbb
out
cmp
fiadd
cmp
(bad)
mov
hlt
cmp
xchg
add
pop
and
mov
mov
push
fld
lahf
je
in
test
retf
call
setle
xchg
jo
les
ret
jne
imul
xor
add
mov
inc
ja
cmp
les
enter
and
stos
push
dec
mov
mov
ret
clc
scas
out
xchg
add
pop
jge
inc
mov
or
movs
add
out
aad
(bad)
mov
push
aaa
inc
adc
cmp
rcl
gs
aad
xchg
mov
lds
sti
int3
sbb
add
sbb
xchg
test
ja
les
jge
and
lods
(bad)
push
shl
or
mov
shr
mov
inc
jns
add
xchg
ss
add
stc
jne
imul
in
pushf
sbb
gs
cmp
pusha
arpl
xchg
scas
jge
data16
rcr
imul
in
fwait
movs
addr16
push
and
in
or
dec
pusha
inc
push
scas
or
mov
or
and
xchg
cmp
or
xor
xor
pop
inc
add
imul
retf
movs
adc
jne
fwait
pop
(bad)
xchg
es
adc
mov
cmp
fsubr
shr
shr
mov
xor
and
adc
data16
pop
test
sub
adc
call
pop
aam
sub
inc
fstp
mov
dec
in
popa
loop
scas
fnsave
das
sbb
cmovns
jne
adc
movs
jp
pop
dec
pop
outs
imul
mov
or
ins
hlt
out
xchg
mov
stc
push
in
and
stc
and
lea
push
jge
daa
inc
dec
icebp
pop
fisub
popa
(bad)
jp
dec
pop
mov
push
rcr
stc
shl
or
hlt
ja
mov
sbb
add
mov
je
ins
inc
add
popf
adc
imul
inc
mov
adc
dec
cld
into
popa
jmp
xchg
out
mov
and
mov
iret
push
jmp
retf
pop
cmp
test
fbstp
scas
mov
cmp
jmp
push
jmp
sbb
out
int
push
gs
mov
lds
adc
jnp
sub
adc
pop
push
sbb
or
push
gs
aad
leave
xchg
sbb
popa
xor
loope
sub
cmc
shr
mov
movs
iret
xchg
xchg
sub
aad
ret
add
jge
push
xor
mov
mov
jge
inc
jne
add
xor
icebp
and
push
xchg
adc
jno
dec
(bad)
jle
movs
mov
popf
in
pop
xor
pop
in
mov
adc
rol
in
lock
test
mov
jge
push
adc
icebp
inc
(bad)
cmp
arpl
icebp
movs
xlat
(bad)
daa
cmps
aaa
(bad)
lds
push
(bad)
xchg
and
pop
mov
mov
loope
push
aad
aam
add
pop
enter
inc
into
pop
add
push
std
push
jmp
pop
mov
cmc
mov
push
push
add
test
mov
cmp
adc
inc
rcr
mov
adc
fstp
inc
shl
rol
mov
mov
jne
adc
fnstsw
xchg
and
xchg
push
in
mov
adc
jb
pusha
icebp
cdq
cdq
loop
adc
iret
lock
or
mov
add
loop
(bad)
jno
ret
cmps
mov
xor
aam
pop
mov
inc
mov
sub
mov
cmps
and
or
push
mov
test
add
adc
inc
push
xchg
inc
ror
movs
push
int3
not
int
fnstenv
inc
sahf
xor
xor
push
xor
push
out
mov
sbb
test
cdq
cli
test
mov
cmc
xchg
fs
sti
adc
push
sub
xchg
ins
imul
jmp
fdiv
dec
xor
ror
adc
gs
add
(bad)
into
sub
popa
cli
in
loope
test
dec
pop
retf
sbb
mov
adc
adc
int3
xor
pushf
jno
hlt
jmp
xchg
shl
hlt
gs
dec
inc
pop
jecxz
sub
xor
sbb
mov
push
push
test
mov
mov
in
stos
lds
aad
nop
and
fisttp
mov
inc
shl
xor
adc
dec
push
jbe
cdq
mov
cmp
add
adc
xchg
xor
aad
pop
out
xchg
jle
or
dec
loope
std
jle
fisttp
push
mov
enter
addr16
add
mov
loope
(bad)
test
fistp
lds
mov
test
adc
data16
and
mov
(bad)
popa
sar
shl
mov
not
fisubr
sbb
repz
adc
mov
push
lahf
mov
push
adc
idiv
lods
lea
xchg
push
cld
lea
test
test
(bad)
aam
mov
ss
je
push
loopne
add
pushf
sub
xor
jecxz
or
inc
ret
test
(bad)
or
nop
or
xchg
xchg
shl
xor
jge
stc
cmc
fbld
shl
cdq
add
jg
jnp
mov
push
sbb
aam
xchg
call
add
lds
rol
icebp
adc
cmps
pop
jecxz
add
add
mov
ret
inc
add
push
outs
sahf
ret
mov
mov
in
icebp
aaa
test
jge
stos
sbb
sbb
add
mov
mul
mov
sbb
xor
mov
xchg
jmp
(bad)
leave
push
into
jno
sub
push
push
sub
or
shl
test
sbb
in
in
sbb
pop
xor
dec
sub
adc
mov
inc
mov
xchg
and
jl
sub
dec
lahf
xchg
inc
sbb
dec
adc
sub
xchg
call
call
sti
cmp
pop
ja
mov
sbb
xchg
shl
clc
fdivrp
in
jbe
xchg
push
outs
retf
stos
addr16
sar
sub
jno
mov
adc
call
test
shr
pop
or
movs
inc
retf
jecxz
pop
jno
xor
mov
lds
mov
xchg
hlt
ins
xchg
leave
jno
inc
aad
pop
and
rol
aas
jbe
add
aad
nop
jp
mov
xor
in
lock
ret
jne
cmp
cmp
and
mov
ret
sbb
add
mov
mov
xor
aam
test
fisttp
mov
xchg
xor
icebp
mov
pop
(bad)
fmul
lds
dec
ja
xor
push
test
dec
mov
dec
xor
mov
and
mov
pop
shl
pop
inc
pop
fstp
mov
(bad)
rcl
pop
pop
fiadd
out
mov
xor
jne
sbb
xchg
rol
push
pop
movs
and
push
mov
push
cmc
mov
ret
cmp
mov
neg
std
pop
outs
repnz
les
fdiv
gs
scas
xchg
or
leave
pop
inc
and
(bad)
sub
dec
cmp
jb
mul
aam
fcompp
jo
mov
and
mov
jae
add
jl
aad
inc
clc
iret
enter
pop
dec
push
loop
call
xor
cmps
mov
rcl
mov
push
xor
das
cmc
pop
mov
(bad)
mov
xchg
sub
adc
mov
in
xchg
mov
imul
leave
pushf
fnstcw
inc
jle
push
xchg
into
mov
loop
cmp
or
bound
and
std
push
(bad)
dec
xlat
dec
xchg
dec
ror
xor
sub
out
cmp
add
push
mov
(bad)
add
(bad)
mul
xchg
shl
mov
aad
xor
jne
ins
adc
test
pop
sbb
mov
shr
aaa
lods
mov
dec
loopne
std
mov
sbb
test
shl
adc
rcl
add
dec
in
jmp
pop
movs
and
xor
adc
(bad)
in
push
lock
xor
fst
cmc
and
add
lds
jg
push
cwde
(bad)
cmp
minps
in
jb
jo
rcl
fild
in
mov
stos
cmp
pop
pop
pusha
hlt
jo
pcmpeqw
push
shl
cmp
jecxz
popf
es
and
jl
fldenv
push
inc
test
jno
xor
or
mov
out
fs
jle
jne
fwait
sub
mov
adc
add
xor
(bad)
cmp
cwde
aas
pop
inc
xor
movs
hlt
sahf
daa
inc
adc
in
hlt
mov
pop
test
xchg
movs
das
mov
ret
cmp
loope
in
out
nop
scas
and
cmp
add
js
jmp
add
mov
test
in
adc
xchg
inc
stc
and
loopne
in
test
int3
dec
jmp
or
clc
jl
dec
and
push
ins
je
mov
test
test
mov
mov
sbb
ds
aas
out
(bad)
adc
js
xchg
jecxz
mov
out
ret
and
xchg
aam
mov
dec
fisub
jne
inc
ja
(bad)
add
enter
stos
jmp
adc
out
in
cmp
sar
int
mov
lock
nop
mov
daa
pop
out
mov
pop
pop
out
jbe
mov
dec
loop
iret
or
movs
add
xor
and
cmp
in
mov
stos
inc
adc
cwde
jno
push
frstor
test
nop
and
mov
test
push
jmp
add
std
pop
mov
adc
add
mov
xor
mov
sbb
xor
lock
cld
xor
call
fcom
adc
push
fild
mov
aam
inc
mov
fisttp
adc
test
ins
mov
mov
cmp
dec
cmp
jbe
jno
popa
dec
lock
int3
gs
call
sahf
lods
dec
mov
cli
ficomp
cmp
daa
test
push
or
add
nop
out
ja
mov
jge
imul
ficomp
movs
aad
je
mov
test
mov
push
mov
(bad)
push
in
cs
jmp
adc
loopne
ss
pop
jp
mov
mov
xor
adc
dec
scas
push
shr
inc
or
fimul
arpl
xor
mov
mov
icebp
test
int
jno
mov
inc
scas
not
out
hlt
push
xchg
ror
mov
loopne
out
cmp
fist
out
out
mov
jmp
jge
adc
xchg
add
add
and
imul
cmps
sbb
mov
pop
pushf
fidiv
or
cmp
mov
pusha
push
mov
mov
aaa
test
cmp
push
test
cmp
bound
movs
mov
pusha
sbb
arpl
mov
leave
and
sub
pop
test
mov
push
adc
sti
xor
push
or
or
jo
shl
jo
cmp
xchg
out
pop
sahf
mov
xchg
mov
mov
int3
pop
mov
cmps
and
scas
fstp
push
cmc
rol
pop
retf
or
in
rcl
adc
pop
pop
xor
xor
mov
adc
pop
inc
arpl
mov
xchg
test
jnp
pop
popa
loope
and
mov
pop
cmc
xchg
test
shl
mov
cmps
lods
mov
lds
sub
push
xchg
and
xchg
xor
inc
in
mov
imul
dec
mov
sub
mov
and
push
int
pushf
adc
add
mov
xchg
mov
jno
and
mov
les
jecxz
mov
das
fmul
pusha
pushf
stos
inc
xor
jnp
mov
adc
add
push
jne
sti
(bad)
sbb
push
push
dec
pushf
fdivr
sub
jnp
add
icebp
test
outs
repnz
je
movs
stos
xchg
jo
adc
xor
sbb
jns
rol
xchg
in
mov
and
add
repnz
popa
mov
xor
movs
or
push
shl
push
mov
sub
shl
aad
xor
inc
mov
pusha
sbb
(bad)
push
aam
es
mov
and
jp
inc
int3
cmp
inc
xor
cmp
aaa
fldcw
mov
push
cwde
push
pop
mov
hlt
stos
jno
ret
push
in
sar
out
(bad)
(bad)
in
xor
scas
test
xchg
and
das
test
mov
shl
jno
xor
cld
adc
popa
sahf
xchg
and
dec
add
adc
sar
or
adc
arpl
lock
pop
(bad)
dec
jbe
call
push
mov
pop
mov
push
xchg
xor
cmps
cmps
mov
mov
xchg
add
and
push
mov
retf
shl
xchg
lea
jns
lds
add
xor
sub
fwait
jns
sahf
sub
rcl
test
jno
jmp
adc
push
int3
not
jl
mov
xor
cmp
mov
jecxz
xor
mov
nop
jle
out
or
mov
xor
lds
jno
hlt
je
scas
inc
shl
and
mov
add
in
dec
adc
add
adc
xchg
ja
mov
dec
add
adc
hlt
pushf
sub
mov
outs
repnz
mov
aad
ja
ss
xor
mov
test
adc
cmps
or
xchg
jne
aam
scas
mov
adc
push
in
cmp
and
or
and
jge
inc
cmps
ret
icebp
test
lock
mov
pusha
hlt
div
mov
push
add
xor
outs
xchg
movs
cmp
xchg
jo
js
xchg
pop
cld
and
ins
out
mov
popa
pop
jo
sbb
out
push
rcl
cld
pop
xchg
adc
jmp
sahf
cdq
or
or
fs
in
(bad)
idiv
in
xchg
pop
out
adc
gs
dec
pop
movs
adc
scas
out
inc
retf
pop
pop
mov
inc
inc
icebp
sbb
int3
xchg
mov
mov
out
push
add
and
mov
mov
rol
lock
movs
sub
mov
push
jnp
mov
push
xchg
pop
adc
out
nop
pop
lea
inc
aam
pop
shl
or
cmp
lods
enter
daa
data16
dec
xchg
mov
sbb
jb
add
and
or
sub
out
sbb
pop
adc
mov
dec
mov
inc
push
inc
cmp
sub
ficomp
std
imul
and
pop
aas
mov
add
call
or
mov
or
ds
sbb
movs
ins
imul
adc
sahf
mov
std
test
xor
std
test
data16
mov
stos
jno
xor
pop
rcr
adc
mov
and
push
mov
pop
xchg
sbb
pusha
add
xor
sar
(bad)
imul
adc
ds
mov
popw
int
ins
rcr
fcmovnbe
push
mov
jge
mov
cli
or
ret
(bad)
mov
mov
push
in
stc
and
pop
(bad)
mov
jnp
xchg
dec
mov
cmp
aad
push
ss
pop
xchg
mov
cwde
jge
mov
lea
mov
ret
popf
push
jno
cmp
jns
jmp
popa
push
pusha
and
push
dec
push
jmp
sub
repnz
loope
jae
fild
mov
rol
lea
adc
cld
lea
in
mov
movs
ror
or
sbb
xchg
test
dec
pop
dec
clc
lods
adc
js
pop
loope
outs
movs
and
mov
test
arpl
movs
add
jge
ins
(bad)
mov
inc
mov
push
sbb
pop
rol
lock
xchg
sbb
imul
mov
mov
and
xor
cmp
or
sbb
(bad)
lea
imul
stos
pop
in
jo
jmp
jl
test
jns
cmc
in
push
xchg
sbb
push
leave
xor
mov
cmp
scas
test
in
push
and
ficom
and
sub
mov
pusha
call
mov
add
xchg
movs
es
fucom
or
add
jl
adc
cs
and
cmps
xor
and
frstor
jns
or
xor
push
in
cmc
push
mov
and
frstor
jne
mov
mov
gs
cs
stc
add
cdq
adc
adc
dec
cmp
adc
adc
lods
sbb
icebp
scas
fstp
fdivr
js
in
in
pop
hlt
scas
in
mov
popf
xor
mov
dec
(bad)
cmp
test
pop
adc
add
aam
aas
jne
icebp
sbb
xchg
sub
inc
mov
mov
xor
fistp
mov
pop
movs
in
ja
sbb
cmp
pop
fldenv
les
mov
xor
mov
push
int
xor
cmp
mov
lods
and
sahf
out
sbb
jno
push
fmul
aad
sahf
in
fld
push
sar
rcl
xor
or
fdiv
push
bound
lods
enter
jecxz
pop
out
inc
inc
adc
mov
ret
cwde
(bad)
push
dec
jne
or
push
jge
pusha
mov
je
cmp
imul
pop
xchg
push
xchg
jmp
inc
cwde
test
loopne
xor
popf
or
cmp
xchg
adc
ds
cdq
mov
adc
cmp
dec
ror
hlt
inc
in
mov
test
xor
je
(bad)
shl
movs
(bad)
fidiv
xchg
adc
add
jg
icebp
adc
mov
sub
dec
sbb
loopne
adc
push
retf
push
sub
sbb
(bad)
inc
mov
aam
pop
cmp
lds
pop
into
xor
inc
xchg
sub
fcom
stos
hlt
test
push
in
inc
aad
mov
test
test
ret
movs
stc
aad
shl
inc
test
push
inc
fisttp
ss
pop
iret
push
and
mov
inc
popa
sbb
mov
clc
mov
jmp
mov
aad
xor
cwde
sbb
ins
mov
mov
and
mov
xor
ja
sub
push
xchg
loope
xor
mov
neg
or
pop
and
lock
sub
xchg
scas
adc
dec
in
fisttp
push
neg
add
and
lods
jle
sub
mov
pop
add
stos
sar
(bad)
iret
(bad)
les
xor
je
adc
push
adc
mov
je
xor
movs
mov
sbb
and
in
adc
xchg
ja
push
fistp
push
je
xchg
inc
stc
mov
aam
xchg
and
loope
not
add
adc
pop
icebp
jno
jge
test
jne
into
in
or
test
push
ins
cmp
push
jae
test
pusha
and
adc
mov
ja
int
out
xchg
jmp
les
xor
xchg
popf
mov
lods
hlt
mov
movs
in
and
add
inc
fld
push
stc
js
popa
sbb
push
jno
sbb
xor
xor
jp
in
cmps
popf
add
lds
xchg
sbb
mov
inc
ror
call
nop
and
jl
push
adc
mov
mov
ret
je
test
inc
and
push
popf
hlt
adc
les
dec
inc
icebp
rcl
inc
and
punpckhwd
mov
int3
mov
loopne
pusha
test
or
mov
test
inc
std
icebp
loop
xor
call
lods
and
jg
push
retf
dec
and
(bad)
movs
and
adc
sbb
push
dec
mov
push
inc
loope
aad
icebp
cdq
pop
and
xor
jge
imul
mov
dec
add
sbb
and
retf
xor
jno
cmp
mov
loope
test
pop
bound
les
mov
nop
les
lds
pop
int3
cld
fs
imul
(bad)
pop
lds
inc
cs
add
adc
mov
imul
pusha
cdq
pop
push
add
pop
jns
and
(bad)
mov
dec
ss
xchg
push
sub
push
add
in
pop
pop
loopne
and
dec
add
cmc
jno
movs
dec
or
dec
dec
push
(bad)
sub
inc
into
push
adc
loopne
mov
icebp
mov
jb
cmp
lods
sub
sbb
in
cmp
and
ins
jmp
pop
mov
xor
adc
pop
fnstsw
mov
inc
retf
push
fldcw
lods
stc
push
xchg
cs
push
sbb
rcl
xor
movs
push
mov
mov
or
pusha
add
retf
mov
into
test
push
dec
fcom
hlt
inc
into
mov
mov
inc
test
in
xor
sti
(bad)
add
mov
push
or
rcl
xlat
push
sti
jb
sbb
sti
cmp
cwde
or
inc
sar
lock
push
push
cmp
fstp
es
dec
adc
mov
mov
cld
dec
test
rcl
and
adc
cmps
jecxz
fst
mov
adc
lds
pop
fld
adc
je
jne
movs
dec
outs
and
pop
jns
fstp
std
adc
mov
xchg
pop
dec
in
mov
add
sub
and
mov
inc
movs
add
aaa
dec
int3
call
(bad)
lds
adc
xor
cmp
fnstenv
inc
add
loope
ins
and
mov
inc
hlt
dec
in
shr
sbb
je
mov
inc
push
lahf
std
xchg
gs
cmc
inc
cdq
pop
(bad)
jbe
rcl
test
push
cmps
outs
cli
out
inc
push
inc
shl
jp
jmp
jb
inc
lods
movs
mov
(bad)
mov
push
aad
xor
sbb
or
cwde
pushf
(bad)
popf
dec
jmp
in
imul
jo
xchg
lock
pushf
lock
aad
in
or
clc
pop
test
xchg
call
(bad)
jl
not
add
mov
jns
ret
sbb
aad
push
movs
enter
jmp
repz
in
imul
push
lock
adc
xor
enter
test
or
enter
adc
mov
pop
push
and
pop
lods
loope
and
or
in
jnp
jp
mov
add
lods
mov
imul
sub
pushf
mov
push
cmp
cdq
lods
xchg
sub
xchg
mov
in
push
ror
xor
mov
cmp
sbb
mov
out
shl
stos
not
shl
dec
lds
pop
pop
inc
(bad)
dec
xchg
ins
mov
and
inc
enter
dec
sbb
ins
daa
pop
mov
mov
inc
and
xchg
sahf
ss
test
dec
ret
pop
xor
pop
int
sti
pop
dec
lock
and
inc
xor
push
mov
mov
inc
push
arpl
dec
lock
dec
(bad)
aam
or
out
hlt
cli
jo
add
stos
adc
inc
test
and
dec
add
outs
push
test
jno
and
add
dec
sub
xchg
xchg
xchg
popa
or
push
frstor
push
(bad)
ds
xchg
(bad)
(bad)
bound
lock
jmp
dec
mov
fdiv
xchg
add
fisubr
cdq
mov
das
outs
jne
les
jp
fdivr
push
mov
test
adc
cmp
jmp
push
add
push
mov
pop
int3
lds
jns
pusha
shl
lahf
xchg
add
sbb
arpl
es
or
cmp
jbe
xor
cmp
inc
out
sti
pop
adc
aad
pushf
cdq
add
fild
sti
rcl
cmp
pop
or
and
inc
add
icebp
jne
xor
jl
mov
rcr
adc
push
hlt
mov
or
inc
mov
call
xchg
repz
jno
xor
and
xchg
sar
cmps
hlt
out
movs
pop
add
inc
rol
not
enter
pop
inc
push
and
inc
sar
inc
in
sahf
adc
fist
inc
pushf
xor
push
repz
bnd
addr16
lods
jne
push
fs
push
cmp
repnz
cmps
xchg
les
dec
aaa
rol
xor
pop
cld
not
xor
xor
xchg
xor
push
cmps
fs
xor
and
je
fwait
mov
xchg
inc
test
sbb
xor
add
xlat
sub
pop
aam
add
cmp
cmps
popa
mov
sbb
jns
inc
lds
add
add
stos
leave
movs
loop
dec
xchg
ins
xchg
xchg
cmc
inc
jecxz
dec
bnd
push
mov
dec
in
add
aad
aaa
adc
jmp
and
fcom
inc
iret
bound
adc
add
jmp
cmp
cmps
dec
lods
in
(bad)
cmps
loope
jbe
loopne
xor
and
xchg
in
icebp
gs
mov
jmp
sti
adc
dec
leave
aaa
in
xchg
loop
inc
in
mov
add
(bad)
(bad)
outs
shl
cmp
test
pop
jne
mov
repz
xor
rol
shl
not
sub
repnz
(bad)
sbb
and
cld
cmp
ins
jns
int3
sub
pusha
xor
(bad)
mov
imul
mov
icebp
inc
in
gs
stc
jno
retf
aam
fidiv
arpl
out
xor
int3
inc
dec
push
mov
adc
cmc
jno
test
or
fld
adc
push
ins
and
rcl
addr16
lock
pop
cli
mov
sahf
loopne
loope
dec
aam
ss
je
cmp
rcl
dec
scas
popf
add
out
and
(bad)
shl
ficom
sbb
lods
(bad)
stc
adc
shr
jns
inc
mov
mov
lods
in
or
test
mov
or
out
xor
or
into
xchg
add
pop
push
jmp
ins
mov
mov
cmp
pop
push
dec
movs
aas
pusha
inc
hlt
mov
push
push
push
in
ss
xchg
mov
pop
loopne
cmp
mov
push
sar
push
xchg
or
icebp
scas
cmps
mov
mov
pop
(bad)
movs
mov
inc
sar
imul
dec
in
arpl
xor
mov
xchg
pop
pop
or
sbb
pop
add
inc
xchg
pop
in
popf
inc
dec
nop
dec
dec
shl
jo
clc
in
fadd
or
mov
in
fwait
test
shl
and
inc
(bad)
adc
retf
pop
xor
fwait
adc
sbb
movs
arpl
ss
cmp
enter
(bad)
push
jg
loop
mov
leave
xor
or
xor
xor
jne
xor
xlat
jne
bound
inc
js
ins
pop
sub
add
pop
shl
rcl
jae
lods
cmp
jo
imul
mov
xchg
arpl
mov
inc
cs
cmp
les
ins
enter
fdivr
push
shl
push
add
fdivr
call
sub
bound
scas
fcmovnb
loopne
mov
jne
sub
cmps
gs
push
pop
outs
jmp
mov
scas
sub
and
jnp
adc
pop
(bad)
sub
jg
scas
movs
and
push
arpl
icebp
psubw
xor
jne
cdq
in
icebp
jno
sub
xor
rcr
gs
sbb
dec
ins
nop
xchg
jmp
aam
jne
mov
mov
aad
mov
add
xor
sbb
add
std
icebp
push
retf
adc
sub
dec
mov
and
sbb
(bad)
mov
xchg
or
inc
leave
inc
xlat
cdq
out
inc
cmc
mov
sbb
push
std
push
shl
jne
loopne
sub
in
(bad)
retf
pop
leave
outs
sbb
test
shl
ret
mov
xrelease
sbb
idiv
pop
in
out
jne
push
mul
aam
ss
xor
sbb
pop
movs
add
les
jno
lea
dec
and
inc
add
jmp
adc
sti
jne
or
xchg
xor
adc
repnz
shl
mov
leave
jno
imul
add
mov
jmp
add
(bad)
xchg
xor
cmp
fimul
sti
jle
adc
fimul
not
add
icebp
xchg
mov
ret
aaa
xlat
mov
(bad)
aad
call
movs
sub
fs
and
mov
addr16
loopne
adc
shl
mov
out
dec
test
sub
jp
mov
cld
out
fs
(bad)
ja
mov
cli
jno
jno
fs
cdq
out
and
pushf
mov
fidivr
sub
fdiv
mov
mov
pusha
lahf
inc
dec
call
mov
sbb
call
jp
and
push
clc
(bad)
push
pop
jne
sahf
jmp
cmp
or
cmp
add
retf
imul
push
cmp
popa
gs
push
ds
lahf
pop
jmp
cdq
cli
xor
lods
cmc
mov
sbb
cs
fs
retf
inc
outs
lock
aad
xchg
jle
in
jg
mov
dec
mov
aas
mov
pop
xchg
nop
xor
or
test
mov
mov
sbb
adc
mov
push
pushf
mov
add
mov
stc
repz
test
add
sub
mov
mov
push
cmp
retf
pusha
in
mov
xor
dec
jl
sub
mov
mov
mov
test
call
sbb
int
fs
xor
sahf
ret
pusha
out
test
rol
dec
sahf
add
fcomp
push
leave
in
adc
sbb
cmp
inc
loopne
lahf
sbb
sbb
adc
inc
sub
adc
enter
rcl
movs
fsubrp
jns
sub
jno
sbb
inc
sti
dec
sbb
cmps
dec
idiv
popa
mov
and
lods
int3
push
imul
pop
sbb
je
es
pop
xchg
shl
outs
sub
fsub
ds
push
jecxz
xchg
mov
aam
ret
push
mov
xor
jne
push
jae
mov
movs
pop
sahf
movs
jb
adc
lods
scas
push
and
ja
inc
xchg
adc
adc
xchg
adc
mov
(bad)
ret
xchg
mov
jo
gs
mov
lahf
adc
xchg
xchg
pusha
pusha
push
jae
loop
inc
and
cmp
add
call
lods
sbb
dec
lock
les
xor
and
in
adc
mov
mov
shr
inc
fadd
cmp
call
mov
idiv
icebp
push
ds
dec
adc
shl
inc
outs
or
or
mov
test
ss
xor
gs
adc
and
lock
xchg
ds
addr16
sbb
outs
or
sti
test
adc
sub
jae
xor
or
nop
mov
sub
lahf
jnp
cmps
pusha
or
mov
out
cmc
mov
lea
ds
pop
test
aad
dec
adc
cmp
xchg
test
(bad)
dec
mov
cmc
sub
pop
xor
rcl
popf
or
cli
push
and
jae
push
rcl
jge
pushf
sbb
cld
gs
sbb
cli
pop
gs
pop
push
mov
push
nop
fs
sbb
push
leave
popa
and
sti
sub
icebp
and
sbb
push
outs
inc
jne
mov
mov
xor
cwde
cli
pop
pop
pop
xchg
jmp
outs
push
sbb
sar
push
shl
in
mov
stos
xchg
outs
jbe
push
(bad)
out
dec
add
push
movs
xor
stos
(bad)
shl
jb
adc
xchg
push
jp
xor
shr
loop
mov
ret
popa
xor
nop
arpl
xor
pop
push
sub
sub
jge
sub
popa
inc
add
jb
inc
xchg
add
cmp
add
and
or
cmps
fdivrp
and
adc
enter
dec
ins
rcl
in
inc
test
test
cmp
add
test
add
and
add
or
and
test
nop
les
in
add
leave
sub
aas
add
xor
push
inc
dec
loopne
pushf
add
fmul
inc
push
pusha
leave
mov
ins
loopne
in
adc
ret
popf
adc
sub
add
or
in
lods
test
lea
and
inc
loopne
aas
sbb
lahf
lea
ss
dec
or
aas
in
adc
stos
push
mov
and
xlat
pop
mov
inc
test
jmp
and
rol
jp
test
or
xchg
add
push
xchg
jp
xor
mov
xchg
adc
mov
adc
rol
test
xchg
(bad)
enter
inc
inc
mov
inc
lds
push
int3
cmp
test
mov
or
add
mov
mov
jg
loop
add
mov
dec
test
scas
call
pop
outs
das
xor
and
jle
out
and
and
mov
add
dec
pmulhuw
and
inc
pop
mov
movs
mov
cmc
movs
bound
xchg
mov
mov
out
movs
xchg
inc
fild
inc
jg
inc
mov
and
fnstsw
cmps
out
add
jecxz
pop
loopne
push
imul
ror
scas
inc
pop
cmps
adc
sar
dec
lds
std
xor
cs
mov
daa
dec
dec
les
pop
int3
shr
mov
mov
adc
lods
ret
pmulhuw
retw
jge
out
scas
dec
mov
scas
inc
dec
jae
or
and
or
mov
retw
xor
mov
int
mov
mov
push
and
es
retf
scas
das
inc
call
das
aas
push
push
mov
add
add
jmp
mov
pop
mov
and
mov
or
mov
cmps
data16
ss
frstor
(bad)
mov
or
inc
and
add
scas
jns
and
push
dec
dec
das
(bad)
les
out
and
and
inc
pop
fcmovu
mov
mov
push
add
adc
call
sbb
popa
or
leave
or
gs
test
sub
jp
xor
je
add
pop
pop
inc
test
jnp
and
dec
dec
sbb
fadd
popf
dec
dec
sbb
inc
in
inc
add
retf
lds
popa
fbld
loope
or
add
ret
test
gs
dec
test
xor
ins
and
mov
test
fld
xchg
dec
cmovge
ret
mov
adc
in
inc
leave
pop
jge
sbb
fldln2
push
jg
inc
dec
movs
(bad)
test
sub
popa
cmps
dec
or
data16
ja
loope
test
pop
inc
sub
xchg
loope
adc
imul
inc
and
push
popa
lea
mov
adc
fldenv
or
jnp
rol
fldenv
inc
retf
xor
cdq
das
mov
cdq
mov
mov
pop
xor
sahf
mov
sub
add
xchg
sbb
retf
cmps
or
mov
jne
mov
xor
jle
pop
mov
aam
or
or
fcom
leave
clc
cdq
adc
pop
int
push
cdq
leave
add
loopne
test
test
sub
xchg
sti
mov
cs
adc
push
jmp
pop
(bad)
xchg
and
call
sbb
xlat
out
xchg
andps
dec
fsub
(bad)
push
inc
dec
pop
dec
sahf
add
inc
mov
jmp
stos
out
push
mov
xchg
dec
push
test
mov
imul
push
js
dec
sbb
enter
inc
stos
jecxz
mov
lods
xlat
leave
xchg
mov
stc
mul
dec
jg
or
pop
inc
mov
pop
add
push
fisub
pop
adc
fild
mov
(bad)
pop
scas
test
mov
aaa
sbb
out
nop
mov
scas
ror
outs
imul
push
add
imul
mov
or
outs
push
add
or
fistp
push
dec
and
push
mov
int
sbb
lods
repz
xchg
pop
xchg
stos
fisubr
and
sub
fld
aam
shr
out
leave
retf
out
push
imul
xchg
mov
fst
jg
mov
neg
outs
leave
adc
push
cmp
mov
bound
std
je
stc
sahf
aaa
jge
popa
loopne
xor
dec
jmp
nop
popa
aas
fidiv
arpl
std
sub
sub
pop
lahf
shl
mov
hlt
jmp
fsubp
gs
xchg
gs
xchg
icebp
jmp
nop
popa
mov
loop
aas
ja
cmp
and
retf
jb
jle
add
aaa
test
aad
je
sahf
cmp
imul
je
and
aas
jge
movs
add
pop
ds
pushf
dec
in
rol
jge
fs
shr
in
in
fisub
bound
or
nop
push
nop
addr16
jns
mov
(bad)
xor
xchg
hlt
stos
ror
inc
aas
popa
cmc
mov
nop
ins
jg
je
sahf
sbb
and
inc
cmc
jg
and
xor
nop
sub
int
mov
lock
mov
hlt
das
cmc
xor
sub
nop
sub
test
dec
hlt
and
sub
test
popa
retf
jmp
je
cmp
mov
rol
sbb
in
mov
push
mov
jo
jns
sub
mov
sub
jns
rol
popa
mov
mov
mov
jns
inc
fs
in
(bad)
in
mov
fimul
mov
mov
jl
mov
and
add
nop
sub
mov
(bad)
gs
jle
loop
inc
jge
xchg
pop
cmp
icebp
mov
fs
cmp
mov
nop
lods
push
js
(bad)
aad
xor
pop
enter
test
cmp
lock
shr
fmulp
cld
add
bound
in
in
pop
mov
or
xchg
sbb
adc
pusha
popf
test
sbb
cmp
or
adc
lock
mov
stc
adc
or
or
or
pusha
sbb
or
xor
sbb
or
test
femms
hlt
sti
adc
push
xchg
not
dec
pop
pusha
and
push
aas
call
inc
pusha
xor
pop
cmp
inc
fstp
cmovp
je
in
dec
shr
push
pop
sar
cmp
pop
sbb
cmp
daa
push
jp
pusha
(bad)
enter
int
outs
pop
inc
in
push
dec
data16
pop
rcr
pop
add
push
pop
inc
in
jle
outs
push
pop
inc
in
or
sbb
jnp
fwait
pop
pusha
pop
inc
(bad)
rcr
dec
add
dec
adc
repz
mov
pop
and
(bad)
aad
out
shl
rol
inc
pop
lahf
es
jo
nop
jge
int
mov
ss
ins
and
movs
and
inc
ror
shr
xchg
push
xor
ror
mov
push
movs
add
adc
mov
add
in
repnz
cmps
lea
mov
shl
out
sub
or
lock
dec
je
add
stos
in
xor
in
add
sub
ror
dec
arpl
outs
stos
movs
push
test
and
repz
xchg
rol
or
jecxz
nop
rol
mov
jb
nop
int
movs
and
ins
lds
and
and
push
fs
lods
cld
add
and
inc
loope
and
mov
and
dec
gs
out
add
scas
shl
mov
and
nop
add
outs
shl
mov
shr
int
int
sbb
bound
inc
and
sbb
dec
or
adc
or
pop
xor
mov
mov
push
frstor
and
sub
rol
pop
ja
mov
xor
push
mov
push
(bad)
fistp
scas
pop
gs
outs
xor
fs
in
movs
or
outs
test
inc
je
in
and
imul
in
and
repz
and
les
movs
lods
call
movs
add
and
ret
movs
pusha
int
shr
and
sbb
cmps
and
cdq
xor
cmp
add
movs
stos
mov
call
and
mov
imul
push
jns
jge
stc
add
adc
jge
sbb
test
jae
mov
or
adc
pushf
cmp
push
cmp
xor
lahf
jno
jne
xchg
push
sbb
pushf
(bad)
adc
sbb
js
ins
xchg
cmp
xchg
push
fadd
xchg
aam
adc
sbb
scas
push
cmps
mov
jg
cmp
push
or
push
icebp
inc
clc
mov
aad
jne
sbb
fadd
nop
sbb
adc
adc
push
cmp
fst
in
fnstenv
pop
rcl
jbe
sbb
ficom
adc
rcl
xchg
sar
rcr
mov
pop
imul
xor
mov
pop
add
mov
xchg
clc
and
cwde
cmp
add
(bad)
sbb
cmp
cmp
mov
std
aam
fistp
mov
mov
push
mov
sbb
shl
push
imul
leave
sbb
test
xchg
mov
test
jecxz
jecxz
ret
dec
jae
movs
mov
test
outs
pusha
xchg
pop
push
jmp
xor
scas
mov
adc
adc
mov
test
inc
mov
test
push
jge
sub
and
mov
push
or
mov
push
jge
sbb
inc
fistp
pop
fcomp
cmp
xor
dec
pop
add
sbb
pop
pop
xor
aam
adc
fnstenv
adc
xchg
std
jns
xchg
push
jne
push
sub
cmp
inc
adc
fdiv
rcl
popa
retf
inc
xchg
and
dec
push
fcmovnb
xchg
and
and
cdq
ret
mov
add
repnz
les
retf
cmp
mov
mov
adc
cmp
(bad)
adc
adc
inc
out
adc
cmp
push
push
pop
jge
xlat
xchg
aad
hlt
inc
pop
rcl
(bad)
adc
lock
adc
sub
sbb
jge
ja
mov
push
shl
ins
adc
sbb
cdq
jb
out
push
mov
and
cwde
shl
fldl2t
idiv
cmp
push
not
fcom
sub
fsubr
ret
aad
ss
or
adc
lahf
push
cmp
mov
mov
fcomp
mov
shl
jge
sub
jge
mov
in
stc
pop
fidivr
sbb
shl
jb
adc
(bad)
cmc
mov
adc
addr16
sbb
cli
fidivr
lahf
mov
sbb
daa
xor
std
and
rcr
adc
add
div
rcr
xchg
push
xor
popf
pop
pop
jnp
cs
push
aad
sub
inc
push
jge
jne
cdq
aad
(bad)
or
stc
adc
push
mov
in
mov
push
sub
scas
xor
adc
jae
xchg
jge
jns
int
(bad)
mov
clc
sub
mov
loopne
push
into
imul
lea
cmp
fsubr
not
xchg
inc
mov
inc
or
push
rcl
sub
(bad)
mov
sar
cmp
jae
and
pusha
push
mov
outs
push
add
stos
in
push
enter
dec
(bad)
cmp
gs
aaa
out
pusha
add
mov
clc
shr
call
call
mov
push
fisubr
cmps
push
or
adc
mov
or
dec
sbb
dec
mov
gs
and
jle
into
retw
cmp
jmp
mov
pusha
call
in
cmp
add
mov
nop
in
mov
dec
inc
pop
clc
in
ins
pusha
sbb
pop
inc
inc
sbb
loope
pop
xor
ffreep
inc
(bad)
push
lahf
push
inc
sbb
movs
push
adc
inc
add
test
loopne
adc
sub
lock
add
add
loopne
adc
sub
add
sub
mov
scas
arpl
sbb
inc
pop
lods
movs
jb
and
dec
add
add
xor
movs
add
mov
inc
push
es
outs
jbe
movs
icebp
inc
mov
inc
shl
loopne
cwde
movs
in
shl
in
xchg
loope
pusha
xchg
movs
in
movs
mov
push
mov
dec
ror
and
mov
jo
inc
stc
jo
jmp
clc
in
add
add
mov
dec
jmp
jno
bound
mov
fsubr
cmp
add
mov
bound
add
mov
lock
jl
stc
nop
in
sub
cmp
pop
outs
mov
mov
rcl
fadd
xchg
push
popa
ja
imul
pop
in
repz
mov
xor
clc
xor
mov
aad
fiadd
and
add
xchg
xchg
xlat
push
adc
ret
dec
jno
inc
ret
pop
je
sub
clc
(bad)
iret
cld
(bad)
arpl
in
sub
pushw
cmp
mov
push
mov
push
retf
mov
mov
mov
mov
mov
neg
mov
repnz
loop
aam
les
or
sub
inc
dec
adc
jl
inc
add
pusha
jbe
sub
push
daa
lods
in
push
xchg
retf
loope
fwait
jmp
xchg
xor
mov
sub
inc
leave
or
addr16
ret
test
mov
daa
shr
imul
fdiv
pusha
pop
loopne
and
or
clc
js
inc
jecxz
in
fisttp
dec
(bad)
aam
add
jmp
xchg
icebp
mov
enter
sar
push
adc
adc
adc
pop
rcl
xor
push
adc
xchg
mov
mov
mov
mov
scas
repz
xchg
scas
mov
lea
mov
mov
xor
rcl
xor
adc
xor
push
push
xor
mov
in
pushf
fimul
xlat
sahf
mov
adc
sahf
mov
lahf
ficomp
adc
std
mov
mov
repz
mov
stc
inc
iret
retf
jmp
sahf
sti
cdq
enter
mov
fidivr
cdq
aad
mov
sub
out
enter
enter
aad
sar
ret
out
(bad)
sar
out
mov
xor
std
aad
mov
out
into
jl
call
fild
leave
hlt
retf
scas
mov
xchg
and
nop
test
mov
dec
adc
mov
test
and
xor
arpl
cmps
shl
jns
pop
xor
add
imul
push
fwait
push
dec
mov
loope
push
fadd
cmp
bound
mov
and
shl
repz
pusha
icebp
xor
leave
xor
xor
cmp
inc
xchg
test
icebp
mov
add
sub
psraw
test
jbe
ja
imul
push
imul
test
add
test
lock
inc
mov
add
mov
aam
inc
jmp
rol
add
mov
loope
std
xor
shr
xor
xchg
test
out
pusha
cld
sub
shr
inc
lea
push
or
bound
add
add
jne
movs
aaa
repnz
xchg
mov
mov
test
retf
div
jle
dec
pop
sub
cmp
cmp
ja
mov
je
inc
mov
test
pusha
test
test
add
inc
test
lods
cdq
sbb
imul
pop
xchg
mov
or
jnp
movs
fdiv
push
adc
jno
mov
in
cmp
mov
mov
loopne
repnz
jb
outs
mov
repnz
and
push
mov
fadd
cmp
bound
in
scas
cmp
ins
aam
cmps
fs
cmp
xor
fs
stc
push
aam
add
push
add
stc
xor
jp
aam
mov
mov
(bad)
loopne
addr16
inc
push
xchg
das
mov
mov
leave
je
(bad)
dec
sub
jns
lea
push
clc
add
lock
or
and
push
adc
int3
sub
push
cmps
and
in
xchg
add
scas
push
jo
mov
into
dec
and
pop
sub
add
pop
inc
out
inc
push
fs
and
mov
cmc
mov
jg
data16
xchg
test
push
adc
dec
dec
mov
mov
ins
cmp
push
inc
clc
cmp
or
arpl
mov
mov
sub
pop
add
enter
js
jg
dec
popa
in
xchg
xchg
mov
and
dec
pusha
inc
pop
out
mov
clc
mov
bound
call
stos
fiadd
cmp
data16
gs
jmp
add
cmp
dec
dec
mov
mov
ins
push
and
pop
push
call
mov
and
inc
aaa
ja
in
jmp
jl
cmp
dec
push
cmp
stos
xlat
cdq
in
lods
jbe
sbb
push
and
inc
fs
lods
sar
arpl
ins
add
std
lods
jmp
ins
pop
push
jl
jnp
inc
adc
(bad)
fnstsw
inc
add
inc
ins
sbb
mov
stos
sti
jns
pop
push
sbb
lods
retf
mov
in
dec
pop
cmp
jbe
xor
cli
mov
js
and
push
inc
jg
or
sbb
mov
fsubr
cwde
xlat
movs
xchg
or
sub
sbb
stos
test
das
or
sub
call
call
xor
jmp
stos
mov
in
mov
aad
ds
sbb
lods
mov
fmul
and
add
mov
lahf
mov
and
gs
mov
fisub
je
das
pop
sbb
call
(bad)
popf
icebp
aam
or
cmp
neg
mov
mov
cmp
sub
cld
lods
int3
lahf
(bad)
scas
mov
adc
dec
iret
jmp
pushf
mov
(bad)
pop
add
add
mov
lahf
(bad)
(bad)
div
push
inc
adc
and
(bad)
cli
pushf
mov
lods
mov
ss
and
out
sub
fimul
sbb
and
and
ficom
hlt
fisubr
sub
lods
fwait
(bad)
retf
cdq
pushf
ret
sub
ins
or
mov
scas
(bad)
aam
adc
fcmovnu
scas
mov
shr
gs
cmp
push
pop
call
fscale
mov
xor
icebp
out
mov
rcr
sbb
pop
xor
(bad)
mov
in
cmps
in
mov
cmp
and
dec
jmp
lea
mov
jae
add
cmp
cli
mov
xchg
xor
cld
dec
sahf
test
or
jae
jge
test
sahf
add
sbb
add
lods
inc
call
cdq
sub
push
rcr
cmp
xor
dec
mov
fild
lock
cmp
sahf
jo
aam
fmul
sbb
mov
lea
xor
mov
in
dec
mov
jne
dec
cld
cmp
adc
pushf
pop
les
jnp
sub
mov
lea
mov
xchg
push
mov
cwde
pop
fisubr
jns
das
int3
or
dec
jge
out
pop
xchg
lods
dec
cs
pop
retf
lods
call
dec
xchg
or
pusha
fstp
pop
cli
pop
int3
(bad)
jmp
sub
sbb
lock
stc
dec
fidivr
mov
aam
mov
or
mov
mov
jne
les
ret
sub
pop
scas
dec
into
stos
outs
rcr
cwde
ss
xor
pop
mov
sbb
jnp
pop
fidiv
aad
mov
iret
xchg
cmp
ss
add
mov
mov
xlat
jne
sbb
jmp
jo
adc
dec
retf
js
call
retf
xor
jb
mov
shr
cdq
loopne
test
lahf
and
arpl
ficom
(bad)
dec
cli
or
mov
mov
(bad)
push
out
jge
or
test
adc
call
les
movs
retf
dec
into
push
sbb
push
fcomp
stos
adc
xor
fimul
xchg
pop
sbb
push
xchg
xor
or
jle
inc
fsub
out
les
fstp
sbb
pop
fwait
test
ret
aaa
out
inc
out
xor
dec
icebp
movs
or
cmp
pop
mov
enter
sbb
loopne
fwait
and
rcr
aad
cmc
adc
imul
cmp
mov
xor
mov
fbld
push
scas
add
jecxz
mov
rcr
and
add
sub
and
loope
retf
sub
test
in
pop
mov
mov
fucomp
dec
cmp
mov
xchg
fwait
mov
(bad)
xchg
fild
aaa
lods
(bad)
(bad)
xchg
xchg
mov
icebp
add
push
stc
in
mov
mov
adc
adc
jmp
mov
mov
sbb
inc
out
add
hlt
adc
mov
mov
int
mov
bound
sahf
retf
xor
mov
xchg
icebp
scas
cdq
jl
sbb
mov
popf
fldenv
sub
lahf
nop
mov
lods
mov
test
pop
and
mov
retf
test
push
ds
and
loop
mov
xchg
mov
pop
inc
jns
mov
mov
mov
bound
or
add
(bad)
xchg
xchg
(bad)
(bad)
(bad)
ret
mov
sbb
jge
fcom
(bad)
popf
into
mov
mov
sub
mov
fwait
jmp
(bad)
mov
movs
enter
das
fwait
lea
scas
clc
cwde
rol
push
adc
pop
pop
add
or
jne
lahf
call
push
dec
pop
inc
es
lahf
(bad)
scas
pop
inc
es
pop
daa
pop
or
jns
xchg
pop
bound
pop
ss
and
fld
sbb
dec
jl
push
gs
cdq
cmp
addr16
or
pop
jnp
cmps
scas
mov
jb
aas
and
adc
dec
lahf
mov
popa
push
inc
xor
dec
pop
inc
sbb
outs
sbb
jg
add
das
jg
dec
dec
bound
je
add
push
mov
dec
pusha
addr16
cs
sbb
jp
call
sbb
sbb
pop
jp
mov
push
inc
and
dec
add
dec
call
dec
or
and
pop
test
aam
imul
inc
adc
pop
sbb
pop
mov
push
dec
push
aas
sbb
push
cmp
xchg
cdq
jo
pop
jge
pop
add
js
dec
inc
push
mov
mov
pop
wbinvd
pop
outs
pop
popa
adc
aam
cwde
pusha
push
push
outs
pop
sbb
inc
pop
pop
ins
sbb
jl
pop
arpl
sbb
adc
xor
popf
push
idiv
mov
mov
stc
push
cmc
cmp
push
retf
jge
sbb
cmp
xor
dec
pop
sbb
mov
enter
enter
std
sbb
or
xchg
iret
or
sub
(bad)
mov
sbb
into
call
or
jo
cmp
mov
cmp
idiv
outs
fwait
sbb
stos
jmp
iret
pop
out
or
out
gs
fldl2e
leave
mov
pop
xor
stos
sub
(bad)
adc
sti
mov
jge
sbb
daa
std
jmp
lods
xor
jnp
(bad)
imul
imul
mov
fnstcw
outs
or
push
push
scas
or
xor
(bad)
adc
or
pop
mov
mov
sbb
je
cmp
sub
push
scas
sub
xor
push
in
add
or
or
retf
xor
cmp
or
jno
pusha
les
sbb
lahf
retf
imul
and
dec
fld
pop
push
sahf
fdivr
jns
cmp
push
mov
xor
mov
push
sti
movntq
and
and
adc
inc
add
mov
outs
fld
push
ret
push
fbld
ficomp
add
pop
in
mov
sbb
dec
in
popa
scas
and
pusha
ficomp
addr16
(bad)
jecxz
xchg
sbb
inc
sbb
lds
imul
aam
xchg
pop
fiadd
mov
pusha
cmp
ret
jg
inc
loop
neg
out
aas
mov
pusha
les
cmp
cmp
pop
cmp
sbb
jmp
sbb
and
fwait
scas
inc
ret
ins
loop
rol
dec
ret
imul
out
out
pop
mov
aam
fdivr
pop
mov
call
xor
pop
mov
xor
mov
fs
paddusw
mov
push
cmc
push
(bad)
je
sub
sub
out
addr16
pop
mov
aam
rcr
in
std
outs
mov
inc
mov
hlt
addr16
mov
aas
loopne
mov
ds
pop
xchg
add
bound
adc
ret
add
dec
mov
cli
das
out
aam
xor
mov
cmp
and
push
into
dec
iret
pop
sbb
mov
das
je
push
sbb
sub
push
inc
jle
jae
jp
sub
sub
ins
xor
push
push
daa
push
dec
sub
and
sub
dec
fnstcw
cmp
ins
es
sbb
pop
pop
es
adc
jl
pop
sub
ja
pop
push
push
or
jns
pop
bound
adc
pop
popf
dec
sbb
inc
emms
sub
sub
dec
ss
inc
push
cmp
pop
jge
adc
push
xchg
xor
inc
push
jge
jnp
cmp
sub
ins
push
cmp
sbb
ins
aaa
sub
(bad)
imul
or
and
ins
adc
cmp
push
dec
jns
jnp
cmp
outs
dec
cmp
jae
jno
outs
or
pop
es
xor
dec
bound
jnp
jp
ins
xor
pop
jae
pop
je
xor
or
push
dec
sub
push
sub
push
or
es
adc
jnp
outs
dec
and
cmp
adc
adc
dec
ins
cmp
xchg
cmp
push
pop
outs
cmp
sub
imul
dec
add
inc
sub
jge
jmp
sub
outs
or
ds
int
inc
out
loop
in
retf
mov
call
in
retf
out
xchg
retf
sti
(bad)
shl
pushf
rcr
jmp
(bad)
(bad)
fmul
lock
mov
out
jmp
mov
retf
mov
enter
jmp
stc
fcmovu
movs
mov
(bad)
(bad)
lock
icebp
loopne
(bad)
(bad)
fcmovu
(bad)
mov
int3
lock
std
ror
mov
test
div
xchg
pushf
into
fdivr
std
clc
(bad)
mov
clc
clc
into
mov
in
jecxz
mov
hlt
mov
leave
retf
in
mov
(bad)
stos
fucomip
into
(bad)
movs
int3
(bad)
(bad)
fdivr
into
mov
xchg
xlat
loope
out
(bad)
out
leave
std
ret
or
in
fcomp
xchg
ret
icebp
fcomp
xchg
stc
loop
cli
enter
cld
loope
mov
(bad)
jmp
mov
shl
ret
jecxz
icebp
leave
loope
(bad)
pushf
(bad)
out
fld
(bad)
(bad)
(bad)
pushf
in
shr
jmp
fcomi
fmul
mov
stc
leave
mov
jmp
ret
aad
sar
clc
movs
jmp
xlat
cld
out
in
mov
xlat
cld
xlat
inc
(bad)
iret
mov
enter
adc
ret
pushf
std
jmp
into
sbb
push
stos
jo
adc
sar
adc
push
pop
call
add
test
xchg
adc
fwait
inc
mov
jb
call
inc
jmp
push
add
mov
dec
aam
sahf
ins
aad
mov
push
pop
sti
push
xchg
inc
jmp
inc
mov
pusha
mov
js
push
mov
adc
pop
xchg
pop
test
pop
mov
js
jmp
data16
sbb
push
push
in
pop
in
pop
xchg
pop
mov
in
push
pop
mov
push
mov
mov
sbb
mov
adc
push
out
sbb
jo
xchg
dec
lods
jnp
adc
gs
dec
pushf
or
add
nop
or
test
test
jo
inc
test
inc
loope
(bad)
ins
mov
out
dec
mov
dec
mov
je
adc
scas
pop
sbb
pop
dec
xor
mov
jno
cmp
ds
cdq
sbb
fstp
clc
push
cs
sar
fisub
je
sub
in
jecxz
shl
jnp
push
fimul
sub
inc
nop
(bad)
ficomp
(bad)
(bad)
ror
loope
cs
ss
push
loope
mov
mov
out
mov
cmp
pop
pop
sub
cli
lods
or
pop
(bad)
cli
in
call
push
pop
dec
mov
mov
test
push
in
repz
imul
pop
mov
mov
dec
add
inc
rcl
dec
stc
outs
icebp
je
sub
sbb
sbb
cmc
mov
das
pop
dec
mov
or
jb
sbb
sbb
push
fcomp
iret
jmp
pushf
pop
ret
sub
or
in
dec
test
or
jmp
pop
movs
sub
ds
push
cmp
pop
push
xchg
xchg
fwait
call
sahf
sbb
out
(bad)
imul
icebp
into
(bad)
sbb
in
lods
rcr
sub
stos
cmps
fbstp
aas
popf
mov
cmp
sti
cmp
(bad)
rol
mov
xchg
mov
imul
iret
stos
stos
cmps
scas
dec
call
mov
xchg
mov
call
imul
pop
(bad)
int3
jg
loop
pop
(bad)
cld
or
mov
std
mov
stos
jl
or
fild
or
mov
jge
popf
push
clc
sub
not
cmp
mov
leave
psubsb
push
das
jmp
xchg
mov
lods
out
frstpm(287
fwait
mov
(bad)
jmp
stos
out
sbb
mov
je
jge
mov
jmp
(bad)
mov
fsubr
mov
fist
sub
gs
(bad)
mov
or
lods
push
or
pop
js
jnp
fwait
sub
lea
pop
jmp
outs
jmp
lods
sub
mov
push
mov
cmp
aad
mov
or
lea
push
sbb
cli
adc
pop
(bad)
dec
jns
cdq
iret
fild
(bad)
mov
fmul
dec
das
jp
pop
mov
dec
or
pushf
add
pop
jge
sbb
pop
clc
push
or
pop
fsubr
std
sub
clc
pop
cmp
adc
imul
dec
jmp
loop
cmp
cli
ja
pop
sub
sbb
imul
dec
push
or
mov
pop
pop
sahf
loop
dec
mov
sub
jbe
xor
cmp
push
movs
mov
sahf
pop
daa
add
dec
(bad)
jg
stc
lahf
push
push
adc
imul
or
dec
in
or
mov
pop
xchg
out
push
mov
adc
sub
cs
dec
mov
pop
les
ins
add
aas
and
outs
dec
jns
sti
lods
push
push
sub
ffreep
dec
dec
retf
mov
dec
ins
sbb
dec
mov
lods
les
pushf
cmp
je
mov
sub
push
mov
mov
jae
cmp
clc
pushf
inc
ins
and
call
je
cmp
inc
out
hlt
xchg
pop
adc
imul
dec
push
push
inc
jp
mov
push
xor
xchg
sbb
mov
sub
jb
sbb
dec
jo
ins
dec
jmp
aam
xor
jne
es
ret
cmc
dec
jb
and
cmp
das
xchg
loopne
mov
movs
adc
sahf
dec
add
and
pusha
mov
(bad)
and
or
in
test
pop
ins
push
mov
imul
mov
xor
daa
push
scas
cmp
ins
(bad)
jp
sbb
add
sub
out
ds
popf
lods
cmc
mov
leave
jmp
lods
sbb
sub
xlat
pop
std
and
sbb
inc
call
xlat
in
call
clc
(bad)
popf
or
clc
enter
adc
call
push
pop
(bad)
stc
pop
int
(bad)
clc
stos
sub
mov
xchg
leave
or
sub
test
xchg
pop
stos
je
lea
cli
sub
(bad)
into
cmp
mov
fstp
mov
imul
and
loope
fwait
sbb
pop
mov
mov
dec
aad
or
and
cld
std
inc
loopne
das
frstor
pop
pop
fwait
fwait
ja
arpl
sub
lods
inc
lock
cli
cld
outs
stos
retf
imul
ds
sti
mov
pop
iret
and
cdq
mov
push
mov
ins
lea
(bad)
jl
ficomp
xchg
jge
jge
dec
fimul
dec
cmp
xchg
adc
not
sbb
ins
ror
(bad)
and
dec
cmp
dec
sahf
mov
cmp
jnp
mov
mov
push
leave
push
or
iret
ds
outs
call
std
dec
mov
dec
mov
retf
out
mov
xchg
outs
mov
push
fidiv
xchg
cwde
mov
fs
inc
cmp
retf
sbb
push
js
dec
(bad)
rcr
(bad)
and
pop
dec
sub
jmp
sbb
cmp
mov
mov
cli
outs
jp
jmp
adc
ss
cmp
retf
mov
mov
pushf
stc
stos
jmp
or
jge
jnp
sbb
lock
mov
mov
xchg
adc
fwait
dec
icebp
bound
xchg
stc
int3
(bad)
pop
xor
mov
mov
dec
(bad)
dec
outs
pavgb
dec
mov
dec
add
fisttp
dec
fnstcw
addr16
idiv
mov
daa
clc
sub
lock
mov
add
bswap
or
sbb
pushf
icebp
scas
loope
dec
sbb
inc
imul
(bad)
aad
stos
inc
inc
outs
and
push
jge
mov
ret
mov
(bad)
mov
or
add
or
jmp
sub
ds
or
imul
mov
fwait
and
adc
into
test
mov
add
inc
cmp
sub
jno
std
jmp
(bad)
lds
add
pop
or
or
std
int
out
(bad)
cmc
add
and
add
push
popf
(bad)
lahf
in
out
inc
in
dec
lods
pop
sbb
mov
loope
mov
cmp
ins
dec
jne
retf
stos
data16
ins
cmp
mov
stos
call
add
sub
cdq
cmp
fcomi
cmps
add
and
adc
test
js
adc
das
outs
push
addr16
in
inc
xchg
dec
ja
jo
pop
inc
push
and
pop
out
stos
iret
cmp
outs
sahf
and
daa
iret
sub
or
mov
sbb
cmp
scas
jbe
or
pop
cmp
in
inc
into
fsubr
dec
pop
push
push
js
test
mov
jae
out
jns
sbb
js
(bad)
xchg
js
ret
loope
xor
cli
data16
jg
inc
cmc
adc
pop
fs
mov
mov
retf
movs
dec
sub
sub
das
dec
fdiv
mov
sbb
mov
push
lods
not
lods
mov
inc
call
cs
into
add
xchg
jl
dec
mov
lods
clc
xchg
adc
mov
adc
into
es
adc
push
popa
outs
imul
push
push
pushf
lods
sbb
shr
fstp
mov
in
mov
pop
push
pop
xchg
out
pop
xchg
aaa
retf
imul
pop
dec
(bad)
dec
(bad)
in
fmul
ror
ror
jle
test
mov
dec
cs
dec
and
into
enter
fst
and
fs
xor
test
pop
sar
ficomp
cdq
xchg
adc
jns
dec
leave
clc
and
hlt
or
es
or
or
sti
inc
mov
fsubr
pop
cdq
inc
sub
jb
sti
les
jl
or
jbe
fmul
ficomp
sbb
fisttp
(bad)
ins
or
not
sbb
dec
lods
jb
sbb
or
push
stc
mov
or
mov
ja
pop
or
sbb
or
daa
retf
in
mov
jns
jns
stc
fisub
xchg
or
or
cdq
jnp
inc
mov
jmp
sub
jns
sbb
jecxz
in
mov
loopne
jmp
jns
(bad)
dec
std
sbb
pop
mov
mov
stos
pop
mov
xchg
ret
stc
xchg
xor
push
mov
enter
mov
stc
sbb
pop
mov
mov
imul
push
jp
mov
inc
test
bound
xor
dec
mov
push
pop
xchg
cmc
mov
jmp
adc
cmp
xchg
jns
int
pop
(bad)
out
popa
sub
dec
pop
test
adc
jmp
out
pop
mov
fnstenv
test
sbb
mov
xchg
add
sar
ds
sbb
(bad)
in
mov
js
cmp
push
mov
jmp
dec
add
cmp
push
sbb
les
fmul
xlat
push
stc
inc
or
sbb
sahf
fild
mov
fcomp
out
es
cmp
cmp
popf
out
mov
gs
repnz
inc
add
imul
cwde
pop
clc
cmps
cli
pop
call
fstp
cmps
mov
pop
xlat
dec
ror
fnsave
cmps
sub
fldenv
out
test
and
leave
adc
mul
test
rcl
fld
pop
daa
add
push
sbb
fild
sbb
dec
cmp
fst
pop
int3
or
or
cs
mov
sbb
jmp
enter
pop
hlt
mov
cmp
mov
call
imul
push
imul
leave
fmul
outs
jmp
dec
xor
xor
inc
fstp
push
or
pop
pop
sub
retf
and
adc
dec
mov
leave
jnp
or
mov
mov
mov
icebp
sar
mov
leave
cmp
test
and
dec
jmp
jnp
and
mov
fwait
or
dec
jno
(bad)
sub
jbe
push
in
xchg
fisttp
je
push
lahf
hlt
fs
sbb
retf
cwde
jb
je
pop
or
rcr
sub
push
push
bound
cmc
push
dec
jne
mov
mov
or
or
adc
pop
aam
test
pop
imul
fs
sbb
dec
test
mov
ficomp
mov
in
fistp
addr16
sbb
add
add
sbb
imul
cli
cmps
gs
xchg
cmp
lods
fld
inc
pop
add
ja
mov
mov
repnz
pop
cmp
pop
xchg
mov
push
in
jmp
sbb
add
movs
jp
fnstenv
int
rol
ins
jl
sbb
lods
out
add
aaa
and
push
jmp
pop
mov
in
mov
jecxz
cld
retf
out
dec
xchg
inc
or
jge
in
pop
(bad)
int3
loopne
jl
fwait
stc
dec
xchg
and
cmps
loope
out
rcr
jg
int3
jmp
lods
in
inc
cdq
imul
cmp
cmp
xchg
inc
xor
shr
dec
ds
pop
retf
aad
arpl
cdq
jp
popf
sub
test
sub
cmc
int3
imul
test
(bad)
jl
mov
inc
dec
dec
int
pop
jno
popf
adc
dec
pop
dec
sub
ret
test
dec
test
mov
leave
cmps
lods
xchg
push
sub
sbb
cld
add
add
mov
add
cwde
inc
jle
addr16
dec
dec
(bad)
jg
push
gs
and
icebp
test
shl
sar
cs
xchg
fimul
jnp
xor
loop
xor
sub
push
addr16
mov
clc
mov
test
imul
pop
and
in
push
mov
in
div
xor
cmp
sbb
pushf
in
ror
std
xor
stos
push
fucomp
or
pop
ins
sti
int
rep
scas
jns
adc
call
jo
pop
jnp
mov
std
mov
pop
shl
push
lods
leave
sub
sbb
cmp
add
ins
ins
pop
dec
jl
cdq
rol
sbb
(bad)
rcl
cld
mov
fucomp
xor
in
jge
mov
(bad)
stos
sub
pop
xchg
mov
jecxz
mov
enter
(bad)
adc
or
push
or
xor
std
(bad)
sbb
lods
stos
cmc
fcomp
sbb
add
mov
sub
jecxz
push
mov
push
ffree
pop
push
jecxz
sub
sbb
mov
xor
pushf
push
sbb
jge
in
mov
cmc
sbb
lahf
loope
lahf
dec
aad
jl
jmp
bound
scas
lods
xor
pop
(bad)
sbb
pop
std
sbb
mov
test
std
inc
mov
stos
cmp
mov
repz
jge
cmp
popf
or
and
and
cmc
dec
std
ja
imul
popf
add
cli
loop
sub
adc
ret
nop
pop
fcmovbe
cli
sbb
sbb
pop
lods
push
jl
lea
xor
sub
out
dec
std
jge
ret
sub
stc
sub
fcom
pop
fst
lods
jo
pop
(bad)
mov
je
retf
cmp
mov
sub
or
(bad)
mov
sbb
add
add
addr16
mov
popf
jb
fstp
fcom
(bad)
jl
in
out
pop
xchg
rol
int
stos
or
sbb
int3
and
cmc
pop
fstp
dec
add
sbb
jmp
ficom
es
das
sub
nop
aaa
and
cmp
mov
and
sbb
lock
into
sub
sbb
cli
int
lods
mov
jecxz
mov
(bad)
iret
shr
(bad)
in
rcr
jnp
fld
ret
ret
pop
fild
lods
js
dec
sbb
lods
in
jg
bound
dec
jo
lods
mov
inc
inc
cmp
jbe
in
dec
fist
sub
inc
std
inc
ds
repnz
rol
call
call
paddsw
fs
push
dec
das
pop
in
repnz
aam
je
(bad)
cld
sub
adc
and
ins
mov
int3
cmp
mov
ja
call
mov
jl
add
dec
test
int3
push
mov
inc
push
sbb
cmp
retf
mov
out
(bad)
retf
and
fiadd
(bad)
ror
jns
addr16
xchg
push
outs
ficom
iret
mov
nop
pop
int3
mov
jg
or
lahf
pop
mov
nop
loop
aas
jne
fist
mov
lahf
and
(bad)
pop
sub
sub
mov
dec
outs
mov
jns
out
push
(bad)
or
int
pop
in
push
sbb
mov
xchg
mov
or
fwait
loopne
outs
lods
dec
mov
lods
leave
push
fild
popf
scas
lock
outs
mov
dec
int
dec
call
fidiv
dec
pop
cmc
in
jg
jg
dec
jg
jmp
pusha
pop
or
or
xlat
mov
mov
loopne
out
aad
fimul
jg
or
mov
lahf
jg
fldcw
fnstsw
fst
outs
cmps
out
loop
jle
mov
push
aas
pop
dec
mov
dec
test
mov
popa
mov
out
push
jmp
rcr
mov
inc
push
jbe
jg
pop
ror
scas
mov
inc
cmp
jg
sbb
test
shr
inc
inc
push
mov
pop
js
mov
and
stc
xlat
sbb
inc
dec
aam
pop
jl
sub
jg
sub
daa
cmp
push
lahf
push
test
cmp
(bad)
push
fsubrp
cmp
jno
and
mov
dec
xchg
mov
push
mov
push
mov
outs
dec
sub
mul
loopne
ficomp
daa
inc
das
push
lahf
ins
scas
fstp
addr16
mov
outs
ds
xchg
js
fbstp
or
mov
outs
rcr
shl
cmp
push
js
sbb
inc
scas
ret
into
clc
in
shr
push
inc
cmp
add
in
cwde
iret
ds
push
xor
inc
mov
hlt
lods
pop
sti
inc
scas
aad
loop
cwde
dec
cmp
out
sub
or
(bad)
dec
push
outs
in
call
ret
pop
xchg
jmp
out
push
sbb
into
fdivr
jmp
fcmovnbe
repz
shl
or
sbb
sub
mov
mov
cmps
loope
sbb
cs
mov
pop
adc
and
clc
adc
mov
cmp
sbb
mov
sub
and
pusha
sub
push
pop
fcom
push
popa
bound
lahf
fisub
sbb
mov
out
imul
cmc
out
fcomp
sbb
scas
xchg
clc
dec
xchg
mov
jae
stos
cdq
inc
stc
sub
xchg
xor
scas
dec
pop
cdq
mul
sbb
mov
aas
pop
pop
scas
lea
cmps
inc
xchg
pop
add
fucomip
fst
ror
dec
sub
sbb
sar
pop
int
sub
mov
mov
ins
push
add
pop
(bad)
pop
inc
fnstcw
clc
mov
cmps
push
sub
inc
imul
mov
xchg
xor
jbe
aam
dec
dec
out
imul
jo
jns
sbb
mov
xchg
in
ins
push
sub
xchg
(bad)
movs
mov
out
sar
pop
pop
cmp
iret
pusha
movs
xor
es
mov
mov
(bad)
cmp
jns
jne
push
pop
mov
scas
aam
jno
inc
test
mov
xchg
mov
jmp
scas
cwde
xchg
shr
cld
ja
dec
jns
sbb
outs
xlat
push
cmps
outs
(bad)
xchg
mov
jl
mov
push
bound
sti
mov
movs
js
pop
ss
in
pop
cmp
out
stc
cdq
or
fnsetpm(287
sbb
inc
test
xchg
add
sbb
mov
(bad)
outs
(bad)
sahf
sub
add
cdq
clc
xlat
call
push
mov
inc
loopne
jp
and
add
and
out
jb
imul
dec
fild
push
sbb
pop
inc
xchg
test
or
pop
(bad)
out
call
or
addr16
mov
cmps
pop
sub
jbe
ins
hlt
or
cmps
xor
mov
es
pop
retf
sbb
sbb
cmp
pop
sub
cmovbe
enter
fldcw
sbb
mov
sub
mov
or
movs
or
sub
sub
stc
dec
test
sbb
jmp
out
inc
not
mov
and
pop
mul
stos
cmp
pop
xchg
xchg
not
out
nop
push
jl
jns
sub
xlat
xor
cmps
add
push
pop
sub
inc
bound
addr16
cli
inc
mov
outs
call
push
or
inc
mov
popf
jge
std
or
fdivr
sbb
mov
outs
and
cmp
pop
sub
test
std
scas
sbb
mov
add
(bad)
cwde
jnp
pop
sti
cmp
enter
out
or
sahf
cmp
sub
mov
jns
sti
dec
imul
jmp
cdq
sub
dec
sub
sub
or
dec
xor
push
pop
push
mov
mov
sub
outs
pop
retf
xor
iret
fnstcw
cmp
ins
cmp
sbb
jle
inc
or
cmp
jg
pop
sub
sub
cwde
sbb
dec
mov
or
fld
mov
pusha
adc
pusha
outs
sub
sbb
jns
or
sub
push
fistp
fsubr
pop
sub
int
(bad)
jge
sub
outs
aas
or
jge
cmp
and
mov
mov
pop
push
fstp
inc
jge
lahf
or
imul
dec
push
stos
pop
jl
pop
js
or
or
pop
pop
sbb
jns
cmp
frstor
pushf
mov
sbb
lea
lahf
mov
jecxz
or
fisttp
ds
(bad)
sbb
mov
mov
enter
adc
fdivr
movs
in
test
icebp
div
rcr
mov
cmp
jns
fistp
stos
sahf
mov
push
jmp
scas
cmp
iret
jmp
fistp
cwde
cmp
and
enter
stos
push
pop
test
cdq
xchg
push
hlt
sbb
mul
repnz
xchg
mov
fistp
mov
aam
add
pop
into
or
jle
test
mov
mov
stos
add
push
das
popa
and
pop
adc
ret
xor
mov
cmp
xor
add
adc
std
inc
pop
shr
or
cmp
imul
inc
sub
xchg
cmp
clc
mov
sub
sahf
aas
stos
into
dec
imul
cmps
mov
push
or
rol
xor
cdq
adc
cmp
ror
in
jg
bound
dec
repz
push
mov
add
xor
sub
jne
inc
cmps
ss
xchg
lock
pop
sub
mov
mov
lods
mov
test
mov
imul
(bad)
ins
mov
sub
mov
aaa
pop
xchg
mov
cmp
ins
jmp
jp
inc
cs
xor
pop
stos
jno
or
rol
cmp
add
or
lock
sub
sub
das
xchg
(bad)
cmp
jmp
iret
and
adc
jecxz
jp
pop
and
xchg
sub
les
sub
mov
push
mov
push
cmps
sub
pop
adc
fnstsw
popa
scas
push
xchg
dec
sub
pop
xor
ror
add
push
sahf
mov
cmc
sub
mov
mov
jno
in
dec
adc
mov
cmc
mov
imul
cwde
daa
fld
jne
cmp
imul
jo
pop
in
or
jp
ror
xchg
mov
out
xchg
dec
dec
retf
out
cli
(bad)
sbb
fst
in
push
stos
pop
inc
add
fwait
jbe
mov
jns
push
rcr
cmc
aam
movs
xor
mov
jle
stos
dec
mov
call
lods
adc
ds
addr16
mov
dec
add
pop
and
jmp
xchg
add
jmp
popa
sbb
bound
jno
ror
call
jo
xchg
ret
ret
add
test
add
push
aad
jmp
jle
imul
or
adc
scas
into
and
pop
push
in
cmps
rcr
hlt
push
imul
stos
ins
inc
inc
or
sub
cmovnp
fwait
scas
imul
iret
mov
jne
loopne
cmp
sbb
movs
mov
sbb
sub
xchg
ins
or
jmp
xor
(bad)
mov
dec
rcl
or
leave
lds
icebp
icebp
cdq
mov
es
gs
into
dec
push
pop
xor
icebp
xor
outs
sar
ret
std
and
out
ins
push
mov
push
shl
pop
cs
sub
cld
sub
jge
cdq
movs
mov
sbb
jns
inc
push
in
dec
or
sti
ss
inc
xor
aad
fsub
movs
dec
scas
mov
fistp
push
dec
sub
hlt
mov
lds
test
stc
pop
call
xchg
pushf
xor
xor
shl
cld
test
cld
fcmove
xchg
pop
dec
shl
cdq
or
retf
mov
mov
loope
jle
xchg
jmp
imul
gs
mov
sub
js
lahf
stos
out
shl
jmp
and
scas
pop
jns
sbb
sahf
or
xchg
leave
daa
or
into
lahf
pop
int
fdivrp
mov
sub
sar
push
movs
push
pop
ja
mov
pop
push
push
je
sahf
mov
pop
into
(bad)
jle
outs
rcl
mov
mov
dec
das
push
inc
retf
pop
cld
inc
adc
cmp
nop
sub
jae
mov
lods
lds
sbb
and
cmp
or
imul
(bad)
into
(bad)
lahf
sub
aad
jge
sub
jmp
pusha
xchg
pop
test
push
loopne
inc
pop
fbld
aas
push
or
xchg
push
push
in
adc
and
mov
or
ins
loope
retf
sub
dec
in
pushf
cld
jl
mov
lock
adc
loopne
rol
mov
pop
popf
dec
mov
pandn
dec
test
inc
loopne
out
hlt
mov
jo
cmp
leave
mov
(bad)
jno
dec
add
add
add
jo
dec
sti
sti
cmp
mov
adc
add
retf
xchg
adc
jo
sub
test
fmul
pop
jg
sbb
mov
(bad)
sti
dec
mov
add
stc
ret
pop
pop
dec
test
jb
mov
push
sbb
addr16
dec
fsub
inc
dec
xchg
cmp
xchg
and
push
cmp
dec
inc
test
cdq
mov
pop
scas
test
cmps
pop
mov
in
jns
push
call
inc
push
push
add
adc
mov
fcom
call
stc
xchg
xchg
cmps
jmp
mov
(bad)
sbb
mov
push
inc
sti
cmc
push
mov
neg
in
jg
ss
or
hlt
xor
and
scas
icebp
mov
retf
mov
retf
outs
(bad)
xchg
push
xchg
sub
cmps
dec
stos
je
(bad)
mov
sub
outs
lods
ins
mov
add
push
xchg
xchg
adc
jnp
fcom
and
sbb
mov
(bad)
cld
fstp
popf
fadd
adc
cmp
jne
fwait
cmps
push
fiadd
push
xor
lea
test
dec
xor
into
pop
xchg
stos
inc
and
mov
dec
or
stos
(bad)
mov
lock
enter
in
and
dec
sbb
and
mov
fnsave
rcr
xchg
cmps
cld
arpl
popa
rcl
popa
adc
cmp
cmps
adc
cmp
adc
and
sar
movs
jae
sar
test
xor
dec
clc
fild
fst
test
mov
push
inc
xchg
and
ret
loope
inc
ret
xor
cmps
cmp
sbb
in
int
adc
popa
movs
xor
mov
mov
xor
cmps
inc
inc
inc
inc
(bad)
loope
(bad)
and
xchg
test
mov
lea
xor
lds
repnz
or
retf
cmc
cwde
jp
push
pop
shr
scas
adc
test
inc
sub
dec
and
mov
loopne
xor
and
out
push
and
loop
mov
push
inc
(bad)
sub
xor
adc
jmp
jecxz
sbb
add
jns
daa
movs
(bad)
gs
jge
or
xor
push
aam
push
xchg
push
dec
push
scas
xor
inc
inc
and
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
lea
push
movzx
push
mov
call
pop
test
mov
pop
je
mov
lea
call
mov
inc
test
mov
je
mov
lea
call
jmp
movsx
cmp
jg
je
cmp
jg
je
sub
je
dec
dec
je
dec
dec
je
dec
dec
jne
add
mov
mov
or
cmp
lea
mov
mov
mov
jge
mov
jmp
test
jne
or
jmp
test
jne
or
mov
cmp
jne
mov
add
test
mov
mov
mov
je
cmp
jne
mov
mov
mov
mov
jmp
sub
je
dec
dec
je
sub
je
dec
dec
jne
add
test
mov
je
movzx
push
push
lea
push
lea
push
call
add
test
je
mov
jmp
mov
mov
mov
lea
mov
jmp
mov
add
cmp
mov
je
mov
cmp
je
test
movsx
mov
je
cdq
sub
sar
mov
jmp
mov
jmp
mov
mov
push
call
pop
jmp
cmp
jg
je
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
jne
test
mov
je
or
jmp
mov
add
mov
call
test
je
test
je
mov
mov
jmp
mov
mov
mov
jmp
or
mov
mov
test
jns
mov
mov
add
jmp
jne
cmp
jne
mov
jmp
cmp
jle
mov
cmp
jle
mov
add
push
call
test
mov
pop
mov
je
mov
mov
mov
jmp
mov
xor
mov
add
mov
mov
mov
lea
push
push
movsx
push
mov
push
push
lea
push
push
push
call
pop
call
mov
add
and
je
cmp
jne
lea
push
push
push
call
pop
call
pop
pop
cmp
jne
cmp
jne
lea
push
push
push
call
pop
call
pop
pop
cmp
jne
or
inc
mov
push
jmp
mov
mov
jmp
sub
je
dec
dec
je
sub
jne
mov
test
mov
je
mov
add
mov
mov
mov
jmp
test
jne
add
test
je
test
mov
je
movsx
jmp
movzx
cdq
jmp
test
mov
je
cdq
jmp
xor
mov
test
je
cmp
jg
jl
cmp
jae
neg
adc
neg
or
test
mov
mov
jne
xor
cmp
jge
mov
jmp
and
mov
cmp
jle
mov
mov
or
jne
and
lea
mov
dec
test
jg
mov
or
je
mov
cdq
push
push
push
push
call
add
cmp
mov
mov
mov
jle
add
mov
dec
jmp
lea
sub
inc
test
mov
mov
je
test
je
mov
cmp
je
dec
mov
mov
inc
jmp
dec
cmp
je
inc
inc
cmp
jne
sub
sar
jmp
cmp
jne
mov
mov
mov
jmp
dec
cmp
je
inc
cmp
jne
sub
mov
cmp
jne
mov
test
je
test
je
mov
jmp
test
je
mov
jmp
test
je
mov
mov
mov
sub
sub
test
jne
push
lea
push
push
call
add
push
mov
lea
lea
call
test
pop
je
test
jne
push
push
push
lea
call
add
cmp
mov
je
test
jle
mov
mov
movzx
dec
push
push
lea
push
lea
inc
push
inc
call
add
test
jne
cmp
je
push
lea
lea
call
cmp
pop
jne
jmp
or
jmp
mov
push
lea
call
pop
cmp
jl
test
je
push
push
push
lea
call
add
cmp
je
push
call
and
pop
mov
mov
test
mov
je
mov
mov
mov
jmp
call
mov
xor
push
push
push
push
push
jmp
cmp
je
mov
and
mov
mov
pop
pop
xor
pop
call
add
leave
ret
(bad)
(bad)
inc
add
inc
add
aad
add
(bad)
inc
add
(bad)
inc
add
inc
add
inc
add
inc
or
je
cmp
je
dec
js
mov
mov
inc
movzx
jmp
movsx
push
push
call
pop
pop
cmp
jne
or
ret
inc
ret
push
mov
push
mov
jmp
mov
mov
dec
call
cmp
je
cmp
jg
pop
pop
ret
push
lea
sub
mov
xor
mov
mov
push
mov
push
xor
push
mov
push
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
jne
call
push
push
push
push
mov
push
call
add
cmp
je
mov
and
or
jmp
mov
test
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
push
sar
lea
call
and
imul
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
mov
mov
mov
mov
pop
mov
pop
pop
xor
call
add
ret
cmp
jae
lea
push
push
call
mov
mov
mov
mov
shr
movzx
movzx
and
add
add
shr
mov
movzx
and
shl
or
add
add
mov
jmp
cmp
mov
jle
mov
mov
movzx
mov
lea
shl
or
add
mov
lea
add
cmp
mov
jl
mov
mov
mov
shr
mov
mov
xor
imul
cmp
mov
je
mov
mov
mov
cmp
jae
mov
movzx
mov
mov
mov
shr
mov
mov
mov
add
mov
xor
cmp
sete
mov
xor
jmp
mov
cmp
jae
mov
movzx
mov
shr
mov
mov
jmp
mov
cmp
mov
jge
or
jmp
lea
mov
cmp
je
mov
movzx
mov
add
shl
or
mov
add
mov
add
mov
add
mov
cmp
jne
add
cmp
jl
mov
mov
lea
shr
add
mov
and
cmp
jne
mov
cmp
mov
jge
or
mov
cmp
je
mov
movzx
mov
add
shl
or
mov
add
mov
add
mov
add
mov
cmp
jne
add
cmp
jl
mov
mov
lea
shr
add
mov
and
cmp
jne
mov
cmp
mov
jge
or
mov
cmp
je
mov
movzx
mov
add
shl
or
mov
add
mov
add
mov
add
mov
cmp
jne
add
cmp
jl
mov
mov
lea
shr
add
mov
and
cmp
jne
mov
cmp
mov
jge
or
mov
cmp
je
mov
movzx
mov
add
shl
or
mov
add
mov
add
mov
add
mov
cmp
jne
add
cmp
jl
mov
mov
lea
shr
add
mov
and
cmp
jne
mov
cmp
mov
jge
or
jmp
lea
lea
mov
cmp
je
mov
movzx
mov
add
shl
or
mov
add
mov
add
mov
add
mov
cmp
jne
add
cmp
jl
mov
mov
lea
shr
add
mov
and
cmp
jne
mov
mov
cmp
mov
jge
or
jmp
lea
mov
cmp
je
mov
movzx
mov
add
shl
or
mov
add
mov
add
mov
add
mov
cmp
jne
add
cmp
jl
mov
mov
lea
shr
add
mov
mov
and
movzx
shl
or
mov
mov
cmp
mov
jge
or
lea
mov
cmp
je
mov
movzx
mov
add
shl
or
mov
add
mov
add
mov
add
mov
cmp
jne
add
cmp
jl
mov
mov
lea
shr
mov
add
mov
and
movzx
shl
or
mov
mov
cmp
mov
jge
or
lea
mov
cmp
je
mov
movzx
mov
add
shl
or
mov
add
mov
add
mov
add
mov
cmp
jne
add
cmp
jl
mov
mov
lea
shr
mov
add
mov
and
movzx
shl
or
mov
mov
cmp
mov
jge
or
lea
mov
cmp
je
mov
movzx
mov
add
shl
or
mov
add
mov
add
mov
add
mov
cmp
jne
add
cmp
jl
mov
mov
lea
shr
mov
add
mov
and
movzx
shl
or
mov
mov
mov
jmp
mov
inc
icebp
inc
add
repnz
add
repz
add
hlt
inc
add
hlt
inc
add
inc
add
cmc
inc
add
inc
add
test
test
pop
clc
inc
add
clc
inc
add
add
stc
inc
add
add
sti
inc
add
inc
add
cld
inc
add
inc
add
inc
cmp
inc
add
add
inc
add
add
add
add
or
les
inc
add
inc
add
push
inc
add
cmovbe
scas
cmovbe
and
inc
add
adc
test
adc
int3
int3
int3
int3
mov
call
push
push
push
push
mov
xor
cmp
jle
mov
lea
sub
mov
lea
mov
cmp
jne
mov
shl
mov
add
sub
jne
lea
mov
xor
cmp
mov
mov
mov
mov
mov
jl
mov
or
lea
rep
lea
add
mov
mov
mov
sar
mov
mov
cmp
mov
jge
mov
mov
sar
mov
cmp
jl
mov
mov
mov
add
cmp
mov
jle
cmp
jle
jmp
lea
mov
mov
sub
mov
cmp
mov
mov
mov
mov
jg
mov
mov
jge
mov
mov
mov
cmp
jge
add
mov
mov
cmp
jl
mov
mov
add
cmp
jle
mov
mov
mov
mov
sub
mov
cmp
mov
mov
mov
jg
mov
mov
jge
mov
mov
mov
cmp
jge
add
mov
mov
cmp
jl
mov
mov
add
cmp
jle
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
and
and
cmp
jle
mov
and
and
add
add
or
add
mov
mov
sar
mov
mov
mov
mov
cmp
mov
mov
jge
mov
mov
sar
mov
cmp
jl
cmp
mov
jg
mov
mov
xor
cmp
jl
lea
xor
xor
cmp
jl
mov
lea
mov
lea
add
cmp
jge
cmp
mov
mov
jle
mov
add
add
cmp
jle
test
je
mov
lea
mov
sar
cdq
sub
sar
add
shl
mov
add
cmp
jle
jmp
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
xor
cmp
jg
push
mov
push
push
mov
push
mov
lea
xor
test
jle
movzx
cmp
jne
mov
add
add
cmp
jl
add
add
cmp
jle
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
push
mov
push
mov
xor
cmp
push
mov
mov
jg
lea
xor
test
jle
movzx
cmp
jne
mov
mov
add
add
cmp
jl
mov
add
cmp
jle
mov
xor
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jle
lea
movzx
add
lea
add
cmp
jl
lea
mov
lea
mov
add
mov
add
add
sub
jne
mov
xor
cmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jg
mov
sub
sub
lea
add
lea
mov
sub
add
add
lea
mov
add
sub
jne
mov
mov
lea
cmp
jg
lea
jmp
lea
mov
lea
sub
add
mov
add
cmp
jle
pop
pop
pop
pop
ret
int3
int3
int3
int3
push
mov
cmp
je
mov
sub
cmp
push
push
jle
lea
cmp
jl
nop
mov
mov
lea
cmp
mov
jg
mov
cmp
jbe
mov
add
cmp
jle
mov
sub
cmp
mov
jge
mov
lea
cmp
jl
mov
mov
mov
lea
cmp
jg
mov
cmp
jbe
mov
add
cmp
jle
mov
sub
cmp
mov
jge
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
mov
mov
jmp
jmp
lea
lea
mov
mov
mov
sub
mov
sub
cmp
mov
mov
mov
jge
mov
push
mov
call
add
jmp
mov
imul
add
and
mov
mul
shr
lea
mov
mov
sub
mov
jne
mov
mov
mov
mov
jmp
cmp
mov
jne
lea
sar
mov
jmp
mov
mov
mov
mov
mov
mov
mov
cmp
jg
lea
mov
mov
mov
sub
jne
mov
mov
mov
add
add
cmp
jle
mov
mov
cmp
jl
mov
sub
sub
cmp
mov
jl
mov
test
mov
jle
mov
sub
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
add
test
mov
jg
mov
mov
mov
sub
sub
cmp
jl
mov
test
mov
jle
mov
sub
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
add
test
mov
jg
mov
sub
lea
lea
mov
mov
sub
sub
cmp
mov
jle
mov
add
mov
mov
add
mov
jmp
test
jle
cmp
jg
jmp
lea
nop
mov
mov
mov
sub
jne
mov
mov
mov
mov
sub
mov
jmp
test
jl
sub
cmp
jle
jmp
cmp
jg
mov
mov
mov
mov
mov
add
sub
jmp
mov
mov
add
jmp
mov
add
mov
mov
add
mov
mov
test
jg
pop
pop
pop
add
ret
int3
int3
int3
int3
push
mov
and
sub
push
push
push
mov
xor
mov
lea
rep
mov
xor
test
jle
jmp
lea
mov
movzx
add
lea
add
cmp
jl
mov
lea
lea
rep
mov
mov
mov
add
mov
add
mov
add
mov
add
add
cmp
jl
xor
test
jle
mov
movzx
lea
mov
sub
mov
mov
mov
add
cmp
jl
cdq
and
add
sar
add
test
jle
mov
xor
mov
rep
xor
lea
mov
mov
sar
and
add
sbb
adc
mov
jmp
jb
inc
loop
les
(bad)
mov
loopne
pop
popa
inc
sub
push
in
cdq
push
pop
sbb
and
psraw
or
xor
xchg
pop
fdivr
dec
rol
mov
dec
push
cmp
mov
lahf
ret
test
(bad)
(bad)
loopne
xor
cmps
mov
pop
xchg
adc
das
sbb
pop
xchg
outs
in
adc
clc
aaa
adc
mov
push
or
frstor
lods
sub
sub
mov
inc
mov
cmc
fbld
pushf
push
cli
xlat
(bad)
repnz
or
(bad)
jg
in
xor
sahf
sbb
push
loopne
mov
mov
fstp
mov
adc
mov
lahf
jle
outs
jle
pop
mov
arpl
xor
lahf
dec
or
add
imul
mov
adc
in
lods
sub
jmp
stc
loopne
cmps
rol
dec
adc
imul
enter
and
icebp
jb
mov
je
jns
mov
data16
push
and
pop
xor
dec
sahf
mov
jecxz
dec
jo
cs
fst
cld
pusha
das
and
and
push
icebp
mov
in
xlat
gs
loope
(bad)
or
inc
fld
movs
popa
sbb
or
pop
nop
popa
rcl
jnp
lock
mov
mov
out
push
dec
imul
mov
xchg
cmp
mov
mov
popa
mov
inc
jl
inc
sub
jb
pop
sbb
jl
ins
or
pushf
imul
jae
push
(bad)
pop
pop
int
mov
je
inc
sbb
(bad)
xchg
cmp
cmp
fldcw
in
adc
and
fldenv
xlat
push
test
daa
cmp
movs
xchg
or
addr16
arpl
dec
fcmovnu
push
push
pop
cs
jp
pop
pop
xchg
loopne
and
fld
scas
mov
sub
xchg
xchg
ffree
int3
mov
aaa
out
ins
fadd
repz
add
dec
inc
clc
ror
outs
in
dec
cmp
dec
ins
rcl
xor
pop
and
pop
xor
jno
mov
lods
jne
cmc
inc
mul
pop
out
aam
(bad)
lods
dec
pushf
pop
cmp
pop
xor
mov
test
hlt
ss
es
xor
das
test
loopne
dec
fsub
sbb
dec
outs
xchg
aad
pusha
loope
mov
jbe
add
(bad)
xor
shl
push
or
and
pop
jecxz
iret
and
adc
add
push
in
mov
jmp
inc
ss
pop
mov
mov
or
sub
stc
pop
pop
aam
xor
ins
popf
push
ds
int
das
pop
pop
pop
loopne
jmp
dec
xchg
das
xchg
dec
data16
dec
xor
mov
rol
loop
js
mov
inc
cli
dec
rcr
shl
jmp
out
or
lods
push
mov
(bad)
mov
mov
lahf
xor
cli
aas
lods
cdq
sbb
push
pop
out
ror
inc
aaa
mov
jne
pop
push
mov
inc
add
stos
lods
add
repnz
(bad)
xchg
lds
xchg
xlat
pushf
lahf
push
std
jp
dec
inc
xchg
popf
jae
iret
les
movs
mov
mov
rol
nop
cmps
cld
xchg
divps
pop
test
sbb
jg
and
rcr
mov
leave
pop
adc
(bad)
cld
xchg
rcr
inc
or
jae
fst
mov
frstor
fmul
and
popf
fnstcw
out
mov
js
jg
movs
test
or
(bad)
ror
push
ins
xchg
stos
and
out
cmps
stos
jns
jge
inc
jl
loop
pusha
xchg
cmp
jmp
stc
mov
dec
push
ins
loopne
test
mov
add
xchg
(bad)
jno
or
push
(bad)
mov
out
inc
ss
push
aaa
jo
push
pop
mov
pop
sbb
lods
sti
outs
(bad)
std
mov
and
and
jl
mov
pushf
jg
cmps
dec
cmps
loop
int3
mov
dec
add
inc
scas
div
test
jne
push
adc
inc
sub
mov
unpckhps
sub
xor
adc
jno
or
mov
loopne
dec
out
into
(bad)
jg
les
xchg
fild
outs
ins
jle
retf
std
xchg
mov
shl
out
pop
jge
sbb
lea
clc
repnz
mov
pop
ins
push
pop
in
dec
movs
jl
gs
sbb
clc
adc
pop
test
cmp
xor
inc
mov
call
inc
jne
mov
adc
test
jle
bound
push
push
mov
jo
mov
inc
pop
dec
xchg
repz
les
jge
push
aam
dec
mov
push
mov
int3
and
loop
inc
jmp
push
loop
stc
xor
cmp
xchg
out
jmp
and
mov
or
daa
sub
pop
and
inc
sar
stc
sub
xchg
(bad)
mov
cld
and
or
jbe
jb
cmps
out
pop
push
mov
xchg
cmps
mov
or
repz
xchg
mov
ret
rcr
inc
pop
cmc
adc
push
aaa
jle
test
inc
in
retf
lods
rcl
sti
sub
retf
into
neg
sbb
pop
sbb
nop
inc
popf
push
inc
cmp
push
loope
jne
push
jle
ss
mov
push
push
pop
mov
ja
push
xchg
inc
xor
jbe
inc
mov
out
mov
movs
fcmovnbe
(bad)
xlat
xor
push
out
dec
scas
sahf
xchg
js
xor
call
jecxz
dec
cs
test
ret
sbb
push
xlat
pop
fistp
inc
jae
jl
inc
mov
and
push
sub
aad
inc
cmp
mov
cmps
sti
mov
je
scas
cmp
pop
(bad)
pop
xchg
pop
call
aad
push
add
adc
mov
test
inc
and
cmp
rol
jg
daa
in
enter
and
push
pop
outs
lds
retf
imul
xchg
hlt
inc
test
cmp
push
pop
add
sub
mov
mov
cmps
xchg
test
movs
ins
push
dec
push
std
pop
loopne
dec
or
adc
lods
dec
mov
adc
mov
or
imul
mov
sub
jno
sub
xlat
enter
push
fisubr
mov
lahf
or
fwait
mov
jl
mov
test
dec
sbb
(bad)
js
out
into
add
test
retf
adc
or
mov
lods
dec
aas
ss
xor
pop
inc
imul
mov
daa
and
mov
add
stos
lea
adc
add
enter
mov
ins
sub
scas
psllq
inc
adc
gs
and
das
push
movs
je
cs
add
or
mov
adc
dec
push
retf
cwde
cmp
push
(bad)
imul
ss
adc
out
cli
push
ins
enter
dec
shl
ss
jne
add
mov
fcmovbe
test
cld
lods
xchg
pop
xchg
sahf
es
mov
add
mov
rol
xchg
pusha
inc
aas
sysexit
cmps
inc
mov
lods
and
in
int
xchg
inc
test
or
xchg
sub
mov
fild
out
and
pop
test
nop
ins
int3
sub
add
or
jl
push
test
in
lahf
js
xchg
idiv
jl
push
jne
cmp
out
fs
cli
xor
jno
lock
or
loope
scas
pop
std
data16
ss
push
lea
xor
push
jbe
sub
stc
(bad)
ss
test
aas
ds
adc
cmp
mov
dec
mov
dec
(bad)
cmp
sbb
nop
mov
push
lahf
pop
pop
adc
das
popf
push
mov
push
and
sbb
in
mov
cmc
pushf
addr16
(bad)
mov
or
test
imul
in
in
sub
inc
adc
movs
or
aas
mov
pop
das
inc
push
or
fsubp
retf
ss
fnsave
sub
adc
in
test
addr16
xor
mov
sbb
daa
test
cli
shl
sub
fdivr
ficomp
jns
sbb
add
jb
call
imul
sub
hlt
iret
ins
outs
outs
cmp
jmp
cmp
or
xor
inc
jnp
pushf
mov
xchg
and
(bad)
aad
sbb
scas
mov
adc
daa
pop
out
loop
or
mov
xchg
jmp
outs
sbb
cld
dec
or
xor
ja
pop
mov
fcom
in
cld
stos
and
mov
pushf
adc
mov
pusha
cmp
mov
loope
shl
dec
scas
push
add
dec
xor
jne
push
or
push
mov
test
mov
bnd
js
imul
icebp
cs
xchg
mov
pop
add
sbb
push
ret
xor
jmp
sbb
lods
adc
xchg
jmp
sbb
add
inc
inc
xchg
repz
xor
bound
mov
scas
popf
mov
mov
(bad)
inc
pop
frstor
stos
pusha
xchg
shr
dec
pop
or
cmp
addr16
dec
aaa
mov
inc
push
inc
mov
stc
mov
adc
pop
mov
sub
mov
mov
cmp
loop
rcl
(bad)
fmul
fsub
mov
imul
mov
outs
fsubr
bnd
aas
dec
hlt
push
adc
in
cmp
sub
jl
mov
mov
movs
dec
out
adc
dec
ss
cwde
lahf
popf
mov
jno
jnp
dec
cwde
cmps
jnp
jle
in
les
ss
aas
dec
add
lea
shr
fwait
data16
mov
pop
fisub
jb
push
or
and
cmp
mov
jae
push
out
stos
lds
and
aas
xchg
aaa
adc
push
cwde
and
repz
mov
in
das
addr16
mov
call
bound
(bad)
adc
jno
mov
(bad)
retf
push
frstor
test
jmp
sub
mul
out
jbe
mov
and
ins
jns
pop
xchg
es
inc
scas
ins
fadd
push
dec
and
dec
cs
sahf
aam
push
mov
adc
sbb
sbb
inc
pop
push
in
adc
stos
add
mov
shld
adc
mov
xor
pop
lea
retf
addr16
je
lds
aad
sbb
repnz
or
js
loope
mov
push
int3
dec
test
fdivr
cli
adc
mov
push
cld
pop
int3
pop
cmp
daa
not
aaa
jg
pushf
fimul
adc
mov
fiadd
lock
add
jbe
mov
pop
int3
enter
push
call
mov
xchg
push
pusha
imul
js
(bad)
xchg
adc
mov
lahf
push
cmps
inc
mov
mov
adc
aad
and
and
(bad)
out
lods
adc
fdiv
inc
ss
mov
aas
test
xchg
sub
fcomi
add
(bad)
xchg
enter
fst
or
xchg
rcr
(bad)
dec
add
and
push
mov
ds
push
inc
xchg
jb
dec
xchg
push
pop
or
dec
popa
sub
add
add
pushf
imul
ins
ss
sub
js
data16
mov
nop
mov
retf
mov
or
lfs
mov
dec
cmp
pcmpgtb
cmp
loope
inc
pushf
call
or
mov
sub
ds
pop
imul
clc
iret
arpl
mov
shr
jge
and
jmp
mov
jnp
pop
data16
ins
sbb
inc
loop
cmp
iret
mov
movs
leave
jecxz
outs
push
fimul
and
mov
jbe
mov
pushf
cmp
mov
ins
(bad)
mov
mov
into
fcmovne
pop
or
dec
ins
jne
in
adc
je
inc
mov
sti
repnz
mov
daa
cmp
and
mov
and
add
dec
ret
pop
test
enter
sbb
rcr
test
mov
lds
cmp
sbb
cdq
mov
push
jge
pop
mov
lods
xchg
sbb
lods
mov
test
iret
aad
and
iret
(bad)
in
js
ins
dec
or
daa
cmp
cmp
aaa
fadd
sub
not
sbb
sbb
and
cld
dec
imul
daa
frstor
dec
and
test
mov
mov
sub
addr16
das
pop
iret
stc
in
sbb
sub
fcmovb
dec
lahf
(bad)
mov
add
jge
mov
jo
(bad)
out
cwde
test
ss
pop
dec
mov
ins
inc
mov
jmp
adc
fdiv
punpckldq
mov
rcr
bnd
cmp
sub
ja
jg
xchg
add
cmc
loop
out
mov
enter
out
mov
mov
fcomp
aaa
mov
mov
xchg
(bad)
cld
pop
adc
add
inc
jecxz
jno
add
inc
xor
int
das
stos
push
add
push
movs
inc
adc
dec
repz
mov
(bad)
dec
hlt
pop
int3
test
jns
ret
or
xchg
push
mov
outs
shl
jmp
xor
bound
dec
cmc
or
in
jne
std
out
xchg
dec
xor
(bad)
mov
dec
les
or
daa
mov
mov
iret
out
jg
scas
lahf
ret
scas
mov
inc
fld
mov
dec
hlt
pop
imul
or
jmp
out
stos
mov
pop
sbb
pop
(bad)
int
nop
gs
not
fld
je
add
mov
mov
iret
aaa
mov
push
int3
inc
mov
cmp
repz
xlat
add
retf
pushf
repnz
outs
mov
sbb
aas
push
xchg
xlat
sub
jne
dec
mul
rcr
mov
and
and
ins
jg
jb
sub
or
cmp
mov
cmps
lds
push
repz
push
stc
loop
ss
sub
jns
daa
dec
xor
stos
test
pop
cli
pop
push
je
push
xor
push
inc
lods
dec
xlat
call
xchg
cmps
adc
xchg
mov
cmps
add
jb
(bad)
adc
shr
aaa
mov
xor
push
lods
pop
jne
call
jmp
rep
xor
call
pushf
ds
repnz
xor
inc
mov
retf
pop
inc
xor
inc
mov
aaa
(bad)
mov
xor
push
jle
nop
mov
and
lahf
xor
dec
mov
mov
cmc
in
(bad)
rol
cmp
xchg
pop
inc
test
dec
sub
xchg
icebp
or
inc
push
bts
or
cwde
dec
pusha
es
xchg
push
sub
sbb
adc
dec
add
jl
xchg
into
imul
aad
inc
sbb
and
ins
loope
pop
jno
lods
push
ins
ja
xor
test
cmp
lds
cld
ins
addr16
cmc
fild
sub
or
xchg
bound
pop
jge
fs
push
or
cmp
pop
ror
xor
scas
scas
lahf
and
jp
pop
jmp
push
and
fsubr
inc
cmps
daa
in
mov
addr16
sbb
cmc
jns
push
movs
xchg
jbe
std
mov
mov
cmp
not
pop
outs
push
cli
mov
or
sub
inc
and
cmps
jne
jns
daa
mov
mov
sub
mov
inc
or
xchg
daa
sar
lods
mov
fnstcw
lds
leave
ins
out
test
push
(bad)
ffree
cs
sub
adc
es
pop
dec
fdiv
(bad)
xchg
aam
mov
add
jo
sahf
out
pop
mov
fwait
lods
and
call
mov
cmp
push
(bad)
or
in
inc
test
push
sbb
adc
sub
push
jae
xchg
movs
ins
leave
sbb
xor
aad
add
xor
xchg
aam
je
inc
leave
mov
jmp
movs
test
in
imul
sub
out
int3
xor
cmp
adc
inc
mov
inc
push
js
shl
pop
into
mov
call
sub
cmp
lahf
pop
add
pop
aas
pop
ret
pop
push
js
ins
out
push
ins
call
(bad)
cs
dec
push
dec
dec
cwde
lock
cmp
popa
out
fcom
mov
xlat
push
jne
out
mov
and
pop
aad
iret
out
dec
mov
jge
dec
test
mov
repz
sub
inc
or
ret
out
lods
or
pop
mov
repz
daa
push
cmp
jg
sti
xor
sub
jno
mov
mov
dec
rol
cmp
shl
pop
adc
jo
push
ins
std
or
arpl
(bad)
pop
add
mov
xchg
push
outs
xchg
out
pushf
dec
movs
stos
jo
push
in
xor
popa
jnp
mov
(bad)
jg
(bad)
mov
test
cmp
int3
je
mov
xchg
add
ret
mov
movs
xchg
(bad)
pop
xchg
or
mov
dec
sub
cmp
arpl
pop
sub
push
and
inc
inc
sbb
jecxz
test
ja
pop
dec
xlat
pop
addr16
(bad)
pusha
mov
fmul
inc
inc
xor
ins
mov
pop
jmp
rcr
jnp
gs
dec
push
push
xchg
jmp
scas
xlat
ins
ins
cmp
jns
mov
inc
sti
stc
jmp
repnz
(bad)
je
ss
mov
ins
(bad)
mov
iret
pop
pop
loop
addr16
lods
popf
mov
jae
xor
les
scas
js
inc
loop
mul
loope
xchg
pop
xchg
cmps
fyl2xp1
syscall
mov
lock
addr16
mov
iret
jg
xchg
out
cmovp
push
mov
mov
retf
out
and
sbb
add
cli
xchg
sub
sbb
push
push
and
add
stc
hlt
retf
xchg
jge
xchg
fsubr
outs
and
dec
outs
jb
pop
test
xchg
ret
in
pop
xor
mov
mov
inc
jns
iret
movs
mov
push
lahf
les
push
fwait
jge
(bad)
aad
sbb
jno
out
xor
xlat
sti
aad
mov
push
(bad)
xor
ret
jge
aam
pop
fist
cmps
out
jecxz
in
cmps
call
mov
aas
pop
inc
xchg
out
jne
loope
scas
cmp
seta
mov
pop
rcl
fdiv
jbe
fsub
xor
pop
push
mov
clc
sub
out
test
or
clc
xchg
in
xor
sbb
mov
xlat
cmp
aas
out
or
iret
in
ja
cmc
and
or
jmp
lock
lahf
pop
cmp
sub
or
and
inc
js
xor
adc
mov
call
clc
cli
mov
adc
or
xor
adc
lock
mov
sub
js
out
enter
outs
dec
cmp
cmc
pushf
iret
jne
retf
jge
xor
adc
xchg
imul
cmp
adc
sbb
nop
cmp
gs
inc
retf
(bad)
cmp
dec
scas
pop
pop
dec
vpminsw
mov
cmps
jo
inc
inc
adc
pop
ins
repnz
nop
jge
push
loop
jecxz
mov
std
cmps
jne
shr
ins
dec
lea
movs
inc
jne
mov
je
mov
and
pop
call
dec
in
adc
lea
xor
jae
mov
xor
pop
in
je
dec
fdivp
dec
lods
icebp
pushf
jg
test
jmp
xchg
or
dec
cdq
shl
enter
neg
mov
sbb
push
hlt
es
jle
(bad)
js
fsub
fild
mov
(bad)
out
dec
(bad)
in
push
add
sbb
ss
sub
call
(bad)
pop
cmps
ins
sbb
xchg
in
es
jl
cld
paddw
shl
ja
xchg
lahf
or
loop
rol
jo
mov
hlt
out
xchg
in
in
mov
push
pusha
dec
add
mov
sbb
mov
movs
(bad)
shl
pop
les
in
lods
pop
sbb
dec
or
push
stos
cmp
dec
sbb
mov
sbb
cld
retf
(bad)
jae
in
mov
daa
mov
xchg
mov
ins
inc
pop
aam
add
adc
sbb
fsub
or
inc
hlt
cmp
xchg
pop
retf
pop
pop
inc
hlt
movs
jno
push
inc
push
call
(bad)
jbe
imul
stc
in
add
adc
clc
jb
push
add
mov
aaa
or
rcl
or
and
pop
outs
mov
sti
jmp
or
pop
add
sti
push
xchg
dec
fdiv
sub
sbb
cli
mov
push
lahf
or
fisubr
xchg
rcl
in
fstp
or
movs
pop
xchg
sub
scas
mov
ins
mov
add
movs
cmps
mov
inc
ror
cwde
icebp
jp
inc
cmp
xchg
cmp
movs
lds
fidivr
gs
mov
sub
inc
pop
xor
jbe
push
jmp
xchg
pop
outs
cwde
xchg
jl
jo
nop
addr16
add
jbe
fst
(bad)
aaa
or
out
mov
ficom
cmps
lea
push
lods
inc
sbb
push
mov
icebp
lahf
add
mov
retf
inc
jmp
inc
sub
fidivr
imul
mov
das
or
add
rol
pop
jae
xchg
int
and
mov
int3
mov
inc
jp
and
popf
sbb
adc
cmp
aad
xor
sahf
cmp
xchg
(bad)
aad
shl
jg
sbb
add
jmp
aad
sbb
mov
test
dec
cmps
mov
out
fistp
lds
jmp
int3
mov
aas
scas
dec
xchg
pop
test
outs
mov
push
lods
cmc
pop
adc
push
mov
out
xor
mov
addr16
jge
int3
sbb
sbb
faddp
popf
mov
mov
clc
imul
lods
cmps
ds
add
pop
push
popf
aas
mov
js
inc
xor
stc
mov
mov
mov
mov
out
push
icebp
xchg
imul
(bad)
or
nop
mov
test
xor
fdiv
mov
(bad)
retf
sahf
push
adc
xchg
cmp
or
mov
sub
out
shr
push
movs
add
leave
mov
xlat
cli
mov
ins
fldl2e
jg
out
mov
ret
in
sub
xchg
into
pushf
outs
mov
movs
push
xor
mov
into
jns
ds
push
sub
sub
pop
jns
test
into
xchg
jmp
push
and
loop
sbb
and
or
xchg
adc
xor
cld
mov
ins
ins
add
ins
push
popf
imul
pop
mov
push
outs
arpl
pop
loope
mov
pop
jns
(bad)
aam
(bad)
cld
add
jnp
mov
xor
jmp
or
(bad)
(bad)
lds
leave
jmp
mov
aam
dec
out
mov
xor
fwait
call
adc
jbe
push
neg
mov
or
data16
or
stos
push
cmps
ds
cld
daa
popa
sbb
fld
jnp
jp
sbb
xchg
and
shr
add
mov
daa
les
idiv
data16
push
(bad)
and
sub
jecxz
loope
xor
dec
mov
add
test
mov
and
sbb
sub
xor
fcomp
or
or
test
fild
not
jg
je
int3
add
mov
sbb
das
inc
mov
jae
and
xor
push
les
cs
push
pop
aaa
aaa
pop
call
inc
dec
sub
inc
call
pop
stc
jb
ins
das
pop
adc
stos
enter
clc
push
(bad)
jmp
imul
out
inc
cmp
jnp
bound
push
xchg
adc
and
adc
pop
into
fnstcw
ret
(bad)
push
test
push
mov
mov
pop
enter
out
jae
push
test
jg
sub
dec
ror
pop
mov
xor
sbb
sbb
aaa
push
inc
jg
retf
repz
pushf
ja
xchg
nop
inc
movs
popa
ja
jb
stc
push
jne
outs
adc
sub
movs
jo
scas
jl
scas
(bad)
pushf
mov
adc
pop
mov
imul
cld
out
clc
test
das
ins
fist
or
mov
sahf
or
test
fdivp
das
in
(bad)
adc
fs
nop
test
ret
sub
cld
sbb
cmp
mov
retf
cmp
out
adc
in
gs
xchg
div
cmp
arpl
nop
jns
fsub
aam
push
(bad)
fstp
jmp
lods
xchg
femms
sbb
xchg
fadd
ins
mov
mov
mov
bound
xchg
and
aad
xlat
jecxz
mul
adc
nop
sahf
xchg
les
gs
out
lods
int3
dec
test
call
dec
lods
out
add
jnp
mov
mov
repz
aad
jmp
push
xchg
jp
std
repnz
adc
inc
jp
dec
in
mov
push
sti
cmp
mov
cmp
and
in
into
les
div
(bad)
pop
test
loop
fadd
pop
mov
or
or
fsubp
mov
out
movs
lea
pop
pop
int
retf
mov
hlt
call
loopne
sub
cld
push
inc
cmp
lahf
lds
js
push
scas
and
lods
jno
push
push
inc
js
push
fsubrp
mov
xor
adc
hlt
pop
lock
movd
in
dec
jle
fiadd
cmps
dec
xchg
in
jmp
into
push
lock
imul
dec
das
pushf
push
sub
xchg
movs
das
pop
dec
les
test
hlt
dec
out
sbb
into
seta
iret
inc
inc
xchg
sub
mov
cs
mov
pop
data16
mov
rcl
push
adc
dec
sahf
ins
sar
mov
scas
add
sbb
sub
or
inc
fcomp
call
ds
adc
mov
dec
and
out
imul
repz
inc
pop
push
xchg
sub
pop
int
enter
lds
sar
ret
cld
mov
nop
call
sub
lods
ret
iret
inc
dec
mov
lahf
xor
lea
mov
int3
ret
sub
jno
pop
pop
sahf
cmps
xor
jle
cld
push
jp
sbb
cmp
ror
lock
ins
push
loopne
in
jecxz
mov
bound
sub
bound
or
dec
pop
(bad)
inc
inc
loope
dec
aad
sbb
jmp
in
stc
fsubr
add
fs
inc
jl
xor
mov
jl
outs
sub
or
jmp
add
js
cmp
divps
out
int
and
in
mov
dec
mov
mov
cmp
rol
daa
les
dec
int3
div
out
cmp
push
or
mov
in
inc
ins
xor
cwde
jmp
inc
out
paddb
fstp
add
pop
mov
xchg
sub
lock
lods
mov
inc
inc
(bad)
sbb
in
dec
sbb
mov
pop
fstp
mov
(bad)
jmp
or
xchg
xchg
push
sub
int
mov
pop
les
daa
pop
popf
mov
scas
push
mov
pop
fsub
jb
std
das
xchg
pop
push
fwait
jne
out
jg
pop
pop
jecxz
mov
or
xlat
add
cmp
mov
ins
push
lods
dec
sub
jmp
dec
out
gs
jmp
mov
mov
test
ret
xchg
test
ret
loopne
add
inc
js
xor
and
and
pop
sar
adc
pop
mov
scas
push
nop
push
test
test
xor
ds
sbb
mov
ins
pop
jmp
jmp
ins
xor
push
add
cmp
scas
out
pop
jbe
add
loopne
xchg
add
les
mov
mov
push
repnz
neg
(bad)
cld
mov
imul
push
jns
inc
pop
call
sub
and
in
das
mov
push
cmp
ja
lods
add
sub
cmp
cmps
push
mov
cmp
ret
popf
out
adc
test
aas
sub
fidiv
(bad)
iret
push
ja
(bad)
lods
popa
ret
pushf
fsubr
inc
(bad)
mov
fst
mov
das
lods
jmp
(bad)
out
pop
into
inc
leave
pop
mov
sar
mov
inc
jmp
xor
out
stc
daa
out
inc
push
mov
mov
xchg
in
inc
jg
mov
adc
cmps
sub
(bad)
cmc
xlat
test
clc
inc
mov
pop
pop
xor
jo
or
int3
test
add
mov
and
(bad)
js
nop
out
pushf
stc
mov
das
fimul
scas
(bad)
daa
mov
retf
test
lock
lahf
dec
mov
add
add
mov
das
icebp
dec
lods
and
xor
test
push
out
dec
push
cwde
cmps
cmp
ficom
call
xchg
and
ret
ror
cwde
ins
lods
das
mov
xchg
hlt
push
mov
cmp
mul
add
cli
ror
add
outs
sbb
ss
push
push
(bad)
cmc
sub
pop
add
dec
aad
pop
ins
int
out
inc
retf
cmps
xor
hlt
push
in
xchg
mov
sbb
outs
inc
inc
aas
jmp
or
xchg
les
ret
in
jg
mov
fs
cmp
inc
div
jnp
inc
jae
and
push
fs
pop
rol
and
icebp
adc
adc
fdivr
pop
jnp
fdivr
mov
xchg
int
nop
fwait
pop
ss
and
pop
fcmovnbe
mov
pop
lahf
fmul
push
pop
xor
sub
fucompp
out
mov
cvtps2pi
cmp
aad
addr16
sbb
and
out
adc
mov
int
xor
rol
mov
(bad)
lds
out
jns
in
movs
test
or
mov
xor
fsub
xor
sar
jl
test
and
les
push
retf
int
adc
clc
pop
call
in
add
xchg
nop
ins
fmul
dec
out
xchg
add
jbe
cmps
loop
dec
push
adc
test
data16
out
pop
js
sbb
xor
(bad)
cli
mov
cmps
dec
call
dec
pop
fidivr
mov
inc
popf
ja
out
jns
lahf
lods
enter
mov
cwde
(bad)
mov
ja
fild
mov
pop
sbb
scas
mov
shl
dec
out
hlt
jnp
jp
mov
fstp
ror
bound
pop
dec
daa
xor
push
push
jmp
mul
call
dec
mov
movs
leave
in
es
movs
xor
ja
(bad)
jnp
fmulp
retf
add
nop
xchg
retf
aas
xchg
lock
cmc
adc
ins
fs
cmp
aam
dec
(bad)
retf
pushf
fisub
das
jns
sahf
add
add
cmp
sub
outs
div
dec
pop
inc
push
dec
push
lock
stc
mov
test
(bad)
xor
stos
sub
mov
outs
xor
xchg
hlt
adc
(bad)
into
movs
dec
sahf
arpl
jg
mov
in
gs
mul
and
pop
ja
sub
lds
cmps
sub
mov
mov
dec
fcomp
jp
fsubr
add
jl
pop
xchg
out
sbb
jle
pop
in
test
mov
retf
in
push
mov
pushf
ret
in
test
inc
mov
and
push
or
in
ins
jbe
mov
mov
adc
sub
cmp
sub
loope
jl
out
mov
ret
pop
sub
cs
ds
xchg
dec
mov
loope
sub
push
call
mov
ficomp
inc
rcr
loop
mov
inc
fdivr
fiadd
inc
push
push
shr
ds
mov
rol
jb
shl
leave
xor
xchg
or
pushf
pop
out
lea
retf
pop
scas
(bad)
push
push
dec
lea
adc
or
pop
pop
arpl
adc
ffreep
adc
jge
lahf
or
imul
dec
sub
in
lahf
lea
jne
push
int
mov
dec
jne
in
mov
shl
cmp
mov
stc
rol
(bad)
sbb
cmps
push
test
ds
addr16
sahf
sar
add
sub
jno
sbb
sbb
bound
daa
stc
icebp
vpmulhuw
js
dec
ss
test
jmp
out
inc
data16
and
in
dec
jp
jbe
fs
add
gs
es
mov
int3
inc
pop
fs
dec
lods
pop
out
inc
(bad)
test
out
add
in
dec
stc
cmp
arpl
jmp
aas
adc
and
add
and
pop
mov
pop
mov
mov
pop
pushf
pop
popf
call
mov
push
sbb
xchg
push
xchg
mov
clc
(bad)
sbb
jo
(bad)
cdq
(bad)
dec
sbb
pop
add
jno
rol
inc
stos
sub
add
lods
jnp
jns
dec
sub
jbe
xchg
xchg
cmp
mov
enter
cmp
(bad)
sub
sub
or
push
(bad)
pusha
repnz
stc
mov
(bad)
mov
stc
(bad)
sub
fcmove
inc
test
or
inc
mov
in
push
aam
xchg
mov
pop
fcom
fldcw
lods
add
push
mov
xlat
pop
sbb
jnp
sub
pop
icebp
fadd
add
adc
mov
(bad)
cmps
in
jo
into
pushf
mov
mov
outs
inc
cwde
add
iret
mov
shl
jns
int3
jmp
push
int
sbb
mov
bound
cmp
push
sub
outs
xchg
and
cld
sub
mov
mov
neg
jecxz
leave
lds
ret
or
outs
pop
pop
nop
add
mov
xor
sahf
mov
pop
mov
pop
dec
pushf
push
xchg
mov
xchg
jno
xchg
out
addr16
js
pushf
cli
outs
outs
call
in
dec
fmul
loop
push
mov
pop
loope
pop
or
mov
cmps
inc
pop
call
or
mov
dec
push
les
sbb
or
cmps
sub
inc
or
dec
jge
xchg
into
cwde
cs
test
pop
fmul
inc
mov
sbb
cs
xor
fidiv
(bad)
mov
loope
gs
add
pop
mov
rcr
jne
test
out
adc
ins
js
push
cld
add
fstp
daa
out
xchg
mov
rcr
sub
repz
neg
dec
push
xchg
cmp
les
cdq
push
ins
(bad)
outs
cmp
sub
mov
xlat
and
xchg
leave
add
adc
ret
cmp
fist
xor
pop
retf
ja
inc
out
mov
popf
fdivr
test
icebp
push
sar
jbe
fcom
(bad)
push
fnstenv
cs
repz
ins
mov
fsubr
dec
sbb
or
push
arpl
pop
jbe
addr16
js
cmps
into
outs
int
in
mov
jne
and
mov
add
retf
pop
int
cwde
sahf
jbe
fidiv
pushf
xlat
stos
fimul
fisttp
pop
addr16
bound
lahf
adc
je
push
ds
add
sar
mov
xchg
mov
push
mov
cmc
push
xchg
retf
or
fwait
outs
fwait
inc
idiv
or
sbb
cld
push
mov
imul
mov
sbb
out
aaa
xchg
div
idiv
inc
in
cmp
pop
sbb
push
test
pop
xor
or
ss
push
adc
add
fist
jg
sbb
iret
call
in
adc
test
cmps
clc
mov
in
jge
(bad)
or
push
pop
in
int
or
sub
mov
in
in
dec
inc
sub
shr
lea
sbb
clc
dec
push
dec
mov
(bad)
retf
xchg
dec
xor
mov
sub
push
js
sub
pop
cdq
sti
and
out
mov
(bad)
cli
in
and
inc
mov
sub
or
fs
jecxz
xor
fiadd
pushf
mov
jno
fnsave
rcl
pop
test
jmp
jmp
sbb
mov
mov
jo
jp
push
sbb
dec
xchg
std
lea
pushf
push
(bad)
je
or
rol
fstp
aas
shl
arpl
jmp
xchg
xchg
jmp
jl
out
hlt
gs
or
jmp
rcr
stc
mov
getsec
in
dec
inc
(bad)
repz
xchg
sub
call
sbb
pop
sti
fwait
movs
ja
je
jnp
pop
jo
xlat
pop
pop
ret
and
repz
in
imul
sbb
js
cwde
mov
in
movs
push
jp
mov
jg
adc
push
cmps
rol
in
popa
jbe
inc
fisttp
cmp
inc
stos
div
xchg
aaa
jo
jle
aaa
push
pushf
mov
jg
or
loope
xchg
push
outs
les
xchg
and
rol
(bad)
aaa
ins
test
mov
dec
sub
iret
xlat
xchg
cmpps
adc
ror
mov
icebp
loopne
push
push
adc
scas
(bad)
adc
add
xor
int3
int3
mov
dec
sar
pop
fucomp
cmp
outs
adc
fsub
xchg
outs
xlat
cs
adc
adc
sahf
mov
and
mov
cmp
rcl
scas
jne
fimul
jl
ss
inc
lods
mov
sbb
pop
and
das
pop
inc
lahf
ins
sbb
scas
push
dec
into
pop
gs
(bad)
stc
sti
pop
mov
pop
stc
sub
lods
cmp
bound
dec
hlt
xchg
and
lods
xchg
fdiv
xchg
pop
test
cmp
cmps
test
inc
inc
dec
inc
mov
fistp
retf
pop
and
outs
mov
daa
int
xchg
xlat
mov
(bad)
jl
sbb
jecxz
gs
rcl
(bad)
pop
loope
adc
loop
and
jmp
xchg
ja
xor
enter
and
sbb
inc
sub
loop
in
mov
cli
pop
fisub
inc
dec
jle
xor
or
jbe
pop
out
push
sbb
adc
ret
(bad)
into
mov
stc
addr16
test
dec
or
bound
push
mov
dec
idiv
sbb
ret
popa
jle
cmp
loope
inc
mov
xchg
ds
les
or
fcmovu
push
add
push
sbb
jmp
and
cmps
test
jne
out
pop
enter
out
push
push
out
pop
and
mov
imul
call
push
test
push
and
push
mov
cmps
pop
inc
or
mov
and
push
ins
xlat
pushf
leave
addr16
scas
in
cmps
inc
dec
test
cld
dec
pop
ins
jge
or
or
std
push
dec
mov
inc
push
test
mov
inc
fwait
jmp
fst
je
mov
daa
aas
mov
pop
xlat
xlat
xchg
cmp
adc
mov
jns
retf
xchg
and
sub
sub
sbb
jl
clc
push
inc
aaa
jmp
sbb
jno
add
retf
loop
pop
cld
push
pop
cmps
cmp
add
mov
fldcw
(bad)
pop
(bad)
sub
mov
je
jle
mov
test
adc
outs
xchg
lock
ffree
pop
clc
cmp
sbb
fwait
movs
stos
jae
mov
adc
xchg
cld
aas
mov
pop
in
ins
aaa
pop
ss
div
pop
xchg
sbb
lock
adc
in
adc
xor
daa
sahf
mov
stc
mov
adc
addr16
cli
cli
pop
call
into
sbb
scas
push
cmp
fs
int3
mov
dec
xchg
mov
mov
adc
(bad)
not
dec
xchg
or
loopne
adc
cmp
or
loope
out
ins
aaa
fld
inc
mov
push
loopne
ss
dec
mov
outs
ret
xor
test
fwait
pop
xor
and
pushf
cmps
jl
inc
xor
adc
adc
pop
imul
push
add
or
dec
mov
les
aaa
mov
das
jnp
int3
ja
add
cmp
jl
pop
out
xor
push
gs
pop
in
mov
xchg
xor
fs
cmp
inc
inc
in
retf
sub
ja
pushfw
pop
fisubr
mov
movs
scas
mov
lods
mov
jmp
jae
mov
push
jne
xor
pop
ins
push
js
jmp
mov
in
sahf
mov
popw
fs
test
retf
xchg
loope
push
adc
and
jle
xchg
aaa
sbb
and
adc
int3
inc
inc
sub
ja
mov
jmp
xchg
inc
mov
dec
jb
and
xlat
ret
(bad)
test
(bad)
or
sbb
or
fadd
dec
jmp
or
xor
ins
aam
(bad)
mov
mov
sub
push
sbb
sahf
or
add
je
and
loopne
(bad)
xor
jmp
in
test
pop
mov
sbb
mov
les
dec
push
in
jbe
xchg
adc
(bad)
mov
fstp
adc
mov
xchg
aas
daa
mov
fsub
es
add
sub
or
cld
jl
adc
test
scas
imul
out
imul
sbb
hlt
ffree
push
inc
test
enter
shl
retf
pop
lea
add
cmps
shr
pusha
jne
fild
dec
mov
push
mov
ins
push
sbb
fs
adc
pop
js
cmps
(bad)
push
cmp
fdivr
inc
adc
imul
stos
cmp
inc
and
pop
cmps
dec
lds
scas
les
jp
lods
xor
sbb
sbb
shl
inc
rol
je
test
xchg
(bad)
jns
pop
(bad)
ret
ins
ja
scas
daa
lahf
xchg
push
pusha
xor
cmp
sub
and
mov
pop
ret
mov
jle
lock
dec
xor
into
mov
shr
mov
mov
lods
push
(bad)
pop
cmp
jg
jmp
movs
mov
sar
mov
inc
test
pusha
lock
cld
ins
push
in
xor
(bad)
outs
xchg
or
mov
(bad)
pop
stc
fisub
cmps
sbb
or
cmps
movs
xor
int
mov
mov
pop
rol
xchg
movs
jg
xchg
jle
mov
and
in
jbe
movs
pushf
out
push
jo
xchg
sbb
ja
addr16
sbb
repz
and
pop
mov
test
hlt
pop
icebp
pop
sub
adc
dec
jl
sub
shl
push
push
aas
xor
mov
mov
test
fistp
in
inc
into
inc
or
dec
iret
mov
pop
loopne
xchg
cmp
xchg
sub
test
stc
dec
adc
(bad)
lods
pop
ret
mov
mov
mov
loopne
pop
pop
sub
shr
into
inc
pop
mov
pop
into
leave
add
(bad)
loope
cmp
pop
inc
ja
shl
jo
sahf
sar
mov
pop
stos
inc
and
lods
loopne
jb
es
fld
jecxz
push
movs
pop
pop
xchg
add
mov
pop
or
bound
push
or
mov
inc
sbb
push
and
push
xchg
out
xchg
out
pusha
shl
inc
retf
pop
popa
bnd
add
pop
mov
pop
cdq
(bad)
clc
xchg
aaa
loop
movs
xchg
scas
xor
int3
aaa
ss
xchg
inc
dec
sub
jl
push
cdq
sbb
loop
push
mov
adc
inc
loopne
shl
cli
arpl
test
add
sub
jle
mov
popf
fdivp
shl
aaa
es
ss
xchg
push
cld
hlt
lods
shr
push
sti
daa
cmp
sbb
push
xor
push
test
push
mov
out
and
inc
leave
xchg
or
xor
das
inc
mov
in
mov
fneni(8087
not
pop
loop
addr16
into
mov
pop
pop
in
sub
in
mov
nop
stc
xor
xchg
pop
xchg
push
stos
mov
jmp
cld
push
push
xchg
jge
cmp
mov
xchg
and
mov
jmp
mov
mov
fld
add
fbld
xor
lahf
inc
out
push
jns
cmp
jns
test
mov
mov
fild
outs
retf
xor
pop
and
imul
test
ret
push
cmp
pop
test
aas
rcr
popf
add
aam
cdq
(bad)
mov
leave
push
test
inc
popf
push
fbstp
and
cmc
mov
aaa
fcom
mov
mov
cmp
das
std
or
sahf
(bad)
idiv
pop
out
dec
in
jns
pop
lods
test
in
sub
jge
rol
stc
pop
sahf
fldlg2
imul
sub
inc
or
dec
mov
fisttp
je
or
pop
pop
fisttp
cld
clc
or
into
call
dec
cdq
pusha
push
test
cmp
imul
not
aaa
xlat
sub
(bad)
aas
test
sbb
gs
pop
sub
outs
call
xchg
mov
rcr
mov
xlat
mov
jbe
mov
cmp
pop
ja
loope
mov
ins
mov
xchg
push
movs
pop
jmp
cli
xor
pop
pushf
(bad)
retf
sub
push
cld
adc
or
add
adc
es
bound
or
je
pop
adc
or
fdivrp
out
call
neg
int
and
dec
dec
sub
loopne
daa
mov
cmp
ins
xor
mov
leave
mov
pop
ins
push
push
lea
xlat
cmp
cwde
jno
repnz
push
pop
mov
jno
inc
push
push
add
test
sub
jbe
shl
mov
xor
fs
mov
inc
jae
leave
push
pop
pop
int
or
jge
shl
cmc
fiadd
add
in
pop
pop
jnp
xchg
or
popa
fs
mov
inc
imul
pop
adc
and
push
push
(bad)
sbb
das
jbe
and
jae
mov
or
arpl
std
sbb
daa
jmp
add
or
mov
dec
out
xchg
sbb
sahf
mov
xchg
ins
sar
jg
cmp
push
inc
push
xchg
cmp
sub
mov
sbb
mov
or
cmp
mov
scas
pop
iret
dec
lock
sub
cld
and
pop
imul
mov
xor
cmp
and
gs
cmc
pop
add
cwde
fisubr
adc
xchg
fldenv
loopne
ret
cmp
mov
sahf
and
inc
ja
fstp
or
retf
in
mov
sub
out
test
xchg
stos
aaa
call
dec
or
aad
xor
cmp
into
fadd
cvtdq2ps
scas
inc
mov
repz
xchg
cld
(bad)
int3
out
std
nop
mov
mov
aaa
pop
in
mov
mov
xchg
not
scas
daa
leave
jno
into
adc
add
sahf
pop
(bad)
mov
xchg
mov
pusha
jno
push
xor
repnz
xchg
out
jbe
test
imul
pop
inc
pop
in
dec
inc
dec
fmul
lahf
fdiv
jmp
cmp
mov
ins
ret
xor
movs
or
and
xor
movs
inc
in
int3
shl
adc
pop
cmp
sbb
pop
sti
shl
mov
(bad)
call
or
scas
out
imul
sbb
xchg
(bad)
jne
jae
sbb
mov
cmp
mov
jg
mov
jb
(bad)
sub
pop
out
xchg
rcr
jns
or
xchg
mov
movs
in
xor
adc
adc
mov
pop
pop
ins
adc
jo
int3
mov
mov
sahf
add
jo
sbb
das
fisttp
adc
enter
aaa
jns
outs
xchg
jbe
dec
jns
ins
out
inc
mov
xor
shr
std
inc
(bad)
push
lahf
mov
push
jne
lahf
pop
jbe
arpl
push
mov
xchg
sub
es
pop
cli
icebp
adc
mov
(bad)
xor
adc
xchg
pop
push
int3
push
into
jle
hlt
fsubr
cmc
adc
dec
es
shl
fimul
lds
or
or
jbe
xor
sbb
(bad)
ror
xor
lods
daa
adc
fadd
mov
pop
or
cmp
jle
inc
dec
lahf
inc
push
iret
cmps
pop
es
add
scas
jae
test
dec
mov
cmp
adc
cmps
inc
fldenv
faddp
ins
ja
cmp
retf
nop
fld
lds
bswap
das
out
dec
shl
and
test
sub
cmp
scas
int3
xchg
out
ins
adc
adc
aad
leave
or
add
ss
add
retf
and
cmp
jne
and
leave
ins
cmp
adc
icebp
mov
dec
test
shl
jbe
ja
push
fldcw
arpl
xor
sbb
ins
mov
outs
stos
sar
(bad)
jnp
pusha
sets
out
mov
push
ins
mov
mov
mov
stos
std
inc
cmp
popf
sbb
xchg
pushf
pop
and
es
jmp
not
xlat
xchg
je
jmp
sahf
aaa
fdiv
push
pop
jne
mov
adc
push
adc
outs
sub
and
call
add
push
daa
int
sbb
rcr
jp
mov
cmp
clc
lods
or
fdivr
loop
in
out
xor
out
(bad)
adc
jp
adc
cmps
lahf
icebp
pop
mov
push
lahf
dec
xchg
and
loopne
jg
xor
mov
aad
push
bound
mov
icebp
xor
(bad)
lods
jge
or
mov
inc
cmps
ins
imul
mov
ja
das
cmp
inc
jge
and
sar
cld
(bad)
mov
xchg
es
call
cwde
fcmovne
inc
pop
into
or
mov
je
cmp
push
push
sub
imul
xor
int
push
(bad)
lods
mov
mov
push
xlat
je
mov
dec
outs
sub
cli
dec
or
in
xchg
fdivr
ja
sub
push
sub
push
mov
retf
cdq
mov
outs
xor
sbb
popf
xchg
shl
call
pop
mov
shr
adc
jecxz
mov
pop
sub
out
fmul
aam
inc
movs
adc
test
add
xor
syscall
ins
fs
js
cmc
(bad)
fmul
fsub
retf
aas
dec
in
sbb
js
js
aad
fist
addr16
neg
dec
test
popf
pop
stos
cmp
je
cmps
retf
and
jns
sbb
or
sbb
outs
call
les
(bad)
push
ja
adc
or
scas
push
add
retf
cmp
test
sub
rcl
sbb
xchg
ss
mov
sub
mov
push
sbb
aad
add
adc
jmp
lods
clc
xchg
stos
xor
pop
xchg
mov
aad
mov
(bad)
shr
and
xor
movs
add
sbb
gs
aaa
(bad)
int
mov
dec
sub
inc
movs
jmp
jbe
das
mov
jmp
(bad)
cmp
gs
jmp
mov
ret
mov
fsubr
int3
pop
mov
mov
les
xlat
in
xor
jb
and
jne
adc
jae
iret
xchg
mov
mov
sub
inc
adc
xor
sti
inc
cwde
cmp
mov
fiadd
mov
and
add
(bad)
aam
scas
addr16
cmc
sbb
cmp
inc
sbb
outs
mov
rcl
sbb
sub
cmp
mov
cmp
mov
cmp
cmp
cmp
xlat
adc
(bad)
int
jl
les
mul
push
xchg
jne
std
call
dec
neg
aam
ret
cmp
mov
icebp
sub
pushf
inc
xchg
aad
daa
das
pop
not
popf
clc
sbb
cwde
js
push
repnz
jb
aad
loopne
movs
mul
and
push
jge
fnsave
cmp
ret
gs
adc
sbb
xlat
movups
mov
fsub
xor
xchg
aam
aam
cmps
jmp
cmp
xchg
or
lods
jl
ins
cmp
cmp
(bad)
mov
xchg
stos
cdq
in
and
cmps
ficomp
movs
xchg
pop
mov
ss
ins
mov
mov
retf
retf
mov
push
leave
push
mov
imul
xchg
jg
adc
ficom
and
cmps
hlt
nop
push
enter
add
pushf
or
pop
fild
sub
enter
mov
pop
sti
fist
add
mov
jg
imul
or
mov
add
dec
mov
shl
sub
inc
mov
pop
jne
iret
neg
add
or
clc
(bad)
jl
xor
fnstenv
pop
ins
jle
or
fbstp
(bad)
das
cmc
mov
sbb
gs
sbb
jns
xchg
cmp
lods
icebp
mov
fisttp
(bad)
jge
movs
cmp
add
pop
outs
jno
aaa
out
jne
jg
fdivr
test
repnz
cmp
or
shr
mov
inc
sub
push
popa
data16
mov
ds
jmp
and
jecxz
push
hlt
xchg
in
hlt
inc
adc
std
imul
cmp
dec
call
fsubr
retf
and
std
arpl
and
jge
cmp
test
test
adc
lods
enter
inc
fmul
daa
es
ds
scas
cmp
adc
cmp
jecxz
and
popa
pop
pop
or
popf
(bad)
and
sub
cmp
sbb
add
fcomp
(bad)
fcmovne
dec
ja
ins
inc
popa
mov
dec
pop
mul
movs
out
(bad)
pop
mov
sub
pop
aaa
out
cmp
dec
mov
mov
aad
dec
add
mov
jge
push
pop
sar
dec
call
mov
call
push
(bad)
mov
dec
pop
mov
(bad)
imul
call
ins
push
mov
fmul
add
adc
test
dec
or
call
dec
(bad)
mov
pop
push
js
push
stos
ret
cmp
cmp
jge
or
aam
and
cmp
xchg
mov
dec
enter
sbb
add
mov
gs
int3
dec
push
jne
adc
cwde
dec
int3
push
push
shl
stos
movs
out
fisub
aas
mov
jnp
les
cmp
pop
sar
inc
dec
sbb
daa
lds
inc
pop
pushf
xor
data16
xchg
lock
popf
xor
mov
mov
and
pop
pop
int
mov
std
cmps
repz
ins
and
push
call
inc
xchg
mov
shr
out
xor
or
loope
(bad)
xor
cs
mul
sub
addr16
faddp
popf
lods
mov
ja
push
xchg
fstp
aaa
cmp
std
stc
mov
xchg
fidiv
outs
pop
xor
and
mov
sub
(bad)
adc
(bad)
cld
aaa
ins
(bad)
int
test
fild
dec
movs
sub
out
or
sub
rcl
sar
popf
mov
jmp
mov
mov
ds
and
add
out
push
adc
sbb
add
add
jo
aaa
adc
jno
jle
popa
cwde
mov
daa
xchg
repz
add
(bad)
mov
je
ror
pop
sub
test
add
int
and
jae
push
retf
or
mov
pop
and
scas
xchg
stos
push
sub
xchg
movs
bound
jmp
inc
leave
cs
rol
xlat
xor
sub
mov
ret
xchg
enter
aaa
mov
inc
nop
pop
ss
inc
sbb
sahf
mov
and
cld
arpl
sub
mov
sub
ja
fistp
push
mov
pop
addr16
sbb
dec
fsin
sub
inc
imul
mov
loop
call
cdq
es
adc
dec
cmp
and
pop
std
jp
inc
hlt
retf
cli
mov
cmps
jnp
add
cmp
(bad)
stc
xor
adc
lock
xchg
lods
pop
fild
retf
lds
fimul
fdiv
shl
scas
xchg
retf
nop
push
inc
mov
(bad)
cmc
int
repz
mov
in
je
and
f2xm1
jg
mov
les
in
pushf
adc
clc
jge
pusha
push
pop
pushf
mov
shl
xchg
test
or
aam
and
div
inc
sub
ja
cmps
scas
fmul
out
out
(bad)
mov
les
daa
stos
sub
sub
mov
pop
inc
dec
fidivr
mov
xor
mov
xchg
pop
add
icebp
(bad)
enter
imul
push
xlat
stc
lock
ficomp
test
xlat
fmulp
pushf
scas
mov
cmps
adc
test
dec
jno
in
add
sbb
fdivr
je
pop
mov
clc
pop
dec
push
push
mov
sub
xor
mov
lahf
fs
pop
or
push
inc
lods
fwait
jns
ret
adc
repz
sub
jbe
lea
addr16
nop
mov
mov
sahf
and
loopne
ins
es
js
js
xchg
ss
ss
loopne
(bad)
ins
(bad)
mov
out
add
mov
into
xor
ds
lods
loopne
xor
fs
and
mov
and
dec
sbb
push
call
xlat
and
xor
aaa
fld
push
daa
into
or
shl
int3
xor
in
(bad)
jge
cmps
inc
scas
retf
sbb
daa
out
mov
jb
add
cmc
pop
mov
mov
mov
inc
imul
adc
push
push
test
test
ss
push
and
js
fisub
fisub
rol
jmp
or
pop
jge
pop
popf
pop
leave
jnp
add
adc
jg
std
or
inc
cmp
mov
and
lahf
(bad)
dec
mov
out
lea
push
push
fadd
fbstp
jbe
repz
adc
jecxz
in
aaa
out
hlt
sbb
jecxz
out
mov
loopne
int
les
ss
cmp
mov
ffreep
stc
ins
jae
arpl
scas
add
cs
les
mov
into
jbe
fwait
xchg
sbb
inc
adc
pop
jne
adc
and
repz
xlat
lock
or
add
lea
lds
inc
(bad)
aaa
push
or
or
jmp
or
inc
pop
add
in
mov
fisubr
fisubr
inc
mov
cmc
push
(bad)
push
nop
shl
xor
push
(bad)
xor
not
loope
cmp
dec
adc
je
pop
std
loopne
xchg
popa
jno
enter
jp
pop
add
dec
scas
sub
mul
imul
inc
adc
jecxz
xor
pop
xchg
fnsave
std
cmp
int3
sub
mov
hlt
mov
inc
cmp
dec
fadd
ins
(bad)
call
pusha
adc
test
mov
xor
test
mov
rcr
nop
pushf
retf
mov
xor
dec
inc
(bad)
mov
out
ds
outs
cmp
lods
pop
inc
(bad)
xchg
and
inc
and
inc
call
push
ins
cmps
jp
sbb
dec
push
push
mov
leave
adc
pushf
fs
aad
mov
adc
adc
cmp
mov
push
aaa
(bad)
push
lds
scas
ror
mov
test
hlt
add
(bad)
in
jecxz
sub
mov
cmp
or
push
inc
adc
jmp
ss
out
popa
xchg
js
fsubrp
ja
inc
mov
ins
sub
imul
test
loop
aaa
pop
and
pop
jbe
xchg
xor
xchg
jns
clc
add
add
enter
test
cld
rcr
inc
or
xchg
mov
mov
push
in
pop
bound
mov
dec
int3
mov
mov
das
(bad)
xor
or
pop
mov
cdq
cld
add
or
pop
sbb
push
fwait
ins
repz
lock
mov
inc
test
lds
movs
cli
ds
pop
sbb
movs
xor
inc
popf
cmp
out
icebp
je
sub
mov
cmp
in
pop
xchg
or
pop
jns
bound
xchg
push
cmp
jbe
inc
icebp
pop
jmp
jle
pop
ror
test
(bad)
xlat
pop
pop
jg
nop
ds
lahf
fs
inc
push
in
mov
push
cdq
or
mov
or
pop
leave
xchg
maxps
xchg
ret
lahf
ins
pop
(bad)
(bad)
int
adc
int
mov
push
mov
jle
or
pop
jg
pop
(bad)
jae
sahf
sub
jbe
fmul
xor
ins
rol
nop
dec
jle
cmps
ficom
inc
add
sbb
lods
ja
add
fistp
dec
es
push
jae
loope
call
inc
xor
in
stc
or
pop
or
outs
int
imul
xchg
or
dec
ret
mov
arpl
cli
pop
cmps
sub
scas
movs
mov
mov
lock
mov
lods
lds
dec
shr
dec
push
push
xor
xchg
aam
cs
iret
pop
jl
js
das
(bad)
or
cmps
ret
inc
pop
jbe
test
xor
add
loop
xchg
mov
stc
mov
xchg
add
js
cmpps
jp
xchg
xchg
test
or
sub
pop
pop
push
int3
loopne
xchg
dec
lea
xchg
fadd
or
pop
es
or
dec
adc
mov
jl
cmp
in
nop
cmp
jg
lahf
scas
cmc
std
mov
pop
lea
add
ins
jecxz
loop
imul
push
stos
inc
mov
das
fwait
push
data16
out
adc
fwait
xor
retf
fcomp
xor
ins
bnd
sub
add
mov
jb
sbb
imul
jle
cwde
call
(bad)
xor
inc
and
fs
ffreep
(bad)
ja
sti
pop
mov
es
ss
mov
(bad)
adc
lahf
pop
dec
pop
or
cmps
js
shl
and
mov
and
or
(bad)
pop
jns
adc
mov
(bad)
stos
pop
push
les
frstor
mov
mov
ss
jno
leave
xor
mov
jo
adc
push
(bad)
cmp
sar
push
into
aaa
mov
gs
movs
mov
push
ins
or
out
into
pop
xchg
mov
sub
stos
fistp
or
das
adc
fdivr
jg
jns
retf
adc
jecxz
xchg
ins
test
pushf
jmp
cld
jno
jecxz
int3
ror
cmps
sub
jnp
repnz
mov
cmp
ins
sub
mov
xchg
dec
cmps
imul
xlat
(bad)
push
cmp
pop
ret
xor
xchg
xchg
sub
iret
inc
cdq
inc
pushf
dec
sti
jbe
add
lea
push
mov
aad
sbb
aam
mov
rcl
repnz
fwait
xchg
mov
lods
add
mov
pop
or
leave
ficomp
add
not
test
xor
stc
pop
frstor
les
xlat
push
shl
jmp
pushf
push
or
daa
nop
fnstcw
mov
mov
lods
sub
inc
repz
shld
hlt
cwde
add
stc
loope
popa
pushf
sbb
scas
int3
test
add
movs
bnd
loopne
pushf
out
mov
movs
xchg
test
mov
fisubr
nop
call
mov
mov
adc
outs
test
pop
test
mov
inc
enter
jnp
cmp
pop
cmp
mov
aam
fmul
mov
adc
sbb
mov
mov
xlat
cs
(bad)
pop
neg
jns
ins
xor
(bad)
(bad)
pop
out
cmp
mov
(bad)
fadd
cmp
inc
std
push
ja
xor
jns
rol
jmp
xchg
xchg
das
mov
mov
and
sbb
fiadd
imul
xchg
cmp
or
add
sahf
data16
jbe
bound
sub
in
xor
push
enter
(bad)
sub
addr16
call
lods
rcl
int3
(bad)
das
je
stos
cmp
bound
fsubr
jmp
lds
retf
sub
adc
mov
cmp
mov
pop
jo
stc
in
aas
and
mov
and
adc
dec
aad
lds
sti
sti
sub
test
and
sahf
sbb
xchg
pushf
cmps
xchg
add
cmps
fsub
int3
push
ins
int
jle
jne
push
add
int
push
mov
dec
ja
xor
data16
add
or
pop
xor
or
inc
jge
clc
push
les
jns
and
cmp
nop
pop
xlat
push
stos
fs
daa
sub
inc
retf
retf
inc
in
(bad)
sar
js
adc
outs
aas
cmp
adc
push
stos
and
and
push
add
shl
push
jae
pop
adc
lods
ja
(bad)
or
in
push
xlat
iret
jle
cwde
pop
and
push
sbb
inc
imul
(bad)
push
push
xchg
lods
(bad)
xlat
and
mov
xor
jbe
push
dec
bound
ss
mov
and
iret
xchg
xor
dec
sbb
cmps
pop
push
int
and
sbb
ja
sub
mov
(bad)
fdiv
ret
pmuludq
mov
xor
out
lds
jnp
data16
stc
sbb
mov
imul
cld
cmp
sub
adc
mov
inc
lods
imul
sbb
or
iret
jnp
push
mov
inc
mov
pop
addr16
scas
or
test
outs
mov
(bad)
pushf
fld
jns
pusha
sub
pop
int
out
leave
jbe
test
jmp
(bad)
push
adc
test
xor
push
xchg
lahf
xor
sub
and
jb
mov
in
fist
or
jne
outs
in
jnp
or
mov
jbe
jns
outs
and
and
pop
sub
cmp
sbb
mov
(bad)
pop
(bad)
out
add
data16
mov
inc
mov
stc
data16
push
or
aas
leave
fdiv
cmp
mov
pop
daa
mov
in
jbe
or
mov
mov
and
xor
mov
out
lods
pop
pushf
(bad)
mov
pop
sub
inc
adc
stc
sub
mov
aam
xor
fstp
xlat
push
setb
fstp
repz
sbb
nop
pusha
adc
push
jecxz
xor
jl
inc
push
dec
jecxz
inc
ret
out
movs
fadd
cmp
sti
sub
push
xlat
repz
retf
or
push
call
repz
jns
pushf
mov
and
shl
sub
hlt
push
push
sub
sar
lds
cld
retf
iret
(bad)
jbe
pop
dec
pop
pop
jp
repz
fist
enter
int
jle
and
jl
or
stos
out
mov
cmps
dec
(bad)
test
push
rcl
pop
in
push
jl
add
cmp
out
pop
das
iret
mov
inc
mov
lds
and
jo
push
lea
jbe
push
fnstcw
add
shr
pop
xchg
arpl
push
xor
or
in
loope
dec
je
or
ds
jns
push
cmp
fstp
sub
cmp
imul
sar
pop
in
xor
ins
int3
fcmovb
je
sahf
dec
cld
mov
add
fbld
mov
out
dec
xchg
mov
fidivr
pop
or
ficom
or
xchg
push
inc
xchg
out
mov
aas
xor
dec
mov
in
pop
xchg
(bad)
pop
fst
mov
jge
ret
mov
repnz
or
mov
add
sbb
leave
outs
xchg
fdiv
mov
mov
cmp
imul
and
jb
ds
rcr
jnp
pop
sub
and
push
or
or
out
iret
sbb
ret
mov
xor
cmp
sub
mul
retf
movs
mov
adc
pop
(bad)
ret
arpl
inc
(bad)
gs
int
smsw
pop
dec
ins
xlat
leave
retf
inc
dec
aam
scas
pop
sub
adc
fild
sub
test
daa
pop
inc
pop
sbb
cmp
mov
ja
mov
add
dec
mov
fimul
mov
add
cld
movs
shr
in
rcl
fbld
ss
inc
mov
sar
lods
mov
jl
pop
hlt
dec
dec
popa
mov
mov
(bad)
rcr
fld
pop
lods
(bad)
cmp
rcr
mov
mov
dec
inc
fiadd
cdq
pop
mov
add
retf
(bad)
shl
es
hlt
sub
xor
push
xchg
je
xchg
popa
ss
movs
jnp
out
test
aaa
jecxz
xlat
xchg
pusha
ret
pop
stc
sbb
push
scas
inc
sub
xlat
pop
call
fst
inc
test
jne
fimul
sub
aaa
xor
fisttp
sub
in
out
mov
ret
stc
pop
repnz
je
into
enter
jge
jg
inc
and
and
aam
push
test
movs
jge
cmps
push
stc
les
daa
sbb
aas
mov
inc
and
jae
addr16
jns
dec
pop
jecxz
pop
mov
mov
out
inc
pcmpeqw
or
mov
push
sbb
xor
xchg
xchg
cmp
or
jmp
loop
sbb
or
mov
aam
aas
shr
xchg
mov
sbb
sbb
test
sbb
xchg
dec
lds
bound
mov
sete
add
xchg
mov
xchg
and
ret
sub
jo
adc
mov
fwait
dec
repz
push
adc
pop
out
(bad)
mov
cld
scas
repz
hlt
push
fcom
jmp
pop
or
(bad)
lea
push
pop
inc
dec
ret
test
jno
dec
cmps
cmp
push
or
xchg
test
xchg
cmp
pop
jns
out
jbe
add
dec
ror
add
pop
cmc
push
sbb
mov
jo
ja
jb
jecxz
mov
cwde
jb
xor
shl
xchg
cmp
outs
arpl
stos
out
xchg
(bad)
rcl
lods
leave
sub
pop
jg
adc
data16
mov
retf
in
ror
add
push
repz
mov
ja
out
out
adc
cmp
repz
and
sub
jnp
push
mov
clc
and
xchg
imul
jg
pop
or
jns
les
cmp
(bad)
jle
sub
jne
push
or
pop
sbb
xor
fild
ficom
sbb
adc
mov
sbb
mov
scas
lods
jle
pushf
mov
stos
jge
mov
mov
popa
lea
add
pop
rol
jmp
pushf
push
mov
data16
push
or
das
sub
stos
cmp
jnp
aaa
xchg
(bad)
jo
or
scas
stc
(bad)
push
ins
lahf
fisttp
stos
sbb
aas
sub
pop
jle
push
mov
mov
cmp
hlt
pop
mov
out
dec
in
inc
cmp
in
inc
push
es
je
push
jns
dec
push
or
(bad)
js
pushf
fisttp
jo
push
repz
aam
or
(bad)
retf
dec
push
ins
into
jno
in
cwde
dec
dec
mov
test
mov
cmp
inc
int3
je
xor
push
call
dec
shl
movs
push
fist
xchg
add
mov
inc
inc
jae
mov
dec
(bad)
mov
adc
and
xchg
daa
inc
push
cli
mov
pop
adc
jns
je
mov
mov
pop
call
lds
push
xchg
inc
(bad)
out
pop
fisttp
jg
inc
ficomp
xchg
les
inc
lods
jae
(bad)
lahf
push
push
cmps
les
or
in
pcmpeqb
out
(bad)
mov
cmp
fadd
out
jmp
mov
retf
cmps
mov
push
mov
cld
sub
inc
ror
and
in
mov
mov
movs
xchg
mov
shl
jle
test
pusha
(bad)
jnp
inc
rcl
jne
fbstp
push
xchg
xor
mov
in
movs
cmps
cmp
push
sbb
jb
ins
addr16
xchg
int3
mov
pop
(bad)
lds
dec
jge
(bad)
mul
in
bound
xor
push
add
inc
sub
xchg
push
inc
cs
or
or
rep
loopne
or
and
shr
add
cmps
or
cmp
(bad)
sti
cmp
aad
xor
inc
pop
hlt
int
xchg
out
scas
outs
fcmovne
ds
fsub
sbb
cmp
or
cld
clc
(bad)
adc
jno
xlat
sub
sub
jnp
jecxz
sub
jg
imul
mov
or
stc
ret
adc
xchg
mov
sbb
jno
enter
and
xlat
cmp
pop
pop
call
out
inc
lea
popf
pop
pop
push
cmp
mov
cmps
cmps
and
dec
int
cld
mov
mov
sub
mov
fistp
mov
cmp
scas
add
ret
in
adc
jne
sbb
sub
and
jg
or
(bad)
dec
mov
rol
lods
ja
cmp
sub
and
loope
(bad)
aaa
icebp
js
pop
mov
hlt
outs
aam
cmp
nop
fnstsw
outs
test
(bad)
cmp
push
outs
(bad)
lea
pop
iret
and
daa
mov
gs
xchg
in
sub
stos
cmp
call
lods
sbb
sbb
mov
dec
pop
dec
daa
xchg
ud0
or
inc
pusha
inc
enter
mov
adc
gs
cmc
movs
push
int
ss
icebp
pop
shr
imul
pop
xchg
lahf
xchg
popf
fsubr
stos
push
test
ss
popa
sbb
imul
jmp
test
stos
call
xchg
hlt
outs
sbb
jns
cmp
jl
repz
pop
add
scas
leave
test
shr
fadd
pop
lods
xchg
je
aas
ret
pop
sar
jb
pushf
ret
pushf
stos
loop
mov
dec
sub
lods
ret
adc
in
popa
dec
jl
push
inc
pushf
and
fdivr
pop
mov
inc
ss
cmp
xor
pop
sub
div
mov
aad
add
hlt
ss
pop
cdq
adc
pushf
add
jo
aaa
push
out
xor
enter
add
xchg
pop
and
into
out
jb
pop
aaa
cwde
out
and
test
lock
movs
jb
sbb
adc
add
iret
xor
mov
dec
mov
(bad)
repz
out
xchg
pop
sbb
adc
call
out
inc
adc
cmp
out
daa
jge
or
aas
in
pop
fisub
pop
int3
inc
mov
gs
ja
push
or
repnz
xchg
data16
std
xchg
fidiv
inc
or
mov
jge
jg
jae
and
mov
out
loope
(bad)
dec
jl
cmp
cli
mov
(bad)
fcmovb
mov
cmp
lock
xchg
popf
les
icebp
cli
push
pushf
popf
mov
cs
popf
addr16
lahf
fisttp
mov
adc
jl
jge
sub
mov
jno
push
lock
pop
xlat
pop
mov
daa
add
pop
inc
jnp
pop
rcr
daa
add
mov
neg
rol
fnsave
retf
out
jge
data16
mov
test
stos
push
outs
ins
jge
pminsw
jo
adc
js
hlt
fsubr
retf
push
sub
ins
cli
jns
mov
or
nop
daa
fwait
jbe
mov
lea
lods
push
(bad)
aam
inc
test
push
sub
into
xchg
jg
cmp
imul
lods
mov
es
inc
push
adc
jbe
call
xchg
stos
dec
xor
mov
or
es
rcl
push
sbb
fyl2xp1
add
imul
sahf
aaa
or
idiv
inc
adc
inc
data16
sbb
mov
stos
out
xor
mov
push
and
dec
pop
mov
mov
(bad)
jg
sub
jbe
neg
(bad)
hlt
mov
aad
inc
mov
and
aam
sahf
mov
sub
out
push
cmps
test
xchg
ss
scas
das
sar
mov
sbb
xrelease
pop
fadd
call
push
test
dec
pop
lds
adc
mov
repnz
jbe
cmc
in
pop
push
push
aam
pusha
test
push
lods
adc
mov
or
xlat
cmc
xchg
xchg
mov
and
movs
inc
sub
mov
movs
in
or
lods
aas
pop
mov
lods
or
xlat
mov
leave
imul
mov
clc
es
neg
push
xchg
xchg
outs
and
cmp
movs
sbb
or
xchg
or
xchg
mov
out
clc
jns
pop
pop
pop
inc
sbb
ror
cmp
xor
test
stos
inc
int3
(bad)
mov
jle
and
push
inc
rep
mov
cld
jbe
xor
mov
mov
retf
aad
sbb
xchg
call
jecxz
(bad)
cmc
jg
mov
sub
shl
addr16
pushf
xor
neg
int3
(bad)
jle
(bad)
repnz
cwde
dec
das
addr16
out
shl
dec
cld
fadd
call
mov
out
cmps
mov
cmps
push
xchg
dec
mov
jle
in
les
mov
test
and
push
call
dec
add
ss
mov
mov
adc
cld
xchg
sub
mov
xlat
add
(bad)
pop
pop
jne
sar
adc
xor
bound
adc
enter
(bad)
out
pop
mov
pop
sub
add
push
and
xchg
hlt
cmc
push
xchg
call
xchg
repz
fs
sti
cs
lods
in
call
aas
xor
mov
retf
mov
test
or
jg
addr16
and
popa
mov
outs
dec
xchg
loop
(bad)
sub
mov
dec
fmul
dec
inc
aad
add
pop
mov
jmp
rcl
mov
cmps
stc
ds
dec
icebp
push
inc
daa
cmp
ret
lods
sbb
inc
cld
sbb
xor
inc
xchg
xchg
xchg
mov
stos
jae
or
pop
lods
outs
ss
xor
call
lgs
aaa
push
daa
ret
mov
push
mov
sbb
test
fild
and
test
sbb
pop
lods
dec
xchg
(bad)
push
cs
push
clc
push
jne
adc
add
cmp
adc
pop
mov
(bad)
aas
mov
or
mov
scas
pop
movs
test
dec
push
ins
aas
in
not
scas
and
loope
jl
enter
mov
mov
push
cld
ins
pop
push
ror
add
xchg
rol
out
sub
daa
std
call
inc
(bad)
addr16
mov
cmp
loop
lahf
aad
jmp
mov
das
sahf
push
mov
imul
aad
sub
fwait
daa
or
clc
inc
xchg
ins
ret
push
push
adc
cld
in
retf
and
(bad)
cmc
hlt
or
imul
mov
(bad)
std
cld
mov
out
es
iret
mov
in
hlt
push
mov
sar
xor
jmp
in
cli
cli
sub
dec
les
loope
push
in
int3
xor
imul
xchg
cmp
push
fs
retf
sub
ja
mov
call
(bad)
cmp
int
lea
outs
jb
push
int
popf
pop
mov
pop
je
xor
sub
loope
mov
mov
and
or
(bad)
addr16
cmp
out
push
jo
aad
jl
mov
push
or
and
rcr
dec
jno
adc
pop
sbb
les
adc
ja
and
sar
jp
enter
aam
mov
pop
sbb
ret
shr
shufps
mov
xchg
lods
sub
mov
fcomp
loopne
cld
outs
mov
lods
mov
fistp
js
sahf
and
mov
push
test
popf
inc
pop
mov
test
in
std
ja
sti
xchg
(bad)
cld
arpl
cmc
inc
neg
retf
jb
and
js
and
mov
int3
sar
or
lods
daa
loope
or
xchg
int3
pop
sbb
imul
jl
sbb
inc
sbb
rep
sbb
div
xchg
scas
mov
bound
pop
pop
ret
out
jno
push
arpl
inc
or
(bad)
ret
push
or
mov
cmp
mov
das
lea
pop
xor
inc
dec
outs
jp
fsub
fst
xlat
sar
je
shr
dec
add
int
loopne
pop
fistp
sar
jns
push
sbb
and
jl
pop
(bad)
aam
mov
xor
div
retf
aaa
ins
lahf
ror
sub
cmp
test
xor
lahf
std
vpcomud
addr16
sbb
lahf
mov
xchg
lahf
mov
outs
jb
cld
add
neg
push
shl
fidivr
loope
inc
cmp
fcmovnb
out
jecxz
pop
outs
jmp
inc
push
call
call
ret
mov
cmc
add
enter
ss
jno
(bad)
sub
mov
jge
ins
leave
sub
imul
jecxz
mov
(bad)
push
jo
mov
jmp
cmp
dec
movs
mov
cmp
sbb
fist
popf
push
push
jo
sub
fdiv
mov
addr16
mov
sub
ins
jp
mov
fwait
inc
mov
sahf
sbb
adc
jl
mov
sub
xchg
xchg
add
inc
jmp
xor
xor
popf
add
scas
ins
fisub
jbe
dec
pusha
retf
ds
push
cli
ja
add
cmp
rcr
xlat
clc
not
outs
in
push
inc
test
(bad)
fdiv
addr16
idiv
inc
int
cld
jae
bound
loopne
mov
pop
dec
adc
fwait
push
mov
retf
inc
out
dec
sub
adc
xchg
test
jb
sub
bound
shr
jmp
or
sub
fwait
sbb
xchg
mov
xchg
shl
push
mov
mov
leave
mov
cmps
cmp
int
xchg
lahf
push
adc
xchg
in
xlat
int
ds
pop
dec
jmp
xor
mov
sti
push
or
ds
push
xchg
ins
mov
cld
or
mov
(bad)
aam
shl
sub
add
xor
mov
lock
and
adc
jbe
mov
dec
add
or
add
fmul
div
sub
stc
pop
mov
mov
push
lods
sub
push
(bad)
adc
sbb
ja
loop
imul
out
neg
push
cmp
(bad)
cmps
movaps
int3
pop
out
xor
out
xchg
adc
mov
iret
mov
fadd
mov
jbe
add
or
push
mov
je
jl
(bad)
out
in
fadd
sbb
lds
inc
lods
sub
jmp
lods
cmp
mov
lods
call
mov
ins
lods
jecxz
mov
push
dec
(bad)
mov
mov
not
push
dec
cli
mov
scas
xor
das
mov
and
je
dec
jle
pop
mov
mov
cli
imul
dec
adc
mov
xchg
rcr
and
or
inc
ins
mov
ss
cmps
(bad)
sbb
ss
pop
rol
or
mov
pop
push
mov
mov
push
push
jo
xor
cmps
dec
mov
es
lock
(bad)
xchg
add
pop
sub
lods
jle
sbb
lods
lods
jae
icebp
dec
jg
mov
or
and
es
ror
(bad)
jg
or
xchg
sbb
pushf
and
stos
loope
(bad)
mov
ret
pop
jb
push
xor
retf
ficom
add
enter
mov
clc
lods
sub
cli
mov
leave
int
rcr
shl
and
sar
cmps
ins
sbb
mov
mov
nop
movs
xlat
(bad)
mov
push
pop
clc
outs
add
or
neg
push
loop
pop
dec
and
mov
dec
repnz
je
gs
cmps
ja
(bad)
(bad)
je
les
daa
push
mul
pop
repnz
cmc
add
out
out
pop
lods
push
stc
inc
add
enter
repz
je
call
rcl
cmc
outs
inc
add
lahf
push
mov
daa
lods
dec
adc
inc
(bad)
ja
cmp
jmp
xor
out
cmc
out
cmps
out
inc
cld
pop
rcl
pusha
cmps
daa
call
xor
cdq
std
jp
in
enter
in
imul
and
imul
and
add
ja
sub
outs
(bad)
out
push
cmp
add
fcmovnu
jnp
xchg
das
in
add
aaa
pop
call
cld
in
ins
pusha
mov
test
pushf
xchg
xchg
mov
enter
and
push
xchg
repnz
push
mov
xchg
jecxz
xchg
adc
push
xchg
xor
pop
mov
retw
scas
fcom
inc
mov
aad
push
mov
xchg
mov
cwde
pop
mov
int
out
ss
push
xor
or
in
call
inc
ss
test
jmp
xchg
inc
xchg
in
inc
mov
shl
iret
mov
sbb
ja
std
in
call
lods
push
mov
pusha
jnp
mov
xchg
add
movs
lock
jo
or
aas
(bad)
pusha
add
inc
and
fwait
mov
cli
push
xchg
lods
xor
adc
mov
cmps
popf
loop
mul
push
mov
cmp
clc
mov
out
retf
popf
jae
or
loop
dec
lds
sbb
fst
mov
or
mov
scas
jnp
ja
push
lods
xor
sbb
je
push
call
xor
or
push
sti
adc
bound
cmps
jg
fwait
and
cmp
mov
jp
push
sub
loope
mov
fpatan
aaa
nop
add
(bad)
or
sbb
adc
lods
cmp
lea
push
pushf
push
jno
outs
ja
mov
je
mov
out
fist
xchg
fs
pop
dec
aam
repz
(bad)
(bad)
es
or
lock
mov
sub
jne
fldenv
fsubrp
mov
arpl
js
test
repnz
dec
pop
mov
shr
push
mov
push
iret
mov
add
xchg
sub
pop
arpl
movs
fucomi
out
pop
gs
gs
sub
stos
es
push
dec
fistp
xchg
xchg
fs
push
data16
nop
pop
rcl
bound
test
mov
cmp
dec
daa
mov
or
pop
aaa
inc
in
stos
fxch
ins
js
jp
addr16
rcr
out
sbb
loope
push
into
pop
push
imul
inc
movs
enter
fimul
cwde
jnp
xlat
pop
int
mov
out
in
shr
pop
lods
xlat
mov
inc
std
xlat
scas
jns
imul
sbb
xchg
mov
pushf
test
mov
fsub
adc
out
xchg
pop
call
fnsave
lahf
std
or
daa
adc
leave
fcom
xchg
jb
cmp
(bad)
mov
inc
push
push
jg
inc
inc
cmps
hlt
or
bswap
ror
loopne
or
jecxz
cs
scas
jl
jbe
sti
pop
mov
mov
dec
int
push
aas
test
fnsave
mov
shr
mov
xchg
inc
not
retf
pop
scas
adc
or
xlat
push
int
iret
pop
cld
adc
dec
movs
jno
enter
push
aam
dec
es
mov
sahf
call
outs
or
and
push
mov
jl
push
pop
dec
jp
mov
inc
data16
dec
mov
shr
lods
xor
scas
les
pop
scas
sub
inc
shl
iret
(bad)
jg
pusha
test
les
adc
outs
out
push
or
mov
pop
xlat
mov
adc
daa
cli
jnp
push
(bad)
pop
clc
imul
xchg
dec
inc
mov
aam
(bad)
or
ret
leave
iret
add
mov
mov
ja
mov
mov
add
xlat
dec
in
push
xchg
adc
push
pop
sbb
mov
pop
gs
jl
pop
out
int3
push
imul
push
movs
cmp
add
aas
(bad)
mov
pop
cmp
es
push
jmp
out
sbb
and
dec
xor
fs
xchg
sbb
jg
cmps
inc
xchg
mov
(bad)
mov
int
or
xor
mov
jecxz
add
fist
(bad)
ins
addr16
repz
out
push
int3
pop
mov
mov
ror
popf
inc
push
leave
lods
jmp
in
pop
repz
mov
imul
cmps
nop
or
sbb
push
sbb
push
in
gs
jle
out
repz
out
xor
dec
or
loope
movs
xadd
push
adc
imul
fadd
pop
and
mov
popa
cmp
retf
jo
add
pop
cmp
movs
mov
int3
test
mov
add
ja
pop
inc
fistp
xor
retf
add
fdiv
hlt
bswap
addr16
sbb
cld
mov
mov
sti
push
mov
mov
lea
and
(bad)
cmp
or
fdivr
jb
or
push
les
xor
cld
scas
xchg
cli
shr
mov
imul
and
fistp
xor
ins
sub
mov
xchg
cmp
sub
dec
idiv
ror
cmove
xchg
adc
push
xchg
pop
adc
mov
cmps
nop
mov
mov
sub
and
fld
mov
cmp
sahf
jmp
push
inc
fld
pop
ins
lods
setbe
cmp
sbb
imul
add
imul
adc
sti
mov
into
jno
retf
out
mov
cld
xor
lods
jl
and
pusha
and
jp
push
xchg
daa
cmp
es
repnz
test
dec
sub
in
ins
mov
sahf
inc
retf
and
test
inc
sub
jnp
xrelease
and
nop
adc
out
add
ret
and
or
xor
mov
xchg
or
jmp
shl
xchg
dec
cmps
pushf
frstor
movs
mov
mov
pop
je
test
or
pop
jecxz
call
and
push
fnstcw
mov
jl
iret
push
mov
push
imul
retf
cs
in
aaa
jne
push
test
out
cdq
add
ja
inc
or
daa
xchg
movs
jae
pop
test
push
imul
jp
jb
mov
push
lods
div
cmp
stc
popa
mov
adc
mov
popf
adc
je
lods
and
test
dec
or
pop
sbb
push
or
out
cmp
mov
ret
(bad)
aam
sub
sbb
push
in
and
mov
mov
popa
mov
arpl
outs
(bad)
push
mov
cmps
adc
in
shr
ja
enter
cld
cdq
jnp
sub
aas
es
jno
(bad)
adc
mov
cli
(bad)
nop
daa
adc
int3
enter
mov
aas
jl
pop
mov
sub
aaa
inc
loope
(bad)
(bad)
(bad)
fnstenv
jl
cld
imul
les
sbb
and
add
(bad)
pop
or
cmp
push
adc
jns
retf
retf
daa
jno
les
ret
mov
jbe
outs
jmp
fstp
fsubr
mov
repnz
jmp
clc
idiv
adc
lea
push
cmps
or
cmp
add
inc
js
lds
fstp
dec
out
xchg
fsubp
sbb
jmp
pop
je
out
scas
stos
mov
jo
adc
or
cmp
aad
addr16
add
mov
sub
in
xor
shl
add
into
fsubr
xchg
cmp
xchg
in
mov
sub
std
fs
add
shl
mov
push
(bad)
les
call
jne
retf
scas
dec
xchg
add
jno
push
push
(bad)
(bad)
jmp
xlat
int3
add
rcl
dec
jne
bound
mov
push
int
mov
mov
retf
pop
out
lahf
das
arpl
in
fbld
stc
mov
dec
call
addr16
inc
jge
fisubr
xchg
xchg
lods
int
cmps
les
and
push
rol
mov
jbe
mov
sub
mov
sahf
xchg
sbb
(bad)
jmp
jns
out
cmp
lods
fsubr
dec
xor
xchg
aas
loop
movs
xor
movs
or
xor
cld
dec
inc
ficomp
cmps
outs
fcomp
mov
jp
xlat
dec
fisubr
rep
loope
loop
push
mov
in
mov
sbb
sahf
xor
fld
push
outs
lods
jne
popf
xchg
es
pop
pop
test
push
mov
call
dec
jl
xor
dec
cmps
mov
fld
leave
and
div
cmp
mov
sahf
and
sub
mov
mov
(bad)
in
add
das
sub
rcr
push
outs
xor
jmp
push
jmp
add
call
fisttp
push
test
jo
mov
jo
mov
pop
data16
xor
mov
mov
les
jmp
dec
xchg
xor
xor
lods
pop
(bad)
pop
dec
cmp
ss
push
int
fst
dec
iret
push
fstp
sbb
add
jl
lods
jbe
xchg
(bad)
adc
and
add
sub
sub
sub
mov
dec
aam
xor
xlat
fiadd
dec
xchg
call
add
cmps
fmul
(bad)
and
dec
sub
lea
std
mov
shl
cli
mov
pop
icebp
loop
dec
xchg
test
add
dec
cmp
lahf
jmp
lea
sub
cmp
enter
mov
mov
int3
and
(bad)
popf
jo
mov
jle
in
std
mov
cld
push
sbb
fucom
xor
dec
imul
das
daa
sar
popa
xor
pop
fidiv
or
std
jnp
cmc
cmc
add
test
(bad)
sub
lods
adc
into
cmp
imul
jecxz
test
sbb
lds
push
das
jmp
xchg
adc
and
mov
push
cld
xor
or
push
jmp
push
jne
jp
cld
mov
jg
fisub
outs
das
cld
jb
push
popf
or
cmp
mov
out
bound
js
and
inc
cmps
jg
outs
ja
inc
std
jmp
inc
mov
fistp
pop
shr
rcr
cmp
mov
dec
adc
rcl
stos
ds
inc
test
xor
push
fwait
std
fmul
aad
aas
lods
in
or
mov
or
lods
shr
jmp
sub
idiv
retf
xchg
xchg
xchg
ja
cwde
sar
jmp
(bad)
call
push
imul
mov
popa
adc
int3
dec
mov
jbe
xchg
enter
jp
sbb
xlat
cmps
(bad)
pop
out
(bad)
mov
lahf
sbb
xchg
enter
push
mov
stos
and
bound
outs
mov
in
dec
fnstenv
pop
aam
dec
dec
adc
cmp
(bad)
popa
xchg
je
stos
lahf
push
fistp
cld
dec
lea
aas
lods
xchg
push
imul
pop
mov
dec
mov
and
mov
out
jo
int3
pop
mov
cmp
or
inc
ss
mov
ins
mov
(bad)
shr
and
outs
adc
push
in
jmp
sbb
pop
inc
push
inc
lods
mov
shr
pusha
dec
jp
jecxz
adc
jns
pop
pop
pop
mov
not
daa
dec
adc
movs
jmp
cld
xor
mul
mov
gs
int
fs
jl
jge
nop
(bad)
push
aas
cmp
test
pusha
and
fnstcw
cmp
cld
jb
inc
add
cli
hlt
push
ins
je
push
inc
loope
ins
jmp
imul
data16
push
hlt
(bad)
imul
in
or
and
mov
xchg
std
loopne
push
(bad)
sub
sub
adc
cmc
pop
test
stos
mov
mov
(bad)
not
sbb
retf
shr
fwait
cmps
bound
ins
mov
or
(bad)
ret
faddp
sbb
sub
add
scas
mov
cmp
dec
jns
in
cmp
inc
mov
push
inc
push
fcomp
sbb
hlt
sar
xor
jge
popf
movs
clc
mov
rcr
imul
xor
bound
push
push
sbb
test
lock
ret
(bad)
fcom
xchg
mov
aaa
(bad)
inc
jnp
pop
popa
sahf
(bad)
mov
push
push
sbb
inc
inc
(bad)
(bad)
sbb
push
xchg
outs
pop
pop
add
mov
push
retf
stc
sbb
test
loope
je
ss
leave
xchg
scas
xor
enter
lock
add
and
push
into
inc
or
adc
xchg
mov
jg
test
pop
mov
xchg
cmp
and
adc
push
add
cwde
jg
ja
mov
adc
mov
inc
cmp
dec
or
ins
(bad)
dec
test
add
inc
out
je
(bad)
fldenv
sbb
cmp
imul
jp
mov
push
out
jl
jb
aaa
ds
inc
mov
rol
sub
outs
cmp
xchg
jl
test
mov
jb
fistp
mov
add
mov
cmp
mov
stc
push
xchg
and
fadd
cmp
or
mov
mov
(bad)
(bad)
loop
das
inc
adc
dec
cld
int3
add
je
xchg
push
test
inc
lea
mov
mov
lea
sbb
repz
dec
push
xchg
adc
aam
push
and
ins
dec
sub
repnz
pop
or
mov
in
ret
ins
xchg
sub
and
add
mov
or
rcl
cmps
test
hlt
enter
loope
sbb
mov
jns
mov
lea
fild
pushf
mov
shl
dec
fcom
pop
push
retf
and
sub
pushf
mov
dec
xchg
sbb
call
ss
(bad)
shl
in
mov
push
(bad)
out
and
ja
jg
mov
xlat
sbb
test
shl
mov
das
sbb
ficom
xchg
pop
and
or
mov
ins
mov
out
nop
cmp
inc
mov
add
rol
ret
add
xor
push
leave
shl
cwde
xchg
or
add
xor
sub
in
data16
iret
call
pop
cmp
jnp
dec
push
shr
int3
or
or
or
cld
dec
push
xchg
inc
data16
pushf
xchg
sub
fcom
mov
mov
cmc
xchg
(bad)
inc
test
addr16
and
cmp
iret
lea
loope
mov
mov
sub
jnp
mov
push
jb
xor
cdq
mov
dec
ja
pop
sbb
lea
popf
ror
xchg
scas
add
out
inc
ss
in
imul
ds
cmps
lods
push
sub
xor
into
inc
jae
push
(bad)
into
stos
dec
xchg
lea
mov
jno
movs
ret
hlt
loopne
xchg
xor
dec
popf
arpl
add
mov
and
pop
cmp
xchg
paddb
jp
or
push
mov
ss
ja
rcr
fdivr
pushf
push
jle
enter
(bad)
xchg
out
aaa
sbb
mov
data16
pop
shl
pop
mov
clc
(bad)
ret
ins
std
call
mul
call
dec
xchg
cmps
sbb
mov
dec
(bad)
(bad)
inc
xor
mov
mov
int
push
and
mov
xchg
cmp
push
push
pop
mov
mov
mov
xor
inc
xor
(bad)
push
mov
add
sub
mov
fld
jl
mov
cmp
(bad)
dec
mov
ins
punpckhbw
out
mov
je
cld
jg
pop
dec
pop
out
popf
lahf
mov
and
cwde
jp
mov
xor
adc
xchg
loop
sbb
jbe
ja
pop
(bad)
mov
rcr
icebp
ins
fisubr
ret
mov
sbb
mov
scas
fwait
xor
jnp
jg
pop
ret
inc
push
push
sahf
push
inc
hlt
jb
imul
in
fdivr
push
idiv
mov
lods
mov
xor
mov
pop
or
pop
xchg
push
scas
pop
or
int3
jl
(bad)
lods
pop
out
aam
xchg
inc
and
inc
xchg
retf
cmp
aaa
mov
cmc
dec
mov
jmp
imul
ds
pop
repnz
dec
and
add
out
pushf
push
sahf
xchg
adc
int3
xor
push
push
jge
lea
xor
pop
xlat
sbb
ds
sub
stc
iretw
cmp
fdivr
adc
lods
gs
mov
es
xlat
addr16
xchg
cmp
push
adc
sub
mov
idiv
sub
out
pextrw
dec
cmp
pop
movs
mov
cmp
mov
jmp
pop
cwde
add
lods
ror
dec
out
fcomp
dec
mov
test
lahf
out
adc
je
in
push
fdivr
cli
mov
inc
fnstenv
pop
ins
aaa
shl
add
movs
pop
mov
neg
cwde
cwde
retf
jne
js
lods
jp
adc
sbb
loop
pop
jg
adc
mov
dec
pop
fistp
loope
mov
mov
and
mov
sub
fdiv
stc
jg
pop
or
out
mov
cmp
mov
adc
push
js
add
pop
sub
or
aad
hlt
inc
pop
je
mov
fs
jo
mov
bound
push
movs
addr16
mov
dec
sub
out
jo
add
cs
ja
aas
or
sti
retf
(bad)
cmps
call
xchg
mov
(bad)
movs
inc
sub
(bad)
lahf
clc
stos
pop
mov
enter
je
cmp
or
loop
int3
shl
fwait
cmps
push
cmc
jge
dec
daa
in
dec
inc
test
cs
dec
dec
xchg
mov
mov
or
pop
out
addr16
fst
cwde
and
hlt
or
inc
adc
lahf
(bad)
jnp
xor
mov
sub
dec
lods
out
push
push
mov
icebp
jp
out
leave
int3
push
les
mov
add
ins
pop
xchg
or
mov
mov
outs
in
rcr
aad
js
pop
push
pop
or
add
lods
sar
and
mov
push
ins
jle
cld
push
jl
mov
mov
xchg
popa
outs
mov
es
pop
sub
shl
cli
data16
add
jno
fcom
push
scas
adc
jmp
pusha
push
jbe
jmp
xchg
adc
leave
dec
push
or
mov
cld
outs
push
pop
aaa
add
pop
sub
jb
pop
sbb
adc
and
lods
icebp
and
pop
cmps
aad
scas
pop
or
les
push
in
pop
mov
cmp
mov
adc
int3
pop
fwait
imul
out
inc
pop
add
jnp
sbb
xor
adc
(bad)
pushf
ret
jl
out
sbb
jl
icebp
js
jecxz
xchg
xlat
mov
lods
jecxz
bnd
in
xchg
gs
out
ret
addr16
mov
in
iret
inc
cmp
push
pcmpeqb
and
mov
inc
repnz
cs
and
push
clc
mov
push
xor
test
iret
aad
mov
push
(bad)
mov
pusha
fadd
cmp
gs
jns
pop
and
pop
cmps
sbb
sahf
pop
call
xchg
pop
ror
mov
cmc
int3
and
sbb
cmp
int3
outs
jl
out
xchg
retf
and
hlt
xor
add
daa
adc
jmp
mov
xor
enter
imul
int3
xor
mov
pushf
je
fcom
je
xor
mov
mov
stos
aam
test
jmp
adc
call
ins
rcl
xchg
xchg
and
sub
sub
inc
xchg
jne
addr16
jg
es
rcr
es
sahf
add
or
pop
sub
sub
jl
dec
pop
push
ss
push
scas
adc
(bad)
cld
sub
fnstenv
ins
dec
(bad)
sti
(bad)
xchg
xchg
adc
ins
sub
pusha
cmp
pop
leave
and
jecxz
shl
dec
jge
jecxz
pop
and
ds
scas
xor
fdiv
pusha
push
aad
push
(bad)
inc
jle
mov
ss
xchg
mov
add
mov
pop
fldcw
into
or
xor
mov
cmps
mov
adc
push
pop
retf
js
mov
or
dec
in
ss
imul
div
sbb
xor
stos
fsub
cmp
test
sbb
sbb
popf
daa
fwait
loop
je
push
outs
adc
jb
dec
add
dec
std
sub
xchg
out
int
int
test
xchg
add
xchg
cmc
call
mov
pop
pop
inc
mov
mov
adc
or
rcr
js
xor
mov
pop
dec
outs
mov
rcl
xor
or
iret
jns
sub
stc
pop
or
cmp
xchg
call
mov
or
sub
sbb
and
ret
mov
ret
sub
inc
call
cmp
ss
ret
loop
push
pop
adc
xor
aam
cmp
cmp
add
push
inc
int
mov
nop
addr16
ficomp
int
pop
xchg
out
jno
mov
scas
xchg
fdiv
inc
inc
sbb
shl
push
push
aas
lea
mov
push
push
dec
fdiv
(bad)
adc
mov
ss
int
test
sub
add
das
sbb
inc
ja
mov
enter
mov
jo
cld
mov
arpl
fmul
hlt
fmul
mov
mov
fdiv
jnp
sbb
test
mov
push
pop
(bad)
aam
add
sub
jmp
call
aas
mov
and
ja
xchg
sbb
dec
push
jbe
sub
lahf
ret
mov
cld
mov
sbb
fisubr
test
jae
outs
jl
cmps
mov
add
in
(bad)
xor
shl
pop
inc
add
jle
je
pop
test
jae
or
xchg
or
push
ss
int3
push
sub
dec
test
out
repz
adc
cmp
clc
or
ins
push
sbb
pusha
inc
in
add
mov
outs
or
mov
movs
mov
push
inc
xchg
push
mov
lods
xor
adc
sbb
retf
nop
jne
repnz
xchg
daa
test
cmp
movs
jmp
push
xchg
xchg
cmp
cmp
mov
idiv
sub
dec
test
ins
inc
jge
mov
je
out
jmp
dec
mov
push
push
out
mov
out
popf
in
and
repnz
lea
cwde
lahf
fidivr
outs
pop
sub
es
adc
pop
sahf
push
les
jmp
mov
pop
test
xchg
stos
jl
or
sub
mov
mov
sub
and
ret
pop
mov
jmp
js
out
inc
push
xchg
mov
pop
or
xchg
cmp
add
loop
inc
das
int
test
(bad)
push
jb
or
adc
xor
jbe
add
xchg
and
jns
cld
sub
mov
lods
mov
aad
repz
push
xchg
jo
xchg
scas
mov
cmp
mov
xchg
xchg
xchg
sub
push
inc
imul
pushf
in
pop
fisub
sub
lds
sbb
lahf
adc
pop
mul
int
icebp
enter
aas
sbb
pop
sub
sub
not
test
bound
inc
lock
scas
sahf
dec
test
(bad)
neg
not
sbb
cmp
jmp
cmc
fmul
ror
sub
es
lods
sbb
out
pop
xor
jb
in
jecxz
xor
adc
cmp
cmp
sbb
fcmovb
sub
fild
sbb
dec
das
push
lods
imul
push
call
fst
jbe
add
scas
push
inc
and
scas
push
pop
jmp
ret
inc
inc
enter
imul
cld
outs
call
lahf
rcr
mov
lock
popa
ins
mov
mov
mov
test
scas
sbb
mov
mov
fisttp
gs
shl
test
fst
add
pop
test
cmp
nop
pop
xchg
aaa
mov
xor
sbb
clc
pop
xchg
or
inc
push
or
adc
cmps
and
fild
sahf
xor
inc
xor
fistp
dec
jg
mov
sub
fdiv
cmp
cwde
cdq
cmp
push
or
jne
push
int3
mov
int
in
xchg
mul
lds
mov
pop
xchg
pop
adc
das
lahf
xadd
out
mov
inc
inc
adc
xchg
sahf
xchg
lock
dec
pop
mov
pop
test
jb
push
and
pop
mov
push
test
out
jne
loop
imul
fs
rol
cmc
test
inc
scas
clc
mov
sbb
hlt
jo
ror
pop
adc
imul
xchg
out
test
jl
jbe
cmp
sub
test
pop
mov
fsubr
cmp
and
xor
mov
or
loope
test
rcl
cmp
mov
movs
mov
hlt
sub
mov
mov
(bad)
movs
cmp
pop
inc
push
sub
cmp
jne
outs
mov
cmp
mov
mov
sbb
adc
xor
and
jbe
mov
mov
fwait
mov
(bad)
cld
adc
aam
inc
push
fs
mov
mov
fwait
(bad)
stos
fs
pop
fild
add
jae
aas
jl
out
cli
mov
outs
and
xchg
sbb
pop
sub
push
inc
xor
mov
ror
aaa
aam
and
popf
xor
es
sahf
fdiv
and
cmp
cld
and
retf
sbb
ja
xor
dec
neg
popa
lods
sbb
out
shr
js
jbe
les
push
jo
adc
inc
repnz
mov
popf
(bad)
pop
mov
cld
sub
neg
dec
adc
push
add
pop
lock
mov
ficom
aam
sar
push
xlat
push
rcr
and
jnp
xor
xor
sbb
mov
(bad)
cmp
mov
ja
sar
inc
dec
fwait
cmp
ds
xchg
lods
dec
mov
popf
lock
das
mov
(bad)
xor
adc
jne
xor
jl
mov
push
lods
dec
rcl
mov
cmp
in
sub
popf
mov
fs
pop
popf
fcomp
(bad)
jno
dec
in
adc
xlat
or
pop
in
in
rol
xor
mov
push
sub
sbb
ror
aad
inc
in
jl
int
fsubr
nop
push
scas
cmps
cld
cmps
(bad)
push
dec
pop
jle
dec
sbb
push
fiadd
mov
pop
ja
ins
popf
shr
sub
popf
iret
sbb
or
lock
jmp
or
jg
sub
cmp
data16
icebp
arpl
jge
dec
les
xchg
leave
jo
dec
pop
or
popf
mov
inc
das
fld
sbb
popa
sbb
pop
ss
mov
xor
mov
xor
mov
ss
lock
xchg
in
mov
cmp
ins
mov
mov
pop
mov
aaa
outs
mov
mov
add
and
into
and
push
add
push
jb
mov
pop
push
fs
mov
fcomp
dec
clc
mov
int3
mov
idiv
mov
pop
in
mov
sbb
xchg
es
div
push
std
out
test
inc
pushf
sbb
jmp
sbb
sbb
ds
rol
xor
mov
out
xchg
sub
pushf
inc
(bad)
lea
pop
sub
ins
add
xchg
xor
popf
imul
or
xchg
sbb
lahf
mov
sbb
pop
add
add
xlat
outs
jmp
leave
rcr
cwde
mov
int3
sub
jecxz
sbb
into
sub
jecxz
mov
stc
pop
dec
ficom
shl
out
xor
jg
mov
aaa
mov
add
(bad)
(bad)
sub
leave
gs
push
pusha
popf
aaa
fidiv
aam
or
xor
add
jmp
or
push
mov
or
ins
or
cmps
pop
xchg
cmp
movs
pop
fcomp
mov
or
mov
aam
and
out
mov
push
adc
mov
push
movs
out
ja
or
out
sbb
cmps
pop
test
lahf
dec
aad
adc
xchg
scas
xchg
es
enter
xlat
xchg
movs
mov
stc
mov
and
outs
push
push
ret
lahf
mov
repz
in
mov
sbb
dec
push
mul
and
push
pop
mov
adc
push
repnz
jb
outs
push
sahf
rcr
pop
call
jg
mov
(bad)
push
es
dec
in
retf
int3
gs
fsubp
ret
cmp
je
xchg
rcl
mov
mov
sub
push
test
stos
fadd
xlat
and
sbb
mov
mov
and
cmp
xchg
lods
pop
cmps
push
ins
loope
(bad)
ds
fdiv
aam
pop
mov
aam
outs
aam
or
push
inc
dec
(bad)
fsub
push
xchg
out
adc
(bad)
dec
test
out
jge
movs
inc
cmp
mov
hlt
xchg
shr
sbb
ins
stc
pop
push
popa
lahf
xor
pop
(bad)
jl
xchg
add
cmps
fdiv
cmp
push
adc
pop
(bad)
or
in
cmp
sbb
inc
nop
adc
push
or
and
idiv
rcr
xchg
cmps
(bad)
daa
fcom
(bad)
loopne
sbb
mov
loopne
jo
aad
xchg
dec
mov
das
mov
sbb
int3
ins
push
inc
xchg
shl
call
mov
pusha
je
mov
lea
in
cs
int
ins
and
in
push
pop
stc
(bad)
vcomiss
pop
out
std
(bad)
cwde
out
jae
jns
dec
js
mov
stos
jle
dec
push
cmp
sahf
bound
daa
and
icebp
pop
push
stos
call
in
cmp
outs
sbb
mov
mov
cmps
jo
repnz
outs
das
test
repz
out
add
in
jle
push
retf
fbstp
cmp
loop
pop
mul
xor
(bad)
dec
jns
cwde
add
mov
shr
lods
mov
dec
sbb
gs
stos
mov
bound
inc
sub
xlat
lock
inc
mov
dec
sub
mov
mov
mov
xchg
jo
popa
jle
or
or
adc
and
loopne
cwde
pop
lods
mov
call
and
push
xchg
stc
dec
adc
jl
test
ficomp
je
xchg
out
ret
xchg
inc
xchg
scas
ins
addr16
mov
push
inc
adc
mov
fs
push
repnz
jmp
(bad)
aas
jl
bnd
aad
inc
hlt
mov
loopne
lods
call
sbb
imul
inc
mov
add
out
sub
scas
and
or
mov
mov
les
mov
fisubr
dec
fucomi
jl
xchg
dec
(bad)
mov
(bad)
(bad)
push
mov
sbb
(bad)
scas
pop
mov
movs
cmps
cmp
pop
mov
das
push
mov
inc
cdq
clc
mov
push
inc
pusha
lods
add
mov
or
dec
in
cld
push
aaa
dec
fdiv
pop
mov
cmp
je
leave
push
icebp
mov
sti
mov
mov
and
dec
xlat
cld
push
ins
stos
aam
jle
es
adc
shl
cwde
push
mov
dec
cld
retf
dec
cld
imul
(bad)
lahf
test
mov
ja
(bad)
rol
out
inc
shl
lods
mov
push
dec
xchg
(bad)
mov
xor
cmp
lods
out
mov
cdq
mov
fs
cmp
aam
push
in
dec
and
xor
sbb
sub
retf
mov
mov
inc
mov
pop
push
in
loope
or
mov
lds
xlat
mul
mov
mov
ins
push
jmp
addr16
fadd
(bad)
lods
mov
mov
push
sub
fisttp
pop
aas
mov
mov
shr
sbb
push
cmp
mov
movs
jae
and
stc
push
mov
ins
fnstenv
in
out
xor
xchg
inc
mov
xor
and
push
movs
xchg
mov
pop
mov
jl
test
pop
not
leave
mov
test
push
iret
leave
inc
dec
iret
add
out
sbb
mov
repnz
sbb
xchg
and
sbb
in
xchg
or
les
mov
sub
not
int3
lods
dec
aam
jmp
xchg
sub
repnz
scas
imul
dec
out
xchg
outs
inc
and
and
add
mov
inc
test
xor
dec
dec
sar
test
sub
lahf
xlat
lods
xor
mov
xchg
ja
pusha
cmps
mov
inc
test
lods
daa
xor
push
clc
jne
(bad)
jle
push
fst
inc
xor
push
test
pop
test
and
push
scas
pop
jmp
out
movs
dec
shl
mov
iret
dec
sub
movs
rcr
daa
arpl
mov
or
std
fcom
aam
xchg
(bad)
mov
mov
js
pop
fist
scas
mov
cmp
lea
or
add
ror
add
add
mov
rcr
cmc
cmps
push
pushf
add
push
out
xor
add
cwde
or
loop
mov
rcl
pushf
fdiv
lea
je
(bad)
push
add
sbb
mov
mov
enter
mov
or
pop
xchg
(bad)
mov
cmp
push
dec
xor
rcr
add
mov
add
cmp
jmp
xchg
add
mov
add
addr16
jmp
mov
ret
cld
push
in
std
ret
cld
mov
push
out
lock
mov
and
aaa
aam
scas
or
pop
outs
push
gs
or
scas
adc
pushf
pushf
add
lods
cs
out
scas
push
cmp
xlat
mov
mov
cmps
fdivr
xchg
adc
int3
cmp
cmps
pop
mov
inc
xchg
push
jecxz
dec
sti
or
xchg
fstp
not
sub
jo
fwait
leave
cmc
push
dec
ins
or
sub
rcr
rol
jmp
jne
or
test
ds
or
pop
pop
pop
push
(bad)
push
pop
jmp
ror
mov
sub
ret
das
pop
in
outs
and
xchg
jl
loop
push
fisubr
fmul
daa
mov
mov
ret
pop
pusha
jle
sub
(bad)
push
dec
mov
(bad)
rep
mov
jge
and
xor
jns
push
push
stos
push
cmp
jbe
or
jp
cwde
aam
add
out
pop
xor
and
clc
and
dec
nop
gs
pop
movs
ins
and
push
and
push
out
cmps
(bad)
(bad)
into
jmp
lahf
mov
(bad)
xchg
xor
xchg
mov
or
ret
iret
adc
xlat
outs
sbb
mov
jne
jns
enter
push
inc
sub
inc
and
pusha
std
gs
cmps
cli
pushf
jae
in
lods
fldpi
int3
cmc
push
in
clc
(bad)
es
repnz
scas
xor
(bad)
clc
retf
repz
fistp
or
in
xchg
add
cdq
mov
retf
dec
and
nop
jmp
pop
cmps
cmp
rol
loop
jecxz
jae
aaa
cdq
sar
xor
iret
imul
xor
mov
je
in
dec
xchg
mov
scas
jle
add
dec
mov
es
inc
retf
call
rol
cmp
xchg
pop
arpl
out
arpl
test
push
sbb
(bad)
loop
movs
or
push
mov
addr16
imul
mov
cmp
bnd
gs
in
fs
in
push
in
lahf
cld
adc
or
add
pop
stc
cmp
ins
popf
or
jecxz
out
mov
cmp
fiadd
ins
lea
call
jb
mov
neg
lods
pusha
(bad)
push
adc
pop
test
pop
cli
xor
lods
or
add
or
clc
hlt
lea
add
sbb
out
out
adc
adc
dec
(bad)
int3
jmp
test
mov
mov
aaa
xor
outs
cwde
mov
test
adc
jecxz
push
aad
fsub
xchg
inc
out
iret
lea
rcl
mov
pop
or
push
add
ins
or
std
cwde
add
add
ret
fldcw
in
push
loopne
out
aaa
pop
std
mov
(bad)
pop
mov
inc
in
push
rol
xlat
jge
and
pop
repz
and
sub
inc
and
sub
mov
xchg
pop
cmp
idiv
xchg
cmp
ret
(bad)
pop
cld
push
int3
add
or
out
mul
mov
outs
pop
jmp
mov
xor
iret
jg
inc
out
das
movs
in
or
imul
test
bound
inc
sbb
test
push
shl
add
jno
mov
mov
mov
in
shl
dec
cmp
icebp
fld
mov
sub
sahf
sahf
xor
sahf
loop
ret
sub
fimul
cmp
xchg
cli
ficom
xchg
rcr
push
addr16
ins
test
fldcw
pushf
mov
jnp
push
sbb
sbb
add
int
adc
loopne
add
jae
out
jbe
jo
push
mov
ss
mov
lahf
mov
les
xor
jp
enter
loop
xchg
ins
ins
dec
ror
push
addr16
fistp
xor
sti
dec
test
mov
sub
dec
int3
inc
sti
(bad)
cmp
xor
pushf
cmps
iret
hlt
sbb
mov
fadd
cs
inc
mov
and
dec
bound
xchg
or
cdq
movs
in
pop
frstor
mov
call
pop
in
out
iret
pop
push
and
cmp
test
push
(bad)
call
mov
xor
jp
inc
xchg
xchg
adc
xchg
fcomp
sbb
push
outs
sub
or
scas
rcl
add
icebp
mov
add
fsub
or
cwde
leave
adc
repz
mov
outs
popf
fstp
lods
mov
fldenv
in
arpl
jbe
push
in
mov
cmps
ds
rcl
push
outs
xchg
pop
mov
scas
mov
mov
test
jmp
cld
mov
add
adc
test
cs
shl
add
jl
mov
sub
cmp
pop
push
xlat
in
scas
jl
in
les
(bad)
dec
sbb
adc
inc
pop
inc
dec
push
clc
retf
sar
in
stc
jb
sbb
imul
cmps
xor
add
movs
or
int3
test
xor
sbb
xchg
sti
xor
mov
call
(bad)
je
repz
cmps
out
push
cmp
pop
into
jl
and
lods
test
xor
dec
xchg
add
sub
or
popf
fsub
lods
mov
sahf
(bad)
mov
aam
js
test
cmps
enter
movs
or
das
add
adc
out
mov
push
ins
scas
cmp
xchg
(bad)
mov
jg
imul
ja
mov
mov
ins
ds
ret
add
sub
jbe
data16
sbb
adc
jo
out
sbb
push
mov
xor
dec
xor
pop
or
aaa
or
icebp
(bad)
je
sub
popf
xchg
sbb
les
(bad)
cmps
outs
fs
call
dec
(bad)
fdivp
in
mov
sbb
push
mov
je
mov
ss
aas
sub
out
mov
je
adc
pop
clc
fldcw
js
fdivr
jle
shl
and
(bad)
adc
xor
add
ins
and
pop
repnz
sbb
mov
pop
and
mov
movs
add
xchg
das
adc
dec
out
inc
mov
inc
and
fimul
lea
fs
lahf
(bad)
enter
pop
jp
push
imul
sub
xchg
cmp
pop
jmp
inc
call
add
or
inc
xor
out
dec
imul
ret
add
jmp
inc
test
jmp
sbb
sar
aaa
mov
(bad)
int3
sbb
out
add
stc
dec
nop
fsubr
in
and
lods
cmps
into
das
fsubr
sahf
(bad)
popa
pop
in
out
push
sbb
mov
retf
mov
sahf
inc
loopne
xchg
test
movs
neg
dec
mov
jmp
cwde
pop
sbb
daa
daa
in
xor
out
sbb
out
cwde
xor
push
clc
popf
fisttp
sbb
cmp
test
hlt
pushf
push
in
jl
jbe
retf
mov
sbb
pop
mov
mov
cmp
ins
ja
imul
mov
aaa
aam
ds
inc
sbb
aaa
sahf
lods
ftst
out
inc
(bad)
pusha
cld
lock
out
sbb
or
inc
out
jae
jno
hlt
mov
mov
stos
in
xor
jp
(bad)
fcomp
popf
pop
in
ins
cmc
or
push
icebp
xor
repnz
mov
and
or
or
iret
xchg
outs
add
mov
mov
jns
push
fist
shr
mov
fidivr
clc
pushf
fwait
pop
push
shl
ror
repz
mov
xchg
jl
(bad)
dec
xchg
dec
dec
mov
popa
aaa
int
into
pop
retf
cmc
sub
bound
pcmpeqw
pop
push
adc
mov
fidivr
jg
js
cmps
les
add
or
mov
popa
fadd
dec
sub
icebp
ins
add
div
xchg
dec
pop
and
jg
mov
cmp
cmps
neg
into
cmps
adc
add
aam
jg
mov
xchg
mov
jbe
push
stos
es
enter
les
das
daa
popa
push
pop
movs
lods
fs
dec
xchg
cld
call
lods
dec
das
cmp
jl
pop
mov
inc
int3
add
mov
popf
(bad)
fidiv
xchg
stc
cmps
mov
ins
aaa
xchg
daa
mov
rol
cmp
inc
stos
mov
mov
(bad)
cmp
inc
xor
movs
cmps
scas
pop
or
adc
ins
jne
hlt
cwde
pop
cmp
xor
int
pop
in
add
cwde
movs
jmp
fild
jae
pop
or
mov
int
test
adc
pop
lds
je
mov
sbb
mov
pop
sub
mov
in
or
sub
push
pusha
out
xor
push
sub
(bad)
cmp
orps
push
xchg
pop
je
fst
cmps
popf
imul
js
movs
mov
dec
iret
mov
sbb
mov
pop
xchg
out
mov
inc
push
add
(bad)
push
xor
jnp
push
repnz
ins
movs
pop
das
push
pop
in
lods
outs
pushf
stc
int3
push
fistp
idiv
mov
lea
and
rcl
sub
push
or
inc
inc
mov
div
adc
and
fadd
lods
rcr
aaa
pop
(bad)
sub
sub
push
ja
sbb
mov
fbld
dec
pop
xchg
pop
xor
retf
adc
ins
test
push
aad
mov
sbb
das
mov
ja
mov
out
mov
sbb
jae
test
add
out
dec
in
scas
arpl
scas
rcr
xor
lds
pmuludq
xchg
sub
aad
(bad)
cmps
inc
outs
or
dec
jns
ja
ins
jmp
mov
sbb
jbe
dec
fadd
mov
jno
(bad)
mov
lods
addr16
idiv
ja
and
xchg
push
mov
sti
cmp
adc
fdivrp
fidivr
xchg
pushf
mov
mov
ins
jmp
into
mov
push
adc
dec
push
test
xor
or
pop
inc
cwde
xchg
push
xchg
pushf
mov
ret
xlat
ss
mov
cwde
loop
add
push
pop
cld
or
pop
xlat
lods
jmp
retf
inc
lods
dec
sub
jle
fdiv
loope
popf
mov
lahf
dec
daa
ss
(bad)
call
jl
pop
or
shl
jmp
cmp
in
loopne
cmp
or
iret
mov
pop
jecxz
inc
and
cmp
jmp
stc
aaa
adc
(bad)
mov
or
cmps
nop
mov
mov
ficom
popf
add
mov
jb
dec
imul
imul
call
addr16
sbb
mov
dec
mov
pop
sar
pop
aaa
fwait
(bad)
(bad)
retf
test
and
retf
and
jns
popf
dec
xchg
sub
pop
div
xor
mov
add
sbb
data16
out
stos
xlat
dec
fs
adc
cmp
out
or
dec
sub
jl
lods
test
mov
(bad)
addr16
or
daa
cmp
dec
mov
mov
imul
outs
pop
inc
daa
out
repz
and
lods
movs
int3
pushf
imul
cdq
aas
adc
push
pop
cmp
sub
inc
sar
pop
test
jnp
paddb
call
je
arpl
ss
xor
pushf
mov
and
iret
lds
(bad)
push
pop
jb
sub
popa
mov
xor
pop
test
fwait
sub
inc
add
pop
cs
popf
and
sub
out
push
and
int3
psrlw
mov
and
pop
jmp
mov
cmps
sahf
mov
loop
push
inc
mov
(bad)
xchg
adc
test
sbb
lock
sub
rcr
paddusw
inc
or
xchg
mov
int3
mov
mov
lods
fiadd
aam
es
mov
pushf
in
stos
mov
cmp
imul
mov
fisttp
dec
mov
xor
(bad)
mov
adc
enter
loop
inc
call
in
daa
add
jnp
push
pop
das
sar
adc
fadd
xor
mov
in
cdq
mov
lods
sub
mov
aaa
mul
and
lods
stos
inc
ins
test
pop
cmps
pop
icebp
sub
std
pop
dec
and
dec
fs
inc
fnsave
cmps
pushf
inc
mov
pop
cmp
xchg
movs
mov
inc
sbb
mov
out
xor
cmp
push
xlat
jl
jmp
mov
mov
xchg
ror
ja
push
cld
shl
ja
sbb
adc
sub
inc
sbb
stos
jecxz
enter
push
pop
out
mov
(bad)
xchg
data16
(bad)
jb
jg
mov
jge
in
mov
or
mov
outs
cmps
loop
jmp
js
inc
xchg
xor
fiadd
dec
daa
push
retf
in
daa
adc
push
sbb
and
cmp
(bad)
sbb
hlt
cld
pop
pop
cmp
mov
rol
test
lods
movs
test
fsubr
xor
mov
add
pop
fimul
pushf
aas
sub
inc
lods
repz
jb
lahf
cmp
cmps
xchg
rol
jmp
inc
iret
xlat
jmp
neg
adc
sbb
or
mov
xchg
dec
cli
lds
sahf
lock
aad
and
push
ins
popf
lock
cmp
pop
jns
loope
ja
adc
cld
and
dec
mov
dec
aad
imul
js
addr16
test
bts
ret
movs
out
inc
ins
or
jbe
ret
shl
inc
dec
cdq
fwait
jno
aam
sbb
mov
jecxz
fdiv
mov
mov
xor
add
sbb
rol
(bad)
call
cld
mov
push
add
lea
lods
outs
retf
cmp
ret
sub
or
sbb
and
add
cmps
push
enter
dec
jbe
out
mov
dec
in
popa
shr
out
lods
lea
add
fs
jne
and
sub
fadd
jbe
mov
ds
iret
mov
pop
pop
and
loop
xor
jmp
inc
jne
mov
jns
fs
test
and
add
xor
jecxz
sbb
out
jl
cli
push
mov
test
fiadd
jb
call
xchg
ret
xchg
in
mov
icebp
int3
add
(bad)
mov
xchg
fmul
mov
adc
xchg
mov
inc
in
dec
icebp
(bad)
sub
(bad)
movs
lds
sti
sbb
das
xchg
add
inc
push
mov
mov
pop
cmp
dec
mov
pop
jmp
xor
lods
inc
es
cmp
test
rol
jmp
hlt
outs
mul
scas
and
(bad)
and
xchg
in
into
(bad)
out
xchg
sub
xchg
sub
int3
jg
xabort
int3
movs
clc
ss
mov
inc
repnz
pop
mov
movs
or
jge
pop
repnz
mov
or
and
out
ds
add
push
mov
aaa
jmp
aad
pop
mov
xor
mov
cld
add
hlt
mov
adc
mov
aam
cli
into
mov
xor
ret
push
fcomp
test
mov
test
jne
jge
mov
gs
inc
push
push
pop
jbe
mov
lock
retf
dec
mov
leave
push
test
jl
sbb
dec
push
icebp
push
pop
(bad)
mov
lods
fs
and
retf
scas
add
je
add
inc
rcr
addr16
add
or
sbb
lods
ja
loope
(bad)
cmp
inc
jl
sub
cs
sub
punpcklbw
cwde
sahf
addr16
mov
xchg
ss
pop
dec
inc
jl
in
lods
outs
neg
add
mov
ja
or
sub
sahf
mov
(bad)
push
mov
xchg
xor
cmp
ret
push
jmp
in
pop
scas
adc
out
xor
les
movs
xchg
mov
sbb
loopne
dec
push
(bad)
cmps
int3
mov
aaa
fsub
cmp
xor
data16
push
iret
test
(bad)
adc
mov
sti
scas
hlt
ins
dec
adc
mov
pop
and
test
call
shl
lea
rcl
sub
and
mov
fs
mov
rcr
iret
in
xlat
adc
xor
pop
daa
addr16
cmp
jbe
and
in
hlt
push
icebp
push
in
sub
lods
rol
xor
bound
mov
scas
cmp
xchg
pop
lds
aam
fldcw
mov
xchg
xor
pop
aas
inc
test
cmp
ret
sbb
inc
cmc
inc
sti
dec
data16
cli
ja
jmp
loope
or
jge
push
daa
cmc
pushf
sbb
in
cmp
xchg
int
jle
jnp
call
sub
jns
into
int3
xchg
mov
les
int
jb
push
fidivr
test
stos
test
push
fnsave
or
lahf
(bad)
or
mov
ror
idiv
push
sbb
xchg
test
mov
push
xlat
xchg
fsubr
int3
out
mov
mov
gs
hlt
mov
lea
inc
aaa
enter
xchg
ficom
cmp
fucom
mov
push
in
pop
jle
cmp
adc
call
inc
(bad)
jmp
pushf
jmp
dec
push
fnsave
mov
outs
cwde
dec
cmps
mov
daa
outs
inc
xchg
cmps
shr
stos
cmp
out
sar
inc
push
push
lods
pop
into
pop
mov
or
cmps
fist
int
and
add
push
jne
mov
sbb
push
push
mov
lea
adc
popa
dec
test
cmp
jmp
xchg
adc
scas
dec
gs
jmp
or
inc
ror
cmps
mov
fsub
clc
pop
xchg
mov
mov
xor
and
fs
(bad)
cwde
out
cmp
xchg
lahf
mov
(bad)
lods
and
pop
(bad)
addr16
not
xchg
dec
fistp
idiv
ins
cmp
in
pop
dec
(bad)
lods
cmps
sbb
aaa
and
cmps
into
push
fs
in
add
cmp
jnp
cmp
pop
mov
neg
push
or
loopne
add
out
dec
out
xchg
les
cwde
les
js
sub
test
inc
in
and
lods
cmc
ja
fisttp
add
xor
pop
pop
shl
sbb
test
push
xchg
lock
int
jno
fdivr
test
add
lods
cmps
out
cli
and
daa
out
mov
icebp
not
dec
movd
dec
mov
cmps
mov
push
(bad)
stc
add
pushf
adc
push
fidivr
jge
ins
imul
std
(bad)
adc
lods
cmps
mov
loopne
fistp
push
push
mov
mov
push
sbb
or
lods
inc
iret
aad
ds
xlat
jmp
int
sub
jl
pop
out
out
sbb
or
lods
leave
out
sbb
mov
pop
dec
adc
dec
mov
push
mov
jge
sub
loopne
(bad)
inc
std
cmp
xchg
fistp
enter
out
cmp
das
mov
(bad)
ja
out
out
mov
cmc
and
adc
in
test
jbe
cld
pushf
inc
adc
xchg
or
ds
js
mul
(bad)
mov
test
inc
xor
ins
call
mov
(bad)
dec
in
mov
in
xchg
stos
or
popa
pop
sub
hlt
mov
mov
icebp
inc
fldcw
jb
sbb
sub
loop
push
daa
push
je
jno
in
pop
or
pop
mov
dec
ja
fisub
into
test
xlat
mov
jo
fld
inc
sbb
mov
mov
cmps
int3
sahf
(bad)
and
fld
pop
out
cld
mov
pop
xor
or
sub
jmp
lock
es
or
aaa
xor
in
dec
daa
popf
ja
add
out
lods
mov
mov
sub
cmp
sbb
xchg
dec
push
in
retf
outs
out
or
shl
(bad)
cdq
(bad)
shr
mov
(bad)
aad
jl
pop
(bad)
in
mov
(bad)
out
mov
js
fdiv
adc
pop
add
addr16
pushf
hlt
sub
mov
mov
js
jl
popa
sbb
fnsave
jl
sub
(bad)
out
push
repnz
fnstsw
and
ins
push
pop
cld
in
push
jmp
pop
int3
fwait
stos
push
mov
mov
ror
loopne
in
cld
push
cli
cmp
mov
dec
xor
retf
pusha
cmc
outs
mov
adc
loop
outs
popa
cld
out
popa
mov
sbb
test
mov
(bad)
aas
popa
shr
jmp
idiv
inc
int3
jb
test
scas
lods
jae
mov
xchg
sbb
dec
(bad)
retf
ja
mov
pop
cmp
inc
scas
jmp
out
(bad)
jnp
push
add
and
(bad)
mov
mov
or
fisttp
jmp
jecxz
sub
repz
sub
push
lods
(bad)
jp
ja
sbb
push
pop
(bad)
pop
cmps
cdq
aaa
xchg
arpl
xchg
imul
fdivrp
xorps
cld
jo
and
lahf
data16
jl
xchg
mov
call
dec
iret
lods
add
loopne
mov
fild
retf
mov
add
xchg
cmp
retf
sub
xlat
xchg
sbb
fld
push
test
ins
sti
inc
and
jge
in
mov
mov
lock
cmp
(bad)
dec
pop
ret
or
jno
imul
dec
mov
push
retf
arpl
xor
adc
(bad)
iret
cmp
ins
inc
(bad)
xchg
xchg
jo
aaa
ror
jb
inc
pop
push
call
pusha
lods
sub
mov
push
adc
pop
mov
sti
aaa
inc
test
das
ja
fnstcw
ds
js
push
popa
(bad)
xor
sub
cmps
fmul
ror
les
out
mov
(bad)
rol
cmps
cmp
aaa
gs
dec
mov
xor
pop
dec
xor
retf
pop
or
scas
movs
movs
dec
arpl
cli
div
aaa
mov
test
in
mov
ins
xlat
sub
xor
jg
xor
jne
sub
push
repnz
aaa
sbb
jne
dec
aad
imul
pusha
ins
mov
mov
daa
add
jmp
out
xor
cmps
lods
or
mov
xor
iret
mov
mov
aaa
mov
cmps
cmp
addr16
pop
xor
iret
cld
aas
xlat
mul
mov
fwait
pop
jns
loop
ins
pop
add
lods
int
pushf
inc
pop
call
cld
pop
sub
cmps
xchg
fbld
cmp
ficom
scas
in
push
in
cld
dec
add
cmps
int3
fist
fdiv
ja
pop
(bad)
movs
cmp
dec
fwait
ins
lods
pop
shl
cmps
sub
sub
lock
cmc
ins
and
cmp
sbb
xor
out
xchg
and
enter
mov
icebp
or
xor
test
adc
sub
cwde
in
push
outs
jp
pop
repz
add
mov
cld
pop
ja
aam
fsubr
test
pop
int3
fimul
jecxz
sub
jo
push
xchg
movs
mov
mov
lea
cmp
enter
or
push
ss
dec
pop
lods
mov
mov
pusha
xor
push
mov
popf
push
jmp
xchg
dec
mov
hlt
cmps
jle
fwait
mov
js
mov
ror
adc
sub
pop
hlt
inc
jb
adc
jge
es
leave
scas
std
fmul
mov
test
lea
jge
imul
(bad)
clc
mov
mov
xchg
xor
jp
dec
cmc
test
cmp
cmps
and
gs
dec
inc
dec
xchg
inc
shl
addr16
fs
(bad)
out
cwde
aad
mov
fcomp
movs
or
lods
adc
xlat
imul
push
xchg
icebp
inc
xor
ds
inc
test
push
xchg
lds
imul
and
sbb
dec
jne
in
mov
inc
pop
sub
js
xchg
sub
mov
sub
into
repnz
imul
in
ss
inc
push
inc
jle
int3
push
xchg
and
(bad)
jmp
or
gs
adc
push
xchg
pop
and
add
(bad)
lods
jecxz
xchg
lahf
pop
dec
adc
into
inc
lds
cmps
adc
xlat
mov
push
mov
push
jl
jbe
sub
punpcklwd
je
jg
jns
sub
inc
cld
mov
push
adc
lods
pop
mov
push
push
pushf
data16
add
ja
outs
fcomp
lods
xchg
lods
mov
js
jo
jp
or
dec
cld
sub
(bad)
cli
iret
jno
dec
(bad)
pop
retf
out
popf
dec
cmc
mov
jbe
jne
cld
mov
cmp
or
ins
mov
fcomi
push
push
test
sbb
in
sbb
(bad)
mov
ja
repz
mov
mov
dec
frstor
push
test
sahf
retf
lds
aad
out
push
std
push
fmul
jl
bound
lea
adc
mov
mov
pop
inc
mov
jmp
retf
out
ror
and
mov
add
jbe
leave
jle
out
scas
aad
or
adc
adc
sub
sahf
stos
inc
sbb
enter
clc
push
mov
(bad)
stos
(bad)
xchg
out
mov
pop
jmp
add
adc
call
jbe
sub
or
jno
cld
stc
xlat
lods
and
inc
fs
sti
jb
mov
hlt
inc
or
loopne
dec
pop
add
jmp
sbb
outs
ror
jne
jns
xchg
fwait
mov
inc
cmp
cmp
mov
in
clc
mov
and
cs
pushf
sbb
jns
mov
sub
push
cdq
cmp
and
imul
test
dec
mov
dec
shufps
test
pop
into
scas
sbb
cmp
aaa
call
xor
push
add
dec
inc
(bad)
(bad)
ins
repz
push
lods
mov
aad
std
cli
lds
out
xor
mov
add
(bad)
shl
sbb
out
es
mov
cwde
dec
lahf
dec
pop
rcl
jge
xchg
setbe
pop
scas
sbb
pop
cmc
outs
and
mov
jbe
and
dec
push
jb
pop
add
scas
and
pop
ss
cmp
xchg
push
pop
fnstenv
popf
or
xor
in
push
mov
addr16
pop
gs
les
xchg
jl
aas
jne
jmp
add
jmp
or
not
je
push
test
add
xlat
add
xchg
out
mov
dec
add
call
xor
push
xchg
cmp
data16
xor
les
jb
jno
sub
xchg
pop
mov
jne
in
xchg
shl
mov
push
shr
mov
cli
cld
ja
jg
or
ficomp
xchg
xchg
jbe
pop
lea
daa
push
js
in
ss
adc
inc
ret
ret
cmc
sbb
dec
addr16
(bad)
cmps
loope
ret
ins
fistp
retf
in
fild
dec
or
lea
dec
aad
lds
xchg
lds
(bad)
(bad)
ja
out
es
sub
sti
lea
shl
movs
inc
cmp
mov
test
jecxz
xor
in
jmp
and
mov
push
mov
and
cwde
ret
dec
gs
push
faddp
fwait
inc
in
test
enter
adc
scas
push
enter
jnp
dec
daa
sbb
or
(bad)
mov
sbb
cli
test
push
mov
(bad)
sub
and
movs
mov
push
push
test
sbb
clc
mov
mov
cmp
fiadd
jp
and
ror
cmc
add
lods
mov
std
bound
xchg
mov
inc
mov
jne
adc
clc
jo
push
mov
es
xor
mov
xchg
xor
push
or
mov
dec
test
cmp
out
enter
push
lods
ins
and
or
add
cmp
out
ja
xor
jmp
call
push
mov
ss
ins
push
sub
or
mov
call
pop
movs
cmp
mov
push
test
pop
movntq
xchg
(bad)
(bad)
mov
(bad)
repz
aad
mov
(bad)
mov
outs
shl
lock
lahf
or
cwde
jmp
push
dec
sbb
in
mov
(bad)
(bad)
cld
and
clc
lahf
and
sar
xlat
lods
cld
mov
std
sahf
mov
or
xchg
sub
jb
ss
jmp
mov
sub
xchg
mov
mov
xchg
push
nop
jl
in
les
ins
lds
mov
sar
xchg
fcomp
xchg
ret
ficom
(bad)
pop
push
or
mov
jecxz
out
rol
push
xchg
aas
cmp
clc
stc
arpl
cmp
push
mov
push
std
push
in
push
sub
push
ss
fnsave
xchg
xor
xchg
in
inc
pop
xchg
js
xlat
cmc
test
lods
push
jmp
and
lds
or
sbb
mov
je
push
ficom
cmc
xor
(bad)
push
std
shl
aas
in
pushf
or
xchg
mov
lods
push
and
scas
mov
mov
push
push
or
iret
outs
jmp
popa
dec
aad
popa
cmp
adc
pop
inc
jne
dec
adc
icebp
mul
inc
aad
inc
enter
mov
lahf
dec
je
push
mov
pop
push
add
(bad)
dec
les
mov
(bad)
cs
jns
and
xchg
ret
xor
movs
jne
aad
xchg
and
ins
ins
pop
lea
dec
mov
out
xchg
push
enter
repnz
out
pop
clc
icebp
ret
mov
shr
ins
jge
sbb
pushf
stos
mov
(bad)
fsub
xor
xor
dec
(bad)
cmp
jmp
enter
or
jno
add
dec
sub
pop
cmp
data16
jmp
mov
aad
jae
mov
adc
cmp
jnp
in
and
inc
dec
sub
mov
jge
push
push
and
div
dec
xchg
xchg
out
inc
addr16
pop
push
in
fwait
movs
cdq
cdq
arpl
outs
cli
xor
test
jnp
xor
mov
shr
cmc
jl
icebp
jne
stc
sbb
outs
or
pop
arpl
outs
xchg
mov
adc
push
pop
shr
pop
in
jmp
fs
scas
test
mov
out
in
ficom
gs
add
xchg
jmp
xlat
fdivr
mov
clc
inc
mov
data16
mov
movs
stos
push
rcr
(bad)
ret
mov
cwde
aad
jmp
push
call
stos
das
sahf
xor
dec
movs
lahf
sahf
not
jmp
(bad)
mul
icebp
movs
push
adc
and
dec
sub
mov
jle
add
ins
out
leave
ja
sahf
push
(bad)
jbe
inc
xor
jle
mov
scas
mov
test
scas
call
aad
push
out
iret
inc
mov
mov
loop
mov
(bad)
sub
push
lds
loop
neg
fdivr
jle
sbb
jl
push
stc
and
fnstenv
ss
movs
pop
jle
mov
xor
outs
lods
dec
out
push
aas
mov
data16
push
mov
add
pop
push
jmp
mov
dec
(bad)
loope
mov
retf
xor
push
fidivr
pop
fisubr
(bad)
cwde
mov
je
loope
icebp
ror
je
push
sbb
data16
leave
ins
lds
push
dec
cdq
fwait
ret
cmps
in
in
adc
add
xlat
pop
lods
inc
enter
jns
cld
or
xchg
pop
or
gs
dec
subps
push
pop
inc
dec
je
add
inc
sub
loope
fmul
adc
mov
dec
loop
push
std
out
fs
(bad)
ja
test
outs
jp
add
mov
imul
jnp
mov
jne
into
ret
mov
inc
ret
add
jbe
enter
call
and
push
xchg
arpl
nop
ret
push
mov
jl
push
pop
aaa
or
std
or
push
pop
inc
test
jl
ins
aaa
shl
sub
popf
lock
lods
loope
xchg
cmc
repz
rcl
out
aas
pushf
(bad)
cli
idiv
daa
mov
adc
pop
movs
cld
imul
fld
fwait
idiv
pop
fadd
dec
mov
xlat
or
jg
jbe
fmul
pop
cmp
mov
push
or
out
sub
dec
(bad)
daa
mov
pop
pushf
daa
push
std
rol
loopne
dec
xchg
xchg
mul
mov
retf
dec
aaa
jl
cmp
mov
xchg
leave
xchg
inc
div
pop
xor
call
sti
push
or
sub
fmul
pop
cld
and
and
xchg
sti
jmp
cli
aas
test
repnz
out
aaa
out
push
sbb
add
repnz
ins
aaa
jge
in
fnstsw
(bad)
int
in
add
push
fcmovb
mov
mov
dec
addr16
push
loope
dec
shr
jmp
or
mov
jmp
pop
gs
in
popf
pop
mov
cmp
sub
pop
ret
mov
int3
daa
jl
push
add
or
cmp
sbb
or
cdq
cmp
js
dec
repnz
mov
popf
cmp
in
pop
cdq
adc
call
or
lods
lods
aam
jo
sahf
adc
lea
jnp
lods
aaa
fsubr
in
sbb
pop
fwait
cmp
xor
mov
out
fwait
lahf
(bad)
mov
lea
not
popa
sbb
aaa
imul
rcr
ja
mov
stc
add
push
ret
movs
cld
nop
mov
or
jl
or
(bad)
les
int3
sub
pop
mov
cli
loope
push
aaa
(bad)
addr16
ins
fsub
out
jmp
or
sub
inc
mov
push
xchg
les
mov
out
stos
lea
dec
scas
cli
popf
push
sti
inc
lods
aas
xchg
aam
pop
mov
dec
push
movs
pop
sub
imul
adc
jbe
xor
(bad)
pop
sbb
dec
or
jnp
sub
push
sbb
xor
push
sbb
imul
cmp
cmp
mov
in
stc
ins
pop
cwde
es
aaa
cdq
inc
enter
and
ror
cmps
shl
sub
or
loopne
lar
stc
int
push
push
pop
jge
add
in
or
into
pcmpeqd
in
stos
lds
mov
dec
gs
(bad)
cmovge
mov
pop
push
mov
cmp
xchg
xor
push
pop
test
mov
out
ja
xchg
out
pop
sbb
sub
jo
ins
dec
add
dec
fdiv
adc
inc
les
or
and
dec
imul
cmps
jmp
ret
xor
add
rcr
mov
pushf
push
lea
mov
mov
out
jp
cs
ds
xor
std
fst
xchg
cmp
scas
fwait
pop
ins
jmp
pop
xchg
cli
push
mov
add
or
mov
aaa
retf
push
ins
add
dec
daa
adc
outs
mov
mov
pop
pop
or
push
xchg
push
and
int3
push
lods
mov
je
mov
mov
fisubr
into
mov
rcr
mov
jmp
ficom
dec
mov
fwait
inc
add
aam
push
and
add
(bad)
push
or
dec
or
ds
ret
push
out
jmp
in
rol
cld
frstor
inc
and
and
call
mov
sbb
loopne
sbb
pusha
dec
mov
inc
ja
imul
cmps
adc
shl
cmp
sbb
stos
adc
jno
mov
in
stos
loop
xor
mov
add
mov
daa
dec
jb
and
dec
push
rcr
rcr
lods
dec
sbb
rol
jp
in
jmp
ret
pop
jb
cwde
sbb
inc
hlt
mov
or
in
mov
dec
push
dec
adc
mov
mov
or
push
cld
stos
cli
and
cmp
icebp
aam
inc
sub
inc
mov
das
rcr
xor
shl
push
sub
and
das
shl
dec
xor
pop
addr16
cld
repz
pop
bound
aaa
icebp
fucomi
imul
inc
cmc
and
nop
cmps
pop
dec
imul
mov
xchg
mov
(bad)
sbb
jb
sbb
in
pop
sbb
in
cmp
dec
mov
jbe
inc
icebp
inc
mov
leave
adc
and
mov
fist
jnp
pop
xor
mov
lock
loopne
rol
pop
xor
mov
adc
and
push
push
sbb
cli
in
call
ret
push
std
daa
pushf
pop
hlt
loop
ror
and
push
lock
scas
ret
or
cmc
(bad)
lea
pop
xchg
jecxz
pop
es
push
jmp
fdivr
cmp
add
inc
pop
std
dec
jae
hlt
cmp
sub
shl
retf
hlt
into
arpl
mov
lods
lock
or
sub
mov
shl
mov
pop
dec
xor
inc
rcl
xor
pop
adc
mov
push
sbb
(bad)
repnz
fdivr
enter
and
loope
std
push
aam
ds
(bad)
mov
push
and
cwde
aaa
pop
shr
xchg
mov
mov
loop
jbe
test
jns
pop
add
sbb
pop
dec
daa
cmp
and
inc
mov
gs
ja
xor
pop
xor
loope
loope
inc
mov
push
or
sub
jo
stos
loopne
and
push
call
stos
cmp
xchg
xor
fcmovnu
aam
cmps
mov
ret
jnp
(bad)
xlat
les
fisttp
jnp
imul
adc
sub
xor
ret
mov
xchg
push
mov
(bad)
lods
push
mov
adc
jl
lods
cmps
push
add
outs
daa
int
pop
sbb
rol
aaa
sbb
mov
dec
xchg
jge
cmp
popf
(bad)
pop
or
in
or
fstp
(bad)
pop
aaa
cmp
(bad)
push
adc
pop
or
jge
lods
imul
mov
inc
sub
mov
push
nop
jb
(bad)
jmp
les
fsubr
push
fmul
jl
sub
test
aaa
(bad)
sti
je
ins
mov
jno
and
(bad)
int
test
imul
and
jmp
dec
lds
aaa
add
pop
cmp
lock
or
jbe
inc
cwde
xchg
outs
adc
cmps
mov
(bad)
jb
shl
xchg
bound
dec
sti
or
sbb
xor
mov
jge
mov
mov
xor
adc
cmp
dec
in
push
cdq
push
mov
dec
fucompp
mov
inc
popf
push
or
stos
loope
into
(bad)
int3
cmps
dec
push
addr16
jbe
cmp
mov
pop
stos
shr
mov
test
outs
fstp
and
js
inc
inc
cmp
data16
add
scas
sbb
test
in
add
das
stos
out
movs
mov
jne
xchg
adc
sar
push
xor
mov
daa
in
(bad)
jg
ret
bound
int3
cmp
out
fistp
adc
jns
shl
add
mov
div
ret
(bad)
fnop
jmp
(bad)
imul
sub
and
xchg
dec
retf
sbb
inc
sub
cli
sbb
push
(bad)
dec
adc
fs
sub
sbb
fdiv
mov
ja
fisub
or
adc
push
mov
daa
sbb
pop
sbb
imul
sub
ror
cmp
pop
jo
pop
shl
loopne
nop
inc
mov
mov
test
sbb
or
into
add
or
mov
rol
add
pop
cmp
pop
cmp
dec
jmp
stos
sbb
sub
jmp
cmp
ja
scas
push
adc
leave
jge
fadd
stos
fmul
fstp
inc
rep
lahf
(bad)
cmp
mov
sub
dec
mov
mov
nop
jbe
or
std
xor
bound
push
cmp
pusha
xor
dec
fsub
push
and
nop
jno
or
jbe
cmps
or
cmc
test
(bad)
test
sub
adc
pop
add
aam
imul
push
inc
andnps
fst
(bad)
icebp
dec
ret
in
xchg
mov
add
into
push
mov
and
sbb
or
mov
stc
lea
ins
pop
ins
ret
cmp
sub
stos
jecxz
je
cld
cmps
dec
dec
test
push
pop
(bad)
and
int3
xor
daa
frstor
jl
xor
jmp
mov
sbb
add
jae
pop
cmp
sub
sbb
mov
xchg
ret
inc
and
ins
imul
or
es
or
pop
xchg
add
movs
jl
cmps
inc
in
dec
sbb
in
mov
int3
aaa
add
jno
es
or
cmp
xchg
jmp
inc
mov
push
or
in
sar
lods
jecxz
cmp
adc
ins
adc
movs
add
sub
push
pop
out
xchg
shl
and
ins
pop
fld
test
jne
pushf
add
push
xchg
jnp
inc
imul
out
or
rcl
(bad)
stos
jno
imul
lods
xor
inc
pop
dec
jle
pop
daa
cmp
xor
xlat
push
cmps
lahf
sub
dec
xor
add
mov
leave
dec
es
adc
ins
movs
add
lea
in
sbb
cmps
scas
cmp
bnd
push
xor
add
imul
stc
cmps
lods
fstp
rcl
inc
dec
xor
add
dec
sbb
or
es
mov
and
pop
and
int3
cli
xor
ins
mov
int
pop
pop
jb
mov
jns
sub
fldenv
mov
push
arpl
cmp
xlat
imul
mov
xchg
inc
pop
je
adc
pop
cmp
das
test
cmp
cmps
repnz
daa
pop
fistp
mov
cmp
pusha
ins
mov
call
xlat
icebp
pop
lahf
shr
daa
stc
ret
or
cmp
jmp
add
add
bound
pop
mov
cmp
xor
pop
cmps
pop
cli
inc
xlat
cmp
ins
add
or
jne
aaa
leave
cmps
inc
and
cmp
xor
cmps
sbb
and
test
or
xor
push
mov
pop
xchg
adc
push
hlt
or
sub
movs
pop
outs
outs
(bad)
je
ins
(bad)
in
pop
cmp
mov
cmps
loope
in
xchg
jbe
into
adc
mov
mov
xor
mov
rol
rcr
sub
mov
cmps
ds
out
fistp
hlt
(bad)
adc
or
fwait
or
stos
cmp
mov
fdiv
mov
xor
out
repz
pop
pop
fnsave
pop
sbb
sub
outs
lea
push
test
mov
ja
xor
jno
fwait
mov
adc
cmps
pop
repz
loopne
aaa
ins
icebp
push
xchg
lods
scas
xlat
loope
lea
cmp
push
sbb
fld
push
ja
(bad)
adc
push
jmp
xchg
mov
out
aaa
rol
cli
pop
inc
cmp
jecxz
push
xchg
mov
ins
mov
pusha
pop
pusha
neg
dec
mov
int
scas
push
cld
arpl
jle
fisttp
ja
jg
(bad)
jns
sbb
sub
and
ja
cwde
jmp
xchg
fwait
aas
dec
fwait
sub
int
arpl
add
sub
aad
in
in
push
fadd
add
std
sbb
sbb
sub
jne
inc
push
dec
cld
es
int3
add
pop
ds
loop
and
xchg
pop
(bad)
fs
out
jne
cs
pop
push
aad
sbb
inc
ret
inc
(bad)
xchg
or
cmp
mov
jg
sub
into
pop
or
push
pushf
and
jge
sahf
pop
(bad)
fisubr
jns
fisub
lods
jne
push
cmp
mov
out
inc
jg
popf
cmps
cmp
xchg
in
adc
ins
repz
fcomp
cmp
sbb
and
je
imul
(bad)
mov
add
call
xchg
push
ja
es
pop
sub
test
mov
mov
inc
jo
pop
mov
or
or
lahf
push
ins
xor
pop
stos
sub
jp
bound
and
idiv
mov
sbb
call
push
fistp
int3
xor
mov
out
jge
jns
cld
mov
leave
leave
mov
xor
mov
xchg
push
in
jl
inc
dec
and
popa
aaa
fdivr
add
int3
leave
mov
jecxz
aas
mov
dec
xchg
lahf
fs
call
pop
fsubr
lods
lds
add
mov
dec
or
xlat
inc
jno
dec
loop
mov
push
cmp
test
push
fstp
pop
jo
ror
or
aad
es
xor
fwait
sub
push
mov
xchg
mov
call
add
int
mov
mov
mov
int3
cmps
and
(bad)
rcl
fs
push
pop
shl
adc
xchg
mov
in
xor
sbb
pop
aaa
dec
xchg
jle
stos
fsub
mov
add
push
daa
jmp
call
pop
fdiv
cli
pop
mov
scas
rcr
inc
movs
push
cmp
ret
addr16
dec
clc
xchg
add
mov
jno
lods
or
lock
stos
nop
xor
daa
sub
dec
(bad)
lahf
jmp
mov
movs
daa
xor
ror
adc
or
jg
imul
leave
cmp
push
scas
xchg
xor
xchg
xchg
sbb
out
fcom
and
mov
xchg
sub
cmp
mov
push
lahf
dec
xor
das
(bad)
dec
push
inc
or
lods
xor
outs
fdiv
loop
adc
movs
xor
lock
dec
rol
mov
mov
(bad)
mov
scas
outs
aam
pop
pop
pushf
add
ret
jmp
pop
and
push
mov
xchg
shr
sbb
push
jmp
in
mov
inc
cmp
add
sub
mov
xor
inc
cmp
leave
mov
cmps
sti
push
(bad)
xor
retf
jp
xchg
clc
sti
ins
cmps
repz
les
pop
cmp
mov
mov
inc
cdq
rol
popa
loopne
into
mov
(bad)
cmc
aaa
adc
xlat
scas
jecxz
cmp
xchg
pop
cs
repnz
pop
sub
mov
sti
in
xchg
out
jg
ins
pop
push
ror
(bad)
push
inc
mov
nop
mov
push
cmc
push
test
push
jp
jmp
arpl
push
cmp
pop
aad
enter
nop
cli
mov
movs
cmps
sti
rol
lods
inc
fadd
pop
fwait
mov
addr16
and
xor
fidivr
jg
fdiv
(bad)
dec
push
lock
and
mov
cmps
and
mov
ins
push
pushf
or
xchg
ficom
jp
imul
push
cmps
lea
push
outs
std
(bad)
fadd
jbe
pop
sti
jl
push
push
cld
ins
sti
pushf
imul
xchg
xor
dec
cli
mov
scas
dec
pop
jne
adc
dec
push
in
jnp
(bad)
fcom
push
dec
pushf
jge
jmp
pop
push
add
mov
inc
mov
mov
cmp
dec
call
mov
adc
rol
mov
std
push
call
and
sti
test
loope
popf
sub
mov
sbb
ror
in
pop
mov
xchg
dec
lods
aas
ins
sub
ret
ins
mul
int
sbb
loopne
cmp
dec
icebp
sbb
jge
jl
imul
int3
stos
and
popa
add
xchg
jno
mov
sub
adc
bnd
(bad)
pop
ins
push
lods
call
hlt
pop
sar
ins
cli
and
cmp
mov
adc
sbb
push
mov
dec
push
(bad)
ins
jnp
adc
iret
in
leave
jns
sub
mov
mov
xchg
aaa
jne
fld
jne
loopne
lods
mov
popa
in
fidiv
(bad)
(bad)
into
push
lahf
jmp
lods
hlt
fld
sub
jnp
jecxz
fwait
or
sub
xchg
dec
dec
out
daa
lea
mov
push
sbb
jbe
ins
popa
xor
(bad)
mov
xchg
pop
mov
nop
call
rol
icebp
pop
pop
mov
push
jnp
xlat
and
nop
xlat
dec
push
aaa
add
mov
fcmovbe
jbe
xchg
ins
lahf
mov
inc
cli
jo
ins
movs
test
adc
jns
fld
ja
pop
and
push
sub
jno
pushf
enter
pop
ror
pop
in
adc
pop
add
mov
jno
test
xchg
or
imul
jl
in
xchg
std
sti
popa
mov
nop
xor
or
lahf
xchg
div
retf
or
rcl
repnz
inc
call
mov
cmp
push
pusha
fistp
mov
test
xor
(bad)
mov
push
iret
sub
mov
mov
adc
jnp
or
jae
cli
or
cmp
push
popf
cmps
ins
push
fst
in
inc
cmps
je
idiv
xor
jp
es
mov
mov
rcl
ins
pop
jo
(bad)
pop
push
push
std
data16
imul
add
int
cdq
mov
outs
sbb
or
(bad)
out
pushf
ficomp
xor
in
cld
fsub
xchg
xchg
out
inc
(bad)
cmp
mov
(bad)
fild
inc
mov
loope
or
sbb
repz
xchg
push
nop
arpl
ins
in
push
add
add
xor
call
neg
sbb
cmps
ret
jbe
into
adc
inc
cmp
pop
gs
call
test
and
imul
mov
stc
inc
adc
pop
clc
test
jge
xchg
aad
outs
cmp
cmp
pop
add
int
cs
fiadd
(bad)
ins
cmp
push
jmp
iret
xor
xor
fdivr
mov
and
dec
mov
push
sbb
ins
call
lods
(bad)
int
rcl
loope
aam
cld
fwait
int
add
popa
mov
cmp
inc
daa
dec
dec
inc
mov
ja
popa
jmp
xchg
sbb
mov
mov
ins
sbb
mov
in
jp
inc
push
movs
in
popa
cmps
dec
mov
sbb
inc
popa
mov
pushf
mov
inc
gs
ja
imul
retf
dec
arpl
push
adc
pop
and
mov
ins
aam
ret
pop
in
out
icebp
jnp
clc
and
jno
jg
lahf
int3
sub
pop
loopne
push
cmps
cmps
mov
jb
mov
sub
call
or
cmp
nop
outs
mov
lods
cmps
and
lock
repnz
and
retf
loope
jnp
jae
sub
in
arpl
stos
push
rcl
dec
sub
dec
mov
cmp
mov
adc
add
popf
retf
jno
or
jb
bound
mov
mov
pop
adc
neg
xor
mov
mov
inc
mov
lock
(bad)
and
xor
pop
test
retf
scas
xor
push
ins
adc
and
pop
mov
mov
adc
ins
sti
imul
and
cdq
mov
lods
mov
bound
push
sub
loope
mov
aaa
mov
loopne
or
jl
add
add
mov
nop
inc
(bad)
or
mov
sti
and
mov
push
and
xchg
dec
icebp
push
xor
nop
daa
stos
inc
fstp
dec
pop
fdivr
cmps
imul
jge
push
add
dec
push
add
pop
sbb
pop
imul
(bad)
jmp
aaa
push
sub
and
lahf
js
mov
dec
xchg
pop
(bad)
shr
test
push
jbe
push
mov
leave
xchg
lods
sub
(bad)
mov
sar
ret
cmc
repz
test
push
lods
ja
pop
mov
mov
adc
scas
adc
inc
rol
sbb
mov
pop
xchg
lods
(bad)
push
cs
xchg
mov
mov
shl
mov
fcom
ja
jne
fisttp
sub
(bad)
xlat
loope
int
sbb
jmp
call
adc
cmp
xor
test
mov
fisub
enter
push
adc
clc
pop
adc
mov
push
mov
(bad)
(bad)
in
xor
inc
lock
jmp
arpl
stos
cmp
pushf
add
xchg
shr
lods
cs
test
cmps
loopne
in
stos
mov
in
pop
and
jg
test
xchg
jmp
dec
mov
sub
retw
xchg
dec
shl
mov
and
aad
aaa
and
pop
dec
rol
push
adc
pavgw
(bad)
jge
jno
or
inc
mov
and
jge
fmul
and
lods
rol
mov
ins
xor
jecxz
or
add
sahf
xchg
sub
iret
add
mov
dec
ret
inc
mov
(bad)
dec
adc
es
ret
mov
movs
retf
push
es
lods
sub
add
mov
dec
out
dec
stos
retf
in
movntq
out
imul
ffree
push
cmps
or
hlt
mov
ja
pusha
int3
loope
stos
call
jbe
add
jmp
pop
mov
shl
dec
sbb
outs
mov
push
add
mov
sbb
xchg
inc
aaa
or
cmp
inc
jg
outs
sbb
jge
jmp
fwait
test
and
push
aam
ss
push
cdq
(bad)
mov
mov
enter
stos
popf
inc
sbb
or
push
adc
lea
mov
adc
and
add
jnp
cmp
jl
and
fdiv
xor
mov
mov
std
shr
test
or
call
push
sbb
sub
call
push
rcr
rcl
call
jno
sub
adc
out
clc
push
mov
call
adc
cmp
pop
and
sbb
fs
shr
(bad)
std
gs
retf
xchg
retf
test
aad
neg
pop
dec
enter
mov
jne
mov
mov
adc
sub
sbb
pop
(bad)
xchg
pop
(bad)
fnstsw
enter
rcl
les
adc
test
dec
mov
test
imul
(bad)
popf
mov
mov
or
cwde
sti
int
sub
jl
pusha
cmps
xchg
jae
add
dec
sub
fstp
clc
rcl
sbb
clc
push
(bad)
ds
jno
dec
hlt
cmp
adc
leave
and
aaa
enter
shr
arpl
mov
ins
ret
add
jle
sub
or
push
sub
mov
out
mov
cmp
in
out
xchg
dec
push
stc
xor
add
or
push
jmp
sub
ins
movs
(bad)
xchg
lods
mov
mov
rcl
ja
push
loope
into
xchg
xor
push
xor
xchg
pop
jmp
mov
jl
std
sahf
jg
iret
and
enter
mov
hlt
jb
call
xchg
imul
inc
pop
in
inc
out
movs
ds
pusha
cli
repnz
mov
dec
mov
xor
iret
lods
ds
ret
in
enter
xchg
es
adc
call
ss
jmp
pop
in
jle
push
retf
push
lahf
xor
nop
addr16
ds
sti
ja
test
cmp
inc
ds
xchg
fwait
test
aas
retf
icebp
call
add
cwde
add
shl
cmp
ins
and
mov
aaa
pop
mov
add
ja
cmp
fmul
add
xchg
cmp
aaa
lods
jl
mov
ja
lock
inc
mov
sbb
gs
add
and
or
sti
test
mov
add
mov
aaa
in
and
rcl
in
inc
andnps
cmp
fisub
xchg
jecxz
add
inc
(bad)
mov
addr16
pop
dec
popa
imul
inc
add
fadd
test
shr
cmp
test
mov
xchg
jb
pop
mov
jl
xchg
mov
or
pop
lods
pusha
aas
push
out
mov
and
dec
or
sub
outs
and
inc
jno
lods
out
xor
adc
and
jmp
adc
imul
cmp
jnp
ss
add
push
pop
or
jle
pop
loope
(bad)
dec
ins
ins
mov
inc
neg
fadd
enter
imul
lock
sub
int
sub
xchg
es
retf
pavgb
ins
and
mov
dec
(bad)
jg
xlat
cmc
bound
pop
mov
cmc
daa
test
in
int3
mov
mov
pushf
or
fcom
int3
pop
aaa
imul
je
dec
lods
data16
sub
jle
mov
daa
je
cmp
addr16
mov
lahf
sub
sub
push
jecxz
inc
and
push
adc
cmc
lock
mov
xlat
dec
xor
enter
xor
mov
push
jb
mov
out
test
ins
add
mov
add
stos
push
dec
retf
push
rcl
or
ja
push
push
dec
add
mov
pop
cwde
pop
mov
mov
xchg
retf
xor
xor
sbb
int3
cmc
movs
jle
dec
fwait
loope
xchg
repnz
adc
fwait
sbb
add
dec
mov
nop
call
xor
(bad)
cli
imul
jae
push
ret
loope
sbb
in
and
lds
and
sub
shl
ss
popa
pop
ret
ja
gs
sbb
pop
push
dec
mov
xor
and
add
sub
and
aad
jbe
sub
add
stc
mov
icebp
int3
call
mov
dec
int3
add
repnz
xchg
lods
imul
sub
(bad)
gs
cmp
jg
repz
fnsave
sub
gs
or
push
std
sub
dec
and
ins
and
xchg
cmps
xor
push
test
stos
jno
xchg
push
pop
add
fsubr
or
mov
adc
mov
jbe
(bad)
fbld
and
pop
stos
push
jge
in
push
pop
cmps
or
int3
or
adc
lock
xchg
test
out
xlat
jge
ins
jmp
fisttp
ss
(bad)
cld
jnp
push
push
or
stos
inc
ret
jge
mov
dec
mov
test
pop
fsubr
stc
imul
pushf
add
and
cdq
add
jnp
cld
sub
jmp
fdivp
in
out
pop
dec
(bad)
ins
lock
cmp
inc
mov
jne
idiv
pushf
pop
mov
mov
xor
mov
nop
fisttp
aaa
sub
add
xor
iret
(bad)
mov
inc
mov
inc
outs
cmp
add
inc
dec
inc
xor
hlt
into
xlat
lds
pop
mov
push
or
daa
jge
sub
sbb
push
xor
stos
rol
push
xlat
jo
xchg
idiv
jl
dec
cmps
add
push
pop
int
cmp
push
iret
fs
(bad)
rol
pop
pop
mov
push
add
push
jo
cmp
cmp
xchg
call
scas
neg
adc
mov
push
xor
push
test
cmps
dec
mov
lods
bnd
arpl
inc
(bad)
push
push
push
push
fcomp
in
arpl
arpl
loope
xchg
pop
rol
and
outs
mov
mov
xchg
sbb
pop
cmovne
mov
loopne
jle
xchg
push
test
fstp
lods
iret
retf
ja
push
cld
pop
cwde
ja
imul
or
repz
ret
pop
iret
je
loop
mov
jae
inc
pop
or
or
mov
sub
mov
sub
push
mov
addr16
dec
aad
daa
pop
ss
cmp
test
repz
lea
jmp
das
pop
popf
cmp
ss
js
mov
daa
stos
pop
repnz
outs
movs
mov
mov
jp
mov
cmp
xor
mov
jmp
jns
stos
push
mov
sub
pop
or
push
and
mov
fstp
pop
add
and
out
mov
cmp
clc
sbb
dec
or
fs
xchg
cmp
jl
xor
jno
sahf
xor
mov
add
js
das
jle
call
cmps
mov
mov
xor
retf
call
movntps
mov
sbb
jle
inc
xchg
xor
mov
pop
aaa
or
or
popa
xor
mov
dec
(bad)
popf
xor
in
cs
push
jmp
lea
cli
popa
pop
cld
push
ins
repnz
adc
pusha
add
lods
sar
cmp
push
xchg
idiv
popfw
(bad)
pop
imul
cwde
cdq
js
and
mov
aam
add
adc
fst
das
out
cwde
movs
daa
repnz
cdq
pop
dec
mov
(bad)
sbb
ins
mul
inc
inc
xchg
ret
out
adc
scas
push
rcl
bound
push
int3
out
pop
stc
mov
cmp
dec
test
imul
jmp
xchg
hlt
cs
sbb
inc
add
ret
or
mov
lods
neg
fsubr
xchg
add
push
adc
cmp
fstp
loopne
adc
sub
cdq
loopne
sub
xor
sbb
inc
push
inc
or
mov
mov
inc
ins
gs
xchg
add
sub
jns
push
popa
dec
adc
jnp
rcl
cmp
dec
test
dec
test
xchg
imul
into
pop
cmps
xor
pop
int3
sbb
sub
mov
hlt
cli
mov
pop
xchg
mov
mov
jg
mov
int
cmps
adc
popa
rcr
jmp
mov
inc
arpl
jle
adc
cdq
addr16
(bad)
(bad)
mov
and
xchg
ss
adc
sbb
frstor
data16
cli
xchg
jno
mov
mov
adc
mov
mov
lods
jo
or
xor
outs
and
int
mov
xchg
mov
xor
test
loope
add
cmp
push
rcl
add
ds
cmp
push
mov
addr16
and
cmp
xor
adc
xor
ins
aam
xor
(bad)
xchg
sub
jle
mov
ins
adc
pushf
lods
icebp
dec
lods
fs
lds
push
aam
add
ror
lock
jl
fnstcw
xor
inc
iret
add
mov
xchg
xor
hlt
mov
push
shl
cmps
mov
mov
xor
mov
jne
pop
in
xchg
lods
push
xchg
dec
and
add
add
sbb
outs
mov
jno
cmp
stos
cmp
retf
fisttp
jmp
add
ret
pop
ins
imul
mov
cmp
mov
xor
push
(bad)
xchg
scas
jge
ins
xchg
lock
push
jo
jo
mov
lock
lock
inc
cs
lock
rcl
or
jo
gs
adc
jns
and
jo
adc
mov
pop
hlt
sbb
push
xor
push
shl
xchg
mov
cmp
jo
xor
jnp
in
sar
stc
xchg
and
adc
mov
sahf
cwde
xor
push
jl
push
adc
jle
lock
lods
fs
shl
jg
mov
cwde
push
xor
das
jb
and
(bad)
jp
test
mov
call
add
test
mov
sti
xor
ja
pop
test
lods
cmp
jo
jo
jo
mov
paddq
jb
push
mov
mov
jns
jnp
clc
or
pop
inc
(bad)
outs
jo
clc
jbe
add
pop
(bad)
mov
push
xchg
mov
mov
fist
in
jnp
lock
jle
lock
jo
sti
push
jge
jo
in
clc
(bad)
lock
in
jb
xchg
cmc
stc
and
mov
pop
sbb
cwde
ss
repz
jg
aad
rcr
lock
call
(bad)
cmp
dec
aas
adc
jl
jg
mov
push
cmp
lahf
rcl
call
mov
pop
inc
mov
or
xor
mov
mov
fcomp
repz
push
fs
js
retf
js
mov
pop
cmp
rcl
cmc
cmp
cs
xor
daa
mov
js
or
pop
int3
mov
lahf
ins
fwait
clc
not
sbb
ja
(bad)
clc
fcomp
and
fistp
xchg
out
(bad)
clc
sbb
test
mov
aas
fstp
push
int3
(bad)
mov
adc
pop
mov
jg
jl
call
aad
xchg
cmp
mov
xchg
pop
into
cmp
nop
fnstenv
jns
push
fdiv
sbb
ja
cwde
call
lahf
xchg
fwait
jne
sbb
repz
dec
xor
(bad)
pushf
fwait
int3
mul
add
cmp
aas
lock
cld
cmp
mov
js
aad
js
adc
xlat
clc
lahf
pop
or
test
push
push
push
fwait
call
or
sub
call
sbb
dec
std
mov
jp
cmp
clc
jge
mov
or
sbb
sub
pop
sub
sbb
ror
daa
sub
adc
adc
mov
mov
test
inc
fldenv
jne
mov
imul
(bad)
lock
mov
cmp
jae
je
push
fldenv
jno
push
mov
push
dec
dec
jnp
stc
pop
movs
jns
aam
dec
out
imul
lds
sub
pop
add
aam
movs
call
and
scas
dec
cs
add
adc
imul
jo
je
pop
and
enter
and
movs
nop
push
fsub
movs
dec
aam
jo
hlt
in
iret
inc
test
add
ror
fistp
frstor
dec
pop
lods
hlt
lds
in
shl
cmp
jmp
clc
inc
pop
test
push
sbb
in
inc
inc
cs
arpl
je
or
in
inc
sub
dec
mov
xor
and
inc
sub
rol
pop
mov
fsub
aas
mov
movs
ror
mov
mov
(bad)
je
aas
xchg
fdiv
loop
imul
xor
or
in
or
dec
adc
cld
adc
popf
loop
mov
cmp
stc
inc
sbb
add
push
mov
or
adc
mov
pop
mul
jle
mov
scas
stc
or
int3
repz
das
imul
out
xchg
mov
shr
jae
add
mov
push
sub
push
imul
push
lods
and
and
stos
int
pop
movs
sub
adc
mov
not
fcmovnbe
mov
sar
out
rol
out
xchg
stc
aad
xchg
repz
add
xlat
jmp
sbb
push
push
stos
pop
jns
imul
(bad)
stc
sub
jg
enter
dec
es
(bad)
cld
pop
sub
imul
jmp
out
pop
dec
(bad)
jns
test
xor
pop
pop
out
xchg
jmp
fsubrp
xor
xchg
mov
cmc
retf
mov
in
adc
shr
xor
push
scas
je
push
out
xor
neg
cmp
sbb
mov
push
daa
fwait
inc
mov
pop
fdiv
jns
jb
and
mov
ins
mov
mov
mov
stos
add
call
pop
add
(bad)
(bad)
clc
or
sbb
sub
jmp
xlat
pop
ja
sbb
pop
imul
call
or
ror
add
stc
mov
push
or
pop
stc
mov
jb
call
xor
xchg
test
scas
push
and
push
push
mov
push
ja
xchg
hlt
sbb
xchg
scas
push
mov
sbb
mov
push
adc
adc
(bad)
xlat
mov
leave
vphaddubd
aad
into
std
or
scas
adc
lahf
je
bound
dec
in
retf
pushf
je
bound
xor
adc
shl
add
(bad)
outs
fadd
mov
dec
or
ret
inc
sub
je
xchg
dec
inc
rcr
lahf
fist
dec
mov
inc
xchg
mov
adc
push
ret
or
xor
data16
or
cmps
mov
je
push
(bad)
int
dec
je
mov
leave
dec
leave
mov
icebp
or
dec
retf
cdq
sbb
add
dec
aam
add
retf
pusha
(bad)
std
mov
outs
sbb
mov
xor
popa
push
cdq
mov
inc
fst
mov
dec
aam
cdq
mov
(bad)
(bad)
leave
pop
fadd
pop
add
int
fld
lods
fist
lea
rcl
adc
cdq
retf
fldcw
arpl
mov
pop
fxch
push
mov
push
cwde
outs
test
fsub
scas
mov
cdq
dec
sbb
fcomp
mov
mov
mov
dec
mov
retf
mov
mov
mov
mov
std
in
mov
dec
inc
fist
cdq
xchg
imul
cdq
outs
xor
scas
pop
push
cdq
xchg
cmp
sbb
adc
aas
popf
scas
xchg
loop
sbb
pop
dec
jge
pop
scas
iret
add
mov
push
stos
sub
pop
retf
xchg
inc
dec
(bad)
aad
stos
mov
arpl
mov
les
sub
pusha
bsf
mov
jl
shl
push
or
cmp
ror
das
pop
(bad)
(bad)
test
mov
or
fistp
pop
adc
and
loopne
popa
sbb
repnz
add
loopne
shr
dec
inc
mov
pusha
mov
jmp
xchg
add
pop
and
xor
sub
sub
aad
dec
add
and
and
fild
sar
ror
and
add
imul
lods
sub
adc
and
mov
cwde
rcr
and
pop
add
rcr
rol
jecxz
mov
mov
xchg
rcl
leave
jp
mov
lds
imul
dec
imul
push
imul
mov
mov
nop
out
jb
pop
push
dec
mov
bound
inc
sub
ret
nop
or
mov
jo
xlat
ret
hlt
nop
aam
imul
and
imul
adc
xchg
sbb
mov
cdq
mov
xor
cli
fwait
mov
pop
aad
mov
sbb
inc
inc
push
cmp
push
xchg
ret
enter
(bad)
xchg
adc
ret
rcr
dec
sbb
shl
adc
shl
fwait
sbb
push
or
sub
fwait
mov
jl
mov
inc
inc
xchg
xor
pop
cwde
hlt
rol
pop
out
data16
lds
daa
out
dec
shl
fwait
inc
clc
cmp
mov
mov
xchg
add
rol
sar
push
or
mov
xchg
test
add
cmc
push
xchg
mov
call
in
shl
xor
adc
ror
cmp
daa
rcr
xor
ins
rcr
xor
mov
fwait
retf
cli
jbe
adc
mov
fwait
aaa
inc
ret
push
icebp
inc
in
fwait
xor
adc
fwait
in
xchg
icebp
add
adc
data16
dec
rcr
shl
shl
sbb
push
push
fnsave
shr
bound
sub
xchg
rcl
popf
push
fmul
rol
inc
jb
lods
je
adc
inc
or
adc
xor
sub
push
dec
push
iret
xor
iret
int
xchg
cmp
adc
lods
pop
xor
cdq
loopne
jl
pop
xor
loop
mov
mov
scas
leave
daa
xchg
sub
and
push
mov
xchg
(bad)
icebp
push
sbb
xchg
sbb
adc
mov
adc
hlt
rcl
add
xor
inc
xor
adc
add
stos
mov
in
xchg
mov
pop
mov
ret
call
dec
rcr
xor
sub
rcr
lods
adc
inc
fst
aad
aad
push
mov
icebp
int
push
xor
(bad)
(bad)
mov
pop
push
gs
mov
mov
sub
sub
movs
rcl
in
inc
aam
mov
inc
loopne
movs
sub
call
(bad)
fs
mov
push
movs
push
movs
(bad)
in
(bad)
adc
jmp
in
es
sub
pop
xlat
shl
inc
es
test
in
and
shl
sbb
lea
test
dec
xor
imul
les
xchg
sbb
pusha
aam
mov
sbb
les
jbe
outs
xchg
movs
aad
push
jmp
out
xchg
cmp
adc
adc
mov
fisub
sahf
and
(bad)
addr16
jb
dec
out
out
push
outs
push
sbb
cwde
inc
and
pop
in
sub
add
loopne
fs
test
xchg
das
adc
push
outs
popf
in
das
adc
fucomp
jg
test
outs
xchg
and
mov
xor
pop
or
adc
pop
out
sahf
fwait
inc
sti
inc
add
xchg
das
inc
inc
cmps
test
jecxz
pop
dec
inc
or
pop
push
aad
sub
mov
add
out
pusha
lods
movs
(bad)
movs
inc
or
pop
xchg
mov
test
adc
in
dec
aad
aad
adc
sbb
xchg
into
je
pop
or
xchg
mov
xchg
xchg
hlt
loope
xchg
movs
leave
sbb
aam
cdq
in
(bad)
aad
shl
movs
icebp
in
outs
mov
mov
adc
xchg
mov
in
aam
mov
movs
aad
pop
out
frstor
in
sub
cmp
icebp
loopne
in
ret
and
inc
or
jl
lods
xchg
xchg
pop
loopne
xor
mov
fnstenv
xor
cld
mov
arpl
pop
push
clc
ret
pop
dec
repz
adc
clc
pop
clc
xor
mov
add
arpl
xor
mov
(bad)
jmp
xor
icebp
lods
(bad)
shl
xchg
mov
xor
push
idiv
sub
lods
sti
ds
jae
adc
mov
inc
rol
jae
jb
mov
scas
sub
xor
xor
inc
jb
or
jg
pop
lods
xor
mov
repnz
add
push
jne
test
repz
ds
sbb
push
clc
xor
adc
mov
pop
xor
int
inc
jmp
adc
bound
cmp
cmp
scas
jb
icebp
mov
(bad)
jns
jb
out
inc
mov
int
mov
imul
dec
jns
sub
stos
pop
fcom
adc
ds
xor
clc
js
jb
xchg
xor
xor
xlat
sti
mov
mov
and
popa
fdivr
inc
push
js
pop
cli
push
data16
clc
push
clc
repnz
mov
mov
dec
arpl
jle
stc
mov
jo
ds
xor
js
push
push
xor
jmp
cmp
sar
xor
dec
lock
jb
jp
xor
jb
xor
cmp
and
je
mov
xor
mov
push
ds
stc
xor
je
mov
cmp
mov
jb
cmp
xor
sub
push
fist
cld
(bad)
popf
jo
cmp
loope
push
cdq
mov
and
push
xor
fcmovu
inc
gs
jmp
cmp
(bad)
jbe
sbb
xor
inc
sub
rcr
pusha
icebp
data16
xchg
add
fcmovne
push
(bad)
mov
das
pop
das
jb
loop
bnd
scas
xor
loopne
cmp
int
in
out
cld
rcl
fnsave
sbb
fidiv
inc
int
shr
fucomip
ja
test
das
lahf
shr
(bad)
push
mov
nop
sub
push
int
adc
jb
mov
out
jp
lods
push
int
xchg
das
jmp
adc
in
push
xchg
ds
movs
mov
sar
pop
push
push
pop
into
push
fsub
sub
shl
icebp
ja
inc
adc
ja
lahf
shl
icebp
ja
xor
inc
or
mov
hlt
pop
rcl
int
sahf
push
mov
adc
mov
in
sbb
cmp
mov
out
repnz
sub
fiadd
adc
fst
xor
sbb
ror
out
int
push
pop
jb
adc
xor
xchg
sbb
popf
fdiv
jb
push
xchg
pop
adc
popf
mov
fwait
push
fwait
hlt
push
jno
xor
adc
jecxz
shl
js
je
and
inc
xor
popf
ret
jnp
adc
sbb
push
lock
ins
cmp
xchg
ror
xchg
cmp
aam
(bad)
jge
xchg
(bad)
popf
xchg
xlat
(bad)
mov
inc
push
(bad)
std
aam
mov
push
rol
cmps
fstp
mov
movs
mov
daa
pop
(bad)
or
xchg
mov
mov
ss
jo
(bad)
pushf
sbb
scas
push
mov
lods
inc
or
ds
or
lods
xchg
mov
mov
sbb
or
stc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
lods
adc
adc
xchg
push
cmp
and
pop
ror
fidivr
clc
pop
push
in
push
stc
ins
xor
push
mov
scas
je
xlat
imul
fcomp
out
mov
cmp
mov
sbb
jl
bound
ret
push
fisubr
jbe
mov
jle
and
inc
test
fisub
push
cmp
popf
inc
jae
inc
xchg
icebp
pop
hlt
fdivr
(bad)
jp
jle
xchg
push
lods
pop
dec
stc
mov
cmp
pop
and
xchg
jno
nop
pop
nop
jg
pop
nop
jg
pop
nop
jg
lahf
nop
jg
pop
nop
jg
pop
nop
jg
fist
call
pop
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
nop
jg
lahf
nop
jg
pop
nop
jg
pop
nop
jg
pop
nop
jg
in
shr
cmc
jg
jp
or
out
stc
or
outs
cmc
or
pop
hlt
sbb
cli
in
iret
ds
jg
jp
sbb
xor
sbb
out
shufps
sub
pop
cmc
sbb
cmp
jg
in
fst
xchg
pop
stc
sbb
pop
icebp
or
lock
adc
cmp
sbb
repnz
push
shl
push
loop
nop
or
in
in
cmc
das
xchg
or
jno
psubw
jle
repnz
sbb
sub
in
fsubr
stc
pop
push
(bad)
cmp
jp
sbb
sub
aam
push
(bad)
dec
xchg
jbe
pop
mov
ja
jmp
cmp
sahf
sub
gs
jbe
cmp
out
mov
test
or
jl
stos
xchg
fcmovnb
dec
jno
loope
pop
adc
scas
and
push
dec
ret
push
xchg
fadd
and
sbb
loope
(bad)
and
jo
and
call
pop
pop
xor
mov
test
aaa
add
cmp
mov
pushf
xchg
mov
inc
jo
jo
jo
shr
xchg
loopne
pop
sbb
cs
std
lods
popf
lock
sbb
pop
neg
fist
sbb
adc
xor
test
mov
repz
xor
lods
fwait
xor
sbb
cmp
and
mov
mov
mov
push
push
ja
add
cmp
stos
jbe
dec
test
and
movs
cld
push
sub
ds
sbb
pop
cmp
mov
lock
jo
jo
xor
xchg
lock
jb
push
xor
inc
lock
sub
mov
xor
push
sbb
cmps
rcr
aam
push
out
loope
out
popa
and
inc
cmp
cwde
mov
dec
inc
add
(bad)
cdq
fistp
or
cdq
fild
mov
dec
sub
cmp
test
stos
lea
sbb
pop
inc
fnstenv
mov
pop
sbb
cwde
xchg
lahf
mov
aaa
adc
pop
aaa
push
and
(bad)
stc
cdq
cwde
mov
xor
push
jns
cmp
test
or
push
or
mov
mov
push
adc
xchg
ror
push
fidivr
js
jge
inc
cld
xor
xor
loopne
and
sub
and
sbb
pushf
xchg
es
xchg
or
in
mov
jae
arpl
cdq
dec
push
aam
ficom
mov
out
mov
add
push
mov
inc
add
neg
(bad)
call
imul
jmp
jecxz
pop
inc
pop
pop
jle
popa
out
shl
fwait
ins
push
imul
call
clc
in
imul
jns
mov
rol
pop
cmp
icebp
cli
loopne
xchg
repnz
popa
aas
test
(bad)
icebp
mov
push
data16
rol
mov
jg
jns
mov
rol
test
(bad)
mov
dec
inc
ds
in
rep
push
jne
xor
mov
aam
fsub
cmc
ret
call
pop
mov
shl
xchg
dec
pop
fs
jb
icebp
mov
imul
fs
mov
loope
mov
popa
push
aaa
jbe
sub
out
mov
jno
bound
loop
xlat
(bad)
fsub
jmp
jae
inc
jmp
fdivp
clc
iret
rcr
cwde
jnp
ins
cmp
xchg
mov
(bad)
(bad)
dec
jle
ins
adc
movs
mov
(bad)
fcom
jae
inc
mov
std
jmp
jg
jg
test
mov
mov
sub
call
les
add
popw
stc
pop
out
jo
dec
lahf
fsubr
adc
in
adc
call
mov
retf
sbb
inc
mov
loop
in
dec
out
push
out
jge
push
in
aad
std
sbb
sub
ins
loop
nop
inc
xchg
and
shr
adc
adc
(bad)
sbb
data16
(bad)
bound
into
push
mov
adc
sar
in
sbb
pop
or
sbb
popf
or
fld
ror
and
inc
stc
pminub
cmp
sub
pop
stc
push
call
ror
idiv
add
push
cmp
jl
or
in
aam
jmp
mov
mov
test
popf
sbb
stc
push
call
ds
call
xor
mov
call
out
std
dec
mul
mov
inc
fldenv
push
enter
dec
rol
cdq
setne
mov
cld
out
(bad)
cmp
xor
in
adc
arpl
es
mov
stos
sub
sbb
out
imul
retf
and
sub
push
mov
push
mov
or
inc
loopne
pop
ror
stc
bound
call
jns
std
jl
ins
int
popf
adc
dec
xchg
ins
and
dec
mov
int3
sbb
bswap
(bad)
or
fild
popf
jne
push
push
pop
inc
inc
rep
test
pop
test
dec
shr
pop
dec
stos
inc
shl
aaa
enter
ds
dec
ror
fidiv
loope
shr
retf
hlt
pop
int3
push
movs
js
mov
sub
push
test
movs
pop
pop
mov
mov
add
cli
ds
xchg
push
cwde
inc
ret
jecxz
ret
dec
add
and
int3
jae
daa
sbb
mov
pop
add
lock
outs
sbb
jnp
xor
loop
setge
popf
aaa
out
in
es
xchg
(bad)
xchg
pushf
daa
popf
ins
iret
and
ret
dec
(bad)
cmp
push
xchg
outs
aas
mov
jmp
mov
xor
adc
call
nop
das
xchg
mov
push
std
ins
sti
and
fisttp
cmps
mov
or
dec
ret
jnp
mov
jb
sbb
call
and
pop
sar
leave
stc
cmp
adc
daa
daa
cmps
pop
in
jae
push
mov
test
popa
inc
(bad)
addr16
inc
cli
push
mov
loopne
movs
arpl
clc
mov
lahf
mov
ror
outs
xor
or
or
or
inc
dec
pusha
scas
cld
mov
xchg
retf
add
dec
pop
mov
retf
xchg
aad
(bad)
call
adc
or
mov
mov
fisttp
or
adc
rcl
add
jnp
add
stos
xchg
movs
xchg
enter
mov
popa
adc
mov
call
addr16
mov
mov
ffreep
cmp
sub
or
jmp
scas
cld
scas
cmp
adc
fcomp
and
dec
sub
ficom
mov
in
xchg
or
sub
or
in
fild
jbe
icebp
scas
cmc
cmc
mov
xchg
sbb
jne
or
lods
in
mov
aam
inc
and
(bad)
fistp
mov
dec
dec
cs
mov
mov
mov
repnz
aad
push
fnstcw
xor
retf
sti
(bad)
rcr
mov
(bad)
cmc
iret
xchg
fisubr
dec
ds
or
sub
push
dec
sbb
gs
sti
out
adc
pop
fs
and
fnstcw
xor
sbb
add
ror
hlt
adc
cmp
pop
pop
xor
xlat
fldcw
jo
sub
or
add
add
addr16
dec
and
or
fsubrp
(bad)
and
pop
inc
pop
adc
aas
repz
cmp
xor
jnp
pusha
adc
cld
inc
sbb
xor
push
and
sbb
clc
in
shl
cmp
xor
dec
sbb
or
ds
aaa
sbb
push
push
xor
and
adc
dec
dec
arpl
and
sar
aad
ins
cmp
and
call
je
sub
add
sar
int
xor
add
adc
or
and
adc
or
inc
aas
push
sub
cmp
pop
imul
sbb
sub
inc
pop
add
jne
add
or
xor
and
push
jp
scas
loop
das
mov
or
push
sbb
lods
adc
gs
mov
xor
outs
mov
xor
(bad)
jp
stos
adc
popa
repnz
in
inc
cdq
sub
inc
mov
inc
in
push
lods
jnp
sub
ss
xor
test
scas
jne
sub
jg
push
call
aaa
std
adc
addr16
scas
ja
test
mov
and
int3
dec
arpl
dec
int
lea
push
inc
xchg
cmp
dec
mov
ss
mov
dec
repnz
popa
xchg
imul
ins
in
arpl
sub
imul
push
jmp
in
xor
popa
movs
xor
mov
std
cmp
jo
sub
xchg
lahf
add
outs
std
inc
mul
xchg
inc
push
in
stos
addr16
jmp
cmps
xor
adc
out
mov
mov
cmps
xor
mov
bound
retf
mov
add
sub
lea
push
into
jg
xchg
fdiv
and
into
scas
adc
and
push
shl
push
mov
add
add
pop
and
jo
daa
jge
hlt
(bad)
sahf
jae
sbb
adc
fidiv
pop
jb
lods
test
adc
sub
ror
push
inc
addr16
push
mov
sbb
xchg
pop
or
xchg
jnp
pop
add
push
push
dec
mov
(bad)
mov
ficom
lahf
push
push
adc
test
inc
pop
and
pop
faddp
jp
ret
and
push
frstor
push
adc
call
and
mov
lea
fwait
add
and
les
(bad)
and
pusha
iret
jnp
ss
(bad)
push
adc
xchg
mov
mov
add
or
xchg
xor
add
lods
pop
pop
ret
sbb
xchg
cmp
inc
add
xor
sbb
sbb
fsubr
sbb
push
jg
cmovns
es
rcr
dec
jnp
arpl
dec
push
push
or
adc
jge
add
push
sbb
mov
aas
jns
sub
inc
push
push
and
pop
cs
cmp
daa
sub
gs
das
push
push
dec
adc
loop
and
xor
popa
sub
dec
sbb
ds
outs
outs
xor
inc
imul
sub
cmove
outs
cmp
jne
jne
cmp
adc
das
dec
sub
fidiv
adc
and
pop
xor
cmp
sub
adc
sub
xor
push
cmp
sbb
gs
push
sbb
add
cmp
pop
or
xchg
push
push
dec
pop
jb
jb
dec
or
cmp
adc
sbb
aas
xchg
cwde
jne
add
cmp
push
dec
jle
(bad)
jnp
push
add
cmp
inc
adc
pop
inc
je
sti
outs
sub
popa
sbb
pop
ins
adc
test
add
js
add
outs
nop
fbstp
or
sbb
jl
aas
dec
pop
ins
jle
fnstenv
pop
pop
push
js
bound
pop
pop
aaa
add
lods
mov
scas
fisttp
xchg
xchg
mov
call
mov
push
out
test
scas
mov
nop
xor
mov
cdq
loop
bound
loop
jecxz
mov
stos
mov
mov
mov
xchg
loop
imul
sbb
clc
mov
loopne
pop
adc
lods
mov
mov
mov
lods
lahf
test
xchg
call
mov
mov
shr
(bad)
test
mov
mov
stos
mov
call
shr
xchg
jb
mov
mov
cmp
mov
leave
mov
mov
fcom
call
sbb
mov
sub
sar
mov
aad
adc
rcr
mov
adc
mov
mov
mov
lahf
test
aam
mov
mov
mov
xchg
xchg
xchg
jns
clc
ror
mov
mov
lods
test
xchg
stos
ret
shl
mov
mov
(bad)
adc
inc
test
cmps
cmp
sbb
inc
test
adc
aas
int
sar
pop
fidivr
movs
es
pop
int
cli
adc
dec
mov
push
retf
inc
fistp
xor
icebp
pop
movs
ds
sub
into
ds
pop
call
sub
mov
cmp
push
enter
test
sub
in
pop
enter
out
icebp
inc
fdiv
ret
dec
shl
xor
push
call
pop
ficomp
pop
(bad)
push
rcl
mov
sbb
pop
in
clc
cmp
ds
ss
enter
test
and
ficom
fldenv
fld
in
sbb
adc
fnstenv
repz
into
and
loopne
ret
push
int
int
in
sti
and
cmp
sbb
sbb
inc
repz
xor
add
repz
leave
inc
call
sbb
cmp
iret
inc
mov
mov
push
leave
cmp
push
enter
mov
cmp
out
ret
add
and
in
in
adc
mov
mov
inc
(bad)
or
sub
mov
sub
pop
call
and
sub
xor
add
sub
jo
outs
mov
sub
or
jae
ss
ss
pop
xchg
imul
push
pop
lock
jo
and
outs
out
or
mov
xchg
jno
xor
sbb
adc
adc
jbe
and
jmp
add
sub
or
btc
test
sahf
addr16
imul
sahf
and
and
add
and
push
xchg
xor
add
xor
sub
adc
je
xor
xor
jno
xor
adc
sete
scas
pop
mov
xchg
sbb
loop
stos
sbb
pop
out
jbe
js
aas
jmp
mov
lock
or
ss
test
inc
fcom
sbb
xchg
aad
push
pop
(bad)
mov
out
in
aam
(bad)
call
pusha
out
inc
(bad)
xor
pop
and
lods
(bad)
movs
shl
mov
loopne
cdq
xchg
in
mov
dec
retf
mov
movs
mov
neg
test
arpl
cmps
out
mov
cmp
div
mov
rcr
mov
mov
cwde
retf
mov
test
mov
fnstenv
mov
sahf
xchg
cmovne
(bad)
jae
mov
icebp
mov
cwde
stc
mov
mov
neg
loop
mov
les
lea
in
mov
scas
jmp
xchg
or
fdiv
aas
jne
aad
jb
in
adc
scas
call
mov
xchg
lods
cmps
(bad)
icebp
mov
fnstenv
pop
jne
mov
iret
xchg
mov
mov
into
fwait
mov
arpl
mov
mov
or
xchg
out
jae
mov
mov
pop
shr
test
cmc
dec
and
inc
cmp
adc
cmp
push
lods
mov
fcom
add
sahf
mov
inc
scas
cmp
sub
leave
jmp
jo
ror
inc
call
adc
je
adc
adc
int3
add
mov
jne
retf
retf
sub
sbb
and
mov
inc
ins
ret
and
cmp
cmp
fadd
fwait
mov
fs
pop
adc
sbb
call
mov
mov
sbb
test
dec
not
mov
ins
adc
pop
mov
dec
test
es
ins
pop
dec
sbb
test
inc
ds
into
sbb
xchg
mov
adc
sub
or
cmp
push
add
(bad)
jns
add
aas
pop
dec
iret
mov
aam
inc
push
test
out
adc
data16
sub
cmp
das
add
imul
xor
pop
in
iret
push
pop
(bad)
fidivr
call
rcl
inc
mov
adc
lock
mov
push
fwait
xchg
fimul
xchg
or
outs
xchg
dec
clc
add
add
or
pop
stc
xchg
cmp
pop
sub
sbb
pop
mov
push
leave
add
cmps
shl
cld
xchg
stos
push
jno
xchg
nop
outs
(bad)
cld
xor
cmp
pop
out
xor
pmuludq
sub
ds
xchg
mov
mov
ja
xor
add
xor
les
test
test
ja
mov
sub
lahf
jo
mov
int
iret
push
sub
mov
xor
xchg
push
mov
sti
pop
retf
mov
into
pop
call
xchg
lods
pop
rcl
arpl
xlat
fwait
js
mov
mov
xor
call
inc
call
inc
ret
xchg
and
dec
aad
nop
pop
add
inc
rcl
jg
fist
add
pusha
sti
cmps
out
sub
je
nop
(bad)
jae
les
mov
mov
cwde
movs
dec
sahf
retf
test
pop
in
xchg
mov
arpl
aam
sbb
mov
mov
test
es
aas
mov
mov
call
push
out
fld
xor
adc
fchs
jbe
fwait
adc
out
add
icebp
jnp
shl
jle
and
and
push
or
fdiv
call
pop
ficomp
or
ror
gs
add
movs
cmp
jp
mov
cli
loopne
je
and
into
dec
add
fmul
es
inc
dec
sub
sar
sbb
cmp
push
(bad)
out
push
jns
mov
(bad)
(bad)
sub
imul
aad
ins
popf
pushw
imul
mov
xchg
jge
lods
mov
push
lock
push
rcr
dec
retf
out
add
and
inc
cmp
jb
(bad)
xchg
ja
mov
cmps
clc
xchg
nop
sbb
out
add
mov
in
leave
pop
pop
leave
pop
call
(bad)
mov
movs
fisub
push
mov
push
into
adc
adc
xbegin
add
lahf
xor
mov
xlat
mov
adc
adc
sub
sub
pushf
rcl
push
fsub
aam
fldz
cmps
mov
mov
dec
int3
sub
jae
and
push
mov
inc
mov
xchg
push
stos
adc
dec
mov
mov
jp
pop
into
jg
or
cmps
call
inc
adc
mov
dec
xchg
mov
jo
bound
in
aam
hlt
pop
ror
sub
jb
in
xor
in
mov
and
pop
push
dec
xor
sub
leave
fidivr
push
cmps
cmp
cmp
pop
push
les
pop
jbe
sub
and
push
jp
pop
test
fs
cmp
test
xchg
push
sub
xor
gs
iret
in
cmps
jle
imul
push
push
ror
lock
pop
sub
or
sbb
cmps
cmp
add
xor
test
push
mov
mov
loopne
jne
pop
or
pop
pop
add
mov
and
sub
les
(bad)
call
cli
jo
movs
cmps
jle
sub
mov
adc
jo
sbb
push
cld
fwait
xchg
addr16
mov
add
(bad)
aad
int
sbb
or
jle
dec
sbb
xchg
pushf
fld
pop
jnp
sbb
adc
fcomp
shl
pop
jno
xor
outs
inc
jae
mul
jmp
fs
inc
inc
pop
adc
cmp
jmp
adc
ror
and
ja
adc
push
push
push
stos
fcomi
mov
mov
push
fist
sub
test
pusha
mov
and
sub
mov
fucomp
test
jl
dec
pop
or
pop
sbb
stos
neg
add
push
mov
ficom
aad
inc
lds
dec
jo
retf
int3
lds
(bad)
xchg
lods
fcmovne
in
pop
popa
cmp
pop
hlt
or
mov
ret
sbb
aad
adc
jns
adc
or
lods
mov
mov
(bad)
leave
cmp
test
aad
sar
push
and
ror
std
in
movs
sbb
jl
(bad)
jp
xor
std
jnp
leave
loopne
(bad)
fild
mov
pop
pop
rcl
pop
addr16
stos
ja
cmp
pop
cdq
add
xchg
fwait
test
xor
inc
out
int3
mov
xor
ja
jbe
inc
icebp
in
mov
outs
push
xchg
xor
repz
push
and
hlt
fwait
movs
hlt
mov
aaa
test
and
jmp
xlat
inc
xor
icebp
(bad)
cmp
jg
dec
mov
in
xor
repz
mov
cmp
(bad)
fucom
ins
and
sub
adc
jmp
outs
or
test
pop
inc
mov
aaa
outs
inc
(bad)
(bad)
mov
nop
dec
adc
jbe
les
push
sub
stos
jnp
push
add
aad
inc
inc
pop
jmp
mov
push
ja
cmc
leave
fcom
cld
sub
ss
push
out
test
push
dec
imul
pop
or
movs
ficom
rol
xor
mov
mov
les
sub
xor
mov
movs
scas
aaa
(bad)
jns
push
mov
movs
(bad)
inc
outs
mov
inc
ficom
sbb
movs
pop
inc
js
sbb
and
test
jae
mov
mov
or
movs
ffree
bound
cmp
adc
je
imul
retf
xchg
(bad)
cmps
pop
and
and
sbb
push
inc
stos
and
in
mov
movs
in
mov
pop
clc
inc
and
repnz
xlat
(bad)
or
ret
mov
loop
retf
leave
push
hlt
push
jns
stos
and
popf
cmp
mov
sub
or
(bad)
xor
shl
lock
lea
retf
jp
std
cdq
ds
out
test
inc
add
ins
and
xchg
ds
xchg
xor
mov
fcmovnbe
pop
add
out
outs
mov
std
adc
jmp
jns
pop
xchg
cmp
and
cmovg
xchg
clc
cmp
fistp
stos
xor
(bad)
in
and
fs
or
xchg
xchg
xlat
push
add
stos
cld
fldenv
ins
lea
adc
push
dec
stos
in
jne
add
out
dec
sub
add
sub
movs
outs
cmp
or
call
push
stos
jno
jp
mov
call
imul
jl
test
push
inc
pushf
pop
fs
test
mov
jmp
in
push
shr
stos
cmp
aas
dec
stc
jno
arpl
adc
popf
popa
lds
sbb
stos
push
ffreep
stos
xor
sub
pop
sub
push
mov
or
or
pop
adc
fistp
out
or
scas
cmps
sub
sahf
retf
add
loop
std
data16
fdivp
pop
pushf
les
push
xlat
fldenv
mov
fwait
pop
sahf
pop
pop
es
or
mov
test
aaa
ins
push
test
sbb
mov
mov
cmc
fucompp
cdq
mov
xchg
push
movs
rol
add
push
repnz
xchg
mov
inc
jge
jnp
jmp
mov
cli
mov
push
push
cmps
xchg
ins
xor
push
xchg
mov
repz
aaa
dec
cmp
movs
stos
dec
or
dec
adc
stos
jecxz
jmp
mov
frstpm(287
test
cmps
fld
out
div
mov
jg
or
mov
push
mov
sar
xchg
ins
dec
add
sub
xchg
test
mov
jne
xchg
adc
sbb
test
cmp
xchg
jl
fwait
mov
mov
movs
popa
mov
std
push
mov
mov
cmp
jb
xchg
mov
add
xor
inc
rcl
adc
mov
out
mov
pop
xor
cmp
and
ss
adc
ins
mov
mov
cmp
jecxz
cmp
nop
call
sbb
or
scas
adc
scas
xor
xchg
clc
loope
outs
dec
cld
mul
sbb
mov
sbb
push
dec
(bad)
jmp
cdq
mov
scas
adc
(bad)
shr
xchg
lahf
addr16
stos
lods
js
das
out
sub
add
jo
add
push
fcom
(bad)
xor
adc
and
cmps
sbb
mov
call
jmp
cmp
inc
xchg
or
and
mov
cmp
fwait
cmp
call
popa
adc
adc
mov
imul
push
mov
movs
adc
add
call
sub
mov
cmp
push
sbb
rol
(bad)
outs
ds
out
mov
das
rcr
inc
stos
iret
popa
fnstsw
adc
xor
pop
scas
mov
mov
iret
repz
movs
and
xchg
das
in
pusha
shr
fidivr
jb
fwait
(bad)
mov
inc
sub
and
mov
scas
ret
mov
mov
ret
cs
rol
xchg
push
call
scas
loopne
frstor
mov
pop
scas
xor
add
inc
or
loopne
lea
adc
repz
lock
movs
lahf
jo
ret
nop
sar
jb
sub
movs
sub
mov
scas
rcr
mov
jns
mov
test
push
push
movs
dec
mov
outs
ror
push
inc
mov
loopne
in
add
mov
js
mov
and
das
shl
cmp
cmp
sub
outs
sub
dec
sahf
outs
pop
popf
pop
cmp
and
mov
sub
push
xchg
scas
pop
std
mov
and
sbb
(bad)
xchg
lods
retf
or
das
mov
jns
frstor
mov
in
pop
push
es
lock
add
mov
fld
nop
push
stos
(bad)
es
lods
scas
lea
mov
add
ror
xchg
pop
mov
scas
xchg
inc
hlt
lahf
sbb
into
repnz
outs
int3
cmps
push
out
mov
lods
and
test
icebp
jo
sti
fidiv
pop
ror
(bad)
push
adc
jmp
adc
xchg
push
mov
mov
ins
push
add
stc
call
in
mov
add
ds
sub
sahf
shr
and
inc
retf
adc
mov
aas
mov
inc
neg
cdq
push
inc
xor
jns
mov
in
adc
imul
push
movs
fsub
adc
int
sub
loope
lock
xchg
iret
mov
sbb
pop
lahf
push
inc
out
fwait
iret
(bad)
jno
pop
xor
adc
(bad)
mov
loope
dec
shl
fsubrp
sahf
neg
sbb
sub
shl
clc
xchg
out
jg
xor
fwait
xor
(bad)
adc
adc
into
test
push
mov
adc
fs
lock
sub
push
sti
and
cld
out
push
xchg
and
jno
push
mov
xchg
popa
pop
mov
aas
pushf
fwait
push
lahf
out
pop
pusha
jb
dec
outs
out
repnz
xor
jg
outs
dec
out
pop
cdq
cmps
sbb
pop
(bad)
loopne
mov
sub
scas
cmp
mov
xor
push
rcr
mov
fild
xchg
and
pmulhuw
push
push
daa
jbe
inc
repz
in
nop
ficom
fwait
call
mov
loopne
add
and
clc
js
push
pop
es
add
sub
jecxz
(bad)
std
add
cmc
sub
jb
mov
push
(bad)
loop
cmc
xchg
stos
mov
dec
pop
test
sar
push
inc
mov
push
or
mov
test
inc
dec
ret
ins
pop
or
xchg
xor
les
add
int
ret
in
and
dec
mov
cwde
cmp
es
lods
ja
test
pop
and
repz
in
arpl
std
mov
cmp
cmc
mov
aaa
ins
push
xor
nop
stos
ret
jmp
sub
rol
inc
loopne
pusha
mov
jmp
nop
and
les
nop
retf
ins
mov
rcr
aaa
(bad)
out
ret
push
pop
push
or
arpl
add
jge
add
jecxz
test
popf
mov
cs
sub
loop
and
out
mov
inc
jl
mov
inc
pop
sub
add
or
stc
add
jnp
pop
push
pop
loop
or
jmp
imul
dec
in
imul
add
movs
push
xor
arpl
clc
or
stos
or
mov
inc
dec
add
jge
push
jp
pop
rcl
arpl
push
xlat
adc
dec
out
mov
dec
aad
mov
dec
push
dec
ret
sbb
nop
inc
jne
xchg
mov
inc
sub
sub
add
jbe
xchg
mov
cmp
cmp
jns
enter
push
push
hlt
mov
lods
stos
push
xchg
pop
outs
inc
bound
scas
or
pop
clc
inc
inc
adc
push
lss
lods
mov
daa
shl
sbb
sbb
add
and
mov
add
sub
pop
lock
and
pushf
jb
mov
pop
sbb
ins
mov
inc
sbb
push
add
push
jp
jmp
xor
adc
sub
mov
hlt
adc
sti
inc
call
push
pop
add
add
push
mov
mov
xchg
rcr
fwait
xchg
imul
mov
aam
xor
(bad)
or
xchg
mov
sub
out
int
aam
xchg
xchg
fstp
out
pop
jnp
push
in
ret
mov
ins
cmc
cmp
inc
fild
aad
aam
outs
imul
cmp
lds
sar
pop
jae
xchg
aam
repz
xor
fwait
popf
or
in
mov
sbb
sub
jne
test
sub
in
cwde
mov
arpl
dec
cs
(bad)
pushf
ss
sub
push
mov
sub
inc
loope
mov
into
sbb
mov
cmp
inc
cmc
mov
push
in
shl
cmp
pop
je
push
fistp
cmp
je
sub
xor
and
push
mov
sti
fcomi
cli
cmp
add
mov
sar
add
jo
mov
rcl
bound
lds
sub
aam
push
mov
shr
pop
lock
cmp
ja
cwde
bound
sti
out
cs
sbb
sub
adc
mov
(bad)
nop
test
sub
gs
sti
dec
and
and
xchg
mov
std
xchg
push
cmp
or
daa
fld
push
aaa
mov
loope
jnp
and
aam
adc
ror
cmc
mov
xchg
mov
pop
movs
jecxz
sbb
mov
in
dec
ret
dec
jnp
jnp
inc
(bad)
push
lds
clc
cmp
movs
sub
dec
mov
stos
fistp
and
sub
mov
in
sar
mov
mov
sbb
in
sbb
retf
mov
fsubr
enter
ret
loop
jmp
mov
imul
or
xchg
or
dec
jmp
scas
gs
adc
mov
sub
fisubr
out
in
jno
xor
mov
cwde
push
mov
adc
sbb
data16
push
jmp
in
mov
mov
les
retf
jnp
add
sbb
dec
or
push
cdq
inc
mov
arpl
push
mov
jmp
es
mov
or
retf
and
sub
sub
inc
push
jbe
mov
dec
cwde
xchg
lods
or
lock
sub
mov
mov
cmp
jmp
call
jge
es
dec
and
or
fist
sub
lods
idiv
ja
xor
cmp
push
ja
push
cmp
popf
xchg
adc
ret
push
inc
or
(bad)
int3
mov
fsub
push
outs
sub
and
xsha256
cmps
push
mov
mov
inc
outs
sub
and
addr16
pop
or
das
fldcw
xchg
xchg
or
jae
mov
aam
popf
fstp
dec
mov
jp
or
pop
cmp
aaa
leave
cmp
(bad)
xchg
jbe
jno
jno
cdq
fs
inc
ja
push
push
add
cmp
js
dec
je
retf
pop
aas
jnp
xchg
sbb
call
jae
in
push
push
jb
xchg
or
add
fstp
dec
push
shr
and
push
stc
pop
push
inc
cmp
scas
(bad)
jle
cdq
push
scas
cmps
clc
jmp
dec
and
enter
pop
mov
add
jno
xchg
test
sbb
sub
mov
pop
pop
push
pop
ss
cmps
clc
(bad)
(bad)
ds
mov
into
add
aaa
cli
cmc
and
out
call
fisub
out
leave
xchg
into
jno
add
daa
cs
call
inc
mov
rcr
sub
cwde
(bad)
stos
xor
repnz
loope
sub
cmp
les
or
stc
sbb
call
mov
xor
xchg
sahf
mov
call
sub
scas
jne
mov
lea
ret
fild
and
mov
ret
lea
or
push
xchg
int3
xchg
dec
cmp
clc
xchg
dec
ret
loope
dec
loopne
aam
lods
call
mov
pop
data16
in
cmps
stos
pop
mov
movs
repz
xchg
gs
mov
sar
hlt
sahf
add
push
sub
test
mov
fwait
aad
mov
sub
xchg
xlat
into
lds
cmps
pop
pop
lods
arpl
mov
(bad)
mov
inc
jmp
cmp
fidivr
dec
sahf
sbb
add
xchg
mov
cli
test
(bad)
mov
out
pop
retf
repnz
or
or
mov
pop
nop
lods
fmul
mov
jg
inc
test
les
sbb
lods
(bad)
jg
xor
dec
(bad)
ins
ret
jbe
int
seto
bnd
pop
fimul
sub
jg
sbb
jl
jno
dec
xor
ror
mov
pop
loopne
jecxz
push
or
pop
or
js
cmp
dec
imul
imul
adc
movs
nop
enter
pop
xchg
inc
cs
xor
inc
mov
pop
inc
rol
or
mov
popf
or
sbb
pop
mov
push
scas
(bad)
push
(bad)
call
cwde
dec
es
ss
test
retf
mov
xor
xchg
jo
add
(bad)
mov
jns
adc
jmp
and
mov
sahf
xchg
xor
out
adc
jge
icebp
(bad)
and
mov
nop
gs
cmp
repz
outs
jl
mov
dec
(bad)
(bad)
(bad)
aaa
lea
pop
adc
cmp
js
xchg
dec
addr16
mov
jmp
or
fwait
cmp
xor
sete
xchg
outs
lds
sahf
mov
xchg
push
test
cmp
adc
fisub
mov
push
sbb
cli
mov
xchg
lods
sar
mov
pop
pop
ret
aaa
push
retf
dec
nop
fistp
push
fdivr
stos
cmc
cwde
test
sbb
enter
aas
mov
and
add
inc
xor
jle
mov
outs
hlt
popf
pop
bnd
sub
test
nop
jp
loope
dec
ss
sub
push
pop
cs
ret
xchg
aaa
out
shl
mov
aas
dec
mov
dec
rcr
ret
data16
(bad)
std
fadd
ror
movs
outs
cmc
ins
pusha
fucom
or
test
sub
xchg
rol
jne
xor
push
or
fidivr
mov
ret
mov
add
cmp
pop
ret
js
jp
loope
pop
loop
mov
ins
xchg
mov
dec
xchg
fistp
mov
mov
push
std
imul
sar
retf
das
iret
xchg
loope
pop
inc
and
xlat
xchg
call
es
add
imul
push
leave
add
enter
or
je
and
dec
xor
adc
push
jbe
loop
sub
pop
push
xor
sbb
shl
mov
iret
inc
jg
sbb
(bad)
call
jle
loope
adc
icebp
fstp
out
push
in
movs
mov
lds
xchg
or
mov
aas
movs
mov
or
jo
scas
(bad)
(bad)
xor
imul
push
outs
xor
add
aas
jecxz
daa
mov
inc
into
mov
inc
outs
pop
pop
mov
jns
mov
in
cmp
ds
idiv
push
push
dec
cmp
cmp
ja
retf
out
sbb
jg
mov
xor
jo
scas
and
mov
aaa
call
icebp
iret
adc
mov
cbw
retf
and
addr16
jne
jae
inc
adc
and
and
mov
push
(bad)
mov
pop
arpl
pushf
ja
dec
xchg
cmc
pusha
(bad)
xor
aaa
fld
sub
rcr
fwait
mov
in
loope
sub
mov
aaa
add
rcl
and
xchg
das
push
mov
mov
mov
psrlq
out
rcr
pusha
fisttp
jecxz
aad
mov
cdq
test
test
repz
xchg
cmps
inc
call
rcl
pop
xchg
arpl
xchg
ret
adc
cmp
retf
not
sbb
xor
dec
inc
aam
xchg
sub
fild
mov
mov
adc
stos
cmps
daa
and
scas
or
int
inc
push
push
rol
jp
stos
lods
cmp
outs
dec
xchg
mov
pop
jne
sub
outs
cmp
test
mov
sbb
popa
dec
dec
or
jo
xchg
fs
or
sub
call
cmp
sub
es
daa
pushf
sbb
add
stos
inc
cmp
mov
stos
loop
push
in
or
(bad)
pusha
xor
rcl
mov
xchg
ins
imul
jg
fist
fist
jne
(bad)
adc
je
mov
mov
xchg
add
sub
dec
xor
mov
js
pop
repnz
sbb
fcomp
mov
cld
fwait
loop
jns
pcmpgtd
sbb
push
cmp
mov
inc
adc
pop
jp
icebp
int3
stos
ret
pop
out
or
rol
cmp
sbb
sbb
and
nop
fwait
sbb
cdq
push
mov
imul
mov
mov
pop
es
jb
ja
loopne
mov
call
xor
mov
add
in
jmp
in
and
mov
retf
or
and
lods
rcr
jnp
sbb
pop
push
jb
std
adc
sub
aad
shl
pop
stos
jo
imul
mov
push
mov
ret
call
cwde
lods
push
xchg
mov
inc
(bad)
dec
bound
int
aas
sar
stos
les
popf
lods
jmp
das
retf
jle
je
retf
out
(bad)
sbb
jb
add
mov
test
lock
sahf
push
push
(bad)
push
mov
rcr
mov
dec
cld
stc
mov
clc
and
push
idiv
jae
and
pushf
cmp
xor
clc
jae
xchg
outs
sub
mov
sbb
daa
fcomp
sub
sub
inc
adc
xor
pop
mov
mov
dec
adc
xor
cmp
or
add
mov
ret
cmp
(bad)
adc
nop
sar
mov
push
pusha
jno
push
adc
dec
pop
sbb
stc
int3
sub
and
sar
sub
stos
inc
(bad)
out
lods
cwde
jmp
pop
punpcklwd
imul
xchg
jp
ins
js
xchg
sub
aaa
hlt
arpl
retf
sbb
leave
jo
test
ret
sub
fsub
pop
or
cmp
imul
xor
add
daa
daa
loop
ror
lods
adc
(bad)
adc
push
jns
fst
sub
mov
xlat
stos
push
mov
adc
adc
push
outs
jb
cmp
jno
jp
faddp
cs
ins
pop
rol
inc
aad
pop
cmp
dec
jecxz
test
call
jmp
sub
mov
fidiv
cmp
in
pop
fcomip
mov
cmc
xchg
aaa
jbe
xchg
fadd
dec
add
fcomp
pop
cs
xor
sub
fdiv
lods
aaa
dec
test
idiv
cmp
xchg
inc
or
add
test
cmp
dec
cmp
popf
loopne
(bad)
mov
loope
mov
pop
bound
es
inc
ret
inc
test
loopne
popa
sub
dec
mov
mov
push
sub
cmp
pop
enter
mov
div
test
jge
cmps
mov
jecxz
xor
es
cmp
pushf
inc
inc
cmps
sub
push
push
mov
mov
cmp
jne
mov
mov
push
push
call
mov
add
cmp
jne
mov
test
je
test
jne
mov
mov
push
push
push
call
mov
add
test
jne
mov
mov
mov
mov
pop
pop
mov
mov
pop
mov
pop
pop
ret
push
push
push
call
mov
add
cmp
jne
push
push
push
call
add
cmp
je
mov
add
cmp
mov
mov
jl
push
push
call
add
pop
pop
pop
pop
pop
ret
mov
mov
push
push
mov
call
add
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
push
mov
jmp
lea
cmp
jne
mov
mov
push
push
push
call
mov
add
cmp
mov
jne
mov
test
je
test
jne
mov
mov
push
push
push
call
mov
add
test
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jl
mov
test
je
test
je
push
push
call
add
pop
pop
pop
pop
add
ret
push
push
push
call
mov
add
cmp
jne
push
push
push
call
add
cmp
je
mov
add
cmp
mov
mov
jl
push
push
call
add
pop
pop
pop
pop
add
ret
mov
mov
push
mov
call
add
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
test
push
je
mov
mov
shl
test
mov
jne
mov
mov
mov
push
push
push
call
mov
add
test
jne
xor
pop
pop
ret
cmp
je
test
je
mov
test
jne
mov
mov
mov
push
push
push
call
add
test
je
push
push
call
add
neg
sbb
and
pop
pop
ret
int3
int3
int3
push
mov
push
push
mov
mov
push
push
push
call
mov
add
cmp
jne
pop
pop
or
pop
ret
push
push
push
call
push
push
call
add
test
je
mov
mov
push
push
mov
call
mov
mov
add
test
je
cmp
jne
cmp
je
pop
pop
mov
pop
ret
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
push
lea
lea
push
push
call
add
test
jne
mov
mov
lea
mov
add
test
jne
sub
cmp
je
cmp
je
add
add
add
push
push
sub
sub
call
add
test
je
pop
pop
pop
pop
ret
xor
cmp
setne
pop
pop
pop
pop
mov
ret
or
pop
pop
pop
pop
ret
int3
int3
int3
int3
push
mov
push
mov
mov
cmp
je
mov
push
push
push
call
add
pop
pop
ret
cmp
jne
fld
fcomp
fnstsw
test
jne
pop
mov
pop
ret
pop
xor
pop
ret
cmp
jne
mov
mov
call
xor
test
setl
pop
pop
mov
ret
push
mov
push
push
mov
call
add
cmp
jne
push
push
push
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
push
mov
je
push
push
push
call
add
pop
ret
cmp
jne
fld
fcomp
fnstsw
test
jne
mov
pop
ret
xor
pop
ret
cmp
jne
mov
mov
call
xor
test
setle
pop
mov
ret
push
push
push
mov
mov
call
add
cmp
jne
push
push
mov
mov
call
add
cmp
je
xor
test
sete
pop
pop
mov
ret
push
push
push
call
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
push
push
push
ja
jmp
pop
pop
pop
mov
pop
ret
mov
fld
fcomp
fnstsw
test
jp
pop
pop
pop
mov
pop
ret
mov
mov
jmp
mov
mov
mov
cmp
je
mov
mov
mov
push
mov
call
add
test
jne
pop
pop
pop
xor
pop
ret
mov
mov
push
mov
push
call
mov
mov
add
test
je
cmp
jne
cmp
je
pop
pop
pop
pop
ret
mov
mov
pop
xor
cmp
pop
pop
sete
pop
ret
mov
mov
inc
add
inc
add
inc
add
cmp
mov
inc
add
inc
add
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
jmp
lea
mov
mov
add
shl
add
mov
mov
cmp
mov
je
cmp
jne
cmp
je
lea
push
push
call
add
test
jne
lea
push
add
push
push
call
add
cmp
jne
push
push
push
call
add
cmp
je
push
push
mov
mov
mov
call
add
jmp
push
push
push
call
jmp
mov
mov
test
jne
cmp
je
add
push
push
call
add
jmp
mov
cmp
mov
mov
jle
lea
cmp
je
push
push
call
add
test
je
mov
mov
mov
sub
mov
cmp
jb
push
push
call
mov
add
add
add
sub
cmp
jl
mov
mov
mov
push
add
push
push
call
add
xor
test
mov
mov
jle
shl
mov
sub
mov
mov
mov
mov
push
add
push
add
push
call
mov
sub
add
add
add
test
mov
jg
mov
mov
mov
push
push
shl
push
sub
call
mov
mov
mov
add
mov
mov
sub
mov
sub
add
add
cmp
mov
jg
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
lea
push
add
push
call
add
test
je
fld
lea
(bad)
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
jmp
jmp
push
mov
push
or
mov
test
je
or
jmp
test
je
push
call
push
mov
call
push
call
add
test
jge
or
jmp
mov
test
je
push
call
and
pop
mov
and
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
test
je
movzx
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
push
call
cmp
jne
call
push
call
push
call
pop
pop
ret
cmp
jne
call
push
call
pop
push
call
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
push
call
pop
ret
push
push
push
push
mov
cmp
jae
mov
mov
sar
and
lea
shl
mov
test
je
push
call
cmp
pop
je
cmp
je
cmp
jne
push
call
push
mov
call
pop
cmp
pop
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
mov
pop
and
test
je
push
call
pop
jmp
xor
jmp
and
mov
or
pop
pop
pop
pop
ret
push
mov
mov
test
je
test
je
push
call
and
xor
pop
mov
mov
mov
pop
ret
push
mov
test
jne
push
call
pop
pop
ret
push
call
test
pop
je
or
pop
ret
test
je
push
call
neg
pop
pop
sbb
ret
xor
pop
ret
push
push
mov
xor
push
mov
mov
and
cmp
jne
test
je
mov
mov
sub
test
jle
push
push
push
call
add
cmp
jne
mov
test
je
and
mov
jmp
or
or
mov
and
mov
pop
mov
pop
pop
ret
push
call
pop
ret
push
push
push
xor
xor
xor
cmp
jle
mov
mov
test
je
mov
test
je
cmp
jne
push
call
cmp
pop
je
inc
jmp
cmp
jne
test
je
push
call
cmp
pop
jne
or
inc
cmp
jl
cmp
mov
je
mov
pop
pop
pop
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
push
pop
cmp
jne
push
call
push
call
cmp
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
push
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
push
call
test
pop
je
mov
test
je
cmp
jne
and
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
and
add
dec
jne
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
pop
pop
jmp
and
push
call
pop
mov
mov
or
jmp
push
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmp
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzx
push
call
test
pop
je
inc
jmp
cmp
jne
inc
jmp
cmp
jbe
inc
cmp
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmp
je
push
call
cmp
pop
mov
jne
push
call
pop
push
push
call
pop
add
pop
add
cmp
jne
pop
push
call
pop
mov
mov
pop
pop
mov
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
and
mov
push
mov
mov
mov
test
je
mov
add
mov
cmp
jne
mov
inc
cmp
je
test
je
movzx
test
je
inc
test
je
mov
mov
inc
inc
inc
test
je
mov
mov
inc
jmp
inc
test
je
and
inc
cmp
jne
inc
jmp
inc
test
je
mov
mov
inc
mov
inc
movzx
test
je
inc
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
and
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
cmp
je
test
je
mov
add
mov
mov
inc
mov
xor
cmp
jne
inc
inc
jmp
cmp
jne
test
jne
xor
cmp
je
cmp
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
mov
inc
inc
dec
jne
mov
test
je
cmp
jne
cmp
je
cmp
je
cmp
je
test
je
movzx
test
je
mov
inc
inc
inc
mov
mov
inc
jmp
movzx
test
je
inc
inc
inc
inc
jmp
test
je
and
inc
inc
jmp
test
je
and
mov
pop
pop
pop
inc
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
mov
jmp
call
mov
cmp
je
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
mov
lea
cmp
jae
and
or
mov
mov
add
add
jmp
lea
push
call
cmp
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
add
mov
lea
cmp
jae
and
or
mov
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmp
lea
jne
test
mov
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
or
jmp
cmp
jne
or
jmp
or
inc
cmp
jl
push
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
push
call
xor
ret
push
pop
ret
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmp
jne
push
mov
call
call
jmp
pop
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
test
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmp
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmp
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmp
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
push
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
push
call
pop
push
push
push
call
push
call
pop
leave
ret
push
push
push
call
test
mov
jne
ret
and
and
push
mov
mov
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmp
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmp
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
dec
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
and
mov
mov
dec
mov
mov
cmp
jne
and
mov
cmp
jne
push
push
push
call
mov
push
push
push
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
dec
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
or
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmp
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmp
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmp
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
and
lea
or
mov
jne
mov
inc
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
dec
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
dec
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmp
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmp
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmp
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
and
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
push
push
push
call
cmp
je
add
mov
mov
mov
push
push
lea
push
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
push
push
push
call
xor
jmp
or
mov
mov
inc
mov
or
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
or
or
lea
mov
mov
lea
mov
mov
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
and
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
mov
xor
mov
mov
cmp
je
add
inc
cmp
jl
cmp
jb
cmp
ja
mov
ret
mov
mov
ret
cmp
jb
cmp
mov
jbe
mov
ret
mov
push
cmp
push
jae
mov
mov
sar
and
lea
shl
mov
add
test
je
cmp
je
cmp
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
or
xor
jmp
and
mov
or
pop
pop
ret
mov
cmp
jae
mov
and
sar
mov
test
lea
je
mov
ret
and
mov
or
ret
mov
cmp
jae
mov
mov
sar
and
mov
test
je
push
call
pop
push
call
test
jne
call
jmp
xor
test
je
mov
mov
or
ret
push
mov
sub
mov
push
cmp
push
push
jae
mov
mov
sar
and
lea
shl
mov
mov
test
je
xor
cmp
mov
mov
jne
xor
jmp
test
je
push
push
push
call
add
mov
add
test
je
mov
cmp
mov
mov
jbe
lea
mov
sub
cmp
jae
mov
inc
mov
cmp
jne
inc
mov
inc
mov
inc
mov
lea
sub
cmp
jl
mov
lea
sub
lea
push
push
lea
push
push
mov
push
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
xor
mov
cmp
jne
cmp
je
push
pop
cmp
jne
mov
mov
jmp
call
mov
jmp
lea
push
push
push
push
push
call
test
je
mov
mov
mov
jmp
call
mov
jmp
push
call
pop
jmp
mov
test
je
mov
cmp
je
mov
mov
jmp
sub
jmp
and
mov
or
pop
pop
pop
leave
ret
mov
push
push
test
pop
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
mov
test
pop
jne
push
push
mov
call
pop
mov
test
pop
jne
push
call
pop
xor
mov
mov
mov
add
add
cmp
jl
xor
mov
mov
mov
sar
and
mov
mov
cmp
je
test
jne
or
add
inc
cmp
jl
pop
ret
call
cmp
je
jmp
ret
push
push
push
call
add
ret
movzx
mov
test
jne
cmp
je
movzx
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
push
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmp
mov
rep
stos
mov
jbe
cmp
je
lea
mov
test
je
movzx
movzx
cmp
ja
or
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmp
mov
je
mov
test
je
movzx
movzx
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmp
jne
inc
add
cmp
jb
mov
mov
push
mov
call
lea
mov
movs
movs
pop
mov
movs
jmp
inc
inc
cmp
jne
push
pop
or
inc
cmp
jb
push
call
pop
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
and
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
push
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
mov
test
je
push
push
lea
movzx
movzx
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
push
push
push
lea
push
push
push
call
push
lea
push
push
push
lea
push
push
push
push
call
push
lea
push
push
push
lea
push
push
push
push
call
add
xor
lea
mov
test
je
or
mov
mov
jmp
test
je
or
mov
jmp
and
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
or
mov
add
mov
jmp
cmp
jb
cmp
ja
or
mov
sub
jmp
and
inc
cmp
jb
pop
leave
ret
cmp
jne
push
call
pop
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
push
push
call
pop
pop
ret
cmp
ja
push
call
test
pop
jne
cmp
je
push
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
dec
add
ret
dec
add
les
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
jg
dec
add
add
add
add
add
add
add
dec
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cwde
les
mov
les
rol
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cmp
dec
add
dec
add
inc
add
ror
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
aam
dec
add
lds
in
dec
add
lds
hlt
lds
cld
lds
add
dec
add
(bad)
dec
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
xor
dec
add
(bad)
dec
add
dec
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
push
push
push
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
jo
dec
add
dec
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
aas
leave
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
enter
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
leave
dec
add
dec
add
add
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
clc
leave
dec
add
retf
inc
retf
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xchg
retf
pushf
retf
movs
retf
lods
retf
mov
dec
add
dec
add
retf
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
lock
clc
retf
or
dec
add
dec
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
push
cmp
push
push
jae
mov
mov
sar
and
lea
shl
mov
test
je
push
call
cmp
pop
jne
mov
jmp
push
push
push
push
call
mov
cmp
jne
call
jmp
xor
test
je
push
call
pop
jmp
mov
and
lea
mov
jmp
and
mov
or
pop
pop
pop
ret
push
push
mov
push
imul
cmp
mov
ja
test
jne
push
pop
add
and
xor
cmp
ja
cmp
ja
push
call
mov
pop
test
jne
push
push
push
call
mov
test
jne
cmp
je
push
call
test
pop
je
jmp
push
push
push
call
add
mov
pop
pop
pop
ret
xor
jmp
push
push
push
xor
pop
cmp
jle
mov
mov
test
je
test
je
push
call
cmp
pop
je
inc
cmp
jl
mov
push
call
mov
pop
and
inc
cmp
jl
mov
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
mov
cmp
jle
push
push
call
pop
pop
mov
mov
cmp
jne
push
push
push
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
neg
sbb
and
inc
push
push
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
or
jmp
push
pop
ret
mov
xor
mov
or
mov
cmp
je
push
push
push
push
push
push
call
test
je
push
push
push
push
push
push
call
mov
mov
cmp
je
test
je
cmp
je
cmp
jg
push
push
push
push
push
push
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
lea
add
and
call
mov
mov
mov
or
jmp
push
pop
ret
mov
xor
xor
or
mov
cmp
je
push
push
push
push
push
push
call
test
je
cmp
push
push
jne
push
push
jmp
push
push
push
push
push
push
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmp
je
inc
mov
dec
test
jne
cmp
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
push
push
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
neg
sbb
and
inc
push
push
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
or
cmp
je
push
push
push
push
push
push
call
cmp
je
push
push
push
push
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
push
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
jmp
