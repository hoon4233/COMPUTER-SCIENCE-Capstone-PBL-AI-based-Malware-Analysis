push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
sbb
add
add
shl
and
cs
adc
add
test
mov
pop
mov
push
jecxz
leave
or
sbb
addr16
call
add
add
mov
cli
adc
test
add
add
jmp
and
add
scas
in
test
add
or
popf
add
test
sbb
add
inc
pop
jl
add
(bad)
and
adc
arpl
mov
and
add
std
dec
inc
je
xor
addr16
setge
add
jmp
mov
sub
xor
inc
mov
ficomp
inc
add
jmp
mov
mov
mov
je
jmp
mov
sub
mov
and
or
sbb
xor
add
or
xor
imul
add
jbe
inc
mov
add
sub
mov
and
adc
leave
jmp
(bad)
stos
imul
mov
and
(bad)
jb
addr16
scas
jecxz
leave
or
aaa
pop
mov
mov
scas
push
cli
cmp
dec
adc
add
and
add
add
mov
fldcw
sub
add
inc
add
jecxz
inc
pop
mov
push
pushf
push
rol
sbb
sbb
adc
arpl
and
std
addr16
dec
adc
lock
add
leave
add
add
add
pusha
cmp
push
mov
dec
(bad)
add
xor
add
pop
jbe
or
clc
or
(bad)
push
jbe
add
test
add
daa
repnz
and
push
add
add
popf
pop
sahf
and
add
leave
repz
scas
adc
pop
adc
adc
arpl
pop
std
sub
mov
and
in
inc
mov
add
push
add
xchg
xchg
test
push
ficomp
pop
out
jge
les
dec
jg
jmp
xlat
jns
pushf
add
cmp
mov
cmp
add
add
and
add
add
cld
push
inc
sbb
push
add
std
add
test
add
pop
loop
inc
cmps
inc
xchg
adc
inc
fild
pop
mov
cmp
xchg
jge
mov
(bad)
pusha
je
jmp
mov
mov
xor
fisubr
mov
rsm
retf
adc
add
test
pop
add
rcr
sti
scas
adc
test
enter
sbb
add
add
sub
call
add
jmp
mov
sub
mov
test
popf
xchg
repz
leave
add
and
add
add
push
mov
sub
fadd
add
mov
test
add
add
mov
push
cmps
mov
add
aaa
xchg
add
add
pusha
push
rol
push
xor
and
je
adc
add
sub
addr16
add
sub
mov
call
push
add
mov
add
jno
jg
movs
inc
and
in
dec
ja
add
jmp
xchg
test
xor
leave
sub
mov
and
inc
xchg
mov
cmps
add
add
test
add
fisubr
je
inc
adc
test
leave
add
xor
mov
mov
ss
and
inc
arpl
cmp
mov
daa
test
mov
add
add
cld
stos
imul
call
add
out
push
cmp
add
cmp
xlat
and
movs
ret
fnstenv
and
leave
fiadd
sar
and
cs
adc
mov
call
push
xchg
inc
mov
scas
add
and
cmovne
test
sbb
leave
aaa
mov
cs
jmp
hlt
int3
call
add
fld
xchg
addr16
jmp
leave
add
bound
add
add
and
add
xor
pop
and
add
or
or
mov
inc
sub
addr16
sbb
scas
jecxz
push
push
dec
ror
add
cmp
sbb
jg
mov
dec
add
daa
addr16
mov
or
sahf
fcmove
mov
rcl
test
jp
out
les
adc
pop
inc
arpl
sbb
add
push
popf
add
xchg
or
mov
add
icebp
or
add
adc
mov
mov
sub
jecxz
add
and
add
add
pop
mov
cwde
pop
jne
mov
jmp
mov
push
mov
add
xchg
inc
movs
sub
add
adc
call
cmp
sahf
and
add
add
dec
cli
clc
add
add
inc
(bad)
jmp
(bad)
xchg
xor
xchg
test
mov
and
add
mov
inc
inc
cli
or
jo
add
mov
and
dec
adc
jmp
push
add
mov
cmp
add
or
and
cli
(bad)
call
push
push
and
sub
jmp
call
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xlat
inc
or
dec
aaa
les
mov
mov
mov
mov
add
test
(bad)
jae
mov
and
add
stc
aas
rol
imul
mov
dec
mov
out
add
(bad)
xor
add
mov
add
retf
enter
jge
test
inc
add
fcom
cmp
add
mov
leave
jno
mov
mov
(bad)
mov
add
jmp
push
mov
ins
retf
jle
bound
add
jg
dec
add
add
rol
mov
add
lods
mov
and
add
add
push
mov
add
jmp
mov
sub
mov
bswap
bound
and
and
add
sub
push
sub
add
add
(bad)
ins
add
aaa
adc
mov
add
test
mov
add
pusha
and
lods
mov
fs
add
add
and
add
inc
fld
outs
cmp
add
add
and
aas
add
add
add
mov
and
add
adc
mov
mov
add
jnp
imul
dec
(bad)
enter
add
aas
jg
jmp
mov
and
add
adc
outs
imul
xor
mov
add
jmp
lds
ins
push
ss
mov
and
jg
jmp
mov
and
inc
mov
jge
mov
inc
(bad)
and
mov
pop
push
add
mov
sub
mov
lds
or
add
add
and
add
add
leave
sti
xor
mov
add
add
xor
add
add
mov
(bad)
clc
add
mov
add
mov
int
add
dec
ins
cli
sbb
ror
pushf
add
pop
inc
add
jp
mov
add
sbb
mov
add
jmp
mov
mov
pop
ins
cwde
inc
and
sub
and
add
add
aad
scas
jecxz
arpl
sbb
jmp
jmp
mov
mov
dec
add
mov
jp
push
add
mov
jnp
inc
add
add
es
(bad)
sbb
test
xor
add
pop
add
mov
int
add
dec
ins
pop
iret
std
in
mov
push
rdpmc
imul
add
mov
and
add
add
(bad)
jae
mov
xor
verw
mov
aas
add
mov
call
dec
mov
and
add
scas
push
dec
add
mov
inc
sub
aas
add
add
add
retf
test
add
mov
sub
(bad)
add
mov
push
push
sub
mov
aaa
add
mov
cmp
test
inc
add
inc
mov
xor
sub
mov
pshufw
add
inc
add
add
mov
adc
cmp
xchg
xor
lods
dec
add
mov
cmp
lock
push
add
jg
xor
test
push
inc
add
test
xor
bswap
jae
inc
mov
mov
movs
push
dec
ins
dec
js
and
mov
aaa
jmp
jb
xchg
mov
inc
pop
sub
les
out
mov
add
lods
cmp
add
xchg
mov
inc
mov
mov
add
pop
add
aas
mov
sub
add
or
pop
inc
icebp
(bad)
and
jecxz
aaa
aam
pop
push
push
mov
xor
mov
jmp
add
retf
cmp
sub
ret
adc
test
mov
and
add
dec
sbb
(bad)
and
inc
sub
inc
test
mov
add
add
cmp
lds
mov
(bad)
aam
inc
loop
aaa
adc
mov
add
mov
mov
rcl
aad
add
sbb
lock
mov
mov
scas
add
and
aaa
add
add
out
xor
add
mov
sub
and
cmp
psubq
mov
mov
dec
xor
in
cmp
mov
add
add
retf
mov
mov
add
xor
scas
sub
mov
icebp
mov
inc
mov
sub
adc
lods
mov
leave
(bad)
mov
add
add
ret
aas
icebp
fld
aaa
add
fcom
les
mov
mov
mov
cmp
mov
ror
add
loope
icebp
fstp
mov
cli
add
stc
jmp
push
push
ss
rol
test
aas
add
pop
add
jmp
add
adc
daa
add
add
and
mov
(bad)
jmp
mov
enter
add
add
push
add
ja
mov
jmp
mov
loope
in
icebp
fld
and
dec
aaa
stc
and
pop
xchg
pop
(bad)
mov
sub
clc
les
add
push
add
(bad)
and
mov
add
add
cmc
mov
and
sub
mov
jo
xchg
add
sbb
add
mov
mov
mov
rol
(bad)
gs
pop
mov
stc
mov
out
add
dec
cs
outs
add
adc
add
and
add
es
inc
add
add
test
icebp
fld
or
aaa
add
jb
and
add
inc
mov
sub
cmps
mov
adc
enter
test
add
add
test
outs
scas
jecxz
mov
ja
shl
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
adc
test
add
jge
cwde
jp
add
aam
add
pop
lods
jl
add
bound
test
mov
and
aaa
add
inc
test
adc
aam
test
add
add
or
add
add
mov
add
or
enter
test
sub
add
cmp
adc
and
add
cmps
arpl
adc
iret
adc
add
push
inc
cmps
xchg
cmp
jp
adc
inc
and
add
add
into
bound
jae
dec
mov
add
add
mov
ud0
xchg
and
arpl
add
mov
paddb
add
add
dec
add
add
cmps
xchg
test
pushf
aad
fwait
prefetch
bound
jmp
mov
and
aaa
add
xchg
stos
inc
mov
mov
js
test
pcmpeqd
add
sbb
jnp
adc
inc
push
and
add
add
bound
cmp
or
add
add
fistp
test
(bad)
(bad)
test
out
pop
jb
ss
mov
inc
add
out
lods
fimul
stc
add
into
add
jnp
test
lods
aad
add
jns
test
jg
mov
mov
sub
mov
cmova
add
mov
mov
adc
mov
adc
mov
aaa
jmp
sub
je
test
mov
pop
adc
ror
stos
dec
inc
pushf
cmp
jae
les
out
add
add
add
mov
je
jmp
and
pop
in
mov
sub
add
call
add
add
add
xchg
jmp
add
add
mov
je
jmp
mov
xchg
stos
inc
nop
cli
outs
lods
and
add
test
(bad)
and
add
xchg
adc
aam
mov
and
and
add
mov
std
test
daa
sub
add
test
sub
inc
push
and
add
add
add
mov
test
add
add
xchg
jb
test
add
test
(bad)
(bad)
sbb
jnp
add
enter
and
add
add
inc
test
add
test
mov
add
jae
dec
add
add
add
sub
mov
test
add
add
add
add
mov
xor
dec
ss
mov
sub
add
add
sub
mov
jg
jmp
clc
test
dec
add
xchg
inc
jge
dec
mov
je
retf
(bad)
add
add
jmp
dec
add
mov
xstore-rng
cmps
inc
clc
sbb
enter
adc
add
mov
ud1
repz
jmp
mov
in
ins
mov
test
add
add
cmp
jae
dec
xor
add
add
mov
pmuludq
add
aam
add
add
arpl
sub
cmp
add
(bad)
push
stc
sbb
adc
enter
and
call
and
mov
dec
jg
push
add
add
mov
add
loope
les
mov
jg
jb
add
add
cmp
pop
lods
inc
sub
mov
call
add
sbb
adc
test
popa
add
jge
and
pcmpeqd
add
sbb
lock
in
fs
add
jne
test
add
into
(bad)
mov
hlt
add
add
test
out
sub
mov
je
jb
add
add
cmp
out
sub
mov
adc
mov
mov
sub
mov
and
ss
add
add
add
adc
sub
mov
cmovp
dec
arpl
pop
jb
add
stc
imul
test
cs
jmp
mov
xor
add
mov
xchg
or
mov
test
add
add
mov
and
add
add
arpl
lock
add
test
adc
(bad)
ss
mov
and
and
add
sub
add
shl
jbe
fs
sub
mov
and
sbb
sbb
fwait
mov
xchg
into
add
jmp
cmp
pop
hlt
jbe
pop
mov
call
add
outs
add
add
add
sub
adc
test
test
jae
jmp
mov
sub
mov
fnsave
or
add
jmp
mov
sub
push
data16
cmps
mov
fistp
add
out
add
mov
(bad)
push
sbb
add
mov
repnz
add
mov
test
jge
add
add
enter
add
and
shl
mov
dec
mov
sub
test
add
jmp
ret
mov
fwait
mov
(bad)
fnsave
mov
jmp
repz
ss
push
add
cmp
sbb
and
seto
add
test
push
add
add
adc
cmp
jae
sub
push
add
shl
outs
cmp
or
and
fild
add
adc
pop
and
fwait
mov
retf
add
mov
mov
ret
fcomp
push
add
lods
push
retf
aaa
mov
mov
out
rcr
add
add
repnz
add
add
inc
or
jno
aam
add
mov
adc
add
sub
cli
inc
and
icebp
std
(bad)
out
add
add
mov
sbb
call
ret
add
ja
push
push
add
mov
mov
mov
inc
dec
ss
movs
test
add
loopne
add
mov
mov
mov
sbb
mov
mov
adc
(bad)
jmp
add
add
or
dec
out
add
mov
push
add
sbb
mov
sti
adc
and
inc
mov
or
add
add
add
call
fld
push
push
push
add
mov
adc
repz
mov
or
cmp
mov
aam
add
add
and
dec
or
fld
push
push
push
add
lock
mov
mov
jo
pop
add
inc
and
add
add
and
popa
pop
or
fwait
add
bound
mov
or
sbb
mov
mov
xor
and
add
test
mov
xchg
icebp
or
lods
add
add
ja
push
push
add
xchg
mov
mov
and
(bad)
(bad)
or
add
xor
or
cmp
add
add
mov
lock
aam
mov
outs
inc
sbb
add
dec
mov
push
xchg
or
mov
mov
and
sbb
add
and
add
mov
mov
pop
inc
and
mov
add
stos
and
or
add
cmp
add
xchg
add
push
add
xchg
(bad)
and
add
jg
inc
in
or
aam
fwait
mov
push
cmps
mov
or
adc
add
xchg
adc
push
add
xor
mov
mov
inc
mov
jnp
inc
cwde
and
jae
or
xor
add
add
or
push
add
or
push
add
add
mov
popf
mov
mov
add
fisttp
add
imul
push
add
sbb
add
jbe
sub
ja
and
push
mov
cmp
out
mov
test
add
add
aas
retf
and
add
and
(bad)
dec
and
add
(bad)
mov
out
add
jo
jnp
jo
aam
fwait
add
test
add
mov
cli
dec
outs
add
inc
and
add
fst
push
or
mov
ja
push
push
add
xchg
and
mov
add
and
outs
jl
inc
ss
mov
add
mov
fadd
push
push
add
lahf
xchg
in
test
add
data16
mov
mov
outs
push
call
pop
add
mov
add
jns
and
out
sub
and
inc
fld
pop
and
jnp
adc
inc
dec
lock
call
and
clc
sbb
sbb
add
add
cli
pop
and
jb
add
inc
popf
cli
add
sub
or
fst
pop
add
ret
add
mov
sbb
sbb
add
and
call
inc
and
inc
add
add
jo
add
inc
lock
ds
sbb
add
test
and
mov
loope
dec
or
add
repnz
add
out
test
mov
push
sbb
and
add
add
imul
mov
inc
xchg
sub
inc
fwait
cli
xchg
test
adc
rol
and
mov
sbb
add
xchg
sbb
jb
add
ret
add
inc
and
test
stc
sbb
inc
and
call
mov
sbb
adc
mov
rol
popa
dec
out
and
mov
popf
jbe
add
test
sbb
pxor
xchg
sub
mov
or
jmp
add
add
retf
daa
ins
mov
test
cmovne
mov
icebp
pop
jg
adc
test
aad
add
(bad)
jmp
and
and
bound
inc
movsx
xor
add
mov
mov
mov
jo
and
mov
popf
inc
and
call
lea
sub
push
add
adc
daa
(bad)
dec
mov
mov
mov
and
add
add
inc
retf
and
add
test
ret
enter
(bad)
dec
and
dec
std
jecxz
mov
jae
dec
add
inc
ror
test
mov
sbb
xor
xrelease
add
movs
popa
test
cli
loopne
ss
push
add
or
jno
sub
lods
dec
mov
mov
mov
jmp
(bad)
dec
and
test
pop
add
mov
mov
add
jmp
ins
nop
inc
lahf
in
scas
and
arpl
pop
dec
ss
add
add
cmp
test
test
add
adc
mov
mov
call
and
add
add
imul
add
out
or
mov
and
sbb
popf
adc
pop
dec
mov
or
inc
and
call
pop
mov
push
push
add
sbb
add
stc
sbb
and
mov
into
jmp
sbb
fwait
rol
add
mov
mov
jns
or
add
add
pop
adc
nop
and
add
add
adc
call
xor
and
into
mov
mov
jmp
cmp
mov
mov
and
mov
jnp
and
ins
jbe
add
inc
add
add
mov
mov
mov
xor
lods
mov
retf
and
jae
add
cmc
(bad)
retf
ror
add
sbb
mov
mov
sbb
mov
mov
retf
inc
or
add
add
sbb
add
xchg
cmp
push
add
test
add
mov
outs
movs
and
add
add
adc
pop
retf
daa
mov
test
push
hlt
out
test
sbb
add
sbb
push
add
and
mov
add
sbb
mov
outs
ds
inc
and
call
mov
jo
mov
add
call
dec
cmp
adc
mov
(bad)
add
out
loopne
stc
jp
push
add
call
sub
mov
je
fwait
and
mov
test
mov
cli
iret
adc
add
test
repz
ins
or
dec
jmp
mov
mov
adc
add
and
mov
add
and
or
add
test
mov
call
mov
xchg
cmp
push
add
xor
pop
add
mov
add
inc
lock
stos
and
jecxz
add
mov
mov
mov
mov
mov
popf
jnp
or
mov
jo
and
call
mov
mov
mov
mov
and
and
bound
push
dec
icebp
inc
popf
or
repnz
mov
fst
xchg
add
mov
mov
mov
lahf
xchg
in
je
add
mov
mov
jmp
je
arpl
(bad)
mov
inc
push
push
add
mov
xchg
outs
and
push
in
add
nop
and
add
add
or
sub
add
cmp
jmp
test
mov
adc
add
ins
aad
out
data16
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
movsx
mov
and
xor
or
mov
sub
sub
mov
mov
shl
mov
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
add
pop
pop
ret
mov
jmp
data16
push
mov
push
push
push
and
sub
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
inc
inc
pop
cmp
mov
mov
mov
and
cmp
and
and
pop
mov
pushf
jp
xor
add
add
add
xor
sar
mov
aad
jmp
mov
and
mov
add
cmp
js
add
pop
and
pop
mov
dec
push
push
aam
sub
fadd
add
inc
sub
or
mov
jg
sub
mov
hlt
outs
fsin
mov
xchg
add
bnd
retf
mov
or
add
js
pop
and
sub
mov
(bad)
add
add
add
and
jp
into
add
mov
cvttps2pi
sub
out
add
mov
jbe
jbe
neg
push
and
(bad)
sbb
add
add
sub
mov
and
test
add
add
inc
jg
std
(bad)
std
jg
cmc
sbb
push
add
add
mov
fdiv
stc
pop
sub
inc
and
je
xchg
add
pop
add
loop
inc
outs
mov
adc
ss
push
add
mov
inc
es
mov
adc
test
pop
rcr
dec
add
jno
inc
jge
push
call
inc
and
psrlq
test
jmp
mov
int
dec
addr16
pop
hlt
push
rsqrtps
jl
add
sbb
add
sbb
and
sub
mov
je
jmp
inc
xor
or
mov
sbb
adc
addr16
jg
cmp
repnz
cmovb
mov
xchg
dec
add
add
or
(bad)
call
mov
xor
shl
pop
paddsb
ror
jo
pop
xor
cmp
pop
rol
mov
pop
mov
jmp
call
cmp
xchg
and
cmc
ret
xor
push
jecxz
in
cmp
and
dec
or
xor
and
ins
xchg
mov
jg
cmp
cmp
call
add
inc
jge
add
xchg
add
and
cwd
int3
xor
add
sub
inc
sub
aad
xlat
gs
shl
call
inc
push
cmp
push
add
add
mov
mov
jae
sub
add
or
push
rcl
mov
inc
xchg
outs
rcr
adc
ror
jle
add
pop
pop
pop
pop
jno
mov
scas
out
xor
push
sldt
pushf
sub
mov
and
mov
jmp
data16
push
mov
push
push
push
and
sub
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sbb
fist
mov
mov
mov
(bad)
cwde
and
xchg
push
or
mov
sub
mov
jbe
mov
mov
add
add
add
inc
dec
cmc
sub
jnp
and
(bad)
sbb
add
add
test
mov
(bad)
mov
mov
icebp
out
lea
ficomp
and
xorps
add
add
cmp
sub
pop
jge
push
add
and
fistp
es
inc
and
xorps
add
add
test
mov
retf
aad
cmps
jbe
add
cld
jmp
mov
mov
push
inc
and
punpckhwd
add
xchg
add
jg
mov
in
(bad)
les
test
dec
fld
sbb
pop
xor
sub
or
(bad)
mov
add
ins
and
jge
(bad)
jne
shl
lds
add
or
test
out
inc
and
mov
es
mov
test
dec
add
add
icebp
ins
test
mov
out
enter
packuswb
out
test
and
mov
and
fistp
add
mov
sub
mov
je
xor
mov
sub
mov
pop
jle
add
in
push
inc
and
sub
mov
shr
jmp
je
and
sub
mov
cmps
(bad)
sbb
add
add
(bad)
pop
rol
(bad)
mov
je
paddw
pop
sub
fild
je
jmp
push
inc
gs
into
dec
aaa
mov
outs
inc
and
mov
add
add
add
sub
mov
and
inc
jmp
add
mov
enter
add
cmps
bound
add
add
out
test
add
adc
enter
and
add
fmul
and
addr16
add
sub
rcr
mov
add
pop
mov
mov
(bad)
(bad)
inc
sbb
inc
add
add
mov
das
stos
sub
mov
movzx
repnz
inc
dec
jo
mov
pushf
in
push
fucomip
add
add
jge
and
je
and
pushf
push
inc
sub
and
jmp
cmp
fadd
add
and
fdiv
lods
add
mov
inc
call
pusha
xchg
(bad)
inc
xor
add
pop
inc
addr16
add
inc
mov
mov
js
mov
int
rcl
icebp
in
lea
pop
rol
nop
jecxz
nop
lea
out
and
and
mov
push
jo
inc
aas
enter
fsubr
cld
pusha
jmp
and
and
xchg
xor
jmp
(bad)
dec
mov
add
push
push
(bad)
mov
leave
repnz
ficomp
add
inc
mov
lea
mov
pop
add
and
mov
add
push
fisttp
mov
lea
xor
cld
in
mov
ins
push
sub
or
retf
mov
outs
adc
pushf
addr16
(bad)
dec
pop
add
add
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fwait
inc
lods
xchg
mov
fcomp
add
les
cmps
and
push
add
ror
add
inc
div
add
rol
js
mov
mov
add
jl
sbb
add
stos
or
in
pop
pop
jnp
mov
mov
inc
add
and
xchg
mov
add
add
test
add
add
call
test
pop
add
inc
and
add
add
adc
rol
add
sub
mov
sbb
adc
scas
xchg
inc
repnz
sub
jnp
dec
or
add
add
inc
test
addps
push
stc
mov
test
rcr
cli
inc
call
sub
adc
inc
add
in
popa
xchg
fsubr
mov
iret
rol
js
add
add
add
lea
sub
mov
cmovle
xchg
fcom
mov
in
js
push
pop
push
sub
setno
add
add
into
add
rol
sub
call
push
add
(bad)
lock
rol
mov
xor
daa
xchg
mov
test
add
pop
cmovle
add
jmp
mov
sub
mov
cmovnp
push
add
into
add
add
add
cwde
adc
xchg
test
inc
add
add
add
add
jmp
mov
push
xlat
jecxz
mov
repz
fimul
add
stc
add
mov
mov
add
push
test
test
push
add
fmul
jmp
pop
test
loope
add
sub
mov
inc
add
pop
push
hlt
pop
pop
sub
jmp
inc
sub
pop
rol
mov
sar
xor
jg
jmp
lock
and
cmp
aam
mov
jg
inc
add
add
dec
test
popa
xchg
fsubr
mov
pop
(bad)
clc
add
mov
test
mov
add
sub
dec
inc
and
jg
daa
lods
stos
add
dec
test
add
cmc
imul
and
setno
add
jnp
les
mov
sub
mov
or
jmp
fwait
test
push
sub
mov
pandn
add
add
cmps
call
jns
adc
pusha
into
push
inc
xchg
add
jmp
mov
sub
mov
and
inc
add
stos
add
fdivr
std
(bad)
mov
adc
pop
pop
add
popf
lds
add
push
xlat
sub
dec
xchg
and
movups
push
adc
jmp
jge
and
rcr
(bad)
ror
inc
icebp
add
(bad)
into
add
test
in
add
and
mov
rcl
add
test
mov
rcr
fcomp
jecxz
inc
and
ud0
add
(bad)
jmp
mov
add
mov
inc
fsub
add
push
adc
add
test
iret
add
add
dec
sub
xchg
je
sub
adc
loope
adc
sub
mov
cld
je
jmp
mov
loopne
push
sub
sub
inc
inc
and
movs
xor
add
mov
test
add
add
test
je
jmp
dec
and
xlat
into
cmp
and
je
jmp
mov
jbe
xor
push
movs
pop
and
fmul
stos
add
jmp
mov
mov
add
sub
mov
sete
sbb
add
call
add
sub
sub
and
or
xlat
popa
add
xchg
xchg
add
mov
outs
cdq
mov
jg
ud0
mov
xlat
into
mov
in
aaa
pushf
cmp
dec
je
jmp
xchg
jb
jmp
sti
inc
call
xor
xlat
add
call
mov
xlat
add
mov
je
imul
add
add
pop
pop
sub
dec
inc
or
fadd
pop
rol
ds
add
mov
shr
loopne
add
sub
arpl
loopne
add
mov
shr
add
add
push
adc
test
add
rol
jg
add
add
push
adc
out
popf
cs
add
push
jmp
pop
add
test
xlat
add
sahf
or
sti
jmp
sbb
call
and
sub
push
in
xchg
jmp
push
call
add
jmp
dec
outs
or
dec
les
jmp
aas
addr16
add
mov
push
adc
add
dec
jmp
xchg
jno
add
adc
add
cld
add
add
pushf
sahf
fninit
jp
pop
and
add
push
movs
xchg
and
add
into
inc
add
jmp
sbb
test
test
cmovne
sub
push
ds
lods
add
mov
call
sbb
jmp
test
fwait
mov
pop
add
sub
(bad)
push
and
add
add
test
ds
add
mov
mov
add
mov
add
mov
movs
add
add
mov
cdq
mov
lock
cmp
setne
cmp
fstp
xchg
jp
popf
add
jmp
jl
jmp
mov
stos
mov
icebp
add
fadd
mov
xor
add
push
test
mov
jns
pop
jnp
sub
sub
add
fbstp
xchg
mov
add
test
mov
mov
test
int3
add
push
add
and
add
rcr
lea
xchg
cmps
mov
mov
sbb
fadd
add
add
je
dec
pop
pop
pop
jnp
add
inc
adc
call
into
add
shr
(bad)
in
test
add
add
mov
sub
mov
add
rcl
cmc
and
add
add
adc
(bad)
and
add
push
arpl
sbb
mov
mov
mov
sub
pop
ror
add
pop
test
xchg
add
pop
test
add
push
call
in
nop
pop
add
mov
pop
fucomp
gs
add
into
cdq
pop
stc
and
add
test
add
xchg
outs
retf
push
(bad)
jmp
call
xlat
test
mov
movs
scas
mov
sub
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
ret
test
push
add
push
retf
pop
cmp
add
mov
aaa
nop
and
add
sub
add
ja
and
mov
outs
mov
sbb
cmp
popf
aad
and
add
mov
push
(bad)
add
jmp
in
test
retf
add
jo
test
add
setae
pop
add
jmp
mov
and
lock
cmp
adc
ja
push
retf
add
cmp
add
jl
pop
repz
and
add
rcr
or
add
in
test
retf
add
mov
add
push
test
fild
popa
jmp
add
lods
and
pop
dec
sub
(bad)
pusha
inc
or
add
and
retf
add
add
sbb
push
jge
pop
repz
jne
mov
mov
push
jp
add
add
and
add
add
adc
mov
add
add
(bad)
cld
test
jmp
mov
sub
mov
call
jmp
mov
sub
out
shr
add
pop
add
popa
add
add
xor
mov
sub
mov
je
jmp
inc
add
xor
sbb
mov
jg
pusha
add
pop
dec
push
in
dec
push
js
movs
mov
and
add
xor
jmp
mov
and
add
add
out
loope
add
(bad)
and
in
jmp
mov
and
add
push
mov
(bad)
add
outs
je
pop
vprotw
and
dec
jecxz
sub
ins
jecxz
sub
add
jg
cmc
add
add
mov
sub
jns
and
push
add
or
push
pop
dec
add
and
in
inc
out
test
(bad)
mov
and
add
sbb
xchg
and
add
jp
popa
add
pop
movs
xchg
push
jae
push
push
xor
add
add
cmc
add
(bad)
and
add
add
mov
test
mov
rcl
and
jecxz
pop
ja
add
add
lods
jg
cmp
add
je
sbb
adc
add
cmp
mov
add
and
push
xchg
test
and
pop
add
xor
rol
push
(bad)
je
cmp
dec
jecxz
mov
leave
(bad)
fimul
add
mov
jmp
mov
mul
add
popa
fnstsw
scas
push
outs
pop
dec
add
test
push
ja
or
mov
and
add
lods
mov
cwde
jnp
add
ror
pop
add
jmp
mov
sub
mov
js
push
jecxz
add
add
sub
mov
div
(bad)
aaa
add
push
jmp
mov
js
jecxz
sub
mov
je
push
add
sbb
cwde
and
add
sub
popf
test
(bad)
(bad)
and
add
cmp
add
mov
pop
test
mov
mov
jo
fadd
pop
add
push
inc
and
add
sub
fmul
lods
mov
pop
pop
ja
or
mov
sbb
add
ins
nop
jns
and
add
je
mov
loopne
add
imul
test
sbb
push
cmc
and
popa
lock
add
add
test
sub
mov
js
push
add
fs
retf
and
add
addr16
not
(bad)
lods
mov
add
add
add
and
add
sub
mov
pusha
mov
cmp
sbb
std
pop
add
icebp
test
add
add
mov
add
add
(bad)
and
vphaddubd
pop
mov
and
add
pop
sub
mov
add
pop
mov
sbb
jmp
mov
jl
sub
sbb
add
jg
jmp
in
shr
jle
sub
ds
pmulhw
adc
add
fld
(bad)
and
add
into
mov
inc
ins
mov
push
jg
sbb
add
(bad)
and
add
fst
push
dec
mov
lods
je
test
rol
add
mov
retf
mov
mov
pmaddwd
popa
lock
add
add
pop
add
div
sbb
test
lahf
push
sbb
mov
and
shl
sub
mov
push
rol
jmp
mov
and
add
add
push
lds
je
jmp
or
sub
repz
inc
nop
setnp
pop
jmp
mov
into
fst
xor
fnsave
clc
pop
sbb
jmp
jmp
sub
ret
inc
and
in
mov
add
mov
add
and
add
add
mov
je
xchg
test
lock
push
(bad)
sub
mov
and
minps
add
jmp
outs
jecxz
fs
add
inc
mov
je
jmp
pop
test
icebp
adc
sub
rol
in
mov
add
add
addr16
retf
pop
cmp
jp
dec
neg
and
pop
add
add
add
add
pop
dec
push
in
dec
push
mov
movs
inc
jo
fld
add
sbb
add
(bad)
and
pusha
lock
pusha
das
push
dec
push
inc
and
je
jmp
push
add
leave
mov
add
cmp
pop
xchg
mov
test
add
fst
retf
adc
inc
div
fsubr
jecxz
sahf
mov
jecxz
jmp
arpl
jnp
fld
xchg
push
add
lods
repnz
sub
mov
je
sahf
mov
add
add
scas
push
or
and
inc
push
push
add
mov
sub
push
push
and
test
add
jmp
mov
sub
xchg
sbb
fucom
imul
add
and
add
cmp
and
xadd
retf
sbb
jmp
mov
mov
mov
add
add
les
add
pushf
movs
jp
and
popf
test
add
jmp
mov
mov
lods
dec
add
add
and
jle
or
jp
xchg
idiv
popa
lock
mov
xor
add
mov
mov
(bad)
loopne
out
or
mov
and
hlt
enter
mov
repz
inc
enter
push
xor
dec
jecxz
ja
push
jle
pushf
and
add
(bad)
mul
rol
add
mov
add
mov
mov
mov
add
call
and
inc
retf
int3
add
add
pop
cmp
pop
add
popf
int3
inc
sbb
mov
aad
and
rol
jmp
mov
add
mov
retf
add
add
and
add
adc
mov
and
add
mov
and
mov
and
rsqrtps
out
adc
xchg
mov
imul
add
cmp
push
pushf
mov
jl
pop
add
add
xchg
and
add
add
add
(bad)
mov
mov
std
xchg
shr
add
or
cwde
and
pop
add
xchg
rol
popa
add
push
or
pop
jmp
pop
mov
retf
jecxz
pusha
add
add
pusha
add
jg
pop
cmp
add
pop
mov
mov
add
mov
dec
cmps
and
cld
cmp
cmovne
mov
(bad)
and
add
lods
gs
add
movs
inc
add
mov
hlt
pusha
push
pop
out
pusha
lock
(bad)
outs
mov
mov
add
mov
xchg
icebp
inc
sbb
add
add
popa
cmovne
mov
cmp
add
shl
jbe
add
push
movs
inc
add
sbb
test
add
push
pop
xor
jmp
lods
fimul
xchg
rol
push
jl
add
dec
or
pop
ja
(bad)
adc
movs
jle
add
adc
add
jnp
add
lods
jp
jmp
mov
mov
sahf
push
add
add
inc
sti
cmps
xor
sbb
add
add
push
and
icebp
add
xchg
and
dec
add
cmp
int3
inc
jmp
mov
mov
popf
mov
add
add
sbb
fmul
lods
test
add
mov
ins
jecxz
and
add
push
hlt
test
mov
cmp
add
push
mov
mov
test
push
(bad)
rcr
mov
mov
movs
or
cmc
jmp
mov
lock
adc
cmovne
test
jl
dec
add
cmp
test
pop
inc
add
or
xchg
lock
inc
cwde
cmp
add
movs
repnz
add
add
adc
lea
rcr
(bad)
fwait
(bad)
addr16
push
ja
jmp
or
cmps
and
add
mov
out
add
test
add
adc
push
add
dec
test
dec
add
add
and
mov
and
out
je
or
mov
cmp
pop
and
popa
add
add
mov
add
add
mov
mov
iret
jle
inc
sbb
mov
jp
std
aam
add
add
lods
add
cmps
jl
mov
ror
add
call
mov
push
mov
mov
add
popa
aaa
test
and
push
add
or
jmp
and
pusha
and
retf
push
mov
add
test
jnp
rol
add
add
add
stc
cmp
data16
add
add
push
and
int
add
(bad)
repz
add
addr16
and
cmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
lea
pop
pop
ret
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
jmp
int3
push
mov
sub
mov
mov
mov
call
lea
mov
mov
mov
mov
call
mov
mov
mov
mov
call
sub
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
jmp
add
pop
ret
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
movzx
mov
mov
mov
add
add
sub
mov
movzx
mov
mov
mov
add
add
mov
add
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
movzx
mov
mov
mov
add
add
mov
add
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
call
mov
jmp
data16
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmps
inc
adc
and
(bad)
dec
or
jo
inc
ins
pop
mov
pop
jo
inc
and
mov
(bad)
push
mov
push
mov
adc
mov
mov
js
cmp
add
movs
add
add
xchg
inc
or
shr
and
(bad)
dec
add
add
add
add
inc
and
pop
jp
add
sbb
nop
jg
call
cmp
loopne
mov
push
or
add
cmps
add
add
mov
sub
mov
and
inc
dec
jbe
shr
pop
sub
fs
mov
xchg
fisttp
or
dec
jge
add
add
mov
sub
cli
xor
cmovle
pop
add
add
cmps
fs
cmove
je
jmp
sbb
bound
mov
into
(bad)
sbb
add
add
imul
(bad)
adc
jg
ja
fcom
in
fs
jmp
pop
and
and
imul
outs
push
mov
sub
hlt
inc
and
packuswb
or
inc
and
in
shl
add
add
jmp
or
and
stos
cmps
mov
inc
test
jl
add
scas
jecxz
in
inc
and
sub
(bad)
and
sub
enter
add
add
add
cmps
pop
cmp
pop
jmp
dec
jge
ja
in
mov
sub
mov
and
js
pop
add
jmpw
add
dec
or
fs
int
ret
nop
(bad)
and
pusha
sub
dec
fdivr
dec
add
inc
push
xchg
sbb
push
(bad)
imul
ja
jmp
(bad)
pop
and
xor
dec
mov
adc
push
jno
add
jmp
or
jnp
out
mov
or
inc
ja
add
inc
and
sub
mov
or
cwde
inc
add
add
sbb
add
or
and
sub
inc
and
bswap
jnp
add
add
add
addr16
add
aam
add
(bad)
dec
xchg
and
sbb
and
cmc
pop
add
add
ret
popf
mov
cmp
cmove
mov
(bad)
push
push
mov
(bad)
and
push
add
test
and
push
push
add
xor
mov
dec
sub
jmp
mov
cli
xor
jmp
mov
push
outs
mov
(bad)
ins
mov
push
add
mov
push
retf
and
cmp
and
mov
mov
rol
jecxz
pop
jmp
call
iret
pop
sub
push
inc
ror
add
add
and
into
(bad)
(bad)
dec
dec
mov
enter
and
cld
add
pop
or
inc
sbb
add
add
inc
inc
ins
push
sahf
dec
jecxz
add
gs
pop
pop
pop
ret
mov
mov
adc
cmc
sub
inc
or
add
mov
jnp
mov
add
mov
inc
inc
push
test
dec
pop
test
add
add
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cwde
inc
adc
cs
mov
or
and
cmp
add
mov
cmp
add
adc
mov
adc
jne
add
es
add
add
fiadd
inc
add
clc
and
xchg
add
mov
or
lock
pop
add
add
test
daa
add
cmc
pop
and
xchg
repz
test
ins
es
mov
mov
and
mov
mov
jp
and
es
fwait
xchg
add
mov
lods
mov
mov
loopne
and
mov
test
test
ds
push
mov
add
add
mov
add
pop
call
ja
jbe
mov
jmp
mov
adc
ins
jo
je
test
add
add
xchg
or
repz
add
jmp
mov
sub
mov
jge
inc
es
and
adc
jne
jl
stc
inc
scas
clc
and
add
add
sbb
repz
jmp
je
add
inc
push
and
add
add
cmc
add
test
jl
test
add
add
outs
aas
or
shl
xchg
aaa
call
jne
sub
scas
test
add
add
sbb
fiadd
push
mov
movs
call
push
and
add
add
pushf
cmp
out
iret
jl
add
adc
and
repz
lods
xor
daa
je
add
aas
add
jg
jmp
mov
sub
mov
retf
add
jg
jmp
or
lods
enter
mov
mov
out
iret
add
jl
mov
xlat
call
mov
sar
test
push
(bad)
cmps
rol
add
lods
add
add
add
or
and
fwait
xchg
repz
push
mov
sub
mov
jp
lea
add
jmp
mov
and
add
add
mov
add
aas
add
jg
inc
add
add
cwde
test
jne
add
add
clc
and
xchg
repz
sub
and
xchg
add
sub
pop
sub
adc
add
int
jl
jb
add
add
repz
mov
add
add
enter
outs
add
lods
mov
add
test
dec
add
add
add
aas
or
inc
push
and
lods
pop
add
mov
retf
fwait
xchg
cld
pop
arpl
add
add
add
sbb
mov
push
inc
and
lods
add
add
adc
inc
or
test
mov
ja
test
add
add
jmp
mov
and
int
lods
cmp
lock
add
pop
pop
fwait
add
fimul
test
push
sbb
inc
shr
dec
push
int
inc
test
icebp
and
add
je
and
mov
add
add
fiadd
add
jno
cli
mov
ret
scas
pop
adc
mov
fisubr
mov
and
(bad)
mov
add
outs
add
add
or
add
add
sahf
inc
aaa
sbb
pop
add
add
mov
sub
mov
sbb
(bad)
and
int
cmp
retf
add
sub
mov
rol
jmp
or
shr
call
jg
jmp
test
aas
or
movsx
and
jmp
mov
rol
std
inc
and
loope
and
jmp
push
add
add
or
add
je
xchg
jge
fwait
push
ja
imul
dec
(bad)
adc
inc
rep
pop
add
add
add
test
add
fild
dec
str
add
add
cli
add
add
int
xor
push
and
(bad)
fld
add
add
add
neg
mov
repz
lods
hlt
sub
test
test
adc
mov
retf
fwait
xchg
fsubp
lock
or
xor
in
add
leave
scas
add
or
mov
pop
add
sub
addr16
and
psubb
lahf
add
jl
add
add
cli
call
repnz
sub
xor
jmp
pushf
xchg
push
call
push
jbe
das
mov
fld
add
fadd
jmp
sub
mov
sbb
cmp
rol
add
fiadd
lods
push
push
repnz
mov
add
je
jmp
inc
test
call
jmp
stos
add
jae
cmp
fwait
xchg
jmp
mov
sub
mov
and
fsubr
sti
adc
jmp
lods
clc
mov
test
test
test
add
int
add
add
add
sub
std
stos
and
cpuid
adc
add
jmp
mov
add
div
jp
mov
iret
shr
mov
into
jl
add
mov
add
add
or
inc
add
lods
scas
xchg
jno
(bad)
int3
cmps
test
mov
cmp
xadd
mov
in
add
add
loop
add
mov
cli
push
add
jne
push
pusha
add
int
or
xor
clc
cmp
fadd
xchg
add
aas
or
mov
pop
and
adc
add
push
add
je
push
in
add
jl
lock
mov
adc
call
xlat
add
add
and
push
push
add
add
add
addr16
push
not
mov
repz
ins
mov
add
mov
out
add
and
mov
and
add
add
add
xchg
add
data16
adc
mov
add
add
add
std
add
dec
rol
shr
add
icebp
and
je
add
scas
addr16
add
add
test
and
xchg
mov
mov
and
add
add
add
mov
push
lds
ins
push
call
xchg
sub
lds
cmovl
fwait
and
add
jmp
mov
jmp
mov
or
add
jmp
mov
add
and
pop
pusha
add
adc
mov
and
out
es
add
add
adc
add
fisubr
cmp
add
add
in
xchg
or
and
add
mov
mov
push
in
out
add
jmp
les
xor
jno
cmp
xor
mov
add
push
nop
fwait
xchg
repz
cmp
xchg
out
mov
inc
inc
mov
add
add
mov
loope
shr
add
repz
repz
xor
icebp
mov
xchg
and
add
add
add
xchg
ins
mov
je
push
add
add
jl
mov
mov
inc
lds
add
mov
sub
mov
add
inc
mov
jmp
mov
test
nop
fwait
xchg
repz
sub
dec
mov
lods
add
adc
add
xchg
mov
loope
data16
pop
mov
ins
test
add
and
jo
push
mov
xchg
jne
add
ret
faddp
sbb
and
repz
aaa
inc
add
add
add
dec
add
clc
test
mov
mov
lods
pop
(bad)
xchg
push
cwde
add
es
test
add
js
cli
hlt
add
fidivr
pop
ret
lea
mov
ror
jne
addr16
push
mov
mov
mov
mov
mov
add
inc
test
add
add
inc
mov
jmp
mov
fwait
sbb
and
inc
pop
add
inc
add
and
add
or
(bad)
push
and
lods
pop
adc
pop
mov
add
mov
jmp
inc
add
cmp
xor
div
sub
data16
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
movs
dec
push
mov
or
jne
mov
and
mov
mov
cmp
and
mov
mov
jo
neg
or
leave
inc
xor
adc
and
mov
and
mov
sub
fld
add
add
sbb
sub
add
call
add
xchg
das
push
jl
(bad)
jmp
pop
pop
ret
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
int3
jle
test
aad
mov
mov
xchg
inc
sub
and
pop
shl
jl
adc
mov
int3
adc
je
les
mov
in
mov
jmp
mov
pop
dec
xlat
add
inc
and
and
mov
mov
cmp
inc
and
mov
lea
pop
jmp
xchg
ret
int3
int3
xor
mov
daa
pusha
push
ins
shl
pop
daa
les
cmp
pop
clc
loopne
in
out
je
mov
sub
fs
adc
ds
inc
outs
cmp
cmps
dec
jle
xor
pop
call
mov
ret
fs
inc
xchg
xor
sub
cmp
lock
and
mov
fdivr
stos
cmp
sub
popa
mov
arpl
sub
dec
add
push
push
add
jns
push
xchg
iret
inc
nop
inc
dec
scas
imul
inc
or
(bad)
and
leave
or
pop
mov
jp
or
cwde
mov
jp
sub
mov
mov
jnp
inc
cmc
(bad)
addr16
push
xor
jge
fimul
or
scas
adc
mov
cmp
outs
push
mov
sbb
imul
xor
cmp
mov
int
ret
mov
daa
fisub
rep
mov
pop
jp
jle
sub
mov
in
pop
mov
cmp
xchg
pop
add
pushf
dec
arpl
xchg
outs
xchg
push
mov
jne
pusha
mov
cld
push
retf
ret
xchg
pop
mov
pop
jle
mov
sub
sbb
retf
fs
dec
mov
int3
cmp
sub
mov
add
mov
mov
xchg
ret
(bad)
xchg
lods
fbstp
loopne
add
arpl
sbb
ret
adc
and
and
stos
push
xchg
cmps
sti
sub
(bad)
cmc
adc
(bad)
repz
addr16
bound
icebp
push
(bad)
xor
hlt
mov
mov
mov
addr16
fisub
add
in
push
add
inc
out
and
repnz
pop
jle
popf
sub
jnp
inc
adc
in
inc
movs
lahf
pop
inc
mov
jmp
addr16
pushf
dec
mov
xor
(bad)
fild
xchg
inc
int
push
pop
and
(bad)
in
sahf
add
add
dec
leave
mov
lods
(bad)
sar
lods
ja
dec
rol
fidivr
dec
and
daa
cmp
arpl
ins
in
(bad)
movs
jp
int
cmp
mov
push
add
loopne
(bad)
fsubr
std
nop
lock
mov
or
lea
pushf
xchg
les
xor
cwde
stos
and
push
jb
ins
nop
inc
xchg
neg
cmp
repnz
dec
ja
lock
sahf
fidiv
and
or
cmp
adc
ja
mov
or
mov
test
dec
xchg
arpl
std
aaa
out
mov
sub
and
leave
cmp
es
popf
repnz
xchg
pop
outs
sahf
push
cmp
dec
or
xor
xchg
cmp
sub
fistp
ins
mov
jae
ds
push
mov
or
ins
ficomp
repz
sahf
inc
sub
mov
imul
aad
sbb
movs
inc
add
fadd
dec
cmps
daa
mov
pop
je
data16
stc
jmp
jge
inc
lock
dec
mov
pop
gs
xor
push
or
xor
(bad)
iret
or
outs
stc
mov
xlat
push
and
loope
cmp
mov
imul
retf
xlat
(bad)
enter
dec
loopne
sbb
popa
popa
mov
clc
test
mov
fist
gs
mov
jmp
dec
bound
cwde
xchg
lea
retf
pop
sub
pushf
test
hlt
(bad)
repnz
dec
pop
dec
jle
mov
mov
ins
cmp
fisttp
dec
pop
shl
or
cmc
mov
fs
push
addr16
loop
dec
fisttp
jg
jp
mov
sub
(bad)
push
int3
call
lods
xor
jecxz
mov
and
mul
add
das
dec
xchg
cmc
xchg
dec
out
lea
xchg
and
fld
shl
add
fisttp
or
pop
push
retf
fwait
push
cmp
add
or
adc
add
xchg
dec
xor
pop
mov
popa
aam
pop
jmp
cmp
and
stos
pop
cwde
push
shl
jmp
and
sbb
inc
idiv
lahf
or
pop
jo
lds
xchg
mov
fld
add
lahf
retf
nop
cmp
ds
pop
stos
inc
sbb
mov
xor
ja
or
push
ret
test
xchg
mov
jl
jae
mov
mov
push
mov
ror
xchg
cmp
pushf
addr16
cmc
lahf
dec
and
push
inc
inc
fucomip
retf
(bad)
jbe
ja
jg
and
clc
and
pop
or
jne
pushf
mov
mov
cdq
jne
stos
add
cli
test
push
push
inc
cmp
adc
sbb
inc
daa
lahf
inc
retf
test
push
jl
cs
sub
sbb
lods
or
cli
and
call
pop
cmp
mov
and
xchg
into
adc
ins
jp
pop
cmp
jecxz
xchg
ret
pop
pop
(bad)
sub
and
push
in
cdq
xor
rcr
inc
rol
cwde
outs
lods
mov
mov
jp
fst
fs
fcmovbe
push
xchg
lds
inc
iret
sub
scas
xchg
ds
int3
mov
or
jnp
imul
test
cmp
loop
stos
repz
cmp
push
jle
mov
add
mov
iret
adc
mov
test
jmp
dec
ins
mov
mov
(bad)
adc
jnp
and
cmp
and
int
scas
xchg
das
xor
in
outs
xchg
cmp
dec
pop
mov
mov
cmp
popa
ins
mov
int
or
inc
xor
push
call
cmp
jp
pop
inc
jecxz
loop
stos
pop
sbb
xor
iret
out
xor
icebp
pop
inc
jmp
jns
cdq
jno
std
retf
jne
and
fwait
les
fbld
leave
jle
aam
jbe
rol
std
xchg
jae
cmp
into
adc
xor
cmps
arpl
test
out
dec
mov
and
pusha
js
dec
cs
adc
ret
jmp
jmp
inc
cli
sub
or
and
dec
test
sub
push
mov
sub
inc
call
pop
cmp
imul
fistp
setl
nop
mov
mov
mov
push
xor
test
cmp
fcomip
cmp
(bad)
mov
push
test
retf
imul
adc
int3
mov
pop
xchg
data16
xchg
repz
ss
cwde
loop
dec
fisubr
jmp
xchg
add
push
push
sbb
xlat
popf
adc
div
and
mov
iret
or
and
mov
jnp
mov
in
lds
push
lock
aad
push
inc
outs
jmp
repz
aaa
(bad)
lds
cmp
loopne
xor
rcl
adc
ss
sub
pop
ret
retf
ud0
arpl
mov
inc
add
jae
lods
fisub
call
mov
sbb
sbb
push
mov
aaa
enter
adc
pop
daa
rol
outs
inc
call
ds
int
(bad)
call
dec
push
mov
ins
in
and
inc
mov
int3
inc
pop
je
mov
or
pusha
test
loopne
fist
popa
out
xchg
and
loopne
adc
adc
push
fucom
push
retf
retf
push
cmp
xchg
out
aam
jno
inc
test
sub
jne
js
jmp
adc
mov
js
dec
popf
ds
loopne
(bad)
cld
jge
fstp
ss
push
sbb
and
xlat
sub
pop
repnz
es
jne
jle
and
pop
out
(bad)
out
sub
stos
push
and
dec
pop
sbb
(bad)
les
retf
out
int3
sub
les
inc
mov
jp
mov
push
ficom
int
mov
cmp
or
mov
stc
daa
test
xor
enter
mov
stos
push
cld
adc
loopne
mov
repnz
push
pop
fsub
sub
movs
jmp
push
push
call
mov
js
mov
jnp
(bad)
cmp
push
add
sub
xor
hlt
cmp
mov
adc
aas
leave
push
xchg
out
and
push
xchg
sbb
cmp
mov
push
mov
pop
ds
xchg
mov
test
dec
mov
or
ret
cs
or
mov
popa
mov
aad
cmp
fwait
cmp
std
xchg
loope
pop
popf
push
test
xchg
push
inc
xchg
movs
(bad)
jp
inc
in
dec
inc
ins
cmps
pop
fdiv
jmp
cmp
adc
sbb
jp
adc
aas
push
test
jl
stos
push
jg
fistp
cmps
(bad)
in
adc
test
es
sahf
xchg
xor
mov
fs
mov
pop
aad
retf
dec
push
push
xchg
lock
fsub
push
ror
out
and
fistp
push
mov
add
push
int
inc
arpl
popf
xor
and
adc
in
lahf
mov
add
nop
stos
in
or
push
or
clc
cmp
xor
push
mov
outs
inc
sub
cwde
das
mov
mov
sahf
sub
mov
dec
repnz
fiadd
sbb
int3
(bad)
test
fs
jo
push
nop
push
cs
fcomp
mov
add
jl
or
lods
lds
sub
enter
call
inc
or
in
(bad)
call
ret
mov
retf
(bad)
(bad)
dec
es
xor
or
les
retf
mov
or
rol
popa
or
sbb
pop
xor
outs
lods
loope
retf
mov
ds
mov
push
bound
jo
xchg
sub
or
cs
push
push
xchg
call
test
push
mov
sub
(bad)
jbe
add
mov
ss
test
push
inc
add
jno
int3
fmul
or
pop
lods
aam
popa
hlt
add
cmps
inc
push
repz
call
inc
mov
in
retf
add
bndldx
jmp
nop
add
imul
mov
data16
mov
call
and
mov
movs
shr
daa
adc
arpl
and
jge
push
test
stos
ins
sub
sub
inc
popa
shl
jo
push
nop
pusha
jne
add
pop
sbb
int
adc
les
stos
push
rol
sub
call
hlt
fdiv
sbb
jo
std
ret
push
jmp
push
cmp
shl
dec
add
aaa
stos
lahf
ficom
sbb
sbb
sbb
push
imul
sub
dec
aad
popa
mov
jg
or
sub
test
xchg
mov
loope
fnsave
(bad)
mov
movs
mov
je
and
jmp
and
out
dec
xor
xchg
or
xor
cmps
xchg
aaa
lahf
push
sub
dec
cmp
(bad)
out
xlat
xchg
dec
sub
dec
pop
ficomp
outs
mov
fdivr
mov
mov
and
cmp
je
pop
sti
dec
mov
test
mov
fstp
(bad)
jo
dec
push
push
scas
in
jmp
xchg
mov
cmp
fsub
fcmovu
pop
jne
inc
and
and
dec
aas
xchg
ds
inc
dec
add
inc
xchg
xchg
pop
push
sahf
es
clc
mov
sti
sar
push
fistp
aas
mov
push
rcr
adc
sbb
in
mov
cmps
fdivr
movs
add
mov
and
and
icebp
dec
push
pop
add
aaa
xor
ret
push
mov
aas
shl
cdq
mov
mov
es
sub
test
imul
inc
push
movs
mov
lods
or
scas
shr
(bad)
jge
adc
fstp
aas
xchg
ins
jo
mov
sbb
ret
push
popa
sbb
mov
sar
sub
jns
sbb
ds
cmps
dec
mov
dec
xor
test
test
ret
or
mov
cdq
sbb
hlt
add
lea
mov
push
xor
xchg
inc
sub
enter
xor
outs
xchg
pop
adc
es
xchg
js
or
sub
sub
sub
and
(bad)
and
and
ret
mov
loop
ins
cmp
mov
jbe
std
ret
push
sti
dec
ret
sbb
push
pop
and
xor
mov
pusha
lods
idiv
jp
outs
mov
leave
jno
add
adc
cmp
pusha
cwde
xchg
xor
cdq
test
mov
push
fld
jl
mov
ja
stos
retf
call
fwait
rcl
in
push
xor
out
mov
rcr
mov
mov
cwde
daa
rcr
mov
loopne
xchg
clc
jne
enter
mov
fcomp
push
and
cs
jecxz
ja
imul
mov
les
mov
xor
xor
mov
fs
push
and
jge
pusha
cmc
push
fs
outs
pop
bound
and
sbb
leave
fld
jmp
or
in
jno
test
daa
ret
test
imul
je
mov
neg
mov
repnz
repz
ss
add
les
imul
pop
xchg
aam
jl
sar
push
fwait
jo
sub
adc
xchg
jnp
ret
jb
jb
data16
pop
push
adc
cmp
inc
movs
icebp
scas
aam
out
cwde
scas
ss
lds
in
pop
(bad)
mov
imul
repnz
leave
inc
repnz
and
push
inc
push
mov
out
mov
stos
push
add
and
mov
loopne
jecxz
mov
in
sbb
push
and
or
bnd
pop
push
pushf
push
pop
mov
js
jl
mov
adc
aas
mov
and
jbe
add
xor
mov
out
cmp
movs
sbb
bound
add
clc
adc
and
jb
enter
cmp
(bad)
out
repz
sar
adc
add
cmp
push
jecxz
ret
jno
mov
sbb
mov
cmp
pop
pop
mov
shl
mov
cwde
xchg
mov
aam
mov
mov
(bad)
ins
mov
sbb
movs
(bad)
mov
rcl
lods
fs
jmp
push
loope
jp
sti
jle
mov
adc
xchg
stos
add
or
data16
ins
cwde
adc
in
test
pop
xor
push
push
aad
cmc
xchg
push
test
ror
ror
mov
sbb
push
idiv
repnz
(bad)
cmps
in
call
pop
fcomi
outs
inc
bound
pop
sbb
movs
inc
sub
push
xchg
and
mov
jmp
iret
lahf
or
sub
push
xchg
rcr
push
ror
dec
cmp
jo
mov
(bad)
ret
jecxz
sub
xor
in
mov
jle
(bad)
and
inc
jmp
cmp
inc
lds
lea
scas
xor
push
mov
mov
dec
aas
mov
push
in
fsub
pushf
push
test
(bad)
ins
aam
lods
daa
mov
popa
jmp
pop
pop
mov
inc
loop
in
ds
lods
mov
lods
xor
mov
pushf
xor
fisubr
push
ins
add
cmc
leave
cmps
cmp
add
ja
shl
mov
mov
pop
adc
ins
adc
fmul
pop
or
inc
mov
sbb
or
push
push
dec
movs
inc
adc
jecxz
cld
cmp
(bad)
adc
or
sbb
jae
mov
lods
jns
mov
call
enter
sbb
mov
jo
arpl
and
jl
sbb
jmp
mov
pusha
or
inc
fadd
dec
hlt
sbb
add
lahf
fbld
sbb
cmp
mov
adc
icebp
mov
nop
enter
movs
repnz
ficomp
inc
stc
push
mov
lods
add
push
mov
inc
shl
scas
test
push
loopne
div
stos
sub
cmps
sbb
cmp
in
xor
push
les
jmp
daa
aad
cmc
xchg
lock
ds
stos
stos
imul
imul
pop
mov
sbb
in
xor
mov
pop
and
jg
mov
sub
adc
fcmovbe
je
scas
scas
mov
mov
jl
fstp
sbb
dec
xchg
add
scas
ins
outs
push
aaa
xchg
int3
popa
into
push
adc
ins
not
call
fistp
test
retf
xchg
imul
inc
xlat
stc
mov
adc
loope
outs
adc
pop
xchg
dec
shr
xchg
call
add
lds
loop
push
popf
mov
pusha
out
stc
xchg
add
ficomp
(bad)
fiadd
ja
scas
adc
sub
js
mov
ins
mov
nop
xchg
fisub
sti
fwait
cmp
int3
cmp
mov
mov
sbb
sub
adc
jg
mov
(bad)
sub
xchg
xor
ds
and
scas
adc
iret
fs
in
scas
aad
xchg
sub
ja
xchg
pop
mov
adc
rcl
xor
add
sbb
hlt
push
dec
ds
int3
mov
ret
xchg
jb
fs
pop
addr16
inc
in
xor
cmc
icebp
jg
lock
repz
and
xchg
inc
dec
mov
xchg
pop
mov
push
ins
(bad)
ins
inc
test
mov
dec
mov
repnz
inc
imul
and
pop
push
mov
mov
xor
sbb
fcomp
dec
in
jmp
cmc
lods
mov
sub
adc
sub
(bad)
xchg
add
retf
(bad)
out
test
and
outs
jb
sahf
mov
pop
pop
adc
cmps
in
pop
sub
cmp
cmps
xchg
aas
jg
inc
xchg
xor
cli
mov
sbb
mov
fsub
jne
cmp
mov
inc
div
cmp
and
and
sub
mov
retf
cmp
add
mov
in
xor
in
sahf
fcom
pop
scas
pop
in
mov
cli
fldcw
mov
jbe
and
mov
mov
in
ds
popf
inc
xchg
dec
sahf
dec
mov
movs
pop
push
jno
enter
jecxz
pop
stc
fmul
push
jecxz
js
scas
repz
fisttp
jns
cs
jb
mov
nop
jns
mov
dec
out
lock
hlt
jmp
int3
ficom
pop
lahf
ins
test
test
stc
cmps
xor
cmp
inc
jle
push
stos
xchg
ds
ret
xchg
push
test
(bad)
add
push
fwait
in
xor
sub
pop
mov
stc
lds
aaa
imul
stos
retf
stc
inc
loopne
push
cmp
dec
inc
jnp
fsub
stc
shl
icebp
sub
sar
out
inc
xchg
push
cmps
sbb
leave
sbb
xor
sbb
and
xchg
mov
mov
loop
push
mov
in
ret
dec
jmp
femms
jle
aas
xchg
shl
sti
xchg
lds
sub
into
call
jo
lea
rcl
mov
fucom
imul
push
popa
mov
data16
(bad)
cwde
pusha
jb
pop
pusha
shl
xchg
mov
push
les
or
mov
or
xchg
ret
frstor
add
sub
mov
out
dec
retf
cmp
jl
retf
xchg
and
fiadd
push
push
sbb
(bad)
movs
jmp
push
pop
dec
mov
shl
push
jbe
push
sbb
lahf
jnp
dec
dec
inc
jno
jmp
movs
sti
mov
mov
int3
inc
add
cmp
add
retf
add
mov
(bad)
les
scas
enter
lea
sub
lods
je
dec
xchg
cwde
push
dec
shr
test
cwde
fndisi(8087
mov
xchg
mov
ins
push
sbb
test
xor
xchg
dec
add
adc
loope
dec
aam
movs
xor
es
fidiv
ror
out
in
jge
ss
dec
dec
push
rol
xor
cmps
jmp
mov
push
sub
das
dec
mov
push
ja
movs
pop
int
cmp
imul
xchg
jge
test
arpl
pop
mov
fcmovnb
ins
jb
shl
aaa
mov
daa
push
enter
psubusb
std
push
cdq
mov
xor
cmp
hlt
shl
fldz
xor
repnz
xchg
leave
sub
cmp
loope
dec
xor
mov
dec
xchg
or
mov
mov
(bad)
cmps
sub
std
inc
sbb
xchg
clc
xchg
(bad)
pushf
xchg
je
push
cmp
adc
pop
mov
add
rcl
fbstp
cmp
ret
pop
mov
and
mov
bound
inc
jae
or
push
pusha
and
retf
(bad)
adc
pop
fwait
sbb
add
outs
mov
pop
(bad)
mov
sbb
cmp
cmp
(bad)
pop
push
jns
mov
lds
imul
xor
inc
retf
(bad)
jmp
or
pop
inc
jecxz
es
pop
inc
mov
jbe
sub
mov
sbb
adc
scas
test
fcomp
and
or
xor
(bad)
and
jno
mov
cmp
mov
mov
jo
jno
cli
jg
imul
mov
rcr
push
push
jnp
pop
pushf
rcr
ins
sahf
jecxz
xlat
scas
(bad)
loopne
mov
cmp
jno
out
in
push
jg
in
sub
jle
aaa
retf
add
inc
sub
and
xchg
pop
stos
mov
int3
dec
xchg
xchg
pushf
cmp
lock
mov
test
cld
cmp
xchg
scas
ror
not
test
mov
test
repz
out
mov
iret
adc
enter
dec
dec
xchg
xlat
mov
cdq
push
cs
mov
hlt
push
or
clc
xor
dec
cmp
cmp
pop
add
ret
addr16
add
jno
mov
mov
fstp
mov
sbb
cmp
repnz
lods
leave
fisubr
into
pushf
mov
xchg
mov
mov
cs
jmp
or
jnp
(bad)
sti
nop
leave
pop
mov
icebp
mov
int3
les
xchg
xor
loope
ins
repnz
out
movs
push
aad
xchg
xchg
out
sub
xchg
movs
xchg
es
out
jno
add
std
xchg
push
clc
lods
mov
sub
xor
into
loopne
imul
lds
repz
mov
mov
pop
xchg
repz
sbb
jp
lock
retf
aad
and
ins
pop
mov
mov
cmp
cdq
idiv
movs
pop
mov
dec
lock
aam
shl
retf
lea
cmps
mov
jno
hlt
(bad)
jmp
pop
sbb
imul
shr
iret
mov
dec
jnp
int3
mov
loopne
cdq
and
daa
stc
pusha
(bad)
mov
push
jae
iret
aam
gs
nop
jg
dec
cmps
out
xchg
inc
or
call
sub
das
int
hlt
repz
jp
xor
cmc
dec
fdivr
jmp
push
add
jmp
fldcw
adc
add
xchg
and
jecxz
bound
mov
cmps
ins
sbb
mov
and
adc
test
cld
cmp
sub
add
not
xor
fisub
jns
or
jg
jmp
inc
or
pushf
mov
inc
(bad)
test
test
ror
sbb
jmp
mov
adc
ret
pusha
jp
in
push
inc
pop
inc
cwde
cmc
mov
adc
adc
rcl
lds
push
cmp
jmp
pop
test
pop
fisttp
nop
in
cmp
fimul
retf
loop
call
push
adc
cmp
or
loop
jmp
sub
lods
ja
ss
jno
mov
cs
outs
push
push
pop
mov
xor
arpl
jle
movs
sbb
push
dec
int3
scas
rcl
shl
or
cmp
inc
jp
xor
jno
dec
out
rcr
out
adc
shl
push
xchg
cdq
movs
fcom
ja
cmp
sbb
cmp
cmp
cmp
jno
lock
or
mov
fbld
(bad)
aam
mov
sub
pushf
sub
lahf
shl
or
js
jno
call
cmp
or
lods
or
loop
(bad)
scas
add
dec
push
ds
call
fdivr
cdq
dec
fistp
add
and
imul
(bad)
and
sbb
fimul
cmp
(bad)
adc
dec
cld
imul
outs
or
xchg
aas
rol
push
(bad)
in
dec
pop
sbb
mov
xchg
mov
repz
mov
or
sub
sub
pushf
mov
test
push
mov
push
xchg
sbb
out
adc
dec
xchg
mov
test
mov
repnz
rcl
push
and
or
sub
cmp
mov
test
(bad)
in
jl
jnp
lods
sub
adc
push
pop
pop
out
lahf
sub
mov
mov
(bad)
sub
shl
cmp
stos
push
add
and
jmp
sub
mov
xchg
jl
sbb
daa
and
sub
out
out
inc
push
mov
repnz
jne
cmp
sbb
push
pop
pop
sub
das
jp
and
add
(bad)
lods
int3
mov
or
xor
(bad)
xchg
dec
xchg
sub
xchg
(bad)
nop
or
jmp
mov
iret
scas
dec
not
ret
bnd
sub
sub
aas
jp
or
mov
out
push
jb
(bad)
enter
xor
jp
not
loope
mov
lock
rcr
xor
cdq
xor
in
out
xor
dec
adc
sbb
cwde
out
call
pop
popf
lods
sub
push
retf
movs
jmp
dec
fmul
mov
add
cmp
fistp
jg
gs
adc
and
ja
jmp
shl
xchg
mov
sbb
add
scas
ja
sbb
mov
or
xchg
jne
sub
repnz
popf
mov
cmp
cmp
adc
pop
pop
adc
adc
aam
pop
icebp
mov
or
mov
imul
adc
hlt
push
repz
shl
push
mov
mov
cmp
or
fwait
sbb
sbb
fadd
(bad)
cli
dec
sbb
xchg
push
(bad)
repz
or
xchg
rcr
dec
pop
mov
stos
clc
stc
inc
ror
xlat
outs
mov
inc
adc
pop
adc
jbe
xchg
stos
pop
stos
cmp
adc
loope
cli
inc
push
pop
(bad)
fstp
mov
(bad)
out
jb
gs
cmp
cmc
(bad)
dec
or
xor
js
xchg
mov
icebp
xchg
or
fs
jp
repz
rcl
mov
pop
xlat
mov
inc
mov
dec
(bad)
leave
pop
pop
mov
cdq
pop
jecxz
sub
icebp
sbb
xchg
xor
sbb
pop
ins
adc
loopne
lds
sbb
push
rol
addr16
mov
xor
xchg
jbe
cmc
pusha
retf
leave
dec
mov
mov
cmp
inc
sub
je
scas
mov
lods
stos
dec
dec
adc
aam
into
aam
int
push
pop
sbb
cmp
not
sti
mov
dec
adc
stc
jmp
add
std
cwde
sahf
cmp
sbb
or
pop
cmp
cmp
es
xor
push
call
rcr
fnstenv
loope
xor
loopne
inc
movs
pop
cli
xchg
in
sbb
fs
je
or
into
cs
dec
xchg
lahf
out
jns
ds
mov
nop
cli
dec
dec
and
inc
dec
stos
ret
mov
mov
adc
jno
xchg
addr16
sti
adc
retf
aam
out
sub
or
in
std
rol
cmp
sub
dec
shl
add
out
jo
mov
push
sub
pop
es
cwde
call
push
(bad)
dec
jmp
mov
add
mov
in
fs
push
cmp
sbb
push
dec
pop
data16
sbb
das
cmps
ret
adc
dec
pop
cli
scas
inc
jbe
sar
inc
pop
add
sub
ds
dec
push
mov
test
and
xchg
sbb
adc
adc
jp
xchg
loop
movs
cmp
fcom
test
pop
sbb
pusha
out
ja
fistp
pop
ins
mov
dec
cwde
idiv
push
in
jo
xor
fdiv
jne
jmp
sbb
pop
pop
lock
(bad)
int3
mov
jge
aad
mul
cmps
xor
and
add
mov
push
(bad)
(bad)
cmp
and
pushf
outs
xchg
es
in
pop
cmp
jmp
jl
cmp
sbb
imul
test
dec
sbb
mov
daa
pop
adc
cmp
pop
jns
fs
retf
sbb
cmc
aad
repz
int
ret
enter
inc
push
fst
dec
sub
fadd
mov
inc
add
test
jmp
imul
xlat
stc
and
fsubr
mov
call
movs
xor
jne
pop
imul
nop
stc
sub
pop
mov
stos
in
ins
sub
or
call
sub
jae
add
jns
jle
cdq
cmp
sahf
add
fbld
movs
push
(bad)
fiadd
imul
mov
sbb
repz
retf
xor
rcr
mov
and
ins
dec
pop
(bad)
sahf
adc
inc
ja
mov
scas
shl
out
inc
ret
shl
in
push
stos
stc
pop
push
stos
sbb
out
mov
call
in
scas
mov
imul
or
inc
sbb
sub
inc
push
xor
xor
mov
dec
ror
push
and
mov
test
mov
cmp
outs
xor
cld
fdivr
aaa
bound
fisubr
push
jmp
mov
out
retf
mov
xor
dec
jle
test
jle
and
pop
movs
sub
or
cmps
xchg
mov
pop
clc
fcom
xor
cwde
or
cmps
fld
rol
adc
ror
(bad)
or
arpl
inc
aam
push
fwait
mov
or
or
xor
push
scas
stc
or
aam
xchg
mov
xchg
push
push
mov
je
pop
stc
popa
push
and
lock
jl
movs
mov
and
loope
movs
inc
mov
jnp
mov
in
mov
int
imul
movs
push
xor
stos
and
jge
dec
or
in
rcr
or
ins
gs
pop
dec
sub
sbb
retf
sahf
into
ds
loope
stos
dec
(bad)
jle
jle
in
cwde
scas
mov
enter
das
push
fild
fwait
rcr
pop
xor
mov
pushf
(bad)
enter
pop
push
sbb
loopne
mov
mov
sbb
xchg
sbb
add
pop
mov
clc
ins
sbb
in
(bad)
popa
xor
bound
repnz
sar
jle
int3
xchg
jbe
aam
ins
xchg
test
xchg
jae
js
out
jp
cs
jle
xchg
nop
aas
adc
je
push
push
jl
jl
xchg
add
cld
dec
fld
dec
ror
push
(bad)
jmp
and
mov
xchg
push
int
dec
popa
pop
xchg
sahf
inc
push
push
pushf
inc
or
scas
push
add
mov
pop
shl
push
ins
lahf
int
inc
scas
sbb
stos
jb
push
or
hlt
dec
push
or
dec
je
sbb
mov
jge
xchg
pop
mov
sbb
loopne
or
pop
cmp
(bad)
or
mov
sub
cmp
repz
inc
in
adc
xor
mov
lea
mov
cmp
jmp
clc
movs
cs
js
xor
xchg
push
int
shr
xchg
sub
inc
jge
mov
xchg
xchg
loope
and
(bad)
sub
test
jl
(bad)
cmp
sbb
cmp
mov
pop
sbb
mov
jmp
mov
push
inc
adc
xor
or
not
(bad)
mov
mov
pop
add
imul
xor
sbb
iret
add
scas
neg
adc
mov
int
mov
mov
push
mov
add
jp
scas
lods
xchg
inc
lods
jge
dec
sbb
jecxz
(bad)
adc
add
push
xchg
adc
rol
xchg
shl
jmp
js
aas
dec
out
or
cmc
xor
sahf
cdq
cmp
adc
mov
int3
movs
cld
jbe
mov
mov
mov
sub
adc
and
cmp
fsubr
mov
fs
sahf
push
mov
xchg
enter
adc
hlt
ss
jle
cdq
jnp
ja
aad
repz
sbb
mov
hlt
sbb
dec
push
nop
jmp
stos
mov
(bad)
loopne
xor
or
out
inc
iret
popa
mov
xor
or
outs
pop
leave
xchg
nop
test
add
push
ret
dec
repnz
sub
and
adc
mov
pop
jbe
test
cmp
and
daa
cmps
add
pop
mov
mov
mov
daa
mov
repz
lea
ds
test
repnz
pop
xchg
push
push
stos
add
push
mov
repz
cmp
jge
xor
jmp
fnsave
mov
shr
fs
scas
mov
or
imul
jbe
stc
fwait
push
int
xor
lock
mov
pop
add
mov
inc
cmc
lods
les
and
in
sub
add
mov
ja
js
icebp
push
movsx
movs
adc
dec
cmps
int3
stos
out
mov
push
sbb
mov
mov
inc
lea
je
fidiv
cmp
rcl
imul
cmp
mov
adc
(bad)
jmp
cmc
mov
in
sahf
mov
out
xor
pop
sub
outs
jnp
jno
sbb
adc
(bad)
push
xor
lahf
add
jno
sbb
test
sub
inc
pop
pop
stc
imul
ds
fiadd
xor
lods
in
xchg
push
sbb
outs
iret
dec
jle
cmps
cli
mov
push
xchg
les
(bad)
pop
jb
stos
mov
test
frstor
call
jl
pop
test
and
xchg
cdq
data16
mov
fisttp
popf
enter
push
push
rcl
mov
mov
aas
fsub
lea
mov
or
daa
loope
ror
call
cdq
mov
jne
retf
or
clc
std
add
div
imul
cli
xor
push
sub
aaa
inc
add
arpl
xor
fsubr
test
xchg
stos
gs
mov
scas
dec
je
dec
cdq
jmp
fisub
xor
(bad)
repnz
aas
and
inc
cmp
addr16
sbb
mov
cli
cmp
ret
pusha
or
xor
jg
mov
mov
or
sbb
push
pop
and
sbb
ror
pop
outs
jmp
int3
jge
(bad)
cmps
fdiv
adc
push
sahf
push
xor
push
cs
mov
test
adc
xor
sar
push
(bad)
push
sub
les
jo
shr
stos
fcomp
push
push
inc
xchg
adc
mov
sbb
push
cld
inc
xlat
es
add
aas
push
imul
xor
jb
ret
ror
pop
mov
mov
cwde
(bad)
xor
cli
inc
(bad)
lds
mov
in
push
push
mov
dec
aas
mov
or
push
sti
loopne
mov
ja
sub
repz
sub
fcom
or
dec
fwait
and
test
js
mov
mov
cwde
inc
jge
rcl
sub
test
ror
ror
dec
cwde
dec
scas
test
adc
xchg
shl
pusha
add
out
mov
sub
mov
repnz
inc
lods
gs
xor
rol
loopne
push
aad
cmp
(bad)
ret
mov
and
jp
out
in
dec
or
test
jmp
adc
jno
std
mov
mov
cmps
cld
adc
adc
push
popf
es
std
push
es
fistp
fxch
rol
int
daa
cmps
movlps
xchg
outs
arpl
sbb
dec
(bad)
dec
or
and
shl
sub
retf
add
adc
cld
fsubr
add
or
leave
mov
add
in
pop
inc
xchg
jge
add
xchg
enter
pop
jmp
pop
jno
mov
cld
fpatan
in
push
fwait
xor
js
and
fdivrp
lock
sub
fs
(bad)
xchg
or
popa
test
(bad)
ret
(bad)
dec
xor
jp
imul
mov
push
shr
scas
add
push
cwde
cmps
lods
mov
jp
pop
mov
popa
setae
sub
pop
xor
stos
cmps
jno
xchg
imul
fwait
and
cwde
mov
xchg
in
ss
loop
pop
jl
test
cmp
inc
cld
or
pop
sti
cwde
cmc
fisubr
push
sub
test
daa
ret
xor
das
cs
js
jecxz
xchg
xor
das
cs
pop
mov
or
dec
scas
inc
xor
mov
outs
adc
in
jo
jo
shl
or
pushf
jns
xlat
(bad)
xlat
adc
lock
lea
(bad)
(bad)
fisttp
xor
jmp
aaa
lods
dec
mov
sbb
imul
xchg
mov
or
cli
jecxz
movd
jo
pop
mov
dec
mov
fs
ficomp
ja
test
lods
inc
mov
sbb
dec
jb
scas
sbb
cld
std
or
jl
je
aas
cs
mov
call
sub
je
sub
jo
ret
(bad)
ds
ins
mov
nop
je
or
push
push
push
retf
ficomp
das
adc
mov
into
iret
jl
dec
stos
in
adc
pushf
cld
pop
fwait
add
cmp
jae
dec
je
data16
adc
xor
xchg
sar
mov
shl
pop
push
adc
cli
aaa
push
imul
rcl
sar
enter
(bad)
pop
add
fdiv
or
jmp
loope
arpl
dec
jne
push
cld
mov
fist
(bad)
pop
mov
pop
cli
cdq
jo
jbe
sub
xchg
sub
pop
push
pop
iret
stos
pop
mov
icebp
adc
sub
lods
or
adc
loopne
mov
outs
adc
(bad)
jmp
(bad)
enter
int
jae
xchg
pop
pop
pop
inc
mov
lods
xchg
leave
fldenv
mov
imul
push
into
(bad)
retf
scas
add
mov
fldcw
xor
push
or
sub
(bad)
sub
shl
pop
or
ins
mov
cmp
sar
mov
sub
test
ds
push
je
jae
cmps
jecxz
and
ficom
jb
dec
call
sub
push
dec
test
mov
pop
ret
pushf
loopne
add
repnz
jne
loopne
cwde
scas
fcomip
test
clc
and
push
inc
cmps
int
mov
mov
adc
push
mov
in
sti
retf
cmp
xchg
loope
xor
sar
dec
xchg
popf
pop
int
jnp
rcr
adc
loopne
push
pop
ins
pop
and
in
xchg
push
fnstsw
or
dec
mov
push
inc
jp
sub
das
cli
test
lds
fadd
inc
mov
(bad)
push
popa
dec
test
setnp
dec
pushf
in
jge
jmp
rcr
mov
jo
pop
xor
inc
cmp
test
nop
xor
push
out
cmp
out
mov
cmps
dec
mov
or
call
stc
mov
dec
rol
xor
inc
inc
add
add
mov
fs
jbe
and
aas
mov
mov
mov
or
jb
out
push
xchg
in
mov
div
mov
cwde
cmp
int3
pushf
push
push
mov
mov
and
mov
add
push
arpl
jmp
in
icebp
aad
shl
das
and
call
outs
sti
xor
scas
fwait
xchg
push
dec
adc
test
jmp
out
xor
or
outs
fldenv
mov
shl
stos
pop
mov
dec
xchg
repz
dec
js
mov
or
push
xchg
outs
rcr
xor
shr
xor
mov
add
jae
or
bound
cmp
movhps
sbb
lods
div
pop
adc
xchg
mov
jp
in
adc
sub
mov
dec
and
jb
in
mov
ret
pop
xor
dec
cwde
or
adc
ins
aad
hlt
mov
bnd
xchg
mov
lea
inc
or
imul
sub
scas
in
lea
mov
xor
sbb
xor
adc
or
sar
out
outs
pop
in
dec
jns
pop
inc
stc
cld
stos
aad
ficomp
mov
add
jge
xchg
dec
pusha
fimul
call
xor
jae
push
sahf
mov
sub
aaa
div
xor
mov
inc
xchg
lahf
add
xchg
ss
cmp
jle
sbb
inc
or
add
jnp
mov
ss
jb
dec
imul
cli
pop
xchg
xchg
jbe
jmp
popf
mov
popa
xlat
cmp
(bad)
call
fwait
je
cmp
ins
mov
sub
int3
in
cld
int
loopne
(bad)
sub
pop
jge
addr16
sbb
imul
mov
loopne
mov
out
xor
push
rcl
inc
add
sar
inc
push
es
in
push
inc
sti
shr
push
mov
and
mov
jmp
ss
sar
push
sti
into
jg
ret
add
fdivr
add
mov
out
loopne
pop
movs
xor
icebp
mov
adc
ror
or
out
test
pop
push
(bad)
ficomp
ja
cli
lods
pop
xchg
dec
out
lods
fwait
xchg
adc
enter
ins
jae
and
psrad
ret
ins
add
mov
cmp
arpl
clc
scas
push
dec
aam
aas
cmp
mov
repnz
xchg
jmp
ja
cmps
xor
scas
lea
xchg
mov
je
repnz
cmc
mov
push
nop/reserved
movs
gs
inc
iret
pop
lea
adc
dec
aam
lock
out
push
outs
cmp
je
je
xor
jl
mov
xor
jnp
(bad)
and
nop
repnz
and
dec
inc
cld
inc
js
push
inc
out
mov
fsubr
pop
xchg
xchg
jmp
xor
arpl
and
addr16
and
cmp
or
int3
or
xor
cmp
mov
jae
(bad)
call
call
add
dec
ret
mov
add
mov
je
push
fimul
out
dec
cmp
push
stos
xor
in
cmp
sub
mov
div
inc
mov
shl
jo
sar
pusha
movs
xchg
repnz
jl
nop
test
std
and
xor
sbb
sub
cli
push
jb
mov
ror
mov
cdq
add
mov
ret
sbb
jno
aad
pop
nop
dec
stos
inc
jb
dec
js
ret
arpl
xor
retf
addr16
je
sub
movs
mov
dec
mov
fild
dec
ds
fs
sub
jne
stc
(bad)
fdivrp
fld
std
mov
cmp
ds
js
add
sub
mov
inc
int
not
dec
sti
test
mov
cmp
stos
cdq
aaa
bound
mov
in
out
and
adc
dec
sub
hlt
mov
retf
mov
jb
pop
mov
jmp
add
dec
xchg
repz
in
pop
js
or
test
in
es
hlt
sbb
in
pop
outs
or
adc
fwait
push
mov
and
repz
js
test
jp
adc
dec
dec
xor
sub
dec
fwait
mov
mov
inc
arpl
pop
pop
sub
daa
pop
or
and
dec
mov
icebp
ss
imul
sub
adc
scas
cmp
fistp
or
mov
jg
(bad)
test
push
lods
xchg
(bad)
mov
cmp
mov
jmp
mov
call
lea
ret
dec
adc
and
push
lds
cli
jmp
js
ror
inc
sub
loop
pop
jp
sbb
mov
ja
pop
fcomp
fsub
pop
mov
fisubr
call
mov
sub
mov
sub
or
fild
iret
push
or
nop
or
xchg
dec
lds
add
imul
test
xor
loopne
cmp
clc
mov
mov
adc
outs
sbb
adc
bnd
jnp
jno
push
push
ss
cmp
or
xchg
daa
cmp
pop
mov
pop
jl
xor
loopne
inc
push
out
js
and
cdq
aam
retf
shl
retf
lods
mov
pop
ret
xor
leave
mov
(bad)
push
add
lods
aaa
lods
mov
xchg
xchg
rcr
cmp
mov
xchg
add
mov
mov
xchg
inc
push
and
lea
mov
push
ins
stos
shr
mov
retf
jmp
adc
pop
jo
mov
ret
repnz
movs
sar
sbb
inc
xor
ret
cmp
mov
outs
(bad)
repz
out
sbb
mov
pop
cmc
not
mov
bound
loop
sar
imul
dec
(bad)
daa
push
cmc
add
push
add
popa
addr16
test
jge
mov
dec
push
loope
mov
fld
repnz
push
mov
rol
data16
test
add
push
lds
cmps
xor
(bad)
in
push
inc
adc
js
les
pop
fs
scas
dec
je
push
loopne
shr
iret
out
or
stc
lock
jno
cdq
iret
cwde
(bad)
mov
scas
nop
ja
fsub
in
inc
ret
rol
das
(bad)
loope
sub
test
aad
push
(bad)
pop
mov
pop
rcr
cld
in
iret
cli
pop
retf
dec
xchg
int3
hlt
add
push
stc
inc
cli
sub
push
add
dec
or
lods
fistp
hlt
and
pusha
add
pushf
mov
ret
and
pusha
ror
mov
lock
sub
add
inc
mov
add
aas
fiadd
call
cld
mov
adc
pop
push
cld
sub
jp
mov
xchg
inc
fucomi
mov
mov
ins
xchg
fst
mov
mov
es
sbb
clc
cmp
mov
or
sahf
fldcw
adc
inc
aas
cmp
cmp
hlt
pop
jno
and
cmps
lods
pop
mov
dec
xchg
movs
mov
sti
pushf
fs
dec
outs
loopne
add
test
ret
out
push
int
jo
xchg
jae
cmp
fwait
mov
hlt
test
xchg
jb
(bad)
imul
mov
or
jmp
mov
(bad)
pop
fbld
sub
ss
retf
test
sub
popa
ret
gs
fadd
mov
mov
fbld
sbb
repz
cld
das
cmc
(bad)
iret
adc
stc
dec
and
mov
(bad)
in
fadd
fbstp
mov
jge
jl
jmp
int3
cli
jecxz
pop
mov
mov
dec
mov
dec
xchg
out
inc
iret
fwait
cld
inc
cs
pop
push
ins
int
cmps
push
xchg
mov
jae
in
cmps
out
cmp
loope
sbb
stos
xor
sub
scas
dec
mov
mov
out
stc
int3
xor
xchg
sbb
in
test
sbb
inc
adc
imul
repnz
xor
movs
and
in
jecxz
call
jg
push
jl
mov
mov
iret
mov
lock
je
add
ds
cmp
call
adc
lods
jbe
jae
fwait
rol
jb
pop
xlat
or
jns
scas
outs
push
xchg
sbb
loope
dec
mov
mov
test
push
push
adc
shr
mov
inc
push
jp
pop
ficom
add
sub
nop
stos
into
repnz
or
adc
test
sahf
aas
cld
jmp
inc
inc
inc
cmc
lods
pushf
and
jp
sbb
inc
data16
ss
stc
xchg
iret
sbb
xchg
adc
or
dec
sbb
sar
xchg
(bad)
movs
push
mov
add
int
jle
inc
pop
add
mov
or
mov
sub
sub
in
dec
movs
or
ret
xor
or
mov
mov
mov
and
inc
popf
adc
gs
or
xchg
cmp
int3
in
test
xchg
sti
fs
add
data16
test
ds
lea
data16
xor
cmp
sbb
lahf
popa
xchg
repnz
pop
imul
and
cmp
sub
test
movs
and
jmp
ficomp
jl
cmp
jno
push
push
sbb
pop
in
push
push
jb
ret
push
fisttp
es
mov
inc
std
pop
call
pop
sar
mov
fs
mov
test
popa
sti
pop
out
mov
sub
into
scas
adc
xor
aad
xchg
es
mov
test
and
pop
or
mov
jno
pop
mov
pop
sbb
fmul
aaa
mov
cmc
adc
popf
repnz
dec
aam
push
dec
jg
jg
iret
xchg
pop
add
dec
pop
xchg
fistp
setl
dec
jns
pop
gs
sti
cld
lea
fld
inc
(bad)
retf
sbb
push
pop
out
xor
adc
ds
in
or
xor
mov
pop
dec
jnp
dec
add
enter
loopne
ret
mov
dec
scas
fcomp
sub
aad
shl
fs
loopne
cld
inc
and
jb
idiv
icebp
movs
mov
sar
loopne
pop
ins
cmp
ret
out
cmp
mov
mov
cmc
xor
push
ss
push
repnz
push
pop
push
aaa
pop
cmp
mov
ret
adc
call
iret
mov
adc
loopne
out
cmps
push
in
jecxz
test
sti
xlat
lods
xor
mov
xlat
pop
cmp
(bad)
sub
cmp
mov
cmc
or
mov
add
mov
scas
bound
rol
imul
data16
imul
out
int
fmul
adc
add
mov
sbb
loop
mov
rcl
in
mov
js
mov
scas
shl
fiadd
ins
sub
nop
test
repnz
xor
xchg
inc
xor
cwde
add
xor
mov
cdq
lea
cmps
ins
adc
cld
pop
pop
jle
(bad)
xor
push
lds
or
loop
mov
(bad)
inc
or
jp
mov
ins
rcl
adc
xor
dec
cmp
inc
ret
mov
xor
test
inc
stos
mov
cdq
inc
out
test
or
test
xor
or
cdq
xchg
xchg
repz
mov
pop
pushf
jmp
div
xor
inc
xchg
sbb
and
(bad)
adc
mov
mov
mov
mov
inc
pusha
add
addr16
popf
and
js
div
or
std
sbb
add
loope
ins
bound
dec
xchg
fcmovnu
sbb
add
ret
dec
je
inc
sub
jae
push
ret
or
ds
sbb
aaa
lds
pushf
imul
and
jmp
fstp
push
and
xchg
ins
shl
mov
xor
ins
sahf
hlt
jg
xchg
imul
fstp
jns
retf
jmp
mov
push
std
mov
xor
sti
mov
imul
mov
or
call
shl
and
aad
push
jbe
inc
nop
mov
mov
and
xor
jmp
add
(bad)
out
mov
mov
js
aaa
jne
xor
in
loope
loop
push
cmc
inc
(bad)
mov
in
retf
ss
mov
sahf
pop
lods
sbb
repz
cld
xchg
mov
mov
pop
fimul
call
test
call
fldenv
sub
aam
test
aaa
jecxz
inc
shl
jl
arpl
repz
jmp
in
xor
xlat
(bad)
cmc
jno
or
leave
xor
retf
in
cmps
test
addr16
(bad)
push
je
dec
int
sbb
pushf
loop
cmp
push
lods
and
mov
pop
ja
int3
sub
pop
push
rol
jne
dec
mov
adc
mov
in
jl
pop
ret
jmp
cmp
ds
lods
(bad)
push
popf
ins
jp
(bad)
lea
pop
das
fs
mov
mov
call
mov
scas
mov
jne
jo
push
scas
ins
fcmovnbe
jae
and
push
(bad)
repz
xchg
adc
mov
inc
pop
ror
retf
push
aam
cdq
cmp
add
sbb
add
fdiv
mov
xor
stos
pop
repnz
fild
daa
xor
sbb
cs
rcr
jge
mov
test
rcr
cmp
inc
or
std
and
jle
aam
mov
jne
sub
scas
jb
clc
fild
xor
mov
aaa
cmp
outs
push
cmp
mov
mov
out
pop
cmp
sbb
dec
ror
std
add
push
xchg
push
mov
jnp
pop
mov
add
sti
ins
jmp
loope
mov
cmp
pusha
xlat
shl
jno
jmp
test
pop
mov
inc
gs
add
pop
nop
icebp
and
cmc
outs
pop
and
xchg
mov
arpl
sbb
scas
pop
aas
lods
pop
push
retf
mov
jmp
lods
bound
pop
and
add
leave
rcl
sub
mov
fwait
cmp
in
or
fmul
clc
loopne
int3
dec
adc
adc
in
lods
dec
popa
call
adc
pop
pop
(bad)
push
mov
add
fistp
scas
xlat
push
(bad)
int
fcomp
into
jae
add
mov
pop
lods
(bad)
jg
xchg
mov
mov
bound
sbb
std
cmp
pop
sbb
sbb
xor
popa
pop
and
inc
retf
sbb
jbe
fwait
jno
mov
popf
fcmovu
jg
loopne
outs
inc
inc
fild
bound
ja
dec
retf
mov
jo
ror
add
cmp
dec
cmp
xor
aad
jp
nop
mov
test
sbb
aad
call
mov
sbb
stos
mov
pusha
cmp
xor
add
outs
pushf
push
sbb
mov
enter
shl
mov
mov
mov
mov
leave
mov
mov
cwde
push
retf
mov
cwde
jnp
sbb
loope
fimul
ror
mov
mov
mov
pusha
xor
jg
mov
push
sahf
jmp
or
adc
jnp
out
mov
push
jle
call
hlt
and
or
pop
xor
sbb
inc
and
aam
sar
int
icebp
rcl
xor
xchg
and
loopne
cmp
pop
nop
push
pop
mov
adc
pop
and
outs
mov
dec
lock
loope
jae
scas
shl
pop
push
or
dec
mov
or
dec
mov
mov
mov
mov
sub
in
and
jg
inc
repz
sbb
jp
adc
fucomip
out
ficomp
fstp
(bad)
loop
data16
lods
in
sub
pop
in
sbb
pop
jge
popa
push
cmps
sbb
dec
sar
stos
sahf
loope
push
mov
pop
sahf
scas
xchg
and
retf
cmps
mov
cmps
xor
push
sbb
fs
jne
xlat
hlt
mov
mov
into
stos
mov
retf
ins
aam
xchg
out
icebp
xchg
and
mov
jmp
cmps
mov
ins
loope
dec
adc
retf
xchg
cmp
or
pop
(bad)
mov
pop
test
in
mov
aaa
ret
(bad)
jno
out
repnz
sbb
add
and
fs
xchg
mov
mov
repz
sub
mov
jno
xchg
das
mov
push
adc
adc
or
fisttp
stos
mov
out
jl
jns
mov
sub
push
gs
test
rcl
or
jmp
test
out
call
add
add
leave
icebp
cld
cdq
cdq
xor
out
imul
imul
push
or
loopne
inc
ror
mov
pop
cmp
push
dec
mov
sub
ds
dec
stos
cmc
in
xchg
xor
popf
fadd
and
xor
mul
pop
cmp
dec
push
push
icebp
jp
or
and
aaa
push
repnz
fiadd
push
(bad)
neg
mov
sbb
adc
fidiv
ins
int3
ret
(bad)
inc
jp
les
push
fs
and
int
loop
push
addr16
lock
lods
xchg
frstor
mov
jg
sahf
stos
xor
inc
and
and
or
sbb
add
sti
adc
repz
push
std
xor
int3
jbe
lods
cmp
movs
in
aas
mov
lds
les
or
mov
pusha
jo
inc
fist
adc
or
mov
enter
out
fild
push
jmp
int3
sar
jecxz
push
scas
mov
(bad)
scas
fsub
push
popf
out
inc
dec
dec
arpl
sub
inc
imul
ss
cmp
movs
cmp
ret
xor
xchg
mov
jmp
fiadd
test
dec
mov
push
out
xchg
pop
push
imul
cmp
push
xor
mov
pop
mov
aas
aam
int3
sub
icebp
mov
pop
jbe
xchg
pop
jns
sbb
mov
clc
(bad)
mov
imul
jge
fist
jle
xchg
sub
retf
mov
sti
movs
mov
mov
sub
mov
xchg
movs
jp
fwait
cmp
cld
push
subps
out
and
sub
retf
jnp
sar
cmp
call
mov
cmp
cdq
push
jmp
jmp
jle
lds
adc
xor
adc
jno
jns
sti
mov
push
jmp
rcl
add
popf
lock
fdivr
push
gs
pop
mov
mov
push
daa
jno
lock
repnz
jmp
cdq
push
jmp
fidivr
adc
fldcw
mov
xchg
aad
sub
push
cmps
(bad)
adc
sbb
(bad)
rcr
or
add
out
jbe
repz
fst
sub
pop
cmp
fwait
mov
xchg
ins
popf
int
ins
sbb
int
adc
adc
adc
loope
cdq
mov
dec
jmp
adc
retf
clc
popf
ret
push
retf
stos
add
in
push
mov
ins
fmul
cmp
jae
stos
retf
shl
or
test
or
mov
std
push
and
xor
sti
scas
dec
addr16
retf
test
inc
ds
mov
ja
adc
pusha
iret
mov
inc
xor
xchg
and
dec
pop
sbb
nop
setae
pop
sbb
jns
pop
jmp
leave
(bad)
push
push
scas
jae
jp
inc
cmp
dec
stos
(bad)
add
push
sub
xchg
shr
and
lea
ja
inc
inc
(bad)
inc
or
or
adc
push
dec
mov
repnz
mov
stc
lods
cmps
cdq
add
mov
movs
cmp
inc
inc
das
test
dec
sti
in
jno
mov
xor
mov
loop
pushf
fmul
inc
sub
pop
sub
fsub
(bad)
into
(bad)
repz
sbb
sbb
inc
pop
push
mov
ins
adc
sub
and
xor
leave
mov
inc
inc
adc
scas
gs
test
into
push
cmps
(bad)
and
retf
push
cmp
js
jl
pusha
and
sar
pop
sahf
addr16
hlt
aas
jecxz
cs
xchg
push
mov
pop
cmp
movs
loop
clc
(bad)
and
ror
mov
std
pushf
dec
fwait
pop
and
xchg
es
push
(bad)
cmc
and
cmps
xchg
fsubr
mov
aam
into
mov
repnz
inc
in
ja
xchg
sahf
sub
mov
push
cdq
adc
jl
or
push
dec
add
jae
push
and
fs
add
sahf
jg
(bad)
push
or
cmps
cmp
retf
xchg
(bad)
xchg
pusha
push
rol
pop
cld
test
std
pop
arpl
inc
imul
pop
jne
cmp
shl
mov
add
in
out
inc
cld
stos
aas
(bad)
ds
inc
aad
outs
push
sbb
adc
xchg
xchg
push
aam
or
lea
sbb
cmps
mov
mov
xchg
call
mov
loope
cmp
adc
dec
aaa
fcmovnbe
jno
in
dec
pop
cmc
push
test
mov
sbb
push
lods
in
ins
iret
movs
mov
inc
jnp
mov
in
hlt
inc
std
icebp
add
stos
fmul
rcl
(bad)
push
stc
sbb
mov
enter
sbb
mov
(bad)
mov
test
pushf
sbb
adc
cmp
push
lahf
and
adc
imul
add
cwde
inc
mov
inc
mov
cmps
jge
xchg
xor
(bad)
ins
pop
mov
xor
hlt
outs
ret
sub
push
jns
xchg
in
enter
test
clc
xchg
nop
dec
sub
pop
rcr
cmp
ds
mov
es
in
push
mov
sub
mov
lock
hlt
dec
jo
or
sub
mov
adc
mov
setno
icebp
rcr
mov
mov
xchg
sub
xor
xchg
sub
retf
cmps
enter
sub
and
xchg
movs
dec
push
mov
xlat
lods
ror
xchg
fbld
mov
lahf
into
jl
mov
push
pop
pop
mov
push
lods
iret
movs
sbb
ins
jno
aaa
jmp
aad
out
add
push
inc
xchg
(bad)
cmp
aad
clc
add
and
jne
ret
pop
sbb
scas
xchg
xor
in
cmp
pop
dec
or
ins
cwde
mov
dec
shl
inc
push
mov
push
or
scas
ins
push
mov
out
aas
jle
ins
sbb
hlt
cmps
bound
inc
dec
dec
pop
inc
jne
fcmovu
push
not
loopne
outs
iret
pop
cmc
xchg
cmp
xor
inc
dec
jmp
fdiv
ins
xor
dec
hlt
and
mov
jno
fs
cs
xor
in
imul
mov
out
xchg
(bad)
mov
cmp
sub
sbb
ja
cli
xchg
stos
or
outs
jecxz
and
push
(bad)
mov
rcr
pop
ins
sahf
dec
push
xor
loopne
jne
ds
(bad)
fwait
pop
add
or
mov
scas
in
push
xchg
ds
fild
stos
scas
sbb
cdq
cmp
mov
dec
loope
inc
inc
pop
adc
mov
lods
dec
mov
and
jbe
pusha
call
mov
pop
fdivrp
xchg
(bad)
das
pop
shr
jne
popf
test
in
(bad)
outs
mov
add
and
mov
pusha
inc
xlat
push
mov
add
enter
push
pop
sub
fmul
imul
ds
pop
inc
inc
xor
das
pushf
inc
into
call
loopne
or
arpl
test
cmp
inc
loopne
mov
mov
in
scas
popf
outs
jg
leave
cmc
push
push
in
lds
mov
add
sbb
fnstenv
rol
xchg
ret
sub
in
and
les
add
mov
cli
cmp
int3
sbb
push
hlt
cmp
out
xor
jmp
fidiv
gs
dec
mov
cmp
mov
repnz
push
cmp
xor
scas
push
outs
out
sub
icebp
inc
xor
(bad)
fcomi
sti
call
sub
popa
sbb
mov
ret
xor
jns
jo
xor
in
jmp
mov
xor
or
test
inc
jecxz
sub
xchg
ret
push
icebp
dec
push
inc
mov
add
add
pop
pop
dec
aas
clc
jno
cmp
and
mov
pop
stc
call
and
push
dec
mov
mov
cmp
xchg
nop
int3
pop
add
int
not
mov
add
xchg
cmps
pop
mov
gs
out
lock
mov
cmp
das
mov
mov
daa
sbb
stos
ja
pop
out
ret
stos
sahf
cli
xchg
push
cmps
lods
addr16
arpl
mov
and
push
bound
popa
jno
sub
push
mov
dec
popf
dec
pop
and
sahf
inc
sahf
das
lds
push
sub
jmp
mov
sbb
jle
push
xlat
mov
sub
repnz
add
fld
push
rol
test
in
sti
in
cmp
adc
je
cmp
outs
les
cli
aam
push
mov
popa
stos
push
dec
icebp
sbb
rcr
imul
pop
not
mov
inc
jno
sub
retf
dec
pop
add
pop
adc
cwde
xor
inc
mov
addr16
mov
sub
imul
(bad)
stos
cli
mov
ins
retf
int3
clc
ins
cdq
imul
xor
ja
test
aaa
jne
outs
mov
sbb
and
add
push
pop
sub
mov
in
sub
adc
call
lods
push
clc
clc
jb
pop
cld
fdiv
pop
jne
(bad)
sbb
jnp
call
jnp
mov
dec
in
dec
out
inc
jmp
es
mov
aaa
mov
iret
mov
sbb
das
jne
(bad)
mov
add
dec
in
and
xchg
repz
sbb
add
int
add
daa
sbb
inc
ins
test
cli
sti
stos
and
lds
add
cmps
inc
mov
pop
sbb
sub
push
inc
in
pop
les
(bad)
jno
gs
stc
mov
adc
mov
add
adc
popf
adc
sub
dec
cdq
inc
clc
mov
xchg
stos
and
int
test
pop
push
sahf
or
(bad)
(bad)
cmp
daa
sbb
aam
jae
(bad)
adc
xchg
dec
gs
ins
ss
loope
xchg
loope
cdq
daa
mov
cli
or
add
fistp
lahf
xchg
test
movs
fmul
(bad)
jmp
lea
fild
call
cld
xor
sub
adc
inc
jnp
and
jmp
mov
and
stos
in
xchg
sub
mov
xor
(bad)
loopne
and
aaa
cmps
sahf
inc
add
test
sub
push
jo
adc
and
sub
call
jno
xchg
ins
out
add
inc
mov
ret
int3
sub
dec
dec
xlat
mov
add
daa
push
pushf
push
call
mov
adc
add
jb
and
xor
in
pop
(bad)
mov
je
ret
fs
or
xchg
(bad)
xchg
push
or
stos
daa
hlt
loop
je
js
popf
sbb
pop
fcom
pop
cs
or
(bad)
aam
(bad)
call
mov
jb
enter
js
rcl
ret
inc
sbb
pop
lock
sti
pop
cli
test
aad
sbb
xor
jl
mov
and
sbb
mov
ffree
jle
inc
xor
(bad)
pop
pushf
idiv
xchg
aam
adc
cmp
leave
and
jmp
cwde
and
leave
cmps
xor
xor
sar
adc
test
cvtdq2ps
push
ja
mov
sbb
jg
outs
rol
jne
mov
cmps
jge
jno
shr
sbb
xchg
in
fs
stos
xor
adc
xchg
dec
fxch
mov
inc
jno
cmp
add
fmul
inc
sub
fs
inc
sbb
fdivr
dec
movs
sti
(bad)
push
lods
rcr
mov
out
sbb
rol
fwait
mov
jge
mov
dec
sti
adc
loopne
ret
push
lods
xchg
and
mov
cmp
js
xchg
jp
cmc
pop
push
out
push
push
cld
xor
lea
pop
ret
cmp
daa
sti
push
stc
mov
push
add
rcr
mov
add
mov
mov
fld
inc
sbb
push
lock
jp
pushf
inc
xor
sub
idiv
add
jne
outs
rcr
push
ds
or
imul
pop
add
out
sahf
(bad)
in
aam
std
jbe
fnstsw
xor
lds
in
cdq
sbb
mov
cld
mov
das
cmp
and
inc
out
push
sub
push
cmps
jle
retf
jp
jl
xor
jnp
mov
inc
mov
add
lds
sbb
hlt
mov
(bad)
pop
call
fisub
jb
jb
mov
add
mul
ret
movs
loop
das
pop
lea
fs
mov
push
mov
pop
and
sub
cwde
cmc
push
shr
scas
cmps
test
cmp
add
jno
xor
dec
pushf
popw
mov
inc
pushf
ins
retf
ins
mov
xchg
fdiv
int
or
fcomi
out
imul
push
xchg
cwde
call
push
and
mov
push
pop
inc
call
inc
pop
pop
shl
and
cmps
adc
cmp
mov
adc
mov
popa
loopne
xchg
xchg
into
out
pop
and
test
cli
repnz
mov
and
dec
mov
mov
xor
push
imul
pushf
mov
sub
mov
inc
lea
pop
fs
leavew
and
dec
das
daa
xchg
or
jo
jge
xor
daa
fnstcw
test
jp
mov
rcr
add
in
out
xor
in
arpl
pop
stos
xchg
sub
aad
aam
in
das
push
pop
pop
aam
iret
add
fstp
sbb
inc
mov
inc
pushf
js
cwde
adc
mov
mov
xor
addr16
out
xor
jnp
cs
dec
js
movs
xor
lods
imul
mov
adc
je
xlat
fcom
pop
pop
test
and
(bad)
adc
sahf
sbb
hlt
xchg
(bad)
pop
xchg
jmp
shl
inc
retf
xor
mov
dec
ss
in
ret
cmps
aaa
mov
mov
out
imul
shl
scas
and
push
adc
or
dec
add
pop
stos
daa
(bad)
and
pop
imul
mov
fst
loop
(bad)
jge
or
push
pop
mov
inc
pop
jge
loop
pop
push
inc
stc
xchg
ds
stos
aam
push
out
cmp
rcl
(bad)
and
push
push
icebp
adc
arpl
mov
in
push
movs
mov
jne
adc
ret
push
xor
gs
cmp
nop
pop
add
ret
lock
and
push
es
fstp
and
arpl
jmp
jae
push
aaa
das
lods
jo
call
mov
inc
call
vmaxps
leave
and
call
push
mov
lds
cmp
stos
clc
inc
mov
inc
shl
in
stc
pop
iret
xchg
cdq
(bad)
test
js
push
les
cld
xor
pop
stos
push
rcl
add
repz
sbb
sub
sahf
mov
sbb
cmps
jmp
mov
xchg
or
repz
(bad)
jb
int
cmp
pop
scas
xlat
jne
nop
jg
(bad)
movs
adc
xchg
add
popf
add
or
mov
rol
mov
inc
(bad)
int3
retf
inc
xchg
adc
lods
sbb
cmps
cmp
mov
jle
sub
sbb
xor
mov
shl
arpl
leave
mov
mov
xchg
movs
ror
mov
arpl
addr16
add
sbb
ret
xchg
(bad)
lock
xor
mov
mov
adc
mov
repnz
movs
clc
push
in
mov
sbb
scas
repnz
je
shl
shr
cmps
sub
inc
and
and
aas
xor
mul
and
mov
dec
or
xchg
sub
scas
rcr
fs
call
pop
pop
xchg
mov
mov
sub
cs
jle
test
cmp
mov
inc
add
inc
inc
or
pop
cmp
cmp
mov
sahf
repnz
or
ins
push
jmp
repz
popf
jge
inc
dec
or
cmp
sub
inc
ret
fld
add
push
(bad)
fnstsw
jo
rcr
scas
movs
int3
sub
bound
and
mov
jge
xlat
repz
sbb
sbb
gs
call
pop
cmp
sahf
ins
sub
push
pop
mov
jno
lahf
mov
xor
movs
sar
idiv
mov
xor
lahf
into
xor
cmp
imul
or
out
sub
pop
mov
movs
fisubr
addr16
or
movs
not
(bad)
fist
or
mov
daa
cdq
aad
int
sub
aaa
stos
adc
imul
pop
ret
add
outs
loope
out
mov
fnstcw
mov
xor
xchg
sti
addr16
imul
push
xor
adc
mov
sub
mov
jmp
idiv
xchg
test
pop
outs
cmp
sahf
and
loope
add
pop
mov
mov
outs
sar
jo
mov
cmp
sti
pushf
mov
ins
mov
jmp
(bad)
scas
add
inc
inc
fsubr
call
ds
(bad)
push
ficom
or
pushf
cli
inc
push
adc
add
pop
mov
mov
std
mov
int3
mov
xchg
repz
dec
sub
cdq
idiv
mov
(bad)
mov
and
or
or
adc
add
jmp
fs
retf
cld
ja
not
movs
mov
outs
rcl
mov
and
push
or
cmp
mov
out
dec
xchg
aaa
add
or
movs
pop
int
call
xor
ret
jno
fst
and
adc
loope
(bad)
sbb
cld
pushf
xchg
scas
push
add
and
loopne
push
inc
xor
out
sbb
mov
inc
sub
out
mov
jmp
add
adc
mov
stos
mov
xor
mov
cmc
das
inc
mov
mov
pop
aad
iret
mov
add
xor
xchg
popa
jle
(bad)
fcmovbe
add
into
jge
push
arpl
xor
in
push
test
xchg
lahf
cli
pop
cmp
pushf
fiadd
inc
xor
inc
popa
xchg
call
js
sbb
cli
mov
inc
mov
push
fldenv
test
or
mov
jo
dec
das
mov
fmul
mov
push
fcmovnu
inc
icebp
vpaddusb
and
lods
std
in
sub
xchg
xor
pmaxsw
sbb
sbb
inc
xor
ror
loopne
xchg
mov
cmc
popf
retf
mov
repnz
ds
fdiv
or
(bad)
out
sub
pop
inc
test
pop
jge
xor
fmul
cmps
xchg
xor
push
mov
cmp
add
jp
pop
inc
mov
inc
aaa
mov
or
adc
cmps
jecxz
test
test
mov
sub
leave
stos
xor
cmp
and
ja
stos
push
add
xor
mov
push
cmp
test
jmp
pusha
cmc
sub
inc
fldcw
sahf
(bad)
es
sbb
mov
dec
popa
xor
fadd
pop
adc
mov
xchg
clc
sahf
jl
rcl
xor
inc
out
stos
sub
xchg
adc
dec
pusha
mov
ret
push
retf
in
hlt
into
and
push
sti
imul
inc
test
jecxz
push
inc
pop
fnstcw
movs
movs
mov
or
jo
movs
mov
push
mov
and
jo
lock
jns
test
add
out
imul
out
gs
pushf
pushf
inc
stos
pop
jl
adc
addr16
pushf
rcr
inc
inc
mov
jl
ins
push
or
in
pushf
sbb
ins
cmp
data16
push
in
pushf
dec
aaa
in
push
cs
pop
push
ins
push
jmp
cmp
mov
mov
pop
movs
aam
lea
jmp
clc
(bad)
push
fst
(bad)
(bad)
lock
mov
mov
cmp
sub
xchg
sar
fdivrp
arpl
xchg
dec
ss
mov
fst
push
cld
ja
sbb
mov
cmps
lahf
mov
add
cmps
call
mov
popa
mov
dec
mov
adc
sbb
int
jb
clc
iret
mov
jb
mov
cmp
js
gs
mov
movs
sbb
fs
xchg
mov
xor
ja
lock
sub
addr16
inc
and
pop
fwait
ds
ins
out
pop
or
sti
jp
mov
int3
pop
out
mov
mov
arpl
(bad)
fbstp
mov
jecxz
or
inc
icebp
(bad)
jns
test
inc
inc
(bad)
stos
cmps
or
cdq
pop
std
test
rol
cld
lahf
fs
icebp
jbe
imul
(bad)
sbb
dec
sub
sbb
jne
push
jle
mov
(bad)
sbb
pop
in
sbb
sub
ret
movs
sahf
(bad)
mov
add
or
clc
clc
sbb
pop
adc
mov
aam
loop
cmp
ins
push
pop
add
aas
leave
je
sub
hlt
add
cmp
aad
sub
out
push
je
popf
mov
dec
mov
ret
das
aas
aam
jg
lahf
adc
in
lea
xchg
(bad)
xor
mov
xchg
add
rcl
jmp
pop
loopne
mov
cmp
cmps
(bad)
aam
add
mov
or
or
push
mov
arpl
call
in
cwde
inc
adc
int
stos
repnz
push
inc
cmc
push
push
lahf
jp
(bad)
(bad)
dec
les
ins
jno
sub
hlt
mov
(bad)
scas
retf
fwait
mov
jnp
add
shl
xchg
popf
dec
bnd
add
pusha
jecxz
fisub
cmp
jge
jns
ret
mov
pop
movs
pusha
inc
call
loop
push
jb
test
mov
int3
std
sbb
inc
xchg
xchg
test
ret
mov
or
sbb
xor
add
(bad)
jne
fstp
(bad)
push
push
lahf
jmp
add
repnz
and
pop
xchg
pop
dec
imul
bound
jmp
movs
stos
adc
stos
(bad)
mov
outs
in
ret
out
loop
mov
nop
cdq
je
dec
iret
push
iret
mov
pop
sbb
jne
(bad)
mov
sbb
js
lea
mov
inc
jecxz
int
repnz
jnp
xchg
adc
ud1
fisubr
jecxz
fiadd
cmps
xor
lods
jo
or
jp
sbb
push
mov
push
mov
(bad)
jl
in
jmp
test
daa
hlt
adc
arpl
jae
inc
push
arpl
(bad)
sbb
xchg
jg
jbe
dec
and
lahf
scas
dec
jns
mov
pop
sbb
pop
iret
and
je
sahf
add
xor
and
xchg
adc
out
loopne
test
pop
pminub
arpl
aad
sar
add
cdq
and
in
add
movntps
mov
fdiv
mov
ds
mov
or
adc
cmp
mov
pusha
pusha
pop
and
jmp
pop
mov
mov
repz
sti
bound
out
in
pop
daa
push
add
js
inc
push
xchg
gs
(bad)
and
mov
stc
repnz
int3
mov
mov
je
(bad)
int
loopne
(bad)
aas
fwait
(bad)
int
xor
int
lods
push
sahf
ds
and
xor
xor
leave
xchg
retf
mov
ins
ins
das
test
cmps
pop
dec
jo
movs
sub
pop
and
adc
je
cmp
sub
jne
mov
dec
and
cld
inc
ja
in
rcl
and
fnsave
mov
adc
mov
adc
jno
sahf
stc
sub
ja
push
out
loope
fimul
in
test
jne
ror
jg
adc
push
adc
pusha
ss
pop
lods
jg
and
cmp
outs
or
bound
cld
call
xor
cmp
mov
mov
inc
ror
adc
outs
xchg
into
inc
pop
inc
lea
lahf
push
dec
retf
and
stos
dec
dec
aam
push
inc
int3
sbb
dec
cmp
aas
mov
jmp
fwait
data16
mov
inc
lea
aad
fsubr
xchg
cli
jnp
ss
int3
jg
cmp
in
mov
mov
dec
xchg
dec
mov
mov
lea
xor
xor
pop
pop
jnp
stc
leave
xor
add
push
dec
lock
inc
cdq
sub
leave
xchg
aaa
jl
test
inc
into
pusha
inc
in
inc
and
shl
xor
cmp
mov
jp
mov
cmps
popf
adc
mov
adc
push
push
xor
sbb
mov
pusha
adc
add
inc
test
and
jo
pop
sbb
cmp
xchg
pop
inc
into
ss
jmp
test
and
fdiv
call
mov
mov
cs
movs
fidiv
popf
mov
sbb
cdq
push
out
(bad)
xlat
mov
inc
mov
mov
cmp
aaa
fadd
inc
sub
jns
int3
cmp
in
or
mov
lea
in
or
dec
stos
push
sahf
jo
or
rol
or
mov
movs
mov
inc
inc
leave
adc
jnp
fimul
xlat
lahf
inc
mov
sub
cmp
mul
and
call
add
out
into
(bad)
mov
xchg
add
cli
test
jnp
jns
cmp
movs
dec
cmp
sahf
jecxz
or
(bad)
jecxz
xor
inc
lods
(bad)
xor
jo
ss
sbb
loop
add
pushf
push
inc
loope
inc
mov
dec
fild
(bad)
in
nop
(bad)
lock
loopne
cld
or
and
(bad)
push
mov
or
cmp
push
test
pop
adc
fwait
out
ja
mov
and
(bad)
test
pop
pop
xor
shl
add
and
lods
cmps
retf
icebp
dec
in
mov
lods
cmps
mov
fbld
fisttp
xchg
fcmovnu
mov
inc
add
jnp
dec
inc
int
(bad)
or
pop
inc
stc
or
push
sbb
sbb
imul
mov
ror
mov
mov
mov
adc
shr
mov
push
push
pushf
sub
popa
jno
mov
mov
jnp
push
arpl
dec
lea
cmp
addr16
nop
push
xor
jle
ret
repnz
pop
int
(bad)
jle
sti
and
aas
add
repnz
fcmovb
vsubsd
movs
cmp
sbb
jbe
outs
pop
ins
in
pop
into
paddsw
sub
sbb
cli
mov
push
jg
jl
fisttp
pusha
and
xlat
add
dec
inc
xor
mov
pop
push
xchg
mov
sbb
aad
sar
sub
mov
cmps
pop
cmp
dec
and
fucomp
ins
icebp
ins
mov
je
iret
mov
dec
push
fcom
les
adc
stos
dec
test
pop
cmp
(bad)
ret
sub
jg
fidivr
ins
or
pop
push
push
mov
out
loope
pop
and
inc
test
jno
xor
enter
int3
adc
repnz
fucomp
lods
mov
sbb
test
pop
or
stos
sbb
jae
mov
jl
mov
test
bound
add
call
inc
mov
rcl
aas
retf
or
pushf
and
rcr
sub
fist
int3
or
jg
ins
stc
xchg
jno
out
add
jne
aam
mov
sub
jae
and
add
sub
mov
bound
test
mov
call
mov
cwde
daa
mov
mov
xchg
xor
test
xor
push
mov
rcr
loope
out
shl
ret
add
pusha
call
sbb
rol
js
mov
ins
or
jmp
mov
cld
push
iret
jno
mov
cmp
in
push
sbb
outs
pop
cwde
sub
pop
sbb
or
push
leave
add
cwde
shl
xor
xor
fild
test
adc
mov
jecxz
pop
mov
cmp
js
push
repz
(bad)
jmp
jo
jns
add
or
mov
mov
jge
push
inc
stos
popf
addr16
xchg
fild
or
inc
sub
loop
or
sbb
mov
ret
jnp
push
mov
shl
dec
jno
or
mov
inc
inc
cmps
(bad)
stc
jmp
(bad)
rcr
inc
in
lods
cmp
mov
push
es
or
sub
jnp
lea
add
inc
jne
sub
adc
out
pop
sub
jo
(bad)
pop
mov
adc
xchg
mov
xchg
int3
mov
push
repnz
xlat
sub
(bad)
out
std
inc
mov
mov
loope
jle
rcl
jae
sbb
xor
or
dec
retf
lds
or
loop
xchg
xor
pop
mov
pop
loope
push
jmp
int3
inc
nop
stos
fisubr
mov
mov
xor
sub
retf
popf
xor
icebp
sub
push
rcr
call
mov
dec
adc
jmp
mov
dec
and
ins
mov
sbb
idiv
stc
push
outs
jb
movs
daa
inc
sub
sbb
sbb
stos
fsubrp
cmp
mov
mov
(bad)
movs
add
outs
cli
mov
push
outs
ficom
xor
mov
cmp
ret
sub
scas
ret
lock
repz
push
or
inc
inc
addr16
mov
jb
sbb
sbb
xchg
lods
pop
cdq
jae
fwait
jge
add
inc
popa
dec
xchg
xlat
cmp
lds
retf
call
fwait
icebp
movs
mov
sahf
mov
jbe
sbb
xor
retf
cmp
enter
sub
cmp
mov
push
mov
icebp
sbb
mov
ret
call
add
clc
fdiv
and
jns
xchg
mov
or
push
fwait
test
xlat
lahf
adc
fs
int
test
inc
loop
add
lock
aas
mov
xchg
mov
ss
push
and
jle
push
sbb
mov
and
out
mov
xchg
(bad)
mov
ror
stc
adc
mov
jns
push
and
inc
clc
or
(bad)
cmp
daa
cmp
jo
push
xchg
bound
ret
push
div
ret
shl
inc
sub
int3
xor
pop
fdiv
adc
clc
inc
jbe
repz
addr16
pushf
rcr
cli
aad
jae
inc
mov
jns
das
loope
lds
scas
lods
xchg
imul
dec
pop
sbb
adc
cdq
or
or
retf
adc
mov
in
adc
aad
hlt
out
jle
leave
cmp
(bad)
pop
cli
and
pop
out
push
dec
cdq
mov
popf
or
inc
mov
jle
inc
push
mov
rol
adc
retf
mov
ins
cmps
inc
(bad)
ret
mov
leave
jmp
daa
test
push
pop
mov
es
ficom
ret
xlat
adc
(bad)
sub
scas
inc
cmp
push
xor
mov
dec
outs
shl
jae
mov
push
sub
adc
push
lea
les
push
and
mov
hlt
adc
mov
call
jmp
retf
out
push
int3
xchg
mov
loop
cmp
enter
cmp
push
cwde
nop
push
mov
or
jmp
cmp
fsubp
(bad)
fwait
stos
out
push
repnz
cld
call
or
xor
mov
addr16
scas
mov
dec
push
repnz
dec
sub
leave
movs
nop
mov
popa
(bad)
xor
xchg
xor
call
scas
jle
mov
mov
mov
mov
xor
fwait
add
and
std
or
jg
cmp
mov
mov
or
dec
in
retf
jnp
or
xor
repz
add
(bad)
jo
jmp
call
jmp
(bad)
mov
xchg
xor
imul
test
call
add
sbb
arpl
xchg
cmp
sbb
pop
adc
push
adc
jae
es
ins
(bad)
cmp
pop
out
add
ffree
xchg
xor
cmp
and
inc
mov
rcl
mov
xchg
mov
xor
cmp
sub
es
mov
pushf
push
adc
scas
nop
outs
lock
clc
retf
pushf
adc
(bad)
cmp
pop
mov
sahf
or
lds
les
xor
xchg
fist
ds
(bad)
sub
push
or
adc
(bad)
loop
cdq
daa
and
stos
into
inc
leave
cmp
retf
inc
push
adc
mov
(bad)
add
push
repz
xchg
(bad)
xchg
push
mov
push
xor
(bad)
cmp
jbe
inc
or
sub
xor
inc
dec
or
pop
xor
xchg
ror
push
mov
in
das
cmp
aam
sahf
and
push
jmp
aas
inc
call
jno
sub
inc
ficom
les
pop
aaa
sub
and
loope
and
or
xchg
mul
aad
or
adc
fdivr
sbb
shl
mov
sti
ror
or
test
dec
and
cmp
adc
test
jmp
cdq
int3
dec
mov
es
jl
jecxz
mov
int3
cmps
scas
cld
add
inc
cmp
sbb
test
xor
pop
dec
lahf
(bad)
pop
push
rcr
ret
mov
xor
std
cdq
ret
add
adc
and
adc
or
jg
ins
push
imul
nop
daa
push
frstpm(287
out
push
cli
push
sub
mov
cmp
rol
test
aaa
sub
outs
fcom
xchg
or
jl
mov
jmp
retf
inc
test
adc
push
stc
xchg
jb
ret
push
inc
pop
aam
mov
loope
or
retf
hlt
and
cmp
sbb
test
jmp
(bad)
dec
out
nop
fsubr
scas
jb
dec
dec
in
nop
into
sti
aas
imul
xor
ror
add
xchg
inc
fistp
sub
je
inc
or
lea
lods
mov
mov
cmp
jge
dec
push
pop
dec
je
das
(bad)
cdq
xchg
adc
iret
(bad)
or
xchg
lods
int3
mov
iret
pop
jg
push
shl
ss
call
dec
retf
not
loop
jecxz
sub
lock
lds
sbb
jmp
jmp
outs
adc
xor
mov
or
cmc
push
adc
rcl
mov
shl
inc
iret
or
mov
int
mov
in
xchg
cmp
sbb
and
test
in
outs
aam
xchg
aam
inc
sbb
clc
popa
sub
mov
lods
sub
lods
push
cmp
outs
add
hlt
mov
call
nop
dec
xchg
lods
push
movs
add
adc
push
dec
into
ret
bound
fiadd
dec
test
add
push
xor
dec
mov
dec
lea
lods
fld
adc
fcomp
sbb
mov
xchg
pop
out
adc
adc
inc
aaa
sti
xor
(bad)
adc
pop
mov
js
adc
mov
ss
mov
cs
mov
sub
or
add
call
or
push
js
inc
(bad)
gs
push
push
adc
xchg
ret
mov
fdivr
mov
mov
fistp
push
test
movd
cli
iret
jne
lods
shr
loope
cmp
lock
jb
bswap
dec
xor
movs
inc
push
fs
sbb
loope
dec
jge
jbe
mov
and
clc
shr
push
add
inc
retf
add
sbb
add
shr
mov
ret
fild
mov
push
mov
jmp
int
lds
ss
pop
test
sub
bound
pavgw
ret
mov
pusha
jbe
pusha
sbb
mov
xor
pop
ret
outs
and
imul
adc
mov
push
ret
popa
pop
mul
icebp
movs
clc
cmp
inc
adc
mov
cmps
shr
inc
adc
mov
das
in
loopne
pusha
lds
pop
push
cmps
xchg
(bad)
or
pop
jae
sub
aad
add
push
sbb
inc
jno
scas
gs
ins
and
mov
std
movs
inc
aad
mov
pop
inc
loopne
push
cmp
xchg
dec
mov
adc
add
sub
push
jmp
into
jo
std
pop
(bad)
loopne
retf
or
mov
push
lods
mov
inc
arpl
mov
jg
jecxz
push
or
jno
test
test
xchg
sub
jo
pop
movs
out
push
or
add
aam
das
mov
(bad)
aas
loop
xor
mov
nop
jecxz
pop
stc
mov
xor
inc
shl
mov
push
ror
pop
ret
xchg
retf
push
mov
inc
ss
jp
or
dec
mov
call
pusha
cli
pushw
aas
add
shl
jmp
and
popf
mov
add
into
int
inc
sub
fdiv
in
mov
int3
xchg
(bad)
sahf
xchg
in
jle
push
add
test
popf
nop
(bad)
je
nop
shl
cld
pop
popa
cwde
xchg
xchg
dec
fsub
imul
arpl
int
inc
dec
cdq
mov
mov
cmp
sbb
jp
push
inc
or
loopne
sbb
sbb
in
push
loop
sbb
push
mov
inc
push
mov
cmc
int
push
sbb
pop
cld
adc
sub
sub
(bad)
xchg
or
mov
jecxz
lds
push
mov
pusha
mov
adc
mov
push
jp
iret
adc
test
stos
and
cmp
lods
sbb
cmc
mov
ja
clc
enter
movs
outs
daa
shl
sbb
gs
lahf
clc
mov
pop
mov
stc
stc
test
(bad)
mov
ja
in
or
sub
xchg
shl
daa
in
movs
out
or
fisub
(bad)
outs
sbb
ds
add
scas
adc
xor
xor
shl
and
pop
adc
shl
mov
mul
stos
pop
stos
clc
sar
or
repz
out
pushf
(bad)
mov
push
and
out
loop
jae
push
mov
mov
sub
lods
scas
mov
out
dec
pusha
dec
daa
mov
push
cmp
repnz
dec
mov
mov
fldenv
fbld
cli
and
std
sbb
in
icebp
push
bound
or
dec
jae
adc
movs
mov
loop
and
adc
and
sub
jmp
lods
retf
and
lods
xor
and
or
jmp
wbinvd
pop
mov
sbb
xchg
bound
int3
imul
js
test
cmps
inc
repz
je
sahf
jmp
lock
adc
dec
push
adc
or
aaa
mov
out
dec
inc
xchg
xor
fild
adc
push
pushf
imul
xor
pop
xor
adc
outs
and
push
jmp
pop
in
push
mov
cmps
inc
fst
and
inc
addr16
add
in
pop
lods
and
sbb
sub
mov
out
cwde
jmp
mov
or
stos
btc
push
scas
adc
mov
mov
mov
sbb
sub
xlat
push
mov
loopne
jnp
mov
pop
mov
retf
adc
adc
leave
push
(bad)
cli
cmp
(bad)
dec
pushf
(bad)
xchg
mov
out
sar
(bad)
fwait
xchg
dec
in
xor
enter
pop
fmul
mov
mov
test
mov
xchg
cmp
or
mov
outs
mov
ror
jg
out
or
test
imul
cmp
jns
fst
cmps
rol
cld
mov
sub
das
mov
lods
xchg
pop
pop
and
xchg
(bad)
mov
out
and
mov
inc
and
repz
psubusb
dec
loop
sub
mov
mov
ror
cmp
lea
jno
sbb
shl
jp
and
xor
xchg
pop
out
push
push
in
icebp
mov
jp
bound
cs
movs
scas
and
add
dec
clc
xor
ret
test
jno
cwde
sti
pop
sbb
(bad)
jl
imul
mov
xchg
mov
fs
sahf
retf
movs
xor
push
or
jmp
sub
mov
push
rcl
sti
mov
not
out
in
int
sub
dec
add
jl
std
imul
nop
cmps
icebp
mov
pop
ins
mov
(bad)
rol
icebp
nop
shl
rcl
add
and
sub
in
mov
stc
mov
jg
cdq
mov
xchg
or
scas
or
adc
les
mov
arpl
add
pop
mov
adc
outs
imul
push
add
stc
mov
fnstsw
pushf
mov
dec
sahf
sub
mov
(bad)
imul
hlt
ja
jmp
test
inc
movs
sbb
js
in
or
cli
pop
cmp
xor
sbb
std
xor
sbb
call
out
mov
imul
or
out
clc
and
cmp
mov
lea
data16
push
addr16
sti
cmps
loope
aaa
out
cmps
jecxz
push
fldlg2
mov
adc
and
xchg
call
andps
or
pop
cs
add
ins
(bad)
sub
pop
mov
push
(bad)
aad
cmc
fcmovnu
cmp
cmp
test
inc
imul
hlt
xchg
push
mov
inc
cmp
push
mov
adc
fmul
pop
pop
and
or
xchg
jbe
popf
mov
fldcw
std
fmul
xor
push
inc
js
lods
loop
jbe
or
fisubr
pop
sub
sar
dec
and
(bad)
in
or
jle
or
lods
ss
add
inc
ror
mov
js
adc
or
fistp
ret
aad
mov
ds
or
int
mov
or
mov
sub
mov
je
loope
add
add
aaa
ds
pop
jns
sbb
mov
rol
adc
call
stos
xchg
adc
and
push
jmp
mov
scas
outs
xor
or
arpl
and
pop
dec
jns
lods
iret
cmp
sbb
jge
and
xchg
push
popa
xor
xor
enter
xchg
jbe
mov
mov
pop
adc
adc
mov
or
adc
jmp
test
pop
cs
js
je
or
xchg
xchg
(bad)
call
and
lods
dec
cmc
sub
xchg
out
bnd
adc
jns
addr16
in
outs
xchg
cdq
aaa
aas
repnz
into
test
cmps
lods
jmp
or
add
mov
(bad)
ficom
push
ret
mov
ins
js
push
jle
mov
aad
cmp
ja
mov
out
dec
xor
mov
outs
jb
sbb
ss
das
ret
dec
lock
or
pushf
and
fcmovnu
into
jns
mov
rol
dec
xor
or
xchg
xchg
mov
(bad)
fisubr
(bad)
adc
pop
or
pushf
outs
aaa
xchg
xchg
sahf
enter
dec
jns
add
push
call
mov
adc
std
aam
pop
mov
mov
mov
push
adc
pop
push
push
dec
adc
jae
inc
jo
cmps
pop
fnstsw
or
pop
mov
iret
js
fwait
aas
mov
and
lahf
adc
and
nop
and
es
sub
iret
pop
xor
out
popf
mov
ss
mov
xor
fld
inc
loopne
pop
hlt
push
xor
mov
xchg
push
xchg
xrelease
sub
pop
ja
data16
xor
mov
cmp
push
xchg
adc
test
mov
inc
mov
lahf
mov
pusha
inc
fwait
ds
call
dec
xchg
and
imul
into
xor
fcom
push
cmp
adc
cwde
cmp
push
mov
fld
popa
shl
or
(bad)
(bad)
dec
push
and
icebp
pop
(bad)
cmps
pop
mov
jb
adc
dec
fbstp
mov
nop
sbb
sub
cmps
cli
push
int
add
jp
jns
pop
mov
inc
mov
imul
cmps
aaa
(bad)
je
addr16
or
add
out
ds
xchg
inc
neg
les
mov
add
jbe
or
jle
or
push
push
push
mov
dec
and
data16
push
mov
xor
jns
movs
xchg
cmp
test
jp
pop
call
(bad)
cmp
sbb
push
mov
lods
adc
jge
inc
ja
xchg
aaa
pop
push
pop
rol
mov
stc
mov
hlt
repz
fiadd
outs
xor
lahf
ffreep
cmps
in
jbe
cld
std
data16
dec
lods
mov
rcr
pop
sbb
cmps
hlt
lods
test
xchg
ror
das
lods
cli
out
jmp
or
pop
mov
mov
sub
(bad)
comiss
std
sub
pop
xchg
push
fmul
pop
add
rcr
outs
push
shl
add
xor
into
(bad)
adc
dec
inc
sti
inc
stos
push
jne
ins
pop
push
and
out
cld
adc
ret
addr16
xchg
push
cmps
or
fs
scas
movd
ins
fimul
and
or
adc
retf
add
jo
dec
fld
or
push
mov
stc
in
push
cmp
dec
or
jns
repnz
mov
add
lahf
in
jae
ret
mov
cmc
mov
mov
dec
call
scas
test
cli
mov
inc
(bad)
cmps
cmps
sub
or
pop
loope
xchg
sub
out
sbb
in
ins
inc
xor
imul
sub
push
daa
js
jo
out
test
cmp
inc
fisttp
movs
inc
jmp
outs
mov
and
clc
stos
xlat
pop
mov
shr
cmc
pop
lods
push
movs
xchg
xchg
(bad)
fs
enter
adc
sbb
imul
dec
sbb
jmp
jmp
sbb
lea
(bad)
mov
dec
cs
sub
dec
(bad)
(bad)
pop
pop
(bad)
leave
xchg
ret
imul
sub
add
clc
nop
clc
xchg
movs
movs
fwait
sub
pop
pop
imul
int3
xor
dec
add
jp
out
push
mov
arpl
je
mov
imul
pop
loope
or
sbb
inc
add
pop
xchg
int
imul
fdiv
xor
jmp
mov
mov
and
jg
inc
push
or
leave
in
or
in
popa
or
jne
fwait
ret
push
out
jl
cld
test
jb
or
(bad)
push
jecxz
mov
mov
int
das
data16
das
sub
xchg
lods
dec
jmp
mov
call
push
and
ins
es
mov
imul
sbb
loopne
nop
test
xor
cmp
and
les
mov
in
hlt
xchg
add
mov
sbb
outs
in
sub
pop
test
and
pop
or
lods
xor
cmc
int3
sahf
xor
test
xchg
jne
cwde
ret
dec
mov
mov
shr
jb
pushf
pop
clc
dec
dec
jmp
pop
fstp
into
jecxz
in
cmp
scas
dec
or
or
sahf
rcl
push
sub
nop
and
pop
mov
(bad)
cmps
sub
aas
adc
pop
test
mov
add
jno
pushf
cs
mov
cmps
mov
xchg
fimul
xor
enter
or
(bad)
fnstcw
sub
xchg
lods
mov
cmp
inc
pop
mov
lods
lock
push
fsub
retf
sub
mov
pop
sbb
retf
fcomip
in
mov
xchg
ffreep
sub
cmp
fnstcw
pop
and
push
test
add
dec
sub
test
or
mov
jno
mov
mov
add
push
sbb
cwde
sub
movs
fst
icebp
or
jne
iret
call
repz
stc
cwde
pop
lods
pop
and
rcr
lahf
xlat
dec
lea
push
mov
jmp
fidiv
mov
bound
cmp
out
mov
icebp
es
cdq
loopne
lods
adc
fs
outs
nop
inc
imul
xchg
call
and
or
sbb
hlt
inc
je
in
mov
xchg
mov
pop
outs
or
push
bound
lea
movs
bound
in
shl
test
retf
jb
xlat
or
sbb
jmp
cmp
and
call
xchg
sbb
cld
and
mov
pushf
cmp
jno
outs
xor
mov
xor
xchg
fs
and
scas
jmp
push
loopne
ret
mov
test
push
(bad)
daa
data16
push
xlat
jl
cld
pusha
popa
add
pop
or
or
inc
dec
xchg
push
ret
int
dec
xchg
mov
add
jmp
mov
jae
sbb
dec
add
and
add
add
int
jbe
jbe
xor
adc
dec
dec
iret
movs
sub
push
xchg
mov
(bad)
xor
dec
addr16
adc
push
mov
into
add
jge
aad
cmovns
cmp
scas
cmp
fmul
xchg
or
sub
cld
adc
jecxz
in
dec
mov
call
scas
xchg
fmul
in
hlt
mov
fwait
out
mov
sbb
or
cmp
lods
sub
rcr
push
dec
mov
xchg
cmp
inc
sbb
adc
arpl
push
pop
jnp
mov
stos
inc
cmc
xchg
inc
outs
jg
jb
inc
adc
fidiv
nop
jmp
sub
and
adc
push
retf
pop
pushf
test
(bad)
adc
inc
mov
xchg
in
fcomp
xor
iret
and
inc
gs
and
xchg
mov
stos
aaa
push
and
mov
daa
cmp
pop
mov
fldenv
add
lods
aam
inc
jp
movs
dec
sahf
and
jecxz
mov
sub
xor
adc
and
std
fucomip
sub
cwde
out
xchg
stc
popa
hlt
in
emms
shr
xor
lea
add
daa
fstp
mov
movs
sti
mov
mov
sub
adc
cmps
int
pop
adc
jmp
cmp
out
mov
enter
enter
or
popf
add
push
mov
and
adc
cmp
xor
xor
dec
lods
ins
mov
(bad)
inc
mov
lods
mov
lods
mov
in
inc
outs
inc
cmc
push
dec
mov
push
std
out
stc
xor
sti
gs
push
mov
ffreep
call
xchg
pop
imul
repz
test
mov
mov
pop
adc
push
xchg
sbb
or
cdq
pop
adc
xchg
sbb
jae
fidiv
jl
pop
das
mov
push
dec
sbb
imul
pop
test
(bad)
jp
in
jbe
sub
sub
dec
mov
and
(bad)
fst
ins
cmps
dec
out
stos
jbe
xor
movs
jmp
jno
dec
pushf
adc
add
imul
scas
int3
or
ret
out
cmps
ja
adc
daa
xchg
sub
add
push
xor
sub
push
test
xchg
daa
ror
jg
and
cmps
into
push
dec
sti
adc
or
rol
sti
retf
mov
adc
pop
out
pop
pop
dec
ror
fild
add
xchg
test
sbb
(bad)
aam
inc
pop
jmp
or
pop
pop
outs
or
cmps
lahf
fisubr
jmp
fwait
fs
pushf
stos
mov
xchg
leave
cmp
das
jnp
(bad)
jne
xlat
mov
add
std
mov
inc
in
pop
adc
adc
mov
dec
repz
adc
xchg
js
mul
cwde
outs
adc
out
fldenv
inc
xlat
sub
in
sbb
es
fwait
add
sub
xlat
addr16
cmp
loopne
xchg
xchg
repz
cmp
rcr
mov
imul
cmp
les
jns
test
test
int
xor
inc
test
in
es
iret
inc
cmp
in
push
gs
enter
jnp
hlt
jnp
mov
cmp
mov
inc
xlat
push
jne
sbb
inc
bound
xchg
jae
les
loop
push
mov
test
jge
mov
push
sbb
(bad)
imul
popa
dec
sub
mov
int3
iret
adc
lds
(bad)
bnd
bound
jp
daa
push
cmp
sbb
scas
lock
dec
sbb
push
(bad)
mov
out
(bad)
or
and
cmp
leave
pop
fidivr
jbe
arpl
jecxz
adc
xchg
jo
cmps
lds
cmp
mov
idiv
das
pmulhuw
loopne
push
pop
push
retf
inc
xchg
stos
mov
mov
dec
adc
mov
scas
sbb
or
in
or
stc
cld
js
ds
push
push
in
int3
lahf
sub
mov
adc
lods
out
mov
mov
jle
cmp
outs
mov
push
fisub
es
jge
pop
xor
retf
arpl
adc
mov
push
out
idiv
and
mov
lods
pop
pop
ficom
dec
mov
inc
iret
(bad)
(bad)
push
cmp
out
push
jns
dec
adc
sub
bound
pop
mov
les
mov
mov
or
stos
add
mov
and
test
and
adc
mov
cwde
sub
pop
scas
add
popa
stc
sbb
ret
fist
cli
fstp
pusha
fucomi
mov
ffreep
mov
and
test
out
and
(bad)
mov
pop
in
push
gs
jae
(bad)
(bad)
mov
popf
test
xor
dec
shr
mov
ins
push
add
mov
movs
ja
imul
fwait
inc
mul
cdq
out
sbb
mov
cmp
xor
add
jge
cmp
add
push
scas
ret
sub
or
mov
lea
adc
(bad)
mov
inc
push
jo
xor
aad
mov
xor
and
cmps
into
in
cmp
sub
call
fisubr
sub
sbb
xor
jmp
loope
jne
or
mov
push
sub
xchg
mov
push
mov
dec
rol
mov
or
push
lods
sbb
fcomp
frstor
mov
and
xchg
sbb
clc
es
and
cld
fld
push
lds
aam
ret
mov
int
push
leave
aas
and
mov
out
in
ins
call
psubsw
or
mov
mov
js
mov
out
pop
or
mov
pop
jo
js
add
shl
pop
ins
dec
cmp
data16
adc
(bad)
fsubr
and
xor
push
fadd
dec
stc
shl
pop
cmps
jbe
sub
cmp
stc
outs
ret
(bad)
jmp
icebp
jecxz
xchg
scas
pop
cmp
sbb
fdiv
pop
cmp
sbb
push
push
pop
lds
adc
test
das
xchg
nop
fadd
sub
je
(bad)
les
out
test
push
lock
adc
std
cmps
and
pop
aam
ret
adc
fdivr
hlt
outs
adc
sahf
hlt
pop
xchg
and
xlat
xor
mov
rol
loop
pop
stos
jg
xor
jmp
int
xor
mov
aam
add
(bad)
jp
mov
lahf
lods
inc
outs
mov
mov
scas
in
push
icebp
jns
(bad)
mov
aad
shr
cmovbe
daa
inc
fcom
mov
and
test
lods
adc
ret
test
mov
xlat
mov
lahf
fadd
and
add
push
cmps
loop
sbb
stos
icebp
bound
pop
inc
inc
mov
lock
cwde
sar
xor
lods
(bad)
not
cmp
mov
dec
pop
or
(bad)
popf
fimul
push
xor
fmul
loopne
push
je
push
sub
and
sbb
retf
imul
pop
sti
mov
mov
jge
call
xor
dec
mov
jbe
cli
ja
ins
out
retf
mov
leave
xor
lahf
sbb
dec
mov
repz
loope
aad
xchg
and
sbb
adc
ss
(bad)
mov
push
loopne
xor
inc
arpl
rol
xor
fldcw
mov
xor
mov
repnz
pop
in
lahf
jmp
popa
pop
mov
int
fbstp
mov
cmc
inc
and
xchg
sub
pop
icebp
xor
dec
cwde
jns
cli
js
add
cmps
inc
add
cmp
mov
push
ja
sub
scas
dec
mov
(bad)
(bad)
xor
or
adc
std
out
in
inc
test
test
aas
sbb
mov
(bad)
pop
push
ins
jmp
idiv
arpl
rcr
jno
jle
push
(bad)
lods
add
jo
mov
sub
jl
dec
push
fmul
cwde
lods
jp
and
sar
jno
add
add
les
pop
ret
cmp
enter
add
adc
int
lahf
aad
das
sar
push
cli
outs
mov
mov
mov
mov
adc
or
and
xchg
fwait
test
add
out
out
sti
in
xor
inc
add
or
jg
mov
jmp
jp
mov
push
bound
(bad)
mov
pop
push
imul
jg
and
inc
cmp
sub
repz
sub
jnp
mov
xchg
and
std
fisttp
inc
cmp
jo
ins
jmp
jnp
(bad)
mov
enter
je
iret
mov
sub
jge
and
cmp
inc
outs
mov
bound
pop
push
fwait
sbb
retf
mov
enter
test
xchg
mov
call
push
fmulp
aaa
inc
(bad)
or
(bad)
add
dec
sub
lock
and
mov
dec
adc
pop
int3
jmp
mov
push
dec
cmp
shl
jge
rol
sbb
xchg
data16
(bad)
retf
mov
(bad)
cmp
in
xchg
jne
sti
add
dec
mov
jg
pop
and
pop
xchg
sub
sbb
fwait
jle
out
cmc
ret
and
neg
movs
and
mov
or
mov
and
fnstcw
daa
cmp
xchg
adc
dec
pop
inc
sbb
lea
sub
int3
xor
sub
(bad)
mov
mul
xor
or
and
shl
ss
sbb
ret
fcomp
add
data16
(bad)
daa
or
and
add
rol
aas
fidiv
xchg
retf
ret
cli
movups
mov
aas
jo
jb
(bad)
rcr
add
mov
sub
add
ret
scas
pop
retfw
xor
dec
jmp
iret
inc
fwait
push
in
outs
in
mov
adc
sub
mov
xor
test
inc
jl
out
push
test
jge
mov
cs
or
push
push
xchg
ss
sub
push
jge
lods
fldenv
lahf
out
addr16
sbb
movs
push
mov
popa
leave
dec
not
add
xor
imul
xor
sub
jmp
xchg
xor
mov
ret
lods
xlat
popf
lea
and
xor
(bad)
cmp
ret
dec
(bad)
in
mov
sbb
in
les
rcr
jbe
and
call
retf
ins
mov
mov
test
mov
test
pusha
adc
retf
dec
arpl
lock
xor
cmp
popa
mov
movs
sbb
mov
push
in
dec
lahf
data16
adc
mov
mov
mov
pop
pop
and
dec
popa
mov
inc
push
or
pop
ret
(bad)
popf
xor
cmps
rcr
gs
lds
outs
mov
push
adc
jg
mov
sub
test
dec
pop
xchg
div
xor
jnp
mov
and
adc
fs
inc
xchg
dec
in
jle
sub
add
outs
mov
ret
out
adc
loope
inc
mov
pop
inc
push
fcomi
ss
sar
jmp
retf
jmp
push
xor
cs
mov
das
xor
loop
push
push
scas
mov
cmp
(bad)
and
pop
ds
mov
and
pop
push
sub
clc
pop
lea
xchg
push
xor
sub
xor
outs
cwde
je
into
out
lds
aam
fisttp
mov
cmc
loop
xchg
cmp
push
or
in
pushw
or
mov
(bad)
mov
push
iret
movs
imul
adc
cli
or
adc
cwde
xchg
add
ret
or
mov
clc
sbb
(bad)
jbe
mov
mov
inc
add
popa
add
mov
dec
pop
aam
dec
jp
add
sbb
and
push
pop
or
and
or
xchg
jp
cmc
and
jmp
retf
add
retf
imul
movs
jg
dec
pop
dec
mov
imul
mov
pop
inc
inc
in
or
ins
es
jmp
or
jno
jno
outs
nop
inc
pop
sub
xchg
adc
dec
pop
nop
jmp
mov
mov
lods
cmp
xchg
leave
pop
aam
mov
stos
xor
and
inc
jecxz
cld
fiadd
fs
mov
(bad)
das
push
pop
les
adc
mov
in
add
jecxz
and
(bad)
out
aam
xor
xlat
popa
adc
retf
push
fld
retf
adc
push
pop
sbb
xor
pop
call
mov
test
xchg
hlt
fwait
neg
add
and
sbb
jo
pusha
jmp
jl
or
add
(bad)
clc
jnp
shl
jne
push
test
push
repnz
fs
cli
sahf
test
cmps
pop
shr
test
daa
shr
add
sbb
fnstsw
inc
(bad)
call
adc
hlt
dec
les
sub
ja
daa
dec
add
in
dec
in
outs
cmp
push
in
mov
or
gs
mov
push
xor
fs
inc
xor
mov
and
sub
add
ss
test
movs
(bad)
movs
test
mov
mov
test
push
bound
ja
cmp
ret
fwait
sti
aaa
pop
adc
jb
push
mov
repnz
sub
or
cmp
xchg
lock
aaa
cmps
clc
int3
jmp
or
jmp
pushf
jbe
adc
int3
ja
arpl
mov
fwait
dec
retf
and
push
pop
jae
sub
mov
ret
adc
mov
adc
xchg
push
mov
xor
push
test
adc
imul
pop
mov
add
scas
inc
mov
addr16
les
scas
jge
push
cs
retf
lods
pop
enter
fwait
push
add
call
cdq
outs
jne
mov
lahf
nop
fwait
pop
movs
jmp
mov
pop
pop
cdq
mov
xchg
jbe
adc
push
je
pop
adc
jbe
test
out
outs
cld
sub
lods
jge
pop
outs
ins
mov
mov
lods
sub
pop
lahf
mov
and
aam
push
xor
int3
xor
call
cmps
sbb
cdq
and
stc
das
in
dec
es
cld
dec
xchg
jns
push
push
jno
jl
cmp
push
sub
popa
add
pop
adc
jbe
(bad)
cmp
sbb
adc
(bad)
dec
sub
mov
or
jge
ds
lock
retf
lods
adc
in
in
adc
test
xor
sub
cmp
ins
loop
push
sbb
int
add
mov
jecxz
retf
lock
daa
mov
and
mov
push
mov
dec
call
add
hlt
mov
test
xor
arpl
adc
ds
mov
push
pop
mov
loop
or
cmps
pop
xchg
xor
(bad)
mov
stos
outs
fmul
xchg
js
out
rcl
xor
xchg
jg
sub
push
jp
sahf
xchg
push
dec
lahf
adc
cs
fld
out
or
into
cmc
pusha
in
data16
int3
or
pushf
rol
mov
in
imul
out
dec
push
mov
adc
loope
adc
out
mov
dec
cs
scas
aam
and
sub
js
sub
push
jne
fs
inc
cdq
(bad)
test
push
inc
and
sub
or
push
jb
je
and
pop
stc
stos
enter
cmc
fidiv
xchg
bound
mov
loope
dec
mov
test
jg
mov
imul
ins
mov
inc
(bad)
aaa
lahf
cmp
ss
adc
sbb
jle
cmp
jmp
xor
movs
sbb
xor
push
jge
pushf
call
lahf
sub
scas
stos
inc
hlt
dec
pop
jno
xchg
sar
mov
add
mov
adc
in
and
aam
mov
cmp
fstp
les
xchg
add
xor
data16
lods
cld
jle
ret
loop
imul
add
push
adc
sti
stos
jbe
in
loopne
aad
and
rcr
aas
fstp
out
or
sbb
dec
std
push
aas
push
pushf
(bad)
and
mov
xor
call
inc
inc
mov
xchg
cmps
lahf
mov
sbb
sub
loope
sub
scas
rol
(bad)
mov
ins
jno
jecxz
cmp
adc
or
popa
pop
sbb
mov
imul
or
xchg
enter
je
or
push
cli
sti
push
cmp
cmps
inc
and
and
test
in
push
ret
add
mov
jecxz
ret
inc
and
in
mov
dec
fs
and
cmp
bound
push
inc
jbe
mov
das
test
loop
pop
xchg
lock
sbb
ror
daa
pop
lock
ret
inc
ret
mov
leave
mov
dec
push
aas
xor
(bad)
sbb
pop
js
and
mov
xchg
ror
es
xlat
jle
dec
pushf
adc
pop
shl
push
cmp
(bad)
mov
rcl
xor
mov
clc
sbb
pop
add
push
pushf
es
in
or
aad
dec
and
shl
loope
mov
push
dec
neg
mov
mov
pushf
es
jge
sbb
jecxz
pop
mov
repnz
das
cmp
inc
add
adc
inc
sar
icebp
push
inc
ds
and
sbb
aam
inc
cmp
retf
cmp
and
dec
and
cmp
dec
mov
inc
popa
and
cs
pop
icebp
pop
dec
loope
mov
popf
dec
mov
sbb
jno
and
test
fs
imul
xchg
pop
retf
aad
outs
cmc
xor
aaa
mov
push
and
jnp
pop
gs
loopne
lahf
xchg
addr16
ins
push
or
adc
dec
ror
pop
popa
or
jae
push
or
mov
jp
mov
out
xchg
aas
jp
dec
scas
push
test
nop
cmp
jns
pop
imul
push
imul
xchg
dec
sub
xor
ficom
sar
mov
rcl
pop
jb
pushf
vpaddusw
in
cwde
enter
adc
int3
ins
pop
cli
sbb
movs
iret
or
mov
jnp
cmps
inc
imul
xchg
mov
sub
adc
push
sahf
jecxz
mov
or
push
mov
mov
call
push
call
pop
add
ror
mov
lods
push
pop
jecxz
sub
pcmpeqw
lods
push
inc
xor
clc
pop
xor
inc
jo
jne
retf
adc
sbb
jecxz
aaa
test
cmps
test
fbstp
pop
cld
repz
and
xchg
out
or
pop
fld
popf
xchg
je
scas
sub
dec
(bad)
pop
pop
xchg
call
or
imul
fcomp
test
or
mov
and
cmps
inc
add
add
xor
popa
(bad)
jbe
sub
or
pop
mov
cmp
xchg
jmp
mov
pushf
mov
aam
dec
dec
inc
retf
test
push
inc
mov
imul
adc
add
test
mov
cmp
cmp
outs
jl
mov
in
es
idiv
imul
scas
mov
push
jne
inc
scas
in
jmp
sbb
xchg
sbb
(bad)
ins
mov
jae
adc
jle
rcl
shl
push
stos
or
jmp
es
adc
cmps
and
ds
fist
sahf
jne
xor
je
jbe
mov
pop
add
out
in
clc
nop
and
ds
sub
mov
cmps
scas
push
ret
or
dec
dec
or
pop
mov
mov
sbb
jl
ja
ins
bnd
fimul
in
inc
and
or
xor
inc
adc
test
inc
sti
std
pop
enter
sub
add
leave
cwde
test
pusha
out
lock
loop
inc
push
stos
inc
outs
and
sti
mov
repz
pop
test
jecxz
lock
pop
pop
push
dec
push
mov
mov
inc
mov
adc
mov
dec
rol
mov
iret
and
cmp
pop
test
call
adc
xchg
stc
mov
cs
cwde
dec
(bad)
mov
ret
sbb
fst
xlat
int
xchg
inc
mov
outs
or
mov
mov
imul
shl
jmp
xor
fnstsw
inc
cmp
cwde
outs
sbb
mov
mov
inc
inc
(bad)
and
neg
or
loop
sub
call
cmp
out
or
add
out
movs
shl
mov
jmp
hlt
adc
shl
fisub
mov
ins
sbb
fild
test
add
neg
mov
sbb
sbb
lods
xor
sbb
test
outs
lods
push
cmp
cmp
lahf
sbb
xchg
sbb
xorps
rcl
call
rol
xchg
les
push
pop
ret
shl
sub
lea
inc
icebp
lahf
loop
ret
outs
or
push
mov
dec
xchg
stos
and
(bad)
xchg
and
sar
in
rep
inc
out
sub
into
js
pusha
pop
mov
arpl
push
sar
xchg
scas
jno
add
call
mov
lds
pop
mov
aaa
rcr
aaa
push
inc
push
stos
push
icebp
cmp
add
les
add
pop
jns
outs
push
inc
scas
add
inc
dec
addr16
pop
xchg
mov
dec
inc
push
ds
jno
cmps
and
adc
mov
(bad)
sbb
pop
sub
cdq
fdivr
jp
mov
sub
ins
xchg
and
inc
mov
jne
and
lahf
out
loop
mov
cmp
xchg
out
test
dec
cmp
setge
mov
xor
adc
sbb
sub
ror
add
jg
jle
push
int3
shl
(bad)
iret
inc
and
stos
or
(bad)
mov
mov
scas
xor
add
mov
nop
mov
push
inc
sbb
xchg
ss
or
xor
inc
dec
push
icebp
loop
mov
inc
adc
pushf
xchg
stos
shl
and
sahf
shl
rcr
icebp
mov
ds
push
push
push
js
mov
sbb
jmp
(bad)
das
add
cmps
jge
cdq
mov
bound
enter
mov
mov
int
pop
push
mov
cli
push
fisub
movs
cmp
jbe
pop
pop
cmp
sub
test
fisubr
jge
inc
adc
fimul
push
dec
test
in
hlt
call
or
in
test
xor
out
push
pop
lea
jle
je
je
neg
aad
sti
add
iret
push
cmc
cmc
je
loope
cmps
arpl
jbe
sbb
imul
outs
or
(bad)
xor
(bad)
pop
inc
inc
lea
cmps
(bad)
icebp
lods
push
movs
in
stc
aam
push
xor
enter
cmp
ss
dec
lock
jb
xor
ret
pop
imul
push
push
dec
ja
imul
mov
inc
pushf
adc
aaa
mov
out
mov
push
xor
out
or
cli
push
clc
cli
xor
and
push
adc
add
add
inc
aad
fisub
jmp
das
in
ret
dec
mov
out
jmp
push
cmc
enter
js
xchg
imul
mov
int
inc
add
lahf
shl
pop
add
cli
push
cmp
out
iret
repz
rol
add
retf
repz
push
popa
rcl
stos
jns
pop
(bad)
int
pusha
xchg
int
mov
add
shl
mov
xchg
xchg
imul
jp
daa
push
ror
ja
test
sbb
mov
cdq
aaa
mov
inc
arpl
div
inc
sub
adc
mov
push
xchg
repnz
mov
xor
mov
in
cld
and
popf
pusha
and
jne
sub
adc
mov
cs
jb
aad
(bad)
arpl
out
pop
sbb
aam
dec
jmp
out
ror
pop
sub
pusha
in
cmps
push
(bad)
cmp
ret
inc
rcr
nop
in
pop
adc
fisttp
arpl
nop
push
ins
push
cs
sub
nop
popa
sbb
xchg
(bad)
clc
jb
mov
not
pop
adc
ds
mov
cmp
leave
xchg
cmp
call
fwait
adc
push
push
cs
or
fwait
gs
or
lods
sbb
adc
jo
pusha
outs
lods
in
call
std
call
dec
pop
fisubr
popf
jbe
lock
out
cmp
xchg
or
movs
es
retf
loop
ss
mov
mov
stc
push
cli
ss
sbb
scas
loop
push
callw
xor
mov
leave
in
jle
hlt
shl
dec
test
cmp
ret
popa
inc
lock
adc
pop
mov
mov
pop
movs
cld
into
adc
test
pop
ret
icebp
sbb
les
das
pop
jns
sbb
mov
stos
rcr
bound
xor
mov
mov
gs
jle
fcom
cmc
test
stos
dec
int
mov
jb
jp
ins
jnp
das
or
test
rcl
mov
mov
cdq
xchg
push
scas
mov
sbb
mov
int
outs
xchg
js
jp
idiv
push
shl
loopne
scas
inc
fcom
jo
xor
mov
sub
loope
mov
loop
or
rol
movs
xor
pop
scas
push
imul
mov
stos
ds
rcr
(bad)
pop
(bad)
mov
mov
sbb
(bad)
or
mov
retf
mov
lods
call
arpl
in
pop
addr16
movs
xchg
push
(bad)
sub
mov
(bad)
pop
mov
cmp
mov
icebp
cmps
jecxz
cmp
push
shl
jg
xchg
jmp
sub
or
ins
sbb
shl
jns
push
fs
(bad)
sbb
mov
sbb
call
call
loopne
aaa
xor
addr16
sti
mov
mov
or
and
mov
or
stos
ins
rcl
fiadd
lock
inc
xor
outs
jns
stc
cmps
int3
ds
loope
inc
adc
jae
mov
mov
or
inc
mov
out
adc
cdq
push
fild
xchg
jae
pop
pop
stos
pushw
test
loopne
xchg
shr
xchg
inc
cmp
rol
or
out
add
mov
je
xchg
stos
mov
hlt
mul
push
test
push
ret
ja
loop
imul
jae
adc
jl
fiadd
inc
inc
inc
out
outs
xor
retf
ror
outs
pop
in
jmp
test
sub
cdq
mov
test
bound
xchg
sub
xchg
push
jle
das
or
xchg
lahf
mov
clc
movs
adc
sub
adc
mov
mov
out
icebp
xor
add
mov
jl
cmp
hlt
ss
add
scas
mov
sbb
jp
dec
leave
es
(bad)
mov
fimul
int
jmp
cmp
cmp
fisub
mov
retf
mov
fidivr
test
push
and
ins
cmp
mov
and
ret
loop
mov
outs
dec
xlat
nop
dec
jnp
les
pop
cwde
mov
pop
mov
push
pushf
sbb
and
repz
shl
call
xor
test
pop
(bad)
pop
call
rcl
xor
retf
jnp
and
test
and
lock
aaa
jg
mov
or
xchg
jl
dec
lahf
stos
add
pop
push
pop
jae
mov
out
xor
je
retf
push
call
push
das
lock
adc
pop
sub
inc
retf
and
jg
sub
scas
addr16
inc
push
add
jmp
dec
rol
cmp
lods
mov
int3
loope
icebp
popa
sti
sub
mov
jmp
xchg
mov
jae
pusha
sbb
ret
adc
cwde
push
das
add
jecxz
adc
dec
jne
cmps
fisttp
movs
xor
pop
pop
(bad)
mov
pop
dec
aas
test
cmp
test
jmp
stos
or
push
mov
pop
cmp
or
int3
pop
loop
test
adc
mov
cmc
sub
int
xchg
inc
sbb
pop
sar
cmp
jno
cmc
xor
lds
mov
stc
jo
in
xchg
jmp
cmp
sub
push
dec
pop
pop
pop
aas
mov
(bad)
int
out
dec
inc
push
xor
dec
sbb
pop
sbb
sbb
jb
pop
(bad)
dec
lock
lea
pop
pop
aaa
or
pusha
xchg
jo
cmp
push
and
inc
popa
mov
mov
mov
out
cmp
je
push
mov
cdq
cwde
loopne
mov
mov
xor
ja
cs
clc
xchg
push
jb
jmp
addr16
jbe
dec
push
pop
push
enter
xchg
aam
and
iret
dec
mov
je
inc
repnz
mov
mov
retf
cdq
inc
cmp
pop
mov
push
jle
push
data16
lahf
shl
sub
stos
aaa
sub
push
cmp
scas
adc
push
sbb
cmp
mov
xlat
xchg
imul
mov
outs
ds
mov
inc
add
data16
ja
shl
fs
add
mov
jmp
retf
pop
enter
xor
pop
fisttp
or
xchg
aam
sbb
cli
push
xchg
cmps
dec
push
mov
in
jno
nop
xchg
xchg
push
and
jo
(bad)
push
sub
cli
stc
and
aad
dec
dec
js
cmc
sub
movs
neg
adc
les
in
popa
sbb
mov
jp
push
inc
mov
stc
mov
dec
inc
mov
int
dec
stc
sub
aam
clc
and
cmp
mov
xlat
push
scas
dec
enter
icebp
ja
ret
inc
and
pushf
jge
jne
dec
cwde
mov
icebp
fwait
mov
sti
add
es
inc
jge
cmp
ins
daa
dec
jnp
jl
scas
and
cmc
cmps
jl
jne
sub
push
sbb
mov
leave
inc
cmp
mov
fucomip
xchg
pop
cdq
sahf
cli
push
scas
gs
outs
sub
lea
inc
push
push
mov
cmp
xchg
int3
femms
out
jmp
ret
loope
adc
loopne
outs
xor
stos
and
cmp
loop
cmp
sbb
fs
test
mov
pmovmskb
fdivr
sti
into
ds
xor
cld
mov
mov
cmp
mov
pop
cli
push
les
test
fwait
jp
inc
xchg
or
mov
out
push
push
adc
xchg
xor
movs
lods
adc
push
pop
jne
xchg
cmp
cmc
xor
add
and
cli
pop
gs
(bad)
jg
sbb
push
movs
mov
int3
not
pop
sti
out
jbe
call
fcomp
pop
push
push
js
fsub
jp
pop
clc
aad
mov
fs
sbb
pop
or
inc
icebp
jno
sbb
fs
xor
xchg
adc
ins
xor
sbb
mov
push
test
sbb
xchg
icebp
and
dec
imul
cwde
or
push
push
xor
mov
sub
nop
aad
ror
dec
lds
rcl
into
aad
add
lock
cmp
cmp
test
movs
or
sbb
movs
dec
lods
and
jae
retf
mov
or
mov
lahf
or
(bad)
jle
dec
pusha
push
dec
cld
jb
pop
xchg
push
je
ror
fidivr
lds
jle
arpl
(bad)
mov
jmp
loope
sub
fwait
add
fdivr
sbb
sub
mov
daa
xor
ds
inc
cli
add
(bad)
std
aad
or
add
mov
mov
test
adc
sahf
xchg
adc
jb
repz
xor
jle
push
pop
xor
loope
dec
pop
jecxz
scas
(bad)
or
mov
adc
fmul
xchg
mov
xlat
push
test
and
sub
dec
or
retf
imul
sbb
dec
js
xchg
jb
sub
mov
and
mov
inc
add
mov
mov
mov
pop
adc
clc
mov
mov
push
cmp
fst
test
imul
push
mov
repz
jg
mov
ins
bound
test
pop
xor
fs
es
pop
fprem1
lds
sub
pop
pop
add
or
mov
inc
push
sbb
fcom
adc
inc
mov
inc
jmp
scas
clc
dec
jle
and
or
inc
in
mov
dec
rcl
or
mov
xchg
movs
push
cmp
add
loope
mov
inc
div
cmc
stos
movs
mov
cmp
mov
mov
fs
mov
shl
or
cs
fs
sub
inc
xchg
pop
mov
sub
adc
daa
sbb
cs
mov
push
xor
cmc
jg
sub
loope
mov
add
cmp
loop
sahf
push
rcl
xchg
cmc
dec
jbe
jae
add
xchg
xor
rcl
fidivr
test
xchg
sbb
pop
jp
push
and
or
sub
arpl
sbb
jb
fld
mov
ret
js
sub
jp
ins
mov
(bad)
jecxz
fstp
mov
dec
jns
daa
imul
aad
jle
mov
jg
call
aaa
push
ins
xor
mov
adc
retf
shl
aam
addr16
imul
test
adc
xchg
cdq
int3
in
push
scas
mov
test
lock
ror
xchg
cs
dec
push
inc
loope
add
into
dec
sar
ins
sti
das
(bad)
gs
dec
dec
stc
xchg
cmc
pop
push
retf
push
mov
jmp
arpl
fistp
stos
outs
addr16
sub
(bad)
adc
sub
ins
dec
adc
pop
lods
add
push
xchg
mov
or
dec
stos
lahf
and
(bad)
cmp
push
das
xchg
inc
clc
hlt
into
cli
xlat
(bad)
aad
std
js
pop
push
out
adc
mul
mov
mov
sbb
in
push
and
test
sbb
outs
pop
in
out
sub
jno
sbb
movs
aad
loope
stc
fs
pop
out
jg
sahf
sub
push
movs
jl
bound
test
add
mov
jp
hlt
popa
(bad)
ror
jbe
jno
lods
rol
aaa
jecxz
xor
outs
cmp
push
mov
mov
inc
fmul
movs
push
mov
mov
sub
push
stos
cmps
jmp
xlat
xchg
aas
lahf
fcom
jbe
add
ja
sub
call
scas
cmp
mov
repnz
enter
lods
movs
sub
pushf
outs
push
jl
(bad)
std
mov
call
sar
data16
call
pushf
cs
pop
xor
add
jle
push
and
lock
pushf
and
or
call
fs
scas
pop
fild
and
movs
adc
jno
pop
(bad)
or
ret
add
ds
in
cmp
mov
xchg
addr16
loope
jne
ret
jo
dec
mov
xor
aas
sub
es
adc
or
dec
cwde
dec
dec
xchg
out
cs
rcl
push
fld
jmp
aam
cmp
mov
cmp
pushf
fld
push
bt
mov
rol
movs
fsub
fwait
mov
and
xor
add
sti
push
push
pop
inc
push
ds
mov
and
mov
mov
faddp
pusha
xchg
clc
sub
call
ror
and
outs
mov
daa
sbb
mov
mov
outs
gs
mov
cdq
ins
movs
stos
inc
sub
daa
jnp
ins
test
cmp
pushf
lea
mov
dec
dec
mov
or
mov
cmc
popa
fidivr
mov
dec
ins
sbb
(bad)
hlt
mov
imul
xor
xor
sub
shl
xchg
fimul
xor
(bad)
fnsave
lods
mov
or
xchg
ret
movs
jmp
std
or
sbb
sub
cmps
xchg
or
and
aam
call
pop
icebp
cmp
(bad)
nop
test
add
push
mov
mov
mov
fsub
imul
mov
add
popa
pusha
xchg
fnstsw
pop
out
xor
cdq
and
xlat
(bad)
in
and
and
mov
mov
imul
rcr
sub
jge
xor
adc
sar
mov
push
dec
mov
push
push
popf
out
xchg
xlat
cmp
sar
repnz
cmp
cmp
xchg
sub
(bad)
xor
das
test
aad
push
jb
mov
fucomp
aaa
dec
push
test
jae
popf
dec
push
jl
mov
(bad)
and
jg
xchg
jg
or
cli
pop
and
and
sub
fwait
or
add
outs
icebp
out
inc
sub
mov
or
sbb
sbb
or
inc
adc
pop
fwait
dec
adc
xchg
retf
scas
pop
jbe
into
dec
jmp
into
jne
push
and
fwait
arpl
jmp
test
ror
call
or
push
pop
jg
add
sbb
or
scas
mov
cli
jns
jg
leave
stos
icebp
adc
addr16
pop
icebp
loop
loop
and
or
aaa
jb
scas
into
ins
(bad)
adc
mov
lea
js
mov
dec
push
pop
lods
mov
push
repz
xchg
sub
(bad)
(bad)
push
mov
dec
cmps
sar
mov
icebp
movs
pop
sbb
imul
cli
neg
xchg
jae
sub
push
mov
adc
shr
ret
daa
ror
inc
ja
xchg
sar
cmp
clc
and
fidivr
(bad)
stc
pop
mov
inc
add
xchg
jg
mov
adc
ss
cmp
pop
dec
cmc
in
mov
jg
xchg
xor
div
dec
loop
loopne
or
jmp
cs
sub
repnz
mov
mov
push
lds
nop
retf
out
inc
je
xor
xor
(bad)
xor
push
stc
dec
xlat
add
leave
dec
test
adc
test
mov
mov
pop
dec
push
in
lea
or
movs
inc
(bad)
gs
loope
(bad)
jge
pop
push
cmp
cmp
jecxz
adc
push
jb
dec
mov
rol
int3
xor
in
xor
es
xchg
movs
sahf
xor
jmp
and
xchg
pop
adc
(bad)
dec
dec
mov
push
cmp
mov
jne
arpl
aas
cld
mov
mov
mov
(bad)
fdiv
test
xchg
jmp
sub
sub
jmp
dec
ret
sahf
or
(bad)
test
jmp
lods
cmp
inc
dec
fisub
out
in
push
mov
push
push
inc
test
push
xor
fs
push
call
in
cmp
cmp
clc
and
and
cmps
lds
xchg
sar
push
lock
test
cmc
(bad)
mov
test
test
mov
sbb
add
jge
sbb
shl
rol
pop
mov
je
enter
push
mov
rcr
add
xlat
inc
push
adc
sbb
js
sub
scas
movs
pop
jb
movs
test
loopne
shl
ret
test
or
adc
jne
test
xchg
push
lods
mov
sbb
mov
pushf
lock
sub
scas
ret
icebp
mov
sbb
sub
jnp
daa
aam
mov
mov
cmp
inc
xchg
or
mov
loope
popf
or
movs
scas
push
rcl
jmp
enter
ins
sub
sbb
xchg
mov
in
dec
xchg
addr16
fcom
frstor
outs
dec
cmp
jns
ins
mov
call
aad
jle
add
fwait
push
mov
retf
dec
sbb
mov
xchg
mov
xor
cli
out
and
xchg
(bad)
(bad)
sbb
push
pop
sahf
mov
jns
mov
mov
xor
pcmpgtw
ins
out
clc
popf
loope
pusha
push
fisub
mov
mov
mov
(bad)
push
add
jecxz
adc
sub
je
out
shl
jb
jle
aas
mov
xchg
test
inc
test
sub
adc
aas
fucomip
or
nop
jmp
es
lock
fsub
push
call
call
push
or
sbb
add
jno
ror
sbb
sbb
jno
push
xchg
mov
cmp
push
push
cmc
jp
jp
xor
dec
inc
and
gs
into
xor
jp
jle
dec
push
push
popf
add
not
mov
(bad)
mov
xchg
aaa
add
mov
je
push
cli
imul
enter
jmp
sbb
jbe
data16
cmp
sub
add
daa
adc
lea
stc
(bad)
scas
jl
sub
xor
xchg
sar
mov
test
sub
stc
jmp
repnz
or
mov
shl
aam
sbb
jl
out
xor
or
lahf
cmps
stos
mov
lds
mov
ins
pop
loopne
mov
(bad)
jmp
mov
jmp
or
mov
cmp
ins
mov
cmps
or
out
loop
loopne
xor
jne
pusha
loope
dec
add
sbb
loop
fbld
fbld
out
mov
or
(bad)
mov
lods
lahf
adc
js
shr
mov
mov
add
dec
fild
or
(bad)
ret
inc
inc
and
retf
sahf
jbe
jno
std
dec
popa
imul
repnz
push
and
fcmovnu
fcom
es
xor
pop
push
bswap
jmp
ds
inc
daa
sbb
mov
inc
mov
sbb
movs
or
jb
push
add
out
(bad)
mov
pop
push
popa
loopne
jb
or
lds
jne
movs
and
xor
ret
pandn
ins
loopne
sbb
add
xchg
out
and
push
jnp
in
mov
jns
or
fbld
(bad)
shl
cmp
adc
addr16
popf
rol
and
xchg
sub
test
adc
mov
mov
mov
retf
fild
adc
mov
iret
cmps
int
ud1
loopne
jge
fstp
sub
lods
fidivr
mov
div
hlt
cmp
sbb
clc
push
mov
and
pop
xor
xchg
adc
push
fisttp
leave
stos
dec
test
mov
(bad)
int3
xchg
test
ret
xor
jle
mov
(bad)
jmp
cwde
(bad)
test
mov
inc
cmp
lods
dec
push
pusha
push
outs
out
mov
div
add
push
or
xchg
sbb
jecxz
jg
test
call
xchg
jo
lock
retf
xor
xchg
sub
jne
aam
cmp
cmp
imul
outs
xchg
mov
outs
sahf
(bad)
or
test
sti
shl
pop
lods
or
add
pop
add
dec
xor
daa
add
jnp
fldenv
add
retf
mov
add
movs
sub
ror
pop
nop
jecxz
pop
in
cmp
adc
mov
idiv
jl
lds
cld
(bad)
jle
lock
cmp
jmp
fisubr
mov
push
jno
fwait
rol
push
lahf
add
add
es
movs
inc
in
mov
(bad)
cmp
add
jle
mov
mov
adc
lds
xchg
mov
clc
sar
shl
jp
push
or
mov
cmp
inc
test
dec
adc
adc
outs
and
aad
sbb
jne
cmp
cdq
retf
or
and
das
inc
ss
mov
cmp
sub
test
inc
cmp
iret
push
xchg
xor
push
out
icebp
or
sbb
rcr
mov
inc
ret
imul
and
pop
push
cmps
std
xlat
xor
jns
cmps
(bad)
icebp
inc
mov
hlt
mov
int
inc
add
dec
mov
fild
and
mov
xor
dec
cli
push
mov
jge
mov
add
add
inc
pop
out
and
mov
lahf
cld
mov
fidiv
lock
jmp
push
mov
jg
pop
dec
mov
test
aad
ja
mov
cmp
out
and
inc
cmps
ficom
ror
js
daa
mov
jecxz
and
fst
test
mov
cli
adc
pop
mov
fstp
clc
rcr
jnp
leave
shl
inc
shrd
and
push
in
sti
xchg
cmp
test
inc
enter
and
gs
shl
add
repnz
mov
into
(bad)
stos
inc
lods
out
dec
(bad)
imul
push
retf
int3
or
cmp
mov
out
sbb
ja
in
pushf
rcl
rcl
mov
ss
adc
retf
stos
repnz
jp
mov
pop
mov
or
mov
mov
xor
ins
add
in
fneni(8087
ss
sub
addr16
and
test
nop
xor
cdq
jo
inc
and
xchg
movs
mov
popa
jmp
xchg
sub
jne
xchg
mov
cwde
and
ja
jnp
dec
cdq
sbb
and
add
dec
in
loopne
std
jecxz
xchg
jbe
push
shl
dec
pop
pop
jp
outs
mov
sub
and
pop
xor
sbb
pusha
xchg
stos
xor
push
cdq
repz
mov
sti
jae
inc
adc
ret
xchg
or
idiv
fs
jo
jb
pop
inc
ins
add
inc
mov
pop
fiadd
fsubr
push
add
push
sbb
imul
mov
pop
call
loop
shl
mov
sub
shl
retf
retf
or
sbb
adc
into
jle
xchg
push
sub
jnp
clc
stos
jbe
ret
push
js
mov
pop
lock
xadd
push
je
xchg
xchg
sahf
(bad)
enter
ja
sub
xchg
or
inc
bound
xchg
and
cmp
or
push
inc
cs
fnstenv
rol
sbb
in
xor
add
jne
das
ret
push
out
shl
inc
mov
gs
jno
dec
jno
hlt
mov
sub
or
enter
pop
mov
cli
inc
dec
pop
rcl
pop
push
or
or
inc
hlt
mov
stos
ins
(bad)
fimul
sbb
in
push
daa
and
or
adc
mov
jle
inc
loopne
loope
and
mov
adc
ins
xadd
cli
jp
fstp
enter
rol
push
or
adc
aad
fadd
sar
es
jae
les
cld
ss
aam
fs
cmps
mov
jg
xor
mov
dec
leave
adc
dec
stos
add
cmp
mov
jns
dec
push
mov
add
jae
pop
call
pop
fdivr
xchg
adc
sub
inc
jge
adc
cmc
jge
pop
fnclex
pop
fild
icebp
ja
lea
lds
scas
sahf
mov
push
movs
mov
aam
jb
mov
xchg
sti
sub
xchg
adc
cmp
scas
pop
es
aam
leave
cld
movs
adc
adc
xchg
unpcklps
ror
sar
fwait
and
in
push
repnz
out
sub
sub
aaa
popf
scas
test
out
mov
push
loopne
cmp
into
inc
and
lgs
mov
(bad)
mov
mov
mov
xor
les
push
push
jecxz
leave
pushf
arpl
mov
repz
add
mov
mov
sub
cwde
jmp
mov
adc
push
rol
ret
iret
sub
jne
mov
dec
pop
pop
jmp
mov
outs
fcom
bound
cld
mov
ret
xor
push
mov
retf
xchg
push
or
mov
(bad)
inc
jbe
mov
dec
push
push
adc
cmp
dec
dec
ins
repz
les
sub
ficomp
gs
scas
push
adc
stos
test
in
mov
xchg
push
jae
shr
aam
dec
mov
jecxz
sbb
ins
adc
dec
sbb
aaa
or
(bad)
lahf
adc
loopne
xor
cmps
pop
xchg
gs
adc
jae
fld
ret
xor
adc
inc
int
aam
outs
xchg
jle
repnz
nop
imul
mov
(bad)
retf
retf
and
stos
xchg
sub
ins
test
add
push
xor
mov
cmc
cmp
mov
hlt
cmps
lea
icebp
fiadd
repnz
jno
mov
mov
pop
(bad)
test
inc
sbb
pushf
dec
int
add
aad
cli
fcom
push
test
mov
fstp
in
push
cmp
dec
cmp
sbb
sbb
into
mov
mov
xchg
std
shl
in
sub
leave
pusha
div
jns
or
xchg
sub
jp
push
mov
ret
mov
scas
pop
aaa
inc
mov
jge
jbe
adc
jns
dec
mov
pop
aaa
cmps
scas
mov
mov
xchg
xlat
leave
xor
out
jno
fwait
dec
iret
cmps
jl
aam
out
test
icebp
outs
pusha
loopne
gs
into
mov
loop
xchg
ret
test
retf
jge
invd
mov
fwait
rcl
aad
inc
mov
or
sub
std
ret
mov
repnz
shl
shl
add
inc
test
jae
dec
(bad)
bound
xor
imul
test
cmp
sub
(bad)
ds
cmp
sub
push
mov
xor
inc
inc
in
xchg
stos
sbb
imul
(bad)
popa
lahf
fucomp
popa
test
ret
cmp
test
pop
cld
cwde
mov
adc
jae
xchg
mov
imul
in
stos
adc
cdq
test
xchg
or
mov
mov
fidiv
jbe
int
add
cld
cmp
add
push
sbb
jle
in
or
lods
outs
xchg
fbld
pop
shl
imul
xchg
js
cmps
sbb
mov
adc
aam
fcom
ret
jbe
adc
es
jne
mov
mov
iret
push
icebp
fist
jne
push
arpl
out
xor
iret
or
mov
and
lahf
or
cli
mov
xchg
add
or
push
and
cmps
xor
cmps
sbb
out
and
in
lock
adc
and
or
add
sbb
test
cwde
mov
push
mov
xor
dec
pop
out
mov
test
call
mov
cs
add
aaa
popa
ins
mov
mov
and
mov
pushf
loope
sub
cmp
xchg
ins
jmp
not
icebp
clc
add
xor
mov
mov
cli
jmp
cmc
push
xchg
in
xchg
mov
xor
pop
mov
sahf
mov
mov
stos
ins
pushf
retf
cmp
pop
pop
cmp
lods
(bad)
shl
outs
lahf
sbb
and
pop
dec
and
jge
lods
and
enter
aam
and
push
or
shr
ins
shl
sbb
jnp
dec
rol
cmps
imul
fistp
sub
repz
js
jo
push
pop
mov
mov
inc
into
popa
test
retf
inc
cmp
fcomp
jae
inc
cmc
dec
sub
lods
lock
push
in
cli
leave
mov
xor
sbb
pop
out
mov
jmp
ror
lods
xor
sti
data16
and
sub
outs
cmps
mov
xchg
ja
(bad)
cli
test
mov
mov
dec
mov
and
ror
add
inc
fidiv
hlt
out
cmp
or
arpl
shl
xchg
sbb
push
dec
jno
lea
push
add
(bad)
xor
xchg
jae
and
or
pusha
adc
adc
adc
iret
imul
ret
mov
test
mov
unpckhps
adc
xchg
push
ror
fs
xor
add
(bad)
fistp
hlt
dec
pop
scas
jo
cmp
push
enter
xor
adc
fstp
inc
inc
imul
mov
inc
cld
(bad)
jns
sub
jbe
adc
ds
pushf
mov
push
push
xchg
push
push
cmps
cmc
fs
add
data16
ror
cmp
mov
repz
minps
imul
out
nop
ret
jns
push
gs
std
idiv
dec
clc
jne
cmps
fsubr
sub
push
xchg
sub
adc
jge
jnp
(bad)
and
inc
push
push
test
arpl
push
lods
adc
mov
(bad)
jnp
add
fs
mov
lods
mov
test
pop
push
sub
repz
ficomp
aaa
loopne
lock
pop
and
mov
mov
mov
mov
(bad)
xlat
xor
xchg
sub
ja
iret
leave
or
xchg
add
repz
adc
add
scas
or
into
xor
mov
fcomip
loope
add
mov
cmp
jg
stc
jbe
mov
call
adc
lahf
(bad)
ins
xlat
mov
push
loop
ss
fld
xchg
or
in
jnp
dec
add
fisub
outs
out
adc
xor
mov
(bad)
daa
sbb
shl
lods
dec
push
xchg
add
pop
aas
mov
mov
add
dec
fadd
aaa
mov
inc
imul
jmp
(bad)
sub
(bad)
icebp
popf
in
mov
daa
fnstenv
mov
mov
mov
mov
je
xchg
jnp
push
ins
stc
pop
loop
xchg
popa
pop
stos
inc
add
cmp
cld
out
call
je
jae
jecxz
inc
xlat
loop
sbb
mov
ret
push
push
mov
arpl
or
mov
push
jp
imul
fild
cwde
or
xchg
cmp
aam
mov
pop
repz
ret
cmp
ret
jecxz
xchg
adc
xchg
rcr
push
sub
pop
test
xor
repnz
mov
inc
mov
jae
(bad)
lods
int
jmp
pop
shl
pop
je
jne
push
movs
cmp
shl
dec
lock
xor
jmp
(bad)
adc
jae
leave
add
loope
ss
ret
stos
push
div
cs
mov
mov
fwait
pop
mov
ins
or
push
aam
rol
xor
pusha
mov
xchg
call
mov
retf
sbb
sbb
push
bound
dec
sahf
and
ss
div
stos
adc
dec
arpl
loope
push
inc
stos
test
mov
sbb
ds
sub
out
mov
(bad)
pop
repz
mov
data16
mov
mov
loope
imul
fidivr
sar
add
push
rol
clc
xchg
test
ret
or
mov
ret
dec
stc
test
xlat
inc
xchg
cmps
add
cmp
cwde
mov
inc
cmp
mov
das
pusha
mov
cmp
xor
dec
cwde
test
mov
mov
dec
cmp
lods
div
test
pop
div
jl
shl
push
mov
jae
movs
ss
or
fcmovb
in
cmp
gs
jmp
jmp
mov
xchg
int
ficom
push
ja
pop
dec
add
xchg
adc
pop
cld
xchg
sub
jnp
fisub
dec
scas
rcr
add
mov
aam
or
push
fwait
adc
push
out
ret
pop
fidiv
jbe
enter
pop
out
js
xchg
push
mov
mov
mov
sub
sub
mov
pusha
scas
(bad)
inc
ds
add
dec
(bad)
outs
pop
clc
inc
mov
mov
mov
inc
call
(bad)
mov
cli
dec
cdq
xchg
jne
push
adc
cmp
enter
addr16
jns
outs
loopne
push
repnz
(bad)
rcl
jl
xchg
ret
xlat
or
inc
rcl
outs
repz
ds
test
ror
enter
adc
inc
scas
mov
sbb
add
outs
lock
push
push
cmp
push
mov
es
mov
cmp
cmp
test
mov
dec
sub
jmp
sub
jmp
dec
push
es
mov
jge
popf
inc
pushf
mov
bnd
sub
mov
enter
dec
mov
push
push
xchg
mov
(bad)
inc
lods
clc
inc
jl
call
pop
and
scas
dec
xchg
outs
mov
sub
adc
imul
mov
retf
daa
xor
cld
add
stos
dec
fisttp
mov
nop
dec
xor
(bad)
fcomp
adc
out
(bad)
shl
sub
jno
je
adc
gs
movs
sub
in
stos
jp
int3
in
shr
popf
movs
xor
cmc
or
push
jg
movs
sti
adc
push
addr16
jo
std
stos
ret
mov
ss
add
mov
jle
dec
adc
xor
xor
cmp
(bad)
sub
mov
jae
fnstcw
xchg
or
fidiv
xor
rcl
lods
test
jbe
pop
out
xchg
mov
test
fnsave
mov
jle
and
xchg
dec
cmps
cdq
inc
or
into
or
dec
xchg
xor
int
jmp
into
sub
xor
mov
rcr
fs
lods
or
lahf
aad
lods
pop
iret
leave
add
cdq
inc
add
scas
ret
sub
jecxz
push
ins
push
xchg
in
ror
fs
jp
leave
inc
xchg
scas
lods
or
mov
jo
paddb
stos
dec
push
call
idiv
xchg
aaa
jno
push
sub
aam
dec
pop
ret
jbe
aas
sub
in
push
sub
test
aaa
in
imul
mov
out
pop
xor
mov
add
mov
shr
mov
add
xchg
inc
scas
add
mov
dec
loopne
rcr
dec
push
(bad)
daa
push
jo
sti
mov
(bad)
fcomp
push
dec
push
xor
mov
pop
stos
push
cmp
and
cmp
data16
add
rcr
test
jle
mov
mov
pop
inc
pop
or
sbb
imul
push
repnz
ds
xchg
ret
loope
xchg
daa
in
scas
ficom
pop
and
xor
mov
mov
lahf
or
inc
cdq
pop
xchg
add
or
inc
add
inc
dec
inc
sbb
add
cwde
mov
sahf
jmp
dec
sub
fstp
retf
rdtsc
in
sub
push
adc
or
(bad)
loope
mov
sahf
push
out
imul
icebp
mov
dec
dec
(bad)
pop
cmc
iret
jle
mov
pop
dec
cmps
push
sbb
js
mov
dec
dec
pop
inc
cld
popf
pop
mov
(bad)
neg
mov
dec
mov
xor
inc
dec
ret
jmp
pop
lahf
jmp
mov
mov
pushf
mov
sbb
pusha
inc
or
pop
lds
rcl
out
je
call
jl
xor
test
jmp
arpl
or
inc
sahf
popa
mov
mov
or
rcr
dec
dec
push
aas
xlat
push
inc
and
adc
mov
xchg
mov
stos
fadd
in
test
lods
or
pushf
and
div
mov
add
cmps
pop
data16
add
mov
dec
mov
pop
dec
mov
ja
or
push
fdiv
sbb
cdq
adc
inc
test
mov
sbb
inc
std
movs
fs
pop
sbb
cmp
loop
sub
dec
push
add
pop
(bad)
cmp
ss
clc
jle
iret
or
pop
(bad)
sub
adc
shr
fst
jecxz
fs
ficomp
stos
shl
inc
mov
or
cmp
outs
fsub
stos
push
or
fidivr
push
fstp
xor
(bad)
push
movs
mov
sbb
sub
movs
stos
test
mov
inc
nop
les
aas
out
mov
jle
cs
cmp
inc
call
(bad)
cmps
dec
retf
sbb
jae
pop
or
jecxz
jns
mov
inc
sub
pop
pop
lds
or
inc
(bad)
cmp
leave
pop
ret
or
sub
add
sub
ret
xchg
shr
fistp
enter
imul
pop
xchg
xchg
outs
jb
mov
ds
fimul
das
je
int3
ficom
retf
push
push
and
or
sbb
dec
add
popf
dec
leave
ror
jle
adc
out
jbe
jbe
push
out
mov
aad
fsubr
sbb
inc
lds
push
aam
mov
mov
lock
dec
fcmovb
mov
mov
push
ins
sub
icebp
int3
shr
xchg
addr16
push
scas
and
and
jmp
mov
sbb
test
fldpi
sub
in
sar
jp
sub
cs
mov
call
es
xor
cmp
mov
dec
and
mov
or
pop
jp
leave
and
xor
jl
inc
loop
pusha
pop
into
out
jo
inc
popa
sub
pop
pop
(bad)
xchg
cmp
loope
ret
inc
(bad)
cmps
add
fwait
cmp
xor
into
jno
shr
sbb
sahf
jb
sub
arpl
neg
pop
xor
lea
not
out
shr
xor
neg
sub
div
call
sub
fmul
or
pop
clc
ins
mov
fstp
clc
out
sub
imul
sbb
dec
mov
mov
shl
mov
jae
push
dec
setne
aad
cdq
jmp
int
push
sbb
pusha
mov
mov
shl
loope
jbe
jg
scas
in
in
adc
pop
fisubr
inc
push
push
pop
xchg
dec
ins
mov
adc
dec
jno
sub
stc
cmp
sub
add
mov
nop
push
cmp
aas
mov
and
cmp
inc
sar
ins
mov
jecxz
mov
sbb
push
ficom
pop
and
xchg
push
in
lds
jg
retf
movs
stos
sbb
into
jne
daa
out
gs
call
mov
push
aad
sub
into
and
aaa
sbb
dec
mov
cdq
psubb
jmp
ror
cli
jo
xlat
arpl
movs
mov
xlat
fwait
dec
pop
cld
push
mov
out
icebp
repnz
test
jmp
hlt
repz
pushf
mov
inc
push
mov
rol
sti
mov
in
or
mov
or
int3
add
inc
adc
mov
inc
pop
pop
hlt
add
push
out
xchg
in
cli
xchg
add
and
adc
inc
sub
adc
pop
xchg
xor
mov
push
inc
add
mov
sub
mov
in
sahf
xor
add
mov
sbb
inc
pushf
sub
scas
imul
fst
mov
imul
xchg
jno
cmp
fisttp
movs
and
xchg
sub
lods
push
iret
fsubr
(bad)
nop
pop
sahf
inc
cmp
jno
push
shr
ror
mov
out
jmp
adc
push
retf
jne
jb
adc
mov
add
mov
(bad)
imul
xor
adc
mov
push
bound
movs
aas
lods
test
not
ins
ds
jno
jo
ds
cmp
ror
mov
movs
jmp
mov
into
mov
fsubr
cmp
popa
(bad)
xchg
sar
loope
push
pop
in
cmps
sar
dec
mov
aaa
inc
aad
sub
inc
pop
sub
jg
and
ins
push
not
loop
rol
xor
fimul
add
sbb
test
adc
jbe
xchg
pop
xchg
je
ret
cmp
(bad)
mov
pop
xor
adc
cmp
cmp
adc
or
loopne
loopne
or
xor
mov
xor
jne
sahf
ficomp
sahf
leave
enter
pop
jmp
inc
jne
push
cli
mov
fild
fs
popf
shl
fnstcw
out
jmp
test
out
push
pop
aas
les
ret
into
sub
rcl
cmp
ficom
pop
mov
mov
or
pop
jle
cmp
pop
leave
popf
inc
mov
jmp
cmp
shrd
js
dec
in
outs
retf
mov
add
mov
cli
push
cmp
and
leave
add
push
or
fdivr
xchg
fidiv
dec
add
pop
inc
retf
jne
stos
rol
xchg
mov
pop
mov
mov
icebp
outs
jae
test
inc
lock
xchg
rol
test
pop
imul
ror
outs
std
iret
pop
mov
das
or
inc
mov
or
test
lods
js
inc
pop
les
sub
add
sbb
push
sbb
clc
mov
xchg
jno
js
imul
dec
out
inc
cmp
inc
std
sub
adc
dec
aad
ss
ins
cmp
add
mov
and
cli
or
inc
pop
add
mov
mov
in
sbb
adc
mov
push
xor
int
nop
daa
jle
dec
or
scas
enter
mov
sub
ret
cmp
scas
mov
pop
push
xchg
and
mov
mov
or
cmps
pop
imul
and
jge
mov
xor
cs
popa
or
jae
mov
jnp
add
fcomp
pop
pop
jo
mov
(bad)
cmc
adc
sub
xchg
sub
and
push
out
pop
movq
aam
ds
sub
jl
push
jp
sbb
jne
xchg
xchg
xchg
je
mov
outs
mov
jo
fst
icebp
popf
mov
push
pop
repz
pop
imul
xchg
mov
or
repnz
pusha
stos
je
test
stos
add
dec
cmps
in
pop
(bad)
scas
xor
jp
pop
xchg
xchg
mov
dec
outs
hlt
or
push
mov
fdiv
lea
inc
fstp
xchg
movs
movq
inc
ror
inc
cs
daa
mov
pop
movs
ja
hlt
add
push
retf
xchg
and
cmp
sub
pop
mov
repnz
fistp
aaa
outs
aad
mov
sar
jmp
retf
(bad)
cmp
add
cmp
jns
imul
inc
paddw
jmp
ret
push
dec
daa
push
push
sub
rcr
and
(bad)
ret
(bad)
fdiv
aaa
cli
mov
cs
pop
push
gs
xchg
imul
dec
mov
arpl
mov
movs
or
cli
xor
test
pop
and
or
and
fcom
push
cmp
cmc
pop
add
in
pop
test
movs
pop
cmp
inc
clc
ret
xor
jmp
mov
cld
xchg
jbe
into
call
mov
xchg
movs
dec
enter
in
test
mov
adc
fisttp
mov
and
mov
add
xor
dec
icebp
adc
xchg
gs
(bad)
lods
into
(bad)
cmp
sbb
jmp
pop
inc
jg
or
ins
inc
mov
and
int3
pop
sub
push
jne
xchg
mov
push
mov
pop
setne
adc
lods
lods
adc
or
iret
repnz
jbe
dec
xchg
stc
ja
cli
mov
sbb
xor
test
xor
adc
in
cld
les
push
pop
cld
or
dec
dec
and
ins
cmps
outs
add
lds
mov
sub
in
inc
aam
xchg
pushf
and
push
int3
add
jmp
mov
ds
mov
inc
fmul
jmp
call
jge
add
mov
dec
xchg
lods
lea
jl
stos
xor
sbb
xchg
mov
test
dec
test
sbb
stos
pop
mov
sbb
pop
mov
jg
jp
push
scas
jno
into
push
sbb
and
inc
xchg
mov
fwait
mov
jle
rcl
pop
out
rcr
ficomp
fdivr
dec
pop
push
push
or
sbb
dec
in
lahf
dec
and
dec
or
mov
in
call
call
mov
xchg
push
dec
fist
stos
std
add
test
mov
push
inc
jnp
add
adc
popa
push
add
mov
push
aad
ss
cli
sub
push
stos
frstor
xlat
cmp
mov
jl
inc
inc
mov
and
push
fcmovbe
gs
ss
aaa
out
mov
xlat
es
lds
jmp
or
test
pop
mov
(bad)
addr16
loopne
retf
jbe
inc
mov
mov
adc
test
(bad)
test
xchg
ins
push
xor
mov
or
dec
cmp
mov
repz
push
mov
push
jp
push
cdq
cmp
push
imul
rcl
aas
stos
test
lahf
test
dec
cmps
push
inc
lods
adc
xchg
inc
mov
daa
jecxz
mov
push
not
shr
sub
mov
mov
or
(bad)
pop
and
sub
ret
dec
jbe
cmp
xchg
add
sbb
cli
mov
and
inc
mov
imul
sub
sub
and
test
into
or
nop
sub
and
aam
cmp
pop
ret
outs
ret
jle
stos
xor
jmp
mov
lock
aam
adc
pinsrw
leave
adc
dec
xchg
sub
jl
sbb
and
ss
xchg
imul
cmps
repnz
jl
pop
sbb
popa
jl
pop
out
push
mov
sbb
test
mov
not
sahf
inc
jbe
jecxz
lods
xor
xor
imul
inc
shl
add
pop
mov
cs
xor
retf
inc
or
fisttp
mov
addr16
out
sub
frstor
mov
das
adc
adc
mov
jae
pop
sbb
iret
lahf
retf
in
cmp
jns
cmp
(bad)
and
pop
sar
sub
(bad)
fucomi
scas
or
cmps
fwait
xor
test
stc
mov
fwait
add
or
rol
shl
fsubr
jmp
sar
test
(bad)
in
cmp
push
iret
inc
or
loope
stos
mov
push
cmps
(bad)
out
or
mov
ror
popa
jecxz
repz
sar
stc
ret
mov
mov
call
mov
iret
cld
call
xchg
fisubr
enter
aaa
lods
movs
adc
or
not
xor
leave
sti
xchg
jb
ins
mov
sub
popa
push
cmp
mov
dec
pop
hlt
aas
xor
cs
fldenv
sar
jp
inc
imul
inc
out
jmp
retf
adc
push
in
(bad)
dec
stos
inc
push
xchg
(bad)
lock
xchg
mov
pop
mov
mov
mov
cmp
cwde
cs
test
fnsave
mov
mov
into
and
mov
mov
lock
pop
push
xchg
loopne
pop
jns
mov
arpl
and
retf
test
push
add
inc
jecxz
xchg
cmpxchg
and
mov
cli
adc
push
icebp
sub
cmps
xor
mov
and
xchg
out
inc
lahf
xor
xor
lahf
es
lock
xor
pop
cld
sti
xor
jge
in
jmp
test
or
stos
sub
std
and
fwait
xchg
xchg
xchg
(bad)
and
js
jg
scas
jmp
mov
aad
cdq
aas
and
mov
mov
mov
sbb
lods
aam
shr
sub
sbb
in
jnp
pop
sbb
cmp
xor
(bad)
aam
enter
adc
nop
inc
inc
and
aaa
dec
fdivr
inc
rol
(bad)
loope
rep
div
jmp
movs
dec
mov
sub
cmp
jl
jmp
cmp
mov
pop
dec
das
push
sbb
stos
sub
adc
out
mov
dec
pushf
cmp
sbb
sub
push
dec
sub
push
pop
into
enter
enter
call
shr
and
mov
mov
jge
xchg
out
scas
mov
lds
push
movs
popf
dec
add
sbb
scas
addr16
push
dec
xchg
cmps
mov
inc
adc
jge
jmp
pop
retf
lahf
lea
mov
or
xchg
xor
and
inc
js
inc
test
pop
jns
dec
push
neg
or
xchg
fidivr
cwde
adc
jg
and
cmp
mov
jae
ds
(bad)
mov
pop
mov
xchg
outs
xor
mov
pop
xor
mov
mov
mov
imul
rol
mov
sbb
ret
mov
push
cmp
loopne
pop
add
lds
push
push
sub
jne
sbb
xor
aas
cdq
push
idiv
jne
mov
push
retf
jp
in
pop
inc
leave
xchg
jp
out
inc
cwde
push
leave
retf
stc
outs
aaa
xchg
out
pop
dec
or
mov
push
fadd
mov
cmps
ja
mov
and
(bad)
push
xchg
jmp
mov
fnstcw
xor
les
ja
mov
arpl
inc
(bad)
jae
inc
mov
xor
rcr
xor
shl
cmp
mov
inc
mov
dec
aad
pop
out
ror
and
outs
gs
stos
fwait
adc
xchg
aaa
xchg
sub
mov
mov
les
les
and
mov
sub
fs
inc
sub
adc
mov
jl
rcr
xchg
in
cmp
jnp
pop
adc
xchg
outs
test
push
jl
cmc
rcr
fadd
jl
jle
test
loope
out
retf
outs
inc
mov
jns
xor
push
push
adc
and
test
ds
push
ret
jge
dec
push
inc
fdivr
jl
mov
sar
sub
jg
je
pushf
inc
add
gs
stos
jle
mov
mov
cmovns
cld
xlat
mov
mov
xchg
mov
fs
psubw
dec
cld
mov
dec
in
ja
jbe
test
(bad)
push
inc
mov
mov
xor
cmp
jmp
icebp
push
int3
add
repz
rol
dec
cmps
fnstcw
and
dec
xor
repnz
xchg
or
mov
pop
mov
mov
push
cmp
dec
icebp
imul
rol
(bad)
aas
repnz
dec
leave
jp
mov
push
outs
leave
lods
repnz
mov
xchg
loope
fild
xchg
sbb
sbb
jp
into
and
or
dec
stc
push
push
push
ficomp
push
cdq
jmp
push
je
sbb
mov
rol
mov
jns
mov
iret
lea
and
mov
int3
out
inc
mov
lods
dec
hlt
js
out
adc
gs
xchg
cmp
pusha
mov
and
sahf
pushf
dec
icebp
sub
shr
pop
ja
pop
imul
sub
fild
jae
mov
daa
and
jmp
les
pusha
cmp
push
or
cmps
in
nop
(bad)
jmp
(bad)
fbld
mov
stos
out
repnz
xor
enter
jmp
lods
xchg
jo
pushf
test
or
arpl
sub
leave
pop
sar
mov
rcr
pop
adc
fmul
mov
mov
pop
adc
xor
repz
stc
dec
es
addr16
mov
sbb
out
cmps
fisttp
and
cmp
test
cmp
dec
and
push
jle
sbb
jno
repz
imul
shl
imul
pop
or
push
mov
cdq
sub
in
jmp
ror
xchg
xchg
cmp
nop
test
imul
xchg
add
je
mov
in
push
(bad)
out
movs
pushf
popa
(bad)
icebp
shl
nop
pusha
jb
mov
sbb
xor
jge
push
pop
jp
clc
push
cmps
(bad)
stc
dec
cwde
retf
inc
sub
push
xor
or
lods
mov
add
and
imul
out
jmp
loope
sub
imul
mov
inc
cmp
mov
push
jecxz
mov
mov
movs
es
or
sub
pop
pop
icebp
stc
cmp
js
imul
xor
dec
jmp
into
jne
xor
std
dec
or
mov
fstp
dec
aad
xchg
jo
movs
mov
xor
or
test
mov
inc
push
jmp
jecxz
mov
dec
xlat
repnz
lahf
cld
jmp
xchg
fdivrp
jg
stos
xchg
jge
mul
fnsave
sub
leave
lds
and
mov
sub
out
cmp
xor
sti
sti
(bad)
rol
inc
xor
push
push
out
daa
prefetch
(bad)
pop
sub
std
mov
and
adc
cwde
and
and
xor
pusha
das
(bad)
neg
xchg
pop
jg
cmc
fsubrp
call
adc
push
sbb
sbb
push
mov
mov
and
lea
mov
push
(bad)
sti
push
push
push
loop
retf
jb
mov
jmp
mov
jmp
cmp
sub
push
(bad)
scas
jmp
aam
inc
scas
add
iret
cwde
test
mov
adc
cmp
push
out
push
sbb
xor
and
stc
js
jne
loope
das
sbb
je
(bad)
shl
pop
and
je
mov
repnz
xor
(bad)
pusha
(bad)
xchg
dec
in
pop
mov
stos
sbb
cmp
mov
cmp
cli
mov
jge
(bad)
imul
sar
inc
jge
out
xchg
lock
imul
pop
adc
mov
inc
push
add
xchg
xchg
adc
rcr
or
mov
adc
je
push
mov
xchg
push
fwait
sub
outs
mov
(bad)
shr
ds
jb
cmp
inc
xchg
adc
loopne
ret
add
aam
clc
pop
scas
outs
int
in
mov
js
pop
pop
dec
inc
jge
out
mov
call
outs
in
or
ficom
push
(bad)
xchg
pop
rcr
mov
nop
loop
and
movs
jne
stc
mov
retf
jno
(bad)
sbb
or
lahf
out
sbb
dec
pop
bound
jbe
bnd
jle
xlat
pop
lods
test
outs
aas
movs
fistp
push
pushw
and
imul
mov
mov
ret
dec
add
mov
repz
data16
jae
xchg
mov
mov
add
jno
and
adc
jg
inc
mov
fild
inc
cmp
add
ins
dec
mov
jno
mov
pop
mov
push
imul
call
xchg
es
das
sbb
jnp
pop
in
cld
pop
int
int3
iret
xor
imul
add
xchg
jne
sbb
jle
sub
adc
push
or
add
xchg
push
dec
mov
sub
inc
xlat
mov
pusha
lods
call
jne
pop
sbb
xchg
jmp
test
rcr
push
out
fldenv
(bad)
icebp
mov
inc
sbb
mov
lods
retf
fsub
cld
loop
popf
sub
cmp
pop
lock
or
pop
test
pushf
idiv
sbb
lock
fcom
dec
lods
adc
in
push
and
fcomip
jae
dec
xchg
mov
daa
or
mov
mov
dec
and
pusha
inc
xor
loop
stos
push
(bad)
jne
pusha
xchg
add
mov
push
or
mov
ret
addr16
ja
push
imul
xor
mov
cmp
sub
add
dec
(bad)
jmp
rcl
sub
mov
retf
xchg
pop
xor
cli
enter
pop
xchg
dec
jecxz
iret
scas
jno
and
fnstsw
cld
(bad)
(bad)
out
xor
std
call
mov
rol
jmp
imul
(bad)
adc
ror
jecxz
mov
fisub
cwde
repz
mov
fcomp
ins
lahf
or
bound
ret
ja
js
iret
leave
sbb
xchg
call
aas
mov
adc
pop
retf
inc
icebp
adc
push
dec
jmp
mov
xor
mov
imul
cdq
fwait
imul
es
pop
push
push
inc
pop
jb
(bad)
jo
sub
repz
push
push
cmc
out
(bad)
pop
shl
aam
xor
test
in
ja
mov
data16
and
les
iret
pushf
xor
(bad)
(bad)
or
movs
int3
(bad)
test
mov
jb
outs
inc
mov
ret
pop
cld
cmp
add
add
dec
cmp
mov
xor
inc
je
jb
mov
push
push
aas
jl
sahf
add
mov
xchg
call
xchg
out
in
or
jle
jns
fsubr
pop
mov
jp
test
jne
lods
mov
push
lods
mov
je
pushf
dec
inc
xchg
push
call
call
mov
sub
sbb
int
loopne
imul
pop
push
xchg
jne
mov
xchg
ss
aaa
mov
push
popa
push
jecxz
shr
mov
pop
jno
imul
inc
jno
test
pop
addr16
loop
and
ja
and
imul
dec
int
enter
and
dec
dec
lea
add
dec
imul
and
push
pop
add
out
int
int3
sahf
loop
sar
(bad)
ficom
call
mov
lds
and
jo
outs
add
js
stos
fmul
call
sub
and
(bad)
push
pop
push
call
jmp
dec
pop
out
jmp
inc
mov
xor
mov
add
gs
xchg
loope
in
sbb
fwait
jno
es
jmp
push
js
mov
fnsave
sub
cmp
or
gs
or
mov
jae
dec
mov
and
push
jae
enter
ss
ins
push
lds
xchg
xor
xchg
ds
int3
imul
push
les
jmp
or
cmps
pop
mov
xchg
loop
leave
jg
loope
mov
stc
lods
fstp
cmp
push
dec
in
mov
shl
xchg
sub
cmp
popa
(bad)
jmp
push
jns
xor
ret
mov
int3
repz
(bad)
push
push
(bad)
gs
sub
jb
add
jbe
and
pop
mov
jbe
dec
(bad)
in
pop
inc
or
push
data16
xchg
jg
iret
push
cmps
and
xchg
test
imul
(bad)
jp
pop
loopne
mov
jmp
jmp
ins
push
mov
cmp
daa
popa
je
(bad)
fwait
xlat
sub
in
pop
cli
ret
xchg
jmp
push
into
add
cmp
xchg
int
adc
jg
fdiv
sahf
fld
and
jmp
and
bound
cld
add
push
xchg
dec
test
and
lea
rcr
sbb
into
bound
inc
loope
xor
sub
lods
sbb
mov
bound
loope
jecxz
sbb
cld
pop
mov
push
sbb
xor
xchg
enter
sub
mov
cmp
test
rcr
pop
cdq
or
xchg
mov
push
dec
cmp
daa
std
pusha
stos
mov
jmp
jns
data16
out
jns
cdq
dec
(bad)
mov
repnz
repz
jns
jns
nop
dec
or
cli
ins
jo
xchg
cmp
stos
push
jne
mov
outs
sub
(bad)
data16
jp
cdq
enter
inc
add
and
mov
or
or
jbe
cwde
cmps
mov
inc
mov
mov
imul
aaa
test
sub
dec
iret
mov
rcl
push
xchg
stos
push
cli
mov
ds
enter
sub
cmp
fsubr
mov
aad
sbb
in
mov
mov
daa
inc
ror
sub
push
dec
xchg
cmp
sar
jne
and
sub
pop
shl
fdivr
mov
rol
shl
in
loopne
call
aas
das
or
icebp
sahf
jnp
cmp
xor
sub
fmul
shl
push
jp
add
mov
sub
dec
adc
jle
out
mov
nop
jae
inc
out
xchg
xchg
addr16
mov
stos
movs
fdivr
mov
outs
popa
mov
mov
cmp
ja
mov
pop
push
les
mov
jnp
sbb
mov
xchg
mov
xchg
fwait
out
sbb
jl
call
scas
mov
or
push
pushf
pop
out
jg
fistp
or
test
mov
ins
push
or
xchg
inc
les
pop
mov
add
jns
dec
std
xor
(bad)
(bad)
adc
xchg
std
call
movs
dec
cmp
int3
std
fild
push
and
mov
popf
jne
jl
xchg
xchg
sbb
xor
push
call
pusha
test
adc
inc
call
push
ja
call
fcomip
jno
addr16
btr
jns
fdiv
mov
test
call
or
and
inc
cwde
push
or
adc
xor
mov
mov
out
pop
fs
dec
mov
js
sti
into
inc
cmp
imul
ds
test
test
and
iret
mov
leave
dec
inc
cmps
outs
sbb
inc
stc
call
dec
int3
mov
aas
call
inc
jns
mov
mov
daa
sub
mov
inc
jg
movs
adc
test
cmps
pop
aam
xor
in
jge
shl
rcr
push
ret
jno
mov
sub
and
cmp
dec
leave
sahf
xor
retf
push
js
xchg
jne
mov
push
xor
icebp
xchg
push
cmp
or
pop
pop
jmp
fisub
cli
jno
mov
call
daa
lock
pop
aas
mov
in
mov
int
mov
aam
sub
cmp
jnp
push
fnstcw
jge
add
mov
sub
push
inc
xchg
into
sub
(bad)
sbb
ss
push
out
dec
icebp
mov
outs
mov
inc
mov
jecxz
pop
rcl
jle
pop
lahf
hlt
xor
stos
arpl
adc
xchg
push
add
rcl
test
xchg
imul
retf
cmp
mov
ins
dec
popa
int3
pop
mov
outs
sar
imul
lods
sti
cmps
mov
xchg
jp
cmps
mov
mov
jno
scas
sub
mov
cmc
mov
ins
retf
jbe
fwait
push
push
(bad)
pop
sbb
es
add
mov
inc
dec
adc
test
pop
xchg
jae
adc
iret
outs
imul
or
xchg
jle
mov
push
pop
xor
cmp
aaa
aaa
aas
pop
mov
rcr
mov
(bad)
dec
lods
sub
shr
inc
or
inc
push
cmps
pop
sub
xor
pop
inc
mov
pop
cli
in
repz
or
or
and
call
stos
mov
je
dec
sbb
add
xchg
fwait
inc
inc
lea
sbb
lea
cdq
push
inc
jmp
jl
cmp
and
mov
dec
jmp
inc
xchg
ret
pop
dec
ficomp
into
popf
daa
and
and
clc
jno
add
outs
sbb
add
xchg
mov
mov
int
add
int3
inc
sbb
sbb
add
mov
dec
mov
dec
movs
ins
test
fs
ja
lock
or
pop
test
mov
mov
add
mov
dec
sub
adc
aaa
xor
mov
loopne
xchg
test
jp
popf
push
pminsw
test
neg
fsub
add
pop
jnp
xchg
aad
push
and
or
cmp
push
and
add
lds
push
fs
mov
cdq
pushf
and
cmc
retf
mov
shl
inc
or
ins
jb
out
ins
in
sbb
rol
cmp
and
scas
es
push
mov
sub
push
jp
stc
rol
jo
psubusw
jmp
fwait
xchg
movs
mov
fadd
in
outs
pop
xor
movs
sar
imul
(bad)
sahf
mov
xchg
dec
popa
cwde
jnp
xor
cmp
std
scas
imul
or
ja
(bad)
scas
stos
pop
mov
jmp
mov
ins
jecxz
loop
pop
jl
sub
pop
les
jno
mov
cli
scas
xchg
push
dec
sar
mov
outs
xor
adc
pop
sub
mov
mov
push
in
(bad)
ror
xchg
push
jns
mov
push
xchg
xchg
sub
idiv
push
cwde
mov
jo
idiv
jge
xor
dec
addr16
fldenv
sbb
data16
dec
cmp
or
adc
pop
xor
xchg
movs
xlat
adc
aam
(bad)
adc
push
fwait
pop
movs
mov
cdq
cmps
outs
mov
dec
int3
repnz
xchg
dec
out
jl
cmp
push
in
jnp
sub
out
repnz
sub
addr16
(bad)
rol
into
mov
lock
mov
mov
test
push
adc
xor
add
cwde
inc
xor
dec
add
jmp
inc
adc
pop
inc
mov
lea
fist
idiv
mov
or
adc
repz
push
sbb
(bad)
(bad)
sub
mov
pusha
test
jo
ror
xlat
cmc
out
fmul
and
sub
icebp
(bad)
movs
sub
mov
hlt
and
jns
imul
hlt
mov
aad
xchg
sub
push
retf
push
addr16
movs
adc
inc
sbb
sbb
outs
in
mov
stos
mov
pushf
xchg
jmp
jmp
mov
lods
mov
mov
mov
add
pop
lea
fidiv
daa
(bad)
stc
outs
clc
dec
ins
pop
je
inc
add
cmps
mov
cmp
add
sbb
lods
ss
or
mov
out
(bad)
or
dec
out
mov
mov
aas
xor
mov
xchg
popw
pop
add
cdq
clc
mov
cmp
popa
mov
mov
jmp
ja
fmul
test
push
ret
pushf
add
ins
fisubr
iret
fild
shl
leave
mov
out
xchg
cli
push
xlat
cmp
cmp
push
dec
mov
cmps
mov
sub
into
and
in
pop
fidiv
pop
push
ror
cmp
pop
outs
clc
into
cmp
jge
mov
data16
scas
hlt
test
inc
xor
gs
sar
mov
jle
(bad)
mov
popf
mov
loopne
imul
enter
int3
imul
jmp
das
loop
inc
lods
or
push
cmp
mov
call
pop
mov
pushf
pop
mov
pop
sbb
xlat
push
in
cli
push
pop
div
ja
adc
fldcw
fist
sbb
popa
mov
pop
mov
dec
lods
jg
in
fdiv
mov
dec
jbe
mov
int
xor
or
loope
clc
push
(bad)
mov
cwde
cmp
leave
pushf
push
cld
icebp
push
cmc
mov
ret
idiv
push
out
jbe
dec
call
bound
(bad)
push
repnz
inc
hlt
or
jmp
inc
cmps
push
mov
(bad)
mov
les
std
mov
sbb
out
(bad)
out
in
mov
std
mov
xor
hlt
popf
ins
ja
jmp
es
mov
mov
inc
push
push
call
mov
inc
in
and
mov
or
mov
test
loop
out
pop
xchg
(bad)
sbb
inc
mov
pop
cmp
sub
pusha
mov
push
fsub
cli
and
fwait
scas
cmp
jns
inc
jno
fiadd
shr
es
outs
mov
ja
or
hlt
fwait
test
es
mov
jmp
mov
pop
ins
xchg
adc
movs
lds
and
adc
repnz
dec
(bad)
jg
fild
sbb
pop
sar
leave
xor
inc
dec
mov
(bad)
fcomi
and
sbb
pop
mov
dec
sub
test
shr
in
(bad)
fcmovu
sti
mov
retf
or
je
and
add
popf
xor
cdq
(bad)
fld
mov
add
push
enter
jmp
pop
pop
adc
cli
cdq
lods
sub
mov
sbb
adc
fsubr
jl
or
add
and
imul
inc
(bad)
gs
and
pop
mov
in
xchg
inc
push
push
fbstp
push
pop
ja
jmp
mov
cdq
jecxz
aad
mov
kmovb
jno
dec
xchg
dec
pop
stc
mov
push
pop
pop
(bad)
inc
xor
sahf
dec
dec
push
cmp
stos
lds
std
(bad)
jbe
xor
mov
fiadd
add
addr16
rol
mov
xor
fistp
dec
test
mov
pop
je
out
ret
or
sub
loop
pop
cmp
and
test
xchg
mov
loope
test
jne
fwait
das
push
cmp
push
xchg
fldenv
pushf
or
push
and
push
sahf
xor
or
fidiv
sub
pop
aam
pop
arpl
outs
repz
fistp
pop
adc
pop
fnsave
push
call
and
loope
loope
push
dec
xchg
sbb
scas
xchg
ins
pop
and
shr
inc
ret
es
in
sbb
out
stos
stos
push
sub
cwde
(bad)
sbb
test
pop
pop
lea
shr
fild
push
mov
test
dec
aaa
test
cdq
jb
mov
push
add
jmp
addr16
add
in
inc
daa
rcr
sti
pop
into
dec
pusha
cld
adc
and
ret
scas
ss
out
mov
xchg
(bad)
cdq
sahf
jmp
jge
fs
call
clc
(bad)
sbb
in
sahf
stos
inc
lahf
push
mov
out
and
in
sbb
mov
jmp
popa
in
xchg
xor
mov
sbb
pop
jge
data16
dec
repz
scas
or
movs
jno
push
or
lds
xor
scas
cmp
jbe
xor
and
pop
imul
vcvtdq2ps
ins
hlt
inc
outs
mov
sbb
mov
mov
sub
jg
inc
mov
pop
pop
outs
jo
fadd
xor
seta
cmp
inc
popf
retf
push
push
xchg
jb
inc
adc
xchg
mov
cmp
mov
inc
ret
mov
gs
outs
(bad)
xor
imul
fwait
xor
and
inc
pop
je
jl
ror
lds
rcr
enter
push
pop
loop
mov
pop
jb
imul
adc
xchg
mov
xchg
mov
jae
jbe
imul
xchg
cld
xchg
pop
jbe
adc
sbb
stos
mov
cmc
js
dec
xchg
lock
(bad)
sbb
mov
dec
mov
push
cmp
adc
mov
mov
(bad)
jae
sub
sbb
mov
dec
retf
loop
pop
mov
les
retf
push
aaa
mov
nop
mov
loop
aad
fisttp
fst
pusha
loopne
push
and
and
lock
sahf
es
mov
sub
jno
test
aam
adc
xor
cmp
into
push
add
sub
push
mov
in
enter
dec
adc
arpl
dec
ror
movs
in
cs
into
pop
(bad)
adc
sbb
mov
das
pop
push
and
shl
sub
cmp
jmp
xchg
and
or
je
push
fs
adc
mov
jno
outs
cmp
test
add
xchg
inc
and
cld
lock
stos
test
lock
pop
popf
in
mov
adc
jmp
addr16
ds
test
push
bound
sub
aad
popf
adc
and
cdq
dec
test
or
addr16
aaa
sahf
into
(bad)
cli
adc
ret
xor
es
dec
or
or
call
aam
and
jb
or
imul
pop
shr
out
or
cld
sbb
push
push
add
ficom
cmp
sub
mov
ret
retf
aas
ret
adc
add
push
inc
xchg
dec
(bad)
adc
inc
adc
sbb
aad
dec
mov
loopne
adc
cmp
jmp
or
loope
pop
jno
hlt
jae
dec
xchg
ja
push
call
adc
adc
jae
cmp
or
push
bound
push
ret
push
jno
shl
dec
aam
rcl
jb
jecxz
push
cmp
jns
xchg
or
pusha
arpl
in
aaa
push
hlt
push
push
test
or
jae
xchg
lods
add
fcomi
push
sbb
das
mov
dec
cld
xor
sar
retf
ds
cmps
ret
sub
xchg
pusha
lahf
lock
int
out
lea
mov
movs
pop
inc
pop
and
(bad)
xor
and
jg
jae
stos
mov
push
loopne
sub
loope
je
aad
push
or
out
mov
xchg
clc
xchg
xor
ins
xchg
sub
sub
and
iret
lea
mov
rol
xchg
ror
add
and
mov
call
sbb
fistp
cmp
(bad)
call
ret
add
xlat
lea
jmp
mov
dec
repnz
mov
scas
xchg
inc
sti
xor
xlat
jns
inc
mov
in
jl
retf
ins
arpl
jge
adc
cli
outs
lods
and
fld
jne
push
inc
cmps
mov
fs
xor
push
mov
(bad)
sbb
retfw
retf
sub
nop
cmp
mov
dec
sar
push
mov
pop
sub
enter
dec
add
(bad)
cmp
sti
pop
in
or
lock
sub
cdq
outs
outs
dec
xchg
mov
test
inc
xchg
adc
pop
ds
xor
xor
neg
cmp
push
fs
dec
into
cmps
loopne
pop
mov
hlt
cmp
pop
xchg
ficom
push
jno
pop
in
xchg
sub
popf
inc
cmp
in
iret
adc
enter
ret
imul
test
daa
out
pop
dec
mov
lds
sbb
adc
or
je
call
pop
push
inc
ds
mov
jp
ret
retf
ret
xor
out
pop
mov
or
push
or
ror
xor
push
lea
scas
test
add
or
jno
test
fsub
mov
(bad)
and
mov
cli
cs
nop
pushf
add
jo
dec
mov
cmp
shr
mov
mov
test
fs
sbb
(bad)
cli
jnp
sti
push
imul
push
bound
addr16
mov
cmp
ret
sbb
fnstcw
call
mov
xor
dec
fnstsw
aaa
and
pop
jno
(bad)
xchg
rcr
cmps
sbb
ror
xchg
dec
dec
mov
inc
xchg
lds
add
jno
out
push
bound
aaa
movs
mov
jmp
shl
int3
movs
outs
stos
push
fsub
xchg
in
inc
sub
jno
call
add
sub
adc
cmp
arpl
sahf
pop
in
sub
std
sbb
pop
aad
xchg
vpaddsb
jp
mov
mov
xor
lods
int
test
mov
fild
or
and
jecxz
sbb
mov
inc
jne
std
mov
fstp
xor
repnz
jle
mov
sub
call
aam
or
jmp
fdivp
or
sbb
sub
adc
push
mov
inc
(bad)
in
push
jne
lds
jbe
cmp
or
scas
xchg
enter
fisttp
xor
mov
jmp
sub
xchg
imul
push
fisub
jb
mov
js
not
and
sbb
pop
outs
aas
fidiv
push
fs
sti
sub
std
and
pop
add
dec
inc
cs
or
jmp
inc
jecxz
xlat
into
cmps
imul
push
dec
jo
xor
imul
xor
adc
xchg
clc
and
daa
or
shl
pop
ficomp
pop
pop
pop
xor
add
add
popf
xchg
lahf
jmp
xor
push
mov
pmulhuw
inc
push
xor
add
mov
jnp
lock
dec
mov
hlt
lods
mov
imul
cmp
pop
mov
pop
sbb
retf
js
jo
cdq
jo
jecxz
ins
imul
mov
cli
mov
jbe
bound
xor
stos
lds
shl
adc
add
stos
mov
cwde
pop
movs
ins
imul
dec
aaa
stc
sbb
in
and
mov
outs
rcr
aam
call
mov
mov
xor
mov
mov
sub
sbb
push
inc
jo
add
add
icebp
repz
(bad)
push
sti
jbe
mov
push
dec
bound
clc
jmp
sbb
fimul
vpcmpgtb
xchg
lods
test
iret
fidivr
rol
scas
cmp
aas
stos
mov
test
push
sub
lods
jo
inc
bound
mov
fsubr
cwde
int
(bad)
dec
mov
cli
leave
ror
mov
mov
jl
adc
jo
rcl
les
add
mov
pop
cli
imul
das
jno
push
cmps
es
jnp
jmp
gs
pop
cmp
fadd
jg
pop
icebp
push
inc
push
scas
(bad)
hlt
sub
lds
addr16
sbb
leave
fstp
xchg
xchg
mov
sbb
ds
pushf
mov
jecxz
adc
adc
fcomi
rol
mov
ss
rol
jne
outs
(bad)
sahf
inc
mov
cwde
hlt
mov
retf
push
scas
and
jmp
out
mov
cmp
jmp
rep
popf
fnstenv
(bad)
pop
fabs
jge
xor
call
sahf
xor
sub
jbe
push
sti
xor
fild
shl
out
or
iret
dec
jno
retf
iret
pusha
inc
je
in
ficomp
push
push
icebp
cmp
icebp
fcmovb
pop
inc
or
pusha
nop
or
scas
sbb
retf
and
cmp
xor
push
adc
in
inc
clc
pop
push
cmp
test
add
scas
aam
cld
pop
xor
mov
pop
xor
shl
mov
sub
retf
inc
inc
xor
push
shl
das
lods
jmp
pop
movs
das
sbb
xchg
jmp
lds
mov
test
call
pop
xchg
dec
add
out
mov
cli
xchg
cdq
sub
push
or
sahf
loope
call
arpl
lds
adc
sbb
(bad)
mov
fisttp
sbb
mov
add
push
add
or
or
jnp
pushf
fisubr
bound
sbb
mov
fst
not
sub
into
push
xchg
xchg
sub
sbb
adc
sub
shr
gs
xchg
adc
sub
sar
dec
out
pop
int3
ja
sbb
push
aaa
inc
shl
push
ins
fcomi
push
imul
xor
pop
or
test
jmp
dec
push
xchg
enter
clc
enter
js
inc
adc
lods
mov
push
fwait
add
ret
ror
cli
fstp
(bad)
add
repnz
lods
dec
mov
mov
into
sub
inc
mov
and
and
ret
arpl
sbb
adc
mov
(bad)
stos
(bad)
mov
pop
jle
adc
mov
mov
rcl
jae
icebp
mov
(bad)
ficomp
outs
mov
cmp
push
cmp
cmp
pusha
inc
and
jnp
out
jno
mov
and
(bad)
dec
test
jg
out
xchg
int3
(bad)
jns
and
pushf
retf
out
outs
test
mov
mov
mov
pop
sar
jmp
outs
cmp
ins
sbb
adc
cmps
add
add
mov
mov
pop
mov
cmp
je
lds
sub
mov
pop
nop
sub
inc
pop
pop
jno
fidiv
push
out
repz
pop
and
div
add
add
lds
ret
aam
add
cwde
mov
outs
fwait
test
add
in
adc
inc
test
imul
mov
mov
cmp
into
inc
cli
adc
das
push
pusha
cmp
and
sub
push
ds
arpl
test
aas
sub
pop
adc
cmp
fsubrp
(bad)
(bad)
jle
mov
push
fadd
push
mov
and
xchg
lds
sub
jge
comiss
sub
and
js
sbb
ror
jae
ret
inc
mov
call
arpl
mov
inc
loopne
out
ds
push
data16
sub
adc
cwde
out
or
cmps
out
into
mov
cmp
mov
push
mov
neg
and
pusha
xor
in
cld
sub
ret
pop
ret
push
push
pop
xlat
or
es
inc
mov
ss
cli
mov
push
adc
xchg
repnz
fwait
scas
mov
test
int3
push
imul
fnstcw
mov
inc
lods
and
push
stos
jns
pop
jns
push
sbb
add
mov
mov
xor
mov
lea
lds
arpl
cmp
ss
cmp
sub
ror
cmp
cmc
jnp
inc
mov
adc
out
(bad)
movs
pop
jge
sub
loopne
add
xlat
das
test
mov
cmp
xor
jl
and
mov
jno
xor
dec
je
sti
mov
xchg
adc
jecxz
in
call
(bad)
fldenv
fs
pop
shl
mov
test
and
jbe
push
or
lock
or
adc
xor
and
jmp
fdivr
cli
mov
xor
or
cwde
and
lahf
mov
mov
hlt
mov
or
stc
jbe
mov
dec
add
daa
jae
in
and
loope
out
dec
or
cwde
stos
mov
and
es
xchg
jecxz
xchg
call
dec
out
fidivr
dec
dec
shl
popa
out
test
push
jae
add
inc
adc
mov
pop
jne
add
mov
pop
retf
cmp
movs
or
popa
sar
loop
mov
add
hlt
push
adc
and
ret
pop
or
out
inc
mov
jp
clc
push
dec
movs
pop
ins
jmp
xchg
mov
ret
xchg
dec
fs
cld
adc
pop
cmp
pop
data16
shl
lea
fwait
mov
push
jne
ins
xchg
jmp
pop
jne
stos
adc
or
sar
leave
dec
mov
mov
pushf
mov
xlat
mov
adc
out
mov
mov
cdq
dec
loop
push
pop
sbb
mov
mov
lods
push
mov
or
bound
xor
gs
inc
push
ret
and
cdq
dec
jb
jge
fsubr
mov
xor
or
lds
add
dec
retf
stos
mov
shl
imul
dec
pop
push
ss
pop
inc
jmp
jl
xchg
ins
xchg
rcr
mov
inc
outs
adc
push
cli
popf
and
inc
(bad)
mov
data16
jge
ds
loop
mov
mov
mov
in
push
mov
mov
jne
cwde
rcl
sub
and
jnp
pop
iret
mov
fisubr
xchg
fst
shr
adc
pop
cdq
xchg
mov
out
mov
enter
mov
in
push
xor
aam
xor
into
push
popf
nop
jmp
stos
test
mov
int
sub
fstp
retf
cdq
add
add
push
mov
cmp
loopne
cdq
pop
js
mov
iret
mov
xchg
lods
fsub
lds
nop
fldcw
adc
ja
shl
sbb
ds
lock
jns
mov
(bad)
ds
hlt
jmp
push
mov
mov
inc
and
ffree
xlat
ins
neg
repnz
stos
pop
cmp
shl
or
call
pop
xchg
leave
sub
adc
mov
adc
ss
call
dec
adc
fnstsw
mov
scas
add
and
sbb
mov
js
sbb
dec
int3
add
jne
dec
mov
gs
sub
aas
enter
nop
ret
cmp
test
or
push
dec
push
cmc
rol
fdivr
stc
outs
inc
lea
cmp
xchg
sub
ins
dec
sub
cmp
call
push
ret
and
hlt
loopne
lds
mov
imul
push
adc
arpl
call
js
in
imul
sbb
pop
inc
(bad)
fsubr
(bad)
movs
push
leave
xor
nop
cwde
or
xchg
sub
cmp
shr
nop
out
mov
adc
jmp
cmp
ret
out
xchg
pop
dec
mov
sub
xor
outs
xor
dec
cmp
sbb
cmp
adc
mov
ret
fs
cmps
daa
mov
adc
inc
test
xor
dec
xor
push
and
cwde
ret
addr16
sbb
shl
mov
je
or
adc
ins
sub
out
push
call
and
inc
in
repnz
push
out
scas
mov
xor
fs
test
arpl
mov
mov
dec
mov
sbb
loopne
ja
lahf
out
fidiv
mov
mov
ins
cmp
jne
jnp
mov
and
(bad)
in
(bad)
loopne
xchg
pop
adc
ror
sub
sub
xor
adc
lds
dec
push
dec
jbe
aaa
xchg
fidiv
in
js
cmps
outs
sbb
add
(bad)
idiv
sbb
jecxz
fcom
cdq
dec
rcl
loope
js
cwde
dec
rol
sub
xchg
or
mov
mov
inc
cwde
mov
push
mov
test
dec
push
jl
out
clc
jbe
sub
bnd
sub
daa
lods
(bad)
in
pop
(bad)
sub
fwait
jg
(bad)
ss
jmp
jae
popa
or
movs
rcl
dec
shl
xchg
(bad)
jbe
xlat
(bad)
jp
mov
and
push
push
jmp
cmp
add
cmp
add
mov
cmps
movs
pop
sti
jp
lahf
lock
dec
cmp
movs
pop
int
mov
push
pop
dec
xlat
jnp
mov
aaa
jne
sbb
xor
shr
lods
mov
sbb
pushf
dec
out
mov
out
xor
cdq
mov
inc
sbb
and
mov
jne
arpl
movs
(bad)
lods
das
in
jecxz
pop
sbb
jg
push
sub
pop
lods
jb
cli
int
das
mov
shr
stos
xor
pop
ficomp
or
sub
test
(bad)
rcl
ss
fdiv
movs
(bad)
cwde
cdq
hlt
in
pusha
out
xchg
call
dec
add
bound
jge
mov
mov
data16
ss
mov
cdq
pop
xchg
(bad)
pop
jmp
lahf
adc
les
jne
fadd
jns
ins
or
mov
xor
adc
mov
sbb
nop
fs
movs
xor
cmp
adc
inc
gs
neg
adc
jbe
mov
mov
imul
add
into
arpl
test
push
jg
add
inc
sub
mov
clc
push
lods
int
test
push
pop
pop
pop
cmc
iret
cmps
adc
xchg
ret
cmc
mov
inc
pop
push
aad
mov
pop
mov
mov
cmps
cmp
(bad)
cmp
mov
ins
ds
in
dec
inc
test
sti
test
pop
add
fiadd
mov
(bad)
cmps
mov
sbb
fiadd
in
mov
jne
test
cmps
mov
scas
or
inc
dec
es
fdivr
repnz
cli
pop
repnz
shl
adc
loope
sar
adc
fwait
not
jmp
js
scas
mov
(bad)
fdiv
dec
jae
retf
icebp
sub
repz
lock
push
xchg
in
cmp
pop
xor
dec
shr
retf
leave
mov
pop
xchg
mov
mov
jle
jecxz
inc
xchg
aaa
xchg
arpl
shl
ret
and
inc
data16
dec
cmp
fstp
and
into
mov
inc
inc
(bad)
pop
out
sub
enter
dec
dec
push
push
outs
adc
cmp
dec
add
jle
sbb
push
in
inc
imul
rol
outs
aam
or
dec
(bad)
jmp
daa
std
(bad)
jbe
push
cmp
push
push
(bad)
cwde
cmp
ret
cld
pop
int3
clc
daa
cwde
xor
xchg
je
leave
adc
mov
arpl
inc
mov
inc
cmp
test
lock
and
mov
mov
fs
mov
mov
mov
aad
push
mov
or
dec
rol
out
adc
sar
cmp
cwde
aam
inc
adc
fiadd
push
pusha
cmp
push
pop
pop
or
mov
rcl
push
repz
adc
cmp
call
jmp
mov
popf
cmp
test
mov
adc
mov
rcl
pop
xor
data16
inc
pop
xchg
aas
xchg
test
movs
mov
add
jns
cmps
out
or
(bad)
loop
stos
sub
add
mov
mov
lahf
mov
das
add
lock
daa
fdiv
daa
ja
sbb
clc
inc
mov
cmps
jbe
(bad)
and
rol
mov
sbb
adc
(bad)
aas
cmp
fdiv
retf
mov
and
ins
or
mov
call
pop
push
je
sbb
ins
cld
add
cmp
pop
xor
je
adc
test
jnp
lods
xchg
ret
dec
cli
das
sub
loope
and
jno
pop
add
sbb
outs
(bad)
in
add
icebp
lods
mov
push
rol
addr16
push
mov
int3
addr16
jge
test
mov
es
pop
stos
and
xchg
sar
ins
pop
in
add
jle
push
data16
xchg
gs
xchg
push
inc
aad
mov
outs
pop
pop
dec
in
cs
jno
in
cmc
call
jnp
enter
(bad)
(bad)
add
rcl
sbb
mov
mov
in
mov
adc
fld
retf
mov
pop
daa
ret
mov
rcl
rol
in
sub
jmp
jg
cmp
sbb
cs
and
cmp
dec
addr16
inc
aaa
sahf
test
js
test
mov
dec
sub
mov
int3
sbb
lods
aad
std
lahf
ins
dec
mov
xchg
out
fld
mul
test
push
dec
sahf
lds
aaa
pop
cmp
inc
popa
pop
cdq
adc
xchg
repnz
outs
pushf
adc
sbb
es
mov
shl
int
imul
xor
xchg
xor
mov
sbb
fld
mov
aaa
in
sbb
stc
cmp
mov
sti
ficomp
loopne
ins
call
aam
sub
out
(bad)
outs
fwait
inc
adc
cmc
sbb
mov
inc
sub
cs
fistp
dec
mov
pop
push
(bad)
stos
out
dec
(bad)
pushf
inc
push
or
or
push
xchg
or
mov
mov
cmp
fisttp
fistp
inc
add
inc
mov
jp
jp
mov
cdq
pop
cmp
loope
in
hlt
in
adc
js
or
inc
lea
or
cmp
dec
shl
pop
and
sub
aas
ret
jno
int
(bad)
les
and
mov
stc
push
xor
pushf
ins
(bad)
mov
(bad)
bound
mov
xchg
and
inc
sub
test
adc
cmp
and
inc
ds
sub
aam
cmps
icebp
sbb
fild
(bad)
aaa
pop
mov
ret
out
add
inc
(bad)
(bad)
jmp
enter
cwde
xor
xor
call
out
(bad)
call
cmps
imul
pop
cmps
lock
lods
int
call
dec
movs
loop
fld
sbb
cmp
dec
mov
stos
fstp
xor
cdq
or
mov
add
and
lahf
std
aas
push
loope
push
sbb
mov
xor
les
xchg
(bad)
xor
repnz
mov
sub
ins
adc
push
(bad)
mov
pop
mov
add
ja
xor
fdivr
test
daa
cwde
xchg
adc
adc
mov
aad
in
xor
ins
mov
in
mov
adc
inc
pop
adc
cmp
cdq
rcl
push
or
cmp
jne
mov
mov
mov
lahf
loope
mov
jle
xchg
jecxz
scas
lds
pop
lods
pop
fcom
xor
sub
adc
sbb
imul
pop
mov
cwde
iret
shr
sub
bound
fist
fild
pop
sub
in
fcom
push
adc
in
mov
inc
test
test
shr
lds
cmc
and
cmp
cmps
adc
rol
(bad)
shl
pop
push
loope
mov
xchg
jmp
pop
jns
mov
test
add
test
xor
ins
movs
test
cmp
dec
mov
sbb
add
out
cld
cmp
xor
xor
call
sar
sahf
jp
inc
jae
jp
xor
mov
dec
retf
push
xchg
dec
retf
popf
in
dec
sbb
mov
and
int3
or
xor
loope
jmp
mov
imul
sub
mov
and
inc
daa
cmps
jle
push
leave
icebp
cld
ror
cli
int
mov
mov
in
int3
mov
fdivr
jp
hlt
test
mov
imul
inc
xchg
cli
out
sbb
xchg
rcr
retf
mov
jne
and
int
dec
sbb
pop
aas
add
call
arpl
sub
sbb
unpckhps
xchg
fldcw
sub
aas
pop
movs
or
add
push
imul
fisttp
in
mov
inc
adc
loopne
icebp
sbb
push
daa
pop
xchg
xchg
and
jo
add
push
loope
sub
int
shl
and
push
push
lods
pop
dec
in
dec
cmp
stos
push
cmp
rcl
push
arpl
movs
repz
ret
mov
mov
inc
stos
add
mov
adc
adc
jmp
add
jo
sbb
and
retf
pop
jne
popf
sbb
jg
test
shl
aas
jmp
pop
push
pop
xlat
test
fstp
test
fnstcw
pop
mov
movs
stc
xor
arpl
inc
scas
sbb
or
or
and
and
aaa
fisttp
daa
mov
cmps
push
xchg
loopne
std
pushf
mov
xor
adc
mov
inc
push
retf
repnz
(bad)
ins
ds
out
loope
bound
ds
cmp
dec
bnd
cwde
minps
rcr
pusha
push
les
cmp
jns
fwait
add
into
jmp
dec
aam
nop
arpl
lea
out
add
and
lods
sub
xchg
mov
sbb
dec
push
gs
or
mov
std
dec
mov
push
in
addr16
mov
mov
cdq
je
xor
(bad)
in
xchg
(bad)
sbb
pop
aad
pushf
retf
fst
pop
pop
dec
jl
mov
push
imul
push
dec
sbb
xor
sbb
dec
push
pop
jecxz
mov
push
push
inc
rol
mov
pop
loope
mov
push
loopne
pushf
call
push
ds
sti
(bad)
out
cwde
scas
sub
xor
mov
test
rcr
push
pop
aad
faddp
retf
pop
jle
lods
inc
or
jp
push
sbb
or
out
mov
aam
inc
cmp
int3
cmps
into
repnz
in
enter
mov
and
arpl
pop
leave
adc
pop
retf
pop
and
pushf
imul
lods
in
jp
movs
add
push
adc
xor
rol
das
cdq
out
inc
repnz
xchg
inc
pop
jo
add
(bad)
fisttp
jne
repnz
lods
xchg
dec
xor
dec
out
fisubr
ss
sbb
icebp
push
pop
aas
push
pop
and
mov
dec
dec
inc
daa
xchg
stc
ja
sbb
add
mov
jnp
pop
test
scas
icebp
fcmovnbe
jno
sbb
mov
adc
arpl
dec
call
jp
sub
push
ss
adc
or
sbb
addr16
sub
cmp
(bad)
fild
daa
push
fcmovne
or
ja
or
in
pop
adc
mov
sub
loope
push
pop
mov
ja
inc
fcomp
jmp
mov
cmp
and
ret
cmp
push
popf
fdivr
jo
mov
ror
adc
sbb
std
pop
and
mov
imul
pop
jb
sub
add
add
in
mov
(bad)
out
xchg
or
dec
xor
jle
mov
pop
pop
jae
dec
pop
cmps
dec
xor
std
inc
inc
retf
xlat
adc
daa
adc
jbe
pop
mov
push
test
out
adc
adc
xor
jmp
cmp
loopne
into
jb
cmp
or
add
push
dec
mov
cmp
(bad)
sti
pop
mov
(bad)
jl
push
loope
aas
pop
ret
les
into
call
or
push
fcomp
dec
js
imul
mov
fdivr
mov
rcr
jne
(bad)
xchg
iret
pop
inc
jnp
jecxz
outs
add
dec
cmc
or
sbb
sti
pop
lds
cmp
test
inc
popf
push
sbb
sub
das
ja
je
push
loop
fmul
or
mov
out
inc
inc
xor
cmp
ret
into
mov
enter
mov
ja
(bad)
jmp
pusha
mov
push
test
mov
aad
inc
or
lds
lea
aaa
int3
cmps
fstp
frstor
dec
sbb
mov
adc
push
pop
or
in
sbb
repz
and
cmp
mov
int
add
mov
inc
lds
pop
(bad)
adc
ds
add
jg
xor
sub
rcl
push
inc
push
scas
mov
or
mov
lahf
fld
out
rcr
add
adc
add
test
pop
push
ffree
sbb
sahf
mov
(bad)
cdq
pop
pop
loop
inc
out
out
mov
cld
lock
cld
cmp
xchg
sar
xor
xchg
jmp
cmps
imul
lods
add
fwait
in
mov
rol
add
pop
std
push
ret
dec
mov
pop
sub
inc
fadd
or
jp
xchg
mov
imul
mov
in
(bad)
mov
sub
xchg
dec
test
rcl
mov
add
push
shl
mov
mov
push
aad
jbe
add
mov
dec
cmp
and
clc
inc
inc
clc
sbb
or
cmp
push
cld
ds
sahf
xor
and
daa
add
fistp
sub
xchg
sub
push
aad
cmovae
dec
pop
dec
pop
sbb
pop
dec
addr16
(bad)
push
mov
fs
inc
jmp
lods
xchg
mov
push
jnp
out
jmp
pop
mov
and
int
sti
lea
popf
jb
es
mov
pop
cmp
xchg
stos
push
repnz
xor
pop
push
es
pop
xor
mov
rol
or
stc
jecxz
rcr
xchg
mov
shl
cmp
addps
js
lods
loope
sub
dec
dec
cdq
jp
add
jl
adc
js
cmp
xor
lods
mov
inc
test
mov
mov
xlat
scas
sbb
jmp
repnz
or
repnz
sti
or
inc
das
out
dec
sti
add
or
xchg
nop
out
jb
cmp
xchg
jb
mov
pop
mov
jg
(bad)
jns
push
fxch
jae
enter
mov
les
inc
cmp
repz
push
clc
mov
sbb
in
jle
jae
xor
add
inc
push
mov
inc
not
add
(bad)
mov
pop
ror
mov
and
and
and
pop
add
repz
ja
dec
and
in
mov
rol
in
push
scas
sbb
add
adc
int3
xchg
idiv
lock
repnz
pop
sar
lahf
pusha
stos
mov
shl
cmp
inc
xor
push
pop
stos
loop
push
jne
jecxz
xlat
retf
in
mov
(bad)
in
lods
cli
int3
sub
dec
(bad)
rcl
cmp
cmp
lods
adc
test
icebp
and
iret
ins
jl
push
adc
adc
sti
and
push
outs
xor
sub
jg
je
into
sahf
dec
sbb
in
mov
cmp
lds
lea
pop
mov
fmul
mov
cld
int3
mov
sub
(bad)
fimul
inc
shl
push
loop
(bad)
sub
add
mov
sbb
test
out
sub
int
(bad)
jl
mov
aas
(bad)
xchg
cmp
inc
repnz
sub
(bad)
dec
outs
shr
cmpxchg
mov
test
shl
inc
inc
jecxz
or
and
jmp
sbb
or
xchg
push
in
sbb
out
int3
lock
xor
dec
dec
fbstp
sub
adc
cmp
fistp
cwde
xor
inc
cmp
jmp
and
(bad)
les
adc
(bad)
xchg
pop
in
adc
mov
fsubr
lods
or
retf
stc
push
repnz
push
dec
mov
sbb
jl
stos
push
js
and
push
pop
fwait
or
cmps
or
sbb
ror
in
pop
push
imul
xchg
push
stos
push
pushf
pop
jg
retf
clc
aad
std
jno
dec
mov
fcom
ficomp
std
pop
ret
xor
pop
sub
out
mov
(bad)
in
popa
scas
(bad)
adc
push
test
sub
jns
je
aaa
mov
arpl
pop
in
jg
pop
mov
push
call
adc
adc
test
push
adc
jnp
cld
fwait
cmp
inc
hlt
pop
xchg
sub
or
push
cli
dec
cmp
shr
and
int
dec
dec
xchg
shl
loopne
div
jnp
arpl
mov
pop
xchg
pop
jle
sbb
dec
(bad)
stc
sbb
out
scas
mov
and
add
movs
movs
pop
add
sbb
xchg
xor
push
iret
sbb
jmp
lahf
mov
jbe
jp
pop
pop
xlat
adc
inc
out
sbb
xchg
ror
fst
ja
and
xor
dec
ja
pop
pop
lods
xchg
std
sbb
arpl
push
push
fisubr
into
iret
cwde
data16
popa
fwait
cdq
stos
pop
aaa
mov
(bad)
inc
and
enter
inc
ins
mov
xchg
push
dec
sbb
loop
ror
jne
sti
xor
inc
out
add
pushf
and
sar
jp
push
push
lahf
add
cld
repnz
and
fidivr
into
push
xor
lds
mov
fnsave
popf
(bad)
sahf
mov
mov
ins
and
inc
addr16
sti
push
in
cwde
sbb
sub
cmps
xchg
fwait
sbb
xchg
fsub
dec
jne
repnz
retf
fcmovb
and
and
sub
sub
fild
in
movs
add
and
pop
sbb
sbb
adc
jl
xchg
xor
pop
dec
sbb
call
mov
sbb
mov
dec
outs
add
mov
leave
jmp
cmp
leave
rol
ret
popa
out
dec
pop
cmp
jo
loopne
mov
cmp
xor
leave
int
je
pop
mov
ret
sub
mov
setg
std
retf
xor
jecxz
sti
mov
ds
inc
push
aas
pop
and
daa
and
pop
sbb
pushw
mov
push
cmps
fwait
inc
inc
cmc
retf
sub
xchg
out
loope
jb
and
out
jmp
sbb
call
mov
jbe
clc
or
aas
mov
pop
sub
cmp
(bad)
mov
cs
icebp
out
sub
push
sub
xor
(bad)
enter
jle
mov
xchg
fnstenv
popa
jle
stc
jne
mov
xchg
pop
outs
dec
push
inc
mov
mov
test
cdq
(bad)
pop
push
fxch
push
rcr
cmp
mov
mov
rcl
xchg
sbb
mov
add
and
jl
out
icebp
lds
cmps
jmp
jecxz
xlat
mov
fist
into
and
inc
fsubp
jg
aad
and
enter
dec
scas
sub
or
mov
mov
imul
(bad)
retf
stos
and
in
(bad)
bnd
cmp
fwait
push
call
imul
js
out
fadd
sub
stc
jae
rol
dec
std
int
sti
add
jns
dec
les
push
fsub
mov
in
mov
xor
xor
ins
stc
mov
inc
pop
fwait
loop
inc
retf
(bad)
movs
fiadd
push
pop
repz
lahf
out
dec
fcomp
or
loop
mov
int
sub
rol
iret
or
xor
dec
sub
mov
into
dec
cld
test
dec
sub
fwait
xchg
fwait
arpl
shr
out
or
cmps
lods
xlat
pop
pusha
push
jge
add
fcomp
clc
add
ds
pop
xlat
in
mov
mov
out
test
repz
mov
jg
imul
movs
dec
and
jb
cmp
cld
pop
into
sbb
bound
or
dec
sbb
xor
std
shl
into
lahf
imul
mov
mov
mov
jo
mov
loope
mov
fsubr
retf
mov
mov
xor
in
mov
jge
cmp
nop
into
sbb
and
repz
ds
int
lds
imul
out
dec
pop
jmp
jo
jmp
or
pop
stc
adc
jb
ret
xor
sub
pop
aam
mov
fimul
xchg
xchg
daa
leave
popf
jl
jp
neg
in
in
pop
ds
or
shl
je
jnp
pop
cmp
rcr
jecxz
push
jg
pop
aaa
popa
and
cmps
inc
adc
(bad)
sub
jno
adc
mov
mov
and
jns
scas
xor
test
test
inc
and
or
retf
dec
data16
and
sahf
dec
mov
popa
mov
not
dec
jo
ins
add
std
(bad)
sbb
enter
jge
and
in
das
add
dec
lock
jae
adc
cmp
jmp
jae
dec
cmp
mov
dec
popa
sti
or
or
call
mov
pop
popa
pop
push
push
ds
aam
dec
ret
rcl
lock
push
icebp
sti
push
mov
inc
xchg
and
enter
repnz
sub
lds
jne
jnp
or
in
mov
push
js
icebp
push
mov
xor
ss
xor
ins
fidivr
shr
xchg
test
data16
shl
mov
pop
pop
inc
mov
pop
or
inc
mov
popf
or
(bad)
loopne
not
pop
sub
mov
cmp
jmp
pop
lods
iret
mov
add
fdivp
aas
push
mov
sub
mov
adc
in
mov
jmp
inc
xchg
out
imul
and
lahf
mov
inc
stos
sbb
fxch
movs
stos
pop
sti
mov
lods
das
aaa
and
popf
int
sub
push
pop
push
fstp
xor
std
gs
repz
shl
or
add
out
dec
mov
pop
loopne
(bad)
or
ret
outs
repnz
not
and
mov
adc
xchg
aaa
sbb
dec
rcl
std
push
xor
cmp
outs
(bad)
jle
inc
jne
and
mov
inc
in
push
pop
inc
pusha
rcl
(bad)
push
scas
aad
test
sbb
mov
daa
cmps
iret
jbe
push
loope
pop
push
inc
lods
ds
cmps
push
mov
fild
lods
ja
daa
mov
repnz
ins
mov
push
mov
fidiv
xor
test
mov
mov
mov
clc
push
xlat
jo
cld
xchg
neg
mov
aas
outs
cld
pop
cmp
cmp
cmp
pop
mov
out
add
(bad)
jae
mov
mov
out
cmps
xor
pop
sbb
fnstsw
adc
xchg
jae
push
es
movs
sbb
dec
jmp
pop
jae
dec
jno
pop
ins
adc
add
ss
retf
jnp
(bad)
popa
fist
ins
mov
imul
mov
pop
mov
sub
dec
outs
out
cmp
mov
cli
jno
dec
inc
fld
push
ret
outs
jmp
mov
out
ficom
lock
push
mov
nop
adc
mov
loope
pop
dec
cld
imul
int
pushf
cmps
inc
scas
xchg
inc
add
fdivrp
dec
adc
or
ror
fstp
adc
xor
ss
mov
sahf
and
out
(bad)
fisubr
es
mov
icebp
and
ffree
sbb
xchg
in
imul
into
int
leave
add
mov
stos
clc
ret
int3
xchg
in
pop
jecxz
and
xlat
ins
bound
sub
jnp
dec
cmp
je
or
xchg
mov
les
and
cmp
loopne
adc
dec
ins
ret
dec
fs
iret
retf
das
popf
pop
inc
adc
pop
mov
xor
outs
pop
cmp
add
xchg
clc
push
and
jl
addr16
cdq
movs
jmp
leave
sbb
lock
(bad)
cmp
lea
mov
repz
cmp
out
stos
pusha
xor
fwait
adc
sbb
out
jb
ja
loopne
push
mov
test
aad
or
xchg
add
pop
sub
bound
xlat
popf
and
(bad)
adc
repnz
ret
lods
adc
lahf
cmp
int
xchg
jl
push
jne
or
cld
push
fs
je
movs
mov
push
push
and
popa
mov
or
mov
push
cld
pop
dec
add
pop
ret
fsub
cmp
pop
push
adc
jmp
data16
pop
ins
mov
or
and
(bad)
sti
jmp
pop
jb
lahf
test
xlat
int
mov
xor
dec
bound
pop
ror
push
dec
dec
pop
sub
enter
ins
mov
sub
push
dec
sbb
rol
mov
pop
push
inc
inc
addr16
bound
xchg
or
outs
sti
movs
mov
scas
xchg
mov
mov
and
mov
dec
movs
mov
push
inc
loope
sbb
sbb
and
sub
push
mov
mov
fisubr
push
sub
fiadd
push
xlat
fidivr
ror
cmp
xor
cmp
dec
adc
aam
or
inc
push
pop
or
jge
enter
sbb
mov
xchg
adc
xchg
gs
popf
mov
cmp
popa
dec
inc
in
xchg
push
pop
and
movs
cmc
rcr
mov
adc
fdivr
punpckhdq
outs
shr
mov
and
sub
loope
xchg
mov
or
pop
jne
and
in
(bad)
mov
inc
jmp
mov
mov
dec
pop
xchg
mov
dec
fs
push
inc
xchg
ja
add
fisttp
jnp
push
call
sub
mov
push
sub
lahf
mov
js
mov
lods
mov
sahf
mov
into
rcl
jo
push
out
xor
dec
sub
adc
retf
das
dec
mov
pop
push
(bad)
out
sub
cld
cli
jno
lods
in
inc
pop
jle
or
cmp
xor
cmp
jae
push
dec
sbb
movs
jbe
daa
jmp
(bad)
jmp
and
cmp
std
test
and
jle
or
push
cmp
adc
(bad)
pop
push
sub
popf
movups
test
pop
jno
sahf
(bad)
(bad)
es
jmp
jle
xchg
and
stos
stos
loopne
lahf
shr
fs
dec
cmc
popa
addr16
in
push
jae
mov
jo
movs
cli
mov
cmp
mov
dec
stos
jnp
call
cs
dec
shr
dec
js
xor
loopne
jg
jle
push
adc
(bad)
js
pop
rcr
aaa
or
rol
pop
repnz
scas
nop
icebp
mov
sbb
pop
out
inc
adc
mov
loopne
leave
adc
cmp
in
mov
sub
push
popa
push
adc
xchg
jo
bound
jecxz
cdq
mov
in
sbb
push
out
mov
sti
push
out
ficomp
rol
test
in
mov
adc
rcl
cwde
dec
mov
add
dec
popa
or
dec
pop
inc
int3
out
dec
pop
jae
xchg
and
hlt
sub
xchg
mov
loopne
sar
and
enter
sar
xchg
loope
repz
fwait
sbb
retf
cld
outs
pop
ins
pop
push
clc
std
out
fld
and
sub
imul
xor
loop
lds
dec
and
and
mov
stos
movs
call
iret
mov
pop
test
add
ins
leave
dec
dec
pop
add
adc
mov
fwait
int3
adc
xchg
jp
xchg
xor
dec
call
outs
xchg
add
sbb
in
xor
les
pushf
mov
and
sub
icebp
jo
in
pop
sub
add
push
ss
cld
jae
adc
add
push
into
fld
fdiv
pop
mov
ins
cmp
loop
jno
jae
inc
(bad)
or
(bad)
and
in
inc
adc
std
mov
in
or
fisub
clc
mov
ror
xchg
call
inc
mov
mov
lea
pop
xor
push
mov
in
xchg
shr
jne
sbb
outs
out
repz
retf
scas
xchg
cmp
mov
and
scas
cdq
mov
jp
ror
jp
sbb
adc
in
imul
frstor
(bad)
jbe
mov
(bad)
idiv
int3
loope
and
mov
dec
adc
add
scas
aaa
ret
sbb
push
inc
xor
mov
cmp
cmp
hlt
arpl
jp
dec
inc
outs
cmps
fwait
cmc
fnsave
aam
xchg
sbb
addr16
fcomp
push
cmp
fadd
neg
xchg
aaa
lea
and
dec
sti
push
dec
sbb
xchg
cmp
aas
cmp
dec
inc
sbb
or
pop
sub
sti
sti
test
and
mov
jnp
push
lea
movs
inc
fwait
xchg
sub
or
popf
sub
movs
lds
push
rol
inc
mov
stos
stos
cmps
out
sahf
push
das
idiv
inc
cmp
fwait
icebp
pusha
shl
push
popa
scas
mov
popf
test
scas
adc
ds
pop
(bad)
retf
div
inc
push
fst
imul
rcl
lds
sbb
push
xchg
loope
jns
loope
cmp
jmp
xchg
adc
inc
cmps
(bad)
push
xchg
(bad)
(bad)
and
test
fst
xchg
xchg
cmp
cs
xor
cli
and
mov
(bad)
jle
xor
mov
dec
sbb
mov
cmc
arpl
jp
ret
adc
lea
inc
jo
movs
hlt
addr16
ds
mov
ja
or
mov
mov
hlt
idiv
call
mov
rcl
int3
sub
fisub
xor
inc
loopne
cdq
mov
clc
sbb
out
psadbw
sbb
cmp
mov
cmc
cmps
dec
dec
xchg
add
and
xchg
in
cwde
sahf
in
mov
pop
mov
(bad)
idiv
adc
leave
push
adc
test
iret
inc
mov
aaa
adc
sub
or
push
mov
push
fidivr
loop
aas
push
push
cwde
pop
fdivr
xchg
and
outs
in
stos
mov
push
ds
and
inc
fwait
sbb
or
adc
mov
sahf
mov
stc
out
or
rcl
xchg
retf
aad
scas
cmp
pop
lea
mov
loope
movs
ret
cmp
fisttp
jno
mov
mov
rcl
ret
mov
adc
lds
dec
(bad)
mov
fxch
out
jbe
sub
inc
sub
push
(bad)
call
(bad)
jns
loopne
or
push
arpl
mov
pushf
fild
ret
push
shl
hlt
or
and
pop
repz
lods
fstp
sbb
jo
imul
cmp
(bad)
frstor
cld
jmp
(bad)
sbb
(bad)
jnp
sti
lahf
xchg
in
pop
sbb
data16
mov
jo
mov
fs
add
or
cld
ror
mov
shr
mov
(bad)
xchg
(bad)
xchg
mov
cmps
fistp
push
scas
add
xor
jne
cmp
loope
push
and
xchg
ja
addr16
mov
adc
mov
inc
and
sbb
mov
adc
fild
and
dec
les
push
cmp
xor
push
mov
or
or
adc
stos
adc
dec
push
out
cs
sub
inc
xlat
out
push
out
pop
cmp
popf
in
inc
jle
mov
or
sbb
in
sbb
fst
mov
js
cwde
scas
push
out
jno
pop
test
xor
lods
dec
mov
dec
ja
dec
xor
push
ret
lds
(bad)
adc
adc
mov
sub
aam
(bad)
nop
mov
adc
and
pop
cmps
repnz
movs
jg
mov
int3
mov
sti
xor
add
inc
and
inc
bound
scas
inc
pop
out
loopne
xchg
mov
pop
adc
push
sbb
sub
div
jno
scas
imul
and
fcmovnu
inc
cs
xchg
inc
add
call
or
clc
repz
xchg
adc
rcr
and
inc
xchg
cwde
cld
or
(bad)
and
mov
scas
mov
cmps
mov
xchg
jbe
pop
cmc
jge
lods
(bad)
mov
mov
add
lahf
sbb
xchg
sub
or
cdq
sbb
lods
loope
dec
xchg
pop
and
frstor
pop
aas
into
loop
jl
fild
xchg
jae
aad
je
mov
ins
clc
sbb
and
rcl
and
(bad)
jbe
or
push
mov
movs
int
imul
inc
xor
ds
xchg
add
popa
cmp
xchg
jb
(bad)
push
outs
cmp
cmc
outs
pusha
or
sbb
mov
pop
aad
loopne
push
fbld
dec
mov
test
pop
loope
sbb
mov
scas
pop
add
js
data16
and
dec
push
dec
xchg
in
xchg
pop
sahf
xchg
aad
adc
add
in
test
mov
mov
sbb
aas
retf
mov
mov
or
popf
mov
imul
pop
dec
pop
outs
jne
pop
(bad)
outs
inc
xlat
jmp
push
pop
shl
je
sti
adc
arpl
(bad)
sbb
scas
(bad)
cmp
dec
mov
shl
mov
push
add
push
pop
hlt
add
mov
jo
push
aas
dec
lods
pushw
nop
push
pop
cmp
repz
pop
and
imul
add
mov
fucomip
jae
pop
mov
inc
pop
push
dec
not
mov
fsubr
dec
cwde
pop
call
imul
mov
pushf
adc
adc
pushf
mov
sbb
mov
pop
or
and
stc
sub
cli
outs
lock
movs
sub
test
mov
push
dec
fwait
push
out
pop
int3
clc
mov
sbb
sbb
xchg
xor
mov
xlat
fisttp
aas
jb
and
adc
mov
loopne
lds
movs
or
hlt
and
xchg
push
push
pop
or
adc
aad
test
pushf
pop
xchg
jb
fild
mov
add
mov
pop
jbe
or
mov
adc
and
jmp
imul
add
retf
repz
jg
and
std
or
sub
jmp
jns
dec
adc
and
add
pop
retf
imul
xchg
pop
mov
cmp
das
gs
mov
out
inc
and
out
cmp
js
mov
push
sub
mov
fs
mov
in
cmps
stos
mov
mov
mov
sbb
mov
shr
or
pop
push
scas
mov
sar
addr16
and
rcl
fiadd
jns
fadd
ds
dec
pop
daa
aaa
nop
jo
pop
lock
(bad)
jge
mov
mov
pop
mov
sub
out
mov
mov
mov
dec
jl
sbb
data16
xor
fisttp
adc
aaa
sub
daa
fwait
daa
push
test
mov
cli
push
fstp
cmovae
retf
add
and
sbb
pop
fwait
les
xchg
aam
ins
cmp
mov
loopne
popa
mov
(bad)
mov
xor
fbstp
sbb
bound
xor
call
or
lock
movs
sub
cmp
fist
shr
push
mov
outs
int
rol
lods
cwde
retf
or
retf
(bad)
imul
inc
fadd
sbb
data16
ja
jb
cwde
pop
in
into
les
jle
retf
or
pop
and
repnz
lods
imul
fnsave
movs
cmps
dec
ds
mov
adc
outs
hlt
and
xchg
xor
inc
push
sbb
push
adc
mul
call
retf
mov
cmp
jl
and
push
js
inc
jns
adc
(bad)
ds
mov
in
cmp
dec
jmp
les
rcr
mov
push
cwde
sbb
fucomp
fnsave
xchg
adc
(bad)
mov
jae
inc
fcom
stc
in
xchg
shl
popa
loop
scas
push
mov
mov
inc
fs
inc
test
pop
cmps
dec
sub
popf
add
mov
pusha
jmp
dec
and
xlat
mov
int
es
test
gs
dec
inc
in
xor
jmp
adc
jecxz
movs
(bad)
mov
push
mul
ins
inc
xchg
dec
int3
mov
mov
dec
ins
int3
xchg
jg
sub
shr
test
nop
push
pop
jg
cmp
or
mov
int3
dec
mov
and
jmp
in
pop
cld
int
fcomp
ret
jbe
mov
in
aas
cmp
stos
imul
and
pop
fst
(bad)
popf
cld
es
or
xor
sbb
sub
sub
cld
adc
inc
xor
inc
cmp
ja
loopne
jo
mov
(bad)
push
mov
pop
ins
sar
enter
adc
lods
adc
xchg
mov
shr
adc
rcl
sub
(bad)
ins
cmp
ficomp
outs
cmp
jns
xchg
imul
mov
call
bound
out
jle
gs
outs
out
pop
pop
inc
int
fimul
cwde
retf
lods
inc
mov
shl
xchg
push
out
or
jmp
hlt
sub
das
xchg
mov
sub
jmp
cmc
fs
xor
aaa
cmp
call
mov
in
dec
call
add
test
sub
sahf
iret
fs
pushf
daa
iret
les
add
or
or
cmp
stos
or
mov
sbb
mov
scas
rcr
aam
int3
dec
in
pop
push
sub
adc
dec
inc
sub
es
adc
popa
mov
(bad)
sti
lock
mov
mov
popa
rol
loopne
sub
aam
add
aam
in
in
pop
fsub
in
pop
sub
(bad)
not
jmp
aaa
mov
adc
xor
fabs
mov
sar
je
cmps
les
jno
(bad)
lods
xchg
and
out
pop
ins
ins
jge
mov
outs
jns
fcmovu
mov
jecxz
adc
aas
imul
xor
clc
sar
push
loope
(bad)
pcmpeqd
pop
xchg
push
add
enter
xor
clc
cmp
mov
test
idiv
jle
add
(bad)
jb
ins
mov
add
in
inc
mov
inc
inc
adc
cld
cmc
push
ins
out
jge
repz
xchg
mov
xor
jbe
mov
mov
int
push
ret
fisub
hlt
add
repnz
ds
out
jl
cmp
out
jnp
pop
jo
mov
dec
xchg
mov
cmp
fwait
xchg
mov
push
xchg
add
lahf
mov
ds
or
aam
inc
not
jg
inc
pop
rol
and
aad
or
cmp
ins
retf
jle
scas
es
in
jnp
fnstsw
dec
jno
mov
mov
scas
outs
ss
(bad)
sahf
pushf
clc
cmp
and
xchg
(bad)
jo
(bad)
sbb
scas
es
or
(bad)
leave
cmp
mov
sub
addr16
lahf
and
popa
mov
hlt
and
mov
cmps
cmp
cli
bound
add
cmp
test
sub
adc
mov
data16
hlt
retf
les
ja
inc
daa
xchg
inc
and
jo
fucom
adc
loopne
mul
fdiv
jae
and
push
add
inc
pop
sub
imul
inc
mov
je
push
sub
out
xchg
push
lds
xor
outs
mov
dec
rol
ins
cmp
sub
sub
imul
rcr
enter
mov
jnp
pop
lahf
(bad)
sbb
into
and
lods
mov
ins
bound
leave
jb
inc
mov
aad
shl
mov
call
sti
jnp
or
sbb
stos
xchg
inc
test
xchg
adc
shr
retf
addr16
cmp
sahf
mov
dec
(bad)
fwait
cld
inc
inc
add
in
xor
movs
ins
scas
ret
ds
sub
inc
dec
xchg
out
lods
dec
xor
jmp
je
push
les
pop
or
and
cmp
ds
or
xchg
aam
xchg
call
in
and
fsub
fs
add
inc
stos
add
retf
sbb
mov
xor
or
or
add
xchg
jecxz
sbb
add
mov
outs
inc
push
je
(bad)
xchg
dec
inc
mov
imul
in
out
mov
int3
inc
jne
cli
mov
jns
(bad)
ins
jnp
and
jae
ror
aaa
xchg
xchg
gs
sbb
jo
rol
pusha
add
and
pusha
(bad)
shl
cmp
cld
int
jle
push
jmp
mov
mov
push
outs
and
data16
push
push
aad
pop
push
cmp
retf
test
pop
adc
mov
pop
gs
dec
jecxz
ja
adc
inc
or
pusha
xor
xor
pusha
cmps
or
fwait
popf
bound
cmp
bound
movs
pop
xor
mov
pop
sub
mov
(bad)
in
scas
jge
sbb
(bad)
pop
pushf
xchg
inc
outs
idiv
push
scas
lahf
aad
xchg
sub
(bad)
hlt
jp
sbb
push
retf
stos
push
inc
movs
popa
push
inc
jb
mov
sti
dec
push
std
aaa
jae
out
lahf
and
rol
inc
(bad)
mov
(bad)
sub
add
sub
or
bound
sub
sbb
scas
xchg
jnp
or
pop
mov
xchg
mov
or
(bad)
sbb
es
xchg
mov
sbb
pop
mov
jle
mov
ds
and
pop
ja
pushf
fcomp
add
mov
fisub
movs
sbb
int3
outs
cmp
pop
clc
mov
dec
and
jo
add
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
shr
inc
mov
adc
and
cli
movs
or
fidivr
and
jmp
add
jbe
call
sub
add
add
mov
and
add
add
add
mov
mov
sub
and
add
add
add
add
fld
mov
add
add
fs
and
add
add
test
add
movs
jmp
test
movs
add
test
sub
loop
and
add
add
mov
(bad)
fild
jmp
jmp
push
test
loopne
push
add
add
pop
nop
mov
and
add
jmp
imul
test
mov
clc
add
fistp
stc
test
add
(bad)
ja
add
jmp
jmp
mov
pop
(bad)
xchg
test
dec
movs
add
add
add
call
add
adc
fst
std
sub
add
add
jns
loopne
and
add
pop
mov
outs
movs
pushf
rcl
test
aas
jmp
and
loope
add
jae
adc
add
add
add
jae
movs
mov
rol
(bad)
sbb
mov
add
pop
sub
loope
jecxz
add
movs
xchg
and
imul
pop
mov
push
push
call
add
add
test
add
add
loop
and
add
add
gs
js
push
call
add
aam
loope
mov
jg
jmp
mov
mov
pop
hlt
sub
pop
jge
add
mov
rol
sub
and
cli
movs
add
(bad)
and
add
in
jns
add
loope
(bad)
aad
loope
or
into
(bad)
mov
add
cmc
inc
add
imul
call
inc
pop
js
(bad)
adc
mov
loope
mov
lods
div
das
ja
cdq
cmp
jg
popf
loope
add
or
mov
add
outs
test
clc
add
jmp
add
push
and
add
sub
xchg
psubq
movs
add
cli
add
fbld
js
arpl
mov
add
add
or
int3
fdivr
lds
pop
add
jmp
mov
mov
jmp
lods
mov
adc
rcl
jmp
data16
add
xchg
push
sub
cs
cmc
(bad)
call
add
mov
lds
sub
loope
dec
mov
jg
cmc
push
add
push
mov
rol
movs
sub
mov
push
jbe
cs
mov
clc
pusha
add
mov
add
jg
mov
cmp
push
pand
push
add
push
add
je
and
add
cli
mov
(bad)
pop
xor
(bad)
mov
cmp
clc
add
lods
xor
mov
rcl
(bad)
nop
add
add
add
or
lds
inc
imul
pmulhuw
add
cmp
loope
test
xor
push
add
mov
pop
push
push
in
jmp
or
sub
mov
sub
out
jns
cmp
add
mov
jne
add
dec
mov
or
inc
sub
punpckhwd
jns
or
test
add
add
jecxz
imul
je
jmp
or
fld
add
mov
xor
pop
xchg
jecxz
movs
jmp
mov
sub
mov
add
jmp
mov
scas
or
in
cmp
jp
mov
add
rol
dec
or
and
rcr
repnz
and
add
cli
mov
cwde
xchg
jmp
(bad)
add
jmp
push
add
mov
mov
add
gs
push
mov
sysret
xor
add
add
mov
imul
scas
movs
fstp
jmp
add
add
add
sub
mov
and
je
jmp
repnz
cmp
clc
jmp
cwde
add
push
jmp
mov
push
mov
add
mov
dec
pop
addr16
mov
clc
add
mov
test
sub
mov
outs
or
add
nop
or
xchg
mov
ja
inc
and
into
test
add
add
mov
add
mov
and
mov
cli
movs
add
add
add
mov
push
pop
aaa
mul
sbb
add
push
pop
inc
mov
lds
lods
add
add
mov
mov
jno
and
add
mov
punpckhdq
sub
test
add
jne
add
(bad)
and
cli
add
das
imul
jmp
test
pop
jnp
test
sub
xchg
in
add
push
adc
add
fst
push
(bad)
movs
or
imul
fdivr
out
push
call
imul
in
cmps
or
mov
in
loope
add
pop
dec
sbb
or
ret
add
push
add
xor
movs
or
push
jmp
mov
js
ror
add
ret
pop
pop
mov
mov
sub
xor
mov
cmp
jns
add
adc
cmp
xchg
out
(bad)
mov
jmp
leave
test
cmp
das
popa
adc
add
mov
fdivr
add
push
fstp
test
add
sbb
shl
push
in
and
sti
add
sbb
sbb
pop
inc
sub
add
add
test
shr
add
mov
mov
sbb
cmp
test
add
mov
sub
test
add
ror
fld
pop
and
mov
inc
je
add
test
inc
movs
or
enter
sti
stos
pushf
mov
mov
add
mov
add
rol
cli
stos
mov
dec
mov
and
add
add
in
jmp
mov
out
in
add
mov
sub
and
cli
add
jmp
mov
nop
pusha
adc
std
and
imul
bound
cmc
rol
add
imul
jmp
mov
mov
and
add
cmp
jmp
fwait
dec
sbb
add
fst
add
xchg
popf
push
add
add
or
ja
stc
daa
pop
xor
gs
jmp
xor
jae
add
ffree
cwde
and
add
add
or
movs
retf
pop
add
add
fcom
add
std
adc
stc
jmp
pop
pop
cmp
add
in
xchg
les
xor
aas
add
dec
pop
inc
add
in
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
leave
cmc
sbb
addr16
sub
pop
and
inc
into
and
enter
xchg
and
inc
add
(bad)
aaa
ror
ins
add
add
test
and
mov
add
dec
add
mov
sub
and
jns
add
mov
lods
inc
and
ins
push
and
and
add
jno
mov
je
add
test
add
add
mov
add
mov
mov
add
mov
mov
nop
mov
jne
aad
out
mov
add
pop
add
pop
mov
add
mov
cvttps2pi
add
je
add
mov
enter
dec
mov
and
push
and
cmovl
add
or
rol
sub
lods
test
and
add
sub
add
popf
jmp
mov
sub
stos
test
sbb
push
add
mov
pop
ret
xor
add
mov
sub
lods
cmps
and
leave
add
jg
jmp
mov
and
mov
add
fsub
mov
rcl
std
add
hlt
add
pop
mov
push
lods
sub
mov
add
and
add
je
add
mov
inc
fs
cmp
add
add
ss
repnz
or
add
xchg
push
cmp
add
(bad)
cmp
pop
jg
jmp
mov
and
add
popf
outs
out
das
data16
cmps
out
add
add
sti
stos
xor
pop
mov
add
int3
stos
dec
data16
jmp
add
outs
test
ins
push
and
mov
movq
add
add
call
sub
inc
mov
(bad)
and
popf
inc
jmp
fiadd
lahf
add
add
mov
dec
test
add
pop
add
call
and
add
add
int
add
inc
mov
test
add
add
mov
and
push
add
cmova
int3
add
mov
sub
mov
mov
enter
add
mov
jg
add
dec
inc
adc
stc
dec
test
je
in
add
mov
add
daa
sbb
mov
retf
popf
inc
pop
in
bound
push
push
push
dec
push
mov
fadd
add
(bad)
mov
mov
add
pop
add
inc
add
inc
test
add
popf
bswap
jnp
in
mov
ins
add
test
cmp
mov
(bad)
inc
(bad)
iret
loopne
fsub
mov
call
add
and
add
mov
sub
retf
xor
test
add
cli
rol
cmp
popf
clc
clc
and
mov
mov
and
add
add
add
mov
xchg
popf
add
ja
loopne
test
ins
add
pmullw
retf
add
jmp
mov
sub
cmp
call
add
int
and
add
data16
add
cmps
mov
shl
daa
add
mov
add
test
jle
or
pop
lds
mov
and
and
and
(bad)
and
add
leave
add
mov
and
inc
add
xchg
add
cmova
hlt
add
jo
and
mov
add
mov
call
lods
pop
and
enter
mov
pop
in
inc
jne
jns
cmp
and
add
inc
mov
pop
jmp
mov
add
lods
jo
or
add
mov
mov
popf
add
add
add
enter
in
ins
jl
sbb
mov
jno
add
sti
shufps
add
into
pop
sub
add
or
(bad)
or
mov
dec
sub
popf
inc
mov
bound
test
add
sub
mov
add
xor
inc
iret
add
add
mov
push
mov
add
ins
push
add
ret
add
add
add
sub
mov
call
and
retf
sahf
inc
mov
cmp
add
dec
adc
and
push
mov
add
(bad)
jbe
sti
inc
jmp
mov
and
add
(bad)
jnp
test
nop
add
add
test
xchg
add
test
in
add
daa
and
mov
xchg
inc
mov
jmp
rol
sub
stos
dec
and
inc
mov
add
mov
add
add
test
pop
xchg
in
mov
add
scas
pop
mov
push
jmp
test
add
mov
fiadd
(bad)
and
add
mov
popa
rol
bound
and
add
shl
inc
add
inc
mov
mov
and
dec
inc
mov
cmp
inc
mov
into
dec
daa
inc
mov
and
arpl
stc
add
ret
pop
ins
push
sti
inc
cmp
pop
push
xlat
pop
dec
cmp
or
add
mov
xchg
pushf
inc
mov
dec
pop
scas
or
inc
ret
add
ss
mov
mov
sub
mov
xchg
enter
sbb
addr16
in
add
push
(bad)
mov
mov
inc
jmp
ret
aad
add
test
jnp
inc
jecxz
or
add
mov
jp
ins
add
sub
fild
mov
jmp
mov
es
pop
and
jno
test
mov
test
popa
and
add
(bad)
out
and
add
add
mov
fisttp
add
inc
mov
add
push
sub
test
les
lahf
mov
dec
mov
add
mul
out
inc
ins
push
and
rol
ret
mov
jg
hlt
add
sub
and
lods
pop
add
sub
stos
or
adc
inc
test
add
add
(bad)
and
mov
in
pop
rol
pop
ins
add
mov
leave
xchg
and
add
mov
cli
add
or
and
mov
jp
add
mov
mov
push
xlat
xchg
mov
xchg
push
and
mov
mov
mov
xchg
inc
add
or
push
pop
sub
aam
jne
or
pop
add
and
fadd
enter
inc
or
add
stos
popf
pop
add
mov
mov
ficom
cmp
clts
jno
fmul
inc
mov
call
add
aam
add
add
jmp
mov
aad
call
add
add
push
jno
inc
add
mov
pop
add
or
cmp
call
data16
(bad)
jmp
loope
cmp
shl
dec
mov
scas
push
dec
addr16
icebp
dec
push
or
dec
push
mov
lahf
or
and
dec
sub
or
inc
pop
push
mov
pminsw
mov
(bad)
leave
pop
in
push
pushf
inc
mov
repz
cmps
mov
jmp
inc
mov
aam
loope
call
jp
inc
mov
xchg
test
mov
mov
aam
aam
mov
push
sti
and
icebp
mov
mov
call
add
adc
add
and
adc
repz
add
pusha
push
add
xchg
cmps
out
push
add
adc
dec
(bad)
stos
dec
add
mov
inc
pop
and
jmp
cli
add
mov
bound
add
pop
add
ins
out
(bad)
fnstsw
cmp
cmp
mov
and
sub
test
and
inc
data16
and
dec
mov
or
dec
jne
movs
cmp
and
enter
jl
xlat
and
(bad)
ins
push
mov
add
add
shl
and
push
popf
add
cmp
in
sub
sub
fadd
mov
mov
fisub
and
add
retf
add
das
in
dec
add
popf
and
push
and
in
cmps
fisttp
movs
mov
retf
and
push
popf
fnstenv
mov
xchg
jmp
add
mov
dec
add
mov
mov
retf
out
aad
inc
mov
popa
inc
sub
and
rcl
pop
fucompp
adc
add
mov
mov
sub
fiadd
mov
push
lods
add
popf
fnsave
(bad)
(bad)
and
mov
add
(bad)
jmp
and
ins
push
and
ss
add
add
sbb
and
mov
pop
mov
and
mov
pushw
inc
mov
and
and
dec
and
scas
push
seta
push
enter
out
aam
enter
sysret
add
mov
xor
mov
xor
jo
cmp
sub
sub
inc
test
mov
jcxz
add
loopne
pop
add
add
test
mov
mov
data16
(bad)
jmp
je
mov
cli
cmps
and
outs
retf
(bad)
sub
and
push
mov
call
les
sbb
xchg
add
inc
jno
stc
inc
mov
call
loop
push
jecxz
popa
lds
mov
retf
(bad)
add
test
inc
pushf
inc
mov
adc
add
stos
aad
(bad)
add
pop
js
dec
jmp
(bad)
xor
inc
or
mov
jmp
mov
mov
mov
pop
add
mov
sub
mov
sub
retf
jmp
and
jmp
mov
mov
jmp
fisubr
and
pop
add
mov
leave
dec
cmps
add
inc
enter
sbb
jmp
and
push
add
in
xchg
adc
mov
mov
mov
and
pop
mov
and
inc
add
mov
push
add
retf
adc
mov
jbe
hlt
pop
sbb
cs
call
lea
add
jge
adc
dec
pop
add
and
mov
mov
popf
xor
cmps
pcmpgtd
sub
ja
inc
sar
retw
sbb
retf
movzx
mov
mov
sub
push
(bad)
jp
fs
mov
add
push
mov
mov
add
mov
and
inc
mov
jmpw
mov
ss
repz
retf
iret
xor
and
add
xor
fcom
mov
lods
inc
and
retf
add
shufps
add
mov
jmp
mov
aam
add
iret
and
inc
add
mov
mov
add
mov
add
test
mov
aad
dec
inc
inc
aaa
xor
dec
and
xor
mov
mov
ds
and
mov
xor
mov
jns
and
adc
div
(bad)
(bad)
call
dec
addr16
inc
sbb
add
mov
jecxz
stos
dec
inc
mov
or
jns
mov
lea
and
mov
ret
imul
dec
mov
enter
mov
fsub
and
add
push
mov
dec
mov
sti
and
xor
xor
and
div
dec
mov
and
dec
repz
mov
jecxz
jns
xor
add
cmp
and
jle
add
lods
and
add
add
sbb
call
in
and
add
add
inc
and
je
inc
mov
pop
add
add
data16
xchg
(bad)
lds
xchg
stos
add
mov
or
add
cmp
add
add
mov
and
pop
add
inc
sbb
cmp
bound
add
popf
scas
sub
dec
data16
data16
lea
dec
jne
adc
cmp
test
nop
loope
in
repz
jmp
retf
pcmpeqb
mov
or
pop
pop
add
xor
pop
jmp
repz
inc
add
sbb
fild
xchg
sbb
(bad)
mov
or
(bad)
sub
mov
rol
and
and
mov
push
jmp
in
bound
fidivr
xor
cmp
sbb
sbb
repz
sti
retf
and
pminsw
add
stos
les
popf
and
mov
jmp
and
test
inc
add
mov
stos
xchg
mov
ja
sub
add
add
(bad)
or
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
movzx
bt
jae
mov
push
mov
rep
jmp
mov
cmp
jl
bt
jb
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
mov
cmp
je
push
push
push
call
test
jne
push
call
mov
call
push
call
pop
mov
pop
pop
ret
push
mov
push
and
push
lea
push
push
push
call
mov
add
test
jne
cmp
je
call
test
je
call
mov
mov
mov
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
push
push
call
and
xor
mov
test
setne
test
jne
call
mov
call
xor
jmp
xor
mov
test
setne
test
je
xor
cmp
setne
test
je
call
mov
mov
test
jne
call
mov
jmp
and
cmp
jne
call
mov
push
lea
push
push
call
add
jmp
push
push
push
push
call
add
mov
mov
mov
call
mov
call
ret
mov
mov
push
call
pop
ret
push
mov
push
push
push
call
add
pop
ret
push
mov
push
push
mov
push
push
push
test
je
mov
test
je
mov
test
jne
call
mov
call
xor
pop
pop
pop
leave
ret
cmp
je
or
xor
div
cmp
ja
mov
imul
test
mov
je
mov
jmp
mov
mov
test
je
mov
and
je
mov
mov
test
je
js
cmp
jae
mov
mov
push
push
push
call
mov
sub
add
add
sub
add
jmp
cmp
jb
test
je
push
call
pop
test
jne
mov
mov
test
je
xor
div
mov
sub
mov
jmp
mov
push
push
push
call
pop
push
call
add
cmp
je
mov
mov
cmp
ja
mov
add
sub
cmp
jb
mov
jmp
mov
push
movsx
push
call
pop
pop
cmp
je
inc
mov
dec
mov
test
jg
xor
inc
mov
test
jne
mov
jmp
or
sub
mov
xor
div
jmp
push
push
call
cmp
je
cmp
je
xor
mov
test
setne
test
jne
call
mov
call
xor
call
ret
push
call
pop
and
push
push
push
push
call
add
mov
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
push
mov
push
mov
push
or
test
jne
call
mov
call
or
jmp
test
je
push
call
push
mov
call
push
call
push
call
add
test
jns
or
jmp
cmp
je
push
call
and
pop
and
mov
pop
pop
pop
ret
push
push
call
or
mov
xor
mov
test
setne
test
jne
call
mov
call
mov
call
ret
test
je
and
jmp
push
call
pop
and
push
call
pop
mov
mov
mov
call
jmp
mov
mov
push
call
pop
ret
call
jmp
push
push
call
call
movzx
push
call
pop
mov
cmp
je
xor
jmp
mov
cmp
jne
mov
cmp
jne
xor
cmp
jbe
cmp
setne
mov
call
test
jne
push
call
pop
call
test
jne
push
call
pop
call
and
call
test
jns
push
call
pop
call
mov
call
mov
call
test
jns
push
call
pop
call
test
jns
push
call
pop
push
call
pop
test
je
push
call
pop
call
push
push
push
push
call
mov
mov
test
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmp
jne
push
call
call
mov
mov
call
ret
push
mov
cmp
jne
call
push
call
push
call
pop
pop
pop
ret
call
mov
imul
add
mov
shr
and
mov
ret
push
mov
call
mov
mov
pop
ret
push
mov
push
push
lea
push
call
mov
mov
push
add
push
adc
push
push
call
cmp
jl
jg
cmp
jbe
or
mov
mov
test
je
mov
mov
leave
ret
push
mov
push
mov
mov
mov
test
jne
call
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
mov
test
jne
or
mov
mov
jmp
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
cmp
jne
mov
test
jne
call
mov
call
mov
pop
ret
mov
test
je
push
push
push
push
pop
push
sub
pop
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
add
test
je
cmp
je
movzx
movzx
pop
pop
sub
pop
pop
ret
push
push
push
call
add
pop
ret
push
mov
sub
lea
push
push
push
call
mov
test
je
mov
test
jne
call
mov
call
mov
jmp
mov
push
cmp
jne
push
pop
push
sub
pop
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
add
test
je
cmp
je
jmp
movzx
lea
push
push
call
movzx
movzx
lea
push
push
lea
call
add
movzx
lea
test
je
cmp
je
movzx
movzx
sub
pop
cmp
pop
pop
je
mov
and
mov
leave
ret
push
mov
push
push
and
add
push
mov
mov
mov
sub
push
push
mov
xor
movzx
mov
cmp
jne
mov
jmp
mov
cmp
jle
mov
and
push
pop
cmp
ja
movdqu
jmp
push
pxor
movzx
pop
movzx
psrldq
pinsrw
xor
cmp
je
add
movzx
dec
jne
mov
mov
mov
and
cmp
ja
movdqu
pcmpistri
jbe
add
mov
jmp
jae
pcmpistri
lea
mov
mov
mov
and
mov
cmp
ja
mov
and
cmp
ja
movdqu
movdqu
pcmpistri
jno
js
mov
add
add
jmp
movzx
xor
cmp
je
cmp
je
add
jmp
movzx
and
cmp
je
cmp
jne
add
add
jmp
add
jmp
mov
jmp
jne
movzx
mov
movd
pshuflw
push
pshufd
pxor
pop
mov
and
cmp
ja
movdqu
movdqa
pcmpeqw
pcmpeqw
por
pmovmskb
test
jne
add
jmp
bsf
mov
shr
lea
movzx
xor
cmp
je
movzx
cmp
jne
mov
mov
and
cmp
ja
mov
and
cmp
ja
movdqu
movdqu
movdqa
pcmpeqw
pcmpeqw
movdqa
pcmpeqw
por
pmovmskb
test
jne
add
add
jmp
bsf
mov
and
add
add
movzx
and
cmp
je
cmp
jne
add
add
jmp
mov
add
jmp
mov
jmp
mov
movzx
test
je
and
mov
mov
sub
push
mov
pop
test
je
movzx
test
je
movzx
movzx
sub
mov
mov
jne
add
cmp
jne
jmp
mov
cmp
je
mov
add
add
movzx
mov
test
jne
xor
pop
pop
mov
pop
mov
pop
ret
push
mov
cmp
mov
push
jne
test
jns
push
push
jmp
push
push
mov
push
push
call
mov
pop
pop
ret
push
mov
cmp
mov
push
push
mov
push
je
push
pop
mov
add
neg
push
mov
pop
mov
xor
div
mov
lea
cmp
ja
lea
mov
add
test
jne
xor
mov
sub
movzx
mov
mov
mov
sub
add
cmp
jb
pop
pop
pop
pop
ret
push
mov
push
mov
cmp
ja
push
push
mov
test
jne
call
push
call
push
call
mov
pop
pop
test
je
mov
jmp
xor
inc
push
push
push
call
mov
test
jne
push
pop
cmp
je
push
call
pop
test
jne
jmp
call
mov
call
mov
mov
pop
pop
jmp
push
call
pop
call
mov
xor
pop
pop
ret
test
jne
pxor
jmp
movd
punpcklbw
punpcklwd
pshufd
push
push
mov
and
test
jne
mov
and
shr
je
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
test
je
mov
shr
je
jmp
lea
movdqa
lea
dec
jne
and
je
mov
shr
je
movd
lea
dec
jne
and
je
mov
inc
dec
jne
pop
pop
ret
neg
add
sub
push
mov
and
je
mov
inc
dec
jne
shr
je
movd
lea
dec
jne
pop
jmp
push
mov
and
sub
push
xor
inc
or
push
call
test
je
xor
mov
mov
cpuid
push
mov
push
lea
or
mov
mov
mov
mov
test
mov
je
or
mov
mov
test
je
or
mov
mov
push
xor
pop
cpuid
lea
mov
mov
mov
mov
test
mov
je
or
mov
xor
xor
cpuid
lea
mov
mov
mov
mov
cmp
jne
cmp
jne
cmp
jne
xor
inc
xor
cpuid
mov
mov
mov
mov
mov
and
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
or
mov
pop
pop
xor
pop
leave
ret
call
test
jne
mov
ret
add
ret
push
mov
push
call
mov
push
mov
call
pop
mov
call
mov
pop
pop
ret
call
test
jne
mov
ret
add
ret
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
lea
push
pop
cmp
sbb
and
add
pop
ret
mov
pop
ret
call
xor
test
setne
mov
mov
ret
push
mov
push
mov
test
je
push
xor
pop
div
cmp
jae
call
mov
xor
jmp
imul
test
jne
inc
xor
cmp
ja
push
push
push
call
mov
test
jne
cmp
je
push
call
pop
test
jne
mov
test
je
jmp
mov
test
je
mov
mov
pop
pop
ret
push
mov
sub
mov
xor
mov
cmp
push
je
push
call
pop
and
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
call
pop
test
jne
test
jne
cmp
je
push
call
pop
mov
xor
pop
call
leave
ret
push
mov
mov
mov
pop
ret
push
mov
push
call
test
je
pop
jmp
push
push
push
push
push
call
int3
xor
push
push
push
push
push
call
add
ret
push
call
test
je
push
pop
int
push
push
mov
push
push
call
push
call
add
pop
ret
mov
push
push
pop
test
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
pop
mov
test
jne
push
push
mov
call
pop
pop
mov
test
jne
push
pop
pop
ret
xor
mov
mov
add
lea
cmp
jge
mov
jmp
xor
pop
ret
call
cmp
je
call
push
call
and
pop
ret
mov
ret
push
mov
push
mov
mov
cmp
jb
cmp
ja
mov
sub
sar
add
push
call
or
pop
jmp
lea
push
call
pop
pop
ret
push
mov
mov
cmp
jge
add
push
call
mov
pop
or
pop
ret
mov
add
push
call
pop
ret
push
mov
mov
mov
cmp
jb
cmp
ja
and
sub
sar
add
push
call
pop
pop
ret
add
push
call
pop
ret
push
mov
mov
mov
cmp
jge
and
lea
push
call
pop
pop
ret
add
push
call
pop
ret
push
push
call
xor
mov
mov
push
call
pop
mov
mov
mov
cmp
jge
mov
mov
test
je
test
jne
test
jne
lea
cmp
ja
lea
push
call
pop
test
je
mov
push
push
call
pop
pop
mov
mov
test
je
push
push
call
pop
pop
inc
jmp
mov
mov
jmp
push
call
pop
mov
mov
mov
test
je
push
mov
mov
add
push
call
mov
mov
add
push
call
mov
mov
mov
mov
test
je
and
mov
mov
mov
mov
or
mov
call
mov
call
ret
mov
push
call
pop
ret
push
mov
push
push
push
xor
and
push
mov
xor
push
mov
mov
jmp
inc
cmp
je
mov
cmp
je
cmp
je
cmp
je
call
mov
call
xor
jmp
mov
jmp
xor
or
jmp
mov
or
xor
inc
inc
mov
test
je
mov
test
je
movsx
cmp
jg
je
sub
je
sub
je
dec
je
sub
je
sub
je
sub
jne
cmp
jne
mov
or
jmp
or
jmp
test
jne
or
jmp
mov
jmp
test
jne
and
and
or
or
jmp
cmp
jne
mov
or
jmp
sub
je
sub
je
dec
je
sub
je
sub
jne
test
jne
or
jmp
test
jne
inc
and
jmp
test
jne
inc
or
jmp
test
jne
or
jmp
mov
test
je
xor
jmp
or
inc
mov
test
jne
mov
test
je
jmp
inc
cmp
je
push
push
push
call
add
test
jne
push
add
pop
jmp
inc
cmp
je
cmp
jne
inc
cmp
je
push
push
push
call
add
test
jne
add
or
jmp
push
push
push
call
add
test
jne
add
or
jmp
push
push
push
call
add
test
jne
add
or
jmp
inc
cmp
je
cmp
jne
push
push
lea
push
push
push
call
add
test
jne
inc
mov
xor
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
push
push
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
push
mov
mov
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
push
push
mov
xor
mov
mov
mov
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
test
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
lea
mov
mov
lea
mov
test
je
mov
call
mov
mov
test
js
jle
mov
cmp
jne
cmp
je
push
call
add
test
je
push
push
call
add
mov
mov
call
mov
mov
cmp
je
push
push
mov
call
mov
mov
mov
cmp
je
jmp
mov
mov
mov
cmp
jne
test
je
jmp
mov
jmp
cmp
je
push
push
mov
mov
call
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
push
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmp
jne
push
mov
call
mov
mov
call
jmp
pop
add
pop
pop
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
push
push
push
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
push
push
push
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
push
call
add
pop
ret
push
mov
push
mov
push
push
call
pop
mov
mov
test
jne
call
mov
or
or
jmp
test
je
call
mov
jmp
push
xor
test
je
mov
test
je
mov
and
mov
mov
mov
and
or
mov
mov
test
jne
call
add
cmp
je
call
add
cmp
jne
push
call
pop
test
jne
push
call
pop
test
je
mov
mov
lea
mov
mov
sub
dec
mov
mov
test
jle
push
push
push
call
add
mov
jmp
or
mov
jmp
cmp
je
cmp
je
mov
mov
and
sar
shl
add
jmp
mov
test
je
push
push
push
push
call
and
add
cmp
je
mov
mov
mov
jmp
xor
inc
push
mov
lea
push
push
call
add
mov
cmp
je
or
or
jmp
movzx
pop
pop
pop
pop
ret
push
mov
mov
test
jne
call
mov
call
or
pop
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
bt
jae
rep
jmp
cmp
jb
mov
xor
test
jne
bt
jb
bt
jae
test
jne
test
jne
bt
jae
mov
sub
lea
mov
lea
bt
jae
movq
sub
lea
movq
lea
test
je
bt
jae
movdqa
lea
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
jmp
movdqa
lea
lea
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
jmp
movdqa
lea
mov
movdqa
sub
movdqa
movdqa
lea
cmp
movdqa
palignr
movdqa
movdqa
palignr
movdqa
movdqa
palignr
movdqa
lea
jge
lea
cmp
jl
movdqu
sub
lea
movdqa
lea
jmp
bt
jae
mov
sub
lea
mov
lea
bt
jae
movq
sub
lea
movq
lea
mov
jmp
test
jne
shr
and
cmp
jb
rep
jmp
nop
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pushf
fild
enter
in
fild
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
outs
fadd
pop
fadd
push
fadd
dec
fadd
inc
fadd
cmp
inc
add
inc
add
inc
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
inc
add
fadd
mov
inc
add
pop
ret
nop
mov
mov
mov
pop
pop
ret
nop
mov
mov
mov
mov
mov
pop
pop
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sub
inc
add
add
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
enter
rcr
inc
add
fld
loopne
inc
add
fld
lock
clc
fld
or
inc
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
and
inc
add
inc
add
inc
add
inc
add
pop
ret
nop
mov
mov
mov
pop
pop
ret
lea
mov
mov
mov
mov
mov
pop
pop
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
lea
push
mov
and
test
jne
mov
and
shr
je
lea
nop
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
test
je
mov
shr
test
je
lea
movdqa
movdqa
lea
lea
dec
jne
and
je
mov
shr
je
mov
mov
lea
lea
dec
jne
mov
and
je
mov
mov
inc
inc
dec
jne
lea
pop
pop
pop
ret
lea
jmp
int3
int3
int3
mov
sub
sub
push
mov
mov
and
je
mov
mov
inc
inc
dec
jne
shr
je
mov
mov
lea
lea
dec
jne
pop
jmp
push
push
call
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
and
shl
mov
movsx
and
je
push
call
pop
and
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
and
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
and
call
mov
call
or
call
ret
push
mov
mov
call
mov
xor
mov
mov
mov
xor
push
mov
mov
mov
mov
mov
cmp
jne
xor
jmp
test
jne
call
and
call
mov
call
or
jmp
push
push
mov
sar
mov
and
shl
mov
mov
mov
mov
add
sar
cmp
je
cmp
jne
mov
not
test
jne
call
and
call
mov
call
jmp
mov
test
je
push
push
push
push
call
add
push
call
pop
test
je
mov
mov
test
je
call
mov
xor
cmp
lea
push
mov
sete
mov
push
mov
call
test
je
cmp
je
test
je
call
mov
and
mov
mov
mov
cmp
jbe
xor
mov
mov
test
jne
mov
xor
cmp
sete
mov
mov
mov
cmp
je
mov
mov
push
lea
mov
and
push
jmp
movsx
push
call
pop
test
je
mov
mov
sub
add
cmp
jbe
push
push
lea
push
call
add
cmp
je
mov
inc
inc
jmp
push
push
lea
push
call
add
cmp
je
mov
xor
push
push
inc
inc
push
mov
lea
push
push
lea
push
push
push
call
mov
test
je
push
lea
push
push
lea
push
mov
mov
push
call
test
je
mov
mov
add
cmp
jl
cmp
je
push
lea
push
push
lea
push
mov
mov
mov
push
call
test
je
cmp
jl
inc
inc
jmp
cmp
je
cmp
jne
movzx
xor
cmp
mov
mov
sete
add
add
mov
mov
mov
cmp
je
cmp
jne
push
call
pop
cmp
jne
add
cmp
je
push
pop
push
mov
call
pop
cmp
jne
inc
inc
mov
mov
cmp
jb
jmp
mov
mov
mov
inc
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
test
je
mov
xor
mov
test
jne
mov
mov
cmp
jbe
xor
sub
mov
lea
mov
cmp
jae
mov
inc
inc
mov
cmp
mov
mov
jne
inc
mov
inc
inc
mov
mov
mov
inc
inc
mov
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
mov
push
call
test
je
add
mov
cmp
jl
mov
sub
cmp
mov
jb
jmp
mov
cmp
jne
mov
cmp
jbe
mov
and
mov
mov
sub
mov
lea
cmp
jae
movzx
add
add
mov
cmp
jne
push
pop
mov
mov
add
add
add
mov
add
add
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
mov
mov
push
call
mov
mov
test
je
add
mov
mov
cmp
jl
mov
mov
sub
cmp
jb
jmp
mov
mov
test
je
mov
and
mov
sub
mov
lea
cmp
jae
movzx
add
add
mov
cmp
jne
push
pop
mov
mov
add
add
mov
add
add
cmp
jb
xor
push
push
push
lea
push
lea
sub
cdq
sub
sar
push
mov
push
push
push
call
mov
mov
mov
test
je
xor
mov
push
sub
lea
push
push
lea
add
mov
push
mov
mov
push
call
test
je
mov
add
mov
mov
cmp
jg
jmp
call
mov
mov
mov
mov
cmp
jg
mov
mov
mov
sub
mov
cmp
jb
jmp
push
lea
push
push
push
push
call
test
je
mov
xor
jmp
call
mov
mov
test
jne
test
je
push
pop
cmp
jne
call
mov
call
mov
jmp
push
call
pop
jmp
mov
mov
mov
test
je
cmp
jne
xor
jmp
call
mov
call
and
or
jmp
sub
mov
pop
pop
mov
xor
pop
call
leave
ret
push
mov
push
mov
test
jne
push
call
pop
jmp
push
call
pop
test
je
or
jmp
test
je
push
call
push
call
pop
neg
pop
sbb
jmp
xor
pop
pop
ret
push
mov
push
push
mov
xor
mov
and
cmp
jne
test
je
push
mov
sub
test
jle
push
push
push
call
pop
push
call
add
cmp
jne
mov
test
jns
and
mov
jmp
or
or
pop
mov
and
mov
pop
mov
pop
pop
ret
push
call
pop
ret
push
push
call
xor
mov
and
push
call
pop
and
xor
mov
mov
cmp
jge
mov
mov
test
je
test
je
push
push
call
pop
pop
mov
mov
mov
test
je
cmp
jne
push
call
pop
cmp
je
inc
mov
jmp
test
jne
test
je
push
call
pop
cmp
jne
or
and
call
inc
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
call
cmp
mov
je
mov
call
ret
mov
mov
push
call
pop
ret
push
push
call
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
and
shl
mov
movsx
and
je
push
call
pop
and
mov
test
je
push
call
pop
mov
jmp
call
mov
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
and
call
mov
call
or
call
ret
push
mov
push
push
mov
push
call
pop
cmp
je
mov
cmp
jne
test
jne
cmp
jne
test
je
push
call
push
mov
call
pop
pop
cmp
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
pop
mov
sar
and
mov
shl
mov
test
je
push
call
pop
or
jmp
xor
pop
pop
pop
ret
push
mov
push
mov
test
je
test
je
push
call
and
xor
pop
mov
mov
mov
pop
pop
ret
push
mov
mov
mov
cmp
jne
cmp
jne
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
pop
ret
call
int3
push
call
pop
xor
ret
push
mov
push
call
mov
test
je
mov
push
mov
mov
cmp
je
add
lea
cmp
jb
lea
cmp
jae
cmp
je
xor
test
je
mov
test
je
cmp
jne
and
xor
inc
jmp
cmp
jne
or
jmp
mov
push
mov
mov
cmp
jne
push
pop
mov
add
and
cmp
jl
cmp
mov
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
jmp
push
and
call
pop
mov
or
pop
jmp
xor
pop
pop
pop
ret
push
push
call
mov
test
je
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
pop
push
call
pop
and
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
call
push
call
pop
mov
mov
test
je
push
call
pop
cmp
je
cmp
je
cmp
jne
push
call
pop
mov
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
push
mov
call
mov
pop
test
jne
push
push
call
mov
pop
pop
test
je
push
push
call
pop
pop
test
je
push
push
call
pop
pop
call
or
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
push
push
call
mov
mov
and
xor
inc
mov
mov
push
pop
mov
mov
mov
and
push
call
pop
and
push
call
mov
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
push
call
pop
mov
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
call
call
test
jne
call
xor
ret
push
call
pop
mov
cmp
je
push
push
push
call
mov
pop
pop
test
je
push
push
call
pop
pop
test
je
push
push
call
pop
pop
call
or
mov
xor
inc
pop
ret
call
xor
pop
ret
mov
cmp
je
push
call
or
pop
jmp
push
mov
push
push
xor
push
cmp
jne
call
push
pop
mov
call
mov
jmp
mov
test
je
call
test
jne
call
test
jne
xor
inc
xor
push
push
push
push
mov
push
push
call
mov
test
jne
call
push
call
pop
xor
jmp
add
push
call
pop
mov
test
je
push
push
push
push
push
push
call
test
jne
call
push
call
push
call
and
pop
jmp
xor
inc
pop
pop
leave
ret
push
mov
push
lea
push
push
push
call
test
je
push
push
call
test
je
push
call
leave
ret
push
mov
push
call
pop
push
call
int3
push
mov
call
push
call
pop
push
call
int3
push
push
push
call
add
ret
push
push
push
call
add
ret
push
mov
cmp
je
push
call
pop
test
je
push
call
pop
call
push
push
call
pop
pop
test
jne
push
push
push
call
pop
mov
mov
jmp
mov
test
je
call
add
cmp
jb
cmp
pop
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
mov
push
push
push
call
add
pop
ret
push
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
jmp
push
mov
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
call
pop
ret
push
call
pop
ret
push
push
call
push
call
pop
and
cmp
je
mov
mov
mov
cmp
jne
push
mov
call
mov
mov
test
je
push
call
mov
mov
mov
mov
sub
mov
cmp
jb
push
call
cmp
je
cmp
jb
push
call
mov
push
call
mov
call
push
mov
call
mov
push
call
mov
cmp
jne
cmp
je
mov
mov
mov
mov
mov
jmp
push
push
call
pop
pop
push
push
call
pop
pop
mov
call
cmp
jne
mov
push
call
pop
push
call
cmp
je
push
call
pop
ret
call
ret
push
mov
push
push
push
call
add
pop
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
jne
push
call
push
call
pop
pop
ret
push
mov
mov
xor
cmp
je
inc
cmp
jb
xor
pop
ret
mov
pop
ret
push
mov
sub
mov
xor
mov
push
mov
push
push
call
mov
pop
test
je
push
push
call
pop
cmp
je
push
call
pop
test
jne
cmp
je
cmp
je
push
push
push
call
add
xor
test
jne
push
push
push
mov
call
mov
test
jne
push
push
push
call
add
test
jne
push
call
inc
pop
cmp
jbe
push
call
lea
mov
sub
push
sar
push
sub
push
push
call
add
test
jne
push
push
mov
push
call
add
test
jne
push
push
push
call
add
test
jne
push
push
push
call
add
jmp
push
call
mov
test
je
cmp
je
xor
mov
mov
mov
cmp
je
inc
cmp
jb
push
lea
push
lea
push
mov
call
pop
push
lea
push
push
call
pop
mov
pop
xor
pop
call
leave
ret
push
push
push
push
push
call
int3
push
push
call
push
call
pop
xor
mov
push
push
pop
push
call
pop
pop
mov
mov
test
jne
push
lea
push
push
call
add
or
jmp
mov
mov
add
cmp
jae
mov
or
mov
and
mov
and
mov
mov
mov
mov
add
mov
mov
jmp
lea
push
call
cmp
je
mov
test
je
mov
mov
add
mov
add
mov
mov
cmp
jl
mov
mov
xor
inc
mov
cmp
jge
push
push
call
pop
pop
mov
mov
test
jne
mov
mov
mov
mov
mov
mov
cmp
jge
mov
cmp
je
cmp
je
mov
test
je
test
jne
push
call
mov
test
je
mov
sar
mov
and
shl
add
mov
mov
mov
mov
mov
mov
push
lea
push
call
inc
mov
mov
inc
mov
mov
inc
mov
add
mov
jmp
mov
add
mov
add
cmp
jae
mov
or
mov
and
mov
mov
mov
add
mov
jmp
inc
mov
mov
jmp
mov
cmp
jge
mov
shl
add
mov
cmp
je
cmp
je
movsx
or
mov
jmp
mov
test
jne
push
pop
jmp
lea
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
mov
and
cmp
jne
movsx
or
jmp
cmp
jne
movsx
or
mov
push
lea
push
call
inc
jmp
movsx
or
mov
mov
mov
test
je
mov
mov
inc
jmp
mov
call
xor
call
ret
push
call
pop
ret
push
mov
push
push
cmp
jne
call
push
push
push
push
mov
xor
push
push
mov
call
mov
mov
test
je
cmp
jne
mov
lea
push
lea
push
push
push
push
call
mov
add
cmp
jae
mov
cmp
jae
lea
cmp
jb
push
call
mov
pop
test
je
lea
push
lea
push
lea
push
push
push
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
push
mov
mov
push
mov
push
and
mov
mov
mov
push
mov
test
je
mov
add
mov
xor
mov
cmp
jne
xor
test
sete
inc
mov
mov
mov
jmp
inc
test
je
mov
mov
inc
mov
mov
movzx
push
inc
call
pop
test
je
inc
test
je
mov
mov
inc
inc
mov
test
je
mov
test
jne
cmp
je
cmp
jne
test
je
mov
jmp
dec
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
cmp
je
mov
test
je
mov
add
mov
mov
inc
xor
inc
xor
jmp
inc
inc
cmp
je
cmp
jne
test
jne
cmp
je
lea
cmp
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
jmp
dec
test
je
mov
inc
inc
test
jne
mov
test
je
cmp
jne
cmp
je
cmp
je
test
je
movsx
push
call
pop
test
je
test
je
mov
mov
inc
inc
inc
mov
mov
inc
jmp
test
je
inc
inc
inc
inc
jmp
test
je
mov
inc
inc
jmp
mov
pop
pop
pop
test
je
and
mov
inc
pop
ret
cmp
jne
call
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
inc
pop
add
mov
test
jne
lea
push
push
call
mov
pop
pop
mov
test
je
mov
push
cmp
je
push
call
cmp
pop
lea
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
jne
add
add
cmp
jne
mov
push
call
and
and
mov
xor
pop
pop
pop
pop
ret
push
call
and
or
jmp
xor
push
push
push
push
push
call
int3
push
mov
mov
mov
pop
ret
push
mov
mov
test
js
cmp
jle
cmp
jne
mov
jmp
mov
mov
mov
pop
ret
call
mov
call
or
pop
ret
push
mov
sub
mov
and
and
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
lea
push
call
mov
xor
mov
call
xor
call
xor
lea
push
call
mov
xor
lea
xor
xor
cmp
jne
mov
jmp
test
jne
mov
or
shl
or
mov
not
mov
pop
pop
leave
ret
push
push
mov
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
push
mov
mov
jmp
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
mov
push
push
call
mov
xor
test
je
push
mov
cmp
je
add
cmp
jne
add
cmp
jne
push
push
push
push
sub
push
sar
inc
push
push
push
push
call
mov
test
je
push
call
mov
pop
test
je
xor
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
xor
push
call
mov
jmp
push
call
xor
pop
pop
pop
leave
ret
push
mov
mov
xor
je
push
call
pop
ret
pop
jmp
push
mov
mov
xor
push
je
call
pop
ret
call
pop
ret
push
mov
mov
xor
push
je
call
pop
ret
call
pop
ret
push
mov
mov
xor
push
push
je
call
pop
ret
call
pop
ret
push
mov
sub
lea
push
call
test
je
movzx
leave
ret
push
pop
leave
ret
push
mov
push
push
mov
test
jns
mov
xor
xor
mov
je
push
lea
push
call
cmp
jne
inc
mov
xor
test
setg
pop
leave
ret
push
push
push
call
mov
mov
push
push
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
mov
push
push
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
push
push
mov
call
xor
pop
mov
pop
ret
push
mov
push
call
pop
ret
push
mov
push
call
push
call
pop
ret
push
mov
push
call
push
call
pop
ret
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzx
push
call
pop
test
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
push
mov
push
push
mov
push
mov
push
call
cmp
je
push
call
mov
test
je
push
call
cmp
je
push
call
mov
test
je
push
call
push
pop
lea
mov
cmp
je
cmp
je
push
call
mov
cmp
je
cmp
je
push
call
mov
add
dec
mov
jne
mov
add
push
call
pop
pop
pop
pop
ret
push
mov
push
push
mov
xor
mov
push
test
je
cmp
je
mov
test
je
cmp
jne
mov
test
je
cmp
jne
push
call
push
call
pop
pop
mov
test
je
cmp
jne
push
call
push
call
pop
pop
push
call
push
call
pop
pop
mov
test
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
push
call
add
mov
cmp
je
cmp
jne
push
call
push
call
pop
pop
push
pop
lea
lea
mov
cmp
je
mov
test
je
cmp
jne
push
call
push
call
pop
pop
mov
cmp
je
mov
test
je
cmp
jne
push
call
pop
mov
add
add
dec
mov
jne
push
call
pop
pop
pop
pop
pop
ret
push
mov
push
mov
test
je
push
push
mov
push
call
cmp
je
push
call
mov
test
je
push
call
cmp
je
push
call
mov
test
je
push
call
push
pop
lea
mov
cmp
je
cmp
je
push
call
mov
cmp
je
cmp
je
push
call
mov
add
dec
mov
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
push
push
call
call
mov
mov
test
je
cmp
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
push
lea
push
call
pop
pop
mov
mov
mov
call
jmp
mov
push
call
pop
ret
push
mov
push
mov
test
je
mov
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmp
pop
jne
cmp
je
push
call
pop
mov
pop
jmp
xor
pop
pop
ret
cmp
jne
push
call
pop
mov
xor
ret
push
mov
mov
sub
je
sub
je
sub
je
dec
je
xor
pop
ret
mov
pop
ret
mov
pop
ret
mov
pop
ret
mov
pop
ret
push
mov
sub
lea
push
call
mov
and
cmp
jne
mov
call
jmp
cmp
jne
mov
call
jmp
cmp
jne
mov
mov
mov
cmp
je
mov
and
leave
ret
push
mov
push
mov
push
push
push
xor
lea
push
push
call
xor
movzx
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
lea
push
push
call
xor
mov
test
je
mov
mov
inc
cmp
jb
mov
mov
lea
jmp
movzx
movzx
jmp
cmp
jae
mov
inc
cmp
jbe
add
mov
test
jne
push
push
lea
push
push
lea
push
push
push
call
push
push
lea
push
push
push
lea
push
push
push
push
call
add
lea
push
push
push
push
push
lea
push
push
push
push
call
add
mov
movzx
test
je
or
mov
jmp
test
je
or
mov
mov
jmp
mov
inc
cmp
jb
jmp
push
lea
pop
sub
mov
mov
add
add
mov
add
cmp
ja
or
lea
jmp
cmp
ja
or
lea
mov
jmp
mov
mov
inc
lea
cmp
jb
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmp
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
and
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
mov
call
jmp
mov
push
call
pop
ret
push
push
call
or
call
mov
mov
call
mov
push
call
pop
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
mov
rep
xor
mov
push
push
call
pop
pop
mov
mov
test
jne
mov
push
call
test
mov
jne
mov
cmp
je
push
call
pop
mov
mov
push
call
mov
test
jne
test
jne
push
call
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jge
mov
mov
inc
jmp
mov
mov
cmp
jge
mov
mov
inc
jmp
mov
cmp
jge
mov
mov
inc
jmp
push
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
mov
call
jmp
mov
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
mov
jmp
xor
mov
call
ret
push
mov
sub
mov
xor
mov
push
push
push
mov
call
mov
pop
mov
test
jne
push
call
pop
xor
jmp
push
xor
mov
mov
mov
cmp
je
inc
add
mov
cmp
jb
cmp
je
cmp
je
movzx
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
mov
xor
inc
add
mov
cmp
jbe
cmp
lea
je
mov
test
je
movzx
movzx
jmp
or
inc
cmp
jbe
add
cmp
jne
lea
mov
or
inc
dec
jne
push
call
add
mov
mov
jmp
mov
xor
movzx
mov
shl
or
lea
stos
stos
stos
jmp
cmp
je
push
call
jmp
or
jmp
push
lea
push
push
call
mov
add
imul
lea
mov
cmp
mov
je
mov
test
je
movzx
movzx
jmp
cmp
jae
mov
or
movzx
inc
cmp
jbe
add
cmp
jne
mov
inc
add
mov
cmp
jb
mov
push
mov
mov
call
add
mov
push
lea
lea
pop
mov
mov
lea
lea
dec
jne
push
call
pop
xor
pop
mov
pop
xor
pop
call
leave
ret
push
mov
mov
sub
cmp
je
push
push
lea
call
mov
mov
test
jne
mov
lea
cmp
ja
add
movzx
movzx
jmp
mov
push
cmp
jae
push
call
pop
pop
test
jne
movzx
movzx
jmp
movzx
mov
movzx
movzx
jmp
lea
push
push
lea
push
push
push
call
add
test
jne
movzx
movzx
jmp
movzx
cmp
pop
je
mov
and
leave
ret
push
push
call
mov
cmp
je
push
call
pop
and
push
push
call
pop
pop
mov
mov
call
call
ret
push
call
pop
ret
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mul
mov
mov
mul
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
push
mov
push
call
test
je
push
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
push
mov
mov
mov
pop
ret
and
ret
cmp
jne
repz
jmp
push
push
call
xor
mov
push
call
pop
and
push
pop
mov
cmp
jge
mov
mov
test
je
test
je
push
call
pop
cmp
je
inc
mov
cmp
jl
mov
mov
add
push
call
mov
push
call
pop
mov
and
inc
jmp
mov
call
mov
call
ret
mov
push
call
pop
ret
push
mov
push
mov
cmp
jne
push
call
pop
test
jne
push
call
pop
push
call
pop
pop
ret
push
push
mov
mov
push
mov
test
je
cmp
je
push
call
push
call
and
pop
add
cmp
jl
pop
cmp
je
cmp
jne
push
call
add
cmp
jl
pop
pop
ret
push
push
call
cmp
jne
call
push
call
push
call
pop
pop
mov
cmp
jne
push
call
pop
mov
test
jne
call
mov
xor
jmp
push
call
pop
and
cmp
jne
push
push
call
mov
jmp
push
call
pop
mov
call
xor
inc
call
ret
push
call
pop
ret
push
push
mov
mov
cmp
jne
mov
push
push
add
call
add
cmp
jl
xor
pop
inc
pop
ret
int3
push
mov
mov
push
call
pop
ret
push
mov
push
push
xor
push
push
push
call
mov
add
test
jne
cmp
jbe
push
call
lea
mov
cmp
jbe
or
cmp
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
xor
push
call
mov
pop
test
jne
test
je
push
call
mov
lea
mov
cmp
jbe
or
cmp
jne
pop
pop
mov
pop
pop
ret
push
mov
push
push
xor
push
push
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
mov
cmp
jbe
or
cmp
jne
mov
pop
pop
pop
ret
push
push
call
and
xor
mov
test
setne
test
jne
call
push
pop
mov
call
mov
jmp
or
xor
cmp
setne
test
je
cmp
je
mov
and
neg
sbb
inc
je
and
push
push
push
push
push
push
lea
push
call
add
mov
mov
mov
call
test
je
or
mov
call
ret
mov
mov
cmp
je
test
je
mov
mov
sar
and
shl
mov
and
push
call
pop
ret
push
mov
push
and
lea
push
push
call
pop
pop
test
jne
or
leave
ret
push
push
push
push
push
push
push
push
call
push
mov
call
add
mov
pop
leave
ret
push
mov
push
push
push
push
push
push
call
add
pop
ret
push
mov
push
push
push
push
call
add
pop
ret
push
mov
sub
push
mov
test
jne
xor
jmp
push
push
push
lea
call
mov
xor
cmp
jne
push
push
push
call
add
mov
jmp
mov
test
je
mov
test
jne
call
mov
call
mov
jmp
movzx
mov
dec
mov
inc
test
push
mov
pop
je
test
jne
movzx
mov
mov
test
jne
mov
movzx
jmp
mov
test
jne
mov
jmp
shl
movzx
or
inc
movzx
mov
movzx
mov
mov
inc
test
push
pop
je
test
jne
mov
jmp
mov
dec
test
je
shl
movzx
or
movzx
inc
cmp
jne
test
je
mov
test
jne
jmp
sbb
and
dec
cmp
pop
pop
je
mov
and
mov
pop
leave
ret
push
mov
push
push
push
push
call
add
pop
ret
push
mov
sub
lea
push
push
push
push
call
mov
xor
test
je
mov
cmp
jne
push
push
push
call
add
mov
jmp
mov
test
je
mov
test
jne
call
mov
call
mov
jmp
movzx
mov
mov
movzx
dec
inc
test
mov
je
test
jne
movzx
mov
test
jne
mov
movzx
mov
jmp
mov
test
jne
mov
jmp
shl
movzx
or
mov
movzx
inc
mov
mov
mov
cmp
jb
cmp
ja
add
jmp
cmp
jb
cmp
ja
add
jmp
mov
movzx
test
je
movzx
mov
mov
movzx
mov
mov
movzx
inc
test
je
test
jne
mov
jmp
mov
dec
test
je
shl
movzx
or
mov
movzx
inc
mov
cmp
jb
cmp
ja
add
jmp
cmp
jb
cmp
ja
add
jmp
mov
movzx
push
test
mov
pop
je
mov
movzx
mov
mov
cmp
jne
test
je
mov
test
jne
jmp
sbb
and
dec
cmp
pop
pop
pop
je
mov
and
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
add
push
movzx
movzx
add
xor
add
push
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmp
sete
mov
ret
mov
mov
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
xor
cmp
jne
mov
cmp
sete
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
push
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmp
je
cmp
jbe
lea
mov
mov
mov
cmp
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
push
mov
mov
cmp
jne
call
mov
jmp
test
js
cmp
jae
mov
sar
and
mov
shl
movsx
and
pop
ret
call
mov
call
xor
pop
ret
push
push
call
or
mov
mov
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
mov
and
shl
mov
movsx
and
je
push
call
pop
and
mov
mov
test
je
push
push
push
push
call
add
mov
mov
jmp
call
mov
call
and
mov
mov
mov
mov
call
mov
jmp
mov
mov
mov
push
call
pop
ret
call
and
call
mov
call
mov
mov
call
ret
push
mov
push
push
push
mov
push
push
call
or
pop
cmp
jne
call
mov
mov
mov
jmp
push
lea
push
push
push
push
call
test
jne
call
push
call
pop
jmp
mov
sar
and
mov
shl
and
mov
mov
pop
pop
leave
ret
push
mov
inc
push
mov
push
call
pop
mov
mov
test
je
or
mov
jmp
or
lea
mov
mov
mov
and
mov
pop
pop
ret
push
mov
sub
push
lea
call
mov
movzx
mov
movzx
and
cmp
je
mov
and
leave
ret
push
mov
push
push
call
pop
pop
pop
ret
push
push
call
mov
mov
sar
mov
and
shl
add
cmp
jne
push
call
pop
and
cmp
jne
push
lea
push
call
inc
mov
call
mov
sar
and
shl
mov
add
add
push
call
xor
inc
call
ret
mov
push
call
pop
ret
push
push
call
or
mov
and
push
call
pop
test
jne
or
jmp
push
call
pop
and
xor
mov
cmp
jge
mov
test
je
mov
mov
add
cmp
jae
test
jne
cmp
jne
push
call
pop
mov
cmp
jne
push
lea
push
call
inc
and
call
mov
test
jne
lea
push
call
test
je
lea
push
call
add
jmp
mov
mov
mov
push
call
pop
ret
mov
test
jne
mov
or
mov
sub
sar
mov
shl
add
mov
cmp
jne
inc
jmp
push
push
call
pop
pop
mov
mov
test
je
mov
add
mov
add
cmp
jae
mov
or
and
add
mov
jmp
mov
shl
mov
mov
sar
mov
and
shl
mov
mov
push
call
pop
test
jne
or
mov
mov
call
mov
call
ret
mov
push
call
pop
ret
push
mov
mov
push
push
test
js
cmp
jae
mov
sar
mov
mov
and
shl
test
je
cmp
je
cmp
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
or
xor
jmp
call
mov
call
and
or
pop
pop
pop
ret
push
mov
mov
cmp
jne
call
and
call
mov
jmp
test
js
cmp
jae
mov
sar
and
mov
shl
test
je
mov
pop
ret
call
and
call
mov
call
or
pop
ret
push
mov
mov
push
push
test
js
cmp
jae
mov
sar
mov
mov
and
shl
cmp
jne
cmp
push
mov
jne
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
mov
xor
pop
jmp
call
mov
call
and
or
pop
pop
pop
ret
push
mov
mov
mov
and
sar
shl
mov
add
add
push
call
pop
ret
push
mov
sub
push
push
mov
test
je
mov
test
je
cmp
jne
mov
test
je
xor
mov
xor
pop
pop
leave
ret
push
push
lea
call
mov
cmp
jne
mov
test
je
movzx
mov
xor
inc
jmp
lea
push
movzx
push
call
pop
pop
test
je
mov
cmp
jle
cmp
jl
xor
cmp
setne
push
push
push
push
push
push
call
mov
test
jne
cmp
jb
cmp
je
mov
jmp
xor
cmp
setne
xor
inc
push
push
mov
push
push
push
push
call
test
jne
call
or
mov
cmp
je
mov
and
mov
pop
jmp
push
mov
push
push
push
push
call
add
pop
ret
push
mov
push
mov
cmp
jne
call
mov
cmp
jne
mov
leave
ret
push
lea
push
push
lea
push
push
call
test
je
mov
leave
ret
push
push
call
mov
cmp
jne
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
mov
and
shl
mov
movsx
and
je
push
call
pop
xor
mov
mov
mov
test
je
push
call
pop
push
call
test
jne
call
mov
mov
test
je
call
mov
call
mov
or
mov
mov
call
mov
jmp
mov
mov
push
call
pop
ret
call
mov
call
or
call
ret
push
push
call
call
mov
test
je
and
call
jmp
xor
inc
ret
mov
mov
call
int3
push
call
mov
ret
push
push
push
call
pop
pop
mov
push
call
mov
mov
test
jne
push
pop
pop
ret
and
xor
pop
ret
push
push
call
call
and
push
call
pop
mov
mov
mov
call
mov
call
ret
mov
call
ret
push
mov
push
push
push
mov
push
push
call
push
mov
call
mov
mov
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
mov
add
cmp
jb
push
push
call
pop
pop
test
jne
lea
cmp
jb
push
push
call
pop
pop
test
je
sar
push
lea
call
mov
push
call
lea
push
mov
call
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
push
call
neg
sbb
neg
pop
dec
pop
ret
push
xor
push
call
mov
add
cmp
jb
pop
ret
push
mov
mov
mov
pop
ret
push
mov
mov
mov
pop
ret
push
call
ret
push
mov
mov
mov
mov
mov
mov
pop
ret
push
push
call
xor
mov
xor
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
push
push
call
pop
pop
add
mov
mov
jmp
mov
sub
je
sub
je
dec
je
call
mov
call
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
xor
inc
mov
push
call
mov
cmp
je
test
jne
push
call
test
je
push
call
pop
and
cmp
je
cmp
je
cmp
jne
mov
mov
and
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
mov
add
cmp
jge
mov
imul
mov
and
inc
mov
mov
jmp
push
call
mov
mov
mov
call
cmp
jne
push
push
call
pop
jmp
mov
mov
mov
test
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
push
mov
mov
mov
push
mov
cmp
je
mov
imul
add
add
cmp
jb
imul
add
cmp
jae
cmp
jne
mov
jmp
xor
pop
pop
ret
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
mov
test
je
mov
test
je
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
cmp
je
add
dec
jne
test
je
sub
movzx
mov
lea
test
je
dec
jne
xor
test
jne
mov
call
push
jmp
push
mov
push
mov
test
je
mov
test
je
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
mov
sub
movzx
mov
lea
test
je
dec
jne
xor
pop
test
jne
mov
call
push
jmp
push
mov
mov
mov
add
test
jne
sub
sar
dec
pop
ret
push
mov
mov
mov
push
test
jne
test
jne
cmp
jne
xor
jmp
test
je
mov
test
je
test
jne
xor
mov
jmp
mov
test
jne
xor
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
push
mov
mov
cmp
jne
sub
movzx
mov
lea
test
je
dec
jne
jmp
sub
movzx
mov
lea
test
je
dec
je
dec
jne
test
jne
xor
mov
test
pop
pop
jne
cmp
jne
mov
xor
push
mov
pop
jmp
xor
mov
call
push
jmp
push
mov
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
xor
push
mov
call
mov
mov
call
mov
cmp
jne
push
push
push
call
mov
test
jne
call
cmp
jne
push
call
mov
test
je
push
push
call
test
je
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
mov
test
je
push
push
call
push
call
mov
mov
call
test
je
mov
test
je
push
call
cmp
je
push
pop
jmp
cmp
je
push
call
push
jmp
mov
mov
cmp
je
cmp
je
push
call
push
mov
call
mov
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
test
jne
mov
or
jmp
mov
cmp
je
push
call
test
je
call
mov
test
je
mov
cmp
je
push
call
test
je
push
call
mov
mov
push
call
test
je
push
push
push
push
call
jmp
xor
mov
pop
pop
xor
pop
call
leave
ret
push
mov
sub
push
push
lea
call
movzx
mov
mov
test
jne
xor
cmp
je
mov
mov
movzx
and
jmp
mov
test
je
xor
inc
cmp
pop
je
mov
and
mov
leave
ret
push
mov
push
push
push
push
call
add
pop
ret
push
mov
push
mov
test
je
mov
test
je
mov
test
jne
mov
call
push
pop
mov
call
mov
pop
pop
ret
push
mov
sub
mov
mov
inc
test
je
dec
jne
pop
test
jne
mov
call
push
jmp
xor
jmp
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
push
mov
push
mov
test
je
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
pop
ret
push
mov
push
push
mov
xor
mov
push
push
mov
push
test
jle
mov
mov
dec
cmp
je
inc
test
jne
or
mov
sub
dec
cmp
lea
jl
mov
mov
xor
test
jne
mov
mov
mov
mov
mov
xor
cmp
push
setne
push
push
push
lea
push
push
call
mov
mov
test
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
mov
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
mov
jmp
xor
test
je
push
push
push
push
push
push
call
test
je
mov
push
push
push
push
push
push
call
mov
add
test
je
mov
test
je
mov
test
je
cmp
jg
push
push
push
push
push
push
call
add
jmp
test
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
jmp
xor
test
je
push
push
push
push
push
push
call
add
test
je
xor
push
push
cmp
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
pop
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
mov
test
je
sub
cmp
jne
push
call
pop
pop
ret
int3
int3
int3
push
mov
push
mov
xor
mov
mov
push
push
push
xor
test
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
test
jne
xor
jmp
jle
cmp
ja
lea
cmp
ja
call
mov
test
je
mov
jmp
push
call
mov
pop
test
je
mov
add
jmp
mov
test
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
push
push
push
push
call
mov
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
push
mov
mov
cmp
jne
xor
leave
ret
mov
cmp
jae
movzx
mov
movzx
jmp
lea
push
push
lea
push
push
call
neg
sbb
and
movzx
movzx
and
leave
ret
push
mov
mov
test
jle
push
push
call
pop
pop
push
push
push
push
push
push
call
add
pop
ret
push
mov
call
push
mov
call
push
call
cmp
pop
pop
jne
push
call
pop
push
call
pop
pop
ret
push
mov
sub
push
call
test
je
push
pop
int
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
imul
mov
push
pop
imul
mov
mov
push
pop
shl
mov
mov
push
call
leave
ret
push
mov
xor
mov
cmp
jbe
mov
cmp
je
inc
add
cmp
jb
pop
ret
push
mov
push
push
push
xor
mov
lea
cdq
sub
mov
sar
push
push
push
call
add
test
je
jns
lea
jmp
lea
cmp
jle
or
jmp
mov
pop
pop
pop
pop
ret
push
mov
cmp
je
push
call
pop
test
js
cmp
jae
mov
pop
ret
xor
pop
ret
push
mov
mov
xor
je
xor
push
push
push
push
push
push
push
push
push
call
pop
ret
push
push
push
push
push
push
call
pop
push
call
pop
ret
push
mov
push
mov
xor
test
je
mov
push
push
mov
push
pop
push
pop
sub
mov
jmp
push
pop
movzx
cmp
jb
cmp
ja
add
movzx
jmp
mov
movzx
cmp
jb
cmp
ja
add
movzx
add
dec
je
test
je
cmp
je
movzx
movzx
pop
sub
pop
pop
pop
ret
push
mov
cmp
jne
push
call
pop
pop
ret
push
mov
test
jne
push
call
pop
xor
jmp
push
jmp
test
jne
inc
push
push
push
push
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
mov
xor
pop
pop
pop
ret
call
mov
call
push
call
pop
mov
jmp
call
mov
call
push
call
pop
mov
mov
jmp
push
mov
sub
push
call
test
je
push
push
call
push
call
mov
test
jne
or
jmp
mov
call
test
mov
je
and
and
mov
mov
mov
mov
mov
lea
push
push
mov
push
push
push
call
jmp
or
push
push
push
push
push
push
push
call
pop
leave
ret
push
mov
sub
push
xor
test
push
mov
mov
mov
mov
je
mov
mov
jmp
mov
mov
lea
push
call
pop
test
jne
mov
mov
test
jne
test
jne
cmp
je
or
mov
and
mov
sub
je
dec
je
dec
je
call
mov
mov
or
call
push
pop
mov
call
mov
jmp
mov
jmp
test
je
test
je
mov
mov
jmp
mov
jmp
mov
mov
mov
push
push
pop
push
pop
mov
sub
je
sub
je
sub
je
sub
je
sub
jne
cmp
sete
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
and
mov
cmp
jg
je
test
je
cmp
je
cmp
je
cmp
jne
mov
jmp
push
jmp
push
pop
jmp
cmp
je
cmp
je
cmp
je
call
mov
mov
or
call
push
pop
mov
call
jmp
push
jmp
xor
inc
mov
mov
mov
mov
test
je
mov
not
and
test
mov
js
xor
inc
mov
test
je
or
or
mov
mov
mov
test
je
or
mov
test
je
or
mov
test
je
or
jmp
test
je
or
mov
call
mov
mov
cmp
jne
call
mov
or
call
mov
call
mov
pop
pop
pop
leave
ret
push
mov
push
mov
push
lea
push
push
push
push
call
add
mov
cmp
jne
mov
mov
mov
and
cmp
jne
test
je
push
lea
push
and
push
push
push
mov
push
push
call
add
mov
cmp
jne
mov
mov
sar
and
mov
shl
and
call
push
call
pop
call
mov
jmp
push
call
test
jne
mov
mov
sar
and
mov
shl
and
call
mov
push
call
pop
push
call
test
jne
call
mov
jmp
cmp
jne
or
jmp
cmp
jne
or
push
push
call
mov
pop
pop
mov
mov
sar
and
mov
shl
or
mov
mov
mov
sar
and
mov
shl
mov
and
mov
mov
and
mov
jne
test
jns
test
je
push
push
push
push
call
mov
and
add
mov
mov
cmp
jne
call
cmp
je
push
call
jmp
push
lea
push
push
mov
call
add
test
jne
cmp
jne
push
push
push
call
add
cmp
je
push
push
push
push
call
and
add
cmp
je
mov
mov
test
jns
test
jne
mov
and
jne
or
jmp
or
mov
mov
and
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
and
cmp
jne
mov
jmp
mov
test
je
mov
test
jne
mov
mov
and
cmp
je
cmp
je
cmp
jne
test
je
push
pop
cmp
jbe
cmp
jbe
cmp
je
jmp
push
push
push
push
call
add
or
je
push
push
push
push
call
and
add
cmp
je
push
lea
push
push
call
add
cmp
je
mov
push
pop
cmp
je
cmp
jne
cmp
jne
mov
jmp
and
cmp
jne
push
call
pop
call
push
pop
mov
jmp
cmp
jne
push
push
push
push
call
and
add
cmp
je
mov
jmp
test
je
push
pop
cmp
jbe
cmp
ja
push
push
push
push
call
add
or
je
push
push
push
push
call
and
add
cmp
jne
jmp
push
pop
movsx
mov
dec
je
dec
jne
mov
jmp
push
pop
mov
mov
mov
sub
push
lea
add
push
push
call
add
cmp
je
mov
add
cmp
jg
mov
mov
sar
and
mov
shl
mov
xor
and
xor
mov
mov
mov
sar
and
mov
shl
shr
mov
shl
and
or
mov
mov
cmp
jne
test
je
mov
mov
sar
and
mov
shl
or
mov
mov
mov
mov
and
cmp
jne
test
je
push
call
push
lea
push
and
push
push
push
push
push
call
add
cmp
jne
call
push
call
mov
mov
sar
and
mov
shl
and
push
call
pop
jmp
mov
mov
sar
and
mov
shl
mov
mov
jmp
push
push
push
push
push
call
int3
int3
int3
int3
push
push
mov
mov
mov
test
je
sub
test
je
movzx
cmp
jne
test
cmove
inc
sub
jbe
test
jne
lea
and
cmp
ja
mov
cmp
jne
sub
jbe
lea
add
not
and
test
je
xor
pop
pop
ret
lea
sbb
or
pop
pop
ret
push
mov
cmp
push
jne
cmp
jne
call
mov
call
mov
jmp
cmp
je
mov
cmp
jbe
call
mov
call
mov
jmp
pop
pop
jmp
push
push
push
push
call
add
pop
pop
ret
push
mov
sub
cmp
je
push
push
push
push
lea
call
mov
mov
test
je
mov
test
je
mov
cmp
jbe
call
mov
call
jmp
mov
cmp
jne
push
push
push
call
add
mov
jmp
sub
movzx
lea
push
push
call
mov
movzx
lea
push
push
call
add
inc
dec
je
test
je
cmp
je
sub
cmp
je
mov
and
pop
mov
pop
pop
leave
ret
xor
leave
ret
mov
cmp
je
cmp
je
push
call
ret
xor
push
push
push
push
push
push
push
call
mov
ret
call
test
je
push
call
pop
test
je
push
call
test
je
push
pop
int
push
push
push
call
add
push
call
int3
push
mov
cmp
jne
call
mov
call
or
pop
ret
push
push
push
call
pop
ret
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
push
mov
sub
push
push
push
mov
xor
push
push
push
push
mov
mov
call
mov
mov
and
add
mov
cmp
je
push
push
push
push
call
mov
and
add
cmp
je
mov
mov
sub
sbb
mov
js
jg
test
je
push
push
call
push
call
mov
test
jne
call
mov
call
mov
pop
pop
pop
leave
ret
push
push
call
pop
mov
mov
pop
test
jl
jg
cmp
jb
mov
jmp
mov
push
push
push
call
add
cmp
je
cdq
sub
mov
sbb
mov
js
jg
test
je
jmp
call
cmp
jne
call
mov
or
or
push
push
call
pop
pop
push
push
call
push
call
jmp
test
jg
jl
test
jae
push
push
push
push
call
and
add
cmp
je
push
call
pop
push
call
neg
sbb
neg
dec
cdq
mov
mov
mov
and
mov
cmp
jne
call
mov
call
mov
call
mov
and
cmp
je
push
push
push
push
call
and
add
cmp
je
xor
jmp
push
mov
sub
mov
push
push
mov
push
push
pop
xor
mov
mov
mov
cmp
jne
call
mov
call
mov
jmp
test
js
cmp
jae
mov
sar
mov
mov
and
shl
mov
mov
mov
test
je
cmp
jbe
call
mov
call
mov
jmp
test
je
test
jne
cmp
jne
call
and
jmp
mov
add
sar
mov
movsx
dec
je
dec
jne
mov
not
test
je
and
mov
mov
jmp
mov
not
test
je
shr
cmp
jae
push
pop
push
call
pop
mov
test
jne
call
mov
call
mov
jmp
push
push
push
push
call
mov
add
mov
mov
mov
mov
mov
mov
mov
test
mov
je
mov
cmp
je
test
je
mov
xor
lea
mov
inc
dec
cmp
mov
mov
je
mov
mov
cmp
je
test
je
mov
mov
inc
push
dec
cmp
mov
pop
mov
jne
mov
mov
cmp
je
test
je
push
pop
mov
mov
push
inc
pop
mov
dec
mov
push
call
test
mov
pop
je
mov
test
je
lea
push
push
call
mov
test
je
cmp
jne
push
lea
push
mov
shr
mov
push
push
push
call
test
jne
call
push
call
pop
or
mov
jmp
mov
lea
mov
jmp
mov
mov
push
lea
push
push
push
push
call
test
je
mov
test
js
cmp
ja
mov
add
mov
mov
test
jns
cmp
je
test
je
mov
cmp
jne
or
jmp
and
mov
mov
mov
lea
mov
mov
cmp
jae
push
pop
mov
mov
cmp
je
cmp
je
mov
inc
inc
jmp
mov
dec
cmp
jae
lea
cmp
jne
push
pop
add
mov
jmp
mov
inc
mov
jmp
push
lea
push
push
lea
push
mov
inc
push
call
test
jne
call
test
jne
cmp
je
mov
mov
test
je
push
pop
push
cmp
jne
mov
inc
jmp
mov
mov
mov
inc
mov
jmp
cmp
jne
push
pop
cmp
jne
mov
inc
push
pop
cmp
jb
jmp
push
push
push
push
call
mov
add
push
pop
cmp
je
push
pop
mov
inc
jmp
mov
push
pop
mov
inc
jmp
mov
mov
test
jne
or
mov
jmp
mov
mov
inc
mov
mov
sub
cmp
jne
test
je
dec
mov
test
js
inc
jmp
movzx
xor
inc
cmp
jne
mov
cmp
jg
cmp
jb
dec
inc
movzx
cmp
je
mov
movzx
movsx
test
jne
call
mov
jmp
inc
cmp
jne
add
jmp
mov
mov
test
je
mov
inc
mov
mov
cmp
jl
mov
mov
mov
mov
inc
cmp
jne
mov
mov
mov
inc
sub
jmp
neg
mov
cdq
push
push
push
push
call
add
mov
mov
shr
push
push
sub
push
push
push
push
call
mov
test
je
mov
xor
mov
cmp
setne
add
mov
mov
mov
cmp
je
push
call
pop
cmp
je
mov
mov
jmp
cmp
je
mov
mov
cdq
sub
sar
mov
mov
lea
cmp
jae
push
mov
pop
movzx
cmp
je
cmp
je
mov
add
add
jmp
lea
cmp
jae
push
add
pop
cmp
je
push
pop
push
pop
mov
add
cmp
jb
jmp
mov
mov
or
mov
mov
sub
and
jmp
test
je
mov
push
pop
cmp
mov
jne
or
jmp
and
mov
mov
mov
lea
mov
mov
cmp
jae
push
pop
mov
mov
movzx
cmp
je
cmp
je
mov
jmp
mov
add
cmp
jae
push
pop
cmp
mov
jne
push
pop
add
mov
jmp
mov
add
add
jmp
push
lea
push
push
lea
push
mov
add
push
call
test
jne
call
test
jne
cmp
je
mov
mov
test
je
push
pop
push
cmp
jne
mov
add
jmp
pop
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
add
mov
push
pop
cmp
jb
jmp
cmp
jne
push
pop
cmp
jne
mov
add
jmp
push
push
push
push
call
mov
add
push
pop
cmp
je
push
pop
mov
add
jmp
mov
push
pop
mov
add
jmp
mov
mov
test
jne
or
mov
jmp
mov
mov
add
mov
mov
sub
jmp
call
push
pop
cmp
jne
call
mov
call
mov
jmp
cmp
jne
xor
jmp
xor
jmp
call
mov
call
mov
call
or
pop
pop
pop
leave
ret
push
mov
mov
test
jne
call
mov
call
push
pop
pop
ret
mov
mov
xor
pop
ret
push
mov
push
push
mov
mov
sar
and
shl
push
mov
mov
movzx
and
mov
mov
add
movsx
mov
sar
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
or
mov
mov
mov
and
or
mov
jmp
or
mov
mov
mov
and
or
jmp
and
mov
jmp
or
mov
mov
and
cmp
pop
pop
pop
jne
mov
pop
ret
neg
sbb
and
lea
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
push
mov
sub
lea
push
push
push
call
mov
mov
cmp
jae
mov
cmp
jle
lea
push
push
push
call
mov
add
jmp
mov
movzx
and
test
je
cmp
mov
movzx
je
mov
and
mov
jmp
cmp
je
mov
and
mov
jmp
mov
cmp
jle
mov
sar
mov
lea
movzx
push
push
call
pop
pop
test
je
mov
push
mov
mov
mov
pop
jmp
call
mov
xor
mov
mov
inc
mov
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
test
jne
cmp
je
mov
and
jmp
cmp
jne
cmp
movzx
je
mov
and
jmp
movzx
movzx
shl
or
cmp
je
mov
and
mov
pop
pop
leave
ret
push
mov
sub
lea
push
push
call
mov
lea
cmp
ja
mov
mov
movzx
jmp
mov
sar
mov
lea
movzx
push
push
call
pop
pop
test
je
mov
push
mov
mov
mov
pop
jmp
xor
mov
mov
inc
mov
push
push
lea
push
push
lea
push
lea
push
push
call
add
test
jne
cmp
je
mov
and
xor
jmp
movzx
and
cmp
je
mov
and
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mul
add
mov
mul
add
pop
ret
jmp
jmp
push
mov
push
push
push
and
sub
jmp
call
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
psubb
jno
daa
sar
mov
mov
and
mov
daa
xor
mov
mov
dec
mov
jecxz
inc
or
mov
and
daa
xor
fmul
cmp
cmp
mov
mov
add
rol
mul
or
in
jbe
sub
sub
mov
inc
mov
jg
cli
add
mov
mov
inc
ss
out
inc
and
paddq
cmps
rol
jmp
cmp
mov
push
mov
dec
sub
(bad)
sbb
addr16
add
xchg
adc
mov
inc
test
add
mov
scas
lock
sub
mov
bound
sub
sbb
sub
sub
mov
mov
ror
jmp
jno
and
sub
mov
and
bound
sbb
cmp
sub
jge
ror
push
cmp
and
mov
add
and
cwde
dec
xor
mov
test
lods
ror
pop
add
scas
jmp
out
adc
mov
pop
retf
jnp
xchg
cli
sub
add
inc
and
dec
mov
add
inc
and
mov
and
inc
scas
add
add
scas
shl
std
je
adc
add
jle
mov
sub
rol
mov
mov
mov
das
cli
pop
lock
jge
inc
mov
mov
mov
pushf
std
outs
test
sbb
cmp
mov
scas
mov
test
add
add
pop
push
push
add
mov
dec
push
push
jnp
and
jmp
jl
dec
movzx
(bad)
push
in
test
add
cmp
rol
and
mov
jmp
mov
pop
ffree
hlt
pop
mov
loope
(bad)
dec
push
mov
sub
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
cmp
setne
and
mov
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
jmp
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
jmp
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
scas
inc
mov
test
dec
fadd
mov
dec
mov
and
push
add
shl
jle
add
add
mov
mov
mov
popf
jne
add
call
mov
cli
or
add
push
and
add
pushf
and
add
dec
retf
dec
add
mov
mov
movs
test
add
add
pop
add
and
add
xchg
and
add
add
test
inc
add
iret
inc
vmovhps
movs
add
lock
or
cmp
dec
sub
mov
imul
add
jmp
mov
int
add
inc
mov
pushf
rol
push
push
sbb
pushf
push
xchg
add
xor
add
movs
jl
cmp
add
add
and
add
add
add
xor
int
add
out
mov
inc
paddusb
mov
test
sub
iret
fadd
mov
and
add
jmp
mov
cmp
inc
icebp
push
leave
test
pop
add
add
int
mov
mov
test
add
mov
jb
adc
jl
in
sub
jle
add
add
sub
lods
xor
sbb
dec
add
inc
add
add
mov
aad
dec
mov
dec
je
cmp
add
mov
imul
jmp
mov
jg
jmp
mov
fnstsw
inc
xchg
icebp
and
cmpps
mov
aaa
imul
pop
sub
fsub
jge
(bad)
shl
add
add
add
sub
mov
clc
jg
add
mov
cwde
aaa
imul
cmp
xchg
push
mov
int
jg
mov
sahf
rol
jne
sub
cmc
mov
add
mov
add
fdivr
add
add
fstp
xchg
repnz
pop
jg
jmp
mov
add
cmps
fwait
mov
jg
jmp
retf
test
add
mov
and
mov
imul
mov
add
and
int
or
jmp
sahf
test
cmps
add
ins
sub
cmps
mov
lea
add
and
mov
xchg
aad
mov
cld
xchg
loop
and
psubd
add
add
add
mov
je
add
jmp
mov
pusha
dec
mov
cmp
test
imul
cmp
add
mov
add
js
mov
cmp
shr
add
stos
popf
test
add
jmp
cmp
jl
add
push
call
jne
add
sub
mov
push
test
sbb
cwde
push
add
mov
push
add
aaa
xor
add
mov
push
aam
xchg
push
mov
or
push
daa
add
jmp
fiadd
fidiv
cs
inc
test
imul
add
mov
cwde
add
add
jb
xor
mov
jmp
mov
sub
mov
je
jmp
mov
and
add
stos
xor
das
and
mov
mov
push
mov
mov
push
mov
gs
mov
je
jmp
mov
dec
mov
xor
(bad)
add
dec
and
jne
xchg
jno
inc
pop
xor
icebp
and
mov
fsubr
add
add
imul
retf
mov
bound
cmp
jp
rcr
test
mov
mov
push
leave
and
mov
test
push
xor
rol
add
movs
add
pop
add
ret
sahf
jne
cmc
lock
imul
xchg
(bad)
xchg
clc
mov
imul
das
add
dec
jns
test
jmp
add
push
call
mov
mov
mov
mov
sbb
jns
and
add
add
mov
or
dec
add
repnz
movs
add
imul
add
mov
sub
adc
adc
bound
ror
sbb
push
and
add
add
fsubr
cmp
add
pop
mov
jae
xor
rol
add
mov
pushf
jns
sar
add
add
inc
popf
mov
movs
add
pop
jmp
dec
lock
push
mov
ret
fdiv
jmp
retf
mov
div
stos
add
jne
jne
adc
jmp
and
add
lock
cmp
add
add
jg
jmp
add
xchg
ror
inc
add
add
add
pop
jmp
add
(bad)
jae
add
add
xchg
sbb
add
push
jns
xor
call
add
mov
ja
fld
stos
jne
add
cmps
add
pushf
idiv
push
mov
jmp
(bad)
cmp
add
push
aaa
sbb
add
add
pop
add
in
mov
das
and
jne
add
mov
xor
mov
push
ffreep
shl
mov
mov
jle
jmp
mov
mov
test
pcmpgtw
ret
pop
xor
mov
mov
ficom
mov
or
sub
pushf
or
adc
add
add
or
stc
pand
pop
inc
add
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
and
add
fistp
mov
data16
verr
mov
add
aam
dec
mov
je
and
add
push
adc
push
sbb
xchg
out
and
call
(bad)
stos
and
and
in
mov
xchg
mov
mov
and
pop
sub
dec
sbb
add
add
mov
add
mov
and
call
mov
pop
inc
inc
popa
jbe
popaw
mov
cmp
jle
gs
rcl
mov
mov
add
ror
ret
add
add
mov
push
call
pop
xchg
mov
add
outs
inc
sub
inc
cmp
dec
and
fisttp
jmp
repnz
ja
stc
mov
les
add
jmp
sub
sub
mov
imul
add
mov
and
sub
push
inc
pop
jae
(bad)
dec
sub
cmp
sub
mov
sti
cmp
out
retf
test
sldt
mov
sub
mov
stos
sar
fiadd
push
add
mov
sub
mov
imul
jmp
in
stos
sub
sub
cmp
xchg
test
mov
fucomp
sbb
add
nop
and
pop
xchg
out
mov
or
add
add
inc
jmp
mov
mov
sub
cdq
mov
gs
and
cmp
cmovge
jmp
mov
push
dec
and
bswap
pop
dec
pusha
mov
mov
(bad)
jg
stos
and
sbb
adc
clc
cmp
xor
mov
cmps
stc
and
dec
ret
or
in
adc
mul
mov
data16
adc
loopne
minps
or
popa
mov
(bad)
mov
pop
pop
outs
add
inc
mov
sub
add
mov
mov
sub
mov
xor
(bad)
sub
mov
and
mov
ret
xor
push
cmp
les
pop
test
mov
test
cmp
pop
xor
movs
gs
and
or
sub
push
cmp
add
sub
pop
inc
sbb
je
and
push
sbb
(bad)
xor
(bad)
(bad)
dec
pop
test
add
add
push
mov
push
push
push
and
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xor
sbb
or
std
out
add
add
retf
mov
push
add
jmp
mov
data16
and
mov
pop
pop
mov
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
cmp
je
and
add
cmp
add
jmp
cmps
adc
add
mov
(bad)
(bad)
mov
mov
lahf
inc
icebp
inc
add
add
mov
jne
xchg
and
add
mov
icebp
inc
add
add
repnz
and
add
cmp
test
(bad)
call
test
test
mov
and
add
push
mov
ret
test
push
mov
mov
jmp
out
mov
and
add
add
add
movq
add
push
mov
inc
dec
xor
leave
xor
data16
loope
test
add
mov
sub
jmp
dec
(bad)
loopne
xor
xor
loop
(bad)
xlat
add
stc
sub
mov
retf
jg
jns
add
arpl
call
xor
(bad)
and
sysexit
cmp
add
add
add
test
test
cwde
pop
aad
inc
xchg
je
jg
add
add
cmp
and
add
scas
test
leave
clc
mov
ja
jmp
mov
mov
mov
aam
sbb
pop
add
dec
mov
inc
sub
loopne
sub
push
(bad)
fs
ds
add
movzx
nop
add
call
and
(bad)
push
add
mov
add
add
inc
and
jg
jns
add
add
add
sub
mov
dec
mov
mov
in
and
add
add
add
rol
nop
arpl
ja
mov
mov
sub
loopne
sub
pandn
retf
push
add
cmp
and
lock
mov
xor
cmp
jmp
mov
sbb
adc
cmp
inc
and
xor
jmp
mov
cmp
dec
cmp
mov
adc
add
jmp
mov
sub
pop
stc
add
outs
push
iret
pushf
mov
inc
je
jns
add
xchg
cmp
mov
adc
popf
mov
fs
lgs
add
jmp
mov
sub
push
(bad)
inc
dec
setp
mov
add
iret
test
add
fadd
pop
test
add
jmp
mov
and
add
add
jns
and
psllq
mov
add
mov
add
sub
add
ds
fadd
add
mov
mov
arpl
mov
sub
add
mov
imul
leave
xor
test
add
mov
mov
je
out
add
add
and
aam
inc
and
mov
sub
add
mov
xor
sub
rol
(bad)
sbb
movzx
ins
add
add
out
sti
push
add
int
and
cmpxchg
mov
imul
add
add
jmp
add
add
sub
enter
scas
and
mov
adc
in
push
stos
pop
stc
xlat
sbb
movzx
add
arpl
test
inc
add
add
or
add
pop
sbb
lahf
cli
add
mov
cmp
mov
mov
mov
loope
add
add
(bad)
mov
lock
cwde
jle
mov
lods
sti
dec
xor
xchg
inc
add
ins
xchg
dec
pop
mov
mov
nop
mov
jbe
push
mov
sub
add
add
fadd
add
add
imul
pop
add
xlat
mov
add
arpl
test
xor
lods
mov
ss
in
fs
xchg
cmp
nop
mov
and
add
add
enter
mov
mov
mov
fwait
mov
add
add
mov
add
add
mov
mov
add
add
cmp
and
add
xchg
mov
inc
mov
add
adc
add
or
xor
ror
mov
call
(bad)
mov
mov
nop
mov
clc
into
or
dec
add
add
add
dec
xor
xor
add
ret
mov
add
retf
ror
ja
xchg
cmp
jmp
add
fisub
mov
test
loope
and
add
add
test
xchg
add
add
test
pop
or
popf
xor
inc
add
add
call
sub
pop
stc
add
add
xchg
jns
add
jnp
into
add
inc
pop
fdivrp
mov
pop
add
add
inc
xor
ins
hlt
pop
pop
pop
hlt
ret
(bad)
(bad)
mov
add
(bad)
mov
test
xchg
nop
arpl
popa
nop
jo
jmp
jne
and
add
add
xor
cmps
add
xor
imul
test
xor
call
cmp
aam
arpl
ja
test
add
add
adc
mov
mov
sub
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
call
mov
mov
mov
mov
cmp
sete
and
movzx
mov
mov
mov
jmp
mov
mov
pop
ret
mov
call
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
leave
inc
xlat
sbb
add
(bad)
scas
and
outs
mov
jne
add
inc
mov
lds
mov
mov
mov
mov
pop
push
mov
adc
into
gs
add
add
int3
push
xchg
or
sub
add
jmp
pop
inc
(bad)
sub
mov
inc
cld
(bad)
data16
add
shr
mov
sub
mov
je
stc
adc
add
pop
jg
add
inc
and
(bad)
sbb
xor
add
in
and
xchg
cs
cmps
pushf
mov
loop
dec
mov
and
and
dec
nop
fisub
mov
(bad)
sbb
add
add
sub
mov
mov
test
add
hlt
mov
add
call
add
pusha
jmp
mov
dec
call
imul
cld
test
add
add
outs
add
inc
adc
mov
pusha
add
pop
(bad)
sbb
add
mov
cld
inc
inc
push
push
test
xlat
and
add
outs
jmp
hlt
mov
cwde
or
mov
sbb
in
add
add
mov
sub
mov
and
sub
outs
add
dec
cmp
mov
test
add
add
add
and
fcomp
imul
push
and
push
cli
add
add
hlt
inc
inc
cmps
inc
and
sbb
xor
push
scas
and
outs
mov
and
sti
lods
dec
test
mov
sub
add
scas
pusha
add
add
mov
inc
adc
pop
inc
add
mov
push
mov
sub
sub
dec
add
cmp
mov
dec
add
push
in
add
sbb
shrd
mov
add
add
mov
ins
mov
sti
mov
mov
sysexit
repnz
and
popa
inc
and
cmp
and
psubb
cs
and
jmp
call
sub
push
(bad)
dec
inc
and
test
add
rol
jns
inc
and
jmp
mov
mov
arpl
cwde
push
dec
jecxz
in
(bad)
int3
and
xchg
push
add
and
jmp
and
pop
sbb
and
(bad)
mov
add
mov
sub
(bad)
jmp
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
(bad)
in
push
add
add
arpl
add
in
xchg
push
add
rol
hlt
mov
jae
jp
add
inc
xchg
repz
add
mov
call
mov
and
sub
add
scas
rcl
push
(bad)
inc
loopne
add
jmp
mov
lock
popf
test
jae
add
test
add
add
mov
mov
je
or
add
mov
lea
rol
dec
adc
test
add
loopne
in
cld
jl
test
add
repnz
ins
add
sub
and
add
(bad)
jae
lea
test
jg
jmp
mov
fcom
add
jne
repz
mov
stos
add
sbb
arpl
ins
cmp
add
fbld
sub
les
sar
(bad)
jmp
mov
jmp
cmp
adc
add
(bad)
and
jae
add
add
mov
add
jmp
adc
dec
pop
out
arpl
out
and
add
shl
adc
cdq
cli
dec
and
add
add
(bad)
and
add
cdq
jae
std
mov
fsub
cmp
pop
jmp
add
add
and
add
add
mov
mov
cdq
jae
(bad)
and
add
sub
add
jmp
into
fsub
mov
popa
ins
(bad)
cdq
mov
seto
(bad)
adc
mov
fisttp
retf
cmp
outs
(bad)
and
add
or
add
mov
jmp
je
jo
add
std
ins
out
fsub
stos
pop
loopne
test
mov
loop
add
add
mov
cmp
mov
retf
and
add
jl
sbb
std
add
pop
movs
add
add
mov
jp
aas
test
or
jge
int
add
mov
fadd
jae
or
pop
loopne
test
add
add
pusha
dec
fucomi
arpl
out
xchg
add
shl
add
in
test
in
jae
int
(bad)
and
add
jae
std
out
out
fadd
add
sub
jmp
add
test
add
mov
and
jge
jae
push
test
jle
test
jae
out
pop
pusha
mov
dec
fdiv
add
mov
and
add
xlat
or
dec
arpl
add
mov
add
inc
pop
pslld
mov
add
jmp
mov
sub
or
out
inc
ret
test
mov
dec
fadd
mov
sub
mov
js
(bad)
icebp
add
jmp
mov
sub
pop
ins
repnz
fst
add
jmp
mov
sub
xor
es
(bad)
and
ror
jge
add
mov
and
xlat
add
fmul
inc
or
test
fisub
dec
outs
mov
mov
or
jg
ds
cdq
add
jns
bound
add
mov
je
jmp
xchg
add
sub
inc
inc
movshdup
add
punpckldq
and
mov
mov
or
mov
mov
shr
push
add
add
jge
pop
cld
dec
not
jg
sldt
add
jmp
sub
or
sub
and
add
sbb
add
mov
sub
mov
and
repnz
add
movs
sub
pusha
mov
adc
bswap
mov
out
xlat
add
add
retf
movs
and
mov
cvttps2pi
jmp
add
rol
sub
mov
and
maskmovq
aam
cdq
call
and
sub
add
repz
dec
in
cdq
inc
fimul
xchg
add
add
add
mov
jo
mov
adc
add
call
add
sub
mov
divps
add
xchg
jae
add
mov
out
pop
cmc
and
mov
je
dec
inc
jmp
ins
mov
sub
mov
dec
jl
and
add
in
add
cdq
jae
jns
add
mov
inc
cmp
jmp
mov
and
jge
add
jae
dec
inc
xchg
and
bound
add
jmp
mov
or
dec
jmp
clc
dec
repz
add
sub
or
setge
popa
add
jmp
mov
sub
mov
psubsw
add
mov
dec
lahf
test
adc
aaa
and
repnz
scas
add
add
jmp
mov
mov
shl
mov
push
adc
out
mov
pusha
outs
inc
inc
mov
test
add
and
dec
add
add
add
sub
mov
dec
mov
add
jmp
dec
adc
mov
push
adc
lahf
cmp
jl
inc
and
vmwrite
arpl
add
mov
sub
in
and
je
jmp
jmp
mov
mov
mov
push
(bad)
cwde
add
add
dec
ror
out
mov
cli
push
and
xchg
mov
xchg
inc
pop
jmp
mov
mov
ret
mov
jmp
mov
retf
mov
add
out
pop
add
sub
push
inc
mov
add
jmp
inc
mov
xchg
add
aad
call
jb
adc
dec
xchg
jmp
cmovne
mov
adc
in
add
test
test
add
mov
mov
add
jp
cmc
lods
adc
jge
jg
out
imul
add
sbb
std
mov
call
les
add
or
mov
mov
test
nop
ins
inc
mov
cdq
int3
add
aas
lds
(bad)
mov
jg
stc
add
nop
hlt
xchg
arpl
mov
call
dec
(bad)
dec
push
mov
jmp
sub
sub
rol
add
mov
cmp
psubw
pop
mov
adc
jae
(bad)
int3
xlat
add
test
std
out
addr16
xchg
pop
rcr
add
arpl
test
add
mov
mov
loopne
jae
neg
imul
aas
data16
mov
or
add
add
jmp
(bad)
jl
je
and
xchg
and
add
xchg
ror
out
sbb
xchg
cld
sbb
jmp
mov
mov
jmp
in
sti
add
xchg
std
out
ret
pop
mov
add
movs
mov
and
mov
and
add
add
add
adc
stos
mov
mov
pop
cmp
(bad)
std
add
fcmovb
and
pusha
mov
clc
ins
add
aas
test
jmp
mov
jmp
nop
xor
cmp
jne
add
imul
test
add
mov
mov
cli
mov
add
add
mov
jmp
mov
lea
inc
aas
pop
pop
pusha
sub
add
add
jge
mov
in
sub
add
adc
and
add
add
and
add
add
out
in
add
mov
cmp
mov
test
mov
and
std
push
test
sub
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
push
sbb
push
add
xchg
add
lea
retf
pop
ret
data16
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
clc
fmul
jne
mov
ret
imul
add
add
(bad)
daa
and
mov
arpl
add
add
mov
and
add
dec
adc
mov
adc
inc
adc
mov
mov
add
mov
add
arpl
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
imul
sbb
add
rol
xor
sub
add
pop
mov
mov
jae
cmc
xchg
mov
mov
add
(bad)
xchg
jae
add
mov
mov
imul
aam
aad
add
or
pushf
mov
dec
adc
test
add
add
(bad)
fst
add
and
sub
and
push
rol
add
(bad)
ja
jne
jmp
mov
push
add
mov
add
mov
add
aam
and
add
sub
pop
xor
test
shr
add
cli
in
dec
add
or
mov
test
add
lea
fbld
call
adc
daa
mov
add
es
pop
mov
jg
call
rcr
push
push
mov
sub
add
sub
call
or
mov
and
add
add
(bad)
cmp
mov
jmp
mov
add
cmp
and
add
in
jmp
mov
sub
push
test
add
push
sub
call
hlt
pushf
das
jne
sub
ret
push
mov
add
jmp
mov
add
jmp
jmp
add
xchg
cdq
mov
sub
mov
add
(bad)
lods
pop
add
jmp
mov
and
add
jne
mov
xor
pop
add
add
cmp
sub
add
mov
sub
mov
push
(bad)
dec
dec
add
jmp
mov
sub
lods
test
div
adc
add
(bad)
jne
add
rcr
cdq
add
test
add
sub
mov
arpl
shr
add
test
in
add
cmp
mov
test
push
add
stos
and
sub
add
add
fcom
add
dec
xchg
(bad)
xchg
add
fild
cmps
shl
add
out
xchg
jmp
jmp
aad
mov
push
test
add
aam
mov
inc
mov
add
cld
inc
add
add
cs
add
outs
push
mov
add
and
pop
and
sub
and
mov
call
and
add
jne
retf
mov
sbb
add
jmp
cmp
sub
ins
iret
and
add
call
push
add
and
push
add
pop
jmp
punpckhdq
add
add
daa
mov
add
jo
sbb
mov
jg
mov
add
inc
sub
cmp
sub
and
add
clc
out
pushf
add
jne
mov
outs
adc
add
add
add
add
push
add
mov
pop
push
aad
jns
popa
outs
mov
(bad)
pop
add
mov
add
test
sub
add
mov
and
das
jne
jmp
add
mov
xor
add
xor
cs
jmp
mov
sub
mov
and
add
push
add
jmp
cmp
sub
ins
iret
mov
jno
pop
call
test
add
cld
mov
test
(bad)
shr
jp
and
add
or
add
add
push
xchg
cdq
add
add
mov
add
add
xor
add
jmp
mov
mov
jae
push
mov
cpuid
and
push
add
add
and
add
sub
cld
test
xchg
test
add
mov
add
add
shr
test
(bad)
and
add
add
add
mov
sub
jae
mov
add
add
shl
aad
add
in
sub
xor
jg
jmp
pop
pop
push
dec
pop
loop
test
mov
test
mov
push
and
pushf
add
add
push
or
jne
add
pop
add
add
mov
daa
add
pop
ror
mov
jl
mov
rol
jmp
mov
popf
lods
stos
lods
pop
push
test
add
(bad)
and
add
mov
sub
cld
test
loopne
call
add
add
fbld
add
mov
and
add
add
pop
or
in
add
test
pushf
test
mov
add
push
add
jmp
mov
and
sub
mov
(bad)
(bad)
and
push
and
mov
out
dec
add
add
cmp
rol
mov
(bad)
lods
shr
add
(bad)
daa
xchg
out
add
add
test
add
call
jmp
cmps
shl
add
pop
xrelease
add
stos
lods
or
jne
sub
add
xor
daa
add
add
test
add
add
sub
add
cmp
add
add
test
xlat
fwait
add
popf
aad
adc
xor
add
jle
mov
arpl
movs
test
in
add
mov
(bad)
clc
sub
add
add
test
sub
cld
test
add
add
test
in
add
push
add
add
test
daa
add
mov
into
in
add
add
and
rol
jne
in
mov
sub
mov
add
call
ins
add
add
add
js
movs
test
and
and
shr
add
add
mov
add
iret
enter
and
test
sub
add
add
jmp
mov
add
add
push
add
mov
pushf
add
add
xlat
in
js
mov
lods
xor
mov
test
pushf
ins
mov
mov
je
jmp
sub
dec
retf
or
add
jp
fld
add
mov
cmp
sub
mov
push
pop
jmp
mov
jmp
call
add
enter
mov
fild
add
shr
add
sub
add
sub
add
popa
and
dec
add
add
jmp
mov
add
dec
icebp
ficom
mov
hlt
cmps
jne
add
test
loopne
dec
jae
add
add
add
add
sbb
lods
add
test
into
das
jne
outs
test
dec
add
sub
mov
cmp
mov
and
mov
add
add
cs
and
pop
sub
test
xchg
fiadd
sub
add
mov
cmp
and
je
jmp
mov
add
cmp
retf
cmc
and
pop
jns
add
add
add
scas
into
ja
adc
mov
add
add
add
mov
or
mov
rsm
mov
in
jmp
mov
add
mov
jl
dec
add
cs
mov
push
add
or
lods
inc
and
mov
test
sub
mov
sysenter
xchg
add
add
fadd
mov
enter
sub
jmp
je
in
mov
test
daa
mov
sub
dec
mov
and
je
mov
icebp
and
sub
mov
and
(bad)
add
xor
rol
mov
mov
mov
jmp
xlat
add
add
test
mov
push
add
lods
inc
xchg
jl
add
add
push
jne
add
call
mov
(bad)
ja
add
jmp
cmp
pop
cld
mov
and
inc
and
je
jmp
cmps
rol
cwde
add
adc
inc
push
inc
push
test
in
jmp
pop
or
add
or
dec
test
fist
cmp
fild
test
add
add
lahf
mov
ret
mov
inc
test
add
mov
fisttp
mov
mov
repz
arpl
pop
inc
or
jne
add
inc
in
dec
add
add
fdiv
imul
adc
ins
jl
mov
sbb
add
cmp
jmp
fwait
add
add
movs
test
add
add
mov
sti
mov
jmp
mov
and
in
add
inc
test
add
mov
mov
mov
add
sub
mov
imul
add
test
dec
add
add
cmp
mov
add
mov
mov
inc
add
popa
and
call
or
xor
arpl
shr
jne
or
push
push
add
and
add
movs
add
add
cmp
add
shr
add
inc
add
ja
(bad)
(bad)
cli
push
inc
xchg
cmp
rol
(bad)
adc
or
and
add
add
in
add
add
and
add
mov
test
add
mov
add
jae
rol
mov
mov
or
dec
call
mov
int3
les
add
mov
fisttp
cmp
inc
mov
rol
cmps
out
dec
adc
dec
add
add
add
add
leave
adc
fstp
out
fstp
push
mov
add
sbb
fwait
add
add
mov
cmove
cmp
and
add
daa
and
add
jae
inc
test
add
lea
or
and
or
add
aaa
xchg
lods
add
add
mul
das
add
(bad)
mov
call
or
add
jbe
and
add
sub
or
std
and
call
retf
call
sbb
mov
(bad)
mov
add
ret
add
cmps
pusha
sbb
jae
cmp
pmaddwd
mov
add
add
add
and
das
add
xor
and
mov
jo
int
xor
(bad)
mov
leave
iret
mov
or
scas
dec
enter
add
add
cmove
add
add
fadd
sub
nop
mov
jmp
mov
mov
mov
push
loope
add
add
mov
rol
add
les
push
add
add
ror
jne
mov
inc
call
add
sub
add
mov
xchg
and
add
add
adc
jne
in
scas
enter
cmp
and
in
add
dec
dec
mov
pop
call
loop
and
mov
inc
sub
imul
outs
cmp
add
add
mov
add
in
jae
pop
test
das
jne
dec
inc
test
add
pop
push
frstor
add
xchg
jno
sar
hlt
mov
mov
add
add
cmp
movs
fsub
add
and
mov
bound
rcl
pop
cs
aaa
and
add
sub
inc
shr
push
ret
shr
jne
aas
dec
add
ins
mov
(bad)
leave
push
and
push
add
mov
add
mov
pop
or
shl
in
add
addr16
mov
mov
inc
and
jmp
loop
and
add
xchg
(bad)
(bad)
je
add
ret
mov
jnp
add
scas
movs
mov
jae
add
cs
and
ret
dec
add
mov
xchg
mov
in
sub
mov
pop
repz
not
das
jp
ror
mov
xor
add
mov
movs
shl
add
arpl
mov
pop
iret
cld
add
sbb
xor
and
add
add
inc
add
push
add
jo
add
sti
fidivr
dec
mov
mov
(bad)
(bad)
add
dec
jae
push
mov
jmp
lea
sub
pop
ret
mov
xchg
or
call
add
push
add
add
and
add
cs
out
loope
(bad)
in
add
test
add
ss
rol
add
test
pop
pop
mov
xor
push
add
add
ins
loop
nop
jmp
in
add
xor
fstp
adc
jmp
mov
inc
jo
add
push
pop
(bad)
int3
jmp
rol
loope
mov
add
test
movs
mov
xchg
(bad)
jle
add
mov
jmp
data16
push
mov
push
push
push
and
mov
call
mov
mov
lea
mov
lea
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovl
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
lea
mov
mov
mov
call
mov
mov
call
lea
mov
mov
call
lea
mov
mov
mov
mov
call
mov
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
jmp
mov
mov
mov
movzx
movzx
cmp
cmove
mov
jmp
mov
add
mov
mov
jmp
mov
mov
jmp
lea
mov
movzx
mov
mov
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
call
lea
mov
call
lea
mov
mov
mov
mov
call
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
jmp
lea
mov
call
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
lea
lea
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
call
mov
mov
cmp
cmove
mov
jmp
lea
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
call
lea
mov
call
mov
mov
mov
mov
call
sub
mov
mov
jmp
lea
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
lea
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
jmp
mov
mov
cmp
cmovb
mov
jmp
mov
jmp
mov
lea
mov
lea
mov
mov
mov
mov
call
sub
inc
mov
mov
lea
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
call
mov
imul
mov
call
mov
jmp
mov
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
call
lea
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
lea
mov
sub
mov
shl
add
mov
mov
mov
mov
mov
call
lea
mov
lea
mov
sub
sub
mov
shl
add
mov
shl
add
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
jmp
mov
jmp
mov
mov
jmp
lea
lea
mov
mov
mov
mov
mov
call
sub
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
call
lea
mov
lea
sub
mov
shl
add
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
jmp
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
sub
mov
call
and
mov
lea
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
inc
mov
mov
mov
lea
mov
call
and
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
inc
mov
mov
mov
lea
mov
call
and
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
inc
mov
mov
mov
lea
mov
call
and
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
movzx
mov
mov
movzx
mov
mov
mov
lea
inc
mov
mov
mov
mov
mov
lea
mov
call
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
call
lea
mov
xor
mov
mov
mov
div
mov
mov
mov
movzx
mov
mov
movzx
mov
mov
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
mov
call
lea
mov
lea
mov
sub
mov
shl
add
mov
mov
mov
mov
mov
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
lea
mov
sub
mov
shl
add
mov
mov
mov
mov
mov
mov
call
lea
mov
movzx
mov
mov
mov
movzx
mov
mov
mov
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
movzx
mov
mov
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
sub
mov
lea
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
lea
mov
mov
mov
call
sub
lea
mov
mov
call
mov
jmp
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
lea
mov
mov
mov
call
sub
lea
mov
mov
call
mov
jmp
mov
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
call
mov
lea
lea
add
mov
mov
mov
mov
mov
call
lea
mov
movzx
mov
mov
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
lea
mov
mov
mov
call
sub
lea
mov
mov
call
mov
jmp
mov
mov
mov
shl
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
call
mov
shl
mov
mov
jmp
mov
jmp
mov
mov
jmp
lea
mov
add
add
mov
add
add
mov
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
lea
mov
mov
mov
call
sub
lea
mov
mov
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
cmove
mov
jmp
lea
mov
mov
mov
call
sub
lea
mov
mov
call
mov
jmp
mov
mov
jmp
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
call
mov
mov
mov
mov
add
mov
cmp
setne
and
mov
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
add
add
add
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
jmp
lea
lea
mov
mov
mov
mov
mov
lea
mov
call
sub
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
lea
mov
mov
mov
call
sub
lea
mov
mov
call
mov
jmp
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
lea
mov
mov
mov
mov
mov
lea
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
lea
mov
mov
mov
call
sub
lea
mov
mov
call
mov
jmp
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
call
mov
lea
lea
add
mov
mov
mov
mov
mov
call
lea
lea
mov
mov
mov
mov
mov
lea
mov
mov
call
sub
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
jmp
mov
mov
jmp
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
jmp
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
lea
mov
mov
mov
call
sub
mov
call
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
jmp
mov
lea
mov
mov
mov
call
mov
mov
call
lea
mov
mov
call
lea
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
jmp
lea
mov
movzx
mov
mov
mov
movzx
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
mov
mov
mov
call
lea
mov
call
lea
mov
mov
mov
mov
call
mov
mov
jmp
mov
lea
lea
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
call
lea
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
lea
mov
mov
sub
mov
shl
add
mov
mov
mov
mov
mov
call
lea
mov
lea
mov
mov
sub
sub
mov
shl
add
mov
shl
add
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
lea
lea
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
call
shl
mov
mov
jmp
lea
mov
add
add
mov
add
add
mov
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
call
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
call
mov
mov
mov
add
mov
mov
mov
jmp
lea
lea
mov
mov
mov
mov
mov
lea
mov
call
sub
mov
mov
jmp
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
call
mov
lea
lea
add
mov
mov
mov
mov
mov
call
lea
lea
mov
mov
mov
mov
mov
lea
mov
mov
call
sub
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
call
sub
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
jmp
mov
lea
mov
imul
add
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
lea
mov
imul
add
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
sub
sub
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
lea
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
sub
sub
mov
mov
mov
jmp
mov
mov
mov
jmp
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
mov
jmp
mov
add
pop
pop
ret
mov
jmp
mov
jmp
nop
push
mov
push
sub
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
jmp
mov
lea
imul
add
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
lea
imul
add
mov
mov
mov
mov
mov
mov
call
sub
lea
imul
add
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
add
add
sub
mov
mov
jmp
add
pop
pop
ret
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
cs
add
lea
mov
aaa
int3
adc
add
add
and
test
add
mov
test
add
add
repnz
cmps
xor
int3
mov
mov
pop
inc
and
out
add
add
test
xchg
and
clc
mov
cmps
call
mov
mov
mov
add
pushf
fbld
mov
sar
inc
test
sbb
add
sbb
and
or
clc
xor
mov
test
aaa
aaa
int3
pop
test
push
lea
and
add
test
add
imul
and
stos
sbb
mov
adc
in
test
aaa
aaa
add
and
aam
pushf
pslld
adc
add
add
dec
or
mov
or
and
add
add
(bad)
cld
add
lea
test
rcl
pushf
sub
mov
setb
adc
add
or
add
mov
xchg
add
sub
mov
adc
add
xlat
add
jmp
mov
inc
fdivr
imul
mov
or
jmp
mov
sub
mov
add
pop
in
push
pushf
xchg
add
add
mov
nop
cld
in
es
and
jg
jmp
mov
push
pop
pop
pop
pop
inc
test
or
jge
(bad)
jae
and
jmp
mov
and
add
add
loop
xchg
push
jno
mov
add
add
cmp
cmps
xor
aaa
int3
xlat
push
mov
push
jmp
pop
and
stc
add
(bad)
mov
add
and
add
xor
push
inc
test
movs
xor
cmp
adc
xlat
jmp
mov
and
add
or
mov
xor
adc
sbb
sbb
mov
or
add
sbb
lods
push
mov
mov
(bad)
bound
add
and
mov
sub
jb
and
add
add
(bad)
movs
adc
add
sbb
test
fwait
add
retf
sub
mov
rol
add
jg
xchg
add
add
mov
sub
xor
jg
jmp
mov
add
sub
mov
pop
add
add
add
and
sti
add
add
xchg
add
or
add
test
xor
add
sub
and
xor
int3
cli
pop
test
add
add
add
(bad)
fsubr
add
add
add
or
sub
mov
and
add
fs
adc
jmp
mov
nop
add
sub
mov
mov
(bad)
and
add
clc
mov
sub
mov
adc
test
mov
test
add
add
daa
hlt
ss
mov
jg
adc
and
add
add
mov
jge
test
scas
mov
adc
mov
and
add
add
sbb
add
fs
mov
xlat
and
dec
repnz
add
test
sbb
sbb
add
sub
int3
add
(bad)
hlt
add
pushf
jmp
mov
xchg
ret
mov
lea
mov
mov
add
out
adc
add
and
add
add
popa
adc
sub
pop
add
fcom
imul
add
test
sub
mov
xchg
les
mov
add
mov
add
fidiv
add
add
in
add
mov
add
add
daa
call
sub
aaa
add
test
add
and
test
ja
fs
test
(bad)
and
add
xor
movs
xor
sub
mov
xchg
test
adc
xor
add
and
clc
imul
xchg
cdq
and
add
add
(bad)
and
or
jmp
mov
or
add
sub
inc
push
and
or
pushf
jb
jo
and
jmp
xor
sub
jno
adc
add
retf
imul
aaa
int3
xlat
jmp
mov
sub
mov
adc
test
add
mov
add
retf
sub
cs
jo
aaa
add
inc
and
xlat
push
jne
jge
add
sti
imul
test
mov
pop
push
sbb
jecxz
call
and
add
fldenv
add
add
mov
jmp
mov
cmc
push
xor
movs
loop
and
mov
repz
or
adc
xchg
retf
out
test
sub
mov
jno
jmp
push
test
push
aaa
fnstcw
add
clc
cmp
push
adc
add
add
and
push
lods
mov
pop
or
add
add
add
add
test
add
mov
cli
xor
jbe
cmps
jmp
mov
add
int3
mov
mov
and
add
add
add
add
and
add
add
and
push
cmp
or
ret
push
je
add
test
(bad)
sub
test
cmps
(bad)
cmp
or
fcom
loopne
or
xor
sbb
lods
mov
xchg
or
add
add
xor
mov
push
add
mov
aaa
xchg
retf
por
add
add
mov
xlat
add
cs
call
fadd
hlt
test
mov
test
push
add
xor
fsubr
test
add
int3
addps
push
add
jne
add
add
or
sub
mov
mov
and
or
jmp
sbb
and
add
xchg
data16
or
and
push
fsubr
add
add
cmp
sub
mov
je
fisubr
xlat
push
pop
test
add
add
dec
retf
inc
loop
and
sbb
clc
add
xchg
mov
sub
mov
xchg
test
sbb
add
push
and
jo
and
push
scas
pusha
(bad)
xor
retf
cmps
jmp
mov
nop
jle
add
push
jg
sbb
imul
test
mov
add
add
and
ss
add
inc
mov
les
aaa
add
(bad)
and
add
jmp
test
pop
add
add
fistp
mov
sbb
sbb
sbb
add
leave
in
test
ret
pop
and
add
out
jge
or
add
sub
xor
add
test
clc
xor
cmps
mov
add
sub
mov
add
je
imul
jmp
mov
daa
shl
mov
test
jl
int3
xlat
out
jo
add
fadd
sub
mov
adc
add
or
xor
push
ins
pop
mov
add
repz
add
jmp
xchg
cdq
and
stos
sbb
aad
add
test
add
test
adc
xlat
add
push
add
clc
add
inc
xchg
lds
xchg
test
test
xchg
(bad)
add
add
sub
hlt
lea
add
add
sbb
xor
or
cmps
sbb
xor
retf
pop
mov
je
jmp
mov
sub
add
sbb
add
fs
mov
xlat
push
sub
mov
imul
jmp
cmp
mov
arpl
test
ss
add
pop
and
push
add
pushf
jge
and
and
add
or
mov
add
retf
lea
cmps
xor
test
add
add
adc
add
imul
add
add
ss
test
das
mov
retf
add
loopne
and
add
mov
pop
add
test
jb
and
add
sbb
or
xor
loopne
cmp
xlat
and
mov
ror
add
add
jmp
xchg
mov
cmp
out
mov
int3
fmul
loopne
add
add
add
fist
sbb
jle
jmp
sbb
and
add
sub
mov
into
add
add
or
and
add
jo
cdq
mov
add
sub
mov
movlps
stc
aas
aaa
add
and
aam
add
hlt
test
xlat
je
add
test
push
add
xor
mov
ss
xlat
jp
jmp
push
test
add
mov
in
sub
add
(bad)
and
xchg
retf
jmp
mov
add
sub
pop
test
add
push
je
loopne
rol
add
and
add
add
mov
clc
jg
jmp
mov
aaa
add
fsubr
in
test
jge
sub
cmp
add
sub
mov
les
dec
xor
int3
xlat
mov
add
xchg
add
idiv
push
sbb
sbb
jae
mov
add
add
mov
add
jg
jmp
test
lea
cdq
xchg
add
adc
or
mov
sub
mov
adc
and
push
add
add
and
dec
mov
add
aaa
mov
popf
and
stc
add
cmpxchg
push
retf
add
xchg
or
add
adc
add
sub
mov
xorps
imul
sbb
sti
xor
shr
inc
loopne
test
lea
add
jmp
mov
pop
or
or
or
jb
cdq
cmp
sbb
sbb
add
add
sub
mov
je
dec
dec
ds
add
add
mov
pop
and
add
mov
and
sbb
clc
mov
fs
mov
add
pop
adc
or
call
or
add
sub
loop
cdq
jo
mov
add
add
add
add
sti
xor
int3
clc
test
ss
je
out
or
add
fcom
jnp
sub
mov
adc
add
add
add
mov
sub
mov
xlat
add
test
mov
loopne
sub
sti
loopne
and
mov
inc
mov
nop
mov
add
xor
retf
fs
add
int3
mov
or
add
test
add
fs
lods
add
jmp
mov
mov
mov
cmp
xlat
add
jmp
and
leave
inc
or
xchg
cdq
lea
add
add
mov
nop
jle
add
mov
push
mov
sbb
jmp
mov
sub
mov
adc
int3
xlat
add
mov
add
and
sub
mov
cmps
(bad)
cmp
or
jmp
sbb
out
or
cmps
xor
stc
xor
and
(bad)
push
add
or
fiadd
add
mov
(bad)
mov
addr16
sub
add
test
add
xor
add
int3
add
xchg
and
add
add
out
(bad)
imul
test
sti
add
jns
xlat
push
movlps
jge
or
add
and
mov
add
imul
test
popf
sbb
add
mov
bound
cmps
mov
xlat
sub
mov
pop
xor
add
xorps
sti
imul
mov
test
sti
xor
imul
int
push
je
xchg
das
pop
and
jo
cdq
or
add
xchg
ja
cwde
adc
test
idiv
dec
xor
add
pop
mov
add
xor
add
test
jmp
adc
loopne
push
push
mov
(bad)
jmp
xor
aaa
jmp
mov
sub
jb
and
push
mov
test
clc
xor
add
pop
jle
ror
or
(bad)
and
add
jmp
xor
sub
mov
clc
cmp
aad
add
inc
test
add
sub
mov
adc
or
add
add
mov
xchg
retf
mov
jle
ficomp
mov
push
movs
mov
pop
push
mov
or
add
sub
mov
xor
(bad)
out
add
add
add
pushf
jge
movs
and
add
fcom
cwde
jnp
sbb
cmp
add
mov
add
lock
(bad)
clc
mov
xchg
add
push
fwait
loopne
mov
add
add
fdivr
cmp
and
add
clc
sub
push
test
cld
add
add
and
pop
test
add
and
retf
xor
popf
loop
test
add
add
add
xor
push
add
sbb
test
cli
add
add
add
sbb
add
add
sub
xor
add
add
retf
cmps
add
add
mov
pxor
inc
add
and
stos
sbb
aad
pop
jmp
mov
cmps
add
(bad)
pop
add
aaa
jmp
pop
stc
and
add
add
mov
je
repz
add
add
stos
das
in
test
cmovae
xlat
push
add
jge
add
and
sub
mov
popf
fadd
sbb
je
inc
xlat
push
clc
add
add
sub
jbe
push
and
add
add
(bad)
pushf
jmp
and
in
push
inc
xchg
cdq
and
add
sbb
add
add
add
sbb
and
add
fs
mov
add
jno
jmp
mov
sub
mov
sbb
retf
jmp
sub
adc
add
cli
push
test
(bad)
and
fadd
adc
add
imul
and
add
loop
mov
jg
jmp
mov
xlat
add
in
adc
movs
and
add
fdiv
in
add
add
mov
test
sub
inc
loopne
mov
mov
jmp
pop
test
and
add
mov
mov
mov
(bad)
xor
add
or
add
pop
test
add
pushf
jg
jmp
mov
sub
nop
mov
mov
add
cmps
add
add
int3
add
add
push
(bad)
push
jae
push
test
add
mov
pop
add
sbb
sbb
mov
or
add
das
in
and
add
ret
test
or
add
pushf
mov
cmc
out
mov
mov
sub
jmp
inc
test
add
sbb
jmp
adc
add
xlat
jg
or
add
add
add
xor
xchg
add
dec
call
add
mov
mov
idiv
test
sti
imul
push
rol
sbb
sbb
or
mov
out
xchg
cmps
xor
mov
leave
add
out
jg
and
and
push
pop
shl
cdq
and
test
jne
add
add
add
sub
mov
psubw
or
jmp
mov
and
mov
into
adc
add
mov
add
add
and
or
fistp
aas
mov
mov
(bad)
add
mov
sub
jno
mov
add
and
int3
add
retf
or
jge
test
add
or
mov
popf
jl
test
add
add
mov
sbb
inc
out
js
test
sub
xlat
push
pop
stc
sub
(bad)
sti
sbb
je
cmp
hlt
retf
add
hlt
add
add
mov
test
fimul
xor
and
mov
push
aam
inc
inc
and
hlt
out
or
add
sbb
or
add
adc
out
push
add
xlat
mov
add
xor
and
je
hlt
neg
add
add
fwait
mov
test
jle
add
ds
setl
mov
sub
mov
lahf
sbb
or
xor
movs
xor
loope
addr16
retf
add
subps
add
sti
jmp
mov
and
add
(bad)
dec
mov
and
setge
or
jmp
inc
loopne
or
add
pop
mov
setbe
add
movs
add
add
add
and
inc
pop
xchg
inc
and
cmps
popf
fdivrp
add
fsubr
retf
add
add
sub
mov
je
adc
mov
and
sbb
clc
sub
mov
loopne
aas
aaa
add
xchg
add
pop
test
or
jns
imul
add
xchg
imul
ss
add
mov
cmp
mov
or
add
out
and
xor
add
sub
hlt
inc
sub
add
sti
jmp
mov
xor
fcom
mov
ret
fstp
aaa
int3
add
or
jge
or
xor
ds
add
adc
stc
or
jbe
mov
not
cmp
cmovne
mov
add
ror
add
(bad)
jl
mov
retf
fs
fsubr
ret
or
push
adc
push
push
add
mov
xor
sub
test
mov
out
pusha
call
push
sbb
faddp
mov
cmp
push
fs
and
add
push
lds
sbb
sbb
or
gs
and
dec
ins
aas
aaa
add
mov
or
pop
or
sti
mov
mov
mov
(bad)
inc
inc
add
in
jmp
int3
add
pushf
ret
js
pushf
add
test
add
sti
jmp
add
fstp
int3
mov
xchg
retf
test
mov
mov
add
cmc
xchg
jge
(bad)
movs
cld
sbb
imul
iret
push
movs
push
icebp
pop
test
pop
push
add
jae
add
inc
add
and
in
xchg
sub
add
pushf
add
into
sub
mov
mov
fsincos
add
(bad)
sub
ss
mov
or
and
retf
mov
sbb
int3
mov
add
inc
add
add
pop
out
or
add
mov
mov
imul
and
push
test
jno
mov
mov
mov
cs
adc
fild
xor
inc
push
pop
push
add
add
mov
and
add
stos
mov
and
sti
imul
les
sbb
add
xchg
out
adc
movups
mov
mov
and
push
pushf
not
or
add
mov
cmp
mov
add
and
push
mov
and
mov
push
popa
add
pop
or
push
add
add
add
call
popa
lods
push
and
or
sbb
dec
ror
clc
add
xor
add
mov
mov
add
xchg
fiadd
add
add
or
cdq
sbb
mov
movs
jmp
mov
mov
adc
xor
push
push
add
loopne
inc
add
and
dec
lods
pop
add
lea
cwde
lods
cmp
jb
loop
cmp
jae
and
mov
and
add
sbb
clc
mov
mov
out
xchg
and
add
cmp
sbb
pushf
add
jg
add
into
test
add
add
dec
or
add
movs
cmps
test
and
retf
(bad)
loope
add
push
add
add
and
call
mov
jle
ret
add
add
pushf
test
mov
mov
xchg
retf
fs
cmps
or
(bad)
idiv
mov
aam
not
test
setge
mov
ja
mov
sbb
mov
dec
inc
aas
int3
add
push
push
push
add
add
pop
add
rcr
cdq
cld
and
mov
and
add
test
mov
add
add
cmp
test
enter
sti
jmp
jmp
and
sbb
pop
mov
jmp
lea
xor
xor
inc
add
add
imul
ins
lea
xorps
mov
add
sub
rol
add
mov
xor
idiv
xor
ror
in
and
sub
add
jmp
leave
test
jle
and
jmp
sub
dec
push
push
add
add
add
mov
add
sti
pop
add
mov
inc
mov
add
por
mov
add
and
pop
stc
and
or
add
adc
add
add
lea
xor
cmp
mov
add
mov
movs
out
movs
jno
and
leave
call
retf
and
or
pop
add
mov
push
fwait
sbb
inc
push
push
add
add
mov
and
add
mov
mov
cmp
cmovl
or
in
push
imul
cmp
dec
iret
loope
adc
push
xchg
add
add
or
mov
mov
sub
add
add
fnstsw
cmp
hlt
daa
ja
mov
jecxz
push
add
mov
and
sub
xlat
push
jmp
mov
mov
jmp
mov
lock
clc
xor
push
mov
adc
add
ds
call
push
add
add
fild
mov
add
add
mov
add
add
pushf
ret
add
mov
add
mov
and
add
add
sub
int3
add
mov
daa
push
int3
mov
and
sbb
cmovne
mov
jmp
mov
mov
jmp
mov
jno
and
add
add
test
movs
add
iret
jmp
ficomp
rol
add
add
jo
xchg
inc
add
and
adc
push
add
mov
mov
cmp
pand
mov
lea
xor
aaa
(bad)
dec
repz
add
pop
push
jmp
jmp
lea
push
or
mov
dec
xor
sbb
push
add
mov
mov
test
cmps
xor
dec
retf
call
xchg
push
add
adc
movs
sbb
add
inc
lods
sbb
mov
push
test
add
xor
test
retf
add
add
ja
loopne
add
jns
(bad)
jb
and
add
sbb
push
add
loopne
inc
add
and
and
add
mov
cmp
cmovnp
cmp
popf
and
add
add
add
jmp
mov
mov
xor
or
ret
rol
inc
test
movs
xor
fidivr
add
mov
and
movs
add
add
sbb
lea
sbb
adc
adc
add
add
or
dec
aad
add
xchg
add
call
fisubr
or
xor
and
add
hlt
arpl
jmp
je
pop
stos
movs
mov
jmp
add
fwait
and
or
add
push
dec
test
mov
pop
test
sbb
pushf
add
pop
add
and
sub
fdivr
mov
cld
ret
jo
inc
loopne
sbb
aaa
add
(bad)
mov
(bad)
loop
add
push
add
mov
ror
clc
fmul
fs
enter
mov
mov
inc
add
add
int3
add
test
sbb
add
int3
sub
fcom
sub
test
xor
or
add
ror
add
xchg
or
xor
test
xor
fiadd
mov
cwde
and
cmp
repnz
out
mov
add
sti
mov
and
add
mov
add
and
sti
xor
ins
fnstsw
xlat
add
mov
cmp
fs
js
cdq
and
stos
add
jmp
xchg
fmul
push
add
add
call
mov
(bad)
dec
repz
add
(bad)
and
fdivr
mov
pushf
adc
or
xor
shr
sbb
xor
in
into
xlat
add
mov
mov
fild
mov
sbb
mov
jmp
sub
and
add
add
loope
jl
inc
add
pop
sti
imul
sbb
add
inc
add
rol
fcomp
xchg
add
dec
rcl
cs
and
jmp
mov
xchg
mov
jae
cmp
addps
and
jmp
mov
iret
aaa
aaa
add
mov
call
pop
adc
ins
dec
call
add
xor
add
fild
add
(bad)
int
fmulp
mov
adc
iret
add
jmp
into
movs
cld
out
add
lock
add
test
mov
xchg
retf
call
adc
add
push
mov
arpl
jne
add
mov
mov
cdq
sbb
add
jmp
mov
xor
call
aaa
inc
push
and
lahf
jge
leave
arpl
imul
sbb
pop
mov
out
push
add
add
push
and
add
xchg
hlt
add
(bad)
lea
fild
sti
pop
ins
lahf
add
jle
add
(bad)
mov
add
ins
lea
cmps
add
add
add
call
add
mov
hlt
inc
sub
add
push
(bad)
pop
push
push
add
add
and
dec
and
call
(bad)
sahf
and
add
int
inc
out
inc
dec
push
xor
push
push
push
add
add
and
enter
add
pop
fbstp
mov
push
xchg
inc
lea
jmp
xlat
add
and
add
add
add
sub
add
(bad)
pop
fistp
add
iret
fimul
xor
inc
and
jmp
int
and
add
or
test
test
sbb
add
imul
es
or
add
add
add
and
call
jp
and
add
sbb
rcr
pop
add
push
add
add
adc
js
add
cli
cmp
jge
test
or
fsub
scas
sar
inc
mov
or
xchg
lods
and
cli
scas
(bad)
(bad)
fiadd
add
add
(bad)
jl
mov
cmps
pusha
xor
add
xlat
mov
xchg
add
add
mov
repz
mov
push
push
push
and
sub
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
call
mov
call
call
mov
call
call
xor
lea
pop
pop
pop
pop
ret
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
add
xor
test
ins
mov
jecxz
mov
mov
(bad)
xor
mov
jmp
fiadd
xlat
cmp
adc
sbb
je
xor
add
add
inc
call
mov
mov
add
or
mov
sub
mov
rol
dec
add
add
mov
sti
xchg
test
mov
jmp
mov
add
cmp
mul
fild
adc
push
inc
fisubr
leave
ja
add
sahf
sbb
xchg
fld
int
mov
xchg
or
inc
add
mov
mov
into
xor
push
sar
add
icebp
push
inc
adc
sbb
inc
add
cmp
add
dec
cmps
gs
dec
and
mov
cmp
inc
add
ret
add
mov
and
mov
or
lock
add
add
pop
and
xor
test
xor
mov
mov
mov
mov
mov
call
inc
adc
xchg
mov
call
cdq
jmp
mov
add
lods
ins
inc
and
inc
jg
and
push
sbb
sbb
add
push
add
dec
pop
inc
add
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
adc
dec
fwait
mov
mov
pop
call
pop
movs
call
call
mov
mov
and
xor
and
add
pop
call
add
mov
add
imul
pushf
jmp
mov
jl
dec
and
jne
sbb
call
call
ins
inc
fmul
cmp
add
int3
add
add
cmp
lock
fdiv
inc
and
stc
(bad)
lea
lods
jmp
je
scas
jl
lock
dec
mov
jl
(bad)
jecxz
mov
jmp
mov
mov
inc
mov
inc
(bad)
sbb
add
test
rcr
mov
std
add
add
call
into
out
lods
push
mov
pusha
rdtsc
int
mov
add
add
out
rcl
mov
(bad)
popf
jnp
add
ja
add
jg
lock
mov
aaa
cmp
xlat
jecxz
add
push
add
and
pop
push
push
mov
push
jg
pop
add
add
mov
and
sub
mov
sysenter
or
push
mov
outs
sub
mov
ins
(bad)
fstp
add
add
mov
xchg
sub
mov
and
adc
in
add
add
mov
sub
mov
test
jmp
mov
sbb
and
adc
dec
add
dec
jmp
icebp
inc
sar
push
mov
pop
test
add
arpl
add
pop
mov
rcl
mov
and
inc
mov
add
jge
and
sub
fild
psrld
popa
add
mov
inc
and
sub
aad
and
je
xchg
pop
add
dec
mov
push
fucomi
or
jb
mov
imul
arpl
mov
push
loopne
mov
adc
in
dec
add
jmp
mov
push
xchg
xor
and
lahf
fisttp
(bad)
sbb
call
sub
mov
test
push
pop
add
mov
and
sub
mov
je
sahf
or
and
ror
push
and
je
pop
sub
jno
mov
ins
and
add
add
add
sub
fild
movntq
mov
rcr
add
cmp
push
adc
(bad)
jecxz
dec
xor
add
push
mov
loop
mov
inc
bound
add
add
cmp
sbb
je
jmp
ds
sub
jbe
and
(bad)
add
arpl
rcr
mov
mov
or
rcr
test
sbb
add
fadd
fild
mov
(bad)
xchg
(bad)
loop
mov
mov
ret
add
imul
add
jp
ja
mov
jmp
dec
push
and
adc
add
cli
rsqrtps
mov
add
int3
jmp
sbb
cdq
pop
enter
mov
inc
push
inc
cwde
add
ins
ret
and
adc
arpl
mov
inc
gs
cmp
xchg
out
ins
nop
xor
cmp
ja
ucomiss
jg
add
adc
or
bound
int3
add
ins
test
mov
ins
cmps
add
add
ret
inc
mov
lods
add
add
movsx
and
pop
mov
mov
test
add
inc
gs
add
add
cs
mov
jmp
mov
mov
mov
in
add
jno
mov
and
sub
sub
aad
and
add
xchg
(bad)
and
xor
jp
add
call
jl
aas
cli
lods
add
mov
stos
test
add
add
std
ins
add
leave
fmul
mov
rep
mov
mov
add
mov
jl
sub
cwde
add
add
fsub
add
add
cdq
push
push
cmc
pop
add
sbb
xor
add
pop
pop
ret
mov
lahf
cwde
call
add
add
adc
add
sbb
add
(bad)
(bad)
or
pop
mov
cli
pop
hlt
pop
add
mov
icebp
jp
test
push
mov
sub
mov
adc
arpl
test
mov
out
ret
push
adc
in
cli
(bad)
jmp
nop
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
cli
dec
ror
dec
jp
mov
mov
mov
out
adc
mov
call
out
or
inc
mov
push
push
shl
rol
(bad)
lahf
and
add
and
jg
jmp
aam
neg
mov
inc
and
je
jmp
mov
and
ret
pop
jne
xchg
mov
jp
lahf
test
add
or
add
mov
xchg
repz
push
xor
addps
test
rcr
add
mov
sub
mov
and
pcmpgtd
mov
mov
add
fs
mov
mov
xchg
jno
add
inc
sbb
cmps
loop
sbb
inc
scas
jae
call
and
iret
add
mov
mov
xrelease
pop
shr
fistp
cmps
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
dec
ds
or
and
or
js
cld
add
add
mov
add
popf
add
es
jno
add
mov
add
add
adc
mov
mov
dec
rol
gs
cmp
jmp
jmp
stos
shl
gs
icebp
mov
(bad)
sbb
mov
jne
push
es
xor
dec
and
xor
push
test
inc
cmps
mov
cmps
dec
dec
jo
adc
int3
add
add
add
mov
sub
mov
loopne
test
add
jmp
mov
sub
es
xchg
test
add
aaa
shl
xchg
push
mov
pop
xlat
outs
pop
add
inc
adc
add
add
add
rcl
test
or
test
sub
dec
dec
add
test
jg
mov
mov
(bad)
mov
add
jmp
jmp
mov
mov
add
outs
mov
and
jmp
mov
cmp
rol
add
adc
mov
int3
add
dec
lahf
int3
cmp
or
mov
nop
xor
sbb
add
mov
ficom
or
mov
(bad)
shl
add
add
mov
sub
mul
adc
push
in
add
lea
mul
or
jmp
add
add
or
cmps
ret
hlt
sbb
call
std
dec
add
call
cli
add
inc
add
mov
add
mov
and
xor
or
pop
mov
add
mov
xlat
add
add
popa
mov
or
mov
ss
(bad)
jmp
xchg
add
lea
dec
(bad)
and
add
mov
sbb
and
cmp
cmps
xor
add
add
or
mov
mov
sbb
and
mov
call
cmovle
push
add
or
test
cld
or
nop
cmp
cmp
jle
in
or
inc
and
(bad)
and
xchg
in
sub
add
cwde
xlat
cli
ret
add
inc
and
jmp
sti
xchg
pop
jmp
test
pop
pop
pop
cdq
ret
mov
lock
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lea
mov
adc
and
inc
sbb
add
mov
mov
xchg
or
jno
and
call
dec
pop
sbb
add
and
inc
jnp
xor
xor
dec
pop
push
test
pop
add
add
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
mov
add
add
add
test
and
add
mov
ficom
ins
add
add
pop
add
mov
add
add
out
and
mov
sbb
xchg
mov
mov
rcr
and
add
setge
add
jmp
mov
jecxz
cmp
jl
xchg
test
verr
or
sub
mov
fistp
add
pop
sti
add
test
or
sub
mov
cmp
jb
add
jmp
or
and
xor
mov
push
pop
inc
lock
pop
add
mov
cmp
jne
test
dec
pop
add
sub
lock
or
mov
add
pop
add
xor
add
aam
(bad)
(bad)
inc
and
jg
loop
pop
add
loope
and
mov
call
(bad)
xlat
add
add
xor
and
aam
pop
sub
mov
jp
and
push
push
add
add
sub
cmp
jle
jg
fadd
add
loopne
push
and
dec
pop
add
cmp
cli
mov
sbb
out
push
mov
add
add
xor
cli
cmp
push
(bad)
mov
loopne
add
mov
sub
dec
inc
and
add
inc
push
push
hlt
cmovle
test
sbb
ja
or
jg
jne
loop
pop
push
add
push
cmp
pop
inc
mov
push
mov
add
add
add
rcl
ret
mov
pusha
dec
xor
je
arpl
sbb
test
add
mov
mov
cmpxchg
loop
sar
(bad)
test
add
add
dec
inc
and
rol
add
push
test
add
mov
mov
mov
dec
xor
loopne
push
rcl
dec
(bad)
xchg
sbb
(bad)
or
sub
add
add
inc
add
push
aam
dec
sub
cld
inc
jecxz
rcl
xlat
dec
inc
add
add
loope
inc
and
je
sti
add
and
add
into
sub
mov
sub
test
mov
retf
mov
add
or
jmp
push
add
add
xchg
add
jne
es
mov
add
test
add
jmp
iret
test
int
popa
jnp
fwait
js
sbb
test
add
pop
jmp
mov
sub
mov
mov
add
ins
add
int
pop
add
(bad)
pop
jb
mov
add
add
mov
xchg
test
xchg
ret
nop
mov
je
jmp
jmp
mov
dec
cmc
scas
scas
dec
pop
lock
sbb
mov
add
push
jno
pop
test
dec
pop
adc
fiadd
jne
mov
mov
mov
add
xcrypt-ecb
cmps
int
add
cld
and
ja
fisttp
aam
dec
add
sete
(bad)
add
add
push
jmp
movs
stc
mov
test
and
pop
xor
cmovne
rol
hlt
add
or
test
sahf
push
sbb
je
jle
xor
xchg
ja
das
add
pop
cdq
test
add
ret
add
mov
mov
mov
cmp
call
test
outs
mov
xchg
add
mov
inc
xor
gs
retf
and
add
add
neg
xor
rol
cmp
in
sub
and
into
pop
push
call
push
mov
pop
jmp
pop
push
ins
mov
cmp
arpl
daa
fist
push
add
push
cmp
add
add
ins
and
add
aam
inc
dec
(bad)
xchg
and
cmp
add
xchg
xchg
into
add
mov
(bad)
(bad)
pop
or
dec
add
add
add
cmp
mov
mov
inc
push
and
jne
add
mov
add
loopne
ins
dec
or
mov
add
cmp
dec
das
push
pop
push
jecxz
and
sbb
dec
add
and
add
pop
(bad)
pop
pop
ret
(bad)
push
ins
aad
add
cmp
sbb
add
inc
and
into
add
(bad)
(bad)
call
mov
add
jmp
mov
mov
mov
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
pop
test
add
add
call
int
add
add
adc
mov
call
adc
adc
test
add
mov
test
popf
fs
imul
mov
int3
ins
es
pop
rcl
cmp
xchg
movs
add
add
mov
push
add
jmp
or
and
add
add
push
test
bndldx
add
jmp
mov
sub
mov
sbb
(bad)
arpl
add
call
test
cmp
mov
sub
mov
and
add
add
(bad)
pop
popf
test
add
sbb
outs
leave
in
and
add
add
addr16
mov
fst
mov
xchg
nop
lahf
add
push
test
add
push
mov
jmp
push
test
pop
sub
popa
loope
out
add
add
mov
adc
add
sbb
push
xchg
scas
pop
test
inc
jg
jmp
dec
ins
mov
cmp
pop
xchg
pop
mov
and
add
sahf
popf
pop
push
mov
jmp
add
add
out
cli
cmps
push
test
add
add
inc
mov
add
and
test
into
fdivr
push
and
mov
popf
vmwrite
mov
sub
push
and
add
mov
(bad)
xchg
fwait
xchg
add
inc
mov
mov
sbb
cmp
bound
add
xchg
ret
cmp
add
add
add
mov
push
pop
add
add
add
jmp
mov
ins
lds
jno
dec
ins
and
add
add
(bad)
jmp
int3
mov
add
adc
shl
mov
stos
ret
mov
jg
and
add
sub
ret
add
call
pop
and
add
fwait
sbb
or
mov
movlps
add
add
and
add
add
inc
test
add
add
cmp
add
jmp
adc
mov
sub
mov
shr
mov
ins
add
jmp
or
call
sub
rol
xchg
(bad)
pop
add
add
test
sub
mov
packuswb
and
add
mov
jbe
inc
and
mov
mov
mov
xor
mul
sub
fs
add
add
test
add
jg
jmp
add
add
movs
test
inc
add
addr16
add
mov
test
mov
test
jg
lock
add
inc
and
add
xor
add
mov
(bad)
rol
add
mov
test
sub
mov
das
(bad)
repz
add
mov
xchg
nop
lahf
add
mov
add
add
add
mov
sub
cmp
add
sub
mov
jg
clc
pop
mov
add
add
sub
mov
popf
test
add
test
hlt
inc
call
add
inc
add
arpl
add
sub
sbb
dec
ins
and
add
and
inc
xchg
add
add
adc
pop
mov
sbb
sub
mov
xchg
jb
sub
inc
jmp
mov
rol
xchg
loope
repnz
xchg
jg
test
sahf
nop
add
jmp
jge
and
sub
sbb
or
movs
popa
add
add
add
test
push
mov
jmp
cmp
add
lahf
mov
jg
jmp
dec
ins
mov
sub
mov
xchg
or
xchg
inc
test
jmp
add
add
sub
push
test
add
add
(bad)
xchg
add
fldl2t
add
pop
mov
test
sub
mov
add
stc
test
mov
add
add
add
add
sub
popa
test
and
add
inc
xchg
fst
add
add
add
add
push
mov
rcl
stos
inc
push
add
mov
cmp
jp
daa
sbb
xchg
test
mov
les
add
sbb
add
sub
mov
rdmsr
and
add
jmp
rol
sub
mov
setge
inc
push
add
mov
adc
dec
out
sbb
and
add
mov
test
add
add
popf
jge
and
add
add
mov
je
leave
ins
into
add
pop
mov
sub
add
je
lock
add
dec
test
jmp
fnsave
fmul
xor
aaa
nop
add
test
sub
movs
inc
cmp
ins
ret
add
sbb
xchg
mov
cmp
jg
dec
mov
mov
test
je
add
mov
push
mov
ins
minps
pop
add
jmp
mov
cmp
jmp
(bad)
cmp
mov
movs
call
fwait
sub
out
shl
and
je
ja
add
add
push
and
add
add
adc
and
(bad)
(bad)
add
add
xchg
sbb
add
ret
add
add
inc
and
mov
int3
fadd
adc
test
mov
jle
adc
mov
add
test
sub
push
inc
add
ret
test
add
clc
pop
mov
test
push
fs
mov
sub
mov
or
test
add
add
sub
inc
push
add
mov
je
inc
nop
xchg
add
mov
cmp
mov
sub
movs
pop
and
dec
in
sub
call
and
mov
sub
cwde
pop
and
mov
xchg
jmp
test
add
pusha
and
inc
and
cmova
jno
fld
call
sub
mov
je
pop
mov
test
sub
dec
lods
and
das
dec
inc
add
fprem
fdiv
and
xchg
inc
add
mov
mov
repnz
jmp
cmps
popf
fs
ret
stos
test
sub
and
mov
test
push
add
cmp
add
sub
cmp
and
xchg
test
add
pop
mov
push
add
add
inc
ret
mov
ret
and
je
mov
add
cmp
add
outs
mov
je
je
add
add
sbb
fnstsw
dec
push
ror
outs
stos
pop
xchg
pop
add
fld
add
repnz
mov
inc
add
popf
mov
nop
les
add
ret
add
test
add
(bad)
pop
xor
sahf
add
cmp
popf
add
shl
mov
add
add
jl
loopne
stos
add
add
inc
xor
(bad)
jp
xchg
movs
fdivr
add
pop
add
add
mov
fiadd
add
dec
add
int
lock
jb
into
sub
add
inc
retf
and
inc
push
and
mov
out
adc
loope
lahf
xor
mov
ret
data16
mov
mov
(bad)
in
out
add
add
popf
and
mov
mov
add
test
xchg
add
mov
and
add
add
xor
add
add
xor
add
mov
push
sti
cmps
xor
pop
add
add
add
out
cmp
lar
mov
jmp
cmps
test
mov
add
neg
(bad)
(bad)
(bad)
push
call
fsubr
mov
lahf
xchg
add
loopne
mov
add
add
rol
or
add
nop
les
add
(bad)
ins
and
add
int3
mov
xchg
push
jmp
push
or
add
out
mov
ret
add
jo
mov
test
rol
and
add
add
xchg
add
mov
inc
xchg
and
fcom
pop
aaa
cli
stos
add
add
fs
mov
jmp
ss
and
mov
dec
jl
(bad)
int3
mov
and
adc
pop
mov
fs
add
jmp
mov
loope
out
add
add
add
add
scas
or
addr16
test
sbb
cmp
test
or
ret
call
call
add
out
add
xor
lahf
xchg
inc
add
cmp
cmp
mov
scas
cmc
add
and
dec
(bad)
mov
push
inc
and
jmp
push
test
retf
jmp
push
test
xor
les
int3
cmp
xchg
inc
ret
test
pop
popf
add
fnstcw
and
jmp
xor
push
js
mov
shl
cmp
add
test
add
add
movs
test
and
push
test
add
fwait
add
adc
(bad)
sub
jl
add
mov
mov
add
mov
cmp
sahf
add
add
inc
mov
and
add
add
jg
mov
mov
sub
stc
or
and
ret
test
add
mov
add
inc
and
jmp
mov
pop
in
add
dec
or
jl
push
and
mov
mov
and
fadd
add
test
sbb
jmp
jge
stos
pusha
add
pop
pop
sbb
push
add
add
and
int3
mov
jmp
xchg
adc
fdivr
jmp
mov
loope
mov
dec
push
mov
mov
xchg
in
adc
xor
or
popa
mov
add
test
call
and
mov
mov
mov
adc
add
mov
xor
cmp
rcl
add
popf
and
add
push
push
inc
add
pop
rcl
pop
mov
test
ret
(bad)
das
arpl
inc
bound
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
lea
pop
add
cli
arpl
mov
mov
add
mov
inc
test
inc
call
add
outs
mov
mov
pop
xor
and
out
and
and
cmp
dec
add
or
and
xor
xchg
rol
add
push
mov
mov
cmps
sub
mov
mov
push
dec
add
(bad)
and
lock
mov
lods
add
add
out
je
lods
in
push
sub
mul
mov
out
and
cmp
in
(bad)
idiv
(bad)
mov
inc
cmp
adc
(bad)
icebp
mov
mov
(bad)
sub
retf
add
fistp
xor
out
and
mov
and
pop
lock
cmp
inc
and
pop
add
adc
add
add
call
mov
or
adc
outs
mov
in
sbb
(bad)
ror
and
sbb
or
inc
mov
lea
sub
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
(bad)
sub
inc
add
or
add
add
add
and
(bad)
(bad)
mov
call
mov
loopne
(bad)
jge
and
add
add
test
mov
out
fidivr
mov
iret
add
clc
rol
mov
xlat
add
mov
and
hlt
jmp
mov
sub
inc
jbe
add
cmp
test
int3
inc
repz
xchg
stc
adc
and
add
imul
and
mov
add
jnp
add
add
add
add
pop
inc
inc
movs
mov
and
rol
add
test
add
inc
and
and
jg
out
add
sbb
add
sub
mov
je
jmp
mov
aam
sbb
xchg
aad
add
cdq
jmp
popa
inc
and
pop
sbb
mov
je
cwde
ins
add
lods
inc
ret
xlat
or
inc
and
gs
add
pop
add
add
jmp
rcr
pusha
je
jmp
cli
test
lods
iret
inc
faddp
das
into
int
rcr
movhps
add
adc
add
add
fnstenv
and
je
jmp
sbb
repnz
fwait
outs
call
fwait
dec
jl
pop
add
loope
push
mov
push
ja
das
push
mov
or
loop
and
add
cli
mov
inc
fimul
cmps
add
es
cdq
mov
add
push
rcr
add
xlat
inc
inc
(bad)
dec
jle
sbb
add
(bad)
push
jge
adc
push
pop
cmp
and
jg
mov
mov
rol
sub
mov
std
cmc
test
inc
add
mov
mov
add
mov
mov
jg
mov
jg
and
addr16
jmp
xchg
in
jl
(bad)
and
jg
jmp
mov
mov
add
jb
inc
and
(bad)
cmp
add
rol
dec
in
sbb
xor
(bad)
mov
jno
lods
mov
mov
inc
add
push
shl
push
mov
add
add
mov
popa
stos
sub
mov
sub
add
lods
mov
mov
repz
mov
xchg
test
add
push
imul
dec
add
pop
sub
mov
add
lods
iret
inc
js
and
or
add
mov
je
jmp
mov
pop
hlt
mov
fisubr
sbb
lods
add
add
add
push
aam
jmp
add
jge
add
push
sbb
add
mov
and
add
hlt
sub
mov
fild
add
add
add
loop
inc
fimul
inc
and
xor
int
add
scas
add
or
cdq
mov
xchg
stos
das
pushf
les
add
cli
jmp
mov
jmp
mov
mov
jmp
mov
repnz
test
xchg
lods
(bad)
dec
cdq
add
rol
jbe
lods
jmp
jnp
cld
add
sbb
mov
dec
in
add
hlt
fisubr
mov
sub
cmp
leave
inc
xchg
nop
mov
mov
add
mov
add
mov
std
fwait
dec
fidivr
add
push
jecxz
push
mov
push
jmp
fild
inc
inc
sahf
mov
mov
add
jmp
mov
or
(bad)
call
mov
mov
repz
sub
pop
inc
jge
out
add
out
jbe
lods
mov
add
cdq
mov
arpl
das
push
add
mov
mov
int3
or
mov
xchg
add
lods
mov
sbb
push
add
repz
test
jmp
in
in
and
add
repz
jmp
sbb
push
add
add
mov
and
cmp
mov
daa
jb
add
in
sbb
xlat
xchg
or
(bad)
mov
jb
mov
mov
mov
inc
and
(bad)
add
mov
xchg
push
pop
sbb
add
add
clc
dec
pop
test
call
stos
loopne
push
add
add
push
or
jb
mov
loopne
jbe
dec
rcr
cs
add
movs
fcomp
cmp
scas
or
mov
inc
adc
into
dec
xlat
or
ins
into
out
add
mov
mov
xchg
add
loop
dec
sbb
add
into
ror
add
addr16
and
dec
and
mov
out
movs
out
add
sti
in
push
add
sbb
push
add
jno
mov
test
mov
mov
mov
loope
and
push
pop
hlt
mov
out
mov
cs
out
add
movs
int3
sbb
mov
add
sbb
add
and
jno
add
and
mov
call
mov
add
or
mov
mov
adc
push
add
inc
dec
or
stc
mov
push
add
and
addr16
mov
pusha
sbb
add
xchg
and
dec
and
mov
inc
fsubr
add
mov
mov
mov
fs
add
add
mov
add
inc
mov
add
mov
mov
add
ror
jg
inc
jp
push
add
or
add
and
call
push
enter
mov
es
push
add
xchg
and
repz
dec
and
adc
call
mov
lods
scas
dec
retf
pop
add
add
mov
jmp
mov
sbb
gs
jnp
pop
xchg
ret
mov
or
xlat
mov
or
cmp
pop
test
test
add
imul
add
out
inc
sbb
add
xchg
add
lods
test
xchg
iret
add
mov
mov
loope
add
cld
test
lods
iret
add
outs
rcl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fild
mov
clts
adc
or
pop
dec
mov
repnz
add
add
add
xlat
ret
lea
adc
or
cli
mov
mov
inc
test
add
add
and
adc
add
add
arpl
cmp
add
ins
inc
adc
and
cdq
add
mov
in
dec
push
test
ret
ja
jmp
add
inc
add
arpl
dec
inc
adc
add
and
(bad)
mov
enter
out
and
inc
mov
dec
push
scas
adc
or
mov
and
add
jmp
mov
jg
mov
mov
and
add
add
in
arpl
adc
or
int
inc
cdq
mov
test
push
out
daa
aam
sbb
jnp
jg
jmp
mov
and
dec
push
push
ud2
imul
add
add
add
mov
and
add
(bad)
push
xor
add
add
jae
jmp
adc
sbb
in
dec
sub
dec
movs
and
add
pcmpgtw
jle
add
add
add
dec
sbb
inc
adc
cdq
jne
push
iret
test
jecxz
fld
push
ret
test
add
sub
arpl
call
adc
add
or
add
mov
xchg
lds
test
push
add
cmovge
add
jmp
add
add
neg
xor
xchg
and
in
or
loop
mov
push
pmovmskb
cmp
add
sub
arpl
and
add
add
add
ins
scas
add
add
xchg
sub
mov
and
test
add
add
add
add
add
jmp
retf
in
fldcw
jo
add
cli
add
add
mov
jmp
and
push
add
inc
jmp
popa
test
inc
out
inc
jbe
in
mov
add
pop
inc
add
add
and
add
repz
mov
add
(bad)
pop
jmp
out
(bad)
test
in
add
pop
cdq
shl
inc
enter
test
fcom
add
add
mov
ja
add
jmp
pop
and
inc
add
jg
jmp
xchg
sub
mov
add
test
xlat
ret
sub
inc
jmp
pop
outs
and
jp
inc
sub
outs
pop
and
add
add
(bad)
dec
add
or
add
mov
and
inc
cdq
add
gs
add
cmps
mov
add
mov
sub
push
test
ins
add
dec
(bad)
xor
in
loope
add
add
add
sbb
shl
int
cmp
add
stos
rol
add
addr16
fld
sub
into
test
mov
leave
and
dec
add
out
inc
add
cmps
push
xchg
mov
ret
mov
add
mov
dec
or
add
inc
add
dec
push
add
inc
jmp
mov
xbegin
test
rol
add
add
or
leave
ret
cwde
(bad)
in
popa
jne
arpl
dec
movs
data16
add
pcmpgtw
add
add
int3
test
add
adc
in
jo
mov
cdq
add
je
jmp
mov
out
add
add
pop
aas
leave
arpl
and
inc
out
arpl
jmp
outs
test
sbb
add
outs
and
jge
test
rcl
mov
ret
or
add
push
and
add
add
stos
sub
arpl
(bad)
jecxz
add
jmp
xchg
sar
and
ret
shld
add
test
out
fldcw
mov
pop
int
add
jmp
mov
jns
scas
add
mov
in
(bad)
add
jmp
int3
xchg
and
or
pop
sbb
test
mov
ud2
jo
add
stos
push
(bad)
add
popa
test
add
add
fsubr
loope
ret
and
add
add
mov
pop
inc
inc
jmp
mov
sbb
add
popa
inc
pop
fld
test
add
in
ret
out
add
ins
inc
cwde
test
add
in
in
fsubrp
iret
inc
and
enter
add
jmp
mov
sub
test
pop
mov
add
out
out
arpl
in
add
adc
jecxz
mov
test
push
ret
ja
add
add
mov
je
mov
add
ins
inc
mov
sub
test
je
jmp
mov
sub
mov
pmovmskb
add
and
mov
sub
mov
dec
add
ins
jmp
cwde
popa
and
add
add
mov
je
add
pmovmskb
sbb
inc
push
sub
mov
je
push
adc
add
add
sub
mov
and
dec
sbb
mov
mov
pop
add
push
sti
xor
in
repnz
ret
push
je
jmp
xchg
outs
in
mov
push
je
jmp
mov
sbb
and
je
stos
pop
add
push
pop
test
jp
add
mov
and
je
or
or
mov
in
popa
pop
test
inc
pop
inc
in
and
jmp
add
arpl
sbb
inc
add
test
dec
sbb
jmp
(bad)
and
add
and
mov
in
xchg
inc
add
push
sub
add
mov
arpl
add
in
xchg
xchg
fs
test
shufps
mov
add
push
test
mov
int
and
mov
out
test
add
add
rcl
xor
mov
add
jmp
mov
and
test
out
push
daa
add
pop
outs
je
jmp
mov
add
xlat
loopne
lds
pop
test
push
add
sub
(bad)
popa
jmp
add
out
sub
and
js
stos
push
add
inc
mov
in
popa
inc
out
fisttp
(bad)
out
push
(bad)
jmp
mov
ds
repz
gs
inc
and
js
test
add
add
mov
je
stos
add
add
jmp
inc
clc
jbe
dec
int
jecxz
dec
push
test
cli
add
add
dec
inc
xchg
pop
outs
and
add
add
(bad)
ficom
repz
or
add
in
add
xchg
jo
test
movzx
inc
fimul
add
cmovne
fiadd
xchg
std
add
add
aad
in
in
aaa
lds
or
jmp
mov
mov
(bad)
jnp
dec
add
push
out
jnp
and
mov
ror
(bad)
clc
adc
mov
mov
(bad)
out
add
inc
mov
and
add
add
push
cmp
xlat
ret
inc
fadd
ins
mov
lea
push
inc
inc
add
add
inc
enter
add
cmp
or
jecxz
xchg
popw
xlat
jmp
cli
or
fldcw
xchg
add
pop
add
in
hlt
xor
and
add
inc
add
(bad)
push
adc
sbb
pusha
add
ins
(bad)
(bad)
mov
and
inc
cdq
add
push
test
and
inc
push
(bad)
mov
dec
add
enter
ins
inc
add
xchg
add
or
test
add
(bad)
sbb
dec
xchg
xchg
fs
ins
lock
push
jp
les
jecxz
test
add
add
fild
jmp
(bad)
call
in
add
or
test
cwde
add
jmp
mov
adc
mov
push
(bad)
mov
push
fwait
(bad)
or
pop
adc
add
or
cmovne
mov
jmp
mov
jo
test
push
mov
add
retf
add
mov
outs
or
jb
stc
iret
or
and
add
add
or
test
add
fisttp
ja
add
and
mov
mov
adc
mov
inc
add
mov
in
mov
fmul
push
inc
push
(bad)
jmp
and
add
ins
mov
aaa
test
mov
add
inc
add
dec
add
ja
add
and
sub
jmp
mov
mov
cwde
xchg
and
in
add
cdq
cmovne
mov
jmp
cmp
jae
push
mov
mov
mov
push
pop
(bad)
in
repz
inc
add
aad
dec
or
jns
xor
jb
imul
inc
add
(bad)
inc
lods
mov
in
or
adc
mov
rol
(bad)
and
add
(bad)
popa
test
add
fld
into
pop
shl
fdivrp
(bad)
mov
clc
cmps
jmp
and
add
push
mov
and
add
add
movs
and
push
add
cmove
mov
stos
neg
add
push
push
add
or
mov
lea
mov
mov
mov
add
push
ret
inc
add
add
inc
imul
aad
arpl
add
dec
add
mov
and
add
jmp
(bad)
shl
add
out
and
push
add
jle
cmp
add
retf
pop
add
inc
int
and
add
add
and
add
xchg
inc
and
adc
mov
stos
inc
lods
add
fmul
mov
lock
cmps
add
ins
into
hlt
lea
retf
sbb
push
or
mov
push
test
push
dec
inc
add
inc
imul
sub
add
add
(bad)
or
stos
push
add
add
jmp
xlat
jmp
test
fldcw
or
inc
add
mov
test
imul
mov
test
inc
add
mov
dec
inc
inc
add
mov
lods
dec
add
ja
add
add
mov
mov
jmp
aam
shr
or
fidiv
in
add
push
add
sub
push
ror
and
out
ins
mov
jmp
pop
inc
enter
add
(bad)
ja
jmp
add
pop
add
add
add
lea
pop
mov
test
or
add
inc
enter
push
lock
inc
aas
fstp
out
pop
dec
pusha
add
add
test
inc
cdq
add
mov
mov
pop
add
push
mov
xchg
push
into
and
add
xchg
pop
jecxz
fwait
repz
dec
pop
add
in
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
inc
retf
add
scas
lea
loope
lahf
or
add
outs
cmp
and
ret
fwait
add
xchg
(bad)
dec
out
fcmovb
mov
add
movs
popa
test
imul
ss
test
add
clc
push
add
mov
aad
out
add
fwait
mov
add
int3
add
add
pop
push
out
mov
movzx
loope
and
add
add
adc
add
dec
mov
sbb
push
add
add
dec
adc
fild
dec
adc
mov
mov
and
loope
lahf
or
inc
and
call
mov
outs
test
push
add
fwait
das
sub
and
add
add
sub
mov
or
add
mov
add
add
arpl
mov
mov
mov
adc
add
add
(bad)
clc
add
mov
add
xor
add
mov
mov
add
std
push
test
aam
ret
test
add
add
mov
jg
fimul
add
mov
sub
adc
add
test
pop
push
xor
lea
or
add
xchg
addr16
or
outs
lock
add
cmps
jb
ret
fwait
add
cs
add
mov
rol
add
cmps
iret
push
dec
xchg
das
test
in
add
ss
ins
cli
dec
stos
test
test
xor
jmp
add
aam
jle
add
dec
add
lahf
or
add
pop
push
mov
jg
jmp
mov
add
pop
push
mov
test
and
in
add
xor
sub
and
sahf
test
pop
ret
push
add
and
mov
movs
sub
loope
and
mov
and
add
or
pop
add
jb
test
inc
test
add
push
test
add
dec
or
in
add
mov
and
add
add
mov
adc
add
add
leave
ret
add
and
add
movs
movaps
add
add
add
and
add
add
mov
add
ret
jmp
sbb
sub
mov
test
jmp
add
mov
lea
add
sbb
sub
rol
ret
xchg
mov
sub
add
push
pop
jecxz
add
add
mov
ins
(bad)
ja
add
add
test
mov
and
add
add
mov
cmovbe
add
add
add
add
dec
out
and
fcmovb
add
das
test
add
in
sysenter
add
add
dec
add
test
push
das
out
and
stos
and
leave
add
jg
jmp
mov
and
add
push
js
test
add
aaa
inc
(bad)
cmp
add
fwait
movs
adc
push
pop
int
mov
and
mov
add
ins
jmp
mov
sub
cmps
adc
push
push
and
add
bound
movs
add
mov
dec
in
add
mov
pextrw
stos
test
std
pop
ret
fwait
mov
push
and
and
add
push
mov
add
mov
mov
add
test
test
add
fwait
and
sbb
mov
mov
and
add
xchg
aas
cli
(bad)
clc
mov
mov
jg
jmp
mov
or
xchg
leave
out
pop
(bad)
in
cmc
mov
test
add
mov
adc
dec
add
xchg
fiadd
pop
or
retf
add
leave
jmp
mov
sub
add
test
add
add
and
add
sub
and
inc
add
fwait
and
sbb
add
add
sub
mov
cmp
pop
ret
fwait
mov
out
mov
addr16
dec
iret
and
je
add
add
ins
push
test
inc
add
inc
scas
mov
sahf
dec
hlt
ins
add
jmp
test
sar
pushf
and
adc
cmps
add
add
xlat
test
or
fwait
cs
dec
inc
and
je
jmp
mov
xchg
fwait
adc
and
inc
test
test
jmp
movs
adc
add
push
and
and
add
push
in
mov
inc
inc
jg
clc
ret
out
mov
xor
pop
add
jge
add
add
sub
jecxz
jecxz
test
cmp
add
and
test
test
add
jecxz
icebp
lods
mov
je
jb
das
add
fiadd
(bad)
cmps
(bad)
mov
jecxz
test
add
or
pop
ret
mov
jne
or
inc
and
int
icebp
add
jmp
add
and
cmps
push
gs
inc
and
cmp
test
js
call
test
and
test
loope
cmps
push
add
ins
test
das
sub
dec
movs
sub
add
add
sbb
bound
fild
jmp
lahf
inc
cmp
loope
test
jmp
and
sub
mov
ret
cmps
jmp
mov
and
in
mov
pop
cmp
push
and
cvttps2pi
ret
fwait
jmp
sbb
sub
dec
iret
and
stos
test
imul
ins
test
test
sub
mov
nop
mov
pop
jecxz
add
dec
pop
mov
cmp
int
add
add
fwait
add
xchg
pop
dec
cs
enter
cmps
add
data16
and
add
ins
test
retf
and
push
add
xchg
jmp
inc
test
add
ret
pop
xlat
mov
je
jmp
mov
add
and
repnz
pop
ret
jmp
inc
inc
and
imul
sub
mov
xor
add
add
add
add
jmp
mov
adc
add
mov
cmp
comiss
mov
retf
add
add
test
mov
cmp
add
add
add
call
and
pusha
out
adc
loope
add
jmp
and
fcmovb
add
inc
ins
mov
jmp
mov
add
jno
inc
add
loope
enter
inc
add
mov
mov
or
ins
add
add
mov
mov
add
add
push
add
inc
and
add
xchg
push
test
add
add
shr
add
cmp
imul
pop
dec
add
pop
mov
mov
retf
dec
out
out
(bad)
mov
sub
add
xor
xor
pop
add
dec
mov
mov
add
jmp
mov
mov
sbb
push
adc
ins
adc
cmps
push
ss
ins
ret
mov
test
add
pop
add
push
pop
scas
loop
sbb
mov
(bad)
fild
movs
cmps
shl
sbb
mov
rcl
pop
das
paddq
mov
data16
(bad)
jmp
push
ja
fmul
adc
enter
mov
ins
ret
sbb
dec
xor
add
xor
pop
and
cmp
addr16
sub
mov
or
add
add
cmp
test
add
fwait
(bad)
jb
add
sbb
cmp
mov
push
aas
and
ins
test
mov
scas
add
add
mov
sub
fwait
cmps
jae
inc
add
or
call
jmp
cmp
add
add
sar
jmp
or
sub
and
add
mov
cmp
stos
xchg
ret
es
mov
in
and
ss
stos
jmp
mov
mov
dec
xchg
mov
test
cmovne
add
movs
jmp
push
push
int3
sub
test
add
add
repnz
pop
scas
jo
rcr
add
add
enter
std
fld
(bad)
dec
and
imul
aaa
add
and
or
std
pop
sub
add
stos
jecxz
and
fcmovb
mov
shl
mov
call
mov
and
(bad)
aad
add
sar
and
inc
mov
add
(bad)
jmp
mov
xor
and
mov
(bad)
and
stos
add
(bad)
mov
cmp
inc
add
shr
xchg
fadd
and
add
add
cmps
add
jl
and
ins
add
adc
test
mov
lea
adc
add
and
dec
loope
scas
add
push
cmc
call
xor
aaa
or
add
xor
add
mov
sub
sbb
mov
add
mov
or
out
and
jmp
mov
or
leave
ret
cmp
add
(bad)
cmps
stos
push
adc
aaa
ins
test
into
mov
add
jmp
(bad)
(bad)
hlt
jo
retf
loope
jecxz
movs
add
ins
test
add
ret
mov
add
mov
and
call
imul
add
push
inc
and
add
or
add
jmp
lock
and
stos
test
adc
ins
retf
jmp
adc
sbb
add
dec
test
movs
add
mov
ss
add
dec
stos
and
aad
lahf
cmps
fwait
push
call
add
movs
cmps
push
add
test
mov
inc
and
cld
dec
ret
fwait
mov
jmp
lea
sub
and
imul
or
ss
xlat
int3
jbe
inc
fadd
add
mov
and
jmp
je
sub
mov
mov
xchg
jp
inc
ret
push
add
pop
xor
xchg
call
sub
(bad)
(bad)
jmp
push
mov
adc
popa
and
mov
mov
mov
xchg
jo
inc
add
call
loope
add
pop
stos
and
add
(bad)
add
(bad)
dec
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
fwait
loop
mov
mov
mov
lds
push
mov
retf
mov
jb
add
aaa
mov
pushf
add
mov
pop
add
inc
sbb
add
add
test
adc
add
mov
add
mov
sub
adc
sti
or
add
and
movzx
int
jbe
mov
sub
sahf
inc
and
je
jmp
mov
mov
test
or
inc
mov
and
add
sub
jbe
test
test
test
mov
mov
mov
dec
jmp
mov
and
add
add
retf
inc
add
pop
cmp
cmp
push
pop
add
ror
add
mov
and
pop
or
adc
push
sbb
add
cld
retf
bound
fnstsw
fnsave
mov
sub
mov
jge
(bad)
and
or
jmp
mov
test
dec
jbe
push
into
dec
lahf
mov
push
add
jmp
(bad)
push
and
cmp
sbb
test
cmovns
add
and
add
sub
mov
and
(bad)
fadd
sbb
(bad)
and
inc
add
or
jl
push
pmullw
shl
add
test
mov
mov
pop
sub
add
add
addr16
jbe
mov
mov
mov
aaa
xor
shl
add
add
into
add
mov
je
stc
jmp
neg
popf
fisttp
add
xchg
and
mov
and
int
lahf
add
test
into
mov
lds
mov
and
test
add
dec
mov
mov
test
inc
imul
add
add
mov
test
jbe
sub
or
jmp
add
aam
adc
add
adc
mov
es
add
shl
int
sub
mov
xchg
test
add
pop
xchg
sub
mov
sub
ret
and
add
fisttp
and
inc
es
sub
mov
and
push
test
add
jbe
ins
add
add
mov
sub
dec
and
ins
xchg
out
add
add
neg
pop
add
addr16
pop
inc
sbb
mov
add
pop
int
add
add
test
jecxz
xchg
lock
sahf
dec
and
je
inc
in
sbb
push
sbb
add
repnz
add
ins
mov
ds
test
add
add
mov
das
add
add
add
push
adc
add
out
shl
adc
out
or
mov
mov
call
call
sti
sbb
add
inc
es
test
jmp
mov
mov
cmp
cmove
mov
scas
jmp
mov
mov
add
div
add
or
jmp
loop
add
mov
scas
pushf
addr16
nop
adc
pushf
dec
add
inc
push
mov
jmp
push
into
dec
add
xor
add
mov
pop
(bad)
sbb
(bad)
sub
rol
sbb
popf
add
sar
adc
leave
mov
nop
add
test
pop
add
movzx
idiv
adc
xor
loop
in
lea
repnz
mov
mov
mov
mov
add
mov
push
pop
int
cmove
dec
test
test
cdq
daa
pop
add
(bad)
test
sbb
add
add
mov
jmp
mov
mov
jmp
mov
dec
test
test
adc
(bad)
popf
and
or
(bad)
fdivr
sar
jmp
mov
mov
sub
cmps
shl
and
add
add
test
cmp
push
and
add
jbe
jo
pop
loope
xchg
cmp
stc
movs
scas
neg
fild
add
lea
imul
and
rol
sahf
xchg
xchg
add
dec
or
mov
nop
push
and
mov
push
(bad)
jmp
jg
and
dec
add
jmp
push
jmp
(bad)
cmp
add
add
xchg
jmp
mov
mov
mov
pushf
cwde
inc
mov
scas
test
dec
mov
call
mov
retf
or
mov
call
adc
int
shl
das
jmp
nop
push
mov
push
push
push
and
sub
jmp
call
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
out
cmove
mov
int3
mov
outs
stc
lea
mov
and
mov
sbb
(bad)
jo
add
add
or
mov
sub
mov
and
shld
cdq
hlt
add
inc
movs
lods
js
jle
cs
dec
inc
lock
ret
sbb
add
hlt
movs
and
aad
(bad)
les
iret
out
xor
test
add
les
inc
mov
lock
psrld
jg
add
mov
test
add
sbb
jmp
inc
inc
les
arpl
lds
and
aam
dec
add
inc
sbb
inc
iret
call
je
sbb
add
int
and
push
fs
and
inc
and
cmovo
add
iret
jmp
mov
and
stos
cmp
sbb
test
add
jmp
add
mov
je
jmp
jmp
xchg
cdq
ss
mov
cmp
cmovb
mov
jmp
mov
mov
and
shl
add
add
(bad)
loope
or
mov
shl
inc
add
xor
nop
or
push
jmp
sub
mov
movzx
mov
and
push
cs
mov
shl
inc
add
push
(bad)
out
mov
hlt
dec
je
push
mov
add
add
or
lock
fstp
fmul
and
jno
or
movs
and
iret
dec
and
call
mov
jge
and
sub
dec
inc
and
cli
lea
add
dec
mov
sbb
adc
add
cmp
sbb
mov
jmp
lea
pop
jo
pop
(bad)
icebp
pusha
sbb
jge
iret
loopne
mov
mov
shl
inc
add
adc
push
xor
and
jno
aad
add
inc
mov
adc
xchg
shl
inc
add
jns
or
je
dec
mov
and
or
lock
(bad)
adc
shl
inc
add
sbb
add
jg
mov
dec
shl
inc
add
(bad)
push
add
add
jl
dec
stos
pop
and
shl
add
adc
loopne
jl
push
inc
je
or
loop
cmp
repz
inc
inc
push
shr
nop
cmp
nop
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
sub
push
and
popa
mov
push
aad
sub
push
and
or
sbb
inc
and
mov
mov
push
cmc
and
jecxz
fcmovnu
mov
adc
jmp
ret
dec
mov
and
dec
or
imul
bound
les
add
cmps
dec
and
inc
and
nop
add
add
inc
and
sbb
js
sub
outs
fstp
cdq
(bad)
mov
retf
dec
sub
cmp
lods
add
aam
add
add
jp
jmp
(bad)
jge
inc
rol
add
and
sub
mov
sub
pop
dec
add
jmp
pop
inc
ins
dec
sub
mov
adc
mov
cmp
add
mov
lods
push
xchg
sahf
loopne
and
aam
lahf
xlat
add
add
gs
cld
jecxz
dec
mov
inc
and
(bad)
xor
jmp
mov
adc
mov
aam
lods
add
or
and
add
jmp
pop
imul
add
outs
fadd
sub
mov
out
pop
adc
add
jmp
or
cdq
sub
mov
popa
test
dec
dec
imul
sub
mov
sub
test
adc
and
sub
fiadd
jb
mov
mov
sub
ror
add
push
sbb
inc
rol
add
add
jnp
mov
add
mov
fsub
push
push
adc
inc
sbb
mov
add
mov
mov
jmp
xchg
lods
ret
mov
cmp
inc
and
arpl
cdq
add
and
mov
call
mov
(bad)
dec
and
inc
rol
das
(bad)
(bad)
std
std
cli
jle
inc
jmp
mov
bound
push
ins
push
cmp
cmps
push
cmovb
enter
jmp
mov
mov
push
dec
or
or
adc
xor
and
mov
and
xor
and
shl
ret
push
or
inc
lock
data16
mov
and
mov
cmp
(bad)
or
sar
xor
xchg
(bad)
mov
push
sub
add
push
sbb
pop
sbb
movs
and
pop
xchg
and
sub
mov
add
pop
pop
mov
call
sbb
popf
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
add
add
sub
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
movzx
mov
mov
mov
mov
sub
sub
mov
movzx
mov
mov
mov
mov
mov
mov
add
add
mov
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
movzx
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
movzx
mov
mov
mov
mov
mov
mov
add
add
mov
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
sub
sub
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
add
add
sub
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
movzx
mov
mov
mov
mov
sub
mov
movzx
mov
mov
mov
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
shr
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
sub
add
add
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
sub
add
add
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
sub
add
add
sub
sub
cmp
cmove
mov
jmp
mov
movzx
mov
mov
mov
mov
add
add
sub
mov
movzx
mov
mov
mov
mov
mov
mov
add
add
mov
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
add
add
sub
sub
add
add
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
add
add
sub
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
jmp
mov
mov
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
movzx
mov
mov
mov
mov
sub
add
add
mov
shl
add
movzx
mov
mov
mov
mov
mov
mov
mov
shl
add
add
mov
add
mov
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
mov
mov
shr
mov
mov
sub
mov
mov
mov
mov
mov
call
add
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
sub
add
add
mov
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
jmp
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
call
mov
jmp
mov
mov
call
mov
jmp
mov
mov
jmp
mov
mov
jmp
add
pop
ret
mov
jmp
int3
int3
int3
int3
int3
push
mov
push
and
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
call
add
mov
mov
mov
mov
jmp
mov
mov
lea
pop
pop
ret
mov
call
mov
mov
mov
mov
sub
mov
call
add
mov
mov
mov
jmp
int3
int3
int3
int3
push
mov
push
and
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
call
mov
mov
mov
sub
mov
mov
call
add
mov
mov
mov
mov
jmp
mov
mov
lea
pop
pop
ret
mov
call
mov
mov
mov
mov
sub
mov
call
add
mov
mov
mov
jmp
int3
int3
int3
int3
push
mov
push
push
sub
mov
mov
mov
mov
mov
mov
cmp
jge
mov
jmp
mov
mov
mov
movzx
cmp
jl
mov
jmp
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
movzx
cmp
setge
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
test
jne
jmp
jmp
mov
mov
add
mov
movzx
sub
mov
mov
jmp
mov
mov
movzx
cmp
jl
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
jmp
mov
mov
add
mov
movzx
sub
mov
mov
jmp
movzx
mov
mov
mov
mov
mov
cmp
jge
mov
add
mov
movzx
mov
shl
shl
mov
mov
add
mov
mov
add
mov
jmp
mov
cmp
jne
mov
mov
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
jne
jmp
mov
mov
mov
mov
sub
imul
and
cmp
sete
cmp
setl
or
test
mov
jne
jmp
mov
add
pop
pop
pop
ret
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
inc
adc
dec
adc
mov
out
and
add
or
and
mov
jne
push
mov
fs
outs
xor
add
mov
popf
div
mov
test
lods
in
xor
add
popa
and
popf
adc
jmp
xchg
test
sbb
add
jg
inc
add
outs
jg
pop
add
add
mov
sub
mov
nop
add
add
mov
test
add
xchg
inc
and
jg
je
test
in
test
add
add
scas
push
(bad)
mov
ins
pop
out
mov
in
adc
test
add
adc
in
stc
(bad)
and
addr16
xchg
add
add
and
add
add
jmp
mov
jno
popf
cld
cmp
stos
outs
test
pop
jl
jg
and
psubsb
nop
add
jmp
mov
test
mov
mov
out
add
add
sahf
test
add
mov
jns
add
jmp
mov
jmp
xor
fistp
div
in
pushf
add
adc
add
cs
pop
hlt
lds
(bad)
and
inc
mov
add
test
add
nop
push
es
leave
getsec
mov
in
retf
adc
out
mov
add
jg
and
lock
and
add
mov
sub
mov
cli
fild
xchg
pushf
mov
mov
sub
cld
inc
and
punpckhdq
add
add
shr
add
sub
pop
(bad)
inc
lock
add
nop
jmp
mov
add
mov
and
jg
jmp
push
test
add
push
sub
mov
cmp
sub
add
sub
stc
add
adc
fild
sub
mov
xchg
jle
(bad)
and
add
popf
add
test
in
cmp
fdivr
adc
sbb
arpl
add
jmp
push
test
inc
add
jmp
shl
(bad)
and
add
fimul
rol
sub
mov
je
push
mov
sub
lods
add
sbb
scas
jbe
inc
sub
fisttp
add
test
popf
mov
mov
push
adc
je
rsm
pop
add
inc
add
sub
test
sub
out
inc
and
lahf
test
add
in
mov
inc
fimul
popf
add
mov
xor
jb
add
jmp
xchg
push
mov
sub
push
inc
and
jmp
call
push
mov
sub
mov
loopne
or
add
inc
xor
sbb
test
add
dec
lds
and
mov
add
add
add
jmp
data16
cmp
cli
jge
les
dec
test
test
add
repnz
jmp
mov
jmp
data16
xlat
pop
sbb
or
pop
push
out
mov
(bad)
into
mov
add
out
test
nop
add
xchg
add
add
add
add
daa
xor
add
popf
lods
add
lods
cmp
popf
add
std
test
or
frstpm(287
mov
add
mov
mov
mov
outs
sbb
add
add
sbb
mov
shr
add
mov
nop
outs
add
mov
ret
(bad)
rcr
jmp
call
push
out
push
push
sar
add
add
add
xchg
inc
adc
jle
int3
add
outs
setle
mov
mov
add
add
cmp
popa
mov
outs
xchg
and
popf
add
mov
sub
adc
sbb
mov
out
nop
add
dec
in
add
add
fiadd
add
(bad)
push
mov
xchg
imul
add
stos
outs
mov
jg
jmp
mov
mov
mov
sub
or
jmp
arpl
sub
icebp
and
add
add
test
mov
popf
add
dec
add
adc
sbb
hlt
adc
add
jge
and
add
sub
sbb
inc
add
add
mov
pop
mov
mov
mov
test
push
out
shl
das
ror
add
test
xchg
or
add
popf
mov
xchg
add
add
and
les
mov
and
call
imul
add
add
mov
lock
sub
xchg
imul
add
and
add
cmp
pop
ret
push
test
frstpm(287
xor
in
sbb
mov
cmp
adc
int3
out
cs
mov
inc
push
sbb
add
mov
mov
jle
xchg
outs
add
in
or
movs
test
adc
sbb
cli
(bad)
dec
pop
inc
add
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
jg
inc
cdq
inc
xchg
dec
push
cmp
or
push
add
push
into
inc
mov
mov
mov
es
and
and
stos
cmp
cdq
pop
pop
inc
and
fnsave
inc
fisttp
jmp
add
jmp
mov
xor
ror
(bad)
shl
je
sahf
fadd
add
pop
pop
outs
or
inc
test
cvtpi2ps
jecxz
mov
sub
mov
jo
js
jge
add
jmp
mov
push
pminub
and
jmp
mov
sub
mov
mov
ja
mov
add
cwde
retf
sub
and
je
jmp
mov
pop
mov
adc
shl
jb
add
sub
adc
and
and
test
xor
xor
rcl
and
test
add
add
mov
xchg
sub
cmp
and
(bad)
arpl
add
add
add
push
cli
fdivr
jnp
shl
or
mov
std
cmp
js
jl
inc
and
jmp
sub
call
dec
xchg
xor
dec
jmp
cmp
inc
sti
xchg
mov
ds
aas
cmps
jmp
jmp
jecxz
add
sub
add
inc
jmp
cmps
popa
in
loope
sub
jo
rcr
cmps
stos
icebp
test
mov
cmp
dec
(bad)
pop
adc
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
mov
and
and
mov
test
mov
mov
jmp
mov
mov
daa
cmovge
add
sbb
add
add
mov
adc
inc
and
add
stos
adc
sub
sub
or
and
add
mov
add
test
mov
inc
and
xchg
imul
icebp
mov
setp
add
add
dec
inc
es
mov
inc
pop
mov
(bad)
adc
add
add
or
sar
fcomp
xor
add
adc
and
sub
dec
inc
es
test
add
out
add
ret
xor
jge
mov
pop
sub
add
jmp
stos
cli
and
xchg
movs
and
loopne
xchg
mov
add
add
cmp
add
setle
ins
or
add
inc
jns
push
inc
cwde
cmp
jae
xchg
pop
mov
and
imul
cmp
add
arpl
mov
xor
push
or
and
and
inc
and
jmp
mov
xchg
inc
and
jmp
mov
push
jns
cdq
add
retf
xor
mov
test
jg
xor
in
loope
adc
adc
mov
cmps
xor
gs
std
pop
pop
pop
ret
mov
jmp
nop
push
mov
push
push
push
and
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
add
mov
sub
mov
mov
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
add
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
lea
pop
pop
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
sub
sub
mov
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
add
pop
pop
pop
pop
ret
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
nop
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
setne
and
mov
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
sub
mov
call
add
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
lea
add
movzx
mov
mov
mov
mov
add
add
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
add
mov
mov
jmp
mov
mov
mov
mov
mov
xor
div
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
sub
mov
mov
call
add
mov
mov
mov
mov
mov
add
sub
mov
mov
mov
call
add
mov
mov
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
jmp
nop
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
mov
jmp
mov
jmp
mov
add
pop
ret
mov
mov
jmp
mov
mov
mov
mov
call
sub
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
call
add
mov
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
sub
mov
call
add
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
sub
mov
mov
mov
call
mov
mov
jmp
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
mov
mov
call
mov
jmp
nop
push
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
jmp
mov
add
pop
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
cmps
jmp
add
mov
and
mov
inc
adc
repz
inc
cmp
jne
sub
inc
add
rcl
dec
add
cmps
mov
mov
call
mov
shr
inc
cmps
push
mov
push
pop
and
fs
lods
jmp
pop
inc
push
outs
dec
xor
add
test
add
std
unpckhps
loope
fwait
inc
inc
mov
bswap
mul
cmps
jmp
inc
mov
movs
pop
cld
or
retf
add
dec
ins
inc
or
mov
and
stc
(bad)
pop
mov
add
inc
xlat
and
stc
loopne
jge
mov
movaps
and
dec
ficomp
and
fcmovnb
aaa
ins
or
jge
sub
jp
add
aam
mov
test
lock
and
aad
dec
test
add
jno
adc
les
inc
lds
out
add
sub
mov
and
cmp
cs
movs
inc
and
je
jmp
mov
or
test
sub
test
sub
jne
dec
add
dec
mov
sub
mov
inc
test
out
add
dec
cmps
add
mov
sub
push
fst
scas
je
pushf
xor
dec
cmps
mov
mov
outs
jecxz
sub
movs
inc
movs
add
jmp
mov
and
push
pop
dec
sbb
and
test
retf
jp
dec
out
dec
or
add
sbb
cmp
dec
dec
lock
clc
mov
and
iret
rol
add
cmove
mov
(bad)
add
retf
retf
jmp
mov
mov
imul
push
mov
rcl
(bad)
(bad)
(bad)
(bad)
out
xor
inc
add
shl
or
and
imul
andnps
xor
mov
push
cmp
and
movs
mov
dec
dec
or
imul
add
add
inc
rol
and
movs
push
add
add
loope
dec
mov
sbb
in
and
mov
inc
and
jmp
lea
pop
pop
jb
mov
loope
add
inc
dec
sbb
jmp
(bad)
cmp
and
loope
ins
mov
jmp
nop
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
(bad)
jmp
add
test
xchg
je
xor
sbb
pop
push
cld
hlt
mov
and
mov
adc
add
mov
mov
add
dec
ja
icebp
cld
add
sti
(bad)
into
add
jmp
mov
lds
add
pop
mov
clts
mov
add
lock
mov
add
add
mov
cwde
inc
mov
test
add
adc
add
mov
sar
std
test
ret
repz
and
hlt
inc
dec
dec
add
add
add
cmp
inc
jmp
sbb
add
adc
inc
lock
add
and
add
inc
(bad)
iret
ret
fstp
xchg
xor
clc
(bad)
and
add
add
pop
aam
xchg
add
fsubp
xor
inc
add
adc
jmp
add
frstor
push
sub
and
push
add
repz
add
jmp
(bad)
jmp
xchg
rol
fwait
call
pxor
nop
add
jmp
jg
and
add
(bad)
mov
jl
(bad)
xlat
add
adc
mov
add
aam
add
imul
inc
jne
vmread
add
mov
xchg
adc
sub
cmp
and
pmulhuw
xchg
add
jmp
mov
imul
int3
in
and
seta
mov
cwde
xchg
je
imul
jne
shr
and
outs
add
add
mov
sar
jecxz
add
mov
and
int3
ja
add
add
sub
dec
das
add
add
mov
and
setl
add
test
xchg
ret
sub
mov
je
jmp
mov
aaa
test
add
sub
call
fadd
lock
jne
add
cld
fld
mov
and
je
cli
add
adc
test
and
sbb
sub
mov
pushf
dec
rcl
cld
jmp
mov
stos
mov
or
sub
retf
add
add
add
fiadd
adc
jne
and
comiss
ins
outs
add
add
mov
sub
push
inc
aam
pushf
inc
mov
push
add
mov
in
ins
xchg
inc
lds
push
clts
and
add
cmc
add
add
mov
sub
jp
and
vmread
inc
add
ins
add
not
add
mov
jmp
and
add
add
add
jl
lds
cwde
je
test
add
add
aaa
test
adc
test
mov
add
(bad)
add
add
add
xchg
mov
test
add
mov
add
adc
mov
jl
and
add
add
inc
and
sar
imul
jmp
js
and
cld
hlt
add
sub
je
jmp
ret
and
add
gs
out
pop
test
(bad)
hlt
inc
dec
dec
add
ins
or
and
add
add
mov
xchg
add
add
loopne
out
push
cld
add
cmp
inc
in
mov
add
push
jg
sbb
mov
clc
pop
add
out
sahf
dec
inc
inc
jne
bound
scas
enter
adc
mov
sub
mov
clc
adc
je
add
imul
add
add
add
sub
mov
je
test
and
add
add
mov
sbb
movs
push
mov
jmp
xor
jge
sbb
add
nop
(bad)
dec
jmp
xor
pop
mov
push
xchg
adc
paddusb
mov
daa
add
lahf
add
jl
add
inc
mov
inc
cmp
lods
add
add
adc
mov
add
aam
icebp
jp
add
test
ret
add
fiadd
mov
test
mov
and
xchg
adc
sub
sahf
cmc
add
mov
push
adc
imul
mov
jo
clc
(bad)
jo
test
add
xchg
xchg
and
add
add
shr
mov
mov
jp
add
add
jne
and
add
add
add
xchg
mov
pop
aam
xchg
ret
add
push
popf
test
add
add
test
sbb
rol
cmp
add
jnp
mov
fadd
jmp
mov
mov
cmp
setne
and
mov
mov
test
aaa
add
add
sub
mov
and
add
inc
push
mov
bound
mov
imul
adc
adc
xor
shr
cmp
and
add
jmp
js
jne
add
add
push
add
inc
mov
or
sar
ror
pop
and
jmp
mov
scas
ret
add
lds
clc
clc
add
idiv
mov
and
add
add
add
jne
add
add
mov
inc
add
ins
xchg
add
fimul
es
mov
fild
xchg
add
test
pop
push
add
and
add
inc
sub
pop
fcmovb
(bad)
xchg
and
adc
dec
ror
mov
add
test
sbb
mov
loop
aas
sbb
add
mov
out
push
add
jg
test
add
inc
mov
in
inc
mov
sub
xchg
and
add
add
rcr
call
mov
sbb
add
xchg
aas
out
lock
stc
(bad)
dec
pop
inc
add
in
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
or
add
mov
fdiv
xchg
out
outs
add
add
add
add
leave
add
fnstenv
lock
add
(bad)
xchg
mov
fsubr
test
add
pop
test
nop
fdivr
mov
mov
je
mov
jmp
ja
mov
mov
jle
in
test
fmul
xchg
mov
pop
adc
std
call
scas
jmp
jns
and
jno
fwait
out
mov
jg
jmp
mov
sub
sbb
and
adc
dec
inc
add
add
and
sub
mov
ret
(bad)
ins
add
add
push
cmp
out
pop
(bad)
mov
cvtdq2ps
add
repnz
pop
pop
jae
pop
mov
jb
add
and
jmp
add
inc
and
in
sbb
push
jg
inc
shl
add
xlat
inc
ja
rcl
rcl
add
add
xchg
mov
and
xor
inc
and
jnp
add
add
xlat
scas
shl
call
cmp
gs
and
jmp
add
add
jg
inc
scas
and
sub
mov
inc
fild
repnz
pop
fsubr
jns
pop
push
cmp
in
outs
add
push
je
inc
and
cli
adc
int
mov
push
fcom
add
add
ins
inc
lock
sub
mov
movhps
lock
mov
adc
mov
je
psubusb
add
mov
sub
mov
in
jne
cwde
add
ror
je
mov
sbb
sti
pcmpeqd
test
push
in
and
mov
outs
mov
in
add
aam
mov
cli
cmp
xor
push
in
add
rol
add
mov
jge
sti
mov
pushf
test
add
aam
mov
js
aaa
mov
push
xlat
inc
test
aam
lods
add
add
pop
mov
dec
mov
in
or
mov
scas
add
jecxz
adc
and
sub
ins
pushf
and
je
add
xchg
add
sub
pop
mov
mov
repnz
add
ins
add
sahf
xchg
js
mov
mov
and
cmove
mov
and
add
int3
mov
les
push
jns
push
dec
and
pop
push
add
add
in
cmps
mov
je
int
jg
mov
mov
and
neg
add
sub
sub
mov
mov
push
add
outs
mov
and
xchg
call
adc
mov
add
xchg
loopne
push
add
add
mov
(bad)
add
sbb
add
add
adc
cli
xlat
bound
test
xchg
cwde
leave
and
scas
cmove
pop
dec
(bad)
gs
push
in
add
in
ret
pop
pop
cld
xor
pop
and
add
add
cwde
leave
mov
std
nop
fiadd
sub
(bad)
call
or
sub
fmul
test
in
add
in
mov
cmp
(bad)
scas
mov
xchg
sar
jmp
(bad)
xor
xchg
add
scas
(bad)
xchg
and
xchg
stos
sti
cld
jmp
jmp
mov
aaa
mov
cmp
jle
je
stc
push
add
call
cmp
add
mov
(bad)
fdivr
inc
xchg
(bad)
je
fwait
lahf
aaa
mov
ins
nop
and
lea
mov
mov
mov
xor
(bad)
dec
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
add
pop
pop
ret
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
out
mov
or
add
add
add
jae
mov
push
std
and
adc
iret
adc
add
mov
mov
call
push
cmps
repz
jl
mov
adc
add
or
dec
add
test
add
leave
add
rol
test
mov
add
add
push
add
add
mov
mov
mov
inc
inc
or
repnz
add
inc
je
imul
add
adc
sub
jmp
mov
and
and
add
xchg
jae
mov
sub
cmc
test
fld
jns
cdq
jmp
cwde
add
bt
add
xlat
leave
mov
mov
addr16
mov
jl
mov
fadd
jns
sahf
test
into
add
mov
adc
clc
popa
add
inc
push
movs
push
add
jmp
mov
add
sti
mov
and
jae
add
jmp
sahf
test
add
add
mov
repz
add
dec
jo
add
add
test
add
push
call
fadd
jg
es
add
in
add
add
sub
push
and
add
add
(bad)
fcom
add
lock
test
popa
cdq
out
xchg
sub
add
adc
cdq
ds
mov
into
add
push
mov
and
push
add
(bad)
(bad)
jae
repnz
add
mov
and
fld
jns
xor
sbb
dec
addps
add
shr
add
add
and
add
imul
add
add
cld
clc
add
sbb
add
cmc
and
adc
add
test
add
xlat
(bad)
(bad)
jg
add
jmp
mov
mov
stc
pop
xor
test
add
add
pop
jae
add
jge
jns
arpl
adc
mov
add
(bad)
popa
bound
jmp
push
add
sub
mov
dec
jmp
mov
add
fadd
push
sub
jp
inc
sbb
add
(bad)
(bad)
add
add
xlat
inc
test
cmp
mov
jmp
add
(bad)
cld
and
add
movs
jl
add
push
std
push
adc
iret
cdq
adc
std
out
mov
and
add
add
(bad)
add
add
ds
test
lahf
push
add
in
mov
and
add
dec
psllq
add
jmp
inc
sbb
dec
sub
mov
mov
test
mul
popa
loopne
push
scas
mov
jg
lds
add
mov
int
sar
xchg
sbb
inc
mov
jl
test
dec
add
add
jl
mov
loop
sub
mov
and
popa
dec
xlat
jg
xlat
jecxz
add
pop
sub
mov
add
(bad)
adc
repnz
jmp
cli
xchg
jmp
add
add
test
imul
xlat
jecxz
add
add
add
test
add
add
mov
(bad)
(bad)
add
dec
add
std
push
adc
iret
add
test
dec
xlat
leave
iret
mov
add
mov
add
add
sub
mov
and
add
add
test
add
jns
add
ds
mov
push
in
nop
add
ds
test
add
lock
test
add
out
fist
pop
mov
add
xchg
ror
add
and
inc
inc
sbb
jecxz
sub
mov
and
add
lock
idiv
add
fiadd
jns
cmc
and
add
iret
mov
test
movs
in
test
leave
shl
loope
add
in
jmp
push
add
add
in
jo
ror
add
enter
add
push
jnp
add
add
sub
inc
test
je
in
lods
push
add
mov
sub
mov
std
test
add
add
mov
and
into
cdq
ds
mov
cmovge
ret
jmp
mov
sub
mov
(bad)
test
mov
sub
movs
and
loop
rol
sub
and
add
in
mov
and
pcmpeqd
dec
add
fnstsw
cli
test
retf
cwde
add
sub
call
inc
test
jecxz
jmp
mov
sub
mov
add
fld
jns
cmc
and
add
add
pop
jmp
and
je
jmp
dec
mov
add
movs
mov
push
fiadd
cmovl
inc
dec
jl
mov
jge
jno
loop
into
fild
inc
and
fadd
jmp
test
sub
mov
(bad)
div
cld
add
add
test
js
adc
inc
mov
fadd
add
mov
dec
in
loop
add
(bad)
repnz
dec
fiadd
cmp
jl
nop
test
test
sub
mov
and
mov
test
add
lock
repz
sub
cmc
inc
clc
cmp
jmp
mov
push
and
rol
into
pop
jmp
push
fiadd
cmp
test
add
dec
add
add
mov
and
mov
ds
(bad)
mov
and
add
fst
push
call
test
push
jno
adc
add
add
inc
repz
test
xor
and
add
add
cld
je
push
je
jmp
mov
add
inc
and
fadd
add
ds
mov
fwait
jmp
cmps
es
push
sbb
adc
add
add
add
inc
aam
dec
and
aas
add
jmp
push
inc
and
loop
add
push
add
lock
mul
add
add
add
test
fld
jns
ds
push
jmp
mov
mov
mov
and
add
adc
cmp
cmovb
jns
push
or
add
adc
add
cmc
test
fld
add
mov
popa
rcl
add
add
add
enter
and
add
mov
mov
and
daa
(bad)
adc
add
bnd
xchg
mov
add
int
jecxz
xor
fwait
add
push
add
push
add
jns
in
or
jae
mov
jp
jno
test
mov
mov
xlat
add
mov
mov
mov
clc
(bad)
adc
dec
jl
rcr
jno
mov
adc
add
movs
test
pusha
add
dec
aam
add
test
enter
sub
std
jmp
and
add
jl
sbb
add
repnz
repz
dec
pop
sub
iret
mov
mov
call
sbb
add
mov
add
out
add
mov
movd
and
int
jl
add
jbe
mov
add
sbb
(bad)
add
add
mov
add
adc
push
add
and
call
mov
and
repz
mov
nop
(bad)
pop
iret
cdq
call
xchg
jp
fisttp
in
add
jecxz
or
sbb
xor
std
inc
xchg
mov
add
add
outs
int
cdq
xchg
sub
add
add
inc
xchg
in
loop
add
inc
call
add
push
adc
repnz
mov
clc
popa
jo
iret
call
add
add
add
inc
aam
mov
and
(bad)
fbld
call
(bad)
xlat
and
add
add
mov
jmp
mov
not
push
adc
add
inc
mov
add
mov
dec
xchg
and
add
add
mov
clc
call
mov
leave
ja
pop
sub
add
jae
push
mov
and
jo
iret
jo
add
add
test
imul
xor
ds
add
aaa
cmp
test
rol
add
out
fnstsw
leave
jb
and
pusha
dec
xlat
and
add
xchg
in
in
mov
push
add
add
setne
jo
add
xor
test
add
sub
cdq
xchg
shl
mov
mov
loop
mov
inc
ror
add
ss
enter
out
jl
push
cwde
mov
mov
or
add
add
lahf
add
inc
add
cld
sub
mov
inc
inc
in
xlat
inc
jecxz
mov
mov
ja
add
add
add
jae
and
test
add
dec
jl
add
lock
add
add
add
jmp
inc
or
leave
jle
fbstp
in
pop
add
mov
jae
gs
(bad)
clc
clc
gs
iret
mov
adc
retf
leave
rol
ja
adc
and
enter
or
jge
inc
push
or
mov
add
sahf
inc
mov
add
pop
pop
in
add
jecxz
dec
add
add
add
enter
xchg
mov
ins
jmp
repnz
add
sub
ret
adc
xlat
add
test
add
ds
not
jne
add
aaa
test
add
jae
sbb
and
js
adc
(bad)
dec
mov
popf
fsubr
xrelease
(bad)
dec
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
out
and
add
xor
mov
add
dec
xchg
pushf
in
add
stos
test
jecxz
pop
mov
cwde
adc
add
(bad)
adc
add
sbb
push
sbb
add
sub
cmp
xor
mov
inc
add
mov
in
add
mov
test
add
mov
cmp
xchg
add
in
cwde
fndisi(8087
add
jmp
repz
sbb
test
in
pop
icebp
add
(bad)
mov
add
or
add
add
jl
outs
push
(bad)
sti
mov
call
mul
mov
add
add
xor
(bad)
sub
xor
in
add
push
jne
daa
add
jmp
mov
push
adc
loopne
add
in
(bad)
aas
push
add
push
jo
mov
mov
sbb
outs
lods
mov
pand
and
mov
aaa
test
add
xchg
sub
xchg
rol
test
mov
setp
imul
ffree
inc
cmps
add
icebp
or
adc
push
aam
xchg
add
test
ins
add
sbb
add
test
out
add
adc
add
jg
jmp
imul
add
lea
je
jmp
sti
cld
xchg
clc
mov
add
push
or
movs
enter
loop
and
add
sbb
loop
add
mov
sub
mov
bound
pop
add
inc
add
add
xor
sub
mov
mov
mov
add
and
imul
add
inc
cli
ror
jmp
jo
(bad)
popa
add
mov
adc
jp
js
mov
and
mov
(bad)
jnp
and
jl
add
mov
and
loop
sbb
aas
or
xchg
test
add
js
(bad)
cmps
mov
adc
xor
jp
clc
cmp
or
add
das
ins
ds
add
jl
jmp
add
push
test
add
(bad)
(bad)
imul
add
sub
mov
shrd
add
add
xchg
jl
add
data16
sbb
out
cmc
pop
pop
cld
pushf
out
and
(bad)
inc
(bad)
(bad)
out
add
mov
and
add
add
sub
mov
jae
mov
add
jmp
ins
test
mov
cwde
mov
and
add
add
jmp
mov
jnp
add
add
sbb
in
xchg
sbb
add
add
jo
repz
sbb
pop
lea
add
add
shr
and
loop
pop
fwait
add
add
push
dec
stos
xchg
(bad)
xchg
shl
add
add
push
jmp
mov
inc
dec
push
movs
mov
ins
and
loop
add
add
test
add
add
sbb
and
ins
add
in
xchg
xor
push
add
out
add
xor
sub
xor
jg
mov
aaa
cmps
and
xchg
add
sub
mov
jg
xchg
add
add
xor
xchg
add
jmp
leave
and
(bad)
jge
add
jmp
fcmovnu
and
add
fwait
sub
mov
jg
test
add
add
push
add
mov
je
jmp
sahf
test
(bad)
inc
iret
mov
pcmpeqw
add
add
mov
and
add
jmp
jno
sbb
push
jo
mov
mov
xor
out
mov
shl
fistp
add
loop
add
add
test
xchg
mov
cmp
psubsw
out
sbb
mov
sub
cmp
and
je
jmp
or
adc
fisub
lea
test
test
push
add
or
add
mov
sub
in
and
adc
jb
add
cld
xchg
dec
add
cvtps2pi
test
out
add
jmp
stos
data16
add
add
mov
shl
sbb
add
mov
sub
mov
je
mov
add
add
add
mov
je
or
sbb
and
add
cwde
mov
pop
cli
ja
and
(bad)
cwde
pop
add
sbb
add
add
add
in
stc
inc
(bad)
aad
inc
psubb
add
add
repz
ins
test
jo
add
cmp
and
cmp
std
add
pop
mov
iret
adc
adc
push
cmp
clc
jl
add
jmp
ins
hlt
pop
clc
add
cmc
xchg
mov
pop
pop
icebp
and
mov
test
sub
mov
and
adc
inc
add
add
dec
fldenv
or
test
add
mov
and
add
add
ret
mov
sbb
cwde
jns
add
push
js
mov
xchg
dec
int3
mov
push
sbb
pop
add
ss
mov
clc
add
add
fisttp
outs
fisub
bound
mov
add
xor
sub
mov
leave
inc
inc
loop
pop
add
push
cwde
mov
leave
popa
sub
stos
clc
sbb
jbe
or
add
sbb
cmove
mov
jmp
mov
mov
call
inc
pop
dec
(bad)
and
sbb
push
and
fcmovnb
pop
inc
retf
and
mov
add
les
loopne
out
popa
leave
movs
jns
in
xchg
add
adc
add
xor
inc
ror
adc
in
pop
dec
xchg
loop
fld
jnp
and
add
add
jl
adc
mov
movs
mov
ja
xchg
dec
cld
add
jmp
add
jnp
mov
sub
rol
add
imul
push
add
jo
adc
js
mov
inc
jbe
mov
test
add
sbb
loop
mov
mov
add
sbb
inc
jl
imul
cmp
adc
inc
add
inc
add
pop
icebp
add
(bad)
sub
mov
in
mov
push
cmp
jae
cmps
mov
loopne
add
mov
mov
cmp
xor
push
add
pop
push
add
pop
add
icebp
mov
mov
xchg
mov
add
add
mov
(bad)
mov
inc
mov
adc
and
mov
pop
add
add
xor
cld
add
jmp
pop
ss
inc
adc
sbb
jbe
or
add
mov
ja
ror
adc
add
shl
add
pop
jmp
mov
mov
mov
sbb
cmc
pop
add
mov
pop
dec
mov
add
dec
(bad)
inc
cmp
test
mov
jmp
mov
mov
mov
(bad)
hlt
and
add
mov
(bad)
jb
sbb
add
test
add
lea
push
in
add
mov
(bad)
test
cld
add
add
mul
add
inc
xor
jo
test
clc
add
add
fcmovnbe
ret
cld
add
jo
lock
xor
pusha
push
push
add
add
jne
and
mov
add
push
pop
fwait
xor
cmc
push
add
aad
rcl
in
jmp
cld
xchg
or
add
mov
jmp
mov
sub
add
fnstsw
outs
pop
pop
out
ret
push
clc
dec
push
add
sbb
ret
jmp
std
add
mov
mov
loop
and
jo
add
inc
jecxz
pop
add
add
dec
pushf
adc
pop
cmp
inc
test
cld
add
push
lock
or
aaa
fwait
add
mov
mov
mov
push
imul
(bad)
xor
xchg
add
add
pmaxub
or
inc
inc
cmp
mov
mov
ins
inc
dec
pop
add
add
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
add
mov
mov
and
and
mov
das
inc
and
ins
inc
add
adc
mov
xchg
jg
jmp
mov
and
sub
mov
adc
outs
pop
and
movs
add
outs
inc
and
sub
mov
and
test
add
jmp
mov
pop
or
inc
and
je
jmp
mov
lods
(bad)
fstp
mov
sub
xor
sub
jmp
inc
add
mov
pushf
mov
xchg
pop
mov
ins
dec
and
jmp
or
add
inc
xchg
xor
cmp
add
pop
push
push
push
add
sub
in
add
add
and
inc
and
addr16
loop
push
add
add
gs
cli
mov
add
mov
dec
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
sub
add
add
mov
mov
mov
jmp
mov
mov
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ds
loope
shl
push
and
mov
push
(bad)
sub
add
stc
inc
and
inc
pop
jns
mov
popa
shl
inc
jbe
jb
inc
shr
dec
and
jg
jmp
mov
and
loopne
sbb
and
(bad)
sbb
add
jne
mov
sub
movs
inc
and
out
add
add
inc
pop
sub
hlt
mov
int
jg
jmp
mov
and
sub
mov
jbe
test
add
ds
call
jnp
mov
and
sub
xor
or
jmp
add
add
inc
add
ins
mov
retf
test
inc
cmp
pop
add
xor
xor
inc
xchg
or
inc
es
stc
cmps
loopne
ins
add
call
test
add
pop
adc
xchg
inc
sub
arpl
push
jge
and
imul
add
subps
mov
add
add
jmp
and
sbb
arpl
sub
loope
xor
and
inc
(bad)
in
mov
xor
ja
arpl
mov
and
mov
jge
pusha
xor
mov
jo
sub
cmps
out
jmp
mov
dec
sub
sub
movs
dec
ins
fsub
jns
pop
cmp
add
mov
mov
cld
test
mov
mov
cmp
icebp
and
jmp
add
add
addr16
pop
xor
pop
inc
xchg
xor
(bad)
(bad)
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
call
mov
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
sub
add
add
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
jmp
mov
jmp
mov
add
pop
pop
ret
mov
mov
mov
mov
mov
mov
call
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
jmp
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fmul
dec
sub
and
add
lea
jmp
pop
and
add
push
je
and
add
jl
enter
inc
and
movs
add
mov
add
xor
push
mov
and
add
add
push
in
addr16
mov
mov
push
aaa
and
inc
and
add
add
scas
inc
sbb
and
xor
lods
std
push
loope
mov
jl
or
xchg
add
(bad)
mov
gs
push
push
addr16
scas
(bad)
adc
loope
(bad)
je
and
jg
jmp
mov
in
push
inc
add
inc
(bad)
jg
cmp
aas
add
or
pushf
fisub
in
popf
imul
pop
dec
adc
adc
inc
(bad)
fs
psubw
mov
(bad)
xchg
les
push
adc
pop
add
inc
and
in
(bad)
push
and
and
aad
mov
es
jmp
xchg
pushf
imul
add
add
add
call
bound
fisttp
test
fadd
pop
push
les
add
and
sub
sahf
push
and
cvtpi2ps
fiadd
add
ds
add
cwde
pushf
aas
mov
cwde
icebp
test
push
std
jmp
mov
sub
cwde
loope
out
(bad)
sbb
add
jmp
mov
sar
sbb
(bad)
inc
jmp
inc
push
xor
or
inc
and
xchg
push
dec
add
and
es
mov
sub
mov
repnz
bound
enter
add
call
inc
jmp
xor
add
lds
mov
stc
cmp
inc
mov
sbb
jmp
bound
adc
mov
in
add
add
test
shr
bound
je
jmp
mov
es
push
push
add
je
dec
dec
add
add
sub
mov
sbb
test
xchg
or
call
inc
fldenv
dec
cmp
mov
fwait
test
add
pop
jmp
call
call
inc
and
je
(bad)
xchg
or
(bad)
sub
add
add
inc
jmp
fldcw
adc
es
cmovne
sbb
je
fadd
inc
mov
jmp
mov
mov
and
mov
call
mov
and
push
and
mov
mov
call
mov
jg
sub
add
cmovl
mov
enter
push
and
push
mov
add
and
mov
pop
mov
aas
add
jne
loope
je
and
aam
add
shl
(bad)
jle
adc
adc
mov
jmp
mov
mov
xchg
add
add
cmovne
nop
stos
xor
enter
push
and
cwde
mov
std
inc
addr16
adc
push
xor
cmp
inc
sar
inc
xchg
enter
add
loope
in
adc
retf
add
mov
and
add
add
repnz
mov
mov
mov
(bad)
inc
xor
cld
dec
(bad)
pop
inc
add
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
cmc
inc
dec
dec
pop
inc
mov
mov
and
mov
das
cmc
and
mov
aas
cmps
jnp
and
adc
jno
sti
data16
cmp
add
add
mov
mov
dec
test
mov
movs
pop
cwde
add
and
and
sub
jnp
and
clc
pop
inc
sub
data16
mov
pop
or
(bad)
xchg
push
fs
inc
and
mov
jmp
mov
in
cmp
loope
inc
and
mov
add
add
pop
repnz
shl
stos
loopne
mov
out
add
xchg
push
ret
sub
aas
inc
and
(bad)
sub
add
repnz
jmp
xchg
icebp
mov
jge
jl
jmp
mov
sti
fs
xchg
sbb
inc
mov
add
add
mov
inc
add
sub
call
(bad)
je
jmp
mov
push
jns
mov
loope
and
fld
pop
add
add
cmp
mov
inc
and
sub
mov
jmp
and
pushf
imul
test
add
mov
add
xchg
fcom
paddsb
add
cmp
fild
cmp
inc
push
shr
inc
loopne
sub
movs
lahf
in
bnd
jne
and
(bad)
(bad)
push
add
mov
psubb
push
add
add
pusha
stos
loopne
mov
je
jmp
mov
sub
jle
sub
or
cmovne
cli
data16
xor
add
mov
and
push
xchg
mov
ret
mov
and
xor
add
jecxz
dec
inc
and
(bad)
lds
add
sub
sti
add
(bad)
pop
cmp
in
fxch
mov
mov
sar
add
cmp
out
neg
pushf
sbb
(bad)
test
dec
ins
stos
xchg
add
dec
mov
loop
cmp
lods
add
add
(bad)
repz
pop
repnz
call
je
or
(bad)
xor
xor
inc
push
sub
shr
adc
xchg
ror
or
enter
jle
inc
cmp
ins
scas
cmp
add
add
mov
push
mov
ins
mov
loope
pop
xchg
inc
or
rol
cmc
test
adc
inc
add
rol
and
xor
mov
add
add
or
and
jmp
mov
and
dec
mov
and
mov
imul
ret
jl
and
dec
mov
add
fisttp
inc
xor
add
cmc
hlt
int
mov
and
rol
push
mov
jmp
push
inc
and
xor
lds
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jge
or
dec
sub
mov
in
dec
add
lea
test
repnz
add
and
and
daa
add
add
add
and
add
mul
sub
mov
inc
and
add
lods
add
std
dec
add
mov
push
xchg
add
call
add
or
xchg
repnz
mov
mov
test
hlt
dec
add
add
mov
mov
mov
out
daa
add
pop
test
and
test
mov
or
popf
sti
and
mov
xchg
in
test
mov
test
adc
jmp
sub
sub
mov
pop
movs
mov
lock
sub
add
lock
mov
fbld
add
pinsrw
xchg
xchg
cld
add
xlat
icebp
xchg
add
mov
add
pop
pop
lods
repz
and
add
add
add
mov
xchg
movs
mov
test
jmp
dec
test
icebp
movs
inc
xchg
mov
mov
test
ja
mov
add
and
add
enter
dec
xchg
ret
inc
pop
sub
and
mov
add
add
jmp
pop
test
and
add
push
or
push
test
mov
or
add
in
inc
and
out
add
mov
and
pop
add
ret
push
test
pop
add
add
mov
lsl
add
push
lods
mov
pop
add
sub
mov
add
add
dec
push
add
call
test
mul
inc
in
test
add
jle
and
or
jg
mov
sub
mov
jg
cmps
add
add
test
pop
lods
mov
shld
out
xchg
xor
movs
add
test
mov
pop
xchg
add
xor
(bad)
loope
add
push
add
sub
jp
and
add
and
mov
add
cmc
pop
jle
mov
sub
xor
dec
jmp
mov
add
mov
je
jmp
test
sub
mov
out
add
add
test
add
add
mov
sub
mov
retf
pop
add
add
test
jle
jmp
add
fstp
jp
in
test
inc
(bad)
and
add
jmp
and
dec
fild
push
mov
mov
je
add
jmp
dec
mov
add
mov
push
sbb
and
mov
and
add
add
and
add
lea
ret
and
inc
add
jmp
mov
xlat
test
add
sbb
adc
data16
add
add
mov
mov
and
and
add
push
scas
ret
mov
ja
or
mov
add
and
add
sub
add
bndstx
ret
jmp
les
jno
add
ret
test
and
xchg
jle
test
add
arpl
fcomp
or
retf
and
test
and
repz
mov
test
ret
add
sub
and
pop
mov
and
call
test
fldenv
mov
jg
jmp
ja
sub
jns
mov
add
add
push
test
add
add
add
mov
invd
int3
add
jmp
add
mov
lods
test
cmps
test
fld
and
add
mov
hlt
retf
sbb
dec
xchg
(bad)
and
add
jmp
mov
and
add
(bad)
in
xor
int
(bad)
pusha
add
jmp
push
test
or
mov
xor
ret
sti
add
stos
(bad)
and
add
jnp
out
add
and
pushf
mov
(bad)
test
repz
popa
add
add
sub
add
and
pop
mov
lock
ret
call
add
xor
mov
and
mov
imul
and
and
test
add
out
sub
jne
and
add
mov
shl
add
add
mov
lea
call
mov
pop
xchg
dec
test
jmp
jb
or
add
fsubp
movs
sbb
mov
invd
and
add
jmp
test
mov
mov
sbb
and
lock
add
inc
inc
or
dec
test
jb
pop
mov
cli
pusha
add
test
cld
movs
add
add
lock
ret
in
add
adc
pop
mov
dec
test
inc
add
add
and
sub
mov
out
and
push
dec
test
jmp
jge
xlat
adc
add
pop
jle
cld
je
arpl
je
test
add
sub
dec
test
in
push
fdecstp
mov
add
add
sub
mov
mov
xchg
lahf
add
jmp
mov
add
and
fadd
mul
add
jmp
mov
and
add
add
pop
dec
mov
add
add
test
add
add
jg
test
add
add
lods
inc
mov
loope
and
dec
test
(bad)
jns
mov
and
mov
sub
add
popf
scas
lock
fwait
inc
and
movs
dec
add
and
sub
test
and
xchg
out
jno
fild
movs
add
mov
mov
mov
fnstsw
xchg
lods
push
and
push
push
test
xor
ja
test
inc
add
mov
and
add
jg
arpl
jg
test
xchg
add
or
mov
add
enter
dec
or
pop
push
movs
mov
sub
xor
aam
add
add
add
add
hlt
popa
xor
sti
and
add
or
add
mov
and
cli
movs
retf
and
add
xchg
jg
jmp
jecxz
imul
stos
adc
mov
mov
pop
add
push
add
add
add
shl
jbe
mov
cmp
add
(bad)
and
add
test
mov
fidivr
mov
and
add
je
jmp
mov
and
add
mov
ds
call
fldl2t
add
mov
test
and
inc
jbe
data16
movs
mov
test
mov
mov
call
test
pushf
add
(bad)
(bad)
and
add
jmp
mov
test
add
sub
mov
and
add
pop
add
push
mov
adc
lea
mov
and
fld
imul
outs
add
jle
ja
and
mov
mov
aam
inc
div
add
add
test
test
add
add
test
and
jle
movs
arpl
cmp
add
adc
(bad)
test
or
add
rol
test
add
mov
or
je
xchg
ret
and
add
mov
sub
mov
cld
test
mov
add
add
sub
mov
test
cdq
jg
xchg
jmp
scas
test
sub
push
mov
js
cmp
push
repz
jle
test
or
dec
outs
rep
sbb
pop
add
add
add
sub
mov
pop
pop
inc
add
pushf
add
add
add
out
add
mov
sbb
add
add
lock
add
and
test
retf
cld
test
cmps
dec
xchg
cmc
test
or
inc
dec
sahf
push
jns
mov
rsm
and
call
mov
test
add
fistp
or
popf
pusha
dec
test
add
mov
mov
sub
mov
push
cmp
sub
mov
(bad)
xor
pop
retf
add
dec
xchg
push
jle
add
add
add
mov
psubusb
xchg
add
int3
es
add
shl
cmps
adc
addr16
mov
dec
cmp
loopne
mov
mov
add
sbb
pop
add
dec
or
add
ret
test
add
add
xor
add
and
add
mov
leave
fcomp
stos
mov
push
mov
mov
inc
mov
je
int3
add
add
add
push
add
add
mov
xor
mov
push
add
add
ror
in
add
mov
or
add
lock
inc
and
call
inc
in
sub
dec
sub
jne
mov
xchg
xor
add
ret
push
jg
movs
jmp
mov
mov
mov
in
and
mov
dec
and
sub
xor
mov
add
mov
push
enter
movs
cwde
fs
xor
mov
and
punpcklbw
mov
mov
jmp
mov
mov
and
add
mov
movs
mov
add
push
inc
xchg
std
(bad)
mov
mov
loope
and
dec
test
cmp
cmove
mov
xlat
add
add
stos
cmp
add
repz
mov
add
movs
arpl
push
add
mov
mov
test
cmp
sub
sub
loop
dec
ins
dec
test
jmp
dec
mov
and
mov
and
outs
hlt
add
and
std
add
or
jmp
std
add
push
add
add
and
in
test
push
out
pushf
shl
add
outs
inc
push
mov
loop
xchg
mov
rol
loopne
mov
out
(bad)
outs
cmp
cmps
pushf
retf
and
add
add
repz
mov
mov
icebp
add
and
mov
and
shl
add
and
loop
sti
and
add
add
cmps
jp
jmp
in
or
jbe
add
out
por
sbb
add
and
add
pop
mov
add
or
push
or
ret
xor
add
mov
inc
ror
out
jmp
jno
scas
adc
pop
mov
dec
add
mov
sbb
push
pusha
fadd
add
or
add
add
adc
pop
(bad)
hlt
dec
add
mov
dec
mov
retf
les
jle
mov
ja
(bad)
hlt
dec
add
ds
add
add
out
add
fnstsw
jg
lock
xor
inc
(bad)
daa
call
and
add
lods
and
movs
rol
je
sti
mov
addr16
ins
outs
xchg
pop
add
cld
dec
movs
mov
push
enter
mov
jbe
mov
scas
mov
imul
pop
(bad)
xlat
xor
cmp
cmps
pop
pop
inc
or
enter
jno
or
sub
and
pop
mov
mov
adc
mov
and
add
add
test
ret
test
(bad)
enter
cmp
add
add
add
mov
add
je
or
mov
or
dec
add
mov
add
add
out
not
call
fnstcw
inc
add
add
cmovne
mov
arpl
add
in
ret
and
sbb
add
and
inc
and
sbb
std
inc
retf
cmp
mov
cmp
pavgb
mov
jmp
add
js
mov
popf
fwait
add
jmp
mov
mov
xor
add
xchg
test
add
mov
mov
or
jl
xchg
jp
push
sbb
test
add
loope
fdiv
and
add
add
aaa
test
ret
and
(bad)
jmp
mov
(bad)
adc
add
mov
out
movs
fs
js
pop
mov
push
mov
jae
daa
dec
add
pop
and
add
test
mov
cmp
(bad)
fimul
add
push
enter
push
test
mov
xchg
cmp
add
fnstenv
daa
and
add
mov
jmp
lea
aam
add
cs
mov
inc
sub
mov
inc
and
add
and
sbb
and
sbb
add
add
mov
add
add
(bad)
loope
add
inc
and
xchg
mov
(bad)
enter
add
call
sub
xor
jno
hlt
vmovq
cmp
xchg
sub
mov
jmp
hlt
sbb
retf
stos
std
add
mov
or
add
add
add
lock
in
xchg
mov
mov
cmp
mov
retf
outs
aas
out
jle
adc
dec
add
pop
add
add
test
jmp
call
mov
and
add
add
rol
xlat
add
add
inc
and
jmp
(bad)
js
mov
push
stos
stc
jmp
add
adc
add
add
push
add
daa
sub
call
add
mov
mov
push
test
add
test
sbb
dec
add
mov
mov
lahf
mov
dec
imul
(bad)
mov
jp
addr16
scas
add
out
mov
mov
(bad)
nop
std
inc
test
popa
xor
ret
add
add
add
mov
and
add
add
test
sbb
repz
enter
add
and
add
out
lea
and
mov
in
add
test
mov
xor
test
dec
add
call
or
add
dec
jbe
mov
jne
and
jmp
xlat
cmp
add
add
cmp
sbb
and
stos
add
mov
push
adc
mov
cmp
mov
mov
rol
and
jg
cld
inc
shl
icebp
mov
and
sbb
ret
ins
dec
or
add
and
rcr
repnz
cli
shr
ds
add
add
movs
add
cmp
mov
mov
adc
leave
cmp
int3
in
add
sub
mov
ins
call
sub
or
jle
cmp
ins
xor
xchg
arpl
out
inc
and
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
scas
mov
lods
aam
inc
add
gs
push
xor
int
leave
shr
bound
and
out
add
inc
jp
mov
dec
xchg
rcl
cmp
inc
stos
mov
(bad)
dec
and
jg
test
inc
and
sub
mov
call
add
clc
add
mov
mov
mov
jg
and
add
pop
adc
sub
mov
jne
jmp
mov
int
mov
jg
jmp
inc
inc
and
in
and
pop
pop
xor
add
mov
add
add
inc
jo
pop
xchg
sub
dec
inc
push
pop
ror
add
jmp
inc
inc
inc
jo
test
and
movzx
push
inc
and
dec
retf
rcr
jb
cli
add
add
mov
dec
nop
cmps
xchg
fisttp
mov
add
mov
add
add
mov
and
sbb
add
arpl
mov
ds
out
das
mov
cmp
adc
add
add
inc
fnstenv
inc
sub
or
jnp
add
add
arpl
add
xchg
inc
and
sub
mov
cmovns
aad
fadd
add
pop
hlt
and
sub
mov
and
pmaxsw
scas
hlt
xchg
jmp
xchg
or
ds
loope
or
(bad)
icebp
fs
and
add
mov
add
pop
jnp
mov
pop
sar
adc
add
add
mov
and
in
not
sub
add
add
mov
sbb
jo
out
aas
fisttp
pushf
stos
dec
add
test
inc
and
in
stc
les
mov
invd
dec
add
(bad)
jmp
mov
sub
mov
ins
add
add
les
sub
out
(bad)
icebp
sbb
test
add
sbb
mov
add
pop
daa
mov
test
mov
add
add
jmp
jno
stc
les
mov
mov
addr16
xchg
cmp
fild
xchg
test
jecxz
dec
xor
xor
sub
dec
out
pop
repz
xor
ret
add
inc
pop
mov
je
movs
add
and
add
mov
data16
add
pop
imul
mov
movs
pop
add
mov
mov
and
and
mov
repnz
jg
add
add
add
into
aam
mov
das
push
(bad)
jmp
or
sub
push
add
inc
inc
and
jmp
mov
jmp
sar
fs
add
add
mov
mov
add
lahf
or
add
movzx
mov
add
retf
aam
div
test
add
call
add
add
mov
and
loop
div
cmps
aaa
cli
inc
xchg
push
jmp
pop
rol
test
idiv
push
and
mov
mov
mov
pop
and
(bad)
push
and
xchg
add
(bad)
mov
mov
std
cmp
fiadd
mov
cmpxchg
sbb
mov
sbb
pop
jmp
lea
sbb
push
add
loopne
(bad)
mov
adc
pop
add
add
(bad)
dec
mov
jmp
cmps
inc
and
jb
jmp
mov
add
aad
hlt
enter
sbb
add
add
or
xchg
gs
push
cmp
les
add
int3
(bad)
(bad)
(bad)
(bad)
clc
ins
and
mov
mov
sbb
and
imul
hlt
xchg
or
push
add
(bad)
inc
test
dec
add
in
jmp
inc
inc
and
cvttps2pi
(bad)
cmp
enter
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
stos
dec
or
push
(bad)
ins
test
inc
les
mov
clc
add
mov
int
rol
add
(bad)
iret
mov
add
and
add
and
test
les
add
mov
pusha
xor
dec
add
add
test
mov
fisttp
add
mov
(bad)
pop
cdq
cmp
pop
add
add
add
add
push
test
and
add
add
(bad)
jnp
fwait
add
mov
and
add
add
and
inc
test
and
add
or
adc
mov
mov
xor
xor
add
mov
add
add
pop
pop
add
xor
add
add
repz
xchg
in
or
add
and
movs
xor
mov
add
add
dec
fwait
mov
lock
push
cmp
add
xchg
pop
cmp
add
mov
test
add
clc
xchg
adc
mov
jp
and
jmp
dec
test
pop
or
outs
or
fwait
add
mov
and
add
pop
pop
add
add
ja
inc
mov
jg
jmp
mov
and
dec
add
sub
mov
jg
enter
ficom
add
sub
mov
dec
pop
add
add
add
jmp
mov
mov
pushf
jecxz
test
fiadd
add
movs
jmp
loopne
scas
sti
add
sbb
mov
clc
pop
add
(bad)
and
and
sahf
mov
and
out
and
test
test
or
add
stos
push
add
adc
lock
stos
(bad)
add
mov
fiadd
add
add
xchg
dec
pop
add
cwde
mov
add
add
sahf
dec
add
mov
cmp
sbb
xor
add
mov
add
add
add
scas
mov
mulps
or
sahf
xor
xchg
push
sbb
lds
add
mov
test
jmp
mov
pop
cmp
mov
cmp
pop
ja
lsl
aam
sahf
jmp
das
mov
and
gs
adc
test
jg
jmp
cld
test
repz
cmp
dec
movs
add
movzx
push
add
mov
pop
and
add
or
xor
and
add
add
movs
in
add
add
add
add
cwde
sub
loop
jge
fisttp
(bad)
retf
mov
add
and
fadd
mov
test
add
adc
add
add
cwde
add
movs
mov
add
xchg
rcl
and
fwait
xor
je
or
frstor
jbe
xchg
add
mov
xor
mov
(bad)
and
mov
jmp
mov
add
lock
mov
cmp
in
rcr
mov
add
jmp
adc
and
add
add
push
iret
mov
(bad)
and
in
push
add
pop
add
add
sub
mov
mov
add
stos
mov
push
mov
or
add
mov
sub
mov
sub
push
and
add
add
add
cmps
(bad)
add
sahf
je
jmp
cmp
sub
mov
jg
jmp
outs
pop
mov
sub
mov
push
movs
mov
add
mov
fucomi
sbb
xor
fnstsw
adc
in
add
adc
cwde
add
dec
add
mov
loopne
scas
and
fisttp
daa
push
or
mov
and
add
pop
add
ficomp
test
add
pop
push
test
dec
add
xchg
(bad)
and
add
in
test
pop
out
lock
sbb
cwde
add
mov
add
pop
add
mov
sub
adc
ror
enter
sahf
dec
sbb
test
xor
popf
mov
lfs
sub
or
mov
sub
push
popa
cli
push
add
cwde
movntps
add
add
add
add
frstor
add
mov
mov
rol
arpl
xchg
mov
jmp
mov
add
push
(bad)
and
add
fwait
xor
mov
add
add
sbb
and
jg
jmp
dec
test
shl
mov
mov
in
frstor
and
xchg
mov
cmp
movs
(bad)
push
and
dec
fwait
xor
mov
xor
add
mov
mov
das
jge
andps
add
add
add
push
and
in
sub
xor
jge
js
add
xchg
in
add
mov
mov
mov
cmp
inc
dec
cmp
xor
jmp
mov
std
mov
mov
mov
call
les
mov
frstor
fimul
sub
mov
packssdw
add
add
add
repz
sub
mov
and
jg
add
pop
add
dec
add
mov
(bad)
mov
add
xchg
fiadd
sub
adc
and
je
arpl
dec
add
adc
leave
mov
hlt
jp
inc
and
psllq
add
aaa
add
add
add
and
test
dec
add
jmp
mov
add
mov
or
add
mov
mov
je
repnz
mov
(bad)
rol
add
jmp
mov
add
je
sbb
mov
add
sahf
jmp
adc
and
add
(bad)
pop
mov
dec
dec
add
add
add
sub
mov
je
mov
add
and
and
lahf
add
jmp
cmp
je
jmp
mov
adc
mov
adc
inc
cdq
jne
repz
and
add
add
sahf
dec
sbb
test
add
sub
ror
jmp
pop
sub
in
mov
add
add
mov
lsl
sbb
cwde
movs
mov
pop
sub
mov
aas
cmp
push
in
ja
or
shl
add
sub
mov
xchg
test
xor
jmp
loopne
scas
and
add
sub
mov
(bad)
cmp
fld
push
fidiv
and
add
sub
mov
je
jmp
ror
and
add
sub
mov
push
hlt
rol
push
xchg
add
sahf
add
mov
ffree
mov
dec
jb
add
add
scas
shl
mov
popa
xchg
push
(bad)
nop
stos
mov
add
add
push
test
add
mov
jg
inc
cdq
add
test
ja
enter
add
xchg
add
mov
mov
mov
mov
dec
push
mov
add
add
and
sub
or
iret
dec
mov
ret
adc
add
add
fisttp
add
daa
lock
pop
ja
ret
test
cli
add
add
and
add
mov
sub
add
stos
add
fcomi
sub
adc
add
sub
jp
and
add
ja
test
ja
pushf
movs
add
mov
jge
mov
dec
jmp
xchg
mov
mov
sbb
add
or
rcl
add
cmp
mov
out
fcmovu
dec
add
add
mov
rol
jmp
pop
lods
in
xor
mov
cmp
xchg
and
cdq
movs
add
ret
ja
cmp
jge
add
mov
enter
and
pop
mov
out
rcl
jmp
cdq
movs
xor
inc
add
mov
pop
pop
out
and
mov
jmp
pop
mov
test
mov
scas
and
add
cwde
mov
push
popf
add
fnstsw
(bad)
movs
and
xchg
in
js
add
mov
dec
adc
pushf
xor
mov
int
push
add
dec
add
js
mov
mov
cdq
jge
ja
enter
in
test
and
add
push
sub
imul
ss
and
sub
add
add
mov
das
or
sar
ficomp
add
cwde
cmps
js
loop
and
add
add
push
and
add
fisttp
mov
outs
push
cdq
popa
add
ja
mov
dec
add
mov
dec
adc
cmp
add
das
xchg
push
dec
mov
pop
mov
inc
add
add
shl
add
pop
ja
xchg
cwde
movs
(bad)
mov
add
fwait
add
gs
push
std
add
add
mov
jge
add
jmp
iret
into
inc
in
ror
add
add
add
or
loop
mov
add
push
jmp
add
jb
add
mov
bound
std
mov
mov
add
push
pop
mov
pop
sbb
mov
mov
ret
adc
add
jmp
mov
ss
sub
add
lds
add
xchg
pop
add
mov
mov
lock
(bad)
mov
mov
and
add
add
and
lahf
les
xchg
xchg
ret
add
pushf
and
xor
mov
out
and
add
add
add
sub
add
test
cmovne
push
popa
cli
and
add
sub
adc
mov
pop
add
dec
fwait
movzx
mov
sub
push
test
pop
add
(bad)
repz
ins
test
test
add
arpl
push
adc
add
add
add
mov
add
mov
mov
mov
xchg
ficomp
and
cdq
add
mov
fs
add
test
xchg
add
mov
fs
fnstsw
repz
ins
sub
jmp
adc
(bad)
(bad)
hlt
pop
pop
xor
mov
mov
mov
pop
cld
lods
and
add
mov
arpl
imul
pop
jmp
(bad)
mov
and
add
pop
or
mov
add
add
add
xor
add
jge
mov
fcmovnb
iret
and
add
fwait
xor
add
fnsave
frstor
add
stos
or
dec
fild
sahf
(bad)
fld
pop
mov
and
call
test
xor
add
push
cmp
add
and
and
in
add
lahf
mov
add
add
test
add
dec
dec
fwait
add
inc
movs
mov
fnstsw
and
add
add
and
lds
add
mov
jmp
cmc
aaa
dec
and
add
ss
ret
jmp
mov
mov
or
loopne
movs
add
xor
xor
dec
fwait
mov
in
mov
call
mov
push
sub
and
lds
add
cmp
dec
faddp
dec
dec
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
and
and
add
add
mov
mov
mov
adc
std
cmp
mov
and
lods
add
out
iret
and
adc
jmp
xor
popf
add
loope
and
mov
add
retf
add
mov
and
inc
add
aas
in
dec
bound
xor
popf
push
xchg
add
add
test
add
stos
jnp
repnz
pop
das
push
push
add
add
add
std
add
add
sub
adc
and
fisttp
inc
add
add
test
add
sub
mov
jg
jmp
ss
and
push
add
sub
fild
jg
jmp
mov
inc
aas
popf
pop
iret
scas
xlat
stc
and
cmovno
add
push
(bad)
lods
add
push
fwait
nop
repz
pop
jg
jmp
mov
and
add
clc
movs
cmc
nop
dec
pop
comiss
push
lods
mov
(bad)
and
adc
add
xor
mov
add
cmps
cmps
test
sub
mov
and
dec
test
lds
aam
in
pop
cmp
mov
and
xchg
(bad)
and
add
xchg
inc
add
add
and
inc
pop
add
mov
and
paddsb
add
cmps
sub
test
sub
fwait
inc
and
(bad)
and
add
mov
mov
adc
inc
movs
ror
cmps
lds
add
mov
and
adc
mov
je
and
jl
jmp
and
dec
push
and
adc
fs
test
inc
pop
mov
push
mov
and
aam
add
fild
push
add
jp
adc
mov
sub
cmc
inc
and
paddsb
add
addr16
add
mov
ret
mov
repnz
mov
pop
mov
adc
inc
xchg
int
dec
mov
je
jmp
cmps
pop
and
inc
adc
shl
movs
adc
mov
add
add
dec
aam
stos
fld
sub
mov
pop
dec
xchg
test
add
jmp
mov
jp
mov
(bad)
pop
sub
add
jmp
jmp
mov
mov
fsubr
and
imul
jecxz
adc
sti
mov
xor
sbb
push
add
mov
adc
add
lods
add
xor
or
mov
je
and
add
add
mov
xchg
adc
sub
xchg
and
add
stos
test
mov
and
add
inc
adc
mov
xlat
mov
popf
push
add
(bad)
lods
ret
and
pushf
pop
push
add
add
add
mov
jmp
add
lds
and
add
and
push
add
jns
and
dec
mov
and
mov
xchg
pop
mov
lock
push
add
test
cmps
add
call
push
add
add
adc
sar
sub
pop
sub
xchg
fisubr
mov
add
cmps
add
fmulp
repz
adc
add
or
add
push
ins
pop
pop
mov
jmp
les
mov
add
repz
mov
adc
mov
and
add
jp
or
add
jecxz
(bad)
mov
add
pushf
pop
push
add
test
add
mov
mov
je
and
inc
pop
add
loope
popf
add
int3
dec
and
jmp
mov
mov
into
mov
gs
mov
iret
(bad)
movs
dec
jmp
mov
and
add
mov
add
cmc
add
test
add
or
jmp
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
icebp
pop
adc
dec
mov
jne
mov
and
mov
aad
jge
dec
mov
add
(bad)
ficom
add
test
jnp
xchg
inc
and
xchg
ins
sbb
xchg
cli
enter
je
dec
and
(bad)
jmp
scas
test
or
or
sub
mov
pslld
add
aaa
mov
pushf
push
sbb
xchg
inc
and
mov
lock
cmc
add
inc
and
sub
mov
push
ja
jge
pop
add
(bad)
into
inc
and
push
cmovg
adc
and
jg
mov
mov
mov
and
fcomp
add
jmp
cmp
(bad)
lods
add
add
sub
mov
in
psubsw
test
add
or
and
sub
hlt
inc
and
cmpxchg
mov
add
imul
adc
mov
push
mov
mov
int3
shl
dec
cld
popf
or
rol
add
add
and
into
out
sbb
test
add
add
inc
add
pop
ds
cmp
jle
rcr
shr
dec
add
das
add
call
popf
ret
ins
mov
cmp
cdq
dec
fwait
mov
jmp
ret
mov
leave
push
jb
je
or
add
add
jmp
mov
mov
into
push
and
cmp
cmovb
and
jmp
mov
dec
adc
cli
push
adc
push
or
mov
and
movzx
mov
and
mov
psllq
aaa
dec
into
and
aas
je
inc
or
inc
mov
das
test
add
inc
sub
ffree
fisub
push
repnz
fucomi
push
sbb
add
jmp
mov
inc
aam
lock
add
into
shl
inc
cmps
inc
into
mov
les
add
sbb
inc
lods
push
add
ret
lahf
fmul
pop
add
lock
hlt
pop
pop
scas
sbb
mov
sbb
(bad)
jmp
pop
inc
add
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
jnp
or
inc
test
fidivr
mov
mov
push
add
xchg
cld
pop
loopne
xchg
ror
mov
push
fprem
and
retf
dec
and
pop
(bad)
fstp
dec
rcr
lods
inc
cmps
and
bound
in
inc
adc
mov
jmp
leave
enter
push
sti
fiadd
mov
and
minps
add
daa
jmp
mov
sub
mov
cli
je
add
add
mov
and
sub
mov
add
push
int3
add
rol
(bad)
jae
push
add
test
sbb
xlat
aam
add
jmp
mov
sub
mov
pop
call
add
mov
and
fcom
enter
hlt
mov
scas
add
push
arpl
scas
sbb
adc
test
add
xor
jmp
enter
idiv
popf
push
add
sub
add
pslld
inc
and
sbb
add
lock
add
movs
pop
push
add
daa
and
inc
add
rol
movs
ret
xor
or
cmp
inc
retf
shl
addr16
add
repz
add
add
mov
jmp
mov
jmp
xor
pop
push
add
add
pop
and
mov
mov
add
pushf
add
mov
imul
lahf
inc
and
(bad)
popa
cmc
cmp
xchg
fimul
add
mov
lea
rol
jmp
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
mov
call
mov
mov
add
mov
mov
mov
mov
mov
call
sub
mov
add
pop
ret
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
lds
mov
or
push
enter
cmp
sbb
mov
mov
or
and
add
add
data16
add
call
(bad)
(bad)
nop
add
(bad)
jg
mov
mov
mov
mov
pop
test
xchg
add
pop
js
jmp
popa
test
add
jg
and
sbb
or
add
add
add
and
add
or
push
psraw
call
add
push
sub
mov
and
unpcklps
rol
repz
pop
mov
sbb
mov
or
in
and
mov
add
add
pop
imul
mov
dec
adc
ret
repz
add
add
add
mov
xor
in
addr16
add
add
add
pusha
mov
sub
jo
pop
and
je
jmp
mov
cdq
push
leave
mov
jnp
pop
add
add
xchg
test
xchg
xchg
dec
mov
cmp
mov
push
add
add
test
pop
loop
ret
(bad)
and
and
add
ror
add
and
leave
jle
mov
add
(bad)
jmp
imul
mov
inc
and
xchg
dec
and
cwde
add
add
xor
jl
and
add
mov
mov
rcr
popa
jmp
mov
cmp
int
push
mov
push
jg
fiadd
sbb
pushf
mov
and
add
add
cmps
inc
and
(bad)
xchg
add
ja
mov
add
arpl
and
add
jne
enter
inc
pusha
ror
mov
add
xor
add
dec
xchg
sub
mov
fnstenv
pop
add
add
loop
pop
popa
shl
mov
add
lock
mov
unpcklps
add
cwde
jmp
pop
leave
and
xchg
add
sub
inc
in
pop
add
call
pop
jge
and
add
add
adc
or
adc
sbb
jmp
mov
loop
test
lods
or
inc
and
outs
(bad)
push
test
cmc
add
add
test
fwait
add
in
mov
push
out
adc
adc
add
cmp
loop
mov
mov
sub
rcr
inc
add
mov
outs
cli
dec
test
(bad)
mov
call
add
sub
xchg
inc
and
je
jmp
mov
xchg
neg
cmp
repz
add
add
xchg
add
mov
add
add
or
add
add
ins
add
add
sbb
mov
cmp
and
mov
or
ja
add
add
add
add
and
adc
inc
scas
sbb
add
scas
xor
add
test
bound
cmp
jmp
jge
and
push
sbb
lods
ins
fistp
mov
inc
and
adc
pushf
jmp
jmp
add
imul
add
(bad)
xchg
shr
mov
cmove
xchg
sbb
mov
sbb
jmp
mov
hlt
xchg
inc
ret
or
mov
pop
add
popa
add
sbb
mov
and
add
add
or
inc
nop
addr16
mov
add
jl
cwde
xor
mov
and
add
add
inc
xlat
add
call
dec
dec
jmp
lods
retf
adc
call
dec
and
add
cwde
mov
add
mov
pop
std
push
or
in
mov
call
into
dec
jecxz
fdiv
adc
shl
add
cmp
add
imul
or
cmp
loop
xchg
mov
popa
pop
mov
mov
pop
and
add
add
and
repnz
mov
sbb
mov
jmp
add
mov
jmp
fild
dec
xchg
sar
add
mov
mov
add
jmp
mov
mov
mov
cmp
add
add
sbb
mov
sbb
pcmpgtb
mov
dec
mov
xchg
push
and
jmp
and
popa
add
pop
not
inc
test
test
mov
add
jno
xor
add
or
add
pop
add
push
sub
push
popa
pop
in
xchg
out
mov
or
push
movs
hlt
pop
inc
pop
(bad)
sahf
and
neg
jmp
adc
loop
add
pop
(bad)
in
mov
pop
add
(bad)
jp
call
in
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
sbb
mov
inc
add
mov
sti
je
ins
push
sbb
mov
push
mov
mov
cmp
and
push
and
jno
and
mov
and
call
inc
inc
jp
stc
dec
pop
adc
ret
inc
mov
dec
and
addr16
and
call
sbb
pop
pop
push
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
call
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
or
and
pop
and
mov
(bad)
and
lds
and
and
add
add
(bad)
and
xchg
arpl
add
dec
push
inc
add
add
add
sub
push
add
leave
and
adc
xchg
or
add
jno
xchg
arpl
str
mov
and
mov
and
loop
and
fstp
outs
cmp
ror
push
xchg
sbb
dec
and
jg
mov
hlt
add
mov
sub
pop
inc
and
psubd
mov
and
add
jne
addr16
sbb
push
inc
and
fwait
in
sbb
jno
add
mov
cmp
int
xor
dec
retf
jmp
mov
imul
inc
and
jg
ja
pusha
jle
add
cdq
shl
shr
push
movups
add
loopne
cmp
add
or
sub
cli
sbb
sbb
(bad)
and
sub
xchg
psraw
add
add
add
(bad)
mov
test
js
dec
add
jmp
cwde
and
add
mov
mov
(bad)
push
xor
add
add
xchg
and
add
popf
adc
mov
and
call
push
(bad)
xor
and
mov
add
mov
cmc
lds
inc
mov
sub
sub
sbb
ret
pop
add
jno
(bad)
(bad)
sub
mov
add
mov
mov
inc
xchg
cdq
mov
data16
ror
or
inc
push
push
mov
mov
mov
xchg
ror
add
hlt
dec
mov
lea
inc
add
or
gs
mov
popa
rol
shr
test
sbb
pop
inc
add
test
scas
add
(bad)
inc
and
mov
(bad)
inc
and
cmp
sbb
lods
mov
mov
pop
ror
sub
enter
sub
xchg
xor
mov
add
add
in
mov
out
cmp
loop
xor
xor
add
mov
mov
push
push
add
dec
test
sbb
add
add
xchg
out
jl
inc
xchg
mov
or
pop
sahf
add
lahf
rol
and
xchg
push
and
mov
mov
(bad)
rol
sbb
and
mov
jne
or
add
(bad)
push
and
lea
ret
mov
loop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
mov
mov
pop
jne
add
add
sbb
sub
mov
mov
inc
jge
push
mov
mov
loop
push
xor
shl
dec
aas
sub
(bad)
sbb
add
add
mov
or
fcom
lea
xchg
and
je
jmp
or
sub
mov
and
(bad)
int3
add
add
pop
retf
and
sub
mov
fisttp
mov
push
retf
add
add
js
les
pop
dec
(bad)
add
inc
add
sub
mov
mov
je
jmp
mov
movs
int3
sub
mov
add
lods
retf
out
adc
or
test
lds
add
sub
xchg
inc
add
or
add
jmp
pop
and
sub
inc
push
addr16
out
mov
mov
ss
pop
(bad)
mov
stos
push
out
add
mov
rol
add
and
inc
mov
adc
mov
stos
cmp
je
inc
pop
not
shr
inc
out
add
mov
push
xor
push
pop
pop
std
call
cmp
hlt
dec
add
add
add
dec
add
retf
or
adc
les
mov
std
inc
stos
push
test
movs
and
add
add
dec
hlt
sbb
cvtdq2ps
push
hlt
dec
add
adc
aas
mov
add
jmp
nop
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
mov
(bad)
fs
mov
call
and
mov
add
repnz
add
(bad)
and
sub
mov
xchg
rcr
or
popa
mov
mov
add
mov
add
and
add
test
mov
lods
adc
push
fdivr
mov
test
adc
and
or
mov
imul
es
test
test
add
add
adc
push
add
add
mov
call
mov
stc
and
and
or
adc
stc
test
adc
add
add
add
in
mov
retf
mov
nop
or
adc
(bad)
add
sub
add
add
xchg
call
adc
add
(bad)
jmp
and
sub
mov
inc
(bad)
sbb
mov
cdq
adc
and
add
call
out
mov
add
test
inc
add
or
mov
add
pusha
and
loop
mov
and
jmp
mov
sub
mov
pop
add
add
add
mov
pusha
es
mov
js
hlt
xlat
add
sub
add
pop
mov
or
je
jmp
add
es
test
or
mov
mov
cld
push
and
mov
je
jmp
mov
popf
add
mov
add
add
add
add
pusha
push
xchg
mov
psraw
out
call
lea
popf
add
add
mov
(bad)
sub
add
clc
push
add
cmp
adc
mov
inc
and
jmp
lock
add
inc
xchg
test
pop
push
cdq
(bad)
mov
jg
pop
add
jo
mov
sub
mov
aad
add
mov
sub
add
fstp
dec
mov
jmp
cmps
test
add
add
iret
mov
je
push
add
add
add
sub
mov
and
jg
jmp
mov
jns
inc
pop
jns
add
pop
dec
nop
add
inc
and
sub
(bad)
repnz
pop
(bad)
or
in
add
mov
lea
xor
mov
sub
mov
test
dec
mov
sub
cdq
imul
in
jmp
mov
and
xor
sub
dec
sub
add
adc
mov
and
add
add
jb
sbb
and
lea
jmp
mov
or
lods
or
push
test
sub
fwait
test
add
mov
sub
add
xor
add
mov
add
jnp
pop
cmp
pop
pop
test
add
or
call
and
xor
cs
mov
dec
test
add
or
adc
dec
mov
cmp
mov
paddw
call
add
(bad)
fs
cmp
inc
xor
je
shr
add
add
add
push
mov
je
fs
popf
out
test
add
add
or
and
in
cs
test
adc
ins
add
mov
and
sub
(bad)
test
es
stc
or
ss
sub
mov
jne
ins
loope
xor
add
test
mov
push
inc
and
cmp
push
add
mov
test
add
sub
mov
push
add
popf
jmp
jmp
jmp
xor
mov
(bad)
xchg
and
add
mov
cli
add
add
sysexit
ror
add
jmp
mov
add
pop
lods
add
add
mov
and
xor
setne
(bad)
fimul
push
mov
adc
call
add
outs
cmp
(bad)
adc
add
mov
hlt
xor
add
mov
call
mov
lea
mov
ret
push
add
arpl
add
cmp
jmp
mov
add
and
xor
jns
ja
es
mov
mov
pop
push
adc
std
inc
xor
mov
add
lea
out
cmp
(bad)
enter
mov
cdq
mov
gs
add
in
dec
mov
call
(bad)
es
add
ret
inc
rol
add
(bad)
leave
and
mov
adc
sti
add
shl
bound
mov
add
sub
ror
ss
xchg
test
mov
adc
(bad)
gs
and
xor
scas
jmp
lods
test
or
add
add
add
leave
xchg
mov
xchg
and
sub
mov
in
arpl
mov
hlt
sbb
lods
(bad)
fs
loop
jmp
mov
les
mov
jns
pop
inc
xor
int3
push
mov
out
mov
add
fs
ret
mov
adc
push
mov
and
add
cmp
pop
pop
pop
dec
ret
(bad)
test
call
fidivr
and
dec
add
sub
add
add
sbb
add
test
add
sub
or
retf
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
jmp
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
cmp
cmovb
mov
jmp
mov
jmp
lea
mov
imul
add
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
lea
mov
imul
add
mov
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
add
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
add
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
jmp
mov
jmp
lea
mov
add
mov
call
mov
mov
add
mov
mov
mov
shl
mov
add
shl
add
mov
mov
mov
shl
mov
mov
shl
add
mov
add
shl
add
mov
mov
sub
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
cmp
cmove
mov
jmp
mov
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
jmp
mov
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
add
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
add
mov
mov
mov
add
add
sub
mov
mov
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
jmp
mov
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
add
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovb
mov
jmp
mov
jmp
mov
mov
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
jmp
mov
jmp
mov
add
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
shl
add
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
mov
jmp
mov
jmp
mov
mov
mov
mov
cmp
cmovb
mov
jmp
mov
mov
mov
mov
movzx
mov
mov
add
mov
mov
movzx
xor
mov
mov
mov
mov
mov
mov
movzx
cmp
cmove
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
add
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
jmp
mov
add
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
mov
mov
mov
mov
mov
mov
call
mov
lea
lea
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
sub
mov
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
jg
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
mov
sub
mov
je
jmp
jmp
mov
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
shl
sub
add
add
shl
mov
call
mov
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
call
mov
mov
cmp
cmovne
mov
mov
jmp
mov
shl
mov
call
mov
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
mov
jmp
mov
jmp
lea
mov
mov
add
sub
sub
mov
mov
mov
mov
jmp
mov
mov
jmp
mov
cmp
sete
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
mov
mov
cmp
cmova
mov
jmp
mov
mov
mov
jmp
lea
mov
mov
add
mov
mov
mov
call
lea
mov
mov
sub
add
add
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
mov
mov
jmp
lea
lea
lea
cmp
sete
and
movzx
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
add
mov
mov
mov
sub
add
mov
mov
mov
add
mov
cmp
cmove
mov
jmp
mov
mov
mov
mov
cmp
cmova
mov
jmp
mov
mov
mov
jmp
lea
mov
mov
add
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
add
sub
sub
mov
mov
mov
cmp
cmova
mov
jmp
mov
mov
mov
jmp
mov
mov
jmp
mov
lea
mov
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
jmp
mov
mov
jmp
mov
mov
jmp
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
jmp
mov
mov
cmp
cmovne
mov
jmp
mov
mov
call
mov
jmp
mov
mov
jmp
mov
cmp
setne
and
mov
mov
jmp
mov
mov
mov
test
cmovne
mov
jmp
mov
mov
call
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
mov
mov
shl
mov
sub
mov
sub
add
sub
shl
mov
call
mov
mov
jmp
mov
jmp
mov
jmp
mov
mov
jmp
mov
jmp
lea
mov
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
loop
out
mov
mov
and
(bad)
push
and
pusha
xchg
mov
sub
in
inc
and
mov
push
int3
pop
add
add
mov
xor
mov
sub
mov
and
jg
inc
add
add
popa
inc
cmp
sub
mov
and
adc
sbb
add
and
sub
loop
out
add
test
add
popa
pop
mov
sub
in
pop
and
inc
(bad)
sbb
add
inc
cmp
add
mov
inc
and
pxor
js
scas
call
inc
and
sub
and
cdq
mov
add
sbb
mov
lods
dec
sub
iret
mov
loopne
test
sldt
add
and
cmp
jmp
out
sub
sbb
cmp
outs
ret
mov
je
fisttp
add
imul
mov
arpl
add
test
add
add
sbb
push
pop
push
add
mov
jnp
and
cli
mov
jecxz
fldl2t
cwde
sbb
and
add
add
inc
inc
sub
mov
add
add
jge
or
loop
popa
cmp
cli
in
add
inc
and
mov
rcr
sbb
push
retf
mov
sub
mov
sbb
daa
cli
mov
mov
mov
xor
push
in
add
mov
lea
pop
pop
pop
icebp
cli
add
(bad)
and
inc
and
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
(bad)
aam
adc
mov
js
inc
and
mov
and
or
addps
add
pop
add
fs
ja
mov
add
test
add
dec
out
inc
call
stc
js
jae
je
push
loopne
add
mov
mov
and
xor
nop
repz
shr
and
jmp
mov
(bad)
jmp
xchg
pop
push
add
fidivr
xor
mov
(bad)
clc
icebp
pop
cmp
jecxz
shl
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rol
add
mov
sbb
pop
or
mov
mov
data16
pop
xchg
and
add
and
mov
add
add
sub
sub
(bad)
gs
cmp
xor
pop
add
fadd
jmp
fadd
lds
fistp
mov
mov
mov
inc
push
test
addr16
mov
test
test
mov
xchg
push
inc
and
sub
pop
inc
and
ds
and
add
add
movs
cmc
and
sub
cld
inc
int3
inc
jg
pop
js
add
nop
mov
pop
sbb
(bad)
sbb
cmp
aam
pop
adc
jmp
dec
add
daa
add
and
dec
fnsave
inc
sub
or
and
je
jmp
mov
sub
add
test
add
xchg
or
mov
cwde
xor
inc
and
je
jmp
jmp
mov
mov
sub
ror
add
add
cmp
and
int3
adc
add
loop
rcr
add
dec
add
and
inc
add
mov
mov
mov
pop
add
cld
rol
mov
xchg
and
inc
add
mov
jg
cmps
std
and
xor
push
int3
push
in
xchg
and
inc
add
push
pop
dec
add
mov
and
(bad)
ins
mov
lock
add
(bad)
imul
test
shl
rcl
xor
mov
mov
and
cmp
lods
cmp
adc
fldcw
stc
nop
nop
mov
jmp
sbb
and
(bad)
push
movs
mov
add
mov
mov
and
sub
sub
dec
imul
int3
mov
lea
ret
lea
mov
mov
push
mov
xchg
and
inc
add
mov
mov
(bad)
push
jl
mov
inc
(bad)
or
sub
add
sub
gs
mov
aaa
bound
mov
mov
cmp
scas
popa
jge
lock
add
cmp
xor
add
mov
and
inc
add
inc
add
add
mov
and
push
pop
rcl
ins
div
fdiv
not
std
or
cld
movs
and
call
int3
inc
and
mov
jg
jmp
nop
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
out
mov
fist
add
add
push
and
hlt
lock
mul
xchg
mov
adc
aaa
jecxz
dec
mov
add
adc
and
sub
mov
sbb
cmc
jg
add
add
mov
repnz
mov
movlps
add
in
or
dec
mov
xor
(bad)
sbb
add
jle
adc
sub
or
lods
std
test
pop
mov
in
sub
mov
(bad)
fld
add
xchg
add
xor
int3
int3
cmp
dec
add
popa
add
mov
mov
mov
ss
add
cmp
xchg
mov
mov
jae
call
add
mov
popa
shr
adc
fiadd
add
not
add
mov
sub
(bad)
push
sbb
popa
cdq
add
mov
popf
repnz
push
push
and
mov
cmps
aam
mov
iret
test
and
add
xor
sub
mov
jno
fwait
xchg
jo
jecxz
mov
add
inc
(bad)
inc
sub
mov
sbb
out
mov
add
and
inc
mov
inc
mov
jns
jns
push
add
das
pop
popa
add
adc
and
sbb
mov
add
sub
inc
cmc
aam
add
popa
xchg
push
xchg
add
mov
add
mov
mov
mov
push
xchg
cmp
ror
ss
scas
xor
dec
mov
(bad)
adc
lods
mov
add
add
inc
lods
dec
or
pop
push
mov
mov
jmp
and
pop
inc
xor
rol
add
mov
add
cmp
es
hlt
lock
cli
lea
xchg
gs
pop
pop
ins
pop
ret
scas
inc
and
mov
dec
ins
jmp
fild
add
mov
push
xor
inc
or
xchg
mov
call
in
push
push
and
sub
jmp
call
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
in
js
mov
adc
cs
mov
mov
outs
dec
xchg
push
and
inc
mov
mov
mov
push
mov
xor
and
xchg
push
and
imul
lods
mov
pop
shr
mul
and
out
jno
xor
add
add
dec
scas
rcr
ror
fcom
mov
and
sbb
inc
pop
add
add
sub
dec
and
sub
push
sub
scas
dec
sbb
push
dec
cmp
push
and
mov
jmp
add
mov
outs
mov
and
jg
mov
mov
mov
not
push
pop
movs
paddusb
add
push
dec
imul
repz
inc
and
je
jmp
mov
and
data16
lods
inc
inc
and
je
outs
add
add
push
and
sub
fiadd
or
aaa
pop
add
sbb
push
ret
sub
outs
or
sub
sbb
jmp
mov
push
xor
pop
clc
push
push
mov
je
jmp
mov
and
lods
sbb
loope
and
push
add
pop
movs
dec
scas
rcr
jecxz
sub
adc
and
cmp
inc
add
add
push
ret
jp
jne
mov
outs
push
and
repnz
jns
inc
add
add
inc
xor
mov
and
daa
add
jmp
scas
inc
stos
cmp
add
mov
ret
add
cmp
pushf
mov
jne
push
rol
inc
repnz
jmp
(bad)
and
and
(bad)
dec
jae
mov
mov
cs
outs
inc
mov
cmp
add
add
sti
dec
mov
cdq
mov
add
mov
inc
cmp
inc
and
les
ret
add
ror
sbb
out
xor
push
add
add
mov
in
call
mov
rcr
mov
jmp
sti
fbld
lea
dec
pop
pop
outs
ret
jmp
nop
push
mov
push
push
push
and
sub
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
cmp
cmp
test
pushf
add
ror
movs
xchg
and
add
in
mov
inc
xor
mov
cmc
sbb
imul
call
add
add
jg
jmp
mov
add
mov
and
xor
dec
jnp
push
pop
pop
add
adc
mov
add
shl
mov
retf
lsl
add
dec
popf
cmc
add
add
add
ja
or
mov
and
xchg
add
jne
retf
xor
sub
mov
sub
jmp
mov
sub
mov
lds
push
xor
dec
push
mov
add
push
out
pop
mov
and
repnz
xchg
xor
retf
xor
or
jg
mov
nop
and
mov
sbb
mov
cmovne
mov
add
(bad)
mov
add
ja
cmp
mov
or
test
add
fadd
jns
add
test
xor
fsubr
jbe
sar
sub
add
jmp
mov
add
mov
jg
jmp
push
(bad)
pop
add
mov
gs
and
movups
xor
mov
add
cmc
add
sar
and
sub
jmp
mov
and
xor
add
(bad)
cmp
mov
test
test
add
sbb
pop
pop
std
mov
sub
xchg
inc
mov
movsx
mov
fmul
je
mov
jle
pop
std
nop
sub
mov
setg
in
add
dec
and
add
mov
inc
jg
jns
sub
shl
and
add
xor
inc
inc
mov
ds
out
add
add
dec
pop
add
test
sbb
and
sub
xchg
inc
mov
mul
retf
xor
add
shl
ret
add
je
and
and
sbb
jmp
mov
add
sub
mov
adc
add
add
add
pop
mov
scas
add
sub
xchg
rcl
xor
mov
js
retf
add
add
dec
add
repz
mov
pmullw
nop
add
retf
rol
test
xchg
add
pop
mov
jbe
xlat
mov
add
add
ror
pop
jl
mov
sub
and
add
in
sbb
jns
mov
jbe
mov
mov
test
xlat
nop
and
cmps
test
in
sbb
mov
mov
xor
add
jle
jle
add
shl
iret
mov
xor
test
add
rol
mov
mov
sub
mov
inc
lock
add
fadd
add
jbe
and
add
and
daa
test
enter
sbb
add
jmp
mov
jns
call
and
jnp
xchg
add
or
add
sar
mov
add
push
jl
jb
pop
test
pushf
movzx
add
add
xor
test
jns
retf
xor
js
enter
mov
je
add
pop
add
rol
sub
stos
sub
punpckhbw
xchg
xor
fadd
add
add
mov
mov
inc
push
(bad)
iret
mov
and
sub
in
adc
ror
add
fs
add
mov
jl
mov
and
cmc
add
mov
cwde
add
repnz
inc
in
mov
add
mov
mov
and
mov
mov
mov
add
cmc
mov
lds
push
mov
jbe
and
and
sub
pop
and
dec
jle
lock
mov
into
push
nop
cmc
dec
pop
mov
xchg
and
mov
jmp
mov
test
add
je
jbe
int
mov
and
pop
std
add
sub
sbb
add
and
icebp
pop
and
mov
mov
je
sbb
dec
pop
pop
mov
mov
xchg
and
add
add
push
xor
inc
lock
jmp
dec
test
dec
add
add
(bad)
jno
retf
std
jl
into
push
jmp
(bad)
push
add
xor
fst
jo
adc
out
icebp
cld
jmp
jbe
pop
mov
in
sbb
add
mov
test
add
sar
mov
test
in
sbb
mov
mov
jmp
int3
shr
and
nop
and
lds
sbb
mov
mov
add
jno
fiadd
add
jg
std
add
and
sub
add
jbe
je
add
pop
mov
xchg
add
lea
rol
mov
mov
jle
push
add
pop
repnz
add
fwait
test
cmp
cmovl
lock
pop
add
dec
add
in
ds
popf
fcompp
add
and
or
xor
jns
dec
and
mov
xor
je
mov
cmp
stc
(bad)
dec
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sbb
dec
adc
push
inc
mov
mov
mov
sbb
add
add
jmp
(bad)
and
dec
add
mov
add
and
add
add
test
adc
ins
fwait
add
xchg
test
add
push
fld
add
nop
push
or
add
(bad)
(bad)
call
mov
add
and
call
int
and
dec
add
xchg
test
add
add
sbb
add
test
mov
fst
rol
mov
mov
bswap
and
add
mov
sub
push
call
test
add
jmp
fld
hlt
jmp
test
pop
push
dec
jmp
mov
mov
lea
and
add
add
pop
mov
xchg
add
add
push
add
push
nop
push
sub
add
and
cmp
add
ret
xchg
sbb
ficomp
lods
fcomp
add
push
add
add
mov
sub
les
xchg
add
mov
in
add
add
add
add
test
inc
add
mov
div
mov
sti
(bad)
or
add
jmp
cdq
test
fwait
add
or
mov
add
(bad)
(bad)
jnp
xor
sbb
and
add
add
fcmove
mov
sbb
idiv
fiadd
cdq
test
fwait
jp
cs
add
test
mov
mov
(bad)
xchg
add
add
inc
push
sub
xchg
test
je
add
ficom
jmp
fld
cmp
hlt
or
call
add
iret
xlat
ins
mov
add
add
repz
pushf
and
ror
jmp
mov
sub
ficomp
ror
aas
cs
add
iret
test
add
sub
mov
mov
clc
fadd
add
add
add
mov
sub
mov
and
jg
jmp
lahf
mov
pushf
add
mov
out
inc
and
cpuid
js
add
add
xor
sar
dec
push
add
sub
jmp
mov
mov
sub
mov
ja
jbe
jmp
mov
ficom
add
mov
daa
or
test
add
fldl2t
add
add
add
out
pop
ins
pop
adc
xor
call
add
pop
sbb
sbb
add
sbb
gs
cs
imul
fistp
fdivrp
xor
add
add
sub
mov
and
push
xlat
fs
add
mov
add
xchg
and
je
jmp
and
fst
sub
xor
and
je
jmp
mov
sub
mov
adc
dec
xor
cli
mov
lea
xor
mov
and
and
push
loop
aam
push
add
mov
int3
mov
scas
add
add
mov
mov
add
mov
sub
or
(bad)
test
mov
and
add
add
dec
das
or
and
pop
push
add
mov
fadd
fwait
add
mov
or
(bad)
nop
je
add
jmp
in
push
inc
hlt
push
add
mov
div
mov
sub
jo
aaa
fcomp
jmp
mov
sub
mov
or
or
out
add
adc
xor
pushf
mov
fisubr
and
inc
and
je
sbb
xchg
pop
ss
add
inc
outs
xor
sub
test
xor
add
mov
test
(bad)
jmp
and
add
sbb
add
cmove
mov
adc
adc
add
pop
test
push
add
mul
fcmovnu
add
mov
mov
fs
add
add
xchg
xchg
or
add
mov
ficom
add
scas
and
push
pop
add
dec
jb
(bad)
popf
xor
mov
test
mov
add
retf
hlt
mov
jne
adc
add
ficom
add
mov
add
add
or
add
cmp
mov
out
lock
add
pop
pop
cli
push
ins
add
or
inc
xor
call
mov
fimul
loopne
xor
cmp
mov
sbb
jae
and
sbb
retf
and
mov
fld
push
data16
adc
mov
jmp
mov
pop
jmp
mov
jnp
gs
push
lock
fisubr
mov
mov
fdivr
stos
add
ins
fwait
mov
mov
sub
fdiv
mov
xor
fdivr
shr
add
mov
mov
mov
mov
(bad)
pop
xor
pop
sub
or
add
add
mov
jmp
and
sahf
dec
out
ja
or
add
xor
rcr
inc
mov
add
lods
int3
push
dec
add
mov
adc
ficom
ins
mov
mov
call
mov
mov
mov
pop
mov
test
add
or
dec
mov
mov
lea
pop
pop
pop
pop
aaa
(bad)
cmp
ins
add
fidiv
jecxz
jb
add
mov
mov
enter
mov
enter
mov
xor
and
add
add
and
rcr
test
out
(bad)
push
xor
add
mov
test
mov
ins
ja
push
add
add
shl
add
mov
jmp
and
add
add
inc
and
jmp
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
iret
jns
push
mov
sahf
pop
mov
or
dec
icebp
jo
add
mov
xor
mov
mov
mov
(bad)
cmps
and
xchg
add
or
(bad)
push
or
mov
lods
add
mov
and
ds
sbb
in
xor
test
mov
adc
test
add
add
ror
sbb
and
scas
mov
pop
add
loop
(bad)
and
add
dec
add
sbb
mov
out
fist
add
add
test
push
push
add
and
loopne
sbb
call
add
in
add
add
xchg
add
ds
mov
lock
pushf
cmps
and
enter
dec
imul
es
add
and
scas
mov
loope
mov
bswap
push
push
cmp
jmp
xchg
test
cmp
add
sub
mov
jg
jmp
push
test
sub
mov
sbb
add
jg
cld
and
movs
test
add
sbb
popf
sbb
add
dec
mov
out
mov
adc
cmp
retf
jl
lods
pusha
mov
cvtps2pd
push
add
add
add
or
mov
mov
imul
fsub
add
add
shl
add
ins
adc
and
adc
test
in
or
add
test
add
mov
and
add
iret
add
mov
and
adc
fmul
imul
retf
cmps
ds
mov
jmp
xor
gs
mov
cmp
add
or
jmp
mov
mov
mov
mov
push
cmp
lock
mov
add
adc
or
retf
cld
or
add
add
pop
add
cmp
add
sub
int
and
cmp
cmp
sbb
cld
xchg
mov
add
cmp
sub
jne
jnp
cmp
test
add
mov
add
cmp
loop
pushf
push
sub
and
test
pushf
das
(bad)
data16
cmp
sub
test
pop
or
inc
mov
sub
xchg
test
in
adc
add
pop
test
retf
add
add
and
add
pop
call
and
add
es
jmp
mov
cmp
add
xor
mov
punpcklbw
or
jmp
rol
mov
xor
mov
adc
retf
test
enter
sbb
push
mov
mov
inc
cmp
pop
add
add
mov
add
mov
fiadd
les
cmp
inc
cmp
jo
pop
lahf
sub
sub
retf
out
add
xlat
sub
inc
retf
and
es
je
jmp
test
adc
in
mov
aam
sub
mov
add
add
test
cmp
add
sub
mov
loopne
(bad)
(bad)
aad
rcl
add
add
or
sub
movs
in
data16
sbb
and
lods
cmps
retf
and
add
aad
test
add
push
rol
inc
xor
retf
add
adc
add
xchg
add
(bad)
test
cmp
icebp
mov
xlat
and
add
jmp
xor
adc
daa
cmp
adc
add
cmps
dec
retf
or
or
add
add
test
add
xchg
mov
or
add
inc
add
test
cmp
add
sub
mov
jg
jmp
mov
mov
sub
int
inc
dec
add
sub
out
add
add
sub
mov
add
add
add
out
xchg
sbb
sub
or
out
dec
add
or
pop
jmp
mov
adc
add
add
retf
test
add
or
cmp
aad
jne
scas
popa
xor
add
jmp
and
adc
enter
in
dec
xor
add
push
(bad)
sbb
lods
mov
sbb
cmp
push
test
sbb
adc
add
add
dec
icebp
adc
add
or
aam
cmp
jg
dec
sbb
add
mov
and
mov
or
add
jg
mov
add
add
and
scas
add
dec
mov
sub
add
add
test
fs
cmp
sub
push
data16
add
and
jmp
push
dec
retf
cmp
add
and
sub
(bad)
push
lods
add
add
mov
js
add
sub
imul
add
and
(bad)
ja
test
jmp
mov
sub
mov
bndldx
push
lods
mov
inc
mov
gs
cmps
push
inc
adc
add
inc
inc
retf
shl
mov
scas
add
xchg
pop
xor
aaa
mov
and
add
loop
(bad)
fild
add
and
dec
retf
mov
xchg
xchg
stc
add
add
loop
sbb
test
test
sub
data16
mov
(bad)
and
pop
add
xchg
add
daa
test
add
add
mov
add
test
sldt
icebp
pop
or
adc
enter
lds
in
adc
btr
add
jmp
sub
cmp
xchg
ret
cmp
out
add
add
mov
popf
add
mov
popf
cmp
add
or
push
or
and
sbb
cld
and
add
push
dec
retf
mov
adc
mov
xchg
lods
mov
add
aad
bound
loop
test
pop
and
sub
or
out
push
out
or
pop
and
add
rol
mov
daa
test
sub
mov
loop
pushf
xlat
pop
and
jmp
mov
sub
mov
xchg
add
and
add
add
sub
cmp
iret
jp
stos
add
stos
add
or
add
pop
add
mov
add
jae
test
add
inc
jg
mov
loop
sbb
retf
(bad)
cmp
pop
test
add
pop
rdpmc
lock
es
mov
mov
int
test
add
adc
out
sub
add
aad
fcom
sub
scas
test
cmp
push
sbb
jmp
fs
cmp
add
add
mov
mov
add
add
add
imul
dec
inc
imul
add
push
lods
mov
add
sub
imul
sub
adc
add
add
add
out
add
test
cmp
aad
sub
mov
add
add
aad
arpl
mov
add
and
inc
test
aam
pop
mov
es
mov
adc
jle
xchg
cmps
xor
test
lds
inc
push
add
dec
icebp
adc
add
jp
fimul
xchg
add
and
cmp
add
mov
shrd
and
out
or
lods
ins
mov
mov
sbb
loop
xor
mov
lds
add
add
test
xchg
jnp
ss
mov
xor
imul
out
lods
(bad)
leave
rol
mov
cmp
add
mov
add
add
es
in
or
and
out
add
pop
mov
sbb
and
add
add
mov
add
mov
add
and
add
and
or
clc
adc
fs
mov
je
jmp
out
xchg
sbb
cmp
imul
aad
jg
jmp
mov
sub
mov
loop
test
add
and
add
add
mov
icebp
mov
cmp
sub
(bad)
xchg
add
es
mov
(bad)
cmp
mov
std
int
cmps
and
test
out
je
cmp
pop
add
mov
sub
xor
inc
btr
add
or
add
cmp
add
sub
data16
in
add
paddusb
mov
and
add
test
ds
movs
cmc
jne
sub
jg
jmp
fs
cmp
add
sub
rol
mov
add
bound
add
test
lahf
sbb
add
shl
outs
stc
or
and
add
add
psubsw
sub
jmp
mov
and
add
xchg
and
loop
je
jmp
inc
imul
aad
add
sbb
mov
add
(bad)
add
gs
sahf
cmps
and
add
add
mov
je
mov
xchg
lods
add
gs
adc
fucomp
mov
punpcklbw
add
add
add
add
or
mov
add
scas
test
add
cmp
test
add
cmps
xor
xchg
add
sbb
push
and
add
mov
add
mov
loope
lahf
sbb
add
mov
test
(bad)
cmp
add
jmp
mov
xchg
aad
popa
aas
in
xchg
test
and
out
or
adc
add
call
pusha
mov
gs
pushf
sub
and
jmp
push
dec
and
in
add
add
test
add
mov
mov
loop
daa
cmp
pop
add
test
jae
test
and
add
add
test
mov
outs
add
inc
cmp
sub
imul
mov
add
sbb
and
add
cmp
aad
jne
push
hlt
mov
add
retf
or
sbb
add
test
sub
mov
mov
test
lahf
lods
mov
cmp
test
mov
sub
sbb
add
packssdw
ret
add
jmp
mov
xchg
cmp
add
sub
mov
add
test
adc
add
fs
add
mov
ret
or
mov
daa
fcomp
xchg
add
daa
test
add
mov
das
mov
sbb
test
push
add
retf
sub
add
enter
das
(bad)
cmc
xor
add
es
jmp
mov
and
add
mov
push
or
add
add
lods
jmp
mov
add
fwait
aas
xor
pushf
and
adc
scas
pop
retf
into
add
cmp
retf
mov
popa
xor
xor
xadd
mov
push
sub
add
test
icebp
and
mov
add
add
add
add
dec
push
and
stos
push
push
js
dec
cdq
add
sub
retf
add
mov
lods
add
inc
pusha
je
mov
jmp
sub
sub
or
out
aad
jmp
mov
and
add
add
scas
add
ins
push
jmp
loop
jmp
test
add
out
repnz
stos
and
pop
push
add
test
add
sub
setno
add
test
repz
add
aad
jne
xchg
pop
dec
mov
popf
inc
je
jmp
mov
sub
mov
lds
mov
test
add
stc
mov
je
mov
add
add
add
mov
mov
pop
mov
xchg
and
add
dec
lahf
out
inc
mov
sub
retf
add
add
add
sub
mov
movups
stos
add
add
add
iret
jecxz
hlt
jle
inc
and
sub
sub
add
sub
test
sub
mov
cpuid
sbb
gs
mov
test
ins
loope
inc
stos
movs
inc
cmovle
fsubr
add
add
add
rcr
loope
add
mov
cmp
cmovl
mov
jmp
mov
mov
daa
sub
gs
movd
mov
add
sbb
retf
pop
popa
sbb
sub
mov
es
cli
cmp
add
push
and
pushf
and
and
add
cmc
or
add
cmp
xchg
and
mov
lods
cmp
inc
add
add
dec
ror
gs
mov
mov
fs
js
add
xor
cmove
rol
jl
or
add
in
push
lods
in
test
inc
mov
sub
xchg
jl
mov
xchg
mov
and
add
inc
mov
mov
and
dec
push
add
pop
push
or
and
push
add
cmp
inc
and
pop
add
sbb
pop
and
pusha
add
cmp
loop
pop
push
cmp
jge
cld
call
imul
add
add
setne
and
mov
add
add
inc
aad
outs
loop
mov
fwait
cmp
dec
jge
inc
or
pop
add
inc
push
add
add
cmp
mov
stos
sbb
(bad)
cmps
and
add
and
mov
retf
sub
aad
mov
gs
test
mov
or
sahf
cmps
and
add
fmul
add
pop
cmp
mov
mov
mov
mov
and
push
hlt
pop
(bad)
(bad)
mov
mov
mov
fimul
or
adc
add
add
repnz
cmc
ret
add
mov
push
add
mov
outs
inc
cmp
out
div
sub
inc
add
xchg
pop
mov
add
pop
mov
inc
mov
retf
mov
outs
add
mov
lods
scas
cs
mov
and
add
out
add
mov
add
mov
and
add
add
add
add
pop
push
and
ds
(bad)
mov
mov
mov
test
xchg
lods
add
mov
mov
jmp
in
out
scas
add
inc
jmp
mov
xor
inc
aad
jmp
and
mov
push
jmp
sub
inc
add
arpl
sar
mov
add
inc
add
mov
dec
retf
xor
add
(bad)
push
movzx
mov
inc
add
test
and
add
gs
scas
mov
or
sub
inc
add
sub
push
add
and
inc
cmp
mov
xchg
sub
inc
add
add
add
mov
mov
mov
push
popf
or
js
adc
lea
(bad)
out
xchg
and
mov
retf
retf
pusha
add
add
xchg
add
add
cmp
cmp
mov
mov
cmp
mov
or
inc
and
std
ret
(bad)
mov
test
pushf
ret
and
inc
pushf
icebp
push
pop
add
mov
xchg
lods
mov
inc
mov
fadd
pop
in
test
xor
and
test
mov
data16
mov
add
rol
and
xchg
add
movs
cmp
pop
add
gs
bnd
retf
bound
add
mov
or
and
enter
push
int
add
add
mov
xchg
add
inc
inc
cmp
mov
mov
and
push
and
pushf
dec
push
or
and
push
jb
sub
mov
mov
mov
sub
int
mov
add
(bad)
sub
stos
sbb
inc
mov
add
icebp
sbb
cs
(bad)
mov
sbb
or
cmps
cmp
inc
add
push
pusha
and
mov
mov
inc
add
sub
push
add
mov
loope
es
es
inc
retf
lods
inc
(bad)
and
out
cmp
lds
lods
mov
add
mov
pop
and
add
dec
and
add
add
cmp
push
mov
adc
arpl
mov
add
pop
movs
sbb
mov
mov
mov
and
add
out
mov
xchg
add
sub
adc
mov
add
add
or
mov
pushf
mov
xchg
add
sti
xchg
aad
test
mov
add
(bad)
jmp
mov
in
test
jecxz
sbb
cld
repz
mov
fs
mov
xchg
jl
mov
xchg
mov
xor
imul
ins
and
stos
push
and
pushf
dec
push
mov
loop
(bad)
(bad)
mov
cmp
call
mov
loop
xchg
push
inc
add
out
cmp
push
icebp
cwde
das
mov
and
scas
add
inc
ror
inc
aad
out
add
test
sbb
adc
jmp
(bad)
push
and
pop
mov
cmp
sub
je
add
(bad)
mov
add
push
popf
cli
cld
inc
daa
add
inc
test
add
add
repnz
imul
xchg
dec
outs
arpl
sub
add
loop
pop
inc
ror
add
mov
xlat
mov
mov
add
inc
mov
in
add
call
sbb
out
aaa
mov
add
jmp
mov
jmp
mov
(bad)
daa
cmp
pop
and
push
mov
jmp
mov
xchg
clc
mov
add
add
cmps
bound
add
jmp
mov
data16
jge
add
mov
mov
pusha
aam
into
cld
(bad)
(bad)
test
mov
sbb
adc
add
add
xchg
inc
lods
pusha
jmp
nop
inc
(bad)
hlt
ds
jnp
xchg
sub
add
add
imul
sub
add
pushf
add
call
inc
add
add
out
add
add
or
add
lods
and
mov
add
hlt
jmpw
add
fdiv
in
mov
or
and
add
sbb
mov
jmp
je
or
mov
pop
ror
cld
call
fmul
push
add
mov
inc
mov
or
inc
retf
scas
add
add
mov
inc
enter
sahf
sub
mov
mov
mov
jmp
(bad)
xchg
push
lds
add
xlat
scas
pop
sahf
and
inc
repz
scas
shl
add
jmp
mov
mov
retf
and
or
mov
mov
add
les
gs
jge
pop
jge
pop
ret
sahf
test
add
add
or
pop
mov
and
add
push
pusha
add
jo
jmp
pop
(bad)
jmp
mov
fs
movs
pusha
enter
jmp
sub
mov
mov
scas
add
dec
or
int
inc
mov
cmps
xor
add
ret
int3
push
adc
retf
and
add
add
or
pop
test
add
mov
mov
mov
and
dec
pusha
cmp
jmp
(bad)
jmp
and
or
movs
mov
and
push
jge
add
add
aad
movzx
xchg
outs
xchg
lods
add
sub
dec
mov
mov
imul
and
(bad)
retf
dec
jmp
add
mov
xor
lea
inc
add
mov
add
add
mov
sete
mov
add
add
movzx
mov
fnstenv
add
dec
add
mov
stos
sub
or
retf
add
push
movs
ret
jl
sbb
and
call
mov
cmp
mov
add
add
xchg
cmp
and
adc
in
add
mov
lea
add
mov
je
add
push
and
xor
scas
add
adc
(bad)
(bad)
inc
test
loopne
mov
stos
inc
and
and
add
mov
inc
pop
add
add
add
add
mov
inc
and
mov
and
inc
inc
icebp
and
or
jmp
mov
xchg
add
mov
imul
mov
xor
add
lods
icebp
inc
jecxz
or
add
add
sbb
pop
retf
cld
dec
lahf
test
jnp
adc
lods
cmp
(bad)
pushf
and
add
inc
push
ja
retf
lods
and
add
adc
or
mov
and
mov
inc
mov
or
mov
and
pop
and
stos
inc
and
and
ud0
sub
inc
add
aad
inc
push
sbb
mov
xchg
add
mov
pop
and
push
xchg
out
mov
add
add
mov
scas
js
mov
add
xor
mov
xchg
inc
push
adc
mov
cmps
mov
push
test
and
jmp
mov
and
xchg
add
and
retf
mov
or
add
sbb
add
stos
add
and
cld
jmp
add
xchg
sub
add
cmp
jle
and
add
es
test
add
jmp
rol
stos
pop
pop
sahf
jmp
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
add
lds
mov
push
mov
call
jg
add
cli
add
push
rcl
jge
mov
gs
dec
mov
mov
pop
test
jb
lahf
into
pop
cmps
sub
add
mov
pop
xchg
mov
mov
fcomi
lods
add
add
xor
mov
imul
inc
add
mov
mov
sahf
add
bndstx
or
xor
mov
add
scas
test
hlt
add
inc
shr
jne
loopne
aas
and
add
add
(bad)
and
add
cmp
retf
xchg
add
sub
mov
in
sahf
add
not
cdq
add
fwait
scas
sahf
or
add
and
fsubp
add
add
push
jge
add
mov
add
leave
add
sub
retf
adc
jp
xor
jb
pop
inc
add
add
sub
mov
jmp
add
add
leave
data16
mov
call
je
int
push
inc
add
and
add
cli
sub
fmul
stos
ins
push
pop
ror
(bad)
leave
dec
jmp
adc
add
sub
adc
icebp
test
ret
xor
and
add
in
and
mov
mov
dec
add
int3
and
add
jmp
adc
and
sub
mov
or
or
xor
test
adc
and
add
jg
jmp
jne
pop
dec
xor
cli
sub
jmp
pop
test
add
inc
add
(bad)
inc
mov
sub
mov
add
(bad)
and
add
xchg
mov
xor
add
aam
adc
mov
add
leave
imul
stc
sbb
outs
jo
fwait
mov
add
in
aam
mov
add
and
add
retf
lods
add
cwde
lahf
xor
dec
add
enter
mov
movs
adc
ins
push
pop
es
inc
jg
jmp
mov
and
add
add
xor
nop
add
idiv
jmp
pop
test
add
add
and
inc
cmovbe
data16
add
add
adc
lahf
add
or
pushf
add
add
jecxz
add
mov
in
test
retf
sub
add
sahf
paddw
sahf
add
jmp
mov
inc
add
mov
and
add
mov
add
jmp
mov
and
add
add
mov
nop
add
inc
(bad)
pusha
add
add
add
add
add
jb
arpl
add
jp
mov
clc
add
mov
in
ds
lock
mov
add
jb
mov
inc
add
add
add
retf
and
int3
add
out
mov
add
je
pop
fadd
mov
hlt
shl
add
adc
iret
icebp
mov
cmps
(bad)
adc
add
add
dec
enter
add
(bad)
mov
xchg
sbb
add
mov
and
mov
mov
lock
repnz
test
add
inc
add
add
add
mov
imul
mov
and
bndstx
cwde
add
jmp
enter
xor
add
mov
adc
inc
add
data16
enter
add
sub
mov
ins
je
jmp
mov
add
sub
mov
jmp
add
add
and
leave
dec
jne
cmc
or
inc
and
bndldx
push
sahf
add
mov
add
xor
jnp
jmp
test
mov
out
push
retf
pop
xchg
test
add
push
and
(bad)
jle
add
mov
(bad)
and
aam
addr16
add
mov
in
aas
(bad)
retf
es
sbb
xor
jmp
xchg
test
add
(bad)
sub
mov
repnz
add
sub
hlt
xor
in
loope
mov
dec
add
sahf
fwait
sub
sahf
lahf
mov
add
pop
and
dec
jg
jmp
mov
add
or
jae
pop
and
ret
sbb
add
jmp
mov
sub
idiv
and
jg
jmp
outs
test
mov
and
sub
cmovs
mov
pop
and
sbb
inc
sub
mov
pcmpeqw
add
add
jge
add
xor
ins
cmp
cmp
xor
sbb
add
sbb
jp
mov
mov
and
jg
xchg
mov
pop
hlt
add
add
mov
addr16
test
popf
jb
jmp
mov
sbb
mov
and
(bad)
loopne
add
in
add
mov
push
popf
mov
gs
test
dec
inc
jmp
mov
sub
mov
and
test
add
jmp
pop
stos
mov
pop
adc
stos
clc
add
leave
add
inc
enter
add
add
movs
lahf
add
add
push
lds
jecxz
xor
and
jbe
cmp
sti
mov
mov
stos
clc
test
inc
and
push
cmps
push
icebp
mov
adc
and
add
xor
ret
inc
pop
lods
test
mov
gs
sar
mov
in
aam
sub
add
retf
xor
mov
inc
or
lahf
add
and
inc
(bad)
jle
sar
(bad)
dec
shl
mov
jmp
mov
jmp
mov
out
test
int3
sahf
jb
sti
pushf
xor
and
add
add
enter
mov
cmp
fs
push
push
loope
retf
mov
add
add
cmp
jmp
inc
jne
pop
stos
add
add
mov
and
mov
jge
mov
call
mov
retf
push
dec
inc
inc
add
add
lahf
xor
push
ret
movs
jecxz
mov
mov
add
shr
adc
add
and
sbb
push
mov
test
(bad)
ror
mov
jbe
add
xor
test
adc
mov
add
add
add
add
jno
imul
aad
add
mov
les
add
(bad)
mov
adc
adc
add
inc
or
and
rol
add
jne
test
enter
imul
add
(bad)
fisub
xor
inc
and
mov
adc
lds
cmp
dec
mov
mov
and
xor
cli
test
aam
mov
cmps
inc
retf
pop
mov
xchg
inc
add
pop
test
add
mov
mov
add
add
(bad)
fld
pop
jb
add
sub
inc
leave
dec
inc
ret
and
add
mov
mov
scas
xchg
and
add
cmc
xchg
and
mov
fimul
inc
ror
push
add
push
mov
mov
call
sahf
jb
adc
fwait
add
add
cmp
and
rol
add
jge
dec
sub
clc
add
add
call
push
and
mov
and
jns
mov
cmp
movsx
mov
or
add
mov
inc
loop
mov
and
mov
jle
mov
js
cld
(bad)
mov
mov
stos
push
xor
add
cdq
inc
add
(bad)
loop
clc
add
sub
add
add
mov
movs
cmps
add
inc
add
jle
mov
cmp
add
jmp
pop
inc
and
clc
xor
(bad)
push
add
add
sahf
add
add
call
es
out
lock
add
inc
inc
xchg
xor
add
(bad)
aas
and
add
add
push
mov
jmp
(bad)
sub
push
add
add
dec
inc
or
push
clc
sahf
add
jb
add
add
jp
adc
jle
mov
pop
pop
adc
test
add
popf
adc
jl
stos
add
add
add
mov
inc
mov
add
sahf
sti
lahf
adc
mov
add
xor
mov
(bad)
add
add
dec
add
int3
add
adc
add
cld
sbb
add
jle
fild
ds
ins
outs
mov
cld
aam
mov
fimul
or
sub
and
and
add
sahf
adc
and
xor
lods
push
cmp
and
mov
inc
and
call
mov
mov
(bad)
stc
and
add
enter
leave
data16
(bad)
and
add
sahf
mov
sti
add
call
(bad)
sbb
dec
adc
cmp
add
mov
add
add
add
call
and
jmp
loopne
mov
nop
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
int
mov
ins
popf
hlt
test
add
push
add
add
add
mov
push
test
mov
or
add
retf
test
add
add
pop
and
add
add
loope
xor
xor
xor
mov
add
lea
mov
cld
jnp
popf
and
call
inc
inc
or
xchg
add
mov
fwait
test
inc
add
hlt
add
add
test
sar
jnp
sbb
jmp
add
mov
cmp
loope
rol
and
or
nop
lods
or
pop
mov
push
jge
fcomp
pop
sbb
mov
loop
add
das
and
inc
add
dec
test
mov
add
pop
pop
add
inc
and
inc
xor
hlt
call
mov
inc
add
jnp
pop
and
inc
and
sbb
add
rol
or
add
add
mov
and
add
mov
inc
inc
nop
or
add
or
call
test
dec
xor
mov
fdivr
jmp
dec
or
add
mov
mov
and
add
stc
add
loope
mov
mov
btr
and
or
add
inc
xchg
jge
and
(bad)
jnp
test
add
add
xchg
mov
cmp
mov
icebp
inc
add
mov
inc
or
test
aas
test
or
add
push
inc
icebp
inc
add
movs
ror
(bad)
jnp
loop
add
cwde
sub
add
mov
add
test
mov
(bad)
pusha
js
cmp
mov
dec
and
jne
pop
dec
call
mov
jmp
mov
inc
mov
mov
sub
add
call
mov
cli
enter
dec
add
add
push
call
add
pop
and
or
add
test
add
iret
mov
call
ins
test
push
push
add
mov
(bad)
cmp
add
or
pop
dec
lea
repnz
(bad)
mov
xchg
inc
mov
or
mov
lods
mov
or
sub
pop
add
mov
or
inc
mov
add
(bad)
call
sbb
push
add
pushf
and
outs
add
add
dec
dec
pop
xor
test
mov
and
push
and
mov
and
mov
adc
jge
fdiv
add
lock
dec
add
adc
sbb
mov
add
or
add
repnz
in
push
aad
push
(bad)
pop
and
std
add
sahf
das
cld
mov
add
mov
aad
test
cmp
stc
mov
add
adc
add
add
add
rol
bound
mov
and
add
dec
and
stc
loope
mov
add
or
add
mov
je
sbb
mov
sub
mov
and
xchg
add
ss
add
jmp
popf
add
pop
arpl
adc
test
add
test
add
nop
push
add
mov
les
cmp
retf
test
add
inc
(bad)
and
stc
add
add
add
daa
jnp
aad
and
add
hlt
je
xchg
scas
or
and
add
fstp
and
loopne
add
(bad)
and
test
pop
add
fs
mov
mov
test
xor
add
test
test
cmp
add
outs
add
add
add
hlt
add
jnp
xor
mov
pushf
pop
cmpeqps
add
into
or
mov
add
test
mov
push
ret
and
hlt
ficom
mov
sub
xor
dec
mov
mov
or
xlat
enter
add
rcl
shr
mov
cmp
nop
add
push
stc
add
add
test
sub
or
and
jbe
pop
bswap
leave
pop
xor
sbb
mov
js
add
jmp
fs
test
imul
mov
add
add
jno
jmp
add
add
(bad)
aaa
sti
add
add
add
xchg
test
add
add
call
and
add
add
add
test
mov
xchg
sub
mov
cld
add
pop
push
add
pop
add
add
data16
xchg
imul
xor
mov
sub
ja
add
test
dec
add
(bad)
test
add
add
(bad)
mov
add
inc
mov
sub
lahf
test
movs
add
mov
sbb
or
add
mov
inc
mov
jg
stos
xchg
inc
add
stc
loope
jnp
or
sub
mov
js
hlt
dec
add
jmp
mov
add
add
mov
cmp
jg
jmp
mov
sub
lahf
test
jb
jmp
mov
jl
add
push
jp
sbb
mov
dec
jmp
or
add
add
mov
andnps
jg
add
mov
mov
mov
mov
add
mov
pop
or
test
add
hlt
sub
aad
cmp
bswap
xor
add
inc
xor
popa
add
mov
adc
mov
jg
mov
add
dec
mov
jno
push
and
call
mov
inc
add
add
jge
add
loope
xchg
mov
and
test
pop
add
mov
sub
mov
xchg
jg
scas
mov
cmp
test
mov
js
add
ret
das
add
hlt
jmp
mov
add
add
dec
or
pop
inc
arpl
mov
push
test
add
test
test
xor
jno
ss
jge
and
cld
jnp
jg
jmp
mov
xchg
imul
dec
mov
jg
jmp
push
xor
or
ja
jbe
imul
jnp
pop
push
(bad)
aas
jmp
inc
jmp
mov
and
inc
add
push
lahf
add
add
test
cmp
add
ja
add
mov
pop
std
jnp
jno
into
or
out
pop
(bad)
fdivr
jle
add
inc
and
jbe
add
mov
andnps
add
add
sbb
(bad)
mov
add
inc
add
aam
test
or
dec
mov
add
jno
fnstcw
(bad)
and
xchg
inc
add
(bad)
mov
add
add
jno
mov
mov
dec
xor
aad
xlat
jnp
add
mov
inc
adc
jae
mov
sub
aas
test
add
enter
add
mul
push
out
mov
out
pop
add
add
push
inc
add
ret
add
loope
xlat
mov
mov
js
lds
add
mov
ror
push
sti
mov
pushfw
ret
add
jmp
mov
add
test
je
fldenv
jmp
sbb
add
mov
cmpordps
add
or
test
test
or
and
ja
pop
push
test
xor
hlt
xor
add
ja
and
pop
sbb
sub
mov
je
jmp
mov
add
jge
and
add
add
add
jmp
add
add
leave
mov
mov
add
ja
xlat
test
add
add
mov
je
mov
sbb
add
add
sub
mov
pcmpgtw
push
add
pop
add
xor
add
jnp
test
sbb
add
mov
sub
mov
sbb
stos
lea
mov
xchg
emms
add
test
xor
fcmovbe
aas
ins
mov
xchg
add
inc
imul
mov
sub
cmp
add
fadd
xor
ficom
mov
(bad)
in
mov
popf
mov
stc
loope
test
cmp
test
pop
mov
test
add
enter
add
pop
add
add
pop
add
mov
xchg
add
je
jmp
int
and
clc
loope
sub
or
test
or
add
mov
sbb
jne
js
je
jmp
mov
bound
fsubr
mov
mov
mov
inc
and
mov
js
add
ds
xlat
call
push
test
add
mov
sub
mov
test
add
push
mov
add
in
inc
and
sbb
inc
test
add
add
xlat
popf
int
pop
add
sub
sbb
popf
fs
pop
add
mov
test
or
out
das
mov
and
je
movs
sbb
hlt
add
add
imul
pop
movhps
push
add
mov
sub
or
test
add
pop
pop
(bad)
mov
add
add
nop
inc
int
je
jmp
mov
and
add
pop
inc
sub
repz
(bad)
hlt
(bad)
lock
sbb
push
sub
mov
and
dec
test
add
loope
cmp
push
test
mov
dec
je
jmp
mov
sti
pop
sbb
sub
push
fidiv
sbb
mov
aam
mov
add
push
xor
add
pop
jno
mov
inc
divps
add
jmp
and
add
popf
arpl
test
mov
add
test
add
sub
test
add
sbb
push
leave
test
add
imul
je
inc
add
add
in
sub
mov
xchg
hlt
add
cli
cli
pop
sbb
add
inc
sub
bound
loope
push
cwde
add
and
movs
add
jmp
repnz
pop
test
and
cmp
add
fsubr
cmc
push
std
inc
ret
ins
mov
retf
loop
cmp
xchg
inc
add
add
and
add
add
inc
xor
nop
or
das
mov
jmp
test
add
add
ja
call
movs
add
sub
add
call
mov
push
xor
push
adc
jne
mov
lods
and
stc
rol
(bad)
clc
add
mov
push
add
test
and
add
add
pusha
or
(bad)
fsubr
add
hlt
jmp
lods
mov
sbb
and
dec
add
mov
add
popf
xor
add
xor
mov
call
mov
ror
cmps
mov
cmp
aad
retf
and
pop
sbb
add
test
jmp
ja
jmp
mov
mov
jae
push
mov
add
hlt
fiadd
mov
inc
or
cmp
add
cmove
mov
or
add
push
mov
or
and
mov
add
ds
pop
in
add
mov
add
pop
test
add
xchg
sub
inc
dec
or
les
loope
jmp
cmp
call
inc
mov
mov
rcl
sahf
sbb
inc
(bad)
retf
loop
les
add
pop
cli
add
es
add
pusha
repnz
jmp
mov
mov
push
jmp
mov
mov
int
mov
mov
mov
or
add
or
or
mov
jecxz
sbb
dec
add
mov
jmp
and
mov
mov
scas
mov
jl
jecxz
mov
add
xchg
addr16
and
or
add
shr
xor
hlt
xor
push
fwait
les
sti
loope
jl
mov
test
mov
inc
mov
jmp
mov
movs
sbb
add
dec
add
(bad)
mov
or
mov
mov
or
(bad)
sbb
add
je
add
adc
jo
and
inc
ror
add
add
and
lahf
xchg
test
pop
pop
dec
lea
mov
aad
and
nop
inc
and
mov
and
cdq
inc
(bad)
in
inc
sub
shl
cmp
add
test
and
add
fld
add
push
mov
icebp
enter
mov
mov
call
ret
add
mov
enter
mov
mov
popf
add
movs
and
popf
inc
and
or
rol
mov
pop
add
popa
push
jmp
mov
aad
and
call
add
mov
js
lds
or
mov
setne
add
add
test
jmp
mov
mov
mov
xor
pop
add
fild
cmovne
mov
xchg
add
jp
add
int
popf
ror
loope
add
call
(bad)
xchg
mov
stc
nop
pop
sbb
bound
sbb
test
add
fucompp
inc
add
jnp
cmp
and
push
add
add
mov
(bad)
les
mov
loope
rol
and
and
cmp
or
jmp
jne
and
or
add
add
add
aad
and
add
jmp
sub
jmp
loopne
add
test
add
mov
mov
push
call
mov
mov
jmp
sbb
jnp
mov
jmp
jl
out
test
adc
mov
lods
cmp
sub
add
enter
add
jmp
fwait
test
and
add
add
inc
mov
test
gs
jmp
pop
mov
fsub
add
add
bnd
mov
add
cmp
dec
pop
mov
loope
mov
das
or
mov
xchg
push
js
dec
mov
(bad)
into
and
fwait
inc
mov
or
adc
inc
lock
add
add
or
fdiv
mov
js
les
jnp
jo
or
jmp
rol
into
xor
mov
add
mov
retf
cwde
add
add
adc
xor
test
adc
add
test
inc
pop
and
mov
fwait
cli
jmp
arpl
(bad)
jmp
les
hlt
add
(bad)
lock
dec
pop
add
add
push
mov
push
push
push
and
sub
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
push
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
and
xor
inc
inc
cmp
sbb
or
dec
add
add
imul
iret
(bad)
cmp
inc
xchg
addr16
and
outs
(bad)
sbb
hlt
add
mov
and
jno
push
add
je
inc
xor
add
mov
lods
dec
rcr
sysenter
cmp
add
pop
pusha
adc
and
sub
sub
sub
inc
fimul
cmp
mov
pxor
add
hlt
inc
mov
xchg
dec
lahf
mov
mov
sub
add
xchg
loop
push
jl
pushf
popf
rcr
dec
and
add
add
movs
inc
push
and
push
icebp
outs
sbb
test
add
jmp
mov
loope
push
xchg
lods
mov
push
stos
xchg
add
jmp
scas
icebp
and
out
mov
inc
and
rol
add
mov
cmp
xor
push
std
cld
je
inc
sbb
or
pop
(bad)
aam
push
xchg
popa
xchg
lods
int
mov
fiadd
mov
es
dec
sub
(bad)
pushf
popa
mov
and
fst
add
add
(bad)
rcl
add
mov
mov
add
call
mov
sbb
(bad)
cmp
adc
pusha
lods
xchg
dec
inc
push
stc
dec
pop
outs
in
scas
dec
fmul
push
add
add
add
pop
shr
stos
add
push
iret
(bad)
repz
pop
add
out
rcr
push
add
cld
(bad)
clc
lea
push
fwait
sub
or
add
add
cli
inc
aas
sbb
xor
add
(bad)
icebp
lea
dec
lahf
gs
daa
sbb
(bad)
out
hlt
cmc
pop
xchg
pop
ret
mov
mov
push
add
or
out
pusha
add
rol
inc
in
movs
test
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
scas
or
and
mov
jg
cwde
dec
add
add
mov
mov
add
cli
mov
mov
and
call
mov
push
jo
mov
cdq
and
or
add
add
and
jg
mov
fwait
mov
(bad)
call
movzx
add
mov
add
add
and
mov
push
rol
add
inc
and
mov
lea
dec
push
cmps
sbb
ror
mov
or
mov
(bad)
dec
add
nop
jmp
mov
xor
aad
shl
movs
push
inc
and
xchg
add
mov
jno
push
lahf
sub
sahf
mov
add
jae
mov
cmp
(bad)
push
int
movs
movsx
add
jmp
pop
inc
ficom
mov
and
retf
xchg
or
lea
inc
xchg
add
sub
lock
and
jae
cmc
push
fisttp
jecxz
add
ret
bnd
ror
add
pop
call
mov
inc
test
add
add
and
mov
and
mov
mov
jae
xor
mov
(bad)
xchg
and
les
add
and
cli
add
gs
pop
pop
pop
xchg
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
jmp
push
ret
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
add
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
mov
mov
jmp
cmp
jae
add
inc
jmp
sub
push
jmp
call
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xchg
mov
and
xchg
add
sub
inc
mov
ror
add
add
add
mov
or
mov
add
sbb
jmp
mov
push
mov
add
(bad)
bound
retf
add
add
pop
pop
and
mov
add
das
sub
add
xchg
add
push
test
add
add
sbb
and
add
pop
jg
(bad)
fild
add
add
(bad)
mov
fldenv
ins
add
xor
mov
mov
add
sub
dec
add
mov
mov
sar
jmp
test
mov
lds
pop
in
add
(bad)
sub
push
add
add
mov
add
sub
mov
movlhps
lods
add
sti
sahf
add
and
add
mov
mov
ret
test
mov
daa
push
(bad)
and
or
ja
dec
sbb
add
sub
push
test
or
and
add
mov
add
and
add
fiadd
outs
mov
js
sar
mov
dec
cld
out
add
imul
fwait
add
sub
add
xchg
xor
add
test
cwde
add
test
add
bound
add
adc
ins
mov
and
nop
sub
pop
or
add
add
iret
xor
dec
mov
sub
mov
femms
and
add
cld
add
icebp
dec
add
stos
mov
cmp
aam
retf
test
sub
mov
mov
fisttp
add
movs
add
ins
sub
mov
test
cmp
daa
mov
and
pop
add
sub
rol
mov
add
mov
sub
pop
dec
and
cmp
mov
fnstenv
pop
dec
inc
cmp
add
sbb
inc
lahf
mov
and
adc
and
mov
mov
add
pop
add
sub
jmp
add
add
mov
dec
xchg
movs
sti
jp
add
pop
adc
adc
ins
xlat
pop
test
add
add
(bad)
and
add
mov
dec
ins
mov
inc
sub
out
mulps
xchg
add
add
mov
and
fild
add
jg
add
mov
clts
and
retf
add
mov
mov
lods
adc
test
add
add
pop
sub
add
test
movs
adc
push
or
add
ss
add
lods
add
add
cmp
add
pop
out
add
pop
add
lods
xor
test
add
pop
add
mov
add
or
add
mov
cmp
add
push
and
and
add
frstor
xchg
test
mov
rol
add
test
add
jmp
mov
out
loope
out
scas
fldenv
pop
add
femms
ins
inc
cmp
jmp
mov
and
xor
fisub
cmp
hlt
add
add
and
cmp
mov
adc
imul
add
add
add
cld
add
add
sbb
fld
out
test
popf
and
add
pop
add
dec
mov
(bad)
and
mov
mov
(bad)
pop
pop
add
add
gs
add
cld
sub
out
adc
add
jmp
mov
add
or
sbb
ror
jmp
add
cwde
int3
daa
mov
mov
je
test
cmp
add
out
sub
sbb
push
or
fisttp
add
add
sub
cmp
jns
je
jmp
mov
add
(bad)
mov
and
push
(bad)
and
add
dec
mov
out
push
mov
or
dec
add
mov
inc
push
fstp
mov
test
adc
mov
add
mov
fistp
repnz
call
mov
add
add
add
sub
mov
repz
and
add
dec
add
outs
add
cld
add
add
mov
inc
test
adc
jmp
mov
or
add
add
mov
fmul
jmp
mov
add
enter
(bad)
and
jb
or
out
pop
add
push
jg
sub
jb
cmp
(bad)
and
add
add
or
mov
dec
add
add
cmp
fisttp
xchg
movs
adc
mov
jmp
(bad)
add
add
mov
mov
add
add
mov
and
je
jmp
retf
cld
add
mov
push
mov
add
pop
add
add
sub
sub
mov
xorps
add
jmp
test
add
lods
fimul
sub
jne
and
pminsw
add
fistp
dec
xchg
mov
and
adc
pop
scas
xor
inc
mov
sahf
add
add
test
add
add
mov
mov
icebp
outs
add
mov
xchg
sub
rol
and
pop
jae
ss
add
dec
add
cmp
mov
cmp
inc
and
mov
in
cmp
adc
mov
ret
retf
add
sub
fidivr
sub
add
add
jb
mov
inc
adc
add
xchg
and
push
add
mov
add
add
fnstsw
mov
push
in
movs
(bad)
dec
add
and
add
mov
test
push
stos
xchg
add
inc
xor
ror
ss
add
mov
adc
mov
mov
iret
fild
ss
enter
cmp
jg
push
cs
repnz
mov
test
add
mov
int3
call
sbb
add
test
add
(bad)
loop
pop
ror
cmp
or
mov
and
cli
add
add
lsl
enter
add
cld
dec
pop
in
ss
sbb
mov
pop
int3
dec
add
mov
add
pop
pop
and
mov
ret
mov
add
stos
dec
ror
add
jmp
mov
or
hlt
cmp
(bad)
aad
sbb
add
jge
push
add
outs
bt
mov
xchg
movs
sti
les
pop
adc
(bad)
lods
sub
inc
and
retf
add
mov
daa
movups
mov
add
bound
mov
ftst
fs
inc
stc
xor
sub
dec
mov
cmovl
mov
jmp
mov
mov
ja
dec
sbb
out
pop
test
rcl
push
or
fidiv
dec
jmp
mov
mov
ds
sbb
or
cmp
inc
cmp
add
fcomip
add
call
add
or
aaa
add
mov
adc
cmp
push
or
js
add
ss
add
add
add
test
add
mov
daa
mov
jmp
mov
xchg
dec
daa
mov
jmp
mov
in
xchg
add
(bad)
and
add
out
sbb
add
imul
pop
shr
add
inc
mov
addr16
add
adc
pop
sub
add
ffreep
test
add
dec
mov
daa
mov
and
add
add
or
cld
mov
imul
mov
adc
sub
rol
pushf
lods
or
retf
jmp
add
aaa
call
sub
push
aam
mov
mov
fld
or
sbb
jmp
mov
push
out
cmp
add
jmp
stc
mov
aad
test
aaa
add
jmp
mov
mov
fbstp
rol
and
add
cmp
inc
add
add
retf
add
cmp
jmp
and
add
call
add
add
test
and
inc
add
test
add
add
test
add
inc
mov
xchg
add
mov
fadd
add
and
pop
sub
fist
add
mov
lods
retf
retf
cmp
cmp
pop
js
pop
inc
mov
inc
cld
add
aaa
fisttp
jmp
mov
add
mov
cmp
and
or
test
cld
add
add
cmp
jmp
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
imul
and
cmp
sete
mov
cmp
setl
mov
xor
mov
xor
mov
mov
xor
mov
mov
and
mov
mov
mov
mov
and
mov
and
mov
mov
and
mov
mov
mov
or
mov
or
xor
mov
or
xor
mov
or
and
or
test
mov
mov
mov
mov
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
sub
add
mov
mov
mov
mov
mov
mov
shl
sub
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
sete
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
mov
xor
mov
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
cmp
sete
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
cmp
sete
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
cmp
mov
jbe
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
cmp
setl
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
mov
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
sub
add
add
mov
mov
mov
mov
mov
mov
mov
sub
add
add
mov
mov
mov
sub
sub
mov
jmp
mov
cmp
jge
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmovne
mov
mov
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
add
add
mov
mov
shl
sub
add
add
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
add
add
sub
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jge
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
mov
mov
jmp
mov
mov
cmp
mov
je
mov
mov
mov
cmp
setb
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
cmp
setae
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
sub
mov
mov
mov
mov
mov
sub
add
add
mov
mov
cmp
jne
mov
mov
mov
mov
add
add
sub
mov
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
cmp
sete
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
sub
sub
mov
mov
mov
mov
mov
jmp
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
add
add
sub
sub
mov
mov
mov
mov
mov
sub
add
cmp
jge
mov
mov
mov
mov
sub
sub
add
mov
cmp
jge
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
cmp
jge
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
mov
mov
add
mov
mov
mov
mov
cmp
mov
jbe
mov
cmp
setl
mov
mov
test
jne
jmp
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
add
add
sub
mov
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
cmp
setl
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
cmp
setne
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
jmp
jmp
mov
mov
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
sub
add
add
mov
mov
xor
xor
xor
or
or
xor
and
mov
mov
mov
mov
mov
mov
shl
shl
add
mov
mov
shl
add
mov
mov
mov
cmp
jae
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
mov
sub
sub
mov
mov
mov
add
mov
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
mov
xor
mov
xor
and
mov
mov
mov
mov
shl
mov
movzx
mov
mov
sub
sub
add
mov
mov
mov
sar
mov
sub
mov
sub
add
sub
imul
shl
add
mov
mov
mov
cmp
jl
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
cmp
jb
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
movzx
mov
mov
mov
mov
mov
shl
mov
mov
xor
mov
xor
and
mov
mov
mov
mov
add
mov
shl
add
mov
mov
shl
add
mov
mov
mov
cmp
jae
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
shl
mov
mov
cmp
setne
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
sub
sub
mov
mov
mov
cmp
jne
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
jmp
mov
cmp
jl
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
jmp
mov
cmp
jge
mov
mov
mov
mov
shl
add
mov
mov
mov
cmp
jae
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
movzx
sub
add
sar
mov
movzx
add
add
sub
mov
mov
mov
mov
shl
mov
jmp
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
mov
sub
add
add
sub
add
add
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
mov
cmp
jae
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
cmp
setl
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
jmp
mov
cmp
jge
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
sub
add
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
sub
add
mov
jmp
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
movzx
sar
mov
movzx
sub
add
mov
mov
mov
mov
add
mov
mov
shl
add
mov
mov
mov
cmp
setb
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmovl
mov
mov
mov
add
mov
mov
jmp
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
add
mov
mov
mov
mov
add
mov
mov
shl
add
mov
mov
mov
cmp
jae
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
add
mov
mov
shl
shl
add
mov
mov
shl
add
mov
mov
cmp
jae
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
movzx
mov
sub
add
sar
mov
movzx
mov
sub
mov
sub
add
sub
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
cmp
setb
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
cmp
cmovl
mov
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
cmp
jb
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
sub
mov
mov
cmp
jne
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
mov
add
mov
mov
shl
add
mov
mov
mov
cmp
setb
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
setb
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
mov
sub
add
sar
mov
movzx
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
mov
add
mov
mov
shl
add
mov
cmp
jae
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
movzx
mov
sub
add
sar
mov
movzx
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
cmp
cmovl
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
cmp
setb
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
add
mov
mov
shl
shl
add
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
sub
add
mov
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
mov
add
mov
mov
mov
cmp
jae
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
jae
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
mov
sub
add
sar
mov
movzx
add
add
sub
mov
mov
mov
mov
add
mov
mov
shl
shl
add
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
add
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
shl
add
mov
mov
mov
cmp
jae
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
and
xor
or
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
setb
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
shl
mov
jmp
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
mov
sub
add
add
add
add
sub
mov
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
add
add
sub
mov
cmp
setne
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
sub
add
mov
mov
mov
mov
sub
sub
mov
mov
cmp
jge
mov
mov
add
add
sub
mov
mov
mov
add
mov
cmp
mov
jge
mov
mov
mov
jmp
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
jmp
mov
shl
shl
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
add
mov
mov
mov
cmp
jae
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
mov
and
and
mov
mov
and
and
mov
mov
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
mov
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
setb
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
sub
add
sar
mov
movzx
add
add
sub
mov
mov
mov
mov
shl
mov
jmp
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
mov
mov
add
add
sub
add
add
sub
mov
jmp
mov
mov
mov
sub
sub
mov
cmp
jne
mov
mov
sub
sub
add
mov
cmp
jl
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
sar
mov
sub
add
mov
mov
mov
xor
mov
xor
mov
xor
or
or
xor
and
mov
xor
mov
xor
xor
mov
and
mov
mov
and
mov
mov
and
and
mov
mov
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
cmp
setl
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
shl
mov
mov
mov
add
mov
shl
add
mov
mov
add
sub
sub
shl
add
add
mov
mov
jmp
mov
mov
mov
sub
add
mov
mov
cmp
jae
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
shr
mov
mov
mov
shl
mov
mov
mov
cmp
setae
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
mov
xor
mov
xor
xor
mov
and
and
mov
and
mov
and
or
or
xor
or
xor
mov
or
and
or
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
sub
mov
sub
add
mov
sub
mov
cmp
setne
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
add
mov
mov
mov
mov
shl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
add
mov
mov
mov
cmp
jae
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
shr
mov
mov
movzx
imul
mov
mov
mov
mov
cmp
setb
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
movzx
mov
sub
add
sar
mov
movzx
mov
sub
mov
sub
add
mov
sub
mov
mov
mov
mov
shl
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
mov
mov
mov
add
add
sub
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
mov
mov
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
shl
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
add
add
sub
mov
cmp
setne
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
jmp
mov
mov
mov
mov
mov
mov
sub
add
add
mov
cmp
jne
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
jmp
mov
mov
mov
sub
sub
mov
mov
mov
mov
cmp
jbe
mov
mov
jmp
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
sub
add
mov
cmp
seta
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
add
add
sub
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
cmp
setae
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
mov
jne
jmp
mov
test
jne
jmp
mov
mov
mov
mov
sub
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
cmp
mov
je
mov
mov
mov
cmp
setb
mov
mov
test
jne
jmp
jmp
mov
cmp
jae
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
mov
mov
mov
mov
add
add
sub
sub
mov
mov
add
sub
sub
mov
cmp
jge
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
mov
mov
cmp
jge
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
jmp
mov
mov
mov
sub
sub
mov
jmp
mov
mov
mov
mov
sub
sub
add
imul
and
cmp
sete
cmp
setl
mov
xor
mov
xor
xor
mov
and
and
mov
and
and
or
or
xor
or
xor
or
and
or
test
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
sub
imul
and
cmp
sete
cmp
setl
mov
and
xor
or
test
jne
jmp
jmp
mov
mov
lea
pop
pop
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
sub
add
mov
mov
mov
mov
mov
mov
shl
sub
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
jmp
jmp
jmp
jmp
jmp
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
mov
mov
mov
shl
sub
add
add
mov
mov
mov
mov
jmp
mov
mov
add
add
sub
mov
jmp
jmp
mov
mov
mov
mov
add
sub
sub
mov
mov
jmp
jmp
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
jmp
jmp
mov
mov
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
mov
sub
add
sar
mov
movzx
mov
sub
mov
sub
add
sub
mov
mov
mov
mov
shl
mov
jmp
jmp
jmp
jmp
jmp
mov
mov
add
sub
sub
mov
jmp
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
sub
sub
add
mov
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
add
mov
mov
shl
add
mov
jmp
jmp
mov
mov
mov
mov
mov
sub
add
add
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
sub
add
mov
mov
jmp
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
movzx
sar
mov
movzx
sub
add
mov
mov
mov
mov
add
mov
mov
shl
add
mov
mov
jmp
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
sub
add
add
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
mov
add
sub
sub
mov
mov
mov
movzx
sar
mov
movzx
add
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
sub
sub
add
sar
mov
movzx
sub
add
add
mov
mov
mov
mov
add
mov
mov
shl
shl
add
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
jmp
mov
mov
mov
mov
sub
mov
sub
add
sub
mov
jmp
jmp
mov
mov
mov
shl
mov
mov
mov
shl
mov
mov
mov
add
mov
movzx
mov
xor
mov
xor
xor
mov
and
and
mov
mov
and
mov
mov
and
or
mov
or
xor
or
xor
or
and
or
mov
mov
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
jmp
mov
mov
mov
sar
add
sub
sub
mov
mov
mov
xor
mov
xor
xor
or
or
xor
and
mov
and
xor
or
mov
mov
jmp
mov
mov
shr
mov
mov
mov
shl
mov
jmp
jmp
mov
mov
mov
sub
sub
mov
jmp
mov
mov
shr
mov
mov
movzx
imul
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movzx
add
sub
sub
sar
mov
movzx
add
add
sub
mov
mov
mov
mov
shl
mov
jmp
mov
mov
mov
sub
sub
mov
jmp
mov
mov
jmp
jmp
mov
mov
mov
mov
add
sub
sub
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
