dec
mov
add
add
dec
add
add
add
add
add
add
add
add
add
inc
and
add
add
adc
or
sub
add
add
add
sub
add
or
add
push
jae
add
or
add
or
add
jo
add
add
add
or
add
add
add
add
or
outs
or
add
outs
or
add
outs
or
add
sub
add
or
add
add
sub
add
sbb
push
add
add
add
adc
or
add
add
add
or
push
and
add
adc
fisttp
add
jae
add
or
add
or
push
and
add
add
add
or
jae
add
or
outs
adc
add
sub
add
or
add
add
adc
add
add
or
fisttp
adc
add
add
or
or
add
add
add
add
dec
add
add
or
push
pop
add
jb
add
add
pop
pusha
sbb
xchg
and
jnp
dec
cmc
dec
xlat
loopne
mov
and
nop
inc
adc
ror
imul
retf
gs
pushw
inc
int3
in
popf
mov
mov
mov
dec
daa
neg
(bad)
aas
pop
add
dec
fcmove
sahf
and
jle
pop
aas
and
xlat
clc
mov
lea
xlat
clc
jne
(bad)
push
(bad)
std
imul
jg
scas
and
out
test
adc
push
stc
pop
(bad)
sahf
(bad)
xlat
clc
fstp
lahf
call
scas
pop
repz
aas
(bad)
mov
mov
pop
movs
shr
fidiv
cmc
jp
push
retf
hlt
jmp
xor
outs
pushf
cld
outs
or
in
scas
icebp
imul
jg
pop
jecxz
cli
jne
stos
aaa
push
out
jg
imul
mov
(bad)
jp
(bad)
scas
icebp
mov
jl
pop
cld
test
not
(bad)
stc
stc
imul
mov
loop
jg
(bad)
lahf
sti
imul
fisttp
mov
scas
mov
inc
mov
jle
fild
repnz
lea
imul
mov
inc
jg
(bad)
jnp
out
pop
cli
stc
lahf
std
stos
pop
pop
mov
inc
in
xlat
clc
xor
xchg
cli
mov
cmp
scas
fwait
jp
mov
mov
js
add
retf
mov
repnz
push
fisubr
and
loopne
iret
jmp
jg
mov
mov
push
clc
jne
lea
jle
hlt
aas
push
les
rcr
imul
sbb
aam
mov
inc
out
sbb
jecxz
sti
xor
(bad)
neg
loope
mov
aas
jle
hlt
aaa
mov
cli
imul
call
icebp
fisubr
jp
shr
mov
cs
inc
std
mov
cmc
scas
mov
(bad)
aas
jmp
cld
fisubr
mov
cmp
pop
sti
xlat
mov
mov
ins
jbe
pop
mov
cmp
sbb
jne
add
push
cld
sar
(bad)
std
jg
and
xlat
outs
bnd
sbb
xlat
outs
hlt
jmp
sbb
cmp
xchg
jle
hlt
repz
sti
lahf
dec
aas
inc
cli
stc
mov
inc
call
(bad)
pop
add
(bad)
jg
cli
cmps
aam
scas
icebp
fcmovnbe
outs
lahf
ror
dec
cli
call
dec
mov
ins
sbb
push
dec
jecxz
pop
dec
mov
lds
mov
inc
in
mov
lea
hlt
rcl
shr
adc
pop
aas
jg
std
jg
das
push
jle
cli
in
ja
or
jl
cmps
femms
out
loopne
jg
ds
jecxz
es
bound
sbb
cld
jne
sbb
cmc
(bad)
cmp
repz
out
jg
(bad)
test
xor
call
out
lock
jecxz
jmp
dec
out
fild
(bad)
jnp
sub
imul
into
scas
icebp
jmp
jmp
clc
sub
idiv
inc
sbb
pop
aas
imul
sbb
fsub
pop
mov
jg
outs
std
sbb
neg
out
loopne
pop
sti
xlat
clc
outs
jle
push
dec
xchg
xchg
fstp
jmp
xor
icebp
xor
pop
mov
data16
ror
cld
xor
pop
or
stc
dec
cmc
out
dec
inc
add
std
mov
jmp
int
xchg
addr16
jle
dec
popa
hlt
or
jp
add
(bad)
jnp
hlt
aam
cli
fstp
add
outs
fwait
sbb
call
inc
dec
rol
mov
retf
add
xor
lock
(bad)
(bad)
outs
sar
lods
inc
push
and
outs
xchg
mov
(bad)
mov
jecxz
std
sbb
dec
cdq
test
inc
ret
fist
ret
stc
lods
xor
(bad)
push
mov
push
or
aas
inc
ret
(bad)
ror
add
(bad)
sub
(bad)
sti
jg
movs
in
sti
call
movs
(bad)
movs
fist
inc
xchg
ficomp
ds
dec
hlt
iret
mov
push
push
add
pop
pusha
push
popf
scas
jg
shl
sbb
sbb
sbb
sbb
loope
mov
push
add
aaa
inc
add
test
dec
mov
shl
xchg
inc
inc
mov
jle
fisttp
lock
mov
shl
mov
(bad)
mov
xchg
(bad)
sbb
out
clc
mov
(bad)
mov
rol
cmp
pop
cmps
mov
cli
test
xchg
dec
push
es
aas
mov
sub
mov
clc
out
iret
daa
call
push
cli
shl
jg
rol
sti
lods
ins
fstp
mov
outs
lahf
(bad)
loope
xor
dec
add
(bad)
cmps
dec
jle
fild
std
in
lock
das
shl
stc
pop
std
push
adc
ffreep
inc
js
movs
outs
jle
outs
call
movs
dec
loopne
add
mov
jle
hlt
pop
cli
pop
add
mul
pop
inc
push
and
pop
mov
fbld
std
je
sub
data16
or
xor
jmp
out
mov
lahf
pop
pop
mov
cmp
jne
jmp
cld
pop
ret
lahf
(bad)
ss
(bad)
dec
call
lahf
btc
cmps
call
jmp
jg
cli
call
push
jg
cmps
out
mov
ins
push
movs
lock
(bad)
sti
inc
std
sti
(bad)
xchg
mov
and
xchg
std
psubd
lods
mov
mov
stc
in
rcr
xor
pop
pop
mov
aaa
cld
xrelease
dec
jns
ja
jmp
retf
dec
add
cmc
jg
es
imul
dec
hlt
(bad)
imul
mov
lahf
inc
(bad)
call
out
out
ror
imul
dec
mov
cli
std
fild
cmp
mov
hlt
dec
call
(bad)
fdivrp
(bad)
(bad)
inc
(bad)
mov
addr16
jp
jb
push
jle
push
push
out
(bad)
jmp
dec
mov
adc
in
inc
inc
mov
scas
jmp
inc
mov
mov
xor
ret
pop
inc
pop
(bad)
fsubr
arpl
(bad)
sub
repz
jg
shr
(bad)
jmp
rol
addr16
sti
jmp
out
(bad)
call
inc
push
jg
pop
cli
sbb
(bad)
scas
sti
or
fistp
(bad)
cli
pop
add
and
mov
dec
push
in
and
xchg
add
(bad)
jg
cli
push
cli
aas
add
xchg
std
sti
sar
dec
cli
aas
xchg
cli
outs
(bad)
sbb
repz
add
add
pop
(bad)
lock
cmps
cdq
cli
jge
dec
jl
cld
cs
iret
jg
(bad)
(bad)
aaa
pusha
xor
rol
call
arpl
inc
jg
mov
mov
aaa
jle
(bad)
jns
jecxz
gs
into
adc
jl
out
(bad)
fcomip
loopne
cmps
jg
fwait
in
daa
cld
jg
mov
sub
jmp
scas
repz
mov
xlat
retf
dec
shl
std
push
outs
(bad)
outs
cli
out
aas
clc
gs
mov
sbb
ja
cli
xchg
jg
(bad)
(bad)
call
inc
jg
adc
out
inc
std
out
cmps
outs
jle
int3
in
clc
imul
xor
mov
adc
mov
out
sub
cmp
loopne
pop
out
mov
xchg
cmps
cwde
adc
fistp
mov
sti
(bad)
jns
ja
fwait
inc
sub
and
(bad)
cmps
jle
pop
not
(bad)
mov
jp
pop
call
sti
(bad)
and
xlat
out
xchg
rol
mov
or
out
repnz
test
add
adc
ret
aam
outs
neg
(bad)
mov
scas
cld
inc
call
repz
jmp
call
outs
or
(bad)
idiv
jp
mov
sub
std
cmps
pop
inc
data16
(bad)
fbld
sar
push
jge
retf
(bad)
loopne
xchg
fxch
(bad)
mov
out
pop
bound
(bad)
imul
push
lahf
cwde
call
out
jae
dec
repnz
std
mov
cli
icebp
or
sar
sbb
out
repnz
(bad)
icebp
and
mov
cld
out
leave
outs
and
pop
repnz
jmp
mov
sti
in
jle
repz
arpl
mov
loope
push
(bad)
icebp
aaa
push
(bad)
jmp
into
mov
cld
out
mov
test
(bad)
(bad)
sahf
cld
out
jle
xchg
mov
fldcw
js
neg
inc
sbb
clc
cmc
aaa
xchg
jns
scas
and
mov
mov
fistp
retf
loop
and
clc
pop
call
loope
cld
pop
daa
loopne
scas
daa
out
loopne
out
mov
(bad)
xchg
test
jmp
push
jg
std
jmp
xor
(bad)
call
dec
mov
out
cmps
iret
(bad)
out
pop
push
cli
std
aaa
rol
fisubr
pop
(bad)
cmp
push
leave
rcr
into
push
ficom
dec
push
jae
cmp
jmp
(bad)
jmp
ja
sub
inc
in
ss
fistp
cld
imul
jmp
push
jg
cli
inc
lea
(bad)
(bad)
dec
inc
pusha
pop
inc
pop
std
arpl
ret
xor
jg
cli
das
std
pop
clc
call
cld
imul
pop
retf
pop
dec
aaa
stc
inc
(bad)
cmp
adc
lods
aas
xchg
aas
cmp
imul
das
popaw
call
or
outs
inc
push
rep
cld
ja
scas
(bad)
pop
cli
jmp
push
sar
jle
(bad)
aaa
cli
pop
jle
dec
dec
mov
(bad)
fs
fwait
(bad)
jp
or
aas
pop
mov
daa
push
jecxz
xor
fistp
sub
cmp
jmp
mov
lock
jle
in
cmps
xor
jmp
sbb
cs
fild
std
pop
jmp
sti
fisubr
sti
cld
push
push
movs
xor
dec
es
jmp
jg
and
xor
cmc
fwait
(bad)
mov
sbb
sar
icebp
xchg
xor
cmp
jmp
inc
aas
add
and
or
(bad)
sti
jmp
dec
jg
dec
mov
lods
sub
(bad)
aaa
pusha
mov
scas
ror
mov
leave
ins
cld
mov
pop
(bad)
xchg
sbb
std
cmp
inc
cmp
jo
jg
cmp
call
and
or
mov
pop
sub
neg
xchg
sub
sti
mov
leave
dec
repz
dec
imul
and
std
fwait
pop
leave
dec
pop
mov
hlt
sub
dec
(bad)
cmp
dec
jmp
nop
ins
sti
cmp
(bad)
(bad)
fnstcw
mov
jmp
(bad)
aaa
sti
mov
scas
jmp
ja
sub
outs
imul
or
outs
push
popf
push
jmp
sti
mov
sar
push
cmc
scas
int
adc
sti
(bad)
mov
loopne
cmp
sub
mov
shl
and
das
rol
xor
imul
out
cmps
out
cld
ss
sti
sub
mov
dec
(bad)
outs
mov
cli
int
in
ja
fisttp
jmp
loopne
fild
les
rol
repz
jl
test
or
(bad)
jmp
std
lahf
int3
into
scas
icebp
sbb
jmp
xor
xchg
test
sbb
aas
(bad)
sti
dec
cmp
fsqrt
cmps
or
cld
cs
pop
mov
fcomip
loopne
popa
scas
stc
out
shr
or
aaa
push
mov
dec
repz
inc
mov
jmp
cmp
leave
mov
cli
outs
std
inc
cld
(bad)
iret
cld
fcomip
sbb
movs
in
mov
test
call
xlat
and
loopne
and
jmp
sbb
stos
jg
test
mov
in
leave
jle
out
sbb
sub
cs
inc
inc
xchg
fbld
mov
(bad)
loopne
shl
mov
jmp
xchg
jmp
jb
push
std
sbb
int
jle
inc
imul
adc
dec
ds
or
imul
(bad)
pop
adc
fisttp
cli
das
jmp
cld
jle
cmp
clc
pop
jle
fistp
std
mov
jmp
xor
fistp
js
aaa
clc
mov
lock
mov
mov
dec
lock
test
jle
cmp
inc
stc
cmc
les
sti
out
or
aas
idiv
xor
mov
ss
repnz
retf
fucomip
(bad)
(bad)
jle
test
outs
or
int
cwde
dec
mov
xor
xchg
jg
sub
mov
ror
rep
clc
cmp
inc
inc
daa
sar
fmul
mov
hlt
aaa
cld
pop
jle
pop
sbb
inc
push
loopne
repnz
pop
cmp
aaa
cld
pop
jle
cli
cmp
fist
jg
fild
adc
out
cmps
(bad)
(bad)
fnstsw
not
clc
dec
jle
(bad)
cs
mov
fnstsw
add
hlt
aaa
push
dec
jg
xor
cmps
call
cmp
sti
aas
mov
call
std
call
mov
sti
xor
cli
stc
mov
jmp
sar
sub
push
xchg
jle
xchg
int
push
cld
cmps
movs
call
add
ja
daa
arpl
jle
hlt
mov
jle
stc
adc
jbe
add
sbb
sbb
addr16
cli
pop
stc
dec
std
sbb
push
hlt
(bad)
aas
hlt
xlat
or
push
ds
jmp
(bad)
out
mov
sahf
das
lods
popf
stc
or
dec
dec
push
dec
sub
repz
sub
jge
cmps
movs
jmp
sub
cli
fcomip
jg
or
or
clc
sub
lahf
test
jg
dec
cli
push
mov
pop
retf
push
mov
out
stc
in
or
ja
aas
(bad)
jl
jecxz
es
sti
retf
mov
and
and
icebp
outs
sub
dec
cmp
cmp
inc
mov
aas
mov
(bad)
fsqrt
jne
pop
aam
sar
xor
popf
aas
clc
out
adc
cmps
arpl
cli
dec
jmp
clc
jne
neg
fnstsw
idiv
lea
sbb
repnz
loopne
icebp
pop
out
loopne
(bad)
aas
jns
inc
cmp
(bad)
cmp
fnstsw
imul
or
cli
cmc
pop
bound
dec
dec
cmp
and
xchg
mov
xor
ins
jg
cli
(bad)
dec
iret
(bad)
pop
jmp
aas
out
out
pushf
mov
hlt
das
dec
paddw
mov
pop
sti
pop
xchg
pop
(bad)
sbb
data16
cmp
jle
jge
sub
(bad)
pushf
fsubr
cmp
ss
xchg
sahf
rcl
jle
in
adc
cli
or
sbb
add
(bad)
fild
lock
call
out
adc
(bad)
sti
shr
enter
hlt
jg
mov
jl
sbb
repz
shr
jg
jge
sti
push
cmc
fld
dec
dec
(bad)
ins
push
jno
rcl
cmp
clc
add
popa
xor
fdiv
out
repnz
lahf
(bad)
call
xlat
clc
dec
cli
(bad)
cmp
jg
(bad)
jmp
nop
dec
jle
mov
sub
or
mov
aaa
std
rcl
mov
cld
sbb
repnz
xchg
shl
in
xchg
dec
pop
cmc
imul
clc
frstpm(287
add
dec
ret
cmp
mov
lahf
icebp
out
and
inc
mov
lock
retf
paddw
std
(bad)
clc
push
hlt
test
jmp
(bad)
sbb
cld
cs
pop
jg
scas
sti
sti
movs
sbb
out
jmp
ret
(bad)
lea
jae
push
enter
xchg
cld
imul
add
out
sub
pusha
aam
hlt
cmps
movs
(bad)
(bad)
pop
and
ins
sar
sar
ins
into
cmp
mov
hlt
aaa
clc
pop
movs
jmp
mov
popa
(bad)
mov
(bad)
cmp
repnz
and
stc
mov
ins
xchg
test
xor
(bad)
fdivr
test
xlat
fld
push
div
xchg
sbb
(bad)
inc
(bad)
in
daa
repnz
out
ret
mov
jmp
cld
mov
rol
pop
and
xor
(bad)
jmp
int
or
inc
in
jg
int
out
das
pop
popa
add
dec
out
std
xchg
repz
cmp
icebp
push
sbb
push
jae
sub
mov
fldenv
dec
push
in
mov
jmp
jecxz
inc
(bad)
dec
jle
adc
scas
int
push
cmp
jne
repz
add
call
cli
push
outs
adc
stc
stos
jmp
std
call
and
(bad)
fbld
mov
xchg
jle
dec
mov
sbb
inc
push
jg
xchg
aam
lahf
test
out
xor
test
sbb
or
cli
or
jg
mov
call
inc
das
cmps
inc
inc
inc
cmp
repz
cld
fild
addr16
jo
dec
repz
aad
inc
(bad)
jbe
xchg
and
call
add
clc
pop
idiv
mov
(bad)
mov
clc
sbb
(bad)
(bad)
div
lahf
xchg
ds
mov
push
jmp
jmp
cmps
repnz
pop
int3
pop
inc
add
test
cld
cmp
inc
fs
ds
fild
int3
(bad)
cs
and
outs
or
xchg
sbb
popf
std
cs
sar
push
jle
icebp
gs
aas
sub
sbb
outs
stos
shr
pop
mov
jmp
dec
loope
cs
xor
sub
push
pop
std
cwde
mov
dec
scas
add
std
jp
mov
pop
inc
out
cld
leave
shr
jmp
dec
jg
sub
mov
nop
aam
addr16
inc
retf
outs
repz
add
cmc
outs
sbb
lea
fcomip
aaa
clc
in
mov
out
shl
rol
jg
dec
out
(bad)
ja
sbb
jo
(bad)
es
push
mov
jg
(bad)
les
popa
and
jg
(bad)
push
push
push
hlt
neg
push
jo
inc
push
cmp
sub
enter
mov
cld
sbb
loope
lea
std
lea
std
lea
(bad)
cwde
call
lea
pop
jmp
inc
ss
scas
ins
(bad)
xor
jg
(bad)
jmp
call
inc
ss
pop
jecxz
push
jns
int
mov
pop
mov
add
sbb
push
pop
ins
(bad)
js
das
cmps
scas
push
shr
mov
cmc
fwait
cld
out
inc
dec
gs
jmp
pop
mov
adc
cmps
mov
cld
(bad)
ds
sti
jg
xchg
pop
xor
outs
sub
adc
pop
movs
pop
xchg
hlt
aaa
ret
pop
(bad)
mov
push
mov
mov
clc
push
callw
es
ins
std
test
add
gs
fistp
and
cmc
mov
shr
pop
(bad)
cli
mov
repz
std
ficomp
mov
ret
mov
cmp
mov
call
inc
clc
cmps
jg
xor
mov
jg
std
call
pop
inc
(bad)
jmp
std
movs
dec
icebp
xlat
clc
jecxz
repz
movs
ja
adc
addr16
jmp
(bad)
loop
hlt
aaa
pop
xchg
push
jmp
(bad)
hlt
dec
cmc
fwait
sar
inc
pop
mov
(bad)
call
jecxz
sbb
cli
inc
push
aas
jmp
imul
sbb
pop
imul
outs
hlt
mov
(bad)
push
jg
mov
mov
(bad)
mov
mov
out
cmps
jg
(bad)
data16
sahf
std
xchg
pop
repnz
cld
idiv
inc
jg
cs
(bad)
sbb
push
fist
das
or
sar
sbb
dec
sub
(bad)
fist
(bad)
cld
call
and
mov
sar
xlat
pusha
ds
inc
shl
mov
in
lea
push
dec
stc
push
js
inc
xor
in
or
pop
mov
pop
std
pop
cmp
jo
push
sahf
loop
movs
lods
push
call
jmp
push
lahf
ja
jge
push
clc
icebp
sbb
loopne
out
jecxz
xchg
in
outs
(bad)
leave
add
dec
push
dec
call
cs
xchg
cld
xor
test
je
repz
cdq
mov
repnz
out
movs
fcomip
rcr
inc
(bad)
ret
xor
clc
imul
fistp
jg
scas
mov
add
loopne
push
cmp
and
rep
je
xchg
dec
imul
xor
rol
add
mov
std
dec
xchg
jle
repz
loopne
or
cmp
or
cdq
cld
inc
jmp
inc
(bad)
pop
clc
das
std
jbe
shl
loop
fild
mov
and
cs
jg
cli
jnp
fiadd
jns
mov
aaa
(bad)
jl
sub
inc
rol
pop
inc
(bad)
jmp
std
jmp
(bad)
(bad)
jge
(bad)
jg
(bad)
dec
sar
jmp
aas
clc
mov
mov
psubsb
mov
cld
dec
dec
jg
xlat
ret
xor
jg
std
repz
inc
lahf
sub
lock
hlt
imul
jle
jg
clc
out
cld
aas
push
in
mov
xor
cmp
aas
inc
dec
mov
icebp
iret
loop
and
pop
mov
std
jle
outs
cmp
fistp
clc
out
mov
or
pop
mov
pop
mov
pop
bnd
es
in
xlat
cmp
jae
(bad)
mov
(bad)
out
aas
pushf
(bad)
call
aam
scas
movs
icebp
xchg
jne
xor
shl
das
std
cld
fucomp
out
add
in
out
cmps
lahf
dec
test
cmp
cli
sti
aas
cmps
jbe
es
cld
jae
das
pop
and
pop
ror
xchg
neg
inc
ins
(bad)
jns
jmp
jg
inc
hlt
stc
fisttp
jmp
pop
call
mov
(bad)
fbld
xor
mov
rcr
jmp
(bad)
fcmovnbe
(bad)
movs
and
fadd
mov
push
mov
aaa
stc
sub
mov
push
jl
fwait
(bad)
fcomip
addr16
pushf
mov
rcr
and
inc
push
push
inc
neg
call
mov
fist
lahf
cld
repz
leave
sar
mov
(bad)
fwait
xor
pop
idiv
test
rcr
add
sbb
std
or
mov
mov
cld
mov
addr16
ficom
outs
rcl
movs
retf
pop
push
dec
in
jb
xchg
adc
scas
lahf
rcl
dec
jecxz
jo
ja
inc
clc
rol
pop
aaa
div
xchg
(bad)
jmp
ss
xchg
scas
pop
repz
arpl
or
stos
mov
aaa
mov
(bad)
popf
pop
out
clc
addr16
into
stos
pop
cmp
or
gs
cmp
pop
cld
push
mov
jle
or
sbb
mov
jg
movs
fistp
inc
je
(bad)
in
jmp
mov
scas
fucomip
xlat
cli
xor
and
sar
mov
jmp
scas
shl
(bad)
dec
or
rcr
mov
xchg
push
(bad)
pop
aam
clc
pop
js
iret
ret
and
mov
sbb
pop
adc
sti
ja
sbb
stc
xchg
add
jns
cmp
gs
jmp
or
repz
mov
adc
out
(bad)
fsubr
cwde
stc
xlat
nop
out
cmps
fbld
push
sbb
mov
jg
xlat
xchg
fsub
pop
cli
pop
cmp
sar
not
xor
or
jg
jmp
fsub
(bad)
cld
cli
jo
cmp
mov
lods
pop
inc
(bad)
xor
pop
sahf
sar
pop
sar
jg
cli
jg
imul
jg
hlt
in
mov
dec
(bad)
and
es
sar
icebp
and
lods
fisttp
jge
loope
pop
xchg
and
enter
ins
lods
(bad)
ds
in
outs
xchg
cmps
mov
push
(bad)
loopne
rol
mov
add
repnz
mov
movs
pop
std
mov
mov
add
outs
dec
mov
xchg
fild
das
add
in
mov
clc
cdq
aas
xor
adc
out
jmp
push
jg
dec
cdq
and
mov
std
cs
cmp
sub
clc
mov
mov
(bad)
loop
fist
test
pop
cld
stos
es
popf
adc
adc
aas
lock
ss
push
sti
sbb
mov
test
fcom
mov
jmp
lods
std
fwait
hlt
jnp
aaa
sar
pop
mov
imul
jmp
out
ds
and
dec
cwde
mov
sbb
mov
div
cmp
pusha
mov
test
loope
inc
mov
cld
cli
inc
jg
je
loopne
inc
adc
aaa
(bad)
idiv
inc
jo
cmps
cmc
popa
repz
(bad)
mov
push
cmp
mov
jg
je
adc
iret
gs
icebp
jmp
scas
ss
int3
xchg
xchg
aad
loope
lods
pop
cli
sti
aaa
out
(bad)
(bad)
mov
fs
scas
iret
jb
cmps
inc
jmp
jg
leave
mov
dec
sahf
sti
(bad)
(bad)
(bad)
dec
call
sbb
stc
sbb
or
out
pop
cli
dec
push
adc
cmp
mov
retf
mov
sub
outs
adc
stc
(bad)
fprem1
stos
fistp
call
enter
xlat
nop
xor
das
mov
call
aas
dec
sub
ret
jg
loope
jg
push
sbb
ins
div
sub
xchg
(bad)
repz
(bad)
(bad)
cmps
in
or
call
inc
jg
mov
repnz
pop
mov
sub
lock
dec
jle
xlat
dec
(bad)
sub
jnp
xchg
fisttp
call
imul
repz
inc
sbb
mov
(bad)
icebp
mov
sti
cld
(bad)
xchg
mov
cmc
paddd
jno
adc
cwde
push
mov
aaa
(bad)
fisttp
dec
cwde
pop
paddd
(bad)
xchg
call
jle
sbb
pop
stc
out
movs
push
sti
mov
mov
add
jmp
mov
dec
cli
xor
jg
imul
aam
adc
lahf
xchg
dec
and
clc
mov
pop
movs
cmp
push
jg
popf
aas
cmp
inc
jle
or
sub
xchg
mov
out
(bad)
adc
push
out
fucomip
sti
rdtsc
mov
aad
inc
pop
iret
and
retf
pop
dec
scas
in
xlat
les
fstp
rol
push
mov
jnp
loopne
xchg
jae
mov
arpl
es
mov
or
mov
cwde
xchg
loopne
adc
daa
in
jecxz
in
jecxz
into
(bad)
dec
pushf
(bad)
xchg
mov
xchg
dec
mov
movs
push
ds
xlat
(bad)
jecxz
imul
cld
dec
mov
xchg
repnz
daa
in
cmp
call
(bad)
imul
cld
mov
lds
mov
mov
pop
or
xlat
arpl
(bad)
repz
sar
rcr
(bad)
lea
pop
push
fs
dec
stc
xor
push
shr
mov
loop
jle
leave
mov
neg
ss
xlat
test
std
lahf
dec
(bad)
scas
ja
cmps
(bad)
fbld
cmp
jmp
adc
std
cmp
mov
popa
cmp
inc
inc
xor
sti
xlat
adc
stc
scas
and
je
in
(bad)
std
xor
call
cmp
mov
and
cmp
sti
pop
push
cld
rcl
(bad)
out
aaa
xchg
les
leave
fdivr
mov
sar
clc
mov
dec
movs
(bad)
cmp
and
jbe
out
pushf
cmc
lahf
xchg
(bad)
jne
or
cld
icebp
repnz
leave
xor
fist
xchg
sub
xor
xor
inc
jl
inc
xchg
ret
das
stc
fwait
aas
jmp
xor
mov
sti
je
not
xchg
mov
(bad)
lahf
call
xlat
cmp
dec
sub
(bad)
sahf
mov
movq
div
sbb
push
loopne
cld
mov
fisubr
clc
mov
xlat
out
repnz
or
fwait
cli
aaa
inc
repnz
fisubr
leave
xor
and
pop
(bad)
xchg
test
sar
jmp
jmp
in
mov
push
ret
jb
neg
inc
jae
out
mov
nop
cmp
push
pop
add
or
(bad)
push
jg
sbb
adc
cmp
popa
mov
ret
jle
(bad)
xor
mov
clc
(bad)
add
jno
aas
xchg
test
shr
(bad)
bswap
xor
ffreep
scas
adc
cwde
call
ja
or
or
outs
and
jle
cli
aas
call
dec
(bad)
fsubr
pop
stos
lahf
push
call
in
ja
movs
rcr
test
iret
mov
addr16
scas
push
xchg
(bad)
mov
pop
mov
std
sbb
or
cld
sbb
addr16
add
lahf
pop
jae
mov
(bad)
jmp
cli
(bad)
out
repnz
sti
nop
cmp
jle
retf
jge
and
mov
scas
jg
cmp
jg
test
(bad)
sbb
cmp
lods
xor
jle
leave
(bad)
cld
sbb
or
xor
mul
jg
mov
jmp
dec
push
(bad)
push
aas
jle
idiv
mov
mov
dec
rcl
cmp
pop
inc
(bad)
jno
mov
lahf
dec
mov
int
lods
repnz
cmp
xchg
call
test
sti
mov
clc
arpl
mov
sti
ret
dec
stos
ja
sbb
or
call
jg
xchg
das
shl
call
jne
ja
sbb
ja
std
leave
movs
xchg
addr16
stc
sti
(bad)
jns
cmc
sbb
into
aam
cmp
test
(bad)
movs
jle
inc
fcomp
sbb
outs
pop
in
aaa
jg
mov
cdq
repz
push
mov
int
bound
xchg
aad
adc
test
pushf
xchg
movs
push
stc
aad
inc
stc
repnz
cli
call
test
cld
xlat
data16
retf
mov
or
cwde
out
stc
xlat
xchg
mov
in
aas
test
(bad)
cmc
aam
cli
sti
fbld
cli
cmc
stc
scas
and
not
adc
ret
add
or
call
hlt
(bad)
dec
jae
mov
jmp
push
inc
out
and
pop
mov
adc
mov
mov
(bad)
aas
movs
(bad)
jg
(bad)
jg
inc
or
adc
repz
push
sbb
aaa
mov
(bad)
data16
bnd
dec
xchg
(bad)
push
pushf
and
outs
push
(bad)
cld
imul
nop
(bad)
jno
out
shl
inc
cli
xchg
repz
addr16
loop
mov
cli
dec
std
lahf
clc
sti
iret
xchg
xchg
jg
jl
ss
jg
sbb
(bad)
xchg
inc
lock
xor
(bad)
aaa
cli
rcl
aas
hlt
out
ret
or
out
scas
into
sub
loope
mul
sbb
mov
xor
and
xor
scas
jg
pop
test
outs
inc
and
cmp
out
dec
pop
sahf
cld
pop
jo
jns
cld
(bad)
js
cli
imul
lods
das
(bad)
clc
inc
pop
fmulp
rol
jg
xchg
stc
sbb
xchg
dec
leave
sbb
pop
outs
mov
lahf
fimul
sar
pop
mov
and
(bad)
mov
mov
addr16
aad
(bad)
cmps
cmps
mov
loope
aas
ret
mov
dec
std
mov
in
movd
jmp
cmps
or
mov
dec
fist
cmp
sbb
out
dec
imul
out
sub
data16
jmp
jl
sti
jg
cmp
or
outs
bnd
repz
jg
std
cmc
aaa
xor
lahf
cld
cs
sbb
pop
and
jg
inc
shr
outs
fimul
rcr
add
call
pop
psubusb
mov
iret
lock
fbld
xor
jmp
movs
sbb
dec
jle
cli
or
dec
(bad)
xchg
jne
xor
sti
xor
stos
fisttp
mov
mov
fisttp
jg
cld
push
xchg
ss
jle
fisttp
outs
jmp
std
inc
mov
xchg
jnp
jg
add
inc
sahf
cli
adc
jmp
xchg
(bad)
push
jg
xor
jmp
sti
sbb
jge
stos
stc
stos
(bad)
movs
mov
mov
xor
jg
pop
xlat
inc
inc
push
cmps
cmp
pop
(bad)
xor
mov
push
jle
sbb
out
dec
(bad)
aas
cld
xor
hlt
imul
aad
mov
out
add
or
pop
mov
mov
fstp
inc
(bad)
mov
mov
mov
push
inc
cmp
js
jg
push
sbb
pop
idiv
xor
mov
xchg
aam
scas
xchg
and
adc
jne
push
xchg
(bad)
aad
add
push
mov
dec
dec
inc
xchg
inc
jl
cdq
add
retf
xchg
into
add
cld
addr16
mov
sti
(bad)
xor
jg
pop
or
cmc
(bad)
std
(bad)
xlat
ror
out
(bad)
(bad)
out
int
dec
jg
inc
jns
pop
sub
(bad)
jmp
xor
shl
inc
mov
clc
imul
mov
popf
pop
cli
sbb
sti
sbb
jg
scas
cmp
ror
xchg
mov
aas
sar
dec
hlt
(bad)
aas
xchg
jmp
ins
mov
dec
push
in
add
mov
cmps
dec
out
int3
lahf
ret
cmc
lahf
sbb
add
(bad)
aaa
push
(bad)
jmp
inc
(bad)
jecxz
jecxz
out
idiv
jl
xchg
and
pop
or
dec
jae
and
dec
std
scas
imul
pop
call
pusha
jae
inc
dec
push
inc
movs
jbe
sub
lahf
mov
xor
scas
sub
jl
lahf
(bad)
(bad)
lods
push
imul
mov
mov
jmp
sar
jg
cli
aas
jne
push
das
jle
xor
enter
jmp
cli
repz
mov
into
push
cld
lods
dec
pusha
sbb
pushf
xlat
pop
out
cmc
inc
xor
neg
inc
pushf
jnp
sbb
sub
icebp
fwait
mov
xchg
aad
pop
call
and
aas
cmc
imul
icebp
or
mov
and
jnp
or
jnp
loope
sbb
push
sbb
outs
cmps
imul
jmp
sbb
gs
pop
jecxz
cld
int
cdq
pop
call
clc
adc
test
xchg
mov
pop
mov
xchg
(bad)
sar
mov
ret
and
iret
(bad)
mov
call
call
into
jle
pop
jmp
jle
in
call
in
psrad
mov
adc
aaa
cli
mov
add
(bad)
push
add
retf
retf
call
es
inc
or
or
push
lock
cmp
push
or
mov
xchg
test
scas
clc
xor
fstp
xchg
cld
call
push
cs
sbb
push
ins
push
hlt
jg
mov
aas
icebp
jg
pmaddwd
aas
imul
stos
std
ins
xchg
pop
lock
icebp
aaa
stc
jne
adc
jmp
mov
lea
inc
out
jle
fisttp
mov
mov
fucomip
loopne
jbe
imul
cld
mov
je
dec
enter
jle
and
mov
sbb
pushf
mov
idiv
jg
outs
fbld
(bad)
adc
jmp
add
xlat
push
int3
jle
std
jmp
dec
xor
shr
sahf
aad
(bad)
xlat
dec
jg
jmp
cld
cli
mov
jge
lods
cld
cli
pop
sbb
cmc
(bad)
cmc
pop
add
jmp
addr16
call
inc
pop
jle
js
mov
idiv
fstp
fst
lds
clc
xor
pop
call
clc
sti
jg
xchg
jge
mov
sub
lea
mov
out
(bad)
imul
into
outs
(bad)
jmp
pop
ja
bound
or
loopne
cmps
call
(bad)
dec
call
out
jg
std
lahf
xlat
scas
paddd
xor
and
sbb
mov
sub
daa
xchg
cli
stc
repz
loopne
lock
aas
mov
std
cmp
mov
lds
xchg
aaa
jle
hlt
shr
les
sbb
add
mov
clc
pop
adc
jg
out
xlat
fstp
push
repz
call
and
fwait
in
sar
imul
lahf
neg
loopne
sbb
lods
and
pop
clc
adc
in
fbld
std
outs
pop
loope
or
imul
fiadd
mov
ins
stos
fistp
std
lahf
or
lahf
iret
data16
imul
lods
imul
mov
xor
dec
call
dec
sahf
into
fisttp
xchg
hlt
(bad)
call
(bad)
sti
popf
jmp
and
pop
mov
pop
push
fdivr
cli
or
addr16
dec
cli
cld
mov
or
in
ja
cmc
cmps
movs
(bad)
or
fs
inc
ud0
mov
test
xor
outs
dec
xor
sbb
mov
mov
ja
mov
hlt
psubusw
(bad)
mov
sti
test
scas
mov
pop
js
pop
cld
pop
cmps
in
outs
xchg
(bad)
movs
lahf
mov
lock
es
dec
or
js
jg
jmp
push
mov
das
xlat
(bad)
(bad)
mov
jg
fucomip
or
inc
mov
jne
iret
std
pop
sub
or
popa
or
cmp
jnp
add
jmp
fwait
(bad)
cmp
xchg
in
arpl
inc
test
fwait
cmp
das
pop
mov
(bad)
std
sub
idiv
inc
fs
mov
and
mov
jge
xlat
in
clc
mov
hlt
sbb
pop
test
or
xlat
nop
in
sar
scas
(bad)
call
sbb
ror
iret
mov
fild
out
and
fwait
add
(bad)
scas
cld
mov
or
scas
xchg
inc
movs
(bad)
mov
jnp
test
outs
(bad)
bnd
jg
pop
ret
sub
mov
loope
(bad)
fisttp
out
cmp
dec
std
out
test
and
pop
das
ins
adc
dec
neg
std
mov
push
mov
sbb
dec
fstp
movs
mov
into
shr
mov
scas
mov
mov
imul
jae
and
mov
dec
popf
out
sti
test
stos
mov
jle
rcl
pop
mov
nop
(bad)
jg
imul
repnz
jl
or
xchg
xor
icebp
aaa
std
sbb
idiv
inc
mov
pop
cld
sbb
std
pop
inc
(bad)
call
lods
jg
push
push
inc
int3
pop
mul
outs
loopne
cld
in
call
cwde
jle
outs
jmp
lea
dec
or
cmp
pop
enter
cmp
pop
pop
dec
(bad)
out
test
aaa
xor
cwde
call
jp
imul
(bad)
int
push
das
and
not
in
and
loope
xchg
jne
daa
sbb
pop
sub
scas
cwde
scas
fcomip
(bad)
(bad)
std
aas
xchg
loope
fistp
mov
fsubr
mov
ror
loopne
jmp
stc
cli
or
cld
sbb
jmp
(bad)
or
or
fld
mov
xor
imul
push
(bad)
pop
repnz
call
shl
jmp
pop
repz
sbb
jle
cmp
nop
push
xchg
mov
nop
dec
int3
out
je
repz
adc
sar
lock
ror
fild
ror
fisttp
repz
jmp
push
jg
daa
jne
ds
jg
push
fiadd
(bad)
out
sub
hlt
scas
retf
mov
cmp
mov
outs
mov
xchg
jmp
sbb
(bad)
mov
jae
imul
dec
call
pop
repz
mov
cdq
push
adc
push
std
cmp
cmps
jg
xor
mov
js
mov
sub
repz
call
xchg
popf
pop
sar
call
std
or
loope
js
dec
jmp
out
jg
or
psubsb
dec
(bad)
fcmovu
inc
add
jnp
mov
add
adc
jmp
dec
sub
aas
cs
lods
xor
shl
or
jge
xchg
(bad)
dec
fistp
mov
or
fnstsw
ja
fimul
outs
add
jg
xchg
push
stc
jne
push
jmp
imul
pop
jmp
cmp
dec
es
out
dec
fild
pushf
(bad)
fild
icebp
stc
xor
cwde
stc
sti
or
xlat
in
xchg
push
es
or
sti
lea
cmp
sbb
ss
hlt
(bad)
clc
sbb
outs
xchg
push
clc
or
push
imul
push
jle
fistp
cld
imul
xor
mov
cwde
push
pop
leave
cdq
test
cmc
cmps
movs
(bad)
fidivr
or
das
jmp
mov
ds
pop
pop
or
jg
push
movs
(bad)
sbb
call
stc
out
mov
call
scas
outs
add
cmp
mov
dec
sub
aas
(bad)
std
mov
pop
neg
mov
sar
(bad)
(bad)
cmp
push
push
imul
cwde
dec
cdq
inc
cdq
ds
push
push
mov
movs
pop
add
mov
inc
sbb
out
(bad)
(bad)
xor
inc
cmp
xlat
adc
test
lahf
mov
lahf
sub
icebp
repnz
cld
sbb
scas
xor
cs
pop
jg
scas
sti
jnp
cs
rcl
std
(bad)
(bad)
movs
stc
pop
cld
imul
fucomip
int3
inc
jmp
xor
repz
dec
leave
outs
clc
jmp
cli
mov
mov
(bad)
and
adc
add
mov
add
gs
idiv
xchg
(bad)
into
inc
outs
mov
outs
test
jmp
jo
cmc
pusha
bnd
jp
out
add
push
clc
es
push
aas
inc
out
sbb
test
ja
dec
into
xchg
jne
pop
dec
jg
sbb
int
out
pop
inc
inc
mov
or
cli
dec
call
cli
(bad)
mov
test
mov
mov
(bad)
(bad)
es
mov
rol
jp
push
or
pop
lea
ins
jle
js
and
cmp
out
fist
std
idiv
int3
(bad)
ja
pop
cli
inc
mov
outs
or
fisttp
(bad)
outs
icebp
cmp
je
jmp
jg
mov
repnz
jg
and
scas
dec
(bad)
daa
pop
adc
(bad)
cmp
xor
push
cmp
inc
out
scas
pop
cli
fwait
(bad)
call
xchg
ret
jnp
jg
cs
jmp
iret
lahf
sti
imul
sar
jg
(bad)
jle
lahf
popa
push
jmp
cli
dec
(bad)
jmp
inc
cld
sbb
lahf
dec
mov
cmp
rcl
fcomip
ja
(bad)
or
popaw
loopne
ret
stos
idiv
imul
in
(bad)
into
data16
adc
pop
addr16
test
inc
shr
push
mov
xchg
sbb
fild
mov
xlat
mov
push
mov
dec
dec
mov
outs
(bad)
jg
jg
adc
mov
adc
clc
pop
push
push
ss
sbb
xchg
mov
push
sub
push
and
ret
mov
movs
adc
jg
test
rcr
(bad)
out
shr
std
data16
push
push
(bad)
jne
fwait
aas
sub
(bad)
pop
jg
test
jg
cli
sti
cld
push
out
mov
mov
dec
push
es
sbb
(bad)
out
into
(bad)
mov
add
xchg
push
dec
jmp
xchg
xor
loope
out
mov
cli
rcl
jg
fild
enter
jg
scas
sbb
inc
push
xchg
inc
sbb
sti
es
test
iret
mov
jmp
push
push
gs
cmps
std
dec
popf
jns
jne
pop
inc
lods
jle
mov
pcmpeqw
pop
jmp
aas
pop
aas
xchg
shl
cmp
lock
cld
mov
cmp
jg
jge
fcomi
jl
jecxz
dec
(bad)
lods
fistp
js
jg
(bad)
stos
xchg
dec
(bad)
sti
pop
ret
(bad)
in
dec
sti
jne
out
hlt
outs
std
xor
out
push
arpl
jle
jno
aam
std
dec
mov
xor
jg
loopne
movs
inc
cmp
mov
mov
xchg
mov
popa
push
adc
jecxz
inc
mov
lea
xor
clc
inc
jle
pop
(bad)
mov
jmp
and
jecxz
sar
cmps
cwde
add
dec
mov
mov
inc
(bad)
iret
shr
paddb
jle
dec
pop
push
lods
mov
mov
cld
mov
add
lock
(bad)
jp
adc
add
cdq
jae
push
xchg
jmp
mov
es
and
ja
rcr
pushf
icebp
mov
mov
clc
fstp
add
mov
sub
into
rol
hlt
pop
out
ja
and
retf
retf
push
inc
jmp
cmp
dec
jmp
push
mov
dec
clc
adc
cmps
aas
sub
xlat
xchg
sbb
cdq
jmp
in
in
jecxz
or
adc
mov
std
sbb
mov
rcl
jmp
mov
movs
scas
call
es
dec
ja
(bad)
in
cmp
dec
cdq
xchg
jmp
inc
xor
jmp
pop
and
or
(bad)
pushf
loope
push
pop
fwait
mov
xor
add
clc
or
push
dec
push
cmps
jle
ffreep
nop
lahf
cld
sbb
push
mov
(bad)
cld
mov
out
mov
mov
out
push
mov
and
enter
(bad)
movs
(bad)
sub
push
jecxz
mov
data16
(bad)
jle
pop
mov
cli
arpl
jg
dec
in
(bad)
fldcw
aas
(bad)
sar
arpl
aas
out
stc
(bad)
jle
outs
outs
pop
sti
pop
jle
dec
xor
fs
clc
cmc
aaa
cld
jne
xchg
std
mov
in
xor
(bad)
std
cs
sub
lahf
aas
and
out
std
call
scas
xor
xor
pop
cmp
mov
jle
leave
xlat
in
cmp
(bad)
jae
mov
test
iret
inc
sub
out
xlat
add
jmp
xor
pop
jl
movs
push
jg
aad
jg
jmp
fld
jno
stos
xor
mov
cmp
pop
ins
inc
movs
icebp
sbb
add
mov
jl
(bad)
or
mov
inc
jle
(bad)
mul
fistp
mov
cmps
mov
imul
ins
repnz
std
pop
out
out
popa
cmp
ror
popf
pmuludq
cld
sbb
ds
xchg
mov
imul
ret
mov
mov
enter
outs
jmp
push
idiv
mov
inc
jmp
mov
jle
mov
movzx
push
ret
mov
xlat
sti
test
(bad)
stos
mov
sar
mov
call
scas
dec
out
cld
call
aas
lea
lea
cwde
scas
scas
jle
fistp
clc
inc
pop
sbb
mov
out
add
fdivr
mov
imul
sbb
out
jg
iret
std
outs
jge
jns
mov
xor
mov
add
jl
jp
jmp
popa
fbstp
fstp
jno
xlat
cmp
imul
jne
sbb
in
ss
mov
out
loopne
rol
adc
shl
clc
std
xlat
(bad)
push
jge
sub
movs
test
pop
jmp
stc
int
or
(bad)
pop
out
mov
nop
(bad)
das
or
jmp
xor
push
lock
clc
mov
inc
test
(bad)
mov
sbb
sub
push
shl
out
inc
pusha
jg
jns
mov
cmp
push
test
sbb
cld
imul
jl
cld
ds
(bad)
shl
nop
call
or
sub
jmp
sti
pop
pusha
into
jg
cs
cmp
neg
dec
out
sbb
sbb
scas
push
call
cmp
scas
fistp
mov
(bad)
lea
mov
ja
dec
ret
stc
sub
out
(bad)
das
adc
cmp
jmp
cmp
xchg
jae
std
imul
movs
hlt
shr
out
hlt
imul
test
cli
jecxz
fbld
pop
out
dec
jg
or
out
std
mov
pop
adc
stc
mov
neg
shl
mov
dec
pop
jle
aas
call
ret
pop
jmp
cld
data16
fucomp
(bad)
das
popf
(bad)
jg
cli
in
mov
jp
es
bound
add
jmp
jge
(bad)
shl
loope
stc
stos
jle
(bad)
pop
cwde
(bad)
adc
cmp
cld
jp
imul
ins
pop
add
out
repnz
call
jl
cmp
adc
cli
jnp
cmc
mov
sti
call
cli
jecxz
repz
jg
jo
scas
or
mov
repz
repnz
add
das
mov
adc
bound
cld
cs
mul
movs
mov
or
scas
mov
js
rcr
push
mov
repz
rcr
punpcklwd
mov
aas
and
aam
loop
push
clc
pop
(bad)
aam
add
out
ja
or
push
out
icebp
fstp
js
aaa
lds
ja
repz
shl
jp
aaa
mov
mov
cli
test
inc
xor
stc
push
call
sub
pop
jecxz
cli
sti
das
mov
cmps
mov
adc
(bad)
mov
mov
sahf
ds
cmps
(bad)
jmp
(bad)
inc
out
clc
shl
cdq
(bad)
push
jmp
push
cmp
ss
mov
popa
cli
fwait
popa
adc
aaa
xor
ja
push
lods
popf
(bad)
push
loop
dec
fbld
fdivr
cmc
jle
aas
clc
xlat
or
pop
pop
sub
mov
mov
jle
lahf
push
jl
and
mov
fcom
in
pop
or
cld
(bad)
mov
loopne
cmps
dec
pop
sub
sbb
pop
jmp
(bad)
and
ins
and
js
or
push
ds
and
imul
out
cli
pop
jle
outs
sti
mov
call
sbb
test
mov
dec
stos
fistp
call
leave
jle
cli
arpl
inc
call
mov
icebp
cmps
ror
push
dec
mov
cld
inc
lods
je
movs
call
cmp
pop
mov
mov
push
cmp
or
xchg
cld
add
pop
jg
out
mov
mov
icebp
jmp
inc
xlat
mov
hlt
std
jo
jg
lods
out
add
out
daa
xor
inc
out
aas
xor
jo
mov
cmp
int
ss
sbb
in
cmp
std
rcr
scas
sti
dec
mov
or
nop
out
pop
(bad)
idiv
outs
mov
fadd
ja
leave
scas
ret
mov
cmp
in
bnd
xchg
adc
inc
pop
daa
sbb
push
icebp
repz
mov
or
adc
cmps
inc
xchg
xchg
or
std
push
jbe
jle
fisttp
(bad)
pop
sti
(bad)
call
sahf
popf
call
clc
ins
mov
pcmpgtd
pop
pop
aas
add
dec
cli
push
ds
sbb
sub
xchg
hlt
not
js
inc
cli
aas
es
xchg
inc
repz
fdiv
out
add
scas
cmc
(bad)
out
leave
das
mov
test
inc
(bad)
mov
add
in
mov
pop
int3
loop
ins
push
in
pop
std
cmp
enter
int3
(bad)
dec
mov
call
js
call
in
inc
sub
xlat
inc
outs
stc
sub
loopne
stc
xchg
inc
pushf
enter
js
les
jg
jl
mov
int3
jae
adc
adc
jmp
mov
mov
aaa
std
sar
sti
sub
add
stos
dec
xor
push
and
pop
jg
int3
adc
fistp
fnstenv
jbe
jns
sbb
enter
dec
sub
int3
push
js
jmp
pop
and
cmc
cmp
sahf
jecxz
mov
cld
ds
das
int3
and
xlat
fcmove
jmp
mov
dec
js
ret
sti
jmp
pop
push
and
imul
pop
cmp
retf
aas
cli
sbb
das
cmp
cdq
jg
adc
fistp
xor
jmp
std
pop
xchg
(bad)
xchg
xchg
stc
scas
icebp
push
outs
inc
mov
lea
adc
fstp
cmp
adc
iret
popf
fsubp
sub
repz
sub
(bad)
jno
loopne
std
and
clc
lds
cli
dec
jl
jmp
xchg
out
loopne
fadd
(bad)
xchg
movs
mov
cmp
clc
loop
(bad)
mul
mov
rol
outs
dec
pop
daa
enter
scas
mov
pop
sbb
(bad)
push
pop
std
loop
mov
cli
xchg
(bad)
mov
or
fsubr
sub
cs
mov
or
xchg
out
jg
popa
sbb
lock
rcr
pop
hlt
repz
rcr
call
fbld
jg
(bad)
mov
ror
prefetcht1
cmc
inc
rcr
repz
int
aas
or
jg
or
(bad)
xlat
push
jg
pop
addr16
leave
sub
shr
ss
adc
ins
pop
popa
jno
pop
(bad)
fucompp
aas
icebp
imul
shl
sti
into
pushf
(bad)
sar
push
(bad)
jmp
lds
(bad)
sbb
lock
mov
loope
dec
outs
mov
ds
scas
loopne
std
pop
mov
clc
jmp
pop
jno
cmps
sahf
cld
aas
dec
pop
outs
mov
cld
das
fcomp
(bad)
sbb
cli
scas
mov
inc
loop
inc
xor
mov
inc
mov
and
mov
and
pop
shl
or
pop
inc
loop
call
mov
jae
sahf
enter
pop
xchg
rol
neg
nop
repz
jecxz
std
(bad)
cmp
fild
out
mov
ret
pop
sbb
std
xchg
mov
(bad)
dec
es
out
sti
call
(bad)
std
pop
mov
stc
mov
in
xlat
cmps
(bad)
(bad)
cmp
jae
or
imul
jg
scas
adc
or
xor
das
xchg
xchg
and
add
out
iret
inc
test
not
stc
iret
(bad)
(bad)
cmp
out
inc
(bad)
call
outs
mov
jecxz
mov
movs
(bad)
jl
das
(bad)
nop
(bad)
cld
test
cli
pop
xchg
in
push
stc
add
(bad)
mov
lods
pop
mov
jg
pop
dec
repz
cld
ficomp
jg
gs
add
cmps
jl
(bad)
ficomp
jle
pusha
or
mov
add
test
rcr
sbb
(bad)
aas
mov
sti
out
dec
aas
jg
hlt
jne
push
add
xchg
retf
adc
test
pop
cmp
add
aas
adc
jl
pop
retf
fdivr
sti
add
stos
(bad)
das
shld
inc
mov
ror
jg
test
or
daa
sub
shr
mov
jmp
(bad)
fild
jg
inc
mov
jo
ficomp
nop
test
lock
xor
push
ud0
mov
fwait
sbb
and
cmc
xchg
inc
icebp
fstp
adc
cmp
js
mov
fild
pop
hlt
xchg
cmp
repz
mov
outs
mov
inc
and
out
arpl
shl
rol
and
loopne
cmp
add
std
dec
sar
mov
and
pop
mov
in
pusha
inc
(bad)
lods
pop
inc
push
les
mov
cli
call
cli
sti
mov
cli
(bad)
(bad)
imul
in
sbb
xchg
shr
jg
dec
mov
jmp
fbld
sti
pop
imul
cld
mov
das
stc
jge
dec
sbb
inc
jl
cmp
fnstsw
xchg
lds
std
rcl
(bad)
dec
cmp
iret
rcl
pop
jg
(bad)
jecxz
cld
movs
rol
cmp
mov
pop
mov
fist
mov
xor
cmp
inc
mov
movq
push
les
cmc
aas
mov
mov
(bad)
push
lock
or
je
or
outs
mov
jbe
dec
cwde
push
sub
sbb
mov
push
clc
lock
das
dec
mov
push
mov
cmp
cld
jge
int3
ins
cld
adc
and
jbe
fnstsw
pop
cmps
mov
test
xchg
nop
pop
pop
sub
mov
imul
les
pop
jnp
cmc
fwait
loopne
fist
sub
in
aam
out
imul
loopne
pop
dec
clc
repz
jmp
jge
or
fnstsw
mov
cmc
rcr
loopne
fstp
ror
call
and
or
aas
jmp
jg
call
jle
lods
mov
imul
in
sbb
call
dec
xor
mov
xchg
cmp
add
addr16
inc
pop
sbb
pop
js
js
xlat
adc
std
push
jmp
add
dec
adc
scas
ins
fidivr
mov
push
adc
cld
retf
in
das
and
adc
jmp
(bad)
adc
sbb
sbb
repnz
and
mov
jmp
jge
or
inc
fbld
adc
clc
mov
iret
inc
outs
push
fidiv
adc
lahf
in
push
cld
cmp
fisttp
mov
call
ins
std
adc
sar
into
lock
gs
add
mov
out
jg
dec
pop
retf
dec
jmp
cmp
push
popf
sbb
shr
sbb
fstp
lods
(bad)
sbb
sub
pop
icebp
pop
out
cld
call
(bad)
pop
xor
fmul
test
jl
arpl
loope
or
inc
cmp
dec
into
(bad)
lahf
dec
sub
(bad)
cmp
cli
mov
lods
jp
(bad)
sbb
iret
les
fcompp
mov
push
rcr
(bad)
push
push
mov
cmp
dec
ja
(bad)
and
and
outs
(bad)
jecxz
xor
mov
mov
(bad)
jp
jg
pop
mov
js
sar
push
fcomp
sti
popf
sbb
mov
out
scas
and
aad
cmc
fwait
cld
movs
sub
xchg
pop
jecxz
dec
cld
lahf
push
dec
mov
sar
(bad)
ds
std
push
push
xor
movs
(bad)
sbb
jge
aas
call
cli
mov
dec
test
std
call
shl
div
call
jnp
sar
aaa
dec
arpl
jnp
cli
mov
xor
xor
jg
call
or
clc
cld
xlat
(bad)
xchg
div
cmp
push
sub
inc
cmps
add
in
std
or
inc
out
jno
ret
sbb
cld
fcom
pop
inc
cwde
cld
ss
pop
lods
adc
std
imul
mov
jg
lods
jg
(bad)
arpl
mov
ds
or
std
imul
xchg
icebp
fbld
add
jg
ds
int
xor
mov
and
leave
pushf
aas
pop
call
pop
mov
cli
cmp
mul
xor
push
out
adc
inc
(bad)
fldcw
mov
loope
scas
and
icebp
xor
pop
mov
cld
fwait
std
sbb
jg
mov
xor
mov
jecxz
jle
cmp
jle
dec
hlt
inc
std
loope
fnstcw
imul
imul
mov
cmps
jmp
jg
jle
imul
(bad)
cmp
pop
cmp
fisttp
(bad)
mov
shl
dec
in
pop
shr
adc
cld
sbb
push
repz
std
sbb
cld
lahf
mov
jmp
xchg
sti
jg
mov
sbb
sar
dec
jg
shl
mov
in
into
or
cmc
imul
inc
inc
in
fdivrp
lea
add
fwait
and
pop
rcr
add
sar
jbe
adc
mov
mov
sub
daa
aaa
cmc
mov
xor
popa
rol
add
loopne
es
jmp
repnz
lahf
stos
sbb
inc
(bad)
sub
add
icebp
mov
jle
lea
hlt
mov
clc
cmps
(bad)
pop
call
imul
jg
add
mov
std
add
or
xor
push
add
push
les
mov
fsubp
pop
jle
mov
daa
jmp
je
stos
test
mov
(bad)
jne
outs
adc
and
iret
movs
clc
mov
lock
xor
sub
fnsave
enter
cmps
push
out
mov
repnz
jmp
stc
dec
mov
adc
xor
add
call
hlt
jg
and
ja
idiv
out
xlat
nop
out
(bad)
call
std
jmp
add
cli
jmp
stc
mov
cli
call
imul
(bad)
sub
inc
pop
cld
jp
adc
mov
aaa
neg
lods
(bad)
xor
push
movs
call
jl
cmp
mov
bound
lods
sbb
cmp
out
ret
mov
lock
rol
sbb
popa
jg
mov
inc
mov
scas
div
cmpps
xor
clc
inc
int3
mov
movs
pop
mov
mov
cli
dec
loop
ins
sub
(bad)
jmp
std
add
mov
out
pop
add
cwde
(bad)
sbb
(bad)
loopne
icebp
adc
lock
or
adc
add
lock
rol
outs
stos
lahf
je
pop
push
loope
cld
jg
mov
dec
(bad)
sti
pushf
stos
push
sbb
repnz
push
add
dec
mov
repz
pop
fnsave
ds
or
push
pusha
int3
mov
fdivr
call
adc
mov
push
(bad)
pop
mov
cmp
cld
sbb
(bad)
stc
jmp
lahf
fnstsw
mov
mov
add
adc
cmps
cmp
cli
mov
lea
rcr
lahf
sar
inc
mov
dec
test
mov
std
xor
jg
xchg
in
(bad)
sbb
retf
out
out
mov
xor
mov
call
mov
sbb
call
aad
mov
repz
or
jmp
(bad)
mov
int
or
mov
xchg
ds
lods
jg
out
loope
fs
jle
retf
leave
outs
sti
or
shr
ins
jle
data16
out
out
cmp
(bad)
sbb
ss
mov
stc
std
pop
clc
inc
arpl
jae
(bad)
imul
pop
mov
call
loope
outs
sub
dec
cmp
sub
pop
dec
mov
out
addr16
imul
cmp
mov
push
(bad)
fild
loop
addr16
push
ins
ret
std
pop
jmp
ds
test
neg
clc
mov
mov
rcr
scas
icebp
cwde
cwde
or
loopne
xchg
test
dec
push
pop
jg
mov
jo
inc
rcr
xor
jg
mov
jle
fcomip
idiv
lea
pop
mov
jmp
add
mov
nop
push
lea
lock
jecxz
dec
loop
pop
jmp
jg
jmp
jnp
repz
ret
in
aas
dec
lahf
cld
push
mov
push
and
and
push
mov
jl
popa
bnd
std
push
hlt
jns
pop
sar
mov
fild
sub
xchg
ret
cli
pop
pop
xchg
pop
mov
hlt
loope
add
lock
lock
loopne
or
les
(bad)
out
push
xlat
fbstp
sti
mov
or
(bad)
push
and
pop
(bad)
fidiv
jle
pop
push
fisttp
lods
fmul
cmp
loope
or
int
add
ret
(bad)
clc
int
popf
fbld
cs
out
or
adc
in
(bad)
sar
mov
scas
xchg
(bad)
mov
(bad)
jno
cmp
call
hlt
outs
lods
push
out
scas
push
lods
xchg
(bad)
sub
(bad)
imul
cmp
shr
cld
inc
sub
mov
cmp
cwde
pop
mov
mov
jl
jg
aaa
sti
xor
cld
xlat
dec
call
mov
pop
pop
push
loope
cmp
mov
pop
mov
jle
in
jg
inc
hlt
xlat
add
cld
das
push
(bad)
mov
js
fbld
pushf
push
cli
or
jmp
cmp
sti
sbb
imul
mov
cld
sub
mov
jmp
add
movs
adc
pop
stos
pop
shl
cmp
push
inc
mov
xlat
mov
sbb
xor
push
add
imul
stos
pop
or
and
adc
sar
movs
mov
cmp
call
std
data16
mov
mov
xlat
add
jmp
jbe
ja
pop
call
in
icebp
icebp
aas
dec
(bad)
cld
cwde
jle
(bad)
fidivr
(bad)
ds
jg
mov
hlt
lahf
mov
repz
add
outs
nop
dec
xlat
jo
std
dec
push
mov
retf
inc
sub
(bad)
std
mov
or
mov
test
call
sbb
sar
imul
and
rcr
and
jbe
loop
movs
aas
inc
hlt
pop
hlt
call
outs
and
cmp
call
(bad)
inc
mov
(bad)
jle
jne
repz
mov
dec
push
(bad)
inc
std
push
movs
out
pop
call
hlt
repz
(bad)
mov
jge
pop
sar
call
jmp
push
jge
out
adc
or
add
dec
fadd
push
pop
add
outs
mov
mov
add
or
fild
cmps
jmp
jnp
sbb
fdivr
cmc
jle
addr16
lds
sahf
int
sub
sub
jle
cmp
pop
dec
xor
xchg
repz
cld
addr16
adc
sbb
jmp
icebp
shr
and
call
cli
call
mov
std
ds
test
arpl
mov
nop
(bad)
dec
jle
mov
cli
jo
fisub
mov
xlat
push
jl
and
add
and
xor
(bad)
cld
(bad)
mov
sbb
aad
fwait
mov
(bad)
push
mov
(bad)
jle
mov
ss
jae
aaa
das
mov
imul
bound
mov
inc
adc
adc
sub
ja
dec
or
gs
clc
fbld
stc
fild
cld
into
jmp
jge
cli
outs
addr16
or
out
mov
movs
inc
ins
outs
stos
fistp
icebp
out
xchg
jg
ja
stos
clc
xor
std
ins
cwde
lods
adc
dec
repz
cli
jno
push
mov
adc
ja
ins
jle
hlt
loopne
and
stc
out
repnz
cmps
jg
outs
clc
jmp
cld
push
sbb
inc
inc
int3
(bad)
bound
jge
cld
or
jl
jmp
jp
out
loop
(bad)
and
fistp
fdivr
scas
loop
(bad)
scas
loop
(bad)
out
outs
sti
jnp
xchg
jmp
mov
push
aas
icebp
jg
out
not
dec
mov
mov
inc
sti
mov
hlt
(bad)
cmp
fbstp
jg
shl
ret
std
ds
aas
add
mov
jecxz
fild
pop
or
ja
or
jmp
(bad)
mov
adc
adc
int3
pop
jg
(bad)
sbb
jnp
adc
(bad)
rcr
jmp
repnz
stc
dec
cmp
fistp
jle
jg
cld
mov
push
sti
out
repz
(bad)
pop
xor
mov
out
push
std
ret
nop
sar
call
icebp
jg
cmovs
loopne
lahf
movs
inc
lods
inc
inc
sbb
and
push
adc
std
out
movs
(bad)
fld
in
mov
(bad)
ds
aad
icebp
jecxz
xlat
outs
inc
in
jle
mov
xor
mul
xchg
(bad)
in
(bad)
int3
ins
std
ficomp
sbb
ds
xchg
(bad)
jmp
and
movs
pop
cmc
sti
arpl
das
cmp
and
pop
mov
push
loopne
mov
cmc
jecxz
(bad)
jl
fwait
stos
icebp
out
clc
push
mov
pop
cld
mov
sbb
(bad)
push
cld
repz
int3
dec
scas
jmp
shr
scas
ret
fstp
jecxz
mov
jg
cdq
aas
in
std
xor
and
(bad)
imul
daa
(bad)
jmp
rcl
inc
cmc
jg
clc
clc
sub
jmp
mov
repnz
test
cmp
(bad)
jmp
cmp
mov
and
mov
pop
inc
inc
push
sti
xor
les
mov
mov
ret
js
popa
jns
pop
(bad)
pop
mov
sbb
add
mov
repnz
and
inc
scas
outs
mov
jg
(bad)
out
xchg
popa
cli
out
sti
add
shl
scas
std
out
mov
jmp
cmps
dec
fcmovnb
jnp
addr16
xchg
in
jnp
inc
clc
ficomp
pop
jnp
dec
mov
dec
idiv
outs
or
jmp
into
cmp
cmp
pushw
mov
adc
repz
out
aaa
push
sub
in
push
mov
xchg
pop
add
jmp
jmp
cli
das
jmp
and
(bad)
push
xchg
fbld
xchg
jns
(bad)
outs
(bad)
jmp
out
test
fisttp
neg
mov
cmp
jle
ret
lea
(bad)
lock
pop
hlt
(bad)
jno
repz
inc
ins
int
mov
rcr
call
in
dec
xchg
cld
ss
call
jge
add
fistp
dec
jecxz
fucomip
aaa
dec
jmp
mov
lock
dec
out
lea
xor
jge
iret
out
push
jle
fbld
inc
jp
test
repz
outs
xchg
cmp
mov
(bad)
pop
std
imul
jne
fwait
mov
sti
idiv
inc
jl
sbb
jae
lock
(bad)
addr16
(bad)
pop
jle
cli
jp
cld
cmc
outs
dec
pop
jmp
ret
pop
jmp
cmc
pop
pop
sti
mov
jle
fistp
icebp
pop
cld
push
mov
int3
or
cmp
cmp
ffreep
or
in
ja
cdq
sti
out
aaa
jmp
jg
(bad)
mov
ins
mov
xlat
shr
cmps
cmc
outs
jmp
jmp
scas
int
ins
repz
jp
jle
fcomip
out
outs
repz
out
sbb
or
fdivrp
int
(bad)
pushf
fcomip
mov
mov
repz
mov
(bad)
pop
cli
out
mov
cli
and
dec
ja
jle
jle
popf
(bad)
cs
jg
pop
fwait
mov
rcr
enter
cli
addr16
mov
cmp
jg
mov
(bad)
iret
inc
retf
fstp
jl
fcompp
in
mov
push
sbb
jge
jg
ss
dec
fdivrp
xchg
sub
in
mov
movs
nop
jp
aas
jle
mul
rcr
repnz
iret
push
loop
stc
sub
xchg
outs
pop
std
xor
sbb
stc
(bad)
sti
aas
dec
pop
cld
xchg
mov
pop
xchg
adc
mov
iret
ror
cli
xlat
(bad)
pop
add
mov
std
add
popa
and
inc
mov
cli
aaa
jmp
aas
fst
pop
push
mov
popa
mov
cli
mov
out
sti
mov
mov
imul
mov
fisubr
fist
xor
jmp
xor
test
iret
mov
outs
dec
jecxz
mov
mov
cmp
(bad)
(bad)
scas
popa
sar
bswap
mov
xor
mov
(bad)
mov
movs
fistp
inc
repz
in
push
mov
mov
jbe
out
call
cld
push
dec
clc
test
xchg
sti
mov
int
cmp
outs
xchg
mov
shl
cmp
mov
rcr
add
cmp
add
jo
arpl
inc
das
ss
cli
ins
call
pop
ret
adc
in
pop
(bad)
mov
pop
jl
mov
push
jnp
mov
int
push
test
in
bound
retf
dec
dec
shr
lods
sbb
(bad)
mov
shl
adc
and
icebp
imul
cli
cmp
imul
hlt
repz
in
pushf
scas
cld
xor
movs
jle
pop
aad
cld
pop
adc
mov
cmp
out
shl
enter
sti
dec
mov
cld
(bad)
mov
jnp
shr
lahf
mov
jg
mov
repz
or
cld
xlat
hlt
stc
aas
inc
lahf
push
xor
lea
pop
out
or
test
mov
std
fwait
inc
and
pop
lock
pop
or
outs
dec
fs
in
lahf
dec
inc
cmp
cli
imul
dec
fdivr
aas
and
clc
pop
cmp
push
sbb
sti
outs
dec
rcr
outs
out
inc
notrack
outs
sbb
xchg
jle
dec
stc
jg
mov
jle
data16
sti
mov
lahf
dec
adc
inc
clc
sti
aaa
or
sti
daa
rcr
(bad)
cmp
pushf
std
(bad)
loope
lahf
shl
pop
out
xchg
cmp
jg
aaa
xchg
inc
fistp
in
dec
repz
inc
movs
in
pop
or
les
(bad)
jg
scas
or
jmp
cli
not
jecxz
sbb
xlat
xchg
gs
jmp
aas
or
int
ja
movs
(bad)
dec
(bad)
call
in
repz
xchg
mov
mov
push
cld
push
mov
cld
mov
sub
mov
repnz
sub
ret
jmp
iret
stc
sub
dec
inc
icebp
ja
xor
mov
sub
in
mov
repnz
in
mov
std
pop
(bad)
push
mov
call
push
or
neg
outs
std
stos
cmp
push
mov
ret
outs
(bad)
(bad)
cmp
das
loopne
jb
mov
adc
adc
scas
adc
xchg
cli
ins
sar
aaa
dec
pop
add
sti
ins
test
(bad)
aaa
jmp
repz
outs
pop
add
push
stc
add
cld
scas
hlt
jno
add
jmp
mul
inc
mov
adc
scas
inc
xchg
out
leave
call
ins
pop
mov
movs
jae
loop
(bad)
das
push
cmp
xor
dec
ret
dec
clc
xor
movs
(bad)
aas
(bad)
xor
jb
addr16
rep
mov
sti
daa
mov
gs
mov
dec
add
sub
pop
jo
rcr
inc
dec
(bad)
int
add
and
scas
lock
rcr
ja
sbb
sti
call
or
jmp
(bad)
jo
fcom
cmp
retf
aas
(bad)
leave
push
jmp
jg
jns
std
dec
ins
out
loopne
popf
xchg
jg
ins
stc
div
mov
mov
dec
lods
outs
cld
inc
push
mov
(bad)
xlat
xor
ins
sbb
clc
add
rcr
mov
aaa
in
mov
cli
fwait
daa
mov
mov
or
fwait
cld
cmp
cmps
jmp
add
cmp
xchg
js
loop
dec
mov
pop
mov
(bad)
mov
(bad)
mov
lea
jle
je
sbb
cs
out
leave
(bad)
in
aaa
cli
pop
jle
mov
sbb
aaa
(bad)
mov
xlat
fistp
fbld
xchg
neg
adc
mov
jmp
mov
popa
mov
out
scas
dec
pop
cli
sti
jne
jle
in
mov
or
mov
mov
lock
ss
mov
and
ret
outs
jg
or
cld
not
cmp
cmps
push
add
push
mov
or
mov
fild
cs
(bad)
pop
enter
and
push
outs
notrack
pop
addr16
or
retf
outs
repz
jle
adc
cld
out
test
data16
mov
sbb
pop
das
jmp
movs
(bad)
(bad)
in
hlt
(bad)
jmp
movs
arpl
mov
xchg
cld
retf
push
icebp
je
xchg
outs
daa
lahf
std
jbe
out
not
cli
cmc
mov
test
test
mov
movs
adc
iret
pop
jmp
jecxz
cld
data16
aaa
mov
int3
jg
pusha
std
sbb
cli
call
adc
add
and
cld
sub
inc
neg
iret
(bad)
xlat
jne
setg
jmp
cld
cdq
pop
xlat
fst
cmp
call
xor
(bad)
jg
cli
in
das
icebp
(bad)
jae
mov
lahf
std
mov
out
and
(bad)
jmp
ret
fldenv
lahf
jle
inc
sub
pop
add
loope
push
pushf
fist
clc
jge
xchg
pop
push
(bad)
or
js
(bad)
pop
jle
mov
jle
add
jne
repz
xchg
neg
(bad)
pop
rcr
fsub
push
fwait
cld
inc
xor
mov
ss
imul
jmp
jg
movs
jmp
jmp
jg
std
push
push
imul
xor
sub
cmp
outs
mov
cwde
mov
inc
and
test
push
jg
jnp
fist
jge
imul
dec
imul
sub
(bad)
mov
(bad)
in
cld
mov
jns
mov
adc
pop
or
or
pop
cwde
cmps
push
push
std
xchg
aas
neg
fcom
push
mov
ins
lock
cmc
fwait
cld
xchg
lock
cmp
adc
test
inc
jg
push
push
aam
cld
(bad)
mov
adc
cld
or
jle
jmp
and
in
(bad)
(bad)
mov
je
ficomp
cld
pop
hlt
iret
mov
jle
fisttp
inc
sar
imul
mov
out
adc
scas
icebp
sbb
(bad)
cmp
xor
mov
shl
lods
mov
inc
dec
data16
jg
scas
add
cli
imul
sub
loope
inc
inc
mov
icebp
push
scas
sub
(bad)
outs
mov
out
xchg
movs
adc
mov
(bad)
lahf
mov
pop
shl
loop
inc
stc
(bad)
ss
hlt
addr16
mov
ucomiss
mov
mov
faddp
sar
fbld
sub
mov
cs
(bad)
idiv
(bad)
scas
ror
idiv
aas
dec
arpl
pop
inc
inc
sub
in
mov
mov
jp
mov
in
jle
(bad)
jbe
outs
add
std
mov
jg
jne
(bad)
std
pop
shl
mov
mov
cli
pop
imul
sbb
clc
xlat
push
cmc
shl
mul
ror
jg
jle
mov
push
cli
jnp
in
xlat
cli
ins
mov
mov
cmp
stc
idiv
sub
lods
jg
pop
mov
fsubp
out
inc
mov
jg
sbb
mov
iret
(bad)
mov
and
(bad)
xlat
call
outs
repnz
std
jle
mov
mov
dec
jecxz
fisttp
or
cwde
aas
in
les
mov
sbb
ror
xchg
sub
aaa
cdq
dec
dec
es
in
jge
adc
hlt
daa
or
and
or
cmps
out
aas
(bad)
jmp
jle
inc
out
(bad)
mov
dec
call
sar
std
mov
push
sti
xor
pop
div
push
or
fs
std
jg
inc
sti
test
mov
aas
call
mov
shl
outs
(bad)
jmp
or
mov
sbb
mov
(bad)
cld
sbb
lock
sbb
cmp
(bad)
jmp
jl
outs
stc
sbb
call
aas
sub
pop
mov
jmp
sbb
addr16
idiv
inc
das
push
mov
stc
sub
push
pop
(bad)
pop
aas
imul
sbb
cld
inc
push
fild
outs
sti
sub
mov
fild
fdiv
in
jae
xor
xlat
cli
xor
sbb
iret
jle
add
mov
jl
scas
(bad)
(bad)
cdq
jl
rcr
add
lods
jmp
sbb
cmp
pusha
jmp
jecxz
loop
push
jg
adc
mov
and
(bad)
and
in
cmp
mov
int3
scas
shl
cmp
repnz
pop
xor
sbb
jg
ret
std
pand
mov
clc
xchg
dec
in
aas
stos
dec
ret
rol
std
jmp
fdiv
icebp
mov
(bad)
clc
enter
in
aas
xor
fstp
in
dec
jg
ja
jg
jg
movs
fstp
mul
std
sbb
pushf
dec
enter
in
aas
cmp
fstp
std
iret
sbb
sar
and
inc
add
pop
sbb
in
das
mov
inc
ds
retf
and
jle
add
or
push
outs
loop
mov
cmc
add
ss
aaa
shl
scas
(bad)
mov
sbb
lahf
std
lea
cwde
jg
movs
in
fbstp
jg
pop
out
cld
fidivr
jecxz
jae
lds
cmc
lahf
ret
jecxz
adc
sbb
scas
cmc
imul
or
mov
loopne
lock
call
sbb
adc
dec
jmp
xor
clc
mov
xchg
pop
jmp
stc
and
pop
lock
bnd
mov
and
scas
fucomip
fcmove
pop
push
fbld
mov
stc
mov
jno
pop
in
mov
std
call
inc
pop
test
cmps
and
sub
lock
add
fisttp
(bad)
mov
hlt
out
inc
aas
mov
adc
clc
mov
repz
pop
out
ins
(bad)
and
jmp
cld
mov
cmc
fild
(bad)
mov
imul
mov
ja
jecxz
shr
das
sar
cmp
imul
push
pop
clc
not
popw
(bad)
xlat
fsqrt
out
inc
add
neg
sbb
iret
icebp
xchg
inc
pop
das
dec
sbb
jnp
sbb
into
das
jns
jb
cmp
or
repz
data16
movs
pop
mov
mov
add
add
(bad)
cmp
aas
jle
and
jg
std
jmp
out
mov
cli
pop
inc
mov
(bad)
add
aas
push
outs
stc
jne
leave
add
jne
fistp
jb
fdivp
jmp
les
cdq
aaa
pop
pusha
fdivr
or
cmp
mov
cld
retf
shr
mov
nop
ret
call
cli
aaa
mov
sti
out
mov
cmp
cmp
pop
loope
ins
repnz
mov
repz
retf
(bad)
mov
imul
loop
mov
add
xor
mov
das
imul
(bad)
and
add
add
inc
out
mov
sub
pop
(bad)
pop
pop
push
or
out
std
fistp
inc
in
mov
jg
std
mov
cmps
mov
lock
pop
js
lahf
pop
(bad)
call
sbb
stos
cld
mov
movs
cmps
cs
(bad)
loop
pop
stc
jg
and
jns
loop
adc
add
or
cmp
cmc
jmp
call
push
repz
aad
xchg
sbb
and
or
jmp
adc
data16
fcomip
xchg
pop
adc
sub
out
mov
shl
ins
jl
pop
jecxz
aam
lock
xchg
adc
xor
pop
inc
mov
and
call
xor
sbb
sbb
(bad)
icebp
ins
push
(bad)
scas
ret
loopne
pop
inc
cld
xlat
fisub
and
fldcw
(bad)
jle
fiadd
mov
ds
test
fwait
pop
sub
in
xchg
ds
xchg
call
and
jecxz
(bad)
mov
outs
sti
or
pop
adc
push
fwait
mov
cmp
sub
lock
lock
std
fbld
int
dec
ins
into
test
or
mov
jns
stc
xor
jne
aaa
(bad)
xor
dec
popf
inc
cmps
enter
push
mov
jecxz
dec
or
movs
jg
mov
dec
mov
xor
push
jl
jmp
and
nop
pushf
jmp
mov
test
adc
jae
sbb
popa
sti
in
shl
aaa
add
lock
xchg
(bad)
jmp
std
(bad)
out
movs
inc
sbb
(bad)
sbb
fs
in
sti
scas
std
dec
jle
push
sbb
fisub
cmp
test
inc
jg
jae
xlat
rcr
dec
sti
cwde
cmp
std
pop
jecxz
xlat
loop
mov
jae
loopne
(bad)
jmp
push
mov
femms
jmp
add
pop
std
inc
shl
sub
push
add
(bad)
in
xor
inc
dec
bound
push
jle
aas
xchg
out
loope
push
(bad)
test
sbb
repz
cmps
and
mov
(bad)
pop
mov
std
cli
call
push
and
pop
(bad)
fidivr
std
push
shl
fwait
(bad)
jmp
stc
mov
cmp
jecxz
and
cmp
scas
mov
fwait
add
ret
jmp
call
neg
or
call
xor
shl
sub
dec
or
jle
es
imul
in
cmc
fwait
cld
cmp
inc
adc
retf
push
hlt
adc
clc
arpl
jnp
(bad)
clc
sti
idiv
xor
call
sub
ror
cli
retf
imul
aas
adc
cmc
popf
add
rcr
int
sbb
inc
call
xor
inc
xchg
ja
xlat
cmp
and
cld
in
sbb
jg
adc
xor
scas
adc
fist
call
mov
imul
mov
jmp
scas
hlt
fsubrp
dec
stc
mov
sbb
nop
inc
std
sbb
rcr
cld
add
mov
(bad)
js
cli
das
add
ret
aad
add
sub
aaa
or
cmc
cmp
pop
and
cld
fisub
xchg
push
std
sbb
fnsave
push
jg
mov
jg
leave
icebp
jmp
fucompp
shr
out
(bad)
and
std
repz
lock
cli
hlt
rdmsr
outs
cld
and
cmovg
out
bsr
mov
xchg
sub
jecxz
iret
scas
popf
(bad)
outs
rcr
sbb
bound
fdiv
imul
std
pop
mov
lock
adc
lahf
(bad)
mov
mov
lock
hlt
(bad)
mov
and
push
cmp
adc
test
fwait
cmp
pop
jg
jl
push
test
and
pop
std
adc
sbb
pop
sti
imul
std
mov
test
jle
and
test
inc
xor
ret
(bad)
jb
push
test
fld
pop
or
sub
jo
nop
fucom
xchg
or
sbb
js
mov
xchg
jg
ds
into
lods
repz
jbe
adc
imul
mov
dec
push
jmp
shl
loopne
jae
loop
imul
push
test
sahf
mov
arpl
popf
mov
mov
xchg
sti
pop
ds
inc
pop
sti
ja
out
adc
mov
popf
(bad)
jg
movs
jnp
je
cmp
stc
daa
(bad)
out
xchg
out
xlat
or
inc
ins
(bad)
xchg
jle
fbld
scas
in
out
xchg
scas
mov
sub
xchg
aad
pop
add
std
imul
aam
xchg
popa
cld
push
or
mov
sbb
or
cwde
(bad)
aas
test
std
sbb
dec
js
push
std
std
lahf
clc
mov
add
jg
push
fldenv
fst
mov
sti
loop
fdivrp
sti
in
(bad)
repz
(bad)
mov
dec
test
jg
lods
xchg
cmp
jae
enter
mov
loopne
nop
(bad)
xor
lds
std
cmp
shl
(bad)
scas
cmc
mov
js
cmc
cmps
mov
lock
adc
push
icebp
scas
pop
mov
icebp
sti
cld
pop
pop
mov
fnstcw
mov
not
adc
push
aas
in
scas
sti
xor
dec
stc
arpl
call
adc
pop
add
jecxz
test
inc
fnstcw
push
cmps
out
test
stc
sbb
loop
add
xlat
sub
or
outs
xor
mov
cmp
add
pop
outs
jno
sar
and
add
paddd
gs
adc
mov
(bad)
call
js
dec
sbb
ret
sbb
mov
xor
push
stc
xor
aaa
pop
push
jb
fild
sbb
popf
add
jg
imul
mov
jl
fbld
cmp
mov
inc
aad
mov
addr16
xor
xor
xchg
mov
mov
push
test
jnp
push
add
js
clc
inc
dec
jecxz
(bad)
(bad)
mov
sti
sbb
jg
inc
ins
push
jg
lods
iret
jns
jmp
cli
repnz
ins
push
into
cmc
cmp
jle
cld
adc
mov
ins
jle
fucomip
ja
int
xlat
fild
(bad)
jle
out
push
nop
push
(bad)
push
ror
jg
cli
add
in
xchg
rcl
ins
jmp
dec
aas
aas
xchg
adc
std
(bad)
loopne
std
pop
xor
cdq
inc
pop
sbb
les
cld
iret
and
dec
shl
dec
mov
sub
or
cmp
pop
add
jae
or
(bad)
fild
call
lds
(bad)
scas
dec
ins
inc
cli
stc
dec
sar
(bad)
sti
pop
inc
inc
aas
int3
cld
das
mov
sbb
test
pop
cld
ud0
inc
mov
dec
(bad)
dec
or
lock
imul
cwde
cli
clc
je
adc
(bad)
push
adc
or
mul
fdiv
mov
jp
(bad)
mov
jg
cdq
cli
cmp
dec
mov
adc
mov
popf
cli
fld
(bad)
sub
sbb
jg
pop
add
add
jmp
jle
sti
repnz
clc
jg
(bad)
adc
inc
fist
aas
clc
mov
shr
icebp
iret
cld
pop
push
push
cli
mov
xchg
(bad)
outs
ret
int
sbb
loope
mov
loopne
fist
mov
jg
jmp
add
push
inc
push
loop
push
arpl
jg
scas
ror
xor
adc
add
xor
enter
std
ds
cmps
adc
retf
(bad)
mov
fistp
push
imul
sbb
add
ror
int
lock
and
div
xor
push
mov
xchg
shr
loop
and
add
rcr
push
std
mov
push
adc
(bad)
xor
fimul
jg
shl
inc
call
dec
mov
jnp
or
push
fdivr
scas
adc
inc
scas
stc
mov
lea
cwde
cmps
leave
ficomp
add
mov
sbb
pop
jmp
push
cli
cli
out
xor
(bad)
jl
(bad)
jmp
jle
pop
mov
push
pop
push
repz
mov
rol
lahf
push
(bad)
jmp
adc
inc
or
sti
das
inc
fidivr
lahf
cdq
fsub
cmp
lds
lock
inc
outs
loope
cld
stos
add
xlat
push
notrack
pop
ds
aas
es
or
std
aaa
aaa
sar
fistp
mov
idiv
jmp
adc
neg
out
(bad)
das
(bad)
adc
sbb
jo
stos
loopne
pop
jnp
pop
adc
xor
add
cmp
(bad)
stc
mov
stos
pop
repnz
inc
scas
mov
stc
ret
icebp
shr
imul
push
loope
pop
jmp
dec
rcr
cmc
xlat
or
mov
shl
dec
lock
enter
mov
cmps
jg
in
xchg
adc
and
sbb
ins
pop
inc
mov
cmp
aad
push
add
iret
and
stc
adc
(bad)
inc
cli
sti
lahf
inc
inc
cli
mov
jle
in
clc
mov
call
xor
pop
(bad)
sub
jg
ds
lods
jle
aaa
popf
inc
pop
(bad)
aam
jg
push
or
loope
clc
mov
jge
add
(bad)
mov
add
aas
cli
xor
mov
adc
es
sub
loopne
mov
cld
pop
pop
aas
sub
cld
jbe
int
xchg
iret
jmp
(bad)
call
imul
push
icebp
pop
inc
ficomp
xchg
cld
imul
sbb
jl
loope
mov
add
and
push
add
jg
std
pop
scas
sub
or
outs
pop
add
push
dec
push
out
mov
stc
pop
ret
into
das
add
pop
jg
rcl
jb
sbb
imul
imul
inc
dec
ficomp
lahf
imul
pop
jg
lods
pop
test
repnz
std
push
mov
popf
adc
iret
and
das
cmp
jge
out
popa
inc
std
aas
sub
not
das
or
mov
pusha
cmp
mov
lock
scas
iret
(bad)
data16
xchg
bound
scas
pop
ret
and
imul
cld
push
mov
leave
outs
sti
sti
call
icebp
jmp
std
xchg
cmp
mov
bound
and
push
mov
mov
mov
cmc
jg
pop
lahf
pop
les
outs
mov
rol
mov
jo
mov
pop
adc
rcr
or
ret
pop
mov
into
fidiv
cmp
movs
push
cdq
push
pop
mov
inc
sbb
sbb
out
and
clc
popf
imul
xchg
out
mov
pop
mov
xchg
lea
shl
fist
fwait
jecxz
push
sbb
xchg
(bad)
xchg
xor
push
imul
lds
xchg
aam
shr
imul
lea
pop
pop
mov
sahf
mov
push
nop
fistp
jmp
mov
ins
fwait
call
fdivr
imul
cdq
pop
(bad)
out
jecxz
cld
int
fld
mov
lea
mov
pushf
and
jne
pop
leave
cmps
mov
into
arpl
cmc
mov
clc
ficom
and
add
cld
pop
push
ins
std
popa
clc
test
xor
out
mov
cli
and
mov
mov
cli
ins
pop
add
add
add
shl
scas
mov
pop
repz
mov
mov
dec
cdq
aaa
fdiv
cld
add
lock
add
clc
inc
mov
or
fld
mov
aam
sub
cmp
popf
int
aas
or
out
jmp
and
sti
sbb
call
call
and
js
mov
jg
xchg
hlt
repz
sar
xor
call
shr
or
fwait
rcl
(bad)
pop
bound
cli
out
loop
xor
jb
movs
ror
push
ins
push
dec
arpl
push
mov
jns
sti
jecxz
lods
fist
inc
pop
pop
pop
cmc
add
or
imul
out
(bad)
sbb
cmp
mov
int3
scas
sbb
jae
test
lds
std
in
lock
pop
add
in
popa
mov
jae
xor
scas
(bad)
cmp
sbb
lods
popf
jns
pop
std
sti
push
loopne
cld
ret
loop
or
mov
jecxz
mov
ins
imul
jmp
push
push
call
push
cld
sbb
lock
mov
xor
jmp
loopne
outs
jecxz
mov
jl
stos
xor
dec
iret
(bad)
xor
jg
pop
hlt
(bad)
mov
js
fild
jo
mov
push
mov
inc
sti
mov
cli
xor
sub
lahf
iret
push
test
or
pop
int
inc
scas
ins
std
jno
inc
(bad)
clc
pop
sar
in
into
scas
icebp
xchg
std
sbb
xchg
mov
jns
jg
and
dec
jg
fcmovnb
arpl
jmp
std
sbb
call
jbe
sub
loop
int
sbb
(bad)
adc
xchg
call
test
jle
pop
add
xchg
rol
mov
mov
mov
popa
mov
push
clc
sar
jle
add
das
(bad)
jae
leave
jg
mov
adc
add
xlat
shr
and
jle
mov
cmp
call
jg
push
mov
pop
jg
mov
jg
jg
out
outs
dec
xor
aas
push
mov
jnp
dec
jo
dec
lock
aas
scas
fstp
adc
icebp
das
or
sbb
std
cmc
jg
(bad)
ja
cli
std
xlat
std
xor
mov
fwait
xchg
jle
jnp
and
mov
mov
(bad)
cmp
addr16
fild
jg
jns
neg
(bad)
kmovw
loopne
in
call
sti
mov
jecxz
jg
xor
lods
jg
scas
neg
(bad)
pop
mov
mov
xor
xchg
fistp
int
jnp
fidivr
(bad)
(bad)
clc
not
mov
iret
xor
repz
scas
jl
mov
inc
icebp
addr16
jg
fst
mov
std
jge
(bad)
push
adc
mov
retf
jg
(bad)
aas
inc
jg
xchg
cld
sbb
outs
std
mov
adc
mov
push
sti
shr
jg
std
and
out
clc
aas
call
push
call
rcl
xchg
push
in
(bad)
mov
jg
dec
arpl
imul
push
push
(bad)
fdivr
fstp
test
sub
xchg
sbb
imul
(bad)
outs
data16
das
inc
jae
jae
sub
cld
mov
cld
or
cld
ja
push
cmp
bnd
imul
repnz
jae
test
les
ficomp
push
std
mov
xchg
in
jmp
add
mov
ud0
outs
neg
outs
std
adc
mov
add
add
jl
mov
(bad)
popf
int3
pop
les
std
lods
lock
(bad)
jg
xchg
cmps
mov
(bad)
fist
fistp
js
mov
mov
lods
aas
or
mov
xor
outs
sub
in
mov
cmp
fs
jg
aas
or
aas
pop
lahf
inc
mov
idiv
imul
outs
(bad)
mov
(bad)
lahf
mov
and
pop
jg
jmp
call
xchg
call
ret
ja
shr
xchg
add
or
cmp
call
xchg
sbb
lock
xchg
fistp
pop
ds
aas
adc
clc
pop
push
in
cmp
inc
(bad)
rcl
icebp
daa
add
cld
out
push
hlt
sti
dec
retf
out
out
mov
or
fwait
in
jb
repz
xor
stc
add
cld
jg
clc
cld
push
push
jl
mov
ja
(bad)
push
sar
lods
(bad)
test
pop
sub
cli
aas
push
loopne
lahf
repnz
lds
mov
(bad)
data16
aas
pop
mov
pop
ret
mov
dec
mov
test
out
dec
(bad)
jmp
(bad)
outs
mov
imul
not
fild
aad
jmp
inc
sbb
mov
cli
xor
imul
sbb
xor
cmp
mov
icebp
pop
retf
(bad)
imul
pop
data16
adc
mov
call
repz
stos
jo
cmp
push
xlat
mov
(bad)
jg
xchg
mov
(bad)
popf
nop
pop
mov
mov
hlt
sbb
imul
je
test
inc
call
add
push
clc
cmp
jecxz
xor
adc
push
push
rcr
ret
stc
jecxz
(bad)
clc
dec
jg
daa
test
(bad)
fisttp
call
mov
cli
xor
mov
xchg
fs
pusha
inc
call
sbb
mov
imul
cdq
sbb
mov
pop
(bad)
dec
scas
clc
mov
pop
repnz
add
(bad)
adc
(bad)
mov
(bad)
test
mov
int
sar
(bad)
jp
(bad)
aas
inc
(bad)
push
cmc
outs
fs
xor
bound
jb
(bad)
jle
jg
xlat
in
out
lods
shufps
les
and
(bad)
into
add
idiv
cld
xor
call
pop
add
cli
aas
pop
sub
fistp
scas
mov
push
clc
das
test
sahf
sub
daa
in
jae
(bad)
out
lods
in
out
pop
push
sti
or
rcr
scas
imul
hlt
sti
mov
iret
inc
mov
cli
loopne
or
cwde
sbb
(bad)
out
repnz
jbe
jmp
mov
retf
jmp
xlat
fstp
add
inc
icebp
pop
jecxz
repnz
cwde
sar
call
rcr
pop
cs
pop
gs
idiv
bound
(bad)
jnp
adc
mov
dec
xor
iret
mov
sub
out
dec
pushf
(bad)
aaa
cld
mov
mov
sbb
mov
pusha
out
xchg
js
pop
hlt
mov
and
popf
mov
sbb
out
sub
jmp
dec
sub
sub
and
push
(bad)
aaa
je
adc
fcmovnb
outs
inc
pop
(bad)
pop
xchg
jns
iret
outs
repz
fs
repz
add
mov
mov
push
inc
add
stos
adc
mov
cli
inc
or
test
sti
call
std
jecxz
int
pminub
pop
sub
add
or
div
xor
jg
scas
imul
aaa
or
pop
or
inc
rcl
xchg
cdq
sbb
ret
std
icebp
push
call
out
jg
jge
iret
shr
mov
jmp
or
arpl
mov
movaps
jmp
inc
inc
push
mov
mov
out
repnz
aas
or
(bad)
pushf
stos
xlat
xor
rcr
dec
pop
outs
std
ret
push
push
das
jns
cli
jbe
dec
repnz
sub
fild
mov
std
xor
pop
out
repz
add
pop
xchg
iret
dec
dec
bswap
pop
jecxz
in
jg
shr
fstp
and
jg
fsubr
sub
xchg
push
mov
pop
jnp
cld
imul
(bad)
jmp
jge
call
fucomp
dec
icebp
xor
ret
or
lods
jg
mov
pop
sar
mov
pop
cld
xchg
out
hlt
iret
mov
mov
(bad)
ss
inc
clc
xor
out
movs
jg
jmp
pop
lods
movs
std
fwait
push
jge
sbb
out
sar
enter
sar
(bad)
xor
jmp
xchg
(bad)
cmc
fcmovu
adc
dec
or
movs
enter
sbb
test
jmp
hlt
neg
cli
aas
jle
and
mov
stc
out
ins
(bad)
sbb
aas
jle
jmp
jmp
dec
jmp
mov
or
lods
mov
xor
repz
pop
xchg
cmps
stc
xor
cmc
imul
xor
jo
jle
jl
lock
daa
loope
dec
mov
sbb
push
popa
pmaxsw
fild
call
(bad)
icebp
out
hlt
imul
xor
lock
dec
retf
clc
jne
or
(bad)
cmp
cs
xchg
pop
inc
ins
cdq
mov
cmps
(bad)
pop
xor
jle
lods
jg
jle
ins
(bad)
scas
pop
push
daa
xchg
in
popa
es
or
or
sub
stc
idiv
movs
pop
add
mov
hlt
rcr
adc
rcr
add
fisub
add
jmp
out
movs
(bad)
aas
movs
(bad)
push
cwde
add
sbb
push
mov
cli
lahf
push
leave
icebp
jl
add
movs
fbstp
(bad)
fisttp
fdiv
push
test
sbb
cmc
jg
cli
out
stc
(bad)
scas
test
mov
dec
es
scas
add
cli
test
jbe
imul
std
loop
jo
loopne
mov
shl
xor
sbb
pop
lock
std
or
(bad)
mov
pop
sub
outs
dec
lahf
mov
xchg
aaa
out
test
movs
nop
jg
mov
jg
scas
int
sbb
(bad)
cmp
cmp
(bad)
sti
and
sti
call
add
fist
cld
jnp
sbb
test
es
inc
scas
mov
shl
jecxz
or
loope
lds
pop
jnp
sbb
adc
lods
loop
dec
mov
ret
jmp
retf
sbb
mov
dec
xchg
stos
iret
call
xchg
ds
jg
xlat
add
and
fdivrp
dec
add
movs
cli
ins
push
jb
hlt
imul
imul
movd
pop
sti
int
cmp
clc
cmp
add
paddd
jl
sbb
out
mul
cld
xchg
mov
jns
loopne
(bad)
xlat
(bad)
iret
inc
add
xlat
or
aaa
push
rcl
test
jecxz
mov
je
clc
daa
xor
or
lahf
(bad)
xlat
dec
dec
fcomi
mov
out
jmp
shl
aad
mov
pop
mov
mov
idiv
hlt
sar
pushf
inc
xchg
add
or
cmp
outs
loope
hlt
or
mov
cli
aas
es
hlt
repz
mov
cld
xlat
scas
into
xor
xchg
cmp
xor
aad
dec
enter
mov
outs
sub
xchg
daa
ss
mov
xchg
mov
dec
cmp
xlat
adc
(bad)
scas
push
xor
(bad)
mov
pop
das
sbb
sti
pop
fld
out
in
xlat
adc
in
inc
push
xchg
jns
repz
sti
xlat
cli
lds
leave
inc
repz
adc
inc
mov
xor
cld
cli
pusha
retf
mov
loopne
cli
xor
mov
retf
daa
jmp
ds
pop
jmp
jns
not
outs
jle
std
icebp
sbb
dec
cld
jp
inc
movs
pop
sti
ins
jg
das
and
adc
ss
inc
or
in
pop
rol
out
and
into
das
std
retf
and
in
mov
inc
aam
(bad)
std
(bad)
cld
inc
call
es
outs
inc
(bad)
(bad)
xchg
mov
(bad)
cmp
std
jp
push
mov
push
std
cli
setg
jle
mov
ja
xchg
std
ss
aaa
mov
test
jmp
xor
or
mov
jl
(bad)
call
cli
lahf
stc
xor
(bad)
hlt
repz
sub
jg
jnp
out
jmp
sar
ret
pop
retf
fld
jl
pop
push
cmp
pop
scas
jo
out
mov
jmp
ror
fist
aas
push
lds
sbb
sti
push
jl
call
into
jns
lods
daa
jle
cli
out
jecxz
add
push
mov
jp
in
(bad)
mov
test
cvtps2pi
je
jl
cmc
sub
lock
leave
call
jle
pop
dec
in
push
nop
push
shl
in
pop
xchg
scas
clc
sar
pop
push
xlat
pusha
jg
loopne
cmp
or
loope
add
(bad)
scas
add
dec
adc
pusha
jg
xchg
xor
cli
lahf
cmc
jg
adc
pop
cmp
test
add
pop
cmp
stc
(bad)
or
adc
fwait
call
clc
imul
mov
dec
inc
push
dec
inc
cmp
pop
icebp
fistp
hlt
pop
mov
in
sbb
or
pop
lock
outs
std
dec
hlt
cmc
pop
add
ds
mov
aam
bound
pop
xchg
sub
push
jmp
or
xor
mov
loop
push
lahf
std
mov
movs
aas
movs
lahf
std
sbb
mov
mov
add
pop
mov
sahf
or
jp
(bad)
jle
stc
lods
pop
neg
in
jecxz
sbb
out
(bad)
jae
cmps
imul
aas
cmp
stc
aas
aad
stc
arpl
dec
add
aas
push
pop
jo
xor
(bad)
and
leave
outs
and
bound
ja
dec
neg
mov
icebp
fwait
ins
cmp
je
adc
or
mov
xchg
pslld
clc
jno
fldcw
xor
sbb
jnp
jg
cmp
inc
outs
std
outs
clc
nop
popf
popf
fisttp
sub
fsub
in
daa
in
push
sub
lahf
jo
dec
test
sbb
inc
cmp
jmp
pop
fadd
mov
ret
loop
pop
or
cmp
loope
xor
mov
std
sbb
xor
addr16
fcomip
(bad)
jmp
cmps
gs
fwait
aas
cmps
movs
sar
js
xlat
(bad)
xor
jl
xchg
xchg
icebp
arpl
pusha
fdivr
pop
cmps
outs
fcomp
loopne
xor
mov
cld
sbb
sub
adc
cli
(bad)
jle
inc
push
rep
ret
(bad)
sbb
and
out
aas
jb
push
call
jmp
repnz
add
or
lock
pop
paddb
icebp
pushf
shr
test
ror
rcr
cmc
fild
mov
nop
rcr
ds
(bad)
dec
mov
or
ret
xbegin
jmp
call
pop
enter
ins
std
sbb
cmps
adc
xor
jne
lods
rcl
xchg
xchg
aaa
sti
xor
cli
call
aas
dec
add
cmc
jle
xor
mov
ins
mov
hlt
cdq
pop
and
aas
(bad)
and
cmps
(bad)
jecxz
fist
pop
imul
stc
cmc
jle
fild
cli
ins
mov
cmp
mov
adc
push
mul
(bad)
(bad)
outs
mov
mov
and
sub
mov
xor
inc
push
add
adc
ds
in
sbb
inc
pusha
jle
add
cli
mov
hlt
jmp
and
jmp
cld
lea
data16
std
repz
pop
jecxz
(bad)
xor
add
mov
repz
pop
jmp
mov
xor
std
data16
jl
mov
cdq
mov
loop
and
outs
jecxz
sbb
stos
rcl
mov
aas
mov
out
cdq
dec
xor
inc
shl
das
mov
or
jmp
clc
sbb
xchg
pop
jp
stc
sbb
fneni(8087
(bad)
hlt
mov
dec
xor
cwde
sub
lock
push
mov
rcr
mov
cld
push
mov
out
cld
mov
pop
or
adc
mov
sbb
clc
ja
xchg
scas
shl
add
int3
add
cld
sub
out
adc
mov
jg
jmp
jp
ficomp
icebp
cmp
mov
pop
jmp
outs
dec
xchg
std
in
add
ja
cmp
mov
mov
jmp
fs
pop
jg
(bad)
call
jo
mov
mov
sub
pushf
fistp
dec
shl
jg
std
jmp
movs
(bad)
out
stos
xchg
stc
sbb
out
scas
lahf
jmp
(bad)
mov
mov
call
das
adc
xchg
adc
movups
xor
loopne
mov
sbb
out
fs
(bad)
ins
adc
mov
sti
ja
jge
pop
stc
xor
(bad)
loop
jmp
imul
es
outs
mov
mov
movs
pop
mov
fild
xlat
sti
jecxz
mov
int
jmp
out
pop
and
jg
push
popa
mov
popa
or
mov
lea
in
cli
xlat
inc
mov
push
retf
or
xchg
mov
cmc
imul
pop
jg
jne
jle
mov
lods
mov
mov
sahf
cmps
leave
scas
mov
mov
(bad)
pop
jo
fild
cld
inc
(bad)
xchg
imul
loopne
dec
mov
jle
stc
sbb
push
adc
outs
std
add
sbb
cmp
(bad)
jle
inc
push
std
aaa
clc
ins
jle
jmp
repnz
popa
and
fwait
call
shr
cmc
imul
jne
pop
dec
jg
lods
jg
call
lock
pop
jecxz
cmp
imul
pop
jecxz
cld
mul
neg
jle
addr16
sub
and
jle
pop
jecxz
and
cmp
in
xlat
cli
lds
cld
cmp
icebp
(bad)
jmp
aam
xchg
sbb
fistp
jb
fistp
sar
iret
scas
icebp
(bad)
fidivr
dec
sub
imul
int3
fnstcw
lock
fcomip
mul
loopne
(bad)
or
cld
sbb
(bad)
mov
fidivr
outs
jge
jecxz
jns
jg
sub
fcomip
idiv
lea
cmp
xchg
xchg
jae
in
aas
repz
pop
test
xchg
call
mov
adc
or
shl
scas
icebp
out
(bad)
cmp
fmul
das
or
loopne
mov
nop
(bad)
dec
ds
arpl
icebp
xlat
cli
lds
popf
(bad)
aaa
clc
adc
inc
mov
mov
jecxz
mov
jg
jno
ja
loope
mov
(bad)
in
jle
out
lods
fild
dec
mov
fmul
jle
sti
cli
outs
(bad)
sbb
mov
iret
out
(bad)
pop
inc
jg
ret
call
repnz
fwait
icebp
sbb
daa
cli
stc
xor
cld
jnp
aaa
es
mov
cs
jecxz
jg
xlat
add
fnstsw
idiv
pop
jle
fistp
sti
cld
inc
jmp
sbb
push
(bad)
jle
movs
imul
outs
repz
and
xchg
pop
jg
in
xchg
popa
bound
xchg
xor
mov
(bad)
mov
mov
pavgb
jle
sahf
stos
aas
dec
jg
xchg
std
out
fsubrp
(bad)
pop
inc
jg
outs
(bad)
sbb
add
push
add
in
pop
or
inc
clc
add
jle
lahf
mov
aas
xor
stc
scas
sti
fstp
mov
retf
pusha
popf
(bad)
jmp
stc
dec
dec
jne
cmps
mov
xor
sub
std
jmp
xchg
mov
fistp
push
fistp
std
dec
rol
mov
(bad)
call
sti
ins
xor
(bad)
imul
pop
dec
in
(bad)
jle
aas
cmp
out
mov
call
cld
add
(bad)
jg
lahf
jmp
(bad)
(bad)
sti
sar
jg
mov
call
fnsave
(bad)
jg
std
jmp
cli
jmp
(bad)
jg
jg
pop
hlt
repz
mov
pop
dec
mov
std
sar
sub
test
(bad)
xlat
adc
fisttp
test
pop
sti
dec
sub
out
and
pop
mov
in
idiv
(bad)
std
xchg
clc
loop
arpl
jne
(bad)
(bad)
cmp
dec
inc
dec
cwde
cmp
xlat
jmp
data16
ins
jg
popa
mov
push
out
std
mov
repnz
dec
jl
imul
and
dec
daa
jno
mov
jmp
pop
loop
pop
sti
aaa
dec
dec
fsub
movd
mov
shl
mov
mov
cld
jae
cld
aaa
clc
ins
ds
ss
int3
loop
mov
(bad)
scas
xchg
(bad)
cs
in
ret
xchg
(bad)
mov
imul
ret
clc
ins
sub
xchg
mov
xor
dec
jp
jp
pop
out
ret
inc
mov
mov
cmc
mov
hlt
psraw
jg
je
mov
call
sar
test
neg
or
repnz
(bad)
aas
scas
in
push
aam
scas
mov
jmp
mov
(bad)
idiv
ss
in
ja
int
cdq
(bad)
sub
aaa
stc
ins
(bad)
out
cld
and
(bad)
cli
out
fucomip
aaa
xor
jle
sbb
(bad)
std
sbb
jl
cmp
out
int
stc
aaa
mov
inc
mov
(bad)
pop
xchg
fistp
mov
outs
push
repz
(bad)
(bad)
sbb
out
mov
std
aaa
stc
mov
out
outs
cli
imul
pop
outs
and
call
inc
mov
xchg
in
stc
push
dec
dec
(bad)
aas
or
imul
sbb
mov
int
lock
jmp
jle
ds
dec
jle
jecxz
std
call
fistp
mov
pop
mov
aad
aad
sub
pop
inc
cwde
jmp
out
dec
jle
movd
jle
pop
xchg
loop
cdq
mov
jo
fcmovnbe
aas
hlt
and
jl
mov
add
mov
mov
leave
out
and
lods
inc
sti
aaa
loopne
pusha
adc
add
push
mov
sbb
call
outs
and
mov
stc
or
adc
dec
sbb
cmp
mov
ss
jge
imul
std
int
dec
aas
xchg
ret
adc
(bad)
icebp
fbld
push
pop
pop
jecxz
push
(bad)
dec
aas
jle
addr16
outs
pop
es
(bad)
ud0
out
mov
lock
(bad)
sbb
clc
cmc
jle
inc
xchg
mul
ret
dec
(bad)
out
call
scas
icebp
imul
mov
xor
loopne
dec
inc
push
lock
or
and
ja
or
mov
shl
idiv
cli
mov
pop
(bad)
out
jns
and
stc
inc
add
test
mov
adc
add
push
sbb
shr
add
sub
pop
jmp
aas
loopne
out
repz
cmc
mov
xor
rep
addr16
sbb
cmp
imul
into
outs
(bad)
jp
imul
ror
dec
cmp
arpl
aas
xchg
call
test
inc
adc
add
mov
aaa
aam
jg
cmp
pop
push
adc
(bad)
cmp
mov
push
repz
js
out
pusha
mov
and
ret
icebp
int
into
pop
adc
cmp
and
and
gs
das
icebp
in
(bad)
dec
popa
xor
test
mov
ret
(bad)
out
(bad)
clc
fst
xor
inc
ret
fbstp
out
dec
mov
sbb
jbe
dec
add
nop
outs
mov
pop
aas
and
dec
and
inc
std
call
xchg
and
cli
ret
imul
iret
shl
loop
mov
(bad)
jno
xor
stos
scas
outs
mov
sub
adc
mov
icebp
adc
das
(bad)
cmp
retf
push
jg
in
fistp
cld
fidivr
mov
xchg
adc
std
mov
mov
mov
lock
lock
jg
scas
icebp
pop
sbb
std
mov
lods
lods
mov
mov
imul
repnz
dec
in
add
inc
(bad)
jg
mov
out
inc
sbb
xor
sub
adc
jle
pop
jecxz
mov
call
int
dec
dec
pop
add
fistp
(bad)
ds
pop
cwde
add
rcl
cs
inc
(bad)
sbb
cs
sub
aaa
clc
ins
push
aas
rol
cmp
int3
scas
cmc
lock
ret
in
xor
pop
push
inc
retf
xchg
hlt
rcr
dec
push
add
clc
cmp
mov
out
add
dec
pop
aad
mov
mov
out
out
lahf
cli
arpl
mov
mov
xchg
add
scas
dec
pop
or
iret
movs
jg
add
mov
dec
clc
and
add
daa
adc
cmc
fwait
(bad)
mov
push
clc
out
clc
xor
leave
jmp
mov
out
pop
add
jmp
movs
ds
pop
aas
cld
pop
and
inc
cmps
inc
popf
xchg
in
icebp
std
mov
add
aaa
ds
aas
loope
inc
mov
cmps
sub
cmc
jg
rcr
xchg
(bad)
clc
std
loopne
ror
cmp
repz
jmp
xlat
js
mov
cli
std
shld
aas
out
call
pop
test
fstp
hlt
fcom
cli
jge
aas
out
shl
jo
xlat
hlt
repz
inc
scas
hlt
adc
or
cld
sbb
loop
mov
mul
push
push
fimul
inc
mov
dec
sbb
add
sar
in
xchg
cli
in
lock
daa
js
xlat
jns
pop
sub
sbb
data16
mov
pop
mov
mov
dec
jge
add
mov
pop
dec
sbb
out
fidiv
push
addr16
std
pop
ins
mov
mov
in
pop
ret
call
rcl
(bad)
cmp
add
popa
std
ficomp
xor
mov
jmp
outs
inc
daa
out
(bad)
sbb
dec
jg
(bad)
xlat
jae
shl
mov
leave
cmp
xor
mov
cdq
inc
stc
call
mov
fwait
jnp
aam
clc
(bad)
into
mov
call
jo
dec
cmp
sub
mov
mov
cmc
pop
std
pop
mov
mov
outs
cli
fisttp
das
hlt
test
push
sub
mov
ds
bswap
pop
cld
mov
and
and
mov
call
aas
inc
dec
jg
(bad)
xlat
(bad)
in
sub
(bad)
jge
ja
iret
out
repnz
(bad)
(bad)
mov
(bad)
jle
cli
call
jg
std
cli
cmp
xlat
fisttp
outs
enter
hlt
jmp
enter
cli
in
mov
std
add
fistp
inc
sbb
(bad)
xchg
leave
clc
xor
add
sti
dec
call
into
cld
(bad)
mov
(bad)
mov
(bad)
xchg
mov
stc
sbb
inc
push
and
jmp
movs
test
ret
scas
jmp
sub
out
call
std
jmp
or
outs
stc
jmp
int3
std
fstp
scas
cld
int
mov
iret
jle
hlt
in
inc
retf
enter
stc
mov
cmc
pop
add
ss
enter
(bad)
or
not
sti
int
cmp
mov
adc
dec
jge
das
pop
jmp
xchg
leave
fdivr
jae
inc
out
sti
lahf
push
add
jg
fistp
ins
lock
aas
dec
jg
cmp
add
jno
in
cld
or
aaa
fsubr
ds
outs
inc
(bad)
jp
(bad)
jmp
mov
outs
std
add
mov
xrelease
dec
aaa
xchg
xlat
adc
outs
inc
adc
xlat
cmps
push
in
clc
xor
and
push
aas
xor
aaa
cli
ret
ror
clc
and
cs
stc
ins
sbb
fsubrp
xor
sub
jle
push
sar
pop
(bad)
stos
mov
mov
mov
add
std
ins
jg
pop
or
xchg
(bad)
loop
cld
xchg
pop
xor
outs
repz
(bad)
popw
mov
(bad)
aaa
dec
jle
lods
jg
ds
rcl
jnp
mov
(bad)
(bad)
out
cmp
xor
outs
popa
inc
repnz
sub
push
test
repnz
int
repz
mov
sub
push
cmp
aad
(bad)
pop
(bad)
out
xchg
dec
shr
fwait
call
mov
xchg
hlt
pop
std
ss
mov
aas
call
loope
and
mov
jg
(bad)
inc
clc
ins
jle
(bad)
mov
adc
jp
inc
mov
in
jle
(bad)
mov
cli
xchg
sbb
fist
outs
(bad)
lahf
bound
fcomip
aaa
sti
int
xor
jp
and
sahf
adc
idiv
or
and
cmc
pop
std
cmp
(bad)
xlat
(bad)
ins
jle
lods
cmp
out
ret
outs
(bad)
(bad)
ss
call
imul
test
xor
sub
jae
pop
(bad)
lock
ins
jle
fist
fidiv
jle
in
loopne
mov
hlt
daa
push
push
iret
adc
cmp
call
jg
dec
push
out
stc
pop
sbb
in
push
xchg
mov
movsx
into
mov
dec
int
(bad)
cmp
and
cmp
shr
inc
and
mov
lock
repnz
add
call
dec
fdivp
ja
xor
addr16
repz
(bad)
push
cdq
imul
(bad)
neg
push
jmp
retf
fbld
clc
int
pop
into
cs
pop
inc
jbe
xlat
stc
mov
std
sub
shl
mov
bnd
int
xlat
(bad)
xlat
sti
dec
jle
fcomip
mov
cmc
jmp
cld
xor
xchg
ja
sub
jno
loope
inc
fsubp
xor
add
std
aad
sbb
clc
pop
cmp
mov
pop
xchg
jb
seta
pop
xchg
ins
ror
sub
aaa
dec
mov
cmp
cld
clc
sub
jle
pop
(bad)
out
and
stc
outs
test
(bad)
cli
mov
outs
repz
push
clc
inc
mov
jle
(bad)
mov
mov
loope
out
clc
fwait
dec
out
adc
mov
(bad)
das
clc
int
add
cs
jmp
out
or
cld
cs
cdq
hlt
retf
out
cli
mov
jg
aaa
retf
scas
call
leave
mov
in
jecxz
mov
dec
call
call
outs
jb
jle
fucomip
xlat
jne
jecxz
in
shl
jmp
dec
repz
cmp
jmp
in
into
scas
icebp
(bad)
shl
dec
mov
nop
pop
gs
shr
das
(bad)
imul
sbb
inc
mov
pop
inc
mov
imul
pop
dec
daa
cld
fcmovb
call
rcr
jg
jno
pop
idiv
repnz
(bad)
jge
jg
psadbw
adc
or
jle
popf
cld
push
mov
daa
mov
jg
adc
scas
(bad)
jnp
pushw
mov
xchg
and
sar
jecxz
out
aas
clc
add
fbld
sahf
das
inc
into
jb
cld
fimul
lds
add
aaa
sar
(bad)
lods
pop
or
cld
aad
je
jmp
dec
cld
cli
mov
jecxz
pop
call
mov
call
add
mov
cld
scas
jecxz
add
add
(bad)
loope
pop
jecxz
pop
jp
fidivr
add
xchg
sub
stc
mov
hlt
cmp
neg
mov
and
jge
cld
pusha
sub
adc
jns
(bad)
ins
cli
jmp
fdivrp
ja
scas
dec
ret
aas
lea
xor
mov
push
inc
mov
cld
mov
leave
push
xchg
scas
mov
cmp
pop
sti
loope
add
sbb
outs
and
aas
xchg
or
loop
jbe
xor
clc
hlt
out
push
movs
sbb
cmp
sub
inc
int3
fbld
je
fild
add
outs
and
sti
aaa
rcr
mov
sbb
mov
mov
or
(bad)
test
sub
outs
loopne
xor
jle
je
adc
cmc
js
jle
(bad)
not
xchg
mov
imul
sub
lahf
(bad)
xor
out
xlat
clc
jae
xchg
dec
aaa
lock
std
jmp
jle
pop
mov
jo
iret
cld
xlat
sti
mov
in
pop
out
ins
sub
mov
jl
adc
lock
popa
aam
addr16
lahf
(bad)
pop
hlt
(bad)
mov
outs
cld
lea
cmp
hlt
and
bnd
sbb
pop
aad
inc
pop
add
mov
ins
addr16
or
inc
adc
hlt
out
xor
arpl
iret
sub
pop
repnz
loope
push
loop
xchg
retf
mov
cli
or
xchg
or
sar
stc
pop
pop
call
rcr
pop
into
mov
das
aam
xchg
repnz
aas
push
popf
inc
mov
or
mov
in
xchg
or
xchg
add
inc
lahf
(bad)
ds
call
(bad)
push
(bad)
jmp
xor
xchg
repz
fs
xor
push
push
jl
pop
shr
int
std
sbb
popf
xor
adc
jmp
cli
lds
call
mov
xchg
mov
(bad)
and
das
movs
int3
sbb
jge
or
or
outs
jg
pop
add
inc
pop
test
cli
add
xchg
shl
xlat
std
or
(bad)
mov
pop
and
adc
jno
call
adc
pop
mov
fwait
das
jmp
leave
cld
stc
cmp
pop
dec
aas
jg
cli
mov
xor
js
outs
push
pop
cwde
arpl
cmp
out
leave
outs
sub
ror
pop
mov
or
int3
pop
inc
mov
in
xlat
data16
retf
(bad)
cli
ja
idiv
in
xchg
loopne
mov
jmp
fwait
push
xchg
xlat
std
mov
or
add
repz
sar
jg
inc
adc
(bad)
pop
push
xchg
jg
ja
xor
pop
bound
push
mov
(bad)
fwait
push
aas
pop
sub
jg
xor
cmc
jmp
xchg
outs
xor
addr16
loope
inc
div
mov
(bad)
outs
xchg
cmps
mov
mov
pop
jmp
sbb
imul
cld
sbb
lock
out
das
cli
xor
sbb
sub
loopne
mov
std
cmp
imul
(bad)
fsubr
add
je
pop
(bad)
sbb
push
pop
loop
ror
mov
stos
sbb
mov
leave
scas
rcl
dec
cli
jnp
repz
mov
adc
and
mov
rcl
rcr
inc
fild
sbb
push
sti
jmp
add
xor
aas
cmp
(bad)
jno
retf
retf
pop
mov
loopne
stc
xor
cli
test
outs
mov
cmp
imul
icebp
loope
dec
pop
sbb
xacquire
push
fst
jbe
lea
push
dec
xor
ds
loopne
imul
fsubr
loopne
and
dec
fcom
push
ins
movs
adc
out
test
push
add
iret
mov
fwait
add
lahf
imul
in
mov
xchg
jle
(bad)
xchg
(bad)
stc
jg
(bad)
push
ins
outs
call
and
xor
out
dec
fcom
fistp
xchg
pop
jmp
stc
cmc
jle
(bad)
aaa
clc
dec
jle
pop
lock
cld
fcomp
jmp
cs
neg
ds
sti
or
mov
lahf
mov
cdq
xor
outs
add
lock
gs
(bad)
bound
fldenv
std
ret
xchg
mov
ret
(bad)
(bad)
js
aas
fmul
inc
add
ja
jle
movs
jo
xchg
inc
xchg
lock
mov
jg
call
jb
xchg
std
fild
cmp
inc
push
(bad)
std
(bad)
retf
jno
out
ret
arpl
or
lock
push
(bad)
cmc
jg
pop
xor
push
(bad)
cmp
jae
xor
dec
jae
push
mov
pop
jne
nop
mov
int
lahf
repnz
mov
sbb
outs
ret
repz
mov
aam
sbb
aaa
into
pop
ror
mov
sbb
(bad)
pop
aam
xchg
ins
(bad)
imul
mov
fistp
pop
and
(bad)
jl
fmul
shl
ja
xchg
cmp
loop
lock
ins
sar
adc
sub
(bad)
mov
out
loopne
xchg
xlat
jbe
imul
iret
cmove
aaa
clc
ins
jg
fisttp
icebp
out
loope
jecxz
add
in
cmp
std
jg
push
pop
inc
inc
mov
or
in
add
outs
add
inc
jb
(bad)
pusha
or
mov
xchg
cmp
mov
(bad)
(bad)
inc
je
and
mov
std
pop
xchg
dec
aas
leavew
hlt
fwait
mov
into
daa
pop
call
inc
(bad)
cmc
sbb
cmp
jg
cmp
jmp
add
icebp
mov
(bad)
call
or
push
cld
movs
(bad)
inc
imul
mov
jmp
call
call
jmp
loope
mov
mov
jmp
xchg
or
in
inc
clc
cld
mov
cmps
inc
add
icebp
ficomp
xor
out
iret
mov
(bad)
push
sub
out
loopne
jp
mov
jne
outs
sbb
mov
push
repnz
(bad)
sti
(bad)
ds
imul
shr
ret
dec
ja
iret
mov
jg
mov
cmc
test
int
inc
(bad)
cld
push
mov
repnz
or
sbb
mov
hlt
xlat
add
add
in
(bad)
repz
and
mov
inc
jg
inc
xor
mov
iret
scas
cmc
xchg
push
out
jg
hlt
aaa
ret
daa
adc
bnd
dec
sub
fisttp
bound
pop
stos
(bad)
(bad)
outs
leave
adc
jno
adc
push
aas
mov
mov
ds
jp
xor
jmp
stc
lea
jg
pop
jecxz
(bad)
jmp
cli
adc
mov
push
hlt
sti
pop
dec
mov
pop
sar
mov
lock
addr16
clc
jmp
(bad)
out
inc
loopne
cli
ins
(bad)
jle
psubsw
jg
std
pop
jp
aaa
movs
iret
cmp
ret
pop
std
lods
jle
icebp
jno
adc
pop
dec
lahf
jg
xor
or
stc
lahf
shl
xor
add
pop
cld
cli
jmp
sbb
jmp
imul
js
jg
push
stc
fwait
popa
jl
popf
and
ret
pop
rcl
lods
hlt
ror
fs
idiv
mov
mov
js
sbb
std
sti
xchg
ret
jle
add
out
or
cmc
jns
inc
lock
xchg
shr
outs
icebp
imul
rcr
cld
lods
cld
push
out
mov
xor
mov
jbe
xlat
cld
lea
mov
pop
cld
jp
or
cli
(bad)
cld
cmp
pop
fcmovnu
mov
adc
neg
or
inc
stos
inc
nop
rol
repz
dec
cmp
add
add
bound
clc
ins
icebp
fucomp
dec
(bad)
sti
dec
scas
adc
cli
xchg
xor
cld
lahf
call
cmp
xchg
imul
(bad)
out
(bad)
sti
loopne
(bad)
aas
shl
add
inc
jmp
mov
mov
inc
mov
jge
mov
pop
shr
sub
add
cli
sub
jle
add
(bad)
lock
call
cld
add
int
icebp
sbb
add
mov
not
cli
retf
and
ds
(bad)
out
and
loope
(bad)
sbb
sub
stc
or
cli
aas
sbb
push
lods
inc
push
mov
push
stc
movs
movs
add
aaa
clc
movs
mov
addr16
idiv
fadd
neg
fild
test
xor
mov
(bad)
scas
icebp
cmp
cs
pop
lock
call
and
outs
repz
lahf
inc
(bad)
aaa
clc
pop
out
cld
imul
xchg
pop
lds
lock
dec
(bad)
stc
inc
add
jmp
inc
push
mov
(bad)
jg
(bad)
lahf
sar
jmp
jmp
(bad)
aas
mov
(bad)
aas
cmp
xchg
std
imul
mov
(bad)
pop
push
adc
clc
pop
and
sub
fucomip
sti
(bad)
(bad)
ficomp
adc
test
xor
jg
mov
sub
fcomip
loopne
xchg
ins
cld
cs
aas
jle
cmp
(bad)
std
add
sti
cmp
and
sti
cmp
aaa
cmp
jg
(bad)
std
xchg
(bad)
loope
out
movs
jg
inc
imul
repz
std
sub
aam
xchg
dec
call
mov
push
xlat
call
cld
mov
les
lock
in
jmp
push
or
mov
aas
dec
sub
mov
fistp
sbb
lds
mov
jle
std
mov
ud0
shr
pop
push
inc
stos
lds
jmp
inc
ret
ret
mov
sub
jmp
lock
inc
(bad)
jmp
fld
(bad)
and
test
clc
aas
and
add
jg
std
mov
clc
ins
pop
std
xor
(bad)
pop
jle
inc
repz
mov
fidivr
in
shr
imul
call
loopne
sti
cmp
xor
jle
fcomip
dec
dec
dec
and
in
ret
cmp
icebp
push
(bad)
and
sbb
pop
mov
mov
test
jmp
or
cwde
cli
aas
cmps
(bad)
jmp
jg
jg
jns
jmp
test
sti
xor
mov
test
fcomip
imul
sub
aas
mov
scas
dec
and
push
int
std
lea
xor
inc
in
cmps
push
jmp
xchg
add
mov
call
or
jp
hlt
ret
push
(bad)
push
cmp
fldcw
sub
scas
jg
cmp
repnz
(bad)
xlat
retf
dec
xor
aas
or
pusha
test
sub
cmp
aaa
mov
js
out
mov
stc
xlat
cli
add
(bad)
iret
and
lea
aas
dec
in
jle
fisttp
pop
les
cmp
(bad)
mov
pop
dec
call
das
rcl
jle
popf
sbb
lea
xchg
cmp
ret
cmp
xor
pop
push
jecxz
push
outs
psllq
xchg
(bad)
jge
hlt
jnp
lahf
aas
xchg
fisub
cmps
jmp
ds
dec
pusha
and
adc
hlt
xchg
cld
out
push
and
(bad)
lods
sub
mov
lods
dec
cwde
pop
imul
jle
push
and
pop
xchg
mov
pop
leave
scas
cmc
(bad)
std
inc
stc
cld
ja
or
xchg
pop
dec
fdivrp
aaa
cld
push
mov
xlat
aas
call
(bad)
jmp
out
sbb
ins
mov
jecxz
and
aas
shr
xchg
and
fdivr
imul
xlat
(bad)
mov
xor
mov
cli
mov
xor
ss
jg
push
movs
adc
fs
mul
sbb
stc
psubsb
ins
cli
jmp
aas
pop
int
jecxz
jmp
nop
dec
imul
xchg
scas
jg
(bad)
xlat
xor
inc
or
cmp
loop
jnp
(bad)
mov
mov
pop
mov
dec
xchg
(bad)
sbb
push
jmp
shr
fcom
jg
mov
xor
scas
mov
add
pop
jnp
cld
dec
dec
arpl
adc
push
pop
call
and
jnp
out
aas
hlt
imul
outs
mov
jg
xchg
shr
fisubr
and
call
repz
dec
jl
pop
jb
test
push
test
and
xchg
jo
outs
inc
mov
daa
cli
(bad)
aas
lea
mov
pop
mov
mov
sbb
and
push
cdq
(bad)
jg
dec
icebp
out
scas
cmc
imul
hlt
xlat
ja
mov
bound
mov
mov
xchg
mov
addr16
jmp
data16
xchg
ins
cli
outs
icebp
imul
mov
test
and
jg
adc
fidivr
jg
xlat
iret
outs
icebp
imul
mov
mov
xchg
jmp
inc
sub
cld
movups
pop
repz
sbb
mov
std
or
jp
hlt
outs
rcr
cmp
aas
addr16
std
sbb
rcr
stc
rcr
arpl
mov
iret
xchg
mov
jle
pop
cld
aaa
rol
cmovno
adc
pop
shl
lea
xlat
sti
mov
icebp
pop
xchg
das
rcr
lahf
lods
xor
or
cmp
adc
mov
sbb
addr16
push
(bad)
es
cmp
(bad)
call
xor
fld
arpl
pop
imul
inc
repnz
lods
aas
pop
sub
pop
jne
mov
lock
repnz
dec
rcl
idiv
loopne
dec
in
call
dec
or
loopne
jg
je
scas
icebp
sbb
pop
jmp
cmc
(bad)
out
(bad)
jg
(bad)
cld
sti
imul
sti
mov
sar
je
xchg
fwait
(bad)
daa
out
add
xor
sub
scas
stc
mov
mov
lock
mov
(bad)
scas
pop
xor
sbb
mov
(bad)
(bad)
pop
or
repz
sti
xchg
mov
mov
cld
push
repnz
scas
sti
imul
inc
clc
das
cmp
test
std
or
stc
jae
fistp
or
xchg
jg
or
paddd
jle
pop
div
or
jle
sti
(bad)
sbb
cld
out
fisubr
clc
cmp
hlt
pop
jl
int
fdivr
add
repz
sub
pop
sti
ins
jg
(bad)
aaa
(bad)
xchg
adc
cld
xchg
mov
(bad)
adc
add
(bad)
cli
lds
mov
jecxz
dec
mov
repz
fsubr
std
(bad)
ds
dec
mov
imul
jo
repnz
stc
imul
movs
mov
enter
jg
pop
dec
xor
cli
pop
sar
xchg
mov
pop
push
add
frstor
cmp
xor
div
mov
xchg
mov
iret
out
sahf
cmp
xchg
dec
jbe
nop
call
dec
(bad)
cmp
push
(bad)
out
ins
xchg
dec
push
inc
pop
adc
pop
jmp
pop
ret
sar
mov
cli
das
or
(bad)
xor
out
sub
sbb
out
cmps
jg
in
aaa
dec
jno
cmp
fiadd
cwde
push
(bad)
loop
ret
mov
pop
jb
xchg
mov
(bad)
jmp
fidivr
outs
sahf
cld
sahf
push
jne
lock
push
adc
cld
jmp
adc
(bad)
mov
pop
dec
pop
hlt
fcomi
retf
xchg
and
mov
ret
repz
jle
dec
jmp
mov
jg
jle
shl
out
and
cmp
adc
dec
push
or
fild
call
hlt
stc
pop
dec
(bad)
jmp
(bad)
jmp
hlt
(bad)
hlt
repz
mov
(bad)
(bad)
aas
gs
or
and
add
(bad)
sub
shr
or
mov
outs
mov
hlt
xlat
adc
(bad)
scas
(bad)
les
mov
out
pop
loop
add
loopne
enter
repz
cli
push
aam
scas
das
pushf
jbe
bound
or
sub
test
jle
test
and
and
es
sti
outs
sti
call
retf
(bad)
ja
ss
cmp
xchg
vmovdqa
movs
in
(bad)
ss
mov
scas
inc
fwait
pop
sti
mov
mov
rcr
aas
neg
jmp
pop
mov
mov
aas
push
dec
sbb
pop
inc
xchg
sar
imul
xor
mov
sub
fistp
lock
jno
sbb
pop
inc
adc
sub
leave
mov
imul
sahf
imul
loopne
mov
inc
add
(bad)
add
mov
pop
dec
or
std
mov
xor
cli
mov
outs
(bad)
jmp
std
mov
dec
jle
xor
sub
outs
mov
icebp
outs
clc
fwait
inc
jg
jecxz
inc
mov
inc
out
inc
popf
cmp
cmp
stc
aaa
and
frndint
or
stc
(bad)
sti
pop
hlt
ja
ret
mov
jg
pop
(bad)
push
rep
add
idiv
inc
les
(bad)
hlt
jg
or
loopne
adc
xchg
pop
inc
out
lock
or
call
jle
aam
pop
js
pop
mov
xlat
inc
(bad)
aas
clc
xor
in
std
ds
das
ins
add
mov
in
xlat
adc
cld
imul
jmp
rcr
sahf
cmp
lods
jmp
das
(bad)
mov
pop
jecxz
clc
in
jle
fucomip
mov
pop
idiv
hlt
(bad)
sti
ins
cs
pop
nop
(bad)
push
aam
jmp
(bad)
cmc
xchg
(bad)
imul
dec
das
cld
dec
fs
fs
ret
cmp
adc
cmc
imul
(bad)
mov
cmc
(bad)
xor
mov
pop
pop
cli
mov
push
adc
push
clc
jne
add
imul
call
aas
repz
fadd
pop
mov
add
mov
iret
(bad)
repz
call
aas
mov
pop
icebp
idiv
and
push
jmp
ins
jg
(bad)
rcr
xlat
add
push
aas
adc
jg
pop
jecxz
psubq
fidivr
mov
pop
jnp
inc
ror
clc
push
fisub
mov
(bad)
push
add
jg
call
sub
push
nop
frstor
mov
cld
ud0
jmp
mov
sti
pop
adc
xor
out
mov
mov
test
in
sub
dec
pop
cdq
sbb
xlat
inc
jle
mov
mov
jmp
fbld
sar
xchg
test
fcomip
idiv
lea
iret
cmp
ret
xlat
mov
neg
call
mov
mov
stc
cmc
push
jno
mov
jmp
fisub
jb
jmp
std
pop
pop
pop
in
mov
jg
aas
clc
xlat
adc
adc
in
cmc
fild
ins
std
cmp
ror
mov
mov
jmp
shl
jmp
std
jg
mov
hlt
std
out
inc
out
dec
js
cmps
dec
jg
pop
div
xchg
aam
sbb
lock
jle
hlt
cmps
cmp
jmp
hlt
xlat
shr
mov
mov
sub
fcomip
rcr
(bad)
std
or
sub
ror
ja
cdq
mov
cld
cmp
aas
mov
cld
jbe
dec
int3
or
clc
loopne
and
mov
ins
std
jno
in
shl
lea
clc
sbb
icebp
(bad)
sbb
std
aaa
pop
pop
jg
cli
hlt
dec
es
ret
push
test
xchg
(bad)
mov
retf
ret
jns
(bad)
fs
cld
ja
int
jae
iret
outs
sti
call
sub
ins
call
clc
ja
or
xor
sbb
outs
cld
ss
jnp
and
std
cmp
out
mov
(bad)
fsubr
jg
outs
test
sub
call
stos
mov
mov
mov
cmp
test
pop
adc
addr16
cs
jg
inc
out
mov
in
push
(bad)
push
js
cmps
mov
fld
push
inc
cmp
pusha
jle
cli
repz
inc
into
sar
lock
sar
lock
es
jo
mov
in
or
mov
mov
cmc
pop
rcl
adc
pop
jo
aaa
jle
retf
xchg
scas
jg
mov
(bad)
(bad)
xchg
jg
mov
daa
stc
retf
fldcw
and
lock
and
imul
xlat
clc
dec
arpl
imul
and
arpl
inc
mov
pop
retf
cs
retf
mov
shr
clc
cmp
(bad)
call
mov
lahf
jle
lock
inc
xchg
fs
xchg
xlat
jge
fistp
out
mov
clc
iret
call
mov
add
lea
repnz
cld
or
xor
mov
out
scas
stc
mov
sbb
jg
stc
pop
mov
adc
lahf
push
mov
call
pop
adc
xchg
inc
or
fadd
jb
test
adc
mov
and
inc
jb
xor
lods
(bad)
(bad)
(bad)
cmp
fistp
dec
jg
pop
xchg
imul
sbb
sar
cmps
lods
cmp
sbb
clc
lahf
add
jo
repnz
pop
xor
mov
out
(bad)
imul
xor
ret
repnz
mov
test
adc
loopne
xchg
adc
stc
scas
sbb
(bad)
lods
aaa
push
lods
fild
int3
retf
adc
sub
add
pop
dec
imul
push
add
loopne
stos
mov
push
push
shl
inc
(bad)
movs
aaa
call
dec
repz
(bad)
out
icebp
jg
retf
inc
(bad)
inc
std
call
movs
(bad)
mov
hlt
(bad)
jg
ficomp
jnp
pushf
call
aas
cmp
push
sar
(bad)
call
sahf
sar
xor
leave
jg
(bad)
std
xor
(bad)
sub
pop
jns
jle
int
call
call
clc
mov
jns
in
sbb
in
xlat
jp
jb
jp
mov
sbb
jmp
clc
mov
test
jle
lods
jg
ds
idiv
fisttp
scas
dec
ds
pop
imul
cmp
sbb
push
and
in
addr16
pop
mov
cld
scas
jecxz
add
xor
fistp
scas
popa
jl
ja
ja
jg
pop
add
mov
jecxz
cli
ins
int3
xchg
xor
inc
out
outs
std
pop
xchg
das
cld
xchg
hlt
jmp
arpl
adc
adc
jmp
jge
lock
std
xor
jmp
mov
pop
ret
shr
call
jmp
fisttp
loop
in
movs
dec
test
adc
mov
xor
add
add
and
popf
pop
jecxz
(bad)
mov
std
cld
inc
jmp
pop
lahf
lahf
add
stos
sub
jge
sub
pushf
mov
cli
(bad)
adc
(bad)
(bad)
sbb
pop
aam
jo
lahf
mov
mov
(bad)
sbb
outs
sahf
sub
add
cpuid
movq
dec
push
dec
repz
inc
test
mul
(bad)
pop
cli
imul
push
(bad)
in
aas
mov
inc
adc
xchg
jmp
fbld
mov
jle
inc
jg
adc
movs
jg
lea
std
jmp
test
push
in
and
bound
adc
iret
add
stc
cmp
clc
(bad)
cmp
inc
movs
scas
add
xlat
jp
lahf
bound
cwde
mov
jl
jl
push
jle
mov
(bad)
cmp
fs
std
icebp
imul
mov
repnz
jg
scas
rcr
dec
iret
jg
std
(bad)
sub
std
dec
jle
xor
pop
xor
imul
cmp
in
jle
enter
sub
xchg
aas
or
stos
mov
or
add
clc
outs
pusha
cmp
add
call
mov
xchg
outs
mov
dec
cmps
leave
mov
mov
mov
xor
or
ret
jle
cwde
fadd
mov
sbb
test
popf
cld
jbe
jbe
cmp
(bad)
mov
ret
int
add
xchg
call
hlt
jmp
xor
pop
inc
lods
dec
jle
imul
sti
xlat
mov
popa
push
sbb
stc
retf
jmp
adc
clc
xchg
cli
cli
ds
pop
shl
hlt
(bad)
aas
xchg
ds
adc
out
mov
and
(bad)
aas
sbb
cmps
mov
pop
fidivr
(bad)
dec
(bad)
xor
(bad)
outs
mov
neg
ds
std
inc
lods
(bad)
(bad)
jle
fucomip
dec
dec
mov
adc
jmp
adc
cmc
mov
or
push
or
(bad)
push
scas
idiv
pop
sti
in
es
or
outs
add
imul
lods
jg
sub
call
push
imul
aam
aaa
push
xlat
jecxz
and
iret
dec
movs
mov
loope
(bad)
jle
xchg
cmc
lahf
dec
rcl
(bad)
out
mov
mov
std
clc
out
or
scas
dec
in
push
jg
add
or
(bad)
stc
call
clc
add
(bad)
push
(bad)
das
mov
add
enter
inc
push
std
adc
pop
std
(bad)
mov
call
(bad)
aaa
clc
mov
ds
scas
call
(bad)
pop
push
or
jg
aam
std
int
retf
outs
or
add
dec
xchg
mov
xlat
popa
dec
jg
jl
pop
rcr
dec
lock
and
mov
mov
jle
cwde
imul
adc
cli
mov
xchg
inc
hlt
imul
std
or
xor
mov
mov
xor
cld
repnz
dec
push
out
bound
adc
or
(bad)
jge
cli
arpl
pop
leave
nop
lahf
std
xor
hlt
sbb
arpl
cld
xchg
cld
imul
sar
fdiv
push
jl
xor
iret
xchg
das
(bad)
and
loop
pop
loop
aas
mov
std
in
push
out
clc
jecxz
cmp
add
ud0
mov
pop
retf
in
jle
xlat
or
push
xchg
out
pop
or
(bad)
hlt
xlat
sar
jmp
jmp
(bad)
inc
jp
inc
(bad)
mov
pop
dec
clc
adc
(bad)
jg
jmp
lock
add
inc
pop
jg
call
mov
ret
jbe
imul
out
shr
rcr
pop
push
jle
test
jmp
fld
adc
(bad)
ins
adc
dec
in
xor
add
icebp
mov
(bad)
sbb
les
xor
ja
test
in
mov
aas
xor
cmc
fstp
cli
outs
sub
cmc
or
sti
mov
loope
pop
cli
aad
sub
adc
bound
cmp
fwait
icebp
loop
std
push
imul
rcr
sbb
dec
mov
add
xchg
push
mov
inc
loop
scas
mov
pop
cli
fwait
dec
es
jne
mov
pop
out
cli
mov
jb
jae
fwait
mov
jg
lahf
jmp
or
lds
inc
jg
pusha
sub
jno
sub
shr
xchg
pop
pop
sbb
jge
call
call
repz
(bad)
call
cld
aaa
cli
ins
jg
aas
cmc
aaa
push
pop
ss
sbb
test
jmpw
mov
xlat
pop
inc
jg
leave
and
(bad)
fisub
repnz
dec
(bad)
repnz
outs
(bad)
jmp
fidivr
jg
neg
(bad)
std
out
adc
imul
idiv
pop
push
jle
mov
jle
(bad)
aaa
dec
push
(bad)
inc
lods
cwde
add
push
hlt
out
inc
cmp
icebp
fwait
jmp
sar
loope
data16
xor
or
scas
rol
or
aad
mov
aaa
jle
push
sbb
rcr
ja
dec
(bad)
mov
(bad)
inc
and
xor
retf
outs
cmp
cmp
xor
aas
adc
imul
cmp
(bad)
(bad)
pop
ret
aas
jg
xchg
push
inc
cmc
daa
adc
mov
push
hlt
xlat
pusha
push
mov
jne
cmp
cli
inc
cmps
mov
out
pop
jmp
gs
xor
test
mov
or
rcr
and
push
cmp
mov
mov
loope
mov
cld
ja
cmc
(bad)
aam
lock
sti
in
jle
aas
cmc
xlat
iret
jle
hlt
aaa
ret
push
mov
mov
jmp
mov
add
sti
push
movs
adc
aas
std
pop
mov
div
lock
mov
cld
out
sti
das
mov
(bad)
jge
out
call
div
mov
mov
and
sti
(bad)
jmp
pop
dec
rol
cmp
add
mov
lahf
(bad)
fist
stos
cld
loope
fnstcw
dec
lahf
add
xchg
dec
mov
repz
call
(bad)
xchg
hlt
jae
lahf
dec
cli
mov
or
inc
(bad)
popa
push
or
cmp
jge
dec
cmp
jg
movs
push
mov
cmp
icebp
sahf
repz
inc
mov
cs
test
lods
fs
jb
cmp
push
or
mov
sbb
add
fidivr
cld
lock
call
out
ret
mov
std
movs
mov
pop
out
mov
lea
fcomip
mov
pop
stc
loopne
test
cli
cmp
lock
cmp
dec
cld
mul
cmp
aas
mov
imul
icebp
jg
or
cwde
cwde
fld
jecxz
and
jle
add
dec
pop
dec
popa
mov
outs
mov
add
clc
in
mov
push
(bad)
imul
(bad)
outs
clc
inc
je
int
mov
int
jl
arpl
adc
cmps
nop
jmp
xor
shld
ret
cmps
(bad)
dec
push
movs
iret
jle
jmp
mov
(bad)
movs
lahf
mov
add
std
inc
cli
idiv
push
mov
or
(bad)
mov
mov
cld
aaa
dec
lods
retf
in
cmp
outs
mov
(bad)
mov
cmc
stc
fwait
mov
std
int
cli
nop
retf
in
out
in
out
cmc
loope
out
pop
repz
push
cld
clc
lea
(bad)
jle
sbb
out
mov
std
aaa
stc
int
adc
sti
outs
cli
fwait
jmp
out
sbb
out
xchg
std
loop
xor
sti
aaa
call
retf
pop
(bad)
pusha
arpl
clc
outs
adc
icebp
jg
push
jmp
push
jg
(bad)
jecxz
imul
(bad)
jge
imul
cmc
mov
in
das
adc
mov
jle
fist
adc
pop
sti
xchg
xchg
aaa
xchg
ins
cmp
jg
lahf
(bad)
fidivr
aam
mov
jg
pop
jecxz
popa
call
aas
les
rcr
mov
fs
xor
(bad)
inc
pop
call
mov
hlt
ret
leave
je
pop
push
stc
jnp
fcmovnu
dec
(bad)
(bad)
addr16
test
push
call
in
mov
xor
push
jne
fstp
sti
clc
mov
push
mov
mov
gs
(bad)
call
jmp
test
jnp
pop
inc
stos
xchg
(bad)
aaa
cld
jae
retf
pop
mul
enter
add
stos
mov
iret
fistp
mov
dec
(bad)
push
(bad)
jg
jle
clc
jg
sar
push
xor
jecxz
pop
jmp
cld
ss
and
test
pop
pop
push
jmp
mov
mov
jns
outs
mov
sar
jb
pop
leave
lods
call
test
int3
(bad)
ja
(bad)
(bad)
jl
cmp
std
iret
hlt
aad
stc
jmp
fdiv
push
mov
xchg
loopne
repz
rol
clc
push
add
shr
mov
pop
inc
out
iret
inc
jae
dec
scas
popa
daa
repnz
add
jmp
ret
mov
lods
or
fbld
mov
sub
sbb
sub
jecxz
fsub
outs
push
xchg
cmp
pop
(bad)
xor
div
sbb
push
(bad)
cli
std
fstp
imul
cmps
push
mov
ud0
inc
sbb
sti
mov
std
fbld
fidiv
test
neg
fmul
jg
fbld
push
rol
sbb
push
loopne
and
adc
push
(bad)
mov
pop
inc
inc
jmp
sbb
aas
ret
jo
inc
aam
sbb
push
xor
push
(bad)
out
pusha
cmp
cli
fcomip
(bad)
(bad)
mov
push
add
or
mov
mov
cmp
das
(bad)
adc
repnz
mov
test
(bad)
fcomip
aaa
cmp
daa
js
xor
fcomip
shl
cld
cld
xlat
loopne
dec
cmps
(bad)
jg
fdivr
jge
jg
or
adc
jo
adc
cmc
mov
jmp
jbe
dec
jl
imul
clc
lahf
jg
bound
in
(bad)
in
es
idiv
or
(bad)
sbb
xor
scas
arpl
pop
sbb
outs
loope
mov
jo
jle
iret
(bad)
push
adc
xor
inc
jg
and
cld
fistp
imul
es
jmp
cli
repnz
loope
iret
in
mov
int3
or
scas
mov
xchg
add
sbb
(bad)
je
les
mov
test
loope
std
int
sbb
in
out
repz
jmp
mov
call
in
mov
in
mov
cmc
cmp
popf
fbld
ja
pop
(bad)
mov
movs
or
add
fwait
aas
cmp
call
sti
pop
inc
mov
iret
cli
xor
push
sub
lods
dec
mov
or
hlt
stc
out
xor
out
jg
(bad)
or
dec
xchg
out
cli
jge
xchg
adc
sub
pusha
cwde
pop
jmp
inc
sar
dec
stc
(bad)
les
inc
or
jmp
pop
pop
mov
stos
push
pushf
and
mov
push
push
out
lds
inc
sbb
add
sbb
pop
mov
mov
dec
jg
pop
jmp
adc
xlat
xchg
cli
dec
cmp
pop
dec
jg
sti
jecxz
jecxz
or
sub
ja
sti
pop
dec
js
jo
mov
mov
jmp
aas
stc
xlat
add
mov
jle
mov
div
imul
add
outs
sti
dec
lahf
and
sub
or
cmp
dec
inc
nop
xchg
sbb
(bad)
(bad)
scas
pop
outs
dec
add
retf
jp
rcl
pop
xchg
clc
or
mov
in
push
push
fistp
scas
mov
icebp
add
(bad)
pop
dec
and
push
ret
fcomp
ror
pop
push
std
cld
aaa
mov
mov
lea
xchg
xchg
jge
js
cld
pop
shl
mov
call
ret
xor
leave
and
scas
mov
dec
xor
xor
xchg
test
aaa
dec
dec
aad
rol
mov
pusha
mov
(bad)
xlat
stc
(bad)
scas
or
jle
(bad)
xlat
cld
lea
scas
stc
pop
or
jg
pop
add
outs
call
das
ds
mov
xlat
cli
lds
out
aas
loopne
loopne
mov
rcr
cli
idiv
xor
cmp
pop
cld
jnp
(bad)
fistp
das
mov
jle
in
pop
stc
repz
jmp
sar
iret
cmp
movs
or
(bad)
(bad)
pop
cld
sbb
inc
lods
pop
dec
(bad)
dec
inc
aad
outs
repz
arpl
fild
jnp
ret
pop
scas
pop
repz
mov
out
loopne
dec
or
iret
cmp
fucomip
neg
add
mov
(bad)
xlat
stc
mov
rol
jg
std
xor
les
test
sbb
jbe
fimul
loop
cdq
sbb
clc
lea
lods
xor
fild
jg
repz
dec
sub
(bad)
lock
lock
inc
add
scas
icebp
pop
dec
int
cmc
pop
adc
pop
pop
cmp
pop
out
cld
pop
mov
cld
xor
pop
jbe
sahf
or
mov
and
(bad)
dec
js
jmp
inc
cmps
(bad)
pop
hlt
iret
das
stc
fucomi
xor
cmps
lahf
je
inc
jns
mov
adc
xchg
xlat
ins
neg
add
cld
test
mov
xor
mov
shl
idiv
cdq
cwde
cmp
jg
les
xchg
add
call
scas
jno
sbb
sub
sbb
test
sub
jmp
dec
in
ja
lea
fnstsw
xlat
daa
adc
jnp
inc
mov
movs
cmp
cli
mov
(bad)
sbb
mov
(bad)
(bad)
jne
mov
xchg
push
xor
lahf
xchg
dec
hlt
(bad)
sar
and
hlt
sbb
out
sbb
push
std
shr
lahf
fucomip
dec
sti
mov
mul
repnz
dec
mov
loop
pop
mov
out
std
sbb
lock
pop
pop
or
push
mov
cmp
mov
pusha
lods
div
dec
inc
pop
(bad)
in
scas
or
mov
inc
scas
repz
std
mov
movs
inc
add
jle
lahf
cli
ins
jg
aas
push
mov
out
out
add
push
cli
out
test
or
and
das
std
xor
sbb
push
jg
test
push
pop
and
fwait
inc
jge
mov
in
(bad)
cmps
std
imul
test
int
mov
mov
cmp
out
dec
lahf
cld
ss
xchg
cld
jmp
out
cmp
sub
xchg
(bad)
mov
int
arpl
mov
or
jg
inc
lahf
mov
clc
test
and
std
lods
mov
outs
not
stc
outs
cli
pop
movs
adc
sbb
cld
aad
push
jle
(bad)
aaa
(bad)
shr
call
iret
scas
inc
repz
loop
jo
jg
ss
sbb
aas
dec
(bad)
inc
out
pop
push
push
fs
(bad)
lahf
mul
addr16
cmc
xchg
add
xchg
inc
fwait
pop
sti
in
jle
call
xchg
aas
add
inc
fs
rol
push
dec
cmps
js
cmp
bnd
mov
mul
mov
hlt
xchg
cld
sub
cmp
mov
xor
lds
pop
mov
fistp
out
jecxz
ret
clc
cmc
js
mov
push
or
sti
dec
bswap
fdivrp
sbb
movs
call
lods
mov
pop
mov
pushf
xchg
enter
lock
sub
mov
jmp
and
lods
dec
cli
call
cli
cld
mul
mov
mov
std
sub
idiv
ins
jle
std
jmp
pop
cmps
jbe
add
(bad)
shl
aam
aaa
movs
lahf
cmp
pop
ror
frstor
repnz
leave
cld
out
hlt
not
(bad)
(bad)
das
test
out
dec
out
jge
jg
or
scas
icebp
pop
shr
movs
jge
(bad)
inc
push
std
lahf
(bad)
mov
cmp
dec
cs
mov
(bad)
addr16
je
idiv
adc
sub
ja
(bad)
aas
movs
mov
mov
jg
std
pop
cmp
aam
sbb
jmp
inc
jle
dec
aas
call
iret
(bad)
sbb
sti
cmps
jle
sbb
out
std
or
jmp
cmp
sub
mov
loope
std
ud0
mov
jmp
lock
dec
(bad)
mov
repnz
xor
and
and
sar
daa
mov
iret
or
stc
fstp
ret
das
cld
or
mov
fild
mov
lods
jg
(bad)
dec
sti
sub
mov
sbb
aas
mov
or
out
leave
lahf
repnz
jg
or
lock
push
mov
aam
inc
jbe
jg
cli
sub
xor
mov
jge
neg
call
jae
clc
outs
dec
push
lds
xor
outs
shl
mov
xlat
jg
movs
dec
jg
(bad)
xlat
stc
or
sti
clc
sti
out
sti
aas
xchg
(bad)
sub
add
loopne
(bad)
xor
or
dec
jmp
jle
fcomip
xor
xchg
xor
inc
mov
retf
std
(bad)
jge
push
mov
cmp
sti
dec
sti
ror
fbld
div
mov
ss
icebp
cmc
outs
dec
jecxz
(bad)
lds
std
int
leave
pop
idiv
(bad)
xlat
cmps
dec
jle
pop
inc
and
imul
(bad)
jmp
xchg
mov
push
(bad)
cmp
or
xchg
shl
stos
call
jmp
sub
ja
fwait
jmp
mov
cld
ss
jg
out
pop
add
pop
cmps
inc
mov
mov
outs
sti
call
int
xchg
outs
fwait
(bad)
pop
mov
nop
aam
pop
dec
sbb
sub
dec
jg
mov
jl
jne
(bad)
(bad)
aaa
(bad)
test
or
push
fisub
imul
dec
hlt
shl
icebp
sbb
mov
int
mov
inc
jecxz
inc
dec
push
cli
leave
cmps
push
fwait
inc
push
gs
fcmovnu
loope
or
cld
(bad)
jne
mov
ins
xlat
outs
repz
push
ss
(bad)
loope
mov
or
lea
clc
ins
jle
cmc
int3
jmp
jae
aad
mov
cli
ins
pop
fsubrp
mov
repnz
mov
sbb
jnp
ss
fsubrp
mov
repnz
mov
ins
nop
div
stc
outs
data16
int
repz
(bad)
(bad)
pop
cld
out
test
std
mov
int
dec
sti
sti
outs
cmc
fwait
call
neg
cli
aaa
jmp
scas
inc
jmp
in
pop
mov
and
std
pop
(bad)
stc
pop
aad
cmp
fdivrp
jge
lahf
lock
mov
int3
xchg
and
jmp
inc
div
xor
pop
push
cld
out
(bad)
xlat
inc
adc
jecxz
inc
inc
scas
(bad)
cli
or
popf
(bad)
das
add
outs
call
cli
out
and
xlat
clc
sbb
jge
mov
adc
dec
cwde
out
lock
imul
pop
push
jae
fist
jg
lahf
dec
call
(bad)
jne
xchg
fs
popf
inc
nop
mov
jg
(bad)
mov
cmp
lea
pop
aas
add
retf
jno
stc
daa
call
out
lods
retf
pop
mov
jle
neg
cmp
dec
retf
pop
frstpm(287
jg
xlat
xor
(bad)
mov
push
ffreep
push
ja
aad
mov
sbb
mov
sti
sub
nop
out
idiv
or
hlt
xlat
scas
cmc
(bad)
push
sub
nop
in
(bad)
outs
repz
mov
loope
pop
xlat
lods
rcl
leave
scas
neg
call
out
lods
pop
std
xor
aad
lods
mov
out
mov
shr
inc
ficom
nop
clc
in
aaa
dec
jg
cmp
jmp
std
mov
popf
(bad)
xlat
fsqrt
or
pop
hlt
loopne
outs
les
sub
adc
neg
sbb
pop
xchg
hlt
std
push
pop
pop
clc
cwde
vmaxss
inc
repnz
pop
jmp
std
repz
int
mov
je
and
or
jg
aas
in
(bad)
out
cld
xchg
test
cmp
xchg
and
add
xchg
(bad)
shl
fdivr
sub
aas
mov
cld
fidivr
cld
sub
jmp
add
(bad)
push
sbb
mov
mov
cld
sbb
sub
pop
out
(bad)
jmp
dec
enter
lea
inc
lods
mov
and
call
cdq
inc
jb
fisttp
sti
fbld
xor
cmp
pop
ror
adc
aas
mov
xchg
mov
movs
inc
cmp
xlat
jmp
scas
inc
ins
push
cli
in
xchg
(bad)
and
mov
and
xchg
fisttp
out
inc
(bad)
dec
dec
jecxz
sqrtps
or
push
es
adc
in
aas
cmps
mov
mov
jl
nop
cdq
mov
retf
pop
cmp
faddp
add
mov
call
cld
fsubr
stc
not
dec
mov
call
lahf
cmp
test
push
cmps
add
cld
(bad)
xchg
(bad)
jbe
iret
scas
jmp
shr
mov
fmul
sar
cmp
movs
mov
sub
in
pop
test
mov
addr16
dec
out
pop
mov
loope
cld
mov
and
(bad)
in
adc
mov
inc
adc
fcomp
xchg
mov
mov
(bad)
xlat
mov
pop
iret
outs
cld
jp
out
jp
out
jp
out
jp
out
jp
adc
repz
dec
(bad)
cld
add
cs
neg
bnd
jno
mov
push
ins
sbb
aas
inc
inc
push
mov
clc
out
xchg
jg
iret
sbb
fidivr
mov
out
cld
pop
mov
jg
adc
fwait
cmc
(bad)
out
repnz
inc
xchg
inc
inc
imul
or
out
xor
cld
sbb
call
cwde
out
fwait
or
out
xor
push
xchg
mov
sub
pop
scas
sub
mov
aas
mov
cld
pop
call
pop
jp
(bad)
sar
inc
dec
lods
mov
icebp
hlt
repz
cwde
lods
fcomip
rcr
add
inc
jmp
inc
out
shr
idiv
sub
pop
inc
push
cmc
xchg
pop
inc
cld
adc
fucomip
idiv
aaa
icebp
icebp
mov
cmp
and
clc
arpl
or
je
test
mov
add
sub
je
outs
sti
call
add
call
sbb
daa
jg
fcmovnbe
outs
cmc
jnp
xchg
loopne
pop
add
add
stc
jmp
or
rcr
ret
xor
pop
jle
pop
add
cli
mov
aam
stc
add
jg
call
xlat
pusha
add
mov
outs
cmp
arpl
loop
loop
or
dec
(bad)
fidivr
jg
xchg
cld
into
out
repnz
add
rol
jmp
inc
fsub
add
outs
idiv
cmp
ret
jg
or
icebp
cmp
movs
jle
xchg
mov
scas
repz
shl
push
mov
sub
shr
pop
jg
jge
out
outs
std
sbb
es
pop
pop
push
xchg
mov
push
jg
xchg
in
cmps
inc
test
cld
outs
hlt
imul
cld
das
std
jne
sbb
cs
std
imul
test
rcl
aas
imul
rcr
push
jmp
and
popf
imul
jecxz
lahf
cmps
jg
(bad)
fstp
imul
sbb
(bad)
mov
lahf
hlt
sbb
and
cmps
inc
cmp
(bad)
cs
sar
inc
(bad)
lods
jle
iret
dec
cwde
loope
ja
jl
out
push
inc
pop
mov
out
jmp
jl
xchg
pop
lock
jmp
add
lahf
inc
das
xor
not
(bad)
inc
mov
jge
pop
loop
xlat
iret
loopne
dec
sub
mov
jl
(bad)
jle
(bad)
mov
pop
hlt
iret
outs
inc
and
xchg
mov
or
mov
mov
outs
cli
mov
hlt
adc
shr
mov
std
cmp
adc
repz
pop
icebp
sbb
(bad)
(bad)
scas
and
call
jmp
or
out
mov
clc
scas
retf
or
fstp
cli
xor
leave
ins
ret
test
and
std
fcmovu
out
repnz
pop
das
and
xor
sub
jno
rcr
mov
sub
loopne
movs
and
jmp
out
dec
jg
or
ds
fstp
(bad)
ja
pop
jg
dec
jp
dec
sti
mov
cld
(bad)
jg
mov
scas
rcr
mov
jg
rcr
inc
jmp
xchg
addr16
idiv
cmc
jg
aas
mov
cld
call
sbb
sbb
mov
adc
cmp
xor
(bad)
sbb
cmp
imul
dec
pop
inc
or
push
inc
in
xlat
inc
imul
fwait
xchg
cmp
cli
mov
aas
mov
mov
push
out
ds
ret
clc
rol
ret
pusha
aad
es
clc
fstp
push
daa
bound
(bad)
pop
iret
and
aas
mov
xor
add
add
loopne
(bad)
fstp
lods
fcomip
idiv
and
(bad)
cmp
mov
mov
xchg
(bad)
ins
push
(bad)
sub
and
inc
nop
pushf
cwde
loope
sbb
dec
push
push
jle
call
loopne
fisttp
mov
(bad)
jne
repz
out
(bad)
mov
loopne
repz
pop
sar
(bad)
(bad)
push
jmp
shl
xor
ja
ins
mov
dec
dec
push
adc
or
inc
sbb
in
icebp
jmp
xchg
jg
scas
imul
in
hlt
xlat
rcl
shl
xchg
fdivr
xchg
movs
push
cmps
mov
lods
mov
mov
push
cld
mov
sbb
retf
ds
xor
pop
jecxz
cli
stc
ja
mov
jmp
rcr
mov
xor
leave
repz
pushf
push
movd
call
pop
ror
(bad)
hlt
repz
mov
mov
(bad)
imul
pop
cmps
idiv
std
call
mov
pop
shr
inc
std
std
xlat
ror
repz
adc
idiv
adc
jmp
std
daa
call
dec
mov
mov
jg
(bad)
scas
dec
lahf
shl
test
mov
pop
sar
mov
repz
cmps
iret
inc
pop
ror
aas
xchg
mov
sbb
std
pop
mov
jg
jge
cmps
ror
fistp
movs
mul
jle
hlt
cld
add
sti
(bad)
jmp
jo
cmps
out
aaa
clc
jge
(bad)
std
xchg
push
sahf
jmp
push
push
icebp
pop
out
loop
mov
push
jg
sbb
push
(bad)
mov
sub
jnp
adc
or
cmp
fdivrp
ins
jg
cmp
loope
sbb
scas
cld
push
js
div
cwde
dec
fild
clc
clc
jmp
push
jl
ffreep
mov
dec
jle
inc
std
idiv
mov
mov
(bad)
outs
inc
push
(bad)
sbb
bound
leave
dec
(bad)
mov
jmp
das
dec
int
jecxz
mov
and
mov
(bad)
push
adc
imul
les
dec
jg
dec
or
xor
std
lahf
cmp
hlt
hlt
arpl
ss
xchg
iret
jmp
adc
cmc
xlat
dec
and
or
xlat
(bad)
in
jle
add
repz
jg
aas
test
lahf
(bad)
fsubr
movs
bound
push
icebp
fisttp
leave
scas
repz
(bad)
into
inc
cwde
clc
xor
jnp
repz
lahf
push
xor
lock
jg
out
jle
iret
mov
jae
pop
aas
es
cld
pop
int
or
(bad)
sbb
sbb
dec
hlt
popf
inc
pop
enter
mov
aas
test
shr
push
lods
(bad)
pop
xor
mov
std
iret
sahf
and
loope
fadd
cmps
dec
sbb
hlt
loop
jecxz
add
aas
mov
not
pop
xchg
add
mov
mov
xlat
mov
mov
pop
jmp
ss
xchg
push
shl
imul
jl
aad
clc
sbb
icebp
jmp
adc
sbb
pop
jg
jge
jmp
idiv
ds
pop
mov
call
jg
ffreep
sbb
pop
add
push
stos
sub
in
ds
xor
mov
jl
in
ss
cmps
mov
mov
cmp
mov
dec
jne
out
arpl
js
mov
clc
mov
fild
mov
cmp
ficomp
inc
rcr
ins
jmp
bnd
paddb
out
loopne
je
or
xlat
clc
int
pop
mov
mov
mov
mov
call
test
inc
ret
(bad)
out
(bad)
add
lahf
xor
mov
ja
fbld
jle
pop
pop
dec
in
ins
or
sahf
push
in
call
(bad)
fdivp
repz
mov
adc
(bad)
mov
sub
test
leave
outs
mov
push
mov
mov
popf
add
test
push
lds
daa
hlt
call
mov
mov
(bad)
jg
std
dec
mov
(bad)
mov
call
outs
cld
cmps
movs
jg
scas
test
cmp
ss
mov
mov
or
mov
or
ffreep
inc
mov
lahf
xchg
(bad)
movs
mov
clc
out
hlt
mov
ds
fcomi
repnz
jg
aaa
enter
jg
inc
mov
mov
xor
clc
dec
paddd
lock
call
lock
sbb
test
pop
jle
adc
fcmovb
cmp
clc
or
icebp
fistp
ds
scas
nop
out
dec
xlat
hlt
loop
cwde
(bad)
movs
add
dec
dec
(bad)
mov
jle
fucomip
ja
(bad)
mov
xchg
(bad)
xor
pop
jg
(bad)
call
mov
ret
dec
mov
cli
scas
xor
loopne
xor
or
jle
test
inc
hlt
iret
(bad)
pop
dec
lock
pop
cmps
and
ret
(bad)
xlat
dec
fwait
pop
repnz
cld
mov
iret
pop
out
ja
jmp
sub
lea
fcomip
ja
rcl
jg
(bad)
adc
jmp
dec
mov
cmp
push
cld
scas
std
pop
repnz
aas
dec
lahf
cmps
or
inc
adc
inc
clc
lea
std
ror
lock
ja
jg
clc
outs
add
pop
and
lahf
mov
paddb
fcmovnbe
stos
jg
mov
mov
shr
pop
stc
stc
int
popf
xor
or
pop
and
in
dec
cmps
loopne
std
iret
dec
lahf
scas
jmp
cld
xor
xchg
scas
pop
jmp
sbb
or
and
mov
iret
dec
jle
fisttp
jecxz
cld
fbld
outs
(bad)
fs
mov
repnz
pop
cli
dec
mov
mov
imul
repz
dec
inc
or
jmp
inc
cli
(bad)
(bad)
mov
psubb
adc
scas
cmc
(bad)
ds
pop
std
leave
mov
dec
pop
std
push
aam
aaa
push
(bad)
push
jg
div
mov
das
cdq
stos
(bad)
aaa
stc
jne
pop
xor
dec
scas
cld
sar
mov
cmp
(bad)
pop
pop
sub
(bad)
in
pop
jge
cs
es
cld
ds
leave
outs
repz
and
sub
push
hlt
int
repnz
xor
repnz
cmps
push
lahf
ret
aad
adc
(bad)
and
inc
and
mov
daa
aam
and
shr
icebp
sub
repnz
test
sti
ins
jle
pop
lock
inc
cli
(bad)
mov
push
ret
ret
pop
push
jle
icebp
mov
jle
aas
call
cli
stc
pop
(bad)
pop
ror
(bad)
inc
cmc
sbb
lock
out
popa
cli
fwait
sub
mov
outs
into
daa
adc
inc
pop
(bad)
push
pop
cwde
clc
mov
popa
add
stc
hlt
fld
and
cld
add
sar
pop
pop
adc
imul
mov
pusha
test
and
adc
fwait
jle
sti
std
sbb
xor
add
mov
std
or
(bad)
dec
(bad)
jmp
(bad)
jmp
(bad)
call
std
pop
mov
(bad)
or
loopne
and
jl
xchg
xchg
jg
es
sti
scas
rol
dec
loopne
cli
out
push
jmp
hlt
jg
idiv
sar
call
cli
std
adc
cld
or
ror
adc
mov
push
or
lahf
push
movs
dec
rcr
xor
xchg
std
out
mov
cmp
mov
je
or
inc
mov
fcomip
ja
loop
dec
dec
jo
(bad)
add
sbb
sar
je
jg
lods
sar
lock
add
dec
cmc
scas
rol
rol
aas
daa
scas
jmp
pop
cli
cmp
out
clc
hlt
out
ret
fistp
ret
popf
fist
pop
std
aad
lock
add
inc
movs
mov
push
repnz
add
mov
mov
call
(bad)
add
dec
cli
(bad)
jg
(bad)
call
mov
dec
(bad)
(bad)
in
lock
inc
cli
popf
push
and
push
sub
loope
cld
mov
lds
cld
xor
(bad)
call
bound
shr
dec
jp
inc
arpl
cmp
cmp
in
std
cs
int3
fild
aam
aas
sub
loope
idiv
jecxz
jo
out
jo
aaa
icebp
xlat
jg
iret
rcr
mov
push
movs
jno
xor
dec
or
sar
ins
dec
cld
cmp
fidivr
inc
stc
in
xchg
outs
jmp
retf
stc
call
dec
sar
aaa
in
pop
push
mov
mov
mov
inc
cmps
mov
adc
std
sbb
call
sub
cld
or
sbb
xor
xor
or
pushf
adc
aas
jg
cli
call
(bad)
and
std
fldcw
pop
or
mov
scas
jle
int3
retf
je
mov
imul
ror
cli
in
fadd
inc
hlt
jg
rcr
ja
inc
jae
xlat
jb
(bad)
jg
(bad)
push
scas
shr
pop
arpl
pop
sar
jg
(bad)
jmp
sar
call
cli
call
imul
cmp
arpl
dec
jg
cli
(bad)
cmp
inc
cld
iret
xor
mov
adc
lock
in
das
push
cmc
dec
or
xor
ja
clc
mov
inc
out
int
or
push
cld
test
int
(bad)
(bad)
inc
jg
mov
outs
jp
xchg
aaa
jg
jg
in
scas
shl
int3
jmp
clc
call
mov
lock
sub
pusha
cwde
(bad)
jecxz
push
xor
lahf
cld
push
mov
(bad)
popf
nop
ret
push
clc
cmp
and
pop
loope
fist
fstp
sahf
(bad)
sti
in
adc
dec
movs
jg
lock
mov
rcr
ds
xlat
ins
jmp
push
call
cmc
dec
std
call
cmp
daa
jmp
(bad)
mov
neg
lea
aaa
std
pop
lock
out
test
jg
(bad)
mov
dec
mov
stos
pop
out
lods
xchg
cld
out
jno
jmp
push
std
es
outs
stc
sbb
mov
sub
and
mov
idiv
retw
fwait
dec
or
repnz
lods
rcr
outs
inc
dec
add
lahf
cld
sahf
cld
mov
daa
adc
pop
hlt
movs
in
or
mov
icebp
jmp
stc
clc
popf
jns
jle
test
aaa
mov
rol
and
aaa
call
pop
rcl
pop
inc
mov
jg
shl
loopne
jmp
retf
mov
jg
adc
scas
(bad)
mov
aas
cli
sahf
hlt
mov
add
dec
inc
push
loop
cld
cli
in
sbb
fidiv
mov
aas
test
mov
mov
jg
mov
xchg
jg
inc
cld
ja
lea
mov
xor
xor
pop
xchg
stc
jecxz
jmp
das
mov
cld
repz
lods
lahf
cld
clc
outs
(bad)
jecxz
int
not
xchg
repnz
(bad)
in
jle
cli
out
push
cli
xchg
dec
call
jg
push
pushf
(bad)
jne
loop
dec
or
hlt
das
(bad)
ret
xchg
sar
loopne
jnp
test
pop
sub
add
jno
add
lock
(bad)
or
jle
loop
jle
jne
pop
not
mov
(bad)
icebp
fild
mov
fcmovu
jg
(bad)
mov
mov
outs
outs
jg
sbb
(bad)
(bad)
cmp
out
and
dec
mov
mov
fld
or
mov
daa
inc
bound
pop
jg
(bad)
dec
sar
(bad)
jecxz
std
call
in
xlat
mov
(bad)
out
and
out
repnz
(bad)
jecxz
test
fdivr
dec
int3
jmp
adc
div
(bad)
outs
add
jmp
shr
mov
cwde
xor
xor
scas
xor
push
not
in
or
mov
adc
std
pop
xor
mov
js
pop
(bad)
ss
(bad)
jne
cmc
imul
cmp
shl
mov
xchg
pop
not
push
hlt
pop
repz
call
test
jnp
inc
(bad)
cld
cmp
xchg
jmp
lods
jle
mov
iret
xchg
repnz
ins
pop
movs
push
jl
rcl
faddp
aas
inc
or
out
call
leave
scas
inc
out
leave
scas
cmc
imul
sar
push
cli
imul
mov
(bad)
pop
cmp
fcomip
adc
pop
test
push
bound
daa
loop
cld
mov
ret
cli
xor
std
pop
dec
sub
imul
aaa
jo
cmp
add
call
jnp
(bad)
fist
jle
pop
jecxz
clc
xor
out
scas
cmc
dec
push
sub
push
cs
and
mov
std
or
das
cmp
pop
sbb
stc
add
xchg
mov
pop
sbb
inc
cld
inc
cmp
push
or
int
adc
into
or
and
mov
mov
loope
xchg
jno
(bad)
(bad)
imul
jnp
pushf
gs
aam
call
rol
(bad)
(bad)
(bad)
scas
(bad)
jp
sti
mov
cld
push
repnz
outs
lock
test
out
fistp
stc
or
leave
xor
data16
xchg
test
mov
sahf
(bad)
out
mov
cdq
(bad)
(bad)
ins
jg
xchg
sar
scas
jle
sub
dec
jo
iret
loop
dec
(bad)
mov
outs
int3
cdq
(bad)
out
aas
int
cld
inc
hlt
cmp
xor
mov
mov
sub
hlt
cmp
jg
call
clc
push
xor
(bad)
pop
cli
das
cld
sbb
inc
outs
add
cld
mov
(bad)
icebp
mov
loopne
or
(bad)
ds
sbb
sub
test
(bad)
(bad)
xchg
mov
sbb
out
repnz
dec
(bad)
fidivr
clc
add
idiv
cmp
sub
(bad)
xlat
aas
lds
inc
push
add
adc
fbld
(bad)
and
mov
fist
pop
dec
aas
scas
jg
icebp
scas
and
imul
clc
popf
fdivr
sti
int
xor
in
(bad)
hlt
fild
retf
out
js
out
loopne
pop
sti
pop
jle
aas
sub
sub
mov
and
cmp
mov
cmps
movs
lds
stc
xlat
retf
(bad)
jg
mov
pop
cli
out
cld
push
clc
out
movs
(bad)
xchg
mov
imul
adc
cmc
cdq
jns
and
imul
jmp
mov
pushf
push
data16
mov
cwde
clc
aaa
cli
xor
jecxz
hlt
leave
pop
dec
fistp
fbstp
jg
les
std
mov
dec
cmp
dec
jg
pmuludq
pop
dec
jmp
inc
icebp
imul
hlt
repz
cmp
lods
call
nop
vcomiss
xchg
call
add
fcomip
rcr
push
adc
clc
(bad)
scas
call
sbb
js
mov
std
stos
gs
ror
int
fild
jae
stc
sti
sub
aas
cmp
addr16
inc
(bad)
fisttp
(bad)
fucomi
(bad)
jg
std
pop
stos
push
jmp
xabort
add
out
inc
outs
push
cld
mov
out
cmc
jmp
pop
jg
(bad)
jge
test
sbb
mov
jmp
jmp
or
adc
sbb
out
idiv
mov
dec
xchg
loop
sub
cli
arpl
jmp
lods
test
icebp
loope
iret
mov
repnz
mov
sub
into
push
test
out
push
repnz
(bad)
hlt
call
movs
jg
out
sub
nop
scas
(bad)
idiv
push
sar
lock
mov
pop
sahf
call
scas
call
aas
and
fisttp
shr
jmp
(bad)
ds
sbb
scas
clc
ins
test
mov
jmp
xchg
mov
push
or
xor
add
sti
cwde
mov
in
adc
dec
sbb
pop
dec
jle
ffreep
cld
neg
call
test
add
adc
adc
xchg
fbld
outs
clc
imul
(bad)
cwde
std
xchg
or
mov
std
jne
fwait
idiv
out
xlat
clc
push
xchg
loopne
jo
dec
adc
aas
cmc
imul
neg
cld
ss
lahf
fcom
jmp
jp
lock
xor
sar
repz
push
pop
push
or
mov
lahf
inc
(bad)
cld
push
mov
cld
sbb
add
in
jecxz
lock
(bad)
cmp
aad
inc
mov
hlt
imul
ins
std
lahf
mov
out
mov
hlt
sbb
std
ficomp
xlat
scas
test
xlat
(bad)
icebp
jno
fwait
adc
cli
or
mov
cmp
(bad)
cmp
rcl
popa
dec
les
(bad)
sbb
std
jmp
(bad)
outs
xor
xchg
adc
retf
jmp
mov
cmps
pusha
jbe
and
xor
outs
icebp
imul
mov
dec
mov
shl
enter
iret
outs
std
or
outs
scas
cmps
xor
in
mov
repnz
gs
or
dec
js
jle
scas
std
imul
xor
int3
int
outs
sub
aam
adc
cli
out
jnp
mov
cmp
jmp
clc
jle
pop
jecxz
push
std
push
dec
inc
in
xchg
jo
call
inc
jmp
call
push
call
and
jg
ret
adc
and
scas
push
xchg
xor
adc
push
shl
sahf
xor
mov
xor
inc
mov
not
movs
jnp
loope
(bad)
ds
jbe
cmps
fwait
into
das
lock
aas
mov
mov
mov
pop
mov
fistp
or
sub
and
xchg
pop
clc
mov
test
imul
cmps
call
(bad)
iret
fisttp
cld
mov
data16
div
sar
loopne
std
mov
mov
nop
(bad)
loopne
cmps
mov
ret
retf
pop
jg
std
neg
cld
inc
add
inc
mov
mov
jle
pop
out
mov
jmp
retf
jmp
out
not
add
js
xlat
stc
mov
xchg
fcomip
idiv
xchg
jg
fild
jg
push
push
cld
stc
or
jg
cld
stc
or
iret
ffreep
cld
stc
mov
stc
sets
(bad)
ds
js
into
and
jmp
ins
(bad)
cmp
dec
cmp
iret
jmp
mov
xchg
jmp
adc
pop
daa
rcl
shr
mov
jae
loopne
ret
fs
pop
gs
(bad)
scas
fucomip
xlat
adc
rep
and
mov
push
(bad)
in
cmp
cdq
popf
cdq
call
lock
ja
xor
fnstsw
outs
add
add
jmp
mov
mov
std
mov
cmp
shl
xchg
pop
pop
ins
enter
leave
mov
or
outs
std
cmp
icebp
int3
shl
mov
jle
fist
in
psraw
repz
fcomip
idiv
or
jl
mov
aas
adc
sub
enter
or
xor
jmp
or
ret
mov
and
jp
(bad)
das
inc
cmps
cld
pop
mov
xchg
jg
test
cmp
jle
cmc
movs
or
push
lock
shr
mov
push
fnstsw
pop
into
pop
std
mov
mov
lea
out
xor
jne
rcr
adc
adc
or
inc
leave
neg
inc
(bad)
adc
jmp
lock
or
imul
xor
inc
fild
enter
call
jg
div
aaa
cmp
pushf
cmp
call
outs
repnz
fnstsw
pop
jecxz
add
pushf
dec
pop
dec
push
jmp
adc
(bad)
call
rcr
mov
(bad)
jmp
xlat
ret
cmp
(bad)
xchg
mov
iret
mov
pop
pop
(bad)
push
jmp
sti
mov
mov
adc
add
adc
les
push
movs
sbb
inc
jg
hlt
idiv
dec
call
jg
sti
push
scas
ds
push
in
push
pop
jl
jg
add
pop
xor
ja
xor
cdq
cmps
mov
xor
sub
stc
adc
idiv
pop
(bad)
scas
clc
pop
jle
into
mov
out
inc
jmp
(bad)
sub
and
push
mov
lock
fucomip
xchg
pop
cld
imul
sub
fcomip
loopne
jecxz
ror
loopne
aas
stc
inc
adc
std
imul
(bad)
(bad)
cli
sti
pop
ret
das
je
not
pop
in
cld
sbb
xor
retf
pusha
mov
xor
mov
data16
xchg
cld
shl
mov
bound
cld
sbb
mov
call
std
mov
dec
jg
sahf
jg
cmc
loopne
pop
adc
mov
(bad)
outs
sar
inc
(bad)
jg
(bad)
jmp
(bad)
dec
jmp
jg
rol
inc
dec
hlt
call
jo
mov
out
inc
mov
adc
cli
fstp
xchg
repz
xchg
and
(bad)
hlt
iret
(bad)
(bad)
imul
mov
clc
pop
loope
fist
fcmovnu
cmp
mul
pop
inc
jg
nop
cli
or
xor
jecxz
cmp
mov
lahf
iret
jmp
jo
xchg
ds
adc
mov
movzx
std
mov
add
(bad)
(bad)
fild
dec
rcl
mov
or
or
pusha
jb
and
stc
cmc
fs
and
xor
call
inc
xchg
cld
pop
repnz
lahf
or
popf
enter
cld
loope
aas
push
jae
pop
adc
into
pusha
dec
cmp
inc
jecxz
mov
dec
push
or
or
idiv
jmp
cmps
and
pop
xor
fistp
jns
dec
sar
bound
std
and
mov
aas
push
add
sti
(bad)
loopne
pushw
add
std
push
mov
cs
gs
jnp
pop
jo
jle
lahf
cli
jge
sti
push
push
jmp
pop
xchg
sub
mov
(bad)
and
mov
mov
jle
mov
(bad)
cs
pushf
stc
neg
cmps
jg
dec
jb
(bad)
mov
stos
xchg
jbe
xlat
aam
cli
shl
(bad)
outs
dec
and
mov
nop
aas
add
xchg
fs
pop
jp
adc
cmp
lods
sbb
call
xor
into
cmp
pop
inc
(bad)
sbb
or
xchg
xor
and
jmp
in
and
out
jno
jg
leave
sar
xchg
push
mov
std
fidivr
das
xchg
pop
lea
hlt
sar
call
iret
jle
outs
dec
cli
cld
pop
mov
outs
adc
loop
add
das
(bad)
push
adc
lahf
xchg
ret
(bad)
bound
in
aas
jns
dec
mov
jge
mov
dec
xor
cmc
icebp
imul
and
scas
icebp
fwait
mov
pop
dec
jl
jnp
call
hlt
out
scas
xor
repz
(bad)
idiv
or
pushf
jecxz
popa
pushf
aas
or
jg
(bad)
fbld
add
dec
add
(bad)
sti
cld
ficomp
(bad)
scas
adc
jg
xchg
pop
jns
jo
imul
pop
mov
cmc
mov
or
lea
add
xor
inc
inc
ins
mov
stc
mov
neg
clc
(bad)
cmp
(bad)
shl
iret
out
lock
dec
(bad)
stos
mov
test
inc
(bad)
inc
xchg
(bad)
dec
jg
std
cld
int
outs
pop
cmps
sti
sbb
mov
push
lds
pop
or
or
loopne
ret
jmp
mov
jge
outs
xchg
ins
sub
cld
fidivr
rcr
cld
ja
inc
clc
div
xor
xchg
popf
jb
(bad)
xor
cmc
arpl
test
cs
cdq
fistp
lea
(bad)
xchg
loopne
fild
jns
sbb
push
out
shr
stc
imul
stos
repz
cmp
(bad)
mov
inc
(bad)
cmp
aas
fiadd
outs
cld
xchg
les
bswap
std
pop
fisubr
mov
cli
daa
stc
sub
sub
fnstsw
icebp
imul
cmc
mov
add
and
ins
popa
cmp
or
imul
mov
rol
pop
lahf
and
mov
call
addr16
cmp
out
in
test
or
les
sti
(bad)
icebp
idiv
cmc
jmp
xor
add
mov
retf
jmp
jg
xchg
js
rdtsc
sbb
cmp
sti
aas
sbb
inc
jg
(bad)
mov
dec
hlt
iret
scas
cmc
mov
(bad)
cmp
outs
jmp
sub
mov
hlt
sti
loope
pop
jmp
cli
and
bound
xchg
(bad)
xchg
cld
rol
jne
icebp
sub
retf
outs
mov
out
loope
fnstsw
xlat
sbb
cmp
ret
xchg
rcl
leave
das
stc
jecxz
call
add
sti
int
repz
sar
call
std
dec
pop
std
sbb
sbb
in
jg
jmp
pop
cmps
clc
jmp
mov
stc
cmc
jle
daa
inc
jmp
mov
push
repnz
loope
or
jae
pop
repnz
mov
inc
std
jne
xchg
xor
pop
dec
pop
(bad)
cmp
mov
scas
mov
mov
out
repnz
scas
xchg
inc
pop
mov
je
iret
add
(bad)
cmp
loopne
and
mov
(bad)
xlat
clc
jmp
jmp
test
push
(bad)
inc
(bad)
mov
jmp
(bad)
jg
(bad)
jmp
cli
dec
cli
jmp
(bad)
call
std
jg
(bad)
inc
dec
push
cli
mov
mov
outs
stc
pop
mov
cli
cmc
rcl
pop
dec
cmp
dec
cld
scas
leave
imul
sbb
mov
call
sti
cmc
dec
out
aaa
adc
pop
rcl
mov
(bad)
(bad)
adc
inc
lods
ficomp
mov
cmc
mov
cmp
pop
jne
pop
rcl
stc
outs
leave
dec
movs
aas
sub
fsub
xcrypt-ofb
cmps
outs
jle
fild
mov
jmp
inc
jmp
enter
dec
jg
pop
xchg
sti
pop
mov
in
in
mov
fistp
xlat
add
fnstsw
jbe
mov
(bad)
aaa
xchg
push
mov
aas
xor
mov
dec
les
jg
xor
ret
adc
jne
mov
mov
pusha
test
retf
fbstp
jecxz
fcomi
shr
repnz
(bad)
cli
addr16
mov
push
fcomp
repz
loope
pop
scas
jg
lods
mov
xchg
aam
jb
pop
movs
mov
add
outs
push
or
hlt
hlt
sbb
dec
add
in
and
leave
or
jno
in
call
hlt
(bad)
cld
mov
neg
in
sar
cmc
sbb
jmp
add
das
std
cmc
xor
clc
in
xlat
sti
sub
aaa
movs
js
push
mov
fst
out
pop
cli
push
fdiv
popa
or
sub
cmp
wbinvd
enter
das
call
pop
pop
shl
fwait
(bad)
cli
inc
push
push
add
std
cmps
mov
jecxz
(bad)
rol
imul
cld
push
not
imul
sbb
scas
and
sub
mov
adc
leave
outs
pushf
outs
fcmovnu
(bad)
adc
test
lahf
fistp
xchg
in
(bad)
iret
js
push
pushf
clc
cld
les
jg
xchg
dec
dec
les
jle
jg
cdq
mov
lock
aas
cmc
imul
jg
hlt
adc
cli
popf
icebp
iret
fisttp
sbb
lea
(bad)
mov
lea
jle
sbb
dec
repz
fwait
cld
mov
inc
jle
pop
jecxz
and
push
cli
ss
repnz
adc
jg
loope
push
inc
jg
fwait
jle
pop
jmp
mov
stc
lahf
inc
aas
mov
icebp
sbb
out
jg
jge
xchg
fisttp
cld
adc
(bad)
sbb
(bad)
jg
cmp
loopne
push
fwait
pop
fwait
jle
dec
(bad)
dec
or
das
movs
iret
data16
jg
mov
add
add
in
(bad)
mov
neg
jnp
mov
sti
adc
lahf
pop
mov
ss
jg
mov
outs
call
retf
jmp
std
aas
or
fild
ret
leave
cmp
repz
rcr
(bad)
clc
jmp
xlat
or
cld
(bad)
hlt
(bad)
mov
out
(bad)
jmp
test
(bad)
fidivr
scas
lahf
std
xchg
add
imul
cld
mov
adc
inc
imul
sbb
mov
jmp
or
jne
mov
dec
mov
or
outs
fnstcw
xchg
pop
out
cld
out
dec
add
fwait
rcl
mov
add
adc
add
add
ret
outs
jle
cmp
cld
test
add
jmp
(bad)
mov
adc
and
fwait
call
or
int
repnz
sbb
jmp
cld
or
fdivr
call
mov
mov
jg
jp
aas
loop
out
loope
fcomip
loopne
sar
movs
fstp
ds
jg
cld
imul
jnp
(bad)
push
mov
mov
std
pop
jecxz
mov
jg
dec
mov
xchg
enter
fild
inc
xor
pop
lods
call
in
and
cmp
clc
aas
xchg
mov
mov
neg
sbb
dec
mov
retf
outs
cmp
movs
cld
sbb
test
shr
mov
clc
in
mov
jg
scas
add
mov
lahf
std
push
iret
add
mov
mov
cli
fistp
stc
xlat
dec
es
pop
retf
jmp
xchg
outs
jle
iret
aas
xchg
jmp
rcl
lds
pop
(bad)
pop
mov
jle
fucomip
dec
dec
jmp
out
outs
xchg
jle
imul
std
dec
shl
add
cli
cmp
out
cli
mov
sti
cdq
pop
inc
jo
mov
(bad)
(bad)
std
(bad)
(bad)
mov
xor
popa
popa
call
cmp
std
(bad)
ror
daa
xor
inc
cli
in
scas
es
mov
(bad)
std
jg
mov
mov
aaa
ror
jle
mov
adc
mov
jg
(bad)
sti
not
ja
hlt
sti
jg
(bad)
call
call
std
div
call
out
lahf
ror
call
cmp
or
stos
or
mov
jp
aaa
push
sar
push
dec
jg
idiv
push
mov
cld
aaa
ins
jg
jl
lahf
(bad)
fsubr
sbb
fidivr
jmp
mov
in
pop
dec
call
fcomip
iret
cmps
jg
enter
or
sbb
or
outs
(bad)
sbb
adc
mov
jle
outs
lock
sbb
xchg
test
(bad)
xor
dec
in
std
test
or
or
xchg
scas
(bad)
push
repz
push
jmp
cld
push
lds
xchg
daa
cmc
(bad)
(bad)
sahf
dec
jmp
movd
jne
scas
dec
cli
sti
aas
pushf
adc
and
std
out
ja
add
sar
cmp
int
out
jg
scas
in
rcr
mov
out
std
fwait
call
ss
std
fcmovnbe
or
std
fist
clc
pop
repz
scas
fcom
shr
add
(bad)
add
dec
sti
cmp
mov
sub
stc
outs
fs
(bad)
(bad)
(bad)
fwait
cld
out
mov
std
aaa
std
int
push
cld
clc
int
repz
jle
(bad)
aaa
mov
cld
push
mov
jmp
aas
jle
(bad)
mov
(bad)
(bad)
add
mov
cld
(bad)
xlat
fcomip
xlat
xor
fwait
clc
div
sahf
nop
aam
xchg
jp
stc
pop
shr
repz
stc
(bad)
stc
sub
in
clc
(bad)
pop
jl
imul
aas
pop
std
imul
std
fwait
sar
call
cld
jl
aas
mov
fisttp
or
xor
mov
lea
pop
stc
repz
or
stos
sahf
les
jg
lock
adc
or
aam
(bad)
ficomp
jb
shl
xlat
ja
cli
jg
pop
ss
pop
call
clc
scas
dec
js
das
into
cwde
add
das
clc
lea
addr16
imul
jns
pop
mov
pop
loope
fisttp
xchg
enter
(bad)
mov
cld
outs
mov
lahf
dec
jno
aas
nop
arpl
dec
jno
jg
pop
std
dec
and
push
jmp
(bad)
mov
stc
int
in
(bad)
xchg
mov
cmp
mov
fs
jmp
xchg
sbb
clc
add
(bad)
ins
mov
aaa
jl
mov
mov
addr16
lock
cld
icebp
test
scas
cdq
cld
jp
pop
cld
addr16
fstp
jmp
mov
neg
jmp
jbe
(bad)
das
(bad)
xchg
stc
xchg
(bad)
xlat
cli
(bad)
push
cmp
pop
mov
jle
sbb
pop
bnd
dec
mov
stc
xchg
(bad)
xlat
cli
(bad)
push
fwait
pop
ret
xor
dec
sbb
jge
(bad)
out
bnd
cs
shr
lock
or
mov
cli
(bad)
lock
(bad)
loopne
in
(bad)
sub
xor
sbb
jp
dec
cli
iret
xor
cld
(bad)
push
adc
mov
inc
cmc
jg
pop
push
loop
hlt
mov
xor
fidivr
daa
idiv
xchg
sar
shl
(bad)
lock
dec
jecxz
fist
push
mov
inc
sbb
(bad)
add
mov
cdq
icebp
or
cld
pop
mov
(bad)
pop
inc
add
pop
push
js
fild
jg
or
or
or
adc
cmc
rcr
inc
shl
mov
sbb
cli
mov
stc
cmc
imul
mov
jmp
call
sti
mov
pop
call
sti
ja
pop
call
mov
clc
xchg
(bad)
(bad)
jle
pop
cld
out
rep
xor
(bad)
outs
mov
fwait
loop
clc
call
and
dec
inc
sar
push
push
adc
ja
sbb
rcl
lahf
dec
aas
xchg
and
daa
ret
xlat
loopne
pop
cld
repz
mov
push
mov
or
or
std
cmp
xor
cmp
mov
or
arpl
mov
icebp
(bad)
icebp
adc
dec
popa
lods
sbb
aaa
xor
jmp
sti
xor
sub
cli
ins
jl
(bad)
movs
adc
fnstsw
xlat
xor
mov
lods
outs
std
cwde
popf
jne
push
add
pop
mov
sbb
push
inc
xchg
xchg
xchg
add
mov
repnz
repz
arpl
xchg
xor
fisttp
push
(bad)
outs
clc
pop
mov
(bad)
pop
lock
sbb
(bad)
pop
mov
ret
shr
adc
std
sub
cmc
shr
and
scas
mov
adc
(bad)
scas
std
inc
mov
or
clc
or
mov
test
(bad)
xchg
fild
in
sub
fwait
cld
push
push
mov
cmp
(bad)
cli
jbe
cdq
push
mov
inc
loopne
push
clc
add
out
icebp
dec
cli
mov
mov
jns
pop
jg
push
or
mov
ret
pop
mov
nop
aas
add
dec
lock
int
and
pusha
clc
inc
and
pop
push
push
jle
fild
cwde
xchg
mov
jp
outs
sbb
(bad)
shl
jg
es
popf
pop
fisttp
out
push
add
lahf
add
pop
inc
cmp
push
and
cli
xlat
xor
cld
adc
call
sub
retf
les
and
inc
mov
(bad)
push
xchg
xor
sub
(bad)
call
mov
jle
jl
fneni(8087
in
scas
addr16
ins
mov
jnp
retf
cmps
jle
inc
or
icebp
sub
clc
xchg
xor
(bad)
sti
outs
pop
int3
into
out
(bad)
call
cmc
sub
add
(bad)
outs
sti
imul
pop
mov
(bad)
popf
jp
jnp
loopne
fisubr
push
cld
xor
stc
(bad)
in
fistp
dec
out
repnz
dec
or
std
inc
push
push
cmp
mov
mov
sub
stc
sbb
xchg
(bad)
jge
(bad)
cmp
hlt
das
or
jmp
imul
cmp
scas
jmp
dec
xor
cs
lods
lock
mov
adc
test
inc
cld
mov
mov
mov
cli
xchg
(bad)
cmp
or
inc
jl
(bad)
loope
fbstp
push
jge
out
rcr
dec
cld
fld
in
jle
mov
icebp
jmp
push
aad
aas
mov
lock
jmp
(bad)
(bad)
pop
mov
push
out
int3
ins
mov
cld
pop
std
cs
jecxz
(bad)
outs
xchg
mov
sub
sar
ja
inc
push
dec
(bad)
fisubr
iret
test
rcr
add
xor
sahf
cmps
outs
mov
or
repnz
outs
shl
idiv
cmps
sbb
or
add
jl
sti
loope
mov
cld
bsf
(bad)
clc
clc
cmp
xor
iret
adc
aas
push
ror
(bad)
popf
clc
arpl
cmps
mov
cli
mov
inc
lahf
add
jmp
stos
les
cmp
xor
cli
xor
scas
lds
dec
jg
shr
lock
push
sar
mov
push
jl
sti
cld
sbb
pop
(bad)
jle
jge
lock
(bad)
invd
push
jns
push
jg
(bad)
sahf
lods
test
mov
mov
add
jle
cmp
js
or
mov
(bad)
inc
sub
cld
mov
cmps
adc
pop
mov
jg
jno
xchg
fwait
jns
std
icebp
icebp
(bad)
dec
aam
mov
cld
xor
mov
lock
std
push
jmp
add
push
fadd
fdivr
fisttp
sbb
(bad)
cmc
xchg
xchg
inc
gs
pop
out
(bad)
ss
mov
icebp
ror
jl
adc
fwait
call
out
add
fdivr
out
mov
cmps
pop
ret
call
adc
shl
push
mov
(bad)
imul
rol
pushf
repnz
mov
dec
hlt
(bad)
call
into
icebp
outs
sti
(bad)
ss
xchg
pop
jle
mov
mov
leave
icebp
aam
lahf
(bad)
push
push
add
mov
pop
mov
push
loope
dec
sub
cmps
mov
fwait
add
pop
rcr
jg
scas
movs
adc
and
dec
sub
cwde
std
sbb
mov
push
(bad)
(bad)
mov
sub
xor
(bad)
ror
jg
mov
dec
aam
(bad)
mov
icebp
jg
fild
test
call
add
iret
movs
mov
xlat
movs
out
call
sti
ror
pop
adc
test
jo
jmp
lods
jmp
in
adc
adc
mov
(bad)
fisttp
idiv
sar
call
scas
test
movs
test
out
dec
(bad)
sbb
fldcw
idiv
mov
mov
std
std
pop
ror
fistp
jle
mov
test
jge
cmp
nop
out
push
std
push
mov
stc
inc
ret
out
std
add
mov
pop
(bad)
imul
cli
mov
hlt
std
aas
dec
xor
push
push
shl
stc
gs
xchg
mov
test
out
dec
mov
pop
dec
xor
rcr
and
out
adc
jle
jp
outs
mov
call
(bad)
cmp
sbb
jg
ret
movs
mov
or
ror
fist
std
mov
or
aas
inc
out
sbb
jg
xor
sti
jg
fidivr
jg
mov
out
mov
iret
(bad)
push
lahf
std
push
aam
aas
inc
mov
fisttp
dec
hlt
jg
icebp
pop
inc
xchg
test
cdq
fwait
pop
pop
inc
mov
ds
leave
shr
adc
ret
sbb
pusha
cwde
sub
enter
(bad)
mov
shl
das
add
das
push
in
and
push
mov
mov
dec
mov
int3
inc
call
mov
cdq
gs
dec
jmp
pop
or
imul
hlt
iret
scas
icebp
xchg
inc
mov
cld
jp
test
inc
(bad)
sbb
in
pop
push
loopne
fidivr
jne
inc
mov
mov
sub
idiv
test
test
call
cmp
inc
inc
dec
add
cmc
ret
(bad)
xlat
stc
cmc
jle
aaa
fdivr
xor
xor
scas
(bad)
xlat
and
(bad)
rcr
loopne
nop
sbb
(bad)
jmp
push
lahf
jg
std
pop
push
retf
jge
(bad)
sub
out
icebp
jmp
xlat
jg
jle
mov
jbe
ins
sub
xor
xchg
addr16
mov
idiv
ds
jmp
iret
mov
idiv
repz
push
in
cli
xor
pop
std
xchg
jg
mov
out
mov
(bad)
sbb
pop
sbb
scas
pop
cmc
xor
lahf
lods
mov
scas
dec
dec
loop
xchg
add
cmc
mov
jp
mov
sbb
out
mov
scas
ins
inc
imul
mov
jbe
sbb
lahf
add
jg
and
mov
sbb
out
jg
lahf
stc
rcl
dec
dec
stc
adc
jns
hlt
xlat
in
into
stc
lahf
xchg
(bad)
jp
and
shl
mov
std
xchg
es
std
sbb
jge
sar
push
hlt
out
mov
movs
fist
cli
sub
dec
pmaxub
pop
out
mov
mov
xchg
lock
push
jg
xlat
add
cli
ja
xchg
jle
mov
aas
enter
hlt
shr
retf
popf
(bad)
xlat
retf
dec
rcr
pop
dec
lds
inc
(bad)
fldcw
retf
inc
mov
sbb
repz
aas
mov
inc
mov
std
fstp
stos
mov
mov
dec
in
(bad)
sar
mov
adc
gs
jle
mov
sbb
loope
std
sbb
fidivr
iret
cwde
and
jle
(bad)
fdivrp
mov
xchg
pop
xchg
pusha
jmp
mov
pushf
ret
sub
cld
repz
call
aaa
xchg
imul
call
jg
std
(bad)
mov
hlt
fstp
inc
ins
jle
aas
iret
jmp
dec
cli
cld
adc
add
(bad)
push
cli
aas
jnp
mov
sbb
mov
sti
outs
(bad)
jmp
loop
clc
mov
pusha
or
repnz
jmp
or
mov
cmp
(bad)
aas
mov
sti
and
idiv
dec
inc
(bad)
cmc
or
jg
call
or
std
mov
or
std
jle
(bad)
sar
mov
mov
dec
lock
xchg
pushf
scas
fs
repz
inc
jle
mov
sub
pop
sti
(bad)
sti
test
(bad)
in
lds
(bad)
iret
lods
(bad)
adc
inc
jg
std
jg
xlat
nop
fsubr
std
fist
add
cld
add
push
jp
xlat
cmps
int3
sbb
jb
cs
jle
in
jle
cli
in
ja
dec
jle
retf
es
xchg
fild
inc
xchg
pop
arpl
push
jp
(bad)
mov
std
inc
mov
push
cmp
adc
dec
sti
xor
mov
mov
(bad)
mov
fsincos
in
jle
fcomip
mov
push
(bad)
popa
mov
(bad)
sti
or
pop
push
ret
ds
push
push
jg
dec
aaa
cli
rcl
aas
in
cli
xor
cs
mov
loope
mov
retf
push
enter
pop
(bad)
cmp
sti
dec
sar
cmp
mov
imul
lea
jle
retf
cs
aas
sub
lahf
shl
adc
aad
in
cmp
xor
iret
call
sub
out
aaa
dec
xor
adc
dec
icebp
xor
cld
lods
call
and
sti
dec
hlt
idiv
lahf
(bad)
out
mov
(bad)
aaa
cld
sub
(bad)
dec
clc
das
je
pop
(bad)
(bad)
sbb
repnz
cmp
arpl
movs
(bad)
(bad)
fs
cld
xlat
in
xchg
hlt
dec
cld
xor
aaa
mov
dec
mov
sar
cli
aaa
dec
jmp
(bad)
stc
clc
repnz
adc
sti
sub
jae
sub
dec
std
inc
sbb
cmps
movs
jmp
das
xchg
cmps
lods
xchg
out
loop
pop
int
cmc
ficomp
jge
and
scas
sbb
mov
adc
jns
jnp
scas
cmp
(bad)
jmp
stc
ins
dec
pop
jg
pop
jecxz
xchg
std
dec
call
pop
ror
call
shl
std
cld
std
call
and
jle
das
jmp
jmp
loope
jns
ja
push
jle
mov
retf
lahf
cli
jg
imul
sbb
add
(bad)
call
int3
push
addr16
hlt
mov
stc
out
leave
dec
fcom
add
add
sti
sti
pusha
push
ja
xchg
push
div
scas
call
aad
add
cmp
pop
hlt
xlat
scas
adc
stc
lahf
xchg
(bad)
mov
or
loopne
mov
jmp
xchg
test
jmp
mov
(bad)
jg
gs
pop
push
push
cmp
test
mov
adc
stc
fwait
dec
in
sti
movq
fwait
jmp
stc
mov
repz
scas
xlat
inc
std
xchg
(bad)
pop
push
jecxz
fldcw
ror
adc
or
pop
hlt
imul
call
(bad)
(bad)
xchg
mov
popf
dec
dec
std
pop
sahf
sub
cwde
(bad)
mov
imul
fild
pop
std
imul
mov
fucomip
loopne
cli
mov
(bad)
sti
scas
std
fbld
call
push
mov
movs
aas
pop
(bad)
loope
push
cmp
popf
std
fisub
cmp
rcl
jmp
aaa
(bad)
pop
mov
(bad)
cmp
(bad)
mov
adc
scas
inc
cmp
add
idiv
sti
cmc
mov
(bad)
pop
pop
jmp
stos
cdq
fistp
mov
pop
xchg
inc
ss
pop
mov
(bad)
data16
mov
ret
mov
mov
ror
pop
out
ret
push
cli
xor
dec
fsubr
jmp
xchg
dec
inc
imul
cli
jge
hlt
cmc
(bad)
aas
push
pop
icebp
mov
popf
xor
(bad)
mov
std
(bad)
hlt
dec
loop
je
adc
aam
es
jae
cli
shr
mov
call
cli
adc
pop
xor
daa
add
push
adc
jmp
(bad)
mov
push
pop
cmp
leave
add
gs
pop
(bad)
jmp
jg
aad
sti
cmc
jg
fisttp
call
(bad)
fmul
outs
jle
fistp
or
loopne
fist
push
mov
xchg
sbb
inc
call
loop
add
sub
addr16
outs
mov
inc
sbb
fwait
cld
cmp
lds
outs
hlt
vpxor
outs
add
adc
jmp
pop
arpl
sahf
jmp
rcr
ss
push
cmp
aas
loope
(bad)
mov
dec
outs
mov
cld
fstp
xchg
call
outs
std
mov
int
jg
lahf
cld
sti
lock
in
pop
dec
js
aaa
xchg
pop
mov
out
pop
and
pop
std
(bad)
mov
clc
sub
jecxz
scas
ret
inc
pop
mov
sbb
jg
imul
ud2
xor
add
push
or
(bad)
loope
sbb
std
ins
pop
std
scas
fadd
sbb
pop
jecxz
mov
cmp
das
js
adc
das
stc
pop
cld
mov
dec
xchg
sti
aas
clc
xchg
cld
sbb
scas
gs
pop
inc
xchg
mov
mov
mov
les
jo
pop
loop
leave
in
xchg
cmp
bound
mov
mov
xlat
in
lods
clc
cld
out
in
xchg
es
inc
add
add
std
dec
mov
ret
add
pushf
ss
inc
mov
(bad)
outs
jg
adc
mov
hlt
out
stc
xor
jmp
call
jg
adc
std
movs
and
and
in
mov
test
call
nop
xchg
adc
jecxz
adc
pop
fdiv
cmp
mov
xchg
add
out
push
push
jo
push
(bad)
loop
outs
jnp
dec
cmps
fld
cmp
sub
add
pop
mov
mov
sbb
jg
in
movs
outs
pop
and
outs
clc
xchg
fild
xor
sar
outs
clc
xor
(bad)
loope
fild
sbb
xchg
push
jge
xchg
fisttp
pop
xor
jnp
and
stc
pop
in
mov
add
not
mov
icebp
add
xchg
stos
clc
sub
daa
xchg
or
fcmovnb
add
or
scas
dec
push
jmp
sbb
(bad)
sar
mov
push
sar
icebp
neg
inc
(bad)
inc
call
inc
cli
jmp
cmps
nop
in
(bad)
fbld
pop
inc
mov
dec
(bad)
mov
in
loopne
std
cmps
hlt
stc
out
inc
(bad)
jg
lahf
std
push
hlt
repz
mov
dec
(bad)
call
sub
and
stc
adc
cdq
sub
shl
pop
clc
jae
int
out
inc
mov
leave
outs
addr16
sbb
or
mov
call
out
dec
mov
sahf
frstor
cld
sti
push
shr
clc
pop
cld
sbb
jmp
jno
das
push
push
pop
mov
lds
cwde
sub
mov
daa
addr16
sbb
cmps
add
mov
mov
mov
sar
and
pop
sbb
jle
pop
cld
bound
pop
add
aas
jmp
and
aam
or
hlt
(bad)
mov
cld
and
add
scas
cli
cmps
popa
mov
push
adc
sti
out
add
jg
mov
push
mov
mov
stc
repz
mov
loopne
xor
ins
lock
test
mov
scas
mov
bound
std
push
fbld
ja
push
inc
mov
ins
or
lds
dec
mov
sti
mov
jno
mov
std
cmc
jg
xchg
imul
pop
std
inc
pop
jg
or
pop
scas
call
inc
inc
clc
xor
lock
sahf
mov
ror
dec
sub
sahf
xchg
push
sub
push
stc
push
icebp
(bad)
and
xchg
icebp
mov
hlt
xchg
lea
sar
jg
xchg
sbb
and
cld
sbb
dec
neg
frstor
inc
mov
mov
or
inc
xor
or
dec
div
jmp
and
lock
mov
jbe
nop
hlt
outs
mov
imul
pop
jnp
add
(bad)
sbb
pusha
sar
out
bound
fs
jne
(bad)
xlat
stc
adc
cld
mov
loopne
stc
or
sbb
sti
(bad)
xchg
mov
jo
hlt
retf
(bad)
cdq
pop
ror
outs
(bad)
jmp
sub
loope
(bad)
xlat
clc
lea
add
jecxz
pop
(bad)
rcr
mov
mov
(bad)
cli
ins
mov
push
test
repz
push
xchg
inc
rcr
jle
xor
scas
add
fnstsw
out
dec
aas
jle
fcomip
mov
mov
and
pop
xor
push
(bad)
cmp
popa
push
popa
fnstsw
push
pop
out
sub
dec
cli
push
mov
jg
std
or
fnstsw
inc
in
pop
sbb
sar
cli
cmp
xchg
lock
les
or
in
adc
xor
sub
nop
xchg
push
mov
(bad)
data16
cld
outs
push
jns
mov
jle
pop
in
cmp
(bad)
loope
test
jle
lods
jg
xchg
adc
cmp
cmp
repz
jge
shr
cpuid
inc
or
cld
pop
rcr
push
sar
mov
icebp
lahf
or
movs
dec
lahf
(bad)
pop
mov
cmp
aas
enter
mov
lock
loopne
cld
repz
shl
jg
or
out
psrld
aaa
rcl
cld
repz
jo
jmp
jge
adc
mov
lahf
sar
adc
(bad)
clc
mov
sub
aaa
mov
push
gs
in
and
gs
mov
sar
jl
xchg
cld
fist
addr16
cdq
pop
fwait
inc
jno
inc
aad
jg
mov
jle
sbb
std
push
mov
into
outs
js
pop
or
lock
cli
dec
jle
inc
sti
aaa
stc
xor
(bad)
imul
(bad)
call
out
push
std
(bad)
out
xor
lds
(bad)
xchg
dec
cli
(bad)
enter
fisttp
cli
lods
and
jp
inc
fild
cmc
(bad)
jg
pop
inc
mov
pop
loopne
inc
sbb
imul
pop
call
fidivr
scas
cld
jp
(bad)
clc
fild
div
stc
jecxz
pop
jo
scas
repz
cmp
jg
repnz
(bad)
movs
pop
or
jg
pop
cld
sub
xchg
inc
loop
cli
cmc
test
cmc
pop
(bad)
mov
cmc
jnp
das
mov
dec
lds
clc
(bad)
out
or
fild
lahf
mov
clc
div
xchg
fisttp
daa
in
scas
cmps
jg
sbb
aaa
or
outs
sti
push
lock
(bad)
pop
jo
dec
inc
hlt
fstp
add
jg
mov
int
dec
and
mov
adc
outs
repz
jmp
out
mov
aaa
repnz
jg
sub
or
mov
imul
leave
shr
mov
sar
jmp
stc
lea
jg
leave
add
or
(bad)
cld
xlat
nop
mov
outs
inc
dec
inc
jge
push
(bad)
jg
std
jg
sbb
or
pop
les
shl
sbb
out
outs
repz
daa
push
push
push
and
push
mov
cmc
scas
(bad)
fld
lods
cmp
mov
imul
scas
addr16
xlat
dec
int
jle
popa
sub
xchg
jg
mov
and
mov
mov
sub
(bad)
movs
iret
lds
hlt
lds
jl
dec
repnz
fsubr
push
mov
std
jmp
add
aam
mov
or
push
dec
mov
ja
retf
mov
adc
in
sbb
cli
cld
sti
scas
mov
neg
sub
inc
(bad)
mov
(bad)
icebp
in
xlat
loopne
jnp
call
push
movs
jg
fisttp
fnstsw
pop
mov
sub
or
hlt
jmp
test
(bad)
out
(bad)
imul
xlat
ror
xchg
call
stc
arpl
pop
inc
xchg
pop
js
out
fcomp
outs
dec
jle
pushf
ffreep
shl
jae
add
cmc
mov
jg
movs
xchg
dec
lahf
cld
push
mov
mov
sbb
aas
push
jmp
add
cli
cwde
mov
adc
ss
in
and
pop
(bad)
pop
mov
mov
xchg
push
movsx
sbb
cli
out
stc
lea
pop
cld
repz
sar
mov
inc
std
inc
push
lock
aaa
clc
sar
fcomip
aaa
clc
jge
xchg
(bad)
neg
or
cli
fwait
(bad)
cmp
add
(bad)
pop
loope
fist
push
jg
(bad)
push
ss
xchg
jg
sub
cld
ss
mov
fidivr
cld
jp
(bad)
cld
fsubr
jnp
(bad)
and
outs
jmp
std
mov
(bad)
pop
mov
repz
xchg
sub
stc
jae
sti
sbb
and
(bad)
lahf
mov
xchg
call
cmp
clc
or
or
sahf
scas
hlt
std
out
(bad)
jae
hlt
mov
dec
xchg
mov
inc
aas
push
(bad)
jg
(bad)
push
jg
(bad)
aas
cmps
call
test
sti
inc
xchg
xchg
add
in
jecxz
or
std
pop
mov
xchg
test
movs
imul
sub
and
neg
mov
or
and
mov
scas
cmc
xor
(bad)
sbb
cli
pop
les
mov
sub
(bad)
fdiv
xlat
out
push
cld
dec
sub
fbld
and
mov
add
cld
inc
hlt
pop
jns
in
ret
cld
not
(bad)
inc
push
xor
jo
jmp
shl
fwait
xchg
and
imul
mov
cmc
push
sbb
fist
sbb
jmp
jg
adc
cmp
add
push
cmp
or
or
cmc
out
inc
test
pop
inc
(bad)
pop
int3
and
call
pop
jecxz
add
mov
cli
pop
shl
imul
data16
cmp
jmp
add
mov
std
cmp
cwde
ss
jmp
clc
clc
xlat
cli
lds
scas
add
(bad)
pop
shr
sub
dec
cmp
xchg
cld
sbb
pop
mov
rcr
mov
lock
call
mov
std
sbb
sar
mov
cmc
jmp
push
inc
js
lahf
(bad)
xlat
pop
imul
jle
pop
cmp
pop
or
dec
jg
dec
pushf
retf
fisubr
and
mov
or
dec
jg
push
sbb
jmp
in
scas
mov
cmp
test
add
inc
stc
push
call
cmp
jle
fild
or
loopne
test
push
popa
(bad)
icebp
cmc
jg
(bad)
cld
(bad)
mov
jg
jo
inc
or
fist
clc
fild
gs
cli
dec
jle
push
jmp
(bad)
jge
out
dec
aas
jg
cli
aas
pushf
dec
in
(bad)
cmp
dec
int3
fdivrp
lahf
inc
inc
out
sbb
fucomi
imul
std
ins
call
dec
sar
ss
inc
fidivr
outs
and
popa
popa
loope
add
adc
xor
adc
sbb
ds
ss
(bad)
out
mov
lods
cmps
lahf
mov
neg
adc
bound
xchg
add
cdq
or
std
mov
(bad)
pop
cld
imul
add
cdq
repnz
mov
jg
mov
adc
ret
in
cmp
pop
lock
scas
mov
out
shl
mov
push
mov
mov
js
adc
add
jge
imul
mov
in
xor
mov
jmp
lock
inc
sbb
xor
std
out
(bad)
scas
cmc
(bad)
push
scas
mov
retf
mov
int3
cld
cli
fwait
inc
fcomip
cmc
sbb
mov
sbb
out
mov
mov
lea
pop
shr
add
mov
pop
cmp
sbb
shr
aas
sub
sbb
mov
add
jg
les
dec
test
(bad)
fistp
les
rcr
(bad)
jmp
jmp
jg
xlat
nop
push
and
out
lahf
hlt
jg
cs
mov
jae
call
(bad)
cld
sti
push
loope
lea
jl
call
aas
add
cmp
imul
xor
adc
stc
scas
jnp
inc
rol
movs
out
jmp
loope
cli
imul
out
outs
and
sbb
pop
(bad)
mov
icebp
or
enter
mov
outs
lods
cdq
ficomp
ret
pop
mov
xchg
imul
mov
movs
mov
std
ffreep
or
dec
les
sar
int
ret
ret
int
sub
(bad)
jg
(bad)
(bad)
sti
push
inc
cld
pop
add
mov
ds
adc
mov
pop
int3
jo
sub
or
sub
(bad)
push
mov
mov
jg
in
jg
mov
repz
aas
test
cmps
movs
mov
jle
jbe
jno
ror
adc
repnz
(bad)
(bad)
cdq
pop
jg
mov
hlt
idiv
mov
jle
dec
cmp
stc
cmc
sbb
call
fstp
ud0
out
fs
xchg
pop
jmp
(bad)
retf
inc
aam
mov
cmps
mov
adc
mov
pop
call
out
or
repz
and
and
mov
xchg
pop
jg
pop
cli
(bad)
and
jnp
pop
mov
jns
fucomip
aaa
push
jle
lods
aas
xchg
fisub
pop
hlt
call
icebp
std
cmc
jg
mov
xlat
mov
cli
xlat
clc
sub
xlat
js
cmps
out
sub
repnz
(bad)
cli
fild
(bad)
fidivr
out
std
mov
or
cli
int3
std
mul
call
(bad)
out
repnz
push
jle
jae
xor
jg
scas
or
sbb
pop
jg
jge
lock
jmp
jo
movd
scas
add
xchg
inc
add
mov
adc
bound
out
xchg
icebp
imul
sti
or
loopne
loope
push
inc
mov
(bad)
fistp
(bad)
dec
dec
fstp
mov
out
dec
sar
xlat
add
sub
mov
lods
rcl
fild
push
int3
shr
int3
adc
jg
int3
adc
je
aas
jecxz
sub
cld
cs
ins
std
pop
lods
dec
pop
es
sub
mov
in
cld
rcl
pop
test
pop
std
mov
or
clc
mov
pop
loope
jle
mov
loop
in
stc
(bad)
mov
(bad)
dec
icebp
idiv
outs
repnz
and
out
jl
ja
sub
cmp
xor
aad
sub
outs
in
(bad)
not
test
iret
lahf
xchg
jle
scas
loop
push
cmp
sar
cli
xlat
std
aad
js
jg
dec
jg
or
pop
dec
es
inc
(bad)
cld
mov
inc
scas
leave
or
adc
std
mov
cld
jge
std
aas
xchg
push
mov
out
dec
(bad)
dec
lock
inc
hlt
(bad)
jg
(bad)
(bad)
mov
out
inc
fistp
dec
cwde
dec
imul
fstp
call
mov
hlt
sti
das
mov
(bad)
mov
cli
jmp
ins
inc
cli
or
lahf
add
into
imul
cmp
int3
call
fist
mov
fbld
mov
hlt
(bad)
aas
xchg
mov
xor
xor
stos
cmp
repz
mov
dec
jmp
jg
fcmovu
movs
(bad)
mov
ds
scas
mov
loop
call
scas
cld
mov
xchg
inc
gs
mul
rol
dec
int
std
cmc
daa
and
pushf
arpl
sub
cmp
jnp
das
dec
repz
jg
mov
cmp
xor
iret
(bad)
pop
out
jle
push
sar
inc
(bad)
ins
icebp
(bad)
pop
dec
jg
sti
inc
mov
imul
std
dec
dec
lahf
int
jmp
stc
mov
push
lea
push
hlt
(bad)
sbb
jmp
out
repnz
nop
cmp
and
pop
ja
out
dec
pop
mov
in
dec
cwde
dec
dec
outs
mov
xchg
std
dec
sub
sti
aaa
movs
cmp
popf
(bad)
jg
(bad)
jmp
dec
cli
call
(bad)
cmp
call
sar
call
call
jb
imul
mov
cli
jnp
push
(bad)
xchg
mov
jae
call
call
sar
xor
xor
ja
leave
mov
test
mov
mov
call
or
cld
mov
pop
sti
inc
mov
adc
or
adc
dec
mov
std
pop
inc
fisttp
repz
mov
cmc
jmp
xor
idiv
data16
sbb
mov
cmc
ja
int
cmp
int
jge
shr
int
mov
out
xchg
leave
outs
sahf
loopne
outs
clc
imul
scas
int
or
retf
sbb
or
shl
scas
movs
(bad)
push
mov
pop
(bad)
sbb
inc
out
add
pop
das
ja
cdq
sbb
cmp
pop
(bad)
fidivr
push
(bad)
(bad)
ins
mov
jmp
neg
dec
mov
repz
fsub
in
jl
xlat
js
lahf
jecxz
mov
(bad)
call
test
addr16
(bad)
cli
mov
jmp
test
pop
mov
sar
in
lahf
in
shr
lock
leave
scas
cmp
not
lea
fwait
inc
pusha
(bad)
xor
add
push
arpl
(bad)
fsubr
addr16
push
into
sar
pushf
ja
push
movntq
out
ficomp
cld
es
stc
js
jge
push
mov
cmc
icebp
cmp
xchg
adc
mov
push
aas
xchg
ds
clc
jl
mov
pop
xor
int
cld
pop
adc
stc
retf
and
idiv
out
mov
jbe
jl
loopne
shl
mov
push
lock
dec
(bad)
int3
push
cmp
push
mov
into
(bad)
jg
in
lahf
pusha
rcr
icebp
fistp
stc
in
jne
mov
jge
mov
cmc
aad
mov
dec
mov
icebp
jno
jbe
js
aaa
into
daa
mov
sub
pop
jg
sub
(bad)
lahf
std
or
std
dec
(bad)
js
jmp
mov
fld
add
adc
imul
push
push
mov
and
out
outs
mov
or
repz
loopne
lahf
sbb
fistp
div
xchg
addr16
repz
sbb
ret
test
repz
pushf
pop
div
out
aas
movs
lahf
inc
and
add
out
ret
mov
jecxz
cmp
stc
in
cmp
ror
jp
iret
pop
call
scas
sbb
ds
xor
or
das
push
(bad)
add
(bad)
jmp
jge
ja
out
lahf
sbb
cld
cmps
pop
lock
lock
loope
inc
in
movs
jl
inc
or
add
pop
cmc
das
inc
lock
aaa
push
jo
aad
lahf
push
jno
mov
add
pop
add
aad
xor
iret
xlat
add
(bad)
pavgb
xor
jmp
inc
jnp
cmp
std
outs
add
pop
inc
mov
mov
je
stc
pop
repz
out
and
mov
lahf
inc
clc
cmps
cli
and
dec
push
cld
sbb
lock
nop
enter
in
aas
sub
fstp
mov
add
fs
aas
mov
or
call
xchg
(bad)
(bad)
cwde
enter
in
aas
repnz
das
lahf
cmp
std
or
inc
pop
mov
dec
jns
lods
mov
imul
out
test
cmp
pop
xchg
adc
sub
pop
jmp
std
xor
cld
xchg
mov
push
fdiv
push
mov
repnz
mov
xchg
add
imul
pop
xchg
pushf
inc
gs
jecxz
add
jnp
hlt
mov
sub
ret
pop
jg
cmp
hlt
(bad)
rcl
jmp
hlt
dec
std
mov
mov
sti
das
movs
call
fbstp
lods
lods
add
sbb
mov
lock
xchg
mov
pusha
jo
lds
xor
jmp
fisttp
test
outs
pushf
ds
jmp
(bad)
jg
xor
mov
cmps
iret
rcr
cmps
mov
sub
adc
inc
cld
(bad)
imul
and
pop
jg
jge
cmc
adc
stos
lock
loop
mov
(bad)
push
pop
add
repz
add
or
and
lds
int
or
pop
xchg
addr16
mov
push
and
test
cmps
jg
mov
push
inc
lds
xchg
mov
add
cmp
rol
scas
repz
sar
aas
lahf
sar
jmp
std
das
cmps
lahf
dec
cli
stc
fld
and
pop
std
or
je
xor
fld
rcl
out
in
cmps
mov
lock
int
rcr
div
cld
push
ds
push
jns
xor
jg
cmc
rcr
(bad)
xlat
shl
mov
scas
xor
stc
mov
xor
lods
pop
out
fstp
xor
push
sbb
clc
or
mov
rcl
sub
call
and
adc
std
scas
xor
cmp
mov
jmp
push
mov
push
pop
inc
hlt
push
xchg
cmp
add
lock
mov
out
mov
std
mov
icebp
mov
jle
inc
pop
inc
std
test
ds
test
xor
cld
cmc
jg
jg
pop
cli
xor
iret
xlat
lock
imul
das
bound
push
push
mov
or
pop
xchg
inc
pop
retf
pop
jnp
ins
cli
pop
clc
mov
add
sbb
mov
cvttps2pi
mov
and
mov
out
mov
lahf
(bad)
sbb
mov
in
test
push
std
jbe
push
jmp
mov
sbb
xchg
div
sbb
out
add
xlat
or
rcr
fldcw
inc
repz
lock
mov
jecxz
out
adc
idiv
xor
hlt
xchg
adc
jg
add
pop
mov
or
cdq
gs
movs
mov
lahf
leave
in
add
inc
xchg
mov
pop
loopne
jge
in
das
cld
push
lock
fistp
loope
cmp
out
imul
(bad)
pop
push
xor
cmp
cmps
shl
popf
pop
cld
mov
cmc
lahf
repz
jae
jecxz
in
repnz
push
stos
pop
outs
imul
jns
imul
mov
push
lea
pop
pop
gs
jg
aaa
fdivr
adc
enter
jecxz
add
(bad)
pop
adc
test
mov
(bad)
das
cld
xchg
jle
xlat
retf
int
(bad)
cmp
xchg
out
fmul
sbb
loope
add
scas
cmc
mov
add
mov
sar
pushf
inc
cld
fisttp
jg
outs
std
movs
mov
mov
popf
jo
fistp
mov
pop
je
das
mov
jmp
sbb
scas
sbb
out
pop
retf
mov
(bad)
aas
mov
cmp
ja
adc
neg
outs
clc
loopne
mov
cld
xor
iret
outs
pushf
cmp
hlt
pop
and
xor
arpl
inc
fist
cld
rol
add
fcomi
mov
sub
pop
add
adc
aaa
xchg
xor
mov
clc
add
push
sbb
jg
or
push
fwait
cld
cmp
fnstsw
or
pop
(bad)
cmp
(bad)
jmp
gs
mov
mov
jnp
daa
push
daa
inc
gs
mov
out
call
(bad)
(bad)
sbb
stc
sbb
(bad)
(bad)
js
dec
(bad)
lahf
hlt
sti
jg
(bad)
(bad)
jnp
sti
ja
idiv
jmp
daa
jmp
aam
sub
dec
std
(bad)
cmp
(bad)
mov
jmp
and
jnp
fwait
call
xchg
stos
js
and
pop
inc
mov
retf
add
inc
inc
cdq
jp
jb
or
outs
lods
xor
cmc
jg
mov
das
dec
rcr
dec
jns
out
jns
aad
pop
push
inc
(bad)
fcos
vpaddw
std
imul
dec
pop
dec
shl
jmp
xchg
sub
sqrtps
popf
test
jg
inc
clc
scas
(bad)
mov
call
aas
cmc
dec
cld
xor
(bad)
scas
sbb
sub
cwde
inc
xor
inc
adc
lds
cmp
inc
test
cwde
jbe
push
add
sbb
hlt
out
and
or
sbb
inc
xchg
jg
jmp
sub
cwde
(bad)
jg
rcl
xchg
repnz
outs
or
jl
(bad)
xchg
call
(bad)
adc
fcomip
rcr
and
stc
out
pop
dec
mov
call
inc
pop
pop
ret
(bad)
jg
mov
mov
cld
cli
jg
jp
sti
scas
adc
(bad)
dec
push
adc
xchg
inc
push
fldcw
jle
pop
add
aas
adc
std
sbb
in
jnp
in
out
sbb
aaa
inc
xchg
pushf
cdq
xchg
int
lea
push
jo
push
lahf
sbb
imul
enter
pop
shr
jmp
mov
dec
les
nop
mov
daa
adc
jg
dec
imul
xchg
repz
jge
fisub
int
repz
xlat
xchg
jbe
push
jmp
std
movs
hlt
fisubr
jg
std
push
jmp
call
(bad)
mov
or
cld
xor
retf
push
mov
mov
(bad)
xchg
jmp
outs
ror
(bad)
xlat
push
or
js
or
cmc
mov
and
(bad)
das
cmps
mov
and
(bad)
das
(bad)
xlat
inc
mov
pop
pop
jg
std
sti
sti
rol
push
adc
std
xor
int3
scas
daa
scas
sbb
clc
imul
arpl
mov
cld
xchg
sub
mov
pusha
push
jle
pop
ret
or
pop
dec
fistp
push
hlt
iret
scas
dec
fdivr
std
pop
pop
jge
lods
das
shr
jecxz
aas
dec
mov
cmc
inc
mov
icebp
fnsave
mov
add
jg
jge
push
clc
lock
cmp
cmp
mov
sbb
out
xchg
mov
pop
cmp
call
sbb
push
clc
lock
xchg
cmp
stc
aaa
ret
ja
jbe
(bad)
das
push
pusha
mov
sub
push
jg
(bad)
(bad)
jl
(bad)
sbb
fdivr
inc
mov
sbb
sub
std
sbb
or
std
aas
sub
xlat
rol
test
dec
pop
out
hlt
mov
arpl
mov
enter
lock
js
or
call
adc
jg
jp
add
jns
cwde
loope
out
scas
xor
lahf
add
pop
sub
adc
push
call
lods
bnd
inc
in
call
xor
scas
call
shl
cmp
out
cld
jecxz
into
jmp
dec
jmp
xor
xor
push
push
dec
(bad)
pop
adc
repz
popf
pop
add
cs
mov
cld
ins
test
mov
dec
ret
cmps
push
jo
cmp
aaa
(bad)
cli
mov
mov
in
xlat
(bad)
dec
xor
jmp
std
push
sti
lahf
push
jle
in
cld
inc
mov
shr
(bad)
icebp
loope
mov
jg
jg
cmp
shl
mov
sar
push
pop
icebp
xchg
les
mov
fwait
inc
cdq
popf
pop
hlt
stos
pop
mov
dec
xchg
dec
mov
stc
push
(bad)
shl
push
jae
pop
pop
pop
(bad)
(bad)
cwde
xchg
fucomip
xlat
xor
pop
and
hlt
out
in
(bad)
mov
dec
push
out
mov
idiv
(bad)
mov
(bad)
jecxz
mov
std
mov
lahf
std
and
mov
xchg
inc
(bad)
gs
mov
std
cdq
repnz
cld
inc
lock
pop
adc
dec
repz
fadd
push
(bad)
cmp
pop
repnz
jb
pop
jg
test
cli
xchg
or
inc
(bad)
xchg
dec
fcmovne
sti
pop
jg
add
jle
fstp
stc
in
scas
xchg
iret
int3
pop
jg
pop
cld
pop
inc
pop
jle
adc
std
xchg
mov
neg
add
std
xchg
cmp
mov
add
or
adc
dec
faddp
jg
and
shr
ret
(bad)
icebp
out
std
sbb
inc
cli
sbb
inc
mov
adc
mov
jg
lods
aas
popf
ds
lea
pop
imul
add
xor
lahf
ret
movs
push
int3
call
aad
dec
(bad)
mov
or
jg
jl
sbb
ins
push
pushf
imul
ins
std
icebp
js
bound
hlt
imul
hlt
fistp
and
sub
in
scas
mov
outs
movs
and
lahf
mov
ret
inc
mov
(bad)
mov
cld
pop
inc
ret
cld
imul
shr
xchg
(bad)
dec
stc
mov
iret
mov
lahf
lock
imul
iret
jmp
cli
or
in
fbld
arpl
and
clc
mov
mov
call
out
dec
(bad)
dec
call
push
mov
(bad)
sahf
mov
sbb
add
xchg
adc
icebp
(bad)
popa
lock
push
mov
mov
std
leave
clc
hlt
aaa
shl
aam
xchg
xor
sub
ins
std
xor
add
aas
ud0
idiv
cmp
cld
ficomp
pop
xchg
pop
mov
cld
sbb
cs
out
lahf
addr16
fnsave
mov
inc
xchg
neg
call
(bad)
fidivr
push
jle
mov
pop
repz
xchg
add
cmc
jmp
mov
bound
shr
bound
sti
mov
pop
cmps
(bad)
mov
(bad)
shl
imul
js
(bad)
jle
hlt
scas
out
cmp
inc
inc
std
push
clc
jmp
fidivr
push
aaa
sbb
cmp
imul
inc
jbe
(bad)
and
mov
retf
jbe
xlat
cld
lahf
ins
and
dec
fist
vxorps
cld
jne
jp
pop
mov
fwait
jg
mov
xor
out
xchg
adc
xchg
lock
shl
je
out
ja
and
dec
(bad)
xchg
pop
jecxz
clc
int
leave
scas
(bad)
adc
xlat
(bad)
repz
(bad)
ds
dec
clc
cmc
mov
jl
in
sti
(bad)
scas
stc
fwait
and
fucomip
ja
xor
out
ror
pop
jmp
sbb
scas
and
mov
jmp
clc
dec
jg
fucomip
ja
cmp
xchg
pop
das
mov
cwde
imul
out
xchg
and
mov
mov
cld
pop
jg
inc
repz
pop
add
retf
pop
call
xor
adc
clc
(bad)
repz
sar
pop
jg
and
adc
fucomip
mov
lods
mov
inc
and
fldenv
mov
cld
jp
dec
inc
mov
std
xchg
xchg
ror
pop
pop
pop
cmp
inc
lock
mov
or
les
arpl
icebp
arpl
mov
out
stc
imul
les
mov
cmp
out
retf
cli
mov
std
sbb
imul
not
cmp
lods
mov
hlt
scas
adc
fisttp
js
outs
mov
mov
dec
js
dec
xchg
add
pop
cmp
xlat
loope
push
jle
(bad)
mov
aas
cmp
push
(bad)
fidiv
lods
popf
cld
sub
sti
imul
pop
mul
adc
jmp
(bad)
push
mov
push
pop
(bad)
out
clc
adc
jle
cmc
jg
pop
out
aaa
fdivr
fucomi
stos
div
hlt
fild
(bad)
fmul
sub
jmp
jmp
std
lods
loopne
cli
repz
sti
mov
daa
loopne
out
je
cmc
xor
mov
not
cmp
(bad)
cmp
push
cli
test
cdq
std
sbb
int3
dec
hlt
aaa
mov
inc
jg
add
(bad)
jno
in
push
fcmovnu
sti
mov
xchg
mov
jae
push
xor
jmp
add
sbb
lods
pop
jmp
fdivrp
pop
jle
adc
rcr
std
mov
mov
jne
pushf
fist
fst
dec
or
mov
repz
icebp
jnp
dec
test
(bad)
fild
fbstp
pop
cld
cmp
(bad)
in
pop
jp
dec
jecxz
movs
fild
ds
in
lar
(bad)
stc
(bad)
cld
cld
dec
push
hlt
out
cs
sti
cld
cld
ja
pop
out
idiv
fisttp
js
inc
lock
inc
sub
xchg
jbe
test
cmc
imul
mov
aas
sahf
repnz
out
hlt
ffreep
lds
jmp
stc
imul
inc
hlt
xchg
(bad)
pop
test
pop
hlt
retf
in
outs
mov
clc
cli
jg
pop
jg
cld
cli
sub
cmps
inc
pop
ds
or
cmp
fisttp
std
aas
jecxz
lahf
inc
mov
(bad)
sbb
not
inc
dec
jg
mov
(bad)
std
push
cld
out
jmp
sti
mov
shr
es
out
scas
sti
imul
xor
repz
loop
cmp
cli
and
(bad)
cld
fsubp
out
hlt
idiv
xor
lods
in
dec
add
sti
arpl
xlat
outs
hlt
sbb
sbb
cli
jge
out
mov
cmp
das
adc
cmps
cmps
clc
pop
mov
movs
scas
inc
mov
xchg
popf
dec
repz
cld
jns
or
scas
shl
outs
mov
pop
std
sbb
in
and
fdivr
and
mul
aas
std
pop
adc
out
add
pop
(bad)
jns
lock
adc
pop
pop
loop
inc
sbb
cmp
hlt
or
ins
dec
pop
lahf
jecxz
aas
push
add
xor
fldcw
adc
dec
add
mov
lea
nop
clc
(bad)
(bad)
cli
dec
jle
pop
and
sub
xor
stos
dec
jmp
jle
mov
jecxz
arpl
call
adc
shl
cld
adc
in
lock
cmps
jg
(bad)
mov
mov
sub
sub
jne
push
push
repnz
xor
dec
shl
xor
sbb
(bad)
aas
aad
icebp
imul
pusha
nop
aas
sar
xor
shl
jmp
fld
aas
pop
pop
mov
or
(bad)
out
loop
fisttp
jle
inc
fsubr
loopne
shl
and
jge
xchg
out
mov
mov
call
cld
ins
push
inc
jmp
cs
std
mov
lahf
daa
test
js
xchg
aas
lock
fild
jg
pop
sar
vcomisd
frstor
adc
jecxz
dec
mov
sub
mov
pop
out
clc
push
(bad)
lods
push
int3
push
cli
jnp
adc
into
and
test
xchg
or
test
call
repz
out
fild
xor
cmps
iret
jg
or
mov
jg
ja
fdivr
in
loopne
mov
dec
(bad)
fidivr
jg
loopne
cmc
mov
icebp
or
out
retf
es
jmp
rol
aas
das
jle
data16
mov
shl
clc
xlat
xor
fwait
mov
mov
mov
mov
mov
std
(bad)
fimul
jle
sar
or
gs
jg
inc
call
lock
sti
test
in
jg
mov
ja
ja
sub
jle
inc
(bad)
(bad)
out
call
dec
cmc
imul
in
sbb
call
mov
sbb
les
pop
jg
add
int
pop
out
or
lahf
xchg
dec
jge
mov
pop
(bad)
jg
retf
ds
dec
xchg
div
cmp
cmc
outs
adc
clc
je
jnp
ins
icebp
lds
xchg
std
loop
push
test
xchg
and
mov
(bad)
mov
cmp
fld
jg
mov
pop
or
hlt
add
mov
fild
aas
add
pusha
outs
inc
fs
std
repnz
hlt
cmps
sbb
mov
inc
pusha
sbb
push
push
inc
gs
inc
sqrtps
mov
xor
setle
cld
scas
push
ret
add
fucomip
mov
sub
inc
xor
and
cmc
sub
dec
loope
les
pop
inc
outs
scas
das
xor
inc
xor
cli
lahf
cld
in
jne
test
js
inc
cld
jmp
retf
lods
dec
call
cld
jae
das
jmp
retf
mov
pushf
sbb
sbb
dec
mov
add
js
lods
ins
ss
sti
fbstp
loopne
xor
cwde
jg
or
(bad)
mov
jmp
icebp
jle
movs
push
cmc
lock
jmp
sti
cmps
icebp
scas
iret
and
call
aad
cwde
push
stos
push
mov
and
jbe
cmp
mov
mov
fcmovbe
iret
int3
jmp
faddp
call
js
mov
sub
mov
mov
add
add
push
mov
movsx
arpl
cli
ins
lock
idiv
repz
sahf
and
ret
and
dec
mov
mov
add
outs
or
ins
pop
jg
mov
out
mov
jle
push
inc
cmp
dec
or
aas
test
call
into
data16
scas
jle
fstp
cli
sti
int
mov
add
mov
fcmovne
pop
cmp
je
jg
stos
aaa
add
in
xchg
(bad)
(bad)
fstp
call
cmp
sbb
fdiv
dec
call
mov
pushf
ds
adc
call
out
pop
push
mov
xchg
jg
aas
mov
xor
xor
inc
xchg
fild
outs
adc
inc
test
xor
push
jl
add
sbb
add
cmp
xor
sar
xchg
xor
cmp
sub
push
repz
dec
xor
adc
(bad)
in
lock
sti
ins
js
(bad)
out
out
dec
lahf
push
test
mov
repz
aas
lahf
or
(bad)
int
test
xlat
jmp
repz
mov
sar
in
in
into
push
adc
pop
mov
xor
mov
retf
mov
scas
jg
cmp
out
sar
imul
sub
jg
call
dec
xor
imul
pop
sar
fiadd
std
mov
and
daa
clc
jp
test
call
jp
outs
jmp
arpl
jg
out
push
xchg
(bad)
cli
pop
scas
mov
movs
ds
cmps
jno
dec
sub
retf
fbld
pop
fs
inc
cmps
hlt
add
bound
aaa
dec
jg
fisttp
(bad)
mov
or
call
add
aas
(bad)
jle
jl
dec
adc
stc
xchg
cmc
fild
(bad)
adc
and
mov
xor
mov
iret
lahf
fwait
xlat
inc
rol
mov
cmovbe
sar
mov
mov
jg
or
xchg
loope
push
mov
jo
jecxz
inc
pusha
sti
or
pop
hlt
jne
retf
icebp
jmp
ds
(bad)
clc
outs
test
out
(bad)
cld
scas
aaa
lahf
cmp
outs
imul
mov
xchg
loopne
push
fild
aad
mov
xor
sub
jl
mov
aas
cmp
sbb
out
enter
jg
jl
js
iret
dec
dec
std
jg
dec
dec
inc
hlt
les
jg
pop
clc
lods
hlt
inc
jecxz
iret
in
shl
loopne
(bad)
retf
push
push
fild
mov
pushf
ret
push
(bad)
lahf
add
and
cmp
int3
out
scas
std
sbb
je
sbb
add
cmp
push
clc
cld
aam
pushf
cmp
xor
shr
loopne
jae
pop
(bad)
in
test
mov
repz
stc
jg
mov
(bad)
sub
mov
retf
mov
sub
jg
das
cld
adc
sbb
push
jo
in
mov
icebp
ins
imul
jle
inc
loop
mov
cld
jmp
(bad)
mov
lahf
mov
add
mov
xchg
pop
pop
out
fsubr
sahf
cs
loopne
arpl
and
cmc
sub
cld
xor
cli
push
shr
iret
(bad)
aas
sti
repnz
scas
call
xor
aaa
jmp
repz
mov
mov
jmp
adc
in
xlat
cmp
int
out
fcomip
aaa
dec
or
aas
cld
add
fwait
call
mov
jg
mov
enter
int3
icebp
iret
cmp
in
scas
add
pop
rcl
loop
push
xor
sub
jl
pop
mov
repnz
push
in
ds
xchg
push
aaa
ss
lahf
ret
scas
test
dec
jnp
xor
jle
fsubr
scas
mov
pop
jecxz
or
cli
stc
dec
add
push
movs
xor
pop
addr16
(bad)
jbe
out
test
stc
pop
fist
(bad)
cmps
mov
xchg
pop
add
std
into
clc
cld
div
sbb
lahf
dec
nop
clc
xchg
jmp
pop
out
xchg
xchg
cmp
ins
add
and
popf
dec
test
fistp
mov
cld
pop
pop
jg
xor
lahf
cli
jnp
(bad)
scas
mov
fisttp
(bad)
data16
out
and
sbb
loop
jl
pop
jle
repz
rol
and
push
ins
jle
xchg
jge
xchg
retf
xor
push
and
jle
push
in
pop
pop
es
addr16
push
push
repnz
js
div
ret
push
movs
call
(bad)
popa
in
cli
out
or
out
outs
addr16
mov
push
cmc
outs
in
lea
xchg
arpl
jl
or
(bad)
(bad)
cmc
jge
mov
in
xor
call
dec
lea
cmc
imul
or
in
xchg
push
mov
call
xor
rcr
int
scas
jmp
dec
xor
cmp
jmp
repz
push
mov
dec
xor
push
jmp
mov
cli
push
scas
(bad)
(bad)
out
fistp
shr
mov
fiadd
pop
jmp
jbe
jnp
int
(bad)
imul
inc
mov
repz
add
xor
adc
(bad)
nop
out
scas
(bad)
sti
mov
adc
mov
mov
iret
mov
or
mov
jmp
imul
imul
aas
cld
sti
jg
add
xor
fist
dec
push
ins
cld
fstp
cli
dec
dec
ffreep
inc
cmp
dec
dec
push
es
or
sbb
mov
cmp
movsx
pushf
(bad)
sub
mov
(bad)
mov
hlt
push
cld
xchg
sub
fsubr
sbb
push
in
ins
jecxz
aas
icebp
aaa
hlt
(bad)
into
sub
ja
mov
jne
loopne
loopne
mov
std
daa
int
xchg
and
xchg
sar
dec
and
stc
dec
ror
push
jg
cwde
test
or
stos
pop
mov
add
mov
and
jg
cli
cli
pop
shr
jge
pop
push
pop
pushf
pop
jecxz
and
or
inc
add
mov
pop
adc
xchg
cdq
js
out
xlat
xor
icebp
sbb
aas
rcl
and
push
popa
and
add
mov
mov
cmp
inc
ds
je
dec
mov
clc
out
scas
rcl
test
add
jle
mov
add
pop
cmp
std
add
jmp
aad
jl
scas
call
xchg
xlat
mov
sti
xor
xlat
shl
and
push
adc
mov
int
mov
inc
cmc
xor
js
(bad)
adc
pop
mov
loopne
aas
add
xor
xor
cwde
jo
jmp
mov
sbb
sti
or
jge
xlat
les
(bad)
pop
sti
fwait
(bad)
out
shr
dec
pop
sti
ja
mov
pushf
xor
sar
jmp
call
or
scas
stc
or
call
cmp
mov
adc
sbb
pop
inc
out
into
jmp
mov
scas
(bad)
dec
loop
jle
imul
std
(bad)
(bad)
outs
sti
call
mov
lods
pop
mov
aas
addr16
(bad)
xor
add
mov
std
pop
call
mov
jg
xlat
call
scas
scas
test
bound
repz
scas
lea
rcl
add
or
imul
outs
fld
fist
ret
cs
xlat
(bad)
int
(bad)
bound
(bad)
mov
inc
mov
add
pusha
dec
sub
inc
sub
aaa
inc
mov
adc
repnz
ret
jo
jg
push
(bad)
xchg
pop
dec
out
aaa
lds
stc
xor
add
arpl
pop
test
daa
jns
(bad)
mov
fist
pop
pop
mov
jg
hlt
and
mov
clc
pop
xor
jns
xor
jae
pusha
jg
mov
or
pop
pusha
xchg
hlt
aas
les
fist
jnp
cmc
outs
pusha
pop
std
mov
(bad)
arpl
repz
lahf
jmp
inc
pushf
push
fiadd
xchg
pop
push
pop
(bad)
jle
scas
stos
outs
mov
stc
shl
iret
scas
je
inc
jno
ins
pop
std
mov
inc
or
movs
inc
stc
or
sub
sbb
cld
scas
add
std
fcomip
rcr
rol
out
imul
xor
inc
mov
jle
mov
aaa
add
or
and
int
inc
loopne
(bad)
in
jg
fucomip
mov
leave
std
or
shl
inc
aas
xor
push
push
mov
jp
std
scas
add
outs
test
(bad)
(bad)
cdq
das
pop
inc
xor
xchg
idiv
push
cmp
jmp
sbb
(bad)
cmp
xchg
sbb
xchg
mov
fldenv
in
cdq
add
ins
es
mov
cli
ss
adc
out
cmp
lahf
jecxz
ins
repz
scas
xchg
cmp
cli
enter
xor
sbb
(bad)
ja
fild
(bad)
cld
xlat
(bad)
cs
mov
add
icebp
(bad)
cld
fimul
jecxz
ret
mov
(bad)
aas
or
daa
call
mov
in
aas
aam
jmp
jmp
xlat
enter
jl
push
clc
loop
(bad)
pop
aas
gs
lahf
es
jp
(bad)
push
jg
sbb
loop
lds
jg
push
xchg
pop
mov
das
or
xor
shl
mov
or
ins
mov
(bad)
mov
retf
sbb
sti
shl
cmp
add
xchg
jmp
sbb
add
sub
jb
pop
adc
mov
lock
or
add
stc
cmp
clc
repnz
push
xchg
jg
jl
aaa
loopne
inc
repnz
scas
add
add
outs
xchg
sub
cmps
push
sub
lds
cmps
jmp
std
xor
scas
test
pop
cmp
ja
out
mov
loopne
jmp
xor
xchg
imul
aas
sbb
and
pop
je
inc
jl
pop
sbb
sbb
jg
push
or
xor
jg
dec
stc
cli
das
rcl
shl
and
mov
mov
(bad)
lahf
dec
mov
and
sti
test
je
cmp
inc
add
sar
js
jae
push
rol
inc
add
jmp
inc
cmp
pop
call
cmp
stos
aas
ret
mov
std
out
pop
xor
sub
add
out
add
das
jbe
pop
std
sbb
or
xor
xor
mov
or
call
jg
dec
jl
je
mov
xlat
cmp
imul
clc
aaa
std
jnp
idiv
pop
adc
(bad)
std
stos
(bad)
xlat
(bad)
sti
(bad)
(bad)
pop
(bad)
jmp
sti
(bad)
(bad)
aas
(bad)
popf
(bad)
sti
(bad)
dec
jge
mov
(bad)
std
dec
shl
xlat
scas
clc
mov
mov
pop
dec
mov
std
jg
sub
sar
jg
xor
mov
sti
(bad)
(bad)
popf
jmp
(bad)
sti
(bad)
(bad)
pop
(bad)
mov
sti
call
daa
push
(bad)
std
xor
stc
(bad)
std
jg
gs
(bad)
std
jg
les
or
(bad)
push
(bad)
std
mov
(bad)
idiv
std
sub
stos
(bad)
call
mov
(bad)
(bad)
mov
jg
iret
dec
test
dec
sar
dec
(bad)
sti
(bad)
dec
jmp
cld
(bad)
mov
lock
cmc
test
push
or
push
call
xchg
into
sbb
mov
clc
mov
out
pop
dec
out
(bad)
outs
xor
mov
das
(bad)
mov
loopne
test
loope
std
jg
aam
out
and
sub
stc
ja
iret
adc
addr16
out
std
(bad)
aam
aas
inc
aas
call
(bad)
mov
cli
(bad)
aas
and
jg
jg
jg
fistp
loope
out
cmp
loope
out
adc
outs
sbb
fisttp
inc
std
out
shl
push
mov
das
push
cmp
cmc
out
sar
cpuid
(bad)
push
std
lahf
movs
icebp
std
lods
inc
(bad)
call
(bad)
imul
fist
mov
cli
sti
in
outs
inc
mov
push
stos
push
(bad)
(bad)
mov
outs
test
push
sar
call
test
cmps
ja
pushf
lock
imul
int
inc
ins
dec
and
adc
cmc
jae
jmp
and
rcl
fistp
neg
inc
xor
popf
mov
inc
rcr
sahf
fdivrp
cmp
push
in
lahf
movs
ja
and
out
and
cmp
adc
and
loope
pusha
(bad)
jecxz
stc
mov
fistp
lea
xabort
lock
ret
or
int
(bad)
out
inc
cmp
pop
push
pop
pop
rcr
aas
movs
mov
mov
idiv
mov
inc
clc
cld
add
sbb
mov
out
dec
std
cld
retf
hlt
std
dec
std
or
jmp
push
call
lock
and
jae
pusha
inc
into
dec
fist
mov
inc
cmp
adc
test
jg
mov
pop
jmp
add
ret
out
lahf
movs
mov
aas
xchg
std
(bad)
inc
std
adc
jg
push
push
loope
adc
std
add
sti
mov
jmp
inc
jecxz
stos
imul
outs
hlt
ficomp
xor
push
pop
fbld
(bad)
xchg
aam
mov
jecxz
dec
mov
xchg
jo
ret
test
push
add
pop
and
or
adc
aas
xchg
push
test
outs
cmc
jmp
(bad)
cld
inc
inc
(bad)
fistp
scas
call
jp
cmps
cmp
dec
jmp
cmp
(bad)
mov
or
jg
cli
jns
jge
lahf
fidivr
pop
test
jg
lock
or
out
xchg
adc
icebp
inc
sbb
shl
mov
jecxz
out
pop
xchg
pusha
inc
idiv
in
ja
(bad)
inc
iret
fild
pop
loop
pop
mov
ficomp
and
lahf
sar
inc
repz
add
pop
shl
jg
loope
adc
not
mov
test
pop
inc
js
adc
lock
fistp
cwde
push
jle
ret
jmp
frstor
fdivr
jmp
mov
push
lahf
mov
sahf
adc
inc
push
jg
(bad)
repz
jle
mov
into
scas
dec
out
call
hlt
into
adc
cld
imul
mov
into
fild
fbld
test
pop
inc
cmp
sbb
sbb
(bad)
(bad)
aaa
adc
mov
cld
(bad)
jo
imul
daa
sbb
xor
jg
loopne
pop
hlt
sti
pop
inc
arpl
(bad)
push
mov
and
sbb
neg
cli
call
jmp
pop
dec
arpl
jge
aas
addr16
out
shl
call
int
fild
(bad)
jmp
sti
aas
mov
push
ficomp
dec
hlt
cli
push
lea
(bad)
dec
xchg
(bad)
xchg
ficomp
fdivr
mov
das
imul
out
jp
(bad)
sbb
cdq
jo
push
jge
das
add
cmc
idiv
shl
ss
push
push
mov
daa
sar
inc
test
pop
inc
jl
jle
call
call
punpckhbw
shl
mov
xlat
pusha
fstp
imul
jmp
mov
or
cli
lahf
jecxz
out
or
or
inc
scas
push
mov
dec
stc
mov
repz
out
mov
(bad)
xor
cmps
mov
adc
sbb
cld
dec
push
in
aas
push
pop
(bad)
cmp
fist
rcl
push
or
pushf
pop
cmp
mov
ffreep
out
out
pop
sar
retf
or
xchg
out
inc
mov
(bad)
jg
add
fisubr
je
sar
(bad)
sbb
xor
mov
aaa
jge
jns
mov
out
clc
lea
or
lea
mov
mov
and
sti
in
cmovl
data16
rcr
std
imul
or
jg
xor
sbb
jp
scas
and
add
push
cld
test
mov
icebp
stc
scas
imul
or
(bad)
jmp
test
jg
int
ret
pop
loopne
jg
jl
mov
(bad)
test
jg
jge
fwait
(bad)
cli
mov
std
not
aas
fwait
ds
call
mulps
in
aaa
rcl
dec
sar
aaa
jl
jge
xchg
mov
ret
jg
and
addr16
repnz
cmps
iret
fistp
push
outs
mov
mov
push
jle
shl
outs
cld
imul
(bad)
fdivrp
adc
mov
fld
jg
gs
out
mov
mov
enter
xchg
(bad)
adc
hlt
aaa
push
(bad)
aaa
sti
int
lods
fcomip
loopne
and
and
xchg
sbb
or
out
sbb
xor
clc
dec
fs
add
mov
lahf
ds
aas
sar
push
lahf
aas
xor
cwde
and
push
cmp
int3
or
cs
cmp
xchg
fwait
dec
adc
sbb
pusha
xor
(bad)
cmp
cld
pavgb
and
(bad)
adc
aas
push
sub
clc
int
mov
cld
xlat
cld
int
std
cmp
(bad)
sub
add
(bad)
fiadd
repnz
xor
popa
sti
sub
(bad)
cmp
inc
test
out
inc
repz
jecxz
xchg
arpl
sbb
out
into
outs
repz
(bad)
cmp
jno
dec
jge
push
mov
(bad)
jmp
idiv
jbe
jo
cwde
cld
xchg
fs
(bad)
jae
stos
mov
(bad)
jle
shl
jmp
mov
test
popa
cld
and
retf
mov
add
mov
xlat
sbb
push
adc
loope
dec
push
loopne
xor
or
cld
loopne
mov
cmp
xchg
or
push
out
pop
sbb
add
push
add
mov
cld
mov
popf
int
cwde
popa
into
xlat
dec
xor
out
jg
jns
jg
mov
pop
(bad)
mov
(bad)
add
adc
loop
fisub
psrad
imul
in
pop
aaa
xor
daa
xchg
into
inc
jg
pop
cld
stc
loope
inc
(bad)
pop
clc
retf
adc
push
sahf
jg
inc
jae
in
add
pop
add
stc
repnz
cld
jne
cmp
adc
aaa
nop
test
inc
push
lock
cli
retf
pop
mov
push
ret
hlt
arpl
cdq
xchg
std
add
inc
std
iret
(bad)
pop
dec
scas
or
jg
jg
idiv
fcmovnbe
lahf
or
mov
enter
in
xchg
rol
std
xchg
dec
adc
psrlq
fst
movs
stc
sbb
shl
mov
cmc
das
adc
dec
(bad)
jle
jb
pop
jno
not
outs
mov
dec
pop
(bad)
adc
cld
repz
aas
lahf
(bad)
stc
sub
sbb
inc
cli
pop
mov
xchg
imul
je
imul
repz
dec
jg
add
int
repnz
cmp
(bad)
fwait
xor
cs
in
std
imul
pop
(bad)
cmp
pop
icebp
sbb
push
mov
pop
(bad)
pop
mov
cmc
pop
mov
lods
pop
test
mov
(bad)
outs
clc
in
jg
outs
cld
(bad)
imul
jg
jl
dec
call
in
mov
jle
outs
lock
shr
jle
(bad)
push
dec
mov
out
out
cld
imul
pop
repnz
cdq
outs
jg
jg
jle
scas
icebp
pop
repnz
fwait
iret
idiv
jne
out
pop
std
fwait
out
jg
(bad)
neg
(bad)
fbstp
mov
jg
outs
(bad)
mov
addr16
sbb
sbb
idiv
pop
add
stos
call
cld
neg
loop
pop
rcl
lds
add
shl
and
mov
jae
mul
imul
leave
add
iret
lods
inc
lahf
loope
out
std
xor
fadd
mov
(bad)
dec
int3
addr16
call
mov
(bad)
idiv
test
aam
not
jg
jle
mov
std
in
pop
call
mov
cmc
mov
cli
lods
fld
test
pop
ja
jg
ja
imul
push
fistp
(bad)
cld
mov
fistp
div
mov
stc
in
dec
les
fld
sti
in
mov
lahf
adc
sar
pop
cld
adc
out
stc
or
popf
xchg
jecxz
pushf
repz
loop
dec
mov
imul
retf
mov
and
clc
push
out
out
loop
dec
mov
mov
jle
(bad)
(bad)
imul
std
push
fucomi
(bad)
fistp
jle
movs
mov
icebp
sbb
loopne
push
xor
movs
fbstp
sti
loope
call
mov
mov
int
or
repnz
lea
(bad)
jl
pop
repz
stc
jne
lea
hlt
leave
out
dec
jmp
das
cld
ins
push
stc
push
cmc
jnp
loopne
loope
mov
not
(bad)
fs
cmps
jg
mov
adc
and
jg
ss
pop
jmp
test
mov
in
lods
jg
cli
fsqrt
xchg
test
clc
addr16
aas
lods
in
jg
popf
pop
out
clc
jge
out
loop
stc
dec
jg
lods
jg
mov
fucomip
aaa
sub
(bad)
adc
in
repz
inc
push
std
push
mov
(bad)
fsubr
stc
stos
pop
sti
ins
call
(bad)
aaa
mov
sbb
outs
mov
jecxz
pop
aas
inc
sar
cld
ret
and
mov
cmp
jnp
imul
push
hlt
leave
pop
sbb
div
jle
push
mov
test
ja
fistp
cli
in
ja
fistp
cli
in
ja
fistp
cli
in
ja
add
sti
jnp
cmp
jnp
mov
in
pop
addr16
mov
and
mov
xlat
aas
mov
je
sbb
xchg
cld
jp
jecxz
inc
pop
(bad)
jp
into
fwait
sbb
jg
pop
jmp
cli
or
repz
mov
out
cld
jp
xchg
pop
lahf
xchg
jmp
push
jle
push
mov
clc
in
or
pop
xor
out
ins
cli
cld
jmp
mov
xchg
lock
and
std
cli
dec
ret
enter
or
and
scas
(bad)
cmp
ins
mov
test
(bad)
repz
mov
js
jecxz
jbe
lahf
mov
xor
lock
xor
pop
or
mov
hlt
push
cmc
dec
xor
lahf
xchg
xchg
mov
push
pop
std
out
mov
stos
(bad)
sub
adc
dec
dec
(bad)
mov
sbb
shl
not
mov
out
rol
cmc
(bad)
icebp
sar
push
ins
call
pop
mov
xlat
fcom
fidivr
mov
dec
(bad)
sbb
call
int
jg
scas
icebp
(bad)
(bad)
xlat
std
xor
push
int
sti
fcomip
mov
(bad)
sbb
loope
cld
ins
jle
pop
mov
(bad)
(bad)
mov
repnz
stc
int
popf
aas
sahf
cmp
pop
xor
clc
in
add
xlat
sti
or
cli
pop
or
or
idiv
lea
pop
out
push
pop
xor
ins
xor
mov
shr
scas
dec
and
xlat
cld
int
inc
mov
cld
push
das
jg
jl
imul
movs
lahf
jg
jmp
in
add
jp
cmc
jg
xchg
jnp
(bad)
and
mov
adc
stc
lahf
cmps
das
jle
(bad)
aaa
ror
jg
sti
stc
mov
push
jmp
std
clc
ins
pop
lahf
inc
shr
out
pop
cli
div
test
jecxz
mov
sbb
mov
fistp
xlat
xor
aad
sbb
into
sub
rcr
int3
add
sbb
xor
mov
(bad)
cli
mov
std
cli
mov
std
cli
fist
cmp
or
pop
push
cmp
jl
jo
mov
aaa
add
pop
cld
xchg
cld
fidivr
jle
sti
enter
into
scas
add
neg
mov
rcr
(bad)
das
pop
mov
jle
xor
jg
ds
std
mov
std
daa
clc
ret
loopne
jg
loopne
jg
rcl
pop
cld
imul
sti
push
push
fdivrp
push
in
repz
out
xlat
(bad)
std
pop
mov
ja
stc
out
(bad)
cli
mov
sti
xlat
pusha
add
div
mov
inc
(bad)
imul
dec
stc
mov
xchg
cmp
out
xlat
pusha
pop
in
ret
js
add
or
sti
(bad)
sti
sbb
mov
(bad)
pop
pop
inc
mov
cmp
jg
shl
push
pop
mov
imul
add
xlat
cmps
ja
jg
cli
jne
mov
pop
pop
call
retf
xchg
fisub
push
mov
(bad)
cld
or
jg
lods
pop
mov
std
mov
scas
icebp
daa
shl
mov
xlat
lods
test
cli
or
sti
or
mov
lock
push
or
xlat
out
pop
mov
(bad)
cmp
jmp
rcr
outs
(bad)
jmp
push
pop
mov
(bad)
jp
stc
scas
mov
fwait
loope
pop
div
push
mov
jae
inc
aam
outs
stc
jmp
out
(bad)
scas
(bad)
(bad)
cli
jg
mov
pop
loopne
pop
jg
mov
ss
mov
(bad)
jmp
sbb
popf
fcomi
ins
clc
out
mov
in
in
sti
lahf
jmp
scas
shr
cld
aam
(bad)
fist
jmp
mov
jg
jo
jo
mov
(bad)
notrack
in
pusha
cld
jg
xlat
nop
rcr
repz
dec
(bad)
std
scas
sub
mov
out
ror
jecxz
je
imul
out
dec
enter
es
pop
push
stos
loope
scas
test
mov
sub
mov
cmp
push
push
mov
cmp
cli
jnp
mov
inc
rol
icebp
fwait
jmp
mov
xchg
push
fild
push
inc
(bad)
xor
jg
cli
addr16
rcr
sub
pushf
inc
inc
jbe
xlat
pop
sub
mov
(bad)
jg
cli
cld
lds
inc
fwait
mov
aam
pop
xor
cs
dec
mov
(bad)
mov
fst
jmp
shl
add
aaa
mov
call
fstp
sub
scas
cmp
xor
enter
(bad)
stc
fcomi
fdivrp
addr16
xlat
(bad)
(bad)
outs
cmps
sbb
or
push
cli
call
jg
mov
mov
in
pop
xchg
sub
adc
hlt
mov
scas
xor
pop
ret
aas
mov
push
adc
repz
loope
(bad)
add
mov
hlt
loopne
mov
sti
imul
outs
test
pusha
rcl
pop
pusha
mov
dec
outs
stos
popf
call
pop
cld
cdq
clc
addr16
cmp
cmc
lock
or
dec
cmp
in
icebp
cmc
fbld
dec
gs
jg
sar
xor
std
idiv
cmps
xchg
sar
in
std
jg
adc
jns
sub
pop
mov
mov
adc
out
loopne
lock
clc
imul
dec
dec
das
mov
jge
xchg
outs
xchg
sbb
xor
cmp
mov
ss
icebp
iret
arpl
push
ror
push
add
or
sbb
call
(bad)
aas
cmp
push
dec
and
jle
es
outs
and
fsub
pop
clc
adc
mov
hlt
pop
mov
inc
scas
aas
cli
mov
ret
or
test
fisttp
cld
xchg
std
sbb
fld
clc
dec
shl
add
movq
sbb
xchg
aas
fnsave
sar
jg
jecxz
(bad)
sbb
or
rcl
xor
les
adc
jmp
dec
push
and
jg
outs
lods
cwde
inc
push
sbb
mov
cld
movmskps
inc
mul
in
imul
test
not
pop
xchg
daa
clc
out
add
cmp
add
sbb
loopne
sbb
xchg
movs
fcom
push
push
in
dec
(bad)
fwait
push
pop
pusha
stc
inc
add
lock
cwde
scas
jns
mov
in
mov
mov
data16
dec
(bad)
mov
xor
jle
ja
faddp
pop
addr16
jecxz
icebp
dec
sub
call
in
xchg
jecxz
das
call
imul
mov
das
and
int3
inc
repnz
adc
(bad)
rol
sbb
pop
cmp
int
push
fcmovb
push
pop
push
sub
dec
mov
pop
mov
and
cmc
mov
mov
jg
je
setp
sbb
sti
mov
hlt
pop
rcl
ja
pop
mov
(bad)
fidivr
(bad)
rol
je
call
fsubp
mov
add
xchg
cwde
or
nop
push
cmps
and
out
push
ds
in
in
out
add
ss
pop
pop
xchg
in
pop
sar
test
cli
fisttp
cwde
dec
and
pop
push
xchg
inc
test
das
std
ss
stc
cmp
shr
or
lock
jg
ret
push
push
cld
fstp
cli
repz
xor
mov
clc
aaa
xchg
outs
jns
mov
cld
add
call
arpl
leave
xlat
jg
mov
push
sbb
mov
(bad)
pop
inc
jge
cli
sbb
push
jle
ror
int
pop
xchg
sbb
cmovae
(bad)
cmp
and
lds
pop
add
popa
mov
xlat
je
jnp
sbb
cld
out
add
lock
imul
and
pop
and
(bad)
sti
pop
cld
xor
push
mov
lods
mov
mov
inc
or
imul
add
sub
div
lods
fbstp
pop
cmp
jg
mov
cld
sub
and
iret
xor
outs
jg
add
out
test
inc
jp
xchg
dec
xchg
sub
inc
test
imul
(bad)
jecxz
loop
adc
add
pop
add
xor
call
jmp
hlt
cmc
out
arpl
iret
dec
xchg
fist
(bad)
xor
stc
xor
call
cs
repz
jmp
xchg
and
jns
mov
add
adc
into
mov
fist
xchg
mov
inc
xor
into
shl
lahf
or
dec
sar
jle
lds
aas
fild
out
aaa
aad
jmp
xchg
pop
(bad)
(bad)
ins
pop
sbb
mov
int3
cmps
pop
retf
adc
jmp
shl
je
mov
mov
(bad)
adc
add
out
(bad)
cli
dec
call
loopne
dec
sbb
mov
push
inc
push
push
xchg
dec
sbb
mov
sub
xlat
jg
stc
repnz
mov
sahf
fwait
sbb
std
fisttp
xlat
mov
jle
or
mov
xchg
adc
mov
test
pop
(bad)
sbb
fild
adc
cwde
jns
mov
mov
sbb
in
jg
(bad)
cmc
repz
jle
rcr
pop
out
fild
nop
js
rcr
je
mov
xchg
jecxz
clc
fwait
call
outs
stc
arpl
jns
push
(bad)
(bad)
pop
imul
loopne
dec
sbb
jg
std
popf
add
outs
je
add
outs
cmp
out
sbb
div
(bad)
jns
sub
add
aas
mov
jmp
pop
cli
cli
sub
add
mov
stos
dec
(bad)
shr
(bad)
mov
and
loope
pop
cli
das
cwde
(bad)
call
mov
cli
mov
cli
shr
lock
loopne
jle
xor
shl
add
icebp
jb
xchg
jmp
cli
cdq
jge
aas
ss
fcomi
and
lock
test
dec
clc
out
pusha
sti
pop
(bad)
aaa
jecxz
or
and
movs
cmp
test
pop
or
jge
aas
std
mov
(bad)
mov
cli
cs
mov
or
cmp
into
push
cli
jno
pop
fwait
scas
pop
mov
sbb
(bad)
xor
cwde
scas
popf
sahf
(bad)
fild
mov
cld
aaa
rcr
add
out
outs
cmp
mov
jg
(bad)
sbb
and
ror
inc
jmp
inc
(bad)
ins
pop
std
es
(bad)
outs
data16
std
pop
xor
(bad)
cmp
sar
sbb
or
scas
cwde
jbe
jb
or
int3
add
cld
addr16
scas
les
sbb
les
add
rdpmc
push
js
div
dec
es
dec
call
lahf
inc
mov
push
ror
out
idiv
daa
(bad)
or
dec
mov
cld
pop
sti
loopne
cmps
mov
in
into
xchg
cmp
sub
mov
iret
dec
jmp
popf
adc
(bad)
inc
mov
pop
xchg
sbb
call
clc
das
call
jge
mov
cmp
add
std
addr16
or
push
stc
stos
or
ret
aas
stc
mov
dec
jg
mov
jmp
shr
sub
enter
(bad)
scas
jmp
jg
mov
push
add
add
dec
fs
push
out
fistp
pop
(bad)
imul
fucomi
xchg
mov
aaa
push
mov
add
pop
mov
mov
call
jge
push
adc
mov
std
add
clc
addr16
shr
into
pop
bound
cmps
enter
sub
fnstenv
add
pop
jg
jg
ror
imul
sub
mov
clc
push
rol
sahf
sbb
int
mov
add
mov
call
or
popa
jb
xchg
cwde
push
jg
repz
lahf
(bad)
jg
movs
or
cmp
movq
lock
fdivr
inc
pop
add
sar
jmp
(bad)
cmp
cld
adc
dec
inc
add
add
mov
(bad)
adc
inc
cli
lahf
loop
adc
out
xor
loope
mov
push
jmp
mov
outs
clc
cli
pop
cmp
aad
imul
sbb
daa
mov
aaa
cmps
add
out
shr
jg
fdivr
ret
add
ja
fild
sbb
std
mov
hlt
push
cld
ret
mov
add
push
mov
add
lahf
(bad)
xlat
out
pop
xchg
jle
push
call
cs
adc
cmp
clc
out
(bad)
aas
xchg
inc
mov
clc
cli
pop
add
sbb
xor
out
pop
outs
inc
cli
jmp
rcl
adc
xor
pop
(bad)
jle
outs
or
clc
jne
xchg
hlt
sub
cmp
test
cli
(bad)
loop
arpl
std
addr16
pop
push
pop
jg
call
lock
cmp
loopne
xor
mov
pop
cwde
mov
cmps
mov
fdivrp
fidivr
(bad)
cmps
mov
les
clc
int
in
add
in
jge
pop
mov
mov
sbb
dec
add
pop
imul
push
xchg
ins
cli
out
push
sti
addr16
jb
hlt
sti
aaa
shl
pushf
inc
dec
jg
cmp
jg
mov
ud0
addr16
icebp
(bad)
mov
ret
xlat
test
push
ret
dec
push
cmp
mov
jns
cli
hlt
xlat
xor
fwait
ja
xor
mov
pop
cmps
sub
lea
adc
cmc
jmp
(bad)
cmp
mov
pop
jns
adc
fdivr
in
pop
xor
call
add
cmp
sbb
push
mov
jnp
stc
iret
dec
inc
cwde
stc
fdivr
push
or
pop
std
ins
pop
cmp
(bad)
adc
jg
das
sbb
hlt
pop
jecxz
xchg
sar
lock
outs
outs
mov
mov
and
mov
xor
jmp
xchg
mov
pop
call
shl
cli
sub
dec
cld
and
xor
cwde
jg
stc
cli
mov
xor
popa
sub
sbb
jg
enter
fsub
cmp
xor
out
iret
jecxz
enter
sbb
inc
jge
je
pop
add
jg
scas
mov
pusha
xchg
call
push
imul
int3
jbe
xor
std
cmp
push
and
or
pop
(bad)
pop
adc
adc
in
and
lock
das
xor
(bad)
push
jge
lock
cld
gs
mov
lea
jl
pop
std
jmp
add
pop
movs
fistp
sbb
jg
jg
inc
ds
mov
ret
jecxz
mov
mov
shl
aas
xor
jg
scas
xor
ins
jle
pusha
push
inc
jle
outs
mov
mov
xchg
pop
adc
icebp
sti
sar
adc
mov
cmps
ja
les
shl
mov
jo
mov
cwde
loope
pop
mov
inc
stc
das
jl
mov
add
clc
and
outs
in
and
mov
xlat
cmp
pop
jg
imul
(bad)
(bad)
les
imul
dec
jg
jg
fistp
push
jg
fistp
mov
(bad)
sti
jmp
out
std
in
idiv
std
pop
std
cmps
push
call
(bad)
std
out
rcr
fbld
in
scas
std
adc
(bad)
(bad)
jg
shr
shr
sub
out
(bad)
sti
lahf
(bad)
out
(bad)
out
(bad)
sti
(bad)
and
jg
jg
jg
fbstp
mov
jg
fistp
mov
(bad)
mov
out
(bad)
mov
pop
cld
das
push
(bad)
std
xchg
fdivrp
xchg
ficomp
dec
mov
(bad)
pop
jmp
(bad)
sti
das
cld
dec
(bad)
out
(bad)
sti
cli
aas
(bad)
mov
(bad)
push
add
and
jnp
cmp
(bad)
jle
mov
mov
call
mul
adc
dec
inc
sbb
adc
pop
dec
clc
vpmacsdqh
cmps
iret
jmp
(bad)
in
(bad)
(bad)
mov
loop
push
and
jmp
mov
cmps
iret
jle
mov
push
add
das
mov
(bad)
(bad)
cli
das
(bad)
out
(bad)
sti
mul
hlt
cmp
scas
or
fistp
shr
jg
cmc
(bad)
mov
(bad)
(bad)
pop
push
mov
inc
(bad)
std
jg
push
(bad)
out
shl
jg
sar
jmp
cli
ja
(bad)
xor
or
pop
fmul
lea
ja
out
(bad)
ins
mov
push
or
mov
std
movs
adc
movs
cmp
retf
dec
enter
mov
out
scas
daa
jl
or
push
push
inc
fbld
std
fist
popf
inc
jp
iret
and
and
cs
pop
fwait
lock
mov
ins
(bad)
push
call
mov
sbb
sti
add
iret
pop
inc
arpl
or
sti
pop
adc
clc
scas
cmps
jns
mov
out
ds
lahf
and
jg
loope
mov
mov
xchg
ds
jmp
fnstenv
call
out
outs
dec
jge
out
std
pop
or
adc
cmp
cmp
dec
(bad)
pop
inc
arpl
xor
std
fild
adc
push
add
fbld
sbb
dec
mov
pop
jp
mov
inc
jge
ficom
or
icebp
inc
dec
jecxz
or
(bad)
(bad)
out
out
sbb
xlat
mov
mov
call
dec
rcr
arpl
repz
mov
cmp
jne
hlt
std
(bad)
(bad)
cmp
rcr
jge
movs
mov
and
scas
aas
xchg
(bad)
stc
cmps
sar
mov
jmp
jg
mov
sar
or
loop
sbb
xor
iret
call
jae
js
add
cmp
call
out
jge
not
cmp
ja
outs
or
outs
dec
hlt
cli
retf
call
popf
adc
inc
ret
mov
aaa
cmps
(bad)
(bad)
fild
ds
test
xor
loope
out
adc
iret
rcr
(bad)
cmp
(bad)
das
cmps
mov
mov
cld
test
daa
ret
xchg
neg
inc
out
daa
cli
cld
jne
out
out
inc
js
pop
hlt
idiv
fistp
out
aas
dec
lock
jno
out
inc
jge
arpl
sbb
jmp
loope
pop
push
mov
js
xchg
(bad)
es
jg
js
xchg
call
mov
adc
test
outs
dec
out
dec
aas
lahf
sar
pop
std
jmp
(bad)
(bad)
pusha
cli
in
ds
cmps
xor
pop
add
outs
sti
xor
jle
ja
sti
jg
xor
jecxz
fdivr
loope
and
out
call
inc
repz
inc
jo
sbb
mov
test
cli
int
neg
cmp
hlt
repz
sbb
push
fild
(bad)
inc
pop
dec
in
push
shl
push
mov
dec
jns
jo
add
dec
(bad)
adc
and
sti
ja
ins
icebp
jg
mov
cmps
imul
in
daa
cmp
loope
test
call
(bad)
dec
mov
cmps
cld
adc
push
call
out
push
jbe
adc
dec
ss
cli
(bad)
jg
mov
repz
hlt
(bad)
mov
loopne
xor
std
and
pop
std
inc
test
add
jg
(bad)
dec
lahf
int
pop
test
aas
inc
mov
or
scas
shl
shr
test
adc
dec
push
mov
(bad)
lahf
sbb
into
cmp
fucomi
aas
das
popf
ror
loope
xchg
sbb
xlat
pusha
mov
jg
push
jmp
stc
sbb
iret
and
out
(bad)
xlat
jg
jge
(bad)
xchg
mov
jecxz
cmps
aas
mov
pop
mov
(bad)
mov
div
push
gs
jg
stos
cmp
add
lock
ret
repnz
jns
aaa
mov
jmp
(bad)
fwait
fwait
iret
jg
sti
stc
pop
aam
shr
retf
lahf
ret
jmp
out
xchg
(bad)
cmp
out
pusha
icebp
cmp
jmp
test
pop
push
fisubr
sub
sbb
cmp
das
xor
push
sbb
rol
or
adc
cmps
int
mov
mov
cwde
aaa
jg
sti
out
je
iret
sub
sbb
div
pop
and
cmp
mov
stc
add
in
sub
fisttp
pop
jle
jg
dec
mov
cld
stos
mov
icebp
sub
xchg
pop
ins
(bad)
cmc
aaa
sbb
push
mov
adc
cmp
jge
iret
(bad)
sar
or
loope
popa
dec
cli
xchg
jbe
pop
cdq
xchg
jg
mov
lods
test
jne
hlt
out
sbb
in
out
outs
sar
call
jle
pop
mul
aas
cmps
femms
dec
fcomp
sub
jb
jb
fist
mov
rcl
mov
(bad)
fsubr
lock
sbb
rcr
pop
hlt
mul
imul
and
xchg
push
jg
dec
clc
push
cld
or
loop
loope
adc
cli
push
(bad)
jmp
xchg
ja
or
int3
sbb
std
leave
call
xchg
loopne
loopne
dec
sub
cli
ja
xlat
mov
add
aad
jl
jae
dec
or
cld
inc
clc
out
repnz
mov
xlat
pop
out
aaa
ror
scas
or
clc
push
clc
pop
call
lahf
pop
rcr
addr16
mov
(bad)
xchg
fdivr
rcr
jg
fsubr
aaa
add
or
add
add
rcl
cmps
std
loop
mov
mov
mov
(bad)
or
outs
push
aaa
pop
cmp
dec
xor
in
sti
cli
shr
call
pop
xchg
and
paddd
pop
scas
inc
sti
sbb
out
sub
cdq
clc
cli
lahf
mov
lahf
repnz
xor
mov
sar
jns
xchg
adc
std
mov
cdq
mov
movs
setbe
add
mov
adc
fdiv
xchg
push
(bad)
call
je
das
std
and
das
movs
clc
repnz
lds
and
mov
idiv
call
and
shr
sti
gs
movs
pop
xchg
add
lahf
sti
gs
fild
adc
fwait
std
push
mov
clc
cmp
loopne
push
xchg
jg
in
leave
ret
sti
fs
paddd
repz
iret
inc
mov
fild
enter
xlat
mov
jg
xor
out
(bad)
jle
push
cmp
out
sar
std
xor
jns
sub
icebp
call
les
and
and
pop
or
cmp
and
iret
jg
aas
jg
jnp
repz
jne
xchg
cli
dec
call
jg
or
jmp
adc
mov
sbb
sbb
sahf
or
adc
sbb
mov
pop
shl
dec
std
lahf
data16
fnstcw
dec
cmps
mov
int
(bad)
add
(bad)
std
jmp
clc
pop
xchg
inc
xor
ds
aaa
call
mov
push
pop
cld
in
push
pop
inc
stc
jg
xchg
icebp
lock
dec
popf
jmp
xchg
sti
dec
add
sub
(bad)
icebp
aad
cmp
jge
repz
js
sub
mov
cmc
cmps
jmp
mov
push
int
lahf
stc
mov
out
(bad)
jmp
push
inc
jl
(bad)
out
sbb
xchg
dec
test
(bad)
rol
pop
mov
cmc
jmp
das
jle
repz
lahf
idiv
sub
xchg
sub
jle
rol
cld
dec
clc
cmp
int3
call
mov
int3
(bad)
out
mov
pusha
in
cmp
sub
or
ja
mov
cld
xlat
stc
ins
paddd
gs
sbb
dec
inc
mov
fistp
xor
jl
test
(bad)
fsub
fist
repnz
cli
inc
xchg
inc
add
int3
jmp
lea
inc
repz
outs
push
fstp
cwde
xchg
movs
mov
adc
cld
push
add
ja
inc
inc
stc
stc
dec
mov
pop
push
cli
int
or
push
push
fisttp
call
std
push
out
pop
fstp
enter
inc
(bad)
mov
inc
ja
cld
cmp
mov
xchg
push
mov
ret
pop
sub
dec
inc
gs
hlt
retf
pop
ret
int3
xlat
outs
mov
(bad)
lods
inc
and
jno
nop
xchg
clc
inc
aam
loopne
and
popf
hlt
add
int3
int3
cmp
sbb
xchg
sub
fiadd
lock
sub
mov
aas
or
mov
(bad)
arpl
out
xchg
retf
or
out
shr
stos
das
push
pop
(bad)
lea
mov
lahf
mov
call
inc
jmp
jmp
pop
jecxz
clc
mov
inc
aam
shr
std
push
pop
(bad)
lods
jg
xlat
(bad)
xor
outs
stc
fwait
movs
arpl
push
pop
mov
xor
(bad)
mov
aas
mov
pop
cli
mov
mov
retf
jg
retf
push
loop
dec
into
int
pop
dec
cmps
icebp
loopne
add
and
test
scas
pop
jnp
xor
mov
out
dec
paddd
imul
mov
pop
cli
out
mov
(bad)
jbe
dec
repz
cli
out
mov
xchg
mov
push
dec
lahf
ins
pop
dec
in
imul
lock
or
and
xchg
sbb
leave
ins
jl
nop
dec
imul
icebp
fneni(8087
or
mov
jle
rol
loopne
push
sbb
call
leave
cmps
inc
je
cmp
jmp
cld
jae
push
idiv
mov
stos
pop
jg
sub
jmp
jl
pop
fwait
idiv
mov
out
std
out
sti
loopne
mov
xchg
popa
cmp
(bad)
mov
push
mov
in
(bad)
imul
mov
inc
jg
jno
cmps
xchg
shr
std
add
xchg
cwde
ja
adc
jbe
sti
pop
loopne
(bad)
and
mov
jmp
pusha
add
cs
mov
jmp
jg
outs
std
inc
imul
mov
jle
or
dec
sbb
jg
push
hlt
cld
jns
pop
gs
sub
std
sub
rol
xor
push
sar
imul
mov
adc
mov
jmp
inc
jne
jmp
xchg
(bad)
xchg
sub
test
jle
mov
(bad)
outs
lahf
loopne
outs
jecxz
xchg
in
test
in
pop
loope
jle
dec
mov
dec
bound
(bad)
push
int
adc
fld
scas
cdq
outs
paddsb
div
in
jmp
sbb
mov
in
fbstp
in
pop
std
fwait
out
mov
std
xchg
div
lahf
std
xor
sti
(bad)
ss
and
pop
cli
ins
pop
mov
jns
mov
fucomip
fbstp
mov
stc
in
out
lds
loop
jg
aas
xor
push
fisttp
inc
mov
loopne
ss
stc
neg
dec
int3
outs
mov
jbe
fistp
cli
lahf
call
mov
std
xor
fld
aas
xor
stc
in
ja
outs
ja
fisttp
cld
(bad)
mov
daa
jecxz
cmp
in
dec
mov
(bad)
xchg
jmp
mov
and
(bad)
in
ins
in
jecxz
fisttp
jg
in
pop
xor
call
dec
div
imul
sbb
clc
pop
in
outs
jg
scas
xor
(bad)
jmp
outs
and
jbe
xchg
jbe
inc
outs
aas
(bad)
stos
or
nop
adc
cli
in
cld
push
sbb
and
in
lahf
mov
in
aas
mov
ds
xor
ds
out
push
cs
jle
cld
out
out
mov
outs
jmp
ins
ds
repz
fistp
mov
movsx
ja
fcomi
inc
pop
xchg
fdivr
mov
inc
cmp
cld
push
call
scas
not
mov
push
shr
push
dec
lahf
and
clc
sub
add
add
fistp
movs
aas
push
aaa
gs
jle
ins
jmp
cld
call
fcomi
push
jmp
call
psraw
stos
stc
jno
std
or
outs
repz
xchg
mov
imul
icebp
(bad)
lods
outs
jge
mov
xor
jg
arpl
xchg
cli
sbb
cli
mov
sbb
jnp
jge
std
dec
repnz
scas
in
ja
ins
(bad)
fld
out
stos
jl
fdivrp
cld
(bad)
cli
mov
jmp
test
xchg
out
cs
std
pop
aas
imul
sbb
out
and
cmp
mov
jbe
and
(bad)
xor
out
inc
mov
push
out
jg
sbb
out
(bad)
ss
ds
iret
jle
jg
add
test
or
repz
fwait
outs
sub
idiv
(bad)
jae
icebp
(bad)
hlt
fbld
hlt
xlat
scas
cmc
jnp
pop
adc
imul
sbb
mov
iret
sub
cli
(bad)
out
dec
(bad)
call
xlat
cmp
(bad)
cld
cli
lahf
(bad)
cli
mov
jg
or
jg
scas
(bad)
fcmovnbe
iret
(bad)
aaa
mov
repnz
and
adc
xchg
sbb
xchg
rcl
(bad)
ret
jmp
push
lock
(bad)
jnp
retf
mov
scas
scas
mov
sti
push
or
cmc
lods
pop
cmp
jne
(bad)
addr16
inc
dec
mov
cmc
test
pop
jmp
int3
call
cli
pop
jle
cld
neg
jecxz
fisttp
jle
jg
mov
add
daa
cmp
in
stc
or
pop
mov
scas
dec
(bad)
(bad)
mov
jmp
out
fcomip
xlat
jnp
loopne
xlat
push
xchg
out
mov
xor
call
jge
pop
lock
jg
pop
out
ja
lea
jle
dec
sub
loope
outs
repz
std
xchg
cld
imul
daa
and
pop
call
cmc
inc
lea
into
std
sbb
loope
dec
pushf
bound
jle
(bad)
xlat
es
jg
in
sti
jne
xchg
xchg
mov
ins
jg
ins
sti
jmp
ficomp
aaa
out
dec
call
(bad)
mov
std
or
and
scas
adc
cmp
xchg
cdq
push
iret
scas
icebp
jmp
mov
cwde
loopne
jmp
(bad)
mov
cli
jne
out
in
aaa
sar
pop
std
mov
xlat
(bad)
mov
jmp
std
scas
sbb
jle
cli
cli
xlat
(bad)
jne
out
pop
jmp
(bad)
cli
imul
fmul
fdivrp
or
std
pop
mov
repnz
mov
jle
mov
cld
pop
aaa
mov
xlat
call
in
fistp
std
lods
cmp
jp
or
or
(bad)
cmp
jmp
xchg
shr
cwde
loop
jecxz
rcl
mov
adc
fisub
imul
aas
add
jg
inc
sbb
ret
jecxz
cli
fnstsw
(bad)
and
fwait
dec
push
setns
(bad)
ja
inc
xchg
pop
out
jmp
cmp
retf
jmp
inc
cmp
inc
mov
push
mov
(bad)
stos
mov
cld
push
xor
fcomip
xlat
std
cmc
call
pop
div
dec
jmp
adc
jg
idiv
mov
(bad)
popa
call
hlt
xlat
and
std
aam
sub
mov
dec
jg
pop
call
mov
sti
mov
cmc
icebp
das
adc
scas
std
push
mov
(bad)
fsubr
jmp
xchg
dec
dec
cmp
shl
mov
lea
pop
out
stc
int
icebp
outs
repnz
inc
call
outs
pop
xchg
cld
sahf
xor
pop
call
pop
jle
aad
jmp
or
and
cli
pop
sahf
ror
mov
in
pop
std
idiv
jmp
pop
(bad)
mov
mov
(bad)
mov
lea
jle
or
xlat
sti
int
mov
aas
cmc
scas
(bad)
fidivr
inc
in
out
std
pop
inc
stc
outs
les
cli
adc
fnstsw
repz
pop
pop
ins
sti
int
ret
fcomip
idiv
ins
jg
fisttp
or
icebp
pop
std
fsubrp
pop
hlt
imul
pop
std
add
loopne
std
mov
mov
sti
mov
pop
xchg
jo
int
inc
add
idiv
int
jecxz
pusha
aas
clc
cmc
call
xlat
and
mov
std
jge
jmp
lods
push
outs
stc
(bad)
sti
call
jg
dec
inc
mov
cld
xlat
pop
inc
inc
ret
aaa
dec
mov
(bad)
aaa
clc
int
in
idiv
ins
mov
scas
sti
fwait
daa
clc
jns
cld
enter
cmps
mov
jg
(bad)
sbb
movsx
jmp
push
xchg
fbld
cwde
jg
pop
jle
mov
add
call
(bad)
jmp
icebp
loopne
dec
js
add
fcmovnu
cld
xlat
movs
sub
ret
sub
jp
aaa
sti
int
fstp
adc
push
jle
stc
xchg
cmps
cmps
leave
out
stc
pop
repnz
mov
adc
cmps
jmp
jp
dec
cmp
(bad)
mov
aad
xor
add
push
fisttp
adc
outs
stc
sbb
cld
aad
push
sar
outs
cli
mov
cld
aaa
int
call
repz
mov
pop
mov
in
push
inc
push
pop
mov
mov
mov
cmps
aas
sti
fnstsw
cli
lods
icebp
out
(bad)
jnp
out
out
out
inc
loopne
and
(bad)
scas
pop
adc
mov
(bad)
push
pop
outs
cli
scas
pop
test
dec
jg
iret
jg
add
neg
sub
fcomi
pop
clc
xlat
add
int
mov
loopne
jle
fist
std
sub
scas
dec
js
push
or
aaa
xchg
std
int
fstp
sahf
popa
lock
add
cli
aaa
jmp
or
dec
jmp
fisttp
xchg
push
mov
jmp
pop
ret
jp
outs
(bad)
pop
cmps
push
xchg
in
cs
fstp
loopne
cld
lods
jg
(bad)
aaa
dec
fild
in
sahf
add
rol
test
push
js
imul
cld
jp
in
mov
xor
lods
jle
(bad)
aaa
jmp
cmp
cdq
test
xchg
aas
es
mov
sub
dec
dec
out
into
in
jle
(bad)
mov
cld
out
in
xor
add
aas
loopne
cld
ins
jle
fbld
ret
xchg
(bad)
in
fwait
push
outs
xchg
aaa
icebp
(bad)
add
push
sbb
std
cmp
lea
fbstp
cld
into
jg
outs
stc
(bad)
out
popf
arpl
into
sbb
dec
cmp
jl
ret
pop
(bad)
sti
cmp
ret
nop
mov
add
ins
adc
popa
loopne
into
leave
fisttp
adc
xchg
cmp
fwait
loope
mov
push
sti
int
sbb
add
std
sti
cld
push
aas
std
jnp
outs
shl
inc
mov
and
sar
pop
not
clc
mov
mov
mov
ret
mov
mov
lods
imul
jae
repnz
ja
shr
mov
imul
sub
repz
(bad)
jp
adc
mov
ins
jg
fnstsw
ja
int
js
call
stc
rcr
jmp
je
(bad)
sar
dec
xchg
and
pop
movs
(bad)
jnp
mov
std
idiv
or
xchg
pop
out
ja
mov
sti
inc
repz
inc
(bad)
push
mov
ret
scas
aaa
mov
adc
lea
inc
sub
pop
call
mov
pop
fst
sbb
mov
cmp
cli
adc
push
push
mov
imul
mov
std
scas
sbb
push
jge
jmp
std
dec
pop
dec
fs
push
add
ja
test
loopne
std
cmp
cmp
gs
and
outs
mov
stos
jg
(bad)
adc
(bad)
aaa
adc
cld
fcmovne
dec
xchg
ret
inc
mov
inc
fs
sti
ds
mov
mov
(bad)
mov
pop
call
mov
hlt
sbb
jbe
(bad)
aaa
std
std
jg
fistp
aaa
dec
sbb
bound
mov
repnz
pusha
add
pop
ss
in
sbb
jg
jg
shr
std
pop
jge
add
fist
dec
imul
xor
daa
lahf
cld
sbb
dec
push
pop
and
loope
outs
loopne
add
aas
cli
sar
add
scas
jg
sub
dec
or
loope
add
fdivr
xor
(bad)
push
sub
fsub
pusha
(bad)
jg
ret
push
mov
lock
xchg
rol
repz
ja
cli
pop
and
(bad)
mov
outs
or
fcomip
xlat
(bad)
mov
imul
outs
add
pop
clc
out
jae
mov
pop
cli
std
fild
data16
call
mov
jbe
or
imul
mov
mov
mov
jg
idiv
jne
(bad)
fsub
cmps
mov
out
addr16
loope
mov
test
lods
out
jecxz
call
or
jmp
popa
xchg
idiv
pop
pop
jmp
(bad)
cmc
jle
lods
fisttp
inc
mov
retf
outs
lock
shr
lahf
cld
out
fsubr
jnp
(bad)
aas
imul
jae
repnz
cmp
dec
movzx
jmp
pop
jb
adc
pop
dec
loopne
xchg
outs
std
add
mov
lahf
cld
pop
pop
adc
test
xor
iret
jnp
xchg
push
loop
lahf
ss
cld
test
(bad)
adc
lock
clc
std
aaa
popa
inc
aas
mov
stc
mov
out
cmc
repz
cld
scas
ret
cmp
js
daa
repnz
sub
icebp
out
xor
clc
clc
lahf
jl
js
cmps
add
cmp
cmp
std
cs
mov
jbe
popf
rcr
lahf
mov
xchg
adc
(bad)
scas
add
mov
out
out
cmp
jnp
dec
jle
pop
mov
jb
jg
xchg
adc
into
jle
pop
jecxz
out
dec
mov
jns
mov
xchg
(bad)
dec
pusha
jg
stos
xlat
mov
call
mov
std
clc
out
popf
cmp
std
std
xchg
pop
jmp
lahf
xchg
aad
xlat
nop
xchg
mov
sti
pop
hlt
sbb
adc
cs
call
sbb
sub
std
iret
jmp
fild
xor
cmp
addr16
(bad)
push
cli
cmp
jb
aam
stos
(bad)
(bad)
imul
inc
scas
sub
std
cmc
test
(bad)
hlt
out
dec
(bad)
sbb
mov
pushf
call
out
ret
xlat
sar
(bad)
icebp
out
jmp
(bad)
sti
mov
scas
mov
cld
out
out
out
mov
std
lds
(bad)
jp
(bad)
ffreep
mov
outs
hlt
imul
dec
jle
fcomip
xlat
cli
clc
xlat
dec
jle
loop
stos
jg
pop
out
xlat
clc
push
jle
sar
jle
call
jecxz
cmps
cld
out
dec
sar
aaa
(bad)
fidivr
scas
std
fwait
cld
sbb
adc
sti
pop
cld
sbb
(bad)
cmp
std
cmp
scas
std
jmp
sbb
scas
xor
mov
(bad)
(bad)
pop
cld
out
das
out
inc
cld
sti
daa
mov
(bad)
(bad)
push
mov
outs
add
aaa
clc
test
xor
dec
call
std
ins
jle
jmp
aaa
clc
cmc
jg
mov
xor
mov
cli
neg
cld
outs
inc
(bad)
(bad)
jp
(bad)
iret
cld
fcomp
inc
(bad)
(bad)
in
div
sar
xor
out
das
dec
lock
sbb
repnz
cld
out
lds
std
xchg
inc
dec
(bad)
jne
test
(bad)
(bad)
(bad)
fsubr
jg
cli
fisttp
(bad)
sub
xor
outs
repz
mov
std
jp
(bad)
jg
fwait
add
(bad)
neg
call
and
out
in
clc
clc
xlat
cld
pop
push
jecxz
movs
jg
ins
(bad)
std
xlat
sti
xor
mov
mov
cs
sti
div
ja
xor
les
jmp
sbb
outs
add
inc
outs
adc
neg
iret
pop
repnz
(bad)
mov
xor
outs
mov
call
outs
lea
jg
outs
mov
pop
(bad)
div
cli
in
lock
(bad)
fild
repnz
cmc
cmp
pop
clc
(bad)
repz
cmc
cmp
jp
(bad)
dec
std
xor
cld
jp
(bad)
pop
int
dec
pop
mov
xchg
pop
jecxz
(bad)
lods
sub
out
mov
scas
icebp
jg
mov
std
sbb
jle
ja
mov
xor
dec
jle
mov
ja
add
(bad)
(bad)
addr16
outs
cmc
imul
xchg
cdq
sti
dec
jle
pop
std
jecxz
jmp
stc
(bad)
stc
lahf
(bad)
(bad)
inc
cld
out
outs
cli
mov
pop
loop
fild
(bad)
mov
fwait
cld
sbb
ffree
js
shr
cmp
xchg
(bad)
std
push
ja
out
out
jmp
imul
cmp
(bad)
sbb
fild
es
outs
mov
pushf
lock
in
cld
dec
mov
cld
retf
cmp
mov
jle
sub
cld
jne
fwait
pop
jecxz
fadd
sbb
jbe
ja
jg
pop
jecxz
fld
pushf
mov
out
add
outs
enter
cld
out
xchg
cld
out
lahf
jne
(bad)
mov
out
mov
out
out
add
scas
imul
data16
ja
adc
pop
jl
dec
fimul
nop
dec
jg
pop
jecxz
mov
jecxz
cli
adc
(bad)
in
lahf
inc
jbe
loop
jp
ds
sti
xor
shl
iret
in
(bad)
fld
push
mov
leave
pop
repz
fisttp
jbe
push
out
sbb
cmp
jg
(bad)
sti
cmps
repnz
ja
outs
jg
adc
sbb
test
vhaddps
cmp
cmp
cld
push
call
inc
push
out
or
inc
(bad)
mov
outs
cmp
push
cld
sti
aaa
aas
add
inc
sti
rcr
jle
jecxz
jl
cmp
sahf
jg
fldcw
scas
icebp
pop
sahf
mov
(bad)
jae
out
sub
in
jl
sub
arpl
fimul
int3
ret
cmp
jg
sub
outs
icebp
and
pop
push
lock
and
neg
outs
lock
dec
lock
jp
xor
jnp
loope
cmc
dec
mov
sti
arpl
div
cld
mov
aas
jl
std
fucomip
aad
cld
pop
cld
sbb
ffreep
pop
out
clc
xor
ja
jne
xchg
outs
clc
std
(bad)
xchg
fisttp
add
daa
(bad)
sti
fwait
(bad)
(bad)
push
(bad)
pop
xchg
dec
sub
sbb
aaa
sti
xor
movs
repnz
dec
(bad)
mov
lods
jg
das
in
pop
pop
hlt
xlat
dec
nop
mov
or
xchg
xchg
out
push
movs
idiv
pop
jecxz
movs
mov
out
loope
mov
or
mov
mov
test
cli
mov
lock
pop
jg
std
or
mov
sub
cmc
xlat
call
icebp
pop
rcr
sbb
sbb
or
cld
cmc
aaa
fnstcw
mov
jbe
mov
out
std
xchg
mov
jnp
inc
mov
mov
pop
shr
push
clc
scas
jg
inc
std
aaa
sti
xor
lahf
out
inc
in
cmp
jae
(bad)
mov
mov
hlt
fnstsw
jmp
mov
pop
xor
fisttp
(bad)
call
lea
enter
mov
std
ret
or
scas
icebp
scas
icebp
sti
lock
dec
cld
jle
xlat
jg
jg
ds
and
(bad)
sbb
mov
mov
scas
(bad)
sar
mov
fdivr
test
jle
sti
pop
mov
sub
xlat
ds
std
idiv
xlat
out
pop
jp
popf
jle
hlt
ja
imul
pop
fwait
(bad)
cli
pop
clc
scas
pop
mov
adc
cmc
repnz
clc
cmp
fistp
out
loop
clc
or
ret
hlt
xlat
clc
(bad)
jle
fistp
mov
push
icebp
imul
cld
fisubr
div
not
clc
outs
stc
scas
jge
jmp
mov
lahf
jns
mov
scas
in
xlat
test
(bad)
call
scas
and
jle
int
jle
pop
jecxz
in
clc
das
cli
sti
mul
idiv
imul
cld
fld
out
into
jmp
movs
mov
(bad)
call
neg
dec
push
(bad)
push
cli
or
inc
(bad)
sbb
sbb
inc
std
aad
neg
imul
xlat
(bad)
repz
call
clc
scas
jg
(bad)
cli
adc
fild
scas
pushf
cmp
aas
cmp
inc
(bad)
cli
iret
clc
scas
mov
jg
aas
mov
cli
scas
mov
pop
jl
fist
cs
cdq
(bad)
cli
loop
xchg
mov
idiv
jne
repnz
std
xor
les
nop
xchg
mov
gs
fstp
clc
imul
jne
mov
jmp
pop
cld
xlat
(bad)
imul
stc
scas
jg
inc
jnp
jle
lahf
in
jle
pop
arpl
jmp
jnp
cmp
xchg
inc
ret
mov
imul
pop
into
jg
pop
mov
std
shl
xlat
scas
icebp
imul
mov
ret
cmc
cli
jecxz
popf
mov
xor
(bad)
cli
inc
cmc
scas
mov
jle
jo
jg
imul
cld
fisubr
jmp
sbb
add
xchg
push
fs
cld
std
fdiv
hlt
xlat
std
mov
xlat
clc
xchg
jo
pop
cli
out
call
movs
mov
mov
std
test
jmp
retf
push
jle
pop
repz
jne
xchg
pop
jecxz
(bad)
mov
je
out
pop
mov
xlat
(bad)
xor
aas
movs
mov
fwait
or
push
jmp
mov
icebp
jmp
pop
mov
std
cmc
jmp
call
sub
scas
cmp
loop
inc
jg
and
add
hlt
xlat
add
(bad)
jmp
xlat
aas
adc
cmc
lahf
push
jg
xor
push
scas
jmp
call
imul
mov
and
jmp
out
mov
push
out
(bad)
cld
fisubr
cld
stc
scas
jns
aaa
clc
sbb
shr
mov
push
idiv
fdivrp
sub
xlat
jg
sahf
add
push
xlat
std
mov
fstp
xchg
inc
mov
ss
(bad)
imul
ja
add
sti
pop
icebp
daa
idiv
test
add
cld
pop
mov
fisub
imul
iret
jecxz
push
repz
int3
pop
(bad)
popa
(bad)
jp
repz
sti
jne
ss
and
xor
push
(bad)
inc
(bad)
outs
out
(bad)
mov
loopne
jmp
cld
out
dec
(bad)
add
(bad)
(bad)
mov
mov
jg
xlat
jmp
aaa
sar
mov
mov
jmp
mov
pop
mov
repnz
mov
repz
into
outs
lock
mov
out
outs
imul
mov
pushf
pop
(bad)
cmp
jp
outs
and
js
jmp
dec
jle
sbb
imul
xchg
iret
jle
or
neg
outs
push
push
retf
mov
call
pop
aad
imul
popf
jg
cmps
repz
int
xchg
xor
inc
cmp
cmp
imul
fistp
iret
jg
(bad)
sbb
(bad)
shr
mov
in
in
dec
fnstsw
ins
std
cld
(bad)
cmc
icebp
das
(bad)
push
jg
xlat
inc
repnz
cmps
arpl
std
jp
int
clc
sar
lahf
cld
xor
dec
inc
in
test
imul
fbld
icebp
or
mov
clc
pop
cld
cmc
hlt
sti
pop
(bad)
std
cmp
pop
jnp
or
std
fnstsw
adc
lahf
icebp
mov
sti
pop
mov
leave
dec
jge
pop
std
pop
push
jg
aaa
add
clc
div
or
xlat
and
js
push
mov
and
fisttp
cld
pop
dec
jle
dec
or
xchg
cmps
jnp
jno
cmp
mul
fnstsw
outs
imul
jno
cwde
das
cld
jmp
enter
repz
xor
cld
push
hlt
out
outs
not
icebp
pop
(bad)
or
sbb
sti
mov
std
mov
mov
xor
xchg
push
push
and
aaa
adc
(bad)
fisttp
adc
out
pop
hlt
imul
sti
add
mov
add
in
das
call
int
repz
inc
fisttp
(bad)
pop
shl
sbb
lds
std
mov
lahf
les
inc
cmp
(bad)
std
scas
loope
(bad)
cmp
imul
push
dec
les
mov
out
cld
xor
std
pop
repz
push
std
dec
(bad)
test
jmp
loop
sti
jne
repz
jecxz
inc
lahf
dec
(bad)
(bad)
push
aas
icebp
fcmovnbe
daa
jg
dec
cld
lea
cld
jns
out
outs
stc
imul
fsub
outs
loop
call
outs
stc
(bad)
jno
jg
jle
sub
aas
dec
idiv
mov
pop
stc
fstp
adc
out
lds
in
jmp
cld
sti
repnz
stc
cmp
addr16
out
leave
outs
(bad)
imul
repz
fistp
sti
cld
jbe
inc
mov
jl
jg
popf
jle
pop
repz
stc
(bad)
das
cmps
jg
push
(bad)
std
pop
stc
(bad)
scas
mov
call
out
jg
std
pop
sti
ja
cdq
push
push
icebp
xlat
clc
xchg
jg
inc
mov
cld
call
lahf
cli
imul
hlt
scas
stc
scas
(bad)
(bad)
pop
aas
mov
(bad)
dec
std
push
cli
xlat
aas
sar
cld
xlat
scas
neg
mov
pop
jg
(bad)
retf
ja
ds
stc
jmp
scas
(bad)
jmp
fdivrp
nop
(bad)
cmc
imul
js
lahf
sar
(bad)
jno
retf
mov
loope
pop
mov
add
aaa
sbb
pop
ja
sbb
mov
mov
inc
cli
jmp
mov
xor
lahf
dec
movq
outs
add
call
push
shl
sar
aas
sar
mov
fild
arpl
jne
sbb
ja
xor
push
jmp
adc
cli
ins
mov
rol
pop
jbe
arpl
cmps
popf
or
das
sar
scas
sar
(bad)
mov
cdq
jl
pop
icebp
ja
fwait
(bad)
cmc
jno
idiv
and
jmp
push
iret
icebp
pop
mov
push
retf
out
sbb
std
dec
hlt
xlat
retf
pop
repnz
std
fnstsw
pop
movs
mov
(bad)
iret
hlt
xlat
jecxz
int3
pop
mov
fucomp
ins
mov
jle
mov
daa
jmp
cmps
gs
jg
sti
sti
repnz
iret
and
and
cmc
out
jle
xlat
lahf
call
sti
retf
pop
jg
repnz
rcr
pop
out
test
or
jg
(bad)
scas
mov
xor
jmp
loopne
std
inc
cli
xlat
jg
jg
jne
cmp
or
ins
iret
or
repz
mov
inc
fcomi
xlat
scas
icebp
shl
aas
inc
jg
inc
outs
or
std
push
or
jmp
in
mov
out
dec
jg
inc
mov
cli
ret
push
jmp
fnstsw
mov
(bad)
mov
mov
inc
ret
mov
jecxz
push
lock
cmc
inc
std
bound
ret
mov
xor
or
div
repnz
push
(bad)
jmp
cld
add
scas
aas
dec
(bad)
cli
int
mov
fcomi
scas
cmp
mov
xchg
jg
call
mov
scas
pop
scas
jg
xor
clc
and
test
out
outs
sub
jg
pop
mov
xchg
sti
jmp
mov
jg
cmp
(bad)
push
imul
xor
aaa
lods
mov
lods
xor
jmp
sar
sti
pop
cmc
xchg
cwde
jg
call
add
jo
jmp
jo
push
(bad)
cli
xchg
sbb
dec
(bad)
cli
retf
stc
scas
cmp
inc
add
fistp
and
std
fisttp
jns
repnz
jmp
neg
jmp
cli
(bad)
or
add
dec
popf
xchg
fild
mov
cli
xlat
shr
(bad)
sub
jmp
push
scas
std
xchg
ds
dec
sti
add
retf
jg
or
aaa
cli
mov
(bad)
in
hlt
scas
aas
(bad)
(bad)
cli
(bad)
sub
retf
div
xor
inc
stc
jge
scas
jg
fistp
call
pop
sub
and
inc
pop
mov
jle
mov
imul
stc
das
jmp
or
leave
outs
or
call
pop
inc
std
dec
or
outs
cmc
(bad)
leave
pop
int
cli
aas
rcr
fwait
(bad)
cmc
daa
std
cmps
mov
jg
gs
std
fdivrp
xlat
(bad)
fwait
(bad)
out
stos
dec
pop
rcr
push
inc
(bad)
pop
das
js
out
out
mul
dec
retf
inc
jle
fisttp
ds
mov
cwde
jge
(bad)
cli
push
push
inc
(bad)
cmp
int
addr16
daa
cwde
push
mov
cld
gs
fistp
fwait
xor
jmp
mov
jg
loope
repz
mov
dec
cli
adc
(bad)
ja
xor
cli
cmp
div
sti
daa
jmp
lds
call
out
push
movs
and
aas
pop
mov
mov
mov
pop
jecxz
clc
int
cli
out
ja
or
jg
jg
sahf
jg
cld
cmc
lahf
(bad)
out
or
mov
idiv
in
add
cmp
pop
add
in
pop
nop
xchg
jg
outs
icebp
mov
out
hlt
wbinvd
push
outs
xor
repz
pop
jg
sub
sub
jnp
pop
fstp
jg
call
pop
pop
icebp
pop
jg
(bad)
push
cld
xchg
xor
jmp
stc
retf
jmp
cli
stos
jg
int3
fistp
cmps
jg
jnp
in
dec
(bad)
inc
cli
xlat
push
pop
add
jle
pop
out
(bad)
mov
jmp
jmp
(bad)
push
loopne
fisttp
jp
pop
mov
daa
jg
fist
(bad)
mov
cli
xlat
pop
std
pop
std
jbe
(bad)
call
test
std
imul
std
push
cli
xlat
jg
pop
std
inc
cli
jmp
sar
mov
jmp
jmp
mov
(bad)
mov
jmp
loopne
(bad)
ret
fbld
pop
arpl
div
scas
mov
(bad)
cmc
iret
repz
mov
call
shr
add
scas
pop
jmp
pop
loopne
jg
push
sbb
aas
cmps
jg
push
(bad)
cmc
mov
push
lock
fild
(bad)
loop
sar
movs
xchg
mov
std
inc
mov
mov
inc
cmp
mov
pop
dec
pop
jl
pop
call
lds
(bad)
mov
(bad)
jg
(bad)
cmc
call
outs
or
cs
jmp
repz
pushf
(bad)
cmc
daa
(bad)
mov
(bad)
jg
(bad)
cli
inc
jg
lock
jmp
(bad)
(bad)
shr
push
jle
std
imul
sti
ror
retf
cmc
adc
fst
jmp
outs
pop
int3
jle
std
jmp
jecxz
dec
std
jmp
(bad)
in
inc
fnstsw
dec
(bad)
cli
ja
cmp
rcr
mov
hlt
scas
pop
jmp
(bad)
jnp
cwde
(bad)
cmc
fcomi
pop
call
push
out
std
dec
cli
xlat
out
cmp
(bad)
in
out
jno
fisttp
cli
lds
pop
jg
push
jnp
pop
jg
push
inc
(bad)
cli
pop
clc
mov
jo
jg
(bad)
cmc
jg
test
iret
sar
lahf
push
sahf
cli
xlat
shr
scas
sbb
arpl
(bad)
hlt
scas
aad
lock
rcr
fwait
(bad)
cmc
daa
cld
push
dec
std
cmc
fwait
std
adc
xlat
pop
ret
aaa
std
jmp
loopne
push
jmp
dec
out
adc
aam
(bad)
cmp
imul
fidivr
jg
std
mov
dec
sar
xor
stos
cli
sbb
inc
repz
xchg
out
(bad)
rcr
adc
out
sar
pop
mov
(bad)
jmp
push
inc
cld
push
jmp
out
or
jg
outs
lock
cld
mov
cli
adc
jmp
jnp
add
scas
jg
pusha
jmp
jle
fisttp
mov
xor
popf
adc
(bad)
sub
imul
sar
(bad)
scas
iret
clc
scas
aas
dec
(bad)
cli
mov
mov
and
div
aas
and
in
in
(bad)
jne
sub
(bad)
sub
pop
repz
js
ins
(bad)
in
(bad)
cld
cmc
dec
cld
call
cmc
idiv
dec
bsr
jae
jmp
inc
stc
and
(bad)
(bad)
ja
aas
in
xor
jmp
aas
mov
xor
jle
loopne
addr16
js
jne
pop
jo
mov
jg
(bad)
hlt
xlat
outs
cmc
iret
fwait
mov
out
lahf
xchg
mul
or
lahf
sar
movs
jg
xor
fistp
jg
add
cs
jnp
std
fistp
or
test
cmc
daa
rcr
mov
mov
mov
cmc
dec
jo
(bad)
cmc
scas
jg
(bad)
cli
mov
cmc
aas
xor
imul
lock
int
mov
mov
loopne
mov
std
mov
scas
leave
jnp
into
das
clc
out
scas
jg
(bad)
cli
push
jle
mov
cli
xlat
(bad)
clc
or
sar
fwait
(bad)
cmc
imul
nop
mov
jmp
add
daa
cld
xlat
dec
(bad)
cli
cmp
cmc
scas
xlat
mov
xlat
(bad)
sti
xor
mov
jg
push
jmp
out
frstor
(bad)
mov
jecxz
clc
pop
adc
cmp
jns
xlat
ffreep
jg
ins
cli
xlat
aas
into
jg
jae
xchg
icebp
xor
jg
jp
aaa
jg
fisttp
call
pop
push
push
xchg
jmp
xchg
jg
(bad)
cmc
xor
cmc
scas
jmp
sti
lahf
jmp
in
jmp
xchg
jmp
mov
jg
adc
and
neg
pop
jmp
mov
(bad)
ds
jmp
dec
(bad)
hlt
push
sti
outs
leave
pop
dec
inc
jg
std
ja
adc
jbe
sahf
stc
or
mov
dec
pop
fdivrp
pop
(bad)
jns
call
lock
mov
mov
pop
cld
xlat
lahf
cli
imul
scas
rcr
call
inc
call
scas
cmp
std
imul
adc
into
jg
jg
sar
xlat
outs
cmps
jg
stc
mov
ja
mov
ins
mov
cmc
pop
repnz
iret
cmc
scas
(bad)
jmp
jge
sub
hlt
adc
sti
mov
jle
cli
jmp
sar
lahf
(bad)
cmc
jnp
pop
call
int
pop
jmp
sbb
jmp
adc
in
jmp
and
mov
pop
std
push
hlt
fstp
std
jmp
clc
jno
sub
scas
pop
clc
jecxz
xor
scas
inc
aas
mov
mov
push
jg
cld
fidivr
movs
jg
jno
mov
mov
jg
jg
stos
fdiv
xlat
stc
(bad)
in
push
(bad)
jmp
cmps
jg
push
mov
(bad)
(bad)
frstor
arpl
cmc
scas
addr16
pop
aas
lds
sar
les
out
stc
retf
hlt
das
loope
mov
(bad)
(bad)
daa
repnz
lock
jge
aas
xchg
mov
call
cmp
cli
das
lock
loope
out
xchg
stc
or
pop
mov
std
jmp
cld
fstp
cmp
cmc
fwait
jmp
push
dec
ins
jmp
hlt
pop
(bad)
cli
lods
jle
(bad)
or
xlat
(bad)
out
mov
int
scas
(bad)
mov
hlt
scas
xchg
mov
sar
cmps
jg
sti
ffree
pop
call
call
(bad)
mov
jg
pop
jg
jg
pop
std
aaa
repnz
aas
lds
hlt
scas
jg
ja
clc
inc
(bad)
cli
lahf
jle
js
das
cmc
scas
pop
inc
hlt
scas
addr16
dec
imul
rcr
xchg
jg
(bad)
cmc
(bad)
inc
loopne
movs
jg
lds
call
inc
hlt
lock
jmp
inc
out
mov
std
outs
cld
push
stos
jg
inc
pop
mov
sar
cmps
cli
xlat
inc
loopne
fist
cli
test
mov
(bad)
pop
stos
hlt
scas
aad
imul
cli
dec
ds
mov
pop
sti
sbb
jmp
out
shl
xchg
(bad)
cmc
jg
or
(bad)
fcomip
scas
pop
mov
fdivrp
lods
(bad)
cmp
gs
(bad)
(bad)
and
div
xchg
jo
jg
jg
sar
call
xchg
(bad)
mov
pop
pusha
jle
test
jmp
xlat
clc
pop
in
aas
push
hlt
scas
aas
ins
or
adc
std
jge
cwde
(bad)
cli
xlat
mov
scas
jmp
inc
(bad)
cli
fbstp
fucomip
push
push
jmp
pop
sti
ja
fidivr
movs
jg
fwait
(bad)
cli
div
scas
lahf
mov
std
jmp
fdivrp
or
fucomip
xchg
leave
pop
jg
sbb
mov
in
(bad)
cmc
dec
repnz
outs
hlt
scas
(bad)
cld
into
lahf
dec
sub
call
mov
pop
cld
xlat
lahf
cmps
jg
pop
fild
addr16
jne
xlat
adc
pop
jg
mov
mov
imul
add
repnz
clc
in
xlat
mov
mov
repz
stc
scas
jg
xlat
clc
sbb
inc
cli
xchg
int3
ins
cli
sub
das
cdq
fstp
call
push
stc
dec
mov
pop
idiv
pop
(bad)
sub
gs
aaa
cli
aad
(bad)
daa
shl
sar
jge
jg
fdivrp
xlat
jae
jmp
daa
cwde
fcmovnu
pop
(bad)
cli
jecxz
scas
cdq
(bad)
cmc
pop
jge
jle
cmps
jg
ins
lahf
adc
xchg
(bad)
cmc
dec
jno
jg
(bad)
cmc
out
jge
sahf
clc
(bad)
hlt
scas
dec
scas
pop
addr16
cld
lahf
hlt
scas
fisttp
psubw
add
daa
std
jmp
sbb
mov
mov
std
imul
test
(bad)
popa
ret
sar
inc
jg
inc
cli
xlat
pop
(bad)
cmp
aas
xor
das
inc
(bad)
cli
xlat
clc
mov
scas
inc
nop
mov
mov
dec
(bad)
cli
int
sbb
outs
fist
pop
mul
jg
(bad)
fcomp
mov
aaa
out
scas
fbstp
jmp
out
paddw
mov
and
sbb
ds
mov
test
mov
shl
xchg
(bad)
cmc
inc
outs
(bad)
mov
ja
(bad)
cld
arpl
jmp
fadd
mov
aas
mov
out
ja
jmp
scas
aas
dec
mov
dec
out
imul
cmc
ins
jae
stos
jg
xchg
fcmovne
jns
fdivrp
xlat
scas
out
dec
std
jmp
sbb
std
clc
cwde
arpl
jmp
sbb
push
jmp
cmc
mov
pop
mov
sub
jmp
sbb
iret
(bad)
cmp
cmp
mov
in
(bad)
js
jl
outs
cmps
jg
or
mov
cld
cmc
ins
std
jmp
mov
cmc
scas
xchg
mov
repz
jg
(bad)
jne
xchg
and
jmp
loopne
(bad)
es
jmp
mov
movs
jg
add
fidivr
ja
ins
jmp
xlat
push
(bad)
cmps
jns
lea
(bad)
cli
pop
jbe
push
stos
jg
fild
ds
jle
std
jmp
cmp
fistp
jbe
jne
mov
mov
sbb
scas
icebp
pop
out
cld
iret
add
iret
jecxz
dec
xor
cld
jns
icebp
scas
cmc
imul
pusha
(bad)
fidivr
std
pop
add
xlat
(bad)
xor
(bad)
push
mov
cld
jno
xlat
out
mov
fwait
rcr
pop
cmps
jg
(bad)
mov
scas
mov
jmp
repnz
jmp
cmc
scas
jmp
outs
mul
imul
jg
ret
cld
or
pop
fscale
pop
jg
pop
sti
xlat
clc
popf
hlt
scas
pop
mov
jge
dec
jl
pop
sti
xlat
clc
in
xlat
scas
mov
div
inc
mov
inc
outs
or
imul
outs
mov
std
(bad)
mov
push
mov
outs
stc
imul
(bad)
out
movs
jg
icebp
jnp
jmp
jmp
fdivrp
int
ret
test
(bad)
xlat
fistp
xor
jmp
fdivrp
mov
cli
idiv
scas
lahf
sar
out
(bad)
xchg
pop
jecxz
sar
stc
aaa
jmp
push
aaa
dec
sub
sti
fisttp
out
(bad)
jg
sbb
icebp
xchg
dec
dec
repnz
mov
xchg
stos
jnp
cli
out
sar
pop
sar
das
icebp
pop
jg
scas
icebp
daa
(bad)
daa
jg
in
clc
in
jle
stc
jmp
mov
pop
cli
xlat
lahf
jge
fbld
(bad)
cli
repz
std
pop
hlt
xlat
retf
fist
cli
mov
std
jb
imul
xchg
mov
stc
outs
inc
jecxz
mov
nop
(bad)
cli
jecxz
scas
mov
hlt
scas
mov
idiv
ja
mov
call
xchg
mov
call
xchg
mov
daa
std
mov
jg
ret
test
shr
clc
mov
std
out
aas
mov
jg
(bad)
cmc
lahf
(bad)
std
call
cli
scas
out
int
scas
jg
(bad)
cli
out
out
mov
xlat
pop
cmc
or
scas
(bad)
jmp
mov
out
std
adc
xlat
jg
mov
mov
jge
jg
pop
idiv
bound
jg
sbb
jg
inc
stos
jg
cmp
jg
inc
stos
jg
push
sti
jg
std
cmc
das
jmp
aas
add
idiv
and
mov
xchg
(bad)
jp
jg
(bad)
sti
jmp
std
cmc
pop
fsubr
(bad)
sbb
jmp
sti
xchg
cld
cmc
pop
in
pop
cld
cmps
leave
scas
push
jle
jg
test
adc
jmp
sar
cli
jmp
sbb
pop
inc
(bad)
pop
dec
jg
dec
fisttp
std
aas
mov
cmp
fwait
push
(bad)
cmp
imul
cli
(bad)
idiv
xor
fcom
mov
hlt
scas
jg
pop
repz
in
sbb
jg
jge
mov
ds
test
jmp
dec
(bad)
cli
push
stc
mov
fdivr
(bad)
push
(bad)
cli
mov
jmp
jmp
sti
repnz
mov
pop
mov
out
jmp
xlat
pop
cmps
jg
daa
sti
aas
neg
mov
dec
jg
std
push
(bad)
cli
scas
div
(bad)
in
(bad)
ds
cmc
sti
jmp
dec
cmp
mov
cmp
scas
jno
(bad)
out
inc
jg
inc
dec
in
sar
pop
inc
jg
aam
out
fiadd
mov
sar
lahf
inc
jg
push
cli
xlat
loope
mov
mov
in
fbld
int
cmp
sub
cmps
repnz
out
jne
out
add
mov
jmp
std
cmc
pop
call
scas
fcomip
or
stos
mov
(bad)
jmp
sti
xor
cli
jmp
js
fbstp
pushf
hlt
test
cmc
out
(bad)
out
dec
jg
pop
retf
jae
fdiv
lahf
jmp
(bad)
sti
mov
cmc
xchg
pop
pop
(bad)
es
jmp
loop
(bad)
stos
lahf
xchg
mov
jg
mov
jmp
repnz
lahf
jbe
mul
out
in
jg
(bad)
cmc
pmaxub
cs
outs
jmp
fist
outs
stc
jmp
mov
shr
and
mov
xlat
hlt
xlat
call
icebp
(bad)
pop
dec
jg
ja
xlat
outs
imul
stos
idiv
dec
cli
jmp
seto
pop
std
cmc
imul
dec
jg
aad
(bad)
loope
call
scas
jmp
(bad)
jg
jg
cli
xlat
scas
icebp
sub
loope
sar
sti
retf
lahf
xchg
mov
cld
push
movs
cld
jne
ror
movs
cld
mov
jmp
sar
dec
mov
xchg
jl
out
das
jmp
jg
not
scas
call
cli
test
std
push
mov
cmps
jg
std
cmc
xor
mov
psubb
scas
cmps
mov
outs
cli
jmp
popa
jg
cld
jne
jmp
cmp
cld
cmc
dec
jge
neg
mov
std
mov
mov
aas
inc
(bad)
cli
pop
ds
jg
arpl
xlat
mov
std
cmp
hlt
lock
jge
dec
jg
pop
jg
jl
outs
jle
rcr
rcr
jg
cmp
scas
icebp
pop
retf
pop
(bad)
shl
jg
inc
lahf
bound
jmp
(bad)
jmp
dec
scas
jmp
sar
(bad)
cli
(bad)
scas
(bad)
cli
sar
(bad)
cli
shl
scas
(bad)
out
sar
(bad)
sbb
repnz
(bad)
clc
jmp
call
pop
mov
jg
(bad)
out
add
cmp
fnstsw
inc
push
shr
mov
pop
jg
(bad)
xor
pop
jg
pop
cs
aas
clc
jno
jmp
clc
imul
repnz
cmc
psubsw
pop
fbld
pop
(bad)
push
cld
adc
cmc
sbb
or
out
inc
mov
in
pop
jecxz
jl
jns
(bad)
inc
jmp
jge
fwait
std
(bad)
leave
scas
icebp
scas
std
(bad)
rol
aas
clc
add
(bad)
cmp
loopne
mov
pop
jmp
adc
addr16
das
mov
dec
(bad)
cli
pop
pop
inc
cmps
jmp
std
jmp
jge
xchg
ja
sar
daa
xor
int
jg
std
cmc
out
mov
fnstsw
add
out
rcr
std
bnd
pop
dec
fmul
jmp
(bad)
stc
loopne
movs
out
fidivr
(bad)
cli
or
dec
(bad)
cli
lea
(bad)
sub
out
dec
sar
cdq
(bad)
cli
sti
dec
jmp
cmp
aas
call
xchg
mov
test
popf
push
jle
fbld
stc
xor
push
jp
pop
jmp
pop
loopne
call
jg
lahf
(bad)
cli
stos
(bad)
and
jmp
loopne
(bad)
cli
lahf
(bad)
arpl
jmp
setle
pop
(bad)
fidivr
adc
clc
ret
call
nop
mov
mov
cli
cmp
add
icebp
out
xchg
mov
mov
movs
out
fild
std
jae
xlat
aas
jae
dec
(bad)
mov
aas
jg
not
ja
(bad)
jnp
jmp
cmp
mov
test
ja
fcos
and
std
sbb
call
std
cmc
sbb
scas
repnz
mov
and
shr
jg
sahf
cli
xlat
jg
lock
xlat
dec
dec
mov
repnz
jae
sub
scas
jmp
sar
fwait
mov
fidivr
pop
in
scas
sar
xlat
and
mov
mov
scas
pop
ret
ja
xlat
lahf
icebp
lock
std
xlat
stc
xchg
repnz
fcomip
lock
das
out
ja
mov
call
fistp
sti
rcr
cmc
scas
jmp
and
cmp
push
(bad)
cli
ins
push
mov
cli
(bad)
mov
jmp
scas
and
imul
pop
pop
(bad)
jle
cmp
jmp
and
repnz
jmp
aas
nop
pop
(bad)
outs
cli
xlat
pop
(bad)
call
call
jp
sub
aas
popa
cwde
sti
cli
xlat
(bad)
cli
or
jg
xchg
scas
pop
jo
call
xchg
cli
jmp
sar
stc
(bad)
fsub
dec
shl
sahf
(bad)
cmc
xchg
pop
scas
jmp
cli
out
xor
fucomip
push
leave
pop
push
push
mov
adc
sar
in
(bad)
mov
sbb
je
jg
fdivrp
xlat
pop
movs
jg
int3
arpl
jg
(bad)
cmc
out
push
int3
mov
push
arpl
jmp
or
std
mov
(bad)
sbb
jmp
(bad)
cmp
repz
cli
fbstp
lahf
std
jb
and
push
cwde
sti
cli
xlat
sbb
out
(bad)
xlat
cld
xor
cmp
out
push
lods
fucomip
pop
jg
jmp
std
cmc
daa
jmp
cld
stos
hlt
scas
jg
mov
(bad)
out
xor
repz
mov
xchg
(bad)
cli
out
hlt
scas
fucomip
or
jg
mov
fisttp
cli
cmp
std
jmp
mov
stos
jg
(bad)
(bad)
xor
mov
sti
xor
aas
jmp
cli
xlat
aas
jo
jmp
ja
xchg
(bad)
cmc
scas
lock
xchg
(bad)
cmc
pop
jo
call
or
fwait
cld
push
shl
clc
aas
in
(bad)
jle
mov
popf
hlt
scas
dec
stc
scas
sbb
repnz
push
shl
aad
jmp
cli
and
hlt
(bad)
daa
jmp
icebp
iret
and
mov
imul
push
inc
std
cmc
iret
jmp
cmc
pop
jmp
stc
pop
rcr
fwait
(bad)
cmc
icebp
out
mov
cld
jne
jnp
xchg
sub
cmp
std
jmp
(bad)
cmp
jg
fnstcw
jg
cmc
mov
jg
(bad)
cmc
scas
call
cwde
jmp
mov
fucomip
sbb
std
dec
cli
xlat
push
(bad)
jmp
xor
icebp
pop
call
out
add
aaa
sti
mov
clc
mov
sub
xlat
fistp
pop
inc
cdq
(bad)
cmc
iret
push
mov
std
jmp
cmp
daa
scas
hlt
scas
pop
jecxz
jp
mov
(bad)
cli
mov
scas
cmps
dec
add
out
sar
pop
sar
jg
jg
inc
dec
xor
xchg
cmc
cmps
jno
fucomip
call
outs
dec
(bad)
cli
(bad)
lahf
inc
loop
dec
std
jmp
out
jle
std
jmp
cmp
cli
xlat
out
jo
retf
call
jp
repnz
jmp
repz
pop
mov
jg
daa
sbb
jg
jg
stc
cld
xlat
scas
icebp
imul
cld
xlat
aas
je
(bad)
jle
std
jmp
sub
std
jmp
sahf
sbb
out
dec
cmc
scas
mov
aad
mov
jmp
(bad)
cli
jecxz
scas
aas
(bad)
jmp
cmc
scas
aas
gs
hlt
scas
call
xlat
(bad)
popf
loop
dec
cli
popf
stc
scas
pop
jecxz
xchg
mov
mov
adc
(bad)
hlt
scas
repz
rcr
cmc
scas
pop
pushf
mov
cli
repz
scas
push
(bad)
cli
fwait
dec
inc
jmp
dec
(bad)
cli
(bad)
dec
mov
jmp
cmp
inc
(bad)
cli
mov
xchg
(bad)
cmc
cmp
add
addr16
sar
inc
call
xchg
mov
cld
out
cmps
jg
popf
cld
fiadd
pop
iret
cmc
scas
call
xlat
outs
icebp
cmp
push
scas
in
iret
sbb
popf
jge
xchg
pop
jg
(bad)
jne
stc
pop
dec
jg
jge
xlat
pop
ret
dec
cli
xlat
lahf
icebp
cmp
(bad)
cmc
div
pop
call
pop
mov
std
daa
lahf
sub
(bad)
cmc
imul
sar
adc
(bad)
mov
inc
(bad)
jp
ins
enter
pop
enter
xor
mov
int
or
jle
(bad)
dec
loop
(bad)
mov
(bad)
mov
jbe
pop
cld
cmc
pop
cld
call
rcr
pop
(bad)
gs
(bad)
(bad)
cmc
ja
sbb
cmc
scas
jg
(bad)
std
das
or
(bad)
sar
cmc
addr16
fdivrp
jmp
scas
aas
hlt
xlat
cmp
sti
pushf
fdivrp
(bad)
jle
stc
jmp
push
ja
cli
repnz
imul
lahf
sar
std
push
repnz
out
ret
jg
cli
xlat
out
retf
jg
imul
cld
(bad)
addr16
cmps
call
fucom
pop
ret
pop
(bad)
fsubr
mov
mov
mov
addr16
jo
pop
(bad)
sbb
int3
mov
jle
stc
out
scas
cmp
and
mov
outs
repz
mov
(bad)
mov
push
dec
cld
gs
xlat
jg
jg
jge
xlat
scas
repz
pop
aas
(bad)
popf
inc
scas
fcomip
cmp
mov
push
jnp
mov
jg
adc
popf
hlt
scas
mov
mov
xchg
sar
(bad)
(bad)
cmc
pop
jle
ss
jg
cli
mov
sar
(bad)
pop
cli
xlat
loope
add
jmp
fisttp
pop
test
jmp
sti
in
or
jmp
in
(bad)
sub
jmp
(bad)
mov
repnz
mov
jle
std
jmp
(bad)
mov
xlat
scas
stc
sbb
aas
aad
jle
out
repz
mov
xchg
cli
xlat
addr16
inc
mov
dec
(bad)
cli
mov
shr
sar
jmp
aas
movs
jg
jns
popa
sub
outs
loop
(bad)
cmp
jmp
jecxz
jle
fist
cli
mov
arpl
adc
sbb
inc
(bad)
cli
aas
stc
scas
out
pop
out
jmp
cmp
fwait
jle
sbb
pop
sar
out
jg
loope
(bad)
cmp
inc
mov
dec
(bad)
cli
mov
inc
mov
ja
xor
xchg
fisttp
mov
sar
(bad)
xlat
pop
repz
pop
inc
pop
sbb
dec
(bad)
cli
push
mov
std
jmp
loopne
(bad)
and
jmp
out
(bad)
ss
jmp
jns
idiv
sub
jmp
pop
mov
call
push
std
arpl
sub
dec
repnz
push
pop
push
mov
ins
repnz
jg
scas
icebp
popf
pop
pushf
(bad)
cld
popf
or
xlat
out
sub
scas
pop
sub
jg
sar
inc
cli
xlat
pop
int3
out
std
ja
xlat
(bad)
jg
outs
cli
xlat
aas
std
add
int
cmp
cmp
dec
js
dec
cmc
scas
dec
mov
jge
dec
(bad)
outs
cld
xlat
scas
cmps
stc
in
dec
mov
aas
dec
jmp
cdq
(bad)
cmc
inc
jl
fdivrp
es
jmp
loope
(bad)
mov
(bad)
or
mov
retf
cmc
scas
jg
(bad)
xor
mov
std
jmp
js
(bad)
push
pushf
cli
in
aam
jmp
pop
dec
fnstsw
movs
shl
pop
mov
fcomip
xlat
clc
repz
scas
mov
std
xchg
mov
pop
call
test
jg
jg
cdq
das
aas
(bad)
cmc
jle
pop
jecxz
sar
aaa
sar
jle
stc
jmp
loop
jle
std
jmp
jnp
(bad)
jle
std
jmp
mov
imul
mov
leave
outs
clc
imul
jle
lahf
clc
pop
jg
fist
arpl
cmps
cli
xlat
aas
icebp
imul
mov
inc
imul
fwait
jg
ffreep
(bad)
cmc
lahf
dec
daa
mov
xor
fild
mov
call
dec
pop
cmp
scas
aas
jmp
out
sti
in
jg
pop
jecxz
jp
std
pop
mov
fild
sub
cli
addr16
sti
jmp
jp
jg
mov
jle
arpl
cld
pop
cld
ficomp
scas
jle
cli
jmp
clc
dec
(bad)
cli
pop
pop
movs
hlt
xlat
pop
movs
jg
jp
lahf
dec
push
(bad)
jp
cli
xchg
(bad)
jp
jg
js
xchg
hlt
xlat
aas
cmps
jg
fisubr
lock
stc
imul
pop
xchg
cli
push
leave
jg
gs
pop
jno
jmp
icebp
aaa
jo
cld
cdq
scas
fcmovnu
sar
ja
mov
jmp
hlt
(bad)
cli
out
call
cmc
sbb
(bad)
(bad)
cmc
pop
mov
mov
cmp
mov
jp
jp
out
pop
outs
jle
stc
jmp
(bad)
cli
out
scas
aas
clc
xlat
clc
adc
cld
xor
cld
addr16
xlat
lahf
int
std
pop
cli
xlat
pop
retf
std
sub
jmp
out
(bad)
cmp
jmp
in
(bad)
xor
mov
scas
aas
hlt
xlat
clc
addr16
scas
cdq
(bad)
cmc
scas
repz
jg
(bad)
cmc
pop
repnz
call
pop
call
jmp
sbb
sbb
sbb
ror
xlat
sti
jmp
icebp
fucomi
pop
mov
outs
lock
sbb
std
jmp
stos
lahf
(bad)
ins
or
jmp
push
outs
imul
mov
stos
jmp
(bad)
jle
pop
jecxz
sar
addr16
cmc
xlat
jmp
jmp
scas
(bad)
jmp
sti
(bad)
hlt
scas
pop
sti
daa
jg
cmp
jl
(bad)
cli
ins
jle
mov
xor
mov
mov
ins
jmp
(bad)
cli
xlat
xchg
cld
xlat
dec
std
imul
jmp
jg
dec
dec
xlat
lahf
(bad)
xchg
imul
iret
sar
mov
(bad)
cmc
div
pop
jg
inc
cmp
or
stc
pop
shl
call
xchg
ins
or
(bad)
pop
cli
(bad)
retf
sbb
dec
mov
std
mov
cmc
in
stc
cmp
ja
mov
xchg
out
mov
mov
push
jl
arpl
jg
adc
imul
cmp
jmp
sti
cs
sar
cmps
hlt
xlat
pop
movs
jg
jnp
sti
fbld
add
jmp
stc
mov
jg
jbe
idiv
sub
(bad)
(bad)
data16
cld
cmc
push
mov
scas
in
std
fwait
std
xchg
(bad)
cld
xlat
dec
std
jmp
clc
mov
scas
stc
mov
(bad)
cmc
paddb
mov
std
sub
repnz
sar
js
jge
xlat
dec
sub
inc
out
scas
mov
sbb
jg
cmp
loopne
sub
mov
jg
jge
shl
jle
not
jg
cmp
mov
jg
jnp
std
jge
jecxz
jecxz
pop
jecxz
jecxz
mov
stc
xor
cmc
out
repz
(bad)
call
mov
ud0
xlat
fucomip
xchg
pop
jecxz
lahf
out
cld
cdq
aas
dec
pop
dec
mov
std
out
out
(bad)
jge
mov
repnz
mov
pop
not
mov
jg
or
cli
xlat
(bad)
cli
sti
cld
hlt
outs
sti
leave
scas
icebp
push
(bad)
cli
mov
jp
jg
fdivrp
xlat
out
hlt
push
dec
(bad)
jge
imul
dec
lahf
cld
sbb
(bad)
cmc
in
jle
cli
out
das
sar
mov
sti
(bad)
hlt
scas
stc
dec
popa
or
xchg
(bad)
cmc
mov
std
std
ja
xlat
lahf
rcr
sbb
cld
cmc
pop
repz
mov
jno
sub
mov
push
push
push
(bad)
cli
out
stc
scas
cdq
(bad)
cmc
imul
icebp
std
mov
cmc
pop
jle
jmp
dec
cld
push
cli
xlat
das
in
(bad)
xor
jmp
es
and
iret
xchg
mov
mov
cli
mov
scas
pop
hlt
sti
cld
xor
outs
cmc
addr16
pop
mov
jmp
in
out
std
xchg
xlat
lahf
cmps
jg
cli
fidivr
jg
arpl
xlat
out
sti
mov
ins
stc
jmp
jnp
out
out
hlt
leave
scas
icebp
addr16
es
xlat
jmp
sub
cmc
sbb
cmp
jmp
clc
xor
out
hlt
push
cli
out
ja
ret
mov
dec
(bad)
cli
mov
aaa
cmps
mov
cmc
xchg
jl
iret
and
inc
cdq
mov
call
pop
mov
std
inc
cld
push
stos
jg
xor
xlat
mov
cmc
scas
jge
iret
es
jg
(bad)
cmc
pop
jl
scas
mov
retf
jo
aas
(bad)
jg
test
mov
out
jmp
sar
jle
mov
aaa
sti
sub
scas
fucomip
test
jmp
idiv
out
or
arpl
jmp
out
sti
ja
ja
scas
(bad)
xchg
(bad)
mov
jne
sti
(bad)
jmp
fstp
mov
sar
jae
ja
pop
jg
push
iret
jmp
cmc
pop
jmp
sti
out
adc
mov
dec
jmp
stc
(bad)
jg
jg
jmp
aam
mov
cmc
jmp
inc
(bad)
cli
into
test
mov
cmp
stos
(bad)
ds
scas
icebp
imul
jg
push
(bad)
std
xlat
stc
fistp
addr16
mov
lea
and
xchg
out
scas
repz
mov
jnp
in
repz
mov
sub
jg
(bad)
std
mov
(bad)
(bad)
aas
xor
cld
(bad)
cmp
std
jne
addr16
xlat
cld
xor
jg
jbe
movsx
popf
jg
pop
and
jne
lea
inc
(bad)
(bad)
jp
(bad)
(bad)
out
jae
ss
inc
call
idiv
not
and
or
cld
pop
push
stos
pop
mov
sahf
std
sbb
sbb
jg
fcomip
xlat
mov
jbe
or
out
aas
jmp
icebp
out
aas
sar
ds
outs
(bad)
call
cld
out
das
loop
scas
mov
call
cld
out
outs
jmp
stc
mov
(bad)
ins
xchg
pop
repz
repnz
jle
jmp
repz
mov
mov
icebp
leave
lahf
dec
(bad)
dec
scas
jne
xlat
jl
cld
les
das
test
xlat
push
dec
stc
stos
jle
aas
stc
xlat
clc
xor
clc
imul
leave
jg
imul
mov
adc
cld
aas
test
xlat
dec
clc
xlat
cld
dec
jle
jmp
fcomip
cmp
push
cld
imul
mov
jg
xlat
stc
fwait
jg
fucomip
aaa
cld
inc
jle
mov
jle
fcomip
xlat
cld
mov
(bad)
std
xchg
aas
jmp
into
das
cli
xor
ja
jne
cld
call
cmp
fcomip
sti
mov
(bad)
repz
aas
imul
fstp
xlat
cld
pop
jg
ja
leave
outs
lock
xor
jg
std
jnp
(bad)
(bad)
fstp
std
mov
dec
cld
out
ret
pop
jecxz
aaa
std
scas
jg
aas
stc
xlat
cld
and
pop
imul
(bad)
scas
mov
(bad)
jp
push
(bad)
std
sbb
(bad)
jg
fisub
pop
mov
pushf
(bad)
jge
(bad)
(bad)
mov
sub
inc
idiv
(bad)
jp
std
scas
cmc
(bad)
data16
jmp
not
xor
(bad)
dec
(bad)
xchg
pop
sti
mov
mov
(bad)
(bad)
fldcw
pop
jmp
inc
scas
neg
xor
lahf
aas
stc
cld
aaa
push
xlat
cli
dec
(bad)
jge
call
icebp
daa
jg
(bad)
sti
sar
jecxz
clc
int
stos
pop
jg
imul
mov
(bad)
fnstsw
jg
xor
aaa
inc
in
out
stc
push
push
adc
out
das
std
sti
aaa
(bad)
out
pop
call
scas
stc
pop
std
cmps
dec
jg
xchg
fstp
clc
jne
xor
sbb
push
mov
mov
hlt
sbb
js
pop
cmp
mov
pop
jmp
fild
jecxz
fwait
aas
mov
cld
jno
out
in
jg
mov
sar
jg
inc
sti
shr
iret
jecxz
test
outs
xchg
shr
push
stc
fistp
imul
aam
iret
cld
sub
outs
clc
sub
(bad)
cmps
dec
(bad)
stos
fnstsw
loope
icebp
fwait
call
pop
call
(bad)
cld
xlat
cli
repz
addr16
std
xchg
mov
jle
pop
jmp
cli
sub
cmp
sbb
fadd
pop
jecxz
outs
inc
cmp
imul
outs
cmc
jg
jp
xchg
(bad)
(bad)
(bad)
in
jecxz
(bad)
lods
(bad)
rcr
imul
jmp
leave
icebp
scas
mov
in
das
(bad)
mov
(bad)
fistp
mov
jmp
idiv
cli
leave
(bad)
sbb
icebp
scas
stc
ja
(bad)
(bad)
mov
cdq
loope
cld
xor
pop
(bad)
mov
div
cld
ss
std
sti
aad
jae
arpl
sbb
pop
std
imul
mov
jg
xor
(bad)
fdivr
cld
imul
mov
cld
jns
imul
mov
loop
cmps
cld
sti
icebp
scas
stc
in
mov
inc
jle
aaa
cld
or
stc
cdq
pop
sti
jge
idiv
jg
aas
hlt
(bad)
(bad)
jmp
aad
lock
pop
call
outs
sti
inc
(bad)
fdivr
dec
lahf
cld
mov
out
rcr
out
iret
sti
mov
sti
xor
stc
mov
in
xlat
clc
jecxz
mov
std
call
fdivr
mov
(bad)
adc
arpl
jg
inc
clc
mov
hlt
pop
cld
pop
aas
idiv
cld
pop
(bad)
jle
jg
(bad)
jle
pop
jmp
mov
pop
jmp
jle
jmp
cli
xlat
cli
adc
pop
mov
std
ins
hlt
out
ret
pop
xchg
(bad)
std
xor
pop
mov
ret
mov
scas
icebp
cld
ja
movd
ja
xor
cmp
sti
pop
add
(bad)
aaa
cli
add
sti
pop
jg
mov
cwde
inc
out
lock
xlat
cli
int
lods
pop
jecxz
jl
imul
mov
inc
scas
test
pop
daa
stc
xchg
jg
jmp
call
out
std
scas
jg
xchg
neg
pop
cli
add
call
lds
clc
movlps
shr
mov
arpl
xor
imul
xchg
jg
xlat
clc
imul
aaa
cld
mov
lea
jg
jg
inc
mov
pop
cmps
mov
sar
xlat
clc
mov
lea
std
inc
jle
jg
xlat
clc
addr16
shr
call
dec
jge
jmp
movs
pop
mov
in
icebp
jnp
xchg
xchg
jg
das
jg
mov
icebp
scas
std
ja
scas
das
test
mov
mov
cld
xor
div
or
cli
call
(bad)
fidivr
inc
rcr
lock
xlat
(bad)
ja
jp
sbb
(bad)
and
leave
mov
imul
mov
jg
rcr
dec
call
push
fbstp
sti
mov
(bad)
(bad)
scas
movs
fistp
ja
jnp
fistp
mov
out
repz
fdivrp
mov
enter
clc
cmc
out
cld
fidivr
std
sti
mov
hlt
repnz
jmp
lods
(bad)
rcr
lock
out
jg
scas
std
fwait
inc
call
(bad)
cmp
sti
push
mov
in
sti
mov
cmp
mov
neg
or
jg
xlat
clc
push
jle
push
std
sti
aas
inc
icebp
outs
hlt
push
(bad)
fidivr
(bad)
imul
idiv
idiv
clc
adc
std
xchg
mov
mov
repz
lahf
(bad)
push
pop
ins
xor
push
in
jnp
lahf
cld
sub
call
mov
fnstsw
jg
std
sti
sbb
das
movs
iret
mov
inc
and
mov
mov
jg
mov
mov
call
out
cld
(bad)
fild
cld
es
sub
daa
cwde
xchg
repnz
addr16
daa
(bad)
(bad)
jmp
(bad)
jle
(bad)
xlat
cli
jecxz
pop
inc
mov
ins
call
outs
cld
pop
(bad)
(bad)
div
pop
inc
fmul
cmp
int
pop
clc
mov
stc
xlat
(bad)
jae
les
into
pop
icebp
sbb
(bad)
movs
jne
out
ss
mov
xchg
loopne
sti
push
mov
psubd
outs
call
out
(bad)
mov
mov
and
aas
(bad)
aaa
fdivrp
mov
neg
jmp
xlat
(bad)
xor
xchg
(bad)
aas
push
sti
bnd
idiv
hlt
out
stc
out
outs
stc
imul
mov
std
(bad)
hlt
stc
fbstp
ja
popf
jg
imul
cld
lea
(bad)
cmp
cmp
fsin
push
jmp
sar
out
ret
jmp
out
dec
repz
xlat
stc
adc
mov
xlat
add
(bad)
xlat
add
cwde
mov
jg
(bad)
(bad)
sub
mov
cld
jnp
(bad)
stc
mov
mov
in
(bad)
pop
jmp
out
cld
pop
mov
mov
inc
or
(bad)
es
dec
mov
(bad)
jne
(bad)
outs
stc
jmp
ins
push
(bad)
jg
pop
dec
aam
div
jg
ror
scas
push
jmp
cli
(bad)
jg
jo
jg
inc
pop
std
imul
pop
repz
add
cmp
fcomip
xlat
add
aad
repz
cld
fsubr
repz
repz
fist
(bad)
rcr
push
mov
jmp
cld
mov
mov
daa
jg
xchg
out
outs
jnp
jmp
(bad)
(bad)
scas
jg
xlat
std
shl
popf
pop
repz
cmp
(bad)
mov
dec
test
scas
cmp
cld
mov
outs
jnp
jmp
sti
icebp
lahf
inc
call
sti
dec
jp
iret
call
aas
imul
cld
ja
call
(bad)
(bad)
(bad)
mov
retf
iret
(bad)
loop
neg
(bad)
xor
jle
jg
xlat
cld
loop
aas
icebp
xlat
int
fnstsw
in
mov
inc
mov
push
jb
aaa
(bad)
mov
mov
idiv
mov
xor
sar
(bad)
retf
mov
aas
std
fist
mov
xchg
addr16
cld
mov
std
imul
jmp
std
(bad)
cmp
sahf
(bad)
cmp
outs
jle
pop
hlt
jmp
shr
in
std
jmp
stc
mov
mov
dec
(bad)
sahf
mov
jle
call
call
std
fsubr
jle
jg
xlat
clc
jecxz
mov
mov
mov
xchg
mov
out
ds
inc
push
adc
and
cld
mov
(bad)
(bad)
in
fimul
lock
xchg
out
cli
scas
jg
mov
dec
(bad)
stc
pop
jecxz
(bad)
xor
mov
pushf
cmp
out
add
mov
fwait
ds
aas
lahf
add
jmp
xchg
jg
xlat
clc
adc
mov
inc
cmps
(bad)
jmp
icebp
in
idiv
in
jle
xlat
cmp
pop
shr
pop
(bad)
xor
outs
mul
call
scas
sti
aaa
(bad)
mov
fs
jg
fld
cli
idiv
call
stc
test
out
out
cli
jmp
jg
sbb
loope
stc
std
iret
jmp
inc
mov
les
in
out
cld
mov
or
aaa
(bad)
mov
mov
xlat
iret
leave
inc
cld
mov
aad
clc
scas
cmps
mov
dec
jmp
cmc
fcmovnu
stc
mov
sar
mov
pop
nop
(bad)
call
cmp
aad
mov
push
(bad)
stc
xor
clc
mov
adc
test
neg
cmp
push
std
sti
sub
(bad)
out
cmp
stc
xor
daa
mov
push
scas
mov
imul
mov
(bad)
cmp
icebp
ja
(bad)
push
jg
fldcw
std
retf
(bad)
jne
(bad)
pop
hlt
sti
scas
xor
mov
(bad)
jne
lods
fucomip
aaa
(bad)
in
(bad)
in
pop
jecxz
movs
dec
(bad)
imul
call
mov
iret
icebp
stc
pop
inc
out
dec
ins
mov
pop
mov
(bad)
(bad)
xlat
mov
jg
(bad)
retf
out
std
idiv
mov
das
fs
jg
outs
(bad)
mov
call
cli
idiv
in
cld
(bad)
ds
das
cli
in
jg
pop
jmp
jge
dec
push
push
jg
outs
ja
xlat
arpl
jg
(bad)
jp
and
sti
pop
mov
aas
stc
xlat
cld
inc
pop
std
xor
mov
rep
jg
xlat
sbb
popf
pop
jmp
jns
(bad)
push
clc
div
jg
(bad)
xlat
cmp
dec
sahf
repz
icebp
cmp
scas
mov
mov
sbb
(bad)
imul
(bad)
stos
pop
sti
call
jecxz
sahf
call
bswap
jb
in
push
cld
jp
outs
dec
(bad)
cli
xlat
stc
sbb
repnz
pop
(bad)
cmp
dec
(bad)
fstp
std
xchg
(bad)
cld
jmp
jmp
cld
or
pop
jle
retf
call
xlat
sti
mov
ja
mov
sti
das
(bad)
out
out
cld
cmp
leave
mov
(bad)
jg
mov
jle
out
(bad)
out
xor
pushf
fcomip
cli
xlat
jnp
mov
aas
loopne
std
(bad)
jg
jecxz
sti
jg
test
iret
out
jg
(bad)
sti
push
repz
mov
mov
(bad)
std
in
ja
xchg
stc
idiv
(bad)
std
or
dec
jle
jb
inc
cli
not
stc
mov
push
cli
div
clc
mov
sub
div
std
mov
lahf
fucomip
aaa
mov
mov
out
cmc
imul
mov
loope
psubw
xlat
cld
out
pop
(bad)
ja
(bad)
jle
xlat
clc
push
call
out
dec
lods
(bad)
movs
lds
cli
div
and
jle
imul
xchg
(bad)
std
test
aad
jl
jmp
mov
sbb
(bad)
gs
clc
outs
lock
mov
(bad)
(bad)
cmp
xchg
mov
call
sub
sbb
(bad)
(bad)
sahf
pop
std
push
stc
jnp
std
xchg
xor
aaa
std
sbb
out
pop
stc
pop
jle
das
clc
cmp
pop
jecxz
jecxz
xchg
(bad)
std
cmp
psrad
fucomip
pop
jecxz
mov
hlt
cmp
movs
lahf
mov
lahf
in
scas
stc
xchg
push
(bad)
scas
icebp
pop
sar
push
mov
mov
in
xlat
inc
mov
jg
std
cld
xor
sti
mov
(bad)
sbb
or
inc
aas
jg
pop
out
xlat
clc
xor
add
std
cld
int
out
hlt
xchg
mov
in
call
mov
jg
jle
pop
hlt
mov
lahf
iret
jmp
fidivr
aas
jg
cli
cmp
hlt
repz
movs
lahf
out
(bad)
jg
imul
mov
ds
xor
stc
xor
(bad)
xor
pop
mov
std
test
imul
mov
std
out
mov
idiv
mov
leave
scas
std
out
fidivr
scas
std
das
(bad)
(bad)
in
std
jg
fidivr
scas
repz
pop
out
push
cld
pop
out
sti
jne
fstp
stc
jne
mov
cli
jmp
jne
out
mov
mov
std
(bad)
mov
jmp
(bad)
cli
aaa
clc
imul
stc
aaa
clc
jnp
jg
aaa
pushf
std
inc
mov
outs
cld
loopne
into
jg
repnz
(bad)
xor
mov
jg
(bad)
jmp
icebp
aaa
pop
(bad)
es
outs
repnz
cld
es
outs
repnz
rol
outs
cli
inc
jmp
pop
(bad)
cmps
mov
(bad)
(bad)
data16
outs
div
outs
imul
std
mov
jle
aaa
(bad)
mov
cld
pop
jmp
jg
outs
(bad)
pop
(bad)
out
jmp
retf
jle
jnp
(bad)
mov
cld
mov
or
mov
jle
pop
neg
mov
(bad)
and
pop
(bad)
sbb
jle
pop
mov
stos
(bad)
mov
into
outs
std
fstp
cli
(bad)
cmps
cld
(bad)
jg
outs
std
pop
cld
(bad)
aas
neg
cld
mov
cld
ins
dec
jg
aaa
mov
cld
cmp
cld
mov
(bad)
dec
mov
cld
arpl
std
xchg
mov
(bad)
in
idiv
loop
inc
cmp
push
(bad)
sbb
hlt
cmp
cmp
cmp
fwait
mov
scas
jle
mov
jle
jg
ja
xlat
jle
push
ja
aad
jecxz
sti
cmp
sti
popf
stos
fucomip
dec
(bad)
popf
(bad)
loop
jmp
std
sbb
jle
stos
pop
repz
push
std
sbb
stc
mov
icebp
scas
jns
jl
xchg
mov
cmps
jg
hlt
stc
loope
jno
imul
hlt
out
cld
xlat
cli
arpl
(bad)
scas
cmc
cmps
(bad)
call
cmp
xor
clc
xlat
clc
cmp
xchg
mov
xor
cwde
(bad)
aad
pop
cli
neg
clc
mov
loope
repz
retf
(bad)
in
(bad)
and
(bad)
in
xlat
(bad)
push
jg
(bad)
xlat
js
imul
hlt
out
dec
cli
cld
idiv
xor
(bad)
scas
icebp
xchg
dec
pop
sti
(bad)
movs
test
das
clc
cmc
(bad)
(bad)
pop
jecxz
pop
jecxz
sti
cmc
out
(bad)
(bad)
(bad)
mov
jmp
rcr
hlt
imul
aas
stc
imul
mov
std
mov
jmp
jns
ficomp
jmp
mov
(bad)
(bad)
jmp
add
cld
outs
mov
clc
sbb
xor
or
(bad)
jg
(bad)
mov
sbb
dec
(bad)
xor
xlat
cld
arpl
jmp
sbb
xlat
cld
movq
push
jg
xchg
sbb
xlat
cld
lea
(bad)
add
out
out
add
cs
cld
arpl
mov
imul
mov
(bad)
cmp
clc
jmp
stos
cld
repz
std
cmc
jmp
xlat
mov
std
call
iret
pop
jecxz
cld
sub
jg
xor
std
call
(bad)
scas
push
jg
aaa
clc
stc
aaa
(bad)
cli
jnp
dec
int3
dec
xchg
lock
mov
(bad)
cmp
call
popf
pop
xchg
fimul
popf
pop
jecxz
cli
xor
push
dec
ret
cmps
cld
cmp
mov
stc
xor
jmp
xchg
jno
addr16
cmp
imul
jae
(bad)
mov
mov
jmp
sbb
mov
cmps
jg
jecxz
repz
cmps
jg
xchg
pop
repz
cmps
jg
rcr
mov
pop
adc
xchg
rol
div
imul
add
mov
jmp
clc
or
mov
cmp
mov
lea
idiv
addr16
fstp
ror
loope
mov
(bad)
out
xlat
idiv
pop
jecxz
sti
std
in
fucomip
test
cmp
mov
inc
(bad)
jmp
hlt
out
out
clc
imul
mov
call
aas
jg
cli
jg
(bad)
(bad)
call
pop
cld
scas
movs
sub
pop
jecxz
pop
jecxz
(bad)
sbb
(bad)
cmp
dec
lea
sbb
cli
aas
imul
mov
(bad)
mov
hlt
push
movs
jns
repnz
clc
jmp
ror
fild
(bad)
out
sar
jg
cli
(bad)
out
jmp
jle
(bad)
pop
inc
call
call
(bad)
cmp
pop
iret
out
clc
imul
or
pop
std
pop
mov
sbb
repz
xlat
clc
mov
cs
mov
ss
iret
mov
jmp
out
jge
imul
das
adc
jge
out
jg
lock
(bad)
sub
call
or
adc
pop
mov
leave
aas
jg
loope
dec
jg
out
call
sub
stc
pop
std
cmp
mul
out
test
std
cld
lods
jle
sar
in
jle
(bad)
ins
hlt
out
jg
jmp
call
(bad)
dec
xchg
mov
jle
pop
lock
(bad)
out
sti
imul
scas
icebp
inc
call
jle
jg
xlat
pushf
call
mov
aas
das
dec
inc
jge
xlat
clc
out
scas
cmc
sar
imul
hlt
scas
cmc
in
pop
jecxz
std
pop
in
scas
icebp
mov
push
jg
stc
fdivrp
ret
mov
outs
(bad)
imul
cli
jge
rcr
jecxz
cli
ja
(bad)
jmp
call
lock
std
jmp
mov
or
mov
mov
out
xlat
cmp
sub
jg
push
mov
dec
aas
retf
pop
jecxz
clc
lods
jg
pop
jecxz
daa
ds
hlt
iret
daa
pop
std
xrelease
(bad)
retf
in
inc
jg
dec
hlt
lahf
dec
pop
sti
cmp
xlat
(bad)
les
out
dec
xor
iret
xchg
adc
jg
loop
fistp
cs
popf
mov
fild
pop
jecxz
and
cli
in
jmp
enter
sar
out
dec
cld
repz
adc
into
les
jg
icebp
clc
mov
adc
out
dec
(bad)
das
movs
ja
cmps
out
mov
lea
daa
push
aas
and
popf
mov
jmp
mov
jle
xchg
push
sub
lods
sub
int3
fdivp
outs
int
fcmovnbe
lds
mov
int
jecxz
jmp
pop
sub
mov
iret
jmp
jns
pop
dec
repz
pop
xor
stos
cs
scas
xor
cld
fs
int3
hlt
popf
pop
jecxz
(bad)
(bad)
xor
addr16
pop
inc
and
add
xor
retf
jbe
sbb
dec
mov
or
dec
out
inc
dec
hlt
jno
iret
retf
jl
cld
jle
xlat
hlt
aad
ret
xchg
xor
out
cwde
scas
(bad)
fldcw
fs
(bad)
push
mov
xor
lods
cmps
ins
in
(bad)
aad
pop
pop
int3
and
int
imul
inc
rcl
dec
mov
sbb
mov
dec
mov
pop
js
cmp
xchg
out
lds
xchg
(bad)
stc
mov
add
jle
stc
mov
(bad)
retf
mov
popf
dec
mov
imul
std
imul
xor
dec
mov
push
aad
out
cwde
push
pop
addr16
pop
sub
ss
add
outs
(bad)
imul
push
scas
repz
xlat
stos
pushf
in
mov
fyl2xp1
lods
mov
jg
loop
fild
scas
std
inc
(bad)
nop
pop
jecxz
stc
inc
dec
pop
(bad)
xchg
aas
in
xlat
clc
inc
dec
and
jg
(bad)
(bad)
xor
xlat
clc
inc
(bad)
fcomp
pop
stc
jecxz
lea
(bad)
push
xlat
clc
inc
inc
pop
jecxz
stc
xchg
jle
jg
dec
(bad)
xor
xlat
clc
inc
(bad)
aam
jecxz
stc
sar
jg
dec
push
xlat
clc
inc
dec
pop
jecxz
jl
aad
les
jns
xor
ds
repnz
clc
inc
(bad)
lods
pop
jecxz
stc
mov
lea
iret
stc
xor
xlat
clc
inc
(bad)
mov
repz
jg
das
clc
xor
scas
inc
push
cli
scas
icebp
pop
(bad)
pop
mov
std
sbb
sub
(bad)
xlat
cli
xor
jnp
pop
xor
(bad)
out
clc
imul
pop
lods
retf
xchg
enter
cmp
inc
hlt
(bad)
popf
jg
pop
jecxz
cld
pop
mov
std
sbb
scas
cmc
imul
jg
std
dec
cmps
push
xchg
imul
js
jge
shl
stc
fisttp
(bad)
cmp
int
sbb
dec
(bad)
jmp
scas
cmc
imul
jns
xor
outs
mov
push
push
int
pop
push
das
sbb
repz
inc
fs
mov
push
shl
test
cmps
push
ret
push
les
pop
sti
xlat
clc
push
push
fldlg2
push
mov
jne
cwde
cmp
xor
fld
cmp
or
adc
sub
inc
sbb
fdiv
xchg
xor
jg
pop
sti
xlat
clc
jne
in
pop
jecxz
sti
mov
lea
xlat
(bad)
xor
fdivr
mov
popf
and
imul
mov
(bad)
xor
(bad)
clc
and
pop
jecxz
jne
xlat
stc
in
mov
mov
sub
leave
shr
inc
aad
sub
popa
js
pop
lahf
cmp
js
mov
mov
leave
mov
fdivr
jo
mov
repnz
fidivr
cmp
lock
jle
cld
lds
mov
cld
mov
jmp
xlat
enter
cmps
aas
jg
cdq
push
dec
jle
stos
out
mov
cmc
imul
out
out
aam
sti
loopne
mov
loopne
(bad)
cld
js
jnp
sti
daa
mov
pop
into
push
aas
jge
scas
cli
xor
sti
cli
mov
mov
ja
jl
(bad)
xor
outs
mov
cmp
mov
mov
xchg
jg
stc
in
mov
xchg
mov
neg
icebp
lock
fdivr
xor
repz
jo
stc
ret
cli
loopne
in
jmp
mov
xlat
or
dec
popf
shl
xchg
fcmovnbe
std
xchg
mov
stos
xlat
mov
mov
lahf
jp
lock
repz
fld
cmps
fistp
ds
jmp
jl
push
lahf
xchg
aas
jno
aad
pop
popf
mov
cli
xor
push
fistp
(bad)
jge
jg
das
call
in
mov
stc
fxch
mov
cld
mov
(bad)
jl
dec
jg
cld
(bad)
cmp
sbb
(bad)
and
jmp
(bad)
imul
jmp
cs
xchg
aas
mov
stos
sahf
fcomp
ds
les
clc
leave
xlat
(bad)
mov
cmp
jns
inc
loopne
lahf
jbe
jg
cmp
out
leave
fwait
popf
jecxz
jp
jae
shr
xchg
pop
pushf
sub
push
arpl
mov
std
daa
sti
lahf
jle
outs
mul
imul
mov
iret
push
pop
out
in
(bad)
(bad)
hlt
fxch
sar
emms
pcmpeqd
out
call
std
pop
jecxz
jmp
addr16
mov
cld
and
mov
outs
clc
repnz
dec
outs
push
ins
cli
repnz
cmp
jne
scas
mov
imul
xor
scas
das
fidivr
adc
jle
pop
popf
mov
pop
addr16
jl
fstp
mov
mov
sbb
lods
enter
mov
lods
int3
int
(bad)
retf
adc
pop
push
pop
dec
sbb
cld
fstp
(bad)
ja
mov
iret
into
mov
jnp
xlat
cmp
into
leave
xchg
pop
cmps
scas
jg
pop
cmc
in
retf
(bad)
daa
(bad)
ds
test
(bad)
out
ds
mov
in
xchg
std
mov
int
cli
jl
imul
cmp
sti
jbe
mov
into
lahf
out
cs
dec
jle
fucomip
retf
repz
in
sbb
hlt
out
cmc
stc
lds
mov
dec
std
sbb
pop
mov
out
out
leave
inc
mov
inc
dec
mov
sti
cmps
aad
sub
and
inc
mov
les
and
mov
mov
lds
pop
xchg
xchg
pop
mov
call
rol
xchg
fnstenv
dec
dec
stos
push
sub
pop
dec
mov
pop
lds
lahf
outs
out
pop
jle
imul
stc
mov
jb
js
sub
cmc
out
jge
imul
ds
into
inc
(bad)
jmp
jg
popf
in
mov
call
scas
es
outs
das
mov
(bad)
inc
mov
lods
das
jmp
fsubrp
(bad)
in
jmp
call
fistp
addr16
gs
mov
and
xchg
mov
sti
sahf
hlt
push
sub
stos
cmc
sahf
push
fld
mov
mov
xchg
imul
stos
pop
mov
aam
jmp
call
sub
sti
les
jg
das
repz
loopne
push
xchg
xchg
ins
push
lods
jmp
inc
int3
cs
dec
outs
jle
in
rcl
mov
jle
in
out
repz
fdivr
std
hlt
repz
in
cld
jmp
dec
das
lahf
adc
std
in
icebp
sar
jns
repnz
cld
mov
pmaxub
fisubr
mov
(bad)
fwait
sti
aas
mov
jmp
fcmovne
dec
xlat
mov
std
loopne
pop
and
retf
aas
icebp
out
cmc
hlt
cmc
mov
popf
addr16
imul
loope
jmp
idiv
jge
in
idiv
into
pop
dec
das
jle
sbb
pop
inc
mov
out
sti
xor
xor
and
mov
mov
pop
call
pop
stos
add
fs
xchg
xor
add
pop
mov
push
jmp
icebp
pop
loop
mov
out
retf
push
push
repz
cmovle
out
jg
cli
into
scas
icebp
xchg
(bad)
out
out
jae
mov
xchg
(bad)
pop
lods
fistp
outs
(bad)
pmaxub
jp
ds
sahf
call
addr16
sti
loop
lahf
jle
mov
mov
aas
pop
add
dec
ins
sbb
and
icebp
pushf
or
iret
sbb
push
and
push
cs
jae
mul
movs
cmc
scas
xchg
int
mov
dec
in
call
pop
pop
add
sar
push
jbe
fmulp
dec
ins
js
dec
loope
xchg
jmp
push
(bad)
sti
mov
xlat
js
mov
pop
push
shr
xchg
cld
or
js
jnp
pop
aaa
fs
loopne
(bad)
cld
fisttp
pop
inc
jmp
int
iret
out
addr16
(bad)
retf
lods
outs
out
idiv
aad
ja
mov
int3
idiv
daa
pop
dec
pop
iret
add
pop
pop
jl
int
leave
retf
das
jle
loopne
fldcw
cld
xlat
test
mov
loope
dec
push
jl
call
jns
aas
stc
mov
jg
jbe
xor
out
(bad)
cmc
jmp
idiv
jnp
std
xor
jg
jecxz
jmp
push
imul
dec
jle
mov
(bad)
mov
clc
stc
fnstenv
jle
das
scas
jbe
xchg
outs
aas
std
xor
cmp
mov
(bad)
out
pop
mov
aas
sti
xor
mov
mov
mov
(bad)
in
bound
mov
xor
mov
mov
iret
repnz
ds
call
dec
idiv
outs
pop
pop
pushf
jl
cmc
mov
jge
not
test
lahf
mov
pop
jl
imul
aad
scas
into
mov
cmps
aas
stc
imul
(bad)
mov
jle
je
jl
adc
std
repnz
clc
leave
scas
mov
not
dec
push
mov
cli
cmps
pop
aas
movs
cmp
ret
jecxz
mov
dec
fdivrp
fsubp
retf
sbb
cdq
cmp
mov
jns
in
mov
lds
cld
or
scas
icebp
hlt
neg
std
in
repz
in
jg
scas
mov
(bad)
repz
cmc
jmp
leave
iret
daa
in
out
jne
(bad)
jmp
(bad)
hlt
fucomp
mov
pop
cmp
repnz
outs
fwait
loop
js
jbe
ds
repnz
movsx
in
fstp
hlt
xlat
cwde
(bad)
pop
iret
fistp
cmp
idiv
repz
std
fbld
jnp
out
shl
pop
mov
fnsave
cmc
shr
mov
scas
jno
mov
mul
jg
out
mov
mov
jge
push
aas
std
in
pop
neg
jp
lock
std
pop
jecxz
and
idiv
(bad)
mov
imul
cli
lds
mov
(bad)
int
mov
shl
dec
pop
dec
(bad)
pop
jge
daa
scas
jle
pop
iret
repz
mov
(bad)
in
jmp
xchg
aas
std
in
cli
clc
vpand
addr16
call
xlat
rcl
pop
sub
mov
out
daa
lahf
mov
in
jno
stc
into
fld
popf
fld
repz
push
das
mov
push
rcl
jle
jge
cmps
pop
mov
cmps
aas
inc
push
xlat
hlt
xlat
cmp
out
cmp
aas
stc
in
jmp
pop
mov
pushf
(bad)
sbb
dec
jg
stos
jmp
outs
out
idiv
leave
pop
hlt
(bad)
push
fs
mov
mov
daa
(bad)
mov
ds
dec
mov
xor
pop
jge
neg
out
push
mov
xor
jl
cmc
in
scas
into
jle
push
jg
daa
idiv
stos
in
jae
stos
mov
retf
ja
dec
lahf
mov
xlat
js
loop
and
(bad)
in
movsx
out
cmp
hlt
scas
icebp
(bad)
cld
test
idiv
sub
push
mov
xchg
ja
mov
stc
mov
sti
(bad)
in
rcl
out
dec
dec
mov
ds
pop
call
push
in
cmp
std
in
aad
stos
js
lock
sbb
clc
(bad)
dec
jle
jb
out
fcmovne
stos
cli
pop
mov
mov
fnstsw
in
(bad)
idiv
inc
scas
pop
aas
test
(bad)
adc
and
cmps
mov
test
in
fsub
jg
loope
ja
data16
stc
popf
out
jl
mov
fwait
addr16
mov
daa
xchg
in
mov
jmp
pop
jnp
pop
mov
(bad)
xlat
js
jg
jl
rcr
(bad)
cld
dec
jae
out
mov
in
stc
xor
aas
icebp
jnp
lods
das
pop
jle
(bad)
cmp
addr16
pop
mov
addr16
out
jmp
lahf
fistp
fistp
cmp
mov
cli
mov
xor
mov
push
daa
jle
(bad)
pop
jmp
loope
cmp
pop
rcr
(bad)
cmc
jmp
outs
aas
mov
cld
mov
std
sti
cmp
imul
pop
and
sub
jmp
daa
es
inc
aas
jno
jns
jnp
jmp
sti
in
aad
push
sti
(bad)
outs
das
out
call
aas
jns
jg
jl
in
pop
in
sbb
xchg
stos
in
test
xchg
popf
imul
(bad)
jmp
cli
cmc
out
das
mov
aad
mov
ja
int3
jg
pop
sar
jg
jg
repz
jl
hlt
int
jnp
jmp
aas
stc
cli
retf
push
cmc
in
outs
push
outs
fistp
dec
mov
jl
xchg
repz
mov
mov
std
in
icebp
stc
call
pop
jge
pop
in
std
sbb
leave
in
daa
fstp
popa
or
fdiv
inc
sar
std
mov
or
jb
or
dec
dec
lock
jl
ins
pop
xchg
lods
movs
dec
add
xor
mov
and
mov
outs
stc
mov
int
cmp
call
das
stos
xor
arpl
in
bound
fwait
arpl
pop
out
xlat
xchg
mov
jmp
cli
mov
inc
(bad)
jmp
ss
stos
ins
mov
add
lds
icebp
fwait
(bad)
pop
lock
push
icebp
imul
jp
sbb
fistp
jbe
add
call
cmp
pop
shr
xlat
enter
sar
test
dec
icebp
push
dec
ret
scas
add
mov
int3
out
mov
data16
xchg
ds
xor
xlat
clc
int
sub
cmp
xchg
push
xchg
(bad)
nop
hlt
shr
fmul
fmul
push
mov
sahf
push
pop
xor
imul
pop
(bad)
xlat
iret
sahf
cld
pop
int
xchg
jg
(bad)
clc
out
out
repnz
cs
pop
aas
jns
stc
mov
jo
sub
push
call
aas
std
sti
sub
ds
jge
out
sahf
jl
mov
sbb
pop
jge
jns
jp
(bad)
adc
jle
(bad)
std
xor
mov
daa
sbb
mov
xor
out
dec
imul
sti
into
out
jne
xor
cmc
imul
out
jl
cwde
in
jle
fidivr
loopne
and
es
cld
stc
cmp
scas
mov
scas
iret
repnz
cmc
out
daa
mov
lds
in
or
lea
aas
jns
idiv
hlt
cld
daa
fistp
neg
das
and
adc
cwde
enter
push
jno
sar
out
repz
retf
lahf
cmp
loop
daa
push
lahf
jle
(bad)
push
sbb
xchg
adc
stc
xchg
xlat
xchg
out
mov
int3
mov
ficomp
jg
cmc
xchg
outs
scas
pop
mov
daa
aas
stc
jnp
pop
cmc
hlt
ins
repz
(bad)
in
icebp
sar
fnstsw
adc
pop
pop
cmp
pop
mov
fdivrp
leave
fninit
pop
jecxz
xchg
data16
lock
cmc
cli
jmp
jmp
out
loope
(bad)
stc
dec
mov
cmc
fwait
lahf
mov
sub
into
xchg
xor
out
repnz
push
jne
pusha
mov
jmp
retf
lahf
(bad)
jge
std
aam
aaa
jmp
jecxz
aad
fwait
ja
jge
ins
idiv
frstor
(bad)
out
mov
stos
cmps
(bad)
cli
cld
loop
into
dec
lahf
out
out
mov
sahf
(bad)
fsubp
arpl
and
rol
outs
scas
mov
jl
aad
aad
xor
pop
jmp
mov
std
xchg
mov
pop
ds
jge
fstp
ins
jle
cmc
lock
jmp
rcr
mov
xchg
cmp
jle
imul
jge
(bad)
ds
jmp
mul
stos
retf
rcl
not
cmps
pop
mov
push
xlat
fwait
jmp
fucomi
loop
neg
pop
in
fidivr
imul
dec
(bad)
fstp
pop
hlt
ffree
dec
sub
inc
jl
popf
fistp
fsubr
sbb
pop
rep
imul
mov
retf
xlat
movs
mov
retf
inc
sti
jnp
lahf
call
repz
push
pushf
(bad)
pop
out
lahf
xlat
dec
push
mov
fistp
imul
inc
scas
mov
adc
mov
das
scas
fdivr
add
icebp
cmps
stc
jge
daa
out
jg
cmc
repnz
cmps
aas
pop
jg
jg
mov
mov
dec
pop
sub
jns
cld
in
out
scas
popa
(bad)
into
xchg
mov
xchg
cmc
stc
ret
xlat
fistp
sub
neg
xchg
(bad)
out
retf
repz
adc
outs
pop
scas
mov
cmps
das
ds
out
cmps
pop
jmp
jecxz
mov
adc
jnp
mov
jmp
mov
jp
out
sub
test
or
mov
daa
xrelease
lahf
mov
sti
xor
addr16
stos
sti
in
rcl
aad
inc
mov
push
xchg
std
xor
retf
leave
jmp
fist
test
xchg
cld
cli
fsubp
hlt
retf
xlat
int
cmps
not
das
aas
cmp
jl
imul
mov
hlt
out
std
jnp
cli
mov
xchg
mov
sub
hlt
cmps
mov
pushf
fstp
enter
sub
mov
cdq
cmp
mov
addr16
push
call
out
cmps
scas
fcmovnb
out
aad
aas
clc
inc
pop
push
cld
add
retf
repnz
hlt
jmp
movs
loopne
sar
mov
jl
aaa
jge
mov
and
cld
cmc
out
std
in
fstp
scas
repnz
not
iret
bswap
retf
pop
jg
je
jne
loope
hlt
in
push
stos
ja
(bad)
stos
jmp
aas
jne
mov
mov
leave
sub
xor
push
fistp
stc
loopne
mov
jle
(bad)
cli
clc
xlat
clc
imul
cli
idiv
inc
pop
cmp
jno
iret
mov
ret
push
dec
or
push
push
cli
xor
aas
jno
mov
das
cli
mov
jmp
push
ins
xor
out
cmc
adc
scas
jg
sti
aas
mov
(bad)
je
pop
stc
in
add
retf
adc
xchg
mov
ja
cmp
cmp
(bad)
mov
jg
push
mov
lahf
mov
leave
xchg
fisttp
sbb
jl
mov
retf
xlat
rol
sti
rcl
retf
cmp
jmp
(bad)
stc
in
jecxz
jg
out
dec
mov
adc
stc
in
jmp
repz
lahf
lahf
jg
gs
jge
and
repnz
call
clc
ror
in
fsubrp
pop
inc
inc
dec
cli
jnp
push
outs
data16
(bad)
repnz
and
leave
fst
cmc
jnp
ds
jl
aas
stc
sub
imul
cmc
jo
sti
cli
in
out
out
mov
push
and
aam
cli
loop
rcl
mov
ror
ja
sti
scas
jg
jge
aad
cmps
push
pop
jg
and
repnz
sub
in
mov
iret
into
test
dec
ja
test
(bad)
stc
out
pop
std
les
aad
in
repnz
fcmove
mov
mov
repz
push
adc
pop
cmp
popf
shl
mov
sbb
js
je
pop
mov
in
out
cmc
adc
mov
push
popf
mov
int3
retf
std
cli
clc
in
mov
pop
jg
in
out
jle
add
retf
push
das
jg
mov
test
cmc
mov
popf
aas
pop
dec
jg
mov
mov
mov
out
das
pop
std
mov
cmp
movs
add
pop
pop
nop
ret
sti
mov
test
(bad)
sbb
sbb
dec
jl
not
loop
out
out
imul
fistp
xor
out
mov
std
push
iret
pop
jge
lahf
dec
dec
pop
les
dec
(bad)
dec
pop
sub
div
jbe
scas
pop
cmp
cli
cli
push
icebp
adc
movs
and
lds
mov
les
jecxz
jg
pushf
(bad)
int
push
icebp
mov
(bad)
mov
idiv
hlt
adc
aad
cmp
sub
out
in
mov
mov
ins
dec
jle
daa
shr
jge
mov
dec
push
ds
call
fistp
sub
ds
mov
pop
scas
mov
daa
aas
std
imul
jmp
stc
(bad)
div
hlt
cmps
jle
(bad)
xchg
pop
shl
xor
push
jnp
icebp
hlt
stc
(bad)
cld
loop
jmp
fdivp
push
pop
and
mul
xchg
sbb
in
fnstenv
mov
(bad)
sti
jl
out
iret
lds
adc
(bad)
not
mov
popf
pop
jl
cld
repnz
(bad)
out
or
hlt
fucomp
mov
push
mov
ret
dec
std
fstp
iret
mov
ret
iret
aas
cmps
shr
stc
in
cmc
loopne
out
pop
dec
xchg
cmps
aas
stc
imul
cmp
cld
leave
lahf
js
repz
fdivrp
out
pop
jg
repz
cmc
imul
mov
jp
bound
mov
(bad)
xor
je
loop
pop
pop
ror
xchg
int
cmps
mov
(bad)
pop
mov
fld
fucomp
mov
daa
into
aas
popf
jge
(bad)
iret
scas
jno
cld
int
xor
lahf
mov
mov
scas
icebp
out
lds
ds
push
mov
cmp
mov
leave
mov
in
(bad)
popf
aaa
daa
stc
dec
mov
pop
pop
pop
cmp
int3
fistp
movs
and
imul
ds
xor
fisubr
jge
idiv
jmp
ins
jg
xlat
js
mov
jne
jnp
popf
(bad)
pop
outs
fwait
jnp
pop
jge
jb
fdivr
xor
scas
sahf
ds
in
mov
std
mov
mov
cld
inc
repz
in
xor
jle
in
sti
iret
fistp
push
cmc
adc
loop
(bad)
neg
mov
std
aam
push
outs
idiv
xlat
dec
das
scas
push
mov
mov
dec
dec
das
pop
(bad)
sbb
jp
neg
dec
mov
retf
jmp
jb
das
leave
push
call
dec
jb
(bad)
rcr
iret
mov
xor
daa
pop
pop
dec
enter
cmp
inc
mov
sub
sbb
cli
mov
fstp
dec
ja
jg
pop
call
outs
mov
in
ins
stc
loop
mov
mov
mov
jle
sar
in
ret
cli
shr
call
sbb
sti
pop
std
aam
cmc
xchg
outs
pop
in
mov
icebp
xchg
lahf
addr16
mov
movs
aaa
popf
data16
cmp
cs
into
ja
scas
into
mov
out
mov
jb
imul
cld
cmps
lahf
lods
ficomp
mov
lahf
mov
repnz
dec
(bad)
sbb
jg
fnstcw
mov
clc
stos
clc
mov
loopne
scas
xor
fnstcw
scas
jbe
aas
cwde
jl
scas
fistp
push
ds
(bad)
aam
mov
hlt
fcmovnb
stc
stc
pop
stos
aaa
push
mov
mov
fbstp
stc
loop
mov
shl
dec
scas
mov
push
jl
daa
(bad)
outs
into
xchg
int
xlat
test
jmp
stos
sti
mov
dec
mov
popf
std
daa
pop
mov
das
(bad)
push
(bad)
fnsave
mov
mov
das
jg
call
mov
jg
jb
fstp
and
pop
shl
mov
jle
push
cli
jge
shr
test
or
in
addr16
mov
mov
xor
pop
sub
adc
daa
mov
mul
jmp
jecxz
outs
scas
scas
sahf
in
adc
lock
xor
push
iret
jmp
lds
xor
lahf
pushf
jle
fs
add
lds
sbb
repz
out
jmp
sahf
std
ficomp
das
sub
clc
out
repz
lahf
jl
or
cmp
dec
jg
(bad)
sar
imul
mov
mov
scas
jle
scas
fimul
sti
test
loopne
adc
sti
jb
in
mov
ja
lea
mov
cld
leave
pop
xchg
test
mov
xor
cs
aas
push
cli
repnz
fucomip
cmp
out
add
ja
fistp
mov
js
jl
adc
cmps
fbld
sar
or
cs
jle
stc
(bad)
pop
push
scas
jle
and
mov
xchg
or
(bad)
xchg
aas
in
xlat
cli
xor
retf
ret
repnz
dec
mov
imul
loop
repz
femms
scas
jg
cld
(bad)
aaa
pop
lahf
adc
rcl
ja
das
sahf
out
push
cmps
mov
dec
idiv
cmp
mov
repz
jmp
out
call
mov
jl
sahf
lods
mov
mov
out
dec
jge
lds
aad
xchg
jmp
jnp
daa
das
pop
cld
sbb
mov
cmp
push
stc
cmc
ja
out
dec
pop
mov
cmp
test
imul
jmp
fwait
call
cld
hlt
std
fucom
aad
das
xlat
mov
dec
inc
inc
jmp
cdq
xor
leave
dec
jo
mov
mov
cli
jge
iret
scas
call
daa
retf
std
cli
daa
mov
lds
or
(bad)
sbb
jp
sbb
(bad)
cld
mov
push
mov
aas
(bad)
cmp
retf
add
pop
jmp
out
and
leave
pop
nop
ret
xor
push
data16
jne
lds
aas
fisttp
retf
cli
daa
(bad)
pop
mov
(bad)
out
push
(bad)
and
(bad)
pop
jecxz
jmp
in
out
mov
aad
lahf
(bad)
adc
cld
out
iret
scas
icebp
hlt
daa
dec
jle
lahf
ds
inc
stc
pushf
xchg
(bad)
inc
lds
jbe
jae
fnstsw
cmp
jecxz
xchg
mov
mov
repnz
loope
mov
jb
cli
stos
jns
lock
fidivr
mov
retf
lahf
pop
cmp
jmp
jnp
ds
icebp
jnp
loope
nop
xchg
aam
test
int3
jae
clc
jmp
iret
cmps
mov
ja
iret
out
jge
fnsave
pop
int3
dec
and
sti
out
jns
popf
jmp
jle
(bad)
mov
repz
mov
inc
icebp
scas
test
mov
iret
addr16
into
jg
mov
xor
and
scas
aam
out
sar
aas
jg
in
jnp
mov
das
out
dec
retf
pop
jecxz
into
hlt
ror
mov
mov
pop
push
mov
fcmove
xchg
iret
ja
pop
(bad)
aam
ret
leave
std
xchg
scas
add
fwait
repnz
dec
fsubr
jle
stos
jb
test
int
mov
iret
jmp
mov
cmp
and
leave
in
js
mov
repz
dec
mov
cli
in
out
scas
mov
call
loop
jmp
cmp
mov
idiv
aas
fmulp
scas
ja
xchg
pop
xchg
cmp
xor
cmp
out
das
fidivr
sahf
push
leave
fstp
(bad)
loop
scas
icebp
cld
fstp
(bad)
loopne
jp
ins
sahf
xor
cmc
repnz
ja
lea
fild
lahf
ds
sbb
aad
cmc
loopne
cs
cmc
hlt
(bad)
stc
xchg
iret
mov
cli
inc
iret
lahf
cld
pop
fistp
das
pop
rol
aad
mov
lds
stc
sar
and
ins
sahf
fidivr
out
fiadd
das
mov
pusha
mov
inc
out
xchg
dec
adc
jmp
out
leave
mov
adc
daa
mov
fistp
mov
lahf
das
mov
dec
dec
sub
pop
retf
xchg
repz
ja
scas
imul
outs
sti
sti
push
loop
shr
pop
push
addr16
(bad)
cli
repnz
repnz
aad
xchg
scas
scas
sahf
mov
scas
jg
jmp
stos
cld
into
mov
sti
inc
mov
leave
adc
fiadd
lahf
mov
leave
out
ds
jmp
mov
aad
xor
iret
fist
mov
addr16
add
dec
mov
fcmovne
dec
pop
in
mov
jg
retf
out
(bad)
hlt
ja
js
cld
idiv
inc
in
cld
aad
sti
retf
mov
mov
js
mov
jmp
jl
jmp
leave
inc
pop
inc
lds
clc
xchg
xchg
clc
in
dec
aad
mov
imul
aas
sbb
pop
mov
stc
out
cmc
out
pop
scas
cmovle
lods
repz
jg
fucomip
fs
adc
jl
in
leave
stos
ja
xlat
lds
dec
jle
out
sahf
in
jno
cld
bnd
and
mov
(bad)
jge
(bad)
xlat
mov
out
iret
jle
retf
cmps
stos
rcl
aas
icebp
mov
das
jg
jecxz
aas
std
adc
out
cli
movs
pop
dec
divps
pop
aas
icebp
imul
out
repz
std
fistp
(bad)
dec
retf
lahf
in
sahf
cmp
mov
jle
int
jl
sti
cld
sbb
das
into
scas
scas
fistp
adc
stc
scas
icebp
in
neg
out
repz
lahf
js
mov
pop
ds
xor
mov
jmp
cld
(bad)
in
fld
or
repnz
vmaxsd
loopne
repz
mov
shl
mov
das
(bad)
fistp
mov
in
scas
xchg
in
(bad)
outs
sahf
cmp
fscale
test
mov
loop
lahf
jle
imul
xchg
jl
lahf
stos
idiv
cmc
cmp
das
jg
ja
jmp
in
or
pop
popf
ds
xor
fidivr
cdq
cmp
push
in
mov
scas
icebp
in
cmp
jmp
sahf
int3
mov
bound
outs
stc
dec
xchg
pop
jno
jecxz
push
sub
pop
and
icebp
in
loop
out
cdq
mov
dec
into
fidivr
mov
je
jmp
rcl
(bad)
xchg
addr16
lahf
inc
ja
out
jge
adc
sub
mov
gs
in
stc
dec
in
call
mov
imul
fild
in
mov
jl
stc
jp
cmps
stos
or
aas
leave
sahf
mov
sahf
iret
repnz
cmp
xchg
dec
into
inc
mov
push
scas
mov
mov
out
cmc
in
sti
mov
test
dec
addr16
jne
cld
idiv
push
aas
mov
sahf
pop
out
mov
jle
and
cmps
cmc
(bad)
popf
stc
scas
jno
das
iret
jle
(bad)
ins
jle
jns
in
aas
outs
jg
pop
jbe
imul
popf
pop
out
xchg
dec
stc
mov
dec
les
pop
dec
mov
addr16
cmp
idiv
clc
mov
mov
mov
mov
xchg
scas
fiadd
mov
clc
xchg
cmps
pop
iret
addr16
das
jle
xor
out
std
jnp
sbb
cld
cmp
xchg
cmp
and
loop
inc
sbb
inc
(bad)
pop
out
xchg
mov
pop
cmp
mov
cmp
(bad)
mov
cmps
pop
mov
inc
jle
mov
fsubr
data16
mov
ds
in
pop
mov
mov
lahf
pop
xchg
fxam
jmp
xchg
lahf
xchg
cmps
mov
cmp
mov
(bad)
cli
xor
fidivr
jbe
pop
cmps
lahf
mov
adc
jo
mov
std
sti
int3
iretw
mov
std
ja
mov
jmp
addr16
xchg
cmp
push
push
mov
dec
mov
xlat
jne
movs
jp
imul
hlt
repnz
(bad)
jmp
repz
cmps
jg
rcr
fs
cmp
outs
call
out
mov
out
cmp
js
retf
cmps
imul
daa
enter
in
(bad)
push
scas
jle
cld
hlt
cmp
pop
ss
mov
outs
iret
jg
xchg
cmp
popf
lahf
cmps
adc
out
mov
mul
in
ficomp
xchg
jle
idiv
addr16
int
repnz
std
lds
pop
(bad)
pop
repz
pop
hlt
(bad)
test
mov
jb
fst
dec
aam
retf
pop
mov
loop
lods
cmp
cli
loop
sub
push
retf
cli
mov
scas
out
mov
(bad)
jmp
hlt
idiv
sahf
dec
dec
lahf
pop
mov
fdivr
or
cld
movsx
(bad)
out
pop
(bad)
call
in
fwait
pop
jecxz
jp
out
mov
dec
retf
daa
mov
inc
or
popf
xchg
mov
daa
pop
mov
out
mov
lahf
cmps
and
add
es
leave
jne
cld
neg
ss
in
fistp
(bad)
idiv
dec
push
jl
mov
fdivr
mov
jns
adc
adc
lds
stc
sti
mov
sti
pushf
jg
int
icebp
in
xchg
xchg
out
jle
shr
neg
mov
out
out
call
dec
pop
aas
std
aad
ds
xchg
lahf
scas
jg
not
int
std
jecxz
outs
mov
popa
shl
jb
cmp
pop
jg
popf
xchg
lahf
das
ja
pop
jl
jp
xchg
jecxz
es
js
bound
cmc
fs
fisub
cld
leave
repnz
cmc
cmps
pop
jl
sub
int
stos
lahf
sub
retf
cld
fimul
fbld
jmp
das
addr16
jns
cld
xlat
pop
mov
jle
imul
inc
arpl
sbb
xchg
jle
imul
cld
cmps
jle
idiv
cli
sti
in
jl
daa
lahf
mov
enter
cli
xor
jg
not
ret
loop
outs
aas
fnstcw
jnp
push
stc
in
pop
arpl
loop
inc
retf
pop
jnp
fidivr
cmc
mov
mov
repnz
xchg
fxch
(bad)
iret
lahf
(bad)
mov
xlat
jg
daa
clc
xlat
mov
daa
stc
in
idiv
out
das
dec
retf
stc
dec
pop
cmp
mov
scas
jle
(bad)
je
jbe
leave
xchg
mov
push
cmc
scas
jl
mov
pop
je
(bad)
xchg
aas
sbb
or
lea
div
cmp
cmc
in
jecxz
dec
popf
fnstsw
(bad)
cld
cmps
ds
pop
cld
sbb
aas
std
aad
out
xor
cld
loop
jmp
fs
jmp
stos
scas
data16
mov
mov
daa
xchg
pop
pop
das
dec
and
daa
loopne
lea
daa
stos
(bad)
(bad)
idiv
cmp
inc
sti
cmps
jg
dec
inc
fldcw
push
mov
iret
jmp
pushf
xchg
das
mov
scas
jg
jmp
(bad)
xor
xchg
mul
call
lahf
aaa
(bad)
das
sub
jle
sti
jnp
cs
(bad)
ficomp
pop
imul
jg
mov
stc
out
ds
cmp
popf
adc
(bad)
fidivr
cmps
push
push
int3
sahf
(bad)
fnstenv
mov
mov
jb
popf
fistp
sti
shl
cmp
mov
aad
call
fldenv
push
(bad)
in
jle
lds
pop
pop
(bad)
ds
call
mov
call
cmp
pop
mov
stos
das
pcmpeqd
xchg
out
sti
test
out
stc
(bad)
addr16
pop
push
xlat
(bad)
test
cld
fs
idiv
test
xlat
stos
in
scas
xor
jg
jo
in
cmps
(bad)
mov
aas
std
idiv
movd
stos
lods
clc
test
fsubr
xlat
js
in
loop
(bad)
out
popf
out
mov
hlt
stc
icebp
loop
xchg
das
jg
lahf
js
fstp
into
(bad)
jg
loop
int
std
jnp
mov
int
fcmove
pop
in
cmc
dec
jg
jg
imul
dec
out
sar
loop
cli
mov
leave
xchg
mov
out
xchg
outs
mov
push
mov
leave
out
(bad)
xchg
je
sbb
jle
mov
scas
jg
into
inc
mov
jge
mov
xlat
js
pop
push
sbb
aas
cmp
(bad)
mul
retf
aad
jae
jo
imul
jnp
pop
in
mov
fwait
out
in
lahf
dec
jle
jg
iret
movs
jo
iret
mov
(bad)
aas
out
shl
pop
jecxz
stc
jae
lods
pop
jecxz
in
arpl
add
repz
jp
sub
gs
sub
jle
enter
push
fadd
lock
stc
or
pop
jecxz
cld
mov
lea
xlat
(bad)
xor
jle
cmp
cmp
ja
dec
ucomiss
int3
ins
cs
jnp
mov
xlat
cmc
xchg
(bad)
movq
cmps
out
rcl
repnz
fdivrp
test
outs
mov
pop
(bad)
fcompp
ja
das
dec
jno
in
addr16
stc
vpxor
mov
sti
lahf
scas
sub
sub
std
push
(bad)
in
repnz
mov
daa
out
jg
jmp
cli
stos
pop
jl
inc
jle
in
icebp
cmc
dec
ds
div
pop
dec
jg
repnz
sub
jmp
cmc
popf
dec
(bad)
repnz
xchg
xchg
mov
lahf
pop
pop
pushf
cld
aam
sbb
movsx
adc
mov
cli
out
cmps
mov
fnstsw
aad
jg
adc
icebp
cld
mov
xlat
xchg
adc
icebp
jbe
sti
jnp
push
dec
fistp
dec
push
xchg
aaa
(bad)
xor
mov
jge
ds
jg
mov
leave
jmp
stos
push
mov
aad
inc
jmp
neg
jmp
sbb
jge
mov
fnstcw
aas
sti
(bad)
lock
push
sbb
mov
dec
xlat
xlat
movd
pop
(bad)
sbb
shl
jmp
repnz
lahf
aam
in
jle
jb
mov
push
sbb
imul
push
in
pop
jnp
sahf
in
stc
mov
pop
cdq
sub
mov
loop
lods
jbe
daa
das
mov
(bad)
xor
xchg
call
jmp
(bad)
popf
out
in
cmp
mov
into
mov
fptan
stos
jl
stc
loop
pop
in
aad
xchg
cmp
in
mov
stos
cld
cmp
jle
fucomip
fdivp
in
in
cmp
jg
stos
popf
outs
jg
in
dec
repz
jmp
mov
sbb
ror
mov
jmp
jle
clc
loop
iret
xchg
test
loop
xchg
(bad)
std
hlt
cmp
fbld
out
mov
aas
jne
push
hlt
pop
shl
jecxz
test
xchg
scas
push
scas
repz
das
iret
mov
mov
rcr
cs
aaa
retf
lahf
scas
aas
(bad)
pop
mov
std
cld
neg
xlat
mov
mov
cmp
fwait
mov
das
push
mov
ja
leave
dec
in
xchg
das
cmps
lahf
out
stos
xchg
rcl
push
retf
lahf
test
mov
jb
in
out
jl
jg
mov
jg
inc
imul
scas
pop
std
sbb
jmp
out
dec
push
dec
mov
jmp
push
scas
sub
cmps
shl
xchg
adc
jns
jp
cld
xlat
mov
xchg
push
gs
repz
mov
out
imul
mov
push
and
mov
retf
cli
jmp
jnp
addr16
mov
mov
mov
pusha
out
jne
aad
mov
and
pushf
std
sbb
std
inc
aas
icebp
(bad)
movs
mov
cld
(bad)
out
xor
pop
out
push
mov
(bad)
cli
fldcw
lock
cmc
(bad)
xor
je
not
cmp
ficom
stos
xchg
xor
dec
jmp
aas
jge
push
outs
(bad)
mov
test
pop
jl
cld
cmps
imul
repnz
jmp
fistp
jg
cmp
(bad)
cld
mov
dec
pop
mov
jns
mov
aad
cmp
sti
xor
cli
mov
out
rcl
aam
mov
(bad)
mov
loop
std
mov
jle
mov
into
dec
call
imul
add
das
jp
loopne
mov
sar
cld
xchg
movs
fild
and
das
jle
mov
cmc
fs
call
loop
rcl
fstp
rcr
xchg
sub
out
in
shl
xchg
imul
jns
aad
stos
mov
data16
inc
mov
jnp
push
xchg
inc
jg
pushf
mov
aad
pop
dec
test
dec
into
mov
lea
jle
in
repz
fnstsw
mov
cld
in
(bad)
imul
sub
inc
aas
jns
icebp
hlt
mov
(bad)
xlat
test
leave
fistp
mov
cmps
(bad)
repnz
(bad)
das
jle
push
(bad)
outs
xchg
lahf
pop
out
shl
iret
dec
pop
out
cmp
mov
imul
iret
push
scas
repz
mov
lock
cmc
lock
cld
fmulp
repnz
retf
cld
repz
cld
div
fwait
retf
jmp
std
stc
scas
push
ds
jmp
not
xlat
lahf
mov
push
jmp
in
dec
aas
int
mov
stc
cld
stos
(bad)
aad
jle
adc
(bad)
div
stc
loop
loop
icebp
xchg
rol
push
lods
ficomp
xlat
mov
test
out
stc
ja
mov
into
mov
push
dec
cmc
idiv
(bad)
adc
jns
mov
iret
out
fistp
jnp
cld
sbb
jg
sti
repnz
pop
(bad)
ds
fld
mov
mov
ja
pop
mov
leave
dec
out
leave
scas
sar
in
lahf
cld
test
fninit
lds
jnp
push
jl
daa
jle
xlat
cmp
cmp
push
repnz
out
imul
jl
(bad)
jb
mov
cld
push
hlt
(bad)
aas
call
pop
cli
call
inc
(bad)
jmp
jmp
dec
(bad)
dec
(bad)
aas
cdq
(bad)
jmp
cli
call
and
push
jne
xor
out
in
lea
dec
dec
or
std
addr16
dec
lahf
inc
(bad)
push
std
dec
movs
(bad)
(bad)
jns
(bad)
aas
lahf
(bad)
call
sar
inc
pop
sti
xlat
clc
xor
xlat
cli
jne
lea
xlat
stc
xor
xlat
cmp
test
cmps
into
xchg
or
fisub
inc
sbb
pop
add
jge
mov
adc
repz
scas
mov
loop
ss
mul
mov
and
popf
push
mov
out
push
fcomp
cli
xor
xlat
js
cli
pop
cli
xor
push
xchg
lds
jle
fnstsw
xlat
stc
xor
xlat
clc
dec
jg
pop
jecxz
sti
jne
(bad)
(bad)
xlat
stc
xor
xlat
clc
sub
mov
jne
(bad)
(bad)
xlat
stc
xor
xlat
clc
ins
jg
pop
jecxz
sti
jne
(bad)
(bad)
xlat
stc
xor
xlat
clc
sbb
ja
jne
jo
adc
call
scas
repz
pop
out
mov
jge
mov
jmp
xor
cli
lock
movs
(bad)
cs
(bad)
cmp
sar
jmp
call
inc
(bad)
inc
(bad)
jg
std
dec
hlt
(bad)
aas
jmp
dec
pop
dec
pop
(bad)
xor
(bad)
aas
xchg
(bad)
inc
sar
(bad)
js
call
jmp
dec
(bad)
jmp
hlt
(bad)
aas
xchg
(bad)
jmp
pop
xchg
mov
ss
clc
jl
xchg
lock
pop
xchg
xchg
pop
fs
mov
jg
xor
jg
std
dec
cmps
(bad)
(bad)
cmp
(bad)
aas
xchg
(bad)
jmp
adc
inc
mov
dec
fisttp
aas
pop
jae
aam
mov
pop
inc
or
xlat
clc
xor
xlat
cli
jne
or
mov
(bad)
add
out
jge
or
imul
mov
(bad)
sbb
cld
jp
cs
gs
das
sbb
inc
sub
cmp
jmp
mov
jmp
sbb
cld
cmps
mov
std
mov
jmp
sbb
cld
inc
cwde
dec
imul
into
mov
(bad)
repnz
mov
cmp
push
daa
inc
jle
mov
xlat
adc
pusha
lods
cli
mov
jne
(bad)
fucomip
xlat
std
xor
xlat
clc
ins
jle
pop
jecxz
std
jne
(bad)
fucomip
xlat
std
xor
xlat
clc
sbb
ja
jne
(bad)
fucomip
xlat
std
xor
xlat
clc
add
mov
pop
clc
jmp
adc
fdiv
retf
mov
repz
mov
jge
adc
(bad)
and
paddw
stc
mov
inc
push
xchg
data16
xchg
aam
mov
nop
push
inc
nop
mov
call
inc
(bad)
jmp
call
inc
(bad)
jmp
frstor
mov
out
and
movs
stc
out
pop
stc
jecxz
les
dec
(bad)
call
call
dec
(bad)
dec
hlt
(bad)
aas
test
jmp
pop
pop
ror
test
xchg
aas
popf
ds
xor
(bad)
jg
jge
or
inc
movs
es
xchg
aas
jmp
std
xor
pop
adc
shl
push
std
dec
movs
(bad)
(bad)
jns
(bad)
aas
lahf
(bad)
call
sar
inc
pop
xchg
mov
cli
cli
test
sub
and
lods
les
mov
cmp
dec
xor
mov
cld
fidivr
cld
jp
(bad)
sub
mov
std
aas
js
cmp
pop
std
mov
jmp
jp
(bad)
scas
(bad)
jmp
sbb
cld
es
(bad)
jp
(bad)
outs
imul
std
sbb
cld
push
mov
(bad)
jp
(bad)
outs
cmc
jmp
sbb
cld
ss
loop
dec
jge
jl
hlt
(bad)
push
fild
imul
jg
fistp
jns
out
in
imul
(bad)
rcr
rcr
sti
xlat
js
xor
cld
jnp
das
pop
jle
sar
cli
mov
repz
pop
popf
pop
iret
fwait
iret
fist
neg
clc
xor
sub
mov
stos
out
pop
push
(bad)
and
jle
in
push
pop
push
cld
pop
mov
icebp
fstp
mov
loop
(bad)
clc
retf
mov
call
sub
xchg
pop
popf
out
(bad)
dec
cs
jle
cli
jnp
pop
pop
mov
neg
(bad)
cmps
jle
pop
jecxz
pop
sub
sar
frstor
(bad)
xchg
idiv
aaa
pop
mov
aaa
test
retf
repz
arpl
repnz
lahf
mov
aas
js
mov
mov
jecxz
jecxz
cmc
in
pop
fnstsw
cmp
sbb
(bad)
stos
aaa
xlat
scas
neg
cld
sbb
out
test
(bad)
pop
ds
lahf
in
pop
mov
xlat
pop
push
jmp
jmp
pop
sbb
call
xchg
shl
jbe
cli
fcomi
das
jp
cld
in
cmps
jg
in
cmp
jle
cli
xlat
clc
mov
ja
pop
std
mov
aad
std
repnz
idiv
js
cld
fstp
jmp
mov
in
cld
xor
push
xchg
stos
pop
hlt
mov
(bad)
aas
std
inc
out
aas
mov
dec
mov
fisttp
cmp
out
enter
mov
mov
ficom
mov
in
(bad)
loope
jno
cli
hlt
(bad)
(bad)
out
mov
icebp
(bad)
das
cli
leave
pop
pop
loop
xchg
mov
stc
aad
mov
popf
lahf
clc
mov
mov
ja
lahf
daa
xchg
fbld
mov
cmp
mov
and
ja
in
pop
pop
sahf
cld
sbb
stc
inc
dec
iret
sub
aaa
push
pop
pop
jle
sub
das
stos
cmps
pusha
ss
xchg
push
pop
fnstsw
ficomp
ds
das
div
loope
fwait
lds
pop
mov
mov
cmp
sbb
jb
cld
sar
mov
in
jmp
mov
pop
in
sub
pop
cmp
leave
shl
outs
mov
out
imul
std
jmp
test
aas
mov
imul
and
imul
cmp
dec
inc
addr16
gs
jmp
rcr
xor
mov
lahf
shl
push
stos
jmp
and
push
stc
cmps
pop
sbb
jle
ret
out
sahf
pop
aas
jge
jns
mov
push
cmp
push
fistp
cld
hlt
add
jp
inc
sub
xor
mov
mov
pop
hlt
push
xlat
(bad)
cmovle
addr16
(bad)
pop
fistp
mov
js
mov
jmp
movs
pop
retf
mov
repz
int
jne
cmp
mov
in
in
(bad)
cld
cmps
jg
stos
pop
dec
(bad)
push
pop
xchg
cmc
jmp
mov
test
dec
pop
xchg
stc
add
or
jne
(bad)
push
mov
stc
cld
(bad)
xor
and
ins
jle
pushf
mov
(bad)
mov
mov
scas
push
aad
scas
jle
mov
ss
jae
cmp
cmp
ja
(bad)
in
in
neg
adc
das
iret
test
pop
inc
iret
iret
jle
aad
fild
cmp
dec
iret
out
cmp
mov
cmps
mov
jg
mov
daa
pop
xchg
lds
jnp
iret
repz
clc
mov
cmc
ja
repnz
push
(bad)
into
xchg
aas
cmc
in
loop
jmp
idiv
cmp
imul
cmps
(bad)
stos
vhsubps
(bad)
imul
cli
hlt
idiv
test
xor
call
jg
fninit
retf
mov
jmp
lock
xchg
das
lahf
jle
cld
stc
add
in
aad
add
int
xor
(bad)
aas
jns
jl
cld
daa
dec
aas
pop
aam
sub
inc
cmps
repz
jmp
cmp
out
xchg
push
xchg
jbe
retf
(bad)
xlat
js
out
cld
loop
leave
jno
mov
out
mov
outs
out
jle
test
xchg
cmp
cmc
retf
jmp
sub
lahf
mov
mov
repz
mov
out
sbb
iret
scas
jle
(bad)
cld
pop
adc
jmp
repz
dec
in
jg
loopne
(bad)
repnz
(bad)
rol
iret
jg
addr16
cli
jnp
cmp
test
movsx
jnp
sbb
out
das
retf
cld
cmps
mov
(bad)
std
pop
aas
mov
scas
mov
std
sbb
jge
neg
mov
out
outs
aas
mov
dec
cld
sbb
aas
std
aad
leave
rcr
push
clc
xor
pop
scas
(bad)
lahf
push
pop
jle
jge
sahf
jge
mov
jg
in
mov
pop
std
ficomp
jmp
in
stc
ja
scas
jle
retf
jecxz
addr16
lahf
out
adc
fidivr
pop
cmp
out
repz
neg
pop
pop
mov
lahf
popf
jmp
push
inc
shl
mov
mov
pop
mov
jge
repnz
out
fnclex
jmp
idiv
rcr
sti
push
into
jle
retf
loop
loop
dec
rcl
gs
div
sub
jbe
jmp
std
lahf
enter
lahf
pop
emms
jle
fucomip
leave
retf
push
dec
jle
ja
jp
mov
sti
sbb
pushf
out
ror
jecxz
pop
sbb
fwait
scas
stos
and
(bad)
pop
das
mov
sti
hlt
cld
stc
repnz
idiv
std
into
sar
ret
out
test
ja
pop
jns
int
inc
icebp
xor
dec
mov
cli
jb
stc
out
stc
mov
std
jo
imul
(bad)
in
cld
daa
fwait
jnp
call
jge
shr
cmp
ja
(bad)
mov
std
repnz
mov
adc
loop
(bad)
lahf
ds
pop
jle
imul
out
cmc
cli
loop
dec
ja
fcomp
scas
push
aam
aas
stc
imul
gs
imul
idiv
loop
movs
sub
fst
mov
scas
icebp
repnz
dec
fistp
imul
movs
clc
leave
cmps
fnstenv
iret
das
jle
sti
movaps
call
jmp
hlt
neg
ror
int
xchg
push
xchg
mov
std
into
xchg
daa
jnp
jmp
sti
cld
retf
repnz
stos
dec
aas
call
mov
std
mov
(bad)
test
mov
cmp
xchg
jg
in
jae
xchg
out
fistp
jnp
in
cmps
(bad)
aas
stc
div
(bad)
das
jp
and
dec
adc
jecxz
pop
fsub
cmp
ja
in
jg
data16
adc
(bad)
scas
jg
stc
(bad)
lds
scas
jbe
sub
aaa
xlat
sub
cmp
out
dec
into
out
in
jle
hlt
cmp
mov
mov
cli
in
push
leave
pop
dec
jo
ins
push
(bad)
mov
sti
imul
repnz
addr16
jge
fsubrp
push
int
pop
fdivr
mov
loop
das
cli
inc
mov
jnp
mov
pop
xor
neg
repnz
push
dec
and
fwait
dec
ins
cmp
mov
pop
sbb
cmp
repnz
push
mov
clc
scas
cmp
jmp
lahf
js
jne
push
out
ds
mov
mov
fxam
lds
cmc
jl
dec
mov
xlat
mov
inc
(bad)
in
xlat
js
std
ds
stos
dec
ja
test
(bad)
clc
xor
cmps
repz
xor
mov
out
repz
mov
jmp
scas
jno
sbb
aas
jge
jmp
mov
(bad)
sbb
retf
jmp
push
mov
mov
pop
vpor
jmp
sti
mov
stc
repnz
or
sub
repz
out
ja
jg
fisttp
mov
cs
xchg
pop
pop
aas
std
(bad)
div
repz
iret
not
retf
lahf
pop
call
mov
cld
outs
div
fnstsw
fld
sti
cwde
lds
jle
in
daa
dec
fidiv
sti
ror
xchg
jmp
jp
mov
ja
fistp
pushf
out
std
aam
dec
call
jno
in
jnp
(bad)
leave
cmp
mov
add
(bad)
jl
jb
pop
jnp
lahf
jg
rcr
lds
jge
lock
pop
cmp
xlat
mov
jmp
lds
std
leave
ficomp
mov
daa
out
idiv
fild
fdivrp
adc
ret
ret
in
out
mov
jp
repnz
and
outs
jg
out
retf
fst
std
lahf
jle
loopne
cld
idiv
out
imul
aad
test
out
mov
sahf
pop
pop
pop
aas
(bad)
jmp
repz
scas
mov
dec
pop
xchg
(bad)
mov
cli
pop
dec
pop
daa
xchg
dec
mov
in
cmc
ja
in
ror
faddp
std
jnp
ins
cmp
into
scas
jno
cmp
mov
inc
daa
mov
add
das
mov
pop
ss
pop
hlt
ins
mov
mov
sbb
stc
repnz
(bad)
xlat
aas
stc
push
jae
cmp
cld
sbb
fistp
lock
fscale
mov
retf
popf
jl
xchg
mov
pop
in
sub
out
(bad)
ds
fcmovnu
sti
xor
mov
repnz
sbb
repz
retf
repz
out
in
xchg
adc
xor
mov
jmp
lahf
ds
(bad)
push
int3
xor
jmp
jne
stc
jmp
dec
addr16
sub
xor
mov
add
mov
dec
mov
mov
hlt
mov
ja
cs
scas
cmps
pop
addr16
sub
xchg
idiv
movs
stos
leave
pop
ja
test
iret
(bad)
stc
mov
jmp
push
jl
fdivrp
lahf
adc
in
mov
leave
call
pop
mov
inc
(bad)
dec
cmc
jmp
pop
xchg
inc
push
sub
imul
aad
outs
sahf
pop
in
rol
int
out
push
mov
call
neg
jnp
mov
into
je
mov
cmps
mov
loop
or
jne
js
mov
mov
in
(bad)
std
sbb
in
pop
cmp
mov
or
leave
pop
cmp
into
std
jmp
das
adc
push
pop
push
adc
data16
mov
retf
fptan
leave
dec
sub
jle
daa
enter
jle
jmp
cs
jg
neg
idiv
in
in
clc
leave
lahf
sahf
pushf
mov
jp
in
daa
scas
jle
cmps
pop
(bad)
fimul
into
sbb
and
idiv
jl
je
mov
jbe
jg
lds
std
sbb
mov
lods
xchg
iret
pop
cmp
sti
jge
lods
mov
lds
scas
std
in
mov
cmps
shr
jp
mov
icebp
jae
je
pop
jecxz
push
sti
mov
pop
fistp
test
pop
mov
mov
rcr
retf
mov
jecxz
out
icebp
jl
out
fcmovne
ja
fldcw
pop
jl
fdivr
mov
sahf
fdivrp
mov
outs
mov
jg
mul
loop
imul
push
lahf
ds
loopne
movs
cld
lahf
std
sbb
into
into
shl
mov
aad
ret
not
clc
xchg
(bad)
sub
scas
daa
or
jle
cmp
dec
xchg
cmp
clc
xchg
bnd
aas
popf
jg
mov
(bad)
dec
out
sahf
aas
int
jle
aaa
pop
pushf
fdivrp
out
jb
in
pop
hlt
jns
jns
push
mov
into
pusha
mov
xlat
js
mov
jns
loopne
mul
jl
jmp
call
into
jle
pop
das
mov
jb
cld
in
sar
xchg
mov
jle
sub
mov
out
push
out
pop
sub
mov
pop
cmp
mov
in
cmps
sahf
xlat
mov
iret
mov
loop
cmps
aas
stc
repnz
not
in
jmp
xlat
pop
cmp
ja
out
out
adc
call
repnz
stos
popf
cmps
cmc
fwait
jmp
cmp
jge
cld
mov
imul
lahf
movs
lods
std
jmp
xor
pop
mov
lds
retf
repz
leave
mov
inc
xlat
int
mov
sbb
cmps
xchg
scas
out
jge
push
std
outs
stc
fnstsw
neg
pushf
pop
push
addr16
inc
mov
lahf
sahf
mov
cmc
pop
pop
xlat
scas
into
das
jle
lahf
mov
sub
imul
(bad)
ds
addr16
cdq
jnp
jle
push
lock
(bad)
cmp
mov
push
mov
ins
jle
mov
neg
std
out
(bad)
loop
xlat
clc
mov
aas
std
into
(bad)
neg
jge
stc
lds
loop
mov
mov
es
mov
dec
push
sahf
cmp
jns
fisttp
and
(bad)
jo
and
jmp
out
aas
sti
jl
mov
fistp
ins
addr16
cld
sbb
mov
fs
sbb
out
push
pop
dec
push
jle
jmp
sbb
lahf
jl
cli
stc
mov
sub
cmp
mov
mov
mov
hlt
(bad)
sbb
fmulp
fimul
push
fisub
jbe
int3
jle
dec
std
aam
leave
in
das
cli
mov
iret
into
shl
mov
dec
repz
iret
hlt
cmps
jg
jmp
mul
mov
jg
cmp
lds
retf
stc
mov
loop
cmp
pop
pop
xlat
scas
jle
jmp
retf
(bad)
mov
repz
cli
dec
cs
enter
cmp
pop
jecxz
lahf
clc
test
in
lahf
pop
mov
cld
aam
hlt
leave
scas
icebp
xchg
lahf
dec
jle
jb
pop
std
mov
mov
aas
lahf
jge
in
sar
aad
mov
jmp
mov
sbb
add
sbb
jp
fs
imul
mov
std
fidivr
call
mov
cld
mov
imul
adc
pop
xor
jns
cmp
(bad)
xlat
(bad)
xor
xlat
cmp
shr
or
shl
jecxz
lods
es
clc
popf
jle
pop
jecxz
(bad)
mov
lea
imul
mov
dec
jmp
mov
lahf
fistp
pop
pop
out
sbb
js
in
lock
jbe
in
out
inc
ja
xlat
cli
idiv
inc
xlat
sbb
jg
std
sbb
enter
jmp
data16
mov
pop
mov
inc
stc
pop
and
jg
jl
mov
pop
jg
jns
jmp
stos
scas
jg
jmp
mov
addr16
add
cmc
int
lds
stc
leave
in
std
je
cmc
cld
mov
shl
jl
in
bnd
cmc
out
repz
push
jge
imul
ds
push
retf
lahf
retf
mov
mov
pop
call
das
ds
sti
div
in
sti
mov
pop
je
jnp
jge
jnp
sbb
jns
cmp
leave
mov
psadbw
jmp
ja
(bad)
jl
stc
cld
dec
stc
aad
aad
lods
sub
dec
sahf
loope
test
jle
push
fistp
(bad)
popf
jg
pop
cdq
out
xchg
stos
repnz
fnstcw
xor
int
shr
(bad)
cld
xor
enter
pop
out
(bad)
sbb
cdq
pop
mov
cmp
mov
iret
dec
pop
pop
dec
mov
stos
fisttp
and
retf
loop
scas
retf
mov
repz
repz
repz
jmp
popf
pop
movs
cld
scas
mov
stc
in
retf
out
pop
mov
jge
out
jg
push
adc
lahf
fistp
sub
lahf
cmp
les
dec
xchg
ja
pop
cld
ds
out
mov
idiv
loopne
clc
stos
shr
push
aas
std
pop
mov
shl
jl
aas
fwait
out
mov
std
jmp
in
rol
cli
shl
pop
jae
in
dec
in
dec
jbe
repnz
xchg
addr16
pop
fistp
push
scas
pop
fistp
xchg
ficomp
jns
push
pushf
jns
jb
jl
push
(bad)
out
mov
xlat
pop
dec
iret
out
lahf
(bad)
fidivr
mov
lahf
fistp
jp
cmc
imul
cld
retf
cld
clc
int
ret
ja
push
out
cld
je
imul
mov
push
mov
and
out
(bad)
xchg
pop
je
imul
pop
pop
pop
call
icebp
fs
repnz
clc
mov
das
out
(bad)
into
inc
aaa
fistp
call
scas
jg
daa
fistp
jl
idiv
dec
pop
cs
mov
sbb
in
mov
fs
and
mov
mov
(bad)
xlat
pop
cmp
fistp
sahf
cmp
cmp
repz
shr
mov
stc
into
cld
sar
stc
test
cli
jmp
jl
mov
das
pop
mov
fst
test
xchg
fidivr
jns
cmp
stc
ficom
jns
fidivr
repnz
std
les
cld
mov
(bad)
sti
sbb
pop
stos
pop
mov
cmps
into
mul
lahf
scas
fucomip
mov
ja
mov
jecxz
std
outs
iret
lahf
std
aam
mov
add
das
out
cmp
js
std
fisubr
shr
out
mov
stc
leave
in
std
sbb
cmps
aas
std
inc
stc
pusha
(bad)
adc
scas
mov
in
out
std
hlt
daa
jg
in
(bad)
cmc
retf
das
sahf
mov
pop
mov
ficom
int
xchg
repnz
icebp
in
retf
scas
mov
ficomp
jnp
in
cmp
sbb
mov
in
xchg
aas
mov
idiv
mov
imul
pop
je
repnz
stc
dec
aas
aas
jge
imul
jb
popf
pop
jecxz
jae
(bad)
jmp
dec
mov
mov
(bad)
dec
ds
test
mov
not
stc
push
pop
mov
(bad)
xchg
dec
out
pop
into
mov
cmps
out
jle
(bad)
dec
scas
imul
stos
(bad)
jmp
stc
fsubrp
repnz
lahf
mov
out
clc
xlat
mov
std
ds
adc
mov
cmc
in
neg
aad
ja
cmc
push
repz
in
dec
(bad)
mov
cmp
mov
xchg
inc
pop
xlat
push
outs
repz
jb
cmc
jnp
sub
(bad)
mov
aad
sub
retf
xchg
pop
int
cld
daa
jg
out
stos
ja
retf
cmps
aas
jno
imul
jg
jo
jg
jmp
jle
addr16
cmps
cs
sbb
cmps
mov
repz
idiv
out
into
dec
out
das
jg
pop
cmps
cmc
ins
mov
aaa
vpminsw
sub
loop
std
cmps
adc
xchg
fistp
stc
(bad)
(bad)
jmp
mov
out
(bad)
dec
mov
jmp
stc
fwait
mov
mov
cmps
and
lods
(bad)
test
mov
hlt
mov
(bad)
xchg
stc
out
repz
lahf
pop
(bad)
in
pop
aas
mov
push
mov
dec
out
repz
idiv
out
retf
cmp
neg
fistp
imul
mov
rcr
scas
pop
push
pop
in
mov
(bad)
xor
jnp
out
xlat
jmp
retf
out
idiv
lahf
pop
cmp
sti
pop
into
(bad)
cmps
in
movs
push
cmps
addr16
ror
das
out
scas
out
pop
push
iret
sub
not
(bad)
dec
dec
mov
ins
jle
mov
out
sahf
cs
(bad)
sbb
out
push
sahf
push
jl
jns
mov
scas
icebp
out
jle
jmp
mov
data16
dec
push
jl
cmc
loopne
std
jo
sti
fdivr
jmp
jne
adc
ja
(bad)
vpsubw
sub
out
je
hlt
out
cmc
mov
repnz
xor
daa
out
out
scas
jg
outs
call
shr
push
scas
push
cld
sbb
sti
imul
stc
leave
cli
(bad)
repnz
dec
lahf
std
sbb
xchg
xchg
cmp
cld
pop
arpl
jns
jnp
lahf
aas
mov
cli
loope
pop
dec
pop
ds
pop
cld
hlt
jp
and
cli
cli
hlt
cli
(bad)
pop
push
test
js
xchg
mov
lahf
ds
div
xchg
fild
lahf
ds
mov
(bad)
out
xor
jl
xchg
imul
stos
cli
out
jb
jle
adc
int3
dec
pop
xchg
(bad)
idiv
jnp
outs
dec
stc
vcomisd
addr16
mov
push
retf
stc
retf
stc
mov
push
mov
mov
in
leave
retf
lahf
mov
push
out
std
aam
js
stc
mov
cmp
jns
mov
cmc
push
pop
ss
dec
xor
mov
hlt
jnp
(bad)
out
retf
cmps
imul
(bad)
call
cmp
mov
stc
xchg
fild
repnz
xor
enter
and
inc
leave
cld
pop
mov
cmp
loopne
adc
mov
and
mov
repz
iret
jmp
and
in
(bad)
and
jle
pop
(bad)
ds
scas
mov
(bad)
test
adc
daa
addr16
(bad)
cmc
imul
int
push
mov
cld
retf
ja
sti
jae
and
jg
(bad)
scas
xchg
scas
sub
pushf
jle
push
popw
(bad)
scas
fwait
cmps
aas
dec
mov
mov
pop
xchg
mov
std
in
dec
retf
daa
mov
dec
cld
les
mov
into
out
xchg
aas
mov
sti
xor
scas
ficomp
lods
mov
fistp
lock
(bad)
mov
sti
mov
int3
imul
std
hlt
xchg
sti
mov
scas
xchg
push
dec
cs
scas
jg
(bad)
daa
jle
lahf
retf
xlat
js
cmps
push
push
add
lea
int
shr
add
out
push
jg
sti
dec
jle
cld
vpsrlq
in
inc
push
icebp
iret
jmp
out
xchg
and
jle
add
jecxz
loopne
mov
repnz
retf
bound
leave
cmps
stc
repz
out
out
jg
sar
push
je
dec
add
das
push
into
jg
daa
mov
outs
xlat
pop
mov
mov
inc
mov
dec
mov
in
lahf
test
hlt
aad
xchg
mov
popf
mov
jmp
mov
mov
dec
fldcw
push
push
fnstenv
pop
lods
retf
xchg
push
int3
repnz
test
ja
stc
jnp
jg
(bad)
scas
xchg
out
out
out
pop
jg
repnz
cli
loop
cmc
pop
sbb
leave
stc
cmps
jns
jnp
and
cli
fild
fucomip
repz
inc
(bad)
jnp
pop
sar
in
pop
inc
push
(bad)
imul
adc
out
ret
pop
sbb
ret
mov
mov
ds
xchg
and
sbb
fld
sub
cwde
rcr
cmp
jle
jno
icebp
adc
xchg
cmp
sbb
int3
dec
out
mov
vpmaxub
cmc
cli
neg
dec
jno
cmps
lods
or
(bad)
in
loop
pop
cmp
cld
js
popf
ja
out
mov
xchg
pop
jmp
mov
xor
pop
pop
(bad)
aam
aas
popa
pop
mov
loopne
adc
in
xchg
lahf
jge
jmp
js
in
fnstsw
jmp
js
or
imul
call
fwait
dec
pop
fs
ficom
aas
jns
xchg
and
aas
stc
sti
mov
dec
imul
pop
test
mov
test
out
call
test
std
inc
mov
daa
jle
addr16
push
pushf
popf
dec
push
sti
dec
fwait
out
pop
dec
jle
clc
jmp
mov
cmps
stos
loop
mov
repz
retf
(bad)
xlat
cmp
sub
shl
repz
shr
cmp
sub
je
popa
dec
in
mov
mov
in
clc
jle
hlt
cmc
repz
mov
ret
stc
frstor
fnstsw
jbe
std
jmp
mov
cmc
in
fldenv
pop
out
fist
xchg
cmc
out
pop
pop
jl
clc
lds
cld
repnz
sub
leave
aad
cmp
cmp
jnp
cmp
sti
in
pop
cmp
xchg
das
mov
pop
lods
scas
sahf
xchg
inc
ds
sar
in
ficom
pop
std
je
mov
jl
in
lods
(bad)
out
repnz
adc
aas
inc
or
cmp
pushf
pop
shr
sti
jmp
cmp
pop
out
sbb
xlat
in
jmp
xchg
pop
arpl
repnz
dec
fsin
in
pop
lahf
jle
stc
mov
das
jg
repz
jecxz
scas
sahf
xchg
xchg
pop
hlt
lock
mov
lahf
jp
(bad)
jnp
cmp
icebp
in
and
pop
out
in
fild
mov
mov
jle
retf
das
neg
dec
in
outs
fidivr
loope
retf
push
jmp
adc
cmc
fnsave
mov
cmp
jg
cli
loopne
jns
repz
cmp
test
outs
mov
lods
imul
ja
retf
out
out
out
jne
jg
(bad)
jmp
stos
lahf
cmp
xor
jle
repz
outs
mov
stc
jnp
fwait
(bad)
add
ja
movzx
mov
repnz
mov
jmp
fdivrp
into
stos
idiv
je
jnp
aas
pop
jl
out
mul
jnp
std
loop
in
push
dec
xor
jmp
out
movs
int
out
std
loop
imul
ds
xchg
or
fwait
pop
mov
sti
pusha
stc
cli
repnz
xchg
pop
shr
enter
std
jmp
mul
sahf
mov
in
loop
js
imul
or
movs
or
fwait
cmp
push
sbb
mov
xlat
clc
loop
jge
aas
mov
jl
jp
jge
jp
mov
stos
xchg
jmp
(bad)
loop
jp
hlt
jmp
clc
mov
in
shr
xor
cli
mov
lahf
cli
loopne
addr16
in
popf
call
stc
stos
jp
cli
cli
jp
jnp
in
cmc
jp
cld
push
das
nop
sub
xor
jnp
xlat
outs
fnstsw
sti
leave
cli
stos
xchg
shr
cmp
mov
pop
pop
aas
mov
aaa
mov
cli
fld
mov
sub
repz
imul
hlt
retf
jmp
out
jg
push
jnp
sti
mov
jmp
in
mov
repnz
leave
mov
sti
mov
push
in
fdivrp
into
retf
popf
jmp
(bad)
jg
in
xchg
stc
repnz
lock
sahf
out
fdivr
std
scas
sub
fmul
mov
stos
jne
jecxz
pop
jecxz
pop
in
loop
fistp
push
lahf
(bad)
push
das
jle
in
ja
jg
xlat
cwde
(bad)
in
popf
xchg
idiv
stos
lahf
jle
std
dec
icebp
in
mov
out
call
xchg
out
neg
cmp
ja
adc
(bad)
loop
sub
addr16
icebp
movs
js
imul
int
scas
cmc
fnstenv
jnp
pop
cmp
hlt
or
pusha
push
ds
xor
jge
sti
pop
out
pop
aas
push
clc
repz
push
mov
arpl
ss
push
mov
dec
test
ret
into
sbb
clc
fist
(bad)
repz
out
sub
out
mov
fs
(bad)
(bad)
aad
in
enter
pop
xor
into
out
xor
test
popf
out
xor
call
in
sub
pop
data16
das
leave
sub
dec
dec
mov
cs
daa
adc
rcr
jnp
push
cli
xlat
clc
mov
repz
jb
mov
fidiv
mov
in
out
inc
jp
fxch
fistp
mov
dec
dec
std
fisub
mov
repz
imul
mov
shl
fnstenv
lea
mov
aaa
aas
aad
fwait
out
xchg
outs
fwait
pop
cmp
int
jmp
pop
jg
stos
or
mov
ja
jbe
mov
leave
icebp
in
mov
pop
pop
pop
push
scas
jle
pop
pop
cmp
jle
fs
imul
out
fld
mov
std
test
jmp
lahf
clc
repnz
dec
(bad)
mov
pop
out
aaa
out
fidivr
imul
aas
cld
jmp
jp
mov
mov
inc
jne
cld
stos
lds
das
jle
pop
hlt
xchg
dec
jg
pop
mov
jp
stc
dec
int
jle
int
imul
popf
pop
adc
scas
fidivr
ja
jl
out
xlat
js
(bad)
pop
fistp
adc
mov
push
jle
loop
js
popf
in
mov
clc
into
stos
cmps
cmp
jg
xor
xor
mov
fistp
pop
pop
in
jl
int
(bad)
jecxz
repz
push
jno
imul
out
clc
jb
jns
cmp
mov
jl
std
test
mov
inc
sub
fscale
retf
mov
fst
repnz
cwde
call
cli
stos
ja
mov
jne
out
mov
mov
sti
imul
scas
mov
mov
inc
ftst
fimul
pop
lds
jns
cmc
in
jecxz
das
mov
cmc
(bad)
in
ret
pop
jecxz
loop
test
shl
out
mov
repnz
fstp
std
adc
shr
(bad)
in
stos
aad
fxch
jmp
stos
pop
jecxz
ror
shr
stos
fild
scas
lahf
xor
sub
or
jbe
lahf
cld
aam
jg
imul
mov
daa
aas
cmps
test
dec
aas
std
jge
fs
out
ja
aad
enter
xchg
jnp
pop
pop
dec
dec
jle
cld
cmps
jmp
inc
mov
stos
sub
into
add
imul
pop
cmp
jg
and
aas
fld
leave
call
repz
les
scas
mov
movs
iret
es
lahf
pop
jle
push
fistp
aad
leave
fimul
in
int3
cmps
aas
aad
mov
ds
idiv
cmp
sti
mov
loop
lds
mov
imul
test
cld
fidivr
in
out
int
daa
out
mov
sbb
jl
jnp
je
jmp
aad
cld
pop
lahf
pop
scas
into
fistp
rcl
sahf
out
(bad)
hlt
jmp
jge
aad
jmp
jmp
jle
repz
mov
pop
jecxz
stos
pop
hlt
jmp
jmp
fwait
pop
hlt
ins
scas
stc
into
aad
xlat
mov
daa
xlat
pop
mov
call
out
cmc
jmp
mov
cmp
adc
jl
repz
out
dec
mov
das
imul
in
stos
xchg
aad
pop
xlat
aad
dec
cmps
xlat
mov
pop
cmp
js
(bad)
xor
mov
shl
neg
cmp
imul
xor
addr16
xlat
jmp
dec
cmc
fwait
lahf
cld
mov
xor
shl
out
mov
xchg
mov
xchg
sti
imul
xlat
fprem1
jmp
das
neg
retf
ja
loopne
and
xlat
mov
dec
pop
mov
jns
mov
addr16
xchg
jl
jmp
in
in
clc
cli
in
ror
mov
mov
out
out
(bad)
xchg
(bad)
imul
dec
jg
cli
movs
mov
jle
jns
jmp
dec
jg
mov
imul
jl
jg
retf
stc
in
shl
setle
stc
dec
jl
mov
(bad)
fstp
sti
pop
std
ds
jle
jmp
fucomip
stos
cmc
xchg
addr16
out
fistp
mov
sbb
(bad)
pop
jmp
(bad)
out
popf
push
scas
mov
lahf
fdivr
xor
fistp
idiv
pop
jge
push
dec
out
pop
out
mov
(bad)
fucomip
ja
mov
cmp
in
fstp
fimul
in
ficomp
(bad)
std
fisub
nop
sti
xor
call
icebp
in
in
scas
jg
pop
in
das
cli
push
xchg
and
outs
mov
jmp
mov
out
std
test
jno
div
out
repz
jl
pop
adc
inc
aad
sti
inc
mov
xlat
js
out
rcr
sub
add
or
movs
(bad)
fild
ja
mov
dec
fs
test
das
push
fldl2e
sub
pusha
je
rol
and
fwait
das
(bad)
hlt
aad
inc
push
out
clc
sub
dec
mov
addr16
(bad)
retf
sub
push
dec
fistp
cmc
int
enter
push
gs
xor
ins
ins
xchg
push
cmp
lock
dec
cs
in
xlat
test
(bad)
not
cmp
xor
mov
stc
xor
xlat
sbb
daa
sub
add
enter
pop
push
fdivr
mov
push
add
sbb
mov
lea
(bad)
pop
mov
pop
mov
mov
mov
mov
jnp
mov
push
and
xchg
(bad)
std
xor
aam
mov
mov
lea
fisubr
out
in
in
pop
arpl
(bad)
mov
imul
xor
mov
mov
lahf
adc
fsub
(bad)
jle
(bad)
cmp
pop
sbb
lock
sbb
out
inc
loopne
add
jnp
mov
ret
cmp
mov
outs
jmp
xchg
stc
xor
jg
(bad)
stc
addr16
sbb
jg
scas
stc
fldcw
das
push
xor
xlat
clc
or
mov
dec
(bad)
idiv
call
pop
std
jmp
mov
cld
sbb
loope
scas
cmc
fstp
add
adc
mov
aad
call
mov
cld
fsub
icebp
out
out
(bad)
scas
icebp
imul
(bad)
jecxz
repz
clc
call
jmp
xchg
inc
outs
sbb
xchg
xlat
test
xchg
xchg
call
imul
ins
cdq
out
push
mov
jmp
lock
mov
push
dec
mov
in
mov
add
push
mov
scas
icebp
imul
mov
jle
pop
pop
cwde
call
mov
cld
(bad)
jg
outs
(bad)
scas
daa
(bad)
jle
(bad)
jmp
jne
add
(bad)
scas
icebp
imul
mov
std
sar
inc
aas
jg
aas
call
fistp
xlat
(bad)
cmc
jle
hlt
xlat
cli
cmc
jle
cli
icebp
clc
xlat
stc
cmc
jg
fnstsw
aaa
clc
jne
lea
xlat
cld
popf
jle
pop
setg
push
mov
push
ret
fnstsw
aaa
clc
popf
icebp
cli
scas
cmc
cmp
fidivr
neg
scas
stc
cmp
dec
mov
std
ss
call
jg
outs
repnz
dec
mov
(bad)
pop
mov
jle
scas
cmc
imul
pop
repz
dec
jle
(bad)
psubd
jg
fbld
int
int
(bad)
pop
cli
or
xlat
sti
in
jg
fucomip
aaa
rcl
sbb
or
add
imul
mov
jg
fisttp
std
into
mov
mov
push
fucomip
aaa
clc
cmc
jle
pop
push
cld
or
ds
outs
clc
fwait
std
call
shr
ror
je
call
or
fwait
adc
dec
test
pop
out
jecxz
dec
jg
(bad)
xlat
cli
popf
jg
and
out
inc
(bad)
aas
clc
sbb
fdivrp
stos
jg
aas
call
mov
sbb
fsub
xlat
bound
push
lock
inc
lock
xchg
cld
pop
mov
std
(bad)
mov
call
mov
fisttp
jle
aas
call
(bad)
aas
call
stc
fwait
cld
cli
jmp
es
out
push
imul
or
mov
je
daa
inc
(bad)
mov
ja
idiv
hlt
fild
jle
pop
push
inc
sub
(bad)
cmp
mov
mov
push
mov
fbld
dec
popf
fisttp
std
out
(bad)
sti
push
mov
std
dec
pop
cmp
sbb
(bad)
scas
iret
mov
out
loopne
and
cld
popf
jle
and
std
cmps
mov
std
es
into
data16
fisubr
cld
aad
mov
pop
out
clc
cmp
fucomip
xlat
(bad)
mov
mov
lahf
adc
fistp
xlat
cmps
push
jg
mov
out
cmp
aaa
clc
mov
jecxz
(bad)
stos
pop
aas
std
mov
dec
sbb
mov
cmc
int3
test
repnz
jle
pop
repz
and
cld
mov
je
mov
(bad)
cli
mov
test
inc
or
loop
mov
div
stc
jne
or
xor
scas
std
imul
loope
hlt
icebp
outs
hlt
imul
inc
mov
(bad)
mov
scas
ret
pop
jmp
test
xlat
sti
lea
cli
sub
jmp
clc
cmp
sub
mov
sub
fild
lods
inc
mov
fstp
loopne
pop
xchg
or
pop
fdivr
in
(bad)
jne
movs
(bad)
jle
ins
psubusw
or
scas
std
imul
clc
div
inc
stc
imul
cmp
jg
mov
dec
add
pop
(bad)
jmp
cli
mov
std
out
push
loope
aas
jle
pop
out
xlat
ror
jle
cli
inc
cli
or
jg
cmp
jmp
push
mov
mov
push
jmp
push
sub
stc
imul
aas
imul
cli
mov
cld
jp
stc
pop
hlt
(bad)
loope
aas
or
cld
push
mov
(bad)
sub
out
cld
sbb
push
jg
pop
inc
repz
and
clc
cmp
fild
popf
jle
cld
sti
fwait
cld
movs
out
call
cmps
mov
scas
or
enter
fisttp
test
(bad)
call
dec
cmp
cli
cmc
mov
aaa
stc
cmc
mov
stos
jle
dec
sti
(bad)
stc
imul
mov
out
rcr
arpl
jmp
mov
(bad)
scas
pop
pop
jle
dec
dec
stos
fild
cli
int
mov
and
(bad)
outs
icebp
pop
std
loope
lds
cld
jmp
add
dec
jle
pop
pop
fucomi
cmp
out
hlt
arpl
out
outs
pusha
sar
push
enter
call
pop
(bad)
fsubr
bnd
out
leave
outs
repnz
push
jg
outs
dec
(bad)
sti
dec
mov
ret
pop
cld
sar
jbe
or
int3
pop
cld
fwait
xchg
in
push
cld
fld
jecxz
mov
xlat
add
adc
jg
jl
imul
out
outs
mov
(bad)
jmp
xchg
aas
call
pop
sahf
fnstcw
jg
fucomip
xlat
dec
call
neg
add
cmc
pop
(bad)
sbb
jb
in
icebp
pop
(bad)
call
sar
hlt
aas
and
or
jmp
(bad)
loopne
sbb
out
dec
ja
mov
fwait
or
mov
xor
sar
daa
std
out
mov
int
loopne
cmc
xlat
ret
pop
add
pop
sub
fucom
ds
loopne
stc
add
mov
xor
test
mov
sbb
retf
pop
lahf
jg
dec
jle
jl
js
cdq
je
sbb
mov
xor
jbe
xchg
(bad)
lock
jecxz
out
sub
sub
nop
cld
dec
xor
ds
fdivrp
pop
pop
loop
ja
mov
jmp
test
pop
push
cmp
pop
push
(bad)
xchg
nop
(bad)
or
xlat
dec
(bad)
sti
mov
mov
neg
lock
mov
loopne
(bad)
xlat
push
or
pop
dec
fistp
or
push
xor
jg
leave
xlat
out
hlt
cmp
aas
mov
inc
bound
cld
dec
sub
mov
test
mov
mov
outs
and
add
outs
cld
fwait
mov
jmp
add
sub
mov
outs
and
sti
or
pop
and
jg
xchg
fild
mov
lock
adc
jns
xor
aaa
xor
and
shl
repnz
jl
pop
in
movntq
or
pop
cwde
fisttp
push
ss
(bad)
fidivr
pop
or
cld
ja
mov
add
fwait
xor
repnz
xor
std
fild
jmp
in
aas
clc
in
aaa
pusha
je
jnp
out
jmp
xor
jl
fisubr
pusha
addr16
mov
outs
pushf
(bad)
cmp
outs
mov
inc
xor
ror
loop
dec
cmps
popf
ds
mov
jg
pop
dec
(bad)
xlat
in
mov
xchg
push
mov
outs
rcr
fbld
movs
add
lock
scas
lea
sbb
cmc
xchg
mov
loopne
(bad)
paddd
mov
add
inc
mov
add
psubw
and
mov
xchg
fild
mov
std
(bad)
scas
or
icebp
ja
inc
icebp
paddd
jmp
lock
cli
mov
mov
lea
pop
sti
xlat
sti
sub
xchg
jg
hlt
dec
iret
scas
(bad)
and
ds
out
adc
cld
lea
sahf
stos
mov
add
dec
out
std
aad
sub
pop
cld
xlat
fstp
es
cmp
xor
scas
and
ins
xchg
aaa
xor
jg
aas
clc
outs
addr16
retf
jg
pop
inc
sbb
(bad)
(bad)
fild
adc
sti
jg
aas
clc
pop
pushw
sti
out
mov
mov
jne
jle
and
jge
pop
push
ins
loope
fist
inc
jns
pop
cmps
fistp
test
sar
cli
xchg
test
iret
jg
(bad)
cld
mov
pop
mov
clc
cmc
jg
fistp
and
(bad)
pop
add
loop
mov
jmp
cmc
cli
jmp
xlat
mov
jmp
icebp
jb
or
(bad)
lahf
cs
add
inc
sbb
jmpw
je
cmove
cld
arpl
jecxz
xchg
pop
call
jle
xlat
push
mov
test
or
call
adc
leave
scas
cmc
cmp
cli
mov
std
pop
arpl
mov
inc
(bad)
jmp
hlt
xlat
cli
sub
pusha
pop
call
dec
sbb
or
nop
pop
xchg
(bad)
repnz
dec
mov
mov
jecxz
cli
dec
jle
pop
lahf
in
aaa
and
enter
cld
and
mov
jmp
data16
inc
out
dec
jg
fild
icebp
pop
pop
arpl
(bad)
dec
pop
jle
js
in
cld
sbb
mov
cmc
jg
xor
push
xchg
std
push
in
out
cld
sbb
push
adc
mov
xlat
add
hlt
dec
sub
or
cmp
mov
fdivr
fidiv
jbe
(bad)
jo
xor
mov
outs
jg
(bad)
addr16
icebp
lahf
lds
pop
hlt
pop
inc
cmp
dec
jb
sbb
imul
push
xchg
mov
ss
lahf
mov
jmp
fwait
aas
call
lea
ror
std
mov
shr
jl
xchg
ror
cmp
jecxz
sub
(bad)
mov
jne
adc
sti
or
std
mov
cmp
fbld
into
aas
mul
inc
mov
add
xor
aam
or
xchg
or
test
cli
sbb
(bad)
xor
dec
mov
sti
mov
jle
jb
jg
scas
icebp
fwait
std
sbb
jno
hlt
das
xchg
outs
lds
push
fs
sbb
out
rcr
aas
mov
cli
mov
std
pop
mov
jl
cli
stc
sbb
xchg
aas
mov
call
xchg
dec
jp
cmp
imul
mov
(bad)
in
add
aas
fwait
enter
pop
(bad)
fild
fsubrp
pop
jmp
clc
ss
bound
imul
mov
call
in
push
sub
add
sar
(bad)
in
hlt
xor
dec
aaa
clc
in
sub
int
loopne
push
fdivr
fwait
cld
dec
mov
xchg
cld
jp
inc
dec
imul
cld
jbe
outs
call
and
dec
call
out
hlt
dec
pop
mov
repz
(bad)
jmp
popa
jne
adc
lock
mov
stc
xchg
mov
jg
lahf
dec
xchg
std
fwait
cld
cli
mov
inc
jmp
lahf
xchg
mov
jg
sbb
mov
(bad)
pop
push
and
sbb
into
mov
sti
jmp
xor
and
pop
aas
push
mov
fisttp
inc
loopne
cld
lds
and
dec
push
in
lock
jle
div
xchg
nop
in
push
dec
call
loope
std
dec
popw
fs
push
in
xor
push
adc
ret
xor
hlt
(bad)
sbb
and
dec
out
cld
stc
hlt
fwait
cli
sub
adc
dec
push
jle
and
out
stos
dec
dec
jle
pop
push
fldcw
pop
jmp
sbb
mov
xlat
jo
push
inc
push
mov
(bad)
push
push
jnp
(bad)
jle
mov
loopne
std
jnp
cmc
outs
icebp
xchg
dec
jae
shl
out
fbstp
std
xor
repz
imul
les
aas
jmp
stc
cmc
jg
xchg
or
fisubr
xor
or
enter
lods
sbb
pop
lock
jbe
outs
stc
popf
mov
jle
(bad)
dec
sub
cli
or
loop
sub
loope
lods
and
outs
lock
mov
fsubr
xlat
cmps
inc
retf
or
ror
aam
mov
movs
or
mov
inc
cmps
(bad)
xlat
pusha
sbb
es
aaa
mov
popf
loope
inc
(bad)
call
xor
ds
mov
push
add
outs
inc
popf
mov
repz
popa
adc
mov
push
clc
mov
movs
stc
dec
enter
cmc
fwait
xor
lock
push
ja
das
and
fcomip
xlat
dec
popa
cmp
out
daa
out
inc
call
stos
dec
pop
push
pop
(bad)
sbb
cwde
ffreep
xor
mov
std
push
les
sahf
dec
cld
fild
(bad)
jbe
pop
adc
das
dec
outs
dec
aas
jg
cli
stc
cmp
xor
adc
fwait
sar
dec
sub
aas
js
mov
mov
aaa
clc
cmc
jle
das
das
jecxz
hlt
mov
out
hlt
xchg
fld
stc
or
xchg
inc
out
clc
xlat
cld
cmp
dec
popf
fwait
xor
clc
gs
das
mov
imul
mov
push
xchg
push
cli
xchg
xchg
es
ins
(bad)
mov
hlt
fild
cmp
into
aas
pop
out
mov
retf
jb
sub
mov
iret
nop
idiv
fnstsw
outs
aas
fistp
js
pop
cld
call
jmp
ret
arpl
inc
in
ret
inc
mov
sub
fscale
retf
shl
xor
fs
sub
ds
jg
shr
aad
repnz
pop
mov
cmc
jg
dec
cs
cmps
mov
out
or
mov
jg
mov
and
add
ins
jns
jle
sub
xchg
imul
and
(bad)
jne
push
sbb
pop
repnz
sbb
mov
pop
mov
cs
pop
pop
vmread
xchg
repnz
jo
out
add
and
call
push
xchg
xchg
cld
jecxz
fs
xchg
fdivr
cld
inc
call
cmp
sbb
std
fcomip
mov
inc
mov
aas
in
(bad)
sub
psubw
(bad)
rcl
xor
and
fwait
jmp
jg
outs
dec
adc
dec
into
retf
outs
shr
arpl
cmps
or
push
sbb
push
mov
mov
pop
inc
imul
scas
dec
push
and
std
enter
jg
sti
call
inc
jg
sbb
or
pop
push
pop
(bad)
jp
mov
push
push
dec
dec
jg
in
inc
pop
dec
repz
sti
mov
xchg
mov
inc
loope
call
out
jmp
mov
std
imul
leave
out
xchg
cld
out
enter
pop
sbb
repz
test
scas
cdq
mov
ss
sub
cmc
repnz
ds
inc
std
popf
jle
mov
mov
call
mov
mov
nop
pop
sub
aaa
cmps
mov
inc
push
clc
mov
dec
jg
je
(bad)
test
pop
leave
test
mov
mov
xor
mov
ficomp
mov
pop
sti
psubw
push
icebp
out
jmp
(bad)
mov
lahf
adc
cmpxchg
scas
mov
enter
fs
cmp
jle
and
inc
icebp
xlat
add
retf
test
sbb
dec
imul
pop
std
inc
mov
imul
(bad)
pop
mov
lds
cld
adc
cmp
outs
jg
mov
stc
iret
sub
pop
cld
and
xor
aaa
shl
out
add
pop
jmp
mov
jle
outs
inc
or
lods
popa
mov
jg
ja
daa
add
lods
rcl
add
ja
stc
cmc
jg
mov
fistp
std
jne
cmps
fild
dec
div
ja
lea
pop
inc
loope
pop
cli
arpl
retf
pop
xchg
jmp
mov
outs
mov
lds
ret
les
cwde
nop
pop
ret
dec
sub
loope
out
jg
pop
into
mov
adc
popf
and
std
popf
cmp
mov
sbb
stc
cmc
jg
(bad)
paddw
repz
sbb
out
paddd
fild
mov
pop
clc
les
stc
jmp
cli
xor
imul
xchg
mov
cld
jbe
(bad)
arpl
mov
add
dec
xchg
cmp
aaa
std
jne
rcr
fdivr
xlat
clc
dec
jg
cli
xor
setae
or
cmp
leave
pop
or
mov
stc
mov
xor
out
fucomip
aaa
loope
loopne
xchg
gs
sbb
mov
or
(bad)
std
push
aas
(bad)
call
xor
jno
stc
in
add
out
(bad)
paddusw
int
rcr
test
xchg
out
bound
call
sti
test
outs
and
add
cmp
repz
cli
nop
pop
xchg
jle
enter
sbb
ja
lods
jg
fild
rcr
dec
mov
jo
add
in
(bad)
xlat
std
xor
pop
out
(bad)
jle
fcomip
mov
in
or
fucomip
(bad)
jle
xchg
inc
ins
loope
movs
sbb
(bad)
rcr
mov
mov
fcmovnbe
scas
xchg
mov
mov
ret
out
cmps
jmp
and
inc
or
lods
pop
sti
dec
jg
pop
sti
cmc
jle
pop
sti
(bad)
jle
pop
test
hlt
xlat
(bad)
xchg
scas
stc
mov
rcr
inc
mov
mov
scas
jnp
fwait
and
inc
jae
das
movs
mov
not
in
xor
aam
mov
aaa
mov
adc
cld
fsubr
inc
cdq
test
dec
rcl
(bad)
movs
jbe
(bad)
jmp
fisttp
or
aaa
in
clc
mov
hlt
(bad)
hlt
rcr
(bad)
in
sbb
ror
jmp
call
out
mov
jle
(bad)
jle
outs
sti
jmp
aam
or
int3
imul
jge
lods
icebp
shr
xlat
outs
or
push
loope
std
xor
sti
aaa
popa
retf
enter
outs
jle
mov
mov
sbb
mov
pop
cld
cmps
loope
aas
imul
(bad)
sbb
aaa
stc
jne
fs
aaa
jnp
pop
adc
pop
sar
sub
stc
dec
jle
lahf
aaa
stos
ins
call
out
(bad)
(bad)
sub
dec
stos
(bad)
jl
enter
scas
push
gs
int
in
stos
outs
sbb
fucom
mov
pop
mov
test
repz
jecxz
clc
add
jg
imul
mov
fst
pop
repz
clc
cmp
fidivr
fadd
or
mov
imul
call
bound
fcomip
imul
das
jmp
cld
mov
(bad)
jle
jnp
pop
pushf
jl
retf
xchg
jmp
jle
std
mov
scas
push
jnp
das
stos
lahf
ds
(bad)
das
out
pop
mov
dec
repz
idiv
dec
not
ja
outs
aas
mov
jb
(bad)
(bad)
outs
push
push
das
push
mov
(bad)
sahf
mov
cmp
clc
std
out
jg
sti
mov
xchg
cld
xor
stc
pop
hlt
sti
std
sbb
in
ror
addr16
out
dec
(bad)
fstp
test
stc
hlt
(bad)
stc
(bad)
scas
(bad)
xor
mov
stc
addr16
outs
jns
paddd
jb
daa
std
jmp
in
scas
push
cli
dec
ds
(bad)
aad
sar
mov
push
leave
scas
cmc
retf
(bad)
jg
aas
cld
xchg
push
outs
jmp
ret
jg
fcomip
aas
pop
sbb
fcomip
out
scas
jle
jg
xor
dec
std
jp
(bad)
aas
(bad)
stos
sahf
jg
scas
clc
pop
jg
pop
repnz
(bad)
push
jg
fbstp
repnz
leave
push
std
add
fsubr
cld
stc
aas
stc
xchg
inc
int
stc
pop
cld
(bad)
jg
das
inc
cli
in
(bad)
(bad)
jmp
in
pop
aas
sti
imul
(bad)
in
loope
mov
ret
fucomip
pop
(bad)
ins
cmp
loop
cld
xchg
call
inc
pop
jecxz
std
cmc
push
fcomip
mov
cli
xchg
mov
mov
outs
cli
mov
std
jg
scas
stc
pop
jmp
cld
ret
(bad)
fistp
cmc
(bad)
cs
aas
js
jnp
dec
jg
cmps
jg
pop
push
cld
cmps
mov
stc
out
lahf
aas
imul
pop
aas
idiv
std
cmc
scas
(bad)
mov
cmp
xchg
(bad)
iret
js
sbb
scas
mov
(bad)
fdivr
dec
outs
jmp
paddb
mov
inc
jmp
aas
(bad)
(bad)
out
jl
scas
cld
scas
sti
jg
scas
std
xchg
inc
call
clc
ins
jmp
(bad)
sub
(bad)
in
jg
mov
daa
cld
scas
push
pop
(bad)
pop
ds
outs
test
xchg
(bad)
mov
dec
loop
(bad)
cmp
xchg
pop
ds
in
mov
add
stc
push
xchg
dec
idiv
aas
std
mov
lahf
jmp
jg
fistp
cld
cmp
ja
mov
sti
push
dec
shl
fstp
leave
jmp
jle
stc
out
das
clc
jne
jg
movd
outs
mov
mov
aas
jmp
sti
mov
(bad)
pop
jp
iret
std
mov
jecxz
jle
lahf
(bad)
lahf
(bad)
cmps
pop
outs
(bad)
fcmove
hlt
pop
jmp
outs
imul
das
push
lahf
sahf
cld
xchg
inc
shr
jg
in
jg
idiv
xlat
dec
into
dec
std
(bad)
dec
outs
clc
xlat
cld
fidivr
cmp
mov
(bad)
mov
(bad)
cmp
(bad)
xor
out
cmc
out
std
mov
sti
leave
jg
lahf
mov
pop
out
std
popa
mov
cld
or
mov
daa
mov
pop
inc
pop
cli
(bad)
xchg
lods
jg
icebp
stos
mov
call
das
pushf
cld
adc
hlt
pop
repz
mov
icebp
inc
pop
div
inc
lahf
cld
addr16
(bad)
daa
into
jmp
cld
mov
(bad)
(bad)
mov
out
std
daa
(bad)
fidivr
(bad)
out
push
dec
cmc
pop
cli
jmp
sub
lahf
std
xchg
jg
outs
cld
pop
(bad)
pop
int
test
sti
mov
pop
dec
std
cmp
push
mov
dec
jmp
cmp
pop
lock
push
inc
jmp
lds
push
mov
lahf
jbe
mov
inc
(bad)
fistp
(bad)
aad
jmp
(bad)
scas
cmc
mov
jg
(bad)
mov
dec
dec
ds
cmc
out
(bad)
outs
jmp
std
mov
(bad)
pop
(bad)
in
(bad)
paddd
jno
fwait
scas
jg
jg
(bad)
aas
bnd
(bad)
clc
outs
(bad)
jmp
sti
jge
out
stos
jg
jg
dec
mov
(bad)
(bad)
mov
jg
ret
dec
inc
jg
scas
cld
sub
adc
pop
jecxz
inc
jg
mul
outs
push
(bad)
idiv
rcr
or
pop
(bad)
fwait
std
iret
jg
outs
repz
(bad)
jge
mov
mov
iret
jmp
(bad)
push
stc
imul
aas
repz
(bad)
(bad)
lahf
jmp
jg
cld
aas
jmp
jg
jmp
cmp
repnz
mov
(bad)
sti
(bad)
cmp
push
jg
jg
(bad)
jmp
in
jge
ja
retf
daa
(bad)
xchg
jmp
jnp
pop
(bad)
jle
int3
jg
imul
ins
pop
jl
repz
xlat
jmp
daa
call
out
clc
out
std
or
cld
into
in
fcomip
aas
(bad)
sbb
repnz
sti
idiv
sbb
mov
lds
sti
jg
dec
cld
push
push
xchg
jg
aas
(bad)
out
cld
sub
jg
(bad)
(bad)
fistp
fucom
(bad)
cld
out
test
out
sahf
std
push
mov
cld
daa
call
pop
stc
(bad)
pop
call
scas
sti
pop
std
push
in
out
cld
pop
(bad)
clc
out
jg
outs
(bad)
in
pop
das
(bad)
jmp
jg
push
(bad)
mov
movs
xlat
jg
pop
sti
sbb
jp
(bad)
out
test
jg
aas
mov
ja
ins
(bad)
xchg
daa
(bad)
(bad)
lahf
(bad)
daa
jg
sti
pop
std
inc
jg
jg
adc
test
stos
sar
aas
(bad)
mov
fsub
fbld
jg
pop
js
cmp
fsubr
js
cmp
xor
ja
cli
aas
out
cli
jne
iret
(bad)
iret
sbb
addr16
xlat
jmp
das
(bad)
repz
fnstsw
loopne
mov
mov
fidivr
(bad)
dec
icebp
fistp
fucomip
lock
dec
dec
jg
das
cli
jmp
loope
lahf
(bad)
jae
std
fisttp
pop
cld
(bad)
mov
(bad)
mov
inc
(bad)
stc
fcomip
in
scas
aas
pop
(bad)
pop
push
aas
sti
fstp
es
clc
mov
fidivr
jmp
aad
cmp
imul
mov
dec
mov
mov
xchg
jle
jnp
lahf
(bad)
mov
in
std
daa
inc
jg
xor
cld
fidivr
mov
stc
inc
jg
mov
sub
lahf
clc
push
scas
(bad)
hlt
jnp
retf
clc
pop
clc
fdivrp
aas
stc
sbb
inc
pop
jmp
aas
icebp
xlat
call
pop
cld
adc
int
out
fidivr
std
jg
sahf
call
dec
call
xor
jecxz
jmp
mov
ds
inc
iret
dec
xchg
lods
push
lahf
push
inc
daa
call
das
std
out
in
lahf
std
fist
mov
dec
mov
and
cmps
mov
xor
cld
pop
inc
movq
aas
clc
ja
pop
call
pop
cld
adc
inc
std
mov
jnp
dec
jmp
repnz
stc
xlat
dec
fcomip
sti
cld
inc
mov
idiv
ud0
jg
out
lock
(bad)
ja
out
xlat
cld
mov
lds
inc
cld
stos
push
(bad)
out
pop
cli
push
jg
mov
iret
(bad)
(bad)
aas
call
cld
jne
jle
mov
xchg
jg
call
dec
mov
jg
push
repnz
mov
inc
jg
xlat
jns
cmp
jns
fwait
in
cld
mov
jne
addr16
xchg
mov
lahf
jmp
aad
div
mov
mov
jmp
mov
(bad)
jmp
in
(bad)
cld
pop
std
jae
(bad)
mov
lds
pop
repz
std
fnstsw
fistp
pop
inc
les
std
out
aas
icebp
xchg
(bad)
jg
(bad)
outs
call
mov
aas
clc
jnp
cld
adc
(bad)
out
(bad)
clc
in
out
cld
cmc
jmp
std
jge
hlt
movd
aas
(bad)
mov
aas
in
jg
outs
clc
xchg
(bad)
fcomp
repnz
mov
pop
(bad)
in
jmp
out
inc
iret
jg
fistp
cld
stc
inc
idiv
jmp
std
mov
iret
mov
into
das
clc
sub
aam
in
cmc
scas
pop
cmp
xchg
retf
jmp
jge
das
inc
outs
ins
std
iret
push
mov
shr
push
inc
fcomip
push
jle
idiv
das
(bad)
fdivr
sti
ud0
fcmovne
call
(bad)
stos
jmp
repnz
xchg
fnstsw
out
sti
or
(bad)
dec
call
fwait
(bad)
jmp
mov
repz
jge
cld
jg
aaa
cmp
and
xchg
fcomip
lahf
cld
leave
push
out
jg
pop
call
scas
jg
cmps
mov
stc
xor
loope
div
std
iret
inc
mov
sti
cld
mov
xor
jmp
(bad)
jle
(bad)
lods
jle
in
std
loop
jg
aas
cdq
aas
cli
sub
fiadd
(bad)
cld
(bad)
lahf
test
lds
fdivr
stos
ja
cli
cmp
retf
pop
push
pop
std
iret
(bad)
xchg
mov
(bad)
cmc
jmp
icebp
sub
jg
jmp
out
(bad)
push
mov
or
mov
pop
imul
jg
fistp
sbb
cld
jge
clc
ins
jle
(bad)
cli
paddw
jg
jg
out
dec
(bad)
cmps
mov
(bad)
in
pop
dec
jmp
out
lahf
stc
imul
hlt
fwait
inc
bnd
pop
call
mov
jg
pop
clc
jg
icebp
jg
std
xchg
mov
dec
(bad)
scas
test
cld
and
dec
jmp
out
call
jg
mov
jmp
das
stc
das
call
sub
out
ja
pop
(bad)
mov
mov
(bad)
lahf
(bad)
std
mov
iret
inc
(bad)
repnz
jnp
in
loope
call
or
in
jmp
aas
cli
sbb
cdq
cli
lahf
stc
push
xchg
jmp
aas
mul
(bad)
mov
mov
mov
pop
jmp
aas
call
repnz
repnz
cld
mov
ja
mov
call
jg
cmps
cmp
sti
imul
icebp
jg
ja
sti
loope
test
lods
mov
clc
loope
cld
xchg
xchg
mov
(bad)
imul
dec
jg
(bad)
pop
cli
out
mov
in
clc
xor
mov
cmp
mov
out
clc
movs
std
pop
(bad)
sar
test
cld
and
fucomip
xlat
clc
iret
(bad)
jmp
cmc
push
call
out
cmc
pop
std
(bad)
jg
push
xlat
mov
icebp
mov
mov
inc
inc
icebp
pop
mov
jg
cmp
out
call
dec
push
(bad)
loopne
js
cld
ins
xchg
jg
pop
icebp
iret
(bad)
cmc
push
(bad)
jge
(bad)
jg
pop
idiv
mov
mov
jmp
cmp
jmp
rcr
cld
xchg
loop
cld
out
jg
mov
iret
cli
ud0
jmp
mov
xchg
mov
cmp
mov
into
(bad)
jmp
std
paddusw
aas
(bad)
mov
outs
std
repnz
std
add
iret
cld
add
pop
cli
jmp
cmps
jg
pop
push
(bad)
in
lahf
mov
out
cld
dec
mov
outs
call
mov
idiv
out
cld
(bad)
cld
pop
push
clc
pop
clc
aas
mov
(bad)
idiv
inc
(bad)
mov
jmp
cmp
aas
in
outs
mov
mov
lahf
cld
mov
fld
sti
addr16
jg
lahf
mov
aad
repnz
aas
clc
iret
jmp
pop
jg
pop
clc
xlat
cld
push
sar
clc
fstp
cmc
pop
mul
retf
(bad)
cli
fucomp
repz
cld
mov
ja
sbb
(bad)
hlt
lahf
clc
iret
mov
jg
pop
out
out
stc
pop
jg
fucomip
fnstcw
dec
jmp
aas
in
pop
clc
push
inc
(bad)
repnz
out
pop
std
sahf
repz
(bad)
cwde
pop
jg
pop
cmc
xlat
std
(bad)
jg
mov
xchg
std
into
mov
mov
jmp
jmp
hlt
mov
iret
xchg
mov
(bad)
idiv
mov
inc
dec
(bad)
jmp
retf
call
std
ud0
hlt
loop
clc
fimul
jmp
repnz
(bad)
bnd
loope
stc
fwait
inc
std
movq
jecxz
bnd
in
out
std
(bad)
mov
std
cdq
out
cmc
fcomip
stos
out
std
out
inc
aas
cld
mov
es
xchg
cmc
mov
aas
jl
(bad)
mov
(bad)
(bad)
pop
cli
xlat
cld
push
mov
clc
xlat
push
jg
outs
sti
das
jle
xchg
fucomip
pop
cld
jne
leave
jg
(bad)
mov
in
pop
clc
lods
jmp
repnz
test
cmps
(bad)
jecxz
js
pop
inc
out
jle
dec
(bad)
adc
mov
cld
(bad)
cli
imul
(bad)
clc
(bad)
stc
push
(bad)
das
mov
movs
(bad)
jbe
mov
cli
mov
sti
jmp
jge
addr16
fcos
out
out
lock
(bad)
mov
pop
mov
jge
imul
jb
jg
(bad)
call
jg
mov
in
idiv
lahf
call
dec
jle
out
push
(bad)
cmps
(bad)
xchg
mov
or
in
das
clc
sbb
(bad)
mov
jmp
popa
inc
lahf
clc
(bad)
mov
out
pop
je
std
xor
hlt
(bad)
cmp
fild
dec
int3
(bad)
(bad)
repnz
dec
cmp
das
call
mov
jg
sar
call
das
pop
jl
in
lahf
div
out
mov
enter
std
idiv
bnd
iret
sti
in
les
clc
sti
std
loop
std
scas
cld
(bad)
lods
jg
mov
or
loop
hlt
ud0
jge
mov
jmp
das
(bad)
hlt
cld
daa
ja
cmc
out
xchg
jg
pop
std
xlat
mov
aas
repnz
lods
call
test
xlat
(bad)
aam
pop
mul
jg
push
(bad)
jbe
iret
jg
adc
jg
scas
cld
xchg
lahf
sti
mul
xlat
push
outs
jg
pop
cmc
cmps
jl
mov
mov
retf
out
push
mov
in
jmp
(bad)
aaa
jg
jg
clc
sbb
stc
cmps
retf
ja
adc
xchg
mov
pop
call
and
test
idiv
idiv
push
cld
sar
retf
das
jmp
clc
(bad)
mov
lahf
cmp
das
pop
pop
cld
xchg
jg
lahf
lock
pop
jmp
(bad)
fldcw
(bad)
jg
(bad)
clc
jecxz
xchg
jg
call
jg
(bad)
(bad)
std
jle
mov
in
pop
clc
(bad)
add
stc
das
std
sar
mov
in
(bad)
repz
out
in
cld
jmp
iret
inc
jg
(bad)
mov
lods
aas
repz
std
xor
pop
(bad)
pop
cld
cmp
call
test
hlt
sub
(bad)
call
(bad)
mov
pop
std
jbe
(bad)
lahf
cmp
clc
xchg
inc
mov
pop
jle
(bad)
stc
lock
sti
inc
jle
pop
jge
(bad)
cld
cmp
mov
dec
dec
cmc
aas
push
std
jnp
clc
paddd
dec
(bad)
mov
inc
mov
jg
leave
jecxz
cld
(bad)
(bad)
(bad)
in
pop
repnz
push
jg
mov
idiv
push
jg
out
neg
xlat
jg
aas
sti
jg
arpl
inc
pop
(bad)
(bad)
mov
push
aas
sti
loopne
jge
sbb
dec
inc
fild
dec
jg
repz
pop
sti
cmps
inc
hlt
hlt
(bad)
std
jge
lock
and
jmp
xlat
(bad)
push
das
mov
sti
popf
(bad)
jg
std
jmp
and
push
out
clc
cdq
jmp
xlat
das
lahf
cld
pop
mov
(bad)
aas
repz
aas
jg
aas
dec
(bad)
sti
jl
dec
clc
dec
ds
addr16
jg
(bad)
cli
or
mov
jecxz
cmp
mov
in
(bad)
cld
dec
jle
addr16
(bad)
mov
std
fwait
mov
(bad)
jmp
pop
aaa
jnp
pop
(bad)
push
jmp
fnstsw
out
clc
aas
lahf
cs
clc
pop
imul
jmp
jg
mov
repnz
pushf
(bad)
stos
(bad)
jmp
(bad)
lods
scas
(bad)
mov
in
lahf
pop
pop
cld
sti
jg
pop
clc
loop
cli
cdq
aas
loopne
pop
stc
daa
push
and
jmp
std
out
popf
aas
call
(bad)
xchg
jg
mov
cli
pop
(bad)
das
mov
(bad)
aas
icebp
(bad)
push
pmaxsw
lahf
cld
dec
pop
cmp
pop
std
pop
mov
push
jg
dec
std
ins
call
mov
out
cld
jmp
jg
aas
loopne
(bad)
cmc
push
pop
outs
jge
dec
aas
dec
scas
push
icebp
mov
popf
in
(bad)
cli
call
outs
stc
adc
paddd
stc
in
mov
jg
jg
cmps
jmp
jg
pop
std
pop
scas
call
sar
mov
pop
clc
inc
jg
jnp
jmp
pop
repnz
aas
out
mov
shl
jmp
iret
inc
clc
mov
aas
cld
sub
push
push
orps
in
sti
(bad)
hlt
pop
(bad)
jnp
mov
(bad)
idiv
repz
pop
repz
outs
call
mov
jg
stc
jecxz
das
stc
pop
lahf
std
cmp
jle
aas
in
cli
(bad)
(bad)
jle
(bad)
mov
(bad)
into
push
aaa
jmp
dec
cmps
lds
in
hlt
cmp
mov
mov
movs
mov
aaa
pop
cld
ret
mov
cld
mov
out
popf
dec
jmp
stos
jg
mov
aas
in
cs
cmps
mov
jg
in
lods
(bad)
mov
out
jg
xor
sahf
aas
sti
out
std
(bad)
mov
std
jnp
mov
stos
(bad)
jle
fcomip
cli
jmp
mov
jmp
jne
jnp
xor
(bad)
fdivr
lock
xchg
jg
mov
mov
in
scas
repz
clc
pop
icebp
lds
mov
loopne
lahf
cmc
cmp
ds
(bad)
dec
jg
out
aaa
inc
aas
dec
cli
mov
hlt
daa
out
jge
paddw
mov
cmps
jle
scas
sti
(bad)
out
cld
pop
cld
out
in
mov
jno
fistp
jg
(bad)
jmp
popf
aas
out
outs
sti
pop
dec
mov
(bad)
in
jg
inc
std
ret
mov
std
pop
cmc
scas
iret
jle
mov
push
push
iret
clc
jmp
stc
fucomip
xchg
movs
mov
aad
(bad)
addr16
pop
cld
aaa
pop
int3
(bad)
fdivr
pop
(bad)
push
call
(bad)
lahf
call
std
addr16
das
stc
test
aaa
jg
push
xchg
std
aad
in
ud0
xchg
(bad)
std
out
push
mov
jg
pop
cld
or
cld
iret
(bad)
mov
dec
(bad)
jnp
lock
cmps
iret
push
cld
mov
jg
out
lahf
std
scas
mov
cld
sub
stc
cmps
call
add
fstp
pop
cs
pop
ficomp
(bad)
aam
cli
inc
dec
mov
sahf
aas
cli
aad
fucomip
outs
clc
into
scas
icebp
mov
add
xchg
dec
clc
das
mov
(bad)
jmp
jl
dec
(bad)
stos
(bad)
cld
out
std
mov
xlat
clc
in
(bad)
jnp
pop
dec
iret
(bad)
cmp
lahf
dec
(bad)
sar
loopne
push
imul
aas
jecxz
sti
xchg
in
jg
iret
cmp
push
inc
cmp
sar
sti
aad
ds
or
in
pop
std
sub
dec
(bad)
std
(bad)
clc
addr16
xchg
jg
in
sti
sti
(bad)
mov
push
scas
stc
stc
scas
clc
cmp
sar
mov
mov
icebp
mov
pop
(bad)
(bad)
cld
mov
in
aas
jge
setge
dec
(bad)
out
mov
pop
jg
aas
not
iret
pop
std
mov
mov
call
imul
fbstp
iret
(bad)
cmps
or
outs
clc
sbb
movs
mov
jmp
jmp
jecxz
mov
(bad)
dec
inc
addr16
outs
bnd
inc
sar
(bad)
xor
dec
scas
(bad)
(bad)
(bad)
stc
mov
pop
stc
daa
(bad)
push
mov
cld
repz
std
scas
jg
in
aas
stc
or
fucomip
iret
clc
pop
(bad)
jmp
std
mov
jmp
aas
inc
jg
mov
(bad)
(bad)
aad
pop
es
leave
push
xor
aas
stc
retf
push
cld
push
jg
pop
sti
pop
std
es
lods
inc
jg
in
test
fnsave
icebp
stos
(bad)
fidivr
idiv
adc
fwait
das
dec
mov
sahf
cmp
aas
dec
jmp
lods
paddd
jmp
jg
out
(bad)
out
enter
aaa
js
leave
push
jmp
les
(bad)
mov
out
cld
dec
call
jg
neg
lahf
cli
(bad)
movs
(bad)
fldcw
cli
inc
mov
jle
fistp
scas
mov
in
cmc
inc
cld
jns
repnz
lock
std
dec
fistp
mov
mov
fcomip
iret
sti
sti
dec
jle
mov
(bad)
lods
repz
(bad)
sub
out
(bad)
mov
aas
repz
in
pop
std
push
(bad)
xchg
lahf
clc
pop
call
out
pop
(bad)
fstp
call
push
repnz
sub
call
call
aas
icebp
jg
dec
inc
fcomip
mov
out
push
push
jg
ja
into
pop
test
(bad)
jg
jae
std
jmp
iret
cli
in
inc
mov
jmp
sti
cmc
jg
jmp
call
les
xchg
iret
cld
fwait
inc
(bad)
cld
das
cmp
lods
(bad)
std
dec
jg
aas
lock
mov
mov
jg
stc
pop
(bad)
stos
jg
(bad)
repz
mov
stc
mov
fcomip
(bad)
out
mov
xchg
pop
clc
aas
(bad)
mov
in
mov
lahf
jle
xchg
cmps
jg
aas
imul
clc
ja
leave
aas
imul
idiv
jg
repnz
cmp
xlat
inc
aas
clc
call
jecxz
ds
dec
jg
stc
(bad)
std
lods
jg
outs
clc
lahf
(bad)
ds
pop
(bad)
(bad)
das
mov
ja
jg
mov
jmp
fisttp
in
xlat
stc
xchg
(bad)
mov
aas
cmc
out
clc
mov
or
fstp
jg
fucomip
out
clc
(bad)
jg
xor
into
pop
jne
xlat
cli
lea
(bad)
mov
dec
(bad)
cli
mov
aas
repz
cld
(bad)
jg
inc
cld
push
(bad)
fdivr
(bad)
sub
iret
std
test
leave
out
std
sub
(bad)
(bad)
pop
cld
pcmpgtd
inc
data16
(bad)
jnp
es
jmp
out
std
icebp
jg
sbb
hlt
fbstp
xlat
jg
repz
(bad)
xor
cs
lock
popf
call
sbb
dec
inc
jle
(bad)
dec
inc
neg
in
fisubr
mov
sar
popa
cli
out
jmp
imul
fild
icebp
push
fstp
outs
icebp
scas
(bad)
pop
inc
(bad)
jle
fucomip
cmp
out
idiv
cld
repz
fcomip
cmps
cld
mov
(bad)
pop
std
push
cmc
mov
or
das
cli
jnp
sbb
(bad)
sti
lahf
cli
fwait
cs
mov
scas
pop
sti
mov
pushf
jg
ficomp
das
pop
std
sar
pop
clc
das
cld
or
outs
push
xchg
(bad)
out
out
clc
aas
(bad)
imul
jmp
aad
repnz
(bad)
cmp
out
icebp
push
cld
push
mov
leave
(bad)
cld
out
cld
push
(bad)
jmp
cld
jg
sbb
jmp
cmp
in
jmp
jmp
mov
std
cmp
aas
dec
jle
fstp
(bad)
jle
mov
pop
std
(bad)
jmp
mov
lahf
aas
std
fwait
call
xchg
inc
outs
div
pop
cmps
leave
in
aas
call
pop
jg
cmc
(bad)
clc
cmp
mov
daa
(bad)
aam
out
jnp
or
(bad)
aam
jmp
cld
sub
cmps
dec
outs
jns
addr16
jp
fbstp
leave
outs
clc
jnp
imul
sahf
mov
das
std
fwait
(bad)
(bad)
in
aas
hlt
jmp
and
cmp
pop
clc
mov
jg
inc
inc
(bad)
jmp
jg
cmps
jg
lahf
cld
inc
call
clc
call
std
sbb
das
retf
jmp
sbb
jg
out
daa
jg
das
(bad)
arpl
jmp
fcomip
ja
pop
push
repnz
neg
jmp
pop
push
sar
int
call
(bad)
push
jmp
push
jmp
imul
mov
dec
jg
sti
fstp
arpl
in
mov
(bad)
jmp
(bad)
fidivr
(bad)
mov
clc
aas
sti
or
push
(bad)
in
lahf
repnz
std
jne
aam
jle
fucomip
cmc
neg
jg
aas
push
outs
sti
ud0
jle
scas
stc
shr
out
leave
das
clc
test
mov
iret
cli
pop
(bad)
repnz
cli
out
aas
(bad)
lods
dec
(bad)
iret
cli
sbb
icebp
mov
cld
(bad)
jnp
aas
repz
std
jmp
stc
aas
pop
(bad)
sbb
jne
test
aas
jecxz
(bad)
in
lds
lock
sahf
mov
jmp
jle
aas
std
fldcw
repz
clc
loop
mov
jmp
call
jmp
popf
pop
(bad)
out
stc
mov
(bad)
aas
cld
dec
(bad)
movs
out
cs
loop
dec
pop
icebp
xchg
cmp
mov
retf
mov
neg
and
stos
imul
jle
jg
sti
pushf
std
arpl
mov
retf
mov
dec
jle
outs
call
pop
test
adc
std
cmps
retf
paddw
retf
fcomip
or
out
jmp
in
dec
cld
stos
mov
pop
(bad)
lahf
jg
lahf
(bad)
cmp
cmps
(bad)
shr
pop
inc
jg
hlt
jg
mov
(bad)
aas
mov
mov
retf
cld
idiv
adc
std
dec
in
jg
std
mov
int
fnstcw
dec
(bad)
jmp
into
pop
stc
out
std
dec
pop
push
(bad)
das
cli
das
mov
jg
jg
aas
sub
mov
jmp
(bad)
test
shl
std
aaa
call
bnd
aaa
jmp
mov
mov
enter
bnd
(bad)
jg
push
jg
scas
icebp
sbb
sar
out
pop
mul
fnstcw
neg
cmp
sti
jle
fcomip
(bad)
fdivr
cld
sub
in
(bad)
jmp
std
sub
iret
clc
sar
out
std
cmc
mov
jns
iret
(bad)
ds
test
(bad)
jg
pop
(bad)
(bad)
cld
ins
jle
(bad)
idiv
ud0
stos
(bad)
sti
retf
fisub
sar
pop
cmp
mov
push
jg
jg
push
clc
pop
jle
das
cld
out
(bad)
cli
pop
(bad)
jns
out
sub
out
out
cld
cdq
icebp
(bad)
(bad)
(bad)
imul
mov
mov
jg
mov
jnp
in
jmp
dec
clc
pop
ds
sbb
jle
push
pop
clc
(bad)
lock
mov
out
das
jg
lahf
jae
(bad)
cmc
jg
mov
repnz
aas
sti
jmp
hlt
jmp
lock
push
fldcw
sbb
ud0
(bad)
jmp
jmp
cmp
(bad)
mov
(bad)
das
inc
pop
cli
fstp
mov
jle
stc
mov
std
(bad)
call
cld
mov
dec
jle
aas
test
popf
leave
aas
icebp
xlat
push
jle
fistp
(bad)
imul
loop
das
clc
mov
test
repz
cli
ins
(bad)
mov
(bad)
cs
loopne
cmc
pop
clc
icebp
jmp
(bad)
(bad)
mov
sar
(bad)
call
mov
sbb
fnstsw
lahf
cli
ret
retf
(bad)
lahf
(bad)
(bad)
das
stc
pop
push
jg
ficomp
sti
addr16
pop
mov
cld
xor
cmp
test
jg
std
inc
addr16
(bad)
fdivr
jge
ja
stc
retf
jmp
(bad)
in
in
jg
aas
loop
mov
cmp
std
sub
les
jg
pop
sti
lds
push
jg
outs
cld
lahf
cld
add
int3
aas
cmc
sub
mov
ret
jmp
mov
pop
push
std
adc
mov
push
cld
push
jg
jecxz
jle
jg
psubq
xchg
mov
repz
jg
aaa
clc
ficomp
lods
pop
icebp
mov
iret
cld
retf
outs
clc
aas
(bad)
call
fbstp
(bad)
fistp
mov
out
cld
outs
jg
das
cli
daa
into
(bad)
in
in
jmp
lahf
sti
cmps
jg
jmp
std
jg
or
out
cmc
mov
lods
pop
outs
pop
cld
adc
jnp
cmp
sti
(bad)
pop
sub
cld
pop
(bad)
mov
sti
dec
(bad)
jmp
std
hlt
scas
clc
adc
push
(bad)
jle
outs
jne
xlat
jge
iret
(bad)
xchg
(bad)
paddd
outs
push
(bad)
call
out
push
fcomip
loopne
push
(bad)
jg
fcomip
(bad)
push
mov
loopne
(bad)
(bad)
repz
aam
icebp
call
das
jmp
xchg
aas
imul
mov
cmp
std
jle
aas
lock
dec
inc
daa
(bad)
ja
dec
(bad)
cld
mov
mov
lods
cld
jecxz
bnd
aas
jmp
ds
sbb
test
fs
(bad)
cmps
mov
jmp
xchg
fucomip
pop
inc
mov
pop
jmp
lods
fcomip
(bad)
pop
out
dec
movd
(bad)
lahf
stc
(bad)
adc
mov
jge
jnp
scas
jg
aas
lock
push
jg
(bad)
clc
cmps
cld
cli
(bad)
out
(bad)
jnp
scas
call
push
dec
std
sub
aas
jmp
jg
pop
cmc
mov
cli
(bad)
(bad)
(bad)
cwde
loop
sti
xchg
out
call
mov
ds
(bad)
push
lahf
(bad)
mov
(bad)
out
icebp
out
repz
cmp
std
mov
xchg
mov
cli
mov
stc
mov
shl
mov
fidivr
inc
mov
cld
mov
stc
mov
retf
jl
pop
inc
outs
call
fwait
idiv
mov
jle
pop
repz
xchg
jg
(bad)
inc
std
jbe
neg
(bad)
cmps
jmp
pop
imul
cld
into
scas
(bad)
xchg
mov
pop
jg
pop
jmp
out
(bad)
sbb
sar
(bad)
mov
pop
stc
or
std
in
mov
icebp
int
mov
jmp
stc
out
mov
std
(bad)
call
loope
cli
outs
(bad)
cmp
(bad)
stc
icebp
pop
icebp
sar
cmps
jle
out
iret
(bad)
fdivr
idiv
cld
das
(bad)
repz
mov
jg
idiv
push
push
cmp
cli
(bad)
jmp
scas
sti
pop
dec
fcomip
iret
cld
sub
pop
idiv
scas
(bad)
cdq
push
(bad)
(bad)
(bad)
out
mov
mov
in
jg
jg
pop
dec
sar
retf
call
jmp
mov
icebp
pop
std
mov
jmp
mov
loopne
jmp
jmp
das
call
mov
sti
(bad)
out
iret
mov
jg
in
pop
mov
fstp
xchg
in
pop
sti
das
(bad)
ds
loope
aad
test
jle
mov
(bad)
cmps
aas
(bad)
mov
jg
out
outs
stc
jg
push
mov
inc
pop
dec
cmps
mov
dec
dec
pop
std
xchg
(bad)
call
jns
std
idiv
jmp
stos
jg
(bad)
stc
push
(bad)
jecxz
cli
lahf
dec
(bad)
cdq
sti
jg
(bad)
sti
mov
(bad)
test
in
cld
pop
(bad)
std
jg
cmp
scas
jg
mov
std
aaa
(bad)
lods
scas
jg
jg
in
mov
xor
psubb
mov
sti
aaa
std
add
jg
retf
fucomip
das
std
scas
das
push
stc
stos
(bad)
lods
lahf
inc
cmps
ds
stos
(bad)
fdivr
out
aas
std
fucomp
std
scas
jg
repz
idiv
pop
(bad)
lods
jg
repnz
(bad)
cmp
(bad)
jmp
mov
int
pop
call
imul
aad
stc
addr16
pop
mov
(bad)
mov
scas
cld
outs
pop
cld
mov
cmps
pop
(bad)
ds
das
sti
lahf
(bad)
mov
lock
(bad)
out
pop
cmc
xlat
(bad)
push
aas
imul
std
dec
(bad)
jmp
mov
jmp
push
pop
pop
sub
mov
jmp
loope
aas
test
lahf
jg
pop
mov
cmp
std
jnp
lahf
push
jg
ja
icebp
jg
xchg
aad
mul
outs
std
sbb
into
fcomip
sbb
aaa
xchg
(bad)
in
(bad)
mov
xor
repnz
jl
mov
cld
jp
fstp
sti
cld
movs
(bad)
fnstcw
pop
mov
cld
xor
jmp
scas
cld
cmc
jmp
in
loop
clc
xor
(bad)
(bad)
pop
cdq
jle
pop
dec
push
ja
pushf
pop
imul
clc
out
out
(bad)
mov
out
iret
cld
pop
jg
scas
icebp
(bad)
std
push
scas
sti
das
(bad)
adc
loope
sti
leave
add
clc
fisubr
sti
imul
push
scas
aas
jg
in
(bad)
lahf
inc
pop
out
push
in
cld
mov
cmps
jmp
pop
(bad)
jnp
mov
mov
mov
outs
cld
lahf
idiv
aas
loope
scas
sahf
popf
ds
inc
jle
ror
addr16
ja
(bad)
nop
mov
inc
dec
(bad)
idiv
add
(bad)
fnstsw
lahf
std
or
(bad)
cld
xchg
jg
mov
jg
in
das
cld
cmp
mov
loopne
sti
jge
mov
scas
mov
jge
aas
std
xchg
jecxz
(bad)
(bad)
clc
test
(bad)
jmp
aas
(bad)
jmp
cld
adc
movs
jmp
repz
aas
mov
and
lahf
(bad)
repnz
loop
cld
xor
xlat
js
xlat
std
test
pop
inc
pop
std
jns
(bad)
sar
jg
das
dec
cmc
out
repz
(bad)
data16
in
cli
xlat
jmp
out
stc
(bad)
mov
in
hlt
mov
(bad)
push
ja
mov
loopne
outs
cli
mov
xlat
out
lods
dec
dec
(bad)
into
lahf
std
lahf
jg
das
(bad)
cmps
(bad)
fidivr
scas
(bad)
std
mov
std
(bad)
jle
pop
test
not
std
out
repnz
pop
sub
loop
stc
xor
mov
mov
aas
repz
sti
and
call
pop
not
std
retf
jg
pop
mov
mov
cmc
(bad)
inc
inc
out
(bad)
cmps
(bad)
ds
outs
cmc
stc
push
mov
out
(bad)
cmps
jle
cmps
ds
dec
(bad)
jmp
jnp
call
scas
sti
out
es
jg
pop
idiv
std
sbb
cld
es
mov
repz
clc
clc
lahf
into
(bad)
lock
jmp
daa
jg
icebp
mov
fucomip
shl
mov
jg
jg
lods
jg
iret
dec
out
call
dec
pop
cmc
cmps
dec
int
cmp
call
mov
xlat
jg
(bad)
mov
mov
fwait
jmp
jg
jg
std
jg
cmc
jg
(bad)
out
jmp
mov
movs
repz
sti
daa
(bad)
ror
outs
std
addr16
ins
jg
addr16
(bad)
fstp
idiv
cli
fstp
cmp
dec
(bad)
call
jmp
mov
(bad)
jle
jg
pop
stc
ret
jg
das
cld
das
(bad)
mov
cld
daa
dec
jmp
(bad)
jg
leave
jg
lahf
cmc
pop
(bad)
scas
aas
icebp
pop
mov
fild
test
lock
cld
push
mov
jge
into
aas
sti
idiv
out
jb
das
jl
std
adc
pop
cdq
dec
jle
bnd
retf
jmp
cmps
jle
jbe
push
cld
lods
push
pop
dec
jle
pop
out
iret
cli
or
xchg
lahf
cdq
std
ja
jg
pop
cld
pop
lods
iret
pop
std
xlat
call
call
stos
(bad)
(bad)
mov
aas
clc
sti
data16
pop
inc
(bad)
aas
dec
mov
(bad)
fstp
in
pop
pop
(bad)
fcos
sar
mov
cmp
jg
aas
sti
movs
mov
pop
cld
iret
sti
lahf
cld
or
outs
clc
scas
cld
sbb
and
idiv
push
retf
fnstsw
outs
(bad)
jge
ftst
out
fdivr
std
jg
fstp
(bad)
pop
std
cmp
jg
fcomip
pop
test
std
aas
lock
jmp
aas
push
inc
jmp
mov
pop
jg
aas
xor
in
jle
out
dec
fst
out
mov
idiv
sbb
std
nop
in
cld
retf
jmp
lahf
jle
cmc
jmp
fucomip
call
pop
jecxz
call
ds
pop
dec
clc
mov
mov
dec
ins
out
clc
mov
pop
clc
stos
jmp
aas
(bad)
xchg
mov
out
neg
out
fcomip
pop
cld
(bad)
fucom
jcxz
push
jecxz
sti
das
clc
sbb
repz
std
scas
cld
xchg
in
icebp
aad
cld
stc
lahf
sar
push
inc
outs
mov
(bad)
(bad)
xchg
mov
imul
hlt
pop
cmc
outs
jl
iret
(bad)
std
outs
(bad)
std
repz
das
cli
aaa
jle
jg
leave
jmp
mov
inc
repnz
std
shl
cli
dec
dec
addr16
dec
(bad)
cld
aas
clc
aaa
call
push
into
inc
fucomip
(bad)
(bad)
out
out
std
(bad)
in
aas
sti
cmps
std
stc
scas
mov
idiv
retf
jle
(bad)
ud0
pop
das
call
cmps
jg
jg
xchg
jg
pop
cli
xlat
pop
call
aas
push
aas
push
aas
cli
jge
std
das
scas
(bad)
xchg
jmp
psubd
(bad)
stc
sti
jg
iret
movs
mov
jg
aas
in
cli
sbb
pop
call
out
(bad)
jno
cld
pop
jmp
iret
cld
repnz
std
movs
jmp
cmps
jg
loope
icebp
mov
lahf
(bad)
cmc
call
(bad)
sti
fstp
dec
mov
jmp
shr
stc
sar
pop
div
aas
(bad)
xchg
inc
xchg
mov
dec
mov
jo
aas
stc
xchg
xchg
aas
cmc
lds
clc
scas
jg
pop
pop
cld
mov
(bad)
jg
pop
jg
aas
icebp
scas
cld
(bad)
jg
ja
sti
xchg
inc
jle
pop
mov
ins
stc
std
(bad)
(bad)
sti
xchg
inc
mov
hlt
jnp
daa
mov
jg
cld
inc
push
mov
or
(bad)
pop
jb
xlat
sti
sub
cld
pop
(bad)
(bad)
aas
jo
bnd
clc
pop
lock
dec
jg
out
neg
stc
into
(bad)
dec
rcr
sbb
add
std
pop
stos
jg
scas
call
lahf
lock
cld
loop
bnd
sbb
aaa
stc
xchg
jg
jg
scas
cld
pop
jg
pop
jne
cmps
cld
aad
addr16
jle
das
std
mov
popf
xlat
jg
outs
repz
aas
push
std
fxam
das
cli
stos
(bad)
jmp
pop
cld
mov
mov
pop
(bad)
scas
cld
daa
jg
call
cld
or
lahf
cld
dec
and
cld
pop
cld
push
(bad)
jmp
std
outs
jp
jmp
xchg
lahf
movs
mov
xlat
inc
test
pop
leave
aas
clc
je
in
paddw
jle
jecxz
idiv
sti
iret
inc
jg
(bad)
mov
mov
clc
jnp
call
(bad)
cli
dec
(bad)
cmps
mov
jg
mov
jns
call
std
mov
idiv
mov
jecxz
(bad)
push
int
cld
pop
mov
dec
retf
pop
not
mov
fstp
(bad)
sbb
sahf
std
pop
push
outs
pushf
std
pop
call
fcomip
retf
retf
out
in
mov
sar
(bad)
aas
lods
jmp
sbb
stc
call
aas
stc
mov
scas
std
xlat
(bad)
mov
jmp
scas
mov
jg
xchg
jg
pop
cld
daa
std
and
int3
(bad)
dec
(bad)
std
scas
mov
fsubrp
lock
cmc
xchg
dec
jg
idiv
jmp
(bad)
dec
jle
jmp
stc
jg
jp
lods
ror
cs
(bad)
jg
out
outs
xor
cld
push
pop
mov
div
fstp
(bad)
outs
clc
cmps
dec
cs
lds
out
cld
mov
(bad)
push
(bad)
pop
jg
jg
addr16
mov
xchg
jge
cli
lds
dec
std
inc
mov
jecxz
loop
mov
fild
(bad)
mov
ret
pop
out
(bad)
outs
dec
lahf
cli
leave
(bad)
in
ja
jne
mov
(bad)
aam
stc
das
cld
or
out
not
scas
not
std
test
mov
fucomip
out
clc
and
(bad)
jg
iret
stc
in
(bad)
jmp
sub
inc
stc
xor
in
lahf
fcos
aas
jmp
aas
repnz
cli
cmp
xchg
(bad)
fwait
scas
mov
out
stc
stos
inc
adc
cld
in
(bad)
(bad)
sar
std
mov
jmp
sti
jnp
jg
mov
call
jmp
inc
lahf
std
pop
call
dec
jg
sbb
std
xor
cld
ja
repz
pop
std
pop
sti
aas
cmc
pop
inc
loopne
repz
dec
inc
in
xlat
sti
ja
xchg
jmp
push
das
cld
xchg
(bad)
fstp
(bad)
jmp
hlt
pop
jle
jl
popf
popf
jg
pop
clc
stos
aas
sti
cmps
jg
aas
jmp
mov
mov
out
cld
data16
in
in
(bad)
(bad)
daa
call
dec
aas
stc
(bad)
std
hlt
pop
stc
jnp
pop
call
scas
cmc
dec
push
jmp
fidivr
cld
loop
sti
ja
(bad)
in
fnstsw
aas
cli
cmps
(bad)
repnz
ja
(bad)
xor
(bad)
(bad)
(bad)
xlat
cld
retf
jle
(bad)
pop
sbb
std
idiv
(bad)
lahf
icebp
mov
aas
repnz
pop
(bad)
pop
(bad)
stc
mov
mov
mov
stc
outs
retf
ud0
paddd
push
dec
aad
cli
inc
jmp
mov
cld
adc
dec
cld
jne
in
(bad)
out
stc
xlat
std
leave
(bad)
cli
aas
std
mov
stc
lods
(bad)
jmp
std
aaa
aad
dec
jg
push
std
imul
mov
dec
iret
cld
sahf
mov
call
out
stc
(bad)
lahf
cli
pxor
out
loopne
icebp
div
int3
pop
neg
jg
ja
(bad)
push
std
in
jmp
call
gs
fs
leave
lahf
repz
dec
inc
lods
dec
fcomip
aaa
std
ja
fcomp
mov
mov
mov
jmp
jmp
pop
jmp
clc
mov
jg
iret
clc
cmc
jle
scas
mov
stos
jnp
lock
imul
vmwrite
(bad)
out
(bad)
(bad)
stc
(bad)
adc
std
dec
jle
pop
repz
or
in
clc
jnp
movs
pop
jmp
(bad)
cmp
xchg
(bad)
cli
mov
xchg
push
mov
jg
mov
inc
lahf
dec
iret
jg
mov
mov
aad
not
cmp
aas
loopne
jg
cmc
mov
data16
(bad)
mov
das
(bad)
sar
mov
imul
mov
push
jg
pop
icebp
aaa
(bad)
pop
push
pop
repnz
cld
daa
jmp
das
pop
std
mov
out
jle
pop
cld
stos
cmp
pop
std
mov
loopne
cld
jmp
std
cli
xchg
dec
out
cld
inc
lds
aas
not
std
sub
jnp
hlt
scas
jg
mov
(bad)
cli
out
inc
jg
jae
std
jg
mov
jmp
mov
call
inc
lahf
cld
inc
mov
mov
pop
(bad)
in
pop
stos
inc
jg
jmp
sar
das
stc
inc
call
cli
jmp
jg
ja
mov
out
(bad)
clc
mov
out
aas
lock
cld
pop
aas
std
iret
cld
ss
clc
(bad)
(bad)
repz
aas
std
push
cld
outs
mov
mov
fistp
mov
push
(bad)
(bad)
pop
(bad)
sti
loope
jbe
(bad)
xchg
mov
sbb
cld
retf
call
jge
ja
pop
(bad)
jmp
(bad)
iret
cld
sar
lock
xchg
cld
dec
aas
inc
std
lahf
call
push
aaa
std
gs
aas
repz
cli
sub
(bad)
outs
inc
hlt
aaa
std
ud0
aas
loop
dec
cld
movsx
addr16
pop
cmc
in
pop
cld
imul
sti
dec
cld
mov
pop
cld
aaa
in
std
sar
aam
(bad)
sti
or
test
repnz
cld
idiv
cli
xchg
push
jg
pop
hlt
outs
cmp
(bad)
sub
cdq
fucomip
jg
cld
loopne
jg
std
sti
cld
dec
mov
std
out
(bad)
(bad)
out
lahf
pop
std
jmp
shr
sti
lahf
(bad)
pop
(bad)
cli
in
pop
out
out
cli
mov
idiv
mov
retf
mov
sbb
(bad)
jg
pop
call
ret
(bad)
and
(bad)
call
imul
inc
pop
hlt
loopne
repnz
lahf
sar
clc
push
aaa
jl
clc
lods
(bad)
repnz
jle
das
inc
dec
fwait
retf
pop
jecxz
sti
pop
jg
(bad)
idiv
mov
lods
jg
mov
xor
(bad)
mov
int
stc
aas
cld
push
mov
std
dec
(bad)
call
mov
(bad)
(bad)
mov
cli
jne
sar
psubw
(bad)
cmps
jg
fcomip
scas
std
mov
in
push
jmp
jg
scas
stc
mov
jp
clc
(bad)
in
dec
shr
(bad)
std
hlt
push
daa
std
addr16
mov
(bad)
lahf
(bad)
(bad)
popf
fs
stc
out
inc
mov
sub
lock
hlt
lahf
std
imul
fcomip
fwait
jmp
repz
jecxz
ret
jg
std
imul
inc
std
aaa
(bad)
(bad)
aas
icebp
xlat
std
out
jg
out
mov
cmc
jg
pop
lock
adc
call
hlt
lahf
std
mov
sahf
jg
aaa
stc
inc
jmp
call
(bad)
std
out
clc
xchg
cdq
aas
out
dec
fistp
fwait
out
std
pop
sti
xchg
jbe
jmp
out
cmc
aad
je
aaa
std
cmps
mov
cld
jno
sti
pop
push
mov
mov
(bad)
call
retf
(bad)
out
cmc
pop
mov
scas
(bad)
push
mov
(bad)
movs
(bad)
cli
sar
fistp
mov
lock
cli
gs
das
pop
(bad)
mov
aas
in
mov
mov
aas
(bad)
in
clc
mov
mov
(bad)
sahf
pop
out
outs
hlt
sbb
fistp
jg
dec
std
jp
int
cld
(bad)
jmp
sti
pop
(bad)
fnstsw
jmp
lock
ja
mov
dec
jg
pop
(bad)
imul
inc
call
icebp
repz
jge
jg
int3
lahf
div
pop
push
jg
(bad)
aas
cli
loopne
idiv
std
cld
aas
std
call
iret
mov
xchg
jns
std
icebp
mov
mov
(bad)
stc
jmp
call
cmps
cmps
mov
movs
push
(bad)
(bad)
jg
(bad)
clc
mov
xor
aas
stc
das
pop
cld
lahf
scas
jmp
push
dec
cli
dec
jg
retf
jg
lahf
mov
and
sbb
sbb
cmc
xchg
cld
pop
mov
loop
jg
jg
iret
sti
mov
ja
cmp
call
mov
das
(bad)
sti
jg
jg
(bad)
int
out
mov
aas
hlt
cmps
std
xor
out
lock
cmp
pop
call
in
(bad)
jmp
xor
std
ud0
sub
mov
pop
sub
in
call
jle
aas
div
dec
inc
mov
xlat
sti
sub
push
mov
cld
(bad)
repz
fdivrp
xchg
(bad)
mov
(bad)
clc
mov
repnz
icebp
pop
sbb
(bad)
(bad)
cmp
push
(bad)
ja
in
pop
clc
adc
mov
jg
aas
std
idiv
imul
jg
outs
cli
iret
cmps
outs
mov
scas
std
(bad)
sar
sti
(bad)
dec
repz
idiv
or
loopne
lock
(bad)
in
mov
mov
outs
push
out
std
out
jg
hlt
daa
(bad)
fidivr
test
dec
jg
out
repz
std
leave
jg
fcomip
(bad)
cld
and
jg
cmp
add
cld
pop
repz
or
cld
add
repz
cmp
jecxz
ret
jg
(bad)
aas
stc
jecxz
scas
pop
push
(bad)
mov
jg
cmp
std
out
call
(bad)
in
(bad)
jecxz
jg
lahf
cld
jmp
jmp
jl
std
sti
(bad)
fwait
call
outs
sti
pop
lahf
(bad)
out
mov
push
pop
(bad)
push
jg
mov
outs
(bad)
int
les
call
jg
loop
aas
std
aaa
cli
inc
dec
pop
std
sbb
clc
lahf
clc
ins
jle
dec
stc
xchg
inc
mov
cmp
das
cld
sar
ret
mov
aas
out
scas
(bad)
in
jg
popf
cmp
aam
dec
popf
fdivrp
pop
(bad)
xchg
in
(bad)
mov
mov
pop
(bad)
fstp
(bad)
pop
(bad)
imul
(bad)
lods
jg
pop
jle
pop
aas
(bad)
pop
jle
pop
repnz
aas
in
(bad)
dec
in
std
mov
retf
(bad)
lods
(bad)
jmp
pop
lock
(bad)
popa
mov
ud0
xchg
mov
jg
iret
inc
sti
leave
aas
cli
in
jg
outs
(bad)
arpl
jne
aad
cld
jmp
aad
std
push
push
jg
cmp
hlt
out
push
cmp
aas
in
std
gs
das
pop
dec
enter
xchg
(bad)
pop
jmp
clc
neg
lahf
hlt
jnp
push
out
jecxz
iret
inc
out
jmp
(bad)
mov
jg
shl
outs
std
cmps
pop
jg
pop
jmp
in
ja
out
cld
cmp
jmp
jmp
sti
lahf
jge
icebp
inc
call
pop
inc
(bad)
(bad)
stc
pop
jmp
pop
pop
jg
pop
clc
sti
cld
call
mov
movd
jg
pop
std
pop
(bad)
out
scas
stc
das
push
outs
(bad)
mov
std
faddp
pop
repz
outs
cli
gs
std
cmp
lahf
je
loop
sti
xlat
inc
das
cld
imul
loopne
cli
std
(bad)
(bad)
lock
inc
out
repz
jg
imul
aas
mov
pop
cld
in
(bad)
out
cli
scas
inc
ja
dec
(bad)
jmp
mov
cli
call
aad
(bad)
mov
in
mov
jg
addr16
jno
cmc
aas
lock
aam
sti
idiv
icebp
jmp
pop
cli
cmp
cmc
pop
icebp
imul
lock
mov
xchg
(bad)
std
mov
xchg
(bad)
cli
jg
scas
cld
mov
mov
das
sti
(bad)
mov
stc
sbb
enter
stc
repz
repnz
jle
hlt
outs
(bad)
and
call
out
aaa
clc
and
out
in
cli
adc
lahf
(bad)
pop
stos
pop
jecxz
clc
ret
(bad)
sti
(bad)
pop
clc
bnd
dec
mov
fcomip
push
sahf
cld
cmps
jg
in
xlat
cli
pop
out
iret
(bad)
movs
mov
xchg
call
iret
pop
std
retf
inc
call
cmp
cld
paddd
pop
repnz
loopne
dec
aas
jp
fistp
outs
hlt
iret
jg
lock
call
push
(bad)
mov
pop
stc
(bad)
cld
clc
call
jp
das
std
jnp
loop
mov
cld
inc
(bad)
fadd
inc
aas
cmc
cmps
cmp
(bad)
std
mov
jae
imul
iret
int3
(bad)
fcomp
popf
jg
jb
inc
cld
pop
(bad)
inc
inc
sti
clc
loopne
(bad)
mov
(bad)
jns
cld
add
scas
cmc
xor
fwait
aas
stc
fistp
sti
push
jmp
and
fucomip
jg
xchg
fdivr
out
push
addps
sbb
jg
pop
cld
pop
std
ja
out
aas
call
cld
mov
pop
stc
idiv
inc
inc
jg
pop
mul
(bad)
sub
push
push
(bad)
scas
mov
call
loop
aas
stc
lahf
std
cdq
pop
repnz
sub
(bad)
loopne
cld
add
mov
fsubr
jecxz
ret
cli
out
cld
out
call
outs
inc
jg
lahf
mov
aad
ret
inc
xor
loop
(bad)
mov
stc
(bad)
dec
sar
loope
jge
ja
in
(bad)
jae
jmp
scas
(bad)
mov
loope
cld
repnz
cmp
loop
cld
out
xchg
mov
(bad)
cld
aas
hlt
iret
(bad)
repz
std
test
sti
scas
xlat
inc
jg
pop
(bad)
(bad)
(bad)
(bad)
lahf
(bad)
std
inc
jg
pop
stc
pop
call
scas
sahf
std
jno
out
scas
cmc
pop
(bad)
cmps
jg
(bad)
push
std
ds
jg
(bad)
push
mov
mov
addr16
and
(bad)
ja
stc
aaa
(bad)
out
data16
fwait
cld
scas
jg
(bad)
scas
cld
out
jcxz
lock
std
lahf
cld
xor
out
stc
loope
pop
cld
dec
mov
dec
ja
in
repnz
retf
xchg
in
dec
das
inc
mov
jmp
inc
(bad)
jg
inc
std
popa
inc
pop
cmc
aaa
std
mov
fistp
jg
(bad)
std
mov
mov
das
jge
outs
(bad)
aad
loop
(bad)
mov
scas
jle
jnp
inc
mov
lahf
cmp
sbb
repz
jg
scas
call
cmp
(bad)
outs
clc
mov
rcr
out
inc
jnp
jnp
ret
(bad)
stc
out
(bad)
xchg
jg
scas
repz
pop
jg
aas
icebp
xchg
std
pop
jg
mov
lahf
mov
fistp
dec
cld
dec
(bad)
mov
loop
jg
retf
(bad)
fcos
repnz
(bad)
xlat
(bad)
fdivr
jg
scas
repz
das
cld
jecxz
loop
xchg
inc
cmps
jg
mov
lahf
mov
repz
idiv
outs
jmp
jecxz
std
mov
icebp
pop
cld
(bad)
(bad)
test
(bad)
jno
(bad)
out
std
out
std
and
stc
out
jmp
pop
jl
out
das
dec
jg
(bad)
in
scas
stc
xchg
pop
jmp
cmp
pop
(bad)
jle
(bad)
push
into
jmp
lods
std
in
inc
retf
jmp
imul
dec
dec
(bad)
jmp
clc
mov
jne
jg
addr16
cmps
mov
push
jle
mov
push
jg
stc
aas
hlt
idiv
jge
in
ja
mov
repz
inc
jg
jg
icebp
outs
jmp
lahf
(bad)
in
int
repz
call
(bad)
out
mov
xor
xchg
mov
stos
jg
pop
(bad)
aaa
(bad)
mov
xor
call
add
jmp
std
(bad)
pop
sti
ins
das
(bad)
cmc
daa
dec
mov
(bad)
(bad)
xchg
cmps
jg
push
outs
cld
cmps
(bad)
in
mov
jg
pop
mov
sub
std
(bad)
(bad)
aas
dec
das
clc
cmps
out
cld
ret
mov
cld
clc
lahf
neg
fsubr
std
adc
clc
iret
std
dec
jg
jg
neg
iret
std
add
fild
scas
cmc
xlat
jl
jl
(bad)
std
std
aas
icebp
pop
std
cmps
jg
repnz
(bad)
mov
std
fsubr
xchg
lods
(bad)
fstp
aaa
cld
xchg
lahf
std
outs
scas
(bad)
xchg
aas
icebp
out
int3
out
mov
cld
daa
jecxz
repz
adc
lods
(bad)
pop
dec
pop
lods
(bad)
icebp
xlat
lahf
in
jg
aaa
cli
cmp
ins
div
std
neg
jg
outs
clc
jnp
adc
neg
pop
lods
(bad)
jmp
push
inc
das
jmp
stc
and
lods
out
cmp
push
aaa
jmp
aas
stc
fistp
pop
das
call
jge
sar
out
cld
add
jle
(bad)
(bad)
xchg
(bad)
in
fcomip
mov
stc
cmps
(bad)
pop
jmp
pop
lock
sub
loop
mov
push
jmp
jmp
pop
(bad)
sbb
popf
(bad)
ss
repnz
jmp
(bad)
xchg
jmp
jecxz
sar
out
repnz
clc
xchg
push
sti
arpl
aas
loopne
mov
(bad)
outs
cdq
call
push
jg
repnz
mov
cld
pop
pop
std
pop
das
pop
cld
repz
dec
inc
aad
(bad)
stc
in
jg
pop
cld
(bad)
shl
mov
in
aas
in
jnp
aaa
jmp
aas
call
add
mov
in
xlat
pop
std
outs
(bad)
stc
outs
cmc
pop
cld
lahf
push
pop
not
(bad)
mov
call
mov
std
retf
outs
(bad)
cmps
lahf
(bad)
xchg
dec
pop
cli
outs
call
aas
cmc
leave
in
out
sti
aas
(bad)
fdivrp
(bad)
(bad)
fwait
cld
jno
iret
jg
(bad)
out
aad
cld
push
mov
jmp
jecxz
clc
mov
and
cld
fistp
cld
iret
mov
scas
cld
sub
in
pop
jns
jmp
call
in
cli
mov
mov
in
mov
popf
stos
iret
pop
jle
(bad)
cld
scas
(bad)
stc
aas
cld
loopne
cli
jne
ret
mov
(bad)
fdivr
div
jmp
adc
paddd
jg
pop
lock
std
clc
pop
lock
ds
addr16
lahf
cli
sti
std
dec
mov
adc
scas
(bad)
jg
push
fwait
std
arpl
scas
cmc
pop
call
(bad)
addr16
lock
cld
jmp
lock
cld
repz
out
cld
pop
cmps
jnp
repz
clc
imul
(bad)
call
aas
cld
fwait
outs
std
add
imul
lahf
ins
std
inc
stc
dec
cld
scas
jg
stos
mov
addr16
mov
call
jbe
or
cmp
dec
clc
cld
jg
aaa
jle
mov
std
ficomp
aaa
cmc
cli
stos
(bad)
cli
pop
push
in
js
imul
cld
cmp
int3
jle
(bad)
rcl
(bad)
(bad)
idiv
std
aad
icebp
lahf
hlt
scas
(bad)
aad
neg
sti
outs
push
mov
in
std
adc
dec
repnz
std
mov
cmps
jg
outs
mov
dec
repnz
stc
or
aas
cli
xlat
call
cld
scas
jl
lahf
dec
std
sub
sbb
sar
repnz
jmp
(bad)
mov
xor
lods
jle
jg
outs
(bad)
lahf
pop
dec
mov
repnz
pop
mov
dec
lahf
mov
(bad)
xchg
pop
jmp
les
mov
jle
pop
cld
scas
pop
std
sub
xchg
mov
mov
int3
lahf
icebp
fisttp
cld
dec
mov
aaa
std
xchg
(bad)
in
cli
das
(bad)
mov
fdivr
jb
dec
stc
lds
pop
sti
pop
cld
push
jg
pop
sti
fbstp
imul
jg
(bad)
push
(bad)
dec
jle
dec
dec
(bad)
lahf
stc
push
jg
(bad)
inc
sub
mov
adc
leave
jg
psubw
(bad)
xor
cld
das
out
std
push
jg
outs
jmp
out
jmp
aaa
cld
ds
push
mov
cld
mov
aas
sti
outs
dec
aas
fstp
cmp
aam
ja
stos
call
jg
(bad)
(bad)
xlat
dec
jge
mov
cmc
aaa
(bad)
jnp
inc
idiv
fsincos
stos
jg
mov
mov
push
mov
cli
mov
mov
cmps
(bad)
sti
out
lds
cmp
sti
mov
cld
idiv
call
rcr
not
mov
push
jbe
repnz
loop
std
xchg
inc
lea
mov
pop
(bad)
jmp
(bad)
mov
mov
mov
inc
pop
cmp
jg
pop
mov
in
mov
ja
mov
stc
jp
imul
inc
jmp
jl
xor
jmp
scas
repz
jle
jmp
icebp
xchg
cld
inc
jg
out
repnz
(bad)
pop
cmc
(bad)
int
jmp
call
jg
(bad)
(bad)
lods
jg
mov
jge
sbb
repz
mov
jg
cld
add
cld
aad
shr
fbld
fbld
pop
(bad)
cmp
shr
pop
ds
inc
jmp
nop
aas
lock
sti
dec
mov
test
icebp
aas
cld
leave
popf
fcomip
push
out
mov
repnz
inc
dec
pop
mov
cld
add
imul
mov
std
adc
pop
sti
jg
test
mov
mov
(bad)
stos
pop
cmc
out
pop
pop
std
ret
jg
fcomip
pop
(bad)
es
dec
jle
mov
(bad)
repz
loop
inc
pop
repnz
cld
push
jg
outs
mul
leave
jg
out
cmc
mov
mov
ja
cli
jb
mov
(bad)
cmp
(bad)
sti
pop
cld
or
mov
sub
repz
(bad)
clc
(bad)
pop
call
cld
cmps
sar
lock
std
mov
push
cld
jmp
jg
mov
(bad)
mov
mov
jg
cvtdq2ps
mov
mov
mov
dec
aas
cld
cmp
mov
hlt
iret
jge
push
jmp
or
repz
das
clc
and
ret
jge
aas
and
loop
std
pop
jg
dec
inc
mov
push
ja
in
sti
out
(bad)
xor
(bad)
out
jg
jle
lods
jecxz
jo
mov
cli
daa
cld
cmp
jle
fistp
xchg
cld
sub
ja
mov
cli
repnz
std
repnz
(bad)
mov
out
pop
(bad)
das
cld
shl
jmp
(bad)
mov
into
pop
sti
sbb
cmp
pop
stc
dec
cld
xchg
jmp
jge
std
lods
(bad)
sti
scas
(bad)
(bad)
stos
mov
(bad)
mov
repz
std
inc
(bad)
pop
mov
rol
add
mov
leave
mov
call
std
pop
jg
lahf
std
dec
mov
stc
(bad)
std
ja
jecxz
(bad)
cmps
dec
mov
inc
mov
std
cmp
dec
(bad)
push
jg
scas
jmp
call
int
idiv
jg
shr
aas
loopne
cli
mov
sbb
loop
call
cld
aam
test
(bad)
out
hlt
dec
push
mov
aaa
cld
(bad)
xchg
fucomip
idiv
jmp
xlat
aas
in
dec
push
(bad)
sahf
pop
clc
fwait
std
cmps
mov
imul
mul
idiv
mov
jnp
fcomp
inc
jg
(bad)
jmp
fldcw
sbb
(bad)
mov
mov
and
cld
pop
cli
xor
cli
dec
(bad)
stos
cmps
mov
cld
movs
mov
dec
(bad)
clc
mov
xchg
(bad)
mov
(bad)
push
iret
ds
pop
inc
(bad)
das
jmp
test
(bad)
repz
aas
jmp
cld
arpl
xlat
cld
addr16
(bad)
out
stc
out
call
pop
sti
inc
lahf
std
in
in
cli
mov
(bad)
(bad)
mov
call
fucomip
sar
icebp
inc
(bad)
loope
out
inc
sar
fnstcw
(bad)
sar
mov
pop
cmc
sbb
jle
jg
fwait
(bad)
out
dec
cli
out
jg
mov
jle
jg
(bad)
jne
sti
(bad)
sti
xlat
sti
or
sti
inc
jg
lahf
repnz
dec
(bad)
aas
repz
popf
xchg
mov
xlat
jg
aas
icebp
loopne
jmp
lahf
jmp
dec
jg
lahf
push
std
jecxz
leave
mov
push
lahf
cli
aas
cld
and
or
cli
cmps
repz
aas
stc
lods
inc
jle
inc
jg
sti
jmp
sti
imul
jg
repz
not
cld
cmp
xchg
inc
pop
jl
paddd
loopne
scas
cld
pop
ds
or
lods
mov
cmps
call
std
mov
lock
clc
idiv
clc
aas
jecxz
jp
neg
std
inc
(bad)
stc
aas
lock
stc
mov
test
cmc
jg
mov
jg
mov
(bad)
fst
(bad)
in
fcomip
pop
mov
in
jg
mov
(bad)
pop
hlt
jnp
inc
lahf
xlat
jg
dec
jmp
scas
addr16
frstor
daa
dec
mov
stc
fucomip
cmps
(bad)
clc
push
pop
mov
mov
aas
sti
aaa
notrack
std
(bad)
fistp
(bad)
inc
pop
std
jno
call
jecxz
sti
push
mov
sti
(bad)
sbb
ret
cmc
jmp
aad
cld
leave
(bad)
jge
xchg
mov
and
sbb
lahf
jno
pop
jmp
icebp
leave
mov
dec
xlat
jmp
scas
cmc
in
icebp
stc
mov
loopne
lock
(bad)
jmp
lds
addr16
jle
out
std
cli
aas
aas
dec
cmp
lahf
jg
jmp
jg
pop
repz
(bad)
jp
call
std
mov
jns
sti
std
xchg
mov
call
jg
ror
cmps
jg
(bad)
pop
inc
imul
jg
pop
cld
sti
(bad)
sbb
out
sti
jnp
mov
leave
aas
stc
mov
(bad)
mov
out
cld
dec
(bad)
cmps
aas
cld
iret
cmp
call
stc
sub
jg
jg
(bad)
(bad)
lods
jmp
jg
in
inc
sti
hlt
scas
jnp
sbb
std
jg
out
(bad)
(bad)
adc
push
mov
repnz
std
jecxz
leave
fistp
neg
sti
fwait
push
retf
jg
dec
std
aas
(bad)
xchg
xchg
rcr
pop
(bad)
fidivr
lahf
dec
call
mov
add
fucomip
psubb
jg
jecxz
cld
dec
(bad)
mov
pop
(bad)
aaa
cld
shl
mov
std
xchg
jg
pop
xchg
(bad)
(bad)
cli
jnp
leave
mov
into
(bad)
fdivr
lahf
sti
outs
(bad)
std
(bad)
scas
sti
(bad)
(bad)
mov
(bad)
out
jle
lock
inc
in
jmp
repz
fcos
leave
in
mov
cmc
aaa
(bad)
sti
out
aam
cmc
fstp
jecxz
std
sub
loop
mov
fnstsw
paddb
xlat
mov
cmp
sar
das
stc
pop
(bad)
mov
outs
(bad)
push
mov
out
cmp
xchg
jg
pop
mov
cmp
maskmovq
ret
jg
jg
cld
imul
jg
fdivr
cld
addr16
xchg
scas
lahf
cld
test
mov
hlt
dec
pop
jmp
jg
repnz
stc
addr16
aas
out
inc
out
jne
sti
(bad)
loop
lock
shr
sbb
(bad)
mov
dec
push
in
es
pop
div
fcomip
aas
cld
ud0
push
mov
out
jle
aas
test
pop
repz
out
mov
in
clc
retf
jle
pop
mov
fdivr
inc
(bad)
mov
outs
(bad)
mov
loope
mov
cmp
(bad)
pop
push
pop
jl
scas
pop
dec
aad
clc
jmp
jmp
cld
lods
jg
scas
clc
test
or
std
push
(bad)
sti
pop
idiv
pop
clc
jae
pushf
inc
ret
mov
jmp
mov
ficomp
cli
sbb
mov
pop
aas
stc
outs
retf
retf
fwait
inc
mov
jmp
push
(bad)
sti
fistp
fucomip
scas
sti
jne
mov
in
fnsave
stc
scas
mov
mov
icebp
scas
repz
(bad)
xchg
mov
(bad)
(bad)
ss
shr
aaa
cld
fidivr
jmp
cli
addr16
push
iret
std
mov
mov
lds
clc
xchg
cmc
(bad)
(bad)
(bad)
(bad)
dec
(bad)
jmp
dec
cmc
mov
iret
inc
(bad)
out
jg
ja
dec
(bad)
fsub
cmps
(bad)
push
(bad)
aas
(bad)
jnp
jg
fcomip
push
dec
test
shl
xchg
ds
aas
call
mov
push
icebp
jmp
mov
(bad)
out
sti
addr16
cmp
dec
inc
fcomip
pop
cld
int
shr
mov
(bad)
lahf
clc
arpl
idiv
hlt
ror
out
sti
pop
cld
(bad)
ja
jg
cmc
fcomip
push
cld
daa
mov
sar
in
fidivr
std
mov
pop
call
(bad)
clc
xchg
pop
repz
jecxz
rcl
pop
(bad)
addr16
rcr
cld
ja
outs
jmp
aas
jmp
jg
jmp
imul
test
cmc
(bad)
das
std
cdq
jg
pop
push
pushf
jg
pop
call
scas
clc
lods
jg
fcomip
loopne
std
icebp
(bad)
out
inc
push
(bad)
data16
pop
sti
iret
(bad)
jns
sar
neg
mov
jg
stos
cmps
jg
fcomip
scas
pop
dec
mov
(bad)
push
pop
mov
(bad)
and
out
cld
(bad)
(bad)
(bad)
(bad)
sub
inc
(bad)
fnstcw
jmp
fdivr
std
jle
iret
dec
jmp
les
call
push
jg
dec
(bad)
repnz
(bad)
pop
jl
out
idiv
in
(bad)
cld
paddb
pop
cld
pop
scas
jg
out
lods
out
cld
repnz
ja
int
loop
sti
iret
jge
out
pop
(bad)
cld
aas
repnz
cld
fidiv
scas
fnstsw
pop
mov
lahf
hlt
xlat
push
std
gs
(bad)
pop
xchg
call
ja
xchg
scas
push
std
lds
outs
jo
jmp
std
sub
mov
outs
clc
fwait
(bad)
cmps
pop
jle
paddw
in
jg
aaa
mov
call
jmp
mov
sub
fnstsw
idiv
dec
mov
inc
sub
xchg
(bad)
ja
idiv
mov
cld
(bad)
jg
scas
icebp
pop
(bad)
pop
mov
dec
jg
out
cld
add
mov
mov
loope
repnz
jl
(bad)
sahf
jg
mov
jmp
clc
rcr
sub
(bad)
idiv
inc
inc
jno
lahf
(bad)
mov
lahf
std
cmps
(bad)
ficomp
outs
mov
xchg
push
mov
lahf
push
jmp
(bad)
(bad)
aaa
(bad)
mov
ret
iret
jg
fucomip
loope
fucomp
(bad)
(bad)
aam
mov
int
mov
out
dec
lahf
repnz
jmp
cld
retf
(bad)
icebp
jg
lahf
pop
(bad)
cmp
pop
hlt
sbb
sahf
jg
pop
(bad)
jmp
pop
aas
stc
jg
lahf
mov
cld
jmp
pop
cld
pop
jmp
lahf
icebp
outs
cld
ds
mov
mov
jle
(bad)
daa
into
push
jg
sub
mov
loopne
stc
pop
(bad)
scas
pop
push
pushf
jge
lahf
cmp
lods
dec
out
call
jmp
out
pop
mov
dec
push
jg
aas
sti
std
mov
scas
icebp
cmp
das
std
cmp
stc
pop
mov
loopne
lock
lahf
push
inc
repnz
sti
pop
pop
inc
mov
repnz
std
retf
jg
hlt
idiv
pop
push
jg
in
jg
daa
mov
jmp
std
leave
(bad)
sti
psubw
idiv
out
jmp
(bad)
lds
xchg
in
call
mov
ja
(bad)
stos
push
cli
hlt
aas
cld
(bad)
xchg
push
(bad)
cld
out
pop
jne
lahf
cli
pop
(bad)
xchg
out
cmp
int
(bad)
cwde
lahf
stc
xor
(bad)
outs
lock
pop
mov
paddd
rcl
shr
cli
aas
mov
fdivr
aad
repnz
(bad)
mov
push
out
cld
out
jle
pop
push
pop
inc
in
aas
mov
(bad)
(bad)
fucomip
scas
sti
pop
(bad)
clc
aas
jmp
cmc
lds
stc
dec
jle
(bad)
cli
in
fstp
not
mov
jg
adc
cmc
daa
(bad)
out
mov
(bad)
clc
jg
mov
(bad)
aas
inc
mov
out
std
jmp
(bad)
fidivr
mov
in
pop
xor
mov
(bad)
imul
and
jg
lahf
sti
addr16
in
jg
cmps
idiv
jg
daa
mov
(bad)
push
call
fdivr
xchg
std
inc
outs
iret
jle
jg
lahf
call
lods
mov
jmp
push
out
(bad)
mov
sti
xor
aas
clc
xlat
(bad)
fwait
cmps
pop
cld
data16
fucomp
lock
call
in
mov
(bad)
test
jecxz
icebp
(bad)
clc
int
xchg
mov
scas
xchg
(bad)
jmp
jg
pop
not
fstp
out
jnp
aad
lock
xchg
(bad)
clc
pop
hlt
iret
cld
fcos
sti
outs
(bad)
out
(bad)
mov
(bad)
pop
sti
jmp
pop
push
pop
xrelease
hlt
outs
(bad)
arpl
out
icebp
pop
cmp
mov
jae
mov
(bad)
clc
push
das
(bad)
ja
(bad)
shl
mov
not
pop
repz
std
ss
cmps
call
fcomip
(bad)
std
xor
jmp
dec
std
sbb
out
jg
cld
cld
(bad)
jge
xchg
cli
jg
dec
(bad)
loop
clc
hlt
fldcw
inc
pop
cld
mov
jbe
int
loope
stc
repnz
pop
inc
push
pop
(bad)
sahf
dec
idiv
cmps
pop
repnz
outs
repnz
(bad)
cmp
(bad)
in
pop
repz
aas
jle
fistp
retf
pop
mov
std
idiv
jecxz
aas
idiv
(bad)
jnp
clc
push
cmps
jg
das
sti
in
rcr
jge
call
stos
pop
xchg
aad
jns
ja
retf
fistp
std
das
call
mov
aas
in
scas
std
sbb
sti
pop
jle
test
mov
cli
pop
cld
lods
(bad)
rcr
in
push
cmp
out
jne
leave
mov
(bad)
mov
push
jg
in
stc
(bad)
(bad)
cmp
cmp
jg
pop
dec
mov
cld
movs
jg
fistp
(bad)
cli
out
sbb
lahf
stc
(bad)
jmp
call
jg
pop
stc
xchg
out
jg
xchg
mov
clc
pop
jmp
sahf
mov
mov
out
scas
repz
std
(bad)
mov
inc
(bad)
mov
stc
mov
sti
pop
dec
out
sti
scas
mov
fild
mov
std
aas
jl
lods
push
ja
pop
out
jmp
jg
inc
cmps
fstp
xlat
gs
je
push
dec
clc
iret
std
xchg
aas
(bad)
xlat
std
aam
(bad)
cmp
imul
fisub
inc
pop
mov
fst
fcomip
jg
xlat
jle
mov
jle
in
mov
mov
jmp
pop
lock
std
inc
(bad)
int
fnstsw
jp
aas
sti
jne
xchg
jmp
ja
inc
(bad)
stc
push
xlat
inc
out
jmp
jg
scas
cld
mov
in
cli
mov
ret
jg
pop
cld
sar
pop
hlt
sti
jge
xlat
(bad)
sbb
(bad)
std
in
stos
jecxz
test
adc
in
cld
cs
(bad)
push
cmps
std
push
inc
leave
mov
mov
dec
sar
lahf
jge
fwait
cld
adc
rcr
cmc
pop
and
repz
std
adc
lds
pop
jl
(bad)
dec
(bad)
in
aad
jne
xchg
sub
(bad)
aas
idiv
(bad)
jmp
aas
mov
ficomp
imul
cld
sbb
js
aas
sti
lahf
jle
imul
(bad)
loop
mov
test
mov
dec
mov
fcomip
psubb
push
fdivr
sub
repnz
leave
mov
mov
pop
cld
jae
retf
(bad)
idiv
dec
sti
and
lea
fucomip
aas
cld
pop
out
std
bnd
out
jmp
jmp
mov
mov
xor
leave
pop
sti
das
inc
push
mov
inc
std
cli
mov
std
adc
repz
(bad)
mov
lahf
std
xor
ret
scas
(bad)
jnp
(bad)
xchg
mov
cli
fdivrp
jg
stc
lock
sti
pop
jmp
adc
cli
daa
mov
jg
pop
cmp
out
stos
pop
cli
xchg
ins
push
jg
call
adc
sti
arpl
xchg
fucomip
dec
call
idiv
pop
dec
mov
idiv
lahf
cmc
in
mov
aas
pop
mov
aaa
cli
aad
rcr
clc
push
jg
jb
pop
std
daa
aas
ss
jg
fnstsw
dec
or
cmc
jmp
mov
inc
fdivrp
pop
mov
in
psubb
pop
icebp
sbb
std
fisttp
mov
xlat
stc
test
aam
(bad)
loop
call
jmp
hlt
loop
stc
addr16
fdivr
retf
aas
hlt
dec
cld
lea
stc
fstp
(bad)
cld
dec
jle
jg
outs
std
pop
(bad)
sar
std
inc
movs
add
std
(bad)
retf
das
ds
repz
ja
jne
xchg
stc
pop
cld
push
mov
aaa
fnstcw
imul
aam
icebp
(bad)
cld
popa
paddd
jg
out
push
pop
mov
sti
(bad)
addr16
scas
(bad)
daa
(bad)
push
jg
mov
push
outs
js
sti
pop
xchg
(bad)
out
fcomip
cmps
dec
pop
jmp
ret
call
adc
call
aas
pop
(bad)
push
out
sbb
jmp
cld
in
std
pop
pop
dec
fsubp
jmp
pop
(bad)
jmp
imul
std
retf
jg
aas
std
mov
jmp
enter
pop
jg
(bad)
shl
(bad)
lods
aas
div
out
std
xor
pop
push
aas
cmc
iret
stc
jecxz
cli
outs
cld
sti
out
std
xchg
fucomip
(bad)
(bad)
(bad)
pop
cmp
std
dec
(bad)
pop
jl
pop
sbb
das
sti
mov
aas
std
(bad)
pop
jg
paddw
(bad)
sti
dec
(bad)
xchg
jg
lahf
not
pop
cli
sbb
aad
not
in
repnz
jmp
cld
lahf
(bad)
push
(bad)
lods
aas
lock
aas
(bad)
daa
jge
cld
xor
pop
sti
das
jbe
icebp
aas
repz
aas
jmp
mov
jle
jg
sti
pop
stc
xchg
out
icebp
out
mov
fistp
icebp
mov
repz
std
in
scas
inc
mov
lds
mov
paddd
std
jg
dec
cmp
pop
dec
loop
cld
mov
inc
mov
sahf
(bad)
jmp
mov
stc
mov
(bad)
sub
ret
out
iret
clc
(bad)
mov
jmp
repnz
cmp
jecxz
pop
cld
lds
dec
loope
mov
(bad)
(bad)
test
jmp
jle
pop
std
xor
lds
mov
push
jmp
call
outs
repz
jmp
xchg
(bad)
(bad)
(bad)
mov
xlat
(bad)
clc
inc
push
in
inc
loop
(bad)
hlt
ja
iret
dec
pop
push
jge
std
inc
shr
jle
cli
inc
mov
les
pop
cld
push
mov
xchg
outs
std
loope
in
mov
(bad)
fstp
cmc
mov
aad
loop
neg
repz
inc
sahf
call
shr
(bad)
jmp
call
in
jg
fwait
idiv
fnstsw
iret
mov
mov
mov
scas
in
(bad)
lahf
cld
lahf
jle
xlat
jp
outs
(bad)
xor
ret
cli
mov
mov
cli
pop
out
std
xchg
jmp
lahf
clc
neg
aas
jg
ja
fst
mov
aas
clc
sar
(bad)
daa
jmp
aas
(bad)
mov
in
cld
pop
bnd
cli
clc
idiv
emms
jle
mov
bnd
(bad)
mov
gs
jg
not
stc
xchg
(bad)
in
repnz
xchg
stc
das
cld
dec
ja
(bad)
(bad)
std
stc
repz
cld
dec
(bad)
scas
(bad)
clc
lahf
lock
std
in
into
pop
icebp
pop
das
jle
out
pop
icebp
out
cld
ins
push
pop
pop
cld
jbe
clc
xlat
stc
in
call
aas
cld
ud0
call
push
(bad)
fidivr
fild
pop
jg
cmps
std
xor
(bad)
xchg
xlat
mov
dec
cmp
cld
dec
sti
lahf
dec
or
inc
scas
mov
repz
pop
mov
fistp
cli
lahf
(bad)
popa
dec
jg
lock
cld
idiv
(bad)
jbe
loop
(bad)
rcr
jmp
(bad)
mov
fild
xchg
cld
mov
pop
cld
iret
data16
pop
clc
outs
cld
push
mov
std
(bad)
push
pop
lods
jle
outs
std
scas
idiv
stc
(bad)
push
aaa
std
retf
jmp
(bad)
mov
cli
jmp
repz
lahf
idiv
cmp
pop
clc
sbb
int
leave
fcomip
ud0
icebp
imul
jg
repnz
dec
aad
hlt
adc
cmp
cmp
fisubr
sti
(bad)
push
jg
dec
dec
jg
push
jg
scas
sti
(bad)
mov
inc
cld
fucomip
out
(bad)
stc
jnp
aaa
ja
cmc
in
paddw
inc
scas
mov
icebp
aas
jno
ja
cmps
jg
aas
clc
scas
int
sti
iret
pop
std
pop
fistp
pop
(bad)
xchg
mov
scas
jg
(bad)
scas
cld
inc
int
jnp
inc
dec
pop
das
call
jl
in
(bad)
(bad)
jmp
jl
pop
mov
lahf
imul
ja
xchg
push
xchg
(bad)
jmp
mov
scas
(bad)
mov
jne
pop
cld
xchg
pop
(bad)
mov
stos
(bad)
stc
jg
jne
xchg
xor
(bad)
ds
jg
(bad)
lahf
dec
std
ss
fistp
jg
sbb
cld
mov
clc
aas
clc
gs
jg
cli
idiv
mov
mov
ret
(bad)
jnp
inc
jg
scas
repz
retf
call
jmp
jle
popf
mov
clc
(bad)
(bad)
mov
stc
xchg
idiv
outs
std
cmc
xchg
push
xchg
out
inc
jmp
lahf
cli
xchg
(bad)
mov
test
jg
das
stc
and
paddd
mov
pop
call
jg
push
(bad)
clc
scas
call
std
int
rcr
std
loopne
std
pop
inc
repnz
lock
std
pop
(bad)
std
lahf
test
std
sbb
xor
daa
jg
pop
lock
pop
(bad)
movs
push
pop
std
fnstsw
pop
lock
jg
pop
(bad)
mov
mov
call
lahf
std
loopne
sti
dec
out
(bad)
pop
mov
cmp
push
mov
popf
inc
mov
jg
aas
repnz
(bad)
hlt
jg
lahf
std
cdq
jmp
(bad)
pop
std
(bad)
(bad)
shr
inc
(bad)
jge
cld
cmp
aas
call
fstp
(bad)
mov
lahf
cli
ret
out
call
ins
jle
pop
sahf
std
scas
jg
dec
cld
pop
push
out
test
jg
(bad)
mov
lds
std
cmps
cld
or
mov
fistp
std
mov
pop
std
push
mov
sub
sti
fwait
jg
mov
call
jmp
push
fucomip
ja
(bad)
in
dec
(bad)
aad
jmp
sti
addr16
push
inc
mov
stos
jle
pop
out
xlat
clc
mov
xor
ror
dec
(bad)
jg
jg
(bad)
cmp
inc
repnz
(bad)
xor
fistp
stc
sub
mov
sbb
(bad)
repnz
clc
stos
push
(bad)
mov
loopne
aas
push
(bad)
out
jg
in
out
scas
repz
cld
cmp
jmp
cld
pop
notrack
fstp
outs
xor
test
cld
call
jg
pop
pop
inc
std
jecxz
stos
repnz
clc
xor
pop
jae
(bad)
std
into
jg
(bad)
std
ja
jg
idiv
call
jmp
aas
cmc
das
js
out
cli
popf
push
aas
div
sti
daa
(bad)
mov
call
repz
mov
push
std
sbb
(bad)
pop
(bad)
mov
(bad)
sahf
aad
mov
shl
dec
ret
cmc
jg
loop
mov
fcomip
(bad)
cld
es
lahf
sti
dec
cld
scas
mov
jmp
rcr
pop
std
scas
scas
jle
leave
in
cld
ins
jmp
aad
lock
fwait
jg
repz
(bad)
jnp
int
jns
inc
std
stos
jg
cmps
(bad)
(bad)
in
std
sti
xchg
mov
inc
aas
hlt
xchg
cmp
cld
add
lahf
(bad)
mov
in
clc
stc
aas
stc
cli
popa
stc
sti
cld
jns
inc
icebp
idiv
and
lds
icebp
scas
inc
push
mov
(bad)
jmp
mov
fbstp
(bad)
jmp
(bad)
pop
dec
clc
retf
idiv
xlat
jg
(bad)
inc
jle
jg
pop
lahf
cld
mov
mov
fisttp
std
dec
push
(bad)
repnz
aas
loopne
cli
lods
jle
mov
dec
push
jg
aaa
jle
(bad)
xchg
jg
mov
jg
out
neg
(bad)
std
scas
mov
in
loopne
cld
cld
iret
sbb
mov
jmp
inc
(bad)
call
jmp
in
cld
loop
clc
inc
cli
daa
cld
cli
jg
pop
stc
fwait
(bad)
mov
loop
(bad)
xlat
push
(bad)
stc
sbb
sbb
jbe
repz
cld
sbb
cld
lahf
imul
jg
lahf
mul
mov
stc
mov
repz
cdq
(bad)
clc
pop
clc
repz
(bad)
out
pushf
(bad)
pop
(bad)
std
aas
mov
sti
out
repz
in
mov
sti
(bad)
cdq
inc
lahf
js
lahf
(bad)
jmp
loop
lock
pop
xchg
outs
clc
(bad)
mov
mov
repz
(bad)
mov
cmc
jg
cli
sar
fdivrp
jmp
jmp
loopne
stc
das
(bad)
in
aas
loopne
jmp
pop
jmp
cdq
inc
hlt
fistp
jle
std
loopne
call
jg
ja
fistp
fwait
pop
stc
repnz
(bad)
jecxz
fnstsw
div
sti
scas
jg
fnstcw
xchg
retf
jg
pop
cld
add
(bad)
in
pop
hlt
aaa
adc
jg
(bad)
cli
aas
std
xor
dec
stc
pop
dec
adc
aad
test
xchg
fucomip
iret
clc
pop
ud0
pop
stc
sub
out
std
in
(bad)
lods
pop
lock
jnp
imul
sti
(bad)
mov
jnp
push
mov
scas
inc
repz
(bad)
out
lds
stc
sub
lock
(bad)
xor
out
std
popf
ja
loope
popa
cmp
std
pop
(bad)
mov
dec
jg
jg
(bad)
lods
(bad)
loopne
push
std
mov
loop
dec
lahf
cld
sbb
or
mov
std
pop
std
fdivr
lock
pop
dec
push
(bad)
out
rol
(bad)
idiv
lahf
std
pop
mov
popa
jg
std
jg
pop
call
mov
call
sti
idiv
adc
cmp
mov
aas
stc
imul
dec
push
pop
call
cld
inc
(bad)
cmp
(bad)
dec
jmp
stc
inc
inc
hlt
push
(bad)
(bad)
dec
lahf
jle
xor
dec
aas
icebp
aas
clc
mov
jae
cmp
pop
jg
repnz
into
mov
addr16
out
out
scas
icebp
std
(bad)
call
mov
call
pop
dec
jle
jmp
aaa
clc
in
lahf
idiv
lahf
jg
pcmpgtd
(bad)
std
hlt
pop
dec
call
jg
outs
cli
icebp
xchg
(bad)
call
repnz
cld
jle
jg
jg
mov
(bad)
pop
sti
fistp
jg
pop
(bad)
aam
stc
jmp
aas
mov
and
(bad)
stc
inc
(bad)
jmp
xchg
push
scas
cld
push
mov
(bad)
idiv
jg
or
(bad)
aas
loope
cli
jne
aas
js
pop
jmp
call
stos
cmp
cmp
pop
cld
imul
mov
dec
mov
fbstp
mov
pop
hlt
scas
std
dec
jg
pop
repz
cld
cmps
idiv
aas
jmp
cld
cmp
hlt
(bad)
cli
out
jp
iret
mov
in
aas
lock
cmp
cmp
cdq
repnz
std
imul
jg
loop
pop
std
mov
ins
jg
jmp
inc
mov
sub
jg
push
cld
add
xlat
pop
mov
(bad)
mov
out
(bad)
push
call
pop
mov
std
iret
popf
push
retf
outs
jno
(bad)
arpl
loop
std
mov
jg
loope
imul
ds
in
mov
iret
clc
push
dec
pop
stc
cmps
mov
ja
(bad)
hlt
jnp
lds
fbstp
jg
pop
out
das
std
gs
mov
std
mov
imul
pop
ja
idiv
dec
call
jg
aas
jnp
aas
call
(bad)
sti
(bad)
cli
mov
jecxz
sti
loop
cmp
push
pop
std
add
fnstsw
sar
in
(bad)
(bad)
outs
cli
cmp
hlt
(bad)
mov
sar
(bad)
lahf
stc
(bad)
push
pop
dec
(bad)
clc
pop
jmp
std
mov
dec
std
fnstsw
aas
std
pop
dec
neg
mov
push
inc
lahf
jp
jg
pop
jge
mov
repnz
stc
adc
jg
mov
jg
daa
lahf
std
xchg
jg
aas
test
or
push
aas
(bad)
jnp
call
(bad)
sti
mov
inc
(bad)
aaa
jg
ret
mov
lahf
inc
and
dec
aas
sti
call
call
call
std
scas
mov
jecxz
out
imul
hlt
das
clc
pop
inc
(bad)
(bad)
das
sti
std
inc
mov
ja
push
mov
inc
(bad)
and
repz
xchg
mov
leave
pop
dec
(bad)
jg
(bad)
push
(bad)
sti
dec
dec
jg
std
jno
(bad)
(bad)
stc
daa
(bad)
(bad)
jg
jg
xchg
(bad)
mov
retf
out
stc
xchg
cld
(bad)
jmp
jg
stc
out
not
jl
cmp
into
ret
fucomip
bnd
outs
jle
cmp
jg
aas
push
xchg
pop
cld
outs
inc
repz
mov
sub
add
repnz
(bad)
pop
(bad)
outs
mov
mov
mov
aas
(bad)
dec
jle
jg
daa
jmp
aas
sti
vmaxsd
(bad)
std
in
(bad)
test
xlat
jle
fist
mov
int
std
mov
pop
push
aas
sub
inc
stos
jg
test
cld
scas
inc
aas
cli
aad
std
cli
stc
fcomip
addr16
imul
out
outs
cli
or
mov
jg
aas
icebp
icebp
pop
(bad)
cmps
(bad)
xlat
idiv
jmp
out
outs
jl
mov
call
aas
je
scas
(bad)
mov
leave
fcomip
fwait
std
icebp
jg
jg
sbb
idiv
fisubr
sti
in
mov
cmp
xchg
loop
std
idiv
in
sub
clc
stc
(bad)
(bad)
aas
call
mov
(bad)
stc
(bad)
cli
pop
sti
inc
jg
pop
div
in
jg
mov
idiv
pop
ja
mov
cmps
(bad)
mov
ins
(bad)
xchg
pop
repz
jg
outs
jnp
mov
pandn
outs
iret
mov
mov
(bad)
repnz
(bad)
dec
pop
cmp
out
std
push
mov
mov
lds
icebp
lods
outs
jmp
cld
cmp
idiv
ja
shr
std
fcmovnb
mov
cli
jg
mov
std
hlt
pop
cld
retf
ficom
jg
addr16
sti
pop
cld
sar
std
repnz
(bad)
cld
aaa
jmp
in
outs
mov
scas
cld
sbb
(bad)
imul
cld
inc
iret
jmp
mov
in
xchg
(bad)
jl
imul
pop
std
repnz
stc
push
mov
jmp
sti
aas
clc
inc
jmp
mov
mov
xchg
(bad)
in
jg
daa
jle
mov
cmp
mov
loopne
stc
stos
dec
inc
pop
dec
sbb
mov
rcr
push
inc
mov
inc
(bad)
(bad)
sar
clc
aas
cld
stos
call
aas
stc
cmc
mov
in
das
dec
call
idiv
std
lahf
(bad)
adc
jg
jg
aad
jmp
(bad)
jmp
mov
pop
cld
pop
fstp
cld
jmp
jg
(bad)
std
lahf
idiv
lock
out
outs
(bad)
jge
leave
(bad)
outs
lock
mov
loope
scas
cli
dec
(bad)
out
pop
sti
xor
(bad)
jmp
jnp
sar
imul
(bad)
adc
in
sti
inc
jge
xchg
(bad)
loopne
pop
mov
jg
dec
call
scas
sti
rcr
inc
call
cmps
cld
rcr
cld
ret
(bad)
clc
pop
repz
cmp
pop
inc
aas
stc
(bad)
(bad)
inc
mov
jle
jg
xlat
(bad)
popf
out
jmp
xchg
jle
aas
repz
jmp
mov
push
(bad)
clc
cmc
jle
mov
sahf
cld
sbb
pop
je
cld
dec
mov
psubq
clc
mov
push
repz
(bad)
in
mov
(bad)
fdivr
jle
(bad)
clc
lahf
sub
xlat
std
mov
in
pop
cld
xchg
jmp
loop
cld
(bad)
dec
jg
std
jmp
(bad)
neg
stc
(bad)
dec
jg
lahf
call
(bad)
popf
cmps
mov
(bad)
cmp
fcomip
(bad)
lods
push
std
cs
pop
(bad)
fnstsw
xlat
cld
out
(bad)
std
aaa
jmp
out
lock
fstp
in
aaa
stc
add
mov
cli
std
aas
cmp
mov
mov
lods
mov
dec
sar
mov
pop
mov
div
(bad)
sti
lods
jle
push
cmps
std
sbb
clc
pop
(bad)
cmp
xchg
mov
dec
jg
aas
call
das
cli
ret
xchg
jmp
out
call
loop
clc
inc
jl
dec
pop
(bad)
hlt
outs
cmc
mov
outs
lock
and
std
lock
(bad)
fwait
(bad)
mov
xchg
ret
jg
ja
dec
jbe
xchg
addr16
neg
mov
aas
clc
pop
pop
cld
sar
scas
(bad)
out
aas
(bad)
scas
std
jbe
cmc
pop
mov
inc
idiv
push
cld
loop
jecxz
jmp
outs
icebp
(bad)
std
jmp
shl
aas
jnp
stos
push
mov
in
stc
xor
mov
loopne
idiv
cld
lahf
mov
(bad)
repnz
std
fnstcw
(bad)
cli
imul
stc
movd
outs
std
ud0
out
das
cli
mov
adc
scas
mov
fcos
hlt
mov
jmp
jmp
mov
adc
scas
jg
lahf
(bad)
sbb
lock
aas
clc
idiv
pop
call
aas
in
std
dec
xlat
call
out
clc
fistp
(bad)
mov
aas
imul
clc
xchg
lock
fcomp
mov
dec
out
lds
fwait
aas
jecxz
sti
aas
inc
sti
(bad)
mov
cli
(bad)
sbb
std
(bad)
sti
(bad)
fsub
pop
(bad)
daa
(bad)
test
fwait
jmp
call
cmp
daa
jg
out
cmc
jecxz
(bad)
cld
mov
das
jnp
outs
cld
pop
mov
idiv
xor
aas
jg
cmp
adc
mov
inc
pop
jecxz
(bad)
in
aas
push
(bad)
ins
jg
pop
cli
xchg
pop
jg
cmc
shl
idiv
rol
mov
mul
mov
retf
stc
das
cli
test
inc
in
pop
hlt
lahf
cld
popa
mov
mov
xlat
std
jns
jg
(bad)
in
xchg
cld
fld
call
cli
jg
outs
icebp
or
std
cs
cmps
mov
mov
mul
stc
dec
mov
scas
(bad)
fstp
aas
out
aaa
(bad)
std
jle
xchg
jg
idiv
mov
loope
test
jnp
iret
push
int
stc
inc
jg
lahf
stc
(bad)
call
cld
(bad)
jg
loope
inc
(bad)
cs
xchg
call
aas
std
or
cld
(bad)
into
rcr
jmp
stc
mov
in
dec
lock
pop
push
mov
(bad)
mov
push
cld
mov
jmp
pop
pop
push
out
xchg
hlt
pop
dec
fistp
ret
pop
repnz
dec
jmp
add
idiv
idiv
adc
out
(bad)
jmp
std
mov
pop
repnz
(bad)
mov
ja
(bad)
cld
test
repz
jl
aaa
dec
dec
jns
jmp
jg
imul
jmp
scas
mov
ja
fwait
(bad)
fstp
cli
pop
cmp
arpl
scas
clc
sub
jmp
jg
mov
jg
pop
(bad)
out
mov
(bad)
mov
stc
mov
jne
aas
cli
jg
or
cdq
aas
mov
jmp
(bad)
mov
cmp
inc
lahf
std
pop
inc
jg
dec
jl
call
(bad)
cld
jg
out
cmp
pop
jmp
jg
cld
pop
inc
repnz
aas
sti
imul
jecxz
jmp
mov
(bad)
std
xchg
cld
jge
cli
call
(bad)
xchg
pop
out
cmp
mov
iret
stc
sbb
ret
clc
jge
cli
aas
jmp
(bad)
mov
push
(bad)
repnz
out
inc
jle
aas
stc
iret
jg
jmp
mov
outs
imul
jg
mov
mov
mov
aad
not
(bad)
mov
jge
lahf
pop
mov
cmp
pxor
stos
pop
cld
popf
das
push
(bad)
mov
std
cmps
push
leave
pop
jb
stc
cmps
dec
lahf
clc
out
stc
adc
sti
jge
push
pop
std
sub
outs
aas
frndint
pop
mov
push
inc
inc
jmp
(bad)
leave
inc
repnz
cdq
jmp
cmp
sti
aas
push
(bad)
stc
das
stc
xchg
fwait
xchg
aas
loope
js
lahf
(bad)
outs
lds
clc
loopne
jmp
jg
jmp
in
pop
(bad)
cmp
jg
pop
neg
cld
out
cld
mov
outs
jne
jnp
out
cld
jmp
cmp
aas
jb
xchg
mov
dec
(bad)
lock
(bad)
stc
je
sti
jmp
push
mov
jmp
call
lahf
stc
(bad)
jnp
(bad)
call
mov
push
lahf
lock
movs
mov
out
std
aad
loopne
dec
mov
jg
fucomi
(bad)
fidivr
pop
ja
lahf
inc
jg
jg
(bad)
outs
jle
mov
stc
pop
pushf
(bad)
jmp
stc
(bad)
mov
out
std
paddw
iret
lds
jo
mov
sahf
std
stc
jg
out
sti
lahf
addr16
mov
cdq
inc
out
dec
xor
pop
std
idiv
std
aas
repz
jge
das
out
call
aad
(bad)
mov
cld
cmc
inc
jmp
hlt
aas
dec
aaa
pop
jg
xlat
sbb
loope
int
std
daa
cld
dec
push
jg
fwait
cld
gs
fsubr
out
les
cmps
push
cmp
in
pop
mov
pop
jmp
jg
(bad)
rcr
outs
aas
clc
(bad)
not
lahf
std
mov
ja
jmp
jg
pop
jmp
(bad)
jmp
lods
mov
arpl
pop
cmps
pop
std
jbe
ret
aas
jmp
mov
mov
(bad)
fcomi
mov
jmp
int
call
jg
pop
(bad)
(bad)
fidivr
(bad)
jp
fcos
(bad)
mov
mov
mov
idiv
fistp
scas
cld
mov
stos
jle
lahf
dec
mov
loop
jg
jg
clc
mov
mov
xlat
stc
repnz
cld
cmc
jle
mov
iret
dec
test
lds
jg
pop
std
xor
(bad)
stc
cmp
xlat
cld
cmc
pop
(bad)
fidivr
aaa
cmc
pop
jg
outs
mul
cld
lahf
mov
inc
mov
in
call
std
daa
cld
xchg
mov
(bad)
stc
jg
push
jge
(bad)
jecxz
jmp
jg
imul
mov
jg
pop
cld
add
jmp
sar
aas
jmp
pop
push
jg
pop
(bad)
xchg
jg
jg
out
outs
xchg
mov
pop
out
das
cld
fistp
mov
jle
aas
repz
cld
jae
repnz
dec
stc
xchg
ret
mov
out
jg
pop
push
(bad)
scas
aas
sti
aaa
ds
jecxz
xchg
aas
jl
xchg
jg
repnz
clc
pop
jecxz
sti
in
dec
outs
imul
dec
mov
clc
scas
std
mov
aam
lock
std
data16
lahf
sti
dec
(bad)
icebp
call
fbstp
(bad)
(bad)
out
loopne
mul
pop
jg
mov
(bad)
stc
ja
(bad)
sti
cld
out
das
(bad)
stos
aas
cmc
jg
out
(bad)
mov
inc
(bad)
call
outs
jge
xchg
std
popf
jg
repz
(bad)
(bad)
sar
out
(bad)
gs
lahf
test
xlat
mov
cld
fnstsw
idiv
out
pop
(bad)
jnp
hlt
addr16
cld
adc
mov
jg
fcomip
dec
sti
pop
into
dec
std
dec
jg
aas
out
call
xchg
jg
sti
jg
rcl
lock
fcomp
dec
(bad)
(bad)
pop
sti
mov
fstp
(bad)
mov
(bad)
call
(bad)
outs
div
mov
sti
jg
pop
pop
lea
push
fwait
pop
dec
test
fistp
loopne
not
gs
pop
push
cdq
jg
aas
mul
dec
outs
call
shl
psrld
icebp
pop
sahf
cld
inc
jg
rcr
repnz
ret
inc
pop
idiv
aas
std
aaa
clc
sti
jmp
mov
loopne
pop
sti
iret
std
pop
dec
out
hlt
iret
(bad)
out
jg
lahf
stc
dec
jle
jg
aas
jns
lock
cmp
(bad)
pop
cli
popf
pop
cld
es
dec
cld
push
jg
lahf
(bad)
out
call
std
push
jle
lahf
mov
aas
jnp
pop
std
repz
aas
icebp
pop
(bad)
(bad)
mov
dec
(bad)
lock
(bad)
clc
pop
mov
fild
repnz
jp
addr16
pop
clc
popf
call
std
dec
(bad)
jmp
jecxz
cmp
mov
retf
aas
repz
sti
ret
(bad)
jecxz
loop
jl
mov
jmp
out
paddb
btr
std
mov
retf
mov
fnstsw
pop
cli
xchg
(bad)
cmc
jg
aas
(bad)
sti
cld
out
mov
push
(bad)
jmp
jg
rcr
(bad)
fcomi
lahf
cmc
push
jl
jmp
das
outs
ror
mov
out
pop
hlt
aaa
popf
cld
jae
dec
retf
jg
mov
mov
repz
fwait
jmp
fistp
cli
inc
(bad)
cmps
jg
aas
cmc
out
jg
dec
dec
idiv
or
mov
pop
cld
mov
stc
mov
adc
fstp
das
(bad)
(bad)
mov
mov
out
jmp
lds
iret
ins
std
pop
(bad)
sti
ja
(bad)
jg
(bad)
sti
jle
outs
(bad)
aaa
(bad)
jbe
int
(bad)
(bad)
std
std
mov
xchg
jg
(bad)
stc
ja
jg
dec
std
mov
jg
jnp
(bad)
(bad)
fcomip
jmp
mov
cli
mov
pop
push
(bad)
stc
scas
stc
iret
jmp
mov
or
cld
scas
jle
std
jnp
test
hlt
cld
scas
clc
ins
(bad)
and
mov
pop
repnz
std
adc
cmps
push
(bad)
mov
repz
in
out
std
or
cld
xlat
aas
cld
jne
sti
(bad)
out
mov
std
mov
mov
aaa
std
xchg
inc
std
(bad)
aas
clc
dec
std
mov
fnstcw
outs
out
(bad)
cmps
scas
pop
in
(bad)
in
cmp
aam
(bad)
das
std
xor
iret
fs
ss
outs
jmp
mov
cld
xchg
pop
icebp
out
pop
(bad)
rcr
aad
repnz
mov
mov
in
outs
sub
aad
in
std
(bad)
popf
jmp
scas
cld
xchg
(bad)
lods
aas
loop
cld
inc
jle
cld
das
stc
push
jle
fild
dec
dec
jg
jmp
in
cli
iret
dec
jg
mov
fdivrp
retf
jmp
jle
aas
std
adc
jg
(bad)
jmp
rcr
mov
(bad)
jmp
jmp
cli
(bad)
inc
(bad)
inc
jg
repnz
mov
out
jmp
out
lahf
icebp
(bad)
es
pop
imul
std
loop
fucomip
xlat
stc
aaa
pop
(bad)
jno
add
mov
mov
aaa
stc
clc
mov
cld
push
aas
cli
or
xlat
std
jne
inc
cmc
aaa
std
sbb
sar
jmp
dec
jle
(bad)
out
dec
inc
ror
mov
pop
jecxz
std
int
fnstcw
(bad)
mov
push
(bad)
(bad)
jge
iret
repz
outs
fdivr
idiv
sbb
out
cld
cmp
rcr
sti
or
cmp
std
dec
mov
div
clc
jae
sar
(bad)
sti
outs
(bad)
stc
mov
mov
xlat
stc
jae
mov
pop
jg
das
(bad)
out
cld
test
(bad)
dec
inc
scas
cli
mov
sti
std
cmp
dec
jle
pop
mov
(bad)
cdq
(bad)
aas
sahf
dec
cmc
jg
daa
jl
cli
pop
(bad)
mov
outs
clc
mov
std
fwait
popf
aas
jle
dec
ins
lahf
std
fadd
in
scas
inc
xlat
(bad)
call
iret
ud0
jecxz
sti
int
lea
aaa
pop
cld
pop
aas
jge
out
dec
jg
(bad)
clc
cmp
lods
sti
xchg
jg
dec
std
aaa
jg
pop
jl
pop
cli
jmp
(bad)
cli
out
cwde
(bad)
push
ja
stos
mov
(bad)
inc
push
pop
scas
stc
out
dec
jle
std
add
cld
lahf
cld
ret
xlat
pop
iret
jle
aas
jmp
std
mov
outs
(bad)
ds
inc
mov
out
cld
xchg
(bad)
(bad)
cmp
(bad)
out
dec
sti
jg
(bad)
cld
addr16
fwait
(bad)
in
pop
mov
dec
call
mov
pop
cld
int3
jmp
call
cmps
inc
aas
jp
push
neg
push
inc
push
pop
clc
mov
push
das
stc
mov
pop
aas
cld
jmp
ret
jg
(bad)
daa
(bad)
cli
mov
neg
neg
dec
jg
jmp
icebp
mov
mov
std
(bad)
mov
pop
cs
gs
std
mov
push
cld
ror
cld
pop
call
arpl
jg
and
xchg
hlt
repz
(bad)
call
inc
jg
aad
repz
mov
mov
pop
cli
dec
(bad)
out
pop
test
cli
imul
mov
(bad)
call
lds
cmc
(bad)
sbb
std
call
aas
jl
(bad)
call
xchg
pop
(bad)
jg
fcomip
jnp
mov
jmp
cld
pop
(bad)
cmc
(bad)
fdivrp
xchg
mov
jg
in
icebp
imul
bswap
jg
retf
(bad)
out
jg
repnz
mov
pop
stc
(bad)
inc
cmp
aas
cli
sub
(bad)
das
jle
push
sti
(bad)
es
fsubr
push
iret
cld
sti
jg
aas
(bad)
jecxz
fmul
mov
(bad)
mov
xlat
call
fnstcw
cli
scas
cli
imul
pop
inc
pop
repnz
xchg
push
lahf
idiv
fcomip
outs
std
push
jg
call
neg
cld
mov
imul
(bad)
jg
aas
jmp
(bad)
fdivr
cld
movs
jg
inc
scas
inc
jmp
ret
inc
leave
scas
cld
xlat
pop
(bad)
in
(bad)
inc
mov
idiv
sti
das
jg
mov
(bad)
jecxz
(bad)
aas
stc
lea
mov
jle
jg
out
stc
pop
hlt
pop
cld
add
call
(bad)
call
xchg
sti
popf
(bad)
inc
idiv
mov
pop
(bad)
repnz
jmp
dec
(bad)
cmps
aas
icebp
idiv
mov
ja
mov
ret
mov
daa
(bad)
in
mov
sti
cdq
out
into
xchg
jg
(bad)
clc
dec
inc
cwde
std
pop
jg
jg
(bad)
imul
hlt
cmp
adc
cld
pop
clc
out
fwait
aas
mov
into
in
fcomip
pop
ds
sbb
popf
dec
stc
pop
cld
or
idiv
mov
mov
jg
pop
div
jp
imul
inc
pop
mul
(bad)
sbb
(bad)
stos
mov
pop
cld
adc
fucomip
fstp
cmp
(bad)
lahf
(bad)
jle
fcomi
in
xlat
std
or
test
clc
push
std
jle
icebp
scas
sub
leave
jg
outs
(bad)
fwait
out
cmp
add
jl
cmps
pushf
jmp
pop
cld
cmps
cld
push
mov
cld
xchg
jg
aas
neg
std
(bad)
mov
push
inc
(bad)
jmp
cli
fistp
xlat
(bad)
sti
leave
aas
rep
aas
hlt
pop
stc
aaa
dec
aas
out
xchg
cld
gs
fistp
outs
cld
and
cld
pop
stc
dec
cld
sbb
aas
out
cli
aas
cld
pop
call
cld
scas
(bad)
out
jg
pop
std
scas
repz
(bad)
sti
dec
hlt
iret
call
std
mov
(bad)
repnz
jmp
sti
xchg
push
(bad)
aad
into
push
stc
popf
jg
aas
loopne
cli
jae
mov
cmp
cmp
jmp
ja
ins
jg
leave
lahf
idiv
inc
fist
stos
push
scas
(bad)
fcomp
in
pop
push
std
(bad)
in
out
cli
xlat
(bad)
in
jg
pop
std
test
xlat
out
sti
push
std
clc
pop
repz
lahf
(bad)
xchg
das
(bad)
(bad)
loop
clc
(bad)
ds
jmp
arpl
push
pop
std
mov
nop
jg
idiv
(bad)
jle
jg
aas
mov
cld
repz
out
jg
in
mov
std
scas
jg
jecxz
mov
loopne
jo
outs
dec
cs
jg
scas
cli
xchg
int
lock
aas
std
retf
(bad)
call
dec
call
xor
outs
cli
ja
sar
jg
daa
(bad)
jmp
fnstsw
int
jg
(bad)
cli
adc
fimul
aad
jg
out
fcomip
retf
(bad)
(bad)
jg
jg
retf
jle
(bad)
leave
iret
cld
fidivr
(bad)
pop
cld
(bad)
(bad)
mov
daa
std
sub
retf
push
(bad)
jmp
jg
outs
stc
jmp
(bad)
add
dec
clc
jmp
(bad)
jmp
cli
fstp
sti
out
mov
dec
dec
lahf
(bad)
jg
das
call
mov
mov
(bad)
xor
rcr
repz
jg
scas
cli
ja
stc
std
fcomip
(bad)
clc
iret
jle
(bad)
idiv
and
int
inc
retf
out
jmp
aas
idiv
dec
sbb
sti
mov
daa
jg
aas
push
repz
xchg
(bad)
pop
jge
dec
inc
jg
aas
repnz
std
sar
clc
or
mov
std
aas
inc
call
mov
mov
xor
sbb
lahf
stc
daa
cld
(bad)
clc
mov
imul
aas
icebp
sti
jmp
stos
stc
lds
ja
rcr
dec
mov
popf
(bad)
clc
scas
cld
inc
(bad)
idiv
repz
lahf
sti
and
icebp
pop
hlt
cmps
call
imul
push
aas
cld
and
cmps
mov
(bad)
push
jg
pop
cli
(bad)
std
shr
fbstp
(bad)
call
cld
push
std
pop
push
cmc
scas
sti
loopne
out
sti
jnp
imul
fwait
(bad)
mov
addr16
jmp
int
in
(bad)
pop
fdivrp
(bad)
retf
dec
std
(bad)
mov
mov
imul
sti
aas
div
pop
push
lahf
neg
jmp
jge
sar
push
mov
shl
clc
scas
sti
in
(bad)
fsubr
cld
inc
outs
data16
jmp
aad
icebp
fwait
jg
(bad)
cld
jmp
fcomip
out
stc
cmc
(bad)
mov
sbb
pushf
aas
jecxz
inc
(bad)
mov
or
aas
cli
jne
leave
(bad)
jmp
cs
icebp
pop
(bad)
xlat
ds
out
jg
lock
std
pop
call
jg
and
(bad)
dec
jg
lahf
mov
test
std
sti
(bad)
fnstcw
outs
call
mov
adc
mov
aas
stc
scas
std
pop
jg
pop
icebp
sbb
mov
in
pop
std
lahf
jle
aas
hlt
pop
out
jg
hlt
neg
cmp
aas
jno
pop
(bad)
cli
aas
neg
call
stc
daa
(bad)
xchg
mov
loopne
mov
mul
pop
jmp
das
push
sti
jg
aas
(bad)
and
hlt
lds
(bad)
(bad)
sbb
(bad)
mov
enter
lahf
std
mov
shr
cld
pop
jmp
adc
repnz
call
call
pop
icebp
out
jge
out
in
cmp
sti
fdivrp
pop
xchg
push
(bad)
(bad)
imul
imul
clc
(bad)
loop
inc
sahf
mov
stc
idiv
cs
pop
std
addr16
sti
aad
lahf
mov
jmp
jmp
inc
(bad)
fild
cld
jns
call
loop
std
mov
mov
fstp
js
outs
cmp
out
jmp
out
cld
repnz
inc
pop
imul
aas
cli
idiv
mov
(bad)
mov
mov
out
jmp
(bad)
(bad)
std
call
xlat
(bad)
mov
paddw
enter
(bad)
out
mov
std
mov
(bad)
std
(bad)
clc
scas
cld
sbb
aas
out
xlat
pop
cld
cmp
jmp
aaa
mov
jmp
in
out
(bad)
out
aas
std
adc
mov
jg
jg
pop
clc
popf
iret
dec
repz
(bad)
fistp
mov
cld
int3
out
pop
repz
jg
mov
outs
jl
dec
(bad)
icebp
jg
out
sti
outs
std
repz
pop
lock
repz
cli
repz
pop
jge
out
std
jae
xchg
aas
(bad)
sti
aas
sti
adc
in
cld
jge
mov
addr16
clc
xchg
retf
push
cld
ins
outs
(bad)
fsub
fcomip
aas
stc
neg
out
mov
sti
loop
aas
cld
lahf
jmp
xlat
cmp
adc
loop
jmp
mov
fsub
scas
neg
popf
mov
mov
jg
(bad)
(bad)
pop
std
pusha
(bad)
pop
(bad)
addr16
call
std
pop
jg
pop
(bad)
hlt
aas
stc
fistp
shl
jmp
sar
jmp
fistp
int3
fcomip
xor
pop
out
std
xchg
jg
outs
clc
scas
inc
jg
fbstp
cli
xchg
push
mov
mov
push
(bad)
fnstsw
out
lahf
cld
push
inc
out
neg
sub
out
cld
out
pop
scas
(bad)
call
call
inc
jns
sbb
movs
mov
int
jg
out
std
inc
mov
sbb
xor
stos
call
lahf
dec
fnstcw
cmc
sbb
into
jg
outs
imul
popf
jg
lahf
imul
in
cli
loope
std
pop
out
dec
jmp
(bad)
iret
jle
outs
outs
jmp
aas
jmp
std
inc
mov
jp
pop
cld
outs
(bad)
jmp
std
mov
push
jnp
jmp
cld
ja
das
mov
(bad)
pop
out
mov
dec
das
cld
mov
(bad)
push
repnz
dec
(bad)
scas
mov
das
repz
call
std
push
pop
std
mov
cli
out
ud0
pop
(bad)
fcomp
jmp
imul
mov
das
idiv
jmp
out
out
cld
ja
(bad)
(bad)
jmp
jmp
dec
jle
xchg
mov
(bad)
fsubr
cld
cmp
mov
mov
mov
idiv
into
lahf
idiv
rcr
mov
xchg
cmps
jg
mov
(bad)
push
(bad)
sbb
(bad)
icebp
xor
out
call
jmp
call
jmp
dec
dec
xchg
daa
retf
mov
sar
scas
pop
jge
imul
es
lods
sar
mov
xor
out
cld
pop
mov
jle
aas
clc
ud0
jg
(bad)
cld
imul
jg
lahf
cli
fwait
std
(bad)
jg
(bad)
std
ja
inc
(bad)
std
jg
out
paddw
(bad)
(bad)
dec
jmp
jle
daa
(bad)
(bad)
pop
std
das
jle
cld
dec
jg
aas
repz
cld
arpl
stc
xchg
inc
(bad)
out
outs
clc
stos
push
push
clc
adc
dec
jecxz
and
pop
push
(bad)
cmp
retf
(bad)
jmp
aas
cmc
addr16
jp
(bad)
jmp
jle
aas
jmp
fidivr
hlt
ja
aas
jmp
aas
clc
icebp
addr16
std
daa
(bad)
aad
mov
mov
mov
fisubr
dec
(bad)
scas
(bad)
cli
pop
(bad)
ja
jg
pop
js
xlat
std
or
(bad)
lahf
sti
pop
push
inc
jle
ja
cmps
mov
repnz
std
(bad)
jg
jg
daa
std
int
loopne
std
paddw
call
outs
clc
fwait
jg
ficomp
scas
cld
ins
jg
pop
(bad)
fisttp
aas
in
dec
(bad)
das
inc
xchg
mov
ja
mov
jg
jg
repnz
mov
leave
mov
xlat
dec
jg
cmc
push
push
jg
mov
jg
lahf
mov
repnz
(bad)
jmp
jmp
(bad)
cmp
ret
(bad)
imul
hlt
or
cmp
pop
cld
pop
pop
mov
std
add
jg
out
(bad)
mov
icebp
jg
cs
jg
mov
cli
cmp
rcr
stc
xchg
dec
(bad)
cmc
out
cmp
xchg
pop
neg
mov
(bad)
sub
cld
scas
pop
std
jmp
xchg
aas
loopne
(bad)
aam
stc
addr16
ja
inc
repnz
aas
cmc
lahf
stc
pop
jle
pop
inc
cld
jae
fcos
cld
scas
push
mov
sti
scas
cld
xor
lahf
stc
imul
jg
rol
cli
aaa
jg
out
std
fdivrp
lds
(bad)
xlat
jg
(bad)
mov
(bad)
(bad)
hlt
out
sti
sbb
call
icebp
jnp
test
pop
jmp
jle
push
mov
mov
std
outs
stc
inc
addr16
pop
std
jnp
retf
scas
repz
dec
aas
dec
inc
inc
call
ror
mov
xor
sar
pop
sti
(bad)
mov
ds
pop
repz
xor
lods
jmp
into
pop
cld
cmp
into
jg
daa
jg
fcomip
cld
pop
sti
dec
(bad)
cdq
mov
int
lods
fucomip
outs
jmp
aad
outs
clc
pop
std
xchg
mov
mov
cld
arpl
(bad)
jg
fcomip
(bad)
(bad)
movs
jg
mov
fld
jg
jg
out
call
dec
rcr
test
jecxz
inc
pop
cmc
aad
addr16
rol
sti
xchg
cld
jle
stc
daa
(bad)
out
daa
jg
jg
cmps
(bad)
jge
fisubr
ja
xchg
jg
aas
hlt
xchg
jmp
jg
out
push
mov
(bad)
out
lock
loopne
aas
hlt
std
mov
sti
ret
(bad)
std
jg
aas
cli
mov
scas
clc
ja
out
mov
into
jg
jg
ja
in
inc
mov
inc
lahf
ins
jg
jg
(bad)
(bad)
repnz
mov
scas
call
dec
fdivr
sti
fstp
jg
repz
loope
(bad)
(bad)
mov
sbb
sub
cmp
add
(bad)
out
cmp
pop
(bad)
fidivr
in
fidivr
inc
(bad)
pop
(bad)
in
pop
mov
jmp
lods
jg
pop
call
hlt
pop
jle
jmp
ja
mov
ja
lahf
(bad)
jmp
cmps
jle
mov
sub
(bad)
(bad)
sub
clc
mov
cld
call
mov
(bad)
call
stos
loop
iret
out
(bad)
(bad)
jg
inc
dec
out
stc
scas
dec
lahf
std
jmp
(bad)
dec
(bad)
ins
(bad)
jmp
(bad)
push
jmp
xchg
jg
iret
sti
pop
out
mov
cli
iret
cld
repz
addr16
(bad)
div
push
fistp
cli
lahf
iret
inc
adc
push
cld
scas
(bad)
cli
jg
mov
jg
out
jg
retf
jle
jg
mov
(bad)
jmp
lock
pop
dec
loop
cmc
sub
(bad)
stc
aas
dec
aas
out
aas
dec
jg
jg
jp
jecxz
(bad)
(bad)
mov
jg
(bad)
stc
mov
mov
ret
lds
(bad)
dec
fnstcw
jg
jecxz
stc
mov
std
lahf
cmp
jmp
jecxz
lahf
cli
pop
(bad)
cdq
pop
jmp
jg
pop
mul
div
in
(bad)
scas
inc
(bad)
(bad)
out
pop
cld
fisubr
out
cld
jmp
int3
lahf
sti
out
clc
movq
aas
sti
jae
(bad)
aas
repz
push
jmp
enter
aad
mov
mov
idiv
cmc
xchg
aas
clc
das
lahf
(bad)
out
(bad)
fcmovnbe
lahf
cld
scas
std
sub
pop
hlt
mov
hlt
pop
call
xchg
dec
in
mov
push
(bad)
fcos
les
sar
stc
outs
repnz
(bad)
mov
sbb
xchg
mov
push
dec
mov
daa
(bad)
ficomp
ja
cmp
pop
inc
mov
dec
lahf
cld
mov
in
cs
dec
out
cld
out
in
pop
pop
cmp
lahf
jg
out
pop
cld
mov
sti
das
(bad)
in
mov
into
(bad)
xchg
jmp
dec
std
fs
outs
cld
loope
out
in
xlat
(bad)
xchg
aas
sti
out
jle
mov
(bad)
fcmovu
out
cmp
lahf
cld
sti
cld
jmp
lock
cmp
das
jle
das
call
cld
cmps
ds
sbb
in
repnz
pop
push
sar
jmp
imul
jg
fbstp
sti
(bad)
mov
jg
out
repz
mov
loop
aaa
stc
fdivrp
xor
jmp
jg
cmp
pop
std
jnp
in
test
stos
(bad)
scas
sti
add
mov
mov
(bad)
mov
jle
aas
loope
std
dec
call
retf
(bad)
out
out
jg
mov
pop
dec
dec
repnz
jbe
daa
mov
cld
lods
dec
aas
test
(bad)
fidivr
loope
out
stc
or
jmp
push
lahf
jmp
fisttp
cdq
(bad)
fsubr
push
cld
jmp
(bad)
sub
in
psubw
(bad)
cld
jg
pop
(bad)
cmps
dec
(bad)
adc
cld
out
(bad)
lock
cld
mov
loop
mov
jmp
outs
sti
aaa
jg
fucomip
sar
push
std
imul
std
iret
cmp
push
xchg
dec
jg
(bad)
mov
pop
dec
cmp
cld
mov
jp
cmps
std
mov
sti
aad
jge
pop
std
cmps
dec
jg
daa
cld
leave
(bad)
fcomp
jge
pop
push
aas
(bad)
clc
fstp
lds
jg
out
dec
jg
mov
sub
mov
stos
retf
dec
inc
std
scas
jmp
pop
jae
push
call
jg
lahf
cld
scas
cld
xlat
(bad)
clc
out
repnz
(bad)
mov
sar
dec
std
into
mov
ja
(bad)
outs
(bad)
aas
std
xlat
mov
dec
mov
jg
pop
jne
cld
stos
dec
fwait
inc
outs
lahf
jmp
push
pop
repz
pop
jg
pop
imul
mov
ud0
jg
das
sub
fwait
popf
mov
(bad)
fsubp
aas
div
lahf
cld
pop
jg
scas
jmp
fcomip
push
cld
loop
std
das
jmp
pop
jl
retf
(bad)
loope
loope
sti
fnstsw
test
dec
sti
idiv
addr16
std
movs
jg
pop
cmc
dec
cld
pop
call
out
lock
dec
push
inc
(bad)
in
(bad)
mov
cmc
push
std
cli
(bad)
lahf
(bad)
movs
push
paddd
push
aas
(bad)
push
jg
sti
daa
cld
ret
jmp
stos
add
imul
mov
(bad)
in
fucomip
pop
std
sbb
iret
(bad)
out
ds
dec
mov
out
repz
(bad)
push
(bad)
repz
out
scas
(bad)
test
lahf
std
std
jg
mov
lahf
cli
nop
xchg
int
ss
std
xchg
mov
jmp
mov
fnsave
pop
repz
out
pop
test
mov
mov
pop
std
ins
dec
(bad)
call
jmp
cmc
in
mov
inc
std
dec
jmp
(bad)
hlt
pop
cld
imul
cdq
fnstsw
(bad)
cli
lahf
jmp
push
das
clc
cld
aas
jmp
(bad)
fsubrp
lahf
idiv
xchg
(bad)
daa
dec
cmps
jg
pop
cmc
aaa
(bad)
pop
jg
aas
cli
lahf
cld
mov
out
jo
xor
push
jg
lds
(bad)
jecxz
out
stc
das
jmp
leave
aas
out
(bad)
repz
das
cmps
mov
cld
mov
mov
outs
std
lods
jg
fstp
loopne
cld
jae
in
icebp
fwait
std
sahf
cmp
out
nop
cld
leave
mov
mov
sbb
outs
std
scas
jge
std
jge
mov
lods
jle
jg
(bad)
fdivr
xchg
stos
iret
lahf
aas
push
(bad)
fidivr
outs
(bad)
(bad)
jge
idiv
(bad)
fimul
(bad)
scas
in
stc
ret
jle
mov
pop
std
dec
mov
in
ja
outs
idiv
scas
jg
aaa
std
out
aas
(bad)
fwait
std
fistp
out
lock
out
jg
mov
cli
jnp
and
(bad)
test
leave
pop
cmp
call
out
clc
lods
(bad)
movs
(bad)
jle
sti
cld
mov
das
stc
das
push
aas
ss
adc
add
pop
icebp
cli
outs
cld
aad
mov
mov
aas
icebp
pop
xchg
loope
fidivr
mul
add
pop
std
fistp
std
pop
mov
dec
or
hlt
scas
clc
ud0
(bad)
(bad)
cld
out
stc
out
aas
jmp
push
cld
iret
(bad)
std
daa
(bad)
stc
outs
not
cld
mov
(bad)
stos
aas
stc
imul
aas
jmp
pop
inc
icebp
lahf
cld
fnstenv
mov
xchg
int3
lahf
clc
jecxz
dec
mov
outs
cld
out
in
aaa
sti
lea
cmp
iret
stos
das
(bad)
xchg
fucomip
fstp
cli
fwait
(bad)
fcomp
idiv
clc
idiv
pop
mov
cmps
push
pop
jle
in
(bad)
dec
sti
jecxz
stc
pmaxub
das
jg
ja
popf
jg
iret
call
call
jmp
rcr
test
call
clc
sbb
mov
jge
movs
push
das
cli
cmp
jg
(bad)
dec
(bad)
mov
aad
fild
(bad)
jmp
fucom
lahf
clc
ud0
cmps
inc
aas
neg
(bad)
cmp
jmp
inc
pop
std
and
repnz
xchg
dec
out
lahf
stc
pop
cs
out
std
mov
imul
cld
movs
scas
jle
jg
pop
call
jg
aas
sti
iret
jle
mov
sbb
aam
(bad)
in
aas
mov
leave
jg
mov
(bad)
in
in
ficomp
push
cld
fnstenv
(bad)
(bad)
das
js
jo
(bad)
cld
cdq
jnp
mov
(bad)
stc
xor
retf
scas
fnstsw
inc
mov
push
pop
(bad)
(bad)
outs
push
(bad)
jmp
out
sti
pop
jle
push
idiv
(bad)
xlat
mov
jmp
lahf
in
std
rcr
lahf
(bad)
outs
(bad)
mov
repz
mov
aas
not
(bad)
neg
aas
push
jmp
scas
cmc
aas
dec
(bad)
sub
sti
neg
cmps
das
jg
pop
std
inc
inc
jg
dec
call
(bad)
mov
clc
xchg
mov
cmp
jg
cmc
scas
cmc
or
sar
(bad)
das
cli
aas
jle
iret
jle
mov
(bad)
cld
jg
(bad)
scas
dec
pop
std
pop
std
int3
scas
pop
(bad)
stc
mov
idiv
shr
cli
(bad)
cld
lea
sti
aas
ins
(bad)
out
cwde
inc
inc
std
pop
jg
mov
aam
cmc
idiv
pop
std
pop
(bad)
clc
hlt
out
dec
call
mov
sti
pop
sti
popf
call
repnz
clc
repz
mov
clc
cmp
jg
aas
jmp
pop
(bad)
jle
jmp
aas
pushf
jmp
lahf
std
jno
shr
mov
mov
jle
dec
jmp
jg
fcomip
(bad)
xlat
(bad)
(bad)
lock
(bad)
pop
push
das
leave
jle
fild
std
sti
inc
jg
jmp
jmp
jg
aas
std
idiv
ret
dec
std
ins
(bad)
cld
fbstp
(bad)
pop
repz
sbb
icebp
outs
daa
(bad)
stc
outs
std
dec
jle
pop
std
std
in
jmp
loop
hlt
call
aas
cli
iret
jmp
jg
jg
xchg
cld
push
aas
std
imul
pop
jge
aaa
(bad)
cmps
jg
mov
(bad)
jmp
jecxz
lahf
clc
xor
outs
sti
pop
jle
addr16
loope
jmp
clc
addr16
pop
jno
icebp
pop
repz
dec
movd
std
(bad)
bnd
aas
jp
in
iret
sti
cld
xlat
clc
popf
jg
lahf
fdivr
lods
dec
fistp
pop
push
pop
cld
(bad)
jg
out
jno
cli
mul
(bad)
adc
(bad)
scas
fcomip
fistp
cld
cmp
jmp
inc
dec
(bad)
(bad)
mov
fmul
jg
mov
fcomip
in
call
in
jg
iret
cld
mov
in
idiv
mov
pop
jg
aas
cld
or
mov
cli
(bad)
ins
(bad)
loop
in
(bad)
fdivrp
cmc
xchg
push
ud0
(bad)
mov
xchg
std
(bad)
std
pop
jge
push
(bad)
pop
mov
repnz
push
jecxz
(bad)
aaa
cld
addr16
jmp
pop
stc
pop
ds
std
inc
(bad)
fdivr
jecxz
repz
sti
(bad)
int
ror
xchg
sti
mov
cli
aas
(bad)
mov
push
mov
mov
aas
loope
jg
(bad)
aad
out
cld
cmc
(bad)
stos
shr
repz
dec
cmp
aas
cld
xchg
std
xchg
jg
scas
test
lahf
clc
mov
jp
sar
stc
(bad)
stc
pop
(bad)
pop
in
(bad)
stc
jg
sti
out
and
push
(bad)
xchg
mov
div
(bad)
stos
outs
std
and
(bad)
pop
mov
in
aaa
(bad)
pop
jmp
jnp
scas
aas
loopne
cld
sbb
push
std
jnp
jg
in
aaa
dec
pop
(bad)
fidivr
aaa
(bad)
imul
mov
jle
addr16
outs
repz
mul
hlt
sar
sti
cmp
mov
addr16
out
out
cli
or
lock
dec
jmp
xchg
inc
pop
mov
(bad)
mov
lahf
jmp
popa
jg
pop
not
out
(bad)
fcmovnu
test
ja
ss
lahf
stc
mov
aas
cld
outs
(bad)
std
mov
stc
rcr
pop
(bad)
imul
popf
jmp
aas
out
das
jge
or
pop
sti
mov
stc
jmp
(bad)
pop
mov
ror
pop
out
(bad)
xchg
call
cld
mov
aas
loope
(bad)
sub
pop
clc
out
inc
jg
jg
xchg
(bad)
mov
cmp
mov
jecxz
stc
paddb
retf
jle
xlat
cmp
icebp
cli
idiv
out
(bad)
out
dec
clc
cdq
das
pop
jl
pop
in
std
pop
mov
stc
jne
(bad)
aas
loopne
pop
mov
cmps
int
(bad)
mov
das
sti
mov
mov
movs
jg
leave
pop
cli
lahf
dec
cmp
in
aas
push
aas
ficomp
enter
(bad)
mov
cmc
outs
(bad)
xchg
pop
mov
mov
ja
in
stos
jg
aas
stc
(bad)
test
scas
jle
daa
push
(bad)
std
jmp
(bad)
aaa
jmp
(bad)
jmp
jmp
scas
(bad)
fcomp
xlat
cmps
mov
das
stc
push
jg
(bad)
daa
(bad)
xchg
jg
iret
jg
lock
cld
aas
out
push
xchg
jg
scas
sti
pop
std
imul
inc
dec
repz
jmp
std
pop
(bad)
faddp
dec
jg
cli
cmp
(bad)
jmp
mov
(bad)
das
jg
jg
cli
xor
mov
out
std
dec
jmp
dec
call
mov
jle
pop
jmp
cmp
out
dec
(bad)
mov
jg
pop
cmp
and
aas
(bad)
mov
(bad)
call
mov
sar
pop
cld
dec
leave
mov
scas
stc
sub
cld
scas
(bad)
mov
icebp
mov
inc
mov
addr16
loope
jg
or
mov
sti
fldcw
(bad)
and
aas
stc
dec
jg
dec
push
jge
pop
std
jmp
loopne
push
ror
jg
outs
idiv
aas
clc
jmp
or
aas
jmp
aaa
cld
cmp
outs
cli
(bad)
out
cld
cmp
call
push
out
scas
(bad)
repnz
pop
repnz
mov
pop
(bad)
scas
aas
loop
das
cld
ja
mov
out
inc
pop
das
pop
mov
aas
sti
out
stc
xor
jmp
cs
ds
retf
inc
mov
icebp
outs
hlt
popf
pop
mov
push
aas
sti
aas
mov
lods
jecxz
hlt
mov
mov
ret
aad
stc
idiv
jnp
inc
popf
aas
(bad)
repz
jg
rcr
jmp
inc
mov
jg
aas
stc
fwait
std
(bad)
mov
push
fwait
inc
hlt
out
sti
mov
repz
(bad)
cld
mov
cmc
scas
cld
cmp
lods
jg
fucomip
loop
stc
cdq
aas
repnz
jle
mov
xor
(bad)
stc
out
jl
mov
and
das
dec
(bad)
fwait
jg
outs
jo
iret
jl
jnp
outs
out
(bad)
sar
in
cmps
out
jle
(bad)
icebp
idiv
paddw
(bad)
pop
sti
iret
stc
ins
cli
inc
mov
call
retf
jg
pop
(bad)
call
(bad)
fcomp
cmc
sub
xchg
jg
das
cld
cmc
ds
leave
stos
aas
in
lahf
(bad)
jnp
jle
xlat
cld
clc
mov
pop
sti
pop
std
pop
jmp
jg
xlat
(bad)
pop
cmps
pop
sub
stc
mov
(bad)
outs
test
in
(bad)
sbb
jp
fstp
fwait
inc
mov
jle
aas
loop
cld
aaa
dec
dec
outs
std
imul
repz
jmp
sar
icebp
outs
(bad)
outs
jmp
repnz
xor
cld
ja
scas
call
sti
(bad)
(bad)
mov
movd
rcr
call
jmp
push
jle
aas
call
xchg
std
retf
idiv
jmp
pop
std
sbb
movs
aas
ins
cli
out
xchg
pop
repnz
jns
fwait
cld
imul
clc
pop
xlat
aas
mul
ss
jg
jg
call
in
push
cld
sub
repz
std
dec
mov
addr16
adc
cld
retf
jg
rcr
jl
out
das
stc
cmc
out
push
neg
cli
imul
push
xchg
(bad)
cmp
cmp
(bad)
push
ja
xor
cld
(bad)
pop
cld
(bad)
pop
lock
pop
aas
icebp
call
cli
idiv
loop
(bad)
jmp
push
(bad)
mov
in
jmp
cli
inc
(bad)
xchg
mov
pop
cld
sti
call
ja
popf
mov
ins
std
sahf
jg
pop
(bad)
out
std
jecxz
rcr
xchg
add
std
loop
fdivr
cmp
sti
mov
std
xchg
cmp
jg
das
std
pop
(bad)
cld
lahf
cmc
paddd
cmp
neg
mov
mov
inc
sbb
test
aad
cld
idiv
mov
mov
and
mov
fwait
pop
fistp
jmp
lahf
(bad)
jecxz
jg
(bad)
(bad)
fwait
lahf
cli
idiv
aas
in
std
cmc
(bad)
mov
std
call
cli
mov
jg
(bad)
inc
jecxz
loope
out
dec
(bad)
jb
(bad)
jecxz
repnz
repz
lahf
cld
mov
pop
dec
in
jg
or
stc
addr16
mov
out
aaa
std
arpl
call
cld
jmp
jg
pop
(bad)
out
push
stc
mov
cmps
(bad)
out
(bad)
stos
mov
mov
cld
pop
cmp
js
(bad)
push
retf
outs
std
sar
out
repnz
(bad)
pop
out
cmp
(bad)
mov
iret
mov
fbld
outs
scas
out
std
or
dec
push
(bad)
fisttp
fbstp
stc
jne
loope
not
pop
mov
fcomip
repz
aas
jg
mov
dec
jle
out
(bad)
sub
cli
sub
pop
sti
and
stc
mov
loope
sti
test
xchg
xchg
jg
loope
cld
add
sbb
xlat
clc
sar
ret
jmp
test
mul
push
cld
mov
int3
das
pop
(bad)
notrack
scas
cli
adc
retf
cmc
(bad)
neg
mov
nop
mov
xor
(bad)
call
std
out
rcr
(bad)
sbb
cli
pop
mov
sar
mov
jle
(bad)
sti
iret
stc
mov
cld
aaa
jg
pop
call
(bad)
cs
test
out
cld
mov
push
pop
stc
xchg
dec
scas
(bad)
cmps
lahf
inc
out
scas
ja
mov
stos
(bad)
mov
mov
out
(bad)
loopne
cld
(bad)
ror
(bad)
lods
lahf
pop
dec
xor
cmps
pop
std
in
(bad)
jmp
imul
clc
xchg
out
jmp
inc
mov
mov
mov
daa
jle
dec
stc
cdq
fcomip
pop
dec
jg
mov
out
repz
cmps
aas
cld
mov
scas
pop
jmp
jmp
aas
cld
idiv
in
std
sti
cld
jecxz
aad
test
aad
mov
cli
daa
iret
(bad)
stos
jg
psubd
(bad)
fcos
lock
clc
jnp
(bad)
mov
retf
pop
repz
in
jo
(bad)
(bad)
jp
js
fwait
(bad)
data16
push
mov
jmp
sti
xchg
movd
aaa
cld
ret
jg
outs
lock
cld
iret
lahf
cld
and
fcomip
jg
mov
jg
aas
repnz
mov
in
jle
scas
std
jnp
jbe
rcr
cli
aaa
jl
xlat
clc
cmp
loope
stc
pop
(bad)
mov
ud0
push
retf
leave
fcomip
mov
mov
sbb
cld
dec
mov
jg
(bad)
cli
jg
iret
stc
addr16
push
jnp
call
cld
test
hlt
pop
cld
call
rcr
mov
in
aas
loope
cdq
popf
(bad)
jns
scas
push
mov
mov
repz
jg
sub
aas
ss
std
sbb
idiv
jg
aaa
cld
iret
(bad)
mov
(bad)
test
push
cmps
jg
jg
inc
std
inc
jg
(bad)
mov
sti
lods
jg
(bad)
pop
call
in
(bad)
stc
(bad)
jnp
retf
jmp
mov
ja
cld
fwait
jg
outs
rep
aas
rep
stc
mov
mov
out
pop
std
dec
call
out
cld
mov
jp
scas
(bad)
cs
jl
pop
cld
pop
lds
ja
or
jg
lahf
jp
pop
std
xchg
jg
lahf
imul
(bad)
stos
(bad)
sti
pop
repnz
stc
xchg
jg
ja
pop
jle
out
std
ja
mov
icebp
jg
mov
cld
jmp
sti
mov
(bad)
mov
lahf
cld
cmp
push
xchg
mov
(bad)
test
inc
(bad)
cli
jmp
std
adc
dec
ins
jmp
call
aaa
jg
in
idiv
popf
mov
shl
jg
stos
(bad)
(bad)
pop
jecxz
(bad)
ja
pushf
out
rcl
outs
test
jge
stc
test
clc
xlat
clc
xor
int3
mov
aad
aad
cli
lahf
cld
jge
jmp
lahf
std
dec
(bad)
jg
(bad)
mov
fcomip
in
cmp
pop
hlt
dec
(bad)
idiv
leave
mov
jg
clc
stos
rcr
popa
out
jmp
pop
jg
std
mov
stc
aas
(bad)
xor
push
dec
lea
div
mov
xlat
cld
inc
fldcw
(bad)
mov
sti
sbb
jmp
push
jg
jg
cmp
add
inc
cld
mov
das
cld
aad
in
pop
cli
xlat
std
sbb
neg
out
jmp
scas
icebp
jmp
int
in
dec
jle
jg
(bad)
(bad)
jmp
jns
sti
repnz
std
push
mov
pop
adc
(bad)
xchg
pop
ja
stc
aas
call
jl
pop
call
jmp
scas
sti
push
(bad)
jle
(bad)
in
pop
fdivr
jecxz
mov
iret
sbb
jmp
aaa
mov
popf
(bad)
mov
in
dec
cld
dec
fdivrp
movs
ja
(bad)
stos
cld
in
ror
dec
xchg
inc
imul
mov
pop
(bad)
jmp
mov
jp
pop
(bad)
mov
cmc
pop
jl
jg
mov
aas
repz
ds
movs
(bad)
clc
jg
repz
jle
loopne
sti
jae
idiv
cli
das
std
pop
inc
in
cli
mov
clc
aas
cld
pop
inc
mov
(bad)
clc
pop
std
(bad)
dec
jg
scas
test
mov
mov
push
paddb
popf
lahf
cli
mov
fbstp
add
cli
jnp
pop
(bad)
fld
aas
loope
fbld
ud0
aaa
stc
aad
jns
(bad)
aas
stc
or
(bad)
in
clc
mov
rcr
jmp
jmp
jg
sar
lahf
stc
lods
inc
pop
mov
adc
fild
fcomip
dec
cld
dec
dec
jg
out
stc
fwait
(bad)
xor
jg
gs
stc
out
cmc
imul
inc
lahf
std
pop
call
mov
xchg
std
fcomp
inc
scas
neg
mov
cli
repz
mov
(bad)
mov
std
int3
outs
clc
fwait
ds
aas
push
popf
(bad)
addr16
fwait
in
jle
fist
jne
sar
sar
lock
std
out
jg
jg
(bad)
jnp
into
jg
out
cmc
pop
std
outs
fnstcw
js
mov
jle
sbb
out
sti
(bad)
ret
(bad)
mov
out
ret
cmc
pop
cld
or
jg
jmp
std
add
retf
cli
repnz
aas
(bad)
cld
xlat
(bad)
and
cmc
mov
lock
jl
push
int
pop
mov
das
js
xor
int
retf
pop
out
psubb
cld
pop
clc
(bad)
aas
(bad)
mov
jle
push
cld
adc
dec
repz
aas
sti
jecxz
jno
(bad)
sahf
jg
out
repnz
cld
sub
ja
stos
mov
ret
(bad)
jmp
dec
fsubr
icebp
(bad)
std
push
mov
mov
out
sti
jnp
jmp
jle
xlat
inc
jg
jmp
sti
gs
idiv
clc
lock
icebp
pop
dec
sub
addr16
aaa
mov
cld
movsx
iret
sub
std
(bad)
jg
outs
xor
mov
jg
push
pop
icebp
idiv
add
xlat
push
(bad)
in
jmp
mov
mov
call
cld
retf
stos
jmp
aas
cld
mov
mov
sti
in
(bad)
mov
mov
mov
xlat
leave
stos
jg
(bad)
(bad)
xor
aas
sti
lds
jg
lds
sti
jmp
out
out
out
rep
aas
jp
pop
dec
aas
cli
jmp
neg
mov
aam
hlt
movsx
in
cmp
jg
(bad)
imul
dec
ror
aas
(bad)
outs
std
movs
jg
aas
aas
(bad)
(bad)
jmp
sti
cmps
(bad)
scas
aas
repz
std
arpl
out
cmc
(bad)
out
cld
mov
dec
(bad)
loop
aas
mul
mov
xchg
aas
stos
cld
jecxz
(bad)
pop
sti
pop
out
dec
cld
das
dec
out
std
push
xchg
mov
dec
in
out
(bad)
(bad)
call
dec
xchg
pop
mov
mov
(bad)
neg
dec
retf
icebp
pop
repz
mov
sti
pop
(bad)
stos
jg
pop
(bad)
pop
jg
(bad)
std
scas
cld
fnstsw
mov
(bad)
push
inc
pop
stos
cli
mov
cld
aaa
stc
pop
mov
jnp
xchg
std
gs
(bad)
push
mov
out
clc
cmp
mov
jmp
das
stc
popf
lahf
mov
fidivr
leave
aas
clc
cmp
aam
jmp
cmc
mov
out
sti
or
lods
sti
call
(bad)
out
out
jg
dec
pop
inc
into
aas
repz
in
mov
jmp
cli
scas
clc
mov
out
pop
(bad)
scas
cld
xchg
sub
not
(bad)
fdivrp
jmp
rcr
sti
jg
outs
aas
std
out
das
(bad)
call
clc
jg
das
inc
jmp
lahf
sti
push
(bad)
jmp
dec
(bad)
xchg
push
in
clc
scas
jmp
out
fincstp
inc
jmp
mov
call
fcomip
das
popf
std
jne
ds
xchg
iret
jg
addr16
das
cld
sbb
cmc
(bad)
std
pop
std
lahf
std
sbb
pop
call
paddd
aas
in
cli
and
jmp
pop
std
in
ja
mov
sbb
out
je
ja
mov
jmp
pop
icebp
daa
push
fstp
cld
or
mov
hlt
aaa
dec
push
cmp
jno
sti
(bad)
jmp
fistp
jl
(bad)
jg
jmp
(bad)
cld
fwait
jle
aas
repz
jmp
lock
lahf
push
lahf
jle
ja
in
jle
xchg
cld
sbb
outs
stc
movs
mov
(bad)
cmps
jg
hlt
retf
hlt
dec
(bad)
jnp
sar
das
clc
pop
jle
xchg
(bad)
mov
sti
scas
sti
push
dec
mov
jmp
outs
(bad)
das
pushf
std
xchg
mov
std
ret
int
push
(bad)
std
aas
lock
jns
mov
jg
mov
jbe
mov
aas
neg
(bad)
jmp
call
out
scas
(bad)
out
aad
lock
sub
mov
cli
das
jle
cli
(bad)
and
inc
sahf
cld
repz
(bad)
pop
inc
jg
icebp
or
icebp
mov
stc
pop
stc
into
pop
stc
xlat
dec
call
pop
(bad)
sbb
cmp
cld
pop
clc
xchg
(bad)
jmp
jg
aas
lock
cld
pop
pop
and
repnz
cld
out
sti
jg
lahf
jmp
(bad)
aas
dec
jmp
aad
jecxz
paddd
(bad)
cwde
lds
outs
retf
iret
(bad)
(bad)
mov
mov
(bad)
jbe
loopne
hlt
xlat
sbb
cld
sbb
std
cmc
iret
call
cmc
addr16
lahf
std
lahf
lahf
jl
(bad)
(bad)
lahf
cld
xchg
push
idiv
push
jg
nop
(bad)
jmp
adc
(bad)
or
jg
pop
test
stos
retf
popf
jg
das
std
into
out
mov
in
fst
mov
(bad)
mov
sar
lods
mov
jg
mov
mov
pop
clc
mov
pop
stc
pop
inc
xor
cli
cli
dec
cld
arpl
std
push
lahf
std
cdq
jg
mov
idiv
(bad)
stc
mov
aas
out
cmp
(bad)
mov
push
dec
lahf
cmc
cld
pop
sti
mov
lahf
cld
int
mov
sub
iret
pop
das
(bad)
jecxz
std
(bad)
clc
mov
(bad)
fistp
(bad)
(bad)
cdq
mov
out
lahf
xor
jne
movs
mov
pop
(bad)
cmp
hlt
scas
(bad)
(bad)
(bad)
jmp
jg
pop
cli
cmps
rcr
icebp
(bad)
cld
cli
sti
(bad)
jmp
(bad)
jmp
(bad)
fbstp
cmp
mov
not
pop
push
jg
out
icebp
outs
(bad)
aam
mov
sbb
lahf
std
add
fsubp
outs
hlt
or
call
out
cld
(bad)
(bad)
pop
inc
das
sti
pop
dec
outs
push
jg
rcl
(bad)
sar
dec
inc
sahf
cld
fidivr
aas
(bad)
jnp
pop
(bad)
jns
fistp
cld
addr16
pop
jg
stc
pop
stc
out
cmp
outs
jg
dec
cld
or
cld
jnp
jg
outs
sti
xlat
pop
pop
dec
(bad)
jmp
in
test
out
aas
in
sti
xchg
mov
inc
jg
imul
neg
mov
popf
call
mov
cmp
cli
pop
mov
(bad)
jmp
mov
outs
(bad)
out
(bad)
jnp
jg
fcomip
repz
lahf
mov
dec
(bad)
lods
mov
pushf
call
jg
aas
mov
retf
jg
aas
jmp
std
std
push
pop
(bad)
das
jmp
ror
pop
cld
scas
aas
clc
call
iret
jmp
push
inc
out
cld
xchg
mov
xchg
(bad)
sti
mov
(bad)
psubq
xchg
push
loop
mov
aas
cmc
fwait
(bad)
and
ja
jge
loopne
repz
lods
jg
outs
std
out
das
sti
or
mov
aas
call
jmp
stos
mov
jmp
iret
(bad)
sti
aas
loopne
cli
das
(bad)
hlt
xchg
shr
cld
jbe
std
aas
test
dec
xchg
fucomip
fdivp
pop
mov
mov
mov
inc
dec
(bad)
out
(bad)
std
cld
pop
clc
pop
(bad)
mov
cli
inc
das
jg
pop
out
std
das
push
aas
in
mov
out
jg
mov
mov
jmp
mov
jbe
aad
mov
pop
mov
out
mov
mov
cld
xlat
inc
jmp
cmp
pop
cld
sar
jg
(bad)
popa
mov
paddb
daa
(bad)
std
push
aas
jl
lahf
jns
pop
inc
cmps
cld
sub
stc
jne
out
inc
inc
(bad)
retf
hlt
(bad)
(bad)
mov
stc
addr16
dec
mov
aas
cmc
mov
dec
aas
repz
and
jnp
jg
jg
sti
daa
jg
fcomip
jmp
int3
scas
stc
(bad)
(bad)
cmp
out
cli
addr16
out
fdivrp
in
jg
pop
je
aad
dec
mov
dec
fucomip
iret
stc
(bad)
jle
push
xlat
int
cld
aaa
jmp
std
scas
stc
add
repz
std
mov
ficomp
(bad)
out
mov
scas
push
(bad)
daa
jecxz
test
repnz
(bad)
lock
dec
dec
jg
call
sar
hlt
fist
aas
repz
call
jg
(bad)
xchg
fcomip
cld
out
jmp
jg
in
dec
pop
out
cld
popf
sti
jmp
(bad)
cld
idiv
lods
push
into
jecxz
repz
push
cli
pop
(bad)
repnz
in
sub
mov
cmc
ja
call
jle
pop
cmc
cmp
jnp
cmp
mov
cld
aas
clc
mov
fstp
(bad)
sti
mov
popf
pop
jecxz
stc
dec
jle
fcomip
pop
clc
xor
inc
mov
cld
cmp
outs
cld
retf
jg
retf
push
pop
(bad)
fistp
aas
in
(bad)
(bad)
lock
lahf
jl
xchg
cld
stos
aas
sti
(bad)
std
xchg
mov
(bad)
mov
sub
repz
dec
jg
mov
in
jg
(bad)
jmp
jmp
std
(bad)
(bad)
jne
mov
sbb
mov
(bad)
(bad)
(bad)
outs
hlt
addr16
out
(bad)
pop
(bad)
in
inc
mov
jmp
cmp
fbstp
out
jle
dec
(bad)
std
(bad)
call
(bad)
mov
clc
test
std
out
lds
pop
pop
fdivr
add
inc
std
sahf
aas
stc
daa
ds
cmc
inc
clc
dec
(bad)
in
jg
lahf
js
retf
jle
(bad)
(bad)
aaa
inc
mov
mov
(bad)
sti
std
fidivr
push
ja
jg
cli
lahf
std
mov
cli
jg
out
idiv
cmc
jmp
pop
mov
lock
cmp
ins
jmp
aas
icebp
scas
clc
or
out
out
hlt
jmp
daa
jg
jmp
idiv
cmps
(bad)
xchg
iret
jg
pop
clc
mov
jg
jg
push
daa
jg
aas
repz
aas
repnz
and
(bad)
cmc
(bad)
jge
push
stc
(bad)
aas
jp
lahf
(bad)
cmp
fisttp
jle
call
mov
xchg
iret
std
pop
jmp
aas
in
jle
cmp
paddb
into
(bad)
cli
das
jge
daa
(bad)
fisubr
out
cmp
mov
hlt
aas
clc
cld
scas
cld
fstp
(bad)
idiv
(bad)
scas
call
jg
paddb
adc
shl
xchg
xchg
inc
out
(bad)
pop
(bad)
pop
mov
(bad)
mov
dec
pop
repnz
inc
rcr
fucomi
dec
jg
stc
sub
jecxz
hlt
scas
dec
out
(bad)
pop
pushf
(bad)
sar
(bad)
clc
addr16
cmps
jmp
xlat
mov
pop
mov
cld
jno
cld
les
idiv
in
fucomip
(bad)
clc
or
xchg
mov
jle
(bad)
loope
cld
jge
in
jg
lahf
sti
fbstp
std
sub
gs
pop
xor
aas
cmc
int
std
lods
out
int3
fbstp
pop
cld
popa
out
(bad)
fucomi
mov
mov
mov
jmp
aas
nop
jle
inc
jmp
(bad)
in
in
push
xlat
(bad)
sti
dec
fdivrp
mov
cli
daa
mov
stc
repnz
dec
mov
icebp
(bad)
jnp
in
sbb
mov
out
lock
lods
dec
cld
mov
mov
shl
out
jle
(bad)
cld
aad
clc
add
std
jmp
ja
cwde
jmp
pusha
fimul
mov
fxch
icebp
aas
icebp
mov
pop
mov
lahf
cld
iret
(bad)
jno
fistp
jge
(bad)
std
retf
out
out
std
pop
std
or
scas
stc
paddd
jg
jns
imul
jmp
mov
(bad)
mov
jle
fnstsw
das
cwde
(bad)
fnstsw
(bad)
scas
sbb
(bad)
sti
(bad)
(bad)
jp
in
outs
inc
dec
ja
idiv
call
cld
int3
pop
stc
mov
aas
clc
pop
cld
dec
(bad)
out
jg
mov
(bad)
sub
jle
cmp
sub
aas
in
mov
pop
(bad)
das
mov
cmp
lock
pop
push
jg
out
das
clc
(bad)
mov
call
das
inc
dec
call
mov
aad
stc
sub
dec
setp
ja
iret
jle
(bad)
fcomi
inc
pop
jmp
(bad)
xchg
jg
mov
in
clc
mov
mov
(bad)
aas
(bad)
jmp
mov
(bad)
aas
repnz
jp
pop
cmps
pop
(bad)
in
mov
mov
mov
jg
aas
not
call
(bad)
pop
(bad)
jmp
test
mov
das
clc
cmc
jle
pop
icebp
retf
dec
cld
xchg
in
mov
(bad)
in
cmc
mov
leave
jg
repnz
mov
in
sti
mov
cld
dec
jg
out
mov
leave
pop
div
in
stc
cmp
xchg
cwde
jg
fistp
clc
pop
call
pop
call
(bad)
jmp
mov
cli
mov
xchg
jg
(bad)
jnp
neg
push
mov
call
outs
sti
das
inc
loope
std
outs
(bad)
mov
arpl
jg
into
jle
jg
jg
icebp
cmp
push
xchg
stc
pop
std
pop
inc
scas
call
jmp
xlat
(bad)
mov
xchg
out
push
shr
inc
fcomip
aaa
jl
loopne
(bad)
pop
dec
jmp
jnp
movsx
mov
sub
addr16
mov
call
xlat
lahf
jg
iret
out
(bad)
fistp
scas
jl
loop
cld
lods
jmp
mov
in
std
xchg
pop
icebp
out
stc
movs
(bad)
cli
scas
imul
cmp
jo
push
(bad)
jns
fsub
jge
stc
fist
jl
hlt
outs
cmp
cmps
(bad)
imul
(bad)
out
push
std
pop
inc
jmp
jge
sti
(bad)
jg
aas
stc
pop
jmp
jmp
idiv
adc
mov
mov
stos
(bad)
call
jnp
ja
int
ret
pop
jl
mov
dec
jnp
xchg
(bad)
(bad)
pop
mov
inc
xchg
(bad)
and
std
ret
(bad)
dec
cld
lea
scas
stc
scas
(bad)
fnstcw
aas
cli
(bad)
idiv
cld
push
jg
fbstp
cld
push
std
jmp
pop
out
cld
ja
repz
std
out
jecxz
jg
repnz
stc
sub
fwait
jg
jp
arpl
cld
iret
ror
(bad)
lods
jg
pop
cld
add
push
daa
sahf
jle
aas
sti
xchg
aas
jecxz
clc
cmps
jg
mov
dec
pop
cld
addr16
outs
std
jmp
leave
outs
(bad)
cwde
jg
das
mov
sub
aad
push
mov
push
jmp
mov
jg
iret
mov
(bad)
mov
stc
das
imul
jne
lock
mov
outs
std
jno
fst
(bad)
push
repnz
sti
xchg
(bad)
sar
aad
inc
scas
cli
clc
scas
jle
cli
cld
xchg
dec
scas
fdivr
jne
out
repnz
outs
cld
lahf
pop
jg
loope
shl
outs
hlt
(bad)
pop
push
(bad)
mov
mov
mov
fwait
jg
pop
push
dec
mov
in
lock
inc
call
int
cmc
pop
std
scas
(bad)
and
mov
mov
jne
arpl
pop
sti
in
repz
xchg
cld
jmp
pop
aad
jb
scas
inc
jmp
clc
mov
in
(bad)
out
inc
pop
hlt
fistp
clc
cmps
jg
pop
test
into
mov
out
cli
into
scas
cmc
sbb
jle
pop
call
cld
sbb
(bad)
pop
jg
mov
lahf
retf
(bad)
cli
outs
mov
push
out
(bad)
(bad)
fnstsw
cli
push
inc
push
mov
hlt
mov
xchg
jg
lahf
sti
hlt
mov
fdivrp
icebp
in
jmp
ud0
std
inc
idiv
stos
push
push
(bad)
pop
ficomp
lahf
jo
out
cld
fnstsw
(bad)
stc
mov
out
test
xchg
cmp
shr
jmp
and
std
bnd
fstp
in
pop
cld
outs
(bad)
mov
out
repz
std
repnz
cld
idiv
fstp
(bad)
cli
pop
into
(bad)
fnstsw
jle
aas
repnz
pop
std
jne
jg
jmp
loopne
lahf
call
mov
outs
hlt
addr16
ds
(bad)
lock
repnz
scas
repz
cld
scas
lahf
dec
jmp
mov
cmc
sbb
stos
(bad)
clc
outs
std
add
xchg
push
mov
(bad)
mov
(bad)
popf
aas
std
ja
xchg
(bad)
repnz
sti
pop
lock
jecxz
aas
out
ja
idiv
mov
leave
(bad)
daa
cld
and
jg
scas
jg
mov
out
dec
(bad)
iret
(bad)
imul
std
idiv
(bad)
cmp
hlt
mov
idiv
cmps
pop
div
ja
stos
inc
mov
aas
repnz
das
jmp
(bad)
stos
aas
loop
cld
and
das
push
dec
(bad)
in
call
jg
lahf
inc
dec
(bad)
out
xchg
(bad)
sti
scas
cld
iret
call
dec
pop
inc
jg
xchg
(bad)
(bad)
xchg
pop
out
mov
pop
idiv
(bad)
cmp
sar
lock
pandn
xchg
dec
jmp
fbld
push
imul
lahf
pop
call
mov
jmp
out
cli
idiv
in
fsqrt
iret
pop
jge
(bad)
inc
jg
inc
jg
out
repnz
idiv
fidivr
lock
out
les
out
std
ja
fidiv
xlat
cld
and
sti
dec
aas
loop
stc
ins
push
(bad)
std
das
jp
sub
fwait
mov
clc
scas
pop
cmp
loopne
fild
jg
aas
out
paddw
pop
(bad)
push
inc
mov
in
(bad)
jge
jge
rcr
inc
aas
cli
paddb
inc
iret
(bad)
std
jg
jno
in
std
hlt
pop
std
xchg
(bad)
mov
jne
mov
mov
in
jg
scas
in
std
hlt
das
clc
scas
push
(bad)
es
jmp
dec
cli
jmp
mov
adc
loop
call
mov
xchg
fisttp
mov
push
cld
ds
aas
call
pop
std
ret
push
daa
push
jmp
mov
and
cld
add
(bad)
out
neg
cld
std
inc
lahf
ja
pop
stc
paddd
jne
mov
(bad)
stos
cmp
jg
cmps
jg
fcomip
mov
call
sar
sti
(bad)
iret
(bad)
in
jg
jg
aaa
inc
jg
mov
jg
scas
mov
mov
mov
jg
fcomip
dec
clc
imul
pop
cld
das
stc
lahf
sti
fwait
jmp
mov
out
pop
stc
jecxz
rcr
std
cmps
inc
mov
fdiv
jle
aas
in
pop
(bad)
idiv
lahf
hlt
hlt
pop
sti
(bad)
jmp
aaa
xchg
mov
cmp
xchg
mov
(bad)
call
(bad)
cli
in
jmp
fwait
dec
jg
addr16
fidivr
scas
jle
aas
in
ja
jne
repz
jg
outs
icebp
push
push
lahf
cli
(bad)
fcomp
lock
(bad)
hlt
pop
cld
xchg
push
jmp
pop
pushf
sub
push
cli
daa
mov
cli
fwait
std
mov
addr16
out
cld
(bad)
(bad)
lods
aas
out
mov
aas
cli
inc
pushf
std
ja
jg
jg
retf
out
(bad)
movs
mov
call
loopne
cli
daa
lahf
(bad)
xor
outs
std
in
out
out
jl
outs
cld
mov
out
jg
pop
repz
pop
std
jecxz
int
test
iret
stc
(bad)
stc
(bad)
mov
test
das
cld
push
jmp
div
clc
mov
xchg
jmp
repnz
pop
aas
icebp
(bad)
dec
stc
stos
jg
cld
aaa
(bad)
mov
xor
xor
xchg
call
mov
stc
dec
call
jg
out
sub
das
fscale
int
mov
lock
sti
push
jg
inc
jg
scas
cld
fstp
mov
mov
sti
ja
inc
mov
aas
sti
pop
(bad)
mov
das
jle
aas
out
iret
stc
mov
movs
(bad)
ja
repz
xchg
out
int3
fstp
clc
(bad)
(bad)
inc
jle
pop
jecxz
cli
mov
pop
sti
mov
nop
(bad)
out
mov
lds
mov
(bad)
dec
(bad)
cli
cmp
aas
cli
das
push
mov
test
out
stc
or
cli
aas
jecxz
cmc
(bad)
std
sti
jg
fcomip
aaa
aas
stc
add
add
jg
(bad)
jnp
(bad)
jg
out
hlt
(bad)
std
call
icebp
lahf
std
out
cli
iret
jle
(bad)
cli
xlat
sti
aas
jg
mov
idiv
jne
retf
aas
imul
pop
jmp
mov
iret
sti
sti
mov
(bad)
repnz
not
std
pop
mov
cld
jne
rcr
pop
call
push
lahf
neg
std
pop
stos
lahf
cli
fwait
call
repz
cld
clc
mov
jg
fs
ja
xchg
(bad)
sahf
jg
(bad)
fstp
mov
sti
idiv
div
pop
stc
pop
inc
clc
ja
xchg
lahf
cld
cs
std
and
jmp
aam
sti
pop
std
movs
(bad)
(bad)
clc
lahf
repz
mov
aas
out
sti
jae
les
sti
ins
jle
(bad)
std
psubw
xchg
in
(bad)
(bad)
jg
outs
idiv
mov
jg
out
icebp
jmp
aad
(bad)
iret
dec
repnz
icebp
out
cld
sbb
sar
sti
out
repz
outs
std
das
xchg
jg
repnz
(bad)
daa
pop
call
stos
fcomip
paddw
test
dec
cmp
fsubr
cld
pop
std
repnz
out
(bad)
call
inc
pop
repnz
aas
clc
cmc
jg
aaa
clc
lahf
inc
(bad)
stos
(bad)
jl
(bad)
clc
ja
jmp
idiv
call
mov
xlat
cld
test
push
fs
popf
jmp
fcomip
xchg
jmp
lock
aas
sti
outs
jg
scas
mov
xchg
fstp
outs
lock
cld
lahf
clc
cmc
jg
jg
jns
loop
cli
xchg
inc
mov
stos
rcr
mov
popf
outs
(bad)
inc
jg
(bad)
sti
ja
mov
sti
xlat
jg
lahf
neg
cld
lahf
mov
(bad)
xchg
(bad)
sub
int
icebp
mov
mov
dec
jg
fild
stos
sahf
cld
sti
jg
pop
repnz
cld
addr16
xchg
mov
stos
mov
sar
(bad)
xchg
pop
hlt
jg
movs
jnp
loopne
call
std
sbb
cli
lds
(bad)
out
mov
push
out
hlt
(bad)
std
mov
icebp
mov
sbb
hlt
cmps
jmp
iret
sti
lea
mov
stc
(bad)
(bad)
in
mov
in
ins
jle
push
inc
dec
mov
hlt
cmp
daa
(bad)
cld
xchg
cld
in
aas
hlt
sti
jmp
in
mov
mov
hlt
loope
cld
iret
(bad)
out
mov
jle
jmp
repnz
push
mov
inc
aad
dec
(bad)
jecxz
leave
pop
cld
pop
call
out
lahf
jns
jnp
addr16
stc
aas
imul
cld
rcr
inc
mov
aad
jg
xlat
mov
mov
loop
ss
fcomip
(bad)
mov
push
push
jg
pop
jl
std
fucomip
outs
stc
(bad)
jmp
leave
(bad)
call
ss
fstp
std
ud0
inc
lds
dec
fdivr
sti
(bad)
mov
hlt
pop
jg
ffree
jg
std
scas
std
cmp
icebp
jmp
dec
inc
out
cmc
jmp
stos
jmp
scas
icebp
bound
jnp
leave
mov
cld
loopne
dec
jg
out
cld
aam
bnd
inc
jg
scas
dec
dec
sbb
xlat
push
repz
std
xor
mov
(bad)
in
aaa
dec
dec
std
std
call
mov
pop
mov
fcomip
scas
(bad)
cmp
fcomip
idiv
add
(bad)
pop
jmp
mov
lea
rcr
cld
outs
mov
cld
outs
mov
(bad)
fcomp
repz
mov
jg
loop
cli
fstp
jg
psubd
(bad)
fidiv
int3
(bad)
mov
imul
(bad)
aas
(bad)
sti
(bad)
cmps
(bad)
out
out
std
loopne
dec
dec
fucomip
das
sti
(bad)
test
fnstsw
push
cmp
jmp
out
ja
repz
mov
sar
mov
in
call
lahf
clc
inc
repnz
(bad)
mov
(bad)
std
xchg
movsx
paddb
pop
call
aas
mul
movs
jg
lahf
sti
pop
std
pop
jg
scas
stc
pop
std
sbb
std
jnp
lock
cmp
cli
sti
(bad)
cmps
mov
rcl
lock
xor
inc
mov
jg
mov
in
out
pop
dec
jle
jmp
pop
cwde
pop
call
sbb
mov
sti
adc
mov
mov
jg
in
mov
hlt
push
std
ja
in
cld
fwait
pop
cld
outs
jg
dec
(bad)
clc
fcomip
dec
(bad)
pop
outs
mov
dec
call
outs
(bad)
xchg
outs
out
jmp
(bad)
loopne
dec
ret
mov
jg
pop
jecxz
(bad)
lods
jg
repz
repnz
mov
aas
std
(bad)
pop
mov
push
mov
daa
jnp
jg
mov
dec
into
lahf
cld
scas
mov
(bad)
sti
push
jecxz
in
sti
div
icebp
(bad)
mov
imul
mov
test
(bad)
jnp
xchg
jmp
hlt
mov
dec
scas
pop
cmp
aas
out
mov
pop
jno
ja
mov
outs
call
shl
rcr
icebp
in
aam
xlat
out
cmc
daa
iret
jg
jg
mov
aas
cld
xlat
jge
dec
std
mov
into
pop
inc
(bad)
popf
jg
mov
mov
stc
scas
cli
icebp
fcomip
iret
sti
arpl
mov
(bad)
(bad)
in
iret
sti
mov
mul
call
out
xchg
fcomip
das
cli
or
in
(bad)
in
stc
push
jg
aas
cli
(bad)
push
(bad)
in
pop
icebp
das
(bad)
fidivr
lods
(bad)
fcomp
pop
inc
addr16
mov
leave
pop
cld
imul
mov
sti
das
sahf
jge
std
sti
jge
(bad)
cli
lods
mov
jg
inc
jg
jg
addr16
outs
xor
pop
clc
push
jg
(bad)
sbb
out
mov
std
int
fcmovu
aas
icebp
popf
jg
out
cld
pop
ds
iret
mov
retf
sbb
lahf
cli
bnd
cmp
clc
aas
cmc
retf
dec
(bad)
cli
repz
stc
das
(bad)
icebp
in
jg
pop
cld
loope
call
mov
das
inc
push
cmc
jmp
call
jmp
push
(bad)
jnp
mov
repnz
cld
mov
cmps
cld
in
jmp
fisubr
sbb
in
fistp
call
pop
cld
mov
pop
pop
jg
mov
push
leave
(bad)
hlt
aaa
dec
pop
jge
(bad)
out
cld
mov
mov
cld
jbe
clc
out
hlt
cmp
scas
(bad)
repz
(bad)
pop
sti
pop
call
fwait
outs
(bad)
loopne
fucomip
outs
stc
(bad)
ret
(bad)
in
rep
pop
fistp
arpl
cwde
std
push
lahf
mov
jg
scas
cld
ja
jg
das
dec
pop
out
cmp
ins
mov
jecxz
jmp
pop
clc
jnp
inc
call
lahf
repnz
cld
inc
dec
cli
(bad)
clc
pop
(bad)
fstp
out
mov
jl
imul
std
(bad)
jg
jg
jecxz
enter
aas
loopne
push
aas
stc
outs
jp
call
mov
aas
jns
dec
sti
ins
(bad)
popf
mov
jg
fcomip
sbb
cmps
xlat
jg
pop
cli
idiv
retf
jg
das
cli
stos
(bad)
stc
sbb
repz
clc
(bad)
jg
shl
sti
in
(bad)
test
aad
cmc
xchg
cld
iret
(bad)
fsubrp
pop
rep
cld
ret
call
loope
jl
pop
cld
push
repz
mov
jg
jg
daa
aas
cli
hlt
mov
pop
neg
xchg
daa
movs
mov
call
jg
push
dec
cld
mov
sti
outs
std
mov
aad
push
(bad)
fnstsw
pop
cli
aas
call
mov
lods
cli
adc
ret
pop
mov
dec
outs
jmp
mov
fstp
clc
pop
stc
aas
(bad)
xchg
jg
dec
(bad)
cmp
fstp
cld
aas
std
adc
popf
std
int
jmp
aaa
mov
fsubr
jg
scas
cld
xchg
jg
mov
scas
(bad)
jmp
repnz
dec
aas
test
adc
out
hlt
scas
cld
movs
mov
jecxz
(bad)
mov
outs
lahf
jmp
in
jle
mov
(bad)
outs
cld
push
in
(bad)
and
icebp
ja
aaa
mov
stc
push
(bad)
loop
dec
and
(bad)
push
das
mov
pop
repnz
std
xchg
inc
sti
mov
scas
stc
aaa
std
(bad)
pop
cld
cli
lahf
(bad)
pop
mov
outs
cld
out
lahf
out
jle
aaa
stc
dec
(bad)
xchg
fucomip
pop
(bad)
lods
mov
(bad)
in
jmp
jg
sub
mov
(bad)
mov
out
inc
(bad)
(bad)
gs
scas
(bad)
aaa
(bad)
(bad)
lods
iret
jmp
cli
pop
lahf
mov
outs
jmp
in
stc
dec
jg
jmp
out
sti
aas
dec
jg
lock
cld
(bad)
(bad)
in
(bad)
lock
(bad)
fistp
jmp
hlt
mov
pop
out
cmp
iret
jle
jmp
pop
std
imul
dec
(bad)
fdivr
call
jmp
aas
std
ficomp
clc
(bad)
cld
data16
pop
cld
pop
mov
(bad)
call
std
inc
mov
mov
out
jg
addr16
(bad)
stc
outs
cli
mov
ret
aas
sub
and
std
jmp
fild
xchg
gs
out
out
cli
lods
push
inc
jg
out
neg
mov
imul
dec
pop
(bad)
xor
enter
inc
mov
inc
iret
(bad)
rcl
push
das
(bad)
aas
(bad)
rcr
dec
cld
popa
paddd
(bad)
stc
out
sti
xor
lahf
mov
fcomip
(bad)
adc
inc
push
iret
cld
shl
or
cli
adc
dec
sti
jg
fwait
call
aas
(bad)
out
into
jle
aas
jmp
in
cmc
cmp
scas
outs
std
and
pop
clc
sbb
daa
mov
adc
xchg
jg
stos
jg
mov
add
mov
mov
cld
aaa
cld
mov
jge
pop
jl
psubq
mov
sti
mov
out
mov
loopne
std
xchg
(bad)
out
mov
mov
in
neg
notrack
in
fcomip
cmp
mov
idiv
std
(bad)
int3
sar
outs
std
leave
jg
pop
clc
out
fdivr
inc
dec
call
dec
mov
push
cld
scas
jle
adc
clc
(bad)
loop
stc
retf
fwait
popf
jg
icebp
mov
push
scas
call
mov
jg
aas
std
out
(bad)
cld
mov
xlat
(bad)
push
jbe
cli
mov
(bad)
cli
out
cld
sahf
jg
pop
cli
sti
std
mov
mov
clc
scas
jle
jg
ud0
aas
in
jl
sti
dec
fisubr
cld
pop
mov
idiv
scas
(bad)
fdiv
(bad)
jmp
xlat
(bad)
clc
ja
mov
mov
inc
jmp
cmp
hlt
das
dec
(bad)
sti
pop
clc
pop
(bad)
cmp
xlat
outs
(bad)
pop
std
leave
jg
pop
clc
sti
std
(bad)
cli
das
cld
pop
(bad)
jmp
inc
(bad)
mov
std
fldcw
clc
imul
daa
jg
jg
jmp
jle
cmc
dec
dec
mov
sub
clc
pop
pop
std
pop
mov
mov
int
jmp
(bad)
jge
out
stc
jnp
mov
rcr
repnz
pop
popf
jge
cld
jmp
out
(bad)
idiv
lahf
pop
jmp
cmc
lahf
stc
mov
pop
(bad)
daa
dec
mov
rcr
fnstsw
out
dec
(bad)
addr16
sti
jmp
cld
retf
jmp
loop
cli
sub
jg
jmp
fild
jmp
mov
fcmovbe
(bad)
mov
xchg
(bad)
out
mov
scas
clc
out
out
icebp
ja
(bad)
aas
call
jle
lahf
repnz
push
cld
jbe
std
pop
jge
cld
imul
in
scas
dec
out
ds
or
clc
retf
call
mov
pop
ud0
mov
mov
cmp
xchg
hlt
pop
std
inc
(bad)
call
imul
cld
fdivr
cld
mov
mov
repnz
cmp
(bad)
in
dec
lahf
ins
call
(bad)
pop
std
(bad)
call
pop
lock
std
es
scas
call
(bad)
jnp
(bad)
cld
(bad)
aaa
aad
jg
cld
clc
out
(bad)
das
data16
stc
scas
std
sbb
sar
(bad)
aas
icebp
out
std
push
jmp
outs
ss
fdivr
mov
aas
inc
inc
hlt
(bad)
inc
push
daa
std
mov
push
inc
rcr
(bad)
jmp
addr16
mov
int
cld
add
dec
dec
(bad)
sti
(bad)
ins
jnp
jg
cmc
inc
out
(bad)
cmp
mov
xlat
(bad)
cmc
pop
cli
xlat
mov
hlt
neg
sti
cmp
cld
xchg
std
sub
loop
jle
or
jg
mov
loop
std
add
pop
dec
jle
pop
(bad)
mov
int
mov
dec
(bad)
cli
ja
hlt
out
mov
idiv
sti
jg
ret
jg
call
sahf
std
std
jmp
out
std
cmps
std
xchg
outs
jp
stc
out
outs
imul
(bad)
std
aaa
push
pop
inc
(bad)
mov
in
dec
cmp
mov
jmp
retf
mov
jbe
(bad)
jmp
out
mov
stc
loop
cld
sbb
loop
in
dec
(bad)
(bad)
mov
mov
sti
lock
pop
repz
std
les
sti
out
inc
imul
cli
push
mov
(bad)
call
pop
lock
cmc
sub
idiv
jecxz
call
pop
push
iret
sti
pop
(bad)
sti
fucomip
clc
jmp
shr
jle
leave
pop
push
mov
cmc
out
push
out
jle
(bad)
sar
call
(bad)
popf
in
cld
in
cli
out
das
mov
push
cld
int
hlt
dec
jns
in
xchg
mov
daa
dec
int
icebp
out
xlat
mov
std
mov
out
(bad)
mov
jecxz
loopne
stc
clc
aaa
sti
popf
scas
rcr
in
(bad)
cli
setbe
pop
(bad)
outs
cld
(bad)
into
pop
hlt
div
(bad)
aaa
inc
xor
mov
outs
sti
adc
mov
into
pop
repz
std
addr16
jge
repz
(bad)
in
scas
(bad)
mov
xchg
daa
(bad)
sub
mov
mov
das
ds
cld
(bad)
sti
(bad)
out
stc
das
pop
(bad)
jns
into
out
clc
cmp
sbb
in
call
lahf
inc
jle
into
lahf
dec
call
(bad)
(bad)
test
popf
call
cmps
(bad)
(bad)
loopne
cli
or
mov
(bad)
call
scas
jle
pop
jmp
cmp
ret
jg
fbstp
lods
(bad)
(bad)
clc
idiv
mov
jmp
(bad)
fcomip
xlat
std
neg
jg
jmp
icebp
pop
std
cmc
jle
outs
test
das
stc
repz
fdivr
pop
icebp
ja
test
(bad)
mov
(bad)
std
ss
pop
icebp
in
clc
xchg
scas
jle
jg
stc
pop
jg
mov
pop
cld
test
retf
das
out
std
jmp
mov
std
mov
jecxz
sti
xlat
call
push
(bad)
or
pop
stc
xor
(bad)
icebp
pop
cld
daa
addr16
jg
repz
jmp
jg
adc
(bad)
sar
lahf
std
or
les
pop
sti
das
jg
aas
jmp
(bad)
stc
lahf
sti
das
std
loope
call
aas
std
scas
(bad)
cmps
aad
cld
jb
idiv
pop
cld
mov
sti
mov
cli
stc
push
mov
jg
mov
bnd
add
ret
aas
jmp
fnstsw
psubd
retf
pop
sti
or
xchg
mov
mov
out
call
neg
cmc
fucomp
fnstsw
lock
clc
ja
ret
jg
hlt
in
daa
(bad)
scas
sti
jg
push
scas
(bad)
push
jg
dec
(bad)
jns
sahf
(bad)
push
jg
scas
(bad)
cmp
lds
rcl
hlt
aas
clc
imul
fild
pop
out
scas
stc
sbb
mov
or
cmps
inc
inc
mul
push
mov
(bad)
(bad)
(bad)
cli
push
cmps
jg
push
ds
inc
jg
jg
outs
std
in
jle
fucomip
scas
(bad)
sar
imul
mov
pop
cli
and
(bad)
cli
pop
dec
std
fstp
out
stc
mov
lds
cmp
jmp
js
out
cld
outs
out
mov
idiv
jg
xlat
cld
dec
retf
icebp
repz
leave
repz
mov
pop
out
pop
clc
fwait
(bad)
idiv
psubd
retf
mov
in
cld
inc
(bad)
xchg
test
out
clc
mov
scas
inc
fistp
int
aad
neg
(bad)
in
idiv
pop
(bad)
out
mov
out
cli
sti
std
popf
inc
outs
push
(bad)
data16
outs
lock
cld
push
outs
(bad)
icebp
in
push
scas
clc
add
mov
icebp
jmp
fcomip
ja
pop
push
fbstp
std
jmp
pop
std
test
shl
jae
iret
jg
fcomi
pop
cld
in
aaa
clc
int
dec
out
sti
xchg
jge
ret
in
clc
xchg
lahf
clc
stos
(bad)
clc
pop
clc
sti
call
outs
idiv
std
lahf
mov
std
push
jg
outs
lock
cld
mov
jmp
(bad)
cmps
jle
aas
not
sti
xchg
mov
jg
mov
jmp
mov
addr16
icebp
xchg
cmp
pop
inc
idiv
push
jg
pop
cli
sar
neg
jmp
jecxz
cld
out
dec
out
(bad)
rcr
jmp
cld
outs
pop
cld
leave
fild
std
xchg
(bad)
stc
mov
cmp
dec
retf
lahf
repnz
pop
cmc
sti
sbb
(bad)
cmp
sar
fstp
mov
(bad)
std
cmps
lahf
push
outs
stos
jg
aas
cli
push
out
std
aad
pop
cld
idiv
inc
jg
aas
cdq
(bad)
(bad)
mov
pop
(bad)
jg
outs
push
scas
(bad)
mov
mov
mov
mov
inc
out
clc
repz
aas
call
mov
jmp
call
jg
outs
cmp
add
aad
out
push
cld
mov
test
mov
pop
std
cmp
loopne
repz
mov
fucomip
xlat
std
in
movs
(bad)
fidivr
repnz
out
cld
ss
loop
clc
(bad)
lahf
icebp
idiv
cs
std
pop
dec
call
std
movs
stc
aas
stc
lahf
inc
(bad)
call
(bad)
(bad)
outs
stc
(bad)
jl
call
iret
mov
mov
jg
pop
jbe
pop
(bad)
out
out
hlt
cmp
jmp
out
jg
push
(bad)
fist
mov
(bad)
push
lahf
hlt
iret
push
clc
mov
loop
(bad)
stc
xchg
push
out
cld
(bad)
std
cmps
(bad)
fistp
stc
jg
fimul
enter
cld
icebp
jg
mov
cli
dec
movd
mov
outs
jmp
(bad)
sub
cli
cli
push
aaa
mov
dec
das
jg
jg
cmp
xchg
pop
cli
inc
jg
mov
mov
xchg
outs
mov
clc
(bad)
hlt
jg
lahf
cli
out
jecxz
clc
(bad)
(bad)
and
mov
push
mov
outs
dec
(bad)
out
jg
sar
pop
cld
mov
mov
in
push
pop
cld
mov
cli
xlat
sti
imul
fcomip
mov
mov
idiv
cmp
mov
jmp
aas
cmc
loopne
jnp
fwait
inc
(bad)
pop
jno
arpl
sar
cld
add
jg
std
(bad)
outs
neg
leave
jg
cli
mov
cmps
push
pop
icebp
pop
cld
jbe
dec
push
fcomip
psubd
fdivr
sti
iret
stc
xchg
out
cld
cmp
stc
aas
inc
aas
clc
sbb
(bad)
out
xlat
sti
pop
xchg
jg
psubq
pop
sti
icebp
jg
(bad)
in
lahf
call
std
pop
sti
inc
xchg
leave
outs
(bad)
sbb
or
std
loope
mov
(bad)
push
(bad)
fistp
daa
jge
idiv
int3
outs
clc
cmp
int
iret
outs
sti
cmp
and
push
aas
cld
fwait
sbb
scas
jg
mov
idiv
iret
mov
fwait
mov
jg
fcomip
ja
mov
sub
out
cmp
lods
(bad)
(bad)
mov
stos
mov
sti
adc
push
(bad)
mov
jmp
scas
stc
out
std
stos
pop
sti
pop
(bad)
mov
pop
inc
cmc
(bad)
(bad)
(bad)
aam
std
pop
mov
jle
pop
lods
call
sti
mov
dec
cld
jne
(bad)
out
hlt
gs
inc
dec
dec
mov
neg
dec
(bad)
jg
outs
cdq
cld
fistp
call
jle
daa
jmp
fcomip
inc
(bad)
std
mov
dec
aas
std
icebp
out
idiv
sbb
sub
cmp
std
adc
mov
mov
(bad)
cmp
pop
icebp
jmp
dec
call
mov
(bad)
jg
out
icebp
jg
xor
mov
jmp
aas
stc
imul
jmp
out
cli
jnp
in
push
sar
sar
inc
cld
out
push
mov
call
push
mov
mov
sbb
(bad)
in
dec
icebp
jg
(bad)
mov
stc
das
stc
pop
mov
push
push
fbstp
jnp
stc
in
(bad)
test
outs
mov
ja
test
jecxz
fucomip
(bad)
clc
into
(bad)
fwait
mov
out
mov
(bad)
(bad)
cmc
mov
(bad)
cld
call
mov
cmp
call
aas
icebp
jg
cmp
jmp
cld
sbb
mov
aaa
jg
mov
mov
(bad)
jae
xchg
aas
sti
pop
(bad)
aas
pop
cmp
iret
aas
sti
ja
inc
(bad)
jmp
in
idiv
push
push
std
mov
(bad)
cld
xchg
inc
(bad)
mov
fidivr
dec
clc
std
jg
mov
(bad)
mov
stc
arpl
lahf
cld
outs
std
xor
stc
mov
std
add
call
cld
not
dec
dec
pop
(bad)
jmp
(bad)
daa
mov
mov
xchg
std
jmp
daa
jg
outs
jge
out
std
lea
pop
cmc
das
std
les
cld
cld
pop
(bad)
xchg
(bad)
mov
sti
mov
into
pop
sti
(bad)
int
scas
call
das
jg
scas
stc
sbb
cmp
jmp
cld
call
std
(bad)
jg
jecxz
rcr
outs
(bad)
aaa
ds
adc
addr16
fsubrp
dec
dec
(bad)
sti
mov
jg
dec
pop
dec
jle
aas
aas
stc
dec
jmp
aas
loope
std
in
jmp
jle
icebp
lahf
cld
inc
jg
repz
mov
std
cmp
in
std
(bad)
jg
pop
cld
jo
mov
das
mov
ja
jae
aas
aas
jnp
iret
out
xlat
jg
push
ds
(bad)
jmp
lahf
sti
aaa
call
xchg
call
fcomip
pop
mov
cmp
clc
iret
clc
std
(bad)
mov
dec
stos
aas
dec
out
sti
(bad)
(bad)
adc
movd
daa
jmp
aas
call
jmp
jg
fwait
cld
pop
(bad)
jmp
repnz
call
jnp
mov
jmp
jg
dec
(bad)
jmp
in
rcr
jg
das
cdq
dec
fmul
mov
lock
jnp
fld
sti
jecxz
dec
dec
out
lahf
lock
mov
inc
ja
rcr
mov
div
das
cld
push
jmp
cld
(bad)
dec
mov
clc
cmp
clc
(bad)
dec
cld
cmp
div
mov
mov
(bad)
out
jle
outs
std
jne
cli
xlat
(bad)
lods
mov
idiv
fstp
loope
fucomip
mov
mov
jg
mov
mov
(bad)
scas
jg
xlat
mov
cld
clc
das
sti
mov
loop
cli
out
int3
mov
daa
aas
pop
jl
outs
cld
bnd
lahf
mov
aas
cmc
push
cld
stos
(bad)
fucompp
aas
stc
cli
vcomisd
(bad)
mov
cld
movs
call
pop
sti
dec
(bad)
movs
fcomip
mov
clc
dec
fdivr
(bad)
mov
clc
arpl
repz
dec
jmp
dec
call
out
idiv
inc
cmps
jmp
pop
ja
(bad)
inc
std
push
(bad)
(bad)
test
aas
jp
daa
cmp
stc
sar
cmc
pop
jl
jmp
outs
inc
cld
adc
mov
cld
fwait
cld
mov
hlt
scas
stc
xchg
xor
div
mov
cmps
push
push
(bad)
fdivr
(bad)
sbb
sbb
loopne
mov
jne
cmp
out
mov
(bad)
(bad)
div
jecxz
mov
mov
movs
jg
pop
mov
imul
push
std
in
icebp
mov
jecxz
dec
pop
cld
mov
(bad)
div
lahf
cmc
sti
(bad)
(bad)
fnstsw
retf
jg
das
cld
mov
(bad)
daa
push
adc
sar
lock
dec
(bad)
(bad)
jmp
aas
cld
aaa
lods
(bad)
mov
(bad)
jg
and
iret
(bad)
cmps
jmp
mov
(bad)
scas
clc
int
repz
cmps
jg
out
cld
aas
dec
jg
(bad)
std
ja
repnz
std
sar
retf
loop
test
mov
not
loop
sti
scas
jg
(bad)
cld
jmp
cld
in
jg
mov
(bad)
icebp
out
jle
(bad)
std
inc
mov
cmp
idiv
jmp
fistp
std
xchg
mov
dec
mov
call
icebp
in
jmp
(bad)
jmp
icebp
jg
idiv
and
icebp
cmp
std
push
dec
(bad)
cli
scas
inc
lds
aaa
push
in
inc
push
jecxz
jmp
ret
jg
icebp
aas
repnz
das
inc
fisubr
jg
cmp
addr16
mov
cli
mov
idiv
cld
daa
(bad)
jns
fstp
push
pop
dec
inc
stos
jg
aas
(bad)
call
fstp
jg
fnstsw
(bad)
mov
jecxz
call
repz
jl
scas
(bad)
data16
neg
retf
mov
fdivrp
in
(bad)
jmp
inc
out
jle
mov
fucomip
aaa
inc
daa
jle
pop
cld
leave
jg
aas
imul
loop
(bad)
out
cld
sar
(bad)
neg
icebp
scas
cmc
retf
mov
fstp
push
stc
inc
(bad)
fwait
jg
aas
mov
jg
addr16
stos
jg
test
(bad)
neg
(bad)
movs
mov
ja
jns
pop
dec
jg
outs
clc
inc
push
neg
cld
adc
ja
retf
das
jg
mov
jmp
arpl
(bad)
jmp
mov
(bad)
in
aas
std
jnp
xchg
jg
hlt
aas
clc
lahf
jg
mov
hlt
aaa
stc
out
xchg
push
mov
cli
(bad)
push
(bad)
jp
cli
mov
mov
jmp
cmc
lds
jle
mov
xor
aas
lock
and
jmp
repz
cli
cmp
iret
(bad)
cmp
outs
call
out
mov
cld
aas
test
rcr
das
cmp
cs
outs
cli
sub
leave
sar
(bad)
clc
(bad)
pop
cli
mov
sbb
outs
mov
dec
jg
aas
cld
stc
fcomip
out
(bad)
push
out
(bad)
mov
clc
fistp
stc
int
cmps
cmc
(bad)
inc
sar
(bad)
scas
call
xchg
mov
jle
dec
jmp
stos
aas
lods
cld
std
mov
pop
jg
push
pop
fdivr
pop
jle
mov
fcomip
inc
pop
std
out
dec
retf
div
stc
add
(bad)
cld
(bad)
clc
pop
stos
jg
idiv
mov
shr
retf
pop
ds
out
test
dec
(bad)
fstp
lahf
(bad)
xlat
not
(bad)
fucomi
(bad)
clc
jmp
stc
xchg
(bad)
fstp
(bad)
stc
pop
push
std
imul
mov
pop
call
outs
imul
jle
pop
cli
mov
cli
push
pop
std
mov
jecxz
repz
clc
inc
(bad)
mov
repz
jmp
leave
push
pop
std
jnp
sti
mov
outs
ins
std
push
jnp
mov
mov
xchg
mov
cmp
adc
scas
(bad)
mov
(bad)
and
pop
pop
jmp
outs
dec
outs
stc
(bad)
stos
aas
in
pop
imul
sti
aas
std
(bad)
jg
jmp
call
(bad)
scas
sti
aas
icebp
xlat
inc
fdecstp
lds
jg
mov
stc
ja
mov
jle
xchg
jg
lahf
repnz
lahf
inc
dec
das
cld
mov
mov
pop
mul
sar
jmp
cmp
repz
(bad)
call
int3
(bad)
in
cwde
(bad)
mov
neg
cld
cmps
xchg
push
lahf
cmc
lds
jecxz
dec
cli
pop
(bad)
sar
loope
jl
ja
fwait
inc
xchg
call
sbb
cld
ud0
mov
(bad)
(bad)
jg
aas
cmp
pop
jg
pop
call
call
dec
jg
jg
scas
(bad)
std
jmp
hlt
in
mov
in
(bad)
std
out
(bad)
pop
mov
mov
jg
clc
imul
fcomip
clc
xchg
(bad)
hlt
aas
icebp
mov
aas
cli
aad
stc
imul
pop
jmp
(bad)
mov
popf
(bad)
clc
outs
jmp
call
fistp
jmp
loopne
in
das
(bad)
das
(bad)
cli
ja
call
cmp
or
(bad)
call
xchg
jg
lahf
mov
cld
mov
std
jmp
in
out
(bad)
jecxz
(bad)
stos
in
pop
(bad)
fdivp
(bad)
scas
cli
repz
dec
mov
jmp
jl
mov
sar
cld
xlat
(bad)
das
pop
dec
loopne
pop
repnz
push
lahf
cld
push
mov
(bad)
test
jg
pop
repz
cld
(bad)
push
out
repz
cld
fwait
jg
outs
sti
adc
aas
jl
sar
dec
leave
(bad)
std
daa
std
in
icebp
jnp
cld
scas
jg
loop
sti
sti
(bad)
xchg
mov
jmp
std
(bad)
(bad)
in
mov
(bad)
out
dec
jg
addr16
xor
xchg
mov
call
mov
push
icebp
lahf
cld
dec
jge
paddd
idiv
sar
(bad)
lods
std
xchg
mov
(bad)
fdivr
jg
jg
ja
lock
call
mov
loope
icebp
idiv
pop
cld
out
aad
(bad)
cmp
idiv
jmp
mov
(bad)
xchg
(bad)
pop
lahf
mov
fstp
bnd
sti
jmp
cdq
cld
(bad)
xlat
mov
push
sub
(bad)
sub
(bad)
outs
lock
pushf
pop
cld
sti
jg
jmp
hlt
daa
std
jge
call
(bad)
(bad)
mov
out
scas
dec
jg
mov
inc
mov
push
jle
aas
std
xchg
jg
pop
icebp
jmp
cmp
adc
in
into
inc
fcos
add
cli
xchg
call
(bad)
mov
repz
std
mov
outs
repz
jge
dec
idiv
cmc
aas
cld
pop
jg
popf
pop
cld
es
das
(bad)
fstp
mov
cli
cld
ja
mov
lahf
pushf
call
mov
mov
imul
(bad)
mov
(bad)
loop
call
std
sub
addr16
xchg
(bad)
(bad)
(bad)
in
jg
das
jns
popf
jg
aaa
clc
out
cs
pop
out
std
xchg
sar
adc
sar
lahf
std
retf
(bad)
mov
cld
stos
jle
pop
arpl
pop
std
dec
jg
out
mov
das
std
arpl
inc
cmc
pxor
in
stc
xlat
call
std
ja
std
pop
(bad)
fild
scas
(bad)
jns
fistp
outs
std
leave
jg
lds
sub
sar
scas
popf
dec
jg
aas
cmc
in
sar
call
(bad)
mov
imul
in
call
ja
xlat
call
jg
push
movd
inc
inc
(bad)
out
std
cli
ja
ja
icebp
aas
icebp
das
dec
jg
xlat
clc
lahf
out
fdivrp
fstp
icebp
scas
(bad)
std
mov
(bad)
cmc
jg
pop
inc
ja
xlat
(bad)
jmp
clc
popf
jg
(bad)
cmps
cmp
scas
icebp
xlat
cld
mov
out
call
std
hlt
popf
(bad)
rcr
sub
lahf
(bad)
jae
sub
out
iret
push
jle
jg
daa
jmp
icebp
paddw
xchg
dec
(bad)
(bad)
jg
jnp
into
idiv
cld
outs
jmp
in
jmp
(bad)
cdq
outs
(bad)
mov
not
dec
stc
push
jle
fcomip
mov
mov
jmp
(bad)
call
out
idiv
lods
jg
ret
(bad)
push
pop
repz
pop
in
lods
(bad)
mov
add
jg
hlt
cmc
idiv
jbe
int
(bad)
inc
int
out
sub
mov
arpl
stos
(bad)
sti
clc
pop
test
lea
cmc
lahf
clc
out
pop
jmp
cld
(bad)
fcomip
out
call
sar
icebp
xchg
inc
jg
(bad)
(bad)
mov
xlat
sti
sbb
das
clc
or
(bad)
cld
out
std
in
stc
daa
std
lods
mov
pop
std
xchg
jg
jg
in
std
lahf
inc
fnstcw
cmp
out
std
sbb
ficomp
jg
pop
imul
(bad)
cmp
int
stc
in
scas
dec
jg
pop
clc
in
xchg
mov
iret
pop
cld
or
sar
jecxz
addr16
(bad)
mov
clc
xchg
sbb
(bad)
mov
mov
jmp
sti
movs
(bad)
(bad)
jecxz
out
(bad)
mov
(bad)
std
dec
mov
dec
jmp
pop
repz
sbb
dec
aas
in
cli
ja
cld
in
aas
std
call
jg
pop
(bad)
push
daa
pop
cmp
clc
cmc
push
(bad)
addr16
cld
outs
inc
out
stc
mov
repnz
jmp
mov
(bad)
mov
ins
call
push
out
cli
aas
inc
inc
dec
lahf
jmp
jg
mov
cmc
aas
push
clc
pop
inc
pop
cld
icebp
jmp
aas
sti
(bad)
sahf
gs
(bad)
call
jg
in
repnz
(bad)
jg
pop
bnd
inc
(bad)
fstp
jg
(bad)
scas
(bad)
loop
jecxz
out
jp
mov
jg
xchg
int3
jmp
pop
jle
jnp
imul
(bad)
gs
outs
std
mov
mov
adc
mov
out
jg
neg
std
stc
mov
out
call
mov
(bad)
jmp
in
cli
idiv
cmp
(bad)
cli
in
retf
rcr
mov
mov
ja
retf
mov
(bad)
icebp
pop
jg
das
jmp
jmp
aas
div
jle
pop
std
mov
rcr
repnz
clc
outs
repnz
cld
pop
(bad)
imul
aas
repnz
idiv
fwait
cld
xchg
jg
scas
icebp
mov
sar
lahf
mov
jmp
paddb
inc
ud0
inc
scas
sti
addr16
stc
jmp
fstp
repz
pushf
(bad)
mov
xor
cld
cmps
sahf
(bad)
cmp
clc
aas
std
inc
out
into
out
repnz
std
mov
aas
hlt
dec
jp
fwait
scas
call
out
cwde
cld
xchg
jg
pop
sti
pop
ds
pop
jmp
sti
lahf
(bad)
fcomp
hlt
outs
mov
(bad)
mov
std
jle
jg
pop
(bad)
(bad)
idiv
test
addr16
inc
dec
dec
xchg
jmp
jg
aas
mov
(bad)
mov
pop
inc
dec
aas
hlt
outs
clc
jmp
repz
mov
out
dec
dec
(bad)
cs
aaa
inc
retf
aas
icebp
daa
cld
ret
idiv
pop
ucomiss
out
std
sub
std
mov
aas
jmp
scas
(bad)
fld
mov
mov
scas
push
sub
pop
icebp
aaa
std
mov
leave
pop
rep
(bad)
mov
jns
pop
(bad)
scas
(bad)
fidivr
jg
pop
lock
pop
jecxz
adc
int
aas
std
mov
pop
aas
cli
out
dec
jmp
lahf
dec
dec
stc
sub
mov
cli
sbb
call
out
mov
pop
mov
aaa
cld
xor
jg
icebp
fistp
xor
cld
fxch
pop
cld
lahf
dec
mov
daa
std
push
jg
mov
mov
daa
movq
call
aas
cld
xlat
stc
(bad)
xchg
out
sbb
xchg
cmp
cmps
aas
cmc
out
daa
iret
dec
(bad)
adc
cmc
jmp
std
inc
(bad)
jg
pop
outs
call
cmp
jmp
in
clc
(bad)
or
mov
push
push
jle
mov
jbe
sbb
clc
dec
jle
aas
sti
pop
lods
(bad)
cli
jg
in
sti
adc
mov
(bad)
cli
aaa
clc
mov
xlat
clc
(bad)
call
xor
in
inc
(bad)
scas
test
jg
outs
stc
(bad)
(bad)
(bad)
ficom
xchg
jg
jg
fstp
lods
pop
(bad)
pop
jge
mov
scas
jnp
loopne
stc
addr16
jnp
ficomp
xchg
cld
pop
push
scas
idiv
out
std
std
push
hlt
(bad)
les
std
mov
hlt
out
lock
and
pop
(bad)
xchg
mov
(bad)
(bad)
neg
cld
sbb
mov
jecxz
sti
imul
push
mov
jle
aas
stc
mov
pop
imul
jmp
icebp
fcomip
aas
std
lahf
(bad)
mov
loopne
inc
jmp
(bad)
out
idiv
pop
cld
push
inc
icebp
lahf
not
pop
(bad)
jmp
cmp
aas
test
mov
call
nop
mov
ds
sar
fwait
jg
aaa
std
jne
sti
(bad)
clc
aaa
(bad)
daa
dec
lahf
stc
sbb
hlt
mov
(bad)
(bad)
lahf
ds
xchg
jg
jg
retf
maskmovq
idiv
mov
jg
jmp
jmp
out
leave
xchg
(bad)
clc
(bad)
jle
(bad)
std
movs
mov
pop
imul
clc
clc
aaa
sti
repz
jg
aaa
inc
jg
dec
mov
cmps
mov
imul
xchg
pop
std
(bad)
inc
mov
cld
retf
lahf
sti
fwait
out
hlt
outs
imul
aaa
out
leave
lahf
(bad)
fistp
arpl
fidivr
sti
pop
push
aas
mov
daa
cld
gs
lahf
clc
push
dec
mov
jle
in
(bad)
lahf
(bad)
fdivr
mov
fistp
(bad)
call
hlt
out
pop
mov
(bad)
repnz
fstp
pop
cli
(bad)
mov
idiv
jg
jg
pop
clc
pop
push
cld
leave
(bad)
(bad)
std
daa
(bad)
pop
idiv
scas
(bad)
(bad)
sti
mov
leave
mov
outs
cli
das
jmp
jg
aas
not
mov
jg
(bad)
daa
(bad)
jp
ret
jmp
fdivr
cmc
lahf
inc
lahf
cld
out
(bad)
(bad)
fcos
mov
sti
ja
mov
stc
sti
push
std
aas
pop
(bad)
out
jmp
dec
outs
jg
push
xchg
jnp
stc
xchg
mov
cld
aaa
(bad)
fmul
leave
push
dec
jle
in
cld
lds
retf
jg
jmp
(bad)
(bad)
sar
push
dec
cld
mul
(bad)
cmp
and
neg
std
jns
out
lahf
icebp
xlat
(bad)
bnd
scas
jge
or
out
dec
aas
out
pop
jg
(bad)
(bad)
scas
(bad)
icebp
jg
aas
repz
mov
inc
iret
in
(bad)
pop
cld
idiv
int
call
mov
lahf
sub
loop
stc
pop
jle
(bad)
(bad)
in
mov
in
idiv
std
push
(bad)
in
hlt
out
jns
inc
cld
out
jg
jg
out
call
jg
jns
addr16
and
xchg
jg
addr16
pop
cmp
in
(bad)
fnstcw
cdq
icebp
jb
pop
stc
jge
int
iret
cld
mov
adc
(bad)
in
aas
cli
addr16
popf
jnp
pop
std
neg
call
jg
(bad)
sti
add
xchg
pop
cld
popf
mov
dec
repz
push
std
sbb
retf
aas
in
pop
std
mov
(bad)
out
lods
(bad)
mov
xchg
(bad)
jg
lahf
jb
jmp
xor
inc
out
dec
out
out
std
push
jle
ud0
(bad)
(bad)
imul
mov
jl
jnp
or
in
sti
fwait
cld
jle
lahf
inc
scas
cmc
jg
out
(bad)
fstp
imul
dec
inc
fdivrp
lods
jmp
jg
aas
in
das
stc
mov
(bad)
jle
pop
(bad)
mov
pop
call
mov
aas
stc
mov
loop
clc
test
leave
scas
icebp
idiv
jl
fdivr
and
mov
(bad)
test
mov
pop
cmp
dec
jle
outs
stc
in
iret
std
addr16
fcmovu
mov
(bad)
(bad)
mov
jl
aaa
std
retf
inc
fcomip
iret
(bad)
(bad)
cmps
(bad)
aas
cld
lods
sahf
inc
jmp
lahf
cld
or
cld
iret
(bad)
call
jl
mov
(bad)
jmp
std
xchg
(bad)
jl
fistp
stc
adc
aad
mov
icebp
scas
jmp
inc
icebp
pop
std
loopne
jle
(bad)
in
(bad)
imul
pop
hlt
lahf
jmp
jg
jmp
sti
addr16
mov
(bad)
(bad)
in
mov
sbb
sti
(bad)
out
(bad)
mov
ret
(bad)
(bad)
mov
into
ja
cmp
mov
scas
aas
stc
xlat
jl
scas
inc
mov
das
cld
cmp
(bad)
xor
idiv
xor
(bad)
mov
push
jle
aas
(bad)
jmp
sar
fcom
jg
pop
hlt
stc
or
or
jg
push
push
lahf
jmp
into
mov
cld
idiv
mov
in
hlt
pop
lock
cmp
out
mov
jmp
dec
jae
xchg
cmp
mov
jg
jg
cmps
jg
pop
repnz
jle
sbb
push
sar
(bad)
pop
(bad)
pop
inc
pop
jmp
mov
stc
ja
inc
dec
inc
jmp
mov
ins
jne
(bad)
sti
(bad)
(bad)
dec
aas
jecxz
clc
fstp
(bad)
out
lock
stc
arpl
cmc
lds
stc
stos
mov
mov
es
scas
mov
push
jmp
addr16
call
mov
jmp
dec
cli
pop
(bad)
ficomp
repnz
(bad)
(bad)
jg
out
scas
cld
dec
(bad)
mov
(bad)
(bad)
aas
loop
clc
adc
scas
cld
inc
mov
jg
out
repz
stc
mov
hlt
das
sti
lahf
(bad)
mov
mov
add
arpl
call
add
cmc
idiv
cdq
(bad)
in
in
jmp
repnz
(bad)
out
jg
out
stc
jnp
mov
jle
jnp
pop
std
jnp
adc
pop
std
addr16
dec
(bad)
(bad)
mov
push
push
imul
stc
fwait
std
scas
jg
(bad)
cli
cmp
std
idiv
jecxz
repnz
(bad)
adc
retf
leave
mov
(bad)
outs
sti
jnp
cld
dec
push
stc
jecxz
(bad)
out
pop
std
jg
(bad)
(bad)
fisttp
or
loopne
pop
clc
out
cld
add
shl
jmp
mov
(bad)
stos
(bad)
jmp
(bad)
jg
cld
cmp
jg
cld
idiv
pop
hlt
shr
push
cld
mov
hlt
(bad)
cld
(bad)
fcomip
aas
mov
repnz
stc
cld
aaa
sti
imul
out
sti
push
jg
aas
stc
lods
fcomip
iret
dec
(bad)
in
mov
jle
mov
repz
cld
idiv
repz
fsubr
or
cli
xchg
dec
cmps
jg
mov
cld
out
cwde
dec
aas
neg
push
repnz
cld
in
btc
sbb
fstp
idiv
std
into
fcomip
pop
(bad)
loop
out
cld
pop
jg
data16
(bad)
sar
clc
lahf
jge
jnp
jle
neg
sti
pop
fstp
daa
ja
mov
(bad)
cli
pop
std
push
ja
(bad)
jecxz
int
stc
aas
xchg
jg
clc
xlat
(bad)
repz
loopne
jecxz
sti
outs
dec
pop
out
fyl2xp1
scas
(bad)
sti
push
out
cli
std
inc
pop
cld
lds
iret
lahf
std
aam
hlt
xlat
cld
jns
icebp
mov
mov
cmc
(bad)
call
out
in
jp
sar
ja
cmc
outs
jmp
inc
(bad)
sub
cmps
mov
(bad)
add
clc
pop
xor
cmp
add
test
loopne
cld
sti
scas
jg
(bad)
jg
pop
iret
push
inc
jg
pop
bnd
not
out
std
pop
jle
xlat
inc
jg
push
jmp
sub
retf
(bad)
mov
std
mov
push
jg
das
mov
jg
jg
cmp
test
out
aas
lock
out
ret
jg
out
jnp
imul
jg
mov
mov
jge
xlat
cli
or
(bad)
jmp
and
(bad)
fistp
mov
jmp
mov
sti
pop
(bad)
(bad)
cli
in
std
mov
repz
hlt
aas
(bad)
cli
jg
lods
mov
mov
dec
lahf
std
sti
sti
in
cli
sbb
hlt
frstor
jmp
scas
icebp
out
push
(bad)
sti
retf
mov
pop
std
ret
ja
lock
(bad)
lods
(bad)
(bad)
mov
test
mov
(bad)
cli
mov
idiv
sti
sub
(bad)
imul
(bad)
push
scas
jp
push
dec
mov
cld
lods
(bad)
scas
stos
jg
out
stc
das
mov
xlat
shl
out
cli
in
jg
repz
icebp
das
loopne
aam
sbb
nop
ins
idiv
lahf
push
cmc
jmp
pop
(bad)
sbb
ds
xchg
and
out
mov
add
repz
mov
out
std
cmp
(bad)
fstp
(bad)
cld
outs
inc
aad
clc
paddb
aas
sub
xchg
mov
jge
sbb
cld
mov
imul
pop
sti
inc
(bad)
mov
stc
cmc
call
jmp
push
jmp
mov
mov
inc
(bad)
(bad)
lahf
idiv
mov
retf
push
fdivr
xchg
mov
dec
jle
aas
out
aad
mov
sti
icebp
push
fwait
(bad)
pop
inc
pop
icebp
mov
jg
jg
in
(bad)
sbb
mov
iret
std
aaa
jg
scas
repz
push
(bad)
stc
pop
std
sti
(bad)
idiv
retf
pop
cld
pop
aas
div
(bad)
(bad)
mov
or
dec
cld
scas
std
addr16
jmp
ins
jmp
sar
jmp
(bad)
mov
hlt
xlat
(bad)
jnp
sar
cmc
fwait
(bad)
in
(bad)
cli
mov
jmp
loop
push
(bad)
out
out
sti
jmp
pop
stos
jg
pop
sbb
jl
fisttp
sti
in
jg
mov
dec
mov
aas
lock
adc
pop
repz
mov
dec
lock
dec
cld
xor
fcmovnu
cld
out
cli
and
mov
pop
hlt
daa
jmp
jg
(bad)
mov
ja
idiv
neg
sub
retf
outs
into
(bad)
in
sti
(bad)
cmp
cld
scas
ds
out
ret
(bad)
pop
std
idiv
in
pop
cmc
jmp
sti
ja
mov
jg
scas
dec
aas
(bad)
aas
std
dec
jle
push
mov
pop
mov
ja
mov
icebp
pop
cmp
cmc
sbb
or
js
lock
(bad)
clc
xchg
scas
(bad)
(bad)
call
sti
jle
dec
sahf
cld
mov
aas
cld
xlat
repz
pop
call
lds
aas
cli
xchg
cmps
aas
std
jecxz
lahf
stc
das
mov
dec
fucomip
xlat
cld
pop
(bad)
aam
jnp
fucomi
leave
jmp
jg
pop
jne
xor
shl
rep
(bad)
fwait
jl
xlat
clc
xor
sbb
imul
mov
cld
sbb
mov
(bad)
cmp
dec
dec
mov
dec
pop
jecxz
clc
hlt
aaa
stc
xor
hlt
imul
in
jg
imul
jg
fcomip
imul
push
jg
imul
aas
cmc
leave
scas
icebp
imul
fcomip
xlat
clc
xor
xlat
js
icebp
imul
dec
mov
mov
cld
sbb
cld
sbb
xor
call
sti
xor
out
and
cmp
sbb
adc
pop
inc
(bad)
scas
icebp
pop
cld
test
das
(bad)
sub
out
push
cmc
imul
mov
(bad)
std
rcr
xlat
clc
pop
(bad)
call
imul
jecxz
clc
(bad)
dec
inc
pop
jecxz
clc
cmp
imul
mov
jle
jmp
psubb
out
std
xor
inc
lahf
(bad)
xor
dec
mov
std
(bad)
mov
adc
xor
mov
push
arpl
xchg
jle
pop
jecxz
mov
neg
sbb
outs
adc
repz
(bad)
sbb
xlat
clc
xor
xlat
clc
xor
sbb
sbb
xor
iret
(bad)
xor
(bad)
scas
icebp
imul
js
call
pop
jecxz
cld
pop
jle
pop
jecxz
jg
fidivr
daa
pushf
(bad)
icebp
pop
jecxz
clc
std
jle
scas
icebp
imul
jg
scas
icebp
imul
jg
shl
outs
mov
inc
rcr
clc
cmc
mov
cmc
mov
mov
arpl
maxps
idiv
fisubr
jge
stos
mov
frstor
in
lahf
sti
xor
hlt
xlat
clc
xor
xlat
clc
xor
jecxz
clc
jge
fstp
xlat
fsub
jg
pop
jecxz
clc
daa
jle
pop
jecxz
std
ret
mov
inc
mov
cmp
jge
dec
(bad)
mov
imul
imul
pop
jecxz
cmp
mov
jmp
idiv
jmp
ret
aas
stc
(bad)
sar
push
(bad)
sti
sbb
cld
sbb
or
clc
xor
hlt
pop
jecxz
js
mov
xor
mov
outs
pop
std
sbb
push
pop
jg
cmc
inc
hlt
std
xor
jle
dec
jae
cmp
sbb
jmp
jmp
scas
icebp
imul
inc
repz
jg
int
scas
imul
sbb
(bad)
fisttp
imul
cmp
call
lea
mov
pop
jmp
or
leave
lahf
dec
jecxz
pop
(bad)
adc
(bad)
pop
clc
jnp
sbb
sti
popf
mov
(bad)
push
call
xlat
clc
jae
iret
jg
out
clc
xor
scas
push
inc
sbb
fisttp
(bad)
in
imul
nop
call
xor
adc
cmps
cld
sbb
(bad)
sbb
(bad)
dec
repz
std
inc
add
push
adc
sar
(bad)
sbb
mov
(bad)
push
cli
aas
icebp
in
pop
jnp
imul
xchg
xor
mov
cld
sbb
xchg
std
sti
inc
loop
mov
icebp
sbb
and
sbb
jg
mov
call
jle
dec
cmc
sbb
sbb
ror
imul
ja
xor
fldcw
test
scas
jnp
jae
std
mov
std
dec
out
jmp
sbb
aas
inc
cld
inc
jge
push
hlt
into
(bad)
pop
call
mov
fucomip
idiv
xor
push
mov
adc
popf
adc
cld
cld
(bad)
cmp
hlt
mov
jg
scas
dec
js
aas
popf
(bad)
push
inc
cmpps
dec
or
loop
fild
repz
pop
arpl
call
fstp
xlat
fsub
fidivr
jmp
mov
out
sub
push
jg
scas
icebp
imul
sbb
(bad)
pop
adc
xchg
dec
std
dec
mov
push
push
sahf
mov
sar
mov
jle
pop
cli
sti
outs
mov
and
inc
std
or
stc
jg
mov
(bad)
push
mov
cli
jge
mov
mov
cli
sti
(bad)
test
jecxz
lahf
jg
loop
aas
xchg
clc
hlt
pop
adc
cld
or
pop
loop
jg
fbld
cdq
and
sbb
dec
mov
inc
jb
jg
jg
(bad)
cmps
aam
das
cld
jae
sub
jge
jmp
add
out
(bad)
std
xchg
inc
or
icebp
stos
mov
sti
adc
push
mov
jmp
jg
(bad)
inc
aas
and
(bad)
outs
movs
paddd
call
push
fcmovne
mov
outs
repz
jg
outs
inc
out
xchg
dec
cld
mov
movq
icebp
je
mov
sti
mov
adc
shr
inc
adc
pop
adc
cld
sub
cli
fcmovnbe
out
push
shl
(bad)
cmp
(bad)
xchg
adc
push
mov
cld
ins
mov
call
jg
inc
(bad)
jecxz
push
inc
repz
cli
push
(bad)
aas
dec
hlt
clc
dec
mov
aaa
loop
das
push
(bad)
in
mul
fisub
rep
std
scas
mov
adc
(bad)
gs
inc
loop
das
jmp
call
cmp
sbb
jp
jmp
jp
stc
xor
mov
inc
cmp
daa
cld
mov
das
sar
dec
(bad)
outs
dec
push
mov
lea
lahf
and
cmp
mov
outs
dec
mov
scas
icebp
imul
and
(bad)
cmp
lds
jg
arpl
fsub
clc
(bad)
das
movs
jns
icebp
int
cmp
and
cmc
aas
div
ja
and
pop
and
std
ror
xchg
push
scas
dec
psrld
jmp
inc
loop
das
cmps
movs
(bad)
call
sbb
(bad)
icebp
dec
es
dec
inc
iret
fistp
mov
loopne
icebp
int
lock
dec
inc
dec
jg
pop
mov
jg
fstp
idiv
push
pop
jmp
(bad)
scas
mov
(bad)
in
(bad)
xchg
std
idiv
leave
push
mov
int
dec
cli
jg
(bad)
das
clc
mov
pop
test
bnd
das
mov
jmp
mov
inc
inc
push
outs
hlt
retf
idiv
xchg
(bad)
jmp
lea
in
pop
stc
iret
(bad)
fdivr
cld
iret
(bad)
das
(bad)
fsubr
mov
ds
arpl
fdivr
(bad)
call
jnp
cld
mov
mov
jg
lahf
bnd
data16
mov
mov
dec
(bad)
sahf
mov
jg
pop
icebp
ja
cli
xor
mov
jnp
int3
mov
dec
mov
(bad)
fidivr
sbb
in
in
std
pop
(bad)
call
rol
fcomip
ja
pop
jg
pop
cli
daa
call
out
pop
std
xlat
pop
std
cmp
jne
cwde
aas
call
jecxz
sti
xchg
(bad)
mov
imul
loopne
aas
out
(bad)
cmp
stc
xor
loop
stc
aas
std
jnp
sahf
mov
dec
mov
aas
cmc
out
clc
mov
mov
jg
jg
xlat
cld
(bad)
jg
aas
call
cld
sbb
pop
hlt
ja
idiv
lahf
clc
daa
dec
jg
pop
sti
xlat
pop
(bad)
cmp
(bad)
xor
fcomip
lods
aas
jecxz
std
xchg
jmp
mov
pop
(bad)
cmp
mov
cmp
aas
jecxz
clc
xchg
inc
mov
jle
mov
out
(bad)
xor
out
icebp
cmp
sbb
lahf
cld
stos
(bad)
fidivr
jmp
stc
mov
sahf
pop
icebp
pop
cld
cmps
jg
pop
std
ja
push
jg
pop
cmc
daa
inc
out
(bad)
xlat
sub
sahf
(bad)
in
das
clc
(bad)
cwde
aas
icebp
out
clc
clc
iret
clc
mov
in
imul
std
sti
call
not
and
int3
lahf
stc
ja
fidivr
mov
jg
lahf
not
cld
aam
repz
add
cli
cmp
aas
jecxz
cli
xchg
(bad)
std
mov
jle
mov
jle
aas
out
cld
cmp
aas
jecxz
sti
xchg
inc
imul
sahf
pop
cmc
pop
jl
(bad)
cld
popf
jg
push
jg
pop
lock
call
out
pop
repnz
mov
mov
inc
(bad)
pushf
aas
stc
pop
stc
jnp
mov
jnp
scas
mov
daa
std
sbb
(bad)
dec
(bad)
(bad)
sti
lahf
std
xor
in
clc
in
call
mul
sub
mov
jg
in
stc
xchg
sbb
(bad)
stc
sbb
mov
jg
pop
stc
daa
inc
xlat
cld
loopne
stc
pop
inc
dec
jg
scas
jmp
pop
jg
mov
jg
icebp
fcomip
(bad)
inc
(bad)
ja
dec
(bad)
fidivr
idiv
retf
aaa
clc
arpl
fnstsw
pop
jmp
jg
out
std
mov
out
stc
aas
inc
jae
mov
(bad)
(bad)
daa
dec
xlat
cld
add
fcomip
pop
cmp
arpl
mov
(bad)
mov
jnp
call
mov
(bad)
mov
jecxz
(bad)
xchg
call
mov
fdivrp
cmp
cmp
xor
fcomip
repnz
clc
jae
in
icebp
out
std
cmp
fucomip
out
stc
(bad)
inc
cmp
mov
iret
clc
push
jmp
(bad)
call
call
fistp
sbb
lahf
cld
push
cld
mov
mov
sahf
mov
call
clc
addr16
inc
jg
pop
repnz
aaa
jg
out
sti
idiv
stc
std
call
mov
popf
pop
sti
(bad)
cmc
(bad)
popf
mov
ja
mov
pop
jmp
jg
pop
stc
(bad)
cld
push
(bad)
fimul
(bad)
sti
(bad)
mov
(bad)
lods
out
std
iret
lahf
(bad)
xchg
aas
jmp
scas
clc
mov
(bad)
pop
(bad)
ds
mov
out
cld
aas
(bad)
call
(bad)
(bad)
xchg
aas
in
das
cli
lods
jg
mov
inc
stc
lahf
(bad)
stos
in
mov
xchg
(bad)
(bad)
fdivr
in
jg
inc
(bad)
fsubr
idiv
(bad)
clc
out
lock
(bad)
mov
push
popf
cld
cmp
fistp
cli
mov
mov
pop
test
(bad)
mov
jnp
mul
jg
push
cld
jbe
out
mov
inc
call
out
jmp
call
jmp
icebp
ja
adc
repnz
push
fcomip
pop
dec
mov
out
clc
jae
retf
aas
repz
cli
out
in
mov
repnz
cli
daa
call
call
clc
aas
cld
(bad)
cmp
push
jg
das
clc
jmp
pushf
jg
cli
cmp
repz
std
lds
(bad)
aas
hlt
loop
mov
ins
jg
retf
push
idiv
jmp
scas
jmp
sti
lahf
(bad)
mov
in
stc
paddd
xchg
sub
(bad)
mov
dec
dec
aad
cld
lahf
mov
in
aas
clc
fwait
(bad)
loopne
std
aad
shr
cmc
lahf
std
mov
jbe
hlt
(bad)
std
pop
push
mov
jle
pop
lock
pop
cld
cs
mov
jg
mov
jg
aas
std
das
std
push
(bad)
(bad)
fst
outs
dec
scas
dec
stos
jg
out
sub
push
sti
pop
cmp
out
out
std
int
rcr
cmps
cld
or
fcomip
lods
jmp
(bad)
mov
out
jge
out
std
rcr
mov
das
(bad)
clc
int
repz
cld
mov
idiv
inc
aas
call
(bad)
adc
cmp
icebp
das
std
scas
jg
aas
xor
out
inc
adc
mov
loopne
(bad)
jmp
cmc
idiv
int
out
mov
scas
aas
cmp
clc
sbb
xchg
jg
dec
mov
ret
push
aas
jmp
push
aas
icebp
sti
cld
inc
jg
out
hlt
aas
call
mov
(bad)
push
jg
dec
push
(bad)
(bad)
loop
out
into
lahf
cld
jg
fnstcw
loop
jl
iret
jmp
inc
jmp
dec
fdivrp
sbb
(bad)
jg
pop
mov
call
fistp
aas
call
mov
int
(bad)
adc
icebp
lahf
xchg
sbb
in
fbld
push
movs
(bad)
inc
sar
sbb
(bad)
(bad)
and
inc
movs
repz
(bad)
out
in
nop
(bad)
stc
mov
mov
retf
out
push
mov
fs
jmp
out
or
(bad)
mov
dec
aas
out
(bad)
std
fs
mov
sahf
jmp
scas
and
jmp
jmp
and
cli
test
fs
sbb
int
jmp
aaa
daa
(bad)
scas
xchg
(bad)
call
jle
cli
cmps
iret
(bad)
mov
jp
xchg
in
aad
adc
mul
ins
out
fnstcw
ret
cmps
movs
(bad)
jmp
fistp
jg
jbe
outs
(bad)
cmps
dec
pop
sar
jmp
lahf
mov
test
fisttp
inc
mov
push
aas
mov
(bad)
fwait
enter
fdivr
in
xlat
clc
xor
ins
add
test
mov
cld
sbb
push
fs
enter
hlt
idiv
repnz
push
sar
(bad)
cmp
mov
lock
dec
mov
dec
outs
jmp
mov
cld
sbb
aas
lahf
ins
and
xlat
(bad)
jmp
fild
(bad)
aas
leave
ds
popa
jg
jmp
dec
ss
daa
fcomp
inc
xlat
pop
sar
xor
inc
and
call
jbe
mov
sub
(bad)
cmp
xlat
clc
xor
pusha
mov
cmp
clc
push
fistp
sti
jg
out
inc
arpl
(bad)
inc
mov
(bad)
inc
cld
dec
push
std
xchg
adc
sbb
xchg
cli
clc
lods
inc
repz
and
nop
fnstsw
movs
mov
ret
and
pop
hlt
xchg
ins
(bad)
out
lock
jmp
int
fistp
(bad)
push
fs
(bad)
cmp
cmp
mov
cmp
sbb
mul
jmp
in
jg
ret
cld
dec
or
int
pop
dec
ss
xlat
daa
fwait
cmc
(bad)
fdivr
(bad)
jg
in
fist
out
xchg
lods
cld
popf
or
fnstsw
aas
and
sbb
icebp
push
loop
fucomip
daa
call
repnz
pop
mov
mov
cld
(bad)
in
nop
dec
xor
std
mov
jmp
lahf
popf
xchg
(bad)
cmp
(bad)
jnp
push
adc
inc
jae
das
adc
cld
adc
inc
push
cmps
and
(bad)
scas
icebp
stos
mov
dec
fwait
aas
cwde
ins
repz
(bad)
aas
mov
ret
lahf
call
sbb
pop
inc
xchg
push
aaa
mov
call
fwait
inc
jg
(bad)
inc
inc
(bad)
xor
aas
or
fs
pop
pop
xchg
dec
cld
pop
inc
iret
call
mov
adc
std
or
fdivrp
inc
xor
in
sbb
(bad)
sar
(bad)
scas
icebp
imul
sti
in
sar
mov
(bad)
call
add
repnz
ficom
pop
das
jle
mov
call
call
jle
mov
dec
mov
pop
ret
push
inc
sbb
jmp
out
inc
jp
dec
call
mov
mov
adc
cld
dec
and
dec
cmc
neg
jg
(bad)
xchg
jg
iret
cld
idiv
std
(bad)
clc
aas
std
iret
(bad)
jmp
sti
in
loop
jle
(bad)
in
push
cmp
(bad)
stc
jg
fistp
xlat
(bad)
jne
fstp
xlat
dec
jg
(bad)
aaa
stc
dec
jg
(bad)
mov
sub
mov
ins
jg
(bad)
ja
sbb
pop
cld
cs
jmp
sti
pop
icebp
icebp
(bad)
popf
fild
iret
clc
icebp
icebp
lahf
sti
lock
clc
sub
mov
loop
mov
cmps
das
sahf
mov
(bad)
addr16
lock
push
mov
sti
fnstsw
cli
shl
std
xchg
psadbw
push
push
scas
push
outs
lahf
dec
addr16
stc
lds
sub
(bad)
clc
push
jg
retf
stos
ja
aas
clc
lds
repz
inc
mov
call
ret
dec
mov
(bad)
sti
jecxz
test
icebp
dec
cli
xchg
(bad)
mov
sar
mov
call
inc
mov
xchg
aas
hlt
das
sti
retf
dec
stos
inc
jmp
xchg
dec
(bad)
mov
call
std
inc
(bad)
paddw
dec
aas
cli
(bad)
std
jecxz
clc
aas
stc
inc
cmp
jg
lahf
call
inc
jg
pop
(bad)
push
(bad)
aad
in
pop
push
dec
jg
(bad)
ja
fnstsw
(bad)
pop
inc
(bad)
call
sar
in
aas
jmp
dec
(bad)
jmp
(bad)
std
pop
dec
jecxz
pop
push
cld
fistp
jmp
clc
(bad)
fcmovu
call
(bad)
dec
imul
cmp
ja
(bad)
(bad)
cmps
femms
push
cmp
shr
icebp
jnp
aas
cdq
ds
iret
mov
loop
xchg
das
jg
cmps
call
fidivr
idiv
(bad)
out
idiv
inc
fpatan
fcomip
xlat
cld
popf
jg
sbb
outs
repnz
pop
push
jmp
in
cli
jb
jecxz
movs
jg
pop
hlt
pop
jmp
jg
pop
test
cmc
pop
jmp
jmp
out
dec
cli
xchg
inc
add
addr16
jg
pop
hlt
pop
jmp
scas
cld
stos
(bad)
jmp
lea
das
sti
pop
int3
clc
call
(bad)
aas
sub
jmp
dec
jg
lahf
(bad)
addr16
fnstcw
lahf
call
inc
call
xlat
dec
pop
js
jmp
cld
inc
(bad)
(bad)
out
mov
stc
jg
stos
jg
psubq
dec
fild
jg
xchg
fucomip
aaa
dec
jle
mul
call
(bad)
lahf
std
dec
mov
dec
dec
sahf
sahf
(bad)
fwait
xor
pop
clc
fcmovnu
aas
jp
lods
iret
inc
pop
jecxz
(bad)
pop
std
clc
out
jle
clc
into
cli
aaa
cmp
fdivrp
lods
jg
pop
repz
sti
hlt
xlat
clc
cmc
jg
(bad)
ja
idiv
call
lods
(bad)
ja
int
out
scas
rcr
and
retf
fucomip
mov
cmp
hlt
aaa
(bad)
sub
push
call
lahf
call
xlat
push
pop
std
lods
push
scas
clc
iret
dec
stos
mov
(bad)
mov
mov
jmp
(bad)
(bad)
in
pop
icebp
iret
call
lock
sti
out
jecxz
loope
lock
inc
addr16
add
inc
cld
sbb
pop
jmp
(bad)
imul
dec
daa
std
idiv
fcomip
xlat
call
xchg
(bad)
ins
inc
lahf
sti
paddd
jg
pop
not
fcomip
pop
(bad)
jge
icebp
pop
stc
mov
sub
aaa
cld
(bad)
inc
push
aad
std
fcomip
xlat
cld
push
jg
scas
not
or
(bad)
jge
(bad)
(bad)
in
out
loopne
call
lods
out
(bad)
cmp
aaa
dec
mov
jmp
mov
lock
int
cwde
mov
mov
mov
popf
(bad)
mov
jecxz
loop
dec
out
(bad)
jp
stc
std
aas
cli
scas
cld
into
into
mov
jg
mov
(bad)
pop
clc
xchg
(bad)
mov
cmp
jmp
pop
sti
sti
(bad)
fstp
std
cmc
dec
cld
movq
jecxz
push
xor
out
(bad)
ja
xlat
aas
out
jmp
cli
daa
(bad)
mov
cld
lods
das
jg
aas
std
lahf
mov
aas
icebp
scas
mov
test
aaa
call
std
push
(bad)
jge
(bad)
jmp
pop
div
fnstcw
cld
out
std
cs
pop
std
aad
stc
loop
std
adc
scas
mov
out
(bad)
std
aas
jecxz
fbstp
popf
leave
pop
test
popf
jg
int
repz
std
fidivr
icebp
out
cli
aad
cld
pop
jmp
jg
mov
in
hlt
out
(bad)
mov
loope
std
hlt
ja
fdivr
inc
mov
jmp
jmp
fucomip
(bad)
dec
pop
cld
sbb
(bad)
dec
jg
jg
addr16
jmp
mov
lods
(bad)
fisubr
pop
jle
jmp
(bad)
addr16
imul
(bad)
(bad)
stos
(bad)
mov
clc
sbb
leave
pop
cli
pop
std
out
mov
push
(bad)
lahf
lock
cld
fidivr
std
aaa
pop
std
loop
jae
iret
std
push
(bad)
fnstcw
outs
into
(bad)
in
(bad)
mov
neg
(bad)
sti
std
dec
call
aas
repnz
(bad)
pop
jg
fcomip
(bad)
std
or
mov
jg
aas
sti
dec
(bad)
jno
rcr
(bad)
clc
hlt
ja
addr16
xlat
jg
iret
cli
fwait
dec
push
das
(bad)
fdivr
jmp
inc
xchg
jmp
(bad)
cmps
aas
sti
mov
pop
std
inc
call
iret
pop
cli
jmp
test
rcr
arpl
dec
pop
inc
pop
cmc
cmps
std
ja
(bad)
jg
mov
xchg
dec
scas
cld
addr16
jg
outs
cld
cmp
mov
inc
jg
mov
(bad)
(bad)
ficomp
jg
dec
mov
(bad)
aad
(bad)
fcomip
stos
push
jg
outs
sti
cmp
out
out
std
sub
(bad)
neg
(bad)
in
mov
fwait
push
dec
dec
cmc
aas
sub
pop
jmp
das
call
dec
retf
xlat
(bad)
inc
xchg
pop
into
(bad)
(bad)
fild
iret
cli
xchg
(bad)
scas
jg
xlat
lahf
std
mov
into
jmp
ret
in
fild
inc
cld
idiv
lods
jle
scas
mov
imul
jg
lds
pop
(bad)
stos
jg
xchg
std
clc
mov
jg
mov
std
xchg
xchg
mov
aas
out
(bad)
lahf
clc
or
addr16
cld
mov
hlt
daa
mov
jmp
icebp
push
push
sti
lahf
icebp
cmps
std
xchg
mov
mov
ds
jmp
(bad)
fmul
lods
jg
mov
das
jg
aas
sti
das
(bad)
idiv
mov
cmc
iret
call
jg
fcomip
(bad)
std
and
lock
aaa
fwait
retf
jg
scas
dec
inc
jg
(bad)
sti
xchg
lock
(bad)
call
xchg
mov
clc
jmp
jg
fucomip
jg
out
(bad)
idiv
jmp
pop
out
clc
xlat
mov
mov
std
inc
(bad)
in
leave
aas
call
jnp
xor
lahf
jmp
in
mov
inc
sti
xchg
push
dec
cld
rep
pop
clc
dec
(bad)
mov
not
cld
gs
out
js
repnz
enter
mov
outs
stc
idiv
sti
cld
repz
std
cmc
inc
(bad)
sti
mov
neg
(bad)
lods
pop
cld
lahf
call
mov
jg
jne
xchg
inc
mov
(bad)
lods
jg
mov
in
idiv
(bad)
lahf
cld
jne
out
(bad)
jg
sub
les
lahf
cs
jg
repnz
(bad)
cmp
cmp
repnz
jmp
sti
xchg
mov
cmc
jmp
push
(bad)
jmp
mul
cmp
ins
call
pop
clc
aas
cld
cmp
ds
(bad)
in
fcomip
das
jl
fwait
std
inc
jle
idiv
test
scas
sub
std
jg
aaa
sti
ficomp
mov
jg
paddw
not
std
cmp
(bad)
mov
out
idiv
jg
rcr
cli
in
(bad)
sub
xlat
mov
jle
das
pop
jmp
in
clc
(bad)
das
dec
(bad)
cmps
aas
(bad)
(bad)
dec
jns
enter
inc
mov
enter
jmp
jg
mov
(bad)
(bad)
in
aas
mov
jmp
cli
ud0
enter
outs
cld
jne
rcr
cmp
aas
in
call
(bad)
jmp
(bad)
stos
jg
mov
jmp
aas
pop
inc
dec
(bad)
mov
aad
std
(bad)
cld
movs
in
lahf
(bad)
daa
(bad)
idiv
(bad)
(bad)
out
lahf
(bad)
push
dec
mov
xchg
inc
cmc
aas
cli
sub
lahf
cld
out
in
cld
mov
outs
cld
inc
sbb
fucomip
loope
pop
cli
scas
(bad)
out
jnp
int
icebp
pop
jmp
icebp
cmc
addr16
clc
out
outs
icebp
imul
dec
jg
iret
cld
xchg
mov
std
xchg
inc
das
dec
aas
mov
inc
icebp
addr16
mov
stc
outs
std
(bad)
jmp
mov
std
daa
dec
std
fwait
cld
sti
xchg
push
repz
pop
call
jg
repnz
iret
out
outs
dec
(bad)
mov
cmc
out
aaa
sti
jne
and
outs
jp
xchg
out
and
inc
out
mov
mov
icebp
lahf
std
and
dec
in
pop
(bad)
loope
mov
jg
jg
mov
mov
stc
cmps
cld
jno
icebp
(bad)
pop
mov
pop
stc
out
cld
push
mov
dec
clc
jnp
mov
int
mov
aas
sti
hlt
pop
cld
mov
(bad)
cld
pop
call
aas
aam
add
in
sti
and
lea
inc
(bad)
sti
inc
jg
lahf
call
cld
mov
clc
pop
dec
mov
aas
div
sti
daa
(bad)
clc
outs
aas
fwait
(bad)
sub
pop
repnz
std
sbb
fisubr
mov
(bad)
fnstcw
fcomip
out
or
bnd
(bad)
push
xchg
xchg
mov
(bad)
in
mov
call
jg
xlat
fyl2xp1
cmc
dec
dec
(bad)
movs
aas
jbe
jmp
iret
aas
lock
sti
push
pop
mov
mov
inc
jg
mov
call
(bad)
mov
cdq
pop
cli
loop
std
ja
mov
cld
scas
fwait
std
sbb
outs
inc
xchg
pop
cmc
or
test
cld
scas
jg
(bad)
cld
(bad)
pop
aas
stc
clc
dec
stc
or
shr
scas
jns
out
(bad)
jle
aas
cli
fld
jecxz
scas
ds
test
sbb
(bad)
dec
into
repnz
jle
and
fcomip
pop
(bad)
jmp
cmp
xchg
cld
pop
xchg
inc
std
das
stos
inc
fcomip
(bad)
into
inc
(bad)
sti
pop
(bad)
cmp
in
scas
lahf
das
jg
das
stc
push
cmp
into
pop
mov
idiv
(bad)
pop
hlt
mov
jg
das
aas
stc
mov
std
jecxz
jg
fcomip
dec
cld
out
jg
jecxz
std
(bad)
cli
sub
xchg
jg
icebp
aas
clc
daa
jge
ja
(bad)
mov
pop
icebp
mov
pop
dec
pop
clc
mov
sbb
pop
sti
sub
mov
daa
(bad)
movs
jmp
(bad)
(bad)
cmp
das
push
jg
repnz
cld
popf
jg
scas
clc
cmp
fcomip
lahf
std
out
stc
and
inc
sub
cdq
pop
jecxz
clc
(bad)
jmp
repz
mov
inc
hlt
mov
(bad)
mov
(bad)
clc
pop
(bad)
xchg
movs
addr16
xchg
jg
pop
sti
in
mov
jmp
aas
std
das
(bad)
sbb
clc
scas
(bad)
out
xchg
xchg
(bad)
cld
scas
pushf
(bad)
sahf
jg
(bad)
jg
mov
(bad)
jmp
sti
in
lahf
cld
in
std
inc
jg
aas
repnz
std
pop
mov
mov
std
jne
jg
aas
cmc
(bad)
cld
(bad)
std
jmp
add
fistp
daa
mov
xlat
out
std
mov
rcr
hlt
iret
dec
aam
idiv
mov
fwait
das
jg
shr
mov
(bad)
jmp
fmulp
mov
stc
inc
cld
lahf
lds
(bad)
push
cld
mov
jle
pop
repz
out
mov
icebp
push
jnp
icebp
outs
out
cld
cmp
scas
dec
out
(bad)
cdq
outs
sbb
(bad)
clc
jnp
(bad)
lods
mov
xlat
dec
jg
jg
idiv
stos
fucomip
ror
or
into
pop
std
stos
dec
inc
push
pop
dec
ja
rcr
clc
dec
mov
dec
pop
sti
in
out
clc
sti
jg
out
div
out
repnz
jg
icebp
mov
mov
sub
jno
out
not
call
fisttp
xchg
aas
cld
paddd
cld
in
(bad)
jle
fcomip
pop
mov
sahf
jg
icebp
out
(bad)
out
cld
icebp
aas
(bad)
fdivrp
icebp
pop
lock
outs
cli
paddw
lock
std
add
dec
retf
jg
aaa
stc
cdq
gs
pop
mov
pushf
cmc
loop
cld
or
pop
std
dec
into
inc
jg
dec
dec
outs
std
mov
(bad)
(bad)
cmps
(bad)
mov
sti
cld
rol
cmps
mov
(bad)
push
pop
jg
stc
cmp
ja
repz
std
cs
fnstsw
paddd
aas
loope
clc
or
loope
call
out
sar
dec
dec
(bad)
aam
shr
jnp
pop
(bad)
(bad)
mov
dec
out
(bad)
xchg
(bad)
mov
jg
sar
sti
inc
dec
(bad)
cld
mov
lods
(bad)
ficomp
outs
hlt
jmp
sahf
jmp
call
daa
sti
jg
outs
xchg
std
popa
int
jle
fcomip
out
clc
xchg
ret
push
in
fisubr
fwait
adc
(bad)
das
mov
mov
jg
cli
sti
(bad)
out
call
(bad)
mov
daa
dec
pop
neg
cld
and
lahf
std
pop
nop
pop
outs
jle
jg
(bad)
movs
mov
call
mov
outs
inc
xchg
jg
out
(bad)
(bad)
lods
mov
push
cld
stos
mov
(bad)
jmp
test
jg
jg
stos
jmp
push
(bad)
(bad)
scas
cli
(bad)
inc
jecxz
hlt
jmp
aaa
cli
ret
jg
pop
stc
push
jmp
(bad)
cld
ja
icebp
call
aas
cld
iret
(bad)
in
dec
xlat
jg
pop
cli
out
(bad)
xchg
jg
out
call
enter
inc
cmc
das
cli
das
call
(bad)
jmp
(bad)
push
std
retf
scas
jle
iret
sbb
das
cld
jnp
fdivr
jecxz
mov
(bad)
xchg
push
aas
std
aaa
jmp
out
jmp
(bad)
cld
daa
jle
cmc
mov
inc
outs
(bad)
mov
jmp
aas
loopne
(bad)
jmp
ret
out
pop
(bad)
cmp
lock
(bad)
rcr
loopne
mov
test
(bad)
xor
(bad)
push
out
gs
scas
sti
cmp
fidivr
(bad)
movs
jmp
push
stc
addr16
loopne
lock
das
jg
aas
cmc
daa
in
call
ret
(bad)
std
xchg
mov
xchg
pop
cld
or
(bad)
xchg
out
dec
(bad)
mov
cmp
cmps
das
push
(bad)
mov
out
jmp
(bad)
add
push
outs
dec
jg
idiv
in
out
jmp
lahf
(bad)
(bad)
aas
(bad)
das
cmp
jnp
jmp
jmp
add
dec
(bad)
fstp
in
dec
clc
(bad)
daa
mov
mov
ins
(bad)
fstp
pop
sti
pop
jmp
sbb
(bad)
cmps
mov
neg
cld
pop
(bad)
sahf
aas
jmp
cld
sar
xchg
call
rcr
sti
sbb
mov
jbe
mov
cld
push
(bad)
call
inc
lahf
(bad)
clc
cmp
mov
(bad)
(bad)
in
jmp
iret
sti
inc
(bad)
in
cmc
(bad)
cld
test
repnz
cld
out
cdq
dec
pop
repnz
(bad)
imul
(bad)
fst
inc
cmc
mov
jmp
lahf
repz
lea
jg
cmp
jnp
stos
jg
pop
stc
pop
cld
cmp
loop
repnz
movsx
push
push
jg
mov
xchg
into
xchg
(bad)
jmp
jg
cmps
aas
stc
sar
(bad)
paddd
mov
std
pop
outs
mov
inc
cli
pop
pop
(bad)
jle
out
icebp
arpl
(bad)
mov
sar
fs
idiv
std
fnstsw
dec
std
das
ins
cli
arpl
(bad)
lahf
repz
jmp
xlat
mov
mov
jg
outs
std
dec
mov
dec
jg
fcomip
xchg
(bad)
loopne
mov
into
jg
scas
cmp
xor
sub
outs
cli
sbb
xlat
mov
std
fistp
(bad)
in
pop
std
jmp
push
iret
idiv
outs
int
fcomip
int
cli
movq
pop
(bad)
aam
repnz
jmp
jg
scas
cld
out
(bad)
mov
inc
xlat
jmp
ja
mov
repnz
(bad)
(bad)
(bad)
fucomip
(bad)
mov
(bad)
clc
stc
pop
hlt
retf
dec
leave
jg
cmps
jle
mov
icebp
pop
cli
daa
mov
pop
stc
cmp
jno
jmp
cmp
outs
cld
je
pop
cld
cdq
sti
mov
dec
lock
mul
(bad)
mov
jne
out
(bad)
jnp
inc
lods
(bad)
out
sti
or
cmps
mov
(bad)
sti
out
pop
cld
dec
pop
jg
pop
push
sub
fcos
(bad)
pop
std
sar
mov
sti
(bad)
lock
(bad)
fidivr
(bad)
cmc
aad
mov
jmp
ja
sti
jle
ja
jg
aas
out
idiv
stos
std
or
cmc
mov
lahf
jmp
mov
imul
sti
ja
dec
aaa
std
mov
(bad)
loop
stc
mov
sbb
pop
call
mov
popf
jg
jg
lahf
push
jg
pop
hlt
mov
cmc
mov
sbb
push
(bad)
stc
bound
mov
retf
(bad)
idiv
clc
cdq
mov
repz
das
inc
repz
pop
sar
std
mov
fucomip
fidivr
ds
clc
aas
call
outs
idiv
test
cli
dec
std
add
jg
scas
cld
call
pop
dec
jg
psubd
retf
lahf
cld
std
inc
lods
aas
call
rcr
sar
call
push
iret
cld
adc
pop
dec
repnz
sti
out
(bad)
sbb
les
cli
lds
pop
aas
cld
stos
pop
(bad)
xlat
push
cld
lds
push
inc
(bad)
cli
das
std
ss
pop
lock
dec
cld
cmc
jg
fcomip
cmps
std
jb
(bad)
aas
jmp
(bad)
cli
mov
(bad)
idiv
(bad)
sti
jnp
ret
fucomip
pop
push
aas
jmp
fstp
(bad)
cli
dec
jg
stc
(bad)
std
retf
cmps
jg
pop
mov
lds
aad
cmc
out
std
xor
aas
test
inc
jg
fcomip
das
std
mov
(bad)
(bad)
mov
cld
outs
jg
lahf
clc
pop
std
cmp
fcomip
cmp
sub
mov
mov
mov
dec
inc
scas
inc
fs
jg
out
aaa
(bad)
(bad)
outs
xchg
(bad)
xchg
push
out
(bad)
mov
pop
cld
inc
std
out
pop
push
jg
fcomip
xchg
mov
jle
mov
in
dec
jg
mov
push
sahf
cmp
jno
hlt
in
cli
aas
jle
pop
repz
push
(bad)
es
and
test
dec
aas
cmc
pop
std
out
aas
dec
(bad)
mov
(bad)
(bad)
cld
dec
dec
mov
jg
aas
loopne
loop
mov
pop
stc
push
addr16
hlt
lahf
js
pop
cld
clc
(bad)
out
(bad)
mov
jmp
(bad)
stc
mov
jg
pop
cld
dec
jmp
jg
pop
cld
lea
push
das
stc
(bad)
(bad)
out
lahf
jns
xchg
std
mov
jb
outs
(bad)
sti
jle
mov
pop
lahf
lods
(bad)
mov
aas
cmp
addr16
aas
ss
call
(bad)
mov
loopne
cld
out
mov
int
idiv
mov
jle
out
lock
stc
push
(bad)
mov
(bad)
out
stc
jecxz
(bad)
mov
fdivr
(bad)
aas
(bad)
mov
imul
out
stc
pop
daa
inc
jg
(bad)
test
xchg
std
aad
loopne
icebp
or
pop
sti
xchg
mov
aas
out
(bad)
xchg
(bad)
nop
mov
scas
jmp
pop
test
test
aas
cld
cmp
aas
hlt
loopne
ja
fbstp
mov
adc
(bad)
cmp
cli
scas
std
daa
pop
xchg
call
jg
daa
std
or
scas
xchg
pop
dec
mov
sbb
sar
(bad)
stc
fcomip
cmp
aas
jmp
cld
(bad)
(bad)
cld
(bad)
lahf
cmp
clc
xchg
jg
jg
ja
jne
fst
jecxz
jecxz
(bad)
call
clc
aas
not
icebp
loope
cld
std
(bad)
jle
fucomip
jg
out
jle
lahf
cli
(bad)
inc
stos
(bad)
lahf
dec
pop
std
mov
outs
jmp
out
(bad)
inc
(bad)
jle
fucomip
aaa
std
pxor
push
leave
(bad)
dec
jl
std
scas
jg
lahf
clc
(bad)
dec
int
dec
fcomip
aas
pop
cs
dec
jmp
cld
shl
jg
jg
lods
mov
iret
mov
jns
jmp
leave
fcomip
pop
mov
(bad)
dec
cdq
cld
sub
aaa
push
pop
mov
(bad)
(bad)
out
std
iret
stc
dec
push
outs
std
xchg
(bad)
jno
cmps
aas
clc
xchg
(bad)
mov
not
cld
mov
mov
aas
out
jg
xchg
fnstsw
clc
push
dec
mov
adc
aas
loope
(bad)
mov
pushf
fucomip
xlat
inc
sar
std
mov
out
xor
call
clc
jg
(bad)
cli
push
(bad)
hlt
out
dec
jle
fcomip
(bad)
inc
retf
jg
pop
(bad)
cmp
mov
pop
cli
dec
mov
push
repz
psubw
(bad)
mov
sti
pop
(bad)
pop
inc
stos
pop
clc
dec
dec
sub
lds
repz
cli
jge
jno
iret
call
sti
cld
int3
pop
clc
aaa
dec
aas
in
pop
mov
jg
iret
(bad)
in
jbe
out
jg
das
clc
outs
(bad)
in
outs
in
jle
pop
mov
jle
jg
iret
js
retf
(bad)
jmp
inc
scas
mov
lahf
cld
idiv
dec
(bad)
stc
pop
(bad)
jmp
clc
cmps
jg
(bad)
push
and
jmp
jle
jmp
stos
sar
jg
(bad)
call
jmp
in
(bad)
popf
repnz
mov
lock
jle
pop
xchg
std
sbb
jg
out
cld
(bad)
in
lock
outs
hlt
lahf
(bad)
pop
jg
mov
jg
sar
pop
cmp
fwait
(bad)
lods
jg
stos
(bad)
clc
xchg
sub
jle
pop
jne
dec
(bad)
mov
clc
outs
inc
sar
imul
clc
icebp
jmp
bnd
pop
mov
mov
and
out
clc
xor
push
push
mov
icebp
xchg
lahf
jmp
mov
jg
mov
sbb
sar
lahf
icebp
lahf
push
arpl
aas
stc
jg
add
sti
mov
jmp
(bad)
(bad)
sar
aaa
(bad)
cwde
aas
sti
pop
cld
popf
jle
(bad)
stc
outs
push
jg
fcomip
outs
std
sbb
fdivrp
icebp
pop
jmp
shr
neg
jge
pop
(bad)
addr16
mov
sti
inc
jmp
dec
lea
outs
(bad)
loop
std
fsubr
jg
daa
(bad)
out
jg
xchg
call
fstp
fucomip
cmps
ds
xor
jg
das
sti
ja
stos
out
cld
jmp
shl
fcomip
(bad)
cli
adc
jg
mov
pop
lock
inc
jg
scas
std
pop
xor
ror
(bad)
lahf
jg
outs
cld
in
das
cld
sub
lds
stc
mov
(bad)
scas
jmp
cld
rcr
div
pop
call
jg
cli
xlat
(bad)
popf
(bad)
stc
scas
mov
mov
(bad)
dec
jg
cli
das
jle
pop
out
jl
imul
sti
sub
scas
(bad)
mov
fwait
pop
jg
std
idiv
stc
out
inc
scas
mov
xchg
jg
push
push
pop
(bad)
std
jg
aas
icebp
out
std
lods
jg
ret
fcomip
ja
repz
in
std
sti
std
xor
dec
mov
jmp
stc
push
mov
aas
jmp
(bad)
(bad)
imul
cmp
push
(bad)
call
maskmovq
xchg
pop
cld
push
jg
pop
repnz
mov
jmp
std
outs
jle
jg
ja
xchg
sar
stc
(bad)
sti
clc
out
clc
outs
(bad)
mov
jecxz
mov
lahf
pop
(bad)
scas
mov
std
mov
ja
(bad)
jle
jecxz
cli
psubd
inc
pop
jmp
hlt
jg
iret
cli
(bad)
mov
(bad)
sti
pop
push
jg
lahf
lock
cld
mov
inc
mov
cld
adc
dec
(bad)
push
jg
dec
cld
push
jg
out
jo
loopne
cli
xchg
(bad)
xchg
(bad)
std
das
(bad)
jb
dec
std
in
(bad)
mov
push
jle
fucomip
(bad)
cld
sti
(bad)
mov
cli
int
dec
cli
sar
das
cld
xchg
mov
(bad)
mov
idiv
mov
(bad)
(bad)
cmps
jg
ja
(bad)
outs
cmc
imul
popf
cmp
ret
mov
pop
jg
jg
ja
lahf
(bad)
jmp
mov
stc
mov
jecxz
(bad)
idiv
lahf
pop
dec
jmp
ror
jg
cmp
rcl
jns
out
(bad)
pop
std
(bad)
(bad)
fld
lahf
std
mov
sar
cld
jnp
pop
mov
jg
dec
(bad)
rcr
in
cld
inc
lahf
scas
xchg
(bad)
pop
pop
jg
aaa
(bad)
(bad)
fsubr
jg
mov
xor
jle
jg
(bad)
jmp
(bad)
sar
das
std
popf
das
push
ins
(bad)
std
mov
push
dec
dec
(bad)
sti
jg
popf
inc
jg
sti
call
scas
imul
sar
cld
inc
(bad)
pop
mov
dec
mov
(bad)
daa
call
aas
std
ss
fistp
jmp
sti
adc
(bad)
(bad)
(bad)
std
aaa
cli
mov
sti
iret
aam
xlat
call
dec
jne
dec
mov
clc
das
cld
out
call
out
sbb
push
dec
addr16
aas
repnz
cld
retf
(bad)
fstp
jg
jg
idiv
dec
jg
stc
outs
stc
pop
mov
pop
cmc
or
lahf
inc
clc
pop
sti
in
cmc
pop
(bad)
popa
inc
(bad)
iret
jmp
leave
out
lock
cld
aam
pop
mov
mov
out
out
jg
outs
clc
lods
fucomip
scas
stc
adc
fcmovne
jg
push
(bad)
and
pop
std
mov
fisubr
jmp
mov
inc
(bad)
fcmovb
ja
div
imul
mov
idiv
ret
(bad)
mov
cli
and
(bad)
cld
aaa
jg
lahf
(bad)
std
iret
out
(bad)
sti
cld
aaa
cld
pop
call
clc
lahf
call
(bad)
mov
repz
inc
ret
out
in
jmp
out
cmp
clc
idiv
mov
aas
cdq
jmp
(bad)
(bad)
cmp
imul
jmp
push
jg
out
not
hlt
jecxz
clc
daa
jle
pop
cli
pop
inc
jg
pop
div
lahf
cld
fwait
inc
jg
in
lahf
cld
(bad)
xlat
aas
(bad)
mov
(bad)
(bad)
cmps
mov
(bad)
mov
dec
aas
(bad)
jmp
(bad)
cld
(bad)
sti
push
push
jg
xor
cld
dec
(bad)
fsubr
cli
std
jg
(bad)
cli
mov
push
lock
lahf
std
or
retf
aaa
dec
mov
jmp
clc
std
sahf
(bad)
jmp
xlat
cli
or
push
jmp
jg
cld
jg
sti
cmp
xlat
call
icebp
call
(bad)
cld
loope
jg
out
rcr
repz
stc
das
(bad)
mov
jg
xchg
std
cmp
stc
scas
jns
cmps
fsubrp
(bad)
hlt
in
mul
xchg
mov
jmp
mov
repnz
loope
dec
jg
dec
dec
(bad)
mov
mov
mov
div
cld
xor
xchg
out
(bad)
mov
and
(bad)
lods
cmps
int
repnz
repz
(bad)
sti
(bad)
loop
clc
pop
scas
jg
mov
cmp
int
pop
cld
pmullw
out
jmp
std
into
movd
(bad)
xlat
cli
popf
mov
stc
cmp
jg
hlt
(bad)
mov
aad
out
mov
(bad)
xchg
jmp
aas
cld
pop
std
pop
(bad)
aas
out
std
jbe
xlat
repz
call
jge
outs
mov
loop
out
pop
imul
xlat
cli
aas
jle
fucomip
dec
(bad)
jecxz
mov
(bad)
stc
xor
clc
lahf
dec
(bad)
popf
pop
hlt
mov
idiv
cmp
jmp
jg
jg
scas
jg
aas
out
cli
arpl
push
(bad)
fstp
cli
imul
jg
jg
sub
(bad)
xchg
mov
fdivrp
idiv
icebp
lahf
stc
cmp
(bad)
clc
inc
jg
iret
(bad)
mov
pop
call
ins
repz
(bad)
outs
jg
pop
std
inc
cld
mov
fstp
ja
lahf
cld
jmp
stc
mov
mov
push
(bad)
sar
outs
std
pop
jmp
dec
jle
aaa
dec
sahf
dec
cmp
repz
fistp
cmc
sti
pop
dec
jg
outs
jle
out
sub
(bad)
sahf
mov
out
mov
mov
jmp
pop
repnz
cmc
pop
lock
cld
mov
out
std
sar
mov
imul
retf
inc
mov
cld
cmp
outs
std
mov
jg
ja
iret
jmp
aas
jmp
loopne
cli
inc
push
out
dec
jg
loope
fcomip
ins
push
cld
xchg
pop
jl
idiv
in
cld
in
aam
cli
fwait
in
outs
(bad)
pop
(bad)
xchg
jg
scas
cld
or
cmc
scas
cmc
imul
ja
ret
mov
adc
std
int3
das
(bad)
xlat
(bad)
mov
out
idiv
inc
(bad)
mov
jmp
xchg
mov
in
xlat
stc
(bad)
(bad)
fimul
cli
div
(bad)
iret
std
(bad)
(bad)
jmp
cmp
loopne
std
das
call
(bad)
mov
ja
std
loope
into
pop
clc
pop
mov
mov
call
mov
out
clc
(bad)
cwde
jg
outs
cmp
(bad)
jg
xchg
jg
(bad)
xor
iret
clc
adc
mov
pop
jmp
jmp
mov
push
(bad)
scas
pop
pop
std
lods
call
(bad)
cld
xchg
jmp
aaa
lods
(bad)
in
aas
out
outs
cld
cmps
(bad)
xchg
aas
jno
sti
(bad)
outs
jg
pop
cld
jnp
inc
(bad)
fnstcw
push
iret
outs
idiv
jp
leave
scas
repz
fcomip
xchg
xor
dec
ds
repnz
(bad)
cld
out
pop
mov
aas
repz
cld
in
jle
loop
sahf
cmp
(bad)
cld
mov
(bad)
outs
std
std
jg
in
clc
outs
(bad)
jmp
dec
das
(bad)
(bad)
call
call
pop
repnz
(bad)
loopne
dec
mov
std
jbe
lds
lock
std
xchg
mov
dec
stc
push
jle
(bad)
(bad)
ja
mov
outs
jg
scas
sub
jns
shr
lahf
cld
leave
iret
jg
cmp
inc
pop
dec
sbb
hlt
mov
cmp
fistp
sti
pop
(bad)
hlt
fbld
pop
std
out
(bad)
std
out
jmp
aad
aas
(bad)
aas
std
mov
in
(bad)
mov
ficomp
cld
in
shr
mov
pop
(bad)
daa
std
ja
(bad)
(bad)
dec
(bad)
fistp
(bad)
cmp
cli
mov
jg
aas
icebp
out
std
repz
lahf
stc
(bad)
xchg
daa
mov
(bad)
out
repnz
repz
(bad)
mov
aas
pop
(bad)
push
(bad)
mov
(bad)
jmp
pop
sti
aaa
dec
rcr
sti
daa
ins
jmp
(bad)
das
mov
lahf
ds
(bad)
mov
push
jg
stos
(bad)
out
icebp
xchg
adc
outs
stc
fwait
pop
jl
aaa
cld
out
mul
cli
pop
hlt
mov
fwait
jg
iret
imul
idiv
jg
jno
mov
sti
jg
jg
mov
inc
(bad)
das
jl
jnp
test
daa
push
mov
pop
jle
aas
out
aaa
cli
fwait
(bad)
out
in
in
mul
std
aas
sti
xchg
jge
(bad)
xlat
push
(bad)
cli
addr16
dec
cmc
lahf
cmc
pop
(bad)
push
inc
ja
cld
inc
iret
(bad)
mov
push
(bad)
(bad)
idiv
icebp
pop
hlt
pop
std
sbb
loop
cld
arpl
fnstsw
xlat
cld
add
cli
sti
addr16
fistp
std
sbb
jp
pop
cld
scas
(bad)
std
retf
push
aaa
(bad)
fstp
stc
and
mov
out
clc
add
(bad)
aas
repz
clc
(bad)
pop
push
lods
aas
loopne
jg
mov
sar
cmc
sub
cmp
pop
mov
mov
cmp
out
xchg
data16
outs
std
jmp
dec
ret
(bad)
mov
pop
jle
repz
jg
test
sbb
(bad)
loop
cld
push
std
adc
xchg
(bad)
xchg
push
(bad)
xchg
jae
inc
aas
jmp
sti
jne
mov
dec
cld
and
(bad)
scas
mov
xor
aas
idiv
xchg
fdivrp
int
jmp
std
pop
std
ss
scas
repz
(bad)
jne
cld
outs
clc
pop
inc
sar
stc
out
std
out
lahf
stc
addr16
sar
pop
stc
das
std
xor
outs
clc
sar
jg
fstp
cmp
ja
daa
jg
(bad)
lahf
inc
in
call
repnz
clc
ud0
aas
imul
ret
(bad)
fstp
inc
ud0
jg
scas
stc
cmp
mov
(bad)
sar
icebp
aaa
cmp
out
jmp
pop
jl
scas
out
fprem
mov
cmc
sahf
in
std
mov
hlt
cmc
out
mov
push
mov
jp
inc
inc
das
jle
xchg
jg
addr16
out
clc
(bad)
or
out
fbstp
fistp
jg
mov
gs
(bad)
jmp
aaa
aas
icebp
pop
(bad)
push
mov
scas
stc
aas
jg
outs
call
in
cld
aas
lock
popf
cld
sub
push
test
(bad)
(bad)
aas
in
pop
clc
pop
mov
jg
outs
(bad)
cmp
std
and
pop
idiv
call
jmp
loop
aas
(bad)
and
mov
jg
out
clc
jmp
sub
sti
jmp
(bad)
inc
dec
jg
lahf
stc
arpl
sar
sti
idiv
mov
mov
pop
mov
aas
(bad)
cmc
push
jg
fisttp
sar
pop
call
(bad)
fcmovnb
mov
(bad)
(bad)
out
hlt
lahf
jg
aas
pop
(bad)
idiv
int
aas
lock
repz
(bad)
in
aas
repz
and
jmp
hlt
outs
hlt
outs
fdivrp
jae
push
(bad)
push
mov
mov
cmps
dec
mov
(bad)
xor
not
leave
icebp
pop
cli
ud0
jg
leave
scas
cld
sbb
pop
hlt
jmp
scas
jg
loope
bnd
stc
aas
mov
das
xchg
push
leave
jg
iret
std
pop
jg
fcomip
(bad)
(bad)
mov
popa
out
cld
gs
mov
push
cld
lahf
jg
loope
xchg
jle
push
mov
push
mov
retf
aas
lock
dec
dec
adc
repz
stc
out
jge
xlat
clc
idiv
icebp
out
repnz
std
call
sti
outs
cli
aad
repz
std
dec
jg
into
outs
cli
sti
dec
jg
(bad)
cli
das
call
hlt
lahf
clc
out
fcomip
dec
dec
mov
jg
aas
cld
mov
mov
repnz
dec
mov
div
xchg
mov
outs
std
leave
mov
scas
aas
dec
jmp
ja
loope
jmp
jecxz
hlt
in
(bad)
jg
out
fnstcw
cli
aas
dec
(bad)
movs
std
lahf
(bad)
cmc
push
scas
jle
mov
out
outs
jmp
mov
inc
out
(bad)
jmp
in
stc
pop
(bad)
movs
lods
mov
(bad)
aaa
(bad)
sti
aas
idiv
(bad)
and
(bad)
addr16
xchg
inc
(bad)
mov
cld
idiv
cmp
cli
scas
sti
cmp
loope
in
cli
out
gs
in
lahf
cmc
push
mov
dec
pop
stc
paddw
rcr
xchg
inc
(bad)
out
das
fwait
cld
cli
push
pop
cld
pop
inc
loopne
lahf
sti
fwait
cld
jge
std
xchg
(bad)
(bad)
xchg
(bad)
in
(bad)
(bad)
fld
cdq
jg
das
sub
inc
pop
(bad)
xchg
(bad)
ficomp
mov
adc
out
cld
jmp
dec
mov
fistp
jg
cmps
jmp
out
rcr
clc
stc
lahf
je
sar
fidivr
cli
(bad)
mov
xchg
pop
sti
inc
(bad)
in
std
out
loope
(bad)
(bad)
out
(bad)
fistp
icebp
jg
mov
(bad)
cmps
mov
jge
aas
cld
addr16
in
aas
stc
mov
mov
(bad)
(bad)
mov
cs
frstor
call
jg
aaa
mov
jge
mov
jg
jg
ja
inc
cmp
cmp
pop
(bad)
scas
(bad)
mov
(bad)
aaa
(bad)
das
call
repz
std
push
jg
push
in
push
(bad)
out
das
cld
(bad)
sar
fimul
fsubr
jg
jmp
icebp
scas
stc
dec
jle
mov
into
jg
ret
addr16
(bad)
stc
jg
jg
std
out
std
pop
jg
(bad)
std
fwait
sahf
std
add
cmc
pop
repz
std
fnstcw
aas
imul
mov
(bad)
(bad)
pop
hlt
inc
std
xchg
jg
mov
xor
jg
aas
aas
cli
scas
(bad)
mov
stc
shr
(bad)
clc
idiv
push
push
in
(bad)
cld
iret
std
sti
mov
loope
iret
mov
aad
out
std
pop
jle
aas
jle
outs
std
stos
aas
(bad)
(bad)
clc
ret
(bad)
scas
jg
addr16
idiv
(bad)
clc
adc
scas
pop
jmp
lahf
mul
mov
repnz
sti
(bad)
mov
jmp
cld
mov
(bad)
loop
cli
test
jge
cmp
jmp
hlt
outs
inc
jle
aas
cmc
(bad)
daa
(bad)
mov
dec
jg
jg
(bad)
(bad)
lahf
jp
paddw
(bad)
cmp
into
mov
pop
repz
std
cmc
jg
mov
xchg
pop
outs
jmp
mov
inc
scas
std
daa
mov
aas
dec
ds
jle
pop
push
ds
jle
fucomip
out
cli
pop
lahf
inc
jmp
dec
aam
jmp
fcomip
scas
std
fcomp
jnp
hlt
lahf
std
jge
jmp
pop
idiv
push
cmc
sti
cld
mov
out
in
and
shr
stc
in
sti
fnstsw
cld
pop
(bad)
(bad)
(bad)
mov
idiv
mov
cld
out
mov
fidivr
sub
(bad)
outs
mov
xchg
(bad)
cld
outs
cli
mov
lea
iret
pop
clc
xchg
jp
jle
jg
cld
in
(bad)
jecxz
jg
lahf
(bad)
xlat
(bad)
mov
cmp
test
in
das
push
(bad)
mov
aam
loopne
out
icebp
cmp
ins
(bad)
cld
(bad)
inc
out
std
test
xchg
mov
ds
cmp
mov
mov
std
xchg
pop
(bad)
imul
jg
out
cmp
mov
ret
aas
gs
push
push
neg
fnstcw
into
(bad)
hlt
fcomip
psubw
mov
jmp
das
inc
into
lahf
dec
pop
mov
dec
inc
std
gs
xlat
inc
aas
sti
jmp
fistp
jg
out
int
jne
aad
std
push
inc
(bad)
aaa
aas
cld
xchg
jle
pop
push
jle
pop
std
mov
clc
mov
hlt
scas
cld
cmp
pop
pop
popf
sar
(bad)
ds
outs
mov
hlt
sti
mov
(bad)
js
out
jmp
pop
std
pop
dec
mov
jg
xchg
cld
jecxz
dec
aas
repz
(bad)
cli
pop
push
(bad)
pop
jg
outs
clc
cmps
push
cmps
push
mov
(bad)
fdivr
fwait
std
pop
mov
jg
sub
dec
(bad)
hlt
jg
pop
(bad)
(bad)
dec
outs
cld
daa
std
jne
enter
(bad)
retf
(bad)
dec
clc
dec
jg
addr16
fcomip
adc
cli
test
aas
loop
popf
pop
jmp
stc
sub
xchg
cmp
clc
push
mov
cld
dec
(bad)
jmp
cmc
aaa
std
ret
jg
test
in
jmp
jg
fucomip
pop
(bad)
out
jg
lahf
dec
inc
pop
out
aas
std
jnp
mov
jmp
(bad)
cli
xlat
(bad)
hlt
aas
(bad)
scas
stc
jae
loop
loope
scas
std
jmp
jg
repnz
cmp
hlt
das
cli
sub
icebp
(bad)
jl
out
(bad)
clc
push
ja
(bad)
push
scas
std
(bad)
cld
(bad)
inc
(bad)
jge
pop
cld
imul
jg
cld
iret
clc
pop
(bad)
mov
in
aas
ins
(bad)
xchg
aas
call
mov
sar
jg
daa
pop
jmp
push
mov
outs
cli
retf
daa
xchg
out
cld
dec
jg
lahf
clc
retf
(bad)
fnstcw
jle
cmc
jg
push
jmp
xchg
std
ins
push
lahf
aas
jle
mov
cld
out
(bad)
ja
mov
daa
(bad)
popf
fbld
xchg
jge
jg
jno
push
fstp
lock
retf
outs
clc
loopne
fdivr
mov
ss
sar
fstp
cld
iret
dec
jg
fucomip
in
stc
ja
xchg
xlat
jmp
pop
hlt
or
out
fistp
mov
add
mov
pop
fdivrp
ins
dec
mov
jle
jg
fisubr
das
cld
in
jg
jo
int3
not
cmc
(bad)
nop
aas
cmps
clc
cmpxchg8b
(bad)
clc
aas
lock
outs
dec
aas
imul
cld
std
push
fistp
(bad)
aaa
push
jg
clc
cld
ja
sti
(bad)
clc
cmc
retf
std
pop
jbe
pop
lods
xchg
retf
ret
cmc
push
(bad)
idiv
aad
stc
iret
mov
pop
std
inc
cld
gs
(bad)
cld
outs
repz
std
out
jg
pop
stc
addr16
pop
dec
inc
dec
sti
mov
xlat
clc
or
fstp
jg
fucomip
aaa
sti
outs
(bad)
fdivrp
sti
iret
cld
mov
(bad)
out
pop
scas
(bad)
lock
ja
push
(bad)
out
(bad)
aaa
cld
lods
jle
pop
jg
lahf
cmc
retf
cmps
(bad)
jmp
jmp
(bad)
sar
dec
sti
fwait
inc
aad
retf
cli
pop
inc
(bad)
pop
cli
lahf
cld
pop
call
mov
jg
lahf
cmc
scas
push
jmp
in
hlt
ud0
adc
pop
repnz
jmp
in
hlt
daa
std
(bad)
jg
aas
clc
(bad)
(bad)
fwait
(bad)
fdivr
out
mov
jne
dec
dec
in
ret
(bad)
pop
clc
(bad)
call
add
std
repnz
in
in
pop
mov
(bad)
jge
fdivr
jmp
sahf
std
jle
shr
out
mov
sti
cmp
fimul
out
shr
cmp
data16
repz
inc
adc
(bad)
sahf
lahf
stc
std
call
out
jl
hlt
dec
jnp
test
mov
icebp
psubw
(bad)
jmp
mov
(bad)
idiv
in
jo
pop
cld
push
jmp
mov
sbb
pop
dec
dec
dec
xlat
std
(bad)
mov
repz
cmc
cmc
(bad)
lahf
(bad)
pop
dec
(bad)
cld
out
(bad)
(bad)
fwait
(bad)
std
test
mov
push
jg
pop
cld
cmp
aad
xlat
scas
icebp
aaa
(bad)
xchg
jg
ret
jg
(bad)
mov
pop
sti
pop
push
cmp
aas
icebp
pop
mov
std
mov
into
loope
pop
repz
cld
es
jle
inc
jge
sti
jg
lahf
idiv
call
clc
aaa
jmp
sti
(bad)
fdivr
mov
adc
icebp
pop
test
outs
repnz
and
mov
jle
addr16
pop
jg
pop
clc
sti
ds
ja
cmp
cmp
xor
lahf
(bad)
xchg
dec
jg
push
(bad)
mov
fwait
std
(bad)
mov
cld
aad
rol
jg
(bad)
aaa
jle
jg
(bad)
outs
stc
pop
std
movs
mov
std
aas
hlt
aaa
jge
dec
std
dec
call
(bad)
jl
mov
mov
lahf
clc
pop
inc
jg
aaa
std
rcr
(bad)
fstp
sti
idiv
aas
xor
mov
lahf
lock
aas
jecxz
stc
xlat
jle
fcomip
paddb
pop
(bad)
cmp
jmp
push
sti
mov
das
jle
(bad)
pop
jmp
mov
sub
jge
pop
std
leave
mov
(bad)
fstp
mov
add
std
stos
out
adc
jno
leave
rcr
jmp
call
dec
(bad)
out
fucomip
fs
repz
mov
(bad)
cmp
sbb
cmp
fstp
loopne
jle
mov
std
add
out
aaa
mov
std
fwait
push
cld
stos
retf
pop
clc
repnz
mov
mov
mov
shl
jg
outs
sti
daa
cld
sub
neg
aad
loope
jg
out
cmc
xchg
aas
jle
dec
push
cld
xchg
icebp
aaa
std
aad
jecxz
std
cmps
dec
outs
(bad)
daa
(bad)
clc
push
aad
cld
pop
cld
sbb
call
mov
in
(bad)
ror
jg
aas
clc
das
(bad)
sahf
push
dec
pop
std
or
das
cmp
repnz
aaa
cld
jns
std
outs
(bad)
jmp
icebp
iret
(bad)
das
push
jbe
fwait
pop
bnd
aas
std
push
push
sar
mov
hlt
jg
inc
inc
jg
(bad)
dec
mov
mov
sti
scas
icebp
(bad)
fidivr
jbe
push
mov
push
mov
dec
(bad)
jno
mov
das
(bad)
sahf
(bad)
in
mov
shr
lock
jle
push
mov
cld
sbb
cmp
jbe
cld
into
jg
outs
test
imul
scas
cmp
(bad)
jg
mov
popf
mov
(bad)
in
outs
std
out
jle
pop
sti
gs
(bad)
mov
cld
arpl
jg
mov
rcr
hlt
dec
(bad)
popf
mov
loope
mov
ja
sti
popf
aas
cli
popf
(bad)
pushf
aas
push
(bad)
(bad)
icebp
mov
push
daa
push
pop
jg
xchg
dec
out
cmp
clc
dec
jg
jg
lahf
(bad)
mov
into
lahf
cmc
das
(bad)
cmp
lahf
jmp
jmp
fcomip
outs
(bad)
mov
jne
pop
lahf
inc
int3
aas
clc
mov
pop
clc
(bad)
cld
fcos
clc
push
outs
std
fistp
ins
hlt
cmps
inc
push
cmps
(bad)
jg
lahf
clc
mov
idiv
lock
jmp
jg
jg
idiv
xchg
jg
fcomip
out
popa
call
(bad)
inc
dec
push
fcomip
addr16
dec
lahf
(bad)
das
std
xlat
(bad)
fmulp
cld
(bad)
call
pop
stc
aaa
cld
pop
jg
jg
cld
add
(bad)
sub
xlat
mov
(bad)
mov
lock
stc
mov
movs
(bad)
clc
mov
mov
(bad)
xlat
jg
psubw
jmp
(bad)
call
pop
jg
mov
inc
mov
jg
clc
sti
(bad)
jmp
icebp
mov
(bad)
jmp
int3
pop
std
mov
mov
cli
arpl
call
aaa
push
icebp
sbb
inc
jmp
add
retf
pop
jne
iret
std
dec
(bad)
jmp
in
inc
mov
cld
leave
push
jg
jle
iret
(bad)
in
jg
lahf
cli
clc
pop
inc
aas
stc
mov
out
clc
dec
jg
repz
clc
xlat
stc
xor
scas
clc
and
imul
clc
outs
sti
(bad)
call
xchg
daa
aas
xor
pop
(bad)
out
fild
stc
pop
dec
fcomip
mov
fstp
paddw
mov
out
jg
in
dec
fcomip
xlat
stc
jne
mov
(bad)
(bad)
movs
fbstp
gs
dec
pop
push
dec
(bad)
cli
jmp
loopne
cli
pop
(bad)
movs
(bad)
cld
lahf
sti
imul
jg
ret
mov
(bad)
mov
push
(bad)
fnstcw
jg
lahf
call
mov
pop
inc
leave
mov
mov
ud0
paddd
inc
(bad)
xlat
pop
(bad)
xchg
std
(bad)
push
out
push
in
fistp
cmp
inc
inc
pop
(bad)
fdivr
pop
cli
xor
sti
cmc
jg
pop
sub
fstp
cli
(bad)
clc
idiv
out
out
jg
fcos
repnz
std
mov
into
fwait
mov
(bad)
mov
jbe
rcr
jg
pop
cli
(bad)
push
call
jg
pop
cld
lahf
jg
fstp
xchg
aas
in
stc
sti
(bad)
out
mov
jg
xchg
jg
pop
xchg
(bad)
inc
mov
jbe
(bad)
jmp
scas
(bad)
and
mov
(bad)
scas
cld
jne
dec
sti
mov
pop
repz
dec
idiv
mov
(bad)
xlat
mov
mov
iret
std
push
stc
outs
cld
lahf
fdivrp
(bad)
mov
inc
mov
mov
inc
outs
repz
jmp
in
clc
hlt
into
outs
cmc
sub
test
jp
scas
sti
sti
(bad)
hlt
jg
(bad)
jmp
cld
movs
dec
jg
jmp
(bad)
sti
jg
pop
clc
sti
fnstsw
lds
mov
cld
mov
dec
xchg
jg
ja
pop
dec
(bad)
jle
sti
das
(bad)
mov
xchg
(bad)
jmp
pop
clc
out
std
inc
mov
das
jmp
paddw
xlat
std
std
out
(bad)
rcl
jmp
(bad)
sub
out
std
addr16
cmp
(bad)
dec
cld
test
xchg
pop
inc
cld
pop
jg
cli
neg
clc
jmp
call
xchg
aas
cli
dec
(bad)
test
lock
(bad)
std
fcomip
pop
(bad)
mov
int
in
aaa
clc
cld
aas
jmp
clc
iret
stc
dec
(bad)
mov
iret
jmp
in
aas
hlt
xchg
icebp
mov
jb
xchg
mov
(bad)
pop
mov
jge
outs
cdq
dec
fsubr
mov
(bad)
call
ftst
(bad)
idiv
lock
cld
lahf
jg
fstp
neg
call
sahf
mov
inc
pop
(bad)
mov
sbb
(bad)
adc
loopne
cli
or
call
jmp
cld
jne
jmp
in
iret
jg
sub
xchg
lahf
cli
xor
cmps
cs
mov
out
std
pop
cmp
or
jmp
out
std
dec
addr16
mov
mov
(bad)
mov
std
dec
jg
repnz
cld
aaa
dec
stc
aas
sti
aaa
inc
daa
jg
(bad)
aad
stc
fwait
jle
xlat
cli
add
neg
scas
fdivrp
mov
mov
iret
dec
mov
out
repnz
sti
std
jg
outs
std
das
push
icebp
shr
(bad)
jmp
xchg
xchg
dec
jle
fstp
mov
neg
scas
mov
out
idiv
adc
mov
jge
hlt
dec
clc
int
jle
in
(bad)
jle
jg
(bad)
jg
jp
fucom
jg
mov
pop
cld
icebp
jmp
pop
neg
mov
pop
mov
lahf
std
ud0
pop
mov
xlat
call
jmp
aas
cmc
out
cld
mov
icebp
std
aas
mov
jne
cmp
jle
mov
mov
inc
sti
pop
(bad)
jle
scas
clc
cmps
jle
jmp
mov
aas
call
cmc
jl
das
sti
repz
mov
jmp
out
ja
cld
cdq
jg
pop
icebp
imul
mov
cld
(bad)
aas
stc
inc
cld
in
loopne
mov
xchg
pop
jmp
pop
cld
lea
fcomip
das
(bad)
push
jg
aas
div
int3
jmp
addr16
std
mov
loopne
std
sar
cmps
push
jmp
repz
out
fild
std
icebp
aas
cld
in
(bad)
push
fidivr
lahf
mov
jg
mov
(bad)
fwait
push
in
(bad)
stos
jmp
mov
inc
(bad)
(bad)
in
push
cmp
imul
cld
outs
mov
(bad)
(bad)
pop
cmc
mov
in
dec
dec
lods
mov
(bad)
xchg
aas
hlt
mov
dec
fbstp
imul
mov
hlt
pop
mov
pop
dec
es
or
into
repz
aas
mov
jg
daa
mov
in
out
enter
inc
jg
pop
lock
(bad)
(bad)
std
cmp
ret
push
mov
aas
mov
std
aas
icebp
das
cwde
push
cdq
scas
into
mov
xchg
(bad)
inc
stc
(bad)
cmp
std
std
inc
jg
ja
(bad)
mov
lahf
sti
addr16
sti
inc
call
iret
push
call
lahf
test
clc
inc
mov
dec
(bad)
mov
in
lahf
repz
lods
jle
jg
out
daa
push
aas
sti
(bad)
inc
(bad)
ror
aas
jmp
cli
scas
jmp
pop
dec
stc
xlat
jle
jg
lahf
cld
pop
pop
mov
cld
(bad)
mov
std
mov
shr
pop
(bad)
mov
push
(bad)
stos
daa
inc
(bad)
mul
jg
lahf
cmc
addr16
idiv
outs
icebp
pop
inc
aas
cld
dec
cli
movd
mov
pop
mov
mov
jecxz
in
dec
mov
aad
fsin
rol
fdivrp
ins
pop
dec
shr
idiv
stos
lahf
pop
(bad)
fcomp
mov
jmp
ja
(bad)
pop
clc
sbb
out
out
(bad)
mov
in
aas
cld
mov
cmp
out
jg
fbstp
push
xchg
(bad)
es
mov
hlt
(bad)
clc
(bad)
clc
dec
call
aas
in
xlat
cld
mov
inc
icebp
fstp
cmp
sti
cld
xchg
cmc
jg
std
das
jg
lahf
jle
jnp
xchg
lea
(bad)
std
daa
(bad)
xchg
(bad)
rcr
push
jg
fstp
cld
(bad)
jle
popf
(bad)
xlat
(bad)
cdq
(bad)
loope
(bad)
mov
das
jg
imul
cmp
fldcw
std
scas
jg
lahf
cld
cmps
std
arpl
mov
jg
mov
inc
(bad)
idiv
(bad)
rcr
cli
jmp
sar
icebp
addr16
cmp
pop
cmc
ja
and
repz
(bad)
jnp
stc
pop
std
mov
mov
mov
cli
mov
lea
clc
fistp
idiv
(bad)
fnstcw
push
jg
mov
mov
(bad)
jmp
icebp
pop
std
fimul
stos
jg
idiv
inc
lock
jge
std
push
jg
fcomip
mov
fcomip
out
jne
repnz
repz
cld
int
icebp
pop
repz
push
out
cld
inc
jg
jg
cmps
std
mov
cmc
lahf
cli
imul
jmp
das
and
call
push
mov
dec
daa
jmp
ja
call
jae
(bad)
(bad)
sti
(bad)
ficomp
cmc
inc
cmp
out
jg
lahf
mov
cmps
dec
(bad)
inc
push
sar
lahf
out
sbb
xchg
call
stc
std
fcomi
psubw
lock
cli
mov
dec
aas
clc
popf
(bad)
xlat
(bad)
(bad)
push
jg
fnstsw
lahf
cld
in
div
(bad)
cld
cmps
ja
mov
jecxz
(bad)
jmp
aaa
jns
inc
jmp
pop
jmp
cld
pop
stc
scas
(bad)
mov
imul
retf
push
rcr
neg
std
(bad)
in
repz
std
xchg
xlat
mov
iret
xchg
(bad)
jb
iret
cli
lahf
jg
jmp
jg
mov
xchg
jg
jg
jmp
into
(bad)
mov
jae
mov
xchg
jg
mov
mov
call
icebp
loope
hlt
pop
jmp
fucomip
pop
cli
addr16
std
into
aad
repnz
out
clc
jmp
stc
push
pop
push
lahf
stc
sar
cmp
aad
hlt
lods
jmp
push
(bad)
ficomp
cld
ret
retf
fcomip
das
dec
call
jmp
hlt
pop
lahf
std
xchg
inc
pop
(bad)
aas
std
fwait
aas
clc
pop
(bad)
mov
in
mov
outs
std
inc
(bad)
call
fisubr
cld
repz
movs
dec
(bad)
xchg
fcomip
idiv
aaa
mov
jmp
aas
cld
xchg
dec
inc
into
scas
jmp
or
dec
repnz
neg
stc
sar
ds
in
(bad)
dec
xchg
(bad)
(bad)
(bad)
cld
cli
paddb
(bad)
in
xchg
(bad)
aam
cmc
dec
std
push
sti
lahf
jle
jmp
(bad)
mov
inc
jg
outs
sti
(bad)
leave
(bad)
jae
call
jg
outs
neg
(bad)
imul
call
jno
frstor
(bad)
jmp
pop
lock
std
add
jle
stc
out
cmp
sti
and
std
outs
idiv
xchg
std
shr
cld
ja
cmp
mov
dec
inc
mov
aaa
cld
xchg
mov
jl
psubb
jg
xchg
xchg
jle
aas
sti
outs
ds
(bad)
mov
jg
aas
jo
outs
std
or
cmp
mov
out
xor
jg
test
pop
mov
out
push
dec
out
out
lock
(bad)
inc
mov
ret
into
dec
jg
aaa
stc
jmp
fstp
in
test
ins
mov
mov
(bad)
scas
rep
aas
in
(bad)
mov
pop
cli
push
jg
jg
(bad)
std
in
ds
cmp
xchg
fucomip
iret
std
out
jmp
mov
cld
pop
jg
jg
loopne
dec
mov
out
(bad)
mov
cld
idiv
ror
jg
idiv
jnp
cld
in
leave
pop
sti
xchg
dec
push
xchg
(bad)
mov
loopne
loop
stc
out
(bad)
lods
mov
inc
mov
dec
mov
ud0
(bad)
pop
jg
icebp
xchg
mov
std
fistp
scas
std
push
popf
lods
(bad)
mov
(bad)
dec
out
lock
cld
arpl
dec
jge
pop
jg
addr16
mov
iret
inc
(bad)
dec
std
sub
stc
mov
repz
jmp
mov
cmc
pop
xor
daa
call
jg
aad
stc
pop
std
mov
mov
aad
in
jle
push
leave
outs
sar
outs
jg
out
mov
js
imul
cld
cmp
cmp
test
stc
ja
push
imul
(bad)
lahf
jg
scas
cli
lods
ja
mov
jg
fcomip
lahf
out
inc
inc
jecxz
jmp
inc
jg
jae
repnz
(bad)
aad
loopne
push
sti
add
cld
loop
in
inc
mov
out
scas
stc
iret
dec
fcomip
(bad)
stc
shr
in
call
dec
jg
jg
(bad)
(bad)
mov
(bad)
mov
outs
repz
pop
(bad)
fcmovbe
outs
test
jae
ret
xchg
push
(bad)
out
pop
cmp
fwait
dec
std
pop
jg
out
repnz
outs
std
mov
outs
pop
jl
lahf
clc
lods
(bad)
scas
aas
sti
retf
(bad)
xlat
cld
mov
call
std
inc
jg
(bad)
out
fnstsw
lahf
sti
pop
cld
clc
pop
repz
sti
(bad)
jmp
pop
cld
aad
out
fcomip
imul
mov
sub
inc
dec
icebp
scas
cli
xor
in
mov
repnz
ss
neg
repz
std
loope
leave
lahf
std
daa
std
dec
jmp
call
(bad)
jmp
fistp
(bad)
addr16
mov
icebp
leave
jg
out
jge
aaa
stc
int
jmp
fstp
jecxz
(bad)
sti
(bad)
movs
mov
dec
ds
iret
scas
dec
(bad)
mov
repz
icebp
pop
clc
outs
jmp
fstsw
scas
cld
lds
pop
cli
leave
mov
inc
cld
into
mov
cld
pop
mov
jg
dec
cld
pop
(bad)
in
scas
xor
and
sti
pop
pushf
jmp
dec
dec
shr
std
push
push
outs
cmp
imul
jg
retf
mov
call
inc
repz
pop
std
ja
(bad)
aas
cli
scas
cmp
fcomip
push
jg
outs
call
mov
imul
mov
jle
fcomip
psubb
sahf
cld
gs
cmp
mov
stc
lahf
cli
sar
dec
inc
jg
paddb
pop
jg
lahf
repnz
aas
out
pop
jns
imul
push
mov
jg
pop
sar
mov
sti
xchg
cld
add
mov
jg
mov
stos
jmp
mov
mov
mov
mov
scas
stc
aas
jmp
mov
iret
inc
push
(bad)
cdq
pop
jecxz
jmp
ret
in
outs
icebp
(bad)
inc
inc
scas
sti
xor
jmp
lock
cld
ds
shr
jg
mov
repnz
cmp
mov
pop
jl
dec
aas
repz
daa
dec
jle
stos
jg
iret
(bad)
sbb
addr16
fcomip
cmps
std
outs
out
shl
jg
lahf
(bad)
addr16
jg
dec
mov
scas
lahf
pushf
cld
mov
(bad)
cmp
dec
(bad)
clc
mov
fucomip
pop
call
(bad)
jg
idiv
mov
ja
jge
sbb
fucomip
paddw
stc
outs
ss
inc
mov
jmp
jg
pop
lock
jmp
out
lahf
(bad)
jnp
idiv
std
dec
jg
push
mov
fdivr
popf
push
in
cli
pop
(bad)
iret
push
fidiv
retf
fucomip
(bad)
pop
jnp
iret
call
stos
call
(bad)
jg
outs
(bad)
(bad)
int
mov
mov
push
repnz
fcomp
(bad)
inc
mov
mov
outs
cli
sbb
cmps
jg
out
lock
fdivrp
inc
mov
jg
lahf
repz
icebp
mov
cmp
std
push
std
dec
jg
pop
jmp
(bad)
popf
outs
jle
(bad)
xlat
jge
fwait
pop
cld
mov
aam
cld
push
mov
(bad)
mov
fisubr
(bad)
jle
test
(bad)
fidivr
mov
dec
(bad)
(bad)
mov
sar
jmp
mov
aas
hlt
mov
or
(bad)
fidivr
scas
lods
fistp
aas
jmp
in
xlat
cld
cmp
pop
cmc
paddb
mov
idiv
sub
mov
pop
std
sar
cli
mov
hlt
xlat
cwde
mov
(bad)
iret
stc
outs
(bad)
(bad)
(bad)
cli
aaa
dec
(bad)
inc
(bad)
jmp
out
(bad)
jb
xlat
jle
clc
aaa
sti
or
outs
bnd
cmps
mov
cli
mov
inc
add
jle
cmc
lds
xchg
mov
fnstcw
jmp
(bad)
jg
pop
div
(bad)
inc
leave
outs
mov
(bad)
fstp
das
(bad)
push
jmp
mov
push
in
jecxz
div
(bad)
stos
inc
(bad)
ud0
(bad)
lahf
rep
cld
push
jg
pop
cmc
jmp
xor
(bad)
jge
int3
(bad)
inc
(bad)
jns
hlt
jg
ja
out
jg
(bad)
out
stc
cmp
call
aas
repz
cli
inc
(bad)
(bad)
clc
fcomip
out
push
jg
(bad)
cli
cmps
std
lods
jg
mov
(bad)
fistp
icebp
(bad)
(bad)
ins
fstp
repnz
cld
sbb
stc
outs
(bad)
cld
mov
jmp
mov
push
sub
lock
jg
ud0
aas
sti
iret
call
out
(bad)
jmp
cli
fdivrp
hlt
lahf
(bad)
adc
out
stc
outs
std
mov
(bad)
(bad)
std
jg
repnz
push
inc
push
(bad)
xchg
jg
aas
sti
aaa
(bad)
lahf
jg
fcomip
out
test
enter
in
cmps
inc
jle
outs
jge
pop
sbb
or
rcr
jmp
std
xor
daa
(bad)
out
(bad)
repz
stos
idiv
nop
mov
dec
popf
std
xchg
int
not
std
push
(bad)
in
out
repz
(bad)
loopne
cld
addr16
icebp
pop
sti
aas
dec
out
cld
fidivr
cs
clc
mov
idiv
push
jg
push
xchg
pop
scas
jle
rcr
push
std
into
iret
(bad)
mov
stc
fcmovne
mov
icebp
jg
sti
jle
cmps
jg
iret
(bad)
jmp
mov
(bad)
jle
jle
xchg
mov
stos
aas
repnz
clc
into
aas
lahf
std
sahf
mov
pop
test
sti
mov
inc
jg
(bad)
iret
cld
add
cld
pop
cld
(bad)
mov
xlat
daa
dec
dec
(bad)
stc
bnd
idiv
loop
cld
or
cmps
fcomip
lahf
sti
in
scas
div
mov
repz
(bad)
jmp
sar
jmp
(bad)
jbe
fsubr
repnz
jmp
mov
mov
enter
paddd
cld
aaa
inc
pop
hlt
push
push
jnp
in
icebp
idiv
push
push
scas
jnp
sti
int3
(bad)
cli
lahf
clc
ins
sti
paddw
outs
cli
mov
lahf
std
imul
mov
(bad)
jmp
sar
cli
(bad)
in
(bad)
das
push
(bad)
call
fistp
pushf
std
xor
std
pop
repnz
adc
out
jmp
aad
sti
aaa
cld
das
mov
cmp
lds
jmp
mov
hlt
jmp
jnp
test
cmp
jmp
mov
jg
iret
(bad)
pop
fdivrp
movsx
stc
fistp
arpl
aas
loop
(bad)
mov
mov
outs
repnz
cmps
in
ins
repnz
push
cmc
std
in
cwde
std
movq
outs
jne
fstp
sbb
pop
(bad)
jmp
jg
mov
sahf
mov
int
pop
jb
cmp
(bad)
(bad)
out
push
idiv
cld
clc
mov
mov
(bad)
jmp
jg
sub
mov
sar
cld
mov
(bad)
clc
mov
dec
popf
jbe
(bad)
fstp
push
mov
jg
(bad)
xlat
jmp
pop
call
(bad)
fdivr
repnz
fcomip
scas
sti
pop
jg
aas
loop
jmp
ds
ret
(bad)
clc
aas
jmp
clc
fst
jmp
lahf
icebp
pop
(bad)
jbe
lock
jmp
mov
scas
cmp
mov
in
push
das
clc
(bad)
sar
dec
imul
(bad)
outs
jns
out
jg
scas
cli
pop
das
jg
(bad)
scas
cli
jae
mov
dec
(bad)
jmp
(bad)
out
dec
cmc
pop
jg
pop
repz
xlat
cli
in
(bad)
movs
mov
push
jg
pop
inc
dec
jns
mov
jl
jg
shr
mov
lahf
clc
repnz
jg
scas
jns
paddb
retf
cmc
jg
pop
std
arpl
out
neg
jg
fldcw
iret
(bad)
fsubp
(bad)
gs
out
lock
ja
(bad)
out
int3
pop
imul
clc
cmps
jmp
out
cld
mov
hlt
ja
mov
jg
das
dec
repz
jmp
mov
std
(bad)
ja
stos
jg
jmp
sti
dec
call
push
mov
aas
out
ja
std
jecxz
std
fcomip
(bad)
pop
cld
sub
outs
clc
clc
mov
aas
loopne
(bad)
outs
not
in
mov
mov
jg
pop
lock
std
ja
test
sahf
std
ret
jg
cmp
(bad)
std
aas
std
mov
inc
jg
pop
mov
(bad)
jmp
pop
jle
(bad)
pop
(bad)
gs
cmc
mov
cmp
call
(bad)
pop
aas
repz
inc
loopne
std
iret
jge
imul
stos
(bad)
idiv
scas
ja
aam
(bad)
fistp
fbld
pushf
std
loope
(bad)
fstp
icebp
pop
dec
(bad)
cdq
mov
std
sti
shl
pcmpeqd
out
cli
sub
aas
(bad)
sub
jmp
std
gs
stos
fldcw
cld
lods
(bad)
jmp
mov
jecxz
aas
clc
retf
inc
jecxz
clc
scas
clc
stos
(bad)
scas
out
(bad)
icebp
jg
sar
out
mov
cli
sti
mov
(bad)
clc
(bad)
jmp
mov
cli
mov
outs
stc
in
iret
sti
(bad)
repnz
lods
pop
repz
mov
cmc
idiv
mov
call
jmp
into
pop
inc
mov
pop
mov
(bad)
jp
shr
jg
mov
cmc
das
sti
xor
(bad)
in
(bad)
out
pop
std
addr16
ret
jg
das
stc
pop
(bad)
sar
stc
dec
mov
out
js
ja
cmp
in
out
fld
(bad)
stc
call
(bad)
jnp
and
shl
jle
(bad)
cli
psubd
push
jg
xchg
call
mov
(bad)
mov
scas
push
out
pop
cld
push
addr16
aas
xchg
cld
or
sbb
in
das
jns
inc
cld
jp
shr
aas
cld
cmp
dec
movd
out
sti
cmps
(bad)
fwait
jg
xlat
std
fidivr
jg
fistp
sub
in
aaa
cli
in
(bad)
clc
(bad)
clc
das
cmp
or
pop
cli
sbb
lahf
sti
sub
mov
or
std
sbb
xchg
mov
test
out
sub
inc
call
push
mov
scas
xchg
aas
stc
das
cli
dec
call
retf
lahf
mov
xchg
(bad)
xchg
jg
mov
lahf
cld
ja
scas
aas
idiv
out
iret
cld
lahf
into
call
out
cmp
out
dec
ficomp
out
mul
xor
neg
outs
icebp
pop
cld
cmc
mov
mov
stc
jecxz
fdivr
sar
sar
clc
out
js
cld
idiv
clc
pop
mov
(bad)
jmp
popf
leave
pop
repnz
scas
(bad)
js
stos
sar
jg
outs
sti
addr16
aas
mov
cli
test
into
(bad)
in
ja
repz
jmp
jmp
jmp
(bad)
(bad)
(bad)
lahf
xchg
std
jbe
shr
lahf
cld
idiv
in
jg
fstp
(bad)
(bad)
das
cli
in
lahf
cli
cdq
aas
repnz
xor
(bad)
stos
push
(bad)
cli
mov
xor
fdivrp
std
out
(bad)
xor
cmp
repz
mov
cld
cs
cmc
ja
ja
into
mov
jbe
mov
push
dec
fucomip
jmp
pop
repz
(bad)
pop
inc
idiv
std
(bad)
cmps
jg
lahf
cld
pop
inc
push
pop
std
paddb
(bad)
cmps
(bad)
jmp
(bad)
jg
les
loopne
mov
gs
std
test
in
div
lahf
sti
out
std
mov
in
cmc
mov
jg
push
cmp
jg
fnstsw
jmp
int
icebp
mov
jmp
std
jecxz
(bad)
fbstp
dec
inc
jg
(bad)
pop
(bad)
(bad)
scas
cli
clc
pop
clc
jmp
mov
outs
out
lock
xor
lahf
lock
mov
aaa
clc
pop
scas
scas
(bad)
out
jg
aas
cld
hlt
jecxz
not
cld
pop
mov
pop
inc
mov
ja
fmulp
(bad)
fidivr
ror
fcomip
(bad)
sti
fnstsw
(bad)
outs
jle
aas
cmc
sti
mov
out
stc
mov
outs
pushf
(bad)
popf
push
outs
cmc
sbb
jle
retf
cli
(bad)
ins
push
(bad)
paddd
add
mov
pop
idiv
jle
mov
std
fs
sti
cld
call
mov
sti
mov
fwait
stos
mov
imul
jg
in
mov
div
fild
jp
jl
imul
pop
mov
fisubr
cli
ins
idiv
(bad)
cld
cli
lahf
mov
push
iret
cld
mov
ret
pop
std
inc
dec
retf
jle
jmp
cmc
mov
stc
mov
xchg
(bad)
mov
sti
arpl
jmp
cmc
retf
(bad)
jg
std
jmp
ja
dec
in
push
jnp
mov
sar
(bad)
(bad)
aas
(bad)
mov
pop
hlt
lods
jg
(bad)
xor
call
in
pop
cld
aas
dec
mov
aas
std
pop
cli
aaa
(bad)
mov
cli
and
cld
das
dec
jg
iret
int3
(bad)
mov
jmp
aas
idiv
dec
jg
(bad)
jmp
cmp
mov
(bad)
cli
lahf
cld
cmps
popf
lods
(bad)
fdivrp
jecxz
(bad)
fucomi
jg
das
clc
pop
jg
(bad)
stc
jmp
iret
dec
jle
(bad)
sti
scas
dec
mov
pop
mov
jnp
mov
jbe
bnd
mov
jno
lahf
(bad)
jmp
fcomp
idiv
jg
icebp
lahf
jno
sbb
ret
lds
(bad)
xor
mov
jge
xchg
pop
cli
jnp
mov
mov
mov
jne
cmc
aas
clc
dec
clc
pop
mov
jg
pop
mov
mov
std
cmps
mov
cmp
push
repz
cld
mov
sti
call
scas
sti
icebp
mov
xor
mov
call
pop
std
xchg
pop
std
sar
out
clc
daa
mov
mov
(bad)
repz
lahf
(bad)
aas
jg
jg
pop
clc
popf
(bad)
fnstsw
leave
aas
std
sti
std
lahf
das
jmp
mov
enter
jle
cmc
idiv
cli
jmp
xlat
pop
cdq
(bad)
mov
in
jg
std
pop
(bad)
neg
std
popa
mov
mov
std
push
mov
std
xchg
mov
out
jmp
xchg
cld
mov
(bad)
mov
mov
fld
xchg
das
inc
std
jg
aad
cmc
aaa
std
scas
int
dec
std
sub
sbb
scas
push
jg
jne
(bad)
jg
aas
cli
sub
(bad)
cli
fwait
(bad)
xchg
aas
out
aas
(bad)
lods
jle
mov
(bad)
mov
std
idiv
jle
aas
cld
outs
cld
mov
cld
push
mov
aaa
pop
std
scas
(bad)
cli
aad
jmp
jmp
(bad)
xchg
(bad)
idiv
dec
jg
aaa
clc
gs
xchg
in
std
ret
aas
dec
sti
or
inc
jle
out
idiv
sti
jg
pop
cld
in
stos
das
jle
push
scas
(bad)
mov
aas
(bad)
xchg
aas
jmp
(bad)
jmp
jle
out
cli
sub
cli
daa
(bad)
jecxz
(bad)
mov
mov
inc
mov
jg
pop
mov
loopne
cli
loop
(bad)
ret
jle
cmps
jg
outs
cmc
imul
xlat
jg
dec
in
(bad)
and
fdivrp
outs
dec
jmp
mov
jne
(bad)
outs
mov
jge
cmp
(bad)
jmp
cmp
movq
dec
stc
ins
mov
aas
out
pop
jg
(bad)
jge
(bad)
(bad)
icebp
cli
(bad)
scas
(bad)
jnp
enter
aas
(bad)
scas
inc
mov
cli
dec
clc
or
cmp
aad
mul
std
out
mov
(bad)
inc
call
pop
call
repnz
sti
paddd
out
(bad)
loope
(bad)
jmp
sar
clc
(bad)
cli
sar
jmp
mov
lahf
std
out
(bad)
aaa
inc
aas
std
addr16
in
pop
pop
dec
(bad)
shl
stc
outs
(bad)
aam
repnz
inc
jle
mov
jmp
dec
jmp
aas
sti
outs
sti
out
out
jg
(bad)
in
out
sub
mov
aas
(bad)
(bad)
dec
mov
push
scas
std
iret
mov
pop
(bad)
stos
jg
lahf
jo
hlt
sub
cld
sti
(bad)
hlt
lahf
cmp
cmp
xlat
mov
(bad)
das
jmp
ja
icebp
fstp
stc
jnp
aas
cmc
(bad)
cmps
(bad)
cmc
mov
jg
(bad)
clc
mov
sbb
stc
or
mov
notrack
(bad)
cld
jmp
jp
call
jg
inc
push
icebp
jnp
(bad)
call
aas
(bad)
aas
std
push
mov
fstp
(bad)
aaa
cld
(bad)
(bad)
mov
out
(bad)
xchg
push
jnp
call
cld
scas
cli
scas
sahf
std
jne
inc
pop
fistp
pop
cld
aaa
jg
pop
ds
cmps
jle
fild
(bad)
jg
lds
icebp
out
sbb
jbe
rcr
lahf
lods
jmp
sub
out
aas
sti
lahf
std
lahf
(bad)
mov
out
movsx
xor
das
cld
sti
(bad)
jg
sar
(bad)
cmp
dec
call
aas
imul
mov
fstp
jg
jg
cld
cmps
(bad)
stos
mov
add
(bad)
cld
inc
jg
stos
aas
in
stc
sar
inc
mov
(bad)
(bad)
mov
jg
lahf
stc
daa
cld
stos
inc
pop
cmc
(bad)
push
mov
jle
jg
mov
push
jg
xchg
push
psubd
xchg
outs
mov
jg
dec
cld
jae
cli
lds
mov
loop
stc
(bad)
mov
enter
(bad)
aaa
jg
outs
mul
idiv
pop
jmp
stc
addr16
stc
mov
inc
popf
dec
(bad)
ins
icebp
jnp
std
aam
cmc
iret
lods
ds
or
lock
mov
jle
jle
pop
call
push
scas
jg
push
outs
cld
int
ds
mov
mov
cmp
pop
jle
jg
in
outs
jge
iret
dec
outs
sti
sbb
(bad)
repz
jg
out
stc
ja
cmp
(bad)
sar
js
dec
into
mov
cmps
aas
clc
pop
das
idiv
mov
in
xchg
ja
retf
cmps
fistp
std
xor
mov
stc
aas
mov
in
idiv
out
repnz
cmp
clc
mov
out
idiv
mov
(bad)
xchg
popf
cmc
dec
std
pop
dec
(bad)
cmps
jmp
pop
cld
out
(bad)
sbb
leave
jg
pop
repnz
jecxz
(bad)
idiv
pop
jmp
hlt
cli
das
(bad)
pop
(bad)
std
stos
mov
fstp
pop
mov
mov
cld
stos
inc
aas
cmc
paddusb
ret
(bad)
in
repz
cld
sbb
neg
repz
jmp
(bad)
mov
loopne
in
(bad)
std
movs
jg
call
(bad)
sar
repz
xchg
inc
(bad)
jne
(bad)
aas
dec
dec
pop
stc
(bad)
cld
stc
(bad)
fistp
test
cli
jmp
jl
psubd
outs
cld
mov
std
outs
mov
cmp
jmp
popf
(bad)
jmp
scas
(bad)
(bad)
cld
or
idiv
xor
(bad)
pop
pushf
std
mov
pop
cld
jecxz
xlat
leave
fcomip
in
out
cld
push
jg
(bad)
cld
outs
ds
std
scas
ds
push
(bad)
pop
pop
jg
out
cld
out
cld
(bad)
out
repnz
fbstp
aad
cmc
repnz
cld
mov
retf
lahf
(bad)
daa
div
inc
(bad)
in
jg
mov
icebp
ja
jnp
jmp
sahf
mov
aas
repnz
das
mov
fidivr
clc
mov
mov
ret
clc
pop
inc
jg
fcomip
icebp
outs
lock
jnp
fnstcw
idiv
sti
mov
xlat
inc
std
lahf
neg
movs
mov
push
out
dec
jg
(bad)
out
stc
adc
mov
test
sti
(bad)
push
mov
lahf
stc
popf
xchg
aas
jns
psubb
xlat
clc
popf
(bad)
mov
(bad)
mov
mov
std
mul
jmp
cli
cmp
mov
in
lahf
clc
xor
xchg
(bad)
std
scas
jge
push
mov
jg
out
dec
jnp
sub
jecxz
out
inc
jg
ret
mov
(bad)
out
sti
jg
ret
jle
(bad)
std
ud0
jmp
cli
pop
dec
jmp
das
(bad)
out
(bad)
fcmovu
jecxz
cli
add
repz
(bad)
idiv
(bad)
movs
(bad)
jmp
aas
stc
pop
cli
jae
sub
stos
clc
jmp
mov
cmps
dec
in
repz
(bad)
sbb
std
pop
(bad)
and
imul
(bad)
clc
mov
(bad)
fdivr
loop
pop
mov
jnp
cmp
cld
das
std
out
leave
aas
cmc
setge
and
scas
jge
idiv
jmp
(bad)
fwait
lahf
std
scas
scas
pop
cld
movs
push
cmc
pop
std
iret
std
ss
mov
cli
xor
jmp
stc
lds
dec
jle
pop
cli
das
jg
push
(bad)
ds
(bad)
jg
cmps
jmp
fucomip
pop
cli
daa
jle
fcomip
call
cld
(bad)
outs
repz
cld
int3
outs
repnz
test
(bad)
imul
idiv
std
icebp
pop
clc
repnz
(bad)
rol
mov
jbe
ret
xchg
mov
jle
pop
idiv
mov
sub
sahf
hlt
aas
stc
dec
push
(bad)
into
das
cli
xchg
jmp
pop
(bad)
pop
cld
(bad)
(bad)
jmp
cli
pop
mov
aas
mul
(bad)
cld
mov
sti
add
jg
mov
mov
leave
pop
cli
arpl
jge
mov
push
(bad)
fldcw
cli
sub
idiv
mov
fcomip
mov
pop
cmc
mov
icebp
paddd
aas
jp
(bad)
push
push
call
aas
cmc
pop
cli
jmp
int
(bad)
push
std
popa
call
pop
jne
paddd
mov
(bad)
pop
cld
or
pushf
(bad)
jmp
lock
pop
std
lahf
std
cdq
jg
pop
sti
mov
mov
mov
(bad)
lods
packuswb
mov
(bad)
fnstsw
cli
call
test
(bad)
fcmovnb
pop
lock
jg
daa
(bad)
cmc
jg
ja
aad
jecxz
cld
cmp
push
aaa
sti
popf
(bad)
mov
jmp
repnz
ds
jmp
std
xchg
std
cli
aas
cli
mov
sahf
aad
enter
outs
sahf
inc
jle
ja
shl
(bad)
mov
into
aas
jne
aaa
std
(bad)
jg
xchg
(bad)
jne
loope
repnz
(bad)
aam
cld
out
out
mov
loop
sti
(bad)
jg
mov
inc
mov
fxch
cld
into
out
inc
ret
addr16
cli
push
(bad)
cld
pop
jecxz
(bad)
mov
jmp
mov
in
fistp
push
int
repz
jecxz
cli
mov
scas
loop
(bad)
jmp
jmp
mov
repnz
cld
dec
aas
dec
ds
loope
loope
clc
daa
(bad)
in
in
cmp
pop
repnz
std
xchg
(bad)
fmul
jg
push
std
sub
call
jmp
mov
ja
mov
in
mov
(bad)
out
movs
in
out
call
sti
aas
neg
mov
aaa
(bad)
idiv
icebp
lahf
cli
cmp
into
ror
jle
(bad)
pop
cld
aaa
cld
jno
sti
outs
cmc
pop
cld
sub
neg
dec
cld
in
std
test
jecxz
pop
repnz
iret
das
clc
xor
push
(bad)
aaa
jle
pop
sti
push
jg
mov
jmp
(bad)
lods
push
aaa
(bad)
test
cmc
(bad)
clc
aas
call
ror
stc
pop
jle
leave
jg
repnz
(bad)
popa
aas
dec
sti
mov
jmp
pop
stc
mov
adc
(bad)
ins
(bad)
repz
aas
in
call
sahf
lods
cmc
fcomip
sbb
lahf
cld
pop
dec
dec
std
mov
cld
outs
(bad)
retf
call
jg
jg
or
fidivr
repnz
jle
cld
inc
jle
addr16
iret
cld
pop
addr16
clc
sti
(bad)
cmp
loope
hlt
mov
mov
pop
std
sti
call
imul
pop
(bad)
jmp
xlat
mov
cmp
mov
jg
std
gs
int3
(bad)
idiv
in
lahf
clc
cmc
repnz
aaa
pop
std
xchg
pop
push
dec
(bad)
fiadd
stc
adc
jle
out
pop
std
in
stc
xchg
call
fsubrp
idiv
aaa
retf
mov
out
(bad)
xchg
out
(bad)
cdq
stos
(bad)
in
lahf
std
mov
(bad)
(bad)
mov
adc
in
das
out
xchg
mov
cld
in
idiv
sahf
jg
mov
cli
into
addr16
jmp
scas
stc
cmps
movs
jg
(bad)
outs
ins
(bad)
(bad)
mov
jg
scas
sti
lahf
das
call
std
out
std
popa
mov
jg
fstp
jg
out
imul
jmp
retf
paddd
out
push
(bad)
js
jmp
mov
sub
in
std
cmc
mov
mov
neg
(bad)
sub
jle
mov
sub
pop
clc
jmp
hlt
jg
in
ins
(bad)
lods
aas
jmp
cld
xor
mov
loopne
std
dec
call
std
sub
idiv
mov
xchg
adc
(bad)
idiv
stos
jg
fcomip
inc
cld
inc
mov
inc
jmp
xchg
pop
aam
(bad)
(bad)
nop
cmc
pop
hlt
mov
sahf
mov
dec
jmp
jmp
(bad)
jmp
idiv
and
(bad)
jnp
cld
ja
stc
ja
mov
(bad)
bnd
pop
std
movsx
cmc
mov
(bad)
sti
(bad)
jmp
movs
mov
xchg
(bad)
std
in
pop
call
lahf
inc
call
repnz
iret
dec
ja
jecxz
scas
(bad)
mov
inc
call
jg
jg
mov
mov
sar
neg
fcos
(bad)
xchg
(bad)
stc
inc
pop
clc
pop
and
call
dec
jmp
mov
jle
mov
aas
(bad)
stc
jg
(bad)
std
fisttp
lahf
std
lods
(bad)
cli
mov
pop
mov
cld
mov
mov
(bad)
das
push
popf
aas
out
pop
stc
mov
stos
aas
icebp
(bad)
cli
xchg
dec
jg
lahf
idiv
test
hlt
in
(bad)
std
pop
mov
mov
cld
ins
push
out
test
jg
outs
stc
ja
inc
call
dec
cld
xchg
lahf
icebp
jmp
lds
repz
stc
(bad)
push
pop
jg
(bad)
jmp
cld
add
ret
mov
iret
(bad)
mov
jg
(bad)
or
iret
clc
sti
dec
cld
idiv
dec
dec
mov
jg
mov
jg
mov
aad
jmp
cmp
repnz
jbe
out
cdq
mov
inc
mov
pop
clc
sub
aas
in
std
and
mov
pop
inc
(bad)
mov
cli
mov
fstp
stc
daa
(bad)
sbb
hlt
(bad)
jle
imul
iret
mov
jg
addr16
scas
mov
(bad)
imul
cli
cmp
jmp
loopne
jmp
cld
ja
fwait
jle
aas
std
dec
(bad)
mov
repz
stc
addr16
ds
cli
cmc
push
fistp
(bad)
std
push
(bad)
(bad)
test
hlt
lahf
cld
lahf
(bad)
ss
out
cli
xor
mov
sti
mov
movzx
das
sti
mov
hlt
(bad)
cmp
jmp
cmp
imul
lahf
hlt
or
mov
stc
sti
std
ror
das
cld
das
xchg
mov
pop
clc
outs
cld
ss
fsubrp
pop
(bad)
(bad)
retf
scas
(bad)
mov
iret
cli
sub
clc
jecxz
std
cmc
mov
jbe
fsubr
mov
icebp
fistp
aas
(bad)
addr16
mov
mov
aaa
std
(bad)
(bad)
call
sar
(bad)
pop
clc
sar
stc
ja
mov
mov
loopne
stc
ret
jmp
fucomip
idiv
xchg
push
jno
mov
mov
stc
cmp
das
fdivr
dec
(bad)
fidivr
(bad)
(bad)
addr16
cmp
pop
std
leave
xchg
call
sbb
dec
jg
pop
cli
std
jg
push
jle
xchg
push
jg
aas
(bad)
jmp
push
mov
dec
jmp
mov
fcomip
shr
sti
cs
xchg
jg
sti
iret
sar
(bad)
clc
pop
inc
inc
xchg
sti
dec
xchg
fucomip
pop
(bad)
cdq
ja
out
lahf
xor
repnz
out
mov
pop
std
mov
out
jg
cld
stc
stc
das
cli
cdq
fistp
pop
cld
cmp
div
std
std
pop
inc
jg
(bad)
pop
std
or
stc
aas
clc
mov
dec
mov
jmp
out
pop
jmp
(bad)
std
in
jg
(bad)
jle
inc
(bad)
fdivr
imul
fucomip
int
std
icebp
pop
jle
scas
jnp
in
pop
out
pop
(bad)
xchg
(bad)
(bad)
(bad)
cmps
inc
mov
jg
fucomp
aas
cld
dec
(bad)
sahf
pop
jmp
push
(bad)
repz
jg
aaa
jg
out
cld
test
sti
cld
mov
(bad)
pop
repnz
icebp
ud0
push
dec
aas
std
cmc
jg
aas
mov
push
jle
clc
out
sti
fwait
das
dec
(bad)
in
pop
std
test
pop
(bad)
pop
cld
cmps
inc
jecxz
sub
test
push
sar
cmc
mov
sub
cmc
call
std
movs
jg
push
jg
int3
inc
jg
aas
test
xor
mov
ja
sub
sti
aas
mov
pop
push
push
das
mov
out
fwait
lahf
clc
dec
jg
pop
sar
dec
mov
aas
inc
mov
cld
sar
cld
idiv
xor
jle
cmp
mov
repnz
aas
out
dec
mov
dec
fcomip
out
dec
dec
inc
aas
loope
pop
lock
sbb
ins
jmp
push
jg
(bad)
fbstp
(bad)
std
sbb
ja
mov
clc
scas
stc
aas
jg
jg
dec
cli
repz
aad
mov
aas
cld
gs
lahf
cli
pop
cld
dec
jmp
iret
cld
push
call
pop
xor
int
out
lahf
pop
mov
(bad)
retf
jg
jg
push
cld
inc
jg
pop
sti
xlat
(bad)
and
cli
scas
std
iret
dec
xchg
jmp
loopne
call
xchg
jg
push
std
pop
jg
aas
div
(bad)
jmp
mov
mov
sahf
inc
mov
loopne
push
(bad)
out
mov
mov
(bad)
ficomp
sbb
fwait
(bad)
clc
pop
cli
out
mov
jecxz
(bad)
push
inc
sti
pop
jmp
jmp
out
std
gs
jmp
div
(bad)
scas
mov
aad
repz
call
out
cld
inc
pop
std
cmp
stc
(bad)
std
(bad)
ficomp
jg
lahf
std
scas
jg
(bad)
scas
fwait
(bad)
jge
clc
pop
hlt
mov
pop
cld
mov
pop
icebp
lahf
pop
cld
(bad)
call
outs
hlt
scas
xor
mov
cli
jnp
rcr
out
std
cmp
cld
aas
stc
(bad)
dec
dec
std
idiv
cld
pop
(bad)
pop
std
idiv
push
jle
popf
fcomip
jmp
aad
mov
dec
cmps
xchg
aas
stc
in
out
idiv
movs
mov
mov
mov
std
out
jle
out
mov
std
das
clc
ins
jg
jmp
sti
push
scas
out
in
push
shr
jl
xchg
retf
ja
sti
std
(bad)
out
cld
fwait
cmp
add
push
aaa
enter
std
int
jmp
movs
std
xor
inc
fistp
repnz
popf
(bad)
(bad)
mov
idiv
dec
into
(bad)
test
aas
out
std
sub
out
mov
(bad)
in
dec
stc
aaa
dec
sti
fucomip
(bad)
in
aad
xor
and
lods
jle
jmp
pop
cld
icebp
pop
out
sti
jge
mov
xlat
jg
outs
clc
int
jmp
lahf
xor
cld
sti
dec
lahf
cli
xchg
jg
xlat
(bad)
fisubr
mov
fnstsw
mov
idiv
jecxz
clc
and
daa
inc
in
xchg
leave
scas
ja
(bad)
cld
mov
jg
rep
cld
xor
cld
idiv
out
clc
jne
jne
in
push
xlat
jmp
imul
out
test
div
sti
in
ficomp
pop
(bad)
imul
jg
(bad)
imul
jg
jmp
(bad)
inc
out
sti
pop
cld
xchg
call
pop
cmp
mov
sahf
aas
repnz
aas
ds
clc
ja
jl
retf
(bad)
outs
cld
xchg
jge
fisttp
mov
(bad)
(bad)
pop
cld
ror
jg
aas
jecxz
pop
std
aas
(bad)
out
out
repz
xchg
jg
jg
ja
dec
jg
out
mov
mov
adc
mov
mov
dec
pop
cli
pop
dec
jg
aas
imul
cld
popf
dec
mov
int3
mov
sti
ud0
inc
lahf
jl
dec
call
sti
lahf
std
sbb
fwait
push
jg
pop
dec
jg
(bad)
lahf
std
and
(bad)
repz
mov
mov
pop
(bad)
hlt
mov
std
xchg
(bad)
jmp
std
aas
repz
clc
inc
jg
mov
fdivr
inc
idiv
(bad)
stc
xchg
sar
lahf
hlt
daa
pop
(bad)
in
idiv
mov
(bad)
mov
(bad)
jg
push
in
(bad)
mov
jns
jecxz
out
sti
xlat
mov
loope
clc
hlt
aas
cli
adc
jmp
(bad)
(bad)
pop
(bad)
jmp
jle
pop
neg
ds
cmp
and
and
aas
in
pop
(bad)
jbe
jg
aad
cli
iret
cld
inc
scas
(bad)
xchg
lahf
(bad)
loop
loope
je
push
mov
jg
aas
jmp
inc
mov
outs
(bad)
fldenv
jg
out
bnd
std
lods
push
mov
jle
mov
repz
in
(bad)
mov
fucomip
xchg
std
in
pop
dec
(bad)
xchg
(bad)
(bad)
jg
aas
cld
(bad)
(bad)
stc
mov
pop
mov
mov
cld
or
xchg
jg
jg
push
std
(bad)
ja
out
(bad)
das
cli
dec
dec
lahf
push
push
scas
cmc
mov
dec
(bad)
push
mov
jmp
push
jg
out
(bad)
aas
hlt
stc
(bad)
pop
(bad)
sub
fwait
(bad)
jp
repz
idiv
(bad)
cmc
push
jmp
loope
aas
in
scas
clc
out
jmp
loop
(bad)
fnstsw
(bad)
xor
(bad)
mov
dec
retf
outs
dec
jg
lock
push
inc
outs
(bad)
out
mov
(bad)
sar
sub
dec
inc
pop
neg
std
out
jg
pop
icebp
pop
std
mov
icebp
outs
neg
std
(bad)
mov
jmp
push
cld
popf
jg
mov
call
(bad)
jmp
sub
pop
push
inc
sbb
out
aas
jmp
pop
inc
leave
lahf
repnz
(bad)
in
mov
pop
(bad)
jmp
(bad)
out
dec
jecxz
push
std
ds
std
ud0
hlt
pop
pop
cld
and
ficomp
ja
mov
std
(bad)
fistp
fucomip
pop
inc
jg
shr
(bad)
ror
loopne
(bad)
mov
pop
jg
aas
out
psubb
out
sti
fistp
mov
jle
xchg
repnz
std
ja
fcomi
fnstsw
enter
scas
aas
(bad)
jecxz
popf
mov
push
mov
jmp
aas
jge
sti
sbb
fucomip
xlat
lahf
std
jne
repnz
add
scas
std
jne
jmp
jp
pop
(bad)
hlt
ja
rcl
std
lahf
jg
pop
hlt
not
jg
lahf
cmc
jmp
pop
ja
cld
cmps
sahf
jle
ja
jmp
jg
cli
mov
jmp
dec
push
clc
hlt
in
xlat
(bad)
repz
dec
dec
jg
outs
hlt
in
stc
out
std
scas
jg
out
aas
dec
(bad)
aam
in
cli
mov
(bad)
xchg
mov
cmps
push
outs
xor
iret
jle
pop
cmp
arpl
retf
(bad)
clc
das
(bad)
mov
(bad)
pop
(bad)
aaa
call
clc
xlat
sti
dec
(bad)
stc
(bad)
pop
adc
aas
imul
scas
jg
scas
pop
cld
hlt
out
stc
xlat
cld
dec
jg
mov
int
call
xchg
jmp
push
(bad)
out
stc
xchg
jg
ja
pop
inc
jmp
das
cld
(bad)
(bad)
sti
pop
stc
or
mov
aaa
cld
dec
paddd
jmp
mov
dec
call
outs
cld
in
jg
repnz
sti
in
jg
(bad)
stc
pop
clc
in
pop
idiv
std
add
xchg
push
pop
lock
(bad)
cli
mov
jg
outs
sti
fwait
jl
mov
push
mov
pop
cmc
jmp
test
imul
hlt
(bad)
push
mov
cld
jp
jle
pop
cld
retf
jle
aas
out
out
hlt
out
xchg
std
jge
repz
(bad)
jnp
scas
js
stc
out
(bad)
call
das
lods
(bad)
out
loope
cli
adc
cmps
(bad)
fstp
pop
bnd
adc
out
call
in
pop
std
addr16
stos
jg
lahf
cld
pop
jg
pop
repz
cmp
aas
jg
pop
repz
mov
jmp
jg
aas
repz
jmp
xchg
mov
int
in
clc
ja
sar
mov
mov
(bad)
call
fucomp
std
std
call
lahf
stc
jmp
retf
jmp
mov
mov
jmp
in
idiv
ficomp
repnz
std
sar
mov
out
jg
xchg
mov
(bad)
cli
(bad)
jl
shr
xchg
push
(bad)
out
scas
cld
add
test
in
paddw
mov
out
cdq
mov
out
std
popa
jg
lahf
fdivr
popa
jg
jg
inc
cld
stos
mov
push
push
cld
icebp
mov
(bad)
fcomp
mov
jg
push
call
out
repnz
cld
push
jg
pop
std
das
std
cmp
(bad)
out
out
jnp
aas
(bad)
push
pop
stc
clc
pop
jl
idiv
mov
fist
mov
iret
jle
fcomip
(bad)
stc
icebp
push
jg
jg
xchg
sar
fcomip
mov
fcomip
pop
jle
pop
std
test
sub
cld
xlat
outs
mov
xchg
jl
aas
lahf
cld
fidivr
ja
cli
pop
ja
cld
idiv
sbb
iret
pop
sti
jnp
cdq
dec
fcomip
ja
bnd
aaa
cld
aaa
mov
in
iret
sti
aad
(bad)
clc
mov
(bad)
(bad)
popf
jmp
out
std
cmp
shr
pushf
inc
mov
ds
repz
jg
loope
cld
xlat
jmp
aad
fidivr
ds
mov
mov
pop
repz
std
scas
(bad)
imul
pop
std
out
pop
(bad)
sti
mov
jg
outs
div
fs
ficomp
outs
repnz
call
loop
push
loopne
cli
iret
jg
dec
std
mov
daa
dec
int
mul
push
fistp
mov
cmc
iret
stc
or
out
jg
(bad)
mov
lock
pop
dec
out
jg
mov
lahf
cld
das
call
jg
jns
pop
call
sti
in
mov
aaa
clc
or
cmc
into
pop
jbe
(bad)
clc
or
iret
aas
std
(bad)
clc
clc
das
cli
or
(bad)
(bad)
outs
push
(bad)
loope
icebp
lahf
(bad)
aad
sar
out
push
aad
repnz
sar
pop
cld
pop
jg
scas
imul
out
sti
sub
icebp
fnstsw
mov
(bad)
movs
jg
lahf
jle
cmc
mov
std
mov
mov
pop
lahf
cmps
jg
(bad)
iret
(bad)
outs
stos
(bad)
jb
dec
ds
dec
xchg
out
jle
cmp
(bad)
mov
daa
cld
cs
sti
inc
jmp
pop
repz
jge
icebp
cmp
pop
dec
pop
sti
jmp
push
mov
cld
fcmovu
stc
std
jg
das
(bad)
lods
mov
jmp
jg
aas
cli
fwait
jmp
(bad)
fucomi
mul
jg
ja
jg
out
(bad)
push
aas
std
pusha
div
mov
(bad)
idiv
mov
call
stc
idiv
mov
cld
lahf
(bad)
imul
mov
fstp
pop
je
(bad)
sar
jg
aas
(bad)
(bad)
mov
aas
cli
xor
mov
ud0
aas
sahf
cld
mov
into
jg
mov
cmc
jg
retf
jmp
pop
std
inc
inc
scas
cmc
ja
add
(bad)
xchg
jmp
aas
stc
dec
int
clc
arpl
loopne
(bad)
jmp
(bad)
call
std
out
jg
daa
(bad)
jmp
aas
(bad)
daa
int
jmp
push
jmp
jle
mov
addr16
stos
mov
jle
(bad)
lahf
dec
(bad)
jmp
vhaddps
jnp
pop
mov
fwait
cld
loopne
cli
lods
(bad)
stc
(bad)
out
std
mov
(bad)
cmps
mov
cld
pop
jg
mov
mov
(bad)
jmp
cli
imul
out
in
rcr
pop
std
shl
fs
mov
cli
pop
push
adc
(bad)
cli
jne
popf
leave
pop
icebp
repnz
cld
pop
out
inc
(bad)
(bad)
jg
dec
fucomip
(bad)
(bad)
mov
out
mov
iret
push
loop
std
jbe
idiv
call
jp
pop
mov
(bad)
jns
(bad)
push
mov
test
imul
(bad)
mov
jl
outs
(bad)
mov
pop
mov
add
ret
pop
out
sti
jne
stc
xor
das
stc
addr16
aas
not
xlat
jnp
in
std
das
es
fdivp
std
dec
jle
aas
test
inc
out
pop
out
cld
ss
dec
daa
std
pop
call
pop
std
xchg
scas
inc
(bad)
in
das
call
stc
aas
jmp
and
cdq
aas
out
iret
cld
int
(bad)
jg
outs
clc
mov
(bad)
mov
jg
pop
cld
mov
repz
mov
xchg
(bad)
jle
jmp
hlt
aas
std
dec
call
jg
ja
ret
push
(bad)
mov
jmp
jg
addr16
mov
mov
scas
pop
icebp
pop
(bad)
push
call
pop
jnp
xchg
inc
mov
dec
std
pop
cmc
pop
pop
pop
std
xchg
jg
(bad)
clc
cmps
cld
daa
(bad)
fisubr
mov
out
jmp
out
jg
outs
(bad)
lods
(bad)
in
lahf
stc
in
iret
ds
repz
jg
out
push
jmp
add
(bad)
popf
pop
ss
imul
addr16
cmc
out
bnd
clc
outs
jmp
scas
sti
aas
(bad)
gs
jmp
fnstsw
jmp
movs
jg
mov
daa
(bad)
fadd
mov
pop
pop
std
idiv
call
stc
dec
aas
inc
cmp
jle
inc
rdseed
lock
mov
clc
xlat
iret
inc
div
cld
pop
jg
jmp
call
lock
xor
cmc
(bad)
mov
out
cld
or
mov
jg
push
push
aas
lock
cld
repz
jle
(bad)
idiv
mov
into
(bad)
stc
mov
scas
(bad)
idiv
pop
repnz
cdq
cmc
cli
fidivr
pop
jl
push
cld
outs
jg
lahf
(bad)
fisttp
pushf
pop
stc
ja
adc
popf
aas
xor
dec
mov
mov
(bad)
cli
mov
cmp
stos
jmp
(bad)
aas
neg
jecxz
(bad)
mov
leave
in
outs
icebp
xor
(bad)
jmp
out
aam
push
pop
push
fstp
(bad)
jg
mov
(bad)
sti
out
sti
pusha
jmp
std
lahf
(bad)
in
fucomip
pop
cli
and
sub
loope
jg
iret
(bad)
aaa
(bad)
fucomi
inc
jg
das
cmp
mov
hlt
mov
cld
dec
inc
(bad)
cmp
mov
pop
inc
cmc
mov
jg
mov
cli
jg
das
(bad)
jmp
mov
stos
mov
jle
push
(bad)
jle
mov
outs
lock
idiv
mov
std
leave
pop
out
ja
jmp
jg
mov
ja
fucomip
cmc
lahf
(bad)
stc
aas
sti
cmps
fdivrp
cld
pop
mov
pop
cld
outs
aas
jae
sub
dec
dec
jg
mov
mov
fmul
(bad)
pop
jg
hlt
retf
aas
push
ins
(bad)
cld
(bad)
out
outs
stc
mov
dec
(bad)
aam
call
push
inc
out
dec
(bad)
mov
out
pop
hlt
in
idiv
inc
inc
(bad)
fcomip
push
std
imul
aad
mov
out
call
stc
lahf
call
xchg
aas
(bad)
out
imul
stc
pop
(bad)
jmp
popa
out
cli
and
sbb
popa
jg
scas
(bad)
aaa
(bad)
hlt
fcomip
cmps
call
cli
sub
hlt
mov
mov
jl
fwait
(bad)
stc
jg
push
pop
std
addr16
jg
mov
out
mov
jmp
lock
stc
pop
std
pop
jg
lahf
repz
dec
leave
icebp
pop
clc
dec
std
mov
mov
jmp
jg
mov
inc
pop
dec
call
repz
in
(bad)
out
mov
mov
jg
pop
(bad)
aas
(bad)
stos
jg
pop
cmc
inc
jmp
ja
cmps
(bad)
(bad)
mov
jg
(bad)
pop
inc
in
xchg
jg
das
cli
mov
mov
mov
jg
(bad)
stc
jecxz
iret
jg
outs
std
out
pop
(bad)
xlat
sahf
cld
faddp
push
push
outs
push
dec
out
jno
icebp
sbb
ret
aas
js
jmp
ret
(bad)
cld
mov
(bad)
(bad)
(bad)
out
fucomip
aas
clc
retf
(bad)
xchg
aas
in
jp
jmp
or
cli
mov
cmp
lahf
dec
jmp
cld
retf
push
stc
scas
(bad)
aaa
jmp
std
cmc
(bad)
cli
pop
sti
iret
std
or
lds
cld
repz
jg
mov
fnstsw
(bad)
lock
push
repz
popf
mov
stc
push
jg
xchg
std
xchg
jmp
sti
add
loop
jmp
fistp
(bad)
mov
fs
mov
sti
aaa
jmp
(bad)
pop
(bad)
test
sar
jmp
cmp
cdq
mov
(bad)
cdq
aas
jecxz
fild
jecxz
aas
call
fcomp
mov
(bad)
out
outs
hlt
cmps
and
out
mov
inc
fistp
std
mov
retf
jmp
(bad)
in
scas
icebp
push
jmp
adc
fcomip
mov
cld
das
dec
jle
ds
aas
(bad)
(bad)
(bad)
stc
xlat
clc
das
(bad)
mov
or
movs
jg
idiv
idiv
(bad)
(bad)
paddw
push
outs
std
ds
mov
(bad)
push
jg
pop
repz
stc
mov
cld
in
aas
(bad)
push
dec
(bad)
fsubr
jmp
jmp
addr16
repnz
std
(bad)
(bad)
ja
hlt
fcomip
pop
(bad)
cld
rcr
scas
pop
cld
out
rcl
cdq
jg
aas
jae
pop
cli
mov
mov
lea
cld
xor
dec
jmp
dec
(bad)
mov
enter
cld
jne
mov
lea
pop
cwde
(bad)
jle
jle
(bad)
in
repnz
(bad)
out
ja
(bad)
fwait
aas
jne
(bad)
cli
neg
std
aam
std
pop
jge
repnz
pop
cmp
cmps
jmp
aas
repz
sahf
(bad)
cld
cli
outs
sti
ret
stos
(bad)
(bad)
(bad)
lahf
dec
adc
mov
aaa
xlat
mov
outs
icebp
fwait
ss
jg
stc
in
call
repz
jl
fstp
mov
loope
(bad)
out
cdq
std
push
pop
jge
mov
xor
lods
jbe
jg
pop
stc
stos
mov
push
push
dec
cld
mov
dec
(bad)
in
mov
test
clc
in
sti
(bad)
out
in
sti
dec
dec
pop
not
jg
(bad)
pop
iret
inc
aas
stc
mov
ja
popf
jg
in
stc
(bad)
dec
mov
mov
(bad)
neg
pop
jge
jmp
cld
mov
push
stc
dec
std
inc
jmp
jg
jp
pop
jmp
aaa
(bad)
cli
aad
fstp
(bad)
aas
stc
jne
sar
sub
(bad)
in
jmp
mov
jmp
loop
jmp
cld
cmps
(bad)
jmp
pop
cli
imul
jg
pop
cli
xchg
pop
jg
sti
cmps
pop
dec
jg
lds
std
xchg
jg
std
in
fcomip
jmp
(bad)
mov
(bad)
jg
jp
mov
retf
(bad)
mov
hlt
jnp
lock
sti
push
call
lahf
div
dec
setb
xor
lahf
xchg
(bad)
(bad)
loop
stc
outs
mov
mov
dec
mov
pop
(bad)
and
inc
mov
push
cmps
jg
aas
icebp
dec
(bad)
cmp
addr16
mov
sub
cdq
out
mov
out
(bad)
jg
lahf
jmp
jg
in
mov
popf
jg
jg
mov
pop
(bad)
jmp
pop
jmp
mov
aam
jg
inc
(bad)
xor
inc
clc
sbb
das
std
inc
jg
popf
(bad)
stc
lahf
jge
(bad)
call
aad
repz
cld
jno
(bad)
mov
xchg
jg
idiv
ja
retf
rcr
jg
inc
(bad)
fistp
(bad)
(bad)
aas
cld
in
std
aaa
cld
stc
jg
lahf
std
jg
and
popf
(bad)
gs
call
push
std
movs
jmp
fcomip
in
clc
fistp
aaa
std
retf
jle
(bad)
in
(bad)
xchg
call
push
test
sbb
call
fwait
cld
inc
leave
mov
jg
mov
cmp
fstp
cmc
repnz
dec
(bad)
in
aas
cld
xlat
cld
ficomp
(bad)
idiv
scas
std
daa
(bad)
cli
mov
jg
(bad)
stc
sar
lock
call
jg
stos
out
inc
jg
pop
sti
fstp
cld
sub
cld
mov
sar
inc
inc
mov
lahf
cld
push
pop
repz
std
jg
jg
jg
repnz
jle
lahf
repz
inc
mov
xlat
sub
cli
adc
sar
clc
imul
(bad)
(bad)
call
(bad)
or
jg
adc
into
pop
cld
sbb
xchg
mov
cld
pop
jg
out
xor
and
shr
cld
daa
jmp
jg
pop
jno
xchg
stos
mov
(bad)
dec
inc
idiv
mov
and
repnz
mov
jmp
(bad)
das
(bad)
std
jle
jb
jg
jg
xlat
stc
mov
iret
aas
(bad)
stos
(bad)
mov
push
mov
(bad)
jmp
dec
mov
cmp
jg
stc
pop
test
imul
aas
cli
hlt
outs
stc
movs
push
push
pop
call
pop
(bad)
fistp
mov
call
cld
pop
out
fstp
cld
aas
pop
dec
out
std
xchg
jg
in
cli
inc
mov
dec
(bad)
cdq
(bad)
mov
(bad)
scas
icebp
aas
(bad)
das
pop
std
sbb
iret
std
outs
fcmovne
jmp
jmp
(bad)
aad
out
icebp
pop
cld
adc
ret
(bad)
pop
std
jmp
loop
cld
out
cld
int3
pop
hlt
inc
std
xchg
(bad)
stc
idiv
aaa
dec
ja
jmp
push
push
scas
cld
das
inc
jnp
fnstcw
(bad)
stc
pop
mul
jg
xchg
dec
jmp
jmp
fisub
jg
(bad)
std
add
clc
ins
stc
clc
mov
ret
pop
cli
xlat
(bad)
ja
fsub
jg
into
push
jg
or
mov
out
out
std
mov
mov
cld
rol
mov
(bad)
cdq
mov
(bad)
jg
pop
jmp
jg
jnp
int
in
addr16
aas
stc
stc
scas
(bad)
clc
pop
std
(bad)
jmp
push
mov
hlt
jg
aas
std
mov
xchg
cdq
jmp
call
push
jg
sub
out
jecxz
pop
lock
cld
dec
dec
out
cli
out
clc
jge
xchg
mov
cmc
daa
std
add
cmc
dec
std
xchg
repnz
leave
pop
(bad)
cli
mov
jg
jg
(bad)
cld
mov
jg
mov
jg
outs
cmc
push
jmp
iret
(bad)
in
aas
repz
jns
jmp
sti
sbb
out
in
mov
mov
call
sti
cmps
(bad)
(bad)
std
gs
out
cmc
daa
std
mov
das
sti
pop
(bad)
call
mov
fistp
cmp
aas
mov
mov
jg
scas
ds
lods
jg
pop
pop
(bad)
out
sar
mov
out
in
repz
xchg
mov
sti
sbb
cdq
jg
xlat
cli
ins
jle
fldcw
pop
(bad)
test
(bad)
jecxz
ret
scas
std
pop
dec
(bad)
inc
loopne
(bad)
idiv
adc
dec
(bad)
aam
icebp
out
(bad)
jae
mov
call
mov
mov
jg
iret
cld
in
out
cmc
mov
aaa
cld
scas
mov
xlat
jg
fcomip
ud0
(bad)
adc
in
pop
cli
aaa
data16
aas
jbe
jg
cmps
pop
jg
sbb
sti
dec
(bad)
in
aas
out
outs
clc
or
(bad)
jmp
mov
(bad)
jle
jg
mov
cmp
(bad)
jg
jg
stos
(bad)
iret
dec
jle
pop
mov
jg
push
jnp
jle
in
inc
sbb
gs
fnstsw
icebp
dec
(bad)
sti
jg
out
icebp
sub
sbb
and
cld
dec
aas
(bad)
sar
inc
ss
das
jg
mov
jle
mov
(bad)
mov
out
jmp
sti
mov
xchg
pop
(bad)
adc
out
out
(bad)
(bad)
addr16
fstp
addr16
mov
mov
out
cli
jg
fdivrp
pop
inc
(bad)
(bad)
clc
ret
(bad)
in
mov
in
out
je
paddb
loope
repz
adc
icebp
pop
inc
jg
scas
idiv
std
fwait
jg
mov
jle
aas
jecxz
(bad)
repz
icebp
out
sti
scas
(bad)
call
mul
mov
mov
cmps
dec
(bad)
clc
dec
std
das
(bad)
jmp
das
(bad)
lock
xor
aas
jmp
sub
nop
in
aas
loopne
js
stc
lahf
(bad)
cmc
pop
cli
dec
cld
pop
jg
repz
into
aas
repz
(bad)
aas
jg
cld
out
mov
xor
cld
or
fbstp
fwait
inc
pop
cld
mov
(bad)
pop
(bad)
mov
jmp
(bad)
cld
(bad)
sti
js
xchg
mov
(bad)
mov
dec
jg
jg
iret
std
leave
out
icebp
inc
push
pop
mov
jmp
clc
cmp
jg
aas
sti
iret
cld
cmps
mov
scas
out
std
arpl
inc
jg
gs
jmp
out
fistp
aas
std
cdq
pop
lock
ret
pop
pop
(bad)
hlt
pop
lock
std
mov
stc
outs
hlt
fnsetpm(287
jg
aas
hlt
xchg
std
jecxz
mov
das
dec
std
(bad)
inc
jl
loop
sti
mov
in
ins
jle
pop
jp
inc
mov
in
xchg
dec
in
pop
cli
cmps
mov
mov
jg
scas
sti
out
aas
ds
inc
ds
cld
div
jg
dec
clc
mov
jmp
jg
pop
stc
sub
jg
mov
dec
jle
jg
paddd
jg
mov
sbb
call
jg
pop
inc
(bad)
in
aas
cmc
mov
ja
call
cmps
pop
std
mov
fwait
cld
push
sti
xchg
rcr
jg
das
(bad)
push
push
mov
call
pop
cmc
cmps
push
jle
pop
(bad)
lahf
call
cld
scas
mov
(bad)
mov
aas
jmp
jg
aaa
std
fwait
dec
ss
cmc
dec
jmp
out
jbe
push
fdivrp
mov
mov
icebp
pop
std
jbe
jg
jg
(bad)
fdivrp
(bad)
scas
cld
daa
(bad)
nop
mov
mov
dec
jle
fnstcw
out
jp
cmp
push
mov
out
push
out
(bad)
sub
les
dec
(bad)
cli
lahf
dec
retf
aas
cmc
fwait
cmp
dec
jg
pop
hlt
daa
call
icebp
xlat
std
or
call
jle
aas
cmc
out
std
repz
cmp
(bad)
add
imul
mov
aam
mov
fcomip
cmp
pop
jg
jg
cli
aaa
jl
(bad)
mov
neg
loop
ror
jns
pop
(bad)
xchg
jnp
(bad)
outs
hlt
jmp
sahf
mov
(bad)
icebp
or
(bad)
aaa
clc
cmp
scas
cli
xchg
jmp
jg
mov
mov
jg
lahf
std
scas
push
jg
pop
sti
cmps
std
pop
jg
pop
std
ja
mov
ret
(bad)
push
hlt
(bad)
dec
or
in
jg
inc
cld
imul
outs
(bad)
pop
mov
mov
(bad)
out
aas
cli
(bad)
adc
aad
jmp
(bad)
out
dec
mov
dec
pop
neg
std
pop
jg
scas
icebp
xlat
std
fsubr
cmc
mov
retf
pop
sti
psubw
(bad)
std
fs
(bad)
mov
aad
sti
outs
dec
jg
fcomip
pop
call
fsubr
(bad)
clc
jecxz
mov
aaa
(bad)
sti
das
jle
(bad)
pop
call
(bad)
pop
jg
pop
jg
lds
aaa
std
xlat
cmc
(bad)
aas
pop
mov
aaa
mov
fucomip
jmp
leave
mov
jg
push
(bad)
pop
(bad)
in
mov
call
mov
jg
lahf
std
dec
std
mov
out
repz
ins
mov
xchg
fcomip
mov
pop
stc
mov
scas
(bad)
loopne
das
xchg
jmp
sti
rcr
daa
idiv
int3
(bad)
xlat
sbb
stc
fstp
daa
inc
push
std
icebp
pop
jmp
jecxz
call
ins
call
aad
cli
mov
push
scas
sti
outs
call
(bad)
cld
idiv
sub
hlt
mov
out
cld
mov
push
cld
dec
pop
call
stos
(bad)
mov
addr16
fidivr
std
paddq
push
(bad)
inc
(bad)
fistp
mov
fdivr
or
das
clc
ret
pop
(bad)
jge
in
outs
dec
xchg
(bad)
std
xchg
jnp
jmp
test
mov
repz
clc
mov
xchg
std
imul
cld
fnstcw
(bad)
pop
jg
pop
sti
daa
dec
jg
mov
repz
mov
(bad)
addr16
pop
jge
pop
(bad)
mov
das
cld
fnstsw
push
jg
mov
mov
(bad)
stos
jg
aaa
sti
aad
cli
(bad)
clc
adc
(bad)
(bad)
aas
cli
cmps
jmp
das
jle
jmp
dec
cld
sbb
std
(bad)
out
(bad)
cli
or
fidivr
inc
jg
dec
std
test
pop
sti
pop
std
adc
rcr
mov
mov
mov
(bad)
(bad)
lods
daa
repz
daa
push
jp
(bad)
sti
std
int3
(bad)
mov
ror
clc
aas
jmp
in
in
push
cld
mov
jmp
(bad)
cwde
data16
stc
push
ins
mov
jle
push
lock
fwait
std
add
stc
lahf
std
jmp
mov
popf
out
stc
imul
icebp
mov
clc
(bad)
in
pop
stc
stos
dec
int
movs
lahf
std
cli
mov
jmp
pop
test
sub
mov
sub
scas
mov
(bad)
jmp
aam
stc
dec
lahf
std
push
inc
loope
hlt
iret
std
jecxz
(bad)
pop
push
(bad)
jmp
push
(bad)
in
daa
mov
jmp
ja
cmp
paddb
pop
(bad)
cmp
rcr
(bad)
sti
jg
pop
cld
xor
pop
jle
call
fdivrp
cli
jg
mov
jle
sar
pop
hlt
stos
(bad)
popf
(bad)
in
jg
(bad)
(bad)
lock
in
std
adc
aad
scas
cld
ja
mov
jecxz
stc
daa
(bad)
mov
fdivr
call
clc
stc
xchg
shr
pop
sti
mov
fcomip
das
std
cli
(bad)
fdivr
jg
(bad)
cli
mov
cmc
jg
jg
xchg
std
add
cwde
mov
(bad)
cmps
aas
in
cli
pop
(bad)
fdivr
pop
(bad)
mov
jecxz
jbe
idiv
mov
or
fs
sti
mov
std
push
sti
pop
(bad)
loopne
jmp
xchg
mov
sti
pop
push
std
mov
lahf
dec
jmp
clc
push
jmp
mov
aas
(bad)
mov
std
popf
pop
idiv
(bad)
xchg
std
adc
idiv
gs
pop
ss
jmp
jg
cld
popf
jle
loop
sti
mov
not
iret
jg
in
xlat
clc
out
retf
aas
cld
aas
std
cmp
mov
(bad)
in
pop
clc
xchg
jle
ret
mov
das
clc
pop
retf
(bad)
jp
std
popa
mov
pop
cld
fcos
jmp
jp
jp
repnz
cmp
aas
loope
stc
mov
jnp
sti
pop
std
pop
call
(bad)
sti
xlat
in
jle
mov
lds
das
(bad)
fidivr
out
(bad)
mov
repz
stc
retf
dec
dec
notrack
fmul
pop
dec
push
jg
xor
(bad)
fsubr
aas
loope
cld
inc
repz
inc
repnz
cld
pop
fstp
icebp
pop
cld
mov
aas
jmp
les
retf
push
pop
stc
jg
cli
pop
dec
jg
aas
stc
mov
clc
out
sar
scas
(bad)
scas
push
jle
pop
(bad)
mov
fistp
hlt
cmp
iret
jg
pop
test
sbb
hlt
outs
repz
(bad)
mov
fistp
push
retf
jg
pop
sti
fwait
pushf
inc
jmp
(bad)
aaa
dec
(bad)
std
aad
hlt
(bad)
jecxz
clc
jg
pop
call
cli
fnstcw
sar
mov
imul
int
mov
mov
jmp
(bad)
ja
fstp
std
xchg
mov
out
clc
addr16
dec
jmp
jmp
jg
std
(bad)
xchg
mov
lds
pop
stc
lea
out
clc
cmp
pop
mov
aas
jg
std
aas
call
jle
in
jg
aas
pop
jmp
mov
in
mov
jg
out
sti
jecxz
stc
xchg
stc
cli
(bad)
jg
sti
movd
pop
test
jecxz
in
std
jnp
rcr
hlt
aaa
sti
ins
jle
iret
sti
xchg
dec
mov
(bad)
mov
stc
idiv
push
jg
mov
pushf
(bad)
sti
jg
pop
cld
ja
addr16
daa
jg
lahf
(bad)
mov
out
cli
mov
mov
sti
lahf
std
sub
in
mov
mov
ret
das
std
in
xlat
stc
jge
cld
cli
mov
test
mov
lahf
dec
(bad)
scas
mov
cmp
pop
lods
call
jmp
cmps
(bad)
pushf
mov
call
lahf
cli
xlat
(bad)
call
pop
jle
pop
test
inc
aas
cld
out
cli
pop
cld
mov
jmp
clc
pop
call
in
jg
(bad)
cld
jbe
mov
(bad)
test
std
inc
call
aas
std
mov
mov
push
jle
(bad)
lock
stc
ja
fldcw
mov
jg
mov
das
pandn
mov
addr16
movs
mov
mov
cmp
(bad)
out
stc
mov
mov
jle
mov
mov
icebp
out
(bad)
jg
aad
out
std
mov
jg
sbb
pop
ud0
xchg
call
in
mov
cld
fucomi
jmp
mov
aaa
inc
jg
das
dec
mov
mov
loope
clc
mov
aas
call
mov
mov
leave
mov
ja
mov
mov
pop
std
retf
(bad)
mov
retf
(bad)
movs
aas
in
clc
(bad)
push
repnz
call
stos
jg
lahf
(bad)
xchg
inc
or
mov
clc
inc
lahf
jle
adc
lock
icebp
inc
dec
inc
jbe
shr
(bad)
retf
loop
aas
pusha
push
std
lods
fistp
out
imul
push
movsx
fwait
jmp
leave
call
scas
fistp
sti
fwait
std
lods
(bad)
fistp
addr16
(bad)
jle
mov
loop
stc
(bad)
pushf
aas
loopne
mov
pop
hlt
sbb
jnp
imul
clc
fstp
mov
jbe
(bad)
sti
call
adc
not
cld
xor
mov
mov
cld
jmp
out
hlt
lock
(bad)
(bad)
outs
repnz
clc
mov
mov
jmp
sbb
pop
jl
jnp
dec
pop
(bad)
addr16
cld
xchg
jg
scas
cli
in
(bad)
push
scas
cld
mov
iret
call
dec
icebp
sub
movs
jg
sti
outs
(bad)
hlt
fcomip
xlat
call
(bad)
outs
std
gs
lahf
not
call
aas
out
(bad)
sbb
fisubr
std
imul
jg
jg
mov
mov
out
(bad)
addr16
popf
aas
out
std
push
jle
mov
jg
push
scas
(bad)
pop
jg
pop
cmc
dec
cld
push
mov
std
pop
jg
pop
cld
inc
std
ret
(bad)
jmp
repnz
inc
mov
clc
out
add
int
imul
(bad)
cmp
lahf
repnz
jle
ret
aas
mov
bswap
jbe
(bad)
call
mov
sub
stc
(bad)
clc
je
cld
outs
out
call
(bad)
out
std
pop
(bad)
clc
scas
neg
cmp
in
(bad)
outs
(bad)
sahf
mov
mov
dec
pop
cmps
jg
call
cli
fstp
repnz
jle
aas
out
aas
sti
fnstsw
(bad)
std
popa
neg
stc
out
cli
fwait
mov
mov
call
scas
mov
leave
aas
stc
daa
out
scas
jmp
aas
div
mov
cli
pop
(bad)
fsubr
cmc
sti
std
jle
leave
(bad)
outs
jmp
inc
repnz
push
mov
lahf
dec
aad
cld
out
dec
aas
dec
(bad)
cld
pop
jge
ja
pop
out
jg
aas
cli
paddw
inc
icebp
scas
(bad)
fwait
jle
fcomip
stos
jg
(bad)
cli
add
popf
mov
pop
jle
sar
(bad)
leave
imul
aas
out
sti
dec
(bad)
aad
out
(bad)
jae
jecxz
cli
xchg
cld
add
mov
(bad)
cmp
mov
(bad)
mov
addr16
lahf
clc
pop
cld
into
xchg
(bad)
cld
pop
(bad)
out
std
hlt
pop
cli
das
(bad)
jecxz
ficomp
adc
cld
push
jg
scas
stc
mov
or
mov
out
(bad)
cli
or
in
in
fdivrp
sbb
mov
dec
cld
or
clc
mov
jg
mov
jecxz
div
cld
mov
lahf
cli
pop
stos
fcomip
mov
lahf
in
jge
dec
sti
arpl
(bad)
(bad)
jmp
ss
outs
icebp
sub
idiv
imul
jmp
mov
cmps
mov
in
stc
leave
dec
push
(bad)
inc
lahf
jl
cld
xlat
cmp
sti
loope
mov
add
enter
jg
out
jle
pop
cld
idiv
push
(bad)
jecxz
lods
(bad)
mov
sti
(bad)
scas
aas
stc
mov
xchg
aas
std
mov
(bad)
repnz
pop
sti
jae
(bad)
mov
hlt
icebp
jmp
jg
(bad)
out
aaa
std
in
(bad)
(bad)
popf
mov
(bad)
mov
aas
clc
in
pop
lods
pop
mov
cld
addr16
(bad)
idiv
aas
stc
aad
mov
sub
fcmovnu
in
aaa
mov
(bad)
xlat
mov
(bad)
mov
repnz
ins
dec
jg
pop
(bad)
lahf
dec
jg
(bad)
out
std
cmp
sar
push
std
jge
jmp
scas
mov
push
mov
push
mov
xchg
mov
dec
(bad)
mov
cld
in
ret
jnp
xlat
cld
mov
in
clc
ins
dec
(bad)
fnstsw
inc
lahf
nop
std
fistp
(bad)
out
pop
cld
xchg
mov
mov
movs
xchg
mov
push
ret
mov
stc
xor
int3
hlt
push
cld
jge
(bad)
das
std
xchg
jle
(bad)
iret
std
(bad)
mov
std
mov
aas
cmp
aad
aad
cli
(bad)
call
cmp
mov
outs
sti
jnp
(bad)
mov
stos
xlat
in
(bad)
retf
fcomip
pop
ds
push
test
jle
in
std
jmp
sti
out
(bad)
in
out
(bad)
ds
mov
aas
lock
cld
lods
jg
das
js
cli
xlat
fsubr
jg
dec
jg
(bad)
imul
xchg
(bad)
aaa
fdivr
sti
mov
scas
clc
retf
jle
stc
fwait
cld
icebp
mov
jle
outs
call
cmps
dec
sahf
std
les
stc
lods
dec
lahf
cli
inc
std
cmp
cmps
mov
dec
(bad)
(bad)
call
push
fstp
div
outs
cld
clc
repnz
inc
mov
(bad)
(bad)
(bad)
mov
std
and
int3
jg
stos
(bad)
mov
pop
push
inc
neg
mov
aas
cld
scas
call
out
clc
jae
mov
(bad)
std
sar
xchg
aas
jmp
stc
jmp
inc
out
(bad)
call
fidivr
scas
ja
mov
loope
cld
addr16
mov
loope
(bad)
mov
cmc
lahf
std
push
inc
mov
jg
jg
iret
inc
call
pop
(bad)
aas
cld
stos
(bad)
(bad)
inc
(bad)
cmp
aas
cmc
das
std
fstp
pop
cmc
push
(bad)
xchg
inc
mov
stos
mov
mov
mov
fdivr
lock
(bad)
jge
jmp
jmp
aas
cli
mul
repz
jmp
jg
leave
lahf
icebp
iret
std
popa
push
pop
div
xchg
jg
icebp
outs
std
xchg
cmc
aaa
cld
push
mov
jg
fptan
idiv
jmp
jg
pop
sti
mov
fcomip
addr16
pop
xchg
(bad)
jno
jmp
xor
inc
(bad)
clc
mov
scas
ds
cld
scas
std
adc
inc
lahf
repz
inc
jg
hlt
cmc
loope
lock
jmp
mov
popf
mov
mov
into
outs
lock
jmp
call
jg
pop
dec
jmp
out
mov
jle
xlat
cld
xor
aaa
sti
ins
jg
(bad)
idiv
in
lahf
push
push
lahf
jmp
(bad)
aad
pop
jecxz
cli
stos
(bad)
dec
in
(bad)
(bad)
mov
imul
dec
ucomiss
cmps
mov
in
(bad)
mov
scas
call
into
lahf
test
das
(bad)
cli
pop
fistp
sub
pop
dec
(bad)
stos
mov
jg
pop
stc
lahf
push
jmp
push
cld
imul
es
jmp
jg
pop
jb
aas
cld
inc
xchg
mov
(bad)
mov
sbb
mov
in
jecxz
jmp
in
outs
sti
aaa
(bad)
sahf
mov
fdivrp
ret
in
(bad)
call
(bad)
sti
aas
neg
ret
jg
push
jecxz
jg
(bad)
aad
icebp
aaa
std
jmp
aas
div
pop
dec
retf
iret
(bad)
loope
repz
push
idiv
jnp
(bad)
ja
(bad)
sub
data16
stc
pop
pop
mov
std
iret
mov
aaa
pop
(bad)
ds
mov
dec
mov
rcr
jg
std
mov
jmp
std
iret
jle
idiv
mov
out
neg
fadd
jecxz
(bad)
mov
sahf
sbb
out
mov
scas
(bad)
adc
cli
sbb
std
in
jg
pop
cmps
retf
fcomip
xchg
and
dec
addr16
cld
stos
aas
hlt
(bad)
stc
sub
loope
mov
(bad)
jnp
out
jle
push
fistp
imul
retf
lods
cmc
dec
inc
jmp
fidivr
jge
pop
cmp
test
jmp
div
cld
or
mov
jle
sar
(bad)
call
cli
ja
mov
jmp
sub
int3
lahf
cmp
(bad)
(bad)
test
dec
sti
pop
(bad)
call
call
addr16
fwait
aas
neg
push
call
xor
lahf
std
iret
jge
sbb
(bad)
stc
out
nop
aas
cld
xchg
std
fcos
enter
(bad)
in
repnz
sti
cmp
cld
aas
in
call
cmp
cmc
xlat
dec
(bad)
stc
iret
dec
(bad)
(bad)
and
fwait
jecxz
in
std
idiv
xlat
pop
cli
push
jmp
call
jg
das
cld
sub
mov
jecxz
jmp
fcomip
cld
paddw
scas
push
call
aas
out
(bad)
sti
inc
jmp
daa
(bad)
jmp
jne
mov
pop
icebp
xchg
std
jg
in
stc
pop
xchg
(bad)
push
mov
(bad)
jne
fsub
(bad)
sti
push
std
stos
push
scas
iret
addr16
jle
(bad)
out
in
(bad)
(bad)
sar
xchg
jge
jnp
push
jg
out
sar
iret
inc
mov
inc
pop
repnz
sbb
dec
jg
(bad)
xlat
mov
das
jg
aas
clc
aaa
cld
adc
out
cld
sar
out
jg
xor
dec
repnz
es
in
fsqrt
add
dec
aas
std
dec
pop
ins
dec
cmps
stc
(bad)
(bad)
outs
mul
jg
outs
std
sti
lods
mov
idiv
cmp
out
cli
cmp
scas
leave
outs
mov
fstp
lahf
push
call
sbb
out
in
cld
pop
inc
hlt
push
std
inc
jg
pop
cli
xchg
jmp
out
cmc
pop
std
std
jg
pop
repnz
dec
jg
(bad)
mov
push
dec
pop
std
mov
jmp
inc
aas
std
outs
jmp
aas
cli
jae
nop
(bad)
call
imul
(bad)
cld
(bad)
jg
mov
data16
dec
pop
(bad)
xchg
std
in
in
repz
jmp
mov
call
jg
push
iret
test
dec
jmp
mov
jle
outs
sti
mov
sti
dec
pop
(bad)
xchg
jecxz
jmp
dec
pop
jg
jecxz
lods
jg
out
in
mov
or
lahf
push
or
dec
stos
call
sbb
(bad)
jmp
std
pop
inc
(bad)
call
jg
iret
cld
mov
cld
mov
call
jg
idiv
cmp
(bad)
imul
iret
clc
fwait
jle
xlat
std
(bad)
mov
cli
lahf
sti
xor
pextrw
mov
mov
jns
cmc
out
jg
pop
jg
pop
inc
icebp
psubq
into
(bad)
aam
idiv
cld
mov
(bad)
in
fistp
aad
enter
icebp
lahf
cld
(bad)
stos
mov
sbb
outs
inc
test
aas
(bad)
mov
dec
iret
mov
js
jnp
cmp
lahf
cld
aaa
cld
jno
in
pop
cli
icebp
ja
nop
mov
jle
(bad)
in
xchg
aas
out
dec
clc
cdq
in
stc
lea
(bad)
in
shl
(bad)
pop
clc
paddw
aas
call
retf
(bad)
clc
lahf
cli
addr16
xchg
fucomip
(bad)
sti
dec
jmp
lahf
std
(bad)
aas
stc
mov
push
int
aad
cld
(bad)
std
mov
sti
jnp
movs
pop
lock
std
lahf
(bad)
jmp
stc
idiv
add
(bad)
xchg
jg
dec
cld
ret
jg
mov
idiv
cmp
add
aad
outs
repz
(bad)
mov
cmp
outs
std
push
mov
cld
cmps
mov
(bad)
pop
push
mov
inc
xchg
aas
repz
cli
outs
dec
cmp
daa
mov
mov
das
(bad)
lock
pop
stc
cmps
pop
pop
cmp
lahf
jle
aas
loopne
hlt
scas
clc
cmp
das
jg
(bad)
leave
aas
cld
pop
std
daa
jg
pop
test
fcomip
out
outs
stc
(bad)
repnz
in
fucomi
lahf
stc
idiv
jg
push
outs
jle
mov
push
inc
iret
cld
iret
jle
aas
jmp
popf
jle
pop
call
(bad)
data16
(bad)
jle
std
pop
(bad)
in
mov
push
mov
(bad)
(bad)
in
iret
jmp
(bad)
sti
sar
rcr
mov
in
sti
dec
(bad)
lods
jg
mov
pop
sti
mov
pop
stc
sbb
push
push
adc
retf
xlat
cld
in
jb
fstp
(bad)
fucom
aas
(bad)
ja
in
mov
push
aad
neg
dec
mov
clc
cmps
(bad)
jg
outs
cmc
leave
jg
jg
(bad)
(bad)
jmp
icebp
scas
std
xchg
jg
lahf
repz
fcomip
das
cld
pop
jg
pop
std
outs
aam
clc
xlat
std
std
jle
aas
repz
(bad)
push
jmp
jg
lahf
dec
(bad)
cli
aas
cli
sbb
stc
outs
iret
push
sti
pop
std
iret
(bad)
fidivr
aas
jae
retf
(bad)
cmc
(bad)
jecxz
std
loopne
mov
lahf
(bad)
and
loopne
icebp
pop
into
(bad)
pop
dec
out
pop
sti
xlat
(bad)
jmp
pop
out
aaa
std
cmc
aas
mov
fdivr
inc
pop
clc
lahf
cld
retf
jg
(bad)
std
cmps
mov
inc
jno
jmp
clc
out
neg
cli
fst
sti
cmps
mov
push
lds
ins
push
dec
std
es
(bad)
std
(bad)
lods
icebp
pop
sti
fstp
jnp
call
pop
jmp
std
stc
jg
aas
icebp
cmps
jge
ja
inc
inc
jmp
repnz
cli
outs
call
xlat
dec
ja
clc
jg
jg
pop
(bad)
in
push
pop
std
pop
jg
lahf
clc
pop
sti
sbb
xchg
pop
std
(bad)
loope
fdivr
jp
(bad)
push
cld
outs
cmc
cmc
push
mov
aas
mov
cli
or
pop
jg
xlat
cmp
clc
mov
cmps
mov
in
jno
jmp
out
xlat
sti
add
popf
pop
jmp
outs
icebp
hlt
int
stc
call
mov
cli
call
(bad)
mov
lahf
lock
data16
jle
mov
fild
sub
cmps
xchg
jg
outs
push
dec
dec
jle
fwait
lahf
js
sub
hlt
dec
out
fdivrp
cmc
jg
scas
fdivrp
ret
repz
mul
psubb
out
mov
idiv
inc
in
repz
cld
movq
pop
cmc
(bad)
aam
cmc
scas
std
cmp
(bad)
std
popf
jg
fcomip
(bad)
imul
daa
call
(bad)
cmps
dec
jg
jg
inc
dec
inc
(bad)
lahf
mov
std
adc
ret
clc
dec
cld
repz
scas
aas
in
std
jecxz
int3
aas
clc
das
stc
sar
iret
pop
jecxz
cli
xor
test
repnz
dec
(bad)
lock
aas
sti
push
(bad)
xchg
(bad)
jmp
stc
retf
dec
jg
(bad)
out
leave
das
jg
mov
mov
call
pop
(bad)
(bad)
jmp
jg
retf
push
aas
sti
das
sti
and
mov
loop
push
fistp
call
clc
jmp
mov
iret
das
call
(bad)
fdivrp
out
aas
(bad)
(bad)
pop
pop
std
jg
(bad)
(bad)
(bad)
jg
xchg
fistp
repz
inc
jmp
pop
xchg
dec
jmp
jmp
jg
stos
jmp
addr16
addr16
fsubrp
cli
sar
jg
fwait
call
push
(bad)
cld
jg
daa
std
(bad)
mov
std
scas
jg
cli
(bad)
cld
adc
(bad)
cmps
mov
call
fistp
sti
xlat
dec
jmp
jmp
pop
call
jmp
cld
xlat
clc
ud0
jg
mov
std
pop
fistp
(bad)
mov
std
aas
cld
pop
jg
outs
repz
test
imul
fcomip
pop
pop
(bad)
adc
cmc
out
cld
pop
push
cli
(bad)
(bad)
mov
(bad)
fdivr
(bad)
stc
iret
clc
retf
(bad)
mov
xchg
dec
mov
stc
jae
mov
sar
mov
mov
movs
push
aaa
stc
ret
jg
aas
out
jmp
arpl
aas
in
std
xor
and
mov
xlat
(bad)
fsubrp
cmps
jg
cli
sar
sti
ds
std
and
jg
mov
mov
pop
mov
divps
push
(bad)
out
outs
(bad)
jmp
scas
sbb
cld
or
das
mov
cmp
scas
mov
repz
jmp
pop
in
cld
imul
aas
sti
(bad)
out
icebp
loopne
std
ins
(bad)
(bad)
xchg
std
mov
(bad)
aaa
sti
or
mov
(bad)
(bad)
inc
mov
(bad)
cld
(bad)
outs
std
in
scas
jmp
sar
pop
idiv
std
fsubr
(bad)
mov
pop
cmp
mov
xlat
sti
daa
jg
pop
out
pop
stc
cmc
jbe
scas
mov
(bad)
(bad)
rep
call
(bad)
cmps
push
pop
imul
das
jmp
(bad)
cld
retf
jmp
jg
repnz
inc
jg
mov
stc
jg
jg
ret
dec
pop
clc
out
jmp
aas
rep
mov
lahf
stc
scas
(bad)
stos
(bad)
cli
das
sti
xlat
jmp
jg
fistp
outs
(bad)
jno
aam
(bad)
test
pop
jle
jg
(bad)
std
inc
mov
mov
jnp
into
jmp
(bad)
jecxz
in
ja
(bad)
xchg
jmp
outs
std
fwait
(bad)
call
jg
dec
cld
push
jg
jg
ja
(bad)
mov
(bad)
cs
out
cld
dec
lahf
cmc
(bad)
push
(bad)
jmp
hlt
out
xchg
jg
mov
jg
pop
std
sbb
mov
int3
pop
icebp
dec
std
xchg
aas
clc
ret
call
jg
(bad)
cli
xor
xchg
(bad)
fidivr
dec
repnz
mov
scas
pop
std
sar
fbld
(bad)
in
jns
jnp
fdivrp
shr
cmp
in
jg
(bad)
pop
stc
out
out
repz
ds
push
aas
icebp
(bad)
or
repz
(bad)
jl
scas
stc
daa
jg
lahf
jg
outs
cmp
(bad)
(bad)
mov
ret
jg
loope
cld
mov
std
imul
mov
in
sub
mov
mov
in
das
jns
jnp
jbe
cld
iret
push
idiv
cld
sar
cld
cli
sti
mov
(bad)
lahf
clc
pop
call
(bad)
fidivr
sti
addr16
call
scas
stc
hlt
das
jg
stc
ja
loop
cld
gs
stc
mov
loop
jmp
jmp
xchg
push
mov
in
jg
(bad)
call
outs
(bad)
sti
jg
iret
clc
imul
call
repz
pop
hlt
lahf
jg
loop
push
(bad)
cmc
pop
cld
jnp
push
retf
push
das
sti
ud0
jg
psubq
pop
(bad)
fsubr
std
pop
(bad)
mov
je
das
jle
paddb
out
lahf
hlt
cmp
push
jg
lahf
imul
fdivr
sub
ror
xchg
aas
sti
mov
sti
xchg
jmp
ja
jmp
ret
ja
and
cmc
(bad)
outs
cld
test
shr
pop
(bad)
xchg
dec
aas
call
std
cmc
(bad)
repz
jle
pop
out
mov
nop
aas
icebp
push
dec
lods
(bad)
into
jle
push
(bad)
(bad)
inc
mov
iret
scas
sub
mov
repnz
cli
mov
iret
jp
clc
dec
repz
stc
loop
mov
pop
dec
jle
jg
push
(bad)
in
jg
stos
out
lods
jle
lahf
clc
sti
jmp
mov
fbstp
cli
inc
jmp
mov
pop
scas
idiv
(bad)
clc
sti
int
pop
(bad)
in
icebp
xchg
cmp
mov
jle
pop
das
dec
fwait
out
icebp
lahf
cld
pop
(bad)
sti
jg
out
lock
jmp
(bad)
sbb
sar
loop
sti
sbb
inc
mov
(bad)
jmp
imul
iret
jl
scas
mov
jl
repnz
ja
test
cmc
out
icebp
sbb
(bad)
ficomp
daa
mov
loopne
das
pop
iret
jle
aad
out
cld
sahf
mov
mov
std
adc
aas
clc
mov
sti
aad
scas
inc
(bad)
aas
mov
icebp
out
int
(bad)
pop
hlt
imul
addr16
cld
cli
push
mov
(bad)
sahf
lahf
clc
mov
sti
mov
(bad)
push
mov
jg
jne
das
lahf
(bad)
xlat
jg
lahf
ds
or
(bad)
test
div
stc
retf
(bad)
scas
jg
cli
pop
cld
xlat
(bad)
cli
jg
inc
std
(bad)
retf
leave
repz
lahf
stc
fwait
jg
scas
mov
jg
out
cld
paddd
fucomip
out
cld
popf
call
outs
jmp
pop
(bad)
inc
pop
test
jg
ja
outs
push
jg
mov
aas
cld
pop
std
inc
jg
iret
sub
jg
scas
jp
sti
shr
aas
popf
push
pop
(bad)
mov
outs
xchg
mov
outs
cli
mov
aaa
clc
jecxz
test
std
data16
in
clc
psubb
jmp
je
xchg
cld
retf
(bad)
fldcw
in
xlat
stc
mov
aaa
(bad)
push
fdivrp
in
leave
pop
(bad)
mov
std
repnz
cli
pop
sahf
cld
sbb
hlt
(bad)
out
(bad)
sahf
mov
(bad)
shl
(bad)
pop
(bad)
mov
clc
sbb
sbb
fsubrp
repz
cmp
imul
jl
imul
aas
icebp
pop
std
les
fnstcw
mov
jg
pop
sti
pop
jg
iret
(bad)
sar
sahf
jg
aaa
std
retf
(bad)
(bad)
mov
jle
lods
fnstsw
(bad)
cli
jne
(bad)
mov
dec
or
stos
mov
out
std
xlat
dec
fnstcw
cld
fdecstp
stc
fcomip
daa
sbb
fisubr
cli
ja
int
das
std
push
(bad)
lods
outs
std
data16
cli
(bad)
clc
inc
jmp
jg
das
cli
pop
(bad)
idiv
push
imul
pop
repnz
(bad)
cli
out
idiv
scas
icebp
fwait
dec
jg
(bad)
std
sbb
cld
(bad)
jg
outs
cld
sar
mul
fnstsw
iret
sub
jg
scas
stc
sti
dec
dec
fisttp
bnd
mov
repnz
cld
lds
sti
aas
std
xlat
sub
pop
(bad)
imul
push
das
dec
arpl
(bad)
in
mov
call
ja
add
iret
cld
push
jg
push
pop
dec
(bad)
(bad)
in
sti
(bad)
lods
jg
iret
cld
stos
jg
(bad)
cld
pop
sti
aad
ja
mov
icebp
das
cld
(bad)
(bad)
test
xor
aas
fyl2xp1
jnp
mov
mov
mov
lahf
sub
das
sti
aad
cld
(bad)
push
jg
mov
jg
mov
clc
jmp
movs
mov
call
cmp
(bad)
jle
out
pop
repz
dec
outs
cld
out
aas
inc
out
retf
mov
clc
aaa
sti
int
ret
jg
vpperm
(bad)
(bad)
(bad)
pop
push
sub
mov
in
cld
out
dec
push
jle
jg
sti
std
pop
push
mov
jmp
cli
fwait
(bad)
mov
jmp
(bad)
(bad)
(bad)
paddd
out
sti
idiv
popf
jg
stc
idiv
inc
jmp
idiv
(bad)
paddd
mov
cld
fidivr
mov
aas
call
call
stc
repz
pop
clc
out
(bad)
cmp
outs
repz
xor
std
dec
push
hlt
ror
test
clc
das
(bad)
es
fstp
lahf
cli
icebp
fcomip
imul
pop
lock
xchg
cmps
jg
outs
cli
aas
std
sub
outs
lock
into
call
pop
dec
scas
push
jl
mov
pop
in
shr
cli
mov
in
dec
pop
out
in
repnz
xlat
(bad)
scas
(bad)
call
(bad)
test
fnstcw
neg
ud0
pop
cmc
stos
inc
jg
dec
cmp
pop
dec
fcomip
pop
call
(bad)
cmps
aas
loopne
cli
dec
dec
test
(bad)
std
and
(bad)
shr
jg
clc
jnp
in
out
(bad)
jge
lds
mov
fcomip
in
jg
xchg
(bad)
fistp
cmp
jg
(bad)
cli
popf
pop
sti
sar
loopne
mov
aas
inc
jmp
push
jmp
lds
aas
dec
retf
fucomp
jg
js
(bad)
std
lods
fnstcw
sti
cmp
mov
hlt
scas
push
mov
cld
aad
jle
sbb
jae
mul
mov
push
mov
loope
sti
aad
jo
idiv
jecxz
mov
cld
sub
cmc
mov
bnd
hlt
(bad)
sti
(bad)
xchg
push
mov
mov
rcr
inc
inc
(bad)
sbb
sub
dec
dec
in
iret
std
test
retf
hlt
mov
lahf
pop
daa
jg
loop
cli
stos
jg
pop
sti
repz
dec
jg
push
movsx
cmc
jmp
repnz
xchg
cld
sar
pop
cld
pop
dec
fcomip
leave
(bad)
mov
jle
mov
inc
inc
cmp
(bad)
jg
addr16
push
(bad)
or
pop
std
and
(bad)
cld
mov
jl
xchg
cmp
cld
add
idiv
(bad)
mov
push
jne
stc
(bad)
(bad)
pop
aas
cmc
sbb
push
stos
lahf
dec
out
jg
lock
cmp
jge
ret
pop
repz
(bad)
mov
sub
xchg
push
scas
(bad)
fild
sar
cld
ins
fdivrp
daa
leave
pop
hlt
aas
cld
sub
paddw
cld
and
scas
std
xor
test
jg
scas
cld
ins
inc
mov
hlt
popf
lahf
(bad)
xchg
inc
lea
cld
aaa
cld
movq
(bad)
jmp
cli
outs
clc
sti
(bad)
jmp
cmp
pop
cld
pop
jmp
out
cli
pop
(bad)
(bad)
mov
(bad)
sahf
jg
out
std
pop
pop
call
mov
dec
jg
lahf
cli
jmp
fwait
(bad)
cld
popf
out
inc
outs
inc
mov
mov
jmp
scas
cmc
cmp
mov
jge
sar
sbb
ins
jg
lahf
lock
mov
jmp
aam
(bad)
aas
(bad)
pop
fstp
dec
(bad)
jmp
add
jmp
cli
jmp
(bad)
mov
movs
(bad)
(bad)
cmp
(bad)
fisttp
(bad)
jg
cli
jmp
call
push
in
jg
fucomip
xlat
dec
jle
(bad)
xlat
cld
mov
div
(bad)
mov
ret
pop
push
int
(bad)
leave
scas
xor
xor
imul
xlat
sub
lahf
(bad)
xor
scas
mov
xor
imul
mov
mov
cld
xor
mov
sbb
xlat
js
imul
pop
jecxz
scas
icebp
stc
scas
icebp
in
pop
jecxz
xlat
clc
into
scas
icebp
jnp
sbb
jg
das
jle
pop
mov
retf
pop
jecxz
jle
push
mov
int
icebp
aad
icebp
xchg
mov
(bad)
xlat
clc
jge
lea
(bad)
fstp
out
xlat
mov
sbb
jg
dec
jg
pop
mov
nop
jo
mov
iret
pop
xchg
cmc
push
stc
fwait
(bad)
sbb
clc
xor
mov
xor
mov
xor
mov
xor
ja
xor
ja
xor
pop
cld
sbb
(bad)
sbb
scas
icebp
pop
call
jg
scas
icebp
xchg
sbb
scas
icebp
inc
cld
sbb
scas
icebp
inc
std
sbb
scas
icebp
(bad)
cld
sbb
scas
icebp
(bad)
std
sbb
scas
icebp
daa
cld
sbb
scas
icebp
daa
std
sbb
scas
icebp
cmps
cld
sbb
scas
icebp
cmps
std
sbb
scas
icebp
addr16
sbb
scas
icebp
addr16
sbb
scas
icebp
out
sbb
scas
icebp
out
sbb
scas
icebp
pop
cld
sbb
scas
icebp
mov
icebp
fstp
std
out
jmp
(bad)
inc
push
cmc
mov
out
(bad)
not
dec
mov
aad
les
jmp
jmp
std
mov
in
dec
(bad)
pop
popf
iret
xchg
jmp
xchg
jg
mov
neg
sub
cld
lds
fucomip
repnz
push
sti
pop
repz
cli
repz
rcr
jg
jge
xchg
out
cld
inc
mov
aas
loop
jg
scas
cld
lea
mov
in
cld
scas
cmp
imul
std
mov
imul
mov
sar
dec
bound
xlat
clc
cmp
iret
icebp
jl
(bad)
(bad)
jnp
inc
mov
jmp
imul
idiv
in
daa
mov
jg
not
add
mov
mov
add
or
pop
lahf
sbb
cld
cld
cmp
shr
cmps
cld
(bad)
sbb
mov
xor
scas
xchg
add
mov
test
iret
out
(bad)
outs
mov
mov
out
xor
mov
mov
jmp
add
imul
cmps
outs
xchg
and
jge
outs
mov
lahf
les
xlat
sar
cli
cld
test
sub
mov
retf
scas
icebp
imul
cmp
into
jb
neg
repz
repnz
repnz
scas
jbe
xchg
mov
test
call
seta
mov
std
out
test
out
adc
jecxz
dec
jecxz
sbb
sahf
mov
ja
pushf
dec
jg
ucomiss
jg
fist
rcr
ja
jg
push
cld
call
pop
jle
repz
pop
jge
lock
cmc
inc
nop
push
xchg
icebp
xchg
(bad)
fist
sar
rep
fbstp
aad
pop
dec
mov
jle
cmp
cld
push
or
jmp
in
mov
xor
std
cmp
sbb
or
inc
jl
lods
jle
hlt
inc
cld
cmp
dec
cmps
addr16
out
sub
ins
movs
aaa
ret
rcl
outs
or
mov
jae
ret
add
out
xchg
push
das
dec
jno
call
test
sub
push
loop
adc
out
in
mov
aas
mov
push
in
(bad)
std
sar
rep
stc
pop
cmc
cmp
mov
ins
add
sub
cmc
xchg
addr16
xlat
clc
xor
stc
sti
pop
cs
in
xor
mov
mov
jmp
aas
add
std
shl
add
cmp
mov
out
and
imul
test
ja
adc
mov
(bad)
in
jnp
adc
xor
(bad)
sar
jg
mov
cld
xchg
fbstp
mov
ds
inc
js
pop
sbb
fucomip
arpl
jg
and
out
xlat
clc
shl
inc
out
sti
jne
mov
(bad)
push
(bad)
repnz
iret
dec
lahf
inc
add
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
add
jle
add
add
fadd
add
and
jb
outs
addr16
add
add
add
add
and
dec
inc
add
add
add
xchg
add
add
inc
ins
outs
bound
add
aam
add
jl
add
and
add
add
add
add
add
add
or
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
push
add
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
xchg
push
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
add
add
add
mov
add
add
add
mov
add
add
cdq
add
add
add
or
xor
xchg
add
add
add
add
add
add
add
popa
add
dec
add
add
add
push
add
mov
add
pusha
add
jge
data16
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
ins
popa
push
popa
fs
ins
jae
outs
jb
imul
gs
add
inc
outs
popa
push
xor
dec
pop
ins
arpl
jo
xor
dec
inc
xor
dec
push
jne
inc
ja
pop
xor
fs
push
jns
push
xor
pop
push
xor
inc
jae
inc
inc
ja
push
dec
jae
push
dec
jb
pop
ins
xor
je
bound
jne
push
js
add
jo
outs
ins
popa
imul
add
outs
jbe
jb
add
imul
ins
add
je
xor
dec
outs
je
je
add
outs
popa
jb
push
gs
fs
push
jns
je
ins
cs
dec
add
ins
jo
gs
imul
add
jae
gs
cs
dec
cs
outs
ins
jo
gs
imul
ins
popa
je
push
je
gs
ins
add
jb
popa
ins
add
push
arpl
jae
gs
bound
push
jns
je
ins
cs
gs
arpl
outs
add
jae
ins
bound
popa
ins
add
jae
ins
jbe
inc
jbe
outs
je
jb
jae
push
gs
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
inc
jbe
fs
arpl
push
jns
je
ins
cs
arpl
imul
arpl
push
push
inc
push
push
inc
je
jb
bound
add
jb
outs
add
arpl
imul
je
ins
cs
gs
add
imul
ins
gs
xor
push
push
xor
inc
inc
imul
arpl
push
cmp
je
jb
addr16
inc
jne
jb
outs
je
outs
ins
popa
imul
inc
jae
gs
bound
gs
ins
jbe
add
arpl
gs
jae
gs
bound
jns
popa
ins
add
je
inc
gs
jne
je
addr16
dec
popa
ins
add
outs
ja
jb
outs
jbe
jb
popa
outs
je
inc
gs
jns
gs
push
outs
inc
popa
jae
ss
je
imul
inc
js
arpl
imul
ins
bound
inc
gs
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
popa
fs
outs
je
xor
push
gs
fs
jns
gs
dec
outs
popa
add
jo
jae
add
cmp
jo
jb
dec
sub
jno
push
jno
dec
pop
ja
cmp
je
jno
push
cmp
imul
ins
outs
push
inc
addr16
xor
inc
push
bound
pop
pop
dec
bound
dec
ja
gs
cmp
add
sub
inc
dec
les
inc
mov
inc
mov
pop
push
sbb
mov
and
add
add
add
sbb
add
cmp
push
or
add
adc
add
add
dec
add
add
add
push
add
add
xor
push
add
sub
and
or
and
add
sub
and
or
add
adc
sbb
or
adc
sbb
cmp
push
add
add
add
pop
add
pop
add
sub
adc
jns
add
push
add
and
jbe
add
jae
imul
cmp
add
add
add
add
add
add
and
arpl
jne
ins
add
add
add
add
je
jb
popa
add
add
add
jne
bound
ins
add
arpl
imul
add
je
outs
add
add
cmp
add
add
add
add
push
mov
add
add
dec
mov
add
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
