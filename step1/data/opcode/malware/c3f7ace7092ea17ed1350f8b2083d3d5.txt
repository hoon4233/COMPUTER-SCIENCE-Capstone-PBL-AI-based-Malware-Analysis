cs
inc
inc
add
pop
inc
outs
outs
ins
gs
outs
add
add
fwait
out
(bad)
inc
gs
jb
gs
push
jns
je
ins
add
xor
or
outs
jae
inc
push
add
sbb
sbb
or
add
push
add
dec
outs
inc
addr16
sbb
repnz
pop
add
jns
cwde
pop
jge
popa
pop
push
outs
jb
inc
mov
pop
push
outs
imul
add
popa
adc
scas
add
sbb
dec
popa
je
bnd
fdiv
jge
sbb
or
cmp
cmp
adc
or
in
scas
fstp
jb
addr16
adc
push
clc
fcomp
ja
xor
xor
push
jae
fucomip
in
mov
or
cmp
adc
push
push
inc
ins
popa
jae
mov
adc
fld
push
dec
push
xchg
pop
push
add
fdiv
fiadd
add
shl
inc
jb
sar
xor
sar
or
lock
js
je
and
outs
jo
inc
jno
imul
add
nop
ins
add
gs
adc
ins
frstor
or
xor
sub
add
aas
ss
sbb
push
add
out
cmp
mul
gs
or
adc
sbb
andps
paddsb
stc
nop
adc
jne
loope
dec
adc
lods
adc
push
push
push
popa
bound
cmps
fstp
mov
fs
dec
(bad)
jmp
mov
clc
adc
or
jo
inc
test
pop
add
mov
adc
fimul
push
or
int
(bad)
cmps
inc
outs
jne
ins
test
pop
in
imul
ins
jnp
xchg
or
xchg
popf
cmp
js
jo
mov
call
clc
je
out
xor
cmp
add
inc
int
lock
inc
in
leave
data16
adc
pop
push
inc
or
enter
shl
or
dec
vpmadcsswd
inc
push
sbb
and
xchg
cmc
inc
mov
pop
dec
add
dec
in
mov
dec
stc
(bad)
jns
stc
mov
cli
mov
daa
sti
jmp
sbb
jmp
sbb
sahf
mov
dec
sbb
pop
dec
sbb
push
dec
bound
arpl
sbb
inc
jb
call
sbb
cmp
loope
sahf
push
gs
xchg
and
and
add
and
add
adc
ficom
retf
es
arpl
and
xlat
sub
ficomp
lea
pop
es
fld
cmovae
jo
ins
xchg
or
fdivr
adc
add
ins
xchg
inc
adc
inc
adc
add
cmp
push
inc
or
dec
dec
jae
adc
out
add
cmp
add
push
out
or
(bad)
xlat
xchg
cmp
in
sbb
outs
sub
sub
push
adc
pop
fdivr
push
imul
inc
in
ret
push
outs
ins
mov
add
cmp
jge
shl
add
or
inc
fs
pop
dec
mov
jae
lods
adc
adc
mov
shl
dec
mov
cmp
lahf
or
xor
pusha
nop
inc
mov
cmp
fsub
adc
dec
fs
mov
lea
inc
aaa
ins
lods
mov
retf
imul
test
or
and
sbb
bound
test
fs
nop
and
or
jno
sbb
cmc
fcmovnb
push
jb
adc
xor
sbb
add
mov
outs
fwait
inc
xor
inc
sbb
mov
jge
xor
ror
arpl
bound
es
ins
or
dec
xlat
adc
or
push
outs
dec
and
les
jnp
data16
outs
push
lock
or
sub
gs
ins
mov
ins
inc
js
imul
add
(bad)
int
ror
sub
adc
ret
cdq
loop
arpl
dec
dec
xchg
xor
gs
add
pushf
mov
jae
loopne
mov
repz
out
ret
mov
pop
dec
ret
mov
aaa
fimul
arpl
jne
push
outs
fs
mov
ds
dec
gs
mov
push
or
sub
pop
mul
inc
bound
retf
outs
jns
xor
dec
xor
loop
add
gs
xchg
xchg
xor
fsub
int3
sbb
mov
out
(bad)
sbb
in
or
enter
cld
imul
test
or
or
loopne
std
or
adc
dec
imul
shl
push
fistp
adc
popf
sbb
adc
hlt
push
cdq
or
sub
aaa
add
shl
movs
sbb
xchg
sub
adc
push
mov
scas
dec
imul
sbb
xchg
out
leave
(bad)
pop
sbb
pop
data16
enter
gs
xchg
clc
xchg
in
dec
jns
or
popa
je
xchg
mov
test
or
push
sbb
xchg
jnp
pop
pop
sub
mov
cwde
cmps
sbb
jle
fs
loopne
iret
int3
test
mov
and
fnstsw
pushf
sbb
or
push
mov
mul
ret
jmp
in
sbb
repnz
pop
add
push
and
retf
or
sbb
cmp
and
and
sbb
inc
ins
fldenv
pop
adc
call
mov
sbb
jge
dec
adc
push
adc
dec
jne
bound
cli
push
jae
test
pop
jb
popa
or
popa
popf
mov
adc
adc
sbb
dec
nop
jmp
ins
aaa
lahf
mov
pop
cmp
or
enter
and
xor
and
sbb
xor
and
and
and
cmp
add
cld
and
hlt
sbb
lock
call
in
fcom
aam
inc
push
sbb
pushf
push
sbb
nop
mov
sbb
(bad)
rol
mov
mov
mov
and
(bad)
mov
push
adc
je
movzx
and
fisttp
ret
lea
fdiv
add
xor
mov
xchg
cmp
inc
popa
pop
dec
dec
and
fmul
xor
packsswb
xor
imul
and
xor
xor
sub
push
hlt
retf
push
mov
dec
and
imul
aam
and
jo
jbe
outs
arpl
dec
ins
xor
popa
imul
push
mov
fdivr
and
arpl
fs
push
xor
push
sub
and
dec
mov
imul
or
push
pusha
popf
mov
aas
data16
fs
mov
mov
inc
cmp
addr16
jae
add
cld
lods
fild
outs
ja
add
repz
ret
dec
es
les
pop
jle
jg
lock
inc
mov
mov
mov
mov
dec
add
inc
or
pop
rcl
add
inc
enter
or
mov
retf
out
sub
adc
sub
sbb
sub
push
ins
gs
mov
and
and
jp
add
adc
gs
mov
pop
and
sub
fst
ss
and
mov
xchg
xor
sub
xchg
gs
xor
cmp
xchg
int
mov
das
xor
inc
out
push
pop
pop
inc
xor
add
add
neg
jns
fistp
jl
add
sub
adc
adc
mov
inc
das
fstp
and
adc
add
cmp
ror
cld
push
fiadd
mov
shr
movzx
mov
and
out
fsubr
add
fs
rcl
add
jnp
sbb
sub
jmp
(bad)
(bad)
sbb
and
add
dec
mov
cmp
mov
or
add
ins
not
(bad)
shl
or
popa
loopne
imul
or
aaa
mov
ret
inc
cld
add
or
adc
dec
add
jg
push
add
cmp
movs
das
mov
jp
and
push
jb
rcl
dec
inc
sbb
bound
mov
xor
fdiv
in
cmp
shr
adc
push
adc
fist
adc
dec
ror
mov
jbe
mov
mov
icebp
sub
pop
call
retf
mov
jnp
std
sub
mov
mov
rol
mov
shl
cmp
cmp
jmp
or
fsubr
and
mov
cmp
sbb
sbb
sar
push
push
push
mov
lea
mov
sub
int
push
leave
(bad)
(bad)
pop
jecxz
(bad)
mov
or
ja
jnp
outs
fimul
shl
add
sbb
dec
fstp
mov
pop
pop
pop
pop
(bad)
inc
iret
out
arpl
fmul
cmp
sbb
mov
mov
push
and
push
or
ret
sbb
sbb
add
push
cmp
add
(bad)
jmp
outs
(bad)
in
aas
or
cmp
in
punpckhdq
mov
push
clc
(bad)
(bad)
cmp
sub
mov
cmp
jbe
sub
add
jmp
test
jne
pop
(bad)
xlat
(bad)
arpl
nop
add
outs
repnz
movs
mov
add
nop
mov
loopne
repnz
adc
and
outs
je
mov
dec
ficomp
add
mov
add
mov
(bad)
jbe
jmp
adc
jnp
mov
push
mov
fbstp
jo
fs
mov
aad
(bad)
sbb
outs
or
shl
mov
add
dec
and
sbb
cmp
std
jae
push
jecxz
or
push
out
sub
adc
jo
dec
lea
rol
pop
or
xor
sub
lds
sub
mov
jbe
ret
sub
mov
or
ret
jecxz
xchg
mov
push
push
clc
jbe
jmp
repz
inc
sub
ja
jmp
movs
inc
jg
and
cmp
into
test
cmp
and
pop
js
push
add
add
cmps
fisttp
hlt
ja
add
push
lea
(bad)
sbb
pusha
mov
push
mov
mov
fbstp
pop
cmp
rol
xchg
dec
popa
lods
sbb
addr16
(bad)
adc
jg
sbb
add
sar
adc
jbe
mov
sbb
jbe
jae
pop
dec
cli
pop
or
or
ss
xor
lahf
xchg
pop
cwde
nop
retf
or
pause
jge
in
cmp
cmp
test
sbb
leave
xchg
cmp
lods
push
jno
ss
push
mov
pop
jbe
xchg
out
or
movsx
clc
jg
jae
xor
mov
add
test
jl
jnp
adc
(bad)
mov
cmp
add
fcmovnb
(bad)
ja
push
test
add
cmp
jne
mov
push
ret
test
btr
mov
stos
jle
pusha
or
ins
mov
es
mov
jg
push
sub
lea
fbld
pop
inc
push
pop
cmp
jb
mov
fst
push
lea
js
ss
(bad)
sub
mov
push
mov
mov
pop
mov
pusha
adc
cmp
mov
test
push
mov
mov
mov
lea
mov
lods
push
adc
or
iret
mov
mov
cld
outs
inc
dec
jb
pop
dec
sub
shl
pop
add
or
outs
mov
jecxz
fnsave
popa
jne
lea
xor
or
sbb
sub
je
loope
loopne
test
imul
daa
cdq
lods
push
inc
call
call
mov
loopne
xor
or
sub
cdq
test
lock
xor
pop
mov
daa
adc
mov
pop
scas
test
retf
sbb
cmp
(bad)
sbb
retf
xchg
rol
sub
pop
shl
jns
cmp
jb
enter
dec
add
cmp
pop
mov
push
push
pop
push
cld
xchg
jg
enter
sbb
mov
jne
sub
fwait
or
imul
inc
ins
pop
xor
dec
rcl
xchg
push
push
push
mov
push
cmp
push
outs
adc
xchg
mov
popf
push
inc
or
cmp
aam
xchg
sub
mov
sbb
arpl
jmp
outs
sbb
into
sbb
jmp
sbb
jb
or
and
in
data16
add
lock
mov
push
mov
jne
test
xor
mov
ror
inc
push
jne
cmp
jbe
push
lea
inc
pop
xor
dec
mov
cmp
test
imul
sbb
lock
cmp
das
sbb
mov
into
push
mov
sbb
sbb
sub
or
loop
mov
iret
rcl
jnp
xor
cmp
sbb
lea
mov
inc
cld
pop
mov
sbb
ret
pop
add
clc
jmp
test
mov
sbb
mov
xchg
loop
retf
jb
cmp
fist
add
(bad)
(bad)
rcl
push
jg
(bad)
arpl
mov
jno
rol
mov
mov
and
push
jnp
sbb
clc
addr16
(bad)
call
inc
retf
push
clc
call
cmp
add
aas
dec
or
leave
cvttps2pi
cmp
dec
loop
jb
lea
cmc
sub
fsubr
jae
pop
int3
xor
add
adc
xor
mov
jbe
lea
xor
xor
sahf
inc
cmp
das
push
ds
and
or
or
inc
jge
pcmpgtb
pop
cld
or
mov
mov
rcr
sbb
or
pop
nop
into
push
popa
nop
ficomp
rol
xlat
xchg
add
sbb
aas
inc
inc
cs
dec
push
or
and
sbb
fiadd
aaa
pop
inc
jae
lock
outs
loope
xor
xor
fsubr
lea
add
cmp
daa
fisttp
out
xor
popf
lods
movs
imul
jbe
jmp
je
addr16
mov
inc
push
ret
or
das
fisub
mov
shr
enter
or
mov
adc
in
test
and
shl
push
ret
and
pop
push
mov
mov
jl
cld
in
arpl
sub
add
or
mov
pop
adc
and
imul
xor
cmp
sbb
push
clc
ds
and
rcr
je
and
pop
test
cld
dec
das
jno
inc
outs
ins
adc
or
jg
jae
neg
fldz
fst
inc
in
jmp
fincstp
mov
test
jp
adc
add
nop
dec
std
in
push
mov
inc
movs
sahf
aad
daa
imul
mov
cdq
pop
(bad)
fist
adc
rcl
push
or
push
add
aam
jo
test
mov
or
push
push
pop
pop
pop
adc
shr
hlt
mov
jns
and
pop
inc
add
fmul
test
add
(bad)
jmp
popf
mov
xchg
fisub
pop
add
add
clc
inc
cmps
add
mov
adc
test
aam
sbb
sub
xor
icebp
mov
fstp
inc
(bad)
or
jns
ror
(bad)
inc
and
and
mov
xor
or
sub
or
jmp
mov
jbe
movs
jne
mov
push
in
cmp
ja
mov
(bad)
hlt
or
push
lock
xor
jb
jp
push
inc
or
ds
fisttp
add
push
or
adc
mov
out
or
inc
clc
not
stc
add
das
shl
pop
pop
push
add
adc
mov
adc
aam
xor
push
fwait
shr
fadd
rsqrtps
sar
ins
pop
(bad)
mov
mov
sub
xchg
test
and
(bad)
and
jge
imul
push
int3
ins
rcr
inc
pop
sub
in
xchg
mov
mov
adc
push
sub
and
in
mov
cld
cld
clts
jl
jge
cli
cmp
jle
add
rol
fisub
mov
add
jbe
and
mov
aas
mov
sbb
icebp
adc
dec
add
mov
cld
cli
pop
lock
movntps
pop
mov
dec
adc
es
mov
cmp
jne
outs
in
mov
adc
mov
adc
mov
mov
outs
dec
add
dec
jne
push
stos
jmp
xor
pop
xor
add
pop
push
mov
or
lea
mov
addr16
jbe
cwde
imul
div
pop
mov
jae
push
call
cmovb
ficomp
rol
and
clc
test
sub
jbe
in
pop
and
lea
cmp
outs
mov
add
or
add
mov
dec
(bad)
mov
add
idiv
cmp
sbb
mov
cmp
dec
lods
aam
lahf
ror
sbb
mov
or
cmp
aad
cmp
jae
ins
pop
ds
add
dec
fdiv
push
jno
popf
fwait
popa
test
nop
xchg
ret
jle
jmp
dec
call
in
call
adc
dec
iret
(bad)
and
dec
das
mov
outs
test
mov
cmp
je
add
fist
in
pop
jg
mov
fs
push
neg
inc
out
jle
cmp
out
loop
jbe
adc
int3
(bad)
mov
les
ss
fwait
sti
push
dec
jne
xor
not
lea
mov
cmps
leave
xchg
fld
and
fadd
inc
add
sbb
movs
bound
pop
cmp
mov
add
and
jb
call
loope
(bad)
pcmpeqw
add
or
cmps
mov
cmp
pushf
rol
mov
pop
lock
and
mov
jb
and
fsubr
pop
jo
xchg
sbb
adc
aas
ffreep
jno
jne
mov
sub
loopne
jb
mov
jmp
and
push
jb
adc
jae
jb
enter
dec
push
mov
test
in
ins
movs
jl
cmp
pop
scas
call
fwait
call
xchg
fadd
push
and
mov
or
bound
pop
cld
dec
ja
test
imul
mov
and
pop
neg
add
adc
xor
push
cmp
fidivr
dec
mov
clc
fnstsw
mov
(bad)
pop
cmp
and
fnstenv
sub
push
bound
inc
add
xchg
mov
and
pop
and
bound
fisubr
sbb
or
sub
cmp
add
jmp
dec
fdiv
mov
adc
sub
push
push
sbb
aad
fdivr
mov
cmp
fs
xchg
retf
nop
lods
imul
jmp
pop
loopne
enter
fistp
or
int3
jle
test
jne
or
sub
xchg
and
lock
mov
jle
push
test
pop
mov
ret
mov
dec
mov
xor
pop
std
xchg
leave
dec
pop
ret
jmp
(bad)
(bad)
pop
push
sbb
dec
jne
dec
pop
mov
xchg
gs
push
adc
pusha
test
pop
pmuludq
loop
(bad)
sub
jle
mov
jl
test
sbb
add
and
jbe
leave
add
clc
jbe
mov
mov
int
in
cmp
jne
inc
ret
pop
(bad)
mov
cmp
fcom
add
push
push
in
inc
lock
in
adc
hlt
cld
xchg
sbb
inc
mov
fstp
inc
add
xor
mov
add
push
mov
push
pop
jbe
pop
fcmovnu
loopne
repz
loop
push
in
or
push
jg
push
(bad)
call
sbb
loope
lea
add
leave
loope
shl
int3
sar
push
or
jbe
sub
ror
xlat
jne
ins
imul
data16
data16
jg
test
(bad)
in
sub
sbb
add
mov
push
mov
mov
jne
cmp
or
mov
add
jmp
(bad)
sub
mov
jle
loopne
movs
push
int
clc
lahf
push
mov
cmp
jne
mov
ins
call
or
or
inc
adc
push
sub
mov
mov
dec
inc
rol
dec
push
cs
stos
fstp
add
jnp
pop
ds
jle
idiv
xrelease
mov
dec
mov
cmp
int3
out
sti
adc
mov
cld
or
bound
mov
and
mov
call
fdivr
or
les
loopne
test
adc
add
ret
push
sub
inc
mov
mov
add
push
mov
leave
je
sahf
je
push
retf
imul
pop
or
neg
push
inc
and
jmp
pop
mov
shr
ret
inc
out
out
mov
mov
cmp
ds
daa
adc
stos
(bad)
pop
or
scas
or
and
fwait
rcl
push
nop
ret
push
or
adc
movs
lahf
and
add
inc
loopne
ins
das
cmp
jecxz
cmp
or
jnp
or
mov
xchg
cli
lahf
or
jo
mov
cwde
mov
into
mov
sub
sub
aas
mov
sub
or
sbb
sbb
push
rol
sub
out
cmp
into
pop
jnp
and
in
jne
gs
fst
call
cmp
je
cmp
ja
sub
jg
jmp
push
outs
sbb
jle
rol
inc
cmp
adc
lds
popa
add
sub
call
pop
mov
push
inc
lea
lea
or
fld
jle
or
jl
dec
pop
std
imul
inc
repz
xchg
sub
add
enter
(bad)
mov
add
and
sub
das
mov
scas
data16
mov
add
pop
ins
ins
push
xor
add
iret
cmp
adc
add
add
sub
mov
add
fbstp
jbe
ret
pop
imul
scas
sbb
pop
jbe
fisttp
daa
dec
dec
add
sub
imul
js
add
(bad)
shr
imul
pop
lods
js
pop
scas
ror
pop
cmp
mov
mov
addr16
adc
sub
sbb
cs
outs
retf
data16
inc
cmp
mov
fild
jp
xlat
or
jne
xor
fcom
push
lods
jecxz
or
(bad)
dec
mov
outs
jae
test
mov
pop
add
cmp
mov
jl
sar
dec
add
mov
jmp
fld
fst
fst
xor
sub
repz
xor
or
or
add
neg
push
mov
jl
xor
xor
dec
jl
sub
lods
aas
shl
add
loop
dec
sbb
sbb
xor
sbb
adc
adc
dec
shl
or
dec
aas
push
jmp
(bad)
push
dec
mov
cwde
movs
pop
sbb
out
out
fistp
(bad)
and
mov
pop
sub
out
out
je
and
je
je
pop
je
loope
xchg
in
xor
xor
push
push
ins
out
outs
pop
mov
adc
xor
mov
rol
daa
cmp
rol
xor
sbb
push
push
loopne
int
test
jmp
in
movs
(bad)
ja
jmp
neg
jle
js
pop
sub
pop
inc
es
mov
pop
and
je
ret
mov
jb
pop
and
push
or
ss
ret
ret
or
xchg
add
pop
in
imul
not
daa
ds
and
jo
cld
cmp
pop
push
jle
push
mov
pop
or
fld
cmp
mov
pop
scas
mov
mov
inc
inc
mov
sub
in
jge
inc
stc
xor
jg
sahf
stc
sbb
jmp
fstp
fld
or
jmp
or
out
mov
fwait
clc
(bad)
adc
jg
cs
and
shr
pop
fadd
fninit
fldcw
add
mov
mov
out
mov
xchg
mov
ins
pop
push
push
aad
adc
arpl
test
mov
inc
mov
xor
or
push
xor
cld
push
addr16
or
mov
mov
pop
pop
pop
inc
adc
and
sbb
jnp
inc
cld
ret
xchg
cmp
jmp
jle
pop
int
add
xor
add
(bad)
ret
or
sub
dec
add
push
mov
adc
adc
mov
cs
paddsb
push
inc
mov
pushf
lock
add
sar
mov
shr
or
jbe
iret
push
xor
or
push
push
arpl
ror
test
shr
mov
or
inc
inc
cmp
(bad)
and
or
jp
sahf
fstp
je
jle
sbb
pop
mov
pop
jno
fsubr
call
(bad)
mov
int3
mov
xlat
dec
rep
pop
sbb
repz
jbe
stos
sub
loop
lods
outs
add
inc
cwde
mov
rol
shr
cmp
je
mov
ss
or
div
dec
push
jnp
mov
nop
sbb
jecxz
jg
or
push
(bad)
mov
mov
mov
(bad)
mov
mov
pop
dec
mov
test
das
mov
ror
jae
pop
(bad)
sbb
mov
gs
frstor
adc
xor
loopne
mov
dec
aaa
cs
mov
pop
or
mov
nop
prefetch
add
xlat
enter
jge
mov
jp
ins
xor
add
mov
mov
push
cmp
push
jl
in
test
push
sbb
sub
ja
adc
sub
ret
daa
(bad)
outs
jo
scas
cmp
xor
inc
xor
addr16
ret
pop
jae
jnp
inc
lods
js
js
mov
cmp
(bad)
cmp
adc
or
or
fwait
and
and
lds
adc
lods
daa
push
add
inc
inc
mov
fs
pop
sub
xor
inc
shl
enter
cmp
je
ja
lods
push
lock
push
sar
cmp
adc
ins
(bad)
dec
dec
mov
inc
sub
cmp
dec
push
mov
cmp
pop
lock
cmp
cmp
inc
leave
pop
inc
sub
sub
pop
sti
cmps
push
or
sbb
add
mov
xchg
mov
mov
cmp
mov
ret
mov
mul
push
mov
lock
ret
pop
adc
bound
or
out
mov
leave
cmp
pop
mov
fmul
mov
fbld
jno
or
xchg
cmp
ds
jae
push
pushf
and
inc
or
mov
into
pop
jo
lock
jl
sar
push
mov
adc
(bad)
inc
cmp
push
shrd
pop
push
and
fadd
and
pop
xchg
mov
push
push
dec
test
xchg
xor
sar
push
xor
xor
mov
sbb
jo
or
ds
push
lods
mov
cmp
popf
adc
add
dec
jne
jnp
out
adc
jmp
cs
lea
iret
lds
outs
push
je
jge
pop
mov
xor
test
jne
xor
pop
(bad)
rol
sbb
fbstp
mov
(bad)
fwait
xchg
test
or
pop
sbb
fild
and
dec
ret
call
iret
pop
scas
rcr
stos
pop
call
jmp
fisubr
test
(bad)
add
push
leave
pop
mov
dec
cli
pop
sub
test
neg
idiv
fild
cli
out
cmc
repnz
jbe
pop
jmp
sub
out
sbb
jge
inc
push
jecxz
iret
push
pop
dec
dec
or
out
xor
mov
cdq
jl
jle
xor
sti
pop
std
(bad)
cld
and
mov
mov
imul
into
mov
or
pop
xor
cmp
sub
or
push
mov
outs
dec
mov
push
rcr
xchg
loop
mov
inc
pop
adc
push
clc
retf
add
test
adc
sbb
iret
push
dec
xor
scas
and
pop
adc
and
and
adc
or
arpl
or
mov
add
mov
or
cmp
aad
add
jnp
mov
inc
add
add
mov
stos
jo
add
push
dec
add
fadd
arpl
jbe
sbb
xchg
cli
in
push
call
movs
jnp
xlat
push
test
sbb
fstp
dec
pop
add
add
fiadd
push
out
fcmovu
icebp
sbb
mov
cmp
mov
(bad)
sbb
rol
add
add
cmp
cmp
loope
lods
add
push
ret
or
pushf
pop
loop
cs
adc
fcom
pop
jne
idiv
test
mov
out
adc
scas
jo
shr
in
mov
mov
dec
ins
push
addr16
mov
std
push
or
jmp
inc
cmp
je
jg
and
ds
cs
and
in
push
push
pcmpgtb
pop
cmp
das
jp
(bad)
icebp
nop
iret
xchg
or
add
adc
add
je
adc
inc
lods
dec
outs
mov
loopne
addr16
xchg
ficom
movs
dec
pop
mov
data16
sbb
cmp
idiv
mov
ins
mov
add
lock
push
out
inc
add
sub
jecxz
ins
or
nop
cmp
or
ret
sbb
inc
movntps
pop
js
xor
nop
cmp
xor
xchg
mov
cmp
jle
and
xor
sub
push
cmps
push
mov
(bad)
adc
stos
je
mov
inc
jo
gs
or
xchg
js
xchg
stos
or
in
inc
pop
push
push
push
push
(bad)
mov
cmp
push
push
push
push
or
cmp
jo
add
or
in
retf
push
pop
imul
xor
mov
push
je
dec
or
cmp
push
pop
and
mov
mov
(bad)
(bad)
aas
jnp
mov
inc
or
pusha
add
(bad)
loope
cmp
in
fcom
in
rol
pop
mov
pop
or
mov
aad
xchg
mov
mov
loop
call
add
(bad)
std
jg
je
cmp
push
sub
call
inc
dec
je
jmp
add
call
xor
push
cmp
jg
adc
xchg
and
add
cmp
jge
das
daa
cmp
enter
aaa
fdivr
outs
inc
es
jmp
mov
jmp
bndldx
cmc
mov
into
jmp
mov
out
(bad)
or
sub
mov
loopne
arpl
inc
lahf
hlt
loop
fmul
call
sub
xchg
jl
dec
pop
movs
cmp
and
adc
sbb
shl
xchg
push
cli
xor
push
pop
jae
and
outs
or
sbb
ret
add
push
sub
mov
adc
jmp
sub
pusha
push
xor
mov
push
add
sub
ins
jne
push
push
mov
sub
sbb
pop
add
add
imul
stc
push
cmp
jne
test
out
cwde
rol
fwait
mov
mov
adc
mov
dec
mov
and
sbb
sbb
lods
imul
pop
mov
xchg
jg
push
jmp
dec
rcl
aas
push
add
push
jbe
pop
mov
shl
cmp
jle
cmps
xor
inc
outs
imul
xchg
jl
sti
jg
mov
add
jmp
pusha
mov
js
push
mov
rcr
add
inc
or
add
jae
or
dec
pop
mov
(bad)
mov
dec
mov
push
in
lds
push
pop
push
enter
dec
dec
cmp
push
sub
inc
inc
nop
ins
mov
ins
sub
push
push
cmp
xlat
sbb
mov
push
add
mov
fisttp
ds
dec
mov
bswap
sub
test
push
push
shr
inc
pop
or
fst
pop
lahf
inc
push
inc
add
sbb
inc
or
iret
mov
pop
loop
adc
add
sub
test
mov
pop
adc
mov
fwait
mov
and
and
cmps
or
mov
mov
mov
js
addr16
cmp
mov
and
movs
sbb
(bad)
out
push
push
xchg
rol
or
pop
jmp
pop
mov
push
xchg
dec
adc
cmp
sub
or
cmp
les
push
xchg
sbb
mov
mov
and
scas
mov
push
or
jne
aad
aas
mov
dec
sbb
or
or
cld
cmp
gs
movs
cmp
je
add
sbb
adc
imul
mov
dec
inc
cmp
xor
pop
sbb
cmp
mov
outs
add
ins
mov
ins
add
push
mov
(bad)
jmp
inc
(bad)
ss
mov
inc
inc
adc
ja
dec
jne
inc
xor
sub
cmp
sub
js
jnp
mov
je
cmp
push
mov
outs
(bad)
cmp
jne
push
and
mov
out
xor
jne
push
sub
or
sub
jbe
mov
mov
(bad)
in
sub
int
fdiv
push
call
out
cmp
push
in
dec
add
cmp
shl
push
jo
xor
pushf
fsubr
push
sub
clc
xchg
push
mov
sub
xchg
mov
lock
hlt
ret
inc
xor
aas
inc
push
cmp
xchg
push
push
inc
out
jnp
ins
cs
add
xor
or
jne
xchg
in
fsub
out
mov
dec
loopne
leave
inc
sti
add
sbb
mov
cs
or
jl
lock
bound
fisttp
cli
es
pusha
mov
and
and
and
adc
push
xor
fst
jmp
add
push
adc
pop
pop
pusha
mov
aad
pop
das
add
or
push
jl
call
mov
imul
mov
cmp
cwde
call
or
dec
cmps
pop
mov
pop
inc
in
push
add
or
sub
loop
jp
fs
jge
nop
pop
and
ja
push
sbb
in
and
pop
outs
add
call
add
pop
push
or
inc
mov
cmp
int3
adc
fcom
pop
adc
push
mov
shl
jmp
mov
jg
push
std
or
addr16
lea
cmp
push
lock
push
xor
cld
mov
adc
fadd
adc
rcr
retf
adc
lea
or
push
ret
pop
cmp
mov
jge
and
test
add
mov
and
jecxz
dec
clc
popf
pusha
pop
mov
mov
mov
mov
push
mov
or
inc
clc
mov
inc
pop
bound
xor
lea
sbb
push
and
(bad)
bound
call
cwde
adc
ins
mov
xor
inc
cld
adc
lds
jg
pop
push
lahf
jp
fdiv
inc
clc
xchg
pusha
popa
aaa
inc
or
call
adc
hlt
sbb
xchg
dec
addr16
jnp
mov
ret
fwait
stc
outs
xchg
xchg
sub
(bad)
push
hlt
lahf
dec
test
fwait
shl
jmp
(bad)
call
pusha
or
add
cmp
in
stc
mov
adc
cmp
clc
iret
das
mov
je
push
leave
inc
xchg
iret
pop
mov
or
inc
mov
mov
ja
cmp
out
inc
inc
ds
sub
pop
clc
or
addr16
mov
test
(bad)
jge
into
or
je
std
sbb
ret
sub
inc
or
dec
jl
cmp
jg
add
mov
inc
rep
jmp
mov
(bad)
in
push
call
jmp
sub
lods
pop
jae
in
out
cmps
sub
je
add
add
add
push
(bad)
inc
push
cmp
jmp
add
add
rcr
rcr
test
retf
mov
and
cmps
or
mov
mov
fbld
jo
or
dec
hlt
retf
(bad)
mov
movs
stc
iret
sbb
pop
cmc
push
sub
sub
sbb
and
sahf
ret
mov
push
int
add
inc
xchg
mov
push
mov
dec
sbb
adc
retf
retf
fnstcw
or
jmp
push
das
cmp
cmps
sbb
jne
inc
fmul
imul
or
fisttp
xchg
jo
mov
xchg
cmp
ret
jmp
pop
pop
or
sar
jl
icebp
iret
pop
jmp
pop
add
xor
xor
iret
and
test
mov
add
jle
push
add
push
and
jne
mov
mov
(bad)
in
cmp
jge
mov
or
les
add
and
xor
in
mov
mov
pusha
dec
icebp
nop
xchg
and
xchg
mov
pop
repz
cmp
fadd
je
add
add
inc
add
mov
inc
(bad)
jecxz
retf
and
pop
push
loopne
(bad)
shl
push
and
pop
rcr
rcr
dec
push
sbb
pop
dec
hlt
cmp
test
sub
adc
outs
inc
cmp
jp
xchg
adc
ret
fwait
aaa
add
jo
mov
es
aam
mov
or
shl
rcr
call
and
adc
(bad)
mov
xchg
push
mov
sti
test
(bad)
jne
add
add
shl
sbb
push
inc
in
inc
sbb
ja
add
xor
push
imul
jle
adc
sbb
push
scas
ror
loopne
test
imul
shl
or
in
inc
outs
or
clc
push
mov
mov
jmp
add
push
xor
jbe
test
dec
xchg
sbb
or
adc
in
inc
cld
dec
jmp
aam
cmp
adc
cmp
in
fnstenv
mov
fs
scas
ja
out
std
dec
fnstsw
push
dec
jmp
mov
mov
mov
ror
ror
pop
add
sub
ins
lds
pop
add
pop
pop
lea
jmp
mov
cmps
and
xor
pop
imul
and
fidivr
shl
out
outs
jbe
repz
cmp
adc
dec
or
rol
pop
mov
fnstenv
xor
jecxz
or
push
xor
mov
inc
dec
js
mov
inc
aam
adc
scas
jne
shr
xchg
clc
retf
and
repz
or
aaa
sub
add
jl
sub
cmp
push
push
inc
ret
pop
jmp
adc
or
inc
mov
push
adc
dec
gs
or
out
out
mov
aaa
ja
mov
pop
fimul
dec
cmp
es
je
cmp
aaa
outs
cld
pop
cmp
je
cmp
sahf
cmp
adc
rol
mov
mov
adc
inc
or
ins
fld
or
adc
jmp
push
mov
mov
(bad)
sbb
add
dec
cs
mov
sbb
pop
jmp
sbb
sbb
lods
jmp
or
push
sbb
push
rcl
push
or
mov
mov
mov
call
mov
sub
add
dec
shl
(bad)
inc
jb
in
call
mov
mov
pushf
push
pop
dec
add
push
shl
push
shr
and
fs
push
in
pop
mov
ja
inc
cld
jmp
adc
pop
enter
add
sti
mov
dec
enter
mov
mov
sbb
sbb
adc
icebp
jmp
mov
aaa
or
sbb
pop
add
adc
retf
or
js
hlt
ror
outs
mov
test
test
push
or
push
rcr
sar
lock
add
call
adc
in
ins
loope
stc
push
cmp
je
adc
or
bound
or
xchg
setne
popf
mov
push
pusha
mov
add
mov
or
adc
fs
cmova
jge
in
sahf
pslld
xor
adc
sub
test
int
add
ins
mov
and
sti
cmp
(bad)
pop
add
cmp
sbb
popa
in
in
pop
imul
adc
add
add
dec
(bad)
sub
pop
pop
pop
or
or
loope
push
(bad)
aas
shr
jns
dec
loopne
cmp
inc
inc
sahf
ins
jl
stos
sbb
in
adc
pop
add
adc
ror
in
mov
inc
in
loope
xchg
jo
jl
sbb
ss
retf
adc
push
add
mov
or
push
sbb
sbb
sbb
jbe
push
add
add
add
data16
xchg
xor
adc
sub
in
(bad)
lock
adc
dec
push
ret
and
aas
(bad)
mov
pop
inc
add
or
and
add
iret
inc
sbb
push
nop
ror
xor
retf
ret
push
das
push
mov
and
jo
push
mov
rol
mov
call
loopne
rcl
(bad)
rcl
cmp
jb
idiv
fidiv
sub
sbb
inc
loop
pop
div
and
jmp
jg
sbb
ret
scas
push
pop
dec
in
fisubr
fmul
pop
je
repnz
sbb
mov
cmp
pop
mov
mov
out
sbb
ds
lods
je
aaa
or
inc
add
pcmpeqd
lock
add
popf
add
push
call
rol
or
test
(bad)
imul
and
in
mul
adc
and
add
in
xchg
add
mov
mov
cmp
jge
leave
mov
cmp
retf
imul
and
dec
lock
mov
(bad)
out
sar
push
in
das
jmp
dec
bound
xor
rcl
mov
mov
in
jge
add
sub
jp
(bad)
fsubrp
inc
dec
xor
sub
mov
nop
adc
inc
dec
xlat
(bad)
push
enter
sub
lods
sahf
adc
mov
jle
add
popf
jle
(bad)
(bad)
fistp
push
aam
jno
ret
(bad)
and
add
fimul
add
stos
les
push
pop
dec
inc
jl
inc
(bad)
xor
jp
or
out
in
or
dec
dec
jne
imul
(bad)
push
test
or
fdiv
push
cld
dec
sub
into
kmovd
push
adc
or
mov
leave
push
ins
ret
call
test
mov
cld
pop
test
imul
dec
push
or
inc
clc
jb
mov
adc
imul
mov
loope
movs
js
push
pop
mov
test
les
mov
inc
adc
inc
jl
clc
sub
jg
sbb
sbb
push
add
je
fisttp
xchg
add
jl
clc
sub
sbb
idiv
add
sub
pop
jge
(bad)
mov
jae
inc
push
pop
aad
outs
ins
das
mov
dec
outs
bound
add
addr16
in
jns
ins
xor
pop
popa
jp
dec
popa
pushf
sub
push
(bad)
jne
ins
push
dec
dec
sub
imul
sahf
sub
inc
imul
in
inc
inc
sub
dec
inc
jno
adc
sbb
push
out
or
jnp
fwait
inc
dec
jae
mov
outs
jae
inc
inc
push
mov
mov
inc
pop
push
popf
in
vcvttss2si
fwait
sbb
mov
les
aas
xchg
je
ins
or
test
ins
sub
jb
dec
and
jnp
test
jnp
push
inc
(bad)
fiadd
ins
push
push
add
mov
xchg
dec
dec
bound
inc
inc
das
fldenv
leave
push
inc
fistp
popa
dec
in
das
fldenv
jnp
push
inc
je
cmp
out
test
sbb
push
pop
div
inc
pop
or
jmp
and
add
aad
jg
adc
or
cli
push
setae
dec
push
outs
test
mov
xchg
jl
mov
mov
sbb
push
or
pop
adc
fs
or
fs
dec
test
sub
xor
adc
inc
mov
add
ret
sub
ret
mov
push
test
jne
out
cmp
ss
xor
push
test
adc
inc
inc
jl
fisub
jl
(bad)
sub
inc
jo
dec
pop
dec
add
inc
push
adc
mov
(bad)
or
jge
rcl
dec
jle
scas
sub
imul
inc
mov
xchg
xchg
sbb
xchg
lods
sar
fidivr
and
or
(bad)
sub
fs
dec
jne
inc
scas
daa
mov
adc
mov
push
icebp
inc
push
cld
in
ret
sub
jbe
lea
mov
test
fidiv
push
push
rcr
lock
daa
fist
mov
ins
imul
mov
test
push
adc
push
push
sub
cwde
ss
mov
add
inc
cwde
sub
jo
ins
sub
cmp
das
fbstp
or
sub
cmp
(bad)
jmp
pop
clc
outs
push
xor
sub
sti
dec
jmp
push
div
adc
jbe
inc
jmp
fucomp
adc
nop
jmp
cmp
fs
pop
mov
stos
mov
(bad)
out
(bad)
xor
nop
adc
test
push
push
mov
neg
sbb
push
les
movs
(bad)
pop
adc
loope
imul
lea
dec
std
mov
mov
push
pushf
movs
(bad)
mov
out
pushf
adc
inc
sbb
out
and
scas
adc
ret
push
lock
xor
sub
push
sub
sub
add
ins
inc
sbb
jne
or
cmp
and
pop
mov
adc
icebp
xor
push
push
cmps
push
(bad)
cmp
loop
pop
fdiv
mov
daa
xor
rcr
xor
daa
mov
ins
jno
je
and
mov
rol
pop
int3
adc
mov
mov
shr
loope
xchg
xor
jmp
stos
add
hlt
lock
mov
mov
xor
jge
add
push
mov
xor
cmp
inc
arpl
loop
outs
arpl
or
push
sub
xchg
out
sar
push
mov
les
je
ret
enter
call
cmp
push
adc
fisttp
push
adc
xor
xor
jnp
dec
and
mov
sub
iret
daa
sub
cmp
fcmovne
xchg
loope
and
xor
push
pop
vprotd
lock
ret
je
mov
imul
pop
jl
or
xlat
add
jl
aam
sub
sti
pop
mov
fsub
mov
fsub
mov
pop
push
sti
loopne
push
fld
cmp
xchg
sub
cmps
outs
pop
sbb
sub
fcom
stos
mov
or
xor
cmp
cmp
fild
adc
pop
xchg
sti
(bad)
push
clc
ror
movs
jno
jno
mov
ror
ins
mov
cdq
dec
fcom
das
push
xor
xor
shl
sbb
adc
fsubr
push
ret
mov
cmp
or
pop
cmp
push
inc
imul
push
ds
in
xlat
into
and
inc
add
adc
jmp
mov
sub
loop
push
sar
jns
adc
mov
pop
outs
js
ja
fnsave
xchg
sub
sar
sub
cmp
lock
push
push
inc
pop
mov
push
cdq
stos
cmp
ja
nop
repnz
pop
adc
imul
int3
xor
lea
aas
gs
pusha
(bad)
(bad)
sbb
adc
ret
dec
push
sub
int3
xor
inc
or
xchg
pop
inc
add
idiv
test
rol
xor
inc
retf
inc
adc
inc
dec
iret
xlat
inc
mov
push
scas
push
or
repz
ds
xor
nop
mov
jae
and
or
cwde
outs
sbb
adc
test
sbb
sbb
xchg
mov
or
cmps
add
(bad)
enter
add
int3
push
mov
xor
rol
and
push
jb
das
je
aas
inc
jb
sub
sbb
jbe
pop
js
cdq
lods
leave
cmp
out
fcomp
out
sub
mov
icebp
mov
mov
or
adc
int3
xor
fiadd
pop
add
sub
push
sub
jne
jmp
push
or
xor
xchg
mov
pop
sub
adc
jo
xchg
inc
lods
ret
and
mov
loope
push
mov
dec
push
mov
and
sbb
shl
ins
xor
arpl
out
outs
pop
dec
add
iret
sbb
xor
int
lods
in
adc
xor
addr16
jbe
and
add
imul
push
xchg
dec
jp
jne
cmp
movs
add
(bad)
les
add
add
test
jbe
sbb
dec
jne
jmp
btr
xchg
mov
inc
rol
in
fimul
or
clc
mov
mov
outs
mov
test
shr
push
jbe
pop
movs
bound
call
test
push
int3
pop
xchg
or
jp
dec
mov
getsec
je
clc
or
iret
loopne
addr16
nop
dec
mov
jmp
inc
sub
aaa
std
movs
sub
or
xchg
pop
jne
cmp
je
xchg
sub
popa
push
dec
mov
(bad)
aas
leave
xor
movs
mov
jle
fs
(bad)
hlt
adc
pop
adc
ss
push
push
dec
in
add
adc
xchg
add
and
shr
mov
mov
inc
xor
add
mov
clc
in
sub
aam
enter
adc
jecxz
sub
add
call
mov
mov
sti
add
adc
popa
xor
sahf
mov
xor
in
fwait
scas
jo
cli
jnp
adc
push
cmp
pop
pop
cwde
mov
adc
push
sbb
and
daa
aam
call
lds
fmul
mov
js
outs
push
pop
call
push
fadd
inc
in
std
cmp
std
dec
loopne
mov
fstp
repnz
test
fisttp
inc
dec
js
stos
jp
mov
outs
fwait
adc
test
je
inc
adc
and
fsub
mov
loope
leave
push
and
and
int
mov
xlat
call
aas
push
ret
cmp
mov
jae
adc
jo
pop
add
or
mov
cmp
outs
shl
imul
and
aas
test
jmp
mov
out
test
xor
inc
sub
mov
mov
push
fbld
push
jo
mov
fnstenv
pop
rcr
ret
dec
jle
xchg
cmp
and
xor
or
jmp
adc
push
cmp
enter
out
shl
adc
fisub
inc
sahf
test
inc
gs
mov
sbb
or
jnp
inc
push
inc
jmp
mov
push
arpl
imul
aam
int3
push
mov
jg
jecxz
inc
aaa
mov
adc
mov
dec
add
cmp
call
sar
add
and
jp
inc
test
mov
cld
lock
cmp
pop
les
arpl
ficomp
fcmovne
(bad)
mov
pop
mov
cmp
ja
adc
push
add
mov
adc
in
mov
gs
adc
pop
test
fdivrp
xor
push
pop
loop
cmp
fbld
inc
(bad)
push
mov
div
in
sbb
popa
jo
sbb
sub
mov
jb
push
test
imul
mov
push
cmp
mov
xlat
fdiv
call
adc
sti
sti
imul
adc
or
add
scas
inc
mov
xchg
pop
and
xchg
xchg
or
(bad)
fisubr
push
adc
lea
ja
inc
sbb
pusha
push
jge
mov
pop
or
xchg
and
popf
dec
test
mov
adc
mov
mov
dec
add
push
mov
or
test
or
or
and
jge
push
hlt
retf
ins
enter
adc
add
test
push
in
aad
mov
cmp
jae
pusha
dec
hlt
sub
aam
adc
pop
je
js
push
push
pop
sbb
and
mov
add
adc
push
hlt
mov
inc
sbb
mov
ror
pop
mov
call
jg
xor
adc
(bad)
add
mov
cli
add
add
add
cmp
int
or
int
stos
lahf
push
or
or
dec
push
stc
dec
in
cmp
or
inc
or
add
cmp
xor
mov
loopne
ins
adc
in
nop
(bad)
cmp
inc
out
gs
mov
adc
fldcw
mov
sbb
jg
scas
cmp
cmps
mov
es
enter
jae
sbb
sub
addr16
or
movs
jp
jle
xchg
add
mov
sbb
push
nop
inc
push
sbb
inc
push
sbb
dec
stos
push
outs
nop
inc
cld
cmps
repz
mov
inc
add
int
(bad)
out
adc
call
sub
inc
sti
jle
xlat
outs
lods
fimul
jmp
push
mov
lods
jge
jl
mov
pop
pop
loopne
sub
fs
out
add
rol
arpl
sub
or
pop
ja
push
sub
mov
mov
inc
mov
and
pop
mov
add
sbb
test
or
or
inc
or
mov
inc
mov
and
mov
sub
xor
pop
lods
ret
push
mov
mov
sbb
push
add
jne
pop
or
mov
or
sbb
sbb
call
sbb
xchg
adc
loopne
jl
stos
mov
in
fs
fs
xchg
ss
lods
fiadd
ins
pop
mov
rcr
div
push
fcomp
cdq
mov
test
stos
sub
xchg
cmp
jbe
outs
adc
and
or
mov
xor
cmp
inc
ror
push
jle
add
clc
add
repnz
shl
add
ret
test
inc
add
pop
mov
jbe
mov
lods
mov
sub
pusha
movsx
outs
mov
daa
stos
inc
inc
mov
cmp
loopne
jno
cwde
jnp
dec
or
test
push
(bad)
ss
mov
mov
dec
or
ins
xor
dec
int
imul
mov
pop
add
mov
in
jle
movs
clc
mov
out
mov
xor
xor
push
mov
lock
adc
push
lock
mov
adc
aad
iret
push
jp
mov
gs
out
push
adc
add
sbb
add
cmp
push
mov
mov
jne
push
xor
retf
push
add
pop
cwde
add
test
sub
and
jmp
or
mov
inc
dec
fcomp
add
and
and
retf
in
in
jg
les
fistp
and
cmp
aad
arpl
mov
jo
sbb
repz
push
and
ja
push
mov
or
sti
sbb
push
pop
adc
loop
cwde
ins
ret
icebp
cdq
push
sub
popa
(bad)
adc
push
je
dec
add
pusha
mov
hlt
add
push
push
dec
sub
pusha
sbb
jns
sbb
cmp
mov
inc
ds
and
or
xchg
push
push
inc
dec
push
lock
pop
lds
fmul
mul
push
push
pop
clc
imul
mov
(bad)
adc
push
xor
and
test
sub
outs
ins
(bad)
(bad)
mov
or
sub
std
cld
or
and
xor
sub
test
addr16
add
nop
loopne
push
pop
inc
pop
or
outs
add
inc
iret
pop
mov
clc
ret
add
jne
push
xchg
inc
ins
(bad)
xor
sub
jmp
pop
sahf
(bad)
cmp
jbe
push
xchg
jle
jo
mov
sbb
mov
jmp
(bad)
push
jmp
add
fiadd
psrlq
mov
inc
mov
push
xchg
stc
sub
dec
mov
or
ja
fucomip
lea
sub
mov
cmp
mov
test
je
in
adc
ja
sub
or
inc
out
mul
pop
(bad)
div
mov
inc
mov
add
icebp
icebp
sub
daa
mov
pushf
add
adc
loop
hlt
cmp
nop
mov
(bad)
repnz
loop
push
mov
inc
sbb
and
pop
fadd
aam
int3
or
enter
mov
and
jmp
mov
ret
sbb
in
sub
push
and
mov
mov
sbb
and
ret
or
nop
pop
xchg
in
mov
inc
push
jl
out
jnp
test
dec
mov
sbb
pop
lods
test
fs
inc
push
mov
push
sbb
test
push
fs
je
push
in
and
adc
ja
add
dec
mov
cmp
add
jo
je
daa
mov
push
adc
mov
or
stc
sbb
icebp
pop
adc
(bad)
pop
icebp
fs
inc
push
repnz
nop
inc
push
sbb
div
inc
push
sbb
cli
push
sbb
cld
std
(bad)
sbb
jmp
loope
nop
inc
push
loop
in
inc
push
sbb
out
inc
push
sbb
jmp
in
out
sbb
out
rcl
fs
inc
push
rcl
aam
inc
push
sbb
(bad)
xlat
inc
push
sbb
fiadd
sbb
(bad)
ficomp
fs
inc
ffreep
shl
ret
nop
inc
push
sbb
mov
push
sbb
retf
fs
retf
int3
int
sbb
iret
mov
fs
inc
push
mov
mov
inc
push
sbb
sbb
mov
mov
fs
inc
mov
inc
push
mov
push
sbb
sbb
stos
push
sbb
lods
lods
scas
sbb
scas
nop
xchg
pop
mov
sub
jae
add
add
pop
mov
fsubr
or
mov
ficomp
jo
mov
pop
add
test
and
mov
ins
fwait
pusha
adc
rol
rcl
fs
push
inc
daa
add
mov
pop
add
push
jl
adc
cmp
push
(bad)
not
or
scas
push
add
xor
clc
jg
ins
mov
xchg
daa
sbb
cs
lock
mov
dec
dec
je
sbb
pusha
popf
add
push
stc
jg
dec
movs
jnp
jmp
add
add
add
(bad)
mov
pusha
add
add
add
rol
loopne
or
add
add
push
sti
outs
loope
push
add
jo
or
add
pop
pop
sbb
dec
in
mov
adc
add
mov
or
add
movs
pop
add
pusha
jmp
mov
mov
fbstp
test
add
add
fsubr
xor
add
pusha
add
add
add
add
jmp
sub
add
adc
add
pop
add
in
sbb
pop
add
stc
test
xor
pusha
add
add
ret
add
mov
and
and
sub
add
add
or
or
push
and
sub
xchg
adc
push
or
call
add
and
push
or
or
(bad)
or
jbe
xor
pop
inc
sbb
add
and
add
and
mov
adc
aas
add
push
pop
in
mov
adc
mov
add
aaa
jle
or
and
fistp
add
or
add
jg
add
pop
adc
mov
inc
xor
xor
mov
das
add
test
popf
inc
add
and
loopne
sbb
js
cmc
and
dec
inc
mov
pop
mov
ror
add
add
mov
jo
add
outs
jne
push
push
push
pusha
push
das
jo
mov
stc
out
push
add
(bad)
(bad)
iret
mov
or
and
xor
inc
jnp
mov
pop
jo
pop
pop
popf
mov
sti
(bad)
in
fistp
lock
or
or
push
push
or
jo
or
out
inc
or
test
loopne
cmp
adc
and
idiv
inc
or
pusha
or
add
add
sbb
pop
jnp
xchg
pop
mov
ror
or
lock
sar
push
add
adc
popa
loope
jns
xor
or
or
or
mov
pop
jo
sbb
stc
fisttp
rcl
or
or
or
adc
add
xor
or
add
pusha
or
mov
adc
or
out
jb
mov
sub
or
dec
push
or
cld
loope
pop
adc
and
or
or
or
aas
xchg
push
pusha
adc
pop
jno
or
psubusb
or
mov
adc
(bad)
xchg
jle
loopne
das
add
or
or
ins
sti
jmp
and
int
jle
or
add
std
fmul
nop
or
or
lock
inc
push
and
xor
inc
push
push
push
pusha
push
jo
or
fcmovnb
(bad)
call
push
ror
push
loopne
lock
add
fld
smsw
enter
wrmsr
cmovo
not
pusha
add
je
mov
and
imul
shr
pmulhw
lock
add
sub
mov
or
dec
push
aaa
and
mov
pop
or
fbstp
push
push
pusha
adc
adc
mov
pop
adc
adc
jnp
and
iret
loopne
lock
add
add
push
jbe
adc
aaa
(bad)
jp
sub
sti
cdq
push
adc
fisttp
test
fwait
push
adc
sbb
inc
cmp
adc
nop
adc
add
jecxz
dec
outs
leave
mov
sub
outs
push
push
fcom
adc
adc
mov
and
xor
fist
adc
fild
cmps
(bad)
retf
push
xlat
sbb
arpl
add
jno
and
sbb
inc
test
adc
inc
pusha
cmps
lea
das
nop
out
xchg
out
cmp
adc
adc
pop
adc
adc
scas
sbb
xor
popf
adc
xchg
fild
adc
mov
or
xor
dec
loopne
adc
jge
loopne
lock
adc
out
xchg
xor
adc
add
pusha
adc
dec
popa
out
add
out
ret
stos
sub
adc
mov
adc
ror
test
fbld
push
or
jg
xchg
and
adc
adc
push
jl
add
mov
fisubr
mov
mov
and
adc
(bad)
adc
adc
outs
pop
(bad)
in
mov
adc
in
push
adc
cmp
mov
popf
push
(bad)
xlat
jbe
aas
lock
adc
jnp
test
inc
push
ror
or
xor
push
push
out
cmp
call
rcl
outs
jo
push
shl
push
cdq
push
mov
cwde
pop
inc
add
and
fcom
mov
rol
jbe
sbb
push
aas
add
jp
add
out
sbb
sub
pop
aas
and
push
pusha
pop
mov
pop
or
fs
loopne
inc
xchg
pop
sub
sub
das
xchg
test
add
sub
aaa
outs
jmp
adc
adc
pop
mov
paddsb
rcl
rcl
pop
loopne
sub
lahf
lock
push
popa
sub
lods
cli
adc
and
pop
or
mov
sbb
push
sbb
sbb
pusha
sbb
add
mov
push
jbe
push
add
push
add
fld
sbb
sbb
sbb
sbb
sbb
xor
fcomp
(bad)
pop
adc
cld
enter
xor
cs
inc
push
jo
(bad)
pusha
ret
pop
sbb
sbb
imul
(bad)
or
mov
and
inc
push
sbb
sbb
addr16
mov
add
ja
and
loopne
add
fldenv
retf
lods
mov
pop
mov
lock
add
adc
in
(bad)
adc
adc
adc
loope
push
adc
out
(bad)
pop
not
sbb
sbb
add
sbb
sbb
sbb
bswap
popa
fcmovnu
xor
adc
or
pop
sbb
push
cmp
sbb
or
enter
or
add
add
or
or
mov
retf
sub
pop
ins
mul
add
or
ss
ss
add
in
pop
pop
add
retf
inc
data16
and
xor
add
or
fstp
jae
add
add
ins
adc
div
add
in
or
test
sbb
test
ja
or
and
add
pop
add
(bad)
scas
adc
adc
adc
add
or
or
ret
outs
pop
add
xor
cdq
sbb
add
jmp
fdiv
aas
add
jae
dec
das
int
js
sahf
cmp
or
push
push
sbb
call
pushf
add
push
(bad)
push
sahf
imul
add
add
outs
outs
leave
pop
xchg
sub
or
icebp
add
or
inc
or
or
push
fs
fidiv
or
outs
mov
lods
gs
rol
lock
mov
push
mov
ins
xor
jg
int3
sub
sub
dec
ins
sub
popf
lss
mov
sbb
loopne
xor
pop
add
fimul
jns
adc
pop
ss
bound
mov
and
aas
xor
mov
fld
xchg
inc
sbb
out
fwait
int
sub
push
and
or
xchg
cmp
scas
or
bound
mov
push
pop
adc
pusha
aaa
pop
enter
ret
add
push
mov
lahf
in
mov
add
popa
push
fisttp
lods
in
fild
add
lods
lods
fnstenv
pop
arpl
pop
pop
outs
arpl
jo
mov
dec
test
nop
xchg
xor
ds
retf
pop
mov
ss
ins
pusha
or
and
add
push
retf
pop
retf
nop
push
push
test
sub
fidiv
out
and
mov
mov
stc
mov
add
adc
xchg
std
shl
add
int3
int
ins
push
jno
bswap
or
pop
inc
loopne
jg
sub
xchg
adc
mov
inc
push
rcr
xor
sub
jbe
out
lahf
xor
ret
iret
lar
or
or
add
add
add
pop
sub
sub
or
sub
enter
adc
and
prefetch
push
and
adc
nop
icebp
rol
pop
lahf
add
popa
xor
or
fist
or
in
jmp
sbb
nop
dec
jbe
or
cvttps2pi
mov
adc
sbb
and
mov
ret
ror
lea
scas
jae
sub
inc
dec
sbb
and
add
sub
icebp
mov
or
outs
add
mov
pop
cmp
rcr
mov
rcl
test
cwde
push
sbb
add
dec
dec
dec
add
xchg
mov
test
ret
sub
xor
outs
or
pop
cmc
fldcw
or
push
dec
or
add
ror
or
mov
add
push
pushf
out
xchg
das
add
popa
mov
push
adc
push
sbb
xor
mov
adc
sbb
push
or
xchg
call
fldcw
xor
push
or
jb
xlat
and
add
pop
pop
mov
adc
add
and
iret
add
dec
and
add
fnstcw
fadd
add
pop
mov
sbb
imul
sbb
sbb
add
scas
lods
sbb
mov
pop
push
push
sbb
adc
test
push
push
enter
int
push
jo
dec
inc
ins
xchg
nop
mov
xor
pop
shl
add
adc
cmp
add
cwde
sbb
enter
ja
xchg
add
test
push
mov
xor
retf
push
sbb
add
mov
adc
sbb
imul
adc
dec
in
push
mov
or
push
setnp
mov
(bad)
and
and
dec
dec
jnp
out
popf
adc
jnp
sub
adc
add
and
dec
pusha
(bad)
in
aaa
xlat
mov
and
popa
or
sbb
sbb
fiadd
adc
popa
xchg
shl
rcr
push
xor
pop
pushf
mov
cmp
push
inc
or
enter
xchg
adc
scas
add
pop
pop
sbb
lods
sub
or
fmul
(bad)
test
pushw
leave
and
cs
push
mov
fsubr
scas
xor
inc
ret
js
in
pop
push
dec
jp
pop
out
and
sbb
jg
test
repz
inc
dec
inc
pop
pminub
pop
xor
in
sbb
xor
into
push
pop
pop
shr
sub
xor
pop
pop
int3
bound
sbb
xchg
mov
xor
mov
lea
call
jbe
jmp
xor
and
mov
bound
sub
cmp
mov
xor
mov
pop
pop
dec
adc
movs
mov
adc
movs
int3
add
test
inc
push
cmc
fadd
dec
push
push
fwait
popf
sbb
xchg
jp
pop
out
pop
add
sbb
sbb
or
es
pop
cmps
xchg
inc
sbb
pop
inc
cwde
xor
enter
push
fwait
sbb
adc
mov
leave
pop
adc
and
retf
cwde
xchg
dec
add
sub
and
dec
jnp
fdiv
and
sub
scas
push
dec
rcl
dec
rol
pop
nop
push
add
adc
mov
cmp
or
add
adc
push
das
mov
jle
or
ret
xchg
neg
pop
sub
xchg
ins
pop
add
in
or
and
mov
ja
or
jg
movs
movs
push
jg
gs
movs
xor
sbb
sub
test
pop
sbb
pop
in
lds
adc
fnstenv
sub
fnstcw
adc
(bad)
(bad)
or
loope
add
rcl
xor
pop
sbb
add
out
sbb
mov
rol
xor
(bad)
ds
jns
pusha
add
or
or
add
add
out
xor
cwde
cmp
fsubr
shr
ret
lds
mov
pop
test
mov
ror
mov
add
inc
and
add
or
add
add
adc
or
xchg
test
or
das
push
pusha
adc
or
shr
adc
test
inc
out
pop
jae
outs
mov
adc
or
mov
test
adc
and
pusha
and
cmp
xchg
sub
inc
and
and
sbb
ins
sub
addr16
xor
cmps
ins
shr
jp
or
add
shl
add
inc
sbb
outs
popa
adc
aam
xchg
rcl
pusha
adc
pop
(bad)
movs
push
rol
das
shr
and
lock
add
dec
fld
fld
add
pop
pop
add
inc
fst
and
add
ins
add
sahf
dec
mov
xchg
pop
inc
leave
xchg
daa
dec
or
inc
adc
cmp
repnz
inc
sbb
and
inc
popa
ret
inc
cmp
pop
and
sar
pop
loopne
ss
dec
fldz
cmp
xchg
addr16
mov
dec
sar
and
push
ror
inc
sbb
pop
inc
(bad)
and
and
push
xor
out
repnz
clc
aas
inc
add
inc
push
sbb
sbb
cmp
and
and
and
enter
xor
inc
nop
daa
or
adc
sbb
dec
mov
cmp
inc
add
inc
push
inc
ins
sub
xor
jg
pop
pop
mov
jg
(bad)
jg
sbb
ret
sar
aas
lds
aas
call
mov
out
push
push
aad
pop
push
dec
or
in
leave
pop
jmp
psubusw
xor
jecxz
jmp
and
nop
sar
lds
mov
stos
jmp
xor
in
aaa
aas
xchg
inc
mov
xor
and
pop
jg
(bad)
mov
movs
pop
mov
jbe
mov
pop
clc
inc
iret
ss
pop
test
sub
daa
or
scas
nop
mov
lahf
pop
test
mov
popa
outs
adc
not
pop
add
add
pop
mov
popa
sbb
addr16
push
adc
dec
push
or
xor
in
xchg
inc
aaa
inc
cmp
inc
sbb
cmp
pushf
or
and
pop
inc
or
add
enter
pop
cmovae
and
and
inc
or
inc
inc
dec
dec
mov
pop
adc
ror
js
addr16
pop
and
pop
popa
idiv
out
imul
and
rol
loopne
mov
mov
daa
jo
scas
enter
jo
inc
pop
mov
mov
pop
repnz
jecxz
ret
xchg
daa
iret
jmp
repz
add
stc
cmc
push
adc
(bad)
jg
mov
inc
mov
enter
outs
aas
aaa
inc
(bad)
rol
ja
outs
mov
dec
pop
mov
ins
fs
cmps
pop
sbb
fld
pop
jg
add
pop
and
lahf
loopne
adc
sub
enter
mov
stos
mov
inc
inc
inc
xchg
shr
adc
mov
mov
popa
sbb
push
and
inc
dec
mov
push
or
test
mov
das
adc
or
ror
inc
inc
fldcw
test
push
lahf
pop
mov
ins
inc
pop
outs
arpl
pop
nop
sub
pop
fs
mov
jbe
xlat
pop
ss
pop
test
adc
out
sbb
fs
dec
pop
mov
lods
xchg
dec
adc
nop
outs
add
xor
mov
pop
and
adc
pop
inc
add
mov
fcmovne
std
mov
adc
sbb
add
fs
and
and
push
retf
and
jo
push
adc
adc
pop
adc
mov
cwde
jmp
dec
sahf
sub
int3
add
cwde
or
add
add
sbb
stos
jmp
je
imul
jg
ror
push
popa
outs
addr16
jb
or
iret
dec
jbe
data16
outs
ja
or
add
fs
jo
sub
fwait
or
push
outs
fs
or
inc
cmp
or
inc
arpl
jae
imul
mov
ins
gs
inc
adc
add
imul
or
aam
(bad)
xchg
push
popa
daa
xchg
je
in
jle
mov
inc
popa
cmp
adc
js
outs
popa
dec
mov
mov
ins
inc
push
add
adc
mov
mov
dec
outs
outs
push
sbb
fstp
fmul
sbb
jo
add
(bad)
jbe
ins
jo
ins
gs
jnp
arpl
add
dec
add
ins
sub
add
enter
push
or
add
mov
jbe
cmp
in
add
add
push
inc
outs
fsub
cmp
add
(bad)
pop
push
out
mov
in
or
sbb
(bad)
pop
(bad)
push
mov
pusha
rcr
dec
xor
push
add
leave
out
push
mov
cmp
int
xor
fwait
xchg
int
and
sbb
cmp
cmp
(bad)
mov
fstp
mov
or
cmp
call
sbb
dec
(bad)
fcomp
(bad)
fwait
outs
nop
out
sbb
bswap
inc
aas
mov
les
jl
rcl
cmp
mov
cmp
fs
cmp
lods
cmp
daa
fwait
movs
or
mov
neg
das
xchg
sahf
mov
fs
xor
xor
xor
pushf
ins
into
mov
pusha
xor
cmp
xchg
(bad)
js
(bad)
out
pop
cmp
mov
mov
adc
jo
fwait
nop
inc
cwde
adc
or
mov
adc
add
or
pop
sbb
xor
add
mov
xchg
adc
inc
(bad)
hlt
cmp
jge
inc
scas
(bad)
or
ret
ins
leave
cmp
aaa
mov
mov
fiadd
or
pop
add
pop
adc
jae
inc
mov
mov
cmp
test
aas
inc
adc
or
fcomi
cdq
sar
jae
or
and
cmp
sub
xor
jne
push
cmovb
dec
add
and
and
pop
sbb
push
and
nop
test
mov
sbb
add
pop
loope
or
cmp
add
and
pop
mov
repz
add
dec
xchg
xchg
es
sub
je
add
or
sar
and
ja
and
cmp
jb
add
inc
xchg
jmp
dec
test
add
pusha
ins
(bad)
imul
call
inc
add
int
aas
test
add
je
inc
adc
nop
inc
cmp
dec
or
xchg
dec
clc
mov
xchg
inc
inc
enter
daa
mov
pusha
cmp
imul
jg
and
adc
in
jle
or
cmp
ss
pop
add
add
fisttp
mov
add
call
pop
add
xchg
popa
(bad)
or
pop
inc
or
push
lods
or
or
cmp
and
ret
rcl
add
inc
add
pop
add
xchg
retf
retf
inc
mov
and
sub
fbld
sbb
js
pop
mov
sbb
mov
and
movs
popa
adc
or
push
jge
mov
dec
jo
gs
jb
(bad)
sub
inc
inc
outs
add
fs
push
inc
test
push
push
xor
(bad)
(bad)
fist
inc
dec
jno
imul
lods
mov
add
es
pop
sub
nop
inc
push
mov
sbb
push
sub
add
xor
jl
in
sub
add
sub
dec
add
pop
mov
pop
repz
lea
mov
mov
leave
cdq
xor
shl
add
jmp
add
ins
je
add
test
pop
inc
in
adc
arpl
add
mov
iret
add
or
mov
adc
or
jae
mov
adc
dec
lahf
sbb
or
jecxz
add
ins
int3
or
adc
test
adc
lock
jae
ss
adc
ret
and
test
cmp
push
sbb
xor
mov
and
inc
sub
fsub
xor
ja
call
popa
push
add
rol
jbe
das
xor
inc
mov
sub
stos
int
(bad)
lock
pusha
dec
pop
enter
je
xchg
das
inc
add
fwait
daa
add
push
push
xchg
mov
adc
sbb
leave
fnstenv
cdq
ret
addr16
loopne
sub
and
or
test
add
or
mov
dec
xchg
ins
(bad)
ret
dec
add
jl
call
(bad)
jbe
sub
ficom
gs
xchg
lods
add
call
sbb
add
seto
loope
aaa
pop
lods
pop
mov
and
add
or
leave
and
xor
loopne
mov
inc
ins
xchg
jbe
mov
sub
fisttp
inc
xor
pop
cs
jo
sub
inc
push
ret
clc
sub
or
pop
mov
inc
fld
out
add
arpl
jmp
mov
nop
sub
xchg
cmps
adc
sub
sub
or
arpl
adc
shr
and
cmp
xchg
and
cmp
nop
fs
adc
or
mov
or
or
xor
or
cs
jb
sbb
xchg
mov
loop
mov
mov
mov
mov
pinsrw
and
sbb
pushf
sub
movs
adc
imul
xchg
xor
mov
je
mov
das
jl
mov
inc
sahf
sub
adc
retf
mov
push
jle
jns
fld
dec
xor
sahf
cmp
xor
xor
pusha
inc
mov
or
arpl
or
pop
adc
or
cmps
loopne
inc
sub
enter
mov
fs
adc
test
pop
imul
push
xlat
stos
in
jo
jbe
fbld
retf
mov
arpl
adc
pop
fs
test
dec
sahf
mov
push
xor
dec
pop
pop
mov
or
pop
adc
mov
nop
inc
push
rol
xor
xor
sbb
std
add
pop
adc
leave
or
xor
arpl
outs
xor
mov
pop
adc
or
and
lods
dec
sahf
cmp
xor
xor
jge
js
mov
push
dec
mov
idiv
mov
jo
xor
mov
mov
add
or
test
xor
retf
js
pop
xor
bound
sub
mov
fs
inc
mov
fmul
nop
pop
sti
add
ss
or
(bad)
ins
or
fwait
aaa
arpl
adc
repnz
cmps
sbb
int3
mov
push
push
daa
add
mov
adc
pop
adc
xor
jl
in
xchg
aaa
pusha
aaa
data16
(bad)
push
inc
cmp
pop
mov
retf
push
repnz
ror
imul
cmp
cmp
add
cmp
pop
rol
arpl
adc
div
inc
push
mov
push
shr
push
mov
sahf
mov
jl
push
dec
outs
cmp
xchg
jge
addr16
pop
push
jle
nop
dec
and
and
add
cmp
cmp
shr
push
dec
outs
xchg
stos
and
mov
inc
(bad)
retf
sub
pop
push
mov
repnz
popf
pusha
cmp
pop
push
add
cmp
bound
dec
push
pop
inc
or
fs
mov
dec
sahf
mov
cmp
cmp
cmp
add
ss
push
mov
inc
jb
scas
shr
add
pusha
push
xor
into
add
add
add
rol
imul
sbb
mov
jbe
pop
js
xchg
jo
iret
mov
cmp
fsub
pop
pop
push
jge
ret
mov
ds
sahf
cmp
and
es
adc
jle
in
pop
sbb
jb
xchg
mov
adc
or
xor
or
and
aas
movs
aas
stos
aas
and
push
inc
cld
jecxz
in
sub
pop
push
mov
mov
and
and
popa
jns
cmp
nop
and
jbe
adc
fcom
lock
mov
add
push
sub
add
mov
cmp
cmc
(bad)
pop
sbb
cmp
addr16
sbb
sub
xor
mov
pop
shl
xor
push
cvtpi2ps
push
xor
pop
or
inc
adc
jne
add
sbb
cmp
xor
rol
fs
nop
test
call
and
arpl
sub
jl
sbb
in
fwait
sahf
sbb
inc
pop
xchg
imul
sub
pop
hlt
or
popa
(bad)
xchg
cmp
out
sbb
push
imul
dec
imul
add
aaa
dec
mov
test
add
pop
sbb
or
enter
dec
int
sbb
not
and
pop
xor
and
and
inc
jo
ins
xor
fsub
ret
into
jns
sub
dec
xor
stc
cmp
push
jne
clc
fs
mov
int
sbb
imul
sub
push
mul
ret
jbe
xor
mov
xchg
xchg
or
les
adc
mov
data16
and
and
addr16
pop
and
inc
add
ss
(bad)
adc
enter
aaa
rcl
inc
fist
mov
pop
outs
or
push
adc
std
fidiv
sbb
pop
ret
(bad)
into
inc
sar
fiadd
retf
mov
mov
in
and
add
aam
or
dec
out
test
mov
or
sbb
mov
iret
test
in
and
dec
or
mov
mov
add
xchg
add
(bad)
neg
or
and
(bad)
ins
push
push
inc
push
sub
dec
aaa
add
jg
add
lea
add
mov
mov
inc
mov
cmp
je
data16
and
push
sub
cmp
jl
add
jg
(bad)
jl
or
cmp
sti
jmp
sub
jne
xlat
mov
repnz
add
or
adc
ficomp
add
jl
mov
pop
pop
fisttp
mov
xchg
cmp
dec
pop
inc
inc
ucomiss
ret
add
cmc
add
cmp
xchg
ror
out
add
jmp
jl
mov
adc
jmp
mov
inc
jmp
fs
lds
add
jmp
or
inc
and
cmc
or
xchg
test
mov
mov
(bad)
das
adc
enter
jle
mov
mov
inc
inc
repz
imul
sub
adc
adc
loopne
sub
loop
mov
sub
rol
and
xchg
ror
cmp
iret
stc
cmp
sti
arpl
or
fadd
mov
add
call
js
mov
cmp
adc
pop
fsubr
mov
ja
mov
xchg
push
jmp
in
sub
or
sbb
jb
xchg
hlt
cmp
repz
add
sbb
lock
adc
adc
xchg
inc
fdivrp
and
shr
mov
loopne
test
jb
add
(bad)
mov
mov
mov
pop
pop
jns
jnp
call
arpl
mov
mov
add
jmp
pop
jle
add
add
(bad)
nop
frstor
por
call
jb
stc
fadd
mov
jmp
cmp
(bad)
ins
add
or
push
pop
and
jbe
bound
inc
or
add
push
or
jae
stos
push
test
lock
mov
inc
idiv
adc
pop
rdtsc
mov
enter
mov
sbb
jbe
and
jne
xor
cmp
inc
adc
cmps
or
push
jns
out
xchg
adc
fld
mov
and
add
adc
push
mov
pop
mov
xchg
xor
push
push
pop
call
(bad)
mov
cmp
pop
pop
sub
in
(bad)
mov
mov
mov
imul
xor
xchg
shl
(bad)
jmp
outs
outs
or
sbb
shl
rol
int3
sbb
mov
sub
push
mov
adc
cmp
add
dec
dec
fsub
(bad)
sub
xor
add
dec
movs
dec
mov
sbb
popa
adc
cmp
push
add
dec
or
sbb
adc
or
into
jno
or
neg
adc
add
cmps
(bad)
jl
sbb
rol
mov
test
shl
movq
mov
xchg
add
adc
rcr
shl
sub
fwait
stos
call
sub
lods
rol
dec
js
xor
inc
jmp
pushf
movs
test
loopne
aas
es
hlt
pop
cld
jge
ds
jne
mov
adc
sub
cmp
push
(bad)
push
dec
cmp
clc
jp
in
ins
jecxz
push
(bad)
jl
pop
dec
jne
push
sub
ror
inc
rol
mov
adc
mov
or
and
and
rcr
xor
jo
sar
mov
add
push
xor
rcl
lea
or
inc
sub
mov
cmp
push
ret
adc
dec
mov
jb
ret
test
jbe
sbb
pop
mov
rol
das
mov
sahf
cmp
cs
sbb
out
sbb
cmp
or
jo
xor
push
push
shr
xor
ret
pop
call
push
jno
mov
add
mov
xor
sbb
mov
dec
add
sti
popa
push
adc
cmp
add
sub
es
pop
mov
outs
imul
pop
xlat
stos
push
push
into
add
mov
inc
add
out
ins
jo
mov
outs
test
xor
push
int3
stos
sub
xchg
(bad)
push
nop
pop
lds
dec
inc
sub
(bad)
and
fcom
dec
in
inc
hlt
dec
enter
pop
pop
ficom
cwde
pop
stos
adc
sub
jno
call
jl
(bad)
mov
mov
cld
lds
cld
nop
inc
fild
xor
in
jae
xchg
xchg
inc
cmp
mov
inc
mov
cmp
mov
hlt
lods
dec
push
inc
push
pop
add
mov
xor
lods
jne
add
in
lock
add
clc
pop
add
jbe
and
gs
imul
sti
hlt
xchg
or
sub
xor
lock
mov
repnz
adc
push
inc
scas
add
add
ret
add
iret
mov
mov
pop
imul
mov
jns
jecxz
xor
and
mov
cdq
fucomp
jmp
push
(bad)
cs
pop
hlt
loopne
mov
add
sbb
or
or
sub
xchg
cmp
jae
push
push
stc
out
ins
jb
sub
or
and
add
int
pop
jae
pop
ret
ret
cmp
jae
sbb
or
push
pop
mov
aad
ret
xor
mov
pop
inc
push
jb
xor
loopne
add
ret
loop
shl
cmp
icebp
mov
or
pop
inc
div
push
or
int
xchg
scas
add
and
cmp
pop
or
icebp
(bad)
lods
(bad)
pop
mov
ret
mov
les
cli
pop
jbe
mov
(bad)
or
sub
cmp
dec
mov
or
push
cmp
pop
les
call
mov
dec
pop
and
cmps
imul
push
cmps
inc
inc
adc
(bad)
dec
ss
push
aas
loopne
cmp
cli
pop
add
bound
dec
xlat
pusha
js
popf
cld
adc
or
je
mov
inc
mov
inc
rol
mov
fs
jmp
ror
sub
push
sub
cmp
lods
dec
arpl
or
movs
test
add
test
pop
jne
or
imul
jge
adc
push
dec
mov
dec
mul
mov
scas
(bad)
push
inc
jg
ret
dec
cmp
jg
jmp
add
jbe
mov
or
push
addr16
or
arpl
pop
dec
jle
pop
in
mov
xchg
sub
mov
adc
push
sbb
out
xchg
call
add
cli
and
scas
fadd
popa
movs
femms
hlt
cmp
or
cmp
jle
or
test
add
pop
hlt
(bad)
jl
inc
and
add
mov
sbb
mov
in
mov
inc
in
add
sub
lock
add
shr
bound
jmp
mov
fwait
or
xchg
int3
ins
fistp
add
jge
repz
inc
frstor
and
ja
repnz
js
sub
push
inc
in
add
rcr
add
xchg
sbb
js
lea
and
xor
loopne
pusha
pop
push
sbb
das
je
mov
add
(bad)
fisttp
pop
add
mov
int
inc
inc
inc
push
ins
cld
or
jo
cmp
add
push
sar
xchg
dec
mov
jl
jp
mov
xor
mov
lock
setb
or
xchg
xor
sub
jnp
jge
or
repnz
pushw
call
in
or
out
je
cmp
mov
inc
add
ss
enter
or
(bad)
iret
enter
in
fcomp
ss
cmps
add
je
minps
loopne
pop
push
aam
add
ss
mov
js
xor
cmps
pop
fdiv
and
mov
shr
add
add
cmp
pop
mov
pop
jl
cmp
sbb
adc
jne
pushf
jne
or
or
aas
dec
inc
(bad)
mov
adc
sub
or
pop
cmp
xor
xchg
inc
push
rol
add
adc
or
dec
(bad)
in
retf
mov
or
jne
cmp
je
in
int
(bad)
sub
sar
jns
ror
test
aas
ins
push
cmp
add
add
mov
jmp
inc
pushf
mov
jno
mov
rcl
jmp
adc
out
mov
mov
or
add
lahf
adc
sub
(bad)
sbb
inc
xor
dec
and
adc
and
hlt
into
dec
cs
mov
test
fwait
cld
push
xor
and
rcr
inc
retf
mov
mov
or
jecxz
or
das
or
xchg
mov
(bad)
jne
cmp
jl
fstp
pusha
cmp
cmp
xor
jge
fsub
clc
mov
jge
mov
mov
mov
xor
mov
fwait
inc
jmp
retf
mov
sub
inc
ss
pop
and
push
or
cwde
ret
js
push
sub
imul
cs
add
jle
adc
xchg
cmp
push
or
stc
dec
pop
enter
fcom
pop
sbb
scas
rol
pop
and
add
fwait
xor
(bad)
xchg
jmp
add
adc
add
mov
add
je
ins
loope
adc
sub
in
mov
outs
jo
or
or
mov
fnstenv
push
pop
in
not
arpl
or
mov
pop
mov
js
cmc
retf
add
jne
cmp
(bad)
stc
(bad)
push
mov
test
or
mov
cmps
xchg
add
imul
push
inc
mov
push
inc
fcom
jbe
(bad)
(bad)
ror
add
dec
sbb
mov
push
jnp
add
ss
jl
xlat
add
pop
out
add
pop
pop
retf
jae
add
push
cmps
mov
inc
and
test
and
call
or
and
jo
and
popa
outs
adc
and
add
pop
and
cs
ins
sbb
mov
inc
and
add
movs
test
push
xor
adc
(bad)
cli
adc
xor
pop
leave
gs
pop
xchg
pop
jne
pop
out
sbb
and
jbe
and
and
xchg
ret
and
into
sub
ins
push
adc
mov
add
mov
inc
push
jne
dec
jmp
xchg
xor
push
inc
inc
xchg
xchg
pushf
sub
sbb
adc
retf
cmps
shl
sbb
adc
pop
sub
and
jo
sbb
xor
inc
dec
mov
dec
stos
test
inc
adc
add
jne
mov
ins
popf
fstp
add
pop
and
xchg
xor
jno
pop
inc
jb
add
rcl
adc
inc
fwait
and
sub
rol
add
inc
outs
xchg
jmp
push
adc
outs
bound
xchg
sbb
xchg
sub
(bad)
pop
inc
adc
push
in
pop
xor
inc
jmp
rcr
aas
push
xor
stos
or
xor
stos
or
cli
pop
test
fld
or
jge
mov
neg
aad
not
(bad)
or
je
mov
and
sbb
mov
add
div
stos
add
mov
inc
dec
or
leave
div
or
jg
test
add
lock
or
sub
lahf
adc
cpuid
or
or
adc
add
mov
sbb
lock
add
fimul
or
adc
fidiv
mov
jno
pop
inc
mov
jge
(bad)
xchg
fild
(bad)
adc
adc
pop
mov
adc
jb
or
arpl
out
push
jno
xor
sub
mov
mov
pop
dec
add
dec
repnz
out
mov
or
movs
jmp
imul
sub
pop
adc
sti
add
add
stc
out
test
pop
jle
mov
sbb
fisubr
neg
push
push
pop
sbb
ror
fucomi
(bad)
shr
pop
pop
pop
jmp
sbb
add
fdiv
sbb
pusha
dec
add
inc
inc
lods
or
test
pop
xor
mov
dec
xor
ret
cmps
fsubr
push
mov
les
mov
(bad)
pusha
cmp
mov
mov
std
jl
pop
and
xor
je
inc
dec
and
or
mov
neg
adc
push
inc
push
div
fstp
je
dec
adc
cmc
or
loopne
sub
sar
stos
sbb
je
mov
or
(bad)
and
dec
cli
rcl
(bad)
adc
mov
(bad)
fisttp
loop
mov
dec
add
xor
mov
mov
mov
stos
fld
outs
pushf
push
(bad)
dec
xor
mov
add
or
xor
test
enter
add
mov
inc
pop
dec
je
dec
jne
jno
mov
jmp
test
mov
or
dec
mov
ds
cmp
test
mov
cmps
movs
js
and
or
imul
cmps
mov
lea
fdivr
sbb
xchg
cmp
je
push
push
cmp
mov
(bad)
(bad)
and
or
push
mov
sti
dec
les
inc
loop
ret
push
ds
push
mov
in
outs
outs
sbb
mov
sub
sub
and
fucomip
lods
(bad)
sub
sub
inc
sub
sub
fidiv
mov
sub
xlat
mov
aaa
or
je
xor
sbb
sub
sbb
test
loopne
xor
fdiv
movs
add
scas
adc
in
fcomp
sub
push
xor
and
test
sbb
push
cmp
inc
push
xor
addr16
jle
or
icebp
scas
jo
inc
es
cmc
aas
adc
(bad)
cli
imul
sbb
scas
es
sub
fabs
fwait
mov
xor
pop
frndint
and
scas
outs
fdivr
cmps
sbb
fstp
pop
inc
div
mov
push
fbstp
lea
mov
mov
fwait
mov
mov
in
cmp
xor
cmp
jge
jns
fs
pusha
add
mov
or
jae
inc
cmp
fisubr
and
js
inc
adc
fisttp
cmp
jmp
outs
mov
fs
mov
fsub
and
je
sti
push
or
jmp
ret
scas
out
or
in
adc
push
pop
xlat
ror
pop
push
stos
xor
xchg
ss
add
test
or
jge
(bad)
cli
test
fisttp
sub
cwde
fiadd
jae
dec
add
pusha
fild
fild
cli
add
clc
xchg
sub
xchg
push
fidiv
push
outs
pushf
pop
fwait
out
jne
mov
inc
dec
jne
xor
jne
dec
jne
out
mov
enter
pop
adc
push
jbe
outs
ins
and
cmp
enter
cmp
popa
xor
fdiv
mov
fisttp
pop
out
sub
enter
loopne
outs
and
xchg
loopne
cli
(bad)
mov
pop
adc
add
dec
fs
imul
and
adc
xchg
add
test
mov
loopne
or
jbe
sbb
je
lea
mov
inc
push
cmp
jecxz
add
sub
push
movs
stos
jp
xor
push
jb
or
sub
mov
sub
push
stc
xor
dec
adc
retf
data16
jne
test
lods
ja
jmp
sti
adc
mov
or
sub
mov
adc
xchg
lock
mov
test
mov
push
push
sahf
js
and
in
push
fldenv
call
aas
cmp
pop
mov
fadd
push
cs
nop
inc
xor
fldenv
cmp
add
xchg
in
mov
mov
push
loopne
pop
int3
mov
sub
pop
nop
gs
or
pop
mov
sub
push
and
adc
mov
shl
fcom
xchg
mov
nop
cmp
inc
or
fdiv
sub
repnz
and
pop
push
sub
sub
clc
inc
pop
add
ins
nop
hlt
shl
and
shr
(bad)
fs
push
push
je
sbb
int3
and
in
xchg
int3
aas
popa
enter
cmp
add
hlt
mov
repnz
mov
push
adc
sysret
hlt
(bad)
in
out
je
mov
or
sub
and
or
fidiv
cmc
adc
add
outs
adc
xchg
sahf
clc
mov
push
sti
out
or
sti
add
and
(bad)
add
sbb
and
fsubp
and
or
xchg
cdq
popa
adc
xchg
nop
xchg
push
jae
add
jmp
fsub
adc
push
mov
cmp
mov
mov
clc
push
dec
ds
inc
push
push
cmp
pushf
push
jl
and
mov
nop
ret
fwait
fs
jmp
sbb
clc
push
in
idiv
add
sub
cmp
call
pop
push
aas
jge
inc
sahf
add
fsub
jmp
test
add
sbb
pop
jne
cmc
push
scas
pop
cmp
or
fimul
lock
inc
jle
mov
xlat
pop
cmp
mov
test
aaa
push
shr
add
push
lock
push
cwde
into
xchg
pop
xchg
arpl
or
pop
and
in
in
inc
push
sub
out
lock
inc
repz
in
or
mov
aad
and
adc
push
add
repnz
cld
pop
and
nop
movs
or
cmp
clc
push
inc
dec
mov
clc
pop
jb
fadd
and
cmp
cmp
add
mov
push
push
sub
hlt
shl
test
gs
adc
into
adc
xchg
adc
add
nop
mov
ds
ins
ins
cmp
jo
xor
aad
push
retf
push
or
inc
xor
les
jbe
mov
inc
add
rol
jb
shr
ss
int3
in
sub
arpl
jp
ins
ror
lods
mov
adc
mov
sbb
add
mov
outs
push
xor
repz
les
cmp
test
mov
lods
adc
inc
out
adc
mov
dec
stos
stos
call
pop
mov
leave
jmp
mov
sbb
pusha
pop
(bad)
pop
stos
jb
adc
jb
push
addr16
mov
jae
xor
sbb
lods
(bad)
in
sbb
jge
add
lock
xchg
mov
xchg
cli
sub
push
mov
je
mov
adc
fild
adc
xor
adc
adc
ret
or
pop
push
xchg
xor
jb
ins
cmovs
jge
jo
cmp
sub
pop
je
jne
mov
push
shl
pop
jmp
inc
xchg
or
frstor
pop
(bad)
ds
dec
jo
jle
push
cmc
loopne
fldcw
xor
pop
jae
mov
add
dec
or
inc
addr16
jge
add
pop
add
adc
push
inc
sti
mul
pop
je
inc
cmp
xor
adc
jmp
sbb
or
repnz
sub
les
inc
mov
push
mov
cld
mov
pop
sub
nop
test
or
mov
jbe
jbe
hlt
or
outs
sbb
dec
or
mov
fcomp
cmp
add
das
push
push
lahf
bnd
mov
(bad)
and
push
pop
sub
hlt
push
sub
mov
add
push
xor
jmp
pop
scas
adc
xchg
stc
or
fadd
enter
mov
enter
or
jne
jecxz
das
iret
and
sti
mov
jmp
and
aad
loopne
int3
sbb
pop
(bad)
ror
adc
cwde
es
inc
arpl
and
mov
leave
add
fs
ins
add
xchg
xchg
jae
pop
scas
mov
dec
sub
mov
cld
je
add
imul
out
mov
in
sub
adc
ins
inc
add
sub
jno
add
or
xor
add
xor
mov
lods
or
call
add
jle
sbb
mov
icebp
pop
adc
test
cmp
test
xor
popa
rol
rol
sub
add
add
add
lock
xchg
jno
rcr
test
cld
add
icebp
jno
and
lock
pop
cmps
rcl
rcl
mov
add
mov
or
div
push
lods
xor
inc
cmp
fcom
in
mov
enter
jo
or
and
cmps
fdiv
add
pop
dec
push
out
daa
fucomip
hlt
adc
pop
loopne
add
xor
ins
jb
sbb
aas
inc
inc
add
aam
lds
in
inc
jle
jno
retf
and
jmp
cmps
cwde
push
mov
sbb
and
lods
and
push
or
add
(bad)
hlt
loopne
call
mov
test
stos
ss
mov
or
and
repnz
jb
cmp
inc
rol
inc
sub
bound
jmp
jb
popf
mov
jge
lods
and
jae
js
in
jb
or
jae
add
sar
test
mov
sbb
sub
xor
nop
test
int3
repnz
and
xchg
xor
push
call
push
inc
mov
aaa
or
dec
push
in
push
mov
arpl
push
jne
cmps
inc
and
stos
nop
and
adc
push
enter
adc
mov
add
add
mov
dec
cmp
mov
stos
adc
inc
dec
ja
scas
lods
dec
push
push
ja
push
sub
xchg
lea
jp
mov
adc
and
hlt
adc
adc
sub
and
fsubr
add
xor
pop
or
sbb
add
push
or
enter
imul
inc
mov
sub
inc
or
add
(bad)
shr
jne
jmp
inc
adc
jmp
outs
adc
xchg
in
pop
int3
dec
shr
push
test
loop
push
adc
(bad)
sbb
add
mov
ror
mov
jg
ins
mov
jnp
push
adc
and
add
add
jae
sub
pop
out
pop
push
out
(bad)
outs
ja
sub
aad
cmc
inc
ins
jbe
xor
hlt
mov
outs
adc
sub
pop
add
push
jg
out
dec
ins
cli
sub
icebp
or
sub
jg
inc
test
sub
or
sbb
mov
cwde
mov
test
loopne
fs
in
test
sbb
idiv
or
shl
fild
adc
jmp
shl
jmp
pop
ins
sub
adc
or
call
sub
dec
add
add
push
fmul
adc
push
ret
cwde
xor
iret
adc
xor
(bad)
pop
loopne
fdivr
adc
push
jecxz
jg
(bad)
(bad)
sub
addr16
adc
push
push
hlt
jge
cld
imul
jmp
push
xor
inc
jmp
jbe
leave
fwait
cmp
dec
inc
and
push
mov
movs
inc
push
fcom
movs
in
scas
sub
fcom
outs
clc
or
arpl
push
stos
or
xchg
add
pop
cld
xchg
xchg
inc
push
push
cmp
je
jmp
mov
xchg
je
jmp
xor
cld
push
jmp
and
add
push
sub
mov
add
mov
retf
mov
or
push
push
dec
ret
mov
or
or
add
mov
jg
std
mov
addr16
lods
aaa
add
xchg
pop
jge
pop
cld
or
test
jne
dec
cld
mov
(bad)
dec
clc
push
rcr
scas
inc
loopne
mov
mov
fs
dec
add
mov
std
push
shl
cs
and
int3
mov
mov
int
lods
fcom
lock
mov
cmp
adc
mov
mov
enter
push
rcl
or
fwait
arpl
inc
lock
fwait
in
mov
sbb
aaa
mov
xchg
nop
ds
in
fs
pop
cwde
pushf
mov
movs
nop
add
mov
mov
push
jge
push
mov
pop
or
test
int
shl
aad
dec
xor
or
call
cld
or
std
lods
mov
mov
je
dec
pop
or
in
cli
cmp
imul
add
add
adc
xchg
data16
hlt
add
mov
xchg
(bad)
(bad)
popa
cmp
jo
pushf
sub
cmps
inc
cdq
lods
rcr
or
sub
loope
fisttp
push
jo
in
push
cmp
iret
inc
sub
enter
inc
sub
imul
sub
jmp
enter
pushf
(bad)
cld
xor
lahf
(bad)
(bad)
mov
(bad)
sbb
mov
int3
xor
mov
arpl
sub
or
jge
clc
out
mov
cmp
add
add
into
mov
mov
std
adc
pop
mov
adc
fwait
and
aam
dec
mov
and
and
adc
or
sar
in
add
mov
pop
jg
or
sbb
cmp
pop
mov
mov
xchg
dec
and
test
jo
or
mov
cwde
iret
sahf
daa
test
cmp
jne
daa
mov
mov
push
push
push
adc
retf
push
sbb
jmp
pop
xor
inc
jbe
les
sub
sbb
fcom
adc
push
mov
push
mov
jmp
je
jne
test
pushf
mov
dec
pop
push
push
outs
jle
aad
mov
fdivr
add
xchg
test
sub
rcr
pop
in
or
mov
fdivr
fcomp
sbb
mov
fs
add
adc
push
fcom
add
xchg
outs
mov
dec
mov
or
mov
fadd
popa
push
inc
fistp
shr
mov
xor
pop
scas
shl
xchg
enter
pusha
add
jnp
(bad)
or
or
fwait
add
add
pop
mov
jle
stos
loopne
fistp
inc
push
rcl
ret
cmp
pop
or
fistp
jno
fst
std
pop
jne
mov
push
dec
ret
ds
or
push
movs
mov
test
lods
mov
scas
stos
sub
adc
inc
in
mov
mov
jnp
push
icebp
adc
cmp
jb
dec
rol
cld
pop
rcl
stos
push
push
xchg
int
and
int
ror
jae
nop
in
ror
iret
dec
fld
mov
sbb
pop
je
and
push
mov
mov
adc
adc
and
add
adc
add
movzx
(bad)
and
xor
sbb
dec
stc
or
(bad)
(bad)
add
push
repz
cli
add
sbb
push
das
mov
jb
pop
ds
mov
jp
mov
sbb
jmp
sub
jae
cmp
sub
push
cld
cmp
les
cmp
push
rcl
ret
sbb
test
sbb
push
jbe
adc
sub
outs
fild
aaa
pop
sub
inc
pop
(bad)
lock
scas
or
add
or
or
mov
dec
loopne
or
pop
jne
adc
retf
and
add
out
add
mov
or
shr
add
jne
pop
sbb
(bad)
jnp
test
lea
cmps
je
call
or
mov
clc
pop
or
or
and
shr
(bad)
lods
pop
cmps
add
xor
jmp
adc
mov
push
js
add
cmp
lods
jp
div
pop
repnz
pop
inc
mov
into
inc
(bad)
mov
and
(bad)
mov
out
into
dec
sub
mov
inc
or
or
cwde
inc
mov
aad
call
push
scas
mov
xchg
xchg
dec
inc
dec
movs
push
sbb
lods
pop
rol
mov
mov
sti
push
popf
pusha
movsx
and
pop
push
or
adc
and
add
jl
std
add
inc
pop
sar
xchg
or
xor
xor
mov
and
xor
cld
push
or
pushf
and
data16
pop
out
je
inc
push
fsub
adc
push
ror
push
loope
loope
mov
frstor
push
push
push
xor
popa
dec
sbb
push
and
add
add
mov
and
jbe
adc
repz
jecxz
or
mov
add
adc
or
add
jae
gs
xor
cmp
es
add
push
inc
ret
or
adc
mov
add
push
mov
mov
push
and
or
sar
xchg
inc
enter
or
inc
cwde
or
nop
xchg
sub
inc
mov
shl
les
pop
or
dec
add
in
jl
or
push
mov
mov
mov
movs
imul
mov
(bad)
dec
out
jl
inc
sbb
pop
mov
add
retf
mov
cld
add
les
lock
push
mov
test
fisttp
dec
(bad)
xor
push
rol
mov
(bad)
test
add
sbb
cld
push
inc
jl
pop
jg
or
xor
inc
jmp
pop
pop
dec
pop
pusha
lea
xor
test
pop
(bad)
adc
shl
adc
enter
sub
jne
cwde
aam
(bad)
or
sbb
dec
les
push
sbb
fild
loopne
jmp
or
push
inc
add
mov
pusha
in
jl
call
cmp
pop
sbb
enter
adc
inc
lea
dec
addr16
outs
or
jmp
sbb
adc
push
ds
sbb
mov
pop
mov
cmp
pop
jae
(bad)
add
and
cmp
jne
dec
push
sbb
out
gs
mov
dec
cmp
dec
adc
inc
adc
sbb
jb
adc
or
inc
sbb
sub
ret
and
pop
repz
aad
clc
inc
or
xchg
add
mov
jg
jns
pop
push
push
and
push
and
mov
sub
pop
in
mov
inc
inc
les
lods
mov
pop
aaa
enter
adc
je
imul
outs
sub
xor
or
and
mov
ret
cmp
fwait
add
test
xor
data16
vpcmpgtd
sbb
jbe
push
popa
sub
int3
rcl
mov
adc
fild
push
add
and
sbb
mov
push
add
das
sub
adc
mov
scas
and
lahf
or
add
jl
dec
cld
ss
add
cmp
jp
(bad)
mov
pop
lods
inc
ds
inc
pop
xchg
cmp
pop
or
hlt
aas
push
pusha
push
ds
ret
in
mov
or
pop
and
inc
mov
or
out
outs
adc
in
mov
mov
cmp
mov
mov
xchg
in
fadd
pop
icebp
lods
call
adc
int
push
mov
add
cmp
mov
jmp
fistp
push
lods
and
and
add
(bad)
shr
out
mov
mov
sbb
mov
sub
cmp
inc
xchg
or
aaa
and
dec
mov
cmp
pop
mul
lea
int
test
test
dec
xor
push
adc
je
fcom
sbb
outs
inc
lods
in
lea
jle
ror
dec
rol
xchg
or
scas
xchg
sub
lahf
xor
or
and
ror
loopne
or
je
or
sub
call
outs
fst
add
jle
sbb
sbb
adc
add
sbb
lock
hlt
cmp
(bad)
out
add
xor
call
pusha
jl
inc
mov
or
mov
jg
adc
lds
inc
dec
jne
or
or
(bad)
mov
es
adc
adc
shl
xchg
or
adc
and
sub
mov
sbb
adc
rcr
cmp
sub
sahf
sub
or
les
iret
in
pop
adc
lods
ds
fs
mov
cmp
loopne
add
pop
mov
mov
adc
rcr
pop
pop
test
or
push
or
dec
out
cmp
pop
mov
inc
(bad)
and
xor
(bad)
sub
iret
xor
and
mov
mov
enter
mov
and
(bad)
and
fdivr
fnstcw
mov
fwait
xchg
int
lds
adc
lds
rol
xor
xor
or
or
pushf
jge
add
(bad)
pop
add
lds
cmp
les
ror
pushf
hlt
fdiv
test
or
or
sub
adc
(bad)
dec
jae
sbb
jo
fadd
xor
aam
rcl
push
fs
pushf
vandps
int
mov
retf
mov
int
test
into
sahf
lods
lds
fstp
lds
lds
xchg
int
add
sub
jl
mov
daa
js
push
sti
stos
dec
dec
aaa
xchg
enter
add
cwde
mov
fcomp
lods
xlat
jmp
fadd
mov
js
xchg
mov
mov
or
mov
int
repz
fs
dec
mov
dec
lods
mov
adc
les
repz
loop
in
adc
pop
add
or
fs
and
inc
push
cmp
and
inc
fcomp
mov
in
je
jo
pop
add
lds
inc
sahf
push
jg
int3
fs
loopne
and
enter
scas
mov
xchg
pop
mov
jo
mov
inc
lock
or
xchg
jns
jnp
cdq
pop
lods
push
iret
dec
push
outs
xchg
pop
stos
(bad)
repnz
ins
add
repz
pop
and
repnz
aas
jp
iret
mov
ja
scas
pop
and
push
jmp
ss
aaa
pop
fisubr
adc
xor
imul
pop
pop
or
adc
loop
jp
mov
pop
pop
aaa
mov
shl
cmp
mov
lods
xchg
inc
mov
mov
mov
or
pop
mov
retf
frstor
jbe
dec
popf
push
idiv
xchg
xchg
xchg
xchg
or
rcl
xchg
xchg
xchg
xchg
ror
leave
xchg
lahf
sbb
jbe
xchg
fimul
stos
mov
push
add
add
pop
pop
pop
push
lsl
or
pop
mov
fsubr
mov
fstp
adc
add
xchg
jns
jns
(bad)
mov
dec
xlat
cwde
imul
out
jae
add
popa
sbb
imul
xor
jl
fwait
adc
jbe
das
outs
fwait
icebp
jne
and
popa
fisubr
and
sub
in
sub
ret
stos
retf
fcmovne
in
dec
jle
lahf
push
xor
inc
aad
cmc
outs
retf
retf
retf
retf
fs
cmps
test
dec
lds
outs
ja
retf
mov
jl
jno
pop
pop
movs
mov
xlat
in
outs
cs
mov
out
in
outs
fidivr
jae
adc
pop
pop
jp
loope
sbb
fistp
push
pop
push
adc
ds
dec
pop
je
retf
retf
retf
out
imul
mov
int3
retf
retf
or
fwait
adc
test
dec
arpl
dec
inc
shl
xchg
repz
aad
mov
fld
jge
dec
dec
mov
mov
aad
(bad)
xor
test
mov
cmps
lock
lods
or
fisttp
aad
aad
mov
adc
movs
loop
dec
(bad)
xlat
or
out
jbe
mov
scas
jle
jae
sbb
jecxz
dec
leave
inc
aas
retf
retf
pop
and
idiv
nop
jmp
retf
aad
inc
add
sub
mov
jmp
das
cmp
push
lahf
inc
fsub
int
clc
push
inc
add
test
mov
repnz
popf
aad
push
iret
ret
add
(bad)
out
out
stos
and
add
push
xchg
jg
retf
(bad)
rcr
mov
and
xor
outs
aaa
mov
cmp
add
jne
aaa
and
xor
xchg
add
jno
jmp
in
xchg
and
aaa
arpl
xchg
xchg
mov
sub
cmp
fidiv
outs
aaa
pop
mov
std
fcmovnbe
loopne
out
adc
std
pop
push
fcom
repnz
rol
mov
popf
scas
test
cwde
repz
jns
neg
sbb
push
iret
dec
dec
add
int
ins
sub
stos
ja
jnp
mov
call
sbb
push
ror
push
ret
sub
mov
add
pop
dec
leave
fwait
retf
retf
retf
pop
ror
js
and
call
stc
in
aam
movs
repnz
dec
xchg
xchg
mov
test
and
test
xchg
xchg
xchg
xchg
sti
out
adc
pop
xlat
push
push
jl
ss
ss
mov
cmps
mov
jns
jns
mov
adc
pop
fst
jle
or
test
or
in
in
pusha
fisttp
jge
mov
mov
in
in
arpl
int3
adc
int
in
pop
jb
adc
popa
mov
int
mov
out
or
push
mov
mov
call
rcr
data16
dec
jbe
addr16
fsubr
adc
bswap
push
mov
cmp
mov
test
out
push
repnz
es
add
cmp
outs
mov
in
ins
out
popa
jno
fcmovnu
ss
mov
ret
ret
sbb
mov
cmp
mov
jmp
stos
or
frstor
out
mov
sbb
cmp
(bad)
jo
push
gs
test
enter
push
lahf
add
ret
pop
pop
pop
pop
mov
jne
inc
mov
jae
aad
sub
iret
retf
retf
scas
(bad)
jns
lods
retfw
movs
xchg
cmp
iret
and
jae
repnz
mov
iret
enter
xchg
dec
enter
push
add
iret
and
push
jne
imul
sub
dec
mov
pop
dec
fwait
pop
aam
leave
test
pop
retf
(bad)
mov
movs
or
imul
xchg
fwait
retf
retf
jae
cdq
adc
push
retf
xchg
sub
push
jae
sub
cdq
fcom
push
lahf
cmp
inc
scas
mov
sub
pop
out
mov
fisubr
jae
xor
xor
or
push
push
sub
dec
xchg
aas
mov
aaa
xchg
fcom
cld
inc
loop
sub
repnz
shl
out
mov
add
fs
xchg
cmp
pop
pop
loop
pop
sar
cmp
jg
scas
sub
and
pop
pop
pop
pop
inc
mov
xor
pop
aad
jbe
pop
pop
lock
ss
pop
pop
in
out
xor
(bad)
(bad)
repnz
int
retf
(bad)
cmp
mov
and
retf
retf
retf
retf
sbb
pop
frndint
hlt
cmp
and
loop
int
out
jg
inc
pop
repnz
sahf
jg
leave
div
scas
cmp
xor
in
repnz
inc
pop
rcr
rol
cmp
ds
jae
xchg
int
mov
dec
jmp
inc
aas
adc
xchg
adc
fist
(bad)
in
xor
repz
inc
cdq
cwde
adc
shr
call
(bad)
inc
mov
call
mov
and
enter
repz
inc
sar
rcl
mov
mov
push
repnz
jmp
das
mov
ret
cmp
sub
rcr
sbb
hlt
retf
fcmovne
in
jmp
lds
inc
sub
xlat
pop
fwait
retf
retf
retf
mov
jns
div
out
xchg
xchg
xchg
mov
int3
dec
mov
sbb
xchg
xchg
mov
or
jae
cwde
fsub
inc
leave
inc
fidiv
das
outs
(bad)
adc
retf
mov
sbb
aam
pop
jne
loop
daa
push
sub
in
in
lods
inc
mov
mov
retf
retf
fist
cld
xchg
out
and
pop
mov
iret
mov
test
(bad)
nop
repz
or
push
jg
int
ins
outs
ret
and
aad
cmp
mov
dec
pusha
pop
fidiv
push
ret
xchg
lods
das
ja
sbb
aad
rcr
push
pop
ror
pop
fidiv
js
pop
mov
sub
add
sub
push
outs
cs
mov
dec
call
(bad)
xchg
mov
xchg
mov
imul
jns
add
push
push
pop
jl
cmps
mov
add
jns
mov
cmp
(bad)
fucom
ins
js
pop
fst
mov
add
scas
movs
ins
or
test
aad
pop
ss
(bad)
pusha
fist
out
mov
das
das
outs
test
or
add
ss
repnz
sar
(bad)
test
xchg
popf
iret
fstp
in
inc
dec
sbb
imul
and
mov
jns
sbb
jle
jae
fwait
nop
fcmovnbe
push
sub
jnp
fcomi
repnz
adc
test
push
cdq
xchg
and
retf
je
jg
retf
out
and
sub
iret
xor
lahf
call
sub
int3
in
pop
cs
push
jg
push
popf
test
mov
push
movs
lds
gs
gs
sub
and
jmp
adc
fwait
repz
pop
sub
mov
ret
and
stc
mov
jge
mov
scas
fisubr
nop
sub
mov
cli
and
in
loop
test
jg
dec
xchg
loopne
cs
mov
jae
lock
sub
sub
es
mov
fwait
xchg
mov
and
xor
jl
repz
mov
adc
dec
pop
int
xchg
sub
int
sub
jae
imul
das
and
std
or
mov
sub
sub
aaa
xchg
xchg
mov
xor
xchg
xchg
or
aad
loope
loopne
ins
loopne
(bad)
dec
test
jg
adc
xchg
div
jbe
sbb
inc
xor
loopne
cdq
xchg
jmp
repz
addr16
pop
stos
mov
aaa
sub
mov
jmp
mov
scas
retf
iret
push
sub
cmp
fnsave
fwait
adc
out
in
push
scas
sub
add
int3
in
shr
mov
push
daa
sti
sub
dec
ret
cmp
xchg
or
scas
repnz
mov
retf
retf
push
push
adc
outs
imul
push
fwait
mov
loopne
pop
ss
call
aad
jg
dec
add
aad
mov
sbb
push
sub
sub
dec
leave
ss
inc
retf
add
pop
cdq
mov
test
lea
inc
xchg
cmp
or
jae
sub
pop
push
inc
sub
std
push
inc
dec
xchg
fwait
dec
std
jmp
stc
cmp
xchg
inc
push
push
lods
stos
xchg
iret
repz
sbb
in
push
dec
stos
lahf
addr16
lods
xchg
add
dec
pop
xchg
out
cmp
mov
sahf
iret
repz
inc
pop
pop
xchg
mov
cmp
addr16
pop
inc
inc
jns
out
call
sahf
iret
repz
pop
inc
fwait
mov
push
stc
cmp
addr16
jns
xor
out
cmp
test
pop
xchg
mov
stc
cmp
out
inc
gs
jmp
mov
ds
inc
addr16
jns
js
mov
or
ret
je
jns
loopne
out
repnz
push
das
das
(bad)
mov
retf
repz
es
ret
sbb
pop
imul
dec
rol
sbb
hlt
ins
inc
xor
repz
(bad)
mov
iret
enter
mov
repnz
xor
data16
xor
xor
iret
repnz
dec
inc
leave
mov
repz
out
jne
inc
iret
mov
sub
sbb
jnp
pop
int
iret
repnz
cmps
daa
add
jns
pop
shl
out
das
or
push
sar
jns
iret
repnz
push
sub
repz
fldcw
lahf
out
adc
(bad)
scas
arpl
iret
out
dec
adc
sahf
in
(bad)
sahf
out
imul
mov
icebp
pusha
push
jg
(bad)
arpl
sub
fwait
popw
dec
xor
das
das
das
cdq
ret
mov
or
pop
dec
stos
ins
cmp
leave
es
jmp
aaa
sahf
xchg
ror
push
fsubrp
and
pop
sbb
xchg
mov
stos
and
push
push
jg
sub
xlat
jmp
das
das
das
mov
xor
fsub
jge
xlat
push
add
stos
sub
sub
retf
retf
pop
push
mov
jns
loopne
sbb
push
iret
mov
dec
add
test
xor
jnp
cmc
loop
sbb
aad
pop
or
push
jl
daa
dec
sub
add
std
rcr
push
(bad)
out
dec
xor
cwde
lods
sub
mov
repnz
rep
jg
push
sbb
leave
sub
outs
sub
push
sbb
jmp
jae
aas
neg
call
mov
mov
mov
or
fwait
enter
int3
sub
jg
add
repnz
push
movs
push
jno
jmp
push
popa
nop
xchg
addr16
jg
iret
movs
ret
jnp
xchg
out
jae
jns
jo
pop
(bad)
out
mov
jmp
xadd
imul
or
jg
shl
pop
nop
out
into
sub
and
out
imul
and
out
inc
les
out
xor
mov
(bad)
and
and
les
cmc
xchg
aaa
pop
frstor
mov
shr
push
cs
out
fsubr
xor
test
xchg
dec
repz
cmp
mov
mov
push
or
jg
push
inc
ss
das
outs
add
push
mov
mov
and
in
outs
outs
pop
sub
cmps
not
xchg
scas
cli
jp
fiadd
mov
pop
mov
hlt
cmps
shr
push
clc
movs
sub
mov
pop
(bad)
(bad)
xlat
jns
pop
pop
fidivr
push
dec
leave
dec
mov
(bad)
addr16
(bad)
in
cmc
xchg
and
and
push
jl
jg
jg
test
in
jns
or
sbb
mov
ret
mov
mov
in
rcl
aaa
inc
data16
jle
mov
lods
fidivr
xchg
fwait
mov
jno
scas
adc
cmovae
dec
out
add
pop
jmp
fwait
pop
jmp
js
dec
pop
loopne
sbb
inc
xchg
inc
jg
jl
mov
pop
cs
cmp
pop
sub
popa
in
adc
out
repnz
sbb
scas
or
pop
call
fst
inc
imul
and
daa
dec
jecxz
dec
rep
out
call
mov
push
aaa
xchg
aaa
jg
repz
add
mov
jae
jnp
ja
cdq
dec
ds
out
pop
(bad)
pop
(bad)
jle
mov
jg
pop
pop
pop
pop
(bad)
or
xchg
addr16
adc
mov
xchg
aad
in
mov
(bad)
pop
(bad)
(bad)
mov
aam
sub
mov
(bad)
lods
mov
or
enter
pushf
in
mov
push
das
in
outs
outs
mov
jp
jl
aam
outs
inc
ss
inc
jns
sbb
shl
push
cmp
jns
jp
sub
push
out
rcr
rol
das
das
int3
and
outs
and
jbe
cmp
out
ret
cmp
cmp
mov
int
inc
das
adc
jg
out
rcr
adc
(bad)
repz
es
test
pop
fsubrp
push
mov
retf
call
pop
fidivr
cmp
test
rol
pop
jecxz
imul
xchg
jo
invd
or
xchg
imul
test
xor
pop
out
sub
pop
aaa
mov
movs
push
jne
stos
jmp
ret
cmp
retf
retf
retf
pop
mov
xlat
movs
mov
adc
mov
cmp
push
retf
mov
jno
jbe
inc
mov
push
mov
fld
fild
mov
outs
shl
jecxz
outs
fwait
xchg
mov
cdq
ret
pop
aad
add
in
inc
add
hlt
lods
lea
push
(bad)
iret
loopne
jg
lds
daa
mov
cmps
mov
jg
into
out
xchg
int
or
fnstsw
mov
mov
stos
adc
sahf
adc
fcmove
sar
enter
lahf
inc
in
in
xchg
and
cmp
inc
or
pop
scas
fucom
fdivr
(bad)
mov
fs
hlt
cmp
push
in
mov
cmp
jg
imul
cli
sub
add
push
adc
repnz
mov
iret
repnz
inc
scas
pop
mov
xor
jns
aad
jo
sub
add
das
outs
fwait
mov
(bad)
mov
mov
mov
aas
out
call
xor
popa
jmp
mov
sbb
mov
hlt
outs
mov
in
shl
pusha
pop
cli
ret
mov
fistp
mov
or
sar
ins
addr16
adc
and
mov
adc
dec
fstp
mov
jmp
and
pop
test
pop
ss
jg
xlat
jmp
sar
cli
pop
lahf
js
mov
jle
and
adc
jbe
jmp
and
ins
repz
jg
push
aas
add
xchg
mov
(bad)
int
pop
repz
jg
xor
(bad)
sub
or
sbb
inc
shl
push
sbb
and
outs
jns
jnp
jg
pop
or
repnz
out
or
ja
dec
jl
psadbw
and
jae
jns
xchg
ss
jae
inc
pop
je
dec
(bad)
jge
ja
je
ret
repnz
and
inc
test
(bad)
in
in
mov
pop
in
jmp
and
mov
jmp
xchg
pop
and
out
popf
es
ret
pop
cwde
inc
mov
loop
mov
(bad)
fnstcw
(bad)
out
sub
scas
adc
int
cmp
pop
loopne
test
bound
data16
out
jae
jecxz
jg
mov
(bad)
jg
xchg
out
jae
fidiv
sub
neg
mov
push
jne
pop
mov
movs
sub
frstor
adc
xchg
jg
mov
retf
(bad)
nop
jnp
sbb
adc
pop
jg
std
ret
retf
in
mov
mov
fbstp
repnz
nop
pop
shl
jo
mov
sbb
imul
or
ja
mov
jns
fwait
and
(bad)
cmp
rol
push
add
movs
ficomp
fstp
in
jb
xor
adc
or
fisubr
jl
enter
das
jno
jg
ds
dec
rcl
(bad)
inc
outs
cs
sahf
and
mov
xor
sub
mov
repnz
repnz
aaa
jg
mov
not
pop
outs
ins
out
push
xor
mov
and
call
push
out
aad
aad
aad
call
mov
aad
aad
aad
call
pop
jmp
xchg
sub
out
aad
aad
pop
pop
add
cmp
push
jmp
push
int
xchg
les
fstp
xor
sub
repnz
cmp
jmp
push
adc
lock
mov
int
and
movs
xchg
xor
jmp
pop
mov
sbb
dec
aaa
cwde
ret
mov
sub
in
in
mov
hlt
jns
add
xor
fcmovne
in
inc
clc
jecxz
inc
add
mov
outs
mov
(bad)
call
xchg
pop
fidivr
xchg
stos
pop
or
pop
call
pop
fstp
in
xchg
mov
mov
or
jne
bound
arpl
fadd
(bad)
repnz
ss
movs
outs
loop
int
jns
pop
dec
xchg
fcomp
sub
sub
jns
jns
mov
repnz
dec
cli
shl
jae
mov
lods
loopne
inc
mov
jbe
pusha
nop
ins
push
mov
movs
cmp
lods
inc
jl
mov
ret
int
mov
jg
sbb
xor
outs
fwait
mov
inc
fild
push
adc
xchg
js
ins
fidiv
das
out
fld
or
mov
add
in
clc
cmps
xchg
fwait
add
jns
(bad)
pop
sti
hlt
jb
ins
mov
in
movs
or
jle
mov
fadd
jns
add
std
xchg
aam
aam
js
jo
jns
mov
clc
leave
mov
rcl
push
xor
push
ss
fnstenv
retf
fcmovnu
mov
popf
addr16
mov
repnz
call
ret
test
gs
ins
repz
js
dec
or
fadd
jne
pop
fwait
repnz
out
xor
or
(bad)
icebp
(bad)
mov
out
idiv
mov
dec
and
cmps
call
pop
fstp
jbe
xchg
imul
xor
mov
mov
pop
and
lock
ins
mov
ins
div
and
lods
or
adc
inc
xchg
jge
pushf
mov
jbe
mov
push
cmp
stc
outs
mov
ins
retf
idiv
cmps
mov
jle
dec
fisubr
das
ds
loop
pop
mov
bsr
add
pop
pop
sub
in
mov
cdq
mov
pop
pop
pop
pop
lds
popa
dec
push
stos
jmp
jns
mov
clc
dec
iret
adc
aas
sbb
jns
push
cmp
imul
(bad)
push
daa
jbe
out
hlt
sbb
bound
rcr
fidiv
fidivr
cmc
jb
aam
pop
pop
pop
push
cmp
push
and
(bad)
mov
dec
cs
xor
mov
jle
or
out
ins
push
leave
push
arpl
xchg
xchg
mov
xor
xor
pop
mov
mov
cs
fucomp
sbb
scas
into
and
xlat
jecxz
repnz
aam
push
jg
fcmovnb
jno
adc
jae
stc
sub
popa
fidivr
pop
into
out
mov
cmp
jns
inc
pop
mov
pop
lds
jle
jmp
movs
lock
retf
retf
retf
neg
mov
push
sub
(bad)
call
(bad)
sub
mov
xchg
out
aaa
cmp
cdq
and
and
repnz
sahf
scas
lea
xchg
cmps
stos
add
pop
repz
dec
or
or
mov
out
jbe
out
cmp
cdq
sbb
fstp
mov
mov
repz
int3
mov
add
cli
sub
jmp
jns
test
inc
pop
jmp
scas
je
add
inc
mov
sub
push
adc
xchg
xchg
in
fsubp
xchg
aad
mov
inc
fidiv
das
das
mov
push
add
pop
fcomp
mov
popa
mov
push
pop
pop
pop
pop
shl
sub
add
into
outs
jae
enter
outs
jb
xchg
shl
pusha
jae
(bad)
stos
xor
cwde
sbb
retf
retf
fisttp
int3
or
clc
pop
fnsave
mov
adc
mov
pop
inc
call
mov
sbb
iret
nop
mov
jne
sub
pop
fidiv
dec
and
and
xor
dec
cmp
cs
outs
ja
jns
(bad)
xor
dec
jmp
mov
retf
fist
ja
sbb
xor
push
das
outs
aaa
xchg
cs
inc
(bad)
leave
pop
sar
hlt
fadd
fidiv
mov
daa
call
or
sbb
and
inc
int
stos
dec
out
pop
ja
sub
rol
mov
imul
sbb
cld
out
loopne
dec
sbb
repz
stc
push
push
push
mov
mov
ror
pop
call
das
das
outs
arpl
in
or
mov
ins
movs
scas
pop
fidiv
das
xchg
ins
xor
xchg
bound
xor
and
loopne
or
int
mov
scas
mov
jo
pop
mov
das
outs
aaa
lods
push
movs
xor
fdiv
loop
iret
in
ss
xchg
xchg
mov
out
add
pop
cmc
push
xchg
int3
sbb
xchg
cwde
xlat
jbe
int3
jbe
into
pop
enter
(bad)
(bad)
jmp
dec
xor
mov
ret
add
cmp
repz
clc
lahf
in
outs
ret
jns
jns
push
ins
push
mov
jns
mov
sar
repnz
ret
jns
jns
repnz
int3
outs
ja
aaa
dec
cmp
xor
fucomi
cmps
lahf
xchg
inc
sub
repnz
pop
mov
retf
retf
sti
and
loope
jbe
xor
scas
lahf
pop
outs
aaa
xchg
xchg
or
sub
add
loop
cs
das
rol
sbb
xor
fisub
xor
arpl
add
retf
fistp
lods
imul
fwait
retf
pop
mov
fsubr
pop
ins
repz
ret
dec
pop
push
pusha
ret
icebp
and
pop
les
push
lahf
mov
jb
jp
dec
xchg
xchg
mov
jmp
adc
hlt
push
dec
or
xchg
movs
(bad)
repnz
arpl
stc
or
mov
rcl
jmp
gs
movs
xlat
mov
push
cmps
jmp
gs
cmp
add
cmp
cmc
js
pop
cwde
ins
repz
cmp
dec
jbe
cmps
int
(bad)
jg
in
mov
retf
retf
sbb
adc
jo
xchg
adc
lods
das
jne
aas
push
and
loop
pop
(bad)
jmp
(bad)
xor
or
sbb
pop
adc
jo
jns
(bad)
cmps
loopne
adc
mov
push
dec
and
xchg
dec
repnz
adc
cmp
pop
repz
push
ins
push
mov
and
(bad)
adc
mov
nop
mov
outs
fs
xor
mov
or
inc
xchg
xchg
fs
sub
fnsave
ja
out
enter
adc
ss
nop
mov
xchg
xor
xor
pop
or
mov
into
scas
mov
push
ret
mov
or
dec
push
cmp
fldenv
push
xchg
sbb
jge
bnd
jns
or
xchg
ds
adc
in
out
sub
push
mov
mov
(bad)
daa
data16
sbb
lea
pusha
fidivr
arpl
pop
mov
mov
dec
ins
inc
rol
arpl
loopne
in
in
pop
mov
addr16
fadd
push
adc
int
shl
loopne
daa
(bad)
mov
imul
stc
fimul
dec
data16
mov
or
mov
dec
(bad)
int
lods
shl
mov
ror
inc
retf
retf
retf
(bad)
imul
stc
icebp
jne
push
inc
sahf
dec
lea
xchg
aaa
cmp
xchg
pop
mov
or
int
rcr
cli
dec
cdq
retf
retf
retf
jbe
push
sub
daa
sahf
mov
popa
mov
mov
dec
scas
add
cwde
cmp
dec
mov
les
jbe
jle
scas
push
pop
cmp
xchg
lahf
in
mov
fstp
rol
sbb
dec
out
or
jns
fstp
stos
loopne
push
cmp
jns
xchg
fdivr
int3
push
mov
int
(bad)
movs
xor
rcr
das
xor
xchg
and
pusha
aaa
pop
jno
push
cs
adc
faddp
pop
pop
ficom
add
xchg
sub
fucomi
jns
out
sub
cld
(bad)
movs
mov
aaa
mov
into
mov
push
cmp
test
mov
pusha
push
xchg
(bad)
jmp
int3
add
retf
(bad)
sub
int3
call
lods
das
push
jb
mov
les
shl
(bad)
jns
ins
pop
pop
sub
dec
push
lea
mov
mov
(bad)
scas
mov
jmp
out
in
cmp
lods
pop
sahf
cmp
int
sbb
xor
iret
xchg
fadd
into
dec
lds
inc
or
fs
popf
push
dec
outs
cs
das
lock
cmp
or
jmp
loope
add
fsubr
pusha
xor
fsubr
xchg
sbb
or
outs
inc
int
int
fld
dec
adc
mov
push
and
sbb
(bad)
inc
xchg
stc
push
ficom
fcmovnu
fdiv
mov
and
arpl
or
in
scas
adc
loopne
adc
pop
add
fcmovne
in
ds
dec
scas
test
jle
in
cmp
xchg
aaa
mov
retf
mov
adc
inc
aas
mov
push
sbb
add
lea
or
popf
lock
loope
mov
cld
bound
mov
mov
das
fiadd
fucomi
scas
jle
popf
je
mov
xor
jge
cmp
and
ficomp
dec
cmp
pop
repz
arpl
inc
mov
retf
(bad)
mov
stc
aaa
or
ja
out
enter
ret
push
xchg
pop
fwait
pop
jle
lods
repnz
mov
pop
mov
ror
mov
inc
jae
jns
(bad)
aam
ins
mov
pop
inc
xchg
in
pusha
into
mov
jle
mov
call
mov
outs
fwait
mov
sub
stc
cs
pop
mov
push
sub
push
in
pushf
imul
mov
mov
inc
test
adc
nop
sbb
or
xchg
adc
or
add
cdq
mov
movs
cmp
jge
push
(bad)
in
in
mov
mov
push
in
in
mov
loopne
pop
jp
push
popa
push
jae
xchg
(bad)
in
shl
push
repz
mov
aaa
xchg
xchg
imul
jl
addr16
jbe
(bad)
in
outs
cs
and
idiv
lahf
cmps
dec
lahf
fwait
das
das
das
fsubr
and
xchg
and
and
das
(bad)
cmc
jb
jno
jns
fstp
or
mov
mov
je
dec
fcmovnb
ins
or
das
outs
ja
jnp
cmc
cmc
push
mov
xor
test
jmp
pop
call
not
push
add
fstp
aas
out
or
(bad)
rcl
mov
(bad)
int
in
scas
(bad)
jo
fist
push
idiv
movd
cwde
(bad)
xchg
stos
(bad)
outs
repz
lahf
sub
test
repz
pop
mov
(bad)
mov
jns
jns
in
popa
fdivr
cs
xchg
cwde
push
repnz
mov
pop
pop
fimul
in
outs
inc
repz
mov
dec
pop
movs
outs
jle
dec
mov
add
and
(bad)
imul
mov
ss
push
imul
aam
ds
sbb
cmp
pop
leave
rol
ror
sbb
inc
mov
cmps
test
fst
pop
and
js
mov
ds
outs
mov
push
call
sti
xor
or
popf
dec
sub
pop
pop
ret
jae
mov
pop
(bad)
cmp
xor
in
dec
adc
fsubr
outs
xor
cmp
imul
xchg
mov
scas
shr
mov
mov
in
add
call
fldln2
scas
(bad)
(bad)
xchg
jns
daa
sar
add
fcmovne
in
icebp
sub
ss
dec
mov
adc
jp
in
sbb
ret
in
dec
test
sub
dec
fisttp
addr16
stos
pop
imul
enter
push
into
jb
sub
in
aaa
mov
mov
sub
int
push
(bad)
shl
repz
fcmovne
xchg
loop
test
cmp
(bad)
cld
enter
inc
mov
fild
addr16
repnz
add
shl
jae
fistp
ja
sbb
test
mov
das
outs
mov
mov
xchg
(bad)
mov
fstp
(bad)
jne
push
pop
sub
adc
repnz
retf
(bad)
clc
mov
add
(bad)
push
in
ins
repz
dec
aad
mov
dec
popf
lods
sub
inc
add
out
sbb
aas
ss
or
cmp
mov
add
in
out
inc
rcr
jecxz
cs
nop
int
retf
fisttp
scas
repnz
jmp
das
outs
aaa
mov
pop
mov
mov
push
cdq
or
movs
out
jbe
jp
inc
xchg
cmp
ds
(bad)
inc
or
inc
or
dec
push
jbe
arpl
mov
sub
call
mov
mov
imul
jns
mov
pop
daa
and
add
out
jns
xor
sbb
push
(bad)
jb
sbb
(bad)
jle
push
mov
aas
mov
jmp
sbb
cwde
int
sbb
arpl
sub
int3
inc
push
mov
jb
das
outs
fwait
xchg
inc
mov
xchg
mov
and
les
dec
imul
jb
xchg
mov
sbb
push
add
sbb
hlt
imul
mov
outs
ja
loopne
hlt
inc
dec
hlt
mov
stos
aam
das
das
das
lock
push
push
add
xor
std
bnd
cwde
push
lahf
shl
iret
scas
sub
addr16
sub
daa
mov
movs
push
scas
fist
push
cmovle
imul
das
daa
cmp
inc
out
mov
sub
jbe
mov
push
fsub
gs
push
push
jo
and
jmp
pop
sub
sbb
ja
push
mov
push
push
les
fstp
(bad)
push
jl
and
fdiv
jns
xor
outs
xor
sub
enter
out
movs
call
add
push
retf
sub
test
mov
ins
loop
or
xchg
xchg
fistp
or
(bad)
rcr
dec
int3
retf
retf
retf
retf
jnp
or
(bad)
and
in
push
loop
retf
retf
retf
retf
push
cwde
inc
loop
mov
inc
xchg
outs
aas
retf
add
frstor
sti
sti
and
pop
pop
pop
fidivr
mov
les
push
ins
(bad)
mov
js
adc
pop
pop
fidivr
imul
fcom
sbb
add
push
add
sar
outs
adc
stos
inc
addr16
mov
xchg
das
das
das
adc
jmp
ret
sbb
dec
ins
pop
fidivr
imul
adc
pop
mov
nop
dec
and
rcl
cli
dec
stos
je
iret
sbb
lahf
in
jbe
or
movs
stc
jecxz
pop
fidiv
pop
test
xor
push
sub
fstp
push
out
pop
jne
stc
inc
rcr
movs
push
ins
cs
sub
dec
int
out
ins
dec
mov
add
and
cmc
xchg
dec
push
xchg
pop
repz
mov
imul
push
mov
call
ins
ja
jns
jae
ret
sub
add
(bad)
int
in
inc
or
loop
fisub
sub
ins
cs
out
ror
jp
mov
loop
mov
repz
add
or
adc
in
in
outs
pop
mov
pop
int3
sub
mov
cmp
retf
fcmovne
test
cmps
loop
inc
cmp
xor
sbb
retf
retf
retf
retf
into
cwde
bound
(bad)
jnp
inc
je
xchg
mov
retf
adc
int3
int3
and
push
mov
pop
jmp
in
addr16
pop
adc
ins
jl
xor
xchg
in
shl
call
call
imul
hlt
enter
sbb
je
outs
ja
and
mov
jb
gs
jbe
mov
jl
repz
rol
or
ja
stc
xor
xor
or
ja
mov
mov
dec
hlt
test
outs
out
(bad)
outs
push
fisttp
add
mov
fstp
and
jns
jns
jno
push
pushf
push
adc
fwait
pop
int
jae
jns
push
and
dec
shr
ror
ja
shl
xchg
mov
jmp
or
fcomp
movs
inc
outs
jae
in
ficomp
pusha
inc
jl
push
fmul
(bad)
(bad)
ficom
cwde
xor
test
jl
repnz
inc
adc
mov
pop
movs
mov
dec
out
in
out
enter
daa
arpl
cld
inc
cs
retf
fcmovnu
je
stos
mov
xchg
mov
test
outs
fwait
xchg
repz
mov
call
shl
mov
push
cmp
mov
and
cmp
sub
push
sbb
arpl
out
repz
mov
setne
pop
xor
mov
clc
sahf
sar
fs
aaa
jbe
(bad)
(bad)
(bad)
push
sbb
sub
pop
or
out
xor
out
inc
pop
into
fist
fwait
jbe
mov
call
push
jae
lock
pushf
iret
adc
int
adc
push
xchg
aam
iret
call
aaa
xchg
xchg
js
cld
fsub
pop
pop
pusha
pop
pop
add
movs
mov
mov
pop
sbb
das
das
outs
les
and
out
loopne
sbb
sar
daa
fld
sahf
push
sub
xor
mov
push
mov
fcomp
rcr
in
jle
adc
and
das
das
outs
and
ret
jno
imul
das
pop
jnp
jnp
fs
das
outs
dec
sar
push
retf
call
pop
inc
out
mov
sbb
cwde
xchg
jae
mov
retf
cmp
out
out
mov
xor
sbb
sub
or
mov
push
add
lahf
in
and
cmp
lahf
push
xchg
ins
outs
aaa
int3
push
daa
stos
fiadd
retf
retf
dec
(bad)
rcl
test
outs
lahf
rol
sub
fs
cld
sbb
fild
(bad)
rol
jae
repnz
outs
inc
lods
loopne
push
mov
aam
repnz
jb
jne
mov
or
popf
dec
and
ficomp
jae
fmul
xchg
int3
ficomp
mov
mov
xlat
call
or
femms
mov
aam
xchg
inc
pop
mov
outs
jbe
jbe
jo
dec
jnp
push
xor
aam
cli
fwait
mov
fist
fwait
xor
int
outs
aaa
xchg
mov
stc
jle
scas
minps
fimul
jo
fmul
xor
into
adc
adc
outs
fadd
test
test
jns
jns
test
lds
shl
or
test
test
daa
loopne
sbb
adc
(bad)
mov
push
fcomp
call
push
push
or
pop
out
mov
push
xor
out
outs
add
je
dec
pop
jae
push
jno
mov
cmp
cs
push
fsubrp
sub
aas
clc
lds
jle
xchg
pop
pop
pop
pop
adc
ins
fstp
outs
retf
fstp
sbb
or
icebp
je
test
fidiv
inc
cmps
xchg
cwde
pushf
loopne
fsubr
fwait
jecxz
dec
jne
ja
mov
and
fs
das
das
das
outs
sub
sbb
mov
push
in
mov
fisubr
das
xchg
fs
outs
mov
adc
inc
pop
push
pop
pop
pop
pop
pop
out
imul
out
out
push
add
pop
mov
and
add
sbb
dec
cmp
aaa
mov
out
outs
retf
jge
mov
pusha
sbb
and
pop
fidivr
sbb
mov
mov
lods
(bad)
pop
pop
push
jb
aad
sbb
fld
mov
xor
es
pop
inc
mov
jl
in
int
inc
xor
pop
stc
or
in
or
in
inc
lock
jbe
fldln2
aaa
out
sub
les
pop
call
fsubrp
xchg
mov
bound
pop
pop
sub
push
sub
inc
call
jne
push
push
pop
xor
inc
mov
pop
dec
ret
mov
xchg
or
jns
mov
loope
and
or
jbe
jns
adc
imul
out
xchg
pop
and
and
pop
pop
pop
ficom
in
js
and
rol
mov
(bad)
into
lea
call
jae
jne
pushf
sub
and
fwait
mov
xor
loop
sub
cmp
pushf
adc
inc
aaa
xchg
mov
pop
sbb
out
sbb
popf
jle
(bad)
aas
lahf
sbb
mov
js
repnz
lock
mov
fwait
xchg
xchg
mov
dec
xchg
mov
mov
mov
jp
adc
rcl
mov
sar
add
ret
mov
ins
add
cli
mov
fucompp
and
sbb
test
dec
mov
inc
test
pusha
test
push
sbb
loop
js
cli
jb
div
mov
fild
mov
inc
out
or
sbb
sbb
pop
bound
lahf
pop
push
out
aad
pop
or
mov
pop
sbb
inc
test
repnz
sub
aas
icebp
outs
xor
call
xchg
pusha
imul
int3
pop
outs
outs
aaa
mov
and
out
pop
xchg
shl
and
sub
dec
fmul
mov
pop
fnsave
adc
pop
add
adc
or
xchg
xchg
cmc
or
mov
ret
jmp
in
outs
jp
rol
clc
shl
dec
sub
add
dec
pop
cmp
repnz
jg
aam
loop
sti
mov
out
out
inc
mov
out
out
dec
scas
rcr
sub
dec
dec
lahf
jl
ins
jnp
jb
aaa
xor
mov
pop
push
mov
xchg
pop
xchg
push
pop
in
mov
pop
push
pushf
cmp
xchg
add
jnp
mov
fcmovne
js
and
out
cmp
shr
int3
sbb
xor
mov
xor
popf
jmp
jb
test
mov
scas
adc
test
loope
mov
sahf
jge
rcl
lock
xchg
shr
and
cli
sbb
test
int
sbb
xchg
mov
retf
cmp
or
inc
aaa
push
cli
shl
fwait
ss
xchg
mov
mov
jmp
xchg
mov
sub
jnp
(bad)
sahf
call
or
push
into
scas
ins
repz
jge
or
scas
dec
bnd
mov
int
jg
jae
and
sbb
sbb
sahf
movs
in
xchg
nop
loope
or
retf
(bad)
ins
push
inc
xchg
jno
fstp
popa
mov
dec
out
iret
mov
mov
mov
test
xchg
(bad)
cld
(bad)
cld
je
ss
mov
mov
sub
outs
ret
arpl
das
das
mov
(bad)
(bad)
dec
push
jl
fcomp
mov
xchg
test
jns
fs
jns
mov
jl
xchg
fsub
loopne
idiv
xor
(bad)
cmps
xor
mov
mov
push
jo
mov
push
stos
xor
int3
retf
retf
or
cmp
(bad)
rol
inc
push
gs
shl
in
into
fsubp
aad
mov
je
enter
int
jnp
add
in
shl
les
and
push
inc
sbb
mov
hlt
aas
jns
shl
mov
fimul
inc
fdivr
pop
or
fiadd
inc
es
push
sti
lahf
in
xchg
(bad)
mov
sub
jb
movs
sbb
in
xchg
mov
call
mov
stc
xchg
in
or
sub
int3
jp
push
scas
retf
cs
int
in
add
cmp
or
in
sbb
aaa
shl
aas
jnp
adc
jbe
data16
lahf
adc
stc
cwde
movs
clc
push
pop
pop
pop
fidiv
inc
outs
push
lods
retf
aad
jle
add
xlat
inc
ins
dec
xor
sahf
fnclex
sub
in
ret
mov
sbb
jnp
out
repnz
cdq
cmp
les
cmp
sub
std
loop
adc
cs
jno
mov
xor
xchg
lea
mov
mov
xor
fsubr
xlat
xor
cmp
push
outs
dec
sti
out
rcr
pop
je
je
int3
push
outs
enter
and
push
mov
imul
xchg
xchg
mov
jb
cmp
or
mov
aaa
xchg
xchg
xchg
in
push
das
xchg
outs
aas
adc
in
test
movs
enter
mov
adc
sbb
add
int
sbb
ret
or
add
jne
fwait
xchg
xchg
or
push
sub
pusha
cs
outs
in
rol
cwde
jae
dec
ins
icebp
std
jge
mov
mov
and
jns
repz
ret
adc
pop
dec
pop
repnz
imul
(bad)
inc
ss
push
addr16
test
fidiv
test
ja
pop
push
add
mov
fisttp
lea
ds
fcomp
retf
or
xchg
xor
cwde
in
jbe
fwait
jae
outs
and
bnd
mov
jmp
stos
int
repz
xor
loope
cli
iret
daa
fsubrp
pusha
dec
ja
fld
jb
popa
out
pop
(bad)
lods
xchg
inc
outs
cmp
call
xlat
je
fsubrp
or
pop
arpl
das
mov
ins
and
add
mov
retf
retf
int
cmp
imul
in
ss
pop
cmp
pop
out
push
push
pop
mov
mov
pusha
movs
aad
lods
les
adc
xchg
xchg
xchg
sub
jmp
in
push
push
test
pushf
push
sub
xchg
pop
pop
mov
repnz
pop
popa
dec
and
clc
cmp
ins
outs
or
enter
or
sti
adc
jo
xchg
stc
or
daa
mov
xchg
es
sar
fsubr
popa
mov
das
retf
fisttp
out
mov
ja
shr
mov
(bad)
sub
inc
or
hlt
lahf
int
cmps
push
sub
adc
ss
aas
ret
mov
or
jl
dec
aas
call
repnz
mov
push
jecxz
das
fiadd
mov
cmp
mov
mov
mov
aam
fwait
pushf
icebp
cdq
std
adc
jns
mov
pushf
xchg
dec
int3
jns
jmp
mov
call
jns
loope
fldenv
xor
sbb
sti
fistp
idiv
cld
pop
leave
stc
push
cmp
rcr
outs
or
(bad)
enter
or
fwait
pop
cs
outs
fcomp
into
inc
out
test
mov
or
cmps
into
pop
xor
fwait
xchg
into
add
push
out
jecxz
push
xor
xchg
vpextrb
fld
inc
adc
(bad)
scas
into
pop
repnz
retf
retf
int
clc
test
xchg
sbb
or
mov
fs
shr
push
retf
fld
mov
or
(bad)
xor
mov
out
inc
dec
mov
mov
adc
hlt
cmp
jae
mov
clc
test
adc
add
inc
cmp
sub
mov
mov
or
mov
aaa
push
or
in
in
jo
jns
and
xor
loopne
cmps
mov
retf
pop
retf
mov
xchg
or
les
push
cmp
fwait
bound
stc
sbb
mov
jns
fild
mov
je
lock
in
outs
jae
mov
(bad)
jecxz
mov
in
or
dec
retf
retf
fcmovne
xchg
lds
jg
mov
retf
retf
mul
xchg
jge
pop
test
in
fiadd
jge
ins
addr16
adc
pop
es
out
ins
retf
fld
mov
pop
inc
mov
xor
ins
jp
adc
in
call
call
mov
mov
daa
or
adc
enter
push
push
and
dec
sahf
aaa
fidivr
ret
or
outs
inc
cwde
not
add
out
inc
push
bound
cmps
out
popf
pushf
outs
aaa
mov
xchg
int3
out
test
jl
mov
scas
sbb
inc
cmps
xchg
cli
sub
mov
cld
cmp
xor
stos
rcl
dec
mov
jns
fild
lods
push
gs
mov
outs
ja
out
outs
repnz
ja
in
jp
fsubr
das
xchg
test
jbe
fcomp
mov
cld
xchg
mov
pop
test
fisub
rcr
fst
push
xchg
pop
jle
cdq
repnz
mov
push
push
mov
mov
jmp
cmp
xchg
daa
and
out
movs
xchg
cmps
and
sub
jo
mov
dec
ja
mov
inc
pop
xor
jns
aad
and
lock
ret
sbb
jns
jns
inc
and
xor
cmps
dec
outs
ja
mov
jge
adc
dec
add
push
adc
in
ss
leave
fwait
ja
jg
and
jae
jns
rcl
jno
fnstcw
inc
pop
jmp
lds
jg
retf
xchg
mov
in
jg
sbb
push
movs
xchg
xchg
xchg
xchg
in
(bad)
or
neg
xchg
aaa
mov
jne
push
add
dec
pop
das
jo
push
xor
hlt
add
clc
adc
jbe
stos
dec
neg
test
repnz
inc
mov
retf
call
xor
lods
out
enter
mov
in
add
clc
jl
and
jbe
jbe
mov
mov
dec
sbb
sbb
out
mov
in
jle
dec
add
mov
sbb
call
mov
and
xor
fldpi
add
jne
mov
mov
jns
adc
pushf
cwde
arpl
sub
repnz
mov
xor
inc
repz
out
repnz
ret
jmp
mov
push
mov
movs
repz
dec
nop
int3
xchg
(bad)
or
or
adc
pop
sub
retf
fcmovnu
sub
push
xlat
pop
mov
lock
icebp
aaa
xchg
mov
and
stos
sub
pop
sahf
inc
arpl
(bad)
shl
rcr
repnz
push
push
mov
mov
call
das
fsubrp
jbe
aas
mov
inc
inc
mov
fld
ins
pop
adc
inc
xchg
mov
fimul
mov
stc
stc
shr
fnstsw
stos
sub
(bad)
aad
jp
cs
mov
mov
sti
dec
out
push
(bad)
adc
mov
and
lahf
retf
(bad)
ins
mov
sbb
lock
or
mov
enter
fwait
adc
retf
iret
push
aaa
out
call
mov
sub
inc
std
ins
jge
shr
repnz
outs
out
sahf
retf
or
push
or
sti
pop
pop
ins
ret
jnp
pop
pop
fidiv
js
ret
les
mov
in
mov
pop
fsubr
mov
mov
push
fidivr
adc
mov
ins
xlat
inc
mov
push
jp
xchg
adc
out
in
or
cmp
out
repnz
out
rep
jne
ficomp
fwait
mov
jl
arpl
data16
pop
adc
xor
ss
das
outs
loopne
ins
jecxz
adc
pop
stos
push
out
fcmovnu
pop
fidivr
mov
out
cmp
mov
mov
mov
adc
add
ja
mov
adc
in
out
(bad)
xor
push
add
test
out
bnd
dec
out
xchg
rcr
ss
fidiv
lahf
xchg
fisubr
shl
pop
pop
lods
mov
push
mov
fld
inc
jl
mov
aaa
xchg
mov
jp
out
adc
shl
fidivr
rcl
xor
push
cmp
nop
mov
jb
add
xchg
retf
scas
in
fwait
mov
retf
loope
sbb
loope
push
mov
in
mov
sbb
xchg
in
data16
mov
mov
cmps
(bad)
leave
add
jbe
jbe
push
sbb
xrelease
ja
movs
hlt
sbb
jmp
fcomp
and
and
pusha
sbb
jns
inc
or
sub
cmps
cdq
mov
retf
xchg
inc
inc
or
sbb
retf
jns
test
or
retf
lea
mov
jns
ins
push
out
xor
push
inc
adc
adc
jae
push
(bad)
push
xor
mov
jl
mov
jmp
sahf
stc
jl
xchg
data16
push
outs
pop
mov
mov
push
stc
pop
aas
or
jo
loopne
pop
enter
lock
fild
loopne
ins
mov
mov
jp
push
not
stos
jbe
fld
mov
jge
dec
push
push
test
push
ror
mov
mov
xchg
jmp
je
bnd
jns
(bad)
fist
sar
cmp
jecxz
ins
test
xchg
call
mov
imul
jp
jo
adc
dec
fwait
mov
push
ins
repnz
sub
jbe
fwait
jmp
rcr
sub
ja
and
add
sub
iret
fidiv
mov
mov
or
cmp
aaa
add
sbb
(bad)
std
pusha
fdivr
fcomi
repnz
xchg
mov
popa
shl
push
int3
and
or
add
lahf
mov
mov
mov
cwde
pop
and
iret
mov
fiadd
inc
add
into
inc
dec
ins
outs
cld
enter
loopne
(bad)
(bad)
mov
inc
sbb
jae
jl
cmp
pop
aaa
mov
(bad)
(bad)
xchg
inc
scas
inc
outs
retf
xor
es
aam
mov
mov
outs
outs
jae
mov
icebp
xor
mov
add
out
mov
aam
cmp
inc
fdiv
das
outs
hlt
fimul
jbe
jg
inc
pop
int3
mov
cld
cmp
repnz
ror
xchg
inc
xchg
mov
jns
(bad)
outs
test
xchg
jne
(bad)
push
cmp
jno
std
bound
push
inc
ins
outs
fwait
mov
inc
shl
inc
sahf
stc
bound
aaa
std
(bad)
out
lahf
imul
retf
fistp
scas
push
sub
dec
push
mov
stc
jge
test
out
jmp
es
jb
push
inc
and
mov
repnz
cmp
mov
jns
out
jnp
add
push
xchg
mov
and
jae
mov
mov
inc
jmp
in
mov
or
pop
retf
in
in
add
stos
xor
adc
sbb
in
sbb
retf
add
dec
jb
sub
outs
ja
xchg
mov
repz
(bad)
ja
dec
aaa
mov
push
pop
mov
pushf
push
jne
jbe
fwait
xchg
push
push
out
neg
sub
xor
(bad)
pop
retf
retf
retf
retf
and
popf
pop
jmp
fidiv
int
out
push
aaa
pop
jbe
push
arpl
in
or
xchg
ret
stos
mov
fstp
mov
push
sub
loope
dec
clc
cwde
shl
push
stos
out
sbb
mov
xor
or
and
push
and
aaa
or
add
ror
mov
fistp
and
jns
jns
hlt
and
xchg
aad
add
xor
nop
push
push
push
fs
mov
int
out
dec
stc
sbb
outs
jno
jns
ror
cdq
enter
int3
mov
lods
cmps
ss
add
jmp
call
jge
ret
mov
repnz
pop
inc
movs
es
ret
shl
mov
or
fsubrp
stos
or
daa
test
dec
retf
retf
sbb
or
or
pop
adc
and
adc
shr
pushf
pop
es
xor
mov
jb
(bad)
cmp
ror
push
push
repz
cmp
xor
(bad)
xor
jns
cmp
je
in
clc
sbb
sti
pop
(bad)
push
lods
push
jnp
test
fucomi
adc
iret
mov
bnd
ror
es
sbb
stc
pop
in
sub
pusha
movs
pop
ficomp
stos
or
xor
adc
mov
mov
push
cmps
test
rcr
lahf
ficomp
inc
aad
loopne
ror
fistp
fcomip
push
xchg
and
jae
jl
xchg
xchg
mov
inc
adc
pop
xor
add
xchg
xor
mov
(bad)
es
(bad)
(bad)
outs
mov
xchg
loopne
mov
jp
adc
popa
dec
repz
adc
js
jmp
ror
jbe
mov
cli
fld
sbb
dec
outs
ja
lahf
sbb
push
hlt
or
adc
outs
jge
lods
fistp
out
enter
repz
pop
fcomp
adc
aas
xchg
pushf
fadd
inc
clc
or
mov
das
dec
pop
not
push
outs
jmp
mov
test
lods
dec
adc
bound
imul
int
aad
movs
and
xchg
out
in
mov
cmp
jp
aad
mov
sbb
mov
movs
dec
pop
jbe
jns
dec
int3
repz
jecxz
and
or
repnz
movs
pop
sub
fnstcw
push
out
mov
fist
inc
jl
xlat
adc
adc
(bad)
in
sub
mov
and
pusha
xchg
repnz
mov
lds
(bad)
out
jo
jb
repz
test
pop
mov
outs
outs
lods
fs
mov
and
ret
or
ins
dec
(bad)
int
cmp
sub
fwait
sub
outs
xor
add
call
imul
xchg
pop
inc
fidiv
mov
iret
daa
outs
fistp
cmp
xchg
dec
test
(bad)
pop
pop
jp
cdq
fist
fwait
or
xor
mov
inc
pop
mov
jle
mov
ins
or
out
jbe
xchg
sub
repnz
dec
mov
loopne
mov
and
sbb
adc
test
dec
xor
mov
ss
xor
scas
inc
and
mov
inc
sbb
mov
sar
in
cli
jge
in
imul
(bad)
cmps
and
sub
retf
retf
retf
retf
cmp
add
sti
outs
call
pop
pop
and
outs
lods
jae
fucomp
loopne
dec
fstp
aas
sbb
test
ss
xlat
icebp
call
mov
call
adc
mov
mov
pop
mov
xchg
mov
lahf
dec
aas
es
retf
fcomp
mov
add
(bad)
shr
cmps
dec
int
push
retf
pop
push
jne
out
push
jmp
fwait
retf
retf
mov
mov
add
mov
fist
cwde
xchg
xchg
xchg
add
rol
cmp
or
call
mov
fstp
xchg
ret
dec
and
inc
je
jns
xchg
std
arpl
stc
adc
dec
xchg
xchg
mov
mov
test
sbb
or
inc
rcr
imul
push
test
gs
ss
scas
cmp
mov
fistp
ss
lods
fs
pop
sbb
retf
or
add
shl
ins
adc
pop
je
fiadd
or
ret
into
and
ins
rcl
nop
mov
cmp
xchg
xchg
xchg
(bad)
mov
pusha
cmp
aam
(bad)
pop
fidiv
es
adc
cdq
arpl
inc
add
mov
jbe
jmp
aam
sub
jle
jnp
mov
inc
ffree
scas
push
ja
std
ja
mov
retf
fistp
mov
or
sbb
jne
ret
mov
mov
jmp
inc
mov
mov
sbb
push
inc
inc
ins
fsubr
mov
fucomp
mov
push
mov
sbb
ss
outs
ja
ret
push
cmc
jl
inc
jae
gs
cmp
mov
les
or
fcmovne
lods
mov
(bad)
sub
pop
pop
mov
iret
inc
mov
nop
and
cmp
push
(bad)
push
shl
and
lock
xchg
xchg
mov
pop
ret
cmp
test
xor
cmp
test
pushf
xchg
pop
dec
pop
arpl
jns
mov
adc
xlat
stos
lods
mov
(bad)
mov
jns
pop
push
and
fmul
popa
xchg
fwait
xor
retf
fld
ins
jmp
jle
stc
fs
xchg
xchg
mov
add
mov
adc
outs
fwait
xchg
pop
je
call
push
mov
mov
mov
ja
cmp
cmp
in
js
xchg
int
in
fucomi
or
inc
retf
cmp
pop
cmp
retf
retf
fucomi
fimul
mov
push
xor
stc
fldcw
and
xchg
mov
nop
xor
cmp
jae
scas
inc
(bad)
leave
je
xor
dec
retf
retf
retf
pop
rcl
and
cwde
pop
fcmove
pop
adc
int
inc
les
lea
or
mov
push
retf
retf
retf
pop
cmp
mov
cli
push
sahf
in
int
movs
out
test
jl
cmp
fstp
outs
mov
lahf
xchg
or
push
mov
arpl
test
fidivr
int3
lahf
xchg
clc
xlat
push
ror
xor
das
fmul
cmp
dec
es
fwait
xor
outs
sub
push
adc
into
cmp
cs
das
in
adc
mov
out
scas
xor
hlt
mov
pop
fistp
call
pop
movs
mov
in
mov
jae
inc
cmc
fwait
test
sbb
dec
dec
dec
arpl
retf
out
push
fwait
retf
mov
jecxz
call
push
jae
ja
je
sub
(bad)
aas
int3
fmul
sbb
sbb
addr16
mov
fisttp
in
aas
pushf
rol
push
and
sbb
jmp
out
cmps
ret
cmc
out
ds
ins
mov
cmps
loopne
mov
mov
fucomi
adc
out
scas
leave
lahf
xchg
ja
cmps
mov
out
mov
imul
dec
sub
add
xchg
push
xor
sbb
mov
mov
sub
test
sti
mov
cld
out
in
fdivr
fnstcw
popa
xor
mov
(bad)
dec
jne
mov
(bad)
inc
adc
sub
push
and
mov
ss
mov
sub
cmp
mov
sbb
dec
cmp
pop
lods
mov
or
outs
test
sub
ret
iret
lea
sbb
cmp
in
test
sahf
stos
push
ret
sub
int
in
dec
mov
scas
inc
mov
jle
mov
(bad)
(bad)
int3
clc
push
mov
loope
ja
retf
fist
test
lea
xchg
add
lahf
push
jb
ja
ror
(bad)
in
xchg
add
(bad)
fisubr
ss
mov
push
outs
mov
xor
sub
sbb
arpl
fsubr
retf
pop
push
push
ror
sbb
mov
rol
int3
jmp
jns
(bad)
jne
cmp
popf
mov
inc
je
imul
xor
mov
sbb
jae
or
das
adc
out
rcl
push
out
cmps
loop
mov
push
push
out
ss
retf
fisttp
xchg
aam
std
mov
jns
mov
add
jmp
retf
(bad)
ins
mov
bound
cwde
or
ja
mov
ins
jo
movs
push
arpl
and
mov
sbb
push
xor
push
fisttp
push
out
jne
push
push
test
mov
pop
shl
xchg
pop
(bad)
and
(bad)
cmc
test
fcmovne
in
gs
and
push
lahf
fmul
mov
sub
pop
test
xor
cli
xchg
pop
pop
fidiv
cmp
sbb
cmp
lock
pop
mov
push
inc
pop
pushf
xchg
add
mov
mov
int3
movs
mov
jae
mov
or
pop
aam
sbb
in
out
pop
pop
mov
mov
jae
or
out
ins
push
cmps
xchg
push
and
fcmovne
in
rcl
js
dec
(bad)
mul
in
fwait
mov
xor
jnp
pop
out
dec
pop
aam
or
push
push
arpl
mov
(bad)
jmp
cmp
jns
call
pop
pop
jbe
repz
dec
stos
jge
ja
xchg
retf
(bad)
ins
icebp
loope
pusha
mov
or
mov
fwait
mov
dec
sub
lea
push
xchg
fldl2e
retf
call
cmp
and
mov
push
inc
movs
sbb
push
adc
repz
adc
sar
cli
mov
out
mov
dec
and
jns
das
outs
and
in
int3
mov
sub
in
fisttp
or
xor
fld
adc
out
push
fidivr
mov
pop
ss
push
jae
mov
ror
pop
cmp
mov
out
outs
pusha
repz
push
pop
xrelease
retf
inc
in
repnz
mov
xchg
aaa
out
in
outs
mov
xor
dec
and
scas
stos
xor
pop
xchg
inc
inc
ret
sbb
fidivr
movs
dec
ja
lods
jns
aad
sbb
das
outs
in
lock
iret
test
scas
jmp
push
cs
jge
jb
cmps
or
sub
fild
ins
push
sti
mov
test
enter
mov
jae
xchg
xchg
mov
inc
retf
arpl
sub
(bad)
shr
add
xchg
xchg
xchg
(bad)
xchg
add
rcr
dec
arpl
mov
cmp
pop
pop
fidivr
lahf
rol
cmp
inc
fcomp
push
mov
rol
fs
test
adc
pusha
or
push
jmp
fstp
bound
push
stos
jae
xchg
rcl
outs
hlt
or
mov
and
lea
mov
xor
dec
xor
xor
stos
jns
jns
outs
int
xchg
mov
mov
jns
jns
push
out
cmc
(bad)
pop
mov
jns
mov
jmp
inc
sbb
mov
pop
push
movs
aas
mov
les
pusha
cmp
pop
mov
add
mov
retf
retf
jmp
mov
mov
jl
je
adc
cs
jbe
out
add
add
icebp
jmp
scas
mov
xchg
arpl
jmp
out
in
jp
fsub
ins
inc
loopne
xor
sar
addr16
stc
ret
or
xchg
fst
pop
cs
mov
jae
mov
and
inc
aaa
sbb
pop
mov
sbb
adc
outs
mov
shl
into
adc
jl
inc
xor
inc
(bad)
ret
adc
push
pop
rcr
fucomi
out
cmp
hlt
js
iret
fucomip
adc
stos
nop
loopne
outs
mov
mov
xchg
mov
xchg
xchg
mov
inc
fidiv
mov
mov
sub
nop
popf
dec
pop
sbb
retf
retf
ret
xchg
aam
aam
adc
mov
das
outs
aaa
ins
inc
data16
add
ds
pop
fidivr
cdq
jmp
js
jns
sti
cmc
mov
daa
dec
lahf
mov
push
mov
or
aad
sub
or
inc
mov
in
xor
jp
mov
int
cmp
leave
or
push
mov
stos
int3
fstp
dec
inc
push
ins
inc
add
jo
sub
jns
popf
outs
fwait
push
cmps
inc
xchg
inc
lods
mov
jmp
pop
cli
shl
xor
sub
adc
out
int
ss
leave
mov
mov
ss
and
mov
inc
idiv
sbb
sbb
shl
add
adc
xchg
xchg
mov
data16
ret
(bad)
stos
mov
mov
adc
jne
rcr
jl
call
cmp
cs
lds
mov
push
or
scas
inc
mov
mov
fld
push
arpl
jbe
retf
stc
idiv
imul
push
mov
fidiv
(bad)
mov
test
mov
mov
cmp
mov
mov
retf
mov
in
jns
xchg
in
in
mov
push
or
out
in
test
mov
loopne
jae
sbb
jp
mov
fucomp
call
retf
sar
mov
mov
fstp
sahf
lods
rol
mov
jbe
jns
stos
out
inc
fild
test
repnz
repz
scas
cld
ficomp
retf
retf
retf
fcmovnu
dec
inc
das
sub
test
inc
retf
retf
retf
retf
sub
adc
mov
fwait
retf
retf
retf
cli
in
addr16
rcl
mov
repz
xchg
dec
div
push
stc
fmulp
add
jbe
jne
sbb
sub
pop
jae
stos
mov
lock
sub
in
and
daa
pop
adc
mov
sbb
bound
adc
jge
adc
mov
sbb
jmp
inc
pop
or
loopne
test
cmp
mov
jmp
pop
aaa
sti
mov
fidiv
mov
ret
push
in
(bad)
sbb
imul
pop
mov
dec
imul
mov
mov
mov
pusha
pop
pop
fidivr
(bad)
ins
int
sub
fs
sti
test
mov
or
mov
rcr
mov
(bad)
pop
xchg
leave
add
pop
inc
adc
ins
fidiv
das
sub
fmul
sbb
and
dec
and
push
ret
xchg
shr
in
sti
jmp
xchg
in
aaa
in
fidiv
fistp
dec
inc
dec
adc
sar
pusha
pop
popa
or
imul
int3
stc
std
fs
pop
xchg
jns
mov
jecxz
dec
pusha
repnz
retf
retf
fistp
mov
dec
bound
fwait
mov
push
mov
cmp
inc
xor
inc
fild
repz
fstp
es
fmul
(bad)
jl
sbb
repz
xchg
pop
adc
lods
xchg
inc
xlat
mov
xchg
jno
int3
push
add
repnz
cdq
xchg
xchg
sbb
sub
das
das
fcom
xor
xor
in
out
push
fbld
jg
arpl
in
in
pop
clc
pop
adc
mov
retf
retf
(bad)
mov
lea
aam
mov
and
ficom
repnz
jle
sbb
das
outs
cmp
add
scas
cwde
stc
fwait
lock
gs
xchg
xchg
mov
mov
cli
push
sti
and
sub
pavgw
ins
(bad)
mov
test
loop
fisttp
hlt
mov
test
xlat
add
cmp
inc
push
scas
push
cld
(bad)
in
mov
and
fcmovnu
pusha
add
cmc
inc
mov
fstp
mov
scas
mov
push
push
out
adc
out
adc
loope
dec
call
lods
pop
mov
jo
outs
mov
movs
icebp
cmps
mov
xor
ror
and
scas
xchg
scas
sub
cmc
cs
sbb
jb
arpl
jge
icebp
sbb
xor
(bad)
out
fidivr
cs
push
mov
fsubp
call
ja
inc
cmp
mov
jns
mov
int3
fnstenv
ja
repz
sub
in
mov
pop
fidiv
push
rol
aad
test
or
pop
pop
pop
mov
fistp
les
pop
pop
fdivr
bound
xor
rcl
retf
ss
and
adc
adc
xor
or
movs
sub
jp
pop
lods
clc
retf
or
jnp
and
aaa
push
out
mov
test
retf
pop
jbe
gs
das
mov
in
cdq
xchg
cmp
and
mov
cmp
in
(bad)
lahf
xchg
ss
or
ja
das
das
mov
mov
test
pushf
(bad)
in
pop
push
cs
das
das
mov
push
cmp
ja
ss
popf
xchg
aaa
in
shl
adc
adc
mov
pop
daa
ja
je
jle
jmp
shl
nop
add
retf
retf
fcmovne
scas
jmp
imul
int
push
xchg
cmp
mov
fst
outs
fstp
mov
add
push
js
push
clc
push
das
das
in
cmp
jb
or
cmp
lods
loop
pop
stos
push
(bad)
das
das
outs
(bad)
inc
sbb
shl
fiadd
sbb
mov
mov
mov
dec
mov
ret
or
mov
jno
mov
scas
enter
outs
adc
push
dec
out
inc
jns
fstp
aad
xor
scas
jns
sub
add
mov
(bad)
movs
out
in
call
add
mov
fcmovnbe
ficomp
fwait
mov
fcom
or
mov
mov
cwde
cli
dec
pop
push
pop
rcl
popf
jmp
mov
fcmovnu
out
sbb
movs
lds
jae
aam
fdiv
cdq
in
jns
push
retf
jae
or
aas
sbb
jns
rcl
(bad)
mul
out
inc
push
push
mov
jns
mov
mov
cld
in
in
sbb
ja
sub
jp
int
(bad)
setnp
outs
sbb
jecxz
in
aaa
push
out
test
vmovlps
pop
or
mov
mov
jecxz
cmp
add
inc
xchg
out
mov
in
cmp
dec
sahf
mov
lods
pop
xor
(bad)
push
mov
push
hlt
(bad)
pop
out
mov
retf
jnp
xchg
cmc
xor
in
adc
xchg
mov
rcr
stc
sub
mov
fist
adc
mov
jns
or
pushf
mov
inc
js
dec
leave
repz
adc
repnz
(bad)
hlt
popf
popa
inc
(bad)
mov
pop
lea
shl
outs
lahf
jns
mov
out
dec
adc
pop
adc
mov
push
sub
in
lods
adc
int3
hlt
je
pushf
scas
add
dec
das
outs
mov
ret
mov
test
mov
fdiv
das
inc
call
enter
mov
(bad)
xor
neg
jns
mov
out
jae
jns
push
(bad)
xchg
retf
mov
pop
je
(bad)
mov
sbb
add
add
(bad)
xchg
out
hlt
jmp
aaa
cmp
scas
je
xchg
bnd
and
test
arpl
je
pop
pop
call
push
dec
add
jmp
fnstenv
add
xchg
xor
jg
(bad)
pop
jae
and
pop
lahf
jecxz
pop
push
sub
jmp
mov
sub
mov
mov
pushf
retf
arpl
outs
mov
push
ja
push
dec
push
sub
adc
lock
int
outs
and
outs
jmp
dec
add
rcr
and
jbe
jb
dec
ret
sbb
jb
cmps
call
sar
mov
js
in
in
dec
mov
add
pop
stos
cmp
pop
retf
(bad)
in
test
push
int3
rcr
xchg
mov
outs
aaa
mov
call
aaa
je
and
lahf
xlat
add
ins
xchg
loope
jg
int3
push
push
call
ss
inc
mov
daa
dec
adc
retf
xor
cwde
jle
hlt
cmp
and
mov
mov
stc
daa
imul
inc
in
sbb
xchg
xchg
xchg
xchg
pop
mov
mov
icebp
jbe
xchg
fst
xchg
(bad)
jle
cmp
test
jb
outs
jae
arpl
in
ss
data16
pop
je
push
popa
retf
and
mov
fdiv
cs
mov
dec
aad
jg
sti
pop
jb
xchg
jae
outs
cs
cmp
daa
shl
push
bound
inc
pop
(bad)
sub
xchg
jge
cwde
pop
pop
pop
pop
jecxz
fs
lock
adc
mov
push
push
addr16
mov
sub
mov
xchg
es
fisttp
ins
outs
or
adc
push
retf
retf
sbb
jb
inc
add
cs
xchg
push
iret
push
mov
or
push
in
cdq
iret
push
push
pushf
test
add
sbb
xlat
and
cmp
pop
mov
popa
add
js
cmp
outs
inc
out
jbe
or
push
add
daa
int3
test
fcomp
fild
cmp
mov
inc
cdq
xchg
arpl
in
in
xchg
mov
mov
xchg
add
out
inc
sbb
xor
in
(bad)
dec
cmp
jg
mov
jbe
les
rcl
pop
dec
mov
mov
xor
(bad)
lahf
data16
mov
xchg
xchg
xchg
xchg
pusha
pop
push
pop
dec
sub
jl
dec
cmp
mov
mov
mov
jae
(bad)
aaa
adc
addr16
xor
mov
pop
push
xchg
cmp
pop
mov
outs
outs
dec
sbb
into
ins
in
add
xlat
lods
rol
out
lods
xor
jb
outs
xchg
mov
xchg
mov
add
add
dec
test
xchg
dec
xor
das
outs
or
mov
in
sub
rcl
mov
sahf
jp
push
and
jp
js
mov
cmp
xchg
dec
adc
imul
ret
push
adc
add
jle
outs
mov
test
cmp
sbb
jmp
sbb
dec
in
outs
cmp
xor
pop
loopne
jnp
dec
jle
push
cmp
mov
ret
mov
cmp
sub
mov
retf
jae
mov
sbb
jo
fisttp
arpl
jmp
lods
or
mov
push
mov
jo
sti
pop
pop
loop
jo
leave
xor
ins
jns
jns
aam
jle
sbb
adc
repz
call
call
jae
jns
iret
add
outs
push
cmp
mov
in
or
mov
sub
or
fidivr
in
stos
ret
jae
imul
dec
imul
adc
xor
or
inc
hlt
fnsave
arpl
cmp
sti
push
fsub
mov
add
mov
jbe
mov
fdivr
mov
jbe
(bad)
cmp
enter
in
stos
outs
arpl
xor
jmp
outs
adc
jae
fcomp
lods
jno
sub
scas
ss
xchg
arpl
sbb
loopne
mov
xchg
inc
rcr
fsub
lods
and
imul
xor
jg
mov
test
cdq
adc
adc
sub
pop
sbb
and
inc
push
call
retf
out
cmp
aam
push
das
das
das
mov
es
in
cmp
je
fld
fwait
dec
adc
adc
fisttp
popf
dec
mov
sbb
retf
or
sar
fsubrp
ss
adc
bound
fwait
dec
fcomp
and
jo
jbe
mov
fdivr
mov
inc
cmp
push
mov
dec
aam
push
(bad)
out
jl
cdq
mov
xlat
add
inc
movs
add
sbb
es
push
xchg
mov
add
jo
push
inc
xor
jmp
mov
dec
push
jl
mov
rcl
pop
call
aaa
mov
mov
nop
rcr
das
outs
push
repnz
add
fstp
dec
dec
enter
aad
inc
sub
test
loopne
pop
ficomp
lea
mov
test
xlat
not
sbb
pop
jb
mov
jae
(bad)
gs
mov
leave
outs
xor
fwait
ds
js
iret
out
mov
sub
das
adc
push
retf
(bad)
into
pop
dec
xchg
mov
int
call
fbstp
fiadd
add
ror
fdivr
(bad)
sar
adc
sub
push
jne
(bad)
dec
jae
mov
call
push
in
push
inc
out
sbb
or
in
out
es
ja
jecxz
jno
fnstsw
inc
or
(bad)
movs
retf
add
mov
imul
mov
test
mov
xor
pushf
push
xor
push
jne
jns
fidiv
movs
ins
pop
test
mov
adc
fneni(8087
ror
mov
jl
fstp
jbe
xchg
push
iret
rcr
dec
nop
fadd
popf
mov
outs
pslld
pop
pushf
dec
inc
add
pop
lock
pop
push
popa
sbb
mov
fld
popa
push
and
retf
nop
inc
xchg
(bad)
pop
in
call
mov
sub
push
xor
cld
or
mov
mov
add
sti
mov
jb
push
jmp
push
call
fistp
(bad)
sub
mov
outs
aaa
xchg
xchg
int
pop
jle
xchg
cdq
ins
hlt
or
fsubr
inc
aaa
sbb
and
mov
adc
jle
mov
sti
pop
aad
shl
ret
xor
mov
cli
pop
loopne
pop
or
inc
fist
inc
in
shl
xchg
cmps
outs
in
jb
loop
arpl
hlt
push
jb
aad
test
mov
rcr
mov
(bad)
mov
mov
fsubrp
dec
rcr
jne
sub
aad
sbb
xchg
sub
mov
mov
(bad)
sub
mov
sbb
and
in
fwait
aaa
jbe
ror
jb
rcr
fs
pop
clc
scas
jecxz
(bad)
inc
pop
and
iret
stc
mul
xchg
fucomi
addr16
les
dec
nop
test
cli
int
retf
retf
jmp
mov
stos
dec
mov
push
inc
jb
ins
xor
adc
scas
jmp
push
pusha
jae
push
push
jnp
inc
mov
sub
das
sti
jmp
push
(bad)
fcmove
mov
js
or
mov
mov
in
sbb
ss
xor
jns
in
push
pop
cld
nop
mov
mov
sub
mov
cdq
inc
jo
mov
mov
pop
inc
fwait
enter
inc
or
xor
cmp
dec
(bad)
dec
cmp
in
repnz
xor
mov
pop
outs
cs
jmp
or
aaa
xchg
xchg
xchg
mov
nop
jmp
adc
jne
xchg
ret
movs
fsub
out
into
push
je
inc
jle
test
repz
jno
push
or
fimul
push
out
jae
sbb
enter
xor
test
retf
pop
into
ss
xchg
test
push
push
inc
push
ja
add
or
or
aad
ror
pop
les
mov
and
xor
push
sbb
or
or
mov
inc
test
fisubr
outs
adc
cmps
and
or
int3
(bad)
pop
pop
and
mov
jns
aam
ds
sbb
inc
pop
scas
jo
imul
pop
jle
xchg
dec
mov
sbb
pop
mov
loope
stos
mov
jae
jb
xlat
push
add
je
in
push
jbe
pop
inc
jb
(bad)
movq
aam
nop
cmp
ret
sbb
out
inc
mov
cmp
push
movs
je
stc
mov
outs
ja
mov
dec
imul
bnd
fdiv
das
cmp
pop
icebp
shr
enter
out
push
test
mov
mov
(bad)
jmp
lds
pop
fidiv
(bad)
(bad)
mov
jb
mov
mov
ins
and
retf
ja
dec
test
in
out
pusha
out
and
fisttp
cmc
js
fwait
mov
xchg
mov
ja
out
bound
das
das
das
clc
mov
sub
inc
mov
cs
cmp
mov
and
pop
loopne
mov
pop
fidivr
fnstenv
fistp
dec
outs
je
int3
push
mov
add
mov
push
std
jnp
sub
nop
push
test
call
push
data16
inc
inc
fwait
xchg
dec
xchg
(bad)
and
(bad)
cmp
out
xchg
outs
or
psubusb
retf
pusha
pop
popf
aaa
xchg
xchg
xchg
adc
ins
bound
dec
adc
mov
mov
mov
sub
(bad)
loope
inc
jno
adc
xlat
mov
adc
ja
fcmovnbe
pop
ins
imul
push
das
das
fnsave
sbb
or
ja
push
das
das
das
das
hlt
mov
mov
jae
mov
das
mov
ret
mov
dec
sahf
jmp
outs
mov
xor
jb
cs
ret
cli
inc
or
cs
stos
adc
push
ret
(bad)
ficomp
das
outs
aaa
xchg
add
mov
pop
test
into
out
lds
fdivr
rcl
push
mov
ss
lds
in
addr16
cmp
mov
xor
cmps
xor
iret
jp
mov
pop
sub
xor
jnp
inc
xchg
xor
mov
xchg
out
mov
lock
pushf
push
xchg
xchg
xchg
xchg
xchg
dec
inc
lock
jl
cmc
xor
jge
or
fwait
xchg
daa
inc
into
(bad)
in
arpl
cmps
pop
adc
cmp
or
inc
dec
jb
pop
cmps
retf
retf
retf
retf
in
xchg
xchg
ins
pop
mov
pop
or
pop
in
out
or
inc
push
mov
(bad)
inc
lods
mov
sub
pusha
rep
sbb
jmp
mov
mov
fcomp
pop
rol
mov
loopne
fist
dec
mov
nop
nop
aaa
push
out
ins
imul
int3
shl
outs
outs
dec
mov
ret
retf
mov
aaa
xchg
xchg
dec
sbb
cdq
sbb
paddusw
fcmovnu
into
sub
shr
mov
and
jnp
adc
mov
ja
mov
out
jae
repnz
aas
xor
mov
scas
mov
mov
int
add
out
mov
mov
repnz
sub
(bad)
push
mov
fsubr
mov
inc
add
sbb
fcomp
sahf
(bad)
push
das
sar
fnstsw
mov
pop
cmpps
add
dec
pushf
cmp
(bad)
push
imul
loop
push
pusha
nop
sbb
out
iret
mov
or
add
xor
adc
cmp
jns
jns
mov
mov
xlat
push
jae
jns
mov
in
and
sub
add
icebp
(bad)
call
cmp
fst
mov
lea
xor
adc
(bad)
(bad)
loopne
ja
xor
mov
mov
mov
fnstsw
cmp
inc
outs
call
inc
push
enter
rol
emms
mov
sbb
push
cmp
dec
aam
mov
out
xchg
xchg
pop
cmps
or
mov
or
clc
movs
cmc
ret
pop
xor
jg
mov
stc
dec
arpl
and
in
jp
jmp
inc
mov
push
sar
int
das
inc
mov
pusha
retf
sbb
cmp
jbe
pop
out
xchg
xor
stos
cmc
adc
mov
add
repnz
(bad)
pop
movs
int
in
mov
mov
fcmove
ins
sbb
ret
pop
sub
dec
push
push
out
jne
cmp
jmp
ss
das
das
das
outs
int3
push
int
jmp
(bad)
xor
das
das
pop
or
ret
stos
jns
fild
dec
loop
ins
rol
in
cmps
sub
push
retw
sbb
int
in
rol
adc
lods
fstp
in
xchg
jmp
xchg
xchg
mov
outs
mov
out
icebp
xchg
hlt
pop
fidiv
jo
(bad)
push
xor
ins
pop
pop
pop
xor
adc
xor
sbb
jae
loop
push
add
cli
sti
and
mov
pushf
inc
mov
dec
repnz
hlt
add
(bad)
jno
not
cmp
inc
cmp
aaa
pop
pushf
and
outs
mov
adc
sub
call
fucomip
fdivr
outs
fdiv
or
sti
retf
fisttp
mov
jb
mov
sub
push
fnstcw
jnp
enter
push
xor
shr
aam
xchg
scas
pop
pop
fsubrp
daa
mov
inc
test
and
jns
pop
pop
pop
and
fs
arpl
pop
pop
pop
pop
stos
cmp
loop
xchg
jl
leave
outs
xlat
mov
pop
push
mov
icebp
dec
retf
fistp
adc
and
lods
adc
test
nop
adc
retf
add
loop
mov
push
int
das
outs
ja
ins
sub
and
retf
mov
mov
ss
ror
pusha
mov
mov
push
hlt
jne
dec
inc
icebp
or
jbe
sar
mov
jae
mov
out
repz
xor
pop
sub
call
push
iret
mov
xchg
xchg
xchg
xchg
fsub
ins
jmp
xchg
cmp
stc
ret
imul
pusha
das
es
fistp
jno
mov
fsub
call
fsubr
add
test
pop
mov
fcmovu
scas
out
push
mov
retf
pop
xor
cs
jl
mov
adc
xor
icebp
jne
xchg
xchg
movs
sbb
lahf
mov
mov
mov
cmp
jo
sar
dec
inc
aam
add
ds
ins
sbb
pop
addr16
in
das
das
outs
xor
rcr
iret
aas
sbb
push
sub
cs
or
(bad)
int3
mov
xchg
xchg
pop
and
inc
xor
jecxz
test
inc
cdq
add
rol
es
mov
dec
xor
xor
outs
sbb
lods
rcl
sbb
es
repnz
rol
movs
add
repnz
push
in
out
mov
inc
nop
cwde
inc
jne
out
adc
pop
psubusw
mov
movs
mov
outs
xchg
test
xchg
xchg
xchg
xchg
pop
mov
mov
outs
jbe
pop
fstp
out
ss
arpl
ds
imul
mov
jb
test
xchg
jmp
add
or
or
xchg
test
push
fwait
lock
fstp
sar
sub
retf
retf
xchg
push
mov
ss
sub
pop
mov
mul
or
mov
in
pop
pop
ficomp
popf
sub
mov
repz
adc
push
nop
std
adc
mov
test
push
or
ja
jmp
pop
scas
int3
inc
lods
and
add
ins
daa
aam
xor
in
pop
lods
jae
push
push
dec
sar
mov
jno
ins
mov
ret
dec
les
test
adc
int3
ds
add
repnz
sbb
xor
hlt
bound
out
mov
cmp
retf
int
in
in
(bad)
mov
mov
cmps
rol
pop
xor
mov
jb
fs
jp
test
out
sub
cli
add
or
fcmovnu
adc
dec
sub
adc
int
adc
pop
arpl
pop
mov
push
out
(bad)
fwait
mov
out
(bad)
cmp
bound
stos
fs
out
mov
popa
pop
xchg
les
jns
and
xor
xor
ins
repz
leave
(bad)
sbb
sub
shl
(bad)
sbb
or
lahf
sub
dec
inc
pop
xor
jmp
test
inc
das
outs
aas
inc
sbb
cmps
mov
fsubr
jno
mov
add
lahf
les
out
scas
mov
scas
jl
lds
add
lahf
(bad)
outs
aaa
mov
mov
adc
fidiv
or
(bad)
std
and
push
xor
shl
mov
or
mov
sti
stos
popa
sub
out
out
imul
(bad)
xchg
out
data16
fwait
sub
add
mov
retf
retf
or
pushf
lods
inc
jecxz
jns
imul
inc
(bad)
xor
mov
xor
jne
fld
outs
out
dec
cmps
movs
xrelease
ror
jbe
jne
inc
mov
sbb
cmp
retf
or
sub
mov
jl
mov
pop
adc
ja
sbb
sbb
repnz
out
mov
out
mov
loopne
adc
stos
xchg
lea
xchg
(bad)
pop
jb
in
inc
xchg
sub
mov
out
lods
dec
push
push
mov
in
jbe
outs
and
xor
int
test
xor
(bad)
retf
sbb
xchg
mov
out
jmp
jmp
jmp
sub
inc
(bad)
adc
aaa
mov
lock
xor
call
adc
push
mov
loopne
retf
test
cli
(bad)
fdivr
movs
xor
or
jnp
pop
sbb
jne
je
mov
in
cmp
pop
xor
fadd
adc
ja
outs
shl
aas
inc
scas
(bad)
lods
sti
dec
jl
inc
mov
outs
stc
(bad)
adc
fstp
mov
xchg
sub
sbb
xchg
cmp
inc
jmp
cmp
push
inc
sbb
fimul
ins
inc
mov
movs
cld
jge
jns
fstp
jb
jb
mov
jns
xchg
neg
push
push
push
xchg
jns
or
ss
xchg
(bad)
inc
jne
repnz
push
jmp
push
stc
mov
test
inc
and
ss
outs
jl
dec
mov
xor
out
hlt
lahf
sbb
mov
ret
shr
sub
scas
push
fcomp
push
pop
sbb
(bad)
outs
into
or
lock
xor
cmps
mov
adc
pop
pop
xchg
ins
dec
fcmovnu
cld
adc
mov
xchg
or
add
mov
mov
inc
cmp
aaa
outs
ja
gs
and
daa
jmp
dec
ins
cmps
out
mov
pop
fwait
xchg
mov
ss
(bad)
cmp
pushf
jb
sbb
call
inc
js
stos
(bad)
pop
fild
dec
xchg
mov
imul
das
aam
cld
outs
or
cmp
mov
(bad)
out
and
mov
mov
jmp
jle
cmp
call
les
sar
xchg
cs
mov
push
call
pop
cmp
mov
dec
fcom
cli
pop
retf
retf
pop
mov
je
push
pop
push
retf
mov
ins
sbb
int
test
xor
mov
shr
jecxz
shr
out
dec
rcl
jmp
or
adc
lds
test
fimul
add
rol
mov
xlat
das
xchg
nop
pop
xchg
into
ins
push
mov
retf
cmp
dec
call
ins
mov
and
(bad)
shr
xchg
sub
cmp
xor
out
out
push
inc
clc
cmps
push
mov
aaa
out
dec
add
dec
inc
push
push
pop
hlt
inc
jle
jae
mov
adc
mov
or
add
or
dec
imul
pop
pop
ficomp
movs
pop
popa
loopne
xchg
mov
ins
lds
jno
stos
stos
push
push
fadd
scas
or
inc
mov
mov
mov
ficomp
ret
xor
mov
xchg
pusha
je
in
push
arpl
loopne
and
jae
jns
(bad)
add
jmp
mov
lods
mov
scas
adc
xchg
call
jbe
jmp
mov
fs
outs
fcmovnu
sbb
jp
sbb
pop
pop
pop
fnstcw
add
inc
fst
mov
ret
out
xlat
inc
mov
jecxz
and
cmp
fucomi
cmps
test
xchg
shr
push
loope
xchg
xchg
mov
call
shl
sub
gs
mov
push
xor
mov
xor
test
es
call
mov
mov
and
repnz
fucom
in
sub
dec
pop
sbb
adc
ss
push
nop
shl
fcomip
repnz
add
cli
pop
add
xor
cmps
sbb
pop
adc
nop
inc
in
or
or
or
stos
rol
or
rol
dec
push
rol
push
imul
or
sub
int3
push
shr
sbb
push
retf
retf
fld
xor
mov
gs
inc
xchg
push
retf
dec
adc
xchg
adc
(bad)
mov
fdivr
inc
out
out
or
pop
rcr
mov
mov
retf
retf
or
mov
or
ficomp
stos
fwait
repnz
mov
imul
add
xchg
pop
test
sub
cmp
loop
mov
stos
jge
dec
push
sub
fucom
adc
cmp
mov
xchg
ss
outs
or
retf
arpl
mov
(bad)
adc
cmc
into
out
(bad)
push
clc
jns
jns
loopne
sbb
mov
adc
imul
int
fisubr
cmp
mov
repnz
les
(bad)
cmp
cdq
pop
xor
(bad)
adc
jb
neg
adc
adc
jns
das
outs
aaa
xor
pop
loop
enter
stc
jl
fisubr
clc
cwde
sahf
mov
jmp
fsubr
and
out
cld
push
(bad)
mov
push
sub
stos
repnz
shl
repnz
mov
or
pop
iret
bnd
out
in
in
daa
in
mov
inc
push
and
aas
retf
retf
retf
fndisi(8087
hlt
push
dec
xor
adc
sbb
mov
pop
ret
mov
stc
mov
add
pop
lahf
inc
and
jo
int
int
sbb
outs
scas
sub
aaa
inc
popa
adc
xlat
movs
mov
retf
pop
or
inc
push
outs
repz
sahf
retf
retf
or
cli
pop
push
pop
xor
test
add
fwait
ins
push
adc
sbb
in
out
mov
(bad)
mov
mov
(bad)
in
in
mov
retf
mov
mov
jle
enter
jo
movs
dec
inc
das
adc
push
int
xor
pop
xchg
mov
or
stc
push
arpl
inc
jge
pop
jecxz
outs
outs
aaa
sti
lock
adc
xchg
and
and
add
gs
jae
pop
dec
mov
push
icebp
mov
ja
outs
cmp
adc
iret
in
repz
int
fisub
mov
jns
sub
arpl
sbb
in
addr16
pop
sbb
in
cs
aam
or
lahf
cmp
(bad)
pop
pop
fsubrp
inc
mov
ss
stc
mov
fld
inc
xchg
push
clc
sti
inc
mov
ror
popf
xor
outs
jae
inc
test
cmps
int3
sub
int
dec
mov
mov
hlt
mov
int3
retf
ins
lods
lahf
imul
int
int
ins
pusha
cmp
scas
shl
cmps
(bad)
repnz
movs
push
imul
push
add
retf
retf
or
outs
bndstx
mov
mov
push
push
fucom
cmp
ret
mov
retf
xchg
pop
clc
repz
loop
not
xor
inc
jns
jns
push
xchg
ins
bound
mov
bswap
push
test
push
jo
cmp
(bad)
pop
adc
mov
ins
cs
outs
and
push
sbb
loop
mov
mov
retf
ja
jmp
inc
push
pop
pop
retf
push
in
sub
(bad)
out
(bad)
je
xor
out
cmps
je
pop
mov
inc
or
inc
into
and
sti
dec
call
fcom
cwde
pop
movs
stos
std
jne
mov
ss
shr
js
outs
cli
inc
xchg
mov
dec
pop
cdq
xchg
out
scas
sysret
sbb
dec
fcomp
xlat
mov
inc
mov
ins
push
aaa
push
cmp
dec
repnz
cmp
jge
pop
(bad)
cmp
(bad)
mov
lock
pop
inc
inc
jmp
pop
aaa
push
mov
dec
add
fcomp
les
(bad)
ja
mov
(bad)
int
push
jnp
movs
xchg
data16
cld
push
stos
fsub
test
stos
js
shl
sti
sti
mov
xchg
and
mov
hlt
fist
cmp
xchg
xor
aam
dec
and
out
repnz
xor
dec
(bad)
daa
cs
out
pop
inc
lods
jb
push
retf
ret
dec
int
ret
pop
or
mov
jecxz
dec
mov
addr16
fwait
mov
mov
int
aaa
ss
outs
pop
test
out
icebp
rcl
(bad)
imul
in
sub
jle
pop
jmp
mov
pop
lds
push
push
dec
ret
in
shl
gs
retf
retf
fcmovne
sub
sub
mov
mov
mov
jbe
retf
push
dec
sbb
fmul
sbb
fist
int
xlat
jo
sbb
in
jne
jbe
cmps
mov
cmp
inc
push
fistp
(bad)
push
or
jmp
fcmovne
shl
mov
sar
push
add
pop
call
push
mov
(bad)
fist
(bad)
in
mov
ins
adc
or
jmp
jbe
fcmovne
cmp
ins
sub
mov
test
data16
enter
xchg
(bad)
out
inc
mov
mov
sbb
fwait
retf
mov
sub
pop
mov
aaa
xchg
xchg
pushf
lock
dec
fadd
jne
repnz
fst
sub
or
outs
pop
push
xor
leave
inc
imul
fwait
mov
test
scas
ss
sar
adc
pop
nop
cmp
mov
ret
pop
stc
(bad)
into
ss
outs
fwait
push
sub
aas
push
je
mov
xchg
mov
ror
iret
push
ins
(bad)
popa
dec
cdq
sub
test
pop
mov
sbb
(bad)
scas
add
xor
cld
adc
jmp
ret
add
pop
add
shl
inc
push
xchg
repnz
sub
mov
imul
mov
push
or
imul
outs
in
mov
adc
and
jo
cs
outs
push
mov
jns
imul
mov
fisubr
nop
leave
cmps
xchg
repnz
in
xor
cs
test
cmc
jg
push
mov
aaa
mov
cld
adc
mov
nop
cmp
and
fdiv
das
jle
xor
fdiv
(bad)
xor
das
outs
add
movs
imul
mov
dec
xor
add
add
in
and
loopne
jmp
lods
push
movs
cmp
sbb
fwait
outs
xor
ss
rcl
mov
mov
stos
add
mov
inc
sbb
jne
jae
out
into
pop
xor
push
push
push
xor
scas
fild
inc
fwait
cmp
add
sub
loop
ror
out
sub
jmp
outs
mov
jmp
in
adc
jg
fnstcw
rol
(bad)
jns
xlat
adc
ins
inc
mov
dec
loope
(bad)
cmps
bound
vphsubwd
loopne
mov
mov
scas
fcomp
xchg
and
dec
in
and
in
push
mov
mov
mov
mov
ret
pushf
shl
cld
out
dec
mov
jns
ja
push
popf
ret
sar
mov
mov
retf
mov
sbb
push
or
rcr
jp
push
jbe
jne
popf
xchg
mov
and
test
jae
mov
or
push
mov
and
movs
xchg
shr
fsub
jbe
mov
inc
inc
mov
mov
inc
shl
add
fsubr
inc
imul
aam
ins
push
xchg
mov
dec
mov
repnz
sahf
sub
hlt
xchg
int
ret
outs
mov
and
ss
ror
retf
retf
fild
ins
ins
fcmovu
pop
data16
or
mov
sbb
xchg
xchg
pop
fild
shr
sub
rcl
cmps
xor
and
int3
repnz
ret
xchg
xchg
cdq
xor
loope
ret
stc
mov
push
jo
call
call
test
(bad)
and
inc
mov
test
les
in
repz
pop
jo
movs
sub
or
fwait
retf
(bad)
mov
call
fidiv
outs
aaa
fsubr
test
out
mov
test
sub
ins
jno
and
mov
xlat
int
ja
dec
inc
mov
jno
outs
movs
sub
ja
and
push
imul
int
sbb
(bad)
pop
fsubr
enter
sub
retf
retf
mov
mov
ds
fucom
mov
inc
sub
jb
xor
dec
in
add
out
stc
gs
dec
mov
lods
lods
gs
xchg
pop
arpl
in
out
inc
pcmpgtb
in
and
outs
or
inc
out
aaa
aaa
inc
xchg
adc
popf
fmul
pop
pop
repnz
inc
push
pusha
mov
inc
fcomp
and
(bad)
repz
rcr
(bad)
xor
xlat
inc
std
add
mov
inc
mov
adc
mov
fnstsw
mov
xchg
jae
push
push
sbb
(bad)
mov
icebp
adc
(bad)
int
add
sbb
das
pop
aas
aam
xchg
fcmovnu
inc
int
push
and
mov
inc
in
out
jns
(bad)
rcr
cwde
stc
mov
inc
cmp
test
mov
hlt
icebp
jb
mov
jns
out
shl
sti
xchg
xchg
(bad)
daa
xor
push
or
mov
push
fcmovu
sti
jl
and
outs
add
mov
jae
in
cs
pop
inc
inc
adc
hlt
(bad)
jmp
and
fisubr
ja
mov
out
dec
mov
mov
ins
pop
mov
add
out
mov
mov
loop
push
outs
mov
mov
aaa
adc
dec
repz
mov
fs
in
inc
je
out
pop
inc
outs
ficomp
in
ss
fst
push
inc
adc
int
mov
or
iret
pop
fsubr
inc
push
pusha
xchg
ror
ins
pop
sub
xor
or
fnsave
les
add
inc
jmp
mov
fdivr
xchg
call
int
leave
cwde
inc
clc
pop
adc
jmp
xchg
xchg
xchg
cmps
jmp
scas
sti
fcmovnu
fcomp
add
inc
sub
sbb
jns
jle
gs
icebp
push
sbb
out
repz
jne
es
cs
fidiv
fs
jnp
test
fwait
xchg
mov
sbb
pop
scas
cmp
shl
retf
retf
retf
rcl
jle
fsubr
jnp
cld
mov
mov
loopne
push
cmp
in
or
mov
hlt
or
push
mov
mov
mov
jns
retf
loopne
dec
out
add
pop
outs
stos
mov
sub
retf
fcmovnu
cmps
and
(bad)
aad
adc
adc
aas
call
repnz
or
stos
jns
fucomp
jl
sti
sbb
cmps
iret
mov
xchg
lea
jns
xor
std
sbb
jns
jns
cmp
shl
test
jns
add
mov
jb
call
jns
jns
adc
fwait
jo
mov
xchg
stos
inc
sub
push
lock
add
mov
jmp
(bad)
(bad)
push
les
pop
outs
jae
fisttp
clc
lahf
inc
das
test
pop
clc
pop
call
adc
mov
pop
pop
into
push
lahf
fisub
aad
and
scas
retf
xor
sub
bound
cdq
jb
jl
sub
adc
adc
add
jecxz
outs
ja
push
sbb
jae
jmp
sub
and
push
fucom
jbe
out
icebp
sbb
arpl
dec
fld
idiv
push
rcl
jle
xchg
mov
sbb
(bad)
leave
dec
(bad)
mov
xchg
inc
or
bound
jp
or
mov
and
adc
jl
pusha
mov
cmp
mov
aaa
rol
(bad)
call
cwde
lods
int
retf
xchg
mov
sub
inc
cmp
xor
int
out
adc
es
xor
aaa
inc
xlat
push
cmp
test
movs
inc
ficomp
or
jns
mov
inc
mov
xchg
or
scas
mov
xchg
mov
arpl
xor
add
or
ins
ds
fsubrp
sbb
pushf
int3
(bad)
jg
and
fstp
pop
jbe
cmp
xchg
pop
nop
fstp
mov
pop
mov
or
ss
ins
jp
xchg
inc
std
adc
hlt
push
mov
pop
push
leave
mov
cld
ror
xor
push
popa
ins
bound
mov
push
xor
add
mov
pop
nop
jmp
test
inc
jle
ins
mov
cdq
nop
enter
out
xlat
out
inc
pop
nop
cmp
sbb
stos
sub
pop
sbb
sub
add
(bad)
fwait
or
arpl
jmp
les
xchg
dec
jle
mov
(bad)
cld
(bad)
push
xchg
cmps
mov
dec
pop
inc
jbe
sbb
inc
pop
fwait
add
loopne
aas
ret
and
or
adc
sub
xor
inc
dec
imul
mov
scas
ins
fwait
or
add
es
inc
and
je
pop
dec
out
add
sub
stos
imul
(bad)
test
repnz
push
outs
fistp
loop
movs
(bad)
adc
in
int
cmps
sub
or
add
out
mov
mov
(bad)
repnz
dec
ins
push
adc
mov
ja
retf
retf
pavgb
xchg
ja
popa
dec
sbb
fisubr
movs
push
cli
pop
cli
retf
pop
jo
in
cs
ins
pop
fnsave
cmps
gs
xchg
xchg
iret
or
push
mov
jg
retf
ja
call
xchg
in
outs
dec
out
bnd
xchg
jmp
dec
pop
xchg
daa
fcomp
mov
in
in
movs
neg
je
inc
mov
(bad)
int
icebp
cmp
(bad)
outs
cmp
out
inc
jge
pop
and
lock
scas
loop
loop
imul
in
in
loope
out
cld
rcl
mov
in
in
cmc
stos
xlat
int3
mov
scas
mov
popf
jmp
arpl
cmp
jl
fidivr
ss
xchg
mov
pop
jle
xchg
dec
adc
repz
outs
out
aaa
xchg
xchg
les
out
out
aam
xchg
xchg
outs
cmp
ja
cmp
mov
inc
fwait
xchg
add
xchg
pop
mov
in
into
add
add
repnz
(bad)
dec
inc
out
(bad)
fdiv
jns
mov
add
jp
adc
jns
cmp
in
push
scas
(bad)
ret
cmp
add
jae
in
ds
fidiv
in
mov
cmc
lea
sbb
in
repnz
daa
sub
rcr
ss
mov
cwde
or
(bad)
mov
daa
dec
xchg
ss
mov
pop
fcomi
repnz
or
sub
mov
ins
fsubrp
jbe
jl
cli
stc
fist
inc
rcr
mov
pop
xor
jbe
out
adc
or
jb
pop
repnz
retf
push
pushf
xor
jl
loopne
out
out
fisttp
iret
in
push
ins
outs
add
inc
imul
sar
lods
out
or
repnz
adc
jmp
sbb
sti
daa
ret
xchg
jg
xor
outs
fwait
stos
push
outs
adc
(bad)
sbb
mov
pop
rol
xchg
jne
adc
jo
jns
inc
jge
iret
mov
adc
inc
data16
js
push
fstp
xchg
and
sub
ds
and
add
outs
cmp
or
in
xor
int
stos
xchg
dec
int3
sbb
outs
(bad)
in
push
xor
push
cmp
outs
cmps
xor
lahf
sbb
test
mov
out
cld
mov
das
mov
add
and
or
icebp
mov
outs
outs
cmp
inc
push
movs
inc
loopne
xlat
jne
pop
leave
movs
in
nop
adc
push
xchg
nop
mov
jmp
jle
int
retf
xchg
jmp
les
sbb
jns
xor
loop
jo
jns
jmp
fsub
fwait
pop
je
xchg
or
push
push
cmp
jl
jbe
sub
dec
pop
inc
clc
push
sub
xor
mov
nop
(bad)
in
ret
jbe
test
adc
mov
out
arpl
js
mov
cwde
mov
fcmovne
mov
ds
bswap
pop
sbb
out
ret
(bad)
mov
push
inc
cli
popa
dec
inc
loopne
mov
enter
repnz
xlat
dec
pop
xor
mov
xchg
out
shl
das
outs
dec
inc
or
and
outs
retf
mov
shr
ins
jb
push
xor
fstp
jl
popa
in
fimul
jns
mov
cmp
mov
jns
xor
mov
aas
dec
ss
out
dec
fnstenv
push
sti
xchg
fdiv
imul
jb
(bad)
sub
mov
repnz
lods
xchg
xchg
dec
xor
pop
dec
sub
in
jae
call
loopne
cmp
int
test
xchg
clc
imul
fbstp
jae
fst
or
sub
out
mov
outs
jno
xor
call
es
add
jbe
ins
ret
cwde
fwait
mov
xor
fild
retf
sets
daa
sbb
xchg
(bad)
jne
mov
push
inc
add
xor
and
repz
xor
jmp
sub
xchg
stos
mov
pop
xor
fisub
jo
dec
sahf
in
les
fbstp
jne
aam
xchg
fwait
mov
aad
arpl
sahf
in
inc
(bad)
out
xchg
rcr
mov
fsub
pop
cmps
movs
jb
mov
dec
loope
aaa
out
lods
retf
retf
retf
retf
fcomip
cmp
call
mov
int
retf
enter
dec
ss
pusha
sub
xor
lock
lds
add
adc
and
cs
jmp
xchg
push
and
arpl
ror
xchg
cmp
or
lods
and
(bad)
icebp
jmp
fsubr
ss
dec
xor
push
into
push
xchg
sub
or
mov
or
stc
xlat
mov
stos
hlt
out
xchg
lods
xchg
jns
inc
aaa
outs
(bad)
push
lods
mov
in
cmc
fdivr
in
ja
cmps
mov
sbb
repz
mov
sti
dec
fld
cs
frstor
dec
mov
xchg
cmp
mov
scas
and
js
and
inc
mov
inc
sbb
mov
add
outs
jnp
int
movs
sbb
fdivrp
pandn
fiadd
(bad)
in
cmp
push
loopne
adc
repnz
test
lods
pushf
xor
sbb
fld
sub
scas
retf
fist
fsub
push
dec
cmps
adc
mov
pop
(bad)
sbb
ins
pop
pop
fsubp
sbb
jle
out
test
mov
xor
push
test
repnz
iret
inc
xor
fnstcw
in
in
(bad)
xchg
pop
push
ds
ret
sbb
(bad)
mov
int3
xchg
push
jae
dec
outs
ja
je
and
dec
jl
js
mov
xor
lahf
adc
pop
sbb
cmp
mov
shl
cmp
inc
cld
mov
into
push
or
xor
call
sbb
fadd
jne
mov
sbb
cli
daa
mov
cs
scas
add
movs
outs
test
dec
fdivr
fnstsw
int3
call
stos
mov
dec
pop
xchg
xchg
xchg
mov
in
mov
mov
xchg
and
pop
sbb
adc
add
xchg
dec
fbld
mov
push
jl
ins
repz
push
jnp
add
outs
lds
sub
cmp
(bad)
iret
adc
in
lods
and
dec
repz
sbb
sbb
inc
in
imul
and
enter
repnz
outs
mov
sbb
inc
jmp
repnz
mov
adc
fcmovne
in
repnz
movs
xor
lds
in
jbe
push
mov
daa
jns
aam
or
out
inc
mov
or
fidiv
add
mov
bound
pop
pop
jbe
xchg
jl
adc
fstp
add
retf
pop
adc
int3
in
ret
dec
pop
das
mov
sub
inc
fiadd
jns
cs
das
test
xchg
xor
xchg
push
fisubr
aad
ror
dec
rcr
out
fcomp
pop
sbb
retf
(bad)
mov
inc
and
xor
mov
ss
or
xchg
adc
outs
fcomp
nop
div
aaa
mov
or
in
jns
xor
cwde
jo
xor
sub
push
imul
ins
pop
mov
mov
aam
in
inc
(bad)
jle
shl
outs
cmp
xchg
mov
into
in
outs
pop
aad
icebp
mov
or
and
repnz
out
jg
in
sahf
adc
jg
fisubr
fisub
fwait
test
jbe
out
sti
ret
lods
and
inc
pop
imul
pop
sbb
addr16
ins
jl
mov
xchg
cmc
push
fld
test
(bad)
fwait
push
aaa
jae
mov
fistp
jg
push
ja
jp
push
xor
sar
dec
dec
push
daa
ss
pop
jbe
jbe
cmp
sti
xor
in
push
sbb
in
outs
jae
dec
jo
or
or
xchg
icebp
js
mov
fisttp
out
and
push
adc
jae
ss
mov
lock
adc
cmp
scas
mov
out
mul
js
push
retf
outs
ret
test
push
xor
mov
jns
and
add
idiv
mov
inc
mov
repnz
push
and
dec
aaa
jp
addr16
sub
push
out
push
add
shr
shl
int3
fist
cmc
push
mov
test
fucom
(bad)
jg
not
xor
call
mov
clc
into
push
fs
in
out
or
dec
jmp
cmp
pop
push
pop
inc
xchg
js
ins
movs
sbb
cs
cmc
std
inc
rcr
popa
mov
xchg
ret
sbb
stos
push
mov
mov
das
jb
repnz
dec
sar
sub
mov
jmp
dec
ret
pop
jne
out
ins
jl
cmp
push
stos
adc
popf
movs
sub
mov
repnz
mov
or
mov
jl
jmp
les
pop
pop
pop
fild
mul
adc
movnti
cld
popf
xchg
test
sbb
jbe
mov
fmul
jns
pop
pop
fidiv
not
rol
mov
pop
retf
sbb
sbb
jmp
call
fwait
inc
mov
push
mov
and
in
ins
add
xchg
mov
bound
mov
into
inc
aaa
xchg
scas
add
inc
int
fucomi
popa
cli
fisub
imul
pop
into
sbb
inc
aaa
mov
nop
call
cmp
cs
fcomi
xchg
je
dec
mov
dec
mov
(bad)
loop
(bad)
ins
mov
in
icebp
push
and
mov
(bad)
pop
bound
and
cmp
je
stos
(bad)
(bad)
ds
cmp
push
mov
mov
lds
or
sub
(bad)
cmp
sbb
lods
rol
mov
fstp
movs
cld
and
ins
cmps
clc
sub
fldln2
sub
popa
cmp
mov
pop
sbb
int
mov
xchg
aas
pop
sub
ins
and
fstp
and
mov
sub
fwait
imul
mov
dec
bound
je
out
dec
jcxz
add
repnz
or
out
lods
imul
push
je
dec
ins
pop
jbe
iret
(bad)
sbb
retf
retf
retf
retf
xor
loopne
std
aad
pop
inc
aas
retf
(bad)
out
out
or
dec
pop
mov
sub
fiadd
and
fwait
xchg
push
xor
mov
or
xlat
sbb
jne
add
in
stos
pop
jl
retf
fisttp
lds
call
adc
inc
lods
ins
(bad)
cmp
dec
dec
das
das
outs
mov
cmp
xor
mov
mov
xor
cmc
outs
retf
retf
pop
add
pop
dec
mov
jb
fwait
retf
retf
movs
out
mov
xchg
mov
das
inc
aad
out
sbb
pop
stc
xor
data16
outs
test
imul
enter
stos
or
aaa
aaa
ss
fcomp
mov
jmp
pop
fidiv
outs
pop
push
cmc
inc
mov
add
test
fcomp
(bad)
arpl
mov
sahf
popf
or
and
add
mov
movs
gs
xchg
push
loope
sub
ret
(bad)
sbb
pop
push
bound
addr16
xor
outs
nop
mov
fs
fisttp
and
xchg
mov
shr
mov
int
leave
call
or
xor
add
ss
jmp
push
adc
push
add
jae
dec
js
pusha
xor
fdivr
addr16
xor
in
outs
mov
(bad)
movs
cmp
mov
pop
sar
ja
jbe
inc
sar
stos
mov
push
fcomp
loopne
imul
dec
mov
cmp
xlat
repz
scas
dec
xchg
push
stos
loop
mov
(bad)
imul
add
mov
and
inc
and
sub
jno
retf
fld
pop
push
out
lahf
mov
retf
retf
retf
retf
jmp
sbb
stc
inc
xchg
enter
xchg
xchg
mov
neg
call
and
outs
aaa
imul
leave
aam
jo
fcmovnu
pop
fisub
hlt
sbb
aam
dec
or
sbb
xchg
ja
jns
jns
shr
adc
adc
push
jae
out
pop
sub
fwait
or
je
fistp
(bad)
arpl
xor
aas
or
retf
arpl
adc
(bad)
ficom
pop
pop
fidiv
xchg
mov
mov
push
imul
add
ins
lods
mov
pusha
and
jns
mov
ss
jbe
add
lods
push
cmp
in
outs
pop
data16
jns
pop
xchg
retf
push
jbe
mov
adc
mov
adc
jns
and
pop
out
adc
clc
and
int
sbb
out
sub
les
adc
div
push
adc
outs
xlat
inc
mov
inc
mov
mov
rcl
pop
(bad)
jmp
fidiv
ja
inc
xchg
in
out
fsubrp
mov
popf
iret
ret
scas
mov
ret
rcr
(bad)
repnz
ss
xchg
out
dec
mov
jmp
adc
in
repz
(bad)
movs
dec
outs
int3
xchg
xchg
retf
retf
retf
retf
mov
pop
mov
adc
push
push
call
adc
in
add
push
or
mov
stc
mov
out
rol
mov
js
mov
dec
mov
retf
jb
mov
dec
mov
jae
mov
sbb
xchg
aaa
dec
lea
call
sub
lahf
fdivr
mov
sbb
jecxz
push
pop
pop
shr
cdq
retf
retf
dec
xor
sub
jmp
mov
int
sbb
clc
mov
std
cmps
xor
jnp
pushw
mov
jecxz
push
popa
arpl
repnz
xor
mov
xchg
xor
xor
pop
cmp
dec
add
call
jecxz
(bad)
inc
in
jne
mov
jecxz
or
fcmovnu
int3
cmc
mov
lods
aam
test
loopne
fdiv
repnz
push
dec
inc
push
ja
mov
retf
fld
xor
popf
ds
sub
pop
ja
mov
mov
mov
adc
and
fiadd
cmps
mov
xor
sbb
jl
xchg
out
sbb
xor
repnz
dec
cs
push
ss
(bad)
iret
idiv
loope
mov
fnstenv
sbb
ss
inc
fistp
xor
add
and
xor
adc
into
push
ins
mov
pop
dec
ret
pop
stos
fdiv
fucomp
mov
mov
pop
cmp
aaa
fdivr
ror
(bad)
icebp
fidivr
adc
xchg
imul
movs
outs
sub
xchg
mov
fisttp
call
or
mov
pushf
or
ss
das
outs
jl
pop
mov
fdivr
imul
stc
cmps
pop
je
fcos
jmp
jns
out
jecxz
mov
pop
push
pop
stc
push
mov
cmp
movs
sub
fwait
mov
arpl
arpl
das
pop
xchg
xchg
sahf
xchg
xchg
aam
inc
adc
lock
daa
inc
fst
xchg
pop
cs
sub
sti
push
rcl
mov
dec
enter
push
fsub
mov
xor
out
call
ss
into
dec
sub
push
popf
in
rcr
inc
and
mov
sbb
out
out
sbb
dec
and
cmps
popf
add
mov
jns
mov
mov
iret
add
pop
mul
xchg
adc
lods
xchg
popa
cmp
mov
dec
cli
test
retf
retf
sar
adc
cmp
sbb
bound
cs
das
ins
repnz
pushf
popf
jns
imul
shr
cmp
pop
icebp
pop
fdiv
ins
fisubr
cmp
mov
ficomp
loopne
mov
and
sub
fsub
in
xchg
retf
fistp
inc
stos
ja
mov
loopne
sahf
mov
outs
ja
retf
aas
dec
ficomp
mov
push
xor
fcomp
mov
dec
sbb
fs
mov
jbe
sbb
jg
or
sub
mov
imul
fcmovu
mov
jne
xchg
enter
retf
ins
xlat
inc
mov
lds
and
sbb
shl
ins
cmp
hlt
sahf
xor
test
dec
sub
repnz
cmc
mov
test
inc
sbb
push
push
and
jmp
push
mov
sbb
aaa
pop
and
stc
scas
push
mov
pop
fisubr
out
in
fnstsw
push
in
mov
scas
jb
test
xor
outs
push
xor
mov
dec
fsubp
nop
cld
or
xor
pop
aad
mov
mov
inc
int3
leave
mov
cmp
xchg
jmp
lahf
in
in
dec
jnp
out
mov
mov
or
mov
fs
div
jns
sbb
sbb
mov
and
jl
mov
mov
movs
jae
dec
imul
pop
jnp
js
inc
stc
repnz
dec
ja
aad
pusha
enter
pop
mov
shl
mov
cmps
imul
pop
xor
xchg
test
ins
xchg
jl
push
lods
stos
mov
stc
jns
shl
in
in
shr
data16
cld
pusha
xchg
mov
out
push
call
mov
nop
xor
inc
aaa
or
sbb
ja
fnsave
out
jbe
xor
xor
jmp
mov
fiadd
and
fucom
xor
pusha
(bad)
out
fwait
add
mov
fsubr
sbb
dec
mov
and
ds
daa
pop
pusha
mov
frstor
or
xchg
ins
cmp
lahf
retf
sbb
(bad)
sar
or
lsl
das
outs
cmp
sub
jae
mov
cdq
push
lea
mov
jbe
pop
jb
scas
retf
test
push
ins
repnz
adc
xor
jmp
out
jp
pop
jns
jmp
inc
jno
(bad)
xor
jae
jns
clc
fcom
push
cdq
popf
in
xlat
push
adc
lahf
repnz
nop
stos
fimul
sub
push
jecxz
fist
out
xchg
or
rol
aaa
jecxz
in
mov
enter
jp
mov
cmp
dec
cmp
imul
lods
out
out
mov
(bad)
or
mov
pop
mov
repnz
or
fld
dec
dec
repnz
loop
movs
push
mov
outs
pop
jg
jmp
daa
int
in
out
xor
mov
mov
lods
xor
add
sti
add
sbb
or
sub
jl
ins
inc
mov
or
dec
sub
cmps
stc
div
xchg
fstp
push
pop
nop
push
inc
push
sbb
jge
dec
dec
imul
jnp
aam
jns
mov
dec
sbb
cld
cmps
mov
mov
jns
pop
loopne
add
(bad)
rcr
push
cmp
mov
popa
mov
jae
cli
add
push
inc
mov
jl
xchg
imul
fstp
cmp
aad
jbe
fld
fstp
call
out
sbb
pop
and
mov
mov
rcr
ret
mov
mov
cmps
cld
test
das
das
das
outs
xchg
nop
push
mov
sbb
cs
das
iret
and
imul
mov
mov
jbe
aad
in
pop
stos
lea
mov
repnz
mov
test
mov
(bad)
imul
push
test
(bad)
mov
pop
dec
dec
jge
lock
pop
scas
and
mov
out
mov
(bad)
outs
inc
sbb
nop
jbe
sbb
jge
jae
(bad)
(bad)
pushf
fchs
inc
sbb
add
ja
adc
dec
lahf
pop
pop
dec
fisttp
out
ss
xchg
xchg
(bad)
repnz
mov
jns
sti
ret
pop
add
dec
inc
(bad)
(bad)
sbb
dec
out
aad
ins
mov
aaa
inc
je
xchg
loopne
sbb
sub
inc
test
ins
pop
pop
mov
call
test
aaa
pop
jns
mov
adc
std
daa
fcmove
inc
jns
jns
jae
cmps
nop
dec
fwait
or
movs
into
jg
mov
push
pop
rol
out
shl
mov
and
pop
push
sub
xchg
mov
mov
sub
inc
jbe
add
mov
ror
mov
outs
sbb
mov
(bad)
ins
fld
je
ins
repz
mov
in
dec
cmp
dec
stos
push
(bad)
leave
mov
mov
push
add
je
xchg
jne
xor
mov
or
xchg
mov
ja
shl
ds
jns
icebp
dec
rcr
push
ret
jmp
jo
outs
aad
sbb
retf
retf
fcomi
xor
mov
jecxz
stc
pop
ret
xchg
mov
retf
push
rcl
mov
push
and
sbb
fild
lea
adc
scas
(bad)
ficom
cmps
jnp
ss
pop
sbb
mov
adc
mov
pop
pop
add
hlt
and
mov
or
fmul
ins
outs
xchg
push
movs
movs
outs
sar
mov
mov
or
push
mov
push
dec
or
(bad)
clc
xor
pop
xchg
dec
sub
cwde
push
cmp
test
jmp
out
sbb
outs
jae
and
sub
fwait
jb
add
retf
(bad)
mov
movs
sbb
popa
pop
fild
int
ret
mov
(bad)
(bad)
stc
and
mov
call
inc
sbb
or
xor
pop
jp
adc
outs
aaa
bound
xor
push
inc
mov
pop
pop
shr
jmp
push
push
stos
jns
and
jne
xchg
sbb
pop
cmp
(bad)
lods
and
out
jbe
jne
jge
(bad)
or
xchg
fstp
push
lods
sbb
inc
into
push
gs
jge
ret
fs
bnd
dec
cs
fmul
mov
mov
dec
xchg
inc
stos
jae
cmp
sbb
popf
or
or
mov
js
stos
int3
retf
sbb
add
fnsave
xchg
xor
push
mov
dec
add
xchg
nop
lds
mov
outs
aam
xor
xor
cmp
outs
push
test
mov
sbb
sub
push
imul
lahf
pop
mov
push
mov
addr16
jmp
pop
sbb
mov
in
rol
adc
(bad)
mov
mov
rol
fdivr
int
adc
pop
fisubr
movs
add
ss
mov
(bad)
das
retf
retf
or
ins
mov
mov
retf
es
ins
mov
lea
inc
push
rol
and
loope
js
cld
aas
inc
in
outs
ss
adc
add
fcomp
inc
fisubr
not
(bad)
sti
je
xor
dec
jmp
mov
push
adc
sbb
out
push
xor
test
not
mov
test
in
into
sbb
mov
dec
movs
dec
loopne
loop
ins
mov
pushf
sub
ret
ss
into
sub
and
pop
test
in
push
test
mov
mov
shl
push
xor
ss
fnstenv
and
(bad)
push
add
pop
pop
(bad)
dec
enter
nop
push
imul
xchg
or
sbb
outs
aad
cmp
dec
mov
xor
mov
popf
jnp
(bad)
jecxz
mov
scas
in
sbb
add
fdiv
fidivr
jmp
mov
jnp
rcr
jge
push
sub
mov
sti
out
jbe
cli
mov
mov
push
pop
aad
jae
fld
xor
adc
jns
mov
ror
add
cmp
repz
adc
pop
fcom
push
loopne
daa
pop
xchg
jns
push
ins
loopne
int
retf
fcmovnu
loope
push
fdiv
stos
pop
cmp
mov
mov
xor
retf
movlps
xchg
ror
mov
mov
das
lahf
or
clc
in
xchg
pop
push
pushf
sbb
test
mov
das
outs
ja
jg
add
jnp
cwde
mov
add
pusha
mov
dec
jns
repz
rol
mov
sub
inc
jae
mov
push
retf
retf
fdivr
push
not
in
test
xchg
xchg
out
and
aam
and
inc
fdiv
pop
aas
pop
aas
ja
out
cmp
jecxz
and
stos
call
ss
add
popa
fsubr
mov
adc
adc
push
lds
ret
shl
les
xor
pop
sbb
mov
gs
push
and
xchg
fstp
jb
gs
es
mov
loopne
mov
sub
mov
mov
aaa
mov
jge
in
sahf
cmps
add
pop
faddp
pusha
push
(bad)
iret
mov
cld
retf
(bad)
ret
int3
or
inc
xor
inc
test
jns
sbb
sub
call
cs
popa
push
xchg
adc
cli
pop
pop
lock
fsubr
je
adc
(bad)
pop
ins
int3
aaa
or
aaa
mov
stc
div
sbb
test
outs
cmp
fnstcw
(bad)
jmp
mov
je
xchg
jbe
jns
fnsave
pop
sbb
ja
or
or
ret
mov
aam
mov
inc
jae
jns
pop
iret
mov
dec
sbb
iret
push
fwait
mov
loop
mov
or
aad
inc
sub
retf
or
out
pop
cmp
cmp
fwait
mov
mov
pop
stos
dec
in
mov
mov
(bad)
and
mov
leave
mov
mov
jbe
push
(bad)
es
mov
inc
jne
ss
ja
xchg
dec
int3
call
dec
add
xor
das
(bad)
mov
(bad)
rol
je
retf
fcmovnu
scas
push
dec
mov
mov
les
jl
inc
lock
pushf
mov
pushf
(bad)
xor
stc
outs
cmp
sub
xor
stc
and
fmul
lahf
retf
xchg
mov
sbb
add
js
mov
std
call
bnd
mov
dec
mov
push
dec
and
mov
jl
test
jp
into
xchg
xchg
mov
fist
push
ins
dec
pop
xchg
cs
dec
xchg
fild
call
inc
push
sbb
push
add
stos
sbb
ins
push
add
adc
fld
jbe
add
xlat
sub
outs
outs
mov
sbb
mov
aam
pop
pop
pop
aam
mov
out
pop
dec
xchg
mov
out
sub
out
xor
mov
mov
je
pop
jae
push
cmp
add
in
in
fs
mov
sub
lods
rcr
mov
sub
int
out
arpl
dec
adc
add
cli
in
in
icebp
stc
push
repnz
out
add
sar
aad
lds
fild
mov
das
dec
xchg
imul
in
out
jbe
aaa
mov
cmp
out
sahf
or
in
jb
sub
add
xchg
pop
shl
lahf
sbb
and
mov
(bad)
ss
sahf
out
fild
jns
mov
push
sbb
push
shr
add
fwait
test
std
mov
xor
pop
sbb
xor
fwait
mov
and
mov
pop
(bad)
shl
test
in
(bad)
mov
je
cmp
inc
mov
sub
jns
fsubr
xor
idiv
mov
jno
xchg
iret
iret
jl
xchg
xor
test
mov
pop
sub
cmp
adc
pop
inc
jmp
jmp
repz
add
sub
jbe
fcmovbe
sbb
imul
mov
push
lods
or
inc
pop
xor
add
test
fnstsw
aaa
lds
add
and
repnz
cli
lahf
dec
bound
mov
jae
sahf
stos
mov
push
adc
ret
xchg
xchg
xor
mov
lods
pop
cli
xchg
pushf
dec
pop
adc
das
outs
ja
inc
push
out
hlt
pop
cmps
xchg
dec
in
outs
cs
dec
outs
jl
or
std
(bad)
pop
jbe
mov
or
mov
jbe
inc
ins
ss
loope
aad
bnd
(bad)
and
int3
pop
neg
in
repz
and
sti
cmp
xchg
je
lock
retf
retf
fcmovne
pop
mov
jo
dec
js
push
jbe
retf
jb
adc
ds
jbe
sbb
xlat
fld
add
in
test
and
sbb
inc
jns
fstp
push
sbb
in
pop
pusha
mov
cmp
shl
test
popf
or
stos
jnp
outs
cs
outs
out
pusha
jmp
and
rcr
and
ins
pop
fdivrp
xchg
out
shr
int
ja
mov
shl
pop
retf
xor
pop
pop
retf
(bad)
repnz
scas
fldcw
je
gs
(bad)
dec
in
jns
jns
cs
shr
repnz
adc
mov
and
mov
nop
sbb
aam
cli
mov
fild
sar
mov
seta
ror
iret
xor
iret
arpl
stos
xor
test
and
jns
repz
cmc
dec
xchg
loop
in
jns
jns
inc
mov
js
imul
jns
or
mov
xlat
pop
inc
sbb
push
pop
mov
imul
in
out
repnz
pop
mov
int
in
arpl
pop
repz
jbe
sub
mov
and
ror
aam
mov
(bad)
pop
fsub
mov
mov
or
pop
adc
sub
ret
xchg
push
inc
retf
retf
retf
retf
dec
loop
adc
and
fwait
retf
retf
retf
aas
test
jnp
inc
shl
jns
int
in
jbe
adc
jmp
mov
push
inc
hlt
push
lds
push
shl
push
ret
scas
(bad)
xchg
inc
cdq
dec
sahf
and
xor
test
xor
test
push
or
add
xchg
repnz
jecxz
cli
outs
in
cmc
ins
in
lods
mov
nop
push
mov
in
sub
dec
mov
call
or
out
sbb
fstp
and
jl
gs
push
mov
adc
scas
adc
lods
lock
pop
mov
call
pop
adc
push
and
mov
nop
xchg
movs
xor
mov
lods
scas
test
add
lods
mov
adc
call
xchg
fwait
scas
mov
mov
jge
(bad)
nop
mov
xchg
xchg
mov
mov
scas
lea
leave
xchg
mov
mov
mov
out
mov
lea
int3
les
dec
xchg
mov
lods
mov
push
(bad)
mov
lds
retf
cmps
retf
scas
jns
mov
leave
pop
mov
mov
lea
mov
push
movs
and
lds
aas
mov
mov
(bad)
cmps
enter
cdq
jge
pop
push
retf
test
leave
mov
and
mov
mov
outs
(bad)
jmp
or
int3
mov
xchg
mov
add
fcomp
cdq
mov
(bad)
leave
stos
test
cmps
mov
mov
fst
add
mov
retf
int
outs
sbb
retf
scas
xchg
stos
xchg
mov
call
lds
movs
pop
xchg
das
aaa
das
inc
mov
stos
retf
nop
mov
fidivr
ss
(bad)
sar
(bad)
lea
adc
xor
movs
mov
xchg
mov
push
int
(bad)
mov
or
or
pop
xchg
jge
int3
pop
mov
mov
retf
mov
mov
ror
xchg
mov
movs
jle
fwait
mov
lds
jo
int
call
mov
fwait
int
scas
adc
or
fistp
lss
scas
movs
sti
imul
int
scas
movs
mov
scas
mov
scas
cwde
pcmpgtd
jb
lods
mov
int
lea
fwait
int
test
xchg
sub
xor
fwait
(bad)
scas
ret
xchg
jnp
je
lahf
leave
mov
pop
test
xchg
push
sbb
push
dec
mov
mov
fbld
mov
ret
sbb
pop
arpl
leave
int3
lods
add
fisttp
les
push
mov
mov
lock
outs
pop
scas
call
retf
mov
(bad)
(bad)
mov
mov
xchg
add
(bad)
(bad)
movs
add
mov
lods
icebp
fistp
xchg
int
xchg
mov
pop
clc
(bad)
call
pop
retf
(bad)
mov
movs
xchg
lods
mov
mov
lods
mov
ins
mov
test
test
test
cwde
or
xchg
xchg
cwde
adc
(bad)
jg
mov
xchg
lods
test
enter
xchg
xchg
mov
enter
nop
daa
jg
fild
dec
mov
or
xchg
xchg
fwait
rcr
(bad)
in
test
fs
xchg
mov
daa
call
xchg
scas
adc
xchg
xchg
sub
cli
(bad)
(bad)
jge
leave
test
stos
sub
sbb
pop
mov
mov
xchg
retf
jg
(bad)
ror
mov
fwait
dec
jmp
mov
mov
mov
lods
scas
mov
mov
(bad)
mov
mov
test
xchg
add
test
cdq
mov
test
ss
xchg
cmps
or
xchg
mov
in
sub
aam
mov
stos
mov
lods
jne
lods
movs
mov
mov
push
aaa
xchg
outs
lods
push
fdivrp
mov
stos
ss
xor
outs
cld
stos
test
mov
xchg
sub
lea
popa
xchg
mov
mov
lea
mov
ins
mov
or
shl
aaa
(bad)
mov
test
xchg
lds
sbb
ret
mov
seto
call
pop
(bad)
jmp
xchg
xchg
int
jg
sar
lods
rol
out
xchg
add
icebp
(bad)
mov
(bad)
rcl
mov
dec
test
lods
mov
call
pop
dec
pop
push
lds
(bad)
scas
ins
mov
mov
test
div
pop
mov
(bad)
stos
adc
(bad)
mov
push
mov
jo
daa
push
mov
lahf
xchg
nop
or
fadd
out
lods
mov
mov
int
mov
mov
ret
test
nop
test
test
xchg
mov
mov
mov
in
sub
retf
scas
call
mov
cwde
xchg
pop
mov
mov
lds
test
(bad)
mov
(bad)
jle
les
(bad)
mov
call
jg
test
in
inc
movs
mov
test
mov
inc
mov
aas
stos
xchg
xchg
test
mov
xchg
mov
fdivrp
scas
xchg
mov
dec
xchg
das
inc
jmp
mov
int3
sub
mov
(bad)
les
mov
lds
outs
mov
mov
jg
leave
mov
sbb
mov
test
mov
mov
lods
jge
mov
ja
mov
fwait
leave
nop
dec
jg
rol
mov
adc
xchg
xchg
fwait
mov
shr
das
or
mov
stos
retf
xchg
jle
retf
fmulp
xchg
xchg
pop
clc
pop
jne
leave
xor
add
cwde
test
arpl
movs
(bad)
out
push
mov
lea
(bad)
jle
add
mov
pop
mov
scas
and
add
mov
movs
xchg
or
mov
pop
sbb
movs
call
mov
jg
outs
test
das
inc
push
inc
das
cld
mov
cdq
adc
jmp
mov
mov
(bad)
das
pop
retf
cmps
mov
add
xchg
mov
(bad)
movs
(bad)
xchg
cdq
mov
cwde
stos
les
xchg
retf
add
in
inc
inc
int3
call
cmp
xor
add
sub
jp
in
movs
js
test
jbe
xchg
xchg
mov
jne
or
dec
(bad)
stos
sbb
fdivr
xchg
xchg
mov
adc
push
jmp
lods
xchg
pop
lea
(bad)
outs
fild
stos
or
int3
and
adc
(bad)
inc
xchg
mov
jle
push
fcomp
call
movs
jne
mov
inc
test
les
inc
popa
sub
mov
jg
retf
xchg
ret
lods
(bad)
pop
mov
cmc
test
sub
adc
lods
pop
imul
cwde
les
aad
mov
pushf
xchg
lods
enter
adc
mov
les
sbb
xchg
int
xchg
lods
movs
pop
(bad)
enter
lods
imul
movs
das
xchg
fimul
out
jle
in
push
rol
movs
mov
cld
(bad)
(bad)
pop
jg
int3
test
add
(bad)
stos
add
cmps
shl
mov
stos
(bad)
xchg
xor
mov
sbb
cdq
xchg
mov
jg
mov
mov
inc
lea
adc
dec
add
retf
jg
popa
mov
(bad)
xchg
retf
pop
movs
int3
jg
xchg
mov
ins
adc
retf
xchg
add
ins
mov
enter
das
xchg
jecxz
outs
mov
cmps
(bad)
xchg
mov
xor
test
pop
nop
int3
adc
fistp
jge
adc
ins
fstp
mov
mov
call
jne
retf
pop
pop
mov
retf
test
je
outs
ins
jl
cmps
xchg
xchg
cdq
and
test
cwde
outs
push
loop
mov
cdq
test
cmp
lock
test
xor
mov
test
sar
sub
stos
(bad)
mov
mov
leave
(bad)
ins
push
fmul
lods
retf
dec
sub
rol
dec
(bad)
imul
mov
test
jo
pop
test
scas
test
les
sbb
xchg
mov
mov
mov
jo
xchg
sbb
xchg
sub
jp
mov
push
test
sbb
xchg
iret
call
and
into
dec
mov
or
or
xor
jb
ds
mov
or
loopne
mov
mov
in
inc
sbb
call
add
sbb
jae
fcom
and
xchg
inc
pusha
je
ja
int
hlt
lock
gs
adc
inc
pop
mov
lock
in
jl
inc
adc
xor
push
(bad)
dec
mov
push
add
cmp
jne
mov
dec
jmp
inc
cmp
frstor
cld
push
mov
shl
add
in
das
mov
inc
or
clc
or
ins
add
push
jne
shr
pop
addr16
inc
loopne
cmps
mov
xor
sbb
hlt
mov
push
adc
(bad)
stos
mov
mov
inc
inc
dec
jne
(bad)
in
mov
js
push
test
add
arpl
std
aaa
xor
xor
xor
ss
cmp
daa
neg
jle
push
inc
inc
inc
inc
dec
dec
and
(bad)
fistp
dec
dec
dec
dec
dec
push
push
push
push
push
push
cwde
pop
pop
(bad)
jg
fstp
pop
push
popa
bound
gs
imul
(bad)
inc
sbb
jno
jae
jne
ja
jns
sub
jp
push
adc
lods
jns
rcr
inc
fs
mov
popa
adc
jge
add
pop
rcl
add
pop
pusha
jp
(bad)
xchg
lods
mov
test
mov
popf
fst
mov
or
pop
int3
aaa
dec
cli
in
in
(bad)
pop
jbe
je
clc
mov
cmp
sub
jb
add
pop
dec
inc
shl
addr16
inc
jo
and
cmp
jg
and
jbe
pop
test
loopne
sub
pop
ss
in
sub
das
xor
ss
gs
test
sub
aam
xor
xor
je
or
jne
ja
add
and
fild
js
pop
cmp
jmp
xchg
adc
cmp
cmp
xchg
mov
cmp
push
or
and
inc
mov
xchg
xlat
cmps
xor
push
push
shl
add
scas
jmp
or
sbb
fmul
sysret
nop
popf
xchg
daa
adc
inc
sub
int
xor
inc
push
jnp
fisttp
nop
pop
adc
or
adc
inc
and
ins
cwde
mov
add
scas
add
add
sbb
mov
jbe
jmp
outs
pushf
sbb
call
mov
adc
jnp
push
or
xchg
push
sub
add
pop
xor
jecxz
adc
and
push
jge
sahf
test
sub
pop
pop
push
push
loopne
xchg
adc
(bad)
add
mov
xor
arpl
fist
aaa
jo
cs
or
pop
push
dec
ins
jae
mov
mov
push
or
push
push
dec
push
pusha
jg
push
sbb
push
dec
(bad)
sub
(bad)
(bad)
push
dec
inc
outs
ins
fs
cmovns
cmp
dec
ins
jo
rol
jmp
call
sub
add
sbb
adc
cld
std
inc
add
outs
aaa
mov
sbb
call
push
call
in
inc
aas
mov
jmp
data16
mov
or
mov
(bad)
call
call
outs
out
jns
in
mov
or
mov
jle
cmp
movs
adc
push
sub
or
(bad)
out
(bad)
pop
fdivr
int3
push
pop
js
adc
sub
inc
aas
dec
mov
sbb
pop
inc
xor
add
nop
add
and
mov
movs
jbe
and
rcr
std
popf
ud0
pop
push
call
out
and
data16
daa
ja
sub
mov
mov
jg
test
xor
or
and
pop
and
mov
daa
mov
mov
push
call
inc
rcl
or
inc
lds
mov
ret
fnstsw
(bad)
sbb
call
add
test
inc
mov
sbb
aaa
jmp
and
arpl
jne
cmp
sar
(bad)
jae
(bad)
sbb
movs
cmp
mov
inc
(bad)
repz
repnz
xchg
ins
sub
xor
jae
cmp
cmp
jmp
xor
mov
ficom
dec
fs
jne
(bad)
sbb
push
call
into
sahf
out
sbb
adc
cmp
ret
inc
dec
retf
sbb
push
pop
push
mov
int
std
pop
mov
nop
or
(bad)
and
(bad)
mov
ins
xor
mov
inc
cmc
sbb
(bad)
int
outs
ja
xchg
inc
out
js
pusha
inc
mov
sar
pop
call
mov
mov
jo
xor
cmps
bound
adc
pop
mov
add
in
mov
scas
jnp
in
push
mov
or
out
call
mov
aaa
mov
ins
in
sub
fbstp
mov
dec
stos
(bad)
call
out
out
(bad)
call
in
les
in
xlat
mov
mov
out
xor
mov
or
pop
and
add
ror
cmp
mov
fldenv
or
(bad)
(bad)
(bad)
mov
mov
repnz
rcr
sar
sbb
mov
add
mov
outs
cs
cwde
sub
call
mov
xchg
arpl
dec
mov
or
push
and
xchg
xor
xor
sbb
(bad)
mov
(bad)
movs
cmp
jne
xchg
dec
shr
in
adc
cmp
mov
test
enter
push
adc
sbb
and
and
and
jns
sub
cmps
nop
xchg
sub
repnz
inc
inc
inc
pushf
and
dec
push
push
iret
adc
and
pusha
push
jo
xchg
or
inc
or
cwde
mov
mov
and
loopne
cmp
xchg
mov
sub
dec
inc
pusha
retf
mov
sub
shl
retf
adc
pop
jo
mov
jg
or
pop
leave
mov
cmp
or
lock
add
sub
jo
jmp
or
mov
inc
jb
or
inc
jne
enter
retf
in
mov
in
sub
xor
xor
call
enter
enter
fcomp
fxch
(bad)
(bad)
mov
mul
loopne
jecxz
jmp
in
fdivr
aas
xchg
and
fwait
inc
or
add
inc
push
inc
pushf
or
ret
mov
adc
stc
leave
dec
adc
sbb
imul
inc
jle
daa
stc
add
mov
jg
in
call
xchg
sub
sub
stc
xor
mov
lds
mov
push
ins
inc
cmp
fidivr
call
cld
pop
or
(bad)
lods
inc
cmp
xlat
fadd
das
call
xchg
aas
push
push
int3
into
sbb
(bad)
(bad)
(bad)
call
dec
inc
mov
push
pop
test
enter
mov
inc
cmp
and
daa
(bad)
retf
into
pop
(bad)
(bad)
(bad)
inc
or
pop
inc
in
mov
mov
addr16
leave
repnz
bound
(bad)
(bad)
jmp
add
inc
sahf
mov
sub
inc
aad
iret
dec
js
inc
(bad)
(bad)
(bad)
jmp
stos
mov
cmp
or
mov
pop
out
sub
imul
(bad)
jmp
cmp
inc
xor
cmp
call
mov
stc
popf
sti
jmp
stos
push
inc
mov
push
(bad)
(bad)
(bad)
call
cld
sar
repnz
test
nop
fild
daa
movs
lahf
nop
inc
pop
stos
clc
scas
adc
(bad)
(bad)
(bad)
inc
(bad)
cli
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
ds
cmp
push
cmps
scas
mov
pop
or
add
dec
in
xchg
cmp
xor
in
cmp
sahf
xchg
pop
cmps
lock
(bad)
(bad)
(bad)
dec
fsub
addr16
repz
mov
sub
and
and
jne
pop
aad
bound
xor
push
ror
(bad)
mov
or
and
add
inc
inc
outs
xor
retf
fwait
pop
pop
shl
or
and
shl
inc
dec
xor
shl
push
pop
push
shl
cmp
dec
cmps
jmp
pushf
pop
mov
jl
sar
cs
or
or
pop
cld
outs
outs
fwait
pop
or
dec
pop
add
xchg
xor
xlat
je
sbb
movups
inc
cmp
(bad)
pop
unpcklps
pop
sahf
in
js
in
sahf
in
mov
shl
in
sahf
shl
fsub
and
mov
xchg
sub
pop
popf
out
cmp
aaa
outs
push
daa
ins
jo
jo
movs
loope
cmps
je
je
js
lock
sbb
aas
addr16
shl
xchg
js
js
dec
sbb
and
pop
jl
mov
aas
paddsb
xor
loope
out
(bad)
jl
jl
nop
inc
sbb
jl
or
or
inc
test
or
push
cmps
add
mov
and
adc
xchg
add
ret
or
rol
xchg
retf
gs
xor
xor
ins
pop
jae
add
addps
cmp
cmp
mov
xchg
popf
fld
add
add
aam
xor
nop
shl
pop
add
and
and
or
or
enter
cmp
bswap
and
inc
repnz
adc
cmp
adc
xor
xor
call
daa
xor
xor
xor
inc
and
add
xor
cmps
imul
jmp
inc
and
add
xor
xor
xor
imul
xor
cmp
mov
imul
and
out
mov
mov
imul
add
ss
fistp
mov
inc
and
mul
or
cmp
aad
jnp
mov
and
add
fmul
cmp
std
fst
data16
xchg
ins
cmp
sub
xor
inc
inc
inc
inc
inc
int
or
dec
shl
inc
inc
inc
cmps
imul
inc
xchg
add
inc
inc
inc
shl
inc
inc
inc
call
inc
inc
call
dec
shr
inc
inc
inc
inc
and
dec
cmps
imul
sub
xor
dec
cmp
cmp
cmp
sbb
psrlq
push
sbb
jnp
jo
mov
jne
cmps
jnp
cmp
aas
inc
inc
inc
push
pop
sbb
jo
sbb
mov
jnp
jnp
jne
inc
add
inc
(bad)
jecxz
call
sbb
(bad)
sbb
mov
ja
in
mov
cmp
js
dec
sar
inc
inc
or
xchg
jecxz
xchg
push
sbb
mov
gs
mov
cmp
imul
inc
or
push
(bad)
int
push
sbb
mov
mov
mov
cmp
inc
test
mov
inc
or
fld
inc
icebp
push
mov
aaa
mov
cmp
jae
add
daa
add
outs
loopne
call
mov
add
adc
imul
imul
imul
cmps
imul
enter
mov
mov
sbb
dec
fs
jb
jg
dec
add
sub
fsubr
call
add
xlat
mov
iret
add
mov
std
push
and
mov
mov
cmp
mov
and
pop
add
cdq
pop
jnp
mov
mov
jo
mov
or
mov
or
add
popf
mov
mov
sbb
sbb
mov
fwait
sbb
scas
punpckhbw
xchg
lahf
mov
jl
mov
pop
or
mov
into
in
dec
fadd
mov
enter
add
mov
js
xchg
je
xchg
push
test
jne
cwde
imul
out
fistp
jmp
inc
pop
mov
jo
fild
mov
out
pop
or
dec
sar
fistp
xor
add
loopne
jo
fucom
xor
rol
leave
and
test
push
push
inc
or
adc
add
or
dec
rcr
je
je
mov
add
mov
repz
jb
gs
xor
cs
ins
ror
stos
(bad)
push
outs
add
dec
add
int
test
add
cmp
add
stc
add
inc
inc
add
adc
mov
and
mov
add
add
add
add
dec
mov
inc
or
push
pop
or
and
sub
sbb
and
push
outs
or
mov
jae
mov
pop
test
jbe
inc
je
push
xor
pop
fs
inc
xor
popa
add
jae
out
jns
or
je
jne
adc
out
jne
dec
imul
pop
jne
pop
mov
or
ins
or
jnp
mov
adc
jo
arpl
out
xor
das
cmp
outs
ror
mov
jae
and
daa
add
and
imul
jmp
adc
sbb
xor
jne
and
mov
inc
outs
cmps
cmp
add
jmp
inc
sub
call
shr
add
inc
pop
mov
mov
ins
imul
imul
sbb
or
xor
jne
adc
in
mov
and
push
sbb
enter
sbb
sub
das
popa
outs
mov
jns
cmp
or
sub
or
or
mov
add
sbb
test
jo
ins
jmp
(bad)
xor
arpl
outs
invd
sbb
jno
adc
push
out
mov
add
pop
dec
bound
gs
xchg
rcr
add
das
add
cmp
fadd
aaa
add
or
or
or
jb
das
dec
neg
add
fcom
imul
add
je
or
aad
aaa
popa
lods
jmp
xlat
jne
jb
mov
out
adc
popa
jb
push
or
jns
or
mov
ins
fstp
adc
jnp
or
je
outs
retf
cmp
popa
jae
xor
push
sbb
aaa
idiv
daa
and
js
pop
ja
adc
xor
inc
mov
mov
xor
jmp
pop
in
pop
outs
dec
pop
inc
and
jmp
jae
jo
outs
aas
das
sbb
push
sub
imul
inc
(bad)
jnp
gs
xchg
mov
push
fs
pop
push
pop
pop
fadd
mov
outs
gs
(bad)
sub
mov
fs
push
pop
ret
jnp
add
es
out
xchg
add
fisttp
cmp
or
jnp
fs
push
dec
popf
jo
pop
mov
pop
inc
iret
out
mov
in
mov
mov
sbb
stc
cmps
ins
ja
xchg
add
sub
push
ins
cwde
add
ja
mov
retf
or
xor
sbb
adc
popa
xlat
mov
sbb
cmp
leave
mov
jo
in
popf
inc
xchg
jns
leave
add
mul
xor
scas
push
out
in
adc
add
clc
js
sbb
cmp
sbb
sub
ins
and
jne
inc
xor
mov
jne
sub
ss
and
(bad)
fld
or
pop
adc
repz
or
(bad)
das
xor
ret
jmp
cmps
addr16
mul
push
bound
jmp
push
psllq
cmps
xchg
inc
pusha
sbb
pop
dec
xchg
dec
pusha
addr16
cmp
rol
and
sbb
fs
jae
add
jl
push
sahf
and
push
das
and
dec
adc
add
pusha
dec
dec
mov
jg
xchg
push
sub
adc
daa
and
je
bound
inc
dec
and
sub
jge
outs
sub
jnp
dec
imul
ds
cmp
dec
jno
push
ret
jge
or
das
pop
rcl
shr
pop
jno
push
das
outs
mov
stc
and
jns
(bad)
xor
jns
dec
or
sysret
fiadd
out
sbb
and
gs
xchg
shl
ja
fwait
push
or
adc
jnp
xor
outs
push
outs
ins
adc
and
jo
adc
lock
adc
sbb
es
cmp
addr16
mov
dec
(bad)
sti
jmp
xchg
adc
pop
mov
dec
fldenv
xchg
sbb
dec
jl
xchg
imul
(bad)
jbe
mov
sbb
sbb
mov
jecxz
rcr
xchg
das
daa
aad
icebp
(bad)
aas
es
aaa
mov
pop
fwait
cmp
jg
sbb
jnp
ja
push
sub
sub
add
cwde
and
call
ror
(bad)
sbb
sahf
add
adc
rcl
add
and
and
dec
leave
or
and
cli
adc
ins
and
sbb
push
push
adc
xchg
push
test
or
aad
push
in
clc
mov
das
inc
lods
adc
ins
gs
push
imul
cdq
sub
xchg
pop
arpl
and
cld
pusha
out
mov
or
jns
and
gs
add
mov
and
jae
test
and
inc
outs
ins
jo
jb
add
sar
dec
jae
and
jo
out
cmp
mov
xor
xchg
push
jae
jmp
ins
sbb
push
fdivr
push
outs
dec
sub
jns
and
or
pop
cmp
push
imul
ins
imul
popa
sub
adc
js
xchg
popa
shl
adc
arpl
fwait
adc
(bad)
sub
add
pop
ins
or
push
adc
jae
sub
mov
pop
outs
ror
outs
adc
or
outs
push
cmp
xor
in
scas
mov
lahf
xchg
push
je
sbb
imul
add
pop
(bad)
imul
ja
mov
xor
push
inc
mov
pop
popa
inc
pop
das
adc
arpl
cmp
retf
push
jbe
inc
pop
lods
shl
jp
mov
xchg
add
je
push
pushf
mov
pop
mov
and
cld
ds
pop
or
xchg
adc
lods
dec
and
push
clc
mov
push
daa
and
jb
inc
lods
addr16
inc
jbe
xor
or
adc
and
outs
pop
stos
out
mov
xchg
or
imul
inc
les
push
cld
arpl
fs
adc
jne
add
push
adc
add
int
jg
pop
inc
sbb
pop
enter
inc
leave
dec
or
(bad)
repnz
mov
rol
fild
push
ficomp
mov
inc
popa
(bad)
in
lds
sub
(bad)
pop
stc
les
sub
mov
div
cmp
dec
gs
into
cmc
sub
pop
bswap
push
add
push
pushf
data16
sub
adc
clc
test
(bad)
cmp
pop
push
inc
or
loop
sbb
sub
push
push
test
adc
adc
add
aas
add
gs
add
sti
sub
dec
data16
pop
sub
inc
outs
js
mov
push
mov
sbb
sub
jo
and
or
jbe
and
arpl
push
jo
jb
mov
je
xor
mov
ins
ss
jae
ins
jmp
inc
add
dec
add
or
dec
iret
test
repnz
sbb
mov
add
pop
je
sbb
and
sub
mov
add
sub
or
adc
test
aaa
sub
add
pop
and
pusha
add
dec
and
sbb
enter
jl
mov
pop
xor
cmp
cs
push
adc
mov
test
imul
mov
mov
daa
inc
clc
sbb
jmp
mov
push
shr
jo
inc
mov
pop
shl
mov
and
xchg
ins
daa
or
sub
movs
jmp
add
je
adc
ja
enter
jb
dec
push
cmp
xor
movs
jmp
and
inc
pop
ret
jae
es
(bad)
outs
test
and
fisub
add
add
pusha
mov
lea
mov
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
mov
inc
add
inc
