add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
in
in
add
in
push
xor
lea
inc
push
lea
inc
push
call
cmp
jne
lea
call
add
add
xor
push
xor
call
lea
call
add
add
xor
lea
inc
push
lea
inc
push
call
test
jne
lea
call
add
push
xor
push
xor
call
lea
call
add
add
add
xor
and
add
lea
call
add
add
ss
lea
call
add
add
aaa
call
lea
call
add
xor
push
xor
call
lea
call
add
add
xor
push
xor
call
lea
call
add
add
xor
push
xor
call
lea
call
add
add
xor
push
xor
call
lea
call
add
add
xor
push
xor
call
lea
call
add
add
xor
lea
inc
push
lea
inc
push
call
cmp
jne
lea
call
add
add
add
ss
lea
call
add
add
ss
lea
call
add
xor
push
xor
call
lea
call
add
add
xor
push
xor
call
lea
call
add
add
xor
lea
inc
push
lea
inc
push
call
test
jne
lea
call
add
push
xor
push
xor
call
lea
call
add
add
xor
lea
inc
push
lea
inc
push
call
test
jne
lea
call
add
push
xor
push
xor
call
lea
call
add
add
xor
lea
inc
push
lea
inc
push
call
cmp
jne
lea
call
add
add
xor
lea
inc
push
lea
inc
push
call
cmp
jne
lea
call
add
add
add
aaa
call
lea
call
add
xor
lea
inc
push
lea
inc
push
call
test
jne
lea
call
add
push
xor
push
xor
call
lea
call
add
add
xor
lea
inc
push
lea
inc
push
call
test
jne
lea
call
add
push
xor
push
xor
call
lea
call
add
add
xor
lea
inc
push
lea
inc
push
call
test
jne
lea
call
add
push
xor
push
xor
call
lea
call
add
add
xor
lea
inc
push
lea
inc
push
call
test
jne
lea
call
add
push
xor
lea
inc
push
lea
inc
push
call
cmp
jne
lea
call
add
add
add
xor
cdq
or
add
add
xor
add
lea
push
call
lea
call
add
add
xor
push
or
add
add
add
add
add
and
push
xor
push
xor
call
lea
call
add
add
xor
push
xor
call
lea
call
add
add
xor
push
xor
call
lea
call
add
add
add
xor
ror
add
add
add
add
push
xor
lea
inc
push
lea
inc
push
call
test
jne
lea
call
add
lea
push
call
lea
call
add
xor
push
xor
call
lea
call
add
add
xor
push
xor
call
lea
call
add
add
xor
push
xor
call
lea
call
add
add
xor
push
xor
call
lea
call
add
add
xor
push
xor
call
lea
call
add
add
xor
lea
inc
push
lea
inc
push
call
test
jne
lea
call
add
push
xor
push
xor
call
lea
call
add
add
xor
push
xor
call
lea
call
add
add
add
ss
lea
call
add
xor
push
xor
call
lea
call
add
add
xor
push
xor
call
lea
call
add
add
xor
push
xor
call
lea
call
add
add
xor
lea
inc
push
lea
inc
push
call
test
jne
lea
call
add
push
xor
lea
inc
push
lea
inc
push
call
test
jne
lea
call
add
push
xor
lea
inc
push
lea
inc
push
call
test
jne
lea
call
add
lea
push
call
lea
call
add
xor
push
xor
call
lea
call
add
add
add
xor
cmps
add
std
adc
sti
(bad)
inc
push
xor
lea
inc
push
lea
inc
push
call
cmp
jne
lea
call
add
add
les
add
xor
lea
inc
push
lea
inc
push
call
test
jne
lea
call
add
push
xor
push
xor
call
lea
call
add
add
xor
push
xor
call
lea
call
add
add
xor
push
xor
call
lea
call
add
add
xor
push
xor
call
lea
call
add
add
xor
push
xor
call
lea
call
add
add
xor
lea
inc
push
lea
inc
push
call
test
jne
lea
call
add
push
xor
push
xor
call
lea
call
add
add
xor
push
xor
call
lea
call
add
add
add
xor
fild
add
lea
call
add
add
xor
mov
sbb
call
add
xor
push
xor
call
lea
call
add
add
xor
lea
inc
push
lea
inc
push
call
test
jne
lea
call
add
push
xor
push
xor
call
lea
call
add
add
add
xor
and
add
lea
call
add
xor
lea
inc
push
lea
inc
push
call
cmp
jne
lea
call
add
add
add
xor
retf
add
add
pop
add
add
lea
push
call
lea
call
add
xor
push
xor
call
lea
call
add
add
xor
push
xor
call
lea
call
add
add
xor
push
xor
call
lea
call
add
add
add
aaa
call
lea
call
add
xor
push
xor
call
lea
call
add
add
xor
lea
inc
push
lea
inc
push
call
cmp
jne
lea
call
add
add
xor
push
xor
call
lea
call
add
add
add
xor
jns
add
lea
call
add
xor
push
xor
call
lea
call
add
add
add
xor
xor
add
lea
call
add
xor
lea
inc
push
lea
inc
push
call
cmp
jne
lea
call
add
add
xor
push
xor
call
lea
call
add
add
xor
push
xor
call
lea
call
add
add
xor
lea
inc
push
lea
inc
push
call
cmp
jne
lea
call
add
add
xor
push
xor
call
lea
call
add
add
add
xor
cmp
add
lea
call
add
xor
push
xor
call
lea
call
add
add
and
push
xor
push
xor
call
lea
call
add
add
xor
lea
inc
push
lea
inc
push
call
cmp
jne
lea
call
add
add
xor
push
xor
call
lea
call
add
add
xor
lea
inc
push
lea
inc
push
call
test
jne
lea
call
add
lea
push
call
lea
call
add
add
xor
sbb
(bad)
dec
add
fsqrt
(bad)
inc
lea
push
call
lea
call
add
xor
push
xor
call
lea
call
add
add
xor
push
xor
call
lea
call
add
add
xor
lea
inc
push
lea
inc
push
call
test
jne
lea
call
add
lea
push
call
lea
call
add
add
mov
lea
mov
cmp
jbe
push
xor
push
xor
call
lea
call
add
add
xor
push
xor
call
lea
call
add
add
xor
push
xor
call
lea
mov
push
push
lea
call
call
mov
lea
inc
push
push
push
mov
mov
push
mov
call
mov
push
push
xor
lea
inc
push
lea
inc
push
call
test
jne
pop
mov
lea
inc
push
call
push
test
je
mov
lea
inc
push
mov
call
test
jne
push
push
push
push
call
dec
cs
add
mov
push
xor
push
xor
call
lea
push
call
pop
push
add
pop
add
mov
mov
call
mov
lea
lea
push
pop
mov
push
push
lea
call
push
push
push
push
push
cs
push
xor
lea
inc
push
lea
inc
push
call
test
jne
lea
sbb
cs
call
add
xor
call
jmp
jmp
lea
add
jmp
add
push
xor
push
xor
call
lea
call
add
add
xor
push
xor
call
lea
call
add
add
xor
push
xor
call
lea
call
add
add
xor
push
xor
call
lea
call
add
add
xor
push
xor
call
lea
call
add
add
add
aaa
call
lea
call
add
add
ss
lea
call
add
add
xor
cli
cli
(bad)
dec
add
dec
sti
(bad)
inc
lea
push
call
lea
call
add
add
xor
mov
xor
call
add
xor
push
xor
call
lea
call
add
add
xor
push
xor
call
lea
call
add
add
and
push
xor
lea
inc
push
lea
inc
push
call
test
jne
lea
call
add
push
xor
lea
inc
push
lea
inc
push
call
cmp
jne
lea
call
add
add
and
lea
push
call
lea
call
add
xor
lea
inc
push
lea
inc
push
call
cmp
jne
lea
call
add
add
xor
push
xor
call
lea
call
add
add
add
xor
pop
stc
(bad)
dec
add
in
(bad)
inc
push
xor
lea
inc
push
lea
inc
push
call
test
jne
lea
call
add
push
xor
lea
inc
push
lea
inc
push
call
test
jne
lea
call
add
lea
push
call
lea
call
add
xor
push
xor
call
lea
call
add
add
xor
push
xor
call
lea
call
add
add
add
ss
lea
call
add
xor
push
xor
call
lea
call
add
add
add
ss
lea
call
add
xor
lea
inc
push
lea
inc
push
call
test
jne
lea
call
add
lea
push
call
lea
call
add
xor
push
xor
call
lea
call
add
add
xor
lea
inc
push
lea
inc
push
call
test
jne
lea
call
add
lea
push
call
lea
call
add
xor
push
xor
call
lea
call
add
add
add
xor
adc
(bad)
dec
add
out
(bad)
inc
push
xor
lea
inc
push
lea
inc
push
call
cmp
jne
lea
call
add
add
add
ss
lea
call
add
xor
push
xor
call
lea
call
add
add
shr
adc
or
loopne
inc
add
mov
rcl
(bad)
out
(bad)
push
rcl
ja
(bad)
push
rcl
add
add
push
lea
mov
call
pop
test
je
push
pop
push
cmp
je
mov
clc
sbb
clc
adc
ror
sub
add
lea
rol
push
pop
clc
sbb
lea
jmp
pop
mov
push
call
push
jge
das
add
push
cli
dec
stos
pushf
sub
mov
in
out
or
dec
icebp
push
add
jbe
mov
call
mul
mov
aaa
pop
pop
jl
sub
jecxz
fmul
shl
ds
add
mov
sbb
loopne
jae
iret
add
mov
sti
inc
shl
xchg
stos
sbb
repnz
div
adc
jns
sar
fiadd
idiv
loope
and
add
xor
pushf
inc
jb
dec
test
in
inc
fist
sub
daa
call
xchg
dec
jo
les
mov
jns
dec
add
xchg
dec
and
jg
iret
ins
sub
adc
xor
aas
mov
adc
xchg
or
inc
mov
ror
pop
push
push
fadd
xchg
and
sbb
push
pop
imul
es
rcr
ins
mov
inc
(bad)
addr16
mov
mov
shl
sub
and
push
int
lods
inc
jns
in
fs
mov
mov
sub
repnz
aad
xor
add
test
icebp
sbb
cmp
or
jae
xchg
fst
in
cli
pop
loopne
sub
fisubr
adc
mov
aam
mov
stc
mov
jns
arpl
jmp
push
inc
mov
sub
jge
cmps
jg
jecxz
mov
or
outs
in
mov
mov
xor
out
pop
mov
dec
lods
mov
xor
push
fcom
mov
test
cwde
jg
loope
sub
cmp
xlat
pop
movs
mov
pop
int
and
retf
hlt
jle
sbb
mov
lods
push
test
push
adc
sub
mov
inc
mov
movs
jp
lahf
shl
es
cmp
push
push
inc
data16
test
xor
cmps
call
sbb
cwde
sbb
mov
in
cmp
dec
xchg
mov
jge
or
adc
adc
fdivr
inc
js
add
mov
jmp
cld
loope
xchg
jmp
stos
in
stos
das
push
out
cmp
retf
popa
into
stc
out
jp
data16
mov
adc
sbb
add
mov
xor
test
pop
mov
mov
(bad)
je
pop
xchg
adc
outs
cli
cld
leave
adc
ds
cmp
or
cmc
daa
fwait
jno
(bad)
scas
xlat
test
sub
lea
xchg
pop
icebp
adc
inc
push
(bad)
mov
sub
mov
inc
and
rol
dec
adc
and
inc
sub
push
call
xchg
std
std
inc
aas
xor
lods
ins
in
std
lods
or
stc
lds
or
xor
(bad)
push
push
out
xchg
xchg
ja
xchg
mov
dec
pop
push
mov
xchg
icebp
test
in
sar
fstp
or
call
sub
sub
adc
pop
in
loopne
clc
xchg
cmp
jne
(bad)
stos
inc
repz
shl
aam
or
cmp
push
addr16
cwde
mov
jno
(bad)
js
loopne
jmp
cmp
outs
jno
daa
mov
mov
jge
inc
je
pop
rol
cmp
push
cdq
sub
adc
pop
cmp
in
(bad)
jge
dec
shl
cmps
mov
jb
pushf
in
pop
adc
aad
jne
sub
mov
mov
add
pop
imul
lea
pushf
push
ds
pop
push
fist
mov
dec
xor
mul
arpl
sub
out
fnstsw
sub
fisttp
add
mov
ret
ficom
add
imul
mov
retf
inc
out
add
mov
ss
and
jp
cmp
mov
cmc
sub
(bad)
cmp
mov
mov
xchg
shl
pusha
test
repnz
les
test
mov
pop
(bad)
jae
jg
lods
dec
inc
enter
mov
ror
daa
adc
cwde
mov
mov
icebp
sub
stos
mov
retf
and
sub
add
xor
test
(bad)
retf
retf
sbb
mov
mov
gs
icebp
pusha
lods
xor
int3
cmps
xor
movs
(bad)
imul
lds
dec
mov
mov
push
add
stos
jno
and
jo
jmp
push
in
push
cs
push
leave
enter
mov
int
xchg
loop
mov
pop
mov
das
adc
mov
pop
or
jle
retf
jmp
and
inc
ins
adc
xchg
into
(bad)
jp
add
ja
or
xchg
retf
inc
jae
push
cmc
loopne
add
dec
or
pop
mov
push
mov
sub
test
stos
inc
jbe
leave
jae
popa
out
pop
inc
push
inc
loop
sub
outs
sub
push
adc
mov
add
lods
(bad)
xchg
rol
retf
push
add
adc
adc
mov
or
jnp
pop
jb
mov
xchg
xor
mov
inc
push
mov
lea
mov
mov
imul
ficom
jmp
xor
cwde
clc
cwde
inc
xchg
jmp
mul
test
and
jnp
mov
and
adc
pushf
movs
jns
sti
aaa
dec
inc
test
xor
xor
sub
sub
jb
scas
sbb
test
(bad)
jns
test
std
mov
dec
shl
outs
ins
fwait
push
mov
jns
std
cmp
cli
cli
bound
cmps
arpl
xchg
pop
sub
cmpxchg8b
retf
es
dec
mov
pusha
jmp
inc
push
inc
or
mov
mov
bound
xchg
jmp
dec
not
daa
arpl
pop
lods
loopne
push
mov
in
movs
popf
sbb
adc
mov
xchg
add
push
in
mov
push
repnz
outs
xchg
sar
adc
nop
movs
and
cmps
push
dec
sbb
(bad)
or
xchg
ret
jl
scas
pop
xrelease
lds
imul
jno
dec
ds
lock
and
mov
jmp
cwde
sahf
xchg
cmc
cmp
(bad)
mov
adc
xor
adc
ja
add
das
xchg
push
out
pop
push
sbb
mov
popa
cli
aaa
inc
jno
out
popa
cli
xchg
ins
loop
pop
dec
and
cmp
std
test
out
(bad)
idiv
and
in
xor
es
add
cwde
arpl
scas
js
push
les
sahf
xor
into
xchg
int
mul
aam
mov
sub
and
and
mov
xor
inc
shl
call
adc
push
dec
lea
shl
sbb
sti
mov
rol
jg
scas
pop
fchs
push
push
sbb
or
int3
ret
cmc
mul
or
pop
mov
int
lea
ja
arpl
inc
sbb
mov
mov
mov
jnp
iret
sbb
push
or
jns
aas
push
test
fstp
scas
adc
enter
sub
add
mov
out
arpl
outs
pop
popf
hlt
scas
sti
test
std
xor
mov
jle
pop
push
sti
ret
add
in
jae
les
pop
mov
xchg
in
(bad)
lock
mov
add
adc
adc
inc
jns
iret
inc
sub
test
out
daa
add
adc
mov
sbb
mov
mov
push
mov
add
dec
dec
cdq
mov
mov
push
xchg
fsubr
fisubr
or
push
(bad)
dec
loop
frstor
push
fiadd
lahf
add
cmp
mov
repz
push
add
sbb
in
cmp
pop
sti
pushf
mov
sub
mov
je
adc
movs
mov
pop
xchg
xor
aas
add
push
sbb
nop
stc
dec
push
mov
adc
test
fcmovne
add
mov
loop
adc
push
dec
ss
sub
fs
push
cdq
mov
cmp
jge
les
outs
hlt
mov
sub
sti
mov
adc
sbb
pop
(bad)
stc
ins
es
or
in
sub
test
inc
sti
push
fidiv
aas
mov
cwde
jmp
sahf
push
jnp
loopne
daa
jg
push
into
cld
test
xchg
dec
in
ds
(bad)
push
cs
xchg
xor
and
pop
pop
imul
mov
push
cmp
jne
pop
dec
cdq
jp
out
pop
adc
jmp
inc
ins
paddb
clc
js
dec
leave
movs
mov
out
push
out
sub
fst
test
push
jno
ror
gs
add
rcr
push
push
pop
sbb
add
ds
sub
das
push
sti
gs
jle
loope
sub
outs
test
call
inc
out
test
inc
xor
iret
push
shl
inc
sbb
imul
rcl
aaa
out
(bad)
stos
xor
scas
adc
cmp
sub
pop
push
sub
mov
xchg
fiadd
es
ja
fwait
sbb
movs
jp
fs
mov
ins
fcomp
rcl
jg
call
mov
cmp
jb
jp
dec
jp
push
xor
sti
arpl
mov
add
bound
pop
loope
enter
cmc
xor
mov
dec
hlt
and
push
mov
out
fs
pop
mov
rol
fisttp
in
in
xor
cmps
(bad)
push
xor
jno
dec
push
mov
rol
jmp
dec
out
mov
xchg
mov
jne
and
adc
cmp
in
mov
adc
clc
pusha
fnstenv
sub
sub
sub
or
mov
in
retf
and
fldl2e
gs
add
idiv
inc
mov
pop
outs
jecxz
unpckhpd
mov
cmp
push
inc
xor
adc
sbb
xor
pop
dec
js
cmp
adc
push
imul
sub
mov
push
push
xchg
fadd
mov
cmp
add
add
nop
or
pop
dec
mov
or
fdivr
mov
cmp
and
jne
jae
and
pop
adc
mov
sbb
jmp
xlat
adc
jne
mov
jns
or
call
aas
fcom
jmp
adc
xor
int
mov
or
(bad)
rcr
ret
jb
or
ror
js
cmc
mov
cmc
shl
cwde
adc
mov
jmp
xor
movzx
sbb
pop
call
arpl
adc
aas
or
sub
scas
xchg
int3
(bad)
data16
cmp
sar
pop
retf
arpl
fsub
in
cmp
std
imul
xchg
fistp
lds
jb
gs
fs
aas
jecxz
out
sub
cmps
jb
ja
sub
mov
in
dec
sub
outs
jnp
cld
sub
cmps
das
outs
test
popf
mov
dec
lock
mov
fwait
mov
adc
jb
jo
sub
xchg
pushf
pop
dec
repnz
and
push
ds
lock
out
stc
mov
retf
loopne
je
push
fwait
cmps
pop
cld
retf
mov
and
aam
jmp
out
stos
push
xchg
out
inc
rcr
dec
add
call
and
mov
mov
jno
hlt
dec
sti
xchg
mov
cmovg
leave
imul
loope
in
add
sahf
sbb
dec
sbb
push
xchg
popa
outs
jge
out
sub
or
add
sbb
aad
daa
pop
push
jg
pop
mov
add
dec
or
imul
push
std
mov
fucom
sbb
sbb
sbb
mov
inc
pop
mov
lea
pop
ret
ret
jns
mov
cmp
sahf
iret
cmp
scas
jne
add
mov
iret
xor
pop
add
dec
scas
iret
cli
popf
mov
das
jge
(bad)
fld
pop
(bad)
jnp
xchg
aas
leave
dec
cmp
je
inc
stos
xor
out
adc
fwait
int3
jg
cmp
jmp
js
jmp
jp
scas
xchg
and
mov
xchg
push
dec
lods
dec
pop
jo
inc
and
popf
cli
push
int3
leave
mov
lock
cmps
je
pop
loop
xchg
out
stc
ja
aaa
and
ret
jmp
ins
adc
pop
lahf
push
fwait
dec
push
sahf
xor
leave
adc
inc
mov
mov
add
xor
jno
test
mov
sbb
xor
mov
pop
xchg
scas
mov
cmp
add
pop
mov
dec
sub
rcl
(bad)
je
in
rcr
out
push
repz
fs
mov
adc
adc
inc
out
mov
lahf
clc
mov
clc
mov
adc
xchg
sbb
addr16
sub
dec
aad
(bad)
mov
sbb
jmp
outs
in
in
ins
adc
scas
popf
movs
cmp
rcl
repz
jmp
xchg
push
mov
loop
adc
add
fs
push
movs
outs
push
mov
xor
xchg
stc
xchg
jmp
push
push
loopne
dec
or
add
pop
retf
push
adc
cmp
push
mov
pop
and
xor
push
jge
ror
cmp
test
call
mov
fs
pop
jno
pop
pushf
cmps
(bad)
jmp
xlat
(bad)
retf
mov
push
push
cmp
sbb
mov
mov
xchg
test
stos
or
xor
pmaxsw
inc
icebp
cmc
sub
dec
sub
outs
or
sbb
arpl
cld
pop
inc
mov
add
mov
jecxz
mov
das
cdq
fs
iret
pop
add
or
int3
mov
jo
push
shl
xor
cmps
jle
clc
div
xor
test
ficom
xor
inc
push
lea
enter
je
cmp
add
pop
dec
repz
sti
scas
jp
dec
call
cmps
xlat
push
ror
pop
pushf
jns
(bad)
loopne
loope
xor
loope
je
sbb
movs
setbe
imul
pop
add
push
mov
cmps
retf
push
xor
pop
fld
xor
sbb
xor
add
mov
push
dec
test
daa
ins
call
sub
jbe
jge
dec
push
pusha
mov
dec
mov
dec
jg
mov
mov
clc
mov
push
mov
movs
sub
lods
adc
out
cs
pop
repnz
cmp
xchg
fidiv
(bad)
fcom
push
add
cmp
mov
int3
xlat
xchg
and
sbb
sub
push
je
xor
mov
loope
les
xchg
cmps
sub
leave
xor
cmp
jmp
mov
ja
adc
addr16
hlt
sti
cwde
cmp
call
or
mov
mov
movs
jo
inc
movs
or
push
stos
jae
inc
inc
jecxz
mov
xor
mov
and
cdq
cmp
lods
pop
cld
mov
sub
dec
cmps
sub
movs
ja
daa
(bad)
shl
jno
jp
movs
pop
sahf
push
and
gs
(bad)
cmps
push
lea
push
hlt
and
mov
inc
push
pop
fimul
gs
xor
call
out
retf
jb
add
cwde
int
not
xlat
loop
sbb
fbld
xor
adc
inc
sub
loop
pop
xor
cmp
xchg
shr
xchg
sar
inc
pop
das
push
add
sbb
ins
cmp
mov
sar
push
inc
mov
xor
iret
fstp
sub
and
dec
dec
sub
movs
cmp
retf
ja
inc
inc
and
mov
push
cmc
add
pop
repz
add
in
and
test
aas
adc
into
or
or
dec
push
adc
sbb
cs
outs
push
pusha
inc
scas
jne
inc
retf
xchg
ins
std
add
or
xor
stos
outs
jno
push
add
adc
cmp
invd
in
stos
movs
push
push
popa
mov
imul
adc
inc
adc
sbb
mov
je
ds
jge
outs
inc
call
jmp
pop
ret
lock
lahf
push
inc
pop
sahf
iret
jne
retf
pop
test
retf
mov
test
leave
dec
adc
pop
and
(bad)
push
jmp
outs
xlat
ret
xchg
cmc
cmp
aam
jp
xchg
inc
int
shl
leave
fnstsw
addr16
and
or
sar
imul
xchg
shr
inc
jnp
clc
je
pop
loop
ds
setns
test
mov
ins
mov
jmp
sbb
call
aad
repz
or
ret
test
sbb
push
sub
dec
jmp
or
in
mov
xchg
lods
pop
push
retf
xor
aad
sbb
leave
imul
ss
(bad)
sub
add
shl
sub
into
bound
dec
ss
jo
or
cmp
push
pushf
out
and
pop
in
outs
cmc
push
and
sbb
out
mov
mov
jnp
fcomp
fs
or
push
imul
out
nop
mov
shr
inc
adc
and
xor
lods
and
das
jge
pop
xchg
call
push
pusha
inc
mov
loopne
cmp
jmp
adc
cmp
xchg
pop
repz
cwde
push
xor
cmp
mov
lods
shr
pushf
into
dec
pushf
daa
add
ins
in
scas
xchg
nop
movs
cmp
movs
adc
push
int
cmp
and
cmps
dec
jl
or
adc
mov
pusha
(bad)
test
leave
push
push
shl
popa
rol
cmps
jmp
add
sbb
dec
jb
cdq
lea
push
or
lock
xchg
lods
xor
dec
and
outs
push
jmp
adc
loopne
jge
pop
push
add
mov
out
push
(bad)
call
mov
stos
daa
and
test
outs
and
sub
mov
and
mov
inc
inc
movs
sahf
in
add
or
xchg
arpl
sub
xchg
mov
lods
ss
aam
sbb
popa
push
inc
shl
cwde
ret
xchg
(bad)
imul
jmp
jmp
fdivrp
cld
sbb
inc
shl
ror
retf
imul
test
pop
push
int3
inc
repz
scas
push
xor
cs
inc
fidivr
push
test
inc
dec
scas
retf
icebp
push
add
xor
stos
in
mov
aaa
dec
or
movs
add
add
jb
cmp
cwde
daa
pop
mov
pop
test
jae
mov
or
jb
mov
iret
lahf
and
aaa
out
dec
je
inc
pop
and
fisubr
add
inc
daa
and
push
jg
adc
mov
push
xor
jne
imul
outs
es
inc
xchg
jecxz
sbb
add
lds
cmp
in
pusha
mov
addr16
out
lods
scas
loop
dec
pop
outs
cmps
sti
nop
inc
ror
rol
jnp
and
push
mov
mov
popf
mov
(bad)
retf
call
neg
lds
xchg
(bad)
jecxz
mov
rcl
mov
add
loope
inc
jmp
imul
into
das
stos
sbb
fist
xchg
(bad)
xchg
mov
into
mov
xchg
add
test
xor
fadd
mov
popf
mov
nop
es
fldenv
mov
pop
movs
push
lods
cmp
jmp
add
mov
pop
test
push
push
inc
push
mov
add
and
stc
div
xlat
inc
mov
or
and
push
sub
xor
in
inc
lock
lahf
sbb
pop
jmp
add
shr
jne
mov
or
out
stos
or
aam
jnp
int
and
mov
ins
fsubp
jmp
fwait
inc
push
ja
in
pop
and
dec
inc
fidivr
imul
mov
sbb
adc
jb
popf
fsub
bswap
out
inc
addr16
push
jae
cmp
mov
fbld
xor
mov
ret
pop
jbe
sti
out
cmp
aam
cli
mov
mov
leave
xor
adc
sub
loope
lods
jns
inc
out
aad
inc
or
push
std
(bad)
adc
jecxz
and
das
xor
les
lods
and
inc
push
push
mov
push
xchg
sub
std
fisubr
xchg
repz
adc
dec
ins
sub
lods
(bad)
sbb
out
mov
xor
dec
call
rol
sbb
test
cmp
lds
jbe
xchg
dec
in
push
sbb
mov
(bad)
js
(bad)
and
xor
pop
xor
cdq
fistp
ret
arpl
pop
bswap
movs
mov
jb
ficomp
mov
mov
sbb
loopne
jecxz
arpl
jg
sub
or
mov
adc
or
inc
popa
imul
adc
shl
ret
sub
ins
xor
js
jp
and
shl
addr16
pusha
out
call
jbe
outs
or
sbb
nop
xchg
inc
or
retf
lock
icebp
sbb
cmps
js
push
add
inc
neg
mov
jnp
push
lock
fld
js
jp
mov
lock
push
retf
jmp
mov
aas
js
inc
(bad)
fstp
and
dec
sbb
and
loop
mov
js
push
sahf
cmp
sar
xor
jle
shr
test
pop
pop
ror
xor
sbb
or
bound
in
out
xchg
mov
fwait
jb
jl
mov
push
test
push
retf
add
add
mov
xchg
(bad)
cmp
mov
dec
xor
add
hlt
sbb
mov
sbb
push
int
xchg
dec
ja
mov
pop
movs
sub
jne
in
popf
test
dec
test
cmps
cmc
fimul
mov
jle
xlat
nop
mov
scas
shr
push
movs
rep
and
loopne
mov
popa
rol
push
dec
xchg
inc
stos
es
je
rep
xor
stc
fidivr
(bad)
mov
rcl
cmc
push
inc
into
add
mov
int3
mov
dec
pop
rcl
retf
adc
lahf
cmp
mov
sbb
(bad)
pushf
pop
mov
lods
cmp
dec
mov
sahf
jb
fcmovne
inc
and
out
bnd
int3
pushf
scas
pop
mov
loope
jmp
jmp
mov
add
hlt
cs
adc
fs
das
mov
mov
mov
jb
repz
and
jge
nop
mov
test
and
out
jb
push
xor
cmp
test
xchg
push
scas
mov
mov
sbb
call
sbb
loopne
mov
push
popa
fsubr
ss
montmul
cmps
cmp
call
popa
lock
dec
nop
arpl
lds
mov
rcr
xor
add
xchg
fisttp
add
push
xor
outs
add
mov
mov
xchg
fisubr
(bad)
jno
add
adc
jbe
fstp
xchg
ins
mov
mov
out
jle
xor
cmp
pop
mov
into
fisttp
inc
jne
sbb
mov
sub
aas
push
out
pop
pop
or
jecxz
rcl
test
and
mov
shr
rcl
jb
push
popf
xchg
push
dec
fiadd
aad
sbb
pop
mov
lahf
mov
add
jmp
pop
aas
cli
bound
cmp
pop
jge
int3
scas
rcr
aaa
xchg
jne
enter
jp
aas
mov
adc
push
setnp
popa
jne
add
push
fbld
xchg
pcmpgtw
push
xor
or
mov
cmp
pop
in
gs
ja
cwde
ss
out
outs
sub
pop
bound
add
addr16
adc
inc
out
sbb
ins
loop
adc
call
cmc
push
mov
stos
push
add
jns
dec
xchg
mov
xchg
xchg
push
push
in
mov
or
es
add
in
mov
repz
add
and
lods
pushf
cmps
xchg
ror
jae
div
mov
imul
jo
pop
inc
xchg
shr
icebp
push
in
and
add
js
jae
and
jmp
shl
lock
rol
cmp
xchg
pop
cmp
xchg
ficomp
pop
add
jge
mov
sbb
les
mov
les
mov
mov
ror
mov
inc
dec
adc
mov
mov
and
mov
mov
das
mov
rcl
lods
inc
js
inc
mov
stc
cmps
sti
jmp
cmp
jo
les
or
sbb
ds
xlat
cli
and
pop
(bad)
mov
mov
pop
xor
scas
dec
dec
pop
aam
push
rcl
adc
imul
mov
test
out
xchg
addr16
in
hlt
adc
sbb
stc
sbb
pop
fmulp
adc
or
scas
rcr
popf
jne
sub
sub
pop
fsubp
sbb
mov
dec
mov
icebp
repz
clc
popf
into
jg
dec
add
dec
ins
push
sti
shl
pop
cmc
or
lods
jns
push
mov
mov
rcr
or
add
rcl
push
pop
pop
fld
fldcw
mov
repz
data16
cmp
mov
ja
out
sbb
xor
and
or
fimul
fs
mov
push
call
std
rcl
mov
adc
aas
mov
inc
inc
test
fcom
xchg
mov
mov
test
retf
pusha
xchg
hlt
or
test
inc
cmp
sbb
push
sbb
xchg
cmp
inc
imul
inc
in
inc
retf
jne
mov
mov
bound
xor
jl
int
scas
fsubr
mov
pop
test
push
clc
and
(bad)
ds
add
lea
jae
out
xchg
pop
mov
inc
xor
xor
fidiv
mov
and
inc
ror
push
inc
jo
popf
std
push
and
xor
add
push
icebp
mov
add
out
pop
cmp
inc
add
mov
mov
mov
retf
out
add
xchg
arpl
(bad)
movs
push
xor
mov
pop
adc
(bad)
retf
call
inc
pop
sub
repnz
loop
dec
pushf
not
fcomp
icebp
fiadd
ret
imul
mul
stos
das
shl
fild
jns
into
sbb
xchg
retf
fdiv
add
cwde
or
xor
jo
icebp
and
aam
xchg
jne
xchg
xchg
mov
xlat
lock
mov
sub
and
push
sbb
inc
xchg
mov
inc
lods
ins
mov
mov
or
jge
sbb
repnz
xchg
or
js
aad
es
movs
repnz
add
test
into
cmp
jb
out
and
adc
or
sub
popf
mov
push
int3
add
retf
inc
cmps
add
mov
call
cmp
inc
jp
cmp
sahf
xchg
push
ds
cmp
call
adc
lds
mov
jp
ja
lods
in
adc
or
cmp
test
mov
jg
rcr
cmc
(bad)
add
xor
sbb
rcr
cmp
xchg
out
stos
push
or
fst
aad
push
jo
repz
sti
dec
mov
adc
fldenv
or
ds
mov
push
shr
into
leave
mov
not
gs
jp
jnp
les
out
mov
fdivr
sbb
push
jl
jmp
and
repz
enter
aam
xor
dec
pop
mov
mov
add
xchg
xchg
in
pushf
adc
fbld
fst
jb
push
in
sub
adc
pusha
shr
rcl
call
pop
or
jge
xlat
push
sub
daa
mov
retf
cmp
mov
into
ja
cmp
jb
in
repz
retf
mov
loope
pop
loop
cdq
xor
out
xchg
pop
mov
push
sbb
add
dec
(bad)
push
xchg
loopne
mov
pop
or
std
inc
fisubr
addr16
icebp
int3
jae
out
sub
test
push
inc
push
mov
mov
mov
out
pop
int3
movs
push
cwde
add
add
mov
pop
scas
or
mov
cmp
cmp
push
(bad)
xchg
cmp
jb
push
push
mov
ss
adc
outs
push
inc
dec
lock
fwait
dec
adc
loope
pop
repnz
test
movs
mov
inc
jae
test
cmp
jo
ret
ror
mov
pushf
adc
fwait
xchg
or
jnp
data16
sbb
aas
lock
test
push
cmp
out
pop
and
sub
pop
pop
enter
or
inc
or
stos
jmp
iret
ret
dec
shl
outs
dec
fwait
inc
fidivr
xlat
nop
or
cld
inc
cmp
imul
add
mov
sub
pop
jno
addr16
lods
aas
mov
ja
(bad)
lahf
stos
clc
and
jmp
mov
shl
xchg
hlt
xor
add
sbb
sub
into
das
call
aas
inc
mov
jb
cli
mov
scas
ss
imul
xchg
icebp
mul
icebp
jmp
jnp
push
daa
jmp
js
cmp
rcr
push
sbb
mov
out
adc
cmp
mov
sbb
inc
inc
push
jne
dec
jp
or
popa
mov
mov
lods
dec
mov
or
imul
push
outs
pop
or
sub
mov
jbe
ret
fld
mov
outs
adc
sbb
into
test
mov
cmp
les
sar
lods
adc
in
pop
(bad)
adc
in
mov
fld
neg
push
push
loop
(bad)
sub
aad
retf
cmp
rcr
pop
es
outs
and
xchg
jns
jecxz
pushf
enter
pop
outs
iret
pop
into
mov
xchg
js
push
or
test
aam
pop
(bad)
ins
xor
dec
and
jae
inc
fs
add
dec
dec
push
sar
push
sub
jecxz
pop
call
push
push
jle
int
mov
push
ja
xchg
mov
(bad)
in
test
pop
push
cmp
mov
cld
and
scas
inc
ret
stc
jle
add
test
sbb
mov
mov
mov
sbb
outs
dec
add
push
scas
in
in
gs
mov
in
mov
mov
pop
cmp
aam
sub
pop
stc
sub
(bad)
cmp
cmp
retf
mov
pop
cmp
ds
xchg
lahf
inc
and
(bad)
or
mov
pop
push
test
mov
icebp
xor
and
push
mov
jge
pop
cs
stos
dec
faddp
enter
ret
(bad)
int
outs
xchg
xor
mov
pop
ret
xchg
push
in
aad
jle
ror
push
das
fwait
cmps
out
push
push
outs
cwde
sbb
jle
pushf
lds
aas
(bad)
out
xor
or
lods
inc
loope
loopne
scas
fstp
je
xchg
dec
and
cmp
test
cld
dec
fs
mov
and
push
adc
inc
inc
push
scas
lahf
mov
shl
pop
ret
test
add
js
sub
cmp
out
inc
sub
repz
push
ins
and
loope
sbb
fadd
bound
xchg
lds
and
cmp
pop
mov
in
jnp
lahf
sbb
test
cmp
cmp
nop
pop
in
cmp
pop
dec
out
pop
push
movs
(bad)
scas
pop
shr
xchg
mov
pusha
inc
pusha
imul
cmp
sbb
imul
gs
sahf
push
add
test
pop
ror
fidivr
rcr
mov
adc
inc
ficomp
sahf
(bad)
and
(bad)
cli
inc
adc
pusha
push
dec
xor
jno
adc
(bad)
inc
dec
add
lock
dec
add
ds
inc
dec
bound
pop
icebp
test
add
stos
push
add
ds
jp
or
inc
mov
inc
and
xchg
shl
jo
(bad)
and
push
pop
popa
imul
mov
jno
xchg
ins
mov
jns
xchg
cmp
or
sti
popa
jmp
outs
retf
pop
into
xor
sar
jo
retf
push
fsubr
leave
or
cmp
mov
stos
(bad)
into
push
mov
je
sub
lahf
dec
mov
addr16
movs
pushf
in
leave
in
pop
cmp
loop
loope
nop
test
fwait
pushf
cmp
ffree
(bad)
pop
int3
dec
(bad)
pmuludq
ins
shl
mov
popa
clc
mov
lock
ins
sti
mov
or
adc
movs
outs
xor
dec
sbb
rcr
add
scas
sahf
mov
xor
xchg
gs
jmp
in
mov
xchg
(bad)
test
cs
stos
xlat
call
push
(bad)
ja
out
jmp
xor
mov
outs
int3
sar
jge
das
dec
mov
push
lods
ret
pop
or
fwait
cs
(bad)
mov
std
fs
and
nop
sub
jo
dec
enter
je
iret
outs
or
adc
push
mov
aad
pushf
mov
push
sbb
inc
mov
stos
loopne
ins
bound
clc
cmp
and
outs
mov
lock
cli
cmp
sar
popa
dec
scas
pusha
(bad)
stc
loope
sub
clc
test
ror
inc
and
push
(bad)
sub
xor
mov
inc
xlat
in
jmp
adc
or
popf
adc
in
cmp
sar
xor
imul
das
jg
adc
dec
inc
xlat
mov
(bad)
stc
iret
xchg
stos
sub
and
cmp
stos
push
mov
int3
mov
punpcklbw
pop
popf
mov
jmp
sub
popa
push
add
test
and
int
adc
mov
shr
sbb
out
inc
leave
jae
bnd
fisttp
in
inc
xchg
or
or
dec
retf
add
stos
movs
push
aad
popa
add
xor
fldcw
jle
into
outs
jno
repnz
bnd
je
inc
aam
dec
or
int3
repz
xor
fist
(bad)
outs
xchg
popf
jle
adc
mov
mov
bound
and
dec
xchg
mov
add
sub
sbb
les
shr
retf
arpl
inc
and
ds
dec
adc
jmp
ficomp
rdmsr
xchg
dec
pop
mov
leavew
(bad)
(bad)
test
mov
cmps
pop
sbb
sub
std
inc
add
lods
cli
xchg
dec
push
jge
fwait
iret
dec
(bad)
jg
inc
push
outs
cmp
ds
mov
out
jl
mov
loope
xor
inc
aam
jecxz
pop
add
inc
enter
mov
(bad)
jns
mov
sbb
adc
daa
test
or
cmp
xor
jbe
sbb
daa
lods
test
mov
sbb
gs
or
dec
adc
xchg
das
jl
ja
mov
sub
stos
pop
sbb
add
imul
xlat
xchg
xor
(bad)
stos
gs
(bad)
out
sbb
add
xor
enter
xlat
jb
push
retf
jae
call
sub
fisttp
push
aas
mov
jns
xor
and
lods
jl
jg
sbb
daa
out
mov
mov
(bad)
fistp
jnp
cwde
jne
push
inc
in
jp
pop
shl
(bad)
jns
icebp
dec
dec
(bad)
jmp
jmp
or
add
add
fsub
sti
mov
mov
dec
popf
fdiv
shl
call
sub
call
xor
sbb
push
aas
mov
dec
mov
jmp
fs
and
mov
frstor
mov
loopne
sbb
fstp
cmp
lea
jle
(bad)
je
(bad)
adc
add
fnsave
cli
punpcklwd
mov
sub
inc
fisubr
push
neg
rcr
add
sbb
jb
sbb
outs
cmp
mov
xchg
(bad)
sub
mov
sbb
inc
je
cmp
rcl
pop
add
cmp
scas
lods
imul
mov
into
test
bound
jae
xchg
addr16
ffreep
test
sub
cdq
das
push
mov
scas
into
dec
xchg
jno
lods
outs
(bad)
mov
mov
xchg
mov
mov
sub
sbb
sub
jmp
outs
fisttp
in
pop
rcr
push
inc
inc
repnz
inc
cli
jbe
dec
cld
and
bound
(bad)
lock
test
mov
mov
dec
mov
dec
mov
cmps
xchg
mov
xor
leave
jp
cmp
(bad)
in
jg
sbb
cs
shl
xchg
jmp
aam
sub
push
mov
in
nop
or
dec
ret
mov
sbb
nop
out
je
mov
loopne
mov
adc
mov
jmp
pushf
sub
sub
or
clc
lods
idiv
pop
(bad)
icebp
add
and
pop
push
ds
push
mov
adc
repz
imul
popf
sub
and
ror
icebp
ffree
cli
fadd
push
and
or
movs
fisttp
push
mov
xlat
pop
mov
ror
(bad)
push
inc
or
pop
jmp
sbb
or
lock
push
fdiv
push
mov
addr16
out
ret
dec
pop
aas
(bad)
repnz
inc
(bad)
mov
int3
dec
lods
fs
xchg
cmps
ffree
inc
mov
ret
push
stos
cmp
adc
jo
ficomp
lock
es
inc
sub
sub
pop
pop
dec
push
cmps
mov
dec
jo
fldpi
call
aas
inc
dec
xchg
in
das
and
cs
ficomp
xchg
loop
pop
mov
mov
cmpxchg
push
ins
push
sbb
jl
sub
xor
sub
jns
int3
sub
icebp
pop
lahf
dec
or
cmp
loope
add
pop
ss
jmp
call
add
jp
push
rcl
int
call
mov
aad
cmc
dec
imul
repnz
(bad)
inc
xor
inc
ret
out
mov
cmp
ins
jmp
add
mov
inc
dec
ss
add
add
or
inc
in
jg
dec
mov
mov
outs
aad
xchg
push
pop
mov
cwde
sub
pop
call
adc
fdiv
push
and
and
imul
mov
jle
mov
mov
rol
jns
fdiv
scas
ja
mov
iret
adc
int
adc
idiv
xor
and
pop
jl
(bad)
ds
pop
ins
and
inc
fild
movs
and
push
jle
mov
mov
ins
std
cmp
(bad)
xchg
sbb
nop
mov
ins
lock
neg
cld
sbb
jmp
fst
sbb
stos
jmp
scas
cld
in
stos
call
mov
and
lock
cli
fwait
outs
add
mov
sub
adc
inc
icebp
ret
int
pushf
mov
mov
ins
retf
popa
repz
ret
stos
shl
push
shr
lea
xlat
xor
call
stos
xor
push
js
mov
(bad)
ins
sbb
cmp
fisubr
inc
sub
push
mov
cmc
mov
mov
cmp
aaa
pop
xchg
push
sti
(bad)
cmp
mov
ss
fs
pop
mov
and
imul
movs
jle
shr
inc
call
ja
mov
mov
jle
mov
sub
out
mov
sbb
sbb
mov
pop
sub
push
ror
mov
out
aad
es
pop
pusha
jecxz
pop
cs
push
fidivr
push
lock
dec
mov
and
ins
and
mov
in
inc
jp
or
sub
jg
lods
lock
add
add
mov
sti
test
cmp
inc
inc
xchg
out
in
dec
jmp
mov
pop
ins
sub
nop
sub
and
in
popf
into
in
sar
in
loopne
cmps
adc
repz
mov
(bad)
ret
scas
aas
dec
push
jb
popa
jge
or
xor
sbb
cmp
adc
dec
outs
jp
inc
outs
push
mov
aas
and
ja
push
jmp
(bad)
not
enter
std
dec
retf
popf
das
adc
pushf
cmp
or
jae
mov
xchg
push
push
(bad)
int3
mov
push
outs
imul
sbb
int
fist
mov
repnz
xchg
add
push
push
xor
cmps
out
mov
cwde
mov
sbb
xchg
test
push
fidivr
daa
add
ins
mov
fnstcw
imul
imul
jmp
stos
movs
pop
rol
add
mov
out
sbb
fdiv
jo
add
and
movs
adc
jne
push
je
and
dec
add
daa
iret
aas
adc
les
rol
stc
xor
mov
push
dec
arpl
mov
test
test
in
add
and
rcr
in
jmp
xchg
icebp
gs
mov
ds
jecxz
push
xor
sub
adc
push
ret
ret
xchg
pop
sub
pop
ret
jo
nop
out
jb
xchg
jb
xor
in
popf
sar
loop
push
in
lea
aad
repnz
xor
lds
add
mov
sbb
dec
xchg
dec
push
xchg
fst
mov
cmc
sahf
nop
jl
ret
dec
out
test
dec
std
dec
sbb
sub
mov
add
cmp
stc
or
pusha
jmp
jo
daa
or
call
cdq
xchg
jnp
ficom
mov
jmp
scas
test
icebp
lods
sbb
scas
add
push
rol
pop
add
loop
es
(bad)
dec
and
add
into
pop
cs
mov
and
xor
dec
aas
cwde
or
inc
mov
gs
jnp
xor
inc
jmp
call
outs
fxch
pushf
cmc
cmp
dec
xchg
mov
push
dec
shr
das
ins
xlat
cmp
call
jb
mov
call
popf
hlt
in
leave
sbb
int
dec
pop
jns
or
in
mov
outs
sbb
sbb
xor
inc
pop
jle
pop
ja
(bad)
xchg
loopne
inc
lds
xor
jmp
adc
pop
ins
mov
jb
inc
ds
loop
iret
loopne
or
shl
jae
adc
push
sar
popf
mov
jecxz
int
(bad)
jmp
sub
ret
movs
and
adc
xchg
sub
retf
xchg
mov
sti
jmp
repnz
repz
lahf
jle
push
xchg
test
inc
push
jae
jg
movs
jne
jmp
(bad)
xchg
push
in
jnp
inc
jb
mov
cmp
or
bound
jmp
and
outs
dec
mov
inc
out
xor
xchg
dec
mov
inc
dec
xor
ret
fisubr
gs
push
scas
fdivr
(bad)
mov
cmp
cmps
push
sub
call
gs
mov
in
sbb
aad
inc
push
lock
and
(bad)
jnp
in
pop
pop
cld
dec
cdq
jg
out
pop
daa
or
push
inc
inc
ins
sbb
push
cld
retf
add
and
cmps
adc
imul
dec
add
adc
mov
das
imul
pushf
sbb
cwde
dec
mov
cli
imul
into
mov
in
jge
xor
mov
pop
das
in
(bad)
jl
adc
stos
cvtps2pd
stos
mov
and
gs
or
imul
sbb
sbb
jae
pusha
rcr
data16
(bad)
cwde
int
push
mov
adc
fsub
mov
push
inc
xchg
in
lods
sub
mov
(bad)
into
mov
xor
fsubr
push
push
loop
fsub
pop
movaps
mov
pop
gs
add
out
lock
rcr
and
das
push
or
mov
xchg
xchg
fisubr
sahf
push
test
fnstsw
or
fist
mov
or
repnz
aad
in
popa
xchg
inc
sub
(bad)
xor
aam
arpl
xor
(bad)
fcomp
test
test
add
movs
xor
jns
loope
cmp
xchg
xchg
enter
gs
xchg
stos
adc
out
dec
das
neg
sar
mov
test
push
mov
imul
cmp
(bad)
pushf
cmp
dec
in
jmp
inc
ficom
es
add
inc
repz
inc
dec
in
add
add
inc
dec
mov
dec
scas
loope
retf
adc
pop
xlat
sti
test
add
push
dec
and
add
sbb
scas
dec
pop
ret
cmp
push
mov
imul
cmp
sahf
(bad)
xor
mov
sbb
cmp
inc
pusha
es
lea
retf
jl
inc
cmp
mov
(bad)
adc
mov
and
add
sub
mov
pop
test
or
inc
mov
xor
inc
xor
jp
add
sbb
repnz
icebp
pop
sti
sbb
sahf
sahf
dec
cdq
mov
fisttp
jnp
lahf
mov
jl
in
aas
cmc
out
adc
cmp
rol
ins
jg
sbb
and
mov
nop
mov
int
and
clc
lds
mov
rcl
push
fst
inc
rcl
mov
push
cmp
frstor
jmp
jo
mov
(bad)
jge
sbb
jmp
std
mov
popf
xor
shr
ret
jle
outs
pop
shl
mov
dec
push
neg
in
fst
ins
sbb
adc
cmc
mov
cmp
mov
push
xor
test
lahf
mov
push
std
mov
mov
loopne
int3
pop
pop
test
push
cli
xor
cs
(bad)
pop
fcmovu
jg
and
sar
ja
jae
stos
stos
xchg
mov
ret
jmp
dec
(bad)
bound
cmp
hlt
jp
adc
es
mov
(bad)
lods
sbb
shr
lea
adc
div
adc
ins
xor
and
out
lods
jns
xchg
mov
in
mov
pop
pop
sub
push
xchg
xor
cmc
push
jae
cmp
arpl
or
add
ja
inc
mov
inc
dec
dec
loop
dec
mov
mov
clc
mov
ficom
in
aas
xor
loopne
or
or
adc
xchg
mov
loope
push
mov
cmps
xchg
jmp
pop
add
or
or
dec
aam
mov
push
ins
cmp
jmp
test
jle
xor
mov
fs
popf
int3
int
mov
mov
push
pop
outs
ins
dec
outs
dec
pop
inc
outs
sbb
shl
gs
adc
cmp
aam
xchg
sbb
out
div
inc
sub
xor
rcr
imul
aam
jle
or
xor
int
mov
sbb
imul
mov
fwait
cmp
jns
jmp
mov
sub
imul
lock
call
ja
push
out
jne
mov
je
out
cmp
js
jbe
outs
mov
out
jb
aad
out
out
mov
dec
pusha
cmc
pop
arpl
(bad)
mov
jne
mov
imul
xchg
mov
xor
outs
xor
push
out
sub
js
addr16
pop
(bad)
pushf
and
jp
ror
dec
call
mov
mov
jle
loopne
inc
(bad)
mov
out
(bad)
and
jnp
jge
aaa
jmp
ffreep
cmp
and
xchg
xor
mov
rol
inc
jbe
data16
out
(bad)
ret
scas
leave
cli
xor
into
xchg
loop
mov
bound
xchg
jbe
std
pop
or
pop
(bad)
xchg
mov
cwde
inc
jecxz
ret
push
mov
stc
inc
sub
fwait
xchg
cld
dec
pop
mov
cmp
jl
(bad)
pop
int
hlt
dec
icebp
shr
push
stc
pushf
sar
xor
mov
lods
(bad)
bound
adc
add
movs
cmp
out
jnp
xchg
adc
enter
sub
push
xor
inc
jb
mov
dec
pop
jbe
jo
push
xor
nop
test
push
popa
and
xchg
push
or
stos
sahf
movs
retf
mov
xchg
xor
in
jno
outs
ficomp
test
cmp
aad
ds
mov
push
pop
mov
push
or
jecxz
add
pop
adc
test
popf
push
dec
call
mov
sbb
lock
jg
xchg
cmp
mov
or
xor
loop
mov
or
xchg
xor
mov
loop
lds
pushf
add
push
ret
mov
aaa
dec
jle
jmp
xor
ins
push
and
xchg
std
pop
push
fsub
push
outs
inc
xchg
mov
pop
and
ror
mov
mov
cmp
jne
adc
adc
ret
adc
daa
or
cmp
popa
pop
jb
sub
sbb
cs
out
or
adc
pop
sub
xchg
add
push
xchg
add
test
pushw
int
and
imul
cmp
enter
int
pop
adc
xchg
push
cmp
test
and
test
lods
dec
and
in
ins
pop
fimul
cdq
jle
dec
add
popa
add
popf
out
or
adc
push
aas
pop
push
shrd
mov
pop
or
and
retf
push
data16
(bad)
cmc
mov
xchg
dec
mov
call
fild
mov
mov
push
dec
ret
cmp
fbstp
iret
pusha
cmp
inc
in
adc
nop
or
cmp
dec
mov
popf
cmp
ror
sbb
inc
dec
cmp
inc
stos
ret
bound
push
push
ins
jle
or
cmps
cmps
add
mov
push
in
popa
loope
or
fsubr
sbb
ss
std
jecxz
xchg
sub
shl
data16
(bad)
cli
in
rcl
mov
popf
ret
mov
xchg
jge
add
mov
cmc
mov
mov
push
mov
lock
test
in
add
jmp
dec
retf
and
lea
xchg
pushf
mov
scas
xchg
jae
xchg
aad
(bad)
mov
add
dec
push
push
lock
push
add
xor
xor
(bad)
fild
addr16
adc
into
imul
xchg
test
cmc
sbb
dec
(bad)
xchg
sahf
lods
push
inc
mov
in
xchg
pop
in
mov
dec
(bad)
imul
or
jno
sahf
xor
jl
pop
jmp
daa
sbb
mov
fisttp
push
sti
cmp
jge
pop
jmp
cmp
inc
and
push
out
ror
and
xor
movs
sar
leave
jg
enter
or
and
pop
dec
mov
aaa
les
xor
data16
xchg
or
dec
(bad)
push
or
loope
lahf
test
out
cmp
adc
ins
dec
loope
jo
inc
jae
scas
dec
cmp
mov
in
jp
cwde
adc
fs
inc
cmp
cmps
mov
mov
xchg
cmp
sbb
xchg
push
inc
retf
lea
pop
or
mov
inc
test
gs
loopne
adc
loopne
push
out
dec
in
add
fld
stos
add
add
adc
movs
pop
and
push
jg
mov
dec
and
not
shl
dec
fstp
cmovo
pop
or
xchg
jp
cmp
xor
jge
mov
inc
ins
imul
and
mov
jp
popa
addr16
jecxz
inc
call
mov
xor
mov
aas
adc
inc
sbb
jle
fdiv
mov
jns
(bad)
or
shl
dec
jge
stos
mov
ret
punpcklwd
lods
stos
sti
lods
aad
aaa
inc
or
movs
test
add
sbb
je
sub
stos
mov
dec
push
out
jmp
xchg
sahf
ss
inc
dec
repnz
test
push
xchg
xchg
cwde
bound
rcr
divps
rol
in
pop
mov
adc
mov
sahf
sbb
add
push
pushf
mov
(bad)
aam
xor
pop
pop
xlat
shr
or
loop
ds
jmp
cmps
addr16
cmps
js
or
pop
jecxz
cs
xchg
adc
sbb
stc
int
and
mov
mov
sahf
pop
xchg
jbe
push
adc
stos
cmp
push
fdivr
push
sub
jno
mov
ja
jnp
sbb
(bad)
scas
dec
add
adc
mov
push
mov
jne
arpl
push
mov
inc
lods
or
cmp
inc
int3
mov
adc
fwait
push
push
jns
cmps
inc
xor
mov
sub
mul
bound
xlat
xchg
jae
bound
cmps
sahf
xchg
pop
and
push
xchg
retf
shr
xchg
imul
dec
and
sub
ins
out
inc
mov
and
mov
jne
fcomp
xlat
dec
push
hlt
sbb
inc
ds
or
adc
cwde
sahf
fidiv
fist
push
cmc
add
jmp
stos
out
add
sti
mov
jecxz
jge
push
mov
jmp
iret
ss
mov
shl
xchg
and
int3
jmp
loope
es
dec
cmp
mov
lds
scas
cmp
push
movs
push
push
fidiv
push
jmp
aad
lock
xchg
aam
xor
xchg
hlt
push
dec
push
imul
or
mov
in
cld
sar
cs
cmp
jecxz
jno
mul
cmp
or
stc
sub
mov
repnz
push
mov
daa
sbb
dec
les
jb
xor
add
jne
scas
sbb
cmc
pop
dec
sbb
cmp
jmp
xchg
jbe
sahf
cld
cmc
fimul
mov
push
outs
mov
mov
into
push
jecxz
fidivr
fs
es
mov
pusha
mov
nop
call
add
push
lods
jecxz
cmp
push
adc
loopne
shl
fst
mov
in
movsx
fidiv
imul
inc
icebp
and
xor
mov
xor
jg
add
idiv
and
popf
push
xchg
dec
push
push
sbb
dec
aas
cli
std
fdivr
mov
sbb
mov
loopne
jno
leave
and
dec
sub
push
fcom
mov
and
es
xchg
push
pop
mov
add
adc
push
cmps
dec
repnz
mov
repz
daa
cdq
mov
jle
(bad)
loopne
or
pop
dec
sahf
fwait
inc
ss
les
sahf
add
ss
loop
stc
inc
inc
or
fnstsw
imul
sahf
xchg
pop
ror
pop
pop
lahf
rcl
pop
popa
in
movs
xchg
jecxz
data16
mov
jo
or
dec
xchg
dec
addr16
and
inc
or
in
push
jle
jmp
jmp
xor
mov
data16
mov
push
and
inc
mov
jmp
sbb
inc
cmp
leave
jle
dec
loop
sub
or
mov
dec
test
mov
sbb
xor
pop
pop
jne
call
nop
jns
popf
or
xchg
cmp
cli
sub
or
sub
mov
out
cmp
fisttp
lahf
test
test
inc
dec
mov
cmp
in
data16
dec
(bad)
js
sbb
ins
pop
(bad)
pushf
mov
daa
xchg
xchg
pop
xlat
daa
js
sbb
retf
into
(bad)
mov
xchg
mov
xchg
mov
jl
cmps
lds
iret
add
sbb
pop
mov
sub
sbb
jge
adc
stos
es
push
jae
sub
cmps
xchg
out
in
scas
push
rcl
adc
pusha
pop
inc
pop
sub
cmp
inc
mov
ins
in
retf
fist
fdiv
cdq
xchg
lods
ds
jae
fadd
sub
(bad)
out
adc
aas
mov
add
scas
add
(bad)
pop
das
jg
aas
int3
sub
std
sub
mov
mov
mov
aas
mov
or
enter
jbe
mov
mov
sub
in
shr
jecxz
jle
mov
push
arpl
cmps
push
jp
jl
es
fnstsw
push
and
xor
popf
sub
sbb
mov
cmp
jmp
jbe
movs
sub
add
pop
and
(bad)
shl
push
xchg
out
stos
retf
inc
cmp
fs
jge
icebp
mov
and
and
in
pop
movs
icebp
pop
out
mov
loop
rol
outs
in
xchg
lods
mov
out
test
push
push
ror
mov
das
adc
push
or
int
repnz
scas
call
push
xchg
clc
shr
stos
outs
fwait
and
cwde
sbb
inc
iret
fsub
in
add
dec
mov
pop
ins
pop
fsubr
cmp
mov
cmp
xor
mov
and
pop
ins
outs
push
adc
or
pop
mov
push
sbb
mov
xchg
sub
cmp
cmps
fdivr
pop
add
dec
or
test
dec
loopne
test
push
(bad)
gs
lock
sar
mov
sub
dec
lods
mov
aam
inc
mov
(bad)
sub
and
push
inc
outs
sbb
inc
lahf
aas
add
add
popf
sub
dec
daa
fcmovnbe
retf
adc
mov
mov
fst
sub
jp
jae
sahf
jmp
xchg
mov
popf
sub
mov
mov
xchg
and
mov
shl
scas
sbb
mov
jecxz
inc
push
hlt
inc
push
adc
in
dec
xor
(bad)
add
adc
ret
xlat
adc
loop
inc
(bad)
fucomp
mov
inc
out
ret
fisubr
out
fisub
jp
in
sub
cmp
idiv
dec
jmp
and
(bad)
mov
mov
pop
lods
sti
inc
scas
xchg
sub
dec
jle
dec
pop
enter
in
jmp
adc
pop
pop
sub
enter
xor
cmp
jg
ins
pop
inc
scas
and
loopne
std
inc
cmp
xor
sub
nop
test
inc
mov
cmp
enter
addr16
popf
push
pop
or
fld
inc
imul
shl
rsqrtps
jae
rcl
fisttp
mov
stc
dec
repz
and
dec
and
ror
ins
cld
pop
sbb
sub
pop
sub
in
fistp
sbb
popf
(bad)
sbb
in
aad
pop
fcom
jmp
dec
addr16
in
add
movs
fst
adc
mov
mov
and
outs
sub
les
daa
imul
icebp
loopne
fmul
clc
jae
cwde
xor
add
inc
out
pop
jae
xor
xor
jl
mov
sub
cmp
ret
idiv
adc
mov
sub
cli
aas
scas
sub
inc
sahf
mov
ret
cmp
xchg
out
pop
ja
cmp
test
outs
rcr
pop
xor
imul
test
daa
stos
ds
scas
fwait
push
bnd
in
mov
pop
and
fs
loopne
jecxz
(bad)
mov
mov
push
and
out
pop
stos
sbb
dec
pop
adc
jle
inc
sbb
and
sbb
and
ins
sub
jae
imul
inc
nop
or
enter
sti
movs
sub
pop
shl
hlt
retf
fild
addr16
mov
out
jge
sub
jae
mov
jns
mov
jae
sub
xchg
dec
mov
in
add
dec
sub
scas
mov
mov
pushf
ds
in
dec
or
aam
mov
ja
into
or
std
mov
jmp
or
pop
cmp
xlat
nop
jb
dec
into
cmp
jns
push
imul
std
imul
add
jo
aas
ins
jmp
pushf
push
add
push
inc
out
daa
xor
push
out
add
push
test
or
(bad)
aas
mov
cmp
mov
fadd
add
nop
lods
stos
push
push
nop
mov
call
xor
inc
in
repz
out
push
stos
stc
mov
pop
imul
dec
xchg
pusha
pop
test
fs
mov
shl
push
lock
xchg
adc
movs
or
pop
dec
mov
daa
int3
xchg
rcl
mov
and
ja
sti
mov
mov
dec
sti
out
mov
and
fcmove
mov
xchg
and
pop
sbb
ja
rcr
and
(bad)
push
call
test
outs
mov
adc
push
sub
xor
dec
pop
lahf
mov
test
and
call
xor
dec
push
dec
shl
cmps
mov
or
adc
retf
movs
leave
xchg
cmp
adc
and
mov
xor
cmp
addr16
jle
push
jge
xor
and
dec
daa
in
push
dec
nop
aas
xchg
inc
cmp
(bad)
fdivp
mov
mov
jmp
leave
fld
cmp
fdivr
or
div
mov
xchg
mov
mov
xor
fdiv
cld
enter
je
mov
xchg
shl
pop
add
adc
movs
imul
call
test
ins
dec
je
ins
or
xchg
jle
mov
retf
push
std
cld
arpl
mov
clc
push
xor
inc
cmp
xor
pushf
mov
inc
cmp
dec
jmp
test
gs
xchg
sub
jl
ja
push
adc
loope
out
push
mov
fwait
mov
stos
ror
nop
sbb
lds
push
and
mov
shl
xchg
nop
and
(bad)
rcl
push
ins
aaa
fild
push
(bad)
repnz
cmp
aas
and
pop
retf
push
rcl
adc
hlt
add
rcr
mov
xchg
cld
imul
or
rcr
push
mov
addr16
repnz
ret
push
cmc
sub
jmp
mov
fisubr
xlat
call
clc
rcl
cmp
clc
outs
enter
cmp
dec
in
cld
sbb
inc
inc
pop
xchg
retf
lea
int3
inc
cli
(bad)
icebp
in
sub
in
dec
jno
cmc
mov
movs
jns
inc
jns
test
add
aad
lock
pushf
mov
xchg
rcr
cli
inc
pop
test
sub
outs
add
stos
or
inc
ret
fadd
push
psrlw
mov
aad
sub
(bad)
cli
jno
mov
pop
push
cs
adc
push
les
js
or
stc
lock
cld
xchg
gs
nop
les
cmc
in
in
and
push
repz
gs
fistp
cmp
aad
std
mov
cmp
mov
(bad)
aam
sub
scas
xchg
retf
scas
pop
mov
adc
pop
cwde
xchg
ins
ss
mov
xchg
inc
xchg
inc
jae
pop
and
jae
pop
xchg
mov
fs
scas
add
jmp
loope
cli
adc
jle
fbstp
xlat
fcmovnu
cdq
int
jne
inc
(bad)
cwde
lods
daa
ror
outs
sub
icebp
sbb
push
aas
add
ins
push
jmp
mov
ins
jae
int
fcomp
dec
push
sar
xor
jo
jecxz
pop
ja
or
cld
sbb
cli
sub
test
dec
jne
test
scas
xchg
fstp
rcl
jae
jge
or
mov
mov
pop
xor
mov
addr16
aam
mov
sahf
mov
or
fmul
jne
inc
push
in
mov
jbe
mov
dec
clc
aaa
mov
mov
mov
inc
enter
cwde
(bad)
sti
sub
jmp
xchg
xor
stc
xchg
outs
push
add
adc
sbb
sti
inc
aam
ror
lds
inc
adc
mov
mov
and
es
ja
pop
cmp
push
cdq
ret
sahf
(bad)
mov
call
or
arpl
js
sub
lods
bnd
in
jg
mov
(bad)
out
in
frstor
js
fisubr
cmp
cld
cs
rcr
mov
outs
and
xor
outs
xor
movs
fs
or
cmp
(bad)
lahf
in
lock
pop
mov
shl
repnz
adc
add
ins
xlat
inc
test
aad
test
dec
xor
xchg
data16
mov
iret
mov
in
inc
ins
xor
int3
inc
cmps
or
jmp
sbb
rol
pop
rol
dec
jmp
gs
stos
xor
test
mov
jns
in
fstp
xor
pushf
sbb
jg
jl
mov
pmaxub
sub
xchg
and
inc
clc
leave
pusha
in
clc
and
mov
jns
jne
stos
or
dec
cwde
push
bound
sbb
mov
dec
and
push
and
retf
or
mov
mov
rcr
mov
dec
jmp
mov
sub
js
aad
addr16
push
mov
mov
push
fnstenv
test
pop
retf
fbld
mov
movs
pop
and
outs
mov
gs
add
xchg
push
sub
(bad)
cwde
les
(bad)
push
sub
shr
add
cmps
and
or
je
aas
shl
pop
mov
sub
cmp
xor
push
add
xchg
mov
out
ja
jo
xchg
int
and
in
outs
shl
mov
adc
xchg
in
dec
cmc
nop
sbb
rcr
leave
pop
jmp
pop
dec
mov
and
loop
icebp
ins
adc
sub
inc
mov
xchg
mov
ins
mov
mov
fwait
add
add
cdq
or
sbb
sbb
mov
push
mov
repz
xchg
es
adc
retf
loop
push
jno
mov
adc
pushf
in
jge
dec
inc
mov
cmps
std
add
jl
aaa
push
add
mov
enter
and
jp
(bad)
test
jmp
or
hlt
sbb
(bad)
jle
sub
sub
cli
sbb
or
test
les
(bad)
inc
inc
sub
adc
cwde
jg
rcr
mov
pop
mov
add
call
mov
mov
imul
push
mov
in
in
push
push
sub
scas
dec
dec
inc
and
(bad)
jmp
jmp
cld
call
push
scas
or
in
shl
(bad)
mov
lock
cmp
xchg
out
arpl
popa
pusha
and
int
shl
xor
cs
clc
push
fldenv
pop
push
sbb
pop
push
fisttp
mov
fisttp
cmp
add
aaa
xchg
out
jne
push
leave
add
cmp
int3
add
xor
xor
mov
adc
retf
jmp
rcl
dec
jecxz
loop
cmp
pushf
mov
ficom
pop
mov
(bad)
adc
sar
push
enter
je
(bad)
loop
and
(bad)
jo
cld
cld
(bad)
retf
cmp
iret
pop
loope
arpl
mov
in
int3
test
dec
jp
loop
cmp
mov
cmp
or
test
mov
sahf
cmp
out
mov
mov
fadd
aaa
std
out
push
or
sub
pop
pop
xchg
not
(bad)
sbb
pop
ins
cli
add
scas
popa
lods
shl
inc
pop
add
imul
mov
daa
pop
pushf
xchg
and
jbe
cmp
xchg
pop
jae
pop
popf
sbb
shl
lahf
or
pop
test
push
xlat
lods
xchg
stc
cmp
add
in
in
mov
shr
std
mov
stc
mov
shl
pop
ds
adc
stc
adc
mov
ficom
or
pop
xor
lds
lea
in
jp
mov
adc
cmp
movs
fstp
jmp
cmp
mov
add
cld
call
lea
stos
add
sbb
aam
inc
ficomp
mov
inc
test
xor
mov
push
jbe
fwait
xchg
jg
int
les
xor
adc
rol
mov
inc
sbb
cmps
in
es
jle
pop
mov
push
or
adc
inc
enter
jbe
sbb
imul
into
fcom
dec
inc
add
xor
mov
fnstcw
or
cwde
call
out
arpl
retf
fld
addr16
retf
lds
retf
(bad)
dec
(bad)
int
iret
ins
add
xor
xor
sbb
jno
jae
push
ds
stos
lock
push
and
or
stos
(bad)
cs
sub
jmp
sbb
adc
rcl
adc
fldenv
lahf
sub
push
es
and
repz
je
add
cwde
stos
mov
xor
xor
loop
or
adc
call
and
into
int3
loope
or
test
(bad)
retf
and
ret
ins
jl
or
movs
loope
test
and
mov
mov
inc
mov
sub
fcomp
inc
jg
inc
push
dec
mov
xor
dec
retf
scas
in
adc
sbb
jmp
hlt
inc
dec
cmps
xor
stc
fsin
sub
pop
xor
ret
cmc
div
cmp
pop
cmp
(bad)
fsubr
test
pop
push
mov
enter
mov
or
loopne
jo
mov
xchg
pop
pusha
fcom
mov
int
pop
sub
hlt
cmp
sbb
jnp
shl
sbb
pop
mov
pop
xchg
lock
add
sar
or
pop
call
inc
enter
sbb
cwde
ret
mov
fistp
add
(bad)
jl
and
sbb
and
inc
mov
dec
mov
and
xchg
and
and
cdq
xor
(bad)
cmp
push
sub
fcom
push
icebp
mov
cmp
cdq
xchg
ds
inc
or
mov
iret
cmp
xchg
mov
imul
xchg
or
jae
xchg
add
cmp
sbb
addr16
inc
enter
retf
ss
popw
pop
and
loope
add
and
lods
(bad)
ins
inc
lock
mov
pushf
out
sub
cmp
stc
push
pop
lds
jo
mov
in
mov
arpl
mov
add
fsub
fwait
icebp
xor
mov
sbb
push
cli
mov
mov
or
pop
icebp
and
xchg
mov
cmp
push
fild
ja
das
and
test
fmul
dec
ja
cwde
jg
repnz
or
cmp
lds
pushf
adc
dec
cli
inc
xlat
into
and
pop
dec
popa
mov
outs
mov
test
adc
into
popa
cwde
loope
or
or
icebp
cmp
les
inc
cmp
jbe
sbb
mov
dec
jbe
push
inc
lods
jb
or
or
jle
in
imul
cmp
clc
lock
mov
or
outs
(bad)
mov
inc
hlt
mov
je
cmp
dec
mov
push
enter
cli
loope
rol
jecxz
pop
sahf
inc
cld
cmp
jle
jmp
or
xlat
retf
dec
int
hlt
es
mov
sbb
sbb
(bad)
cwde
inc
ss
jmp
test
outs
jmp
jnp
stos
test
out
idiv
xor
cmp
sub
ins
jae
inc
jno
div
outs
dec
sub
pop
outs
ror
pop
sbb
push
clc
xchg
test
sbb
sbb
loop
jae
adc
dec
mov
mov
pop
sbb
sbb
aam
dec
ror
add
lahf
mov
xor
xor
cmp
(bad)
mov
push
ss
mov
test
scas
rcr
or
cmps
int
jl
outs
lock
mov
xchg
and
aad
or
jmp
or
and
xor
and
punpckldq
xor
dec
retf
(bad)
mov
ins
outs
adc
mov
push
inc
gs
std
push
jmp
imul
cmp
mov
add
push
pop
loopne
cmp
add
imul
inc
adc
adc
mov
popa
jle
pop
psubusb
les
sbb
pop
das
or
mov
and
mov
push
cmc
pop
push
or
test
or
push
sbb
je
pop
push
and
pop
fst
repnz
pop
lea
sahf
rcl
mov
pop
int3
xor
jae
pop
mov
repnz
push
cmc
fisttp
repz
add
xchg
inc
sub
mov
push
push
inc
cs
sub
jbe
dec
out
enter
push
mov
jmp
enter
xor
test
jecxz
mov
aad
cwde
cld
dec
leave
mov
push
gs
cmp
dec
int3
jmp
sti
test
ret
sbb
shl
aas
fild
add
cs
mov
add
push
jmp
dec
cmp
cmp
add
cli
cmp
shl
in
push
ficom
out
sub
jbe
les
idiv
push
mov
ss
aam
lock
push
jbe
push
cmp
mov
scas
in
mov
pop
and
loope
pop
xor
stc
loopne
(bad)
out
jne
in
sbb
leave
add
lods
sbb
mov
mov
xchg
xor
push
gs
adc
mov
xor
dec
cmc
and
xor
xor
dec
test
iret
jb
into
sar
pop
icebp
jg
iret
and
imul
xlat
jo
pop
aad
cmp
push
sbb
js
cmp
jns
pushf
sbb
movs
(bad)
mov
aas
in
add
mov
xchg
mov
adc
or
or
dec
les
inc
rcr
pcmpgtw
push
inc
add
dec
cmp
push
cli
ins
sub
mov
and
or
loop
mov
jmp
imul
stc
jo
or
dec
retf
dec
adc
cmp
mov
xlat
push
pop
mov
retf
adc
add
or
pop
jecxz
fld
pop
fst
inc
ds
jb
sub
cmp
fldenv
pop
fs
xlat
sub
cmps
push
cmp
(bad)
xchg
push
pushf
lahf
mov
push
adc
fnsave
cmp
cmp
mov
cmc
bnd
leave
mov
xlat
inc
sub
outs
ret
cli
es
or
shl
mul
pop
sub
pop
out
rcr
mov
ja
or
neg
loopne
dec
shl
cmp
xchg
xor
lahf
cmp
cmps
jmp
gs
push
call
cmps
xlat
fnstcw
popa
sbb
lods
and
sbb
mov
out
pop
ds
(bad)
movs
cmovo
outs
sti
(bad)
je
retf
xor
iret
mov
neg
jmp
test
fstp
fsubr
cmp
pop
out
xacquire
mov
adc
(bad)
adc
adc
jns
inc
scas
push
inc
nop
sbb
jne
aad
cmc
sbb
ror
lods
or
xchg
jnp
fisttp
add
rol
out
or
stos
add
(bad)
fdiv
sar
xor
push
jb
lods
retf
test
push
fwait
jmp
add
or
dec
(bad)
in
cli
shl
inc
shr
movs
test
or
jmp
into
cmps
add
fs
jmp
xor
pop
jl
aad
add
pop
sbb
push
mov
aam
out
scas
pop
jbe
out
(bad)
push
xor
(bad)
fidivr
inc
jb
mov
add
movs
ja
mov
arpl
mov
mov
mov
out
add
xchg
xor
stos
packsswb
js
pop
test
sbb
lds
mov
adc
mov
clc
sbb
cdq
add
or
jo
rol
ins
xor
movs
jg
aam
sub
push
and
mov
ret
adc
mov
je
pop
dec
nop
or
test
repz
mov
adc
mov
(bad)
sub
sub
out
dec
and
outs
int3
dec
xor
into
cmp
pop
outs
jp
push
jge
xchg
and
test
pcmpgtb
mov
cmp
dec
cdq
push
pop
dec
dec
cmp
xor
jne
mov
and
sbb
ret
add
and
and
jmp
inc
inc
jo
cmp
loopne
xor
or
pop
ror
xor
inc
rcr
mov
add
jae
jo
mov
cmc
xor
addr16
mov
pusha
shl
out
hlt
pop
xchg
mov
inc
push
push
push
fsub
in
inc
push
dec
out
mov
neg
sub
adc
fs
adc
or
sbb
shr
adc
enter
fs
lods
sub
je
pop
nop
fs
imul
push
rcl
pusha
xchg
xor
add
aam
in
xor
xchg
test
cmp
xchg
sbb
cmp
cmp
xor
jle
jmp
pop
mov
push
inc
inc
push
test
cmps
lea
in
mov
xchg
imul
cmp
loop
sbb
not
push
xchg
std
popf
add
pop
call
cmp
std
scas
sub
xchg
adc
ret
xchg
xchg
and
push
mov
clc
or
daa
call
sar
neg
sar
mov
and
retf
mov
dec
(bad)
outs
push
movs
inc
inc
and
or
mov
mov
fst
mov
inc
pop
pop
clc
or
inc
fs
(bad)
cmp
xlat
mov
dec
add
shl
jle
mul
and
mov
shl
ret
xchg
jl
lds
or
xchg
inc
out
jmp
fdiv
adc
scas
lahf
inc
imul
scas
pop
mov
std
imul
retf
dec
jne
sbb
push
or
add
xor
inc
and
jecxz
lods
add
loopne
bound
and
xchg
outs
xlat
xchg
cwde
lods
sti
adc
retf
adc
test
dec
and
jle
xor
fwait
inc
sub
mov
or
and
pop
mov
ja
dec
sbb
push
ins
(bad)
xchg
jno
cli
and
ins
or
fadd
outs
mov
or
xchg
xor
lods
out
dec
lods
leave
pop
sbb
cs
jge
jge
mov
inc
test
in
imul
ret
rcl
or
mov
test
out
cmp
bound
leave
pop
lods
jb
xlat
(bad)
mov
and
int
js
jnp
enter
or
xlat
push
and
or
inc
mov
ret
mov
xchg
dec
mov
imul
adc
mov
cs
hlt
xlat
icebp
loop
or
pop
jne
inc
jnp
xchg
fwait
sahf
cmc
inc
mov
shl
or
in
mul
clc
ror
pusha
cmp
rol
mov
sbb
fwait
scas
xchg
adc
in
and
prefetchnta
and
les
test
test
mov
mov
jecxz
inc
fwait
pop
jp
adc
(bad)
out
and
add
sbb
adc
push
inc
cli
je
xchg
imul
idiv
mov
jne
cmp
sti
shr
xchg
mov
(bad)
push
outs
cli
mov
arpl
push
retf
sub
daa
cmp
xchg
das
mov
sbb
int
jnp
pop
pop
mov
ret
mov
jne
mov
push
push
ret
leave
push
int
inc
add
imul
inc
les
ds
inc
sbb
mov
clc
sub
pusha
aad
gs
aam
adc
into
cmps
cs
addr16
mov
fnstenv
daa
and
xor
cld
and
jno
mov
cmp
inc
xchg
cli
inc
out
sar
rol
jmp
out
or
cmc
push
cs
jp
or
shl
dec
xchg
lods
add
rcl
std
cmp
and
xchg
or
enter
push
dec
inc
add
or
mov
xchg
mov
shl
repz
jo
icebp
frstor
stc
cmc
sbb
xor
repz
xor
mov
push
test
add
sbb
or
clc
mov
inc
out
test
or
sbb
add
sbb
cmps
in
push
add
test
(bad)
push
sahf
cmp
dec
sub
jp
adc
test
adc
out
in
jbe
shl
loopne
pop
shl
nop
mov
cmp
stc
imul
push
add
add
cmps
mov
shl
inc
sbb
mov
inc
into
daa
jbe
and
test
call
jno
fimul
in
in
cld
cmp
push
or
ret
inc
fdiv
jo
cmp
add
add
scas
and
ret
xchg
or
mov
dec
not
inc
retf
mov
in
pop
out
pop
xor
sbb
out
(bad)
shr
and
cmp
imul
push
arpl
xchg
movs
pop
pop
xor
mov
scas
daa
pusha
(bad)
adc
pop
push
pop
inc
scas
mov
scas
mov
fldenv
movs
imul
mov
sub
inc
sub
sbb
xor
iret
stos
sub
add
test
in
mov
dec
loopne
pop
inc
andps
lea
inc
xor
stc
and
adc
inc
jg
mov
jo
or
stc
push
and
pop
jbe
cs
dec
mov
cmc
mov
fisubr
imul
repnz
xchg
and
mov
repnz
jmp
stos
into
cmp
cmp
js
jns
mov
lds
mov
fwait
sub
out
and
das
or
inc
push
xor
or
or
cmps
fist
stc
call
sbb
clc
jmp
lods
push
mov
scas
ja
loope
pop
inc
push
cmc
add
jge
xchg
mov
add
ins
jns
ficom
jg
sbb
xchg
dec
mov
lea
(bad)
fldenv
mov
shr
jecxz
dec
adc
add
test
jp
test
call
push
ret
mov
test
adc
(bad)
jmp
call
and
call
and
cmp
mov
xchg
repz
movs
xor
push
ror
mov
mov
or
addr16
call
xor
out
jb
aas
dec
rol
add
jmp
cwde
sub
mov
pop
mov
call
sub
(bad)
and
inc
rcl
shl
xlat
not
xor
mov
xchg
and
mov
add
sbb
ret
sbb
mov
adc
(bad)
fisub
xchg
outs
stos
xor
and
mov
or
cmp
inc
xor
in
mov
and
xchg
fild
cmp
sub
fst
xchg
mov
jge
in
cmp
or
rol
or
cs
adc
je
dec
jns
das
(bad)
pusha
push
inc
js
pop
out
bound
jnp
dec
xor
aas
dec
dec
mov
nop
sbb
lea
shl
sahf
push
cmp
loopne
outs
lods
add
xchg
pop
ss
lods
xor
pop
mov
inc
ret
sar
push
in
cmp
mov
cli
sahf
lods
cmp
and
mov
inc
jl
jmp
movs
mov
cli
stos
(bad)
fistp
iret
add
xchg
push
push
or
sub
pop
and
mov
rol
jbe
dec
add
lods
out
(bad)
ss
jmp
jne
mov
shl
ret
ja
inc
jns
mov
jle
dec
test
movs
jb
nop
sbb
leave
add
and
add
xor
dec
stos
and
xchg
data16
aad
stos
out
cli
cmp
pop
inc
out
sbb
jbe
loopne
stos
lods
add
jg
sti
xlat
aas
and
sti
or
popa
jo
arpl
mov
lods
lods
mov
shl
adc
cmp
xchg
mov
inc
cdq
sar
retf
neg
or
mov
sbb
ja
cmp
inc
in
and
repz
cmp
pusha
loop
rcr
test
add
adc
loope
inc
imul
xchg
or
or
(bad)
sbb
jb
mov
xchg
dec
push
aam
mov
mov
ret
mov
outs
frstor
(bad)
in
cmovs
test
mov
jo
mov
js
mov
lea
mov
xor
imul
inc
js
xchg
adc
cdq
nop
adc
jmp
mov
shr
aam
stc
movs
mov
jle
mov
fucomip
out
adc
imul
outs
mov
int
(bad)
mov
mov
add
mov
out
mov
mov
iret
js
sub
outs
pop
push
xor
cmps
push
push
lds
data16
adc
repz
stos
lods
mov
iretw
cmps
stc
out
add
ret
cdq
xor
xchg
mov
cmc
shl
mov
ror
into
mov
(bad)
in
es
pop
mov
test
push
out
cmp
mov
mov
fisttp
push
aad
add
and
xchg
mov
stos
call
call
adc
mov
xchg
call
add
enter
inc
daa
and
in
push
push
push
pop
mov
adc
jg
loop
mov
lea
imul
or
out
sub
out
push
(bad)
(bad)
mov
outs
data16
xor
lahf
jae
push
fild
jno
sti
or
dec
jl
add
test
xor
call
dec
sub
or
test
aam
hlt
ds
cmp
mov
sub
cmp
xor
sbb
ret
mov
fld
pop
pop
aam
lock
inc
arpl
inc
pusha
sub
or
xor
add
mov
inc
xchg
pushf
mov
push
mov
jmp
hlt
fcom
fs
mov
movs
sbb
xchg
sub
pop
and
ficom
int3
xchg
cwde
clc
icebp
add
sub
pop
cmp
push
jp
rcl
lods
test
fcmovbe
dec
jno
out
mov
jae
jb
cmp
cld
adc
imul
mov
inc
mov
cmp
mov
sar
sbb
movs
int3
add
jno
dec
xchg
cmp
mov
dec
push
ss
repz
cdq
lea
ficom
dec
mov
(bad)
sti
ins
nop
icebp
inc
or
add
mov
lock
div
jae
mov
sub
repnz
jmp
jp
or
loop
(bad)
aas
lock
adc
std
repnz
dec
cmps
pop
sbb
out
dec
jnp
sbb
les
movs
div
in
cmps
fsubr
imul
inc
(bad)
fsubrp
rcl
repz
hlt
cmp
js
mov
inc
lods
test
je
adc
add
nop
nop
cmp
out
inc
cmovne
nop
mov
mov
(bad)
retf
jmp
mov
shr
mov
nop
jle
nop
call
aad
fcomp
cmp
mov
js
pop
lock
inc
inc
loopne
loopne
popa
dec
adc
movs
xor
jno
rol
xchg
packssdw
mov
call
mov
ins
xchg
mov
mov
jge
or
hlt
sub
mov
pop
xor
ins
enter
je
(bad)
in
mov
add
inc
mov
lods
lock
add
xor
sbb
fiadd
rcr
adc
push
add
sub
loopne
pop
imul
enter
mov
sub
ret
stos
inc
xlat
outs
into
les
xor
bound
enter
sar
sbb
movs
dec
test
(bad)
scas
icebp
adc
lock
or
xor
mov
jnp
inc
cmp
dec
adc
jne
mov
fsubp
stos
push
and
sub
xchg
mov
push
push
adc
xchg
and
xchg
mov
outs
push
ins
mov
xor
ins
inc
int
xchg
ret
js
mov
sub
lea
fdiv
and
xchg
ins
add
scas
movs
push
out
enter
ret
inc
outs
dec
jecxz
jb
stc
ret
fmul
add
mov
adc
ror
ja
push
cwde
dec
mov
das
push
xor
int3
or
loop
jb
idiv
xor
jp
cmc
stos
es
mov
jge
cmp
loope
in
cmp
jmp
mov
nop
sbb
in
dec
call
xor
mov
lea
das
int3
and
fld
xor
clc
ins
jg
cmp
int
cmp
sti
inc
lock
cmps
clc
(bad)
out
mov
iret
adc
mov
imul
das
push
jecxz
push
jmp
pop
iret
inc
jp
repz
and
push
xchg
push
call
repnz
adc
into
cmovp
call
ds
stc
popa
adc
sub
adc
inc
aam
add
push
arpl
lods
or
mov
sub
adc
stc
movs
mov
sbb
mov
repnz
jg
scas
(bad)
int3
sahf
mov
(bad)
push
ret
xor
cmp
lea
and
push
xchg
outs
ret
stos
jns
jmp
sub
enter
jae
xor
pop
lahf
mov
pop
mov
test
inc
adc
xchg
cdq
cld
inc
cs
sti
jns
mov
push
mov
pop
dec
(bad)
cmp
mov
pop
fadd
xchg
dec
push
xchg
std
or
ror
push
dec
fwait
mov
cli
icebp
(bad)
sbb
dec
fwait
test
jle
jns
cmp
adc
call
or
out
sar
aaa
icebp
scas
pop
push
xchg
sbb
cmps
lock
fnsave
stc
mov
lds
add
std
loopne
mov
sbb
jbe
cmps
icebp
mov
jp
scas
mov
mov
jg
jge
inc
add
scas
pop
inc
int3
dec
jl
push
out
inc
sub
(bad)
adc
push
outs
mov
inc
imul
inc
pop
shl
in
sub
sbb
aaa
mov
(bad)
push
xchg
test
adc
scas
out
les
movs
mov
add
(bad)
xchg
inc
arpl
mov
js
pop
jl
cmps
data16
push
dec
push
dec
ja
enter
rcr
cmp
add
sbb
jle
ds
arpl
lods
(bad)
scas
and
jnp
mov
in
mov
and
mov
push
add
loope
inc
jmp
movs
xor
dec
imul
sbb
mov
sbb
jne
fwait
out
mov
mov
rol
call
lea
or
cmp
fcmovbe
mov
adc
sub
scas
std
dec
(bad)
loope
inc
mov
mov
or
push
mov
xchg
jns
mov
ds
inc
add
fisttp
rol
add
outs
jle
mov
pop
push
ret
mov
outs
mov
jge
call
push
dec
lahf
mov
fist
push
inc
dec
pop
jmp
sbb
ja
adc
and
sub
(bad)
jecxz
adc
jge
cmp
movs
retf
sub
mov
loope
repnz
jmp
test
pop
xlat
ror
mov
xchg
dec
(bad)
(bad)
jp
push
sbb
mov
ror
loop
fst
mov
and
sti
add
ror
ja
add
jo
int
mov
retf
scas
iret
repz
loope
pop
leave
push
rcl
push
pop
int3
sub
or
and
enter
push
xchg
sbb
(bad)
fdivr
jg
loope
arpl
pop
out
scas
pop
out
pop
xlat
cmp
or
sbb
cli
or
add
mov
inc
imul
adc
test
sub
xor
fild
push
out
push
fwait
gs
int3
js
jl
pop
jecxz
out
xlat
push
icebp
das
cld
push
imul
lods
pusha
pop
or
rol
sbb
cld
xor
jne
addr16
icebp
mov
pushf
daa
repnz
iret
shl
sub
fcmovb
pushf
cmps
or
fs
mov
mov
movs
icebp
mov
add
mov
pop
pop
jno
mov
xchg
cmp
add
jae
stos
pop
push
test
push
leave
fist
sub
cmp
retf
stos
(bad)
out
mov
or
sub
retf
mov
xchg
xlat
jg
out
cli
adc
pop
inc
push
out
ret
add
xchg
popf
and
and
dec
jae
cli
ror
pop
add
nop
dec
dec
push
sub
mov
fxch
iret
mov
mov
pop
xor
push
jecxz
sub
les
push
loopne
mov
test
pop
cmp
pop
xor
arpl
sbb
or
inc
jmp
and
je
pop
inc
arpl
mov
xchg
sub
jo
test
push
push
dec
scas
adc
div
mov
mov
cli
dec
stos
les
sub
mov
mov
imul
xor
pop
enter
enter
daa
xor
cld
jmp
js
jp
jecxz
nop
or
ret
dec
or
scas
rol
jmp
sahf
add
lahf
cwde
ret
cmp
shl
adc
out
add
cmp
retf
inc
jp
(bad)
push
mov
add
adc
scas
(bad)
adc
ret
sti
pop
and
dec
cdq
jmp
sbb
fcomp
int
mov
inc
xchg
into
mov
fbstp
out
xor
jle
ds
jle
xchg
iret
cmp
js
enter
cmp
sbb
out
cmp
fistp
(bad)
out
dec
nop
shr
dec
data16
pop
scas
out
mov
mov
pop
sbb
sbb
xor
jge
es
fist
sub
xchg
fdivr
push
or
loop
sub
dec
or
push
lea
test
dec
mov
test
pusha
test
pop
xchg
dec
mov
push
in
daa
fnsave
or
sahf
pop
fcomp
dec
arpl
or
xor
sub
or
pop
pop
popa
mov
clc
test
mov
movs
mov
jb
das
and
enter
dec
out
adc
adc
inc
xchg
xchg
xchg
mov
inc
xchg
ins
shr
and
fs
bound
xchg
push
dec
jp
(bad)
adc
pop
js
outs
xchg
fwait
pop
fmul
aaa
mov
aad
jmp
mov
mov
cmps
lods
or
(bad)
xor
pop
cmp
enter
push
pop
setp
sti
(bad)
xchg
sub
test
stos
xor
loope
mov
aad
test
stos
jp
push
ss
es
sbb
dec
es
mov
mov
addr16
sar
hlt
adc
clc
loop
jo
enter
pop
cld
in
cmp
adc
push
adc
mov
lahf
inc
pushf
cmc
rcl
and
sub
scas
pop
or
into
inc
dec
test
xchg
dec
lods
or
repnz
and
jmp
bound
imul
pop
xor
mov
xchg
sti
mov
cmp
out
mov
inc
pusha
adc
je
mov
cmps
or
add
push
out
pushf
gs
dec
fs
jl
and
xchg
jae
mov
sbb
xor
mov
jae
call
dec
pop
mov
jns
sbb
jge
cmp
pop
clc
push
clc
mov
add
push
leave
ds
retf
sbb
push
sub
cmp
jbe
jl
popa
mov
test
pop
adc
add
pop
dec
xchg
call
dec
bound
pop
mov
fisubr
js
cmc
ja
jge
pop
sub
test
sub
das
or
mov
sbb
dec
sahf
cmp
cmp
out
push
js
test
ins
dec
jae
sub
movs
jns
cmp
(bad)
pushf
retf
xchg
into
add
mov
mov
jecxz
adc
sbb
sub
mov
pop
mov
call
pop
inc
mov
aas
popf
fdiv
imul
scas
inc
(bad)
mov
pop
or
nop
cmp
enter
cs
fild
add
sbb
or
stos
adc
push
sar
out
movs
sbb
pop
enter
mov
test
push
dec
shl
hlt
mov
mov
(bad)
int3
xchg
xor
in
scas
mov
mov
xchg
loopne
(bad)
ss
daa
mov
in
in
repnz
test
push
cli
fwait
test
pop
inc
mov
inc
out
out
repnz
sbb
pop
je
sub
pop
iret
fxch
les
bound
sub
out
movs
mov
add
out
adc
mov
or
cli
in
mov
fsubr
push
call
sar
arpl
test
or
int
popf
nop
repnz
(bad)
aas
imul
pop
int
lea
test
jp
sbb
dec
pop
int3
xor
inc
push
(bad)
xor
pop
arpl
mov
and
int
inc
xor
leave
lock
push
push
mov
cmp
outs
push
or
xchg
std
mov
cmps
and
repz
sub
adc
stc
mov
and
ins
sbb
push
xchg
and
pop
xlat
push
ds
in
sub
adc
retf
repz
loopne
test
jo
dec
daa
cmc
inc
stos
sub
fstp
in
punpckhbw
cdq
imul
mov
out
dec
jmp
pop
dec
push
and
inc
xchg
push
fwait
(bad)
sbb
fistp
push
cmps
call
and
push
ds
call
fs
sbb
pusha
xchg
adc
sbb
sbb
adc
test
cmp
out
pop
mov
inc
cmp
mov
rol
add
xor
cmc
arpl
and
retf
cmp
test
(bad)
xlat
xchg
cmp
dec
ds
push
aad
(bad)
sub
sbb
es
fidiv
in
cmp
dec
hlt
adc
sti
je
mov
leave
ret
jmp
les
mov
fnstsw
test
xchg
inc
retf
push
addr16
test
mov
nop
fcmovbe
fwait
repz
clc
ds
jmp
jae
sbb
mov
mov
mov
mov
jle
test
jne
lds
aaa
call
sar
scas
jg
int
test
jmp
pop
push
push
cmp
pushf
mov
push
mov
cmps
inc
movs
fsubr
sbb
add
push
test
sub
enter
push
add
nop
clc
dec
repz
sub
xchg
add
push
clc
inc
movs
loop
dec
movs
xchg
(bad)
jo
or
pop
fld
cdq
dec
push
call
sub
call
stc
repnz
rcl
mov
sbb
iret
push
paddusb
jecxz
cmp
test
cmc
scas
adc
movs
or
clc
mov
fwait
leave
(bad)
(bad)
mov
icebp
adc
cmp
je
movs
mov
xor
je
fiadd
aad
cmps
sbb
aaa
xchg
dec
imul
jmp
push
data16
jo
pop
pop
mov
lods
xor
out
fs
sub
sub
hlt
jge
mov
les
fwait
inc
dec
push
movs
push
ins
mov
daa
sahf
jge
imul
cmp
loopne
in
adc
repz
jmp
out
pop
jecxz
fs
xchg
sub
mov
pop
(bad)
arpl
adc
retf
inc
retf
icebp
mov
cmp
lds
mov
cmp
and
inc
pop
lahf
pop
inc
lods
mov
mov
fcmovnb
add
or
ss
mov
arpl
repz
aad
or
xor
das
lea
inc
mov
imul
mov
or
cmp
rcr
push
pop
push
push
jmp
adc
add
iret
jge
enter
xor
push
push
sbb
ret
jae
or
je
mov
lods
es
test
inc
outs
or
xchg
pop
mov
inc
xchg
jp
or
sbb
dec
jns
mov
mov
xor
and
cmp
push
and
sub
rol
sub
cmp
xchg
pop
jns
mov
mov
enter
xchg
lahf
pusha
cmp
dec
ins
sbb
mov
push
lahf
push
loope
cld
lea
in
or
mov
mov
inc
mov
push
jp
lods
sti
aad
xchg
push
mov
pop
push
cmps
xchg
ret
push
sbb
jge
retf
pop
imul
push
ja
and
daa
in
dec
xor
es
clc
(bad)
je
push
movs
fst
mov
std
pop
lea
mov
xor
sub
push
inc
mov
dec
or
pop
scas
cld
jle
lock
or
sbb
dec
push
jbe
xchg
push
cli
mov
mov
and
gs
test
push
adc
dec
mov
cld
and
pop
or
mov
cmps
js
cli
jg
cs
cli
fwait
outs
in
into
scas
or
jae
sub
cmps
es
mov
sub
pop
jbe
clc
(bad)
retf
mov
clc
stc
mov
mov
sub
jle
mov
mov
pop
push
ins
push
add
cwde
xor
push
rcr
rep
cmp
pop
test
movs
and
mov
mov
xchg
lods
outs
aad
add
das
stc
push
mov
dec
sub
pop
mov
jp
loop
test
inc
jb
jge
mov
push
or
sub
or
dec
repnz
gs
test
jg
pusha
mov
mov
hlt
shl
adc
dec
jecxz
inc
outs
dec
ret
aad
movs
inc
or
sbb
into
mov
push
mov
nop
data16
xchg
inc
and
pushf
push
xchg
add
ret
jae
xchg
mov
leave
push
xor
or
push
call
lods
popa
fdiv
pop
data16
xchg
dec
push
outs
inc
cld
push
sbb
jns
test
mov
dec
or
(bad)
mov
test
sbb
add
stos
int
(bad)
pop
imul
(bad)
pop
mov
stos
pop
xlat
sub
les
outs
mul
pop
dec
daa
adc
pusha
movs
mov
movs
shl
aad
and
push
inc
push
outs
or
(bad)
mov
or
(bad)
and
(bad)
fwait
cmp
push
jae
(bad)
enter
std
call
adc
lods
sub
imul
cmp
cdq
or
js
call
cmps
jbe
les
call
adc
(bad)
fcmovnbe
inc
pop
aaa
outs
in
sbb
mov
jbe
sub
mov
dec
adc
lock
mov
xor
fsub
pop
(bad)
mov
(bad)
inc
inc
or
stos
ja
(bad)
call
cmps
mov
inc
mov
adc
mov
ror
call
adc
push
or
fbstp
jo
mov
cmps
adc
fiadd
mov
cmp
imul
arpl
mov
test
das
rcl
ins
push
aad
push
retf
pop
sar
add
fucomip
jno
outs
aaa
xlat
addr16
or
aaa
ret
cwde
sub
daa
(bad)
movs
cs
stc
xor
(bad)
lods
push
popa
add
pop
add
pop
arpl
mov
pop
dec
mov
js
add
gs
test
xor
fs
jns
(bad)
je
jmp
mov
(bad)
mov
das
cwde
inc
sub
adc
shl
stos
xchg
fisttp
push
mov
cmp
test
or
sti
fs
sub
pop
jbe
or
jns
stc
out
repnz
cmp
addr16
add
jo
dec
pop
jns
fdivr
aad
pop
mov
pushf
mov
add
cdq
jecxz
cmp
jle
cli
dec
pop
ja
out
test
sub
jne
les
and
inc
or
pop
retf
mov
into
push
inc
dec
sahf
cwde
test
loop
jno
and
sbb
stc
fs
jae
int3
inc
pop
loop
and
or
sbb
fucomi
pop
and
cmp
mov
xor
jnp
mov
add
enter
not
sbb
mov
popfw
(bad)
mov
jmp
mov
dec
jo
xor
inc
movs
mov
arpl
icebp
ja
jmp
addr16
pop
jle
cmp
inc
adc
mov
push
lods
das
hlt
jle
jo
arpl
(bad)
and
xor
mov
mov
mov
push
inc
inc
or
push
movs
xchg
mov
push
inc
call
std
in
cmps
sar
hlt
lahf
and
jmp
pushf
add
jge
jns
mov
outs
cmp
(bad)
sahf
xacquire
js
jnp
mov
and
test
sbb
pop
sbb
or
mov
ret
mov
data16
sub
imul
out
adc
add
mov
sub
pusha
xchg
adc
cmp
cmc
add
out
mov
imul
mov
cmps
xchg
sbb
xchg
cmp
and
xor
xchg
push
(bad)
fnstsw
fiadd
sbb
bound
cmp
(bad)
and
jnp
inc
xor
les
ficomp
xchg
inc
inc
add
je
fwait
aam
popf
mov
in
jno
cdq
or
sbb
or
mov
ja
(bad)
addr16
xor
scas
mov
cmp
mov
aaa
cmp
jp
ins
cmp
cmps
into
aad
jmp
xchg
or
ret
imul
jno
sbb
and
or
mov
cli
xchg
pop
dec
inc
inc
addr16
ja
xor
js
cmps
test
pushf
jbe
daa
inc
sub
mov
sub
mov
into
mov
(bad)
mov
loopne
cdq
into
ds
out
inc
fwait
mov
jbe
fst
ds
push
mov
ret
ret
add
pop
add
mov
add
sti
add
hlt
push
xor
daa
xchg
fcmovnbe
fcomp
and
jmp
jg
adc
pushf
inc
test
aad
push
jle
add
cmp
push
push
test
push
jns
ins
mov
pop
retf
ror
pop
pop
mov
sahf
test
sub
jmp
jno
movups
and
add
push
cmp
adc
mov
xor
xlat
out
jns
mov
retf
pop
je
fs
in
adc
iret
aaa
fs
popf
pushf
js
mov
fisubr
pop
jne
dec
pop
cdq
cli
stos
xchg
cs
or
(bad)
mov
repz
pop
mov
into
(bad)
pop
test
stos
popa
add
mov
fadd
(bad)
in
in
push
xchg
popf
sahf
js
rcl
test
or
adc
adc
(bad)
jmp
add
loope
cmp
cmp
cmp
aam
adc
mov
mov
pop
xor
mov
pop
cmp
mov
xchg
cmp
in
or
enter
sub
sub
push
stos
ins
and
(bad)
or
(bad)
(bad)
push
add
ret
ss
sub
pushf
loop
loop
in
popa
pop
cmp
or
add
out
push
xor
or
push
jmp
(bad)
add
cs
pop
mov
mov
lods
aad
loopne
push
es
aad
xacquire
push
mov
icebp
call
push
mov
outs
push
mov
pusha
int
mov
and
not
push
mov
vmovapd
enter
or
jmp
enter
inc
cmc
mov
or
push
inc
(bad)
mov
test
popa
hlt
rcr
bound
mov
and
pop
mov
aas
mov
pop
jno
ja
xchg
and
inc
or
pop
cmps
xor
sbb
cmp
(bad)
retf
dec
pusha
xchg
imul
mov
icebp
gs
popf
pop
pop
xchg
sub
scas
stc
fdivr
xchg
and
(bad)
push
ja
mov
sub
jg
inc
inc
repnz
jae
fcom
pop
cmp
arpl
mov
gs
and
sbb
inc
mov
arpl
pop
and
mov
mov
sub
dec
dec
pop
xor
jge
pop
sbb
jns
idiv
xchg
shl
in
repnz
out
(bad)
sbb
dec
sub
ins
int3
jp
or
es
xor
cmps
or
jg
xor
shl
cmp
inc
push
sbb
cwde
pop
test
int
pop
imul
(bad)
out
(bad)
sbb
iret
adc
lock
(bad)
mov
mov
cmp
push
sbb
imul
xor
in
xchg
repz
cmp
lds
xor
mov
add
push
lods
icebp
imul
or
rcr
and
sti
inc
pop
mov
je
retf
sahf
nop
ror
ret
cmp
mov
mov
add
inc
les
les
dec
cdq
das
nop
in
mov
stos
and
jg
aaa
adc
xchg
mov
mov
pushf
sub
dec
pop
call
add
or
(bad)
fbstp
shl
pop
fistp
dec
push
mov
sti
or
jge
aaa
xor
je
mov
cmp
or
js
xor
mov
or
mov
sbb
inc
les
and
sbb
jne
lods
ret
(bad)
ja
test
data16
mov
repnz
lods
sahf
adc
lahf
ret
loopne
sub
cmc
push
je
sbb
das
iret
push
daa
and
test
adc
loope
arpl
fstp
or
push
adc
jne
ficomp
mov
add
or
fsub
idiv
or
mov
cli
mov
call
inc
mov
inc
test
sbb
jg
fidivr
jo
gs
dec
clc
push
retf
push
cmp
and
in
push
stc
xchg
mov
jge
sbb
xchg
call
sbb
sub
ins
lods
sub
and
push
add
and
mov
jbe
sub
mov
mov
mov
jmp
neg
add
mov
sbb
fisubr
out
das
sbb
rol
imul
mov
and
ja
icebp
push
jle
fwait
mov
sbb
mov
les
repnz
pop
cmp
inc
mul
dec
int3
scas
add
xor
popf
outs
mov
shl
sbb
repnz
mov
je
sbb
(bad)
bound
out
repz
or
inc
xor
lock
fs
movs
cmp
call
sub
cmp
stos
dec
sbb
cmp
mov
and
sbb
and
cli
or
loope
sub
mov
hlt
retf
fcomp
or
loop
cs
mov
cmp
sbb
adc
test
jecxz
cmp
idiv
lahf
inc
cli
and
cmp
xchg
sub
mov
addr16
scas
sub
and
xchg
loop
sub
and
idiv
movs
or
ins
outs
add
loop
ja
inc
jo
ficom
repnz
into
repnz
js
or
dec
fxch
outs
ins
push
(bad)
mov
jbe
or
out
and
pusha
imul
loopne
cwde
call
adc
inc
xor
test
cmp
jl
xlat
mov
pop
cmps
inc
cmp
mul
jno
add
mov
push
fwait
inc
xchg
stos
aaa
push
dec
inc
sub
je
cmc
in
jmp
lods
dec
fs
mov
pop
(bad)
sbb
rol
xor
push
jecxz
out
push
dec
daa
xor
sub
adc
mov
adc
inc
ds
loope
jmp
popf
repnz
mov
data16
pop
xor
cmc
fld
jp
rcl
mov
into
aaa
repz
push
jge
and
ins
fxch
test
leave
lds
mov
fwait
test
dec
scas
jle
cmc
and
ret
xor
(bad)
(bad)
mov
imul
and
add
cwde
aam
lea
add
xchg
pop
jb
daa
and
rcr
push
loope
dec
arpl
mov
pop
or
push
mov
imul
xor
inc
pop
jmp
mov
sub
jmp
es
xor
mov
pop
xchg
sub
out
sbb
pop
sub
fisttp
jecxz
inc
dec
add
movs
pop
enter
sub
inc
mov
push
mov
outs
(bad)
pop
imul
add
cli
xor
shl
lds
out
cld
sar
fwait
test
xchg
jnp
nop
inc
jecxz
(bad)
sbb
xchg
fld
mov
and
iret
add
stc
jnp
cmp
and
jno
into
sbb
pop
jbe
les
arpl
inc
mov
dec
sub
lods
ins
loope
mov
sahf
movs
jge
pop
and
sbb
and
add
stos
outs
mov
jmp
ds
iretw
lods
mov
cli
dec
ja
fsubp
leave
enter
push
push
mov
mov
or
jl
addr16
lods
in
cmp
in
mov
add
pop
cmp
push
iret
and
fild
int3
daa
pop
inc
lock
call
iret
mov
push
leave
cmc
fdiv
mov
add
test
popa
push
daa
push
sub
iret
xchg
mov
mov
cmc
test
push
mov
cmps
cmp
cmp
outs
mov
jle
mov
out
call
xchg
or
je
mov
shl
cld
adc
sub
jge
cmps
pop
jb
push
xor
popa
(bad)
gs
dec
outs
pop
into
jl
lea
je
mov
ins
stc
pop
inc
lds
cmp
int3
stos
(bad)
push
scas
push
stc
jl
add
shl
xchg
imul
ror
inc
sub
jbe
daa
xor
jecxz
cmp
pop
test
popa
(bad)
fdivrp
test
(bad)
cli
add
fiadd
fild
xor
out
lods
mov
xchg
xlat
sub
pop
mov
jns
adc
ja
dec
les
cmc
jae
fisubr
sbb
fwait
jne
in
sub
out
cmc
lea
dec
enter
test
dec
std
or
jmp
dec
aaa
ss
out
and
(bad)
and
aaa
cmp
or
sbb
cld
clc
jae
cmpxchg
pop
loop
cmp
or
pop
cmp
aas
mov
push
pushf
fldl2e
xchg
fmul
ds
jns
jno
pop
cmps
mov
xchg
fistp
jo
test
xchg
popf
outs
push
cld
fild
daa
frstor
cmp
outs
pop
arpl
mov
jo
enter
cwde
add
(bad)
pop
jmp
retf
sub
cld
frstor
(bad)
or
mov
sub
xchg
sahf
in
es
sar
scas
mov
ja
or
das
fisubr
sub
mov
pop
add
inc
dec
mov
aad
call
scas
push
out
xchg
std
int
pop
xor
sbb
add
or
mov
popa
mov
or
(bad)
inc
dec
or
aam
clc
int
sub
scas
js
push
jp
into
inc
xchg
pop
test
pop
xchg
cmp
adc
enter
cwde
pop
cwde
inc
push
sbb
int
cmps
test
hlt
push
add
mov
rol
fwait
loope
xchg
xchg
in
xor
dec
outs
mov
out
shr
std
and
js
mov
dec
dec
inc
and
jae
and
sub
lea
repnz
jmp
pop
fs
mov
test
rol
in
fdecstp
icebp
sbb
arpl
inc
add
push
outs
inc
aam
loope
je
mov
or
mov
shl
sub
pop
push
inc
test
jns
pop
dec
leave
sub
pop
ss
or
cmp
cwde
pop
cmp
and
fldcw
sbb
shl
xchg
mov
fcomp
test
jno
push
loop
jb
add
xchg
sub
or
imul
jp
inc
push
xlat
xchg
fstp
outs
xor
sbb
lds
sub
or
add
and
lock
cmp
test
push
(bad)
xchg
das
in
and
fistp
sbb
movs
(bad)
mov
movs
push
fild
repz
retf
and
or
movs
nop
loopne
retf
jecxz
pop
idiv
xchg
nop
mov
test
or
pushf
test
int
jno
push
shl
and
sbb
inc
(bad)
jae
xor
icebp
adc
mov
sub
push
dec
and
pop
jle
add
sbb
idiv
fst
adc
pop
or
dec
xlat
je
pop
stos
aaa
add
add
pop
dec
inc
inc
dec
push
cmp
cmp
(bad)
ja
sbb
pop
shl
sbb
sbb
add
sbb
jns
dec
int3
aaa
jno
jmp
mov
loopne
clc
pop
adc
push
jp
in
xchg
dec
les
xor
adc
pop
retf
push
retf
pop
sbb
sub
cld
push
adc
div
push
push
ficom
inc
push
mov
xor
pop
adc
sub
sti
imul
push
nop
daa
inc
repnz
ja
std
push
stos
inc
in
jae
pop
mov
int3
add
or
sub
in
mov
mov
inc
mov
shl
mov
out
and
inc
shr
rcr
popf
jg
and
cmp
in
ss
(bad)
cld
dec
push
xor
pop
sbb
popf
ds
push
push
repnz
xchg
push
sbb
xchg
clc
leave
(bad)
mov
adc
xor
lods
mov
cmp
xchg
sbb
pop
push
rcr
xchg
cmp
jmp
fist
or
rol
pop
into
jmp
sbb
adc
dec
(bad)
sub
mov
pop
jge
xchg
inc
inc
pushf
call
mov
out
movzx
enter
inc
dec
jp
inc
and
jp
mov
lods
sbb
xchg
fistp
retf
ffree
xlat
cmps
push
xchg
test
cmps
mov
into
jne
fcomi
outs
xchg
and
(bad)
popa
jnp
stc
jecxz
fld
fwait
xchg
mov
inc
les
push
sti
neg
call
sbb
adc
loope
neg
shl
ret
fisubr
pop
ds
shl
(bad)
sbb
sbb
and
xor
push
add
add
mov
add
enter
dec
mov
sub
jecxz
ficomp
aas
enter
mov
in
repnz
mov
movs
iret
shr
ins
(bad)
icebp
dec
movs
push
mov
fdiv
sbb
and
(bad)
xor
xchg
lods
test
and
mov
je
jb
cwde
pop
sub
loopne
xlat
iret
xchg
or
arpl
in
stos
in
imul
(bad)
add
(bad)
fsub
push
retf
xchg
cli
js
or
fisub
and
(bad)
imul
push
imul
mov
div
(bad)
and
xlat
push
mov
push
push
add
(bad)
jbe
mov
cld
sub
dec
aas
cmps
outs
mov
repz
and
xchg
mov
pop
bound
jmp
xchg
jo
cmps
cdq
mov
push
es
ret
xor
mov
push
jge
dec
add
in
loopne
cmps
inc
test
xor
sbb
and
js
and
adc
xchg
loope
or
les
add
sbb
mov
cmps
xor
mov
sbb
sbb
mov
aas
dec
jns
inc
cmp
stos
rcl
inc
ins
retf
pop
test
jne
les
test
push
xlat
neg
retf
rcr
adc
jp
pop
mov
(bad)
cdq
int3
mov
int3
push
gs
cdq
loope
mov
cmp
iret
push
sbb
cmp
sub
clc
mov
jo
or
pop
scas
aaa
sub
mov
mov
adc
stc
data16
jge
pushf
int3
sbb
je
xchg
adc
call
rol
and
clc
pop
inc
ss
jl
mov
jg
mov
(bad)
leave
adc
aaa
mov
and
ja
fidivr
mov
aas
inc
pop
jle
cwde
cld
pop
ins
hlt
cmp
and
hlt
ror
call
push
inc
(bad)
pop
xchg
mov
jnp
std
call
loopne
sbb
push
lock
ja
nop
es
mov
out
pop
jle
dec
adc
inc
adc
das
jo
(bad)
pop
iret
(bad)
mov
and
popa
retf
mov
(bad)
out
dec
adc
and
ret
pop
cmc
mov
jp
retf
pusha
ret
aam
pop
sbb
xor
jns
test
cld
lods
jmp
jno
ds
xchg
dec
jno
cmp
retf
jecxz
add
ins
lods
frstorw
jp
pop
ss
jno
xor
sti
into
rep
cmp
imul
stos
sahf
mov
jo
out
xor
inc
bound
mov
test
sahf
xor
(bad)
adc
popf
dec
int3
cs
clc
leave
cs
xor
inc
push
sbb
inc
jle
mov
add
jns
jne
xchg
or
aad
hlt
outs
and
and
add
pop
repnz
push
cwde
aam
adc
ret
mov
mov
and
jbe
mov
loope
mov
out
sub
test
scas
aad
outs
pop
ins
test
xchg
xor
fisubr
cmp
xchg
aas
fbld
or
inc
add
pop
popf
mov
call
test
push
dec
mov
clc
imul
cmp
dec
add
adc
daa
xor
(bad)
pop
frstor
outs
mov
cmp
stc
push
rcl
lds
shl
add
fst
push
rcr
and
mov
outs
rcl
arpl
enter
mov
call
test
pop
in
xchg
cli
add
loopne
push
fisttp
inc
call
add
cli
cmp
imul
stc
push
xchg
ss
inc
pop
jne
or
mov
mov
sbb
or
in
push
push
adc
dec
gs
and
cdq
(bad)
and
outs
mov
push
fsub
push
ja
push
xchg
and
fs
into
popf
mov
bnd
dec
push
stos
fsubr
fld
das
mov
add
jl
pop
push
xor
js
outs
xchg
lods
fild
or
jmp
mov
sbb
retf
jp
leave
lds
jne
pop
jp
pop
and
pop
repnz
imul
nop
xor
fmulp
jns
mov
xor
idiv
xchg
xchg
xor
mov
jmp
adc
je
repnz
aad
mov
xor
outs
ss
dec
repz
xor
fidivr
(bad)
xchg
push
push
cli
retf
mov
(bad)
jb
dec
ds
or
cld
aam
adc
neg
and
ja
adc
jge
push
jmp
pop
stc
mov
mov
or
scas
jge
mov
mov
out
shl
adc
dec
mov
jae
fistp
and
dec
cli
mov
xor
fldcw
enter
cmc
imul
add
mov
mov
fst
xor
cmp
xor
mov
stc
dec
pop
test
dec
sahf
push
xchg
popa
fistp
leave
imul
in
and
jp
cmp
inc
scas
jg
xchg
and
add
das
xchg
push
adc
mov
jno
ss
cmp
sub
rcr
clc
add
mov
mov
out
shl
mov
cdq
push
push
jge
inc
jp
out
adc
(bad)
addr16
outs
jecxz
out
fsub
pop
les
pop
pop
ret
pop
jle
out
dec
ja
dec
fwait
cwde
fbstp
mov
xor
cmp
popf
pop
pusha
ret
shl
sub
xor
dec
xchg
call
push
cmps
rcr
dec
xor
fwait
lods
xchg
jae
stos
jae
lds
sub
pop
in
sbb
pop
jne
repz
call
inc
lods
retf
dec
fsubrp
xor
inc
ret
jmp
movs
push
mov
mov
in
xchg
imul
call
mov
push
add
inc
es
push
movs
ds
xor
add
lahf
scas
cmc
rep
push
sahf
jmp
cdq
push
jo
pop
(bad)
mov
daa
fdivrp
dec
mov
gs
in
mov
dec
pop
sub
loop
retf
cmp
cmp
nop
sub
call
inc
xchg
stc
dec
xchg
xchg
push
jae
test
push
ficom
cmc
mov
test
inc
or
pop
jle
xchg
add
sbb
jl
outs
xor
mov
repnz
out
jmp
jg
shr
das
push
sbb
push
adc
pop
ins
jae
mul
sub
sti
pop
ror
hlt
mov
push
cwde
xchg
push
pop
or
or
adc
leave
pop
test
dec
cmp
xchg
sbb
adc
or
sub
das
push
addr16
sbb
jbe
movs
cmp
lock
(bad)
push
pop
bound
js
ror
inc
test
nop
xchg
pop
out
icebp
push
lods
leave
lods
cdq
lds
sub
or
and
dec
lds
xor
sar
sub
adc
and
adc
int
sub
xchg
stos
call
adc
jbe
jle
mov
mov
dec
push
or
cmp
jmp
push
nop
or
pop
inc
aad
popa
xchg
adc
add
jmp
xlat
(bad)
pop
iret
movs
sbb
clc
jno
adc
mov
push
jl
xchg
pop
pop
cmp
cmp
cwde
xchg
not
mov
mov
mov
test
in
enter
jecxz
scas
imul
jmp
loopne
pop
cdq
adc
cdq
sbb
dec
push
call
test
and
mov
xchg
mov
xor
or
dec
sbb
(bad)
adc
cwde
jle
neg
stc
mov
add
fwait
and
dec
sar
bound
dec
jp
sbb
sti
js
int3
jl
loopne
pop
xor
cmps
jecxz
mov
nop
(bad)
inc
fnstsw
push
jmp
cmps
call
test
adc
lahf
and
jae
adc
fstp
hlt
pop
push
lods
mov
(bad)
and
rol
(bad)
into
hlt
outs
or
push
adc
int
ret
push
add
or
lods
dec
fs
ja
mov
and
or
lock
xor
js
fsubrp
jne
jbe
jb
adc
cmp
in
fwait
jns
inc
mov
mov
adc
rcr
frstor
ds
mov
es
mul
fnstsw
dec
xor
cmp
mov
jns
xchg
sub
push
in
cmc
(bad)
lods
ss
cmp
pop
dec
push
or
add
stos
rol
loopne
jo
out
les
mov
out
xor
inc
inc
call
in
mov
jmp
or
sub
jge
xor
(bad)
and
jb
mov
mov
cmc
xchg
shr
adc
and
mov
inc
popf
sti
lock
icebp
mov
clc
inc
ds
nop
outs
and
nop
inc
xchg
inc
add
mov
xchg
jl
das
int
cmc
push
or
jnp
pop
pop
test
sbb
les
xchg
addr16
int3
ds
add
push
das
add
stc
ss
sti
cmp
mov
sub
jo
pushf
inc
cs
jnp
es
pop
push
rcr
xor
(bad)
repnz
arpl
jmp
retf
mov
pop
loopne
mov
fcmovb
push
or
mov
(bad)
pop
push
mov
mov
or
and
mov
xor
add
test
cld
in
stos
sahf
cmp
cld
popa
or
mov
xchg
cld
fwait
push
mov
jne
iret
call
add
mov
and
mov
inc
cmc
adc
mov
fnstcw
jg
cdq
cmp
mov
mov
xor
pushf
arpl
gs
xchg
adc
dec
mov
sti
aas
xor
js
push
mov
and
sbb
xor
pop
call
aam
cmc
xchg
adc
cwde
js
inc
mov
test
repz
add
cmp
and
push
add
mov
inc
in
clc
jno
lods
sbb
mov
add
mov
mov
inc
mov
out
int3
loop
push
xor
mov
icebp
cmp
xor
or
adc
mov
push
in
sbb
inc
or
sub
add
inc
out
xchg
imul
mov
xchg
pusha
jge
fnstenv
out
fcmove
pop
adc
loopne
inc
loopne
inc
outs
xor
sbb
icebp
mov
test
repz
jae
(bad)
push
cmps
sbb
mov
mov
adc
mov
std
ret
repnz
jmp
cmp
jnp
test
rcl
xchg
stos
and
leave
ds
popf
sub
or
cli
jmp
xchg
inc
cmp
add
inc
ficomp
mov
cmp
jg
push
fldcw
mov
fwait
out
mov
clc
add
jb
imul
sbb
inc
jbe
or
mov
dec
fld
int3
retf
adc
ins
jecxz
dec
fidivr
clc
test
inc
enter
je
stc
adc
jo
or
cmp
call
xchg
aaa
adc
mov
or
fimul
xor
lea
xchg
iret
pop
int3
dec
leave
jbe
dec
rcl
int
sbb
adc
loopne
cmc
ins
adc
xor
xlat
cmp
je
arpl
xor
in
adc
sub
or
ja
nop
fwait
inc
jl
sbb
fld
or
js
dec
cwde
es
mov
adc
cld
fstp
sub
sbb
lahf
push
ja
aad
aas
add
icebp
sar
movs
mov
xchg
stc
inc
mov
(bad)
mov
sub
jno
xchg
adc
loop
inc
dec
push
into
mov
popf
pop
mov
stc
push
imul
xchg
push
mov
jge
inc
out
stos
inc
fs
or
mov
fcomp
mov
xchg
pop
fadd
cmp
test
and
xchg
push
lds
out
test
mov
(bad)
lock
mov
int
or
test
movs
push
inc
loope
mov
push
fcmovne
adc
retf
(bad)
mov
add
and
sahf
nop
(bad)
cmc
jnp
popa
sbb
pop
dec
ds
test
xchg
gs
inc
mov
add
xor
inc
ins
xchg
xchg
int
sbb
push
pop
jnp
and
cmp
cmps
xchg
call
mov
mov
adc
dec
adc
outs
xchg
push
aam
retf
push
jp
dec
outs
daa
cld
or
aam
adc
pop
pop
and
dec
dec
sahf
ffree
(bad)
ret
(bad)
ins
pop
es
push
pop
mov
xchg
fdiv
xchg
sub
push
adc
add
lea
inc
stos
pop
pushf
add
sbb
lahf
add
push
push
or
fbstp
xor
mov
or
shl
test
vpcomw
cmc
scas
addr16
call
add
and
mov
mov
add
out
inc
sub
jo
ds
xchg
pop
call
jge
loop
call
pusha
aaa
iret
out
mov
cmp
mov
add
mov
out
(bad)
cmp
inc
arpl
push
cmp
lds
out
inc
jmp
jl
movs
mov
push
data16
outs
sbb
popa
or
rep
xor
shld
enter
cmovae
sub
inc
adc
imul
bound
fxch
inc
or
mov
mov
sub
adc
add
sub
(bad)
aam
arpl
(bad)
mov
sbb
jmp
fsub
pop
(bad)
xchg
mov
outs
aas
not
jno
lds
push
inc
push
rcr
add
je
sub
cmp
imul
mov
sub
lahf
in
jnp
pop
and
fidiv
jl
cmc
mov
jmp
dec
std
fistp
popf
pop
cmps
neg
jg
adc
xor
test
add
pop
outs
sub
xchg
cli
movs
pop
inc
ins
enter
je
mov
aam
in
xchg
lock
repz
push
and
scas
jns
xor
lods
jb
push
jmp
stos
loope
repz
cmps
jb
mov
dec
add
mov
mov
arpl
pop
jmp
mov
data16
mov
in
pop
loopne
push
adc
mov
adc
jae
iret
enter
loopne
ja
stos
iret
bnd
clc
hlt
(bad)
jmp
adc
pop
cmc
pop
dec
jecxz
loope
sti
or
mov
cmp
out
inc
ficomp
cmp
sbb
popf
int3
jno
clc
outs
daa
pop
lock
fsubr
nop
dec
jne
dec
dec
mov
mov
movs
push
xchg
inc
inc
cmp
mov
ja
push
push
daa
cmps
fdivr
popa
fisub
(bad)
sahf
scas
in
in
loop
loopne
and
sbb
xchg
retf
xor
out
fs
adc
popa
inc
scas
mov
dec
xor
and
lods
stos
xchg
mov
cmp
sbb
xor
jmp
xchg
jecxz
add
rol
imul
lods
xchg
scas
push
and
arpl
dec
and
mov
push
iret
cli
mov
xchg
mov
mov
daa
jp
push
shl
sub
lds
or
sub
pop
mov
jno
mov
pop
xchg
cdq
es
ret
sbb
and
sub
sub
test
cmp
add
jmp
jmp
pop
in
ss
and
iret
push
in
call
jecxz
fistp
int3
(bad)
stc
pop
inc
sub
cmp
rol
sbb
sar
aad
(bad)
adc
fiadd
lods
iret
aam
daa
add
or
push
cmp
movs
mov
std
add
test
inc
jmp
loope
pop
stos
and
jne
cmp
mov
xor
adc
push
mov
inc
sbb
pop
push
out
sbb
inc
mov
mov
cmps
sar
cmp
mov
sbb
out
ret
rep
pop
add
inc
lock
jecxz
retf
jg
add
jne
mov
inc
shl
sbb
or
iret
hlt
sti
push
dec
jo
dec
xchg
add
pop
fsubrp
inc
loopne
imul
ret
mov
jo
pop
setne
daa
push
jbe
or
sbb
mov
or
in
push
shl
push
jle
nop
mov
jg
in
cld
loop
cmp
aas
imul
dec
sbb
sub
dec
mov
dec
test
and
or
int
cmps
add
and
xchg
dec
inc
inc
repz
(bad)
or
jg
mov
loop
sahf
push
dec
xchg
dec
out
retf
sbb
or
addr16
jns
(bad)
mov
mov
xor
push
or
mov
sbb
inc
jno
cwde
xchg
xchg
push
les
call
mov
pop
out
xor
mov
js
stc
ins
sub
fcmovu
std
out
imul
shl
jb
sub
cmp
mov
in
in
not
pop
test
out
sub
sub
fsubrp
mov
push
or
sub
jno
mov
sbb
and
xchg
mov
out
inc
dec
pushf
adc
lods
fmul
sbb
xchg
ins
imul
add
(bad)
cmp
xchg
pop
enter
jae
push
cmc
push
ficom
(bad)
enter
stc
test
mov
or
xor
dec
pop
and
in
pop
ss
xor
add
enter
push
cmc
add
sbb
pusha
inc
push
mov
xor
mov
(bad)
xor
cld
mov
jbe
mov
shr
and
call
repnz
cs
or
inc
ins
arpl
jbe
je
mov
popf
pop
sti
jp
stos
cmp
stos
ror
cmp
mov
retf
push
inc
sub
mov
xchg
push
pop
daa
pop
inc
enter
xchg
xchg
ret
xor
jb
inc
(bad)
push
or
aaa
dec
mov
fwait
ins
and
cmps
xchg
sahf
dec
and
ret
aas
dec
lods
xor
and
mov
icebp
imul
test
inc
mov
add
(bad)
or
push
retf
js
dec
mov
and
pop
push
fcomp
int3
and
inc
or
std
or
and
cli
inc
shl
outs
mov
movs
aad
sub
stc
push
outs
mov
add
ror
jnp
fcomp
add
aas
fistp
mov
ret
in
into
(bad)
(bad)
xor
ret
das
icebp
pop
outs
jp
push
sbb
add
ret
xor
(bad)
fwait
ret
mov
mov
jne
dec
cmps
cdq
sub
aam
mov
mov
or
cwde
lock
ret
bound
lods
xchg
lods
ja
jecxz
fwait
daa
xchg
scas
mov
jl
mov
add
cmp
inc
mov
dec
out
or
xchg
cwde
ds
sub
les
mov
xor
mov
mov
mov
lahf
popa
pop
xor
jb
jae
xchg
and
mov
jnp
add
int
inc
movs
sub
mov
sub
js
push
mov
stos
mov
out
aam
shl
ins
es
fld
repz
int
lea
inc
cmp
jns
xchg
lock
fnstsw
in
jle
mov
ss
add
sbb
pop
push
aaa
dec
mov
cs
in
dec
adc
rol
push
adc
rcl
std
sbb
or
mov
and
lods
ja
sbb
gs
xchg
test
adc
sti
aam
or
nop
ds
pop
or
adc
int3
fcomp
mov
mov
pop
and
or
aaa
mov
jl
xlat
jecxz
clc
hlt
pop
add
je
push
pushf
and
(bad)
sub
aas
push
fwait
inc
and
lock
neg
shl
pop
das
jbe
pop
icebp
sub
or
gs
dec
push
aam
adc
ds
xchg
push
mov
jecxz
sahf
lock
sbb
add
mov
in
es
push
xchg
bound
mov
mov
mov
outs
addr16
xchg
cmp
fwait
mov
sbb
mov
fidivr
xchg
sub
cs
jne
ss
cmps
pop
cmp
ficomp
cdq
push
cmp
movs
lods
mov
iret
fucomp
std
retf
rol
aad
push
adc
cs
pop
hlt
sub
or
ins
jmp
cmp
inc
in
xlat
(bad)
and
sbb
nop
xor
and
add
jp
dec
jg
movs
mov
outs
mul
and
jb
inc
fisttp
mov
dec
shl
dec
inc
clc
pop
push
(bad)
fild
or
cmp
retf
call
sbb
mov
jb
inc
mov
dec
aaa
jle
jmp
and
out
nop
jnp
or
or
pushf
pcmpeqw
clc
push
jle
jb
mov
inc
jmp
jg
xchg
cmp
test
jns
lea
fstp
sbb
mov
and
pop
and
loop
inc
into
cmp
adc
es
mov
arpl
(bad)
fnstsw
test
fadd
mov
xor
fimul
inc
(bad)
outs
inc
push
jbe
int
cdq
jg
sbb
xor
pushf
cmp
mul
push
mov
jae
dec
and
mov
push
jl
pop
add
not
sub
imul
pop
mov
fwait
(bad)
data16
pop
xor
fdiv
cmp
fmul
fisttp
inc
push
mov
loop
inc
shr
sub
pop
loope
xchg
or
adc
ret
retf
adc
gs
pusha
cs
inc
pop
add
outs
dec
xchg
xchg
les
jo
xlat
inc
and
sbb
(bad)
daa
fistp
int3
pop
and
jg
sbb
pop
sbb
xor
out
mov
into
addr16
xor
loopne
dec
jge
scas
add
lock
inc
cmp
inc
sbb
test
or
jb
popf
scas
icebp
cmps
shr
pushf
and
out
movs
lods
and
repnz
mov
sbb
inc
pushf
mov
icebp
into
jle
cmp
add
mov
jp
call
lea
xchg
mov
jnp
test
dec
mov
mov
xchg
pop
push
mov
out
ds
cs
sbb
add
cs
fist
or
mov
fisttp
loope
inc
stos
push
jb
fistp
addr16
loopne
or
mov
scas
dec
jl
je
gs
loopne
sbb
mov
repnz
push
jmp
mov
push
nop
and
pop
pushf
imul
xchg
shl
repz
gs
mov
xchg
cmp
stos
pop
jnp
iret
add
push
xchg
arpl
adc
int3
mov
test
shr
xor
ror
outs
or
fdivr
and
hlt
pop
dec
mov
(bad)
jne
jp
cwde
idiv
ins
into
pusha
sub
dec
xor
sbb
loopne
push
jle
stos
cmp
jg
push
push
loop
mov
cmp
xchg
jecxz
pop
stos
(bad)
cmps
shl
shl
fwait
xchg
mov
sahf
call
leave
hlt
pop
xor
dec
call
cdq
sub
fwait
iret
movs
mov
repz
adc
sahf
xor
sbb
sbb
or
fs
jns
cwde
mov
pop
retf
sar
mov
aam
inc
inc
xchg
shr
xchg
push
rdmsr
mov
mov
imul
pop
enter
into
add
push
lods
mov
xchg
push
and
pop
pop
fwait
sahf
and
mul
mov
dec
xchg
mov
leave
dec
out
ins
aam
dec
jnp
es
mov
sub
xchg
cmp
sbb
pop
sbb
add
pop
fadd
imul
lds
pop
lods
movs
ret
mov
aad
stc
or
ficomp
ins
sub
xor
hlt
sbb
lods
xchg
add
mov
lock
push
daa
ja
push
sbb
movs
popf
dec
jnp
xor
mov
mov
cmps
out
dec
sbb
fdiv
ins
jmp
jo
fldcw
pop
arpl
xor
loope
popf
outs
(bad)
mov
clc
and
fistp
(bad)
js
sub
mov
jmp
out
dec
ins
mov
(bad)
dec
loopne
lods
shr
push
fdiv
pop
sub
cdq
adc
mov
fmul
fcom
(bad)
fistp
jl
jo
hlt
cmp
js
and
xor
inc
push
xchg
or
scas
dec
data16
(bad)
jnp
mov
repz
sub
inc
push
in
lahf
xchg
or
inc
and
mov
or
push
cmps
add
repz
std
in
mov
stos
adc
adc
cmp
movs
push
pusha
ret
dec
sbb
sub
fwait
adc
pop
push
ret
leave
jecxz
stc
inc
push
adc
mov
sbb
jmp
jp
push
fidiv
jp
dec
ds
sbb
test
es
xchg
mov
jbe
mov
cmps
xor
pushf
(bad)
jae
fbstp
xchg
(bad)
cmp
jbe
adc
phsubsw
sbb
hlt
push
adc
stc
pop
loopne
in
retf
jmp
pushw
xor
xchg
scas
pop
pop
rol
scas
xor
les
test
mov
and
movs
scas
push
and
dec
std
out
cdq
mov
outs
icebp
je
or
jle
inc
dec
popf
test
pop
add
fistp
dec
mov
lods
lods
and
jb
ret
mov
push
dec
cmp
xchg
jae
(bad)
and
sub
ja
fld
(bad)
push
jecxz
xchg
mov
pavgb
adc
jnp
xchg
in
mov
inc
fsubr
clc
push
iret
mov
pop
adc
or
add
cmc
inc
fst
dec
test
imul
div
jne
mov
inc
shl
imul
imul
imul
shr
add
or
adc
ficom
ja
mov
call
call
stos
sbb
in
add
xchg
call
pop
mov
div
test
add
stos
mov
daa
sbb
and
mov
fucomi
jnp
dec
out
inc
cwde
in
movs
cmp
ins
in
mov
inc
dec
or
fs
push
nop
leave
jbe
(bad)
loope
push
mov
ror
out
sahf
jle
cmc
in
(bad)
in
dec
mul
xchg
outs
mov
xor
outs
movs
mov
mov
add
icebp
push
stos
stos
jo
iret
stos
cmp
out
push
mov
shl
mov
jp
xchg
data16
int3
or
(bad)
xor
mov
loope
jnp
rol
mov
stos
jne
mov
dec
jmp
das
dec
mov
call
loope
popa
(bad)
adc
push
test
shl
pop
xchg
int3
cdq
sbb
cmp
jns
mov
fadd
sub
cld
test
popa
mov
je
mov
adc
icebp
fmul
mov
sar
rcl
addr16
das
ja
outs
push
mov
retf
sub
icebp
gs
fld
mov
dec
xchg
test
pop
lods
jae
or
aaa
nop
sub
cmc
fldcw
idiv
sbb
inc
mov
xchg
out
mov
pop
inc
dec
hlt
(bad)
loopne
sbb
cmp
loopne
ins
sub
sahf
imul
hlt
mov
pop
cmp
jnp
pop
push
lahf
out
or
push
inc
movs
adc
pop
call
sti
mov
or
mov
dec
aas
add
sub
ja
or
inc
(bad)
stc
fs
bound
jo
(bad)
and
dec
mov
xchg
sub
add
ins
jb
lods
fld
pop
(bad)
repnz
xchg
int3
and
and
mov
push
in
(bad)
sbb
jne
sub
cmps
xor
cdq
sbb
jb
pop
ins
sar
adc
aam
loope
xchg
push
in
jnp
sahf
(bad)
pushf
jns
jmp
or
mov
inc
stc
popa
mov
aad
cmp
imul
xchg
fdivp
or
pop
lahf
mov
loope
adc
adc
out
or
cwde
sti
aas
imul
dec
cwde
add
and
es
mov
(bad)
nop
xor
mov
dec
sbb
mov
push
xchg
push
fimul
ret
js
pushf
dec
lock
ror
pusha
adc
iret
xchg
mov
call
sbb
nop
or
push
add
pop
xchg
push
in
cs
int3
dec
pop
xchg
cmp
lods
aaa
fild
stos
leave
stos
and
or
add
mov
dec
retf
mov
pop
dec
push
in
scas
push
stc
loopne
call
add
fs
add
push
xor
cmp
cli
jp
outs
loopne
outs
jge
pop
push
sub
sub
aas
pusha
mov
add
lahf
icebp
lods
sub
mov
rcr
in
fist
imul
adc
push
stos
pushf
add
inc
cmc
pop
mov
cld
xor
mul
mov
lock
lahf
sbb
mov
test
inc
mov
nop
mov
out
test
in
shl
loope
int3
scas
cmp
(bad)
inc
and
ficom
and
cwde
pop
adc
jle
cmps
call
push
jle
mov
xchg
in
(bad)
sbb
inc
push
jl
and
mov
pop
and
arpl
pop
out
mov
add
push
aas
xor
loope
xchg
xor
aas
mov
and
test
or
in
outs
bnd
sbb
sub
lahf
jge
sbb
enter
cli
in
and
push
cld
iret
mov
bound
mov
aas
and
jb
or
inc
sbb
jmp
inc
das
add
sub
push
jae
push
sub
je
xor
ins
iret
setg
adc
shl
iret
(bad)
(bad)
pop
jg
repnz
mov
js
xchg
iret
fisttp
push
and
inc
mov
loopne
mov
jne
pushf
mov
(bad)
fldenv
inc
xor
cmc
jp
dec
or
add
test
mov
jl
jae
mov
xchg
test
and
lods
sbb
cmps
and
pop
cld
ret
xchg
cmp
mov
fnstsw
pop
mov
dec
fwait
cwde
mov
mov
je
jne
int3
xchg
idiv
sbb
sbb
cmps
adc
push
outs
jl
mov
inc
mov
rcl
or
out
aas
or
aam
ss
cld
pop
and
test
fcom
mov
mov
pop
xlat
fwait
enter
inc
jns
fidivr
jmp
adc
fdiv
xchg
pushf
ins
xor
cmps
add
sbb
outs
iret
xchg
jle
cmp
add
movs
dec
ret
sbb
nop
and
push
fcomp
pop
ret
icebp
push
popa
dec
loop
mov
xchg
(bad)
out
ror
fucomp
(bad)
push
out
retf
cs
xlat
leave
int3
jg
inc
xchg
push
dec
add
jg
rcr
(bad)
pop
(bad)
inc
ja
xor
jecxz
ins
cmps
push
push
ss
push
push
sub
sub
nop
(bad)
xor
aas
mov
jmp
fwait
stc
fisttp
inc
or
in
sub
out
add
add
mov
popf
ins
std
imul
add
add
mov
aad
add
push
adc
mov
fcomp
jg
xchg
jle
and
ins
ins
adc
test
out
movs
ret
and
push
lods
mov
imul
cmp
je
or
and
jnp
push
sub
test
outs
(bad)
(bad)
cmp
push
or
(bad)
pusha
dec
cld
popa
outs
jno
xchg
and
push
jecxz
and
mov
inc
inc
add
test
push
int
mov
fimul
mov
pop
dec
pushf
jmp
aam
out
jmp
or
pop
pop
popa
xor
aad
push
int3
add
mov
cmp
or
sti
(bad)
dec
mov
mov
stc
inc
and
sbb
pop
push
cmp
sbb
mov
or
push
les
in
mov
add
xchg
cmc
cmp
cmp
push
push
in
into
add
lahf
xchg
outs
xlat
stos
leave
push
xor
in
icebp
test
mov
das
xor
loopne
push
push
sub
popa
xchg
push
mov
mov
sub
and
xchg
jb
popa
test
into
addr16
retf
add
rol
je
outs
add
xor
push
call
pop
fdiv
push
pop
movs
out
mov
stos
dec
popa
push
inc
loop
cld
js
test
daa
call
or
sahf
fsubr
int
push
ficom
jl
sbb
(bad)
fsubr
adc
arpl
pcmpgtw
test
dec
mov
cmps
hlt
pop
jnp
and
cmps
fsubr
inc
(bad)
call
adc
fdiv
mov
icebp
sbb
adc
jge
inc
out
out
jb
fucomi
xchg
and
jb
sub
mov
test
int
lea
inc
into
and
mov
mov
(bad)
(bad)
gs
in
jnp
shl
inc
sbb
test
ja
cmp
aaa
sub
push
sub
push
cmp
xchg
sbb
scas
lea
add
cmp
out
sub
cmp
clc
adc
popa
out
jno
(bad)
cmp
mov
pusha
push
mov
sbb
pop
inc
push
out
and
dec
inc
inc
scas
adc
adc
hlt
jge
add
jl
aas
adc
dec
cs
movs
(bad)
xlat
(bad)
fcmovnu
cmc
iret
dec
std
fld
xchg
cmp
(bad)
outs
pusha
mov
movs
mov
imul
out
jge
adc
xor
leave
mov
xchg
and
leave
mov
outs
and
cmp
push
fmul
sub
cs
popf
ss
pusha
nop
mov
sub
pop
xor
mov
xchg
inc
cmp
xchg
cs
mov
pop
out
mov
mov
mov
jmp
mov
cwde
inc
dec
aas
mov
ins
push
movs
push
or
bound
mov
push
pop
rol
jbe
outs
xor
fs
cli
jns
add
xor
ret
add
popa
dec
cdq
mov
arpl
fnstsw
xchg
push
xchg
mov
enter
jae
xor
pop
lea
addr16
enter
mov
out
dec
sbb
(bad)
dec
clc
outs
sbb
fnstcw
xchg
mov
pop
cmp
push
inc
inc
sahf
ins
out
aam
or
imul
dec
sbb
cwde
push
fiadd
pop
sbb
mov
pop
mov
mov
xor
lods
mov
xchg
imul
mov
rcl
pop
sbb
loope
lea
jns
int
xor
and
(bad)
clc
iret
and
jmp
push
test
add
out
stc
or
stc
movs
ds
xchg
or
pop
popf
hlt
lahf
mov
adc
repnz
fs
pop
cmp
jl
add
jmp
lahf
pop
psubq
mov
push
loop
(bad)
dec
sbb
call
ss
call
jmp
aad
mov
mov
stos
test
les
add
sbb
xlat
shl
gs
loop
push
aaa
dec
sbb
sbb
(bad)
and
dec
cs
hlt
aad
push
push
mov
or
xor
push
ficom
dec
pop
lock
mov
hlt
clc
in
sub
add
xor
dec
outs
ja
nop
xchg
retf
pop
or
dec
rcl
lods
jge
ss
test
pop
inc
fucomi
cmp
enter
jmp
(bad)
push
jle
jmp
push
sahf
lock
push
cmp
test
inc
dec
aam
jns
jnp
call
push
dec
add
cmps
fwait
cmp
pusha
jno
or
fs
mov
test
dec
mov
sahf
dec
jmp
retf
enter
dec
jo
inc
daa
mov
icebp
inc
xlat
ret
jmp
call
fnstcw
sbb
jae
xchg
pop
jbe
xchg
cld
xchg
xor
ds
sar
ins
es
ins
push
mov
jnp
mov
or
pop
movs
cwde
aas
fisttp
mov
xchg
jne
cmc
(bad)
js
add
sbb
push
push
pop
add
(bad)
out
mov
xchg
lods
push
inc
ins
cmp
sub
cmp
ds
push
in
dec
aad
cmp
inc
sub
dec
sti
fimul
cmps
adc
dec
push
xor
test
xchg
cmp
movs
xchg
inc
add
inc
inc
data16
or
mov
adc
xor
sbb
xchg
icebp
mov
leave
sub
pushf
or
daa
sar
xor
jbe
test
sub
jb
sub
movs
and
fwait
cmc
jmp
(bad)
lods
ss
ja
outs
pop
mov
and
call
jle
xchg
inc
xor
pop
aaa
add
cmp
clc
addr16
mov
xor
(bad)
idiv
aaa
or
out
and
repnz
or
cmp
daa
mov
cmc
fisub
dec
ss
jne
pop
mov
imul
cmc
ss
adc
js
xchg
stos
jnp
adc
push
mov
push
jmp
adc
inc
fdiv
das
jp
sub
dec
fs
jae
add
lods
push
mov
and
stos
sub
cmps
inc
mov
push
add
stos
lsl
sbb
pusha
test
repz
adc
sub
xor
mov
xchg
cmc
jg
das
sbb
push
xor
dec
xchg
push
pop
xchg
les
mov
daa
fisub
aas
adc
imul
repnz
int3
push
xor
fdivr
push
stc
lea
pop
mov
xchg
xor
aad
cld
adc
dec
push
sbb
jns
sbb
or
adc
cmp
(bad)
mov
pop
cmps
ret
mov
enter
je
xchg
test
mov
imul
scas
je
push
pop
das
sub
mov
enter
or
iret
sub
cmp
out
jmp
mov
ins
sub
xor
inc
cmp
in
add
sbb
pushf
dec
lods
fiadd
lods
jo
inc
pop
cmp
cmp
hlt
lods
aam
add
pusha
mov
dec
ret
test
xor
jne
xchg
aad
pop
sub
add
or
shr
xor
adc
xchg
add
bound
in
or
inc
push
push
std
inc
lea
hlt
sub
pop
mov
mov
and
and
in
repnz
cmc
sub
arpl
sub
rcl
sbb
addr16
outs
jnp
in
mov
jne
sti
add
xor
xchg
je
xor
repnz
pop
xor
rol
mov
cld
leave
and
test
push
cmps
imul
or
mul
popf
enter
jmp
add
movd
dec
adc
jecxz
sub
stc
jmp
or
imul
movs
out
mov
add
or
gs
test
mov
push
add
rcl
jbe
add
xor
mov
dec
mov
push
push
shr
pop
jnp
jl
push
outs
dec
jns
pop
lods
sub
pop
adc
mov
jnp
lods
xor
aam
dec
jmp
retf
and
je
out
xchg
out
adc
xchg
outs
lds
mov
pop
and
aas
adc
sub
mov
int
pop
retf
jp
jge
dec
imul
adc
lods
adc
mov
xchg
int
xor
jl
adc
ins
addr16
mov
enter
in
int
or
dec
sahf
(bad)
call
adc
jge
mov
out
fisubr
or
jmp
aaa
cs
dec
ret
xor
sar
inc
dec
mov
mov
jle
lods
mov
push
(bad)
cwde
adc
inc
and
pop
jmp
adc
jmp
mov
cmp
retf
mov
stos
mov
sub
fwait
jne
sbb
adc
xchg
sub
mov
push
dec
shl
jge
sub
mov
sbb
int3
shr
mov
call
(bad)
xor
adc
sub
fsubp
fstp
lea
mov
mov
in
xchg
data16
dec
and
xchg
out
(bad)
les
adc
jae
inc
icebp
xchg
nop
popfw
fcom
sbb
imul
mov
mov
jno
outs
idiv
jbe
addr16
pop
push
or
sub
out
push
jne
add
aaa
mov
mov
mov
pop
out
mov
jbe
push
mov
retf
(bad)
mov
mov
mov
ficom
add
and
inc
int3
xchg
in
outs
dec
pop
pushf
sbb
mov
xor
mov
in
ror
sub
and
fsub
mov
and
arpl
push
and
stos
inc
inc
mov
add
les
pop
pushf
sbb
(bad)
loopne
(bad)
and
push
das
arpl
cmp
dec
les
push
adc
addr16
sahf
cmp
mov
pop
bound
mov
into
jl
cmp
into
mov
sub
es
ins
dec
pop
sbb
stos
arpl
or
cmps
aaa
mov
test
mov
daa
and
push
and
adc
jns
test
pushf
sub
fldenv
mov
mov
add
dec
jo
pop
vandpd
jno
mov
sar
or
sub
or
in
movs
ins
jno
mov
ins
(bad)
in
dec
iret
pushf
mov
fimul
enter
in
call
test
pop
xchg
scas
imul
cmc
adc
mov
fdivr
sbb
fidivr
loope
stos
loope
adc
add
jno
test
sbb
sub
xchg
pop
mov
int
les
int3
arpl
addr16
xchg
mov
lods
or
jmp
push
jecxz
add
push
dec
jmp
jge
fcmovnb
es
pop
push
pop
cmp
jle
mov
jne
retf
(bad)
out
sub
cdq
scas
jnp
imul
add
fisttp
sahf
dec
iret
lock
int
or
sbb
push
xor
sbb
arpl
inc
into
cmp
dec
pop
test
cmps
xchg
mov
jo
ds
test
sbb
and
jnp
dec
addr16
xor
add
lods
addr16
adc
loop
lea
inc
xchg
and
pop
jmp
loop
lea
ins
push
out
in
pop
nop
sbb
loopne
je
stc
cmp
jno
outs
cmc
pop
leave
cmp
in
jmp
cmp
sahf
aaa
xchg
je
mov
out
shl
dec
adc
mov
retf
or
or
enter
cwde
xchg
mov
outs
jg
jno
mov
jmp
mov
and
and
repnz
pop
and
mov
xor
fdivr
out
mov
loop
sbb
inc
adc
loop
mov
inc
adc
hlt
loop
cs
repnz
call
jl
fld
inc
push
je
adc
out
hlt
shl
rcl
and
rcr
and
(bad)
cmp
popa
and
adc
xchg
jl
add
adc
or
push
mov
adc
push
movs
ds
push
fs
into
jbe
sbb
fs
movups
fisubr
push
and
add
lahf
loope
leave
movs
fwait
adc
inc
iret
adc
xchg
fcomp
push
sbb
mov
inc
hlt
stc
stos
movs
les
lds
mov
ret
pop
jmp
add
adc
mov
or
mov
loop
into
scas
in
shl
pop
xchg
or
fld
test
loopne
mov
fsub
mov
in
sub
jne
sub
cdq
je
cdq
lods
movs
xor
dec
push
in
jb
inc
pop
arpl
lods
adc
neg
push
push
jb
push
loope
lea
add
cmp
leave
inc
jge
sub
stos
test
jns
cwde
in
stos
jp
enter
loopne
ins
or
daa
push
or
mov
mov
stos
fwait
cmps
or
inc
push
mov
repz
(bad)
mov
leave
icebp
call
cmp
fwait
(bad)
aad
stos
(bad)
loope
mov
jns
dec
pop
inc
cmc
test
nop
mov
lds
leave
inc
sti
ds
sub
sub
arpl
adc
push
xchg
inc
pop
sbb
or
or
push
minps
inc
mov
movs
lock
pop
push
cmps
dec
mov
ror
lods
push
test
pusha
cmp
pop
xor
dec
sub
ja
xor
and
ins
dec
retf
cmps
jbe
outs
retf
(bad)
(bad)
cmps
mov
mov
pop
xchg
jecxz
(bad)
cmc
pop
shl
cmp
or
dec
enter
int
pop
fimul
pop
push
mov
cmps
cmc
xor
loope
icebp
daa
xchg
mov
daa
cmp
in
rcl
out
call
push
sti
dec
shr
sbb
out
rcr
lds
and
loop
xor
in
std
call
xchg
jmp
(bad)
sbb
dec
inc
push
jbe
fmul
scas
lods
fild
cmps
cmp
in
jge
push
mov
gs
xchg
inc
and
mov
pop
cwde
fwait
add
inc
inc
inc
lds
jnp
jge
rcl
mov
cmp
adc
movs
lods
jae
dec
xchg
mov
outs
xchg
jbe
cmp
xor
mov
cmp
(bad)
movs
shl
mov
cdq
pop
xchg
lahf
adc
xor
cwde
pop
xchg
cmp
sti
stos
push
add
dec
mov
cmp
pop
daa
mov
cld
or
add
mov
in
mov
pop
sub
pop
mov
dec
add
jns
cmps
add
dec
fcmovne
and
xor
adc
add
jp
jl
fcom
movs
jne
cmp
cdq
fwait
hlt
add
mov
and
add
push
jno
inc
movs
jp
imul
outs
pop
aam
in
ins
mov
mov
and
xor
jmp
int
stc
cmps
lock
sete
lods
add
xchg
dec
sub
loop
adc
dec
mov
cmps
mov
sub
cmps
mov
jg
sahf
mov
mov
add
add
shl
mov
adc
inc
sub
leave
inc
call
pop
add
push
fbstp
pop
je
inc
xchg
sti
push
inc
jge
out
js
xor
cmc
pop
rol
inc
outs
dec
push
mov
fsub
inc
jle
or
sub
add
mov
test
mov
pusha
fbstp
sahf
push
mov
das
pop
jae
popa
or
js
cmp
jmp
xor
(bad)
aad
mov
sub
mov
pop
push
mov
ror
and
sbb
jp
or
in
dec
and
and
xchg
retf
or
or
mov
inc
push
ds
push
into
ret
repz
mov
dec
retf
jo
in
sar
xor
aaa
add
add
sbb
mov
adc
push
test
ins
sbb
ss
push
loopne
movs
or
inc
or
movs
mov
lods
into
push
sub
xchg
bound
sbb
adc
les
std
test
add
call
and
xor
sti
pushf
gs
cmp
shl
repnz
inc
fwait
hlt
sti
push
retf
xor
or
jnp
out
fyl2xp1
pushf
adc
pushf
xchg
pop
cdq
mov
jl
add
test
jbe
inc
cwde
retf
or
mov
push
test
adc
mov
je
push
push
xchg
imul
jmp
ins
pop
cdq
xchg
div
out
aam
pop
out
(bad)
mov
mov
mov
imul
clc
enter
aam
ret
sti
dec
rol
adc
popf
dec
push
dec
rcl
mov
add
arpl
scas
or
test
mov
push
sub
in
mov
aam
sar
push
jbe
mov
mov
in
(bad)
push
cmp
jp
fnstenv
cmp
xor
mov
jp
and
jg
mov
ret
add
in
jns
mov
and
mov
and
(bad)
or
sbb
fistp
popf
call
out
in
mov
xor
retf
cmp
inc
ins
ss
push
test
ss
out
pop
mov
xchg
(bad)
mov
adc
mov
push
cdq
cmp
dec
je
sub
je
in
js
mov
les
sub
jl
dec
test
int
lahf
and
pushf
xchg
out
pop
rol
sub
or
rcl
push
mov
inc
ss
push
jmp
adc
ja
cwde
and
jbe
xchg
mov
pop
in
fiadd
nop
mov
mov
sub
movs
and
ins
sub
(bad)
test
test
inc
aaa
cmp
mov
popa
lea
repz
cmp
jb
cmps
and
or
and
pop
cmps
jl
push
mov
nop
mov
and
movs
mov
or
adc
sub
addr16
loope
mul
and
pop
mov
movs
sub
popa
in
cmps
in
inc
mov
int3
(bad)
cld
nop
inc
movs
ds
push
js
and
movs
jno
xor
xor
and
dec
jo
out
in
jg
stos
fidivr
push
into
push
imul
ds
mov
fisttp
sub
inc
dec
sbb
and
inc
jno
sar
pop
and
dec
aaa
cmp
pop
xchg
xchg
xlat
(bad)
(bad)
idiv
shl
adc
xchg
xchg
xlat
dec
xchg
stos
aam
and
cld
ss
popf
mov
mov
test
and
xor
ja
mov
xor
xchg
pop
xchg
retf
add
btc
repnz
and
dec
das
or
int3
imul
ds
cmps
pop
movshdup
adc
jne
sub
xlat
dec
test
add
add
ja
mov
inc
into
ror
sbb
out
imul
jbe
jmp
dec
mov
jo
cmps
jge
cmp
mov
out
and
addr16
or
test
sub
(bad)
(bad)
and
mov
mov
dec
repnz
sub
js
in
stos
nop
ffreep
lea
jnp
add
mov
mov
pop
lods
jecxz
aam
cwde
xchg
clc
cmps
adc
sahf
sar
loopne
push
push
mov
popf
bound
pop
jae
scas
xchg
fdivr
loope
fcmovnu
stos
xchg
mov
jmp
ret
jge
xchg
xor
pop
xchg
dec
xor
push
mov
inc
or
mov
jecxz
sub
adc
and
xor
cmp
(bad)
ins
ror
mov
xor
jnp
sbb
lods
jbe
and
lahf
xchg
xchg
sar
sbb
inc
mov
and
femms
or
xor
icebp
repz
push
aam
dec
inc
jge
nop
push
mov
cmp
mov
add
xchg
xchg
pop
arpl
inc
out
pop
push
loopne
mov
aam
cdq
dec
dec
push
inc
xor
in
pop
inc
mov
jnp
mov
sub
imul
int3
std
cmp
icebp
cmp
in
lds
xor
outs
aam
inc
cdq
imul
popf
(bad)
rcr
adc
stos
inc
jne
jo
mov
and
push
cmp
inc
push
aam
scas
fist
mov
sar
adc
sub
and
movs
and
call
push
sbb
add
mov
test
lods
xchg
les
xlat
jo
fadd
xchg
leave
xchg
(bad)
movs
out
mov
sti
(bad)
cli
pop
rcr
pop
xor
jl
jno
dec
pop
movs
bound
sub
xchg
loope
outs
pop
hlt
xchg
lahf
adc
ret
xchg
adc
xchg
mov
push
xchg
retf
test
pop
pop
retf
sbb
xchg
fstp
div
adc
cmp
mul
pop
out
cmp
ins
or
push
push
fiadd
lea
retf
hlt
jno
mov
jbe
xchg
jbe
push
ss
std
icebp
jecxz
xor
stos
xor
outs
push
movs
inc
push
pop
imul
loop
(bad)
fimul
stos
icebp
mov
pushf
scas
cmp
fsubr
shl
inc
in
ja
ds
lods
xlat
pop
mov
out
in
push
and
ficomp
mov
fs
hlt
lea
mov
(bad)
and
cli
adc
cmpxchg
aam
fwait
jne
aaa
sbb
ds
mov
mov
in
cmc
sub
lahf
mov
or
rcr
out
sbb
ficomp
mov
push
lahf
mov
(bad)
push
loope
xor
in
mov
imul
sbb
push
(bad)
dec
sahf
ret
mov
fistp
rcr
add
int3
mov
ins
imul
lods
inc
jl
adc
popf
mov
mov
xchg
fbstp
std
mov
cwde
sub
xchg
mov
jno
scas
sbb
jae
fwait
imul
retf
outs
into
ss
jp
xor
(bad)
stc
mov
arpl
or
in
or
test
sub
inc
inc
push
cmp
fmul
add
cmp
adc
push
push
(bad)
mov
sub
xor
xchg
fisttp
(bad)
in
jne
mov
inc
into
repz
mov
ret
sub
popf
adc
(bad)
xor
cmc
mov
inc
lds
cmp
dec
(bad)
jecxz
push
out
xchg
fstp
push
es
pop
pop
push
pop
out
pusha
popa
fisub
sub
fld
(bad)
enter
clc
add
mov
mov
gs
arpl
lods
cld
(bad)
sti
ins
test
cmp
or
xchg
mov
(bad)
out
and
clc
sub
jo
clc
arpl
sbb
pop
or
or
sub
pop
stos
les
fmul
enter
adc
(bad)
sbb
pop
dec
stos
xchg
stos
cmps
outs
outs
sbb
mov
add
out
iret
repz
retf
cmp
fcomip
lods
pop
lds
jl
xor
int3
xchg
test
ja
les
(bad)
push
jmp
or
int
fwait
pop
jnp
adc
pop
rcl
jmp
mov
mov
cmc
cmp
inc
adc
mov
ret
jg
call
aam
cmp
ins
dec
or
mov
xchg
or
mov
sbb
mov
fidivr
mov
les
test
mov
es
mov
adc
mov
xor
into
sub
mov
adc
cmp
push
adc
dec
vsqrtss
outs
jne
sub
(bad)
ds
nop
dec
ins
rcl
jno
adc
push
or
cmp
jmp
jle
xchg
and
(bad)
jmp
push
ja
dec
lods
lods
mov
in
shl
sbb
adc
test
jle
jmp
jmp
cs
xchg
das
mov
jle
pop
lods
repnz
fstp
dec
es
mov
fisttp
pop
jl
xlat
sahf
sub
mov
call
mov
xor
cmps
arpl
cdq
add
and
fwait
add
xor
jge
fucompp
cmps
inc
pop
test
fsub
into
add
mov
and
pop
ja
pop
push
stos
push
mov
arpl
daa
test
imul
and
mov
fmul
dec
shl
fs
scas
jbe
(bad)
mov
cmp
(bad)
data16
inc
cwde
or
pop
push
mov
in
enter
out
cmps
(bad)
cmp
addr16
outs
sub
test
movsx
jae
mov
outs
jae
jl
stos
sbb
pusha
sbb
mov
int
cdq
add
fisub
out
add
scas
mov
mov
into
and
push
rcl
adc
mov
and
mov
adc
fst
(bad)
scas
adc
mov
push
or
jp
hlt
call
dec
stos
and
jbe
xor
inc
lods
xchg
jbe
sub
rcl
cld
call
stc
out
lds
mov
mov
adc
repnz
xchg
sub
jmp
pop
mov
adc
bound
pop
ror
test
dec
fild
stos
pop
and
outs
mov
sbb
popf
data16
rcl
sar
push
call
sbb
in
and
movs
mov
shl
sbb
bound
div
repnz
dec
aas
jle
xchg
imul
xlat
stc
pushf
jle
sub
movs
or
div
mov
loopne
push
adc
loop
ss
jo
(bad)
mov
push
fs
mov
mov
push
cwde
in
pop
xchg
pop
ror
or
pop
xchg
scas
mov
add
and
push
call
add
daa
and
lods
popa
mov
mov
sahf
mov
jecxz
cmps
or
stc
shl
cmp
pop
xor
xchg
xchg
adc
jns
js
xor
rcr
leave
pop
(bad)
test
popa
dec
jne
pop
dec
and
daa
and
scas
fisubr
dec
push
cmp
sbb
fbld
int3
push
push
es
lahf
dec
repnz
cmp
push
push
jl
or
call
lock
jge
and
lahf
jecxz
push
mov
cmps
pusha
or
jl
xor
lea
xor
cmp
shr
retf
stos
jmp
cwde
cwde
mov
inc
aad
das
jle
mov
add
inc
lds
loop
test
xchg
mov
mov
idiv
adc
mov
mov
cmc
rcr
mov
sbb
shr
clc
js
and
mov
inc
jne
xchg
push
or
addr16
sub
sbb
ret
inc
inc
mov
in
jle
mov
mov
push
push
mov
scas
inc
imul
jmp
or
mov
push
inc
dec
lods
(bad)
push
call
cld
or
das
scas
sub
popf
imul
pop
rcl
pop
ret
add
add
fsubr
jne
cld
jmp
dec
fild
jae
add
outs
sbb
pop
or
sbb
mov
jns
jl
ficom
push
mov
and
sbb
mov
mov
inc
sahf
fcom
pop
idiv
das
sbb
jmp
icebp
mov
jnp
push
aam
repz
(bad)
std
aam
in
push
dec
and
fimul
std
lods
(bad)
xlat
jmp
rcl
ret
dec
out
push
mov
cwde
std
stc
cmp
rcl
add
mov
cmp
scas
or
adc
dec
xlat
rcr
inc
lods
dec
div
(bad)
jne
mov
and
mov
cmps
inc
cmp
ret
outs
imul
scas
(bad)
in
xor
mov
cdq
jb
add
dec
je
(bad)
push
sti
rol
jecxz
int3
cmp
cmp
in
leave
dec
pop
mov
inc
and
fcos
into
lds
int3
loope
xchg
in
push
or
inc
mov
xchg
retf
jnp
test
shr
and
mov
sub
jae
dec
xchg
dec
stos
movs
out
cmp
mov
cdq
movs
rcl
pop
cmp
shr
pop
ins
fldcw
jmp
shr
clc
std
(bad)
ficomp
pop
rcl
aaa
loop
push
or
jo
pop
sbb
out
and
cmp
or
xlat
scas
(bad)
(bad)
mov
repnz
enter
pop
fwait
mov
adc
adc
xchg
mov
pop
and
mov
dec
sub
test
out
jae
in
imul
sub
jecxz
and
pop
jg
cmps
mov
lea
ret
imul
out
jmp
test
and
xor
neg
and
mov
(bad)
call
nop
xor
xor
std
sub
jecxz
adc
(bad)
mov
outs
fnsave
push
mov
and
mov
pop
adc
mov
(bad)
aad
mov
dec
test
daa
stc
into
push
loope
imul
mov
pop
in
icebp
stos
in
es
lea
out
shl
ins
and
xor
es
jnp
or
jb
adc
and
mov
xor
jp
or
(bad)
jge
out
in
sbb
in
mov
adc
fstp
ins
xchg
fistp
mov
fs
or
dec
pop
stos
lock
pusha
and
into
mov
and
outs
outs
cld
(bad)
mov
or
inc
loope
pop
add
ret
cld
jns
lods
and
xor
jle
sub
mov
mov
fcmovnbe
mov
sbb
xchg
push
mov
xor
sbb
add
add
sub
fcomp
inc
idiv
cmp
movs
mov
addr16
adc
fst
inc
loope
std
push
push
test
dec
or
sub
mul
pop
(bad)
cld
div
aad
adc
jmp
idiv
mov
and
call
cmp
cmp
call
jb
mov
cmp
jecxz
and
or
jae
mov
xchg
(bad)
mov
cmp
bound
rcl
cmp
gs
imul
jae
dec
cld
mov
in
ret
add
sbb
fisubr
retf
adc
and
pop
std
int
adc
bnd
adc
dec
dec
or
mul
jnp
xor
pop
ins
in
mov
icebp
setg
push
std
sbb
test
add
or
in
adc
add
jmp
js
sub
adc
lds
(bad)
iret
dec
pop
into
push
push
out
sbb
cwde
jb
sub
xlat
loopne
and
jg
scas
cs
pop
mov
and
imul
xchg
rcl
ins
mov
int
push
rol
mov
fwait
inc
aaa
shl
imul
push
jge
test
addr16
inc
(bad)
outs
push
loope
sbb
inc
or
xor
aaa
not
int
(bad)
mov
ret
pop
ins
das
imul
xchg
movs
in
stos
ins
lahf
cmps
sbb
inc
xor
xor
jno
add
iret
or
jp
cmc
(bad)
xchg
fcomp
push
inc
pop
shl
call
daa
jmp
adc
ins
xlat
adc
retf
mov
mov
push
jae
loope
and
das
dec
into
adc
fstp
fisubr
push
sbb
push
jge
push
lods
outs
jb
loopne
sahf
into
fbstp
mov
xchg
(bad)
daa
mov
sti
in
call
scas
movs
xchg
shl
sub
or
and
sbb
enter
data16
jnp
fnsave
cmps
loope
mov
lea
sub
inc
push
cmp
ja
jae
mov
mov
xor
mov
shr
xchg
ds
jmp
adc
ficom
sub
xor
imul
test
(bad)
fbld
mov
(bad)
pop
out
not
mov
ror
pop
xor
stos
mov
sbb
or
dec
pop
bound
lahf
iret
sbb
xchg
call
loope
jle
inc
ja
fsubr
popw
cmp
gs
jmp
mov
and
in
push
mov
mov
icebp
mov
inc
mov
inc
aaa
cmc
push
mov
aaa
(bad)
fdiv
aaa
ins
addr16
sbb
popa
dec
cmps
imul
inc
aad
stc
in
nop
sbb
test
pop
mov
bts
das
push
add
xor
mov
jp
outs
in
mov
or
adc
cmps
cld
maskmovq
mul
ds
scas
lea
int3
mov
test
push
jl
xor
pusha
out
xchg
lods
cmp
aad
jg
adc
xchg
xchg
jbe
mov
cmc
cdq
adc
enter
je
(bad)
out
test
mov
xchg
out
je
icebp
retf
jp
js
mov
adc
loope
cmp
mov
adc
ret
jmp
xchg
ret
cmps
dec
retf
out
mov
cmps
frstor
outs
jb
push
push
sub
daa
shl
test
scas
adc
and
inc
fs
push
fdiv
cli
ficom
loopne
sbb
and
push
ins
mov
imul
stc
into
sub
sbb
stos
mov
daa
shr
push
leave
ror
jg
xor
(bad)
inc
stc
xor
enter
cli
lods
sbb
out
mov
pop
jmp
lods
or
cmp
push
jns
sar
xor
mov
hlt
sbb
xor
lods
and
sbb
into
cdq
lea
fadd
lods
fcomi
add
cmp
xchg
push
sub
jae
lahf
imul
mov
bnd
iret
sahf
(bad)
mov
jle
aaa
in
sub
leave
cli
jl
add
fnstcw
mov
xor
(bad)
xchg
adc
push
pop
jmp
inc
iret
lahf
leave
mov
push
adc
es
jne
cld
add
push
out
mov
jmp
sub
outs
push
add
das
imul
dec
cmps
retf
dec
movs
push
fs
xchg
iret
lods
cmp
cmp
sub
sub
mov
movs
xchg
std
das
fcmove
lods
adc
jne
pusha
lahf
dec
stos
mov
dec
movs
jecxz
repnz
dec
ror
jmp
mov
sub
push
fld
lahf
jp
mov
dec
add
and
stos
adc
pushf
dec
ret
outs
cmp
fs
mov
aad
lahf
add
daa
lods
ss
xchg
jp
push
cld
dec
ins
js
mov
in
or
pop
fisttp
call
clc
vfmsubps
into
in
sub
out
popa
push
mov
mov
sbb
cwde
jns
lock
adc
xlat
and
cmps
pop
lds
inc
js
sbb
test
les
idiv
cmc
lea
movs
cmc
ret
sbb
ss
sbb
and
leave
lock
push
adc
mov
popa
add
dec
std
add
mov
sbb
adc
or
adc
icebp
mov
mov
inc
jmp
fisubr
adc
test
(bad)
clc
xor
jge
dec
pop
ss
in
out
pcmpeqd
dec
push
push
data16
xchg
push
lock
cmp
cdq
call
mov
mov
movs
ja
ror
mov
jb
sub
and
mov
sar
mov
cwde
adc
les
fisttp
pop
mov
fdivr
into
xchg
xchg
cdq
ins
dec
jns
pop
jbe
jb
inc
sbb
pop
sahf
xchg
loopne
in
or
sub
popf
adc
push
xchg
sbb
stc
jl
mov
fistp
ffreep
sbb
pop
cmp
jl
inc
ins
sub
push
dec
dec
lods
dec
dec
hlt
mov
clc
mov
hlt
sub
push
jb
es
pop
cmp
jbe
test
sbb
cmc
aam
xor
loope
add
sti
fidiv
add
arpl
push
int3
or
push
sub
outs
mov
rcr
cld
arpl
jno
sub
mov
(bad)
adc
xor
jnp
push
cmp
std
jo
clc
jecxz
fs
mov
fimul
xor
mov
xchg
lock
add
sbb
add
sub
(bad)
cmp
icebp
ret
push
jmp
or
nop
sub
adc
jbe
xor
mov
or
cld
or
movs
stos
jb
jmp
sub
stos
pop
mov
rcr
cmps
mov
(bad)
fld
cmp
lods
scas
addr16
and
mov
pop
pop
div
and
mov
stos
lahf
ins
mov
out
mov
cs
mov
cmp
pusha
jnp
sahf
sub
lock
daa
mov
mov
shl
jb
adc
add
fcom
fdiv
or
xor
pop
lea
retf
cmps
into
ins
cmp
xchg
sar
add
in
ret
and
or
scas
lock
test
xchg
ret
imul
push
mov
push
xchg
fbld
arpl
fist
pop
inc
adc
jge
inc
and
(bad)
inc
pop
fs
dec
adc
push
pop
loop
clc
cmp
xor
jp
mov
je
mov
mov
add
jae
in
pusha
mov
jmp
in
shl
cmc
jmp
clc
sub
sub
and
bound
imul
imul
pop
cli
jmp
aas
test
stc
push
mov
push
pop
jo
out
push
je
das
jns
inc
ins
lahf
hlt
fcmovnu
cmp
xchg
cdq
add
dec
sbb
jle
outs
addr16
in
push
sub
aad
call
mov
jmp
js
enter
ins
fnstcw
cmps
and
clc
loopne
dec
add
ins
sub
je
cmps
mov
fsub
in
sbb
jns
loop
mov
int
test
lods
push
lahf
in
fcomp
aaa
lds
inc
mov
mov
aaa
mov
or
xor
mov
jo
fiadd
rcr
push
inc
cdq
adc
sti
sub
into
movs
outs
fidivr
sub
test
push
ins
mov
jmp
xchg
movs
idiv
hlt
sub
or
pusha
mov
pop
mov
jbe
jecxz
sbb
jp
push
sbb
call
pop
cmps
and
into
push
or
aas
pop
sub
lods
pushf
cwde
ret
mov
cmps
aam
inc
adc
repz
ds
xlat
ins
cli
mov
adc
add
sbb
ret
sub
cmps
add
test
inc
cmps
sbb
sub
push
lock
add
xor
mov
ret
cwde
pop
daa
out
cmp
jl
loope
push
mov
pop
jg
(bad)
mov
inc
jae
pop
retf
adc
mov
gs
and
imul
in
inc
outs
fisubr
xor
mov
sbb
mov
sub
push
jmp
ret
ja
sub
sbb
cmps
adc
push
adc
fwait
pop
push
addr16
jecxz
or
cs
xchg
ins
fs
push
iret
adc
call
js
sbb
sbb
push
fucomp
mov
mov
cmps
pusha
retf
pop
popf
mov
retf
sub
cmp
pop
mov
pcmpgtw
sbb
ins
test
mov
imul
mov
jns
jae
jo
ja
add
les
inc
or
into
xor
fmul
xchg
add
and
mov
stos
xchg
adc
out
mov
fiadd
jecxz
and
stos
in
(bad)
mov
pop
je
xor
inc
xchg
adc
mov
std
adc
adc
test
(bad)
xor
adc
je
and
push
das
push
sub
call
retf
mov
mov
inc
mov
jmp
iret
adc
enter
pop
xchg
inc
retf
inc
call
not
mov
xor
sub
pop
or
dec
jl
jne
bound
mov
push
ins
inc
pop
int3
aas
push
cmps
scas
sub
movs
call
mov
out
mov
ja
out
out
bound
fsub
jo
mov
ret
scas
mov
sbb
pop
ins
cmp
imul
ror
cwde
cmp
(bad)
pop
pusha
mov
test
(bad)
sbb
or
popf
or
inc
sahf
or
fs
outs
mov
outs
scas
jne
sub
xchg
adc
push
adc
cmp
sbb
push
adc
out
and
fisub
inc
adc
push
(bad)
outs
and
repnz
(bad)
fcomp
les
repz
data16
push
mov
cwde
pushf
nop
retf
sbb
mov
inc
mov
jge
aaa
shl
test
add
(bad)
hlt
add
cmp
shl
mov
dec
cmps
aam
cmp
inc
adc
cmp
bnd
push
int
frstor
(bad)
cmp
dec
stc
jp
test
mov
ficom
dec
dec
test
or
mov
mov
jno
das
adc
fcmovu
push
or
(bad)
std
retf
and
or
mov
cmp
jae
cli
adc
and
jo
repnz
es
inc
out
je
ficom
sub
sbb
in
xor
lahf
push
mov
ret
neg
push
sub
fsubr
sahf
mov
push
push
xor
in
imul
jae
sub
mov
mov
mov
or
aad
mov
cld
fs
jg
adc
arpl
pusha
clc
jecxz
fisttp
cmc
in
div
ss
or
inc
mov
mov
scas
or
jle
out
ret
add
inc
push
cld
(bad)
xchg
fiadd
pop
(bad)
cwde
adc
adc
jae
pop
cs
push
cmc
fs
test
dec
loop
pop
push
pop
test
lds
test
int
xchg
les
aam
xor
fbstp
es
sbb
fwait
jle
mov
xlat
jne
mov
jbe
inc
xor
dec
outs
ret
sbb
xchg
or
aad
sub
lods
jae
popf
push
js
xor
jb
rcl
dec
ins
out
shl
and
jl
adc
cli
fwait
js
xchg
add
dec
mov
fadd
inc
pop
xchg
fidiv
movlps
cdq
cld
xlat
hlt
inc
cmps
loopne
out
fldcw
cmp
popa
jmp
out
pop
call
add
je
xchg
pop
and
rcl
into
aad
fisttp
stos
fs
xchg
(bad)
(bad)
(bad)
popa
jmp
jbe
push
outs
mov
adc
and
not
ret
call
mov
call
int3
loop
pop
ret
(bad)
retf
push
cmp
test
out
adc
in
inc
inc
in
mov
mov
dec
mov
mov
and
xchg
adc
scas
movs
ret
adc
hlt
js
ret
jne
cmp
mov
pop
jo
cmp
jp
(bad)
(bad)
in
daa
xor
push
and
mov
dec
mov
sbb
push
sbb
and
pop
les
mov
cmc
scas
stc
sub
dec
popf
repnz
pop
mov
add
sub
imul
mov
sbb
add
cmp
aad
inc
cmps
xchg
jne
mov
retf
les
cmp
fisubr
sahf
nop
movs
jp
imul
mov
mov
adc
bound
cwde
lods
inc
(bad)
vmread
or
in
mov
leave
lods
daa
inc
and
cmp
cld
mov
out
inc
mov
(bad)
mov
pop
sbb
jge
jl
dec
je
rcl
(bad)
pop
and
loope
push
add
out
out
fwait
xchg
adc
inc
leave
arpl
push
adc
ins
cld
inc
bound
add
add
add
push
aam
lods
adc
push
out
inc
xchg
cmp
sub
mov
adc
js
cmc
cld
mov
rcl
test
(bad)
inc
push
sbb
push
in
in
mov
cmp
push
or
mov
sar
sbb
scas
fcom
imul
xor
mov
call
xor
sbb
jge
sub
mov
push
sbb
sahf
push
outs
popf
dec
mov
int3
ins
jg
sti
mov
push
push
adc
ja
retf
push
or
inc
ret
sbb
jno
xchg
fs
cmps
int
adc
hlt
retf
in
jo
mov
mov
ror
ins
ins
lea
jmp
mov
push
add
je
stc
icebp
xchg
jle
push
mov
call
and
add
xchg
and
(bad)
fild
cmp
mov
ja
in
idiv
xchg
pop
icebp
mov
mov
aad
icebp
xor
push
test
push
enter
std
jae
dec
add
mov
dec
cld
sub
fnstsw
mov
mov
dec
cs
inc
mov
dec
jmp
data16
sub
std
idiv
in
retf
aad
cld
ror
push
pop
mov
gs
ja
xor
movs
or
bound
fwait
sbb
xor
cmp
jns
pop
sahf
bound
aas
data16
xchg
fcomp
inc
mov
dec
pop
pop
sbb
ret
mov
cmp
inc
aaa
push
jno
mov
sub
mov
cmp
push
pop
adc
push
sahf
mov
inc
adc
and
iret
lea
push
sbb
adc
mov
les
outs
mov
sbb
js
dec
outs
dec
fnsave
bsf
mov
xor
pop
paddw
rcr
adc
sub
adc
mov
in
and
mov
rcl
xor
arpl
xchg
nop
imul
out
arpl
pop
push
stos
(bad)
int
cmp
fnstcw
sbb
repnz
lds
lahf
xor
stos
fs
outs
or
cmp
js
je
push
inc
(bad)
(bad)
jmp
sub
repnz
adc
scas
jecxz
aad
je
imul
sub
xchg
xchg
fcomp
and
clc
cmp
xchg
pop
mov
movs
sub
dec
aam
push
mov
jp
add
jle
xchg
gs
mov
mov
dec
push
pop
sub
scas
repz
mov
inc
inc
nop
ret
push
sbb
xchg
call
sbb
not
sub
add
outs
lahf
fist
xor
xchg
jbe
inc
sbb
adc
adc
data16
jns
daa
outs
mov
ins
(bad)
cmps
jl
sahf
inc
sub
pop
cmps
pop
dec
(bad)
sar
out
or
mov
adc
dec
mov
inc
sbb
dec
sub
and
dec
retf
in
adc
fld
inc
test
clc
xchg
cmp
shl
stos
aam
xchg
ficomp
stc
aam
xchg
add
jmp
fidivr
les
cld
test
in
and
retf
(bad)
das
xchg
sbb
inc
rcr
iret
out
add
outs
loope
in
lea
jle
and
cmps
sbb
retf
mov
in
mov
imul
leave
movs
repnz
lock
mov
adc
jae
lahf
lahf
lods
cli
jns
cmp
or
scas
jl
fs
pop
cs
push
push
dec
push
sbb
push
add
out
ja
pop
out
xor
or
cmp
push
pop
ins
mov
std
test
mov
shr
out
ds
cdq
fst
jbe
cmp
and
add
test
ss
jmp
imul
sahf
jmp
or
bound
pop
pcmpeqw
int
hlt
and
mov
mul
jg
sub
sub
jae
sub
dec
mov
jb
cdq
mov
div
(bad)
xchg
push
pop
pop
and
ds
jge
(bad)
mul
adc
dec
add
es
icebp
rcr
lods
stc
jo
sub
adc
movs
pushf
dec
pop
push
xchg
stc
pop
xchg
sbb
and
imul
dec
jo
mov
ss
scas
imul
dec
fild
push
(bad)
adc
jmp
retf
push
inc
jmp
sbb
xor
aam
push
adc
imul
xchg
or
xchg
mov
mov
mov
and
imul
(bad)
adc
mov
add
das
popf
arpl
mov
mov
pop
popf
lock
mul
mov
jg
jno
mov
pop
sahf
(bad)
pop
mov
shr
rcr
mov
push
and
shl
inc
std
call
mov
(bad)
shl
xchg
xor
or
repnz
sub
popa
and
sub
cwde
stos
nop
scas
add
imul
dec
dec
cmps
add
pop
jge
jl
jge
sub
adc
mov
test
mov
inc
loop
xlat
aam
cmps
jae
bound
mov
rol
stos
adc
add
xchg
pop
ja
cli
mov
inc
ret
pop
adc
rol
sbb
shl
int3
or
faddp
ja
push
jle
test
xchg
ja
inc
test
fld
in
ins
add
jmp
push
pop
mov
scas
fwait
adc
rol
movs
mov
pop
xor
aas
mov
das
push
cmp
mov
jno
(bad)
cmps
retf
jl
imul
cmp
mov
int3
mov
sub
add
mov
jl
push
xor
inc
out
sub
pop
dec
push
in
mov
test
addr16
dec
stos
mov
and
pop
(bad)
out
div
dec
mov
jle
nop
push
mov
sbb
in
iret
(bad)
pop
adc
push
cmp
add
jb
jl
jle
jge
movs
out
xor
xchg
leave
outs
or
dec
pop
das
div
pushf
arpl
shr
and
push
xchg
test
cmove
push
mov
test
sub
push
xchg
sub
dec
cmps
aad
jo
mov
mov
pop
xchg
jb
xor
cdq
mov
ror
push
dec
fsubr
(bad)
xchg
push
in
push
fucom
int3
and
cmps
xor
scas
ins
not
sub
mov
cmps
mov
and
jb
adc
sbb
in
aaa
inc
pop
aam
jge
enter
repz
enter
inc
fstp
mov
and
pop
inc
test
(bad)
lock
dec
rcl
push
rcr
arpl
in
cmp
mov
inc
jl
jns
mov
and
(bad)
dec
mov
push
sub
(bad)
rcr
popa
repz
stos
push
mov
fwait
inc
and
dec
lock
loope
sahf
adc
outs
movs
sti
pshufw
out
xchg
ja
mov
iret
(bad)
jo
pop
dec
xchg
cmps
ret
mov
icebp
lahf
(bad)
mov
mov
jmp
std
adc
jmp
pop
ins
adc
add
push
cwde
dec
sbb
gs
jp
fnstenv
(bad)
sahf
sub
aas
pop
les
test
mov
mov
mov
add
xchg
jae
or
mov
outs
push
popf
lahf
xchg
jle
cmp
loop
jnp
adc
push
scas
aas
mov
je
mov
push
mov
sub
mov
pusha
sbb
sbb
sub
test
ret
cmc
imul
sub
and
fsubr
xor
add
mov
call
into
(bad)
fldpi
jp
push
cmp
add
inc
cmp
mov
mov
mov
daa
lahf
mov
ffree
and
int3
shr
imul
out
neg
inc
push
jns
in
adc
lahf
mov
xor
mov
sbb
inc
mov
shr
bound
or
mov
fnstcw
(bad)
js
out
fs
gs
adc
sbb
das
xor
scas
mov
dec
add
shl
sbb
jo
xor
fcomp
mov
cwde
mov
mov
jbe
xchg
loope
cmp
sub
mov
dec
outs
nop
int3
xor
cmp
repnz
xchg
cmp
cld
lahf
dec
fwait
and
(bad)
(bad)
sbb
clc
pop
and
mov
push
pop
lds
pop
repnz
cmp
rol
std
jmp
pop
sub
mov
adc
(bad)
ret
rcr
outs
sti
xor
(bad)
xchg
in
pop
ins
nop
mov
dec
aaa
into
mov
hlt
or
dec
push
sub
pop
mov
pop
dec
movs
inc
jl
adc
mov
mov
mov
loopne
and
jmp
xlat
clc
mov
push
push
ins
outs
jbe
pop
mov
mov
ret
xchg
enter
jae
cmp
jb
clc
add
inc
lods
cs
push
mov
dec
mov
je
in
push
dec
lods
jae
neg
cmp
sub
pusha
sbb
push
inc
push
rcr
js
popa
sub
lahf
and
sbb
fcom
aad
or
sbb
sub
test
mov
ss
or
dec
mov
retf
cli
jle
jne
and
jecxz
mov
cld
fwait
xor
mov
push
stos
mov
sbb
scas
int3
mov
mov
mov
inc
retf
cmp
fmul
pop
lea
bound
mov
fcomi
addr16
hlt
test
fwait
mov
and
lea
stos
stos
loop
jmp
cmp
fsubr
leave
mov
jno
mov
fld
(bad)
sbb
int
push
fs
imul
jno
mov
push
fistp
in
pop
jo
lahf
jg
(bad)
xchg
mov
mov
sub
fild
fadd
mov
cmp
xchg
js
leave
fdiv
aad
dec
jle
lahf
outs
mov
fidiv
int
push
sub
push
mov
fsubr
(bad)
lea
jnp
mov
push
lods
lahf
test
xor
div
and
les
push
inc
sti
shr
retf
dec
jbe
inc
inc
xor
or
mov
dec
pop
sub
leave
add
jne
add
popf
push
jmp
and
xchg
pop
ret
(bad)
sbb
out
add
add
sub
mov
pop
icebp
kaddb
inc
iret
pop
mov
mov
xor
dec
adc
xor
shl
jmp
icebp
(bad)
test
cmp
fidiv
sub
stc
cdq
or
mov
out
push
rcr
int
add
dec
dec
test
add
jb
retf
sub
movs
pop
arpl
jnp
shl
mov
aas
lods
mov
aas
dec
xor
pop
push
push
dec
fwait
js
iret
sub
xor
jb
dec
rcl
xchg
fldcw
imul
push
sub
repnz
adc
stos
add
int
mov
lds
cmp
(bad)
leave
les
jbe
js
call
mov
cmp
cld
jle
xchg
das
cmp
push
add
sub
mov
dec
test
into
lock
(bad)
(bad)
repnz
jl
mov
jnp
inc
add
out
stos
cmp
push
add
test
push
adc
mov
loope
sub
retfw
ror
mov
shr
repz
fiadd
retf
outs
ins
loope
sub
adc
ins
push
imul
jge
inc
sbb
pop
push
or
jl
push
xchg
and
jo
mov
jb
cmp
hlt
fcomp
cld
cld
or
or
int3
ds
mov
aad
fdiv
cmps
adc
sbb
js
and
test
data16
or
xchg
imul
pusha
sub
mov
enter
mov
mov
loop
enter
je
in
int3
mov
add
and
test
mov
fcmovu
bound
add
inc
jo
fwait
or
inc
xchg
in
push
xchg
sbb
mov
adc
mov
ret
scas
mov
ds
adc
aaa
add
xor
ins
call
icebp
daa
(bad)
out
pushf
rol
movs
loopne
push
sbb
xchg
inc
rol
inc
cmp
xlat
cld
aaa
in
xor
data16
stos
rcl
push
hlt
imul
pop
push
dec
lahf
lea
ret
or
jp
fwait
jle
jmp
pop
mov
xchg
dec
aas
adc
add
xchg
push
les
nop
cmps
pop
xor
les
ins
and
imul
ret
addr16
sub
and
adc
sub
cmp
xchg
jne
sbb
imul
in
aam
adc
enter
test
push
add
sti
es
ror
fstp
jnp
mov
or
adc
(bad)
shl
gs
pop
sbb
dec
cld
int
jb
add
pmulhw
popa
xlat
lds
dec
pop
xchg
repnz
fs
dec
sub
dec
loop
push
inc
and
aaa
in
sbb
mov
cwde
mov
adc
cmc
mov
call
jo
test
inc
sbb
sub
jo
ins
inc
cmp
scas
push
and
jo
jp
xchg
cmps
out
xor
test
dec
shl
adc
xor
sub
inc
test
scas
lods
or
out
mov
imul
mov
jno
imul
lahf
cmp
xchg
and
jp
push
js
aad
mov
das
and
(bad)
jl
rol
fmul
inc
pand
mov
push
sbb
jmp
jge
hlt
lods
mov
pop
or
fwait
cmc
jg
jg
test
add
xlat
pop
adc
or
mov
jae
sbb
int
inc
dec
dec
aaa
xor
pusha
aas
in
iret
jno
scas
jmp
stos
pop
fist
and
cmp
js
inc
jae
test
mov
adc
xlat
add
jle
cmp
xchg
mov
sub
sbb
enter
mov
sub
jmp
cmp
push
and
pop
test
or
mov
and
jno
mov
xor
in
cmc
mov
nop
xchg
xchg
out
lock
adc
stos
push
xor
ret
nop
jl
jne
(bad)
xabort
or
pop
xchg
xor
mov
push
js
adc
cmp
sub
and
fld
push
fcom
adc
or
mov
scas
inc
test
and
xor
shr
push
lea
sbb
idiv
push
(bad)
xchg
add
mov
test
sbb
cmp
pusha
sub
inc
inc
stos
pop
pop
cmp
add
nop
pop
dec
sub
fwait
sub
cmp
retf
test
(bad)
sbb
(bad)
mov
xor
test
xor
inc
mov
adc
repz
retf
cmp
lods
mov
shl
(bad)
mov
retf
std
retf
repz
jne
xor
push
cmp
fsubr
pop
pop
fisub
xchg
repz
movs
mov
jno
fcomp
js
retf
xchg
addr16
and
adc
into
mov
mov
popa
sub
mov
fs
sar
outs
adc
mov
jns
fstp
adc
xchg
push
shl
lock
das
movs
pushf
or
movs
xor
test
adc
adc
test
xor
adc
dec
popa
pop
into
pop
add
(bad)
repnz
mov
and
sub
xchg
lods
dec
inc
inc
jb
sar
or
and
je
mov
lock
(bad)
mov
and
lea
call
(bad)
in
sub
or
inc
sbb
pop
cmps
xor
iret
xchg
and
push
ins
stc
adc
mov
movs
dec
xchg
xor
inc
pushf
sti
cmps
ffree
ins
adc
out
pop
and
dec
jge
push
pop
ret
loop
push
jl
pushf
in
bnd
xor
xlat
sub
aam
das
adc
push
adc
dec
aas
cmps
cdq
mov
mov
xchg
loopne
lea
ins
(bad)
xchg
adc
inc
xchg
cmps
sbb
loop
mov
mov
shl
out
adc
(bad)
jne
dec
dec
sbb
adc
dec
lds
fdivr
jp
mov
mov
in
test
sub
addr16
inc
movs
push
mov
int3
enter
push
and
or
mov
cmp
xchg
movs
xchg
xor
mov
cmps
js
add
ret
mov
shl
mov
sbb
push
dec
jbe
jl
and
(bad)
mov
or
mov
jg
xchg
sbb
pop
xchg
int
or
aad
push
and
cmps
push
pop
mov
push
adc
adc
xor
(bad)
idiv
jge
sub
sbb
in
into
movs
(bad)
xchg
pmuludq
in
fwait
or
pop
in
and
outs
popa
jmp
hlt
mov
mov
push
dec
sahf
mov
jmp
mov
bound
inc
pop
bound
out
push
jae
icebp
inc
mov
int
cmps
and
cs
popf
xor
adc
sub
sbb
loopne
dec
or
and
push
into
pusha
stos
add
call
out
(bad)
out
xor
daa
or
imul
sahf
sub
push
ret
add
push
mov
push
jb
cwde
and
add
fs
push
xchg
pop
cmp
das
sbb
sbb
dec
nop
popf
imul
dec
(bad)
iret
sbb
repz
sbb
ret
add
inc
and
mov
pop
js
adc
stos
dec
push
jg
fmul
enter
jg
push
fnstcw
dec
div
xchg
and
cld
dec
cmc
ins
movs
sar
mov
sub
outs
pop
xchg
stos
xchg
mov
or
push
and
and
adc
xor
out
pop
das
xor
push
push
lods
imul
cmp
mov
sbb
sbb
push
ss
fimul
fdivr
adc
lock
lahf
mov
or
mov
call
sbb
int
or
repz
imul
push
lock
pop
retf
jo
cmp
adc
mul
stc
fnsave
or
sbb
jns
popa
inc
xchg
fcom
int3
fcomp
pop
push
rol
shr
out
fisttp
or
ss
jno
arpl
mov
imul
pusha
ja
xchg
xor
and
ror
ret
aas
ins
or
and
stos
out
dec
cmps
enter
pop
xchg
mov
movs
sub
sahf
sub
inc
lock
fisub
enter
cli
scas
mov
jo
ins
lea
js
lods
add
int3
fwait
xor
stos
je
test
jecxz
inc
pop
out
push
sbb
cmp
sahf
push
not
scas
push
inc
adc
aas
jnp
bound
inc
ret
in
lods
xor
jmp
xchg
sub
sub
mov
cmp
retf
push
stc
fcmovne
neg
xchg
in
cmps
xor
cwde
fld
cmp
es
out
cld
(bad)
arpl
adc
ins
mov
in
into
repnz
frstor
pop
mov
ss
shl
push
inc
cmp
dec
mov
cs
and
or
push
jp
xchg
cmp
xchg
pop
cmp
jno
jmp
push
sbb
pop
shr
mov
fcomp
int
aam
adc
sar
sub
sbb
scas
mov
icebp
xchg
adc
test
jae
adc
in
jnp
xor
test
sbb
shl
ror
cmc
stos
mov
(bad)
push
mov
in
push
push
mov
mov
mov
loopne
popf
jmp
aad
cmp
das
out
cdq
rcl
ins
xor
and
jo
cdq
imul
fcom
imul
add
and
fs
push
aad
mov
cmp
pop
out
inc
push
xchg
mov
jmp
inc
mov
cdq
je
mov
pushf
ret
aaa
loopne
fimul
xchg
loop
and
imul
imul
mov
popa
jl
ss
ds
loop
jo
mov
fs
xor
mov
push
lea
mov
xor
les
cli
mov
(bad)
cmc
push
xchg
sbb
sbb
sub
idiv
mov
lahf
xchg
dec
stos
push
ret
mov
jle
rol
sbb
cmp
pop
dec
test
cmc
mov
mov
pop
aas
(bad)
arpl
call
cdq
cmc
imul
test
test
mov
or
push
fs
lahf
movs
inc
and
icebp
sbb
adc
and
xchg
pushf
sahf
push
test
imul
jb
ss
movs
fwait
xor
fnstenv
pop
inc
jmp
sahf
jle
int3
or
(bad)
imul
pop
shl
pop
sbb
sub
fadd
leave
mov
ss
mov
pop
jne
jo
ss
ret
loop
(bad)
jb
(bad)
inc
adc
imul
lods
out
and
das
aam
sub
enter
sub
sbb
adc
dec
mov
cmps
retf
sbb
je
cmp
daa
pop
ins
rcr
inc
daa
mov
out
push
dec
mov
aas
ins
pop
and
shl
inc
stc
push
retf
packsswb
test
jl
jl
xchg
sbb
and
lods
adc
stc
or
cmp
lea
cmp
(bad)
lock
pop
adc
iret
rcl
out
movs
cmp
test
push
(bad)
rol
push
(bad)
sbb
adc
cld
pusha
mov
test
mov
mov
ss
pop
xchg
push
inc
cli
mov
fwait
fs
xor
dec
repz
jns
mov
push
out
lods
jns
and
fild
lahf
inc
out
jo
jge
fdiv
out
sub
jg
adc
ins
out
lods
jmp
xor
push
out
mov
push
out
xor
fadd
retf
or
sub
cmp
scas
cld
xchg
leave
int3
push
call
push
les
mov
into
shl
xchg
mov
outs
ror
mov
mov
test
cld
pop
sub
jmp
data16
hlt
xor
jg
push
xchg
je
xchg
and
mov
sbb
ins
jo
dec
mov
or
xlat
push
lea
sbb
inc
and
push
adc
sub
mov
repnz
jg
mov
pop
call
test
xor
lea
iret
cdq
out
outs
add
adc
mov
inc
xchg
mov
cmp
jle
movs
fs
and
inc
(bad)
shl
xchg
and
and
jl
sub
int3
mov
cmp
cmc
jbe
fwait
mov
cs
leave
pop
push
(bad)
sti
popf
rcr
out
fdiv
and
cli
repnz
ss
add
push
xchg
test
cmp
cli
jo
inc
mov
mov
xchg
inc
in
retf
cli
or
loope
jg
adc
mov
xchg
push
sbb
add
jae
addr16
arpl
xchg
pusha
mov
les
sahf
test
neg
adc
push
push
mov
push
or
sbb
dec
xor
sbb
cld
jno
es
mov
pop
xchg
bound
stos
cmp
(bad)
xchg
jb
leave
add
add
mov
add
dec
pushf
sbb
adc
or
mov
aam
mov
push
ror
dec
mov
scas
dec
mov
popf
in
(bad)
sub
and
stos
jl
xchg
data16
(bad)
aad
adc
xchg
jne
dec
pop
inc
mov
neg
mov
aaa
mov
push
out
outs
ds
xchg
aas
arpl
cvtpi2ps
xchg
out
mov
or
gs
sub
or
shr
push
mov
shl
shl
fs
lods
or
ror
pop
mov
jecxz
xor
sbb
in
xchg
sar
mov
test
outs
call
xchg
out
xor
sbb
xlat
mov
xchg
jo
pop
ficomp
mov
adc
pop
mov
or
mov
imul
pushf
sbb
dec
test
int3
repnz
sub
cmp
pusha
or
rol
fldenv
jnp
mov
in
push
cmp
add
in
dec
sar
mov
repz
mov
adc
xchg
jae
push
xor
leave
mov
mov
adc
aad
ret
cmc
lds
sbb
test
mov
sbb
out
mov
fadd
sub
sub
cmps
push
xor
bound
or
add
mov
push
or
cmp
call
push
pop
jp
add
rcr
mov
jmp
or
ss
inc
imul
mov
lods
mov
mov
pop
xchg
es
fadd
loope
sub
jmp
retf
xchg
xor
xor
pusha
push
jne
xchg
dec
xchg
test
or
push
(bad)
mov
adc
xchg
mov
sar
pop
xchg
mov
ds
ficom
out
xchg
int
push
(bad)
sbb
mov
ds
cmps
mov
je
jbe
daa
test
fcmovbe
(bad)
aam
jecxz
jecxz
mov
in
add
loope
out
sar
fdivr
mov
sbb
adc
(bad)
stc
jae
rcl
lods
movs
xchg
sbb
mov
jno
mov
fnsave
sar
(bad)
mov
push
mov
or
cs
mov
mov
int
inc
xchg
push
mov
add
and
pop
cli
repz
push
(bad)
out
pop
cmp
mov
jg
sub
pop
aam
sbb
mov
pop
ins
sbb
sbb
repz
mov
or
ins
sbb
stos
lahf
mov
into
ret
into
cmc
je
mov
dec
bound
jo
mov
stos
icebp
push
adc
push
adc
add
cs
leave
iret
push
inc
retf
sbb
or
hlt
cwde
xor
push
add
jmp
pop
mov
cwde
mov
pop
jle
sahf
(bad)
ins
idiv
mov
cwde
sti
mov
shr
jmp
pop
inc
jne
lahf
clc
and
add
in
jne
mov
sub
outs
punpcklwd
pop
dec
iret
inc
sub
js
cdq
lods
scas
sub
sar
(bad)
in
(bad)
jmp
mov
outs
jl
enter
jecxz
movs
adc
lods
imul
scas
pop
ret
push
lods
outs
aas
shl
jno
add
unpckhps
ja
fimul
int
rcr
bound
mov
dec
icebp
mul
stos
pop
popa
sub
pushf
lods
mov
xchg
dec
lds
inc
int3
int
frstor
(bad)
outs
cld
sti
pop
push
sub
jne
adc
loopne
xchg
lods
popa
stos
add
fcomp
add
lds
push
retf
adc
push
outs
fdivr
and
fbld
cmps
mov
cmps
fwait
add
push
xchg
xor
pusha
call
(bad)
mov
xchg
and
rol
mov
push
cmp
into
das
div
and
test
retf
aaa
push
fs
bound
mov
not
(bad)
out
and
xchg
bt
xor
nop
push
jae
jbe
lds
jmp
xchg
and
leave
inc
cdq
inc
cs
repz
push
pop
dec
jg
mov
shr
ret
push
push
aam
rcl
jle
or
sub
test
ret
mov
mov
fwait
ror
sbb
lock
jae
fldenv
push
jge
adc
in
loop
rcr
xor
jge
inc
cs
xchg
inc
mov
or
jae
repnz
retf
xor
push
mov
ins
dec
add
imul
ins
std
mov
lds
test
cmp
push
(bad)
mov
fdivr
ins
mov
add
sar
test
rcr
test
(bad)
jmp
push
pop
div
js
retf
fadd
outs
or
int
scas
mov
les
ja
or
aaa
mov
shr
pop
jmp
pop
(bad)
or
jg
in
imul
js
mov
ret
xor
mov
call
retf
push
pop
add
std
or
sahf
mov
pusha
sbb
mov
jmp
add
jnp
punpcklbw
xchg
out
xchg
sub
mov
mov
pop
sbb
(bad)
rol
or
mov
cmp
xchg
scas
xchg
jmp
push
fisttp
push
in
mov
cmp
xor
jo
add
cli
outs
xor
aas
cs
aas
aas
jns
adc
stc
(bad)
(bad)
dec
jmp
sbb
in
fwait
scas
and
pop
push
(bad)
retf
adc
imul
retf
jle
inc
imul
neg
xchg
mov
add
dec
shl
outs
aad
in
xchg
xor
pusha
test
outs
test
(bad)
xchg
add
push
jge
(bad)
jnp
inc
mov
fstp
cmp
loope
push
and
inc
jns
push
mov
inc
mov
into
out
adc
outs
in
inc
lock
xchg
inc
xor
jp
cmp
push
jge
scas
adc
mov
mov
and
jae
popa
jecxz
ret
dec
dec
cmp
and
mov
xchg
lds
xor
and
leave
fimul
pop
mov
mov
jg
and
pop
std
inc
ss
idiv
pop
pop
and
mov
int3
dec
sbb
outs
mov
pop
fisubr
xor
adc
into
not
pop
imul
push
jbe
stos
mov
loope
pusha
fisub
lock
lods
shr
mov
push
xor
xchg
call
or
sub
and
stos
out
(bad)
adc
pop
adc
outs
(bad)
mov
cdq
cwde
(bad)
js
xchg
arpl
sub
into
fisubr
mov
adc
dec
push
sub
in
fdiv
push
push
mov
cmp
jecxz
sbb
mov
or
add
lea
fistp
mov
les
out
stos
push
dec
cs
cs
and
xor
fsub
jns
outs
fldcw
es
cmp
xchg
lods
movs
cmp
or
idiv
in
sar
lea
push
xchg
leave
fldenv
ret
mov
int
retf
push
or
sbb
xor
mov
or
dec
jge
ja
adc
or
or
inc
cmps
es
sbb
xor
mov
sbb
aam
add
int
jno
sbb
mov
sub
rcr
fld
out
fnclex
adc
inc
daa
xor
jecxz
cwde
cmp
add
cs
cwde
cli
call
sub
dec
xlat
fdiv
jbe
and
cmc
mov
xor
sbb
ins
cmps
cld
mov
shl
jmp
mov
sbb
icebp
(bad)
or
add
xchg
mov
sbb
lock
iret
or
dec
xacquire
and
mov
mov
dec
mov
push
mov
or
rol
(bad)
xor
out
ds
xchg
inc
stos
adc
lock
pop
cld
push
cld
scas
or
and
stos
test
iret
mov
out
add
sbb
call
jle
push
call
and
dec
popf
xlat
xchg
xor
(bad)
pop
and
push
adc
push
mov
aaa
(bad)
rcl
fdecstp
adc
sub
(bad)
mov
fnsave
push
cdq
call
fidivr
dec
shr
mov
dec
dec
mov
xor
call
xlat
pushf
pop
mov
dec
lods
sahf
mov
pushf
jne
push
pop
fisubr
sahf
lods
nop
cmp
mov
add
and
cs
test
push
xchg
jns
jmp
lods
adc
xor
push
jbe
iret
xlat
aam
dec
(bad)
shl
xor
push
sub
retf
inc
aam
mov
jo
add
inc
push
and
sub
xor
mov
pop
jge
mov
jmp
in
movs
and
daa
dec
adc
mov
mov
push
add
mov
mov
sti
lahf
icebp
adc
rcl
loopne
mov
test
pop
sar
mov
jmp
jb
std
sbb
fsubr
jae
inc
push
int
ret
fcom
and
les
aaa
shr
adc
jnp
xor
pop
dec
push
adc
mov
push
pop
jnp
add
retf
nop
jno
push
pop
sbb
dec
stos
mov
inc
and
adc
mov
mov
pop
adc
loope
xchg
and
sahf
fmul
push
das
pop
sti
aaa
mov
fwait
in
xor
retf
or
test
xchg
dec
push
out
xchg
jge
xor
xor
mov
xor
pop
out
in
outs
pop
pop
call
icebp
jns
ds
push
stc
div
xchg
push
lea
push
fsin
test
je
lahf
push
push
iret
xchg
sbb
push
in
enter
iret
icebp
jle
xlat
xor
jno
jmp
dec
out
xor
out
push
loope
ja
dec
jnp
inc
jne
pop
jmp
call
mov
out
adc
sub
pop
add
pusha
adc
or
jno
cmp
mov
fmul
or
pop
dec
cmp
and
sar
arpl
mov
mov
or
ja
imul
xor
inc
daa
les
addr16
ss
mov
arpl
mov
je
xchg
mov
call
enter
je
mov
jge
call
adc
mov
push
jg
pop
dec
mov
sub
dec
sbb
push
jnp
sbb
bound
retf
mov
fcomp
movs
and
sub
and
(bad)
hlt
mov
fnsave
(bad)
aam
push
(bad)
clc
mov
sbb
cmp
lods
lds
mov
shl
or
push
xchg
mov
push
(bad)
in
test
retf
retf
jne
lock
pushf
fcomi
or
jne
sbb
pop
cmp
pop
inc
hlt
imul
(bad)
jp
mov
fdiv
cmps
cmp
ins
mov
fisub
(bad)
add
jnp
loop
cmps
imul
fldcw
fsub
(bad)
daa
sub
shl
ins
bound
inc
sbb
ficomp
mov
imul
int
dec
clc
push
cmp
int
inc
ins
and
and
mov
mov
jp
std
cld
sahf
daa
lods
push
lods
test
xchg
push
ins
push
jne
sbb
jp
cmp
cmp
outs
xor
jmp
loope
es
add
inc
jns
or
sbb
add
lahf
outs
jl
loop
loope
sbb
loopne
add
sub
dec
mov
(bad)
stos
add
add
in
push
(bad)
addr16
aam
xor
inc
ret
inc
cli
xor
(bad)
mov
dec
fldenv
xor
add
xchg
xor
push
mov
jl
jae
adc
imul
enter
aam
pop
push
loopne
add
push
jmp
adc
jb
rol
pop
xchg
popa
(bad)
mov
cmps
sub
das
imul
(bad)
pop
(bad)
jmp
enter
dec
pop
or
dec
dec
scas
adc
mov
sbb
mov
lods
repnz
push
push
mov
and
ins
arpl
pop
mov
out
adc
jno
popf
cmp
mov
retf
psubb
inc
cmp
ficomp
scas
sbb
outs
es
lock
xchg
mov
push
sub
gs
retf
dec
je
(bad)
add
mov
adc
jbe
leave
xchg
test
movs
lds
fimul
jecxz
cmp
ss
jae
push
enter
sbb
inc
popf
xor
jp
into
rcl
mov
and
or
mov
scas
fcom
scas
cwde
adc
clc
in
movs
lock
aad
inc
mov
loope
jns
aaa
mov
mov
int3
aad
push
imul
or
jne
daa
test
xlat
mov
add
fsubr
(bad)
jbe
mov
retf
or
inc
xchg
adc
jno
sbb
sbb
stos
pusha
or
inc
inc
jne
int3
cmps
int3
sahf
push
dec
add
iret
bound
push
adc
ss
mov
jb
dec
and
mov
jns
mov
mov
sbb
iret
mov
cmp
jns
jecxz
or
retf
adc
or
inc
sti
cmp
mov
xor
or
inc
test
jo
and
cmp
jle
push
sub
push
mov
cmps
mov
fwait
pop
lock
pop
mov
shr
add
xchg
lahf
lods
push
jne
and
adc
sti
hlt
mov
mov
dec
mov
icebp
jns
imul
(bad)
adc
je
inc
adc
test
shl
movs
int
les
fisubr
and
clc
jbe
aas
pop
pop
dec
inc
cmc
sahf
push
dec
in
cmp
jo
inc
loop
jl
mov
(bad)
movs
push
fsqrt
popf
sahf
mov
jmp
mov
pop
sahf
xor
inc
dec
repnz
in
mov
mov
imul
xchg
lahf
dec
cmps
or
push
out
mov
push
mov
or
fbld
cmp
or
dec
int3
mov
in
cmp
and
mov
cli
shr
pusha
push
mul
jnp
mov
jmp
aas
inc
xchg
in
jo
xor
scas
sbb
cs
in
mov
adc
mov
sub
add
mov
mov
inc
sbb
fyl2xp1
mov
dec
aaa
popa
mov
js
lods
in
popf
mov
call
js
scas
jp
sub
es
scas
sbb
dec
sti
fcomp
out
push
push
pop
adc
repnz
cmp
nop
in
das
cmp
jo
sub
mov
ins
adc
sbb
aad
vmovhps
test
cmp
int
stos
(bad)
fcom
mov
push
jno
shr
cmp
inc
lock
out
hlt
aam
fs
enter
adc
retf
loopne
movs
repnz
adc
cmp
or
or
jge
push
mov
int
jle
bound
ds
aam
jp
adc
out
pop
mov
(bad)
stc
push
pushf
mov
mov
lds
popf
cmp
ret
xchg
call
imul
mov
jp
lods
push
jo
nop
(bad)
je
dec
pushf
pop
lea
imul
jecxz
mov
aas
rol
sub
mov
mov
mov
pusha
out
inc
push
fisttp
xchg
add
push
lahf
xchg
test
xchg
mov
pop
add
xor
mov
mov
pop
push
rol
dec
(bad)
je
push
mov
pop
and
(bad)
stc
mov
mov
aam
jmp
xor
mov
push
cmp
jp
aad
xor
adc
icebp
hlt
iret
mov
addr16
xor
push
loope
pop
pop
sub
movs
lods
das
jp
push
jmp
(bad)
cmp
jmp
rol
das
cmp
push
jno
jmp
(bad)
fimul
fiadd
xor
popf
loope
cwde
lods
movs
mov
lahf
out
sub
int3
inc
stos
js
lods
or
shl
add
js
stos
and
jmp
push
out
imul
pop
mov
jo
sbb
pop
iret
push
add
add
das
loop
inc
jmp
inc
or
js
mov
cmps
cmp
int3
popf
adc
mov
jmp
fisubr
adc
and
std
inc
repnz
mov
cmps
(bad)
out
and
or
push
sub
stos
xchg
pop
inc
inc
mov
aad
out
scas
test
jmp
inc
xchg
in
mov
fwait
(bad)
imul
pop
(bad)
xchg
daa
or
lods
shl
xchg
lods
dec
aas
adc
test
mov
movs
call
xchg
mov
xchg
sahf
shr
aas
push
fst
ins
push
loopne
fwait
add
pop
or
out
mov
fld
fimul
stos
ror
mov
xchg
jo
lock
mov
adc
outs
sti
mov
sbb
fwait
dec
xchg
arpl
loope
out
mov
add
test
out
cld
ins
sti
inc
stos
imul
xor
sub
ret
jne
(bad)
shl
cmp
adc
adc
fimul
repnz
adc
das
xchg
sahf
xchg
dec
cmp
pop
dec
les
add
imul
sbb
jae
add
and
out
cmps
xchg
cmp
cwde
aad
cmps
test
hlt
mov
daa
fimul
hlt
push
push
pop
jl
push
outs
popf
out
push
fimul
mov
cmp
loopne
jne
popa
push
sbb
xchg
dec
pop
out
movs
or
pop
test
loope
dec
xor
push
gs
push
ins
xchg
push
fisubr
jbe
lods
jl
add
cmc
addr16
cmp
sub
jl
push
in
push
fwait
ss
push
test
iret
jmp
sbb
in
leave
jle
jno
add
mov
inc
clc
loopne
nop
mov
adc
popf
sub
movs
add
scas
add
mov
push
addr16
mov
sbb
in
adc
mov
(bad)
inc
in
pop
mov
aas
push
mov
xchg
xor
lock
mov
call
xor
pusha
mov
loopne
adc
push
retf
int
sbb
xor
mov
mov
ins
sbb
imul
das
mov
add
xchg
bound
jge
sahf
out
mov
pop
ret
retf
jge
out
mov
rol
xchg
scas
mov
xchg
push
jmp
mul
and
aam
xor
mov
jne
xchg
inc
ret
mov
xchg
cmp
mov
cmp
mov
je
xor
mov
out
mov
push
mov
pushf
push
sub
fdivr
sub
enter
dec
repz
push
cmp
iret
mov
mov
std
out
pop
jo
in
ret
pop
and
adc
cmp
int3
push
es
mov
fisttp
xor
pop
ret
aam
sti
xchg
xchg
ret
and
les
push
arpl
xor
inc
mov
stos
cli
mov
mov
sbb
fsubr
jecxz
pop
push
jmp
pop
call
mov
push
push
push
es
xchg
inc
shr
pop
imul
xchg
push
jl
xchg
sub
jge
mov
ins
pop
cwde
pop
ins
shl
call
mov
cmps
dec
mov
std
jb
jp
movs
mov
xor
fild
jns
(bad)
cmp
sub
out
in
repz
rol
jbe
xchg
enter
jae
xchg
add
xchg
gs
movs
out
and
lock
sub
pop
jge
popf
add
std
sub
cmp
mov
scas
cmp
push
jns
cmp
dec
cmps
cmp
push
sbb
cmp
outs
les
shl
sbb
and
pop
mov
pushf
(bad)
test
dec
xchg
loopne
xor
retf
mov
sub
add
and
arpl
xchg
mov
in
mov
aam
pop
sub
hlt
ret
loope
add
stos
bound
enter
stc
aam
ja
test
pushf
outs
or
xor
stc
push
mov
or
dec
sbb
or
cld
(bad)
sub
and
out
stos
fcmovnu
or
std
mov
scas
and
push
inc
scas
adc
jb
icebp
add
mov
xchg
aam
movs
or
pop
xor
(bad)
mov
mov
imul
jmp
fisttp
adc
aas
push
xor
out
fst
inc
jmp
js
lods
mov
xchg
(bad)
pop
ficom
adc
add
test
pushf
loop
mov
hlt
pop
adc
adc
scas
fld
pushf
and
sti
std
dec
adc
fld
jns
sub
in
add
mov
sar
pop
add
xor
retf
cdq
sbb
into
mov
mov
(bad)
mov
outs
adc
lock
jmp
cmp
in
push
jle
cs
out
cmps
sbb
imul
std
adc
jae
inc
pop
mov
hlt
and
into
sahf
inc
mov
enter
push
jbe
(bad)
push
mov
(bad)
js
movs
loopne
inc
fbld
test
inc
in
and
dec
nop
int3
and
retf
xchg
fisttp
dec
mov
push
push
test
xchg
jbe
dec
and
jmp
iret
out
gs
loopne
push
call
mov
inc
iret
dec
int
jnp
jns
sti
sbb
ret
jmp
imul
xor
cmps
jmp
pop
jne
or
hlt
repz
mov
dec
mov
dec
in
loopne
or
ret
pop
out
adc
push
imul
jle
mov
sbb
and
jp
inc
cmc
lahf
fwait
pop
cwde
pop
push
popf
mov
xor
clc
sbb
sar
aas
leave
mov
xchg
out
mov
add
jg
loopne
mov
jb
and
mov
pop
idiv
cmc
sub
div
push
pop
jne
jbe
shr
mov
inc
jb
xor
mov
sar
popa
addr16
arpl
std
jno
push
icebp
dec
out
jns
sub
dec
pop
sub
call
mov
outs
fs
xor
dec
xchg
shl
mov
mov
add
cli
imul
xchg
sar
mov
sbb
mov
cs
push
adc
or
mov
add
cmp
enter
jl
test
into
pop
lods
aad
int3
(bad)
stc
shl
cmp
xchg
mov
jmp
test
add
fiadd
addps
lahf
jnp
mov
in
and
add
or
sub
and
mov
pop
mov
popa
xchg
sub
mov
mov
enter
ret
shr
pop
or
adc
push
or
dec
mov
in
out
or
in
pop
daa
(bad)
cmp
jnp
mov
dec
xchg
dec
xchg
jbe
xchg
sahf
ja
stos
test
sbb
cmc
(bad)
mov
push
js
xlat
mov
adc
movs
adc
mov
jg
hlt
(bad)
push
mov
adc
mov
sub
movs
inc
sbb
out
sbb
test
lds
arpl
push
jb
in
mul
push
mov
mov
test
mov
hlt
sub
aad
leave
inc
in
je
in
pop
pop
and
iret
pop
mov
sbb
xchg
cmp
icebp
std
div
outs
dec
inc
or
and
addr16
rcr
push
lock
or
push
sahf
xor
imul
sub
xchg
inc
mov
lahf
cmps
daa
sub
push
fistp
inc
mov
mov
les
push
pop
and
out
add
add
dec
mov
adc
xchg
fsub
jmp
push
add
icebp
and
out
xor
enter
in
(bad)
retf
int
and
(bad)
cwde
mov
adc
es
sub
push
cmp
imul
inc
lds
test
stc
leave
lods
sbb
mov
pop
popa
mov
lods
mov
add
out
in
ror
push
sub
or
ret
in
xchg
stc
and
test
cmc
cmps
ins
add
mov
jns
mov
sbb
mov
adc
lahf
mov
jp
nop
mov
int
sbb
inc
aam
pop
lea
pop
pop
mov
push
dec
xor
pop
jns
fdiv
mul
sub
mov
cmp
fild
jmp
fwait
jmp
hlt
and
enter
mov
cdq
mov
mov
popa
mov
adc
shl
mov
pop
out
sahf
cmps
xor
loopne
fs
in
out
or
pop
add
xchg
call
mov
add
fiadd
xchg
outs
fistp
push
pop
push
je
mov
sub
adc
scas
iret
nop
(bad)
jns
sahf
in
enter
(bad)
outs
dec
and
inc
push
dec
sbb
mov
mov
sbb
add
fldenv
dec
pop
ds
mov
retf
jmp
push
cmp
movs
xor
iret
cwde
pop
cs
fwait
mov
push
jge
daa
inc
daa
jmp
sbb
nop
jnp
mov
and
sub
popa
push
cld
adc
xchg
add
aad
mov
mov
xchg
loop
mov
sub
xor
and
cmp
test
add
jae
xor
shl
or
and
pop
(bad)
(bad)
out
ds
jecxz
inc
cmp
xor
fst
inc
and
daa
jae
xor
jnp
stc
or
lods
inc
jp
xor
loopne
pop
push
fwait
push
add
inc
or
repnz
and
data16
cmps
mov
rcr
mov
fld
jae
out
adc
mov
mov
sahf
cmp
int3
cmps
add
icebp
jnp
je
fistp
push
sub
mov
das
mov
adc
nop
ins
movs
ja
jg
sub
xchg
jge
xchg
scas
sub
jnp
leave
gs
(bad)
mov
js
mov
pushf
adc
ret
push
outs
fldcw
(bad)
outs
shr
jg
std
movs
aaa
shl
push
adc
xor
inc
repz
stc
pop
cmp
aam
xchg
sub
xchg
call
push
repnz
mov
inc
hlt
paddusw
cmps
js
cmc
leave
bnd
jne
in
push
cld
movs
cs
cwde
bound
push
dec
movs
inc
mov
icebp
xor
leave
je
movs
int
rcr
xchg
pop
push
fwait
mov
mov
cmp
icebp
ins
mov
push
mov
hlt
xor
hlt
retf
inc
pop
retf
jl
fisubr
or
mov
push
cmc
rcr
sbb
dec
(bad)
cmp
jg
or
inc
add
xor
lds
xor
xchg
icebp
out
ror
mov
jmp
mov
and
je
mov
mov
and
test
jge
pusha
mov
or
(bad)
jne
mov
scas
push
add
pop
out
(bad)
push
popa
adc
arpl
sub
push
and
sub
xchg
scas
scas
xor
mov
retf
rcl
or
or
sahf
push
and
mov
xchg
sub
ins
loop
inc
xchg
imul
jg
out
pusha
inc
mov
in
fmul
movs
sub
cmp
fdivr
pop
dec
sar
fldenv
inc
dec
xchg
leave
inc
jmp
and
xchg
test
lahf
push
adc
jnp
inc
mov
mov
mov
out
mov
and
and
pop
adc
les
and
pop
mov
je
sbb
xchg
js
mov
xchg
ds
cmp
sbb
ror
mov
adc
rol
jg
clc
fwait
aam
sbb
outs
shr
sbb
ret
aaa
mov
bound
(bad)
call
sub
ja
cmps
jmp
in
jnp
clc
cs
pop
loopne
add
mov
out
sti
scas
or
xlat
pop
aas
fsub
push
push
mov
xchg
push
repnz
mov
pop
stos
or
fwait
mov
test
pushf
xchg
jl
cmp
push
pop
iret
data16
fmul
aaa
movs
push
add
dec
daa
mov
xchg
sahf
lods
nop
pop
jne
out
je
addr16
(bad)
fiadd
push
jno
or
adc
sbb
inc
out
stos
retf
iret
dec
adc
outs
aad
mov
mov
xor
and
dec
js
call
int
hlt
jmp
lea
loopne
cmp
inc
sub
mov
mov
cmps
test
aad
cs
sbb
mov
mov
mov
in
stc
and
mov
std
sub
pushf
mov
inc
mov
cmp
fsincos
jmp
std
test
mov
adc
xor
std
sbb
xchg
ins
popa
cdq
fiadd
jae
not
(bad)
mov
pop
pop
xor
or
data16
xor
in
xlat
and
dec
add
push
fsubr
arpl
jle
ficomp
pop
mov
mov
aaa
cmp
pop
cli
mov
fcom
lock
movs
mov
lods
cwde
jmp
scas
(bad)
shr
retf
enter
je
(bad)
jmp
mov
mov
add
lds
clc
loop
in
adc
jge
daa
jo
inc
movs
pop
or
add
sbb
and
xchg
and
out
mov
jle
dec
jle
adc
mov
push
mov
in
or
ror
mov
sub
mov
movs
sbb
test
pop
jnp
in
jl
stc
arpl
mov
(bad)
jecxz
pushf
icebp
mov
jo
push
jmp
shl
nop
jae
ja
movs
mov
scas
xor
pop
jp
pop
push
scas
retf
pop
clc
aas
pop
pop
xor
(bad)
xor
scas
mov
jmp
mov
cs
popf
mov
movs
dec
mov
int3
shl
js
xlat
out
sub
dec
inc
gs
sbb
cmps
shl
mov
dec
stos
jl
push
mov
cdq
std
cmps
xlat
shr
or
mov
adc
jge
push
mov
adc
test
ja
das
ror
xor
lock
sbb
ins
aaa
les
test
dec
cmp
jge
clc
push
sbb
push
dec
inc
jmp
(bad)
xor
cld
jmp
rol
ror
sbb
add
out
cdq
scas
xchg
fcmovnbe
inc
fs
adc
and
cdq
(bad)
(bad)
push
pop
movs
(bad)
int3
jl
mov
mov
in
cs
sti
xchg
stos
cwde
jnp
jmp
das
loop
fbstp
retf
addr16
call
and
adc
nop
jl
idiv
shl
dec
cwde
retf
jb
retf
cmps
icebp
mov
mov
sbb
xchg
push
fimul
or
mov
out
fdivr
push
xchg
and
jl
repz
inc
dec
shr
and
loop
cli
dec
xchg
xor
fmul
les
cmps
clc
mov
pop
cwde
push
cwde
mov
cdq
cdq
and
xor
xchg
push
cdq
fs
and
repnz
or
xchg
aaa
or
xchg
lahf
or
mov
ffreep
(bad)
fwait
jne
and
leave
arpl
mov
je
cmps
or
cmp
ret
jne
cmps
fiadd
push
add
outs
fistp
inc
mov
push
sti
dec
ins
fst
sbb
jb
push
push
adc
adc
popf
or
xchg
push
and
stc
dec
rol
leave
cmp
rcr
pop
stc
jge
inc
ja
int
jmp
cmp
inc
adc
jbe
mov
mov
add
sbb
dec
mov
mov
test
test
inc
sbb
pusha
jb
and
pop
test
movs
and
loopne
xor
push
out
aam
and
shl
pop
mov
inc
aam
mov
dec
and
adc
iret
fs
fmul
fs
in
xor
sub
movs
retf
and
xchg
and
xor
jge
dec
push
(bad)
retf
push
cmp
mov
cmp
loope
mov
inc
push
xor
(bad)
and
cmp
cli
mov
push
leave
cld
xchg
in
jo
retf
or
jmp
push
imul
test
xchg
xchg
mov
sahf
stos
sub
cmp
lods
fld
mov
sub
xchg
mov
jl
mov
xor
jle
pop
jae
adc
mov
ss
iret
cli
inc
pop
inc
das
jne
ja
mov
rol
fidiv
in
sub
mov
cmp
fwait
loopne
cmp
ss
cld
dec
repnz
lds
adc
jns
retf
outs
popa
add
popa
mov
mov
pop
sub
stos
rol
mov
add
push
pop
or
or
xlat
dec
or
pop
ins
mov
jecxz
call
jl
push
pop
in
xchg
jno
or
popa
dec
jns
mov
mov
xchg
repz
sbb
fwait
mov
xchg
inc
repnz
pop
pop
push
lahf
pop
inc
sbb
in
xor
(bad)
and
add
test
mov
gs
mov
mov
lahf
fcmovnb
pop
das
sbb
jl
ss
jge
ja
addr16
loopne
mov
and
retf
mov
sbb
xor
lds
jge
pop
test
js
aaa
call
jbe
retf
lgs
push
mov
js
addr16
jne
pusha
shl
mov
or
in
or
mov
rcl
out
sbb
push
lods
je
aam
je
or
imul
sub
xchg
jmp
in
fistp
push
(bad)
cmp
sbb
movs
xor
xchg
sbb
in
ret
jmp
cmps
daa
clc
daa
sti
loop
dec
cmps
jmp
call
xor
lods
daa
pop
push
pop
pop
jne
test
dec
daa
cmp
push
push
lods
xchg
ffreep
dec
leave
das
outs
data16
sub
fs
xor
stc
ss
mov
xchg
push
sbb
call
add
ins
xor
ss
mov
bnd
dec
(bad)
push
mov
call
or
sti
push
and
test
push
out
fwait
mov
stc
inc
fs
mov
gs
mov
test
mov
rol
inc
(bad)
cmp
ror
lea
cli
leave
xchg
retf
jbe
pop
push
retf
fimul
pop
xor
loop
jle
pop
sar
sub
sti
adc
imul
pushf
jns
cmps
stos
call
jno
add
out
mov
xchg
je
sbb
popf
mov
stos
jo
mov
imul
js
outs
add
in
inc
repnz
add
mov
loopne
or
shl
fcomp
ja
pop
sub
ret
mov
xor
test
inc
jnp
in
movs
xor
in
out
pop
mov
push
pop
add
mov
es
jmp
(bad)
cmp
mov
cmp
lods
loopne
rcr
jmp
lea
fst
nop
sub
inc
pop
jp
loope
or
aas
xlat
daa
aaa
dec
outs
repz
mov
lock
test
and
mov
sti
adc
fisub
in
jbe
pop
cs
mov
std
add
ret
sar
mov
mov
inc
xlat
stc
add
daa
inc
je
dec
rep
test
ffreep
scas
stc
push
jl
movs
ret
mov
jmp
stos
xchg
mov
push
in
adc
cli
fld
xchg
mov
das
or
(bad)
retf
push
das
rol
fist
sub
retf
stos
mov
xchg
bound
jne
ja
das
shl
push
(bad)
fild
(bad)
adc
daa
repnz
jbe
sbb
stc
les
push
or
sbb
sahf
push
dec
dec
sub
jge
cmp
nop
mov
cmp
fldenv
add
add
call
je
push
fdiv
jmp
pop
call
mov
scas
mov
mov
mov
outs
in
cmp
jmp
fidivr
repnz
pop
pusha
inc
lods
jle
sub
mov
mov
cmps
add
mov
add
retf
jg
cli
mov
repnz
ret
sbb
ss
cmp
neg
pop
add
xchg
lea
sar
out
shr
xor
mov
push
cdq
xlat
xchg
or
xchg
pusha
(bad)
adc
jmp
pop
sbb
dec
por
mov
lahf
imul
xchg
jmp
mov
cmp
jbe
fst
clc
and
jmp
outs
call
or
fisub
push
ja
jg
dec
push
cwde
dec
test
pop
sbb
sbb
xor
lds
loopne
ret
mov
mov
in
jg
int
imul
ja
test
out
std
pop
xchg
fwait
mov
sub
sub
stc
xlat
ja
mov
mov
and
pop
ror
jge
sub
aas
xor
fld
mov
cmp
sbb
or
pop
fdivr
gs
adc
push
out
jmp
pop
mov
sub
xchg
mov
rcr
loopne
fldln2
dec
mov
ficom
pop
and
fiadd
dec
mov
les
stos
repz
in
dec
retf
in
shr
mov
loop
(bad)
xlat
pop
xor
neg
mov
dec
sub
movs
ret
mov
sub
sbb
fist
into
shr
js
adc
push
add
mov
les
inc
mov
repz
cmp
inc
test
loopne
push
out
mov
push
rcr
dec
repz
cmps
es
adc
in
iret
dec
call
ret
(bad)
pop
sub
outs
inc
cmp
add
xchg
pop
xchg
pop
icebp
lahf
mov
push
mov
pushf
clc
outs
(bad)
jmp
or
add
push
mov
movs
push
and
cs
ds
mov
shl
xchg
xlat
pusha
cwde
aam
sbb
dec
scas
push
retf
jl
add
loopne
xor
fbld
ret
xor
stc
loop
push
stos
pop
retf
cmp
xor
movs
arpl
fldcw
mov
fwait
ss
gs
dec
stos
sbb
loop
or
arpl
mov
mov
jae
outs
add
mov
mov
and
mov
iret
retf
jl
stos
jns
mov
inc
inc
pop
jo
cmps
xchg
inc
sbb
vcvtpd2dq
inc
sbb
out
sbb
push
or
in
add
imul
cmp
mov
jmp
fsub
es
sbb
(bad)
fsubr
pop
sbb
pop
aas
out
cdq
adc
xabort
add
or
sub
cmp
sbb
outs
stos
mov
ret
pusha
mov
mul
stc
test
xchg
repnz
rcl
xchg
mov
(bad)
mov
push
jmp
mov
loop
repz
adc
fcomip
pop
dec
mov
sbb
mov
and
neg
dec
les
jl
push
outs
jmp
(bad)
mov
jne
mov
pop
outs
mov
fcomp
dec
jno
cdq
ror
popa
push
jg
jne
inc
loope
ins
out
call
add
jae
jg
mov
jb
jle
pop
daa
shl
ror
mov
adc
(bad)
mov
mov
adc
cmp
rol
and
jge
pop
jmp
call
and
cdq
mov
add
sub
(bad)
(bad)
lods
aad
mov
xor
sub
scas
and
dec
ror
dec
add
sub
and
loop
pop
mov
mov
xchg
lock
add
dec
test
lods
sub
ins
out
pop
jg
xor
fiadd
(bad)
in
cdq
cmp
out
adc
xor
(bad)
inc
sar
cmovge
in
fdivr
in
mov
mov
not
ret
inc
mov
cmp
(bad)
inc
sbb
out
jecxz
dec
mov
dec
jmp
stc
js
(bad)
mov
call
inc
movs
mov
pcmpeqb
mov
push
dec
fiadd
mov
lahf
psubq
lods
ins
mov
and
mov
cmp
mov
lock
aas
xchg
xor
mov
scas
ret
jns
je
pop
add
cmp
adc
lods
cmps
pop
ins
call
xor
stos
cmp
and
(bad)
mov
stc
mov
mov
xchg
rol
sbb
adc
mov
and
add
test
cmp
repnz
cmps
xchg
pop
inc
imul
xchg
(bad)
inc
mov
inc
lds
dec
imul
mov
call
mov
pop
xchg
mov
mov
add
jbe
sbb
cmps
sti
rcr
pop
push
mov
(bad)
sbb
pop
sub
push
dec
push
cmp
push
cmps
xchg
test
or
mov
icebp
sbb
repnz
or
cmp
ja
(bad)
test
lods
dec
mov
sti
fcmovnb
pusha
std
fs
or
mov
or
and
nop
pusha
cmps
or
and
les
sti
fnsave
mov
mov
mov
cmc
ror
pop
push
cmp
stc
mov
popf
mov
in
jmp
pop
out
push
mov
fadd
mov
imul
adc
popa
iret
out
imul
xchg
mov
gs
jae
sub
cmp
mov
addr16
fst
and
add
pusha
iret
into
loope
mov
sbb
arpl
add
jle
sub
inc
sub
aad
ret
mov
cmps
add
cmps
enter
cmp
push
xchg
jmp
and
call
xchg
ret
dec
movs
(bad)
mov
adc
pop
cmp
or
in
and
sbb
call
mov
sub
arpl
xchg
test
in
push
mov
popa
mov
and
mov
pop
into
jecxz
(bad)
in
mov
mov
sbb
push
sub
and
popf
jl
mov
add
cmovg
bound
dec
(bad)
neg
addr16
mov
addr16
ins
pop
push
sub
ffreep
dec
in
pop
mov
jg
test
cmp
and
nop
(bad)
inc
cmp
out
add
test
loopne
mov
(bad)
vpperm
inc
mov
(bad)
pop
les
cmp
xchg
fwait
dec
dec
add
add
mov
aam
retf
pop
aaa
jae
push
sbb
push
sub
rol
mov
mov
fisttp
push
idiv
(bad)
je
cmp
sub
pop
(bad)
mov
fidiv
cmp
test
pop
(bad)
xlat
xchg
fisttp
xchg
cmp
mov
xchg
scas
fsub
outs
std
pop
scas
daa
test
mov
mov
pop
pop
outs
add
cmc
(bad)
stos
dec
dec
add
dec
rcr
aas
pop
inc
push
pop
sbb
clc
mov
cs
daa
imul
ss
and
mov
inc
add
fistp
fwait
sub
fcmovnu
cvtps2pi
iret
mov
inc
scas
arpl
dec
rol
mov
call
mov
cdq
mov
mov
mov
sbb
mov
les
pusha
sub
dec
aad
sub
(bad)
test
(bad)
gs
sub
adc
cmp
popa
pop
xchg
mov
dec
into
ret
daa
inc
xor
and
push
mov
cmp
and
nop
std
rol
outs
push
and
adc
add
mul
bound
sub
push
adc
scas
dec
stc
outs
call
pop
es
aas
inc
cs
sub
xchg
(bad)
out
xchg
pop
je
adc
sbb
lock
mov
xchg
inc
cmp
shr
stos
sub
xchg
jp
(bad)
test
int3
je
ret
loopne
sub
mov
jmp
retf
mov
fcomi
adc
dec
sbb
xchg
or
imul
shr
sub
mov
and
sub
lea
inc
lods
mov
sub
push
add
jae
and
int
mov
jle
cs
and
dec
adc
or
sahf
xchg
jne
js
cdq
call
adc
adc
cld
push
cmp
push
pop
lds
xchg
pop
sbb
mov
test
cmp
popf
pop
rcl
sub
pop
loop
ret
push
retf
sti
inc
inc
icebp
cmp
ins
fs
bound
mov
jecxz
and
outs
dec
xchg
xor
js
jns
bound
xor
test
lods
push
(bad)
cmp
ret
cld
(bad)
maskmovq
idiv
repz
inc
and
push
adc
fisubr
out
retf
repz
leave
retf
jb
nop
mov
fistp
jmp
pushf
loopne
fnstenv
mov
cmps
cmps
stos
sub
pop
retf
in
dec
in
or
out
ds
push
clc
mov
aam
fidivr
sbb
ficomp
daa
or
addr16
lods
xlat
push
adc
sbb
mov
add
pop
(bad)
adc
xor
xchg
xchg
xor
rol
mov
mov
pop
leave
jmp
mov
mov
int3
mov
in
jmp
jle
das
jg
inc
mov
push
leave
es
out
movs
cld
pop
ins
outs
fsub
stos
add
scas
in
je
xor
mov
(bad)
call
pop
mov
push
mov
xchg
cmp
std
fsub
add
scas
cmps
jnp
dec
push
and
js
inc
int
mov
shl
push
inc
frstor
fmulp
push
in
push
xor
sub
repz
push
dec
(bad)
mov
mov
adc
jae
ins
fisubr
gs
loope
and
add
(bad)
stos
add
repnz
lods
pusha
or
sub
int3
test
or
and
std
add
dec
into
es
cs
sub
pushf
mov
or
fnstcw
imul
rep
ds
cmp
div
push
pusha
lds
adc
xchg
je
retf
mov
cwde
or
mov
xor
push
and
ins
rcr
xchg
(bad)
fild
test
xchg
inc
jae
shl
pusha
clc
in
pop
mov
(bad)
sub
in
(bad)
(bad)
adc
jbe
mov
inc
das
mov
cs
mov
dec
out
repnz
push
fsubr
mov
jbe
sbb
call
jp
pushf
mov
sub
loope
jb
push
int
xlat
sub
add
jae
jbe
retf
push
mov
xchg
mov
iret
cmp
out
push
sbb
rep
cmp
push
jno
xchg
or
cmps
mov
daa
pop
jb
rcr
sbb
xlat
push
inc
adc
arpl
lods
leave
rcr
clc
mov
pop
sti
and
xor
aas
std
fwait
int
sub
push
mov
pop
jp
imul
mov
add
and
fcmovb
cmp
sar
stc
sub
sar
xchg
es
xor
(bad)
leave
repz
in
cdq
or
sub
fadd
mov
(bad)
xor
mov
movs
lahf
mov
xchg
xor
mov
cmp
stos
mov
retf
mov
shr
push
xor
loope
adc
cmp
jmp
(bad)
push
xchg
or
xor
pop
sub
in
call
and
daa
fisttp
mov
fst
adc
imul
rol
pop
rol
cmp
popa
jno
lock
ret
out
xor
pop
mov
nop
aad
stos
pusha
ins
mov
mov
mov
add
out
into
fs
add
hlt
ret
stc
or
cmps
and
mov
sub
or
clc
lock
(bad)
stos
mov
or
jecxz
sub
aaa
fist
out
cwde
add
sub
xor
in
aam
movs
ins
sbb
cmps
mov
ins
fisttp
xchg
xchg
fwait
push
imul
jno
sar
outs
jle
retf
aas
out
sbb
push
ss
loopne
arpl
neg
mov
sub
xor
push
add
mov
std
push
mov
mov
inc
cmps
jns
mov
nop
jg
fcmovbe
xor
cmp
jle
pop
(bad)
sub
in
outs
xchg
sbb
sbb
dec
add
push
arpl
es
pop
mov
mov
mov
xchg
push
rcr
cmp
mov
(bad)
out
iret
ja
adc
shl
cmc
(bad)
dec
sbb
mov
dec
xchg
aas
retf
cli
into
xchg
outs
sub
jmp
dec
rcr
fisttp
fsub
adc
inc
imul
les
fs
jb
js
movs
aad
pop
mov
(bad)
mov
mov
xchg
loope
int3
clc
add
cmp
stos
lods
cmp
mov
cli
jo
and
enter
int
rol
fstp
pop
add
inc
bound
jnp
ret
mov
daa
es
dec
(bad)
es
cmc
push
mov
sub
jmp
jecxz
out
(bad)
push
mov
mov
imul
sbb
and
retf
outs
rcr
jg
push
(bad)
aad
cmps
aam
(bad)
nop
or
ror
jb
mov
inc
hlt
dec
repz
jmp
test
ss
adc
jbe
xchg
outs
push
std
cdq
stos
push
and
cdq
popa
stos
fcomp
fstp
std
sub
cwde
sbb
pmulhw
dec
or
pop
mov
call
repnz
(bad)
add
dec
cmps
data16
call
mov
sub
jmp
pop
xchg
push
stos
rol
xor
iret
daa
addr16
mov
push
shl
cmp
sbb
rcl
push
xor
xchg
nop
or
or
adc
add
loopne
adc
cmp
aam
imul
and
mov
imul
fiadd
(bad)
sbb
out
mov
cmc
push
fistp
mov
push
ins
test
xchg
jnp
and
pushf
outs
dec
icebp
push
outs
cmps
and
xchg
cli
test
cmps
inc
test
repz
ss
psubsw
jb
movs
dec
rol
ins
jg
popf
sbb
not
into
test
xchg
ins
xor
rcr
addr16
retf
jmp
adc
(bad)
(bad)
loop
shr
mov
out
pop
test
shr
fild
(bad)
sub
lods
jge
in
ror
inc
and
int3
push
rcl
das
push
ret
mov
push
ret
nop
mov
dec
jmp
(bad)
jge
ror
pop
movs
mov
hlt
sub
mov
cmp
in
fdiv
and
test
es
fiadd
cld
outs
adc
data16
enter
rol
in
iret
push
or
mov
mov
addr16
mov
mov
jl
push
rcl
in
enter
add
jg
movs
pop
sub
inc
lods
add
jmp
inc
fmulp
in
push
and
push
or
fbstp
ss
jmp
out
ds
xor
jmp
push
loop
fisub
cmps
pushf
lds
int3
into
xor
jp
pop
cmps
push
rcl
jl
pop
push
das
in
ja
xchg
pop
(bad)
lahf
xchg
js
out
(bad)
dec
adc
hlt
push
cmp
cld
lock
and
jo
cmc
cli
mov
shl
shr
fcomp
jnp
add
xor
out
add
pop
in
mov
cmp
test
mov
push
cld
push
or
inc
pop
ins
jmp
jp
enter
rcr
call
lods
push
bound
xchg
retf
out
mov
fs
jmp
mov
and
mov
ja
cmc
pop
cmps
into
adc
ja
(bad)
mov
adc
and
xor
dec
std
inc
mov
das
lds
fild
outs
nop
or
sbb
jbe
or
xabort
movs
xor
or
mov
js
inc
lock
cmp
out
pop
fistp
ss
xor
enter
arpl
mov
stos
ja
xor
iret
pushf
vmovmskps
and
pop
test
or
add
arpl
mov
xchg
push
imul
jmp
addr16
jmp
ror
cmp
adc
cli
or
sub
sub
(bad)
hlt
jo
call
dec
push
ja
push
jb
dec
mov
int
jg
test
xlat
cmp
mov
cmps
int
sbb
ja
mov
jecxz
out
in
enter
cmp
xor
or
movq
inc
lea
imul
and
push
ret
sub
xchg
pop
ss
xchg
push
or
aas
push
jae
jne
cmp
fstp
mov
(bad)
out
dec
(bad)
xchg
rol
dec
jae
sub
mov
mov
pop
jnp
dec
jno
fidivr
out
and
sbb
lods
(bad)
cmp
clc
pop
ins
les
stos
dec
cld
mov
dec
mov
std
out
scas
lock
inc
lds
aam
mov
dec
sub
push
and
dec
retf
inc
rcr
out
xor
gs
pushf
jo
mov
sbb
outs
mov
mov
pop
push
and
mov
cdq
xor
push
mov
cmp
cmp
repnz
xchg
sbb
add
inc
mov
xor
loope
jge
xlat
adc
inc
les
cwde
mov
cli
in
mov
dec
das
adc
nop
retf
fiadd
inc
fadd
lods
sbb
xchg
push
sahf
xor
retf
push
fild
jge
call
xlat
pop
adc
adc
das
test
dec
and
shl
cmps
movs
sbb
popa
mov
cmp
sub
popf
jge
or
setbe
or
push
lds
test
jbe
dec
imul
jbe
aad
cmps
mov
movs
mov
(bad)
daa
inc
mov
pop
xor
cli
xchg
cli
stos
mov
push
sbb
xor
cld
pop
in
mov
lds
dec
out
dec
aas
mov
(bad)
mov
scas
or
jae
ret
retf
cld
lock
hlt
cmp
xchg
das
jb
xchg
jle
mov
stos
jns
push
iret
and
mov
mul
add
xchg
cs
mov
cwde
xchg
cmp
mov
imul
mov
or
mov
scas
jecxz
inc
std
dec
xchg
xor
push
xchg
retf
pop
xor
inc
in
mov
push
sub
mov
daa
and
fsubr
xor
xchg
call
out
scas
nop
call
pop
jecxz
dec
clc
mov
movs
in
xchg
mov
aas
push
dec
push
cmp
repz
dec
xor
enter
test
jnp
mov
not
cmps
sahf
mov
daa
cmp
sar
dec
push
popa
lock
fwait
enter
movs
jmp
push
or
mov
mov
es
inc
pop
pop
(bad)
or
inc
inc
pop
jp
sti
add
push
shr
or
lods
push
pop
ja
jl
mov
hlt
int3
call
mov
adc
test
sub
(bad)
fwait
sbb
mov
or
sbb
cld
jno
jb
imul
addr16
inc
xchg
mov
mov
dec
mov
aaa
iret
call
aaa
daa
jg
dec
stc
gs
push
int
xor
call
pop
fld
pop
(bad)
int3
enter
cmp
pop
pop
stos
lods
mov
addr16
test
cwde
sub
jae
lods
das
loopne
repz
sbb
test
cmp
jo
out
movs
repnz
(bad)
jge
push
lock
cld
aam
cmps
add
push
hlt
lds
push
lea
jnp
lea
and
fwait
adc
test
sbb
idiv
enter
jo
mov
cmc
imul
mov
icebp
pop
pop
cmp
sbb
in
retf
and
cmp
rol
jge
add
mov
fbld
shl
or
in
push
sbb
jns
adc
jns
jmp
and
mov
xchg
popa
dec
call
xchg
out
add
call
mov
call
sbb
mov
dec
(bad)
pop
add
scas
jo
retf
je
test
jns
pop
push
pop
pop
xchg
mov
jl
fcomp
aaa
jno
push
sti
iret
adc
adc
inc
mov
mov
lds
scas
mov
cmp
test
sub
mov
call
repz
push
jl
jecxz
mov
xchg
je
iret
inc
cmps
movs
rcr
in
in
aam
ror
mov
sbb
sbb
call
mov
mov
jb
repz
inc
adc
jmp
cmp
fiadd
mov
fadd
sbb
mov
xchg
bound
mov
(bad)
aas
and
add
scas
mov
int
or
cmova
xchg
mov
xor
and
or
cmps
mov
inc
aam
mov
adc
and
inc
imul
fsubr
cmp
push
inc
add
mov
popa
(bad)
icebp
mov
add
(bad)
popa
sbb
scas
int3
clc
test
dec
in
xchg
xor
dec
sbb
xor
pop
xor
ins
dec
das
inc
push
dec
push
xor
jnp
push
mov
retf
int3
gs
loop
mov
pop
outs
imul
inc
fild
adc
(bad)
shl
cmp
inc
cmp
or
popa
jp
sub
and
xchg
and
in
cmp
call
xor
push
push
ffree
in
jne
jns
mov
js
icebp
popa
jnp
adc
jbe
xor
xchg
push
mov
je
pop
xchg
clc
hlt
in
cmp
loop
(bad)
ins
pusha
sti
add
push
or
push
pop
jo
cmp
(bad)
loopne
out
mov
hlt
push
mov
pop
(bad)
stc
retf
jmp
push
lahf
test
fld
sub
(bad)
sub
pop
pop
ret
push
jo
clc
stos
imul
xor
ins
jno
dec
lock
sahf
loope
rcl
xchg
cdq
xor
jg
xor
pop
movs
icebp
es
stc
pop
and
jle
inc
sbb
mov
push
add
movs
mov
out
test
xor
jl
pop
push
xchg
xchg
loop
or
dec
add
pop
dec
stos
add
pop
cmp
cdq
adc
out
bt
and
adc
cmp
mov
ds
scas
cmp
pop
push
stos
loope
sahf
nop
das
(bad)
into
ja
xchg
gs
fisub
fcomp
jle
inc
sbb
pop
ja
dec
int
hlt
jmp
ds
rep
jmp
and
pop
adc
push
mov
js
sbb
push
cmp
inc
addr16
sbb
sub
add
push
jl
into
cwde
push
pop
xor
add
dec
sbb
add
dec
jle
lods
jmp
mov
pushf
pop
leave
add
push
dec
movs
push
mov
jl
into
xchg
mov
iret
aas
ins
mov
fcmovb
loopne
js
neg
hlt
stos
fsubr
and
ror
mov
jecxz
lds
dec
ss
xor
movs
dec
xor
fdivr
addr16
cmps
mov
or
mov
je
call
sbb
mov
dec
and
fadd
lods
sbb
inc
sar
loope
jmp
(bad)
jmp
cs
test
repz
cmps
scas
adc
fisubr
sahf
adc
lods
dec
push
les
adc
xchg
enter
out
jp
fisttp
or
(bad)
(bad)
lods
(bad)
dec
stos
loope
imul
cmp
add
inc
addr16
xchg
cmp
cmp
inc
shr
mov
sub
pop
daa
icebp
cmps
test
aad
xor
dec
xor
fucomp
in
or
fwait
mov
mov
cld
enter
fcomp
mov
nop
xor
adc
inc
jp
ins
idiv
push
fwait
in
js
fcomi
xor
cwde
xlat
mov
pop
sub
test
ja
repz
int
pop
cwde
je
sahf
xor
lods
xchg
ins
sub
fld
pushf
add
push
sub
mov
inc
jnp
(bad)
xchg
lods
rcr
mov
imul
mov
jle
jg
inc
and
in
loopne
xor
cmp
repnz
xchg
call
or
mov
push
xchg
jmp
xlat
ja
pop
xchg
mov
add
mov
ss
mul
jg
int
mov
in
ret
mov
lods
leave
jb
popa
jae
pop
fcom
add
popf
push
fist
fild
(bad)
leave
push
xor
sbb
sbb
xchg
jne
test
cmps
mov
jmp
es
je
div
xor
movs
jmp
add
inc
test
inc
xchg
pop
jg
dec
sbb
loop
pop
shr
jl
outs
hlt
into
test
es
push
dec
dec
or
ss
std
add
icebp
and
mov
cmps
mov
cmp
movs
xchg
lahf
call
adc
aas
push
lahf
lahf
mov
dec
mov
aam
pop
aaa
push
sbb
mov
jns
stos
inc
push
fiadd
imul
outs
ss
jns
aaa
shl
mov
sbb
test
jo
mov
xchg
les
mov
jae
xchg
shr
push
mov
test
cmp
cdq
jge
fsubr
call
mov
stc
jbe
icebp
xor
jbe
(bad)
cld
sub
leave
jo
dec
xor
mov
sub
cmc
mov
pop
scas
pop
es
jmp
inc
pop
jecxz
lock
adc
sub
daa
sbb
into
or
cmps
enter
inc
add
pop
test
daa
loopne
fisttp
jmp
fidiv
mov
or
fdivrp
lahf
push
and
push
add
mov
cmc
xlat
push
adc
out
xchg
pusha
jb
pop
xor
fst
aaa
call
adc
iret
neg
sub
and
lea
adc
sbb
out
cwde
lds
retf
aaa
sub
pop
jno
mov
(bad)
jg
inc
ja
jo
dec
add
imul
sahf
(bad)
xchg
and
mov
popa
(bad)
jns
mov
and
mov
mov
imul
xchg
sar
sar
add
or
test
mov
add
lods
ror
(bad)
xchg
test
cmp
mov
mov
adc
sub
(bad)
clc
mov
imul
sbb
and
push
and
fcmove
mov
xchg
popa
cmp
pop
xor
xchg
popf
in
inc
mov
and
pop
(bad)
bound
pop
pop
movs
fcmovu
xor
jge
xor
loopne
sti
test
lock
pop
adc
pop
inc
ins
pop
xor
jns
jl
jo
xor
sub
mov
icebp
cwde
mov
inc
adc
jmp
std
cvttps2pi
icebp
pushf
sub
and
scas
or
in
hlt
cmc
repnz
mov
in
or
test
add
repnz
pop
sar
inc
mov
movs
ror
add
adc
outs
jecxz
dec
dec
jae
bound
loope
aas
retf
adc
loopne
or
dec
lods
fadd
and
dec
cdq
jg
lods
lds
inc
jmp
(bad)
and
adc
add
push
add
or
(bad)
scas
add
add
ret
push
fld
addr16
mov
cdq
jo
mov
and
fsubr
push
ss
adc
jbe
fmul
mov
hlt
aad
(bad)
sbb
loope
(bad)
aas
jne
hlt
jmp
push
in
mov
sbb
pop
add
xchg
pop
xor
jl
jp
les
aas
xchg
jmp
js
rcr
xchg
xchg
fldenv
jo
and
movs
rcl
push
push
sub
gs
iret
push
add
test
mov
cmp
sub
or
inc
test
das
inc
xchg
mov
arpl
and
dec
mov
or
in
cs
iret
cmc
mov
loop
fnsave
sbb
and
dec
inc
push
jne
in
idiv
cli
(bad)
icebp
popf
dec
sbb
adc
push
stos
dec
data16
add
push
(bad)
push
lods
movs
push
fist
loope
test
lds
jno
or
xchg
and
dec
enter
popa
int
mov
push
ret
ror
mov
jp
sub
shr
sbb
jb
mov
into
jmp
dec
sub
(bad)
(bad)
call
nop
sbb
shl
lock
dec
in
popa
cmp
movs
xor
bound
mov
addr16
aas
mov
jns
xchg
xchg
cmc
adc
ret
sub
retf
ds
pusha
lea
sahf
adc
outs
bound
pop
mov
loop
sbb
rcr
pop
and
cli
daa
in
or
add
cld
mov
daa
sbb
cmp
xor
iret
lods
cmp
mov
hlt
jl
and
popf
jge
adc
adc
mov
ret
sar
arpl
test
loope
xchg
retf
xor
fild
mov
xor
lods
mov
dec
adc
int
pop
push
lods
xchg
movhps
and
push
xchg
and
xchg
ret
movs
outs
stc
stos
or
sbb
push
push
int
inc
mov
cwde
shl
leave
jno
pop
mov
in
add
sub
adc
popa
xchg
inc
push
and
movs
mov
and
xchg
push
loope
cmp
mov
pusha
add
mov
sbb
fadd
or
push
sub
xlat
out
dec
pop
cmp
adc
dec
mov
icebp
call
packuswb
imul
lods
adc
pushf
pop
and
sar
xchg
cs
inc
push
clc
bound
pop
sub
mov
jg
shr
iret
mov
add
js
xor
call
mov
repz
xor
pushf
out
or
aas
sahf
cmp
jmp
mov
sub
or
enter
clc
cmp
les
and
(bad)
sti
test
loopne
call
test
out
shrd
xor
dec
arpl
test
(bad)
and
xchg
sbb
mov
or
xor
dec
aas
xor
cwde
(bad)
jmp
mov
inc
pop
inc
mov
dec
pop
or
pop
or
lds
push
adc
(bad)
dec
cli
movs
inc
test
mov
inc
sub
pop
mov
test
mov
mov
sbb
(bad)
movs
jns
add
mov
jb
fld
movs
pop
mov
xchg
ret
jae
mov
and
jecxz
int3
mov
jne
test
lahf
adc
out
not
(bad)
jp
mov
lds
jmp
inc
inc
dec
add
ins
lock
repnz
and
xor
fcom
loopne
mov
setle
data16
and
push
mov
pop
xchg
test
in
push
add
jp
sbb
imul
pop
fisubr
dec
or
cmps
push
imul
push
push
add
(bad)
mov
xchg
jp
enter
(bad)
cli
mov
jp
mov
in
mov
mov
xor
loop
in
fcom
adc
adc
les
sbb
adc
mov
lock
mov
xchg
bound
les
sub
mov
cs
sbb
out
xchg
cmp
into
clc
cmp
add
fild
es
dec
jbe
mov
and
pushf
pop
(bad)
addr16
inc
data16
inc
std
xlat
cmps
cld
cmp
jecxz
adc
aas
ret
aaa
(bad)
pop
adc
ins
xchg
enter
push
shr
aas
movlps
movs
dec
mov
out
mov
hlt
add
(bad)
aaa
into
lea
lss
xor
pop
pop
push
xor
std
pop
sbb
sub
and
mov
jb
lds
mov
mov
mov
xor
add
aam
in
fild
inc
stos
mov
or
sbb
dec
inc
adc
dec
xchg
push
sbb
dec
mov
lea
cwde
retf
or
mov
loopne
mov
mov
and
retf
adc
sub
pop
in
into
mov
jo
lahf
jmp
or
rcl
rol
in
sbb
inc
xchg
inc
outs
ins
mov
or
clc
shr
sub
enter
cmp
jge
mov
mov
mov
loopne
pop
or
sahf
xor
lahf
push
data16
adc
jle
mov
mov
shr
test
int
shr
(bad)
mov
fbstp
stos
cmp
xchg
sbb
popf
repz
xchg
dec
mov
push
shr
in
adc
pop
push
(bad)
ror
stos
dec
mov
int3
mov
test
outs
mov
mov
push
or
push
bound
sbb
fwait
mov
add
adc
jg
mov
cmp
lods
add
xor
mov
jbe
ins
fcmovu
dec
loopne
and
sar
shr
rol
div
mov
inc
cmp
imul
mov
mov
jecxz
ds
and
popa
cmovns
jl
xchg
das
dec
gs
(bad)
and
mov
(bad)
pushf
sbb
and
push
dec
pop
in
jmp
loop
xor
lahf
neg
pop
iret
fwait
xor
movs
repnz
icebp
test
lds
inc
mov
outs
push
not
fnstcw
or
jp
(bad)
jp
aam
jo
fst
mov
stc
jns
xor
cmps
sbb
pusha
sub
mov
mov
fcmovu
push
mov
mov
jmp
cdq
cmc
ror
push
cmp
lea
ret
mov
and
jb
(bad)
mov
adc
pop
loop
cli
mov
add
mov
fld
int3
cli
fstp
xchg
cmp
pop
inc
neg
xchg
mov
loopne
test
jg
out
das
dec
or
pop
(bad)
in
dec
retf
lods
jge
(bad)
lahf
jnp
jb
jg
cmps
inc
fsubr
lds
xchg
aas
cmp
pop
fwait
imul
adc
fsubr
push
in
loopne
sub
xor
movs
mov
xchg
push
loopne
mov
mov
add
sbb
scas
push
loope
mov
retf
add
push
jmp
jmp
imul
xor
jle
mov
sub
xor
xchg
pop
and
lds
lods
call
jmp
sbb
pop
lock
aas
mov
gs
mov
adc
or
push
xor
icebp
xor
fsubr
cli
mov
and
arpl
or
scas
or
mov
out
add
mov
int3
out
xchg
jbe
push
popa
push
mov
sub
pop
xor
add
daa
gs
daa
mov
dec
sbb
aas
inc
in
mov
mov
cmp
cli
mov
ficomp
fist
pushf
adc
xor
pop
sahf
dec
stos
sub
dec
add
mov
pop
dec
push
push
pop
je
imul
cmps
or
adc
xchg
repnz
sub
xchg
mov
pop
outs
cwde
cmp
call
mov
xor
xor
in
les
inc
imul
outs
fidiv
mov
or
scas
imul
jg
popf
xor
jp
pop
jp
xor
aaa
xchg
ret
pop
sbb
(bad)
movs
in
mov
jo
rcr
popf
xlat
retf
sti
dec
(bad)
call
dec
clc
test
int
pop
(bad)
jecxz
fidivr
mov
or
int3
inc
mov
dec
int
jno
push
int
in
mov
pop
dec
arpl
cmc
fs
repnz
pusha
mov
cmp
adc
pusha
test
mov
jne
mov
mov
sar
leave
jmp
dec
fsubp
imul
jns
jge
cmp
lahf
cmp
cmp
lods
pop
mov
add
jle
xchg
jge
sahf
jmp
push
xchg
adc
mov
out
push
pop
ret
cmps
data16
xchg
leave
xchg
push
cmps
mov
jae
hlt
sahf
movs
hlt
mov
scas
pop
push
pop
jns
ror
(bad)
xor
inc
icebp
add
fcom
sbb
or
add
mov
lock
mov
popf
pop
mov
pop
call
pop
cmp
cmp
add
push
inc
mov
push
in
out
(bad)
sbb
call
pop
push
mov
push
sub
enter
jae
es
in
or
iret
inc
sub
inc
dec
into
inc
xor
sbb
popa
mov
in
fmul
xchg
push
dec
sti
and
stos
dec
add
in
outs
cdq
mov
call
or
jge
les
in
and
fstp
add
sub
lods
pop
sbb
jno
mov
push
mov
xlat
(bad)
ds
add
outs
adc
imul
std
xchg
push
jp
adc
pushf
pop
cmp
fbstp
std
popa
movs
xabort
popf
lea
xor
cmps
mov
cs
hlt
ror
ins
jl
dec
or
stos
add
das
push
xor
cwde
xor
arpl
jne
jecxz
xor
cwde
(bad)
ins
mov
add
fld
xor
pushf
jmp
ret
inc
out
push
cmp
aam
fmul
push
mov
sub
jo
retf
mov
xchg
les
pop
pop
mov
shl
adc
mov
sbb
xchg
cmp
pushf
and
mov
inc
mov
cmp
dec
jmp
pop
xor
or
xchg
jmp
add
xchg
stos
sub
adc
fisubr
mov
enter
leave
pop
inc
push
(bad)
push
push
push
cli
pop
fcomp
push
test
or
add
dec
xor
pop
fnsave
bound
ins
pop
(bad)
fadd
jae
pop
cld
ret
lahf
mov
ror
mov
pop
sub
push
pop
push
inc
xchg
jbe
fsubr
jp
psubsw
dec
mov
scas
repz
hlt
je
clc
pop
shr
loop
movsx
xor
sub
fst
mov
leave
jbe
sbb
xor
lahf
pop
mov
cmp
addr16
sub
dec
pop
jo
sbb
icebp
adc
add
sbb
addr16
add
sub
and
loop
daa
cli
and
movups
xor
or
test
mov
jp
test
into
adc
mov
xchg
dec
repnz
loopne
bound
outs
push
repnz
popa
xor
lods
inc
icebp
mov
jmp
and
jmp
pop
and
shr
or
retf
test
sti
xchg
icebp
mov
jmp
jns
pop
adc
sti
pop
test
dec
push
jnp
sbb
(bad)
sbb
aam
push
mov
and
cdq
jae
pop
int3
pop
adc
outs
and
lock
enter
jecxz
dec
push
push
sbb
ds
pushf
inc
sub
out
mov
jmp
stos
adc
repz
call
aas
sti
push
cmps
arpl
mov
fistp
outs
mov
stos
fld
push
shl
cmp
mov
push
and
pop
mov
shr
inc
cmp
cld
or
sub
xlat
imul
popa
(bad)
inc
add
retf
mov
pushf
push
sbb
jae
jbe
popa
pop
int
in
fldcw
cs
xchg
clc
dec
adc
jo
or
mov
pop
xor
aad
mov
in
lahf
jae
adc
jl
or
or
iret
mov
movs
cmp
or
fisub
(bad)
shr
push
imul
xor
inc
ret
je
push
or
in
adc
mov
clc
mov
(bad)
cld
pop
pop
and
or
mov
xor
clc
fwait
adc
inc
xchg
jo
mov
xchg
push
mov
clc
and
xor
and
xchg
jge
dec
mov
mov
or
addr16
push
out
and
dec
imul
mov
xchg
pop
loope
lods
pop
mov
dec
scas
xchg
mov
push
addr16
fsub
in
pop
pop
jmp
and
(bad)
push
inc
arpl
ins
out
fucomp
xchg
bound
std
or
adc
scas
int
outs
ror
push
dec
arpl
mov
inc
out
mov
add
movs
add
mov
adc
xor
dec
ss
adc
movs
cmp
xor
in
and
les
dec
sub
clc
div
adc
mov
pusha
repz
sar
leave
sub
xor
pop
(bad)
push
ficom
jb
imul
and
sbb
pop
and
dec
push
pop
xchg
inc
and
jns
lock
mov
pop
jle
ret
clc
jne
aad
xchg
pop
sbb
aas
(bad)
sbb
rcl
or
mov
jle
cmp
shl
ins
add
popf
(bad)
cld
pop
xchg
jp
dec
inc
int
repnz
mov
nop
sbb
pop
pop
lds
pop
pusha
test
push
shl
sar
pop
addr16
dec
fdivr
fidiv
loope
jmp
out
lods
inc
jno
test
adc
push
aam
adc
xlat
cmps
or
inc
add
(bad)
mov
sbb
pop
pop
inc
pop
call
adc
xchg
jp
mov
dec
cmp
fucomip
mov
fidiv
push
sub
sti
adc
push
or
gs
jp
das
xor
pushf
fwait
arpl
cdq
add
push
mov
mul
lock
dec
aas
mov
test
mov
pop
loopne
inc
or
ss
out
mov
lds
dec
xor
xor
mov
or
in
jl
repz
push
ins
push
mov
pop
pop
iret
add
pushf
pusha
imul
aaa
or
push
mul
mov
imul
inc
into
ja
shl
sbb
sub
jne
mov
sbb
xor
int3
or
and
fdivr
jle
mov
xlat
not
pop
jo
xchg
cld
mov
aad
xchg
jmpw
retf
fsubrp
in
push
and
retf
mov
sbb
xor
or
mov
mov
fmul
mov
pushf
cwde
stc
(bad)
adc
adc
push
ret
sub
xor
xchg
sti
dec
sbb
mov
(bad)
cld
movs
and
jmp
xchg
fisubr
fdiv
fimul
rol
cmp
mov
mov
call
and
fbld
in
int
mov
inc
inc
push
(bad)
lods
je
mov
xchg
js
xchg
and
(bad)
mov
out
das
cmp
xor
sti
add
dec
mov
pop
dec
in
fs
sbb
push
mov
mov
jl
xchg
out
pop
push
fisub
add
lahf
sub
(bad)
fadd
cmp
jb
ins
ror
data16
daa
rol
mov
xchg
xchg
jl
(bad)
push
dec
fcmovbe
jnp
inc
mov
add
dec
adc
cmp
aam
sbb
dec
or
sub
mov
js
aad
loop
and
add
icebp
xlat
frstor
mov
sub
push
(bad)
inc
cmp
or
fs
xchg
mov
test
sbb
xor
(bad)
push
(bad)
ficomp
test
jg
sub
pop
pushf
cmovs
dec
sbb
cmc
dec
sbb
icebp
jle
adc
and
mov
int3
and
int3
imul
mov
ja
pop
stos
pop
add
sub
push
inc
ret
mov
sti
pop
inc
loope
lds
outs
pop
push
stos
push
jnp
pushf
pop
test
push
test
jb
mov
out
icebp
xor
fs
test
cmps
movs
in
(bad)
(bad)
out
pop
xor
nop
xchg
and
mov
add
cmps
js
ja
ret
cmc
jge
scas
adc
mov
xchg
into
sti
ficom
setae
iret
xchg
je
add
cmp
in
shl
shr
mov
lea
dec
in
stc
inc
push
and
jp
iret
sub
aad
add
push
mov
add
nop
dec
adc
arpl
fwait
sub
mov
push
jae
push
mov
fwait
es
ins
adc
das
outs
fdivr
lods
outs
mov
in
scas
outs
enter
jecxz
ins
push
adc
sub
outs
or
jl
jle
in
bound
or
inc
fsubr
and
push
jnp
jae
add
out
mov
or
pop
in
icebp
aam
mov
xchg
jb
ins
lods
cli
lds
xor
or
and
fld
mov
or
add
cld
scas
sbb
pushf
shl
xor
mov
fwait
mov
out
mov
dec
cli
mov
xor
pop
push
aaa
loopne
xchg
std
mov
lods
ror
dec
lock
xor
push
je
outs
cmp
and
lods
inc
inc
pop
aas
aam
pop
add
xchg
ja
test
dec
aad
(bad)
cld
sub
cmps
les
xor
push
xor
inc
xchg
scas
xchg
or
ficomp
js
inc
xchg
jmp
pop
frstor
in
fcmovbe
and
or
dec
sub
cmc
dec
mov
cmp
jno
lods
mov
mov
sbb
rol
mov
in
dec
and
idiv
imul
inc
cmp
daa
mov
push
pop
jnp
stos
das
fadd
push
fstp
jg
movs
adc
adc
loop
sbb
jnp
and
nop
call
clc
cld
pop
or
sub
dec
call
inc
stc
or
mov
fwait
jge
push
outs
pop
cmp
xchg
cmp
in
push
iret
jg
inc
jnp
lods
ror
jne
push
hlt
out
call
repz
outs
(bad)
data16
mov
cmp
jne
in
push
test
jnp
es
mov
sub
clc
push
ffreep
movs
mov
icebp
mov
jge
mov
mov
ficom
mov
or
clc
pop
popa
iret
movs
or
dec
mov
sub
test
ds
fistp
adc
add
sub
rcl
int
mov
inc
lods
xchg
push
jae
sbb
add
push
add
imul
lods
out
(bad)
lods
pop
mov
mov
jle
repnz
ds
lea
xchg
nop
call
stc
pushf
cdq
je
adc
adc
aad
retf
movs
loope
loopne
adc
aaa
xchg
inc
push
test
(bad)
and
xor
mov
xor
shl
inc
mov
iret
and
imul
xchg
lahf
jnp
xlat
test
not
mov
mov
je
lods
in
jnp
imul
cmp
adc
das
xor
sub
xchg
int3
jbe
fdiv
bound
jg
jmp
arpl
xor
frstor
fisubr
dec
mov
jae
pop
fwait
or
ins
shr
retf
jo
mov
pushf
mov
sbb
aad
and
outs
and
scas
iret
ror
push
push
test
jg
cld
jo
pop
mov
pushf
push
dec
stos
sub
scas
cmps
inc
sbb
clc
cmp
dec
pop
jne
jnp
cwde
or
loop
cmp
pop
(bad)
scas
in
das
loopne
inc
(bad)
jecxz
xchg
push
and
fld
into
mov
pop
jmp
retf
iret
or
mov
jbe
lea
pop
xchg
(bad)
ja
loop
fwait
jp
sub
and
ins
mov
inc
cwde
clc
cdq
jp
push
mov
sti
(bad)
bound
adc
test
mov
enter
xchg
mov
jb
inc
rcl
mov
adc
stos
cmp
add
push
in
hlt
arpl
sub
mov
dec
ss
jecxz
ss
outs
sti
shr
in
das
xor
xor
sub
xchg
shl
xchg
popa
sub
mov
dec
ins
adc
jae
sti
fisubr
mov
clc
or
xchg
cmp
sbb
mov
mov
js
loop
xchg
jecxz
and
(bad)
dec
out
pusha
inc
test
push
pop
mov
add
ror
cmp
jnp
pop
mov
loope
mov
imul
dec
pop
mov
jmp
ret
in
call
adc
sbb
test
add
sbb
fcomp
rol
sbb
fimul
jge
pop
(bad)
mov
xor
js
adc
jno
and
pop
xchg
sub
loope
push
adc
fwait
das
cmps
fisub
fdiv
cs
jmp
mov
scas
mov
or
outs
sbb
stos
xchg
push
xchg
scas
pmaxub
xor
dec
jle
pushf
dec
push
dec
jae
(bad)
adc
inc
sub
lods
rcr
ins
lock
hlt
lods
and
inc
sti
bound
xchg
popf
xor
fdivr
loope
pushf
imul
xchg
scas
dec
dec
or
adc
sbb
inc
mov
or
sbb
inc
pop
jb
and
fdivr
fistp
pop
je
ror
hlt
or
xor
sub
stc
pop
pop
inc
ins
xchg
add
pop
fldenv
xor
push
mov
xchg
test
arpl
mov
cli
push
aas
icebp
adc
stc
inc
into
and
rcr
jmp
stos
mov
xor
jl
invd
test
cld
into
sbb
outs
sub
add
or
inc
xor
ja
out
lods
push
xchg
clc
mov
pop
push
sub
inc
jp
movs
retf
mov
push
(bad)
xchg
push
outs
or
idiv
stc
(bad)
mov
xchg
das
leave
mov
cmp
out
mov
xor
sub
mov
adc
sub
jg
(bad)
cmp
xor
cmp
(bad)
push
in
pop
sahf
mov
outs
jmp
inc
cmp
shl
push
cmc
add
sar
xchg
mov
xchg
pop
mov
aaa
movs
repz
and
sub
jl
call
or
scas
popf
ss
dec
adc
cmp
cdq
fs
jmp
mov
or
inc
mov
and
sub
(bad)
mov
leave
pop
inc
push
or
push
int3
cld
cmp
and
icebp
xchg
enter
out
push
mov
mov
mov
or
aad
inc
aas
imul
gs
cmps
push
xor
fnstsw
ret
inc
stc
fs
hlt
mov
mov
sbb
adc
inc
inc
push
test
xchg
test
in
cmc
xor
aaa
mov
push
cld
inc
int
pop
sbb
aam
enter
mov
lds
mov
fdivr
lds
cmp
jne
or
pop
sbb
mov
mov
xlat
push
imul
cli
jecxz
stos
inc
pop
cli
push
js
dec
add
fidivr
cmp
fs
xor
and
rcl
inc
call
clc
inc
cmp
std
dec
dec
fstp
fmul
pop
das
repz
and
inc
shl
sub
cwde
test
fidiv
push
movs
je
inc
pop
ja
jmp
adc
cmp
lahf
out
imul
ds
and
aas
sbb
cmp
outs
cmp
add
dec
cmp
mov
clc
mov
dec
mov
sbb
aam
jnp
xor
jmp
mov
inc
or
fadd
aad
pop
test
lods
sbb
xchg
jecxz
sbb
mov
fwait
sbb
(bad)
mov
or
cmp
rol
aam
ins
imul
push
and
in
adc
pop
add
xchg
add
add
popf
das
test
xor
rcr
imul
cmp
jp
pushf
aad
(bad)
mov
xor
sbb
fsub
adc
jb
fnstsw
push
ss
shl
or
mov
xor
jo
xchg
sub
in
aaa
mov
bound
int3
lods
pop
add
ins
jno
sbb
cmp
sub
xchg
aad
cmp
xor
cmp
movs
out
ret
lods
clc
mov
mov
inc
xor
shl
cld
xor
out
push
jne
test
inc
fisub
and
outs
sbb
inc
sbb
cwde
lods
push
and
(bad)
retf
cs
cmps
push
mov
inc
inc
cs
in
mov
inc
mov
adc
repnz
lods
clc
mov
fiadd
sub
iret
call
test
cmp
out
idiv
push
int3
and
xchg
movs
cmp
cs
ret
cmp
mov
iret
lahf
xchg
mov
add
pop
dec
dec
mov
xor
call
pop
inc
sbb
cmp
push
cmp
add
les
or
jl
stc
pushf
or
or
and
mov
dec
cmp
ins
mov
sub
fcomp
adc
xchg
push
or
sub
popa
ret
push
into
mov
jnp
and
jmp
xchg
mov
lock
pop
hlt
pop
cmps
mov
pop
call
repnz
push
call
ss
adc
ret
loope
popf
iret
nop
sub
in
fidivr
xchg
jecxz
jecxz
and
fisttp
cmp
ret
aam
ror
dec
jge
cmp
dec
pop
je
mov
mov
fwait
inc
stos
sub
and
and
lods
push
mov
pushf
cmps
lea
call
or
out
mov
push
push
call
movs
add
dec
mov
sub
dec
stc
in
out
pop
movs
sub
mov
inc
sahf
out
mov
push
in
pusha
mov
frstor
sub
sbb
add
mov
inc
enter
pushf
add
add
cmp
adc
dec
inc
aas
and
or
sbb
mov
pop
test
(bad)
hlt
or
iret
gs
aas
retf
mov
pop
inc
or
fstp
xor
pop
pushf
cwde
loopne
shl
sahf
ja
pop
add
mov
enter
je
xor
cmp
sub
mov
stos
pop
test
inc
dec
les
hlt
sub
dec
cli
push
jns
add
cmc
mov
inc
iret
mov
cmp
js
xchg
js
aaa
ins
movs
mov
into
in
xchg
cmps
in
or
fcom
outs
mov
iret
pop
lock
inc
psrad
cwde
mov
mov
and
mov
int
dec
and
shr
xchg
or
add
or
sahf
aas
loopne
adc
mov
sub
(bad)
shl
jae
push
mov
xchg
cwde
xchg
xor
les
sub
mov
in
xor
or
scas
ins
popa
movs
jp
test
lods
sub
inc
pop
push
sbb
lods
sub
sbb
inc
clc
rcr
add
repnz
lods
sar
bound
sub
pop
out
sub
imul
and
mov
and
fdivr
xor
inc
test
push
adc
and
mov
outs
push
cld
pop
mul
arpl
scas
frstor
jo
popa
push
sbb
jne
inc
leave
(bad)
ja
arpl
xlat
dec
xchg
xor
xchg
cli
pop
or
add
xor
xchg
and
sar
test
or
repz
icebp
xchg
mov
(bad)
repz
jo
int
sub
out
cmp
cmp
xor
fxch
push
adc
fmul
or
pushf
xchg
push
mov
cmp
ins
push
cs
ins
inc
inc
or
sar
or
or
jecxz
iret
mov
cli
or
push
xor
mov
dec
test
cmc
mov
in
add
jo
in
sbb
scas
stc
fs
mov
call
push
sub
or
gs
jbe
das
cmp
retf
out
daa
ds
sbb
jne
bound
daa
push
(bad)
mov
(bad)
shl
retf
inc
mov
jne
lock
(bad)
hlt
out
arpl
lock
stos
jmp
cld
into
pop
cmp
xchg
sub
xchg
cli
mov
shr
mov
cld
push
cmps
iret
and
fs
jb
dec
mov
mov
jo
das
je
xchg
jo
pop
jmp
cs
cmp
or
scas
jb
jmp
mov
jmp
das
push
and
sub
lock
mov
add
inc
loop
xor
xlat
cs
mov
and
in
pop
mov
je
int3
in
dec
xchg
lock
mov
pop
pop
cmovns
mov
or
iret
sbb
in
in
clc
pop
xor
ficom
push
pop
jl
cmps
pop
cmps
in
shl
cld
fst
loope
aaa
not
mov
adc
(bad)
mov
push
mov
ds
into
retf
imul
xchg
mov
and
and
push
fist
or
and
leave
das
mov
out
mov
jmp
(bad)
(bad)
mov
hlt
movs
fwait
mov
dec
mov
or
fidiv
jno
sub
adc
stc
ja
daa
jmp
jb
(bad)
into
push
call
gs
cmps
enter
je
mov
test
fnstenv
mov
jbe
stos
add
es
pop
cmps
xchg
jg
mov
cmp
xlat
stc
jb
mov
mov
adc
fwait
shl
sub
scas
add
arpl
test
movlps
jmp
sbb
les
jne
not
push
clc
bound
stos
cld
xor
adc
fs
xor
int3
adc
ins
icebp
mov
jns
loop
dec
cwde
jmp
into
cmp
adc
pop
dec
test
add
iret
aas
aas
jmp
test
sub
test
and
jne
call
lahf
pop
out
pop
mov
xor
outs
and
cli
mov
xor
dec
icebp
scas
in
outs
add
pop
nop
mov
es
sub
add
inc
sar
add
in
movs
dec
(bad)
popa
push
jbe
(bad)
les
sahf
add
(bad)
jns
mov
pushf
mov
fwait
or
mov
imul
movs
mov
inc
push
test
or
inc
in
mov
mov
inc
pop
jecxz
pop
adc
sbb
dec
sbb
jecxz
pop
cmps
add
mov
mov
dec
inc
clc
xlat
push
add
clc
jno
xor
adc
out
push
or
mov
js
test
jno
mov
out
enter
ja
mov
iret
pop
(bad)
xchg
jns
pop
aaa
and
icebp
xchg
fst
jb
shl
cmp
ret
loopne
enter
sbb
mov
pop
loopne
cmp
popa
sub
pop
sbb
repnz
rdpmc
icebp
(bad)
xor
test
sahf
(bad)
sbb
call
push
lds
sub
nop
std
rcl
ja
daa
into
test
das
sub
bnd
into
mov
imul
xor
scas
add
daa
lock
enter
(bad)
enter
and
cwde
(bad)
shl
out
aas
stc
outs
jne
shl
outs
mov
adc
imul
in
cmp
or
sub
jne
out
pop
es
cmp
test
icebp
jo
stc
mov
add
into
(bad)
mov
leave
jle
(bad)
xor
add
push
repnz
fsubr
shl
lds
or
mov
xor
mov
xchg
add
lahf
mov
sbb
cdq
bound
jle
xchg
inc
out
mov
lahf
retf
mov
dec
jae
sbb
push
scas
test
retf
adc
pop
cmps
imul
call
or
int3
lea
or
stc
push
shr
pop
fadd
jecxz
ins
cdq
enter
mov
sar
push
(bad)
push
jg
in
pop
out
ins
or
stc
or
push
mov
push
lock
addr16
adc
and
add
mov
aas
(bad)
call
outs
icebp
pop
movs
xchg
popf
sub
push
or
xchg
fcomp
or
js
mov
sbb
pusha
pop
pop
xchg
inc
gs
fsub
(bad)
loope
mov
dec
jno
xor
mov
and
lock
jl
sbb
cmovns
ror
popa
lock
mov
hlt
hlt
in
frstor
fwait
fwait
pop
ror
inc
mov
jle
inc
adc
popa
cmp
jns
jp
cmp
jmp
push
and
loope
iret
das
arpl
mov
jecxz
int3
adc
xchg
ret
bnd
shr
shl
xchg
scas
cdq
push
sar
inc
dec
mov
xor
lahf
mov
sbb
mov
out
jns
adc
stos
lods
push
arpl
or
jmp
xor
sbb
mov
stos
and
mov
scas
xor
add
sub
sub
outs
push
aas
and
(bad)
aas
call
hlt
test
ds
imul
fwait
adc
jne
int3
jmp
std
call
dec
xchg
mov
inc
ins
imul
push
jno
cmp
inc
xchg
outs
add
mov
pop
sbb
and
setbe
and
into
cmc
cdq
or
dec
dec
dec
es
repz
es
push
(bad)
pop
mov
js
gs
popf
cdq
daa
ins
rol
or
and
add
add
and
push
sub
or
data16
cmps
or
lea
out
div
aaa
cdq
stos
sahf
clc
mov
das
sub
scas
push
dec
nop
(bad)
mov
mov
inc
mov
or
arpl
mov
test
xor
aas
dec
mov
xchg
jo
adc
lock
mov
jl
cmp
sbb
aas
jbe
xor
dec
test
and
aaa
sbb
mov
sbb
(bad)
std
(bad)
(bad)
or
jne
int3
sub
inc
call
adc
dec
icebp
sbb
ins
pop
jae
test
clc
int3
lods
sbb
add
xor
test
mov
lods
dec
fnsave
sti
packssdw
xchg
std
bnd
and
and
scas
jno
mov
sbb
leave
sub
jp
jo
lahf
enter
sti
sub
repnz
sbb
fs
mov
cdq
mov
sbb
inc
icebp
jmp
in
mov
in
mov
cdq
inc
mov
(bad)
sub
pop
push
cmp
lahf
dec
popa
mov
ret
mov
(bad)
in
popa
cmps
xor
setp
sbb
pop
shl
mov
add
jmp
nop
push
test
mov
std
inc
sbb
mov
inc
into
int
cmp
adc
ror
imul
dec
jbe
adc
(bad)
(bad)
xchg
dec
stos
push
dec
push
(bad)
loope
xchg
imul
adc
adc
dec
inc
shl
push
ret
add
cld
scas
(bad)
mov
fucom
push
mov
push
sbb
push
inc
mov
pop
lahf
inc
add
(bad)
push
je
mov
or
xchg
bound
test
into
sub
aad
xor
add
sub
mov
test
jns
sar
cmp
adc
jb
in
js
pusha
xchg
jle
fdiv
xlat
inc
add
xor
pop
cmp
add
fwait
xor
or
push
mov
mov
push
fs
jns
(bad)
mov
adc
xor
dec
popf
sub
or
mov
sub
sti
mov
pop
cmp
and
cmc
repnz
sub
mov
cmp
jmp
dec
and
adc
leave
mov
add
ror
sbb
cmp
jne
xchg
or
inc
inc
mov
xor
ins
mov
sbb
adc
xchg
aam
cmp
sub
out
out
bound
out
mov
cmc
in
mov
or
and
mov
inc
push
mov
test
push
xchg
int
retf
cmp
test
xchg
add
sahf
rcr
xor
mov
iret
mov
sbb
lahf
jno
fcom
mov
aaa
out
jecxz
push
ins
hlt
xor
mov
inc
mov
and
adc
adc
cwde
jmp
mov
fs
cmp
fstp
mov
jge
mov
pop
xlat
lods
ins
and
shl
push
aam
jnp
imul
int
sub
in
pop
stc
add
jecxz
inc
sbb
mov
lods
dec
pop
add
into
das
fcomp
jg
test
sub
pop
cwde
add
or
mov
rcl
inc
rol
out
mov
dec
dec
es
repnz
jbe
loop
int3
and
adc
movs
and
hlt
mov
loopne
sub
dec
inc
pop
or
out
popa
inc
daa
or
lods
jecxz
popa
int
or
fisub
and
outs
ret
xchg
aad
lock
lods
jecxz
inc
lods
stos
or
sbb
sti
push
and
jo
cdq
cmp
nop
jbe
inc
scas
mov
out
stc
fs
imul
inc
movs
retf
jg
or
cwde
and
jmp
dec
push
xor
popa
nop
pop
xchg
(bad)
mov
outs
jns
inc
arpl
dec
or
popf
mov
push
cmp
push
lods
cld
(bad)
leave
shr
mov
out
(bad)
jecxz
cli
sbb
ins
sub
adc
push
mov
jl
sub
scas
push
les
jl
and
mov
bound
ds
(bad)
jmp
repz
call
repz
(bad)
nop
inc
out
jbe
or
pop
outs
imul
mov
loope
test
adc
jp
mov
xlat
jp
pop
shl
and
retf
jnp
sahf
mov
lahf
leavew
call
out
jmp
retf
jmp
mov
(bad)
xchg
in
(bad)
retf
mov
xchg
mov
pop
data16
ficom
jae
xchg
jae
and
xchg
into
push
cli
inc
jne
inc
xor
fs
js
dec
and
jg
(bad)
and
aaa
dec
stos
inc
rcl
imul
pop
mov
movs
rcl
xchg
in
and
jge
in
xor
mov
sbb
loopne
lds
scas
out
sub
fisub
push
fs
sub
adc
dec
int
ss
in
or
xchg
retf
outs
and
lock
arpl
adc
jb
pop
std
push
inc
jnp
add
and
mov
xor
push
aam
ds
jo
and
mov
lea
adc
xor
inc
push
jmp
push
test
ja
adc
and
aaa
mov
sub
or
es
(bad)
addr16
mov
out
iret
or
div
jno
mov
test
repz
sahf
outs
mov
xor
bound
mov
into
sbb
into
hlt
aam
jb
jle
jno
ret
push
dec
mov
push
xchg
mov
(bad)
lock
mov
push
mov
test
loope
sbb
test
mov
cmp
cli
sar
das
in
shl
mov
jmp
or
in
mov
jecxz
inc
and
fcomp
rcr
imul
dec
mov
xchg
cmp
loope
movs
or
cmp
jle
pop
das
or
mov
loope
movs
popa
push
retf
sti
sar
jg
xchg
mov
mov
in
or
cmp
loop
dec
ds
and
mov
pushf
fwait
mov
mov
adc
std
leave
jmp
mov
loopne
mov
adc
aad
rol
(bad)
cli
cmp
mov
out
int3
sbb
sbb
xchg
or
xchg
xlat
pop
outs
scas
xor
jmp
mov
push
aaa
and
jg
and
sub
shr
daa
sbb
in
ins
pushaw
cwde
sbb
xchg
enter
jecxz
pop
les
adc
mov
jge
xor
lods
inc
cld
lahf
push
jmp
or
sbb
or
mov
jno
mov
inc
push
stc
pop
icebp
adc
sub
(bad)
pop
mov
mov
inc
loopne
loop
rol
stc
(bad)
cmp
scas
jno
test
inc
push
fdivr
mov
xchg
mov
push
mov
inc
jb
data16
ss
xor
inc
jns
lods
jecxz
jns
inc
jns
push
lods
fisttp
add
cmp
mov
pusha
add
retf
cld
jbe
mul
inc
push
sahf
mov
mov
lock
shr
pop
fstp
aaa
sbb
mov
cli
xlat
loope
mov
pusha
mov
lds
data16
cdq
(bad)
(bad)
push
popw
(bad)
movs
fisubr
and
sbb
sbb
out
sbb
jmp
fcomp
std
add
mov
stc
sti
mov
in
neg
popa
xor
aas
js
mov
call
push
dec
lea
test
push
and
clc
(bad)
fwait
push
cmp
mov
cmp
inc
and
or
loope
push
xor
push
mov
fcomp
sbb
cmp
fsub
fisttp
xchg
cdq
or
mov
jg
imul
shl
jg
inc
leave
fadd
jnp
mov
pop
xor
call
and
test
std
jmp
retf
clc
xchg
add
movs
retf
test
sub
and
push
ficomp
sar
ret
xor
and
pop
cld
sahf
and
ins
data16
jle
cs
ja
dec
jecxz
vcvtdq2ps
fnstsw
dec
sbb
imul
aas
and
adc
mov
inc
sub
cmp
clc
jno
pop
out
jae
leave
xchg
iret
mov
jmp
mov
xlat
(bad)
ja
or
push
pop
jmp
pop
xor
lahf
push
cmp
jecxz
jns
xor
fisub
adc
or
adc
or
dec
and
fs
enter
in
int
mov
fwait
(bad)
iret
and
jo
es
inc
push
ja
imul
push
les
jne
jo
bound
mov
sahf
xchg
jmp
les
je
movs
fnsave
shl
sti
xchg
sub
mov
in
out
jecxz
xor
push
cdq
mov
sub
jl
xchg
add
and
jbe
arpl
popa
not
sub
iret
adc
movs
(bad)
das
push
js
sbb
mov
xchg
inc
iret
push
push
ins
(bad)
dec
jp
and
mov
bnd
loope
dec
inc
fsub
ret
bound
jmp
or
mov
popf
and
test
mov
adc
loope
shl
xchg
out
sahf
retf
je
and
ds
jae
mov
adc
or
sbb
repnz
in
inc
cdq
lods
jnp
or
add
pop
dec
dec
cs
or
mov
les
test
and
idiv
cmps
jns
jae
and
outs
lea
movs
jae
dec
int3
in
sub
call
std
retf
cmp
lods
mov
mov
pop
push
mov
and
daa
fs
xor
xchg
es
cmps
dec
lea
sbb
add
pop
fidiv
mov
jno
sbb
pop
mov
std
mov
adc
inc
addr16
mov
mov
jno
aad
sbb
test
inc
scas
sahf
popa
cmp
mov
sub
loope
stc
jbe
imul
pop
dec
jne
pop
ss
retf
cmp
or
call
sub
les
pusha
xor
pop
sar
inc
pop
dec
push
sbb
adc
loopne
mov
mov
shl
hlt
mov
pop
sbb
test
or
cmp
push
inc
jmp
add
lahf
dec
icebp
sbb
scas
aas
pop
pop
pop
pop
(bad)
pop
jle
or
xchg
not
adc
test
push
inc
xor
jmp
imul
fiadd
mov
push
jae
add
sbb
ds
and
jno
shl
fsubp
mov
xchg
or
(bad)
xchg
sub
movs
dec
push
popf
loop
mov
into
jno
mov
jo
imul
je
loopne
cmc
jecxz
inc
(bad)
sbb
je
add
cmc
push
arpl
bnd
pop
imul
mov
xor
xor
popf
je
stos
push
cmc
pop
aam
xchg
les
test
jge
pushf
or
pop
mov
jp
sbb
xchg
imul
add
daa
in
lods
or
dec
xchg
dec
jg
mov
mov
jge
lods
cmp
movs
test
std
(bad)
enter
je
inc
push
xor
jbe
mov
rcl
cmp
sti
je
in
mov
arpl
pop
sub
xchg
or
jb
fstp
mov
loope
cmps
dec
lea
push
adc
sub
xor
adc
clc
xor
scas
ror
outs
adc
cmp
xor
(bad)
xor
ins
add
test
cmp
aam
les
in
lock
js
sbb
mov
mov
jl
sub
(bad)
push
shl
jmp
xchg
cmc
xchg
mov
nop
lea
or
sbb
call
sub
xchg
mov
sub
sub
rcl
add
jbe
popa
adc
jne
movs
xor
stos
movs
fmul
or
test
call
shl
pop
xor
and
(bad)
push
call
mov
iret
(bad)
shl
push
pop
xchg
aad
dec
les
mov
jns
adc
mov
and
push
test
sbb
dec
nop
pop
adc
rol
loop
and
dec
(bad)
shr
pop
hlt
adc
pop
jge
out
mov
aaa
movs
inc
xchg
push
xchg
out
xor
fadd
fild
push
call
mov
daa
loope
xor
and
dec
xchg
inc
div
inc
frstor
out
and
ret
out
fnstenv
add
mov
int
jo
sub
fwait
cmp
inc
lahf
inc
pop
cmc
or
leave
enter
in
inc
int3
xor
xlat
jae
pop
push
mov
jmp
sub
adc
mov
push
jmp
mov
xor
mov
es
xchg
jl
fsubr
sub
dec
dec
and
xlat
in
out
cmp
enter
pop
sub
into
sti
and
in
pushf
sub
ds
adc
shr
mov
cs
lahf
mov
mov
call
push
xchg
push
mov
out
add
retf
or
mov
mov
lods
mov
cmps
cli
(bad)
rcr
jmp
test
add
mov
cmp
out
pop
sbb
out
cmp
jecxz
(bad)
xchg
retf
sub
and
rol
and
add
nop
ins
add
pop
ins
push
ds
xchg
mov
aad
cmp
push
rol
out
push
nop
lock
call
fsubrp
xor
fsqrt
sub
add
fst
mov
rcr
sub
nop
fidiv
or
hlt
fist
loop
dec
add
push
jmp
and
shl
ja
sub
stos
mov
pop
mov
mov
out
xchg
sbb
and
cmp
push
pop
push
out
sahf
mov
lods
dec
ror
fmul
loope
jmp
adc
push
shr
rol
movq
bound
hlt
sbb
add
lds
call
and
in
mov
stos
jno
retf
xchg
ins
push
cli
fimul
cmp
pop
jne
push
aas
movs
lods
mov
push
loopne
sbb
enter
mov
cmp
in
mov
adc
out
outs
push
cwde
movhps
mov
(bad)
std
pop
sbb
mov
loopne
jnp
repnz
push
call
ret
call
pop
cmps
call
mov
and
lahf
in
lea
pop
(bad)
dec
in
push
adc
add
pop
ror
je
idiv
dec
call
inc
jae
(bad)
lahf
jecxz
sbb
iret
jg
in
jmp
mov
addr16
out
inc
mov
mov
out
push
mov
inc
or
ins
push
movs
jb
push
push
repz
inc
inc
sub
inc
xchg
cmp
stc
or
inc
fistp
push
xchg
fdiv
loope
loope
cmp
std
or
loope
mov
lahf
push
and
cmp
mov
xchg
lea
mov
loope
mov
mov
pusha
sbb
arpl
sbb
nop
cs
mov
(bad)
mov
xor
sbb
ror
iret
cmp
pop
push
nop
std
fdivr
shl
ss
ins
xchg
jne
and
and
push
xlat
add
mov
mov
mov
and
add
xlat
or
call
test
inc
(bad)
fist
shl
fld
out
rcr
das
fdivr
into
mov
mov
add
lea
or
add
mov
push
ins
stc
inc
sbb
(bad)
or
rol
jle
js
mov
fild
pop
loope
pop
cmp
jecxz
add
cli
add
shr
cwde
push
jecxz
inc
jb
xor
stos
popa
jecxz
fs
sub
or
fdiv
mov
pop
add
call
ror
mov
pop
es
(bad)
jne
int3
jge
cli
daa
push
test
dec
or
rcr
cmp
pop
std
out
movs
mov
cld
ja
jb
mov
sbb
jno
outs
ds
popa
and
sub
pop
ins
fnstsw
int
gs
std
into
ficomp
fptan
retf
pop
addr16
dec
test
ret
call
and
mul
inc
xor
mov
retf
mov
hlt
loope
arpl
(bad)
jb
pushf
(bad)
cmp
cmps
add
dec
stos
or
pop
call
pop
xchg
sub
mov
mov
push
xor
lds
inc
pop
jb
mov
cmps
cmps
leave
mov
aas
ja
xor
cmps
rcr
ret
pop
mov
fild
imul
push
test
retf
out
push
test
cmp
mov
call
xor
xchg
and
pop
xor
ja
lods
cmp
and
in
pop
jecxz
dec
pop
jmp
xchg
(bad)
mov
fwait
std
mov
inc
sar
dec
add
cwde
popf
fnstenv
loope
int
push
cmp
fmul
mov
iret
adc
inc
inc
retf
int
and
fs
(bad)
xchg
pop
push
pop
shl
popa
push
popa
and
add
hlt
push
cwde
sbb
mov
repnz
adc
call
repz
test
push
mov
adc
js
leave
sbb
jg
sub
rol
fisttp
jmp
icebp
mov
add
or
loope
cdq
mov
xchg
push
mov
pop
dec
jecxz
nop
pop
dec
rol
sub
movs
retf
push
mov
push
test
and
add
in
mov
xor
add
adc
push
jne
mov
mov
dec
jmp
(bad)
mov
icebp
jae
adc
sahf
mov
dec
dec
out
inc
into
or
cmc
mov
(bad)
or
dec
mov
cmps
ins
cmps
retf
pusha
shr
jge
xor
dec
(bad)
lea
dec
cld
cmps
jle
outs
adc
cmps
adc
mov
push
xchg
adc
leave
int
xchg
sub
orps
mov
call
xchg
fdivr
pop
sub
leave
and
mov
std
call
push
ret
pusha
out
mov
out
pop
pop
stc
xor
or
sbb
cld
sbb
test
call
xchg
push
dec
ins
icebp
jno
fnstsw
xchg
pop
sbb
rcl
and
gs
rcr
pop
sub
inc
mov
inc
ret
xor
repnz
mov
or
in
cmp
push
ss
outs
(bad)
fsubr
pop
lahf
imul
mov
sbb
and
mov
or
in
jmp
in
push
xchg
leave
lods
add
ja
pop
mov
mov
mul
pushf
or
dec
dec
mov
out
inc
out
repz
inc
dec
xchg
sti
cmp
in
sub
xchg
mov
fnstenv
retf
jne
es
ins
retf
mov
lahf
adc
repz
mov
fldl2t
cmp
mov
leave
jmp
int
fwait
test
leave
push
pop
test
rol
dec
mov
in
mov
sub
(bad)
xchg
pop
pushf
mov
(bad)
fsubrp
jnp
sub
scas
push
or
mov
sti
daa
adc
sbb
fld
mov
out
inc
hlt
inc
xor
sub
enter
sti
sbb
outs
adc
jbe
enter
xchg
add
inc
inc
cmp
outs
sbb
jbe
push
test
enter
shl
and
cmp
push
lahf
fnstenv
or
call
add
cli
test
hlt
cmp
pop
(bad)
adc
aad
xchg
clc
popf
dec
pop
sbb
xor
mov
in
imul
movs
push
scas
pushf
popa
mov
jae
mov
fs
sbb
das
cli
stos
dec
fnstcw
lods
pop
(bad)
inc
(bad)
push
adc
jmp
adc
add
js
or
add
sahf
fsub
addr16
sbb
cmc
mov
sbb
push
ret
mov
xchg
(bad)
and
gs
lea
sub
imul
mov
xor
push
mov
mov
rcl
xchg
mov
jecxz
das
push
jp
sub
lods
sbb
or
cli
mov
div
ret
push
push
inc
fs
xor
and
mov
int
or
jp
sbb
movs
pop
sahf
mov
or
arpl
push
dec
cmovle
xchg
push
jnp
mov
scas
inc
out
movs
or
hlt
lea
mov
sub
mov
jl
or
or
jns
mov
push
outs
xor
movs
nop
fisubr
mov
mov
adc
lahf
lods
add
inc
sub
cmp
rcr
(bad)
sbb
jnp
and
test
in
adc
sub
mov
pop
inc
(bad)
ja
inc
push
sbb
pop
xor
mov
mov
inc
and
jb
fadd
hlt
sub
shl
aam
inc
add
es
je
and
mov
sbb
outs
push
or
sub
pusha
dec
and
out
mov
fcmove
lods
rcl
leave
les
cmp
sti
xchg
xchg
xchg
adc
jmp
mov
pop
mov
repnz
jl
ins
icebp
inc
xchg
dec
in
xchg
cmp
ret
add
mov
cmp
add
(bad)
pop
(bad)
sub
jge
arpl
out
shl
mov
sub
cmps
outs
mov
gs
cmps
or
js
add
push
add
mov
iret
mov
(bad)
push
sar
xor
adc
sbb
outs
sub
aas
inc
jle
adc
repz
xlat
cld
inc
mov
mov
or
sti
nop
popf
pop
add
xor
and
cwde
cmps
dec
inc
out
add
push
inc
mov
mov
mov
rcl
adc
jp
pop
jbe
aas
stos
mov
jmp
imul
cmp
data16
ficom
lea
cmp
pop
xchg
test
sub
add
mov
inc
mov
ds
jb
jmp
(bad)
shl
or
cvttps2pi
lea
and
retf
(bad)
into
mov
adc
jne
cmc
jmp
mov
aam
add
ficom
addr16
inc
xchg
retf
(bad)
cmp
out
pop
dec
movs
or
movs
push
pop
icebp
clc
sar
mov
fcomip
push
in
pop
mov
mov
shr
out
in
scas
and
inc
adc
cdq
jns
push
mov
nop
mov
sbb
jl
jmp
mov
push
aad
adc
xchg
stos
fwait
cmp
shl
cmps
or
sub
clc
stos
arpl
add
dec
fwait
repnz
pop
ss
icebp
adc
ds
rep
ins
cld
dec
mov
lods
sub
mov
imul
imul
jnp
es
cmp
fidiv
rcr
and
js
popa
push
xchg
sub
lock
add
sbb
cld
mov
sub
xor
cmp
div
scas
mov
jne
jecxz
rcr
mov
and
rol
xchg
jae
mov
or
ss
sub
xor
int3
rol
cli
sub
bound
test
cmp
test
mov
mov
scas
mov
jno
ja
loope
mov
pop
add
(bad)
sti
ja
jecxz
and
adc
and
adc
dec
scas
fdivr
loope
gs
sbb
cmp
sbb
js
xchg
js
stos
retf
mov
aam
scas
aas
ret
loope
jmp
jno
test
(bad)
loope
aas
xor
scas
jmp
icebp
xor
xchg
(bad)
das
pusha
xor
cli
xchg
outs
in
ss
idiv
push
test
xchg
sbb
sub
pop
(bad)
test
push
in
rcr
cli
cmps
or
mov
mov
arpl
fcom
jge
push
cmps
rcl
mov
pop
add
out
in
cwde
xor
and
jns
sbb
mov
jp
mov
push
popf
pop
repnz
bnd
mov
xchg
mov
imul
jl
and
in
frstor
lods
mov
lods
scas
mov
mul
add
in
rol
push
in
cmp
mov
aad
imul
or
shl
cli
sbb
cmp
ret
neg
xlat
movaps
cmp
dec
out
and
jns
cmps
scas
cmp
lock
adc
push
adc
jge
rcr
retf
push
mov
xchg
rol
lock
aam
pushf
cmp
jecxz
addr16
sbb
cwde
sub
aas
pop
jecxz
(bad)
retf
pushf
add
jmp
int3
jno
push
ficom
shl
mov
movs
pop
and
and
inc
es
jno
mov
dec
mov
out
ret
pop
sbb
mov
xchg
sbb
add
ret
inc
xor
pop
fnsave
sbb
pop
xchg
jne
pop
dec
add
dec
mov
mov
popa
mov
fst
call
enter
or
pushf
cmp
sbb
jo
mov
(bad)
addr16
cmp
ret
test
cmp
in
adc
sbb
sahf
or
and
mov
aaa
push
sbb
icebp
inc
mov
mov
sahf
push
jne
xchg
jge
(bad)
mov
lock
xchg
in
and
inc
cmps
sbb
pop
mov
jbe
cmp
call
mov
mov
sar
mov
pop
mov
aas
mov
push
inc
inc
cmc
(bad)
hlt
push
inc
lods
cmp
iret
mov
push
mov
cmp
loopne
sti
call
movs
(bad)
ret
jle
push
call
test
fsubr
les
cmp
lds
cmp
pushf
fsubr
(bad)
test
xchg
retf
ja
sub
push
mov
inc
popa
popf
xchg
jecxz
adc
arpl
fcos
pop
jle
cmp
mov
(bad)
fsubr
or
sub
out
int3
stc
jne
pushw
push
sbb
push
cmp
cmp
mov
enter
pop
or
ja
(bad)
pusha
xor
xor
or
pop
dec
cmp
add
repnz
push
ficomp
sbb
or
ret
xchg
mov
cli
xchg
lods
leave
pop
(bad)
iret
jl
fs
aam
mov
sub
adc
pop
cmp
ror
dec
scas
test
clc
js
add
shl
ja
rcr
call
mov
div
mov
push
or
retf
cld
hlt
mov
shl
push
pop
je
push
adc
inc
fldcw
and
push
clc
push
and
pop
mov
pop
and
xor
xor
out
xchg
ja
and
mov
dec
movd
pop
stos
pop
mov
pop
dec
arpl
aad
addr16
xor
sub
adc
pop
fld
outs
jbe
and
retf
xor
jecxz
xchg
retf
xchg
mov
test
in
cmp
ds
mov
or
iret
jmp
or
outs
fsubr
sub
add
scas
sub
sahf
lods
pop
pop
ret
loopne
mov
dec
or
fisttp
fadd
xor
ror
dec
out
daa
pop
cmp
cmp
mov
icebp
sub
mov
pusha
movs
sbb
fsub
fcom
and
jge
and
pusha
lahf
lock
stc
mov
pop
adc
mov
pop
xchg
xchg
pop
cdq
stos
ror
lahf
ffree
les
ins
sahf
(bad)
in
scas
cmp
jecxz
push
lods
pop
inc
jb
inc
loope
xchg
dec
pop
sub
mov
mov
sub
test
out
movs
xchg
popa
push
or
mov
inc
int3
sar
hlt
jnp
mov
test
mov
mov
addr16
icebp
sbb
fist
push
ja
fild
outs
add
adc
push
aaa
fst
inc
in
fdivr
mov
mov
add
test
jp
or
sub
push
mov
cli
push
sub
xchg
fcmovu
rol
and
loopne
fcom
and
mov
xor
jmp
je
mov
loope
fcmovu
jmp
ins
mov
cmp
and
repnz
iret
add
jne
fcom
stos
pop
jle
scas
repnz
shl
push
out
(bad)
stos
sbb
xor
ds
pop
in
mov
mov
ficom
adc
mov
ret
icebp
push
cmp
iret
data16
das
add
xor
mov
icebp
mov
dec
sub
out
xor
call
xchg
mov
dec
repnz
dec
push
push
mov
sbb
push
pop
pop
mov
pop
adc
or
sti
bound
mov
jg
(bad)
int3
mov
cli
dec
mov
out
cmp
mov
sbb
mov
or
push
fs
loop
inc
push
test
movs
mov
repz
pop
loop
dec
(bad)
and
out
dec
into
sbb
adc
sti
pop
jmp
das
pop
xor
in
fxch
cmp
adc
push
popf
jp
mov
mov
mov
arpl
sbb
ret
adc
dec
adc
adc
jge
(bad)
jecxz
mov
xor
cmp
dec
not
(bad)
cdq
idiv
add
dec
lods
sub
outs
inc
jo
dec
sub
xchg
js
fistp
cmps
sbb
mov
mov
mov
inc
jmp
sbb
into
push
xor
xchg
adc
xor
sbb
cmp
xchg
mov
in
int
fsub
xor
fs
nop
pusha
inc
sub
ror
pop
push
imul
and
pop
jne
jbe
outs
bound
xchg
jecxz
(bad)
call
push
adc
retf
aaa
pop
jno
sub
pushf
dec
ds
in
jnp
and
push
sub
mov
or
das
sbb
int3
je
pop
pop
aas
add
sar
xlat
sti
add
push
ins
movs
sub
aam
cmp
movs
repz
inc
push
shl
ins
es
pop
scas
mov
pop
aam
adc
dec
sub
jle
(bad)
(bad)
mov
jo
dec
scas
js
clc
shr
loopne
sub
stc
fsub
xchg
into
add
mov
test
cmp
push
out
add
adc
push
mov
push
push
xor
ds
push
lods
push
push
mov
and
fcomp
adc
jb
and
inc
pop
cwde
loope
cmps
test
mov
aas
hlt
mov
push
nop
dec
pop
inc
sbb
je
in
add
movs
aas
and
(bad)
jno
sbb
sbb
mov
jne
stos
jb
stos
jno
sub
sbb
cmps
ds
mov
jle
sbb
inc
push
out
leave
fwait
jle
inc
lods
adc
xchg
or
(bad)
lods
bound
outs
dec
call
retf
ins
or
daa
lea
loope
pop
je
pop
push
mov
leave
imul
jo
movs
(bad)
mov
adc
or
shr
cdq
inc
jno
push
xor
lods
inc
loope
mov
int3
mov
mov
jg
daa
push
bound
fisubr
and
add
and
repnz
push
or
ret
inc
mov
xchg
sbb
cmp
fnstenv
ficomp
popf
clc
mov
shl
and
scas
outs
mov
mov
loope
jmp
dec
out
mov
jl
inc
jbe
and
pop
mov
and
jo
adc
imul
mov
push
mov
retf
push
aad
and
fnsave
iret
inc
cmp
ins
push
xchg
xchg
push
xchg
or
push
popa
xchg
outs
popa
in
les
sub
(bad)
outs
jns
popa
push
inc
rcl
sbb
xchg
imul
mov
cmc
pop
xchg
cmps
cmp
iret
outs
icebp
ficom
xor
or
mov
data16
iret
std
aaa
jl
mov
add
mov
(bad)
xchg
add
xchg
or
sar
pop
add
aaa
jecxz
cmc
pop
xor
push
sub
mov
stc
pushf
xor
push
jp
inc
mov
fisttp
inc
outs
cmp
inc
jl
or
cmc
lds
pop
das
adc
movs
and
popf
mov
pop
rcl
outs
jl
outs
dec
push
inc
mov
fcmovnb
mov
sbb
lahf
nop
push
nop
pop
sbb
xchg
mov
call
sub
mov
jle
sbb
loope
push
inc
xchg
fcmovbe
jns
into
jge
ds
xchg
mov
push
mov
jmp
mov
push
mov
leave
dec
sub
jno
loop
mov
cmp
jne
(bad)
out
mov
mov
ror
push
push
xchg
call
mov
push
mov
fldcw
cmp
(bad)
jne
fs
sub
cwde
cdq
les
ror
ins
add
sub
lea
jo
jmp
outs
aad
xchg
sub
jmp
in
repz
(bad)
je
jmp
xchg
xchg
loop
mov
lock
and
popa
je
cmp
xchg
aam
daa
push
rcl
inc
pop
ja
xor
mov
packsswb
inc
mov
sar
sbb
pop
in
inc
and
popa
inc
cmp
pusha
mov
mov
sbb
xor
lock
cmp
loopne
jmp
movs
jg
push
fcomp
lods
push
ins
or
ret
push
mov
(bad)
addr16
dec
nop
cmps
and
lods
jb
ins
and
jl
int
mov
or
xstore-rng
cmps
inc
mov
retf
pop
mov
fsubp
xchg
ja
mov
sahf
in
std
imul
sub
xor
mov
jmp
mov
sub
pusha
dec
pop
out
sub
es
bswap
mov
das
icebp
jp
push
adc
ror
mov
push
xlat
leave
pop
xchg
mov
cmp
adc
adc
ins
in
mov
repnz
in
test
and
jmp
mov
push
add
cmps
cmps
rcl
(bad)
imul
pusha
fadd
neg
inc
(bad)
pop
outs
push
es
sbb
jb
mov
stos
ret
push
bound
icebp
imul
mov
test
mov
lods
pop
call
nop
fidivr
out
fisub
cli
adc
mov
add
leave
add
inc
outs
repz
test
rcr
(bad)
mov
fisubr
sbb
or
add
sub
mov
dec
jge
inc
xchg
mov
cdq
jmp
xchg
jmp
ins
arpl
jbe
out
ds
inc
lock
mov
bound
cmp
jecxz
cmp
push
in
int3
add
inc
mov
cld
pop
pop
sub
cmp
jns
and
arpl
inc
shr
in
and
out
iret
dec
pop
sti
repnz
push
stos
je
add
(bad)
mov
imul
fdivr
fldenv
mov
and
or
dec
les
clc
(bad)
out
push
aaa
lock
shl
repz
xor
sahf
test
dec
or
push
and
push
int
push
dec
jns
sbb
shr
cmp
adc
pusha
lahf
dec
sbb
gs
fsub
and
push
cmp
int3
jg
mov
fild
call
das
cmps
sti
xchg
jnp
mov
mov
fcomp
test
sub
mov
ds
jp
push
std
push
pop
pop
adc
mov
fild
pop
out
outs
add
inc
aad
lock
sbb
int3
(bad)
repnz
inc
xchg
inc
push
retf
xor
jo
push
dec
pop
push
std
jb
push
daa
mov
aad
jb
xchg
arpl
loopne
cmp
cmp
sbb
hlt
xor
out
push
mov
or
mov
fwait
lods
scas
adc
nop
mov
retf
fcom
jge
out
inc
icebp
aad
imul
mov
xor
pushf
mov
pusha
mov
xchg
mov
or
imul
enter
aad
(bad)
jecxz
pop
mov
in
pop
mov
hlt
xor
retf
sub
test
cmp
ror
fidivr
mov
push
test
in
sahf
jp
or
jmp
jmp
retf
repnz
sub
sbb
arpl
arpl
mov
cmp
(bad)
fsubr
pop
or
pop
push
stos
or
nop
mov
in
jecxz
sbb
sub
hlt
cmc
mov
mov
xor
cdq
jns
and
arpl
mov
jb
mov
jae
xchg
movs
cmps
inc
add
neg
repz
xor
pop
dec
xchg
repz
pop
push
inc
xor
neg
mov
jecxz
popf
out
jno
mov
in
cmp
inc
ss
fdiv
xor
leave
int3
aam
loop
sahf
mov
jmp
cld
cmps
dec
pop
test
inc
int
or
test
inc
mov
and
jnp
mov
jns
aam
ret
rcr
mov
push
addr16
pop
inc
mov
mov
push
bound
ins
loope
outs
pushf
aas
nop
dec
nop
adc
movs
enter
push
in
ret
dec
inc
add
(bad)
or
dec
sahf
daa
in
ret
cmp
sti
adc
pushf
daa
test
cmps
pop
xlat
jnp
scas
xchg
(bad)
pop
(bad)
jno
(bad)
sahf
inc
or
pop
shl
mov
jecxz
rcr
lea
mov
mov
or
clc
dec
ds
lods
mov
rcl
fs
ins
push
outs
ret
dec
xchg
mov
jno
jbe
sub
out
xor
addr16
xchg
test
fwait
icebp
push
mov
pop
inc
inc
jmp
cmps
clc
rcr
push
sub
(bad)
stc
shl
push
and
fwait
hlt
test
pop
jle
pop
or
fcmovu
imul
(bad)
(bad)
or
jp
enter
jmp
xor
lods
xchg
adc
fwait
aaa
sub
repz
cmp
sbb
ret
(bad)
cli
mul
ss
(bad)
in
iret
call
dec
adc
xchg
xor
in
test
pop
cmp
mov
cmp
lahf
jl
or
call
inc
pop
sbb
enter
mov
pop
cs
not
aam
lds
imul
mov
add
stos
inc
ins
ficomp
mov
dec
mov
mov
lods
aaa
cmp
cld
mov
dec
mov
mov
xor
sub
test
push
popf
stos
jnp
xchg
xchg
outs
xor
push
arpl
sub
iret
lods
icebp
hlt
dec
dec
jbe
fadd
das
dec
call
jo
xor
retf
jg
sbb
cmp
mov
sbb
(bad)
fadd
xchg
sahf
out
bt
pop
sub
fs
ds
mov
lock
popa
fld
mov
xchg
lock
outs
fsub
sub
mov
(bad)
add
or
pop
sar
popf
arpl
test
setp
dec
fs
xlat
fisubr
xor
mov
or
in
jg
mov
inc
icebp
ror
hlt
mov
or
std
hlt
addr16
inc
dec
int
fst
fdivr
cld
and
adc
ins
sub
dec
out
dec
ins
lock
jo
pushf
iret
xor
inc
ja
fs
push
jmp
fcomp
xchg
pop
loopne
mov
or
jp
fild
ss
fidivr
xchg
in
retf
mov
jne
neg
lods
into
loopne
mov
mov
mov
movs
mov
ds
jge
jmp
sbb
adc
jmp
mov
movq
jno
xchg
add
ror
in
addr16
fcomip
sbb
cmps
mov
cmp
jl
imul
xchg
leave
in
out
std
xchg
shr
ret
(bad)
aad
or
sub
sub
mov
ds
(bad)
arpl
in
fwait
xchg
jno
aaa
inc
sub
in
adc
jecxz
(bad)
and
pop
or
inc
mov
test
out
out
or
mov
xor
dec
jnp
cli
jge
push
xor
mov
sti
sbb
sub
in
jle
in
(bad)
sbb
adc
sbb
jbe
movs
sti
jns
jle
inc
in
mov
and
xor
dec
push
daa
rcl
mov
jo
into
aam
icebp
jb
repnz
dec
cmp
mov
movs
jg
jo
rcl
ret
sbb
mov
(bad)
jb
push
sub
cwde
dec
push
mov
add
fiadd
popa
int
daa
sar
in
nop
adc
mov
cdq
jle
xor
je
hlt
loop
sbb
xchg
push
xor
loop
repnz
mov
loop
retf
outs
mov
test
mov
sub
les
(bad)
aaa
pusha
adc
test
mov
sahf
movs
mov
nop
clc
jle
push
je
dec
mov
push
or
ret
mov
dec
movs
inc
jo
fidivr
ins
sub
jecxz
dec
jg
xchg
(bad)
test
add
adc
push
and
fwait
jns
fcomp
push
jmp
cmp
enter
out
inc
mov
adc
repz
mov
and
adc
movq
mov
and
imul
jmp
pop
repnz
mov
push
push
lock
adc
inc
cdq
mov
fsubr
push
pop
fdivp
mov
movs
bound
inc
popf
mov
push
pop
sub
inc
push
daa
icebp
je
dec
jbe
push
repz
lods
int
xlat
test
clc
xchg
jg
mov
mov
adc
pop
pop
in
mov
movs
jae
outs
pop
lock
ret
cwde
add
iret
ret
jnp
rcl
pushf
scas
pushf
fs
not
js
in
sbb
mov
mov
add
xchg
mov
xor
xlat
mov
push
cmp
dec
jno
and
sbb
mov
fwait
jo
mov
sbb
test
sub
repz
inc
dec
movs
xchg
dec
mov
jnp
pop
cmps
sahf
jbe
add
cmc
loop
pop
inc
push
jl
and
mov
xchg
jo
ficom
dec
xchg
pop
aas
fidivr
xor
xchg
es
(bad)
aaa
push
sti
or
retf
cld
xchg
sahf
pop
and
mov
aaa
bound
lock
sub
loopne
fist
call
cmp
fnstcw
and
xor
mov
ja
push
stc
fwait
shl
xlat
cdq
cmp
jg
ret
mov
adc
ins
adc
xchg
jo
pop
sbb
fs
mov
add
loop
movs
scas
adc
push
stos
sbb
cs
ds
push
outs
and
pop
xor
pop
fstp
inc
out
sbb
jbe
jg
xor
pop
cwde
mov
add
mov
sbb
lahf
inc
inc
lods
jle
add
mov
ret
fisttp
mov
sub
xchg
nop
mov
push
(bad)
ins
inc
jnp
pop
jno
jo
sbb
call
add
gs
jne
mov
dec
movs
sbb
jb
add
inc
adc
ror
rcl
and
das
bound
sti
out
or
pop
xchg
iret
or
rcr
pop
mov
push
sub
jl
push
loope
out
mov
ja
pop
in
mov
je
in
daa
xchg
fwait
xor
enter
lahf
out
ins
dec
pop
xor
neg
sub
sbb
pop
fs
cmps
in
enter
jg
shl
int
mov
add
aad
xor
lods
repz
(bad)
push
sbb
add
mov
cmp
neg
dec
imul
pop
jb
pop
arpl
(bad)
lock
jg
xlat
test
rol
cmp
mov
or
mov
scas
cmc
ror
pop
mov
jne
scas
xchg
cmps
mov
xacquire
mov
mov
cmp
or
mov
push
or
mov
inc
xor
out
pusha
push
mov
mov
sbb
sub
jns
test
out
mov
lds
fcomp
mov
jne
imul
sar
lahf
arpl
stos
ss
xchg
push
mov
ror
stos
push
iret
mov
xor
mov
add
sub
xor
fdivr
cmp
ret
lea
loope
jae
mov
imul
pushf
pop
adc
dec
or
xor
in
rcr
nop
pushf
adc
and
ror
mov
adc
xchg
pop
dec
int3
pop
das
sbb
and
sbb
sub
add
loop
or
pop
push
jecxz
(bad)
movs
sub
fst
xor
push
cwde
mov
icebp
pop
dec
xchg
mov
arpl
adc
mov
ins
push
aam
loopne
jne
sub
fiadd
call
hlt
sub
or
or
fmul
xchg
test
adc
call
sbb
cmp
jmp
sub
nop
sub
mov
scas
dec
mov
icebp
out
inc
mov
mov
out
sub
(bad)
fcom
repz
or
pmaddwd
imul
mov
jb
or
push
es
(bad)
cmc
cmps
(bad)
cdq
sub
push
int3
mov
fld
adc
shr
sub
and
out
and
cmps
movs
or
das
xlat
dec
mov
aam
out
ror
rcl
dec
mov
pop
sbb
shl
jo
jbe
inc
mov
into
inc
adc
push
add
aaa
pushf
pop
adc
repnz
sub
push
mov
jno
jg
adc
xchg
xchg
loop
loopne
pop
inc
repnz
fnsave
and
test
and
mov
sub
fs
imul
dec
push
mov
ss
test
ror
and
cmp
dec
mul
(bad)
repz
clc
push
push
inc
cmp
mov
mov
adc
fst
and
inc
dec
jge
repnz
repnz
or
imul
rcr
add
data16
movs
retf
js
pop
loopne
sbb
lahf
and
fld
cmps
pop
and
cmps
mov
div
adc
pop
or
mov
je
cmps
xor
shl
lods
sub
push
cmp
xchg
addr16
imul
adc
(bad)
jne
inc
fisub
daa
push
jge
imul
rcl
pop
sbb
sub
push
popf
dec
sbb
sub
sub
xchg
ins
lds
scas
jmp
mov
cdq
mov
fwait
or
cmc
xlat
cmp
mov
cmp
mov
or
imul
aad
mov
imul
cdq
sub
(bad)
cwde
pop
inc
xor
jno
aam
pusha
mov
les
ret
icebp
popa
jne
mov
push
adc
loopne
adc
popf
pop
xor
xor
mov
loopne
or
adc
enter
test
add
mov
mov
repz
das
es
je
aad
shl
enter
jecxz
xchg
aam
inc
outs
mov
jb
loopne
push
pop
lea
fcmovu
pop
mov
mov
cld
ins
retf
daa
ds
dec
movs
lods
jmp
rol
cmovne
cmp
cmp
jge
mov
ss
mov
dec
daa
push
lods
out
add
mov
cli
enter
push
cwde
ins
and
loopne
mov
hlt
inc
or
retf
cmp
xchg
(bad)
lock
pop
cmp
sbb
pop
jae
repnz
clc
inc
inc
adc
dec
popf
ins
cmps
cmps
(bad)
pusha
mov
retf
dec
inc
add
adc
inc
pop
into
sub
fistp
dec
and
bound
(bad)
aam
inc
aas
jbe
jg
jbe
mov
inc
push
adc
(bad)
sub
hlt
test
adc
cmp
dec
mov
aam
jl
aam
mov
clc
pop
call
push
idiv
fisttp
js
inc
cmp
repz
dec
pop
cdq
or
fiadd
in
cdq
repz
stos
lds
retf
fldenv
pop
pop
rcl
mov
and
mov
sub
iret
hlt
mov
into
loop
nop
fst
scas
dec
ficomp
repz
mov
sbb
xchg
cmp
add
mov
outs
mov
fcomip
mov
add
fadd
add
adc
in
xor
and
cmp
imul
daa
cmp
call
or
sbb
lods
inc
imul
retf
mov
ja
in
xor
jmp
jmp
lahf
sti
aas
sti
or
sti
sub
inc
dec
or
jns
xor
xchg
cmp
les
push
pop
mov
test
repz
sub
loope
push
in
or
or
into
pop
jae
addr16
daa
xchg
call
push
fs
sbb
in
popa
inc
lahf
clc
push
retf
adc
mov
enter
mov
cmps
push
(bad)
inc
out
cmp
shr
and
fldenv
popf
iret
test
add
cmc
daa
scas
jp
movs
scas
sbb
lds
jmp
pushf
fwait
cs
xlat
popf
inc
push
test
lods
jmp
inc
inc
jge
lods
xchg
xchg
xchg
in
cmp
adc
or
movs
fcom
cmp
pop
add
pop
jbe
gs
call
fimul
mov
inc
sbb
clts
sbb
std
mov
and
dec
test
xor
jmp
fdivr
add
daa
mov
jmp
pop
push
js
aaa
(bad)
jp
xchg
inc
pop
imul
dec
mov
mov
xor
addr16
ja
mov
xchg
loopne
jge
add
xor
add
das
xor
cmp
pop
sub
add
push
sar
int3
cmps
dec
cmp
push
dec
scas
retf
mov
inc
pop
and
xchg
(bad)
addr16
rcl
mov
ficomp
in
push
sbb
lods
cmp
dec
mov
sub
out
sub
mov
(bad)
cwde
retf
lods
lahf
cmp
push
pop
push
xlat
test
mov
and
retf
shr
icebp
clc
popf
jne
imul
mov
retf
mov
push
scas
jno
add
push
les
je
imul
in
push
(bad)
pop
jl
icebp
je
into
inc
pop
mov
movs
inc
mov
mov
xchg
mov
dec
sub
jbe
rcl
xor
xchg
xor
scas
jl
test
mov
lods
repnz
sbb
(bad)
dec
ret
or
popf
dec
dec
xor
xchg
imul
sbb
mov
xor
clc
pop
aaa
mov
or
inc
cli
hlt
xchg
jne
mov
jge
nop
mov
clc
jmp
les
dec
xchg
fisubr
test
xor
in
jns
mov
bound
(bad)
(bad)
push
in
cmp
enter
js
cmp
adc
and
add
and
add
stos
mov
or
cmps
or
bound
rcl
ds
mov
iret
scas
sub
idiv
ja
pop
push
xor
sbb
mov
xchg
sbb
ficomp
dec
nop
rcl
cmp
lahf
jno
sub
sub
fisttp
enter
in
add
cld
xchg
mov
and
int
jg
data16
mov
fiadd
xchg
push
rcl
push
mov
cmps
cwde
add
out
aaa
mov
or
hlt
cmp
and
xchg
dec
dec
pop
jecxz
outs
or
mov
xchg
inc
(bad)
xor
mov
cmps
mov
add
data16
das
and
(bad)
fld
outs
sbb
add
xchg
stos
test
mov
pop
add
pop
aad
xchg
add
and
xor
adc
jl
mov
mov
arpl
adc
out
popf
dec
add
mov
imul
shr
js
outs
fidivr
mov
aam
(bad)
loopne
sub
xor
adc
xor
add
xchg
mov
pop
mov
adc
and
pop
mov
cmp
dec
mov
sbb
push
add
repz
cdq
fcom
xor
add
hlt
loop
les
sbb
ja
push
cli
out
inc
iret
arpl
and
pop
lods
cli
(bad)
fst
mov
scas
jo
jge
movs
shl
xchg
push
mov
out
xor
jae
ss
jle
lods
jl
adc
mov
push
jb
mov
and
push
in
out
fistp
sub
sub
in
daa
mov
cmp
mov
ss
and
in
adc
xlat
push
jg
dec
mov
mov
hlt
mov
sub
adc
ret
mov
idiv
push
jmp
jge
test
push
sub
jnp
sahf
jbe
cmp
inc
and
jb
sbb
loop
retf
and
xor
jp
pop
adc
xor
push
ds
adc
sbb
push
jnp
ds
cld
rol
dec
sti
lds
loop
cmp
aaa
fld
cmc
out
shr
jo
(bad)
(bad)
mov
xchg
mov
sti
mov
jl
adc
sbb
pop
loope
hlt
or
xor
outs
sbb
jne
and
dec
xor
leave
jg
lock
out
popa
mov
or
mov
mov
jnp
xor
(bad)
xor
fsubr
jp
data16
cs
jno
gs
cmp
loop
push
(bad)
sbb
jno
cmp
mov
mov
and
xor
nop
jp
pushf
es
(bad)
lods
ret
cs
test
popa
lods
push
mov
and
pushf
scas
jp
sbb
push
not
and
sub
mov
pop
pop
or
lods
stos
push
fs
pop
mov
xchg
lods
addr16
fstp
push
ja
sti
ins
mov
push
cmp
mov
jecxz
mov
adc
jmp
cli
in
or
push
(bad)
in
int3
fidivr
inc
mov
(bad)
test
cwde
retf
ret
add
sbb
inc
shl
xor
(bad)
out
push
ins
les
xchg
cmp
pusha
pop
inc
jbe
sbb
call
add
or
mov
repnz
es
and
sbb
sub
scas
nop
or
push
lods
int
jmp
jns
scas
nop
and
adc
and
leave
fisttp
loopne
fidivr
dec
loope
adc
sti
cmps
cld
lds
test
je
xor
xchg
push
cmps
dec
retf
fld
jbe
add
xchg
out
push
test
push
dec
xchg
call
jne
jg
je
xor
fmul
and
rcl
rcr
aad
or
movs
rol
add
fsubr
cmp
cmp
imul
dec
cmp
ror
ins
push
pop
xor
cli
or
out
and
loope
inc
xor
mov
pop
test
les
ror
pushf
iret
add
jp
mov
sbb
aas
lods
fcomp
(bad)
out
jp
and
xchg
jecxz
(bad)
and
dec
gs
xor
push
out
inc
or
fstp
fisub
and
or
and
call
adc
push
shl
neg
mov
sub
jge
pop
xor
ds
xor
(bad)
aas
jb
xor
(bad)
cmp
cmp
mov
bound
lods
or
mov
in
mov
sbb
inc
fsubr
xchg
(bad)
push
xchg
inc
fistp
out
push
mov
fidivr
fwait
leave
scas
or
and
jne
push
data16
loop
add
and
xchg
xchg
shl
inc
sub
icebp
jo
xor
or
(bad)
out
in
icebp
and
repnz
xchg
movs
sub
pop
aam
shl
ja
pop
sbb
jle
xchg
pop
jnp
adc
mov
ret
pusha
fstp
xchg
icebp
mov
loopne
add
xor
(bad)
aam
jnp
sbb
fldcw
pop
je
outs
pop
and
adc
int3
js
sub
jmp
fldenv
xchg
dec
retf
inc
aaa
out
in
dec
or
imul
xor
xchg
cmp
mov
mov
fcmove
fsubr
cld
lock
repnz
pop
add
out
inc
cmp
mov
xchg
mov
adc
jb
jmp
dec
push
nop
outs
xor
cmp
jbe
in
add
cwde
pop
inc
mov
ss
std
imul
shr
loope
jmp
push
cmp
mov
bound
arpl
fidiv
mov
xor
pop
push
lahf
int3
cwde
test
outs
add
mov
clc
(bad)
dec
dec
push
iret
push
scas
or
jle
add
cwde
hlt
mov
ja
cs
jge
xor
or
adc
jne
mov
inc
push
inc
arpl
sbb
cmp
pop
mov
ins
push
retf
jno
fnstenv
jno
and
das
test
add
inc
xor
out
test
fistp
sub
jbe
fcomp
lds
sbb
push
inc
rcl
pop
adc
scas
cmp
inc
rcr
sub
push
fwait
push
ds
icebp
pop
lahf
loopne
sar
xlat
popf
jecxz
or
in
and
and
dec
stos
gs
adc
dec
mov
mov
or
or
call
in
mov
popf
adc
pop
xchg
and
adc
or
aas
mov
es
fcmove
dec
and
jbe
push
out
jmp
dec
je
stos
in
lods
pushf
ins
into
ja
pop
add
cmp
adc
je
mov
loope
call
mov
inc
scas
and
lds
sbb
in
dec
ret
cmp
fiadd
mov
jb
aas
data16
or
retf
das
shl
mov
imul
adc
dec
push
pusha
adc
mov
cli
ins
mov
push
aaa
call
and
movs
not
fbstp
out
pop
inc
ins
jmp
inc
jmp
add
adc
(bad)
push
mov
test
pop
dec
or
mov
pop
(bad)
mov
push
mov
fiadd
adc
ffree
popa
add
stos
adc
mov
jp
repz
pop
dec
dec
ss
jl
xlat
ja
mov
or
xchg
xchg
nop
cmps
add
leave
sbb
into
int
adc
pop
push
jl
(bad)
in
pop
jo
inc
push
movs
imul
pop
lods
or
enter
nop
and
in
and
or
lahf
ret
add
pop
stos
pusha
in
push
retf
popf
pop
je
cmc
into
mov
stos
pop
inc
adc
int3
jecxz
mov
out
retf
xor
push
adc
fucomi
sar
rol
in
push
dec
(bad)
push
jnp
test
ror
and
or
cmp
mov
mov
inc
mov
and
inc
imul
jg
push
sub
pop
bnd
dec
mov
xor
ret
cmp
(bad)
jmp
mov
in
out
in
sub
cmp
sub
loope
push
rcl
sub
je
and
aaa
mov
pop
push
stos
retf
out
xor
sbb
pusha
xor
imul
iret
and
push
je
loop
cmps
push
mov
cli
mov
add
adc
xor
inc
mov
inc
out
sbb
mov
mov
(bad)
pusha
js
outs
xchg
mov
int3
mov
sti
mov
fucomp
jg
ins
push
movs
sahf
cmp
adc
add
mov
pop
push
pop
hlt
mov
sbb
push
(bad)
loopne
loope
mov
es
lea
pop
add
sub
repnz
in
shl
jb
test
fnstcw
sbb
jle
(bad)
rcl
ins
jns
sbb
lock
mov
pop
cmp
mov
xor
cmc
dec
jae
push
inc
cmp
mov
or
push
mov
call
and
mov
jmp
xchg
push
inc
data16
addr16
in
push
inc
add
sub
cmp
xor
sub
(bad)
mov
sub
pop
xchg
push
mov
dec
fisttp
jb
outs
jns
dec
mov
loop
cmc
xor
test
out
mov
adc
outs
mov
push
and
pusha
jb
into
mov
pop
fist
add
in
sub
inc
cwde
mov
rcl
out
in
push
xor
cmps
or
adc
jp
daa
mov
xchg
xchg
xchg
sub
inc
mov
push
push
sar
sub
mul
fwait
or
leave
daa
xor
sub
div
xchg
aad
fcomip
add
xor
call
test
jo
push
mov
pop
cwde
in
test
ret
push
lds
popf
adc
ret
xchg
push
shl
inc
fild
jle
scas
adc
push
add
adc
jnp
fadd
addr16
enter
and
rol
dec
out
xchg
(bad)
xor
mov
icebp
sti
mov
inc
mov
dec
fst
bound
sub
inc
or
or
xor
rol
out
in
mov
adc
aam
loopne
jp
pop
jae
add
(bad)
jp
mov
pop
sub
(bad)
loope
cmp
push
jns
retf
sbb
sbb
in
mov
xchg
pop
call
or
or
pop
mov
out
dec
xor
adc
xor
cmp
pop
push
push
mov
cmp
std
bound
add
shl
outs
daa
xor
pop
inc
dec
cmp
(bad)
lods
cmp
data16
mov
inc
and
push
or
jp
mov
(bad)
jg
sti
or
push
bound
and
inc
adc
mov
pop
enter
pop
xor
add
cmp
cmp
rol
mov
(bad)
adc
add
repz
jne
push
out
in
inc
adc
gs
retf
jp
sbb
mov
icebp
fadd
xchg
push
rcl
ficomp
adc
fwait
(bad)
arpl
add
ffreep
xchg
jae
dec
iret
add
pop
leave
mov
idiv
rcr
ja
cmp
sub
out
xor
bound
xchg
neg
inc
je
inc
mov
push
iret
mov
push
stc
gs
je
sub
pop
imul
and
jmp
mov
dec
frndint
stos
add
jmp
in
retf
je
ds
xor
out
push
or
jo
rcl
out
cmp
scas
add
mov
mov
and
push
adc
or
test
sub
int
dec
add
jp
mov
jg
pop
ins
jo
lds
call
adc
adc
push
sbb
ja
gs
mov
lahf
jne
fistp
loopne
mov
xchg
mov
adc
xchg
mov
int
adc
and
clc
repnz
push
and
icebp
jo
hlt
pushf
call
mov
fbstp
cmp
dec
sahf
movs
fwait
mov
add
fucomp
cli
or
and
xor
mov
repnz
and
call
ds
jmp
jg
or
inc
pop
scas
jmp
lds
mov
test
test
in
adc
add
arpl
sbb
pop
jne
cmp
adc
and
cli
movs
and
enter
pop
push
lahf
cmc
dec
pop
jno
rcl
lds
es
pusha
dec
test
dec
xor
jo
(bad)
mov
push
cmp
adc
loope
lea
out
(bad)
frstor
inc
rcr
scas
inc
sbb
xor
xchg
jo
jb
pop
out
cmp
add
adc
mov
cmp
lods
xchg
out
or
ins
mov
call
es
adc
push
std
mov
ret
xchg
xchg
outs
mov
jno
lods
leave
xchg
ror
jge
mov
xlat
mov
adc
(bad)
dec
pop
repz
stc
lods
or
and
outs
iret
sbb
scas
push
adc
loopne
push
cs
std
lods
mov
shr
or
call
(bad)
imul
fimul
xlat
(bad)
jle
les
mov
aas
sub
scas
and
push
xor
and
push
aam
adc
mov
daa
sbb
dec
neg
xor
push
je
jno
jg
movs
push
outs
mov
jae
cmp
in
repz
dec
int
loopne
xchg
test
cmps
mov
test
nop
xor
dec
adc
mov
popf
into
not
jb
pusha
xchg
(bad)
std
sub
pushf
je
scas
xchg
test
add
xchg
or
mov
xchg
cmp
pop
mov
test
test
imul
mov
stos
mov
xor
(bad)
cmps
data16
xchg
adc
jmp
jo
lock
fmul
ins
cs
ins
xor
ficom
and
mov
mov
push
cmc
enter
jecxz
ret
(bad)
adc
xor
jl
aas
push
leave
pop
xchg
test
dec
stos
out
loopne
push
lahf
dec
outs
ret
(bad)
cmps
add
ror
jne
nop
pop
xor
neg
out
or
mov
pcmpeqb
pop
pushf
xor
mov
fadd
in
aaa
or
aaa
and
aad
test
push
pop
jo
inc
cmc
aam
stos
dec
xchg
test
pushf
mov
jno
(bad)
call
mov
gs
push
and
mov
cmp
out
je
call
out
add
pop
sub
adc
pop
aas
fstp
mov
push
stos
in
mov
xchg
aaa
xor
pop
mov
or
sbb
in
in
inc
loope
dec
cdq
cmp
jns
fsubr
(bad)
in
push
mov
lods
mov
mov
gs
cdq
mov
mov
(bad)
adc
mov
es
(bad)
test
mov
sbb
xchg
idiv
mov
scas
pop
xchg
add
jno
push
lock
jne
and
pop
xor
mov
xlat
popf
not
jb
xor
lea
sub
popa
cmp
push
shl
pop
mov
xchg
in
out
sti
stc
dec
sbb
mov
movs
push
mov
and
lock
mov
add
addr16
xor
cmps
dec
clc
jecxz
fstp
jmp
mov
jmp
pop
mov
out
pop
push
out
cmps
jg
cmps
fisttp
jb
or
cld
push
movs
fisttp
dec
sbb
test
sbb
xchg
enter
cwde
in
stos
inc
dec
nop
mov
adc
push
mov
add
cmps
ss
pushf
jl
bnd
retf
test
push
in
jge
adc
or
mov
mov
leave
xchg
cld
or
inc
mov
rcr
adc
xchg
inc
xchg
je
or
push
jne
addr16
mov
ja
scas
(bad)
loope
dec
pushf
mov
aad
out
xor
jo
mov
ror
push
push
int
xchg
pop
js
aas
retf
repz
retf
popf
mov
iret
lahf
in
cld
jnp
jmp
(bad)
data16
mov
call
mov
icebp
mov
scas
xchg
(bad)
adc
aam
jg
sbb
and
sub
call
pop
mov
mov
fst
(bad)
loop
in
pushfw
adc
cmp
sbb
dec
mov
data16
pop
clc
pop
cmp
cwde
scas
dec
loopne
push
pusha
rcl
movs
iret
mov
sbb
fdiv
loop
mov
cmp
mov
mov
xor
jno
fsubr
fstp
sub
mov
dec
mov
mov
in
out
jle
sbb
dec
xchg
and
and
lods
loop
sbb
lods
and
outs
fnsave
addr16
xor
mov
ins
sub
adc
xchg
out
dec
cmps
pusha
ret
push
pushf
std
dec
shl
test
xlat
lods
jmp
js
fistp
lods
cs
or
rcr
xchg
xor
aas
xor
call
and
icebp
add
mov
(bad)
mul
or
cmp
jmp
jae
setg
mov
(bad)
mov
mov
cmp
imul
fnstsw
pop
mov
fs
out
fild
cld
and
dec
imul
dec
shr
mov
pusha
jecxz
sbb
lea
loope
cwde
les
(bad)
cdq
jl
jl
repnz
jmp
mov
dec
pop
lahf
push
jmp
sbb
je
leave
push
into
int
(bad)
mov
cmp
mov
mov
jo
pop
cmps
sbb
push
cdq
or
pop
out
xor
fcomp
sub
mov
lea
add
add
jl
(bad)
jle
fidiv
mov
jmp
mov
push
cdq
cmp
jge
sbb
cmps
jecxz
jo
mov
dec
push
cmc
and
xchg
mov
into
mov
in
mov
sbb
(bad)
popa
int
(bad)
or
out
push
jmp
mov
push
stc
inc
stc
cli
dec
push
cmp
inc
imul
jno
jbe
jns
xor
pop
xchg
cmc
pop
das
pop
mov
jmp
(bad)
loopne
lea
adc
stc
jne
in
cmp
inc
xor
stos
mul
fcompp
mov
dec
mov
ror
test
mov
or
addr16
mov
inc
retf
adc
xchg
sbb
rol
inc
inc
loop
dec
push
cdq
daa
cli
scas
mov
inc
test
dec
push
fnstcw
jmp
and
cmp
mov
jle
xor
mov
call
mov
cmp
mov
in
out
sahf
fwait
sar
mov
jae
movs
pop
xor
pop
xchg
add
mov
xor
mov
and
lea
movs
cmp
add
mov
add
mov
mov
jns
bound
outs
in
xchg
pop
sbb
xor
hlt
adc
inc
ja
mov
cmp
mov
xor
test
sub
fcomp
fidivr
mov
enter
out
xor
dec
mov
xor
jnp
int
dec
or
aaa
jnp
aaa
je
retf
and
imul
xor
dec
or
mov
loopne
test
imul
fwait
das
dec
mov
rcr
sbb
adc
rol
inc
arpl
push
clc
rcl
arpl
pop
mov
jne
pop
dec
cmps
mov
repnz
cmc
mov
and
retf
cld
std
stc
or
and
add
es
mov
cmp
dec
jns
scas
rep
or
loop
das
nop
pop
pusha
and
mov
in
(bad)
leave
sbb
cld
and
fstp
inc
and
push
mov
sub
js
inc
dec
mov
fstp
pop
xor
in
push
xor
or
inc
sub
add
addr16
dec
add
mov
or
mov
std
adc
inc
or
fwait
ja
cmp
cli
adc
and
cli
xchg
mov
outs
test
sub
and
push
xor
dec
mov
pop
cmp
push
cmc
and
or
jns
or
pop
cli
sub
push
mov
pop
in
pop
call
jnp
cmp
int3
icebp
cli
jge
add
cs
(bad)
dec
lea
jb
(bad)
and
stc
jmp
pusha
out
xchg
mov
fdiv
mov
push
icebp
mov
movs
popa
ret
repnz
or
imul
lods
ja
shr
jo
mov
jne
ins
pop
push
icebp
pop
in
jo
inc
dec
mov
push
sub
mov
sbb
ror
cmp
xchg
adc
lock
loope
pop
add
xchg
jmp
jbe
add
pop
test
idiv
sub
mov
cld
or
hlt
or
fs
or
adc
(bad)
ficomp
adc
push
aad
popf
xchg
push
fild
(bad)
mov
test
or
or
sbb
repnz
and
jmp
cmps
add
in
ret
mov
mov
nop
call
and
mov
dec
push
enter
pop
cld
push
out
add
ins
xor
xor
fs
xor
test
mov
cmp
enter
mov
les
fwait
pusha
not
push
mov
mov
and
dec
and
dec
cli
mov
aad
dec
test
mov
fimul
pop
test
ror
adc
mov
mov
sub
dec
jge
mov
es
pop
pop
scas
inc
outs
mov
pop
test
jno
fstp
scas
cmp
es
inc
test
jo
xor
mov
ja
add
cld
(bad)
das
arpl
xchg
inc
in
ss
jne
sub
mov
jno
cmc
mov
shl
add
mov
rcr
sub
push
fsub
int3
stc
push
fsubr
shl
push
inc
dec
movs
xchg
sub
nop
push
sbb
pusha
ins
lea
or
add
in
and
jl
lods
adc
push
out
mov
movs
outs
jmp
fnstenv
jmp
fiadd
icebp
shl
call
nop
jmp
jae
aas
neg
dec
ins
jmp
scas
jns
sbb
adc
enter
sub
hlt
cmp
mov
mov
inc
js
int3
mov
dec
mov
adc
pushf
cmp
shl
jl
pop
xor
test
fxch
jo
dec
sbb
ror
or
fstp
fs
push
fs
ret
push
pop
pop
jno
test
pop
fwait
mov
pop
push
adc
mov
outs
sub
pushf
sub
xor
cmc
inc
in
dec
sub
push
fwait
jg
test
popf
clc
mov
in
jg
int3
cli
test
in
js
test
cmps
ins
jne
fldcw
int
xchg
xor
push
das
loopne
jnp
adc
fs
popa
adc
inc
out
pop
test
xor
sub
sbb
mov
das
dec
mov
cmp
mov
les
xchg
retf
inc
xchg
sbb
into
out
cmp
add
mov
xchg
xchg
call
xchg
arpl
inc
jmp
loope
sysret
mov
outs
sub
jnp
xchg
sti
mov
test
dec
jl
dec
mov
retf
cwde
leave
nop
neg
loopne
pop
sahf
pusha
adc
mov
cmovle
and
retf
test
out
push
cmp
push
in
hlt
ficomp
mov
cli
jl
in
loope
gs
adc
pop
sti
stc
into
or
cmp
das
mov
ins
enter
sbb
pop
inc
inc
call
xor
add
inc
in
sar
or
lahf
test
ret
icebp
mov
sub
xchg
xchg
push
cld
sbb
xlat
inc
jbe
xor
stos
sub
mov
mov
jmp
dec
sbb
(bad)
mov
jae
cli
lds
add
mov
mov
mov
mov
xchg
sbb
(bad)
shr
and
fistp
push
ror
mov
cmp
outs
add
lahf
pop
retf
xchg
cmc
imul
and
ds
fadd
dec
pop
xor
jmp
inc
pushf
es
rcr
std
push
mov
(bad)
(bad)
cmc
cmp
addr16
sbb
cmp
inc
xor
mov
fwait
cmp
jae
aam
xor
ins
stc
adc
jg
gs
mov
dec
dec
xchg
pop
xchg
inc
(bad)
push
clc
jge
jmp
lods
xor
cmps
jle
push
ret
mov
pusha
sub
scas
ret
scas
jecxz
push
data16
dec
cwde
jno
ds
xchg
jge
cmp
add
mov
out
mov
addr16
xchg
xchg
mov
add
inc
fnsave
xchg
sub
push
inc
in
sbb
push
popf
inc
pop
arpl
jne
sub
loope
mov
mov
aas
aaa
push
and
mov
movs
out
jg
sub
fstp
jge
retf
cmp
cmp
fistp
cmp
mov
fwait
rcl
addr16
mov
inc
pusha
mov
add
imul
lahf
xchg
sbb
inc
inc
cmp
mov
add
push
jno
add
cmp
call
xor
test
ret
sbb
xchg
xchg
cmp
inc
mov
lock
fisttp
int
xor
mov
or
call
add
dec
add
push
retf
rcr
mov
mov
fldcw
fnstsw
cmp
xor
cmp
(bad)
sub
scas
cmps
jmp
mov
fnstsw
mov
sar
mov
pop
js
inc
adc
std
xchg
inc
adc
add
add
int3
aad
mov
dec
fcom
inc
shl
sbb
aad
sbb
sub
pop
push
sub
or
jo
es
gs
mov
xchg
or
in
add
aaa
adc
data16
pop
loopne
call
(bad)
mov
jno
fdivr
addr16
inc
mov
mov
xor
xchg
dec
xchg
addr16
out
mov
jo
xchg
push
sub
push
or
and
aas
ds
adc
lahf
mov
jle
cmp
or
mov
jne
inc
cmp
adc
sbb
out
in
cmp
pop
push
xor
jbe
jle
push
pop
daa
ins
push
imul
mov
stc
xchg
inc
sbb
xor
xor
mov
lods
adc
and
lods
das
div
mov
clc
pop
hlt
push
movs
mov
int
les
push
ins
sbb
cmc
xchg
loopne
movs
push
sub
pop
(bad)
push
ret
inc
xor
lods
cli
mov
popa
inc
in
or
call
xor
sahf
outs
cmc
push
mov
mov
(bad)
jecxz
scas
and
push
xchg
fs
cmp
test
retf
mov
movs
jo
inc
pushf
adc
xor
jne
push
add
xor
push
sub
in
inc
dec
ret
and
inc
jmp
fld
sbb
stos
xchg
stc
jmp
push
pop
xchg
or
cld
sbb
enter
add
dec
and
adc
adc
push
dec
jb
inc
xchg
(bad)
mov
sahf
mov
dec
test
ret
sub
iret
lds
add
arpl
cmp
dec
retf
pop
out
arpl
mov
sbb
or
imul
mov
dec
(bad)
adc
mov
cmps
jmp
dec
mov
jae
ds
adc
fbld
push
or
shl
dec
(bad)
cmp
add
jge
je
or
jns
jno
cs
mov
cmc
adc
add
aad
ror
enter
cmp
sub
call
jle
dec
ja
and
cmp
xchg
lods
push
mov
out
and
cdq
or
add
jmp
cmps
ja
xchg
mov
inc
jo
hlt
test
or
sahf
cmp
push
inc
xchg
mov
inc
xchg
or
(bad)
mov
jo
outs
push
test
test
mov
fistp
jmp
pop
pop
sub
push
loop
inc
xchg
mov
pop
stc
ins
jno
push
mov
lds
jns
scas
call
xor
retf
cmc
sbb
inc
sahf
ss
idiv
cmc
mov
push
loope
adc
mov
imul
cs
cmp
movs
iret
add
ret
bound
(bad)
push
cmp
ja
and
jae
xchg
push
shl
(bad)
push
test
int3
xchg
sub
jl
sub
aad
jnp
pop
mov
in
lods
neg
(bad)
inc
and
adc
mov
int3
dec
push
out
neg
push
test
push
scas
push
cmc
dec
cmp
pushf
xchg
inc
rcr
pop
pushf
mov
jg
ins
pop
and
stos
fst
push
xlat
sub
test
fidiv
dec
push
and
stos
dec
mov
int3
pushf
push
or
xor
push
popa
jo
fcmovnb
cmp
inc
outs
jle
push
pusha
fldenv
rol
bound
cmps
xchg
mov
cmp
pop
repnz
stos
data16
lea
(bad)
cmp
cdq
scas
in
mov
or
fsub
(bad)
xor
je
xor
add
hlt
xchg
rol
icebp
mul
ds
jns
daa
mov
jo
stos
outs
mov
xchg
in
fldcw
or
and
retf
xchg
ins
inc
daa
inc
push
aam
lods
lods
xor
in
sbb
xor
inc
dec
mov
test
sub
push
(bad)
fdiv
xor
daa
retf
icebp
into
fsub
(bad)
in
add
ret
(bad)
in
xchg
aas
mov
(bad)
dec
pop
mov
push
aaa
les
sti
shl
movs
inc
adc
test
js
nop
cmp
push
cwde
popa
js
cs
lds
mov
jmp
sub
mov
fs
push
(bad)
(bad)
js
shl
popf
jp
repz
xchg
push
mov
mov
mov
or
int
inc
mov
adc
mov
gs
int
fucom
xchg
add
fbld
fiadd
xchg
lea
fdivrp
out
adc
jmp
jb
in
cmp
inc
fnstenv
movs
imul
popa
adc
gs
(bad)
push
jno
fcomp
pop
push
sub
xchg
mov
ret
out
(bad)
mov
push
push
ja
add
and
sti
sbb
test
add
mov
or
xchg
sub
clc
enter
jno
cmp
dec
mov
out
mov
aas
jp
mov
fsub
cmp
mov
nop
push
xchg
rcr
scas
cmp
add
fcomp
dec
sahf
loope
inc
push
pusha
xchg
jno
mov
jne
repnz
mov
pop
adc
inc
adc
neg
push
jl
imul
mov
pop
ja
mov
shl
sar
xor
adc
mov
rcr
cmp
aas
mov
xor
push
mov
lock
fiadd
aas
push
xchg
or
(bad)
loop
test
scas
cmp
inc
retf
jmp
dec
mov
mov
int3
fcomp
push
inc
mov
je
adc
jl
mov
fcom
mov
dec
xlat
jmp
cmp
and
xchg
sahf
iret
lea
xchg
call
daa
dec
arpl
mov
loopne
mov
pop
pop
fisubr
cmp
loope
push
(bad)
pop
dec
rcr
int3
pop
and
inc
sub
dec
adc
push
(bad)
scas
push
pop
aaa
aas
fidivr
mov
inc
pop
jl
and
ja
daa
push
sbb
cs
inc
mov
ds
les
out
push
xchg
dec
xchg
jo
in
push
jbe
mov
das
jnp
fsubr
xchg
add
cmp
loop
loope
sti
mov
fisub
loope
sub
jmp
hlt
and
cmp
or
pop
pop
mov
sbb
push
xchg
fcomp
or
mov
xor
add
sbb
cdq
shl
(bad)
lahf
cmp
sbb
out
jbe
xchg
or
mov
jp
add
xchg
mov
add
mov
dec
jp
repnz
lock
mov
pop
test
add
lds
test
enter
rcl
jbe
cmp
mov
pushf
lods
and
and
outs
fcomp
das
and
mov
cmp
cmps
stos
cmp
repnz
dec
add
sub
movs
int
(bad)
mov
sahf
sub
pop
pop
xor
ins
cmps
scas
aad
retf
adc
cli
in
adc
mov
mov
push
fiadd
mov
or
imul
mov
xchg
xchg
xchg
add
push
pushf
dec
(bad)
das
add
popa
outs
xor
outs
call
pusha
and
sub
popa
cwde
push
dec
dec
movs
pop
push
pusha
mov
xor
cmp
adc
cmp
mov
gs
mov
cmp
adc
pop
mov
cmps
push
mov
das
movs
fild
mov
inc
inc
push
jl
lods
loope
arpl
add
addr16
not
fdivr
mov
sub
or
xchg
fimul
pop
imul
add
pop
jge
push
adc
pop
in
ins
(bad)
out
aaa
adc
cwde
call
js
jge
popf
dec
aas
stos
cmp
mov
mov
les
jl
cwde
out
dec
xchg
mov
test
fstp
loope
imul
jle
js
cdq
call
xchg
push
mov
ins
jmp
stc
cli
push
loopne
or
xor
inc
or
lea
xchg
mov
mov
mov
pop
out
les
sahf
inc
pop
pop
daa
xchg
(bad)
js
jmp
xor
adc
and
xor
push
dec
push
jg
mov
call
mov
out
jbe
adc
push
outs
outs
cld
test
aaa
xor
sub
fst
or
inc
test
fst
adc
lods
icebp
jne
mov
sbb
adc
xchg
inc
xchg
push
out
retf
sti
pop
(bad)
jo
shl
sbb
xchg
xchg
int3
push
dec
sbb
int
xchg
daa
inc
jle
inc
jge
mov
jge
sub
push
daa
fiadd
or
mov
gs
cld
stc
ja
pop
imul
rcr
dec
mov
js
mov
or
std
repnz
cmps
cmp
loope
cmps
push
arpl
shr
hlt
mov
sbb
arpl
xchg
test
mov
push
mov
pop
or
mov
jle
movs
jae
in
add
mov
into
ss
test
mov
add
xchg
push
fiadd
stos
adc
inc
push
in
pusha
mov
jl
cmp
and
add
sahf
or
sub
sbb
scas
ret
ret
push
outs
xchg
loop
adc
fwait
call
int3
dec
pushf
aaa
or
xchg
cwde
mov
and
adc
inc
push
add
inc
push
jns
std
adc
push
jmp
in
adc
xlat
adc
call
out
mov
sbb
popa
mov
mov
cmp
fbld
lods
push
fimul
mov
sbb
cmps
mov
pusha
in
popf
test
xchg
add
addr16
aam
sub
repz
sbb
pushf
(bad)
jg
push
imul
sbb
sub
mov
fs
or
inc
ficomp
push
fdiv
jne
aaa
shl
add
movs
in
aam
(bad)
sub
inc
nop
pop
push
in
ret
adc
pop
pop
xchg
in
xor
(bad)
in
dec
mov
mov
mov
fsubr
lods
mov
sub
and
test
sar
xchg
push
xor
push
fstp
push
mov
imul
mov
or
test
and
inc
cmp
adc
sub
loope
popf
jmp
add
jp
inc
loopne
sbb
lahf
mov
out
mov
jmp
sbb
pop
mov
or
imul
adc
rcr
sbb
retf
adc
je
push
and
sar
inc
pusha
cmp
jp
jmp
movq
sub
dec
inc
jo
pop
fist
sbb
and
lods
cmps
cbw
or
xor
adc
std
(bad)
call
cmc
xor
js
jbe
mov
pop
(bad)
imul
pop
enter
rcl
pop
add
(bad)
fcomp
mov
ss
mov
pop
mov
adc
jns
cmp
dec
iret
add
ins
pop
mov
rcr
or
sub
sbb
pop
or
mov
ret
mov
pop
push
std
mov
adc
mov
adc
add
fld
lds
repnz
push
pop
cmc
jbe
repz
pusha
fisubr
inc
and
ret
jmp
std
pop
xchg
jnp
in
packssdw
into
dec
jmp
dec
aam
rcr
test
xor
loop
mov
lea
loope
test
lea
bound
cdq
bound
or
(bad)
out
in
xor
push
fiadd
lea
dec
add
xchg
dec
sub
xor
dec
adc
in
out
mov
push
popa
pushf
push
mov
movs
jmp
ret
xlat
les
mov
xchg
dec
jmp
fsubr
shr
mov
pop
cmps
and
cmp
mov
push
xchg
aas
mov
jecxz
in
adc
adc
sbb
push
mov
add
fisttp
mov
add
jbe
std
push
fidivr
jnp
xchg
jno
stos
(bad)
out
push
xchg
pop
shl
dec
jno
pop
sbb
push
jl
mov
mov
inc
ss
mov
mov
mov
jne
pop
jg
pop
movs
dec
mov
fs
aad
push
mov
into
sbb
mov
(bad)
jae
and
ds
jp
pop
adc
jbe
sub
jmp
dec
or
or
sbb
xor
inc
fstp
fisttp
shr
mov
cmp
sbb
in
pop
inc
scas
adc
and
imul
mov
cmps
outs
jge
fimul
cmp
lahf
pop
repz
mov
cmp
sub
fdivp
sub
cmp
(bad)
outs
out
sbb
dec
fstp
cld
sbb
xchg
das
pop
outs
push
inc
loop
xchg
arpl
add
xor
inc
repnz
jb
mov
jmp
scas
xchg
fwait
jbe
stos
into
mov
aam
lods
jecxz
(bad)
(bad)
hlt
push
das
fadd
add
retf
test
scas
outs
xor
std
or
adc
jb
push
add
mov
cmp
out
out
mov
(bad)
sahf
(bad)
push
mov
mov
fwait
mov
dec
push
aad
cmc
push
cmc
pop
loopne
pop
pop
adc
adc
and
leave
push
xor
push
push
xor
inc
jle
adc
push
cwde
dec
push
ss
iret
mov
xchg
push
push
sub
ins
push
je
mov
jne
jmp
js
xor
xor
adc
mov
pop
(bad)
mov
cmp
or
(bad)
sub
in
add
mov
cli
xchg
(bad)
in
mov
or
jle
push
popf
sub
fucom
sub
not
ror
mov
or
gs
test
outs
lods
inc
daa
pop
pop
jne
test
cmc
les
cmp
push
and
mov
sbb
or
or
clc
gs
popa
fsubp
adc
add
sbb
inc
xchg
lahf
mov
(bad)
xchg
test
jecxz
jns
adc
pop
xor
mov
dec
inc
jmp
jb
cwde
(bad)
jp
mov
mov
add
ja
sar
jae
cmps
clc
sbb
mov
std
leave
clc
inc
es
out
cmps
sub
jae
iret
mov
mov
push
stc
cmp
inc
mov
mov
imul
fstp
mov
and
xor
std
(bad)
clc
dec
xor
and
retf
(bad)
cmc
add
mov
aas
inc
or
cdq
inc
mov
xchg
mov
cmps
inc
call
scas
popa
pop
jbe
adc
test
in
in
out
ins
(bad)
lds
dec
and
sbb
push
push
or
ins
adc
inc
push
xor
sbb
aad
les
jmp
and
inc
dec
add
cs
jo
iret
mov
call
and
adc
inc
ror
fadd
sbb
mov
xchg
push
cdq
lock
rol
(bad)
repz
push
in
out
and
sti
cmps
xchg
in
jl
es
sub
(bad)
fmul
call
cmps
sahf
aas
(bad)
(bad)
push
push
or
xor
pop
rcr
shl
out
dec
mov
mov
push
jmp
push
jecxz
cmp
xor
sbb
xor
inc
xchg
sub
cmp
pop
rcl
dec
imul
or
dec
inc
pop
ins
popa
imul
or
jge
arpl
xlat
xchg
das
sahf
in
sbb
in
clc
sahf
movs
cwde
ret
cmps
shl
aas
mov
sub
repnz
pop
jp
xchg
push
and
loope
pop
add
push
dec
inc
jbe
add
test
sbb
adc
mov
push
lock
test
xor
clc
mov
sbb
(bad)
cli
(bad)
xchg
jbe
adc
loop
int3
mov
test
movs
cmp
inc
(bad)
mov
push
inc
or
cmp
sar
jp
dec
xor
push
dec
cs
jbe
xlat
inc
outs
lods
pop
outs
retf
loope
mov
cmp
jp
ss
imul
mov
mov
(bad)
test
cmovo
push
scas
sbb
repz
cmp
aas
(bad)
adc
xchg
or
aas
adc
and
inc
js
std
out
jne
push
push
test
and
iret
call
ins
repz
xor
cmp
push
pop
jns
fs
loope
outs
into
push
jb
cmps
xchg
test
mov
mov
cmps
popf
mov
jbe
mov
adc
adc
xchg
ret
push
shr
mov
sub
xchg
div
in
in
mov
ds
and
or
add
xor
(bad)
mov
add
or
or
retf
test
or
repz
mov
pop
mov
fwait
jl
push
fmul
ins
or
adc
jge
mov
fld
push
or
(bad)
pop
inc
cmps
mov
add
adc
mov
das
pop
jge
inc
fwait
mov
push
jp
cmp
mov
mov
pop
lods
push
cli
adc
mov
mov
push
dec
push
(bad)
adc
mov
mov
push
ret
rcr
fidiv
test
jl
fild
adc
sti
mov
ins
addr16
shl
mov
inc
add
jnp
mov
sbb
test
push
cmp
(bad)
popf
mov
mov
jg
loope
mov
push
mov
push
out
inc
das
inc
inc
jo
mov
call
pop
cmps
sti
test
dec
cli
fadd
adc
cmp
xchg
cld
cmp
stc
popf
cmp
mov
ret
ror
movs
jnp
push
mov
das
add
sub
pop
adc
hlt
pusha
retf
xor
inc
sbb
shl
and
push
push
stc
test
xchg
es
and
lods
or
je
scas
pop
xor
in
aam
xchg
mov
jge
daa
xchg
test
cmps
lds
lahf
pop
sub
in
adc
add
jmp
(bad)
int
hlt
nop
jns
adc
ins
xchg
rol
add
mov
das
or
ds
mov
enter
mov
test
stc
mov
movs
or
mov
mov
lock
call
icebp
jno
js
movs
or
push
xlat
dec
rol
inc
(bad)
adc
int
add
and
push
push
shr
sar
sar
push
test
adc
adc
sbb
sub
pop
nop
pop
rcl
xchg
loop
call
aam
aad
mov
stos
ror
mov
mov
mov
imul
shl
xchg
fcmovnbe
hlt
mov
push
xor
bound
jb
pop
repz
add
movs
ins
sub
push
lods
and
stos
jle
rcl
mov
jecxz
fwait
xlat
xchg
jbe
push
call
cld
test
out
ja
int3
mov
fcom
sbb
lea
arpl
mov
sub
in
out
xor
xchg
inc
or
dec
daa
cld
in
nop
adc
idiv
mov
sub
pusha
jl
push
pop
in
cwde
pop
dec
xchg
ret
mov
mov
pop
aam
mov
inc
xchg
fs
out
add
and
fs
jle
and
outs
xor
imul
cmp
jl
mov
dec
xchg
adc
std
(bad)
sbb
shl
jo
arpl
ret
retf
outs
jmp
dec
aam
and
ret
xchg
fwait
xor
iret
pusha
add
xchg
add
aad
int3
js
push
or
xor
mov
pop
shl
pop
ds
ja
sub
or
jg
pushf
or
je
jno
xchg
mov
dec
sbb
sti
jg
repz
popa
retf
fimul
sbb
add
sbb
aaa
inc
std
sub
imul
cmps
mov
jle
(bad)
cmps
mov
sbb
in
test
imul
dec
popf
fsubr
pop
es
xor
adc
cwde
fwait
in
fwait
or
mov
rol
add
mov
aam
inc
dec
adc
sti
cld
shl
mov
(bad)
outs
data16
pop
ins
push
pushf
int
jl
cmp
shl
inc
mov
xchg
imul
mov
sbb
xlat
inc
sub
mov
call
xchg
push
ins
xchg
in
and
call
mov
sbb
lock
cmps
out
mov
scas
inc
inc
std
ds
mov
sbb
inc
cmp
jb
inc
pushf
in
ja
push
jnp
jge
dec
lea
pop
aad
inc
push
popf
sbb
test
scas
ins
sti
mov
and
inc
inc
or
aad
xor
push
ficom
adc
int
jnp
js
add
dec
cmp
test
adc
int
push
je
push
mov
and
jbe
cs
add
fimul
xchg
jmp
lock
cli
sbb
mov
retf
repz
sub
out
sar
mov
test
mov
cdq
and
repnz
inc
xchg
js
pop
out
addr16
arpl
(bad)
xchg
jno
xchg
cmp
mov
jmp
stos
cld
mov
cmps
lods
mov
arpl
repnz
ret
sub
inc
mov
jnp
(bad)
jp
jecxz
cmp
repnz
out
int3
rcl
xchg
ret
hlt
inc
add
test
push
add
jb
jae
es
mov
pop
out
cmp
dec
or
out
stc
mov
cmps
push
cmp
pop
add
dec
call
dec
push
xchg
aam
loopne
int3
and
enter
je
stc
mov
adc
stc
test
leave
in
cmp
es
dec
test
jnp
ins
ret
in
test
ins
pop
mov
inc
adc
neg
shl
mov
sbb
jp
lahf
or
jns
sub
aas
mov
or
sub
add
xlat
cmps
add
imul
sbb
call
xchg
stos
jae
mov
push
sub
mov
jg
jmp
popf
adc
or
js
pusha
in
adc
pop
xor
repz
repnz
stc
mov
repz
addr16
shl
(bad)
xchg
or
jl
test
sbb
mov
inc
ds
(bad)
jo
loope
sub
add
ret
jo
(bad)
fcomp
test
shr
mov
cmp
cli
ins
jge
cli
jnp
and
sahf
xchg
lods
pusha
pop
xchg
mov
cmp
dec
jo
push
pop
ret
daa
adc
push
inc
adc
and
sbb
cmp
fstp
mov
ja
xchg
icebp
push
mov
rol
nop
in
mov
or
pop
movs
pop
xor
jp
fdivr
rcl
dec
fdivr
dec
rsm
in
mov
std
xor
rol
test
push
fisubr
out
inc
neg
cld
cmps
mov
out
pop
clc
cmc
call
lods
shl
or
pop
popf
stc
aaa
dec
in
sbb
pop
jecxz
adc
cmp
stos
jp
stos
xchg
test
arpl
fidivr
lods
and
pushf
ror
mov
cmp
movs
scas
dec
pop
mov
mov
adc
clc
test
push
mov
cmp
xor
push
push
push
movs
mov
push
xchg
(bad)
xchg
gs
int
ja
gs
mov
ret
rcr
xchg
popa
pop
xlat
push
aam
cmp
pop
inc
push
sti
addr16
xchg
fsub
mov
inc
inc
repz
imul
push
fstp
int
jnp
xchg
mov
dec
mov
das
je
or
push
mov
pop
mov
jle
pushf
movs
gs
mov
pop
pushf
retf
jp
jl
cmp
and
bound
lock
test
cmp
mov
gs
mov
inc
jl
jo
fldpi
(bad)
xchg
push
xchg
inc
pop
outs
adc
pop
ret
cmp
or
pop
adc
in
sbb
sti
mov
outs
daa
or
imul
or
(bad)
dec
(bad)
ficomp
add
cmp
mov
pop
fisub
push
cmp
push
arpl
call
push
in
mul
mov
das
mov
and
hlt
cmp
ds
not
fs
inc
push
or
push
adc
cwde
and
jle
pusha
mov
push
rcl
pop
jmp
(bad)
pop
mov
shr
scas
fnstenv
xor
sub
pop
fidiv
fistp
or
push
shr
sub
jmp
jg
add
sbb
dec
out
push
cmp
lods
cmc
leave
popf
test
and
retf
ror
xchg
(bad)
fnstcw
in
adc
pop
add
test
and
lods
inc
imul
add
xor
aaa
sbb
jecxz
outs
out
das
cmp
jecxz
fldcw
push
dec
jb
sbb
into
jmp
cli
sbb
xchg
pop
mov
inc
jmp
inc
pop
mov
jnp
nop
adc
pop
cmp
popf
jmp
lods
and
out
fucomip
push
adc
or
jecxz
outs
(bad)
sbb
pop
dec
xor
in
jne
lea
mov
mov
shl
mov
rcr
inc
(bad)
gs
mov
add
rcr
xor
mov
movs
cmp
fisttp
adc
lods
stos
mov
jge
out
lds
imul
xor
add
outs
test
aaa
jmp
push
xchg
cmp
mov
pop
add
add
inc
das
push
sub
fwait
and
bnd
call
mov
pop
ret
adc
gs
out
push
jp
jb
fisub
lock
ins
xchg
ret
mov
mov
jge
pop
test
fwait
scas
jns
lahf
in
mov
dec
cmp
push
(bad)
cli
scas
daa
repnz
(bad)
xchg
sbb
call
dec
inc
pop
popf
out
adc
sahf
pop
sbb
mov
loop
fcom
cmc
retf
mov
jle
mov
shl
mov
mov
inc
mov
jb
daa
xor
pushf
mov
push
xlat
dec
cmp
int3
cmp
js
mov
adc
jne
xor
mov
mov
sbb
shl
jbe
pop
shr
dec
out
stos
jecxz
adc
pop
bound
test
xchg
fs
mov
xchg
mov
inc
loopne
jmp
cli
xlat
hlt
aas
jno
daa
adc
not
mov
adc
jno
and
dec
mov
push
mov
adc
mov
loopne
inc
jmp
(bad)
cmps
loopne
fild
(bad)
ja
push
push
pop
inc
cli
dec
pop
sub
movs
fucomp
sub
xchg
leave
mov
lea
cli
or
mov
inc
imul
mov
mov
call
jmp
test
inc
inc
push
push
xor
dec
and
pushaw
int3
dec
mov
popa
mov
lock
or
cmp
mov
xchg
jecxz
mov
div
loope
popa
test
push
div
sbb
stos
mov
ins
sar
mov
pop
mov
jle
add
jg
and
scas
cs
aas
push
pop
jns
push
sbb
and
(bad)
xlat
in
aad
into
shr
bound
pop
faddp
mov
xlat
xchg
add
out
out
mov
movs
leave
cdq
stc
mov
add
mov
enter
push
retf
pop
and
cmp
mov
aaa
sub
mov
or
pop
xchg
dec
retf
inc
inc
popf
loopne
hlt
mov
sub
outs
fwait
dec
rol
push
gs
test
xor
mov
pusha
jecxz
add
lea
(bad)
imul
shr
pop
jmp
retf
lahf
cmps
fadd
movs
sbb
stc
xor
test
gs
mov
adc
sbb
add
ficomp
mul
mov
and
movs
sbb
das
stos
and
xchg
add
jp
mov
mov
bswap
gs
scas
jnp
aas
aam
sbb
movs
ins
imul
adc
scas
jecxz
fist
mov
mov
inc
dec
sti
dec
adc
into
(bad)
stos
es
xor
aas
lds
jne
pusha
je
xor
xchg
fs
sbb
sbb
mov
pop
inc
push
sbb
std
jnp
mov
jmp
xor
cmps
add
pop
xchg
pop
in
add
adc
retf
push
test
(bad)
mov
jg
xchg
dec
test
push
and
frstor
retf
dec
and
push
sbb
ror
imul
jo
push
dec
out
sbb
cmp
popf
jb
loope
xlat
(bad)
retf
ins
shl
les
aam
jle
imul
sub
jno
dec
xor
dec
clc
mov
jno
into
rcr
sbb
mov
in
ret
les
mov
push
(bad)
mov
xlat
and
lods
sub
js
lahf
popf
mov
fsub
jmp
ret
aaa
xchg
mov
mov
xor
aaa
jb
cli
jmp
mov
pusha
test
ds
pusha
add
jne
mov
sbb
mov
mov
enter
loop
jo
sbb
test
bound
jl
(bad)
ret
fmul
mov
cmp
mov
fdiv
push
ret
push
out
dec
pushf
cdq
loopne
stos
pop
retf
scas
push
mov
jg
sub
nop
adc
movs
mov
jecxz
mov
xlat
xchg
push
mov
add
mov
xchg
inc
stos
push
pop
fld
push
push
sub
mov
push
mov
sbb
cmps
hlt
sbb
clc
jl
gs
ja
cmps
ret
(bad)
cmp
xchg
bswap
aaa
xchg
ins
adc
and
dec
(bad)
xlat
jecxz
out
scas
loop
in
push
sbb
test
jb
(bad)
cli
int3
fmul
daa
cmp
shr
mov
xor
mov
xchg
cwde
add
adc
cmp
pop
jnp
push
push
xchg
dec
stc
jle
lds
inc
mov
cmp
sar
shl
(bad)
mov
and
retf
inc
out
mov
icebp
inc
cld
lock
stc
fwait
dec
cwde
sar
mov
or
std
sbb
cmps
test
or
adc
jmp
inc
mov
cli
push
leave
inc
mov
imul
xor
in
inc
mov
mov
cmp
or
pop
xor
pop
xchg
sbb
cmp
js
jecxz
enter
popa
pop
xchg
mov
add
mov
ins
data16
or
xchg
in
pop
ret
les
xchg
push
push
ds
rcl
sbb
adc
lahf
cmp
mov
dec
ja
dec
repz
repz
add
cld
fistp
add
call
jbe
inc
push
inc
and
jle
ins
jg
out
scas
mov
jle
adc
outs
add
or
ret
aad
push
enter
mov
cmp
repz
std
push
test
mov
outs
test
and
add
xor
xchg
pop
push
cmp
jns
js
push
fldcw
pusha
cmps
leave
inc
dec
cs
cmp
lods
mov
cmp
lea
add
pop
pop
add
sub
add
std
pop
or
and
or
(bad)
iret
cmp
aaa
pop
cmp
jmp
call
jp
cmps
cmp
fsubrp
mov
mov
dec
mov
fincstp
cmp
ins
and
ins
outs
xchg
fcmovbe
push
test
test
jge
jl
(bad)
out
mov
jg
mov
aad
mov
dec
or
push
call
xor
and
popf
cmp
xchg
repnz
mov
bound
nop
xchg
xchg
popf
mov
mov
dec
xor
cwde
dec
call
and
xor
icebp
js
adc
std
xor
jo
add
leave
les
ins
iret
jp
call
lahf
adc
(bad)
push
or
mov
fidivr
jg
sub
stos
addr16
mov
addr16
jmp
shl
inc
and
cli
je
xor
sbb
push
cs
fst
mov
sahf
fadd
cwde
loopne
sub
add
(bad)
loope
cmp
push
dec
jno
sbb
jne
add
adc
add
xor
sub
xor
or
lods
cdq
cmp
leave
int
sbb
cmp
push
xchg
jle
aaa
jmp
mov
mov
xor
cmps
stos
push
jle
(bad)
jmp
jmp
fnstcw
daa
inc
xor
stos
add
jecxz
pop
pop
xchg
div
push
sbb
call
js
sbb
in
out
xor
js
fadd
mov
add
mov
or
pop
or
gs
aaa
sbb
jle
fwait
jno
sbb
inc
sub
into
pop
push
jge
jnp
mov
test
arpl
repz
scas
ins
cmps
hlt
ins
ss
cmp
xchg
cmp
adc
mov
in
fwait
xor
pop
adc
test
mov
jae
mov
dec
and
cmp
aas
ss
jne
loopne
retf
in
push
outs
xor
cli
pop
xchg
mov
jecxz
xor
cli
call
cmp
push
push
adc
pop
int
addr16
xchg
cmp
mov
mov
jmp
sub
and
push
imul
cli
addr16
jle
xchg
test
pop
xor
adc
mov
outs
iret
sbb
mov
sbb
or
outs
call
cli
pop
test
fsub
and
(bad)
add
enter
push
leave
mov
neg
aaa
cmp
aas
outs
fst
ret
arpl
retf
cmc
movs
imul
mov
mov
mov
into
mov
das
nop
sti
dec
add
pop
ss
push
xor
inc
push
and
cmp
inc
test
lahf
mov
dec
inc
shl
repnz
daa
push
(bad)
arpl
retf
ds
sbb
in
xchg
sbb
mov
retf
jle
push
cmp
scas
dec
lahf
addr16
ins
lods
ja
out
cli
test
in
inc
jnp
pop
mov
dec
push
mov
jp
mov
pop
add
jge
mov
jle
or
adc
jne
jg
int
sub
jae
shl
outs
and
xchg
mov
xor
sbb
(bad)
into
dec
(bad)
xchg
pop
fisub
cli
or
into
dec
and
jmp
das
mov
test
cmp
scas
xor
jecxz
and
cmp
ja
rol
pushf
xchg
and
retf
ret
dec
pop
out
ret
mov
lods
add
jbe
sub
(bad)
das
pop
mov
ins
jnp
outs
test
jb
mov
inc
imul
sbb
push
pop
push
sub
mov
mov
mov
sbb
jecxz
jne
cmp
mov
out
bsf
movs
xor
mul
push
idiv
or
movs
call
stos
lods
cmps
push
lods
mov
dec
out
imul
sbb
stc
ss
mov
mov
add
jne
test
movs
ret
push
lock
dec
(bad)
push
aad
inc
mov
scas
cs
xor
loop
sbb
adc
xchg
pop
cdq
lods
fdivrp
cld
aad
sbb
movs
mov
jmp
cmc
add
pushf
cmp
inc
jecxz
cmp
mov
push
cmp
jp
icebp
lods
imul
xor
retf
retf
(bad)
loope
xchg
push
movs
xchg
xchg
mov
idiv
int
mov
xchg
imul
iret
aam
inc
fcom
ja
jg
retf
push
test
jb
in
sbb
push
cmps
out
ins
mov
cli
push
into
mov
cmp
mov
(bad)
imul
xor
mov
or
scas
add
fsubr
add
jecxz
aam
push
add
(bad)
push
clc
dec
mov
mov
cld
cmp
jecxz
dec
mov
xchg
clc
dec
adc
add
pop
das
je
and
and
scas
mov
cmc
out
out
adc
mov
data16
push
cdq
cli
inc
fcom
pop
inc
ss
jmp
jne
cmovp
ins
arpl
xchg
bound
in
shr
push
mov
push
movs
and
dec
xchg
jg
aaa
cmp
dec
mov
hlt
xchg
mov
mov
movs
pop
fld
std
call
scas
out
into
in
sub
and
sti
mov
push
dec
push
inc
in
mov
neg
or
jnp
inc
mov
lahf
push
fldpi
jp
push
inc
retf
test
mov
sbb
jg
test
stos
cmp
jecxz
add
ficom
addps
inc
lods
(bad)
push
pop
inc
dec
xor
xchg
mov
retf
(bad)
sti
xchg
pop
mov
dec
push
scas
adc
retf
dec
xor
jmp
aad
mov
and
cmc
push
adc
cmp
sti
or
push
xchg
addr16
xchg
mov
outs
mov
fld
mov
or
push
js
idiv
push
dec
lods
stc
scas
or
es
in
and
in
aad
stos
dec
or
and
out
and
push
stc
inc
or
out
push
adc
ins
push
dec
sub
adc
jl
(bad)
adc
aam
xor
xor
outs
jno
sar
(bad)
lods
or
mov
pop
mov
or
mov
imul
in
cmp
adc
and
xor
pop
sahf
mov
pop
mov
ror
repnz
pushf
sbb
xor
sar
ins
stos
mov
mov
mov
mov
xchg
(bad)
movs
jno
stos
pop
jbe
xchg
fisttp
hlt
popa
test
jge
movs
out
sub
movs
je
pop
outs
(bad)
retf
adc
pop
sbb
xchg
out
popf
arpl
pop
sbb
(bad)
dec
and
adc
cdq
add
sbb
stos
arpl
mov
out
cmp
icebp
and
clc
jl
jns
add
mov
add
clc
pushf
cmp
sbb
std
enter
je
jmp
cld
loop
xor
fxch
dec
push
mov
adc
add
jg
push
loopne
int
fdivr
inc
std
icebp
ficom
and
jns
push
mov
movs
adc
in
mov
or
push
mov
jne
cld
adc
ins
jnp
mov
addr16
push
(bad)
sub
mov
jbe
cmp
das
(bad)
stos
sbb
cld
sar
cld
pop
pop
fadd
int
jp
inc
xchg
pop
(bad)
ss
lds
inc
adc
mul
and
sbb
and
pop
jo
aam
add
cmp
lods
mov
and
cmp
dec
xchg
adc
mov
jmp
jl
sub
push
pop
add
cmp
dec
loop
in
inc
test
cmp
push
xchg
js
push
mov
xchg
pop
adc
(bad)
jp
dec
jo
adc
shl
mov
stos
cwde
movs
outs
repz
je
leave
mov
mov
dec
jge
sbb
fwait
imul
fldenv
loope
mov
sub
cmc
jecxz
inc
stos
lock
das
pop
test
out
jp
cmp
mov
mov
cli
pop
sub
ss
out
in
into
imul
xchg
arpl
sub
mov
ins
mov
ins
test
outs
repz
addr16
call
xor
push
dec
cdq
sbb
sbb
lock
push
dec
fs
enter
xchg
mov
scas
push
ins
sbb
sbb
sub
xor
or
mov
into
mov
sbb
test
fstp
rcr
aam
aad
sbb
xor
sub
push
es
aas
loopne
jae
mov
mov
lds
fiadd
in
and
scas
les
pop
add
mov
mov
setbe
fisubr
hlt
adc
push
(bad)
stc
stc
add
push
aad
imul
enter
addr16
inc
inc
rcl
mov
outs
and
dec
sbb
scas
test
in
inc
(bad)
lds
inc
cwde
nop
sub
pop
jmp
fs
lahf
lods
retf
push
retf
adc
popa
adc
clc
loope
mov
pushf
daa
test
or
cmp
jnp
in
test
push
pop
aad
add
jp
xchg
fnsave
int
jb
in
imul
(bad)
sar
ds
mov
push
jge
les
pop
test
icebp
mov
dec
xor
push
loopne
add
repz
imul
inc
cs
dec
stc
mov
ror
je
pop
xchg
test
and
inc
mov
daa
mov
test
dec
rol
adc
xor
adc
xor
pand
cmp
xchg
std
or
rcr
not
lods
into
fimul
inc
stc
pop
fstp
mov
xchg
sub
inc
or
and
shr
inc
fwait
int3
jmp
int3
pusha
dec
(bad)
add
adc
ja
mov
neg
mov
aam
xchg
mov
or
push
lds
add
mov
push
iret
(bad)
cmp
jg
(bad)
xchg
sub
xor
add
mov
arpl
ss
call
jp
mov
mov
mov
adc
and
pop
lea
clc
movs
ja
mov
es
cmp
mov
(bad)
rcr
mov
shl
popa
mov
outs
and
adc
punpckhbw
push
xlat
data16
and
mov
call
retf
mov
scas
into
xchg
bsf
add
iret
sub
push
ja
and
sub
mov
cmp
in
xchg
fwait
inc
dec
cmps
inc
jae
(bad)
sti
movs
les
push
fs
dec
xchg
cmp
or
sahf
aam
call
push
test
mov
xor
push
mov
ins
retf
and
scas
sub
and
mov
enter
pop
icebp
lods
jns
and
call
add
aam
inc
add
jne
jl
push
imul
rol
lods
mov
jl
push
mov
rcr
mov
ss
push
add
ins
fsubr
mov
aad
push
movs
or
(bad)
xchg
lock
sbb
in
ss
fstp
out
loopne
sbb
jnp
movq
mov
mov
nop
int
mov
js
hlt
mov
pop
ror
xchg
mov
idiv
(bad)
mov
loopne
jp
xor
adc
jecxz
das
cld
mov
out
xchg
cmp
add
xor
pop
and
daa
push
push
(bad)
lock
movs
dec
inc
or
sub
inc
xor
push
icebp
pop
push
in
sbb
in
dec
mov
dec
ja
mov
xor
mov
jle
lods
mov
push
shl
cmp
data16
xor
(bad)
mov
adc
icebp
ss
je
ss
cld
in
and
lds
and
in
push
retf
and
xchg
push
pop
xor
(bad)
ror
ins
push
xor
mov
call
mov
(bad)
jne
sub
mov
or
and
icebp
fs
sti
loope
sbb
pop
jmp
rol
cmp
enter
(bad)
pop
out
outs
pop
or
sub
sbb
dec
outs
ret
mov
aam
pop
push
fisttp
xchg
push
dec
xchg
dec
dec
cmc
nop
rcl
mov
sub
sbb
sbb
in
cmc
out
adc
or
add
mov
scas
add
adc
adc
pop
inc
ins
jle
xor
movs
sbb
retf
(bad)
fcomp
in
jbe
or
mov
or
jbe
inc
sub
test
(bad)
std
test
cmps
ds
mov
xor
xor
jae
push
popf
popa
loop
push
and
mov
out
rcr
in
xlat
mov
add
add
(bad)
sar
xchg
mov
mov
in
or
fisub
adc
cwde
je
xor
(bad)
aam
and
sbb
aas
cmps
xchg
push
cmp
push
lahf
lods
lds
int3
popf
repnz
adc
js
sbb
gs
jnp
sbb
lahf
lea
xor
pop
push
fwait
sub
sbb
or
or
push
xor
popf
or
xor
loopne
jmp
(bad)
xor
int3
mov
cli
lods
inc
leavew
iret
sub
or
aam
ja
add
(bad)
cli
std
xor
cdq
test
lahf
out
push
div
scas
arpl
into
je
jo
sbb
xchg
jbe
jno
sbb
movs
jo
(bad)
(bad)
ret
rol
add
sbb
popf
int
push
shr
nop
scas
push
test
sbb
je
xchg
sahf
mov
jno
loopne
adc
mov
leave
lock
popf
push
add
add
call
jne
xor
mov
mov
mov
push
xchg
bound
adc
loop
scas
pushf
push
popf
xchg
nop
xchg
push
clc
test
fistp
outs
mov
adc
mov
or
or
out
mov
inc
icebp
dec
test
lea
inc
shr
shr
sbb
sti
jae
jb
xchg
jns
ret
inc
pop
cmp
or
push
or
push
mov
gs
xlat
inc
xchg
push
jp
xchg
jmp
out
sti
or
jo
call
or
cmps
rcr
add
test
xor
repnz
mov
or
xchg
mov
mov
mov
jecxz
aad
rcl
(bad)
push
aam
jns
into
inc
mov
ins
clc
jg
aas
cmp
aaa
cmps
scas
xchg
dec
xlat
sar
out
sbb
add
jbe
std
sar
mov
sbb
je
jg
in
lods
push
arpl
mov
(bad)
xor
jne
inc
sbb
or
mov
xchg
cs
mov
xchg
cs
cs
adc
retf
mov
xchg
jnp
outs
jo
hlt
mov
xor
sbb
adc
daa
test
fiadd
test
xor
clc
mov
jb
xchg
cmps
xor
arpl
fs
js
jae
xchg
cmp
dec
add
add
movs
cmp
adc
out
into
dec
dec
ja
iret
xchg
leave
(bad)
pop
(bad)
dec
fld
int
movs
mov
dec
fmul
test
imul
aad
pushf
pop
pop
(bad)
imul
inc
lds
mov
add
xor
nop
xchg
call
mov
inc
cmp
dec
mov
adc
jnp
jl
mov
mov
and
push
adc
jg
jg
mov
dec
cmp
sbb
cld
popa
sbb
fld
test
jecxz
into
jp
ror
fwait
sub
movs
sbb
inc
push
sbb
cmovno
hlt
inc
int
cdq
xor
adc
int
adc
popa
sbb
in
or
test
xor
jne
retf
and
add
mov
mov
push
pop
into
cli
je
addr16
cdq
pop
jmp
xor
fst
hlt
xor
mov
and
add
popa
into
xchg
sub
repnz
mov
cld
leave
(bad)
out
xchg
js
sbb
jle
in
xor
add
and
jnp
xchg
lods
imul
dec
ret
loop
xchg
jg
push
mov
push
mov
mov
inc
sahf
in
icebp
push
jmp
out
data16
adc
mov
fadd
fimul
push
pop
sahf
mov
adc
in
jecxz
rcl
ret
cmp
popf
mov
push
outs
sti
ret
(bad)
iret
aaa
jge
and
push
sbb
jmp
mov
add
adc
jbe
mov
out
dec
xchg
movs
adc
ret
push
inc
xchg
iret
into
fs
call
xor
sub
call
mov
mov
test
pop
pop
(bad)
push
retf
adc
cwde
aad
mov
mov
fwait
add
mov
clc
popa
(bad)
push
daa
int3
pop
inc
xlat
jp
xchg
fild
imul
mov
in
and
and
call
les
fs
mov
mov
fs
ss
pop
mov
mov
add
aas
ret
jb
hlt
push
cmp
push
cmps
push
fbld
xchg
js
addr16
adc
inc
dec
add
push
mov
mov
leave
inc
sti
in
in
shl
adc
not
add
(bad)
push
jg
adc
sub
or
mov
ins
sbb
sbb
hlt
or
ins
or
dec
es
arpl
jb
das
fld
in
outs
inc
cmp
mov
mov
daa
test
xor
sbb
and
dec
cmp
jne
in
and
adc
test
inc
movs
iret
retf
movs
mov
cld
push
jl
imul
hlt
test
fadd
test
addr16
fstp
mov
icebp
(bad)
pop
adc
mov
sub
movs
addr16
hlt
push
sbb
inc
mov
push
leave
(bad)
cwde
inc
mov
mov
aas
or
sbb
test
push
add
jmp
sub
sub
mov
fidivr
push
std
push
push
mov
xor
push
xor
(bad)
cmps
xchg
xor
pop
enter
pop
mov
mov
sub
(bad)
mov
and
test
mov
enter
xor
xor
(bad)
and
jno
rcl
ja
mov
enter
lea
pusha
repz
jmp
push
jmp
test
jae
in
sbb
popf
pop
inc
adc
xchg
or
push
aad
lahf
cmp
je
pop
and
jns
mov
shl
icebp
xor
out
inc
and
fwait
inc
out
jae
cmp
adc
and
js
xchg
xchg
and
mov
aam
fcomp
pop
push
xor
jno
rcl
addr16
outs
sbb
test
dec
test
jmp
inc
retf
mov
xor
stos
jo
sub
loopne
movs
inc
and
mov
sub
mov
gs
lods
mov
outs
iret
ret
add
sbb
xor
aad
mov
mov
mov
mov
xchg
fidivr
lahf
test
adc
xor
jo
mov
cmp
pusha
mov
pop
cdq
jmp
mov
test
mov
mov
fimul
jp
hlt
push
jp
mov
mov
test
add
std
lahf
leave
clc
xor
and
adc
pop
dec
jecxz
nop
out
iret
jb
fsubr
push
aas
jbe
movs
ins
ret
aam
div
xchg
mov
sbb
retf
cmp
inc
imul
mov
xor
fs
xchg
mov
inc
xlat
pop
neg
or
jg
repz
and
out
pop
lods
in
inc
mov
cmp
(bad)
scas
jmp
adc
test
add
outs
sub
dec
push
arpl
ins
test
inc
jl
push
cmp
add
es
retf
sub
cli
fmulp
addr16
push
add
mov
jmp
dec
lahf
mov
ret
sub
dec
fsubr
cli
sub
xor
psrad
jns
ror
push
sub
scas
mov
and
nop
dec
xor
pop
sub
std
sub
dec
push
xchg
mov
ins
stc
fsubr
xchg
sub
cmp
les
or
aas
int3
mov
aad
call
inc
ds
test
push
mov
dec
xchg
mov
jne
pop
repnz
cld
lods
jb
call
mov
xchg
push
dec
and
cmp
push
lods
pop
mov
(bad)
adc
or
mov
test
pop
lahf
or
and
ins
and
loope
out
neg
xor
test
or
push
in
xor
data16
hlt
test
inc
repnz
jo
or
in
and
sub
dec
popa
fsubr
sub
xchg
mov
scas
mov
inc
repz
je
sbb
xchg
fcom
fsubr
mov
pop
add
inc
adc
addr16
jns
test
or
xor
mov
cmc
scas
mov
test
lea
addr16
bswap
sub
jne
ins
mov
movs
sahf
push
mov
sahf
cmp
pop
stc
inc
(bad)
arpl
addr16
dec
mov
pop
fcomp
mov
data16
mov
dec
mov
mov
iret
mov
gs
dec
ret
mov
ins
not
adc
cmp
addr16
sub
movs
xor
sbb
cmp
mov
test
les
xchg
dec
adc
je
mov
sub
cmp
arpl
dec
das
mov
clc
jae
xlat
mov
dec
push
mov
clc
mov
fwait
jnp
imul
aaa
fadd
adc
push
mov
cmps
jnp
lds
mov
fsub
retf
mov
pop
pop
and
pushf
jg
and
nop
sar
push
ins
xor
mov
in
jno
lahf
inc
mov
mov
sar
xchg
xchg
jmp
hlt
jnp
ss
mov
retf
mov
shl
sbb
sub
or
lods
out
imul
push
call
imul
ror
pop
out
mov
jp
dec
cmp
mov
cmp
lods
push
ret
stc
loopne
stos
xchg
retf
pop
mov
sbb
mov
ret
out
fild
xor
xor
lods
fs
pop
aas
lods
addr16
sbb
fnstsw
fidivr
inc
xlat
add
daa
movs
cmp
xchg
out
push
push
dec
push
sbb
cmp
leave
fidivr
ja
push
aam
dec
cmp
cli
dec
imul
mov
xchg
mov
push
scas
bound
int3
outs
(bad)
sti
push
push
enter
in
jmp
pop
mov
(bad)
mov
repnz
lea
mov
mov
mov
dec
jmp
stos
repz
add
dec
xor
test
push
in
or
jl
mov
data16
aas
jo
fiadd
sub
lock
pop
scas
sti
sbb
add
mov
jl
pop
mov
stos
add
adc
ds
cmps
ins
push
mov
jmp
cmp
rol
sub
outs
ret
mov
aad
add
mov
mov
and
loope
adc
adc
xor
test
imul
sub
call
dec
push
loope
xor
xchg
cmps
mov
add
mov
mov
pop
cmp
fld
pushf
jne
scas
pop
sub
in
sbb
pop
(bad)
sti
popa
lea
pop
sar
jmp
sub
(bad)
clc
mov
xor
ret
gs
pusha
add
xor
jp
imul
inc
sub
dec
mov
fs
pusha
je
pop
jb
fnstcw
jge
sbb
icebp
push
inc
sbb
or
daa
sbb
jno
fiadd
stc
aas
int
pusha
push
xchg
xor
scas
rcl
ret
lock
jb
mov
dec
or
push
inc
retf
add
cmps
(bad)
push
adc
iret
mov
xlat
hlt
mov
aam
pop
inc
sbb
sub
or
ds
jecxz
mov
mov
call
xchg
mov
or
jne
(bad)
sahf
jmp
or
dec
mov
(bad)
pop
or
push
jns
fs
fdiv
xchg
mov
out
pop
scas
mov
add
dec
push
lods
cmp
cld
in
pop
xchg
data16
mov
fwait
inc
ret
in
ror
fwait
jge
lea
and
into
ret
std
pop
pushf
outs
xor
mov
pushf
jb
js
in
xchg
(bad)
pushf
push
mov
loope
jae
push
sbb
aaa
mov
push
mov
or
jl
into
arpl
cmps
adc
push
push
jmp
pop
xor
push
popaw
pop
mov
sub
pop
xor
aad
cmp
sbb
inc
pop
sbb
mov
test
shr
or
scas
inc
cmp
in
mov
int3
cli
clc
pop
(bad)
(bad)
out
pop
outs
mov
fld
push
xchg
scas
jne
loopne
and
and
not
mov
and
mov
cli
hlt
and
dec
shl
push
call
mov
jmp
pop
std
fldcw
add
sbb
scas
inc
sbb
cmp
or
jbe
out
pop
jae
jg
fmul
jl
call
mov
call
xor
mov
cwde
stos
jl
in
cmps
and
in
fwait
cmps
dec
arpl
cdq
adc
pop
out
adc
imul
mov
loopne
out
int
scas
xchg
jns
and
pop
in
lea
rcl
hlt
arpl
push
jb
loopne
fucomi
cmp
mov
(bad)
in
in
add
imul
adc
addr16
mov
leave
jmp
mov
dec
or
adc
enter
in
fs
enter
or
test
(bad)
pushw
pop
pusha
test
add
cmp
lock
popf
add
mov
sub
cdq
pop
and
sub
sti
in
shr
iret
mov
call
repnz
sahf
lods
jae
rcl
fs
pushf
mov
mov
ror
adc
and
mov
or
jns
cmps
sti
jecxz
mov
test
cmps
inc
cwde
pop
mov
xor
mov
shl
cmp
out
pop
dec
(bad)
xor
push
lods
sub
or
inc
xchg
movs
dec
xor
push
jns
iret
lock
pop
iret
xchg
shl
push
out
call
mov
fucomip
cld
sbb
popf
pop
jg
dec
retf
daa
pop
(bad)
iret
in
or
mov
xor
add
or
push
nop
retf
popf
mov
add
dec
xchg
mov
adc
pop
adc
push
inc
std
or
mov
mov
cli
sbb
dec
xchg
pushf
pcmpeqd
adc
(bad)
jmp
retf
repnz
(bad)
out
test
(bad)
dec
cmps
mov
retf
cmp
or
xor
add
cmps
jne
dec
xor
arpl
add
cmps
mov
sbb
fs
imul
mov
fs
in
cmps
adc
add
cmp
inc
jb
xor
inc
in
push
aas
or
push
cmp
jl
add
mov
pop
shl
lods
adc
sbb
and
add
and
call
fidiv
sbb
movs
jg
ds
cmp
jnp
out
scas
ret
or
mov
mul
sbb
mov
(bad)
fisttp
outs
adc
inc
pop
inc
push
fwait
cmp
or
sub
pop
jmp
gs
add
stos
add
das
jne
add
dec
movs
in
cmc
inc
pop
mov
mov
cdq
test
push
mov
ret
fidiv
repz
cmp
sub
in
out
push
and
jne
and
call
and
adc
mov
mov
lods
adc
add
sub
mov
sbb
ds
fcmovb
jb
ja
mov
and
or
mov
addr16
stos
ja
dec
and
mov
inc
mov
and
test
rol
or
cwde
je
arpl
push
ja
sub
cli
cmc
clc
inc
repnz
inc
push
sub
fbstp
pop
adc
fmul
sub
adc
es
and
jp
les
lea
out
cmp
or
dec
xchg
clc
jns
mov
xchg
mov
daa
xor
sbb
xor
mov
fstp
std
inc
hlt
sub
fiadd
jmp
lock
pop
inc
stos
repnz
xor
aaa
sbb
jmp
or
lahf
pop
add
jnp
cmp
mov
fist
pop
xchg
int3
int3
pop
fiadd
push
sub
cmc
clc
xor
add
adc
pop
or
and
iret
(bad)
or
xor
or
retf
hlt
call
cld
fnstcw
pop
or
fld
bound
jb
lods
mov
cld
and
xchg
jmp
xor
das
lock
sbb
sbb
sbb
or
aad
add
shr
add
add
scas
sub
mov
mov
ficomp
repz
test
pop
call
dec
shr
mov
xchg
clc
out
das
ret
inc
xor
inc
aaa
or
push
add
xor
js
aaa
jmp
out
nop
xchg
adc
jnp
fst
int3
lods
pop
inc
jns
fwait
movs
sub
pop
add
ins
dec
jnp
mov
mov
push
cmps
ins
sub
mov
aam
aam
inc
mov
inc
outs
mov
pop
pop
jnp
push
mov
push
js
xchg
fbld
cld
pusha
in
mov
leave
adc
sar
test
(bad)
jcxz
sbb
data16
pop
mov
sbb
lock
add
add
cli
sti
cmp
adc
inc
adc
mov
push
jb
push
icebp
cmps
call
cs
xor
xlat
xor
mov
pop
inc
popf
jl
ret
movs
sub
jl
rcr
or
mov
out
adc
arpl
hlt
fild
pop
push
xchg
inc
pop
jne
cli
or
cmps
add
ficom
rcr
xor
mov
loopne
scas
push
adc
into
jne
xor
jae
pop
jle
xchg
jnp
push
test
push
pop
ss
add
pop
rcr
leave
fucomi
push
xchg
xchg
inc
inc
push
jle
out
imul
jae
or
adc
sbb
push
addr16
es
test
or
inc
cmps
clc
fdivr
xchg
aaa
and
xor
sbb
dec
mov
jg
fst
ins
ins
xchg
add
call
out
sahf
or
clc
xor
cmps
call
cmps
jnp
or
fcom
xchg
mov
ret
cmp
dec
stos
pop
leave
(bad)
mov
in
mov
outs
and
and
pop
pushf
(bad)
xchg
xchg
push
xchg
out
in
scas
pop
dec
clc
ds
xchg
movs
lea
out
leave
cmc
or
adc
imul
inc
jl
jns
popf
cwde
sahf
push
push
pop
cld
xchg
adc
imul
and
scas
push
push
jno
xlat
jmp
add
inc
fmulp
mov
push
loope
mov
test
jmp
stos
mov
lea
cmp
cli
test
inc
pop
sub
sbb
xor
mov
test
out
mov
sbb
sar
mov
jge
inc
nop
cmp
fidivr
and
mov
fwait
(bad)
or
ss
pop
cdq
inc
cmp
mov
xchg
nop
inc
push
pusha
stc
imul
jge
xor
add
ror
cmps
icebp
mov
push
adc
xchg
imul
xchg
jg
inc
outs
sub
or
or
dec
lock
mov
not
and
fmul
mov
add
test
scas
add
mov
mov
sbb
out
ins
inc
ds
addr16
jne
call
in
int3
cmove
xchg
js
stos
dec
shl
aaa
in
mov
cmc
dec
ja
push
jno
pop
cwde
xchg
pop
cmp
call
mov
pop
dec
in
add
xchg
sbb
mov
fsubp
xlat
test
inc
push
sub
or
sub
das
lock
xchg
jae
xor
stos
loopne
add
mov
hlt
les
dec
pop
sbb
cmp
dec
frstor
and
es
rol
outs
cmp
lods
pop
inc
xchg
and
or
daa
inc
(bad)
scas
clc
inc
and
add
add
cld
dec
mov
push
dec
(bad)
mov
dec
cli
js
push
push
rcl
inc
cmp
cmp
pop
lahf
jp
daa
xchg
gs
inc
pop
pop
daa
loop
pop
jmp
jg
loopne
outs
pop
add
sti
fidivr
or
int
adc
cmp
xor
bound
dec
sbb
imul
addr16
neg
sub
sbb
xor
push
push
xchg
xor
in
cs
sub
into
nop
mov
adc
cli
enter
(bad)
dec
addr16
retf
retf
mov
and
cmp
icebp
jo
jne
enter
(bad)
int3
lahf
pop
sub
adc
sub
ds
pushf
sbb
iret
mov
jns
sar
fadd
cld
ret
mov
sbb
cmp
xor
leave
cdq
mov
xchg
cdq
jg
cmp
shl
jmp
std
xor
push
jmp
ret
lods
mov
fcmovnbe
imul
cmps
push
clc
xchg
cdq
or
rol
or
out
test
test
mov
pop
cmp
repz
mov
and
dec
scas
mov
or
inc
pop
dec
cmps
pop
cmp
push
xor
arpl
int3
cs
or
je
ja
dec
neg
cmp
push
xor
movs
(bad)
jns
cmp
call
cmp
fnsetpm(287
push
out
cwde
ret
mov
cmp
bound
rcr
pop
sbb
adc
(bad)
pop
fs
pop
jge
les
push
loopne
sub
jo
ins
sub
pop
pop
cmp
mov
jg
mov
sbb
sub
lds
sub
or
(bad)
cmp
dec
lea
mov
mov
outs
or
mov
pop
pop
jge
stc
out
mov
xchg
stc
jl
leave
movs
jp
in
push
shr
and
mov
stc
sub
popa
in
jl
into
in
cmp
inc
ds
sbb
sar
sbb
xchg
movs
jmp
push
push
xchg
test
jmp
iret
jecxz
or
xor
and
mov
lock
int
lods
inc
jmp
fdivr
and
push
les
fist
rcl
adc
aas
xor
mov
call
xchg
rcl
out
jge
out
cmps
dec
pop
jbe
lds
xor
cmp
js
pop
aas
and
push
inc
and
or
push
jae
pop
push
mov
and
push
mov
cmc
fdivr
push
add
js
cmps
jle
stos
adc
repnz
fwait
lahf
xor
adc
push
ins
push
sub
rcr
xchg
mov
xchg
ins
inc
adc
xchg
fdivr
dec
sbb
push
push
sub
cmp
mov
fadd
adc
mov
or
aad
std
fmul
(bad)
jmp
xor
push
and
add
adc
inc
rcr
mov
sti
push
mov
aaa
or
mov
adc
mov
or
bound
pop
test
jo
mov
mov
mov
test
and
iret
sbb
pop
dec
jg
rcr
jge
add
mov
xchg
push
imul
nop
cli
int3
or
mov
pushf
jle
test
mov
dec
cmc
dec
mov
mov
xlat
fldenv
xchg
je
mov
scas
ja
retf
in
xor
in
daa
mov
xchg
sahf
daa
ficom
outs
pop
cmp
inc
repz
adc
movs
iret
xchg
arpl
mov
sub
inc
mov
mov
mov
add
inc
push
xchg
xchg
dec
mov
vsqrtss
jnp
in
mov
xor
fiadd
jae
lock
into
ins
fidivr
ret
aas
outs
fs
dec
in
and
jne
aas
jmp
xor
(bad)
mov
mov
push
mov
xchg
mov
dec
pop
cmps
mov
pusha
push
call
inc
dec
mov
or
mov
test
jl
sbb
mov
mov
inc
(bad)
daa
jo
aas
hlt
aas
in
sbb
mov
hlt
xchg
adc
xor
mov
inc
mov
sbb
inc
call
mov
jne
iret
jnp
frstor
adc
or
in
add
mov
mov
int
jecxz
mov
lock
pop
stos
xor
and
fwait
adc
cmp
(bad)
push
ins
idiv
jp
rcr
push
xor
loop
jb
fwait
add
xor
add
push
dec
pop
ins
enter
retf
lock
pop
push
sar
add
js
inc
mov
mov
div
xchg
aaa
pop
int3
add
imul
leave
add
sbb
pop
cmp
jecxz
xchg
or
bnd
enter
test
jmp
pop
repz
xchg
inc
in
or
pop
test
xor
mov
mov
or
loop
mov
fcmovbe
ja
ret
mov
pop
mov
sti
cmp
loop
shl
sbb
rcr
mov
inc
not
adc
sub
fs
cmp
pop
movs
push
jo
rcl
sub
inc
inc
mov
(bad)
mov
fcmovnb
cld
into
(bad)
jp
push
sub
push
enter
fadd
(bad)
push
mov
inc
rcl
lock
inc
inc
lds
sahf
push
neg
dec
adc
hlt
leave
xor
adc
pop
mov
mov
dec
inc
fcom
sbb
sbb
cmp
lods
jl
arpl
pop
lock
scas
add
(bad)
gs
clc
dec
inc
cmps
dec
cs
mov
cmc
push
jl
xchg
push
dec
inc
mov
adc
js
addr16
fwait
aad
mov
ins
ins
rcl
nop
(bad)
jo
push
push
rcr
jg
shr
push
add
shl
bound
sub
jle
pop
shr
gs
push
mov
std
mov
std
adc
test
(bad)
aad
jge
or
loopne
jnp
jg
lods
mov
cmp
pop
xchg
je
and
cwde
cmp
jecxz
add
push
or
mov
pop
sub
adc
inc
push
fnstsw
mov
pusha
lods
pop
jnp
movs
addr16
inc
jg
ret
push
jle
daa
int3
ret
push
mov
sub
ja
or
fs
mov
mov
shr
cmps
sbb
test
push
mov
or
and
adc
jno
or
nop
xor
mov
pop
cdq
outs
mov
cmps
sub
add
iret
sub
cmp
mov
retf
xchg
jmp
and
pop
push
sub
push
or
xchg
push
add
sbb
nop
leave
(bad)
dec
pusha
adc
(bad)
push
add
out
(bad)
cs
ja
jno
arpl
imul
aaa
popf
xchg
adc
fwait
inc
lea
push
out
and
cmp
and
fsub
inc
icebp
inc
loopne
(bad)
pop
and
pop
mov
mov
xchg
pop
gs
enter
imul
scas
cdq
xor
or
dec
cmps
and
push
pop
bound
lods
dec
xor
shr
or
stos
sahf
cmp
data16
pop
mov
lods
jbe
push
dec
pop
mov
popa
sbb
and
or
xchg
popa
mov
and
fild
cmp
test
and
int3
es
(bad)
pop
sbb
sub
pop
push
push
mov
and
fnsave
mov
dec
retf
out
sub
daa
push
into
push
xor
jo
adc
popf
ss
or
xor
push
or
xchg
dec
dec
cdq
xchg
js
fcmovb
test
in
add
sbb
jecxz
nop
mov
lods
inc
mov
xchg
pop
es
popa
cwde
inc
sti
mov
addr16
mov
shl
pop
dec
pop
mov
push
pusha
outs
sub
leave
js
scas
sbb
mov
pop
cld
cld
and
mov
and
int3
push
in
test
add
push
or
leave
push
popf
enter
xor
xchg
sbb
inc
jmp
mov
cmp
cmp
cmp
inc
add
push
enter
jae
adc
movs
dec
leave
inc
popa
dec
adc
sbb
and
enter
jns
loop
sahf
mov
pop
les
fst
(bad)
push
in
jo
adc
adc
xchg
add
(bad)
lea
jb
jle
pop
mov
or
push
cmc
xor
enter
adc
adc
mov
jae
outs
sar
sbb
(bad)
jb
add
movs
repz
dec
out
das
repz
adc
push
xchg
push
lods
pop
push
fcom
pop
jno
xor
jmp
mov
xor
and
mov
xor
adc
mov
inc
(bad)
pop
mov
push
sub
js
inc
retf
scas
dec
out
cmp
add
fisubr
sti
int3
ret
add
test
or
xor
jae
push
cmp
jl
outs
add
xor
ss
hlt
in
and
sub
fstp
arpl
xchg
movs
(bad)
sbb
adc
add
das
xor
or
jg
pop
pushf
sbb
scas
mov
inc
hlt
lds
not
repnz
fisttp
jl
scas
das
mov
xor
jecxz
sub
xchg
icebp
pop
inc
xor
dec
pop
loopne
mov
adc
test
push
cmp
cmp
mov
jp
cdq
outs
push
inc
mov
ins
repnz
scas
push
(bad)
jns
cs
imul
inc
shr
lock
xlat
xlat
arpl
dec
aam
or
mov
daa
(bad)
jp
jno
push
aaa
jo
push
aas
cmp
pop
daa
retf
sub
test
in
in
aaa
push
jno
sbb
mov
fdiv
jl
loope
dec
dec
xchg
out
sbb
inc
iret
mov
pop
div
div
(bad)
pop
call
js
mov
gs
mov
lods
pop
stc
push
mov
jl
clc
cmp
mov
bound
or
stos
daa
sbb
(bad)
loopne
mov
fwait
hlt
xchg
sbb
movs
add
xchg
imul
sbb
fst
push
inc
loope
add
retf
push
xchg
xchg
jb
cld
add
repz
movs
sub
sahf
mov
data16
pop
push
inc
sbb
test
and
cs
outs
aas
pop
xchg
adc
dec
shr
stos
cmp
sbb
add
addr16
pop
daa
cmc
mov
out
lock
ficom
pop
jnp
xor
lods
je
mov
sub
mov
mov
or
and
push
jmp
cmp
fld
cmp
call
dec
mov
out
test
adc
xchg
jmp
jo
mov
sub
sbb
ins
and
xor
(bad)
xchg
adc
jp
push
mov
pop
(bad)
xor
xor
cmp
icebp
lds
neg
jae
out
fist
add
dec
push
sbb
loope
loop
dec
retf
not
lods
add
jbe
cmp
dec
xchg
test
pushf
enter
je
js
js
pop
in
sbb
out
mov
jmp
xchg
inc
in
in
sbb
inc
and
dec
xchg
jp
ins
or
cli
cmp
xchg
ror
leave
add
(bad)
leave
sti
mov
inc
add
scas
call
mov
mov
lock
imul
repz
sbb
mul
fs
jbe
popa
push
(bad)
cmc
bound
add
pop
inc
xor
repnz
mov
std
in
cs
or
jo
mov
mov
aaa
mov
sub
js
ja
jl
and
dec
inc
cmc
xor
xchg
mov
iret
std
fdivr
jg
jl
cmc
pop
das
popa
jmp
push
dec
adc
or
mov
dec
dec
cmps
das
jp
cmps
out
retf
xor
lods
pusha
dec
cwde
lods
sbb
call
and
ins
mov
hlt
and
into
es
mov
popa
pop
dec
and
cld
mov
rcr
push
fst
rcl
(bad)
enter
fstp
outs
(bad)
out
sbb
push
addr16
icebp
adc
pop
rcr
outs
aad
movs
mov
push
mov
pop
push
or
(bad)
jg
in
sbb
jge
or
jg
add
arpl
(bad)
ins
addr16
adc
addr16
(bad)
call
push
xor
das
inc
cli
nop
fidivr
inc
dec
(bad)
jo
jae
xchg
dec
cmps
pushf
adc
sbb
mov
mov
test
adc
xchg
inc
test
ss
xchg
addr16
or
int3
pop
dec
mov
imul
jo
lods
cwde
popa
jmp
loope
xchg
add
and
pop
adc
ret
jbe
and
xor
mov
dec
add
mov
lods
out
cdq
(bad)
inc
xchg
xor
jnp
push
pop
push
das
sbb
clc
and
adc
ds
out
inc
cmc
loopne
fdivr
xchg
mov
cmp
rcl
cmc
ret
add
jg
mov
mov
sti
pop
add
mov
aad
xchg
jmp
aas
push
xchg
push
fldenv
inc
inc
out
test
mov
nop
push
lock
lods
fcos
inc
fild
fs
mov
lahf
loope
mov
dec
add
jl
and
cmps
aaa
call
xchg
into
mov
mov
scas
sub
daa
push
dec
stc
cli
leave
call
cli
in
shr
outs
sub
add
test
(bad)
shl
jno
mov
mov
mov
dec
std
adc
inc
xchg
ja
dec
stos
es
push
test
pop
loop
jbe
call
and
adc
hlt
lea
mov
in
sub
push
mov
pop
push
push
scas
mov
sbb
or
loope
scas
xabort
shr
dec
and
sub
pop
test
pop
xchg
xor
adc
shl
outs
push
cmp
jo
add
and
leave
shr
jne
test
push
sub
cli
cmp
lock
fs
jmp
cs
sub
jb
mov
cmp
add
fld
call
fsubr
jnp
into
add
dec
or
push
call
xchg
jo
inc
sbb
lock
mov
adc
jp
(bad)
ja
or
dec
movs
inc
(bad)
daa
xor
dec
pop
loop
(bad)
dec
mov
and
jo
and
inc
lds
repnz
adc
stos
jbe
fstp
jge
ror
outs
mov
iret
mov
icebp
fsub
test
ret
or
popa
ss
fimul
loop
imul
retf
or
lods
sbb
add
xor
lea
shr
or
or
mov
sbb
(bad)
shl
jmp
dec
mov
sti
movs
retf
std
mov
push
repz
mov
mov
xchg
or
sbb
cmp
sbb
(bad)
xor
test
lods
mov
inc
pop
pusha
sub
xlat
sub
cli
and
cmps
loopne
push
outs
rcr
cmps
push
cld
or
mov
lock
mov
inc
mov
mov
jmp
enter
addr16
or
in
test
inc
ins
cs
sub
lods
dec
jb
mov
pop
pop
mov
jecxz
loopne
pop
pop
call
mov
pop
mov
and
or
movs
jmp
mov
push
jno
ins
mov
add
jecxz
add
pop
and
push
and
pop
retf
je
or
cwde
jmp
xchg
mov
stos
sbb
push
test
(bad)
pusha
jno
xor
aas
or
jne
outs
xor
outs
dec
in
popa
outs
call
fisttp
jae
or
fsubr
in
lock
daa
in
repnz
push
sbb
mov
cmp
lods
test
retf
jae
(bad)
mov
jp
fs
into
jae
jle
js
ret
or
push
sbb
cwde
clc
mov
popa
pcmpeqw
hlt
mov
stc
jl
pusha
push
and
push
lods
loop
pop
xor
cmp
int
data16
mov
fsubr
jmp
cmp
mov
push
ds
test
sahf
and
aam
jg
sub
sub
adc
sub
sbb
mov
int3
pop
pusha
and
jne
ret
sub
mov
xchg
pop
test
into
mov
aad
inc
push
mov
les
retf
mov
rcl
hlt
out
pop
xchg
sahf
or
loop
clc
or
push
into
(bad)
lock
bound
cmp
scas
pusha
sub
scas
xchg
dec
fimul
shr
inc
cdq
sbb
std
xchg
mov
or
pusha
or
adc
jae
popa
push
pop
xchg
pop
test
sbb
jmp
cmps
mov
jns
sub
out
addr16
aad
add
ja
fild
cmp
inc
fwait
jae
jp
xchg
jae
movs
jecxz
pop
sbb
xlat
jge
outs
sbb
stc
mov
push
fs
adc
mov
ret
ins
js
add
jecxz
pop
das
loop
pusha
push
fnstcw
test
mov
cmp
movs
call
dec
lahf
jp
mov
fwait
cmc
in
add
pusha
mov
jl
push
leave
rcl
mov
aas
dec
pushf
inc
xchg
stos
test
sbb
ss
ja
cmp
xchg
iret
dec
fidiv
lahf
shl
cmp
cmp
je
inc
mov
pop
movs
lahf
int3
aas
fcomp
push
mov
xchg
lods
sbb
int
popa
xchg
push
clc
cmp
xor
repz
in
mov
xchg
cld
mul
xchg
stc
sub
mov
dec
int
push
pop
jae
dec
scas
push
and
aaa
jl
in
and
in
inc
repz
outs
xchg
sbb
mov
lahf
push
(bad)
cld
aam
adc
jbe
cwde
enter
je
mov
sub
jle
and
test
xchg
push
push
sbb
sbb
push
sub
xor
call
adc
lods
retf
cmp
idiv
add
xor
hlt
sti
aam
push
or
aad
rcl
mov
mov
pushf
mov
loopne
ror
or
out
inc
mov
iret
add
xor
ftst
fwait
xchg
sub
sti
pop
outs
(bad)
adc
xor
idiv
pop
leave
mov
jl
mov
and
sub
movs
les
(bad)
addr16
add
jle
mov
or
in
and
cmc
fs
fimul
push
gs
call
jmp
(bad)
pusha
call
ins
adc
sbb
loope
mov
lods
rcr
in
xlat
loop
lea
xlat
xor
mov
cwde
aam
adc
cs
cli
adc
mov
sub
or
and
or
(bad)
addr16
nop
sbb
into
sbb
js
aas
fcomp
ins
push
outs
aas
and
jl
mov
(bad)
xchg
repnz
ins
idiv
and
cld
mov
pop
out
pusha
and
loope
sbb
shr
mov
adc
shl
jnp
push
sbb
and
sar
retf
cmp
pop
jmp
xchg
inc
cld
adc
je
into
ins
jmp
mov
jmp
mov
stc
adc
xor
sub
push
(bad)
leave
or
dec
leave
and
cmp
sub
fimul
sbb
mov
ss
loop
sti
push
stos
mov
xchg
js
pop
cmp
arpl
call
retf
rcr
movs
pop
dec
or
xor
ja
or
(bad)
call
mov
mov
enter
jmp
loope
mov
dec
mov
aad
push
(bad)
mov
mov
mov
xchg
and
lock
bound
mov
call
dec
push
mov
neg
(bad)
stos
call
mov
jmp
into
iret
leave
fucomi
sbb
and
fchs
sbb
lds
(bad)
xchg
or
xor
jmp
push
pop
adc
jecxz
aaa
xor
popf
jno
push
push
(bad)
sar
aaa
arpl
xlat
cmp
xchg
jp
call
outs
pop
pxor
or
xor
pop
stos
ficom
cmp
or
add
cmp
(bad)
mov
sub
fnsave
push
sbb
fs
dec
adc
mov
sbb
mov
pop
outs
leave
fdiv
pushf
ja
add
cmps
retf
es
cmps
xchg
ins
test
daa
fcmovnb
push
xor
imul
push
jecxz
out
jne
adc
call
cmp
daa
pop
mov
push
jns
dec
call
in
mov
dec
xor
xor
pusha
in
mov
sbb
sub
jne
xor
mov
(bad)
sbb
and
fild
sbb
mov
dec
push
adc
xchg
cmp
xchg
test
shr
push
push
push
push
fdivr
or
out
ins
mov
push
movs
fcomp
ss
or
mov
sub
loop
pop
inc
out
movs
xchg
sub
pop
fiadd
loope
mov
int3
jne
push
js
lea
fidiv
pusha
dec
sbb
or
pop
adc
dec
or
adc
mov
ins
je
lds
sahf
cmp
pop
test
mov
ror
je
dec
int3
popa
xchg
adc
xor
mov
in
xchg
jmp
mov
daa
call
push
int3
mov
iret
loope
mov
jg
fadd
mov
aam
mov
jns
xchg
cmp
lea
pop
popa
sub
stos
xchg
inc
xlat
jo
jp
js
adc
push
call
test
fwait
rcl
adc
adc
and
fwait
cmp
retf
mov
push
(bad)
call
or
sti
or
addr16
ficom
in
and
test
nop
adc
mov
dec
retf
sahf
ja
aam
and
int3
sub
xchg
adc
adc
xchg
fxch
in
test
and
add
fld
sub
out
loope
dec
mov
ret
inc
jns
jb
cmp
mov
(bad)
(bad)
mov
or
es
int3
hlt
es
xor
and
cmovle
out
push
pop
sbb
mov
sahf
or
les
add
fs
ret
enter
jns
xchg
mov
adc
fs
ins
cmp
dec
cmp
(bad)
ret
push
cld
sbb
inc
jae
inc
mov
cwde
mov
in
inc
pushf
gs
call
xor
popf
inc
fistp
mov
test
(bad)
std
ins
pusha
stos
stos
ret
push
fild
or
xchg
mov
dec
inc
xor
push
pop
pushf
stc
retf
mov
sbb
mov
loope
cmps
in
sub
xor
jae
int
aas
ins
test
dec
jmp
pop
fwait
jecxz
rcr
adc
(bad)
jnp
push
cmc
xor
cmc
scas
scas
test
retf
mov
jae
adc
leave
cmps
aam
not
test
add
shl
cwde
fwait
(bad)
sub
nop
jmp
pusha
xchg
test
mov
jmp
repz
out
mov
mov
(bad)
xor
out
jmp
sti
dec
daa
xchg
pusha
xchg
and
pop
cmps
xor
out
jbe
xchg
cwde
inc
dec
addr16
inc
(bad)
xchg
mov
mov
push
das
mov
into
stc
movs
jne
sub
dec
lahf
sbb
jnp
ret
fcomp
das
and
cwde
ja
rcr
pop
jl
mov
loope
mov
mov
imul
js
adc
inc
mov
pop
xchg
cmovae
scas
test
and
mov
inc
jae
aad
mov
in
sub
call
cmp
ins
mov
cli
add
popa
loope
xchg
cld
aam
or
in
adc
jl
mov
mov
cmc
into
push
sub
icebp
cmp
sub
jmp
add
outs
mov
arpl
fild
jbe
add
cmp
push
inc
ret
add
dec
xchg
cmp
fisubr
sbb
es
rcl
fisub
stc
and
jl
or
add
jae
outs
mov
popa
sbb
dec
aaa
mov
inc
pop
xor
sbb
jg
aad
jl
mov
cs
xor
fistp
test
push
les
cmp
std
xchg
shl
fs
push
js
pop
sbb
mov
pushf
jl
icebp
add
ds
rcr
cmp
stc
lea
mov
inc
jecxz
iret
fmul
nop
les
stos
jge
xchg
push
xor
dec
(bad)
lods
(bad)
inc
xor
dec
scas
push
clc
mov
xchg
test
xchg
outs
mov
idiv
jmp
call
cmp
or
int
pop
xchg
into
fwait
aad
ins
sub
call
aas
mov
pop
cld
mov
aaa
ins
push
pusha
cdq
daa
inc
dec
inc
sar
test
arpl
sub
cs
retf
mov
cmp
dec
arpl
dec
stos
lds
out
jl
lods
packssdw
push
or
cld
mov
dec
outs
nop
push
pop
jb
push
pop
mov
jnp
jo
xor
pop
sbb
or
sub
test
retf
test
push
js
outs
sbb
sti
xor
fild
mov
(bad)
mov
outs
pusha
(bad)
jmp
adc
sti
iret
xor
jl
inc
lea
int3
mov
sbb
xchg
(bad)
adc
in
mov
repz
mov
js
outs
sbb
sbb
mov
fcos
call
ins
xchg
jge
mov
mov
mov
lods
sub
sub
mov
(bad)
neg
out
addr16
adc
mov
add
fcom
xchg
in
push
push
lahf
pop
shr
add
cmps
out
das
dec
adc
dec
xchg
cdq
out
inc
div
push
cmp
push
cmp
std
out
dec
mov
xor
and
fist
mov
adc
repnz
mov
mov
into
enter
sbb
cmp
ds
mov
sbb
(bad)
ficomp
push
(bad)
out
and
(bad)
jge
or
std
sub
pop
jne
fwait
movs
and
fimul
scas
xor
adc
in
hlt
ins
sbb
or
mov
test
push
jno
pop
repz
push
stos
cmp
call
xor
movs
cmps
out
rcl
(bad)
jns
repz
out
icebp
cli
cmp
stos
cwde
inc
and
adc
push
fisubr
xchg
xchg
int
and
inc
push
jae
adc
jne
sbb
(bad)
retf
push
push
sbb
pop
mov
retf
mov
cs
jo
cmp
pop
(bad)
adc
je
in
mov
fsub
inc
frstor
ja
mov
out
and
rol
hlt
jmp
adc
pop
sbb
pushf
ins
dec
hlt
xchg
dec
jno
dec
enter
jecxz
dec
jae
sub
push
dec
dec
pop
xor
fucomp
loopne
loope
and
adc
push
xor
push
addr16
das
(bad)
sub
sub
xchg
aad
repnz
iret
cmp
sub
js
cmps
aad
xor
bound
sti
push
or
or
sbb
call
inc
mov
cmc
nop
popf
adc
ret
ficom
sub
je
(bad)
push
jmp
xor
xchg
fild
js
pusha
xchg
or
je
mov
fwait
(bad)
cli
or
add
or
mov
loop
dec
js
sbb
rol
test
cmp
sub
or
call
outs
jno
add
pop
aaa
dec
pop
xor
(bad)
pop
stos
sub
es
sbb
pop
(bad)
sub
inc
es
das
pop
and
je
jmp
mov
fiadd
outs
jnp
inc
add
fist
shl
push
jo
or
stc
pop
repnz
inc
(bad)
pop
cmp
ds
enter
adc
fs
hlt
pop
jmp
fs
int3
xchg
daa
jbe
enter
inc
cmp
xchg
or
mov
pop
inc
rcl
mov
mov
push
push
sub
and
sub
mov
hlt
lahf
xor
sub
nop
and
jae
(bad)
gs
sub
xchg
jbe
rcl
stos
jns
adc
fldenv
jbe
les
fs
lods
repz
out
ds
ret
push
or
enter
fs
outs
mov
movs
sub
push
arpl
in
paddusb
push
imul
push
dec
cmp
add
push
pop
iret
or
xchg
push
and
pop
retf
sbb
pop
jecxz
loop
adc
pop
call
xchg
sar
mov
push
lods
xor
jnp
cmp
xlat
scas
xchg
pop
movs
mov
push
cmps
xor
mov
ror
mov
lea
mov
mov
hlt
push
xchg
outs
or
push
mov
pop
jne
test
in
mov
in
cld
sti
pop
aas
test
push
loopne
dec
out
inc
fidiv
lahf
loopne
jmp
into
call
(bad)
popf
sbb
jg
cmps
in
sub
stos
cmp
sbb
cmps
xor
cli
xor
mov
push
mov
pop
jle
adc
and
xchg
mov
push
mov
ins
cmp
mov
mov
xchg
adc
fsubrp
dec
sti
inc
jmp
scas
or
in
jle
add
stos
adc
mov
cli
ins
sahf
jge
add
mov
mov
fstp
(bad)
dec
test
push
out
inc
idiv
sub
(bad)
popa
sbb
push
(bad)
cwde
push
(bad)
fucomp
add
cmp
rcr
sub
paddq
adc
call
pusha
mov
jae
jl
sbb
mov
mov
int
(bad)
cmp
shl
sbb
sbb
push
or
add
je
scas
push
or
xchg
push
call
xor
bound
fs
sahf
ja
mov
aaa
out
add
data16
imul
iret
lods
arpl
rcl
into
mov
std
jg
mov
xor
fist
fs
pop
and
or
(bad)
pop
fld
sbb
daa
in
jge
mov
iret
fcomp
cmovl
lock
arpl
movs
dec
xlat
std
pop
xchg
mov
ror
shl
rcr
adc
push
mov
lahf
and
xor
ficomp
xlat
je
jg
int3
(bad)
shl
sbb
imul
pop
popf
icebp
xchg
call
jp
inc
sub
fstp
in
sbb
jp
cmp
mov
jbe
popf
dec
out
retf
aam
lock
mov
retf
xchg
jmp
lds
mov
pop
shl
push
test
jge
in
fadd
out
arpl
call
out
mov
cmp
inc
jno
imul
call
je
jecxz
inc
std
add
repz
mov
retf
push
jbe
data16
and
cmp
inc
cmp
test
or
(bad)
adc
mov
ficom
pushf
aas
ins
mov
pop
nop
cmp
push
dec
(bad)
stos
jmp
rol
sbb
mov
xchg
iret
sbb
or
out
scas
mov
iret
shl
stos
hlt
rcr
or
stos
jo
inc
addr16
sub
mov
adc
lea
cli
and
mov
rol
jp
call
mov
repnz
call
sub
mov
dec
fisttp
mov
mov
outs
outs
mov
xchg
push
outs
or
and
sbb
lea
dec
js
jg
dec
ja
sub
lahf
popf
or
outs
push
pop
add
cmp
sbb
test
les
xor
xchg
iret
cwde
ja
jb
xor
cmp
js
mov
call
jne
pop
sbb
mov
cmp
in
add
xchg
xchg
inc
ins
into
outs
dec
inc
pop
adc
enter
add
mov
inc
lock
xchg
ja
int3
and
xor
fldcw
jnp
inc
popf
jmp
jns
push
out
pop
cmp
(bad)
and
mov
scas
jns
jno
pop
ins
jle
jmp
mov
ret
mov
xor
pop
adc
cmc
or
xor
or
repz
xchg
(bad)
cmp
xor
fdivr
adc
ret
in
mov
fwait
gs
ret
outs
outs
dec
inc
mov
xchg
sub
retf
mov
mov
int3
loop
jge
jno
cmps
ins
in
rol
das
adc
dec
add
stos
mov
dec
add
mov
sub
mov
pop
xor
psubusw
adc
fsubr
dec
mov
cdq
(bad)
sti
jg
pop
push
in
cmp
sub
(bad)
cmp
xchg
cmps
mov
xchg
pop
rcr
stc
aaa
push
(bad)
movs
nop
or
retf
sbb
int3
adc
dec
sub
pop
ins
nop
inc
adc
test
mov
cli
xor
daa
fbld
push
sti
xchg
mov
inc
lods
cmp
test
inc
and
out
test
mov
test
retf
in
loope
jle
push
adc
xor
repz
xchg
sub
inc
sbb
xchg
adc
xchg
mov
and
adc
mov
loop
mov
out
xchg
add
push
mov
jl
and
xlat
fcmovnb
dec
push
or
ror
jae
stos
jmp
pushf
ins
cmp
cmp
(bad)
jb
lods
mov
xor
mov
test
and
xchg
ins
pop
cdq
aas
sbb
rcl
mov
cmp
inc
sbb
push
enter
in
push
xor
fdivrp
jmp
cdq
addr16
call
cmps
loope
(bad)
retf
pop
pop
neg
fisub
push
cvtps2pi
jle
(bad)
(bad)
pusha
push
or
mov
fild
hlt
mov
fnstenv
jb
div
ret
mov
add
test
adc
mov
sbb
loop
jb
ds
pop
hlt
inc
div
push
cs
jo
outs
cli
and
daa
in
leave
rcl
add
jecxz
cwde
mov
aas
js
les
push
adc
(bad)
popf
dec
add
bound
cmc
sar
xchg
push
add
aad
adc
add
mov
bound
retf
push
(bad)
loop
mov
mov
gs
adc
jns
cmp
mov
cli
sub
push
out
push
cmps
add
mov
jg
adc
icebp
clc
mov
mov
dec
mov
retf
scas
das
ret
mov
fisttp
xchg
cmp
nop
in
pop
sub
sahf
movs
sbb
sub
jmp
xor
ret
push
mov
rcr
adc
adc
adc
ffreep
nop
add
outs
dec
outs
adc
xlat
or
scas
sti
sti
sub
fnstsw
in
and
inc
cld
jbe
pop
es
xor
or
add
call
ins
jbe
pop
and
pop
test
fidiv
loopne
shl
mov
or
push
scas
or
and
cmp
sub
or
push
inc
(bad)
imul
shr
out
adc
mov
sti
(bad)
lods
jne
or
fsub
rcl
ins
pop
jo
mov
mul
sbb
cwde
xor
icebp
sub
addr16
cmp
or
dec
sbb
mov
adc
pop
inc
mov
mov
mov
mov
sub
xor
push
data16
mov
sub
xor
loope
jmp
sbb
and
xchg
aam
fild
fwait
pop
mov
fst
repnz
in
ins
ret
(bad)
repz
add
lock
stos
mov
fstp
outs
imul
adc
jecxz
add
lock
pushf
out
clc
fisttp
or
cmp
mov
enter
push
push
mov
push
and
cld
mov
popa
sti
xor
outs
add
aaa
sbb
pop
jo
adc
sub
xchg
adc
in
add
sub
inc
mov
leave
and
sub
movs
and
mul
test
xchg
adc
aad
fadd
imul
pop
sbb
jbe
stc
test
imul
pop
xor
add
or
add
push
stos
mov
int
dec
out
fistp
bound
aaa
mov
in
cdq
cmc
sub
xchg
sbb
dec
(bad)
cmp
cmp
jnp
cmp
mov
clc
idiv
jl
retf
jnp
aaa
xor
addr16
cli
lar
xor
pushf
rol
aad
pop
jo
shl
sub
leave
mov
in
jns
pop
sahf
sahf
lock
fwait
dec
bound
mov
(bad)
jae
nop
mov
inc
adc
mov
and
dec
int
imul
sub
push
fs
or
mov
stos
test
push
out
push
sub
dec
loop
aaa
sbb
in
(bad)
fwait
or
mov
fbld
pop
or
dec
aas
jge
repz
jmp
fisttp
in
fdiv
sub
cmps
pop
movs
retf
aad
leave
ja
enter
mov
mov
and
stc
pop
xchg
test
push
(bad)
mul
pop
into
popfw
push
aaa
cwde
push
xor
add
fdivr
pop
sti
sbb
add
fldcw
xor
inc
cmp
arpl
fs
ins
retf
or
push
enter
add
mov
retf
inc
out
pop
dec
xchg
or
hlt
das
aas
mov
fisub
ror
std
cdq
cmps
and
jae
int
cwde
sar
fnstcw
adc
retf
dec
mov
cmp
ja
std
sbb
and
stc
(bad)
push
jnp
out
mov
rcl
ins
shr
int3
add
es
clc
repz
push
sar
mov
dec
call
sbb
add
xor
xor
(bad)
pop
imul
clc
stos
rcl
push
jae
and
sahf
adc
mov
idiv
cwde
mov
leave
xor
fucom
pop
inc
xor
data16
mov
and
stos
sub
test
(bad)
retf
and
adc
xchg
mov
fcom
pop
adc
push
jle
outs
and
adc
int
jp
mov
jp
pop
(bad)
sub
pop
sahf
cmc
pop
lods
xlat
push
aas
cmc
in
add
sar
xor
adc
cmp
ins
int
fidiv
pop
inc
cmps
mov
lods
fisttp
test
mov
xchg
gs
sbb
inc
sbb
jmp
cld
nop
push
cwde
mov
or
mov
cmp
add
bound
xor
stc
pop
add
cmp
xor
lea
in
cmps
dec
adc
(bad)
out
(bad)
push
sub
(bad)
ror
or
and
sbb
sub
rcl
cmp
or
inc
sub
jno
adc
adc
cmp
push
dec
push
into
outs
scas
clc
jp
(bad)
mov
sub
aaa
ror
adc
mov
sar
leave
mov
aaa
lea
sub
js
cmps
int3
sub
mov
sub
cli
pop
repz
imul
cmp
in
sub
in
pop
(bad)
xchg
mov
sysexit
and
sbb
cmp
xchg
and
add
fwait
ins
fdivr
inc
sbb
dec
aaa
mov
mov
adc
(bad)
fdiv
jno
mov
cmp
in
sbb
or
cmp
scas
sbb
sar
clc
ss
cmps
mov
popf
iret
ror
mov
or
daa
push
adc
inc
jge
cmp
ss
push
loope
adc
in
call
retf
rol
clc
lock
outs
and
push
xchg
int3
cmp
push
jo
out
movs
sbb
imul
cmps
xchg
inc
fnstcw
(bad)
adc
add
inc
hlt
scas
jecxz
nop
loopne
les
pop
or
movs
lds
ror
cmps
int3
leave
push
mov
rcr
lods
cmc
mov
cs
or
and
(bad)
xchg
call
mov
push
(bad)
jmp
aaa
jo
and
icebp
int
jecxz
mov
popf
mov
aas
(bad)
mov
cmp
test
lahf
mov
cmps
push
loope
jge
call
adc
test
scas
push
xor
mov
ins
add
dec
sub
jae
in
cmp
psubw
inc
adc
out
imul
mov
aad
mov
and
les
mov
and
cmp
push
fidivr
outs
xor
or
lods
ds
jno
dec
cld
cmp
cmp
push
int
rcl
fdivp
xlat
add
mov
jge
popa
sbb
repnz
mov
jbe
lds
or
mov
or
push
push
xchg
in
adc
sub
lea
push
or
inc
fisubr
xor
int3
jle
imul
(bad)
fmul
ror
or
xor
ds
pop
shr
rcl
and
add
add
lods
(bad)
scas
stos
or
cmp
and
aad
adc
sub
movs
and
lahf
loope
pop
mov
mov
and
test
dec
fcom
int
xchg
mov
xor
sub
(bad)
out
sub
push
push
pop
fldcw
fdivp
pop
inc
jo
bnd
loop
pop
jge
push
fcomp
stos
adc
imul
lock
movs
pop
push
mov
pop
or
bound
mov
scas
sbb
rcl
cmc
adc
jle
add
mov
inc
mov
idiv
adc
jmp
dec
sbb
sti
xchg
add
mov
mov
sbb
push
test
adc
fnstenv
ss
cmc
and
and
jne
add
popa
(bad)
data16
adc
inc
icebp
inc
jnp
cwde
movs
mov
xchg
fmul
ja
ins
fstp
mov
int3
lods
dec
enter
inc
data16
imul
jecxz
aaa
or
mov
stos
fcmovne
mov
sub
pushf
idiv
clc
and
mov
sbb
push
dec
cs
rcr
in
movs
mov
jl
xor
std
test
xchg
dec
xchg
dec
enter
cmc
into
(bad)
nop
movs
fistp
mov
mov
repz
aam
sub
inc
loopne
sub
mov
pop
leave
add
pushf
mov
xchg
adc
push
add
mov
imul
jp
xor
xor
adc
inc
dec
aas
dec
dec
arpl
sbb
out
jge
sub
mov
ins
xchg
add
pop
sub
dec
jecxz
test
les
ret
xchg
sti
push
test
push
out
out
sbb
adc
sahf
pop
loope
test
daa
and
inc
mov
mov
and
cmp
xor
cmp
dec
outs
sbb
inc
jecxz
fs
jmp
inc
ds
mov
in
das
add
scas
jl
test
mov
cwde
loope
cmp
lods
pop
cli
mov
or
neg
sti
push
adc
cwde
mov
xchg
cmp
repz
cs
or
push
or
cmp
sahf
cmps
stc
cs
in
pusha
dec
dec
arpl
mov
shl
cmp
jg
pusha
mov
mov
leave
(bad)
jb
push
test
in
rol
aas
adc
sub
xchg
fst
jge
cmp
pop
mov
iret
cmp
mov
jae
fst
std
push
inc
hlt
or
movs
adc
aam
aas
pop
dec
add
aaa
mov
push
cmps
enter
icebp
sti
jl
adc
aad
add
sbb
out
ret
push
fmul
(bad)
xchg
jns
sub
mov
mov
in
or
sub
mov
mov
sbb
mov
popf
or
outs
repnz
outs
out
pusha
dec
adc
add
stc
lock
fidiv
add
dec
jne
or
xor
(bad)
sbb
daa
test
ror
jmp
ret
xor
loope
scas
loope
outs
shr
mov
mov
push
retf
jns
movs
(bad)
shr
mov
and
pop
pop
and
or
aaa
cmp
sti
mov
retf
push
scas
dec
stos
xor
pop
icebp
data16
sahf
into
mov
fisubr
dec
stos
and
jnp
inc
sbb
adc
(bad)
fs
or
adc
loope
xchg
and
call
cmps
inc
push
sar
sub
repz
retf
xchg
sub
(bad)
mov
sub
jbe
jnp
fwait
outs
add
cli
repnz
and
fnsave
nop
fist
sbb
jbe
mov
sub
repz
jne
ja
imul
push
fadd
and
add
add
mov
mov
stos
and
test
repnz
test
push
cmp
es
repnz
repnz
repnz
dec
imul
xor
mov
mov
mov
mov
repnz
inc
fmul
std
mov
mov
and
cwde
movs
push
xchg
jl
add
out
add
sbb
dec
jmp
mov
inc
mov
sub
xchg
cmps
or
les
je
imul
pop
outs
scas
pop
movs
outs
push
mov
add
push
or
dec
jae
cli
jmp
push
je
sbb
leave
push
jl
popf
lods
mov
hlt
add
mov
fst
or
pop
cmc
jo
push
xor
cmp
inc
dec
je
(bad)
les
stc
out
movs
mov
xor
lods
(bad)
cli
mov
sub
ins
test
sti
les
daa
test
out
dec
leave
mov
call
int3
lea
add
lahf
mov
idiv
mov
arpl
mov
jmp
mov
pop
mov
push
imul
or
mov
mov
pop
inc
push
inc
js
cmp
mov
stc
fstp
xchg
pop
daa
cmp
es
int3
scas
mov
jmp
call
inc
jecxz
hlt
cmp
xchg
and
jecxz
in
std
enter
jbe
ins
and
mov
mov
mov
cmp
inc
test
inc
enter
sub
xor
ins
test
js
xor
push
arpl
lods
xchg
scas
push
fsubr
dec
mov
push
(bad)
pop
idiv
sub
mov
push
jmp
pop
gs
jg
jno
inc
xor
int3
pop
and
or
mov
or
out
jg
movs
push
out
pushf
pop
lahf
pop
push
and
xchg
mov
mov
sahf
push
adc
sbb
or
sti
xchg
icebp
jmp
popa
push
scas
jecxz
dec
dec
mov
ins
adc
mov
adc
push
inc
lods
stos
stos
mov
xchg
test
cdq
jnp
add
sbb
add
xor
cwde
jl
in
std
jl
push
jmp
jo
inc
lea
xchg
pop
push
ror
add
cld
add
sub
dec
xor
cwde
jae
xchg
mov
je
in
pop
int3
mov
leave
inc
sub
jne
push
in
es
xchg
test
fld
cli
int3
sbb
daa
rcr
les
cli
dec
push
add
nop
mov
cld
push
xchg
cmp
mov
jmp
cmps
sub
cmp
adc
jl
adc
sub
push
cmp
outs
mov
inc
shl
rol
inc
or
xchg
pop
repnz
pop
pop
ins
in
mov
pusha
lea
xor
js
imul
cs
xor
(bad)
lock
jno
movs
sar
ret
cmp
or
or
iret
sti
jmp
jns
inc
(bad)
cmp
push
and
cmp
jp
lods
sub
or
xor
mov
mov
mov
jb
test
movs
add
add
movs
and
jge
in
fstp
stc
mov
ds
les
xchg
out
mov
cld
push
das
add
jbe
sub
(bad)
push
cmp
aad
aam
xchg
pop
adc
dec
push
inc
aam
jns
xor
sbb
xchg
outs
cmp
pop
add
dec
and
popf
push
fwait
mov
jns
test
inc
sti
and
loop
loope
jmp
jmp
mov
lea
lods
or
out
aad
pop
mov
addr16
jp
push
pop
and
loop
rcr
inc
lock
ins
jmp
and
or
push
in
and
inc
pop
fs
xor
fadd
inc
mov
stos
gs
sub
or
xchg
sbb
push
push
lahf
popf
clc
retf
stc
jne
cmp
xchg
test
inc
add
sbb
xlat
aaa
mov
sbb
div
add
iret
push
and
mov
cmp
call
xor
call
(bad)
cmp
scas
fistp
ins
sbb
rol
scas
cmp
fistp
cmp
jg
lds
out
cmp
(bad)
pop
cmp
out
cmp
cmp
sub
cmp
add
retf
outs
fistp
sub
inc
mov
cmp
lahf
cmp
je
xor
sub
jbe
fsubr
cmp
pop
xchg
fwait
addr16
adc
fsubp
es
in
loop
in
(bad)
mov
test
test
aam
daa
outs
cli
pop
add
call
inc
out
push
outs
or
into
loop
cmp
std
leave
adc
lods
jno
ins
lahf
(bad)
aam
inc
mov
mov
push
and
inc
mov
adc
inc
and
adc
and
popf
jl
(bad)
jmp
sub
mov
jl
inc
js
xor
jae
cmp
adc
dec
pushaw
cmp
mov
ja
imul
test
dec
int
adc
jecxz
ret
test
cdq
popa
int3
lock
(bad)
repz
mul
cwde
cmp
aaa
mov
idiv
and
mov
ins
(bad)
cmp
sub
mov
xchg
sub
pushf
xlat
push
fisub
xor
mov
loopne
push
(bad)
enter
pop
shr
mov
punpckhwd
pop
sahf
or
mov
mov
jp
scas
imul
push
cli
and
jbe
int3
es
adc
xor
inc
mov
mov
xchg
lods
sbb
push
pop
sbb
out
push
dec
scas
and
call
loop
jg
sbb
pushf
inc
ds
or
xbegin
shr
push
jae
outs
retf
mov
imul
dec
aad
cwde
in
retf
add
in
call
sub
jno
stc
mov
(bad)
fs
cld
sub
xlat
sub
jecxz
jl
imul
out
mov
adc
jnp
retf
mov
dec
and
xchg
mov
pop
mov
inc
xlat
and
ror
xor
std
call
out
jb
xor
cld
popw
inc
test
adc
mov
xor
(bad)
adc
sbb
push
jg
or
xor
pop
adc
mov
jne
mov
ret
and
jnp
mov
movs
imul
push
mov
sbb
sbb
and
pop
mov
jge
adc
pop
rcr
(bad)
jp
shl
jp
cmp
jl
jo
cs
bound
daa
loop
fst
aaa
and
adc
ss
inc
push
mov
xor
sub
sbb
mov
scas
sbb
out
cmp
fidiv
not
cmc
inc
cmp
sbb
xor
or
adc
and
sar
cmp
mov
mov
dec
test
test
mov
mov
adc
sbb
mov
loope
sub
dec
test
pop
mov
and
xchg
sti
lods
adc
cmp
lds
frstor
in
int3
xchg
sbb
or
ret
retf
mov
or
and
adc
sbb
rcr
lock
pusha
pushf
push
jp
shl
dec
cmp
pop
push
jmp
jmp
mov
inc
add
or
xchg
cmp
push
adc
nop
int
lods
xchg
out
fdivr
cmp
pop
imul
jp
test
sub
add
fwait
push
cmp
push
inc
mov
sbb
sti
add
je
inc
jmp
popa
and
ja
and
inc
aam
mov
and
pop
rol
dec
jb
dec
repz
push
mov
adc
imul
adc
adc
and
pop
ja
and
mov
or
stc
test
das
cs
imul
outs
daa
ins
mov
pop
fldenv
jge
adc
xchg
and
lea
std
cmp
mov
cmps
jne
test
test
scas
mov
mov
scas
jbe
loop
scas
dec
mov
mov
and
mov
hlt
pop
out
sub
sbb
aas
in
mov
repz
das
lahf
call
ficomp
xor
sub
adc
sub
and
out
xchg
cmp
jne
into
sub
leave
inc
int3
pop
lock
dec
pop
outs
stos
out
mov
mov
mov
ds
dec
mov
ftst
mov
(bad)
ins
push
pop
mov
jecxz
jmp
stos
jns
fnop
imul
dec
cwde
aaa
jl
loopne
ja
adc
retf
cld
adc
scas
sub
ror
inc
mov
js
mov
rcr
dec
or
push
xor
sub
or
(bad)
das
dec
xor
sub
gs
fs
push
cwde
sbb
mov
rcl
cld
stc
ins
jge
inc
jmp
stc
cmp
adc
cmc
fwait
cli
jne
or
jb
adc
(bad)
cmp
movs
std
retf
test
repz
(bad)
pop
aas
in
shl
in
mov
pop
mov
jns
xchg
cmp
iret
sbb
sbb
mov
test
jnp
lods
jl
ret
test
push
jp
xor
es
and
dec
loopne
(bad)
xor
mov
lahf
(bad)
jmp
test
es
jge
mov
inc
shl
adc
and
jbe
mov
bound
mov
aas
sbb
call
sub
xchg
fs
(bad)
stc
call
dec
stos
add
jns
xor
stos
jns
lds
adc
xor
loop
test
pop
pop
es
mov
emms
daa
leave
aaa
fistp
movs
xchg
jnp
jno
cdq
xchg
xchg
xchg
and
call
lea
stc
sub
loopne
dec
ficom
repnz
es
pop
push
(bad)
mov
out
dec
xor
outs
mov
imul
add
cmp
pop
push
jbe
push
sbb
std
data16
fisub
inc
js
and
mov
bnd
in
dec
pop
jb
dec
pop
push
inc
retf
fcomi
int
dec
and
and
mov
jno
arpl
mov
sbb
xchg
push
cdq
inc
pop
mov
icebp
test
nop
fwait
or
pop
and
call
das
and
repz
jmp
ss
mov
pop
sub
loopne
and
pusha
in
push
(bad)
loop
push
loop
mov
xchg
mov
xchg
leave
in
les
call
or
push
shl
loop
mov
dec
pop
or
sub
sub
in
xchg
xchg
stos
pushf
ins
stos
jns
sbb
arpl
lods
adc
mov
in
cwde
add
pop
xchg
movs
and
push
cli
popa
sti
adc
scas
mov
xchg
sbb
and
or
sar
inc
imul
dec
cld
(bad)
ror
push
es
call
sbb
gs
or
fidivr
mov
lock
mov
fs
addr16
repz
mov
mov
adc
xchg
dec
data16
ret
mov
aad
pop
lock
mov
cmp
xor
inc
dec
call
pop
and
test
and
jae
cmp
xlat
jp
jae
ds
(bad)
cmps
mov
inc
jne
ror
cmc
sub
add
int
mov
adc
loope
test
push
pop
mov
xor
xor
add
jecxz
popa
cmp
sub
into
dec
test
ins
dec
xchg
sbb
jb
sub
sar
je
fnstenv
xchg
inc
inc
aam
adc
adc
dec
outs
movs
jnp
ret
mov
fist
xchg
imul
inc
or
sbb
xor
and
lds
and
mov
ret
nop
sbb
mov
aam
(bad)
loopne
and
test
loope
cmp
push
mov
cs
cmovo
test
ffreep
sbb
shl
ins
push
sub
stos
lods
rol
xor
mov
ss
inc
inc
dec
cmp
or
cmp
repz
xchg
xor
test
push
and
lods
call
(bad)
xchg
xchg
xor
add
push
pop
add
mov
add
cs
in
mov
xchg
cmp
fadd
sbb
inc
xchg
retf
nop
popf
xchg
and
or
jnp
mov
call
(bad)
mov
sbb
or
test
mov
push
fiadd
int
or
jb
push
pusha
sahf
imul
call
loopne
ins
jecxz
mov
push
fisub
cmp
int
shl
cwde
push
xor
xchg
sahf
dec
sti
aam
jnp
mov
daa
inc
or
imul
xor
ja
mov
xor
push
pop
stos
sub
(bad)
and
or
fld
sub
mov
sbb
dec
adc
push
adc
add
push
xchg
aaa
jnp
das
jecxz
repz
mov
mov
idiv
or
movs
mov
call
ret
aaa
out
mov
jl
jae
aad
jmp
imul
xlat
aad
mov
and
les
test
dec
fldenvw
mov
(bad)
in
sbb
rol
add
push
stos
xor
pop
es
out
ret
push
fsubr
out
arpl
pop
out
pop
fmul
sub
dec
adc
mov
add
shl
repz
mov
and
stos
pop
sub
in
cmps
push
dec
xor
std
xor
xchg
stc
pop
mov
aaa
jns
outs
imul
fst
and
cdq
jo
imul
ror
aad
adc
arpl
mov
idiv
shl
dec
aam
(bad)
int
mov
push
ins
xchg
pop
xor
ins
scas
outs
cmps
xor
(bad)
fsubr
lods
adc
int3
lods
call
cmp
mov
div
div
(bad)
call
sbb
cdq
fucomp
les
xchg
jl
sub
and
dec
jbe
loope
scas
movs
push
arpl
xor
xchg
push
std
scas
xor
mov
out
sbb
xchg
and
or
mov
push
adc
test
push
mov
cmps
xchg
loop
xlat
shl
pop
or
stos
add
mov
or
sbb
lea
adc
out
iret
outs
loope
arpl
xor
and
popa
mov
pushf
lea
push
sar
jecxz
hlt
stos
cs
imul
cmp
dec
mov
mov
cld
lods
shr
imul
mov
xchg
pushf
xor
cld
stc
(bad)
repz
(bad)
cli
rol
pop
mov
rcr
sar
mov
retf
jl
push
push
mov
je
jp
inc
adc
cmp
inc
int3
cmps
imul
mov
add
mov
aaa
(bad)
mov
bnd
inc
inc
push
mov
mov
xchg
into
(bad)
inc
inc
dec
mov
add
aas
pop
xor
mov
push
sbb
jl
or
(bad)
pop
inc
rol
cld
mov
iret
(bad)
jmp
add
test
popf
dec
add
jmp
adc
sbb
mov
cmps
inc
js
mov
movs
cwde
loopne
mov
retf
adc
sbb
xchg
push
adc
test
stos
sub
imul
call
push
cmp
jl
not
xor
fbld
cmp
jne
mov
es
mov
jl
mov
inc
inc
mov
jge
xchg
stc
cmp
jae
lahf
mov
test
call
pop
xor
popa
call
pop
push
data16
inc
xor
test
jns
dec
daa
cmp
add
imul
out
lods
sub
ss
sahf
in
mov
js
cmp
pop
mov
mov
xchg
or
sbb
lock
stos
lods
inc
out
into
test
icebp
arpl
test
cmp
mov
add
pop
(bad)
sbb
and
mov
std
ja
or
nop
push
pusha
stos
jp
leave
in
loop
pop
or
cmc
out
mov
pop
test
ret
xchg
int
pushf
jg
mov
sub
(bad)
dec
fwait
jmp
clc
mov
daa
lea
or
or
popa
mov
test
sub
test
mov
jmp
das
inc
pop
mov
push
jno
shl
out
pop
stos
les
xor
dec
and
loope
mov
pop
sub
adc
and
(bad)
pop
int3
arpl
(bad)
out
pop
les
call
arpl
lds
xchg
jmp
mov
xchg
pop
cli
pop
ins
dec
out
dec
inc
cld
or
and
fdivr
push
jne
sub
jl
popa
xor
inc
jg
xor
push
jle
mov
or
retf
pusha
jge
into
ins
jae
fst
mov
cmp
jge
mov
jp
xchg
sub
mov
ja
(bad)
cmp
test
xchg
fidivr
retf
push
mov
loopne
je
fimul
mov
inc
dec
cmp
arpl
mov
cli
out
sbb
pop
mov
add
jmp
std
push
add
jmp
rol
iret
pop
mov
repnz
inc
push
xchg
loop
stos
mov
popa
popa
mov
rcr
pop
or
popa
mov
mov
and
jb
pop
inc
mov
in
ss
mov
jno
sbb
mov
je
fwait
loop
repnz
fstp
cli
jmp
in
das
int3
xchg
cdq
fdiv
sbb
fimul
call
inc
test
das
scas
ficomp
in
shl
inc
and
loopne
fs
inc
mov
and
out
push
leave
ins
push
push
xchg
fcom
(bad)
push
cmc
push
mov
push
sbb
popa
mov
push
out
jbe
in
and
es
jbe
dec
sbb
jbe
movs
xor
jbe
dec
or
cmp
push
jbe
mov
jmp
stos
jmp
cmps
addr16
inc
das
loope
(bad)
fmul
mov
dec
and
iret
in
shl
hlt
out
sbb
or
test
dec
sbb
in
dec
push
xor
retf
call
jae
cmp
jo
fstp
mov
(bad)
popf
dec
std
sub
popa
mov
sub
retf
pop
retf
call
add
xchg
cld
sub
push
in
push
and
push
add
jb
xor
dec
push
add
mov
les
xchg
out
jl
inc
lock
fwait
inc
clc
xchg
(bad)
xor
add
scas
stos
int
(bad)
adc
cmps
inc
sbb
das
mov
or
addr16
adc
nop
sub
push
sub
test
imul
sahf
xchg
xchg
cmp
mov
pop
rcr
adc
add
push
and
scas
int
repz
cdq
out
data16
dec
or
mov
or
jg
ss
pop
mov
push
dec
pop
ins
push
cmps
popa
xchg
add
jmp
in
mov
mov
outs
(bad)
test
icebp
outs
(bad)
leave
sub
dec
loop
iret
stc
mov
cmp
push
jp
cld
mov
cmps
jmp
jecxz
push
and
icebp
mov
xor
jle
xchg
and
jo
sbb
mov
pop
test
jge
repz
sub
lahf
mov
loop
inc
mov
repz
lea
dec
push
mov
lods
imul
retf
sbb
stc
fprem
sahf
lock
mov
add
adc
xchg
mov
xor
fld
jbe
lahf
dec
and
and
pop
sub
xlat
imul
inc
mov
sbb
nop
mov
jbe
loopne
ror
push
sti
inc
pop
dec
aaa
scas
or
in
rcl
mov
mov
sub
fsub
movs
(bad)
dec
mov
scas
mov
or
jo
popf
inc
loop
push
cs
inc
inc
retf
imul
retf
pop
adc
das
(bad)
(bad)
jnp
out
adc
push
aad
mov
jle
das
inc
ret
add
imul
mov
sbb
push
gs
dec
dec
cmp
movs
cmc
or
fwait
xchg
test
pusha
inc
and
loopne
and
or
hlt
mov
sti
dec
adc
push
dec
jns
(bad)
repnz
outs
out
cs
push
fsub
add
movs
shl
es
scas
call
mov
sub
dec
xlat
(bad)
cmps
jle
pop
cmp
in
test
cwde
xor
push
add
jmp
add
pusha
lahf
jb
loopne
xor
sub
mov
hlt
cli
ret
movs
mov
fs
cs
cmp
popa
fmulp
pop
or
dec
jb
fldenv
or
xchg
fwait
xor
add
test
push
dec
mov
xor
push
int
mov
dec
inc
sbb
call
ror
adc
and
(bad)
cld
mov
cmp
int3
mov
xchg
inc
shr
adc
jle
dec
mov
jns
test
jp
jnp
and
xor
push
bound
and
lea
and
mov
test
arpl
int3
lods
jg
push
jmp
icebp
jnp
xchg
push
mov
pop
xor
adc
add
mov
ins
jge
fisubr
and
push
iret
fidiv
sbb
push
sti
mov
fadd
movs
lods
outs
stos
or
les
cmp
xor
aad
add
lahf
push
movs
aaa
cmp
sbb
sahf
out
cdq
sti
pop
xchg
or
xor
jmp
push
or
in
adc
cld
(bad)
push
push
call
fisubr
ret
ret
mov
ret
arpl
cmps
mov
pop
pop
mov
scas
retf
(bad)
jg
dec
add
mov
adc
inc
mov
xchg
dec
into
test
popa
xchg
or
lods
pop
in
iret
sbb
xchg
xor
jecxz
cdq
mov
arpl
mov
xlat
mov
mov
ret
adc
xor
jp
pop
repz
push
sbb
in
push
sbb
adc
mov
test
je
fimul
psrlq
leave
dec
fwait
test
jnp
int3
mov
stos
icebp
adc
fcomp
rcl
mov
jno
mov
or
mov
sbb
ror
xchg
sbb
movs
lea
jmp
mov
dec
stc
mov
psubsw
push
sbb
cmps
sbb
icebp
push
dec
adc
adc
dec
loope
xchg
and
jae
adc
repnz
je
aam
push
clc
pop
dec
xor
jbe
dec
sbb
fld
add
add
adc
adc
xor
add
test
inc
add
mov
cmp
cmp
pop
movs
out
inc
mov
cmps
mov
cli
scas
cmp
push
pusha
lea
or
mov
bnd
retf
daa
cmc
push
shl
and
mov
mov
cmp
xor
adc
retf
push
jp
xor
and
adc
js
cmps
push
popf
sub
test
cmp
shr
leave
xchg
jne
cmp
xor
push
sbb
push
push
lods
(bad)
fdiv
xchg
lds
mov
inc
popf
imul
jl
jbe
cdq
push
sub
fs
adc
xor
movs
shl
ins
jg
mov
fmul
or
pushf
dec
mov
inc
and
sbb
xchg
mov
aad
jge
adc
sub
xor
mov
fdiv
sahf
push
pop
mov
mov
or
sub
mov
pop
and
pushf
fs
scas
cwde
mov
ss
mov
test
jg
xchg
inc
mov
pop
mov
inc
add
inc
jecxz
mov
and
cmp
jge
(bad)
data16
je
jne
and
xlat
(bad)
adc
or
cmp
jns
std
hlt
ret
out
jl
jmp
add
dec
addr16
test
retf
jg
push
shl
mov
enter
in
mov
mov
lods
cmps
(bad)
hlt
xor
pop
fdivr
nop
lods
cs
and
push
push
or
fmulp
xor
inc
mov
xchg
push
lea
sbb
int
dec
stc
dec
ss
add
cmp
jne
mov
xchg
pop
push
cs
stc
rcr
hlt
lods
mov
adc
mov
cmps
cmp
call
mov
mov
mov
(bad)
or
lds
push
jns
xchg
sbb
int3
bound
xor
repnz
push
xchg
daa
(bad)
loop
fidiv
stos
push
stos
dec
fdivr
cs
push
xor
inc
cmps
mov
out
cmp
adc
call
ret
jno
add
mov
inc
dec
jmp
add
jle
inc
(bad)
pop
sti
ins
fnstsw
ja
mov
es
movs
enter
cs
or
mov
les
jne
mov
out
out
sub
xchg
sub
dec
xor
jg
push
aas
cli
mov
mov
xchg
fstp
dec
mov
sti
and
in
push
loope
in
neg
fcomp
aaa
imul
mov
ss
not
push
movs
pop
loopne
(bad)
loopne
sub
rcr
das
sub
in
xchg
outs
push
sahf
sbb
test
arpl
call
iret
xchg
sar
lea
or
mov
frstor
mov
xchg
cmps
jo
xlat
ins
push
(bad)
mov
adc
rcl
sar
and
push
cvtps2pi
mov
imul
push
outs
adc
int
retf
f2xm1
jb
pop
cwde
sahf
sub
ror
fdiv
jbe
adc
cmp
ss
movs
repz
mov
shl
or
sub
pop
imul
stos
jno
mov
xor
arpl
dec
es
fcomp
pop
push
imul
pop
jle
std
popa
mov
jmp
loop
int
push
jns
add
ret
cwde
xor
xchg
xchg
and
(bad)
fist
addr16
sbb
cli
push
imul
pop
mov
sar
adc
add
inc
popa
test
and
cs
fcomp
(bad)
ss
or
pop
mov
repnz
std
sbb
lea
mov
sar
imul
xchg
add
out
fild
mov
jmp
push
dec
add
push
and
test
jl
(bad)
ja
jnp
cmp
lds
inc
push
dec
xchg
movs
mov
mov
adc
and
mov
(bad)
movs
inc
push
pop
mov
cmps
hlt
or
mov
hlt
cmps
loope
and
xchg
shl
adc
or
jbe
sub
xchg
sub
and
andnps
mov
cmp
shl
out
xchg
(bad)
or
and
mov
movs
mov
mov
mov
mov
icebp
sar
out
mov
sub
arpl
jge
xchg
adc
out
outs
sbb
nop
cs
push
outs
jg
mov
jmp
pop
xor
cmps
xor
pop
add
outs
cmp
stos
mov
or
sti
inc
cmp
mov
xor
aad
pop
mov
and
ffreep
jmp
fldcw
dec
outs
pop
je
lods
xchg
mov
mov
fdivr
ret
jmp
jo
std
dec
jl
push
and
mov
(bad)
mov
adc
cmp
retf
jl
jb
cmp
xor
aam
in
xchg
adc
out
pop
mov
jb
fdiv
push
aaa
jge
mov
push
or
push
pop
mov
gs
mov
add
cmp
sbb
xacquire
add
movs
aaa
(bad)
pop
push
out
sbb
pop
icebp
mov
xchg
in
dec
clc
xchg
int
repz
push
or
cmp
dec
pop
sub
int3
jge
add
jl
cmps
xor
jb
fcom
shl
pop
jb
out
retf
stos
jecxz
xchg
cli
xchg
retf
jns
hlt
jp
in
xor
ja
mov
lds
mov
(bad)
push
mov
pop
retf
sbb
cdq
cmp
mov
fdivr
cld
mov
mov
mov
jle
and
mov
xor
pusha
push
push
fs
pop
call
mov
out
xchg
mov
and
popa
retf
popa
pop
ja
mov
sbb
cwde
sti
dec
mov
mov
shl
mov
push
loopne
mov
sub
jns
or
mov
or
dec
test
push
shl
fsubr
std
mov
out
jecxz
or
aas
and
pusha
add
loop
push
push
test
retf
adc
ret
xchg
int
mov
inc
mov
push
mov
int3
sbb
sbb
sub
dec
call
xor
lahf
fwait
mov
enter
sti
jecxz
xchg
mov
push
(bad)
cli
cmc
into
(bad)
mov
bound
out
sahf
and
fnstenv
or
cmp
push
in
clc
mov
jns
(bad)
fisttp
shl
scas
mov
sbb
xchg
(bad)
sbb
fisttp
xor
stos
imul
inc
dec
movs
mov
add
adc
push
shr
test
pop
cmp
push
pusha
pop
and
or
pop
pop
xor
lahf
jle
mov
movs
add
add
sub
xchg
inc
dec
cs
push
cmp
jae
imul
jb
cmc
add
cmp
or
stos
repnz
icebp
iret
push
into
inc
imul
repz
sbb
dec
loopne
aam
in
mov
out
(bad)
(bad)
call
test
mov
jp
mov
cmc
retf
aaa
out
shl
pop
push
stos
inc
pop
(bad)
push
cli
sub
in
pop
and
repz
gs
scas
mov
inc
jecxz
xchg
mov
pop
aas
iret
or
mov
mov
in
mov
push
int
into
imul
push
add
inc
inc
aam
icebp
mov
aas
jne
cdq
shr
into
stc
mov
xchg
out
retf
fnstsw
or
mov
ja
loope
sbb
push
inc
push
lea
push
dec
stc
iret
mov
push
mov
int3
(bad)
mov
cmp
mov
fdiv
mov
push
add
jns
fdiv
lods
(bad)
add
fisubr
outs
push
sahf
in
mov
fist
ds
popa
jmp
xchg
xchg
and
cmp
cmp
add
arpl
fistp
aam
sti
xchg
dec
sub
inc
xor
in
loope
xor
arpl
lods
scas
push
push
cmp
sahf
ror
inc
dec
add
jl
cmp
or
mov
mov
mov
ins
sahf
bound
push
pushf
inc
and
jmp
pop
cmps
(bad)
and
test
aam
and
pop
pop
push
cmp
jge
adc
imul
push
ins
sahf
cld
es
or
cli
jg
movs
retf
add
out
mov
rcr
mov
xchg
or
sub
stos
xor
xchg
out
push
mov
movs
cmps
sbb
out
shr
adc
push
mov
das
nop
mov
mov
push
fucomi
out
int
push
fiadd
outs
jle
mov
jecxz
in
call
mov
push
ret
sti
ds
shl
loope
pcmpgtw
out
push
int
cmp
sbb
dec
leave
ret
or
call
pop
pop
arpl
or
xchg
arpl
push
sbb
sbb
add
mov
mov
fistp
in
jns
call
or
push
inc
and
inc
or
out
mov
jb
adc
arpl
mov
iret
jnp
cdq
jns
mov
cmp
call
iret
and
stc
sti
inc
cld
mov
inc
add
fistp
shl
ret
sub
xchg
or
mov
bound
xor
int3
adc
(bad)
push
pushw
stos
and
pop
push
aaa
mov
test
mov
fdivr
jg
(bad)
scas
lea
mov
adc
mov
bound
rol
jecxz
(bad)
out
loop
(bad)
add
movzx
xlat
mov
lock
cs
xchg
add
mov
or
adc
push
sub
scas
cwde
mov
adc
scas
add
je
neg
pop
push
aas
or
repz
sub
call
iret
push
imul
cmp
dec
ret
add
cwde
call
jle
int3
repnz
fs
retf
mov
and
cmp
mov
adc
sub
add
das
frstor
xor
test
sub
int
inc
inc
hlt
mov
in
loop
or
call
push
jbe
mov
add
lds
(bad)
cmp
mov
test
aam
enter
pop
push
out
fdiv
lea
mov
mov
syscall
push
xor
lds
dec
sub
sub
inc
jle
dec
push
arpl
pop
test
outs
sbb
sub
or
cdq
adc
xchg
inc
dec
sbb
push
gs
ficom
std
xchg
or
jo
out
das
dec
sub
push
mov
cmps
hlt
imul
mov
cmp
ror
lock
sub
dec
xlat
fwait
in
mov
(bad)
mov
xor
pusha
stos
jl
sar
inc
xor
and
bound
cli
sbb
test
push
ror
dec
ret
cmp
add
js
mov
dec
cmp
cs
in
out
fs
out
cs
pushf
and
popf
enter
jae
cli
data16
mov
and
mov
out
retf
xchg
cwde
(bad)
cmp
xchg
and
push
lods
pop
int
out
sub
or
loope
cmp
shl
mov
ror
mov
out
out
stos
mov
cmp
add
push
push
mov
push
xchg
jp
sub
je
or
mov
sub
mov
pop
mov
mov
in
adc
pusha
addr16
pop
out
js
pop
jp
push
mov
cdq
(bad)
push
dec
adc
inc
fcom
bound
mov
call
fdivr
bound
int
mov
fbstp
ins
fmul
inc
mov
sbb
into
xor
push
dec
xchg
mov
leave
repz
cmp
sbb
fs
ret
das
rcl
mov
or
pop
icebp
xor
mov
int3
or
push
push
or
aam
jmp
mov
outs
fld
jo
lea
js
dec
sub
dec
push
jge
mov
stos
inc
push
pop
in
gs
scas
or
ror
and
pop
jae
push
lods
mov
pop
icebp
xor
xchg
or
dec
outs
outs
sti
jmp
fld
cmp
mov
ficomp
cmp
hlt
or
movs
(bad)
sahf
sub
jge
sub
mov
mov
data16
loopne
push
mov
add
pop
push
xor
adc
icebp
or
and
sub
call
sub
adc
sub
and
jmp
out
pop
mov
je
inc
ds
mov
sti
or
xor
sub
cmovne
sbb
sub
sbb
adc
and
jecxz
cmp
pop
or
xor
xchg
aas
push
out
repz
outs
sbb
fimul
sahf
retf
mov
pop
inc
les
jae
mov
dec
stos
lock
add
xor
add
inc
or
aad
inc
pushf
mov
std
xchg
data16
mov
icebp
nop
pop
jb
aad
(bad)
pusha
pop
push
sub
stc
mov
call
fimul
cld
test
repz
jmp
je
scas
cmp
lds
xchg
xchg
repnz
movs
xchg
xor
push
or
inc
dec
fs
mov
sub
popa
cmp
mov
sub
xchg
mov
icebp
inc
push
sbb
cmps
pop
in
push
mov
repnz
mov
fidivr
std
(bad)
mov
jmp
lds
arpl
mov
inc
add
mov
test
pop
pop
mov
pop
mov
mov
pop
fwait
and
mov
jb
pop
div
and
pop
adc
mov
cmp
add
xchg
fs
xchg
(bad)
mov
xchg
test
pop
xor
outs
xchg
xor
xchg
(bad)
mov
sahf
jmp
pushw
cmp
inc
inc
loope
lock
push
jne
addr16
pop
push
xchg
sbb
sub
and
and
xchg
arpl
mov
test
cmp
xor
pop
mov
ins
xchg
movs
aas
loopne
push
jmp
out
sbb
hlt
fcom
aaa
into
scas
xor
fnstcw
div
cwde
push
test
mov
sub
(bad)
mul
leave
sbb
jbe
push
or
push
xor
push
inc
xchg
sub
jno
cmp
in
mov
mov
cli
xchg
cmp
iret
arpl
in
inc
outs
mov
fsub
int
mov
adc
pop
add
iret
xchg
fwait
repz
cmp
add
add
out
into
inc
dec
fwait
add
ficomp
mov
dec
mov
xchg
adc
inc
adc
pop
push
sub
or
sub
lods
sbb
cs
dec
dec
adc
push
sub
cmovp
mov
or
push
adc
sbb
jmp
enter
cli
movs
pop
aaa
fdivr
inc
test
sbb
xchg
sub
or
shr
mov
fs
and
sub
lock
add
sbb
fisttp
shl
or
push
sub
in
fdiv
mov
aam
out
push
scas
pcmpeqb
ja
xor
ja
or
mov
es
pop
inc
test
into
aad
ins
aad
push
vpunpcklbw
ror
mov
xor
dec
xchg
jp
dec
cmp
jmp
pop
push
fsub
test
cld
mov
int
sbb
jb
rcl
adc
rol
js
push
cmc
rol
stc
inc
jle
cmp
sub
lahf
cmps
das
es
faddp
xchg
mov
das
adc
mov
inc
lock
imul
pusha
sahf
cdq
dec
test
add
sbb
je
iret
mov
ret
push
jmp
les
test
or
mov
inc
std
mov
and
xchg
push
mov
xor
jno
idiv
imul
int3
or
mov
push
push
fs
xor
lahf
icebp
cdq
out
cdq
lds
inc
(bad)
mov
int3
mov
sahf
js
xor
push
sbb
stos
mov
mov
fnstenv
inc
pop
sub
mov
movs
call
(bad)
sbb
(bad)
pop
(bad)
mov
cmp
dec
arpl
mov
cwde
mov
fistp
jno
jbe
(bad)
dec
pop
rcr
lahf
out
rcr
add
push
pop
adc
aam
mov
les
fdivr
fs
in
mov
sub
dec
or
dec
jb
push
inc
stos
gs
inc
pop
sub
push
inc
push
inc
stos
cld
lea
inc
movs
and
sub
scas
shr
movs
push
das
aam
add
pop
es
test
sbb
push
outs
xchg
sbb
(bad)
lds
sub
sub
imul
mov
dec
lahf
(bad)
push
fisttp
pop
repz
popf
scas
mov
movs
jecxz
xchg
add
xchg
mov
sbb
test
mov
nop
jnp
in
pushf
leave
add
imul
retf
xchg
mov
fisub
mov
xor
cmp
scas
test
xor
push
mov
cmp
stos
cld
out
xor
jb
cmc
xchg
pop
jmp
cmp
pusha
ins
adc
repz
push
or
adc
inc
sub
mov
cmp
sub
mov
in
mov
sub
fstp
mov
loopne
jmp
jmp
jmp
sub
mov
imul
inc
ror
repnz
cmps
ds
pop
cdq
in
test
or
cmp
mov
xchg
ins
rcl
push
or
int3
ins
push
jge
test
sub
data16
(bad)
nop
dec
(bad)
mov
pop
lods
imul
or
inc
aaa
mov
shr
fistp
jp
int3
mov
cmp
pop
push
sbb
std
imul
in
pusha
dec
sub
sbb
inc
push
cmove
loopne
jns
pop
stc
sbb
sbb
cmp
push
xchg
ror
(bad)
in
jge
xchg
xlat
and
cli
in
cmp
sbb
movs
mov
mov
fdivr
in
inc
cmp
mov
loope
pop
(bad)
rcr
call
aas
mov
dec
ja
fdiv
outs
ja
sbb
push
je
aad
aaa
xor
adc
jecxz
test
adc
fcomp
fstp
sub
(bad)
js
mov
xor
mov
jp
mov
pop
jnp
ds
adc
mov
add
mov
jmp
leave
in
mov
cmp
(bad)
jle
xchg
push
sbb
xchg
hlt
lds
sub
das
dec
sti
rcr
cld
aaa
mov
hlt
mov
pushf
mov
xor
out
push
lea
add
retf
gs
imul
inc
les
mov
(bad)
sti
add
cmp
cmp
adc
sbb
shufps
pusha
xor
shl
jbe
cmp
add
outs
mov
mov
cld
dec
cmp
mov
ja
ja
dec
dec
leave
mov
sbb
lahf
je
daa
cmps
jns
popa
scas
pushf
adc
xchg
xor
mov
jno
mov
enter
enter
push
mov
(bad)
push
push
je
ret
retf
jecxz
inc
mov
dec
xchg
scas
cmp
(bad)
int3
dec
fcmovu
pop
fcom
punpcklbw
dec
mov
jle
(bad)
jns
add
mov
lahf
or
pop
adc
je
sub
xor
mov
out
push
push
(bad)
stc
cmps
jo
pushf
fwait
mov
dec
lahf
mov
icebp
sub
(bad)
stc
cs
aas
mov
pop
iret
out
push
arpl
into
adc
inc
repz
xchg
and
out
ret
lea
psrad
inc
sahf
push
add
dec
into
sbb
pop
jmp
fisttp
xchg
test
push
jno
fdivr
dec
test
jnp
(bad)
cmps
jmp
loop
cli
rcl
xchg
fld
xchg
cmp
repz
into
sbb
cmp
mov
call
mov
pop
mov
inc
xchg
mov
pop
loop
pop
push
pushf
and
pop
xchg
(bad)
pop
cmp
xchg
cmc
jge
mov
arpl
mov
cmp
push
adc
jo
push
fisttp
out
inc
xor
dec
jmp
jnp
mov
push
inc
inc
cmps
ja
cwde
add
aad
sub
movs
pop
addr16
adc
push
cmp
sub
lods
adc
adc
jp
add
scas
adc
hlt
bnd
cmp
cmp
push
hlt
enter
jne
call
inc
and
repnz
in
mov
std
stc
sti
jp
adc
pop
data16
imul
or
nop
mov
dec
adc
xor
mov
iret
stos
ret
or
mov
sbb
mov
je
jae
in
aas
and
adc
fisub
and
out
mov
mov
and
lea
outs
and
xchg
lea
mov
push
mov
sbb
dec
jp
adc
jo
sbb
aam
dec
sbb
in
mov
push
xchg
in
je
dec
lock
nop
dec
cs
out
pop
call
inc
addr16
inc
sbb
xchg
outs
inc
sar
lock
jmp
ins
mov
fistp
sti
pop
cmp
mov
pop
xchg
test
ror
out
out
and
inc
sbb
cmp
xlat
test
ficomp
xchg
clc
(bad)
dec
cmp
mov
dec
cld
or
shr
xchg
shl
cli
jbe
les
xchg
mov
or
(bad)
int3
xor
xchg
fucomip
out
(bad)
jnp
in
push
or
cmp
call
adc
outs
das
jle
sbb
rol
jo
adc
jnp
mov
mov
inc
aaa
mov
cmc
xor
inc
movs
push
in
xor
xor
pop
or
mov
mov
scas
dec
test
mov
call
adc
fs
adc
in
mov
inc
je
data16
fadd
cmp
sti
adc
adc
pop
adc
add
and
fistp
je
addr16
push
int
fcom
imul
mov
das
cwde
ss
inc
and
aam
dec
xor
inc
mov
out
push
cli
addr16
xor
jmp
pop
sbb
mov
fcmovu
jecxz
push
xchg
mov
inc
inc
dec
aas
in
jecxz
mov
sub
jo
loop
mov
mov
jae
jmp
mov
mov
adc
(bad)
or
sbb
push
and
cli
enter
cmp
test
imul
add
out
sahf
or
aas
out
jecxz
dec
add
sbb
cmps
sbb
jp
mov
leave
cs
imul
push
xchg
cmp
out
add
scas
ins
fbstp
fnsave
pop
sbb
cld
pop
mov
in
cmp
push
jnp
or
out
mov
pop
cmp
adc
enter
xchg
and
mov
mov
xlat
mov
sar
pop
mov
or
push
mov
(bad)
jmp
jge
cmps
inc
movs
cwde
pop
pop
movs
sub
loop
adc
sti
pusha
jno
arpl
shl
cwde
jno
arpl
arpl
cmc
sbb
sub
jo
jle
movs
and
mov
rcr
stc
pop
jge
cmp
push
(bad)
rcr
jecxz
mov
xor
cmps
int
(bad)
push
ror
mov
iret
add
pop
add
aas
dec
cmp
int
cmc
cdq
in
jne
loope
rcl
push
or
fild
lods
xchg
rol
std
xor
mov
and
mov
out
fstp
adc
sahf
pop
cmps
cld
(bad)
adc
leave
push
cs
xchg
loopne
sti
adc
push
movs
or
push
add
clc
mov
sub
stos
xchg
jno
and
sub
pop
data16
cld
shl
test
sub
add
pop
(bad)
lea
mov
fiadd
pop
in
mov
jmp
loopne
rol
sbb
dec
push
sti
gs
push
movs
push
hlt
jg
mov
cmp
retf
les
movs
call
rcl
pop
cwde
fs
add
push
(bad)
sbb
(bad)
in
leave
int
xor
xlat
mov
add
xchg
cmp
inc
xchg
popa
and
sub
dec
jmp
rcr
adc
into
lds
inc
js
mov
imul
ret
ror
and
lds
mov
test
and
cdq
push
pushf
xor
fs
stos
stc
sar
shl
adc
mov
cmp
mov
cmps
adc
fcompp
cld
cld
sbb
jmp
int3
adc
xor
jg
dec
shl
push
test
mov
jl
int3
mov
and
adc
sub
pop
cmp
cli
call
out
sbb
adc
ret
(bad)
mov
scas
stc
mov
pop
adc
ret
inc
repz
cmp
loope
lods
adc
pop
addr16
jl
pop
movs
jecxz
cmp
test
inc
inc
mov
mov
mov
mov
neg
or
pop
mov
jg
in
cmps
stc
sbb
test
pop
std
sub
pop
retf
call
mov
ins
sbb
cmc
cmp
mov
stos
cld
lea
cdq
and
repnz
mov
mov
push
popf
stc
dec
das
rcl
scas
jge
mov
add
inc
icebp
add
iret
xchg
iret
dec
push
sbb
adc
mov
je
sub
and
add
xchg
test
pop
or
scas
movs
std
cld
dec
or
jecxz
dec
sub
(bad)
add
stos
mov
ss
xor
and
inc
xchg
xor
inc
and
dec
jecxz
ret
mov
popa
shl
dec
nop
cmp
hlt
rol
sbb
out
sub
popf
adc
pop
lods
(bad)
push
xor
test
xor
imul
mov
or
mov
iret
leave
xchg
das
or
xor
pusha
mov
add
jmp
push
cs
jl
imul
lea
xchg
in
aad
pop
or
stos
sar
rcr
pushf
(bad)
push
ret
mov
push
push
jge
push
adc
cld
inc
mov
and
cmp
fs
xchg
mov
add
test
daa
push
fdivr
inc
dec
xor
outs
pop
sub
daa
mov
cmp
fstp
pop
xchg
jecxz
and
xor
xor
bsf
jne
cld
aad
stos
scas
out
out
and
sahf
test
mov
js
(bad)
sub
and
fwait
cmp
rcr
push
xor
sbb
adc
test
or
gs
push
ins
jmp
xchg
test
outs
push
out
dec
pop
pop
shr
in
pop
stc
popf
in
stos
gs
jns
fcmovne
lock
push
xor
test
dec
mov
hlt
out
jbe
dec
leave
and
inc
aad
push
leave
int3
add
jnp
mov
mov
call
ins
jnp
fnstenv
xchg
std
mov
mov
and
cmp
in
(bad)
mov
stos
rol
xchg
test
cmp
mov
shl
fmul
jae
jge
sub
pusha
pop
mov
retf
mov
and
mov
pop
push
icebp
push
mov
stc
out
int3
movs
loope
icebp
scas
stos
addr16
in
aaa
mul
sub
popa
pusha
xor
mov
data16
dec
call
dec
jns
sbb
jne
adc
sbb
or
sbb
push
test
inc
stc
nop
inc
out
jecxz
js
loope
push
cs
lock
sub
mov
sar
adc
xchg
nop
inc
mov
mov
adc
mov
mov
jle
xchg
and
mov
cdq
xchg
imul
fidiv
scas
mov
jp
jmp
inc
repnz
pop
or
aad
mov
or
pusha
sub
pusha
icebp
xchg
dec
dec
inc
pop
scas
js
xchg
dec
dec
cdq
test
mov
cmps
sub
les
xchg
ret
adc
mov
mov
rcr
icebp
enter
inc
je
jg
test
movs
fbstp
mov
ret
inc
cmc
adc
fadd
outs
jno
scas
outs
sbb
xlat
sti
fs
mov
mov
sub
xchg
sbb
fsub
push
xchg
imul
mov
fbstp
stos
into
mov
out
nop
fstp
jo
xlat
(bad)
mov
xor
cld
mov
fisubr
repnz
scas
stc
sahf
(bad)
lock
sub
lods
rcl
cmp
pop
inc
xchg
js
or
inc
and
(bad)
jecxz
cmc
mov
mov
ds
cmp
retf
xchg
stos
dec
rcl
or
fdiv
add
mov
leave
stos
jmp
xchg
adc
sbb
call
xchg
xchg
int3
or
fisttp
(bad)
in
push
nop
inc
push
xchg
pop
add
call
jae
pop
adc
retf
loop
int3
push
lods
mov
test
ret
adc
(bad)
cmp
dec
pop
jae
cmp
and
push
wrmsr
push
sbb
jmp
sub
adc
xlat
jbe
lds
loope
add
mov
push
mov
fiadd
es
or
pop
shl
xlat
ja
ds
and
aaa
cli
rcl
imul
sahf
add
sahf
jae
adc
dec
cmps
jl
bnd
jae
mov
call
dec
mov
xchg
data16
pop
(bad)
cmps
movs
mov
xchg
ins
not
dec
enter
xor
xor
xor
push
push
mov
aam
sar
or
adc
adc
(bad)
bound
test
push
int3
sbb
fist
xchg
xchg
hlt
lahf
icebp
add
popf
imul
xchg
into
xlat
sbb
dec
xchg
enter
pushw
dec
add
inc
mov
dec
push
dec
sbb
jmp
daa
dec
daa
xor
repz
cmp
aaa
push
pop
and
mov
jbe
sub
pop
fdiv
or
adc
movs
mov
push
sbb
leave
xchg
fcomp
fstp
bound
int
jecxz
aaa
pop
jae
test
in
and
imul
and
lods
fucomi
xor
mov
xchg
lock
inc
push
push
sti
in
add
test
inc
leave
jns
repz
push
leave
ja
xchg
inc
cmp
stos
ficomp
jg
mov
out
ret
mov
inc
pop
mov
or
add
mov
adc
dec
pop
xor
shl
es
cs
jecxz
adc
sbb
inc
not
push
lahf
in
ja
push
inc
aas
pop
adc
dec
in
or
fisttp
dec
and
loopne
xor
xor
inc
sub
lock
and
nop
dec
int3
push
loop
je
rcr
enter
xor
mov
sbb
mul
xchg
inc
jns
inc
sub
jecxz
jg
repnz
ss
inc
div
outs
jecxz
outs
mov
cmp
push
ror
fs
or
cmps
movs
pop
adc
enter
push
(bad)
cmc
xchg
dec
fwait
in
inc
(bad)
mov
es
sahf
push
xchg
push
jmp
and
dec
sub
pop
mov
(bad)
sbb
fcmovu
ins
xor
out
xchg
xchg
aad
cmp
xchg
xor
push
sar
cld
cmp
mov
call
mov
mov
(bad)
icebp
jp
pop
sub
imul
pop
cwde
scas
push
mov
cld
lods
repz
enter
or
push
push
sub
add
mov
jl
inc
adc
das
mov
xchg
mov
add
aas
pop
int3
push
adc
sub
in
adc
xchg
mov
push
iret
movs
mov
jae
jle
int
inc
call
inc
mov
cwde
push
rsm
aaa
sar
sahf
jo
lock
cmp
mov
loope
hlt
aad
imul
mov
push
in
inc
adc
(bad)
cmc
xlat
imul
mov
cmp
cmp
bound
lds
and
lea
mov
sub
cmp
ret
jp
ja
loop
movs
mov
jo
cdq
jns
push
fidiv
movs
in
stc
jecxz
inc
cmp
inc
cmps
mov
inc
pop
pop
lahf
imul
lds
adc
retf
sub
or
xchg
retf
adc
scas
loopne
call
popa
dec
mov
xlat
xchg
icebp
pop
dec
mov
mov
xchg
aam
xor
imul
loop
aam
pop
int3
xchg
sbb
movs
retf
outs
rcl
stos
cld
mov
cmp
push
jae
mov
push
jge
jle
ret
push
push
lods
jge
into
adc
push
xchg
xchg
jl
mov
loope
mov
push
adc
sbb
inc
add
and
aas
cmps
push
push
mov
add
or
adc
(bad)
mov
nop
es
add
dec
ror
ds
mov
les
pop
xchg
dec
mov
lock
push
test
fld
pop
mov
retf
fnstcw
sbb
sbb
sahf
imul
rcr
(bad)
mov
xchg
movs
jmp
lods
xor
xchg
test
inc
les
out
loope
inc
pop
sub
enter
int3
xlat
inc
iret
fist
loop
xchg
xor
inc
and
pop
adc
xor
jl
jbe
inc
adc
imul
gs
xor
inc
add
ja
dec
and
into
and
aas
fxch
jmp
fisttp
sub
aaa
cld
dec
mov
js
mov
push
pop
outs
enter
or
out
xor
push
movs
out
mov
cmps
mov
stos
cmp
cmc
pushf
mov
xor
adc
iret
adc
(bad)
pop
mul
xchg
sbb
hlt
add
cmp
sub
movs
loop
fldenv
mov
nop
dec
(bad)
movnti
xchg
inc
and
fsubr
cmc
adc
in
mov
jne
adc
or
aam
and
adc
fs
in
jmp
shl
cli
mov
sbb
daa
cwde
out
outs
mov
jb
leave
xchg
sbb
or
pushf
test
gs
outs
in
fistp
cs
push
or
jns
cli
fdiv
dec
xor
neg
jno
mov
lds
cmps
sub
or
out
xchg
add
ficom
cld
dec
jg
jmp
mov
in
test
xchg
cmc
add
mov
push
push
fdivr
xchg
cld
and
adc
cmp
ror
imul
fsub
push
aas
jp
gs
cli
mov
mov
jne
adc
test
cs
ficomp
xor
stos
mov
cs
bound
mov
cmp
fnstenv
xlat
jmp
push
or
sbb
adc
retf
sbb
xor
jl
xchg
mov
(bad)
test
scas
adc
rol
sbb
jge
shr
sub
xchg
fs
jb
cmp
aas
daa
jae
lods
daa
out
(bad)
jbe
xchg
jbe
repnz
xchg
mov
(bad)
jae
add
int
xor
mov
data16
dec
adc
dec
arpl
lods
mov
and
mov
add
shr
jno
cmps
sbb
add
pop
push
xchg
ins
push
push
dec
xchg
fisubr
sub
lahf
sub
fistp
out
cmp
cmps
movs
jo
jecxz
cmps
test
jb
jae
ret
jnp
sub
xor
inc
jge
cdq
loop
aas
mov
in
stos
in
inc
retf
sbb
push
push
dec
xor
add
xor
adc
mov
xchg
mov
mov
icebp
pop
cmc
inc
xor
arpl
jb
push
xcrypt-ofb
cmps
das
inc
and
xchg
pop
mov
dec
pop
in
lahf
pop
cmp
sub
jl
dec
pop
jnp
jno
and
xchg
addr16
pop
fsub
fnstenv
ja
pop
cld
fwait
jmp
dec
xor
clc
xor
(bad)
fdiv
shr
mov
cmp
lods
lea
out
movs
inc
idiv
test
pop
jle
lds
mov
jmp
dec
imul
adc
stos
xchg
or
sbb
and
into
fnstsw
dec
shr
push
mov
aaa
lock
mov
xlat
add
xor
xchg
cld
add
jecxz
aaa
pop
jb
jne
mov
and
dec
inc
mov
neg
ins
pop
pusha
sbb
loopne
inc
or
lea
pusha
mov
jb
loop
xchg
push
inc
mov
xor
jle
sbb
adc
push
or
cmp
in
jae
cmc
int
pop
or
sbb
mov
pop
or
imul
push
data16
fisub
hlt
loopne
sbb
pusha
call
call
xor
cwde
push
std
hlt
pop
stos
std
nop
or
(bad)
je
cmp
and
sub
jae
not
lds
hlt
retf
fdiv
dec
in
mov
fiadd
je
stos
fwait
retf
adc
inc
push
and
ret
popa
adc
cmps
push
or
sbb
ret
sti
repnz
fwait
dec
das
jle
inc
and
jg
arpl
(bad)
mov
in
ds
sbb
iretw
ret
cpuid
sar
mov
fidiv
jnp
mov
cmps
call
sbb
xlat
pop
inc
ffree
mov
sub
sahf
dec
out
cld
idiv
jne
pop
jmp
push
xor
fist
or
rcr
mov
inc
adc
arpl
mov
into
mov
xchg
mov
jle
add
mov
scas
ins
addr16
jl
pop
push
and
popf
mov
fmul
in
stc
rol
out
and
dec
push
(bad)
in
fsubr
sbb
sub
loopne
adc
push
jmp
xor
cmp
inc
sbb
das
lock
retf
push
je
pop
push
dec
std
je
jg
push
push
jb
xor
push
(bad)
lea
push
xchg
sub
(bad)
fild
jmp
push
push
es
lock
xchg
cmp
stos
leave
mov
mov
xor
neg
xchg
xor
or
jno
xchg
pop
stc
js
(bad)
or
aaa
dec
cmp
jle
mov
pop
addr16
jge
fwait
cli
outs
or
mov
loope
mov
pop
lahf
cmp
and
dec
nop
xor
pop
pusha
pop
jg
adc
adc
stos
aaa
adc
cs
adc
mov
mov
inc
fsubr
jnp
push
jmp
add
(bad)
icebp
add
inc
add
inc
enter
mov
or
push
rcr
cmp
pop
xchg
sub
je
(bad)
enter
xor
ret
lods
inc
xor
repnz
mov
adc
xor
xor
push
xchg
inc
test
rol
or
sub
gs
add
push
or
cld
cmps
and
xor
push
in
dec
stc
fidivr
push
shl
sbb
std
and
mov
push
lods
ja
fsubr
xor
sub
fsub
mov
repnz
movs
adc
addr16
xor
mov
push
rol
retf
js
(bad)
fwait
retf
mov
mov
rcr
test
mov
gs
mov
inc
cmp
in
inc
push
(bad)
cmp
(bad)
enter
sub
sub
push
xor
sub
shr
mov
add
mov
mov
mov
imul
cli
jae
xor
gs
sbb
xlat
gs
pop
pop
fld
mov
sbb
aas
dec
(bad)
sub
lods
jg
sub
adc
les
mov
jnp
enter
pusha
aam
imul
inc
dec
lahf
fsubr
mov
jno
sbb
iret
out
sbb
mov
mov
adc
sahf
dec
inc
outs
aaa
scas
add
push
repz
repz
frstor
sbb
jno
push
ins
ins
cld
jmp
call
push
(bad)
and
int3
ret
out
push
call
leave
mov
popf
or
ins
popa
dec
add
or
icebp
call
rcl
mov
jae
popa
cmps
jbe
arpl
loopne
jmp
cvtpi2ps
sub
dec
and
mov
je
xor
mov
dec
push
into
and
ins
out
adc
sub
cmp
add
add
xchg
dec
sub
scas
daa
add
mov
inc
sbb
xor
pop
xchg
in
ret
inc
sbb
jge
sub
jg
les
inc
mov
sub
cmp
fistp
or
jmp
push
inc
push
xchg
mov
dec
sbb
ins
dec
fbstp
sbb
mov
mov
repnz
jle
mov
and
and
pop
fsub
es
in
(bad)
out
or
pop
aam
popf
mov
xor
lods
sub
and
and
into
mov
mov
cld
je
das
and
xchg
in
popa
int
cs
and
add
xchg
push
jg
mov
call
fwait
mov
stos
push
xchg
ret
in
cmc
xlat
nop
mov
aam
inc
sbb
mov
adc
(bad)
mov
xor
cmps
inc
jb
(bad)
lahf
js
sub
dec
pushf
inc
or
and
enter
(bad)
sti
xchg
xor
fnstcw
mov
mov
push
jg
mov
hlt
or
xor
push
test
cmp
and
inc
jmp
mov
jb
popf
inc
ret
mov
dec
rol
adc
adc
lahf
mov
add
pusha
pop
or
and
in
and
mov
xor
ret
jp
inc
ss
(bad)
fnstenv
adc
fwait
adc
leave
inc
inc
inc
sub
enter
stos
add
or
mov
rcr
adc
push
dec
fcom
xchg
dec
xor
mov
cwde
into
sbb
imul
clc
test
xor
sti
call
pop
xor
xlat
push
fstp
mov
sti
inc
mov
mov
cs
xchg
add
inc
xor
jns
ret
mov
mov
pop
mov
and
icebp
sub
std
adc
shl
xchg
pushf
or
into
(bad)
sub
(bad)
sub
push
xchg
aas
cmps
lock
mov
(bad)
nop
shl
pop
(bad)
sti
in
push
adc
in
and
imul
lds
test
in
int
and
pop
bound
(bad)
sub
push
xchg
mov
mov
mov
pushf
stos
jmp
inc
std
icebp
ins
(bad)
js
aaa
repnz
sahf
jecxz
add
mov
dec
or
jns
das
aad
mov
test
jp
mov
fsubp
ss
mov
dec
mov
adc
stos
sbb
xchg
repz
mov
and
push
scas
and
mov
retf
inc
pop
xor
add
ins
jno
arpl
in
sub
mov
mov
mov
test
imul
cmps
cmp
int
inc
fdiv
shl
sbb
push
jmp
cld
mov
xchg
nop
bound
sbb
dec
cmp
(bad)
pop
mov
cs
mov
fdiv
or
test
sbb
scas
xor
int3
inc
mov
and
ins
retf
pop
pop
dec
jo
jecxz
out
dec
out
xchg
bound
jmp
(bad)
sub
aas
(bad)
xchg
pop
out
fmul
mov
es
pop
js
fadd
stos
push
cmps
ficomp
icebp
mov
sbb
(bad)
std
adc
test
xchg
cmp
test
cli
ja
fnsave
sahf
stc
popa
in
shl
adc
pop
adc
ret
dec
inc
inc
inc
and
fisub
call
mov
mov
and
dec
sub
mov
cli
ret
sub
stos
aad
jo
pop
inc
shl
push
(bad)
or
jge
fbld
ror
test
popa
mov
push
cmp
xchg
cmp
dec
xchg
mov
inc
daa
retf
or
inc
jecxz
push
and
cmp
push
pop
jg
mov
cmps
loopne
bnd
adc
and
outs
cmp
pop
mov
add
jo
mov
mov
(bad)
sub
test
inc
pop
jns
jnp
mov
shl
or
pop
inc
xor
shl
xlat
add
addr16
pop
mov
and
js
call
xchg
lods
test
je
xor
js
mov
iret
test
fiadd
push
pop
into
test
sahf
inc
popa
repnz
push
push
push
mov
aaa
or
jbe
leave
rcl
in
imul
hlt
into
fistp
mov
(bad)
sti
imul
fwait
jo
dec
pop
sar
arpl
mov
pop
test
stc
inc
fist
jnp
sbb
js
push
pusha
sahf
repz
test
cmp
cmp
sti
xchg
mov
(bad)
rcr
jl
pop
retf
aad
stc
mov
sti
or
pop
inc
sub
stc
mov
mov
xchg
xchg
out
jb
push
dec
xor
jo
pop
xor
push
inc
pop
push
cmp
mov
xor
ficom
popa
ds
pusha
pop
nop
aad
popa
fmul
(bad)
add
adc
adc
adc
and
jl
push
xor
sar
iret
jmp
ss
push
adc
mul
stos
bound
xor
loopne
jp
adc
xor
jne
pop
in
out
or
jmp
push
call
inc
xor
icebp
repz
push
out
test
bound
mov
sub
jno
enter
pop
(bad)
xor
outs
mov
pop
jns
pop
and
adc
mov
mov
jnp
inc
jl
inc
jmp
cmp
push
cmp
sbb
sbb
stos
test
add
mov
adc
cld
and
mov
jmp
sub
sub
xor
sub
jmp
ss
pop
fbld
jns
popf
arpl
push
jae
adc
mov
int3
sub
pop
imul
dec
into
cmp
push
push
add
retf
and
mov
inc
adc
lock
pop
mov
std
push
or
mov
inc
or
frstor
and
xchg
inc
push
xchg
out
in
aam
mov
jle
jbe
ret
pusha
push
inc
js
dec
gs
mov
clc
repz
(bad)
mov
(bad)
pushf
add
popf
cld
pop
mov
push
(bad)
retf
fwait
mov
loopne
or
(bad)
lods
leave
jmp
sub
int
aad
and
dec
out
es
and
in
xor
xor
sti
pusha
fidiv
push
sbb
dec
lods
xor
jmp
mov
push
sub
addr16
dec
je
xor
push
push
in
lock
fist
push
and
test
mov
pop
push
mov
mov
not
adc
jp
ss
sbb
push
add
lods
add
(bad)
fsubr
test
repnz
pop
mov
cdq
idiv
adc
jno
imul
jbe
sbb
pushf
sahf
mov
xchg
fisttp
adc
imul
mov
loopne
xchg
mov
leave
sbb
mov
enter
test
mov
repz
jle
(bad)
pushf
inc
aad
dec
push
jmp
jecxz
inc
or
js
inc
sbb
jle
scas
jmp
jmp
adc
lods
or
repnz
xor
shl
outs
popf
pop
dec
pop
xchg
arpl
xchg
dec
ds
lods
or
jmp
outs
push
clc
sbb
mov
fdiv
stos
es
popa
lock
pop
shl
pop
out
adc
inc
clc
jge
loop
mov
ret
dec
and
jg
xor
inc
inc
int
and
mov
xchg
and
and
and
rcr
fistp
stos
xor
sub
push
inc
inc
mov
inc
cmps
jl
jecxz
lea
pop
rcr
mov
and
test
call
clc
xchg
inc
call
dec
out
rol
fisubr
pop
sahf
fwait
mov
mov
sbb
jmp
dec
stos
fcomp
fs
mov
in
dec
sub
stos
mov
mov
xchg
retf
stos
pop
pop
xor
retf
push
add
ret
xchg
mov
mov
das
push
add
jns
or
push
repnz
ret
loope
mov
jns
bound
pop
and
push
fcomp
adc
mov
outs
jmp
(bad)
lea
cmp
imul
test
adc
dec
pop
cmp
or
mov
sbb
jbe
dec
jnp
cli
jmp
sbb
inc
ror
pop
pop
or
push
dec
jle
scas
dec
mov
or
(bad)
int
test
gs
ficomp
jo
xchg
inc
xchg
mov
push
mov
sahf
mov
sub
test
hlt
repz
cmp
mov
jns
mov
mov
or
pop
add
or
lock
jecxz
ins
inc
sbb
or
lods
or
shr
mov
ret
mov
fs
pushf
and
xchg
retf
in
mov
retf
dec
pop
loopne
dec
jg
pop
jmp
mov
xor
daa
ficomp
lods
enter
cmp
jmp
sbb
dec
into
pop
push
les
sar
inc
ss
cmp
leave
cld
xor
push
dec
xchg
ss
retf
or
lea
test
fs
in
mov
call
movs
out
push
push
bound
out
pop
or
push
fwait
lea
cmp
loopne
rcr
dec
jnp
lods
call
add
mov
cmp
clc
popf
jg
movs
sub
add
(bad)
fld
and
xor
out
loop
sub
xchg
push
xchg
lds
mov
xchg
int3
popf
pop
and
push
rcl
and
fstp
jmp
stc
push
dec
pop
cmp
sahf
xchg
sub
add
rcr
sub
pop
test
and
scas
or
lods
jp
stos
loope
and
stos
xlat
jbe
pop
dec
xor
cdq
cmp
leave
fstp
(bad)
dec
pop
sbb
loop
xlat
mov
fidiv
dec
add
pop
repnz
leave
pop
popf
add
mov
push
test
call
mov
jmp
dec
gs
mov
cld
repz
push
cs
push
out
mov
adc
popa
ret
outs
add
cs
xchg
push
and
fstp
imul
cdq
sti
cmps
ror
push
xor
in
fidivr
call
push
rcr
cli
daa
sbb
scas
sub
inc
adc
(bad)
cld
adc
mov
mov
cmp
jl
das
das
cmp
in
popa
jnp
test
call
es
xor
pop
mov
jbe
xor
inc
mov
jl
into
push
mov
jbe
push
push
dec
fst
cmp
into
test
sti
test
xchg
fdivr
adc
out
hlt
int
adc
icebp
cmp
pushf
sub
scas
dec
ins
rcr
pop
and
int3
out
jge
dec
and
mov
mov
xor
iret
xchg
jae
mov
mov
ficomp
sbb
mov
adc
xchg
xchg
ret
mov
fdiv
and
enter
pop
pop
stos
ins
mov
dec
mov
das
mov
sahf
jo
cmc
add
fcomp
sbb
sub
push
imul
jnp
xchg
bts
add
pop
jne
sbb
pop
mov
stc
push
xchg
mov
adc
fst
inc
test
scas
fmul
xor
in
lock
sub
add
add
js
dec
mov
es
push
jne
jg
std
or
push
test
ret
ins
movs
nop
mov
je
in
push
or
gs
or
cmps
fisttp
jge
mov
(bad)
out
ins
outs
pop
(bad)
cmp
imul
sub
movq
les
sbb
push
mov
cmps
sub
jle
adc
jp
test
push
push
mov
jp
stc
je
cmps
sbb
pushf
jl
pop
aam
cmps
xchg
imul
fwait
stos
sub
adc
push
in
xchg
adc
mov
fiadd
sbb
daa
add
leave
loopne
jns
inc
xchg
dec
sbb
jne
mov
xchg
adc
loope
xchg
(bad)
adc
in
adc
xchg
fadd
fcmovnb
xchg
mov
stos
add
movaps
daa
mov
cmp
pop
jno
pop
in
mov
jb
movs
sub
out
pop
inc
call
xor
and
push
xor
int3
ds
mov
and
mov
mov
jg
inc
(bad)
push
call
clc
or
inc
stc
sbb
push
mov
cmp
fistp
imul
jecxz
xchg
out
and
cmc
pop
jne
sub
adc
rcl
dec
or
jb
sub
add
shl
mov
adc
xchg
ins
jecxz
mov
jnp
cmp
mov
(bad)
inc
fcmovnb
into
lock
xor
sbb
fnstenv
adc
dec
pushf
imul
xor
pop
fs
xchg
and
aam
gs
mov
mov
inc
pop
cmps
ret
ja
add
push
xchg
sub
sub
arpl
mov
mov
push
loopne
jae
mov
jg
ret
nop
dec
lods
inc
pop
fld
bound
cmp
inc
adc
mov
sub
ins
das
add
dec
dec
mov
mov
rcr
mov
cmc
add
bound
dec
sbb
out
and
popa
sar
fld
arpl
mov
lock
pop
jmp
add
sub
fbstp
mov
pop
into
sbb
hlt
sub
mov
and
sub
mov
cdq
(bad)
ins
jg
xor
int
dec
repnz
mov
lea
jecxz
mov
xchg
jne
repz
daa
mov
xor
sar
and
jnp
cld
xor
push
lods
add
call
icebp
mov
add
retf
cmp
out
mov
sahf
shl
or
sbb
(bad)
adc
(bad)
hlt
dec
(bad)
push
mov
fldenv
fbstp
sti
dec
outs
inc
sub
out
push
inc
push
push
add
repnz
lea
xor
push
mov
add
repz
adc
ins
stos
add
xchg
add
xchg
cs
cmc
add
cmp
pop
dec
ret
test
xor
pop
cmps
addr16
loope
or
fmul
div
xor
or
fwait
ds
xchg
mov
jmp
sub
les
mov
cmps
pop
aad
scas
sbb
call
ret
jle
mov
inc
lea
xchg
and
sub
pop
mov
cmp
jb
sub
cmp
or
stos
div
xchg
xchg
sub
mov
popa
sub
or
aam
lods
jb
retf
jbe
mov
fiadd
sub
mov
add
jmp
sub
in
frstor
call
push
jg
cmp
xor
aas
pop
js
cmp
div
jae
sub
push
sub
movs
(bad)
rol
jg
cli
adc
movs
std
pop
jb
dec
mov
pop
jmp
add
mov
enter
js
add
icebp
jg
dec
aad
push
addr16
icebp
lahf
cdq
inc
aam
repnz
fstp
retf
daa
lods
dec
or
push
jnp
je
repnz
xor
add
pand
out
rcl
rcl
ins
retf
mov
das
jmp
add
mov
arpl
mov
xor
outs
jl
movs
adc
call
shl
cmp
cmps
add
push
fadd
iret
push
test
aam
loopne
call
ffree
jl
nop
pop
dec
inc
push
mov
mov
jae
mov
jp
adc
es
mov
jo
cs
fwait
int
push
scas
jns
sbb
sbb
xchg
push
pushf
out
int3
pminsw
cs
sub
icebp
and
test
sbb
mov
scas
aaa
mov
push
jne
sbb
aas
jbe
mov
push
sti
lea
cmc
int
jecxz
int
inc
cs
mov
mov
xlat
imul
cmp
(bad)
jmp
mov
mov
cwde
fidivr
mov
leave
pop
inc
fisubr
call
aas
call
inc
test
fisttp
add
cli
mov
mov
push
test
aad
loope
enter
add
(bad)
das
out
(bad)
jp
sbb
jle
or
das
pop
ficom
xchg
mov
cld
sub
jle
cli
dec
ds
mov
dec
iret
fcomp
jbe
push
xchg
inc
mov
or
add
jg
and
xor
dec
inc
and
adc
cmp
int
mov
pusha
add
js
push
aad
cmp
(bad)
out
rcl
inc
in
jge
push
jecxz
pop
stos
sbb
in
xchg
cmc
loop
sub
addr16
retf
push
inc
popf
adc
mov
adc
jnp
pushf
xor
mov
xor
pop
lods
pushf
adc
(bad)
rcl
xor
jmp
jg
mov
xchg
mov
xor
cmp
inc
(bad)
jo
fucom
daa
(bad)
test
dec
xor
(bad)
sahf
dec
or
in
pop
add
das
stc
movs
adc
outs
sbb
adc
shr
(bad)
movs
es
mov
and
test
das
cmps
stos
sahf
add
in
aaa
adc
hlt
xchg
sbb
mov
jg
rol
out
int3
and
imul
(bad)
cmp
cwde
add
pop
stos
mov
push
mov
pop
push
push
je
xchg
inc
scas
fcmovne
adc
stos
push
cmp
and
inc
popa
mov
shl
dec
sbb
dec
mov
jbe
inc
popa
lods
pop
fistp
push
mov
aaa
mov
(bad)
and
pop
pop
mov
push
xchg
pop
mov
dec
and
xor
mov
pop
mov
jmp
cld
adc
and
sub
paddq
xor
pop
jge
out
jecxz
jnp
dec
mov
jb
mov
cmp
shrd
shl
popa
and
sub
sub
test
or
scas
dec
rcl
jno
dec
sahf
adc
xchg
test
test
inc
and
mov
jb
fst
adc
out
aaa
scas
(bad)
mov
cmp
push
cmp
mov
adc
sbb
sti
or
inc
cmps
ins
jmp
push
sbb
jl
int3
addr16
inc
sub
das
into
aas
aad
push
push
(bad)
aaa
sub
je
mov
sub
test
out
scas
mov
xlat
cmps
loopne
in
arpl
push
ret
dec
ins
or
loop
jp
push
je
mov
mov
cwde
or
push
in
ins
cmp
jg
clc
retf
movs
mov
lea
pop
or
(bad)
loop
xchg
arpl
cmp
cdq
inc
cmp
cwde
jp
pop
mov
push
je
dec
pop
or
repz
xor
hlt
and
inc
pop
and
enter
int
cwde
push
ret
adc
jl
into
test
(bad)
mov
and
std
ret
push
or
push
fcomi
lahf
jnp
sub
and
push
movs
xor
fstp
dec
sbb
mov
cmp
jnp
test
mov
inc
loop
mov
cdq
jmp
add
lahf
retf
jg
loop
cmps
lods
sar
dec
add
inc
ja
pop
hlt
test
int3
mov
aaa
xor
push
mov
push
cmps
push
lds
jmp
push
mov
and
or
and
fist
rol
mov
fs
call
xchg
jnp
in
sahf
mov
ins
imul
stos
dec
sti
jno
mov
push
jmp
enter
imul
inc
ret
cwde
and
out
cwde
call
pop
xor
or
push
push
sbb
fisttp
mov
mov
push
repnz
enter
sbb
or
or
cmp
sbb
fwait
(bad)
out
movs
fwait
int
lahf
call
adc
(bad)
call
push
icebp
xchg
stc
bound
out
sahf
xor
or
mov
cmps
mov
mov
(bad)
xor
mov
out
pop
and
jp
cmp
mov
mov
out
adc
or
repz
sub
pop
mov
or
push
sub
push
mov
push
in
jg
(bad)
sub
cwde
push
pop
push
int
pop
xchg
mov
add
leave
movs
push
cmps
sub
xor
pop
mov
ret
call
rcl
dec
enter
gs
(bad)
or
jns
mov
xor
pop
cmp
pop
inc
and
fld
mov
jbe
cdq
into
mov
inc
inc
or
test
xchg
gs
fxch
mov
iret
pop
or
ins
div
out
inc
adc
mov
and
push
fsubr
xchg
inc
mov
xchg
and
dec
daa
xchg
dec
xor
std
cmp
pop
mov
push
pop
dec
sbb
pop
mov
add
pop
mov
fs
ficom
(bad)
sbb
xchg
cmp
dec
shl
out
dec
shr
mov
aad
xlat
stos
movs
mov
adc
push
mov
cld
dec
aad
test
call
or
sub
and
das
inc
cmp
imul
or
adc
xchg
test
in
adc
push
mov
stc
popf
push
push
mov
in
loope
je
pop
test
jmp
pop
ja
pop
ds
push
mov
xchg
jns
cmp
mov
aad
mov
jno
enter
iret
and
dec
xor
mov
add
aaa
mov
movs
jb
adc
xor
push
push
pop
shr
shr
inc
mov
adc
stc
fld
outs
push
xchg
mov
out
cli
mov
inc
inc
push
sub
cmp
mov
gs
fbstp
cmc
and
(bad)
push
mov
in
sar
pop
(bad)
and
sub
xor
mov
dec
pop
out
push
add
clc
sub
out
fidivr
jns
inc
ficom
popf
xor
sub
pop
test
jnp
scas
(bad)
jg
dec
(bad)
mov
imul
mov
jl
mov
retf
aaa
adc
jmp
dec
js
sbb
add
push
test
addr16
daa
add
call
xchg
mov
inc
mov
in
das
daa
mov
mov
out
xchg
jmp
adc
rol
sti
or
push
in
ins
xor
sub
pop
leave
adc
or
and
sbb
ficomp
mov
sbb
mov
mov
jne
sti
add
cmps
scas
sbb
idiv
adc
(bad)
push
mov
retf
xchg
mov
fwait
ret
int3
sbb
push
cmc
or
imul
jmp
loopne
mov
jecxz
sbb
aaa
jge
jp
loop
es
xlat
mov
iret
daa
push
push
mov
pop
adc
xchg
retf
test
js
or
xor
lods
add
jmp
mov
xchg
cmp
cmovb
cmps
pop
retf
adc
jnp
into
aaa
sbb
aas
lds
adc
sub
and
dec
push
(bad)
mov
cld
adc
pop
and
test
mov
repnz
jecxz
jg
adc
call
shl
test
in
aas
pop
pop
loope
push
mov
sbb
aas
rcr
xchg
ins
(bad)
dec
test
push
mov
ds
inc
(bad)
call
cmc
or
iret
jbe
and
dec
mov
xchg
and
das
sbb
or
pop
lock
or
jae
push
sti
mov
shl
out
adc
sub
aad
jge
or
mov
pop
mov
mov
push
lock
pop
mov
dec
dec
and
into
sahf
repz
xchg
mov
je
sbb
iret
or
and
adc
add
in
(bad)
ds
xor
sti
or
rcl
dec
aad
dec
inc
push
add
cmp
dec
sbb
retf
jmp
mov
jge
out
movs
add
rcl
adc
sub
mov
mov
pop
movs
jns
sahf
pop
mov
cmp
sbb
and
jo
mov
movs
sbb
dec
sub
out
in
test
and
xchg
xchg
outs
mov
dec
mov
cld
mov
fsubrp
sub
cmp
push
jne
inc
inc
sub
add
xchg
dec
xchg
pop
jecxz
nop
sbb
mov
scas
mov
je
adc
scas
sahf
lods
jg
sahf
adc
jbe
imul
inc
leave
imul
out
or
ins
inc
sbb
je
mov
mov
and
arpl
pop
dec
lods
xchg
jp
not
sahf
and
(bad)
repnz
adc
mov
push
mov
(bad)
fstp
cmp
lock
ret
xchg
sub
jbe
call
les
xchg
frstor
or
adc
imul
dec
loope
in
mov
xchg
jno
aam
cmp
or
pop
cmp
mov
fdivr
inc
fistp
int
pop
dec
mov
push
scas
mov
jmp
jnp
inc
adc
push
jp
jecxz
mov
add
clc
mov
sbb
out
pop
add
cmp
push
icebp
out
mov
mov
pop
xor
mov
es
jmp
mov
jnp
mov
pop
popf
and
call
or
push
aaa
inc
aaa
fucomip
inc
pop
add
push
pop
(bad)
push
jg
lea
pop
add
out
inc
mov
jmp
sub
ret
push
daa
mov
rsm
(bad)
lock
and
push
and
mov
add
dec
(bad)
push
(bad)
call
fcom
in
stos
dec
outs
add
pop
add
pop
adc
movs
out
add
in
sub
int3
inc
adc
cmp
jle
call
movs
jo
xchg
mov
and
(bad)
fdivr
add
pop
mov
stos
sub
adc
out
stc
lods
std
dec
jmp
add
sub
sub
adc
pop
icebp
push
add
xchg
bswap
or
in
repnz
lea
mov
and
push
lds
lea
cdq
fs
test
push
movs
lea
bound
sub
pusha
in
sbb
mov
add
mov
fwait
pop
mov
jnp
sti
push
xor
cmp
xchg
mov
mov
jb
mov
jp
cwde
sub
xor
dec
push
push
sub
in
add
or
or
inc
cmp
cmp
mov
mov
mov
fdiv
push
mov
cwde
push
in
gs
in
sub
pop
jp
ror
xor
push
sbb
dec
xchg
add
inc
or
inc
shl
inc
in
or
clc
data16
js
ds
cli
mov
gs
pop
mov
fwait
or
(bad)
int3
aam
mov
(bad)
out
imul
(bad)
xchg
jg
and
test
js
ficom
xor
cmp
dec
jle
in
repz
mov
sti
test
adc
aaa
dec
xor
and
std
and
mov
test
loope
shr
out
sahf
mov
pop
repnz
dec
mov
xchg
xchg
lds
jb
repnz
pop
je
mov
push
inc
nop
sub
mov
sahf
mov
dec
mul
or
xchg
les
ins
push
shr
cmc
imul
arpl
loopne
(bad)
dec
mov
and
add
xchg
sbb
in
pop
sub
dec
dec
jmp
inc
jl
pop
lock
add
dec
scas
pop
jnp
ss
sbb
clc
scas
js
cmp
lock
push
ss
pop
cmp
add
jnp
test
pop
inc
cmp
push
mov
jo
fmul
enter
cwde
lods
rcl
cmp
xchg
jb
mov
jo
xchg
sbb
add
fs
cmp
mov
movs
popa
or
ja
pop
and
jne
jge
sub
lea
or
in
sbb
inc
push
jmp
div
xor
mov
int
jle
scas
scas
mov
pop
(bad)
test
test
movs
jmp
push
outs
es
pop
push
(bad)
mov
test
or
adc
and
push
bound
sar
mov
imul
adc
sub
movs
xchg
or
inc
sti
lahf
mov
adc
stos
jb
or
cwde
sub
sbb
adc
and
xor
jnp
leave
mov
(bad)
dec
das
hlt
jmp
ins
out
xchg
mov
retf
ror
popf
dec
stc
mov
aas
add
mov
and
cld
mov
(bad)
popa
fadd
mov
test
sbb
pop
mov
xor
(bad)
stos
mov
movs
sar
das
sbb
jmp
or
cwde
int3
sbb
retf
push
or
imul
xchg
add
test
cdq
push
adc
addr16
fxch
call
mov
mov
sub
int
jbe
ja
ret
shl
mov
(bad)
lods
inc
mov
je
movs
leave
scas
push
int3
fdiv
jp
sub
lock
adc
and
ficom
jmp
pop
mov
adc
call
xchg
lods
out
mov
das
or
sub
lock
loop
lds
div
push
in
sbb
or
mov
dec
pop
cli
xor
fcom
hlt
and
fs
pop
push
sti
push
push
ret
push
shl
test
out
es
pusha
mov
retf
out
xchg
or
sub
xor
and
je
push
xor
ins
add
loopne
in
jae
adc
pop
shl
stos
cdq
sar
pminsw
addr16
fsubr
sbb
das
and
inc
lods
data16
fimul
adc
in
xchg
test
(bad)
repz
frstpm(287
sub
(bad)
aas
test
pop
imul
sub
sub
sub
and
inc
pop
bound
jmp
inc
cmp
inc
push
and
pop
cmp
std
xchg
and
pavgb
mov
inc
xor
inc
pop
mov
push
addr16
push
stos
cmps
pushf
push
out
test
popf
push
add
mov
adc
cs
shl
pop
and
cli
inc
fiadd
clc
add
daa
mov
mov
cmp
jno
imul
ds
sahf
addr16
inc
inc
xor
outs
mov
daa
leave
adc
adc
jno
ja
sbb
jns
sbb
mov
out
and
std
pop
in
xor
add
fistp
cmp
stc
push
shl
push
sub
outs
call
pop
imul
test
sbb
or
push
push
cmp
xchg
adc
mov
ds
addr16
mov
sbb
scas
add
dec
fwait
push
xchg
jmp
jmp
xor
loop
xchg
and
push
sahf
xchg
sub
fwait
into
mov
lods
jns
aam
and
jecxz
and
es
push
inc
xchg
ja
call
pusha
in
push
lds
jmp
jbe
mov
add
jne
ds
in
cmp
adc
push
int3
xor
dec
iret
sbb
sar
outs
mov
cli
out
fcom
and
sub
sbb
lods
or
pusha
rcr
mov
call
ror
xlat
fucomi
(bad)
sti
xchg
shl
data16
cmp
inc
cmp
cwde
popa
and
call
cmp
mov
dec
test
pop
pop
les
xchg
jmp
scas
mov
dec
and
iret
fsubr
fadd
lahf
int
mov
bound
xchg
push
out
mov
push
ins
pop
outs
cmp
pusha
outs
ret
dec
psadbw
nop
mov
aam
sub
fchs
cmp
push
in
add
push
xor
movs
add
sub
outs
or
xchg
ds
neg
repnz
sub
loop
cmp
push
in
fisubr
xor
pop
icebp
push
cs
imul
int3
adc
imul
pop
(bad)
pop
xor
push
dec
daa
mov
sub
ds
sub
inc
push
inc
adc
inc
out
(bad)
inc
push
add
xchg
cld
cs
scas
lea
dec
sbb
cld
std
push
push
jmp
xchg
push
inc
push
sbb
mov
rol
sbb
fnstcw
icebp
sub
ret
sub
sub
xor
mov
js
jb
xchg
hlt
sub
sahf
ret
pop
ins
mov
ret
pop
ret
stos
or
rcl
outs
sbb
mov
mov
fbld
cli
fstp
mov
outs
or
stos
mov
mov
jle
pop
test
outs
mov
call
pushf
shr
rcr
push
dec
outs
push
fsub
inc
jecxz
mov
sahf
or
out
and
fnstenv
sbb
xchg
mov
(bad)
pushf
in
lea
xor
xchg
mov
and
pop
push
push
inc
shl
cli
bound
xchg
(bad)
mov
jae
lea
dec
lds
jo
adc
sbb
rcr
shl
add
bound
movs
leave
jne
mov
ficomp
ins
xchg
cli
nop
mov
dec
scas
ins
mov
sub
pop
mov
push
mov
cmp
xchg
inc
jge
lahf
(bad)
test
cmps
aad
into
mov
repz
push
inc
add
push
cmp
push
sahf
lea
dec
mov
aas
jns
push
ins
stos
push
mov
out
cdq
dec
adc
lahf
es
jecxz
lea
mov
scas
sbb
shl
sbb
aas
movs
ret
popa
mov
dec
les
mov
(bad)
loope
add
adc
not
jne
in
scas
push
xchg
mov
push
(bad)
shl
dec
outs
les
ret
and
int3
jns
cmp
adc
hlt
fld
adc
cmp
jbe
xchg
fdivr
or
ror
mov
pop
cmp
mov
or
jle
inc
(bad)
cmp
ins
xor
push
sar
enter
int
cld
(bad)
xchg
in
jle
mov
cli
jns
dec
ds
mul
jl
lock
les
jnp
or
fs
xor
inc
mov
lahf
mov
cdq
test
mov
imul
mov
jbe
cmp
mov
pop
adc
pop
mov
lds
or
dec
or
mov
jno
and
pusha
mov
sub
jmp
and
popf
sti
popa
xor
outs
cmp
lahf
(bad)
dec
and
mov
mov
loop
and
push
jp
or
shl
out
ins
shr
std
mov
jg
push
mov
add
lods
das
stc
jnp
cdq
imul
push
int3
add
adc
or
fst
jmp
push
jne
and
ss
pop
int3
sub
sbb
pop
adc
pop
ret
fs
sbb
cmps
cmp
sbb
movs
out
push
sub
mov
add
(bad)
pop
stc
sti
or
push
adc
cs
dec
adc
sbb
jmp
or
sbb
fstp
out
jp
ins
push
jno
cdq
or
gs
mov
pop
inc
mov
imul
adc
mov
xchg
dec
arpl
and
cmp
in
and
jge
fwait
leave
std
dec
inc
sub
push
stos
scas
mov
pandn
xlat
stc
cmp
xchg
inc
cmp
add
push
pop
sbb
sub
pop
xchg
and
aaa
mov
mov
shr
xchg
rcr
arpl
mov
lods
leave
mov
xchg
dec
aas
addr16
fs
lahf
or
lea
pop
into
pop
pop
int3
scas
iret
inc
fld
cwde
cmp
xchg
out
std
mov
mov
mov
ds
and
cmc
and
mov
or
push
das
jp
jnp
lea
jecxz
sub
repz
daa
pushf
add
or
xor
cmp
fwait
and
repz
cmps
cmp
fld
adc
jecxz
mov
adc
lock
call
scas
fcomp
jle
xchg
sti
nop
mov
icebp
cmc
mov
out
(bad)
dec
popf
xchg
pop
std
call
test
dec
push
ins
jno
xor
sub
mov
mov
movs
cli
into
add
pop
jnp
arpl
jns
jmp
sub
call
mov
test
add
add
outs
mov
fisttp
sub
xchg
mov
dec
inc
call
inc
nop
fdivp
test
outs
jnp
xchg
push
shl
mov
aam
js
jl
imul
adc
xchg
mov
mov
xchg
les
adc
fcomp
push
(bad)
xchg
lds
push
or
int
cwde
cli
(bad)
jmp
aaa
in
sub
mov
shl
jl
ins
shl
lds
out
and
jp
xchg
(bad)
out
jmp
mov
dec
mov
sbb
push
and
xchg
rcl
rol
inc
popa
test
imul
movs
retf
cmp
xor
pop
cs
sub
hlt
sahf
aas
jns
xchg
add
ret
mov
jnp
iret
pop
adc
cmp
inc
pop
ins
sub
sbb
pop
scas
ret
loop
gs
pop
mov
mov
pop
xor
ins
cmp
cmp
jmp
pop
loop
push
jo
imul
test
(bad)
mov
cmp
push
fnsave
cs
sbb
lea
and
push
repnz
test
sbb
shl
lods
popa
and
lods
jae
loopne
test
xchg
xchg
mov
xor
mov
repnz
mov
xchg
pop
imul
out
jbe
push
dec
mov
push
dec
test
xchg
sbb
cli
and
sbb
adc
jle
xchg
jp
xlat
cmc
xor
ds
sahf
lahf
ins
loop
jo
(bad)
dec
in
inc
jb
cwde
ja
lea
test
hlt
mov
movs
outs
test
outs
sar
jno
arpl
and
pop
(bad)
fldenv
rcr
sbb
es
xor
xchg
pusha
dec
imul
jmp
mov
es
cld
inc
call
js
jecxz
popf
jae
outs
inc
cmps
jnp
jmp
pop
mov
lods
dec
push
inc
iret
in
rcr
push
push
mov
loopne
xor
ins
xchg
sub
ret
pushf
jmp
je
ins
xchg
xor
ins
cs
pusha
sub
test
cs
inc
push
int
pop
push
fild
(bad)
jns
je
dec
(bad)
int3
push
dec
adc
cmp
and
mov
ret
int3
shl
loop
mov
mov
sub
jmp
push
ret
dec
jae
push
(bad)
jo
xchg
nop
cmp
dec
jecxz
push
sub
mov
aam
xchg
int
test
gs
jecxz
pop
repnz
outs
jno
push
xor
cmp
ror
dec
imul
jo
pop
gs
xor
fxch
pop
pop
(bad)
or
arpl
dec
mov
jns
arpl
jle
sub
ss
data16
inc
les
or
cmps
push
mov
int
loopne
ins
scas
xchg
push
rcr
nop
retf
lea
mov
mov
sbb
lods
push
je
push
icebp
out
xor
das
cdq
or
scas
jle
sub
jae
jmp
daa
imul
pop
pop
adc
add
jg
pop
push
adc
and
jmp
ds
cmp
daa
jo
das
jnp
test
xor
jmp
push
mov
aas
out
xor
shr
stc
popa
jns
dec
push
pop
pop
loop
out
aam
mov
xchg
xchg
cmp
(bad)
loope
movs
adc
push
hlt
mov
pop
push
pop
or
xor
jge
jne
mov
fbld
(bad)
imul
dec
test
inc
stos
jns
iret
ja
adc
sti
je
cli
and
loop
enter
xor
mov
or
push
ins
xchg
add
cli
in
add
shl
jmp
add
push
cmp
pop
mov
sub
xor
std
sub
xor
icebp
cmp
push
jmp
sbb
push
retf
xchg
je
(bad)
xor
cmc
xchg
sbb
cmp
es
sets
and
cmp
rcl
pop
mov
and
and
test
movs
imul
idiv
mov
repnz
sbb
into
dec
jecxz
int3
imul
xor
mov
mov
inc
lea
pop
push
sbb
fiadd
stc
sub
pop
jmp
push
cmps
jl
xor
mov
jmp
dec
(bad)
sti
mov
xor
cmps
mov
das
ins
scas
mov
or
and
bound
dec
mov
fdivr
jg
mov
sub
pushf
xor
leave
mov
or
sbb
xlat
xchg
push
sbb
xor
ins
mov
xchg
movs
jge
ins
pushf
cmps
ds
mov
jnp
add
mov
sub
ret
adc
bound
packssdw
jne
out
adc
test
imul
mov
inc
retf
push
jbe
pop
sbb
ret
(bad)
out
mov
sub
(bad)
loop
push
cmp
xchg
cmps
js
and
mov
jns
sahf
mov
jmp
je
cmp
pop
repz
es
or
ret
popa
int3
sbb
popf
fistp
rol
out
clc
mov
int
(bad)
fst
stc
out
mov
mov
or
jae
pop
and
jl
dec
jp
lea
ins
shl
leave
das
lods
outs
and
cld
mul
fisubr
jns
jnp
and
push
sti
push
or
cmps
push
inc
loop
mov
xchg
cmc
add
clc
stc
stos
mov
cmp
stos
pop
cmp
add
and
daa
cwde
rcr
or
adc
loope
mov
sub
or
or
cld
mov
mov
inc
jle
dec
fstp
fs
push
neg
add
jbe
or
retf
push
jbe
and
sti
jmp
push
mov
jmp
loope
es
xlat
jmp
ret
dec
icebp
pop
cmp
add
mov
int3
pop
and
out
jle
mov
clc
cwde
imul
add
dec
fisttp
push
loop
int
mov
push
lods
out
or
dec
jo
outs
inc
iret
sbb
adc
or
xlat
dec
out
or
jmpw
push
ja
stos
dec
into
ret
add
mov
xchg
dec
ja
push
test
cmps
jnp
rep
pop
push
adc
jmp
adc
data16
add
push
xor
test
iret
inc
sbb
mov
xchg
pushf
pop
adc
push
js
push
mov
and
in
mov
xor
mov
mov
dec
mov
xlat
movs
jb
cld
lahf
add
test
popa
arpl
pop
dec
dec
push
jae
push
dec
mov
test
test
xor
inc
jae
pop
fwait
jno
mov
sahf
cmp
push
shl
sbb
pushf
div
jmp
(bad)
cmps
jmp
cmps
loopne
xchg
fimul
sbb
cs
cmc
pop
and
sahf
shl
add
or
aas
xlat
dec
or
call
xchg
rcr
ficomp
mov
rcl
mov
outs
inc
jle
or
inc
and
pop
xchg
pop
mov
dec
in
dec
xlat
mov
popa
pop
pop
mov
dec
cdq
outs
pushf
cdq
icebp
push
dec
retf
xor
sub
jno
xor
dec
jns
bound
minps
leave
xchg
sub
xchg
xor
scas
cld
lea
xchg
daa
adc
push
cld
call
jnp
sbb
mov
sar
mov
lds
mov
mov
pusha
outs
adc
add
or
mov
xchg
inc
pop
hlt
dec
retf
retf
nop
cmps
rol
cwde
sbb
fadd
std
pop
push
test
js
out
add
out
xchg
(bad)
retf
inc
or
push
in
inc
mov
push
pop
push
(bad)
push
xor
xor
mov
or
fstp
sbb
and
pop
in
xor
cld
inc
push
and
std
add
jmp
push
retf
or
lahf
dec
out
push
xor
cmp
jno
mov
add
sub
(bad)
scas
fcom
stos
sbb
xchg
xchg
mov
fidivr
ror
aam
mov
in
xor
inc
and
popa
push
cld
(bad)
ss
test
cmp
and
lea
pop
mov
inc
push
fimul
rol
out
shr
mov
fistp
add
pop
cmps
mov
jmp
adc
ds
jle
clc
cmp
mov
fisttp
in
add
scas
dec
and
sub
addr16
popf
jge
xchg
push
push
xchg
hlt
mov
shr
leave
cmc
jl
popf
cmps
das
stc
mov
xchg
cmp
aam
sbb
or
rol
mov
in
jno
iret
xchg
iret
mov
sti
scas
rcl
inc
je
fild
xchg
push
movs
xchg
jg
inc
in
mov
pusha
je
jecxz
outs
and
cdq
xchg
mov
dec
outs
(bad)
(bad)
mov
push
je
es
xor
push
pusha
push
adc
pop
mov
or
pop
or
test
mov
dec
cmps
mov
jae
pop
jnp
xor
aaa
sbb
sti
jnp
nop
out
leave
or
jge
lock
cvtps2pi
sbb
push
or
add
jl
add
jl
repz
popa
sbb
out
mov
sbb
xchg
std
arpl
lods
repz
mov
es
dec
mov
(bad)
mov
mov
add
test
jbe
into
cld
xor
push
dec
sbb
add
test
les
jle
or
pop
pop
(bad)
cmc
cmc
leave
and
mov
sub
mov
push
mov
mov
inc
dec
mov
mov
adc
ficom
push
sub
ins
ja
retf
or
aam
adc
pop
mov
sub
mov
arpl
fcom
pusha
add
lock
pop
outs
mov
dec
cmp
sahf
jae
lods
sti
ja
lods
mov
pop
movs
ret
das
and
pop
inc
lahf
iret
outs
adc
aas
mov
lea
sti
es
scas
sbb
xchg
imul
mov
mov
sub
lods
add
pop
popa
push
adc
inc
(bad)
mov
jno
sub
xchg
into
mov
mov
int
stos
mov
pop
(bad)
out
xor
xchg
loop
and
cld
jle
clc
push
mov
imul
in
leave
mov
movs
into
test
cwde
cmp
sub
fs
mov
pushf
idiv
retf
dec
ror
in
hlt
rcl
add
dec
pop
gs
pop
je
jmp
mov
xchg
mov
fucomi
mov
je
leave
jmp
push
jae
xor
add
mov
or
xor
ss
cmp
xor
test
mov
dec
in
and
cli
stc
sub
pop
fstp
push
int
popa
mov
mov
mov
test
ret
push
inc
fild
in
push
push
call
into
ins
test
out
rcl
popa
(bad)
test
scas
jle
push
fdivr
pop
push
add
dec
ins
out
fcom
mov
inc
dec
int3
dec
enter
or
cmp
test
jge
cmps
scas
pop
add
cld
sub
xchg
sbb
cli
stos
pop
cmp
lods
add
fstp
and
or
imul
sar
pusha
out
fwait
jg
xor
aas
inc
scas
aad
out
stc
das
cwde
or
and
xchg
sbb
test
jl
int
cdq
xchg
mov
xchg
cwde
es
(bad)
jns
pop
cld
(bad)
out
lods
xchg
jl
pop
out
daa
shl
loopne
in
(bad)
std
arpl
lock
movs
mov
and
push
scas
cmps
cli
sub
push
rcr
popf
in
jl
dec
loop
dec
aam
inc
popa
pop
aad
call
add
dec
mov
and
mov
pop
cmp
push
add
mov
mov
ins
arpl
je
push
mov
push
mov
cwde
jg
mov
xor
sub
dec
(bad)
cmp
push
hlt
jl
leave
das
aad
ins
mov
sti
in
mov
inc
mov
mov
out
xchg
push
push
icebp
fisubr
fisttp
cmps
add
xor
mov
jmp
fldcw
pop
pop
mov
mov
cmp
xchg
cli
and
xchg
hlt
(bad)
stos
jmp
inc
xchg
clc
and
push
xchg
xchg
out
mov
inc
push
jno
scas
cli
jg
loope
dec
(bad)
popa
nop
dec
inc
or
cmp
and
mov
mov
ret
mov
test
aaa
retf
movs
push
jae
pusha
into
mov
xchg
enter
aad
loope
jo
mov
fucomi
sbb
cs
aad
add
and
test
je
sbb
push
call
pop
cmp
call
push
fidiv
ja
leave
push
pop
pop
push
pop
rcpps
mov
push
sbb
xchg
in
inc
sbb
inc
out
repz
and
xor
rep
fistp
sbb
aam
xsha1
cmps
dec
pop
pushf
dec
adc
add
rcr
pusha
cmp
imul
or
rcr
dec
xchg
sahf
mov
in
xchg
lahf
dec
mov
sbb
jne
nop
shl
pop
add
adc
into
arpl
sti
mov
and
aas
cmp
push
ins
lock
inc
and
pop
mov
mov
jbe
pop
test
add
add
or
cmp
call
xor
mov
inc
mov
adc
mov
inc
repz
aam
push
daa
sbb
xor
ins
dec
jp
cmp
test
add
lock
fcomp
pop
shl
mov
call
ins
push
cmp
fstp
icebp
outs
inc
(bad)
gs
mov
xor
dec
jno
mov
hlt
addr16
mov
in
pop
mov
dec
out
icebp
ins
add
aas
xor
ins
gs
jne
mov
test
sahf
mov
fldenv
xchg
mov
into
les
fist
fisttp
pusha
lahf
push
mov
mov
jmp
data16
sbb
sub
jl
inc
cmp
cld
iret
push
mov
sbb
push
pop
cmp
aad
pop
stos
dec
in
add
inc
inc
fldz
mov
mov
mov
inc
fbld
push
loop
cld
in
loope
dec
push
rol
repnz
sar
mov
pop
pop
lods
int3
(bad)
mov
clc
jp
rcl
sub
pop
(bad)
les
call
jae
into
or
xor
sbb
jne
aaa
cmp
or
lahf
push
shr
fidiv
fadd
ss
das
or
push
inc
adc
stc
adc
test
test
jae
push
leave
mov
push
mov
mov
xchg
repnz
inc
lahf
cmc
dec
push
inc
(bad)
or
mov
imul
cwde
jle
(bad)
push
sahf
ror
int
or
xchg
jl
jmp
repz
stos
mov
jecxz
or
(bad)
mov
lods
jbe
ins
xchg
lods
or
jb
or
into
mov
pop
mov
adc
outs
sahf
sub
jmp
dec
xchg
or
sub
repnz
cmp
mov
lds
inc
test
out
push
cli
stc
sub
mov
les
cmps
fsubr
jge
stos
and
cmps
jbe
pop
lock
ja
xchg
inc
pushf
retf
clc
push
in
cmps
pop
and
cmp
mov
(bad)
mov
push
mov
std
(bad)
jmp
jns
add
lds
xor
mov
push
inc
adc
loop
push
cmp
sub
shr
lahf
sti
fisub
add
mov
sbb
lea
pop
int
mov
test
cdq
jnp
xchg
xchg
mov
mov
repnz
aad
repnz
sahf
cmp
repz
pop
jmp
enter
mov
imul
js
out
xor
add
lea
and
ds
or
(bad)
or
push
pop
bound
loop
mov
leave
xor
ss
ja
je
aas
ret
mov
pop
int3
xchg
mov
adc
jo
stc
and
inc
out
jmp
jno
mov
mov
dec
ins
into
sti
loopne
in
and
(bad)
mov
jno
xchg
loope
sar
sub
enter
cmp
mov
inc
bound
ret
adc
in
sti
aad
fst
cmp
loope
(bad)
pop
mov
fmul
xchg
data16
pushf
stos
scas
and
pop
aam
jmp
sbb
mov
adc
pop
loope
dec
dec
cld
out
or
or
xor
repz
jae
cdq
call
loop
dec
adc
push
movs
xchg
sub
test
dec
add
lods
outs
or
in
inc
mov
pop
xlat
(bad)
les
sbb
xchg
repnz
out
ffreep
dec
cmp
ret
mov
pusha
add
or
lahf
push
stos
cld
xchg
pop
inc
movs
out
pop
int
ins
jecxz
out
std
add
int3
loope
inc
enter
jb
out
pop
pop
mov
push
lods
mov
stos
test
push
push
mov
xor
cli
inc
mov
test
in
cdq
repz
pop
pop
cwde
jbe
jg
movs
(bad)
movs
mov
cmp
ret
jns
mov
xor
pop
jns
ds
ins
pop
fst
into
loope
dec
jp
adc
lea
pop
mov
mov
pop
dec
iret
jb
xchg
or
lea
jecxz
shr
dec
push
(bad)
xchg
xchg
add
es
and
sub
xchg
cmp
sub
aad
cmp
jae
cmps
stos
mov
sti
lds
cmp
adc
fcomp
enter
or
ret
mov
inc
out
xchg
jns
sbb
mov
mov
mov
and
adc
pop
mov
test
inc
cmp
xchg
sub
add
push
pusha
sbb
ror
daa
mov
fst
pop
xor
jbe
repnz
cli
mov
mov
popa
aaa
and
test
jae
sahf
sub
cmp
xor
xor
sub
sub
cli
pop
imul
test
mov
dec
mov
push
into
jle
pop
data16
cmp
test
mov
(bad)
sub
int
not
ficom
dec
test
mov
xor
fwait
in
jp
sbb
and
pop
push
adc
(bad)
popa
in
cdq
fisubr
cs
mov
rcl
ins
and
fstp
push
jmp
jns
out
popf
sti
add
cmps
fwait
out
out
loopne
inc
retf
dec
push
call
mov
stos
xchg
sub
add
xor
adc
mov
mov
fisubr
jl
outs
shl
popf
arpl
sbb
movs
pop
fwait
cmp
dec
(bad)
int3
(bad)
mov
sar
pop
pop
dec
in
cmp
sub
idiv
gs
push
and
push
push
fimul
mov
mov
jnp
cs
pop
in
push
(bad)
mov
repz
das
pop
ret
jnp
dec
add
and
and
or
cs
sbb
jbe
ds
pop
mov
(bad)
ror
cmps
ret
(bad)
and
inc
cmp
outs
rol
jnp
xor
mov
inc
fyl2x
call
fisub
aam
jno
mov
fld
gs
or
dec
adc
cmp
(bad)
stos
hlt
or
cmp
bound
jns
cmp
mov
mov
retf
sti
sbb
cmp
es
jno
bound
sahf
dec
push
int3
call
fcomi
mov
cmp
into
enter
pop
jmp
dec
test
addr16
int3
(bad)
cmc
hlt
or
aaa
push
ja
pop
test
stc
mov
mov
cmps
jmp
dec
lods
push
xchg
clc
inc
pop
xor
xor
push
mov
outs
int
and
rcr
sub
mov
rcl
jae
and
cmp
cwde
cmp
sar
adc
addr16
repz
retf
push
jg
or
mov
jno
inc
aad
(bad)
jmp
push
push
adc
mov
adc
jae
mov
int
mov
push
jbe
xchg
mov
push
mov
pop
out
mov
in
clc
ss
mov
outs
xor
outs
add
or
daa
fdiv
jg
push
add
jl
mov
push
and
mov
mov
adc
fwait
repnz
pop
mov
sbb
xor
sbb
pop
mov
sub
xor
adc
inc
adc
xor
xor
jbe
in
hlt
inc
lahf
xchg
repz
stc
mov
mov
mov
aaa
and
mov
xor
xchg
push
fstp
mov
enter
jg
mov
mov
inc
ret
add
daa
pop
test
popf
sub
adc
or
jl
cmp
test
push
mov
cmp
push
jno
xor
clc
jb
cmp
xor
stc
dec
inc
push
imul
pop
mov
xchg
inc
fmul
mov
xor
push
rcr
outs
cld
adc
mov
mov
stc
mov
mov
mov
jne
or
retf
mov
pop
jl
les
test
xchg
or
fld
cmp
mov
hlt
sub
cs
push
sti
cmps
dec
idiv
repnz
cmp
mov
mov
cld
fidiv
lahf
xchg
jmp
mov
lahf
sbb
shl
inc
scas
push
cmp
xchg
sub
add
jne
inc
ds
fsubr
in
mov
mov
jecxz
xchg
cmp
jae
sahf
iret
inc
sbb
dec
clc
ret
in
push
leave
adc
in
inc
dec
lahf
(bad)
cmp
or
gs
xor
sbb
mov
cmp
ret
xor
add
into
cld
data16
add
loop
adc
enter
outs
or
pushf
mov
xchg
pop
xor
ins
outs
jae
lahf
jnp
dec
add
xor
or
xor
retf
movs
call
dec
gs
mov
shl
jmp
sub
or
dec
mov
movs
daa
sub
pushf
cmp
sub
(bad)
xchg
and
inc
lea
inc
or
pop
in
push
jge
jmp
push
jmp
add
add
sub
addr16
ja
dec
pop
xchg
xchg
add
lods
cdq
movs
and
(bad)
and
(bad)
shr
or
lods
add
loope
rol
fs
ret
sub
pop
bound
jo
add
and
adc
retf
(bad)
leave
loope
dec
imul
adc
(bad)
outs
push
aaa
outs
(bad)
mov
sbb
idiv
sbb
cmps
scas
rol
iret
into
(bad)
jns
inc
sub
pop
ss
ret
mov
sub
mov
les
je
push
jmp
(bad)
xor
xchg
scas
loope
and
adc
xchg
push
mov
hlt
outs
int
xlat
lods
sbb
jmp
repnz
in
jge
shl
cmp
inc
pop
(bad)
mov
clc
dec
xor
dec
cwde
test
dec
movs
fcomp
pop
or
mov
sub
cmps
mov
or
idiv
enter
jo
in
sub
ja
movs
cmp
inc
cdq
outs
in
inc
int3
fdiv
cmp
sbb
sub
enter
cmp
xchg
(bad)
lahf
outs
cld
pop
inc
imul
inc
daa
psubsw
dec
mov
inc
sbb
lods
repnz
aam
sbb
adc
mov
sbb
add
fisubr
mov
stc
(bad)
cmps
adc
cwde
out
sar
cdq
ds
cdq
dec
loopne
leave
or
jb
pusha
pop
jp
mov
jb
cmc
out
xchg
mov
std
mov
fs
(bad)
push
and
inc
mov
push
retf
movs
pop
(bad)
repnz
and
repnz
or
fstp
xor
pushf
ins
out
cmp
sub
stos
jb
push
xor
rol
inc
mov
enter
jmp
(bad)
and
lods
sub
push
loop
push
fcomp
mov
and
cwde
pusha
stc
sub
inc
xor
mov
dec
or
outs
cmp
xchg
and
fcomp
fadd
mov
xchg
retf
ffreep
mov
mov
nop
mov
or
ins
mov
push
fistp
mov
pop
stos
out
lock
push
inc
daa
mov
adc
dec
push
sti
jmp
ret
mov
mov
pusha
pop
push
shr
das
mov
std
adc
dec
ins
mov
mov
ret
xchg
jle
xchg
or
aas
lock
stc
movs
call
stc
out
pop
xor
and
mov
and
mov
es
mov
fnstcw
sbb
xor
jb
mov
push
nop
jg
imul
(bad)
push
add
data16
test
mov
push
inc
ins
jecxz
push
arpl
push
ret
mov
xchg
(bad)
cli
inc
(bad)
iret
jb
pop
jb
pusha
push
retf
mov
cmc
mov
lahf
mov
movs
pop
out
mov
loopne
push
stos
sub
nop
ds
shl
test
sar
sub
mov
dec
push
outs
sbb
fisttp
xor
adc
lahf
pushf
push
inc
jne
bound
dec
stos
ds
mov
fidivr
outs
cwde
xchg
ficomp
ds
add
adc
xor
fcmovnbe
fstp
dec
fild
pop
cmp
ret
hlt
clc
mov
enter
jecxz
xor
mov
cmp
sub
outs
ret
shr
pop
aaa
adc
lea
(bad)
add
push
pop
shr
jb
adc
movs
mov
sahf
push
imul
and
mov
aas
je
test
mov
inc
rcl
shl
(bad)
mov
lods
call
dec
ins
sub
loopne
xchg
push
out
aaa
jbe
pusha
and
adc
and
jl
xchg
xor
lods
inc
push
xchg
cmp
or
sub
data16
test
mov
sti
jecxz
lock
dec
aas
push
in
dec
in
arpl
pop
cmp
dec
cli
neg
ss
or
jmp
(bad)
ret
leave
out
sbb
push
inc
adc
dec
enter
stc
in
pop
aaa
pop
add
inc
pop
dec
push
xchg
mov
pop
cmps
stc
pusha
and
and
add
fbstp
xchg
mov
push
or
cmp
pop
mov
and
xchg
mov
(bad)
movs
xchg
mov
push
test
mov
mov
push
int
out
sbb
shl
push
repnz
xor
rol
xchg
int
aas
stc
fnstenv
ins
jbe
cmp
lock
and
loop
out
aam
push
pop
loopne
push
inc
sbb
mov
dec
jnp
mov
imul
gs
fwait
ins
adc
sti
(bad)
lods
jge
mov
outs
ficomp
and
or
in
push
test
js
xor
mov
movs
xor
loope
fisub
neg
aad
(bad)
stos
imul
mov
aad
lods
rcl
mov
data16
and
adc
dec
xchg
cmp
jmp
pop
cmp
mov
test
jmp
test
adc
push
push
push
mov
ins
or
adc
pop
mov
xchg
jl
out
test
gs
faddp
dec
push
aam
push
lahf
jno
pop
repz
push
inc
sbb
xchg
jl
dec
dec
repnz
xlat
enter
jae
xchg
dec
sub
in
arpl
cmps
fild
dec
pop
add
aaa
fmul
and
fstp
inc
push
sbb
mov
dec
pop
inc
jg
cmp
inc
fmul
rol
into
dec
inc
dec
jp
retf
paddq
xchg
pop
repnz
bound
add
push
xlat
sti
add
arpl
das
(bad)
sbb
adc
xchg
mov
jae
pop
or
sbb
adc
fstp
push
pop
xchg
movs
test
or
(bad)
mov
push
lock
out
repz
xor
xor
adc
and
adc
dec
mov
cmp
push
(bad)
out
repz
pushf
or
pop
dec
das
shl
mov
mov
in
sbb
imul
addr16
movs
inc
or
repnz
sub
out
mov
test
sub
push
sub
inc
xlat
clc
mov
push
fdivrp
push
add
(bad)
push
jl
dec
fisub
jbe
push
leave
mov
mov
mov
mov
sbb
fdivr
jmp
bound
sbb
call
jnp
addr16
out
or
dec
cmp
stc
(bad)
cmps
inc
inc
adc
(bad)
in
mov
shr
cwde
loopne
das
cmp
push
pop
xchg
iret
scas
mov
arpl
and
xchg
pop
mov
or
sub
sbb
cli
pop
jmp
xor
div
push
mov
sub
adc
jnp
retf
pop
ins
pop
inc
cli
aam
cdq
div
mov
das
ret
pop
xor
stc
push
xor
pop
cmp
mov
dec
xor
scas
fisub
cmp
add
push
data16
or
inc
mov
pop
cdq
movs
mov
test
mov
xchg
mov
xchg
fbld
xchg
stc
inc
push
sbb
(bad)
jmp
sbb
lea
inc
inc
sbb
jae
push
jae
mov
xor
outs
outs
cmp
cmp
ins
cs
and
in
fld
push
sbb
cmp
les
cmp
pop
inc
fs
xor
xor
nop
adc
das
and
dec
sub
adc
(bad)
jae
mov
sub
sub
shr
mov
in
loopne
fadd
loopne
test
adc
and
arpl
leave
cmps
lahf
cwde
call
or
(bad)
xchg
mov
addr16
jno
aam
lea
call
hlt
adc
into
jnp
sub
inc
mov
fadd
and
inc
sbb
test
xchg
and
pop
and
int
es
xchg
(bad)
sub
test
test
adc
push
inc
jmp
cmp
xor
int
fs
xchg
fwait
sahf
jecxz
retf
jl
push
cs
aaa
(bad)
out
or
inc
inc
int
or
fst
add
sbb
xor
push
pushf
lods
cs
out
movs
stc
movs
pop
pop
cmp
add
xchg
shl
xchg
inc
ins
std
leave
out
(bad)
sbb
inc
jp
inc
push
lds
movs
mov
outs
push
jge
or
mov
gs
adc
cli
jnp
inc
sub
shl
and
lahf
jbe
cmp
or
sbb
mov
aaa
inc
addr16
pop
and
mov
add
inc
cmps
jmp
sbb
cmps
add
xlat
out
cmp
cmp
dec
ss
aam
sub
sbb
and
test
sbb
arpl
mov
ja
lods
test
clc
pop
in
addr16
jmp
jae
(bad)
mov
sbb
inc
xchg
dec
repz
cmp
mov
outs
stc
shr
mov
shl
sti
add
cmps
cmp
sub
jp
push
and
lds
cmp
in
sub
adc
pop
pop
popa
repz
jecxz
jg
mov
inc
out
sub
stos
mov
or
call
sahf
dec
aam
xor
fcom
ja
daa
outs
int
push
pop
lock
fdiv
mov
or
arpl
mov
or
adc
(bad)
xor
xchg
adc
daa
cmp
cmp
mov
mov
sar
gs
dec
outs
mov
mov
enter
(bad)
add
ror
sbb
jo
sbb
adc
mov
(bad)
push
sub
adc
stos
test
hlt
ins
xor
push
repnz
sar
xchg
scas
ja
fist
repz
xor
clc
bound
push
jb
xor
xchg
push
stos
stos
in
and
pop
sti
add
inc
pop
xor
mov
jp
inc
popa
outs
jp
inc
sbb
retf
xchg
nop
ins
(bad)
js
sbb
mov
push
mov
rcr
add
xor
bound
and
mov
repnz
pop
mov
jbe
nop
clc
sbb
call
movs
iret
add
aad
adc
mov
jb
cli
stos
(bad)
jmp
adc
sub
fwait
dec
pop
push
jbe
loop
pop
inc
pusha
inc
mov
mov
add
dec
outs
mov
mov
in
push
pop
(bad)
scas
xor
stos
icebp
dec
add
std
in
out
int3
adc
or
cmp
fiadd
lea
or
mov
push
ret
cmps
das
jne
loopne
std
mov
ficom
imul
sahf
adc
daa
dec
ret
in
xchg
lods
dec
cmp
jo
jg
sbb
dec
dec
fdiv
xchg
ins
ret
or
mov
jle
cmp
jle
jecxz
pop
lock
adc
(bad)
mov
movs
mov
pop
sub
adc
mov
repz
cmp
xlat
std
mov
mov
sbb
in
mov
in
lods
or
cld
rol
cmp
mov
mov
int3
ror
dec
xlat
ins
and
add
mov
int
jmp
aaa
retf
aaa
adc
iret
fxch
push
test
cmp
xor
fwait
cwde
pop
(bad)
and
clc
lahf
xor
dec
cdq
push
pop
push
add
enter
push
jno
xchg
pop
pop
xchg
sbb
test
clc
jae
lds
mov
pop
or
inc
pop
pop
sbb
xchg
or
pop
in
out
or
or
xor
sub
in
(bad)
in
lods
pop
(bad)
adc
pop
loope
mov
sub
jne
icebp
push
xchg
sub
repz
in
rcl
dec
bound
xlat
ss
dec
jne
dec
ss
iret
ror
jno
mov
iret
(bad)
push
sub
dec
popf
mul
push
cmp
lods
arpl
std
adc
(bad)
mov
mov
out
adc
dec
adc
sbb
test
in
icebp
stos
sbb
xlat
push
daa
pop
adc
sub
add
mov
xchg
scas
jo
retf
shr
movs
data16
or
imul
(bad)
cli
(bad)
js
sti
jmp
pop
sti
jp
not
popf
push
jbe
push
loope
dec
adc
retf
out
imul
mov
clc
retf
stc
loop
(bad)
mov
jecxz
sub
push
mov
push
in
inc
sub
(bad)
ror
fldenv
lea
stos
sub
sbb
fadd
push
or
imul
and
jne
push
and
and
jno
mov
(bad)
call
popa
js
out
jle
lahf
mov
xor
call
cmp
sbb
inc
dec
cs
jmp
adc
rcl
jno
ins
cwde
mov
sbb
das
jmp
push
int
mov
cmp
adc
xor
mov
mov
bound
fstp
cmc
(bad)
dec
xor
and
cmc
fisub
mov
aam
cmp
fmul
out
and
xor
mov
es
inc
test
mov
or
push
shr
xor
pushf
imul
mov
imul
ins
inc
cld
neg
(bad)
adc
jge
mov
rol
es
jge
aad
add
sub
cs
pop
bound
inc
outs
xor
inc
jg
jg
sbb
lea
mov
rcl
cld
int3
lea
pushf
inc
loopne
pop
setle
aaa
cmp
inc
inc
stos
xlat
clc
test
mov
loope
adc
jp
push
jb
outs
sti
jmp
mov
fdivr
std
enter
mov
pop
pop
imul
adc
(bad)
sbb
test
mov
jmp
pop
inc
dec
out
int
fisttp
mov
pop
in
movs
into
sbb
loope
fist
or
fdivrp
ins
mov
ins
jmp
jbe
pop
stos
mov
call
pop
mov
push
or
jae
enter
dec
dec
jg
call
xchg
and
mov
xchg
add
add
pop
cmp
loop
jbe
in
or
in
mov
xchg
cld
js
popf
(bad)
mov
mov
and
stc
movs
std
mov
std
arpl
gs
cmps
push
pop
push
(bad)
ror
pop
dec
into
mov
cmps
imul
push
(bad)
push
cmp
aam
das
lea
es
cmp
fst
int
mov
data16
inc
data16
inc
xchg
movs
jmp
fbstp
aas
cmp
add
and
nop
fld
sar
fadd
xchg
out
mov
mov
loop
hlt
dec
inc
xlat
jecxz
imul
inc
cmp
xor
jge
std
repnz
imul
popf
mov
imul
or
fst
inc
mov
ret
out
and
push
xchg
stos
xchg
cld
test
loop
in
inc
lea
pop
mov
cmps
pushf
fistp
stc
push
adc
cdq
adc
not
sbb
push
shl
hlt
popa
addr16
mov
cdq
jl
lds
push
and
fidivr
dec
clc
leave
sub
push
xor
and
movs
jmp
dec
repnz
frstor
dec
and
jecxz
pop
mov
jnp
ins
mov
add
das
xor
outs
out
je
(bad)
mov
xor
and
push
test
add
push
inc
mov
push
inc
or
push
jle
sbb
sub
adc
out
mov
ror
pop
xor
xor
or
mov
pop
and
and
push
aaa
sub
sub
inc
stc
rcr
add
sub
and
(bad)
aad
jo
mov
inc
jmp
mov
xchg
inc
cmc
in
dec
out
dec
test
loopne
push
mov
or
xor
mov
fwait
cdq
mov
lahf
sub
dec
push
call
xor
xor
clc
xor
adc
mov
jp
mov
ins
enter
in
in
fs
push
loopne
adc
icebp
movs
dec
lahf
xor
add
mov
mov
inc
test
sub
sub
jae
sbb
int
mov
loopne
int3
jmp
test
pop
inc
and
data16
mov
outs
and
mov
adc
or
(bad)
call
cmp
jo
jmp
dec
(bad)
push
pop
neg
ret
mov
ds
add
inc
or
mov
(bad)
mov
mov
lahf
push
rcr
dec
jo
jae
rol
jo
arpl
or
scas
(bad)
enter
outs
aaa
push
test
imul
adc
push
aaa
sub
ss
imul
inc
es
shl
mov
loope
std
xchg
pop
sub
loope
std
mov
and
test
mov
das
ss
sbb
pop
(bad)
ret
add
cmp
inc
pop
in
cmp
call
idiv
inc
push
jl
jge
fidiv
bound
mov
or
jb
sub
cmp
and
stos
out
sar
add
fwait
inc
add
or
add
stos
lahf
mov
inc
mov
loopne
adc
pop
retf
ret
loope
cmps
mov
enter
cmp
dec
xor
stc
jbe
das
inc
outs
pop
sbb
in
jne
in
jmp
shr
aad
sbb
div
xchg
int3
mov
retf
pop
inc
loop
hlt
setge
sbb
loop
fist
ret
sub
scas
xchg
cmps
add
mov
mov
xchg
(bad)
mov
stos
adc
pusha
inc
mov
and
dec
sbb
loopne
push
cld
mov
cmps
pusha
lods
mov
jmp
movs
mov
jo
mov
fnstcw
addr16
dec
std
cmp
mov
mov
and
or
dec
or
jge
inc
dec
rcr
sbb
push
pop
sbb
mov
pop
adc
int
ret
es
dec
sbb
jg
cmp
cmp
ffreep
shl
(bad)
sbb
cmps
mov
fidivr
and
pusha
sbb
or
or
stc
out
xchg
sub
leave
xchg
aaa
loopne
sbb
jge
fucomi
imul
adc
sub
pop
pop
cmp
push
in
adc
adc
xor
sub
mov
test
fs
inc
mov
jb
loop
dec
dec
jmp
jno
mov
inc
and
adc
adc
jl
movs
std
mov
mov
jbe
repz
xor
mov
inc
sar
mov
mov
aad
call
out
std
ror
aas
in
pop
xor
push
sti
sub
mov
in
repnz
call
in
ror
mov
or
xor
rcr
fdiv
cmc
sbb
sub
ins
scas
ja
outs
movs
xor
xlat
pop
inc
jmp
jo
sub
and
xor
test
mov
pop
pop
jl
jne
cmp
mov
pop
stos
adc
cmps
mov
in
js
inc
xchg
sbb
fwait
aam
mov
mov
xor
lea
pop
mov
inc
dec
ds
mov
jo
xor
data16
sti
mov
imul
sahf
sub
jnp
icebp
xchg
cmps
jmp
retf
outs
xchg
sbb
loopne
in
fld
mov
push
pop
add
mov
cmp
test
xchg
dec
dec
cmp
cmp
pop
xchg
repnz
push
aas
mov
leave
popa
leave
pop
jae
cmp
jmp
popf
movs
das
js
shl
xlat
add
push
aas
int3
dec
push
xor
push
nop
(bad)
jo
mov
outs
pop
mov
mov
nop
mov
rcl
xchg
es
hlt
rol
and
inc
sar
js
push
mov
push
push
imul
aaa
dec
inc
enter
push
shl
repnz
(bad)
ja
nop
lahf
stos
neg
xor
(bad)
stos
mov
inc
mov
jne
iret
xor
cmp
repnz
jno
dec
adc
mov
adc
jnp
mov
imul
jae
adc
dec
or
pop
test
xchg
xlat
je
ror
xchg
sub
jp
add
mov
sbb
pop
mov
mov
or
sbb
xchg
mov
inc
mov
mov
mov
mov
add
dec
xor
mov
adc
(bad)
xor
xchg
lods
daa
cmp
xor
xchg
sti
mov
sahf
in
ret
lock
mov
or
jns
ficomp
xor
stos
iret
jne
push
ja
jne
and
sahf
repnz
ins
test
sbb
std
ror
inc
arpl
int3
pusha
inc
repnz
retf
cmp
clc
mov
loope
lods
addr16
out
mov
(bad)
mov
add
push
hlt
mov
dec
and
sub
pop
and
pop
stos
jmp
and
push
std
out
pop
pop
inc
xor
into
mov
fisub
dec
rcl
dec
sub
test
pushf
ret
mov
add
cwde
or
add
stc
add
imul
aad
ins
mov
xchg
mov
cmp
jecxz
pop
mov
mov
inc
push
lods
add
call
jge
mov
not
mov
out
sbb
fild
xchg
iret
stos
jns
jmpw
jg
les
inc
mov
jmp
test
jmp
add
movs
mov
xchg
test
hlt
ficom
or
sub
rol
stc
mov
jp
add
push
mov
ret
jmp
xlat
lock
sbb
aas
and
cwde
inc
out
and
rol
fdiv
stos
xor
popa
mov
cmp
mov
ftst
sub
mov
add
pop
jo
fwait
inc
sbb
aad
lds
or
cmp
push
cmps
jp
mov
mov
je
cmp
pop
cmp
xor
arpl
xor
stc
test
sub
cmp
out
fidiv
cmp
mov
cdq
fisubr
jb
add
xchg
movs
mov
sbb
push
fisttp
test
(bad)
or
mov
out
xlat
dec
push
fstp
jae
shl
push
xlat
jne
inc
pop
mov
cwde
int
icebp
loopne
out
dec
xchg
push
or
loopne
mov
mov
mov
ret
in
sbb
sub
xchg
adc
mov
or
sub
push
sub
adc
adc
mov
mov
sbb
popf
mov
inc
cli
xor
cmps
data16
and
rcr
push
sub
push
xor
iret
aaa
mov
lock
jmp
shr
pop
dec
xchg
inc
adc
ins
mov
cmp
out
dec
and
jno
add
outs
ss
ret
cmps
pop
mov
sbb
add
imul
in
loopne
movs
pushf
inc
pop
sbb
iret
xor
push
push
xchg
(bad)
or
add
js
mov
stos
sahf
mov
add
inc
std
outs
dec
fisubr
pushf
sbb
mov
loopne
pop
imul
push
jecxz
push
(bad)
test
lods
lods
test
adc
pop
fwait
jnp
mov
xor
(bad)
fdivr
icebp
addr16
retf
pop
mov
inc
popa
add
loop
clc
not
adc
mov
cdq
or
pop
dec
daa
sbb
dec
mov
fst
lahf
cld
ss
and
pop
add
in
loop
cmc
inc
stos
sub
fcomp
mov
sbb
mov
lea
sub
(bad)
aam
mov
call
xchg
cmp
pop
inc
repnz
idiv
xchg
cmp
pop
inc
in
lahf
sbb
pop
xchg
mov
mov
repnz
pop
cli
test
xchg
scas
lea
push
lds
stc
mov
jae
jg
and
jp
fdivr
ss
sub
fwait
jg
fwait
xchg
mov
movs
(bad)
int3
add
pushf
mov
int3
outs
sti
jmp
cmp
mov
xor
xchg
ret
mov
sbb
(bad)
lahf
xchg
pop
fucomip
sbb
js
in
push
enter
mov
jmp
jne
cmp
cs
xchg
mov
ret
mov
pushf
pusha
jmp
leave
adc
loopne
rcr
ins
and
dec
ds
gs
add
or
sbb
or
mov
push
jne
or
jne
jb
lods
dec
pop
call
jmp
mov
add
ret
add
inc
retf
test
loopne
int3
mov
mov
(bad)
fsubr
sar
push
and
shr
fist
push
mov
push
jmp
fisub
jnp
sbb
daa
push
sub
or
shl
stos
inc
btr
xlat
loope
add
adc
inc
pop
jnp
inc
js
push
jmp
cmc
dec
(bad)
sub
in
sbb
mov
(bad)
outs
pop
cmps
or
call
loopne
(bad)
sbb
stos
mov
in
stos
sbb
into
add
(bad)
push
leave
jns
adc
cli
and
mov
popa
fwait
les
sbb
xchg
sbb
shr
sub
test
jle
mov
mov
or
adc
mov
sbb
sub
push
loop
pop
mov
pop
imul
jo
enter
lock
mov
mov
jp
adc
pop
repnz
mov
add
pop
xchg
pop
repnz
movs
ins
push
ror
popa
rol
cmc
ja
add
mov
sub
in
push
(bad)
shr
xchg
dec
mov
inc
mov
rep
xchg
sub
jp
push
jmp
sahf
xchg
sub
mov
sti
push
jmp
popa
push
push
cmps
nop
mov
push
pop
push
pop
out
aam
push
cmc
(bad)
(bad)
(bad)
cld
test
cdq
sub
in
sub
xchg
mov
xchg
inc
repz
mov
lds
jp
clc
and
pop
and
cld
jnp
adc
sub
pop
test
push
xor
fs
jge
pop
enter
or
adc
and
push
fstp
sub
retf
push
ficom
out
maxps
(bad)
xlat
mov
jae
enter
out
fs
repz
sbb
in
(bad)
and
add
and
ret
rol
retf
outs
dec
cmp
pusha
adc
pop
push
lahf
sub
dec
mov
mov
inc
inc
aaa
mov
repnz
sbb
out
push
pop
push
mov
mov
adc
cmp
stos
cmova
mov
repz
or
daa
js
push
sahf
sbb
mov
ds
cmc
mov
mov
sbb
jnp
add
mov
out
xchg
fiadd
stos
mov
(bad)
xor
sub
and
int
iret
add
pop
das
fiadd
jno
(bad)
cld
cmp
jecxz
not
dec
out
int3
pop
cmc
xchg
int3
cmp
scas
popa
and
test
xchg
mov
or
xor
shr
xchg
das
xor
pop
pop
add
xchg
push
test
jno
pop
or
shr
pop
out
or
dec
fisubr
clc
adc
xchg
pop
nop/reserved
xchg
or
(bad)
sti
fst
pusha
and
mov
mov
mov
adc
or
cs
jnp
cmps
pop
xor
xlat
sbb
add
pushf
or
mov
pop
or
jmp
test
call
push
adc
cmp
xchg
fld
push
xchg
cmps
xchg
mov
mov
stos
dec
fisttp
cmc
push
sti
out
ins
sub
fild
cmps
popa
lahf
sub
cld
jg
jle
mov
sbb
clc
xor
mov
jb
arpl
adc
imul
retf
in
mov
fwait
shl
out
pop
test
scas
mov
addr16
sbb
(bad)
loop
sbb
xchg
nop
mov
les
cwde
retf
adc
mov
punpckldq
ja
mov
cmp
shl
pop
jnp
lahf
add
ins
call
jnp
xchg
add
mov
sbb
ret
sub
hlt
lds
mov
daa
bound
xchg
sahf
push
test
xchg
adc
scas
lahf
push
or
nop
inc
fimul
jnp
scas
lahf
jae
xchg
test
fadd
sti
inc
or
or
jle
ss
mov
lods
push
mov
fild
fwait
jg
cld
mov
retf
inc
repnz
push
lock
xor
lahf
jae
sub
pop
mov
inc
pop
scas
xchg
repnz
sub
shr
mov
jmp
dec
mov
xlat
call
xchg
sar
pop
mov
inc
iret
push
dec
add
adc
sbb
cmp
stc
test
xor
sub
ds
dec
and
test
lods
or
push
sahf
test
cmp
cmp
cmps
les
ret
add
and
retf
std
jbe
mov
mov
dec
mov
pop
inc
jg
mov
inc
sub
mov
push
push
(bad)
mov
push
fs
aad
xchg
enter
xor
sti
xchg
gs
push
hlt
cli
xor
pop
stc
test
add
adc
jle
adc
xchg
cdq
and
or
lock
inc
push
cmc
push
popf
mov
int3
fwait
sbb
js
sbb
test
and
xchg
sub
mov
sub
sbb
call
stos
cmp
stos
lahf
and
cmp
and
movs
repnz
imul
in
add
pop
xchg
mov
xchg
not
(bad)
call
mov
adc
mov
movs
adc
leave
push
dec
frstor
cmc
fisubr
fbstp
popf
iret
out
add
xlat
inc
add
pop
sub
sub
aaa
es
jno
pop
in
mov
xor
test
inc
mov
fwait
jne
push
movs
and
mov
adc
push
xchg
pop
sub
pop
lods
pop
mov
mov
imul
pop
aam
test
rcl
or
sub
mov
push
jp
pop
stc
adc
loope
inc
mov
xchg
(bad)
mov
push
sbb
or
(bad)
lds
sbb
xor
arpl
shr
push
push
mov
test
daa
and
xchg
pushf
adc
mov
sbb
xrelease
pop
movs
shr
fyl2xp1
mov
sar
cmp
in
adc
push
(bad)
push
imul
cmp
imul
jmp
idiv
cmp
cmp
inc
fsub
outs
or
aas
mov
iret
push
cmovp
mov
mov
inc
xchg
pusha
mov
xchg
adc
or
and
and
lea
in
mov
scas
repz
popa
pop
inc
mov
dec
popf
sar
dec
sbb
push
sub
ret
movs
daa
xchg
adc
das
mov
test
mov
inc
jne
push
mov
cmp
lds
dec
stos
pop
add
cmp
lock
cmp
or
push
test
int
jmp
jae
xchg
push
pop
inc
dec
rcr
jb
jg
fisttp
dec
inc
sub
jp
sar
aam
sbb
es
inc
cs
out
aad
xor
jecxz
add
or
movs
or
cs
leave
(bad)
jmp
cmps
xchg
xchg
out
rol
aad
stos
cmc
mov
mov
int
xchg
cwde
sbb
inc
mov
in
pop
sbb
out
and
cmps
out
out
and
xor
(bad)
xlat
fld
retf
jl
jecxz
dec
adc
imul
add
(bad)
aaa
lods
cmp
push
dec
lock
xchg
sub
sahf
xchg
or
inc
(bad)
xor
add
or
popa
sub
aaa
int3
pushf
dec
add
ja
and
das
icebp
sub
push
push
xlat
lea
mov
rcr
stc
cmps
mov
test
rcl
jb
ficomp
and
mov
xchg
or
push
or
push
mov
mov
into
jle
inc
jo
sti
std
gs
shl
xchg
inc
xchg
(bad)
jbe
(bad)
sub
push
mov
out
push
jnp
mov
clc
repz
sub
dec
mov
push
inc
cmc
cwde
push
(bad)
sub
sti
aam
xor
inc
mov
add
sbb
push
cmp
xor
adc
test
sti
push
daa
jg
jecxz
adc
and
cmc
jp
test
ins
lahf
jl
xchg
dec
dec
cmp
jns
cdq
push
xchg
sbb
jae
std
in
inc
addr16
int
jmp
cli
cli
lahf
loopne
xchg
dec
sahf
jo
sbb
fmulp
repz
adc
dec
jmp
fsub
test
cmp
rol
test
imul
and
lods
lods
inc
popa
dec
sbb
mov
pop
punpcklwd
mov
fs
jg
in
inc
push
mov
sbb
shr
mov
pop
fsubr
popf
and
in
jb
jg
cmp
(bad)
mov
inc
into
mov
in
cmp
mov
movs
jo
test
shl
aam
dec
mov
add
mov
cmp
adc
mov
ins
sbb
out
adc
or
out
fstp
adc
rcl
dec
xor
imul
or
pop
jbe
jns
ficomp
dec
jmp
push
and
push
mov
shl
iret
xchg
sbb
pop
xor
imul
fdivrp
cs
push
outs
push
mov
pusha
push
jmp
scas
xor
(bad)
jne
pop
jae
jne
cmps
xchg
cmp
mov
test
mov
lods
and
inc
pop
sub
sbb
xor
or
shr
(bad)
outs
(bad)
sbb
test
(bad)
cmp
into
daa
aaa
inc
mov
mov
es
in
dec
pop
jp
(bad)
dec
repz
clc
and
loope
add
pop
rol
es
jle
or
mov
adc
sub
push
jae
push
loopne
fist
ret
jp
mov
jl
mov
ins
outs
xchg
dec
ret
pop
sbb
ss
jle
pop
add
dec
inc
(bad)
fldenv
jae
leave
scas
or
ja
jnp
ret
sub
neg
xor
push
daa
aaa
(bad)
add
inc
stos
mov
jmp
mov
out
mov
dec
jp
jo
imul
jmp
test
xchg
sbb
inc
dec
jecxz
pop
or
repz
js
sub
pop
inc
push
sbb
inc
shl
in
mov
nop
cmp
aas
mov
xchg
and
jmp
push
scas
mov
into
cld
lods
mov
sub
or
mov
add
mov
fdivr
mov
bound
push
sbb
test
mov
cmc
in
jp
or
dec
hlt
jmp
and
ret
xlat
fcomp
clc
add
push
jl
jecxz
mov
or
sbb
xor
jl
jle
fbld
imul
cmps
arpl
aam
sub
mov
ret
push
and
or
push
inc
cmp
xor
aas
jmp
jbe
add
lock
and
clc
iret
mov
mov
cmp
jg
rol
jns
call
mov
sub
jecxz
adc
mov
mov
cld
push
enter
add
inc
retf
xor
mov
pop
add
sub
sub
pop
add
pop
sub
jnp
cmp
inc
call
fdiv
daa
pop
rcr
jp
cmp
xor
pop
inc
fld
test
es
data16
cmp
push
push
jb
loopne
cmp
inc
loop
sbb
pop
test
pop
cwde
adc
xor
xor
mov
push
fxch
jg
and
push
and
adc
or
adc
aaa
adc
fist
sub
test
or
(bad)
nop
xor
sahf
inc
jmp
int
test
data16
stos
fisub
mov
test
push
sub
mov
inc
mov
mov
sub
push
fstp
push
dec
sub
push
loop
mov
jecxz
push
pop
cdq
ret
mov
xor
fistp
push
mov
je
dec
dec
mov
push
aas
xor
fldcw
movs
outs
jbe
mov
ret
cld
nop
and
cli
pop
or
and
ret
outs
dec
test
jb
xor
adc
test
cli
dec
xlat
enter
jecxz
shl
sub
inc
pop
mov
addr16
scas
aas
pop
mov
(bad)
mov
fild
dec
lds
add
adc
or
mov
pop
mov
movs
fwait
sub
movs
mov
out
pop
les
mov
cmc
retf
gs
sbb
retf
jle
popa
mov
sub
xor
sahf
cmp
inc
mov
inc
xor
xor
in
mov
or
imul
ss
js
imul
std
push
frstpm(287
mov
sub
cmp
push
movs
push
call
push
xchg
shl
daa
jp
jle
lahf
jg
das
cmp
xchg
leave
outs
or
mul
cli
daa
cmp
test
into
movs
xchg
in
push
inc
repz
cdq
in
inc
in
push
xchg
jmp
fdiv
or
outs
and
data16
dec
mov
jo
push
ret
sbb
push
outs
(bad)
jno
ret
out
popf
fdivr
mov
mov
or
jns
ja
popf
mov
loopne
pop
(bad)
adc
inc
lock
pusha
jbe
lahf
xor
mov
in
div
xchg
jns
inc
iret
or
adc
jno
and
cmp
jmp
imul
je
mov
dec
and
je
std
push
mov
sub
cli
icebp
cmp
push
scas
pop
in
xchg
adc
fld
mov
xlat
stos
popa
fucomip
jns
call
rcr
pop
cmp
in
sti
adc
and
jae
add
gs
adc
imul
pop
iret
dec
icebp
pop
cmp
pop
sti
hlt
dec
jecxz
mov
or
pop
test
dec
sub
push
xchg
add
sub
inc
icebp
hlt
stos
push
stc
js
test
outs
mov
mov
ret
cmp
(bad)
call
xor
clc
call
movs
adc
sbb
mov
jg
imul
fwait
and
xchg
add
lods
sub
cwde
push
loope
fild
stc
mov
aam
es
(bad)
repz
(bad)
adc
mov
cmp
(bad)
push
fs
cs
rcr
imul
ins
clc
add
aam
fs
lea
cli
in
push
fwait
cmp
cld
pop
cdq
lock
add
push
jmp
cs
lahf
push
adc
jmp
inc
mov
mov
ins
fiadd
adc
addr16
xchg
(bad)
retf
add
(bad)
popf
cmp
ret
mov
aas
dec
lds
test
or
mov
sub
pop
lds
clc
ins
pop
jge
and
sub
dec
xlat
mov
icebp
mov
fs
mov
int
add
out
xlat
push
lea
xor
call
retf
add
(bad)
fstp
fmulp
sar
ins
mov
(bad)
ss
mov
mov
xchg
mov
push
mov
sbb
mov
aaa
push
xor
dec
mov
push
push
and
test
and
xor
dec
xor
loope
fs
xchg
ror
and
scas
mov
(bad)
pop
ss
sbb
fmul
or
sbb
add
jnp
int3
lea
xor
mov
xchg
dec
dec
push
mov
rcl
mov
adc
jnp
retf
popa
adc
xchg
hlt
rcr
and
mov
jl
aaa
and
mov
jg
(bad)
push
scas
mov
mov
inc
js
xor
test
adc
popa
cli
adc
sbb
cmp
dec
mov
ds
xor
xor
xchg
and
add
sahf
jmp
fistp
je
adc
pop
and
in
mov
sbb
xor
sub
test
fwait
test
movs
jecxz
mov
dec
inc
(bad)
je
dec
xor
lods
stc
cmp
loopne
popf
push
pop
xchg
dec
sar
outs
aad
and
mov
push
retf
mov
push
fld
aad
nop
dec
test
cwde
mov
aas
clc
push
cwde
sbb
pop
dec
cdq
je
dec
mov
and
mov
dec
out
(bad)
sbb
push
bound
mov
ror
(bad)
jb
ins
cli
inc
mov
add
jae
xchg
jle
pusha
adc
ins
in
mov
add
xor
repnz
icebp
dec
cli
sub
icebp
mov
push
mov
or
out
and
fcom
nop
shr
mov
movq
add
adc
popfw
xor
sub
push
out
jp
dec
jle
xlat
mov
mov
int3
xor
loope
aas
dec
sbb
ss
jno
pop
xor
idiv
les
xchg
push
cmps
shr
mov
xchg
lea
test
add
sub
adc
fist
mov
cmp
out
iret
adc
mov
xchg
inc
mov
out
mov
imul
inc
xlat
out
(bad)
ret
mov
fiadd
test
test
div
jp
adc
push
test
jnp
test
mov
dec
daa
sbb
mov
popa
in
xchg
std
mov
std
and
sbb
neg
mov
not
fist
jb
inc
inc
imul
add
mov
mov
(bad)
dec
stos
cwde
ins
mov
aam
xor
push
lods
inc
inc
mov
mov
push
in
sbb
ds
in
in
stc
inc
or
jo
iret
cmp
sbb
cmp
leave
retf
sar
das
mov
fst
sub
pop
push
lds
jo
jge
mov
daa
inc
pop
bound
or
fnstcw
sbb
or
jo
mov
mov
sub
lods
test
inc
cli
push
push
mov
scas
mov
push
xchg
lea
inc
dec
add
jnp
aad
push
jb
mov
mov
sub
mov
(bad)
dec
xor
clc
mov
scas
mov
shl
dec
inc
xor
and
cwde
lods
xor
mov
shl
cmp
xchg
jle
pushf
mov
lods
adc
push
das
xchg
cmp
inc
test
or
push
and
aam
cmp
xor
or
pusha
sub
dec
xchg
dec
jmp
dec
dec
repnz
sub
aam
lds
aas
sub
jmp
fdivr
jmp
dec
rol
push
or
push
ins
test
and
rcl
jmp
fild
daa
or
sar
popa
fbstp
xlat
mov
cmp
fsubr
mov
mov
mov
repnz
jmp
fisttp
dec
retf
xor
shl
push
push
xor
cli
mov
xor
xchg
xchg
dec
test
sub
mov
inc
shl
je
pop
add
test
dec
inc
aam
ins
jns
pop
push
pushf
js
xchg
pop
mov
hlt
rol
jno
test
outs
dec
mov
mov
inc
adc
cli
and
in
sub
inc
scas
test
outs
lods
pusha
imul
jecxz
push
shr
jno
cmps
pop
leave
dec
xor
dec
push
xchg
pop
test
imul
or
pop
mov
into
(bad)
lods
inc
hlt
xchg
and
es
pop
xor
fiadd
lea
sar
xchg
rol
xor
es
dec
fmul
out
fstp
dec
pushf
cmp
xor
cmp
loop
and
imul
jae
das
cmp
inc
mov
movs
in
cmp
imul
push
outs
inc
lahf
push
(bad)
mov
pusha
sub
shl
test
inc
sar
mov
std
pop
pushw
push
adc
mov
inc
cwde
rcl
repnz
retf
jne
pop
jmp
arpl
cmp
sub
push
jbe
add
ror
dec
adc
cmp
xchg
out
daa
fdivp
add
sar
xchg
fstp
cdq
hlt
and
add
sbb
gs
or
add
icebp
popa
lahf
sub
sbb
jae
clc
cmp
mov
push
outs
bound
int
push
dec
mov
movs
jg
pop
fwait
add
mov
std
inc
pop
lods
sti
mov
inc
pop
pop
rol
mov
mov
lahf
pusha
ins
inc
test
mov
sbb
push
(bad)
push
(bad)
and
shl
fsub
leave
push
aas
loope
das
mov
rcl
fwait
clc
jns
inc
sub
lods
(bad)
add
add
test
test
pop
fldz
mov
repnz
inc
xor
call
mov
jae
dec
imul
push
pop
out
jns
movs
out
popf
and
mov
xchg
sub
hlt
mov
sub
ret
mov
or
in
pop
popa
rcr
call
mov
or
fcom
imul
in
mov
xor
jmp
jmp
out
pop
inc
push
into
or
dec
fidivr
shl
mov
pop
pop
ds
sbb
push
loop
dec
in
pop
mov
gs
xor
fld1
sbb
popf
out
movs
adc
ins
rcr
cmp
push
jbe
push
xchg
ret
stos
popa
cmps
push
and
in
inc
or
pop
push
sbb
push
mov
(bad)
call
call
push
mov
cmc
iret
clc
scas
jg
mov
fsubr
sahf
mov
lahf
je
in
imul
cli
jle
add
xchg
or
ins
dec
mov
mov
xchg
dec
dec
das
cmps
push
test
push
jmp
mov
sahf
and
jbe
out
inc
jne
xor
cs
mov
push
out
and
sbb
movs
mov
repnz
xchg
pop
push
clc
xor
cmp
xchg
pop
retf
cmps
xor
not
cmp
xchg
dec
and
xor
ficomp
mov
outs
mov
outs
xchg
out
mov
xchg
aam
repz
dec
cmp
and
pop
mov
ret
jg
test
sub
sub
push
jo
repnz
push
inc
and
xchg
inc
xchg
add
shr
xor
mov
into
sbb
mov
push
aam
or
xlat
mov
(bad)
call
sbb
cmp
jp
out
ds
pop
lods
sbb
rol
cmp
mov
mov
cmps
ds
mov
test
and
sub
int3
popf
or
jp
sub
sahf
jp
mov
jmp
lock
pop
inc
frstor
ret
loope
xor
sbb
cmp
call
addr16
hlt
mov
dec
mov
and
pushf
jno
jbe
scas
ret
dec
in
xchg
pusha
xor
push
cmp
sbb
sahf
mov
mov
shl
adc
or
xchg
sub
xcrypt-cfb
cmps
fs
cmp
movs
cdq
xchg
shr
mov
test
es
(bad)
add
sub
jp
sbb
xor
in
add
in
fiadd
push
and
movs
push
(bad)
out
sub
mov
leave
or
popf
jns
daa
fistp
mov
out
outs
xchg
lahf
xchg
outs
aas
rcl
xchg
bound
pop
xor
out
pop
cmps
in
pop
fidivr
jmp
mov
and
pop
shr
cmc
ins
cmp
fcmove
adc
cmp
dec
and
ffree
lods
cdq
stos
in
call
inc
retf
jne
shl
cmc
imul
xlat
stos
mov
stos
int3
jge
int
mov
xor
pushf
outs
sub
pop
dec
fisubr
jmp
push
sti
inc
mov
icebp
pop
adc
imul
cmp
popf
inc
jmp
mov
sub
xchg
test
inc
cmp
je
sbb
dec
inc
mov
outs
sar
std
sub
mov
jle
pop
out
gs
pop
and
call
push
cmps
push
lods
adc
push
mov
xlat
pop
adc
sbb
jg
inc
ds
cmp
xlat
sub
fcom
cmp
dec
outs
push
ret
mov
lea
les
aam
inc
out
ins
cmp
loop
ins
fadd
xchg
xlat
xor
mov
vpshufd
(bad)
xchg
scas
adc
retf
pop
retf
mov
(bad)
scas
mov
imul
aad
push
cmp
dec
pop
or
aaa
mov
out
and
push
sub
hlt
stc
add
enter
and
inc
xchg
adc
ret
sbb
and
arpl
enter
push
call
pushf
xchg
push
rol
inc
jne
ss
nop
in
push
int
mov
mov
mov
scas
out
sub
and
cmp
xchg
ins
loop
push
rcr
dec
add
into
jmp
inc
int3
jmpw
sub
pop
cmp
and
(bad)
idiv
ds
fimul
out
push
popf
(bad)
rcl
cmp
xor
stc
pop
idiv
mov
js
test
imul
mov
dec
xor
movs
jmp
popa
xor
mov
pushf
sub
and
imul
retf
dec
rcl
lds
(bad)
out
push
ds
xchg
sub
pop
cmp
bnd
or
xchg
ins
ds
enter
mov
xor
dec
mov
pop
iret
pusha
xor
pop
cmp
pop
jne
xchg
loopne
xchg
sbb
std
fmul
or
rcr
or
or
(bad)
ins
jmp
test
mul
loopne
inc
push
xchg
add
inc
xchg
out
sbb
mov
stc
pop
inc
int
pop
shl
xor
or
enter
imul
int
cwde
pop
gs
aas
push
into
(bad)
xor
push
popf
popf
(bad)
mov
gs
mov
jne
mov
test
push
out
jne
sbb
adc
xchg
xchg
xlat
scas
into
xchg
dec
cld
fsub
dec
sbb
andnps
dec
xor
je
xchg
sbb
(bad)
test
mov
data16
inc
xchg
add
dec
ja
pop
adc
adc
fdivr
pop
loope
pop
ret
int3
mov
imul
movs
adc
(bad)
ds
xlat
bound
pop
fidiv
lods
pushf
jecxz
out
push
pop
arpl
test
cmp
xchg
mov
(bad)
and
push
push
lods
outs
push
add
call
pop
xchg
mov
(bad)
xor
adc
add
ja
jo
mov
pop
ds
or
mov
adc
jmp
pop
add
or
stc
jmp
add
popa
outs
inc
fidivr
and
iret
and
jo
in
push
push
adc
and
add
adc
mov
loopne
inc
(bad)
jo
add
jmp
mov
adc
and
jg
cmp
int
and
(bad)
test
rol
ds
add
cli
inc
sti
mov
add
sub
test
push
dec
xor
mov
push
addr16
icebp
(bad)
jne
xchg
loopne
(bad)
mov
pop
add
lods
(bad)
ins
dec
jle
out
outs
mov
sub
clc
adc
in
add
xchg
or
mov
daa
ss
push
sbb
iret
push
aam
ja
int
popa
imul
adc
pop
bound
cmp
shl
cmc
in
sbb
js
aaa
enter
sub
sub
push
cdq
fcom
cmps
lods
fld
cld
into
jl
pop
dec
pop
enter
push
cmp
xchg
sti
push
cmps
retf
mov
into
sbb
jmp
enter
add
ds
inc
enter
jmp
(bad)
aam
adc
sbb
(bad)
cli
and
sub
fcom
or
retf
shl
jae
add
(bad)
and
mov
pop
jno
(bad)
(bad)
and
pop
push
inc
push
das
add
fist
es
int3
inc
retf
icebp
xor
sbb
sbb
scas
fld
rol
int3
pushf
xchg
rol
outs
call
stos
int3
sbb
int3
add
adc
je
sub
inc
shr
inc
and
mov
jl
lods
mov
mov
dec
popf
stc
dec
xor
cmp
fadd
xor
fdivr
in
popf
push
push
aaa
sbb
xchg
cmps
mov
popa
and
jne
in
inc
pop
sbb
(bad)
xchg
ret
frstor
jne
xchg
cmp
mov
mov
inc
push
call
gs
pop
jo
into
xor
leave
out
jp
and
sbb
inc
ror
sub
test
(bad)
pop
jmp
es
xor
pusha
fist
shr
jle
ret
cmp
dec
aad
ins
inc
mov
scas
push
fldcw
enter
pop
jo
push
sbb
push
fld
dec
push
lods
and
cmp
mov
push
inc
inc
pop
int3
gs
loopne
sbb
call
ss
jbe
jns
inc
and
xchg
(bad)
std
dec
add
jae
fnstenv
mov
lahf
fild
sub
rcl
fild
lods
push
outs
lock
xor
dec
inc
dec
or
bound
mov
aaa
in
push
xchg
or
es
sub
dec
dec
sahf
and
ror
ret
jg
sbb
mov
arpl
bound
push
push
jne
add
lods
adc
stos
jbe
cwde
iret
pop
je
sub
mov
add
inc
jmp
mov
add
inc
fcom
out
cmps
or
pop
sbb
fwait
lods
xor
or
fisubr
test
sub
sub
jmp
shl
fs
dec
fsubr
leave
adc
push
loop
pop
lahf
dec
xchg
mov
ret
adc
xchg
jle
or
xchg
adc
inc
mov
pop
mov
and
jns
ja
xor
or
cmp
xchg
sbb
pop
(bad)
popa
xor
adc
jbe
int3
fst
fsubr
jle
retf
or
mov
mov
cli
aas
clc
popf
mov
mov
jno
xchg
cmp
iret
clc
test
pop
neg
and
loopne
or
cmp
div
fsub
addr16
xchg
out
call
clc
out
fs
ret
mov
or
mov
pop
mov
dec
ja
mov
xchg
xor
inc
xor
inc
mov
fsub
fcom
or
ret
rol
push
loope
xchg
mov
pop
mov
and
arpl
fsub
xchg
rcr
cmp
mov
push
sub
sub
ja
pop
mov
push
cmps
test
scas
leave
cwde
mov
jne
lods
or
hlt
push
pop
xchg
out
cmc
vmovsldup
adc
fstp
add
aas
call
sub
pusha
fs
scas
xor
div
shr
mov
mov
add
sub
mov
aad
aas
pop
imul
mov
adc
mov
or
dec
dec
cmp
pop
ins
mov
cmp
jp
and
mov
mov
pop
or
dec
mov
in
ja
hlt
or
rol
or
pusha
shl
add
call
and
sbb
mov
mov
pop
lds
mov
fisttp
mov
lods
retf
stos
call
adc
ins
xor
out
fld
adc
jle
push
mov
fmul
inc
test
loop
inc
jns
in
adc
mov
mov
movs
test
int
nop
push
test
outs
fndisi(8087
xor
in
xor
in
xchg
sbb
pop
jmp
bound
or
xor
lock
not
lahf
arpl
nop
mov
test
pop
ret
popw
into
(bad)
ins
imul
jbe
ret
sar
xor
and
cmp
rcr
outs
push
mov
call
popa
jmp
clc
ja
popf
shr
sub
fbld
mov
cwde
scas
bound
dec
fimul
and
outs
pop
nop
nop
xchg
pop
ret
pop
repz
adc
mov
ins
test
in
das
xor
dec
fucomi
movs
push
jg
and
sbb
movs
mov
les
mov
ret
aam
pop
pusha
sbb
out
leave
sub
pop
add
lods
push
pop
push
mov
add
jnp
mov
lahf
addr16
mov
(bad)
aas
test
fistp
xor
js
pop
mov
data16
sbb
(bad)
jb
lock
xchg
adc
(bad)
pusha
fs
call
mov
cmp
fcomp
mov
adc
mov
jae
gs
rol
out
repz
popa
pop
xchg
dec
test
push
dec
jbe
pop
dec
and
xor
inc
jno
jnp
and
outs
repz
sbb
or
dec
jb
les
je
gs
mov
fld
mov
xor
push
cmp
nop
inc
pop
add
mov
cmc
cdq
sbb
xor
push
imul
sbb
ins
cmp
fistp
(bad)
cld
fld
xor
sbb
jle
push
aaa
pop
push
(bad)
loopne
adc
mov
imul
lock
vunpcklps
imul
jbe
dec
jg
xchg
repnz
mov
dec
fmulp
sbb
pop
jl
and
fs
push
lahf
test
ror
push
in
mov
dec
cld
jle
repnz
push
popf
adc
out
xchg
mov
jb
sti
sar
sub
pop
outs
in
(bad)
cmp
loop
out
stos
dec
sbb
ins
jecxz
or
mov
imul
mov
dec
add
adc
jl
pcmpeqb
arpl
cmp
and
retf
push
out
jo
lds
sub
and
fcomp
cdq
loopne
call
fbstp
in
ds
inc
dec
sbb
mov
je
mov
mov
xchg
mov
mov
xchg
icebp
inc
push
pop
leave
adc
bound
jo
scas
stos
or
jns
sbb
cmp
aam
les
push
call
sahf
ror
ds
and
lahf
push
cmp
shl
mov
jmp
lahf
std
or
inc
cmps
pop
sar
sub
aam
loopne
xor
scas
aas
test
js
mov
mov
jne
or
arpl
stos
(bad)
adc
add
ret
test
push
lods
outs
pop
std
mov
or
rcl
pop
stos
sub
add
mov
mov
movsx
cmp
sub
pop
jg
fidiv
pop
(bad)
xor
pop
push
rol
arpl
ins
push
loope
xchg
mov
mov
dec
ficom
xchg
push
inc
cdq
das
xchg
icebp
xchg
ds
push
xchg
cmps
std
mul
push
cli
jmp
mov
int3
repnz
ja
mov
xor
mov
and
imul
fisttp
inc
cmps
pop
fsubr
fstp
and
and
loope
stc
xchg
adc
push
shl
xlat
sub
sti
sbb
jp
inc
xchg
sub
(bad)
ins
ins
ror
inc
dec
pop
das
sti
not
and
sub
movs
(bad)
es
xor
(bad)
cmp
test
jnp
or
sub
mov
ins
cld
push
sahf
ds
add
jg
xchg
je
dec
inc
cmps
jno
in
fnstenv
mov
iret
movs
dec
ret
outs
outs
xor
xchg
sub
or
dec
add
(bad)
sub
jbe
inc
or
sbb
add
jno
inc
xchg
adc
or
add
xchg
push
lods
pop
push
ror
sub
data16
dec
mov
xor
push
sbb
push
cmp
adc
(bad)
out
je
pop
adc
inc
or
cmp
jmp
xor
mov
in
and
ja
aaa
xchg
and
jns
pop
jmp
dec
or
ins
jo
sar
bound
jo
cmp
(bad)
mov
mov
out
(bad)
fld
and
pop
xchg
inc
add
addr16
in
test
in
scas
jns
cdq
loope
dec
movs
imul
(bad)
lods
ds
jge
popa
stos
mov
sbb
inc
and
ret
xchg
mov
out
push
mov
cmp
imul
adc
imul
jle
ret
adc
jno
rcl
and
jl
fs
pop
int3
xor
enter
in
sub
pop
cmp
ror
in
jns
cld
sub
xor
sar
push
sahf
add
jnp
aaa
ret
imul
call
mov
push
shl
in
xchg
repz
pop
push
imul
lea
inc
pop
loopne
js
add
les
push
outs
jbe
or
mul
adc
and
xchg
mov
xor
cmp
add
rcl
ss
sub
das
pushf
popa
cmp
xchg
in
xor
into
mov
call
cmp
lods
and
in
cmps
xchg
leave
cs
aas
cld
outs
lock
mov
xchg
popa
repnz
xor
(bad)
je
fwait
stc
mov
inc
sub
leave
repz
cmp
lahf
xchg
jns
dec
les
pop
mov
pop
jle
sti
mov
in
push
hlt
inc
adc
xor
les
cld
xchg
in
add
xlat
adc
cmp
stc
scas
imul
sub
test
in
mov
inc
cli
sti
imul
(bad)
jmp
fcom
adc
inc
call
cmps
sbb
xor
pop
vhaddpd
jp
scas
dec
sahf
fsub
add
mov
xor
movs
mov
pop
and
push
mov
or
aas
push
jno
xor
shl
repnz
jne
cmc
lods
and
sbb
mov
fs
sub
adc
cmp
into
pop
sub
xchg
inc
cmp
inc
and
xor
inc
int3
cld
or
sbb
cmp
fmul
rol
outs
mov
mov
dec
sbb
clc
dec
mov
stos
push
mov
iret
cld
in
repz
test
push
dec
jmp
iret
xchg
cld
repz
loop
sbb
adc
xchg
scas
xchg
or
aas
mov
push
arpl
repz
mov
cmp
lods
iret
loopne
in
repz
mov
stos
into
test
sar
xor
rol
cmp
mov
xlat
movs
mov
mov
and
mov
xchg
nop
fnstcw
fidivr
mov
leave
in
gs
pop
cmps
xchg
jo
jecxz
sbb
mov
enter
je
aaa
xchg
push
shr
sub
std
xor
adc
leave
cmc
out
mov
mov
stos
mov
(bad)
test
sahf
cmp
mov
pop
fbld
inc
pop
mov
jo
sub
mov
das
push
arpl
push
xor
and
retf
dec
fwait
cli
xchg
sbb
inc
outs
push
into
neg
mov
sbb
mov
add
jne
inc
sbb
les
popa
jns
push
xchg
mov
adc
dec
pop
inc
jns
jle
stos
int
pushf
fimul
(bad)
stos
sbb
mov
jo
cmp
in
jl
and
outs
sub
movs
aas
loopne
xlat
add
push
mov
cld
(bad)
add
inc
push
dec
add
ins
lods
stos
fcom
add
pop
fidiv
jne
and
test
inc
mov
pop
imul
(bad)
or
loop
mov
movs
fs
adc
movs
and
sub
jo
(bad)
shl
aad
or
push
jo
scas
inc
sbb
lock
je
jae
and
mov
int3
push
idiv
ss
shl
imul
pop
cmps
imul
outs
or
popa
sbb
sub
stos
jae
scas
into
pop
(bad)
lock
or
pop
ja
jae
and
pop
iret
mov
ss
push
js
sar
mov
adc
sahf
cmp
xlat
sar
add
movs
fld
retf
sub
fild
add
mov
inc
pop
aaa
data16
cwde
(bad)
mov
cmp
dec
in
out
mov
xchg
arpl
xor
xchg
or
jge
mov
adc
pusha
ss
xchg
jb
jo
and
sub
jge
pop
ja
push
xchg
mov
jmp
push
sub
pop
mov
jmp
popa
ret
mov
or
mov
cmps
ja
add
sub
in
imul
popf
lods
or
add
push
xchg
xor
mov
in
call
inc
add
icebp
xor
dec
dec
cwde
cmp
retf
mov
xor
(bad)
bound
sub
mov
jno
sub
cmp
lds
es
out
pop
(bad)
cmp
fwait
and
dec
(bad)
add
mov
addr16
mov
(bad)
imul
pop
test
mov
inc
outs
jmp
(bad)
dec
imul
retf
out
sbb
and
gs
jg
mov
xor
rcl
mov
jg
cmc
sbb
jge
aas
xlat
scas
ja
and
xchg
adc
cmp
xchg
hlt
xor
(bad)
cmp
adc
aaa
inc
add
cmp
inc
repnz
xchg
lods
rcl
pop
add
into
pop
dec
cmp
mov
out
iret
popf
jle
xchg
dec
adc
xchg
sub
jb
ror
jp
test
xor
jns
push
cmps
lods
clc
jp
outs
test
xor
mov
jmp
adc
fst
pop
dec
push
jl
sbb
ficomp
(bad)
xchg
jmp
inc
sbb
add
pop
call
(bad)
sar
bound
shl
xor
leave
mov
addr16
mov
sbb
arpl
lock
cmp
lds
sub
xor
adc
adc
xchg
retf
pop
mov
ja
mul
lods
dec
cwde
dec
fisttp
loopne
inc
adc
sti
test
shl
jg
add
mov
aaa
xchg
add
dec
mov
mov
push
fcom
inc
inc
aad
mov
sar
mov
enter
mov
mov
iret
pusha
xor
cmp
and
jne
fwait
cmps
cdq
int
js
jns
mov
push
jp
rol
mov
sub
mov
xchg
jae
and
xchg
out
push
sbb
mov
jne
pop
fisttp
pop
mov
mov
cmp
mov
sub
outs
lds
mov
bound
cdq
adc
repz
popf
movs
or
shl
sub
xor
jmp
add
fnsave
scas
sub
cwde
xor
jno
(bad)
std
mov
cmp
hlt
loopne
bound
sub
cli
clc
jno
sub
jnp
in
xchg
mov
add
ds
icebp
sub
outs
dec
nop
add
cmc
test
dec
sub
add
pop
pop
and
push
ror
test
pop
dec
fimul
iret
call
xchg
out
mov
ret
mov
dec
and
cmps
mov
(bad)
xor
mov
dec
sub
(bad)
ds
cmp
and
inc
in
or
cmp
mov
fild
push
and
(bad)
push
iret
cmp
sub
pop
dec
xor
or
popa
dec
sub
int
in
push
xchg
nop
sub
mov
mov
xor
push
sub
int
add
mov
mov
pushf
std
adc
mov
add
push
push
jne
lock
mov
pop
mov
rcl
inc
idiv
cmp
sub
pop
cmp
jmp
out
sub
lods
je
aas
rol
leave
xor
test
mov
xor
neg
xchg
sbb
into
loopne
xchg
fs
mul
call
outs
cmps
out
add
lock
loope
cs
push
dec
pop
div
jl
rol
fiadd
pop
je
imul
lahf
mov
ss
or
xor
in
fimul
add
cdq
pop
jne
lahf
je
jmp
pop
int3
or
ret
dec
xor
sbb
or
sbb
dec
mov
mov
lahf
shl
push
inc
(bad)
iret
enter
cmp
xor
scas
dec
rol
cmc
inc
in
mov
sub
pop
pop
push
and
inc
push
xchg
jb
pop
jg
jp
jbe
cmp
and
es
pop
push
test
adc
pushf
out
stos
add
imul
jns
fild
cs
ficomp
ins
icebp
xchg
xchg
xchg
cmp
dec
adc
and
(bad)
imul
lods
sahf
pop
pop
ror
jmp
outs
push
imul
dec
lahf
loope
out
scas
hlt
sar
push
xchg
call
iret
or
movs
cli
and
sbb
mov
xor
cmp
sbb
pop
mov
rcr
inc
shl
out
call
adc
push
push
jle
cdq
mov
dec
push
inc
add
imul
or
lds
fdivr
mov
(bad)
out
pusha
pop
pop
in
hlt
xor
mov
jp
cmp
stc
push
das
pop
mov
inc
enter
xor
cmp
push
mov
in
stc
cmp
mov
js
jne
dec
(bad)
out
pop
inc
js
imul
in
inc
jge
or
(bad)
in
retf
out
mov
sub
test
dec
ret
mov
sti
mov
jae
xor
jle
sbb
(bad)
cld
adc
sub
mov
(bad)
adc
call
lahf
mov
mov
bound
pop
ror
fisubr
jle
shl
mov
xchg
jle
rcl
int3
js
xor
pop
fsub
push
loop
lods
push
call
mov
mov
test
sub
fwait
ja
xadd
mov
sub
push
pop
cmp
or
test
retf
test
fadd
mov
mov
add
sub
lahf
or
pop
xchg
(bad)
jl
test
push
dec
stos
cmps
push
mov
add
in
(bad)
call
push
xchg
xlat
outs
mov
mov
outs
sub
nop
xlat
lods
adc
scas
push
mov
sbb
clc
(bad)
fidiv
inc
inc
and
xor
push
cmp
lods
and
shl
ds
out
std
pop
and
inc
inc
outs
test
dec
ins
push
call
inc
cmp
dec
movs
mov
mov
sahf
into
addr16
(bad)
retf
cmc
xchg
mov
inc
jae
es
xor
stc
lock
aas
adc
lock
push
sbb
call
popf
xchg
mov
jo
pop
fst
sub
lods
pop
sub
adc
inc
lods
repnz
pop
outs
fstp
or
sbb
loop
(bad)
and
pop
cmp
fcom
stc
mov
push
loopne
cwde
push
xchg
push
movs
mov
cmp
add
or
sub
std
jmp
stos
add
(bad)
das
sqrtps
jg
gs
xor
xchg
gs
dec
aas
popa
xor
or
jge
or
imul
or
lds
cmp
shl
rcr
das
mov
mov
and
ror
lods
out
cmp
or
add
out
pop
es
and
(bad)
xor
adc
cmc
cmp
pop
add
je
push
out
(bad)
sbb
xchg
cmps
stc
inc
lock
neg
xor
(bad)
sti
push
ficomp
lock
sub
(bad)
and
mov
pop
mov
jmp
cmp
mov
gs
shr
push
fs
inc
or
ret
xchg
adc
or
aas
in
pop
cmps
ror
stc
into
mov
shl
push
cmp
pop
adc
xor
cwde
adc
or
mov
ror
push
fcmove
dec
push
fisub
inc
imul
test
outs
loope
fimul
movs
mov
fcom
data16
mov
movs
cmp
push
cmc
pushf
aam
dec
lahf
inc
jp
fwait
aad
out
(bad)
pop
mov
iret
test
cmp
dec
je
out
cmps
cmp
aad
std
sar
pop
cmp
outs
sub
cmp
mov
gs
push
into
enter
(bad)
jmp
lods
dec
fcomp
sbb
in
pop
pushf
adc
std
mov
cli
mov
pushf
pop
lea
cmp
repz
icebp
dec
in
mov
mov
mov
or
xchg
ins
ins
mov
mov
retf
mov
imul
loopne
pop
adc
mov
inc
push
cmp
js
inc
mov
mov
lds
inc
jnp
aad
xchg
jno
sbb
jg
pop
test
push
jnp
clc
pop
mov
cdq
das
mov
sbb
add
ss
sbb
mov
mov
and
fist
(bad)
jb
into
push
ret
in
jge
hlt
mov
push
retf
lahf
jmp
adc
das
mov
iret
idiv
mov
mov
xorps
cmps
cmp
inc
sti
test
or
loopne
jne
outs
(bad)
cld
push
stos
into
(bad)
mov
mov
sub
and
cmc
mov
imul
mov
inc
push
mov
sahf
cmps
inc
cmps
mov
jno
and
inc
fstp
scas
pop
xchg
push
pop
mov
outs
aas
mov
cmp
jmp
je
jle
fwait
stos
ret
mov
sti
dec
mov
ja
mov
push
or
sub
inc
ror
xor
shl
sbb
jns
xlat
ret
dec
cmp
push
mov
movs
ret
and
jp
add
dec
ret
frstor
and
fwait
push
in
rcr
jle
bound
scas
sub
cmc
int3
aas
xchg
pop
pop
popf
iret
mov
jp
(bad)
fnstcw
xor
loopne
iret
paddsw
jl
out
pusha
jecxz
sub
bsf
mov
dec
and
sbb
movs
scas
cvtps2pi
inc
pop
inc
pop
inc
pop
cmp
fild
cmp
push
dec
fcmovbe
int3
mov
mov
ror
sti
cs
or
inc
jge
aad
stos
imul
(bad)
push
popf
and
inc
cld
retf
scas
jae
cmps
repz
jns
imul
jne
cmp
fcmovnb
push
repz
inc
adc
jmp
mov
bound
mov
mul
lods
push
popa
sub
inc
lods
inc
dec
lods
add
shl
fs
cmc
or
xlat
push
popa
add
lods
cmp
sti
adc
jp
fisttp
aaa
in
xacquire
xchg
shl
test
add
daa
xchg
ja
out
cmp
adc
lods
jb
stos
jle
call
or
pusha
jne
mov
int3
movs
jle
xor
test
js
xor
jge
sub
jnp
rcr
scas
xchg
mov
dec
jb
enter
popa
rcr
xchg
ret
leave
ins
add
in
out
mov
in
idiv
jo
jmp
ds
dec
pusha
les
lods
ds
outs
jae
jns
rcl
sbb
popa
push
xchg
xchg
lea
fadd
cmp
rcl
cmp
shl
lahf
dec
jo
sub
and
leave
shl
xchg
or
aaa
nop
sahf
(bad)
mov
fcmovne
repnz
jmp
jns
jns
adc
adc
adc
lds
pop
inc
test
pop
ret
pop
jmp
fdiv
shl
mov
neg
scas
pop
shl
ja
push
repz
div
or
xlat
fst
rcl
rcr
ret
in
inc
call
icebp
aam
sbb
inc
adc
fst
ret
les
fadd
adc
mov
push
movs
jg
arpl
call
mov
loop
stc
arpl
jecxz
xor
lds
dec
test
add
xor
sub
retf
aam
imul
loope
xor
scas
add
xlat
xor
ins
mov
adc
xor
mov
sub
out
mov
jno
call
and
enter
dec
push
jbe
lods
fnsave
ins
add
push
hlt
pop
int
or
cmps
in
inc
mov
enter
repnz
fstp
fwait
xchg
in
push
adc
outs
repz
popf
outs
jo
pop
adc
aaa
fdivr
adc
popf
push
inc
lods
push
sbb
fld
enter
jl
add
outs
pop
jge
pop
addr16
push
outs
jmp
cmps
jmp
(bad)
in
mov
jns
ins
inc
push
js
pop
movs
test
jns
sbb
cmc
xor
popa
jno
jmp
dec
sub
sti
outs
movs
xchg
sahf
dec
or
mov
inc
ins
sub
mov
retf
out
ret
cmp
push
test
cli
out
es
or
mov
xlat
push
call
pop
pop
push
aaa
cli
cmp
loop
rcl
jmp
aaa
in
inc
sub
jb
add
test
pop
push
std
sub
jns
out
xor
jnp
(bad)
(bad)
push
jmp
clc
sar
popa
fdivr
jb
ret
add
push
inc
sbb
pop
bound
jno
lds
movs
fmul
mov
sub
icebp
jl
imul
xor
jg
iret
mov
push
inc
and
dec
jb
je
(bad)
sbb
sbb
inc
ds
iret
jge
outs
mov
pop
hlt
mov
push
out
add
lea
mov
add
fisub
mov
adc
lds
int
mov
push
xchg
sbb
aad
(bad)
mov
pop
or
or
ror
push
pop
movs
ror
or
pop
imul
outs
xchg
sub
ror
ret
pushf
mov
int
add
cmp
jle
loopne
sub
in
push
sbb
mov
adc
into
imul
push
imul
test
mov
mov
or
in
mov
jmp
lea
and
mov
pop
jo
gs
scas
sub
sbb
dec
retf
shl
or
jb
jo
arpl
xor
jmp
(bad)
mov
les
push
push
mov
ds
adc
xchg
scas
mov
mov
jo
or
retf
mov
sbb
push
jnp
mov
push
imul
ret
mov
xchg
adc
or
in
imul
xchg
stos
ss
adc
mov
mov
scas
(bad)
frstor
mov
fnsave
xchg
scas
cmp
adc
out
mov
mov
mov
sbb
call
shl
jle
mov
fsubr
sbb
(bad)
sbb
imul
sub
mov
inc
lods
and
xchg
adc
adc
push
adc
mov
fisttp
aas
mov
mov
ror
or
xchg
in
aad
or
cwde
inc
mov
cmps
jle
adc
movs
icebp
out
push
xor
xor
cmp
or
stc
jbe
mov
fmul
xor
mov
movs
add
outs
call
sbb
ret
repnz
mov
xchg
push
xchg
pop
add
neg
fnstenv
inc
pop
loopne
jne
fild
cli
in
ud1
pop
cwde
or
in
movs
jo
adc
mov
xor
mov
hlt
dec
loop
lahf
add
and
pop
mov
mov
enter
int
mov
mov
dec
dec
cmps
ror
inc
mov
pop
sub
inc
ds
inc
push
xor
iret
mov
jo
std
retf
lea
push
push
das
mov
cmp
push
test
out
fisub
sti
retf
fisttp
test
imul
sbb
mov
push
mov
sti
xor
dec
cmc
fdivr
into
mov
pusha
jmp
jg
popf
push
xchg
xchg
add
or
mov
and
xor
mov
stos
sbb
xor
in
cmc
xchg
dec
xchg
sti
mov
dec
test
push
xor
mov
pmulhuw
repz
add
sti
pop
mov
pushf
mov
dec
adc
out
(bad)
xchg
outs
mov
loop
push
or
cmps
repz
cmp
cmp
int
imul
mov
xchg
xchg
test
(bad)
pusha
fs
aad
adc
(bad)
imul
mov
retf
movs
xor
jns
int3
sub
jmp
push
or
xchg
icebp
js
add
je
in
int
pop
mov
inc
ficomp
(bad)
int3
mov
push
and
mov
(bad)
icebp
cmp
cmc
mov
inc
jno
out
rol
mov
imul
xor
jmp
cwde
sar
(bad)
jl
mov
aas
repnz
nop
pop
push
(bad)
js
clc
lss
aad
rcl
(bad)
jns
out
imul
xor
cld
push
fwait
jns
popf
inc
cwde
add
ret
in
adc
mov
pop
dec
mov
xchg
adc
iret
and
push
push
in
rcl
jmp
arpl
clc
inc
cld
cdq
xchg
push
jg
inc
push
mov
stos
outs
xchg
cld
into
inc
mov
nop
cwde
add
sbb
ins
imul
hlt
push
aam
xor
sub
daa
aam
pusha
movlps
aas
(bad)
das
(bad)
mov
add
xchg
fidiv
adc
cs
mov
adc
cmp
dec
iret
(bad)
leave
outs
sub
mov
loopne
adc
icebp
das
adc
je
mov
push
dec
pop
cmc
cmp
pop
arpl
mov
arpl
or
mov
test
pop
je
leave
mov
jl
pop
jne
stos
xor
inc
data16
adc
add
ja
dec
mov
inc
adc
fist
ss
into
mov
data16
stc
sbb
dec
pop
mov
dec
sub
aas
xor
sbb
xor
shl
out
clc
aam
pop
jns
pop
mov
hlt
paddusw
push
add
out
adc
and
lods
cmp
cmp
mov
cmp
sti
push
push
nop
pop
fdivr
loop
inc
xor
fisub
jge
cmp
ss
and
inc
(bad)
or
mov
rol
jmp
mov
pop
test
(bad)
out
dec
xchg
shl
cmc
cmp
cld
dec
or
cmp
es
int3
pop
xor
add
fxch
pop
xchg
fwait
and
pop
dec
pop
sbb
ss
dec
mov
xchg
mov
mov
shl
imul
mov
cmp
jle
jmp
test
sbb
ss
xchg
add
sub
jbe
sub
push
retf
or
out
jge
idiv
push
dec
rol
mov
cmps
mov
lds
ja
ins
mov
sbb
shr
push
xchg
mov
lahf
mov
fdivr
dec
jnp
mov
inc
sub
adc
and
fwait
outs
shl
push
mov
xchg
enter
je
les
sti
ss
ffreep
pop
scas
jnp
mov
cmp
mov
cmp
retf
pusha
push
std
lahf
xchg
sbb
ins
and
cmp
cmc
mov
mov
sub
dec
sub
mov
dec
movs
and
inc
fs
gs
sub
nop
call
xor
mov
and
and
cmc
lock
jns
and
retf
into
ins
adc
lea
and
frstor
xor
jle
mov
sar
ret
mov
loop
ret
mov
ins
hlt
cwde
xor
out
pushf
je
(bad)
cmp
mov
fs
daa
push
aam
inc
pusha
shl
and
mov
jecxz
cmp
icebp
mov
adc
enter
mov
xor
ret
xchg
xor
push
jnp
mov
es
sbb
xor
in
sub
test
scas
sar
int3
iret
sub
in
stos
xlat
pop
and
in
in
sub
fld
in
mov
out
push
pop
imul
push
push
outs
pusha
aas
dec
rol
imul
sub
push
shl
gs
xchg
mov
nop
dec
fstp
sub
jg
jne
ds
repnz
cmp
mov
pushf
rcr
jb
pop
push
rcl
sbb
imul
repz
or
push
and
push
push
cmp
cmp
sub
xchg
mov
or
cmp
call
ror
sti
xchg
add
fwait
iret
mov
fcmovu
push
(bad)
dec
mov
nop
mov
add
je
sbb
jno
(bad)
jno
cmp
rcr
sbb
lock
sub
out
adc
mov
test
jle
mov
repz
xor
imul
mov
adc
retf
jmp
int
xchg
pop
mov
sub
push
test
xchg
sbb
out
fld
push
lods
push
neg
and
dec
push
lods
bound
mov
inc
jmp
push
mov
and
repnz
sahf
idiv
movaps
(bad)
mov
lahf
xlat
add
(bad)
out
push
sbb
out
cmp
dec
adc
ds
outs
sub
mov
fs
in
bound
fiadd
or
lahf
jnp
stos
out
imul
test
xchg
push
int3
pop
out
mov
dec
and
sub
jge
fidiv
fist
mov
mov
aas
mov
bound
test
xchg
xchg
push
imul
scas
cmp
sbb
push
rcl
cwde
popf
mov
(bad)
dec
arpl
mov
sahf
sub
sbb
jne
lea
scas
adc
or
jne
(bad)
jecxz
cmp
xchg
aad
arpl
inc
(bad)
jnp
imul
stos
cmp
inc
sar
dec
enter
mov
inc
push
push
mov
ror
lds
inc
inc
scas
and
int
out
leave
out
pop
aam
jns
pop
imul
into
repz
in
es
jo
mov
adc
fs
ror
cmps
jge
fcmove
in
mov
xchg
fsub
enter
pop
push
pop
stos
fisubr
or
and
jmp
fcmovbe
test
cli
movs
cmps
sbb
sbb
cmp
xchg
sti
imul
inc
retf
mov
add
enter
maskmovq
jge
inc
loopne
push
cmp
or
pop
rol
jl
popa
xchg
ds
cmps
mov
movs
jmp
out
inc
ss
push
push
loopne
in
dec
and
ins
inc
cmp
jecxz
pop
pusha
mov
cmp
bound
std
pop
or
sar
push
cli
adc
mov
jns
xor
cdq
mov
adc
movs
arpl
aaa
ror
mov
jge
xor
adc
jmp
out
sub
or
scas
jne
sub
enter
xchg
jb
retf
rcr
rcl
lds
or
sar
ins
aam
add
pop
pop
js
push
mov
xchg
and
ds
pop
(bad)
cmp
sar
sbb
fst
add
mov
pop
inc
xor
div
and
mov
mov
mov
and
aad
pop
sub
loopne
jmp
sub
repz
mov
fwait
popa
into
or
push
inc
aam
xchg
adc
sub
add
mov
mov
rcl
xor
bnd
ins
in
xchg
add
xor
ins
sti
adc
mov
push
mov
dec
xor
pop
out
out
gs
in
retf
loope
inc
repnz
sub
dec
out
aam
push
out
adc
or
pop
xchg
js
mov
in
sbb
xor
out
mul
sbb
movs
mov
jmp
cmp
or
xchg
pop
add
lock
xchg
xchg
fcom
lds
mov
popf
cmps
pop
and
push
sbb
out
inc
and
iret
sub
inc
enter
movs
mov
mov
jb
pop
add
aam
mov
sub
pop
seta
nop
std
outs
adc
ins
jae
rcr
repz
or
(bad)
mov
mov
mov
ret
repz
jge
mov
xchg
add
push
dec
add
idiv
pop
pop
adc
mov
jo
clc
mov
in
push
bound
mov
je
lock
pop
mov
mov
mov
ins
(bad)
int
lea
push
xchg
shr
nop
pushf
dec
push
call
cmps
mov
rol
cmp
lahf
sbb
retf
in
fbld
and
pushf
xlat
lock
ror
(bad)
jle
xor
jmp
add
fucomip
icebp
fcom
sbb
mov
and
xor
mov
add
xchg
pop
aad
inc
pop
fist
mov
add
call
daa
sub
jmp
fwait
cli
dec
pushf
mov
outs
xchg
mov
adc
aam
and
stos
scas
sub
xchg
jbe
sub
fdivr
sti
int
cmp
fdivp
mov
call
mov
adc
test
jmp
mov
bswap
idiv
retf
or
out
mov
popf
retf
and
movs
pop
or
stos
xor
sub
or
mov
jns
cwde
jnp
add
cmp
popa
mov
(bad)
fldz
pop
add
fiadd
jl
cli
and
(bad)
in
mov
sub
jne
sbb
sbb
or
pushf
std
mov
sub
xor
imul
loop
sub
movs
shl
mov
xchg
cwde
mov
cmp
cmp
adc
xchg
out
repz
ret
lock
jnp
loop
shr
cmp
clc
int
ret
outs
data16
xchg
stc
inc
and
jle
cmc
shl
ror
nop
fistp
inc
add
ins
inc
jno
mov
retf
pop
push
jecxz
and
mov
ss
or
jg
into
lahf
pop
sub
rcl
stos
and
push
rcr
adc
test
mov
es
test
ins
jae
outs
(bad)
loop
push
fmul
jl
xor
or
jnp
push
push
stos
dec
mov
imul
xchg
mov
adc
pop
out
sbb
pop
fldcw
loopne
mov
xor
jno
lock
jp
and
das
jnp
inc
mov
inc
pop
or
sbb
push
add
pusha
pushf
push
into
arpl
pusha
add
jp
push
lock
lahf
rol
fld
mov
and
rol
rol
dec
push
mov
inc
push
push
idiv
or
jb
sbb
lea
stc
outs
xor
sar
dec
mov
jmp
ret
mov
push
push
and
push
mov
ficomp
(bad)
push
movs
out
cmp
push
rol
(bad)
push
std
outs
lahf
sub
nop
aaa
daa
fcom
call
sbb
xor
outs
or
outs
outs
shl
sbb
mov
jmp
(bad)
loope
add
mov
add
fisttp
xchg
inc
sahf
dec
add
dec
sub
test
mov
aaa
retf
jp
pop
xchg
fnstcw
leave
xor
jns
xor
mov
mov
call
xor
stc
pop
shr
dec
pop
aas
or
cmp
fs
jbe
cmps
fidiv
adc
(bad)
mov
jns
add
ins
cld
leave
out
dec
pop
shr
rol
dec
or
xor
test
lods
(bad)
jmp
call
adc
add
sbb
into
xchg
call
xor
xchg
cli
sbb
cmc
xchg
sbb
cld
(bad)
mov
nop
sub
xchg
jno
sbb
sti
adc
aas
xlat
mov
retf
xchg
push
jecxz
fucomp
cld
imul
mov
test
mov
or
mov
cmps
dec
jmp
outs
sbb
addr16
aam
adc
fdiv
int3
hlt
bswap
dec
call
push
jmp
ret
add
lahf
in
pusha
ins
or
pop
out
xor
ficomp
mov
cmp
jbe
cmp
push
fsub
pushf
hlt
pop
pop
into
pop
aas
leave
popf
rcl
fsubp
outs
je
shr
dec
sub
jmp
adc
cli
inc
es
lea
call
mov
cld
jecxz
addr16
add
or
jbe
dec
cld
xchg
test
xchg
push
mov
lea
movs
sub
in
fsub
ss
ja
adc
sub
je
pushf
dec
and
cmp
add
nop
cmp
fcmovnbe
out
aas
lock
cdq
(bad)
or
push
mov
cld
rcr
pop
xchg
je
mov
pop
fsub
pop
outs
les
int3
lods
dec
rcr
cmp
in
dec
jecxz
pop
out
addr16
sbb
inc
sbb
popa
cs
fsub
jbe
stos
sbb
clc
repz
mov
xor
aad
add
and
adc
xor
xchg
sbb
inc
pop
in
xchg
sbb
mov
mov
ror
(bad)
xchg
sbb
cmc
leave
cmp
mov
popf
stc
pop
pop
and
ret
xchg
div
jo
shl
pop
fsubrp
fistp
mov
stos
(bad)
in
int
mov
jbe
hlt
lds
push
xchg
and
sbb
scas
push
mov
nop
mov
bound
ret
xor
pop
cli
in
add
gs
inc
out
pop
rol
add
pop
arpl
cdq
add
mov
add
or
xchg
inc
fidivr
push
pop
adc
mov
js
jp
es
mov
push
in
jb
ror
mov
aam
ins
jg
adc
xchg
mov
xor
sub
push
jbe
or
(bad)
and
cdq
sbb
sar
dec
into
jae
dec
and
iret
jb
pop
cmp
jo
gs
sbb
cmc
mov
dec
retf
pop
test
cmp
xor
scas
icebp
dec
push
loop
clc
test
repz
adc
sub
pop
inc
mov
cmp
push
sar
xchg
mov
enter
xor
fidiv
xchg
ins
dec
call
or
sahf
aam
test
fist
push
fwait
mov
aam
jb
es
movs
popf
xchg
loopne
jmp
lods
retf
mov
imul
aaa
pop
xchg
xor
iret
mov
and
leave
or
or
inc
xchg
movs
xchg
(bad)
test
in
in
aam
mov
push
jb
popa
test
lds
mov
xchg
add
stc
jmp
add
xchg
mov
push
loope
fst
adc
into
in
test
mov
xchg
xchg
jl
push
jbe
xchg
fst
daa
inc
lods
cmp
mov
sbb
aas
xchg
jmp
cmp
hlt
and
cmp
popf
(bad)
fmul
xchg
cmp
fwait
nop
mov
sub
xchg
dec
lods
push
movs
daa
test
or
jg
out
pop
int
pop
xchg
add
pop
je
mov
mov
je
dec
push
mov
mov
ret
jno
out
test
mov
mov
or
sti
dec
add
test
dec
mov
call
cmp
sbb
dec
xchg
or
into
xchg
mov
jns
and
cmp
push
or
jle
sub
lods
lods
or
add
xchg
jge
dec
lds
xor
test
mov
aad
ins
xchg
mov
(bad)
cs
scas
enter
adc
mov
test
push
stos
jae
lock
jae
repz
mov
aad
sub
adc
shl
outs
mov
dec
nop
xor
sbb
xchg
les
pushf
add
xor
cmp
adc
xor
lea
push
rcr
pop
push
and
cmp
ins
out
mov
aas
mov
xor
int
addr16
mov
mov
jne
adc
xlat
aam
or
in
add
mov
xlat
mov
pop
out
leave
dec
popf
or
mov
ud2
mov
mov
ret
mov
inc
in
mov
fcom
jae
pusha
jno
xchg
not
push
xchg
in
xchg
pop
cmp
add
fwait
cdq
mov
xor
and
clc
dec
out
aaa
sbb
fwait
xchg
pop
dec
cwde
loop
xor
mov
mov
xchg
sbb
inc
mov
sbb
sub
mov
mov
push
mov
sbb
add
sahf
mov
call
push
cld
loop
push
mov
pop
test
pop
(bad)
fld
sti
pusha
outs
xor
inc
ds
or
jecxz
fsub
les
lds
addr16
pop
dec
and
or
enter
aas
inc
ins
jo
mov
cmp
ss
retf
dec
push
xchg
jle
icebp
sub
ficom
out
dec
rol
push
jnp
pop
xor
movs
mov
(bad)
cli
fwait
ds
aaa
xor
mov
push
lds
sbb
adc
sub
push
add
jmp
ss
xchg
xor
and
dec
mov
adc
call
mov
pop
sub
pop
sbb
xchg
(bad)
adc
cmp
lahf
aas
pop
sub
and
mov
cmp
pop
adc
xor
add
xchg
scas
daa
mov
push
cmps
(bad)
aad
mov
xor
jno
fcomp
push
shl
ret
dec
mov
xchg
inc
dec
aam
test
mov
ret
lahf
addr16
pop
aam
xchg
ja
push
inc
mov
loop
movs
push
rcr
test
bound
and
ret
mov
pop
xchg
dec
loope
cld
jns
pushf
adc
inc
arpl
shr
pop
(bad)
int
out
enter
mov
fst
in
inc
and
movs
bound
rol
jp
fadd
push
(bad)
mov
out
ffreep
mov
shl
jns
and
dec
(bad)
jns
enterw
cwde
jns
jg
es
cmp
fimul
pop
jg
pop
lods
inc
sbb
add
fstp
pop
fwait
gs
jne
mov
mov
sub
xchg
sbb
and
jl
gs
pop
cs
jl
xchg
jmp
xchg
(bad)
mov
mov
mov
sub
sahf
mov
push
mov
call
bound
lods
mov
mov
fcmovnb
fist
xor
mov
fisubr
mov
hlt
xlat
sub
jle
cmp
inc
loope
rcr
mov
sbb
sub
adc
popf
mov
inc
out
call
push
cmps
xchg
adc
bound
sti
mov
sub
(bad)
mov
adc
mov
jae
cmp
adc
popa
mov
je
ret
popa
outs
adc
lahf
sub
inc
loopne
mov
pop
push
(bad)
lock
loop
loope
ins
into
or
fld
jo
mov
add
rcr
push
call
in
clc
lock
and
fiadd
std
xor
inc
jp
mov
mov
sbb
ins
jne
sti
jl
test
outs
adc
pushf
bnd
pop
test
jp
pusha
pop
dec
pop
xor
and
sbb
add
das
and
and
mov
(bad)
and
fisttp
or
jo
arpl
sbb
or
inc
jne
into
fldcw
inc
pop
(bad)
fdiv
push
js
aaa
movs
sub
sbb
test
jl
jmp
aad
mov
inc
sbb
jg
and
xchg
add
xor
(bad)
cmovo
push
mov
loopne
mov
pop
xor
mov
mov
sbb
add
mov
add
or
inc
xchg
mov
cs
jns
add
adc
das
data16
cmp
or
je
ja
xor
mov
add
cdq
push
cmp
pop
sbb
jecxz
mov
or
imul
out
cmps
neg
leave
mov
popa
mov
icebp
push
add
retf
dec
inc
ja
jno
dec
mov
fsub
adc
leave
pop
inc
pusha
jno
sahf
call
sbb
loopne
call
out
cmp
adc
sub
sar
ja
(bad)
mov
and
lods
pop
test
sti
inc
sbb
sub
xor
mov
sbb
sar
sbb
mov
loopne
ret
aas
mov
pop
test
xor
push
int
pop
(bad)
icebp
int
outs
ins
mov
aad
mov
pop
nop
sub
mov
lods
sbb
aaa
push
movs
jnp
sub
sbb
gs
cli
test
(bad)
sbb
aaa
sub
sub
maxps
stos
loope
sub
adc
push
out
cmp
xchg
rdpmc
out
or
add
xor
xor
shr
jb
pop
stos
xchg
dec
sub
inc
jl
xchg
mov
add
xor
and
xchg
pop
sub
inc
gs
xor
mov
xchg
ja
cs
adc
jae
das
in
gs
pushf
inc
int3
inc
adc
(bad)
(bad)
cli
cmp
xor
and
(bad)
pop
es
inc
lock
and
test
sub
cmps
das
stos
push
movs
and
sbb
into
mov
xchg
aaa
dec
fiadd
and
xchg
jno
daa
xor
add
fild
jg
loopne
push
mov
sbb
shl
(bad)
jl
xor
add
cmc
out
xchg
mov
mov
cmps
and
mov
jg
int
add
repnz
jmp
jecxz
mov
ds
(bad)
and
xor
ins
and
fiadd
ret
clc
mov
push
or
mov
xor
enter
and
fst
push
pusha
cmps
rol
shl
data16
inc
xchg
stos
xor
pusha
inc
(bad)
sub
into
push
imul
dec
xlat
bound
or
sub
(bad)
shr
cmp
lods
push
mov
fsubr
dec
jmp
iret
mov
leave
or
inc
aad
imul
or
clc
jmp
mov
jae
xchg
mul
pop
mov
push
mov
sub
jne
shl
(bad)
xchg
mov
xor
idiv
dec
xor
clc
xor
jmp
sbb
test
iret
mov
out
cmp
cmc
test
dec
js
sar
add
push
ror
xor
bound
fwait
xor
push
mov
and
cmp
sub
mov
mov
clc
xchg
sahf
pop
aam
mov
mov
push
add
sti
add
loope
push
mov
sbb
test
call
loop
mov
fidivr
ins
cmp
push
adc
push
dec
and
xor
pop
fnstenv
bound
shr
xchg
int
imul
rol
jno
es
dec
out
sbb
inc
sub
push
and
pop
mov
inc
loop
xor
jle
(bad)
sub
xchg
push
cmp
fisttp
cmc
or
inc
add
or
and
jnp
imul
dec
xchg
daa
mov
shl
xor
jp
cs
sub
cmp
dec
ss
dec
cmp
mov
push
pop
add
fnstcw
fwait
imul
sti
push
repz
and
fwait
cmp
xchg
dec
lds
cmc
mov
fst
inc
stos
stos
leave
arpl
(bad)
jp
mov
xchg
inc
mov
out
in
jns
mov
add
ret
in
nop
dec
je
xchg
test
push
movs
jmp
jecxz
fcmove
repz
jge
test
jmp
mov
xchg
pop
mov
(bad)
pop
dec
pop
pop
aam
out
mov
test
lds
pop
int
out
sub
jo
and
fwait
sahf
add
cmp
daa
sub
xlat
inc
xchg
call
inc
dec
jo
lds
out
rcr
jmp
jnp
lds
mov
repz
jge
and
jge
fsubrp
sub
in
pop
inc
paddsw
in
imul
jns
lds
fst
(bad)
sub
and
push
mov
cmp
dec
pop
mov
mov
add
fsubr
mov
out
mov
inc
sti
fwait
call
and
scas
jno
or
jmp
push
movs
sbb
push
pop
jge
mov
imul
inc
xlat
sub
lock
icebp
daa
dec
pop
das
das
sub
test
sub
cs
jg
imul
loopne
hlt
aaa
add
cdq
xlat
mul
shl
fimul
xchg
aaa
adc
in
sub
cmc
or
xor
pop
out
jne
loop
cmp
cmp
add
jle
ret
add
inc
mov
data16
fistp
sbb
push
dec
push
daa
push
jns
or
push
mov
jl
mov
mov
mov
jl
sub
loopne
iret
adc
(bad)
push
mov
(bad)
loope
mov
jmp
nop
cwde
fisttp
sub
daa
inc
shr
fsubr
push
mov
dec
imul
or
add
in
pop
sub
sub
call
push
or
add
fimul
lea
add
lea
das
je
push
nop
xor
adc
aad
je
add
imul
mov
fs
mov
rol
aad
pop
sub
sub
retf
retf
xchg
mov
or
mov
xchg
sub
rcl
mov
inc
jecxz
mov
or
movs
xchg
sbb
xchg
mov
mov
push
sub
fld
or
test
leave
jmp
stos
xchg
and
enter
xchg
inc
je
call
imul
test
xchg
xor
retf
mov
test
mov
iretw
(bad)
pop
test
xchg
sbb
scas
pop
inc
int3
lods
push
mov
mov
inc
(bad)
sub
pop
retf
iret
xor
lods
push
xchg
into
scas
setb
into
int
mov
xchg
lds
sub
cs
clc
mov
push
cdq
adc
pop
test
(bad)
pop
shl
rcr
mov
push
push
xchg
repz
lock
sbb
rcr
std
cld
les
ret
out
inc
sahf
or
cmp
add
mov
call
jmp
es
test
cmp
ja
outs
sti
xchg
clc
mov
popf
adc
adc
repnz
mov
les
adc
xchg
jne
retf
add
std
dec
leave
fs
and
outs
jnp
mov
inc
mov
add
jne
movs
adc
pop
mov
push
cmp
jg
mov
(bad)
pusha
sub
in
(bad)
int
in
rol
sub
lahf
pop
xchg
in
jno
loope
scas
fmul
cld
inc
xor
or
fisttp
mov
jge
jl
xchg
popf
pop
(bad)
in
imul
cld
fwait
inc
mov
mov
ss
and
or
mov
jo
jmp
and
jle
stc
cmp
ja
sub
xor
inc
adc
add
jb
int
cmp
ret
call
xchg
push
in
jb
into
pop
and
test
imul
ret
add
call
shl
pop
aam
into
and
std
dec
cmps
outs
mov
ins
push
mov
retf
fs
fsubrp
xchg
rcr
bound
mov
pop
shl
adc
loopne
jae
dec
mov
add
jns
fdivr
mov
adc
mov
shl
cmp
ins
cmp
js
add
scas
cmp
outs
push
mov
pop
add
inc
push
push
mov
xchg
lods
(bad)
clc
jg
mov
sbb
add
sar
adc
mov
movs
xor
fcomp
and
mov
scas
mov
popf
cmps
(bad)
cmc
test
out
(bad)
dec
call
push
pop
es
out
scas
push
mov
mov
sub
cld
aaa
or
js
das
(bad)
or
pop
push
and
xchg
mov
mov
cld
mov
ss
je
push
hlt
fwait
xor
lahf
cmp
cld
or
and
xchg
data16
imul
push
cli
pop
cld
jmp
sahf
(bad)
cld
mov
(bad)
fiadd
fisub
outs
mov
or
rcr
adc
xchg
add
mov
sub
dec
sbb
sbb
shl
pop
js
xor
mov
rol
retf
adc
dec
jmp
leave
pop
lds
mov
jle
xchg
fild
mov
nop
aaa
out
test
(bad)
push
inc
inc
cmps
aam
add
add
in
fild
rcr
add
cmp
out
mov
sti
clc
ins
cli
nop
sbb
dec
lods
mov
xchg
nop
and
inc
and
push
xchg
or
ins
mov
mov
pop
jo
or
js
cmp
mov
not
jns
loope
lods
imul
test
adc
lds
sbb
jg
cs
mov
sub
sbb
stc
hlt
cmp
mov
ins
jmp
sahf
sub
xor
push
imul
add
lea
push
xlat
adc
pop
jbe
shl
mov
cmps
mov
or
dec
cmp
mov
sbb
in
xor
adc
jg
mov
cmp
cwde
scas
in
(bad)
nop
ror
cmp
(bad)
imul
ss
sbb
and
ins
push
rol
lds
xchg
push
cs
or
mov
xchg
and
sub
movs
aad
adc
stc
test
xor
nop
fsubr
fstp
sub
jmp
add
cmps
cmp
leave
out
nop
xor
xor
cwde
and
retf
jg
mov
(bad)
xlat
add
mov
xor
pusha
retf
mov
(bad)
push
gs
sub
out
pop
test
push
fmul
aaa
cdq
dec
fwait
loope
(bad)
std
(bad)
(bad)
pop
and
xor
jbe
xchg
and
call
and
inc
push
cmps
xor
xchg
push
test
sub
xchg
lods
and
dec
outs
(bad)
push
pop
inc
fwait
into
sahf
imul
(bad)
repz
mov
test
inc
addr16
xchg
aam
jns
sub
sub
sti
test
inc
push
jge
in
xchg
push
cdq
mov
pop
add
pushf
es
mov
shr
add
repz
inc
sbb
(bad)
in
(bad)
and
mov
push
fs
fiadd
out
xor
daa
sbb
sbb
stos
arpl
sub
loop
sub
mov
ins
sar
sbb
sbb
mov
popa
jmp
test
out
jge
repnz
cmp
adc
jl
dec
jnp
cmps
imul
aas
lock
adc
cmp
stos
inc
cmp
adc
leave
push
inc
or
add
adc
fcmovne
pop
push
push
or
mov
or
adc
bound
push
xor
ds
pop
mov
mov
push
lds
cmp
or
ret
push
outs
rcr
sahf
(bad)
cmp
ret
jb
popa
out
sahf
mov
das
jbe
and
js
push
call
in
add
jle
lods
sub
(bad)
cwde
cs
retf
outs
call
repnz
arpl
pop
xor
mov
mov
div
cmp
mov
sti
add
clc
cmp
xchg
sub
ds
mov
xchg
xchg
ret
inc
mov
out
sub
add
mov
repnz
dec
or
mov
mov
push
dec
cmps
and
push
push
xchg
xchg
dec
adc
push
out
push
inc
and
inc
pop
xchg
imul
pop
(bad)
mov
call
push
sbb
and
lahf
inc
push
jmp
and
adc
in
push
es
push
sbb
ret
data16
jle
mov
mov
scas
(bad)
jecxz
shl
scas
neg
dec
out
sbb
jnp
inc
jbe
jno
and
mov
into
adc
lods
jp
xor
cmc
shr
clc
cmp
(bad)
inc
jnp
xor
cs
xrelease
adc
inc
sar
jae
pusha
mov
test
mov
pop
icebp
cmp
adc
xchg
(bad)
retf
or
jmp
retf
iret
out
out
rcl
adc
cmp
jg
sahf
adc
enter
in
mov
imul
pop
cmps
into
pushf
jge
add
mov
stos
pushaw
jmp
loop
scas
(bad)
and
xor
push
cmps
lahf
mov
out
pop
leave
sub
or
imul
popa
in
push
push
xchg
sub
popf
data16
scas
rcl
icebp
in
pop
xor
push
jae
push
les
outs
sub
fwait
sbb
(bad)
mov
pop
push
hlt
cmp
es
jbe
mov
cwde
into
mov
and
rcl
sub
inc
dec
sub
xchg
and
mov
fiadd
int3
daa
xor
or
jo
push
nop
xchg
ss
mov
mov
push
add
sbb
and
xchg
adc
xchg
jmp
fiadd
sbb
out
jle
and
in
imul
and
dec
jl
fdiv
scas
in
mov
adc
inc
cli
inc
test
cmps
jns
lea
sub
stos
adc
push
add
inc
scas
test
mov
push
psllq
pop
je
clc
or
test
aas
jp
mov
movs
cld
rcl
xlat
cmp
sbb
sar
outs
add
mov
sub
cmp
hlt
jb
inc
sbb
lahf
mov
ror
pusha
jbe
or
into
imul
push
rol
push
cmp
xchg
pop
sub
adc
adc
or
retf
call
adc
xchg
pop
pop
fmulp
fwait
or
push
leave
loop
pop
in
mov
xor
xchg
sub
jle
pop
movs
mov
xchg
les
jmp
imul
out
sub
push
inc
(bad)
sub
repnz
hlt
scas
les
lock
mov
mov
hlt
jns
and
sahf
push
push
ja
dec
stc
or
cmp
add
jl
scas
push
mov
fwait
push
mov
and
pop
ret
push
add
bound
(bad)
cdq
mov
dec
dec
loop
or
push
or
push
sbb
ret
xchg
outs
jg
mov
(bad)
in
add
pop
xchg
sub
dec
aad
retf
jno
scas
push
xchg
and
cwde
mov
jp
sbb
es
shr
outs
sub
and
xor
cs
jecxz
fcmovu
and
xchg
dec
xor
ins
fidiv
mov
push
loop
lods
std
mov
in
and
jb
inc
out
outs
push
xlat
mov
ds
mov
cmp
xlat
xchg
outs
je
inc
mov
test
cmp
cmp
repnz
mov
aam
sar
test
mov
push
data16
pushf
inc
mov
add
sar
xor
imul
call
scas
dec
mov
dec
lods
push
gs
mov
int
pop
retf
or
dec
cmp
bound
test
xchg
adc
data16
xchg
repnz
sbb
push
pop
pop
push
lds
cmps
outs
sub
lock
(bad)
lahf
adc
ret
push
cmc
and
daa
arpl
and
es
jp
adc
rcl
pop
jle
sub
mov
lods
mov
xchg
xchg
repz
pop
xor
lds
test
or
cmp
mov
sahf
ds
ret
jmp
or
add
out
jg
push
call
pushf
repnz
pop
rcr
mov
imul
or
adc
mov
push
lods
adc
(bad)
fist
stos
adc
dec
add
je
stos
push
cwde
pop
fst
loopne
inc
sbb
or
fnsave
or
pusha
mov
movs
loop
adc
and
mov
cmp
out
ret
mov
sbb
stos
add
cmp
and
ins
sub
ins
retf
xchg
jbe
icebp
mov
cmp
fcmove
push
(bad)
jp
mov
es
inc
rol
aaa
imul
(bad)
mov
call
add
fidiv
mov
push
fmulp
xor
loop
inc
push
mov
(bad)
data16
or
ds
mov
jmp
sbb
clc
dec
inc
out
sub
mov
adc
sahf
cmc
xchg
cmc
dec
sub
sbb
pop
pop
mov
rcr
cmps
and
pop
repz
fistp
push
lock
and
scas
push
mov
int3
push
mov
adc
test
or
pop
mov
sub
push
jmp
retf
out
out
push
das
adc
xor
mov
pop
push
bnd
sbb
ret
enter
in
sbb
cmp
push
dec
mov
mov
and
jle
into
adc
add
es
push
shr
les
(bad)
inc
inc
call
cs
leave
stos
fimul
iret
shl
dec
repz
pop
pop
sub
loop
add
pop
xor
bound
loopne
lock
mov
jb
mov
mov
cmp
repnz
(bad)
push
xchg
mov
jns
out
sahf
mov
loop
out
adc
inc
(bad)
outs
jp
cli
mov
push
inc
adc
shl
iret
adc
ins
add
xor
(bad)
pop
xchg
jbe
add
aas
out
(bad)
arpl
or
imul
jns
das
fldcw
jo
xor
test
xor
inc
push
mov
mov
loop
not
ja
fst
stos
mov
and
adc
jle
shl
cmps
add
les
push
les
sbb
add
ins
je
xchg
int3
cmp
fnstcw
dec
std
and
mov
rcl
int
jl
punpckhdq
cmp
aam
xchg
mov
lahf
rcl
sub
adc
fadd
inc
xor
fcomp
mov
pop
mov
add
clc
mov
sbb
in
fsub
sbb
into
cmp
pop
repnz
and
pop
sub
stc
arpl
push
cmp
add
mov
hlt
pop
test
add
fsubr
push
dec
test
xchg
jb
dec
ret
xchg
fdivr
pop
mov
xchg
sbb
arpl
sbb
es
dec
test
mov
xchg
in
retf
jbe
imul
jnp
cwde
fstp
add
shr
mov
loop
xchg
xchg
and
mov
xor
shl
retfw
cmps
out
sbb
call
aaa
jno
ins
pop
sbb
mov
das
sbb
sub
js
pop
xchg
pushf
and
push
adc
lahf
sub
xor
inc
inc
mov
repz
pop
pop
neg
ficom
jns
push
mov
cwde
push
stos
dec
mov
scas
adc
mov
xchg
push
add
pop
push
sub
nop
dec
mov
ret
nop
fdiv
adc
or
repnz
mov
jns
int
lods
mov
push
push
not
lods
mov
fs
loop
out
mov
cmps
mov
cmp
add
or
fidivr
adc
xchg
xchg
mov
xlat
into
dec
pop
sbb
clc
dec
jnp
movs
jl
and
std
inc
scas
loope
imul
pop
mov
mov
pop
in
mov
push
sbb
jb
pop
rcr
jae
test
fsubr
mov
or
mov
leave
ins
aad
cld
xchg
stc
sub
aam
fsub
pop
out
push
adc
(bad)
retf
or
jp
imul
mov
and
call
shl
cmp
add
out
push
mov
pop
or
and
push
or
and
lahf
jl
sbb
mov
loope
fistp
add
xor
and
push
add
mov
push
sbb
dec
retf
jo
iret
push
xchg
and
in
into
push
and
add
mov
mov
fcmovb
lods
daa
addr16
out
in
mov
call
jecxz
in
(bad)
jb
inc
sub
jno
pop
mov
sbb
push
movntq
xor
and
mov
retf
pop
mov
inc
out
mov
sbb
out
and
rol
add
out
mov
xchg
jle
sub
sbb
lock
fnstenv
add
or
fdiv
inc
and
jecxz
sub
push
out
inc
xchg
in
mov
je
dec
sbb
inc
pop
xchg
jmp
nop
ds
retf
lahf
jne
mov
inc
pushf
out
clc
in
sahf
xchg
or
call
sbb
sub
shl
jae
cmp
mov
mov
jno
adc
sbb
pop
mov
add
mov
pop
sahf
add
jnp
rep
stos
(bad)
pandn
xchg
sbb
enter
movs
jns
ret
dec
mov
push
sbb
cmc
scas
test
mov
ret
in
pop
pop
mov
jo
sahf
or
js
mov
xchg
cmp
add
hlt
pop
pop
mov
sub
mov
cmp
and
pop
or
pop
jno
mov
mov
push
push
popa
add
or
jmp
jmp
pop
imul
jb
mov
fdiv
push
mov
cmp
add
jns
imul
cdq
mov
dec
out
pushf
mov
in
sub
(bad)
aam
mov
les
mov
in
jb
and
xchg
sahf
jae
inc
rcr
into
aas
mov
mov
or
jmp
ins
les
sbb
mov
xchg
mov
xor
push
pushf
dec
sbb
sub
bound
and
test
jo
push
push
call
pop
dec
pop
int3
retf
movlps
adc
test
xchg
add
sti
inc
imul
mov
ret
jne
loope
fbld
sbb
sub
out
add
and
sti
sbb
call
sbb
clc
mov
fistp
lahf
rol
outs
enter
rcl
adc
push
out
les
xchg
push
into
xchg
in
add
and
or
aaa
ror
mov
fwait
xchg
xor
aam
xor
in
fadd
out
xor
fnstenv
mov
add
pop
push
sub
push
push
(bad)
pop
push
popf
push
inc
add
mov
pop
mov
xchg
jl
popf
jp
out
and
stc
cmp
xor
push
stc
and
mov
popa
add
mov
in
stos
push
xchg
xchg
push
in
jp
and
adc
adc
adc
repz
test
jns
xchg
out
sbb
inc
or
inc
xlat
into
enter
jae
sbb
mov
in
xor
daa
mov
mov
in
js
dec
pushf
dec
stos
call
jmp
or
push
iret
pop
mov
(bad)
push
daa
cmp
das
loopne
fldenv
push
inc
jb
sbb
mov
fstp
aad
inc
stc
inc
mov
lock
jae
addr16
cmp
pop
sub
mov
mov
cmp
test
sub
das
(bad)
jno
rol
je
js
xor
or
xchg
push
sub
jnp
in
xor
pop
push
in
pop
dec
ffreep
jnp
ss
fs
xchg
js
mov
inc
jnp
sbb
and
movs
inc
int3
(bad)
sbb
mov
mov
xor
xchg
mov
inc
retf
call
jmp
cmp
or
(bad)
or
and
call
dec
pop
mov
pusha
jmp
jle
jle
aas
cmc
inc
and
pop
cmc
jns
xchg
in
and
xor
mov
ficom
iret
loopne
adc
fidivr
pop
inc
xor
adc
(bad)
clc
mov
call
inc
pop
gs
and
dec
mov
xor
call
cmp
cmp
push
test
pusha
ror
pop
jecxz
popf
sti
add
add
cmp
cmp
mov
and
mov
rcr
jge
inc
movs
into
in
fwait
inc
sbb
clc
mov
stc
cmps
imul
dec
mul
push
stos
cmp
in
adc
loope
imul
and
push
and
sub
fidiv
xchg
inc
xchg
mov
mov
fild
xchg
cs
pop
rol
push
aas
cmp
in
push
xchg
rcr
add
pop
push
mov
popa
ds
(bad)
stc
movs
movs
xor
loope
loope
test
jg
mov
and
icebp
inc
aas
out
and
mov
cld
fst
pop
sbb
mov
mov
mov
inc
mov
inc
lds
sub
push
ins
sub
or
pop
sub
pop
jbe
sub
inc
mov
push
lahf
int
test
fimul
outs
cwde
mov
sbb
ds
cmc
mov
jp
mov
sub
mov
js
mov
add
pop
mov
rcr
cmps
dec
sub
sbb
or
mov
sub
or
and
jnp
out
gs
dec
fwait
xchg
sbb
cmp
not
shr
ret
cmp
imul
push
push
sbb
dec
in
sub
popf
cmp
jmp
jb
sub
aad
mov
sbb
sub
cli
call
test
jne
cdq
xor
push
aam
jnp
pop
pop
xor
and
lock
leave
xor
inc
push
mov
retf
fadd
fcom
mov
clc
mov
leave
lock
inc
nop
dec
mov
jecxz
les
add
sahf
pop
cmp
fcomp
icebp
push
jno
jno
xor
sbb
cmp
loopne
test
push
cmc
mov
loope
sar
aas
scas
xor
bound
es
jle
xlat
(bad)
mov
adc
es
imul
fmul
in
arpl
xor
inc
fs
dec
mov
mov
(bad)
push
or
mov
xchg
inc
jbe
xor
pop
pop
pop
call
jle
and
pop
adc
inc
mov
xchg
shl
pop
cld
or
pop
pop
mov
jbe
add
ja
test
test
arpl
fbstp
out
jge
ja
stos
push
lods
popa
mov
mov
jb
or
sbb
arpl
xor
neg
mov
jbe
inc
(bad)
aaa
jle
sbb
stos
inc
cmp
adc
sbb
push
nop
rcl
enter
xchg
or
repz
ds
pop
mov
mov
ret
adc
sub
or
jecxz
pusha
rcl
les
and
jp
xor
mov
mov
lds
pushf
rcl
jge
es
pop
inc
sub
mov
mov
dec
repnz
cld
cmp
adc
mov
cld
dec
inc
mov
xchg
pop
mov
jo
scas
xor
mov
imul
jmp
mov
cs
dec
or
and
dec
bound
xor
or
jmp
push
push
das
sbb
xchg
int
jp
pop
cld
hlt
and
test
out
mov
inc
je
lods
lahf
gs
(bad)
test
mov
push
add
ficomp
sub
xor
lock
daa
sub
add
fisttp
sbb
imul
xchg
push
dec
mov
lea
aad
adc
sub
cmp
inc
mov
pop
adc
dec
cmp
xchg
inc
mov
pusha
in
adc
and
cs
mov
pop
adc
mov
jo
loopne
add
mov
iret
pop
dec
push
retf
push
fidivr
test
icebp
imul
push
ret
mov
cmps
fcomp
popf
lock
or
inc
sub
push
xchg
xchg
cli
repz
jmp
out
(bad)
out
mov
sahf
fld
(bad)
pop
push
(bad)
repnz
movs
cmp
mov
cmps
adc
inc
push
cmps
xor
movs
retf
cmc
repz
repnz
imul
jg
out
arpl
out
push
ja
sar
and
ret
test
and
(bad)
shl
pop
inc
sub
pop
and
retf
sub
(bad)
enter
xchg
and
mov
xor
jl
inc
xchg
mov
inc
adc
out
iret
pop
stos
sbb
cmp
arpl
leave
mov
xchg
(bad)
aam
ins
aas
daa
imul
pop
xor
pop
pop
add
mov
(bad)
das
dec
add
(bad)
sahf
stos
das
cmp
das
jecxz
enter
sub
cld
into
jns
cs
repnz
shl
pop
cdq
jmp
xchg
jnp
jnp
repz
mov
push
sub
sub
mov
xor
add
xchg
sbb
in
pinsrw
cmp
retf
imul
push
jle
mov
popf
int
ret
mov
jecxz
sub
cmp
out
retf
in
or
mov
(bad)
jle
jg
jb
pop
pop
jbe
dec
xor
cmp
cmps
mov
enter
jge
adc
dec
imul
cmps
js
popa
and
pop
mov
jmp
jmp
add
in
in
dec
adc
ret
inc
or
bound
mov
inc
pop
mov
les
jp
adc
ret
repnz
push
bound
imul
les
scas
fldpi
add
retf
pop
xor
dec
(bad)
out
pop
xlat
and
and
test
push
das
jne
pop
inc
mov
jae
scas
sti
pop
jne
sub
daa
sub
int3
mov
loope
adc
push
or
xchg
inc
mov
lahf
ss
pop
jge
iret
jno
imul
int
popf
sub
div
rcr
daa
and
xchg
shl
mov
popf
sbb
cmp
call
push
lahf
test
xor
out
mov
aad
(bad)
fwait
and
sub
ficomp
dec
pop
mov
inc
mov
xor
sti
sbb
add
mov
sar
jbe
inc
(bad)
jns
stos
adc
mov
mov
mov
adc
mov
cmp
jns
rcl
add
jne
sbb
movs
imul
adc
inc
mul
mov
(bad)
fcomp
and
xor
ss
iret
adc
mov
lods
(bad)
shl
push
imul
lods
mov
ds
add
cli
mov
cwde
stos
sub
test
cmp
fisubr
xor
jl
lods
enter
cld
xor
stc
enter
ins
inc
and
loopne
push
leave
mov
sub
loopne
sub
pop
in
mov
xor
push
add
fld
and
js
sbb
les
lods
mov
icebp
jmp
nop
xchg
add
mov
popf
or
cmp
daa
jmp
hlt
mov
sbb
ins
call
adc
cld
movs
mov
aaa
int3
dec
or
fild
mul
(bad)
mov
mov
mov
inc
push
icebp
jno
enter
add
mov
push
outs
je
sub
mov
mov
imul
loop
aaa
mov
sbb
idiv
test
jl
mov
xor
aaa
mov
add
xchg
ja
push
xor
into
sti
rcr
mov
push
sub
push
xor
jo
jnp
mov
dec
popa
or
shl
push
fsub
add
(bad)
into
mov
jmp
mov
scas
jle
push
dec
jecxz
test
ja
js
mov
adc
jmp
icebp
sahf
cld
inc
jge
fldenv
jmp
mov
or
leave
cmp
mul
lods
push
repz
and
sbb
scas
pop
inc
pop
fnstenv
imul
fst
xchg
dec
xor
mov
gs
call
pop
add
lods
dec
sub
pop
pop
xchg
mov
(bad)
lds
retf
cmps
sub
(bad)
(bad)
xchg
push
scas
das
xlat
into
mov
mov
mov
inc
(bad)
sti
cli
dec
out
lock
mov
mov
xor
jbe
test
icebp
in
mov
sub
call
xlat
push
sbb
bound
cmp
shr
push
push
fiadd
stc
push
mov
cdq
mov
leave
pop
pop
(bad)
dec
in
ret
add
in
xor
fst
mov
stc
xor
add
cdq
jmp
lea
xchg
push
loope
sbb
dec
dec
shl
push
add
push
daa
fisubr
loopne
xchg
scas
pop
dec
adc
pop
xchg
std
xchg
iret
clc
push
int
dec
xchg
inc
mov
xchg
aaa
and
fcomp
dec
mov
test
ss
into
addr16
dec
jae
shr
(bad)
test
inc
push
aas
(bad)
scas
push
repnz
push
jl
pushf
into
retf
adc
mov
lds
ds
or
lahf
outs
sub
les
pop
push
mov
sub
cmc
push
sar
jle
dec
inc
jle
sub
xchg
xchg
or
mov
pop
in
push
ret
push
ds
(bad)
movs
sub
inc
in
shr
ret
popf
in
pusha
std
sbb
adc
xor
add
(bad)
sbb
cld
jmp
arpl
stos
not
iret
nop
imul
rcl
cdq
cmp
push
jecxz
popa
sub
dec
pop
test
sub
xchg
or
fdivp
pop
mov
inc
imul
aam
mov
pop
inc
pop
sbb
inc
loopne
or
cs
dec
xor
outs
jle
jae
jae
ins
ror
xor
fcomp
imul
rcl
test
ins
cmps
mov
mov
xchg
mov
fdiv
sub
mov
cmp
xchg
jmp
loopne
xchg
js
into
sar
pushf
(bad)
scas
gs
dec
and
bound
dec
clc
pop
mov
loope
ins
sbb
shr
into
xchg
out
mov
fdivr
add
add
mov
add
xchg
(bad)
test
mov
push
mov
cmps
sub
loop
hlt
mov
jne
and
mov
add
mov
xchg
bound
inc
adc
aas
xchg
pushw
mov
fbstp
or
push
sbb
les
pop
dec
cmp
push
xor
cmp
fs
jo
inc
outs
dec
imul
dec
daa
stos
out
or
or
je
adc
mov
std
jne
test
lea
jnp
jmp
xor
arpl
fucomp
ror
fcomp
mov
nop
xor
mov
pop
sbb
mov
pop
mov
pop
aaa
rcr
inc
pop
repnz
jmp
or
fdivr
outs
cmp
xor
or
mov
xor
cmp
pop
cwde
pushf
add
inc
sub
call
es
outs
arpl
pop
test
pop
ficom
or
(bad)
aam
inc
clc
adc
push
adc
push
mov
mov
xchg
les
sbb
shl
sub
jnp
bound
or
out
aas
cmp
cwde
gs
sbb
adc
lods
fadd
nop
pusha
inc
jge
sub
inc
cmp
push
push
pusha
jnp
test
je
sbb
ds
dec
inc
inc
dec
outs
jmp
retf
pop
sbb
addr16
in
cmp
or
pop
nop
push
xor
inc
xor
inc
bnd
or
adc
ret
ja
fiadd
es
fisttp
inc
xchg
fisubr
rcr
jb
fstp
test
(bad)
sar
out
jns
(bad)
cmps
push
jne
dec
dec
mov
or
sub
fbstp
pop
cdq
sub
push
cmc
push
test
cmc
sbb
fld
mov
je
cmp
mov
sbb
fbstp
cmp
and
in
popf
mov
mov
pushf
inc
inc
xlat
lods
xchg
movs
cli
pop
retf
mov
sub
xchg
shr
test
jae
daa
loop
mov
jg
es
mov
popa
xor
mov
jl
test
sar
add
out
mov
ja
out
retf
mov
rcr
jp
mov
push
dec
and
push
lods
and
xor
adc
shl
pop
repnz
fld
push
shl
sbb
daa
mov
dec
mov
nop
pop
stos
jne
or
mov
sub
lahf
inc
and
ret
add
jo
clc
cwde
mov
dec
mov
in
sub
pusha
or
cmp
push
jo
leave
dec
fstp
pop
mov
dec
or
hlt
je
push
test
leave
pop
fs
adc
ss
xor
js
sar
outs
and
sbb
cdq
fwait
pushf
and
dec
sbb
mov
sti
xchg
fwait
sbb
dec
fldenv
outs
in
nop
sti
or
stos
push
mov
fstp
xchg
pop
dec
cmp
out
cmp
aad
mov
sbb
mov
add
xchg
add
jge
inc
push
sub
or
cmps
or
sbb
push
shr
out
sbb
inc
xor
sahf
cmp
rol
inc
sbb
jns
xor
clc
(bad)
hlt
repnz
cvttps2pi
repz
adc
or
mov
or
xchg
shl
cmc
mov
mov
push
hlt
cmp
add
mov
adc
das
cld
lods
jno
xor
pop
dec
sub
cld
xor
xor
gs
push
lods
shl
xchg
ins
movs
and
push
mov
dec
push
retf
inc
outs
das
or
test
dec
fstp
(bad)
aaa
xor
jnp
xchg
xchg
and
fidiv
clc
sub
sbb
push
daa
dec
lahf
cmp
mov
lock
add
adc
or
cld
sbb
cmc
daa
fild
cmp
push
pop
dec
sbb
arpl
sbb
xor
or
cmps
mov
enter
in
mov
call
push
push
ds
push
int
lock
pop
and
cmps
pop
fucomi
xor
aas
cwde
mov
sub
pop
and
sub
and
jge
inc
mov
mov
iret
cmp
aam
mov
pop
aam
out
inc
aaa
lods
rep
sub
movs
iret
push
mov
les
fs
cmps
cmc
aam
fprem1
adc
pop
cmp
fdivr
movs
pop
fsubr
das
bnd
fst
ret
pop
scas
xchg
(bad)
mov
outs
push
dec
scas
sub
jle
vpunpckhbw
gs
ret
and
popf
pusha
and
ds
vpsubsw
jno
aam
xchg
and
icebp
retf
pushf
and
adc
sub
int3
xchg
dec
inc
push
ins
jo
sub
cmp
(bad)
hlt
push
cld
mov
add
popf
xor
lods
ja
rcr
xor
pushf
scas
xchg
imul
xchg
out
(bad)
xchg
jge
dec
xchg
loope
fdiv
jbe
jns
lods
loop
mov
jnp
pop
or
fisttp
aas
jns
movs
ds
jge
jle
sub
and
add
and
lods
lea
out
shl
out
jge
mov
ss
inc
call
aad
xchg
sbb
gs
mov
mov
outs
cmp
or
jae
cs
adc
in
adc
inc
mov
pop
leave
cmps
push
push
mov
ins
lea
(bad)
jmp
jmp
jge
and
mov
sar
jno
fdiv
iret
inc
retf
test
jg
iret
sbb
imul
push
mov
pop
aas
sub
(bad)
ins
pop
add
sbb
lea
jno
sbb
pusha
pop
scas
cmps
loopne
rcr
mov
fwait
daa
in
sbb
mov
cdq
daa
pop
imul
pop
cmp
das
retf
jo
ret
int3
sar
push
dec
mov
(bad)
jmp
(bad)
cmp
xchg
les
xor
fiadd
into
mov
jg
mov
aad
iret
jp
fdivr
pushf
jns
ficomp
adc
mov
lea
mov
xchg
push
jecxz
sub
add
das
pop
xor
fcomip
rcr
jnp
pushf
jns
call
test
sub
xor
loop
and
add
fs
inc
shl
and
jl
std
lahf
fld
push
push
fs
mov
aam
mov
mov
mov
sub
jmp
jmp
adc
adc
icebp
mov
stos
push
cwde
das
pop
in
mov
cli
test
sbb
daa
pop
jae
mov
mov
cmp
push
xchg
std
push
int3
cmp
cld
call
pop
xchg
test
mov
loope
xchg
or
mov
push
ins
sbb
xchg
aaa
test
adc
jns
inc
jo
in
mov
mov
jae
xor
cmp
jl
lods
out
mov
dec
fisttp
int
adc
cld
leave
push
pop
pusha
ja
or
jbe
loopne
cmp
or
fmul
mov
sbb
hlt
rol
mov
sub
jl
xchg
(bad)
jl
or
je
or
or
mov
test
pushf
add
ret
test
test
push
enter
stos
adc
pop
arpl
call
iret
cmps
sar
fcom
outs
jg
(bad)
mov
stos
xor
in
xor
hlt
(bad)
shl
and
mov
rcr
cmp
xchg
mov
mov
call
fild
pop
test
mov
cmp
sbb
fld
cmp
repnz
lea
pop
out
aaa
pop
dec
or
or
jmp
cmps
stos
or
das
inc
lock
cli
(bad)
mov
cmp
cmps
cs
addr16
adc
push
into
mov
mov
jne
icebp
push
cmp
stos
scas
cs
dec
lock
(bad)
out
xchg
ins
cmp
pop
dec
leave
jmp
jmp
sub
adc
sub
out
test
lds
stos
push
stos
repnz
enter
sub
stc
mov
ds
pop
sti
xor
fld
or
push
add
sbb
lahf
dec
fbstp
out
movs
xchg
or
pop
pop
das
int3
mov
xor
loop
xchg
cwde
jnp
push
dec
add
jecxz
xchg
popa
pop
jp
gs
inc
call
pusha
(bad)
test
out
int3
mov
call
add
imul
xchg
jle
adc
jb
jns
gs
push
or
inc
xor
cmps
fs
iretw
retf
push
(bad)
stos
cli
int
dec
cmp
repz
mov
aas
fistp
xchg
pop
pop
adc
jg
fmul
sub
jg
test
fs
ins
jle
ins
sar
mov
cmp
adc
test
aaa
push
jmp
mov
or
rol
ins
mov
je
cmp
iret
stc
ins
in
(bad)
cmp
and
push
mov
int3
dec
xor
(bad)
movs
jl
test
in
jno
pop
add
inc
es
aad
popa
cwde
sbb
aam
pushf
adc
in
push
pop
jo
or
push
cmp
cwde
mov
imul
lods
xor
leave
shl
inc
retf
je
xchg
ja
ins
mov
xchg
sbb
dec
mov
in
xor
test
xchg
test
or
fnstsw
push
sbb
ja
mov
cs
jnp
(bad)
std
jecxz
(bad)
cmp
sub
pop
add
inc
xchg
mov
arpl
sbb
arpl
(bad)
stc
sub
test
pop
cwde
push
fistp
push
jnp
jmp
popf
sub
xor
data16
inc
out
aad
daa
adc
jmp
fisttp
jmp
jl
xor
add
movs
aas
dec
dec
and
in
pop
mov
idiv
inc
xor
mov
out
retf
push
fs
dec
movs
mov
movs
ror
fidivr
mov
dec
xchg
test
mov
out
test
mov
jnp
jo
fs
rol
jno
add
mov
ins
mov
mov
and
ret
dec
outs
clc
sub
into
or
jne
sub
or
jmp
pusha
mov
xchg
sbb
cmc
into
push
cmp
imul
lea
sub
jmp
sub
out
push
pop
iret
fld
inc
mov
jmp
into
dec
cmps
cmps
fs
fcomp
jo
js
and
jns
inc
call
ja
imul
cwde
mov
sub
ror
xor
jmp
sar
cmp
mov
sub
iret
mov
test
(bad)
xor
icebp
dec
sbb
jle
xchg
mov
arpl
mov
mov
icebp
pop
inc
mov
and
aas
adc
push
and
push
arpl
cmp
mov
call
xchg
jmp
fs
push
xor
mov
rol
pop
push
adc
test
jbe
cwde
pop
and
jl
mov
mov
stos
push
mov
fwait
mov
(bad)
(bad)
loope
xor
out
out
retf
das
cmps
outs
test
xor
jmp
(bad)
push
(bad)
std
adc
jle
js
inc
xchg
cmp
aas
mov
les
add
sbb
and
sub
fwait
pusha
retf
pop
(bad)
sub
fldlg2
call
mov
lds
dec
jnp
xchg
mov
ja
test
xchg
inc
dec
cmps
or
pop
inc
lods
jae
in
fidiv
adc
mov
jns
sar
test
sbb
retf
sub
cmp
je
sbb
cwde
mov
pop
mov
or
and
lea
inc
movs
push
push
mov
add
lods
sub
jge
or
(bad)
jg
mov
jo
xchg
or
mov
sub
into
mov
jp
sbb
(bad)
cmps
bound
sbb
inc
test
fidivr
data16
out
cwde
iret
dec
ins
mov
dec
mov
movs
aad
cdq
out
dec
xchg
pop
ret
and
(bad)
shl
(bad)
aas
movs
jl
(bad)
ret
push
retf
(bad)
outs
test
and
jbe
int3
adc
or
inc
and
pop
add
sbb
retf
test
ret
mov
push
(bad)
xor
cmp
in
fsubp
int
into
adc
jae
sub
xchg
int
outs
cmp
inc
sbb
in
leave
rcl
inc
xchg
mov
inc
(bad)
pusha
jnp
mov
arpl
(bad)
pop
out
rcr
push
or
xchg
(bad)
dec
jno
pop
jg
cld
or
mov
mov
movs
scas
in
sbb
dec
fdivr
and
outs
mov
test
(bad)
xor
sbb
fisttp
ficomp
ret
test
add
mov
ror
les
dec
div
retf
(bad)
pop
jae
adc
lea
push
push
loopne
xchg
in
test
fidiv
loopne
mov
leave
pop
push
mov
pop
add
pushf
jbe
repz
cmp
pop
int3
inc
inc
or
cli
(bad)
out
arpl
fwait
xchg
lock
dec
jo
cmp
push
mov
fwait
adc
sahf
into
push
popa
and
test
sub
push
cs
fst
pop
lock
les
mov
push
adc
dec
xor
ins
cs
mov
jnp
imul
jo
push
idiv
scas
and
push
ss
cli
jnp
pop
jns
test
push
(bad)
out
dec
push
mov
mov
sbb
ja
mov
jo
jo
pop
sbb
pop
repz
and
adc
retf
in
hlt
push
pop
jle
xchg
push
outs
cld
mov
daa
lds
mov
ins
into
ret
jp
adc
mov
pop
out
push
pop
inc
inc
test
pop
data16
mov
jecxz
push
loope
mov
popf
clc
cmps
mov
pop
add
int
cmp
or
add
ja
pop
aas
cmp
and
push
popf
mov
je
inc
cld
fadd
out
ins
mov
daa
mov
in
sbb
pop
les
js
mov
jmp
push
ret
jmp
push
sub
pop
(bad)
xchg
mov
mov
rol
ins
rol
retf
nop
cmp
nop
dec
xor
mov
mov
or
inc
mov
cmps
das
or
call
and
xchg
lock
cmp
sub
call
mov
mov
xchg
push
call
scas
shl
push
call
mov
mov
hlt
jmp
cmps
jbe
sub
sbb
push
arpl
dec
push
xchg
dec
ret
(bad)
out
sub
add
lahf
inc
pop
mov
mov
add
jbe
out
(bad)
stos
xchg
test
(bad)
push
add
imul
sbb
idiv
add
fisttp
loopne
mov
cmp
aaa
lock
fmul
clc
sbb
or
es
popa
inc
dec
mov
imul
pop
inc
fnstcw
cmp
mov
inc
cld
add
test
in
fsub
out
imul
movs
push
imul
push
sbb
adc
jmp
das
in
sahf
push
iret
cmp
adc
mov
ja
adc
fild
inc
xchg
or
xor
dec
frstor
je
ror
mov
jg
je
sbb
dec
add
and
adc
(bad)
inc
push
mov
lods
jo
(bad)
pop
aas
iret
scas
cmp
jg
call
add
cmp
inc
pop
pop
add
imul
xchg
push
jmp
jno
into
push
cmps
and
fidivr
movs
pushf
daa
sub
jae
sbb
xchg
loop
sbb
das
ror
dec
outs
cmc
ja
jmp
jns
lods
aaa
lods
cmp
repz
push
pop
mov
js
jo
and
in
cmp
cmp
(bad)
js
pop
xchg
mov
mov
mov
pop
ins
sub
outs
ret
cmps
dec
stos
imul
jb
jo
and
out
cli
jecxz
call
rol
call
and
shl
jl
adc
sub
mov
push
dec
test
mov
enter
or
pop
aas
dec
jmp
test
daa
push
inc
cs
inc
mov
rcr
cmp
and
xor
or
jl
xor
mov
jmp
jg
pop
scas
xor
mov
add
retf
jo
iret
mov
popf
test
sbb
lock
push
sub
or
and
aaa
out
sub
rcl
cmp
std
sahf
pop
and
les
inc
int
xchg
ret
push
inc
aas
ret
(bad)
sbb
popa
jae
movs
dec
stos
push
(bad)
retf
pop
mov
mov
int3
jno
fdivrp
mov
add
xlat
sub
push
jle
inc
adc
sti
das
push
mov
jmp
cmc
xchg
inc
inc
stos
mov
scas
(bad)
outs
xchg
adc
test
jmp
mov
or
cmp
iret
sbb
add
jns
mov
sbb
mov
pop
outs
pop
sub
xchg
mov
dec
shl
popf
out
sbb
jae
retf
mov
jo
xchg
mov
push
loope
adc
ins
xchg
cmp
shl
ret
jns
mov
cdq
add
jp
(bad)
pop
lods
mov
lea
fbstp
outs
sub
scas
out
add
mov
jg
out
and
xor
sbb
inc
dec
or
push
fadd
fstp
rcr
push
sub
mov
sbb
mov
mov
adc
and
fincstp
test
push
push
fnstcw
aaa
lods
push
dec
pop
push
arpl
das
test
and
icebp
cld
xchg
das
mov
ds
icebp
jle
pop
mov
inc
ret
cmp
bound
pop
loope
in
mov
in
mov
inc
sbb
mov
xchg
pop
dec
mov
pusha
xor
mov
call
ss
push
retf
fbstp
ror
or
pop
mov
movhps
test
push
xor
push
pop
dec
or
push
cwde
lea
pop
aad
mov
ins
cld
jmp
inc
les
add
push
mov
xchg
xchg
sbb
hlt
jnp
pushf
test
test
pop
adc
jns
addr16
popf
sub
pop
mov
mov
xchg
fst
in
add
add
or
mov
cmp
dec
xchg
add
add
not
push
mov
bound
in
dec
inc
rcl
jge
and
sbb
xchg
inc
sbb
cmp
adc
mov
movs
mov
retf
push
in
xchg
ds
lods
mov
push
data16
cli
or
jnp
cmp
mov
xchg
scas
adc
sub
pop
ret
rcr
xor
inc
addr16
xor
push
sbb
jp
neg
pop
sbb
xchg
adc
fisub
dec
loope
jo
fdiv
push
dec
mov
add
jns
ss
xchg
dec
data16
outs
sub
mov
mov
dec
dec
xor
mov
cmp
lods
adc
aaa
xor
cmps
fiadd
pop
fwait
pop
jnp
icebp
fwait
and
mov
cmps
jae
xor
les
ins
js
or
mov
(bad)
dec
or
cli
scas
mov
arpl
or
iret
popa
push
test
psubusw
into
and
jmp
jnp
add
lahf
add
(bad)
outs
sbb
mov
ret
pop
pop
rcr
outs
nop
mov
dec
sbb
xchg
xchg
jnp
mov
and
mov
popa
enter
jae
cmp
lods
(bad)
sahf
outs
movs
retf
popf
mov
push
mov
or
outs
jle
inc
push
sub
cmp
ins
add
dec
pop
into
ss
dec
fwait
mov
scas
inc
push
jae
cmp
mov
fimul
icebp
(bad)
mov
fisub
shr
inc
jge
out
lock
ss
adc
test
es
js
stos
adc
push
fs
test
xor
dec
xor
pop
sbb
data16
fs
call
lahf
and
mov
dec
and
xchg
mov
int3
(bad)
jp
imul
mov
test
retf
pop
nop
xlat
rcr
in
jmp
retf
xor
or
push
leave
mov
push
xor
les
retf
data16
and
fisttp
mov
dec
push
mov
retf
outs
je
push
or
popf
fdiv
xlat
in
popf
mov
mov
ret
mov
push
sbb
pushf
cwde
sbb
int3
pop
sub
add
mov
cmp
ins
sti
pushf
mov
jmp
shr
and
and
xor
pop
cmp
xlat
cmp
jmp
jge
push
ret
test
pop
arpl
(bad)
repz
arpl
addr16
div
inc
push
loopne
out
sub
push
(bad)
ror
call
pop
call
pop
mov
cmp
sbb
xchg
push
inc
loop
arpl
fidivr
fstp
cmps
int
lock
push
jmp
sbb
or
jbe
retf
cmp
pop
xor
and
mov
cmp
es
jbe
pop
or
jne
mov
clc
jne
add
pusha
call
stos
ror
xchg
mov
push
pcmpeqd
into
fs
xchg
mov
pop
mov
gs
stos
movs
pusha
dec
int
dec
pop
aas
sub
ds
dec
shr
in
loopne
and
xor
inc
xchg
test
pop
inc
adc
cld
pop
setbe
sub
push
sub
popa
mov
push
stc
xor
dec
add
(bad)
out
jbe
das
call
dec
sti
mov
xchg
repnz
arpl
push
loop
jp
and
sbb
addr16
les
push
jnp
pop
loopne
cmps
lahf
add
(bad)
mov
arpl
sbb
mov
jle
int3
or
xor
pop
fldcw
dec
pop
add
div
std
sub
push
gs
popa
je
sti
xchg
call
dec
dec
xor
ret
call
push
mov
pushf
in
xor
cmp
into
stos
push
retf
xor
loopne
push
addr16
mov
int
iret
push
xchg
xchg
cmp
xchg
dec
push
adc
scas
loop
pop
sub
ret
scas
push
add
xchg
cwde
leave
jmp
inc
cmps
repz
out
jg
sub
jbe
in
call
loope
add
sti
push
cs
scas
dec
rcl
cmps
mov
in
sbb
adc
inc
xor
or
push
push
cli
add
and
adc
in
pop
sbb
add
cmp
cs
cmp
dec
xchg
cli
pop
ins
or
in
mov
and
ret
movs
outs
mov
(bad)
and
iret
shr
xchg
stc
add
mov
shl
rcl
bound
in
gs
mov
daa
xor
scas
out
adc
outs
sbb
(bad)
rcl
xor
shl
in
jno
adc
mov
pop
mov
clc
mov
jne
dec
sub
div
cwde
repz
(bad)
mov
(bad)
(bad)
gs
outs
gs
push
test
xchg
inc
int
mov
adc
jo
sub
jo
jmp
fwait
and
add
mov
xchg
push
and
cmp
pop
push
call
jae
nop
jmp
rcr
rol
arpl
cmp
and
cs
out
ds
adc
test
pop
push
out
idiv
not
cmc
sub
add
ror
idiv
adc
neg
mov
pusha
(bad)
gs
cmp
scas
fisub
mov
scas
call
push
xchg
arpl
mov
push
xor
aas
add
adc
in
mov
lods
jmp
gs
jmp
(bad)
shl
cmp
add
test
das
jmp
dec
jo
mov
inc
xor
xor
sub
xor
aas
scas
jne
xor
mov
inc
add
xchg
cmp
je
jg
ds
(bad)
lods
jecxz
cmp
fwait
xchg
fdivr
inc
inc
sbb
aam
mov
push
jae
xchg
test
adc
push
and
(bad)
push
add
je
out
push
nop
cdq
or
cmp
xchg
out
sub
dec
sbb
adc
test
inc
push
ins
and
mov
cmps
mov
pop
leave
into
xchg
adc
sahf
in
ds
stos
test
pop
das
loopne
jl
xor
mov
pop
js
inc
mov
pop
inc
xchg
mov
in
inc
das
add
xor
out
and
mov
dec
jl
clc
stc
scas
lods
lahf
rol
cmp
mov
arpl
pop
in
sub
jbe
inc
mov
or
push
inc
push
inc
ror
inc
not
xor
dec
push
add
inc
add
add
push
mov
shl
adc
(bad)
pushf
sbb
inc
pop
gs
mov
bound
adc
push
or
cmp
ins
and
jg
mov
fild
cdq
test
test
pop
js
add
push
sbb
mov
mov
arpl
xor
sub
or
pop
fdiv
lods
jg
ja
sub
jns
(bad)
dec
stos
or
xchg
into
repz
xchg
mov
adc
ret
inc
(bad)
ret
mov
imul
cli
inc
add
xor
ret
dec
and
test
push
jecxz
push
test
leave
mov
xor
jmp
sti
clc
jb
jge
jecxz
xlat
sbb
dec
sbb
es
scas
inc
or
xchg
jp
fidiv
xlat
loope
cli
jmp
js
xchg
xchg
jnp
pushf
sbb
test
sub
mov
sbb
xchg
xor
das
xlat
cwde
je
retf
unpckhps
jge
mov
(bad)
adc
push
aas
cmp
add
cs
jo
inc
mov
imul
adc
mov
pop
lea
cld
jl
mov
jne
mov
je
icebp
dec
lea
xor
jmp
dec
cmps
dec
mov
nop
ret
out
test
aad
sub
imul
or
dec
mov
outs
repz
and
push
xor
lock
pop
mov
push
or
inc
(bad)
mov
cs
ja
int3
out
lds
add
mov
push
lds
cmps
push
adc
sar
push
sub
jne
inc
pop
ror
push
nop
dec
mov
dec
cmp
ja
loopne
into
out
mov
mov
sub
sub
aad
inc
and
jle
mov
mov
mov
sbb
retf
adc
sub
jle
mov
sbb
pop
mov
sbb
(bad)
mov
int
cmp
mov
xor
and
pop
loopne
jbe
sub
out
in
lock
add
inc
inc
aaa
mov
and
fdivr
sbb
push
(bad)
xchg
das
out
adc
outs
push
js
mov
ds
pop
push
cli
inc
or
mov
clc
sbb
dec
mov
push
cmps
fs
mov
shr
addr16
or
mov
and
test
mov
push
aad
out
cmp
mov
test
jg
adc
icebp
icebp
sub
mov
fnstenv
inc
cmp
add
pop
or
loop
pop
xor
push
cli
mov
mov
mov
out
dec
xor
jnp
lods
sub
lahf
gs
jnp
xor
daa
mov
jmp
shl
shr
fstp
push
mov
jnp
(bad)
jecxz
mov
cmp
and
push
mov
add
xor
out
pop
cmp
cmp
push
push
lahf
cmps
std
mov
sbb
leave
push
rcl
mov
pop
in
imul
push
scas
inc
push
push
pop
icebp
xchg
push
data16
fmul
mov
fs
shl
js
popa
lods
pop
mov
push
sub
mov
scas
int
push
imul
lods
dec
fisubr
mov
mov
add
mov
cmp
adc
jmp
jae
xchg
sbb
aas
mov
jge
mov
pop
xlat
ds
push
sti
arpl
and
loop
push
push
push
inc
pop
mov
push
lds
(bad)
rcr
ss
mov
mov
mov
cmp
es
popf
addr16
cmp
pop
sub
xor
inc
mov
xchg
or
or
mov
sub
dec
or
mov
out
inc
sbb
scas
test
xor
ret
push
mov
(bad)
jns
lods
adc
sbb
retf
push
hlt
nop
adc
inc
dec
push
dec
(bad)
gs
mov
sub
cdq
inc
or
repz
out
add
mov
into
test
test
aas
mov
leave
test
jbe
std
into
mov
xchg
mov
std
lods
pop
movs
icebp
xchg
push
sub
mov
not
and
cmp
push
les
fs
(bad)
jecxz
adc
push
shl
call
add
mov
mov
outs
jge
jmp
push
dec
cmps
(bad)
call
and
not
sub
lock
add
repz
out
sbb
jge
or
scas
mov
je
jbe
add
ds
call
ss
mov
fisub
(bad)
adc
mov
push
rcl
std
shl
pop
gs
clc
loope
es
jb
js
xchg
push
and
lahf
add
inc
(bad)
cmp
mov
mov
push
jo
fwait
inc
cmp
int
fisttp
push
sbb
add
cli
jns
fwait
mov
test
call
mov
je
mov
push
xor
sbb
jno
pusha
pop
mov
test
jmp
ja
and
pop
sub
ret
pusha
ds
mov
mov
push
fdiv
mov
rcl
and
fistp
jns
das
jl
xchg
or
cwde
sub
add
mov
lea
mov
jnp
and
push
dec
faddp
retf
pop
pop
pop
adc
stc
mov
sbb
lahf
mov
dec
push
mov
mov
and
pop
(bad)
out
sub
sub
xchg
(bad)
pusha
sahf
test
fs
frstor
arpl
mov
and
xchg
xor
mov
adc
push
push
stc
mov
or
and
aad
inc
dec
mov
xchg
adc
sub
pop
aas
fcmovu
mov
or
out
jl
shr
jb
fcomp
mov
js
mov
push
adc
xor
push
aaa
aas
xchg
shl
aas
xor
ret
sbb
jbe
popf
ja
add
and
push
inc
jmp
loop
push
(bad)
sbb
lds
into
push
push
repnz
inc
mov
xor
push
mov
sub
cdq
rcr
(bad)
pop
icebp
push
xchg
cmp
add
nop
dec
push
fs
pushf
js
push
sahf
fwait
inc
xor
in
lods
mov
add
in
imul
out
or
stos
test
sub
xor
lods
rcr
push
ins
mov
fld
leave
stc
push
inc
mov
test
fmul
or
retf
pop
fs
mov
aaa
push
ss
add
sub
pop
mul
mov
inc
mov
pop
ret
sbb
out
rcl
imul
mov
push
fdiv
mov
fs
inc
adc
mov
stos
fisub
cld
pop
pop
dec
pushf
out
nop
rcr
movs
add
lahf
adc
dec
stos
out
fsubr
sti
movs
push
sub
nop
or
clc
cmp
inc
ins
nop
and
or
sub
add
xchg
cli
ss
out
cmovge
inc
jo
cwde
inc
xchg
ror
shr
adc
add
les
daa
and
sbb
push
dec
adc
cli
cmp
sub
xchg
mov
pop
lea
lock
neg
fadd
in
mov
rcr
out
mov
mov
push
outs
jge
jmp
scas
add
mov
push
sub
xor
inc
push
jmp
pop
sbb
sub
pop
dec
inc
pop
or
mov
outs
cmps
add
div
lea
scas
xchg
lahf
cmp
out
stos
pop
mov
mov
in
rol
out
repz
jmp
arpl
inc
or
inc
scas
xor
out
mov
or
pop
js
pusha
mov
adc
adc
jo
dec
imul
push
inc
sahf
mov
inc
test
push
outs
push
into
cwde
xchg
ret
mov
mov
bound
xchg
mov
pop
stc
icebp
pop
stc
mov
sbb
jp
sub
rcl
gs
xchg
sbb
mov
cmp
popa
data16
or
je
iret
add
pop
mov
pop
mov
lds
lahf
xor
fimul
add
push
adc
ins
enter
xor
dec
lods
add
mov
xlat
test
in
jmp
bnd
das
shl
jg
scas
xor
jp
mov
lods
adc
stc
ficom
int
jmp
add
push
scas
cmp
(bad)
aas
ins
addr16
mov
out
lock
bound
mov
push
test
inc
outs
in
in
push
test
pop
pop
add
inc
stc
cmp
push
push
jmp
push
jp
sbb
inc
je
gs
pushf
sub
xchg
dec
loope
ret
js
jmp
and
mov
pop
lea
xchg
(bad)
lds
pop
cwde
cwde
mov
xchg
inc
in
add
mov
fist
mov
lods
dec
ds
sahf
cmps
pop
retf
xor
pushf
mov
fstp
mov
call
jne
loope
test
xchg
int3
fisttp
pop
cli
and
xor
sub
scas
pusha
sbb
rcl
cmp
push
outs
les
les
mov
hlt
inc
popa
inc
sbb
leave
add
cdq
cld
inc
add
inc
out
frstor
pop
adc
add
xchg
sub
lds
xchg
test
cmp
(bad)
or
jmp
inc
out
lock
inc
(bad)
loope
imul
and
adc
dec
loop
imul
ret
inc
lods
call
outs
jg
push
mov
not
jnp
pop
pop
test
dec
adc
adc
jle
fsub
mov
jbe
jno
shl
rcr
inc
ficom
sti
adc
test
(bad)
xor
fst
jecxz
test
out
xchg
je
or
test
lods
fcmovnu
pop
inc
in
or
test
daa
and
pop
popa
bound
sub
test
inc
lds
jbe
dec
jmp
mov
sbb
in
mov
dec
out
out
mov
shl
mov
push
fdiv
es
(bad)
add
call
push
dec
or
xor
dec
push
arpl
scas
xchg
psrld
sub
fmul
inc
add
push
sbb
sub
ficomp
aas
inc
push
jp
jae
mov
sbb
xor
add
dec
xchg
push
xchg
mov
xchg
xor
or
movs
or
inc
aam
js
add
jp
test
mov
ror
pop
pop
fst
xor
lahf
push
ficom
mov
ins
stos
mul
ss
test
push
cmp
mov
mov
jp
push
xor
mov
xchg
or
outs
jle
icebp
xchg
sub
dec
ss
out
push
pop
push
jp
outs
ja
push
in
retf
mov
imul
inc
jmp
aaa
pop
or
icebp
pop
imul
loope
or
push
cmp
inc
adc
iret
or
add
test
dec
cmp
das
frstor
or
lahf
popf
xlat
ja
fdivrp
stos
(bad)
cdq
sbb
inc
xchg
stos
cli
in
(bad)
es
mov
int3
dec
test
mov
add
sbb
jmp
test
sub
nop
call
dec
xor
cmp
jecxz
mov
jmp
push
test
loop
cld
xchg
and
test
test
mov
ret
icebp
mov
jae
jns
pop
mov
jno
push
mov
fild
pop
fsub
scas
sti
add
mov
jo
cmp
mov
sbb
xchg
pusha
stc
add
xchg
jge
sub
mov
mov
ss
cmp
jecxz
jl
les
adc
stos
push
cdq
popf
push
test
hlt
jge
push
xchg
jnp
push
mov
daa
cmp
rcl
pop
pop
repnz
xchg
sbb
mov
add
imul
sti
aaa
cmc
or
and
inc
lock
ins
(bad)
jmp
(bad)
xchg
dec
imul
cs
rol
pop
mov
cmp
cmps
inc
lahf
adc
sub
cmps
cmp
ins
scas
xchg
jnp
rcl
les
lods
sub
in
(bad)
xlat
and
loop
mov
xchg
test
jge
pop
push
out
mov
aam
clc
aam
adc
rcr
jne
push
lahf
scas
jmp
mov
retf
mov
cmc
fimul
leave
dec
js
and
xor
aam
pusha
repnz
sahf
mov
ss
sub
xchg
xor
rcl
mov
xchg
jbe
das
sar
push
jl
test
(bad)
daa
mov
sbb
arpl
mov
pop
mov
inc
push
adc
call
mov
mov
push
aad
(bad)
scas
add
rcr
and
add
inc
ss
out
mov
aad
out
push
std
adc
and
rcr
jo
js
movs
pushf
sub
loop
div
out
inc
call
aad
jge
jp
mov
jmp
mov
ret
adc
mov
ret
xchg
sbb
or
stos
imul
and
jo
xor
les
pop
add
cmp
leave
push
cld
sub
in
shl
dec
or
cmps
xor
mov
test
mov
inc
inc
loopne
rol
mov
or
sub
cmps
or
lds
push
dec
fidivr
hlt
outs
pop
mov
cmp
bound
cmc
jno
je
loopne
jmp
adc
inc
cmps
add
dec
dec
jo
mov
mov
and
or
jmp
cmp
rcl
nop
outs
call
mov
aaa
scas
sbb
js
enter
xchg
out
sub
inc
and
cmp
mov
pop
mov
cdq
hlt
pop
adc
push
clc
pop
(bad)
jmp
mov
lods
push
mov
ret
xchg
pusha
and
xor
aam
push
jo
shl
cmc
das
mov
mov
aam
jae
ret
push
sahf
mov
aas
leave
mov
ss
out
loop
push
(bad)
leave
adc
sub
jno
push
imul
push
loop
xchg
pop
in
aas
add
repz
push
retf
push
iret
push
repz
sub
inc
int
(bad)
test
and
rsqrtps
mov
mov
and
adc
pop
jl
mov
scas
leave
pop
xor
lds
xor
test
retf
es
inc
enter
jge
hlt
pushf
sub
loopne
scas
cmp
add
dec
add
in
rol
or
hlt
repz
add
adc
push
test
push
jae
cli
add
and
xchg
iret
push
adc
mov
in
xchg
ret
fld
mov
stos
mov
xor
imul
fbstp
cmp
ror
imul
mov
icebp
jo
cmc
lahf
mov
pop
pop
sbb
dec
sub
or
and
das
jg
sub
mov
mov
cs
jne
push
aas
mov
add
cmp
js
mov
rol
aas
jb
sub
ds
mov
mov
push
sbb
push
add
pop
in
int3
fwait
inc
and
outs
sub
imul
sub
push
out
aam
inc
push
in
data16
cs
fsubr
fcmovne
gs
cld
hlt
in
mov
and
push
lods
fisttp
shl
jo
adc
inc
(bad)
popf
into
js
ret
dec
stos
lahf
xor
ror
popf
or
xchg
lods
cmp
dec
lahf
mov
in
into
mov
or
clc
aad
mov
sub
pop
push
xchg
push
loop
neg
(bad)
pop
pop
push
pop
jnp
bound
sbb
mov
mov
push
call
rcr
sub
std
and
inc
out
jbe
push
jmp
jo
test
dec
(bad)
fs
rcr
mov
nop
push
in
sbb
cmp
and
out
or
cli
mov
sar
in
mov
mov
push
cmc
repz
dec
(bad)
add
add
out
in
ds
aam
repnz
mov
mov
mov
scas
ret
xchg
push
mov
in
test
push
fistp
adc
cmp
and
test
add
mov
daa
xor
pop
sti
or
sbb
loopne
lahf
stc
push
enter
sub
jne
pushf
iret
mov
dec
inc
jmp
sti
addr16
cmp
inc
inc
and
lsl
in
scas
jg
add
add
dec
mov
mov
fsub
fcmove
sbb
mov
or
aam
inc
les
adc
adc
fsubr
adc
sti
int
xor
test
shl
mov
ss
mov
imul
push
fidivr
cli
push
test
ins
pop
inc
lahf
push
adc
xchg
xor
bnd
pop
leave
ror
int3
test
sahf
fcom
fimul
xchg
sbb
aas
aas
sar
bound
and
loop
std
sbb
inc
in
sahf
mov
fist
mov
jnp
mov
push
mov
pop
dec
cld
ins
shl
or
cs
or
pop
mov
inc
popf
mov
push
test
adc
pop
ret
sti
cdq
inc
xchg
sbb
xor
sbb
lahf
fwait
cmp
vpsrlq
jg
outs
mov
into
xchg
cmp
rcr
bound
pop
xchg
and
sar
xor
adc
inc
rcl
xor
jecxz
lahf
sti
pop
push
mov
mov
ret
outs
outs
and
jp
es
and
leave
or
fild
(bad)
(bad)
dec
test
adc
ds
lds
or
sahf
fs
repz
inc
loop
jns
je
frstor
retf
sub
mov
adc
sub
or
xchg
sub
and
push
adc
jp
cmc
frstor
cmp
xor
dec
add
movs
lea
aad
xor
fisub
push
mov
stos
add
fldenv
es
add
mov
ret
mov
pop
sbb
retf
pop
cmc
mov
jl
adc
or
into
lods
jnp
test
cmp
repz
mov
sti
mov
scas
mov
imul
sub
xchg
sti
adc
xchg
cmp
mov
jbe
icebp
mov
inc
sub
outs
adc
dec
retf
daa
loope
cmp
mov
inc
sub
jmp
xchg
gs
(bad)
shl
cmp
jl
xchg
enter
or
push
les
pop
adc
jmp
cmp
das
jecxz
push
xchg
sbb
sti
xlat
sub
in
scas
mov
mov
xor
push
cmp
loop
cmps
or
ins
arpl
jnp
movs
movs
xchg
in
dec
(bad)
or
mov
inc
daa
(bad)
dec
jmp
or
ret
mov
xor
jmp
fs
or
call
push
cwde
ds
sub
adc
pop
vmovq
mov
push
js
(bad)
mov
in
or
fucomi
outs
test
out
(bad)
gs
enter
in
and
mov
push
in
adc
push
retf
lahf
jbe
and
int
dec
pop
stos
xchg
mov
mov
hlt
pop
int
sbb
icebp
or
daa
aad
mov
inc
jle
cmp
mov
xchg
out
mov
cmps
adc
into
(bad)
out
call
fnstsw
add
ss
jae
pop
push
and
mov
add
hlt
push
pop
mov
out
pop
xchg
xchg
(bad)
jg
jne
sub
arpl
mov
dec
xlat
call
jg
push
out
mov
iret
push
and
(bad)
sbb
mov
fstp
push
mov
jmp
jne
(bad)
jge
enter
sbb
xor
and
stc
xlat
loope
std
adc
clc
mov
je
add
add
es
cmp
push
std
and
add
shl
adc
cmp
mov
mov
test
scas
call
push
int
mov
gs
inc
(bad)
xchg
rcl
fwait
add
iret
jecxz
and
(bad)
dec
bound
adc
fisttp
aas
test
cmp
movs
imul
pop
sub
sbb
ja
cmc
cdq
dec
imul
ds
pop
fimul
jns
out
stos
outs
in
mov
pop
mov
rcl
or
push
inc
iret
(bad)
jo
dec
xlat
push
sub
cmp
xchg
les
inc
mov
test
sub
mov
jno
lods
xor
xchg
or
mov
adc
jg
dec
mov
clc
lock
push
push
add
adc
inc
stos
shr
outs
enter
out
(bad)
outs
cmp
mov
and
pusha
call
in
cs
jb
mov
call
stos
add
mov
adc
add
xchg
div
pop
mul
jo
inc
xor
cmp
sbb
arpl
jg
push
data16
ret
pushf
int3
imul
ret
retf
in
repnz
cmps
or
push
cmps
and
inc
push
xchg
or
fsub
into
inc
repnz
adc
inc
cmps
fdivr
(bad)
(bad)
adc
scas
clc
add
or
bound
shl
jo
mov
mov
ds
pop
scas
mov
mov
mov
loopne
fld
push
jl
or
test
xor
pushf
fsub
mov
xchg
lock
out
mov
sbb
mov
dec
fistp
cld
aas
xchg
ss
push
loop
hlt
mov
mov
add
stos
mov
(bad)
sti
pop
cli
idiv
push
test
stos
mov
and
in
sti
cmc
cld
fadd
loope
push
jnp
dec
call
ds
retf
ret
cmp
je
ss
xchg
and
cs
dec
bound
mov
push
mov
mov
punpckhwd
loop
jne
and
test
mov
push
mov
in
push
sar
sub
sub
clc
push
mov
mov
aam
in
nop
sub
cs
lods
pop
mov
in
adc
les
js
jge
pushf
push
ja
add
outs
(bad)
fisttp
mov
in
inc
or
xor
adc
out
mov
mov
imul
xchg
jmp
pop
clc
jecxz
or
test
or
push
push
fdivr
inc
jne
mov
xor
loope
pop
jmp
jp
mov
mov
mov
call
loope
xchg
dec
and
inc
lods
pop
jecxz
xchg
mov
jecxz
sbb
xchg
xchg
xchg
and
add
fdivr
mov
lock
out
cli
std
test
pop
in
int
mov
mov
cmps
mov
in
mov
jae
pop
(bad)
lock
test
mov
int3
sub
icebp
sahf
add
push
inc
xchg
les
dec
push
cld
call
scas
xchg
push
jns
les
lods
xchg
mov
(bad)
mov
mov
sbb
inc
jbe
jne
call
shr
jns
sbb
xchg
fwait
aam
ret
movs
outs
fsub
fcom
jle
jp
adc
cmps
std
inc
push
mov
dec
outs
popa
ja
pop
xor
jle
rol
mov
push
out
repnz
pop
outs
sti
aad
ss
fucomi
call
fsubr
js
movs
push
jbe
jns
test
bound
fimul
(bad)
sbb
ds
add
outs
xchg
lods
or
stos
xor
(bad)
jmp
xlat
mov
add
xchg
(bad)
sar
adc
daa
fs
sbb
pop
add
ja
pop
sbb
and
cmp
iret
add
adc
pop
pop
push
mov
sub
not
pusha
adc
scas
pop
jns
xchg
(bad)
jmp
test
rcr
push
add
mov
fild
call
adc
cld
ror
fs
movs
repz
addr16
gs
out
and
aaa
pop
push
lock
dec
fcom
dec
pop
movs
dec
mov
mov
mov
xchg
inc
mov
add
cmp
add
add
inc
xchg
mov
psadbw
(bad)
repnz
(bad)
out
movs
sbb
adc
mov
mov
mov
push
pop
jge
out
mov
stos
movs
in
pop
sub
mov
inc
mov
aad
test
int
push
imul
(bad)
shl
jge
fadd
jae
mov
cmp
mov
pop
mov
out
mov
fild
push
stos
xchg
sub
mov
and
jmp
lods
hlt
push
sahf
lea
xchg
loope
cwde
int
add
sub
jg
movs
bound
push
xchg
pop
fs
push
adc
push
jmp
enter
mov
sbb
sbb
xchg
xchg
sub
push
xchg
mov
pop
aam
call
mov
lods
ror
cmc
pop
enter
mov
lds
lea
sub
dec
cmp
mov
xchg
jge
mov
rol
int
jle
enter
sti
pushf
dec
dec
outs
adc
or
lds
jo
fs
movs
push
test
add
fwait
sar
ins
enter
in
inc
(bad)
lock
push
test
lds
cmp
ret
test
stos
inc
sbb
(bad)
das
pusha
push
scas
lods
xadd
push
cdq
jl
dec
mov
mov
xor
jg
mov
dec
and
repnz
frstor
or
cmp
aam
outs
gs
stc
push
mov
dec
inc
mov
cmp
xchg
lea
inc
xchg
clc
movs
add
cwde
jae
mov
push
xchg
dec
outs
mov
cmp
not
sub
cmps
dec
div
xor
aam
or
std
fnstcw
sbb
add
cdq
and
lods
sbb
aas
out
ins
je
inc
cmps
jge
scas
jmp
jnp
lahf
cmp
xor
movs
inc
and
push
retf
add
ffreep
mov
push
ins
adc
scas
mov
sahf
test
jbe
ds
stos
sub
hlt
sbb
(bad)
imul
add
repnz
or
jnp
dec
gs
jmp
sub
mov
mov
ret
ss
jge
stos
inc
adc
es
xor
xor
sbb
xor
shl
hlt
adc
sub
fldenv
xchg
les
out
ins
lds
jne
cmp
movs
bound
xchg
jno
mov
in
cmp
ret
cmp
jbe
jge
jmp
stc
jo
icebp
aaa
sbb
sbb
out
and
pop
mov
xor
js
and
in
push
pusha
cmp
in
sar
xchg
adc
pop
neg
neg
dec
out
jg
xor
xor
and
mov
sbb
sar
mov
scas
cmp
je
xchg
dec
cli
sub
hlt
in
dec
push
xchg
mov
inc
adc
clc
mov
push
pop
cmp
outs
cmp
inc
out
or
dec
inc
inc
sub
dec
leave
xor
(bad)
in
es
and
cs
es
(bad)
inc
jmp
or
movs
push
jp
add
in
pop
adc
pop
xor
mov
sbb
rol
aam
cmp
jb
jmp
inc
aaa
jno
sub
inc
pop
out
inc
addr16
mov
push
(bad)
test
mov
sub
cmc
jmp
push
test
test
(bad)
and
mov
pop
adc
or
dec
or
ret
sub
popf
add
jo
xchg
push
in
xchg
fild
add
(bad)
sub
adc
dec
jae
fwait
push
dec
loope
int
int
mov
jns
imul
hlt
fwait
pop
add
mov
or
xchg
adc
test
stc
xchg
add
loop
popf
test
sbb
and
pushf
mov
sub
add
pop
aas
add
sub
or
pop
cli
into
shl
sub
mov
(bad)
inc
sub
mov
mov
xor
fstp
test
lods
inc
jp
dec
sub
fst
dec
cmp
jmp
pop
ds
ret
mov
sub
psrld
in
addr16
jo
jmp
mov
xchg
stos
xchg
lods
jns
sbb
test
sti
das
(bad)
stc
cmp
cmp
call
shl
mov
inc
imul
push
cdq
outs
or
cmp
cs
xor
fisub
retf
push
or
clc
frstor
(bad)
add
sbb
mov
dec
cwde
cmps
xchg
inc
xor
aas
mov
dec
not
mov
bound
add
leave
test
hlt
(bad)
(bad)
push
jecxz
ret
out
jo
push
pop
jp
mov
inc
lock
jb
call
sub
push
js
cli
xchg
outs
es
outs
xchg
shl
push
pop
lea
add
scas
jmp
add
in
stos
test
xor
leave
outs
out
and
idiv
or
xchg
fsubr
push
imul
xor
in
mov
fdivr
mov
inc
sub
ret
xor
sahf
fisttp
adc
movs
cmp
cmp
jge
in
mov
or
and
aad
sbb
or
cld
pop
and
mov
sub
push
outs
dec
addr16
sub
jp
jp
gs
in
aas
cmc
xchg
retf
sbb
sti
sar
stos
dec
daa
je
(bad)
xchg
test
es
dec
mov
pop
dec
inc
inc
call
and
xchg
or
jbe
pop
fs
or
mov
jo
mov
je
outs
push
scas
push
pop
push
mov
push
and
popf
jns
jmp
mov
xor
mov
and
adc
dec
pop
push
dec
iret
mov
adc
test
or
xchg
cli
jns
std
mov
clc
pushf
pop
dec
dec
xchg
out
sbb
cwde
nop
std
rol
xchg
jp
push
inc
pop
xchg
jbe
xchg
sbb
iret
xchg
rcl
add
mov
mov
xor
or
sbb
sbb
mov
or
jle
(bad)
dec
inc
add
dec
ror
call
adc
push
sbb
lods
mov
cmp
out
dec
or
repz
(bad)
lods
loopne
cmps
out
add
and
cld
loope
mov
(bad)
fld
jp
mov
dec
jne
fistp
(bad)
add
jg
xor
ror
cld
xchg
or
enter
or
cmp
pusha
nop
cld
test
and
std
mov
add
adc
fdivr
pop
add
sti
retf
test
and
mov
fidiv
and
cmp
adc
arpl
jns
lods
mov
sub
gs
mov
into
pop
popa
pop
xadd
ins
pop
sub
inc
adc
xchg
jp
out
adc
inc
xchg
pop
push
repz
cmp
cmp
pusha
sub
mov
adc
loope
movs
fsub
adc
mov
outs
ret
(bad)
jmp
add
or
int
gs
test
pop
or
mov
push
das
sbb
and
add
fsubr
inc
cmps
scas
push
in
adc
fld
test
push
repnz
pop
pop
push
aam
aaa
mov
jl
mov
outs
cmc
outs
add
dec
aaa
outs
jmp
sbb
dec
pop
push
popf
aaa
adc
mov
adc
xchg
int
outs
mov
(bad)
cli
popaw
test
sub
leave
(bad)
popa
test
push
adc
inc
pop
(bad)
shr
lea
jg
(bad)
lsl
dec
scas
jge
lods
push
cdq
lock
lds
jecxz
in
jg
out
mov
sbb
and
mov
ins
cdq
std
sub
push
jp
mov
call
xor
inc
and
cmp
mov
inc
jmp
cmps
xchg
pushf
push
retf
mov
mov
pop
movs
cmp
loopne
and
push
retf
xchg
jmp
iret
out
cwde
jnp
xor
or
test
xor
in
es
push
jne
adc
push
fiadd
fnsave
(bad)
dec
xor
fs
xchg
cmp
(bad)
jns
cmp
add
lahf
into
sbb
dec
add
daa
cmc
cwde
xchg
test
xor
bound
es
fadd
mov
sbb
sti
inc
push
xchg
lahf
mov
sub
pop
in
mov
xor
mov
mov
shl
jmp
sahf
xchg
(bad)
pop
xchg
jg
mov
mov
lahf
rcl
mov
enter
das
sub
cmps
enter
jns
lock
adc
jmp
stc
mov
xchg
xchg
mov
and
call
add
xchg
sbb
pop
out
ins
or
and
icebp
jae
movs
mov
inc
dec
cmps
add
retf
add
stos
out
test
ret
and
pop
dec
in
leave
fld
and
fsub
in
jne
mov
jmp
sbb
loope
outs
ret
loopne
push
daa
or
dec
(bad)
js
cwde
xor
mov
jne
mov
(bad)
int
mov
or
imul
sahf
adc
add
gs
mov
jo
movs
cli
sub
aam
push
mov
outs
and
lods
daa
int3
movs
loopne
lock
jge
push
mov
inc
loope
movs
add
jle
(bad)
into
inc
and
lods
push
lds
add
inc
out
shl
cmp
enter
or
add
in
sbb
xor
in
sbb
mov
or
arpl
nop
scas
mov
test
aas
inc
xor
jno
mov
bound
cmp
fdiv
sub
aad
pop
push
rol
inc
into
and
or
push
ins
lods
rcl
stc
inc
pop
push
cmp
call
retf
ror
xor
inc
lahf
dec
sbb
mov
test
ror
lods
xor
xor
ins
inc
xor
ss
popf
xchg
jae
pop
retf
mov
mov
test
sbb
jg
jnp
pop
les
ficomp
gs
jl
cmp
sub
clc
dec
fmul
sub
cmp
shl
cwde
or
or
pop
fistp
cmp
dec
push
xor
sub
sub
dec
jb
xor
arpl
ret
(bad)
jmp
or
stos
sub
push
sub
enter
push
push
xchg
arpl
mov
fdivr
sub
adc
jnp
mov
repz
jmp
jne
mov
cmp
or
daa
movs
ds
xor
fs
and
xor
loope
test
mov
idiv
mov
cli
ror
(bad)
cmp
or
out
and
ret
(bad)
mov
add
int
push
addr16
jnp
sub
adc
add
add
mov
jmp
call
push
xor
inc
xchg
cwde
arpl
mov
pop
retf
ret
and
inc
aaa
push
leave
stc
xor
out
aaa
(bad)
(bad)
std
ja
and
add
sbb
je
std
(bad)
and
das
add
leave
add
in
sub
fs
scas
jmp
inc
retf
out
push
repz
and
and
ss
add
ins
imul
popa
iret
test
xchg
xor
ret
mov
mov
ins
fs
xor
cmp
cmp
mov
stos
enter
ror
rcr
xchg
ficomp
jno
outs
outs
pop
cs
adc
xchg
aad
retf
mov
jecxz
pop
sbb
mov
jmp
jecxz
push
fiadd
test
fdiv
adc
sub
xor
pop
jmp
or
loope
or
stos
add
cmps
arpl
lods
scas
popa
sub
pop
mov
push
call
les
sbb
cdq
(bad)
pop
mov
in
sub
sbb
fisubr
pop
add
daa
sub
(bad)
repnz
xlat
xor
jle
inc
or
ss
fsub
add
ins
les
lock
add
retf
sub
pop
jns
stos
test
jg
push
outs
jae
xchg
xchg
out
pop
fild
dec
test
push
imul
pushf
mov
adc
and
leave
fcom
shl
sti
lods
imul
or
test
(bad)
loope
mov
mov
xchg
out
into
(bad)
movs
psllw
(bad)
pushf
push
mov
inc
cmp
or
cmp
(bad)
popa
lock
dec
or
mov
or
and
leave
adc
pop
in
or
push
jp
cmp
jmp
adc
stos
sahf
pushf
push
rcl
or
leave
sbb
lea
xchg
loopne
cmps
hlt
sub
add
jp
call
loope
dec
mov
sub
fisttp
cmp
mov
pop
dec
(bad)
mov
jo
dec
pop
sbb
dec
sti
jo
or
popf
imul
lods
add
push
test
cli
dec
dec
jp
inc
call
push
les
mov
mov
popa
(bad)
and
mov
jmp
sti
imul
sub
or
ds
cmp
mov
enter
je
loopne
popf
fidiv
inc
add
lods
push
imul
int3
stos
test
movs
cmp
ret
leave
pop
loope
popf
leave
adc
std
out
int3
shl
call
or
cmps
les
outs
arpl
nop
pusha
adc
pop
inc
lock
mov
lahf
shr
cmp
clc
xchg
mov
sar
pop
push
iret
sbb
push
add
enter
xchg
sbb
int
ret
or
mov
pop
cwde
lods
cmps
fnsave
push
sti
pop
adc
mov
stos
mov
loop
sar
and
xchg
stos
in
iret
rol
js
xchg
pop
daa
jmp
mov
push
jno
or
mov
not
fisubr
add
and
aas
movs
push
(bad)
add
mov
or
jge
xchg
mov
mov
inc
dec
and
mov
aam
sub
xor
leave
cmp
(bad)
xlat
popf
dec
aaa
loopne
xor
cmp
pushf
out
add
fist
fdivr
aad
jge
cmp
enter
int3
jmp
pop
cdq
xchg
add
or
popf
mov
mov
sbb
fist
and
mov
imul
mov
stos
adc
(bad)
lods
sbb
sar
xchg
popf
dec
jae
gs
mov
mov
cmc
lahf
xor
mov
jb
pop
push
pop
xor
arpl
xor
xchg
imul
pop
clc
xor
jg
xchg
mov
inc
and
fwait
jbe
stc
int
mov
xor
test
sub
and
or
sahf
lds
imul
out
fnstenv
popf
adc
adc
pushf
jle
jl
pop
ds
imul
fucom
mov
mov
push
pop
shr
xlat
fadd
and
std
(bad)
fistp
mov
adc
push
inc
jmp
push
in
gs
pusha
mov
and
loop
pop
inc
iret
add
mov
stos
movs
push
cmp
inc
dec
mov
push
mov
cmp
cmp
mov
xor
(bad)
xchg
test
dec
xor
lods
test
movs
shl
in
push
(bad)
ror
fisubr
or
nop
xor
dec
mov
ret
cmp
inc
mov
add
sbb
xlat
rcl
lods
push
push
sbb
adc
cld
mov
out
fdiv
rcl
sub
mov
popf
mov
stos
adc
jnp
xor
lahf
shl
ja
cwde
push
popf
dec
fnstenv
rcl
pusha
pop
sub
xchg
sahf
dec
jmp
mov
ins
jle
rcr
sahf
mov
xchg
pop
pop
add
dec
das
mul
es
retf
push
mov
jae
mov
clc
mov
popa
scas
dec
add
aas
test
sub
adc
add
ins
push
cmp
sahf
xlat
mov
cld
jmp
pusha
test
jns
mov
into
pop
sub
aad
xchg
popaw
inc
stos
test
jne
loope
stos
xchg
out
stos
adc
clc
rep
push
aam
sbb
mov
pop
or
inc
ret
cmp
pop
inc
movs
daa
fdiv
push
sbb
clc
jns
adc
pop
jmp
xor
pop
adc
xor
sti
mov
jl
cli
xlat
shl
cmps
test
push
add
adc
jp
or
scas
or
sub
mov
sub
mov
dec
mov
mov
lods
and
pop
xor
sub
pop
push
out
mov
push
das
cli
cs
enter
sti
mov
sub
repz
dec
in
aam
rcl
popf
std
jl
(bad)
stos
lahf
cmp
push
or
mov
add
stc
mov
inc
test
dec
mov
jnp
dec
mov
mov
pop
xchg
add
jg
xor
mov
jb
jnp
add
adc
pop
aaa
add
out
adc
scas
or
sahf
scas
stos
mov
sbb
dec
es
mov
push
add
adc
enter
sub
jno
xchg
sub
xchg
cmp
imul
adc
test
out
cs
inc
sbb
push
push
cdq
adc
scas
rcr
xlat
clc
in
cmp
cdq
dec
ror
dec
add
xlat
ins
jl
mov
call
mov
(bad)
pop
daa
sar
inc
pop
cdq
pop
stc
ror
and
ins
push
and
scas
not
push
cmp
lock
fbstp
mov
hlt
sbb
add
xor
std
fdiv
lods
xchg
push
(bad)
into
ss
sbb
push
(bad)
xchg
adc
aam
int3
adc
sub
fistp
(bad)
push
pop
and
jl
adc
mov
sub
mov
mov
pop
call
in
xor
jae
or
movs
xchg
outs
mov
add
mov
xor
outs
push
not
loopne
jnp
xor
js
jmp
xor
stos
or
mov
mov
ins
mov
dec
and
test
(bad)
lock
xchg
fldln2
scas
adc
data16
bound
pop
jo
and
movs
add
test
inc
in
inc
xor
pop
inc
fst
push
out
inc
cld
or
jns
lods
ret
sbb
and
push
sub
int
shl
int
push
addr16
fist
xchg
add
hlt
enter
in
push
xchg
adc
jmp
das
cli
in
pop
adc
or
out
add
test
data16
inc
pop
fwait
int3
enter
sub
pushf
xor
jmp
mov
mov
add
mov
mov
inc
mov
mov
mov
jno
mov
jp
xor
sub
out
(bad)
sbb
jne
dec
mov
cmps
cdq
push
push
int3
jge
popf
xchg
mov
in
and
xchg
mov
pop
(bad)
jnp
mov
mov
xor
xor
pop
add
ret
test
mov
xchg
mov
sub
lahf
mov
xor
push
add
loopne
push
ss
and
es
retf
not
mov
mov
test
sbb
dec
jb
enter
lds
dec
call
inc
mul
cmp
jae
loope
pop
sub
test
(bad)
pop
dec
es
pop
jge
mov
mov
out
addr16
dec
xor
iret
nop
mov
add
ret
iret
add
sbb
push
addr16
add
sahf
shl
(bad)
int3
cmp
test
jns
outs
sbb
(bad)
push
dec
test
pop
in
inc
jnp
test
test
(bad)
mov
add
sbb
xchg
cmps
call
add
lods
pop
lods
push
arpl
shr
mov
lods
mov
jle
mov
pop
rol
fist
aas
fcmovne
repz
xchg
(bad)
iret
sub
sti
jp
(bad)
xchg
loop
xor
pop
push
bound
lea
inc
jno
int3
mov
les
mov
mov
inc
gs
xor
inc
repnz
adc
jae
jge
cmps
adc
sub
aam
jno
xor
jmp
daa
in
and
push
mov
adc
movs
xchg
inc
retf
inc
cmps
or
add
xchg
sahf
movs
jmp
xor
sub
in
mov
popf
push
test
dec
xchg
nop
enter
test
push
push
inc
jp
dec
pop
mov
or
mov
mov
out
(bad)
aad
out
jns
fisub
rol
lds
xchg
imul
mov
out
retf
(bad)
int
movs
jl
jmp
inc
fnsave
(bad)
lahf
push
imul
bound
das
push
sbb
int3
jns
aas
into
jmp
aaa
mov
mov
add
add
fisub
push
es
int3
push
scas
in
cmps
adc
push
sbb
ffreep
sbb
sbb
push
movs
std
mul
mov
movs
int
adc
xchg
dec
fwait
pushf
test
push
push
les
mov
mov
sub
mov
sahf
sbb
add
pop
nop
setge
stos
adc
mov
popf
push
sub
inc
(bad)
xchg
mov
retf
sub
rcr
fwait
xor
or
xchg
(bad)
cmp
jl
inc
enter
xor
sbb
mov
not
aas
dec
out
repz
inc
mov
xchg
xor
cs
adc
dec
into
jne
xlat
mov
jmp
or
add
cmps
pop
call
push
outs
mov
(bad)
fld
dec
rcl
sar
int
pushf
jbe
lea
ins
xchg
sti
ins
rcl
retf
in
repz
ins
sbb
lds
mov
sub
rol
movs
mov
cwde
int3
je
mov
outs
jp
jecxz
inc
fwait
(bad)
pop
rcl
sbb
pop
pop
sub
(bad)
jl
mov
dec
in
sbb
out
cmps
xchg
mov
test
or
arpl
arpl
jle
scas
aam
xchg
adc
sbb
leave
cmp
fs
jmp
jns
test
or
lds
xor
dec
push
xchg
mov
xchg
stos
pop
sub
cmp
xor
xchg
je
xlat
leave
mov
pushf
mov
frstor
nop
fild
int3
dec
fmul
fdiv
hlt
adc
sti
xchg
mov
cs
mov
retf
shr
dec
out
aaa
xchg
jo
icebp
ds
out
cmp
sbb
dec
ds
xor
arpl
sbb
xchg
dec
pop
sti
ret
pop
outs
ss
xor
fs
out
adc
xchg
out
ins
(bad)
or
aam
lock
add
and
xor
imul
cdq
xlat
mov
dec
sbb
aad
push
cmp
and
mov
pop
and
dec
push
gs
xor
mov
imul
jle
push
xor
popa
and
into
push
addr16
and
popf
cmp
push
jecxz
pusha
mov
test
mov
jecxz
push
loop
fs
sbb
sub
cs
dec
jmp
into
push
or
repnz
sti
and
mov
adc
call
call
cmps
fiadd
out
jp
dec
frstor
and
push
pop
inc
loopne
add
push
cmps
xor
fisubr
retf
data16
dec
push
cmp
fucomip
xlat
fsubr
fistp
inc
xlat
fbstp
or
mov
pusha
sbb
int3
inc
push
cmps
mov
and
and
cmp
or
push
fnstsw
adc
dec
jecxz
lods
in
dec
int
addr16
push
mov
fs
rcr
push
add
int
scas
fldcw
jbe
in
and
fld
test
imul
aad
enter
jbe
(bad)
jle
lods
xor
imul
jb
mov
in
push
adc
adc
shl
and
mov
jno
in
sub
addr16
mov
loopne
add
add
mul
movs
fimul
mov
jl
adc
mov
aam
ins
shl
xchg
jns
jb
lods
pop
fisttp
inc
test
stos
jmp
sub
iret
mov
mov
int3
or
add
movs
sbb
dec
add
push
and
nop
xchg
pusha
pop
lock
imul
inc
pop
aaa
test
nop
xchg
test
ret
aad
sar
cld
ret
test
ds
sub
rcl
aas
dec
sbb
arpl
dec
cs
push
dec
pop
fdivr
imul
inc
cmp
or
cmp
dec
cmp
sub
(bad)
fld
in
int
dec
ss
cmp
cmp
add
add
ss
fdiv
push
clc
push
jecxz
movs
dec
mov
sub
in
int3
(bad)
push
xor
mov
iret
test
xchg
mov
adc
pop
mov
mov
cmps
ret
and
bound
bound
jg
out
push
and
push
inc
lods
(bad)
(bad)
cli
add
icebp
ror
gs
jecxz
es
mov
pop
repz
inc
xor
les
test
xchg
scas
les
and
push
aas
cmp
sar
aaa
cwde
into
push
loope
sbb
lea
cmp
ja
mov
mov
push
add
lea
je
cmp
aaa
pop
cmp
dec
out
data16
adc
pop
inc
(bad)
int
jp
sub
jbe
movs
mov
inc
dec
sar
scas
xchg
mov
and
shl
idiv
pop
mov
lea
and
test
xchg
mov
push
mov
inc
pop
sbb
cmp
add
icebp
xor
fdivr
xor
mov
jge
dec
scas
sub
not
enter
and
mov
xchg
sti
sti
jge
fistp
mov
repz
mov
ja
inc
mov
adc
push
in
push
ds
mov
jp
aas
jecxz
mov
sub
sub
std
cwde
adc
sub
les
sar
inc
xor
mov
mov
ret
inc
inc
pop
mov
not
pop
rcr
mov
pop
loope
cmova
lods
imul
mov
in
push
mov
je
std
(bad)
call
mov
mov
(bad)
test
cmps
and
mov
js
test
call
jecxz
inc
pop
cli
xchg
mov
adc
in
cmp
dec
push
cmp
imul
test
fcmove
test
pop
jae
sub
fsub
pop
shr
sahf
mov
retf
pushf
addr16
pop
retf
mov
sbb
cmps
fist
outs
push
adc
gs
xchg
mov
push
pusha
frndint
call
and
jecxz
mov
arpl
or
cmp
stos
mov
enter
xor
js
sti
and
sub
mov
lods
sti
stos
lock
out
daa
add
sub
out
dec
loope
jbe
in
push
scas
movs
cmp
push
cmp
xor
pop
pop
retf
ror
xor
cmp
and
(bad)
mov
mov
push
mov
cmp
lods
movs
mov
cwde
sub
xor
stos
jmp
xchg
ds
jns
mov
es
and
mov
in
rcl
ins
inc
into
lods
enter
push
xor
jge
xor
js
call
sub
jmp
sbb
sti
jp
xchg
cmp
retf
(bad)
in
dec
(bad)
aas
lds
js
popf
push
mov
out
jo
mov
or
fidivr
das
inc
pop
mov
call
inc
je
aad
inc
sub
retf
lods
or
pop
mov
and
das
inc
jmp
stos
cdq
push
jbe
(bad)
test
mov
cmp
out
pusha
sbb
sub
stos
jp
outs
test
(bad)
dec
cs
hlt
xor
rcl
pop
add
push
ins
in
sahf
push
or
arpl
xchg
or
cmp
xor
(bad)
test
pop
adc
xor
into
pop
test
sub
repz
addr16
pop
rcr
push
push
fstp
lea
adc
mov
jno
adc
pop
add
bswap
and
cwde
(bad)
inc
push
or
es
mov
es
retf
ret
cli
shl
call
adc
pop
ins
push
or
sub
or
jecxz
out
sbb
fwait
pop
jp
fdivr
jae
mov
out
rcl
lods
sub
xchg
mov
sbb
out
push
sbb
jbe
push
ficomp
jns
or
cwde
fnsave
mov
es
shl
lds
pop
cmp
cmc
pushf
dec
ins
adc
ins
sbb
dec
int3
cmp
pop
jo
jmp
inc
movs
push
stos
sbb
xchg
les
push
sar
(bad)
xchg
retf
mov
pop
idiv
mov
add
dec
sti
int3
popa
shl
icebp
(bad)
cdq
pop
gs
jns
push
pop
adc
sbb
retf
push
lods
push
pushf
sbb
mov
xchg
inc
pop
es
push
add
cld
xor
in
imul
or
(bad)
push
aaa
push
sahf
dec
std
push
(bad)
xor
xor
test
les
ror
mov
xchg
imul
pop
jmp
rcl
mov
add
jno
cdq
pop
movs
dec
xor
mov
pushf
shl
loop
xor
xlat
imul
ficomp
dec
xchg
pop
fdivr
add
xchg
in
push
push
arpl
lock
aas
and
mov
fnsave
push
sub
(bad)
rcl
mov
mov
sub
call
inc
ret
xchg
jg
pop
xor
test
and
xchg
test
lock
out
(bad)
xor
sub
shl
loop
jge
popf
adc
int
push
adc
push
int3
sub
aam
aas
inc
adc
xchg
xchg
xchg
xchg
jae
(bad)
sub
adc
das
pop
jge
aam
mov
rcl
jl
mov
mov
ficom
shr
inc
sar
cmc
jbe
pop
sub
sbb
sbb
mov
lahf
xor
jge
addr16
mov
push
sub
add
test
cmps
pop
ret
mov
mov
arpl
outs
xchg
dec
cdq
mov
dec
xchg
and
jns
inc
push
mov
icebp
jmp
jl
push
and
ret
sub
stos
ds
mov
ror
fnstsw
cmc
ror
jge
jle
jbe
push
cmp
addr16
jne
jecxz
mov
(bad)
movs
neg
sbb
in
(bad)
popf
mov
pop
ret
mov
mov
xor
pushf
inc
cdq
cmp
xor
jae
xor
movs
push
in
fisub
mov
or
mov
clc
lock
adc
lock
adc
push
lods
inc
sar
test
pxor
rcr
into
fcomp
push
and
mov
fdiv
mov
mov
hlt
fdiv
inc
mov
adc
inc
xlat
pop
push
and
and
pop
jmp
push
scas
inc
dec
sbb
je
rcl
loopne
fiadd
pop
call
rcl
cmps
jns
dec
call
std
cdq
dec
mov
out
repz
cs
mov
test
and
test
push
dec
adc
cdq
lods
shr
int
nop
loope
xor
add
pop
xchg
mov
xchg
sbb
sbb
sahf
mov
push
out
adc
div
popa
mov
cmps
or
and
sub
pop
sub
pop
loope
in
xchg
inc
inc
inc
sbb
push
lock
or
call
ins
and
sahf
retf
cld
scas
popa
aad
ret
cld
scas
ja
add
mov
mov
and
jmp
mov
mul
mov
enter
js
das
out
stos
mov
mov
test
pop
cmps
shr
cmp
cli
mov
jbe
test
mov
pop
inc
sub
and
ja
call
xor
inc
ja
push
add
add
jne
xor
or
pop
dec
test
ret
int
and
ss
sbb
sahf
jne
jge
mov
js
hlt
popa
mov
pop
xor
add
mov
or
or
ja
mov
cmp
dec
fcom
dec
cmps
fstp
mov
mov
dec
stos
xor
lea
loope
iret
pop
test
pushf
pop
loope
push
adc
inc
ja
retf
(bad)
mov
push
or
jecxz
das
(bad)
popf
push
aaa
cmp
xchg
lahf
pop
js
ret
in
addr16
es
adc
in
mov
push
in
mov
ss
mov
stos
cwde
cmps
or
shr
push
push
ds
xchg
jmp
cs
shl
out
or
push
mov
and
inc
cmp
and
jmp
imul
cli
data16
push
(bad)
les
loopne
jo
and
in
loope
xor
fst
arpl
xchg
mov
scas
pop
in
mov
mov
sar
cmp
in
std
not
popf
jg
arpl
popf
movd
and
mov
push
repnz
mov
or
sti
das
mov
shr
xor
fsubr
pop
push
sub
xchg
ins
or
fild
xchg
arpl
enter
adc
mov
add
push
xor
push
sbb
sti
sbb
stos
fadd
sbb
mov
aas
cmps
je
mov
cld
jae
and
pop
mov
cmp
xlat
in
sti
(bad)
retf
push
mov
push
je
iret
adc
xor
inc
jmp
inc
pop
push
movs
dec
std
xchg
sbb
pop
jmp
js
xchg
jb
add
loope
pop
or
data16
stc
iret
mul
add
sbb
mov
and
inc
or
rcl
mov
and
or
sub
sahf
dec
mov
sbb
out
enter
loope
fwait
pop
push
mov
mov
inc
loope
sahf
loope
out
cli
push
mov
adc
pusha
adc
imul
sub
cmp
add
mov
sbb
cmps
xchg
test
lahf
dec
aas
sub
mov
mov
in
jno
mov
adc
or
mov
add
pop
push
imul
add
repnz
bound
inc
data16
sti
nop
adc
sbb
adc
xlat
jge
repnz
mov
mov
cmp
popf
fs
ins
pop
lods
and
push
enter
addr16
jne
or
mov
in
popa
mov
int
adc
and
or
pusha
or
mov
xchg
cmp
aam
js
call
fcomi
add
adc
lods
dec
fild
mov
jo
movs
pop
aaa
dec
retf
mov
mov
cmp
push
clc
aam
xor
and
ds
push
mov
mov
add
xor
add
fisttp
(bad)
jp
add
div
pusha
test
enter
out
pusha
adc
test
inc
xchg
mov
imul
retf
in
sbb
mov
sbb
scas
pushf
int3
std
lds
and
cmp
inc
test
mov
mov
cmp
(bad)
xchg
outs
scas
cli
sub
cmp
dec
push
adc
pushf
out
(bad)
push
in
jmp
lods
and
or
sbb
jns
push
xlat
and
(bad)
fsubr
pop
jge
jmp
pop
daa
ss
mov
ror
push
ret
(bad)
imul
sub
jne
jnp
jno
inc
add
repnz
and
call
neg
test
or
sub
movs
and
push
push
push
adc
dec
jge
out
mov
les
(bad)
loopne
movs
call
jnp
pop
push
es
mov
jle
ror
daa
jae
pop
pop
xchg
push
rcl
ret
mov
iret
arpl
and
mov
(bad)
and
cmps
pop
or
sub
mov
push
pop
pop
jo
int
in
dec
ret
jge
stc
out
or
xor
jno
pop
dec
and
movs
mov
inc
fnstenv
rol
loopne
pop
or
jmp
in
loopne
retf
js
dec
retf
jge
or
and
call
push
push
popa
pop
sub
adc
ret
add
ins
push
push
inc
sub
int3
push
sub
daa
xor
or
movs
test
lock
test
fbld
or
adc
sbb
push
jmp
in
xchg
xor
pop
in
push
int3
leave
icebp
stos
mov
loope
lods
sbb
dec
call
ins
xor
pop
nop
jnp
(bad)
fldenv
in
nop
dec
rcr
mov
mov
(bad)
jmp
pushf
push
xor
popa
repnz
(bad)
call
sbb
mov
pusha
test
in
mov
push
inc
push
and
jo
lods
jb
repnz
fldcw
adc
rol
inc
add
or
es
pop
or
xchg
pop
or
into
xor
out
fs
fnstenv
push
dec
sub
push
pop
mov
sbb
ret
pop
das
enter
dec
ins
in
xlat
ror
sbb
jle
jle
cmp
jl
leave
push
jmp
mov
jb
in
xor
cli
stc
xor
out
out
inc
aad
jecxz
aad
fild
dec
inc
es
loope
push
mov
inc
aam
xor
pop
aad
jne
popa
mov
xchg
test
mov
icebp
inc
repz
fldenv
mov
pop
test
inc
inc
jmp
adc
jno
fimul
rol
test
ins
pop
jmp
loop
dec
loope
test
xlat
dec
adc
cmp
xor
inc
pop
xor
das
xchg
sub
push
mov
ret
dec
sub
sbb
sub
ins
aas
mov
add
mov
iret
mov
dec
movs
ds
mov
aas
out
adc
jb
mov
sbb
sahf
scas
dec
addr16
mov
adc
sbb
mov
js
je
mov
sub
arpl
cwde
adc
or
cmp
dec
test
std
or
or
ins
ret
loop
push
mov
pop
dec
or
push
(bad)
xlat
test
push
cmp
xchg
clc
push
xlat
arpl
sti
maxps
pushf
or
mov
loop
cmp
cmps
xchg
or
mov
or
sti
dec
lds
movs
retf
add
jns
js
mov
imul
das
test
jmp
test
mov
dec
dec
pop
mov
imul
pop
sbb
xor
add
scas
int3
jge
pop
jge
aad
push
push
adc
add
xchg
sub
jl
push
push
das
loope
inc
jb
and
int3
repz
inc
pop
jmp
push
cmovno
popa
add
(bad)
xchg
inc
mov
xchg
or
jmp
sub
or
mov
aas
mov
sti
test
and
xchg
lods
leave
(bad)
iret
push
cmp
lods
xor
cmp
in
mov
neg
(bad)
mov
daa
sbb
test
or
stc
push
mov
fld
mov
push
mov
ror
in
push
fwait
test
fdiv
out
pop
dec
fisttp
mov
dec
add
mov
jns
icebp
mov
sub
movs
push
and
ret
mov
xchg
daa
pop
xor
bound
movs
sti
pop
in
lea
ds
adc
or
shr
sbb
sbb
or
mov
pop
not
push
jl
fxtract
fs
(bad)
pop
cmp
mov
xchg
mov
in
in
and
fisttp
ror
or
mov
rcl
push
call
xor
mov
pop
xchg
fnstsw
pop
int
cmp
test
sbb
aad
clc
fcmovnb
push
or
pop
pop
push
cmp
cmps
pop
and
xor
inc
hlt
cmp
jmp
jp
scas
sbb
cmp
push
pop
cmp
mov
in
stos
mov
cmc
dec
jbe
repnz
pop
pop
push
test
push
leave
mov
js
cmps
or
and
outs
mov
add
pop
and
adc
jno
out
call
sbb
cwde
out
lock
icebp
and
mov
sub
retf
add
push
les
mov
fbld
jecxz
inc
xchg
adc
mov
ret
mov
inc
(bad)
(bad)
and
pop
xchg
adc
ds
pop
sbb
imul
iret
add
movs
xor
mov
stos
push
sbb
mov
jle
clc
xor
test
or
xchg
sub
pop
adc
adc
ja
cmp
test
stos
mov
imul
xchg
pop
xchg
adc
pop
cmp
or
sti
cmp
adc
mov
push
(bad)
into
loope
mov
fwait
or
outs
dec
rcr
cdq
xlat
xor
mov
inc
sbb
add
loop
xor
inc
out
jmp
das
push
pop
mov
out
jne
push
fmul
movs
add
jbe
scas
mov
jae
mov
fcomp
adc
and
pop
nop
pop
sub
mov
sbb
mov
fidiv
cmp
and
fmul
pushf
jg
ret
out
adc
loopne
add
mov
pop
hlt
sahf
rol
movs
lahf
jge
ficomp
cwde
push
aaa
rol
adc
xor
stos
ret
dec
sub
fnstenv
xor
push
xchg
jge
shl
in
add
aam
mov
(bad)
jmp
add
adc
and
sti
stos
or
in
das
add
pop
mov
mov
ficom
xor
mov
jl
loope
loopne
add
in
pop
push
(bad)
mov
shl
xchg
and
push
and
jmp
out
fstp
xor
sub
add
adc
cmp
mov
add
retf
sub
jg
xchg
gs
imul
add
adc
jno
inc
push
imul
sbb
in
mov
rcr
xor
ror
cmp
clc
fistp
not
and
add
add
ins
stos
(bad)
mov
sbb
xlat
pusha
enter
cmp
inc
ins
mov
mov
into
push
and
outs
mov
imul
lods
mov
(bad)
out
aad
popa
test
and
ror
inc
xchg
xchg
je
scas
popf
loopne
xchg
xchg
mov
mov
pop
enter
js
inc
arpl
repz
sub
and
jns
xchg
sbb
cli
dec
cmp
cmps
jnp
loopne
push
fidiv
lds
in
cdq
push
sbb
mov
mov
jns
into
xor
or
mov
mov
and
dec
dec
pop
mov
lods
pushf
popa
dec
gs
jp
out
or
fisttp
inc
movs
pop
nop
jno
dec
cmp
imul
push
sbb
psrlq
test
jbe
fstp
ins
sar
cs
lds
popa
fwait
jb
movs
fstp
imul
cmps
cmp
call
outs
inc
je
ret
cli
out
icebp
cmc
cmp
(bad)
cld
dec
in
mov
mov
cs
adc
ret
jno
push
lahf
cmp
aaa
xchg
ja
js
rcl
lahf
add
ja
jbe
sbb
movq
je
xchg
fst
in
mov
jne
cld
inc
das
or
int
xor
rcr
addr16
in
imul
loop
jae
loopne
cmp
lods
inc
aad
pop
cmp
inc
add
outs
fs
sbb
jmp
fidivr
push
lods
fiadd
out
push
cdq
and
sbb
mov
lods
int
ret
or
push
jmp
xor
inc
adc
(bad)
shl
cmps
fwait
dec
jno
daa
lods
mov
cmp
fmul
xchg
movs
and
and
mov
outs
and
mov
int3
cmp
inc
add
sbb
mov
in
fwait
cs
sbb
sbb
push
ds
xor
push
sbb
loopne
mov
and
push
cvtpi2ps
cli
gs
call
lods
fwait
out
aaa
dec
pop
cmp
sub
jnp
mov
inc
pop
clc
loopne
push
xchg
cmp
dec
add
scas
data16
xor
scas
aaa
push
jp
clc
(bad)
and
xor
lods
sub
aam
ins
daa
out
add
cld
pop
test
xchg
push
cmp
mov
outs
inc
(bad)
out
mov
push
dec
repz
dec
call
cmp
lock
adc
out
cmps
sbb
fstp
(bad)
inc
jno
jge
add
mov
sub
xchg
sub
aas
fsub
das
pop
jmp
xor
sub
out
adc
lahf
mov
in
pop
pop
dec
inc
xor
mov
mov
jb
out
scas
push
shr
inc
imul
push
pushf
dec
nop
adc
pop
and
ss
ja
xchg
test
mov
jmp
mov
add
sub
cli
out
rol
and
fidivr
test
popa
pop
xor
inc
fidivr
jne
sti
cs
enter
int
addr16
jns
das
(bad)
hlt
xor
jb
aas
xor
push
lock
mov
vpsubb
(bad)
(bad)
out
mov
out
lods
fcomp
js
icebp
cdq
dec
pop
loop
es
pop
jbe
mov
sbb
and
cli
mov
sub
test
hlt
sbb
xchg
dec
lock
or
mov
cmp
sar
out
mov
cmp
call
dec
addr16
sti
mov
bound
push
int
mov
hlt
mov
sbb
sbb
into
cmps
xchg
lods
jne
mov
sub
test
cmp
add
jp
imul
mov
(bad)
lods
out
and
dec
les
sub
inc
leave
bound
add
aas
sub
push
ret
test
pop
int
in
mov
push
xchg
(bad)
mov
pop
mov
mov
in
into
sub
jno
out
xchg
jo
xor
loopne
sub
mov
xchg
and
shl
repz
pushf
arpl
aaa
out
adc
neg
mov
mov
dec
mov
fwait
sbb
fdivr
outs
popf
pusha
loop
push
movs
or
mov
(bad)
mov
add
iret
xchg
xchg
adc
add
mov
cmp
xchg
inc
fnstcw
rcl
sub
les
sbb
mov
(bad)
xlat
retf
fiadd
xor
lods
cmp
loop
jge
sbb
outs
mov
jge
sub
lods
cs
mov
inc
test
lds
mov
clc
fstp
fild
add
ins
add
lock
jge
cmp
mov
dec
xor
jns
loopne
mov
daa
cmp
sbb
cmps
daa
push
(bad)
rcl
pop
sbb
and
pop
push
or
mov
pop
push
aas
inc
or
out
das
cmp
iret
push
adc
imul
mov
pop
leave
dec
jecxz
or
mov
xchg
cmp
and
das
pop
push
pop
sbb
pushf
mov
pusha
and
xor
sbb
lds
test
jnp
xor
repnz
inc
push
mov
in
or
cwde
test
cmp
popf
mov
and
mov
lock
push
aad
push
xor
cmp
xchg
push
xchg
push
jnp
adc
mov
cmc
sbb
fwait
and
mov
push
pop
mov
sub
mov
mov
frstor
mov
pop
adc
(bad)
or
jo
inc
mov
ins
movs
aas
addr16
add
push
push
js
dec
mov
dec
sbb
add
sbb
xor
xor
ins
mov
sahf
push
loope
cmp
inc
and
xlat
sub
ret
lea
lock
inc
fmul
push
movs
stos
js
cs
inc
cmp
mov
in
sbb
or
push
push
xor
shr
cdq
cmps
fimul
loope
vunpcklps
xchg
test
pusha
fwait
or
lods
loope
inc
pop
sbb
jecxz
rep
dec
jns
lahf
mov
imul
and
sub
loope
addr16
into
sar
jecxz
dec
ret
cmp
sbb
repz
and
lahf
std
jle
mov
lods
(bad)
lods
leave
jbe
mov
arpl
jmp
xchg
or
in
or
aaa
lea
es
int3
fbstp
sbb
add
call
aad
or
adc
ins
daa
stc
push
fist
repz
gs
push
inc
pop
mov
cmp
popa
pop
inc
in
fisttp
xor
out
ja
adc
in
cdq
inc
fnstenv
lock
cmp
mov
imul
movs
mov
add
add
in
(bad)
mov
jmp
mov
adc
ins
pop
pop
adc
call
jl
loop
sar
mov
xchg
cmp
iret
mov
loope
(bad)
dec
mov
push
repz
dec
mov
xor
or
push
cmp
push
cmp
js
mov
mov
pop
add
dec
adc
xchg
js
shl
pop
repz
or
arpl
or
add
(bad)
scas
jae
push
sub
push
xchg
dec
(bad)
aam
lods
rcr
popf
mov
dec
xor
and
adc
push
add
rol
in
loopne
shl
dec
imul
mov
sbb
outs
rol
mov
sub
adc
pop
mov
mov
inc
(bad)
push
cmp
ret
imul
test
pop
or
int
outs
scas
add
icebp
lea
mov
int
xor
push
leave
pop
pop
sahf
ret
in
ret
xchg
mov
sbb
xchg
cmp
sbb
mov
dec
je
sub
test
lods
pop
stos
test
dec
push
jg
pop
push
stos
mov
aad
cli
sar
dec
in
adc
pop
ss
dec
mov
pop
xchg
das
sub
mov
inc
pop
inc
add
int3
inc
int3
call
gs
mov
call
xor
leave
lea
in
aam
loopne
sbb
jmp
lahf
push
ds
out
loope
mov
pop
mov
int
clc
addr16
xchg
mov
shl
xor
int
xor
jb
inc
jg
in
shr
lock
(bad)
pop
outs
data16
mov
inc
(bad)
jle
repz
int
inc
sbb
fcomp
lahf
ror
ret
cs
out
inc
or
mov
mov
rcl
punpcklbw
jle
(bad)
shl
add
cmp
pop
mov
je
lods
xor
pushf
inc
sbb
ins
and
jae
iret
xchg
aas
stc
out
hlt
loopne
mov
push
sbb
pop
cmp
adc
or
or
mov
pop
loop
test
add
imul
jg
pop
mov
addps
loopne
xchg
push
push
cmc
jno
mov
and
pmaxub
imul
pop
sub
inc
pop
dec
xor
jecxz
repz
(bad)
and
mov
and
adc
mov
mov
ds
std
lods
adc
loopne
xor
pushf
enter
xchg
xchg
adc
pop
mov
jl
out
fdivr
inc
adc
fdiv
loop
add
jne
push
retf
dec
test
outs
not
add
mov
pop
stc
adc
data16
jno
xor
cmp
and
and
icebp
pop
and
push
(bad)
fs
jnp
sbb
(bad)
(bad)
ins
xchg
cs
add
xchg
xor
push
cmp
mov
stc
xor
jecxz
clc
xor
mov
outs
xor
mov
iret
repnz
ror
fst
xchg
movs
lock
mov
hlt
int
ret
fld
mov
repz
cwde
and
aas
sbb
add
repnz
icebp
adc
cmp
mov
pop
stos
adc
ins
scas
jne
bound
call
and
test
scas
outs
jmp
mov
push
sub
inc
jp
jge
mov
cmps
jno
cmp
in
popa
jne
xor
xor
inc
cmp
and
mov
(bad)
adc
aam
(bad)
mov
arpl
pop
les
add
sbb
sbb
jmp
xchg
ins
xor
ret
xor
shl
dec
mov
push
add
or
xor
aad
xor
or
lahf
in
jae
inc
or
js
in
push
es
(bad)
pop
push
adc
pop
pop
aaa
arpl
inc
xchg
and
sbb
push
jp
xor
mov
jmp
jle
mov
dec
stos
lea
repz
arpl
outs
xchg
pop
ret
jmp
(bad)
adc
sbb
sbb
outs
push
nop
jne
xchg
mov
das
pop
sbb
fadd
add
shl
sti
cmp
cdq
clc
mov
adc
mov
cli
mov
mov
les
xchg
dec
jne
adc
jmp
cmp
wbinvd
je
cmp
cmp
mov
cwde
cli
jmp
xchg
push
stos
loope
sbb
cmp
test
jp
(bad)
xor
cli
add
in
sub
mov
out
adc
das
xor
shl
mov
mov
ins
jmp
jg
push
test
arpl
js
in
xor
out
das
push
adc
into
repnz
sub
repnz
mov
ret
ficom
jns
cmps
push
jo
jo
sub
sbb
fisubr
int3
fbstp
bound
mov
adc
inc
xchg
and
out
push
sbb
(bad)
or
xor
das
jp
rcr
cdq
test
sahf
sub
push
jmp
test
jo
int3
jae
jno
ficom
ins
ds
test
jno
int3
jmp
sub
push
cmp
inc
inc
mov
jl
dec
and
scas
rol
ror
daa
sbb
mov
shl
pushf
sbb
fwait
sub
fistp
lahf
mov
sbb
add
push
push
icebp
xchg
add
nop
loop
and
retf
out
out
retf
cmps
mov
sub
jb
mov
sub
mov
test
jnp
jb
(bad)
pop
clc
cli
sbb
hlt
mov
pop
pop
jmp
mov
push
jo
pop
push
pop
aad
fwait
stc
dec
sub
aad
lahf
add
in
xchg
xor
mov
loopne
push
movs
push
mov
jno
push
add
stc
push
fdivrp
out
xchg
push
xor
jle
sbb
dec
mov
push
pop
cmp
(bad)
ret
sub
pop
popa
sub
retf
jns
popa
ret
popf
movs
pop
mov
inc
adc
cmp
loop
in
iret
rcl
int3
push
sub
pop
rol
je
aaa
push
push
cmp
sbb
xor
push
mov
sbb
(bad)
adc
mov
push
xchg
or
sub
(bad)
fist
mov
mov
(bad)
sbb
or
xor
cmp
aas
pop
call
nop
pop
xchg
pop
mov
neg
push
(bad)
not
push
sbb
push
aam
adc
popf
pushf
mov
sbb
sbb
ret
mov
jnp
imul
arpl
call
mov
sub
into
ret
out
pushf
repz
rol
or
add
or
sub
sub
test
push
mov
xchg
rcr
or
sub
mov
pushf
sub
mov
dec
dec
mov
clc
mov
push
jmp
pop
test
inc
mov
xchg
call
dec
xchg
loop
sub
jmp
leave
xor
fbld
test
jnp
mov
fs
enter
jg
jnp
je
ret
jmp
jle
sbb
clc
mov
stos
(bad)
dec
and
xchg
pop
or
inc
ret
xchg
sar
mov
in
sbb
pop
scas
mov
add
aas
aaa
cmp
xor
call
stos
mov
push
cld
je
mov
jle
jp
cmp
gs
and
rol
add
in
or
mov
jg
mov
sub
retf
es
jbe
aas
test
pusha
pop
sbb
push
mov
mov
add
mov
icebp
or
test
xor
(bad)
call
ss
xchg
je
push
cmp
int3
add
lods
shr
stos
xor
ds
fcom
loope
mov
adc
adc
ss
mov
lock
cmp
stc
mov
push
dec
or
test
push
sbb
dec
(bad)
cmp
and
addr16
jp
push
arpl
xor
or
add
cmps
jle
imul
(bad)
call
daa
or
dec
jg
sub
(bad)
fild
movs
test
pushf
loop
cmp
out
add
scas
movs
ror
hlt
mov
xchg
jo
jno
xor
icebp
cdq
retf
dec
adc
movs
sub
jns
mov
lea
mov
ret
ficomp
jae
rcr
loopne
and
sbb
sbb
jle
lds
hlt
mov
lahf
dec
test
iret
mov
call
xchg
jo
mov
sar
push
mov
ins
loopne
out
ins
rol
xchg
aam
or
xchg
pop
clc
dec
call
pop
sub
push
cmp
mov
popaw
mov
push
sbb
dec
fdivr
xchg
xor
pusha
rcr
xchg
dec
pop
movs
mov
or
nop
xor
sub
rol
icebp
(bad)
or
mov
mov
clc
add
je
movs
sbb
mov
js
mov
push
scas
and
push
data16
pop
scas
xlat
xchg
push
push
push
pop
sub
push
cld
test
in
jmp
xor
xchg
pop
push
pusha
ss
mov
icebp
fwait
ins
mov
inc
lahf
inc
push
outs
retf
sbb
dec
jmp
in
sbb
(bad)
fiadd
add
jb
lods
push
sub
out
cmc
cmp
lea
into
pusha
xor
test
test
mov
(bad)
adc
jae
push
mov
add
add
mov
sbb
cli
das
pop
pop
movs
stos
stos
enter
out
push
inc
adc
add
dec
inc
jae
imul
mov
std
xor
pop
mov
xor
movs
mov
rol
fidivr
dec
sub
inc
ins
mov
mov
xor
pop
leave
lea
ret
jle
sub
adc
in
xor
and
mov
adc
xchg
mov
add
inc
and
push
mov
stos
in
cld
iret
xchg
cmp
xchg
xchg
pop
sar
xor
fst
(bad)
push
dec
enter
shr
into
xlat
mov
inc
dec
into
(bad)
mov
xlat
xor
into
mov
or
sbb
leave
sub
cmp
std
xchg
inc
jle
xor
jnp
aaa
and
ficomp
pop
aad
test
ret
xchg
cmp
cmc
aam
sahf
sbb
test
test
test
mov
cmp
push
popf
pop
or
mov
pop
scas
je
add
cmps
ja
add
sub
aas
aaa
add
jno
hlt
mov
pop
mov
fwait
call
dec
jmp
addr16
jne
shr
cmp
pop
shrd
xor
cs
mov
aaa
push
jae
daa
adc
add
jb
sar
fist
cmp
push
ins
pop
retf
or
xchg
dec
inc
push
mov
xchg
cdq
jns
pop
xchg
stos
fadd
iret
iret
mov
xor
popa
xchg
(bad)
rol
mov
xchg
mov
ret
adc
jo
pop
fsub
mov
mov
fmul
xor
add
adc
ficom
ja
xor
loop
xor
push
fist
xchg
imul
das
outs
or
call
cmp
mov
xor
inc
add
push
dec
in
or
ror
xor
stos
push
pop
(bad)
aas
nop
pop
stc
and
scas
(bad)
add
or
jo
jnp
pop
xchg
data16
or
sbb
fnstcw
add
xchg
adc
cli
xchg
inc
jmp
pusha
mov
jo
lods
test
inc
rcl
mov
jmp
mov
push
fdivp
movs
rcl
xor
push
pop
sub
mov
divps
(bad)
jb
inc
cmps
call
test
dec
cmp
dec
mov
jmp
sbb
push
leave
xchg
cmp
push
mov
xor
sub
sub
mov
popa
cmp
nop
gs
dec
popa
xchg
push
rol
(bad)
lock
jae
mov
jecxz
and
push
adc
test
into
bound
mov
xor
push
(bad)
mov
sbb
mov
fld
add
icebp
mov
in
fld
leave
fmul
sbb
cmp
jmp
jns
jmp
jae
add
hlt
sti
dec
ss
dec
jecxz
dec
iret
dec
adc
sub
ficom
dec
rcr
cmps
imul
fisubr
in
jb
push
addr16
shl
push
jl
outs
stos
aaa
cmc
ins
scas
mov
xor
pop
movs
call
aam
cs
fiadd
inc
cwde
sub
test
or
mov
in
data16
xchg
mov
mov
mov
pop
inc
cs
mov
adc
(bad)
xchg
push
jp
dec
mov
(bad)
(bad)
ins
nop
mov
xchg
push
scas
hlt
les
lods
sub
loope
inc
xchg
add
mov
sub
adc
not
sub
dec
(bad)
dec
mov
or
out
bound
fisub
cmps
(bad)
movs
mov
out
(bad)
fimul
lock
cmc
mov
mov
test
cwde
daa
rcr
cmp
iret
lods
mov
adc
cmp
ins
xchg
add
int3
icebp
imul
test
or
mov
outs
imul
scas
mov
jle
retf
ins
sub
cmps
out
cld
call
cmps
inc
mov
jecxz
mov
xor
push
lods
mov
cs
in
iret
xchg
sbb
lahf
fmul
test
push
mov
pop
icebp
pop
sahf
jnp
cmp
pop
rol
cwde
hlt
dec
mov
popa
leave
xor
mov
pop
sbb
cmp
jmp
fs
jb
leave
fdivr
adc
inc
call
pusha
dec
xchg
sbb
jl
adc
aaa
call
or
neg
daa
(bad)
out
dec
mov
cmps
jmp
sbb
(bad)
ret
fisttp
mov
call
xor
fwait
bound
mov
push
inc
xor
mov
sub
jge
dec
mov
lds
push
jle
or
imul
add
inc
ret
jne
dec
add
push
(bad)
pop
mov
adc
popa
pop
push
push
mov
fimul
mov
push
add
cld
xchg
pusha
inc
loope
aam
in
dec
add
sbb
popf
aas
stc
ret
fstp
cmp
pop
movs
sub
and
jmp
mov
ins
leave
dec
loope
in
mov
xchg
adc
pop
jnp
out
xor
push
mov
cmp
imul
repz
sbb
loope
pop
mov
xor
pop
retf
inc
out
xor
leave
mov
jns
push
data16
(bad)
fsub
pop
leave
pop
ja
mov
xchg
or
(bad)
aam
call
mov
inc
xor
jbe
mov
xor
xor
jo
daa
and
repnz
push
and
cwde
push
sbb
mov
push
in
test
outs
inc
fadd
xor
dec
adc
mov
jb
sbb
mov
and
lds
fidivr
sahf
push
or
jp
imul
fwait
inc
add
xor
loopne
jne
int3
imul
lock
ss
std
push
fsubr
push
rol
sub
push
xchg
xchg
clc
xchg
push
lds
jo
sub
sub
mov
sbb
and
(bad)
clc
fs
orps
mov
mov
mov
out
cmp
mov
fist
in
jle
pop
(bad)
mov
(bad)
retf
imul
mov
fisubr
pusha
mov
jae
add
stos
mov
scas
mov
push
inc
mov
loope
jo
pushf
test
test
dec
fcmovnu
and
add
movnti
mov
ret
and
sbb
aaa
push
xchg
push
pop
lds
and
div
fiadd
sbb
mov
jo
cmp
(bad)
dec
jns
fwait
mov
xchg
adc
mov
adc
gs
in
lods
mov
ss
inc
aam
dec
cs
loop
and
loopne
jae
(bad)
stc
int
lods
movs
add
(bad)
jge
xchg
sub
pop
fistp
add
and
or
cmp
push
pop
repnz
rol
push
(bad)
mov
pop
mov
aaa
inc
adc
movs
int
pop
adc
cld
pop
rol
inc
fwait
je
out
int
mov
mov
jmp
xchg
movs
repnz
cs
outs
pop
pop
mov
(bad)
sub
pop
fs
push
or
cmps
push
pop
or
mov
xchg
push
inc
(bad)
lea
mov
add
mov
cmps
pusha
xlat
cmp
in
aam
jg
aam
bound
test
jl
push
in
dec
xchg
mov
and
mov
mov
retf
rcr
mov
dec
add
mov
leave
fidivr
xchg
dec
sub
(bad)
retf
outs
ret
or
push
inc
cs
pop
dec
stc
inc
sub
ss
dec
jb
xor
int3
stc
dec
movs
push
pusha
in
jl
dec
push
sub
std
pop
mov
(bad)
mov
sub
mov
mov
and
and
dec
pop
movs
pop
jl
leave
or
sub
cwde
mov
ja
xchg
mov
shl
sub
outs
inc
mov
stc
fwait
mov
mov
shr
jns
outs
mov
or
xor
sahf
pop
test
(bad)
ds
scas
(bad)
jne
push
scas
xchg
xchg
cmp
ret
inc
push
shr
cmp
in
pusha
and
push
sub
xor
les
xchg
push
sub
rcr
xor
cmps
jecxz
out
xlat
add
stos
xor
int3
in
pop
fdivr
sub
call
and
jecxz
shl
and
add
scas
push
jge
and
addr16
xor
rcl
retf
dec
or
div
mov
adc
lods
push
das
cmp
enter
push
dec
xor
xor
or
jle
dec
test
push
lock
or
cmp
push
jne
mov
addr16
add
mov
retf
and
out
iret
call
in
pop
mov
cmp
add
pop
push
xchg
push
mov
fwait
xchg
movs
bound
sub
sub
aad
mov
inc
push
pop
sbb
mov
sar
xchg
pusha
push
popf
out
add
es
jbe
std
xchg
jmp
cli
icebp
xor
cmp
out
sbb
push
pop
dec
push
or
aaa
std
sbb
inc
add
jbe
hlt
cmp
mov
mov
and
inc
jb
gs
and
jg
inc
stos
push
ret
mov
call
pop
retf
ror
imul
and
jmp
ficomp
std
stos
sub
rdmsr
xor
sbb
repnz
lahf
repnz
in
inc
dec
lock
mov
imul
iret
pop
lods
outs
lods
loope
cmp
adc
mov
pop
xchg
mov
push
xchg
jecxz
inc
mov
jb
fwait
xchg
cs
mov
fiadd
(bad)
sar
xchg
mov
add
fsub
lahf
not
ret
or
dec
scas
push
dec
mov
sbb
lods
cmp
or
inc
es
xchg
hlt
sub
sub
xchg
mov
inc
cmps
xchg
add
fmul
daa
push
xor
imul
or
bnd
mov
rol
sub
icebp
enter
mov
int
arpl
and
and
test
push
and
sub
lods
fwait
xchg
icebp
pop
cld
enter
in
fiadd
push
or
sti
add
mov
in
cli
pushf
sbb
xor
mov
mov
adc
mov
repz
mov
jmp
js
dec
setge
or
addr16
icebp
push
dec
sub
test
iret
adc
xchg
js
xchg
push
and
(bad)
icebp
addr16
jo
and
sti
(bad)
loop
push
or
lds
popf
add
rcr
(bad)
fld
loop
push
add
into
dec
inc
dec
nop
add
mov
jnp
popa
sub
cmp
or
and
mov
(bad)
jmp
movs
(bad)
push
ins
xchg
pop
jne
mov
jp
jecxz
mov
div
cmc
gs
mov
cdq
pop
mov
lea
bound
(bad)
movs
push
mov
jnp
out
call
icebp
popa
cld
xchg
mov
(bad)
out
cli
cmp
push
movs
ror
adc
out
pop
dec
add
mov
out
dec
or
retf
inc
mov
clc
mov
sub
mov
clc
ret
lods
mov
and
adc
int3
mov
inc
mov
(bad)
add
adc
xor
mov
sbb
mov
retf
(bad)
pop
push
inc
xchg
lock
xchg
out
mov
mov
add
mov
daa
mov
(bad)
push
pop
std
shl
xchg
sbb
ds
cmp
mov
cmp
inc
and
or
std
loope
cmp
test
xor
mov
dec
dec
push
aam
fisttp
pop
xor
aad
xchg
stos
stc
adc
(bad)
leave
in
test
mov
daa
outs
stc
lods
movs
addr16
hlt
push
es
push
test
adc
inc
push
push
outs
mov
xchg
inc
sar
imul
jnp
nop
xchg
je
and
cmp
sbb
int3
adc
call
mov
jbe
adc
es
mov
pop
(bad)
adc
clc
(bad)
mov
cmp
xchg
adc
dec
mov
push
or
pop
ds
jno
sahf
scas
jb
ret
shr
inc
xchg
cmps
out
jecxz
nop
xchg
dec
mov
lds
jae
lds
inc
jl
jp
inc
js
mov
pop
push
and
xchg
push
cs
xchg
loop
mov
out
mov
mov
or
mov
lods
mov
pop
inc
shl
movs
mov
arpl
arpl
stc
ror
pop
in
mov
mov
out
mov
test
(bad)
inc
or
cli
mov
pop
sbb
cmps
test
and
pop
cmc
inc
cmp
and
lahf
push
repz
jmp
fcomp
ret
pushf
enter
jg
and
imul
enter
int3
mov
pop
lahf
add
push
cwde
rcr
(bad)
test
lods
jns
popf
mov
mov
jle
push
mov
fs
xchg
xor
mov
mov
sahf
lock
gs
gs
mov
adc
mov
ins
xor
cmp
adc
jne
mov
aas
sub
sbb
fs
push
test
inc
call
sub
(bad)
out
adc
or
add
push
xor
add
mov
add
mov
stc
imul
mov
fwait
mov
ret
mov
rol
mov
int
mov
lock
lods
mov
push
cmp
cmp
test
enter
popa
repnz
mov
leave
xchg
sbb
rcl
push
xor
test
icebp
dec
sub
mov
and
addr16
mov
or
push
push
ins
xchg
lahf
movhps
stos
jns
rcr
enter
movs
outs
xchg
xor
add
or
mov
out
inc
imul
inc
call
xchg
add
aaa
es
fwait
mov
jp
push
xor
popa
sub
add
cdq
pusha
fimul
test
adc
shl
fbstp
cmps
adc
mov
fnstsw
iret
push
sbb
mov
sbb
shl
lods
fld
ja
lock
and
sbb
and
leave
cld
inc
dec
adc
jle
shl
inc
and
mov
pop
addr16
ins
sub
rcl
jne
jns
or
sub
sub
push
mov
test
out
jp
mov
xor
dec
mov
pop
out
xchg
(bad)
pushf
adc
jno
loope
mov
sbb
lods
enter
js
push
jge
std
inc
sub
push
jo
sub
push
sub
call
and
and
(bad)
ja
stos
xchg
lock
mov
pop
repnz
xchg
ss
add
push
push
sbb
aam
hlt
sbb
lods
push
dec
mov
imul
xor
lds
fisttp
xchg
cli
data16
sub
movs
mov
pop
outs
(bad)
out
cmp
cmc
data16
or
and
popa
outs
ret
mov
test
jmp
mov
push
sbb
cwde
jbe
xchg
std
cmp
inc
inc
jb
sti
or
cs
lahf
mov
mov
and
test
lds
mov
dec
pop
out
icebp
sub
mov
dec
inc
cmp
enter
bswap
sub
popa
push
das
dec
mov
pusha
mov
aam
lahf
scas
call
inc
mov
jp
push
int3
push
mov
mov
and
sar
call
rol
aad
ds
popf
mov
cmp
sti
mov
push
retf
jbe
xchg
out
and
pop
(bad)
mov
sbb
cmps
sti
adc
mov
pop
inc
xchg
push
(bad)
cs
or
xor
jl
jecxz
cmps
pop
adc
ficomp
test
add
fild
xor
(bad)
or
jp
jne
push
out
mov
pop
ficom
mov
leave
fild
mov
fcmovb
cmp
sbb
xchg
ja
and
xchg
sar
hlt
xchg
xlat
pop
out
pop
mov
ror
dec
out
je
xchg
xor
sbb
ins
mov
stos
mov
sbb
and
imul
into
add
in
neg
jle
mov
cli
xor
adc
std
dec
dec
mov
lea
call
mov
fwait
and
add
jmp
inc
push
inc
dec
int
inc
add
je
int3
fiadd
cmps
xchg
add
cdq
add
loope
ins
dec
fdivr
ins
inc
js
push
loopne
add
stc
push
add
push
pop
pop
aas
jge
pop
arpl
fstp
pop
mov
retf
or
pop
out
ds
retf
div
out
mov
jmp
shl
addr16
movs
test
and
int
ror
ins
and
push
aas
mov
xchg
adc
repnz
sahf
(bad)
xchg
inc
scas
mov
fcmovbe
pop
rcr
add
pop
call
sub
mov
fadd
test
inc
les
dec
jno
ds
pop
mov
ret
clc
jg
int3
xchg
ret
dec
xchg
jg
push
lds
mov
pusha
or
or
push
xor
push
fdiv
rcr
test
in
fs
mov
ss
adc
mov
jo
xor
dec
push
lahf
adc
jnp
rcr
jg
add
sub
je
adc
and
test
fwait
loope
into
adc
loopne
nop
pop
stos
cmp
dec
iret
inc
lods
adc
lock
mov
dec
dec
out
pop
ss
sbb
adc
adc
mov
mov
jecxz
xchg
sbb
xchg
inc
add
je
jbe
outs
ret
rcr
pop
mov
leave
pop
cmps
lahf
movs
mov
xchg
stc
in
mov
sub
cmp
lock
mov
dec
pop
mov
js
shr
arpl
push
bound
sub
sbb
(bad)
stos
popf
mov
out
push
pop
xchg
std
pop
sub
fstp
fnstcw
xchg
xchg
lock
retf
jno
mov
lock
xor
push
sub
mov
mov
adc
mov
pop
in
arpl
pop
xchg
xchg
dec
lahf
mov
(bad)
leave
cmps
shr
rol
fadd
mov
pop
(bad)
ret
and
outs
cmps
sbb
xor
mov
sahf
test
cmps
inc
jmp
sub
push
cmps
mov
aad
imul
jmp
adc
mov
(bad)
pop
loope
inc
(bad)
or
add
sbb
in
stos
or
adc
pop
mov
cmp
test
rcl
pop
ja
push
fimul
in
pop
xor
sub
(bad)
(bad)
cmp
in
mov
jg
popa
pop
pop
ja
retf
cmp
mov
(bad)
sbb
jb
xchg
or
add
inc
xchg
xchg
iret
js
push
fcomp
mov
fs
pop
mov
scas
(bad)
hlt
int
mov
dec
sar
jnp
push
pop
push
dec
mov
dec
jne
adc
jle
cmp
jl
adc
aad
jo
pop
loopne
add
mov
lods
xchg
xlat
add
or
nop
cmp
(bad)
cmp
ror
add
fwait
cwde
xor
inc
xchg
push
cmp
adc
adc
cmp
(bad)
clc
inc
add
retf
mov
mov
xor
test
addr16
inc
adc
cli
jle
movs
repz
xor
push
jmp
jb
ss
inc
mov
std
repnz
cmps
loopne
adc
lea
push
out
cmp
ins
loope
sub
mov
ret
in
imul
lods
inc
aad
sbb
add
add
in
es
jg
push
mov
std
ds
sub
mov
jl
sar
je
mov
adc
dec
jns
jge
fisub
std
push
mov
inc
ins
cmp
push
xchg
out
inc
cmp
push
xchg
ja
mov
fild
pop
je
xchg
test
xor
push
mov
xor
add
push
rcr
push
xor
fs
inc
fcom
call
pushf
sbb
fld
add
mov
aad
pusha
mov
dec
lods
add
hlt
jbe
dec
inc
or
(bad)
in
and
mov
push
sbb
and
or
fiadd
cmp
das
lods
cmps
adc
jo
pop
mov
cmps
push
movs
enter
mov
jl
scas
ret
mov
shr
ss
pop
ja
cmps
stos
jnp
add
cs
dec
movs
shl
imul
mov
outs
outs
jecxz
or
outs
stos
retf
mov
inc
mov
pop
sbb
hlt
push
les
xchg
lock
lods
add
scas
push
mov
or
aas
xchg
xchg
pop
call
mov
pusha
add
cld
or
inc
mov
xor
jns
cmp
add
mov
sbb
sbb
out
leave
push
add
cmp
dec
sbb
bnd
mov
jmp
cli
scas
add
xchg
les
jnp
loop
xor
and
ret
push
jo
(bad)
into
mov
xchg
mov
push
mov
add
add
pusha
mov
mov
test
mov
push
test
int
sub
mov
pop
sti
add
xchg
jle
xchg
add
push
dec
xor
hlt
movs
mov
daa
out
mov
pop
mov
mov
imul
sbb
and
aas
jb
or
imul
push
sbb
sahf
paddd
retf
cmps
loope
xchg
(bad)
in
aaa
or
aaa
sub
jb
aas
and
loope
xlat
dec
in
ret
fst
mov
lahf
xchg
jge
pop
enter
inc
aaa
xlat
cmps
lods
cmp
popa
mov
push
cmp
hlt
arpl
pop
es
sbb
dec
lock
mov
mov
fadd
jmp
xor
dec
aad
fldcw
xchg
rcl
stos
dec
aaa
xchg
frstpm(287
pop
jmp
mov
(bad)
test
pusha
(bad)
in
dec
push
imul
mov
aaa
jbe
movs
out
xchg
push
sbb
inc
enter
movs
pop
sub
shr
fs
iret
call
adc
sar
retf
push
jno
mov
test
jmp
ja
lods
clc
inc
into
pop
mov
aad
jge
inc
fs
xchg
je
cli
mov
inc
push
xchg
mov
les
bnd
fnstenv
frstor
icebp
cwde
xor
pop
fcom
mov
ss
or
addr16
daa
movs
call
lods
fdiv
adc
shl
ja
sbb
add
nop
stos
aas
or
jbe
adc
and
dec
aad
jno
scas
push
rcr
(bad)
fidiv
rol
inc
lods
add
dec
imul
push
(bad)
jecxz
fimul
hlt
das
push
or
fild
ret
loopne
dec
fsubp
pusha
cmp
push
dec
sahf
stos
outs
lods
dec
sbb
xor
ret
and
call
dec
pop
xchg
inc
aaa
das
jne
sub
add
das
inc
inc
jl
or
sub
retf
add
or
mov
mov
mov
fidivr
cmps
(bad)
mov
mov
cmp
popa
icebp
popa
aad
cmc
xor
xchg
xchg
xchg
stos
test
mov
jmp
sti
stos
div
push
mov
pop
sub
popf
mov
cmp
adc
dec
xor
fisttp
sub
inc
mov
pop
aam
sbb
retf
pop
pop
mov
mov
std
pop
scas
dec
inc
rcl
xchg
add
push
repnz
out
aad
shl
sahf
shr
mov
xor
push
sbb
or
jg
fbld
call
jge
inc
mov
pop
xchg
mov
jg
sbb
gs
clc
ja
push
jecxz
inc
and
jg
dec
xor
ret
mov
xlat
dec
xor
aam
sbb
mov
pop
(bad)
inc
xchg
sub
(bad)
pop
push
aas
push
gs
cmps
out
sub
or
in
push
inc
xchg
out
lods
inc
inc
adc
mov
dec
stc
aaa
fsub
popa
inc
cmp
mov
cli
jecxz
mov
dec
test
and
mov
xchg
cmp
lds
daa
sbb
call
mov
fs
pop
cdq
fnstsw
push
jge
out
push
aas
in
jb
fistp
mov
into
pop
mov
mov
mov
sbb
mov
and
hlt
mov
xchg
je
mov
jmp
adc
mov
test
adc
push
ss
lds
jg
mov
das
shl
pushf
test
adc
(bad)
call
jp
add
push
add
inc
ss
out
push
ret
cmp
dec
push
add
psubusb
loopne
dec
or
jmp
and
sbb
pop
mov
adc
loope
xchg
ins
jne
pop
dec
jno
sbb
in
popf
and
cmp
inc
inc
mov
sub
and
push
xchg
scas
(bad)
in
pop
adc
jg
iret
gs
mov
adc
jge
cmp
cmc
sbb
fadd
(bad)
sub
cs
and
or
xchg
jbe
xchg
jae
imul
adc
add
scas
pop
sub
pusha
test
push
(bad)
stos
jp
rol
ss
(bad)
test
fbstp
push
mov
and
push
pop
push
and
push
fs
mov
lods
xor
jmp
jg
cdq
cmp
sub
mov
jae
lahf
pop
shl
inc
and
jo
or
lds
sbb
xchg
in
pop
pop
test
inc
pusha
pop
fcomp
or
ror
dec
sub
les
sbb
ins
cmp
sub
sub
xor
and
call
(bad)
sahf
jp
mov
outs
pop
mov
pop
loopne
pop
or
jg
dec
inc
inc
mul
loopne
movs
mov
xor
fsubr
mov
arpl
jo
sbb
xor
aam
addr16
iret
outs
(bad)
and
out
mov
ror
loopne
(bad)
shr
or
ret
sub
out
mov
dec
push
add
xor
and
leave
iret
inc
pop
lea
fisttp
fnsave
mov
or
mov
pop
push
jg
pop
add
mov
dec
and
in
punpcklwd
jbe
stos
in
push
push
(bad)
sbb
out
daa
int3
into
add
or
scas
ins
jecxz
std
lds
scas
ins
cmc
dec
ror
xchg
inc
test
jp
jo
ficom
(bad)
cmp
aam
stos
ret
into
sbb
mov
jnp
add
fbstp
dec
loopne
mov
jnp
je
fs
dec
pop
fisubr
or
loop
loop
pop
adc
cmc
jb
fwait
adc
inc
or
jo
lds
mul
add
sub
mov
xor
ins
sbb
jno
ror
jecxz
dec
push
dec
enter
or
mov
add
add
inc
icebp
mov
jle
out
mov
mov
fistp
lock
neg
jg
jp
jo
sbb
xchg
jecxz
pushf
dec
pop
das
pop
pop
jmp
push
call
sti
js
adc
push
in
sub
cmp
xchg
xchg
inc
and
pop
and
mov
into
test
(bad)
fst
cmp
inc
into
cmp
jne
mov
fadd
ds
(bad)
mov
dec
lahf
ja
add
pop
mov
dec
mov
ds
ss
dec
adc
push
int
jecxz
cmps
inc
or
xlat
out
jnp
pop
push
pop
jno
xchg
sbb
jecxz
xor
call
xchg
jne
dec
mov
dec
int3
and
mov
push
pop
xor
inc
shr
adc
test
sub
sub
test
cmp
cmps
movs
popa
ds
mov
adc
(bad)
or
add
xor
jecxz
shr
ja
jg
cmp
mov
mov
cmp
push
iret
cld
sub
cld
outs
outs
jl
mov
dec
hlt
jo
pop
sub
dec
jbe
pop
div
lods
bound
fadd
and
in
sti
movs
pop
push
test
mov
sbb
daa
jp
inc
adc
fadd
(bad)
or
rol
xor
(bad)
and
gs
xchg
mov
es
sbb
xlat
inc
inc
and
call
and
mov
loop
retf
movs
repz
push
arpl
gs
rol
repz
mov
push
jmp
fcom
sbb
aaa
sahf
inc
jg
dec
inc
mov
lods
fdiv
cmp
into
js
psubb
cli
(bad)
scas
nop
sub
fsubr
sbb
rcr
sbb
stos
lods
jb
movs
add
push
outs
xor
in
cmp
test
mov
mov
jmp
adc
pushf
push
mov
xor
fadd
sbb
or
ja
and
sbb
mov
aas
jae
mov
out
ja
lds
(bad)
int3
mov
les
fiadd
rol
(bad)
mov
jmp
fwait
loopne
xor
and
into
push
lods
xchg
xor
mov
jge
(bad)
sahf
jmp
pop
xchg
shl
sub
aad
aam
xchg
sti
mov
mov
aas
jl
fst
cs
not
movs
jecxz
imul
in
out
inc
ret
ins
imul
aad
mov
dec
jle
sbb
aad
push
loop
xor
arpl
lods
xchg
test
sub
mov
fwait
push
scas
or
shl
push
test
jle
ins
mov
jbe
ins
repz
aas
aas
cmp
(bad)
int
std
dec
gs
repnz
pop
or
dec
scas
mov
mov
(bad)
lods
test
cmp
push
shr
scas
sbb
xchg
je
(bad)
sbb
and
fptan
push
ins
lds
popf
mov
popf
jecxz
push
test
dec
mov
and
pop
outs
or
add
sub
ins
gs
imul
pop
jle
sbb
mov
ja
fdivrp
fwait
cli
dec
jl
pop
repz
mov
mov
pop
mov
mov
push
test
cmps
or
loope
movs
clc
sub
clc
xor
arpl
into
push
mov
(bad)
mov
mov
jg
mov
xchg
cmps
mov
aad
xchg
popa
push
xchg
les
(bad)
sti
cmp
rol
retf
test
fucomi
or
dec
gs
mov
inc
loopne
movs
or
mov
call
mov
cwde
lods
mov
push
mov
loope
cmp
mov
test
sub
sub
mov
jg
imul
jb
stos
shl
xor
sbb
jl
ds
cmp
mov
mov
inc
xchg
mov
jmp
jns
movs
es
in
mov
sti
fisub
add
mov
inc
adc
dec
shr
inc
dec
inc
mov
mov
add
aas
push
xchg
sti
or
aaa
movs
(bad)
adc
movs
adc
out
repnz
ins
(bad)
out
test
sbb
dec
xchg
push
jno
push
inc
push
jne
xor
push
scas
aad
les
retf
cwde
adc
stos
shl
stos
and
add
mov
mov
ja
xor
imul
mov
pop
sub
adc
popa
mov
or
shl
and
out
mov
cmc
mov
pop
in
or
test
outs
push
xchg
sbb
sti
jae
xor
adc
gs
jae
cwde
lods
sub
jecxz
dec
int
cmps
(bad)
sbb
rcl
or
clc
adc
jno
lea
inc
in
outs
scas
and
popa
xor
sti
push
jno
pop
or
ret
cmp
xor
hlt
ffreep
push
mov
adc
sbb
outs
stc
jns
sbb
mov
cs
mov
scas
inc
and
stos
cmp
stos
pop
inc
jecxz
xor
mov
xchg
dec
repnz
cmp
mov
aas
sub
lds
dec
retf
pushf
(bad)
mov
jecxz
outs
(bad)
jmp
mov
in
comiss
mov
scas
outs
sbb
pop
mov
aad
mov
xchg
ret
pop
sbb
and
push
jp
mov
and
xor
xor
cld
pop
movs
jae
dec
push
popa
pop
xor
out
and
ret
lock
or
stos
mov
dec
repz
add
in
fld
xchg
rcl
add
jg
jnp
aad
aas
xchg
add
jmp
ret
jbe
movs
fwait
inc
movs
mov
sbb
fsub
dec
sar
clc
lock
enter
clc
lds
lods
dec
jne
dec
enter
sub
sbb
inc
add
retf
in
jle
dec
js
aad
cmp
xchg
or
je
add
daa
jb
jnp
rcr
push
mov
inc
popa
add
sub
shr
lods
xchg
pop
sub
iret
mov
out
xchg
dec
or
or
das
das
pop
retf
inc
jbe
pop
dec
add
mov
retf
mov
ret
mov
sub
data16
dec
ret
popf
popw
in
popf
adc
mov
xor
call
pop
xor
add
jnp
jno
stos
sahf
push
adc
mov
dec
int3
cld
nop
sub
and
push
fild
dec
mov
mov
push
push
std
or
test
jne
mov
push
pop
jg
lahf
sti
xlat
fnop
xlat
or
addr16
out
pop
stos
jo
(bad)
xchg
mov
xchg
mov
push
xor
push
fiadd
xor
cmps
shl
xchg
push
pop
inc
adc
fs
mov
push
mov
lahf
cli
stc
jl
loopne
dec
loopne
stc
ds
jecxz
xlat
int
dec
ret
clc
inc
test
movs
jp
xor
jbe
mov
je
mov
or
int3
out
nop
push
inc
inc
fs
and
push
inc
sbb
push
xor
mov
lahf
add
sbb
push
dec
loop
(bad)
jp
mov
arpl
and
leave
push
jb
or
push
lds
push
xchg
add
std
enter
mov
iret
xchg
imul
outs
shl
in
jle
es
push
lods
mov
xchg
lods
push
jb
in
push
mov
bound
(bad)
xchg
out
add
jmp
in
cmp
sub
sub
mov
in
or
or
jl
and
mov
(bad)
int3
je
pop
sbb
push
ds
sbb
inc
xchg
or
adc
dec
sbb
sbb
mov
ins
ja
fimul
and
stos
lods
jp
fadd
rcl
lock
fadd
inc
xor
cmc
push
sbb
or
neg
inc
js
mov
adc
loop
sub
mov
mov
jbe
pop
push
add
cmp
mov
adc
sbb
cmps
lods
std
test
pop
sbb
or
xchg
dec
push
and
sti
xor
ja
iret
ret
popa
pop
jmp
jae
lock
mov
out
bound
push
call
dec
test
hlt
mov
aam
mov
inc
push
cmps
pusha
xchg
ja
inc
adc
(bad)
lods
int
retf
cdq
gs
dec
mov
push
cmc
jl
iret
enter
je
mov
fld
adc
add
jl
mov
loopne
es
ja
cmp
mov
cmps
fmul
push
jg
(bad)
adc
pop
ss
xor
mov
add
mov
mov
ds
les
dec
mov
jge
out
and
push
push
push
mov
retf
aaa
test
add
int
movs
stos
add
leave
push
xor
inc
cs
ret
imul
in
jno
push
adc
test
mov
or
adc
mov
leave
jg
cmp
push
jp
inc
lods
mov
cmp
clc
jae
dec
daa
shl
es
or
scas
cmp
xchg
adc
jmp
mov
dec
xchg
ins
xor
or
cmps
mov
pop
inc
imul
pop
mov
push
xlat
adc
lea
add
je
jmp
mov
ja
push
or
mov
jne
push
and
arpl
and
lock
jbe
pop
loope
pop
sahf
push
xchg
ror
test
test
aaa
mov
fst
mov
clc
cmp
jo
jl
sub
mov
(bad)
xor
adc
std
adc
and
dec
enter
cli
into
jle
aaa
cmp
dec
ins
dec
push
mov
mov
mov
scas
sub
sbb
repz
push
in
adc
repz
sbb
mov
call
in
fild
clc
cmp
mul
jp
or
inc
out
push
inc
pop
mov
cmc
mov
mov
les
imul
push
mov
inc
pushf
xlat
push
das
(bad)
mov
fild
and
cld
hlt
inc
dec
cwde
pop
bound
sbb
add
pop
pop
inc
leave
call
sub
jb
imul
and
sbb
and
jno
dec
jmp
and
in
ss
sbb
nop
(bad)
int
pushf
cmp
popf
rol
or
inc
call
lock
push
sub
fist
fld
scas
lds
mov
cmp
gs
xlat
inc
cld
test
cld
inc
xchg
xchg
das
xor
popf
lods
dec
ja
retf
loope
xchg
inc
fdiv
shl
mov
mov
stc
and
mov
pop
jp
imul
ret
jp
in
jns
dec
loopne
add
and
cmps
and
sub
data16
lods
fwait
dec
arpl
outs
mov
inc
pusha
movntq
inc
lock
ss
rol
(bad)
fisub
push
mov
ds
push
sub
mov
and
xor
dec
sti
push
popf
ins
jo
cmp
inc
mov
out
les
xchg
repz
addr16
inc
jbe
xchg
dec
cmp
mov
std
dec
jmp
xchg
std
in
sub
ins
fsubr
adc
repz
gs
out
ins
dec
int
retf
aas
fdivrp
(bad)
and
dec
push
push
jmp
jp
mov
and
fcom
lods
jecxz
sbb
sbb
xor
dec
add
sti
scas
mov
xchg
in
cli
or
adc
add
stos
xor
ins
pop
sbb
cmps
jg
cmp
push
lds
std
leave
popa
in
pop
aad
sub
add
(bad)
mov
or
mov
mov
sbb
ficom
jno
mov
sbb
icebp
mov
cmp
and
call
fidiv
test
xchg
icebp
and
data16
(bad)
fwait
dec
lock
xchg
icebp
aad
jns
sub
sbb
pop
jbe
aad
inc
lods
jmp
xchg
xchg
(bad)
enter
js
out
sub
dec
rcl
pop
mov
xchg
jge
mov
iret
retf
aas
fld
push
push
push
les
and
nop
out
shl
jne
jne
in
addr16
and
or
mov
push
jge
jle
jmp
loopne
outs
push
dec
mov
jbe
fld
gs
mov
inc
adc
es
int
jns
pop
ins
mov
stos
sub
mov
push
pop
jmp
mov
inc
push
dec
inc
push
push
or
push
push
ja
fadd
sub
or
pop
pop
xor
ja
stc
das
retf
mov
sbb
push
push
(bad)
push
push
int
xchg
jne
nop
pop
lahf
retf
fwait
jmp
movs
lods
in
adc
clc
or
dec
and
in
sub
xor
test
fiadd
mov
mov
test
mov
test
sub
dec
sub
xchg
movs
xchg
das
xor
jno
sub
push
add
pop
aam
pushf
sbb
or
in
inc
in
dec
or
ret
test
into
ins
les
mov
inc
ficom
mov
aas
ins
inc
and
xor
pushf
inc
fmul
push
xchg
mov
lods
jae
jno
dec
jg
xchg
ds
inc
(bad)
ds
in
and
aas
push
mov
push
stos
std
dec
jbe
and
ss
pop
mov
call
pop
iret
xor
(bad)
sbb
dec
(bad)
sbb
inc
xchg
nop
clc
push
add
dec
inc
cdq
and
mov
call
mov
imul
out
and
mov
das
push
adc
mov
stos
and
sahf
aam
int
mov
js
mov
hlt
mov
jbe
in
call
push
pop
push
rcl
jecxz
dec
adc
cmp
jne
movs
lahf
mov
mov
fnstcw
mov
mov
dec
ds
xor
xor
movs
jno
pop
jg
push
dec
mov
push
xchg
out
loop
cmp
fisub
and
cs
imul
iret
sbb
push
test
cmp
or
push
sub
cmp
xor
sbb
and
cmp
sub
mov
movs
test
push
ins
mov
adc
pop
loope
mov
xchg
ret
popf
jle
xchg
out
fst
sub
jg
in
sub
and
es
jle
mov
fcomp
jecxz
ret
add
mov
sub
or
jae
push
ror
sub
jno
pop
shr
cli
ret
dec
jns
bound
mov
sub
push
bound
xor
pop
jmp
and
out
sub
mov
pusha
mov
addr16
add
div
push
mov
cmps
sub
or
scas
pop
adc
or
in
pop
cmp
or
lds
nop
sbb
sbb
loopne
and
inc
rcl
ret
inc
shr
add
neg
xor
out
cdq
test
xchg
xchg
inc
cld
clc
mov
xchg
mov
mov
hlt
movs
in
pop
or
mov
imul
shl
cmps
mov
xor
aad
sar
std
imul
div
in
push
xchg
adc
(bad)
sub
push
mov
out
cmp
sahf
pop
sub
test
mov
fisttp
cmps
jno
(bad)
div
add
cli
gs
xchg
test
jmp
cwde
jb
xchg
mov
imul
adc
push
xchg
push
sbb
cli
xor
cmps
mov
sbb
push
lock
call
call
jge
(bad)
mov
sahf
stos
push
inc
out
into
mov
test
cmps
jae
ja
mov
shl
int3
mov
lods
ins
and
inc
nop
jne
push
aas
loop
pop
fcom
jl
jecxz
(bad)
das
push
into
stc
jmp
ins
mov
sbb
icebp
stos
pop
sbb
jg
(bad)
sub
pop
add
push
push
pop
call
and
xor
clc
adc
xor
or
ins
pusha
mov
cmp
pop
pop
mov
mov
jecxz
call
ds
loop
mov
push
cmp
rol
mov
or
xchg
out
test
and
mov
gs
bound
cmp
in
fwait
pop
inc
xor
lods
fs
cld
sub
test
(bad)
adc
mov
shr
jo
pop
aaa
in
in
sbb
popf
loope
int
xchg
xor
sbb
cld
scas
jmp
outs
mov
jmp
shr
leave
add
mov
retf
mov
imul
pusha
imul
mov
sbb
std
pop
(bad)
and
test
cdq
lods
shl
icebp
cmps
mov
and
jg
lods
ins
add
mov
rcl
hlt
xchg
mov
ds
and
mov
add
das
ins
test
mov
in
movs
xor
inc
mov
mov
jl
add
mov
in
or
add
sub
jge
jno
scas
ss
je
ja
mov
mov
mov
xor
dec
or
mov
push
outs
mov
sbb
cmp
or
sub
out
jge
es
push
pop
push
add
fs
mov
adc
push
mov
mov
jae
push
push
popf
cmp
fisub
push
scas
adc
pop
test
arpl
ret
outs
mov
fstp
and
fwait
or
fadd
sub
aad
push
mov
stos
mul
test
mov
push
xchg
or
rol
xor
aaa
pop
cmps
enter
push
outs
mov
xchg
(bad)
fcom
xchg
sbb
dec
pop
int
xor
ins
push
popa
and
push
(bad)
or
adc
arpl
jmp
sub
sbb
outs
jmp
fimul
dec
mov
fadd
add
mov
cmps
sahf
inc
pop
sti
or
les
pop
jmp
ret
mov
lahf
ds
mov
(bad)
cmc
mov
sbb
cmp
loop
fs
sub
and
lahf
int
sbb
out
pop
sar
sbb
mov
in
dec
int
push
cs
pop
(bad)
push
call
enter
(bad)
sbb
loope
ret
sub
mov
sbb
jmp
pop
mov
mov
lods
stos
mov
ror
xor
lock
repnz
xor
sti
mov
or
fcomp
push
fs
inc
xor
and
outs
in
nop
das
scas
adc
(bad)
loop
popf
sbb
cmps
aaa
mov
xchg
mov
loop
pop
lock
or
add
dec
lock
adc
xor
cmp
or
mov
rcr
mov
inc
jge
stos
into
sub
(bad)
fisubr
add
cmp
or
mov
test
or
pop
in
retf
shl
push
fistp
mov
jecxz
cwde
(bad)
out
fldpi
xchg
cmps
popf
cli
dec
xlat
fisub
push
(bad)
cdq
fwait
in
pop
mov
mov
pop
fst
test
ret
jb
sub
adc
add
sub
mov
cmp
ss
dec
inc
lods
mov
mov
test
push
xlat
jg
outs
ja
loop
fwait
mov
add
sbb
test
in
in
es
mov
sub
cmp
jb
mov
mov
xor
ja
in
fidivr
jnp
lock
popf
pop
jmp
jge
xchg
pusha
jge
inc
loope
mov
stos
int
mov
stos
push
inc
push
arpl
and
retf
adc
in
pop
mov
int
ds
ins
mov
xchg
xor
sbb
pushf
out
pop
adc
lahf
jae
movs
ret
pusha
cs
or
adc
mov
lods
movs
je
loopne
xchg
inc
adc
(bad)
jns
fwait
(bad)
or
gs
(bad)
pop
scas
mov
sar
rcr
sbb
add
call
adc
cld
or
pop
(bad)
mov
add
add
nop
xor
dec
inc
scas
mov
sbb
aam
inc
xor
inc
mov
inc
leave
in
or
cwde
cmp
add
repnz
and
push
sbb
and
mov
gs
pop
dec
(bad)
fiadd
push
mov
xchg
push
pop
push
fcom
inc
jbe
hlt
add
dec
inc
sbb
inc
cdq
neg
mov
push
mov
test
fst
xor
push
dec
xor
pop
mov
lods
aas
dec
jmp
iret
adc
das
adc
das
fnstsw
jns
mov
inc
ret
stc
fcmovbe
xor
cdq
mov
retf
test
or
(bad)
xchg
mov
leave
push
pop
pop
or
add
push
hlt
stos
jb
sub
xchg
cmps
ins
xlat
ror
sbb
xchg
or
sti
jo
sub
mov
sbb
xchg
sub
int3
pop
(bad)
aas
add
hlt
shl
out
lods
mov
xchg
jmp
dec
jae
in
jecxz
fld
ja
xchg
enter
mul
clc
test
fstp
cmps
sbb
pop
shl
xchg
adc
outs
in
in
xchg
sti
test
inc
or
mov
ss
popf
bound
and
sub
inc
cdq
pop
shr
adc
loope
imul
out
xlat
inc
fcmovnb
pop
dec
je
pushf
inc
and
push
push
int3
push
imul
pop
pop
xor
fstp
jnp
loopne
mov
clc
shl
stc
adc
or
xlat
mov
stos
test
jp
mov
popf
rol
aaa
dec
add
cmp
call
cs
fisubr
mov
jle
push
ret
pop
loopne
popf
mov
xchg
retf
or
push
cmp
xchg
shr
lock
pop
push
sub
pop
cmp
imul
push
mov
pop
dec
stos
mov
adc
cli
jb
fisub
push
fs
cmps
push
fstp
js
in
shr
mov
(bad)
jmp
jmp
inc
cmp
lea
inc
into
sub
clc
xor
push
pop
push
gs
pushf
sbb
xchg
adc
and
stos
cmp
mov
ins
dec
push
mov
xchg
xor
cmp
jae
jmp
mov
add
cli
jmp
sbb
aam
mov
pop
add
lods
retf
mov
cli
mov
mov
add
test
sub
push
sub
and
mov
dec
stos
sbb
xor
and
fmul
scas
jo
or
mov
test
mov
int
mul
inc
mov
iret
aaa
loop
push
push
mov
sub
xlat
lea
les
arpl
pop
ret
(bad)
or
xchg
cs
rcl
pushf
adc
(bad)
into
push
add
js
push
push
stos
loope
inc
dec
push
(bad)
in
jl
jmp
sub
sbb
mov
sbb
stos
and
push
(bad)
and
or
pop
je
pop
out
jno
xchg
test
jmp
or
jl
cs
es
es
sub
mov
sub
(bad)
jmp
ss
xchg
cli
mov
ret
mov
cmps
fidivr
cli
jo
jmp
ds
push
dec
movs
sbb
cmp
cmps
call
das
out
cli
popa
pop
fild
in
sbb
pusha
retf
sbb
sub
pop
cmp
jl
fimul
dec
push
jmp
add
sbb
test
xor
mov
loopne
mov
xlat
push
mov
dec
scas
(bad)
jmp
pop
call
(bad)
xor
aas
cmps
aas
add
push
jb
ficomp
mov
(bad)
jmp
in
push
ror
retf
mov
in
pop
mov
push
sbb
add
shl
cmp
jae
retf
int
imul
dec
mov
fdivp
mov
outs
jp
ins
in
adc
xor
out
and
sub
test
xchg
test
retf
pop
test
mov
pop
xchg
add
xchg
sti
dec
mov
sbb
adc
or
inc
and
ins
add
push
loop
jns
fwait
pushf
xor
xchg
std
sub
(bad)
and
ffreep
xor
add
dec
xor
sub
std
or
mov
xor
mov
pushf
sub
cmp
retf
mov
mov
imul
mov
(bad)
push
cwde
inc
jno
cmc
lock
pop
sub
or
xchg
cmp
sub
inc
lds
loope
jmp
cli
imul
nop
(bad)
cmc
outs
fdiv
(bad)
jp
outs
add
pop
or
jge
aaa
ret
out
xchg
and
mov
push
fdiv
retf
mov
push
hlt
dec
and
sub
push
add
and
and
pop
out
adc
mov
aas
sub
jmp
div
xor
les
cld
jg
std
pusha
push
sahf
lock
ret
xor
in
or
js
mov
mov
sbb
sub
imul
pop
jge
cmp
inc
cmp
cmc
mov
pop
mov
dec
jnp
mov
cmc
cwde
pop
jne
mov
out
bound
cmp
leave
mov
and
dec
leave
mov
iret
pop
xor
dec
outs
inc
push
sub
inc
pop
xchg
push
aad
cmps
ins
ds
mov
cmp
or
loopne
data16
fwait
retf
push
and
sub
inc
jns
mov
arpl
test
xor
sub
and
cmp
inc
jne
movs
or
and
inc
pop
pop
rcr
add
leave
jge
sub
dec
cmp
sub
das
(bad)
test
sub
ja
sbb
pop
cld
sar
das
sahf
test
mov
add
or
scas
sbb
(bad)
(bad)
mov
add
cmc
cmp
mov
push
arpl
xchg
inc
fld
inc
out
ja
lahf
ins
inc
sahf
sbb
mov
jmp
sbb
fsub
jae
mov
cmp
xor
xchg
repz
cmp
sub
sti
out
lahf
push
and
inc
(bad)
mov
pop
or
add
cmp
xor
mov
int3
push
fiadd
stos
push
in
mov
rcl
mov
icebp
call
push
jmp
pop
adc
inc
adc
push
cmp
xchg
jne
jle
jle
ret
in
pop
pop
or
jno
js
sbb
mov
sbb
shl
sar
cmps
int
ins
call
ficom
dec
(bad)
std
mov
push
fwait
push
mov
mov
loope
dec
out
stos
ins
popf
jecxz
sbb
gs
call
cmc
ins
ficomp
jge
push
fbld
jmp
cmps
sub
enter
je
jge
test
mov
inc
in
inc
in
and
xchg
rol
inc
inc
jge
test
je
(bad)
adc
mov
test
jne
jmp
sub
mov
imul
fadd
push
push
dec
mov
pop
cmp
cdq
mov
call
mov
and
add
push
dec
mov
cs
cmp
mov
adc
mov
xor
(bad)
idiv
ror
hlt
repz
pop
jecxz
xchg
mov
xchg
sbb
push
jl
lock
xor
loopne
dec
xor
ins
outs
test
arpl
jle
mov
cmps
daa
add
cmps
push
das
xor
cdq
cld
jmp
fst
shl
inc
dec
mov
loopne
dec
idiv
pop
loop
adc
fst
(bad)
or
jne
(bad)
in
or
in
jle
popa
(bad)
loop
pop
sahf
push
jg
pop
test
js
pop
push
stos
adc
dec
fdivr
pop
jle
mov
jbe
js
inc
stc
fdiv
pop
sub
push
mov
sub
neg
xor
(bad)
sbb
sub
cmps
mov
lods
aad
in
in
stc
rcl
mov
sub
xor
adc
push
scas
sbb
push
mov
fucomip
cld
cmp
(bad)
mov
jb
imul
inc
or
adc
je
add
hlt
call
lods
inc
xchg
xor
pop
cdq
sub
movs
mov
retf
mov
ret
call
mov
adc
push
into
in
pop
out
dec
das
iret
xchg
pop
push
test
push
mov
retf
adc
lock
retf
push
cmp
pop
xchg
pusha
imul
out
mov
sub
or
pop
and
rcr
repz
ret
popf
retf
adc
or
mov
popf
cmp
xlat
push
(bad)
mov
xor
or
test
dec
xchg
dec
dec
js
lods
jne
js
jmp
(bad)
dec
jb
cdq
stc
movs
push
cmc
push
fadd
enter
jecxz
push
jl
fisub
pop
retf
or
popa
dec
leave
dec
test
sti
mov
pop
mov
push
jl
into
adc
push
inc
cmp
push
aas
sahf
pop
mov
xchg
lahf
outs
idiv
jge
movs
jno
imul
das
pop
sbb
fistp
test
(bad)
sub
jp
mov
lods
adc
loopne
sbb
adc
js
inc
ins
lahf
mov
jb
jmp
out
add
(bad)
outs
xor
neg
iret
sahf
addr16
pop
xchg
stos
enter
jle
in
sub
cmp
(bad)
clc
cli
scas
call
jp
sub
jmp
and
iret
out
shl
mov
push
xchg
cmps
and
retf
shl
imul
pop
pop
shl
xor
dec
or
mov
xchg
lods
test
scas
jbe
dec
sub
bnd
les
int3
outs
loop
xchg
mov
movs
push
out
add
in
sub
and
dec
jmp
daa
out
leave
dec
mov
dec
movs
loope
xor
retf
movzx
pop
lds
xchg
daa
xchg
push
mov
ins
xor
call
lea
jns
cmp
pop
scas
fistp
loope
aaa
into
mov
pop
stos
jne
outs
push
test
dec
mov
js
or
mov
and
adc
jl
push
(bad)
sub
out
lods
xor
inc
fdivr
push
bound
(bad)
mov
dec
jb
jl
mov
mov
mov
push
call
retf
or
cmp
loopne
jnp
(bad)
sbb
xor
arpl
xchg
js
dec
inc
ret
jo
in
cmc
jle
fnstenv
cld
icebp
jbe
sbb
stos
push
repnz
dec
fld
sub
add
dec
dec
mov
inc
call
in
movs
xor
inc
imul
popa
call
in
das
mov
jmp
mov
mov
aaa
xor
mov
es
cli
mov
cmp
add
(bad)
fnstenv
push
out
sbb
mov
push
int
jle
push
pop
cmps
jbe
mov
stos
sbb
or
sysexit
pop
(bad)
dec
leave
inc
cmp
cdq
mov
cdq
jno
mov
call
lods
loop
and
repz
out
push
and
mov
xchg
mov
add
loop
sub
push
repz
pushf
outs
jg
lahf
stos
pop
inc
fmulp
ret
add
repnz
push
aad
shl
fcmovnu
jnp
pop
js
ficom
mov
jmp
pop
jnp
shl
add
movs
(bad)
push
pushf
adc
call
cmp
pushf
cmp
sbb
call
stos
jg
mov
xor
and
jmp
out
in
dec
(bad)
mov
out
xor
lods
(bad)
fs
daa
ret
pop
mov
outs
pop
stos
popa
daa
sub
pop
mov
push
xchg
outs
push
(bad)
mov
ins
jecxz
mov
sbb
inc
sub
test
sub
pop
ja
inc
mov
adc
test
rcl
(bad)
test
loop
mov
bound
adc
repnz
mov
xchg
cmp
lds
mov
and
test
pop
mov
dec
push
popa
jle
cmp
bound
pop
iret
jnp
cmp
sbb
sahf
dec
mov
nop
mov
outs
mov
fidiv
dec
gs
xor
and
push
out
lahf
scas
jecxz
inc
out
cmc
test
push
scas
test
in
and
mov
cmp
adc
ds
pop
outs
sti
lahf
add
fisubr
dec
fs
call
mov
out
sbb
cmp
cmc
push
inc
mov
ss
aam
mov
dec
pop
aaa
mov
(bad)
sti
out
div
mov
aam
mov
movs
mov
ret
inc
je
(bad)
sbb
xchg
mov
aam
test
lock
inc
jns
fwait
sub
(bad)
adc
stc
adc
movs
and
pop
imul
and
mov
sub
les
std
stos
les
enter
inc
sbb
scas
mov
out
mov
pop
jmp
mov
stos
sbb
push
pop
mov
pusha
pop
imul
in
add
in
mov
mul
frstor
jno
push
dec
mov
mov
mov
loope
xchg
cld
(bad)
jmp
pop
cmp
inc
jecxz
call
int
cmp
mov
and
stc
(bad)
cmp
sbb
cmc
pop
jmp
imul
xchg
and
and
add
xor
xchg
and
jae
fistp
rcr
test
fwait
sbb
jge
fcom
cdq
shr
div
cmp
push
inc
ins
xor
lds
jnp
push
frstor
inc
pop
jp
leave
pop
pop
neg
push
pop
or
add
addr16
add
jge
dec
ja
test
adc
pop
test
test
out
xor
push
or
mov
scas
fiadd
shl
int3
xchg
and
pop
sub
cld
adc
sub
mov
inc
sub
js
push
adc
mov
icebp
ss
cmps
push
loop
das
mov
or
mov
push
xor
push
xor
fs
jb
mov
mov
adc
pushf
mov
lods
xor
aam
jae
add
je
test
mov
fs
sbb
mov
mov
and
jmp
jecxz
mov
xor
push
mov
xchg
clc
or
push
clc
popf
mov
pop
clc
cmc
in
sbb
jmp
dec
or
bound
in
fs
or
adc
and
inc
inc
mov
or
xlat
or
jae
pushf
call
fnstsw
iret
fnsave
cmps
add
push
das
not
je
cmps
outs
cwde
adc
sub
cmp
scas
lea
push
sub
cli
push
inc
sub
pop
dec
and
add
push
mov
pop
push
jp
jmp
mov
dec
enter
jae
sbb
pop
pop
xchg
cmp
jp
loope
adc
cmps
loop
mov
call
ins
jne
imul
ins
xchg
push
push
(bad)
fcom
cmp
lea
nop
jno
int3
sbb
int
fs
or
fiadd
imul
mov
rol
pop
rcr
sti
not
retf
iret
imul
in
cmc
das
push
add
aam
dec
jnp
mov
es
xchg
rcl
sbb
add
push
xchg
pop
cmp
mov
jmp
mov
mov
inc
inc
jb
icebp
lock
jb
xor
mov
pop
leave
adc
dec
retf
pop
fs
inc
adc
dec
rcr
mov
(bad)
push
push
outs
and
mov
and
add
and
outs
(bad)
fnstcw
jg
pusha
arpl
push
adc
das
sub
mov
cli
jo
dec
(bad)
cmps
cli
test
inc
adc
cmp
idiv
jp
in
mov
sbb
fsubr
lds
adc
loopne
pop
dec
inc
jne
inc
repz
mov
fild
lods
xchg
outs
jb
add
inc
ret
jo
mov
dec
mov
xchg
cmps
add
mov
jmp
pop
stos
(bad)
sbb
pop
or
mov
jmp
or
sub
out
mov
jecxz
dec
into
adc
mov
cwde
dec
aas
les
push
fcomi
les
inc
int
push
jge
je
lahf
iret
and
(bad)
nop
jp
mov
imul
movs
inc
xchg
inc
in
shr
arpl
(bad)
loopne
pusha
bsr
jo
jne
sbb
fwait
out
stc
fcom
or
inc
retf
ss
retf
dec
and
cmc
cli
stos
in
imul
pop
cdq
sbb
sub
pop
rcr
call
fmul
js
repz
fcmovu
sub
rcl
cdq
adc
xchg
jo
jmp
je
sub
out
sub
cmp
test
xchg
and
retf
stos
stc
(bad)
jne
repnz
cmp
sub
push
int
sbb
and
icebp
sub
hlt
retf
out
cs
pop
and
bndstx
jmp
push
je
or
pushf
out
adc
fstp
aam
pop
(bad)
(bad)
and
stc
pusha
movs
movs
pop
pop
ins
fs
mov
or
mov
sub
mov
les
cli
cmp
fs
repnz
loop
in
dec
mov
(bad)
mov
jb
out
retf
pop
lea
mov
sbb
sbb
ret
jno
es
pop
fsub
jge
push
shl
adc
push
xchg
push
gs
(bad)
push
inc
shl
and
fnsave
mov
and
mov
movs
sub
inc
fadd
sbb
inc
loope
mov
int
mov
leave
push
(bad)
pop
out
xchg
test
adc
xor
rol
add
test
add
stc
lods
xlat
or
shr
or
not
neg
jecxz
add
dec
pop
aaa
cs
mov
dec
jge
xchg
mov
mov
(bad)
xchg
shl
push
xchg
sar
sub
add
fsubr
les
and
add
pop
call
dec
mov
popf
pushf
lods
mov
mov
popf
icebp
pop
scas
dec
jecxz
inc
sub
daa
test
mov
js
outs
movs
pop
mov
lea
stos
retf
into
jl
rol
mov
scas
cmp
rcl
push
inc
xchg
cs
dec
push
and
mov
xchg
rcl
mov
jecxz
push
scas
adc
fst
xchg
adc
daa
in
push
sub
pop
dec
dec
inc
popa
ret
fadd
test
ins
adc
dec
ins
popf
dec
push
nop
in
mov
jns
(bad)
imul
jbe
imul
pop
mov
sahf
cmps
adc
les
adc
retf
mov
and
push
inc
cmps
or
lock
inc
daa
test
in
(bad)
fistp
fild
loopne
hlt
aaa
fnstenv
data16
int
aas
cmp
sub
cli
jb
scas
pop
push
(bad)
pop
sbb
inc
iret
xchg
sub
sbb
cmp
pop
push
add
jge
loope
daa
inc
hlt
xchg
add
pop
aas
xor
sub
pop
inc
enter
mov
inc
imul
mov
sbb
xor
iret
cmp
nop
xor
sbb
xor
fucomip
and
or
mov
test
adc
rcl
sbb
ss
enter
xor
sbb
icebp
dec
call
mov
xor
and
pop
jne
ficomp
inc
sbb
out
lds
cmp
dec
inc
and
in
rep
setns
jo
rcr
leave
inc
push
push
push
icebp
mov
adc
bound
lock
push
out
xchg
and
cmp
repnz
out
leave
sti
test
cld
xor
xchg
cmp
cld
mov
arpl
ficomp
out
dec
fmul
ja
xchg
(bad)
daa
aad
popa
int3
imul
jne
icebp
inc
test
push
push
push
mov
and
dec
xlat
call
dec
cmps
cmp
mov
pop
ret
rol
not
cwde
sti
gs
mov
jle
js
jecxz
not
xlat
leave
js
and
push
cmp
shr
mov
mov
mov
ja
out
aas
out
outs
into
mov
repz
sub
sbb
mov
out
mov
int
test
sub
aad
dec
jge
inc
movs
pop
cmp
adc
pop
xor
out
mov
imul
dec
pusha
cli
add
jle
pop
jns
in
or
cmps
daa
fstp
jmp
xor
ins
imul
shr
retf
add
pop
fimul
(bad)
xchg
sub
jo
inc
cmp
std
test
push
pop
xchg
bound
cld
xchg
inc
ja
in
xor
aas
outs
cld
aam
push
xor
mov
imul
xchg
enter
in
out
push
bound
fisttp
and
dec
shl
mov
dec
ret
cmc
jns
cmp
inc
xchg
cld
and
cmps
cwde
in
jl
(bad)
mov
push
icebp
cmp
mov
loop
xlat
stos
(bad)
fadd
xchg
pop
adc
out
test
vmwrite
push
cmps
call
sbb
pop
ror
add
mov
iret
xor
hlt
js
pop
push
xor
aas
int3
jo
sbb
jmp
call
shr
push
rcr
aad
jp
ret
xor
mov
lds
stos
cdq
mov
out
test
push
ja
xor
and
jno
jns
xchg
mov
push
cli
out
dec
cmp
jmp
inc
mov
cmp
or
in
inc
sbb
mov
into
stos
icebp
mov
cmps
imul
iret
inc
jbe
aaa
dec
lods
mov
and
jmp
leave
push
mov
and
push
xlat
adc
or
jnp
mov
lahf
loope
dec
cmp
dec
aad
push
cmp
sub
ss
jl
(bad)
clc
and
sbb
loope
cmp
jmp
loopne
hlt
cmps
pop
shl
in
mov
das
div
or
fs
or
push
mov
or
into
mov
stos
mov
out
aad
loopne
jge
mov
sbb
pop
sub
shr
mov
loopne
das
jns
outs
out
aaa
sbb
je
lahf
lods
jmp
mov
xchg
push
xchg
inc
jnp
inc
push
and
ds
jmp
mov
test
cmp
mov
daa
xor
sbb
outs
shr
jp
adc
or
and
xor
add
mov
repnz
or
(bad)
or
movs
cmp
mov
jmp
mov
aad
ror
lods
xor
popf
jmp
dec
mov
dec
xchg
lods
mov
and
fldl2t
int3
ffree
mov
jl
or
adc
adc
mov
call
xchg
in
mov
xchg
fild
shl
rcr
sbb
retf
or
popf
inc
(bad)
and
test
xchg
or
ret
sti
not
mov
gs
mov
stc
(bad)
and
cmp
cmp
lea
fwait
or
cmp
adc
dec
jae
lahf
jo
jnp
pop
sbb
nop
add
shr
sub
mov
mov
xor
ja
je
stos
push
sub
mov
lods
cmp
ret
aas
xchg
fnsave
jmp
idiv
movs
cmp
sub
data16
xchg
jae
sti
mov
inc
hlt
pop
cmp
ss
fwait
add
fidiv
fild
aam
call
dec
push
es
mov
call
and
xchg
mov
sbb
mov
mov
push
pop
std
div
xchg
xchg
retf
mov
cwde
push
fcmovbe
cmp
iret
repnz
cmp
sbb
push
sar
xchg
pop
mov
or
xchg
lods
mov
mov
fnstenv
or
mov
mov
cmp
imul
xor
outs
ins
pop
enter
cmp
mov
pop
mov
pusha
cmp
dec
mov
xor
bound
and
cmc
adc
cwde
loopne
dec
add
out
popa
cmp
xchg
jns
ret
push
outs
mov
cmp
cmp
inc
fisubr
xchg
ret
push
add
cdq
adc
pop
xchg
clc
or
pop
xchg
je
fstp
cld
or
inc
pop
push
pop
add
or
or
scas
jb
mov
aam
xchg
push
pop
fidivr
xor
jnp
out
addr16
jecxz
call
push
out
and
or
xchg
push
xor
cmp
mov
and
xchg
mov
imul
mov
mov
pop
push
fsubr
add
push
push
test
xchg
ins
test
sbb
adc
std
mov
pusha
stos
push
jae
pop
mov
xor
div
push
mov
jp
mov
mov
sti
pop
int
push
push
(bad)
pop
fsubr
mov
xchg
movs
and
(bad)
out
cs
cmp
mov
daa
movs
pop
inc
in
adc
cmps
jl
movs
ins
(bad)
(bad)
inc
(bad)
pop
in
bound
data16
mov
fbld
(bad)
add
xor
xchg
or
add
gs
outs
pop
xchg
pop
sbb
fnstenv
inc
int
call
jno
jno
inc
mov
xor
or
sahf
jmp
inc
inc
push
call
shl
call
xchg
mov
pop
xlat
out
dec
or
push
lods
push
adc
stos
ret
mov
das
sbb
nop
cmp
adc
mov
or
in
addr16
sbb
daa
fiadd
adc
add
out
ja
jmp
outs
in
nop
adc
pusha
cld
dec
mov
dec
loope
test
imul
mov
leave
(bad)
lods
outs
jne
or
push
lods
jns
or
sbb
push
je
stc
mov
(bad)
aad
pop
xor
sbb
std
out
test
repz
int3
test
sbb
xor
test
les
mov
fldpi
lea
into
fidivr
mov
repnz
lods
xchg
xor
or
cmp
imul
push
jno
add
mov
mov
(bad)
repnz
mov
jl
mov
mov
fsub
(bad)
std
or
mov
enter
cmp
sbb
jle
add
or
mov
gs
push
mov
in
xor
dec
sbb
push
or
push
popf
jl
mov
xor
mov
loope
ds
and
mov
or
add
cwde
jb
push
jecxz
jmp
mov
mov
cdq
mul
and
xlat
dec
pushf
mov
aas
stc
mov
(bad)
jmp
ror
movs
and
fs
dec
sbb
rcr
pop
fdiv
cmp
lds
push
and
test
inc
popf
mov
rol
sub
cmp
hlt
lods
jmp
cmovnp
and
ins
test
adc
outs
test
inc
jp
jmp
fimul
push
pusha
mov
cmps
sub
nop
dec
mov
retf
mov
ficomp
mov
and
and
sar
in
aam
cmc
aaa
shl
mov
rol
jne
into
jb
mov
push
call
cdq
cld
dec
sub
cmp
les
mov
loope
sti
dec
lea
in
jge
les
lock
jmp
ret
lods
test
addr16
bound
mov
or
rcr
js
dec
(bad)
xor
mov
dec
into
mov
add
sahf
fs
mov
test
cmp
push
lods
jns
push
out
popf
aam
(bad)
outs
call
in
es
or
xchg
iret
lock
adc
pop
pop
and
adc
inc
in
adc
xor
or
int
dec
push
lock
xor
xor
add
shl
leave
ficomp
mov
jmp
push
aas
push
cmp
cdq
outs
jmp
sbb
sub
dec
shr
dec
add
int3
gs
scas
rcr
shl
jg
adc
call
or
mov
mov
add
lahf
xchg
mov
sbb
je
lds
mov
jae
pop
outs
sbb
retf
mov
sahf
mov
scas
imul
not
scas
or
jbe
inc
mov
mul
iret
dec
sbb
retf
dec
mov
idiv
jmp
adc
pusha
scas
call
jmp
iret
aas
cmc
add
clc
cmp
cmp
daa
icebp
or
rol
push
data16
jns
stos
add
and
mov
in
in
test
adc
das
xor
mov
xor
das
sbb
inc
neg
in
push
or
in
test
in
adc
pop
adc
cmps
fs
mov
mov
in
mov
daa
stos
cmp
sub
cs
sub
lods
js
xchg
xor
jecxz
cwde
and
sub
into
inc
dec
shl
int
inc
out
leave
push
mov
push
rep
rol
jae
and
sti
(bad)
fisttp
jo
ret
mov
jno
movs
add
lea
or
addr16
test
jg
int
sub
stos
pop
lahf
and
mov
sar
data16
inc
cwde
adc
xchg
push
jnp
aad
sahf
sub
xchg
(bad)
shr
fbld
push
add
fdivr
test
loope
test
cmp
adc
popa
dec
mov
cmp
mov
fisubr
mov
stos
pop
dec
ret
push
mov
jae
outs
dec
pop
inc
loop
nop
jno
lds
in
call
out
mov
xor
xchg
clc
ds
mov
int
xchg
clc
dec
cwde
sbb
xor
ret
push
dec
lea
xor
fcmovnu
into
stc
adc
xor
sti
fwait
aaa
mov
(bad)
cmp
and
inc
repnz
or
fidivr
push
mov
jle
ret
mov
push
pusha
xor
cmp
fimul
push
popf
out
xchg
mov
dec
les
sub
jae
stos
mov
and
ins
mov
lahf
mov
dec
pop
add
pop
stos
ret
cs
data16
sub
jnp
mov
mov
imul
mov
idiv
mov
ja
and
and
sbb
or
mov
ins
fs
mov
(bad)
mov
pop
xor
jae
aas
pop
sbb
push
cmp
and
call
test
fdivr
inc
adc
ret
sub
adc
stos
and
mov
inc
inc
cmp
jnp
call
jae
shl
and
dec
inc
or
aad
icebp
push
clc
test
lds
push
adc
(bad)
jae
test
jle
mov
xchg
in
push
or
jmp
outs
cmps
and
(bad)
out
ins
ins
xchg
out
fbld
pop
shl
into
ror
out
sbb
add
cmps
lods
dec
popf
(bad)
ins
rcl
xor
mov
fxch
ret
es
rep
pop
sbb
imul
jne
test
aas
sti
push
cmp
iret
outs
pop
jmp
ror
mov
mov
jno
pop
jecxz
hlt
sbb
jge
or
push
dec
jmp
ja
test
ins
mov
sbb
adc
ret
cmp
xor
pop
ja
mov
mov
test
clc
mov
es
test
sub
fxch
js
jle
jecxz
pop
test
pop
retf
fsubr
popa
lahf
inc
fisub
mov
in
pop
call
scas
sar
mov
fcomp
pop
ror
push
aas
sub
jl
pop
(bad)
rol
pushf
ret
clc
hlt
loopne
sbb
popf
mov
ror
inc
xor
(bad)
pushf
pop
sbb
push
mov
mov
mov
(bad)
jmp
mov
jg
stos
into
mov
iret
stos
xchg
or
sti
into
push
jp
add
sahf
jge
and
bound
push
xchg
imul
cmp
pusha
mov
sub
lea
cmp
jno
aas
sbb
or
or
jne
(bad)
clc
cmps
pop
add
idiv
lock
in
jmp
or
call
jmp
mov
stos
sbb
mov
jno
aad
dec
jns
push
xor
pop
movs
test
inc
push
outs
dec
imul
aaa
imul
mov
pop
inc
out
push
test
xchg
lds
imul
iret
adc
cld
cmp
sbb
pushf
div
dec
(bad)
sti
cmps
add
pusha
dec
cmp
cli
push
stos
cmps
sbb
outs
cli
sub
xchg
cmps
aad
mov
outs
fisub
data16
jno
jge
outs
jns
mov
popf
adc
push
out
dec
xchg
or
fisub
jo
mov
ret
sub
int
sub
lods
adc
ja
sub
(bad)
data16
jecxz
xchg
pop
popf
add
ror
inc
into
and
cmp
movs
retf
aaa
push
popf
mov
les
movs
push
sub
mov
inc
loop
mov
sub
movs
loope
call
js
mov
mov
pop
fbstp
fadd
icebp
or
mov
scas
cmp
inc
data16
inc
outs
push
xchg
cwde
add
add
(bad)
jl
movs
mov
adc
push
inc
int
iret
push
and
dec
sub
mov
inc
adc
cli
dec
mov
icebp
and
push
enter
mov
(bad)
(bad)
jb
xor
shr
xlat
in
rcl
mov
cmove
shr
mov
pusha
fild
push
pop
push
(bad)
aas
dec
mov
loop
imul
call
lods
inc
imul
jnp
fimul
das
push
and
fist
mov
js
or
jmp
xor
retf
pop
pop
test
popf
in
xchg
cmps
ficom
xchg
retf
loopne
out
ds
mov
loop
es
retf
pop
or
mov
push
arpl
inc
leave
mov
mov
jle
(bad)
fnstsw
test
xor
sbb
cmp
pop
xchg
int3
jne
dec
test
dec
add
sub
mov
inc
(bad)
push
shl
xor
mov
mov
js
push
push
inc
xchg
sbb
or
push
cmp
xchg
aas
test
cmp
rol
arpl
jmp
test
aad
jnp
mov
mov
retf
pushf
sub
cmps
mov
movs
js
xlat
(bad)
jno
push
mov
mov
mov
or
jnp
leave
mov
dec
cmp
test
in
sbb
adc
(bad)
loopne
mov
and
cmp
and
aaa
test
lahf
(bad)
shr
dec
cwde
jo
fdiv
push
push
ss
retf
ja
call
dec
out
fxam
pmulhuw
or
rcr
add
out
movs
jno
mov
pop
sar
cmps
cs
mov
mov
xor
cmc
xchg
data16
inc
cdq
mov
loop
lahf
sub
mul
or
shr
arpl
adc
cmp
(bad)
xor
es
retf
loope
lods
sub
cld
push
mov
aas
jp
sub
cwde
dec
xor
out
cwde
aam
adc
jae
pop
int3
aam
push
cmp
outs
mov
retf
cld
addr16
xor
push
les
cs
imul
dec
jmp
data16
(bad)
jmp
pop
test
outs
fistp
mov
inc
int3
stos
dec
xchg
into
mov
icebp
(bad)
cmp
cmps
dec
add
out
push
ror
arpl
sahf
test
rcl
scas
pop
xor
das
dec
icebp
and
pop
xchg
xchg
push
idiv
call
stos
hlt
gs
mov
adc
pop
shl
repz
es
aam
clc
mov
push
cmp
pop
and
clc
or
ss
mov
test
neg
mov
enter
cwde
mov
gs
push
data16
pop
rcr
pop
dec
jge
mov
int
imul
gs
fdivr
repnz
adc
(bad)
push
cmp
cli
test
sub
mov
xchg
call
pop
jns
ffreep
fcmove
mov
fsubr
out
(bad)
ret
sbb
jmp
cmps
and
dec
dec
mov
in
dec
xchg
xchg
scas
jae
(bad)
sub
lea
xchg
stos
popa
nop
fxch
or
push
adc
jbe
jecxz
cdq
jb
test
push
xor
ret
mov
pop
loopne
pop
pop
xchg
sub
dec
iret
mov
mov
and
ss
sub
push
pop
in
adc
mov
mov
cmp
and
outs
mov
or
(bad)
mov
out
daa
mov
fmul
ret
nop
inc
cmp
das
stos
into
jmp
fld
pop
(bad)
icebp
and
out
outs
xchg
xor
mov
cmp
push
xchg
xchg
popa
(bad)
and
lods
out
shl
outs
imul
pop
fcmovnu
and
push
adc
pop
repz
(bad)
mov
out
out
and
xor
dec
cwde
xor
jecxz
fwait
sti
dec
jno
pop
jne
mov
jo
lahf
adc
cld
mov
movs
into
mov
and
cmps
stos
push
not
iret
sti
add
mov
repz
push
in
ret
int3
jae
retf
clc
jne
movs
xchg
mov
mov
jmp
ror
and
lods
sub
or
(bad)
into
ins
fwait
jo
and
mov
dec
inc
(bad)
(bad)
jecxz
adc
out
rcl
rol
js
mul
js
mov
shr
dec
mov
or
ret
push
pop
clc
cmc
pop
add
pop
push
cmps
mov
dec
mov
adc
mov
xchg
(bad)
retf
retf
inc
dec
mov
rcr
xor
std
sub
dec
test
adc
push
cmp
xor
les
ss
or
mov
pop
xchg
mov
stc
sahf
(bad)
shl
outs
dec
sub
and
mov
mov
mov
sbb
push
fwait
xchg
cmp
xor
xchg
leave
dec
rol
(bad)
div
pushf
ss
fistp
or
sahf
dec
daa
lahf
mov
stos
cmp
and
mov
daa
pop
in
add
mov
add
jg
add
or
iret
in
mov
(bad)
push
mov
lds
aaa
lock
imul
das
push
lods
add
pop
or
ins
cmp
outs
cmps
nop
ficom
jge
adc
mov
and
sub
mov
jae
xor
sahf
(bad)
(bad)
dec
movs
xchg
adc
xor
fcomip
shl
push
jno
mov
ins
add
pusha
out
mov
dec
adc
(bad)
xor
int3
inc
jno
(bad)
dec
push
shr
ins
scas
xchg
adc
xchg
push
mov
jmp
cdq
jo
sti
cdq
push
jmp
adc
dec
lock
add
dec
adc
div
out
sbb
push
out
out
imul
arpl
ret
lock
pop
push
mov
add
dec
fist
and
and
test
sbb
jmp
push
push
out
nop
pop
jge
test
es
mov
mov
pop
test
cli
xor
push
jmp
and
xchg
loopne
(bad)
cmp
add
xlat
das
lods
mov
jae
in
retf
(bad)
mov
stos
cmps
jne
xchg
ret
shr
push
call
js
xor
je
push
and
mov
xchg
(bad)
lods
test
retf
ret
adc
mov
xchg
not
test
loope
adc
into
push
xchg
mov
cs
loope
or
jg
push
out
out
pop
xchg
xchg
mul
(bad)
mov
sub
(bad)
cdq
mov
cmp
repnz
or
mov
pop
cmps
cmc
sub
dec
xchg
adc
aas
mov
jp
or
dec
lds
arpl
(bad)
mov
add
mov
xchg
xchg
(bad)
sbb
(bad)
dec
pop
in
stc
ror
dec
mov
pop
mov
sub
iret
pop
or
retf
ret
lock
or
fcomp
jno
outs
mov
mov
dec
sbb
test
or
popa
cmp
ret
in
hlt
push
jl
loopne
mov
add
jmp
and
xchg
sti
outs
dec
fadd
pusha
(bad)
or
out
test
mov
inc
ins
mov
xor
(bad)
push
mov
xor
xchg
lods
(bad)
inc
enter
popf
div
into
cli
fnsave
repz
and
cmp
inc
in
cmc
cmp
adc
hlt
fwait
mov
mov
(bad)
call
inc
xchg
(bad)
lods
cmps
inc
cli
in
retf
pop
sbb
shl
add
xchg
(bad)
retf
mov
cli
dec
fwait
lea
xrelease
test
xor
int3
stc
jmp
pop
mov
int
mov
cmp
test
bound
fisub
pop
leave
loopne
add
mov
xor
int
call
shl
jnp
push
(bad)
and
sub
lahf
dec
les
lods
in
push
rcr
push
repz
mov
jae
data16
addr16
inc
out
(bad)
fidivr
xchg
movs
mov
adc
enter
jbe
pop
and
jmp
scas
and
dec
loope
pop
cmc
(bad)
inc
jge
mov
leave
xchg
fimul
test
jno
adc
and
jae
fsub
mov
call
popf
sti
addr16
into
pop
adc
cld
sub
xlat
xchg
push
xchg
or
mov
test
xchg
call
jns
clc
(bad)
cmps
xchg
cmovno
dec
inc
sub
js
adc
sub
sar
cwde
push
push
adc
pop
jle
int3
ins
fwait
shl
(bad)
out
or
test
popf
push
std
sub
std
cwde
mov
in
xchg
mov
mov
fdivr
fistp
or
loopne
pop
int
(bad)
jecxz
popf
loop
xchg
push
push
cmp
cmp
mov
fisttp
pushf
in
aad
faddp
cld
or
mov
fsub
jb
and
js
cmp
movs
mov
out
in
scas
loope
cmp
and
nop
(bad)
sbb
inc
pop
inc
dec
add
push
jmp
or
xchg
jmp
sub
ins
lds
imul
and
(bad)
cmp
cmp
cmc
mov
int3
cwde
cmp
cmp
out
jmp
lock
jmp
cs
addr16
clc
inc
outs
add
lds
inc
leave
mov
cmp
push
daa
pop
adc
jg
mov
pushf
test
adc
push
cs
xlat
push
add
test
stos
jmp
xchg
adc
sbb
jp
cdq
or
mov
stc
nop
clc
pop
sub
jp
push
add
call
es
mov
imul
and
or
xchg
jnp
pop
std
pushf
or
iret
outs
add
push
push
xor
popa
adc
sub
js
stc
cwde
es
je
pop
adc
arpl
jmp
movs
cdq
outs
loop
xor
adc
loopne
adc
(bad)
addr16
dec
xchg
dec
inc
xor
jg
jl
mov
push
ins
xor
sbb
push
les
retf
ins
jl
stos
xchg
cmp
sbb
out
mov
cs
push
fldenv
fild
pusha
adc
dec
ja
mov
rcl
xchg
fist
sub
adc
scas
sar
cwde
sub
out
fimul
dec
and
movs
ja
mov
cmps
and
push
adc
movs
cmps
(bad)
out
xchg
push
add
xchg
into
adc
lds
cmp
mov
imul
scas
or
rol
aas
push
in
shl
xor
xor
movs
sub
shl
adc
add
das
sub
aas
xor
out
mov
fwait
loopne
ret
dec
scas
out
mov
push
mov
push
fld
xor
mov
adc
in
xchg
retf
ffreep
pop
mov
cmp
lock
sub
sub
sbb
sbb
gs
jo
cmps
and
ret
jbe
add
sbb
dec
sub
movs
jmp
jle
cs
mov
fcomp
xor
popf
pop
imul
int
push
in
fdivrp
push
fnstsw
mov
div
sub
hlt
cli
out
loop
jecxz
sahf
cmc
jmp
or
nop
xor
iret
cdq
xor
loope
xchg
loopne
or
push
(bad)
or
jg
jle
mov
jecxz
cld
pusha
dec
push
pusha
sbb
xchg
push
lds
popa
repz
xor
cmc
iret
lea
adc
xchg
xchg
push
dec
inc
push
sbb
xchg
fcmovb
mov
cmp
shr
fcom
jb
xchg
clc
cmps
js
cmp
and
adc
xor
push
fdivp
mov
pop
add
sbb
pop
pop
arpl
pop
sub
arpl
or
(bad)
dec
repz
sbb
(bad)
hlt
mov
enter
mov
sete
and
in
ret
mov
ins
adc
mov
int3
sti
imul
adc
push
cs
push
cmp
xchg
outs
ret
fnstcw
cli
cmp
mov
in
jno
ins
xor
jg
push
cmp
fadd
mov
pop
and
lldt
rcl
sbb
je
dec
dec
cwde
or
cdq
sub
cmp
outs
enter
pop
sub
mov
push
dec
push
inc
out
mov
out
and
cwde
or
inc
mov
out
or
sbb
imul
dec
push
sbb
dec
aaa
xchg
cli
aaa
dec
dec
sub
clc
sbb
xlat
sub
dec
fst
daa
shl
retf
sbb
add
cmp
inc
out
jmp
pop
enter
jae
hlt
es
aas
jne
pop
push
jmp
sbb
ds
rcr
fidivr
push
int
xchg
inc
mov
or
xchg
test
push
nop
fcmove
pop
dec
push
mov
mov
sbb
inc
(bad)
call
jmp
gs
xor
pusha
and
mov
stc
ja
ins
xor
xchg
cmp
push
loopne
sub
bound
mov
ret
sub
xchg
mov
dec
in
inc
nop
push
xchg
push
shl
inc
enter
adc
and
bound
add
ficom
outs
outs
outs
loope
stos
test
jbe
test
mov
push
int
(bad)
cdq
cmp
push
divps
ja
pushf
out
lods
fs
push
mov
mov
icebp
not
stos
lods
in
pop
cmp
ja
jecxz
ficom
dec
dec
or
cmp
fwait
out
loop
xor
add
enter
xchg
inc
mov
and
mov
aad
shl
ins
pop
xchg
es
data16
sbb
jl
mov
mov
mov
mov
lods
aam
mov
xlat
in
repz
or
out
cmps
xor
add
enter
mov
mov
test
push
jle
pop
jbe
jbe
push
push
pop
jmp
add
mov
in
xor
xor
(bad)
sub
pusha
aaa
aam
fldcw
adc
sar
jns
and
or
cmps
mov
jge
mov
xchg
pop
inc
out
fwait
xor
mov
sahf
daa
and
popf
mov
call
mov
cli
fst
jmp
fstp
jp
mov
cli
popa
cli
(bad)
and
mov
mov
sbb
aas
fstp
adc
call
xchg
out
mov
cmp
pop
jmp
call
out
xor
mov
ja
sbb
or
les
push
cwde
fnstcw
push
ja
ret
aam
xchg
int3
jge
rol
sbb
outs
retf
scas
cmps
loopne
call
jo
(bad)
and
movs
lds
clc
pusha
stos
imul
add
ja
push
jbe
inc
inc
pop
push
jno
sub
sbb
adc
daa
popa
and
sbb
cmp
inc
mov
push
sub
dec
push
fdiv
jge
pop
fidiv
test
retf
lods
test
jnp
rol
movs
out
adc
sbb
stc
push
jo
vmaxps
xor
ret
(bad)
adc
(bad)
das
aaa
xchg
pop
data16
mov
xchg
jp
(bad)
(bad)
in
fiadd
jno
loop
aaa
jns
mov
jae
ja
xor
shl
test
call
out
das
push
leave
(bad)
shl
in
addr16
mov
std
aaa
addr16
lock
movs
inc
or
or
scas
mov
jno
cwde
imul
adc
(bad)
fnstenv
adc
loopne
add
pop
(bad)
iret
adc
out
inc
inc
mov
jae
add
lods
aas
xchg
test
sti
xor
repz
loope
out
push
(bad)
inc
xor
ins
lock
test
loop
pop
sti
or
cmp
adc
mov
or
push
inc
inc
shl
inc
ret
stos
(bad)
mov
pop
lds
test
fucom
(bad)
xadd
(bad)
adc
loope
jne
pop
add
push
add
and
cmp
stos
push
sbb
fistp
cli
int3
stos
mov
xor
or
fcomp
and
mov
adc
mov
jne
xchg
xchg
inc
xchg
xchg
mov
jmp
lds
dec
xor
mov
xchg
push
sub
dec
and
stos
inc
pop
(bad)
and
pop
sub
fcom
sub
cld
ret
call
inc
scas
mov
cvtdq2ps
add
cmp
mov
sub
cdq
sbb
cmps
mov
cdq
in
add
imul
or
aad
mov
mov
xchg
mov
dec
inc
out
test
mov
sub
pop
mov
or
or
mov
out
mov
or
jbe
shl
into
int3
push
pop
retf
pop
dec
ror
nop
mov
(bad)
int3
adc
pop
lods
add
push
and
xor
jbe
ins
mov
fldcw
mov
cmp
sbb
mov
push
push
and
(bad)
cmp
fwait
jmp
and
xchg
push
loope
inc
mov
shl
adc
pop
lahf
xchg
cmp
mov
pop
icebp
jno
(bad)
retf
pop
mov
(bad)
repnz
das
xor
adc
adc
jmp
mov
adc
inc
aas
int3
movs
out
push
pop
sub
stos
sub
sub
aas
(bad)
cmp
and
bound
sbb
imul
cmp
sbb
and
(bad)
in
in
and
mov
test
inc
loope
fsub
cwde
push
mov
inc
paddb
cmp
fcomp
cmp
stos
jmp
lea
adc
mov
mov
push
jae
pop
xchg
and
out
ds
outs
cli
enter
int3
jo
inc
js
mov
and
xor
sub
pop
or
retf
pop
out
inc
cmp
ror
into
inc
jb
dec
rcr
in
nop
hlt
aas
pushf
and
mov
fild
or
sub
xlat
mov
retf
pop
std
movs
neg
(bad)
sahf
inc
inc
out
aaa
rcl
into
loope
cld
jns
mov
pushf
jbe
enter
mov
add
data16
xor
cmp
mov
pop
outs
xor
in
mov
add
ds
inc
pop
or
lock
int
outs
sub
mov
add
shl
test
cmp
sti
cmovb
jge
mov
lea
pop
adc
js
mov
adc
shl
dec
pop
cmps
inc
jo
popa
leave
pop
lock
xchg
mov
or
fldcw
cmp
gs
mov
int
outs
lods
fs
inc
and
push
or
pop
add
in
jecxz
das
stos
sbb
jmp
rol
aam
cmp
lods
clc
pop
outs
into
scas
jge
fld
jg
int
cmp
dec
add
mov
cmp
movs
and
fsubr
add
jns
sub
dec
mov
leave
clc
jae
jae
mov
jb
int3
sahf
shl
xchg
fcmovnb
mov
push
test
ss
pop
movs
nop
xor
fldenv
cmp
xchg
sbb
jmp
aam
arpl
repnz
popf
adc
cmp
icebp
jbe
mov
arpl
repz
add
mov
pusha
scas
(bad)
call
xchg
cdq
lds
dec
push
pusha
pop
cmp
test
ins
push
inc
sub
jno
dec
fst
call
adc
push
jae
inc
mov
jle
and
mov
sub
imul
mov
cmp
ins
dec
add
out
dec
jb
xchg
or
addr16
int
jecxz
jge
mov
(bad)
retf
pop
les
mov
jl
std
push
lock
inc
push
inc
(bad)
inc
retf
outs
gs
mov
mov
nop
jg
movs
ret
imul
fs
loopne
dec
xchg
or
(bad)
(bad)
test
stos
stos
add
fucomp
jns
mov
pop
or
mov
sub
mov
sub
and
std
daa
movs
push
dec
lds
jnp
add
push
add
inc
mov
jb
adc
and
pop
xor
nop
and
inc
out
call
stos
xchg
jle
lahf
push
rcl
xchg
int
mov
addr16
mov
mov
retf
cmp
or
call
jmp
push
push
xor
sbb
push
aaa
(bad)
pop
mov
jl
rcl
push
cmps
(bad)
add
pop
dec
lods
push
fwait
outs
nop
(bad)
fwait
cmp
mov
sub
fcomp
in
mov
sub
rcl
(bad)
jns
inc
cmp
mov
push
push
add
dec
or
add
push
test
fisttp
push
es
enter
sti
push
xor
lods
(bad)
aas
out
add
inc
dec
leave
mov
mov
sahf
cmp
and
xchg
lock
imul
arpl
mov
ret
lods
push
adc
push
xlat
(bad)
mov
or
dec
cmp
movs
sub
out
mov
ficomp
enter
js
push
into
cwde
cmp
push
bound
lods
jno
pop
mov
bound
xchg
test
mov
addr16
fisub
repnz
std
das
pop
arpl
mov
shl
mov
loope
dec
inc
push
test
retf
das
or
std
jo
xchg
jnp
gs
mov
mov
imul
jmp
cwde
dec
lea
jp
ins
jnp
pop
dec
movs
adc
je
jecxz
jge
inc
and
adc
jg
jmp
dec
aam
shr
mov
in
jl
loope
mov
cmp
pop
lds
sub
sbb
add
lock
and
sbb
cwde
mov
ficomp
mov
xlat
ret
pop
outs
in
fistp
gs
add
push
pushf
push
(bad)
clc
loopne
aam
pusha
inc
or
inc
mov
mov
mov
retf
lea
or
int3
push
pop
stc
int3
stos
test
cmp
mov
inc
nop
fcmovnbe
rcr
cmp
aam
sar
outs
test
ins
ret
and
(bad)
jmp
push
test
(bad)
jge
jg
add
aaa
fldenv
push
retf
cmp
je
fsubr
mov
xchg
push
adc
pop
jmp
and
xchg
popf
lods
jo
cmp
shl
arpl
xchg
push
pop
inc
mov
fiadd
lods
push
das
(bad)
int3
test
test
stos
push
lods
sub
push
call
iret
movs
rcl
retf
aam
sbb
cwde
in
in
pushf
leave
sbb
cld
scas
sahf
adc
push
imul
into
stos
aaa
into
mov
fild
or
(bad)
pop
rol
push
fsubr
jge
sub
retf
or
ja
sbb
stos
es
add
and
push
fs
icebp
movs
mov
in
pusha
es
and
xlat
or
jecxz
cmp
test
xchg
mov
inc
add
add
enter
in
cmc
jbe
mov
jno
repnz
jmp
sub
scas
fst
lock
mov
retf
inc
lods
mov
fbstp
dec
add
add
outs
adc
add
es
cmp
sahf
dec
xor
dec
jg
lock
mov
(bad)
cs
clc
in
sbb
inc
sbb
jnp
nop
test
pop
and
jae
and
inc
pop
push
test
add
jmp
std
sar
shr
jp
mov
push
sbb
aad
add
or
shl
xor
adc
nop
mov
(bad)
push
gs
inc
inc
or
rcr
into
sbb
xor
sbb
cmp
mov
int3
sub
cmp
in
outs
pextrw
das
popa
mov
pop
dec
retf
cwde
cmps
inc
inc
std
or
ret
add
jmp
add
test
cmc
loopne
arpl
fbld
mov
dec
xlat
mov
scas
out
scas
cld
out
jmp
xchg
mov
pop
aas
out
cmp
add
in
dec
pop
lock
xchg
push
dec
in
rcl
loop
xchg
pop
cmp
ret
into
sbb
ret
pop
retf
retf
push
pop
adc
xor
add
std
jle
xor
mov
jo
mov
cmps
mov
jmp
retf
xor
repz
and
cld
adc
inc
xor
sub
fwait
push
add
xchg
shr
fdecstp
adc
xchg
(bad)
fcom
test
jne
sbb
clc
mov
mov
xlat
push
jo
sub
in
and
jmp
push
xchg
fwait
das
inc
or
adc
call
mov
cli
push
xchg
test
mov
pop
fcmove
out
xchg
pop
repnz
xor
mov
cmp
fiadd
das
shr
mov
push
rcr
push
sbb
pusha
xchg
cmp
mov
cdq
je
pusha
adc
jnp
shr
push
sahf
mov
rcl
push
aaa
sub
xor
sub
pop
pusha
mov
(bad)
in
stos
pushw
(bad)
push
push
cmp
jno
push
scas
in
sbb
or
push
mov
cmp
clc
sub
cmp
inc
cmps
mov
mov
add
lock
sbb
xchg
add
lea
mov
(bad)
imul
pop
push
movs
loope
jae
adc
sti
and
mov
cmc
jmp
mov
stos
cwde
dec
dec
jae
jmp
jb
lds
add
pusha
bound
push
pushf
in
std
into
dec
js
add
mul
mov
or
xor
dec
jnp
pop
retf
mov
fwait
out
mov
pop
call
cmp
sbb
(bad)
xor
sbb
ins
xchg
popf
(bad)
idiv
repnz
ja
sahf
out
sub
inc
cmps
or
ja
inc
push
xor
inc
cwde
sub
adc
retf
js
cmp
and
mov
mov
aad
inc
pop
ficomp
push
scas
ja
xchg
test
cdq
mov
and
adc
rcl
and
push
ret
stos
jg
sahf
mov
enter
or
and
ds
mov
out
sub
jp
stc
ja
sub
inc
daa
frstor
and
push
sbb
sahf
jle
test
mov
int3
stos
jo
inc
mov
cmp
popa
push
popa
sbb
stos
jbe
aam
xchg
popa
std
mov
jmp
aam
ds
push
rcr
dec
lds
in
(bad)
mov
out
repz
lods
ins
pop
push
fistp
(bad)
loope
enter
sti
dec
mov
out
pop
mov
cmp
push
mov
mov
jl
dec
cli
sub
dec
xchg
aam
or
dec
cld
sti
or
mov
jbe
mov
xchg
pop
cli
mov
outs
mov
pop
mov
(bad)
xchg
(bad)
sar
push
or
and
add
push
repnz
out
fcomp
test
xchg
cld
retf
mov
inc
popa
dec
add
ret
sub
sub
sbb
push
test
xchg
xor
push
mov
adc
cmp
mov
sub
cmps
inc
test
jmp
pop
icebp
and
cmp
inc
fimul
xlat
loop
cmp
cmp
cmp
pop
iret
xor
ret
js
inc
rol
jb
cs
xor
cwde
mov
mov
(bad)
pop
mov
jge
outs
push
and
mov
ror
call
enter
cmp
shl
sbb
sub
push
test
std
or
cmp
retf
cmp
aaa
jbe
inc
inc
test
test
fst
cmp
dec
(bad)
hlt
stos
sbb
std
dec
clc
or
pop
movs
cmp
pop
popf
mov
jl
and
aaa
add
ja
xchg
and
in
add
fwait
ins
or
dec
scas
xor
mov
aaa
rcl
cmc
pop
cmp
pop
pop
sahf
cld
leave
jne
movs
cdq
adc
mov
cmps
sar
retf
add
cld
icebp
int3
iret
jl
call
jge
sub
addr16
xchg
cwde
jp
cmp
mov
jnp
call
mov
imul
adc
adc
cmp
sbb
push
mov
scas
pop
mov
popa
sub
mov
add
jnp
adc
or
test
fild
iret
cmp
xor
loopne
mov
and
aaa
mov
sahf
mov
es
mov
add
adc
mov
(bad)
dec
push
sar
nop
mov
dec
xchg
jle
(bad)
(bad)
mov
mul
scas
stos
es
pop
test
(bad)
outs
xchg
and
pop
and
jecxz
mov
push
jno
and
shl
jmp
sbb
mov
scas
push
or
xlat
or
cmp
xchg
pop
retf
and
dec
or
push
std
or
xchg
sub
mov
mov
fs
sub
dec
pop
push
sub
sar
and
stos
cmp
(bad)
in
xchg
add
or
pop
scas
out
sbb
xchg
and
inc
push
sbb
xchg
mov
cli
mov
rcl
test
popf
lea
fisub
xchg
and
adc
out
in
or
cmp
test
xor
int
loopne
test
mov
dec
sahf
mov
dec
dec
mov
enter
into
cmp
movs
mov
xchg
int
jnp
jns
jg
dec
xchg
jo
mov
retf
and
mov
adc
inc
add
xchg
add
add
xor
sub
(bad)
mov
call
les
push
ret
push
or
pop
dec
ret
out
cmp
nop
in
iret
add
mov
ficomp
cmps
int
test
push
fs
stos
mov
and
aam
push
pop
mov
jo
adc
test
fisttp
test
inc
or
lock
cmp
retf
and
mov
adc
mov
inc
add
add
sahf
cmp
mov
in
ds
jno
in
pop
jmp
retf
adc
daa
aad
or
and
push
mov
mov
push
and
jae
fsubr
bound
add
ins
inc
push
outs
fidivr
xor
xchg
cmp
mov
imul
inc
out
jae
into
into
cmps
push
sub
(bad)
or
mov
pushf
int
mov
rol
dec
push
hlt
aam
fdiv
mov
inc
lods
movs
adc
xchg
retf
loop
les
dec
arpl
ins
mov
scas
cwde
pusha
and
out
add
lahf
out
(bad)
ja
xchg
jae
sbb
cmp
pop
fnsave
xchg
mov
cli
xchg
dec
dec
mov
(bad)
jmp
push
popf
imul
paddusb
inc
sbb
push
out
xchg
xor
cwde
leave
mov
pop
sbb
pop
aas
mov
and
cmp
es
sub
mov
stc
inc
fiadd
shr
lahf
sbb
jmp
and
jbe
mov
bound
in
clc
jecxz
stos
xor
out
clc
inc
repz
out
mov
add
jmp
push
sub
add
rol
sub
mov
lds
xchg
lahf
std
fisttp
into
push
fiadd
rol
inc
loopne
aas
mov
popf
push
fsubr
mov
xchg
jmp
mov
neg
sub
inc
ficom
jmp
and
repz
stos
leave
addr16
das
fwait
dec
push
sar
scas
enter
mov
and
mov
and
sahf
xor
loop
ja
inc
into
mov
dec
pop
jecxz
outs
(bad)
cwde
int
stos
retf
ret
(bad)
mov
inc
pusha
sub
add
xchg
out
daa
pop
and
mov
cdq
inc
ficom
int3
cmp
jns
push
mov
ret
push
vpaddw
ret
dec
adc
jae
int3
add
mov
jbe
push
int
cmp
add
or
shl
mov
test
out
jnp
mov
add
mov
sub
in
ss
push
and
and
call
out
jge
mov
outs
(bad)
(bad)
out
or
int3
sbb
movq
inc
xor
add
loop
push
xor
mov
bnd
cmps
scas
jb
cmp
dec
pop
out
out
hlt
das
xor
dec
adc
jbe
pop
xchg
fst
(bad)
imul
pop
dec
ss
jnp
push
xchg
xlat
inc
stos
xchg
or
push
pop
in
ja
xlat
mov
and
push
dec
adc
inc
pop
pop
push
pop
xor
jg
gs
mov
dec
retf
mov
outs
mov
add
iret
ss
add
inc
cmps
mov
sbb
imul
pusha
xor
pop
mov
inc
loopne
cmp
dec
cdq
test
jle
int3
shr
jp
nop
pushf
lods
loopne
pmullw
imul
xchg
dec
imul
jmp
sub
push
in
pop
pop
arpl
add
jbe
add
mov
or
sub
cmp
out
lds
lahf
adc
fwait
stos
lahf
je
push
ror
cmps
or
out
xor
(bad)
frstor
lock
lds
pop
int
mov
inc
iret
jb
mov
arpl
mov
cmps
mov
pop
jbe
les
jle
or
fld
rcr
ins
jg
arpl
sbb
or
enter
cmp
(bad)
fwait
dec
add
shr
push
leave
test
adc
in
call
popa
push
push
jo
cmp
ret
push
cmc
pusha
ror
stos
xor
or
or
sbb
jae
imul
and
jbe
and
stos
inc
bound
popa
pop
mov
push
popa
out
xlat
inc
xchg
dec
cld
add
scas
cmps
cmp
inc
out
xchg
fs
cwde
pop
dec
jg
mov
adc
jmp
cwde
cwde
and
inc
inc
sbb
mov
setne
hlt
xor
dec
in
mov
mov
cli
xor
pop
jmp
cmp
inc
and
pop
dec
jne
cmp
(bad)
pop
out
xor
rcr
repnz
vprotd
mov
or
sbb
fcomp
stos
push
retf
stos
jmp
ja
cmps
dec
push
retf
outs
lods
cli
je
mov
xor
pop
gs
js
inc
test
mov
adc
xor
inc
jnp
(bad)
jle
dec
mov
jnp
sub
fmulp
push
sbb
mov
xchg
push
ds
mov
jnp
stos
pop
arpl
adc
fidiv
ds
(bad)
imul
cmp
pop
add
or
fimul
(bad)
mov
pop
(bad)
xchg
xchg
and
cmps
add
int3
leave
cwde
sbb
jb
or
ja
mov
or
ret
mov
jo
sbb
xchg
femms
adc
ds
or
pushf
xor
cmp
and
(bad)
xchg
push
mov
mov
icebp
jno
inc
pushf
bound
lea
mov
sbb
cmp
mov
sar
sbb
dec
jb
xchg
in
pushf
cmps
xchg
push
inc
jae
jne
mov
jmp
out
mov
mov
leave
scas
push
das
jae
and
loopne
retf
shl
xchg
not
repz
addr16
cmp
js
and
bound
sbb
daa
retf
pop
jbe
hlt
hlt
imul
in
jl
clc
adc
(bad)
aam
mov
dec
sbb
paddusb
mov
sti
add
ret
out
data16
in
dec
stos
icebp
ror
jne
or
inc
cmps
mov
sub
leave
aad
daa
rol
sub
(bad)
cdq
cmp
iret
mov
mov
iret
mov
dec
sbb
and
aas
ret
xor
dec
inc
test
aad
inc
mov
push
in
fidiv
and
inc
inc
scas
push
dec
sub
jo
lock
sbb
mov
sti
dec
repz
xor
sub
cmp
mov
imul
xor
sub
jbe
pop
movs
pop
in
ja
in
lods
xchg
push
push
cmp
pop
das
das
and
mov
scas
jecxz
scas
mov
add
test
dec
jne
(bad)
test
jae
(bad)
fisub
add
int
jns
push
pop
test
mov
mul
jmp
jno
mov
xor
jg
or
cli
stos
xchg
and
push
or
inc
cld
enter
sub
mov
jo
sub
sbb
sti
adc
outs
(bad)
rcr
cmp
push
jecxz
xchg
pushf
aam
mov
test
mov
aad
and
fidiv
push
enter
jns
loopne
mov
(bad)
in
fadd
sbb
shr
xchg
cli
or
or
fild
imul
sbb
add
and
popf
pop
adc
push
xlat
popf
mov
push
movs
out
dec
push
lea
mov
mov
out
xor
stc
lock
dec
rol
shl
jne
les
push
add
or
sub
sub
xchg
sub
scas
rcl
movs
es
popa
push
sub
lods
fisttp
test
mov
push
daa
dec
out
add
lds
dec
pop
jnp
jmp
call
ror
in
dec
int3
ins
adc
mov
dec
sbb
scas
out
test
lock
pushf
lock
adc
pop
repnz
pop
add
cli
lahf
sub
xlat
(bad)
les
mov
sbb
cmp
fcomp
out
fstp
inc
gs
cld
mov
fst
out
cmp
add
jle
cmp
dec
dec
sub
add
mov
xor
push
(bad)
lods
dec
gs
iret
push
adc
mov
lahf
dec
push
movs
pop
push
out
add
cmp
xor
clc
cmp
bound
jle
mov
adc
rcr
daa
push
jge
ror
mov
mov
push
push
xchg
stos
jae
(bad)
iret
movs
and
push
push
jne
cmp
(bad)
fsubr
test
clc
sahf
adc
int3
inc
aaa
(bad)
js
imul
pop
les
clc
retf
mov
inc
push
xor
add
stos
in
adc
mov
cmps
xchg
or
(bad)
lahf
stc
or
nop
xor
or
idiv
rol
std
jl
div
aam
sub
dec
test
nop
mov
(bad)
cld
out
aaa
fstp
sub
sub
and
xchg
nop
ins
in
aam
call
xor
sbb
imul
push
into
imul
shr
inc
mov
pop
cdq
inc
mov
dec
inc
mov
or
xor
dec
add
in
xor
ss
into
pop
jecxz
xchg
(bad)
enter
test
fisttp
or
or
repnz
xor
jmp
stos
gs
push
int
popf
inc
jae
ret
int
leave
sub
(bad)
cld
push
mov
es
ret
or
jno
jb
sbb
fnsave
call
int3
cmps
ret
fxch
sub
hlt
sbb
(bad)
iret
jno
mov
jns
add
dec
lods
xor
fcomp
loope
xor
dec
mov
pushf
int3
pop
cdq
fisttp
xchg
sbb
test
push
xor
in
and
stos
jl
push
int3
ins
gs
adc
lea
xchg
sub
in
pop
jge
sub
pop
fbld
shr
pop
dec
add
sti
mov
imul
arpl
push
add
das
test
mov
xor
int
sbb
retf
xor
cmp
push
inc
sub
dec
cli
cli
xchg
inc
xchg
and
mov
cmp
sub
jo
mov
stos
or
jmp
ins
xchg
mov
test
mov
adc
and
or
adc
movs
loop
sub
jmp
push
popf
jmp
xchg
or
aas
popa
xchg
movs
mov
(bad)
test
mov
jmp
bound
dec
cmp
stc
pusha
xchg
ds
cmp
sti
mov
mov
icebp
dec
sbb
sbb
cmp
mov
mov
pop
push
or
adc
dec
pop
inc
cmps
lea
out
rcl
pop
lea
in
inc
shl
stos
mov
popf
ror
mov
add
jo
mov
sbb
icebp
ss
ficomp
and
sbb
pop
xor
adc
fnstenv
sahf
lods
dec
dec
test
sbb
push
or
xchg
sub
inc
pop
aam
push
mov
mov
sbb
or
fmul
gs
or
add
call
pop
push
mov
sbb
enter
movs
bnd
cs
dec
sar
jb
pushf
pop
jmp
ret
add
div
dec
mov
call
push
jno
leave
or
mov
test
retf
pop
inc
mov
int
aas
or
js
shl
fs
mov
test
imul
jne
inc
lods
mov
xor
adc
icebp
or
or
and
cli
pusha
scas
fs
addr16
ins
dec
mov
fisttp
test
pop
lds
jne
leave
inc
jo
bound
or
add
inc
clc
ins
push
aam
out
ja
xchg
(bad)
stos
and
jl
push
(bad)
imul
sbb
rcr
mov
les
cmp
loope
or
and
dec
cmp
std
mov
cmp
dec
cmps
imul
sub
push
push
mov
push
cmps
test
add
call
in
ins
mov
inc
sbb
out
xabort
xchg
popa
stos
and
push
rcr
xor
jae
mov
lods
test
adc
mov
add
push
add
sti
dec
outs
pop
pop
scas
sbb
sbb
sbb
sbb
std
stos
mov
nop
cmps
div
ret
int
xor
jns
je
and
push
mov
mov
es
mov
mov
ficom
sbb
xchg
cmp
xor
bound
or
push
fidivr
pushf
(bad)
fild
jns
dec
shl
pop
add
std
xor
jge
inc
pop
scas
std
ins
shr
pop
bound
fwait
inc
out
mov
ror
xor
push
out
sub
outs
cmovno
(bad)
pop
inc
inc
mov
dec
xchg
push
cmp
stos
(bad)
jg
inc
mov
(bad)
sub
rcl
xor
int3
xchg
sbb
lds
fdivr
je
pop
adc
sub
dec
in
leave
jbe
test
and
dec
jns
sub
cwde
xchg
push
jle
add
inc
idiv
push
cmp
mov
xor
dec
mov
(bad)
push
ja
mov
adc
dec
inc
inc
jecxz
jae
daa
not
out
jge
xchg
retf
mov
(bad)
in
and
xchg
outs
push
jl
xchg
dec
lods
pop
push
js
int
lods
stos
test
jnp
pop
rol
cdq
sahf
shl
icebp
in
inc
dec
xchg
call
mov
lds
mov
int
xchg
jl
inc
mov
cdq
inc
lds
div
mov
fistp
push
cdq
arpl
hlt
xchg
outs
cwde
(bad)
mov
mov
ss
mul
popf
dec
mov
lahf
inc
push
(bad)
int3
ss
add
pop
cmp
cmc
xor
in
mov
mov
xabort
adc
out
or
lods
sbb
add
and
ins
add
pushf
mov
inc
cmps
das
dec
out
fldpi
lods
inc
pop
in
imul
outs
ins
(bad)
sub
fisubr
pop
cmp
sub
pop
hlt
jo
adc
cmp
loopne
retf
adc
cmc
ja
cmp
test
ins
int3
iret
jmp
movs
repnz
mov
mov
leave
out
jmp
push
(bad)
mov
pop
xchg
jo
jno
fs
call
mov
sub
xor
inc
pop
out
test
mov
inc
mov
inc
cmp
or
inc
pop
and
cwde
cmp
pop
fld
xlat
cmp
popa
and
dec
fsubr
movs
pop
scas
rcr
ret
and
mov
call
dec
fistp
push
dec
and
rol
ret
xlat
outs
pusha
sbb
hlt
in
pop
das
(bad)
dec
adc
pop
sub
add
mov
icebp
pop
popf
jecxz
dec
fisttp
jg
les
mov
addr16
cmp
jo
mov
ss
fwait
pusha
fmul
ficom
stos
inc
xor
push
mov
(bad)
or
dec
cs
jno
ins
xor
outs
add
and
sub
enter
mov
jmp
inc
or
push
out
adc
fwait
inc
push
loope
jns
push
repnz
cmp
dec
pop
xchg
cmp
ret
and
lods
jmp
and
dec
xor
inc
out
sahf
repz
(bad)
ins
mov
jb
lods
pop
xor
xor
lea
(bad)
dec
mov
pop
ret
sub
(bad)
hlt
stc
inc
lods
cmp
or
push
xor
xor
ins
scas
enter
dec
lock
or
and
xchg
retf
or
ror
dec
in
hlt
push
es
mov
imul
call
stc
jne
push
pusha
push
mov
hlt
les
sbb
pop
mov
jbe
add
dec
idiv
(bad)
call
fld
jg
cmp
movs
cmp
xor
mov
jp
ud1
popw
and
xchg
push
test
pop
test
mov
jmp
movs
das
add
xlat
test
dec
push
pop
mov
call
pop
sti
cs
movs
jmp
adc
outs
(bad)
adc
pop
or
iret
popf
cmc
loop
xchg
push
dec
btr
fidiv
mov
shl
lods
pop
mov
mov
inc
jge
xchg
call
popa
adc
inc
test
cmps
in
xchg
sbb
inc
mov
(bad)
dec
call
pop
adc
mov
push
mov
les
test
inc
pop
push
ja
dec
sbb
mov
cli
jne
neg
fdiv
out
imul
sub
ret
shl
xchg
add
fneni(8087
out
aas
xchg
cmp
pushf
jecxz
cmps
(bad)
test
push
stc
jmp
inc
add
je
imul
js
aad
and
push
adc
dec
pop
popf
fnsave
fisttp
jns
test
sub
mov
and
pop
mov
or
inc
stos
and
inc
and
outs
es
scas
push
dec
cmp
push
stc
jae
rcr
jge
ret
inc
cmp
outs
jns
mov
pop
dec
pop
scas
or
push
xchg
nop
sbb
or
ja
mov
xor
xchg
xor
sub
loop
xlat
ret
push
push
mov
jnp
in
js
sub
add
and
sbb
clc
fmul
repnz
mov
(bad)
out
adc
dec
xchg
sub
adc
push
clc
pop
or
fcomp
sub
adc
test
int3
cvtdq2ps
fnstenv
into
rcl
mov
out
dec
fimul
arpl
push
inc
gs
popf
sar
aad
cmc
pop
(bad)
fcomi
sub
lahf
mov
ds
jecxz
jmp
sub
mov
xor
cmps
movs
imul
loop
or
jmp
adc
mov
inc
(bad)
jns
add
addr16
out
mov
xchg
mov
inc
gs
addr16
pop
cmp
sar
dec
in
cs
xor
add
fsubr
ins
out
pop
add
xor
dec
cmp
cmp
pop
imul
push
or
inc
dec
repz
aad
mov
sub
lds
xchg
pop
inc
pop
add
fucomip
mul
mov
cmps
(bad)
xor
pmullw
cmp
cli
ja
repnz
repnz
push
jle
inc
in
sbb
ins
xchg
(bad)
and
cmps
bound
sbb
mov
aas
or
xor
mov
sub
ss
mov
xchg
adc
test
dec
push
imul
xchg
or
pop
dec
aad
(bad)
call
test
imul
repz
pop
(bad)
mov
jg
sub
xor
mov
rcl
ficom
cli
mov
jp
rol
mov
out
mov
les
cmp
xchg
lahf
xchg
inc
sbb
fisttp
mov
cmp
setne
push
jge
mov
sar
mov
and
out
jne
xchg
aas
into
jno
sbb
sbb
inc
lea
mov
adc
lahf
retf
pop
outs
push
cli
cwde
pop
lds
jmp
cmps
loope
ins
stos
std
cmps
ds
out
leave
and
in
mov
jecxz
fcmovu
icebp
jae
ficom
jo
int
sub
jns
test
xlat
xor
mov
cld
int3
in
adc
hlt
cmc
mov
sbb
jg
push
pop
sahf
push
mov
dec
mov
xchg
jb
sbb
push
gs
push
aas
in
icebp
stc
mov
inc
inc
jge
jae
mov
sahf
loope
inc
or
mov
outs
imul
test
xchg
bnd
pop
sbb
cmp
dec
push
(bad)
pop
ds
int3
fimul
icebp
pop
loop
icebp
fcomp
fiadd
and
lods
push
xor
inc
stos
std
dec
xchg
add
stos
mov
lods
mov
or
jmp
aam
fild
pop
jmp
xor
adc
mov
xlat
int3
out
xor
pop
sub
inc
pop
xchg
(bad)
stos
adc
xlat
ins
push
add
dec
mov
cs
pop
in
sha1msg2
das
push
shl
mov
push
mov
or
push
popf
repz
(bad)
mov
icebp
(bad)
dec
clc
jb
jg
mov
mov
aas
jmp
xchg
jns
cdq
and
and
jle
xchg
stos
movs
jnp
adc
jne
fisttp
dec
outs
jmp
bound
into
imul
sar
push
sub
mov
test
push
dec
inc
sbb
jl
ds
aad
div
imul
ret
popa
push
sub
sbb
xor
(bad)
or
mov
invd
sahf
movs
and
dec
lahf
(bad)
iret
(bad)
bound
or
cld
push
test
mov
sub
or
pop
adc
adc
and
xchg
xchg
shr
lods
push
leave
rol
call
inc
or
inc
fcmovne
je
push
mov
rcr
in
mov
push
mov
jo
jb
popa
aaa
pop
loopne
sti
daa
jge
pop
outs
pusha
in
(bad)
arpl
or
dec
mov
mov
test
out
pop
inc
les
push
lods
gs
fbld
scas
adc
movs
ins
in
gs
int3
mov
jns
jno
push
xchg
add
jmp
sub
add
jmp
inc
int3
mov
je
das
jae
call
test
or
xchg
dec
dec
cmp
and
stos
mov
outs
push
pop
std
xchg
(bad)
jmp
and
push
pop
mov
fiadd
mov
xor
dec
xchg
adc
cmp
es
xor
sbb
into
push
rcr
mov
aad
outs
jp
fsubr
cmps
in
dec
sti
scas
es
mov
ins
cmps
xlat
xchg
movs
popf
mov
mov
inc
jmp
in
popf
mov
xor
xlat
add
mov
inc
sbb
xor
shr
pusha
fadd
ins
enter
pop
retf
lods
jbe
div
push
retf
shl
add
cmc
or
imul
push
and
mov
jne
ds
mov
test
jp
dec
mov
adc
ins
pop
xchg
inc
or
dec
dec
pop
sbb
cmps
add
mov
dec
cmp
in
add
scas
sti
ss
shr
data16
push
addr16
mov
(bad)
fs
test
dec
ret
cli
hlt
outs
shl
es
xchg
mov
and
int
pop
repz
pop
jecxz
not
adc
stc
retf
loop
or
ret
movs
aas
sbb
out
cmp
mov
fcom
addr16
sbb
sub
ins
in
aas
lods
inc
scas
cs
adc
push
imul
pop
sbb
sub
mov
(bad)
(bad)
cmps
xchg
or
sub
outs
(bad)
shl
movs
out
daa
retf
xchg
in
test
ret
test
mov
mov
popa
sbb
jmp
cmp
pop
cmc
mov
bound
cmp
adc
movs
jl
fisttp
dec
cwde
icebp
rcl
mov
(bad)
dec
lds
xchg
ins
js
sbb
push
jecxz
call
mov
test
data16
popa
or
xchg
cmp
jno
das
idiv
sbb
fld
movs
jmp
daa
inc
ss
cmp
jo
xor
cmp
cld
les
(bad)
inc
call
or
mov
pop
xor
fimul
jnp
inc
aad
lods
cs
cld
rcr
add
daa
sbb
add
xchg
and
sub
xor
xchg
pushf
xchg
fwait
cmp
in
pusha
push
iret
inc
dec
add
cmc
call
mov
cmp
add
jnp
cdq
mov
jo
das
ja
pop
popa
test
sbb
(bad)
jns
mov
push
cdq
xor
add
or
pop
jnp
inc
pop
(bad)
fldcw
ins
clc
cli
dec
jl
and
mov
stos
icebp
(bad)
popf
mov
inc
cdq
xor
cmp
fst
dec
or
mov
push
dec
jg
ror
or
push
iret
adc
repz
inc
out
in
hlt
xchg
clc
pop
test
cmp
cmp
ins
out
cwde
or
fiadd
ret
enter
jno
adc
js
xor
xor
imul
adc
mov
ds
xchg
xchg
sub
out
fs
sbb
repz
out
imul
xchg
mov
ret
sbb
lds
aam
or
aaa
pop
stos
push
adc
(bad)
pop
and
adc
je
call
les
mov
adc
pop
call
mov
and
test
push
xor
add
add
xor
stos
mov
and
test
mov
add
mov
(bad)
stos
out
retf
push
cmps
popf
dec
adc
(bad)
xchg
dec
ret
leave
jns
shl
movs
jns
(bad)
inc
imul
push
push
sub
aas
mov
jae
leave
cmps
or
push
mov
aas
mov
jmp
push
inc
push
xor
xor
sbb
mov
call
movs
fs
mov
xor
retf
pop
mov
loopne
push
ror
int
add
mov
jl
and
or
push
sub
and
dec
daa
xchg
mov
and
clc
outs
lods
mov
pop
xchg
popf
mov
xor
add
xchg
lods
xor
imul
repz
and
clc
pop
cwde
push
mov
inc
pop
cmp
push
daa
aas
adc
xchg
call
and
shl
cmp
imul
mov
into
add
mov
jb
cwde
(bad)
xchg
cmc
sbb
mov
(bad)
outs
inc
xchg
in
das
cmp
push
mov
ins
xchg
mov
mov
mov
clc
aaa
pop
mov
pop
int3
mov
sbb
sahf
icebp
ficomp
or
fldcw
fadd
das
aas
cwde
mov
das
sbb
jmp
retf
retf
ja
ins
stos
call
cmp
jl
pop
add
add
ss
hlt
stos
(bad)
in
mov
scas
ror
pop
jle
xor
loop
or
add
xor
adc
popf
dec
xor
push
xchg
jge
mov
jns
sub
ss
leave
sub
arpl
pop
mov
bound
xchg
test
stc
sub
xor
mov
scas
sbb
push
xchg
adc
mov
or
mov
test
push
and
and
in
mov
mov
in
xchg
or
inc
sub
outs
mov
mov
jecxz
or
mov
dec
add
pop
mov
jecxz
mov
pop
add
push
or
cld
and
imul
(bad)
daa
ret
mov
out
daa
frstor
mov
inc
mov
cmp
cmp
iret
call
leave
icebp
(bad)
or
push
jno
idiv
es
cmps
popf
mov
dec
test
ror
adc
in
out
bndstx
or
sti
mov
int3
shr
test
jmp
mov
ret
mov
scas
repnz
mov
fwait
adc
arpl
push
xlat
cli
mov
add
fsubr
into
dec
ins
ret
inc
or
ret
xor
int3
loope
or
test
push
movs
nop
data16
stc
pop
popa
es
adc
add
jns
xor
in
jge
je
sub
cmp
adc
(bad)
clc
mov
lahf
and
(bad)
out
dec
fsubr
cwde
scas
lds
dec
loopne
pop
jae
out
mov
test
jns
sub
scas
stos
int3
(bad)
push
ror
xor
push
stc
sbb
push
sub
ret
push
jae
mov
repz
stos
xchg
iret
je
imul
fsub
jmp
cmp
mov
mov
or
test
lods
and
pop
mov
pop
aad
inc
pushf
stc
add
mov
imul
mov
sbb
lods
(bad)
jno
pop
cmovge
xchg
daa
mov
loop
std
xchg
adc
cmps
retf
call
or
clc
aam
call
sbb
aam
ss
xor
jb
clc
xchg
mov
(bad)
mov
bound
jns
mov
pop
push
ja
inc
das
pop
test
mov
test
cs
popf
call
popf
mov
push
sar
fst
jle
fs
test
adc
add
mov
or
fwait
dec
test
or
lds
adc
jmp
aad
jecxz
sar
enter
in
stc
adc
pop
inc
fstp
xor
je
imul
jae
jmp
out
dec
pop
xchg
xor
cmp
inc
jmp
ins
out
sbb
pusha
in
mov
dec
div
dec
cmp
inc
jmp
jae
xchg
and
or
mov
or
retf
add
inc
cwde
lods
out
repnz
loope
rcl
push
pop
mov
lds
lods
mov
jne
pop
imul
fdivr
call
neg
mov
mov
jg
es
clc
push
pop
dec
hlt
movs
cmp
addr16
adc
push
test
jns
mov
ins
clc
pop
test
cdq
ins
es
sub
add
push
inc
xchg
outs
mov
bound
push
jecxz
or
xor
(bad)
hlt
fld
sti
enter
je
mov
lods
movs
xor
sbb
mov
shl
in
xchg
jne
mov
adc
jns
xchg
shl
add
inc
dec
neg
ins
push
inc
pop
push
stos
xchg
inc
dec
fadd
jmp
fucomip
iret
je
sub
test
push
pop
pusha
and
test
xor
adc
shr
jbe
sbb
pop
push
movs
in
stc
paddd
cwde
out
mov
or
lods
mov
mov
sbb
or
xlat
and
hlt
dec
cmp
shl
(bad)
dec
mov
mov
fidivr
pop
int3
mov
mov
jo
out
push
xor
jp
mov
std
xor
and
and
jmp
jmp
sbb
cmp
pop
cmp
push
adc
mov
mov
test
adc
cld
jl
jp
sbb
cmp
loop
xchg
das
and
cmp
das
stos
test
xchg
fs
jno
das
mov
inc
popf
xchg
aam
enter
repnz
rol
fwait
out
outs
loop
aam
call
test
mov
and
popa
popa
mov
iret
in
ret
dec
in
mov
or
sub
jb
xchg
int3
mov
dec
push
cmp
xchg
movs
es
lahf
sahf
nop
mov
mov
ja
int
mov
xchg
out
cmp
xor
inc
outs
fld
lahf
mov
add
and
cmp
std
aas
aad
test
sub
pop
mov
stc
int3
sub
lds
mov
inc
mov
push
pop
in
cmp
js
outs
add
cmp
xchg
add
popf
push
popf
es
dec
push
or
or
inc
(bad)
addr16
aas
out
or
stos
adc
pop
or
and
inc
fist
xor
adc
xchg
mov
xchg
and
fdivr
cs
jmp
out
push
add
mov
aas
fnsave
jb
and
in
and
das
adc
ss
cmc
mov
push
ror
out
fldcw
pushf
ins
movs
xlat
into
lods
or
xor
adc
pop
ss
mov
add
add
mov
xchg
mov
cmp
and
pop
add
dec
and
or
xchg
xor
movs
scas
fist
fsubr
add
(bad)
or
cld
rcr
ss
push
out
adc
and
inc
fwait
lahf
xchg
pop
imul
cmc
mov
push
sbb
mov
loope
jbe
and
cmps
xchg
sar
push
retf
aaa
rcr
inc
outs
std
fisttp
std
or
jmp
push
(bad)
in
push
add
or
iret
cmp
loopne
jmp
aam
mov
iret
sub
add
and
add
std
fcomip
out
retf
fistp
add
and
das
mov
jl
jb
fnstcw
ja
xor
mov
int
daa
xor
test
sbb
jmp
(bad)
cld
push
out
push
push
mov
leave
add
loopne
loope
pop
stc
cmp
leave
out
adc
aaa
mov
and
or
push
inc
in
ja
xor
fnsave
push
mov
repz
dec
mov
mov
lock
ja
jmp
mov
popf
(bad)
pop
mov
aas
push
add
in
test
in
inc
mov
jmp
adc
test
mov
xor
jne
out
rcl
mov
dec
loopne
movq
mov
cs
mov
cmp
cmp
aam
cmp
cmp
daa
mov
adc
pop
mov
fiadd
jb
xlat
stos
dec
mov
iret
not
cmps
sub
dec
(bad)
jbe
jmp
xchg
xor
mov
push
(bad)
jecxz
xor
test
nop
and
pop
jmp
sub
iret
xor
fcom
arpl
push
test
loop
icebp
scas
aam
test
or
push
mov
stc
mov
retf
jmp
lods
and
mov
xchg
jae
pop
lods
dec
loop
mov
or
stc
pop
xchg
ret
daa
ror
push
mov
popa
repnz
mov
dec
adc
push
xor
es
sbb
dec
pop
daa
cmp
mov
jbe
inc
push
mov
aad
cmps
pop
add
retf
dec
(bad)
lods
outs
dec
mov
xchg
sti
or
js
ds
jmp
hlt
add
or
mov
jns
test
lahf
jl
outs
std
jne
aaa
call
imul
dec
jl
add
fisubr
dec
retf
sub
ror
mov
cdq
mov
cs
in
fnop
dec
hlt
shl
xor
pop
mov
sub
and
shr
(bad)
popa
scas
in
shl
sub
bound
in
mov
inc
fidiv
inc
push
pop
imul
loope
pusha
mov
adc
cdq
(bad)
jno
mov
mov
jnp
sub
gs
jmp
xchg
test
inc
jb
xor
int3
or
mov
mov
xor
adc
test
add
mov
loope
xor
sub
cs
and
lea
aas
mov
pop
(bad)
fldpi
hlt
cmp
dec
cmps
das
add
iret
pop
imul
fcom
lahf
jo
dec
pop
adc
loopne
loopne
or
jecxz
(bad)
mov
int
xor
pop
cwde
jb
imul
jbe
jns
call
mov
mov
push
les
cmp
ja
aam
lods
clc
into
aaa
outs
pop
sbb
mov
lahf
div
xchg
pusha
loopne
sbb
push
sub
repnz
inc
ret
ss
sub
scas
es
bnd
mov
mov
jne
out
cdq
or
mov
mul
add
mov
cmps
push
imul
inc
jae
adc
out
aas
ins
xchg
scas
sub
test
dec
xlat
dec
xchg
pop
add
xchg
les
mov
mov
pop
test
clc
and
jnp
out
clc
dec
lds
call
dec
pop
ds
test
or
push
ret
xchg
jmp
xchg
pop
shl
add
dec
sar
mov
mov
fcom
scas
mov
cwde
enter
mov
and
cs
mov
pop
sbb
inc
aam
mov
fs
push
inc
inc
scas
mov
out
push
popf
jg
sbb
aaa
sbb
cmp
in
and
ret
sbb
(bad)
jmp
push
xchg
cmp
jp
adc
imul
les
in
je
in
push
inc
ss
lahf
dec
push
cmp
jne
pop
aad
xchg
sar
jne
mov
inc
imul
fist
push
out
jnp
scas
dec
fbstp
xor
sahf
push
(bad)
cmp
pushf
pop
scas
scas
shr
push
fldln2
nop
dec
mov
push
outs
pop
ins
mov
jecxz
cmp
jl
dec
hlt
mov
into
dec
mov
pop
jae
in
jl
mov
jne
movs
xchg
jle
pushf
dec
js
or
push
push
not
or
mov
into
mov
dec
mulps
cld
cmp
daa
sbb
call
movlps
and
xlat
add
inc
or
adc
call
sbb
push
jo
popa
pop
mov
push
push
mov
xor
inc
jno
mov
push
inc
sti
retf
(bad)
sub
cmps
and
lahf
fisubr
imul
in
xchg
in
imul
je
jmp
(bad)
ja
fst
stos
scas
std
adc
pop
icebp
les
movs
out
imul
fisttp
retf
cmps
xor
repnz
adc
jno
or
sbb
(bad)
fst
mov
inc
icebp
cmps
mov
addr16
mov
xchg
test
aam
push
or
imul
mov
xlat
imul
add
fwait
mov
int3
cmp
sbb
pop
test
stos
jns
and
fsub
test
inc
dec
arpl
mov
xchg
retf
fnstenv
into
pop
and
(bad)
cmps
imul
adc
and
cmps
out
mov
jne
ret
mov
mov
arpl
adc
adc
mov
add
cmp
cs
mov
inc
inc
pop
repnz
cs
xor
or
dec
push
mov
test
xor
call
add
push
scas
cmp
pop
retf
aas
jne
stos
cld
outs
fst
test
mov
(bad)
jmp
sub
out
pushf
mov
and
xchg
sbb
aas
fadd
push
pop
push
adc
mov
xor
ret
gs
or
sub
mov
push
pop
adc
add
add
cmp
pusha
xlat
add
int3
mov
sub
fcomi
cwde
mov
int
dec
out
and
out
fs
dec
retf
fbstp
mov
xchg
adc
loope
cdq
mov
mov
mov
(bad)
call
and
test
fldcw
outs
lods
adc
shr
or
adc
movs
jge
xchg
cwde
daa
sub
dec
mov
cmps
or
lahf
and
pop
ds
push
aas
xor
jmp
(bad)
loopne
cmp
repz
pusha
and
fwait
push
mov
dec
add
(bad)
mov
xor
pop
setge
movs
(bad)
mov
addr16
stos
adc
dec
sub
jno
test
cmp
cmp
add
sub
(bad)
clc
adc
jb
mov
pop
mov
scas
inc
loopne
iret
mov
jbe
xor
imul
inc
js
loop
jo
into
movs
outs
xchg
nop
or
push
cmp
(bad)
mov
cs
mov
adc
add
daa
sahf
jno
hlt
dec
mov
sbb
cmp
pop
mov
loope
adc
and
fs
adc
in
xchg
scas
scas
sub
pop
jnp
xor
mov
mov
(bad)
cmp
xchg
aas
xlat
xchg
or
shl
xor
popf
xchg
lds
mov
dec
(bad)
push
mov
sbb
(bad)
into
inc
out
dec
inc
ins
mov
mov
test
mov
(bad)
push
imul
jmp
pushf
jecxz
das
fs
retf
mov
addr16
scas
push
inc
pop
sub
ja
stos
(bad)
dec
add
cwde
(bad)
rcr
outs
fstp
jecxz
add
clc
sbb
sub
jp
pop
repnz
clc
sub
imul
push
iret
out
loope
xor
pusha
or
xor
shr
inc
adc
push
add
inc
xchg
or
mov
bound
inc
mov
sahf
outs
aas
inc
test
add
int
leave
sub
xchg
fnstsw
adc
adc
mov
(bad)
cmovnp
fwait
adc
lds
fcmovu
js
ins
sbb
cdq
popa
repz
sar
jns
call
sbb
in
scas
xor
inc
loop
imul
ins
out
ins
jp
outs
or
inc
lahf
in
sub
xchg
dec
sbb
xor
push
sub
mov
(bad)
nop
repz
mov
cmps
add
std
adc
sbb
and
cdq
movs
push
and
pop
cmp
in
jl
dec
adc
(bad)
in
retf
or
stos
pop
mov
xchg
push
and
push
js
js
xor
rcr
retf
add
loopne
int
movs
into
cdq
addr16
jge
das
mov
aam
ffreep
xor
ins
sbb
mov
ds
lods
mov
pop
jo
out
mov
call
ret
das
mov
mov
xor
and
push
xlat
in
in
lea
dec
aaa
jmp
leave
sub
out
dec
sub
jmp
xchg
repz
aas
jne
sub
jmp
pop
jbe
je
cmp
add
mov
pop
scas
push
xor
fbld
icebp
push
pop
ret
lods
dec
test
out
(bad)
fs
mov
rcl
dec
cwde
test
jns
lods
aaa
sub
shl
xchg
imul
bound
or
xchg
cmp
ss
ds
sub
xor
push
push
mov
aad
jns
fs
in
cmp
call
in
mov
mov
mov
int3
and
mov
jp
into
mov
lds
or
repz
pop
fbld
sbb
adc
(bad)
aam
dec
adc
fidivr
mov
icebp
pop
mov
sbb
pusha
inc
inc
or
push
sbb
aaa
in
sbb
ficomp
jmp
mov
pop
sbb
or
rcl
xchg
push
pop
lods
push
cmp
ror
ins
dec
xchg
lock
sub
fst
sahf
fcmovbe
add
dec
(bad)
jmp
lods
retf
ror
sbb
jo
bound
sbb
fisub
jbe
fsub
enter
mov
test
jecxz
cs
jecxz
pop
std
mov
cs
push
dec
pop
jmp
adc
nop
adc
inc
mov
hlt
or
dec
repz
clc
test
out
sub
jmp
pop
jmp
xchg
(bad)
jbe
and
jmp
cmp
push
inc
mov
test
jle
nop
jmp
mov
jecxz
jbe
iret
ss
shr
es
fwait
ret
div
aas
xor
mov
das
sub
jb
xchg
inc
mov
jmp
mov
mov
or
mov
mov
add
cli
adc
push
sbb
stos
push
push
xchg
div
daa
mov
jno
rol
imul
leave
sub
dec
jno
push
outs
movs
adc
push
fs
into
pop
mov
ins
push
jnp
jnp
push
adc
neg
je
rcl
mov
ds
das
ins
(bad)
call
push
shl
cs
sbb
int
add
(bad)
bound
out
cli
in
xor
clc
sbb
inc
cmp
xchg
add
inc
sbb
dec
inc
dec
xchg
inc
mov
mov
xchg
lods
dec
scas
loopne
jp
int3
or
stc
ins
js
aas
or
push
fstp
xor
iret
sar
jo
jb
movs
jp
icebp
movs
xchg
pop
mov
xor
loope
push
ins
adc
sub
(bad)
mov
pop
cmp
xor
cmps
xor
push
into
mov
scas
mov
cli
jp
mov
stc
xchg
fdivr
and
stos
sti
pop
add
aaa
push
jmp
inc
ins
push
dec
int
sbb
dec
pop
sub
push
mov
sar
cmps
and
and
push
or
inc
cs
inc
sub
push
rol
iret
cmp
adc
lahf
inc
test
dec
popf
jo
(bad)
comiss
pusha
add
ja
jo
pop
cmc
jo
ret
scas
ins
test
pop
xor
loope
xchg
cmp
loope
les
stos
mov
adc
movs
mov
adc
stos
mov
push
cmps
mov
dec
add
xchg
retf
push
xor
inc
sub
mov
fild
push
xchg
sub
rcl
add
or
xchg
rcl
sbb
jo
xor
xchg
mov
aaa
mov
add
fild
out
jb
cmp
cs
xchg
pop
movs
mov
in
cmp
fistp
(bad)
push
retf
sub
push
dec
pop
or
arpl
cmps
cmps
ja
nop
imul
popa
jb
ds
pop
jge
jle
mov
enter
je
out
ret
mov
mov
jnp
retf
mov
cs
mov
sbb
movs
mov
sub
dec
int3
lock
cli
stc
clc
mov
mov
inc
out
cmp
xor
mov
pop
ds
shr
outs
jle
icebp
daa
dec
fucomp
out
inc
jns
cmps
pop
or
ret
push
popa
mov
cmp
retf
mov
or
test
repz
push
xlat
sar
pop
sbb
das
and
mov
lods
shl
adc
loope
xor
or
cwde
imul
inc
clc
mov
push
cld
push
adc
stos
leave
iret
xor
xor
or
and
cmp
mov
popf
les
fsubp
sahf
fcmove
lods
ins
fisubr
mov
jns
int3
sbb
scas
sbb
adc
mov
inc
and
xchg
popf
sar
push
mov
xchg
sub
adc
popf
cwde
adc
jo
dec
ins
pop
mov
xor
arpl
movs
lods
dec
lods
ret
adc
ins
cwde
pop
imul
pushf
stos
fdiv
jl
call
mov
xchg
(bad)
fsubp
inc
pop
xchg
xchg
inc
jmp
retf
repnz
mov
xor
fnsave
movzx
or
xchg
fidiv
fidivr
cmps
call
jmp
jns
stc
mov
cmp
(bad)
(bad)
adc
std
jno
cmps
xchg
lock
sub
lock
addr16
and
adc
frstor
pop
cmc
sub
fild
add
int
cmp
out
inc
fdiv
into
adc
mov
jl
ins
add
outs
adc
vmovdqu
mov
cmp
pop
xor
push
push
lods
xchg
call
int
pushf
ins
xchg
inc
push
cli
inc
mov
loop
imul
bound
(bad)
pushf
arpl
rcl
cmp
cvtpi2ps
inc
imul
jae
jmp
inc
jae
imul
ficomp
(bad)
cld
push
into
je
push
and
rcr
sub
(bad)
out
loope
or
popf
out
dec
(bad)
iret
xor
ja
mov
in
ror
mov
xor
je
and
aaa
shl
rol
loop
in
adc
dec
sbb
sub
jno
and
sbb
lods
data16
fimul
mov
mov
lahf
fsub
push
add
dec
push
inc
sbb
push
jb
ret
in
pop
(bad)
xchg
xchg
(bad)
jmp
repz
sti
xor
adc
stos
mov
ins
outs
neg
sbb
push
fimul
jns
sti
(bad)
pop
or
mov
xor
mov
(bad)
jmp
stc
mov
sub
mov
sti
stc
push
mov
jns
add
mov
pusha
jae
push
mov
adc
xor
jp
outs
outs
and
push
gs
mov
sub
or
ins
pushf
sbb
fstp
fs
mov
adc
repnz
fadd
mov
and
add
mov
mov
repz
or
loope
bound
and
push
rcr
pop
dec
ret
nop
dec
adc
ret
shl
out
or
and
aam
inc
jnp
retf
xor
mov
fwait
lds
arpl
and
mov
sub
cmp
stos
mov
jmp
push
aas
rcr
daa
push
xchg
push
dec
retf
arpl
fwait
adc
ret
fdiv
lods
and
add
(bad)
inc
shl
imul
xor
cmp
popa
xchg
or
fstp
cli
pop
jns
mov
or
sub
push
popf
xchg
sti
lods
mov
jp
and
mov
mov
iret
sub
jnp
cmp
add
in
dec
adc
sbb
icebp
jg
push
repz
jb
pushf
sub
icebp
test
(bad)
xor
je
mov
arpl
fisub
dec
ja
iret
stos
in
push
fmul
pop
call
pop
and
mov
je
daa
adc
js
test
xchg
retf
pop
or
cmp
xchg
adc
(bad)
fsub
mov
jne
mov
pop
jno
fadd
xor
mov
mov
add
xchg
cmc
and
loop
pop
call
and
pop
or
xor
das
mov
cdq
jge
aam
imul
aam
std
pop
rcr
pop
pop
fwait
mov
je
cwde
jbe
inc
adc
inc
fld
jge
push
out
scas
fdiv
push
ds
mov
push
paddd
push
gs
dec
int3
(bad)
dec
in
lock
out
mov
mov
mov
mov
or
push
outs
dec
sub
inc
jno
xor
add
inc
imul
push
data16
inc
cs
out
jg
div
ror
sbb
jge
pop
add
ss
daa
cmc
out
inc
dec
adc
outs
sub
rcl
test
push
sar
xchg
addr16
xor
aam
mov
clc
jne
test
xor
ds
outs
and
pop
sub
xchg
pop
jo
call
cmp
ds
jl
jnp
imul
jnp
add
jb
jl
lea
daa
ret
pop
cmp
lea
jnp
sub
dec
ins
adc
mov
lods
jge
std
cwde
xor
(bad)
cmp
xchg
stos
and
fbld
xor
add
pushf
inc
fnstenv
xor
push
xor
xchg
dec
xchg
lods
pop
std
scas
cld
mov
fisttp
das
mov
out
dec
aaa
mov
pop
out
int
inc
fs
les
lahf
sub
xchg
cmps
xchg
jb
(bad)
into
aaa
push
repnz
repz
rcr
outs
fisttp
hlt
cmp
mov
sbb
shl
cmp
mov
in
imul
push
das
jbe
mov
ror
iret
sub
mov
mov
in
push
out
and
mov
mov
push
inc
ficomp
jbe
push
and
out
jmp
and
test
adc
imul
pusha
add
in
test
push
cmps
outs
mov
aas
mov
outs
daa
std
jae
sahf
add
adc
inc
cmps
neg
ins
push
in
add
mov
sub
daa
loope
fbld
jae
mov
movs
fs
push
int3
mov
repz
and
(bad)
sub
mov
add
ret
test
out
pop
inc
imul
jle
jecxz
jg
add
pusha
in
pop
in
jne
adc
in
cmc
cmc
sub
inc
int3
pop
scas
jno
int3
sbb
pop
sub
daa
adc
out
fdivr
hlt
mov
and
mov
loopne
inc
lea
repz
fist
pop
test
pop
ror
push
dec
xor
pop
inc
fnstsw
and
es
js
fwait
out
adc
jbe
sub
jbe
je
inc
retf
push
xchg
mov
ss
sub
mov
push
mov
dec
stos
and
test
sub
int
into
retf
add
mov
int3
mov
sbb
iret
push
and
test
iret
mov
lods
repz
call
clc
sbb
je
jge
addr16
sbb
cmps
jmp
adc
mov
dec
lods
stc
xor
(bad)
xor
fist
fiadd
mov
jp
into
pop
mov
or
lock
push
int
lea
mov
add
mov
js
and
stos
ficom
add
jbe
dec
fnstenv
inc
test
cmps
mov
lahf
push
(bad)
retf
aad
lods
mov
out
push
fwait
cmp
and
leave
add
gs
adc
scas
adc
mov
push
leave
pop
and
dec
jne
outs
outs
and
sbb
adc
call
jne
push
nop
push
mov
adc
aas
in
aam
or
out
or
int
pop
jns
stc
and
test
stos
(bad)
les
ins
bound
or
adc
adc
xor
mov
jmp
leave
sbb
call
dec
fsub
cmp
jbe
pop
mov
bound
add
push
cmps
daa
pop
and
rol
dec
and
sbb
push
out
(bad)
ins
je
cmp
adc
inc
pop
sub
mov
adc
jp
dec
mov
inc
popf
sti
mov
ins
adc
fcom
cld
sub
out
and
(bad)
in
jp
movs
adc
mov
fcom
int3
pop
xor
dec
adc
div
mov
lods
mov
aaa
fisubr
dec
mov
cmp
push
mov
sub
arpl
mov
adc
lods
adc
xchg
stos
repz
inc
jmp
add
ins
sbb
and
cs
cdq
outs
ficomp
adc
aaa
cmp
jmp
push
jne
cmp
xor
and
cli
jmp
sbb
inc
(bad)
ficom
dec
cmps
push
inc
mov
mov
movs
adc
jae
mov
fisttp
ins
mov
sbb
adc
mov
add
int3
push
jae
rol
pop
in
fstp
shl
gs
jb
es
mov
ds
xor
mov
sub
push
mov
xor
clc
fdivr
dec
xchg
aaa
stos
outs
sub
mov
dec
pop
aad
jb
nop
lea
imul
out
cmp
cmp
inc
cmp
xor
cli
inc
mov
call
scas
imul
pop
dec
jb
test
push
dec
xor
mov
fsubr
dec
sahf
xchg
in
pop
icebp
(bad)
sbb
pop
pop
dec
add
pop
add
ds
cmp
sub
movs
add
movs
pop
popa
inc
(bad)
push
aas
pop
xor
repz
inc
rcl
stos
aas
inc
jnp
or
je
cld
les
pop
and
fistp
and
push
push
and
mov
jae
movs
das
push
mov
push
mov
inc
sub
sahf
into
or
xor
ror
shl
es
lods
sbb
dec
sub
fidivr
push
fsub
(bad)
(bad)
int3
mov
popf
das
mov
div
call
sti
push
xchg
adc
adc
in
cli
cwde
nop
mov
retf
push
nop
lea
push
rcl
adc
aas
in
mov
arpl
xchg
sahf
xchg
xchg
adc
in
mov
dec
fisubr
idiv
ins
lock
lods
xchg
(bad)
in
sbb
sahf
sub
or
pop
pop
push
cmps
and
data16
iret
pop
fdivr
add
lahf
push
shr
pop
jo
das
pop
outs
loop
and
gs
jl
dec
lock
and
lea
ds
mov
sbb
outs
xor
fimul
mov
add
and
cmp
inc
pop
jge
mov
sub
les
scas
nop
dec
adc
mov
push
fcomp
nop
or
test
inc
jno
adc
movs
cld
xchg
(bad)
pop
lds
xor
cmp
daa
mov
push
xchg
mov
mov
cmp
out
repnz
xchg
out
jge
pop
test
jae
push
es
inc
inc
aam
cmp
fcomp
fcmovb
inc
or
jbe
cwde
jne
pop
inc
test
cmp
fcmovb
xchg
and
pop
adc
fistp
sbb
adc
dec
call
fsubp
and
inc
inc
jge
out
jae
dec
aam
jp
std
push
mov
call
cmp
int3
jl
js
outs
jl
pcmpgtw
push
jne
push
shr
xor
iret
cdq
dec
out
mov
sub
sbb
jp
adc
and
out
or
icebp
pop
stc
hlt
cli
std
in
sar
fadd
fist
pop
push
inc
push
(bad)
mov
add
mov
push
das
pop
les
pop
rol
xchg
add
inc
int3
out
xchg
(bad)
mov
ss
cmc
mov
dec
stc
fld
add
cmps
sbb
imul
pop
inc
es
or
inc
and
or
pop
in
push
push
pop
jg
into
push
js
cmp
inc
and
fnstcw
or
xchg
mov
(bad)
inc
imul
and
out
iret
(bad)
(bad)
outs
ret
shr
out
nop
or
push
(bad)
outs
dec
out
mov
call
pusha
lock
pusha
in
in
retf
xchg
aam
push
mov
xchg
ret
shl
inc
icebp
fwait
sub
cld
add
out
cmps
movs
loope
mov
mov
pop
mov
not
pop
(bad)
pop
inc
nop
cld
xchg
pop
or
pop
push
push
xchg
daa
or
rcr
pop
test
ficom
test
mov
jg
ins
mov
shr
push
movs
cmp
and
pop
fstp
rol
imul
dec
movs
jne
xor
daa
fbstp
sub
mov
sub
and
int3
imul
jae
clc
sub
mov
movs
fmul
add
or
in
pop
jmp
push
sub
push
test
dec
test
stos
pusha
xor
(bad)
pop
aad
push
popa
iret
(bad)
mov
daa
cld
push
stos
(bad)
int
jne
icebp
aas
test
pop
loopne
in
adc
or
rcpps
sahf
mov
mov
retf
retf
adc
ins
fs
mov
cs
and
rcl
ins
inc
add
push
jg
or
or
jl
mov
rcr
and
xor
push
and
sahf
sbb
add
sbb
repnz
jb
xchg
push
fisubr
fist
in
jo
or
jae
dec
xor
push
cli
bound
cld
mov
jns
sub
push
imul
dec
fstp
dec
(bad)
in
nop
mov
dec
dec
adc
cmp
test
push
pop
imul
das
movs
xor
mov
jbe
cmps
aad
repz
sar
inc
loope
add
xor
cmps
jecxz
inc
push
jns
sti
and
adc
sbb
mov
mov
jmp
and
scas
out
psubsw
data16
out
adc
in
dec
dec
(bad)
cmc
xor
add
mov
push
adc
es
fldcw
jns
mov
and
mov
mov
scas
jo
aam
or
cwde
push
dec
fld
add
sahf
mov
lods
jbe
or
lock
push
movs
push
loop
push
push
pushf
call
pusha
(bad)
repnz
dec
dec
ret
cmove
fiadd
inc
jo
or
fdiv
psrld
scas
pop
std
inc
loopne
lods
push
dec
shl
cmc
loope
xchg
mov
stos
or
rcr
and
(bad)
hlt
stos
xchg
shr
ja
push
jg
das
retf
push
ror
out
cmp
push
das
xor
inc
mov
dec
repz
mov
shl
and
popf
xor
sbb
xchg
ds
int3
or
aas
inc
jg
pop
adc
aas
pusha
mov
test
inc
inc
cs
ror
inc
stos
xchg
push
xor
add
mov
nop
push
adc
nop
xlat
pop
js
pop
ret
fcomp
(bad)
mov
js
jecxz
and
ret
icebp
loope
add
add
inc
pop
inc
mov
jmp
xor
test
not
nop
or
stos
mov
arpl
and
and
hlt
mov
dec
sbb
call
out
pop
adc
inc
(bad)
and
adc
popa
mov
jo
add
and
ds
ss
add
sub
mov
cwde
scas
sti
or
repz
jb
das
imul
mov
jle
inc
mov
adc
add
jne
sahf
cmc
push
mov
aas
xchg
pop
clc
(bad)
push
pop
sbb
push
sbb
mov
mov
xor
sub
cmp
packuswb
jo
arpl
xor
or
loopne
jb
dec
bound
xor
and
(bad)
jmp
cmps
movs
cmp
and
pop
fcmovnu
retf
push
loop
test
outs
mov
cmp
and
dec
inc
adc
pop
imul
adc
sbb
jp
ror
push
cdq
out
mov
fwait
retf
out
push
mov
aas
push
pop
iret
dec
jg
mov
aaa
xchg
sub
ret
lods
(bad)
pusha
xchg
mov
mov
pop
ss
pusha
leave
jne
out
test
push
das
jp
xchg
mov
mov
cmp
ds
stos
and
inc
cli
mov
comiss
or
mov
icebp
and
loop
pop
mov
mov
sar
fs
mov
jo
pop
xor
cmp
xchg
cli
stos
loope
push
call
in
xchg
in
in
test
int3
es
pop
xor
jbe
cmps
adc
stc
push
bound
cmp
add
cmp
bnd
push
les
push
sbb
imul
sub
xor
mov
cs
in
fdivrp
or
adc
cmps
or
int3
mov
(bad)
aam
xor
inc
xchg
mov
xor
retf
sub
sahf
ss
aam
push
rcl
out
enter
mov
pop
cmps
cs
inc
stos
popf
push
bound
push
shrd
xchg
(bad)
push
add
and
lock
stos
outs
and
dec
into
cmp
daa
imul
ret
dec
pop
push
int
jg
or
pop
(bad)
adc
jmp
fld
mov
pop
fwait
cld
leave
mov
lock
jno
call
or
pop
or
jmp
cmp
(bad)
mov
cld
cmp
test
mov
jo
or
mov
lahf
adc
gs
dec
mov
pop
adc
cdq
dec
int3
repz
clc
(bad)
xor
sub
mov
test
cmc
fs
mov
mov
bound
dec
cmc
into
aas
xchg
add
les
mov
xor
jns
add
inc
dec
or
xchg
scas
gs
add
inc
pop
ror
sub
mov
shr
push
mov
in
std
movs
xor
sub
jmp
add
adc
xor
push
cs
pop
jne
call
mov
inc
jl
add
in
push
xchg
je
adc
pop
cdq
and
out
js
push
push
dec
add
stos
mov
int3
dec
fisttp
outs
mov
lds
scas
mov
mov
fwait
shr
mov
sbb
xlat
ja
ins
js
mov
outs
xchg
es
mov
push
or
shl
pushf
stc
cmp
enter
mov
sbb
es
sbb
jge
add
pop
je
aaa
jle
out
mov
jns
sub
add
cmp
pop
mov
adc
les
sbb
loope
push
mov
push
mov
dec
and
mov
in
ins
cmp
xor
jno
adc
or
dec
mov
pusha
cwde
repnz
mov
cmps
movs
out
jge
aad
sub
and
push
cmp
xchg
pop
mov
leave
and
call
data16
lock
add
mov
jmp
sub
movs
fistp
cmp
adc
neg
add
push
daa
xchg
retf
(bad)
imul
movs
cmp
icebp
xor
pop
fadd
mov
pop
mov
popa
adc
sbb
sub
jns
or
lods
ret
sbb
add
pop
and
retf
jg
xchg
xchg
sub
mov
push
dec
stos
test
and
xor
rol
outs
mov
add
adc
sub
mov
sbb
scas
cmp
mov
xchg
sbb
push
xor
pop
dec
aaa
inc
xchg
xor
jb
pop
add
mov
inc
cmp
jmp
mov
arpl
and
(bad)
jmp
test
outs
jo
adc
mov
dec
cmp
sbb
std
cmp
adc
stc
ins
and
fcomp
(bad)
push
and
ja
xchg
mov
adc
loop
adc
bound
adc
fdivr
sbb
repnz
adc
or
lods
test
sub
out
adc
shl
and
xlat
mov
xchg
inc
not
imul
add
mov
cdq
pop
jae
push
aaa
pop
jg
push
mov
into
jns
adc
and
cdq
scas
adc
add
or
sub
dec
jo
mov
outs
movs
pusha
sbb
add
(bad)
mov
jb
pop
mov
jnp
imul
sub
clc
test
jae
int
mov
mov
call
icebp
add
pop
mov
and
mov
pop
or
jmp
ins
ins
repnz
into
ins
movs
(bad)
mov
aam
nop
xchg
inc
push
mov
push
mov
lock
hlt
xchg
mov
je
or
cmp
push
or
xchg
neg
adc
jp
hlt
inc
retf
cmps
fiadd
xchg
mov
or
das
sbb
pop
(bad)
push
mov
lock
jbe
xor
in
repz
cld
leave
cmp
and
push
pcmpgtb
push
daa
mul
add
iret
cmps
in
lds
ins
sub
sbb
inc
pop
mov
mov
sbb
push
lock
jp
pop
rcr
cmps
sub
push
pop
call
cmp
icebp
cmp
mov
xchg
popa
dec
or
aad
dec
loop
aam
into
das
hlt
pop
retf
fldenv
push
xchg
or
dec
fcomp
popf
repz
cli
jge
or
mov
mov
aam
loope
push
lea
mov
push
stos
jmp
push
ins
dec
dec
cwde
arpl
stos
mov
test
ror
retf
or
dec
out
mov
aad
jg
dec
mov
fdiv
sub
push
xchg
ficomp
jnp
dec
xchg
push
jbe
pop
push
adc
mov
(bad)
icebp
mov
pop
or
cmp
mov
in
in
pop
xchg
or
or
nop
xor
loop
stc
arpl
xor
sbb
mov
fistp
adc
lock
out
fidiv
retf
ja
xor
xchg
in
ret
pop
and
out
fs
jmp
aaa
cli
add
push
bound
in
push
dec
call
test
sub
stos
int3
mov
cmps
mov
sbb
repz
mov
retf
mov
mov
adc
cmp
fs
mov
pop
pop
sbb
dec
enter
stc
dec
xor
enter
sub
xor
in
(bad)
dec
lahf
lods
mov
ror
dec
add
mov
ds
cmp
pop
add
rcl
aam
pop
fwait
push
cmp
xchg
loopne
xchg
push
(bad)
movs
shl
pop
in
retf
xchg
aas
sub
ds
aaa
jmp
sti
mov
in
stc
arpl
mov
pushf
retf
clc
out
sbb
xchg
pusha
ins
les
ja
out
jo
ret
mov
fucomp
mov
pop
sub
(bad)
mov
sub
(bad)
or
out
jmp
movs
(bad)
mov
mov
pop
cmps
or
(bad)
mov
cld
and
icebp
xchg
jbe
pushf
in
jno
jbe
mov
adc
int
mov
mov
jl
jecxz
mov
or
mov
pop
mov
mov
(bad)
mov
sbb
loope
rol
cmp
in
inc
aaa
cmp
sub
cmp
push
push
movs
jno
fmul
and
sbb
sbb
and
dec
je
dec
ret
cmp
(bad)
retf
popf
into
int3
and
fnstsw
mov
pushf
cmp
or
push
sbb
add
mov
fisub
ficomp
inc
sub
outs
sbb
(bad)
shr
jg
shl
shl
inc
push
cli
mov
mov
and
in
jecxz
nop
xchg
out
xchg
push
adc
cmp
popa
dec
add
lea
aas
xchg
shl
add
sub
in
jg
imul
xchg
outs
cdq
pop
push
mov
sub
sbb
into
jge
lock
mov
pop
(bad)
in
pop
(bad)
mov
or
pop
mov
loope
mov
mov
aas
popf
jbe
(bad)
out
cmps
dec
neg
retf
push
pop
lahf
popa
rcl
mov
pop
push
mov
(bad)
call
xchg
imul
dec
jns
xchg
jg
dec
lock
mov
inc
inc
push
cmc
add
(bad)
mov
cli
aaa
ins
mov
and
sbb
shr
(bad)
test
jmp
mov
outs
mov
xchg
sti
shl
out
jno
fild
rol
xchg
jbe
test
mov
inc
add
inc
fist
in
movs
fld
mov
push
cmps
pop
inc
mov
sbb
mov
(bad)
xor
add
pop
hlt
xchg
mov
inc
scas
movs
jg
or
sbb
int
xchg
das
popa
lods
loopne
push
sbb
push
cld
dec
inc
jnp
sbb
jb
hlt
sub
enter
jo
push
rcl
je
ror
xor
sar
and
inc
jb
adc
stos
jecxz
pop
(bad)
mov
push
push
sbb
ds
xor
loope
pop
inc
mov
loope
popa
cwde
test
loop
repz
xor
test
pop
xor
pop
mov
add
mov
retf
dec
cmps
mov
rcr
dec
mov
out
xchg
push
pop
mov
jp
cmp
sahf
cli
out
sti
and
out
xchg
adc
or
inc
cwde
shl
jnp
aam
push
clc
call
and
inc
out
stos
cmp
pop
out
jg
nop
push
mov
hlt
xchg
jnp
cdq
xchg
dec
xchg
mov
and
jg
mov
mov
sar
lods
mov
inc
xor
pop
push
push
stos
mov
fisubr
dec
(bad)
mov
push
in
enter
mov
add
dec
out
aam
push
sub
jmp
push
enter
int3
arpl
mov
sbb
xor
cmp
imul
movs
call
jmp
shrd
data16
mov
pop
cli
xor
push
push
push
int3
xchg
out
ret
push
jle
loope
jmp
lahf
aaa
and
retf
lods
stos
out
xlat
adc
mov
sub
iret
popa
sbb
ret
push
imul
daa
aas
arpl
and
xor
xchg
imul
sbb
lahf
or
rol
out
fmul
mov
icebp
mov
cwde
sub
test
data16
push
xchg
mov
mov
(bad)
xor
dec
pop
bound
cmp
jmp
call
pop
fist
pop
mov
mov
jmp
inc
push
(bad)
lods
add
or
fdivr
jb
mov
aam
ret
out
mov
dec
jmp
jne
sbb
aas
adc
pop
mov
inc
(bad)
in
and
outs
stos
test
dec
inc
adc
stos
push
sbb
aad
jmp
or
sbb
fidivr
ins
retf
xchg
inc
xor
fsubr
fcmovnb
int3
pop
sbb
bound
data16
cmps
cmp
retf
sbb
xchg
add
and
pushf
shl
jmp
daa
aaa
jae
mov
adc
outs
in
loope
(bad)
push
test
inc
imul
mov
inc
lock
imul
fcmovnbe
stos
push
jb
int3
xor
xor
lods
push
mov
xchg
aaa
pop
mov
dec
iret
shl
test
sbb
xchg
into
dec
sbb
xchg
(bad)
repz
fsub
repz
test
ret
pop
daa
cs
jbe
sbb
stos
les
adc
call
jmp
xor
pop
dec
sti
pop
bound
cmp
repz
xchg
sahf
or
mov
inc
or
data16
iret
hlt
leave
cmp
out
test
lea
out
fdivrp
mov
mov
push
mov
push
push
(bad)
je
dec
fbld
or
cmp
mov
cmp
push
dec
sub
add
addr16
add
shl
or
adc
dec
add
std
and
outs
xor
int3
es
outs
mov
retw
repz
scas
es
psrld
pop
or
ds
or
mov
add
lea
sti
mov
sbb
jae
test
jns
in
sbb
dec
stc
mov
dec
cmp
push
jg
std
inc
dec
and
mov
pop
rol
adc
int3
(bad)
jb
das
or
lods
cmp
xchg
dec
lds
dec
xchg
mov
pop
fld
mov
jnp
ins
inc
sahf
icebp
mov
pusha
sub
sub
out
ins
mov
pop
pop
(bad)
(bad)
iret
inc
in
cmp
or
or
scas
pop
jge
fcom
sahf
xor
retf
(bad)
cmc
dec
jmp
adc
xchg
movs
or
add
cli
inc
xchg
cmp
sahf
inc
adc
xor
lods
stc
jge
aam
mov
adc
iret
out
icebp
subps
pop
mov
xor
push
ja
xchg
sub
jb
dec
xchg
xchg
sbb
push
push
std
imul
and
inc
push
pushf
xchg
popa
add
(bad)
lods
jmp
int3
int
jp
sub
xor
jmp
into
popa
fcom
jno
pop
fistp
inc
xchg
sub
test
mov
sbb
adc
lods
lds
push
clc
loop
daa
movs
adc
jp
shr
jae
mov
pop
sbb
pop
cmp
fidiv
push
repz
leave
push
xchg
ret
mov
js
xchg
stos
xor
lea
add
movs
xor
push
ins
jmp
sub
push
fcmovb
lea
sbb
cmp
xor
popa
and
mov
inc
lds
cmc
push
call
or
sub
push
mov
rol
lds
or
jo
pop
loopne
or
xchg
mov
retf
loope
push
mov
rcr
mov
fcmovb
ins
test
cmp
outs
cmp
push
xchg
inc
cmp
inc
xlat
dec
retf
lds
aaa
and
mov
mov
out
push
pushf
rol
test
xor
cld
push
arpl
out
adc
sub
retf
jb
int
jecxz
retf
sbb
mov
xor
cmp
xor
sar
or
and
clc
xchg
in
movs
(bad)
es
aam
push
aas
xchg
mov
push
and
or
shr
fsub
cs
add
xchg
ins
lds
rol
sub
stos
adc
les
jne
jl
jno
mov
retf
icebp
mov
iret
in
dec
jns
dec
out
in
sub
xor
sub
leave
cmp
and
in
mov
nop
clc
sahf
in
cdq
loope
pop
sbb
scas
dec
imul
mov
dec
or
and
jnp
test
ins
test
popf
scas
sbb
or
sbb
push
lahf
imul
pop
das
out
pushf
push
dec
pop
test
stos
sub
cmp
push
mov
mov
movs
jns
(bad)
outs
or
scas
das
scas
jp
xor
(bad)
out
mov
mov
sub
pop
ins
inc
xchg
dec
add
sti
scas
sub
xchg
les
sbb
call
bound
gs
daa
push
bound
aad
out
cmp
lea
sbb
aam
xchg
fidiv
cs
dec
cwde
retf
aas
dec
xor
movs
cld
inc
inc
std
loop
xor
daa
retf
cmp
movs
lds
sbb
or
clc
xchg
xchg
mov
aam
jmp
fnstsw
imul
pop
or
imul
pop
push
hlt
pusha
inc
push
in
scas
ret
adc
lods
out
lock
imul
or
mov
out
pop
adc
sbb
pop
mov
and
jae
aam
es
push
and
outs
push
add
aas
jns
sahf
mov
jg
cwde
and
pop
inc
mov
jo
(bad)
pop
push
mov
popf
rol
jmp
neg
jne
cvtps2pi
test
fisubr
inc
test
mov
pop
inc
sub
cmps
pop
sub
push
jb
sar
cwde
shl
(bad)
push
mov
fidiv
push
test
into
out
or
push
sti
bound
xor
dec
sbb
(bad)
nop
or
xlat
mov
call
aaa
dec
jl
movs
test
std
retf
pushf
xor
repnz
mov
and
inc
addr16
push
cmps
inc
sub
retf
adc
or
mov
xlat
mov
xor
test
push
push
inc
or
mov
pusha
add
xchg
loopne
push
aam
push
or
ds
jecxz
inc
fmul
test
ficomp
adc
and
fimul
cmove
shl
mov
mov
in
jmp
or
ds
shl
add
test
mov
(bad)
cmp
fidiv
sbb
xor
push
jmp
dec
clc
lods
cwde
arpl
xchg
movs
pop
(bad)
push
(bad)
inc
or
sub
push
pushf
nop
push
lods
cmc
push
sbb
jmp
lods
cmp
push
es
cmp
std
xchg
mov
lds
dec
xchg
idiv
loopne
cmc
sahf
sub
inc
test
int
test
add
xchg
fs
aas
push
test
pushf
fcom
add
imul
bound
push
fbstp
inc
add
loope
call
dec
nop
shl
mov
inc
test
sbb
dec
mov
pop
sub
mov
loop
mov
sub
dec
jb
xchg
and
popa
cmp
cs
sub
rol
sbb
push
dec
les
ins
jo
cwde
test
(bad)
int3
or
rol
popf
jnp
call
imul
outs
cmp
or
(bad)
jns
add
sahf
sahf
ss
(bad)
sbb
push
mov
xor
mov
addr16
call
les
inc
fdivr
and
cmp
fwait
sbb
add
jg
jp
rcr
lods
xchg
loope
scas
pop
push
jns
add
jbe
gs
pop
adc
lea
or
pop
sti
test
lock
mov
xrstor
and
jmp
arpl
push
je
xor
push
or
shr
es
push
and
test
bound
out
mov
or
xchg
div
(bad)
sub
dec
pusha
call
lahf
test
movs
xchg
das
mov
pop
sti
push
das
sahf
cwde
test
inc
in
adc
stos
fimul
and
push
jmp
repnz
imul
xchg
imul
xchg
and
inc
xchg
mov
cdq
mov
pushf
fisubr
mov
das
mov
push
rep
pushf
out
xor
xchg
stos
adc
dec
ja
aaa
jg
push
jecxz
dec
mul
neg
add
fild
and
cmp
inc
jl
aaa
stos
loopne
cmp
adc
pop
push
sbb
sbb
mov
xor
fsub
jecxz
aaa
xor
les
fisttp
xchg
loope
push
mov
mov
retf
mov
push
or
cmp
movs
data16
push
push
sbb
push
or
arpl
stc
sbb
or
rol
sbb
and
adc
dec
jl
pop
mov
jp
ja
hlt
int3
stos
iret
cmp
sub
push
pop
jle
dec
dec
mov
aad
and
push
or
cmp
test
iret
adc
clc
cmps
imul
and
dec
xchg
pop
cld
pop
sbb
dec
movs
mov
inc
dec
adc
and
(bad)
scas
es
lock
sub
and
ror
das
jbe
fnstcw
cli
sbb
aam
or
das
pushf
jmp
jno
jmp
push
cmp
mov
and
dec
jecxz
sub
loop
out
mov
fbstp
call
aad
neg
lods
pop
daa
xlat
dec
fdiv
or
sbb
(bad)
xchg
push
adc
xchg
shl
in
cmp
fsub
inc
sbb
jb
pop
retf
sbb
pusha
adc
jns
jb
les
xor
outs
lahf
mov
mov
jno
and
xor
or
scas
xchg
aam
lods
fsincos
lods
(bad)
out
or
sbb
jge
icebp
or
push
adc
jl
inc
les
(bad)
ror
shr
sbb
mov
clc
inc
jle
mov
add
not
mov
rol
xor
in
add
add
pop
(bad)
sbb
paddw
cmp
pop
popf
xlat
aas
push
(bad)
arpl
add
sbb
dec
inc
push
scas
lea
push
iret
dec
sahf
sbb
addr16
mov
stos
es
and
dec
xlat
mov
outs
sub
jno
int3
jns
call
les
add
lods
(bad)
in
fild
or
mov
ins
mov
ud2
aaa
fdivr
fidivr
stos
gs
mov
ins
jge
xor
add
gs
mov
push
cmp
xchg
xchg
mov
cmp
adc
mov
add
idiv
rcr
das
rcr
xchg
adc
cli
push
pop
repz
push
inc
aas
xlat
call
push
shr
dec
mov
sbb
ja
call
cld
sub
add
out
mov
popf
fdiv
cmp
jns
cmc
push
ror
loop
xor
cld
cwde
and
push
inc
out
into
adc
fidivr
mov
jp
add
aas
std
pusha
ret
gs
rcl
leave
xor
fst
call
push
xor
inc
sub
sub
lods
dec
repnz
add
xor
mov
(bad)
sbb
cmp
mov
sub
sbb
xchg
push
sub
or
pop
je
jmp
std
push
adc
(bad)
push
in
aaa
inc
xor
xor
imul
xchg
pop
in
lds
ss
mov
inc
pop
sub
sti
rdmsr
and
in
and
jmp
jle
inc
arpl
shr
test
lods
mov
push
shl
push
mov
(bad)
mov
pop
das
and
jmp
in
cmp
mov
cmps
add
inc
popa
inc
dec
in
push
or
cmp
mov
(bad)
movs
inc
sbb
int
and
(bad)
out
in
dec
cli
(bad)
aam
mov
jo
fadd
ret
or
in
jp
and
es
test
sbb
jmp
dec
xor
mov
push
shr
ficomp
mov
cmp
aad
xchg
dec
pop
mov
in
xor
or
cmp
sub
ins
loopne
or
pop
push
sbb
or
call
add
loop
sbb
mov
cli
cdq
sub
inc
popa
sti
shr
pop
sub
inc
and
push
out
pop
cmp
or
or
lahf
jnp
std
(bad)
mov
repz
xor
test
inc
cmp
out
jb
jo
mov
cmp
arpl
lahf
out
jne
sbb
cmp
xchg
imul
clc
popa
out
xor
or
out
and
cmp
cmp
jg
sti
scas
gs
in
or
nop
lods
test
sbb
dec
mov
dec
cli
xchg
faddp
in
push
push
or
inc
xchg
(bad)
out
cmc
mov
sbb
xor
cdq
and
inc
fdivr
in
mov
lahf
aad
into
jmp
cmp
inc
arpl
ins
out
imul
push
data16
push
jmp
stos
ficomp
int
sbb
jbe
bound
test
call
mov
jg
imul
push
add
xchg
mov
imul
lods
or
in
call
cmps
or
mov
cmp
pop
push
add
xor
mov
mov
add
call
jno
pop
mov
cmp
fcomi
loope
jmp
bswap
enter
loope
mov
xor
lods
push
push
retf
and
sub
outs
lods
mov
fs
push
scas
jnp
hlt
lahf
aam
repz
das
sbb
out
push
xchg
pop
dec
dec
div
out
ins
mov
adc
cmc
inc
push
out
sbb
push
xor
push
xchg
mov
add
fiadd
outs
mov
loop
push
popa
and
pop
cdq
imul
lea
sbb
jl
jge
in
inc
adc
or
or
loop
xor
xchg
pop
sbb
cmp
mov
dec
pop
addr16
and
sbb
ffreep
add
sbb
push
xchg
pop
cmp
or
(bad)
pop
push
mov
adc
mov
dec
add
and
imul
jge
out
jl
xor
push
cld
sti
or
jge
add
jno
hlt
cmp
push
and
or
push
xor
pop
pop
jns
or
movs
arpl
in
fdiv
jmp
mov
xor
shl
xor
jle
shl
mov
adc
xor
push
sbb
and
mov
inc
mov
ins
cwde
mov
lods
ret
popa
adc
mov
push
mov
rcr
push
ss
sar
inc
es
pop
cmp
push
mov
mov
push
jp
dec
adc
nop
xchg
into
add
(bad)
mov
jo
movs
mov
pop
adc
sbb
inc
pop
ins
jg
pop
push
push
dec
sub
fs
shr
scas
out
cmp
and
sub
clc
mov
push
call
scas
mov
push
aam
fdiv
aas
inc
mov
add
rcl
mov
fcomip
pop
mov
enter
sub
into
and
sbb
push
jmp
int3
cs
ja
xchg
sub
mov
cmp
mov
shr
xor
cmp
jbe
popa
sub
or
ss
push
in
addr16
test
jp
jmp
(bad)
adc
jae
jae
add
cwde
test
nop
mov
ja
in
and
sahf
adc
add
sub
xchg
pop
ins
fisub
icebp
enter
push
or
(bad)
fdivp
sti
stos
adc
(bad)
add
mov
xlat
mov
popa
jmp
push
test
push
push
imul
and
lock
hlt
mov
pop
shr
push
icebp
sbb
sub
imul
cmp
sti
jne
dec
hlt
adc
outs
popa
je
xor
repz
ret
mov
test
fstp
mov
add
in
mov
aas
hlt
daa
mov
mov
push
mov
jnp
and
sub
ror
stos
or
cmp
retf
loopne
jle
int
bound
dec
and
cwde
sub
mov
xor
sbb
push
and
pop
int
mul
jo
mov
cmps
jb
popa
jmp
je
int3
push
int
fistp
push
push
int3
sbb
imul
jno
add
adc
ss
imul
inc
rcl
push
fld
je
sbb
mov
xlat
fs
xor
fldenv
fdiv
aam
ror
ret
pushf
pop
enter
gs
cli
push
inc
push
sbb
inc
(bad)
mov
pusha
xor
int3
test
adc
xor
xchg
lods
repz
lock
inc
add
movs
lods
pop
or
xchg
out
pop
cmp
adc
jnp
cs
mov
(bad)
rcr
rcr
aad
scas
(bad)
lahf
xor
test
stc
xlat
adc
or
or
and
mov
pop
inc
inc
lahf
mov
cmp
push
lahf
adc
mov
adc
mov
or
and
sbb
ja
sub
mov
es
pop
jns
std
mov
sbb
pop
pop
mov
jb
mov
adc
cmp
rcl
les
mov
mov
repz
jecxz
(bad)
out
pop
mov
dec
cmps
or
sbb
jmp
inc
add
mov
cmps
punpckhwd
push
(bad)
rol
mov
mov
fisttp
fmul
fwait
cmps
enter
jne
add
call
and
mov
(bad)
jmp
mov
jno
cmp
sbb
add
cmps
icebp
xchg
mov
scas
jmp
aad
dec
xchg
push
daa
mov
adc
fnstsw
push
sbb
pusha
sbb
div
mov
movs
hlt
nop
lahf
jge
cmp
or
cld
mov
ret
and
mov
or
dec
sub
jo
imul
push
mov
xchg
cmp
(bad)
mov
mov
inc
push
repz
iret
jae
repnz
pop
cmp
mov
xlat
push
xchg
push
push
mov
sbb
sbb
test
ins
xchg
(bad)
or
shl
ror
mov
mov
sub
sbb
imul
xchg
scas
and
jecxz
mov
cmp
push
jl
pop
ja
je
std
aam
scas
pop
es
adc
test
fistp
add
adc
imul
push
mov
pushf
mov
pop
iret
call
fistp
clc
ds
mov
ret
pop
outs
sete
inc
aad
cld
lock
pop
and
xchg
inc
(bad)
jecxz
gs
aad
popa
sti
sti
mov
iret
cmp
mov
inc
push
dec
mov
xor
stc
dec
push
lods
arpl
pop
pop
add
mov
js
lock
cmc
dec
call
popf
sti
mov
or
and
xor
lock
push
adc
repnz
sar
push
and
in
retf
or
xchg
sub
cwde
mov
sar
cmps
cmc
outs
pop
outs
sbb
in
dec
outs
imul
nop
movs
sbb
pushf
sbb
rol
fsub
aad
mov
mov
fiadd
jg
fld
js
jns
mov
into
inc
std
cmp
xor
loopne
mov
xchg
add
cmp
add
fild
and
ds
iret
sbb
cmp
bound
push
xchg
jne
xor
daa
xor
je
jp
pusha
xchg
sub
pop
push
cmpxchg
loopne
push
cmp
jno
mov
add
inc
adc
add
jg
jae
jae
out
test
ret
push
or
adc
mov
or
(bad)
xlat
push
test
nop
mov
xchg
(bad)
icebp
cdq
mov
and
xor
mov
fs
sahf
dec
push
pop
jecxz
rol
ret
imul
scas
sub
xchg
xchg
or
neg
pop
sub
xchg
rcl
mov
push
call
jp
dec
inc
mov
dec
xchg
retf
shr
cmps
add
push
in
push
aaa
call
loopne
scas
jo
fwait
sbb
cdq
pop
das
sub
fdivr
das
repz
lods
rol
and
inc
add
cld
or
jae
cld
fisubr
mov
pop
repnz
scas
aas
cmp
arpl
dec
add
out
xchg
ror
and
xor
gs
or
sub
fdiv
enter
test
and
sub
es
outs
jp
add
shl
fstp
aas
mov
aam
push
fwait
xor
dec
mul
dec
int3
dec
mov
mov
lock
pop
fcom
jbe
ins
adc
movs
fisubr
xchg
inc
adc
inc
mov
outs
and
pop
ficom
cmp
es
fisubr
push
xchg
push
fwait
imul
pushf
or
push
loope
(bad)
and
idiv
cmp
loop
mul
imul
adc
pop
arpl
dec
sub
out
std
adc
mov
jne
and
je
adc
aad
jns
icebp
push
and
idiv
sbb
xor
inc
inc
dec
xor
push
push
hlt
and
sbb
or
mov
jne
add
aas
stos
and
jno
shl
ins
test
scas
inc
and
gs
dec
cmp
mov
sub
mov
dec
adc
shl
mov
jb
mov
pop
es
stc
dec
sbb
sub
inc
cwde
pop
daa
pop
inc
xchg
push
dec
lea
pcmpgtb
mov
aad
and
dec
mov
out
cmps
stos
scas
push
call
dec
loop
and
lods
cmp
cmp
push
pop
dec
arpl
mov
xchg
pop
pop
ss
mov
jmp
mov
mov
lods
fidiv
shl
add
daa
(bad)
cmp
push
paddq
mov
mov
(bad)
cmp
push
cmp
mov
push
mov
adc
mov
pop
jp
xor
sahf
(bad)
fstp
and
call
call
xchg
push
push
in
sahf
out
jp
push
dec
mov
imul
ret
mov
jnp
sti
sub
sbb
pop
popa
icebp
sub
dec
xchg
sbb
std
jl
bound
movs
cmp
les
outs
in
sbb
mov
mov
call
sti
test
js
jmp
mov
jge
pop
and
(bad)
add
inc
xor
hlt
sbb
mov
mov
xor
or
pop
or
inc
mov
mov
sub
mov
mov
or
retf
mov
xchg
mov
int
popf
stos
pop
out
push
mov
lea
dec
in
jbe
dec
mov
lahf
xor
push
pop
ins
pop
(bad)
call
mul
ret
pop
sub
ret
jmp
aam
jae
iret
popa
pop
into
shl
fnstsw
inc
xor
xor
and
push
test
es
sbb
mov
dec
mov
stos
xor
push
xor
xor
mov
aas
sahf
lahf
jmp
sbb
mov
dec
ja
sbb
mov
mov
dec
movs
daa
rcr
mov
mov
cmps
push
iret
inc
push
repnz
or
and
stos
pop
xor
and
cwde
xor
dec
hlt
or
dec
sbb
mov
sbb
adc
xor
xor
sub
aam
sbb
nop
xor
mov
dec
in
imul
sub
or
xchg
retf
adc
push
dec
xor
inc
ret
movs
xlat
mov
sbb
mov
or
cmp
or
xor
popf
xor
mov
mov
movs
movs
add
fstp
xchg
aas
cs
add
frstor
daa
jg
sub
mov
out
in
or
mov
dec
clc
mov
xrelease
repz
out
pushf
(bad)
cmc
jl
mov
inc
and
loope
xchg
in
lock
dec
cld
fs
ret
fcomp
shr
jp
mov
lahf
xlat
jge
bswap
addr16
out
cwde
outs
inc
retf
mov
cld
dec
adc
push
adc
ret
(bad)
fisubr
mov
das
or
fcomp
test
daa
and
adc
pop
clc
dec
pop
out
outs
sbb
mov
push
push
mov
les
cli
dec
bnd
repz
sub
mov
xchg
and
pop
inc
sub
xor
je
outs
(bad)
aad
sbb
mov
shl
ja
jmp
push
sub
stos
pusha
enter
movs
xchg
shl
sub
xor
mov
je
sub
add
call
adc
cli
dec
jl
push
dec
sbb
ja
mov
mov
aam
mov
or
cmps
fsub
outs
pop
test
mov
pop
sub
inc
pop
int
lock
dec
nop
mov
cmps
push
rcr
cmp
xchg
es
fstp
popa
mov
push
mov
add
pop
or
mov
scas
jmp
ja
pop
outs
and
or
ss
pusha
cmp
aad
stos
mov
nop
outs
mov
dec
fadd
lods
lods
div
or
cmp
movs
pusha
push
adc
xchg
outs
jbe
sub
cmp
add
enter
pop
fmul
mov
pop
(bad)
ficomp
mov
xchg
or
dec
out
and
sbb
fld
scas
dec
and
sbb
pop
fst
mov
std
and
fwait
retf
push
(bad)
sbb
adc
(bad)
loope
jb
rep
mov
mov
jmp
mov
adc
push
je
xor
jmp
and
pusha
push
stc
jmp
xchg
or
fistp
imul
jl
pop
mov
out
std
rcr
call
xor
or
mul
fs
push
xor
fwait
push
inc
(bad)
cmp
into
jmp
adc
sub
jns
retf
jae
push
mov
sbb
pushf
or
stc
daa
(bad)
scas
into
daa
jb
enter
shl
mov
and
mov
lods
or
les
push
dec
sbb
dec
mov
xor
cdq
pusha
mov
adc
sbb
into
outs
inc
push
mov
movs
pop
pop
fbstp
pop
mov
(bad)
stos
cmps
ret
call
cmp
xchg
fst
nop
jne
lods
or
xchg
pop
imul
sti
pop
dec
shr
mov
mov
pop
aas
clc
stc
in
in
cmp
xchg
push
add
scas
lea
xor
lds
mov
in
mul
dec
cdq
cmp
pop
jae
in
shl
push
push
mov
(bad)
in
dec
dec
push
out
mov
xchg
js
aam
dec
cmp
adc
pop
inc
retf
mov
movs
(bad)
ja
mov
xchg
mov
mov
xor
stc
cmp
loop
and
into
jge
sub
jno
xchg
aam
stos
add
inc
xlat
call
inc
add
arpl
fld
neg
je
push
ret
popf
imul
icebp
sbb
fnstcw
mov
and
pop
mov
mov
loope
mov
jmp
std
mov
cld
add
cli
enter
and
movs
clc
arpl
dec
add
dec
dec
xchg
jmp
out
push
jo
aam
jle
call
aam
ins
repz
les
add
in
inc
(bad)
cwde
out
cli
xchg
test
call
push
mov
pop
(bad)
jne
push
movs
ins
sub
stc
sub
mov
or
cmps
inc
or
mov
daa
jle
rol
add
add
mov
icebp
aas
jge
jp
fwait
sbb
sbb
lods
inc
and
pop
jmp
mov
imul
sar
push
pop
daa
scas
cmp
data16
add
(bad)
or
pop
cmps
sbb
dec
rcr
hlt
int3
adc
adc
test
dec
inc
movs
sub
adc
sbb
dec
mov
add
retf
mov
out
repz
mov
cld
and
rcl
ins
inc
outs
movs
sbb
add
les
mov
push
jl
test
addr16
xor
pop
lods
repnz
push
sbb
sahf
in
movs
sbb
jg
div
mov
fnstcw
inc
in
fimul
mov
mov
xchg
imul
cmps
sti
(bad)
fmul
push
mov
jb
repz
dec
sub
inc
mov
add
sbb
(bad)
inc
or
pop
cmp
cmp
add
or
outs
mov
push
leave
sar
sub
inc
xor
shl
les
mov
rcr
push
loopne
xchg
add
mov
dec
mov
retf
js
mov
or
mov
pusha
or
xor
sub
xor
cmp
(bad)
jno
lods
imul
add
push
add
icebp
xchg
sub
and
test
mov
movs
add
in
inc
cmp
fadd
iret
jno
dec
mov
pop
popa
jno
fsubr
fdiv
mov
and
push
stos
arpl
adc
cmp
dec
sbb
pop
dec
cmp
xor
imul
jno
mov
hlt
push
push
pop
iret
adc
leave
xchg
lahf
pop
lods
jmp
stc
push
jge
jp
and
push
cmc
adc
inc
shl
jp
and
ficom
scas
and
push
push
xor
scas
out
dec
call
popa
jp
(bad)
aad
rcr
mov
inc
xchg
cmps
invd
adc
inc
mov
pusha
mov
cmps
xchg
rol
(bad)
ins
hlt
(bad)
nop
pop
jne
cmp
mov
and
test
int
pusha
mov
jns
push
xor
xor
jle
rol
dec
mov
data16
aad
xor
aad
pushf
jnp
icebp
dec
scas
pop
fdiv
retf
out
add
(bad)
xchg
retf
outs
adc
rcl
push
mov
pop
dec
das
leave
push
xor
cmp
ds
sbb
mov
dec
and
mov
inc
shld
inc
cmp
cmp
(bad)
sar
(bad)
or
aaa
es
and
dec
nop
xor
mov
sub
inc
repz
(bad)
dec
jmp
repnz
rcr
pop
ins
push
dec
push
js
mov
cmc
adc
push
imul
ins
(bad)
lods
pop
pop
mov
data16
mov
mov
pop
lock
jle
mov
ins
test
fidivr
mov
lea
stos
pop
ret
fld
int
pop
ds
jp
xor
fcmovbe
fnsave
and
sbb
add
mov
mov
(bad)
xlat
ss
jbe
and
jmp
adc
addr16
mov
mov
or
cmp
jne
dec
shr
lods
jge
pop
cld
push
aaa
sbb
push
sti
daa
dec
add
imul
jbe
fistp
xor
push
xchg
loope
and
mov
enter
je
mov
fst
sti
ds
mov
sbb
inc
ds
ror
sub
popa
cmps
std
jecxz
retf
outs
xchg
jno
mov
in
jbe
nop
in
mov
(bad)
fwait
call
sbb
jmp
in
push
daa
or
js
and
popf
and
dec
mov
inc
in
and
rcl
add
cdq
into
daa
test
xchg
test
push
mov
cmp
mov
and
sub
inc
and
sti
test
nop
cld
add
leave
and
gs
fwait
shl
xchg
xchg
jl
sbb
mov
push
(bad)
fcomi
adc
mov
jnp
loope
lahf
dec
fcom
ror
into
rcr
loopne
push
mov
out
jmp
mov
(bad)
cld
in
and
mov
movs
push
repz
cs
fiadd
xchg
pop
fnstsw
(bad)
rcr
dec
aam
out
inc
retf
pop
xchg
in
pop
call
lods
add
inc
push
mov
mov
adc
sbb
jns
(bad)
loope
push
push
and
cmp
mov
cdq
movs
in
ja
dec
add
dec
call
or
xor
mov
or
sbb
gs
rcr
mov
ret
adc
stc
out
fistp
inc
cmps
lods
imul
out
or
ja
xlat
sub
int3
lods
ret
loop
retf
lds
popf
sub
mov
ins
jns
jl
mov
mov
into
pop
xor
xor
cmp
repz
test
push
loopne
(bad)
mov
sub
in
mov
adc
adc
xchg
lods
nop
inc
lods
xor
xor
jbe
in
jbe
pop
fdiv
sbb
sbb
cmp
sub
push
xchg
enter
cmp
cmps
call
das
mov
mov
stos
stc
sbb
add
mov
inc
inc
xor
das
xchg
jo
js
cs
and
jne
shl
call
pop
jge
mov
pop
or
dec
xor
popa
xchg
test
mov
arpl
push
add
jbe
shr
scas
clc
mov
xchg
div
int
out
imul
cmp
fs
mov
pusha
(bad)
scas
xchg
outs
jb
inc
rcl
inc
fstp
cmp
test
cwde
push
lock
test
xor
mov
(bad)
xor
nop
sub
icebp
fmul
sub
aam
push
adc
sub
outs
sbb
sub
push
cmp
push
xchg
sub
xlat
cwde
jmp
inc
mov
push
xor
pop
ret
pushf
clc
mov
call
push
clc
cmps
xchg
cli
fld
clc
jg
repnz
and
inc
(bad)
dec
xlat
out
fcom
aam
adc
sub
xor
xor
add
push
or
mov
dec
out
fsubr
inc
hlt
sbb
das
stos
(bad)
into
cmp
enter
not
aad
push
push
loop
add
sub
mov
aam
out
jmp
in
sub
mov
int3
je
(bad)
cmp
repz
pop
neg
push
sahf
fisttp
(bad)
dec
pop
and
cdq
jnp
push
(bad)
aam
mov
ins
in
and
leave
push
outs
xor
inc
adc
dec
out
inc
and
aas
in
icebp
lods
push
pushf
ins
stos
aas
ds
inc
add
mov
sbb
push
pop
fadd
in
or
xor
or
mov
test
hlt
xor
mov
mov
retf
pop
jbe
repz
xor
mov
pop
pop
xor
stc
gs
std
in
mov
dec
cmps
adc
mov
inc
dec
jo
xchg
cmp
(bad)
rcl
outs
jnp
adc
fiadd
clc
shl
inc
cvtps2pi
jp
cmps
jns
pusha
fcom
(bad)
cmp
jmp
jle
mov
(bad)
loope
je
fdiv
lds
cmp
test
xor
cmp
pop
shr
rol
inc
fist
retf
dec
inc
jo
aam
out
xchg
or
adc
jp
aaa
test
push
aaa
es
xchg
xchg
pop
inc
inc
xchg
cdq
mov
jl
lock
xchg
js
mov
(bad)
push
inc
inc
int
lock
jmp
imul
movs
fimul
inc
rcr
(bad)
repnz
mov
(bad)
fmul
dec
(bad)
call
cs
fmul
or
not
sub
dec
outs
cwde
pop
mov
sub
stc
(bad)
imul
arpl
jle
dec
and
dec
dec
std
cmc
es
xchg
adc
jo
movs
inc
shl
xor
data16
repnz
rol
mov
fucomi
sti
sbb
push
pop
repnz
xchg
mov
dec
jmp
add
fnstenv
jg
into
ja
mov
clc
inc
mov
enter
push
aad
scas
test
out
call
(bad)
cmp
sbb
add
rcl
mov
in
push
sahf
cmps
xor
inc
and
cmc
and
lods
scas
daa
stos
inc
shl
mov
in
fnstsw
push
inc
daa
fmul
(bad)
std
mov
pusha
add
xor
jbe
test
inc
movs
xor
(bad)
cld
add
add
scas
cwde
test
dec
fcomp
push
int3
test
in
test
call
pop
or
test
push
and
mov
ds
inc
push
sbb
sub
jns
pop
and
dec
sbb
je
std
jle
mov
mov
mov
fild
stc
(bad)
aam
movs
xor
sti
imul
rcr
das
clc
or
cdq
out
lahf
push
push
icebp
addr16
cmp
mov
or
mov
xchg
add
mov
xor
pop
les
xor
and
js
shl
lahf
push
mov
and
pop
ja
or
xor
cmp
cwde
and
ficomp
adc
data16
outs
hlt
es
sbb
push
or
fs
daa
and
outs
sahf
adc
or
push
lock
scas
sub
ins
mov
aas
xor
out
or
and
(bad)
repnz
jg
or
call
mov
or
iret
xchg
ficom
popa
test
add
pop
cmp
sahf
sbb
test
mov
je
mov
in
stos
cmp
sbb
fidiv
and
or
(bad)
push
jns
mov
mov
pushf
push
mov
mov
iret
adc
ins
jmp
sahf
aam
xchg
rcl
xor
xchg
mov
sbb
daa
mov
jg
dec
jns
xchg
popa
jb
es
cmp
mov
repnz
inc
inc
mov
setae
cld
and
or
ret
(bad)
or
outs
cmps
mov
fisttp
test
clc
inc
(bad)
fcomp
outs
jne
push
cwde
daa
xchg
mov
sbb
add
push
lods
lea
xor
call
dec
sub
in
push
into
gs
sti
pushf
xchg
je
xor
lods
cmp
out
pop
gs
mov
icebp
adc
cmps
mov
scas
pop
add
outs
scas
adc
xchg
int3
cmps
pop
push
js
lds
mov
ror
arpl
(bad)
ffree
mov
inc
xchg
or
cld
sbb
(bad)
je
call
xor
pop
and
retf
addr16
imul
(bad)
shr
xlat
in
mov
adc
rol
pop
es
popa
cmp
jb
icebp
pop
repz
and
int
dec
inc
fcomp
cmp
movs
xchg
mov
jmp
mov
dec
xchg
pusha
test
dec
iret
stos
sub
mov
movs
call
mov
mov
mov
mov
jmp
xchg
stos
mov
sti
adc
daa
rcr
push
dec
push
iret
call
inc
fst
stos
cmp
pop
adc
ins
xor
shl
or
jle
sti
and
js
in
out
and
in
pop
rcr
(bad)
adc
hlt
add
in
cmp
mov
xor
popf
(bad)
(bad)
jmp
sbb
fld
inc
xor
push
pop
loope
in
xchg
xor
fstp
push
out
jg
je
stos
mov
fs
not
in
in
arpl
push
sbb
jmp
test
fsub
hlt
adc
jmp
cmps
(bad)
(bad)
mov
and
pop
mov
push
mov
fdiv
addr16
pop
push
rcr
rcr
cmp
xor
cmp
xor
push
and
adc
ja
xchg
mov
push
pop
scas
mov
mov
(bad)
cmp
sbb
pop
fstp
out
rcr
adc
mov
jle
mov
mov
jmp
and
fiadd
mov
cmps
inc
xchg
mov
jbe
out
int
cmps
in
or
int3
stos
mov
xor
shl
cmp
imul
mov
sub
scas
or
shr
ins
aam
pop
mov
leave
(bad)
xor
hlt
aaa
jl
mov
mov
movs
push
div
leave
(bad)
fld
arpl
add
test
je
push
neg
mov
pusha
add
test
xor
and
or
jb
(bad)
popf
fldenv
loopne
xor
sub
(bad)
push
push
cmps
sbb
call
or
inc
repnz
mov
repnz
in
cdq
ja
dec
push
lock
fstp
fs
lahf
add
fwait
add
push
lds
int
cmp
mov
push
mov
fwait
push
inc
sti
outs
push
ret
push
xchg
push
xchg
(bad)
shr
pusha
aam
or
xor
jge
sbb
dec
mov
stos
mov
in
and
mov
jl
in
cmps
add
popf
cmp
loop
xor
push
add
sar
jne
(bad)
sbb
mov
jbe
ins
push
jbe
pop
and
dec
cmp
movs
scas
jecxz
movs
dec
ficom
or
(bad)
arpl
imul
cmc
bound
sbb
aaa
sti
mov
adc
cs
mov
loop
cs
cmp
cmp
and
jp
cdq
mov
mov
ja
jge
pop
cli
jge
push
adc
inc
shr
(bad)
jle
pop
nop/reserved
pop
iret
or
adc
or
sbb
mov
sar
or
jno
pop
mov
sub
dec
pusha
repnz
cmp
scas
aaa
clc
xchg
fimul
sub
inc
pop
sub
add
shr
in
loopne
cli
xor
inc
or
mov
cmp
movs
pusha
xchg
rcr
jl
add
mov
push
mov
mov
out
sti
mov
xchg
push
es
sub
lds
in
cmp
test
sahf
dec
stos
not
inc
jmp
jge
inc
sub
mov
nop
shl
leave
ret
cmc
das
add
(bad)
retf
es
shl
(bad)
shl
repnz
inc
dec
dec
lea
jecxz
cmps
pop
div
sahf
sbb
mov
in
scas
sbb
push
xchg
pushf
sub
pop
ret
xlat
push
jge
jle
mov
xchg
cmp
pop
adc
(bad)
sub
loop
in
and
adc
mov
mov
dec
dec
out
cmp
mov
pop
(bad)
jmp
ja
mov
or
or
fdiv
mov
push
and
sar
pop
cmc
test
lea
dec
mov
xor
sub
fist
sbb
add
cs
int3
push
clc
sbb
out
retf
loope
push
adc
add
sub
mov
cmp
push
mov
retf
mov
dec
fistp
inc
aas
inc
gs
cmp
dec
cli
dec
adc
call
jmp
faddp
mov
inc
js
mov
xchg
sbb
ret
fs
sbb
call
mov
data16
jge
retf
add
fadd
leave
adc
push
test
ins
or
mov
cmp
xchg
std
hlt
pop
mov
adc
jb
xchg
add
push
xchg
pop
jmp
jbe
ficom
mov
stc
jb
das
pop
movs
jae
pusha
out
scas
ror
fist
retf
jmp
call
fsubr
mov
dec
int
rol
adc
lahf
leave
pop
sahf
jmp
sub
push
mov
xor
dec
mov
mov
pop
mul
enter
and
repnz
sbb
jno
les
cmc
cmp
cli
jge
mov
pop
push
imul
push
jnp
cmp
cwde
dec
pushf
sub
cmp
das
fs
je
xchg
pusha
lods
lods
sub
ins
or
xchg
cmp
adc
push
dec
dec
sub
test
inc
xchg
cs
dec
retf
fmulp
jecxz
adc
adc
push
xor
mov
pop
outs
addr16
mov
mov
inc
imul
pop
xor
or
pop
cmp
cli
or
jne
test
mov
mov
xor
cmps
arpl
repnz
inc
adc
mov
inc
data16
dec
ins
mov
sahf
push
or
dec
popf
jl
sahf
adc
mov
imul
aaa
stos
sti
sbb
cmps
xor
ds
add
not
add
and
fs
fidiv
sbb
call
enter
or
inc
pop
cmp
in
cmp
push
xor
pop
ret
inc
outs
and
jle
mov
sub
hlt
loope
jbe
add
sub
xor
loope
pop
popa
adc
std
cmp
lock
cdq
call
and
sub
cmps
ins
xlat
cmc
push
sbb
add
add
clc
stos
test
test
sbb
adc
mov
mov
and
cwde
mov
fld
xchg
xor
jl
and
sbb
mov
je
mov
pop
mov
(bad)
xchg
(bad)
cwde
mov
and
test
ins
sbb
fnstenv
retf
repnz
and
movs
cmp
sbb
mov
dec
jae
ins
jae
outs
mov
movs
cmps
ffree
mov
add
jb
mov
call
pop
mov
push
add
cmps
sbb
shr
jae
dec
xor
aam
mov
sbb
mov
cmp
pop
mov
pop
test
xor
mov
int3
in
mov
gs
loop
add
out
sub
movs
mov
cmp
push
mov
std
push
mov
jecxz
push
sbb
(bad)
fwait
ret
(bad)
pop
pop
xchg
shl
inc
psraw
outs
test
fmul
nop
gs
cmps
pop
inc
sbb
adc
mov
push
or
jb
cmp
pop
ror
stos
mov
mov
mov
jmp
mov
sub
cmp
shl
retf
pop
loopne
cmps
or
icebp
cmp
push
pmulhw
xor
inc
lds
cmp
inc
push
sahf
mov
xor
dec
mov
stc
pop
sub
xchg
clc
aas
xor
dec
lahf
repz
push
inc
mov
ins
stc
gs
mov
mov
cmps
dec
dec
mul
out
loop
mov
test
push
inc
int3
adc
fucom
aas
fsubr
jno
xchg
enter
inc
(bad)
xor
(bad)
clc
mov
icebp
repnz
add
sub
mov
leave
(bad)
and
addr16
mov
jl
test
jo
pop
(bad)
and
adc
fwait
inc
int3
aas
lock
xor
mov
lods
daa
mov
jl
xor
inc
sbb
pop
leave
cld
movs
repnz
adc
hlt
sbb
xchg
cdq
push
push
mov
adc
sbb
jecxz
cld
or
test
lds
mov
push
push
mov
fs
movs
jb
ret
jl
dec
xor
and
icebp
jge
xor
cwde
iret
cmps
pop
ja
pop
xor
add
jo
inc
inc
sbb
nop
addr16
movs
jo
les
cwde
sbb
ficom
push
push
fsub
ins
inc
bound
imul
icebp
and
nop
rcl
clc
nop
xor
call
lds
popa
sysret
sub
and
in
or
sub
inc
lock
scas
stos
or
fsubr
or
cmp
call
cmp
les
or
out
daa
(bad)
dec
xchg
sub
push
lock
fwait
hlt
inc
adc
das
je
mov
out
inc
inc
jl
mov
loopne
xor
fldenv
pop
xor
pop
mov
mov
xor
mov
adc
imul
sub
lock
dec
fcom
scas
loope
loopne
jle
adc
shr
hlt
cmc
sub
stc
ror
fadd
leave
or
xchg
mov
adc
test
in
mov
push
jmp
test
pop
in
(bad)
lods
pop
push
out
jge
jle
loope
sub
sub
dec
push
repnz
mov
out
sub
jle
sbb
out
cs
cmps
int3
sysret
jmp
sub
jmp
inc
bound
inc
jns
dec
mov
sub
out
das
mov
lods
int3
cs
test
mov
and
test
xchg
arpl
push
inc
mov
idiv
mov
jb
ss
loopne
and
cmp
mov
cwde
jp
xor
not
inc
sub
retf
xchg
add
rol
adc
sub
mov
retf
comiss
xchg
in
dec
cld
pop
and
sub
(bad)
fcom
pop
in
xlat
push
pop
xchg
fcmovne
not
push
imul
retf
xchg
inc
out
ja
or
das
or
mov
mov
repz
lods
jmp
or
movs
aaa
neg
mov
outs
call
xchg
test
xor
sahf
xchg
ja
pop
push
rcr
pop
int
cmp
jle
adc
cmp
adc
arpl
inc
sbb
movs
jecxz
adc
sar
in
in
jns
or
outs
pusha
in
inc
push
addr16
mov
xor
add
inc
or
in
and
bound
mov
mov
aad
xor
inc
in
loope
sub
leave
lock
sub
outs
inc
pop
sbb
add
fidiv
sub
and
lea
fmul
or
test
daa
adc
or
jns
jge
mov
outs
shl
call
jp
ret
cld
hlt
cmp
mov
mov
jecxz
lods
mov
xchg
shl
mov
adc
add
and
and
idiv
push
pop
inc
mov
lahf
data16
mov
bound
ss
(bad)
fild
or
and
test
icebp
in
imul
or
jbe
in
mov
mov
pop
stos
mov
pushf
inc
sbb
in
mov
movs
pushw
es
mov
ror
lea
inc
mov
fadd
jmp
loopne
fs
and
xchg
stc
or
mov
test
mov
jo
jns
add
jb
icebp
sbb
test
popf
xchg
lods
sub
mov
mov
push
ja
jne
push
pop
push
sar
push
mov
das
dec
sub
sbb
dec
mov
mov
adc
std
fbstp
dec
mov
mov
daa
dec
mov
sbb
retf
add
push
cmc
cs
call
inc
ss
cmp
cli
cmp
xchg
sub
(bad)
jmp
cmc
ficom
mov
pop
adc
and
aaa
mov
dec
dec
mov
add
stos
out
dec
std
std
adc
out
cmp
out
bound
arpl
(bad)
xchg
push
es
sub
aam
and
ror
jns
xor
arpl
call
fbld
jge
lea
or
cmp
cmp
ins
movs
(bad)
mov
(bad)
push
jno
(bad)
loop
call
push
xchg
scas
fld
jo
jmp
movs
jb
rol
in
popa
jmp
jno
mov
or
dec
dec
add
inc
stos
dec
js
rcr
in
clc
arpl
sbb
div
sub
scas
les
clc
daa
dec
xchg
and
(bad)
stos
out
shl
into
clc
retf
push
jae
mov
cmp
and
pop
or
outs
cmp
adc
and
jb
or
adc
or
loopne
out
lods
retf
lahf
stos
popa
jbe
jmp
and
outs
mov
nop
mov
cmp
test
mov
shr
stos
pop
iret
dec
cmps
or
(bad)
aad
loop
rcl
cwde
(bad)
mov
sbb
(bad)
loopne
ja
adc
pop
mov
add
mov
loop
(bad)
in
(bad)
pop
adc
xlat
shl
fcom
sbb
(bad)
push
inc
jae
enter
into
leave
xchg
dec
mov
scas
clc
jb
mov
jp
or
scas
fidiv
fdivr
push
mov
mov
ret
or
inc
sti
in
scas
push
xchg
pop
dec
xchg
mov
test
jbe
das
leave
mov
mov
xlat
js
mov
lahf
jae
adc
(bad)
xchg
adc
loope
pushf
mov
adc
(bad)
sub
inc
out
xchg
pushf
push
cmp
sbb
cmp
mov
lock
jo
stc
and
addr16
push
outs
(bad)
loopne
and
pushf
test
sub
xor
fs
mov
nop
ja
div
cmp
and
inc
int
jb
loopne
cmp
jo
not
add
loope
(bad)
loope
xchg
xlat
adc
test
xor
mov
mov
or
jp
jno
push
arpl
mov
push
in
int3
adc
cdq
pop
fst
mov
fbld
outs
lahf
pushf
test
add
mov
lods
sbb
test
add
pop
mov
stc
and
dec
push
xor
jnp
test
xchg
out
add
mov
pop
mov
bound
ror
jle
push
sti
jmp
leave
dec
(bad)
sbb
inc
add
mov
jbe
sar
fdiv
popf
xor
ror
pop
shl
mov
mov
sbb
jb
mov
sub
cmp
sub
add
add
dec
hlt
mov
out
inc
aas
and
adc
frndint
pop
pop
cmp
adc
gs
jg
push
mov
mov
push
dec
cld
adc
or
mov
dec
jo
or
jae
cmps
dec
ror
not
lds
bound
in
jbe
push
(bad)
ja
(bad)
fst
cwde
gs
loopne
mov
inc
dec
outs
repz
xchg
test
out
cwde
push
rol
pop
aas
jmp
lahf
inc
pop
add
push
jg
arpl
clc
test
pop
push
sub
ja
xlat
inc
ret
jmp
cli
pusha
scas
xchg
cmp
pop
push
mov
push
inc
jns
inc
cmp
test
cmp
sub
or
inc
loop
jmp
stos
xor
cwde
outs
hlt
jmp
push
dec
scas
jnp
adc
xor
inc
push
xchg
(bad)
and
(bad)
push
and
das
ret
fcomi
es
xchg
in
xor
add
pop
out
rcr
fimul
(bad)
sti
mov
add
adc
jno
adc
push
mov
push
loop
(bad)
aad
ret
fisttp
enter
pop
pop
loop
jecxz
cmc
cmc
jmp
in
mov
not
mov
outs
cmp
push
int3
and
ds
sbb
neg
add
sahf
inc
mov
dec
xor
jmp
sub
(bad)
xchg
aad
daa
mov
push
popa
mov
jne
loop
mov
pop
add
add
pop
test
out
add
call
scas
lea
mov
retf
push
add
jbe
inc
pop
sub
das
movs
aad
xchg
adc
not
enter
mov
cmp
icebp
cmp
mov
fldcw
in
sahf
adc
into
pop
add
rcl
mov
test
xor
sbb
push
and
xor
mov
fcomp
aas
sbb
in
jno
cmp
rcl
enter
je
pop
cwde
pushf
mov
aad
js
push
cld
and
push
sbb
cmp
stc
into
rcl
nop
inc
adc
shr
dec
sbb
cmp
jg
mov
pop
mov
push
(bad)
repnz
lds
dec
dec
sub
mov
push
rol
std
dec
lods
jae
jmp
ins
cmp
jnp
repnz
cli
inc
cmp
pop
cld
mov
out
or
shl
push
or
pop
retf
gs
imul
cmp
aad
xchg
mov
ret
jns
out
imul
jg
mov
push
push
mov
mov
push
repnz
xchg
in
xor
es
sub
pop
xchg
lock
jle
mov
ins
cmp
out
in
sub
dec
push
scas
cmp
adc
dec
in
aas
stos
add
sbb
inc
mov
loop
mov
retf
mov
jmp
or
xor
inc
mov
clc
and
dec
aam
repz
loopne
lods
sub
lea
sbb
add
push
fistp
lahf
popa
cmps
mov
into
push
push
inc
jp
cmp
cmp
popf
sub
call
jae
push
ficomp
pop
stc
pop
mov
sub
mov
gs
cwde
add
pop
mov
push
sub
in
adc
add
or
mov
jl
pusha
push
imul
sbb
inc
orps
in
jmp
les
inc
or
sets
xor
push
pavgw
mov
mov
mov
pop
gs
scas
mul
jae
jmp
es
test
or
cld
mov
mov
sbb
movs
jle
push
or
xor
jecxz
pusha
and
scas
out
add
out
adc
loope
pop
add
and
out
inc
std
(bad)
mov
inc
out
or
aad
jbe
pop
and
add
ret
aam
scas
rol
dec
aad
stos
xchg
push
mov
fbld
sub
aam
and
int
stos
cld
es
mov
ret
push
xchg
ja
movs
sub
imul
popf
out
mov
(bad)
lock
pop
add
sub
call
mov
fidivr
hlt
imul
int3
dec
jne
fs
jb
call
hlt
mov
or
sti
adc
ja
lods
and
stos
jo
mov
push
mov
inc
push
sbb
dec
cmp
div
and
(bad)
jae
pop
pop
out
jmp
push
pop
inc
mov
jl
push
repz
aas
xchg
sub
xchg
add
leave
dec
retf
aaa
outs
jmp
pop
pop
mov
inc
xchg
dec
and
dec
xor
(bad)
repnz
outs
rcl
daa
xor
push
adc
xchg
fld
xchg
mov
iret
mov
adc
dec
dec
pop
call
dec
lods
or
test
jne
add
add
cmp
in
or
add
xchg
mov
inc
sbb
inc
cmp
and
mov
and
jge
fwait
popf
enter
pop
iret
add
adc
dec
fwait
push
dec
stc
push
lods
fs
retf
mov
adc
adc
inc
pop
aaa
std
gs
out
jmp
jp
in
xor
shl
or
in
ss
shl
je
pusha
jb
lds
mov
hlt
bound
cmc
inc
fisttp
test
hlt
icebp
mov
loop
and
sub
es
fcomi
inc
mov
pushf
pop
div
scas
push
hlt
dec
sbb
mov
sub
outs
enter
addr16
popa
adc
jecxz
xchg
or
test
fldcw
mov
ss
pop
pop
mov
or
cwde
clts
jle
outs
ret
dec
jbe
cmp
or
clc
cwde
ins
sbb
push
or
pop
jg
mov
imul
cwde
sub
xchg
xchg
test
mov
rol
and
data16
out
adc
(bad)
cdq
icebp
pop
ret
push
gs
test
jl
ffree
mov
jg
cmp
(bad)
adc
push
xchg
or
lods
sub
xchg
add
jnp
lods
pop
fbstp
aam
pop
and
jp
int
sub
in
pop
adc
lock
aas
out
js
mov
arpl
inc
pop
add
or
pop
aad
mov
mov
xchg
retf
xchg
push
mov
int3
sub
pop
push
fistp
ret
cmp
jne
clc
mov
sub
and
outs
sti
sar
test
jb
ss
(bad)
cld
pextrw
and
push
(bad)
retf
jns
push
cmps
pushf
jge
ficomp
inc
jns
sbb
pop
add
aad
sub
pop
es
xor
sub
loopne
inc
mov
cmp
movs
aaa
add
js
out
sar
mov
push
xchg
pop
pop
jle
mov
mov
or
lods
push
xchg
int3
test
out
xchg
mov
popa
xor
sti
or
leave
cmps
(bad)
out
out
std
fbld
stc
fld
in
test
xchg
add
sub
nop
dec
sub
into
dec
push
fadd
jae
or
sbb
dec
xchg
mov
jb
cmps
inc
xchg
mov
cmp
loopne
das
mov
retf
add
xchg
inc
pop
push
sbb
imul
call
data16
dec
cmps
es
pop
cld
fdiv
cdq
xor
faddp
out
mov
fidiv
sbb
mov
adc
cmp
in
in
jno
lds
jmp
inc
sbb
add
and
cmc
or
xchg
mov
outs
mov
mov
adc
cmps
fimul
stos
cmps
fnsave
lods
(bad)
push
mov
nop
ret
mov
push
and
into
shl
inc
pusha
imul
pushf
and
scas
dec
pusha
into
inc
(bad)
jb
xchg
dec
mov
cmps
or
imul
outs
bnd
pop
adc
cmps
sbb
or
sub
jae
adc
xchg
int
popf
std
or
inc
push
push
hlt
adc
inc
ja
out
dec
dec
cmp
clc
dec
mov
mov
inc
adc
mov
xchg
into
out
inc
jne
jns
ss
pop
jns
fwait
sbb
rcl
cmps
xor
adc
mov
movs
sub
fild
shl
adc
push
jns
inc
xor
call
es
cmps
sahf
bound
enter
and
mov
into
stc
fadd
mov
imul
push
sub
cmp
mov
adc
cmps
add
xchg
xchg
cmp
inc
or
add
scas
lahf
jg
dec
clc
ins
movs
mov
push
or
xchg
iret
in
mov
pop
out
rol
std
and
das
dec
xchg
test
popf
fcomp
xchg
cli
int3
cld
add
adc
bound
ins
pop
aas
sbb
or
js
(bad)
mov
or
add
mov
(bad)
sub
test
jmp
xor
into
adc
add
cmps
(bad)
sub
or
mov
sbb
fld
arpl
lahf
aas
int3
popf
iret
jg
dec
add
cmp
pusha
sar
psllq
and
sbb
pop
pushf
xor
pusha
shl
sub
jnp
retf
jo
sar
or
sub
inc
push
or
push
and
mov
pop
xchg
sbb
sti
pop
popa
leave
and
or
or
sub
mov
(bad)
repz
jge
jmp
fcom
mov
js
scas
dec
and
xor
mul
adc
fwait
scas
sahf
xchg
call
pop
jns
push
pop
adc
pop
xchg
addr16
adc
imul
nop
call
adc
pop
sub
test
push
push
fdivp
out
or
sub
mov
jg
(bad)
sub
adc
mov
or
jne
data16
inc
mov
push
es
imul
mov
ss
and
aas
push
movs
movs
jmp
pushf
cmc
xchg
icebp
out
and
stc
pop
ja
bound
test
xchg
adc
xchg
mov
lock
xchg
jne
ret
mov
aam
sbb
data16
or
jp
sub
lods
dec
ins
loope
ins
int3
mov
lock
(bad)
and
push
cwde
add
pop
hlt
push
mov
shl
jb
test
fwait
dec
push
loope
add
stos
inc
mov
jmp
imul
mov
pushf
clc
jge
(bad)
cwde
pop
add
push
add
xor
cmp
mov
mov
lahf
xchg
cmps
ss
lock
les
in
pop
mov
dec
outs
adc
cdq
add
jmp
cdq
out
aam
inc
cmp
rep
xor
lahf
lahf
jne
ror
mov
inc
shl
retf
es
das
loop
out
pushf
cmc
mov
pop
leave
packsswb
les
cmps
mov
in
inc
test
sbb
sti
es
cmp
push
push
cmp
(bad)
shr
std
push
mov
out
mov
aad
jo
inc
into
sti
dec
stos
jns
nop
into
and
xchg
cli
movs
pop
lahf
test
ret
out
outs
retf
nop
pop
shl
pop
jecxz
sti
rcr
or
sbb
sub
pop
test
push
xor
cdq
cli
sti
jno
cmp
je
inc
add
adc
add
add
sub
cs
jg
or
(bad)
pop
das
in
push
shl
ins
in
push
push
lods
int
adc
push
xchg
mov
jae
imul
sti
push
addr16
fidivr
cld
mov
adc
lods
jae
mov
xchg
jmp
push
out
xchg
sub
cld
mov
or
stc
dec
xchg
lea
inc
ds
in
out
idiv
retf
sub
xor
xchg
mov
rol
jmp
cwde
add
ins
data16
dec
xchg
adc
iret
out
and
in
sahf
xchg
pop
fild
and
shl
adc
push
cmp
adc
dec
dec
cmp
dec
push
mov
sbb
mov
scas
or
addr16
ins
and
lds
dec
pop
jecxz
daa
jmp
popa
fcom
mov
out
and
adc
mov
pop
jecxz
xor
popa
cmp
aad
push
iret
inc
in
push
outs
nop
stos
js
ret
in
push
ds
and
in
mov
je
sti
or
cmp
sbb
or
stc
xchg
clc
movs
cmp
call
jbe
rcl
das
inc
mov
lods
push
pop
pop
out
jns
loope
mov
jbe
jmp
cld
push
arpl
(bad)
cmp
or
loopne
int3
sbb
movs
ss
dec
fdiv
jg
retf
sahf
fsub
sbb
cwde
inc
push
jb
rcr
pop
xchg
cmc
mov
pop
or
pop
mov
iret
cmp
xchg
(bad)
mov
pop
cmp
add
sub
xchg
xor
push
rol
mov
gs
sub
sbb
pop
imul
ds
sbb
test
xor
add
fmul
xchg
inc
push
or
push
inc
dec
pop
add
fsubrp
lahf
or
cmp
loopne
add
call
jmp
popf
jmp
xchg
mov
pop
pop
sub
jg
push
xor
mov
je
shl
repnz
(bad)
repnz
jmp
js
pop
mov
push
mov
(bad)
outs
xlat
fsubr
adc
cmps
inc
xor
out
pop
jns
cmc
ret
lods
cmc
lahf
iret
out
sbb
dec
pop
xor
stc
fcmovbe
bound
(bad)
ds
or
ins
push
dec
(bad)
sbb
mov
dec
add
add
icebp
scas
sar
pop
loop
ins
call
sub
sub
mov
enter
jg
xchg
fdiv
retf
aam
mov
adc
xor
push
jmp
dec
(bad)
and
pop
iret
int3
retf
xor
fmul
push
jp
sub
adc
repnz
cmp
and
aam
xor
cmps
inc
jge
pop
push
nop
and
mov
xor
in
dec
imul
jl
cmps
in
xor
jns
cld
ins
std
pop
mov
ret
je
addr16
push
ret
jmp
xor
gs
push
sbb
repnz
inc
or
icebp
mov
xchg
ds
pop
lods
push
dec
push
xchg
dec
and
push
sub
mov
mov
mov
in
cmp
mov
xchg
les
inc
lods
mov
shl
push
stos
fs
jb
push
mov
imul
jae
sub
and
in
fistp
in
cmp
mov
add
add
jne
not
push
(bad)
mov
push
addr16
xor
dec
push
scas
je
xor
shr
sar
mul
inc
cmps
call
ins
call
popf
loop
dec
in
sti
dec
ins
mov
push
xchg
jle
test
sub
or
sub
das
or
scas
movs
xor
pmulhuw
loopne
fsubr
and
inc
frstor
inc
jne
outs
sub
outs
sbb
or
adc
pushf
adc
cs
inc
stos
cmp
out
dec
neg
jo
sbb
daa
ja
aas
cdq
aas
jns
retf
add
mov
stos
add
cmps
mov
jbe
jae
xchg
dec
xchg
push
xlat
ins
mov
pop
cmp
jne
pop
hlt
mov
jb
mul
fst
mov
mov
bound
mov
sbb
stc
shl
mov
iret
inc
aad
xor
cli
dec
pop
jmp
xor
pop
jmp
jnp
mov
dec
cmp
es
dec
dec
push
sar
call
mov
jb
mov
pop
scas
scas
adc
xchg
pop
sbb
push
push
or
nop
mov
jge
cmc
push
inc
pop
aad
cmp
imul
mov
cwde
out
pop
and
add
imul
loop
retf
xor
daa
outs
sbb
scas
jno
add
ins
pop
xor
dec
or
pop
push
push
mov
sbb
pop
scas
test
fwait
aam
aam
mov
clc
iret
mov
push
(bad)
loopne
ret
call
or
ret
sahf
in
push
mov
mov
push
cmp
push
or
cmp
ins
xor
sbb
mov
hlt
scas
clc
mov
shl
adc
pop
iret
in
xchg
inc
mov
add
movs
cmps
sar
cmp
sub
dec
pop
ins
popa
mov
nop
iret
and
ret
cmova
out
das
repnz
mov
loop
test
repz
icebp
aaa
jbe
adc
jo
cmc
push
sub
sub
adc
dec
into
and
cli
cmps
push
sub
pop
xchg
pop
and
sbb
inc
dec
adc
pusha
add
arpl
mov
clc
lea
test
(bad)
mov
pop
pop
adc
jecxz
cli
jp
das
pop
xor
ror
arpl
pusha
sar
inc
jnp
call
lds
jp
xor
sbb
jge
jp
shl
jo
push
icebp
jno
dec
call
push
and
(bad)
xchg
inc
aas
adc
in
fisubr
or
dec
push
xor
or
repnz
data16
pusha
sti
imul
test
hlt
(bad)
xor
enter
movs
stos
mov
pop
jbe
and
adc
xor
lahf
dec
sbb
xchg
mov
sub
fcom
movs
shl
jbe
stos
iret
sbb
call
jl
stos
cmp
fcmovu
jp
(bad)
mov
mov
mov
push
clc
in
inc
pop
not
stos
add
shr
fst
adc
test
pop
jnp
scas
ss
mov
dec
ds
xchg
jecxz
imul
xchg
out
call
outs
and
xchg
push
pop
cwde
ins
int
inc
lahf
lea
add
mov
fisub
out
inc
imul
push
push
movs
pushf
cld
push
or
xchg
sub
pop
(bad)
pop
adc
scas
and
ror
lods
dec
fwait
lods
mov
jecxz
ja
adc
push
(bad)
sbb
adc
mov
cld
fs
stos
mov
jnp
sub
xchg
mov
lods
mov
inc
stos
leave
into
mov
mov
test
in
enter
jno
cdq
mov
(bad)
sbb
and
sbb
cmp
push
and
pop
fdiv
dec
fistp
std
enter
int
push
xchg
push
std
add
std
push
or
(bad)
outs
mov
inc
dec
aas
pop
maxps
dec
mov
out
xchg
sbb
cmp
mov
stos
mov
mov
popf
das
fisub
xor
cmps
in
loopne
fs
movs
inc
sbb
out
ror
arpl
(bad)
cmp
push
cmp
jp
data16
popf
push
popf
sti
enter
in
adc
aaa
call
xchg
out
out
push
sub
cmp
jg
retf
mov
mov
cli
sub
test
sbb
sub
pop
movs
neg
fnsave
jg
call
dec
cmps
unpcklps
pop
sbb
mov
lds
inc
mov
sub
pop
int3
sar
ins
pop
xor
xchg
inc
gs
(bad)
movs
add
imul
pop
out
js
add
in
xchg
ss
stc
jp
mov
(bad)
enter
sbb
std
loop
jbe
adc
pop
(bad)
ins
mov
sbb
retf
shl
jno
jb
xchg
sbb
pusha
sbb
imul
sbb
add
enter
fisttp
mul
xchg
push
dec
dec
mov
rcr
mov
mov
or
jge
mov
shl
outs
sbb
xor
jb
dec
dec
mov
les
loop
sbb
or
icebp
dec
jl
(bad)
cli
in
leave
mov
cli
xor
mov
pop
jp
leave
jg
push
das
jge
pop
add
pop
in
mov
xchg
mov
ja
neg
test
adc
(bad)
dec
pop
mov
pop
jns
xchg
jb
(bad)
shl
loop
aaa
in
lock
scas
(bad)
popf
or
inc
aam
adc
pop
test
inc
mov
mov
rol
and
sub
dec
xchg
mov
leave
or
pop
popf
push
je
cli
cmp
arpl
xchg
cmp
jmp
ficomp
push
pop
leave
test
sub
adc
repnz
adc
int
sbb
jnp
aas
lea
inc
dec
lock
arpl
mov
adc
xchg
test
clc
loope
fidivr
gs
cli
test
sbb
xor
adc
sbb
retf
mov
push
loop
and
pop
iret
shr
ins
test
jo
push
daa
push
div
cwde
push
mov
adc
fcom
and
pop
lods
or
dec
push
das
shr
jo
jge
ror
cmps
ins
inc
cli
add
cli
out
dec
(bad)
in
xlat
push
sbb
sti
adc
scas
mov
rcl
add
dec
ja
and
jp
mov
mov
(bad)
jl
adc
scas
add
xchg
(bad)
leave
adc
cmp
or
and
push
ss
and
push
scas
add
addr16
cmp
(bad)
jg
push
pop
test
test
lods
call
add
jae
xchg
and
and
xacquire
push
loope
test
inc
jmp
or
jecxz
adc
icebp
jns
mov
pop
rol
cmc
daa
cmp
pop
inc
add
mov
icebp
dec
xor
stc
push
xchg
jmp
(bad)
out
and
xchg
lahf
stos
dec
loope
adc
push
sbb
jg
enter
loop
pushf
outs
xchg
shl
lock
out
inc
and
mov
pop
push
pop
fcomp
pop
pushf
int3
sub
in
dec
add
and
xor
xor
cs
pop
into
push
xchg
in
push
dec
xchg
lea
mov
icebp
dec
(bad)
arpl
(bad)
xchg
in
push
jae
aaa
dec
xchg
mov
outs
shl
pop
add
shl
nop
xlat
xchg
lods
push
xor
lods
inc
push
push
xchg
xchg
popa
mov
push
inc
lods
call
(bad)
xchg
push
pop
mov
mov
sbb
or
jge
stos
add
lods
int
add
and
lods
lock
push
adc
jmp
lea
inc
call
cdq
scas
xor
adc
add
popf
push
dec
scas
cmp
loopne
in
jmp
xor
fsub
test
push
cmp
sub
inc
or
inc
mov
gs
cwde
add
mov
push
xchg
icebp
(bad)
pop
add
test
stc
and
test
xor
mov
push
pop
xchg
push
int
std
inc
test
jo
int3
std
mov
nop
xor
jp
sub
mov
mov
mov
xchg
fldcw
jl
sbb
sub
jp
out
shr
mov
fsub
mov
dec
add
(bad)
iret
or
push
mov
dec
or
test
sbb
(bad)
in
out
cmp
dec
rcr
push
es
jae
clc
mov
or
dec
mov
repnz
dec
push
adc
mov
mov
mov
scas
pop
mov
sbb
fld
adc
ds
push
pushf
pop
sbb
loop
ins
out
push
fsub
jns
or
xor
in
loop
mov
mov
loope
rcr
jo
mov
pop
into
sub
jp
add
jbe
or
cmps
mov
add
dec
daa
popa
add
cmp
retf
loop
mov
jb
mov
icebp
ins
ret
lea
mov
mov
sbb
ins
outs
jnp
sbb
js
add
push
pop
movs
dec
sar
push
iret
adc
pop
or
jae
sbb
mov
jbe
test
addr16
clc
add
sbb
fild
mov
mov
rcr
sbb
loopne
dec
cs
(bad)
outs
jmp
pusha
sar
pop
sbb
xchg
xor
cld
pop
push
imul
mov
add
mov
pop
inc
nop
js
jo
add
adc
int3
test
stos
repnz
out
and
(bad)
call
cmp
mov
or
jmp
xor
(bad)
cmp
add
pop
mov
mov
movs
aad
cmp
aas
dec
jle
and
sbb
js
repnz
(bad)
jns
mov
jl
test
and
lock
mov
sbb
pavgw
gs
sbb
cs
fld
add
cmp
repnz
out
pop
sub
int
and
pop
leave
test
or
(bad)
jb
jmp
mov
cmp
jmp
jnp
sub
into
and
lock
test
retf
(bad)
xchg
adc
int
mov
pop
inc
xchg
pop
jmp
cli
inc
jmp
in
sub
sbb
shl
or
cmp
jle
add
xchg
add
mov
lahf
(bad)
ret
mov
mov
jl
add
call
and
dec
leave
pop
xchg
(bad)
mov
sub
inc
test
jne
cwde
stc
cdq
cmp
jno
fisttp
out
repz
jnp
or
or
jne
sbb
mov
fild
xchg
arpl
mov
add
popf
aam
out
push
add
and
dec
fwait
rcl
xchg
out
cmp
popa
ficomp
adc
inc
ficomp
inc
data16
sbb
repnz
cmp
aam
xor
das
add
sub
or
jno
pop
mov
push
mov
cmps
cmps
imul
out
xchg
(bad)
jmp
jl
push
xchg
mov
movs
arpl
fsubr
das
outs
xlat
mov
fs
popa
arpl
mov
cli
push
pop
int3
ins
xchg
sub
xlat
dec
loopne
ja
mov
dec
push
in
lock
das
pushf
aas
sub
scas
in
fcom
xchg
mov
not
pop
in
je
sti
pop
inc
ins
or
jp
outs
xor
dec
push
popa
xchg
icebp
sbb
ss
xor
or
sbb
test
or
test
pop
or
dec
cmp
push
add
or
sbb
mov
adc
jle
mov
out
and
inc
shr
push
mov
xor
pop
ror
cmp
pop
push
dec
mov
fdivr
or
fldcw
jnp
cs
popf
add
and
mov
push
inc
cmps
sub
push
and
scas
mov
jmp
pop
jbe
enter
add
popa
mov
cmps
clc
icebp
loop
mov
mov
in
push
(bad)
xlat
mov
and
jle
mov
sub
dec
enter
xchg
push
lgs
loop
pop
loop
sub
ror
cmp
aam
stos
push
scas
fist
daa
ja
aad
arpl
rcl
fadd
(bad)
mov
arpl
jns
out
outs
scas
inc
sbb
ficom
outs
cmovae
xor
scas
dec
fcom
iret
imul
aas
std
or
enter
fild
mov
out
movs
jp
push
iret
in
adc
sub
fcomp
sbb
fild
mov
fist
pop
je
mov
mov
ret
xor
mov
jecxz
add
or
cmc
xor
pop
es
pop
cmp
mov
std
jl
fistp
pop
pop
xchg
mov
jae
outs
and
outs
fcom
test
adc
mov
pop
jp
js
jno
into
push
sub
scas
xchg
leave
dec
std
mov
iret
lea
repz
aas
ficomp
arpl
xchg
dec
ja
clc
xchg
stos
stos
dec
jl
dec
xchg
mov
lds
and
cdq
dec
add
add
pop
hlt
in
loope
out
cmps
inc
xchg
mov
push
ficom
mov
mov
xchg
xchg
lods
test
adc
(bad)
mov
mov
sbb
mov
jp
mov
outs
pop
fld
sbb
or
sub
popa
pusha
push
pop
pop
mov
cmp
sub
add
mov
ss
aam
into
ins
or
in
cmp
sbb
popf
ret
(bad)
dec
dec
lahf
push
xor
xchg
jge
inc
sbb
cs
mov
fmul
idiv
xchg
ds
enter
dec
add
lock
jg
dec
enter
mov
xor
fisub
sbb
xchg
inc
mov
ret
aas
or
cmc
daa
jmp
sbb
mov
dec
push
push
xor
leave
(bad)
dec
cmp
sti
mov
pop
retf
scas
ret
stc
xchg
mov
and
sub
mov
enter
cwde
sbb
mov
fcom
push
fmul
adc
out
inc
mov
ret
xchg
adc
lahf
cmp
retf
sar
dec
adc
push
push
das
(bad)
repnz
push
icebp
dec
hlt
jno
in
push
xor
test
pop
jnp
mov
inc
pop
pop
cdq
mov
jnp
data16
pop
xchg
outs
push
cmp
mov
push
or
jnp
test
mov
jae
cmps
ds
addr16
test
ds
or
call
test
xlat
popa
ret
mov
test
ja
fstp
aam
or
and
sti
test
and
inc
mov
inc
jmp
rol
fmul
ficomp
bound
rol
mov
jge
icebp
jl
int
mov
and
hlt
mov
enter
fist
push
lds
scas
sti
lods
sbb
sub
in
mov
jge
pop
icebp
mov
add
into
and
inc
or
leave
test
push
daa
ror
je
adc
loope
cmp
or
shr
lock
inc
jb
loope
jecxz
inc
inc
fwait
lds
jno
ret
mov
jl
add
push
icebp
(bad)
les
inc
loope
push
je
fild
push
mov
outs
fucomip
sbb
sub
add
fwait
test
mov
ins
cmp
in
sbb
mov
cmp
inc
push
lods
addr16
xchg
sbb
mov
cwde
xor
dec
stc
fsub
bnd
mov
out
mov
out
iret
or
xchg
and
adc
ret
and
mov
into
clc
(bad)
hlt
repnz
test
cli
fst
movs
out
into
retf
xchg
lea
sbb
out
xchg
cmp
out
in
out
pop
push
or
lds
sub
bound
sub
in
imul
popa
and
sbb
sbb
mov
aas
outs
fstp
mov
scas
pusha
sub
lock
and
(bad)
fistp
in
push
movs
test
dec
retf
pop
lods
mov
mov
aam
cmp
popf
fadd
ret
test
retf
xchg
das
imul
ins
fidiv
add
dec
push
mov
and
mov
sbb
xor
xchg
push
sub
add
xor
xor
push
add
xor
lock
loopne
aas
sub
push
call
addr16
jmp
rol
mov
or
dec
dec
dec
push
pop
dec
or
lods
call
or
cmp
mov
sbb
cmp
pusha
mov
add
xor
outs
int
push
shl
cli
sbb
jb
push
push
cmp
(bad)
pop
mov
call
in
nop
ds
popa
cdq
or
or
jae
or
dec
cmp
lock
cmp
aaa
sbb
(bad)
xchg
fsub
dec
loopne
cmps
call
movs
push
mov
or
add
daa
pop
dec
xchg
dec
retf
call
mov
fstp
arpl
or
out
loop
cmps
dec
mov
ins
sub
mov
pop
repnz
loope
jle
sub
(bad)
mov
outs
push
cli
test
or
push
cmovnp
sbb
sub
push
sbb
fist
stos
ror
mov
xor
imul
in
sub
xchg
loope
pop
es
mov
iret
sub
xor
data16
sbb
adc
sbb
jp
push
adc
and
fwait
or
(bad)
cmps
mov
and
addr16
rcl
adc
lahf
mov
ins
lahf
mov
xor
out
pop
(bad)
out
(bad)
mov
jecxz
iret
repz
in
enter
mov
jmp
mov
in
sub
mov
xor
mov
adc
cmp
es
mov
sbb
hlt
sahf
xor
cs
out
lods
xor
cmps
cs
jmp
add
je
xchg
sbb
or
and
les
add
sti
inc
iret
fild
and
out
fucomi
cmc
mov
imul
xchg
mov
xchg
pop
mov
lahf
fst
sbb
xor
lea
dec
out
pushf
or
mov
pop
(bad)
enter
mov
sbb
outs
jg
push
xor
sar
out
inc
xchg
das
test
or
sub
(bad)
ins
pop
xchg
ins
lea
sub
mov
mov
mov
mov
mov
lods
mov
or
dec
das
mov
push
mov
cmp
pop
or
ret
js
dec
arpl
xchg
dec
ins
mov
(bad)
not
sub
retf
(bad)
loope
mov
cmp
outs
adc
jmp
sub
movs
jb
test
pop
cld
or
xchg
sbb
adc
add
mov
dec
repnz
inc
pop
(bad)
cmp
ss
lahf
xchg
lods
jne
push
xor
pop
stos
xchg
mov
adc
mov
js
stos
addr16
xchg
and
lock
cmp
cmp
xchg
sub
xor
sbb
xchg
xor
idiv
or
aas
push
dec
repnz
inc
cli
and
jmp
adc
outs
shl
push
mov
test
add
and
dec
pop
pop
data16
cmp
mov
mov
or
sti
xchg
pop
mov
and
jae
mov
fwait
push
in
pusha
xchg
or
mov
and
push
cmp
pop
daa
jns
adc
stos
cmps
and
js
(bad)
retf
and
into
out
jns
adc
mov
adc
push
mov
pop
adc
and
pop
and
js
fs
or
jne
cmp
inc
es
sbb
mov
int3
push
mov
(bad)
pop
pop
push
or
mov
mov
hlt
lock
frstor
ret
loop
jecxz
and
sbb
cmps
aas
lods
stos
or
jns
jp
cmp
sbb
mov
jecxz
dec
xchg
fwait
jbe
inc
into
mov
mov
xor
pop
lahf
jb
(bad)
in
arpl
jae
movs
jbe
pop
ret
shl
jp
in
out
and
jp
fsubp
xor
xchg
dec
sbb
sti
aaa
ret
retf
pop
sub
add
push
es
call
xor
je
lock
in
mov
jg
push
(bad)
movs
push
jl
outs
add
mov
fs
push
outs
mov
push
adc
push
mov
push
pop
call
add
into
push
lea
adc
mov
in
or
cmp
stos
add
mov
mov
or
mov
outs
pop
mov
outs
mov
or
loope
inc
clc
cmps
xor
test
repnz
int
and
bound
xor
data16
(bad)
je
lds
test
mov
push
pop
and
pushf
mov
xor
xchg
addr16
adc
push
jae
cmp
(bad)
sysexit
mov
sbb
cli
mov
(bad)
adc
cmp
repz
sub
push
dec
lock
cmps
hlt
lods
retf
dec
fidiv
(bad)
dec
das
xor
test
mov
mov
add
test
sub
add
(bad)
es
mov
xchg
cmc
xchg
daa
enter
and
stc
jne
jmp
inc
ins
xchg
es
ds
add
add
and
pusha
and
mov
push
lds
add
adc
inc
retf
jno
mov
mov
xor
sbb
sub
or
test
push
cmc
cwde
cmps
or
fs
inc
jo
ins
in
mov
icebp
lahf
sbb
mov
adc
xor
and
mov
dec
mov
push
cmp
xor
adc
cmps
sahf
cmp
add
pop
jae
push
push
cli
and
add
leave
cmps
cmps
pop
jno
push
imul
add
jl
xor
pop
sub
jge
inc
mov
or
xor
fcomp
ins
into
push
jb
clc
push
pop
and
add
shl
call
not
push
lods
mov
push
mov
sar
push
movs
pop
push
(bad)
cmp
(bad)
push
mov
sub
push
icebp
cmp
inc
aaa
mov
pop
push
adc
sbb
pop
mov
pop
nop
sub
add
sti
neg
and
sub
sub
or
jnp
repz
aaa
and
(bad)
loop
iret
jmp
ins
mov
jnp
div
sub
push
add
js
add
sbb
dec
mov
cmp
dec
fsub
mov
or
test
mov
jb
and
pop
in
js
sbb
mov
(bad)
push
or
ss
dec
adc
pop
xor
jo
pop
das
mov
pusha
daa
cmp
cmc
fnstcw
push
push
frstor
adc
into
fistp
jnp
mov
ret
pop
xchg
cmp
mov
fnsave
inc
dec
retf
gs
in
mov
imul
mov
jmp
sub
ret
fwait
inc
shr
cmp
adc
xchg
rcl
push
cmp
xchg
dec
push
ja
push
inc
and
cmp
xchg
push
in
jmp
clc
jnp
cmp
mov
clc
pop
ja
pop
dec
cdq
cmps
push
loope
in
ficomp
push
leave
lahf
inc
mov
fisubr
mov
adc
jle
sbb
dec
and
inc
inc
popf
shr
pop
lods
leave
add
fwait
in
lods
cmp
es
mov
cmps
jne
sbb
test
es
lods
xchg
gs
pop
lods
mov
xchg
and
jmp
mov
das
jno
jmp
(bad)
push
sub
add
xor
inc
data16
and
dec
or
mov
and
xchg
aad
into
or
jb
ja
imul
jo
sahf
div
clc
mov
xchg
cmps
jno
mov
sub
(bad)
std
cmps
jle
jo
ficomp
pop
jmp
mov
xor
adc
pop
xchg
pop
cmps
pop
iret
stos
xchg
(bad)
xor
xlat
les
push
popf
xchg
ret
cmps
mov
and
daa
fimul
call
les
les
pop
jo
test
in
adc
inc
cmps
es
adc
sbb
not
stos
jl
cdq
sbb
adc
rol
adc
test
popf
dec
adc
pop
jmp
je
pop
push
mov
movs
mov
fadd
jg
mov
sub
lea
push
sti
push
call
add
fnstenv
jle
jno
cmp
add
jbe
mov
or
(bad)
adc
inc
inc
imul
xor
sub
pushf
xor
jmp
dec
push
sub
xchg
push
dec
inc
(bad)
in
fs
add
stos
cmc
jl
jp
xor
test
xlat
push
or
adc
loopne
scas
cmp
push
pushf
nop
pop
(bad)
out
xchg
mov
dec
test
loope
mov
mov
dec
in
ret
add
mov
ss
in
cmp
jmp
mov
push
mov
sbb
loope
daa
repnz
out
test
mov
adc
cs
push
test
xchg
inc
ja
add
sbb
neg
dec
push
sbb
inc
sbb
jnp
test
lahf
and
push
cmp
retf
mov
inc
push
imul
js
sub
popf
mov
mov
xchg
pop
jne
mov
(bad)
pop
pop
mov
jle
xor
sbb
push
sbb
push
xchg
jae
cmp
push
sbb
lods
adc
cmp
or
in
adc
jbe
inc
imul
movs
test
and
jp
pusha
mov
lds
cmp
or
add
(bad)
sub
neg
sub
and
call
mov
xor
ficomp
fld
fist
pop
addr16
sub
inc
sbb
cwde
stos
xchg
push
jmp
lock
add
pop
outs
sub
stc
mov
(bad)
sbb
nop
push
push
xchg
scas
sbb
add
inc
loope
jge
sub
retf
push
into
popa
dec
into
fidiv
arpl
xchg
cmp
in
out
xchg
cmps
int3
inc
scas
inc
mov
xchg
pop
sbb
ins
mov
outs
adc
shr
pop
dec
adc
jbe
in
sbb
rcl
aad
(bad)
imul
xchg
push
sub
mov
mov
fmul
mov
sub
jne
mov
bound
pusha
push
or
ja
and
cs
movs
jns
adc
dec
test
jl
daa
(bad)
aad
xchg
xchg
push
lock
and
mov
xor
retf
sub
mov
inc
aad
add
sub
add
dec
jns
sub
div
pop
sub
push
ret
xlat
or
cbw
repz
hlt
es
int3
adc
fistp
dec
test
and
stc
ss
dec
sbb
mov
aaa
jae
push
xor
clc
mov
or
fist
xor
push
(bad)
ds
mov
jne
lods
mov
dec
add
jmp
mov
aam
sahf
push
shr
pop
push
leave
jno
(bad)
pop
test
cdq
mov
push
ss
adc
or
and
aaa
jae
inc
call
add
lods
adc
adc
sub
dec
aad
out
pop
ret
loop
add
popf
ins
outs
jge
ins
xchg
xor
out
je
js
leave
dec
lods
sub
rcl
je
leave
xlat
cld
(bad)
ret
fcomp
push
sbb
fild
xor
in
dec
dec
push
leave
outs
addr16
xlat
mov
loopne
jbe
push
sub
xchg
push
mov
leave
jne
(bad)
pop
movs
mov
mov
xor
popf
add
mov
jae
inc
and
in
gs
(bad)
pop
sub
xor
or
push
xchg
mov
call
fnstenv
fld
sbb
cwde
js
retf
fidivr
addr16
or
ret
ins
jle
mov
scas
repnz
(bad)
(bad)
fidiv
sbb
shl
mov
xor
das
and
xchg
in
mov
push
mov
stos
shr
jns
push
jno
mov
scas
sbb
aam
xchg
fs
pushf
adc
jae
push
in
mov
mov
dec
cmp
xor
js
fdivr
mov
lods
adc
push
mov
xor
movs
(bad)
test
jo
adc
sub
sbb
jnp
sbb
jmp
push
ins
adc
aad
mov
mov
jle
js
mov
mov
dec
mov
ins
enter
cmp
das
xchg
(bad)
xor
ins
fstp
out
jno
inc
bound
mov
add
sub
outs
iret
daa
cli
retf
xor
ds
push
jb
adc
fcom
xor
je
test
shr
ret
xor
cs
mov
lock
fldcw
clc
pop
xchg
jne
push
in
xchg
xchg
data16
out
or
xor
adc
mov
pop
adc
int3
pop
mov
neg
mov
pushf
fcomp
adc
pop
rcr
fiadd
sub
aad
jb
mov
pushf
pop
xor
outs
ja
loope
fwait
sub
add
push
sti
scas
cs
in
or
or
xor
mov
das
icebp
int3
add
rcl
jg
jbe
and
sub
pop
dec
add
and
cdq
js
int
mov
adc
cs
mov
xlat
neg
jnp
pusha
repnz
ins
mov
mov
xor
in
sub
es
add
mov
sub
pop
xchg
sbb
mov
dec
xchg
nop
xchg
rcr
mov
cwde
mov
mul
call
outs
mov
xor
jmp
fldcw
push
push
sahf
scas
push
xchg
mov
js
and
xor
mov
call
mov
mov
ja
jmp
jp
sub
mov
mov
mov
or
icebp
jae
ds
jl
adc
xchg
push
mov
jae
idiv
addr16
jno
jp
dec
pop
mov
sar
push
lea
fadd
not
lock
xchg
aad
inc
sar
lock
iret
pop
les
(bad)
sub
les
in
or
cmp
popf
ror
fs
cdq
jo
jns
mov
mov
sahf
mov
mov
mov
pop
out
sub
cmovo
or
jno
or
mov
pop
ret
cli
jnp
leave
outs
scas
or
rcl
fadd
fild
mov
cli
aaa
xchg
ss
test
xchg
sub
dec
add
adc
cdq
mov
cdq
retf
fs
mov
ins
mov
jl
pushf
inc
daa
mov
fst
mov
in
push
xchg
in
xor
xchg
cmp
inc
jnp
ds
into
push
rol
shl
in
push
mov
add
add
push
mov
mov
ins
dec
push
test
dec
mov
push
(bad)
pushf
fs
out
pop
pusha
(bad)
mov
mov
and
adc
xchg
dec
or
aaa
cmp
mov
ins
pop
sbb
mov
mov
xchg
mov
or
dec
jp
sahf
iret
mov
das
xchg
sbb
or
sbb
push
mov
mov
adc
xor
jp
sub
inc
and
xor
xchg
push
sbb
inc
inc
mov
outs
loopne
aam
pop
xchg
or
jns
push
fistp
es
xor
out
push
stos
add
mov
stos
jge
into
mov
add
dec
leave
fstp
jge
add
daa
xor
sbb
inc
jb
idiv
lods
cmp
dec
aad
je
adc
dec
(bad)
aad
mov
sti
fidiv
mov
cs
mov
dec
imul
out
jne
lock
loope
inc
mov
mov
div
xlat
mov
dec
xchg
mov
xchg
add
pop
mov
add
in
lods
pop
repz
inc
pop
mov
retf
adc
call
pop
shl
mov
and
(bad)
push
mov
jge
aaa
cmp
dec
mov
outs
mov
adc
pop
fcomi
dec
adc
cmp
jl
mov
nop
out
ds
push
and
pop
test
cdq
or
mov
pop
xchg
jmp
inc
in
jno
pop
das
in
out
inc
or
cmc
xor
xlat
pop
adc
mov
mov
push
popf
aam
(bad)
mov
inc
cli
inc
mov
pusha
xchg
icebp
inc
or
leave
cli
sbb
jne
mov
repnz
mov
loop
jg
call
iret
jne
daa
xor
push
xchg
je
out
cmp
cli
cmp
xchg
or
fwait
out
sbb
fmul
inc
sub
sub
cmovs
or
loope
div
imul
pop
inc
mov
out
int3
outs
and
mov
pop
pop
push
or
daa
push
mov
and
pop
mov
add
or
or
pop
int3
pop
jae
jle
cmps
jbe
cmp
mov
cmp
sbb
dec
stos
inc
jl
pop
je
inc
jae
inc
pop
pop
shl
(bad)
pop
jmp
push
mov
cmp
cmp
jbe
mov
adc
in
mov
retf
mov
pop
iret
in
cmp
inc
push
mov
push
adc
int3
xchg
mov
inc
mov
test
mov
push
xchg
add
pusha
das
ror
or
(bad)
xor
inc
ret
(bad)
jns
xor
cs
fnstsw
xor
xchg
test
cmp
push
mov
test
sbb
pop
cmp
xor
mov
inc
mov
add
scas
sub
xchg
pop
push
dec
xor
test
xchg
push
xor
inc
and
andnps
loop
lahf
mov
inc
aad
mov
push
mov
push
(bad)
add
dec
sahf
jae
cmp
mov
ds
stc
xor
mov
loop
popf
push
mov
xor
add
push
mov
and
push
out
pop
dec
mov
das
pop
stc
rol
jp
(bad)
jge
sbb
ja
or
mov
mov
lahf
shl
popa
xchg
mov
stc
ins
pushf
fsubr
sbb
call
mov
adc
push
icebp
cli
jle
adc
push
test
scas
and
dec
out
test
dec
mov
pop
pop
sbb
stos
mov
mov
je
pop
mov
dec
push
(bad)
cli
and
and
fst
jo
sbb
push
pop
std
jne
cdq
and
xor
xor
sbb
mov
inc
(bad)
mov
xchg
in
jge
add
out
sub
vunpcklps
aad
shl
inc
out
and
(bad)
mov
mov
aaa
out
dec
push
jge
jle
fadd
(bad)
out
jmp
pop
mov
cmp
sub
sub
repnz
dec
mov
xor
(bad)
into
jb
int3
repz
mov
dec
je
dec
sub
rcr
lahf
push
fldcw
test
nop
pop
xor
or
mov
movs
mov
mov
xchg
mov
fmul
xchg
iret
call
add
jmp
add
push
push
cmp
push
mov
xchg
mov
(bad)
(bad)
mov
push
xchg
mov
call
xchg
loop
(bad)
test
mov
outs
ins
adc
data16
in
cmps
dec
xchg
xchg
xchg
xor
(bad)
pop
fbstp
mov
jp
aaa
or
je
or
retf
imul
push
enter
clc
sbb
movs
movs
iret
data16
int3
dec
cmps
bnd
outs
stos
or
loope
cmp
dec
fild
movs
addr16
add
lahf
frstor
repnz
cmp
hlt
adc
aad
fdiv
or
adc
push
add
(bad)
cld
dec
push
dec
stos
pusha
dec
mov
shr
sub
adc
daa
push
jmp
cli
or
sbb
pop
scas
cmp
or
ins
call
loope
cs
ficomp
call
adc
add
stos
imul
mov
pusha
jns
fwait
dec
pushf
mov
fisubr
call
aaa
jl
lds
xchg
mov
lds
test
(bad)
dec
dec
std
ins
mov
cmp
repz
loop
jle
and
jae
mov
jle
and
pop
ja
cli
rol
push
jnp
xchg
je
jge
xchg
sub
mov
push
and
adc
xor
and
lahf
mov
add
cmp
inc
repz
inc
test
xchg
daa
dec
ror
jge
enter
in
mov
inc
ss
sahf
daa
jecxz
cwde
dec
push
outs
push
mov
dec
adc
scas
inc
mov
test
in
xor
loopne
push
out
add
mov
pop
dec
call
and
xlat
cmp
scas
stos
arpl
nop
sub
mov
mov
push
ficomp
push
imul
add
and
dec
sbb
or
je
outs
mov
sahf
lods
out
adc
add
adc
daa
fs
stos
pop
and
cmps
inc
(bad)
cs
je
adc
out
mov
dec
setle
pop
btc
shl
dec
enter
sub
fdiv
pusha
ins
movaps
mov
push
adc
loopne
lods
(bad)
jmp
lods
or
addr16
lods
jge
sbb
test
out
add
add
xor
inc
in
inc
neg
xlat
add
mov
das
ds
xor
inc
iret
xor
in
jb
cmp
jecxz
ss
outs
mov
xchg
call
or
pop
(bad)
lock
ficomp
enter
js
sbb
or
nop
cmp
ret
or
sbb
enter
in
xor
in
stos
mov
scas
(bad)
push
xchg
or
int3
dec
sub
fdivr
popf
mov
sub
inc
mov
(bad)
leave
fucomp
sbb
add
pop
push
sbb
test
outs
sub
xor
stos
addr16
jno
push
and
call
mov
inc
dec
inc
cs
dec
push
cmp
idiv
(bad)
sbb
mov
hlt
fadd
test
arpl
gs
jg
inc
int
cs
adc
mov
push
test
sub
jg
jl
sub
mov
popa
pop
data16
imul
cld
inc
push
loop
xor
ins
out
sbb
inc
jmp
and
fcom
and
dec
(bad)
outs
and
or
retf
mov
cdq
(bad)
xchg
scas
ror
mov
sbb
dec
xchg
push
cmps
bnd
retf
lea
jge
outs
mov
fcmove
and
jbe
stos
iret
inc
push
sub
dec
mov
stc
imul
lds
cmp
pushf
cli
push
mov
mov
aaa
mov
xor
inc
dec
sahf
mov
mov
xchg
xchg
stos
and
aam
sbb
outs
dec
out
mov
ds
mov
jnp
in
jl
adc
sub
push
aaa
aad
sbb
xor
dec
or
dec
aaa
stos
enter
rcl
dec
push
mov
jns
jb
gs
ins
aad
into
scas
fidivr
jns
dec
cmp
bound
mov
sub
xlat
fdivr
or
(bad)
in
mov
mov
mov
mov
xchg
loop
adc
sahf
dec
and
lds
or
jns
iret
cwde
mov
pop
sahf
ins
push
dec
xor
pop
(bad)
push
sbb
mov
and
or
or
imul
sti
cmp
(bad)
xchg
outs
mov
dec
push
xchg
mov
mov
fidivr
fwait
inc
es
jecxz
mov
and
mov
outs
xchg
test
lock
xor
dec
mov
mov
add
adc
mov
std
sub
cmp
fsubr
hlt
pop
fcomp
and
mov
fsub
pop
jmp
xchg
add
repnz
cmp
in
jl
mov
sub
jge
or
imul
xor
dec
xor
dec
dec
iret
jnp
jge
xchg
iret
mov
pop
fst
push
dec
adc
cli
add
jnp
imul
iret
leave
enter
in
cld
push
hlt
sub
fimul
mov
adc
push
dec
pop
adc
int3
xchg
and
lods
in
ds
cmps
sub
mov
lahf
mov
out
jp
mov
push
(bad)
jnp
icebp
jns
jmp
fnstenv
push
(bad)
clc
test
movs
ja
mov
cmp
sub
gs
dec
xchg
jg
fidivr
fisttp
sbb
into
bound
shl
fst
les
cmc
dec
mov
je
(bad)
mov
mov
popa
iret
xchg
shr
(bad)
pop
fcomp
push
pushf
repz
sbb
and
adc
dec
in
mov
nop
jl
sub
retf
add
jo
jbe
retf
lods
out
mov
punpckldq
test
xchg
xor
aad
dec
or
pop
inc
pusha
sbb
pusha
mov
pop
jl
mov
cmp
mov
push
sbb
jno
ret
lahf
movs
mov
js
jae
hlt
(bad)
mov
ret
shr
cmp
mov
fsub
retf
call
(bad)
mov
jmp
test
call
mov
mov
cmp
fld
movs
xchg
(bad)
popf
inc
add
jp
mov
sub
shl
test
xchg
iret
adc
add
xchg
add
fnsave
dec
dec
repz
jo
pop
mov
pop
pop
fdivr
add
sbb
xchg
loop
pusha
xchg
jmp
bound
sub
sbb
jge
jo
arpl
or
cmp
push
pop
stos
les
cmp
outs
add
clc
popa
mov
sub
sbb
or
dec
sbb
add
popa
shl
push
and
push
call
push
jns
and
sbb
scas
popf
inc
loopne
dec
sti
out
xchg
jle
push
bound
cli
sub
(bad)
pop
ret
add
cmps
pop
sub
lahf
xchg
rcl
rcl
hlt
aam
jecxz
xlat
mov
ins
mov
fistp
ror
fninit
js
aam
push
fsub
fist
inc
ja
add
xor
mov
arpl
push
shl
push
sbb
sub
out
enter
repz
mov
(bad)
popa
pop
movs
mov
mov
int
dec
mov
cs
push
jmp
loopne
push
or
or
mov
out
test
jecxz
jmp
pop
test
pop
adc
cmps
jmp
stos
mov
movs
xchg
push
sub
or
out
or
es
mov
pop
or
shl
xlat
aam
ret
jae
rcr
mov
or
dec
loop
popa
jb
call
adc
fiadd
daa
add
dec
adc
mov
test
xor
inc
stos
les
jecxz
pusha
inc
popf
fistp
ret
in
xchg
cld
mov
mov
jl
mov
or
and
mov
inc
pop
or
add
test
inc
xor
fs
ret
adc
xor
adc
jne
pushf
pusha
mov
test
jle
leave
xlat
xlat
pop
sbb
imul
and
ror
sub
das
mov
adc
cmp
pop
(bad)
fld
aaa
jne
enter
nop
mov
rol
xor
jb
jne
int3
and
stos
mov
fidivr
ficom
or
icebp
cmp
cwde
lea
hlt
mov
or
movs
das
(bad)
movs
rcl
mov
mov
cmp
and
repz
jecxz
test
push
inc
mov
adc
aaa
pop
inc
mov
mov
jge
out
xor
pop
xlat
sbb
xor
mov
inc
out
icebp
fcomp
neg
idiv
push
ss
(bad)
loopne
jbe
cmps
adc
and
xchg
xchg
adc
fbstp
(bad)
dec
bound
mov
cmp
clc
cmp
sbb
xchg
and
aad
mov
sub
and
ja
push
scas
out
mov
lock
je
jbe
ja
imul
in
push
and
test
cmps
inc
jmp
daa
push
adc
mov
pop
shr
dec
adc
arpl
xchg
stos
sbb
dec
push
in
fsubr
std
and
and
push
out
cmp
sbb
dec
faddp
xchg
cmp
sbb
and
cmp
sbb
in
shl
mov
lahf
jle
and
pop
iret
shl
jnp
mov
pop
ror
je
mov
jno
jne
mov
test
fadd
mov
fisubr
or
out
push
mov
and
and
in
mov
or
pusha
hlt
mov
add
aad
in
js
pop
pop
adc
dec
inc
xor
enter
or
imul
mov
inc
mov
div
out
mov
inc
cs
nop
retf
jmp
push
repnz
cld
jae
out
mov
xchg
(bad)
xor
daa
dec
scas
mov
sti
push
out
clc
sub
fdiv
iret
mov
hlt
call
mov
scas
jl
push
aaa
xchg
xchg
int3
xchg
sbb
gs
(bad)
test
inc
push
mov
pusha
out
movs
jo
rcl
adc
(bad)
adc
jmp
ror
mov
jns
aaa
clc
and
aaa
in
iret
pop
cmp
ret
add
xchg
sub
enter
or
int3
sub
push
ins
imul
cmp
outs
or
aaa
dec
das
out
(bad)
sbb
push
je
jo
test
pop
adc
jns
fdivr
cmp
icebp
jle
aam
cmp
loopne
jl
push
mov
loop
add
mov
jmp
push
pop
(bad)
cmp
adc
les
cdq
mov
jo
cmp
mov
in
int
xchg
mov
xlat
adc
adc
xlat
clc
outs
xlat
sbb
rol
popf
mov
mov
test
cmps
mov
(bad)
xor
and
fwait
jl
push
frstor
rol
repnz
pop
in
(bad)
xlat
mov
xchg
icebp
xor
retf
rol
shl
push
xor
mov
mov
pop
repnz
dec
cmp
mov
pop
jno
cmp
mov
mov
out
mov
dec
and
ds
ins
jg
xor
icebp
das
cvtpi2ps
xchg
loop
std
rcl
ds
pop
inc
dec
mov
shr
sar
add
popa
hlt
inc
ins
fucomip
and
and
ins
fadd
cmps
mov
test
(bad)
or
and
inc
daa
pop
imul
cmp
outs
call
stc
std
enter
sub
push
xchg
sub
sub
leave
add
ss
scas
sub
cmp
or
out
xor
mov
retf
stos
dec
xchg
cwde
popf
jp
mov
jnp
sbb
inc
cmp
cmp
gs
sub
inc
or
push
in
cmp
xchg
push
sti
mov
dec
push
pusha
dec
pop
aaa
jo
sub
push
xchg
sbb
or
int
ins
lea
mov
pop
ds
mov
shr
iret
xchg
adc
(bad)
mov
push
rcr
dec
lock
jge
dec
pop
mov
stos
cmp
mov
jle
pop
in
inc
add
xchg
lods
mov
mov
jmp
fcmovne
pop
call
pop
or
add
ins
jnp
stc
mov
adc
or
inc
adc
int
or
lock
xor
lods
pop
repnz
pop
dec
pop
pop
xchg
dec
mov
lock
pop
cwde
add
inc
(bad)
ficomp
fmul
xchg
mov
mov
xor
test
sbb
push
inc
sti
jecxz
rcl
mov
push
loopne
gs
jg
test
mov
xor
mov
xchg
cmp
(bad)
mov
adc
cwde
pop
push
neg
pop
hlt
push
mov
cmc
pop
(bad)
push
push
mov
movaps
out
sbb
rcr
stos
mov
in
iret
cmp
aas
into
retf
push
lods
leave
(bad)
cmp
mov
inc
jne
neg
mov
sbb
or
cli
add
inc
fdivrp
pusha
mov
imul
xor
(bad)
push
push
jmp
pop
xor
pop
pop
jecxz
sahf
cmp
outs
iret
mov
ins
xor
call
(bad)
and
int3
in
mov
adc
and
cmp
pop
ret
ins
and
imul
push
in
fstp
adc
mov
int
cmps
lds
outs
dec
xchg
add
repnz
ds
jmp
push
das
dec
test
test
(bad)
in
sbb
mov
lds
(bad)
jae
push
js
adc
xchg
ja
pop
sub
retf
jle
push
pushf
rcr
dec
adc
outs
add
mov
lods
scas
int
sbb
int
iret
sbb
repz
scas
inc
cmp
pop
pop
push
and
pop
jo
ret
out
(bad)
pop
jmp
(bad)
test
scas
jp
pop
out
sbb
inc
fwait
mov
into
jmp
inc
mov
sub
outs
scas
dec
adc
test
push
jg
enter
push
loop
add
pushf
jmp
aas
and
jbe
sti
pusha
es
cmp
jp
iret
js
out
lahf
and
loop
dec
cmp
sub
push
shl
push
popa
ins
adc
push
leave
rcr
inc
fimul
push
adc
push
adc
je
mov
(bad)
(bad)
fcom
xor
addr16
(bad)
pshufw
pand
daa
inc
aam
xchg
or
sbb
pop
mov
xor
ja
popf
pop
cmp
jmp
sub
or
stos
lock
dec
in
stc
push
scas
pop
push
pusha
ret
dec
outs
inc
fdivr
jecxz
pop
push
(bad)
and
xchg
in
push
enter
shr
inc
jno
pop
aad
lahf
clc
je
sbb
arpl
scas
ss
fld
outs
inc
call
inc
inc
push
push
sbb
icebp
sar
imul
or
out
movs
fmul
mov
xor
not
jcxz
fcmove
pushf
mov
xchg
pop
inc
mov
in
cdq
jge
push
xor
test
sbb
add
and
int
add
xchg
int3
sbb
xor
dec
xor
nop
ror
xchg
push
sub
sar
ins
pushf
and
retf
loop
mov
mov
xchg
out
dec
fcmovb
mov
sbb
ins
xlat
xchg
add
mov
mov
imul
enter
data16
retf
add
arpl
cmp
jne
sub
ds
cld
imul
sbb
jge
sub
cmp
push
jns
sbb
in
or
test
imul
fisub
mov
bound
test
lds
jb
sub
and
fisttp
add
cmp
cmovbe
jmp
mov
push
sbb
je
ja
jnp
int3
pop
scas
popf
jae
loopne
xchg
cmp
lods
jnp
inc
out
push
movs
out
inc
shufps
bound
in
push
xchg
test
hlt
jo
jg
xchg
mov
stos
dec
js
(bad)
sbb
adc
or
lods
dec
dec
hlt
fsub
mov
or
cmp
cmp
movs
shl
in
ss
pop
imul
imul
test
dec
adc
adc
mov
dec
scas
daa
inc
cmp
xlat
jmp
mov
mov
adc
test
xor
pusha
repz
dec
out
rcl
cwde
xor
push
jbe
loopne
and
push
xchg
pop
push
add
cmp
mov
push
jb
fwait
dec
xchg
outs
inc
dec
fldpi
cmp
fidivr
scas
sub
inc
dec
xchg
test
loope
(bad)
sbb
mov
imul
cmps
jle
xchg
jo
xchg
out
jns
or
(bad)
jo
ins
or
pop
xchg
or
inc
bound
sahf
test
std
mov
add
sub
(bad)
sar
push
add
inc
stos
outs
lahf
gs
jo
adc
mov
loop
inc
mov
out
ja
les
mov
fld
mov
mov
and
push
fld
dec
das
pop
jg
mov
gs
arpl
into
pop
mov
movs
cs
(bad)
test
inc
jmp
inc
mov
dec
adc
dec
pop
shl
mov
mov
jnp
cs
adc
outs
dec
add
sub
pop
pop
xchg
pushf
(bad)
fstp
mov
sbb
fnstsw
mov
(bad)
ror
(bad)
push
adc
sub
loopne
xchg
mov
out
lock
js
fldcw
sbb
jns
popf
jecxz
mov
xchg
lahf
in
dec
mov
pushf
sar
mov
in
cmp
std
in
xchg
push
and
das
sub
xchg
ds
bound
paddb
xlat
lods
cmps
daa
cld
pop
fnstenv
mov
push
xor
es
outs
inc
outs
test
cmp
cmp
div
loopne
jmp
xchg
push
push
in
xchg
fild
sub
xchg
xchg
in
lea
in
leave
add
loopne
mov
sub
nop
xor
cmp
neg
or
mov
retf
xchg
iret
mov
ss
inc
outs
and
xor
ds
jmp
outs
push
push
mov
push
or
mov
mov
jl
xlat
mov
push
call
test
xor
int3
mov
ficom
movs
push
xor
stos
cmp
mov
jb
sahf
inc
jmp
repnz
pop
fnsave
push
mov
mov
lods
ins
and
add
out
jno
enter
sbb
cmp
jmp
cdq
lods
pop
xchg
lock
pop
loope
cmp
jb
(bad)
in
cmps
ss
push
push
icebp
push
je
and
sbb
push
clc
and
sbb
dec
jo
aas
hlt
sbb
enter
or
mov
cli
cmp
ins
sub
ins
mov
aad
inc
or
cmp
fisub
mov
push
or
push
stos
fs
lods
outs
ins
std
lea
in
fst
daa
add
xchg
adc
in
jp
outs
cwde
lods
push
xchg
inc
loopne
add
mov
sahf
dec
call
lods
push
push
jo
jbe
jecxz
lahf
loope
iret
sub
pusha
ret
mov
inc
mov
loope
dec
mov
jecxz
adc
fnstenv
adc
push
lock
push
sub
arpl
loop
loope
cmp
cmp
xchg
xchg
mov
inc
daa
jne
mov
dec
pop
clc
and
xchg
mov
aas
add
and
push
cmp
mov
lods
pusha
or
or
add
push
or
xor
xor
mov
shr
or
xchg
ds
mov
sbb
shl
ss
cld
cli
mov
pop
mov
rol
jb
in
fstp
adc
dec
cmp
lods
aam
pop
pop
pop
mov
mov
push
mov
sbb
cmp
xchg
cld
xchg
dec
jp
push
push
sbb
sbb
test
dec
mov
aam
(bad)
test
sahf
ins
xchg
popf
mov
int3
sbb
mov
scas
(bad)
lea
or
in
xor
push
pushf
pop
dec
jg
(bad)
(bad)
sub
xor
jmp
xchg
es
mov
lock
(bad)
stos
adc
inc
(bad)
int3
xlat
out
js
cli
xor
and
(bad)
test
adc
dec
les
cmp
cli
mov
loop
mov
mov
adc
or
gs
sub
rol
adc
outs
cmp
push
cld
arpl
ds
stc
repnz
add
add
jp
sbb
aas
addr16
sub
sahf
cmps
xchg
add
inc
mov
daa
stos
mov
push
lock
push
fcom
mov
mov
mov
jnp
adc
jmp
sbb
test
js
imul
add
movs
cmp
pop
div
(bad)
and
and
xor
or
adc
repz
mov
iret
and
mov
bound
sub
xchg
dec
inc
xchg
mov
mov
pusha
retf
or
aam
cmp
mov
cmp
mov
jl
lea
push
sbb
fs
push
repz
xchg
or
retf
pop
dec
test
pop
sbb
out
daa
je
dec
fidivr
push
jge
neg
test
mov
call
fs
dec
adc
ja
mov
sub
add
aam
retf
cmp
push
or
test
or
call
ret
stos
mov
push
adc
dec
fstp
add
ffree
push
jp
gs
retf
daa
cmp
sub
mov
ins
mov
mov
inc
int3
pushf
out
push
clc
push
jno
fisub
movs
add
outs
out
sub
out
sub
leave
fsub
imul
jo
jns
xor
push
(bad)
mov
dec
jmp
push
dec
mov
jns
(bad)
sub
lods
push
inc
and
cli
ss
xchg
fwait
sub
and
call
sub
dec
dec
aad
scas
mul
movs
imul
dec
xor
movs
test
std
add
lods
nop
inc
jns
cmp
mov
movs
retf
mov
fistp
nop
jne
dec
rcr
int3
in
out
pop
sub
ins
dec
ins
test
xor
icebp
loope
popa
xor
xor
add
aaa
rcr
mov
jns
mov
mov
mov
mov
mov
xchg
stos
inc
mov
xchg
jno
add
mov
scas
repnz
das
pop
cld
jp
sub
repz
push
xor
(bad)
in
push
leave
push
and
adc
lods
test
das
xchg
(bad)
(bad)
aaa
jg
and
aam
call
push
stos
pusha
dec
pop
fcmovbe
jns
dec
xchg
jae
scas
pop
call
ret
aam
jno
retf
xchg
ret
rcl
pop
cmps
inc
movs
push
cmps
and
adc
stos
sbb
cmps
mov
out
stos
mov
ds
pop
mov
push
dec
xchg
ret
sar
jmp
and
ins
shr
inc
sbb
sbb
dec
mov
lods
sbb
add
je
adc
jmp
out
pop
imul
mov
arpl
stos
scas
stos
mov
rcl
adc
mov
int
push
sahf
outs
ja
xchg
and
jecxz
jno
pop
(bad)
jne
(bad)
stc
mov
jns
mov
ja
cmp
mov
jne
jbe
fidiv
pop
add
lods
ss
and
push
cwde
mov
test
xchg
mov
movs
adc
popa
aam
sub
mov
out
pop
movs
test
fcmovb
sahf
aaa
or
sbb
cdq
xor
mov
xor
retf
popf
retf
lods
nop
sti
xor
lds
loopne
add
icebp
popf
xchg
and
xor
dec
lahf
fmul
or
aad
mov
push
sbb
and
in
in
aam
xchg
push
lahf
hlt
test
sbb
jns
sbb
add
rcl
fnsave
cmp
mov
add
adc
(bad)
adc
and
jne
retf
jb
lds
or
es
add
mov
fwait
push
jecxz
fadd
add
or
and
dec
ja
xchg
xor
mov
daa
jnp
(bad)
addr16
sbb
mov
sti
sbb
pop
outs
xchg
stos
push
mov
push
sbb
repnz
in
jb
test
mov
push
rol
int3
push
(bad)
clc
mov
jne
mov
fisub
lea
movs
std
pop
mov
fwait
add
jmp
ins
lock
pushf
ins
and
mov
push
and
mov
sub
fidivr
hlt
add
outs
ret
mov
inc
push
jmp
dec
cmp
leave
push
mov
xor
(bad)
test
adc
data16
aad
push
shl
push
mov
jp
shl
shr
inc
or
cmp
inc
xchg
pop
stos
shr
in
not
faddp
not
enter
mov
lea
cdq
dec
ja
mov
sbb
mov
add
xchg
nop
rcl
imul
rcl
loope
inc
sub
mov
inc
mov
cdq
cs
xchg
shlx
out
icebp
stos
xchg
(bad)
and
mov
push
sub
test
mov
mov
arpl
rol
pop
adc
jbe
adc
retf
jg
ss
xor
push
scas
scas
ins
nop
stos
popf
scas
mov
xchg
cmps
aad
std
iret
dec
jae
add
cmps
fisub
push
mov
push
push
push
push
movs
sti
mov
sti
out
dec
in
cwde
call
mov
sbb
mov
loopne
sub
and
call
rcr
and
sub
inc
sub
ins
div
xor
movs
xchg
jbe
pop
cmovno
cmc
jns
into
cdq
push
xlat
into
xchg
jecxz
test
push
mov
mov
pop
test
jl
cld
hlt
sub
mov
dec
xchg
dec
cmp
and
outs
hlt
ja
sbb
dec
daa
add
mov
outs
ror
pop
inc
loopne
cmc
jae
ds
fs
adc
icebp
cmps
or
int
out
es
test
outs
ss
sbb
xchg
push
(bad)
sbb
push
mov
jno
or
fprem1
in
ficomp
daa
das
mov
push
test
test
mov
xchg
sub
dec
adc
mov
jge
(bad)
call
pusha
in
call
bound
test
add
jmp
sub
sub
add
xchg
jnp
mov
into
dec
add
hlt
test
add
leave
(bad)
adc
adc
pop
ins
iret
leave
dec
rep
out
ins
sbb
sti
(bad)
loop
and
add
pop
retf
inc
arpl
ds
xor
stos
cmp
xor
mov
inc
dec
cmps
sub
add
aas
clc
adc
dec
mov
ror
adc
and
and
rol
pop
clc
mov
pop
aad
sar
cmp
mov
jbe
cli
xchg
jae
(bad)
in
push
xchg
shl
xor
call
add
jmp
mov
icebp
mov
dec
jg
(bad)
sub
call
cli
cdq
xor
(bad)
ja
jp
sbb
inc
cmp
call
ror
push
mov
lds
xor
ror
dec
mov
cmp
sub
push
lahf
and
rcr
cwde
xor
idiv
push
retf
cmp
and
dec
jle
or
mov
icebp
push
xor
dec
mov
rcl
pushf
xchg
idiv
mov
sti
idiv
pop
mov
pop
popf
fidivr
test
or
push
mov
inc
std
lahf
lods
jmp
xchg
call
ins
pop
xchg
mov
sti
pop
popa
(bad)
hlt
js
cmp
and
cmc
popa
adc
dec
dec
inc
movs
in
repnz
loope
repz
and
jg
fcos
rcr
and
mov
and
(bad)
sub
mov
in
stos
push
jmp
xchg
mov
cli
dec
int
pop
inc
sub
push
and
popf
aaa
cmc
scas
xchg
cmc
mov
out
sbb
sbb
out
xor
push
adc
call
loop
adc
pop
imul
je
ret
jb
stc
imul
jne
inc
inc
fisub
mov
cmps
mov
sbb
in
cmp
lahf
in
rcr
bound
lds
setp
out
adc
inc
fistp
mov
pop
call
and
push
hlt
ret
jl
inc
xlat
outs
loop
inc
ret
pop
cdq
dec
neg
jecxz
leave
scas
ror
push
and
mov
jmp
fcom
test
adc
sbb
(bad)
call
aas
inc
and
loop
bound
push
stos
(bad)
or
push
cli
pop
adc
call
cmp
mov
cmp
es
call
out
mov
lahf
sahf
into
pop
push
add
and
push
push
(bad)
fst
xchg
icebp
(bad)
arpl
int3
scas
lock
push
push
jg
popfw
jecxz
imul
xchg
jb
and
in
pop
cdq
dec
retf
cmp
push
fnstsw
loopne
icebp
dec
add
and
or
jbe
sahf
jl
xchg
ret
in
lea
xchg
aad
and
pop
push
cmp
stos
add
push
add
inc
test
imul
ss
in
inc
scas
cmp
scas
dec
and
iret
(bad)
fimul
adc
ds
repz
jbe
lahf
sub
jle
pop
jmp
aad
and
inc
xor
jns
push
cmp
cwde
push
jae
adc
popa
mov
xor
jmp
gs
rcr
adc
cmp
xor
scas
(bad)
repnz
das
movs
mov
dec
clc
clc
pop
outs
movs
inc
sbb
or
or
sub
mov
fwait
cmc
popa
mov
mov
leave
aam
sub
cmp
sti
jnp
mov
cli
stos
jmp
push
out
ja
int3
mov
popa
nop
jo
mov
or
gs
int
pop
adc
mov
sub
pop
cmp
cli
push
ja
cmp
aam
out
push
call
xor
fs
ror
add
jmp
icebp
(bad)
daa
jnp
push
jmp
inc
cld
inc
jge
cmp
scas
pop
pushf
sbb
jecxz
inc
inc
or
mov
movs
adc
and
sub
sbb
mov
xor
and
shl
pop
int
retf
mov
jb
sub
dec
mov
sbb
lock
enter
jne
rcr
shl
sub
cmp
mov
aad
xor
push
test
dec
mov
arpl
mov
mov
clc
iret
cmp
xor
mov
or
fneni(8087
sbb
jl
pop
stc
sbb
ficom
jmp
xor
and
icebp
sbb
into
dec
mov
add
and
mov
std
jno
or
cmc
(bad)
loop
aaa
mov
retf
xor
dec
stos
daa
pop
xlat
push
pop
pop
jg
mov
mov
scas
aaa
mov
adc
int3
icebp
jb
add
and
dec
test
cs
popf
ss
jmp
xor
xor
popa
aaa
dec
xchg
and
and
mov
pop
out
adc
shr
or
inc
mov
mov
mov
sub
sub
shl
scas
in
outs
inc
pop
fisubr
pop
leave
and
pop
push
ror
mov
jp
dec
push
and
sub
cs
jmp
addr16
jp
add
and
jnp
xchg
fisub
or
sbb
lods
lods
mov
sbb
outs
pop
(bad)
test
fsubrp
jge
add
pop
mov
rcl
das
icebp
xlat
not
(bad)
mov
xor
mov
hlt
(bad)
push
fild
inc
into
movs
out
push
pmullw
mov
cwde
sub
push
repnz
test
or
fnstcw
mov
stc
xor
ja
jecxz
dec
pushf
repnz
std
arpl
mov
ja
and
pop
mov
cmp
test
cmp
stos
jae
outs
pop
cmp
sbb
fsubp
pop
popf
inc
ins
adc
pusha
mov
jmp
sub
jo
cmc
imul
imul
movs
iret
xchg
fwait
into
test
sub
xchg
xor
ja
test
out
mov
test
mov
cdq
mov
nop
inc
xchg
lock
sbb
pop
(bad)
xor
jecxz
jmp
rcl
mov
sub
movs
dec
ins
(bad)
fnstcw
mov
cmp
xchg
xchg
cmp
mov
das
inc
mov
ret
pop
movs
cmp
or
jge
xchg
out
enter
aas
icebp
mov
cmc
push
jbe
sub
repnz
cwde
adc
jmp
mov
sub
push
arpl
outs
pop
adc
inc
push
ret
push
pop
outs
ficom
and
push
mov
sar
push
sub
(bad)
pop
push
sar
push
std
inc
movsx
jnp
cli
mov
ins
pop
mov
mov
inc
cmp
shl
(bad)
adc
pushf
mov
and
sub
sub
iret
mov
dec
cs
mov
mov
mov
add
push
mov
pop
sbb
cmp
xor
inc
fmul
or
div
iret
mov
push
xchg
popa
add
je
mov
jmp
mov
inc
mov
mov
push
mov
mov
and
out
jne
bound
mov
gs
xchg
enter
data16
addr16
shr
and
xor
cmp
ret
dec
sahf
lods
bound
(bad)
lods
or
jae
mov
sysexit
ds
inc
bswap
cmp
pusha
repnz
and
rcl
add
aas
repz
jae
sub
mov
xlat
les
jnp
mov
dec
cmps
inc
retf
adc
(bad)
inc
adc
pop
or
mov
fadd
inc
in
push
int
cwde
dec
push
push
nop
mov
loopne
ins
test
nop
lods
pop
dec
sbb
pushf
sub
into
pop
dec
fs
(bad)
(bad)
in
xor
mov
aaa
(bad)
jne
xor
int
mov
dec
fstp
push
mov
pusha
inc
push
rcr
mov
dec
push
jb
in
jnp
enter
je
sbb
mov
or
xchg
jns
call
jnp
adc
or
xor
adc
jge
adc
cs
pop
cld
(bad)
mov
sub
cmp
push
in
dec
add
test
mov
inc
adc
pop
and
jno
push
imul
in
cwde
lods
adc
js
pushf
loopne
int
ins
(bad)
mov
cmps
jle
div
jbe
xchg
inc
outs
mov
pop
test
cmp
test
and
out
mov
push
mov
rol
nop
cmp
ins
cmp
ja
xchg
(bad)
mov
cld
scas
cmc
outs
aad
mov
(bad)
inc
cmp
ins
inc
and
rcl
push
push
xor
shr
adc
popa
push
xor
movs
xchg
push
fisub
jmp
push
fsubr
mov
pop
jo
mov
jo
int
jb
push
push
dec
push
retf
cmp
dec
mov
mov
sbb
mov
lods
call
add
sub
add
jle
sub
pop
dec
or
add
sahf
sub
xchg
enter
movs
mov
out
xlat
xchg
sbb
enter
mov
(bad)
je
mov
xchg
mov
xchg
pop
jg
retf
inc
mov
test
shr
inc
mov
test
inc
mov
xlat
inc
adc
dec
fs
sbb
pop
scas
fs
cld
int
pushf
jae
js
cmp
stc
dec
mov
movs
push
mov
fs
sbb
ins
shl
mov
cmp
xchg
mov
and
adc
add
mov
aaa
sar
(bad)
ins
xchg
sahf
mov
mov
mov
ret
call
pop
loopne
call
mulps
int3
cmps
push
xchg
add
add
mov
mov
sub
popa
sti
in
test
test
icebp
sbb
mov
xchg
cmc
mov
fnstsw
and
xchg
jbe
popf
mov
inc
ds
pop
jmp
lods
or
or
dec
lds
mov
inc
mov
mov
xchg
inc
inc
or
stos
jb
test
cmp
adc
mov
cld
jnp
jbe
pop
rcr
push
xor
xor
(bad)
cdq
add
aam
ja
sahf
lods
jmp
pop
adc
inc
repnz
out
dec
push
sbb
xchg
inc
inc
jnp
fs
lods
cmc
or
adc
ficom
js
or
mov
adc
jb
mov
cs
mov
sub
out
sub
sub
mov
cmp
sbb
mov
pop
arpl
mov
sbb
test
hlt
enter
push
lods
gs
ins
pop
push
or
neg
push
scas
jmp
ins
jg
lock
add
inc
adc
or
(bad)
dec
push
in
cmc
into
cmp
shr
cmp
sti
jo
ins
cmps
mov
stos
jl
mov
je
shl
push
in
mov
loopne
cmp
vdivps
pusha
in
xlat
xchg
in
inc
out
cmps
ins
jecxz
out
adc
sar
push
(bad)
xor
or
add
and
(bad)
mov
nop
pop
or
imul
out
test
mov
call
and
push
add
stos
das
(bad)
push
in
push
cmp
outs
fbld
inc
test
pop
scas
pop
popf
pop
ret
daa
cmc
imul
lods
lahf
sbb
mov
outs
cmps
and
fwait
aad
inc
jg
dec
sbb
fsubr
dec
sub
sub
ds
inc
add
sub
ins
imul
es
add
push
push
out
and
std
and
test
mov
sub
dec
mov
fisub
scas
div
lock
and
pop
leave
xchg
pop
add
out
sbb
and
lahf
inc
retf
xlat
rol
out
add
jmp
or
stc
das
jnp
movs
bound
mov
mov
ins
mov
int3
adc
cmp
sbb
scas
jl
jle
sbb
popa
mov
xchg
dec
sbb
enter
xor
repz
lock
movs
pusha
xor
push
fmul
aas
xchg
and
mov
int
cmp
stc
push
fisubr
jae
scas
inc
out
jmp
iret
sub
(bad)
jecxz
jno
push
add
mov
sti
mov
cli
adc
sub
inc
add
xor
and
push
sbb
mov
mov
cmc
mov
and
mov
mov
cwde
(bad)
int
retf
jge
jmp
mov
ror
rcr
hlt
sbb
push
movs
fcom
fild
fisttp
jmp
fld
out
js
adc
add
mov
(bad)
cmp
add
popa
enter
in
out
test
push
inc
dec
mov
cwde
loope
cmp
push
repz
inc
das
js
(bad)
add
test
mov
sub
sahf
lock
retf
mov
cmc
adc
or
mov
mov
or
popa
push
(bad)
sub
mov
ja
mov
cmp
(bad)
clc
ror
movs
mov
cmc
xor
cmc
jnp
aaa
jo
(bad)
xor
jecxz
sub
xchg
mov
ins
inc
mov
cmp
int3
or
movs
fldenv
push
or
adc
popf
sub
jmp
mov
in
lahf
sbb
xlat
and
sbb
aad
sbb
test
jge
inc
push
mov
mov
xchg
ins
push
mov
dec
mov
pop
pop
xor
std
stc
dec
dec
and
not
int
mov
pop
push
mov
push
mov
pop
push
lds
jmp
dec
in
cmp
xchg
sub
mov
jmp
jmp
push
cs
test
adc
inc
mov
push
lds
inc
xchg
jmp
dec
aas
pop
test
imul
ss
push
and
mov
add
dec
jnp
dec
fisub
jne
pop
mov
pop
sar
and
sub
mov
push
dec
push
(bad)
sbb
ins
sub
or
mov
es
xchg
mov
push
ins
mov
and
cmc
ins
sbb
mov
aad
pop
fimul
mov
aaa
mov
pop
stos
outs
fild
sbb
pop
xchg
sbb
(bad)
(bad)
ins
and
enter
add
mov
inc
cmp
call
popa
jnp
inc
push
mov
adc
or
les
pop
mov
(bad)
sbb
mov
pop
idiv
dec
adc
call
pop
and
loop
cmp
and
test
(bad)
adc
sub
rcl
jmp
adc
iret
pop
adc
xor
or
mov
cmp
(bad)
ds
mov
xor
inc
xor
inc
cdq
mov
inc
mov
add
gs
xchg
arpl
lea
mov
push
scas
shl
not
popa
dec
push
xor
inc
xor
inc
out
test
or
repnz
loope
test
dec
push
adc
popf
movs
and
fwait
add
push
fcomp
mov
rcr
mov
xchg
pop
mov
lds
inc
adc
jno
dec
test
xor
daa
arpl
inc
sbb
cmc
xchg
enter
(bad)
cli
inc
dec
addr16
xchg
push
pop
push
jbe
mov
pop
scas
cmp
movs
ja
das
or
pop
sahf
mov
aad
repnz
sbb
cmc
pop
sub
cmp
sbb
fdiv
into
jb
scas
int3
loop
shl
pop
jb
cmp
mov
cmp
mov
(bad)
mul
call
test
sub
jmp
pop
xchg
dec
push
jb
dec
pop
sbb
cmp
(bad)
mov
adc
adc
dec
push
jnp
ins
mov
inc
dec
sar
repnz
push
sub
mov
aad
mov
(bad)
mov
xchg
out
fstp
ins
jmp
jnp
cmp
xchg
mov
sbb
push
push
xor
mov
mov
clc
push
cmp
(bad)
mov
lahf
mov
push
mov
sub
arpl
mov
mov
dec
mov
and
in
xchg
adc
xor
aas
sub
mov
xor
add
fs
sub
jae
outs
sub
pop
cmp
mov
call
mov
inc
mul
sbb
repz
addr16
test
mov
dec
pop
xor
mov
jnp
mov
(bad)
outs
sub
out
add
popa
push
js
test
and
hlt
in
in
ss
imul
(bad)
out
in
dec
test
and
adc
adc
pop
fisttp
cmp
outs
hlt
je
mov
sbb
mov
xchg
or
mov
xchg
scas
xlat
push
fcom
jmp
out
xchg
xchg
and
fs
xchg
ins
fs
push
xor
push
cli
jl
xchg
push
inc
pop
enter
mov
ja
xchg
mov
push
je
shl
mul
bound
sbb
mov
dec
hlt
addr16
cmp
imul
xchg
hlt
push
enter
ret
pop
cmp
push
cld
pop
ds
mov
(bad)
lods
xor
mov
pushf
fwait
(bad)
mov
mov
retf
xor
cmp
(bad)
movs
mov
jae
arpl
mov
(bad)
mov
mov
ret
out
jb
add
push
mov
jne
inc
cmp
add
out
jnp
mov
adc
xor
icebp
add
xor
inc
sub
test
pop
div
gs
sbb
repnz
imul
daa
and
pop
and
outs
mov
mov
mov
shr
xor
enter
jmp
pop
jge
dec
(bad)
pop
cli
icebp
fcomip
cmp
aam
mov
ja
out
fwait
push
mov
outs
aas
push
add
int3
sbb
icebp
arpl
or
imul
mov
xlat
push
stos
mov
cmp
sub
cmp
fcom
sbb
mov
sub
jmp
fstp
mov
dec
push
push
sar
repz
outs
push
(bad)
adc
pop
or
aas
dec
or
outs
lods
gs
cmp
inc
adc
jmp
xor
cmps
fcom
adc
dec
clc
jnp
inc
cmp
cmp
cmp
mov
imul
add
jecxz
into
and
cmp
add
push
les
or
mov
ret
clc
cmp
mov
push
dec
inc
mov
mov
loop
ficom
xchg
adc
sub
push
add
mov
mov
clc
pop
in
(bad)
std
sar
jnp
pop
xor
push
add
loope
and
xchg
icebp
test
(bad)
out
push
ret
push
fs
mov
outs
loopne
loopne
jmp
lods
int
jecxz
mov
imul
dec
std
or
(bad)
mov
xchg
enter
rol
add
dec
(bad)
adc
push
jge
adc
cwde
mov
mov
pop
xor
enter
mov
xor
and
mov
fmul
xor
jge
jp
mov
push
dec
jo
js
mov
test
stos
push
jns
call
(bad)
loopne
dec
pop
je
stos
xchg
cld
in
sub
(bad)
mov
inc
enter
mov
adc
das
std
mov
xchg
sub
retf
pop
xor
pop
outs
jne
and
sti
inc
out
dec
aaa
add
push
call
and
dec
shl
loop
not
dec
and
aad
mov
out
fisubr
jl
and
xor
pusha
jmp
dec
cld
loope
push
test
loop
jno
jnp
movs
test
jp
lahf
pusha
test
ins
pushf
nop
rcl
stos
cmp
mov
mov
cli
xor
mov
clc
or
add
push
and
in
cmps
or
inc
popa
cmp
loope
add
inc
pusha
(bad)
jmp
scas
cwde
mov
loopne
inc
jnp
xchg
data16
test
sahf
mov
(bad)
rcl
ins
xchg
inc
pop
ins
popa
or
inc
xor
cmps
lds
in
std
fadd
pop
mov
cmp
mov
xor
mov
popa
adc
pop
xor
mov
add
(bad)
in
retf
jp
movs
(bad)
cmp
dec
mov
outs
neg
jge
cmp
ret
out
mov
adc
in
mov
cmp
icebp
xlat
loop
mov
mov
sbb
in
lods
jg
ret
retf
jge
sub
mov
ss
adc
push
mov
push
sub
mov
xchg
jmp
push
ds
nop
mov
mov
test
outs
mov
mov
rcl
fldenv
push
fsub
rcl
iret
jecxz
outs
pop
pop
outs
cmp
or
jp
ror
(bad)
jl
push
sub
xor
jmp
aam
mov
and
pop
ins
stos
xchg
xchg
xchg
push
jo
mov
fisttp
xchg
mov
jg
das
rcr
sahf
fwait
jp
dec
pop
mov
add
icebp
mov
cmp
sub
mov
push
mov
jno
dec
(bad)
jbe
sbb
and
hlt
fstp
ss
cmp
mov
movs
(bad)
imul
movs
pop
cmp
cs
cmp
and
mov
fisubr
in
inc
push
push
push
in
adc
shr
push
dec
push
cs
xlat
adc
pop
addps
mov
xchg
bound
call
stc
xchg
(bad)
sub
jg
loopne
mov
mov
pop
push
xor
out
push
xlat
and
(bad)
loopne
or
and
outs
stos
ret
stos
sbb
add
jg
cmp
jecxz
retf
enter
movs
mov
inc
retf
pop
pop
lock
(bad)
imul
sti
xor
adc
sbb
adc
mov
mov
movs
push
xor
xor
mov
mov
js
sahf
pusha
jmp
outs
jo
xchg
mov
mov
sbb
cmps
jbe
mov
test
sbb
and
cmp
adc
stc
sub
arpl
ins
xchg
dec
xchg
sbb
xchg
retf
cwde
ret
(bad)
nop
(bad)
cwde
xor
cmps
sub
sahf
fcmovbe
pop
fist
lea
jl
test
xchg
mov
inc
add
test
jo
xchg
mov
(bad)
mov
pusha
(bad)
inc
dec
xor
xchg
jb
arpl
mov
retf
dec
aam
ja
adc
pusha
pop
ja
pushf
or
sbb
sbb
and
das
test
into
push
xor
dec
daa
arpl
test
dec
sbb
clc
sub
pop
movs
pop
in
push
push
xchg
cs
push
add
fwait
add
sbb
xchg
jbe
mov
sbb
sub
sub
dec
retf
pop
or
ja
(bad)
test
es
mov
fs
jnp
mov
xchg
sub
xchg
ror
push
dec
leave
jne
mov
jmp
setle
mov
fwait
jb
retf
ss
inc
mov
pop
add
mov
sbb
mov
out
dec
lods
or
imul
xchg
cmp
jbe
adc
or
aas
fisubr
push
fisttp
push
or
pop
gs
inc
fisttp
jae
xor
pop
or
fldenv
push
pop
sbb
mov
jne
test
inc
pop
push
and
test
sbb
fsubr
sub
movs
leave
mov
xchg
daa
jae
dec
stos
mov
ds
sub
cmc
movs
lea
adc
mov
div
leave
or
push
cmp
js
repz
xchg
call
bsr
mov
fxtract
sbb
pop
fcom
jge
lock
adc
inc
cld
lods
outs
cwde
fistp
lods
pop
daa
pushf
out
aas
ret
jmp
out
(bad)
lock
xchg
pop
pop
int3
mov
mov
sbb
cdq
add
fdivp
jp
xor
out
or
sbb
mov
fist
cmp
shl
ja
mov
jns
iret
fwait
and
lods
push
adc
jbe
push
or
in
(bad)
cs
popf
lea
fdivrp
lea
xor
dec
aaa
fadd
add
inc
add
mov
jns
bound
sbb
imul
aaa
sub
mov
dec
(bad)
addr16
push
cmp
cwde
pop
xor
xor
leave
aad
pop
das
or
lahf
adc
sbb
(bad)
jno
cmp
in
cli
mov
mov
mov
jl
xchg
adc
(bad)
cdq
or
hlt
cmc
(bad)
repz
mov
(bad)
xchg
xor
pop
sti
rdseed
inc
adc
jmp
scas
iret
xor
jg
mov
pop
add
push
ja
jle
push
push
mov
sub
rol
mov
out
out
xchg
imul
out
add
mov
adc
je
lock
pop
mov
pop
test
add
pop
std
sbb
cli
gs
dec
outs
push
pop
clc
clc
adc
mov
jbe
das
xchg
daa
or
inc
int
add
push
ror
lods
cmps
test
cmp
aas
movs
les
ins
pop
inc
pop
sub
mov
ficom
jle
push
cs
test
imul
cld
xchg
dec
rol
rcr
stos
loope
loop
jbe
xchg
inc
inc
push
es
lahf
fwait
imul
add
lock
pop
js
sub
xchg
xchg
popf
xor
dec
pop
pop
jns
xchg
cmp
push
jne
add
xor
mov
ret
jmp
das
neg
pushf
retf
sub
or
and
aaa
daa
xor
ss
sbb
iret
into
xchg
push
push
sbb
or
addr16
xchg
push
jl
test
popf
and
xor
hlt
add
movs
mov
pop
dec
retf
jne
outs
rcl
out
cmovbe
xor
jl
ret
enter
js
cmp
repz
cmp
push
(bad)
mov
mov
aad
push
scas
sti
xchg
and
jbe
scas
mov
popf
push
icebp
dec
dec
and
sub
xor
adc
and
push
add
mov
shl
xchg
js
icebp
jo
inc
popa
sub
shl
sub
inc
and
mov
outs
cmp
rol
cld
je
jne
jns
(bad)
shr
int3
dec
mul
dec
inc
xor
sar
mov
jmp
(bad)
js
sub
jmp
psllq
fisttp
movs
lahf
repz
mov
mov
retf
push
loope
dec
add
loop
pop
int3
pop
push
adc
lods
adc
das
pop
fisttp
jae
and
cmp
push
xor
fwait
ret
pushf
imul
cmp
add
cmc
outs
push
movs
dec
adc
(bad)
mov
rol
aas
ret
adc
sbb
sti
and
cmp
mov
mov
pushf
out
and
xor
mov
call
jno
push
lods
sub
rcr
cld
cwde
sub
ins
ja
inc
sbb
rol
aaa
hlt
mov
xchg
scas
xchg
push
cld
out
mov
test
in
stc
mov
pushf
xor
sbb
imul
fs
or
pop
(bad)
mov
xchg
retf
in
cmpxchg
xchg
cmps
inc
jp
retf
in
fs
es
xchg
push
xchg
scas
aaa
or
push
movs
rcr
ss
call
icebp
retf
mov
popf
idiv
pushf
cmp
jbe
add
arpl
cmc
mov
in
test
inc
and
xor
inc
inc
push
add
test
mov
mov
mov
fdiv
jp
mov
mov
shl
ret
iret
div
repnz
ficomp
ins
test
pop
(bad)
stos
mov
nop
add
pop
adc
pop
and
mov
mov
or
ss
movs
dec
fs
into
int
sub
mov
lahf
jecxz
aaa
push
pop
movs
xchg
pusha
mov
sub
and
xor
jne
das
lea
popf
mov
call
jns
adc
add
les
sbb
or
sbb
loopne
xor
retf
cmp
xchg
mov
iret
ret
push
pusha
leave
jl
popa
cdq
outs
xchg
push
outs
xchg
and
pop
iret
daa
icebp
sar
in
and
pop
adc
enter
mov
shl
ins
ds
pop
push
clc
mov
mov
jae
and
je
call
mov
and
(bad)
es
jnp
cmps
mov
and
ins
inc
gs
push
out
bswap
out
xor
inc
fcom
rcl
pop
mov
test
or
pop
inc
movs
adc
sub
sub
psrad
popf
into
jo
mov
mov
add
pop
jne
xor
ficomp
retf
ret
das
or
sbb
adc
sbb
jno
adc
inc
push
js
fiadd
sub
xchg
mov
pop
jne
mov
jmp
mov
sbb
push
ins
enter
push
fs
test
imul
inc
loop
movs
repnz
adc
mov
jbe
xor
push
popa
or
pop
dec
xor
sub
bound
pop
sub
inc
jo
add
pop
arpl
vmread
popa
mov
inc
xor
loope
adc
leave
or
cmc
cmp
adc
xor
adc
(bad)
mov
fld
inc
icebp
icebp
aad
xor
sahf
aaa
add
lahf
xchg
mov
push
xchg
out
push
mov
imul
inc
repz
sub
sahf
sub
cmp
test
(bad)
sub
rcl
sti
sbb
cmp
loope
xchg
aad
inc
push
ins
sbb
std
rol
pop
xchg
xchg
or
lahf
mov
in
std
or
mov
mov
pop
sub
enter
mov
ins
retf
pop
ins
jecxz
pop
movs
jns
lods
and
or
push
jbe
mov
ds
test
mov
sbb
adc
sbb
sbb
aad
jmp
call
jno
mov
push
push
mov
jecxz
pop
and
inc
xor
or
cmps
xor
sbb
lea
adc
shr
xor
push
push
lds
inc
movs
fdiv
adc
mov
push
adc
or
pop
jge
pop
mov
test
push
ret
(bad)
jns
sbb
jne
movs
sti
cs
adc
test
cmp
xchg
ror
ja
xor
je
repz
ss
bswap
ja
div
xor
movs
gs
add
xor
lahf
out
mov
push
sub
leave
mov
jbe
mov
ficom
adc
stc
jae
cmp
and
sar
mov
push
sub
das
jle
les
loop
xchg
cmp
test
ret
add
stos
or
pop
mov
jg
pop
and
xchg
test
pushf
popa
ds
sbb
jnp
cli
mov
retf
mov
nop
je
mov
mov
xchg
and
mov
xchg
jbe
pop
pop
cmp
push
lods
pusha
sub
adc
scas
xchg
jno
pop
(bad)
mov
push
xor
push
mov
ds
adc
imul
or
push
cmps
ins
call
outs
cmps
mov
mov
or
inc
movs
mov
dec
jg
cmp
xchg
aad
push
std
(bad)
(bad)
mov
ror
je
scas
push
and
xchg
add
mov
and
fisttp
mov
sbb
mov
xor
inc
pop
imul
add
sub
sub
jo
push
mov
in
add
cdq
xor
js
sbb
xchg
sbb
rol
mov
mov
cmp
inc
stos
(bad)
mov
pop
or
daa
adc
inc
out
inc
add
fwait
xor
test
call
retf
idiv
jmp
sub
pop
mov
lock
cli
clc
bsr
js
xor
outs
cmp
arpl
out
ins
(bad)
aad
popa
(bad)
pop
lahf
fstp
jmp
push
in
stc
cmp
sub
je
push
mov
and
or
outs
out
pop
lea
push
outs
scas
sub
mov
out
mov
ret
and
shr
leave
dec
cmc
cwde
cld
inc
mov
fs
inc
xchg
cmp
push
in
xchg
push
adc
push
(bad)
fs
hlt
jb
xor
xlat
pop
repnz
out
jge
rcl
bound
sub
add
or
and
popf
call
add
scas
pop
and
scas
enter
clc
inc
(bad)
call
cwde
jmp
jmp
mov
mov
mov
ins
mov
mov
pop
jns
ja
mov
add
call
movs
or
popa
pop
xor
mov
pop
std
into
addr16
jp
xchg
adc
dec
sbb
(bad)
out
out
mov
xor
pop
lods
pushf
(bad)
jbe
xor
outs
add
push
daa
fisubr
sbb
fwait
int
fst
add
ja
mov
fild
sbb
adc
rcl
ret
adc
ss
stc
or
mov
jno
xchg
sub
mov
push
dec
loope
push
(bad)
das
or
sub
repnz
pop
mov
ds
in
sub
lds
adc
cmc
sub
pusha
push
inc
add
sub
xchg
adc
scas
add
push
jmp
or
outs
cmp
adc
test
mov
shr
jb
(bad)
sbb
inc
in
out
jbe
inc
cli
push
test
mov
ss
lock
cld
cmps
sbb
stos
cld
or
push
and
in
mov
push
add
movs
retf
cmps
cdq
pusha
xchg
sar
scas
sub
js
(bad)
in
xor
pop
jmp
mov
call
ins
fs
mov
mov
or
movs
cmp
add
imul
jg
push
out
pop
stos
cmp
imul
sbb
dec
imul
pop
fild
ror
fidivr
shr
sub
pop
adc
dec
das
loope
add
inc
rcl
lds
add
pop
adc
mov
xchg
push
sub
mov
mov
gs
mov
dec
test
test
push
cli
fld
or
inc
dec
ss
pop
ss
push
sbb
or
outs
push
in
xchg
add
push
setl
pusha
jmp
xchg
retf
mov
and
call
jno
std
ficomp
xor
ds
mov
xor
rcl
jp
pop
je
pop
sahf
sbb
fist
inc
daa
pop
mov
adc
sbb
or
call
cmp
rcr
rcr
popa
in
cs
push
and
test
add
add
ins
int3
jnp
push
and
ins
push
movs
rcr
add
inc
leave
mov
movs
mov
fldcw
ds
aas
aaa
jg
nop
or
mov
push
outs
icebp
jmp
ret
lods
mov
jp
push
cmp
pop
cmp
movs
pop
push
sub
and
mov
add
enter
cmp
js
mov
jno
hlt
jmp
daa
xor
pop
gs
dec
enter
or
js
rcpps
scas
and
mov
xor
cmp
jge
sub
mov
pop
jmp
iret
jge
sbb
jmp
xchg
test
xchg
aaa
jnp
or
test
mov
pusha
cwde
dec
cwde
cmp
stc
pop
lds
push
loope
add
dec
push
push
sbb
xor
xor
pop
scas
adc
jl
repnz
icebp
(bad)
sbb
pop
rcl
xchg
jmp
dec
int3
idiv
mov
mov
push
repz
cmp
sub
imul
sub
sbb
rol
test
sub
out
push
cli
popa
push
adc
ss
add
jecxz
dec
not
adc
sub
dec
lea
js
lods
js
ficom
shr
or
sub
sbb
jb
xor
sub
into
and
cs
push
popf
sub
jmp
xor
mov
jne
mov
fistp
and
in
lods
fcomp
adc
dec
aas
inc
jne
mov
sbb
inc
inc
push
xchg
and
push
mov
pop
imul
clc
adc
shr
xor
movs
fs
xchg
add
push
aam
jmp
idiv
mov
cmp
or
hlt
cmc
cdq
fwait
ret
fcom
out
arpl
iret
(bad)
jnp
add
jmp
hlt
lock
push
lahf
xor
or
fadd
dec
mov
arpl
lahf
(bad)
(bad)
psraw
mov
dec
mov
xor
jg
or
imul
cmp
clc
xlat
xchg
sti
(bad)
mov
push
aaa
push
sub
cmp
and
sahf
mov
cmp
in
pop
adc
pop
js
pop
sbb
or
in
sub
inc
inc
adc
in
cmp
test
push
movs
pop
popf
dec
xor
or
scas
add
call
cdq
mov
(bad)
lods
dec
test
rol
sbb
and
pop
pop
test
fimul
retf
aam
or
jo
mov
call
add
aaa
fnstcw
fwait
popf
cmp
push
clc
mov
je
and
cwde
scas
cwde
stos
(bad)
mov
cmps
loope
or
test
jb
lods
pusha
pop
and
sub
mov
pop
cmp
in
jl
xchg
sub
test
aam
jne
ins
xchg
pop
jmp
stc
jp
aad
cmps
mov
jnp
hlt
jmp
ret
push
add
call
jb
aas
in
mov
add
pop
lds
int3
mov
pusha
js
ror
cld
cmp
out
test
in
jae
fisttp
sbb
cli
xor
sbb
arpl
(bad)
xor
jbe
dec
and
xchg
mov
jb
jl
dec
std
daa
stos
inc
ds
out
jns
ss
jne
push
repnz
fbstp
(bad)
fbstp
call
movs
test
sti
int3
stos
pop
sub
fmul
ror
in
sub
not
movs
test
cmps
hlt
pop
cld
adc
sub
(bad)
pop
lods
nop
and
mov
iret
cmp
adc
mov
xchg
pushf
aam
push
and
iret
fwait
es
or
mov
jecxz
xor
sbb
xor
cmps
ins
popa
fild
ds
cmp
ret
mov
scas
call
or
pop
jecxz
jo
push
jae
xchg
xchg
call
fsub
stc
jnp
int3
fsubr
xchg
retf
pop
test
retf
and
ret
sti
and
or
add
push
sub
xchg
ficom
jl
ret
pop
xor
inc
inc
sub
mov
movs
aam
cli
cmps
cmp
movs
sbb
loop
add
push
movs
in
retf
adc
xchg
imul
inc
or
cmp
add
add
push
jmp
fadd
push
mov
ror
call
sbb
aas
and
cmp
aaa
cmps
mov
call
dec
mov
adc
or
or
pop
outs
movs
sub
popf
sbb
dec
push
inc
icebp
loop
popfw
adc
imul
add
mov
push
lods
mov
push
imul
inc
sbb
aas
jne
rcr
sbb
cmp
shr
mov
call
sub
fwait
mov
retf
int3
cld
push
sahf
xor
pop
shl
jmp
pop
fist
push
dec
dec
pop
test
inc
pop
add
push
jns
call
inc
retf
mov
push
test
cmp
scas
mov
dec
std
jl
call
pushf
sbb
pop
push
dec
mov
lods
sub
mov
pop
xchg
sbb
jbe
in
and
(bad)
pop
repnz
lahf
sbb
ret
dec
mov
mov
clc
in
stos
movs
xchg
pop
rcl
sbb
fwait
xor
je
xor
fsubr
inc
push
call
test
xchg
push
fimul
test
jmp
pop
and
data16
mov
mov
scas
mov
xchg
adc
arpl
jge
dec
or
jmp
mov
int
cmc
aas
dec
shl
cmp
and
mov
jge
push
pop
rcl
mov
outs
add
cmps
(bad)
retf
sbb
mov
xchg
int
setb
lods
add
or
or
pop
lods
add
cmp
mov
popf
iret
(bad)
movs
rcr
dec
jle
dec
push
loop
nop
jne
sub
cs
cdq
mov
pop
adc
and
shl
popf
mov
mov
sbb
mov
cmp
das
pop
stc
pop
test
xchg
shr
sub
cs
je
pop
mov
cmp
and
xchg
lock
xor
test
push
daa
xor
mov
retf
popa
sub
loopne
sti
and
lea
cmps
xchg
adc
xor
mov
mov
loop
push
mov
cmp
(bad)
and
mov
cwde
adc
cs
and
jo
ror
aas
movs
mov
test
icebp
mov
push
add
lods
dec
or
inc
ds
sub
repz
mov
add
sub
cmp
dec
jl
(bad)
jge
loope
retf
imul
scas
fiadd
lock
mov
retf
pop
test
jp
sub
lods
mov
mov
jno
stos
sub
in
popf
xor
sar
out
mov
retf
mov
std
mov
cmp
xchg
jbe
int
inc
sub
ror
sbb
mov
jmp
sbb
fsubr
inc
xchg
in
mov
retf
(bad)
aam
jae
cmc
out
or
jmp
add
jge
arpl
mov
push
mov
mov
mov
cmp
cmp
or
nop
add
cmp
and
jmp
punpcklbw
les
aas
int3
clc
nop
(bad)
ret
push
fcompp
xor
mov
pminub
daa
and
ja
cmp
pusha
mov
xchg
setbe
xchg
mov
in
dec
fidiv
adc
push
sti
aas
in
shl
cdq
sti
adc
inc
add
xor
pop
icebp
outs
adc
repnz
pop
xchg
sbb
jno
mul
ja
mov
mov
cmp
(bad)
mov
add
mov
sbb
mov
repnz
icebp
or
les
mov
jo
dec
and
push
xchg
or
cmp
shr
adc
js
cs
cmp
loopne
xor
jo
rcl
rcl
rcr
icebp
push
mov
rcl
inc
in
add
lods
sub
div
js
and
ins
sub
push
and
xchg
mov
in
mov
faddp
(bad)
fwait
add
fwait
fwait
pop
or
jg
daa
idiv
pop
mov
loope
mov
adc
mov
sti
inc
aam
test
ret
mov
stc
sbb
cmp
pop
jnp
push
jmp
cmp
inc
xor
cs
loop
(bad)
movs
adc
push
sbb
adc
fwait
adc
loop
dec
adc
call
mov
test
es
sbb
xchg
dec
push
xor
dec
nop
jne
sti
or
pop
mov
popa
dec
je
icebp
retf
xor
xor
fsubr
aas
sub
ins
add
adc
mov
add
add
mov
pop
ret
mov
mov
mov
inc
pushf
dec
jb
sahf
gs
xor
(bad)
xor
push
and
xchg
cdq
pop
push
aas
xor
push
mov
imul
pop
add
add
jmp
jmp
xchg
mov
sub
movs
add
cdq
movs
ffree
stos
push
retf
popa
mov
loopne
je
mov
mov
sub
clc
inc
xchg
sbb
mov
xlat
pop
pop
fcom
out
xchg
fld
sub
jb
add
into
ret
pop
push
or
retf
sbb
mov
idiv
adc
shl
add
jns
movs
push
stos
jl
pusha
int3
icebp
mov
sahf
popf
mov
ret
lock
es
lock
in
ins
xor
sub
xor
movs
or
jno
daa
or
mov
xlat
shl
cld
push
cdq
jp
push
lahf
sub
inc
fnsave
neg
je
ins
add
mov
mov
fist
movs
xor
mov
or
xchg
xor
or
cdq
lock
cwde
xchg
sub
jmp
jbe
popa
loope
sub
idiv
jns
cld
test
cli
xchg
bound
xchg
popa
xor
sub
push
xchg
add
mov
or
not
fdiv
sub
aas
cmp
adc
lock
pop
jb
js
xchg
(bad)
xchg
(bad)
mov
mov
dec
xchg
and
lods
into
fwait
or
(bad)
mov
in
and
adc
imul
pop
movs
popa
int
pushf
ret
push
jo
sub
fcomp
xlat
pop
inc
(bad)
ds
(bad)
repz
mov
jbe
scas
xchg
xor
fst
lds
fs
cmp
hlt
movs
mov
sahf
cmps
dec
push
fs
aad
mov
add
dec
mov
cmp
gs
loopne
jl
test
addr16
and
sub
lods
push
loop
sbb
jb
pop
pop
xlat
pop
nop
pop
sti
pop
pop
call
fsubr
sbb
cld
and
mov
iret
das
mov
stos
push
sub
or
sub
push
or
push
movs
dec
cmps
retf
adc
xchg
cwde
xchg
mov
fcos
scas
mov
rol
outs
rol
into
stos
repz
sub
add
push
fcmovne
movs
or
and
jmp
clc
in
add
add
shr
sar
sub
imul
ficom
vpsubq
dec
outs
pop
jo
scas
outs
test
push
and
or
jge
or
rol
ins
cdq
nop
loopne
stc
leave
xlat
loopne
in
pusha
movs
inc
xchg
pop
outs
xlat
add
scas
add
pop
push
ins
and
sbb
test
je
test
xlat
je
jl
ja
push
pop
out
cmps
pop
sub
inc
cli
movs
loope
adc
add
sbb
lahf
stc
sbb
cdq
inc
ja
fwait
cs
aas
add
jmp
or
push
cli
lock
daa
dec
inc
ins
rol
add
out
pop
mov
push
jns
sub
(bad)
or
or
cmp
mov
ins
dec
and
xchg
stos
adc
out
xchg
retf
fwait
mov
sub
inc
dec
pop
jnp
popa
inc
rol
add
add
daa
sub
not
mov
je
call
cli
rol
call
js
xchg
sbb
or
or
and
or
pushf
or
enter
push
ss
iret
pop
push
xchg
mov
popa
jle
sbb
daa
leave
mov
adc
push
lea
popf
mov
test
jmp
dec
xor
enter
cmp
(bad)
mov
cmp
mov
sbb
mov
inc
cmp
icebp
mov
fldcw
stc
push
jo
and
je
ret
mov
jl
out
pushf
mov
enter
jne
fs
ja
retf
lds
mov
ds
or
shl
xchg
adc
sti
dec
inc
rcl
push
sub
repnz
ja
and
pushf
es
clc
pop
pop
xor
jl
xor
mov
adc
xor
mov
bound
stc
mov
sahf
mov
add
add
inc
xor
out
push
ins
jbe
xchg
mov
lds
(bad)
or
push
dec
and
in
fisttp
hlt
jp
les
sub
xchg
adc
cmc
mov
xchg
add
xor
iret
mov
sub
aaa
icebp
pavgw
xor
mov
mov
dec
ret
mov
shl
sub
hlt
or
out
jo
sub
fs
and
adc
rcl
frstor
inc
mov
xchg
jo
dec
xchg
aas
iret
fmul
dec
mov
in
int
fdiv
mov
shl
lea
sub
sbb
call
inc
and
sbb
mov
mov
push
aas
adc
or
mov
ins
call
xchg
in
cmps
pinsrw
outs
sti
shr
sbb
pop
xor
adc
clc
icebp
or
jg
enter
push
loop
push
test
adc
and
fidivr
sub
mov
pop
neg
push
sbb
scas
loope
mov
shl
xchg
mov
mov
(bad)
cs
out
retf
sbb
sbb
push
mov
push
jmp
adc
adc
jne
bound
or
sub
mov
inc
(bad)
and
fdiv
pop
das
ffreep
fisttp
jg
push
std
cli
stos
push
sbb
and
les
xor
xor
jae
xchg
mov
loop
mov
jg
cmp
out
idiv
xchg
xchg
and
fnstenv
into
and
cmp
shl
inc
dec
pop
jbe
ret
jge
mov
jo
sub
mov
les
(bad)
xchg
mov
mov
sbb
and
inc
ret
jnp
jle
jmp
ins
xchg
push
icebp
es
loope
sbb
cwde
push
mov
xor
mov
mov
sub
push
js
stos
push
cwde
mov
mov
xchg
jge
add
ins
retf
pop
ret
repz
cmp
fisttp
jae
inc
push
loop
dec
test
stos
sub
add
dec
das
xchg
cdq
in
std
push
(bad)
in
aas
fwait
and
cmp
add
sub
iret
sub
sbb
dec
inc
lods
adc
inc
jp
test
adc
es
pop
rcr
cmc
cdq
(bad)
sub
ret
cmps
ret
fidivr
xchg
mov
rol
pop
dec
dec
into
stc
push
stos
cld
mov
push
ja
out
mov
imul
inc
push
mov
repz
js
idiv
loopne
out
mov
fisubr
or
xor
les
cwde
mov
or
(bad)
(bad)
dec
mov
or
mov
and
pop
retf
sub
push
fdivr
hlt
test
mov
cmps
adc
(bad)
into
push
pop
and
mov
sbb
movs
or
ja
stos
push
mov
adc
pushf
in
ja
scas
push
scas
sub
(bad)
es
sub
lock
(bad)
in
mov
outs
cli
mov
int3
mov
mov
adc
dec
cdq
shr
xchg
pop
loop
mov
pop
push
(bad)
call
push
cmps
push
ficom
inc
and
scas
fneni(8087
push
add
loop
jae
je
out
pop
jbe
ror
retf
mov
call
xchg
stos
scas
xor
push
loope
adc
shl
mul
in
mov
out
and
mov
cdq
xchg
cmc
mov
adc
inc
(bad)
jo
jmp
cmp
cwde
jne
or
(bad)
pop
(bad)
pop
dec
push
loopne
mov
data16
or
stos
dec
popa
inc
push
or
lea
add
ss
mov
in
scas
cs
jae
(bad)
enter
jg
cmps
cs
adc
jae
mov
pop
push
pop
push
mov
jge
fcomp
pop
cs
or
out
sbb
pushf
jno
ret
and
inc
push
je
out
push
mov
cli
xor
and
leave
fistp
mov
out
aaa
dec
pop
clc
call
cld
add
add
push
mov
jle
outs
outs
bound
sbb
dec
into
add
out
pop
xor
gs
int
adc
pop
jge
je
mov
xchg
cmp
mov
cmp
movs
jp
push
cdq
xor
jne
jo
jmp
cmp
je
dec
dec
test
jg
mov
mov
mov
movs
nop
pop
mov
jge
cdq
cdq
shl
xchg
pop
sbb
cmp
cmps
pop
(bad)
jmp
enter
call
cdq
mov
int
ins
scas
js
push
xchg
sub
cmp
add
fwait
sbb
adc
sub
inc
xor
call
add
sub
pop
lahf
outs
jl
cmc
addr16
add
xchg
les
cmp
sbb
xor
out
in
pusha
aas
or
mov
jo
sbb
xchg
ret
dec
pop
mov
or
mov
sbb
adc
sbb
add
ret
add
push
mov
jmp
pusha
jmp
push
mov
sbb
sahf
(bad)
addr16
clc
test
inc
sub
jecxz
aam
jmp
ret
xchg
retf
mov
pop
in
out
pop
js
push
repz
rcl
mov
add
mov
arpl
lea
lds
into
dec
sub
stos
daa
mov
pop
push
ss
adc
test
rol
mov
mov
adc
jl
mov
and
dec
shr
inc
rcr
xor
rcr
sahf
rol
cmc
or
aas
mov
ins
pop
into
ja
cmp
jno
xchg
(bad)
ins
jo
push
scas
pushw
test
daa
(bad)
sub
out
ins
jbe
push
mul
cs
repz
inc
xor
shl
xor
aad
out
ret
xor
inc
outs
popa
jne
mov
loop
retfw
pop
mov
xchg
pop
jp
ret
(bad)
rol
xchg
(bad)
mov
jns
mov
inc
dec
fdiv
call
sub
xor
or
imul
sub
mov
add
mov
lods
mov
and
jp
dec
stos
lods
popf
(bad)
aam
fsubrp
add
sub
pushf
inc
shl
jae
mov
push
out
sbb
loope
cmp
dec
mov
mov
(bad)
dec
or
mov
and
outs
call
cli
and
dec
ja
out
xor
mov
pop
scas
add
leave
dec
xlat
cmp
sti
jno
inc
mov
cld
jmp
ds
mov
sub
les
push
and
inc
subps
jp
xchg
pcmpeqd
pop
pop
sahf
les
adc
cdq
sbb
pop
xchg
pushf
xor
mov
es
leave
pop
lahf
outs
xor
test
pop
jo
or
pop
test
push
jne
adc
shl
jns
jge
nop
xlat
dec
rol
xor
aam
jp
xor
call
daa
mov
pusha
xchg
xor
sub
or
aaa
sahf
dec
aaa
ja
jns
mov
xchg
sbb
fs
jne
mov
popf
leave
clc
add
or
cs
outs
push
int3
inc
mov
frstor
sub
add
out
and
js
pop
outs
and
sbb
pusha
aas
pop
inc
fsubr
test
sub
cwde
push
ins
dec
add
xchg
test
out
mov
lods
cmps
je
pop
(bad)
pop
jnp
in
xor
adc
mov
into
(bad)
mov
test
ins
lock
and
ins
push
sbb
xchg
stos
sbb
pop
push
aam
stos
sbb
mov
jg
icebp
test
xchg
jns
outs
pop
enter
or
idiv
dec
pop
cmps
jbe
mov
inc
or
dec
movs
jmp
pop
add
neg
add
int
xor
xor
jmp
(bad)
repnz
das
jecxz
inc
dec
out
dec
jmp
jbe
ins
push
lahf
into
scas
jns
xor
outs
cmps
test
pmovmskb
sbb
pop
ins
pop
xchg
push
and
push
mov
cmp
push
sbb
inc
hlt
push
ret
dec
jl
enter
leave
push
xchg
mov
call
jp
xor
es
mov
fcmovbe
ds
dec
sbb
inc
xchg
or
or
sti
lock
jns
dec
fsubr
jae
fadd
adc
mov
sub
cli
sub
ss
sahf
mov
xchg
ret
arpl
lock
test
cmps
push
arpl
add
test
scas
mov
mul
adc
and
call
bound
xchg
bound
xchg
push
push
enter
xor
mov
ins
sbb
scas
inc
outs
adc
jne
xor
sbb
sbb
adc
je
iret
pushf
pop
das
repz
push
jo
lods
adc
mov
pop
mov
cld
inc
and
mov
nop
movzx
stos
movs
(bad)
not
sbb
cmova
popf
or
adc
adc
int
test
pop
xchg
ja
enter
push
add
pusha
push
stc
aas
xor
push
pop
out
(bad)
add
jp
aam
xor
out
(bad)
mov
shl
push
or
mov
cs
outs
clc
mov
sub
sahf
dec
jb
ret
lds
aaa
jg
cmp
imul
addr16
ins
fs
lds
and
js
push
lods
pushf
mov
and
mov
retf
push
fs
frstor
xlat
or
loop
or
adc
push
pop
hlt
imul
and
aad
jecxz
adc
daa
pop
dec
shl
add
xchg
out
test
lahf
int3
cmp
cmp
aaa
jmp
test
scas
push
imul
das
les
xor
xor
xor
sub
aam
add
(bad)
fcom
(bad)
fwait
outs
mov
loope
mov
push
fidiv
retf
and
sbb
out
pop
iret
mov
hlt
add
mov
or
push
pop
jmp
cdq
add
cli
retf
cmps
std
dec
bound
cmps
inc
(bad)
jle
sub
out
mov
and
(bad)
adc
or
sbb
nop
loope
lahf
mov
pop
repz
jbe
dec
(bad)
dec
push
enter
push
ret
sti
scas
popa
adc
adc
and
sar
sub
ret
or
sub
leave
push
sub
sahf
sub
enter
ds
aam
add
jns
cmp
mov
lods
sbb
ds
dec
jp
pop
ss
dec
call
push
test
mov
xchg
pop
or
enter
test
ds
popf
or
movaps
adc
add
or
jo
inc
sub
mov
lods
out
cmp
sub
mov
pushf
adc
lock
and
push
popa
xchg
je
(bad)
nop
aaa
pop
mov
mov
xlat
or
outs
test
inc
das
xchg
xchg
jns
mov
in
jp
inc
xlat
xor
not
(bad)
aaa
xchg
mov
mov
push
jle
pop
shr
xadd
cmp
sbb
fldenv
sub
fisttp
push
inc
push
dec
ss
pop
call
ret
in
xchg
call
xchg
aas
and
fsub
or
fdivr
mov
outs
push
scas
push
dec
inc
or
mov
sbb
ins
fistp
js
add
cmp
sub
xor
(bad)
ss
and
pop
push
loopne
div
cmp
int3
pop
repz
jmp
repz
cmp
mov
ret
clc
push
sub
dec
or
out
mov
jae
js
pop
aaa
out
or
js
mov
fdivr
mov
stos
outs
or
pop
ret
dec
xchg
mov
dec
(bad)
sub
pusha
sti
(bad)
enter
mov
inc
retf
in
inc
sti
sbb
ins
pop
mov
dec
mov
outs
ins
jg
inc
punpckhdq
mov
sbb
ja
pusha
add
and
loop
xchg
jl
call
jle
inc
jo
dec
stos
bnd
in
sti
movs
rcr
inc
mov
dec
out
pop
call
pushf
cmp
jno
cs
sub
clc
xlat
int3
enter
fld
arpl
push
scas
jge
add
mov
jbe
sbb
aas
into
mov
jg
mov
lods
pop
bound
popa
push
and
imul
cmp
(bad)
stos
cmp
mov
loopne
jg
pop
mov
lahf
jge
or
test
lods
ror
ja
sbb
les
cli
cmps
je
cmps
test
lods
cwde
push
test
out
cmp
fimul
jo
out
inc
adc
or
arpl
pop
dec
push
fisttp
jae
xor
push
daa
lods
mov
fist
dec
push
inc
ror
xchg
stos
cmp
inc
mov
(bad)
pop
xchg
mov
sti
nop
retf
icebp
cmps
movs
(bad)
loop
push
xor
push
cmp
pop
cli
loope
retf
iret
cld
stc
dec
enter
std
or
inc
daa
cmps
mov
aam
cmps
mov
push
cmp
dec
xchg
ins
jp
(bad)
gs
jg
aad
shr
mov
es
push
mov
sar
outs
xor
xlat
je
call
jne
xor
cmp
add
popa
(bad)
push
xchg
es
dec
xchg
test
jl
fdiv
push
push
pop
sbb
jge
add
movs
adc
mov
idiv
mov
fst
mov
loop
mov
pop
adc
cmp
xchg
pop
lahf
retf
and
mov
out
xor
ja
or
mov
xor
cmp
sbb
inc
jb
(bad)
push
add
mov
jmp
scas
retf
shl
mov
push
cmc
xchg
sub
jne
pop
dec
mov
push
call
loope
inc
call
jecxz
inc
test
inc
retf
add
repz
xchg
(bad)
enter
sub
jp
sub
mov
(bad)
aad
inc
stos
jmp
push
sbb
(bad)
jg
lahf
sub
cmp
jp
xchg
xor
push
and
pop
int
or
push
dec
sbb
in
je
xor
sub
mov
jl
sbb
in
xchg
mov
enter
int3
sub
dec
js
inc
repnz
or
jmp
in
jns
sbb
stos
cld
xor
fucomp
aaa
into
or
scas
das
bound
jae
mov
pop
mov
pop
mov
mov
ss
push
repnz
mov
push
add
cmp
lods
add
(bad)
sbb
nop
dec
sub
les
or
rcr
pop
sbb
inc
fwait
inc
in
inc
jecxz
inc
fucomp
xchg
mov
jne
fstp
mov
in
adc
jo
add
sbb
jne
mov
jle
nop
jmp
push
add
pop
test
jmp
bound
jp
or
(bad)
mov
das
test
(bad)
je
pop
test
adc
scas
mov
sbb
je
les
dec
rcl
mov
mov
int3
shl
jg
int3
mov
ds
lea
div
out
retf
xchg
and
or
inc
mov
cmps
outs
addr16
jb
(bad)
out
jb
sub
push
popf
gs
adc
xchg
mov
je
scas
movd
in
add
jno
aaa
or
inc
addr16
inc
in
popa
lea
mov
cmp
call
pop
xchg
and
dec
addr16
jl
ins
and
mov
mov
dec
xchg
outs
cli
aad
and
or
shl
imul
icebp
pusha
prefetch
cwde
and
pop
in
mov
push
aam
cmps
pop
inc
push
sub
mov
jbe
imul
mov
cmp
clc
mov
mov
cli
lahf
clc
iret
cmps
dec
std
(bad)
xor
outs
add
mov
and
hlt
into
into
into
mov
dec
(bad)
jmp
(bad)
dec
cmc
rol
imul
lods
out
mov
jle
stos
mov
cmp
stos
mov
push
(bad)
add
ds
lock
fld
(bad)
imul
xchg
sbb
loopne
mov
mov
sbb
(bad)
jmp
mov
xchg
ins
leave
cmovb
cs
add
int3
imul
push
jmp
dec
mov
dec
mov
(bad)
data16
cld
cmp
pop
test
call
mov
cdq
xchg
push
jbe
mov
pusha
xchg
movs
(bad)
jo
dec
and
xor
fadd
lock
ins
cmps
push
(bad)
lahf
das
add
(bad)
mov
fistp
test
enter
jno
jmp
xchg
pushf
xchg
cmps
xor
out
jno
add
fdiv
cmovo
in
mov
jg
sbb
sar
lods
and
jecxz
fimul
adc
adc
and
call
mov
dec
jecxz
sub
cmps
sbb
cmp
loope
fadd
add
and
mov
movs
imul
or
cmp
ins
xor
lahf
jb
in
dec
cld
push
je
mov
cld
xchg
xor
nop
les
and
inc
xor
es
jl
xchg
jne
scas
cmp
stos
sbb
push
scas
popa
push
push
sub
dec
push
in
pop
arpl
cmp
dec
inc
jo
push
inc
mov
dec
or
pop
mov
xchg
push
mov
mov
ss
sub
addr16
and
mov
(bad)
and
cwde
xchg
mov
int
(bad)
ins
push
dec
mov
fst
lds
sbb
call
mov
call
cmp
push
jecxz
push
mov
sar
or
aam
ins
xchg
aas
mov
xchg
push
add
fisttp
inc
mov
dec
loope
jl
mov
scas
sub
xlat
mov
mov
fwait
inc
dec
pop
mov
cli
pop
jmp
inc
in
aam
inc
cmp
std
lock
mov
mov
adc
lods
retf
nop
jl
cmp
not
ror
inc
rol
movs
add
xor
inc
xchg
cwde
cmps
mov
mov
adc
xor
jl
mov
iret
inc
sub
aas
pop
or
js
mov
cld
mov
jo
call
xchg
pushf
shl
jmp
dec
jp
loop
fidivr
jmp
mov
sub
fwait
xchg
jecxz
pop
adc
mov
js
fcmovu
and
sbb
enter
imul
add
lahf
gs
enter
jns
leave
(bad)
mov
nop
sub
stc
js
js
mov
fimul
shr
fdivr
add
addr16
out
shr
fld
sub
jl
imul
jle
push
mov
mov
stos
ins
repnz
and
pop
or
pop
xchg
gs
add
or
shr
mov
sub
test
sbb
mov
inc
(bad)
(bad)
in
in
stc
imul
and
mov
mov
loop
pop
hlt
push
dec
push
jg
dec
sbb
push
pop
ret
inc
pop
int3
hlt
xchg
sti
(bad)
out
sbb
sbb
jl
inc
cwde
sbb
xchg
shl
fstp
pop
cmp
or
pop
icebp
xlat
jmp
jmp
pusha
pop
push
scas
xchg
xacquire
retf
movs
fbstp
mov
data16
pusha
fidivr
mov
arpl
push
aaa
jbe
or
mov
push
scas
xchg
into
xchg
leave
add
xor
ins
sbb
out
cmps
push
sub
retf
jmp
sbb
test
(bad)
int3
adc
out
scas
xor
sbb
repnz
or
and
les
push
mov
add
fs
fist
ins
jnp
xor
outs
mov
aad
pop
inc
shl
inc
mov
stos
sbb
nop
jbe
push
xor
ret
jae
add
adc
cli
and
jl
xor
mov
test
jmp
inc
mov
repnz
xor
or
fcmovnb
pop
jecxz
mov
retf
inc
add
push
test
sahf
push
clc
ror
and
div
loopne
xchg
ficom
add
add
xor
pop
xchg
push
adc
mov
inc
repnz
xchg
jle
mov
mov
stos
xor
xchg
lods
fs
dec
inc
jo
mov
sbb
xor
dec
cmp
or
jecxz
out
add
shl
adc
inc
mov
jns
push
cmp
push
and
xchg
cmps
nop
xchg
pop
cmp
ret
sahf
pop
cmp
repnz
test
push
(bad)
jno
mov
or
aad
jb
mov
movs
test
xchg
mov
add
push
ins
inc
sub
out
pop
test
push
lea
add
mov
or
xchg
mov
or
shl
ret
and
mov
pop
inc
inc
scas
or
xchg
(bad)
mov
cmp
inc
pop
jmp
lss
mov
mov
pop
out
stc
push
jnp
fisttp
cmp
add
xor
fidivr
and
call
xchg
pusha
or
adc
rol
std
adc
pop
shl
(bad)
ds
cmp
(bad)
movs
mov
jnp
adc
gs
push
test
jnp
push
jbe
fadd
sub
mov
pop
fisub
lods
lahf
jno
sbb
jge
leave
stc
jno
repz
jns
retf
shl
jb
cdq
movs
jecxz
push
push
mov
sub
cmps
cs
sub
iret
imul
sub
clc
sbb
adc
cmp
push
mov
xchg
hlt
adc
dec
jo
jmp
jcxz
mov
stos
and
adc
dec
inc
test
les
cmps
pop
xchg
gs
or
mov
cmps
push
mov
pop
lea
fs
loopne
jo
dec
retf
sub
stc
ja
adc
add
xchg
imul
(bad)
inc
mov
mov
shl
xchg
fisttp
out
mov
xchg
push
jmp
aad
cld
xor
jg
pop
(bad)
mov
xor
imul
adc
cmp
xchg
test
rol
xchg
les
dec
call
dec
jne
gs
and
mov
shl
xor
push
dec
adc
mov
xor
inc
or
pop
sub
arpl
sbb
cmp
xor
in
pusha
imul
inc
sti
xchg
repnz
aad
fidivr
movs
imul
xor
push
xchg
aas
adc
pop
ret
mov
jb
pop
sub
fstp
or
pop
loopne
arpl
inc
shl
push
inc
mov
(bad)
std
adc
xchg
cmc
stc
mov
bound
fiadd
cwde
xor
mov
push
lea
mov
ret
jno
push
dec
pop
outs
ins
stos
jno
pop
and
jae
push
loop
and
dec
inc
lods
into
dec
inc
es
enter
sub
in
rcl
mov
mov
sbb
xor
mov
xor
ja
cwde
xchg
scas
jo
inc
loope
sar
xchg
cmp
movs
retf
inc
cmp
mov
ror
xchg
mov
pop
add
jecxz
ret
iret
mov
fisttp
int
fdivr
jns
mov
das
dec
fst
push
dec
fs
mov
inc
loope
jmp
int3
movs
cmp
out
jmp
cmp
mov
xlat
imul
mov
das
stos
mov
(bad)
in
push
xchg
fcom
inc
pusha
jbe
xchg
test
call
mov
ins
mov
pop
jbe
sub
jg
(bad)
inc
xor
fidiv
call
push
int3
inc
mov
push
mov
mov
pop
fiadd
fimul
popa
(bad)
in
jnp
jmp
shr
dec
out
jg
adc
int
rol
scas
arpl
dec
ror
dec
femms
dec
fdiv
pop
mov
in
int
push
add
fsubr
inc
fimul
lock
test
loopne
sub
sbb
or
dec
mov
mov
clc
mov
mov
dec
ror
jmp
lods
xor
arpl
push
push
pop
xchg
inc
mov
ret
in
inc
test
ja
dec
cmp
push
nop
pop
cmp
fdiv
stos
icebp
in
add
ins
or
repz
hlt
xor
mov
fistp
out
sti
cmps
(bad)
jns
lds
loop
cmp
in
test
ja
fcmovu
xor
pop
or
hlt
frstor
js
loopne
cmp
ins
push
idiv
ror
jnp
retf
mov
mov
add
imul
int
add
inc
popf
add
dec
cmp
sbb
xchg
and
mov
sbb
mov
push
test
test
mov
add
or
loopne
push
lock
mov
arpl
ins
les
(bad)
jnp
clc
cmp
rcr
rol
lods
mov
inc
loop
(bad)
pop
fmul
mov
arpl
fsub
shl
les
js
jge
repnz
les
cmp
xor
xchg
hlt
mov
jp
pop
scas
sbb
nop
sub
pop
jmp
and
std
dec
pop
xchg
xchg
xor
(bad)
mov
ficom
jmp
cwde
mov
jae
repnz
ror
add
leave
sub
popa
movs
push
adc
repnz
mov
mov
cli
mov
or
add
retf
out
sub
retf
pushf
inc
ja
iret
xchg
and
dec
push
mov
loop
pushf
das
(bad)
(bad)
cdq
clc
stc
sar
rcr
aad
imul
cmp
dec
xchg
fcmovu
mov
xor
clc
pop
inc
aaa
sbb
popa
push
rcr
or
adc
fwait
adc
sti
int
ficomp
mov
inc
addr16
pop
leave
jne
cmp
jecxz
mov
loop
sub
push
dec
int
ret
push
(bad)
shl
adc
imul
and
pop
lods
fwait
lahf
repnz
dec
pushf
div
inc
icebp
xor
(bad)
aas
or
pusha
std
jns
and
std
pop
out
sbb
adc
das
clc
cmp
and
cmp
xchg
sbb
sbb
xor
sub
inc
(bad)
push
icebp
add
loope
out
push
jmp
fistp
mov
inc
hlt
or
mov
imul
push
adc
push
rcl
mov
fwait
ror
fdivr
cmps
mov
xor
ret
mov
add
rcl
and
in
jp
das
fdivr
ret
sub
pop
pop
aad
or
dec
(bad)
(bad)
jmp
xor
leave
ins
or
pop
aas
and
mov
ret
mov
cmp
fwait
and
call
sub
jmp
push
add
jo
ins
cmp
add
sub
cmp
mov
enter
or
lea
in
pop
mov
and
add
retf
inc
je
out
sbb
cmp
imul
cmps
ret
icebp
iret
pop
dec
add
cmp
sub
stos
add
enter
mov
cmp
push
add
das
push
loope
(bad)
sub
inc
int3
mov
mov
xlat
cmps
inc
push
scas
pop
stos
or
test
fs
adc
mov
lea
loopne
push
scas
int3
inc
ss
mov
dec
(bad)
scas
mov
(bad)
scas
jg
mov
cs
pop
push
jecxz
dec
push
lahf
into
jnp
mov
adc
or
mov
jnp
xor
mov
repz
int3
adc
jo
mov
mov
jbe
sub
mov
in
xchg
inc
(bad)
mov
sbb
jmp
retf
mov
popf
jecxz
cwde
push
aas
mov
shl
xchg
rcr
and
call
out
or
adc
cmp
jmp
sbb
sbb
push
mov
retf
push
enter
lods
adc
push
data16
mov
push
test
in
inc
cmc
fistp
mov
push
rcl
enter
cwde
jle
jp
sub
mov
push
xchg
cmp
and
push
dec
push
inc
imul
mov
int3
inc
in
mov
shl
sub
push
call
cld
push
jb
or
loop
in
jmp
daa
dec
pusha
and
movs
lds
repnz
cmp
imul
popa
cmp
mov
xor
mov
sbb
outs
cmp
cmp
dec
ds
cmp
cmp
inc
fbstp
jnp
jmp
jo
pop
jmp
pop
ret
dec
ror
call
add
es
mov
mov
adc
and
js
jmp
es
jecxz
ror
(bad)
clc
push
and
fs
es
jae
push
jbe
mov
sbb
xchg
push
fnstcw
fdivr
mov
or
push
pop
clc
mov
jl
icebp
push
sub
mov
ficomp
dec
das
dec
rol
inc
into
or
push
test
dec
lods
cmps
mov
std
dec
or
ror
pop
jns
or
(bad)
jl
les
hlt
sub
mov
mov
clc
add
dec
nop
push
js
ds
call
dec
mov
jg
sahf
sub
mov
out
inc
shl
iret
(bad)
mov
cld
fmul
rcr
cmc
sbb
and
lea
dec
mov
xchg
push
cmp
out
mov
pop
mov
(bad)
in
stos
dec
sub
xchg
cdq
js
pop
adc
ss
sbb
adc
fdivp
adc
jecxz
push
es
enter
cs
xlat
cdq
mov
enter
push
inc
es
xor
lock
and
cmp
inc
cmp
push
add
jle
(bad)
and
ss
mov
js
out
pop
dec
stc
stos
add
mov
fidivr
xchg
push
cwde
push
pminsw
hlt
jno
xor
lock
lods
mov
(bad)
jae
sahf
sub
in
xchg
cmp
ret
adc
mov
push
daa
ja
jne
dec
cmps
pop
lods
inc
pause
es
mov
mov
pop
push
imul
sbb
out
push
xor
nop
pop
gs
std
imul
inc
ret
in
gs
xchg
retf
mov
inc
inc
(bad)
scas
or
push
or
push
and
ret
mov
ins
sub
hlt
aam
add
xor
fstp
shl
inc
sub
pusha
test
and
leave
test
shl
mov
fistp
les
data16
and
and
inc
addr16
cmp
xor
sbb
mov
int3
shl
fidiv
call
push
jg
loope
js
push
out
jno
adc
push
inc
mov
mov
jge
inc
sbb
sar
arpl
icebp
xchg
(bad)
mov
mov
jno
xor
xor
mov
fbstp
outs
nop
retf
ins
into
mov
adc
call
(bad)
jle
aas
mov
in
fwait
in
mov
sub
pop
ror
test
imul
jp
cmp
inc
mov
and
daa
pop
push
loop
enter
rol
cmp
mov
bound
mov
jae
jmp
add
ret
ins
cmp
dec
push
push
addr16
or
jae
lock
pushf
retf
jb
dec
mov
sbb
daa
loop
(bad)
rcl
mov
mov
add
les
outs
(bad)
ins
mov
sbb
pop
into
pusha
dec
or
push
dec
inc
cmp
ss
inc
fcmovb
(bad)
retf
sub
daa
mov
pop
movs
pop
loope
and
in
idiv
jne
jge
xchg
call
jge
push
sbb
mov
dec
neg
enter
mov
scas
loopne
test
cdq
push
pop
jbe
cmp
jae
or
mov
xor
fst
inc
mov
(bad)
mov
mov
pop
mov
add
mov
dec
out
cmpxchg
ss
stos
dec
test
adc
push
imul
push
rcl
dec
push
inc
mov
add
popf
int3
xchg
pushf
pop
xor
ror
in
aad
and
xchg
and
mov
repz
loop
inc
mov
dec
stc
inc
push
fstp
and
(bad)
popa
jp
jle
data16
dec
mov
femms
repnz
rcl
push
iret
(bad)
push
jae
leave
inc
movs
mov
jno
scas
ss
push
mov
pop
pop
push
ss
pop
inc
fistp
or
xor
and
mov
push
and
pop
push
call
(bad)
out
mov
jecxz
lods
sti
(bad)
cmp
adc
pop
xchg
inc
jg
push
lds
enter
jmp
inc
push
aaa
inc
pop
push
or
push
out
add
inc
ret
mov
add
xchg
jo
fiadd
stc
mov
int
imul
xor
(bad)
cmp
or
jl
sbb
das
cld
inc
push
jl
out
jb
cld
push
pop
jge
mov
(bad)
int
mov
dec
fmul
sub
ret
shl
mov
test
inc
leave
pop
mov
dec
dec
cmp
dec
sub
dec
lea
test
fisubr
or
mov
dec
cmp
fcmovbe
mov
mov
aam
pop
and
mov
sub
mov
add
cmc
push
ds
sub
clc
or
in
call
xlat
movs
ja
dec
fwait
lods
adc
xchg
ja
push
pop
fcom
loopne
js
push
dec
push
scas
in
add
cmp
adc
add
cmp
adc
iret
push
ror
sbb
sub
inc
xor
fidiv
push
push
pop
(bad)
test
loop
push
sub
movs
lods
fidivr
dec
ror
dec
ja
push
or
lea
cmp
jge
sbb
jns
add
mov
xor
mov
outs
arpl
sub
addr16
and
jp
pop
mov
jg
popf
mov
pop
int3
ins
ret
cmp
mov
fistp
jo
mov
in
cmp
imul
shl
fwait
(bad)
ss
pop
push
or
das
aad
mov
fwait
lods
iret
int3
neg
add
clc
xor
lahf
(bad)
(bad)
popf
cs
mov
popa
je
jmp
sub
add
pop
pop
(bad)
xchg
popa
or
pop
or
mov
movs
add
or
and
(bad)
scas
lock
jle
clc
jnp
lods
sbb
mov
jns
jbe
adc
rep
sbb
pop
imul
jle
out
jmp
mov
xchg
imul
fld
xor
cwde
push
data16
cmp
je
xchg
div
jb
das
cs
add
popf
adc
lahf
js
retf
adc
neg
push
jbe
or
call
nop
and
pop
adc
push
fwait
or
cmp
fs
pop
xor
loopne
cmp
fnsave
jecxz
test
adc
push
stos
dec
pop
xchg
ret
test
dec
jmp
jb
sti
dec
cmp
call
pop
clc
sbb
xchg
add
pop
xchg
test
sub
sbb
xor
xor
daa
jmp
xchg
add
(bad)
push
and
popf
les
jmp
mov
xor
push
sub
stc
xchg
xchg
in
xchg
mov
and
mov
and
test
outs
data16
mov
pop
cwde
add
leave
(bad)
cld
push
push
rcr
xchg
mov
add
(bad)
dec
(bad)
push
mov
shl
std
dec
das
push
icebp
push
imul
sbb
icebp
sub
test
mov
hlt
and
gs
sahf
pusha
call
fldcw
repz
cli
pop
test
push
pop
add
push
fist
arpl
push
aaa
ret
int3
push
jnp
jl
cdq
pop
sub
mov
neg
jno
and
mov
mov
call
nop
ins
sub
les
adc
push
mov
rcl
hlt
xchg
fcomp
push
cmp
and
push
pop
pop
sbb
inc
aad
mov
fsubp
rol
or
js
test
jp
push
mov
call
xlat
add
nop
arpl
mov
dec
xor
add
and
leave
test
rcl
push
cmps
adc
dec
out
cli
mov
popf
add
fisub
ja
(bad)
retf
mov
and
inc
enter
sbb
int
ins
es
scas
xchg
in
retf
fadd
xchg
cmps
cmp
pop
add
add
inc
mov
cmc
fdivrp
not
icebp
and
in
in
arpl
xchg
jbe
clc
mov
fmul
out
mov
lods
adc
jecxz
cs
xor
sub
arpl
cmps
fucomi
cmp
out
out
fdivr
pop
cmp
and
inc
repz
cld
sbb
outs
movs
inc
push
mov
iret
xchg
ficom
fwait
add
cmp
mov
out
dec
shl
in
fcomp
dec
out
sbb
adc
jbe
movs
and
adc
std
push
(bad)
movs
xor
pop
call
pusha
test
lods
mov
pushw
popf
mov
push
jle
fisub
enter
mov
data16
imul
mov
push
adc
add
fidiv
mov
adc
xlat
imul
fdiv
xor
(bad)
sub
ret
(bad)
out
xchg
dec
xor
pop
(bad)
mov
sahf
and
sti
mov
dec
pop
mov
xor
sbb
xchg
dec
push
jp
int3
pusha
sbb
fisub
arpl
xchg
sub
push
push
cwde
add
mov
out
mov
daa
mov
in
cmp
shr
lock
sub
adc
mov
push
xor
or
cmp
cwde
out
fnstsw
push
xor
std
(bad)
sbb
lods
mov
mov
aam
lods
or
mov
retf
add
into
pop
xchg
fld
dec
test
enter
shr
push
push
lods
stos
imul
and
ror
jg
add
jne
and
xchg
icebp
mov
lods
sbb
aad
adc
inc
pop
and
loop
mov
retf
outs
shl
pop
xor
push
fstp
sbb
fwait
movs
cdq
adc
sbb
sub
clc
jge
mov
sbb
xchg
sbb
test
pop
pop
push
jne
pop
pop
pop
scas
xchg
push
xchg
loope
push
(bad)
dec
mul
mov
jns
push
xor
fldenv
stc
arpl
sub
hlt
xchg
sbb
or
(bad)
pushf
xchg
popf
jmp
or
enter
jne
jl
mov
xlat
mov
cmp
fcomp
imul
out
adc
call
(bad)
je
fcomp
pushf
movs
into
push
sbb
jmp
pop
mov
push
and
push
adc
mov
into
stc
shl
repz
cmc
xor
ins
std
mov
dec
(bad)
cmp
push
repnz
push
js
enter
lods
les
std
mov
loope
(bad)
daa
dec
jge
or
pusha
push
out
cmp
bound
imul
xchg
(bad)
mov
imul
in
cmp
iret
add
push
jnp
xchg
inc
mov
mov
inc
mov
mov
fbld
pusha
ret
outs
xor
jecxz
mov
(bad)
sub
push
push
in
mov
jmp
and
sub
jl
inc
inc
iret
(bad)
sbb
xor
in
xor
xor
xchg
cmp
or
ds
xor
mov
sub
mov
clc
scas
outs
jmp
fmul
test
scas
and
data16
scas
push
(bad)
fwait
idiv
shl
jno
mov
enter
dec
imul
or
sub
stc
or
cmp
aad
sar
rol
jmp
mov
imul
out
and
scas
or
xor
mov
add
mov
mov
sti
fmul
dec
sub
cmp
stos
xchg
out
ror
lods
or
movs
pop
cmp
push
push
call
in
lods
pop
rol
inc
push
data16
and
sahf
loop
(bad)
sbb
and
push
xchg
mov
inc
popf
mov
retf
fstp
clc
movs
xchg
push
adc
clc
imul
rol
es
xlat
cld
lods
call
nop
aam
std
mov
jle
aam
mov
inc
ja
shr
sbb
push
mov
adc
xchg
mov
and
stos
mov
std
push
mov
and
dec
call
es
mov
aas
aas
test
ficom
jmp
int
pop
add
xchg
data16
in
add
dec
and
icebp
out
addr16
sbb
in
add
dec
xor
out
out
mov
dec
icebp
es
lea
inc
ins
mov
pop
jmp
mov
or
dec
lods
dec
mov
pop
inc
cdq
pop
and
fidivr
call
push
fs
pusha
inc
fsubr
ins
out
(bad)
cmps
arpl
jo
(bad)
cld
dec
es
mov
dec
mov
or
sub
push
xor
cmp
stc
fcomp
add
in
arpl
es
pushf
and
in
xchg
jb
mov
sub
mov
sbb
sbb
cmp
xor
and
lds
mov
into
ror
mov
add
jge
lods
pop
mov
or
jmp
or
test
fwait
cdq
adc
gs
(bad)
neg
in
ins
mov
xchg
mov
pop
ret
fdivr
int
cmps
pcmpeqb
and
push
out
pop
cmp
sbb
mov
inc
mov
mov
int3
and
jge
push
rcr
sub
push
inc
imul
mov
ret
dec
outs
sub
arpl
lahf
mov
xor
and
cmp
pop
jecxz
or
push
mov
xchg
xor
(bad)
stos
xchg
jmp
clc
pinsrw
mov
cmps
mov
cmp
jae
jg
push
xchg
add
xor
and
aas
je
test
ds
call
call
xor
push
or
(bad)
mov
xchg
cmp
jae
test
into
std
mov
das
jmp
xchg
dec
cmps
ja
dec
leave
jmp
clc
movs
push
push
add
leave
call
add
into
shl
rcr
popa
out
jge
mov
das
xor
test
and
or
mov
js
mov
jmp
xchg
rol
sub
and
xor
pusha
or
push
pop
shl
jge
or
add
pop
pop
push
shl
mov
ins
pop
mov
or
cmp
xchg
mov
cmp
inc
sbb
mov
(bad)
and
dec
test
int
dec
dec
mov
test
jmp
enter
outs
xor
push
loop
(bad)
xchg
push
xchg
cmp
xchg
movs
pusha
test
or
(bad)
and
mov
sbb
ss
xchg
cmp
inc
xchg
je
cmps
nop
scas
jp
add
cmps
test
add
xor
sub
sub
outs
lahf
into
xchg
daa
imul
mov
xchg
pop
cmps
mov
fcomp
mov
out
pop
stc
or
xchg
mov
and
inc
xchg
dec
aad
pop
cmp
in
js
ret
iret
mul
fild
or
push
das
popa
(bad)
and
int
jb
mov
ret
mov
inc
xchg
sbb
rcr
fs
std
push
xor
fiadd
xchg
jg
mov
inc
xor
jne
std
cmp
sbb
rcr
push
xor
daa
jmp
test
and
mov
sbb
lea
out
mov
call
cmp
sub
mov
xor
cmp
stc
repz
mov
imul
mov
add
(bad)
je
cmp
xlat
cs
xchg
arpl
ret
sbb
and
mov
rcl
xchg
and
sub
pop
pop
pop
mov
repnz
cli
cwde
lock
fs
push
add
sbb
(bad)
(bad)
adc
ja
ror
inc
jb
lods
int3
push
imul
sub
imul
jb
mov
wbinvd
jmp
aaa
out
jmp
inc
enter
dec
shl
add
out
xchg
jl
sub
in
push
les
add
test
fldenv
cmp
fwait
test
js
xor
inc
ja
adc
std
ret
in
scas
popa
jge
imul
ror
shr
mov
and
mov
add
cmps
in
js
xor
clc
cmps
repz
scas
movs
div
aas
fmulp
add
fsubr
sbb
loope
push
cld
xchg
mov
ficomp
sbb
push
pop
enter
xor
daa
jnp
xchg
push
test
cmp
pop
push
cli
mov
cmp
jp
ins
add
sbb
into
and
sbb
aad
pop
and
and
sub
stos
fsincos
sbb
mov
jo
movs
push
pop
sahf
adc
fstp
retf
icebp
or
retf
movs
icebp
lods
mov
sti
adc
mov
cmp
imul
push
enter
xor
and
or
adc
xor
leave
adc
xchg
cmp
sbb
xlat
mov
cdq
sbb
inc
jge
or
push
in
and
inc
rol
es
lods
cmps
iret
jo
pop
dec
fwait
les
add
daa
stos
inc
inc
cmp
(bad)
sar
push
inc
sub
cdq
int
shl
or
cmps
add
(bad)
neg
dec
mov
dec
mov
(bad)
add
lods
gs
pop
jle
adc
std
push
(bad)
aam
call
cld
jmp
aas
ins
ror
dec
mov
inc
test
adc
jmp
jle
jmp
pop
loope
fld
je
pop
mov
pop
leave
test
test
push
xlat
or
not
mov
pusha
out
jl
test
(bad)
in
push
stc
aam
pop
sbb
outs
xor
lock
add
jg
les
inc
nop
sub
lds
adc
mov
pop
jp
test
push
pop
add
pop
call
pusha
and
(bad)
cdq
stos
cmp
loope
dec
fdivr
inc
jns
pop
data16
or
fstp
fsub
adc
sub
push
cmp
mov
adc
(bad)
mov
jge
jp
add
iret
cmp
out
in
mov
loop
or
sar
cmc
cmp
loop
dec
adc
(bad)
adc
cli
fidiv
icebp
xchg
mov
mov
(bad)
fcom
sub
div
sbb
or
data16
adc
sti
stos
mov
mov
(bad)
jb
cmp
aaa
push
test
jne
push
je
mov
cwde
push
daa
mov
jbe
xlat
ret
es
sub
test
adc
xor
ret
in
aad
pop
sub
xlat
fcomp
retf
or
sub
scas
xchg
shl
cli
cdq
mov
in
ss
out
adc
jbe
ja
inc
jg
sub
mov
outs
fdivr
jp
adc
arpl
pop
hlt
daa
jns
daa
imul
inc
dec
icebp
xlat
jb
loope
cmp
cmc
out
out
imul
or
xchg
daa
cmp
xchg
dec
sub
cmp
cmps
xchg
fisub
js
sub
mov
add
inc
dec
sub
jge
push
retf
scas
mov
scas
sbb
push
enter
jbe
mov
xor
adc
outs
loope
scas
sti
ss
xor
xchg
add
aaa
inc
test
leave
jns
shl
repz
loope
das
nop
push
adc
test
jb
fwait
sti
jp
cmps
pop
ja
mov
pop
je
pop
sub
jp
xor
push
les
pop
jo
dec
add
and
lock
push
push
fidivr
ret
lahf
stos
xor
aaa
pusha
ins
adc
jbe
sbb
leave
mov
lea
adc
aaa
mov
mov
inc
scas
imul
call
test
mov
fisub
push
ins
ret
mov
outs
ins
movs
fisubr
jl
popf
pop
pop
pushf
push
dec
sub
sbb
add
js
mov
jb
hlt
inc
cmp
out
or
add
cmp
mov
adc
mov
or
lds
sub
pushf
fsub
push
inc
cmp
cwde
addr16
mov
lods
inc
js
and
call
and
fimul
add
jae
pop
add
mov
sbb
aaa
test
add
sbb
mov
out
stc
aas
pop
mov
add
xor
mov
jmp
jo
mov
repnz
mov
jl
pop
xor
arpl
sub
je
leave
daa
push
test
inc
iret
add
pop
mov
fsubr
mov
xchg
push
cdq
imul
inc
popa
jae
pop
xchg
mov
add
idiv
mov
mov
jo
aaa
call
jne
jae
test
inc
sbb
(bad)
mov
cld
or
fadd
cli
inc
pop
clc
xchg
(bad)
dec
jne
mov
popa
iret
pop
inc
outs
push
aaa
sub
push
loop
inc
movs
dec
push
mov
jle
push
inc
es
out
pop
cmp
stos
inc
not
mov
call
xor
or
sbb
cmps
adc
mov
push
mov
rcr
dec
leave
lea
push
or
mov
xchg
mov
fwait
and
pop
mov
push
add
jmp
gs
stos
adc
loope
and
mov
mov
scas
ret
pop
cmc
shl
add
out
mov
aad
and
mov
les
pop
nop
mov
xchg
aas
lods
adc
pop
inc
inc
push
xor
out
jmp
(bad)
dec
popa
inc
jae
pop
iret
sub
xor
mov
arpl
popa
mov
pop
inc
test
pop
iret
pop
push
arpl
loopne
fwait
sbb
jmp
cmp
shl
xor
lahf
das
push
cmp
or
sub
xor
mov
(bad)
push
inc
adc
inc
popf
fisubr
dec
nop
sar
int
and
lods
pushf
mov
adc
je
sysexit
xor
or
sub
adc
lods
sbb
pushw
into
xchg
and
leave
fs
ins
push
inc
movs
data16
mov
(bad)
sbb
xlat
mov
fcomp
jp
inc
fild
rdpmc
loop
xor
les
xchg
js
aas
dec
xor
in
inc
fistp
xor
movs
add
ins
pop
mov
(bad)
ja
fiadd
push
popa
or
imul
outs
jbe
in
jg
lods
push
aas
add
mov
dec
or
hlt
(bad)
xlat
cli
std
jns
fdiv
push
mov
hlt
pop
sti
inc
std
rol
imul
scas
and
jmp
sub
pop
mov
aaa
data16
in
ficom
pop
lock
inc
inc
fs
jae
pushf
xchg
sub
jmp
in
inc
sbb
push
xor
inc
(bad)
xlat
mov
lea
add
inc
sbb
pusha
mov
xchg
or
sbb
inc
popa
xchg
ds
outs
call
push
add
sbb
cld
sub
shl
sub
out
xchg
imul
out
fild
lock
or
clc
imul
sbb
(bad)
call
xor
aad
push
mov
scas
rcr
mov
pop
stos
jo
dec
fcmovnu
das
mov
mov
cld
cmp
add
xor
movs
ins
mov
sub
sub
out
adc
mov
dec
loop
js
push
pop
addr16
dec
retf
aam
sar
rcr
xsetbv
jl
or
iret
cmps
rcl
cwde
add
mov
pop
inc
inc
jmp
and
sub
add
ds
pop
imul
mov
scas
mov
push
mov
add
stos
xchg
pushw
xchg
mov
test
pushf
cmp
fxch
stos
sbb
cmp
xchg
dec
jns
inc
scas
jecxz
jns
or
cwde
dec
lock
adc
sub
call
ret
lea
add
dec
cmps
stos
push
dec
inc
add
inc
out
stc
xor
mov
cdq
jmp
arpl
push
pop
mov
(bad)
outs
add
adc
xor
adc
lea
mov
add
cmp
pusha
in
mov
xor
xchg
int3
aad
adc
mov
popa
xchg
mov
push
adc
mov
and
add
setle
inc
ret
pop
dec
or
lock
outs
test
sub
mov
push
add
push
cmp
(bad)
(bad)
xchg
cmp
xchg
jo
rol
and
pop
sub
std
ret
adc
iret
mov
and
outs
fcom
mov
out
or
mov
repz
sub
imul
cmp
dec
cdq
cmp
loop
in
and
sbb
dec
mov
pop
js
mov
and
and
sub
cmps
dec
sub
les
cmps
jo
sub
jne
pop
loopne
arpl
mov
daa
repz
cs
pop
inc
stos
(bad)
fucom
(bad)
cwde
adc
fwait
in
sub
stc
cdq
pop
scas
mov
ds
cli
lods
je
cmp
push
gs
std
xchg
outs
outs
jmp
das
in
sbb
retf
xchg
mov
pcmpeqd
pop
(bad)
dec
mov
mov
rol
stc
int3
adc
mov
test
and
test
ror
je
pop
xchg
inc
fmul
pop
inc
out
mov
adc
xchg
pop
test
aaa
mov
add
inc
or
mov
mov
xor
movs
xchg
pop
push
test
test
js
stc
push
stos
adc
out
nop
xor
(bad)
fnstsw
adc
mov
mov
out
and
fdiv
aas
push
ret
gs
(bad)
or
sub
fisttp
mov
mov
mov
enter
out
jae
ror
imul
daa
cmp
pushf
imul
retw
and
jo
ror
out
pop
sti
xchg
pop
test
in
inc
cmp
imul
inc
cwde
add
xor
jp
adc
mov
shl
sbb
cmps
mov
and
add
lea
scas
shl
dec
stos
push
add
inc
in
jp
in
sub
dec
mov
or
push
jecxz
jae
pop
sub
ins
sbb
ror
xor
mov
pusha
push
jo
inc
add
xchg
push
neg
mov
sbb
jg
or
mov
rcr
mov
and
jne
dec
sub
add
adc
popa
es
push
pusha
lock
mov
mov
jne
or
mov
hlt
mov
out
inc
dec
mov
or
pop
sub
aaa
(bad)
cmps
int
dec
fwait
jns
mov
aad
mov
mov
cs
mov
fdiv
sbb
add
cmps
or
mov
push
push
ds
pop
lahf
repnz
adc
fadd
mov
xchg
sbb
setae
jnp
xchg
jl
add
sti
sub
jne
cmp
in
add
repnz
and
out
and
sbb
ins
shr
adc
dec
push
mov
int
(bad)
in
cwde
or
xchg
jp
mov
sub
xor
test
movs
mov
xchg
push
lds
mov
pushf
adc
mov
xor
push
inc
enter
int
sub
bnd
and
das
lahf
sahf
call
mov
retf
std
movd
pop
xchg
push
inc
enter
movs
int3
shl
adc
mov
jmp
das
mov
out
ficom
scas
inc
bound
rol
pop
je
lods
ret
xor
shl
fdiv
aad
mov
lock
popa
xchg
mov
stos
adc
add
rcl
ins
movs
pop
dec
push
adc
outs
add
push
add
sub
loopne
out
pop
shl
mov
or
aas
cmps
push
test
add
test
adc
in
clc
std
repz
sbb
es
sbb
stos
or
aaa
aaa
push
sbb
repz
aad
cmps
and
xchg
mov
ret
jg
xchg
mov
sbb
lahf
dec
inc
fdiv
clc
push
sti
dec
stos
call
int
imul
push
outs
jbe
xor
pop
and
in
dec
pop
dec
xor
mov
ficomp
mov
mov
loopne
pop
ins
mov
jae
in
dec
int3
(bad)
xchg
add
inc
sbb
lea
mov
movs
sub
mov
mov
or
fidiv
adc
mov
and
popa
cmp
aam
clc
jg
pop
sub
mov
inc
xchg
ret
add
jle
xor
push
lahf
call
or
aad
fsubr
fnsave
or
retf
retf
test
mov
shl
dec
xor
ret
dec
xor
int
inc
out
icebp
sub
dec
wrmsr
ds
xchg
(bad)
addr16
es
inc
cmp
cmp
push
nop
addr16
cld
test
sub
in
fwait
dec
xlat
and
push
xchg
mov
mov
ror
or
retf
and
fist
xchg
jg
and
mov
ror
sbb
xchg
xor
and
out
popf
jp
xor
(bad)
adc
mov
cwde
sahf
out
push
push
mov
and
out
popf
pushf
aad
or
daa
jnp
mov
jno
xchg
push
test
mov
mov
call
inc
aaa
clc
jge
inc
sbb
jl
in
mov
sbb
adc
push
sbb
fild
and
(bad)
xchg
sub
(bad)
cmps
pop
pop
dec
adc
inc
lods
ja
adc
xor
adc
push
pop
and
out
add
das
in
jno
inc
rcr
sub
daa
aas
push
inc
adc
and
in
or
mov
rol
(bad)
jnp
jns
pop
adc
gs
(bad)
fisub
mov
(bad)
int
js
mov
into
jle
pop
repnz
pop
xor
neg
jmp
push
jle
lea
sub
rol
in
xchg
scas
rcl
pop
(bad)
bound
adc
out
mov
inc
or
stc
mov
and
shl
inc
outs
jle
mov
out
mov
jae
mov
out
mov
dec
xchg
pushf
pushf
mov
iret
and
pop
jo
js
movs
and
adc
inc
aas
push
sub
jb
xchg
mov
adc
(bad)
out
pop
not
shr
pmaddwd
sbb
loope
push
cmp
or
inc
add
gs
sub
dec
push
retf
mov
popa
inc
stos
cdq
sbb
pop
ret
dec
call
loopne
mov
jo
sahf
cmps
test
stos
inc
dec
(bad)
adc
xchg
xchg
into
into
mov
ror
pop
and
bound
add
std
cmps
and
cmp
sub
mov
add
mov
xchg
(bad)
xor
or
lods
rol
xor
or
jno
inc
je
cmp
ds
(bad)
test
push
adc
inc
aaa
ja
out
dec
mov
jnp
cmp
push
shr
sbb
xchg
jno
mov
mov
cmc
daa
add
and
push
jge
xor
pop
and
and
inc
fmul
cmp
iret
inc
or
push
cmps
out
add
in
xor
cwde
or
shl
or
push
jmp
sti
aam
inc
in
push
fidivr
repz
in
in
sbb
dec
push
jnp
inc
imul
into
arpl
adc
ins
ja
cmp
and
jecxz
mov
aam
(bad)
js
loop
fmul
test
(bad)
out
push
aad
mov
mov
in
fimul
addr16
lock
mov
sbb
and
in
jne
add
outs
mov
jb
cmc
and
jge
mov
pop
dec
xor
mov
jno
cmps
adc
ror
push
into
or
rol
or
fimul
in
xchg
xchg
xor
sub
dec
sbb
jno
mov
shl
bnd
out
cmp
or
stos
and
fisub
mov
xor
imul
fnstenv
fimul
iret
and
stos
jp
scas
sbb
les
sub
push
ja
fst
ret
gs
push
in
jg
inc
ja
loop
stos
add
adc
jns
int
mov
mov
shl
leave
dec
(bad)
mov
jge
fs
pushf
cmps
cmp
(bad)
mov
inc
pushf
es
sub
jecxz
lahf
mov
(bad)
cmp
mov
xchg
sub
nop
xchg
xchg
pushf
and
int3
xchg
pop
lahf
cmp
xchg
pop
imul
jge
test
dec
ret
les
sahf
ins
sub
scas
rol
sub
xor
ret
ret
rol
test
std
push
sub
pop
repz
lahf
cmp
push
mov
mov
aam
lds
push
ins
or
adc
pop
adc
stc
icebp
jecxz
cmp
aas
cdq
lods
xlat
bound
cs
cmp
cmc
repz
aad
mov
or
(bad)
jg
imul
stos
push
test
(bad)
jg
pop
mov
bound
setb
jmp
lods
stos
inc
in
mov
rcl
mov
mov
sti
push
xor
mov
inc
enter
cli
retf
mov
sub
shl
and
xchg
icebp
or
jecxz
mov
dec
hlt
aam
stc
push
rol
lods
mov
stos
in
jl
pop
push
cmps
mov
ins
stc
xor
and
pop
lea
sbb
jb
xchg
into
dec
inc
sbb
xchg
or
sub
push
jmp
out
dec
pop
sub
(bad)
push
or
data16
dec
mov
and
stc
imul
int
call
pop
dec
pop
jbe
pushf
cmp
fptan
cmp
xor
int3
sub
sbb
or
and
dec
add
cwde
shl
ret
pop
xlat
mov
cmp
dec
das
xor
shr
ds
pop
in
adc
aaa
pop
push
add
cmp
out
pushf
repnz
add
dec
pop
pop
pushf
in
or
fdiv
cmp
or
frndint
pop
pop
xor
or
inc
mov
jne
xchg
std
icebp
mov
sub
ss
in
or
pop
sub
int
push
shr
dec
fwait
xchg
clc
sbb
mov
sbb
fcomp
xor
into
fidivr
jb
sahf
inc
jg
adc
dec
push
mov
lea
arpl
cmp
outs
aad
dec
dec
add
or
mov
fild
pop
int3
mov
clc
jne
rcr
push
pop
xchg
pop
std
inc
ins
fdiv
pop
mov
xor
(bad)
scas
push
push
sbb
inc
std
and
add
(bad)
xor
push
pop
inc
fwait
xor
(bad)
cli
int
mov
ins
imul
xchg
mov
dec
push
test
mov
pushf
int
push
out
cmc
ja
lock
dec
jns
mov
cld
pop
leave
imul
stc
ins
lock
add
jb
adc
mov
push
loope
adc
inc
xor
pop
jb
push
pop
movs
inc
cmp
mov
adc
arpl
(bad)
je
pop
(bad)
mov
push
adc
in
aas
adc
cmp
in
cli
das
inc
pusha
cmp
xor
sbb
sbb
pushf
cmp
xchg
pop
mov
clc
push
xor
lods
loopne
add
push
mov
sbb
jb
inc
lea
pop
movs
aam
mov
in
je
es
rcr
jp
(bad)
mov
pushf
aas
jb
clc
xor
pop
fistp
jns
mov
test
jo
fdivr
xchg
in
push
xchg
mov
pop
cdq
adc
in
fwait
jecxz
(bad)
fs
retf
pop
cmps
adc
call
pop
push
movs
inc
idiv
test
sbb
mov
xor
loopne
jno
adc
mov
push
sahf
mov
lock
into
mov
ins
addr16
or
add
fistp
neg
pop
push
imul
mov
(bad)
rcr
aam
mov
mov
inc
lea
repnz
retf
sub
jnp
iret
in
cmp
inc
mov
adc
cs
adc
dec
popa
and
sbb
scas
ins
mov
int
out
lahf
xor
fwait
inc
retf
ror
xchg
test
mov
push
dec
aam
dec
mov
xchg
cmc
int
jno
jns
sbb
sbb
loope
adc
mov
xchg
sbb
outs
aaa
xchg
dec
sub
sbb
add
rol
in
rcl
jno
imul
adc
mov
mov
pushf
xchg
movs
push
xchg
lods
adc
std
retf
(bad)
cdq
inc
outs
mov
loopne
das
mov
je
test
into
aas
les
test
fsub
jo
pusha
out
movs
push
int
push
jnp
test
xchg
js
ret
pop
inc
push
and
xchg
adc
xor
add
stos
cmp
jnp
pop
scas
shl
sbb
jbe
mov
pop
lods
and
mov
push
cmp
pushf
clc
inc
pop
xor
dec
stc
and
aas
push
jge
gs
mov
mov
add
aas
adc
xor
enter
sti
aaa
mov
or
loope
or
stos
sub
imul
mov
shl
jb
fmul
sub
push
cmps
std
lods
add
test
mov
call
cmp
in
add
and
jns
mov
retf
pop
(bad)
in
inc
(bad)
sar
ds
cwde
dec
popa
adc
hlt
inc
lea
dec
arpl
mov
mov
nop
add
cwde
mov
push
sbb
mov
shl
repnz
test
pop
xchg
cmps
hlt
pop
mov
int
sbb
lock
sbb
fmul
pop
retf
cmp
ja
movs
call
or
les
inc
lods
xchg
test
sub
popa
xor
aad
mov
je
jmp
inc
in
and
ins
pop
aaa
mov
xchg
mov
mov
mov
xchg
inc
repz
aad
ficom
and
imul
adc
imul
xchg
fs
xor
mov
test
ret
stc
xchg
push
scas
push
into
cli
sub
bnd
out
mov
mov
cmp
inc
cdq
outs
xchg
out
xchg
mov
shl
jmp
sbb
inc
(bad)
cli
sar
push
xor
adc
mov
das
add
lods
mov
push
dec
(bad)
fcom
out
out
ins
pop
in
fcom
loop
das
inc
push
int
(bad)
mov
xor
clc
cmp
jns
(bad)
cmp
jl
shl
push
xchg
call
push
pop
lahf
(bad)
and
scas
mov
xchg
fadd
and
int
sub
push
push
lods
jl
xor
mov
inc
out
(bad)
imul
adc
mov
lock
sahf
inc
mov
sub
push
lahf
and
cmps
jno
stos
fcom
jg
lahf
les
aaa
sbb
mov
pusha
sub
ins
push
rcr
sahf
add
out
ret
jg
pop
inc
cmp
add
jnp
lods
es
lea
mov
repz
adc
mov
mov
pop
out
cld
stos
popa
stc
add
repz
aas
cmp
ins
sub
xchg
lds
xchg
or
sti
push
icebp
call
lock
adc
loop
cmp
cdq
dec
pop
and
or
push
repnz
mov
push
jp
xchg
fst
test
mov
out
add
sub
test
dec
sbb
jo
rol
jmp
jb
cmp
xchg
mov
add
adc
or
clc
sub
mov
or
data16
loope
sbb
lea
sbb
je
jp
popf
movs
pop
and
mov
pop
inc
mov
out
jl
mov
pop
add
fcmovnb
add
xchg
inc
imul
jne
push
mov
jnp
iret
(bad)
push
add
push
lods
mov
cwde
inc
pop
adc
sbb
les
loop
lods
push
cli
xchg
jg
cmp
imul
cmc
pop
sub
mov
add
xor
mov
dec
jne
adc
inc
addr16
jg
xchg
xor
mov
(bad)
outs
xlat
call
sub
xchg
jmp
and
(bad)
movs
xchg
adc
jl
xchg
cli
in
add
sbb
stc
rol
cmp
xchg
pop
(bad)
jo
(bad)
mov
sub
xor
push
inc
in
dec
cmp
sar
(bad)
fdiv
add
(bad)
xor
mov
cld
dec
addr16
xchg
mov
lods
cdq
adc
js
xor
lock
imul
test
jmp
fwait
jge
enter
mov
mov
iret
retf
xor
lock
fcmovnbe
mov
sbb
iret
sub
xor
ret
retf
jge
push
jmp
ja
ret
push
xchg
or
sti
add
pop
repz
mov
dec
cdq
retf
sbb
push
mov
pop
jl
syscall
fistp
adc
out
push
sub
aad
pop
test
mov
dec
daa
jmp
xor
push
daa
jae
addr16
(bad)
fbstp
clc
sub
sub
and
add
out
imul
inc
push
not
mov
cmp
mov
cmp
and
repz
mov
mov
(bad)
in
cmp
xchg
test
aad
sub
stc
xlat
xchg
mov
add
cmp
push
xlat
in
cmp
shr
je
mov
call
jg
fisub
hlt
cmp
dec
add
psllw
test
mov
sbb
push
xchg
addr16
cmps
xchg
push
dec
push
stc
lahf
scas
int
inc
pop
add
push
cmps
sahf
jns
xchg
pop
ds
daa
fcmovnu
je
arpl
dec
(bad)
test
movs
in
jmp
add
xor
pop
in
rcr
cmps
cmp
xchg
pop
xchg
aaa
jg
jge
test
xchg
daa
leave
and
test
cld
fisttp
jne
lahf
ins
mov
or
xor
mov
add
mov
or
div
sbb
push
addr16
jecxz
aad
pop
xlat
mov
dec
xchg
mov
dec
mov
xlat
add
int3
xor
push
ja
dec
mov
nop
xor
imul
push
sbb
cmp
and
test
cmp
out
dec
cwde
mov
xor
gs
and
mov
movs
add
rcl
jbe
xor
push
or
pop
pop
movs
cdq
jo
scas
jbe
dec
xchg
enter
je
add
cmp
add
hlt
cmps
add
xchg
outs
push
(bad)
call
icebp
jnp
cwde
inc
xor
leave
mov
fnstsw
mov
outs
aas
cmp
sub
lock
pop
stc
movs
inc
lds
out
cs
cli
sahf
sub
hlt
stos
dec
rcr
xor
xchg
push
ret
cmp
stc
mov
fisub
push
sbb
add
cmp
xor
or
inc
inc
or
push
repz
hlt
sub
sbb
fisttp
push
ja
inc
test
out
icebp
sub
sbb
lods
dec
cld
js
fwait
test
int
sub
cmp
scas
inc
or
dec
repz
sub
sub
loop
push
mov
xchg
add
clc
inc
inc
jmp
aam
lock
sbb
push
xchg
mov
jb
mov
movs
aaa
pop
out
inc
aaa
adc
aam
movs
jb
push
and
(bad)
push
cmp
push
loope
inc
jle
cmp
mov
je
push
stos
cwde
repz
dec
pop
mov
mov
push
mov
dec
out
push
stc
in
sbb
ret
retf
outs
arpl
mov
fstp
xor
pop
mov
sub
mov
scas
xchg
mov
adc
rol
sub
adc
scas
add
push
int3
dec
das
adc
xchg
cmp
and
inc
(bad)
call
pop
cmp
call
aaa
jb
cmps
out
xchg
arpl
push
sub
cs
cmp
outs
cwde
mov
scas
out
into
(bad)
ror
sub
inc
movs
lock
test
test
add
push
sahf
and
mov
packuswb
mov
pop
dec
in
and
cmp
and
hlt
inc
(bad)
cmp
cmps
stos
sbb
gs
sub
pop
repz
add
mov
imul
fcomp
fist
xor
mov
sub
xlat
cld
leave
sbb
mov
mov
inc
test
inc
scas
ds
xor
scas
repnz
or
pop
stc
das
(bad)
cmc
aad
jns
out
and
out
lahf
adc
or
dec
cs
pusha
cli
cmp
sub
(bad)
adc
jp
sbb
cmp
ins
xchg
stc
shr
cmp
mov
out
aas
push
or
out
dec
sbb
dec
mov
dec
pop
ss
jmp
mov
jnp
lods
inc
inc
shr
jae
lea
sbb
xor
adc
loopne
mov
inc
push
aaa
or
mov
jnp
mov
add
mov
xor
repnz
sub
cmps
daa
ror
das
aas
or
test
sbb
es
imul
sub
or
cld
push
call
mov
add
mov
sub
pusha
and
(bad)
xchg
pop
sub
icebp
fwait
int
sbb
out
adc
or
cs
cdq
int3
pusha
mov
jecxz
test
cld
retf
jne
in
loop
ret
cmps
adc
sub
ds
addr16
(bad)
aad
inc
dec
and
push
ret
mov
repnz
jnp
repnz
jle
xor
stos
mov
mov
(bad)
nop
sbb
pop
lahf
mov
into
test
adc
(bad)
mov
ds
arpl
inc
inc
scas
out
add
and
jno
adc
sub
sahf
sub
data16
jbe
into
mov
popf
stos
push
in
sbb
xchg
push
inc
mov
jno
sti
data16
mov
pop
(bad)
movs
int3
sub
or
xchg
aaa
aas
mov
fxch
(bad)
ret
or
mov
adc
push
cli
fwait
mov
fiadd
mov
je
add
rcl
mov
in
ins
clc
add
shl
test
ret
into
and
dec
sbb
nop
scas
rcr
scas
jbe
movs
sbb
mov
jl
mov
(bad)
out
xchg
pop
pop
into
(bad)
or
push
fimul
push
in
pop
cmps
push
adc
ror
mov
lock
sbb
pop
popa
cs
mov
mov
xchg
fwait
les
shl
shl
out
adc
add
or
xchg
mov
mov
fs
movs
mov
loopne
mov
test
movs
test
popf
fadd
cmp
fmul
sbb
push
jns
rol
inc
push
xchg
inc
xchg
jnp
jae
adc
jmp
in
std
test
scas
test
cld
sbb
cmc
mov
inc
ja
fs
inc
inc
retf
fs
push
jo
xchg
pop
xchg
or
aam
xor
fcom
xchg
adc
in
or
pop
call
(bad)
jmp
mov
and
push
shl
ins
cmp
in
pop
leave
pop
push
pop
adc
mov
and
sbb
test
test
test
ret
inc
add
das
arpl
stos
retf
sbb
out
adc
adc
repnz
sahf
pusha
es
jo
loope
sbb
out
lock
pop
arpl
lds
sti
jno
xchg
bound
fisub
pop
mov
fnsave
cs
mov
idiv
pusha
mov
push
push
lods
jmp
test
(bad)
jns
test
lods
rcr
push
aas
xchg
hlt
mov
cmp
fsub
scas
inc
test
iret
out
mov
es
dec
sbb
lods
push
xchg
movs
rcl
jmp
in
inc
shr
mov
lea
out
(bad)
add
je
fld
push
je
lea
xchg
(bad)
das
inc
or
mov
popf
mov
pop
cmp
cdq
lahf
lea
cmc
pop
mov
mov
or
popf
pushf
fnstcw
jle
cwde
popa
lea
or
mov
in
int
xchg
out
push
push
adc
gs
cmp
push
out
shr
and
pop
jp
inc
mov
jno
pop
inc
inc
sub
pop
xor
enter
in
push
div
aaa
adc
loop
add
jmp
fstp
sbb
jbe
push
jnp
fidivr
adc
ror
(bad)
xor
fwait
sahf
test
adc
popf
daa
cmps
xchg
retf
cld
inc
xchg
mov
loope
mov
sbb
daa
mov
mov
cmc
call
push
jno
sbb
movs
in
and
cmc
nop
and
cmp
xchg
bound
pop
push
sub
mov
repnz
or
scas
call
int
inc
icebp
cs
cmp
or
mov
mov
aad
stc
ret
enter
repnz
sbb
fisttp
mov
jo
xor
cmp
mov
mov
daa
jmp
mov
pop
xor
js
cdq
cmp
in
xor
jno
or
sbb
fs
jbe
hlt
pop
cwde
push
movs
rol
mov
push
jne
scas
or
fisttp
stos
xchg
cmp
push
sbb
cmps
mov
cmps
cs
ja
out
inc
cdq
iret
dec
push
cli
mov
stos
repnz
mov
mov
pop
add
mov
sbb
bound
cmc
push
call
inc
stos
pushf
lods
addr16
iret
out
mov
mov
cs
pop
lods
mov
add
addr16
imul
test
jl
push
or
pop
or
sub
add
fyl2x
stos
loopne
and
xor
add
mov
cs
sti
and
push
sbb
mov
jne
jnp
lock
cli
rcr
loope
pop
jne
repz
mul
in
push
push
xchg
int
cld
lds
xlat
cmps
xor
retf
aam
sub
push
pop
mov
out
dec
aas
stos
push
mov
test
push
jnp
sahf
xor
std
rcr
int3
xchg
push
cmp
out
dec
das
into
lods
jae
imul
gs
jb
mov
mov
retf
xchg
mov
aaa
adc
add
pop
in
icebp
movs
adc
sub
mov
mov
and
call
aad
sub
cmps
pushf
pop
and
push
(bad)
(bad)
dec
dec
mov
rcl
in
popf
scas
cmps
xor
jne
scas
mov
push
cmc
and
push
mov
scas
ins
sahf
sbb
xor
push
cs
bound
push
xchg
nop
pop
je
pop
jp
xor
mov
jns
jge
aam
scas
clc
rol
lds
mov
cmp
fstp
ss
inc
add
daa
jns
inc
daa
aad
inc
ja
and
fst
icebp
mov
ins
mov
sbb
mov
rol
aad
add
call
mov
cmps
bswap
inc
dec
jp
cmp
jge
ficomp
mov
sbb
sub
repnz
jmp
push
mov
xor
mov
xlat
retf
mov
pop
xchg
(bad)
(bad)
fistp
sub
cmp
push
ja
jmp
pop
xor
dec
dec
push
das
stc
ins
xchg
sub
add
mov
mov
push
xor
(bad)
cld
and
inc
fcom
mov
push
push
sbb
xchg
push
std
(bad)
gs
inc
ror
xchg
imul
iret
and
jne
ds
aaa
inc
hlt
add
sub
leave
mov
loop
lahf
imul
fwait
jl
ja
in
je
xchg
cmp
les
sub
mov
pop
shl
das
push
sar
rol
mov
bnd
ret
inc
cmc
les
pop
mov
retf
retf
adc
movs
or
aad
and
mov
out
(bad)
mov
inc
out
cmps
pop
daa
xchg
jmp
mov
pop
pop
mov
test
sbb
push
pop
nop
and
add
addr16
cmps
jae
das
bound
push
bound
pop
movs
leave
add
pop
inc
cmps
add
ins
cdq
dec
and
jg
dec
mov
mov
retf
les
dec
jne
icebp
dec
and
test
int3
lahf
out
cwde
js
outs
adc
aaa
daa
or
mov
dec
push
pusha
shl
jo
xchg
sub
add
rcl
sub
(bad)
in
cmps
jp
in
xor
data16
shl
mov
addr16
enter
rcl
stos
dec
nop
das
fnsave
pop
cli
loope
cmps
sub
mov
out
movs
std
cmp
lea
mov
mov
mov
adc
mov
neg
aad
sub
fcomp
dec
or
mov
mov
repnz
arpl
cmc
repz
(bad)
int3
lds
ret
adc
mov
xchg
pop
push
xor
in
out
inc
lods
sub
mov
or
outs
and
ror
or
sub
mov
dec
jo
nop
jmp
jbe
mov
aad
arpl
inc
push
push
sbb
xchg
fcos
pop
pop
push
lock
sbb
jmp
aad
xchg
push
push
xchg
mov
stos
dec
push
iret
hlt
pushf
jne
adc
jbe
rcr
aam
mov
movs
lahf
cwde
add
or
emms
add
cli
pop
lods
rcr
push
mov
mov
xchg
(bad)
ss
and
mov
sar
cmp
retf
adc
retf
in
cmp
icebp
pop
retf
repnz
pop
repnz
mov
cmp
int3
adc
push
fsubr
fwait
dec
mov
mov
jge
jecxz
jg
(bad)
xchg
xor
(bad)
outs
sub
mov
std
mov
inc
in
or
sub
adc
add
add
xchg
jno
inc
adc
test
(bad)
repz
dec
out
in
(bad)
xlat
sahf
into
and
int3
mov
jl
scas
scas
inc
getsec
jns
or
cmps
lods
sub
movs
xchg
pop
(bad)
movs
loope
enter
out
mov
sub
sub
outs
mov
enter
je
fst
mov
jo
lock
mov
jb
lahf
jne
push
pop
scas
and
adc
cmp
inc
jge
cmp
ins
aam
jb
push
in
or
(bad)
jle
sar
mov
xchg
adc
data16
jecxz
fs
div
push
jae
adc
popf
cwde
(bad)
dec
inc
push
in
cld
xchg
add
fst
(bad)
enter
je
(bad)
fdivr
arpl
sbb
mov
fmul
pop
mov
jp
pop
cmps
icebp
stc
push
retf
jecxz
outs
inc
into
bound
mov
mov
xor
in
and
aas
xchg
xchg
inc
and
int
sti
ss
(bad)
test
retf
xchg
test
sbb
imul
push
ds
ja
js
fistp
in
in
arpl
lods
mov
xor
xor
stos
test
ror
mov
aam
enter
and
xor
sahf
adc
cli
dec
xchg
pop
jle
pop
ds
mov
fwait
or
mov
jno
fs
sbb
xor
jae
je
jecxz
push
push
dec
adc
push
push
dec
fst
sbb
inc
xor
push
mov
pop
pop
out
jmp
mov
or
cld
loope
ins
loope
aaa
mov
sbb
mov
hlt
test
cmc
das
pop
or
inc
fcmovb
daa
mov
fisttp
sub
pop
inc
lahf
leave
mov
inc
inc
inc
add
xchg
aam
push
popa
sbb
xchg
aam
or
mov
jecxz
inc
in
jno
mov
jnp
push
fwait
and
pop
out
test
repz
sub
sub
cwde
lds
lods
call
or
(bad)
push
sbb
in
or
mov
jns
cli
(bad)
cmps
loop
fisub
xchg
mov
pop
pop
test
mov
fwait
pushf
xchg
inc
loopne
fdiv
sbb
push
or
dec
mov
sub
xchg
clc
lds
popa
shl
jl
xchg
mov
xchg
dec
inc
mov
jo
push
sbb
sbb
jmp
inc
xchg
jp
(bad)
(bad)
aad
jg
enter
sti
ja
cmp
out
pop
or
adc
out
inc
jo
mov
push
sbb
push
sub
clc
or
xor
cmp
push
pop
or
mov
mov
xor
les
sub
pop
addr16
or
mov
rcl
lds
lahf
(bad)
(bad)
cld
pop
push
or
mul
hlt
push
jmp
and
push
jae
pop
or
ja
je
xchg
icebp
dec
add
int
into
jmp
mov
xor
pop
adc
jmp
cld
adc
sbb
mov
dec
fist
movs
(bad)
out
xchg
xor
sbb
pushf
aam
fcmovnu
sar
stos
icebp
bound
jp
push
bound
or
mov
mov
retf
or
in
jg
push
jbe
rep
jecxz
imul
mov
mov
and
mov
scas
lods
mov
ret
and
mov
or
adc
xchg
cmp
mov
xor
jge
sub
pop
repnz
adc
adc
cld
xchg
nop
jg
int
idiv
mov
mov
pop
sar
inc
add
fbstp
gs
in
lock
or
sti
dec
ss
fld
adc
push
stos
dec
or
(bad)
mov
loopne
stc
sbb
xlat
push
(bad)
jecxz
mov
call
xchg
inc
jecxz
jb
ss
push
pushf
xor
ss
push
imul
sub
ja
leave
sti
je
lods
in
out
xchg
adc
and
daa
xchg
je
cmp
push
sahf
mov
adc
frstor
pusha
pop
in
ins
adc
movs
mul
adc
jecxz
push
add
inc
enter
mov
pop
scas
aas
dec
pop
mov
cmp
and
dec
adc
retf
push
out
shld
or
inc
mov
cmp
inc
jmp
loop
lahf
mov
adc
adc
mov
es
jns
cmps
js
jns
pop
pop
jo
xor
pop
inc
(bad)
xlat
dec
inc
arpl
add
adc
je
inc
add
iret
iret
sub
dec
xchg
or
retf
retf
cmp
cmps
sub
inc
push
outs
inc
cld
stos
cdq
(bad)
push
xchg
sbb
add
je
movs
in
mov
and
mov
aam
xor
or
cmp
jg
push
jp
push
push
addr16
(bad)
imul
shl
mov
mov
xor
test
pop
stos
mov
adc
dec
fld
xchg
add
ss
add
push
pop
gs
(bad)
cmps
add
cmp
push
push
mov
ja
push
mov
add
xchg
rcr
jne
sbb
lock
inc
stos
icebp
pop
lock
push
push
push
stos
adc
into
test
sbb
mov
add
fcomp
aam
cmp
shl
or
(bad)
cmp
cmp
cmp
test
rcl
ss
test
jg
cld
dec
jae
lods
jmp
nop
adc
mov
mov
(bad)
pop
mov
cmp
das
pop
fstp
pop
cmp
xor
pop
fild
adc
jmp
test
gs
push
jns
inc
mov
cmp
lahf
imul
cwde
mov
test
push
cmp
outs
push
out
adc
dec
daa
out
xchg
outs
sub
sbb
or
mov
jne
xchg
retf
stos
add
and
lods
xchg
inc
pop
jle
call
pop
cmps
jo
jnp
addr16
mov
test
push
aaa
in
call
adc
cdq
(bad)
je
push
cmp
loop
(bad)
xor
shl
loop
enter
rcr
mov
call
mov
out
in
sbb
cmp
loop
and
jecxz
cwde
mov
(bad)
setns
pop
cmp
movs
clc
fistp
dec
lock
mov
imul
out
clc
jno
mov
mov
pop
sub
jbe
jno
lods
test
jo
or
or
add
pop
js
xchg
scas
jecxz
mov
dec
sbb
mov
fidivr
sbb
pop
jae
and
and
mov
shr
and
ret
push
ds
into
push
movs
pop
mov
jl
jmp
mov
(bad)
pop
sbb
fstp
or
mov
inc
test
push
mov
shl
sti
xor
loope
or
mov
jne
mov
dec
pop
test
movs
sbb
call
sbb
sub
xor
rol
cmc
xor
dec
and
adc
test
std
les
and
sbb
mov
push
imul
aad
push
inc
ret
dec
ins
adc
dec
aas
fistp
(bad)
iret
pop
fcom
enter
cmp
add
xor
mov
sub
inc
add
mov
cmp
stos
xor
mov
sbb
out
es
fiadd
push
jmp
jg
(bad)
pop
mov
mov
pushw
movs
fldenv
mov
ss
addr16
cs
sbb
cs
sti
mov
imul
mov
inc
int3
push
out
in
(bad)
xchg
retf
adc
add
ins
fs
or
stc
test
sub
xchg
mov
jmp
arpl
data16
ret
or
adc
push
adc
loopne
adc
adc
push
dec
inc
push
not
imul
xor
xchg
cmp
jnp
sysenter
sahf
clc
test
inc
or
mov
loope
(bad)
jmp
mov
xor
cmc
jmp
xor
ret
xchg
ins
jbe
xchg
jno
cmp
cmps
fwait
pop
(bad)
fcomp
cmp
out
pop
cmc
push
ja
sbb
js
mov
sbb
outs
jne
xchg
mov
or
dec
inc
mov
call
mov
push
mov
int3
mov
in
hlt
and
pop
sbb
pop
dec
jp
pop
out
aad
mov
lods
movs
adc
sbb
mov
out
xchg
clc
es
mov
mov
mov
fmul
xor
mov
movs
in
sti
xchg
mov
dec
pop
shl
daa
sbb
cwde
inc
and
(bad)
addr16
inc
cmps
mov
mov
xchg
not
ja
stos
or
jmp
retf
pop
mov
in
sbb
(bad)
repnz
dec
scas
mov
shl
xor
mov
xor
xor
aas
cmp
and
adc
push
pusha
sbb
(bad)
push
in
inc
loope
gs
cmps
pop
imul
imul
push
popa
retf
or
fsubr
sub
cmps
xchg
gs
inc
ss
fsubr
or
xlat
int
or
sub
push
sti
aaa
pop
outs
cmp
movd
sbb
dec
sbb
test
dec
jl
aas
mov
pop
jb
push
ret
xlat
push
arpl
pop
sub
mov
addr16
mov
dec
retf
xor
pushf
out
push
mov
pop
xchg
aam
mov
jge
pop
sub
call
xor
les
addr16
fcmove
pslld
test
dec
retf
fst
adc
jnp
fmul
xor
xor
sbb
cmps
inc
pusha
ficom
jmp
adc
scas
fadd
adc
adc
test
mov
sub
movs
xchg
pop
ss
jle
les
jecxz
xchg
dec
gs
inc
sbb
nop
ja
rcl
outs
jp
sbb
loop
into
push
push
iret
add
pop
lods
lds
or
sbb
inc
movs
add
fsub
and
pop
mov
test
in
add
sar
or
cmp
adc
jmp
das
repz
mul
(bad)
fnstsw
test
jo
rcr
(bad)
mov
fcom
jmp
inc
cmp
inc
add
pop
jmp
ins
test
mov
pop
gs
add
out
clc
(bad)
xchg
sahf
cmp
ds
test
cmp
adc
cmp
xchg
test
(bad)
cmps
loopne
inc
mov
imul
sub
dec
dec
push
test
fsub
cli
sub
inc
jno
in
cmp
cwde
out
mov
daa
nop
stos
jle
push
push
mov
cmp
mov
out
and
pop
loop
ds
pusha
es
retf
aam
push
mov
or
xchg
pop
pop
js
cmps
add
jnp
ror
cwde
pop
lahf
lock
inc
inc
jl
dec
xchg
popa
addr16
mov
cmp
mov
fwait
xor
push
jmp
pop
sbb
dec
xchg
out
div
adc
mov
aad
pop
jp
in
(bad)
and
xor
in
je
sbb
mov
std
stos
sub
xor
repz
pop
adc
add
je
out
jge
rcl
fstp
or
sub
arpl
and
sub
lds
push
std
adc
rcl
inc
add
scas
xor
push
fidiv
nop
xchg
sub
into
fs
fcomp
sbb
jl
sar
pop
fst
sbb
push
or
or
push
jp
leave
dec
in
sub
das
mov
mov
movs
loopne
xor
or
xor
sub
loop
call
dec
(bad)
push
stos
cmp
int
sti
sbb
call
mov
gs
bound
sub
pop
cs
out
stc
mov
mov
cmp
push
ja
add
call
add
xor
mov
sub
jns
ror
lock
mov
mov
pop
sub
push
or
inc
pop
inc
sub
mov
push
xchg
or
iret
mov
imul
fimul
je
add
seta
and
sbb
push
jns
aad
retf
mov
fnsave
dec
jns
mov
cmp
(bad)
cmp
pop
sub
or
or
cld
jl
rcl
mov
stos
int3
pop
ins
adc
xchg
jp
xchg
inc
in
or
pop
cld
retf
lock
pop
into
and
cmp
sub
out
add
add
sbb
cli
or
mov
dec
test
lods
xchg
pop
loope
scas
push
in
mov
xchg
cmp
dec
cmp
push
dec
fstp
aam
and
(bad)
push
inc
lods
mov
mov
(bad)
pop
inc
(bad)
rcl
push
in
(bad)
lods
repnz
aam
inc
dec
(bad)
mov
xchg
retf
(bad)
mov
mov
push
fnsave
jbe
(bad)
sar
jbe
and
push
dec
mov
xor
xor
mov
or
push
jg
sar
shl
cdq
adc
mov
jno
popf
movs
jno
test
jb
or
adc
(bad)
pop
push
lds
or
shl
xchg
mov
or
setp
loopne
xor
je
call
jl
test
add
jp
and
xor
imul
jle
cmp
pop
lods
mov
dec
mov
fcomi
fwait
mov
sbb
fdivr
or
wbinvd
sub
dec
dec
mov
bsf
mov
pop
jle
(bad)
push
(bad)
repz
sar
arpl
mov
movs
je
mov
sub
inc
mov
je
and
je
inc
int3
cmps
shl
mov
mov
dec
mov
xchg
sub
(bad)
xor
jl
pop
(bad)
jle
jp
lea
mov
fs
pop
cmp
inc
out
mov
retf
ja
outs
add
xor
inc
mov
inc
or
test
inc
into
mov
out
push
int
shl
mov
adc
enter
sti
loope
push
and
or
mov
idiv
aaa
sbb
das
cmc
pop
mov
fwait
mov
xchg
xbegin
(bad)
sahf
push
icebp
sub
sti
mov
cmps
cmc
and
jmp
mov
test
fnstenv
(bad)
imul
mov
cmp
push
mov
fsubr
add
popf
sbb
sar
cmp
inc
call
xor
adc
jno
fsub
sub
mov
push
loop
fs
jge
lahf
(bad)
push
loope
jmp
adc
mov
inc
popf
pop
mov
and
sbb
outs
pop
xchg
(bad)
mov
mov
cmp
mov
out
cmps
push
and
pusha
and
arpl
push
xlat
or
adc
jb
jmp
mov
xchg
jns
mov
jge
mov
sub
sub
imul
push
or
scas
mov
jne
jmp
pop
cmp
push
xchg
pop
add
and
inc
mov
cdq
lock
ret
loopne
cmps
mov
es
sub
scas
push
xchg
xchg
imul
adc
inc
sbb
pop
mov
cmp
jl
div
imul
enter
or
xchg
sub
inc
pop
mov
cmp
std
inc
push
fwait
cwde
push
xchg
push
add
cld
xchg
inc
es
(bad)
mov
repz
jmp
adc
hlt
jmp
out
jnp
mov
(bad)
mov
dec
mov
movs
call
jns
pop
inc
sbb
adc
jmp
clc
sti
push
sub
neg
fwait
xchg
xchg
xchg
loopne
mov
xchg
bound
adc
nop
fwait
jmp
fidivr
not
inc
pop
push
jne
es
jle
jbe
xchg
fild
nop
(bad)
retf
retf
jecxz
pop
ds
mov
mov
jne
mov
inc
mov
or
call
push
dec
mov
sbb
push
sbb
sar
sub
inc
add
xchg
sub
mov
mov
cmc
and
jmp
call
sar
inc
add
add
fild
push
or
(bad)
int3
arpl
cdq
aam
xchg
adc
mov
adc
cmps
std
sbb
ins
sub
ins
int3
shl
icebp
inc
sub
out
adc
iret
jmp
pop
mov
rcr
gs
mov
adc
out
cmp
mov
test
(bad)
push
bound
fwait
mov
add
mov
fimul
dec
fistp
fild
dec
int3
add
dec
shl
imul
scas
(bad)
mov
inc
push
inc
imul
(bad)
dec
sti
add
in
xor
and
jmp
retf
and
adc
out
(bad)
fbld
imul
out
inc
repnz
popa
cli
dec
shr
add
mov
push
loope
pop
push
addr16
imul
add
ret
push
int3
mov
jl
xchg
fnstsw
fs
pop
mov
fdivr
call
cmps
jg
xor
loop
repz
ins
sbb
mov
out
(bad)
jp
test
out
imul
mov
adc
popa
bound
xchg
pop
push
int
(bad)
xor
fwait
xor
shr
mov
popf
and
mov
xor
jae
fadd
ja
into
and
jae
lods
and
iret
xchg
sub
add
(bad)
xor
mov
icebp
sub
push
xchg
ja
lock
fs
out
xor
mov
loop
cmp
(bad)
ficom
bound
sti
jno
dec
cld
sbb
outs
sub
push
dec
sahf
pop
xor
inc
movs
add
in
fnstenv
retf
jle
stos
push
mov
cmp
mov
add
hlt
mov
inc
out
jns
mov
cmp
xchg
mov
retf
cmp
xchg
icebp
dec
clc
add
icebp
lods
mov
push
mov
pop
cli
cwde
push
xchg
clc
inc
movs
sar
sbb
enter
or
bound
(bad)
clc
mov
mov
or
push
mov
cmp
out
xchg
aaa
fisub
add
lods
scas
shl
and
jmp
dec
lods
(bad)
es
xchg
inc
xor
inc
mov
ror
inc
adc
sub
popa
inc
mov
clc
sbb
sahf
xchg
fdivr
(bad)
xchg
or
fwait
or
mov
inc
aam
imul
int
cmp
jnp
jnp
pushf
movs
pop
adc
iret
jo
sub
mov
ror
scas
mov
push
dec
sti
pop
ror
(bad)
cmp
sub
mov
mov
xor
mov
pop
pushf
fcmovb
push
leave
rol
pusha
jmp
mov
mov
and
pop
sub
adc
repnz
cwde
rcr
ja
arpl
jno
(bad)
inc
nop
xchg
jns
ret
sbb
pop
mov
mov
or
rol
xchg
in
mov
adc
push
xor
mov
and
dec
mov
sbb
cmps
mov
cwde
mov
gs
fnstenv
jle
lds
rcr
mov
pop
mov
cmc
jle
addr16
inc
test
cmp
mov
es
mov
addr16
iret
xchg
je
adc
(bad)
jecxz
stos
neg
pusha
sub
fisubr
out
sti
mov
hlt
jg
sbb
pop
imul
ret
ja
cmp
xor
xchg
pop
and
leave
ret
fistp
not
call
cli
pop
mov
adc
daa
and
add
out
movs
jge
cli
pop
in
addr16
sbb
push
loop
sub
sub
ja
mov
xlat
jle
inc
loopne
adc
pop
bound
or
dec
imul
xor
cli
aas
test
(bad)
stc
psadbw
sbb
test
mov
cmp
jg
loopne
mov
mov
std
push
or
out
ja
loop
sub
(bad)
pop
cmp
repnz
and
addr16
inc
ins
mov
stc
pop
add
jg
int3
push
mov
mov
sti
repz
mov
pop
ss
mov
lods
jns
xlat
lea
push
test
in
jnp
xchg
pop
xor
adc
cmp
adc
out
add
pop
call
dec
cld
and
iret
rcl
jle
loop
mov
fnstenv
jb
scas
std
fistp
das
sbb
enter
test
pop
aaa
imul
pop
cmp
cmp
aas
mov
xlat
xor
cwde
bound
ret
add
jmp
cmp
jo
adc
xchg
mov
cli
adc
jp
sub
mov
mov
js
das
cdq
imul
fst
xor
push
scas
inc
or
fbld
mov
je
movs
sub
lock
sub
pop
mov
cmp
gs
out
jo
fst
adc
les
sub
jmp
cli
xchg
mov
cmps
scas
mov
ds
push
pop
mov
cmp
mov
sub
xchg
jmp
mov
mov
add
dec
gs
add
push
fwait
mov
mov
out
xchg
and
or
sahf
out
stc
inc
and
xchg
scas
or
out
mov
or
lds
repz
es
test
pop
lods
inc
or
imul
pop
loope
mov
pop
loopne
dec
xor
dec
mov
mov
push
pushf
mov
jle
aas
(bad)
data16
cmp
jns
repz
jae
dec
pop
movs
nop
outs
pop
shr
dec
inc
push
cmp
mov
out
sub
call
fstp
loop
jo
push
xor
xchg
sbb
xor
popa
scas
cmp
xor
xor
adc
pop
mov
mov
push
stc
and
mov
sub
(bad)
adc
mov
push
and
mov
icebp
ins
jge
sub
jge
cwde
sbb
retf
imul
mov
pop
bound
fisttp
aad
cdq
adc
sbb
pop
sub
dec
(bad)
(bad)
int3
and
call
dec
cdq
or
mov
rcl
add
inc
pop
outs
xchg
ror
xchg
jnp
test
sub
scas
sbb
sub
cmp
call
in
ss
pop
popf
xor
icebp
mov
xor
pop
mov
inc
(bad)
setge
mov
out
sub
jo
sbb
pop
(bad)
dec
dec
ret
div
outs
mul
test
sub
leave
mov
cmps
js
push
fld
(bad)
call
sub
cmp
lods
repnz
mov
add
rcr
sub
dec
push
pop
int3
mov
mov
loopne
cmps
lods
add
sar
cmp
shl
scas
ins
scas
cmp
bound
pop
out
fldenv
sbb
movups
jne
push
ja
mov
and
push
adc
aas
fimul
imul
cmp
int3
int
inc
cmc
fisubr
cdq
xchg
pop
xor
sbb
or
gs
xchg
add
popf
or
lock
int
repz
test
imul
loope
rol
(bad)
leave
adc
mov
popf
dec
in
iret
sbb
mov
jge
xor
push
test
scas
or
xchg
shl
sbb
outs
xchg
sbb
sar
cmp
scas
cmp
iret
fnstenv
loope
bound
fwait
xchg
push
fidivr
lods
fisttp
sub
dec
scas
pop
and
xchg
xchg
lock
jnp
mov
mov
inc
pop
je
es
gs
pushf
or
shl
or
test
xchg
ret
neg
aas
fmul
sub
imul
add
xor
jno
sbb
cld
push
retf
and
mov
fcomp
loop
gs
cmps
call
cmc
in
mov
mov
add
jno
imul
out
daa
add
push
into
not
pop
icebp
arpl
inc
into
sahf
jns
repz
ret
or
bound
aas
shl
mov
push
fsub
jne
and
or
push
movs
aad
adc
(bad)
ss
add
pop
mov
pop
stc
(bad)
es
sbb
xchg
mov
xchg
jle
cmc
cld
sbb
xor
and
adc
push
lods
push
scas
mov
sbb
or
iret
sbb
ror
fisubr
pop
push
xlat
ret
ret
pcmpeqb
adc
pusha
adc
enter
je
shr
push
push
adc
cwde
pop
jge
xor
pop
dec
js
ss
jbe
pop
and
cli
dec
pushf
loope
xor
clc
out
adc
js
jb
push
movs
ss
(bad)
sub
or
sbb
ja
enter
adc
(bad)
pop
push
in
or
push
into
cs
lahf
push
xchg
cmp
sub
ins
push
adc
jmp
iret
push
iret
cmp
xchg
(bad)
jo
mov
scas
and
and
nop
stos
inc
int
mov
jae
outs
call
jbe
pop
dec
packsswb
mov
dec
adc
enter
or
sub
fs
pop
jae
jg
ja
ins
xor
arpl
push
ja
mov
mov
inc
icebp
pop
addr16
push
inc
aad
fisubr
test
ins
xchg
cld
cmp
sub
inc
(bad)
xor
inc
lea
dec
fdiv
enter
retf
push
std
gs
ins
popa
and
mov
and
inc
jge
imul
int3
dec
les
shl
jp
arpl
lahf
mov
in
stos
je
or
and
jge
fsub
push
cmp
in
loop
(bad)
xor
retf
sub
xor
in
jmp
icebp
leave
aas
mov
adc
gs
mov
jl
push
sub
xor
call
or
das
jle
icebp
fidiv
pop
mov
add
test
rcl
pop
xchg
popf
xchg
dec
mov
or
push
cld
cwde
jbe
pop
add
mov
adc
inc
jge
fwait
and
js
cli
sahf
imul
(bad)
sar
add
cs
or
inc
sub
ror
adc
mov
sub
fldenv
xor
xchg
push
jecxz
dec
inc
movaps
xor
inc
je
shl
ins
movs
div
test
sbb
(bad)
pop
call
cmp
and
adc
add
fld
add
shl
and
cli
movs
xor
cmp
inc
jbe
test
cmps
xlat
enter
and
dec
outs
call
rol
jno
jmp
sar
mov
mov
rol
ja
dec
dec
pop
iret
jl
cmp
sub
retf
push
pop
mov
add
add
movs
mov
into
mov
cmp
adc
sar
(bad)
cmp
xor
mov
pusha
inc
cmp
add
and
jl
push
popf
add
mov
add
adc
mov
(bad)
push
xor
mov
test
pop
push
or
sahf
icebp
outs
or
and
mov
jmp
mov
lods
fs
cld
ret
ins
xor
adc
addr16
sahf
test
xor
lock
(bad)
pop
sub
jbe
test
rcr
cmp
cs
mov
fld
fmulp
int
pop
lods
and
popa
clc
jns
lahf
sbb
lahf
sbb
dec
or
dec
aad
ret
mov
jbe
jg
jmp
out
or
call
pop
repnz
out
outs
loop
arpl
pop
fisttp
stos
xor
or
ret
xchg
popf
(bad)
sbb
inc
or
adc
mov
pop
jnp
scas
inc
cmps
xchg
mov
mov
xor
or
xchg
push
and
sahf
sbb
pop
cmc
dec
fdivrp
stos
nop
test
xchg
int
das
jle
movlps
jb
push
mov
(bad)
lock
xchg
imul
mov
pop
into
sbb
test
pop
xor
mov
xchg
shr
sub
cld
and
pop
add
imul
xchg
ficom
lds
jp
lock
addr16
xor
inc
jae
jle
jecxz
mov
cwde
and
jbe
fwait
gs
inc
movs
(bad)
jmp
pop
imul
je
pop
pop
and
mov
int3
(bad)
(bad)
pop
mov
pusha
pop
pop
mov
push
std
cmc
sbb
mov
aam
or
fld
sbb
sub
dec
dec
push
xor
sub
sub
mov
sbb
adc
adc
mov
pop
lods
inc
or
es
hlt
movs
scas
mov
fidiv
cdq
leave
cmp
pop
mov
mov
jge
jg
fcomp
add
xchg
add
scas
into
call
pop
loop
inc
mov
movs
test
mov
inc
ss
test
xchg
int3
or
(bad)
dec
push
(bad)
rol
xor
inc
pop
fsubr
add
cwde
not
imul
add
imul
mov
out
cmp
mov
jge
bound
mov
(bad)
jmp
test
sbb
cmp
mov
cdq
sub
rol
fsub
repnz
iret
out
sub
jp
sub
out
mov
fistp
inc
jbe
mov
movs
out
mov
(bad)
out
inc
cdq
cmp
rol
out
and
cwde
leave
pop
adc
in
fisubr
mov
es
sbb
jge
sbb
or
daa
rcr
adc
scas
mov
sahf
mov
and
into
jle
cs
lea
add
sub
in
aam
adc
dec
ja
push
jmp
cmp
repz
ins
xchg
cli
xchg
xchg
inc
sub
aam
mov
xchg
cmp
fld
fsincos
adc
sti
and
jbe
xor
in
das
adc
inc
outs
adc
xor
fiadd
inc
xchg
or
ror
add
mov
test
cmp
dec
sbb
mov
add
rcr
loopne
jle
add
mov
ror
jecxz
mov
idiv
sub
loopne
sub
or
add
mov
dec
push
sbb
cwde
aas
pop
mov
pusha
stos
icebp
push
test
sbb
ret
pop
add
ret
and
out
sub
sub
jnp
add
leave
sub
pop
in
fcom
(bad)
inc
jge
scas
mov
adc
(bad)
xchg
push
out
sbb
pop
jae
mov
fstp
add
jne
xchg
ja
ret
inc
mov
in
cmp
xchg
mov
sub
das
push
or
dec
or
or
or
dec
and
and
dec
jl
push
fneni(8087
xor
push
in
dec
or
retf
arpl
jae
pop
mov
cmps
aad
or
mov
std
ret
aas
out
sub
cmp
in
cs
adc
mov
arpl
stc
inc
mov
clc
loope
add
jnp
out
je
pop
test
cmp
fimul
jmp
jp
cmp
lods
into
pop
cmps
pop
adc
push
push
fwait
cmp
pusha
jge
(bad)
int3
mul
mov
jg
push
pop
cmp
fimul
fdivr
cmp
test
adc
retf
das
ficomp
gs
retf
pushf
sub
xchg
xchg
popf
aas
sbb
cli
push
add
es
das
dec
xor
pop
mov
or
aad
or
cmps
aas
fisttp
sub
and
sahf
sbb
pop
cmp
adc
out
add
test
in
push
mov
and
iret
test
sub
pop
jae
js
iret
clc
jno
sbb
daa
inc
shl
test
loope
mov
push
sub
mov
les
xchg
lods
xor
jge
cmp
dec
cmps
test
sub
inc
sbb
lods
lods
lds
jno
pop
and
and
(bad)
arpl
jg
inc
(bad)
sbb
mov
rcl
xor
cmc
push
jle
pop
xchg
mul
adc
mov
cmc
dec
or
mov
or
in
push
sbb
xor
fisub
mov
sbb
push
pop
push
in
inc
movs
lds
(bad)
aad
and
pusha
repz
pop
add
data16
outs
dec
pusha
push
mov
or
cmp
mov
jl
add
in
cmps
mov
and
mov
loope
in
scas
outs
sbb
xor
fldenv
pop
cmp
pusha
cmps
push
movs
aam
test
jmp
pop
scas
add
inc
ins
adc
jg
imul
xchg
lock
lahf
jmp
retf
gs
jns
outs
ins
imul
in
loopne
gs
idiv
out
jnp
popf
div
pushf
sar
test
fist
sti
dec
call
push
sbb
movs
sub
mov
loope
push
pushf
push
inc
add
aaa
push
and
shl
dec
lahf
jmp
in
pop
clc
push
inc
mov
std
sbb
call
(bad)
xchg
(bad)
ficomp
cld
jne
nop
cld
stc
add
mov
mov
jl
mov
dec
push
call
xor
cld
fsubr
daa
mov
sbb
sub
jp
imul
out
in
dec
xor
push
(bad)
inc
lea
mov
stos
jo
test
pushf
repz
test
sbb
push
push
scas
hlt
sub
loopne
(bad)
mov
xchg
(bad)
xchg
repnz
cli
fbstp
cdq
(bad)
mov
push
outs
popa
mov
cdq
dec
mov
push
aad
and
jmp
sub
add
dec
pop
scas
mov
jne
(bad)
dec
test
cli
clc
push
push
ss
hlt
out
in
gs
das
adc
xchg
mov
push
cld
sub
movs
push
clc
mov
into
cld
test
jne
fld
pop
shl
shl
mov
sbb
mov
out
and
add
or
cmp
inc
push
push
retf
arpl
jne
push
pop
jle
jp
ja
fld
lds
pop
clc
dec
push
mov
lods
inc
or
outs
frstor
mov
fmul
jg
cwde
iret
jo
xor
cmps
sbb
mov
aad
add
shr
mov
dec
(bad)
cmp
inc
call
fst
cmp
test
inc
daa
cdq
pop
out
retf
pusha
or
outs
or
pushf
cli
add
ja
xor
or
push
pop
and
jle
(bad)
stc
sub
(bad)
push
cli
mov
mov
xlat
inc
or
popa
mov
xor
xchg
adc
jbe
mov
call
out
jg
xchg
mov
call
fprem
fsub
icebp
jns
dec
mov
js
fidiv
(bad)
xchg
in
cwde
and
adc
mov
sbb
xor
call
fs
add
sub
out
fldcw
gs
xor
loopne
jnp
push
test
fild
dec
popf
shr
loope
mov
fidiv
stos
shl
retf
fisttp
hlt
out
jno
mov
lods
dec
cli
syscall
jno
test
inc
jl
adc
xchg
scas
add
or
add
add
ret
add
sbb
push
(bad)
jl
push
jno
pop
and
mov
or
push
aas
out
cmc
(bad)
fwait
adc
loopne
jle
jmp
cmp
mov
mov
lahf
mov
adc
sbb
in
or
nop
clc
add
push
pop
mov
lods
ins
cdq
push
dec
imul
movs
iret
mov
sbb
mov
push
out
add
in
imul
mov
ins
enter
or
mov
or
test
(bad)
push
adc
fiadd
cmp
bound
out
jle
jne
push
adc
xor
sar
mov
in
or
(bad)
leave
lahf
pusha
out
call
mov
std
loopne
mov
jge
mov
hlt
ins
(bad)
sub
rol
adc
loope
cs
mov
outs
pushf
clc
mov
xor
fisubr
jb
outs
push
push
ds
rcl
(bad)
sbb
jnp
adc
jge
ror
push
bound
mov
push
sub
pusha
les
sub
or
sub
repnz
mov
daa
in
adc
cs
xchg
fwait
inc
xor
add
push
and
in
add
fisttp
cmp
inc
xchg
ret
(bad)
div
xchg
xor
push
nop
mov
add
add
cmps
pop
mov
mov
and
push
rcr
addr16
sbb
pop
push
push
fs
nop
push
sub
xchg
mov
and
popf
push
sti
ret
mov
xchg
int3
mov
adc
xchg
das
in
aad
test
(bad)
mov
out
xor
retf
loope
out
pop
movs
cdq
mov
add
and
cdq
fist
int3
aam
scas
pop
adc
pop
adc
or
ret
in
mov
add
xchg
jnp
mov
jae
pushf
jae
out
mov
xchg
adc
loop
or
mov
mov
sub
leave
aam
mov
ficom
adc
mov
pop
mov
fnsave
xor
inc
je
mov
pusha
jno
mov
gs
inc
xor
cmc
icebp
lea
cmp
pop
inc
fsubrp
jl
adc
pop
push
dec
mov
sub
shl
(bad)
repz
push
mov
jne
mov
cwde
sar
adc
add
cmp
adc
sbb
add
fcom
pop
pop
and
popa
shl
or
xor
push
aaa
rol
jb
mov
shl
add
inc
scas
sbb
stc
out
add
push
bound
sbb
mov
ja
in
push
fwait
jbe
pop
call
aam
jnp
pop
sub
push
xchg
lods
mov
push
and
ds
fs
cmp
dec
cdq
pop
pop
inc
mov
stos
cmp
mov
cs
inc
stos
cmc
jno
jp
fwait
mov
push
inc
mov
sbb
sub
jp
mov
sahf
pop
daa
out
cli
adc
clc
lahf
jmp
xor
in
sti
mov
in
jp
xchg
stos
rcl
test
push
ins
(bad)
cmp
push
sub
fucomp
aas
sub
fld
ds
fmul
mov
retf
retf
and
inc
add
(bad)
clc
outs
mov
fadd
outs
mov
jo
jo
lods
loopne
xchg
mov
inc
or
lods
dec
fs
lahf
jle
cmp
int3
push
add
dec
jo
dec
fnsetpm(287
lahf
retf
or
mov
ficom
lahf
mov
push
cmp
cmp
int3
pop
test
xchg
dec
pop
imul
pop
inc
cmp
lock
cmp
imul
inc
fcmovnu
pop
mov
push
add
(bad)
sub
leave
pop
inc
xor
sahf
imul
fcmovb
ficom
add
int
mov
in
mov
ins
sbb
xchg
sbb
jb
and
xor
leave
xor
(bad)
or
aas
cmps
adc
and
loopne
es
push
icebp
rcl
movs
cmp
dec
add
hlt
leave
jle
cmp
fadd
ss
or
push
dec
test
outs
or
inc
dec
xchg
outs
mov
dec
dec
mov
or
jne
jle
ror
ins
cli
add
ss
ror
jo
mov
inc
pop
add
aam
(bad)
fcomp
jno
nop
inc
xchg
loope
add
mov
test
jnp
mov
test
jbe
adc
mov
cmps
inc
(bad)
in
xor
sar
ss
mov
out
push
ss
int3
dec
adc
(bad)
icebp
cld
push
jae
sbb
sar
and
or
pop
xchg
pusha
lds
test
jo
mov
cmp
jbe
idiv
push
rcr
mul
cmc
hlt
aaa
scas
sbb
inc
sahf
jle
or
mov
add
ins
push
add
outs
jb
mov
cmp
and
fs
jmp
pusha
hlt
mov
pop
add
or
pop
imul
cmp
pushf
xor
push
and
loope
push
shr
test
ja
sbb
jl
sub
cmp
shr
icebp
add
popa
cmp
out
inc
cmp
xchg
or
mov
mov
bound
xor
inc
mov
lods
shl
or
pop
shl
push
inc
div
out
loop
out
into
pop
out
stos
jge
in
xor
pop
out
mov
(bad)
adc
je
rol
fcomp
ret
aad
pushf
stc
ret
leave
dec
int
or
jb
xchg
sahf
movs
repz
push
pop
mov
mov
sub
push
dec
test
adc
add
add
lock
xor
push
dec
call
nop
jl
xchg
mov
push
pop
add
jle
inc
jg
adc
bound
or
pop
jo
push
mov
mov
xor
xchg
ret
ja
(bad)
and
loope
jae
pop
jo
xchg
mov
jmp
adc
das
ds
rcl
outs
outs
aam
int
sahf
mov
fistp
cmp
push
fstp
jne
xchg
and
cld
xor
xor
push
dec
adc
jmp
inc
out
push
icebp
sbb
popf
cmp
pop
push
jne
inc
or
xchg
pop
xor
push
sub
fld
and
mov
fimul
dec
xlat
in
fwait
cmp
sub
cmp
lds
in
add
test
lods
or
in
sbb
mov
adc
dec
fadd
or
(bad)
ja
mov
inc
jno
push
rcr
nop
ret
dec
not
ret
fiadd
stos
ret
jp
push
in
xchg
push
fmulp
push
or
mov
mov
add
repz
cmps
lds
cmp
adc
cmc
loopne
adc
lea
xchg
dec
fs
sbb
nop
jge
and
ds
fcom
cmp
xchg
fnstsw
or
movs
cmps
mov
mov
shl
retf
lahf
cmps
mul
and
in
hlt
and
cs
mov
and
out
loop
sbb
add
inc
pop
test
mov
shr
sub
add
xor
xor
inc
pop
clc
jl
ror
cmps
pop
add
cli
adc
fs
icebp
cld
inc
inc
xor
in
imul
jns
repnz
shl
mov
xchg
add
mov
push
cli
outs
loopne
xchg
(bad)
div
mov
sahf
xchg
push
or
ins
push
inc
fcomp
bound
imul
in
fidivr
mov
mov
(bad)
cmp
xchg
mov
or
enter
loop
xchg
call
jmp
(bad)
mov
sub
mov
cli
xchg
pop
popa
dec
sahf
es
mov
shr
add
inc
xchg
test
mov
inc
daa
mov
ds
xchg
mov
add
cmp
and
stos
pop
out
inc
ja
test
jmp
dec
mov
adc
stos
or
std
mov
imul
jmp
in
js
test
in
mov
sbb
sti
fnstcw
ins
mov
fisubr
xor
or
pop
cmp
add
dec
pop
xchg
clc
xchg
enter
int
xchg
xor
enter
cmp
cmc
dec
jecxz
test
pop
dec
push
adc
out
pop
ficom
cmp
fcmovnb
jmp
inc
int3
repz
xor
cmp
repnz
out
cmps
sbb
test
push
mov
arpl
inc
push
mov
ja
ret
test
std
ins
add
xor
xor
ficomp
jae
or
pop
and
neg
mov
inc
add
add
xchg
mov
jmp
pop
push
dec
ins
ret
xchg
mov
mov
into
fistp
repz
popf
or
out
iret
dec
fisubr
jp
cmp
mov
jmp
sbb
sbb
pushf
cmps
outs
xchg
scas
xor
fidivr
inc
jp
std
cmp
cmp
add
(bad)
jmp
nop
test
inc
jbe
(bad)
cmp
adc
fxch
cwde
stos
and
or
stos
mov
jecxz
aam
(bad)
int3
xor
mov
es
retf
dec
and
ja
outs
sbb
in
stos
dec
or
iret
outs
mov
mov
inc
mov
push
sti
and
sahf
out
push
mov
cmp
xor
jge
loopne
adc
sar
retf
xchg
movs
cwde
rcl
cwde
inc
fst
test
sbb
or
xchg
jl
jl
xchg
add
and
gs
pop
fstp
dec
hlt
popa
js
loopne
test
dec
imul
iret
push
jbe
mov
add
mov
dec
mov
xchg
aam
imul
(bad)
mov
out
lods
pop
mov
psrld
dec
stos
sub
and
sbb
sub
out
xchg
daa
popf
sbb
sub
js
lods
xchg
or
inc
jbe
shr
ror
pmulhw
push
or
in
sub
add
jecxz
cwde
stos
jl
adc
sbb
jb
mov
imul
leave
sbb
out
sti
pop
cmp
push
inc
(bad)
pop
adc
xchg
push
cmp
pop
inc
retf
hlt
shr
out
data16
dec
inc
(bad)
jecxz
ror
xchg
mov
sub
into
sbb
fld
inc
sahf
add
std
imul
js
loopne
push
mov
in
and
outs
xor
call
push
push
gs
jp
lods
ficomp
pop
add
stos
dec
or
fdivr
mov
adc
mov
xchg
loop
(bad)
mov
adc
imul
and
push
ins
and
(bad)
jg
bound
jg
xor
test
clc
aam
mov
and
pop
popf
cmps
stos
jmp
mov
(bad)
cmp
and
xlat
or
push
popf
mov
sti
pop
scas
movs
(bad)
adc
cmp
lds
jle
push
hlt
mov
jmp
xlat
mov
sbb
dec
mov
repnz
mov
les
push
fucomi
mov
add
mul
pop
popa
fisub
mov
cmps
mov
imul
xchg
or
or
aam
cwde
inc
adc
push
call
mov
mov
jmp
pop
and
cld
push
sub
ret
into
cdq
or
repz
aas
cmp
cli
jl
mov
pop
mov
fsub
inc
pop
mov
loope
and
xchg
mov
lods
mov
pop
int
mov
add
repz
sbb
loope
xchg
xor
add
(bad)
std
and
stc
jecxz
outs
mov
cmp
out
inc
stos
pop
pop
push
scas
jle
test
sbb
mov
cs
and
fxch
test
test
jae
into
sbb
popf
inc
(bad)
inc
hlt
mov
or
pop
push
enter
mov
cli
mov
push
jbe
cli
ss
mul
jl
out
xor
fild
mov
xchg
inc
pop
out
es
ss
pop
xlat
es
ret
dec
arpl
hlt
mov
sub
sbb
add
mov
adc
pop
or
inc
rcr
retf
dec
(bad)
fild
push
int3
push
scas
arpl
les
lock
(bad)
xchg
or
ds
or
int
(bad)
call
retf
pushf
gs
inc
cmp
aam
jno
adc
scas
adc
fsub
adc
ss
inc
xor
jl
mov
aas
jb
(bad)
fcomp
or
mov
mov
and
xchg
sub
pop
push
adc
clc
dec
neg
jecxz
mov
push
scas
push
mov
rcl
mov
lock
mov
push
mov
push
ss
jns
neg
sbb
dec
cmp
stc
xchg
jae
sub
xchg
stc
into
imul
push
fdivr
cmp
fmul
xor
jp
lods
shl
and
dec
pop
cli
xor
dec
enter
pop
lods
mov
sub
mov
lods
daa
rcl
or
jg
popa
in
sbb
aaa
and
push
cmp
pusha
(bad)
enter
std
int3
std
xor
jae
mov
jle
pop
shl
jnp
popa
sbb
pop
ret
in
push
add
and
mov
xchg
(bad)
loopne
daa
dec
punpcklbw
and
mov
push
push
fsubr
ret
in
daa
cli
sbb
pop
jg
and
imul
ins
mov
adc
cs
ror
test
dec
and
sbb
cmp
adc
add
aam
and
into
jle
cli
iret
inc
cmp
xchg
cmc
and
(bad)
iret
in
(bad)
gs
int
sbb
hlt
scas
lock
int3
loopne
jge
mov
xchg
outs
and
es
ror
scas
ja
adc
scas
lds
shl
cs
jmp
and
pop
adc
pusha
adc
aam
push
nop
mov
sub
sub
cs
xchg
xchg
xor
cdq
jmp
lahf
or
inc
xchg
aam
add
cmp
mov
div
shl
jp
mov
(bad)
inc
cmc
push
clc
icebp
push
movs
mov
loope
jno
test
cmp
imul
mov
sub
sub
aam
pusha
xor
or
and
dec
jmp
fimul
popf
sbb
inc
push
pop
jle
stos
xchg
loop
fwait
add
dec
aam
dec
mov
push
imul
pop
test
mov
stc
fsubr
cmp
jle
jae
imul
mov
fcmovnu
push
xor
xchg
mov
xor
sub
pushf
mov
xor
arpl
pop
movs
cmp
loop
xor
bswap
cmc
jb
mov
cld
add
cli
sbb
lds
idiv
stos
push
xchg
xor
dec
and
or
movs
jmp
iret
adc
div
fucomp
loop
pop
retf
rcl
add
popf
aaa
ja
inc
jns
cmps
mov
inc
add
(bad)
push
adc
jmp
retf
sub
out
outs
and
xor
and
fst
mov
dec
in
or
mov
xchg
push
fstp
mov
sbb
test
je
or
push
jp
cmp
xor
mov
cmp
mov
shl
ror
cmp
mov
fild
sub
adc
lock
jl
cmp
pop
popf
out
mov
cmp
jecxz
enter
leave
ins
jmp
mov
push
(bad)
mov
(bad)
outs
jns
mov
and
mov
xor
(bad)
bound
add
lds
jnp
stos
stos
test
adc
movs
cwde
cld
loopne
inc
in
mov
mov
cmp
mov
movs
test
shl
mov
xor
pop
pop
loopne
mov
mov
in
enter
cli
mov
not
pop
in
xchg
(bad)
cmp
mov
pop
and
(bad)
std
cwde
xor
xor
test
pop
mov
call
arpl
sbb
aaa
add
rcl
je
and
and
popa
cdq
xlat
out
fst
adc
rcr
in
int3
fldcw
cmps
push
mov
and
je
push
cmp
xchg
sub
ins
push
sub
scas
inc
dec
or
push
cmp
jmp
xor
mov
or
xor
xor
addr16
adc
and
jg
icebp
fisubr
test
enter
cmp
test
lods
popf
push
mov
rol
dec
jecxz
xchg
enter
pop
lods
addr16
inc
sub
nop
sub
adc
call
inc
push
leave
je
(bad)
jge
shufps
knotw
jno
xchg
in
sbb
cdq
les
jmp
jg
push
mov
outs
push
jo
scas
jg
movs
das
and
lea
jle
sub
fstp
lock
inc
outs
je
jns
dec
fs
cld
inc
push
or
mov
cmc
das
(bad)
lods
je
ds
rcr
mov
arpl
inc
mov
jle
cmc
out
push
scas
(bad)
(bad)
outs
jg
or
xchg
ds
(bad)
bound
adc
xchg
pop
sub
cmp
enter
cmp
test
jbe
adc
add
dec
cmp
daa
dec
imul
mov
sub
dec
lods
or
dec
loope
fwait
dec
xchg
fs
dec
mov
cli
dec
xor
and
lods
adc
dec
jno
mov
dec
jmp
movs
mov
(bad)
into
push
jne
sub
dec
das
sub
mov
stos
cmp
mov
xor
test
pop
pop
mov
pop
xor
pop
sub
pop
xchg
mov
stos
cmp
fs
add
ins
shl
jp
imul
pop
push
pmaxsw
mov
in
push
sub
std
pop
out
stc
xchg
daa
fstp
jecxz
or
push
xor
inc
gs
fbld
push
fmul
add
shr
frstor
mov
int3
adc
jp
(bad)
out
adc
sub
imul
xor
mov
push
mov
js
outs
jno
jo
icebp
int
mov
jle
ss
mov
retf
cs
test
fiadd
mov
cmps
mov
clc
pop
adc
js
ftst
scas
mov
pop
dec
out
xor
cld
(bad)
call
xor
in
xchg
out
xchg
dec
mov
dec
imul
(bad)
int3
stc
push
push
xor
push
xchg
into
pushf
xor
mov
gs
sbb
xchg
fbstp
add
jbe
xor
cli
add
or
ds
lock
js
daa
pop
test
sub
scas
and
sbb
jmp
popf
out
rcl
inc
dec
lock
or
inc
sbb
ja
and
pop
push
mov
adc
mov
fcom
xchg
mov
fst
sbb
mov
icebp
movs
icebp
mov
mov
push
and
fld
outs
loope
sub
mov
aad
push
sbb
dec
jmp
or
xor
(bad)
bound
mov
add
addr16
mov
in
mov
repz
mov
daa
sbb
push
in
xchg
push
dec
push
xlat
loopne
inc
(bad)
push
enter
adc
das
fisub
cwde
icebp
xor
sub
cmp
dec
xchg
(bad)
mov
fsub
cmp
in
(bad)
in
fbstp
out
or
movs
or
sub
(bad)
ss
cmc
int3
loope
aaa
dec
ret
ror
cmps
xor
xchg
das
cwde
and
adc
inc
int3
mov
(bad)
xchg
xchg
push
mov
leave
cld
mov
leave
inc
test
(bad)
out
jno
cli
dec
adc
xchg
in
les
daa
pandn
out
dec
cmp
add
xor
adc
jno
das
and
xchg
sti
sub
leave
(bad)
adc
int3
icebp
push
ret
cwde
sub
cmp
add
mov
inc
test
lods
mov
push
loop
fistp
popa
into
sbb
mov
shr
aas
(bad)
daa
sbb
push
fxch
jmp
and
inc
mov
mov
push
sar
pop
sub
push
push
push
retf
nop
loope
xchg
aaa
fld
sbb
fcom
sahf
cmp
xchg
fsub
ret
mov
adc
imul
xor
adc
loop
retf
shr
test
or
pop
lahf
inc
punpcklbw
mov
pop
xchg
cli
add
shl
push
pusha
xor
mov
mov
dec
neg
shl
jg
clc
fbstp
sub
xchg
xor
adc
loope
je
and
leave
repz
jl
adc
sar
gs
sub
scas
push
push
push
push
push
push
ficom
mov
inc
sbb
rcl
jge
and
add
add
cli
push
stc
cs
mov
pop
cmc
cmps
or
in
ret
int
ror
js
adc
in
pop
pop
popa
and
xchg
inc
pop
sub
mov
xlat
pop
jmp
xacquire
jnp
lock
push
pop
dec
ror
dec
out
repz
xchg
mov
addr16
icebp
pop
ret
mov
sub
adc
dec
cmp
mov
inc
xor
inc
and
adc
fld
jb
dec
repnz
hlt
and
mov
repz
jle
and
sbb
pop
fwait
dec
mov
jmp
(bad)
ja
sbb
push
lock
xor
push
push
sbb
and
adc
adc
xchg
repz
cmp
retf
mov
icebp
mov
jg
push
xor
jl
bnd
pushf
sti
sbb
popf
into
nop
(bad)
lds
cli
jno
sti
shl
inc
add
aas
mov
adc
dec
pop
neg
mov
(bad)
(bad)
sar
stos
push
(bad)
pop
mov
ret
xor
je
pushf
sub
pop
push
in
mov
fcomip
outs
jo
jecxz
ss
sti
aad
push
in
into
data16
cli
(bad)
adc
jle
xor
aas
jne
mov
fadd
call
cmc
jecxz
xchg
jae
mov
fcom
mov
add
push
jb
push
call
xchg
cmp
jmp
aam
xchg
mov
dec
(bad)
dec
adc
movs
rol
xchg
sub
pop
ins
mov
add
sub
xor
sub
mov
bound
out
sub
rol
jne
aas
mov
push
fst
aad
xchg
inc
push
mov
out
enter
je
rcr
dec
ins
xor
jnp
repnz
lods
adc
adc
push
xchg
inc
sbb
add
scas
sub
dec
pop
sub
in
(bad)
ins
add
jmp
mov
ret
fwait
(bad)
pusha
sbb
(bad)
ja
fbstp
mov
xor
adc
mov
lods
push
cmc
lea
(bad)
sub
(bad)
xor
pop
sub
cmp
xlat
dec
push
mov
nop
and
cmp
inc
ss
sbb
loope
xor
enter
in
push
neg
movs
in
shr
add
je
arpl
mov
js
inc
lock
cli
mov
push
add
in
jne
add
mov
sbb
xchg
add
xor
das
iret
ficom
stos
pop
mov
pop
add
sub
push
aaa
and
and
shl
and
adc
mov
call
jmp
and
cmp
xor
and
in
pushf
int
or
push
and
aam
sbb
movs
dec
in
pop
outs
int
in
mov
inc
(bad)
lds
(bad)
sbb
ins
dec
mov
in
adc
sbb
sahf
jecxz
fs
and
ror
sbb
sub
mov
dec
add
dec
enter
imul
repnz
sti
and
mov
xchg
movs
outs
xchg
xchg
cmc
or
ins
sbb
cmp
and
jo
shr
ins
aad
pop
dec
ror
sub
dec
xor
div
or
dec
xchg
fmul
mov
xchg
dec
faddp
lahf
enter
lea
xchg
fiadd
xchg
fsubr
clc
add
setl
popa
mov
cmps
push
fld
(bad)
shr
mov
push
push
outs
xchg
pop
dec
and
fcom
or
cwde
scas
or
jg
add
out
push
sub
push
or
mov
daa
(bad)
stc
loope
push
mov
outs
sahf
loopne
pop
pop
inc
loop
cwde
mov
and
sub
lahf
sar
inc
dec
push
cmp
rcl
sbb
in
cmps
popf
pushf
xchg
dec
outs
scas
dec
sbb
scas
cmps
xchg
xchg
daa
jns
lahf
shl
jg
jns
mov
clc
push
outs
lods
pop
sbb
or
push
out
or
or
sub
cli
pop
mov
inc
ret
fild
daa
add
push
pop
or
mov
fcomp
push
jns
test
adc
mov
jmp
cmps
cwde
mov
add
dec
add
mov
sbb
call
cmp
mov
mov
int
lea
jo
mov
scas
mov
inc
dec
arpl
cmp
mov
jp
fdiv
fnstcw
dec
scas
(bad)
adc
sbb
adc
sub
pop
leave
push
sti
xchg
out
pop
imul
xor
adc
adc
inc
jmp
inc
jp
xor
cld
(bad)
cwde
aam
or
jns
movs
out
loop
loop
pop
inc
iret
cwde
retf
sar
mov
call
js
outs
xchg
dec
mov
add
gs
lea
scas
jns
xor
lods
arpl
ret
sti
sbb
hlt
shl
jecxz
loope
enter
jo
addr16
in
enter
mov
popf
fwait
pop
xor
ins
rol
jecxz
adc
scas
test
in
and
sbb
imul
or
xchg
adc
or
(bad)
not
loop
pop
cmp
inc
or
cmps
cmp
pop
push
cmp
dec
out
and
push
inc
push
loopne
mov
out
popa
repz
mov
mov
dec
cmc
mov
fdiv
aam
pop
mov
push
pop
xor
inc
fsubr
mov
pop
retf
and
jecxz
push
dec
pop
mov
add
(bad)
inc
sti
and
movs
xor
outs
inc
popa
das
and
xchg
jo
es
sub
inc
loop
out
adc
adc
ret
ds
pop
neg
jge
aam
mov
push
xchg
out
int3
scas
fisub
push
aam
loopne
adc
pushf
mov
sub
clc
retf
jo
dec
mov
pop
test
or
xor
shl
repz
sbb
adc
lds
cmp
push
mov
add
mov
in
mov
sub
and
(bad)
cmp
int3
cs
mov
sbb
mov
inc
adc
out
add
fisubr
cmps
inc
xchg
pushf
adc
enter
xchg
mov
idiv
or
jmp
sub
aad
or
jle
jb
ret
ins
mov
leave
push
das
mov
ja
fidiv
iret
sbb
cmp
sub
add
test
adc
out
push
std
aam
push
sahf
adc
dec
mov
rol
xchg
fsub
aas
pop
shl
and
xchg
mov
in
ja
xlat
scas
fwait
cmps
lahf
call
xchg
lea
jmp
scas
add
mov
jg
mov
mov
in
imul
sbb
cmp
mov
mov
call
arpl
(bad)
fistp
pusha
push
shl
scas
ror
out
enter
cmp
daa
lods
cmp
xchg
ja
movs
jmp
or
shl
lock
xlat
movs
test
cmp
movs
push
nop
rol
push
scas
add
pop
dec
cmps
push
sahf
rol
cmp
dec
lds
scas
xchg
mov
sar
mov
xchg
bound
mov
ss
inc
das
jne
or
xor
adc
retf
and
js
cmps
add
adc
addr16
adc
xor
dec
jp
push
jae
sub
test
mov
(bad)
fwait
pop
pop
or
pop
mov
or
push
pop
dec
xor
popa
inc
dec
in
push
xor
fsub
inc
cmp
cmps
mov
(bad)
jnp
cmp
daa
ror
mov
sar
iret
push
aaa
fisubr
jns
sub
adc
mov
(bad)
xchg
test
das
mov
imul
inc
xor
pop
(bad)
jns
repnz
and
jge
test
pop
or
mov
dec
loope
test
call
adc
cmps
push
cmps
scas
pusha
fwait
cmps
inc
push
aad
das
mov
jle
data16
xchg
int3
lods
test
cmp
mov
push
mov
jae
sti
or
jne
test
fcom
rcl
add
and
jge
mov
xor
sub
(bad)
cli
sub
sbb
dec
sti
rol
adc
lds
fisub
out
loopne
pop
and
or
jae
in
into
mov
out
outs
and
pop
in
mov
cwde
clc
pusha
push
out
cmps
or
es
inc
lods
out
les
or
hlt
sbb
fsub
cmp
add
ins
out
pop
aam
push
cmp
or
popa
scas
sub
ss
call
push
not
repz
data16
nop
jo
jb
fst
outs
addr16
aaa
test
sub
xor
or
(bad)
fild
arpl
mov
sub
fcomp
mov
inc
lds
add
pusha
push
into
or
add
xchg
loop
movs
push
or
test
mov
test
es
in
sbb
mov
cmps
xchg
outs
test
je
jl
inc
popa
imul
popa
and
dec
dec
dec
pop
dec
test
cmp
push
out
or
sub
scas
adc
fnstsw
xchg
movs
jl
mov
scas
(bad)
imul
aas
or
mov
cmp
mov
sub
add
jbe
les
add
mov
mov
mov
xchg
or
inc
xchg
cmp
repz
push
std
jl
push
cli
adc
adc
mov
sbb
sub
ins
sub
in
inc
mov
cmp
push
sbb
sub
sub
fdivr
fcomp
and
sahf
mov
aad
push
je
push
rcr
mov
cdq
inc
sub
inc
dec
int
cmp
xor
cmps
sub
scas
leave
movs
sub
adc
call
les
cmps
iret
ja
mov
mov
mov
jge
push
pushf
mov
dec
sub
lods
call
dec
stos
mov
jge
outs
jg
cmp
or
ror
(bad)
daa
out
xchg
cld
les
pop
test
pop
pop
lods
lea
mov
(bad)
dec
jo
lds
pop
xor
sub
pushf
pop
adc
lahf
ss
pop
and
and
outs
jmp
call
aam
movs
jp
dec
out
xchg
ds
mov
sub
sbb
dec
mov
xchg
daa
add
stc
pop
inc
cmc
sahf
inc
jae
aas
cmp
lea
mov
int
out
push
cmp
mov
icebp
arpl
xor
cld
push
xlat
addr16
jnp
sub
movs
ret
xchg
cs
pop
nop
outs
xchg
jnp
pop
shl
push
int3
popa
ja
je
jnp
mov
daa
cli
aas
mov
adc
pop
mov
xchg
add
push
mov
mov
mov
inc
adc
xor
hlt
loop
sub
adc
imul
adc
fs
aas
push
scas
inc
out
daa
loope
imul
push
or
js
stos
sbb
out
fwait
call
stc
xchg
or
(bad)
outs
psllw
xchg
cmps
out
dec
push
movs
shl
and
inc
xchg
daa
jg
mov
test
jmp
lds
sub
jo
xchg
xchg
mov
adc
mov
repz
sahf
jl
or
test
imul
jmp
adc
stc
xlat
xor
inc
dec
in
and
outs
pop
in
ins
sti
dec
add
xor
arpl
mov
outs
jg
out
cld
dec
ret
stc
push
push
lock
jns
jmp
xor
mov
add
stc
lahf
sbb
sub
inc
scas
cmps
mov
frstor
pusha
(bad)
jmp
adc
sbb
(bad)
mov
lock
fild
fcom
mov
xchg
jno
outs
sbb
cmp
data16
ja
fs
xor
xor
sub
mov
bound
out
push
aaa
scas
iret
jp
shl
es
or
jl
push
sahf
jae
jb
sub
lahf
pop
push
xchg
dec
shl
dec
jl
out
fisttp
inc
xor
or
xchg
mov
dec
mov
cmp
ja
and
loopne
push
push
sub
lea
sbb
dec
inc
imul
and
inc
adc
push
add
test
jle
inc
mov
sbb
xor
inc
inc
out
call
fsubr
jns
ss
call
dec
lods
enter
movs
jnp
lods
and
mov
pop
cmp
popa
das
xchg
push
and
std
cmc
jae
push
pop
clc
loop
push
or
or
cmp
jb
sbb
stos
imul
arpl
retf
cmp
and
pop
xchg
stos
ds
add
push
push
dec
mov
popf
jbe
sar
mov
push
into
lahf
jno
inc
data16
cmps
xor
outs
mov
in
test
xor
sar
sbb
retf
loopne
mov
stc
jmp
dec
pop
test
scas
add
scas
scas
mov
jmp
bound
push
adc
inc
add
jp
xchg
cmc
pop
iret
adc
dec
mov
in
sbb
jmp
xchg
cmp
mov
mov
movs
enter
or
test
pop
test
dec
sub
arpl
pushf
dec
xchg
jg
xchg
jl
data16
or
inc
xchg
aad
mov
and
aas
je
add
ds
ror
(bad)
jmp
sar
xchg
mov
and
push
(bad)
into
loope
and
rcl
adc
sbb
or
js
loope
pop
out
(bad)
cmp
loop
iret
aad
shr
jl
jae
in
leave
stc
jecxz
jnp
aam
mov
pop
xchg
dec
jle
add
test
adc
xor
(bad)
aaa
xor
pusha
popf
sub
lahf
rol
ja
repnz
pusha
push
xchg
movs
shl
test
mov
mov
ins
sub
push
xchg
push
sub
aad
jno
xor
nop
xlat
cmps
test
mov
iret
cmp
repnz
pop
mov
sti
(bad)
in
push
push
mov
mov
fldenv
repnz
mov
dec
in
xchg
mov
loopne
repz
cmp
or
hlt
dec
push
sbb
imul
lds
popf
inc
les
les
sub
daa
cwde
and
shr
fidiv
in
dec
jmp
push
hlt
pop
bnd
out
jle
aad
mov
stos
int3
jecxz
faddp
mov
mov
add
neg
mov
mov
fs
mov
mov
lea
adc
ficom
pop
xchg
adc
adc
repnz
push
ficomp
mov
mov
cmp
sub
cmp
test
sub
and
mov
cmps
jmp
mov
pop
mov
mov
fist
not
rol
push
inc
jo
sbb
dec
neg
test
xchg
sub
mov
inc
pop
jnp
repz
cs
not
jge
inc
push
xor
adc
push
scas
push
pop
or
push
xchg
outs
(bad)
sub
cmp
fs
hlt
movs
lea
or
das
(bad)
std
xchg
push
jae
xchg
and
cdq
pop
pop
or
sbb
lahf
sbb
mov
vphadduwq
mov
dec
imul
fsub
and
push
call
(bad)
mov
and
cmps
lds
fninit
fwait
icebp
dec
add
ret
xor
xchg
je
xchg
lds
and
scas
ins
retf
jg
dec
repnz
and
(bad)
int3
in
ret
and
call
lea
fwait
jmp
jg
test
mov
xor
dec
xor
aaa
stc
jnp
mov
pop
inc
sub
rcr
jno
dec
data16
hlt
cwde
cdq
imul
sbb
ins
push
sbb
xchg
xor
cmps
div
xchg
sub
sbb
sysenter
idiv
or
or
mov
in
add
mov
std
jae
retf
fstp
adc
and
dec
pusha
sub
add
or
or
add
iret
or
das
loopne
mov
push
nop
push
dec
push
jp
pop
sub
adc
aad
push
mov
in
pusha
mov
pop
(bad)
ja
mov
push
ret
shl
in
mov
push
neg
sub
sbb
xlat
mov
push
fsubr
sti
stos
icebp
fs
and
loop
xchg
(bad)
(bad)
add
push
and
jl
outs
inc
mov
hlt
jg
inc
push
xchg
test
or
dec
or
add
sbb
in
push
push
pop
pop
(bad)
loopne
sbb
fwait
inc
xchg
push
xor
mov
push
jbe
push
mov
add
sub
push
je
mov
xor
nop
push
or
dec
je
jecxz
out
push
cld
sbb
out
add
or
jge
ret
pop
sub
ret
in
jle
mov
add
mov
inc
xor
stos
or
mov
aas
mov
xor
out
jns
jno
or
cld
jge
data16
imul
sub
mov
imul
outs
fidiv
jo
sub
sbb
mov
es
jl
pop
xchg
mov
xor
or
call
(bad)
aas
inc
cwde
jae
cmp
pop
mov
pop
fmul
mov
push
mov
addr16
mov
(bad)
call
data16
sub
(bad)
mov
xchg
cmp
or
xor
fs
add
sbb
inc
push
lds
loopne
test
add
inc
enter
or
movs
adc
out
ds
lahf
dec
pop
es
sbb
jl
jbe
mov
idiv
xor
icebp
push
cmc
mov
jp
mov
xchg
lahf
mov
test
sub
loope
and
and
stos
ficomp
ret
les
cwde
push
and
(bad)
push
jae
test
add
(bad)
jbe
mov
and
scas
es
aam
shr
and
mov
rcr
jo
or
xchg
dec
push
cmp
repnz
adc
in
push
xchg
sbb
sbb
hlt
mov
mov
jle
jbe
adc
test
out
add
lods
ror
push
ja
mov
xchg
add
and
bound
stos
pushf
cmp
jmp
out
(bad)
xor
and
push
sbb
jne
dec
push
es
fcom
fcom
lds
pop
xchg
push
mov
cdq
popf
sub
or
lds
push
sbb
mov
xor
push
xchg
and
cmp
fiadd
push
movs
push
hlt
jmp
jbe
push
lock
and
std
push
lock
int3
push
repnz
daa
xchg
fdivrp
push
sub
mov
dec
jmp
push
jp
lock
lea
inc
imul
mov
loopne
dec
in
out
jmp
jl
movs
retf
das
hlt
cs
call
das
mov
ss
xchg
sub
mov
sub
pushf
fistp
jmp
dec
mov
repz
into
lahf
add
cmps
(bad)
test
adc
inc
inc
out
or
bndstx
sbb
jno
je
das
push
shl
cwde
hlt
and
mov
cmps
sub
cli
pop
fidivr
maskmovq
div
jbe
mov
inc
ret
sub
inc
cmps
sub
loop
retf
out
shr
push
in
bound
or
jb
test
xchg
lods
js
mov
xor
mov
repnz
std
push
int
push
inc
lock
pop
out
xor
mov
dec
jmp
mov
pop
loope
jns
retf
push
xchg
xor
dec
(bad)
fsubr
mov
add
inc
shl
pop
test
jno
cmp
(bad)
xchg
pop
adc
repz
mov
ja
mov
test
inc
jmp
xor
push
xchg
lods
mov
jne
shl
cli
retf
and
pop
sbb
lea
jno
push
push
or
inc
lock
pop
clc
movs
mov
mov
xlat
sbb
xchg
xor
pop
test
mov
in
cmp
dec
adc
xor
fistp
pop
inc
fldenv
imul
and
add
xor
ins
div
pop
adc
test
and
push
sti
out
inc
pusha
out
mov
jmp
add
cld
fsub
sbb
push
mov
fdiv
inc
cmc
outs
jecxz
cmp
jno
cmp
imul
int3
dec
pushf
repz
sahf
sub
lods
fld
call
or
in
cmp
shl
sahf
inc
call
retf
mov
dec
popf
jecxz
jae
adc
fdivr
sahf
dec
cmp
cmp
mov
loope
lods
add
cld
sti
test
and
inc
dec
nop
in
mov
inc
and
or
clc
jmp
mov
in
sub
inc
(bad)
ss
popf
(bad)
ja
adc
jne
fnstenv
pop
out
jmp
into
push
push
adc
(bad)
mov
outs
sti
addr16
xchg
dec
pop
mov
add
ja
or
xchg
aam
addr16
dec
pop
sbb
push
loop
mov
xchg
sbb
data16
repnz
dec
imul
fs
lea
mov
iret
aas
dec
add
aas
and
xor
push
cmps
fbstp
mov
and
mov
sub
call
mov
sar
cmp
pop
pop
retf
jp
or
das
aam
xor
push
or
jmp
dec
cmp
(bad)
adc
out
imul
mov
jne
jno
xor
pop
pusha
stos
retf
scas
enter
ret
hlt
xor
data16
and
sbb
mov
sub
out
cdq
inc
jp
inc
fisubr
adc
push
movs
ret
(bad)
mov
cdq
xchg
push
sti
adc
fnstcw
ds
inc
sar
sub
mov
mov
push
pop
and
repnz
(bad)
dec
jg
and
ins
ss
mov
(bad)
out
cmc
jne
xor
and
es
gs
je
add
movs
push
mov
mov
stc
cdq
pop
jl
or
add
test
es
icebp
ficomp
stc
ja
jbe
arpl
mov
adc
inc
repz
pop
adc
jbe
cwde
dec
jg
cmp
jmp
cmps
jle
movs
add
mov
push
push
push
aad
mov
cdq
(bad)
call
dec
call
inc
add
add
js
es
cmp
bound
mov
push
retf
and
sub
or
es
xor
icebp
pop
addr16
iret
inc
xor
push
lods
mov
into
pop
loop
(bad)
mov
leave
or
cmp
jns
or
mov
pusha
xchg
push
sbb
cli
jno
sub
mov
and
aam
or
lods
sub
loopne
cmp
cdq
xchg
in
inc
mov
xchg
lahf
cld
add
(bad)
clc
xor
inc
popf
push
jg
rol
adc
repnz
arpl
dec
sub
aad
xchg
ins
jle
push
loope
loopne
adc
mov
rcr
push
add
or
xor
pop
into
cmc
pop
icebp
stos
pop
cwde
in
mov
jmp
das
shr
test
ds
mov
inc
adc
xor
rol
sub
xor
pop
inc
ficomp
jnp
not
(bad)
xchg
or
pop
pop
mov
mov
test
loop
xor
out
cmp
imul
fldcw
add
sbb
pop
pusha
test
jne
mov
jne
sbb
das
push
aaa
or
sub
je
add
into
lock
call
mov
aaa
dec
jns
fnstsw
mov
mov
xor
(bad)
stos
jecxz
jmp
mov
test
push
(bad)
imul
int3
inc
xlat
and
push
mov
int3
add
lds
aam
ror
jg
outs
out
mov
call
mov
dec
mov
cdq
stos
sar
mov
test
jb
add
stos
cmp
pushf
(bad)
in
mov
xchg
loop
push
outs
mov
xlat
mov
jl
sahf
xor
mov
push
inc
jb
cmp
push
leave
pusha
push
out
movs
xchg
mov
int3
inc
mov
ss
data16
cmp
aas
add
frstor
mov
mov
js
pop
(bad)
loopne
sbb
imul
loop
and
ficom
push
cmps
xchg
es
sub
sub
les
sbb
(bad)
xor
push
or
ss
imul
mov
sub
in
icebp
in
std
mov
fst
mov
mov
push
ins
inc
jmp
loope
add
xor
out
add
aam
add
cs
daa
mov
add
int3
or
fsub
dec
mov
mov
cmp
arpl
and
cmp
pop
(bad)
retf
enter
inc
push
dec
dec
(bad)
sub
mov
dec
sub
cmc
sti
movs
fdiv
xchg
push
mov
mov
inc
in
idiv
dec
pop
test
es
(bad)
(bad)
(bad)
push
or
or
xlat
mov
outs
add
inc
scas
or
pop
cli
mov
jae
sbb
mov
mov
jb
mov
pop
mov
xchg
xchg
cmp
xor
jmp
(bad)
je
add
mul
scas
mov
sbb
sub
repnz
scas
jnp
adc
pushf
ins
pop
movs
in
pusha
in
dec
fldcw
xchg
int
push
cmp
xchg
data16
sti
pop
loop
gs
cmc
bound
ret
xchg
adc
loope
fstp
adc
inc
pop
push
inc
mov
adc
test
push
push
cli
inc
dec
sbb
loope
jl
jmp
lods
jns
push
call
ss
lahf
mul
jle
cwde
shl
fcmove
xor
jmp
sbb
bound
inc
xor
and
sub
fs
fnstsw
mov
add
xor
out
dec
ret
test
sti
push
and
push
inc
push
adc
push
xchg
adc
fs
push
adc
fs
push
out
js
fcomp
test
lahf
(bad)
call
jge
mov
cdq
out
dec
cmps
(bad)
pop
pop
les
mov
sbb
inc
adc
repnz
jo
push
hlt
addr16
or
mov
xor
imul
cwde
ins
mov
xchg
ins
mov
push
jge
cs
pop
in
sbb
popf
push
push
xchg
mov
mov
mov
xchg
mov
mov
ins
fdivr
adc
inc
neg
test
xor
lods
dec
stos
mov
mov
jbe
dec
adc
add
xor
dec
jae
and
scas
pop
scas
fadd
stc
das
test
into
hlt
adc
add
lea
loop
mov
mov
push
jg
inc
dec
stos
ja
movs
iret
and
cmps
in
mov
or
push
adc
jg
push
push
sahf
adc
mov
sub
int
fsub
mov
jb
popf
arpl
nop
and
out
adc
mov
int
bound
ret
push
add
pushfw
xchg
loope
mov
jne
fbstp
cmp
in
xor
addr16
mov
mov
xchg
hlt
lods
int3
arpl
adc
jmp
and
fnstsw
mov
ss
sub
icebp
sub
stos
sbb
sub
out
inc
pop
into
jle
idiv
mov
dec
popf
not
mov
sbb
dec
arpl
stc
xchg
mov
pop
push
xor
mov
je
mov
cmp
in
sahf
cmc
cwde
sub
adc
mov
(bad)
jo
xchg
out
scas
mov
jecxz
inc
sub
stos
or
mov
or
rcr
pop
retf
mov
jl
int3
arpl
rcr
xchg
fnstcw
into
int
jl
fidiv
mov
ds
jno
cmp
mov
mov
(bad)
push
mov
sbb
or
cli
push
movs
add
jl
out
inc
mov
adc
sbb
enter
or
ja
clc
ja
dec
loope
outs
aam
inc
movs
adc
(bad)
jp
xchg
(bad)
push
hlt
pop
xor
cli
icebp
pop
in
push
or
sbb
fadd
pop
ins
fnstcw
jo
pop
cld
mov
fstp
push
cld
dec
outs
adc
div
aaa
cli
xchg
jae
pop
cs
pop
push
(bad)
ja
or
pushf
inc
push
or
out
(bad)
std
xor
or
clc
push
out
popa
neg
mov
xchg
mov
retf
call
and
jecxz
or
or
rol
stos
mov
bound
(bad)
mov
es
test
lea
adc
add
cmp
pop
out
call
jns
mov
and
mov
push
mov
mov
fst
call
repz
test
loop
sub
fsubrp
loop
mov
shr
push
ins
mov
pop
(bad)
cmp
dec
sbb
ins
sbb
jns
(bad)
in
cwde
or
inc
sub
xor
lahf
adc
push
mov
xchg
fcmove
inc
int3
shr
jmp
test
jne
sub
sbb
jns
push
icebp
sahf
out
pushf
cmp
sbb
fidivr
out
int
xor
cmp
dec
or
jo
jbe
jns
inc
push
mov
jnp
push
push
mov
inc
sub
or
cmp
sub
jg
nop
ja
cdq
xchg
arpl
mov
xchg
(bad)
dec
fiadd
dec
push
bndldx
cs
dec
popf
scas
ja
dec
loope
jp
not
push
cmp
ss
sub
cmp
dec
mov
aas
movs
pop
shl
cmc
pop
int3
cmc
mov
data16
loopne
vpsrld
clc
ror
adc
mov
add
push
mov
and
xchg
call
arpl
jns
mov
push
stos
cmc
sub
test
pop
lods
mov
xor
outs
add
lds
xor
ins
jb
lods
sbb
dec
nop
(bad)
mov
out
scas
std
shl
mov
sbb
mov
scas
xor
imul
mov
aad
xchg
ret
dec
mov
test
xor
mov
aad
into
jecxz
dec
scas
das
mov
pushf
in
lods
adc
bound
push
cdq
push
test
fsubr
dec
xor
jg
adc
aas
dec
dec
pop
dec
lods
scas
add
inc
mov
out
test
inc
dec
les
bnd
enter
in
xchg
in
xor
jg
mov
dec
retf
mov
dec
enter
test
cmp
cmp
mov
jl
or
cmp
add
sub
fs
push
ja
mov
leave
mov
jmp
inc
sti
add
stos
adc
mov
add
retf
ret
jle
dec
inc
pop
jae
inc
(bad)
das
cmp
stc
out
jmp
repnz
repz
sti
push
mov
adc
jbe
and
mov
push
outs
jne
xor
mov
mov
inc
mov
add
movs
mov
clc
fild
mov
cmp
dec
addr16
mov
mov
ret
ret
mov
xchg
or
scas
outs
(bad)
rcl
shl
jo
cdq
dec
xchg
sub
retf
hlt
mov
sbb
sub
jecxz
xchg
aad
sub
(bad)
icebp
jno
xchg
jns
add
adc
scas
mov
das
xor
or
js
or
mov
jl
outs
ja
into
out
xchg
dec
data16
(bad)
sub
imul
cmp
enter
fsub
in
fucomp
pop
jb
gs
mov
test
jbe
mov
cmp
xor
sub
push
sbb
repnz
pop
dec
data16
fcmovbe
sar
ins
mov
xor
xor
test
addr16
dec
jle
mov
or
inc
pop
test
mov
call
in
jmp
fld
push
inc
je
sub
scas
(bad)
mov
cmps
jg
sbb
jecxz
fild
mov
and
mov
fiadd
(bad)
sbb
mov
ret
adc
xchg
push
push
and
sbb
jne
aad
test
sahf
bound
sar
ins
int
jo
jns
cmp
out
xor
ds
cmp
dec
lods
les
scas
add
es
test
jecxz
mov
into
arpl
adc
rcl
repnz
inc
xchg
jp
cmc
xchg
cdq
gs
mov
or
repz
dec
mov
dec
test
cmp
mov
int3
push
(bad)
int3
and
loopne
xor
xchg
jp
pushf
fwait
jae
mov
test
fild
jg
inc
sbb
nop
rcl
scas
push
xor
fmul
popa
ja
mov
ja
retf
ret
mov
ds
enter
or
mov
xchg
xchg
repz
retf
xor
(bad)
fsubr
jne
fsub
push
add
pushf
xchg
and
jmp
xor
sbb
hlt
add
je
push
rdpmc
icebp
pop
and
push
jno
dec
gs
mov
sbb
push
pop
leave
push
je
dec
call
jg
push
pop
aaa
popa
cmp
std
pusha
sahf
jp
aam
loop
pop
ins
push
xchg
jle
rol
jbe
in
aam
and
scas
repz
sub
mov
lock
push
fwait
scas
aas
aas
lods
or
into
lea
enter
ret
add
pushf
rol
hlt
dec
pop
cmp
inc
clc
out
mov
xlat
mov
ret
inc
scas
in
mov
imul
inc
push
leave
push
adc
ins
and
and
adc
mov
dec
dec
aaa
cmp
int
jno
add
jns
and
sbb
jns
cmp
int3
xchg
push
ins
scas
stos
iret
rcr
adc
ja
fdivp
das
cwde
inc
mov
push
and
lock
addr16
clc
mov
dec
cmp
jl
adc
cmps
adc
add
and
or
mov
push
mov
mov
cli
jbe
stos
mov
push
or
cmps
inc
pop
push
lods
imul
xchg
call
xchg
enter
mov
jno
retf
add
or
cdq
cmp
sub
gs
mov
cwde
cdq
xchg
jbe
push
mov
mov
pop
adc
cmp
int
and
mov
(bad)
(bad)
je
dec
jno
or
cmps
mov
xor
push
pop
add
pop
fstp
not
cmp
adc
adc
rcl
fsubr
sbb
mov
pop
jae
mov
popf
fsubr
ins
in
xor
sbb
lock
xor
pop
jmp
not
lock
push
dec
aas
repnz
sbb
add
mov
int3
push
aad
xchg
jp
jns
mov
push
mov
jae
xor
mov
sub
or
or
pusha
stc
mov
(bad)
jg
out
jns
(bad)
cmc
(bad)
cmp
lock
loopne
pop
lock
cwde
pop
clc
scas
mov
lock
aad
mov
iret
icebp
adc
ret
dec
mov
aas
xchg
retf
mov
cmps
jp
mov
push
ins
cli
leave
cmp
mov
cmp
test
push
mov
sub
inc
sbb
(bad)
es
(bad)
and
es
push
push
xchg
adc
dec
stos
and
cli
gs
into
sub
pop
repz
jle
sbb
pop
sub
jae
outs
mov
push
inc
in
cmova
daa
mov
jg
clc
scas
xor
xor
mov
(bad)
sar
cld
fsubr
rcl
dec
cmp
dec
xlat
dec
add
shl
jp
adc
and
sub
or
cmp
push
movs
arpl
jmp
imul
mov
jno
imul
adc
sub
ficomp
push
inc
jb
push
(bad)
outs
push
and
sbb
adc
push
movs
pop
jbe
jle
lods
or
es
push
sub
icebp
mov
aaa
aam
ficom
xlat
add
test
rep
push
add
push
add
mov
push
cmp
pop
push
sbb
out
mov
inc
adc
xchg
or
jne
or
repz
cmp
xor
push
jl
xchg
jbe
dec
test
enter
(bad)
mov
lahf
lods
call
xor
idiv
add
jecxz
jmp
sbb
jle
je
and
add
nop
mov
xor
cmp
adc
fadd
sbb
or
das
sahf
add
add
scas
call
ret
ds
mov
mov
push
out
xchg
xlat
inc
lock
xor
in
arpl
ja
mov
push
sub
cli
enter
test
mov
adc
fcomp
lahf
out
cmp
movs
inc
push
out
(bad)
pop
mov
fucomp
cli
mov
retf
addr16
in
jecxz
or
pop
cmp
jno
cmp
retf
call
loope
xchg
adc
ret
dec
push
test
ja
addr16
mov
repz
pop
ins
aas
int3
cmp
sub
xchg
fisttp
jge
xchg
inc
sbb
xchg
inc
js
mov
repnz
mov
sbb
jno
sbb
sbb
cmp
pop
fisubr
cmp
xchg
cmp
push
sahf
(bad)
out
xchg
not
pop
adc
add
cmc
das
cmp
imul
mov
cmps
cmps
push
add
mov
outs
xchg
icebp
add
mov
in
lahf
ins
bound
dec
push
and
mov
or
aam
xor
jo
or
lods
cwde
and
push
mov
jbe
out
pushf
js
add
hlt
fcmove
mov
pop
adc
cmova
xor
pusha
jns
test
xchg
neg
mov
jbe
push
xchg
shl
xor
mov
add
test
or
inc
cmps
push
add
adc
mul
bound
arpl
mov
aad
mov
shl
dec
mov
in
jle
enter
pop
(bad)
test
ret
add
cmp
pop
adc
xor
mov
jle
xchg
push
push
icebp
inc
out
div
add
fadd
mov
repnz
fiadd
add
mov
jno
cmc
test
imul
jbe
dec
clc
scas
xor
lock
out
inc
and
mov
(bad)
sub
mov
xlat
mov
inc
jl
inc
inc
jae
scas
inc
mov
mov
sbb
dec
ret
jb
and
jno
test
and
ss
fabs
loop
fimul
in
jmp
les
(bad)
lock
js
xor
popf
push
push
or
push
inc
add
add
call
mov
push
(bad)
or
mov
add
push
aad
push
cmp
mov
and
jmp
dec
inc
fild
aas
and
dec
mov
pop
in
xor
inc
cld
fild
in
and
stos
popf
adc
call
cmp
ins
jns
push
dec
or
xchg
or
or
sbb
and
push
add
or
add
call
lds
mov
sbb
jb
adc
push
call
push
fsubp
mov
imul
sub
xchg
xchg
div
test
mov
xchg
mov
aaa
xlat
add
add
retf
jne
adc
icebp
mov
fbstp
jo
jp
mov
cmps
mov
adc
dec
sbb
ror
test
ret
(bad)
rcl
mov
inc
add
xlat
fidivr
xchg
mov
dec
js
xor
lds
jno
dec
add
popa
or
dec
mov
out
jne
fstp
ins
test
mov
push
imul
rcr
in
dec
jno
pop
mov
bound
std
sbb
(bad)
(bad)
aad
xor
jge
loop
icebp
dec
inc
gs
movs
push
pop
mov
std
loop
pop
lods
dec
in
add
in
mov
pop
pop
ret
fnstsw
jne
stos
out
icebp
out
adc
jmp
shl
mov
add
and
pop
daa
jae
mov
clc
idiv
xchg
jp
mov
jmp
or
cmp
xchg
retf
mov
adc
inc
test
iret
ja
mov
aam
fucomp
std
outs
ret
stos
mov
add
cmp
rol
jmp
loopne
or
push
add
jmp
mov
addr16
(bad)
cmp
hlt
push
adc
adc
int3
cmp
outs
jne
jmp
push
je
test
pop
mov
cmp
cmp
mov
and
and
aad
pop
fmul
inc
xchg
iret
(bad)
mov
aas
xchg
sbb
push
pop
and
lods
lea
xchg
add
mov
movs
and
enter
std
mov
jns
jg
frstor
shl
pop
test
adc
ret
sbb
(bad)
aaa
pop
mov
lock
inc
sahf
movs
lods
in
shl
jmp
fsubr
data16
in
outs
shl
sub
cmps
jmp
or
fisttp
lea
dec
xlat
xchg
inc
jo
xchg
xchg
shl
aam
dec
retf
fcomp
movs
ss
inc
cwde
repnz
lds
push
jno
imul
outs
fistp
ror
adc
aas
xor
cwde
rep
mov
std
cmp
mov
std
push
inc
mov
mov
cs
xor
adc
dec
mov
mov
stos
xor
outs
xor
xchg
mov
bnd
leave
mov
push
aaa
das
inc
sub
xchg
or
jb
int3
jg
push
inc
or
test
(bad)
pop
cwde
mov
fisub
or
and
push
inc
push
mov
lock
jae
(bad)
mov
call
fs
pop
sar
int3
push
add
jno
mov
sub
xchg
test
lds
mov
jmp
fstp
pop
add
jmp
pop
sub
dec
xor
add
aam
and
imul
xchg
enter
xchg
add
stos
shr
mov
mov
into
pop
push
pop
fmul
enter
pop
lahf
xor
cs
sub
mov
ror
je
jae
inc
(bad)
jl
aaa
imul
clc
cmp
sub
sub
xchg
or
cli
push
aad
and
shr
pop
jae
nop
cwde
add
gs
sub
xchg
push
imul
cmp
test
stc
or
enter
das
and
daa
cmp
das
push
into
in
and
pop
mov
xor
cmp
mov
(bad)
xchg
mov
push
adc
xlat
xor
test
idiv
lods
pop
sub
pop
jne
fsubr
adc
cmps
fist
cld
sub
dec
cmp
mov
test
pop
nop
out
push
add
and
div
test
fisub
sub
stos
xchg
lock
add
pusha
and
(bad)
mov
clc
into
or
mov
pmulhuw
mov
movs
push
and
adc
cmc
inc
out
loope
pop
jge
arpl
daa
iret
call
cmps
hlt
push
push
daa
les
or
std
sub
push
adc
adc
dec
inc
sub
idiv
sti
xor
and
mov
(bad)
adc
fstp
sti
dec
cld
les
in
movzx
cmpxchg
sti
mul
xor
and
lahf
arpl
out
aam
push
pushf
mov
jl
cmp
dec
(bad)
test
daa
repnz
out
mov
sbb
sbb
add
aaa
(bad)
je
sub
jb
inc
and
mov
and
int3
or
push
pop
dec
pushf
repz
inc
inc
retf
mov
add
mov
jle
nop
jl
push
aad
push
les
push
mov
push
call
mov
add
aaa
hlt
adc
aaa
sub
fistp
fbld
jecxz
mov
ret
pop
mov
inc
add
push
xchg
fs
dec
in
ja
es
jmp
adc
stc
xor
jns
neg
inc
or
(bad)
stos
push
dec
or
outs
dec
push
adc
mov
dec
aam
cmp
cmp
add
fldcw
ja
and
jno
movs
xchg
out
xchg
lods
push
jnp
pushf
mov
out
ins
cdq
jge
or
scas
xor
or
fs
dec
out
data16
adc
je
mov
dec
shr
mov
fnstenv
and
test
mov
pop
fisubr
ja
das
outs
xlat
in
cmps
out
ret
xlat
aad
sub
das
cmp
mov
mov
call
jp
bound
fs
inc
mov
into
mov
sub
sub
mov
aam
mov
stos
lds
and
fidiv
addr16
inc
cmps
in
enter
mov
jno
lea
dec
sub
sub
aas
mov
jmp
ins
pop
iret
jmp
push
out
cmp
push
xchg
jecxz
fdivr
jg
push
dec
fisttp
sub
add
into
xchg
shl
call
add
pop
mov
xchg
lods
sub
test
mov
xchg
aaa
and
cmp
jp
adc
pop
jo
sub
mov
cmps
jo
es
push
or
add
mov
pop
enter
scas
stos
dec
mov
(bad)
inc
es
add
or
test
push
mov
cmp
cmps
pop
lea
sbb
lods
out
cdq
xchg
or
int3
cli
jle
jle
scas
(bad)
mov
xor
loop
jo
xchg
add
aas
pushf
leavew
lahf
fs
mov
mov
fisttp
sar
(bad)
loopne
push
vpaddsw
(bad)
or
mov
loope
fist
jnp
mov
fwait
loop
xor
and
xchg
mov
mov
mov
imul
jecxz
adc
scas
gs
mov
fadd
jnp
int3
pushf
and
fucomp
push
aad
mov
(bad)
cmc
shr
pop
int3
jl
push
jae
daa
push
push
out
aad
pusha
sub
mov
cmp
fsubr
lock
dec
adc
jge
pop
lahf
jns
test
sub
jno
dec
scas
xchg
inc
mov
adc
mov
rcl
jmp
aam
nop
fstp
xor
rcl
cli
test
mov
sbb
mov
test
xchg
daa
pusha
sub
inc
dec
mov
fld
mov
jg
sbb
stos
retf
movs
jle
sub
clc
lock
mov
(bad)
hlt
test
adc
clc
fldcw
sub
dec
mov
push
mov
inc
call
fist
retf
scas
cs
adc
mov
jg
es
and
inc
push
gs
push
xchg
ror
scas
or
adc
push
xor
idiv
mov
jnp
leave
sub
inc
pop
aaa
sub
xor
loopne
or
bound
cs
cmc
xchg
lods
xchg
pop
cld
jle
cmp
test
mov
push
jmp
nop
mov
push
ja
std
std
imul
test
adc
dec
push
xor
shl
adc
push
lods
sbb
adc
cmp
fisub
sub
fadd
jg
mov
sbb
pop
add
cmp
mov
jl
pop
leave
sbb
aad
clc
sbb
mov
(bad)
pop
(bad)
gs
or
iret
dec
mov
(bad)
fmul
cwde
pop
mov
(bad)
sbb
xor
(bad)
adc
retf
lock
aam
test
inc
test
mov
leave
call
dec
jo
jmp
addr16
pusha
enter
in
cmp
pop
or
and
test
ret
xchg
adc
push
addr16
popf
loop
sbb
call
or
fld
fbstp
add
and
or
sti
sti
mov
jg
inc
enter
cmp
sti
cmc
pop
cdq
out
sar
cmp
or
dec
lea
cmps
mov
cli
stos
push
push
cmp
adc
or
ds
push
add
sub
jl
(bad)
cmps
call
and
and
push
adc
jecxz
pusha
add
ds
jle
mov
rol
xchg
stos
sub
or
into
faddp
pushf
ret
imul
scas
xor
jmp
std
push
adc
jge
rol
int
scas
mov
test
jle
ins
mov
jmp
xor
loope
sahf
xor
mov
fs
pop
xor
pop
push
mul
inc
mov
int
and
mov
sahf
xor
mov
adc
call
std
out
scas
scas
hlt
sbb
sbb
xchg
ja
scas
popa
jmp
mov
lock
je
and
(bad)
in
or
push
adc
not
outs
xchg
out
jmp
das
and
fnstenv
das
inc
iret
inc
xchg
adc
add
cmps
cmp
inc
inc
cs
mov
cdq
pusha
repz
xchg
inc
push
mov
xlat
icebp
mov
adc
pop
mov
pop
jb
(bad)
push
test
xchg
xchg
mov
lods
dec
mov
cmps
inc
lahf
jbe
std
add
test
xchg
mov
mov
(bad)
in
and
(bad)
neg
dec
movs
xor
and
push
sbb
test
test
add
mov
sar
jnp
adc
cmp
test
pop
inc
or
adc
not
fist
test
not
in
or
lods
or
xchg
mov
int3
pop
ret
mov
pop
pop
in
mov
push
int
(bad)
push
stos
ror
mov
les
mov
push
pusha
add
mov
in
das
lods
dec
pop
mov
mov
sub
shl
test
inc
inc
mov
mov
mov
pushf
sbb
dec
or
enter
dec
sub
or
or
mov
mov
jle
xchg
dec
sub
clc
outs
sub
fidivr
dec
sub
mov
and
ins
inc
das
sbb
and
xchg
cmps
mov
pop
xor
pop
add
pusha
(bad)
mov
sub
cmp
mov
mov
dec
dec
pop
sti
mov
sahf
jmp
loopne
sub
push
adc
(bad)
out
movs
or
dec
mov
jmp
ins
scas
and
clc
data16
fidiv
fnstcw
xchg
ins
out
pop
leave
(bad)
imul
jp
fs
pop
call
adc
(bad)
cmp
std
add
lods
test
sar
repnz
xchg
push
ja
shr
add
call
repnz
scas
clc
out
mov
fnstcw
lock
and
cmp
and
and
push
push
mov
sbb
mov
jp
jge
pop
jmp
add
imul
inc
sbb
adc
mov
lea
leave
or
jae
js
int
jg
dec
push
mov
mov
jle
xor
imul
mov
scas
nop
test
and
lahf
dec
inc
jno
jb
icebp
inc
sbb
dec
mov
mov
mov
outs
mov
mov
push
mov
jnp
fld
jmp
inc
data16
inc
adc
(bad)
lahf
retf
out
mov
mov
fstp
bound
pusha
mov
sti
bnd
pop
xor
or
retf
fldenv
pop
mov
xor
out
addr16
(bad)
jle
push
ret
jge
add
aad
or
sbb
lea
lock
inc
sub
std
xor
ja
cmp
adc
fisttp
mov
sbb
add
out
add
call
sahf
popa
dec
movs
mov
lds
lahf
xor
repz
fldenv
add
sub
ds
jb
cmp
dec
in
aaa
jo
push
loopne
and
pop
popa
and
sub
in
cmps
ret
das
je
arpl
ja
xor
jmp
test
outs
push
mov
push
xlat
imul
in
mov
push
stos
cli
and
popf
daa
aaa
loop
dec
sub
and
inc
enter
add
ja
clc
lock
add
xchg
imul
sub
jns
add
mov
jge
call
shr
or
inc
imul
ins
fwait
xchg
adc
addr16
sub
into
or
outs
push
call
pop
dec
stos
mov
mov
push
and
push
xchg
in
xchg
inc
rol
pusha
xor
lods
sub
jbe
lds
sub
js
rcl
cmps
retf
mov
shl
aam
add
mov
imul
cmp
loopne
lods
fwait
sub
pop
sub
lds
xchg
out
lock
mov
dec
add
sub
or
jb
(bad)
aas
es
sbb
push
sub
call
xchg
inc
xchg
xchg
mov
inc
dec
add
clc
xor
dec
pop
stos
dec
xor
adc
mov
lea
lea
push
(bad)
sar
sub
xchg
xchg
xchg
cmc
mov
xchg
les
fsubrp
iret
mov
faddp
bound
popf
cmps
aam
in
mov
xchg
cwde
push
mov
mov
add
mov
xor
cmc
cli
cmps
bound
fisubr
stc
stos
mov
out
in
and
add
rcr
push
push
pop
pop
arpl
(bad)
arpl
cmp
ret
fwait
inc
jmp
aad
std
inc
xchg
(bad)
jle
shr
(bad)
or
inc
lock
test
ret
inc
push
outs
add
mov
daa
mov
cmp
ret
push
add
add
inc
out
or
shl
sbb
xor
sbb
cdq
dec
shl
cmc
add
pushf
pop
ss
cld
or
sub
in
fsub
or
retf
xchg
mov
icebp
xchg
jg
and
mov
ins
lds
cld
cmc
mov
add
(bad)
fcmove
js
or
popf
das
jo
cmp
adc
std
in
mov
iret
fadd
enter
xchg
mov
in
hlt
fsub
mov
in
push
add
shl
add
or
scas
inc
pop
mov
cmp
adc
xor
sti
mov
unpcklps
lea
cli
jp
xchg
nop
xor
jmp
push
inc
or
loopne
retf
shl
cdq
add
mov
(bad)
das
in
mov
push
daa
hlt
add
shl
popa
xor
sbb
(bad)
pop
movs
xchg
(bad)
and
loope
repz
movs
inc
aad
cwde
icebp
pop
xchg
clc
and
xchg
sbb
adc
mov
sub
ret
out
mov
into
fisub
mov
cmps
(bad)
xor
aam
(bad)
cmp
add
ins
popf
jae
sbb
mov
push
sti
cmp
ror
xor
mov
jns
cld
pop
and
stos
pop
test
inc
dec
mov
xor
dec
xchg
jno
push
mov
pop
mov
or
mov
xchg
in
jge
adc
mov
data16
cmp
retf
sar
sbb
retf
cmp
push
das
pop
mov
push
or
xchg
add
shl
cmp
movs
daa
fwait
call
aaa
xchg
sbb
in
xchg
retf
fnsave
mov
test
inc
xor
pusha
cdq
jp
or
mov
push
or
cmp
outs
das
mov
cmp
neg
mov
lods
mov
jmp
into
xchg
mov
cmp
push
mov
retf
mov
cmps
les
jl
mov
dec
test
jo
sti
lea
std
or
dec
mov
add
out
nop
je
adc
xchg
lahf
or
aas
loopne
arpl
xchg
aam
out
inc
xor
out
arpl
jno
or
nop
repnz
jno
jno
mov
ins
jnp
enter
popf
mov
push
mov
iret
xchg
inc
xchg
xor
push
mov
shl
int3
ins
sar
mov
in
scas
mov
mov
dec
push
addr16
xchg
and
add
mov
shl
push
jnp
cmps
ret
test
fiadd
fld
scas
mov
inc
mov
loop
repnz
mov
cmp
jmp
cmc
lahf
jae
mov
aaa
ret
cwde
ss
mov
fmul
jmp
push
xor
retf
mov
movs
cmps
fist
in
inc
and
ins
adc
jmp
je
sbb
xchg
stos
xchg
or
inc
jne
xchg
repnz
add
adc
cmps
popa
stc
mov
jbe
xor
(bad)
fyl2x
daa
inc
cmp
mov
sub
pop
outs
mov
mov
das
lar
out
xor
or
jmp
mov
imul
imul
mov
fs
call
mov
jmp
cmp
out
out
mov
clc
adc
mov
cmp
mov
lods
mov
imul
clc
gs
nop
pop
enter
int
fwait
loope
mov
inc
repz
pop
or
mov
mov
adc
test
aam
gs
rol
mov
in
ss
les
jl
mov
aam
mov
mov
push
inc
dec
mov
aaa
and
xor
push
sub
add
ins
add
fldenv
push
or
das
test
xchg
pop
mov
idiv
aas
and
(bad)
jge
cli
mov
hlt
dec
dec
mov
pop
mov
mov
jge
pop
adc
lds
je
inc
shl
xchg
in
push
pop
mov
pop
sti
fwait
in
out
(bad)
aad
test
push
mov
scas
add
or
sbb
add
lds
retf
test
cmps
iret
mov
cmps
mov
shl
adc
stos
jno
jmp
mov
pusha
pop
add
cs
ja
frstor
not
out
outs
jae
sbb
aad
sbb
dec
mov
retf
in
(bad)
push
in
pop
push
mov
out
outs
inc
(bad)
jecxz
dec
(bad)
std
outs
ret
lock
dec
loop
and
fcomp
test
xor
ins
out
scas
and
push
mov
hlt
push
pop
icebp
es
sbb
mov
popa
mov
xchg
je
cmp
xchg
aam
imul
adc
sbb
pop
jle
mov
pop
adc
dec
xor
nop
inc
cmp
mov
std
sub
inc
not
dec
cdq
jmp
daa
aad
test
xor
lods
dec
mov
test
sbb
sbb
mov
and
(bad)
push
jae
or
mov
ret
mov
rcl
jne
sub
cli
push
in
xchg
pop
test
push
mov
mov
ins
dec
inc
push
arpl
scas
push
and
sar
xor
push
mov
fsub
stc
mov
push
movs
sub
fidiv
jns
cmc
(bad)
ds
fcomp
jmp
les
shl
adc
jnp
push
jno
pop
pop
sbb
inc
push
(bad)
push
scas
sbb
push
and
inc
mov
and
repz
jmp
adc
dec
mov
mov
int
cmp
call
shl
ret
inc
lea
mov
xchg
sub
js
sbb
call
sub
cmp
movs
sbb
out
daa
xchg
mov
dec
adc
shr
inc
stc
bound
add
(bad)
jae
cwde
hlt
les
ss
retf
stos
verw
sbb
repz
les
dec
jecxz
sti
jnp
add
loop
or
jle
shl
adc
pop
mov
mov
or
in
push
jmp
sbb
or
int3
xor
xor
nop
push
shl
fwait
in
movs
loopne
mov
mov
adc
mov
test
mov
jmp
clc
push
jmp
neg
add
movs
pop
xor
pusha
push
out
adc
out
jg
push
icebp
mov
adc
scas
adc
test
dec
xchg
int3
cld
in
push
xor
loop
fisttp
out
in
test
mov
cmps
inc
ds
pop
out
xor
(bad)
loopne
ja
int
cmp
(bad)
addr16
lock
in
dec
push
cmps
bound
adc
lahf
leave
jge
jb
scas
inc
push
lods
cmps
dec
jl
movs
dec
xchg
into
xchg
dec
inc
jbe
pop
sub
cmp
pop
arpl
sbb
lods
pop
cdq
jmp
ret
ja
mov
pop
mov
xchg
js
jge
pushf
aad
xchg
cmp
pop
pusha
jmp
jo
xor
mov
lods
pushf
lock
and
push
ins
adc
(bad)
std
lods
xchg
in
neg
xchg
mov
das
pop
sbb
or
pop
jno
mov
mov
mov
inc
sbb
xchg
dec
mov
pop
imul
shl
retf
ja
or
adc
inc
pop
pop
cs
push
retf
imul
fs
push
shl
jmp
jecxz
fiadd
sub
stos
pop
mov
or
test
jns
xlat
jns
push
mov
aaa
inc
pop
jl
inc
push
cmp
jl
mov
sbb
scas
cmps
xor
loope
pop
imul
or
mov
shl
les
mov
jns
jmp
adc
outs
xchg
invd
pusha
pop
outs
das
fwait
pop
or
cmp
mov
cwde
shr
enter
jae
fild
jno
out
loop
pop
mov
sbb
sub
mov
cmp
outs
pop
mov
les
push
xchg
push
cmp
movs
call
loopne
cmp
shr
lds
(bad)
outs
adc
pop
ficomp
jbe
les
call
sbb
and
inc
sbb
rcr
sub
sbb
icebp
jmp
or
mov
fcomp
jg
ja
jg
xchg
imul
cli
es
add
aad
or
or
pop
sbb
repnz
retf
mov
xchg
loopne
sub
sbb
pusha
jle
stc
dec
mov
pop
mov
add
cli
ins
mov
dec
xor
mov
into
(bad)
jno
jb
xor
es
cmp
fst
outs
inc
psadbw
add
jmp
mov
mov
retf
test
ret
push
imul
loopne
add
adc
pop
adc
push
(bad)
pop
and
pop
dec
mov
(bad)
dec
jge
inc
sub
or
dec
cmp
mov
cmp
adc
js
jns
stos
lods
pop
outs
sbb
push
mov
add
push
popf
fisub
jb
out
addr16
add
and
test
or
xchg
enter
clc
sbb
leave
push
jmp
jp
(bad)
lods
sub
rol
dec
and
jno
in
push
fst
rol
js
add
push
in
test
(bad)
add
add
mov
ja
push
add
outs
xchg
fs
(bad)
pop
daa
aaa
jbe
push
and
push
push
call
test
mov
mov
xor
push
cmp
inc
dec
loop
cmp
aaa
div
and
dec
ja
or
jne
sub
inc
sbb
cmc
mov
out
mov
push
push
mov
inc
dec
jnp
jns
pusha
lahf
jo
mov
xchg
icebp
(bad)
lock
sbb
addr16
das
imul
inc
sub
retf
out
out
sbb
fadd
and
lock
pop
sahf
inc
pop
or
std
jge
fsub
test
add
pop
aam
lods
dec
lahf
imul
out
push
and
ja
bound
lods
xor
inc
cmp
dec
and
sub
push
out
rcl
shl
hlt
push
(bad)
mov
lock
or
and
aam
nop
xchg
push
push
sti
inc
pop
test
mov
push
cmps
sub
rcr
xchg
ret
push
inc
sahf
je
xor
pop
jns
pop
adc
clc
xor
loope
xor
jmp
cdq
das
fcomp
xchg
lock
hlt
push
mov
jno
mov
mov
cdq
inc
jne
clc
cmps
mov
jl
fisttp
add
leave
xor
pop
adc
imul
mov
push
mov
iret
shl
mov
xchg
pop
pop
inc
xchg
ret
fild
cmp
cli
jmp
sub
(bad)
es
call
arpl
sti
inc
jle
adc
mov
cmp
repnz
retf
stos
call
pop
loopne
sub
imul
cmps
fwait
retf
adc
pushf
jle
jmp
sar
aas
mov
mov
jb
popa
xor
xchg
sbb
xor
loop
es
add
mov
and
in
ror
sti
mov
lods
lock
sub
jns
mov
pop
es
lods
sbb
dec
aam
in
es
adc
das
adc
jle
push
mov
call
stc
jmp
sub
push
dec
popf
push
add
loopne
dec
jne
adc
jmp
stc
sub
loopne
push
and
out
add
int
icebp
push
mov
inc
sbb
ret
in
jae
dec
push
jge
cmps
sahf
mov
or
push
jae
cmc
or
and
mov
lea
je
into
and
and
jns
ds
xchg
xor
imul
aad
loop
cmp
or
add
shl
test
jl
push
push
mov
cmp
add
xchg
lods
mov
addr16
fcom
(bad)
sti
pop
dec
movs
cmps
nop
mov
mov
nop/reserved
inc
data16
jae
gs
cmps
call
scas
jle
movs
jbe
adc
imul
jno
sbb
(bad)
push
xor
mov
lock
or
int3
iret
ret
lods
mov
repnz
dec
mov
in
mov
jmp
sub
mov
dec
test
loop
(bad)
dec
inc
pop
aaa
cmps
push
out
pop
retf
add
stos
cmp
push
inc
repnz
lahf
pushf
cld
loopne
fcomip
(bad)
lock
lock
ret
lock
out
sbb
cmp
les
loop
outs
and
mov
jnp
daa
mov
jnp
ret
sar
jg
ret
inc
inc
cs
(bad)
xor
cmp
clc
and
mov
shr
push
ja
ins
js
(bad)
sub
add
stos
jge
les
xchg
fmul
pop
dec
pop
fbld
fadd
fwait
sub
pusha
mov
cmp
ja
popa
sti
mov
shl
mov
push
pop
xor
clc
cmc
lds
pop
jnp
sub
cs
and
xchg
sbb
daa
inc
sbb
pusha
out
cwde
adc
addr16
xlat
cmp
mov
jge
seto
adc
adc
inc
js
adc
mov
(bad)
lods
xchg
xchg
jns
neg
jo
outs
in
mov
lahf
loop
call
or
ins
cmp
dec
scas
pop
add
xchg
and
inc
add
mov
es
push
test
sbb
xchg
mov
cmp
push
out
add
cmp
leave
sub
ret
fild
ror
cwde
jbe
jns
bound
fsub
hlt
nop
add
cmp
mov
pop
pushf
sub
jmp
in
out
cmp
ja
mov
push
mov
adc
xor
sbb
dec
test
sbb
pop
push
xchg
dec
ins
fucomi
xor
add
pop
cmc
jge
nop
inc
sbb
sub
pop
in
les
lock
mov
cmp
add
pusha
dec
xor
pop
or
cmp
mov
dec
ins
mov
fild
inc
(bad)
cmp
call
cmp
add
fwait
sbb
lock
loope
sub
mov
add
adc
pop
loope
fdiv
push
cmp
mov
pop
pop
xor
fcmovnbe
mov
lahf
mul
push
ret
or
jp
jle
ins
stc
jae
mov
pmulhuw
fst
ins
push
mov
mov
stos
popa
cmc
and
xchg
push
push
stos
mov
mov
sub
jno
sub
sbb
jmp
(bad)
mov
and
movs
into
lea
xchg
pop
mov
inc
jno
xchg
inc
lods
ss
xchg
cld
(bad)
sub
and
push
pop
(bad)
mov
adc
jmp
pop
dec
ror
jge
cmp
call
je
fstp
xor
in
push
cld
int
and
lea
repz
js
repz
sub
and
sub
adc
imul
mov
out
jg
cmps
mov
aaa
sub
jecxz
xchg
sbb
retf
mov
inc
jmp
pop
xchg
mov
and
neg
cmp
mov
jge
inc
rcr
ficomp
lds
je
fstp
rol
int3
mov
in
int
mov
jne
movs
out
push
mov
mov
popf
icebp
ret
mov
shl
xor
rol
xor
pop
(bad)
loopne
cmps
add
sub
push
fisttp
loop
jnp
mov
mov
cdq
in
rol
mov
lds
sbb
pop
lods
xor
std
add
in
das
test
sub
add
(bad)
xor
aas
push
sbb
push
add
dec
out
add
inc
lds
lods
mov
fild
xchg
or
pusha
adc
int3
pusha
push
push
push
scas
bound
jbe
leave
loopne
mov
aaa
sub
(bad)
hlt
push
sub
xor
call
mov
cdq
or
dec
enter
cmp
xchg
adc
cmps
repnz
enter
push
cs
sub
je
pop
pop
xchg
sub
add
lea
add
(bad)
icebp
popf
inc
fcmovbe
outs
cmp
mov
sbb
call
repz
push
mov
(bad)
pop
inc
sti
inc
fld
lods
rcl
mov
and
cmp
push
(bad)
adc
pslld
inc
mov
js
shl
xor
jo
fidiv
pop
lea
push
nop
into
dec
dec
sub
pop
jnp
lds
loope
sahf
mov
int
sbb
je
xchg
int
inc
bound
stc
sub
push
in
fcmovnb
out
sub
das
dec
jo
add
ds
dec
in
mov
mov
rcl
push
aam
dec
cmp
retf
xor
pop
ror
imul
xchg
pop
dec
lods
push
sti
shl
xlat
ret
lahf
xor
push
loopne
js
add
in
lods
aad
xchg
ror
lea
mov
jle
movs
sub
push
or
aas
sbb
push
cmp
push
cmp
in
mov
shl
cld
mov
lock
cmp
pop
mov
pop
cmp
xor
aaa
or
dec
push
je
retf
in
dec
push
xchg
and
or
shr
push
inc
xchg
clc
ror
lock
jmp
rol
xchg
push
jnp
xchg
mov
xchg
(bad)
iret
(bad)
mov
out
lds
adc
mov
mov
push
xor
sbb
adc
xchg
mov
in
mov
outs
popf
stc
js
jle
(bad)
fld
std
sbb
dec
mov
xchg
push
push
pop
pop
test
pop
fcom
sub
inc
dec
stc
xchg
(bad)
leave
push
adc
sti
inc
cmp
jecxz
adc
inc
das
sti
fs
and
inc
lahf
bound
repnz
push
in
xchg
lods
jle
(bad)
mov
add
add
cdq
cwde
xchg
xor
std
xchg
push
adc
pop
xchg
pop
dec
or
movs
and
sub
add
aas
push
lods
mov
les
(bad)
xchg
aad
push
sbb
mov
aad
data16
adc
xor
push
and
cwde
xchg
inc
out
(bad)
add
sbb
xor
addr16
xchg
pushf
pop
xchg
inc
pop
xchg
jne
loope
jmp
pusha
jb
stos
pop
cmp
addr16
pop
mov
rcr
and
repz
jmp
cld
sti
fs
push
sub
ja
sbb
mov
cli
pop
fisubr
stos
pop
xchg
mov
mov
mov
das
mov
outs
adc
mov
in
cmp
xchg
scas
fld
jle
inc
aaa
sub
cdq
sub
adc
dec
int
add
aaa
cmp
dec
adc
inc
scas
xchg
lods
jb
and
out
lods
rcr
cmps
retf
sti
js
lock
and
cmp
cmc
push
shl
mov
mov
aas
mov
test
lods
ss
dec
in
mov
pop
lea
jp
adc
adc
int
inc
retf
sbb
mov
std
and
lock
fstp
pushf
and
sbb
in
or
(bad)
jmp
jno
mov
sbb
imul
outs
cs
test
adc
pop
iret
jmp
push
mov
or
sub
leave
lods
cwde
cmps
jae
loope
outs
in
rol
imul
pop
pop
adc
out
(bad)
ss
xchg
mov
mov
xlat
or
enter
mov
inc
clc
je
inc
(bad)
fmul
mov
movs
imul
jl
sub
nop
shl
mov
loope
mov
adc
daa
ror
add
mov
xchg
retf
jmp
inc
rcr
lods
(bad)
gs
xor
mov
pop
mov
sub
dec
fbld
sbb
les
stos
push
adc
push
dec
popf
and
aam
fdiv
mov
in
addr16
jno
inc
pop
ficom
fsub
sbb
xor
sti
imul
lock
shl
enter
in
aad
push
adc
mov
repz
jl
into
xlat
bound
and
jle
pop
adc
cmovae
and
or
dec
mov
jns
sub
sbb
lods
out
cdq
rcr
sub
mov
out
push
jae
mov
or
mov
adc
outs
cs
pop
or
cs
jno
popf
(bad)
mov
leave
and
dec
xchg
lahf
xchg
mov
in
in
jo
stos
inc
rcr
push
test
xchg
mov
mov
test
dec
in
mov
push
fwait
(bad)
shr
popa
xchg
test
dec
push
dec
fs
jno
movs
inc
sub
(bad)
xchg
jb
mov
pop
cmps
jb
pop
push
movs
loopne
push
xlat
(bad)
or
xor
inc
ja
xchg
sti
rcr
outs
mov
loopne
imul
mov
sar
movs
mov
or
mov
inc
add
addr16
(bad)
repz
pusha
adc
cwde
test
push
mov
int
das
mov
sub
xchg
push
jmp
and
lods
xor
and
inc
repz
mov
shl
pop
mov
ss
movs
fstp
jo
xor
sub
dec
clc
inc
cld
jae
lea
clc
pop
cs
sbb
pop
mov
pop
ret
mov
cli
xchg
or
jle
repz
ja
int
dec
and
dec
lods
xchg
push
stc
cmp
les
dec
in
sbb
xor
out
push
div
mov
jb
aad
movs
jne
stos
ja
push
push
das
jnp
mov
mov
jbe
div
cli
(bad)
pop
dec
push
dec
ror
push
shl
xchg
xor
xor
je
data16
ficomp
cmps
jnp
outs
mov
fidivr
stos
test
xchg
dec
ss
sahf
sub
out
or
jmp
adc
rcl
pop
ins
push
mov
(bad)
fld
inc
xor
cs
in
or
dec
sbb
adc
loop
js
fnstsw
imul
or
push
ror
jnp
ss
dec
in
adc
sbb
jne
test
and
and
xor
in
outs
int3
ficomp
fs
test
lods
xor
and
(bad)
(bad)
cmp
jae
jmp
cmp
xchg
jae
push
cli
xchg
cld
mov
lea
push
int
jmp
es
push
shr
pop
mov
shr
cmp
aam
push
sub
cwde
sbb
(bad)
pop
jl
dec
sar
test
add
dec
addr16
mov
xlat
adc
test
hlt
repnz
xchg
or
push
ret
ins
xchg
mov
outs
test
fidiv
addr16
rcl
repnz
push
inc
mov
lods
mov
or
xchg
int
mov
pushf
jns
push
dec
jmp
mov
test
aad
out
call
ins
mov
dec
mov
jmp
push
std
push
ins
enter
jnp
sbb
push
dec
movs
mov
mov
add
xor
and
(bad)
jno
int3
loopne
push
jl
aaa
test
sub
aaa
pop
imul
ins
pop
inc
pop
test
retf
arpl
popf
mov
pop
mov
int3
adc
push
adc
xor
mov
or
xor
mov
scas
or
xor
rol
shr
ret
(bad)
ret
inc
pop
add
cmp
pop
push
jne
leave
xor
cmp
dec
pop
sbb
jae
dec
xchg
sbb
retf
loope
and
mov
push
mov
scas
dec
stc
jp
push
repnz
call
mov
cmp
or
retf
int
mov
ret
es
arpl
js
xchg
and
xchg
mov
xor
jbe
adc
test
movs
arpl
sbb
sar
mov
in
ss
cwde
dec
js
jl
jbe
inc
push
aaa
inc
in
test
pop
and
jmp
adc
sub
imul
retf
cmc
out
jge
icebp
shr
(bad)
aas
jnp
js
lahf
and
inc
ret
iret
xlat
or
cmp
movd
push
mov
jae
cdq
rol
jo
je
ror
outs
out
cmp
loopne
pushf
jle
cmc
jmp
enter
mov
sti
stos
xor
dec
xchg
mov
imul
pop
cli
xor
mov
clc
cmp
jno
pop
cwde
jp
add
jae
pop
mov
retf
adc
retf
push
jp
or
sahf
jbe
mov
and
into
dec
shl
jae
mov
addr16
dec
out
mov
cwde
jg
sar
aas
ds
pop
dec
std
add
imul
sub
xchg
cs
das
xchg
cmp
cld
(bad)
xchg
(bad)
xor
lds
mov
jno
xor
in
or
cdq
mov
mov
addr16
(bad)
mov
or
fist
in
inc
sbb
repnz
jg
bound
jg
jbe
xor
fs
(bad)
lock
icebp
dec
adc
mov
cmp
push
and
sub
(bad)
fadd
dec
in
push
or
cwde
lock
adc
push
inc
mov
add
call
inc
xor
push
pop
or
scas
jl
scas
and
loope
jmp
mov
mov
add
sbb
xor
and
es
popaw
loopne
mov
dec
inc
aaa
or
jne
outs
stc
cmps
mov
sub
mov
comiss
iret
mov
pmuludq
cmp
(bad)
pop
jp
dec
inc
lods
push
jo
ficomp
lahf
jbe
movs
stos
jmp
fmul
inc
adc
cdq
imul
jae
sub
and
sub
ja
and
adc
mov
sub
jmp
cwde
push
call
or
push
jge
stos
xchg
imul
scas
mov
and
dec
jge
std
jns
fbld
popa
lods
jne
dec
rcr
push
imul
out
inc
daa
aaa
enter
(bad)
fst
push
add
in
xchg
push
pop
mov
mov
cmps
lods
cmp
mov
sbb
test
fst
cmps
push
xchg
cli
add
mov
xor
inc
scas
jne
pop
jge
mov
(bad)
in
inc
jmp
xlat
push
push
cs
outs
out
mov
in
sbb
cld
fucomip
xor
jle
imul
push
fwait
pop
(bad)
or
mov
mov
and
sbb
sahf
mov
mov
mov
in
inc
sub
hlt
out
pop
les
pop
mov
jb
pop
mov
test
test
inc
psrlq
jge
shl
stos
mov
mov
(bad)
cdq
(bad)
cmp
push
(bad)
aad
or
xor
fnstenv
and
sar
or
and
cmc
xchg
mov
stos
sbb
test
mov
jg
and
pop
mov
popa
jnp
sbb
sub
or
push
cmp
mov
add
xor
xchg
mov
mov
jno
sub
or
push
or
test
paddsw
and
mov
retf
mov
std
xor
test
lahf
pop
in
mov
sub
pop
test
pop
(bad)
bound
paddw
sbb
jmp
scas
(bad)
sbb
pop
cli
pop
sub
and
mov
mov
out
test
nop
das
xchg
rol
jo
jl
fidivr
out
std
cmp
and
aam
test
stc
leave
icebp
jp
(bad)
in
add
add
inc
loop
push
mov
pop
repnz
mov
inc
adc
out
icebp
inc
test
outs
cmp
mov
stc
or
pusha
ins
jl
xchg
fwait
xchg
mov
inc
sub
jns
mov
loop
sub
mov
mov
add
lahf
mov
adc
in
repz
rol
jo
leave
xor
test
sbb
es
mov
(bad)
push
lods
nop
sahf
gs
test
loop
adc
mov
das
iret
nop
test
and
sbb
mov
shl
fndisi(8087
loopne
stc
adc
lods
fistp
dec
push
mov
mov
ss
daa
in
inc
test
pop
xchg
cmp
xchg
cmp
cli
mul
idiv
repnz
sar
lahf
imul
xor
mov
shl
or
cmp
xor
mov
pop
jl
ins
or
shl
out
push
fcomp
ret
push
xchg
rcl
cwde
or
loope
popf
out
dec
es
and
or
jnp
sbb
fdiv
dec
xchg
xor
lea
mov
loop
cwde
xchg
test
out
mov
(bad)
stc
inc
mov
in
and
aas
imul
sub
mov
add
or
dec
mov
pop
loope
sub
retf
sub
fsubr
fistp
test
and
inc
push
bound
fadd
aas
jle
(bad)
in
lahf
cmp
(bad)
xlat
rcr
add
push
or
push
mov
ja
and
mov
or
xchg
push
sub
(bad)
cld
dec
xchg
jno
dec
xchg
inc
mov
ror
inc
repnz
stc
cli
ins
stc
sbb
gs
test
fwait
addr16
mov
jbe
sar
cwde
loopne
xchg
adc
add
lock
movs
jl
cwde
push
or
mov
mov
out
cmps
fs
jns
cmc
and
add
pop
mov
hlt
jmp
outs
jb
adc
out
dec
test
inc
stos
mov
sahf
pop
pop
cmp
shl
push
call
lea
imul
fucomip
cmp
or
in
lea
pop
in
out
mov
sbb
push
call
xor
sbb
push
stos
dec
pop
cmp
sbb
dec
xchg
test
mov
xchg
cwde
lods
test
mov
pushf
fs
ret
inc
xor
push
sbb
cmp
mov
stc
jbe
add
mov
stc
sub
sbb
xor
mov
cmps
jge
loop
repnz
mov
test
mov
aam
repz
mov
add
jo
aas
loop
repz
xchg
loope
pop
nop
fmul
jg
pop
les
push
jb
pop
enter
je
enter
ret
xlat
cmp
jle
mov
arpl
and
inc
lds
es
or
loope
xor
fimul
add
or
call
sbb
and
aas
add
push
dec
jne
sbb
and
add
sbb
pop
ltr
mov
xchg
setno
add
pop
sub
ins
push
movs
dec
aas
adc
hlt
movs
push
arpl
push
xchg
sub
(bad)
in
loop
pop
movs
mov
test
test
jae
mov
xor
cmp
dec
add
push
push
(bad)
add
add
test
mov
adc
leave
or
jb
xor
jl
(bad)
jne
add
mov
scas
test
dec
push
ret
fmul
add
pop
jmp
test
out
xor
adc
mov
cs
push
out
xchg
(bad)
or
das
in
xor
adc
dec
mov
xor
dec
mov
add
jo
ja
stos
mov
dec
aad
iret
jmp
sub
and
(bad)
ficom
mov
mov
scas
cmps
jl
loopne
pop
call
(bad)
push
xor
sbb
daa
js
adc
bound
addr16
pop
jmp
or
movs
test
xchg
adc
jb
cmp
enter
idiv
es
rol
lods
jns
clc
mov
xor
pop
and
or
mov
test
fcmovbe
or
scas
mov
movs
xlat
cmc
hlt
adc
aad
outs
pop
loop
jmp
aad
inc
mov
cmp
cmps
popa
retf
sti
xor
dec
inc
sub
mov
cmp
loope
movs
hlt
mov
call
cmps
mov
retf
sbb
fsubr
(bad)
scas
cwde
aas
jmp
sub
jae
cmps
lea
iret
sub
jbe
loop
jmp
sbb
dec
and
mov
scas
ret
mov
adc
movs
mov
jp
sahf
and
push
pop
repz
mov
popa
test
(bad)
adc
loope
ja
mov
bound
lods
jge
cmp
mov
push
mov
lods
adc
xchg
adc
adc
pop
cmp
adc
out
xchg
sub
loopne
inc
jmp
int
adc
sub
rcr
mov
cld
sti
js
bound
retf
sub
or
loop
fisttp
and
outs
inc
test
ins
psubsb
mov
dec
mov
add
ret
adc
imul
adc
leave
int
shl
dec
in
lods
ret
pop
out
adc
inc
cmps
fs
test
adc
shr
adc
mov
(bad)
sbb
dec
and
sbb
je
movs
fdivr
ss
adc
adc
(bad)
mov
mov
(bad)
lods
cmc
das
cmc
out
jp
pop
jecxz
jecxz
das
sub
daa
pop
in
dec
cmps
jge
xor
mov
fdiv
shl
mov
jb
call
(bad)
clc
inc
add
out
cmp
xor
sub
cwde
adc
aas
mov
or
jecxz
(bad)
push
push
and
jg
jle
jecxz
ss
mov
ja
scas
loope
xchg
into
out
cli
repz
dec
out
psubsw
(bad)
xor
(bad)
shr
clc
inc
(bad)
icebp
retf
repnz
or
lock
jno
leave
or
fdivr
gs
mov
jl
add
mov
inc
mov
aam
out
test
movs
xor
lock
(bad)
out
and
mov
dec
add
(bad)
push
sbb
(bad)
js
loop
pop
(bad)
sub
fdivr
mov
cmc
test
sub
or
shl
out
mov
dec
fsub
repz
(bad)
mov
out
mov
cmp
mov
daa
aad
mov
popf
mov
into
sub
dec
fs
je
sub
or
sbb
addr16
or
pop
ds
sub
mov
imul
js
sub
and
sub
sub
mov
xchg
nop
stos
or
or
into
mov
not
sbb
test
test
aad
xchg
pop
es
lahf
dec
retf
pop
cmc
fsubr
sub
daa
mov
test
jl
js
ss
adc
test
jmp
in
std
or
cwde
xor
stos
and
ret
pop
xchg
mov
sbb
cwde
pusha
xchg
or
cmp
lock
pop
mov
mov
stos
cmp
jnp
jns
cmp
cmp
add
stc
(bad)
(bad)
push
in
xor
xchg
adc
js
xor
(bad)
repz
and
xor
inc
xchg
mov
mov
xchg
jle
or
loope
addr16
fadd
pop
adc
mov
jno
push
cwde
jle
retf
jge
and
mov
nop
adc
enter
mov
(bad)
push
pusha
loope
mov
and
inc
push
aaa
push
xchg
jmp
jmp
dec
(bad)
add
and
pop
cmp
test
add
sbb
jbe
pop
shl
adc
in
sub
out
hlt
add
cmp
mov
(bad)
jmp
out
cmp
shr
adc
mov
inc
cmp
mov
mov
call
sub
cmp
xchg
push
outs
pop
pop
dec
cli
sbb
push
in
mov
push
repnz
cmps
cmp
imul
add
mov
icebp
inc
out
mov
push
movs
mov
push
hlt
lods
ficomp
or
xchg
cmp
xchg
or
dec
mov
cmp
sub
cmp
sbb
inc
add
and
xor
inc
sbb
dec
xchg
(bad)
or
std
iret
push
ror
loopne
call
(bad)
out
icebp
and
cmp
addr16
adc
mov
in
rcl
jl
xchg
ins
mov
mov
test
fwait
dec
push
jecxz
test
push
jmp
add
int3
cmps
jnp
movs
test
or
popa
cmp
pop
clc
dec
inc
adc
je
inc
scas
and
enter
icebp
std
stos
mov
and
int
shr
mov
pushf
sbb
stos
imul
adc
scas
jg
mov
mov
fscale
jmp
in
ja
sbb
pop
ror
sahf
sbb
cli
inc
cmp
inc
xor
icebp
adc
into
je
sub
cmps
push
dec
pop
sub
aaa
retf
pop
dec
imul
xchg
dec
cdq
outs
or
std
push
mov
push
adc
into
vpunpckhqdq
pop
mov
jo
mov
or
xchg
sbb
cmp
sbb
scas
enter
test
mov
and
jmp
mov
push
retf
cmp
inc
loopne
les
inc
jecxz
mov
adc
fcomp
push
inc
retf
push
pop
cs
mov
cmp
out
mov
lea
ficomp
pop
inc
ror
loopne
dec
or
pop
ret
inc
mov
call
out
shl
mov
sub
jge
sub
call
ror
(bad)
cs
and
mov
cmp
push
rcl
jp
imul
xor
cmp
sahf
retf
ins
jb
hlt
inc
jnp
sub
xchg
xchg
add
leave
pop
dec
mov
clc
loope
adc
adc
cmp
mov
jnp
adc
mov
sbb
cmp
(bad)
stos
push
test
sar
je
sbb
push
out
cmp
mov
mov
fidiv
pop
rol
mov
fwait
cmps
xor
push
dec
mov
cmps
sub
dec
mov
dec
ja
sub
or
fs
and
rcr
pop
push
out
push
mov
rcr
jge
sbb
scas
push
aas
mov
je
and
xchg
inc
dec
mov
ficomp
sub
mov
cs
jecxz
ficomp
pop
cdq
test
cmp
sbb
pushw
adc
retf
leave
out
jno
bound
daa
xor
enter
in
add
sub
adc
or
fmulp
adc
mov
sahf
mov
jge
bound
inc
pop
popf
mov
sti
push
inc
add
cmp
loopne
lds
sub
sti
out
pminsw
in
(bad)
cmp
ss
je
fsub
push
les
and
xchg
stos
dec
adc
bnd
inc
cld
sbb
mov
add
ror
xor
xchg
inc
cmp
xchg
mov
cmp
pop
push
shl
xor
push
lahf
cmovno
push
sub
mov
pusha
in
int3
retf
dec
dec
and
pop
pop
xchg
inc
lahf
or
mov
sub
fst
inc
stos
push
sub
sub
ror
cdq
push
out
fld
inc
xor
xlat
jae
scas
inc
scas
cmp
mov
cwde
or
das
push
stc
(bad)
adc
sub
mov
stos
lock
fmul
pushf
jb
hlt
pop
retf
mov
sar
or
ret
fist
xor
push
lahf
mov
pop
add
or
xchg
mov
push
xchg
js
test
dec
xchg
mov
hlt
xchg
mov
in
mov
aam
jnp
push
gs
push
les
add
jmp
call
pushf
sub
push
xchg
(bad)
xchg
in
outs
xor
mov
lods
mov
mov
cmp
dec
add
sub
inc
sbb
(bad)
or
lea
add
xchg
dec
xor
pop
out
enter
je
inc
call
push
mov
fld
mov
sahf
jno
int3
and
fdivr
mov
cmp
scas
and
xchg
cld
or
mov
mov
mov
(bad)
and
lods
movs
adc
xor
in
adc
enter
pushf
aaa
xor
ficom
iret
sub
lahf
mov
mov
sti
ja
adc
pushf
mov
mov
mov
or
in
fcomp
pop
jg
or
test
cmp
cmp
mov
dec
jb
sub
loop
ins
push
pusha
dec
gs
ja
fisubr
pusha
fidiv
dec
jmp
and
ror
stos
sub
cdq
and
xor
mov
jnp
arpl
ins
fdiv
lods
add
in
and
dec
clc
ror
dec
inc
xchg
dec
add
dec
mov
sbb
lock
div
shr
pushf
mul
arpl
movs
fsubrp
push
pop
cdq
cs
cmp
sub
out
mov
sbb
shl
into
daa
jmp
dec
mov
and
jnp
fmul
fs
and
jbe
fmul
mov
pusha
sahf
sub
int
scas
repz
xor
test
jo
daa
jmp
xchg
xchg
mov
push
xchg
jo
popf
aas
mov
push
stos
xchg
test
test
xor
test
sbb
xlat
rcl
addr16
(bad)
ficom
retf
out
jae
aad
pop
ret
popf
out
mov
(bad)
and
pop
das
stos
pop
(bad)
jecxz
mov
jb
jmp
mov
out
jns
daa
mov
inc
inc
cmp
(bad)
and
cld
cmp
jbe
in
ret
jns
cmp
popf
jnp
call
and
fadd
inc
fcomp
inc
mov
xor
and
and
mov
jno
popf
fwait
ror
mov
int
out
inc
inc
mov
pop
xchg
(bad)
rcl
fstp
js
pusha
inc
test
pop
inc
movs
jmp
dec
push
xchg
cmps
pop
mov
aaa
cs
adc
scas
mov
cmp
jne
stc
aaa
jle
mov
loop
cmc
and
mov
lods
mov
sbb
mov
inc
(bad)
js
lock
fisub
or
call
mov
dec
sub
pop
jl
sub
sbb
push
xchg
pop
sbb
xchg
call
sub
stos
mov
imul
(bad)
xchg
dec
cmp
inc
cmp
call
cmp
ss
popf
pop
sub
mov
sbb
fld
push
stc
lea
inc
mov
clc
(bad)
push
js
cmc
retf
popf
mov
push
les
pop
in
bound
cmc
mov
das
cdq
aam
das
push
ret
outs
(bad)
sbb
ins
mov
mov
in
mov
jae
xor
outs
adc
push
ins
jne
add
out
pop
mov
add
fst
(bad)
mov
push
dec
(bad)
mov
out
fwait
mov
outs
in
xchg
cmps
mov
cmp
adc
popf
cmp
js
ins
push
dec
mov
outs
lock
add
jb
inc
adc
fwait
or
sbb
mov
test
inc
mov
mov
push
push
sub
movs
sbb
or
xchg
jmp
cmp
and
inc
test
mov
and
jp
or
dec
enter
xor
push
in
mov
sub
imul
sub
mov
fidiv
mov
push
icebp
pop
cmc
xchg
pop
call
outs
imul
retf
push
movs
push
out
inc
ret
cld
enter
int
xchg
sub
mov
sbb
and
arpl
mov
int3
mov
imul
xchg
pop
dec
pop
or
shld
es
and
int
mov
out
stc
mov
sbb
push
pushf
ret
xor
loopne
scas
push
in
and
fnstenv
sub
fdivr
pop
pop
cmp
xchg
pushf
pop
mov
retf
frstor
ja
jp
push
rcl
fidivr
inc
ret
xor
scas
and
ins
into
fwait
mov
movs
fwait
jb
add
mov
xor
stos
mov
loopne
outs
sar
and
xlat
fmul
pop
dec
mov
push
stos
shl
xor
cmc
cmp
mov
aam
xchg
test
test
mov
lea
(bad)
aas
mov
adc
pop
push
adc
les
mov
mov
popf
xchg
adc
hlt
shr
and
pop
lahf
xor
xchg
jae
jns
mov
push
lock
in
jl
push
mov
gs
and
fld
nop
cwde
in
push
mov
jae
mov
push
fcmovu
fmul
xchg
shl
or
outs
int3
stc
inc
(bad)
das
jae
ficom
aas
rcr
mov
(bad)
(bad)
push
stc
mov
jno
pop
ja
idiv
fisub
fist
sbb
xchg
outs
cmp
hlt
test
pop
dec
adc
and
xchg
in
inc
mov
push
push
call
xlat
test
lods
xchg
ret
and
xchg
mov
jmp
sahf
test
mov
mov
xor
mov
out
arpl
pop
loop
loop
push
inc
dec
mov
inc
pop
or
push
repz
push
bound
dec
out
shl
pop
jge
and
(bad)
call
xchg
dec
push
adc
popf
adc
ja
rcr
mov
aam
mov
and
cmps
jl
icebp
and
(bad)
test
test
jle
inc
inc
test
out
ins
mov
arpl
push
lds
push
push
cld
test
push
and
popf
xchg
icebp
pop
(bad)
xchg
sbb
ror
jg
lea
out
std
adc
mov
cmp
outs
adc
pop
lods
xor
adc
movs
adc
out
cmp
jp
mov
mov
cs
retf
pop
push
jo
push
fnsave
pop
xchg
inc
jne
xchg
test
test
push
push
into
jl
shl
lds
div
mov
ss
push
pop
pop
test
mov
mov
cmp
ret
xchg
neg
xor
sbb
and
outs
loopne
sub
add
cdq
add
pop
ja
xchg
loop
xchg
dec
push
sar
loop
jb
mov
ret
xlat
mov
add
sbb
inc
or
mov
adc
hlt
icebp
jp
stc
xor
cld
dec
jo
fsub
rcr
push
repz
add
mov
xor
and
add
xchg
jmp
sbb
cmp
xchg
fistp
adc
ins
imul
push
push
das
push
jae
add
pop
ret
cmp
fmulp
xchg
in
mov
sbb
call
sbb
mov
or
arpl
jge
inc
pop
retf
pushf
xor
dec
in
fisttp
(bad)
imul
sub
neg
das
call
jg
mov
mov
out
and
adc
sbb
add
adc
je
adc
les
out
ret
loope
adc
mov
inc
arpl
sahf
in
pop
arpl
mov
dec
cmp
inc
push
inc
stos
cmp
loopne
movs
das
sub
push
cld
add
es
jp
call
adc
adc
or
out
outs
jo
les
loop
mov
cmc
sbb
mov
add
aam
in
sub
stos
into
cmps
jmp
cmc
cmps
dec
popf
aam
fnstenv
iret
out
retf
push
pop
cmp
sbb
stc
(bad)
pop
jmp
cmp
cwde
pop
xchg
in
int
pushf
(bad)
dec
cwde
(bad)
cs
mov
daa
jmp
add
and
aaa
std
test
loop
cmp
xchg
inc
std
mov
push
arpl
cmp
cs
jbe
pop
push
mov
dec
pushf
mov
mov
and
pusha
dec
add
ror
sub
add
dec
mov
dec
and
mov
inc
add
and
xchg
mov
xchg
aas
sub
mov
push
imul
dec
push
jecxz
gs
shl
in
pop
mov
in
adc
in
inc
idiv
psubusb
sub
out
unpcklps
push
dec
xor
das
jnp
jmp
gs
mov
adc
dec
cs
inc
adc
aaa
sar
arpl
out
test
push
jmp
(bad)
cmps
aam
in
loop
rcl
adc
cdq
mov
mov
rcl
repnz
or
gs
call
mov
not
cli
push
and
push
or
(bad)
pusha
mov
jns
ins
stos
sti
stos
mov
cwde
into
scas
ret
ror
aam
xchg
and
pop
je
ds
test
dec
dec
fs
dec
in
and
and
call
mov
vmread
mov
(bad)
mul
fmul
sahf
inc
das
inc
fwait
es
dec
pop
ret
dec
jo
dec
mov
xlat
sub
(bad)
adc
mov
mov
jge
mov
js
es
mov
imul
mov
mov
xor
fs
repnz
push
xchg
cmps
xchg
inc
mov
je
cmp
mov
ins
in
add
stos
test
ja
cli
xor
out
pop
mov
rcl
loopne
daa
sahf
(bad)
xor
sbb
repz
xchg
(bad)
(bad)
or
sbb
xchg
imul
add
push
shl
retf
inc
pop
es
fist
inc
mov
sub
adc
sbb
mov
das
jae
xchg
clc
adc
inc
fcom
nop
fdiv
repz
sahf
xchg
mov
jnp
test
sti
push
sbb
adc
or
jmp
pop
jo
mov
jae
popa
mov
nop
idiv
dec
stos
mov
arpl
add
pop
dec
retf
inc
je
test
push
xor
pop
(bad)
xchg
(bad)
xlat
pop
xchg
in
mov
and
test
mov
add
nop
leave
mov
rcr
inc
jge
movs
addr16
lods
push
sbb
lods
popf
loop
jbe
(bad)
jecxz
repnz
lock
cli
mov
imul
cmp
mov
icebp
idiv
mov
mov
push
das
mov
add
mov
sar
xor
mov
jmp
ss
xchg
xor
push
xchg
push
fs
lea
fs
call
mov
cmps
aas
scas
pop
xor
lahf
lods
mov
enter
mov
lea
inc
push
and
xchg
push
nop
and
ja
lods
dec
jecxz
shl
mov
(bad)
icebp
mov
lock
les
rol
mov
addr16
popf
in
xchg
adc
sub
mov
jmp
ror
lahf
cmp
add
(bad)
hlt
xor
(bad)
adc
ins
mov
ret
addr16
pop
mov
pop
je
je
outs
jg
jecxz
aaa
and
lods
sub
mov
fisttp
out
jge
sbb
sbb
inc
loope
sbb
jecxz
sbb
in
dec
dec
and
mov
or
jge
xor
or
and
(bad)
pusha
jns
bound
jp
mov
mov
jno
sbb
mov
(bad)
aad
retf
push
je
rol
jg
les
fistp
movs
rol
sub
and
shl
and
mov
sub
retf
enter
add
mov
iret
stc
pop
loopne
pop
or
sub
je
and
push
lahf
push
and
leave
call
mov
call
test
cmp
shl
sbb
mov
xchg
cdq
out
mov
fsub
sahf
enter
kortestd
lea
jmp
ret
xchg
out
push
test
out
scas
add
test
xchg
mov
cmps
push
inc
test
adc
sbb
popa
jae
iret
push
arpl
shr
xlat
fwait
into
icebp
mov
mov
pop
dec
add
lahf
pop
pop
aas
dec
clc
mov
and
test
xchg
out
imul
pop
imul
add
lea
push
dec
neg
pop
popa
xor
aad
es
sbb
xlat
imul
in
jle
sbb
ja
mov
fldcw
ja
adc
jb
lahf
mov
ins
mov
dec
jo
xchg
inc
sbb
out
lea
mov
or
popf
jg
sbb
cs
mov
rcl
(bad)
ins
jnp
lods
push
xor
clc
sub
sub
loopne
dec
in
leave
fcmovnb
and
repz
push
ror
xchg
jl
mov
gs
into
sbb
pop
fs
rcl
or
ffree
dec
add
or
int
ss
fs
push
add
cmp
in
imul
mov
add
fistp
hlt
or
arpl
gs
adc
push
pop
adc
push
mov
iret
or
jp
mov
and
mov
dec
lods
and
mov
mov
jae
inc
shl
not
jne
sbb
bound
dec
mov
pop
rcr
popf
(bad)
outs
aad
inc
ror
inc
push
test
fmul
out
lds
mov
test
js
pop
mov
push
sbb
dec
pop
arpl
dec
mov
xor
dec
daa
and
mov
dec
lods
leave
mov
sub
retf
and
movs
jge
stc
gs
gs
mov
mov
icebp
outs
std
mov
sbb
xchg
sub
pop
fistp
xchg
fdiv
call
popf
xchg
les
rcl
mov
inc
pop
push
jbe
hlt
pop
icebp
fstp
les
jae
cld
mov
xor
jns
inc
lahf
push
cmp
jns
sub
sbb
ret
or
cmps
aaa
mov
cmps
jmp
lds
addr16
mov
out
jge
xchg
adc
out
pop
pop
aam
add
add
scas
push
push
xchg
(bad)
addr16
adc
inc
test
(bad)
and
test
push
call
cmc
in
jmp
(bad)
lea
dec
mov
sub
xor
enter
je
jp
pop
stos
fsubr
in
sub
pop
pop
push
xchg
outs
bt
or
xlat
dec
mov
int3
xchg
jae
popf
add
je
not
movs
retf
call
jmp
daa
ja
mov
mov
outs
fs
(bad)
sub
mov
lock
mov
xor
xor
retf
adc
pusha
inc
dec
xor
cmp
test
cwde
jmp
and
ret
xchg
xchg
push
movs
movs
mov
sub
test
push
loope
mov
xor
aas
cmp
fmul
mul
mov
pop
dec
xor
aam
push
sbb
cmps
scas
mul
cmp
iret
popa
cli
pop
xor
xchg
outs
ins
mov
outs
cmp
fldenv
sti
sub
movs
dec
jo
stc
inc
mov
and
sbb
mov
cmp
es
addr16
jge
rcr
jb
jl
cmp
loopne
imul
cmps
fs
(bad)
sbb
idiv
stc
dec
fistp
sti
mov
xchg
xor
cdq
(bad)
mov
repz
adc
and
or
and
gs
xchg
inc
dec
jo
inc
jmp
(bad)
ud1
push
pusha
and
cdq
fs
dec
jbe
shr
xchg
dec
jmp
mov
xchg
pop
inc
add
dec
fld
popa
fcmove
sub
xchg
jecxz
inc
cmps
cli
fnsave
shl
xchg
mov
xchg
icebp
mov
jecxz
out
retf
or
into
dec
or
movd
outs
jo
xor
shl
push
outs
sahf
hlt
(bad)
mov
jmp
sbb
mov
stos
arpl
push
xchg
call
jp
xor
stos
(bad)
loope
xlat
add
out
push
das
jo
sbb
loopne
adc
mov
push
fwait
hlt
es
std
(bad)
lahf
icebp
xor
fsub
sub
xchg
pop
pop
push
cmp
mov
fimul
push
fidiv
cmp
mov
xchg
call
xchg
pushw
(bad)
adc
fsubr
xor
xlat
jae
mov
adc
jecxz
clc
mov
test
ds
jae
div
add
add
out
sbb
lock
mov
arpl
les
stc
jno
push
push
or
xchg
push
daa
rol
popa
fucomi
rol
enter
jg
mov
pop
inc
ret
push
cmp
adc
scas
cmp
sti
add
sbb
jg
adc
rcl
jae
or
ins
test
(bad)
cmps
scas
sar
sbb
add
arpl
dec
push
dec
xchg
fdiv
push
enter
je
shl
jmp
jp
mov
mov
push
pop
in
sub
xchg
xchg
xchg
hlt
movs
xchg
and
adc
(bad)
pop
adc
rcl
adc
cdq
ds
test
xlat
mov
and
jno
jmp
mov
xchg
and
mov
pushf
int
mov
in
push
fcmovbe
push
fnsave
jmp
and
nop
or
addr16
bound
movs
into
clts
mov
jge
imul
je
mov
xchg
add
pop
push
mov
add
jae
mov
xor
arpl
xchg
push
outs
or
adc
cwde
mov
mov
repnz
fist
outs
mov
inc
arpl
pop
mov
xchg
sub
(bad)
push
dec
dec
cmp
popa
mov
mov
sbb
and
repz
sub
imul
gs
xchg
in
out
mov
inc
jmp
or
pop
jne
arpl
push
mov
cmps
pushf
inc
adc
jmp
es
and
test
mov
mov
jae
outs
mov
stos
test
push
(bad)
cmp
das
test
pop
nop
cmp
clc
in
adc
add
xchg
scas
cwde
ret
pop
imul
jle
add
mov
add
sub
push
addr16
cmp
mov
les
mov
mov
icebp
cmps
mov
aad
movs
mov
retf
push
ret
sti
push
dec
and
retf
cli
sub
cli
mov
ret
inc
nop
out
stc
ror
cmps
in
sub
push
(bad)
jb
arpl
in
stos
push
adc
dec
cmp
jns
xchg
cmp
int
and
cmp
ss
gs
mov
xchg
and
fidivr
pop
pushf
retf
shr
mov
or
add
aas
stc
add
in
movs
test
mov
mov
cdq
pop
mov
cmp
cmp
clc
sti
pop
gs
ret
int3
leave
add
mov
mov
adc
daa
jge
fistp
out
es
daa
and
mov
mov
lods
sbb
rcr
outs
ret
test
bound
dec
sub
jo
cli
cmps
mov
mov
out
pop
aas
test
call
inc
xchg
inc
mov
jecxz
stos
out
sbb
(bad)
mov
pushf
aas
pop
mov
fstp
lds
ret
jle
ins
(bad)
ja
lods
adc
sti
rol
stc
pop
(bad)
pop
xchg
ret
xor
fcomp
cs
outs
test
or
dec
dec
into
es
jl
(bad)
outs
jns
mov
retf
mov
and
mov
and
jb
xchg
xor
pop
mov
jecxz
or
sahf
pop
cmp
clc
inc
lss
pusha
(bad)
sbb
mov
das
es
push
ret
add
pop
adc
and
pop
cwde
sbb
jle
dec
sub
popa
cmp
cwde
mov
mov
pop
jo
fiadd
gs
stos
push
bound
fwait
inc
scas
test
adc
adc
mov
es
js
pop
cmp
rcr
pop
cli
adc
shr
cli
xchg
popa
pushf
xchg
cld
pop
push
je
sub
adc
out
and
stc
sbb
retf
and
inc
out
shr
mov
sub
pop
mov
rol
test
xchg
add
daa
(bad)
lea
or
jmp
imul
retf
leave
retf
js
ret
push
ss
push
or
add
dec
ja
lock
or
xor
lods
mov
mov
fs
inc
(bad)
mov
pop
pop
mov
pop
inc
iret
adc
lods
jmp
inc
adc
inc
mov
dec
xchg
add
xlat
(bad)
fistp
xor
pslld
jnp
fidiv
ja
cwde
and
dec
xor
and
add
dec
inc
movs
sbb
pop
mov
test
scas
ds
idiv
push
sub
cmp
or
ret
(bad)
enter
add
fstp
pop
test
sbb
sti
inc
mov
ffree
push
mov
jae
int3
push
push
pop
gs
retf
lods
xor
adc
add
stos
push
popa
push
mov
test
mov
push
jbe
repnz
mov
push
mov
or
adc
cmp
les
jmp
dec
retf
cmps
or
dec
dec
call
ret
fwait
jecxz
outs
add
sub
push
fisttp
mov
add
add
test
add
cmps
or
fwait
cdq
pop
mov
lahf
rcr
loope
mov
aas
xor
out
inc
cmps
call
loopne
adc
cmc
jns
int
aad
data16
push
lods
and
int
stos
lods
jae
jmp
cmc
or
mov
shl
cmps
repz
mov
int
add
cdq
cwde
mov
mov
mov
jp
cmps
pop
sub
cmps
mov
cmp
cmps
test
mov
enter
pushf
aaa
je
dec
push
pop
mov
mov
call
(bad)
dec
rcr
call
std
and
(bad)
jb
jmp
push
ret
add
cmp
and
stos
mov
push
xchg
push
xor
sbb
inc
jnp
cmc
cli
cli
scas
not
inc
jne
inc
je
inc
inc
cmp
jl
popf
and
and
stos
add
push
cwde
xchg
ss
fiadd
push
add
cmp
mov
jo
shld
mov
cmp
movs
or
sbb
sbb
(bad)
in
jl
or
sbb
add
xor
sub
push
scas
mov
or
mov
xchg
(bad)
xor
inc
mov
shr
es
scas
and
mov
jne
mov
and
clc
ficomp
add
xor
dec
jge
xchg
outs
mov
cmp
xor
lock
test
or
in
cmp
test
cmp
les
xchg
pop
xchg
mov
mov
add
dec
aaa
aad
xor
jne
ins
pop
leave
and
add
jp
fs
adc
pop
call
push
push
mul
mov
push
es
jge
je
cmps
push
xor
les
or
leave
adc
in
into
pop
mov
xchg
dec
sub
dec
ss
pusha
repnz
sbb
imul
addr16
bound
inc
loopne
scas
add
ror
cs
mov
dec
movs
sub
fimul
jecxz
jns
fdivr
(bad)
pop
cwde
add
jl
loope
mov
jne
out
dec
scas
jl
mov
or
repz
pop
lahf
cmp
sub
xor
pop
push
push
push
retf
scas
add
fstp
loopne
adc
mov
sahf
stos
jo
push
jmp
sub
shr
(bad)
fadd
xchg
daa
out
sub
xor
rcr
enter
mov
and
in
lods
call
test
sti
mov
xchg
dec
daa
sbb
xor
in
retf
xor
ret
dec
cmc
jl
mov
jne
add
ja
les
out
mov
(bad)
dec
les
push
cmp
inc
xor
sbb
jbe
xor
xor
and
sub
mov
ffreep
ja
pop
xor
jg
repz
or
mov
pushf
das
rcl
sbb
inc
rol
js
xor
iret
js
clc
push
or
inc
out
xor
push
jecxz
call
mov
les
pusha
inc
into
sbb
iret
in
loope
or
xchg
dec
popf
inc
jb
dec
or
jmp
cmp
mov
jmp
bound
lods
outs
ins
cmp
or
jb
retf
xor
jle
iret
stc
rcr
push
cmp
push
popf
add
xchg
jno
ins
(bad)
mov
sbb
in
shl
add
cmp
dec
jge
xor
add
stos
and
add
dec
sti
xchg
cli
mov
fcmovu
imul
outs
adc
int
mov
xor
lea
jmp
jl
fsubr
inc
sub
cld
jmp
xchg
lds
xchg
or
fsubr
cdq
dec
(bad)
(bad)
cld
ins
(bad)
repz
adc
icebp
inc
ds
jl
add
aas
jno
adc
repnz
sub
mov
mov
int3
retf
movs
push
cmp
cld
cmps
adc
or
xor
jno
(bad)
aas
mov
jmp
ins
retf
lahf
or
test
and
repnz
int
mov
mov
sub
fiadd
pop
cld
ds
(bad)
bound
ror
fidivr
push
out
xchg
xor
jge
pop
cli
sbb
stos
lods
adc
in
dec
jg
cmps
cmp
cmp
retf
shl
mov
rcl
sub
mov
aas
stc
push
mov
aad
sub
and
jne
sbb
mov
add
jle
cdq
lahf
jae
pop
or
ror
les
in
cmp
dec
or
pop
push
pop
xchg
xor
mov
leave
ja
and
fsubrp
add
xor
adc
push
jp
add
popf
sbb
sar
in
sub
cmp
std
aaa
sbb
and
mov
nop
xchg
pushf
push
ins
scas
mov
call
sti
rol
movs
pop
jge
repnz
xor
outs
int3
fnstcw
mov
imul
inc
xchg
jb
sbb
mov
out
addps
xor
sub
and
ds
mov
and
loope
rcr
in
dec
cld
jmp
xor
push
in
adc
xchg
out
hlt
ficom
inc
or
xlat
aas
cmp
mov
or
jae
mul
dec
jns
fmul
popf
fwait
xchg
jg
ficomp
loop
lods
fwait
neg
pop
dec
mov
dec
(bad)
mov
lock
jl
movs
lods
leave
pop
movs
or
dec
xchg
ins
ins
mov
je
nop
inc
jno
(bad)
xor
sub
addr16
ds
pushf
in
push
inc
lods
les
psrld
jecxz
cmp
enter
(bad)
dec
test
hlt
cwde
stc
loope
mov
add
rcr
or
ret
stos
push
cs
sbb
pushf
hlt
adc
imul
lock
sahf
cmp
sub
mov
jg
clc
test
pusha
loope
lea
pop
mov
mov
je
arpl
fs
stos
fmul
push
jp
push
dec
xor
xchg
add
cmp
test
inc
test
fsub
sbb
xchg
dec
adc
outs
jb
movs
xchg
in
push
push
add
and
leave
in
btc
pop
jbe
fs
jmp
add
(bad)
popa
sub
imul
adc
add
push
jl
enter
cmp
fsub
cdq
jecxz
aaa
jge
mov
inc
dec
(bad)
cmp
xchg
cmp
xlat
jmp
ret
shl
fsubr
add
rol
fcmovu
in
mov
mov
sub
sub
or
pop
daa
jge
mov
jnp
mov
cmp
push
and
or
sub
xor
sbb
out
test
aad
xor
dec
xchg
pop
xor
mov
add
retf
enter
int3
in
(bad)
(bad)
sar
jle
movs
push
imul
aam
sar
sbb
mov
mov
and
movs
repnz
jo
or
pop
fldcw
ret
test
push
fwait
pusha
push
sub
xchg
and
push
rol
stos
mov
enter
inc
dec
jnp
or
adc
leave
sbb
ins
ret
jnp
sbb
pop
imul
or
daa
push
popa
addr16
sahf
cli
imul
push
iret
mov
inc
push
adc
add
adc
cmps
push
pushf
popf
jno
adc
out
aaa
xor
sub
pop
lahf
ja
jecxz
xor
jne
loope
jge
iret
pusha
fdivr
jmp
jg
pop
popf
mov
mov
movs
jns
mov
lock
inc
rcr
mov
scas
inc
ds
mov
dec
jg
ja
shl
adc
adc
fdivr
xor
ss
or
pop
and
lds
xchg
sbb
jne
mov
mov
pushf
or
pushf
das
out
and
dec
push
(bad)
jge
or
dec
jl
xor
outs
jns
lock
sti
and
jo
sbb
in
inc
mov
movs
inc
imul
aad
out
aam
xchg
jne
adc
jbe
sbb
pusha
mov
ds
dec
mov
sub
fcomp
inc
pop
cld
retf
fwait
cmp
mov
lock
adc
mov
pop
add
je
xchg
add
xchg
xchg
pop
pusha
js
ret
and
sbb
call
mov
push
lea
jb
xor
das
retf
push
out
fcomp
je
outs
jmp
pop
repnz
inc
into
daa
test
(bad)
lock
je
cmp
jge
stos
pushf
loope
pop
(bad)
lahf
scas
fdiv
sbb
imul
push
mov
rol
test
(bad)
mov
jp
jo
adc
xchg
xor
xor
lods
mov
inc
jmp
fldenv
ss
xor
mov
out
out
mov
(bad)
cs
fsub
movs
sbb
fst
movs
mov
jno
(bad)
pop
mov
dec
xchg
pop
jb
fadd
xchg
movs
push
jmp
add
enter
mov
pop
aaa
and
out
pop
ror
push
dec
cmp
shr
pop
pop
fld
mov
shl
xchg
enter
shr
out
mov
or
push
test
mov
mov
fmul
hlt
test
xchg
dec
aaa
out
jecxz
jecxz
lock
iret
pusha
mov
jp
imul
cmp
repnz
xor
cld
rcr
popa
xchg
pop
leave
aad
fisub
sub
rol
dec
cli
add
call
inc
xor
dec
jecxz
adc
mov
add
add
cmp
push
xor
sahf
add
sbb
pop
les
cmp
mov
jmp
cwde
mov
in
aas
and
fwait
or
cmp
xor
push
mov
push
cmps
push
mov
fwait
add
xchg
arpl
aam
pop
enter
rcr
mov
ins
mov
mov
mov
je
jmp
int3
xchg
dec
mov
adc
out
mov
pop
shr
xor
sahf
shl
pop
xor
mov
pop
je
add
stos
jns
mov
inc
and
in
cld
add
icebp
dec
lods
add
jge
dec
add
(bad)
mov
clc
mov
gs
fs
int
popa
push
mov
xchg
inc
add
cmp
cwde
pushf
mov
inc
popf
push
int3
(bad)
arpl
out
outs
xor
cdq
loop
dec
outs
sbb
cmc
(bad)
hlt
add
cmps
push
xchg
in
inc
leave
pop
cmp
lods
test
push
fs
inc
inc
lea
cmp
xor
adc
dec
stos
mov
popa
scas
ins
leave
icebp
adc
mov
mov
sahf
jno
(bad)
aad
and
dec
jns
fisubr
push
pop
jno
dec
aaa
movs
or
cwde
mov
mov
inc
dec
out
push
cli
lods
fld
jbe
stos
int
dec
xor
and
cs
and
aam
outs
mov
push
dec
clc
iret
(bad)
fidiv
into
push
cmc
sbb
mov
adc
enter
js
jmp
sar
xchg
adc
scas
test
sbb
(bad)
and
retf
and
pop
xchg
or
mov
push
shl
cmp
push
leave
movs
in
mov
and
xchg
in
test
mov
pop
jle
rcr
in
jns
inc
loopne
and
movs
lea
fwait
in
cmps
xor
outs
pop
push
pop
aam
test
out
ret
mov
push
lods
in
cmp
cmc
jns
aas
sub
movs
xchg
aas
sub
(bad)
lods
lds
cmp
mov
or
pop
mul
in
mov
enter
sub
sbb
pop
push
pop
lock
xor
and
push
enter
je
out
cmp
adc
lods
pop
pop
push
std
ror
popa
mov
xchg
jmp
aam
inc
pop
pusha
push
scas
out
(bad)
pop
fs
cmp
call
or
jb
lods
mov
mov
adc
mov
dec
movs
dec
sub
cs
add
fisubr
ins
or
adc
iret
jb
mov
cmp
inc
loopne
mov
xchg
xor
int
outs
xor
jle
push
jg
dec
pop
xchg
inc
xor
ja
bound
in
inc
add
and
mov
and
cwde
shl
retf
inc
mov
mov
mov
(bad)
out
test
push
aad
or
adc
sub
cmc
cld
jmp
inc
call
fcmovnb
push
pop
pop
push
stc
popf
out
sbb
or
pop
sti
aas
mov
pop
out
mov
mov
pop
out
or
jp
ds
push
rcr
movs
retf
rol
adc
fs
cmp
jp
or
mov
loop
push
cmp
mov
adc
mov
xor
gs
add
push
jge
xchg
ss
adc
sub
div
mov
cwde
xchg
mov
cmp
push
loope
dec
adc
jae
pop
stc
(bad)
ds
and
mov
mov
test
mov
ret
outs
lea
js
idiv
xor
aaa
sahf
cmp
add
pop
loopne
mov
push
arpl
in
out
fisub
sub
out
lods
fld
dec
inc
and
iret
movs
in
stos
pop
fsubr
mov
loopne
movs
adc
cmc
lock
(bad)
adc
mov
dec
add
out
mov
hlt
cmp
out
hlt
aas
in
call
das
mov
lock
(bad)
mov
mov
clc
sbb
xchg
cs
test
rol
in
mov
xchg
xchg
ja
mov
test
push
mov
dec
add
aad
fsub
jb
leave
add
inc
rcl
mov
pop
int3
(bad)
aad
push
inc
arpl
fild
enter
sub
mov
stc
aas
cld
dec
jg
inc
pusha
cmc
xlat
adc
jmp
and
aad
ja
and
xor
lock
enter
imul
sbb
addr16
push
jg
(bad)
push
dec
in
or
dec
cwde
push
mul
(bad)
iret
cmp
fbstp
adc
push
cmps
and
add
push
sub
std
test
and
fidiv
rcr
rcl
ss
call
aad
xchg
push
scas
mov
sub
pushf
push
cwde
pop
push
mov
mov
dec
mov
test
fsubr
(bad)
cmp
mov
ret
clc
jg
adc
clc
in
and
shr
dec
imul
cmp
mov
popa
test
mov
inc
retf
imul
push
sub
aaa
jp
adc
adc
sbb
mov
(bad)
retf
call
push
ja
sub
daa
scas
inc
xor
push
inc
cmps
pop
movs
mov
loop
gs
popf
jmp
mov
mov
mov
shr
daa
scas
mov
loope
mov
mov
or
adc
jns
inc
dec
sbb
add
loopne
(bad)
aad
push
cmp
ja
mov
inc
outs
push
divps
or
dec
in
jae
dec
je
push
sub
push
jnp
dec
push
cmp
pop
xor
pop
out
mov
mov
fdiv
out
cmp
xchg
mov
pop
xor
pusha
nop
fiadd
ja
pop
pusha
outs
dec
leave
pop
mov
push
shl
movs
or
mov
in
mov
adc
hlt
add
popf
dec
out
nop
dec
xchg
sbb
div
dec
and
add
pop
test
pop
bound
sub
ror
in
dec
mov
outs
cmps
loope
push
call
leave
add
cmp
mov
aad
jecxz
sub
aas
movs
cmp
ret
add
dec
mov
push
shr
or
inc
push
div
cmp
and
rep
push
arpl
sbb
clc
inc
pop
js
jnp
mov
fmul
mov
or
cmp
fisttp
cmps
adc
sub
sub
sbb
fnsave
and
sub
adc
cmp
rol
mov
sar
or
cmp
cs
fldenvw
popa
xor
cs
cli
pop
or
cmp
imul
lods
mov
hlt
jl
pop
test
or
in
lods
shl
int
jl
(bad)
je
cdq
pop
cdq
adc
call
push
xchg
jecxz
icebp
jns
outs
inc
sar
xor
int3
jg
jp
aad
xor
dec
sbb
cmc
mov
jp
out
sbb
int3
dec
int
repz
mov
inc
xor
jp
jmp
and
push
jle
and
xchg
test
fist
mov
rcr
xor
pop
into
inc
test
xor
cmp
pop
movs
inc
repnz
sub
(bad)
(bad)
fdivr
scas
sub
sbb
je
imul
es
cmc
mov
add
pushf
les
pop
inc
retf
cmp
(bad)
dec
cmps
(bad)
mov
xlat
in
ja
jmp
sbb
(bad)
mov
mov
jno
test
stc
mov
pop
mov
or
or
inc
push
js
mov
stos
sahf
push
sbb
or
js
imul
out
cmp
fimul
mov
push
adc
push
push
(bad)
fdiv
cdq
pop
mov
cwde
cwde
arpl
mov
adc
and
dec
mov
cmps
inc
div
rcr
lock
mov
add
cmps
push
push
call
jecxz
outs
push
or
inc
lods
(bad)
pmaxsw
cmp
push
fs
cmps
pop
and
add
lea
inc
ror
movs
dec
and
xor
pusha
loopne
xchg
dec
jo
sbb
(bad)
xor
enter
int
mov
adc
jmp
call
into
popa
lods
movs
add
mov
loopne
pop
mov
adc
aam
push
fstp
movs
xchg
pop
les
test
retf
dec
loop
xchg
das
sbb
aad
jge
sahf
shl
lds
inc
in
shr
int3
xor
divps
ror
dec
dec
in
mov
in
mov
icebp
inc
dec
es
jae
dec
and
cld
(bad)
in
aam
call
out
sahf
test
in
mov
xchg
or
mov
cs
rcr
loopne
xlat
mov
das
xchg
pop
pop
cli
push
pop
cmp
jb
xchg
xchg
movs
xlat
inc
jns
push
and
mov
pop
sub
call
mov
mov
in
arpl
inc
inc
pop
(bad)
or
push
rol
pop
xor
push
jb
fisttp
ret
or
out
rol
push
push
sub
out
jg
loope
ret
push
fwait
sub
add
(bad)
aaa
inc
push
nop
test
das
sbb
out
aam
or
lods
adc
fucomp
and
push
or
or
pop
sub
gs
fld
and
test
arpl
outs
inc
sbb
jecxz
pop
enter
pop
lea
in
cmp
icebp
or
mov
xor
into
pop
lock
sub
adc
lods
or
sti
cmp
sub
mov
fnsave
jno
jno
(bad)
in
movs
das
mov
xlat
jo
mov
aaa
std
adc
mov
xor
cmp
mov
inc
sub
lock
xor
stc
rol
sti
push
scas
dec
ins
std
nop
scas
les
add
push
enter
leave
push
sbb
ror
mov
daa
jmp
outs
gs
adc
(bad)
and
pop
js
cmp
stc
adc
or
mov
xor
jle
push
es
imul
dec
imul
jbe
hlt
call
sahf
es
mov
jp
ins
mov
out
test
sub
int
frstor
adc
sbb
push
out
or
add
sub
enter
lock
(bad)
sbb
arpl
popa
out
mov
lds
sub
scas
adc
out
call
jne
push
push
add
test
and
sar
in
iret
fbld
adc
cmc
jle
arpl
shl
lds
ret
js
xor
add
xor
dec
es
retf
dec
pushf
xor
dec
outs
test
cmp
or
repz
shr
shr
jb
iret
(bad)
xchg
sar
or
fidivr
jl
iret
test
inc
mov
xchg
shl
fs
jge
and
inc
in
into
js
movs
rol
xchg
sbb
outs
push
add
dec
ret
ret
in
pop
int
popa
(bad)
pop
cmp
mov
das
fs
or
dec
adc
mov
aad
xchg
push
cs
les
or
ret
cmp
inc
adc
test
in
or
sub
sbb
inc
jne
fsub
loope
rcl
call
loop
cmp
aaa
out
xchg
gs
aas
cwde
mov
mov
xchg
add
ins
arpl
mov
sub
adc
mov
jmp
add
jne
idiv
sbb
scas
push
outs
adc
xor
xchg
(bad)
mov
out
gs
and
cmc
daa
push
mov
popa
add
jg
ret
mov
js
mov
adc
(bad)
push
cmp
ss
cmp
scas
aaa
popa
(bad)
sbb
fnsave
or
stc
dec
jle
scas
retf
or
and
xor
scas
(bad)
push
outs
mov
xor
sbb
add
in
and
ret
cdq
push
les
mov
xchg
push
fisttp
xchg
js
mov
pusha
ja
push
test
mov
or
fucomp
int
push
or
xor
push
pop
fnsave
ret
cmp
or
ret
jge
or
mov
and
aam
fcmovnu
adc
jg
jbe
loopne
das
(bad)
lds
into
test
fnsave
cli
(bad)
cmp
xor
loope
ficom
stos
or
std
nop
fsubr
cmp
jo
test
cmp
pop
leave
pushf
test
imul
jno
scas
push
jmp
pop
pop
sub
mov
mov
push
jp
mov
jne
pop
adc
push
loopne
pop
cmp
push
mov
xchg
mov
mov
shl
ja
cmp
ror
es
xchg
retf
test
sbb
adc
(bad)
(bad)
pop
cmp
jns
stos
aad
cmp
ret
mov
popf
bound
int
test
ja
gs
inc
icebp
dec
sar
bound
gs
fptan
xor
(bad)
jl
repnz
xchg
shl
iret
xor
pop
aaa
es
xchg
test
repz
rcr
inc
xchg
and
scas
(bad)
adc
inc
mov
dec
inc
loop
jp
(bad)
iret
sbb
jl
fidivr
test
out
jg
pushf
sbb
push
xchg
jmp
cmp
sub
test
push
ret
jg
es
mov
sub
dec
pop
fstp
push
add
ins
(bad)
adc
scas
in
push
cld
in
sbb
cs
inc
aaa
jl
or
or
(bad)
xchg
out
sub
xchg
lds
push
jmp
inc
or
lea
test
movs
or
data16
xor
in
fs
jbe
gs
retf
push
inc
mov
jae
stos
dec
push
je
sub
movs
js
fst
jno
leave
aam
in
mov
(bad)
lock
push
mov
retf
neg
mov
das
xchg
mov
neg
cmp
rol
push
stos
fwait
jmp
jmp
ins
pop
xchg
stos
mov
fdiv
push
sbb
jae
pop
aam
and
pusha
mov
test
cmps
inc
arpl
push
jmp
and
(bad)
xor
fwait
(bad)
ror
mov
cmp
ret
push
adc
jae
pop
inc
dec
adc
fidiv
in
cmps
and
jmp
cmp
xor
pop
mov
push
inc
xchg
xor
mov
add
xor
add
in
jle
out
pop
sar
xor
and
sbb
fidiv
lock
clc
ds
imul
dec
xchg
mov
fldenv
loop
xor
lea
fisttp
mov
push
scas
inc
mov
shr
call
mov
call
mov
dec
test
inc
inc
loopne
xor
inc
add
fist
cmps
xor
ja
aas
xor
dec
mov
out
push
in
sbb
stos
adc
xchg
mov
aaa
ror
int3
je
mov
jbe
inc
sti
xor
sub
pop
mov
cmps
stc
(bad)
sbb
mov
xor
mov
xor
ret
jbe
cld
inc
int
cmp
stc
cmp
aaa
inc
mov
ins
movs
mov
mov
mov
dec
test
and
jmp
mov
pop
int3
scas
mov
retf
mov
jns
dec
out
pop
sub
dec
xchg
cld
cmp
fbld
lods
or
femms
pop
sub
sbb
mov
ds
jae
push
popa
xchg
(bad)
sbb
minps
shl
jmp
mov
imul
repnz
cli
sub
inc
popf
jb
add
(bad)
mov
fcom
xchg
mov
push
xor
pop
pop
or
xor
push
xor
jbe
lods
in
mov
pop
adc
rep
fmul
sahf
or
test
jns
fs
clc
mov
push
push
add
rcl
movs
push
cmp
fld
js
sbb
fidiv
mov
add
das
call
xor
cmps
push
aas
lods
add
mov
mov
dec
dec
bound
in
dec
inc
aas
div
mov
dec
push
iret
mov
or
sub
stos
mov
pop
enter
jne
(bad)
xlat
ret
rcl
lock
popf
outs
jge
mov
imul
and
xor
lods
inc
dec
xlat
dec
mov
(bad)
and
mov
push
push
push
and
mov
xor
xchg
jnp
fs
scas
mov
jl
jbe
das
pop
retf
dec
fst
into
push
das
jns
test
shr
(bad)
in
xchg
or
push
dec
mov
push
loopne
loope
and
jbe
adc
xor
call
adc
cmp
adc
push
stos
sub
loopne
pop
ret
push
add
sub
mov
jnp
out
inc
fcomp
fcmovnb
xchg
add
and
ss
push
sub
out
pop
inc
sbb
jge
daa
sbb
dec
lea
pop
add
xchg
leave
mov
add
and
mov
mov
cmp
dec
clc
cmp
loopne
mov
pop
cwde
mov
jnp
lock
jo
mov
and
idiv
inc
test
mov
imul
xor
sbb
ds
pop
stos
ins
cli
in
lds
scas
fdivr
aad
leave
or
mov
dec
add
push
dec
(bad)
jmp
sbb
sub
mov
push
xlat
hlt
in
ror
mov
cli
adc
jae
add
inc
mov
addr16
std
test
js
sub
inc
pop
xchg
in
fst
push
cs
int3
ds
mov
add
bound
test
xor
ret
and
and
xor
scas
ins
ret
and
or
test
or
push
mov
out
push
retf
add
xor
push
ins
mov
std
xchg
in
jnp
ja
stos
push
mov
push
push
ds
and
repnz
fcom
mov
aam
adc
dec
adc
push
pushf
aam
into
outs
add
adc
pushf
xchg
xchg
sbb
or
test
or
bound
push
cwde
push
pop
aad
jne
or
or
inc
mov
lea
or
mov
jnp
xlat
push
in
cli
inc
sar
pop
mov
add
pop
pop
adc
dec
fadd
imul
ds
adc
and
jae
xchg
out
xchg
push
clc
and
inc
popf
idiv
(bad)
jmp
imul
cmp
and
sahf
std
repz
mov
lds
push
adc
and
arpl
adc
or
popf
xor
mov
push
add
dec
stos
imul
pop
mov
ss
sbb
das
add
inc
sbb
pusha
in
rol
xchg
(bad)
jo
or
pop
out
rcr
xchg
aad
sub
pop
pop
stos
scas
(bad)
pop
push
ds
arpl
mov
fld
mov
cmp
(bad)
mov
(bad)
sti
int
add
adc
movs
pusha
mov
pop
pop
sbb
loope
inc
in
repnz
in
ins
xlat
fadd
jb
imul
aaa
adc
lods
mov
pop
mov
fcompp
sbb
ins
xchg
push
cmp
imul
adc
ret
out
dec
loopne
push
dec
fs
jnp
clts
pop
xchg
inc
test
repz
mov
mov
xor
pop
push
imul
jb
cmp
mov
sub
xchg
adc
push
jl
cs
jne
out
imul
outs
ins
inc
imul
pop
xlat
mov
pop
cmp
add
or
inc
jne
push
adc
pop
in
test
fnsave
and
push
out
int
pop
ss
(bad)
sbb
test
data16
push
pop
call
pop
mov
sub
sbb
dec
mov
jp
fistp
and
rcr
and
jb
cmp
aaa
push
aas
pushf
add
and
sbb
cmp
push
test
pop
in
lock
sub
shl
retf
stc
or
repnz
jne
mov
or
cli
jge
jp
push
mov
push
scas
mov
mov
pop
(bad)
or
sbb
cmp
sbb
inc
fnstsw
call
push
adc
shl
es
mov
outs
jle
popa
xchg
aam
mov
pop
and
rcr
(bad)
xchg
jle
pop
sbb
test
push
mov
mov
and
and
and
sub
xchg
inc
std
jns
cmps
add
adc
jg
arpl
ror
cli
and
add
xor
fsubrp
(bad)
repnz
mov
imul
cmp
push
adc
pop
fst
add
in
add
sbb
stos
(bad)
mov
xchg
in
mov
repnz
daa
cmp
dec
(bad)
inc
ret
aam
or
mov
not
cmp
adc
dec
dec
call
xchg
loop
rol
mov
fisttp
jo
loopne
movs
add
inc
outs
add
js
mov
ror
js
(bad)
xor
sub
(bad)
xchg
inc
retf
jne
xcrypt-cbc
cmps
(bad)
repz
pop
scas
lods
and
xor
inc
dec
sub
fdiv
cmp
jo
xchg
pop
sub
mov
mov
fdivr
mov
jae
in
fmul
movs
fs
push
lods
push
inc
pop
sahf
and
nop
fild
into
and
stos
mov
push
lahf
push
inc
dec
push
mov
mov
and
stos
add
stos
push
xlat
cmps
lods
and
push
or
sbb
xchg
push
leave
sub
rep
inc
xor
test
fdiv
mov
fcom
xor
dec
or
xchg
sbb
cmp
fdiv
cmp
adc
imul
(bad)
mov
das
pop
cmp
retfw
adc
adc
mov
cs
das
inc
es
mov
xchg
cmp
mov
ja
test
jmp
xchg
push
jmp
cmp
dec
in
outs
das
fild
hlt
daa
int3
in
scas
fsubrp
jns
sub
sub
xor
in
int
loopne
lods
adc
shr
stos
mov
fild
ins
int
cwde
shr
inc
cmc
sbb
add
leave
mov
push
test
or
leave
shl
add
loopne
ss
dec
call
cmp
mov
jge
xor
or
cdq
jne
es
xchg
mov
mov
mov
adc
mov
cli
fldcw
rol
xchg
add
bts
and
test
adc
inc
test
mov
dec
xchg
pop
shr
int3
cmc
sub
test
mov
fisubr
inc
cld
out
xor
jmp
cmp
retf
inc
data16
jb
pop
lahf
ins
enter
das
pop
add
cli
idiv
jno
ret
cmps
into
sbb
clc
xor
xor
pushf
sti
pop
pop
into
push
add
(bad)
mov
cmp
inc
fwait
mov
or
std
mov
(bad)
je
retf
iret
arpl
mov
mov
int3
push
das
idiv
out
or
stos
aaa
enter
add
movs
push
jg
mov
rdmsr
xchg
bound
sbb
stos
stos
retf
sub
mov
xor
sub
or
jmp
lahf
into
cmps
in
mov
cdq
stos
add
retf
in
sub
in
jl
daa
fldcw
scas
push
and
and
les
inc
cmp
sahf
idiv
test
jno
push
xchg
sar
mov
cmp
and
iret
mov
ds
shl
jp
adc
dec
loop
jecxz
enter
sbb
hlt
jne
retf
pop
jbe
scas
mov
xchg
fwait
xchg
jmp
(bad)
jmp
dec
mov
inc
popa
daa
dec
jecxz
movs
dec
mov
or
out
fisttp
rcr
mov
sub
mov
loop
ds
shr
inc
add
or
bound
pop
xchg
out
ret
push
ror
daa
(bad)
out
xchg
out
icebp
sbb
cmps
pop
jbe
push
xchg
mov
gs
shl
les
call
dec
inc
rcr
sub
dec
ret
outs
dec
jge
pop
outs
ins
mov
test
fdivr
fldcw
int3
ror
xor
(bad)
jnp
sub
leave
adc
(bad)
cmp
xor
cmp
aaa
pop
and
mov
test
movs
xchg
push
repnz
leave
lods
pop
ja
ins
loop
mov
shr
not
cmp
push
mov
loop
xlat
hlt
pusha
xchg
shr
in
nop
sbb
sbb
add
sub
daa
scas
lods
sub
into
sub
pusha
or
jecxz
mov
retf
sbb
or
xchg
fs
dec
(bad)
adc
push
jbe
and
cmps
mov
lods
pop
ret
sub
xlat
je
pop
aam
test
or
rcr
jo
lods
adc
mov
iret
xchg
push
ror
cmp
ret
cmp
ror
or
je
dec
or
retf
push
xor
adc
jne
test
jo
out
es
mov
jg
jnp
mov
ret
inc
repz
test
dec
int
in
jg
xchg
cdq
call
jle
mov
retf
rcr
repz
xor
adc
add
jne
cmc
pop
popa
sub
dec
push
leave
retf
dec
test
clc
sar
jp
in
fcom
mov
test
mov
cmp
jns
jne
mov
and
enter
pop
ret
je
push
adc
add
cli
mov
repnz
gs
(bad)
out
mov
stos
rol
inc
mov
ret
xor
mov
call
test
in
enter
cmp
sar
(bad)
xchg
adc
and
mov
sar
imul
int
jo
repnz
ins
test
mov
rcr
add
inc
pop
xor
in
push
inc
mov
or
inc
(bad)
xchg
ins
icebp
xchg
outs
jge
xchg
pop
in
sbb
push
call
es
aas
aaa
add
in
mov
jne
dec
ds
push
sbb
or
dec
cmovl
jno
lods
in
mov
mov
ins
push
lahf
xor
inc
add
(bad)
cmp
mov
inc
(bad)
fs
loop
retf
idiv
bound
mov
mov
cld
inc
shl
test
lds
jge
test
inc
icebp
xchg
xor
ffree
sbb
cmps
jno
sahf
adc
mov
mov
rcr
jle
aam
data16
mov
push
mov
jno
adc
cmp
mov
mov
sbb
(bad)
outs
dec
dec
or
sub
pop
test
aam
je
aad
repz
mov
or
cmp
lock
arpl
lods
push
out
adc
xchg
mov
sub
xchg
jne
inc
lds
iret
fsub
cmps
add
sub
dec
pop
leave
in
sahf
inc
fwait
cdq
fild
pushf
in
xchg
pop
xchg
out
cmc
ds
xlat
gs
lock
pop
sbb
mov
out
pop
sbb
retf
cmp
ds
mov
cmps
loop
inc
adc
std
aas
loope
in
fwait
push
push
push
clc
pusha
inc
sbb
or
addr16
cwde
push
lea
xor
es
push
mov
(bad)
sbb
ins
push
jmp
vpsubsb
repnz
rcr
pop
rcl
(bad)
or
inc
cmc
fild
dec
fsubr
or
aad
jae
xchg
xor
(bad)
push
push
aam
pop
fwait
push
inc
sbb
xchg
out
xchg
cdq
jo
sbb
in
call
or
cli
inc
repnz
repnz
or
leave
loopne
cmps
movs
inc
int3
and
rcl
jge
fist
repz
inc
fwait
stos
(bad)
cwde
in
je
mov
sub
cmp
and
fstp
push
push
mov
sub
fxch
aad
push
or
cmp
lock
pop
ja
cmp
xor
xor
outs
cmps
clc
(bad)
fistp
jmp
rcr
mov
inc
jp
xor
mov
imul
xchg
outs
jp
lea
dec
pop
test
retf
repnz
cmps
push
mov
inc
test
cli
stos
int
lea
mov
mov
add
jo
pop
add
fdiv
push
jo
adc
mov
iret
imul
add
mov
cmp
ds
dec
sub
aas
jnp
cmp
pusha
outs
in
rcr
stos
cmps
icebp
int
call
outs
(bad)
mov
mov
jle
outs
fidivr
push
and
stos
sbb
aam
adc
xlat
retf
sbb
data16
call
push
cmp
les
call
cmps
je
(bad)
pusha
mov
es
scas
adc
imul
movs
sub
pushf
adc
cwde
leave
adc
int3
ret
sbb
cmps
fs
adc
adc
add
int
mov
xor
in
in
out
cmp
ins
or
push
pop
ret
add
pusha
sub
and
lock
aad
cmc
repz
sbb
int3
mov
or
std
(bad)
out
sbb
jg
or
pushf
ss
cmps
hlt
std
lods
adc
mov
pop
idiv
sbb
cmp
pop
retf
inc
pop
dec
(bad)
aam
jl
push
sbb
rol
dec
sti
out
push
fsubr
std
add
mov
pop
mov
mov
fistp
mov
jmp
fcom
mov
xchg
ror
adc
aaa
push
xlat
fninit
(bad)
dec
not
nop
outs
sub
test
lea
shl
jmp
and
push
in
mov
gs
lods
fnstcw
jmp
rcr
div
jne
push
fst
adc
or
cmps
dec
rol
fwait
stc
fs
inc
pop
inc
cmps
out
fbld
xor
aad
dec
inc
pusha
and
dec
pop
shl
cmps
sub
mov
mov
in
ficom
fwait
push
xchg
push
dec
add
jnp
jle
mov
adc
(bad)
sub
fs
adc
and
mov
ins
test
push
mov
es
dec
icebp
pop
shl
mov
and
fimul
jbe
sub
xor
mov
pop
cmp
mov
push
jge
sbb
and
sub
(bad)
mov
mov
in
sti
cdq
stos
mov
inc
and
enter
and
jno
call
arpl
test
and
fs
and
or
dec
push
jmp
xchg
cli
sub
adc
mov
outs
loope
jge
test
push
jp
inc
fwait
aam
out
push
test
and
sub
div
dec
add
jb
lods
push
inc
push
test
sbb
xor
dec
(bad)
or
cmp
push
cmp
mov
sahf
popa
ds
adc
pop
pop
xchg
jnp
fsubr
mov
pop
neg
sbb
xor
sbb
pop
push
and
push
(bad)
cli
cld
push
call
or
and
mov
ja
fdivr
cs
fisttp
sub
cld
sbb
pop
stos
mov
fsub
mov
cld
jp
add
and
mov
sub
es
push
push
sti
out
xchg
pop
xchg
push
scas
sti
(bad)
(bad)
fcom
stc
add
xchg
dec
adc
leave
push
loopne
adc
fisub
(bad)
into
jl
adc
lds
pop
mov
mov
ins
push
loop
lds
pop
cmp
clc
cmps
pusha
movs
sub
dec
inc
mul
jb
sub
gs
lock
call
xor
aaa
(bad)
cmps
mov
rcl
cmp
mov
cli
mov
lahf
mov
inc
imul
mov
inc
repnz
sar
arpl
or
cmc
aam
or
xlat
or
xor
js
dec
jp
clc
mov
mov
lea
xchg
xchg
push
pushf
scas
lea
and
lock
mov
out
mov
inc
repnz
stos
das
mov
xchg
xchg
shr
repz
fwait
daa
fimul
sub
adc
xchg
call
mov
fadd
mov
mov
adc
push
jnp
iret
xchg
cld
imul
loop
addr16
icebp
dec
and
xor
or
out
dec
mov
pop
mov
adc
sub
(bad)
sub
jmp
push
cmp
(bad)
retf
and
jge
pop
stos
lahf
fcmovnu
cmps
pusha
addr16
call
int3
cmp
out
sbb
lods
ret
gs
fild
test
pop
mov
addr16
mov
call
je
(bad)
push
daa
xchg
or
les
shl
sub
push
push
jecxz
loope
pop
out
arpl
or
xchg
fwait
stos
lds
push
jo
lds
lods
jnp
inc
shr
out
repz
fldcw
push
and
adc
icebp
cs
fsubr
xchg
and
test
iret
movs
inc
xchg
mov
cli
sahf
(bad)
xchg
fild
je
xchg
push
jae
dec
and
scas
cmps
js
mov
sbb
dec
bswap
or
mov
pop
lahf
jg
jmp
mov
xchg
jne
jae
add
mov
cmc
frstor
inc
imul
lahf
mov
add
ror
push
cld
stos
dec
push
cli
mov
jns
cli
mov
add
mov
ficomp
inc
mov
das
ss
je
pop
ja
jno
and
jns
stos
jmp
cmp
lods
gs
cwde
inc
aad
retf
(bad)
dec
(bad)
jecxz
mov
inc
dec
pop
int
cmc
push
lock
pop
sahf
mov
mov
mov
jecxz
mov
fidivr
clc
mov
push
sub
push
jb
jmp
movs
push
punpckhwd
popf
rcl
cmp
xchg
loop
pop
xchg
jmp
push
out
sbb
xchg
jecxz
xchg
or
or
clc
cmps
xlat
or
adc
mov
sbb
(bad)
xchg
and
jnp
dec
(bad)
data16
scas
mov
cmps
pop
aam
push
jp
cmps
push
cmp
in
sbb
sahf
inc
xchg
gs
sbb
lods
mov
jns
or
pop
cmp
lods
call
cld
in
clc
dec
es
cmp
fstp
bound
(bad)
jae
(bad)
jmp
es
push
popf
mov
shl
xchg
jg
cmps
scas
mov
jmp
mov
pop
out
leave
jle
mov
aad
mov
imul
jmp
or
movs
mov
repnz
arpl
in
outs
imul
push
in
lds
push
cmps
inc
repz
push
jmp
int3
ss
mov
in
sar
or
popf
arpl
js
ds
jns
pusha
retf
fbstp
std
idiv
sbb
sahf
sub
jle
jo
call
test
xor
mov
jge
bound
push
mov
lods
dec
test
xchg
neg
rcr
push
sub
fnsave
cmps
retf
call
cs
out
cmc
outs
sub
xor
pop
in
lock
add
or
cmp
push
(bad)
into
inc
mov
xor
fbld
push
cmp
or
sbb
adc
mov
lods
mov
pop
aas
ret
dec
xor
dec
lods
jae
clc
fidiv
clc
sahf
mov
movs
or
sub
inc
and
jmp
or
sbb
sub
cmp
sar
stc
push
cs
(bad)
(bad)
jp
mov
pop
inc
jnp
xor
sbb
add
xlat
stc
mov
dec
dec
and
dec
xor
mov
jmp
stos
pop
test
sub
mov
repnz
stos
sar
dec
dec
(bad)
cmp
je
pop
lock
js
jns
jp
in
jge
scas
addr16
ret
cmc
inc
pushf
jnp
or
mov
jge
(bad)
test
xlat
stos
mov
or
xchg
sub
adc
fucomi
jecxz
jl
(bad)
xor
mov
push
pop
inc
test
inc
push
je
dec
mov
sbb
sbb
mov
hlt
cmc
repz
mov
pop
daa
sbb
outs
dec
aad
(bad)
cdq
xor
imul
int
xchg
sbb
and
push
test
ficomp
inc
add
and
xor
sbb
aam
imul
mov
cmps
loope
mov
sub
cmc
mov
cmp
retf
cdq
mov
in
sbb
sbb
loope
rcl
cwde
dec
adc
icebp
scas
xchg
popa
adc
lods
ret
push
call
xchg
aaa
pop
adc
fdiv
push
test
inc
pop
jmp
loopne
mov
mov
sti
jbe
inc
and
adc
shr
je
aaa
add
sub
add
push
or
xor
js
mov
icebp
jnp
add
mov
jg
dec
push
mov
(bad)
xor
dec
add
jge
jae
es
push
out
addr16
fsubr
and
inc
push
xor
jne
pushf
push
and
pusha
call
dec
push
inc
or
xor
xor
sub
retf
call
jle
fild
xchg
mov
(bad)
mov
outs
jg
int3
xor
cmc
repz
arpl
outs
jne
cmc
add
and
icebp
cmps
test
in
out
and
movs
or
sub
ins
les
imul
and
out
push
vpaddb
sub
sub
hlt
imul
outs
push
fsub
sub
push
or
mov
and
sub
mov
arpl
or
add
xchg
mov
jmp
push
cmp
xchg
add
nop
dec
rcl
mov
fst
cmp
sbb
test
pop
cli
into
mov
dec
or
pop
xchg
mov
outs
add
xor
out
mov
ret
sbb
(bad)
mov
pop
cmps
cmps
imul
je
cmp
mov
mov
jge
in
mov
push
push
into
xor
std
add
aaa
movs
out
popa
scas
lds
sub
push
stos
jecxz
fmulp
push
mov
inc
fnstenv
out
ret
xor
inc
cld
mov
mov
dec
bound
repz
into
adc
shl
cmp
cmps
jmp
xor
dec
in
or
cwde
or
test
push
call
addr16
int3
mov
pop
fsub
sbb
(bad)
outs
rcr
test
into
xlat
fild
sbb
bound
jl
(bad)
stos
ss
mov
pusha
push
call
imul
push
jae
ins
lock
gs
pop
xchg
hlt
cld
jle
movs
addr16
push
mov
leave
fcomp
lock
dec
mov
ja
mov
jb
xchg
out
mov
cmps
mov
pushaw
lahf
dec
loop
cmp
imul
mov
fistp
cmp
sub
sub
repz
add
das
lods
cli
dec
fldcw
addr16
arpl
mov
(bad)
adc
jmp
and
sbb
lahf
push
mov
add
pushf
jg
pop
push
pop
mov
or
aas
mov
jb
iret
jle
cli
jnp
jnp
jmp
mov
dec
and
mov
clc
jmp
dec
cli
xchg
cmp
xor
cmp
dec
pop
add
cmp
adc
icebp
(bad)
fwait
mov
sub
xor
ret
fdiv
in
dec
xchg
fisub
dec
xchg
xor
jae
popf
out
shl
fst
fsubr
sub
jmp
push
mov
clc
das
(bad)
lods
movs
(bad)
fisttp
mov
bound
xchg
jg
and
pop
xor
fmul
jl
push
mov
sub
daa
test
mov
retf
xchg
mov
int
adc
xor
fwait
jne
xor
out
mov
mov
jmp
pop
into
xchg
cmc
retf
sti
sbb
cmp
dec
sahf
jecxz
or
dec
sbb
and
push
ds
cwde
bound
mov
mov
or
jmp
push
xchg
sahf
adc
xor
push
sub
lahf
mov
sbb
and
push
rcr
fsub
aaa
in
arpl
nop
push
and
movs
enter
add
loope
cmp
dec
xor
add
and
add
jmp
cmps
leave
in
sbb
ror
popf
or
mov
xor
jo
cmp
pop
call
into
gs
imul
shl
pop
fucomi
xchg
push
sbb
ret
(bad)
test
xchg
lahf
sub
jmp
aas
push
cli
add
popa
retf
push
imul
rcl
fwait
xchg
loop
or
pop
dec
mov
mov
or
push
cmps
jmp
cli
add
jecxz
je
lahf
mov
inc
and
cmp
mov
jnp
pop
test
fs
jae
sbb
shr
movs
f2xm1
dec
xchg
je
mov
dec
arpl
xor
std
jnp
int3
es
div
clc
add
add
mov
jb
push
pop
xor
push
scas
and
inc
scas
nop
test
mov
adc
mov
movs
mov
mov
cmp
pop
fadd
push
fbstp
pushf
int3
sahf
fisub
movs
fmul
and
dec
mov
es
jb
fnstsw
shl
pop
jl
xchg
jle
jg
inc
adc
sub
xlat
mov
movs
jge
into
shl
dec
pop
(bad)
sub
xor
adc
loopne
sbb
imul
add
loopne
adc
test
add
(bad)
fwait
push
sub
cwde
or
push
out
push
lock
cdq
(bad)
pop
retf
mov
mov
loop
dec
push
inc
dec
jb
fisttp
mov
movs
cmc
dec
push
mov
xor
int
push
ja
je
mov
xchg
cmp
fiadd
bound
push
push
mov
inc
sbb
pop
std
or
cmps
sbb
sbb
adc
jno
mov
ror
fisttp
push
hlt
push
movs
push
mov
inc
adc
shl
std
xor
jmp
cdq
fwait
push
cdq
mov
mov
cmp
stos
mov
cmp
mov
retf
inc
xor
mov
dec
inc
push
ret
sub
out
xchg
xor
dec
retf
cmp
test
retf
push
arpl
add
mov
stos
sbb
shl
lea
movs
cmp
retf
cmp
das
jecxz
fcom
(bad)
stos
inc
sbb
mov
xchg
cli
xchg
dec
test
cmps
pop
mov
out
pop
das
pop
cdq
push
mov
aas
xchg
fst
jno
clc
add
daa
std
stc
int3
pop
cmp
imul
fisub
pushf
jbe
push
cmps
(bad)
and
adc
sbb
push
std
test
das
test
add
popf
push
mov
mov
pushf
lods
(bad)
lods
pusha
imul
fcmovnbe
test
pop
ret
(bad)
call
jp
mov
and
or
(bad)
xchg
jb
and
xor
lahf
add
jge
xchg
aam
mov
cdq
movs
loope
cwde
sub
push
retf
inc
cmp
mov
mov
addr16
jp
or
add
lock
jmp
int
pop
or
push
(bad)
out
mov
push
and
jno
jne
es
and
(bad)
mov
or
lods
cmp
mov
stc
loope
cmp
test
sub
push
shr
mov
cmc
xchg
mov
ins
cmc
scas
push
pop
outs
or
push
xchg
jne
sbb
pop
pop
push
mov
push
scas
and
(bad)
iret
test
cdq
push
nop
cwde
imul
in
and
retf
mov
mov
mov
jnp
(bad)
jl
or
cmp
fisubr
xor
add
jmp
and
cdq
(bad)
ror
adc
clc
mov
call
xor
jle
outs
movs
movs
adc
aaa
(bad)
cld
rcr
add
cld
f2xm1
or
mov
pop
cmps
outs
jns
jbe
test
dec
sub
rcr
arpl
push
and
push
mov
mov
call
(bad)
scas
dec
add
pop
jg
cmp
mov
jmp
ss
xchg
fwait
jnp
dec
push
push
iret
mov
(bad)
mov
cmps
sub
sub
fcmovnb
call
sahf
repnz
imul
jo
push
mov
mov
jle
imul
jmp
and
mov
daa
mov
jae
shl
mov
retf
fsubrp
mov
push
xlat
call
sbb
test
out
imul
pop
pop
jp
popf
loope
fidiv
test
mov
not
xor
mov
xor
mov
pop
cs
push
sbb
(bad)
inc
xchg
mov
mov
pop
mov
sub
outs
mov
xchg
xor
mov
dec
push
jle
movs
pop
(bad)
adc
push
push
outs
lock
sbb
add
enter
pop
pushf
hlt
nop
aaa
lds
push
sub
push
and
mov
ja
mov
and
mov
jle
mov
push
pushf
ror
xchg
nop
retf
test
mov
(bad)
out
sbb
push
hlt
pop
xor
mov
add
jns
rcr
ins
or
out
xchg
loop
loope
dec
lahf
sub
ja
test
retf
sub
cmps
jp
add
xchg
in
and
sub
dec
xlat
js
lds
inc
adc
sbb
push
(bad)
stos
and
(bad)
jo
pop
daa
shr
sub
jb
out
xchg
ins
sbb
jne
jg
cwde
dec
imul
adc
mov
or
pop
add
mul
xchg
dec
jne
loopne
inc
pop
cmp
inc
sub
out
or
fucomp
daa
scas
and
sbb
sub
sbb
dec
push
fimul
in
bound
sub
mov
aas
mov
mov
into
xor
lea
fdiv
cmp
jno
push
sub
add
out
movs
in
lods
ins
sub
out
nop
(bad)
cmp
gs
cld
cmp
mov
mov
popa
cs
out
or
or
mov
sbb
cmps
sbb
dec
lea
out
add
and
loopne
ret
ret
fidivr
add
sub
mov
add
cmp
pop
adc
inc
in
sbb
pop
xor
push
into
or
add
mov
jge
rcr
fcomip
pop
pop
xchg
fisttp
(bad)
fs
cmp
inc
mov
mov
push
dec
xor
es
int
push
adc
dec
pop
mov
add
mov
fisttp
pop
inc
gs
pop
dec
adc
out
ins
(bad)
adc
aas
daa
push
mov
pop
pop
popa
packuswb
mul
pop
push
(bad)
rcl
das
cmp
push
push
push
dec
jmp
out
repnz
xchg
pop
std
mov
in
loopne
pop
fcom
cmp
push
arpl
fcmove
xlat
sbb
dec
cmp
add
mov
mov
inc
inc
or
pop
loopne
xchg
add
push
pop
mov
push
das
jo
push
bound
add
mov
sub
nop
dec
cs
sahf
ins
loop
in
fsub
inc
xchg
loopne
inc
(bad)
mov
sub
inc
wrmsr
sub
and
xor
dec
or
imul
out
mov
stos
test
fdiv
dec
mov
push
xchg
in
or
sbb
fsub
inc
out
mov
and
mov
cmps
in
fcmovbe
pop
add
sub
mov
rcr
out
jbe
push
sub
daa
loop
sub
popa
jbe
ins
fild
dec
or
aad
out
mov
aad
nop
sar
mov
and
dec
in
imul
lods
xchg
adc
sub
sub
sbb
fcomp
or
push
inc
int
lods
cmp
dec
sbb
mov
push
stc
ins
or
sbb
sub
dec
das
(bad)
repz
xor
and
std
pop
adc
arpl
std
enter
je
cmp
test
xor
and
cwde
push
rol
out
outs
pop
loope
mov
push
fidivr
mov
mov
in
imul
push
mov
shl
mov
gs
wbinvd
and
xor
pop
std
xchg
mov
sti
(bad)
dec
mov
div
sahf
in
cld
cmp
push
lea
shr
std
int3
je
cs
jl
int3
scas
or
(bad)
out
xor
and
mov
mov
test
push
ins
fistp
xchg
aaa
add
iret
jecxz
sbb
sar
fincstp
mov
test
outs
mov
and
outs
xchg
rcl
mov
mov
nop
mov
jge
xchg
int
out
adc
(bad)
call
test
popa
scas
cmps
inc
rcl
cdq
pop
xlat
xchg
ror
xor
dec
pop
fwait
jmp
dec
mov
(bad)
xor
dec
cmps
add
call
pushf
scas
jno
cmp
ins
dec
sbb
pop
ficomp
je
bound
fsub
jp
dec
push
mov
jno
lock
sahf
xchg
es
adc
out
mov
pop
pand
and
stos
inc
jmp
mov
and
dec
fild
aas
sbb
cmp
das
imul
pop
mov
jecxz
hlt
cmp
push
(bad)
xlat
cli
push
test
lock
dec
push
test
mov
int
movs
lock
xlat
shr
mov
fwait
sti
pusha
mov
cmc
fsubr
inc
xor
sub
mov
(bad)
stos
sahf
jmp
mov
pop
pop
cmp
add
cmp
push
mov
(bad)
fcomp
xchg
repz
pop
sbb
jl
imul
jae
pushf
add
loopne
adc
jmp
test
push
dec
fsubp
mov
fist
popa
(bad)
mov
xchg
inc
cmp
je
mov
push
test
ret
cmc
inc
stos
inc
sub
inc
nop
xchg
repz
and
jmp
add
dec
call
and
cmc
push
(bad)
into
enter
pop
ss
xchg
xchg
pop
(bad)
mov
ja
daa
shl
cmp
fwait
jmp
xchg
hlt
xchg
dec
ret
push
dec
jne
je
test
sbb
les
mov
mov
pop
stos
ret
cmp
push
test
adc
jl
dec
lahf
sbb
aad
sub
pop
push
lds
lds
dec
int3
fcom
rcr
dec
cmp
jecxz
repnz
jne
cli
shl
jp
add
lahf
fwait
ret
iret
add
es
ss
sub
sbb
mov
lods
add
jl
sub
push
aaa
sub
jmp
cld
std
xor
test
je
iret
jbe
mov
pop
neg
inc
repnz
cmps
inc
sub
fadd
rol
and
outs
ins
mov
adc
mov
xor
cmps
pusha
mov
(bad)
mov
(bad)
push
imul
ret
xchg
add
js
call
mov
rcl
out
test
sbb
adc
pop
les
push
or
je
mov
ror
arpl
movs
mul
in
adc
xchg
mov
push
sub
movs
cld
pop
adc
adc
lea
dec
pop
sub
jne
inc
ror
jo
mov
sbb
out
cmp
jmp
movs
jae
clc
push
pop
aad
jae
pop
and
mov
push
jnp
popf
lahf
and
loopne
fild
and
movs
div
in
sub
push
sbb
out
cli
mov
je
dec
scas
rcl
or
je
pop
je
push
jnp
add
ss
test
enter
lock
cwde
aaa
loope
inc
test
in
aas
dec
cmp
xchg
dec
and
pop
inc
sub
pop
push
out
push
dec
mov
or
push
and
cld
sub
push
and
pop
push
je
rcl
ror
test
jecxz
loope
popf
mov
test
push
pop
add
je
push
pop
cdq
fsubrp
addr16
int3
inc
ins
adc
sub
ror
fwait
scas
imul
stos
xchg
sbb
mov
sbb
fld
mov
pop
idiv
in
cs
inc
leave
loopne
mov
sbb
repz
mov
imul
dec
sub
xor
xchg
test
mov
push
movs
xlat
ds
and
push
jbe
ss
xor
das
(bad)
cld
jg
(bad)
test
daa
pop
daa
push
push
fcomp
ss
shr
push
jle
div
jg
xchg
(bad)
daa
nop
std
cmp
aad
push
push
xchg
(bad)
ret
movs
rcr
test
push
in
or
loopne
je
lea
xor
aam
jle
dec
xchg
mov
sbb
pop
xor
xchg
sar
movs
outs
inc
inc
movs
or
sub
in
push
pop
dec
cdq
mov
mov
add
fld
lahf
out
xor
in
das
mov
push
stos
cmc
movs
ja
out
pop
fisttp
sbb
adc
ret
xchg
loop
ins
leave
retf
sub
out
in
outs
mov
scas
xor
mov
shl
aad
sub
add
sbb
mov
xchg
bound
popf
sub
cld
push
int3
out
or
push
std
inc
les
adc
lds
mov
xchg
pop
in
pop
rcr
pop
mov
or
push
pop
bound
mov
out
xor
dec
stos
fidiv
std
fcomp
hlt
gs
(bad)
loopne
popf
ror
or
hlt
xor
mov
movs
sahf
gs
pop
pop
imul
jmp
sub
les
popa
sub
cmps
dec
js
ins
xor
and
stc
std
iret
call
jb
hlt
cli
inc
push
push
sub
lock
daa
mov
fmul
rcl
push
and
mov
adc
jmp
push
pop
rcr
bound
push
push
shl
inc
not
aaa
fisub
arpl
adc
or
mov
loop
arpl
lock
push
push
inc
nop
retf
add
xlat
not
push
dec
sar
mov
sbb
mov
aaa
xor
(bad)
or
fild
lahf
repz
repz
mov
inc
inc
shl
pop
mov
in
lds
into
add
sub
xchg
hlt
outs
sbb
sbb
push
aas
xor
iret
inc
jae
cmp
add
fiadd
dec
ret
jnp
es
jae
fsub
movs
dec
rcl
mov
push
les
inc
fs
(bad)
mov
mov
out
out
cmps
jnp
int3
push
movs
mov
add
dec
pushf
outs
xlat
mov
outs
add
test
data16
inc
mov
outs
dec
stc
xchg
je
push
xor
scas
lahf
mov
pop
or
(bad)
js
(bad)
bound
mov
fcmovu
in
aam
push
xor
mov
in
sbb
in
mov
pop
les
dec
inc
sbb
cmps
mov
inc
push
nop
mov
add
test
sub
sahf
out
sti
pop
xchg
inc
mov
push
popf
lea
mov
inc
popf
and
dec
cmp
xor
add
stc
xchg
fsubp
sub
mov
dec
cld
jl
in
and
push
(bad)
mov
(bad)
(bad)
mov
xchg
jecxz
adc
shl
dec
fcomp
xor
inc
mul
out
pusha
pusha
adc
enter
icebp
cmp
scas
pop
fstp
int3
lahf
frstor
inc
jecxz
mov
outs
dec
repnz
outs
sbb
push
pop
mov
mov
mov
cmps
mov
mov
leave
jmp
adc
daa
bnd
std
sub
dec
inc
stc
pop
data16
pushf
push
mov
xchg
jmp
mul
lds
jmp
rcr
fstp
outs
xor
jg
push
cdq
jecxz
dec
loope
adc
mov
push
loopne
test
cmps
or
retf
sbb
mov
jb
outs
scas
sub
idiv
fwait
aaa
sahf
push
push
cld
in
ret
inc
das
das
mov
lock
mov
pusha
inc
adc
adc
or
xchg
lods
fmul
xchg
mov
sbb
std
sub
push
rcl
jmp
pusha
data16
dec
fwait
in
shr
dec
sbb
add
(bad)
imul
in
push
dec
test
popa
sti
ret
xchg
and
cdq
sub
shl
sub
mov
sbb
push
mov
jae
jb
outs
push
fs
mov
std
dec
mov
outs
cmp
ds
adc
lea
cdq
rcr
icebp
cmp
sub
or
mov
fmul
lods
test
jb
and
pop
fnstenv
test
or
xor
push
add
mov
add
mov
outs
inc
adc
sub
lahf
lahf
mov
sbb
push
stos
push
int
mov
mov
jg
xchg
cmp
pop
movs
imul
xor
and
add
mov
and
cmps
mov
sahf
mov
push
ja
pop
xchg
retf
jg
ficomp
hlt
cwde
(bad)
jo
rcr
call
sub
or
fisttp
dec
or
xor
mov
into
xchg
call
or
sub
rcl
lds
fimul
(bad)
hlt
mov
rcr
in
jecxz
mov
pop
jo
ds
xchg
fisub
repnz
imul
retf
push
je
cmp
push
(bad)
jns
sbb
mov
push
(bad)
loope
inc
cli
xlat
ror
mov
jecxz
cdq
stc
call
fnstenv
cld
std
mov
xchg
ror
inc
aad
loop
xor
aad
push
inc
mov
cwde
icebp
jge
cmp
aaa
cmp
jns
cld
mov
add
cdq
scas
add
mov
pop
pusha
movs
pop
in
fcomp
test
dec
leavew
shl
pop
jmp
test
inc
jno
aas
js
mov
xchg
dec
or
jge
mov
fldl2e
jns
test
and
mov
jmp
jns
sbb
jmp
repnz
xchg
test
mov
leave
fwait
cli
stc
jne
pop
mov
cmps
shl
sbb
sbb
adc
aas
mov
or
xchg
test
mov
cmp
sub
sub
jo
push
jne
ret
lock
and
push
sbb
dec
rcr
xchg
fwait
inc
cmp
mov
pop
push
inc
(bad)
and
inc
sub
outs
out
push
sar
mov
push
and
inc
fimul
dec
add
retf
jl
jae
ss
add
and
sar
fisttp
jg
adc
es
jns
pop
and
mov
movs
int
pop
add
and
fs
cmps
sbb
and
and
mov
in
icebp
mov
mov
sub
or
mov
sub
push
sub
mov
xchg
imul
dec
icebp
es
push
movs
(bad)
pxor
adc
adc
aaa
and
shl
pop
mov
out
inc
loopne
scas
cmp
pop
daa
inc
push
push
pop
bound
or
add
sbb
inc
test
icebp
adc
dec
cli
or
aaa
mov
stos
mov
sbb
xor
xlat
push
or
fs
cmps
sbb
(bad)
clc
add
inc
mov
mov
mov
pand
pushf
sbb
enter
jno
out
sub
inc
xor
in
(bad)
out
and
add
add
sub
xor
int3
loop
stc
hlt
push
stos
sub
xabort
adc
ins
push
into
adc
test
(bad)
jl
fprem
sbb
cmp
pop
mov
dec
dec
mov
addr16
fwait
fwait
mov
ret
out
xlat
dec
lods
aaa
aam
fisub
dec
jmp
xchg
ins
pop
jle
mov
imul
loope
fcomp
not
clc
sub
jle
xlat
sub
enter
dec
mov
js
dec
push
mov
nop
push
and
xor
push
cmp
imul
mov
popf
sbb
mov
(bad)
xchg
movs
mov
outs
pushf
outs
cli
pop
push
scas
push
cmp
mov
mov
mov
fcomp
add
cmps
or
lods
xor
bound
iret
mov
xor
leave
movs
fidiv
int3
cs
pop
test
pop
cmp
btr
mov
stos
mov
pop
jge
fdiv
push
fs
movs
add
sub
in
scas
ins
sub
ror
loope
add
mov
push
mov
mov
dec
add
stos
mov
(bad)
clc
adc
mov
js
ss
push
pop
xchg
jbe
jl
xor
pop
inc
add
jb
stc
xor
add
(bad)
call
adc
adc
inc
xor
test
push
test
int3
jo
pop
js
ins
push
seto
std
js
adc
and
jmp
push
and
push
xchg
cmp
jo
and
mov
ficomp
and
mov
rcr
push
jb
popa
dec
out
or
and
adc
pop
gs
ret
lods
outs
inc
xlat
call
test
cmp
ja
gs
push
cmp
dec
inc
sbb
mov
fwait
xor
call
out
xchg
mov
sbb
sub
and
push
pop
loopne
mov
and
imul
jnp
fwait
mov
and
jno
stos
cmp
and
in
es
cmp
test
jge
xor
sti
push
cmps
push
adc
mov
lahf
inc
div
pop
and
cmp
or
pop
int3
push
cmp
shr
daa
adc
add
and
(bad)
pop
jno
xchg
adc
clc
sbb
lods
sbb
sub
je
or
sub
add
aas
fs
jmp
cmp
fst
(bad)
out
mov
jnp
lods
mov
in
jge
mov
mov
push
je
xor
and
sahf
mov
dec
jbe
addr16
aaa
js
mov
ror
and
stos
push
sub
int
or
mov
pop
lods
sub
js
aad
ss
dec
xor
dec
lods
in
call
push
gs
popf
pop
test
rcr
gs
outs
imul
nop
xchg
sub
inc
jno
daa
mov
or
addr16
add
aad
xchg
in
leave
ficomp
pop
ror
nop
push
ins
jne
jmp
adc
cmp
and
sbb
mov
and
outs
sti
inc
pop
test
out
test
jae
sbb
ins
pop
xchg
addr16
or
xchg
movs
aaa
nop
sbb
cmps
add
fwait
add
pop
pop
int3
inc
dec
dec
mov
inc
int3
cmp
mov
sbb
ins
jl
and
js
jmp
and
(bad)
xor
xor
cmps
pusha
icebp
fidivr
mov
inc
adc
and
push
push
mov
push
xor
mov
mov
or
add
leave
gs
bound
in
jnp
sbb
cmp
dec
or
xor
mov
mov
or
jmp
sub
addr16
mov
fstp
xor
push
mov
pop
push
adc
stos
lods
sti
pop
bound
and
xchg
mov
sub
cmp
cdq
add
js
xor
movs
inc
cmps
xor
add
ins
shl
push
movs
and
retf
and
add
lock
add
cmp
or
pusha
inc
dec
xchg
xlat
jnp
cmp
push
js
sub
pop
dec
push
fisub
pop
cli
and
retf
xor
push
daa
mov
pop
cmp
dec
dec
inc
jmp
loope
xchg
inc
std
dec
movs
mov
inc
aad
mov
cmc
pop
loope
pop
inc
jmp
xor
ja
and
inc
pop
cmp
adc
pushf
jmp
xchg
outs
add
add
aaa
inc
inc
jne
add
fild
inc
add
adc
mov
cmp
clc
cld
inc
push
dec
out
mov
xor
cmps
retf
sub
std
lea
xor
jb
addr16
mov
mov
sub
in
add
mov
mov
out
call
pop
xchg
push
pop
dec
fscale
fcmovnbe
not
rcr
mov
cld
ret
cmp
cwde
out
cdq
or
mov
jb
and
je
mov
cmps
dec
popf
in
hlt
push
adc
mov
jecxz
adc
adc
cmovnp
in
out
in
stc
mov
fcom
jo
push
mov
xor
imul
lds
movs
push
loop
pop
and
fcom
popf
mov
mov
into
outs
(bad)
cwde
cmp
cmp
movs
push
and
into
cs
repnz
shl
xlat
jle
int
sti
push
cli
(bad)
cmp
cmps
shl
cli
sbb
pop
fisub
mov
inc
dec
(bad)
(bad)
add
lods
or
test
sahf
ret
mov
xchg
(bad)
cmc
ins
cmp
stos
mov
or
dec
adc
mov
add
dec
inc
sbb
(bad)
mov
mov
std
mov
pop
push
xchg
hlt
cmp
inc
arpl
call
or
xor
mov
sub
lods
jae
gs
and
cs
inc
call
aas
in
and
pop
adc
xor
jns
cmp
aaa
sub
adc
retf
outs
fucomp
mov
jl
jmp
mov
push
out
rcl
cwde
xlat
fwait
mov
mov
push
pop
dec
sub
and
pop
xor
fcom
dec
mov
jne
movs
callw
push
jae
sbb
aad
les
inc
xchg
stos
cmp
mov
cmp
fistp
mov
inc
pop
shl
jb
sub
cwde
sbb
jmp
add
add
imul
pop
mov
mov
adc
cmc
popf
cmp
mov
fdiv
loope
repnz
inc
jmp
mov
aam
ret
test
test
aaa
jno
mov
dec
jae
popf
mov
into
add
push
adc
mov
cmp
mov
sti
inc
push
out
out
xchg
mov
inc
aas
fsub
in
jno
into
or
xchg
dec
pop
mov
scas
or
xor
ins
mov
add
test
cwde
data16
cmps
xchg
and
sbb
test
popf
push
into
and
addr16
pop
rcr
pop
test
xor
pop
cmp
ror
lea
jmp
loope
ds
sahf
rcl
push
(bad)
cli
ds
sub
gs
outs
mov
dec
mov
adc
jp
ss
add
test
mov
shl
stos
jle
test
inc
fidiv
mov
mov
cmps
in
and
in
push
push
or
mov
cli
inc
test
sub
mov
and
mov
push
popf
das
bound
lods
jle
sbb
cld
jp
popf
cmp
int3
test
cmp
sbb
mov
dec
inc
or
cld
mov
jns
mov
jb
js
dec
(bad)
ret
xor
outs
sbb
out
sbb
lock
out
sti
mov
cld
xor
xchg
xchg
mov
xor
fidiv
movs
cdq
push
and
dec
pop
fwait
in
mov
and
xchg
or
retf
retf
fxch
les
xor
adc
sbb
jns
mov
shl
sbb
mov
add
jno
inc
in
ret
movs
xor
jno
inc
add
pop
scas
push
cld
(bad)
loopne
and
sbb
mov
jecxz
dec
mov
push
and
mov
fst
in
pop
jns
aas
sub
mov
shl
mov
sub
fisubr
mov
adc
jne
xchg
in
mov
pop
aam
fld
lods
movs
xchg
jge
sbb
add
into
mov
adc
dec
cs
add
inc
fst
icebp
pop
test
andnps
jo
xor
in
inc
aad
mov
push
or
and
sub
dec
and
jle
leave
mov
loopne
jmp
jl
xchg
pop
(bad)
xchg
inc
lea
push
out
mov
rcl
pop
ret
or
inc
out
retf
pop
faddp
cmp
dec
int
les
dec
xor
mov
outs
pusha
jne
test
fs
retf
cmp
icebp
fcmovne
push
mov
push
mov
or
pushf
push
ds
cmps
neg
in
sub
push
imul
mov
mov
adc
das
pop
popa
popf
pop
scas
xchg
add
cmp
ret
popf
js
sbb
movs
jb
mov
pop
jns
push
test
(bad)
mov
dec
dec
or
mov
call
inc
or
adc
iret
repz
movq
gs
(bad)
mov
cmp
push
int3
mov
loope
sub
loopne
aas
mov
data16
in
shr
mov
es
xchg
and
mov
jecxz
xor
jge
pop
or
mul
pop
or
leave
je
mov
out
fldenv
mov
cmc
jne
jmp
jns
pop
daa
hlt
loope
jae
cld
stos
pop
mov
mov
lock
clc
out
push
rcl
aas
add
aad
pusha
stos
xor
cmps
and
cdq
xor
popa
lods
sub
clc
xchg
in
xchg
sbb
sub
loopne
lahf
add
pop
rol
mov
cmp
call
cs
inc
outs
mov
pop
pop
sti
out
sbb
movs
or
xor
or
sub
inc
mov
xchg
in
fdivp
es
stos
add
jo
mov
sti
cmp
scas
and
adc
movs
add
shr
or
add
xor
(bad)
cmp
xor
sbb
mov
into
mov
inc
pop
inc
js
out
cmp
sub
xor
push
mov
dec
dec
movs
bound
cmp
mov
mov
sbb
scas
xchg
icebp
and
sub
mov
push
pop
xor
(bad)
call
std
add
or
and
mov
mov
imul
dec
jl
jne
sub
pop
dec
sbb
cmc
pop
xchg
or
sbb
ja
(bad)
stc
outs
loopne
in
stos
add
stos
imul
mov
loope
es
jae
ins
push
out
xchg
push
cmc
and
sub
jle
(bad)
loope
std
adc
pop
xor
push
cs
or
mov
hlt
sahf
pop
pop
in
pop
push
fist
sbb
push
shl
xchg
jge
fadd
push
adc
xchg
movs
mov
leave
sbb
xor
pop
jns
sub
mov
into
rol
inc
(bad)
mov
sbb
or
sbb
jo
mov
imul
(bad)
aad
rol
mov
xchg
mov
ja
dec
ins
fnstsw
(bad)
push
add
jmp
xor
leave
mov
sub
and
rcl
inc
sub
mov
jp
stos
mov
mov
rcl
mov
out
int
test
mov
dec
xchg
hlt
pop
cli
pop
ss
(bad)
hlt
jecxz
stc
outs
iret
mov
mov
jmp
test
push
cmp
pop
leave
mov
bound
call
push
data16
xor
add
clc
cmps
in
pop
in
xor
pusha
nop
sbb
es
push
in
inc
dec
in
aas
add
(bad)
fistp
jno
fdiv
push
cmps
mov
push
mov
pop
mov
cmps
adc
or
push
sbb
pop
sub
enter
jl
mov
inc
or
out
icebp
or
movs
jb
popf
cs
push
jmp
sub
lods
(bad)
sbb
clc
add
jecxz
sub
shl
cmp
mov
adc
sub
inc
cli
mov
inc
fbstp
cdq
popa
lods
sbb
aad
sbb
ret
sub
fild
ins
ret
nop
fisttp
(bad)
sar
fpatan
mov
retf
in
sub
jle
out
dec
(bad)
mov
(bad)
in
int3
je
out
mov
dec
cmp
loopne
pop
xor
(bad)
and
inc
(bad)
mov
pushf
daa
ret
mov
mov
xor
jp
inc
mov
fxtract
or
dec
sbb
ins
jbe
xor
ret
jmp
xchg
xor
scas
mov
sar
inc
push
sbb
and
loop
jmp
dec
push
xchg
cmp
jmp
jecxz
jg
xchg
(bad)
out
pop
jne
ror
or
xor
cmp
inc
leave
(bad)
repz
ins
or
pop
lds
in
pop
std
leave
sub
(bad)
adc
mov
dec
push
push
mov
(bad)
je
(bad)
imul
mov
leave
dec
and
stos
add
mov
inc
sub
out
xchg
mov
sbb
jae
shr
out
nop
out
mov
leave
rol
loop
test
mov
or
push
cmps
outs
pop
ja
(bad)
fucom
or
sbb
in
fisttp
inc
xor
sub
jle
js
scas
stos
and
sub
movq
sbb
lds
ja
and
leave
push
fs
mov
xchg
push
dec
cwde
pop
scas
std
retf
mov
sbb
int3
inc
or
gs
movs
(bad)
mov
test
xchg
sub
or
jmp
shl
sub
mov
ds
add
out
stos
inc
stos
push
dec
sti
jns
test
call
push
stos
cmp
int3
mov
fistp
inc
mov
cmp
jb
xchg
pop
test
sti
lea
pop
cmp
ss
mov
lods
xor
iret
in
dec
mov
push
jp
sub
iret
cmp
inc
dec
adc
lods
scas
cli
or
jmp
or
(bad)
arpl
imul
mov
call
and
push
ins
cmp
inc
mov
inc
adc
push
dec
movs
mov
aas
pop
hlt
neg
dec
clc
data16
fs
jno
cwde
pop
sbb
out
movs
jns
pop
movs
mov
repnz
mov
repnz
das
clc
pop
inc
aad
jge
inc
clc
jge
sub
das
aad
fnstcw
cdq
popf
sbb
ja
push
mov
inc
xchg
pop
xchg
xchg
sbb
jb
(bad)
aad
adc
cmps
sbb
test
shl
jbe
mov
xlat
jl
sbb
test
(bad)
mov
test
pop
push
or
call
idiv
movs
mov
(bad)
lock
cmp
fxch
cmc
mov
xor
test
movs
mov
push
inc
dec
mov
aas
push
lock
int3
fst
mov
add
fnstenv
ds
mov
scas
jnp
call
jmp
daa
repnz
and
jp
fld
out
or
mov
mov
clc
cmps
push
push
aam
jge
rol
clc
lods
ss
push
gs
cmp
daa
pop
pop
cmc
pop
lea
loop
repz
mov
hlt
test
pop
mov
mov
gs
jmp
adc
xchg
rol
retf
lahf
in
add
adc
mov
pop
dec
cwde
pushf
(bad)
out
outs
mov
add
mov
inc
adc
mov
jmp
push
leave
(bad)
lods
test
cmps
mov
call
cmps
jbe
inc
adc
xchg
push
inc
mov
adc
out
aas
xchg
loop
and
cmp
mov
daa
rol
xchg
stc
add
cs
(bad)
jae
sbb
xchg
pmuludq
and
inc
test
xor
lea
outs
adc
addr16
mov
cmps
sub
mul
int3
scas
sbb
and
jno
loop
or
div
mov
fnstcw
cdq
sbb
xchg
xor
stos
enter
mov
movs
and
sbb
ret
push
push
xor
cmp
adc
popa
imul
mov
fst
adc
les
or
sub
xchg
add
pop
mov
inc
cmp
xchg
jne
add
dec
ds
xchg
(bad)
jmp
dec
inc
je
pop
repnz
(bad)
lods
fs
stos
fild
xchg
xchg
push
adc
loopne
js
adc
sbb
pop
xchg
into
push
add
ret
ror
push
push
lods
leave
call
push
push
cmp
loop
movs
or
or
inc
fdiv
(bad)
(bad)
repz
dec
cmps
sahf
pop
jno
dec
fidiv
pop
fxtract
jle
loopne
jl
mov
iret
pop
and
lahf
or
pop
push
gs
dec
(bad)
dec
inc
je
inc
or
sub
jg
imul
call
inc
call
jno
mov
mov
gs
shufps
cmp
adc
xchg
pop
cmp
add
and
shl
pushf
test
pop
call
scas
lea
sahf
fild
fsubr
nop
ja
cmp
and
push
fstp
jp
fimul
fld
adc
out
mov
cs
ds
and
sahf
jbe
mov
cmp
and
pop
pusha
pusha
pop
test
or
pop
movs
xchg
mov
add
repz
into
sub
xor
or
idiv
sub
inc
mov
push
mov
aaa
dec
test
push
int
into
jmp
es
dec
rcr
cdq
inc
sbb
inc
mov
adc
add
inc
retf
(bad)
xchg
xchg
pop
(bad)
add
(bad)
lods
cmc
jle
iret
imul
loope
cmp
sub
icebp
ins
(bad)
stc
leave
les
ror
xor
adc
adc
fwait
and
std
add
data16
fcmovnu
and
test
dec
push
jae
push
mov
add
and
xchg
cwde
cmc
jp
push
neg
sahf
(bad)
sbb
or
jle
aas
mov
mov
out
jae
in
mov
out
inc
and
adc
inc
stc
cmps
push
adc
add
jbe
mov
xor
aaa
stc
push
js
cmp
call
xor
jecxz
push
add
ja
dec
or
push
loop
pushf
loope
push
ret
fadd
movs
and
enter
push
push
push
xchg
outs
loope
test
shr
adc
test
aam
stos
push
call
or
scas
scas
mov
sbb
jmp
mov
stos
push
mov
cmp
add
dec
cmc
shr
inc
mov
(bad)
fstp
(bad)
pop
inc
pop
mov
jns
xlat
in
sub
sbb
sub
push
sub
mov
jmp
hlt
inc
mov
dec
sub
test
jl
(bad)
sar
cmp
scas
and
jle
mov
or
sub
dec
pop
xchg
jne
add
jecxz
lods
out
sub
js
dec
rcl
lods
inc
je
out
or
pop
ss
cmc
mov
and
cmp
cmp
cmc
push
jle
fadd
jns
push
into
bound
adc
scas
xor
sub
xor
inc
test
ins
mov
hlt
es
stos
test
sahf
jno
ret
lahf
sub
aas
or
xor
and
add
xor
add
sbb
test
ins
dec
scas
and
jne
cmps
push
sbb
push
dec
pop
arpl
repz
mov
clc
push
ins
dec
jecxz
add
rcr
cmps
les
rcr
sub
loop
jg
dec
test
xor
jmp
xlat
aad
pop
sar
mov
xchg
movs
sub
lock
(bad)
mov
out
cmp
mov
stc
sub
neg
sbb
imul
push
pop
aam
js
mov
jmp
pop
fsub
sahf
lods
and
dec
jmp
lods
gs
stc
cmp
lds
xchg
xor
push
neg
jno
sbb
jnp
or
jnp
add
inc
scas
cmp
push
push
neg
sbb
fwait
popf
repz
repnz
mov
jo
mov
jbe
pop
jbe
or
dec
rcl
pop
hlt
push
inc
add
fwait
sar
jecxz
movs
es
pop
or
sbb
xor
add
faddp
sub
jae
xor
fs
dec
add
cmps
or
aaa
das
stos
sub
cli
jp
and
(bad)
fld
jno
inc
dec
dec
cdq
cmp
dec
xor
and
cs
stos
into
pushf
mov
enter
int
push
jmp
popa
mov
jecxz
mov
test
imul
hlt
inc
adc
push
aam
(bad)
or
ins
mov
adc
div
jmp
cmp
retf
mov
xlat
sub
dec
xor
lahf
mov
(bad)
pop
retf
jnp
sbb
pop
test
dec
stc
sar
mov
fist
inc
push
(bad)
jg
lahf
pop
sti
ss
std
xor
in
mov
xchg
xchg
(bad)
push
and
pop
addr16
loope
mov
and
xchg
pop
not
scas
mov
pop
dec
xchg
push
jnp
les
scas
retf
loop
xlat
xor
test
cmp
add
push
mov
pop
adc
cmps
jmp
in
cwde
sub
ror
imul
fcmovnb
jg
jle
adc
mov
aaa
jge
pop
pop
sbb
cdq
test
fisubr
inc
jno
sub
or
pop
popf
sub
adc
and
mov
ds
lahf
out
push
xor
xor
fiadd
push
mov
mov
ss
lahf
loop
xor
call
out
stc
xor
call
rcr
ret
aas
out
inc
or
or
outs
retf
add
inc
js
mov
push
xor
cmp
jns
imul
aaa
push
aam
rcl
(bad)
ja
pop
cmps
add
adc
xlat
daa
dec
ret
repz
pop
pushf
dec
dec
lahf
shl
loopne
mov
out
sub
cmps
dec
in
push
jg
call
test
mov
sub
jno
imul
cmp
aad
jge
adc
sub
jo
fdivr
and
xor
xor
adc
mov
mov
enter
sti
jp
bound
ins
cld
mov
ss
inc
adc
imul
add
aad
xor
push
sbb
push
mov
mov
fs
mov
sbb
shr
xor
jo
jecxz
mov
mov
cmp
mul
mov
call
pop
jl
dec
sub
xor
inc
les
or
adc
fmul
retf
or
xlat
je
adc
fcmove
pop
fisttp
add
xchg
enter
in
mov
adc
adc
movs
sub
dec
fdivr
adc
xor
pop
sbb
out
je
(bad)
mov
int3
and
jmp
push
push
(bad)
mov
dec
jl
aas
pop
mov
add
sbb
jmp
push
pushf
rcl
add
fs
ret
adc
mov
mov
(bad)
jecxz
and
or
pop
sub
mov
je
in
sbb
sub
push
lahf
loope
hlt
push
xchg
fist
inc
dec
ja
test
mov
xchg
sti
mov
dec
(bad)
retf
mov
leave
inc
shl
jne
adc
push
jno
add
xchg
jns
(bad)
mov
cmp
call
out
fsubp
sbb
add
fucomip
push
popf
pop
add
sahf
cmps
adc
pop
mov
fcom
mov
sar
mov
jo
pop
jp
or
enter
je
(bad)
xor
cs
mov
mov
sbb
hlt
cs
movs
loop
cmps
jbe
inc
fidiv
dec
lods
scas
test
xchg
add
inc
ins
fistp
aas
je
int
or
add
sub
cmp
and
cs
cmc
mov
xchg
ja
das
mov
stc
dec
adc
cmp
add
cld
das
(bad)
fisubr
and
mov
push
xor
icebp
stc
jecxz
popf
sub
xchg
dec
pop
mov
cmps
frstor
xchg
dec
or
ins
mov
in
xchg
sub
and
adc
std
mov
sbb
je
or
mov
mov
div
push
mov
mov
lock
inc
adc
cmp
mov
mov
aam
in
inc
clc
outs
and
inc
mov
mov
jmp
lods
retf
shl
or
and
mov
jp
int
sbb
xchg
dec
push
stos
jle
xchg
iret
sub
adc
sbb
cmp
dec
xchg
pusha
fidivr
test
jecxz
int
adc
fcom
test
xlat
jmp
shl
inc
xchg
xchg
xor
dec
pop
test
dec
(bad)
jae
aaa
cmp
sub
or
(bad)
mov
mov
out
xor
ds
jne
test
pop
scas
fisttp
mov
mov
and
fs
sub
cmp
mov
shl
movs
cmp
xchg
xlat
jge
aas
or
data16
mov
sbb
hlt
mov
xchg
addr16
mov
jmp
cmp
movs
mov
test
test
jno
push
push
mov
add
xor
pop
in
jne
add
mov
mov
clc
retf
pop
test
lock
mov
pop
or
cmp
out
out
mov
dec
test
adc
lds
mov
jg
in
mov
les
jmp
jl
adc
dec
xor
loope
pop
je
iret
jl
inc
adc
js
xchg
jmp
rcl
adc
push
sub
jp
test
sbb
sub
pop
out
inc
pushf
or
(bad)
jecxz
mov
mov
dec
aam
mov
jmp
(bad)
movs
sub
out
fxch
mov
mov
shr
ja
inc
adc
stos
push
pop
ret
or
jmp
fwait
cmp
push
int
adc
sahf
xchg
mov
pop
and
jg
repnz
fwait
sahf
mov
dec
repz
jno
ss
dec
imul
add
ins
es
xor
outs
push
cdq
das
xchg
jbe
add
xchg
(bad)
fdivr
adc
add
inc
push
and
and
sti
sbb
sub
fcmovnbe
xchg
fdivr
add
pop
dec
fldcw
mov
nop
xor
arpl
mov
inc
in
xchg
inc
std
sbb
sti
test
cmp
mov
push
pop
sbb
mov
dec
jg
mov
sar
mov
push
or
inc
inc
mov
test
mov
push
scas
inc
nop
inc
rcl
sbb
pop
mov
test
mov
dec
add
push
jmp
or
push
or
jns
outs
mov
call
(bad)
bound
js
push
cmp
xor
cmp
inc
in
jmp
add
lahf
xor
inc
sub
pop
outs
(bad)
sub
loop
cs
and
fcmovb
inc
sub
inc
ficomp
ins
mov
stos
mov
cmc
jmp
mov
sub
and
lea
imul
and
mov
inc
mov
cli
out
mov
ja
inc
and
mov
mov
mov
sbb
push
inc
inc
cli
test
mov
add
stos
push
xchg
push
add
add
dec
arpl
mov
mov
or
hlt
or
(bad)
sbb
dec
adc
jle
test
jecxz
int
push
pop
repnz
jnp
cmp
scas
ficomp
loopne
xor
aaa
stos
pushf
ins
pop
ds
and
mov
add
mov
in
mov
ret
mov
aaa
fcmove
inc
call
xchg
daa
lods
push
rcr
stos
fstp
in
jmp
inc
cs
jbe
dec
sub
nop
fisttp
xor
xor
fbld
aaa
inc
aaa
or
push
ds
mov
movs
cmp
out
jge
xchg
or
inc
jmp
inc
push
inc
aam
mov
push
add
stc
inc
ins
xchg
lahf
ror
dec
add
mov
mov
dec
pushf
push
idiv
into
dec
sbb
xor
arpl
adc
push
int3
xchg
rol
call
hlt
scas
xor
sbb
pop
cmp
mov
fild
or
pop
into
mov
lahf
repnz
cmp
sub
adc
jne
xor
addr16
fnstcw
jne
mov
sbb
jle
mov
mov
mov
mov
ret
adc
add
pop
imul
pop
(bad)
leave
mov
outs
repnz
jmp
(bad)
push
into
xor
orps
mov
xchg
sahf
ja
rol
and
out
xchg
jnp
xchg
das
daa
in
xlat
push
rcr
sbb
push
pop
pushf
sub
fsub
sub
or
sbb
mov
jne
mov
call
movs
loop
dec
out
jecxz
daa
sub
in
jae
pop
jmp
xchg
dec
sub
aas
jge
loopne
scas
scas
add
loop
sub
xor
inc
jb
fwait
jp
xchg
inc
lods
hlt
mov
lahf
adc
dec
inc
mov
dec
or
stos
inc
jl
repz
mov
dec
test
scas
outs
shl
rol
add
sbb
pop
mov
arpl
xchg
inc
jbe
inc
je
jg
pop
imul
std
in
jnp
xchg
icebp
shl
inc
and
fs
(bad)
sbb
sbb
cmp
cmp
sub
retf
test
jno
mov
pop
leave
and
cmp
push
jle
and
push
pop
retf
or
ja
adc
out
shl
dec
sar
adc
inc
lds
jbe
jl
test
mov
sub
or
pop
ffree
cmp
pop
or
adc
xchg
in
ret
and
mov
add
cmp
jmp
mov
(bad)
ins
xor
int3
sub
inc
or
mov
shl
pop
push
adc
mov
pop
mov
sbb
pop
push
pushf
loop
mov
push
mov
push
sub
pop
dec
mov
jae
push
loop
xchg
mov
push
or
in
aas
out
lods
jno
sub
add
or
cdq
pop
cmp
mov
mov
scas
push
popa
aam
sub
retf
lea
xchg
add
and
mov
retf
scas
add
es
daa
leave
mov
mov
sub
push
mov
dec
icebp
call
aas
jo
ins
jmp
push
nop
xchg
add
pop
pop
adc
cmp
jns
and
out
cdq
aam
and
clc
mov
mov
dec
pmullw
or
imul
push
inc
arpl
xor
sbb
mov
push
stos
clc
ror
test
mov
arpl
bound
cmp
stos
mov
ror
lock
add
sbb
les
call
aad
xchg
and
pop
jg
fs
cmp
setg
adc
push
mov
cmps
bound
ror
aas
out
and
sbb
das
mov
icebp
mov
and
(bad)
lds
cmps
mov
pop
jmp
mov
xchg
xchg
adc
or
mov
dec
mov
lahf
pop
pop
pop
loope
inc
retf
repnz
repz
sahf
movs
enter
in
xor
adc
ss
pop
aaa
pushf
jmp
add
cmp
jmp
xor
aas
int3
jno
jmp
mov
xchg
xor
lahf
inc
fs
call
inc
cld
clc
xor
cmp
popa
jnp
dec
xchg
mov
shl
or
pop
shr
xchg
add
les
push
test
push
pop
pop
in
(bad)
ror
pop
daa
or
mov
dec
cdq
pop
mov
loope
icebp
adc
arpl
sub
push
xchg
dec
mov
mov
push
mov
imul
xchg
sub
mov
pushf
jo
pop
ficom
test
xor
in
push
shl
outs
test
cmp
jl
fdivr
jno
mov
mov
das
std
(bad)
js
xchg
sbb
shl
pop
pushw
cmp
jle
int3
mov
push
into
jne
add
xchg
jp
aaa
cmp
fist
xchg
or
scas
inc
fxch
pop
ja
out
pop
stos
pop
adc
ins
or
cmp
bound
adc
xor
fnclex
in
sub
and
aad
gs
jle
fsubr
mov
mov
(bad)
in
adc
cmc
outs
pop
fist
lock
push
lahf
jb
mov
and
jns
ss
(bad)
or
rol
test
jle
jmp
adc
lods
lods
retf
in
out
enter
add
outs
push
mov
mov
stos
sbb
push
dec
mov
(bad)
sub
jmp
test
jbe
or
pop
add
jbe
xor
mov
mov
arpl
hlt
pop
rdtsc
ss
arpl
addr16
mov
cwde
adc
stos
sub
dec
jnp
fadd
jbe
lock
pop
xchg
fisttp
cmp
hlt
(bad)
ins
mov
data16
pop
(bad)
(bad)
xchg
cmp
push
sbb
ja
pop
inc
and
ins
das
cli
in
call
cmp
add
and
mov
call
lahf
adc
push
inc
sar
cmp
jne
push
call
cwde
loop
and
push
test
mov
fmul
add
or
mov
iret
mov
jecxz
rep
(bad)
xor
xchg
cmp
mov
push
cmp
jo
mov
cmp
out
pop
mov
push
aas
inc
fwait
add
out
int
clc
add
push
mov
test
mov
nop
mov
inc
imul
sbb
push
xchg
aas
outs
cmp
arpl
ins
pop
mov
icebp
call
out
mov
iret
lods
in
dec
adc
cdq
jg
cmc
inc
mov
sbb
in
cmp
dec
dec
push
xchg
jl
stos
mov
loop
repz
retf
data16
cmp
fcomp
int3
sbb
cmp
push
lahf
int3
jl
loopne
adc
test
stos
xor
sbb
pop
pop
aas
xor
pop
dec
add
(bad)
pop
int
or
mov
fstp
pop
fisub
add
sahf
call
jne
jo
pusha
add
inc
(bad)
frstor
and
push
loope
cmp
stos
enter
jbe
mov
int
pushf
xor
into
ret
xchg
popa
xchg
cmp
not
xor
les
pop
xchg
cmps
sbb
and
(bad)
push
ss
inc
cdq
cmp
or
or
mov
mov
cmp
in
pop
jne
inc
ror
in
(bad)
inc
or
cld
fsub
movs
dec
mov
pop
xor
out
inc
push
sub
mov
fadd
or
in
pusha
mov
sbb
icebp
mov
rol
popf
dec
jo
in
cmp
mov
pop
sub
lahf
ret
push
sbb
add
shl
and
aam
movs
inc
loop
js
in
sbb
stc
mov
jne
repz
xchg
gs
add
fld
jo
mov
dec
xchg
sti
test
sub
ins
sbb
mov
(bad)
jae
loop
mov
push
in
aaa
lea
(bad)
leave
jg
jle
xchg
mov
push
stos
cwde
dec
bnd
(bad)
and
pop
jecxz
pop
cwde
mov
or
lods
pop
add
repnz
hlt
jnp
add
and
cwde
and
fldenv
out
addr16
and
xchg
outs
stos
pop
jae
out
outs
imul
call
int
clc
retf
nop
push
inc
pop
sti
and
adc
jns
inc
add
xchg
cmp
jp
mov
cdq
push
retf
dec
or
jnp
lods
push
dec
inc
inc
push
mov
mov
jge
adc
ret
xchg
out
dec
and
inc
push
ja
cmp
ret
sti
fbstp
in
or
and
jg
sub
mov
push
outs
sub
fild
test
clc
fadd
jle
xor
adc
or
jns
inc
lock
ret
mov
imul
imul
movs
(bad)
iret
adc
xor
gs
fsubr
mov
mov
mov
cmp
xchg
inc
out
jno
fimul
jmp
mov
pop
popa
mov
or
sub
sub
repnz
jecxz
xchg
in
movs
xchg
(bad)
rol
ins
inc
fsubr
cld
sub
stos
pop
fld
push
test
and
mov
or
call
pop
mov
imul
idiv
or
add
sub
fldcw
sub
or
jmp
xor
bound
out
inc
inc
loop
inc
nop
aas
popw
add
fadd
cmp
loope
push
(bad)
jmp
loope
jnp
cmp
mov
jmp
pusha
dec
sub
mov
mov
or
sbb
mov
adc
add
lds
pushf
into
mov
call
jp
loope
neg
dec
enter
or
ret
icebp
xchg
jno
ror
sub
pop
repz
cmp
leave
pop
cli
and
dec
gs
or
sbb
fimul
mov
xlat
frstor
shl
shr
stos
call
inc
or
int3
sub
inc
cmc
and
adc
fcomip
shl
fisub
add
pop
fwait
js
push
and
mov
lods
mov
jo
push
jmp
enter
adc
ins
xlat
aaa
je
movs
or
push
lea
iret
lock
mov
jg
pop
or
sub
pop
xor
push
ins
inc
jnp
arpl
mov
fild
dec
into
(bad)
nop
fdivr
(bad)
fisubr
lods
xchg
ins
push
jmp
mov
mov
inc
mov
or
ins
mov
jno
lea
popf
aaa
xchg
xor
jb
ja
push
nop
loopne
pop
sub
mov
in
and
adc
test
sbb
test
and
or
mov
push
adc
inc
xor
fs
xchg
mov
test
mov
repnz
jg
popf
cmp
sbb
scas
dec
ret
xchg
gs
ds
or
push
fcomp
xor
sub
clc
jge
popa
int3
mov
mov
mov
add
xchg
add
outs
xor
mov
fisttp
xor
adc
mov
jbe
or
cmp
scas
xor
and
fidiv
test
cmps
jb
iret
xchg
inc
outs
js
push
mov
and
data16
stc
push
pusha
and
ja
enter
mov
push
mov
jo
inc
add
inc
cmp
fcomip
sbb
repnz
cmps
fs
or
(bad)
retf
lahf
adc
sbb
clc
out
lods
add
imul
pop
outs
jbe
cmp
jo
adc
mov
push
mov
rcl
in
or
sbb
hlt
add
les
xor
push
hlt
xchg
xchg
and
inc
repnz
out
mov
stos
inc
ror
sar
cmp
cs
xor
jnp
jbe
mov
test
adc
inc
ins
pop
mov
sub
daa
mov
or
mov
dec
push
call
std
std
xchg
sub
xor
ret
pop
or
mov
in
mov
in
scas
xor
lods
push
cmp
mov
adc
inc
stos
jo
repz
ins
rcr
add
repz
pop
xchg
sub
fadd
icebp
addr16
dec
sti
rol
mov
fiadd
pushf
outs
push
and
pushf
jl
jge
mov
outs
loope
stc
mov
jmp
lock
leave
fadd
pop
fcomp
and
sti
cs
xchg
adc
push
test
push
adc
pop
mov
pop
sub
std
jmp
ins
out
push
cmps
push
(bad)
dec
mov
dec
mov
fst
div
int
adc
mov
je
mov
push
and
pop
out
mov
ins
arpl
sub
mov
fcmovbe
icebp
or
or
cmps
add
(bad)
xchg
and
in
push
pop
imul
cmps
imul
dec
mov
retf
pop
popf
rcr
add
repz
mov
hlt
retf
cmp
or
jne
repz
pop
fidiv
xlat
mul
pop
popf
mov
pop
gs
mov
push
idiv
push
add
(bad)
push
lock
and
rcr
frndint
mov
dec
mov
mov
jmp
jb
push
scas
aas
pop
fcomp
push
dec
and
adc
adc
test
pop
ret
inc
mov
cld
(bad)
cli
call
jno
xchg
daa
and
fisub
data16
sub
loopne
push
xchg
cmps
outs
icebp
loope
jmp
sbb
pop
adc
add
ins
cmp
mov
jmp
xor
imul
jg
pushfw
addr16
sbb
jg
jmp
add
push
ja
push
pop
sub
mov
fild
push
cmp
sbb
into
inc
xchg
(bad)
ins
jmp
int
push
inc
inc
adc
nop
pop
cmps
stos
fwait
sub
sbb
in
mov
popa
inc
aaa
and
test
(bad)
jg
mov
retf
pop
imul
push
addr16
mov
(bad)
cmp
mov
scas
inc
iret
loop
fs
pop
aad
ss
into
rcr
xchg
aaa
mov
mov
mov
mov
xchg
dec
faddp
or
fst
mov
mov
mov
ins
lds
xlat
or
adc
push
aad
ja
mov
enter
sbb
les
into
loop
lds
jnp
ret
push
push
ja
(bad)
push
int3
jnp
int3
adc
jo
pushf
or
nop
lea
jmp
xchg
mov
cmp
dec
outs
mov
mov
cmp
scas
inc
bound
dec
cmp
jmp
fimul
ret
xchg
into
mov
add
cdq
mul
sbb
popa
xor
add
adc
sub
cmp
xchg
and
jne
aam
xor
pop
xchg
jo
inc
mov
test
sbb
mov
loop
jp
xlat
in
(bad)
int3
sar
cmc
retf
and
(bad)
enter
mov
jp
shl
repz
fiadd
cld
mov
repz
adc
xor
ror
out
fdiv
mov
and
sub
mov
mov
inc
iret
mov
mov
bound
mov
xchg
rcr
addr16
fnstsw
(bad)
call
dec
jae
mov
mov
aam
nop
pop
retf
daa
in
lahf
add
loopne
ss
cs
inc
test
jl
loopne
jmp
fs
push
aaa
pop
(bad)
scas
inc
(bad)
repz
push
lock
push
shl
daa
out
rol
test
mov
nop
dec
jo
mov
out
clc
pop
fyl2x
out
leave
jp
push
mov
push
js
jnp
imul
int3
xchg
loop
sub
not
fbld
lods
stc
adc
push
icebp
pop
push
adc
cmc
cmp
out
aad
(bad)
retf
mov
and
call
repz
das
pushf
stc
cmp
cmp
adc
cmp
jl
popf
mov
cmp
ins
cs
xchg
fldlg2
mov
or
inc
push
jp
popa
sbb
xor
outs
xor
shr
ja
sbb
adc
xchg
mov
stos
cmp
mov
and
(bad)
jl
adc
test
call
sub
inc
add
push
xchg
or
pop
imul
mov
bnd
cli
ret
jecxz
jg
pushf
movs
outs
mov
aam
sbb
mov
sbb
out
in
retf
pop
inc
or
mov
(bad)
sti
adc
cmp
xchg
jmp
imul
dec
xor
inc
sbb
neg
daa
sbb
pop
out
sbb
pop
jl
cmc
xchg
hlt
(bad)
xor
lods
xchg
call
popw
fs
in
sbb
mov
push
xor
mov
push
xor
pop
fidiv
mov
pop
fs
std
outs
fld
scas
lods
movs
movs
(bad)
pop
adc
inc
stc
pusha
scas
add
mov
pop
jecxz
retf
pop
push
jnp
xchg
(bad)
inc
lods
inc
ins
in
mov
bound
fadd
int3
dec
and
mov
fs
ror
int3
aaa
mov
adc
mov
stos
and
mov
shr
xlat
jmp
xchg
xchg
xlat
imul
sub
popf
jnp
(bad)
sar
add
imul
mov
and
fadd
lock
mul
jbe
sub
xlat
retf
movs
arpl
sub
push
xor
lahf
es
ret
fnsave
leave
lock
test
mov
fsub
xchg
and
xchg
mov
mov
fimul
inc
retf
push
or
sub
cmp
pop
add
mov
jbe
xor
xor
ret
dec
inc
inc
scas
cmp
jl
push
mov
ins
ja
in
jae
mov
inc
xor
shl
test
add
cli
popa
mov
call
dec
push
sbb
test
fiadd
retf
xchg
dec
test
cmp
and
mov
(bad)
dec
cmp
imul
imul
loop
xchg
inc
into
pop
movs
(bad)
fstp
jns
jge
ds
sub
pop
imul
loope
mov
addr16
adc
idiv
mov
ret
cmp
xchg
in
mov
les
xchg
push
popf
lods
sub
into
scas
imul
xchg
xchg
enter
jmp
sub
mov
push
inc
cmp
fidivr
pushf
mov
add
fistp
scas
dec
stos
inc
shl
fld
cs
jno
adc
inc
std
call
sub
add
sbb
mov
mov
mov
out
mov
xchg
and
idiv
bound
mov
cmp
lea
stos
cmc
adc
pop
hlt
loopne
test
into
jns
cs
mov
fist
push
loopne
dec
jl
dec
addr16
loop
les
xor
out
sahf
pop
inc
sub
cld
xor
fld
inc
(bad)
js
mov
out
(bad)
(bad)
out
dec
xchg
adc
lock
inc
into
scas
jmp
stos
dec
cmps
fild
mov
inc
into
xchg
cli
sbb
pusha
sub
dec
call
adc
inc
cmp
cmp
imul
(bad)
sbb
dec
inc
add
cli
cmp
cmps
mov
into
jo
inc
and
dec
pop
sub
shl
(bad)
popa
mov
adc
retf
mov
pop
jle
sub
in
(bad)
sub
icebp
adc
xor
xor
sub
stos
sbb
mov
pop
mov
pushf
dec
ins
push
repnz
lock
xchg
pop
mov
test
std
in
mov
(bad)
sbb
xchg
les
push
call
add
sub
mov
dec
or
imul
arpl
loopne
jno
mov
fmul
jmp
sub
retf
fldenv
jg
dec
mov
psubd
add
adc
sbb
pop
push
fwait
dec
cld
cmp
mov
and
shl
push
mov
(bad)
cli
jle
xchg
fild
jp
cdq
sbb
jb
mov
dec
ds
mov
sbb
xchg
pop
cld
clc
add
push
push
fld
(bad)
enter
push
repnz
xchg
icebp
sbb
das
cmps
out
inc
mov
shl
mov
mov
aaa
adc
shr
xchg
test
lods
xchg
jb
jmp
stos
inc
mov
lahf
ffreep
aam
addr16
das
fs
xchg
sahf
pop
sub
jns
(bad)
(bad)
push
popf
inc
add
xchg
dec
sub
or
xchg
and
adc
inc
mov
jmp
sub
pop
cmp
sub
rcr
ss
in
jmp
dec
xor
add
mov
cwde
test
adc
fimul
jg
jo
loopne
mov
pop
cmc
push
cmp
jnp
(bad)
mov
add
test
js
jp
xor
mov
cmp
ret
(bad)
mov
adc
scas
push
adc
or
das
add
mov
sub
jae
pop
(bad)
int3
jle
shl
(bad)
sub
bound
mov
inc
sbb
xchg
std
push
nop
ins
cmp
xchg
pop
xchg
pop
cdq
ins
cwde
inc
inc
retf
dec
mov
sub
mov
dec
movs
inc
dec
pop
cmp
add
xchg
std
and
or
xchg
jle
sub
mov
sbb
not
xchg
fcomi
cs
mov
dec
mov
sub
and
mov
cmps
xchg
ret
xchg
jp
repnz
shl
loop
mov
mov
(bad)
loopne
fisttp
mov
pop
or
dec
daa
jo
mov
cdq
enter
out
dec
pop
in
mov
in
cmp
retf
xor
imul
aad
mov
scas
push
mov
xchg
xor
out
mov
rcr
cmps
test
pop
push
inc
cmp
fistp
mov
idiv
jae
xchg
sbb
pop
ins
in
dec
stos
and
adc
cli
cmps
jg
pop
xlat
mov
mov
cmp
push
je
fcomp
shl
pop
jo
lds
jno
daa
and
mov
int
ins
ins
popf
cwde
clc
push
fcom
das
imul
out
ins
inc
nop
and
push
retf
fstp
(bad)
pop
stos
repz
push
add
sub
clc
shr
push
(bad)
fisubr
adc
std
dec
lea
or
or
mov
loope
xor
jae
adc
mov
push
mov
mov
mov
test
jg
xchg
inc
stc
pop
cwde
bnd
cmp
sbb
jbe
pop
enter
adc
sahf
bound
rcr
loope
cs
mov
dec
push
xchg
cmp
adc
jmp
jge
daa
sub
sub
and
jp
cld
fs
or
adc
out
inc
(bad)
inc
cmc
jmp
xor
sbb
xor
ds
and
add
mov
(bad)
jp
xlat
inc
jno
jae
jmp
(bad)
ds
mov
xlat
cmps
mov
mov
push
inc
outs
js
loopne
jmp
cmp
xor
jb
lods
inc
clc
inc
ins
mov
pop
adc
fild
mov
pop
int3
xor
pop
push
mov
aad
cmp
idiv
lahf
sub
in
ins
popa
or
sub
aaa
into
mov
sbb
fucomip
xchg
shl
ins
xchg
or
cdq
dec
(bad)
inc
or
pushf
ret
mov
xchg
sbb
call
mov
inc
xor
shl
pop
into
and
mov
arpl
iret
push
xchg
sti
pop
adc
(bad)
imul
fst
xchg
and
pop
sahf
jge
mov
push
movs
cmp
mov
mov
jmp
repz
int
icebp
mov
(bad)
aam
cdq
js
jmp
and
mov
adc
xor
xchg
fcom
(bad)
dec
test
add
(bad)
xlat
call
xchg
out
sbb
ror
aad
fcmovnu
ins
mov
sti
in
in
(bad)
call
leave
jge
dec
pop
jnp
ins
push
sar
inc
cdq
add
fbstp
lods
mov
cli
adc
xchg
fwait
push
push
push
adc
mov
in
mov
fstp
sbb
pop
or
(bad)
ret
xchg
(bad)
daa
adc
add
mov
mov
fisubr
dec
push
gs
xor
daa
rcl
xchg
call
cmp
add
ret
retf
cwde
push
sbb
fs
xchg
cmc
jle
ss
ins
dec
jl
fnstsw
in
popf
xchg
jg
xchg
inc
xchg
adc
stc
out
iret
into
add
ror
xchg
popa
sbb
dec
icebp
test
xchg
and
jbe
pop
stos
sbb
xchg
call
pop
and
call
fidiv
xchg
lods
fld
add
xchg
movs
mov
push
mov
jbe
fistp
mov
stos
xchg
lods
jnp
lods
loopne
xor
cmp
pop
mov
cmps
movs
push
adc
add
popa
retf
shl
push
and
gs
and
pop
jne
shl
enter
jne
sbb
mov
add
(bad)
jmp
(bad)
jl
xchg
xor
jmp
mov
in
dec
sbb
dec
pop
add
sahf
rcr
ss
pushf
jg
xor
lock
(bad)
bound
jne
(bad)
test
pop
inc
xor
adc
ins
sbb
or
outs
or
fldenv
bound
sub
enter
push
(bad)
cdq
(bad)
jo
sub
or
dec
mov
outs
in
xchg
jno
xor
mov
adc
jmp
ins
jae
mov
jge
fdivp
xchg
pop
call
adc
dec
aaa
jle
aam
dec
dec
cmp
jmp
ss
div
fisttp
aam
jb
mov
jp
xor
jmp
leave
push
mov
fld
lods
std
sbb
pop
inc
mov
push
and
fnstenv
lahf
or
jle
xchg
loope
pop
mov
jge
das
cmp
inc
sar
push
(bad)
or
sub
stos
xor
daa
push
retf
add
stos
jmp
aas
cmp
jns
jmp
xchg
int3
repnz
inc
cmp
ss
mov
fstp
sti
jle
dec
cmp
iret
aas
lea
fcmovne
dec
jns
movs
dec
into
adc
push
fcmovnu
mov
shr
dec
pop
pushf
outs
(bad)
pop
mov
mov
jae
mov
adc
xor
dec
inc
push
hlt
lea
ret
clc
scas
add
jb
cmps
ins
repz
(bad)
and
gs
push
ja
sub
and
xor
popa
ror
fsubr
imul
jle
imul
fisubr
mov
test
jbe
inc
rcl
int
pop
mov
sahf
pop
dec
test
dec
xchg
pop
fnsave
mov
shl
push
daa
lahf
inc
push
cmp
mov
lds
in
repnz
add
dec
or
mov
xchg
pop
pop
jp
(bad)
cmc
lds
div
sbb
pushf
imul
xor
imul
pusha
xchg
imul
movs
jne
jns
ss
ror
adc
loopne
push
xchg
or
push
add
packuswb
pusha
out
inc
xchg
push
call
(bad)
out
cs
test
dec
fstp
fist
xchg
ss
(bad)
fidivr
pop
ja
lock
pushf
outs
add
or
add
das
pop
cmc
int3
adc
or
ret
nop
out
or
outs
mov
out
dec
xchg
jbe
add
pop
loope
popa
mov
xlat
dec
inc
mov
jecxz
cmp
cmc
sbb
ds
loopne
or
jae
stos
popa
jp
js
add
lea
iret
gs
pop
pop
ror
daa
dec
mov
mov
scas
mov
fidivr
mov
sbb
pop
sbb
ret
mov
inc
rcr
movs
push
or
adc
imul
imul
idiv
fwait
imul
in
pusha
xchg
lods
mov
mov
aaa
jne
mov
and
cmps
aam
or
leave
push
out
cmp
leave
in
jp
stos
push
xchg
mov
je
xor
adc
xchg
xor
adc
scas
mov
inc
pop
adc
popa
jmp
jae
retf
adc
add
repnz
xor
mov
push
pusha
sahf
jg
je
and
push
xor
pop
adc
mov
loop
jp
inc
xchg
push
lds
leave
cdq
push
push
cmp
mov
add
mov
jno
jbe
mov
and
out
das
cmp
popa
pop
dec
mov
jmp
lods
icebp
add
jno
xchg
fidiv
xchg
add
icebp
int
mov
pop
push
sub
and
jne
jmp
or
xor
cmc
movs
push
out
add
(bad)
js
xlat
adc
sub
hlt
dec
push
scas
lock
jae
test
mov
push
in
pop
lahf
(bad)
outs
test
ret
mov
outs
push
ret
or
retf
ret
out
xor
js
int3
icebp
fs
xchg
fidivr
sbb
xor
dec
pusha
lds
xor
bound
dec
popa
add
jl
adc
jle
call
dec
or
icebp
jp
push
repnz
pop
xchg
imul
cmp
(bad)
jo
(bad)
out
mov
ror
in
inc
iret
jle
add
mov
xchg
mov
mov
sbb
call
jle
adc
enter
pop
mov
jl
mov
lahf
dec
scas
shr
adc
(bad)
jb
jns
sbb
jno
xchg
mov
inc
sub
dec
cmc
rdmsr
dec
sbb
(bad)
rol
mov
xor
adc
adc
pop
scas
iret
jmp
and
add
pop
push
xchg
pop
jmp
jno
shl
dec
stos
aas
xchg
dec
add
adc
mov
cmp
mov
jge
inc
pusha
or
push
(bad)
into
(bad)
sbb
int3
add
outs
cdq
pushf
mov
jge
cs
jmp
lea
sbb
das
or
ds
push
out
sbb
retf
pop
push
js
pop
lea
pusha
shr
mov
dec
and
sbb
inc
clc
or
mov
imul
or
pushf
lock
push
inc
xchg
out
aad
adc
(bad)
int
cdq
aaa
imul
stos
scas
les
jp
or
jo
test
test
fimul
aad
mov
mov
test
mov
int3
movs
xchg
mov
(bad)
sbb
sbb
mov
out
in
pop
and
scas
dec
and
inc
hlt
aaa
or
int3
test
push
mov
jmp
ins
ret
adc
arpl
lock
(bad)
jne
sub
xor
inc
xchg
stos
mov
sub
push
cdq
cmps
pop
inc
cld
mov
cmp
cwde
mov
mov
repnz
vpshab
add
jle
push
ficom
xor
les
add
inc
dec
dec
cs
(bad)
pop
add
xlat
sti
xchg
mov
lock
repz
imul
cmps
sbb
movs
(bad)
push
jae
stos
hlt
inc
aad
arpl
ror
aad
jecxz
mov
arpl
push
pop
push
pusha
adc
cwde
sbb
(bad)
out
fild
stos
jmp
js
jo
inc
fs
adc
enter
and
imul
fnstsw
test
cwde
xchg
and
scas
and
jnp
jo
mov
cmp
xchg
jae
lds
adc
sbb
pop
ret
ret
arpl
push
aad
mov
stos
push
(bad)
or
xor
jno
pop
xchg
jmp
inc
test
lods
test
mov
mov
adc
pop
out
call
test
dec
cli
dec
leave
(bad)
adc
push
push
clc
add
rcr
or
shl
jmp
push
(bad)
fmul
(bad)
and
lahf
call
(bad)
fsub
sar
enter
xchg
inc
into
jg
or
xor
mov
cmp
or
fsubp
outs
push
fiadd
jg
mov
fmul
jecxz
sbb
cld
mov
mov
ret
jmp
repnz
push
xchg
test
jecxz
dec
out
or
sbb
popf
(bad)
inc
push
lods
and
shr
pusha
fcmovu
jmp
push
frstor
mul
lock
mov
mov
ja
rcl
dec
adc
and
inc
jo
stos
shl
push
xor
push
sub
int3
pop
mov
in
pop
cmp
lods
jmp
(bad)
add
jge
mov
div
into
outs
adc
mov
dec
jns
sti
hlt
out
and
or
out
mov
pop
jge
cmpxchg
and
adc
mov
push
xor
std
cmp
cmps
jge
mov
sub
xchg
ds
test
inc
sbb
xchg
ret
mov
jge
icebp
cmp
add
dec
xor
xor
jb
pop
adc
ds
pop
pop
dec
mov
cmps
(bad)
sysexit
mov
das
push
enter
sub
pop
outs
pop
outs
ret
pop
call
hlt
popf
pop
add
shl
int
cmp
inc
loop
push
push
dec
jg
pop
movs
fchs
pop
adc
enter
outs
inc
add
ds
es
ret
sbb
inc
mov
or
or
sub
xor
push
jbe
pop
or
mov
dec
mov
dec
push
mov
loope
adc
and
adc
or
movs
jae
inc
hlt
adc
add
int3
push
mov
popf
xchg
into
pop
test
pop
retf
(bad)
cdq
pop
jmp
push
iret
imul
aam
test
inc
rcr
push
idiv
push
or
out
pop
in
pop
pop
jmp
aad
jno
mov
jl
or
mov
mov
pop
dec
das
or
lds
and
call
test
rol
bound
jbe
sbb
push
vpmacsdql
imul
sbb
mov
lock
rol
and
mov
mov
push
repz
adc
cld
imul
mov
fisttp
scas
repnz
out
xchg
retf
sub
add
retf
in
pop
lods
xor
lahf
push
(bad)
scas
pop
loop
pop
enter
pop
mov
push
cli
jmp
dec
and
mov
sub
cmc
push
xchg
xor
pop
movs
mov
mov
in
enter
push
jns
aaa
mov
xor
into
jle
es
aam
fwait
nop
mov
int3
or
xchg
das
fiadd
dec
dec
mov
icebp
sub
push
loopne
dec
xchg
pop
mov
mov
(bad)
mov
push
cmp
mov
or
mov
ds
mov
int
adc
adc
les
fs
mov
mov
call
push
cmps
or
mov
mov
mov
frstor
scas
jp
lods
das
sbb
in
ds
jo
mov
jns
jmp
inc
add
mov
sti
int3
stos
and
mul
rol
int
iret
push
stc
mov
scas
lea
dec
mov
call
add
inc
mov
inc
shl
xchg
inc
stc
xchg
xor
ret
movs
dec
sub
retf
out
or
cmp
(bad)
dec
stos
test
pop
lds
sahf
xchg
in
repz
push
test
inc
in
mov
ss
xchg
lea
out
jecxz
or
adc
and
out
cmc
(bad)
ror
adc
out
mov
pop
cmps
lods
xchg
cli
xchg
hlt
inc
lods
cdq
out
loope
xlat
mov
adc
je
(bad)
test
cmps
mov
cmp
jmp
mov
jmp
aad
in
push
push
mov
adc
jns
or
mov
jae
jmp
inc
cs
movs
daa
jnp
ret
movs
xchg
(bad)
sub
(bad)
xchg
test
jno
call
mov
mov
cmp
gs
xchg
jmp
rep
and
xchg
fdivrp
xor
xlat
jnp
dec
dec
mov
mov
pop
jnp
enter
rol
sub
fnstenv
inc
aam
(bad)
xchg
ss
mov
mov
repz
lahf
(bad)
js
imul
aad
xchg
bound
lahf
add
fimul
jbe
je
fld
xchg
cmp
jne
mov
fidivr
cdq
sar
dec
leave
push
xlat
jb
(bad)
inc
das
or
sbb
mov
aam
jns
and
call
cmps
(bad)
pop
outs
adc
sbb
pop
pop
xor
hlt
(bad)
pop
push
sbb
push
test
fiadd
and
jbe
adc
ins
inc
jbe
mov
add
out
pop
jbe
add
sbb
es
pop
push
movs
outs
dec
fmul
sbb
out
lahf
or
ss
push
dec
sbb
push
push
retf
stos
mov
sub
jae
sbb
and
test
jp
addr16
sbb
and
imul
ss
or
out
mov
gs
xor
jnp
retf
ss
mov
sub
aad
jne
push
les
cmps
mov
pop
cmp
std
mov
aaa
(bad)
fadd
inc
mov
pop
pop
push
call
push
enter
mov
xor
mov
aaa
or
int3
or
cmps
mov
neg
sti
or
jns
jb
loop
daa
sbb
add
xchg
mov
fisttp
dec
xor
in
cwde
push
or
dec
test
sub
pop
js
call
pop
inc
sti
test
push
in
lock
and
mov
or
and
repnz
pop
in
test
or
or
(bad)
leave
dec
sbb
jl
mov
xor
ret
sti
stos
jae
lahf
ins
jo
jmp
repnz
jg
pop
pop
jmp
and
cwde
mov
xchg
jmp
add
outs
sub
dec
sbb
(bad)
mov
jb
mov
xchg
and
ds
jnp
rol
xchg
out
es
das
dec
jg
jo
sub
mov
xlat
pop
repz
and
jne
js
mov
and
mul
rcr
sti
or
sub
jle
aam
mov
mov
lds
sub
jno
push
sbb
(bad)
adc
or
and
cmp
outs
xlat
pusha
jns
sbb
sub
fwait
int
push
(bad)
add
cs
cmp
cmps
pop
pop
xchg
call
ds
outs
mov
loopne
loope
and
(bad)
fmul
and
inc
adc
xchg
je
or
fcmovbe
push
cmp
dec
push
pushf
xchg
jge
rol
in
loop
or
dec
inc
jae
jp
xchg
sbb
pop
loopne
ins
dec
add
mov
pop
dec
je
call
push
out
js
pop
adc
sahf
ss
add
pop
mov
and
bound
mov
mov
arpl
repz
wrmsr
xor
pop
popa
xchg
mov
or
xor
mov
jp
adc
idiv
imul
jns
shl
hlt
xchg
sti
mov
jecxz
aad
adc
pop
push
push
jnp
inc
cld
lods
mov
adc
loopne
mov
cmp
adc
cli
movs
mov
pusha
daa
or
xchg
push
push
lock
jbe
sub
dec
xchg
ins
mov
mov
das
jno
clc
popa
mov
movs
xchg
repz
push
(bad)
xor
cmp
xchg
cs
clc
fld
in
and
pop
mov
cmps
ss
int3
loop
jle
add
mov
cmp
pop
or
add
xor
stos
mov
mov
scas
jo
outs
rcr
mov
enter
je
xor
retf
shl
adc
and
xchg
rcl
push
xchg
push
stos
sbb
cwde
iret
(bad)
adc
ins
pop
push
jnp
cmp
lods
out
jp
loop
lahf
inc
lods
ins
ret
nop
loopne
out
adc
or
pop
xor
xchg
xchg
jb
inc
(bad)
in
js
imul
popf
cwde
sub
inc
pop
mov
lock
adc
jmp
sbb
cmps
in
jg
retf
(bad)
out
inc
in
push
pop
pop
mov
jge
(bad)
mov
sbb
pop
imul
or
dec
fmul
add
and
adc
add
dec
xor
mov
cwde
sbb
dec
retf
pop
stc
stc
adc
inc
push
ja
gs
test
adc
add
dec
aad
sti
cmps
push
dec
cmps
pop
pop
ins
push
push
cdq
nop
inc
fst
jne
add
clc
jle
cmp
xor
mov
sysenter
push
ds
push
jg
mov
add
in
inc
hlt
sbb
sbb
lds
lods
push
popa
test
inc
test
adc
fadd
pop
mov
sub
frstor
add
das
jne
adc
cmps
add
xchg
inc
pop
xor
(bad)
mov
jb
xlat
test
fmul
inc
lods
(bad)
or
cli
popa
mov
pop
in
pop
xchg
and
mov
mov
jmp
and
mov
test
cmp
jmp
mov
shr
xor
xor
jno
mov
mov
xor
mov
aam
leave
and
pop
in
test
retf
pusha
jmp
(bad)
and
lods
(bad)
adc
xor
inc
sti
push
sar
or
jge
sub
mov
js
inc
inc
pushf
(bad)
js
sar
ret
in
frstor
or
inc
test
scas
xchg
test
aam
fld
push
scas
sbb
mov
xor
and
mov
push
inc
scas
cmps
xchg
pop
(bad)
jmp
sbb
mov
in
and
or
int
jg
jns
rcr
add
shl
pop
jle
lds
dec
push
push
cmp
mov
jno
aam
mov
sbb
(bad)
fidivr
mov
ud0
arpl
add
mov
pop
cwde
cs
pop
retf
outs
imul
repnz
bound
fcomp
movs
je
(bad)
(bad)
mov
jae
add
add
ja
inc
add
aam
daa
cli
push
(bad)
dec
cmps
cmp
jo
out
dec
xchg
(bad)
and
fst
inc
add
mov
enter
or
sbb
and
test
pop
or
retf
mov
mov
in
fsub
sbb
xor
jge
pop
xor
jo
loopne
mov
mov
xor
in
and
nop
mov
cmps
mov
xchg
push
sub
jge
push
sub
in
je
les
mov
test
xor
pushf
out
push
hlt
fst
cld
es
cmp
les
movs
lods
sub
enter
jb
(bad)
push
xchg
mov
xchg
mov
sub
pop
add
cmp
sub
sub
mov
fcom
not
xor
jns
fsubr
iret
pop
sahf
sti
repz
cmp
mov
in
lods
arpl
shl
jo
adc
mov
mov
fs
push
xchg
xor
cmp
mov
or
stc
xor
jnp
push
stc
mov
adc
adc
jmp
and
ins
cmps
mov
retf
out
out
out
das
adc
arpl
pop
jmp
aad
sti
cmp
sub
push
inc
inc
and
in
push
mov
inc
mov
test
push
dec
push
sub
cmc
sub
mov
or
cmps
stc
sbb
int3
movs
dec
jb
push
xor
test
sbb
add
movs
lods
jge
leave
pop
mov
out
add
adc
(bad)
pop
or
jg
lods
and
adc
in
mov
js
xor
stos
(bad)
pop
mov
adc
adc
jne
jmp
sbb
dec
xor
or
sar
jae
lahf
leave
movs
push
ret
jne
xchg
out
or
or
cmp
push
push
and
aad
pushf
jge
sbb
sub
pop
in
ins
popf
or
rcr
push
fld
mov
mov
mov
gs
xor
xor
sub
push
in
stos
mov
cmp
outs
sub
retf
icebp
jno
std
xor
inc
arpl
add
sti
js
cmc
sub
sti
xchg
dec
xchg
cmp
stc
lds
movs
clc
mov
and
test
ret
ret
xchg
add
add
lods
sub
pop
pop
xchg
add
ror
pop
repz
imul
mov
popa
mov
fmul
lock
and
rol
adc
mov
mov
(bad)
aad
and
cli
ins
push
pop
push
sbb
(bad)
jmp
mov
push
lahf
shl
loopne
and
bound
sbb
rol
shr
out
cmc
aad
jmp
jle
(bad)
fnstenv
out
stos
xor
xor
fisttp
xrelease
pop
xor
loopne
pusha
lea
jbe
cmp
test
js
int3
xchg
stos
cmp
cmp
adc
inc
jbe
sub
jg
cdq
fcmovnb
retf
add
icebp
inc
inc
adc
cmps
lds
fadd
and
mov
stc
jo
in
movs
mov
dec
xor
test
outs
adc
lods
rcl
push
add
imul
sahf
xchg
jnp
rcr
lahf
mov
sbb
popa
ss
call
mov
into
push
push
adc
pusha
jns
xor
rcl
or
movs
sbb
out
lds
ja
xchg
imul
jne
sub
sub
xchg
scas
push
jns
lock
stc
xor
jge
mov
sub
sub
sub
xchg
test
jl
(bad)
mov
daa
xor
mov
xchg
cmp
add
xchg
push
xchg
cmp
mov
dec
outs
inc
and
mov
xchg
push
jmp
and
push
adc
push
nop
mov
jmp
pop
std
movs
dec
pop
and
cdq
inc
std
mov
imul
dec
sahf
(bad)
lods
jle
cli
pop
mov
pop
add
push
mov
mov
jl
mov
scas
data16
loope
clc
or
inc
sub
jns
adc
lods
imul
jo
shl
ins
test
xor
push
jne
jno
mov
sbb
cmps
cmp
jne
jns
and
cmp
ds
pusha
jns
cmp
test
jge
add
sub
push
aad
cmp
mov
add
cmps
test
mov
xor
fstp
dec
cmp
ss
or
push
leave
in
xchg
in
xchg
add
adc
push
pop
xchg
cdq
xchg
jle
int3
xlat
mov
cdq
xor
inc
fs
psllw
sbb
jl
mov
les
and
stc
(bad)
arpl
push
sub
push
std
pop
daa
jp
xchg
push
ret
jmp
pop
ins
das
add
shr
pop
hlt
xor
pop
mov
popa
mov
or
icebp
jbe
gs
jne
push
stc
cdq
mov
mov
mov
sub
aas
dec
sbb
rcl
pop
inc
loopne
push
test
mov
dec
int
dec
jno
sbb
xchg
and
or
sub
mov
aad
ror
dec
adc
jg
xchg
fnstenv
aam
xor
push
add
dec
push
and
jl
dec
xor
loope
xchg
lea
mov
inc
popf
fxam
jns
std
xchg
lods
pop
and
adc
mov
and
in
test
cmps
sti
inc
psubsb
icebp
inc
sub
push
dec
cmps
stos
mov
fldlg2
mov
or
aad
aas
outs
stc
stc
jno
sbb
push
xlat
xor
or
cmp
scas
push
outs
not
add
js
pop
pop
mov
arpl
lahf
jge
or
mov
cmc
popa
aaa
inc
sbb
pushf
ret
popa
gs
add
adc
inc
stos
mov
addr16
or
ror
cmp
mov
xor
add
push
test
xchg
dec
int3
sbb
cld
rcl
bound
xchg
xchg
cmp
pop
retf
pop
out
jge
call
les
xor
lahf
mov
test
bound
(bad)
mov
pop
xor
mov
lea
jmp
push
xchg
push
ins
xor
mov
das
lahf
inc
and
in
push
mov
cdq
xchg
or
xor
icebp
in
jne
popf
pop
mov
dec
push
clc
pushf
cmc
test
shl
mov
sub
push
cmp
mov
call
inc
jecxz
dec
test
lods
jg
sub
push
push
add
pop
mov
or
loope
scas
dec
add
or
inc
adc
jp
xchg
adc
rcr
imul
push
daa
shl
ins
stos
fsubr
fstp
xchg
lds
pop
mov
sbb
cmps
push
and
and
loop
jns
and
rcl
movs
(bad)
jge
out
sub
imul
aad
mov
pop
sub
cld
xor
and
lahf
lock
mov
xor
add
mov
lea
aad
popf
ss
in
ja
xchg
add
jmpw
mov
int
shr
(bad)
(bad)
neg
add
retf
dec
std
inc
lods
cmc
das
xchg
mov
xchg
or
stc
(bad)
dec
movs
cli
mov
sub
or
iret
push
lds
pop
lods
sub
cmp
pop
push
pusha
add
ret
pop
cmc
push
int
sub
mov
cdq
adc
or
repnz
and
cmps
adc
retf
and
imul
in
ins
push
and
movs
lds
call
adc
push
imul
mov
mov
and
xor
jge
xor
sub
je
aad
mov
or
(bad)
fnstenv
mov
xor
dec
cmp
jns
mov
popf
loope
add
lea
or
jp
cs
lods
add
ja
adc
mov
in
stos
dec
or
adc
push
icebp
inc
pcmpeqw
test
mov
mov
inc
push
sub
jb
dec
movs
movs
xlat
jb
fcomp
xchg
std
or
test
jo
add
mov
pop
dec
pop
or
xchg
mov
and
or
movs
add
cmp
dec
or
popf
test
mov
add
mov
push
out
inc
ror
ins
ins
add
sbb
mov
lds
fdiv
xor
and
std
mov
jne
stc
imul
xchg
jnp
jns
mov
cli
shr
add
shl
add
sub
clc
test
dec
inc
(bad)
mov
sub
mov
lea
(bad)
ror
in
adc
xchg
pop
push
arpl
mov
adc
hlt
in
push
cwde
sbb
mov
pop
test
push
fmulp
cmc
test
repnz
jmp
cmp
sbb
and
push
and
mov
retf
test
sbb
adc
dec
push
lods
sub
add
sbb
pop
dec
mov
or
adc
jecxz
pop
or
dec
mul
adc
mov
xor
js
jl
stos
mov
(bad)
lds
inc
jmp
sbb
test
push
jne
inc
jp
push
xchg
jns
or
and
fmul
push
sub
push
js
jo
pushf
and
adc
test
push
sub
frstor
pop
call
call
sahf
sbb
in
pop
dec
xchg
add
xchg
jmp
fwait
(bad)
loopne
into
mov
sub
data16
cwde
test
popf
retf
jmp
fdivp
xor
arpl
dec
stc
enter
sti
jo
push
cs
std
pusha
repz
(bad)
jne
add
mov
lods
sub
ins
pop
pop
cmp
mov
mov
std
or
and
mov
push
rol
mov
es
adc
sti
mov
mov
mov
and
mov
or
lds
into
sbb
leave
push
push
data16
xchg
mov
mov
adc
jns
push
mul
sbb
jge
sbb
pop
mov
sbb
sub
mov
sbb
sbb
popa
fisttp
xchg
mov
into
loope
out
lea
sub
cmp
cmp
jnp
pop
xchg
scas
jmp
cmp
adc
xchg
inc
scas
lock
jns
adc
stos
xor
cdq
fidiv
inc
adc
popf
jbe
retf
ja
cmc
fstp
ss
inc
cmp
jae
jg
cmps
mov
(bad)
std
or
test
jno
xor
movs
add
(bad)
inc
jge
or
lds
mov
mov
mov
int3
push
popa
cmp
lahf
mov
rcl
out
add
or
ss
xor
xchg
push
adc
into
push
popf
ins
add
sbb
in
data16
jno
sbb
sbb
(bad)
popf
jbe
xor
call
popa
jecxz
leave
mov
sub
cs
je
xchg
cmps
cwde
aad
call
loope
sub
add
test
cs
imul
mov
mov
xor
mov
add
hlt
mov
in
imul
pop
cmp
mov
sti
add
cmp
dec
cdq
mov
xchg
icebp
out
inc
mov
and
(bad)
sbb
inc
inc
jb
xlat
imul
sbb
jbe
call
add
sub
or
jae
outs
js
sti
mov
cli
xchg
push
pop
cmp
(bad)
cmp
ins
mov
sub
lahf
xor
add
mov
sbb
push
(bad)
pushf
or
mov
mov
shr
pop
ins
adc
mov
pop
push
popa
add
loopne
mov
popf
(bad)
stc
std
iret
mov
inc
push
mov
add
sbb
pop
dec
popf
int
jle
icebp
mov
pop
push
test
pusha
cmp
pop
add
lods
scas
and
pop
loope
int3
add
pop
lock
fwait
retf
fsubr
or
aaa
xchg
adc
jg
movs
and
or
in
repz
in
lahf
outs
jns
dec
mov
sti
pop
or
cmp
mov
psrld
jmp
add
packuswb
mov
sub
dec
iret
fs
add
mov
inc
or
lods
mov
loopne
mov
mov
pop
xlat
aam
retf
or
pop
ja
xchg
outs
enter
or
jnp
dec
pop
fiadd
mov
ss
bswap
loop
push
out
mov
cmp
iret
cli
xchg
or
pop
ds
push
inc
inc
jb
addr16
movs
aam
fwait
and
mov
push
push
aam
test
clc
lahf
mov
push
ins
neg
fnstenv
mov
std
scas
push
and
fld
rcl
mov
cwde
mov
push
sbb
arpl
pop
pop
ltr
addr16
mov
cwde
pusha
mov
retf
imul
clc
pop
xor
outs
xchg
cmps
gs
out
(bad)
cli
sub
pop
pusha
stos
test
in
sbb
sub
arpl
sub
stos
daa
nop
xor
rol
jae
jg
mov
sub
idiv
pop
aaa
popa
or
test
xchg
jge
fisttp
call
lock
and
and
mov
out
inc
adc
in
xchg
aas
and
pop
jmp
or
inc
mov
int3
in
fwait
sbb
dec
repz
dec
call
push
(bad)
mov
adc
sti
mov
xor
in
pop
push
sbb
mov
push
mov
jmp
scas
adc
and
jnp
movs
mov
mov
in
dec
adc
adc
inc
cmps
push
test
push
xchg
jle
mov
add
push
pop
inc
jno
push
xchg
cmp
jmp
mov
inc
mov
icebp
outs
cdq
push
xor
icebp
imul
dec
shl
and
add
mov
imul
mov
into
jge
push
add
and
cdq
sub
ret
mov
xor
add
xchg
enter
or
dec
push
popa
popa
int
or
(bad)
dec
stc
gs
nop
sbb
mov
xchg
push
mov
not
shr
sbb
sbb
lds
(bad)
hlt
sbb
leave
es
lods
jne
lahf
shl
mov
hlt
int
and
jns
bound
rcl
test
es
sub
repnz
sub
fld
lods
xor
out
cmps
fstp
xor
mov
lock
mov
cmp
sbb
and
cmp
out
jmp
sbb
in
jle
jg
mov
mov
icebp
push
add
popf
dec
inc
adc
test
loope
jge
adc
mov
movs
jns
jmp
std
fimul
adc
jp
ja
lahf
lods
test
xchg
out
paddq
mov
adc
push
or
fcomp
aas
pop
in
jno
or
(bad)
mov
cmp
call
and
ins
aam
pop
sbb
cmps
sub
cmp
dec
jno
sub
imul
and
sub
sub
scas
dec
and
add
xchg
jge
jae
sub
(bad)
cdq
cmc
add
push
fnstenv
mov
xchg
xor
jl
mov
mov
and
popa
inc
dec
lea
xchg
in
add
cmp
xchg
(bad)
and
test
cdq
pop
int3
mov
(bad)
or
cld
popf
hlt
(bad)
and
rol
adc
mov
dec
mov
aad
movs
and
cli
push
push
pop
push
std
mov
push
out
sbb
lods
push
sahf
rcr
fcomip
add
in
popa
inc
pop
pop
mov
mov
mov
ror
sbb
sbb
sub
adc
lods
xchg
in
stos
adc
dec
jo
ins
jg
pop
sbb
xor
pop
jne
sbb
jl
int3
jne
cmp
and
jns
int
mov
pop
and
lods
jle
jge
mov
out
aad
inc
adc
stos
les
fadd
movs
xor
enter
in
mov
dec
xor
lea
into
jge
jb
mov
xchg
xlat
xchg
jmp
adc
xchg
outs
push
push
inc
mov
xlat
lahf
cdq
pop
sbb
inc
cmp
icebp
ins
fwait
or
lahf
fdiv
dec
rcr
jns
aaa
mov
sar
and
movs
iret
arpl
push
add
push
mov
jp
fwait
add
test
jecxz
adc
or
sub
ja
push
pusha
stos
out
je
fnsave
cdq
mov
inc
mov
adc
add
push
or
stc
xchg
ins
jb
mov
(bad)
xlat
mov
daa
sbb
aas
dec
enter
je
rcl
inc
fnstsw
test
and
(bad)
and
jl
dec
outs
sub
retf
mov
push
fld
mov
test
rol
xor
push
nop
mov
aam
loopne
adc
and
gs
inc
in
fldcw
retf
cmp
pop
mov
das
popf
(bad)
xchg
(bad)
fdivrp
inc
xchg
pop
pop
in
(bad)
pusha
inc
cwde
cli
mov
mov
pop
and
pushf
xchg
gs
lds
sbb
sub
inc
dec
pop
push
clc
(bad)
stos
mov
sub
imul
(bad)
icebp
ds
xor
bnd
pop
and
test
mov
hlt
pop
mov
mov
pusha
pusha
push
cmp
or
jge
mov
in
push
adc
inc
push
mov
test
pop
adc
add
shr
cmps
ins
sbb
enter
or
mov
cmp
mov
int
je
push
movs
and
nop
in
js
rcl
and
adc
ror
pop
jl
xchg
jle
mov
mov
adc
psubusb
xor
pop
jl
adc
les
and
loopne
bound
cmp
in
in
es
jne
sahf
cmp
test
call
or
ins
das
in
jb
push
cwde
movs
out
ja
fsubr
pushf
lock
pushf
cmp
repz
mov
jne
dec
or
cdq
movs
ins
cmp
cld
sar
sub
dec
push
jge
das
add
push
cli
dec
stos
pushf
sub
mov
in
out
or
dec
icebp
push
add
jbe
mov
call
mul
mov
aaa
pop
pop
jl
sub
jecxz
fmul
shl
ds
add
mov
sbb
loopne
jae
iret
add
mov
sti
inc
shl
xchg
stos
sbb
repnz
div
adc
jns
sar
fiadd
idiv
loope
and
add
xor
pushf
inc
jb
dec
test
in
inc
fist
sub
daa
call
xchg
dec
jo
les
mov
jns
dec
add
xchg
dec
and
jg
iret
ins
sub
adc
xor
aas
mov
adc
xchg
or
inc
mov
ror
pop
push
push
fadd
xchg
and
sbb
push
pop
imul
es
rcr
ins
mov
inc
(bad)
addr16
mov
mov
shl
sub
and
push
int
lods
inc
jns
in
fs
mov
mov
sub
repnz
aad
xor
add
test
icebp
sbb
cmp
or
jae
xchg
fst
in
cli
pop
loopne
sub
fisubr
adc
mov
aam
mov
stc
mov
jns
arpl
jmp
push
inc
mov
sub
jge
cmps
jg
jecxz
mov
or
outs
in
mov
mov
xor
out
pop
mov
dec
lods
mov
xor
push
fcom
mov
test
cwde
add
add
ret
add
into
pop
add
into
pop
add
into
pop
add
pop
add
into
pop
add
pop
add
pop
add
into
pop
add
add
add
add
pop
add
iret
pop
add
pop
add
iret
pop
add
iret
pop
add
rol
add
iret
pop
add
pop
add
add
pop
add
pop
add
iret
pop
add
rol
add
pop
add
pop
add
pop
add
add
add
pop
add
rol
add
rol
add
jb
push
add
add
scas
call
add
add
add
add
movs
call
lods
call
mov
pop
add
add
outs
arpl
bound
gs
