xor
add
add
add
add
add
add
add
add
add
add
add
push
mov
cmc
or
push
add
adc
add
sub
add
adc
add
sub
xor
add
add
add
add
add
sub
add
add
add
adc
add
add
add
sub
add
add
add
adc
add
add
sub
add
push
(bad)
sbb
add
adc
add
add
add
xor
pop
sldt
add
xor
add
add
adc
add
add
push
add
or
sub
or
sti
push
sub
add
push
(bad)
sbb
sub
add
add
add
add
add
adc
add
sldt
add
xor
sub
add
add
add
sbb
add
sub
add
or
add
add
push
sub
ficom
or
sti
push
mov
add
add
add
fild
add
(bad)
sbb
sub
add
add
add
add
add
sbb
add
sldt
add
xor
add
add
adc
sub
add
add
add
sbb
sub
sub
push
mov
add
add
sub
add
push
(bad)
sbb
sub
add
add
add
add
add
adc
add
add
xor
add
add
add
add
add
add
add
push
sub
fimul
sub
push
add
fiadd
add
(bad)
sbb
sub
add
adc
add
add
add
str
sldt
add
add
sbb
add
sub
xor
add
add
add
sbb
add
mov
add
sbb
sub
add
sub
jle
add
or
sub
ficom
or
sti
push
mov
add
sbb
sub
add
push
(bad)
sbb
sub
add
add
add
add
daa
daa
add
sldt
add
add
sbb
add
sub
xor
inc
add
add
add
adc
sub
add
or
mov
sub
or
push
sub
es
sub
push
sub
ficomp
or
loopne
sub
or
cmc
push
pop
mov
add
add
sub
add
push
(bad)
sbb
sub
add
add
add
add
add
xor
add
sldt
add
xor
add
add
add
add
adc
mov
(bad)
lea
add
add
cmp
add
mov
jo
push
cmp
sbb
add
add
add
or
cmp
push
add
cmp
add
sbb
jp
add
sub
pop
adc
adc
or
xchg
popa
mov
sbb
outs
push
add
or
fidiv
or
sub
pop
sub
pop
(bad)
or
add
push
sub
push
xor
pop
je
add
add
mov
lea
add
add
pop
add
or
add
or
adc
fimul
cmp
call
add
outs
(bad)
(bad)
dec
call
push
cmp
add
dec
sub
add
pop
or
adc
das
add
add
add
add
push
mov
add
add
add
in
add
(bad)
sbb
pop
sub
adc
add
add
add
into
add
sldt
add
xor
mov
add
adc
add
jo
cmp
add
add
jb
add
jo
cmp
add
add
jb
add
jo
cmp
add
add
sbb
cmp
add
add
jb
add
jo
cmp
add
add
and
add
add
add
sub
add
or
outs
sbb
or
and
add
or
add
or
or
sub
add
or
adc
adc
adc
jae
add
or
add
add
pop
push
pop
outs
and
add
adc
jae
add
or
or
or
outs
and
or
adc
or
add
or
adc
jae
add
or
or
jae
add
or
or
adc
(bad)
lea
add
add
adc
or
adc
adc
mov
or
movups
or
or
add
or
sub
add
adc
push
adc
outs
sub
add
adc
ffree
add
add
adc
(bad)
dec
call
push
cmp
(bad)
call
push
cmp
cmp
(bad)
(bad)
call
pop
cmp
(bad)
(bad)
call
adc
add
add
adc
adc
push
push
mov
mov
mov
mov
add
adc
sbb
add
adc
mov
pop
mov
add
add
or
adc
mov
adc
mov
adc
mov
adc
adc
pop
or
adc
push
adc
mov
add
add
adc
mov
add
add
adc
mov
adc
mov
adc
mov
add
add
push
(bad)
sbb
adc
add
inc
sbb
add
add
sbb
add
lahf
add
add
add
add
xor
movs
add
add
add
adc
cmp
add
add
push
cmp
add
add
sbb
add
jb
add
jo
or
sub
cdq
add
jo
or
add
or
cmp
sbb
cmp
push
cmp
add
add
add
jo
or
sub
repz
jo
or
add
or
cmp
sbb
or
jb
add
jo
add
or
sub
add
or
and
add
or
add
jo
sbb
or
jb
add
jo
or
sub
add
or
xor
adc
jb
add
jo
push
push
adc
jb
add
jo
or
add
sub
or
jb
add
jo
or
adc
add
xor
add
jae
add
or
pop
pop
or
or
pop
pop
outs
xor
add
pop
or
or
pop
pop
outs
xor
add
pop
or
or
pop
sub
pop
movlps
sbb
add
jb
add
jo
pop
adc
or
dec
push
jb
add
jo
xor
add
adc
adc
or
add
add
or
adc
or
jb
add
jo
or
add
or
add
or
fadd
add
push
sub
pop
push
adc
inc
adc
add
add
(bad)
call
(bad)
(bad)
jge
(bad)
push
(bad)
(bad)
call
(bad)
(bad)
(bad)
jmp
inc
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
cmp
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
dec
(bad)
call
(bad)
push
(bad)
(bad)
jge
(bad)
call
cmp
(bad)
(bad)
fisub
or
or
or
add
add
add
add
dec
sub
add
or
and
(bad)
call
or
and
(bad)
call
or
and
(bad)
dec
inc
(bad)
(bad)
call
or
inc
(bad)
(bad)
dec
push
add
add
add
or
inc
pop
adc
push
inc
pop
(bad)
adc
add
sub
add
or
sahf
and
add
sub
add
or
or
or
popw
or
adc
adc
push
push
mov
mov
mov
mov
add
adc
sbb
add
add
push
mov
pop
mov
or
adc
pop
or
or
adc
pop
or
or
adc
sub
add
push
(bad)
sbb
add
add
add
add
add
add
add
push
add
add
add
or
add
push
add
add
add
add
add
add
add
sldt
add
xor
add
add
add
add
adc
cmp
add
pop
push
cmp
add
sbb
add
jb
add
jo
or
sub
repz
jo
or
add
or
cmp
add
sbb
cmp
add
es
add
jo
or
sub
xchg
add
jo
add
or
cmp
add
add
sbb
or
add
jo
or
sub
cdq
add
jo
or
add
or
sbb
or
jb
add
jo
or
adc
add
xor
add
sub
add
or
or
add
jo
or
add
cmp
add
add
sub
sub
add
adc
sbb
adc
mov
fild
add
or
adc
add
adc
add
or
adc
add
adc
or
add
or
add
adc
adc
outs
cmp
or
or
add
loope
add
or
add
or
or
or
add
aas
add
or
add
or
or
or
add
adc
add
add
or
or
or
add
aas
add
or
add
or
or
jb
add
jo
or
add
or
push
adc
adc
aas
add
or
add
or
movlps
adc
in
add
or
add
or
adc
or
add
aas
add
or
add
or
adc
or
add
push
add
jo
add
or
adc
or
add
aas
add
or
add
or
adc
or
add
jo
cmp
jo
or
movs
add
jo
or
xor
add
or
adc
lea
add
adc
mov
adc
add
add
or
adc
add
adc
add
or
adc
add
adc
or
add
or
adc
sub
add
or
add
or
push
adc
adc
in
add
or
add
or
pop
adc
adc
aas
add
or
add
or
sbb
or
add
fild
jo
add
or
sbb
or
add
inc
add
or
sbb
or
lea
add
adc
mov
fild
add
or
adc
add
adc
add
or
adc
add
adc
or
push
adc
or
fucomp
add
add
pop
pop
pop
push
adc
inc
sbb
add
add
cld
(bad)
(bad)
(bad)
(bad)
inc
std
(bad)
jmp
std
(bad)
call
jmp
std
(bad)
dec
std
(bad)
(bad)
fscale
(bad)
(bad)
jmp
std
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
push
(bad)
(bad)
inc
(bad)
call
(bad)
jmp
(bad)
inc
(bad)
(bad)
(bad)
in
(bad)
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jnp
(bad)
(bad)
jnp
(bad)
(bad)
fisub
or
pop
adc
inc
add
add
add
add
imul
(bad)
fimul
aaa
add
or
test
(bad)
call
push
cmp
or
xchg
(bad)
dec
cmp
or
cmps
cld
(bad)
dec
sar
push
add
add
add
push
push
inc
pop
adc
push
inc
pop
(bad)
adc
add
sub
add
or
sahf
and
add
sub
add
or
pop
sub
sub
add
or
and
pop
or
adc
add
add
add
pop
mov
add
add
or
in
add
(bad)
sbb
add
add
add
add
add
add
mov
add
add
add
mov
add
add
add
add
add
add
add
add
add
sldt
add
xor
add
add
sbb
add
push
cmp
add
sbb
cmp
add
es
add
jo
add
jo
or
sub
repz
jo
or
jecxz
add
inc
add
or
cmp
or
add
sbb
cmp
or
add
jb
add
jo
or
sub
cdq
add
jo
or
add
or
cmp
add
sbb
pop
jb
add
jo
or
sub
cdq
add
jo
or
cmp
jo
or
movs
add
jo
or
inc
add
or
adc
adc
fild
add
or
add
or
inc
add
or
sbb
pop
sub
or
sbb
add
or
push
push
adc
sbb
xor
add
adc
adc
push
jb
add
jo
adc
pop
jb
add
jo
or
sub
adc
sbb
add
jo
or
adc
sbb
add
jo
or
adc
sbb
add
jo
adc
sbb
add
jo
or
adc
sub
add
or
nop
adc
adc
outs
inc
add
or
add
jo
inc
add
or
or
pop
adc
outs
inc
add
or
outs
dec
add
or
or
pop
adc
outs
inc
add
or
outs
xor
add
pop
or
pop
adc
outs
inc
add
or
outs
dec
add
or
or
outs
inc
add
or
outs
dec
add
or
push
adc
adc
outs
inc
add
or
outs
dec
add
or
movlps
adc
outs
dec
add
or
pop
adc
pop
adc
outs
dec
add
or
add
adc
pop
push
mov
add
add
dec
add
or
pop
adc
pop
jb
add
jo
pop
adc
pop
push
mov
add
add
dec
add
or
pop
adc
pop
jb
add
jo
push
pop
adc
add
add
dec
add
or
pop
push
adc
jb
add
pop
pop
adc
adc
or
adc
adc
push
pop
mov
push
mov
fild
jo
adc
sbb
inc
add
or
adc
adc
adc
mov
fild
add
or
adc
sbb
jo
adc
push
jb
add
jo
or
adc
pop
or
add
adc
or
aas
add
or
add
or
add
or
sbb
pop
sbb
adc
adc
push
jb
add
add
or
mov
adc
sbb
add
jo
or
adc
sbb
add
jo
adc
sbb
add
jo
or
adc
sub
add
or
dec
add
or
rol
add
pop
sbb
pop
push
sub
add
sbb
xor
add
adc
adc
push
jb
add
add
or
mov
adc
sbb
add
jo
or
adc
sbb
add
jo
adc
sbb
add
jo
or
adc
sbb
add
adc
cmp
add
sub
add
pop
sbb
pop
adc
lea
add
adc
adc
push
jb
add
adc
adc
mov
fild
add
or
adc
sbb
add
jo
adc
sbb
add
jo
or
adc
sbb
add
adc
movs
add
jo
or
adc
sbb
or
add
or
add
or
sbb
pop
jb
add
pop
sbb
push
lea
add
adc
adc
push
jb
add
add
push
mov
or
fild
add
or
adc
sbb
add
jo
adc
sbb
add
jo
or
adc
sbb
add
jb
push
add
adc
sbb
or
add
or
add
or
push
adc
adc
add
adc
adc
jb
push
add
or
adc
pop
adc
adc
sbb
add
jo
or
adc
sbb
add
jo
adc
sbb
add
jo
or
adc
sbb
push
add
or
adc
sbb
aas
add
or
add
or
add
or
pop
adc
adc
lea
add
adc
adc
push
jb
push
add
or
adc
pop
adc
mov
cmp
jo
or
adc
sbb
add
jo
or
adc
sbb
push
add
or
adc
sbb
aas
add
or
add
or
add
or
and
pop
adc
inc
pop
add
aas
add
or
add
or
add
or
and
pop
adc
outs
push
add
or
and
pop
adc
outs
push
add
or
pop
push
mov
add
add
dec
add
or
pop
and
pop
adc
outs
push
add
or
and
add
add
dec
add
or
pop
daa
adc
adc
push
add
or
sub
pop
jb
pop
add
pop
pop
sub
pop
adc
jb
add
jo
push
add
or
pop
add
or
adc
sub
pop
adc
jb
add
jo
push
add
or
pop
add
or
adc
sub
pop
jb
add
pop
sub
pop
adc
adc
ins
pop
add
lea
add
add
adc
adc
sbb
xor
add
adc
adc
push
jb
add
add
or
mov
adc
sbb
add
jo
or
adc
sbb
add
jo
adc
sbb
add
jo
or
adc
sbb
add
cmp
add
mov
adc
push
add
or
pop
add
or
or
sub
adc
mov
add
lea
add
add
adc
adc
adc
adc
mov
lea
add
add
adc
adc
sbb
adc
adc
push
adc
or
mov
adc
sbb
add
jo
or
adc
sbb
add
jo
adc
sbb
add
jo
or
adc
sub
add
or
adc
push
add
or
pop
add
or
sub
add
pop
adc
adc
adc
mov
add
lea
add
add
adc
adc
adc
adc
mov
lea
add
add
adc
adc
adc
fild
add
or
mov
movs
add
jo
or
inc
add
or
adc
push
add
or
pop
add
or
sub
add
pop
das
adc
adc
adc
rol
add
lea
add
add
adc
adc
sbb
adc
adc
pop
add
or
xor
pop
adc
adc
jmp
add
lea
add
add
adc
sub
add
es
xor
pop
adc
adc
jmp
add
lea
add
add
adc
sub
add
fisttp
add
adc
pop
pop
push
adc
inc
xor
add
add
add
mov
idiv
(bad)
std
idiv
jmp
clc
(bad)
jmp
(bad)
(bad)
jp
(bad)
inc
clc
(bad)
push
clc
(bad)
inc
stc
(bad)
jmp
stc
(bad)
(bad)
cmp
(bad)
dec
(bad)
call
(bad)
jmp
(bad)
push
(bad)
inc
stc
(bad)
call
stc
(bad)
(bad)
mov
stc
(bad)
inc
(bad)
call
(bad)
jmp
(bad)
jmp
(bad)
(bad)
js
(bad)
jmp
sti
(bad)
dec
(bad)
jmp
cld
(bad)
call
cld
(bad)
jmp
cld
(bad)
push
cld
(bad)
(bad)
sti
cld
(bad)
dec
std
(bad)
dec
std
(bad)
call
std
(bad)
jmp
std
(bad)
(bad)
cmp
(bad)
dec
(bad)
call
(bad)
call
std
(bad)
jmp
(bad)
inc
(bad)
(bad)
(bad)
jmp
(bad)
inc
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
fisub
adc
adc
add
add
add
(bad)
(bad)
(bad)
fimul
aaa
add
or
popf
idiv
call
adc
call
pop
cmp
or
(bad)
idiv
call
pop
cmp
idiv
call
or
out
(bad)
push
add
add
add
adc
adc
push
inc
pop
(bad)
adc
add
sub
add
or
pushf
and
add
sub
add
or
push
sub
sub
add
or
mov
sbb
adc
adc
push
push
mov
mov
mov
mov
add
adc
sbb
add
adc
mov
pop
mov
or
adc
mov
adc
mov
adc
mov
adc
adc
pop
or
sbb
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
adc
pop
adc
add
add
adc
mov
add
add
adc
mov
add
add
add
push
(bad)
sbb
inc
xor
add
add
add
add
add
add
or
add
mov
add
(bad)
or
add
or
add
add
push
add
sbb
add
sub
xor
inc
add
add
add
sub
add
push
sub
sub
jae
add
push
sbb
out
push
push
sub
es
or
lock
adc
icebp
pop
lea
add
add
pop
push
push
mov
add
fiadd
sub
adc
add
add
add
add
sldt
add
add
adc
add
sub
add
sbb
add
sub
xor
add
cmp
sbb
sub
push
cmp
add
inc
add
or
cmp
add
push
cmp
add
cmc
pop
add
cmp
add
adc
jb
pop
add
push
sbb
pop
adc
adc
push
sub
add
or
cs
or
adc
jb
add
jo
or
sub
repz
jo
or
add
or
or
jb
add
jo
or
sub
cdq
add
jo
or
add
or
or
or
pop
jb
or
jo
or
or
add
sub
pop
or
pop
and
pop
add
or
or
or
jo
pop
add
or
add
or
adc
push
adc
push
mov
add
add
dec
add
or
pop
movlps
push
adc
pop
adc
pop
push
mov
add
add
dec
add
or
pop
adc
pop
push
mov
add
add
dec
add
or
pop
adc
pop
push
mov
add
add
dec
add
or
pop
adc
pop
push
mov
add
add
dec
add
or
pop
adc
pop
push
mov
add
add
dec
add
or
pop
adc
add
add
dec
add
or
pop
push
adc
push
mov
add
add
dec
add
or
pop
pop
adc
push
adc
jo
or
mov
movs
add
jo
or
inc
add
or
sub
add
pop
mov
add
add
sub
add
sub
pop
sbb
pop
push
mov
add
add
dec
add
or
pop
sbb
pop
push
mov
add
add
dec
add
or
pop
sbb
pop
push
mov
add
add
dec
add
or
pop
sbb
pop
push
mov
add
add
dec
add
or
pop
sbb
pop
pop
adc
pop
push
adc
jb
or
jo
or
xchg
add
add
or
add
or
or
or
jo
or
add
adc
pop
and
pop
push
mov
add
add
dec
add
or
pop
and
pop
adc
sub
sub
pop
and
pop
pop
and
add
add
dec
add
or
pop
adc
push
adc
jo
add
or
sub
add
sub
sub
sub
pop
pop
sub
pop
jb
add
jo
or
sub
pop
jb
add
jo
or
sub
fisttp
add
or
xor
or
xor
add
adc
pop
sub
add
add
or
or
adc
pop
pop
sub
add
es
das
adc
push
or
xor
pop
jle
add
or
pop
xor
pop
push
mov
add
add
dec
add
or
pop
xor
pop
adc
jb
add
jo
add
or
or
xor
pop
adc
jb
or
jo
bound
add
je
add
sbb
adc
xor
pop
adc
jb
or
jo
or
or
add
adc
pop
xor
es
aaa
adc
pop
mov
add
add
dec
add
or
pop
cmp
pop
sub
add
push
pop
cmp
pop
sub
add
outs
arpl
add
adc
jo
add
or
adc
outs
add
or
cmp
pop
adc
jo
add
or
add
or
nop
adc
adc
sub
pop
cmp
pop
adc
add
or
cmp
add
pop
cmp
adc
pop
sub
add
pop
adc
sbb
adc
adc
jle
add
or
adc
mov
add
add
mov
add
add
or
add
push
es
aas
adc
sub
add
push
pop
inc
adc
and
daa
add
sub
add
pop
inc
adc
sub
add
push
sub
add
fisttp
push
pop
pop
push
adc
inc
inc
add
add
add
add
cli
(bad)
(bad)
cli
cli
(bad)
dec
sti
(bad)
jmp
sti
(bad)
jmp
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
jmp
dec
sti
(bad)
jmp
sti
(bad)
inc
sti
(bad)
call
sti
(bad)
call
sti
(bad)
jmp
sti
(bad)
push
sti
(bad)
inc
cld
(bad)
call
cld
(bad)
jmp
cld
(bad)
push
cld
(bad)
inc
(bad)
inc
cld
(bad)
jmp
cld
(bad)
inc
cld
(bad)
inc
cld
(bad)
inc
cld
(bad)
jmp
cld
(bad)
jmp
cld
(bad)
(bad)
clc
cld
(bad)
dec
std
(bad)
call
std
(bad)
call
std
(bad)
call
std
(bad)
jmp
std
(bad)
(bad)
aas
std
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
call
(bad)
(bad)
jle
(bad)
dec
std
(bad)
jmp
std
(bad)
(bad)
mov
std
(bad)
jmp
std
(bad)
(bad)
cld
std
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
ds
(bad)
call
(bad)
jmp
(bad)
push
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
fisub
pop
adc
adc
add
add
add
(bad)
(bad)
(bad)
fimul
aaa
add
or
sar
(bad)
call
adc
call
pop
cmp
cli
(bad)
dec
cmp
cli
(bad)
call
pop
cmp
cli
(bad)
call
or
(bad)
(bad)
push
add
add
add
adc
adc
push
inc
pop
(bad)
adc
add
sub
add
or
popf
and
add
sub
add
or
push
sub
sub
add
or
int3
add
add
sbb
adc
adc
push
push
mov
mov
mov
add
add
mov
add
adc
sbb
add
adc
mov
pop
mov
or
adc
mov
adc
mov
adc
mov
adc
adc
pop
or
sbb
push
adc
mov
add
add
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
adc
pop
adc
add
add
adc
mov
add
add
adc
mov
add
add
add
add
push
(bad)
sbb
add
add
add
add
add
add
push
add
add
or
add
push
add
add
add
add
xchg
add
add
int3
add
add
add
add
xor
add
add
push
add
adc
and
and
daa
sub
sub
stc
ror
add
sbb
daa
sub
xor
movs
or
add
or
fldcw
sbb
add
sub
add
(bad)
sub
add
push
sub
or
rol
sub
sub
add
sub
sub
add
sub
or
int3
push
mov
add
pop
or
add
loope
add
(bad)
sbb
sub
add
add
add
add
add
push
push
add
sldt
add
xor
add
add
sldt
adc
or
jo
xor
add
jb
or
jo
xor
add
cmp
add
add
cmp
add
jb
or
jo
cmp
add
jb
or
jo
cmp
add
cmp
inc
add
add
or
jo
aas
add
add
or
jo
push
add
push
sub
add
sub
pop
jb
or
jo
push
add
push
jb
or
jo
push
add
push
sub
add
sub
add
jo
add
ror
jo
jb
or
jo
push
add
push
jb
or
jo
push
add
push
sub
add
adc
jb
or
jo
jb
or
jo
jb
or
jo
jb
or
jo
push
add
push
jb
or
jo
push
add
push
sub
or
push
(bad)
jnp
add
add
outs
dec
add
push
sub
add
jp
pop
push
outs
push
add
push
sbb
test
inc
adc
pop
adc
cmp
add
add
sub
adc
adc
or
add
sub
add
jp
or
add
pop
inc
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
push
add
push
sbb
cmp
add
adc
push
adc
adc
call
adc
add
daa
add
add
add
add
adc
add
or
add
add
add
outs
push
add
push
es
cmp
add
add
or
add
add
add
add
inc
add
add
or
add
push
cmp
add
cmp
add
add
nop
add
add
pop
add
or
add
add
add
or
add
add
add
outs
push
add
push
es
add
add
or
add
add
add
add
inc
add
add
or
add
push
and
pop
add
or
or
add
add
add
add
inc
add
add
or
add
push
fimul
sub
add
or
mov
add
add
pop
add
or
or
add
add
add
add
inc
add
add
or
add
push
adc
(bad)
jnp
add
add
add
inc
add
add
or
add
push
sub
add
or
add
adc
and
pop
add
or
or
add
add
add
push
outs
inc
add
push
adc
or
jo
imul
add
add
add
or
add
add
add
outs
push
add
push
sub
adc
add
add
or
add
add
add
outs
push
add
push
sub
add
adc
cmp
(bad)
call
mov
add
add
dec
add
or
(bad)
jnp
add
add
sub
add
outs
push
add
or
mov
add
add
dec
add
or
sub
or
add
or
mov
add
add
dec
add
or
fimul
and
or
adc
aaa
add
or
add
sbb
push
add
push
cmp
cld
(bad)
jmp
push
add
push
cmp
cld
(bad)
jmp
push
add
sub
sar
call
push
cmp
push
add
push
cmp
push
add
push
cmp
pop
add
sub
mov
or
mov
(bad)
jmp
push
add
push
cmp
push
lea
add
add
adc
adc
push
mov
mov
mov
mov
add
adc
sbb
add
adc
mov
pop
mov
or
adc
pop
or
or
adc
mov
add
add
adc
mov
adc
adc
pop
or
add
add
adc
mov
add
mov
adc
mov
adc
mov
adc
mov
add
add
adc
mov
add
add
add
adc
pop
adc
mov
add
mov
add
das
add
add
add
push
(bad)
sbb
add
add
add
add
add
icebp
add
add
add
sub
add
add
add
add
add
add
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
adc
sub
sub
sub
inc
sub
and
je
add
add
inc
sub
dec
outs
ins
add
or
outs
outs
add
or
pop
outs
outs
add
or
ficomp
outs
jo
add
sub
ins
add
or
ret
add
or
mov
or
mov
sub
or
mov
sub
je
add
sub
add
sub
sbb
or
add
add
add
or
jle
add
or
sbb
sti
sbb
clc
ficom
push
mov
add
pop
or
sub
add
push
(bad)
sbb
sub
add
add
add
add
add
add
xchg
xchg
add
sldt
add
xor
arpl
add
adc
add
push
sub
sub
sub
push
sub
sub
fiadd
and
and
and
and
xor
push
sub
push
sub
sub
add
aad
sbb
add
sub
or
fadd
sub
or
fld
sub
or
fild
mov
add
add
mov
add
add
sub
add
push
(bad)
sbb
add
or
cld
add
adc
add
add
add
add
add
add
xor
add
add
adc
rol
add
add
jb
or
jo
rol
add
or
jo
rol
add
xlat
add
add
fadd
add
or
jo
fld
add
or
add
add
fiadd
add
or
or
jo
push
add
push
jb
or
add
push
sub
add
sub
adc
or
jo
push
add
push
jb
or
add
push
sub
add
sub
push
jb
or
jo
push
add
push
jb
push
add
push
add
push
sub
add
sub
push
push
sub
add
push
add
push
jb
push
add
push
add
push
sub
add
sub
or
or
jo
push
add
push
jb
push
add
push
add
push
sub
add
adc
push
cmp
(bad)
push
or
jo
push
add
push
jb
or
jo
push
add
push
sub
or
xor
add
or
pop
call
add
add
add
add
add
add
add
add
add
add
call
or
adc
adc
add
or
jbe
add
adc
adc
(bad)
adc
push
jl
add
add
adc
adc
rcl
add
add
data16
or
ja
add
sub
add
jge
add
add
sbb
adc
adc
jge
add
add
sub
add
sub
and
add
sub
add
or
or
add
or
or
add
or
add
or
sbb
add
or
clts
jl
add
add
sub
add
sub
add
jp
add
add
or
sbb
add
(bad)
sub
add
adc
and
das
add
add
push
adc
push
and
add
add
push
add
add
or
add
push
outs
add
push
sub
add
jp
push
pop
sub
adc
push
jl
add
add
or
add
pop
push
(bad)
adc
add
push
sub
add
jp
sbb
adc
push
jl
add
add
or
add
adc
push
push
cs
jae
add
or
add
(bad)
sub
add
adc
adc
adc
(bad)
sub
add
jge
add
add
adc
adc
adc
jl
add
add
or
add
sbb
push
and
xor
add
inc
outs
inc
add
push
jge
add
add
sub
pop
add
add
xor
pop
adc
adc
adc
jl
add
add
or
add
adc
and
xor
add
inc
outs
inc
add
push
jge
add
add
adc
add
add
xor
jae
add
or
adc
jl
add
add
or
add
adc
add
add
add
add
add
or
xor
add
sub
add
jp
sbb
clc
add
add
adc
sbb
sub
add
adc
push
adc
cmp
add
(bad)
sub
add
adc
adc
(bad)
sub
add
adc
adc
(bad)
sub
add
adc
adc
push
cs
adc
pop
ficom
(bad)
lea
add
add
and
add
push
adc
mov
or
adc
jl
add
add
or
add
adc
add
add
and
adc
adc
mov
add
push
sub
add
jp
sbb
sbb
adc
adc
adc
pop
fidivr
jo
(bad)
call
adc
add
add
jge
add
adc
adc
jl
add
add
or
add
pop
push
(bad)
adc
adc
xor
add
sub
add
jp
add
(bad)
sub
add
adc
adc
or
adc
sbb
add
add
push
pop
sub
adc
add
add
adc
sahf
adc
push
jl
add
add
or
add
push
outs
cmp
add
outs
push
push
push
jae
add
or
sub
adc
and
add
jae
add
or
add
or
add
or
mov
add
add
dec
add
or
push
mov
add
add
dec
add
or
ficom
adc
adc
add
or
add
and
add
push
adc
add
or
adc
add
jae
add
or
add
or
and
and
outs
add
outs
add
or
movaps
add
or
adc
sub
add
or
nop
add
or
adc
(bad)
add
add
pop
adc
ffree
add
add
add
push
cmp
sti
(bad)
dec
cmp
(bad)
jmp
push
add
push
cmp
(bad)
jmp
push
add
push
cmp
(bad)
jmp
or
pop
sti
(bad)
call
add
sbb
push
add
push
cmp
push
add
push
cmp
push
add
sub
sbb
(bad)
call
lea
add
add
and
mov
mov
add
add
mov
mov
add
add
add
adc
adc
adc
add
add
or
adc
mov
adc
mov
adc
mov
adc
das
add
add
adc
push
adc
mov
adc
mov
add
add
adc
mov
adc
mov
adc
mov
adc
mov
add
add
adc
add
add
adc
add
adc
mov
adc
mov
add
add
adc
mov
add
add
adc
mov
add
add
adc
mov
add
add
adc
mov
add
mov
adc
adc
mov
add
add
adc
mov
add
add
adc
mov
add
add
adc
mov
add
add
adc
mov
add
add
adc
mov
adc
mov
add
mov
adc
adc
adc
push
(bad)
sbb
sub
inc
xor
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
ins
add
add
add
add
xor
add
add
add
add
sub
sub
sub
sub
add
sub
sub
add
or
ins
add
or
add
or
sub
sub
add
or
sub
fiadd
sbb
and
pop
add
sub
or
ret
add
or
cmc
sub
add
sub
add
fld
add
(bad)
sbb
add
add
add
add
add
adc
pop
sldt
add
add
add
or
push
add
sbb
add
sub
add
sbb
add
sub
xor
add
add
add
add
sub
pop
sub
sbb
push
mov
add
add
aaa
es
mov
add
add
xor
or
add
push
add
add
xor
add
add
sub
jnp
add
add
daa
fidiv
add
or
ret
add
or
mov
or
ret
add
or
les
sub
add
int
sub
sub
add
push
sub
add
fld
add
(bad)
sbb
add
add
add
add
add
gs
sldt
add
xor
add
add
add
add
sub
jnp
add
add
push
add
add
or
add
push
sub
adc
sub
sub
add
push
sub
add
fld
add
(bad)
sbb
add
add
add
add
and
add
sldt
add
xor
add
add
adc
or
or
sub
fisub
sldt
sub
lock
icebp
push
mov
add
add
jno
add
add
fiadd
add
(bad)
sbb
add
pop
sub
add
add
adc
add
add
add
pop
add
sldt
add
xor
add
add
push
sub
add
sub
push
push
sub
pop
sub
sub
pop
jnp
add
add
sub
pop
sub
ror
add
sbb
data16
or
test
add
sub
add
or
push
sub
add
or
adc
sub
data16
or
lods
sub
add
cmp
cmps
or
movs
sub
popf
(bad)
(bad)
dec
sub
sub
mov
add
sbb
mov
add
or
mov
add
add
jno
add
add
loope
add
(bad)
sbb
add
add
add
add
add
test
add
xor
rol
add
adc
and
add
fild
add
jb
add
jo
fadd
add
jb
add
jo
fld
add
sbb
fiadd
add
jb
add
jo
xlat
add
add
add
add
push
cmp
add
add
cmp
add
add
fld
add
cmp
add
add
add
or
or
add
or
adc
sub
add
or
adc
adc
adc
or
or
or
pop
push
pop
outs
and
add
adc
jae
add
or
adc
adc
outs
and
adc
push
adc
or
add
adc
adc
or
jae
add
or
push
mov
lea
add
add
sysret
adc
push
adc
mov
or
or
add
or
outs
sub
add
sub
add
or
movhps
outs
sub
add
adc
adc
adc
adc
cmp
(bad)
(bad)
call
or
sbb
add
and
(bad)
call
or
call
or
and
(bad)
call
pop
cmp
(bad)
(bad)
jmp
and
add
cmp
(bad)
(bad)
call
or
and
(bad)
jmp
add
or
sbb
(bad)
call
adc
add
add
adc
adc
push
push
mov
mov
mov
add
add
mov
add
adc
sbb
add
adc
mov
pop
mov
add
add
or
adc
mov
adc
mov
adc
mov
adc
adc
pop
or
add
add
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
add
add
push
(bad)
sbb
adc
inc
sbb
add
add
add
add
add
add
add
pop
add
push
jb
(bad)
jo
pop
add
push
mov
add
add
xchg
add
sub
adc
add
sbb
add
push
add
adc
(bad)
jo
mov
add
push
sub
es
outs
mov
add
sub
sub
sbb
(bad)
jo
add
xor
add
add
pop
add
adc
sub
jle
add
or
pop
add
push
outs
mov
add
push
sub
es
sub
add
sub
add
outs
mov
add
push
sub
es
sub
xor
push
sub
fidivr
push
sub
(bad)
jo
outs
mov
add
je
add
add
sub
sub
es
push
sub
ficomp
or
mov
sub
or
retf
or
call
or
out
sub
es
fiadd
or
add
add
adc
add
add
add
add
inc
jb
(bad)
jo
pop
add
push
sub
add
or
add
add
mov
add
pop
add
push
sub
add
or
add
add
xor
add
add
sbb
add
jae
add
or
sub
sbb
add
outs
mov
add
sub
push
add
outs
pop
add
push
sub
es
sub
sub
push
sub
push
outs
add
add
push
sub
sub
or
lds
clc
push
pop
add
add
add
add
loope
add
(bad)
sbb
sub
add
sbb
add
add
add
add
add
add
inc
inc
add
sldt
add
xor
add
add
sbb
add
jae
add
or
sub
sbb
add
outs
mov
add
sub
push
add
outs
pop
add
push
sub
es
sub
sub
push
sub
push
outs
add
add
push
sub
sub
or
lds
clc
push
pop
add
add
add
add
loope
add
(bad)
sbb
sub
add
sbb
add
add
add
add
add
add
inc
inc
add
sldt
add
xor
sbb
add
sbb
add
add
adc
sub
add
push
sub
fimul
or
sti
add
fld
add
(bad)
sbb
sub
adc
add
add
add
adc
or
add
add
xor
add
push
add
sbb
add
jae
add
push
push
cmp
add
add
movs
add
add
add
push
push
cmp
add
sub
cmp
add
adc
sub
mov
pop
jg
pop
sbb
add
xchg
add
or
adc
sub
bound
add
xchg
add
or
or
adc
sub
bound
add
xchg
add
or
fs
outs
push
cmp
add
add
and
add
add
and
add
cmp
es
cmp
add
add
adc
adc
push
adc
add
sbb
add
pop
and
xchg
popa
and
add
add
xchg
adc
push
fs
adc
adc
pop
pop
and
fst
push
adc
and
add
xchg
add
push
push
pop
adc
xchg
add
push
push
push
outs
xchg
add
push
push
push
outs
xchg
add
push
push
or
xchg
add
push
push
adc
outs
xchg
add
push
push
outs
cwde
add
or
or
push
outs
xchg
add
push
push
add
add
sub
add
or
(bad)
jo
sbb
or
adc
mov
xchg
add
push
push
push
outs
xchg
add
push
push
adc
push
adc
mov
cdq
add
or
add
add
push
sub
and
add
add
adc
pop
adc
outs
push
or
or
xor
push
adc
push
adc
cdq
add
or
outs
data16
push
sub
pop
outs
add
push
sub
and
add
add
adc
push
push
adc
push
xor
push
adc
cdq
add
or
outs
add
push
sub
pop
outs
arpl
add
adc
push
and
add
outs
xchg
add
push
push
pop
adc
xchg
add
push
push
pop
adc
xchg
add
push
push
push
outs
xchg
add
push
push
push
outs
xchg
add
push
push
or
xchg
add
push
push
adc
outs
xchg
add
push
push
adc
imul
add
add
push
adc
mov
xchg
add
push
push
push
outs
xchg
add
push
push
push
outs
xchg
add
push
push
push
outs
xchg
add
push
push
push
outs
xchg
add
push
push
push
outs
xchg
add
push
push
push
outs
xchg
add
push
push
adc
push
adc
mov
cdq
add
or
and
add
add
push
push
outs
xchg
add
push
push
push
outs
xchg
add
push
push
pop
outs
xchg
add
push
push
pop
outs
xchg
add
push
push
pop
adc
mov
outs
xchg
add
push
push
pop
push
adc
mov
push
addps
xchg
add
push
push
push
outs
xchg
add
push
push
adc
push
outs
call
punpckhwd
add
push
cmp
pop
inc
adc
add
push
and
jge
outs
xchg
add
push
push
add
add
push
adc
cmp
add
add
(bad)
call
add
mov
adc
fwait
add
or
adc
add
adc
adc
adc
mov
jl
add
push
outs
cwde
add
or
adc
push
outs
xchg
add
push
push
adc
mov
xchg
add
push
jae
add
push
adc
adc
adc
outs
add
push
sub
and
add
add
adc
adc
adc
push
adc
adc
adc
adc
or
adc
add
push
sub
adc
outs
add
push
sub
and
add
add
adc
adc
adc
outs
push
pop
adc
push
xor
adc
push
adc
outs
cdq
add
or
adc
add
push
sub
push
outs
cwde
add
or
sbb
adc
outs
pushf
add
or
adc
outs
arpl
add
imul
adc
outs
pushf
add
or
adc
adc
adc
add
(bad)
(bad)
cmp
sbb
dec
push
and
jge
outs
xchg
add
push
add
adc
sub
add
adc
add
push
sub
add
adc
adc
adc
push
adc
mov
popf
add
or
sbb
adc
push
adc
mov
cdq
add
or
pop
adc
sub
adc
outs
add
add
fadd
sbb
dec
push
and
jge
outs
xchg
add
push
add
adc
sub
add
adc
add
add
adc
push
adc
imul
push
push
adc
push
adc
mov
cdq
add
or
or
sbb
outs
add
add
fadd
outs
sahf
add
or
outs
sub
add
push
outs
lahf
add
or
and
inc
or
cmp
(bad)
sti
(bad)
dec
xchg
sti
(bad)
dec
jmp
mov
jmp
(bad)
call
add
jmp
(bad)
call
pop
jb
(bad)
jo
pop
outs
mov
add
or
(bad)
sbb
and
and
push
add
add
and
add
and
and
push
mov
mov
mov
add
mov
mov
add
mov
add
adc
sbb
add
add
push
mov
add
mov
pop
mov
add
add
or
adc
pop
or
or
adc
pop
or
or
adc
mov
adc
das
add
add
adc
push
adc
mov
add
add
adc
mov
add
mov
adc
mov
add
add
adc
mov
adc
mov
add
mov
adc
mov
adc
adc
pop
adc
add
add
adc
mov
adc
mov
add
add
adc
mov
add
mov
adc
mov
adc
mov
adc
mov
adc
adc
pop
sbb
and
push
adc
mov
adc
mov
adc
mov
add
add
adc
pop
and
adc
pop
and
mov
add
push
(bad)
sbb
and
inc
add
add
add
cmc
add
add
add
add
add
or
add
add
add
add
add
inc
add
add
add
add
add
or
add
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
pop
adc
add
add
sub
add
or
jae
add
push
jge
add
add
add
add
add
jg
add
jge
add
add
or
sub
add
push
(bad)
sbb
add
add
adc
add
add
add
sub
or
add
add
xor
add
add
add
add
add
add
add
sub
or
sti
add
fld
add
(bad)
sbb
sub
add
add
add
add
add
(bad)
str
sldt
add
xor
add
add
add
sub
add
add
or
jge
add
add
or
sub
add
push
(bad)
sbb
add
add
adc
add
add
add
add
sldt
add
xor
add
add
add
jnp
add
add
push
xor
jnp
add
add
mov
add
push
sub
es
sub
and
or
sbb
fimul
or
jmp
sub
add
fld
add
(bad)
sbb
sub
add
add
add
add
xor
add
sldt
add
xor
add
add
add
jnp
add
add
mov
add
push
sub
fimul
or
sti
add
fld
add
(bad)
sbb
sub
add
adc
add
add
add
add
sldt
add
xor
add
add
add
add
add
jnp
add
add
push
sub
es
outs
xchg
add
sub
add
sub
add
push
(bad)
sbb
add
adc
add
add
add
add
add
xor
add
add
add
adc
push
cmp
add
add
add
add
add
pop
pop
cmp
add
add
add
add
add
push
pop
outs
pop
add
sbb
or
add
es
or
cmp
add
add
push
jge
add
add
or
cmp
add
add
pop
push
sub
add
add
add
add
push
cmp
jnp
add
add
jnp
add
add
pop
push
inc
push
inc
add
add
add
pop
push
inc
push
inc
outs
xchg
add
sub
add
add
adc
or
pop
pop
adc
add
jnp
add
add
adc
sub
and
pop
sub
push
add
add
add
mov
add
gs
sub
add
add
add
pop
or
add
push
adc
or
cmp
(bad)
(bad)
call
add
add
xor
add
adc
add
add
and
(bad)
inc
jnp
add
add
sbb
adc
(bad)
inc
jnp
add
add
mov
add
add
push
jge
add
add
cld
(bad)
(bad)
dec
pop
pop
adc
(bad)
(bad)
dec
cmp
(bad)
(bad)
dec
jecxz
(bad)
dec
dec
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
inc
mov
add
add
mov
add
add
mov
add
add
mov
add
add
add
das
add
add
add
jecxz
add
(bad)
sbb
add
add
add
dec
add
add
add
add
add
add
xor
pop
add
add
add
adc
add
add
pop
maxps
or
push
sub
add
sbb
maxps
sti
pusha
jle
add
add
push
arpl
maxps
xor
add
pop
or
xchg
pusha
push
sub
or
sti
add
fld
add
(bad)
sbb
sub
add
add
add
add
dec
dec
add
sbb
add
pushf
add
add
add
adc
adc
and
add
cmp
add
es
add
adc
and
add
cmp
add
add
xor
add
push
add
add
cmp
add
push
add
add
cmp
cmp
sub
jle
add
add
pop
xor
pop
push
bound
imul
sub
jle
add
add
and
cld
add
add
push
pushf
push
sbb
add
add
sub
jle
add
add
and
add
add
pop
sbb
add
popf
jle
add
add
and
retf
add
add
pop
or
add
shr
sub
add
add
and
(bad)
(bad)
inc
pop
pop
or
imul
sub
add
and
fwait
add
add
sbb
add
add
int
push
jle
add
add
pop
test
pop
push
bound
imul
cmp
and
pushf
push
and
add
add
ficomp
push
lea
add
cmp
add
push
lea
add
add
push
or
pop
jle
add
add
push
pop
or
imul
sub
add
sbb
pop
push
xor
fidivr
sub
test
mov
mov
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
dec
cmp
(bad)
inc
mov
add
add
fld
add
(bad)
sbb
inc
sbb
add
add
add
add
add
xor
add
add
add
sub
add
or
add
add
add
add
push
add
add
add
add
pop
(bad)
jbe
add
jge
add
add
add
push
pop
pop
(bad)
jbe
add
jge
add
add
add
adc
sbb
push
jge
add
add
and
inc
add
lea
add
jge
add
add
and
inc
add
lea
add
add
add
add
or
add
fiadd
add
(bad)
sbb
add
add
add
add
push
add
add
sldt
add
xor
add
add
add
add
add
sub
add
jge
add
add
sub
cmp
add
or
sub
add
push
(bad)
sbb
add
adc
add
add
add
push
add
sldt
add
xor
imul
add
add
adc
sub
add
inc
add
xor
and
sub
push
sub
add
push
sub
sub
push
sbb
sub
arpl
sbb
add
sub
push
add
sub
or
int3
or
xlat
or
fst
add
jecxz
sub
push
mov
add
add
add
fild
add
(bad)
sbb
sub
add
add
add
add
push
push
add
add
add
xor
dec
add
add
add
adc
sub
and
sub
sbb
sub
and
pop
arpl
sub
das
call
sub
fisub
or
fimul
sub
adc
sub
or
icebp
push
mov
add
add
add
fild
add
(bad)
sbb
sub
add
adc
add
add
add
cmp
adc
add
add
xor
and
add
and
add
add
add
add
cmp
add
add
add
add
add
cmp
add
add
add
add
add
cmp
add
add
sbb
add
add
add
jnp
add
add
inc
add
add
add
add
pop
sbb
cmp
es
add
add
jnp
add
add
inc
add
add
pop
sbb
cmp
es
add
add
sbb
push
cmp
es
or
sub
sub
sbb
add
add
add
jnp
add
add
inc
add
add
xor
add
xchg
xchg
sbb
add
push
push
pop
and
push
add
rol
jnp
add
add
jnp
add
add
jle
add
add
add
add
jnp
add
add
jle
add
ficom
jns
add
cmp
(bad)
(bad)
jmp
add
push
cmp
(bad)
(bad)
jmp
add
push
cmp
(bad)
(bad)
jmp
add
push
cmp
(bad)
jmp
add
push
cmp
(bad)
jmp
add
push
cmp
inc
mov
add
add
add
fild
add
(bad)
sbb
inc
sbb
add
add
add
add
add
add
sldt
add
xor
add
add
push
add
adc
cmp
sbb
sti
add
add
cmp
add
add
jnp
add
add
xchg
and
add
add
cmp
add
add
add
add
add
xchg
push
cmp
add
add
or
fld
add
cmp
pop
sub
add
push
cmp
add
add
add
add
add
push
cmp
add
add
es
sub
add
add
pop
adc
add
xor
sbb
jnp
add
add
pop
adc
pop
pop
bound
pop
pop
adc
lea
add
add
sub
add
adc
add
add
push
adc
push
sub
add
xor
add
add
add
pop
adc
pop
pop
bound
pop
pop
adc
lea
add
sub
jnp
add
add
outs
ja
add
push
pop
and
push
add
add
add
and
(bad)
inc
jnp
add
add
add
add
outs
ja
add
sbb
ficom
cmp
(bad)
(bad)
dec
cmp
(bad)
dec
sbb
cmp
(bad)
(bad)
dec
jmp
add
push
cmp
(bad)
inc
mov
add
add
mov
add
add
mov
add
add
mov
add
add
add
das
add
add
add
add
sub
add
push
(bad)
sbb
add
add
xor
add
xor
add
add
add
add
add
xor
add
add
add
sub
add
add
add
add
sub
pop
sbb
sub
es
add
add
sub
es
sub
add
add
adc
add
add
add
pushw
sub
es
add
add
add
sbb
es
sub
es
lea
add
sub
push
sub
sub
outs
mov
add
sub
outs
mov
add
sub
sub
push
sub
add
add
das
add
add
add
add
add
add
loope
add
(bad)
sbb
add
adc
add
add
add
add
add
xor
add
add
adc
jnp
add
add
inc
add
add
add
add
(bad)
popa
add
add
add
pop
push
add
jnp
add
add
cmp
add
add
add
cmp
add
add
add
jnp
add
add
cmp
add
add
add
jnp
add
add
cmp
add
add
add
cmp
sbb
add
pop
adc
sub
add
add
add
inc
add
add
xor
add
xchg
xchg
push
xor
pop
pop
or
pop
pop
or
push
xor
pop
push
push
sbb
add
add
add
jl
add
pop
add
add
add
jl
add
pop
add
add
add
jl
add
pop
add
add
add
or
jnp
add
add
push
adc
and
add
add
add
inc
add
add
add
jle
add
add
add
pop
pop
or
adc
add
push
add
add
xlat
push
adc
jnp
add
add
inc
add
add
add
add
add
adc
adc
or
xor
or
push
xor
add
arpl
adc
add
add
push
fnsave
add
add
or
push
add
add
add
push
add
add
sub
pop
pop
sbb
add
push
add
add
add
cmp
add
cmp
js
add
add
add
add
add
add
aas
add
add
js
add
add
jo
add
add
ins
add
push
fucom
add
add
jnp
add
add
push
add
add
sub
pop
pop
sbb
add
push
add
sub
add
add
jo
add
add
ins
add
push
fnsave
jnp
add
cmp
(bad)
jmp
add
push
cmp
(bad)
jmp
add
push
cmp
(bad)
jmp
add
push
cmp
(bad)
jmp
add
push
cmp
(bad)
dec
cmp
(bad)
call
or
adc
adc
push
push
mov
add
add
mov
add
add
mov
add
add
mov
add
add
add
das
add
add
add
add
mov
mov
mov
add
add
add
add
push
add
add
add
add
push
(bad)
sbb
inc
sbb
add
add
add
add
add
add
sldt
add
xor
add
add
sbb
sub
add
add
add
add
add
add
inc
sbb
push
sub
sbb
fimul
or
clc
add
fld
add
(bad)
sbb
sub
adc
add
add
add
and
or
add
add
xor
add
add
adc
sub
add
add
add
jnp
add
add
popf
add
add
add
and
add
push
sub
es
pop
jge
add
add
add
pushf
add
add
add
inc
add
add
(bad)
popa
add
add
add
pop
push
add
sub
sbb
add
jae
add
push
sub
es
sub
sub
mov
add
add
add
fild
add
(bad)
sbb
sub
add
adc
add
add
add
add
add
add
xor
add
add
add
add
adc
jnp
add
add
jnp
add
add
push
add
add
and
add
push
cmp
pop
pop
jge
add
add
add
pop
rcr
ins
add
push
push
cmp
add
add
add
inc
add
add
(bad)
popa
add
add
add
pop
push
add
and
add
add
push
push
and
push
add
add
and
sbb
jge
add
add
add
pop
sub
add
push
sub
add
add
add
inc
add
add
(bad)
popa
add
add
add
pop
push
add
sbb
adc
and
add
sbb
pop
pop
jge
add
add
sub
add
push
sub
fidivr
or
dec
(bad)
(bad)
dec
cmp
(bad)
dec
sub
mov
add
add
mov
add
add
mov
add
add
add
mov
add
add
loop
add
(bad)
sbb
sub
add
adc
add
add
add
out
sldt
add
xor
add
add
add
add
sub
add
or
add
add
add
add
add
push
add
inc
add
add
add
popa
add
add
add
add
push
add
das
add
add
add
add
sbb
add
das
add
add
add
add
das
add
add
loope
add
(bad)
sbb
add
add
add
push
add
aaa
add
add
add
xor
dec
add
add
add
add
inc
add
add
xor
add
jnp
add
add
xchg
and
inc
add
jnp
add
add
xchg
sbb
or
es
sub
ficom
push
sub
add
mov
add
add
fiadd
add
(bad)
sbb
add
add
add
add
cmp
add
sldt
add
xor
and
add
add
add
push
sub
sbb
add
jge
add
add
add
inc
add
add
sub
fimul
add
add
fild
add
(bad)
sbb
add
add
add
add
sbb
add
sldt
add
xor
add
add
add
add
add
add
add
das
add
add
cmp
add
add
push
sbb
add
add
jnp
add
add
imul
add
push
cmp
sbb
sub
push
or
sahf
pop
add
add
add
xchg
pop
invd
pop
pop
pop
pop
bound
cmp
or
sub
pop
pop
push
cmp
sbb
or
sub
add
add
(bad)
push
sbb
jne
add
sub
jnp
add
add
xchg
adc
add
sub
push
xor
add
add
add
push
adc
pop
xchg
sub
add
popf
push
adc
pop
(bad)
das
add
add
add
pop
adc
add
pop
pop
pop
bound
das
add
add
pop
pop
or
add
add
scas
fiadd
cmp
(bad)
(bad)
dec
cmp
cmp
(bad)
dec
cmp
(bad)
dec
jne
(bad)
dec
inc
pop
mov
add
add
mov
add
add
mov
add
add
add
das
add
add
sub
add
push
(bad)
sbb
add
add
add
add
cmc
cmc
add
sldt
add
xor
add
add
add
add
add
add
imul
add
mov
pop
push
cmp
add
add
push
pop
pop
sbb
cmp
add
add
push
push
cmp
add
add
push
push
cmp
add
add
sub
add
add
add
push
sahf
or
pop
adc
add
or
jnp
add
add
in
lea
add
add
cmp
add
add
adc
pop
pop
push
sahf
push
pop
pop
adc
add
sbb
add
adc
adc
push
adc
add
add
add
or
jnp
add
add
push
or
pop
or
add
sbb
add
add
adc
adc
and
or
sub
adc
add
jnp
add
add
pop
pop
pop
(bad)
das
add
add
add
pop
sub
jnp
add
add
sbb
add
adc
add
adc
(bad)
dec
sub
add
add
add
add
pop
adc
add
add
add
or
pop
and
lock
add
add
or
and
add
pop
sub
jnp
add
add
or
pop
and
add
add
add
pop
sub
pop
add
add
add
pop
adc
pop
pop
pop
pop
bound
or
cmp
xor
or
jnp
add
add
pop
xor
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
pop
(bad)
das
add
add
add
pop
sub
jnp
add
add
jnp
add
add
pop
(bad)
das
add
add
add
pop
sub
pop
pop
adc
add
add
add
or
push
add
add
add
or
pop
xchg
adc
sub
sbb
adc
and
xchg
pop
adc
adc
pop
xchg
adc
(bad)
push
adc
jnp
add
add
adc
adc
rcr
or
or
and
push
lds
or
pop
adc
push
cmp
(bad)
(bad)
call
or
add
or
(bad)
(bad)
dec
cmp
std
(bad)
dec
jecxz
(bad)
dec
dec
call
add
add
(bad)
call
adc
adc
adc
push
push
mov
add
add
mov
add
add
mov
add
add
mov
add
add
add
adc
sbb
add
add
push
mov
add
add
pop
mov
add
add
or
adc
pop
or
or
adc
pop
or
or
adc
pop
or
or
adc
pop
or
or
das
add
add
adc
add
add
add
add
push
(bad)
sbb
inc
sbb
add
add
arpl
add
mov
add
sldt
add
xor
add
add
adc
jnp
add
add
imul
add
push
push
sub
add
sbb
jno
add
es
sbb
add
push
push
cmp
add
es
sbb
imul
add
sub
jnp
add
add
add
push
cmp
add
adc
pop
pop
or
push
sub
adc
pop
adc
xchg
sahf
adc
adc
adc
push
xor
add
add
add
adc
pop
pop
sbb
adc
xchg
xchg
adc
push
adc
adc
adc
add
xor
xor
push
sub
or
and
or
add
pop
pop
add
add
add
mov
inc
add
add
adc
sbb
pop
sbb
das
add
add
or
or
pop
lea
add
add
or
or
or
adc
or
or
adc
adc
sbb
or
sahf
adc
adc
add
push
xchg
push
bound
or
and
or
ret
pop
push
xchg
adc
pop
or
pop
and
push
adc
pop
adc
sub
adc
push
sub
push
sub
or
adc
xchg
xchg
adc
pop
adc
pop
pop
xchg
xchg
xor
adc
pop
pop
adc
pop
adc
pop
adc
xchg
sahf
adc
adc
adc
sbb
pop
adc
adc
or
ret
adc
xchg
adc
sub
pop
adc
pop
adc
xchg
sahf
adc
and
adc
or
adc
pop
pop
sbb
adc
xchg
xchg
adc
xor
pop
adc
adc
sahf
pop
push
xchg
adc
or
pop
pop
adc
adc
or
adc
pop
adc
sahf
adc
sbb
adc
pop
adc
push
cmp
(bad)
(bad)
call
or
sete
inc
add
pop
adc
adc
and
add
add
fwait
add
or
adc
adc
adc
xchg
adc
adc
pop
adc
adc
sahf
push
adc
pop
adc
sub
adc
pop
pop
or
sbb
or
adc
xchg
xchg
adc
pop
adc
pop
pop
xchg
xchg
xor
adc
pop
pop
adc
pop
adc
pop
adc
xchg
sahf
adc
adc
adc
sbb
pop
adc
adc
or
enter
adc
pop
adc
xchg
sahf
adc
and
xor
(bad)
call
xor
adc
pop
adc
pop
pop
sbb
adc
xchg
xchg
adc
xor
pop
adc
adc
sahf
or
cmp
add
or
jp
add
(bad)
add
add
cmp
cmp
cmp
mov
(bad)
call
add
(bad)
std
(bad)
call
add
call
pop
lea
add
add
push
adc
push
push
mov
add
add
mov
mov
add
add
mov
add
add
add
das
add
add
add
add
push
mov
add
add
pop
mov
add
add
or
adc
pop
or
or
adc
pop
or
or
adc
mov
adc
das
add
add
adc
add
adc
mov
add
add
adc
mov
add
add
adc
mov
add
add
adc
mov
add
add
adc
mov
add
add
adc
mov
add
add
adc
das
add
add
adc
add
add
add
push
(bad)
sbb
inc
sbb
add
add
add
add
sldt
add
xor
ins
add
add
add
adc
sub
es
and
cmp
sub
push
add
add
add
xchg
add
add
add
xchg
pop
pop
push
sub
es
sub
push
sub
es
add
add
add
imul
mov
and
sub
or
lds
sub
or
loop
sub
push
mov
add
add
mov
add
add
sub
add
push
(bad)
sbb
sub
add
add
add
add
add
push
push
add
add
add
xor
add
add
adc
add
es
sbb
xor
cmp
add
add
sbb
das
add
add
add
add
add
add
sbb
add
adc
add
add
cmp
add
sbb
cmp
add
add
sub
sbb
sbb
or
add
inc
add
add
add
add
add
pop
push
add
or
add
sub
add
push
adc
pop
adc
pop
pop
and
adc
sub
add
add
add
wbinvd
add
add
add
add
push
sub
pop
das
sbb
add
(bad)
popa
add
add
add
push
add
add
pop
or
add
adc
and
add
pop
push
add
cmp
sbb
add
adc
and
add
pop
push
add
sbb
jnp
add
add
adc
and
add
pop
push
add
add
jnp
add
add
cmp
(bad)
(bad)
aas
(bad)
(bad)
call
cmp
(bad)
(bad)
(bad)
ficom
cmp
(bad)
(bad)
call
add
(bad)
dec
int3
(bad)
(bad)
call
add
dec
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
inc
mov
add
add
mov
add
add
mov
add
add
mov
add
add
add
das
add
add
add
add
add
in
add
(bad)
sbb
inc
sbb
add
add
add
add
add
add
add
xor
add
add
push
add
adc
add
es
push
cmp
add
es
sub
add
pop
push
cmp
add
add
add
add
add
add
push
cmp
add
add
adc
add
add
cmp
add
add
sbb
cmp
add
add
sub
sbb
sbb
or
add
add
push
adc
add
or
add
pop
adc
push
adc
pop
adc
pop
pop
and
adc
jnp
add
add
or
add
add
add
add
fmul
pop
das
adc
pop
add
outs
ja
add
or
xor
sub
sub
add
adc
add
push
push
sub
add
add
xor
add
sbb
outs
lea
add
push
cmp
(bad)
jmp
inc
or
or
and
sub
outs
ja
add
add
add
add
xor
add
sbb
outs
lea
add
sub
ja
add
add
add
add
xor
add
pop
or
outs
lea
add
adc
jnp
add
add
cmc
(bad)
(bad)
(bad)
ficom
cmp
(bad)
(bad)
call
add
fdivrp
(bad)
dec
call
add
dec
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
inc
mov
add
add
mov
add
add
mov
add
add
mov
add
add
add
das
add
add
add
add
add
in
add
(bad)
sbb
add
add
dec
add
add
add
das
add
add
add
add
xor
imul
add
add
adc
sub
add
or
add
add
add
add
add
push
jge
add
add
and
add
add
jge
add
add
and
add
lea
add
jge
add
add
and
add
lea
add
jge
add
add
add
and
add
jge
add
add
clts
mov
add
add
add
fild
add
(bad)
sbb
add
adc
add
add
add
add
sldt
add
xor
add
add
add
add
add
add
jnp
add
add
sbb
jnp
add
add
jnp
add
add
pop
xchg
popa
jge
add
add
or
sub
add
push
(bad)
sbb
add
add
add
add
daa
daa
add
sldt
add
xor
add
add
adc
jnp
add
add
and
push
bound
jnp
add
add
jnp
add
add
pop
xchg
popa
and
jg
add
sub
dec
add
add
jnp
add
add
(bad)
jg
add
jnp
add
add
xchg
and
popf
add
add
add
add
add
add
popf
push
sub
dec
add
add
and
inc
add
sub
ficomp
sub
or
cmc
push
mov
add
pop
mov
add
add
sub
add
push
(bad)
sbb
sub
add
add
add
add
add
ja
add
add
add
xor
add
add
sub
add
add
add
add
add
push
add
add
and
add
sbb
add
es
add
add
dec
add
add
and
add
add
dec
add
add
and
add
add
dec
add
add
sub
xchg
add
add
sub
add
add
add
xchg
and
inc
add
cmp
add
add
add
pop
and
add
das
add
sub
pop
and
add
pop
push
push
sub
es
and
add
xor
push
push
sub
sub
add
add
add
xchg
and
inc
add
sub
dec
add
add
or
add
push
sub
or
add
popf
or
pop
or
and
add
and
fiadd
mov
das
(bad)
(bad)
dec
cmp
(bad)
dec
cmp
(bad)
dec
cmp
sub
mov
add
add
mov
add
add
mov
add
add
mov
add
add
sub
add
push
(bad)
sbb
inc
sbb
add
add
add
add
add
add
add
add
add
xor
add
add
adc
jnp
add
add
cli
inc
add
add
add
push
cmp
add
add
push
cmp
add
add
nop
add
add
add
add
add
add
add
add
add
add
sbb
add
push
add
add
add
jnp
add
add
xor
jnp
add
add
jnp
add
add
push
cmp
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
push
push
sub
es
add
pop
jge
add
add
and
add
pop
jge
add
add
and
add
pop
jge
add
add
jnp
add
add
push
add
add
adc
jnp
add
add
jnp
add
add
push
(bad)
(bad)
call
sub
add
add
xor
fidiv
push
cmp
(bad)
(bad)
dec
cmp
(bad)
dec
cmp
(bad)
jmp
mov
test
(bad)
jmp
add
push
sub
push
mov
add
add
sub
add
push
(bad)
sbb
add
add
add
push
add
add
add
add
add
add
add
add
xor
inc
add
add
add
adc
add
add
jp
add
and
cmp
add
add
add
add
cmp
add
add
add
add
cmp
add
add
add
add
jnp
add
add
pop
cmp
add
add
add
add
sub
cmp
add
add
add
add
cli
jle
add
sub
pop
add
add
add
add
add
and
add
pop
adc
add
add
add
add
or
jnp
add
add
add
push
push
xor
sbb
pop
add
add
add
pop
add
add
add
add
add
add
adc
pop
xchg
adc
inc
jns
add
add
add
add
adc
pop
pop
pop
xchg
adc
inc
add
add
jnp
add
add
xchg
add
add
add
xchg
inc
push
add
add
jnp
add
add
pop
pop
xchg
add
add
add
pop
pop
xchg
inc
aaa
add
add
sbb
add
sbb
add
add
add
pop
pop
and
push
add
add
add
pop
and
rol
add
add
add
add
pop
pop
and
push
add
add
add
pop
and
mov
add
add
add
add
pop
pop
and
push
add
add
add
pop
and
xchg
add
add
jnp
add
add
pop
pop
and
push
add
add
add
pop
and
js
jnp
add
add
pop
pop
and
push
add
add
add
pop
and
pop
add
add
add
pop
pop
and
push
add
add
add
pop
and
inc
add
add
add
pop
pop
and
push
add
add
add
pop
and
and
jnp
add
add
pop
pop
and
push
add
add
add
pop
and
or
adc
aas
ud0
dec
adc
jge
add
add
adc
add
add
adc
adc
pop
das
aas
add
add
add
add
or
jnp
add
add
add
jnp
add
add
or
and
jg
add
and
inc
add
adc
adc
xor
push
pop
pop
and
(bad)
inc
adc
add
add
add
fwait
add
or
add
add
jnp
add
add
inc
inc
adc
or
cmp
xchg
(bad)
dec
mov
(bad)
dec
call
add
call
push
cmp
or
add
or
or
push
mov
add
add
mov
add
add
mov
mov
add
add
add
das
add
add
add
add
push
mov
add
add
pop
mov
add
add
or
adc
pop
or
or
adc
pop
or
or
adc
pop
or
mov
add
adc
sub
add
push
(bad)
sbb
or
add
add
stos
add
add
add
add
add
add
xor
add
add
adc
jnp
add
add
push
add
add
add
add
cmp
add
push
push
cmp
fild
add
add
add
add
je
jnp
add
add
and
jnp
add
add
jnp
add
add
jnp
add
add
pop
xchg
and
add
add
je
add
add
jge
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
add
cmp
add
add
es
jnp
add
add
dec
add
add
push
cmp
add
add
frstor
add
add
add
add
cli
inc
add
or
push
cmp
add
add
add
add
add
cmp
add
add
add
add
add
cmp
add
add
add
add
add
xor
sub
pop
sub
or
add
add
add
pop
and
jle
add
cmp
or
test
add
sub
add
add
add
xor
add
add
add
xor
add
add
add
jnp
add
add
and
adc
add
or
sub
dec
add
add
sbb
idiv
(bad)
call
aas
test
add
add
add
add
xor
jnp
add
add
jnp
add
add
pop
push
pop
pop
outs
jne
add
es
sbb
add
add
pop
jge
add
add
and
add
pop
jge
add
add
jnp
add
add
xor
add
add
pop
pop
and
add
add
pop
jge
add
add
and
add
pop
jge
add
add
push
jge
add
add
sbb
add
add
dec
add
add
add
and
jnp
add
add
jnp
add
add
jnp
add
add
pop
xchg
and
add
add
je
add
add
jge
add
add
and
add
pop
jge
add
add
and
add
pop
jge
add
add
jnp
add
add
jae
add
sub
add
add
add
jnp
add
add
or
add
or
push
cmp
(bad)
call
pop
or
jnp
add
add
or
jnp
add
add
inc
sub
push
adc
jnp
add
add
jnp
add
add
jnp
add
add
adc
jb
add
add
add
pop
jge
add
add
add
inc
sbb
and
(bad)
call
add
push
add
add
push
add
add
cmp
adc
cmp
(bad)
jmp
add
push
cmp
std
(bad)
call
add
jmp
add
push
cmp
std
(bad)
dec
cmp
std
(bad)
dec
cmp
std
(bad)
inc
mov
add
add
mov
add
add
mov
add
add
mov
add
add
add
add
add
add
mov
add
add
in
add
(bad)
sbb
add
inc
sbb
add
add
add
add
add
add
add
add
add
xor
add
add
sub
add
add
sub
add
sub
jnp
add
add
jnp
add
add
add
add
sub
xor
add
add
test
add
push
sub
add
add
add
mov
add
sub
push
sub
(bad)
push
sub
sbb
fidiv
sub
mov
sub
or
(bad)
or
jmp
mov
add
add
mov
add
add
add
mov
add
add
loope
add
(bad)
sbb
sub
add
adc
add
add
add
and
add
add
xor
add
add
add
add
add
add
add
add
push
jge
add
add
add
add
sub
fimul
add
sub
add
push
(bad)
sbb
add
add
add
add
add
sbb
add
sldt
add
xor
add
add
add
jnp
add
add
jnp
add
add
add
sub
fimul
or
sti
add
fld
add
(bad)
sbb
sub
add
add
add
add
add
pop
pop
add
sldt
add
xor
add
add
adc
jnp
add
add
and
add
push
sub
es
pop
jge
add
add
add
pushf
add
add
add
and
add
adc
pop
jge
add
add
add
arpl
pushf
fisub
or
ror
sub
push
mov
add
add
mov
add
add
add
loopne
add
(bad)
sbb
add
adc
add
add
add
sbb
add
add
xor
add
add
add
add
add
jnp
add
add
jnp
add
add
sbb
es
add
pop
jge
add
add
sbb
mov
jmp
das
add
add
add
loopne
add
(bad)
sbb
add
add
add
add
cs
sbb
add
sbb
add
and
add
add
add
add
sub
or
sti
add
fld
add
(bad)
sbb
sub
add
add
add
add
add
(bad)
str
sldt
add
xor
add
add
adc
jnp
add
add
xor
jnp
add
add
and
add
sbb
jge
add
add
add
add
add
pushf
add
add
add
xor
jnp
add
add
and
add
push
sub
es
pop
jge
add
add
add
add
add
rcr
add
push
jge
add
add
sbb
sub
mov
add
add
mov
add
add
sub
add
push
(bad)
sbb
add
adc
add
add
add
add
add
add
xor
add
add
adc
and
add
add
add
add
pop
pop
bound
pop
add
add
and
add
pop
jge
add
add
jnp
add
add
adc
add
add
add
and
add
sbb
push
es
pop
jge
add
add
add
add
add
pushf
add
add
add
and
add
push
sub
es
pop
jge
add
add
add
add
add
rcr
add
adc
add
add
and
add
adc
pop
add
add
or
test
mov
add
add
mov
add
add
add
mov
add
add
loope
add
(bad)
sbb
add
add
adc
add
add
add
add
sbb
add
pop
add
add
jnp
add
add
inc
sbb
lock
or
clc
add
fld
add
(bad)
sbb
sub
add
add
add
add
adc
add
add
xor
add
add
add
add
adc
jnp
add
add
xor
jnp
add
add
and
add
push
cmp
pop
pop
jge
add
add
add
add
add
pushf
add
add
fs
add
add
and
add
pop
jge
add
add
add
add
add
jnp
add
add
xor
add
add
add
jnp
add
add
sbb
pop
add
add
jnp
add
add
add
push
sub
es
jge
add
add
push
jge
add
add
and
add
jnp
add
add
add
pop
sub
es
add
pop
jge
add
add
sbb
or
pop
(bad)
(bad)
call
add
mov
or
mov
mov
ror
sub
push
mov
add
add
add
das
add
add
add
loope
add
(bad)
sbb
sub
add
adc
add
add
add
fld
sbb
add
add
and
add
add
jge
add
add
sub
add
or
or
add
inc
add
add
add
add
and
add
add
sbb
sbb
add
push
arpl
inc
add
pop
rcr
sub
ficomp
movs
add
or
loope
movs
add
or
jmp
add
fiadd
add
(bad)
sbb
add
add
add
add
add
aaa
aaa
add
sldt
add
xor
add
add
add
add
add
add
sub
es
pop
adc
sub
sub
xchg
add
push
sub
sub
in
add
mov
add
add
fiadd
add
(bad)
sbb
add
adc
add
add
add
add
sldt
add
add
movs
add
or
sbb
add
add
jb
(bad)
jo
outs
add
or
jb
(bad)
jo
pusha
add
add
sub
cmp
add
add
adc
cmp
add
add
adc
cmp
add
add
push
sub
(bad)
add
add
jae
add
or
cmp
add
push
cmp
add
jae
add
or
add
pop
add
add
or
outs
test
add
push
outs
test
xor
adc
outs
stos
add
or
adc
pop
and
jl
add
push
outs
stos
add
or
adc
and
adc
jl
add
jae
add
or
adc
outs
lods
add
or
add
add
or
adc
sub
movs
add
or
adc
imul
scas
add
add
pop
adc
adc
pop
adc
adc
push
outs
stos
add
or
adc
push
pop
adc
jl
add
push
outs
stos
add
or
adc
pop
push
pop
adc
jl
add
pop
adc
push
outs
lods
add
or
or
adc
push
outs
lods
add
or
or
push
outs
stos
add
or
outs
lods
add
or
or
sbb
add
or
adc
mov
pop
sub
movs
add
or
adc
push
adc
mov
cdq
add
or
adc
push
adc
mov
cdq
add
or
adc
push
adc
mov
cdq
add
or
adc
jb
adc
jo
pusha
add
add
adc
jl
add
push
outs
scas
add
or
jae
add
or
mov
cdq
add
or
outs
scas
add
or
outs
lahf
add
or
or
push
or
xchg
(bad)
(bad)
dec
cmp
or
adc
jo
or
add
or
add
or
adc
or
sub
sub
push
outs
mov
add
push
sub
pop
outs
mov
add
or
or
add
or
sub
or
add
or
adc
or
sbb
(bad)
dec
cmp
(bad)
(bad)
dec
and
(bad)
dec
inc
inc
add
add
add
aad
add
fwait
add
add
add
adc
add
ins
add
add
add
add
add
add
add
add
add
add
add
add
add
jnp
add
mov
add
sbb
add
add
add
add
add
cwde
add
add
add
add
add
add
add
add
add
jge
add
add
add
add
xor
mov
add
add
adc
sub
add
push
sub
ficom
add
jle
add
add
cdq
add
push
push
adc
jae
jb
adc
jo
xchg
add
push
push
sub
es
sub
pusha
add
add
sub
es
sub
sbb
sub
es
adc
jo
add
add
push
sub
add
add
add
or
add
add
add
sub
es
or
pushf
add
push
or
sub
or
inc
popf
add
push
jae
add
push
outs
add
add
or
add
add
adc
or
xchg
(bad)
(bad)
jmp
cdq
add
push
sub
sub
add
add
sub
adc
add
add
add
lldt
sldt
add
xor
add
add
das
add
adc
sub
add
add
add
sub
es
sub
sub
aas
add
add
jl
add
add
pop
sub
add
sub
xor
sub
sub
or
aam
sub
or
out
add
adc
add
add
add
adc
jnp
add
add
sub
adc
add
add
jae
add
push
push
sub
es
sub
outs
aam
add
sub
pop
add
add
popa
add
or
sub
es
cwde
add
push
sub
push
add
jle
add
or
sub
sub
cdq
add
push
sub
add
push
add
sbb
add
sub
add
add
sub
add
or
add
add
add
push
add
data16
add
add
add
add
add
add
adc
pop
add
add
add
add
adc
jb
adc
jo
mov
add
cmp
add
add
jnp
add
add
sbb
add
sub
add
or
adc
jo
sbb
cmp
add
add
push
mov
sub
add
add
imul
add
add
cmp
add
add
push
pop
push
mov
cmp
add
add
es
add
add
pop
push
mov
jnp
add
add
imul
es
add
add
sahf
add
push
sbb
mov
add
add
add
add
add
add
mov
jnp
add
add
mov
jnp
add
add
mov
inc
lahf
add
push
jae
add
push
outs
add
add
add
jnp
add
add
add
add
add
add
bound
add
sbb
sub
add
add
bound
add
sbb
jae
add
push
outs
aam
add
add
jge
add
add
outs
call
(bad)
dec
cmp
(bad)
dec
cmp
(bad)
jmp
mov
add
cmp
(bad)
(bad)
jmp
mov
dec
(bad)
(bad)
dec
pop
(bad)
(bad)
inc
add
cmp
sub
add
or
add
add
add
add
xor
add
add
add
jb
adc
jo
outs
add
or
sbb
aaa
add
add
add
add
sub
push
sub
imul
sub
add
add
jle
add
or
sbb
add
jge
add
add
outs
cdq
add
push
sub
outs
cwde
add
push
sub
add
jb
sub
add
or
add
add
add
add
add
add
ins
add
add
add
add
add
add
add
push
add
add
add
push
add
add
add
cmp
adc
mov
push
add
add
xor
iret
add
add
add
adc
push
lea
add
jge
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
sub
add
add
add
add
outs
add
add
add
push
jb
adc
jo
mov
or
push
jb
adc
jo
mov
add
sub
adc
jo
mov
add
sub
lea
add
and
add
mov
jo
add
add
cmp
and
add
mov
jo
add
add
xor
add
add
add
add
adc
sub
add
push
cmp
fnsave
jne
add
add
add
sbb
add
adc
jb
adc
jo
mov
cmp
add
fisttp
jne
add
add
add
push
cmp
add
adc
jb
adc
jo
mov
cmp
add
fstp
add
jne
add
add
add
add
push
cmp
add
add
adc
jb
adc
jo
mov
(bad)
add
add
jne
add
add
add
adc
add
ins
adc
jo
rol
or
fisttp
jne
add
add
add
adc
adc
jo
rol
or
fucomp
add
add
sub
add
add
add
adc
adc
jb
adc
jo
ret
or
ffree
add
add
jne
add
add
sbb
xchg
add
add
adc
adc
jb
adc
jo
ret
add
or
fstp
jne
add
add
add
adc
adc
jb
adc
jo
les
add
or
jg
jne
add
add
add
adc
adc
sub
add
or
or
or
adc
jo
mov
ficom
jne
add
add
add
adc
adc
sub
add
or
or
or
ins
adc
jo
rol
or
fisubr
fisub
or
ins
(bad)
(bad)
dec
cmp
cmp
cmp
cmp
cmp
(bad)
(bad)
jmp
fiadd
jle
add
or
push
sub
add
rol
add
add
add
add
add
add
add
jb
adc
jo
outs
add
or
push
sub
adc
jo
mov
sbb
adc
jo
add
sbb
add
mov
add
xor
add
add
or
enter
sub
adc
cmp
add
es
pop
jb
adc
jb
adc
push
add
add
add
add
push
push
cmp
add
or
push
add
add
jnp
add
add
jae
add
push
push
cmp
add
add
add
scas
add
add
leave
add
or
add
add
add
xor
inc
adc
mov
add
es
retf
or
cmp
or
or
add
or
add
outs
int3
add
or
lods
add
push
or
add
or
add
inc
adc
adc
add
or
outs
iret
add
or
add
push
adc
adc
add
or
outs
rol
add
sub
add
add
add
arpl
rol
add
adc
or
rol
add
outs
into
add
or
pop
add
sub
sub
add
sub
jnp
add
add
ins
adc
adc
add
or
sbb
into
add
or
inc
(bad)
(bad)
dec
call
or
adc
outs
add
add
fsubr
add
add
push
outs
rol
add
adc
adc
jne
add
add
jb
adc
adc
add
add
aam
add
sub
add
add
add
add
clc
add
add
add
aad
add
adc
add
sub
or
adc
jae
add
or
or
pop
pop
and
and
outs
xlat
add
or
adc
or
outs
xlat
add
or
adc
jb
adc
add
or
adc
jb
adc
add
or
adc
adc
jb
adc
jo
mov
fadd
add
adc
pop
sub
add
or
adc
outs
add
add
adc
or
add
add
add
outs
ins
add
or
push
adc
cmp
sub
or
or
add
or
xor
(bad)
add
or
or
or
outs
add
add
outs
fadd
add
adc
jb
adc
add
or
adc
adc
outs
fadd
add
adc
pop
sub
add
or
adc
outs
add
add
adc
sub
or
add
or
push
sub
adc
fld
add
sub
adc
fiadd
add
add
rol
add
outs
fiadd
add
or
add
aad
add
adc
add
jae
add
push
adc
outs
leave
add
or
add
xor
inc
adc
add
or
add
add
lods
add
push
push
sub
add
sub
add
fild
add
sub
or
add
or
push
or
add
add
jb
(bad)
jo
jb
adc
add
or
push
adc
sub
add
jb
add
jo
xchg
add
adc
add
add
add
scas
adc
sub
into
add
or
and
or
add
retf
or
lods
add
push
add
sub
sub
add
sub
or
or
outs
add
add
fsubr
or
fwait
cld
(bad)
dec
cmp
cmp
or
(bad)
cld
(bad)
inc
add
add
add
out
add
add
add
add
or
add
add
xor
add
add
adc
outs
rol
push
push
cmp
adc
add
es
push
cmp
sub
sub
add
add
outs
fadd
add
outs
rol
push
push
sub
add
or
or
sub
or
pop
pop
sub
jnp
add
add
fiadd
add
xor
pop
adc
je
add
fiadd
add
sbb
sbb
xlat
pop
sub
je
add
outs
fild
add
add
add
add
mov
add
rol
add
outs
into
add
or
or
jo
(bad)
dec
cmp
(bad)
dec
je
(bad)
dec
cmp
call
adc
add
push
add
add
add
adc
sub
scas
add
push
sbb
xor
sbb
push
adc
jae
add
rcl
rol
add
sbb
sub
jnp
add
add
iret
adc
sub
sub
sub
outs
into
add
or
loop
into
add
or
out
add
add
xor
add
add
adc
sub
sub
js
sbb
pop
sub
add
add
add
or
adc
add
or
adc
add
add
or
(bad)
(bad)
inc
pop
pop
pop
sbb
dec
adc
sub
add
or
add
add
outs
loopne
add
push
sub
sbb
adc
pop
outs
jecxz
add
outs
in
add
push
sub
adc
jb
push
add
in
add
pop
outs
out
add
jae
add
push
jge
add
add
sub
cmp
sub
sub
add
adc
add
jle
add
aaa
add
adc
add
add
add
add
add
or
sub
es
js
add
outs
out
add
sub
add
add
add
outs
call
add
add
add
jmp
sub
add
add
add
add
add
add
sub
es
add
add
pop
sbb
sbb
pop
pop
sub
sub
sub
jmp
jmp
add
sub
add
sbb
add
lock
add
add
adc
sub
stos
add
push
push
cmp
adc
sub
push
add
add
add
xor
add
add
add
cmp
add
sub
mov
add
es
push
ds
add
add
add
add
dec
push
add
add
rol
add
push
cmp
add
es
add
outs
aad
add
push
cmp
add
add
add
add
outs
out
add
sub
add
add
add
outs
call
cmp
add
cmp
add
add
add
or
add
outs
loopne
add
outs
in
add
or
add
or
add
add
or
jns
(bad)
call
xor
add
jo
out
add
or
adc
pop
outs
xlat
add
or
adc
add
or
adc
pop
outs
xlat
add
or
add
add
or
push
adc
outs
push
add
or
xor
add
push
outs
fadd
add
adc
outs
xlat
add
or
add
add
or
add
add
or
add
jb
push
add
lock
or
pop
adc
push
xor
adc
outs
push
add
or
pop
adc
adc
outs
push
add
or
icebp
add
or
push
add
jno
add
repnz
or
or
add
or
add
or
adc
outs
enter
outs
fadd
add
add
add
add
repz
or
jnp
add
add
add
add
add
outs
hlt
add
or
jnp
add
add
or
add
or
jnp
add
add
jne
add
add
rol
add
outs
into
add
or
das
or
dec
(bad)
(bad)
jmp
add
or
gs
(bad)
dec
cmp
(bad)
jmp
add
or
test
(bad)
dec
dec
lods
(bad)
(bad)
jmp
fiadd
sub
add
add
add
add
add
call
add
add
add
add
add
add
xor
add
add
add
add
adc
sub
add
add
add
xchg
pop
inc
sbb
rol
add
add
outs
push
add
or
push
sub
add
add
or
xor
push
sub
cmc
add
or
and
or
add
add
fnsave
push
cmp
add
add
or
pop
push
cmp
sub
sub
add
outs
cmc
add
or
cmp
add
sbb
push
sbb
jb
add
es
adc
jo
add
add
pop
add
add
add
imul
adc
adc
add
adc
add
imul
add
aas
or
pop
or
push
cmp
(bad)
(bad)
inc
push
sub
sub
cmp
(bad)
(bad)
call
push
cmp
dec
cmp
(bad)
dec
je
(bad)
dec
call
add
mov
(bad)
jmp
adc
adc
sub
add
add
add
add
cli
cli
add
add
add
sbb
add
sbb
add
xor
add
sub
or
sub
or
sti
es
push
add
fiadd
push
sub
add
add
add
add
add
push
push
add
add
add
sbb
add
sub
add
cmp
add
sub
add
or
add
or
sub
es
sub
sub
es
lea
add
add
pop
push
sub
pop
or
add
sub
adc
add
add
add
push
add
add
add
xor
add
add
adc
pop
add
or
sub
or
sti
es
fiadd
push
sub
add
add
add
add
add
push
push
add
sbb
add
add
add
add
add
add
pop
add
add
add
add
add
or
add
add
add
add
add
jae
add
or
add
or
add
add
jnp
add
add
cmp
add
add
add
(bad)
push
add
push
add
push
sbb
mov
add
add
add
rcl
jo
sti
adc
jo
mov
cmp
or
add
es
add
add
xlat
push
add
xchg
add
or
cmp
add
adc
jb
push
add
cli
add
or
cmp
or
add
es
add
add
pop
(bad)
jo
scas
add
push
push
cmp
or
add
es
add
add
sti
add
or
cld
add
or
add
add
add
in
push
add
jnp
add
add
sbb
sbb
xor
add
in
add
outs
into
add
or
jnp
add
add
sti
push
add
std
add
or
sbb
push
add
in
add
outs
into
add
or
jnp
add
add
jmp
xor
add
add
add
inc
add
add
add
add
sti
adc
jo
popa
add
or
add
push
outs
jmp
add
add
inc
add
push
xor
add
add
add
add
add
add
add
add
sti
adc
jo
outs
jmp
add
add
add
add
or
push
add
push
adc
sub
add
mov
add
adc
push
adc
sub
pop
adc
call
jae
add
dec
push
add
push
add
push
adc
add
add
add
iret
adc
out
add
outs
into
add
or
jnp
add
add
and
add
outs
add
add
outs
into
add
or
push
xor
add
xor
inc
adc
add
or
add
fiadd
fimul
and
adc
outs
add
add
fcom
and
pop
adc
adc
adc
mov
jl
(bad)
(bad)
fimul
push
sub
adc
outs
add
add
fadd
jnp
add
add
aas
pop
add
push
add
push
adc
add
add
add
leave
add
add
jnp
add
add
add
add
push
ds
jnp
add
add
add
add
outs
add
add
adc
cmp
and
add
add
add
add
popa
pop
add
push
add
push
adc
jnp
add
add
iret
adc
into
add
or
jnp
add
add
outs
push
add
or
add
or
jnp
add
add
ins
adc
adc
add
or
and
jnp
add
add
scas
adc
add
jo
jb
add
jo
xor
add
outs
into
add
or
or
and
pop
adc
add
add
fcom
and
pop
add
or
outs
(bad)
(bad)
(bad)
fimul
adc
(bad)
push
adc
add
outs
add
add
(bad)
or
and
adc
outs
add
add
fadd
jnp
add
add
and
add
add
add
add
or
add
push
adc
add
add
add
add
jg
add
push
add
push
adc
add
or
add
outs
or
add
adc
cmp
add
add
sub
add
or
add
jnp
add
add
fwait
pop
add
push
add
push
adc
add
add
add
mov
add
add
into
add
or
jnp
add
add
add
or
add
adc
add
mov
add
add
into
add
or
jnp
add
add
iret
pop
add
add
add
sub
sub
rol
add
outs
into
add
or
add
add
push
add
or
xor
add
add
add
fst
add
add
add
into
add
or
pop
add
add
add
jmp
add
add
into
add
or
or
daa
sub
adc
outs
add
add
fcom
sub
xor
(bad)
(bad)
fimul
adc
(bad)
push
adc
add
outs
add
add
(bad)
or
and
outs
add
add
fadd
jnp
add
add
repz
add
push
add
push
adc
add
add
add
pop
sbb
jo
push
add
or
add
or
add
or
jnp
add
add
sub
adc
add
outs
adc
add
outs
add
add
outs
sgdtd
or
jnp
add
add
inc
sbb
jo
adc
add
outs
adc
add
mov
add
outs
add
add
outs
sgdtd
or
jnp
add
add
pop
sbb
jo
or
sgdtd
or
jnp
add
add
jae
add
or
add
sub
add
add
jo
sgdtd
or
jnp
add
add
mov
add
or
add
sub
add
add
jo
sgdtd
or
jnp
add
add
xchg
sbb
jo
or
add
sub
add
add
jo
sgdtd
or
add
fiadd
fimul
sub
adc
outs
add
add
fdiv
add
or
push
add
add
add
pop
sub
adc
adc
outs
adc
add
adc
outs
adc
pop
adc
sub
push
add
or
jnp
add
add
test
push
add
push
adc
adc
outs
pop
add
or
sub
dec
add
add
sub
sbb
add
adc
add
or
mov
add
adc
outs
sbb
add
jb
sbb
jo
sbb
add
cmp
add
adc
outs
sbb
add
jb
sbb
jo
sbb
add
je
add
add
or
or
add
or
or
adc
adc
outs
sbb
sub
mov
outs
jae
add
adc
or
rol
add
adc
adc
adc
pop
xor
or
or
fs
xor
jnp
add
add
loope
add
push
add
push
adc
add
std
sbb
jo
or
rol
add
outs
into
add
or
or
sub
outs
add
add
(bad)
add
add
or
xor
adc
adc
pop
fs
add
add
or
jo
push
add
or
or
pop
add
or
adc
adc
jo
push
add
or
or
pop
add
or
adc
adc
jo
push
add
or
or
pop
add
or
adc
adc
jo
push
add
or
or
pop
add
or
add
adc
adc
push
adc
adc
sub
retf
add
add
jnp
add
add
jnp
add
push
add
push
adc
add
add
add
pop
sbb
jo
push
sub
add
or
add
or
jnp
add
add
inc
sbb
jo
adc
rol
add
outs
into
add
or
adc
sub
adc
push
xor
add
add
add
dec
push
add
adc
rol
add
outs
into
add
or
unpckhps
sbb
sub
add
add
add
xor
add
movaps
add
or
add
or
adc
das
push
adc
sub
sub
adc
adc
call
jae
add
push
adc
test
add
fiadd
fiadd
adc
pop
pop
adc
adc
adc
mov
aam
sub
fimul
cs
adc
outs
add
add
(bad)
add
fiadd
adc
jo
add
cmp
adc
add
add
xor
xor
adc
outs
add
add
(bad)
add
fiadd
adc
sub
add
or
lods
std
(bad)
(bad)
fimul
adc
(bad)
push
adc
add
outs
add
add
(bad)
or
sub
adc
outs
add
add
fadd
sub
jnp
add
add
xchg
sbb
jo
push
add
push
adc
add
add
add
movs
sbb
jo
jnp
add
add
repz
or
xor
xor
rol
add
outs
into
add
or
adc
jne
add
adc
or
add
or
push
fisub
adc
pop
and
pop
outs
mov
and
xchg
add
adc
fiadd
add
add
add
jne
add
push
outs
sgdtd
or
adc
adc
add
repz
or
mov
sub
adc
outs
add
add
fadd
jnp
add
add
mov
add
push
add
push
adc
jnp
add
add
movs
sbb
jo
jnp
add
add
jmp
xor
add
or
add
or
adc
sub
jnp
add
add
rcl
jo
push
add
push
adc
add
add
add
sbb
add
or
sbb
jnp
add
add
mov
sbb
add
add
into
add
or
sbb
add
add
push
add
or
xor
add
add
add
leave
sbb
jo
sbb
add
add
into
add
or
or
ss
adc
outs
add
add
fcom
sbb
pop
adc
adc
add
add
add
jmp
jl
(bad)
(bad)
fimul
xor
pop
adc
add
add
(bad)
xor
add
or
out
(bad)
call
sbb
div
(bad)
jmp
add
or
add
(bad)
jmp
add
or
adc
(bad)
call
sbb
adc
outs
add
add
fadd
jnp
add
add
and
add
add
add
add
and
add
add
add
add
sahf
add
or
add
add
add
lahf
add
or
add
add
jnp
add
add
outs
and
inc
idiv
call
sbb
push
idiv
inc
add
add
add
add
scas
add
add
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cdq
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
push
add
add
add
add
add
add
add
cmc
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
sub
add
sbb
add
inc
push
add
or
add
jle
add
adc
add
pop
add
add
add
add
add
add
add
clc
push
add
lods
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
jmp
add
pop
add
adc
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
xchg
add
add
in
pop
add
push
add
add
add
add
add
add
add
add
pop
add
or
add
dec
or
add
add
add
add
and
add
sldt
add
add
add
or
add
or
add
add
add
add
add
add
add
add
dec
add
add
add
or
add
add
add
add
add
(bad)
or
add
or
add
add
add
add
add
add
push
add
add
add
test
add
or
add
add
add
sbb
add
and
add
jnp
add
add
imul
jo
push
add
push
sbb
push
add
add
push
push
cmp
add
add
cmp
jnp
add
add
outs
fadd
add
push
cmp
add
add
pop
outs
rol
push
push
cmp
pop
outs
ret
push
push
cmp
add
add
add
fistp
add
push
add
push
push
cmp
add
add
add
mov
add
rol
add
outs
into
add
or
add
adc
jo
lea
add
adc
adc
push
pop
sub
adc
outs
add
or
adc
adc
cmp
adc
adc
adc
adc
jb
add
jo
out
add
or
add
or
add
or
push
outs
outs
add
or
sbb
bound
adc
pop
pop
adc
adc
adc
pop
outs
daa
add
or
adc
inc
adc
or
add
adc
adc
outs
rol
add
outs
enter
adc
adc
jb
sbb
jo
out
add
or
adc
jb
sbb
jo
out
add
or
add
add
adc
pop
pop
adc
adc
adc
adc
add
sub
add
or
add
add
outs
aad
add
sub
adc
add
dec
or
add
or
or
jb
sbb
jo
sub
add
adc
xor
jne
add
add
jo
add
stos
adc
add
or
add
adc
add
jo
add
fild
jo
xor
add
adc
add
fiadd
adc
pop
add
add
add
scas
adc
sub
into
add
or
outs
retf
add
or
xor
add
add
outs
int3
add
or
lods
add
push
or
add
or
add
inc
adc
adc
add
or
outs
iret
add
or
add
push
adc
adc
add
or
outs
rol
add
cmp
je
add
add
or
jnp
add
add
arpl
outs
sub
add
adc
adc
sub
add
or
add
or
add
or
or
adc
sub
or
xor
push
cmp
(bad)
(bad)
call
or
sub
xlat
add
or
adc
adc
adc
outs
sub
add
outs
sub
add
adc
pop
pop
adc
adc
adc
outs
sub
add
xor
add
add
add
iret
pop
add
or
add
or
add
or
or
add
or
inc
sgdtd
add
or
add
or
or
adc
push
cmp
(bad)
call
or
or
or
adc
push
adc
pop
adc
or
or
jae
add
push
adc
test
add
fiadd
fiadd
adc
adc
cmp
or
lods
add
push
pop
outs
rol
push
cmp
add
add
jne
add
add
lea
add
add
add
add
push
sbb
jo
push
add
push
adc
push
adc
or
add
outs
sbb
sbb
cmp
sbb
add
or
movups
pop
adc
pop
add
add
add
outs
sbb
jo
popa
add
or
add
or
push
add
movhps
add
push
adc
test
add
adc
pop
pop
adc
adc
outs
jo
add
sub
sbb
add
add
sbb
sbb
adc
outs
add
add
(bad)
or
sbb
adc
outs
add
add
(bad)
add
fiadd
add
sub
adc
sub
adc
outs
add
add
fadd
pop
pop
or
add
add
add
fiadd
add
aas
ss
(bad)
(bad)
fisubr
or
sub
(bad)
dec
cmp
cld
(bad)
dec
inc
cld
(bad)
dec
call
adc
pop
cld
(bad)
call
adc
adc
outs
add
add
fsubr
adc
cmp
sti
(bad)
inc
inc
lods
add
add
add
dec
add
add
add
mov
add
add
add
add
add
add
add
loop
add
sbb
add
cli
add
add
add
add
add
add
add
add
add
add
pushf
add
add
add
add
add
add
add
add
mov
add
or
add
daa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
sbb
add
cdq
add
add
add
adc
sbb
add
add
add
push
pop
outs
add
or
cmp
add
es
sbb
add
add
push
push
cmp
add
cmp
add
add
add
add
pop
outs
das
add
or
add
sub
pop
outs
leave
add
or
add
sub
fisttp
push
cmp
add
es
pop
outs
daa
add
or
cmp
add
es
adc
sub
push
adc
call
or
add
or
add
or
sbb
jo
mov
add
sub
push
or
push
adc
pop
pop
adc
adc
adc
mov
int3
or
sub
outs
rol
push
outs
pop
add
or
jae
add
push
pop
sub
cmp
adc
mov
(bad)
call
push
cmp
fiadd
adc
adc
aas
ss
(bad)
inc
outs
rol
push
add
add
push
outs
xor
add
add
add
push
jae
add
push
adc
add
add
push
sub
jae
add
sbb
add
push
adc
push
sub
sbb
jo
stos
add
push
add
add
add
mov
jnp
add
add
fiadd
add
adc
adc
sub
add
or
add
or
or
or
adc
outs
add
add
fadd
jnp
add
add
outs
fild
add
sub
cmp
add
xchg
(bad)
(bad)
call
add
dec
cmp
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
aas
add
adc
jnp
add
add
xchg
add
push
add
push
adc
add
add
add
or
cmp
add
push
cmp
jb
push
add
cmp
add
add
or
sub
or
sti
fiadd
add
add
add
fwait
sbb
jo
sbb
add
es
add
or
add
or
jnp
add
add
stos
sbb
jo
outs
into
add
or
pop
and
add
or
outs
add
or
jb
sbb
jo
aaa
add
or
or
or
add
or
jnp
add
add
fstp
add
outs
into
add
or
add
jae
add
push
sub
and
cmp
jmp
lods
add
push
cmp
dec
cmp
(bad)
jmp
add
or
ja
(bad)
jmp
fiadd
fimul
add
pop
adc
add
add
fsubr
adc
adc
(bad)
inc
add
add
add
cmp
cmovns
add
add
add
add
add
jmp
add
pop
add
out
add
add
add
xor
add
add
add
sbb
cmps
add
add
add
mov
add
push
sub
fidiv
sub
or
add
or
sub
cmp
add
push
xor
sbb
sbb
add
or
pop
outs
cmp
add
sbb
outs
cmp
add
push
sub
fimul
add
in
or
hlt
fiadd
adc
jb
sbb
jo
outs
mov
mov
add
add
cmp
add
sub
and
call
pop
ficom
sbb
add
aas
sbb
jo
dec
sbb
jo
mov
sub
adc
push
adc
fisubr
sub
push
(bad)
(bad)
call
add
adc
ficom
adc
push
sub
jae
add
push
sub
adc
fiadd
adc
sub
xor
add
add
aas
pop
add
add
add
add
or
nop
jo
add
add
add
add
add
add
add
mov
add
add
xor
add
add
inc
add
adc
sub
add
add
add
sub
es
sub
sub
cmp
add
adc
jl
add
add
pop
sub
add
sub
xor
sub
sub
or
aam
sub
or
out
add
adc
add
and
add
inc
add
adc
jnp
add
add
sub
es
sub
push
add
push
sub
es
sub
outs
mov
push
sub
add
add
xor
add
add
inc
add
adc
sub
add
add
add
sub
es
sub
sub
adc
add
adc
jl
add
add
pop
sub
add
sub
xor
sub
sub
or
aam
sub
or
out
add
add
jge
add
add
add
add
add
add
add
add
push
add
or
inc
sub
popa
add
or
add
or
add
or
add
push
sub
add
add
add
add
add
jae
add
push
jge
add
add
add
push
add
add
add
add
or
mov
add
jb
sub
add
or
add
add
add
add
test
add
add
add
add
add
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
cmp
sub
add
add
add
add
add
jge
add
add
add
add
add
jge
add
add
add
add
add
add
add
and
add
add
add
add
add
jnp
add
add
add
sub
jnp
add
add
mov
add
sub
mov
pop
jge
add
add
pop
jge
add
add
sub
add
add
add
add
mov
add
push
add
add
add
push
add
add
add
and
add
add
add
add
add
add
jge
add
add
pop
jge
add
add
sub
add
add
add
add
add
add
add
popa
add
or
fadd
add
sub
add
add
inc
add
add
add
add
jle
add
or
add
add
jle
add
or
add
add
sub
add
add
add
add
or
push
add
or
inc
sub
push
jge
add
add
add
xchg
add
add
add
add
add
xor
add
add
inc
add
adc
jb
sbb
jo
jnp
add
add
das
add
add
das
add
add
data16
or
cmp
add
add
es
sbb
jo
jnp
add
add
das
add
add
das
add
add
data16
or
cmp
add
add
es
sbb
jo
jnp
add
add
das
add
add
das
add
add
data16
or
cmp
add
add
es
add
add
or
jnp
add
add
imul
mov
add
sbb
jo
mov
add
add
das
add
add
data16
or
cmp
es
push
cmp
sub
xchg
sbb
jo
mov
add
add
jbe
add
or
jnp
add
add
call
add
add
sub
add
outs
add
or
xor
sub
jnp
add
add
call
aad
add
jnp
add
add
call
xor
add
sub
add
outs
add
or
add
fiadd
pop
pop
and
pop
push
aas
mov
(bad)
jmp
outs
add
or
repnz
(bad)
jmp
add
or
or
add
or
sub
(bad)
dec
cmp
(bad)
jmp
add
or
push
(bad)
(bad)
dec
cmp
inc
add
add
add
add
les
push
pop
add
sldt
add
xor
add
add
adc
sub
add
or
add
sbb
jo
aas
add
or
add
add
add
sbb
jo
aas
add
or
add
add
add
sbb
jo
aas
add
or
add
add
jb
sbb
jo
aas
add
or
add
lea
add
add
add
add
or
add
add
add
add
sbb
jo
mov
add
add
jbe
add
shl
add
sub
add
outs
inc
add
or
jnp
add
add
jb
sbb
jo
fiadd
pop
pop
pop
or
push
xor
add
add
sub
adc
add
add
add
add
jge
add
add
push
add
mov
add
add
add
sahf
add
add
add
add
push
lea
add
add
sub
sub
add
push
sub
add
add
xor
sub
add
inc
add
adc
sub
push
sub
add
add
push
sub
es
push
add
es
sub
out
sub
add
push
sub
add
add
xor
and
add
inc
add
adc
sbb
push
sub
es
push
add
push
push
sub
es
sub
sub
add
push
sub
adc
add
add
add
add
pop
sub
add
lea
add
add
sub
es
push
add
push
sbb
or
es
sub
out
out
add
sub
add
adc
add
sub
add
adc
sbb
push
sub
es
push
add
push
sbb
add
push
push
sub
or
in
out
add
sub
add
add
xor
xor
add
inc
add
adc
sbb
pop
sub
add
push
sbb
add
push
sbb
add
push
es
sub
sub
add
push
sub
add
adc
add
aaa
add
add
add
add
sbb
add
push
sbb
add
push
sbb
add
push
mov
es
sub
sub
add
push
sub
add
xor
inc
add
add
add
push
sub
add
add
sub
es
push
add
push
sbb
add
push
sbb
add
push
mov
mov
es
sub
sub
add
push
sub
add
adc
add
inc
add
add
add
add
lea
add
add
sub
es
push
add
push
sbb
add
push
sbb
add
push
mov
mov
mov
es
sub
sub
add
push
sub
add
add
xor
inc
add
add
add
add
or
push
sub
es
push
add
push
sbb
add
push
sbb
add
push
mov
mov
mov
mov
es
sub
sub
add
push
sub
add
xor
push
add
add
add
adc
add
es
add
es
push
cmp
add
add
or
cmp
add
add
add
add
or
add
add
or
lea
add
sbb
or
pop
or
pop
or
add
or
sub
adc
push
adc
sub
adc
adc
call
add
or
sub
or
pop
or
or
pop
adc
adc
adc
mov
xlat
fimul
adc
les
adc
outs
cmp
add
push
and
and
outs
cmp
add
pop
pop
outs
cmp
add
adc
adc
outs
inc
add
or
add
or
(bad)
(bad)
inc
pop
pop
pop
or
push
outs
cmp
add
or
add
fiadd
push
add
or
add
push
adc
add
add
or
sbb
jo
sbb
add
push
sub
inc
add
or
or
outs
sbb
add
jb
sbb
jo
or
add
or
pop
add
add
or
sbb
jo
sbb
add
je
add
sbb
or
or
pop
outs
inc
add
or
fiadd
fiadd
sub
cmp
(bad)
(bad)
dec
cmp
(bad)
(bad)
dec
into
(bad)
(bad)
dec
inc
sub
add
add
add
add
xchg
add
rol
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
sub
add
sbb
add
sub
add
or
inc
repnz
push
jae
add
or
sub
es
push
icebp
add
push
jae
add
or
sub
sub
add
or
call
or
icebp
sbb
add
pushf
add
add
add
jle
add
add
jp
pop
add
or
add
or
sub
cmp
add
sub
or
add
es
sub
push
outs
xor
add
sub
push
outs
xor
add
rol
add
sub
add
xor
sub
dec
add
or
add
and
add
add
add
sbb
add
fiadd
or
pop
push
sub
or
mov
sub
(bad)
(bad)
jle
add
add
or
mov
(bad)
dec
mov
(bad)
dec
cmp
sub
add
add
add
inc
add
push
add
add
add
add
add
add
sub
add
add
add
jle
add
add
inc
adc
add
or
sub
add
push
add
add
outs
hlt
add
push
push
sub
pop
sub
add
push
sub
es
add
push
add
push
push
sub
es
sub
add
push
sub
outs
cmc
add
push
sub
add
add
xor
add
add
add
dec
add
or
cmp
push
outs
xor
add
push
cmp
push
sub
pop
outs
enter
jb
sbb
add
or
sub
outs
out
add
or
sbb
add
or
pop
jb
sbb
add
or
outs
pop
add
or
add
push
sub
es
sub
add
add
sbb
jle
add
add
inc
adc
add
or
add
jne
add
add
hlt
add
push
sub
fisub
add
pop
push
sbb
ficomp
or
ins
(bad)
(bad)
dec
cmp
dec
sub
push
sub
fiadd
sub
adc
add
add
add
add
add
xor
add
add
add
dec
add
or
add
add
jle
add
add
inc
adc
add
or
add
dec
add
or
add
add
hlt
add
push
sub
push
sub
outs
dec
add
or
add
add
push
sub
dec
add
or
add
add
dec
add
or
inc
push
sbb
fimul
sub
add
push
sub
fiadd
sub
adc
add
add
add
add
add
add
jle
add
or
add
xor
add
add
dec
add
adc
jae
add
push
push
sub
add
sbb
outs
rol
add
push
sub
and
sub
push
outs
iret
add
push
sub
pop
sub
sub
outs
in
add
push
sub
sub
add
sub
add
sbb
add
adc
add
adc
outs
xor
add
sbb
test
add
push
outs
enter
jb
sbb
add
or
push
outs
out
add
or
sbb
add
or
add
push
add
or
outs
pop
add
or
add
sbb
mov
pop
adc
add
add
add
add
add
sub
outs
repz
push
add
jnp
add
add
movs
add
push
sbb
nop
add
add
or
inc
clc
add
push
jae
add
push
sbb
add
add
or
inc
test
add
or
sub
es
inc
test
push
jae
add
push
outs
mov
add
sbb
or
jae
add
push
or
push
sub
or
add
push
add
adc
push
outs
leave
add
push
or
outs
int3
add
push
sub
add
add
add
push
or
outs
leave
add
push
or
outs
int3
add
push
add
outs
jmp
add
or
add
push
push
inc
or
cs
imul
jmp
add
push
cmp
(bad)
jmp
add
push
cmp
(bad)
jmp
ficom
adc
adc
les
add
outs
in
add
push
fiadd
pop
cmp
add
add
test
or
add
or
or
adc
sub
or
or
outs
out
add
adc
adc
jb
sbb
add
or
adc
jb
sbb
add
or
adc
jo
loope
add
jb
push
add
push
add
or
add
or
outs
push
add
or
pop
adc
outs
rol
add
jb
push
add
lea
push
add
or
pop
adc
push
add
or
fiadd
fiadd
adc
pop
pop
adc
pop
cmp
(bad)
call
or
or
aas
jno
(bad)
jmp
push
inc
inc
loopne
push
add
or
dec
add
or
adc
and
inc
loopne
push
add
or
add
fiadd
fiadd
sub
cmp
add
aas
(bad)
(bad)
dec
cmp
(bad)
inc
add
add
add
add
ret
add
add
ret
adc
add
add
add
imul
add
add
add
add
add
add
add
add
add
fiadd
adc
add
add
add
add
sub
es
add
push
sub
adc
add
and
add
dec
add
adc
jnp
add
add
sub
es
sub
push
add
sub
es
sub
outs
push
add
or
cmc
add
add
xor
and
add
xor
add
add
add
add
sub
es
sub
push
add
sub
es
sub
outs
aam
add
sub
add
add
add
sbb
add
sub
push
push
add
push
add
or
jb
adc
add
add
add
add
jle
add
add
add
add
add
pop
push
add
add
or
pop
add
or
and
jne
add
pop
add
or
add
adc
add
add
add
add
push
add
lea
add
add
sub
es
push
add
add
push
call
or
jmp
add
adc
add
xor
add
dec
add
adc
add
pop
add
or
sub
es
jne
add
add
sub
es
sub
pop
outs
pop
add
or
push
sub
es
sub
sub
or
jmp
or
icebp
add
add
add
jb
push
add
add
or
pop
add
or
and
mov
add
or
adc
add
add
add
add
push
add
lea
add
add
sub
add
push
sbb
add
push
sbb
add
add
or
call
or
fld
adc
add
xor
add
dec
add
adc
add
pop
add
or
sub
es
jne
add
add
sub
es
sub
pop
outs
pop
add
or
push
sub
es
sub
sub
or
jmp
or
icebp
add
add
jge
add
add
add
add
xor
add
add
add
add
add
add
add
cwde
add
add
add
push
push
sub
es
sub
add
add
add
or
add
add
add
sub
push
add
add
add
cld
add
push
jge
add
add
jnp
add
add
push
add
or
add
pop
add
or
jnp
add
add
sbb
add
mov
add
sub
push
sub
add
add
test
sub
fisubr
or
xchg
(bad)
(bad)
jmp
add
or
movs
or
sub
pop
add
outs
mov
add
or
add
push
fisub
add
add
dec
adc
jo
outs
add
or
add
push
add
add
add
sub
es
add
push
sub
add
add
add
or
jl
add
add
add
xor
add
add
dec
add
adc
jnp
add
add
inc
add
sbb
stos
add
add
or
add
add
add
sub
es
add
add
add
add
push
add
inc
add
push
sub
es
or
iret
outs
pusha
add
or
fsubr
add
push
sub
or
add
jo
outs
mov
add
or
add
push
fiadd
sub
add
add
add
add
add
dec
dec
add
sldt
add
add
sbb
add
add
jge
add
add
add
jb
pop
add
cmps
add
add
or
add
dec
add
add
add
add
add
add
inc
jg
add
add
adc
jg
add
add
dec
add
add
data16
or
ja
add
jge
add
add
lods
add
add
push
add
push
es
sub
add
add
sub
fiadd
jle
add
add
add
add
adc
add
add
add
inc
add
add
add
sbb
add
cmp
add
dec
add
adc
add
adc
sbb
sbb
adc
jnp
add
add
or
add
sub
push
sub
fimul
sub
add
push
sub
or
hlt
es
or
add
sub
add
add
add
add
add
xor
add
sbb
add
add
add
sub
pop
pop
sub
add
push
push
inc
push
inc
sbb
push
es
sub
sub
sbb
push
or
add
sub
add
adc
add
add
add
add
add
add
cmp
or
add
jnp
add
add
inc
sub
sub
add
push
jnp
add
add
push
sub
add
or
add
add
add
jnp
add
add
outs
popa
add
or
add
jnp
add
add
sub
sub
add
or
clc
add
add
push
sub
es
add
push
sub
adc
add
cmp
add
and
add
push
sbb
adc
add
sub
add
pop
sbb
push
sub
es
sub
push
sbb
in
pop
push
sub
es
sub
or
jmp
int3
add
push
sub
push
add
add
push
jp
jae
add
push
push
sub
es
sub
out
add
push
sub
add
add
stc
add
push
sub
add
arpl
add
sub
add
add
popa
push
out
mov
les
(bad)
hlt
push
xor
xchg
fs
xor
fdivr
jmp
rcl
mov
sub
mov
sbb
dec
jno
repz
test
ficomp
jmp
(bad)
mov
hlt
mov
imul
std
in
leave
mov
add
ins
push
arpl
psubd
or
outs
cmp
imul
addr16
add
aam
dec
std
test
movs
cli
test
xor
(bad)
leave
mov
lods
jecxz
fdiv
jne
fild
or
shr
cmp
ficom
push
xlat
enter
mov
and
mov
cdq
xchg
mov
mov
or
or
and
or
adc
stos
sbb
data16
inc
fdiv
jno
add
aad
mov
mov
movs
in
lahf
xor
mov
js
stc
add
mov
push
loope
or
ins
or
pop
arpl
hlt
push
imul
ins
sbb
xor
dec
add
in
xchg
push
ins
jnp
add
shl
adc
cmc
(bad)
fnstenv
adc
mov
mov
bound
ficom
gs
aam
pop
popa
mov
into
push
mov
je
mov
aam
movs
fisttp
xchg
fdivr
sti
hlt
(bad)
shr
imul
mov
sar
add
in
add
pop
dec
or
cmp
add
daa
adc
or
and
test
or
mov
popa
into
push
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
mov
cmp
lods
ins
mov
in
mov
mov
add
inc
aad
scas
ja
popf
adc
push
fdiv
or
test
fs
ds
or
or
push
in
dec
xchg
daa
scas
add
mov
pop
jge
xchg
(bad)
shl
add
inc
push
imul
xor
sbb
push
imul
aam
loopne
ror
int3
dec
frstor
fistp
mov
mov
aad
mov
call
xchg
shl
push
repnz
addr16
cmps
fld
mov
dec
ss
fisubr
or
scas
test
pusha
jp
inc
ret
out
pusha
fist
addr16
mov
jns
imul
and
shr
ss
push
xchg
ja
int3
add
mov
das
es
lds
or
sub
mov
cmps
call
ret
shl
sbb
ret
es
pushf
mov
ins
add
ss
jmp
addr16
jb
push
add
adc
mov
jnp
sbb
xchg
or
out
fdivr
fisttp
aam
rol
clc
mov
push
int
mov
mul
ja
outs
ja
mov
out
or
retf
pop
or
adc
sahf
gs
clc
sar
imul
ins
push
js
or
push
add
mov
cmp
cmps
not
pusha
ror
imul
push
scas
fcomp
fldenv
fild
cmp
aaa
push
scas
mov
fidivr
mov
jmp
repnz
retf
mov
cmps
mov
sar
sub
push
mov
jp
mov
dec
popa
les
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
adc
add
adc
add
add
add
or
add
pop
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
or
add
push
push
add
add
punpcklwd
bound
arpl
add
data16
push
add
ins
add
outs
add
jo
jno
jb
jae
je
jne
jbe
ja
js
jns
jp
inc
add
inc
add
add
inc
add
dec
add
dec
add
add
dec
add
push
add
push
add
add
push
add
pop
add
xor
xor
xor
xor
xor
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
sbb
add
add
add
add
add
add
pop
nop
add
add
xchg
add
add
add
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
and
add
sub
add
sbb
add
push
je
imul
add
add
and
add
add
add
add
inc
push
dec
inc
add
add
add
adc
add
inc
ins
outs
bound
add
add
add
add
add
push
inc
or
add
add
add
add
add
add
add
xchg
add
add
add
lds
add
adc
add
add
add
add
add
or
add
add
add
add
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
mov
or
push
add
jno
or
mov
add
add
add
add
mov
push
add
dec
add
add
add
add
add
mov
or
push
add
bound
push
add
add
add
add
add
add
add
add
add
add
pop
push
sub
or
pop
push
sub
or
mov
add
push
adc
pop
xor
or
dec
pop
mov
adc
popf
pop
cmp
adc
test
mov
or
mov
lods
or
add
or
sub
or
or
sub
or
push
push
add
push
add
add
mov
or
mov
mov
or
lahf
or
or
or
or
add
or
or
add
mov
or
dec
or
add
add
mov
adc
ins
or
or
add
add
add
or
add
add
or
add
add
or
or
add
or
cmp
dec
or
pop
or
jp
cmp
or
xchg
or
mov
add
add
or
repz
add
out
adc
sbb
je
adc
cmp
add
jno
or
jl
jno
push
add
add
push
jno
or
in
push
mov
or
add
add
mov
or
xor
jno
sbb
push
cmovo
push
add
and
push
add
adc
or
add
out
or
mov
xor
or
scas
adc
adc
adc
adc
mov
or
lds
mov
or
into
adc
mov
or
add
mov
adc
or
je
or
cmp
inc
adc
add
je
or
test
inc
adc
add
adc
mov
or
sbb
add
adc
mov
or
mov
xchg
adc
add
add
adc
mov
or
pop
adc
add
add
mov
or
movs
adc
add
add
adc
add
add
adc
add
cmp
or
pop
adc
jge
xor
or
movs
adc
mov
mov
or
mov
add
adc
into
adc
call
add
add
push
sub
or
imul
mov
add
pop
test
push
add
pop
jge
inc
add
add
sbb
add
add
mov
or
sbb
add
sub
add
or
scas
sbb
or
les
inc
adc
add
sbb
or
inc
sbb
push
or
xchg
sbb
add
add
sbb
pop
or
(bad)
sbb
push
adc
or
bound
adc
daa
sbb
or
cmp
mov
adc
push
sbb
pop
or
in
sbb
push
or
push
sbb
push
push
add
sbb
sbb
add
add
cmp
or
xchg
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jbe
or
add
add
add
adc
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fild
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
inc
add
add
add
add
inc
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
pusha
add
xchg
add
adc
pusha
add
nop
add
add
mov
add
xchg
add
add
add
add
pushf
add
add
add
add
sahf
add
add
add
add
add
add
add
movs
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
sbb
inc
add
add
add
add
adc
dec
add
add
add
add
sbb
dec
add
adc
add
add
adc
inc
add
add
add
add
sbb
inc
add
add
add
add
push
add
add
add
add
add
add
adc
add
push
push
pop
add
add
adc
push
add
sbb
push
add
sbb
push
add
sbb
and
push
add
sub
push
add
sub
push
add
sub
sub
push
add
add
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
adc
add
add
add
adc
cmp
add
adc
xchg
add
add
add
add
add
add
add
adc
xchg
add
add
add
movs
add
add
add
test
add
add
adc
cmp
add
sbb
cmp
xor
sbb
test
add
xor
sbb
test
add
push
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
cmp
add
sbb
cmp
add
adc
inc
add
add
add
add
add
add
add
add
add
add
adc
les
add
adc
enter
adc
int
and
adc
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
sbb
dec
add
add
add
and
adc
fadd
and
adc
loopne
and
adc
in
and
adc
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
and
add
adc
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
and
adc
xor
and
adc
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
mov
add
sbb
mov
add
sbb
mov
add
adc
inc
add
add
add
add
and
sbb
dec
add
push
pop
add
add
adc
inc
add
sbb
inc
add
sbb
inc
add
sbb
add
add
add
add
add
es
add
add
add
add
add
add
add
add
adc
adc
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
dec
add
add
add
add
adc
les
adc
adc
mov
adc
adc
dec
add
add
add
add
add
add
push
add
add
push
add
add
push
add
adc
add
push
add
add
push
add
add
push
add
add
push
add
add
add
sbb
pop
add
add
add
add
sbb
pop
add
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
push
add
add
add
add
add
add
adc
adc
arpl
push
and
add
add
sbb
add
add
pop
and
add
add
sbb
add
add
pusha
and
add
add
sbb
add
add
add
add
or
add
add
add
and
add
add
das
add
add
cmp
add
add
inc
add
jp
add
and
add
add
push
add
add
add
add
sbb
add
add
shl
add
add
or
add
add
add
add
add
push
sbb
add
add
sbb
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
sbb
ins
add
add
add
add
adc
pop
add
add
add
add
add
add
add
add
add
add
sbb
add
add
ins
add
add
push
add
add
add
add
push
sbb
add
add
shl
add
add
push
sbb
add
add
fdiv
add
add
push
add
add
add
add
add
add
adc
sub
add
add
add
add
adc
cs
add
add
adc
xor
add
add
add
add
scas
add
add
inc
add
add
adc
aaa
add
add
add
dec
add
add
adc
cmp
add
add
add
add
push
sbb
add
add
jo
add
add
push
sbb
add
add
js
add
add
push
or
add
add
add
push
or
push
add
add
add
add
add
add
add
or
mov
dec
add
add
add
gs
add
add
add
add
add
sbb
add
add
add
add
add
add
push
add
add
add
add
pop
add
add
add
add
add
cdq
add
add
add
add
add
add
sbb
add
add
add
add
add
add
push
add
add
add
add
pop
add
add
add
add
add
cdq
add
add
add
add
add
add
sbb
add
add
add
add
add
add
push
add
add
add
add
pop
add
add
add
add
add
cdq
add
add
add
add
add
add
sbb
add
add
add
add
add
add
push
add
add
add
add
pop
add
add
add
add
add
cdq
add
add
add
add
add
add
sbb
add
add
add
add
add
add
push
add
add
add
add
pop
add
add
add
cdq
add
add
add
add
add
add
sbb
add
add
add
add
add
add
push
add
add
add
add
pop
add
add
add
add
add
cdq
add
add
add
add
add
add
sbb
add
add
add
add
add
add
push
add
add
add
add
pop
add
add
add
add
add
cdq
add
add
add
add
add
add
sbb
add
add
add
add
add
add
push
add
add
add
add
pop
add
add
add
add
add
cdq
add
add
add
add
add
add
sbb
add
add
add
add
add
add
push
add
add
add
add
pop
add
add
add
cdq
add
add
add
add
add
add
sbb
add
add
add
add
add
add
push
add
add
add
add
pop
add
add
add
cdq
add
add
add
add
add
add
sbb
add
add
add
add
add
add
push
add
add
add
add
pop
add
add
add
cdq
add
add
add
add
add
add
sbb
add
add
add
add
add
add
push
add
add
add
add
pop
add
add
add
cdq
add
add
add
add
add
push
sbb
add
add
add
add
push
add
add
add
add
pop
add
add
add
cdq
add
add
add
add
add
add
pusha
dec
add
add
xchg
or
add
jl
add
add
xchg
or
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
adc
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
xchg
add
add
add
cwde
add
add
add
adc
add
add
add
add
add
add
add
stos
add
add
add
adc
add
add
add
add
add
add
add
xchg
jl
pop
add
add
xchg
add
add
add
add
add
xchg
sti
add
add
add
add
xchg
test
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
mov
dec
add
add
add
add
add
xchg
xchg
push
mov
add
add
add
add
sbb
add
adc
add
add
add
add
add
add
add
add
add
add
add
pushf
add
add
add
add
add
add
add
scas
add
add
add
push
scas
add
add
scas
add
add
add
push
push
scas
add
add
xchg
mov
add
scas
add
add
xchg
mov
add
scas
add
add
xchg
clc
add
adc
sbb
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
xchg
sti
add
add
add
xchg
sti
add
add
add
add
add
add
add
add
add
add
retf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
add
add
xchg
add
push
in
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
xchg
add
push
syscall
adc
add
add
add
add
add
xchg
add
push
es
add
add
xchg
add
push
xor
add
add
xchg
add
push
inc
add
add
add
xchg
add
push
push
add
add
add
xchg
sti
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
mov
add
add
add
add
add
add
add
adc
add
add
add
adc
add
add
add
adc
add
add
add
add
add
xchg
or
pop
adc
adc
add
add
add
add
add
add
adc
add
add
push
adc
add
add
add
push
adc
add
add
push
adc
add
add
push
adc
add
add
add
add
mov
add
adc
add
add
add
add
mov
test
sti
add
adc
add
add
add
add
add
add
add
add
push
adc
add
add
add
add
mov
xchg
sti
add
add
add
add
add
xchg
mov
add
add
add
les
pop
inc
push
sbb
add
add
add
add
xchg
test
mov
xchg
sti
pop
pusha
push
push
add
rol
add
xchg
sti
add
add
add
rol
add
xchg
sbb
add
add
add
add
add
pop
ins
push
push
add
add
add
or
add
add
add
or
push
add
add
add
xchg
or
add
add
add
xchg
or
xchg
push
add
rol
add
xchg
or
xchg
push
add
add
add
xchg
or
xchg
push
add
add
add
add
add
add
add
xchg
sti
add
rol
add
out
arpl
push
rol
add
les
push
pop
push
rol
add
les
inc
popa
add
add
add
les
add
pop
add
add
rol
add
xchg
add
xchg
push
add
rol
add
xchg
sti
add
push
add
rol
add
push
sbb
add
add
add
add
add
add
add
lds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
lds
add
add
add
test
add
add
lods
pop
add
add
mov
add
add
test
add
add
enter
add
int
add
add
rol
add
add
add
add
dec
add
or
sbb
jno
jp
sbb
jge
jle
pop
add
add
add
sbb
sti
add
and
sti
add
add
add
add
add
add
add
add
add
add
inc
add
add
dec
add
add
push
add
add
pop
add
add
add
sti
add
or
sti
add
adc
sti
add
or
sti
add
adc
sti
add
sbb
sti
add
and
sti
add
or
adc
add
ss
or
add
add
sub
adc
xor
add
mov
xchg
or
or
or
add
or
or
or
add
add
or
add
or
or
add
add
rol
jno
sbb
leave
add
add
add
loope
sti
add
or
add
add
add
or
into
or
in
xchg
add
or
add
or
push
push
outs
or
or
add
add
add
add
add
scas
add
add
or
add
mov
xor
xchg
push
ins
add
add
add
add
or
in
or
sti
add
add
add
push
scas
add
add
push
test
add
push
and
dec
add
add
ud1
mov
or
add
pminub
popa
add
and
mov
sti
add
mov
je
loope
adc
or
add
add
add
add
add
fxsave
add
dec
add
or
movups
adc
or
add
add
adc
or
add
add
add
add
push
adc
or
ins
adc
or
je
or
jns
jl
sbb
xor
test
ins
add
add
add
add
add
or
mov
add
adc
imul
mov
add
or
or
or
add
adc
test
or
or
sti
add
jns
sti
add
add
add
adc
add
adc
or
or
add
or
add
adc
or
add
dec
add
or
add
stos
adc
adc
mov
add
or
or
or
add
add
adc
icebp
add
jb
stc
add
adc
icebp
add
or
or
add
add
add
or
add
add
add
(bad)
test
or
or
or
or
add
or
sti
add
add
add
add
add
add
adc
and
mov
add
adc
or
add
add
add
xor
add
jne
xor
or
jp
xor
adc
add
adc
add
add
adc
add
add
adc
add
add
adc
add
add
inc
add
add
push
mov
adc
or
add
or
ins
adc
or
add
mov
add
push
adc
add
add
add
add
adc
or
add
adc
jmp
or
push
add
popa
add
add
adc
pop
adc
sub
xor
cmp
inc
adc
rcl
xchg
or
push
adc
pop
adc
jne
les
ror
cmc
or
sti
or
push
add
pop
add
add
fs
add
ins
add
add
je
sti
add
mov
add
jge
inc
push
push
add
inc
push
or
jge
inc
push
leave
add
inc
push
add
mov
jge
inc
push
xchg
add
inc
push
xchg
add
inc
push
mov
add
push
mov
or
add
add
adc
or
mov
add
push
dec
add
add
add
push
dec
add
add
add
dec
add
add
add
jge
jle
sbb
adc
mov
dec
add
add
add
push
test
push
test
add
push
test
add
push
test
sbb
icebp
push
mov
pop
add
pop
jp
pop
add
pop
xchg
push
test
push
fld
adc
sbb
jp
fld
cs
fs
mov
inc
pop
daa
push
add
fld
cdq
push
jle
ins
add
mov
ins
add
push
mov
pop
jp
je
or
xchg
push
ins
add
pop
ror
add
int
mov
add
or
jle
mov
add
add
add
add
pop
jp
add
pop
xchg
push
mov
push
rol
pop
dec
rol
pop
inc
add
add
add
add
rdtsc
add
inc
push
add
add
add
je
pop
adc
add
jp
ins
add
push
sbb
dec
add
pop
jp
dec
add
sub
jl
pushf
adc
adc
push
mov
adc
push
add
pop
jp
push
add
sub
mov
pushf
adc
adc
push
mov
adc
inc
add
sbb
xchg
add
ins
add
add
imul
add
sbb
jmp
setl
sti
add
pushf
add
pop
xchg
push
jns
mov
pop
add
add
stos
adc
sbb
sbb
add
push
pushf
wbinvd
add
pop
jp
adc
adc
or
psrlw
leave
adc
dec
add
push
test
je
call
add
sbb
xchg
add
push
sbb
mov
adc
adc
add
adc
test
add
add
adc
add
adc
adc
add
dec
add
add
dec
add
add
add
add
jle
mov
add
adc
adc
add
add
add
and
sbb
and
add
sbb
mov
adc
sti
add
loope
loop
add
loope
jmp
cmp
adc
adc
add
sbb
mov
sti
add
add
sbb
adc
push
add
add
add
sti
add
add
add
pop
adc
mov
pop
adc
add
add
ins
adc
add
add
add
sbb
popa
add
sbb
add
add
add
adc
stc
sbb
add
adc
adc
adc
mov
inc
add
sbb
cmp
mov
add
sti
add
jno
cmp
test
add
sbb
push
add
add
add
sbb
adc
add
add
add
add
add
add
add
sti
add
or
jo
pop
add
add
add
add
add
add
add
add
add
mov
js
or
mov
jge
or
nop
add
add
add
pop
add
add
add
add
outs
add
add
add
add
add
add
push
add
retf
push
add
add
add
arpl
add
jnp
adc
ret
or
add
jecxz
push
add
and
imul
add
pop
loopne
jae
xor
and
dec
add
push
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
add
dec
add
or
or
or
call
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
sbb
push
or
jo
jns
xchg
or
out
or
inc
push
push
xchg
push
test
enter
hlt
push
add
or
adc
adc
adc
adc
adc
adc
adc
adc
jl
adc
adc
adc
adc
adc
add
add
add
add
add
adc
xor
jbe
jge
test
mov
lods
or
adc
sbb
and
sub
das
push
ss
xor
cvtdq2ps
jge
mov
cmps
mov
inc
add
inc
add
add
add
add
add
add
or
add
add
add
add
add
add
pop
add
mov
pop
add
add
pop
mov
les
fadd
add
lds
add
or
add
or
add
add
and
add
add
add
add
or
movs
add
add
add
add
add
add
add
add
add
add
or
mov
add
add
add
add
or
jge
add
add
add
add
or
inc
sldt
add
add
add
add
add
add
add
xlat
mov
add
pop
or
add
add
add
or
add
movs
or
add
add
jo
add
sub
add
lods
or
add
add
fisttp
add
popa
mov
add
add
add
or
add
ror
add
add
add
add
das
ror
add
add
add
add
movs
aad
add
add
add
fmul
add
add
add
or
add
add
or
pop
add
add
add
add
add
or
or
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
xor
add
add
add
add
add
add
dec
add
dec
add
dec
add
dec
add
add
add
mov
add
add
add
mov
or
leave
or
iret
or
aad
sub
fimul
sub
in
or
icebp
or
inc
or
inc
or
dec
or
push
or
push
or
xchg
or
cwde
or
or
fisttp
addr16
adc
xor
cs
add
add
gs
call
dec
imul
je
push
imul
jae
arpl
inc
jo
ins
imul
inc
popa
jae
add
arpl
jae
data16
push
imul
jae
arpl
inc
jo
ins
imul
push
gs
imul
add
add
ins
jo
je
jb
dec
imul
je
push
imul
jae
arpl
inc
gs
arpl
add
push
add
arpl
ins
imul
arpl
jns
je
ins
add
add
ret
add
push
add
push
add
add
push
add
push
add
push
add
add
add
add
mov
ret
ret
push
popa
ins
jne
push
jns
gs
lea
ret
ret
inc
outs
jne
add
xchg
add
xchg
add
xchg
add
ins
je
arpl
je
gs
gs
je
add
xchg
add
xchg
add
xchg
add
cwde
add
cdq
add
call
add
popf
add
sahf
add
lahf
add
add
ret
add
add
add
adc
add
add
push
add
ret
add
xchg
add
ret
add
lahf
add
or
add
add
dec
gs
outs
jb
push
je
gs
ins
add
jae
gs
cs
dec
add
add
sbb
add
add
adc
add
add
add
adc
add
add
pop
add
push
add
jg
add
add
sbb
add
cdq
add
ret
add
popf
add
ret
add
add
add
add
outs
je
jb
jae
add
add
add
adc
adc
add
popa
jb
push
je
arpl
jb
ins
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
add
gs
popa
ins
imul
push
jns
je
ins
cs
jne
je
ins
gs
gs
popa
ins
imul
add
add
add
push
jo
outs
popa
fs
gs
jb
dec
outs
imul
arpl
push
jns
je
ins
cs
bound
push
gs
imul
popa
jo
je
jo
ins
imul
je
arpl
add
jae
gs
cs
bound
push
gs
imul
outs
je
arpl
jae
push
gs
jb
imul
imul
add
pushf
add
ret
add
lahf
add
dec
inc
imul
ins
add
add
add
push
add
gs
fs
jns
je
jb
bound
add
popa
jb
inc
jae
gs
bound
inc
je
jb
bound
gs
inc
je
jb
bound
add
add
gs
add
add
add
jbe
ins
jne
pop
pop
add
add
add
add
bound
outs
js
add
jae
gs
cs
gs
inc
js
gs
imul
add
je
outs
outs
popa
jb
pusha
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
push
jns
je
ins
cs
ins
ins
add
ins
push
jb
je
jb
dec
imul
jbe
outs
je
popa
outs
fs
gs
push
jns
add
arpl
imul
je
outs
outs
add
jae
gs
cs
arpl
imul
outs
fs
inc
add
push
arpl
dec
dec
dec
data16
je
inc
js
gs
imul
imul
push
outs
jb
arpl
outs
jb
ret
add
add
add
push
add
add
push
add
push
add
push
add
push
add
push
add
add
add
add
test
ret
ret
add
add
mov
inc
gs
jb
arpl
fs
jae
add
jb
gs
xor
cs
ins
add
mov
ret
inc
imul
add
jae
outs
arpl
jae
ins
je
inc
jae
outs
arpl
ins
ins
bound
imul
outs
fs
outs
jbe
imul
outs
jbe
imul
popa
outs
fs
add
jae
outs
fs
outs
jne
je
inc
gs
gs
je
inc
popa
ins
ins
bound
imul
gs
gs
je
inc
jae
outs
arpl
popa
je
add
gs
je
inc
jae
outs
arpl
jae
ins
je
ins
jo
bound
inc
jbe
outs
je
fs
imul
outs
fs
dec
imul
je
add
add
add
push
add
lar
adc
add
add
add
jb
jo
outs
push
jb
outs
jae
outs
jb
add
jae
gs
cs
arpl
imul
je
addr16
jo
jns
sbb
add
add
sbb
add
add
add
jg
add
add
ret
add
add
ret
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
mov
add
mov
add
lea
add
pop
add
nop
add
ret
add
xchg
add
ret
add
xchg
add
ret
add
xchg
add
ret
add
cdq
add
ret
add
fwait
add
ret
add
popf
add
ret
add
add
add
add
add
add
add
add
add
push
add
adc
add
add
sbb
add
add
sbb
add
add
ret
add
add
ret
add
xchg
add
xchg
add
gs
fs
outs
outs
add
jae
gs
cs
gs
arpl
outs
add
mov
add
mov
add
mov
add
mov
add
mov
add
lea
add
mov
add
pop
add
jae
ins
bound
ret
add
xchg
add
ret
add
xchg
add
ret
add
xchg
add
ret
add
xchg
add
ret
add
pushf
add
ret
add
lahf
add
add
add
push
add
pop
add
or
push
add
adc
adc
inc
gs
bound
arpl
je
add
jb
popa
ins
imul
dec
outs
outs
add
jb
popa
ins
imul
gs
add
add
pop
add
sbb
sbb
sbb
sbb
sbb
add
add
add
jg
add
add
add
test
ret
add
xchg
ret
add
mov
push
push
inc
js
gs
imul
je
jb
jae
push
jns
je
ins
cs
push
imul
add
push
gs
js
gs
imul
je
jb
jae
ret
add
mov
ret
add
mov
ret
add
je
gs
gs
push
dec
add
outs
jae
dec
inc
add
je
bound
jno
gs
add
bound
jno
gs
add
imul
jae
jb
gs
jb
add
ins
outs
popa
fs
gs
jb
xor
fs
je
add
popa
imul
imul
popa
ins
add
imul
fs
jns
jne
bound
add
xchg
add
ret
add
xchg
add
inc
gs
gs
imul
gs
gs
xor
cs
ins
ins
add
xchg
add
inc
gs
jns
je
ins
dec
gs
imul
jb
xor
fs
ins
add
xchg
add
inc
gs
jns
je
ins
dec
outs
outs
add
xchg
add
ret
add
cdq
add
ret
add
fwait
add
ret
add
popa
ins
jae
inc
gs
popa
jae
inc
outs
fs
je
imul
jo
jae
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
ins
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jne
jb
ins
push
gs
jne
arpl
dec
popa
outs
addr16
addr16
je
jb
bound
add
jae
gs
cs
gs
jne
arpl
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
bound
jb
imul
imul
imul
push
push
je
je
arpl
je
imul
push
inc
push
push
inc
je
jb
bound
add
arpl
imul
arpl
inc
je
jb
bound
add
popa
jo
outs
arpl
outs
je
gs
outs
fs
je
jb
bound
add
ins
inc
ins
gs
outs
je
je
jb
bound
add
jae
gs
cs
ins
ins
cs
gs
popa
ins
imul
add
mov
in
lods
call
and
mov
lea
outs
jne
arpl
add
fs
js
cs
outs
jb
xor
jb
jae
jne
arpl
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
arpl
jb
outs
je
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
je
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
ss
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
gs
outs
jb
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jb
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
outs
jge
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jne
je
imul
je
ins
gs
gs
jo
jb
add
je
bound
arpl
ins
jne
add
outs
ins
gs
outs
add
je
xor
inc
arpl
popa
je
jb
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
push
jb
arpl
jae
push
jns
je
ins
cs
imul
imul
push
jb
arpl
jae
jae
jns
popa
ins
add
je
add
arpl
imul
je
ins
cs
gs
add
je
inc
gs
jne
je
inc
gs
jns
gs
push
je
imul
pop
dec
outs
addr16
add
jb
jns
push
je
ins
jae
dec
imul
je
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
jo
inc
jb
popa
jns
addr16
inc
push
inc
dec
dec
add
outs
jbe
jb
add
outs
ins
inc
popa
jae
ss
je
imul
xor
cmp
inc
gs
jbe
inc
jns
gs
push
imul
dec
popa
outs
popa
gs
ins
ins
gs
imul
imul
pop
dec
outs
fs
jo
gs
outs
fs
gs
je
inc
arpl
jo
outs
jb
inc
jb
jo
outs
push
je
gs
ins
add
jb
popa
ins
add
jns
je
push
je
gs
ins
dec
outs
fs
popa
add
outs
jae
add
je
push
push
inc
cmp
inc
gs
je
imul
gs
arpl
outs
add
jbe
jb
outs
add
outs
arpl
add
arpl
jns
inc
gs
gs
add
gs
je
jb
add
ins
jo
jb
push
je
imul
arpl
jae
je
jb
dec
outs
outs
add
je
push
imul
jns
add
outs
arpl
jae
imul
jns
add
je
inc
jb
popa
je
dec
outs
push
imul
je
jb
add
ins
add
je
je
jb
bound
gs
inc
imul
bound
gs
push
jb
push
arpl
je
add
gs
jb
jb
push
arpl
jb
jb
push
gs
jb
push
arpl
jb
jb
inc
jb
popa
je
push
jb
push
arpl
jb
jb
push
je
gs
ins
push
jb
je
jb
jae
je
inc
jne
outs
inc
ins
jne
push
je
add
jbe
jb
outs
ins
outs
je
addr16
dec
gs
imul
je
jb
je
jb
push
push
inc
jo
push
imul
add
gs
je
inc
imul
jns
inc
imul
jns
outs
outs
add
jae
gs
cs
imul
inc
outs
jb
jae
inc
jo
ins
imul
add
je
inc
js
arpl
popa
bound
popa
je
add
je
push
je
jb
dec
outs
outs
add
je
inc
imul
jae
je
push
jae
push
push
js
arpl
add
je
push
gs
popa
outs
fs
jb
dec
jne
jo
je
jae
je
push
gs
popa
outs
fs
jb
dec
outs
jo
je
jae
je
push
gs
popa
outs
fs
jb
inc
jb
outs
jb
addr16
push
je
outs
fs
jb
dec
outs
jo
je
inc
outs
outs
jbe
jb
imul
add
imul
outs
jbe
jb
imul
jo
add
imul
je
addr16
dec
popa
jae
js
je
add
ins
ins
add
jne
push
popa
je
dec
bound
arpl
gs
popa
je
inc
imul
dec
popa
je
inc
gs
dec
popa
je
push
gs
dec
popa
je
inc
popa
ins
ins
add
fs
jo
add
gs
add
gs
inc
gs
js
arpl
imul
ins
bound
push
gs
jne
arpl
popa
outs
popa
addr16
inc
outs
ins
jo
jb
dec
bound
arpl
jne
ins
add
outs
imul
outs
ins
jo
jb
dec
bound
arpl
jne
ins
add
jo
jns
inc
gs
bound
arpl
gs
gs
outs
ins
jo
je
jb
addr16
inc
imul
ins
add
ins
gs
jns
je
ins
push
jb
js
add
arpl
jae
data16
push
imul
jae
arpl
dec
jns
gs
imul
imul
je
jae
inc
gs
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
jb
push
jns
je
ins
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
je
gs
gs
je
inc
outs
jb
jne
arpl
outs
push
outs
imul
gs
gs
je
add
je
je
add
add
ins
ins
arpl
gs
jb
arpl
jae
jns
add
je
jne
jb
outs
je
jb
arpl
jae
push
dec
outs
je
xor
push
jb
arpl
jae
outs
fs
add
outs
ja
jb
push
je
jb
jae
imul
inc
popa
jae
inc
fs
jae
add
outs
jne
gs
je
jb
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
dec
outs
jbe
dec
gs
add
je
dec
outs
fs
gs
push
jb
arpl
jae
outs
fs
gs
outs
ins
ins
arpl
outs
add
popa
fs
outs
ins
jns
outs
ins
ins
arpl
outs
inc
popa
jae
add
je
outs
jne
gs
je
jb
addr16
inc
jne
jb
outs
je
addr16
dec
outs
fs
gs
popa
ins
add
jb
add
jb
popa
je
push
imul
outs
push
dec
outs
je
xor
dec
jae
jne
ins
dec
jb
ins
jo
jns
inc
imul
je
jb
push
outs
dec
outs
je
xor
push
outs
dec
outs
je
add
data16
inc
ins
outs
arpl
outs
jo
add
gs
fs
je
jb
add
je
dec
jae
popa
arpl
jb
jne
add
je
add
je
inc
jne
jb
outs
je
push
add
jb
outs
push
je
jne
je
jb
add
gs
inc
ins
outs
bound
add
ins
outs
arpl
ins
outs
bound
add
jb
imul
pop
dec
popa
push
jb
push
imul
imul
je
push
imul
arpl
dec
popa
arpl
outs
add
imul
jns
dec
jo
outs
push
jne
dec
gs
inc
gs
popa
ins
jne
add
gs
je
inc
outs
arpl
jo
outs
jb
inc
inc
push
inc
jb
jo
outs
push
gs
imul
imul
gs
imul
pop
dec
outs
ja
addr16
pop
gs
jb
addr16
dec
outs
outs
je
add
je
inc
popa
jns
addr16
dec
outs
jne
add
je
dec
imul
gs
push
arpl
add
je
push
outs
jae
je
outs
outs
add
imul
gs
imul
add
outs
add
je
push
outs
jae
je
outs
outs
add
outs
jae
outs
jb
inc
imul
arpl
push
outs
inc
jb
popa
jns
dec
outs
imul
inc
jb
popa
jns
push
jne
je
ins
gs
imul
fs
add
je
dec
gs
popa
add
je
xor
dec
popa
js
push
jb
je
inc
jns
add
inc
inc
jb
jo
outs
push
gs
imul
imul
ins
ins
gs
imul
imul
ins
pop
ins
ins
push
je
imul
gs
je
dec
gs
inc
outs
gs
je
dec
push
add
je
dec
gs
addr16
dec
push
add
arpl
jo
add
jns
add
jne
push
ins
inc
ins
outs
arpl
inc
ins
gs
jb
inc
jb
jo
outs
addr16
jo
imul
je
outs
outs
add
ins
bound
add
je
jb
outs
arpl
add
ins
jo
jb
inc
js
push
add
pop
inc
jno
popa
ins
imul
add
jo
gs
push
dec
outs
je
xor
push
dec
outs
je
add
jns
add
outs
je
xor
push
dec
outs
je
je
add
dec
outs
je
xor
inc
outs
fs
imul
gs
outs
outs
add
je
dec
popa
ins
add
je
dec
jae
je
je
arpl
addr16
inc
imul
add
je
dec
popa
jae
ins
gs
outs
je
jns
add
je
ins
gs
outs
je
jns
add
je
dec
jae
jns
data16
imul
bound
gs
je
imul
pop
dec
jae
outs
imul
gs
dec
jae
jb
popa
jns
inc
gs
jb
popa
jns
popa
outs
imul
gs
jns
add
je
dec
jae
jb
ins
imul
je
inc
jne
ins
dec
popa
ins
add
jb
outs
addr16
jne
ins
fs
inc
jo
outs
add
je
dec
jae
popa
ins
jne
push
jns
add
je
dec
outs
fs
add
fs
add
je
dec
jae
outs
jne
add
je
dec
je
ins
add
data16
outs
arpl
jno
popa
ins
jae
addr16
inc
outs
jne
je
inc
fs
je
inc
jae
gs
bound
addr16
dec
gs
fs
je
push
outs
imul
addr16
dec
popa
outs
imul
fs
add
je
dec
outs
fs
gs
gs
imul
outs
outs
je
imul
inc
gs
popa
ins
add
jae
ins
bound
popa
ins
add
pop
dec
outs
gs
popa
ins
imul
dec
popa
ins
gs
popa
arpl
dec
popa
jae
dec
outs
fs
data16
bound
jb
outs
add
jo
popa
arpl
addr16
inc
push
inc
jo
inc
outs
ins
popa
imul
inc
jne
jb
outs
je
outs
ins
popa
imul
jae
gs
bound
jae
push
push
inc
cmp
arpl
imul
push
gs
push
jb
je
jb
dec
gs
jne
add
je
inc
outs
fs
popa
jae
add
je
dec
gs
add
jns
outs
ins
ins
arpl
outs
add
jne
gs
je
jb
addr16
push
gs
imul
je
inc
ins
gs
outs
je
je
imul
pop
dec
push
push
gs
imul
jb
je
outs
addr16
jns
je
ins
add
je
push
ins
popa
je
outs
jb
add
popa
je
outs
jb
dec
inc
add
je
dec
outs
outs
gs
js
gs
imul
gs
add
je
inc
popa
je
add
imul
jb
add
outs
je
imul
ins
ins
arpl
outs
add
outs
jne
gs
bound
inc
gs
imul
imul
arpl
outs
je
push
jb
je
push
je
jb
inc
outs
arpl
outs
je
push
jo
imul
jae
outs
ins
inc
je
jb
bound
gs
addr16
push
popa
outs
imul
gs
outs
addr16
add
je
imul
imul
ins
popa
addr16
addr16
dec
jae
imul
gs
dec
jae
outs
imul
gs
inc
popa
jae
push
jns
add
je
push
je
arpl
jb
arpl
push
jb
ins
add
fs
data16
popa
arpl
jb
arpl
addr16
inc
jb
ins
gs
outs
jne
je
inc
gs
jb
ins
add
popa
arpl
jb
ins
add
je
dec
dec
data16
je
push
push
inc
bound
je
js
gs
imul
push
popa
ins
jne
add
je
outs
je
xor
inc
gs
gs
outs
add
je
outs
fs
popa
jae
add
imul
imul
gs
dec
je
ins
add
fs
popa
jae
add
imul
imul
pusha
xor
push
outs
push
gs
js
gs
imul
je
popa
outs
fs
gs
push
push
inc
js
gs
imul
je
popa
outs
fs
gs
popa
fs
push
outs
push
gs
js
gs
imul
pop
push
push
inc
js
gs
imul
push
jns
gs
addr16
inc
js
gs
imul
pop
inc
js
gs
imul
arpl
gs
dec
jae
gs
imul
add
imul
outs
jo
jb
jns
push
jb
jo
jb
jns
outs
outs
add
je
gs
gs
outs
add
je
outs
fs
outs
outs
add
je
inc
js
je
outs
fs
outs
outs
ins
gs
outs
add
bound
imul
je
arpl
add
je
push
jb
add
je
push
imul
dec
je
jo
bound
jno
gs
add
je
push
gs
imul
je
push
gs
imul
je
jae
je
inc
js
arpl
xor
outs
je
outs
jne
add
jo
imul
inc
js
gs
imul
jo
bound
imul
je
arpl
add
je
push
jb
js
add
imul
inc
ins
gs
outs
je
push
jb
je
inc
outs
fs
ins
gs
outs
je
add
or
dec
inc
mov
pusha
dec
outs
(bad)
mov
add
data16
data16
data16
data16
data16
data16
data16
data16
data16
or
dec
add
xor
add
inc
add
add
xor
arpl
xor
inc
add
add
add
aaa
add
cmp
add
ins
add
dec
add
je
ins
add
imul
bound
dec
add
inc
add
das
add
add
add
xor
add
add
add
push
add
inc
add
inc
add
add
outs
add
dec
add
add
add
outs
add
add
inc
add
push
dec
add
pop
add
xor
ins
add
jb
inc
add
xor
xor
js
add
xor
pop
add
add
add
add
xor
cmp
inc
add
push
add
xor
add
dec
add
add
outs
add
dec
add
jae
aaa
add
ja
imul
outs
add
jbe
cmp
push
add
add
cmp
push
add
pop
add
dec
add
add
cmp
add
inc
add
add
add
xor
data16
add
xor
add
push
add
bound
popa
add
add
cmp
add
sbb
jae
imul
outs
add
add
add
jae
add
xor
push
add
cmp
push
add
add
inc
add
inc
add
add
inc
add
dec
add
ins
add
dec
add
cmp
add
add
arpl
ins
add
xor
add
add
ins
add
add
inc
add
jbe
jne
pop
add
dec
add
add
jno
inc
add
add
add
add
add
inc
add
add
add
xor
data16
add
xor
add
push
add
bound
popa
add
add
cmp
add
popa
add
add
add
add
js
add
xor
pop
add
pop
add
jns
ins
add
data16
push
jp
imul
add
inc
add
cmp
dec
add
pop
add
cmp
or
add
jo
pop
add
add
xor
dec
add
xor
inc
add
add
dec
add
push
add
jo
outs
add
ja
push
add
ins
add
push
add
or
add
popa
add
xor
aaa
add
xor
push
add
push
add
push
add
add
xor
bound
push
push
add
add
outs
add
imul
add
sbb
ins
add
outs
add
je
and
das
add
add
add
add
add
xor
add
ja
popa
add
dec
add
add
dec
add
ins
add
jae
ja
xor
inc
add
inc
add
push
add
add
add
add
dec
add
push
add
xor
jo
jno
bound
pop
add
add
inc
add
add
push
add
inc
add
cmp
push
add
inc
add
add
add
pop
add
add
dec
add
push
add
pop
add
push
add
xor
imul
add
inc
add
jbe
jns
push
add
outs
add
data16
add
add
ins
add
push
add
cmp
xor
ins
add
xor
jp
jno
outs
add
xor
xor
inc
add
add
push
add
add
add
imul
cmp
or
jl
jl
and
sub
add
jo
jo
add
je
popa
add
add
add
xor
push
add
js
push
add
ins
add
jae
ja
jns
xor
cmp
xor
add
xor
dec
add
dec
add
dec
add
outs
add
data16
add
add
outs
add
add
dec
add
imul
jbe
jne
xor
add
pop
add
inc
add
jbe
cmp
jb
push
add
xor
imul
add
je
popa
add
je
and
das
add
and
and
and
and
and
add
and
add
sub
add
add
arpl
ins
add
add
js
add
pop
arpl
outs
add
add
add
and
add
jo
and
pop
and
and
and
add
and
and
das
add
add
push
add
dec
add
add
add
jo
add
or
add
and
and
add
jo
add
add
add
or
add
add
add
add
jns
push
add
dec
add
ja
push
add
add
inc
add
push
add
add
jo
dec
add
add
push
pop
add
add
push
add
imul
push
add
add
js
arpl
outs
add
xor
inc
add
xor
aaa
add
add
das
add
js
outs
add
xor
add
jb
inc
add
inc
add
dec
add
add
add
push
add
add
jb
dec
add
inc
add
push
pop
add
xor
arpl
cmp
data16
js
imul
jo
jo
inc
add
arpl
push
add
dec
add
jbe
dec
add
add
add
dec
add
xor
aaa
add
xor
xor
jne
data16
add
sub
js
push
imul
xor
push
add
add
xor
add
and
and
das
add
add
add
inc
add
push
add
add
imul
add
inc
add
dec
add
outs
add
cmp
push
add
add
add
das
add
xor
push
add
jae
pop
add
jae
js
imul
pop
add
add
pop
add
add
arpl
inc
add
js
imul
add
add
aaa
add
inc
add
dec
add
push
add
push
add
add
imul
inc
add
push
add
add
bound
push
add
jo
jbe
push
add
data16
add
add
push
popa
add
dec
add
dec
add
inc
add
add
inc
add
push
add
dec
add
add
add
add
imul
push
add
arpl
jb
imul
add
push
add
sbb
add
je
add
push
add
add
je
add
jb
add
je
push
add
je
push
add
jo
popa
add
add
outs
add
imul
outs
add
add
je
push
add
add
outs
add
jae
add
push
add
outs
add
add
push
add
add
add
or
popa
add
add
pop
xor
add
and
ins
add
outs
add
add
ins
add
outs
add
xor
add
push
add
add
inc
add
add
push
add
push
add
inc
add
das
add
ins
add
add
ja
cmp
or
ja
add
push
inc
push
add
xor
imul
ins
add
popa
add
data16
add
xor
add
push
add
bound
popa
add
add
cmp
or
add
js
add
pop
data16
data16
add
jae
add
jae
add
jae
add
add
and
outs
add
add
data16
add
and
and
and
and
add
js
add
and
and
add
add
imul
dec
add
jno
ins
add
add
add
pop
add
jne
dec
add
dec
add
push
add
xor
xor
push
add
imul
add
ja
jp
imul
ja
outs
add
aaa
add
inc
add
cmp
add
inc
add
add
add
push
add
jae
inc
add
push
add
imul
add
add
add
add
pop
add
push
add
add
add
add
push
add
dec
add
dec
add
add
imul
add
jbe
xor
add
add
jo
jne
push
add
ja
inc
add
xor
popa
add
dec
add
ins
add
jp
dec
add
push
add
jno
cmp
pop
add
push
dec
add
inc
add
data16
xor
imul
pop
add
js
push
add
pcmpeqb
ins
add
add
js
add
xor
xor
inc
add
add
add
data16
push
add
push
add
add
pop
add
dec
add
xor
add
cmp
pop
xor
jns
add
je
je
imul
pop
add
sub
inc
add
js
push
add
push
add
xor
add
add
pop
add
add
push
jae
ja
inc
add
pop
add
dec
add
dec
add
jb
pop
add
add
cmp
add
add
sub
cmp
jo
push
add
bound
arpl
dec
add
add
inc
add
jne
cmp
push
add
dec
add
push
add
push
add
ja
add
push
add
push
add
das
add
add
add
add
jne
push
add
dec
add
das
add
push
add
add
push
add
add
popa
add
pop
add
dec
add
add
push
add
inc
add
inc
add
jbe
add
pop
add
inc
add
xor
jne
dec
add
dec
add
cmp
add
xor
outs
add
dec
add
jbe
xor
add
add
inc
add
push
add
ja
dec
add
push
add
add
js
dec
add
dec
add
add
push
add
add
imul
add
jp
aaa
add
add
inc
add
add
jae
data16
data16
add
add
data16
popa
add
pop
add
add
add
popa
add
data16
popa
add
pop
aaa
add
xor
jns
inc
add
pop
add
dec
add
push
add
push
add
add
arpl
dec
add
inc
add
js
inc
add
push
add
xor
popa
add
dec
add
xor
xor
xor
add
js
ja
dec
add
push
add
cmp
add
jae
data16
add
add
popa
add
data16
popa
add
pop
add
jae
data16
add
jae
data16
popa
add
sbb
add
data16
add
add
data16
popa
add
xor
jp
das
add
add
add
add
popa
add
push
add
inc
add
dec
add
add
ja
bound
dec
add
cmp
xor
push
add
jns
inc
add
add
push
add
push
add
je
dec
add
popa
add
das
add
push
add
push
add
cmp
pop
add
jae
add
xor
add
jne
xor
inc
add
push
add
dec
add
cmp
popa
add
data16
inc
add
ja
inc
add
cmp
pop
aaa
add
jb
push
add
sub
xor
inc
add
jb
xor
inc
add
bound
data16
push
add
dec
add
ins
add
push
add
add
push
add
je
push
add
inc
add
push
add
add
add
xor
add
cmp
add
imul
add
push
add
add
inc
add
add
push
add
add
inc
add
jp
push
add
add
add
push
add
dec
add
inc
add
add
imul
add
imul
dec
add
push
add
inc
add
add
push
add
add
dec
add
add
cmp
pop
add
popa
add
add
js
dec
add
dec
add
xor
add
add
arpl
inc
add
add
imul
jp
jo
dec
add
pop
add
xor
inc
add
pop
add
add
push
add
pop
add
imul
add
add
ins
add
dec
add
jae
js
imul
add
push
add
add
jo
data16
push
add
jbe
dec
add
jne
inc
add
ins
add
jo
cmp
aaa
add
push
add
add
add
inc
add
add
inc
add
jns
push
add
jae
dec
add
push
dec
add
add
data16
jbe
ja
dec
add
das
add
add
outs
add
popa
add
push
add
add
jbe
jb
dec
add
xor
push
add
add
cmp
push
add
imul
add
inc
add
add
inc
add
add
add
data16
dec
add
add
cmp
or
add
xor
jge
and
add
and
add
data16
popa
add
adc
add
add
add
add
add
add
add
add
add
push
add
popa
add
je
inc
add
jae
add
bound
ins
add
add
push
add
je
push
add
data16
add
jb
add
add
add
add
popa
add
add
cmp
data16
add
jb
add
add
ja
add
xor
xor
dec
add
add
pop
add
add
add
popa
add
add
or
popa
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
and
xor
xor
xor
add
add
add
add
jae
and
je
add
jo
ins
add
je
add
add
popa
add
and
outs
add
je
and
jo
jb
outs
add
add
ins
add
and
jo
jb
outs
add
add
jae
add
add
jns
and
push
add
popa
add
je
inc
add
jae
add
bound
ins
add
add
add
and
xor
xor
xor
xor
add
add
and
xor
xor
cmp
sub
add
add
outs
add
jb
jns
jo
je
imul
and
imul
outs
add
je
and
popa
add
popa
add
ins
add
bound
ins
add
and
outs
add
and
je
push
add
add
outs
add
jo
jne
je
add
add
add
outs
add
and
outs
add
add
add
add
add
outs
add
je
popa
add
add
add
add
and
dec
add
add
and
inc
add
arpl
jb
jns
jo
je
imul
and
push
add
arpl
imul
add
outs
add
add
jb
add
jb
and
je
outs
add
add
jae
add
add
add
and
jb
add
outs
add
je
imul
and
data16
popa
add
add
add
add
adc
push
add
add
add
add
add
cmp
and
add
add
inc
add
add
push
add
ins
add
add
add
dec
add
add
ins
add
jae
add
push
add
push
inc
add
add
inc
add
outs
add
add
add
add
cmp
xor
push
add
jp
imul
inc
add
add
add
add
dec
add
add
cmp
dec
add
cmp
js
pop
add
outs
add
dec
add
js
xor
sub
push
add
push
add
inc
add
add
xor
sub
js
dec
add
add
inc
add
push
add
xor
jb
popa
add
outs
add
cmp
js
add
add
jbe
push
add
arpl
jbe
dec
add
jae
dec
add
add
jp
dec
add
push
add
pop
add
ins
add
push
add
add
js
xor
inc
add
add
data16
sub
pop
add
add
add
xor
inc
add
ja
ins
add
add
push
add
xor
arpl
inc
add
dec
add
add
inc
add
bound
inc
add
dec
add
add
push
add
add
dec
add
push
add
js
ins
add
push
add
add
add
inc
add
pop
add
dec
add
dec
add
add
add
push
add
add
outs
add
add
add
add
inc
add
jo
outs
add
add
je
add
push
add
inc
add
das
add
js
jo
outs
add
add
je
add
das
add
push
add
dec
add
jns
push
add
ins
add
add
add
dec
add
add
add
xor
add
add
add
add
sub
add
xor
sub
add
add
add
add
add
add
arpl
data16
add
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
inc
add
inc
add
add
add
xor
add
add
add
add
add
add
inc
add
push
add
andnps
dec
add
inc
add
inc
add
add
inc
add
inc
add
dec
add
add
add
push
add
inc
add
add
push
add
ins
add
add
add
pop
cmp
das
add
push
add
dec
add
jns
push
add
ins
add
add
add
add
imul
sub
sub
and
dec
add
data16
jb
ins
add
je
imul
and
outs
add
je
and
jb
add
outs
add
je
add
add
outs
add
and
jae
add
jne
jb
imul
and
jb
add
jae
outs
add
jae
and
sub
sub
sub
add
inc
add
add
add
or
push
add
je
add
popa
add
add
add
xor
add
inc
add
push
add
data16
(bad)
add
imul
add
add
push
add
outs
add
add
dec
add
ins
add
sbb
jns
jae
je
add
add
je
jb
imul
add
add
sub
xor
js
add
and
sub
xor
js
add
jge
add
push
add
ins
add
add
add
add
ins
add
dec
add
or
popa
add
add
push
push
add
popa
add
je
inc
add
jae
add
bound
ins
add
add
je
je
jb
imul
je
add
add
outs
add
add
add
add
inc
add
add
imul
je
add
add
add
push
add
jo
add
add
dec
add
adc
jae
jae
add
bound
ins
add
add
ins
add
arpl
outs
add
ins
add
bound
add
sub
add
das
add
adc
add
add
popa
add
add
pop
dec
add
add
add
push
add
push
add
add
add
js
arpl
add
je
imul
push
add
jo
outs
add
je
add
jae
add
bound
ins
add
dec
add
adc
add
add
add
add
add
add
add
dec
add
adc
add
outs
add
je
dec
add
adc
jae
add
bound
ins
add
add
add
inc
add
add
inc
add
jae
add
or
add
jae
add
inc
add
jae
je
outs
add
push
add
outs
add
add
je
imul
add
jae
je
outs
add
push
add
outs
add
add
je
jns
add
inc
add
add
arpl
push
add
imul
jae
add
inc
add
add
arpl
push
add
imul
add
dec
add
jns
add
inc
add
ins
add
dec
add
ins
add
add
outs
add
je
push
add
jb
outs
add
add
inc
add
je
popa
add
and
jns
jae
je
add
dec
add
data16
jb
ins
add
je
imul
add
push
add
add
jae
imul
add
dec
add
push
add
jb
jae
imul
add
dec
add
push
add
add
add
jb
ins
add
inc
add
pop
push
add
jb
jbe
imul
push
add
arpl
imul
adc
add
jbe
add
push
add
add
add
add
pop
pop
add
add
add
push
add
jb
imul
add
add
add
outs
add
adc
popa
add
imul
add
popa
add
add
and
ins
add
jb
je
push
add
add
imul
add
popa
add
add
add
push
add
ins
add
jbe
add
add
popa
add
add
add
push
add
je
popa
add
add
popa
add
add
inc
add
jne
outs
add
adc
add
add
add
inc
add
adc
dec
add
data16
jae
add
daa
inc
add
arpl
add
je
imul
push
add
add
imul
add
jo
je
push
add
push
add
je
jae
add
popa
add
imul
add
popa
add
add
adc
add
add
popa
add
add
add
inc
add
jne
outs
add
pop
inc
add
jae
add
bound
ins
add
dec
add
add
adc
jne
ins
add
add
ins
add
add
dec
add
push
add
je
inc
add
data16
aaa
inc
add
dec
add
je
inc
add
jo
je
jne
jb
add
imul
add
inc
add
add
imul
je
add
sub
add
outs
add
add
jo
je
jne
jb
add
je
je
jb
imul
je
add
add
pop
dec
add
outs
add
ins
add
jb
popa
add
ins
add
add
dec
add
jb
add
or
bound
popa
add
add
adc
js
arpl
add
je
imul
add
dec
add
jae
jae
popa
add
add
daa
inc
add
arpl
add
je
imul
push
add
add
imul
add
popa
add
add
add
add
je
push
add
xor
push
add
and
xor
xor
xor
add
add
add
xor
jge
and
inc
add
add
add
jnp
xor
cmp
js
xor
jge
add
add
jae
add
data16
je
inc
add
outs
add
add
outs
add
add
jae
add
jae
add
data16
inc
jbe
xor
add
add
add
add
add
add
add
jb
outs
add
and
xor
aaa
add
add
add
add
add
add
add
add
add
add
add
cmp
xor
xor
cmp
xor
aaa
push
add
push
add
add
add
js
arpl
add
je
imul
add
add
add
add
inc
add
aaa
push
add
push
add
add
add
js
arpl
add
je
imul
add
dec
add
data16
jae
add
dec
push
add
push
add
add
add
js
arpl
add
je
imul
add
js
arpl
add
je
imul
push
add
add
imul
add
jo
je
push
add
push
add
add
add
js
arpl
add
je
imul
add
bound
push
add
je
jae
add
add
add
push
add
push
add
add
add
js
arpl
add
je
imul
add
bound
push
add
je
jae
pop
add
xor
jge
pop
add
pop
and
sub
aas
inc
add
jne
ins
add
add
outs
add
add
add
add
imul
imul
and
je
push
add
bound
add
je
add
push
add
add
add
js
arpl
add
je
imul
add
add
popa
add
je
inc
add
jae
add
bound
ins
add
add
ins
add
jb
je
inc
add
arpl
add
je
imul
jae
inc
add
jb
add
and
jb
add
imul
jae
inc
add
arpl
add
je
imul
add
xor
xor
bound
data16
add
add
add
add
add
add
add
add
add
add
je
popa
add
add
outs
add
jb
popa
add
add
outs
add
imul
add
xor
jae
je
add
add
imul
outs
add
jae
add
jo
jo
ins
add
arpl
popa
add
add
outs
add
cmovae
jne
jb
jb
add
je
add
push
add
jne
je
add
ja
outs
add
or
add
add
sub
ins
add
popa
add
add
jo
outs
add
je
dec
add
add
outs
add
add
jae
ins
add
add
inc
add
je
push
add
jb
jbe
add
push
add
dec
add
sbb
jo
outs
add
je
imul
add
jae
ins
add
add
push
add
ins
add
popa
add
add
jo
outs
add
je
xor
add
inc
add
outs
add
outs
add
add
outs
add
outs
add
arpl
je
and
je
outs
add
add
add
jae
add
jbe
imul
add
add
je
je
outs
add
adc
push
add
add
add
add
add
add
add
add
adc
push
add
add
add
add
add
add
add
add
inc
push
add
cmp
das
add
add
popa
add
add
jae
add
jbe
imul
add
add
add
popa
add
add
add
outs
add
das
add
add
add
aaa
pop
xchg
push
inc
mov
fbld
add
mov
pop
jg
aad
cmp
mov
pop
push
sbb
mov
push
adc
or
push
adc
or
push
adc
xor
sbb
adc
push
adc
add
adc
push
or
push
adc
add
sbb
push
or
push
push
add
sbb
add
adc
push
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
adc
push
sbb
or
push
or
adc
sub
push
adc
push
add
adc
add
adc
add
push
adc
cmp
adc
or
push
adc
adc
push
adc
add
sbb
adc
push
sbb
push
adc
adc
dec
or
adc
sub
push
adc
pop
push
adc
or
push
adc
and
push
adc
lock
adc
push
adc
push
add
sbb
push
adc
pop
add
adc
sbb
push
adc
sub
add
pop
add
add
cmp
adc
add
add
add
add
or
and
add
and
or
and
push
add
add
add
add
push
pop
add
sbb
add
add
push
pop
adc
add
add
push
pop
add
add
cmp
or
add
push
add
sbb
add
add
add
push
add
add
dec
add
add
sbb
sbb
or
adc
adc
pop
and
add
or
pop
or
add
or
or
push
push
sbb
add
sbb
adc
inc
adc
cmp
popa
sbb
and
add
adc
adc
pop
adc
or
push
push
sbb
add
sbb
adc
inc
adc
cmp
and
adc
or
or
adc
adc
or
add
adc
adc
adc
and
or
adc
push
and
adc
or
adc
pop
and
add
or
pop
or
add
add
and
pop
sbb
add
pop
push
and
add
sbb
or
pop
push
and
or
sbb
adc
or
popa
sbb
and
or
pop
add
or
pop
adc
or
or
adc
or
add
or
or
add
pop
sbb
or
popa
sbb
and
or
or
pop
push
and
or
adc
or
add
pop
or
popa
sbb
and
add
or
add
pop
adc
inc
or
popa
sbb
and
add
adc
pop
and
add
adc
and
adc
adc
add
add
add
and
or
popa
sbb
and
add
or
add
add
add
add
or
add
gs
push
add
sbb
add
sbb
and
or
and
add
add
sbb
push
or
and
add
sub
and
add
or
add
sbb
add
or
and
adc
pop
and
add
and
add
add
and
pop
and
add
and
add
or
and
or
and
add
cmp
and
add
push
and
add
cmp
and
add
add
add
add
adc
add
or
add
adc
and
add
push
and
add
or
and
add
push
push
or
add
adc
cmp
add
sbb
and
add
sub
imul
sub
add
adc
and
or
and
and
add
push
add
add
push
add
ins
add
add
ins
add
add
add
cmp
adc
add
sub
and
add
push
add
push
add
in
and
add
pop
and
add
push
add
and
sbb
and
adc
and
adc
sbb
sub
and
pop
sbb
sub
popa
sbb
and
add
pop
add
add
add
and
add
sbb
cmp
adc
and
add
add
pop
sbb
add
and
add
jno
jne
and
or
add
add
cmp
adc
add
cmp
add
adc
add
sbb
sbb
add
add
cmp
sbb
add
add
cmp
sbb
or
or
adc
sbb
sbb
add
add
cmp
sbb
sbb
push
add
add
cmp
sbb
sbb
sbb
add
add
cmp
add
pop
push
adc
push
and
add
xor
and
add
cmp
add
add
adc
test
jae
gs
cs
arpl
imul
imul
cs
arpl
imul
jae
imul
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
add
push
outs
ins
popa
outs
popa
addr16
outs
fs
adc
and
add
jns
and
add
jge
and
adc
and
add
pop
pop
and
add
cmp
add
sbb
and
add
push
or
add
add
add
push
push
push
push
and
add
adc
sbb
adc
push
adc
sub
or
add
add
adc
adc
add
and
add
dec
push
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
or
add
add
add
add
add
add
dec
add
or
add
aaa
xor
xor
xor
add
add
and
ja
jb
and
and
popa
jb
inc
jae
gs
bound
ss
xor
xor
xor
add
add
push
push
add
popa
ins
adc
imul
arpl
outs
popa
jo
push
or
ins
gs
popa
arpl
push
das
das
ja
ja
jae
popa
jb
popa
jae
gs
bound
arpl
das
ja
bound
jb
imul
ins
outs
popa
fs
gs
jb
dec
outs
imul
add
dec
popa
ins
gs
gs
jb
imul
imul
push
push
or
ins
gs
popa
arpl
push
das
das
ja
ja
jae
popa
jb
popa
jae
gs
bound
arpl
das
ja
bound
jb
imul
jo
jb
imul
inc
push
das
das
ja
ja
jae
popa
jb
popa
jae
gs
bound
arpl
das
ja
bound
jb
imul
ins
outs
popa
fs
gs
jb
dec
outs
imul
gs
gs
push
dec
add
sbb
add
add
inc
popa
je
push
jns
gs
popa
jae
ss
imul
add
je
jo
das
das
ja
ja
jae
popa
jb
popa
jae
gs
bound
arpl
das
ja
bound
jb
imul
jo
jb
imul
outs
popa
fs
gs
jb
xor
add
adc
or
adc
or
adc
xor
add
adc
pop
add
or
or
add
sbb
add
add
add
add
or
add
push
push
adc
add
adc
add
add
add
add
pop
add
add
add
add
sbb
or
add
add
int
and
sbb
add
adc
adc
adc
sbb
or
add
add
add
add
sbb
add
add
adc
adc
add
add
adc
cmp
and
push
sbb
pop
adc
push
adc
sbb
icebp
adc
sbb
sbb
sbb
add
push
add
add
add
or
push
add
add
push
push
push
push
push
and
add
or
or
add
add
adc
adc
push
push
push
push
push
adc
or
or
sbb
add
add
push
or
add
push
adc
pop
or
push
push
push
adc
or
pop
add
push
push
push
push
push
add
adc
add
or
sbb
add
push
adc
pop
sbb
adc
sbb
adc
add
add
add
push
push
sbb
adc
add
sbb
adc
sbb
adc
add
and
sbb
push
sbb
sbb
push
adc
push
sbb
sbb
or
sbb
adc
add
adc
add
sbb
sbb
push
add
add
add
add
add
dec
pop
and
add
sbb
add
push
push
add
add
sbb
push
push
push
add
or
add
or
sbb
pop
add
adc
adc
pop
sbb
push
or
add
sbb
add
add
add
add
add
push
add
add
je
add
adc
add
add
or
adc
or
adc
adc
push
push
push
push
adc
add
push
adc
or
cmp
adc
add
add
push
add
add
add
jno
and
adc
sbb
sub
pop
add
or
add
add
pusha
add
add
fs
add
push
ins
add
add
jo
add
push
push
sbb
add
or
push
add
add
or
add
or
add
sbb
add
or
adc
or
or
and
add
add
adc
daa
adc
add
add
pop
sbb
adc
adc
je
push
adc
xor
add
sbb
or
sbb
or
sbb
inc
sbb
add
add
push
pop
add
dec
adc
add
sbb
push
add
sbb
adc
add
add
add
add
or
pop
add
or
add
adc
push
sbb
adc
and
push
sbb
adc
push
add
push
sbb
sbb
pop
add
or
adc
add
sbb
pop
add
adc
adc
or
add
adc
add
sbb
add
or
add
or
and
sbb
or
add
add
adc
and
pushf
adc
or
or
or
sbb
sbb
pushf
sbb
or
sbb
add
sbb
add
add
add
add
add
or
push
or
or
or
add
add
add
add
or
pop
or
or
or
sbb
or
push
pop
add
or
add
pop
add
or
adc
invd
or
or
or
or
or
sbb
or
or
or
or
or
or
or
or
or
or
or
or
pop
add
or
or
pop
or
or
or
or
add
or
push
or
or
add
add
add
add
add
add
add
add
adc
pop
or
sub
add
sbb
add
or
sbb
adc
add
sbb
pop
or
add
push
add
push
add
add
add
cld
or
add
cmp
cmp
cmp
pop
add
cmp
add
add
push
or
add
adc
or
pop
add
add
ror
push
adc
sbb
adc
adc
dec
add
sub
adc
push
adc
or
adc
and
pop
add
add
add
sysret
or
or
pop
add
or
and
adc
add
adc
adc
push
push
sbb
push
adc
push
or
adc
adc
xor
or
sbb
and
add
add
or
add
ins
add
push
or
add
and
ins
or
inc
add
add
and
adc
adc
pop
and
add
add
add
add
or
fld
or
push
sysret
or
and
or
adc
push
add
add
or
pop
pop
add
or
add
or
loope
pop
add
ins
add
add
ins
or
add
adc
pop
add
add
inc
adc
add
adc
and
adc
adc
adc
pop
adc
push
sbb
and
adc
adc
adc
pop
adc
push
sbb
adc
push
adc
xor
fadd
mov
cmc
add
mov
stc
push
adc
cmp
adc
pop
adc
adc
add
and
sbb
add
push
add
aaa
adc
ins
push
push
push
adc
add
cmp
adc
adc
or
sbb
or
push
adc
adc
adc
inc
adc
or
xor
adc
adc
adc
push
adc
or
xor
adc
adc
adc
adc
adc
xor
and
sbb
and
sbb
add
adc
push
push
and
adc
add
xor
sbb
adc
push
add
adc
push
adc
or
or
sbb
xor
add
or
adc
adc
adc
or
imul
sbb
sbb
adc
add
add
add
or
pop
add
or
xor
adc
push
sbb
adc
or
adc
adc
add
lock
add
xor
xor
xor
pop
add
xor
or
adc
pop
add
push
adc
push
pop
and
add
sbb
push
add
push
push
and
sbb
adc
pop
add
adc
and
sbb
and
add
or
add
adc
adc
sbb
or
or
adc
adc
adc
sbb
add
add
adc
add
sub
push
push
add
sbb
push
add
pop
add
push
sbb
pop
add
cmp
add
cmp
and
adc
add
xor
sbb
adc
push
adc
add
sbb
xor
cmp
sbb
pop
add
push
pop
and
sbb
add
inc
or
add
add
add
sbb
add
sbb
adc
or
into
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
imul
add
add
add
pop
add
push
add
add
and
mov
sbb
mov
pop
mov
(bad)
fcomp
iret
mov
lods
iret
enter
leave
lods
fistp
lahf
xchg
test
fcomp
fistp
fmulp
(bad)
mov
(bad)
lods
jnp
popa
out
jo
loopne
call
stos
cli
div
loope
(bad)
mov
rcl
iret
clc
mov
mov
call
cmps
lods
leave
loope
mov
mov
nop
mov
mov
(bad)
fmulp
leave
lods
iret
leave
dec
iret
(bad)
lods
(bad)
leave
iret
lods
iret
add
mov
xor
mov
(bad)
sahf
iret
leave
mov
leave
lods
int
lods
retf
enter
leave
lods
fistp
lahf
xchg
test
fcomp
(bad)
fcomp
iret
leave
lods
(bad)
lods
(bad)
lods
iret
enter
fldcw
xchg
lahf
xchg
test
aas
fcomp
mov
fmulp
leave
mov
leave
xchg
sbb
lods
iret
enter
leave
lods
fistp
lahf
xchg
movs
cmps
mov
(bad)
fcomp
iret
leave
lods
iret
leave
lods
iret
enter
leave
lods
iret
leave
lods
fistp
lahf
xchg
test
fcomp
(bad)
fcomp
iret
leave
mov
leave
movs
iret
enter
leave
lods
iret
leave
lods
fist
lahf
xchg
test
lods
mov
iret
push
imul
lods
out
enter
enter
lods
fistp
lahf
xchg
mov
mov
iret
lds
lods
iret
retf
iret
add
mov
aad
lods
jmp
stos
stos
lods
mov
jns
leave
lods
out
retf
push
iret
lods
iret
add
mov
cmps
aad
lods
jmp
fcomp
(bad)
fcomp
iret
leave
lods
iret
leave
lods
iret
enter
enter
lods
(bad)
mov
test
mov
mov
adc
fmulp
add
(bad)
lods
iret
enter
leave
lods
fistp
lahf
xchg
test
fcomp
(bad)
fcomp
iret
leave
lods
iret
leave
lods
iret
enter
retf
leave
lods
fistp
lock
cmps
fbld
mov
aam
repz
fstp
(bad)
in
ret
xchg
iret
mov
mov
inc
mov
scas
sub
stc
in
enter
jmp
cld
ret
pop
jmp
icebp
popf
sahf
mov
test
cmps
mov
fild
mov
loope
mov
fiadd
lahf
mov
neg
mov
(bad)
rcr
leave
lods
retf
jecxz
into
enter
sbb
pop
or
jo
mov
mov
(bad)
(bad)
mov
iret
leave
test
hlt
lods
iret
ret
fdivr
lods
fist
xchg
leave
cmp
call
iret
leave
test
enter
leave
lods
retf
cmps
xchg
fistp
scas
xchg
lods
cmps
mov
(bad)
mov
iret
leave
cmps
in
mov
enter
leave
lods
into
loope
mov
cmps
fist
mov
(bad)
fmulp
retf
mov
in
jmp
ret
xchg
loop
fisttp
xchg
xlat
in
mov
faddp
repz
lods
iret
leave
xchg
in
jmp
leave
lods
aad
mov
enter
scas
movs
in
lods
cmps
cmps
mov
(bad)
ror
into
mov
mov
lods
fdivr
scas
fild
lahf
xchg
cmps
mov
hlt
leave
cmc
xlat
jmp
lods
iret
int3
xchg
loop
fistp
xchg
stos
mov
xchg
stos
(bad)
fcmovne
vpsrlq
mov
iret
leave
test
rol
loop
cmc
pushf
xchg
xchg
cmps
cmp
xchg
imul
fcomp
mov
(bad)
int
ror
enter
retf
mov
mov
mov
cmps
mov
(bad)
ret
repnz
lods
xor
movs
iret
enter
leave
lods
(bad)
fistp
lahf
sub
mov
ret
fcomp
lds
jecxz
mov
call
lods
fistp
lahf
xchg
(bad)
mov
xchg
(bad)
aam
in
jmp
lods
iret
int3
loop
mov
lods
fistp
test
mov
mov
fstp
fdivp
(bad)
mov
mov
iret
enter
mov
cli
mov
lods
pushf
scas
and
mov
mov
(bad)
ror
xor
mov
retf
xchg
(bad)
fmul
xchg
lods
pusha
xchg
test
into
shl
cmps
loop
leave
cmps
ins
rol
movs
mov
mov
test
mov
(bad)
neg
lahf
leave
lods
lds
int
jecxz
in
lods
fistp
lahf
inc
and
mov
fcmove
lods
iret
leave
mov
enter
leave
lods
into
pushf
xchg
xchg
cmps
mov
aad
mov
idiv
(bad)
clc
(bad)
push
fcmovb
lods
iret
shr
jmp
xchg
mov
scas
inc
repz
pop
mov
fcomp
(bad)
fcomp
fmulp
mov
in
jmp
(bad)
mov
fwait
lods
fist
xchg
lods
mov
inc
cmps
mov
(bad)
fcomp
iret
lds
or
leave
cmps
cmc
mov
scas
xchg
movs
cmps
mov
(bad)
lock
iret
leave
cmps
in
mov
enter
leave
lods
into
popf
xchg
xchg
cmps
cmp
xchg
call
fmulp
leave
lods
iret
leave
scas
aad
or
leave
cmps
cmc
mov
scas
add
cmps
mov
repnz
(bad)
fstp
aam
shr
popf
enter
call
lods
mov
mov
mov
mov
fadd
retf
loop
mov
popf
lods
iret
ret
jecxz
lods
fdivr
lods
fist
xchg
mov
mov
int
(bad)
(bad)
lods
iret
leave
mov
(bad)
rol
lahf
mov
test
cmps
mov
into
fadd
(bad)
mov
lods
iret
rol
in
test
lahf
mov
test
repz
mov
call
fmulp
ret
lods
iret
fsubr
out
fld
xchg
lea
daa
fnstsw
xchg
push
(bad)
repnz
call
iret
leave
mov
enter
leave
test
fwait
mov
test
cmps
mov
fcomip
out
ror
mov
iret
leave
test
shr
leave
xlat
pop
lahf
mov
or
mov
(bad)
fdivp
ret
(bad)
lods
mov
lods
iret
int3
test
enter
leave
lods
fisttp
xchg
mov
into
shl
(bad)
mov
cmps
cli
iret
enter
(bad)
xchg
dec
cmps
fistp
rol
rol
(bad)
aam
retf
into
leave
stos
int
ss
xlat
add
mov
(bad)
lea
rcr
sbb
fdiv
fcmovu
ret
fbld
enter
stc
scas
(bad)
mov
xchg
movs
ret
and
mov
ffreep
repz
out
scas
fcom
(bad)
aam
in
jmp
scas
mov
mov
xchg
lods
mov
mov
(bad)
(bad)
scas
lods
iret
iret
test
enter
ret
xchg
ret
pop
mov
mov
in
lods
cmps
movs
mov
into
lods
sbb
ret
mov
aam
mov
rol
adc
pushf
rcr
scas
mov
shl
ds
cmp
ret
xchg
les
mov
lods
iret
enter
mov
xchg
lods
mov
fst
rol
lods
mov
lds
lahf
mov
test
mov
retf
adc
fmulp
and
test
fsubr
mov
ffree
mov
cmp
(bad)
fcmove
fidiv
retf
into
enter
into
mov
mov
test
mov
inc
repnz
and
leave
stos
fmulp
and
xchg
lods
iret
ret
test
mov
mov
pop
inc
mov
aam
mov
rep
iret
int3
ret
xchg
enter
ret
lahf
mov
test
mov
ret
(bad)
mov
fmulp
ret
or
fxch
enter
shr
xchg
mov
mov
les
fcomp
fdivp
test
iret
ret
test
lods
leave
fldcw
retf
in
enter
mov
aad
test
stos
fbld
mov
jb
in
test
sar
or
mov
(bad)
fdivp
scas
leave
lods
lds
lods
ffree
test
stos
push
and
test
cmps
aad
ret
mov
mov
cli
mov
shr
lods
iret
int
fidiv
mov
test
in
mov
fnstenv
out
lods
iret
into
jb
in
loope
iret
leave
cmps
int3
xchg
cdq
sub
sub
mov
(bad)
aam
leave
xchg
leave
in
or
iret
enter
enter
mov
test
cmps
mov
fild
fcomp
iret
js
iret
leave
or
enter
leave
lods
iret
leave
lods
fistp
lahf
xchg
inc
cmps
mov
fistp
pushf
leave
leave
xchg
into
enter
leave
mov
xchg
xchg
cmps
sahf
mov
ret
test
jmp
jl
fmulp
ret
xchg
cmps
in
mov
rcl
xlat
xchg
test
fcomp
xlat
(bad)
leave
xchg
push
aad
leave
lods
into
mov
rol
leave
lods
fist
add
mov
mov
xchg
out
leave
lods
into
mov
mov
leave
lods
retf
shr
(bad)
lahf
xchg
lods
scas
mov
test
(bad)
idiv
fcmovne
lods
retf
mov
iret
enter
scas
lods
fist
lahf
xchg
test
pop
rcr
(bad)
(bad)
xchg
cmps
enter
test
xor
mov
iret
leave
test
call
mov
mov
mov
fcomi
push
shl
push
iret
leave
stos
out
lods
iret
into
iret
ret
xchg
leave
lods
aad
lea
fisub
(bad)
div
(bad)
leave
fld
ret
push
(bad)
mov
lahf
mov
(bad)
jp
cld
lods
test
into
push
lods
(bad)
(bad)
jg
iret
iret
xchg
int3
and
fmul
lods
int
inc
fbstp
lahf
xchg
mov
fxch
mov
mov
mov
sbb
add
mov
arpl
xchg
push
fcomp
fisttp
fcomp
mov
enter
leave
lods
fnstenv
scas
mov
test
(bad)
iret
repz
test
in
lods
int3
clc
shr
mov
mov
cdq
scas
lods
mov
test
(bad)
fcmovnu
leave
cmc
iret
jmp
lods
iret
int3
xchg
int
xor
xor
mov
fmul
dec
fxam
xchg
retf
fiadd
les
pop
popf
test
mov
mov
mov
mov
retf
fistp
jecxz
(bad)
in
mov
lahf
mov
in
push
cwde
mov
into
mov
retf
sbb
stos
sbb
push
fwait
mov
mov
(bad)
scas
mov
(bad)
iret
retf
fmul
mov
retf
jecxz
int3
stc
movs
fisttp
lahf
xchg
test
cmc
(bad)
clc
repnz
loop
iret
enter
enter
lods
fisttp
movs
xchg
mov
fcomp
(bad)
fcomp
fidiv
in
lods
fdivr
enter
lods
fisttp
mov
mov
mov
(bad)
fmulp
retf
mov
in
jmp
ret
xchg
loop
fistp
xchg
stos
mov
mov
shl
jmp
add
fild
lahf
mov
movs
in
lods
cdq
cmps
mov
(bad)
iret
ret
loop
mov
leave
jecxz
mov
cmp
cmps
cwde
mov
sar
aam
(bad)
aam
clc
in
mov
cmp
dec
leave
lods
iret
leave
lods
fistp
mov
mov
lahf
nop
sub
ffree
(bad)
repz
xlat
xlat
leave
lods
retf
retf
mov
mov
mov
lods
jno
in
lods
mov
(bad)
fadd
(bad)
mov
leave
jecxz
mov
cmp
cmps
xchg
rcl
(bad)
test
repz
fucomp
aam
clc
lods
iret
leave
lods
iret
enter
xlat
add
mov
mov
mov
xchg
stos
popf
mov
fstp
fadd
mov
mov
and
mov
aad
lods
test
(bad)
(bad)
repnz
movs
(bad)
leave
lods
retf
in
in
mov
cmp
scas
aad
or
test
mov
(bad)
retf
mov
push
xor
cmc
cmp
pushf
(bad)
iret
enter
leave
lods
int
mov
xchg
scas
lock
test
mov
mov
clc
mov
int3
aad
loop
mov
jecxz
hlt
jae
mov
test
cmps
mov
repnz
movs
(bad)
leave
lods
retf
in
in
mov
cmp
scas
xlat
rol
mov
clc
mov
(bad)
enter
repnz
xor
cmc
cmp
pushf
(bad)
iret
enter
leave
lods
int
mov
xchg
test
mov
mov
clc
mov
int3
xlat
mov
ret
mov
cmps
cmps
lods
iret
ret
xchg
mov
lods
mov
movs
in
lods
mov
(bad)
fadd
(bad)
loop
mov
leave
jecxz
mov
cmp
cmps
xchg
rcl
(bad)
repz
fucomp
aam
out
lods
iret
leave
lods
iret
enter
rol
lahf
mov
mov
mov
xchg
mov
mov
mov
leave
lods
(bad)
in
lods
int3
clc
shr
mov
cmps
fistp
lahf
popf
repnz
(bad)
(bad)
(bad)
xor
lods
(bad)
enter
leave
lods
into
loope
mov
cmps
rcl
mov
(bad)
fmulp
mov
iret
leave
test
shl
mov
xchg
mov
sti
lahf
aad
test
mov
mov
(bad)
aam
push
iret
iret
xchg
out
xchg
loop
lods
fdivr
test
mov
xchg
movs
movs
lods
xchg
(bad)
mov
fcomp
(bad)
in
xor
bswap
leave
stos
cmc
mov
xchg
lods
mov
(bad)
clc
push
jecxz
mov
lods
iret
into
fistp
sahf
or
mov
scas
cmps
aad
xchg
in
mov
clc
fcomi
mov
mov
retf
cmps
in
mov
iret
leave
test
lock
mov
lahf
aad
test
mov
(bad)
cmc
int3
ret
xchg
iret
test
shr
retf
mov
fistp
lahf
xchg
stos
xchg
mov
mov
(bad)
(bad)
fmulp
retf
in
jmp
iret
xchg
loop
fild
cdq
lods
test
cmps
mov
into
(bad)
push
gs
leave
lods
shl
ror
enter
fistp
lods
fidiv
cmp
mov
mov
(bad)
or
iret
leave
lods
out
lods
iret
ret
shl
cmc
jmp
mov
xor
xchg
(bad)
mov
iret
push
fcmove
lods
into
loope
iret
enter
sar
lods
fidiv
cmp
mov
mov
les
int3
iret
leave
lods
out
lods
iret
ret
dec
aam
iret
int
aad
hlt
je
jp
call
lea
mov
(bad)
fcomp
iret
shr
fistp
in
stc
pushf
lahf
rcr
cmps
aam
sub
xor
cmc
fcomp
inc
jle
retf
into
cmc
out
lods
iret
ret
jecxz
mov
cdq
sahf
and
lahf
xchg
mov
repz
cmc
xor
mov
xchg
enter
retf
leave
lods
fild
lahf
js
xchg
aad
scas
stos
aad
mov
icebp
(bad)
(bad)
mov
mov
loopne
(bad)
rol
xchg
lods
mov
test
cmp
cmps
fcomp
(bad)
adc
mov
push
mov
iret
leave
test
inc
mov
xchg
sub
repnz
enter
lods
(bad)
leave
jmp
enter
stc
test
iret
mov
xchg
movs
cmps
lds
mov
fidiv
in
in
cmps
in
mov
iret
leave
cmps
fdiv
lock
test
xor
(bad)
cmc
enter
mov
lods
(bad)
fchs
mov
iret
ret
mov
mov
mov
mov
mov
fsubr
aad
cmps
jmp
leave
cmps
jecxz
xchg
xchg
mov
xchg
mov
jmp
enter
fdivr
shl
(bad)
lods
iret
cdq
lods
(bad)
xchg
aam
cmps
mov
mov
fcom
fnstenv
lods
in
xchg
xchg
int3
ffreep
loope
mov
mov
lahf
test
mov
call
fmulp
aam
iret
fsubr
mov
lods
iret
ret
xchg
xchg
mov
mov
icebp
mov
in
jmp
lods
(bad)
mov
ins
mov
test
aad
lods
mov
mov
lods
test
faddp
aam
loope
mov
enter
int
imul
mov
cwde
adc
hlt
mov
fcomp
ret
clc
fmulp
scas
mov
xchg
fcmovne
xchg
ret
xchg
mov
push
test
mov
scas
(bad)
shl
iret
movs
fmulp
ret
dec
enter
shl
xor
lods
test
call
fmulp
(bad)
lods
iret
fsubr
enter
in
stc
cdq
mov
or
ret
mov
mov
cmps
fcomp
(bad)
in
scas
inc
lods
(bad)
iret
leave
lods
fistp
xchg
test
test
fcomp
aad
int
mov
mov
fisttp
iret
leave
cmps
test
mov
mov
test
movs
(bad)
(bad)
fdiv
ds
leave
mov
enter
leave
lods
int
xlat
cld
lahf
mov
test
mov
cmc
mov
xchg
leave
scas
inc
lods
ror
leave
lods
iret
leave
lods
fistp
lahf
add
shr
repnz
clc
in
(bad)
iret
leave
test
xor
leave
lods
fist
xchg
mov
repz
call
iret
leave
lods
iret
enter
xlat
add
lods
mov
mov
mov
(bad)
(bad)
fmul
int
mov
leave
test
dec
lods
iret
ret
fdivr
scas
fist
lahf
xchg
add
mov
repz
retf
leave
or
lods
iret
enter
shl
lahf
scas
pushf
mov
mov
scas
cwde
(bad)
hlt
fcomp
fprem1
retf
clc
in
scas
aam
add
ret
lahf
enter
retf
imul
mov
mov
(bad)
repnz
jecxz
fcomp
sbb
mov
mov
lods
iret
int
fucom
lods
mov
cmps
fistp
mov
fucomp
xlat
iret
out
lods
iret
leave
lods
iret
enter
in
lods
iret
int
fidiv
mov
lods
test
pop
(bad)
aam
hlt
mov
lods
iret
int
and
retf
leave
lods
fistp
in
test
fstp
repnz
fsub
inc
lods
iret
ret
stos
out
lods
iret
ret
(bad)
fucom
stos
mov
adc
mov
inc
(bad)
mov
fcomp
leave
pop
stos
leave
loope
iret
enter
dec
lods
into
fldcw
sahf
mov
mov
mov
(bad)
fmulp
retf
test
scas
shl
(bad)
mov
retf
fist
adc
test
icebp
(bad)
(bad)
das
iret
rcr
lods
out
enter
mov
fistp
mov
mov
xchg
dec
fisub
int3
cmps
and
leave
cmps
jecxz
scas
mov
leave
lods
retf
retf
lahf
mov
pop
mov
xchg
push
lods
mov
mov
cmc
and
out
lods
iret
ret
jo
loop
into
fmul
lods
int
mov
lea
in
lods
sub
fxch
fsub
(bad)
in
jmp
leave
cmps
in
cmps
hlt
push
lock
leave
pop
mov
mov
fcmovu
mov
leave
lods
(bad)
popf
enter
call
retf
mov
lods
lahf
xchg
test
fcomp
aad
ret
fdiv
retf
loopne
iret
enter
leave
lods
aad
(bad)
lea
jp
les
mov
mov
int3
cmps
xchg
leave
stos
in
push
into
fmul
lods
int
mov
lea
in
lods
repnz
mov
into
fsub
aad
movs
jmp
leave
cmps
in
cmps
hlt
push
lock
leave
pop
mov
scas
cmps
cmc
leave
stc
fsub
int3
cmps
cmp
enter
retf
daa
jb
cwde
mov
pop
or
mov
movs
neg
fmulp
retf
leave
lods
leave
loop
into
fmul
lods
int
mov
lea
in
lods
call
into
fsub
xlat
in
jmp
leave
cmps
in
cmps
hlt
push
lock
leave
pop
mov
mov
cmc
and
out
lods
iret
ret
jo
loop
into
fmul
lods
int
mov
lea
in
lods
sub
fcomp
into
fsub
shl
movs
jmp
leave
cmps
in
mov
mov
repz
mov
aam
repz
out
xchg
lds
rcr
(bad)
test
sbb
mov
fcom
int3
fcmovne
(bad)
pop
lods
iret
ret
test
pop
lods
iret
ret
mov
mov
aad
cmps
test
(bad)
and
(bad)
aam
fld
loope
iret
leave
cmps
adc
xchg
fmul
lods
int
mov
lea
in
lods
mov
mov
into
fsub
mov
mov
mov
lods
fistp
xchg
sub
stos
fcomp
(bad)
fcomp
iret
mov
iret
leave
cmps
(bad)
in
jmp
leave
test
mov
scas
add
cmps
mov
inc
(bad)
fdivr
push
enter
push
lods
iret
ret
mov
mov
(bad)
or
cmps
mov
and
(bad)
retf
ins
leave
lods
leave
mov
mov
mov
xchg
cmps
mov
cmc
fsub
mov
aad
cmc
bnd
cmps
dec
cli
lods
iret
int3
loope
iret
leave
cmps
idiv
mov
test
es
mov
pop
repnz
int
add
iret
enter
loope
iret
leave
stos
imul
mov
test
mov
fcomip
mov
fmulp
loope
iret
leave
stos
out
lods
iret
into
loope
iret
leave
stos
mul
mov
test
mov
fcomip
cmps
fcomp
leave
loope
iret
leave
stos
out
lods
iret
into
loope
iret
leave
stos
idiv
mov
test
cmps
mov
(bad)
lock
iret
leave
stos
out
lods
iret
into
test
leave
stos
in
lods
fistp
xchg
and
hlt
scas
clc
cmps
popf
iret
leave
test
aaa
stos
imul
leave
mov
ret
mov
mov
xor
(bad)
fnstenv
ror
leave
outs
leave
lods
leave
mov
in
test
mov
push
mov
(bad)
leave
cmps
ror
stos
mov
lods
iret
int3
fst
arpl
test
mov
mov
int
(bad)
or
mov
leave
fist
lods
lods
loope
test
cmps
mov
(bad)
ret
leave
lods
iret
out
shl
dec
lods
iret
iret
sub
lahf
mov
add
fdivp
ja
fcom
out
lods
iret
iret
ret
enterw
popa
lods
iret
ret
sub
lahf
mov
or
fdiv
jne
fcom
mov
ret
arpl
lods
(bad)
scas
dec
mov
fistp
fwait
scas
pushf
cmps
aad
cmps
mov
fcomp
pop
mov
lods
mov
lods
iret
int3
sub
enter
dec
aad
lahf
mov
add
xchg
stc
inc
inc
inc
pop
pop
(bad)
fsub
scas
ss
xor
mov
int3
lods
mov
leave
lods
into
mov
mov
test
cmps
mov
(bad)
mov
retf
repnz
in
fld
xchg
xchg
cmps
mov
jbe
xchg
push
test
lock
(bad)
ror
iret
loope
iret
leave
cmps
out
lods
iret
ret
iret
leave
cmps
imul
mov
scas
jb
mov
mov
sbb
ror
fldenv
(bad)
lods
iret
rol
lods
enter
jecxz
into
fldcw
sar
xchg
mov
mov
fcomip
fcomp
fidiv
out
stos
mov
(bad)
loope
iret
leave
stos
div
mov
mov
test
fcmovnbe
hlt
sub
lods
iret
ret
mov
loopne
lods
iret
iret
mov
xchg
scas
sbb
sti
mov
inc
stos
xchg
dec
stos
ror
xlat
inc
lock
leave
cmps
fmul
shl
enter
int
xchg
lods
fsubrp
ror
cmps
fild
mov
ror
(bad)
push
outs
in
pop
mov
ret
iret
enter
leave
lods
aad
and
cmps
aad
mov
mov
push
iret
ret
ret
scas
leave
lods
(bad)
(bad)
fcmove
test
lods
aad
ror
lods
adc
push
daa
leave
enter
cmps
iret
iret
leave
cmps
adc
ret
jnp
leave
cmps
fadd
xchg
lea
mov
test
outs
(bad)
aam
int3
(bad)
leave
cmps
loop
jb
fcmovb
push
(bad)
lods
fild
pop
pop
xchg
xchg
loope
cmps
mov
mov
clc
push
shl
push
iret
leave
stos
out
lods
iret
into
loope
iret
leave
cmps
add
mov
test
mov
(bad)
fcom
iret
loop
iret
(bad)
lods
iret
enter
out
lods
sub
lods
(bad)
(bad)
test
and
(bad)
clc
mov
lods
iret
into
test
leave
cmps
(bad)
in
stc
mov
and
mov
sar
leave
int
cmc
out
xchg
stos
in
mov
xchg
lods
fsubrp
ror
sub
in
mov
or
fsubr
cli
jnp
cmps
lods
lods
iret
ret
test
sahf
mov
cmp
mov
ror
fcmove
(bad)
lds
lods
leave
loopne
lods
iret
iret
test
test
mov
mov
cwde
fcomp
into
rcr
lods
in
leave
mov
fwait
test
stos
push
sub
mov
cmc
sar
fdiv
jo
leave
cmps
loop
xchg
ret
loop
test
lods
aad
movs
cmps
lods
xor
or
(bad)
fldcw
rol
enter
loope
fistp
mov
mov
stos
xchg
pop
mov
loope
(bad)
xlat
fcom
(bad)
aam
fwait
iret
enter
leave
lods
(bad)
pop
mov
cmps
shl
loopne
(bad)
(bad)
xor
iret
leave
mov
enter
int3
movs
fmulp
cmps
xlat
mov
test
mov
(bad)
xchg
std
leave
lods
into
mov
mov
leave
lods
retf
fld
rcr
jmp
test
cmps
mov
fcmovnb
add
iret
rcl
in
enter
int3
mov
lahf
mov
clc
xchg
mov
mov
rcr
retf
cmps
int3
iret
leave
cmps
loop
xchg
int
(bad)
xchg
mov
cmps
fist
mov
rcr
retf
cmps
pop
iret
leave
cmps
fadd
mov
iret
int
(bad)
xchg
mov
cmps
fild
mov
movs
(bad)
fmulp
int
retf
iret
enter
mov
iret
leave
test
call
or
mov
mov
fcmove
fyl2x
les
ss
in
test
iret
mov
pop
fwait
mov
test
cmps
mov
aad
fdiv
ror
enter
leave
lods
stos
enter
mov
test
aad
lods
mov
mov
fcomip
fcomp
fidiv
out
in
mov
(bad)
loope
iret
leave
stos
div
mov
mov
test
ror
repz
mov
lods
iret
int
std
enter
xchg
lods
iret
ret
movs
mov
jmp
mov
mov
fcomp
(bad)
int3
out
xchg
fld
xchg
test
or
fcomp
push
xchg
fcomp
into
cmps
test
xlat
ror
test
sti
lods
fistp
xchg
mov
leave
in
mov
retf
fmulp
int
xchg
leave
lods
(bad)
out
leave
lods
(bad)
add
xchg
xchg
test
mov
hlt
into
leave
stos
(bad)
iret
stos
out
lods
iret
ret
jmp
mov
mov
mov
fdiv
mov
leave
xchg
loopne
into
aam
lods
int
jmp
lahf
xchg
push
jb
cdq
std
fcomp
faddp
call
iret
leave
or
mov
shl
push
fistp
lahf
cmp
aad
test
mov
hlt
fprem
loopne
iret
leave
lods
ret
(bad)
test
leave
cmps
fxam
lock
lea
mov
test
retf
fbld
rcr
leave
lods
retf
sar
int
into
lahf
mov
test
fstp
(bad)
fcmovb
fld
rcr
enter
leave
xlat
std
lahf
mov
test
add
xchg
adc
(bad)
ins
fcomp
(bad)
adc
mov
enter
stos
lods
fist
lahf
sub
aad
cmps
sub
(bad)
fcom
iret
inc
xor
(bad)
lods
iret
enter
int
add
lods
fistp
fadd
xchg
fcomp
stc
lods
sbb
iret
ret
mov
imul
xchg
inc
lahf
mov
and
and
in
leave
test
aaa
stos
outs
enter
loope
iret
iret
fisttp
mov
out
lods
lods
aad
mov
(bad)
(bad)
mov
inc
jmp
lods
iret
iret
test
(bad)
stc
int
xchg
lods
fdivr
mov
fsub
iret
fistp
in
enter
leave
lods
fstp
lock
rol
jmp
cmps
mov
fxtract
pop
cdq
iret
leave
test
pushf
push
xor
sub
enter
sahf
push
and
mov
test
inc
lods
stos
xchg
mov
(bad)
fcomp
iret
mov
iret
leave
test
ja
pop
(bad)
loope
iret
leave
stos
mov
or
xchg
test
fcomp
push
push
shl
push
iret
leave
stos
mov
lods
iret
int3
inc
sahf
iret
leave
lods
mov
mov
test
mov
fbld
inc
mov
leave
lods
mov
mov
iret
leave
test
jmp
pusha
xchg
test
fcomp
mov
fcomp
leave
mov
iret
leave
test
movs
lea
(bad)
loope
iret
leave
stos
mov
jmp
lods
test
or
mul
fcomp
leave
mov
iret
leave
test
nop
lods
iret
into
mov
iret
leave
test
mov
pusha
xchg
test
fcomp
mov
jmp
out
lods
iret
into
mov
iret
leave
test
ror
xchg
stos
xchg
mov
(bad)
fcomp
iret
jmp
out
lods
iret
into
rol
lahf
mov
or
cmps
movs
(bad)
fsub
loope
iret
enter
out
mov
out
test
lahf
mov
or
fdiv
pop
icebp
fcomp
retf
loop
dec
out
iret
int3
xchg
dec
clc
lods
iret
int
or
xchg
fisub
mov
hlt
fdivr
repz
lods
iret
int
iret
mov
iret
enter
leave
lods
aad
mov
sti
loope
test
mov
fcomip
sbb
faddp
xlat
add
stos
jmp
aas
mov
adc
sar
mov
push
(bad)
aam
leave
xchg
lds
jb
in
loope
iret
leave
cmps
aam
test
test
sub
mov
aam
fsubp
enter
lods
iret
fisubr
leave
lods
fimul
xchg
or
cmc
(bad)
clc
(bad)
aas
leave
lods
iret
loop
(bad)
mov
mov
dec
mov
imul
mov
mov
fcmove
fisub
ret
add
loope
iret
leave
cmps
imul
mov
lods
xlat
aad
stos
sub
mov
(bad)
fdiv
out
lods
leave
fsubr
enter
add
mov
lods
stos
mov
mov
scas
or
into
fdivp
fcom
lods
fadd
mov
mov
test
xchg
ja
(bad)
iret
fmulp
mov
iret
mov
iret
leave
lods
scas
ror
xchg
(bad)
cmps
mov
test
iret
or
iret
mov
inc
sbb
add
lods
(bad)
div
mov
call
xor
and
fsub
push
push
xor
xchg
enter
int
mov
mov
xor
and
shl
sub
loop
int
ss
rol
mov
adc
stos
stos
lea
aaa
fcomp
aad
shl
ret
mov
iret
enter
loope
iret
leave
cmps
mov
mov
mov
aad
stos
mov
shl
leave
shl
(bad)
(bad)
arpl
push
leave
lods
fild
adc
xchg
xchg
aam
scas
mov
fcomp
scas
in
fcomp
into
fild
push
fadd
enter
in
stc
loope
mov
cmps
shl
mov
rcl
out
leave
lods
iret
dec
xchg
iret
enter
dec
fwait
iret
leave
test
dec
or
pop
mov
inc
mov
test
mov
mov
rcl
enter
enter
rcl
repz
xchg
(bad)
(bad)
faddp
xchg
push
fsub
into
mov
iret
enter
retf
stos
mov
inc
test
mov
mov
(bad)
mov
call
jecxz
leave
test
enter
mov
test
mov
(bad)
daa
es
fcomp
iret
ficomp
lods
dec
leave
mov
xchg
xchg
sbb
mov
fcomp
aad
push
fmulp
ret
or
scas
ret
fnclex
mov
iret
leave
cmps
(bad)
mov
mov
adc
pusha
test
fcomp
aad
fcomip
int3
ret
fld
ret
sbb
movs
sub
mov
lods
xchg
fcomip
or
fcomp
fmul
mov
enter
leave
lods
(bad)
retf
mov
mov
test
mov
mov
not
fmulp
ret
stos
in
stos
in
lods
fdivr
iret
lods
stc
leave
lods
fild
sahf
test
jns
mov
(bad)
ror
mov
mov
enter
leave
lods
aad
pop
mov
mov
cdq
xchg
and
(bad)
call
iret
leave
lahf
iret
enter
loope
iret
leave
cmps
rcr
xchg
cwde
div
mov
lahf
enter
aam
repz
out
stos
(bad)
(bad)
mov
ret
iret
leave
cmps
fst
lahf
xchg
mov
fcom
(bad)
ficom
cmps
jbe
leave
cmps
in
xchg
ret
aam
scas
fucomip
mov
xchg
mov
mov
(bad)
hlt
rcr
fild
dec
in
iret
enter
jmp
mov
xchg
aad
mov
stos
popf
cmps
out
(bad)
leave
mov
mov
push
cli
sub
leave
lods
(bad)
sub
cmps
mov
lds
into
leave
jmp
out
lods
iret
into
loope
iret
leave
stos
idiv
mov
test
cmps
mov
cli
cwde
fcomp
into
ficomp
lods
cli
enter
loope
ficomp
mov
xchg
out
lea
nop
and
(bad)
mov
push
iret
leave
stos
out
lods
iret
into
inc
in
leave
lods
test
lahf
cmc
pop
cmps
aad
mov
mov
repnz
fmulp
int
cmp
mov
pop
lods
iret
ret
stos
jmp
mov
xchg
ins
xchg
and
cmc
lock
(bad)
fmulp
loope
test
jb
enter
loope
ficomp
mov
test
cmps
mov
fild
lods
iret
fadd
enter
lods
fistp
lahf
xchg
mov
fdivp
ds
aam
sub
mov
(bad)
loope
iret
leave
stos
mov
mov
scas
inc
rcl
lahf
xchg
push
(bad)
fadd
cli
jmp
in
jmp
sbb
mov
std
fisubr
mov
aas
cmc
(bad)
fmulp
leave
lods
repnz
mov
enter
loope
ficomp
loope
test
xor
test
leave
scas
inc
lods
fcmove
leave
lods
iret
leave
lods
fbstp
mov
scas
mov
xchg
mov
and
fmulp
test
sub
leave
stos
cmc
mov
xchg
sbb
mov
in
in
xlat
iret
enter
mov
fistp
scas
xchg
(bad)
fadd
mov
(bad)
fsubp
retf
cmp
enter
lods
fist
cdq
jmp
mov
mov
xchg
fs
aad
shl
leave
lods
(bad)
in
cmps
in
into
mov
jl
mov
mov
cmps
(bad)
inc
test
int
mov
ror
iret
enter
loop
shl
mov
adc
(bad)
sbb
enter
cmps
inc
iret
leave
cmps
shl
test
push
test
fcomp
aad
clc
into
call
lods
iret
into
mov
cwde
mov
iret
leave
test
fwait
mov
sbb
stos
test
clc
adc
push
(bad)
div
leave
lods
leave
loope
iret
enter
loop
out
lods
fist
cdq
lahf
lods
inc
aad
cmps
test
leave
clc
(bad)
test
leave
in
out
lods
iret
into
jecxz
int3
stc
test
fmul
xchg
scas
mov
(bad)
cmps
out
iret
leave
test
loope
iret
enter
jecxz
adc
lods
aad
mov
scas
bound
mov
(bad)
stos
xor
leave
cmps
out
lods
iret
ret
retf
jmp
mov
xchg
sbb
push
iret
leave
stos
mov
test
leave
cmps
shl
scas
stc
mov
lods
mov
mov
mov
mov
mov
mov
jmp
iret
mov
xchg
nop
cmps
mov
(bad)
mov
push
mov
mov
shl
iret
leave
stos
fadd
iret
enter
leave
lods
(bad)
fistp
mov
test
cmps
mov
into
mul
int
xchg
cmp
leave
cmps
(bad)
mov
lods
lea
mov
xchg
mov
sub
(bad)
call
iret
leave
xchg
iret
enter
jmp
mov
lods
pop
aad
stos
xor
hlt
aam
fcomip
mov
cmps
in
cmps
in
mov
iret
leave
cmps
cmc
lea
xchg
mov
mov
(bad)
fcomp
(bad)
mov
or
(bad)
iret
leave
lods
mov
mov
test
test
mov
repz
loope
iret
leave
cmps
jmp
test
scas
sub
sub
mov
(bad)
aam
retf
das
stos
in
cmps
into
fmul
lods
iret
leave
mov
xchg
mov
xchg
cmps
mov
into
imul
fmulp
ret
mov
fimul
sbb
test
leave
lods
fnstenv
test
cmps
add
mov
fcom
jecxz
movs
out
lods
iret
ret
fsubr
movs
fabs
pop
fistp
lahf
mov
inc
scas
lods
mov
aam
and
leave
cmps
out
lods
iret
ret
in
loope
iret
leave
cmps
int3
fwait
cdq
(bad)
push
fwait
mov
mov
mov
(bad)
aam
leave
stos
in
lods
(bad)
lods
iret
enter
xchg
lods
(bad)
(bad)
test
xchg
cmps
mov
(bad)
clc
push
jmp
mov
lods
iret
into
test
leave
cmps
shl
cmps
stc
cwde
mov
stos
or
xchg
mov
aam
repz
out
movs
out
lods
iret
ret
jecxz
mov
mov
lods
push
mov
retf
call
sar
push
cli
or
out
lods
iret
iret
test
lods
leave
loopne
lods
iret
ret
jb
mov
xchg
mov
mov
faddp
call
iret
leave
xchg
iret
enter
leave
lods
retf
jmp
mov
lods
push
aad
cmps
mov
mov
hlt
(bad)
fsub
xor
jmp
test
in
stc
cwde
test
scas
push
sub
mov
aam
ffree
loop
in
lods
(bad)
lods
iret
enter
out
lods
sti
(bad)
mov
test
(bad)
(bad)
(bad)
(bad)
and
jl
loope
iret
enter
leave
lods
(bad)
fistp
mov
cdq
xchg
mov
fistp
fmulp
imul
lods
leave
shl
loopne
iret
test
add
imul
fcomp
fdecstp
xchg
(bad)
iret
ret
mov
lods
leave
into
test
dec
lods
fistp
lahf
sub
aam
stos
scas
mov
mov
(bad)
fsub
test
jecxz
(bad)
mov
in
jne
mov
std
repnz
test
es
aam
shl
iret
mov
and
iret
ret
test
xchg
xchg
stos
mov
fcom
(bad)
mov
into
leave
cmps
mov
stos
in
leave
lods
aam
test
mov
lahf
xchg
mov
(bad)
(bad)
int3
fild
ror
retf
(bad)
mov
lahf
xchg
mov
popf
mov
cdq
stos
mov
shl
cmp
repz
dec
mov
xlat
test
enter
inc
loopne
leave
lods
test
jmp
test
xchg
inc
mov
fcomp
leave
loope
into
leave
cmps
adc
mov
test
lods
(bad)
(bad)
mov
dec
cwde
lods
pop
aad
stos
adc
mov
int3
lds
enter
shr
mov
mov
mov
mov
aam
(bad)
leave
cmps
shl
stos
jmp
iret
xchg
loop
fild
lahf
adc
mov
(bad)
fdivp
adc
lods
(bad)
iret
enter
leave
lods
fdivr
test
mov
lahf
xchg
mov
mov
(bad)
div
leave
lods
leave
iret
test
leave
lods
leave
inc
jne
iret
enter
mov
sbb
mov
(bad)
mov
(bad)
leave
jecxz
in
scas
inc
lods
in
enter
leave
lods
fnstsw
ror
cmps
fild
out
mov
sar
fabs
sub
leave
stos
in
mov
cmp
in
lahf
mov
cli
out
aad
test
mov
mov
(bad)
lock
leave
stos
jecxz
test
hlt
lods
iret
iret
sbb
icebp
mov
mov
cmps
mov
into
neg
(bad)
ret
mov
(bad)
mov
(bad)
loope
iret
leave
stos
fisttp
lahf
mov
lods
movs
xchg
inc
mov
std
push
shl
push
iret
leave
stos
enter
enter
aad
xlat
mov
mov
mov
cmps
mov
lods
repz
(bad)
push
loop
fmulp
ret
(bad)
leave
leave
cmps
fnstenv
lods
ror
lahf
mov
jmp
fdivr
pop
jmp
into
test
leave
stos
out
lods
fist
cdq
lods
test
cmps
mov
call
pushf
int3
leave
xlat
iret
enter
leave
mov
and
mov
lahf
fwait
or
xadd
and
leave
stos
enter
enter
ror
lahf
adc
movs
mov
xchg
scas
nop
rcl
hlt
or
test
and
enter
enter
push
test
test
sub
fcomp
out
lods
iret
iret
test
leave
mov
sahf
cwde
mov
icebp
cmp
mov
fcomp
iret
mov
jl
loopne
lods
iret
iret
scas
test
mov
mov
mov
inc
mov
dec
fcomp
leave
xlat
adc
lods
iret
ret
fsubr
mov
mov
fbstp
test
repnz
enter
push
into
lds
out
lods
fist
mov
xchg
push
test
fcomp
fdecstp
mov
iret
fild
fmul
lods
iret
leave
lods
(bad)
fisttp
test
cmps
mov
into
(bad)
lods
(bad)
enter
adc
lds
lock
jmp
mov
pop
fcomp
ffreep
call
iret
leave
call
loopne
lods
iret
ret
sbb
test
mov
lods
cmp
(bad)
rol
loop
mov
loope
into
enter
in
(bad)
cmps
aad
lahf
or
stos
fcom
mov
mov
(bad)
rcr
(bad)
fild
push
into
ret
ret
aam
pop
scas
mov
mov
scas
test
movs
lock
fdivp
jnp
lods
leave
loope
iret
enter
rol
mov
scas
cmps
leave
mov
mov
cwde
fcomp
into
retf
lods
fcmovne
retf
cmps
iret
enter
stc
test
adc
xchg
mov
fbld
test
enter
pop
iret
enter
clc
lods
fistp
cdq
stos
pushf
fsub
mov
mov
(bad)
aam
clc
lods
iret
int
fmulp
lods
lds
shl
lahf
mov
test
rol
fcomp
mov
cmps
mov
out
cmps
in
in
test
movs
xchg
lods
cmp
push
test
fcomp
fdecstp
mov
int3
ret
loop
into
fmul
lods
iret
leave
lods
fcomip
loop
scas
ret
lahf
xchg
cmps
mov
into
mov
shl
leave
lods
retf
ffreep
and
leave
cmps
xlat
in
stc
cdq
div
mov
aad
cmps
test
xor
mov
ret
fcmovne
lods
lds
mov
loopne
lods
iret
ret
mov
stos
xchg
mov
mov
mov
(bad)
aam
retf
das
test
enter
clc
lods
iret
int
idiv
mov
cmps
aad
test
cld
cld
not
adc
mov
(bad)
loope
iret
leave
stos
imul
mov
test
xchg
popf
mov
fcomp
iret
std
cwde
iret
in
jmp
lods
sar
mov
cs
lods
in
cmps
mov
(bad)
lock
into
leave
cmps
out
lods
iret
ret
clc
leave
lods
retf
loope
fistp
scas
xchg
test
fcom
mov
loope
into
leave
cmps
mov
lods
iret
ret
iret
leave
test
lock
adc
shr
fcomp
(bad)
test
leave
push
mov
jecxz
mov
test
mov
add
mov
(bad)
lock
retf
cs
fmul
lods
iret
leave
lods
(bad)
jmp
scas
ret
lahf
xchg
cmps
mov
into
mov
shl
leave
lods
retf
ffreep
and
leave
cmps
fxam
mov
mov
aad
cmps
test
xor
mov
ret
fcmovne
lods
lds
mov
loopne
lods
iret
ret
mov
xchg
push
fwait
mov
mov
mov
(bad)
aam
retf
das
test
enter
stc
lods
iret
int
idiv
mov
cmps
aad
test
cld
cld
not
adc
movs
out
jmp
push
iret
leave
stos
imul
mov
test
xchg
popf
mov
fcomp
iret
std
cwde
iret
in
jmp
lods
sar
mov
int3
aad
lods
out
cmps
mov
(bad)
cmps
icebp
iret
leave
test
cmps
inc
iret
enter
in
enter
lahf
mov
cmc
test
mov
mov
clc
shl
rol
in
jmp
pop
xchg
cmp
lods
test
add
xadd
and
leave
stos
out
lods
iret
into
test
leave
mov
mov
cmps
aad
lods
loope
mov
(bad)
call
iret
leave
lods
iret
enter
aam
fsubrp
ret
leave
sahf
mov
test
mov
(bad)
call
iret
leave
lods
iret
enter
rol
sahf
mov
or
mov
(bad)
fmulp
retf
mov
call
test
leave
lods
fnstenv
inc
mov
test
fcomp
aad
fcomp
(bad)
fadd
enter
retf
aas
test
lahf
xchg
mov
rol
repnz
(bad)
test
leave
pop
mov
test
lods
(bad)
fistp
lahf
nop
scas
cmps
leave
mov
mov
cwde
fcomp
into
leave
lods
stc
leave
mov
leave
lods
aam
test
mov
lahf
xchg
mov
shl
sbb
into
leave
cmps
out
and
iret
leave
stos
mov
jmp
lods
test
(bad)
cmps
mov
jmp
out
lods
iret
into
loope
iret
leave
cmps
div
mov
mov
test
rcl
hlt
jae
cmc
sbb
pushf
mov
lods
iret
int3
loope
iret
leave
cmps
stc
cdq
lahf
push
clc
test
mov
mov
fdivp
addr16
aam
lds
int
enter
jecxz
rcr
lahf
xchg
out
cmps
mov
fist
lods
iret
fcom
mov
lods
retf
retf
jmp
mov
test
movs
xchg
mov
fcomip
jo
faddp
in
in
cmps
in
shl
iret
test
mov
cmp
and
adc
(bad)
hlt
shl
cmp
pushf
retf
leave
loop
enter
leave
mov
fwait
mov
lods
pop
aad
stos
or
(bad)
rol
loop
mov
loope
into
enter
ret
xchg
in
test
test
mov
jge
mov
mov
fcomp
out
lods
iret
ret
jb
ret
xchg
loop
mov
fldcw
lods
mov
mov
mov
mov
fist
iret
leave
test
in
jmp
leave
cmps
hlt
pushf
and
mov
mov
(bad)
vpsllq
fbstp
lods
iret
int3
cmps
mov
leave
cmps
imul
add
lods
test
fcomp
mov
in
in
sub
enter
add
or
(bad)
adc
leave
movs
mov
rcl
cmc
in
jmp
out
lods
iret
into
mov
iret
leave
test
lock
mov
cmps
fist
mov
(bad)
jmp
out
lods
iret
ret
enter
fldcw
or
xchg
mov
mov
fist
out
leave
test
in
jmp
leave
cmps
hlt
pushf
test
test
daa
mov
pushf
clc
or
out
lods
iret
iret
shl
and
scas
cmc
rol
mov
xchg
mov
xchg
fmulp
int
mov
mov
in
cmps
hlt
lahf
mov
lods
pop
aad
stos
scas
mov
aaa
(bad)
aam
mov
iret
leave
test
cmps
mov
enter
mov
fistp
sahf
xchg
scas
mov
(bad)
not
iret
ret
jo
inc
lods
(bad)
lods
int
(bad)
mov
test
cmps
mov
(bad)
int
(bad)
out
stos
out
lods
iret
ret
ret
loop
mov
lods
fistp
fwait
jmp
mov
movs
cwde
addr16
repnz
lock
iret
leave
cmps
adc
xchg
fild
int
mov
lea
in
lods
cmps
mov
into
mov
or
lods
retf
cmps
xchg
lods
iret
ret
mov
pushf
scas
mov
xchg
movs
std
loopne
test
(bad)
fbld
stos
in
cmps
in
xchg
into
mov
iret
leave
test
lock
mov
mov
xchg
cmps
popf
fisub
enter
sbb
into
loope
iret
leave
stos
idiv
mov
scas
inc
(bad)
mov
mov
jge
ror
fisub
fld
lods
iret
rol
lods
enter
jecxz
into
aad
fistp
fadd
lods
stos
cmps
mov
retf
mov
fmulp
rcr
lods
or
mov
fwait
mov
mov
aad
sub
push
fstp
iret
leave
test
leave
shl
enter
xchg
lods
iret
ret
mov
pushf
scas
mov
xchg
movs
std
loopne
test
(bad)
fbld
stos
in
cmps
in
xchg
into
mov
iret
leave
test
lock
mov
mov
mov
fcmovnu
clc
mov
lods
iret
into
test
stos
out
lods
fist
mov
test
test
mov
faddp
mov
leave
lods
lds
into
aam
lods
iret
leave
loope
xchg
ror
test
mov
ffreep
call
iret
leave
loope
enter
leave
lods
retf
cmps
repnz
mov
inc
mov
mov
(bad)
fdiv
enter
jecxz
xchg
iret
xlat
retf
(bad)
in
lahf
xchg
in
mov
stc
fsub
enter
sbb
leave
loope
fistp
lahf
mov
ficom
mov
push
rcr
retf
push
fld
lods
iret
rol
lods
enter
jecxz
int
xchg
mov
stos
out
mov
mov
mov
faddp
leave
lods
iret
leave
mov
retf
lods
mov
leave
lods
into
pushf
out
mov
add
mov
(bad)
hlt
repnz
lods
iret
int
fdiv
test
enter
movs
mov
aad
xchg
fadd
repnz
add
ret
xchg
mov
loopne
iret
enter
ror
pop
fwait
mov
test
cmps
mov
aad
fcmovnbe
in
mov
(bad)
mov
iret
leave
lods
(bad)
int
scas
ret
lahf
xchg
cmps
mov
(bad)
add
xor
lods
leave
retf
mov
retf
shl
daa
test
mov
push
popf
repz
call
iret
leave
loope
enter
leave
lods
retf
lock
mov
lahf
sub
aad
cmps
mov
mov
hlt
and
lods
iret
ret
mov
mov
lods
iret
int
fdiv
lds
lods
movs
shl
mov
(bad)
iret
ret
dec
lods
leave
push
xchg
loopne
lods
iret
ret
mov
sub
pop
mov
xchg
inc
mov
fcomp
leave
loope
iret
leave
cmps
adc
cmps
in
fld
xchg
movs
adc
test
fstp
mov
div
iret
iret
xchg
leave
lods
ror
lods
iret
enter
cdq
lods
cmc
(bad)
mov
test
call
fmulp
leave
lods
iret
leave
scas
xlat
(bad)
add
leave
cmps
imul
mov
ja
in
lods
and
fxch
fucom
scas
iret
leave
lods
fcom
adc
idiv
lea
xchg
lea
nop
stc
inc
pop
xlat
test
leave
lods
leave
loopne
iret
enter
leave
lods
(bad)
mov
xchg
push
test
(bad)
aad
(bad)
(bad)
ret
test
enter
popf
into
enter
enter
test
sub
out
mov
leave
div
iret
iret
rcl
lods
lds
iret
enter
stc
test
xchg
mov
xchg
fcomp
out
xchg
sar
mov
rcr
test
rol
mov
repz
mov
rcr
(bad)
(bad)
and
enter
sub
sbb
ja
shl
fcomp
enter
iret
leave
test
into
stos
out
lods
iret
ret
loop
mov
mov
fild
mov
mov
(bad)
div
leave
lods
leave
loope
iret
enter
leave
lods
retf
in
mov
jmp
mov
lock
fisub
cmps
test
enter
leave
lods
into
loope
fistp
lahf
cmp
aad
test
mov
repnz
int3
fdiv
in
lods
(bad)
int
xchg
enter
enter
mov
test
stos
xchg
mov
ficomp
leave
stos
mov
test
leave
cmps
jmp
cwde
mov
mov
mov
fist
fmulp
test
lods
retf
icebp
mov
iret
leave
shl
lahf
mov
(bad)
mov
mov
xchg
inc
retf
sbb
(bad)
out
stos
mov
lods
iret
int3
in
in
cmps
hlt
ins
mov
xchg
test
std
icebp
xchg
(bad)
aam
in
jmp
lods
retf
iret
jmp
mul
mov
std
fisubr
mov
cmp
fdiv
mov
ins
jb
fisubr
iret
rol
mov
scas
lahf
sub
cmps
mov
cwde
fcomp
into
retf
lods
vpaddusb
leave
lods
fdivr
scas
(bad)
mov
xchg
movs
std
xchg
lods
test
dec
fbld
jmp
iret
lods
iret
enter
leave
mov
mov
rcl
xchg
mov
icebp
(bad)
fsub
iret
stos
out
lods
iret
into
xchg
clc
int
pop
leave
lods
(bad)
mov
test
cmp
aad
iret
int
loop
mov
into
cmps
in
ret
xchg
iret
or
test
mov
mov
fdiv
mov
lods
iret
int3
mov
iret
int
jmp
scas
leave
cmps
aad
mov
xchg
shl
fmulp
iret
scas
mov
xlat
ret
enter
xchg
lods
fist
mov
mov
adc
(bad)
shl
jl
lods
leave
loope
iret
enter
jecxz
into
fldcw
mov
xchg
loopne
mov
mov
(bad)
fmulp
retf
mov
in
jmp
iret
xchg
loop
fild
xchg
stos
leave
aaa
mov
(bad)
fcmovbe
in
jmp
lods
iret
jecxz
cmps
in
scas
enter
pop
neg
xchg
mov
(bad)
fldenv
push
(bad)
fisubr
into
mov
iret
leave
test
xlat
mov
xor
stos
xchg
ins
mov
push
(bad)
iret
xlat
ret
leave
lods
retf
loopne
iret
enter
iret
scas
mov
mov
test
mov
xchg
(bad)
rol
loop
mov
std
mov
(bad)
test
enter
cmps
and
xchg
aad
cmps
movs
mov
shl
add
(bad)
out
lods
iret
iret
xchg
into
stos
(bad)
loopne
lods
iret
iret
test
sbb
xchg
fmul
mov
dec
lods
gs
leave
lods
into
popf
out
mov
aad
mov
movs
cwde
xchg
mov
cmc
int3
int
and
les
leave
stos
add
mov
sbb
mov
mov
sti
lock
iret
leave
cmps
aam
mov
call
test
leave
lods
fstp
cdq
std
mov
cmps
mov
stc
fdiv
iret
in
cmps
in
mov
loopne
lods
iret
iret
xchg
cdq
pop
or
mov
(bad)
sbb
xchg
iret
enter
inc
lods
iret
iret
xlat
rcr
sahf
xchg
test
mov
fcomip
in
test
inc
lods
dec
leave
lods
iret
leave
lods
fistp
cmps
inc
mov
mov
repnz
(bad)
mov
enter
mov
xchg
leave
lods
(bad)
fistp
inc
mov
lods
scas
mov
(bad)
call
iret
leave
lods
iret
enter
xlat
sbb
mov
test
cwde
xchg
push
fcmovnb
(bad)
repz
out
lods
iret
iret
xchg
out
xchg
loop
lods
int3
stc
test
mov
stos
mov
mov
test
out
lods
iret
iret
scas
(bad)
(bad)
or
popf
cmps
mov
mov
test
cmps
mov
shl
fmulp
iret
scas
rcl
sub
leave
cmps
int3
cmps
sbb
and
adc
mov
mov
(bad)
hlt
jmp
ins
jmp
int3
lods
lods
leave
lods
fistp
loopne
test
sahf
add
fcomp
leave
retf
in
jmp
ret
test
lods
fnstcw
mov
test
mov
(bad)
fcmovb
shl
(bad)
jmp
cmps
out
leave
lods
(bad)
fistp
lahf
mov
add
stc
cmc
add
int3
leave
pop
iret
enter
leave
mov
fwait
movs
xor
lahf
xor
mov
cli
clc
mov
lods
iret
int
dec
lods
(bad)
lods
iret
ret
mov
mov
out
xlat
lods
test
rcr
fcomip
add
in
ror
lahf
mov
leave
lods
retf
cmps
sahf
ficomp
lahf
sub
mov
in
(bad)
aam
std
lods
iret
ret
shl
enter
sti
lods
iret
ret
xchg
xchg
mov
xchg
test
mov
cwde
(bad)
aad
retf
cli
lods
iret
ret
test
leave
lods
(bad)
lods
iret
ret
mov
jp
xchg
mov
fyl2x
sbb
aam
mov
iret
leave
test
(bad)
lock
cmps
ficomp
lahf
add
fdivr
mov
fdiv
out
leave
cmps
int
call
lods
lds
fistp
scas
add
cmps
mov
fcom
fdiv
jecxz
lods
leave
fadd
cmps
push
aad
jge
mov
aad
lods
(bad)
cmps
mov
rcr
(bad)
(bad)
in
iret
iret
mov
ror
leave
stos
cmc
xchg
mov
add
cmps
mov
iret
clc
cmps
out
leave
test
cmps
fmulp
enter
loop
(bad)
mov
xchg
cmc
test
cmp
imul
iret
iret
xchg
ret
xchg
loop
aam
int
repz
mov
test
lods
movs
xchg
mov
fdiv
xor
lods
iret
ret
ret
out
stos
mov
lods
fistp
xchg
lods
jbe
loop
(bad)
mov
out
(bad)
fadd
hlt
jmp
in
jmp
leave
test
mov
mov
test
cmps
mov
aad
fcmovnbe
in
mov
enter
pop
mov
xchg
mov
test
mov
(bad)
hlt
aam
imul
lods
lds
lds
jmp
xchg
fcmovnbe
mov
imul
lods
iret
ret
mov
jecxz
mov
xchg
and
stos
std
rep
test
fcom
add
leave
fcmovnu
xchg
mov
into
and
adc
mov
lods
fisttp
xchg
pop
mov
lods
mov
fcmovu
(bad)
add
neg
leave
loope
iret
enter
leave
lods
retf
jmp
mov
mov
lods
xchg
imul
and
fcomp
out
lods
iret
ret
mov
lods
iret
loopne
lods
iret
iret
mov
sahf
enter
lahf
test
stos
out
mov
mov
scas
test
ror
iret
leave
lods
iret
dec
lods
fcomp
mov
lahf
mov
lea
mov
aad
lods
test
sub
rcr
pushf
retf
leave
mov
enter
leave
mov
mov
sub
mov
aam
repz
shl
leave
lods
retf
cmps
test
(bad)
loopne
stos
xchg
add
nop
xor
push
fmul
lods
aam
mov
int3
into
mov
lahf
and
test
xchg
cmp
fcomp
aad
sbb
ret
mov
push
iret
enter
loope
fistp
or
lods
test
fcom
imul
fmulp
fsubr
fldcw
std
push
stos
mov
mov
test
cmps
mov
shl
fmulp
iret
test
lods
vpsrld
xlat
test
and
mov
mov
shl
rcl
lock
leave
cmps
mov
fmulp
lods
(bad)
test
lods
aad
mov
pop
movs
cmp
lods
test
(bad)
in
test
out
lods
iret
iret
test
lods
leave
loopne
lods
iret
ret
jb
mov
mov
cmps
aad
lods
push
pop
mov
faddp
call
iret
leave
test
mov
shl
push
fistp
lahf
xchg
scas
fadd
sbb
fsubr
mov
iret
leave
test
loopne
iret
enter
leave
lods
aad
sahf
stos
jnp
dec
cwde
lods
pop
aad
stos
stos
mov
mov
(bad)
aam
mov
iret
leave
test
loopne
iret
enter
leave
lods
aad
movs
xchg
lods
xor
cmp
into
xchg
cmc
aam
lds
ret
xchg
fcmovne
xchg
movs
inc
jmp
mov
mov
and
mov
fsub
(bad)
fsubr
ret
enter
mov
je
test
in
lods
test
fcom
imul
fmulp
shl
jnp
mov
xchg
fwait
mov
jbe
xchg
push
test
fcomp
(bad)
clc
push
out
sbb
into
mov
(bad)
sar
mov
test
cmps
mov
aad
fmul
dec
cli
lods
iret
int
out
lods
into
fmul
lods
iret
leave
mov
leave
ret
lahf
xchg
cmps
mov
into
idiv
(bad)
ret
mov
ret
mov
in
in
cmps
hlt
imul
(bad)
cmps
aad
xchg
ret
mov
fidiv
loop
xchg
mov
iret
enter
enter
movs
cdq
lods
xchg
sahf
scas
mov
in
cmps
mov
hlt
fst
cmc
and
stos
aam
mov
into
rol
cmc
lods
fist
mov
cli
lods
test
repz
fcomp
retf
loop
mov
lods
iret
int3
ret
ins
leave
leave
stos
in
test
sahf
mov
test
cmps
mov
(bad)
lock
leave
cmps
out
enter
mov
ret
lock
call
mov
movs
cwde
xchg
mov
lock
leave
stos
jmp
stos
in
leave
lods
test
push
fldenv
mov
test
mov
rcr
std
fcomp
iret
leave
lods
iret
leave
test
cdq
lods
iret
iret
mov
mov
aad
xchg
test
mov
xchg
(bad)
cmc
clc
repz
cmp
stos
mov
cmps
mov
lahf
mov
test
mov
mov
lods
ret
(bad)
iret
ret
ror
lods
leave
loop
aad
inc
lods
iret
iret
xchg
mov
xchg
cmps
cmps
lds
mov
fcomp
iret
retf
lods
iret
leave
mov
enter
leave
lods
fbld
lahf
xchg
shl
mov
(bad)
fdivp
mov
lods
mov
lods
iret
int3
test
enter
jmp
mov
rcl
mov
fcomp
leave
loop
ror
dec
enter
adc
mov
jne
aad
stos
and
fcomip
fcomp
iret
xchg
lods
iret
fsubr
enter
sub
sar
lods
test
xchg
mov
(bad)
test
cmps
in
cmps
in
lods
fdivr
int3
lods
test
lods
ffreep
mov
cld
out
aad
lods
fsubr
mov
out
clc
fcmove
push
mov
xlat
in
jmp
test
test
mov
mov
fnop
fsub
pop
lods
iret
iret
xchg
jecxz
(bad)
in
lods
fisttp
xchg
stos
mov
shl
(bad)
scas
nop
fmulp
enter
mov
fbstp
mov
fild
adc
rol
lods
test
(bad)
fcmovnb
inc
mov
mov
cmps
int
push
fsub
ficom
cwde
sub
mov
xchg
pop
aam
sbb
repz
leave
in
iret
enter
leave
mov
xlat
mov
test
movs
test
(bad)
(bad)
repz
scas
xlat
push
aad
enter
test
scas
or
rcl
xchg
pop
shl
xor
call
iret
leave
into
iret
enter
push
aad
leave
lods
fsubrp
ror
adc
aaa
fisttp
hlt
idiv
fcmovb
push
mov
iret
leave
lods
mov
aad
aad
scas
mov
mov
cmps
mov
adc
repz
loop
iret
leave
mov
enter
leave
lods
into
popf
sahf
adc
int
xchg
mov
into
inc
stos
jae
iret
enter
mov
shl
mov
leave
lods
into
mov
popf
cmps
call
lods
test
fcomp
rcl
(bad)
(bad)
loope
iret
leave
stos
in
xchg
ret
loop
(bad)
fisttp
xchg
stos
mov
mov
loop
mov
fidiv
leave
lods
fsub
cmp
int
xchg
fnstsw
mov
(bad)
fild
mov
leave
xlat
inc
enter
into
test
lods
fnstenv
mov
test
cmps
mov
into
fstp
(bad)
mov
mov
fidiv
test
mov
mov
leave
ficom
leave
lods
into
imul
jecxz
in
cmps
hlt
jle
mov
cdq
aad
lods
int3
cmps
mov
rcr
lock
jmp
int
xlat
shl
nop
mov
mov
loope
mov
fst
fmulp
enter
sbb
enter
loop
vaesdeclast
xchg
stos
mov
ffreep
repz
clc
mov
lods
iret
int
xlat
shl
rol
mov
xlat
xchg
scas
add
xchg
or
shl
sbb
xchg
leave
mov
enter
leave
lods
into
pushf
lea
sbb
mov
mov
fcompp
(bad)
loop
mov
fild
leave
imul
les
lods
push
aad
stos
sub
out
fmulp
scas
lods
iret
fsubr
enter
in
stc
loope
mov
mov
cmps
test
leave
fcom
leave
lods
ins
into
mov
jo
lods
leave
jecxz
hlt
dec
and
mov
mov
mov
fadd
repz
xchg
lods
iret
int3
xchg
enter
stc
test
pop
mov
xchg
mov
mov
mov
(bad)
aam
mov
loopne
iret
enter
call
mov
outs
fisubr
mov
push
(bad)
shl
retf
fisub
enter
xor
scas
lea
aad
scas
mov
fcomp
aad
cmc
shr
mov
aad
stos
jmp
cmp
enter
fwait
mov
cdq
jae
stos
xchg
inc
popf
fbstp
mov
mov
(bad)
enter
test
fwait
movs
sbb
shr
leave
fnsave
rol
xchg
leave
cmps
mov
out
mov
aad
test
cmps
mov
(bad)
retf
(bad)
cmp
leave
sar
cmps
out
lahf
add
je
cmc
lods
test
(bad)
mov
iret
ret
movs
fmulp
jle
sub
(bad)
mov
mov
retf
fdivr
in
mov
fimul
xchg
into
leave
cmps
(bad)
fsubr
cmps
sub
mov
out
mov
test
test
ror
(bad)
mov
(bad)
ret
ret
movs
faddp
mov
xchg
fisub
mov
out
scas
(bad)
mov
leave
or
fsub
fldenv
fisub
xchg
sti
out
scas
les
fninit
retf
ror
(bad)
rcr
out
jmp
fldcw
leave
test
lock
mov
(bad)
mov
hlt
fcomp
into
mov
enter
leave
lods
ror
fistp
mov
test
aad
lods
stos
cmps
mov
fbld
lods
iret
leave
movs
iret
enter
leave
lods
loope
dec
fistp
mov
scas
mov
mov
mov
lods
xchg
(bad)
ret
mov
rol
or
cmps
(bad)
movs
stc
cwde
movs
fwait
mov
lods
dec
(bad)
idiv
retf
ret
cmc
fsubr
rol
push
(bad)
cmps
cwde
lods
iret
ret
xchg
mov
xchg
xchg
mov
(bad)
repnz
mov
jl
enter
(bad)
lods
iret
ret
ret
lahf
sahf
mov
xchg
mov
mov
mov
(bad)
fmulp
retf
mov
cmps
dec
enter
loop
fistp
xchg
stos
mov
icebp
sahf
(bad)
aam
out
xchg
leave
scas
dec
lods
test
leave
lods
iret
leave
lods
fisttp
mov
cmps
fist
imul
test
leave
lods
leave
sbb
mov
lods
aad
outs
mov
cmps
shr
test
fcomp
aad
aas
fmulp
iret
mov
xor
lods
leave
test
jmp
sub
push
mov
(bad)
fdivp
iret
retf
leave
mov
enter
xlat
mov
retf
test
dec
lods
stos
xchg
mov
(bad)
fcomp
iret
loope
iret
leave
stos
out
inc
cmps
inc
sub
mov
push
mov
stc
lods
test
fcomp
div
fcomp
leave
sbb
mov
leave
stos
jne
fld
lods
test
shr
xor
scas
leave
test
lods
iret
into
loope
iret
leave
stos
cmc
pushf
mov
xchg
stos
mov
xchg
mov
fcom
in
xchg
leave
scas
dec
lods
popf
enter
leave
lods
fisttp
mov
cmps
fist
imul
test
leave
lods
leave
sbb
mov
lods
aad
outs
mov
cmps
xlat
xchg
jmp
cmps
mov
pop
fcomp
fdecstp
cs
iret
test
leave
lods
leave
loopne
iret
enter
daa
lods
fistp
scas
mov
test
rol
(bad)
(bad)
fstp
xlat
sbb
jne
scas
scas
leave
stos
scas
retf
in
shr
scas
mov
push
lods
stos
xchg
mov
mov
(bad)
(bad)
fmulp
retf
mov
in
jmp
xchg
stos
scas
leave
mov
fcomp
lea
dec
js
mov
mov
jecxz
in
mov
and
lods
int3
stc
cmps
fbstp
lahf
xchg
mov
(bad)
stc
(bad)
(bad)
scas
imul
scas
retf
leave
test
rol
jmp
mov
scas
jnp
xchg
dec
(bad)
lea
call
fmulp
leave
lods
iret
leave
scas
fcmovbe
or
leave
cmps
cmc
mov
mov
test
cmps
mov
aad
aas
fmulp
iret
test
leave
lods
leave
loopne
iret
enter
leave
lods
(bad)
mov
cmps
fist
xchg
push
fcomp
fxtract
fcomp
iret
retf
leave
mov
enter
xlat
mov
cwde
scas
mov
scas
cmp
lods
stos
xchg
mov
(bad)
fcomp
iret
sbb
mov
leave
stos
jo
fld
lods
test
fcomp
neg
dec
iret
leave
stos
out
lods
iret
into
loope
iret
leave
stos
div
mov
(bad)
mov
mov
(bad)
fmulp
retf
mov
loopne
iret
enter
loop
fistp
xchg
jns
mov
(bad)
shl
sub
lods
leave
sbb
mov
lods
(bad)
fistp
lahf
test
add
(bad)
(bad)
mov
lods
(bad)
iret
enter
leave
lods
int
jmp
lahf
adc
mov
mov
(bad)
mul
leave
lods
leave
loope
iret
enter
leave
lods
leave
loope
fistp
lahf
sub
cmps
mov
(bad)
(bad)
retf
loop
mov
mov
in
jmp
mov
outs
cmp
lods
mov
(bad)
fbstp
into
leave
cmps
pop
jmp
jmp
mov
and
mov
mov
(bad)
sub
leave
(bad)
in
and
repz
leave
lods
stc
cdq
xchg
stos
inc
mov
or
ret
mov
retf
iret
ret
fcomp
fidivr
and
sbb
test
leave
test
ror
loopne
loopne
shl
cdq
mov
push
push
mov
test
xor
mov
lods
iret
int
repnz
lahf
xchg
mov
cmp
mov
mov
lods
mov
out
mov
sub
mov
stc
in
out
in
jecxz
loopne
mov
stos
mov
shl
scas
and
and
loop
ret
loop
ret
fmul
loop
(bad)
into
mov
cwde
xchg
call
and
cmp
nop
mov
stos
movs
aam
test
xchg
fsubr
aad
(bad)
out
lods
les
test
(bad)
stc
in
popa
into
int
loop
leave
fsubr
fist
lds
in
mov
(bad)
lods
mov
int
fxch
fld
enter
enter
(bad)
fistp
lahf
mov
out
mov
xchg
pop
fcomp
fpatan
fxtract
aad
loopne
leave
lods
xlat
repnz
enter
fimul
loopne
loopne
shl
mov
push
ins
mov
lods
retf
xor
shr
mov
mov
out
jecxz
loopne
cmp
cmps
lea
mov
fnstsw
mov
lea
pop
test
leave
stos
scas
leave
mov
xchg
call
(bad)
xchg
int3
dec
(bad)
cmc
int3
jmp
out
jecxz
(bad)
in
mov
mov
(bad)
fsub
mov
xchg
test
ret
fsubr
rol
lods
shl
sbb
out
jecxz
enter
int
fsubr
fidivr
fmulp
mov
rcl
out
scas
mov
(bad)
(bad)
mov
xchg
leave
scas
inc
lods
fcmove
leave
lods
iret
leave
lods
fistp
xchg
test
(bad)
mov
loope
fcomp
hlt
es
iret
retf
leave
mov
enter
leave
lods
int
mov
xchg
add
mov
push
ins
fcomp
leave
jecxz
in
mov
es
cmp
lods
int3
stc
cmps
fist
lahf
xchg
scas
adc
clc
repz
ficomp
lods
mov
je
fistp
cdq
popf
test
repz
test
cwde
mov
(bad)
leave
loop
mov
fdivp
ftst
xchg
jmp
enter
test
es
mov
jecxz
mov
retf
int3
ret
fcomp
fdivrp
lds
xor
test
retf
les
ror
(bad)
lea
xchg
xchg
js
mov
(bad)
shl
into
fnstsw
ror
retf
in
in
out
jecxz
mov
leave
out
mov
retf
fmulp
jl
leave
lods
into
loopne
iret
enter
ror
dec
test
mov
fcomp
iret
fsubr
add
aaa
scas
retf
retf
out
out
out
jecxz
mov
(bad)
aad
test
mov
leave
(bad)
jl
enter
(bad)
lods
iret
ret
ret
lahf
sahf
mov
ins
aam
xchg
int3
movs
fcomp
mov
pop
mov
in
ror
leave
test
out
in
out
add
mov
mov
lods
lods
mov
(bad)
fisub
(bad)
xchg
sub
enter
leave
lods
fdivr
stos
fbstp
mov
mov
xchg
mov
mov
xchg
lods
(bad)
stc
pop
(bad)
(bad)
in
jmp
xchg
dec
enter
loop
aam
pusha
xchg
sbb
lods
test
mov
fstp
std
leave
xchg
aaa
cmps
into
leave
cmp
in
scas
int3
pop
mov
xchg
cwde
mov
xlat
mov
cdq
inc
fcmovnu
fild
hlt
xor
lods
iret
into
mov
fmulp
mov
mov
les
mov
leave
cmp
fisubr
fxch
stos
jmp
popf
frstor
test
cdq
lds
daa
repz
call
iret
leave
ret
mov
retf
in
mov
xchg
scas
mov
scas
mov
fsub
mov
rcr
fmulp
rol
fild
leave
xlat
sbb
test
shl
cmps
mov
fcomip
adc
iret
ret
mov
stos
mov
imul
xchg
out
rol
pop
or
xchg
std
(bad)
scas
int3
mov
mov
faddp
aad
xchg
mov
fxch
mov
xchg
xchg
cmps
mov
loope
test
cmps
mov
ret
repz
xchg
fisubr
cmps
xchg
mov
mov
sub
mov
int3
(bad)
imul
xchg
stos
in
sub
enter
add
mov
ffree
lock
clc
pop
(bad)
fadd
leave
test
rol
enter
mov
test
stos
loop
test
fcmovnu
mov
int
(bad)
sbb
iret
enter
leave
lods
lds
lods
int3
xchg
not
mov
aad
int3
sub
mov
repnz
aaa
lods
fadd
mov
xchg
leave
lods
retf
jmp
jmp
fild
scas
inc
fldl2e
shl
mov
test
xchg
enter
xchg
lods
iret
int
mov
or
lods
test
fcomp
(bad)
pop
test
leave
test
xchg
lods
iret
int3
ret
int
leave
stos
out
mov
fistp
stc
jecxz
shl
stos
mov
shl
cld
cmps
test
leave
test
retf
lods
iret
into
mov
leave
lods
test
out
out
in
loopne
out
mov
(bad)
loope
(bad)
iret
shl
dec
test
rol
enter
test
mov
aad
fsubrp
cmps
mov
(bad)
aam
mov
lods
lds
iret
enter
leave
lods
retf
in
mov
or
stos
xor
rcr
fcomp
aam
pop
mov
sub
ret
mov
mov
dec
fmul
jmp
ss
test
leave
test
ret
pusha
mov
loopne
ret
mov
retf
int3
(bad)
mov
cmp
or
test
mov
out
dec
shr
mov
cmp
mov
(bad)
jne
lods
iret
dec
icebp
iret
enter
mov
iret
leave
test
loope
mov
cmps
aad
xchg
fxch
ror
(bad)
enter
faddp
mov
(bad)
shl
in
fisttp
xchg
xchg
scas
test
mov
mov
mov
aaa
lea
leave
lods
fcomi
mov
out
leave
cmp
mov
sbb
int
fcomip
fcmovne
enter
leave
lods
retf
fcomp
mov
rcr
fsubr
leave
cmc
enter
leave
test
fnstcw
(bad)
xchg
or
test
test
leave
int3
inc
jmp
iret
enter
lods
iret
leave
mov
iret
leave
test
lea
cdq
fcmovb
pop
fidivr
test
enter
(bad)
mov
add
xchg
enter
retf
cdq
cdq
test
movs
aam
data16
mov
retf
int3
rcr
fnstsw
mov
(bad)
push
cld
not
xchg
enter
cmps
stos
ficomp
fcomp
mov
ror
ror
into
scas
fdivr
test
mov
std
call
lea
push
pop
scas
stos
fcomp
fistp
mov
fnstcw
dec
xchg
mov
mov
aad
lods
mov
test
mov
iret
iret
fsubr
push
xor
mov
fdiv
into
mov
mov
cmps
aad
mov
mov
into
and
mov
iret
leave
test
dec
and
enter
aaa
lods
icebp
test
cwde
xchg
scas
mov
(bad)
mov
enter
iret
aad
iret
scas
sbb
rcr
mov
sar
push
xchg
xchg
mov
mov
ja
test
(bad)
(bad)
rcl
add
fdivr
mov
nop
adc
(bad)
mov
mov
dec
rcl
into
scas
fidiv
enter
aad
mov
rcl
xor
fldlg2
lock
ret
inc
jmp
mov
rcr
mov
sbb
xchg
inc
mov
mov
(bad)
lods
mov
faddp
ret
xchg
loope
into
enter
fistp
enter
(bad)
mov
mov
(bad)
movs
fninit
retf
ret
clc
inc
push
shr
hlt
out
mov
mov
mov
shl
test
popf
fbstp
sbb
aam
iret
fsub
in
leave
loope
into
enter
nop
lods
iret
int
f2xm1
test
test
cmps
mov
fucomip
les
cmps
stos
into
enter
xchg
lods
iret
int
cli
pop
(bad)
mov
cmps
sar
test
lock
(bad)
rol
fsubrp
xchg
leave
in
sti
enter
leave
lods
sub
mov
test
cmps
mov
(bad)
fcomp
iret
imul
lods
(bad)
enter
leave
lods
fistp
xchg
stos
mov
mov
ret
cmc
shr
out
scas
aad
mov
enter
ret
mov
jecxz
mov
imul
xchg
pop
stos
xchg
mov
mov
(bad)
(bad)
fmulp
retf
mov
in
jmp
int
jmp
mov
xchg
stos
mov
xchg
popf
inc
neg
(bad)
leave
retf
mov
in
jmp
int
pop
retf
mov
mov
lods
icebp
out
xchg
leave
into
xchg
lahf
nop
add
hlt
aas
(bad)
cmc
and
pushf
(bad)
iret
enter
leave
lods
int
mov
mov
movs
into
movs
sbb
(bad)
dec
fcmovb
(bad)
in
jmp
test
pop
xlat
into
scas
retf
xlat
mov
adc
xchg
out
xlat
(bad)
into
test
mov
in
mov
add
mov
(bad)
fisttp
xchg
mov
into
shl
(bad)
fstp
cli
popf
in
cmps
in
cmps
in
retf
xlat
lods
leave
lods
fcomi
ror
add
mov
neg
(bad)
leave
retf
xlat
lods
leave
lods
retf
fisubr
mov
lods
fistp
lahf
add
cmps
mov
(bad)
lock
leave
stos
leave
into
hlt
(bad)
std
adc
lods
fdivr
scas
fild
lahf
xchg
mov
fcmovne
enter
out
stos
jecxz
xchg
ret
mov
lods
iret
int
cs
out
mov
clc
mov
fidivr
fcomp
iret
ficomp
lods
mov
fild
mov
aad
lods
mov
(bad)
hlt
fprem
repz
loop
(bad)
mov
iret
enter
retf
sahf
mov
lea
lea
mov
rcr
(bad)
and
fistp
out
enter
lahf
mov
or
mov
xchg
fcomp
(bad)
call
iret
leave
lods
iret
enter
mov
add
pushf
test
repz
xchg
ret
mov
(bad)
call
iret
leave
mov
loopne
lods
iret
ret
mov
and
sahf
mov
cdq
xchg
fcomp
cmc
sub
jecxz
mov
retf
cmps
in
iret
scas
loopne
stos
leave
scas
lea
xlat
mov
mov
(bad)
fmulp
retf
leave
mov
enter
fidivr
in
test
dec
lods
mov
fcomp
fild
xlat
stos
leave
lods
retf
fiadd
cmps
rol
rcl
ret
(bad)
mov
push
shl
xor
repz
in
and
leave
lods
int
mov
retf
fistp
adc
lds
leave
fcomip
sbb
retf
iret
leave
scas
mov
lods
iret
int3
fisubr
(bad)
xlat
cwde
or
scas
ror
mov
(bad)
iret
rcl
leave
lods
int
stos
mov
lods
iret
int3
sar
mov
test
mov
xchg
stos
leave
ror
xchg
(bad)
faddp
movs
std
or
fxch
mov
call
loopne
aad
scas
mov
fcomp
cmc
int
fcmove
test
iret
leave
fmulp
enter
lods
lods
iret
int
repz
stos
xchg
adc
mov
mov
int
cmc
rcl
in
cmps
in
mov
inc
out
lods
iret
retf
xlat
mov
mov
or
fst
mov
(bad)
(bad)
inc
out
lods
iret
retf
xlat
cmps
enter
lds
mov
dec
mov
mov
fild
xlat
stos
leave
lods
retf
fld
cmps
aam
int3
mov
mov
mov
imul
ds
xor
in
stos
mov
enter
leave
lods
retf
fisubr
mov
aad
mov
stos
(bad)
icebp
fcmove
fninit
cmc
stos
mov
enter
mov
fidiv
mov
ret
cmps
mov
(bad)
fmul
xchg
mov
iret
leave
test
mov
iret
enter
iret
scas
not
xchg
(bad)
mov
xchg
sub
(bad)
int
fmul
mov
iret
enter
mov
iret
leave
test
(bad)
int
mov
aad
lods
test
fmul
(bad)
fsub
iret
leave
lods
jecxz
lods
iret
sti
lods
iret
enter
(bad)
lods
fistp
in
test
cmps
mov
movs
pop
fcomp
retf
(bad)
lods
mov
lods
iret
int3
test
leave
leave
stos
in
test
sahf
mov
(bad)
and
mov
mov
ror
leavew
lods
leave
jecxz
dec
lods
test
leave
lods
mov
mov
nop
test
xchg
lea
movs
retf
fcomp
retf
(bad)
into
jb
in
loope
iret
leave
cmps
leave
mov
lods
mov
mov
mov
inc
fcomp
fdecstp
imul
iret
test
mov
jecxz
mov
jecxz
shl
or
cmps
aad
test
cmps
mov
(bad)
mov
iret
leave
lods
iret
fisubr
leave
lods
fimul
xchg
stos
mov
int
fcomp
faddp
cmc
in
jmp
in
enter
leave
lods
into
fild
adc
xlat
xchg
test
(bad)
cmps
out
fcomp
(bad)
cmps
fmulp
leave
cmps
jecxz
xchg
(bad)
int
push
xchg
mov
xchg
test
mov
(bad)
ror
(bad)
rcl
leave
lods
(bad)
into
enter
rol
lahf
xchg
test
(bad)
(bad)
mov
into
leave
stos
fmulp
movs
enter
enter
aaa
stos
jae
mov
or
mov
inc
mov
stos
je
leave
stos
mov
stos
(bad)
iret
add
leave
stos
lods
pop
mov
test
or
(bad)
fidiv
iret
test
lods
leave
loopne
lods
iret
iret
ret
dec
sahf
mov
test
cmps
mov
(bad)
(bad)
repz
xchg
lods
iret
int3
xchg
enter
stc
scas
fist
mov
xchg
movs
ret
and
mov
fmul
inc
mov
lods
iret
enter
lods
into
fucom
movs
jmp
mov
jo
std
and
test
(bad)
shl
stos
fcomp
(bad)
in
mov
fmulp
lods
leave
pop
mov
mov
mov
cmp
mov
xchg
imul
and
fcomp
out
lods
iret
iret
test
leave
shl
leave
lods
fcomi
fimul
mov
clc
mov
mov
(bad)
fsub
enter
lods
iret
loopne
ror
lods
fimul
xchg
xlat
in
mov
les
iret
leave
lods
shl
mov
into
mov
iret
enter
mov
mov
rcl
add
cmps
mov
mov
fdivp
vpshufhw
mov
enter
leave
lods
into
loope
mov
mov
int
test
(bad)
(bad)
fdivr
out
lods
iret
iret
xchg
jecxz
fdivr
shr
mov
mov
sub
mov
sar
fcomp
retf
push
leave
loope
iret
enter
loop
popf
mov
fistp
mov
mul
cmps
mov
(bad)
call
iret
leave
aam
enter
bound
mov
movs
push
cld
outs
mov
pop
mov
enter
pop
xlat
test
leave
lods
leave
push
xlat
call
test
lahf
mov
sub
cmps
mov
dec
push
iret
leave
stos
ins
into
mov
mov
jl
loope
fistp
movs
test
or
jecxz
(bad)
fsubrp
iret
mov
(bad)
test
enter
iret
mov
xchg
lods
pusha
xchg
mov
xchg
imul
mov
loopne
shl
push
iret
enter
ror
jp
xchg
scas
(bad)
outs
cmps
xchg
daa
(bad)
fdivr
shl
leave
into
leave
lods
jmp
leave
lods
into
ficom
lods
or
test
mov
jmp
icebp
push
shl
push
iret
leave
stos
ins
into
mov
out
loopne
shl
push
fistp
mov
xchg
push
test
ret
hlt
or
out
lods
iret
iret
push
leave
ror
lods
fistp
outs
lods
push
mov
mov
and
push
(bad)
div
leave
lods
leave
imul
xlat
test
leave
lods
fnstcw
jno
push
mov
mov
stc
inc
hlt
or
out
lods
iret
iret
push
leave
xlat
cmps
out
dec
jecxz
shl
push
fistp
xchg
cmps
or
mov
sar
popa
hlt
pop
xlat
test
leave
lods
leave
push
rol
jmp
mul
mov
jns
jge
mov
mov
enter
jl
loope
iret
enter
(bad)
mov
and
lahf
loopne
jbe
xchg
inc
fcomp
fnstcw
fsubr
frstpm(287
sbb
into
imul
pop
xchg
mov
add
mov
imul
mov
(bad)
test
enter
iret
sub
lahf
mov
js
sub
(bad)
test
es
loopne
xor
push
dec
movs
lods
iret
int3
xchg
pop
ss
(bad)
and
mov
pop
aad
lods
shl
ret
(bad)
fisubr
rol
mov
lods
iret
int
push
pop
aam
test
(bad)
clc
cmps
mov
leave
test
int3
les
mov
mov
cwde
(bad)
scas
inc
mov
test
mov
(bad)
push
imul
mov
fdivp
mov
mov
loope
aad
sub
fbld
retf
icebp
fmulp
retf
mov
sbb
leave
rol
lahf
mov
test
lods
mov
shl
iret
leave
stos
mov
lds
mov
mov
aad
lods
shl
icebp
or
fcom
aad
mov
iret
mov
ret
fsubrp
mov
adc
pushf
rcr
(bad)
stos
cmps
add
push
retf
(bad)
sub
int
sar
clc
pop
enter
pushf
mov
xchg
stos
mov
mov
ret
jmp
lods
iret
int3
xchg
enter
stc
scas
(bad)
mov
xchg
movs
scas
shr
mov
fdivp
push
fcomp
(bad)
(bad)
mov
iret
enter
inc
lods
fist
icebp
xchg
test
(bad)
add
shl
xor
mov
retf
ret
xor
test
lods
aad
mov
test
mov
ffreep
call
iret
leave
mov
enter
cmps
lods
iret
int
repnz
scas
lea
(bad)
(bad)
mov
pop
movs
(bad)
fcomp
fdiv
and
xlat
mov
cmps
and
leave
cmps
(bad)
lock
cmps
fist
ret
(bad)
fstp
neg
and
enter
retf
xlat
mov
mov
jmp
mov
aad
repnz
enter
scas
iret
(bad)
leave
lods
fild
xchg
stos
fst
mov
xlat
(bad)
(bad)
inc
lods
iret
ret
xchg
ret
xchg
retf
iret
leave
test
lock
mov
or
xchg
xor
(bad)
add
hlt
iret
enter
scas
iret
(bad)
leave
lods
fild
xchg
stos
fst
mov
xlat
(bad)
xlat
out
lods
iret
ret
xchg
lds
iret
ret
mov
lea
xchg
mov
repz
cmc
xor
in
movs
(bad)
mov
enter
fld
adc
mov
lods
mov
xchg
cs
aad
mov
iret
ret
test
lods
(bad)
mov
fld
sub
mov
mov
push
(bad)
aam
fsub
enter
scas
iret
(bad)
leave
lods
fistp
xchg
stos
mov
icebp
mov
out
xchg
leave
scas
inc
lods
fcmove
leave
lods
iret
leave
lods
fistp
xchg
test
(bad)
mov
(bad)
mov
fcomp
iret
ficomp
lods
fmul
leave
mov
in
mov
jbe
xchg
push
test
fcomp
aad
nop
repnz
xlat
test
leave
lods
leave
loopne
iret
enter
mov
test
mov
xor
fcomp
faddp
cmc
int
iret
mov
enter
cmps
(bad)
into
leave
cmps
stc
mov
and
(bad)
iret
mov
(bad)
call
iret
leave
lods
iret
enter
rol
lahf
mov
test
movs
mov
fild
test
xchg
out
leave
lods
jmp
adc
sub
jno
fcom
(bad)
fmul
leave
mov
cmc
(bad)
retf
lods
iret
out
shr
out
sahf
xchg
lods
aad
mov
(bad)
fidivr
mov
mov
call
lahf
xchg
test
fcomp
paddb
fmulp
loope
iret
leave
cmps
fsub
sar
or
cmps
fbld
mov
scas
(bad)
fimul
std
iret
leave
lods
out
lods
iret
ret
movs
enter
fcmovu
lahf
mov
test
mov
mov
(bad)
ficomp
cli
lods
iret
enter
lods
(bad)
ror
cmps
mov
push
mov
stc
lods
test
(bad)
aad
scas
fmulp
int
or
into
loopne
iret
enter
movs
lods
fist
fwait
push
enter
test
cmps
mov
(bad)
shl
sbb
mov
lods
(bad)
mov
mov
test
cmps
xchg
(bad)
mov
mov
into
leave
cmps
mov
lods
iret
int3
jl
enter
(bad)
lods
fist
sahf
xchg
lods
jbe
mov
(bad)
aam
(bad)
enter
fcmove
enter
leave
lods
fidiv
or
xlat
sar
(bad)
fdecstp
mov
lods
(bad)
mov
mov
iret
leave
test
and
xchg
les
(bad)
fimul
in
iret
leave
lods
out
lods
iret
ret
cmps
movs
lods
iret
ret
shr
call
lods
mov
(bad)
aad
scas
fmulp
int
xchg
lods
into
loopne
iret
enter
cmps
rcr
xor
test
mov
mov
mov
faddp
mov
iret
leave
test
imul
leave
cmps
ror
clc
repz
aad
jge
cmps
mov
(bad)
(bad)
retf
mov
xchg
lods
iret
int3
icebp
bound
ss
pop
in
mov
jp
push
into
lods
test
daa
es
stos
fcomp
retf
icebp
jne
ss
iret
enter
retf
leave
lods
(bad)
mov
test
mov
(bad)
(bad)
mov
stos
int
jnp
enter
mov
cmps
test
aad
mov
stos
cwde
xchg
mov
or
fcomp
retf
loop
dec
mov
iret
int3
xchg
enter
stc
stos
fild
xchg
mov
ret
(bad)
repz
out
lods
iret
iret
xchg
jecxz
jmp
stc
scas
fisttp
lahf
xchg
mov
retf
fisub
xchg
loop
iret
enter
iret
lods
sahf
int3
lods
(bad)
mov
test
mov
xchg
xor
(bad)
cmc
fmul
vmaxss
scas
mov
mov
fistp
sahf
xchg
lods
mov
rcr
iret
shl
scas
enter
mov
int3
ffreep
mov
xchg
cmc
stc
test
mov
mov
test
iret
ret
ret
mov
test
jmp
adc
pushf
rcr
mov
xchg
mov
aad
sub
mov
cmps
fxch
enter
lds
mov
shr
xchg
scas
fcomp
aam
repz
out
xchg
fisubr
enter
int
cmps
sahf
mov
sti
aad
mov
mov
enter
ret
lods
iret
leave
test
enter
leave
lods
mov
mov
test
mov
mov
neg
fmulp
mov
enter
leave
lods
push
enter
mov
test
mov
mov
jne
fmulp
sub
enter
les
lahf
mov
stc
test
mov
mov
fcompp
mov
enter
test
enter
leave
lods
retf
(bad)
test
call
hlt
test
mov
mov
(bad)
mov
(bad)
test
int
mov
inc
sbb
sti
in
xchg
lods
cmp
mov
fadd
mov
(bad)
(bad)
int
lods
mov
lods
iret
int3
(bad)
test
int3
cmps
mov
mov
lds
fcomp
mov
(bad)
test
int3
ss
cmps
stc
iret
leave
cmps
mov
mov
test
mov
inc
cmps
in
fcomp
into
mov
mov
icebp
sub
in
mov
cmp
lods
test
fcomp
mov
(bad)
(bad)
int
lods
mov
lods
iret
int3
(bad)
test
int3
cmps
ror
xchg
test
fcomp
mov
(bad)
test
int3
ss
lods
iret
leave
mov
mov
mov
test
mov
inc
cmps
dec
fcomp
into
mov
mov
icebp
movs
int
lods
mov
mov
hlt
lods
test
fcomp
mov
(bad)
(bad)
into
leave
lods
mov
lods
iret
int3
(bad)
test
int3
cmps
mov
test
lods
xchg
fldenv
(bad)
test
int3
ss
cmps
xlat
into
leave
cmps
out
mov
test
cmp
add
fcomp
scas
arpl
fmulp
cmps
cs
leave
cmps
neg
iret
enter
leave
test
fwait
cdq
mov
cld
and
lods
test
fcom
out
(bad)
iret
mov
iret
leave
test
int3
mov
iret
leave
lods
scas
and
xchg
test
fcomp
rcr
leave
fist
sahf
iret
leave
lods
mov
rol
mov
mov
cmps
fild
stos
mov
xor
(bad)
test
int3
ss
inc
sbb
xchg
call
cwde
scas
mov
icebp
int
loop
fadd
xchg
fnstcw
fmul
mov
mov
cmps
mov
stos
mov
(bad)
fdiv
ss
mov
pop
xchg
add
leave
lods
mov
lods
fistp
add
mov
mov
test
iret
ret
ret
mov
or
enter
fsubr
mov
lods
stos
xlat
aad
mov
pop
(bad)
lds
mov
lods
iret
int3
fld
xchg
out
mov
shr
mov
(bad)
(bad)
rcl
leave
lods
retf
fisub
cmps
aad
lahf
xor
test
aaa
lods
test
fcom
mov
(bad)
ret
mov
leave
cmps
mov
lods
fistp
sahf
xchg
mov
fcomp
fcmovnbe
fmul
retf
or
lods
into
cmps
add
mov
lods
aad
lea
mov
adc
fcomp
(bad)
mov
int3
mov
iret
ret
scas
repz
test
fisub
stos
(bad)
shl
shl
fcomip
mov
mov
fistp
adc
mov
xor
push
(bad)
ret
mov
enter
leave
lods
retf
cmps
daa
ficomp
lahf
xchg
test
mov
mov
cmps
test
fbld
leave
cmps
les
mov
icebp
sahf
xchg
lods
leave
xor
mov
ffreep
mov
movs
lds
sar
adc
out
mov
leave
mov
mov
out
fstp
iret
mov
enter
leave
lods
aam
stos
fbstp
mov
fsub
xchg
test
leave
shl
push
fcomp
(bad)
out
lods
iret
ret
fcmovnb
xchg
mov
fistp
adc
jmp
xchg
lahf
mov
rol
loop
mov
fild
enter
in
stc
loope
mov
cmps
fild
xchg
scas
es
fdivp
cmovg
sbb
iret
enter
mov
fistp
lahf
mov
(bad)
stos
push
(bad)
aam
in
jmp
mov
iret
enter
scas
call
mov
cwde
test
mov
(bad)
rcl
mov
mov
aad
mov
leave
lods
retf
mov
or
test
mov
xchg
add
repnz
fmulp
int
adc
scas
xor
lahf
iret
enter
mov
fistp
lahf
mov
and
mov
enter
mov
(bad)
lds
mov
and
leave
cmps
out
mov
add
cmps
mov
adc
pop
lods
iret
ret
xchg
mov
mov
dec
sahf
mov
test
cmps
popf
mov
(bad)
mov
leave
lods
iret
push
lods
iret
leave
jo
lahf
mov
test
mov
fsubr
into
leave
lods
enterw
lods
iret
enter
leave
movs
fstp
lahf
stc
xchg
cmps
push
mov
fstp
fidiv
sar
inc
lods
iret
ret
and
lahf
mov
(bad)
sahf
xor
mov
(bad)
fisub
and
enter
xchg
lods
iret
ret
xchg
sbb
lahf
xchg
lods
fmul
mov
(bad)
aam
add
lods
(bad)
scas
iret
leave
shr
hlt
lahf
xchg
mov
fnstenv
test
enter
mov
dec
sahf
mov
(bad)
lods
mov
fsub
mov
lods
iret
int
pop
leave
lods
lds
iret
enter
mov
test
mov
iret
mov
(bad)
aam
hlt
lods
iret
enter
lods
(bad)
scas
iret
leave
shr
hlt
lahf
xchg
mov
fnstenv
test
mov
mov
inc
sahf
mov
test
mov
mov
(bad)
fidiv
ret
push
leave
lods
lds
iret
enter
mov
test
mov
iret
mov
(bad)
aam
sub
(bad)
lods
iret
leave
shr
hlt
lahf
xchg
mov
fnstenv
neg
iret
leave
sar
mov
dec
sahf
mov
(bad)
sahf
test
lods
test
fsub
mov
and
lods
into
cmps
xchg
lods
iret
ret
xchg
sbb
xchg
lods
leave
and
(bad)
fbld
xchg
mov
lods
iret
mov
lods
iret
int
scas
lahf
mov
(bad)
lods
test
in
mov
fcomp
mov
lods
iret
int
mov
push
lods
iret
ret
test
lahf
mov
test
mov
mov
(bad)
fisub
mov
arpl
lods
into
fisubr
cmp
mov
xchg
mov
lds
dec
into
leave
cmps
ins
fsubr
fxch
mov
jmp
fisub
cmps
mov
(bad)
retf
mov
fbld
test
lods
aad
add
jmp
mov
(bad)
fmul
ret
mov
iret
leave
test
add
leave
test
push
mov
test
mov
(bad)
repz
mov
enter
leave
lods
aad
stc
mov
cmps
ffreep
fsubr
fcomp
aad
test
push
leave
lods
(bad)
into
enter
inc
xchg
fistp
lahf
mov
test
fcomp
mov
(bad)
lds
mov
mov
iret
leave
test
cmp
in
xchg
test
daa
es
cmps
stos
iret
leave
test
lods
lods
iret
ret
enter
ret
shr
and
mov
mov
iret
shl
inc
leave
lods
lds
mov
leave
lods
int
lods
fild
fwait
xchg
mov
fcomp
ffreep
call
iret
leave
ror
enter
fsubr
mov
test
movs
mov
stc
fsub
mov
lods
iret
int3
test
in
stc
xchg
movs
xchg
mov
fcmovnb
mov
mov
ss
loop
or
out
lods
iret
iret
fistp
mov
enter
sub
xchg
test
fcomp
aam
xlat
(bad)
movs
not
lods
iret
enter
ret
xchg
adc
test
lods
scas
mov
aam
ja
leave
cmps
jecxz
movs
enter
enter
leave
lods
aad
sub
test
cmps
mov
mov
shl
in
(bad)
iret
fcomip
enter
xchg
lods
fist
lahf
push
xchg
cmps
aad
test
cmps
mov
ja
fcom
mov
add
stos
mov
cmps
neg
lahf
and
cmps
std
stc
lods
test
jo
(bad)
mov
into
leave
cmps
jecxz
movs
enter
enter
leave
lods
aad
movs
pop
cwde
test
mov
adc
(bad)
(bad)
(bad)
into
fild
lods
iret
ret
xchg
xchg
pushf
in
test
out
mov
push
outs
loopne
daa
and
shl
gs
leave
cmps
out
lods
fist
xor
test
xchg
mov
leave
aam
fisubr
leave
test
iret
ret
jbe
mov
adc
(bad)
popf
push
leave
fmulp
enter
lods
(bad)
mov
in
fmul
lahf
xchg
mov
xchg
mov
fcomp
(bad)
mov
add
fsubr
sahf
cmc
xchg
mov
lea
xor
and
pop
xlat
test
leave
lods
leave
retf
xlat
(bad)
leave
test
mov
fistp
lahf
xchg
adc
jecxz
(bad)
frstor
add
int
mov
push
lods
scas
lods
rol
scas
shl
fdivrp
inc
hlt
push
shl
push
iret
leave
stos
out
lods
iret
into
loope
iret
leave
cmps
add
add
test
fcmovu
(bad)
fcmovu
iret
out
lods
iret
leave
jmp
lods
pushf
leave
lods
fistp
mov
test
cmps
mov
loop
hlt
fdivr
ret
out
xchg
lds
mov
lods
iret
int
mov
mov
test
cmps
mov
mov
jecxz
(bad)
fldenv
xchg
fcomip
aam
retf
retf
lahf
pop
test
cmps
mov
into
(bad)
scas
repnz
xlat
test
leave
lods
leave
loopne
iret
enter
leave
lods
fidiv
out
test
cmps
mov
ffreep
fcomp
iret
dec
lods
iret
fmul
lods
iret
iret
mov
and
cmc
aam
stos
frstor
mov
int
fmul
in
lods
iret
leave
cs
enter
in
shl
push
fistp
lahf
mov
out
aad
lods
xor
xchg
(bad)
fldcw
jecxz
dec
lods
ror
leave
lods
ror
into
mov
mov
test
jbe
xchg
inc
fcomp
fdecstp
mov
iret
iret
fsub
into
loop
fdivr
retf
lods
ror
lods
fist
mov
inc
lods
test
or
mul
fcomp
leave
loope
into
leave
stos
mov
jecxz
fdivr
scas
fild
lahf
xchg
mov
mov
fcom
out
lods
iret
iret
fsub
into
loop
lods
fdivr
scas
fistp
lahf
xchg
mov
mov
fcomp
inc
jne
iret
enter
lods
leave
mov
lods
iret
enter
mov
test
cmps
mov
xadd
and
leave
stos
fld
iret
enter
enter
mov
lahf
mov
stos
test
mov
mov
(bad)
imul
leave
lods
leave
fisub
out
enter
call
test
mov
mov
aad
(bad)
jmp
out
lods
iret
into
fbld
out
leave
lods
fidiv
out
test
cmps
mov
(bad)
fcomp
iret
sahf
lods
iret
fmul
lods
iret
iret
mov
mov
xchg
xchg
mov
fcomp
(bad)
fcomp
fsubrp
(bad)
out
lods
iret
into
fisub
out
leave
lods
fidiv
out
test
cmps
mov
(bad)
fcomp
iret
ret
fmul
lods
iret
iret
mov
mov
lods
lahf
lods
test
fcomp
cmc
int
fmul
jmp
iret
enter
in
shl
push
fistp
lahf
xchg
fistp
(bad)
(bad)
(bad)
ficomp
lods
(bad)
enter
sbb
je
test
mov
mov
fcompp
scas
out
leave
lods
into
jecxz
dec
lods
out
enter
leave
lods
into
mov
mov
test
cmps
mov
(bad)
mov
mov
xchg
clc
retf
lods
out
leave
lods
fist
test
mov
mov
(bad)
test
leave
lods
into
mov
xchg
stc
scas
fistp
lahf
xchg
mov
mov
fcomp
into
loope
into
leave
stos
mov
lods
iret
leave
mov
cmc
mov
xchg
mov
es
fdivrp
outs
(bad)
lods
iret
inc
loopne
enter
enter
loopne
lahf
mov
mov
mov
mov
(bad)
fs
xlat
test
leave
lods
leave
call
and
fisttp
test
cmps
mov
(bad)
fcomp
iret
lds
jl
loopne
lods
iret
iret
mov
mov
test
fcomip
mov
(bad)
(bad)
ficomp
lods
ret
enter
mov
mov
aad
and
cmps
mov
(bad)
mov
mov
xchg
clc
retf
lods
jmp
lods
fist
jecxz
push
mov
mov
fst
fcomp
into
loope
into
leave
stos
mov
lods
iret
leave
mov
cmc
mov
xchg
mov
es
fdivrp
or
lods
iret
inc
loopne
enter
enter
loopne
lahf
mov
mov
mov
mov
(bad)
fdiv
pop
xlat
test
leave
lods
leave
call
and
fisttp
test
cmps
mov
(bad)
fcomp
iret
lds
jl
loopne
lods
iret
iret
mov
pusha
mov
test
fcomip
mov
(bad)
(bad)
ficomp
lods
ret
enter
jmp
jno
cdq
cmps
test
cmps
mov
(bad)
mov
mov
xchg
clc
retf
lods
jmp
lods
fist
dec
test
lods
test
js
push
xchg
fcomp
into
loope
into
leave
stos
mov
lods
iret
leave
mov
cmc
mov
xchg
mov
imul
lods
iret
enter
lods
leave
mov
lods
iret
enter
mov
test
mov
xadd
and
leave
stos
mov
lods
iret
ret
leave
leave
stos
mov
mov
test
cmps
cmps
mov
xadd
and
leave
stos
mov
lods
iret
ret
leave
leave
stos
mov
mov
test
mov
push
test
lock
leave
stos
fld
iret
enter
enter
mov
lahf
mov
stos
test
mov
mov
(bad)
jne
pop
xlat
test
leave
lods
leave
mov
iret
enter
enter
and
test
cmps
mov
into
(bad)
xchg
icebp
pop
xlat
test
leave
lods
leave
mov
iret
enter
enter
and
test
cmps
mov
into
(bad)
mov
pop
xlat
test
leave
lods
leave
fisub
in
enter
call
test
mov
mov
pop
fcomp
fidiv
int
mov
ret
inc
leave
lods
aad
xchg
mov
sti
xchg
aad
test
mov
fcom
in
xchg
retf
in
jmp
leave
lods
fistp
xchg
stos
mov
xchg
mov
fcom
in
xchg
leave
mov
enter
leave
lods
into
lea
lods
pop
aam
cmps
mov
rcr
fmulp
fsub
add
iret
iret
mov
enter
fnstsw
mov
rep
test
mov
xchg
jne
(bad)
enter
into
cmps
in
mov
mov
mov
mov
xchg
xor
mov
fst
cmc
and
lods
leave
out
stos
loop
mov
iret
leave
cmps
cmc
cdq
out
mov
in
lods
ret
cmps
mov
into
test
cld
mov
(bad)
jnp
leave
cmps
(bad)
cmp
mov
int3
sbb
(bad)
mov
(bad)
ret
mov
enter
nop
lods
iret
iret
cmps
add
push
mov
cmps
mov
(bad)
fdivp
pop
xlat
test
leave
lods
leave
loopne
iret
enter
loope
fistp
mov
test
cmps
mov
std
cwde
fcomp
into
rcr
lods
inc
enter
xchg
lods
fistp
cdq
pushf
test
repz
and
(bad)
aam
repnz
stos
out
loope
pop
(bad)
test
enter
jge
fistp
mov
mov
scas
lods
xchg
pop
mov
sub
hlt
repz
enter
lods
iret
enter
leave
or
mov
das
aad
mov
add
(bad)
retf
cmc
repz
lods
(bad)
fcom
lods
leave
mov
lods
add
mov
mov
stos
(bad)
(bad)
shr
jecxz
in
cmps
in
leave
lods
fdivr
test
mov
mov
movs
mov
test
std
(bad)
(bad)
in
jmp
adc
enter
leave
lods
fild
lahf
sub
xchg
mov
fucomip
fcomp
fmulp
and
and
scas
(bad)
fild
mov
and
lods
xchg
inc
mov
dec
lock
xchg
fdivp
shl
scas
jmp
leave
stos
xlat
scas
outs
pushf
mov
out
mov
test
lock
(bad)
(bad)
enter
enter
fldcw
and
cmps
aad
adc
call
fmulp
iret
test
leave
lods
(bad)
int3
out
loop
(bad)
mov
mov
iret
aad
lods
and
fcomp
aam
repz
out
stos
int
loop
enter
enter
stos
mov
mov
jmp
mov
(bad)
sar
enter
enter
ins
into
enter
cmps
loope
lahf
and
data16
outs
test
mov
mov
fcom
out
lods
iret
iret
ret
push
leave
lods
(bad)
ret
jl
lods
aad
mov
test
cmps
mov
xadd
and
leave
stos
fsub
scas
jmp
leave
test
xor
xor
mov
mov
retf
(bad)
fsub
mov
(bad)
mov
fucom
mov
lahf
mov
scas
dec
(bad)
mov
test
inc
aam
mov
(bad)
ret
mov
jecxz
faddp
fsub
mov
nop
mov
mov
mov
ror
xlat
iret
rcl
sti
jb
cmps
or
enter
inc
sbb
cli
call
lahf
mov
cmp
int3
fcmovnu
iret
retf
into
leave
cmps
out
lods
iret
jecxz
or
xchg
xchg
lahf
rcr
lods
pop
or
jecxz
(bad)
fmul
fld
xchg
mov
xchg
clc
int
ror
lods
fist
mov
test
xchg
pop
mov
xchg
(bad)
ret
ret
pop
enter
cmps
in
leave
lods
fdivr
scas
fisttp
lahf
xchg
mov
mov
(bad)
mov
(bad)
(bad)
in
mov
enter
leave
lods
into
in
dec
mov
adc
ret
mov
(bad)
clc
aaa
jmp
lods
iret
into
shl
and
pop
lahf
xchg
cmp
fxch
(bad)
xchg
xchg
and
leave
lods
into
rol
into
leave
cmps
lds
cmc
jmp
xchg
repz
push
outs
mov
shl
mov
aam
out
mov
iret
mov
mov
shr
(bad)
jno
(bad)
clc
ror
retf
mov
fsincos
addr16
fisubr
adc
nop
jmp
shl
fcom
test
inc
jmp
lods
iret
into
mov
iret
leave
cmps
mov
mov
test
cmps
mov
(bad)
lock
iret
leave
cmps
int
mov
retf
mov
loop
and
mov
mov
test
mov
mov
(bad)
lock
iret
leave
stos
in
mov
inc
lods
iret
into
jecxz
aad
adc
mov
aad
lods
sub
cwde
(bad)
rcr
fcom
and
mov
popf
test
mov
repz
scas
mov
jns
(bad)
fsubr
or
outs
enter
jmp
mov
xchg
mov
add
(bad)
fmul
mov
retf
test
leave
lods
(bad)
lods
xor
in
lahf
mov
fild
aad
test
mov
inc
fmulp
int
pop
mov
iret
enter
leave
lods
fdivr
scas
fistp
mov
movs
std
(bad)
lods
test
loop
(bad)
fdivr
jmp
lods
iret
ficom
jmp
mov
mov
aad
mov
fsub
jmp
mov
lods
iret
int3
retf
mov
sub
les
cmps
mov
(bad)
fcmovu
mov
lods
iret
int
out
lods
iret
ret
iret
aaa
mov
in
lahf
xchg
lods
movs
test
fcmovnu
(bad)
mov
mov
sbb
jns
mov
test
cmp
(bad)
scas
ror
push
enter
cmps
cmp
leave
stos
fstp
lods
clc
cmp
mov
inc
inc
movs
inc
(bad)
fsub
mov
push
xor
(bad)
ss
xor
lods
fistp
xchg
stos
movs
lds
neg
iret
ret
fdiv
leave
lods
int
or
pop
lods
fistp
scas
pop
test
fisub
int3
loope
iret
leave
cmps
mov
fadd
loop
mov
movs
in
lods
mov
mov
(bad)
fisub
retf
enter
imul
scas
lods
mov
mov
xchg
mov
movs
fcomp
(bad)
fcomp
iret
retf
scas
mov
lods
iret
int3
scas
out
leave
lods
lds
xchg
cmps
xchg
mov
mov
rcr
iret
leave
lods
iret
leave
scas
int
cmp
enter
dec
lods
fist
popf
call
xor
(bad)
call
iret
leave
lods
iret
enter
mov
iret
leave
test
mov
mov
cmps
xlat
test
stos
sbb
(bad)
es
retf
leave
mov
enter
leave
lods
int
xlat
dec
lahf
mov
test
cmps
xchg
mov
dec
fmulp
int
aaa
leave
scas
inc
lods
ror
leave
lods
iret
leave
lods
fistp
lahf
add
rol
repnz
clc
in
cmp
leave
test
xor
leave
lods
fistp
popf
std
sbb
and
cdq
(bad)
fcmove
loop
mov
jecxz
push
enter
xor
mov
test
mov
(bad)
lods
sahf
iret
leave
scas
fsub
scas
jmp
leave
lods
retf
loop
fistp
xchg
stos
movs
lds
mov
pop
fmulp
ret
fdiv
leave
lods
int
or
push
lods
fistp
scas
pop
test
fisub
int3
loope
iret
leave
cmps
mov
aad
int3
out
mov
loop
mov
movs
in
lods
mov
mov
(bad)
fisub
retf
enter
hlt
lods
iret
retf
mov
mov
mov
xchg
mov
movs
fcomp
(bad)
fcomp
iret
retf
scas
mov
lods
iret
int3
scas
out
leave
lods
lds
xchg
cmps
xchg
mov
mov
rcr
iret
leave
lods
iret
leave
scas
int
aaa
iret
enter
dec
lods
fist
popf
popf
test
repz
xchg
cmp
and
fucomp
xlat
iret
(bad)
lods
iret
leave
lods
iret
enter
mov
iret
leave
test
mov
mov
cmps
xlat
cmps
sub
(bad)
(bad)
es
ficomp
lods
(bad)
enter
aad
repnz
scas
lock
test
dec
lods
stos
xchg
mov
pushf
fcomp
(bad)
fcomp
iret
retf
ret
inc
enter
mov
shl
push
fistp
lahf
mov
movs
(bad)
movs
sub
(bad)
(bad)
es
ficomp
lods
ret
enter
shl
test
dec
lods
stos
xchg
mov
sbb
(bad)
fcomp
iret
retf
(bad)
lods
iret
iret
fild
xchg
or
push
mov
lock
fisubr
mov
int3
rol
mov
lods
fistp
scas
test
movs
cmps
mov
repnz
movs
push
leave
lods
retf
jecxz
in
lods
int3
clc
shr
mov
xchg
mov
inc
mov
(bad)
aam
retf
scas
shl
scas
jmp
leave
lods
retf
loop
fisttp
xchg
stos
mov
xchg
mov
fcomp
in
xchg
leave
scas
inc
lods
ror
lods
iret
leave
lods
fistp
mov
mov
mov
rcr
fmulp
lds
or
leave
test
mov
scas
pop
test
clc
rcl
jmp
out
lods
iret
into
mov
movs
popf
mov
scas
(bad)
lods
lods
lea
test
fcmovu
rcr
fmulp
lds
or
leave
test
mov
scas
pop
test
fcmovne
repz
clc
in
or
xor
leave
lods
fist
mov
pop
cmps
mov
(bad)
call
iret
leave
lods
iret
enter
fadd
loop
mov
mov
mov
mov
fadd
(bad)
mov
jmp
stc
movs
fist
lahf
xchg
stos
sbb
(bad)
es
ficomp
lods
pop
enter
aad
repnz
scas
lock
mov
mov
movs
jl
iret
int
jmp
lods
iret
ret
push
enter
mov
test
cmps
mov
repnz
movs
push
lods
retf
jecxz
in
lods
fdivr
retf
leave
lods
fistp
mov
mov
cmps
mov
(bad)
call
iret
leave
cmps
iret
enter
aam
enter
lahf
mov
test
cmps
mov
into
fadd
(bad)
loop
mov
(bad)
jecxz
mov
cmp
sub
adc
int
(bad)
(bad)
lods
iret
leave
cmps
iret
enter
fadd
lahf
mov
test
cmps
mov
into
fmul
retf
loop
mov
jmp
stc
scas
fist
lahf
xchg
add
mov
repz
retf
leave
mov
enter
retf
pushf
scas
lods
mov
mov
xchg
mov
fisttp
fmulp
mov
mov
iret
enter
loop
fistp
xchg
stos
movs
movs
xchg
mov
je
iret
int
aaa
leave
scas
dec
lods
ret
leave
leave
lods
iret
leave
lods
fistp
lahf
xchg
test
push
sti
(bad)
fld
cmc
adc
jmp
leave
lods
into
aad
or
popf
test
cmp
mov
loopne
adc
fbstp
scas
mov
mov
iret
leave
test
in
pop
mov
cmps
sar
mov
ja
(bad)
fisubr
mov
iret
enter
lods
iret
int
movs
sub
std
sbb
cmps
mov
(bad)
(bad)
mov
lods
iret
int
mov
lods
iret
int3
retf
xlat
push
leave
lods
fcomi
pop
mov
cmps
aad
scas
mov
es
(bad)
lds
int
add
enter
aaa
stos
inc
sahf
mov
(bad)
lods
mov
fcomp
(bad)
fst
lods
leave
mov
mov
jecxz
imul
popa
mov
inc
inc
daa
movs
push
fcomp
imul
push
xor
mov
int3
lods
addr16
leave
lods
into
popf
repz
mov
shl
test
mov
(bad)
fcomp
int3
rol
int3
mov
in
mov
fidivr
mov
or
lods
test
jge
(bad)
retf
aaa
lods
iret
ret
sub
mov
retf
loop
mov
scas
push
sti
sub
movs
mov
(bad)
mov
into
leave
stos
adc
scas
jmp
mov
mov
mov
loope
cmps
mov
mov
(bad)
(bad)
in
(bad)
retf
stos
mov
retf
ret
ins
enter
jmp
xchg
test
pop
fyl2xp1
cwde
fcomp
into
rcr
lods
pop
enter
rol
and
aad
lods
and
jae
fcomp
jecxz
scas
mov
lods
iret
int3
and
cli
mov
cmp
test
push
movs
lds
repz
fld
xchg
fisubr
rcl
retf
cmp
or
mov
mov
mov
fcom
in
cmp
inc
jle
cld
shr
ret
into
leave
cmps
aad
test
(bad)
lods
mov
fidiv
adc
mov
test
push
lods
iret
int
fimul
call
scas
movs
rcr
mov
fcomp
lds
lods
in
lods
(bad)
lods
iret
enter
pop
lods
neg
mov
test
aad
lods
cmp
mov
(bad)
fdiv
retf
iret
leave
lods
retf
(bad)
out
fistp
mov
mov
mov
cmp
(bad)
jmp
in
cmps
in
scas
mov
lods
iret
int3
fisubr
mov
test
leave
and
mov
iret
xchg
shl
(bad)
xlat
test
leave
lods
fldlg2
cld
mov
jmp
and
leave
fninit
sar
lods
iret
into
retf
ret
ins
enter
jmp
xchg
test
mov
neg
pushf
retf
iret
enter
leave
mov
in
push
mov
xor
(bad)
add
mov
add
adc
js
iret
int3
retf
sbb
mov
aad
stos
test
(bad)
(bad)
adc
leave
lods
retf
cmps
aaa
into
enter
retf
scas
movs
cmp
add
test
cmps
mov
(bad)
mov
into
leave
cmps
loop
scas
int
add
enter
jns
fistp
cdq
pop
mov
std
rep
test
(bad)
(bad)
add
xchg
ret
(bad)
popf
mov
inc
test
mov
mov
hlt
fcomp
(bad)
iret
leave
lods
iret
enter
leave
cwde
mov
lods
fimul
xchg
ficom
mov
clc
(bad)
xlat
in
jmp
sub
aaa
stos
imul
xchg
mov
add
adc
jb
lods
retf
jecxz
fdivr
retf
leave
lods
fistp
pushf
lahf
test
repz
call
fdiv
into
loop
fneni(8087
pop
lods
iret
ret
stos
ror
lods
xchg
popa
mov
(bad)
fmul
cmps
bswap
leave
stos
in
lods
aam
int
pop
leave
lods
fild
mov
test
cmps
mov
scas
into
cmc
hlt
clc
(bad)
fmul
cmps
jae
leave
cmps
mov
rol
mov
test
lods
movs
shr
mov
repz
mov
lods
iret
int
pop
mov
iret
enter
mov
fistp
in
test
scas
mov
(bad)
(bad)
mov
jb
in
test
retf
xlat
inc
lahf
mov
lea
mov
(bad)
lock
leave
xchg
enter
leave
lods
iret
leave
lods
fcomip
loop
lods
ret
lahf
xchg
cmps
mov
(bad)
(bad)
mov
(bad)
in
jmp
mov
push
lahf
mov
add
push
fcmove
leave
repnz
clc
int
add
leave
test
mov
iret
enter
enter
mov
test
movs
mov
into
fsub
jecxz
scas
mov
lods
iret
int3
retf
adc
fstp
sahf
xchg
test
(bad)
aad
sbb
and
enter
leave
lods
push
sahf
mov
add
cmps
mov
jb
fcomp
mov
jno
leave
lods
iret
int3
cmps
dec
into
leave
cmps
leave
lods
or
jnp
mov
es
fisub
rol
(bad)
scas
ret
(bad)
popf
mov
imul
rcr
fcom
leave
fidiv
mov
scas
mov
leave
lods
retf
int
aas
sahf
mov
dec
aad
test
mov
fcomp
int
xor
leave
test
shr
retf
fistp
xchg
test
mov
pop
test
fcmovu
movs
ins
fcomp
retf
int
sub
lods
lds
mov
mov
fistp
cwde
sti
aaa
cmps
aad
xchg
lds
mov
(bad)
fmulp
sbb
test
int3
xchg
fxch
scas
retf
cmps
dec
ficomp
lahf
add
movs
lds
fcomp
push
imul
shr
mov
lods
iret
int3
fisubr
mov
and
test
imul
jne
lods
retf
fisubr
enter
iret
test
mov
test
lods
test
mov
cmc
lock
mov
retf
sar
lods
retf
fsubp
stos
iret
leave
xchg
in
mov
cmps
aad
lahf
lods
mov
mov
push
iret
int
(bad)
ret
ins
leave
lods
leave
push
sar
adc
popf
std
push
cmps
aad
mov
test
(bad)
fidiv
mov
ret
add
leave
stos
int
pmaxub
mov
test
cmp
fmulp
fxtract
xlat
fmulp
scas
enter
enter
push
iret
iret
test
test
mov
mov
xchg
fcomp
iret
push
lods
iret
leave
movs
iret
enter
leave
lods
iret
leave
lods
fistp
sahf
xchg
and
fmulp
call
iret
leave
ss
enter
push
lods
iret
int
push
(bad)
daa
xchg
test
fcomp
fist
fdiv
retf
out
enter
sub
(bad)
sub
sbb
cmps
mov
(bad)
fcmovu
mov
lods
iret
int
xchg
rol
mov
lods
fistp
lahf
or
out
xchg
imul
int
cmp
leave
test
in
jmp
retf
or
mov
mov
stc
clc
fisub
fild
mov
iret
leave
test
in
mov
mov
mov
fcomp
aam
fcmovne
nop
nop
loope
lods
iret
retf
into
xchg
test
cdq
mov
mov
iret
mov
mov
(bad)
(bad)
int3
int
mov
lods
iret
int3
retf
xlat
jl
lods
fistp
xchg
add
movs
mov
fcmovnu
and
xlat
jl
lods
retf
ror
hlt
pushf
and
cmps
shr
mov
rcr
movs
inc
fcomp
retf
clc
xchg
mov
iret
enter
fsubr
popf
test
mov
cmps
aad
(bad)
cmps
mov
(bad)
fidiv
jecxz
fprem
xchg
mov
lods
iret
int
fisttp
fwait
test
sbb
(bad)
shl
retf
ret
ins
leave
lods
leave
loop
mov
fwait
mov
and
(bad)
fcmovbe
test
lods
in
test
int3
int3
ret
outs
enter
mov
xchg
test
mov
enter
into
leave
cmps
int
cmp
enter
in
(bad)
popf
mov
test
mov
mov
push
fcomp
iret
push
lods
iret
fsubr
int3
in
in
xlat
gs
mov
or
xchg
xor
shl
and
xlat
je
lods
retf
retf
ret
and
mov
fistp
rol
(bad)
movs
rcr
mov
movs
addr16
leave
test
cmp
ret
loope
test
test
mov
lods
lods
stos
mov
mov
fcmovbe
cmc
sub
int
ret
add
lods
leave
retf
leave
leave
stos
out
lods
fist
add
test
mov
(bad)
fcom
iret
cdq
cmc
iret
out
iret
enter
iret
lods
fmul
lods
fild
mov
test
cmps
mov
xchg
fmul
shl
mov
retf
xlat
jne
lods
retf
shl
mov
lahf
mov
test
mov
hlt
ss
mov
lods
iret
int
and
lods
(bad)
test
out
jb
loop
mov
mov
lods
mov
fcomp
fcomi
call
iret
int
cld
out
mov
retf
iret
leave
test
sub
nop
xchg
bound
push
mov
(bad)
(bad)
xchg
enter
xlat
jp
leave
test
jle
movs
sub
popf
std
sbb
mov
mov
ins
fmulp
int
mov
lods
iret
int3
scas
mov
leave
lods
retf
retf
xlat
jo
mov
(bad)
mov
cmps
mov
(bad)
(bad)
mov
lods
iret
int
and
lods
(bad)
hlt
mov
mov
daa
test
mov
mov
(bad)
movs
(bad)
leave
lods
retf
retf
xlat
pusha
enter
push
lods
iret
iret
xchg
sahf
cwde
mov
mov
cmps
mov
(bad)
(bad)
iret
push
lods
iret
fsubr
into
in
in
xlat
js
mov
xchg
jge
lods
lods
mov
iret
retf
clc
jmp
lods
iret
int3
scas
mov
leave
lods
retf
in
hlt
xchg
and
add
mov
ret
(bad)
mov
(bad)
ret
scas
(bad)
mov
lods
iret
int
int
repz
pop
cmps
aad
scas
mov
(bad)
movs
jno
fmulp
in
int
add
enter
enter
mov
mov
rcl
mov
(bad)
aam
fst
jg
lods
retf
retf
enter
fld
mov
outs
xchg
adc
movs
ins
(bad)
fcmove
(bad)
jle
lods
retf
retf
jle
lods
retf
retf
mov
mov
aad
scas
mov
(bad)
leave
mov
scas
fnstenv
in
scas
mov
lods
fistp
xchg
test
scas
lea
movs
dec
fcomp
retf
les
cmps
adc
enter
stc
stos
fist
mov
aad
mov
xchg
popf
fcmovu
mov
(bad)
leave
fiadd
xlat
in
retf
mov
lods
fist
lea
stos
mov
fdiv
aad
repz
loop
fmul
xchg
sar
scas
out
lods
fist
xchg
inc
cmps
aad
fsubr
cmps
mov
into
(bad)
fmul
mov
enter
iret
mov
mov
scas
jg
test
fcomp
neg
pop
into
leave
cmps
mov
lods
iret
retf
iret
leave
scas
int3
call
test
fsubr
mov
leave
fisub
mov
enter
leave
lods
aad
inc
mov
leave
aad
lods
mov
call
fmulp
push
lods
iret
fsubr
fcmove
push
fimul
mov
add
mov
mov
ror
int3
cmps
call
into
enter
rol
mov
mov
jns
push
mov
fcomp
iret
ficomp
lods
outs
enter
enter
mov
push
cmps
aad
xchg
fcomp
mov
into
leave
cmps
in
lods
mov
leave
lods
retf
cmps
fild
sahf
mov
test
cmps
mov
repnz
sti
xor
add
shr
into
leave
stos
cmc
mov
scas
mov
test
ret
ret
(bad)
(bad)
aam
aad
xlat
push
lods
retf
retf
loop
mov
pop
xchg
dec
adc
fucomp
aam
(bad)
lods
iret
leave
lods
iret
enter
fild
lahf
mov
test
cmps
mov
(bad)
(bad)
fimul
int3
scas
rcl
in
jmp
mov
push
test
pop
mov
call
fmulp
leave
lods
iret
leave
scas
rcl
sbb
jp
fistp
cdq
jmp
xchg
call
fmulp
leave
lods
iret
leave
scas
out
lods
iret
ret
jmp
stc
jae
xchg
mov
fisttp
(bad)
fisubr
loope
into
enter
enter
mov
(bad)
scas
mov
xlat
test
push
cmps
mov
(bad)
fdiv
and
lods
leave
cmps
cmps
iret
enter
enter
mov
add
cmps
mov
gs
fsub
retf
leave
mov
enter
aad
repz
scas
popf
in
sahf
xchg
scas
mov
fild
fmulp
pop
data16
iret
enter
leave
lods
mov
in
out
xlat
cli
cmc
jmp
in
fmul
mov
lods
mov
enter
out
movs
fild
cmp
in
stc
stc
in
lock
sbb
lods
mov
lods
lods
stos
hlt
ret
fdivr
cdq
fldcw
in
repnz
hlt
jecxz
fwait
mov
call
loopne
jmp
mov
mov
lods
fbld
sti
movs
fdiv
icebp
repnz
retf
mov
enter
retf
fdivr
fmulp
leave
lods
iret
leave
lods
iret
enter
mov
lahf
mov
(bad)
sub
xchg
dec
pop
jle
mul
mov
out
jge
les
xchg
inc
sbb
push
add
pop
stos
popa
or
pop
xchg
lock
xchg
pusha
jge
xchg
xchg
aam
xor
popf
int
sbb
repz
out
mov
fcomp
jb
dec
jmp
sbb
jnp
sub
loope
daa
scas
in
adc
mov
add
cmp
mov
add
out
pop
popa
test
cmp
xor
shr
jae
in
lahf
into
arpl
inc
ins
pop
int
js
add
sbb
hlt
add
mov
adc
stos
lds
imul
xor
(bad)
cdq
loopne
in
jmp
pop
movs
mov
cwde
add
shr
(bad)
fdivr
mov
mov
aaa
push
pop
sahf
scas
test
xchg
call
mov
mov
cmp
jg
adc
xchg
data16
jle
inc
fsub
dec
mov
jb
loopne
push
pop
and
pop
sahf
jb
adc
mov
enter
das
jnp
popa
jnp
test
mov
not
arpl
or
call
pop
sub
cli
sbb
add
pop
test
dec
push
xchg
and
add
cmps
and
les
xchg
pusha
jge
(bad)
pop
jno
mov
std
adc
cmc
xchg
addr16
sbb
pop
inc
ret
jecxz
and
mov
add
push
das
sar
pop
push
bound
jo
retf
mov
aam
push
enter
aam
sub
mov
in
mov
and
test
xor
cmp
cmp
or
call
jo
push
jl
sbb
sti
aam
or
jecxz
hlt
aam
addr16
fild
sbb
add
jmp
stos
mov
xchg
dec
xor
mov
icebp
rcl
sbb
xor
clc
ret
repnz
xchg
inc
push
jle
add
movs
add
into
pop
idiv
jne
aaa
xor
and
or
xchg
call
addr16
dec
mov
add
sbb
ins
jmp
push
into
mov
inc
xor
retf
mov
or
(bad)
int3
xchg
ins
mov
mov
xchg
pop
xor
rol
xchg
xor
jo
jno
and
push
mov
neg
lods
mov
and
xchg
(bad)
scas
xchg
outs
jne
out
icebp
mov
inc
out
mov
outs
sbb
add
cs
ins
sahf
jmp
jns
jo
cmps
loope
mov
dec
xchg
cs
cdq
xchg
(bad)
cmp
and
test
jp
mov
fstp
dec
pop
retf
cmps
outs
sub
leave
xchg
mov
nop
cmps
push
and
(bad)
test
xchg
xchg
adc
jne
ss
ins
dec
loope
pop
push
mov
adc
aaa
sub
out
xor
mov
cmc
addr16
fs
cmc
push
pop
rol
retf
push
add
sbb
sub
ret
fidiv
les
push
sbb
mov
std
dec
sub
loop
lea
in
repnz
push
jns
jmp
jmp
cmp
and
adc
scas
jns
mov
inc
into
clc
imul
out
and
leave
enter
ja
pop
xor
ss
test
inc
repnz
ror
mov
sub
jl
cmp
shr
add
loopne
sbb
pop
out
nop
sbb
jnp
sahf
js
loop
xor
mov
sbb
pop
mov
out
xor
cmp
cli
sbb
imul
pop
add
sar
or
fild
jmp
fs
cdq
dec
fs
xor
xchg
pusha
jl
dec
inc
js
repz
or
sbb
stos
into
sahf
sbb
fidiv
and
(bad)
cmp
jmp
mov
inc
inc
das
test
out
mov
pop
call
aaa
sub
fdiv
adc
ja
pop
pusha
retf
adc
jb
daa
or
std
arpl
test
pop
test
mov
jbe
mov
add
and
sbb
dec
push
lea
inc
ficomp
jl
sti
int
sar
outs
xor
adc
add
in
or
dec
(bad)
mov
xor
stc
jbe
xchg
jo
dec
inc
inc
popa
dec
imul
and
aad
or
ret
adc
fild
cdq
movs
ds
ins
daa
dec
xchg
retf
add
cdq
movs
sbb
cld
ss
jb
and
test
test
fucomip
xchg
int3
mov
mov
adc
add
fidiv
adc
call
movs
sbb
std
out
stos
js
xlat
xchg
pop
lds
movs
pop
ins
sub
pop
fwait
ret
xchg
xchg
test
aad
imul
jge
cmp
jns
inc
push
adc
in
imul
je
popa
mov
imul
retf
jecxz
sbb
addr16
jne
je
data16
cs
push
js
adc
fbstp
dec
pop
xchg
(bad)
jge
cmp
(bad)
sub
xor
xchg
mov
mov
push
sbb
mov
xor
std
pop
nop
(bad)
loopne
addr16
into
and
inc
loop
sbb
repz
popa
sub
imul
xchg
push
and
add
jecxz
inc
in
rcl
pop
in
push
gs
add
scas
inc
(bad)
or
fisttp
pop
dec
mov
out
out
cmp
and
retf
push
outs
jecxz
jp
cdq
cmc
push
sbb
xchg
jo
mov
mov
(bad)
mov
pop
push
add
dec
clc
cld
nop
or
and
add
dec
ja
push
mov
push
mov
ror
jo
rcr
cwde
ror
push
or
repnz
(bad)
mov
or
in
enter
adc
retf
xchg
shr
loope
jnp
fdiv
addr16
add
stos
add
xchg
iret
ret
imul
inc
outs
sysenter
add
push
(bad)
scas
jbe
retf
aam
call
add
and
add
imul
test
mov
out
repnz
xchg
and
mov
xchg
aas
mov
or
and
push
ja
mov
mov
push
adc
adc
mov
ja
inc
test
sar
sbb
pushf
cmp
cli
bnd
push
nop
sub
dec
pusha
js
add
and
mov
test
mov
adc
push
imul
push
call
cmps
cmc
adc
test
jmp
int3
sahf
inc
idiv
mov
or
mov
repz
pushf
dec
mov
clc
ror
data16
sub
fimul
or
fmul
in
mov
aam
add
cmp
inc
cmp
push
call
loopne
test
outs
jbe
mov
aam
add
mov
in
adc
and
hlt
push
pop
or
and
xor
xchg
pop
mov
inc
test
cmp
dec
ret
cmp
lea
cmp
outs
push
mov
xchg
call
fadd
mov
mov
ret
pop
xchg
in
push
std
cli
adc
int
popf
pop
inc
xchg
ret
jecxz
ror
mov
and
push
jo
popf
(bad)
push
sub
lds
and
mov
push
mov
in
(bad)
dec
lds
ins
clc
call
mov
jns
jl
or
(bad)
ffree
cmp
jge
dec
in
jns
mov
jo
arpl
push
xchg
xor
jb
mov
push
xchg
xor
ret
xor
ret
cmovp
and
call
(bad)
jb
adc
bound
in
js
pusha
test
dec
mov
inc
loopne
shr
xlat
add
lea
ins
lds
retf
gs
data16
sbb
dec
dec
out
sbb
pop
and
or
ja
ja
shl
jb
pop
iret
xor
jmp
ins
inc
dec
or
out
popa
ins
ror
sbb
jecxz
adc
or
and
loop
sbb
cmps
lods
cmp
xor
leave
call
sar
in
(bad)
jbe
out
lods
inc
add
test
adc
in
out
loope
mov
std
pop
repz
lahf
jecxz
call
test
je
cld
ror
cmp
xchg
jp
dec
ins
pop
loope
sbb
inc
jge
jbe
mov
mov
jno
adc
ds
ja
ret
jae
fild
mov
add
mulps
cmp
push
jmp
push
sbb
pop
jmp
push
adc
into
mov
fdivr
es
mov
xchg
ja
dec
inc
cld
addr16
jmp
sub
jg
mov
mov
fldcw
jbe
fs
enter
sar
pusha
leave
(bad)
push
jle
loop
lahf
data16
sbb
or
idiv
adc
jmp
cmp
mov
mov
push
jo
mov
sahf
pusha
jge
test
mov
loopne
sti
cmp
pusha
cmp
mov
push
(bad)
out
loope
sbb
mov
xchg
inc
les
das
stos
arpl
lods
adc
jmp
push
sbb
ficom
or
div
(bad)
jne
nop
retf
jnp
lds
adc
push
mov
xchg
mov
pop
(bad)
stc
loopne
push
inc
jmp
sub
adc
mov
jne
xor
ficomp
jo
pop
retf
xlat
mov
mov
adc
pop
test
jmp
mov
push
(bad)
pop
add
(bad)
mov
rcr
inc
popa
test
std
push
inc
daa
xor
daa
jo
fimul
inc
push
add
pop
xor
push
cli
test
sahf
popa
ins
and
push
icebp
iret
int3
dec
movs
test
call
dec
mov
in
ins
bound
mov
push
and
pop
rcl
rep
cwde
cld
mov
inc
loopne
pop
and
add
jbe
ret
(bad)
fdivr
push
fadd
sub
pop
mov
stc
mov
xchg
pop
jle
mov
aaa
sub
mov
jge
pop
push
push
ss
(bad)
adc
repnz
sbb
scas
cmp
push
int3
cmp
sbb
dec
cdq
and
inc
dec
test
stc
push
lea
popf
ror
(bad)
cmp
mov
mov
xor
cmp
jns
xchg
aad
(bad)
nop
mov
(bad)
cld
pop
mov
imul
dec
aad
jmp
aaa
add
or
xchg
outs
(bad)
lods
arpl
xchg
ror
mov
fistp
mov
push
xor
sbb
pusha
add
sahf
daa
pusha
(bad)
fsubp
pusha
les
mov
mov
jl
scas
call
(bad)
(bad)
adc
jns
push
mov
test
fwait
imul
sbb
std
or
add
pop
push
sub
ss
sbb
mov
(bad)
iret
out
gs
imul
push
jle
xchg
es
mov
pop
aad
movs
pop
push
jg
js
ins
adc
fs
mov
stos
push
aam
lea
and
lock
adc
mov
lahf
les
or
ss
jbe
aam
fmul
ja
shl
mov
orps
(bad)
and
sub
push
(bad)
ror
and
mov
rol
add
jnp
jmp
pop
div
jl
ss
call
movs
fld
inc
pop
jb
repz
or
push
pop
xchg
jmp
outs
fdiv
out
sbb
hlt
pop
xor
or
push
pop
mov
jp
lea
ja
enter
and
cmp
push
in
in
jo
jl
fstp
dec
pop
mov
mov
or
nop
shr
sti
addr16
daa
ss
movs
bound
inc
mov
and
and
xor
pop
out
xchg
push
mov
pop
es
mov
dec
clc
push
pop
test
jge
push
mov
les
xor
loope
mov
stos
inc
and
pop
push
scas
fisubr
mov
cmp
cwde
popa
int3
(bad)
pop
mul
out
jo
movs
and
gs
inc
or
in
fld
in
call
stos
cmp
test
aad
mov
push
and
xor
dec
mov
test
jecxz
aad
(bad)
ins
push
loopne
aas
shl
test
psrlq
leave
mov
xor
icebp
push
daa
fs
lods
dec
add
shl
test
add
mov
push
cwde
ror
out
fild
push
sbb
repnz
es
test
mov
popf
pushf
popf
jo
ds
mov
lahf
xlat
push
xor
pushf
and
inc
mov
xor
out
imul
xor
xlat
in
(bad)
aam
xchg
in
push
retf
xchg
test
out
mov
lods
jne
adc
ja
push
push
pushf
jo
test
cmp
inc
fisttp
or
fcmovu
mov
outs
fnstsw
es
dec
push
mov
jge
and
or
mov
ins
dec
movs
xor
imul
inc
xor
xchg
jp
xor
int3
leave
or
addr16
lahf
pop
(bad)
pushf
int3
mov
xor
gs
adc
mov
idiv
repz
cmp
mov
fwait
xchg
pop
test
popf
hlt
cmp
lock
ja
pop
stos
mov
pusha
cmp
push
fdivr
cmps
out
xor
fwait
sbb
sar
inc
scas
mov
ins
fisttp
mov
mov
sub
mov
xchg
jno
dec
int
push
xchg
call
lgs
shl
mov
test
cs
xchg
ins
cmps
xchg
loop
sti
add
pop
jl
pop
lahf
xchg
addr16
jbe
jl
jns
dec
or
pop
and
mov
inc
neg
ins
nop
mov
mov
cmps
fbstp
fiadd
xor
jnp
dec
pop
fsub
and
add
cmp
fiadd
sbb
fidiv
dec
pushf
sbb
xchg
(bad)
fcmovb
aaa
sub
stos
jb
(bad)
sbb
mov
ins
xor
pushf
mov
add
outs
xchg
jno
push
push
pushf
inc
mov
int
add
cmps
hlt
sbb
and
(bad)
xchg
add
pop
fcomp
iret
xchg
sbb
jmp
push
inc
cmc
mov
push
(bad)
sub
adc
imul
xchg
out
adc
inc
ucomiss
sub
pop
xor
or
fs
xor
fdivr
mov
lds
ds
sti
xor
fwait
out
sub
cmc
sbb
mov
ss
or
ins
outs
mov
push
inc
arpl
(bad)
inc
jne
lods
jmp
hlt
sti
mov
fcomp
iret
lds
pushf
loope
stc
fwait
std
(bad)
lods
fistp
lahf
xchg
mov
mov
(bad)
ins
fmulp
jmp
(bad)
enter
xor
cmps
fcom
int3
loop
mov
mov
std
call
cwde
(bad)
lods
out
enter
pushf
(bad)
fistp
lahf
xchg
mov
fsubr
(bad)
fmulp
enter
jl
enter
leave
lods
sbb
lods
fisttp
mov
mov
cmps
mov
fild
iret
leave
scas
iret
enter
leave
lods
int
lods
fistp
lahf
xchg
lods
cmps
mov
(bad)
fcomp
iret
enter
stos
iret
enter
leave
lods
ror
lods
fistp
lahf
xchg
test
fcomp
(bad)
fcom
iret
cmp
lods
(bad)
leave
ret
lods
test
loopne
rcr
lods
mov
(bad)
fisttp
call
into
ret
leave
jae
vpcmpeqb
mov
or
mov
fcmove
(bad)
fsubr
int
scas
fxch
loop
xchg
scas
fxch
cmps
scas
xchg
retf
mov
mov
xlat
test
mov
inc
fcmove
iret
pop
scas
push
retf
mov
retf
cmp
jmp
mov
popf
add
cmps
(bad)
mov
xchg
fild
retf
into
lods
mov
nop
lods
leave
leave
rcr
(bad)
mov
test
cmps
mov
(bad)
fdiv
nop
lods
leave
leave
add
xchg
lods
leave
enter
leave
mov
mov
shl
mov
(bad)
iret
lock
int
iret
sub
int
fisttp
fwait
add
cmps
retf
fmul
fisttp
mov
int
retf
into
lods
or
leave
data16
mov
test
cmps
mov
fcmovnu
fmul
retf
leave
leave
test
xor
test
ror
fadd
fsub
movs
fisub
(bad)
iret
dec
test
inc
test
push
int3
rcr
mov
(bad)
fcomp
out
scas
cmps
adc
fld
int3
cmc
iret
into
lods
sbb
nop
lods
leave
leave
dec
fcmovb
mov
test
cmps
mov
(bad)
fcomp
leave
nop
lods
leave
leave
mov
enter
leave
stos
fild
lahf
cdq
cmp
mov
mov
xchg
(bad)
iret
sahf
stos
or
iret
lods
stos
mov
iret
fcomp
cdq
mov
mov
cdq
add
cmps
push
mov
sbb
xchg
leave
iret
lods
add
lods
sbb
test
ror
retf
and
mov
(bad)
fcomp
enter
leave
mov
enter
iret
stos
fistp
lahf
mov
call
mov
mov
xchg
(bad)
iret
lahf
stos
test
mov
iret
fld
mov
(bad)
into
cwde
xchg
test
shl
stos
mov
(bad)
fbstp
push
enter
into
and
fisubr
leave
jnp
adc
or
daa
mov
push
fcomp
fmul
(bad)
nop
lods
leave
leave
mov
xchg
lods
leave
enter
leave
stos
fbld
lahf
ret
(bad)
call
scas
lock
fsub
iret
pop
movs
add
add
loop
cdq
mov
retf
xchg
add
cmps
mov
cmc
rcr
(bad)
rcl
shl
into
lods
add
movs
leave
leave
hlt
(bad)
rol
enter
into
movs
out
mov
(bad)
fadd
nop
lods
leave
leave
sbb
sbb
pop
shr
sbb
lods
xchg
lods
outs
mov
fmul
iret
dec
cmps
stos
ret
stos
iret
pop
cmps
stos
ret
push
ret
cmc
fistp
lahf
add
cmps
jnp
jne
(bad)
xor
adc
iret
lods
ss
(bad)
(bad)
int3
ret
pop
cmps
leave
leave
mov
mov
aad
cmps
lods
mov
aad
fmul
leave
sti
les
cmps
leave
enter
ret
adc
and
sbb
iret
mov
fcomp
aam
rcr
iret
push
cmps
mov
cmps
mov
vpaddq
xchg
add
cmps
in
mov
aam
fistp
lods
mov
lods
dec
les
rol
mov
test
cmps
mov
rcr
fcom
ret
or
and
daa
lds
xchg
fldcw
mov
fdivr
shl
aam
iret
mov
xchg
fwait
les
mov
xchg
add
cmps
cmp
aad
iret
iret
lods
pop
(bad)
cmc
iret
into
lods
push
lds
rol
mov
test
cmps
mov
(bad)
fdiv
leave
pop
ret
leave
enter
leave
mov
mov
aad
lods
mov
fdivr
rcr
mov
cmc
mov
call
test
lahf
mov
cmps
cmps
cmp
(bad)
fcom
fild
iret
(bad)
lods
data16
call
enter
leave
lods
fistp
sahf
xchg
pusha
cmps
mov
fmulp
fsubr
ror
push
enter
lods
retf
lods
ffreep
lods
fist
lea
cmps
aad
mov
mov
(bad)
iret
xchg
mov
shr
aam
lahf
mov
mov
mov
mov
(bad)
fcomp
fldcw
lods
ror
lods
into
enter
cwde
mov
adc
lods
test
fcom
fdiv
iret
enter
clc
(bad)
lods
push
leave
(bad)
lods
jecxz
lods
ficomp
lahf
dec
test
cmps
mov
fist
fld
iret
icebp
lods
iret
enter
mov
ror
in
fist
pop
lods
call
fcom
into
(bad)
pop
into
jmp
lods
neg
leave
lods
push
enter
mov
xchg
cmps
aad
lods
and
fmulp
add
enter
jge
iret
leave
fidiv
sahf
xchg
pusha
cmps
icebp
mov
(bad)
xor
leave
lods
(bad)
retf
push
lods
iret
leave
leave
lods
(bad)
fld
push
lahf
push
test
cmps
ja
out
fdivr
(bad)
fxch
iret
mov
into
sahf
lods
daa
enter
leave
sub
lahf
mov
rcr
scas
lods
or
fbstp
fcomp
fldcw
lods
cdq
enter
enter
call
push
aad
lods
mov
fcom
fimul
lods
(bad)
mov
enter
lahf
lods
cmp
scas
fimul
lahf
dec
test
aad
lods
test
mov
fist
fld
enter
mov
xchg
leave
push
fistp
xchg
test
fcomp
retf
(bad)
(bad)
lods
lods
(bad)
enter
lods
(bad)
fmul
lods
push
enter
mov
xchg
cmps
aad
scas
into
cmps
mov
mov
int3
fmulp
add
shr
leave
movs
fdiv
mov
test
mov
mov
(bad)
rcr
leave
lods
push
enter
lods
iret
leave
leave
lods
lahf
fsubr
mov
aad
mov
aam
cld
(bad)
(bad)
iret
push
mov
mov
lods
iret
leave
adc
lahf
mov
cld
lahf
test
cmps
aam
lods
inc
mov
mov
out
(bad)
into
leave
lods
retf
fild
popf
lods
iret
enter
sahf
mov
repz
lods
test
fcom
fcomp
into
leave
lods
(bad)
hlt
fxch
lods
push
leave
dec
lods
xchg
enter
mov
pushf
test
fsubr
into
(bad)
pop
fst
stos
lods
into
enter
mov
inc
leave
(bad)
mov
test
sub
mov
fcom
jne
gs
lods
fcomp
leave
lods
inc
enter
mov
xchg
cmps
aad
lods
adc
(bad)
fistp
lods
jno
sbb
retf
enter
leave
and
and
xchg
and
add
(bad)
sub
enter
lods
int
leave
lods
in
shr
inc
sahf
test
cmps
xor
aad
fmulp
dec
mov
leave
movs
int3
jbe
add
ret
leave
xor
lahf
mov
test
mov
adc
adc
(bad)
leave
lods
jne
lods
iret
leave
lods
pop
enter
enter
nop
mov
ja
mov
mov
or
lods
xlat
shl
shr
lods
dec
aam
mov
call
aad
mov
cmps
scas
mov
fcomp
not
mov
aam
lods
fxch
or
outs
xchg
and
sbb
mov
mov
sbb
fmul
nop
lea
leave
stos
iret
sub
xor
push
test
xchg
not
call
ror
iret
lods
inc
jmp
jbe
leave
leave
outs
cld
pop
mov
test
cmps
mov
(bad)
fcom
call
call
enter
enter
mov
inc
lods
sbb
mov
mov
rcr
fmul
fld
sbb
and
sub
sahf
mov
test
cmps
(bad)
xchg
xor
fcomp
cmp
jb
enter
sbb
fisubr
leave
jmp
mov
scas
data16
cmps
scas
mov
iret
fadd
dec
std
or
fmulp
hlt
sahf
or
mov
mov
aad
lods
fs
adc
stos
fsub
rcr
std
lahf
ror
lods
sahf
cli
cmps
fimul
sahf
nop
test
out
scas
mov
fcmove
fisttp
jmp
int
lods
ds
mov
cld
ret
lods
fxch
xchg
jmp
mov
test
cmps
test
push
in
test
sti
shr
bound
enter
mov
mov
or
scas
lods
enter
lods
fmul
aam
enter
call
cdq
dec
leave
fild
mov
test
jecxz
lods
scas
cmps
shl
adc
(bad)
push
xor
pop
int3
into
lods
push
xchg
bound
xor
lea
mov
xchg
int
movs
mov
(bad)
fcomp
stos
dec
lods
leave
leave
imul
mov
mov
scas
lods
lods
shl
pop
fxch
iret
lods
retf
mov
leave
fsubr
mov
movs
fwait
xchg
test
(bad)
mov
(bad)
scas
mov
into
enter
cld
retf
leave
lods
data16
popf
mov
mov
test
cmps
mov
(bad)
fadd
mov
push
mov
(bad)
mov
stc
cmp
popa
aad
lods
xor
xor
jnp
iret
iret
sbb
gs
iret
cmp
pusha
int3
fsubr
mov
test
cmps
add
jl
enter
sbb
fild
lods
(bad)
mov
cdq
test
loopne
sub
mov
fld
test
or
aas
mov
mov
enter
retf
into
or
pop
sar
mov
call
leave
stos
iret
xchg
sub
retf
mov
push
push
inc
lahf
add
es
into
fisttp
retf
in
dec
fxch
sahf
sub
dec
mov
pop
jmp
xor
in
fsub
lods
fimul
test
inc
test
pop
int3
lods
fistp
sbb
add
and
mov
jnp
(bad)
imul
sbb
pusha
int
lods
iret
dec
push
fistp
sahf
xchg
test
jmp
pop
pop
into
enter
sub
leave
lods
sub
lods
into
leave
mov
mov
aad
and
rcl
fcmovu
fcomp
arpl
lods
into
enter
leave
lods
fild
dec
mov
mov
mov
sbb
(bad)
xchg
and
mov
add
enter
ficomp
add
sahf
xchg
test
push
xor
fcomp
ficom
into
enter
mov
inc
(bad)
lods
into
leave
hlt
push
nop
mov
test
cmps
mov
(bad)
fcom
inc
sbb
dec
lods
leave
enter
retf
stos
fild
or
or
lods
test
adc
jp
fcomp
iret
lods
or
int
iret
dec
or
int3
iret
lods
push
ins
sub
cdq
mov
das
add
cmp
(bad)
fldcw
sub
fist
shl
stos
cdq
dec
push
movs
(bad)
lea
push
pop
or
jle
fmul
stos
cdq
dec
cmps
push
fimul
lock
cli
pop
mov
cdq
imul
out
jmp
mov
call
into
cli
dec
cdq
or
leave
lods
fisttp
lahf
xchg
test
ret
(bad)
(bad)
leave
lods
iret
leave
mov
enter
call
cwde
mov
aad
mov
fadd
iret
test
fld
leave
enter
mov
clc
aad
lods
aad
mov
(bad)
sub
lods
push
call
int3
enter
leave
scas
fist
mov
push
iret
fsubr
mov
fcom
mov
int
mov
enter
shr
popf
mov
test
lahf
xchg
cmps
mov
(bad)
fcomp
iret
cwde
mov
leave
test
sbb
iret
enter
retf
xor
or
xchg
imul
fmulp
dec
lods
add
or
into
lods
sti
in
leave
lods
iret
leave
jmp
lahf
(bad)
mov
scas
mov
(bad)
mov
fmulp
leave
lods
mov
xor
pop
lods
leave
enter
leave
lods
(bad)
mov
sbb
mov
mov
(bad)
adc
leave
lods
iret
leave
jmp
lods
daa
in
lods
fistp
add
mov
cmps
mov
ret
(bad)
iret
lea
fisubr
leave
add
lahf
mov
fwait
adc
mov
mov
mov
fbld
push
ret
out
lods
iret
enter
int3
mov
leave
mov
mov
retf
movs
cmps
xchg
enter
jae
ror
in
lods
iret
enter
(bad)
call
mov
mov
cmps
mov
sbb
(bad)
(bad)
fmul
movs
mov
mov
enter
leave
jno
dec
mov
test
mov
dec
hlt
(bad)
fmulp
scas
cmps
pop
call
imul
lods
iret
leave
retf
test
ds
cmps
aad
lods
iret
lods
or
push
fmul
(bad)
fcomp
iret
retf
rcr
lods
fcmove
leave
lods
iret
leave
scas
(bad)
mov
jno
xchg
test
cmps
clc
mov
(bad)
fcomp
iret
leave
lods
int3
leave
jmp
lods
add
lods
fistp
test
test
cmps
mov
vpsubusw
iret
rol
into
lods
movs
in
int3
lods
ror
clc
repz
mov
mov
cmp
(bad)
(bad)
mov
in
iret
enter
cli
mov
enter
movs
mov
cmp
cmps
(bad)
xchg
mov
fdivr
jmp
enter
iret
lods
shr
test
cmps
test
call
mov
(bad)
fmul
bound
in
iret
enter
leave
ja
clc
mov
cmps
aad
mov
mov
pop
icebp
(bad)
fmulp
scas
cmps
mov
xchg
into
loopne
push
out
lods
iret
leave
retf
scas
mov
cmps
aad
lods
iret
movs
leave
sahf
xchg
lock
neg
iret
leave
lods
test
lods
in
rol
mov
lods
(bad)
sahf
lods
test
cli
mov
mov
repz
leave
lods
iret
leave
retf
test
out
fistp
test
test
cmps
mov
test
iret
leave
lods
iret
fisubr
leave
cwde
out
lahf
mov
scas
clc
aam
lods
cmp
iret
fild
mov
sti
lods
iret
enter
test
retf
mov
nop
test
int3
lods
xchg
cmps
mov
fcom
leave
mov
enter
ror
(bad)
mov
mov
mov
cmps
(bad)
mov
(bad)
fcomp
iret
pop
sbb
iret
enter
leave
pusha
repnz
xchg
inc
mov
mov
(bad)
fmulp
iret
lods
out
out
into
mov
leave
stos
fbld
lahf
fidiv
scas
cmps
retf
fcomp
leave
lods
leave
leave
cmp
scas
lods
mov
add
sahf
mov
movs
sbb
mov
mov
cwde
fcomp
iret
leave
lods
int3
leave
jmp
lods
iret
leave
lods
fistp
js
in
aad
lods
test
fistp
std
inc
fst
leave
lods
iret
into
mov
shl
or
jmp
mov
lods
popa
xchg
mov
fsub
lods
cmps
jmp
jae
retf
fistp
mov
inc
in
lods
cli
cmps
mov
mov
lods
fwait
leave
jl
enter
iret
lods
ss
xor
retf
mov
test
mov
in
cmps
jmp
fmul
iret
push
call
iret
enter
leave
popa
jmp
cmp
scas
lods
push
nop
cli
mov
(bad)
fmulp
fsubr
lods
shl
leave
lods
iret
leave
mov
mov
lahf
cli
mov
mov
fimul
iret
leave
lods
fmulp
jne
mov
leave
lods
fisttp
lahf
rol
test
loopne
fisttp
lods
iret
leave
mov
enter
mov
sub
jnp
test
fadd
call
leave
lods
iret
fldcw
leave
jl
lahf
mov
mov
dec
loop
mov
mov
push
pushf
lods
xchg
mov
jo
jnp
cli
(bad)
into
mov
mov
cmps
pop
(bad)
mov
fsubr
cmc
lea
lods
iret
enter
repz
int
lahf
xchg
out
out
aaa
lahf
(bad)
(bad)
iret
iret
cmp
call
lods
fmulp
cdq
in
mov
mov
aad
lods
int3
popf
cli
mov
(bad)
fmulp
fsubr
lods
ja
leave
lods
iret
leave
mov
mov
lahf
ret
aad
lods
mov
fadd
iret
leave
lods
fmulp
int
mov
leave
lods
fisttp
lahf
fadd
test
in
fild
iret
leave
mov
enter
sub
mov
out
test
fsubr
fiadd
lods
iret
fldcw
leave
jo
lahf
mov
mov
(bad)
jmp
xlat
out
int
lods
push
test
mov
fild
lahf
xchg
test
shr
mov
fdivr
icebp
mov
or
lods
(bad)
neg
ffree
mov
les
aad
xchg
fsub
(bad)
fmul
iret
push
xchg
jne
repnz
jl
iret
enter
leave
push
loopne
mov
mov
xchg
and
mov
(bad)
fmulp
fild
lods
xor
mov
mov
lahf
ret
aad
lods
mov
fadd
iret
leave
lods
fxch
jns
mov
leave
lods
fisttp
popf
fld
test
cdq
pop
fnstsw
iret
leave
mov
retf
inc
fwait
lods
fistp
fisttp
xchg
aad
jmp
fcomp
popf
dec
fidiv
leave
lods
iret
fldcw
leave
mov
lahf
mov
(bad)
loop
(bad)
lods
jne
mov
fild
lods
dec
pushf
lods
iret
enter
inc
out
mov
(bad)
fimul
test
xchg
sub
fcomp
(bad)
fdiv
mov
leave
pop
cdq
enter
fsubr
mov
test
movs
sar
(bad)
enter
push
ret
hlt
iret
enter
leave
std
call
xchg
xor
into
mov
(bad)
fmulp
fild
lods
sub
mov
mov
lahf
and
cmps
aad
lods
mov
fisubr
iret
leave
lods
fmulp
cmp
popa
test
mov
cmc
popf
cmc
test
mov
mov
stos
fmul
xchg
leave
lods
iret
leave
mov
retf
outs
xchg
lods
fistp
fdivr
lock
fdiv
xchg
sbb
cmps
iret
push
repnz
leave
lods
iret
fldcw
leave
adc
lahf
mov
int
xlat
ret
lods
in
mov
fist
lods
mov
lods
iret
enter
pusha
in
leave
rcr
mov
mov
push
pushf
pusha
scas
sub
(bad)
enter
push
scas
dec
leave
sub
lods
or
ret
call
mov
scas
out
movs
cmp
(bad)
enter
or
sub
cmp
iret
enter
leave
imul
aad
lods
test
into
mov
(bad)
fmulp
fsubr
lods
rep
leave
lods
iret
leave
mov
mov
lahf
repnz
aad
lods
mov
ficom
ss
fxch
sbb
enter
leave
lods
fisttp
popf
adc
lods
test
xchg
fcmovnu
dec
fcomp
leave
lods
iret
leave
mov
retf
push
lods
arpl
popf
mov
xchg
aad
retf
test
fsubr
iret
mov
iret
leave
lods
iret
fisubr
leave
sbb
xchg
lahf
cmp
(bad)
xlat
sbb
mov
mov
int3
ins
lods
dec
mov
fmulp
mov
mov
or
push
jecxz
mov
test
sar
rol
lea
lods
iret
enter
cwde
sbb
test
jb
in
cmps
push
mov
(bad)
iret
(bad)
adc
loop
add
mov
iret
enter
ror
mov
mov
aad
lea
mov
(bad)
pop
iret
fisttp
lods
iret
enter
leave
mov
mov
lahf
xchg
mov
(bad)
fcomp
iret
dec
lods
fldl2t
mov
enter
leave
sub
mov
aaa
test
cmps
test
mov
sbb
fcomp
iret
leave
lods
dec
leave
mov
retf
jno
iret
leave
lods
fistp
mov
xchg
aad
lods
test
clc
sub
stos
fistp
iret
leave
lods
iret
leave
sub
fimul
leave
lods
fistp
mov
je
test
fmul
push
dec
int3
add
iret
dec
lods
fld1
lock
push
retf
lahf
mov
movs
sub
mov
(bad)
clc
aas
xchg
outs
scas
sbb
lods
iret
enter
fisttp
mov
test
movs
imul
fmul
iret
fdiv
(bad)
leave
jp
sbb
iret
enter
leave
int
sub
xchg
add
or
(bad)
fmulp
fild
lods
pop
movs
leave
lods
iret
leave
mov
mov
xchg
jmp
aad
lods
mov
fadd
fbstp
lods
fxch
test
enter
leave
lods
fisttp
pushf
pop
test
cmps
test
add
mov
mov
retf
sub
mov
xchg
inc
ret
mov
or
fmul
leave
lods
iret
fisubr
leave
sub
adc
mov
or
fmul
xchg
arpl
pop
enter
retf
pop
fbld
cli
mov
add
mov
mov
fmul
scas
cmp
enter
dec
mov
ror
fild
out
test
mov
push
movs
dec
mov
(bad)
pop
xlat
cmp
xor
iret
enter
leave
cdq
mov
in
jmp
test
mov
pop
stos
(bad)
(bad)
iret
pop
lods
stos
test
int3
cmp
sub
fisttp
jmp
xchg
lock
aad
lods
cmp
das
fisttp
lods
pop
leave
sbb
pop
fxch
leave
lods
fistp
nop
js
loop
jl
or
sub
fsub
ss
sub
cmp
retf
mov
sbb
pop
aad
fld
shr
mov
fcmove
leave
movs
iret
pop
lods
push
xor
lahf
mov
lahf
rcl
lods
mov
mov
fucomip
mov
stos
mov
iret
shr
push
fistp
icebp
mov
push
iret
popa
lods
push
cmps
push
sar
and
jo
enter
scas
scas
xchg
repz
mov
in
cmps
inc
mov
(bad)
dec
iret
in
retf
jmp
xlat
iret
enter
leave
dec
mov
test
cmp
mov
fcomp
iret
dec
lods
push
mov
lahf
dec
leave
lods
iret
leave
sub
outs
loopne
mov
aad
lods
das
cmps
lahf
shl
fcomp
fidiv
pop
fmulp
leave
lods
dec
leave
std
cmps
scas
lods
retf
leave
cmp
iret
leave
lods
fistp
mov
jecxz
sahf
add
cmp
fcmovnu
jbe
leave
lods
iret
leave
sub
fld
test
int3
lods
ror
fistp
test
test
cmps
mov
lds
fmul
push
sub
leave
lods
iret
dec
lods
(bad)
mov
sbb
mov
out
rcl
lods
sub
fcomp
mov
mov
into
lods
cmp
enter
jl
xchg
int
fiadd
push
mov
aaa
mov
stos
ds
fadd
mov
mov
enter
fild
mov
or
mov
retf
cmps
mov
das
push
(bad)
(bad)
enter
mov
mov
enter
leave
pop
mov
mov
test
enter
fld
(bad)
fmulp
fild
lods
pop
inc
leave
lods
iret
leave
mov
mov
aad
lods
mov
fmul
(bad)
push
fmulp
leave
lods
(bad)
movs
aad
lods
fcmove
popf
and
leave
lods
fisttp
fwait
xchg
test
cmps
scas
mov
enter
leave
lods
int3
leave
stos
xlat
cmp
iret
leave
lods
fistp
or
mov
cmps
mov
std
and
(bad)
lods
iret
leave
scas
iret
mov
ror
les
mov
lahf
xor
sub
fsub
call
cmp
enter
adc
or
mov
pop
push
mov
inc
in
lods
mov
(bad)
mov
lods
in
enter
lods
iret
enter
ror
fistp
lahf
xchg
ja
pushf
mov
(bad)
mov
int
into
in
cmp
enter
rcr
clc
mov
test
mov
imul
lods
push
mov
retf
pop
leave
lods
iret
leave
mov
mov
aad
lods
mov
fdivr
fimul
lods
fxch
lds
add
fisttp
fwait
stos
test
mov
mov
lock
leave
mov
int3
stc
lods
pop
imul
xchg
aam
or
cmps
mov
test
fucomp
into
in
iret
leave
lods
iret
fisubr
enter
mov
repnz
lods
and
mov
ffreep
mov
jnp
lods
iret
enter
test
mov
sub
test
lods
scas
test
cmps
mov
mov
fdiv
mov
scas
dec
xchg
ins
enter
fild
mov
sub
aad
aam
movs
(bad)
mov
(bad)
enter
(bad)
retf
popf
into
jl
iret
enter
leave
dec
cmps
mov
cmp
test
mov
(bad)
fmulp
fild
lods
imul
lods
iret
leave
mov
mov
mov
ret
xchg
call
iret
leave
lods
fxch
xchg
mov
scas
dec
jne
iret
leave
lods
fisttp
pushf
mov
dec
jbe
lods
test
mov
(bad)
imul
iret
leave
mov
retf
clc
lods
xchg
fistp
jecxz
xchg
cmps
mov
mov
popa
or
leave
lods
iret
fisubr
enter
mov
stc
pop
(bad)
mov
fmul
fild
movs
daa
int3
clc
lods
imul
enter
in
shl
retf
imul
nop
test
test
scas
cwde
cmps
es
fcomp
(bad)
fadd
xor
enter
fild
mov
test
mov
lds
(bad)
fmul
iret
cwde
shl
or
enter
leave
cmp
cmc
cmp
lods
jo
sar
(bad)
fmulp
fild
lods
movd
lods
iret
leave
mov
(bad)
mov
push
cmps
aad
lods
mov
fucomp
fsubrp
jg
iret
leave
lods
leave
rcr
scas
lods
cld
leave
test
iret
leave
lods
fisttp
call
test
pop
in
jmp
mov
leave
mov
retf
punpcklwd
push
pop
mov
add
cmps
mov
pop
cmc
fucomp
into
lea
fisubr
enter
mov
add
rol
mov
fistp
retf
fwait
arpl
shl
and
test
imul
mov
fdivr
enter
lods
iret
enter
dec
repnz
lahf
xchg
int3
mov
(bad)
(bad)
enter
mov
add
enter
rcr
inc
mov
mov
xor
scas
fs
mov
(bad)
fmulp
scas
scas
sbb
iret
mov
iret
leave
retf
or
mov
sahf
sbb
cmps
aad
lods
iret
movs
dec
cmp
jp
fmulp
leave
lods
test
lods
mov
gs
leave
lods
fistp
lahf
ret
js
lods
test
ret
call
leave
stos
iret
dec
daa
sub
sub
mov
sub
das
add
fadd
push
xor
add
leave
mov
into
lods
cmps
inc
and
lahf
mov
or
lods
mov
fcomp
(bad)
push
sub
xchg
call
and
int3
jecxz
repz
mov
and
test
cmps
es
mov
fmul
inc
leave
stos
sahf
enter
lods
out
enter
inc
lods
fxch
mov
test
xlat
and
push
fmul
jge
enter
sbb
jmp
push
xchg
mov
mov
das
xchg
in
mov
in
fnstcw
(bad)
dec
iret
lods
push
inc
mov
js
lods
out
leave
stos
fistp
sahf
mov
sahf
jle
cmps
aad
lods
scas
cmps
mov
sbb
fmulp
imul
leave
loopne
in
xchg
leave
sbb
sbb
mov
mov
test
jb
leave
lods
iret
leave
stos
iret
adc
enter
js
fistp
push
push
test
aam
sbb
cmps
mov
dec
out
or
push
iret
leave
lods
iret
into
lods
dec
pop
in
xchg
enter
mov
adc
aad
lods
in
mov
(bad)
dec
inc
into
xchg
lods
dec
jnp
iret
enter
test
push
leave
repnz
cmp
test
inc
daa
lods
mul
(bad)
fcomp
push
pop
push
lods
nop
enter
lods
iret
enter
pop
xor
ror
test
mov
(bad)
(bad)
fmul
test
into
loopne
iret
enter
leave
xor
mov
sub
test
xor
pop
ins
(bad)
fmulp
iret
lods
pop
pop
or
leave
lods
iret
leave
stos
fbstp
mov
in
ds
aad
lods
scas
cmps
mov
sbb
fidiv
imul
leave
lods
leave
leave
xchg
pop
icebp
lods
scas
leave
rcr
leave
lods
fistp
lahf
out
and
test
dec
loopne
mov
lods
iret
leave
stos
iret
push
lods
xchg
jge
fistp
or
sbb
fadd
dec
out
mov
leave
lods
iret
leave
lods
cmps
pop
scas
lods
lods
enter
mov
adc
adc
fild
dec
stc
into
lods
lods
cmp
enter
mov
(bad)
iret
retf
ficomp
lahf
xchg
ret
cmps
add
fadd
pop
push
lods
mov
lods
iret
enter
pop
xor
repnz
xor
aad
cmp
mov
(bad)
(bad)
fmul
and
test
ret
into
mov
lods
into
leave
test
(bad)
mov
mov
xchg
icebp
fistp
(bad)
fmulp
iret
lods
pop
push
(bad)
lods
inc
ja
lods
iret
leave
lods
fistp
sahf
ds
cmps
aad
lods
scas
cmps
mov
(bad)
lods
fidivr
sbb
iret
leave
lods
into
leave
loopne
cmps
stos
mov
leave
lods
fistp
cdq
icebp
test
cmps
mov
fldenv
lods
dec
leave
mov
into
mov
fwait
or
jns
sbb
cmps
mov
inc
mov
lods
iret
leave
scas
iret
into
mov
shl
lods
dec
enter
mov
movs
cmp
cmps
mov
fcomp
and
dec
lods
iret
leave
lods
iret
retf
lods
mov
or
lahf
mov
popf
push
iret
push
lods
and
fcmovu
cwde
(bad)
out
jnp
inc
enter
lods
int3
enter
jmp
fist
mov
test
(bad)
jg
push
mov
(bad)
(bad)
fcom
cmp
sbb
enter
rol
mov
mov
aad
movs
push
cmp
mov
(bad)
(bad)
iret
mov
rol
pop
lods
iret
enter
leave
jmp
sahf
xchg
out
movs
cmp
(bad)
fmulp
retf
retf
sbb
iret
leave
scas
fistp
lahf
sbb
cmps
aad
lods
stos
cmps
clc
mov
inc
(bad)
iret
leave
lods
int3
leave
jmp
lods
iret
leave
lods
fistp
cmp
test
shr
xor
jge
leave
lods
iret
leave
scas
iret
mov
push
lods
fistp
pushf
add
test
fcomp
leave
bound
retf
lods
leave
sar
mov
leave
add
lahf
mov
xchg
dec
stos
sbb
fcmovu
cwde
fistp
aaa
lods
jnp
lods
iret
enter
(bad)
scas
por
mov
int
mov
cmps
or
fstp
cwde
int3
aaa
lea
adc
enter
retf
popa
mov
mov
aad
scas
imul
iret
iret
mov
rol
or
int3
leave
jmp
sahf
xchg
out
movs
cmp
(bad)
fmulp
retf
retf
shr
iret
leave
lods
fistp
lahf
dec
test
adc
mov
pop
(bad)
leave
lods
iret
leave
lods
iret
fimul
in
add
lahf
mov
sub
lods
test
inc
mov
aaa
ret
fmulp
enter
lods
iret
leave
lods
dec
aam
lods
into
leave
or
lahf
mov
test
cmps
mov
(bad)
fmul
leave
xor
enter
and
stos
xchg
mov
cmps
aad
lods
fs
push
(bad)
(bad)
fmul
ins
mov
leave
scas
iret
or
jmp
mov
test
hlt
mov
cwde
mov
stc
fmulp
enter
lods
iret
retf
jmp
lahf
mov
test
cmps
mov
(bad)
fcom
leave
aaa
jmp
lods
into
enter
leave
lods
(bad)
lods
mov
cmps
aad
lods
bound
(bad)
(bad)
(bad)
repnz
leave
lods
iret
mov
lods
inc
out
lods
fistp
lahf
xchg
test
cmp
mov
(bad)
fmulp
retf
lods
sbb
lods
and
leave
lods
into
leave
mov
mov
mov
test
mov
(bad)
fdivr
out
lods
into
leave
pushf
in
lods
int
test
jecxz
mov
cmps
aad
lods
dec
mov
hlt
(bad)
fcmove
stc
xchg
leave
lods
iret
mov
iret
enter
loop
fistp
lahf
test
stos
cmps
mov
mov
lods
push
in
iret
retf
lods
jnp
leave
lods
into
leave
aam
lahf
mov
test
cmps
mov
(bad)
fcom
loope
lods
into
leave
dec
loope
lods
int
leave
or
lods
fild
lahf
mov
lods
ror
lock
(bad)
add
aam
iret
enter
stc
lods
fistp
lahf
xchg
stos
cmps
and
sbb
fmulp
enter
lods
iret
leave
lods
jb
leave
lods
into
leave
xor
lahf
mov
test
cmps
mov
(bad)
fmul
cmc
leave
lods
into
leave
loope
enter
push
xchg
iret
leave
lods
fisttp
lahf
out
cmps
aad
lods
je
mov
sahf
(bad)
fmul
cwde
in
iret
leave
scas
iret
movs
in
iret
enter
mov
test
mov
sti
mov
call
lods
iret
leave
lods
ds
lods
into
leave
mov
lahf
mov
test
cmps
mov
(bad)
fdiv
mov
lods
into
leave
cdq
mov
lods
into
enter
leave
lods
fist
mov
cmps
aad
lods
dec
cmp
(bad)
(bad)
mov
iret
inc
jmp
enter
mov
test
mov
icebp
mov
nop
fmulp
retf
lods
or
fiadd
adc
cmps
aad
in
cmps
mov
(bad)
fcomp
leave
and
pusha
out
leave
lods
fild
mov
cmps
aad
lods
hlt
in
mov
xchg
(bad)
(bad)
cmp
iret
leave
scas
iret
fchs
iret
enter
test
test
mov
hlt
mov
xchg
fmulp
retf
lods
mov
lods
iret
retf
lods
pop
test
lods
into
leave
dec
xchg
lahf
mov
test
cmps
mov
(bad)
fcom
leave
lods
int3
leave
or
or
iret
leave
test
mov
mov
mov
(bad)
fcmove
mov
iret
leave
test
enter
xchg
test
mov
jmp
mov
inc
out
lods
iret
leave
lods
push
cwde
leave
lods
into
leave
mov
clc
into
xchg
test
mov
(bad)
fdivr
popf
leave
lods
into
leave
and
enter
leave
scas
fistp
mov
cmps
aad
lods
cwde
cmc
mov
mov
fcomp
iret
mov
iret
jge
iret
enter
call
test
mov
in
mov
mov
iret
int
inc
popf
lods
iret
leave
lods
push
pushf
leave
lods
int
pop
mov
retf
mov
cmps
mov
(bad)
fsubr
leave
lods
int
add
enter
leave
lods
fisttp
lahf
stos
shl
lock
mov
fcomp
iret
dec
cli
iret
leave
lods
iret
add
lods
es
lods
fistp
add
cmps
sub
fcomp
fild
lods
pop
sahf
lods
iret
leave
lods
push
lahf
leave
lods
int
dec
mov
mov
mov
(bad)
scas
xchg
leave
lods
into
leave
add
enter
leave
lods
fbld
mov
cmps
aad
lods
in
cld
mov
test
fcomp
iret
cmp
iret
leave
lods
iret
cmc
test
xchg
lods
fistp
lahf
xchg
test
aas
in
fcomp
fild
fmulp
enter
lods
iret
retf
xchg
leave
lods
int3
leave
lea
mov
aad
lock
test
(bad)
fcomp
xchg
leave
lods
retf
leave
jno
enter
(bad)
repnz
leave
lods
ffreep
(bad)
mov
cmps
aad
lods
cmp
mov
sbb
repz
leave
scas
iret
loope
iret
enter
xchg
lods
fistp
lahf
test
stos
cmps
arpl
mov
mov
retf
iret
leave
lods
or
pop
mov
sar
xchg
test
mov
retf
lods
leave
lods
into
leave
cmp
sub
iret
leave
lods
fisttp
lahf
stos
loopne
aad
lods
lock
mov
mov
dec
retf
iret
leave
scas
iret
jge
iret
enter
mov
sbb
test
mov
sar
mov
iret
enter
lods
iret
leave
lods
push
mov
lods
mov
mov
test
cmps
mov
(bad)
fdivr
leave
lods
into
leave
lea
movs
ret
scas
fist
out
mov
aad
lods
push
fcom
mov
fcomp
iret
nop
ret
iret
leave
lods
iret
test
iret
enter
mov
sub
test
mov
leave
mov
test
idiv
dec
mov
or
mov
out
xchg
test
stos
(bad)
(bad)
fist
in
enter
lods
fmulp
leave
scas
fistp
cli
mov
cmps
aad
lods
test
mov
stos
(bad)
(bad)
dec
fmul
leave
scas
iret
imul
jb
lods
fistp
lahf
add
cmps
xchg
int3
mov
lods
fmulp
retf
lods
pop
mov
cs
jns
lahf
mov
test
cmps
mov
(bad)
fsubr
dec
leave
lods
into
leave
sub
enter
leave
lods
fbstp
mov
cmps
aad
lods
movs
and
lock
(bad)
(bad)
mov
iret
leave
lods
iret
mov
iret
enter
sahf
lods
fistp
lahf
xchg
stos
cmps
fwait
cmp
lahf
pop
fmulp
enter
lods
iret
leave
lods
sub
lods
int
lods
push
lahf
mov
test
cmps
mov
(bad)
fsubr
leave
lods
into
leave
lods
inc
enter
test
iret
leave
lods
fild
add
mov
mov
mov
(bad)
(bad)
jge
iret
leave
lods
iret
enter
enter
lods
fistp
lahf
xchg
test
mov
mov
push
fmulp
enter
lods
iret
leave
lods
fistp
lods
into
leave
les
mov
test
cmps
mov
(bad)
fsubr
pop
leave
lods
into
leave
add
lods
into
enter
leave
lods
(bad)
sbb
adc
xor
dec
(bad)
fmul
jne
iret
leave
lods
iret
sar
enter
pop
lods
fistp
lahf
test
stos
cmps
push
das
mov
dec
fmulp
retf
lods
xor
iret
leave
lods
xchg
lods
into
leave
cmp
mov
test
cmps
mov
(bad)
fsubr
leave
cmp
enter
gs
leave
lods
fistp
mov
cmps
aad
lods
sub
fmul
inc
(bad)
(bad)
aad
iret
leave
lods
iret
pushf
ss
enter
push
lods
fistp
add
cmps
jp
mov
inc
fmulp
enter
lods
iret
leave
lods
call
lods
int
loopne
lahf
mov
test
mov
(bad)
fmul
push
leave
lods
into
leave
lods
push
enter
stc
xor
leave
scas
(bad)
adc
mov
mov
mov
(bad)
fmul
jne
iret
leave
scas
iret
adc
iret
enter
push
lods
fistp
lahf
xchg
stos
cmps
cmp
fcomp
(bad)
inc
fmulp
enter
lods
iret
retf
push
leave
lods
into
leave
cmc
inc
lahf
mov
test
cmps
mov
(bad)
fcomp
push
leave
lods
into
leave
lea
lods
int
hlt
xor
leave
lods
ffreep
pop
mov
cmps
aad
lods
cmp
mov
inc
(bad)
(bad)
cmp
iret
leave
lods
iret
jmp
lods
repnz
shl
lods
test
das
sbb
js
iret
retf
imul
(bad)
lock
mov
test
cmps
mov
(bad)
fsub
leave
xor
enter
leave
lods
fisttp
mov
cmps
aad
lods
mov
fsub
jge
fcomp
iret
icebp
xor
leave
lods
iret
mov
lods
dec
imul
lahf
test
test
sbb
fild
jp
iret
retf
push
iret
int3
lods
mov
lods
into
leave
fnstsw
mov
movs
aad
push
test
jnp
(bad)
fadd
ins
leave
lods
into
leave
pop
ins
enter
fmul
iret
leave
scas
fbstp
lahf
(bad)
cmps
aad
lods
and
mov
jnp
fcomp
iret
adc
iret
leave
lods
iret
mov
iret
enter
outs
lods
fistp
lahf
test
in
mov
out
fmul
fild
lods
in
int
in
xchg
enter
leave
fisubr
mov
jne
rcl
lods
pop
mov
dec
(bad)
cmp
inc
iret
push
lea
leave
xor
enter
out
xchg
fidiv
mov
lods
sbb
lods
add
js
sub
lods
data16
out
into
popa
lods
(bad)
lods
leavew
lahf
idiv
mov
mov
aad
popf
ins
cmps
pop
mov
fdivr
push
lods
jbe
inc
inc
lods
jbe
cmp
ins
xchg
in
mov
jnp
stos
rcr
lods
loope
mov
out
popa
fstp
iret
sub
pushf
add
js
por
fisttp
mov
loop
pop
test
fsubr
(bad)
dec
fild
pop
mov
dec
retf
iret
cdq
test
test
(bad)
mov
xor
dec
mov
cmps
fistp
xchg
sub
int
aad
lods
leavew
cmp
ins
xchg
mov
mov
mov
sub
fcmovnu
pop
int3
cmp
cmp
cmp
sbb
loop
dec
xchg
mov
mov
sub
test
ror
iret
stc
scas
adc
movs
dec
inc
ja
add
mov
dec
mov
cmps
mov
(bad)
fsubr
leave
pop
aad
lods
ret
enter
leave
mov
mov
aad
lods
push
mov
and
mov
dec
int3
cmp
or
xor
(bad)
inc
mov
sbb
lods
jo
mov
fdivp
jno
iret
mov
scas
cmp
int3
lods
cmps
enter
mov
mov
add
movs
(bad)
mov
out
fisubr
retf
pop
aad
movs
cmps
leave
mov
push
enter
and
mov
fwait
or
fsubr
scas
xor
sub
inc
fmul
and
push
add
push
mov
loop
loop
push
iret
fsubr
mov
test
xchg
jno
lds
lds
mov
cmp
dec
ss
test
aad
add
lods
(bad)
mov
stos
fsubr
retf
sub
lods
xchg
enter
leave
lock
and
lahf
rcl
lods
in
mov
cmp
and
iret
lds
retf
iret
jmp
lods
cld
arpl
and
push
mov
adc
jb
into
mov
mov
lods
dec
bound
jbe
xor
adc
dec
mov
cmps
out
sbb
fld
fisubr
retf
ins
cmps
push
retf
scas
iret
push
frstor
and
mov
lahf
mov
or
mov
ficomp
jne
fcom
int
push
test
iret
adc
test
inc
mov
fwait
pop
xchg
mov
adc
pusha
fisubr
test
imul
xchg
cmp
mov
mov
movs
aas
mov
pop
fucomp
fs
dec
leave
pop
aad
lods
dec
enter
ret
sub
or
lock
mov
lods
in
cld
mov
fsub
iret
cmp
jbe
push
ret
pop
lods
add
aam
mov
and
lahf
sbb
xor
rcl
xchg
jno
lds
cmp
xchg
into
inc
lods
jns
shl
add
loope
aaa
aam
push
mov
ret
neg
mov
leave
(bad)
(bad)
into
cmp
push
and
mov
jne
dec
aad
lods
or
sub
mov
mov
leave
test
jl
mov
(bad)
(bad)
jbe
mov
call
lods
mov
aam
fdivr
jae
ret
shr
xchg
test
jbe
push
je
mov
mov
aad
add
lods
or
(bad)
fcomp
pop
data16
lods
stos
enter
ret
push
mov
lahf
stc
sub
fistp
pop
ja
jae
aam
into
(bad)
add
add
out
cmc
ret
pop
arpl
aad
mov
test
jl
cmps
adc
shl
mov
iret
mov
cmp
retf
iret
shr
leave
pop
(bad)
sub
pop
xlat
mov
push
stos
push
mov
xchg
fadd
pop
aad
stos
dec
retf
test
(bad)
and
mov
push
scas
fisttp
mov
jae
aad
int
add
int
add
gs
mov
fist
sbb
mov
je
mov
ret
cmp
scas
lods
(bad)
int3
ins
jae
mov
cmp
cmps
mov
daa
fdiv
arpl
into
retf
pop
mov
loop
and
xchg
lea
add
xchg
stos
mov
fldcw
(bad)
xlat
int
add
add
leave
add
pop
mov
daa
aaa
xchg
out
cmp
jl
shl
fiadd
adc
nop
test
xchg
test
push
int3
pop
lds
and
(bad)
aad
add
xlat
mov
mov
out
jbe
(bad)
leave
add
int
add
(bad)
in
fisubr
test
call
inc
or
mov
js
jg
push
add
(bad)
cmp
int
lods
and
mov
rcl
test
not
pusha
fstp
jbe
int
scas
frstor
rol
shr
jno
xchg
leave
mov
mov
jg
xchg
jbe
fistp
fldl2t
popa
lea
mov
imul
fcmovu
es
test
call
repz
mov
ins
(bad)
pop
into
mov
int
add
rcl
fcom
add
sahf
dec
test
jnp
lods
pusha
cmps
movhps
pusha
frstor
cmp
addr16
jno
inc
fs
mov
je
loop
cld
scas
inc
test
aad
add
(bad)
(bad)
xor
lds
pop
movs
ss
(bad)
cmc
ficom
lahf
shr
rcl
lods
xor
and
out
xlat
jp
adc
test
daa
aad
(bad)
lahf
fild
sbb
dec
fdivp
ja
retf
cli
data16
shr
retf
cld
jo
mov
(bad)
std
xor
mov
aad
add
cmps
ret
jno
aam
fcom
popaw
cmps
adc
out
or
sbb
cmp
retf
and
mov
lahf
stc
sub
fisttp
mov
js
dec
into
mov
int3
mov
test
pop
lods
dec
data16
xchg
mov
and
fistp
lods
and
fcomp
ins
jb
into
inc
lods
jge
fmul
leave
scas
ja
scas
lods
outs
retf
cdq
jae
cwde
sub
aaa
aam
add
mov
mov
mov
mov
aam
push
int
add
(bad)
ins
xchg
in
mov
pop
sub
push
scas
dec
or
mov
fcmovnu
pop
int3
cmp
xor
dec
iret
int
cmp
mov
rol
lahf
and
addr16
mov
mov
cmp
iret
sub
shr
arpl
mov
clc
mov
lahf
das
popf
xchg
jg
pushf
sbb
xchg
push
loope
push
lods
cs
mov
push
fdiv
fisubr
fwait
jl
ja
mov
or
ret
ins
leave
xchg
mov
int
mov
enter
jns
fbld
jne
jo
test
fsubr
cdq
aad
fist
scas
pop
mov
rcl
retfw
stos
call
call
xor
mov
xlat
fsubr
iret
xor
lods
dec
or
pop
stos
push
mov
lahf
rcl
scas
pop
mov
sub
mov
add
cmp
pusha
jns
fidivr
pop
es
cdq
lahf
sbb
les
xchg
fst
ins
jb
fld
jge
vmulpd
push
int3
jns
cmps
mov
xchg
dec
aad
pop
shr
ficom
ins
gs
int
inc
retf
jle
and
cwde
or
xor
mov
or
stos
xor
imul
push
int
push
or
and
fiadd
jge
jge
push
mov
and
jg
push
and
daa
fsubr
fcompp
imul
xor
cmp
ds
mov
xor
js
inc
xlat
lods
sbb
mov
add
inc
fisubr
stos
dec
retf
mov
icebp
lods
push
retf
cmp
sub
cdq
les
ds
adc
stos
cmp
jmp
js
xchg
hlt
sbb
sbb
push
mov
cmp
cmps
mov
std
fcomp
mov
scas
inc
js
fmul
pop
jns
mov
mov
jb
jbe
scas
xchg
push
aam
mov
mov
mov
aas
fidiv
test
retf
imul
xchg
enter
leave
sub
mov
xor
(bad)
scas
test
mov
fadd
retf
cmps
fisub
ss
fist
test
xrelease
mov
jl
lods
lds
rcr
ret
sub
cmp
add
lds
mov
(bad)
ins
and
xchg
dec
mov
mov
mov
pop
fsubr
jle
mov
adc
cmp
add
mov
mov
test
(bad)
fsubr
(bad)
pop
retf
fstp
push
leave
gs
in
push
xor
nop
test
out
lea
loop
test
xchg
int3
call
iret
adc
jns
icebp
jp
mov
lds
test
lock
lds
mov
jge
mov
dec
mov
xor
in
fucomp
cmp
mov
pushf
std
aaa
aas
rol
mov
dec
ins
je
out
cmp
cmp
cmp
retf
fcomip
mov
cmp
cdq
mov
movs
sbb
je
clc
fsubr
and
mov
test
mov
mov
jmp
(bad)
pop
pop
xchg
mov
mov
mov
pop
data16
lods
scas
retf
push
mov
mov
(bad)
cmp
lahf
in
pushf
mov
rol
(bad)
scas
jmp
and
and
fcmove
push
add
stos
pop
dec
(bad)
scas
cmps
jp
fistp
mov
sbb
jg
scas
lods
cmps
in
mov
fstp
jns
mov
xor
scas
mov
retf
mov
jmp
(bad)
pop
pop
into
cmps
mov
fild
mov
and
enter
ins
xchg
in
mov
cdq
jne
dec
aad
stos
aaa
adc
sub
xor
lahf
leave
addr16
xor
test
jo
mov
mov
fimul
scas
or
mov
xchg
(bad)
fcomip
fisub
ror
int
sti
retf
retf
fstp
lea
and
mov
fcmovu
fcom
leave
loopne
inc
test
mov
test
pop
sar
mov
mov
scas
mov
test
int
lods
mov
ficomp
call
lods
cmps
jmp
(bad)
retf
out
movs
leave
dec
stos
loope
iret
fimul
movs
mov
sahf
push
or
nop
mov
lock
leave
test
loop
dec
into
sbb
mov
sub
xchg
lods
or
dec
fiadd
shl
iret
inc
lods
dec
into
out
iret
fld
fmul
in
cld
mov
test
cmps
movs
mov
int
xchg
enter
enter
lods
aam
fwait
stos
outs
leave
mov
mov
aad
lods
das
mov
nop
fcomp
fcom
iret
sub
stos
or
cli
lods
sub
dec
fisttp
xchg
test
sar
mov
mov
(bad)
ret
into
mov
fld
leave
(bad)
fcomp
mov
test
cmps
lods
mov
(bad)
enter
enter
scas
aam
fwait
stos
out
retf
mov
int
test
xchg
sahf
iret
and
movs
lods
sti
mov
mov
mov
stos
dec
retf
mov
call
into
or
mov
popf
test
rcr
mov
fcmove
fist
lods
popf
into
outs
int
lods
xchg
sub
jg
nop
mov
cwde
xchg
stos
movs
lods
mov
int
xchg
enter
enter
test
mov
out
fdivrp
or
cs
iret
and
cmp
fcomp
test
sub
stos
int3
into
fisubr
test
popf
test
sar
stos
mov
fmulp
ficom
lods
xchg
ins
fsub
xchg
sub
lahf
nop
and
add
mov
cdq
(bad)
jne
xchg
enter
leave
in
test
fs
jecxz
(bad)
(bad)
or
cmps
loopne
lods
loopne
mov
fdivr
in
jne
sub
stos
dec
(bad)
bound
mov
lea
lea
mov
(bad)
leave
fcomp
iret
leave
lods
iret
leave
out
iret
leave
lods
iret
enter
leave
pop
xlat
mov
movs
xor
cld
movs
hlt
scas
xlat
mov
sar
shr
movs
jae
pusha
(bad)
sbb
pop
sahf
cmps
xchg
ret
retf
aad
or
or
fistp
jge
popa
mov
shl
icebp
cmps
test
stc
les
cmps
xor
vpsrlq
test
dec
xchg
ja
movs
fcom
mov
aad
rcl
ret
je
dec
ret
fld
jmp
rol
xchg
test
xchg
and
mov
dec
(bad)
and
into
xlat
rol
mov
and
mov
sub
push
mov
pop
mov
mov
out
xchg
scas
fistp
fistp
push
fsubr
fstp
iret
es
xor
inc
(bad)
les
test
leave
popa
into
pusha
leave
sbb
adc
cmp
mov
mov
(bad)
repz
inc
(bad)
mov
ss
dec
int3
dec
retf
inc
fcom
fimul
and
loopne
enter
or
adc
fs
lods
int
retf
test
inc
mov
gs
and
cmps
fistp
lahf
xchg
test
rcr
fistp
nop
(bad)
leave
lods
jnp
inc
retf
enter
leave
mov
call
test
mov
cmc
fcom
(bad)
fcom
leave
out
shr
mov
mov
aad
lods
shl
stos
(bad)
fcom
iret
mov
iret
mov
lods
jnp
mov
mov
xchg
test
adc
outs
fdivr
iret
jmp
aaa
enter
lods
cmp
in
in
jmp
popf
mov
(bad)
aad
scas
cwde
cmps
xchg
mov
call
lods
stc
leave
jl
mov
leave
call
lahf
dec
xchg
cmps
sub
(bad)
rcl
(bad)
fisub
and
shl
or
cmps
lods
or
xor
test
lods
mov
push
mov
cwde
fcmovne
int
call
das
aam
or
fnstenv
into
inc
lods
dec
outs
lods
iret
enter
inc
or
leave
test
push
mov
sub
xor
cmps
mov
js
fcomp
into
pop
lods
sbb
iret
enter
es
leave
lods
fiadd
mov
xchg
stos
add
and
std
ja
fcomp
into
push
iret
enter
test
lods
fidivr
mov
and
in
test
mov
ja
fcomp
into
bound
enter
dec
add
leave
test
lahf
mov
test
cmps
mov
(bad)
fcomp
iret
leave
lods
iret
leave
lods
iret
enter
in
lods
iret
leave
lods
fist
lahf
xchg
mov
fcomp
(bad)
fcomp
iret
leave
lods
iret
leave
lods
iret
enter
lea
mov
test
cmps
out
mov
fcomp
iret
leave
lods
iret
leave
lods
iret
enter
test
fistp
lahf
xchg
mov
fcomp
(bad)
fcomp
iret
enter
sbb
enter
leave
lods
int
lods
fisttp
mov
mov
cmps
mov
(bad)
fmul
iret
shr
lods
ror
shr
mov
test
cmps
cmps
mov
sti
fdivr
iret
out
lods
in
leave
mov
out
lods
test
lods
cmc
leave
xchg
fbld
mov
lods
xchg
cmps
xchg
sahf
fsub
iret
mov
lods
mov
icebp
lods
iret
leave
mov
and
aad
add
cmps
fadd
ja
fmul
iret
clc
lods
adc
lods
cld
enter
leave
(bad)
(bad)
test
in
and
xor
(bad)
retf
retf
test
fisubr
in
in
test
out
leave
xchg
rcr
int3
xchg
aad
mov
cmps
stos
leave
sar
enter
mov
jmp
mov
fnstsw
mov
ret
fstp
(bad)
call
(bad)
repz
loopne
mov
xlat
xlat
mov
mov
scas
mov
movs
lods
mov
in
mov
out
test
cmc
in
mov
mov
scas
mov
in
loope
shl
mov
leave
enter
sti
jecxz
sti
jmp
enter
mov
mov
movs
cmp
lods
lods
mov
cmp
(bad)
push
pop
inc
push
cmp
cmp
pop
pop
cmp
pop
sub
sub
mov
mov
mov
scas
repz
jmp
imul
jmp
mov
enter
fcmove
mov
mov
lods
lock
mov
lea
in
mov
jmp
aad
aam
(bad)
into
int3
aad
in
enter
popf
mov
mov
ret
mov
stos
fisub
cmps
fucom
imul
out
in
int3
(bad)
retf
(bad)
(bad)
test
mov
stos
lea
leave
mov
lods
iret
mov
retf
in
icebp
in
jmp
enter
(bad)
leave
stos
(bad)
stos
fmul
(bad)
mov
mov
(bad)
out
fdivp
icebp
aam
fstp
ffree
mov
lods
ficomp
mov
lds
fdiv
leave
loope
jmp
repz
in
mov
enter
stos
fist
ret
stos
mov
mov
mov
out
mov
out
test
retf
fsubr
mov
fsubr
mov
(bad)
loope
clc
jmp
(bad)
(bad)
xchg
mov
lods
lods
lods
mov
leave
mov
out
mov
add
cmps
(bad)
mov
loop
repnz
faddp
(bad)
in
retf
(bad)
nop
pushf
mov
mov
mov
mov
out
mov
in
in
aad
repz
mov
xlat
(bad)
lods
popf
mov
mov
cmps
lods
ret
leave
mov
leave
in
repz
in
fdivp
cmc
out
mov
(bad)
aam
mov
mov
leave
mov
retf
cmps
cmps
add
fsub
loop
jmp
ret
mov
ret
mov
mov
scas
retf
cmps
cmps
retf
xchg
out
mov
(bad)
out
(bad)
repnz
out
out
mov
std
aad
mov
xchg
mov
out
mov
xchg
mov
in
call
jmp
(bad)
enter
mov
mov
test
and
lods
xchg
movs
lods
iret
stos
fsub
out
loopne
repnz
leave
mov
xlat
iret
fisubr
mov
lds
mov
call
jmp
retf
fcmovnbe
iret
xchg
lods
stos
xchg
mov
stos
mov
lods
lods
fdivr
mov
lods
(bad)
icebp
mov
mul
call
ror
fst
mov
mov
mov
fmulp
mov
mov
leave
out
stos
stc
out
out
clc
test
push
ret
aad
(bad)
mov
mov
test
cmps
test
mov
lds
mov
mov
cli
jmp
mov
(bad)
aam
fcmovne
lods
mov
mov
ret
stos
lods
call
mov
in
stc
mov
mul
icebp
iret
mov
fimul
stos
mov
mov
lds
lods
ret
loope
mov
icebp
repz
(bad)
aam
lock
mov
mov
stos
mov
clc
lods
test
fldcw
call
cmc
icebp
(bad)
in
cld
fadd
retf
(bad)
jmp
mov
test
mov
fistp
cmps
shl
icebp
cmc
test
mov
fcmovnbe
iret
fmul
mov
fsub
test
stos
lods
rcr
in
loop
jmp
int3
retf
retf
iret
lods
stos
mov
lods
stos
stos
leave
jmp
mov
fild
cld
jmp
cmps
rol
int3
cmps
cli
fmul
mov
fimul
int
enter
lods
retf
scas
mov
jmp
mul
mov
xbegin
mov
push
or
fild
sar
lock
fstp
mov
stos
stos
stos
mov
mov
stos
stos
fldcw
mov
stc
in
clc
out
(bad)
shl
retf
mov
mov
iret
stos
mov
fidivr
mov
clc
jmp
ret
int
leave
jmp
stos
scas
stos
(bad)
mov
pushf
mov
fidivr
jmp
enter
xlat
fdiv
stos
leave
jmp
(bad)
ret
mov
mov
mov
cli
loopne
out
in
xchg
rol
int
int3
mov
stos
cdq
lods
test
lods
mov
scas
cmps
lods
shr
in
int
call
int
cmps
sti
rcr
test
iret
mov
iret
mov
cmps
lods
lods
xchg
(bad)
mov
test
ret
movs
rcr
enter
mov
out
fiadd
lods
xchg
in
mov
ret
(bad)
jmp
(bad)
retf
mov
cmps
mov
ret
mov
int
mov
leave
scas
lods
leave
lods
lahf
fcomi
stc
icebp
cli
jmp
out
call
ret
mov
mov
mov
fbld
lods
leave
(bad)
icebp
clc
(bad)
loopne
test
jmp
(bad)
int3
fmul
stos
mov
mov
call
pushf
mov
lods
mov
in
cld
lahf
ret
mov
fld
aam
lock
mov
fwait
mov
sub
movs
jmp
mov
into
loop
loopne
shr
mov
into
retf
retf
mov
mov
lods
mov
stos
lods
leave
jmp
out
jmp
lahf
retf
loopne
mov
int3
(bad)
mov
(bad)
mov
leave
scas
mov
mov
call
(bad)
jmp
loopne
mov
fcmovne
mov
(bad)
lods
cmps
mov
scas
mov
sar
iret
out
jmp
mov
jmp
ret
mov
mov
lahf
cmps
lds
mov
mov
test
(bad)
ror
out
ret
retf
mov
mov
in
stos
lods
fisubr
movs
lds
imul
jecxz
mov
rcr
sar
mov
scas
leave
mov
ret
mov
mov
fcomip
cmc
cli
xchg
leave
mov
enter
(bad)
fdiv
cmps
mov
ret
fisubr
stos
(bad)
mov
jmp
leave
cmc
ret
cmps
fcompp
ror
mov
mov
ret
mov
(bad)
stos
mov
fsubr
(bad)
lock
ret
mov
mov
mov
lods
fisubr
push
leave
cld
mov
imul
out
out
retf
ffreep
(bad)
retf
int
fmul
mov
leave
mov
call
(bad)
in
jmp
mov
int
(bad)
mov
mov
test
mov
fdivr
mov
lods
cli
in
out
fsubr
cmc
fbld
dec
iret
stos
mov
stos
lods
mov
lods
shr
iret
mov
out
retf
icebp
jmp
in
les
int
fidiv
mov
lods
cli
stos
mov
mov
stos
cli
mov
stc
idiv
jmp
retf
int3
(bad)
enter
mov
ret
stos
mov
mov
mov
clc
out
call
mov
retf
mov
stos
stos
mov
stos
movs
into
mov
lods
leave
mov
cld
(bad)
clc
in
std
repz
ret
aad
ret
retf
mov
mov
cmps
lods
mov
test
jmp
stc
jecxz
jmp
retf
ret
int3
lock
mov
xchg
mov
lea
scas
mov
leave
lods
(bad)
out
in
retf
out
shl
fcmovu
lods
mov
mov
cmps
lods
lods
fdivr
(bad)
stos
mov
jmp
retf
idiv
cmc
test
mov
ret
(bad)
int
mov
xchg
mov
mov
fsub
cmps
ret
in
repnz
out
jmp
xlat
fcmovne
lods
mov
mov
fldenv
out
mov
in
stc
fchs
in
lock
lds
ror
shl
stos
mov
mov
mov
out
jecxz
cli
(bad)
movs
fcompp
rol
aad
lods
mov
cmps
stos
fnstcw
ret
movs
leave
xchg
mov
jmp
loopne
fcmovu
enter
stos
stos
mov
mov
mov
mov
stos
jmp
loop
lock
test
lods
int3
fxch
retf
nop
jmp
mov
mov
mov
stos
mov
mov
mov
out
retf
icebp
jmp
in
les
(bad)
enter
fimul
mov
les
lods
sar
imul
loopne
lods
iret
enter
fst
mov
stos
stos
leave
in
lods
lods
jmp
aad
mov
out
jmp
(bad)
dec
retf
retf
mov
lods
mov
iret
mov
stos
cwde
fldcw
lods
fmulp
mov
mov
out
retf
out
xchg
leave
mov
fst
mov
stos
mov
pop
scas
scas
(bad)
mov
mov
mov
repnz
out
xchg
ret
mov
(bad)
fcmovu
fcomp
cmps
stos
jmp
fdiv
mov
stc
mov
(bad)
icebp
(bad)
lds
in
(bad)
lods
stos
mov
mov
mov
fmulp
mov
jmp
out
(bad)
cli
in
aam
retf
aam
in
ror
mov
lods
mov
mov
mov
fidiv
jmp
in
aad
clc
xlat
mov
mov
leave
in
mov
fwait
mov
ret
lods
repnz
into
mov
hlt
cld
(bad)
mov
enter
mov
lods
fmulp
fwait
retf
xchg
div
(bad)
leave
mov
icebp
(bad)
out
neg
fcmovne
int3
retf
aad
mov
mov
shr
mov
mov
out
jmp
fistp
(bad)
mov
lods
mov
leave
lods
mov
sbb
sti
jmp
lahf
shl
retf
ret
(bad)
rcl
jmp
ficomp
fstp
in
fwait
ret
mov
mov
jecxz
sti
jmp
enter
int
fmul
mov
ret
fsubr
cmps
retf
mov
mov
faddp
retf
out
test
ror
rcr
lods
lods
mov
mov
mov
mov
mov
sti
in
test
call
ret
into
cmps
in
ror
mov
mov
lods
pushf
mov
lea
(bad)
(bad)
out
out
div
jmp
lods
cli
(bad)
int
mov
mov
lds
ret
cmps
fmulp
test
stos
cli
lock
in
in
jecxz
ret
(bad)
(bad)
(bad)
mov
mov
cmps
jmp
mov
test
leave
clc
cmps
mov
repz
leave
mov
retf
mov
mov
stos
ficomp
enter
mov
lods
(bad)
retf
loope
out
neg
out
retf
into
ret
fcom
lods
call
(bad)
iret
popf
les
mov
sahf
jmp
stc
jecxz
jmp
int3
cmc
into
fcom
fmul
call
popf
in
mov
in
jmp
mov
icebp
mul
(bad)
fcom
mov
cmps
lods
lods
fdivr
fisubr
scas
(bad)
retf
jmp
sti
jmp
(bad)
retf
mov
test
test
stos
movs
leave
mov
mov
mov
div
jmp
(bad)
int
dec
retf
mov
mov
cmps
lods
mov
mov
movs
ret
mov
jmp
cmps
shr
clc
mov
lods
mov
mov
mov
iret
mov
mov
loope
in
shr
jmp
popf
faddp
int
fcmovne
mov
(bad)
mov
lods
ret
mov
leave
iret
test
fucom
repz
cli
cmc
test
(bad)
(bad)
fdivrp
int3
iret
lods
mov
lods
fcom
scas
leave
lea
int
movs
fcomp
jmp
retf
loopne
cmps
fmulp
int3
in
shl
mov
ficom
test
out
mov
mov
jecxz
out
(bad)
jmp
call
shl
jecxz
mov
fwait
lahf
out
scas
stos
(bad)
add
lock
scas
hlt
mov
jmp
cmps
in
out
aad
mov
mov
xchg
scas
xchg
mov
ret
mov
mov
mov
cmps
mov
jmp
retf
rcr
stos
mov
cmps
in
xchg
(bad)
mov
leave
mov
int3
out
mov
cmps
sub
mov
xchg
mov
xchg
stc
call
imul
cdq
mov
fistp
aad
xchg
in
std
loope
out
cmc
cmp
mov
leave
(bad)
repnz
jmp
int
fadd
mov
scas
jmp
sahf
rol
idiv
mov
mov
idiv
jmp
in
hlt
fucomp
aam
ret
fsubp
fucom
mov
fdivr
iret
in
repnz
mov
iret
jmp
aam
movs
cmps
cwde
test
ret
retf
mov
jecxz
sahf
leave
dec
in
in
lea
mov
mov
int
movs
fnstcw
repz
call
fbld
iret
clc
lahf
mov
jmp
fstp
hlt
stc
mov
xchg
fistp
mov
call
leave
out
neg
popf
test
loop
mov
xchg
test
out
mov
mov
mov
iret
retf
cmc
leave
(bad)
mov
mov
(bad)
out
sahf
aam
test
lods
in
hlt
fnstsw
out
cld
ret
in
ret
std
(bad)
xchg
mov
iret
jmp
cmc
mul
jmp
lock
ret
out
test
(bad)
jecxz
rcl
mov
xchg
cmc
movs
cmc
lods
in
cmc
mov
stos
cli
leave
(bad)
loope
stc
fucomip
in
xchg
test
mov
mov
sbb
and
xchg
mov
call
into
retf
mov
mov
std
std
std
mov
mov
(bad)
repnz
sti
mov
jmp
loop
iret
ficom
mov
call
mov
lea
fnstsw
out
fincstp
xchg
xchg
cli
stc
stc
cmc
into
retf
jmp
xchg
out
in
iret
jmp
ret
mov
pushf
lahf
xchg
cli
mov
loop
cld
mov
call
rcr
mov
fidivr
lds
mov
loopne
cmp
(bad)
in
cwde
mov
ret
std
test
fld
scas
xchg
fistp
jecxz
int3
xchg
call
not
mov
pushf
lods
scas
xchg
repnz
(bad)
repnz
out
cwde
clc
call
jmp
mov
clc
fwait
cmp
xchg
pushf
pushf
(bad)
out
lods
jmp
mov
lods
into
mov
mov
loope
cwde
shr
fdiv
mov
cmps
xchg
mov
lds
fnstsw
mov
shl
out
mov
cmps
sub
scas
call
idiv
mov
cdq
xchg
(bad)
loopne
sti
in
loope
rcr
iret
jmp
in
(bad)
into
(bad)
sti
retf
call
scas
mov
fwait
dec
lods
mov
lds
les
into
enter
repz
mov
rol
mov
hlt
lods
in
hlt
fstp
out
stos
repz
mov
fstp
rcl
int
sahf
nop
scas
(bad)
in
iret
jmp
out
cwde
mov
fisubr
out
xlat
int
mov
call
xchg
mov
sti
cli
mov
lods
in
cmc
mov
(bad)
retf
sar
mov
xlat
sar
(bad)
mov
clc
loop
jmp
fsub
in
std
in
xor
mov
in
sbb
shl
mov
into
(bad)
jmp
(bad)
repnz
mov
mov
sahf
cmc
hlt
lods
in
hlt
fld
loop
loope
aad
xchg
popf
in
ror
cdq
mov
(bad)
(bad)
(bad)
lahf
mov
jmp
mov
or
std
leave
mov
cdq
mov
mov
mov
stos
rcl
into
test
mov
mov
pushf
loopne
pushf
(bad)
(bad)
cld
enter
mov
neg
mov
cmc
movs
xlat
fistp
popf
in
std
in
stos
xchg
mov
clc
pushf
nop
pushf
cmp
(bad)
cmc
sti
int
mov
mov
ficomp
xchg
mov
mov
repnz
(bad)
repnz
sahf
movs
std
call
cmps
mov
xchg
mov
repnz
clc
loope
in
mov
fwait
cmps
nop
into
call
in
hlt
(bad)
mov
iret
mov
lahf
(bad)
dec
mov
adc
mov
loope
iret
out
mov
mov
retf
clc
(bad)
(bad)
call
mov
les
popf
(bad)
lock
(bad)
in
rcl
out
jmp
mov
scas
out
sbb
out
neg
repz
clc
(bad)
out
(bad)
mov
xchg
out
popf
out
call
in
std
in
mov
loop
cld
leave
cwde
mov
fdiv
les
into
cld
retf
aad
jmp
mov
repz
cwde
ror
int3
mov
sahf
in
call
cwde
in
mov
mul
enter
cld
lods
mov
in
retf
in
hlt
out
nop
mov
fisttp
lods
jmp
xchg
xchg
lods
cwde
xchg
call
out
ror
shl
cli
leave
repz
mov
jmp
hlt
test
stos
cmp
mov
mov
xlat
ret
sub
mov
in
test
pushf
scas
aam
xchg
lahf
pushf
mov
mov
fdivr
(bad)
enter
dec
call
lahf
sahf
xchg
xchg
repnz
(bad)
repnz
fmul
repnz
leave
retf
out
lods
loopne
fdivr
(bad)
xlat
mov
in
xchg
mov
mov
hlt
lods
in
hlt
fisttp
repz
mov
std
div
cld
in
int3
test
lods
lahf
in
iret
jmp
pushf
stc
scas
popf
(bad)
mov
sar
mov
int3
ret
shr
sub
out
mov
mov
xchg
xchg
std
inc
xchg
fistp
(bad)
repnz
(bad)
(bad)
lock
mov
repnz
call
mov
(bad)
(bad)
call
sbb
sahf
test
(bad)
mov
cld
hlt
imul
lods
in
hlt
frstor
cmc
out
jmp
icebp
iret
aad
jmp
movs
sbb
mov
lods
mov
into
cdq
shr
mov
cmps
mov
sti
cdq
nop
iret
retf
fmul
mov
mov
in
mul
lods
lea
shl
repz
loopne
mov
call
scas
popf
mov
call
movs
mov
mov
out
mov
les
jmp
test
cld
sti
clc
cld
mov
xchg
mov
lahf
mov
jecxz
out
shr
out
loope
(bad)
out
jmp
mov
xchg
iret
jmp
or
mov
call
out
repnz
mov
cmps
adc
cdq
fcomp
nop
out
jmp
fsubr
(bad)
repnz
iret
in
mov
mov
hlt
fisttp
repz
mov
in
(bad)
(bad)
shl
fcomip
fsubp
jmp
div
stos
jmp
in
mov
iret
repnz
(bad)
stc
cli
xchg
out
retf
aad
(bad)
fwait
(bad)
xchg
ret
(bad)
cld
shl
movs
mov
loop
xchg
mov
hlt
lods
cld
mov
test
retf
in
enter
mov
(bad)
(bad)
mov
pushf
lea
fwait
in
in
out
scas
enter
fwait
movs
out
(bad)
vaddsubpd
nop
lods
jmp
jecxz
cdq
loopne
mov
loope
stos
les
(bad)
rcr
div
lods
rcl
ficomp
mov
cld
aam
mov
xchg
lods
in
cli
cmc
jmp
rcr
mov
(bad)
popf
aam
lods
scas
mov
fsubrp
hlt
fnstsw
mov
cli
ret
mov
rol
fwait
call
in
(bad)
mov
mov
lods
ret
ret
scas
lods
leave
mov
leave
out
mov
in
in
retf
push
ret
aad
(bad)
(bad)
(bad)
(bad)
mov
mov
fmul
cmps
out
mov
lods
lods
in
hlt
fnstsw
jmp
push
(bad)
neg
in
icebp
mov
test
in
iret
jmp
fld
mov
jmp
cld
jmp
(bad)
shr
sub
mov
call
cli
sahf
lods
dec
stc
movs
fistp
sar
imul
retf
out
shl
add
scas
lock
movs
(bad)
mov
mov
(bad)
icebp
jmp
in
ret
lock
shl
jecxz
sahf
in
retf
cld
mov
mov
mov
leave
(bad)
repnz
in
mov
mov
mov
out
retf
xlat
(bad)
shl
mov
scas
pushf
xchg
mov
sti
cdq
mov
lods
in
hlt
fstp
mov
ret
mov
aad
repz
xchg
mov
in
stos
jmp
in
mov
mov
out
mov
cmps
mov
(bad)
(bad)
sahf
sar
fst
mov
mov
mov
jmp
in
mov
sti
sbb
shr
rcl
hlt
(bad)
in
mov
(bad)
aam
frndint
jecxz
mov
test
test
lods
xchg
sti
xchg
mov
fcomi
retf
mov
movs
jmp
ret
cmp
test
mul
mov
cmps
(bad)
out
stc
mov
mov
(bad)
movs
mov
into
fwait
mov
xchg
fld
scas
mov
in
cmps
clc
into
test
mov
test
jmp
enter
stos
lods
lods
mov
test
stc
lds
(bad)
repnz
fimul
repz
and
jmp
ret
mov
std
out
xchg
mov
mov
loop
mov
jmp
fld
out
scas
rol
(bad)
mov
(bad)
(bad)
repz
test
sbb
stc
mov
clc
pushf
movs
retf
rcl
xchg
test
test
mov
xchg
scas
xchg
out
movs
(bad)
out
lahf
mov
cmps
movs
mov
mov
mov
pushf
fmul
mov
in
stos
stos
loop
sti
jecxz
lods
out
xchg
mov
popf
mov
test
imul
test
mov
call
lahf
jmp
mov
cmc
fnstsw
(bad)
cld
mov
mov
mov
in
(bad)
icebp
clc
cld
(bad)
xchg
pushf
xchg
in
mov
xchg
iret
jmp
mov
mov
rcr
retf
mov
mov
aad
sti
(bad)
jmp
ret
lahf
scas
cmp
jmp
out
fmul
mov
mov
jmp
mov
cmp
lods
movs
xchg
cli
test
out
fmul
mov
lods
out
nop
test
loope
mov
std
ret
fwait
mov
cld
(bad)
stos
lahf
jmp
xchg
loop
stos
mov
cld
cld
mov
test
xchg
fwait
mov
mov
cmp
scas
loope
(bad)
into
mov
loopne
not
out
cmc
cmps
icebp
mov
std
cld
stc
fmul
mov
cld
xchg
lahf
xchg
mov
jmp
jmp
mov
xchg
cld
mov
sti
movs
scas
out
cmps
xchg
cwde
mov
mov
sbb
scas
(bad)
mov
icebp
loopne
test
int3
loope
into
mov
mov
call
cmc
xchg
iret
lea
fistp
(bad)
retf
jmp
mov
cwde
mov
xchg
repnz
jmp
mov
out
mov
mov
rcr
jecxz
sar
std
into
mov
mov
mov
fdivr
jmp
lock
mov
(bad)
jmp
fwait
sti
popf
mov
repnz
(bad)
repnz
mov
xchg
fild
fdivrp
push
mov
or
xchg
xchg
xchg
lea
mov
out
std
mov
pushf
sti
leave
in
into
test
sar
ficom
mov
fdivrp
jecxz
mov
sti
sti
jmp
in
sti
clc
vprotd
fidivr
fcomp
test
pushf
xchg
mov
and
icebp
(bad)
int
sbb
icebp
stc
iret
fcmove
fxch
in
aad
clc
(bad)
out
mov
nop
lahf
movs
mov
mov
lods
into
lods
mov
mov
test
in
out
dec
mov
call
mov
test
rol
out
aam
sahf
cmps
not
fidiv
mov
in
mov
mov
mov
mov
mov
call
ret
(bad)
iret
iret
mov
jecxz
stc
(bad)
sub
stos
loopne
icebp
jmp
cmc
shl
cwde
icebp
not
jecxz
leave
sar
movs
lea
in
cmc
fstp
icebp
iret
mov
loope
aam
mov
(bad)
add
fwait
stos
mov
sti
lock
(bad)
jmp
call
(bad)
rcr
(bad)
(bad)
aam
mov
leave
(bad)
repnz
idiv
cmp
sar
in
mov
mov
or
stos
lea
in
mov
cli
mov
xchg
fcmovb
in
mov
xchg
fdivr
fst
(bad)
iret
cld
in
loop
sti
jecxz
stos
fwait
sahf
mov
mov
xchg
mov
ret
in
mov
fsub
aad
ficomp
lahf
xchg
movs
call
jmp
xchg
out
mov
aad
bnd
call
jmp
in
movs
mov
mov
popf
mov
mov
mov
int
lock
hlt
lahf
mov
int3
fiadd
jmp
cdq
(bad)
std
lods
cdq
xchg
xchg
stos
in
lea
fcomp
xlat
std
out
call
test
mov
scas
jecxz
cld
sti
cmps
mov
std
mov
xchg
loop
stos
mov
shr
call
enter
mov
adc
cdq
add
mov
out
rol
fistp
fcmovu
(bad)
out
lahf
sahf
mov
or
sti
cli
mov
xchg
iret
jmp
int
shl
jmp
out
jmp
in
retf
jmp
mov
fwait
mov
out
(bad)
cwde
mov
cmps
loop
into
icebp
mov
hlt
out
mov
fdiv
fnsave
movs
cmp
idiv
jmp
fld
ror
mov
mov
rcr
scas
in
fdivrp
jecxz
nop
out
mov
cld
mov
call
fidivr
fsub
xchg
call
mov
int
sub
sti
loopne
mov
xchg
scas
stc
out
loopne
repz
into
(bad)
jecxz
aam
out
out
lea
jecxz
leave
(bad)
repnz
lods
mov
aad
iret
iret
loope
cmc
shr
in
jecxz
adc
lahf
call
add
lock
mov
mov
sti
repnz
leave
fsub
mov
call
jecxz
scas
xchg
xchg
sub
fnstsw
mov
cwde
stos
jecxz
into
mov
in
(bad)
movs
in
rcl
imul
fisub
mov
out
sub
iret
jmp
jmp
loope
loope
(bad)
into
mov
mov
mov
adc
scas
xchg
aad
cld
retf
test
out
sti
retf
out
aad
in
movs
mov
xchg
cdq
cmp
stos
(bad)
test
xchg
iret
jmp
(bad)
int3
mov
loop
(bad)
rcr
cdq
in
fidivr
scas
mov
stos
mov
repz
repz
in
int3
jecxz
sar
fmul
xchg
stos
mov
cmps
cmps
retf
mov
sahf
std
mov
in
stc
shl
in
mov
mov
mul
aad
mov
repnz
scas
mov
cld
mov
retf
dec
(bad)
icebp
mov
into
iret
shl
aad
mov
mov
pushf
mov
test
add
fdiv
icebp
mov
fsub
mov
cli
test
fwait
cmps
mov
mov
lds
lahf
mov
mov
loope
mov
xchg
sub
loopne
fdivr
loop
(bad)
cwde
mov
std
mov
repz
out
xchg
sti
into
enter
(bad)
int
lods
in
xchg
xchg
ror
mov
scas
mov
enter
mov
hlt
fucom
stos
push
mov
mov
(bad)
out
rcl
jmp
cli
or
xchg
call
cmps
cli
jmp
iret
fnstenv
jmp
(bad)
leave
lea
xchg
scas
test
lods
mov
mov
hlt
lods
cld
mov
rol
out
(bad)
aam
out
mov
mov
xchg
mov
std
cdq
lods
pushf
shl
ret
loop
out
stc
(bad)
mov
mov
mov
xchg
cmps
in
mov
aam
xchg
sahf
cmp
fwait
cwde
adc
in
cld
cld
popf
fsubrp
enter
test
call
enter
test
popf
(bad)
call
out
lock
loop
dec
int3
xabort
in
cld
jecxz
xchg
xchg
mov
test
aad
sahf
test
or
cmps
fwait
movs
fcmove
jmp
in
jecxz
lahf
fwait
cli
mov
scas
cld
clc
jmp
repnz
leave
(bad)
repnz
clc
loope
std
in
enter
std
fcomip
leave
mov
jmp
hlt
(bad)
jmp
les
icebp
cmc
repnz
call
retf
(bad)
cli
fwait
xchg
cmp
cli
lods
pushf
jmp
mov
xchg
fwait
(bad)
fcomi
hlt
lods
cld
mov
(bad)
fld1
xchg
mov
fdiv
into
mov
cmps
mov
xchg
iret
jmp
mov
pushf
int3
lods
loope
shr
into
retf
mov
mov
xchg
stc
nop
mov
test
stc
test
xchg
retf
les
mov
xchg
(bad)
mov
call
cwde
mov
xchg
repnz
cli
iret
mov
icebp
(bad)
lods
jmp
ret
(bad)
fnstenv
xchg
mov
jmp
test
sti
(bad)
(bad)
jmp
hlt
lods
cld
mov
lods
mov
xchg
lods
(bad)
std
loop
(bad)
std
iret
xchg
stos
mov
mov
hlt
xchg
iret
jmp
(bad)
out
stos
mov
mov
vpaddusw
fdivr
repnz
xchg
mov
repnz
mov
jmp
cld
mov
fistp
mov
repnz
std
vaddsubpd
xchg
in
mov
test
in
in
hlt
fstp
out
std
xchg
jecxz
mov
in
out
shr
(bad)
in
enter
lock
out
mov
ficomp
(bad)
repnz
push
sar
(bad)
mov
cld
nop
int
aam
mov
mov
mov
test
lock
div
lods
cld
mov
scas
out
ror
mov
in
sbb
int3
popf
mov
mov
xchg
mov
cwde
loopne
xchg
(bad)
sti
(bad)
jecxz
xlat
mov
out
xchg
fwait
mov
mov
mov
(bad)
(bad)
cld
lds
xchg
mov
jmp
loop
clc
jecxz
fmulp
in
aam
mov
in
hlt
(bad)
clc
mov
cld
cmps
enter
fcomip
out
loop
call
int
sbb
nop
in
test
stc
mov
scas
cld
cli
in
repnz
lods
cld
mov
in
(bad)
nop
fmulp
retf
aad
mov
xchg
xchg
mov
add
sti
ret
mov
jmp
loopne
shl
fcmovu
xchg
fwait
mov
test
loop
icebp
fisub
add
mov
out
(bad)
out
lahf
mov
mov
mov
in
lods
xchg
mov
stos
mov
(bad)
repnz
(bad)
jmp
out
loope
xchg
xchg
frndint
jecxz
xchg
fwait
mov
cmp
cwde
nop
mov
mov
mov
movs
xchg
in
mov
in
add
cdq
in
xchg
fwait
loopne
lods
in
scas
jmp
nop
in
fdivr
xchg
fwait
mov
cmps
or
xchg
mov
out
cdq
cmps
xlat
fdiv
mov
sahf
fadd
fucomi
imul
bnd
fsubrp
hlt
frstor
xchg
xchg
lahf
std
in
nop
mov
mov
repnz
call
hlt
fmul
xchg
in
movs
xchg
into
test
retf
(bad)
cld
xchg
xchg
repnz
lods
mov
jmp
leave
test
mov
fsubrp
hlt
fisttp
test
jmp
(bad)
fsubr
repnz
call
(bad)
ret
mov
stos
lods
fdivr
repnz
sti
cmps
dec
loop
stc
mov
icebp
mov
fcmovb
rcl
aad
mov
mov
leave
mov
jmp
out
clc
rcl
into
rcr
aam
popf
lock
clc
shl
std
repnz
mov
pushf
stos
xchg
mov
scas
scas
fdivr
repz
mov
fadd
std
loopne
xchg
adc
stc
jmp
mov
xchg
repnz
in
mov
icebp
(bad)
icebp
aam
mov
loopne
in
mov
lods
popf
cwde
mov
leave
mov
or
cli
jmp
aad
cld
int3
retf
mov
mov
cld
lods
call
nop
retf
adc
mov
shl
fstp
shr
mov
iret
jmp
ret
cli
scas
mov
out
scas
(bad)
repz
jmp
out
lock
out
enter
icebp
iret
mov
mov
mov
mov
mov
mov
cli
out
sar
(bad)
mov
nop
mov
int3
in
(bad)
in
mov
fsubr
xchg
mov
mov
mov
call
int
test
pushf
mov
and
in
hlt
fld
mov
rcr
retf
xchg
(bad)
jmp
scas
mov
in
iret
jmp
std
test
xchg
aad
iret
out
sar
(bad)
(bad)
call
iret
or
mov
mul
rol
test
mov
fld1
not
lock
std
in
mov
rol
call
mov
test
shl
fcomip
adc
xchg
stc
mov
iret
mov
hlt
frstor
into
cmps
(bad)
mov
xchg
loope
in
mov
xchg
mov
test
xchg
mov
fiadd
lods
sti
lods
fsub
out
std
ret
int
mov
icebp
idiv
(bad)
into
mov
xchg
cmc
lods
in
cmc
mov
mov
rol
jmp
mov
cdq
xchg
test
in
(bad)
in
jmp
lahf
mov
sar
mov
mov
ror
in
(bad)
xlat
ret
xchg
(bad)
jecxz
mov
lods
mov
in
xchg
(bad)
repnz
(bad)
repnz
ret
mov
rcl
loop
(bad)
out
(bad)
mov
cmp
stos
nop
xchg
in
into
mov
(bad)
mov
nop
hlt
and
enter
fsubr
mov
jmp
nop
mov
xchg
mov
out
mov
jmp
fcom
fidiv
lods
mov
scas
xchg
xchg
fwait
mov
mov
or
std
mov
fadd
fist
xchg
std
in
lods
(bad)
retf
jmp
leave
stos
sbb
repnz
into
(bad)
shl
repz
(bad)
loopne
stos
call
jmp
lods
in
hlt
fucomp
lock
loopne
(bad)
(bad)
jecxz
leave
test
out
clc
out
leave
lock
call
xchg
enter
and
stc
xchg
out
repnz
mov
cmps
mov
xchg
rcl
cli
cmc
loope
mov
cwde
mov
mov
lods
in
cmc
mov
mov
aad
jmp
out
mov
mov
jmp
mov
sti
iret
mov
(bad)
test
stos
xchg
fistp
mov
lds
(bad)
popf
cmc
mov
scas
cwde
cdq
test
mov
mov
hlt
and
ret
ret
hlt
repnz
loopne
stc
out
out
into
std
rcr
out
popf
cdq
out
mov
mov
hlt
lods
in
hlt
fnsave
into
repz
int3
repnz
retf
mov
xchg
sti
xchg
popf
mov
scas
mov
mov
cmps
mov
call
fcomp
out
mov
movs
lock
cwde
std
repnz
lods
in
cmc
mov
mov
mov
in
repnz
loope
cli
in
(bad)
in
call
scas
(bad)
lods
mov
mov
fdiv
test
jmp
mov
mov
in
cdq
in
cmps
movs
cmp
cmp
nop
cmc
call
xchg
repnz
shl
in
std
(bad)
jmp
mov
mov
mov
(bad)
out
mov
fld
xor
clc
mov
mov
(bad)
fdivrp
(bad)
jmp
xchg
out
mov
test
repnz
lods
in
cmc
mov
mov
in
leave
rcl
aad
dec
fcomip
int3
in
(bad)
in
call
pushf
not
scas
out
mov
mov
mov
ret
enter
shl
in
test
mov
stos
add
lock
cmc
hlt
lods
in
hlt
fnstsw
enter
in
(bad)
(bad)
jmp
scas
xchg
xchg
mov
shl
mov
jmp
lods
mov
fwait
cdq
lods
cld
xchg
test
test
into
mov
mov
ffree
in
not
mov
jmp
mov
xchg
mov
mov
rcl
std
out
(bad)
retf
rcr
les
cmp
cld
xchg
cmps
mov
mov
fsub
mov
xchg
clc
mov
mov
mov
xchg
loop
int3
cld
fistp
stos
mov
inc
lods
in
cmc
mov
call
leave
out
enter
(bad)
jmp
(bad)
in
popf
mov
lods
xchg
sahf
test
int
repnz
into
out
cld
cmc
faddp
cdq
test
xor
lods
cld
mov
hlt
fnstsw
in
xlat
fucom
mov
mov
in
mov
jmp
jecxz
add
clc
mov
fxch
shr
sub
jmp
std
cdq
movs
mov
mov
hlt
xchg
fistp
shl
mov
in
call
popf
mov
cwde
xchg
repnz
(bad)
repnz
rep
test
out
(bad)
lods
icebp
(bad)
test
call
in
mov
test
mov
mov
mov
cmps
mov
repnz
dec
test
mov
lahf
inc
repnz
lods
in
cmc
mov
mov
rcl
(bad)
mov
in
repz
in
idiv
in
(bad)
in
sub
fwait
lahf
xchg
retf
fsub
clc
les
into
loop
retf
stc
xchg
xchg
out
jmp
rol
lods
in
hlt
fld
jecxz
call
jmp
mov
cdq
stc
mov
call
cld
mov
leave
mov
cmps
mov
mov
(bad)
aam
std
mov
cmps
mov
cmp
call
mov
leave
faddp
icebp
mov
iret
test
cwde
scas
mov
mov
call
rcr
in
ror
call
jmp
in
clc
cld
sahf
cmps
mov
sub
(bad)
repz
in
aam
mov
in
fcmovu
idiv
sub
jmp
fidivr
(bad)
mov
hlt
lods
in
hlt
fucomp
(bad)
mov
jmp
inc
bnd
mov
jmp
mov
movs
sti
mov
ffree
mov
shr
sub
mov
mov
cmps
xchg
popf
mov
mov
mov
cld
icebp
iret
mov
cmps
test
lock
xchg
in
lods
mov
test
xchg
iret
call
loopne
movs
mov
fcmovnu
fsubr
call
in
stos
xchg
std
out
mov
repnz
lahf
cwde
mov
ret
(bad)
mov
clc
sahf
jecxz
ret
ror
mov
cli
scas
movs
fldcw
(bad)
cmc
call
fdiv
ficomp
call
fcomp
mov
cmps
mov
leave
mov
loope
stc
test
(bad)
mov
xchg
mov
in
mov
mov
retf
stos
rcr
xchg
enter
or
in
test
test
mov
call
fwait
mov
stos
mov
mov
cld
jmp
mov
repnz
xchg
mov
fnsave
out
fwait
inc
(bad)
mov
call
(bad)
scas
mov
(bad)
int3
int3
(bad)
loopne
out
call
fwait
aam
sub
cdq
hlt
xchg
iret
jmp
mov
in
mov
fsubr
jmp
ret
mov
leave
(bad)
repnz
test
scas
les
int3
enter
out
rol
hlt
out
ror
out
mov
(bad)
mov
frstor
fxch
iret
not
icebp
mov
cmps
jmp
(bad)
int3
xchg
mov
mov
cli
call
sahf
mov
in
loop
stos
mov
ret
jmp
sub
fmul
in
(bad)
iret
mov
scas
stos
mov
sti
leave
mov
cld
stos
(bad)
nop
fstp
(bad)
stc
enter
cmps
test
(bad)
xchg
loope
mov
stos
sbb
mov
aam
in
mov
xlat
ret
mov
cmc
out
xchg
mov
sahf
cwde
call
xchg
mov
cmc
mov
jmp
xchg
mov
call
sahf
xor
(bad)
repnz
xchg
mov
mov
rcr
lock
xlat
sti
and
int
mov
scas
cmps
idiv
mov
stos
lock
iret
jmp
frstor
cld
fxch
call
ror
shr
rcl
lahf
vfrczps
mov
mov
lods
ret
cmc
loop
stos
mov
(bad)
neg
dec
mov
fadd
mov
repnz
lods
in
cmc
fld
cmps
call
shl
(bad)
int3
mov
add
mov
in
sahf
mov
call
leave
mov
test
aad
cld
(bad)
out
call
call
fstp
test
fwait
mov
xbegin
retf
or
enter
in
movs
cmp
aam
and
lahf
stos
mov
mov
int3
imul
mov
in
int3
xor
jmp
fcomi
hlt
lods
in
cmc
fstp
mov
fmulp
cld
shl
fucomip
out
test
in
scas
clc
mov
xchg
fistp
fnstenv
hlt
in
sti
sahf
clc
(bad)
test
out
mov
xchg
mov
cld
cmps
test
mov
loope
les
out
nop
test
stos
call
clc
scas
fimul
stc
jmp
xchg
loop
stos
mov
std
xlat
retf
hlt
int
out
fcmovne
xchg
enter
xchg
fwait
xchg
idiv
in
cmc
(bad)
xchg
and
mov
mov
lock
(bad)
(bad)
loop
xchg
out
add
jmp
mov
loope
lea
cli
out
(bad)
jmp
mov
mov
(bad)
std
repnz
sub
loopne
repnz
(bad)
repnz
mov
mov
mov
mov
(bad)
enter
test
xor
movs
jecxz
cmps
hlt
mov
scas
loope
cwde
xchg
loop
stos
mov
jmp
pushf
stc
in
fcmove
clc
mov
mov
in
repnz
lods
in
cmc
fnsave
cld
(bad)
mov
mov
(bad)
mul
add
xchg
xchg
les
cli
cwde
sahf
mov
test
push
hlt
aam
(bad)
xchg
cld
repnz
shl
mov
mov
cdq
mov
call
fcmovnb
leave
out
fptan
icebp
sar
or
mov
mov
scas
retf
popf
mov
fistp
jmp
aam
les
iret
sbb
mov
fdivrp
jecxz
mov
call
call
call
cmps
test
jmp
xchg
mov
lahf
(bad)
mov
loop
icebp
rcl
out
in
aad
xchg
out
loop
leave
test
and
enter
scas
stos
test
popf
xchg
out
mov
leave
mov
repz
(bad)
fcomp
test
xchg
repnz
(bad)
repnz
cli
(bad)
mov
fcmovu
loope
xlat
test
in
xchg
out
fimul
mov
cmp
call
hlt
(bad)
test
movs
lock
fadd
icebp
repz
out
aad
out
stc
loope
mov
jecxz
xchg
in
mov
test
cmc
mov
out
mov
in
lahf
stos
mov
cld
shl
jmp
int3
test
lods
lods
test
scas
in
mov
jmp
icebp
rcr
lock
cmc
mov
iret
xchg
fisttp
cli
lods
mov
cld
std
mov
loope
cmps
lahf
mov
sti
cli
cdq
stos
loopne
in
shr
iret
repz
cmps
xchg
sti
int
test
jmp
fwait
adc
mov
stos
cli
fnstcw
into
fucomp
loop
(bad)
(bad)
aam
xchg
loope
repz
test
(bad)
repnz
mov
stos
leave
mov
in
lock
cmp
ret
xchg
aam
icebp
lea
cwde
fmul
xchg
iret
jmp
fisttp
jmp
int
loop
pop
sti
sar
mov
mov
xchg
jmp
mov
cmc
not
xlat
in
(bad)
in
(bad)
(bad)
fdivr
xchg
mov
call
lods
fld
test
cmps
in
jecxz
inc
iret
mov
cmps
test
retf
lods
jmp
cld
test
jmp
hlt
pushf
test
mov
jmp
sti
enter
loopne
mov
popf
in
test
cld
xchg
mov
sahf
mov
stos
std
cdq
fwait
(bad)
push
hlt
lds
cld
leave
fbld
test
mov
sahf
stos
out
cli
lods
(bad)
cld
mov
fst
xlat
in
jmp
test
xchg
lods
mov
mov
mov
fwait
mov
fimul
in
call
stc
mov
jmp
cwde
loop
sti
jecxz
mov
stc
movs
in
lods
icebp
jmp
(bad)
frstor
shl
aad
loop
enter
in
loopne
fwait
jmp
mov
mov
hlt
lods
in
cmc
fnstsw
std
sti
mov
mov
in
(bad)
int
(bad)
(bad)
in
fstp
stos
cld
(bad)
mov
jecxz
sub
jmp
int
neg
test
not
in
into
loope
sti
in
test
cwde
test
popf
cmps
movs
fdivr
sahf
lods
sti
cmp
mov
jmp
ror
jmp
repnz
(bad)
repnz
cmps
lock
out
(bad)
out
mov
lock
enter
int3
fdiv
hlt
retf
mov
out
stos
pushf
cld
mov
xchg
iret
jmp
(bad)
int3
loopne
loope
fcomip
in
icebp
repnz
in
fisttp
mov
mov
jmp
xchg
ret
stc
loop
stos
mov
jmp
add
mov
mov
mov
mov
clc
fcomp
sar
mov
stc
nop
icebp
clc
ret
mov
xchg
movs
stc
ret
cdq
sub
cmps
(bad)
std
sahf
xchg
retf
sahf
sahf
out
xlat
dec
(bad)
repnz
fidivr
rol
out
xchg
or
mov
cwde
clc
lods
mov
mov
(bad)
(bad)
repnz
mov
(bad)
stc
scas
sti
enter
mov
cdq
(bad)
in
scas
in
in
iret
in
iret
nop
loope
nop
test
or
lods
shr
stc
stc
test
mov
stos
mov
in
rol
mov
lods
into
in
jecxz
(bad)
mov
mov
cmps
mov
mov
mov
jmp
lds
test
jmp
xchg
in
call
test
ficom
fucomp
lock
xchg
ficom
sti
in
out
mov
stc
fst
cmp
sahf
jecxz
mov
mov
mov
retf
mov
mov
pushf
xchg
test
xchg
iret
jmp
(bad)
mov
mov
shr
xlat
cld
jmp
in
fdivrp
jecxz
mov
mov
fstp
(bad)
shl
xlat
fidivr
fdivr
not
jecxz
mov
test
xchg
xchg
sahf
mov
xchg
scas
in
mov
mov
cmc
repz
test
mov
mov
mov
cmps
in
cmps
mov
retf
sar
(bad)
loop
repz
out
in
xchg
sti
out
mov
repnz
test
push
mov
shr
hlt
int
out
or
xchg
mov
lahf
mov
xchg
mov
(bad)
retf
out
cmps
int
fisubr
out
mov
xchg
mov
imul
mov
mov
repnz
(bad)
lock
les
mov
mov
mov
xchg
nop
pushf
popf
cmps
xchg
fistp
in
shr
sar
ret
fucomip
out
mov
mov
lea
test
in
cmc
fnstsw
sbb
loop
fcomp
jmp
retf
jmp
jmp
xchg
lods
lods
les
lods
xchg
xchg
shr
mov
jmp
xchg
mov
in
mov
sahf
pause
xchg
fwait
mov
sti
cmp
jecxz
in
rcl
sar
mov
or
test
lock
cmps
call
fcomp
std
repz
ret
icebp
div
mov
movs
jmp
enter
call
(bad)
repz
rcr
in
ror
cwde
jmp
icebp
sar
ror
mov
mov
mov
or
and
jmp
fisttp
leave
iret
fucomp
scas
mov
iret
mov
loop
xchg
icebp
std
rol
mov
movs
fdivr
mov
jmp
ror
mov
hlt
jecxz
(bad)
div
in
retf
repz
(bad)
mov
fdivrp
jecxz
scas
into
xchg
popf
cmps
test
out
xchg
mov
int3
cli
in
(bad)
lock
mov
inc
(bad)
out
jmp
(bad)
mov
(bad)
mov
(bad)
pushf
int3
sti
cld
iret
enter
cmps
test
dec
mov
mov
popf
xchg
stos
lds
in
retf
in
retf
mov
(bad)
cli
aam
mov
mov
pushf
xchg
out
mov
xchg
scas
jmp
out
xchg
movs
call
in
ret
mov
pushf
mov
jmp
mov
leave
add
iret
jmp
(bad)
in
enter
fsubp
call
mov
mov
mov
mov
mov
out
shl
in
adc
mov
xchg
mov
mov
xchg
in
mov
stos
mov
(bad)
in
shr
xchg
xchg
in
ret
sti
shr
mov
scas
mov
lods
in
cmc
frstor
mov
sar
mov
hlt
lock
test
lods
adc
out
in
mov
shl
xchg
stc
cld
stc
fdivr
stos
stos
mov
mov
mov
cwde
in
rcr
mov
mov
repz
xchg
jmp
mov
scas
scas
loop
cli
enter
(bad)
mov
mov
hlt
int3
fisubr
or
xchg
mov
xchg
lods
(bad)
mov
(bad)
ret
test
(bad)
(bad)
enter
mov
aam
ror
jecxz
cmps
jecxz
mov
mov
mov
cmps
xchg
out
jmp
mov
fdivr
stc
in
jecxz
mov
and
imul
xchg
in
enter
out
lods
into
in
fnop
xlat
shr
xchg
lea
mov
xchg
in
cli
mov
mov
test
in
iret
repnz
mov
xchg
call
mov
fimul
shl
jecxz
cmps
enter
or
mov
mov
mov
sti
cmps
fwait
movs
(bad)
fld
mov
mov
loope
iret
icebp
ret
loope
div
repz
mov
test
xchg
repnz
lods
in
cmc
fst
scas
les
ret
(bad)
loope
mov
nop
rcr
call
mov
jmp
mov
imul
loopne
lea
nop
icebp
repnz
fstp
mov
aam
cli
(bad)
fxtract
leave
fdivr
xchg
in
xchg
std
test
call
fstp
mov
test
stc
loop
aad
fucomp
mov
mov
cwde
icebp
lds
scas
shl
sar
xchg
loopne
nop
test
call
mov
mov
lock
in
jecxz
(bad)
into
shl
jmp
xchg
mov
out
mov
jecxz
xchg
lods
cwde
xchg
neg
test
fisttp
mov
retf
mov
in
aad
retf
lods
cmp
test
lods
in
cmc
fnsave
mov
jecxz
(bad)
aam
out
mov
(bad)
out
test
xchg
in
xchg
std
sahf
sti
cmps
mov
fwait
mov
retf
inc
mov
rcl
repnz
(bad)
repnz
mov
lahf
mov
sti
fidivr
mul
loopne
enter
out
fwait
mov
xchg
test
xchg
test
hlt
fnstsw
ret
out
mul
xchg
mov
sar
not
stos
xor
lods
enter
in
xchg
mov
into
aam
(bad)
icebp
mov
stc
call
lods
xchg
mov
jmp
sti
popf
retf
repnz
lods
in
cmc
(bad)
fwait
sub
stos
ret
out
mov
cld
fsubr
loopne
xchg
shl
add
cli
mov
fwait
fwait
mov
cmp
mov
test
stc
iret
shl
(bad)
mov
mov
sahf
cmps
mov
fdivr
(bad)
(bad)
int3
ret
mov
mov
nop
test
loope
mov
out
cwde
mov
test
jmp
scas
xchg
loop
stos
mov
ret
out
lahf
pushf
leave
iret
in
shr
icebp
lahf
xchg
xchg
repnz
lods
in
cmc
fisttp
scas
mov
hlt
lods
icebp
in
int3
in
cwde
out
mov
mov
test
sti
(bad)
hlt
sbb
mov
test
mov
std
out
ror
xlat
mov
jecxz
leave
(bad)
repnz
cmps
mov
out
mov
mov
jmp
mov
or
xchg
mov
mov
hlt
cdq
stos
sahf
scas
mov
rol
scas
clc
mov
enter
int3
call
ret
xchg
mov
fdivrp
jecxz
mov
mov
call
faddp
out
mov
fmul
leave
repz
icebp
nop
mov
cmp
xchg
iret
jmp
mov
loopne
jecxz
test
(bad)
leave
mov
xchg
mul
pushf
cld
(bad)
test
movs
lahf
test
mov
mov
rol
ret
xchg
leave
repnz
sahf
mov
mov
mov
jmp
cmc
xchg
iret
jmp
(bad)
mov
fcomp
ret
shr
mov
mov
in
call
in
fdivrp
jecxz
sbb
mov
stc
mov
aam
xchg
in
fisubr
into
retf
ret
in
cmc
loope
jmp
test
lods
in
cmc
fst
cmps
aad
mov
sti
(bad)
hlt
int
shl
aad
neg
mov
test
(bad)
cmps
fcos
cld
leave
lea
xchg
scas
lods
(bad)
push
mov
iret
out
jmp
jmp
mov
cmc
cmps
scas
retf
popf
cli
test
ret
mov
(bad)
jmp
lea
lahf
call
mov
fisub
les
jmp
mov
fwait
mov
out
mov
repz
fcmovbe
jmp
(bad)
(bad)
hlt
mov
mov
push
jecxz
clc
in
cwde
mov
sti
pushf
mov
mov
fmulp
rcl
clc
mov
fadd
(bad)
fchs
out
out
xchg
mov
xchg
mov
cld
mov
xchg
scas
cmc
in
(bad)
in
not
in
repz
(bad)
mov
out
movs
retf
xchg
mov
int
cmps
fidivr
test
(bad)
rcl
out
ret
lahf
xchg
sahf
mov
stos
sahf
lock
mov
lahf
sahf
cmc
xchg
iret
jmp
fst
cld
mov
into
nop
mov
in
jmp
in
fdivrp
jecxz
cmp
mov
lods
mov
call
(bad)
repz
mov
mov
fldln2
call
call
cmc
fstp
test
mov
repnz
iret
(bad)
ror
mov
xchg
xchg
std
rol
in
xchg
nop
mov
clc
mov
leave
mov
mov
in
enter
std
cli
jecxz
popf
test
mov
call
mov
(bad)
mov
retf
nop
test
mov
stos
cmps
mov
test
mov
mov
cmps
cmc
out
repz
out
aam
shr
cli
aad
ror
mov
jecxz
mov
movs
mov
fstp
mov
mov
fdivr
call
pushf
cmps
mov
clc
mov
in
movs
mov
mov
loopne
(bad)
(bad)
sti
in
shl
xchg
fcomp
in
iret
leave
test
mov
nop
mov
mov
clc
les
out
mov
test
cld
test
call
mov
lea
mov
clc
fistp
in
sti
ret
int3
clc
out
shr
loopne
nop
test
(bad)
in
lods
jmp
mov
sbb
mov
ret
out
(bad)
jmp
xchg
xchg
rol
repz
out
imul
(bad)
cwde
loop
sti
jecxz
adc
pushf
mov
fcmovnb
fcmovbe
clc
mov
fsubr
in
cmc
sbb
mov
test
sti
lahf
repz
out
rcr
cdq
aam
retf
in
test
lods
cmp
mov
mov
movs
in
loop
mov
sar
shl
cli
mov
lods
repnz
(bad)
repnz
test
mov
shr
std
ffreep
icebp
fcmove
adc
mov
mov
fisttp
into
int
repnz
enter
pushf
xchg
test
fdivrp
jecxz
cli
leave
xchg
cli
in
popf
cdq
xchg
jecxz
icebp
shl
mov
loopne
fcomp
popf
mov
add
cmc
fst
mov
leave
(bad)
faddp
out
mov
pushf
cli
cmc
retf
mov
out
mov
call
iret
jmp
call
loop
fsubrp
(bad)
into
(bad)
mov
lods
mov
repnz
(bad)
repnz
mov
mov
repnz
in
xchg
adc
mov
mov
lods
jecxz
lods
clc
test
(bad)
fnstenv
lock
in
sub
xlat
mov
jecxz
mov
lahf
sahf
std
sti
dec
mov
dec
rol
mov
fsub
xchg
(bad)
iret
fbstp
cmps
sub
mov
iret
jmp
repz
int
jecxz
into
rcl
call
leave
(bad)
repnz
and
cmps
in
std
icebp
loop
aam
mov
loop
clc
(bad)
out
xor
mov
test
(bad)
adc
in
xlat
stc
int3
fild
xlat
loop
shl
rcr
mov
jecxz
movs
ret
mov
fdivr
int
out
cmc
shl
sar
into
aam
int3
fnstsw
cld
(bad)
cdq
sahf
hlt
lods
in
cmc
(bad)
scas
xchg
mov
enter
loopne
cmc
ffreep
test
lods
mov
mov
iret
mov
jmp
mov
fninit
int
cmc
icebp
loope
loopne
xchg
xchg
xchg
fwait
cwde
cwde
test
in
mov
cld
test
aad
into
cmc
shr
loope
nop
test
test
fwait
in
(bad)
out
sbb
cwde
lahf
sti
sti
aad
mov
mov
loope
hlt
(bad)
idiv
fyl2x
ror
sbb
movs
lods
popf
mov
std
call
int
icebp
cdq
rcl
mov
mov
xchg
stc
cli
sti
xchg
mov
scas
in
mov
(bad)
mov
mov
in
fimul
test
mov
mov
fwait
mov
(bad)
cwde
lods
lods
ret
mov
out
into
jmp
sahf
jmp
cdq
les
out
sti
mov
test
in
fcmovu
enter
mov
nop
test
cmp
jecxz
movs
fidiv
scas
xchg
loop
stos
mov
idiv
les
(bad)
hlt
out
(bad)
in
mov
cli
test
mov
mov
cld
mov
in
leave
mov
fsub
ret
mov
cmps
nop
test
mov
jmp
hlt
xchg
iret
jmp
out
aad
jmp
xchg
in
fdivrp
loope
stos
cwde
cdq
jecxz
leave
(bad)
repnz
sahf
xchg
icebp
out
mov
stos
test
mov
xchg
(bad)
aam
mov
lods
xchg
mov
lahf
lahf
mov
out
xchg
mov
(bad)
sti
fidivr
(bad)
aam
(bad)
iret
xchg
icebp
les
mov
jecxz
sbb
xchg
aad
cwde
cdq
mov
clc
cmps
int
out
imul
mov
(bad)
jmp
out
aam
lods
cwde
jmp
(bad)
mov
retf
mov
mov
fdivr
xchg
popf
(bad)
popf
jmp
test
xchg
lods
mov
(bad)
pushf
loope
std
in
(bad)
cmps
dec
mov
out
xchg
xchg
fsubr
icebp
scas
xchg
call
mov
sti
test
cld
xchg
mov
mov
jmp
fsubr
movs
fcom
icebp
lods
stos
xchg
mov
stc
mul
mov
xchg
loop
stos
mov
test
icebp
into
cmps
retf
aam
xlat
ret
sahf
mov
neg
in
cmc
fnstsw
cdq
jmp
sar
cmc
retf
not
mov
scas
stos
mov
mov
mov
stc
xchg
iret
jmp
shl
(bad)
cmps
leave
vpmullw
shr
in
call
(bad)
repnz
stos
lea
out
cld
scas
aad
scas
(bad)
shl
(bad)
mov
mov
mov
mov
hlt
fstp
shr
int3
sar
fcmovbe
in
cmc
iret
rcr
xchg
icebp
mov
loop
sti
jecxz
fwait
out
mov
xchg
xchg
jecxz
(bad)
(bad)
fidivr
fmul
(bad)
or
loopne
icebp
ret
popf
mov
mov
mov
mov
shl
into
into
hlt
aad
ror
(bad)
repz
lea
mov
test
mov
pushf
xchg
call
test
enter
(bad)
fsubr
mov
mov
jmp
movs
fldcw
xchg
mov
mov
ror
mov
or
stos
(bad)
popf
in
mov
clc
scas
(bad)
mov
inc
scas
xchg
loop
stos
mov
(bad)
jmp
idiv
fucom
fdivr
mov
lods
sar
popf
cmp
out
out
cli
out
in
(bad)
hlt
mov
cmps
test
mul
lahf
std
mov
test
iret
sub
scas
xlat
mov
mov
fbstp
jmp
fwait
scas
scas
jecxz
leave
(bad)
repnz
scas
sub
fsubr
(bad)
movs
(bad)
iret
fsubrp
mov
jecxz
xchg
cwde
lea
mov
mov
hlt
fstp
(bad)
(bad)
mov
shl
sar
mov
dec
movs
jmp
test
fmul
call
sbb
loopne
jmp
out
lahf
mov
mov
dec
mov
xchg
scas
out
(bad)
mov
ret
cli
fcom
mov
mov
cmps
mov
out
mov
xchg
movs
xchg
call
repnz
mov
mov
fcomp
fabs
pushf
scas
sbb
cmc
xchg
iret
jmp
fnstsw
loope
int
in
xlat
aad
enter
clc
in
call
sti
jecxz
cld
(bad)
cld
mov
mov
cmps
out
xlat
cli
aam
(bad)
into
mov
fsubr
out
out
fcmovbe
mov
in
mov
mov
fmul
jmp
call
lods
(bad)
loop
dec
sti
xlat
xchg
jmp
(bad)
repnz
inc
loop
out
sar
cmc
mov
nop
test
(bad)
xchg
mov
nop
in
scas
pushf
shl
stos
sahf
cmps
out
xchg
mov
in
xlat
loop
xchg
in
(bad)
not
aad
jmp
mov
in
cmc
(bad)
lahf
sub
test
mov
(bad)
rol
loopne
fucomp
loope
add
mov
jecxz
sub
mov
push
hlt
out
cmps
int3
stc
(bad)
(bad)
call
cmps
mov
xchg
xchg
cmp
mov
loopne
rcl
shl
loope
nop
test
loope
test
xchg
xchg
cmp
sahf
movs
fiadd
stos
mov
shr
ret
jmp
mov
ror
cld
loope
mov
call
repnz
lods
in
cmc
(bad)
stos
mov
xchg
jmp
retf
in
in
mov
cld
std
rol
scas
mov
xchg
jmp
std
xchg
cli
fwait
call
test
hlt
in
cmc
(bad)
int3
inc
mov
les
hlt
frstor
fdivrp
mov
int3
into
into
xchg
in
icebp
jecxz
jmp
jecxz
mov
pushf
movs
call
mov
jmp
iret
aam
aam
jmp
xlat
mov
out
xlat
xchg
call
cwde
icebp
aam
hlt
lods
in
cmc
fisttp
sahf
jmp
enter
xchg
out
sti
int
add
xchg
mov
sti
movs
xchg
(bad)
cli
mov
mov
push
hlt
sub
hlt
mov
xchg
movs
in
lods
test
mov
hlt
(bad)
cli
loope
rcr
shr
mov
(bad)
std
jmp
sti
jecxz
test
mov
fsub
in
call
mov
(bad)
xchg
in
(bad)
cmc
aam
call
mov
mov
(bad)
mov
enter
icebp
shl
retf
enter
shr
add
mov
test
test
clc
xchg
lock
sub
fsubr
fnstenv
hlt
xchg
mov
xchg
retf
stos
stos
xchg
lods
mov
mov
xchg
iret
jmp
fnsave
lock
ror
into
iret
(bad)
icebp
(bad)
cld
mov
mov
popf
leave
xchg
mov
mov
popf
nop
cdq
in
loop
stos
mov
icebp
out
cmc
sahf
lods
cld
clc
out
out
mov
mov
mov
cmps
jmp
movs
mov
in
cmc
(bad)
pushf
retf
mov
shl
fcmovnu
sti
int3
ror
leave
out
fld
iret
call
mov
mov
sahf
jmp
xchg
iret
xchg
loopne
repnz
cmps
test
retf
mov
mov
xor
iret
xchg
loopne
repnz
cmps
mov
int3
(bad)
(bad)
fcmovu
lahf
xchg
mov
fwait
xchg
stc
fisttp
scas
in
aam
aam
test
mov
(bad)
(bad)
fcmovu
lahf
xchg
scas
movs
into
stos
test
nop
xchg
cdq
iret
xchg
test
mov
xlat
aam
test
cdq
out
mov
mov
jmp
xchg
xchg
cli
(bad)
mov
cmps
inc
mov
call
in
nop
(bad)
nop
test
mov
(bad)
out
stos
mul
cli
call
xchg
loop
stos
mov
(bad)
int3
lds
rcr
in
mov
test
mov
mov
mov
jmp
cmps
test
shl
mov
retf
clc
and
iret
jmp
jmp
out
fiadd
out
fdiv
mov
mov
cdq
jecxz
leave
(bad)
repnz
jmp
add
mov
(bad)
out
aad
leave
lahf
xchg
adc
mov
mov
int
xchg
sbb
sti
mov
xchg
cmc
cwde
std
fcomip
repz
stos
lods
fcomi
hlt
lods
in
cmc
frstor
popf
lds
shr
out
out
test
loopne
mul
mov
hlt
xchg
mov
loop
mov
out
out
mov
test
std
xchg
into
ror
cld
in
popf
(bad)
aam
mov
iret
jmp
fnstsw
icebp
aam
jmp
in
loope
sti
neg
jecxz
mov
lahf
sti
loopne
(bad)
lock
out
in
into
mov
fsub
fild
pushf
xchg
cld
mov
mov
cwde
cwde
call
mov
cmc
xchg
enter
fild
jmp
sti
in
mov
loopne
cdq
in
cmps
fdiv
test
in
out
mov
test
retf
fcmovu
into
mov
stc
xchg
repz
xchg
iret
jmp
fisttp
(bad)
in
(bad)
iret
ret
test
clc
mov
loop
sti
jecxz
mov
cli
cli
repz
lds
test
(bad)
faddp
(bad)
fidiv
mov
mov
in
cmc
(bad)
sti
(bad)
hlt
mov
fdivr
lahf
loop
cdq
(bad)
test
out
xchg
call
lock
cmps
mov
(bad)
fnstenv
hlt
loope
iret
stc
mul
mov
call
loope
mov
(bad)
mov
xchg
iret
jmp
fisttp
(bad)
(bad)
fdiv
call
rcl
ror
fdivrp
jecxz
lods
leave
mov
mov
std
xchg
rol
std
jmp
out
iret
mov
test
xor
in
cmc
fstp
cli
retf
mov
shr
loop
repz
lahf
test
std
test
cld
pushf
out
test
sahf
lods
test
mov
lock
retf
icebp
(bad)
fwait
out
lock
mov
repnz
(bad)
repnz
popf
xchg
(bad)
into
mov
(bad)
ret
int
xchg
adc
xchg
lahf
lods
mov
mov
pushf
fldenv
cli
retf
xchg
loop
stos
mov
into
out
mov
test
clc
shl
loope
rcl
mov
lods
in
cmc
fisttp
std
mov
shl
jecxz
(bad)
clc
rcl
std
fwait
test
mov
cwde
fiadd
out
lahf
mov
scas
(bad)
repnz
sar
icebp
cmps
vpsubw
test
movs
xchg
imul
mov
cmp
(bad)
xchg
jmp
test
enter
call
mov
mov
pushf
mov
xchg
iret
jmp
fisttp
retf
rol
leave
lahf
sahf
std
std
fucomi
jmp
loop
sti
jecxz
test
test
cld
mov
(bad)
(bad)
mov
into
mov
cmps
test
xlat
sahf
mov
mov
xchg
fdivr
mov
xchg
iret
jmp
shr
fsub
loope
inc
mov
jecxz
leave
(bad)
repnz
(bad)
icebp
xchg
aam
sahf
fcom
(bad)
cld
mov
add
imul
cwde
movs
in
mov
mov
mov
stos
into
or
sti
imul
jmp
rcr
not
xchg
test
xchg
mov
stc
call
mov
mov
neg
scas
(bad)
std
neg
mov
out
xlat
leave
(bad)
lea
mov
xchg
mov
mov
hlt
xchg
iret
jmp
loope
ret
int3
out
in
fsubrp
jmp
out
scas
jecxz
leave
(bad)
repnz
sahf
std
cli
fmul
loopne
mov
xlat
mov
nop
test
jmp
clc
clc
mov
xbegin
cwde
xchg
loop
stos
mov
sar
mov
lods
(bad)
in
xchg
enter
xchg
out
mov
repnz
lods
in
cmc
(bad)
cmps
pushf
movs
out
shr
jmp
fdivp
(bad)
add
mov
stos
retf
mov
call
mov
mov
mov
fwait
dec
jmp
xchg
scas
cmps
in
mov
jmp
jmp
frstor
mov
mov
retf
in
int
jecxz
aam
fisttp
jecxz
(bad)
cmc
idiv
aad
or
cdq
mov
popf
xchg
sti
jmp
ffree
fucomp
mov
fadd
(bad)
int
mov
mov
sbb
in
mov
xchg
iret
jmp
mov
xchg
cmp
mov
repnz
(bad)
repnz
clc
mov
ret
cli
shl
int
out
xchg
test
enter
mov
popf
stc
loopne
mov
lahf
mov
stos
mov
iret
cmps
in
in
xchg
(bad)
retf
fst
mov
test
repnz
lods
in
cmc
fnstsw
lea
enter
out
loopne
into
int3
icebp
out
test
stos
movs
xchg
mov
mov
mov
scas
mov
mov
test
loopne
xchg
jmp
mov
movs
loop
sbb
stc
rol
in
(bad)
int3
cld
vphaddbw
repnz
jecxz
clc
sahf
mov
out
mov
ret
nop
lock
sti
jmp
fcomp
sub
scas
xchg
xchg
mov
clc
cdq
hlt
xchg
iret
jmp
(bad)
in
cld
aam
lahf
leave
repnz
rcr
enter
(bad)
out
jecxz
leave
(bad)
repnz
imul
nop
fiadd
loopne
(bad)
into
in
shl
or
loope
(bad)
call
(bad)
jmp
rcr
lahf
clc
mov
sti
shl
(bad)
out
mov
int3
ror
mov
mov
xor
lods
in
cmc
fnstsw
int
out
(bad)
call
leave
xchg
aad
cli
out
test
mov
xchg
fisubr
std
ret
(bad)
mov
test
loop
into
xchg
fucomp
mov
cmps
(bad)
aam
movs
jmp
cmc
xchg
iret
jmp
(bad)
mov
(bad)
out
mov
(bad)
(bad)
(bad)
ror
std
cdq
in
fdivrp
jecxz
popf
int
fwait
call
or
jmp
fidivr
fsubr
ret
icebp
sti
xlat
nop
out
pushf
test
enter
lea
sar
enter
leave
aam
mov
enter
test
or
rol
aad
cmps
fnstenv
hlt
xchg
mov
repz
stc
mov
xchg
mov
stc
scas
loop
cmps
mov
mov
les
cld
icebp
mov
or
xchg
out
sti
scas
xchg
stos
sub
lock
mov
xchg
loop
stos
mov
fcmovb
(bad)
mov
out
sti
out
out
repnz
loope
xchg
jmp
jmp
xchg
mov
fistp
shr
rcl
int3
rcr
in
mov
in
std
cmc
mov
sahf
jmp
popf
mov
movs
in
stos
fsubr
stc
jmp
ret
retf
into
popf
rol
scas
xchg
sahf
mov
sbb
mov
xchg
imul
fisub
neg
call
mov
fmulp
retf
jmp
xchg
repnz
(bad)
repnz
clc
lods
mov
lea
ret
out
lds
nop
test
mov
test
mov
mov
scas
loopne
mov
fcomp
aam
mov
(bad)
sti
stc
fisttp
fdivrp
jecxz
cmps
cmc
inc
mov
xchg
enter
mov
mov
jmp
nop
xchg
mov
mov
cld
xchg
xchg
into
mov
xlat
ror
icebp
enter
cld
cmp
test
nop
icebp
xchg
(bad)
cwde
lds
stos
in
iret
jmp
mov
(bad)
hlt
aam
shl
ret
fsubrp
sar
mov
mov
repnz
cdq
mov
loopne
mov
xchg
loopne
mov
int
rcr
shl
xlat
mov
test
mov
mov
xchg
iret
jmp
fnstsw
fsubr
std
out
out
xchg
mov
repnz
ror
loop
sti
jecxz
lods
in
cdq
in
xchg
stc
ret
cld
xchg
mov
mov
retf
fidiv
(bad)
mov
call
loop
sahf
test
mov
xchg
hlt
lods
in
cmc
fst
cmps
xchg
xchg
in
in
out
stos
retf
mov
in
fdivr
cli
rol
cli
mov
mov
into
mov
mov
stos
stos
fnstenv
hlt
fdiv
retf
leave
mov
pushf
jmp
(bad)
sti
mov
pushf
scas
cmps
cwde
cmps
(bad)
fmul
fdivr
iret
test
test
mov
mov
stc
mov
cwde
mov
test
cwde
xchg
loop
stos
mov
mov
jmp
in
repnz
sti
hlt
cmc
retf
sar
popf
mov
in
repnz
lods
in
cmc
fisttp
popf
lahf
mov
lods
clc
enter
cmc
les
add
out
sbb
sahf
test
sti
scas
cli
leave
mov
test
sahf
clc
retf
enter
call
popf
mov
rcl
out
enter
repnz
out
aad
xchg
int3
nop
test
test
in
out
xchg
mov
cmps
retf
fidiv
mov
loop
stos
mov
mov
mov
fadd
(bad)
icebp
sti
shl
test
hlt
lods
in
cmc
fst
std
jmp
std
loope
aam
stc
xchg
int3
popf
jmp
scas
fwait
mov
jmp
in
lahf
lea
xchg
xchg
call
out
jmp
mov
cld
mov
mov
leave
(bad)
repnz
test
out
mov
mov
cmc
jmp
xchg
adc
mov
out
stos
cdq
in
test
popf
mov
popf
jmp
out
shl
frstpm(287
(bad)
cmp
sti
jecxz
xchg
lock
mov
mov
jmp
loopne
call
sbb
retf
(bad)
mov
call
mov
sti
movs
into
and
iret
jmp
leave
lock
in
mov
idiv
ret
mov
stos
lods
jmp
call
stos
mov
xchg
(bad)
mov
mov
retf
cld
call
popf
mov
cli
nop
mov
lock
stos
(bad)
sti
cmps
mov
jmp
loop
ror
pushf
(bad)
nop
test
xchg
movs
mov
cdq
stc
ret
call
stos
mov
(bad)
lock
aam
(bad)
xchg
loope
not
ret
out
mov
mov
xchg
in
repnz
lods
in
cmc
(bad)
mov
fsubr
icebp
fnstsw
repz
fidiv
lahf
jecxz
std
aad
mov
xchg
or
retf
cwde
xchg
iret
jmp
in
(bad)
mov
xchg
test
fst
mov
jecxz
leave
(bad)
repnz
mov
clc
mov
mov
iret
(bad)
lods
call
jmp
call
popf
mov
and
mov
iret
jmp
fnstsw
iret
mov
shl
(bad)
int3
dec
loop
sti
jecxz
cwde
aad
popf
call
stc
mov
(bad)
call
mov
out
xchg
out
fnstcw
test
test
cmc
jmp
fisubr
int
(bad)
call
mov
mov
mov
mov
xchg
mov
fnstenv
hlt
xchg
mov
mov
idiv
xchg
popf
out
pushf
std
lds
mov
nop
mov
(bad)
(bad)
cmc
in
(bad)
nop
test
jmp
in
movs
nop
out
cwde
mov
stos
cdq
cld
mov
mov
scas
xchg
loop
stos
mov
mov
out
std
out
mov
fild
nop
cmp
loopne
xchg
stos
mov
mov
mov
popf
leave
mov
leave
stos
mov
mov
call
mov
les
out
in
out
aam
iret
ret
mov
xchg
xchg
pushf
test
test
cmps
sti
mov
cli
(bad)
jmp
int3
loop
jmp
call
sbb
(bad)
repnz
xchg
ret
mov
(bad)
out
cmp
neg
mov
test
into
mov
xchg
iret
jmp
fisttp
out
clc
mov
ror
fadd
into
in
(bad)
cdq
xchg
mov
mov
mov
loop
stos
mov
rcl
int
in
ffree
(bad)
ffree
into
loopne
xchg
jmp
mov
cmp
iret
lods
movs
stc
call
mov
fmul
jmp
mov
cdq
cmps
int
cwde
loop
sahf
(bad)
stos
lock
int3
ror
in
shl
loopne
xchg
iret
xchg
rol
out
scas
lahf
in
inc
std
push
int
clc
lds
out
loopne
int
lock
out
xchg
mov
leave
(bad)
repnz
test
loope
cmps
lds
shl
mov
call
icebp
call
cwde
les
xchg
iret
jmp
fnstsw
std
loop
jmp
mov
leave
movs
in
call
aam
jmp
mov
cwde
sti
jmp
mov
mov
lahf
clc
mov
stc
loop
stos
mov
std
(bad)
int3
int3
int3
mov
in
iret
iret
in
call
movs
lods
in
sahf
loop
cmps
loopne
mov
hlt
xchg
sar
fincstp
xlat
retf
mov
repz
xchg
leave
mov
test
mov
movs
sub
mov
stc
and
cmps
ret
loop
mov
retf
lods
xchg
rol
sti
test
mov
clc
pushf
sti
mov
stos
jecxz
mov
rol
shr
hlt
ret
xchg
(bad)
(bad)
rcr
mov
repnz
(bad)
repnz
mov
scas
iret
lods
repnz
rol
mov
(bad)
cli
ret
in
or
test
fnstcw
hlt
(bad)
popf
fist
hlt
iret
in
lock
xlat
idiv
aam
iret
mov
xchg
jmp
xchg
std
mov
std
in
lods
into
cld
cmps
fnclex
lahf
stos
mov
sar
ret
mov
call
mov
(bad)
cli
out
test
imul
std
mov
iret
iret
out
jmp
fmul
call
mov
cli
xchg
cli
xchg
lock
mov
mov
mov
into
aad
(bad)
mov
iret
call
mov
xchg
mov
mov
cmps
test
stos
movs
idiv
mov
mov
ret
(bad)
rol
repz
mov
lods
mov
(bad)
repnz
mov
mov
call
lods
repnz
into
(bad)
imul
out
stos
repz
jmp
(bad)
stc
mov
jmp
cmps
icebp
out
jmp
repz
xor
mov
test
lock
call
sti
sar
retf
jecxz
cwde
idiv
loope
sti
int3
mov
mov
in
call
idiv
cwde
fldcw
clc
(bad)
mov
shl
lock
ret
mov
fucom
retf
cdq
lods
mov
lods
call
cld
test
aam
mov
out
mov
cwde
leave
int
mov
mov
test
idiv
sti
test
stc
stc
sahf
and
fcmove
loopne
fcomip
rcl
xchg
mov
out
out
ret
aad
cwde
xchg
jmp
mov
xchg
cli
cdq
xchg
mov
fdiv
out
mov
shl
or
loopne
cmps
mov
call
(bad)
xchg
lahf
nop
scas
xchg
loop
(bad)
in
(bad)
repz
loopne
mov
into
int
mov
(bad)
in
mov
aam
mov
sahf
sahf
stc
hlt
mov
mov
mov
xchg
out
cmc
leave
loope
mov
cdq
cwde
(bad)
jecxz
mov
mov
hlt
lods
and
in
shl
not
mov
enter
enter
mov
int
xchg
std
fwait
pushf
call
xchg
loop
stos
mov
rol
retf
repnz
stc
jmp
repnz
popf
mov
lods
loope
mov
mov
sti
out
jmp
mov
in
(bad)
iret
mov
jmp
cld
mov
mov
int
movs
sub
mov
fld
shr
not
mov
cmc
loop
inc
in
in
test
fistp
mov
mov
retf
mov
fdivp
les
fwait
jmp
enter
mov
(bad)
repnz
or
shl
jmp
retf
ret
xchg
clc
loope
in
out
jecxz
mov
test
loop
stos
xchg
iret
jmp
fst
fsub
(bad)
stos
into
(bad)
fist
hlt
int
xchg
std
mov
or
lea
mov
loope
lahf
stos
mov
icebp
in
in
xchg
aad
retf
out
dec
lahf
mov
fwait
mov
cdq
popf
mov
clc
icebp
icebp
(bad)
mov
ret
ret
out
mov
rcr
mov
call
fwait
test
mov
mov
ror
cwde
fxch
(bad)
test
nop
cdq
mov
call
call
test
mov
cld
out
mov
scas
rcr
out
repz
cmp
leave
(bad)
repnz
stc
mov
fiadd
out
(bad)
fcmovbe
xor
in
into
loope
mov
cwde
mov
mov
xchg
iret
jmp
frstor
leave
clc
(bad)
mov
aam
ror
xchg
xchg
mov
lahf
mov
mov
repz
stos
mov
mov
mov
lock
lock
xchg
mov
pushf
(bad)
cwde
sti
out
mov
popf
mov
out
fxch
cmc
mov
fcomp
(bad)
loopne
out
mov
movs
fcomp
mov
lods
hlt
cld
(bad)
lock
out
leave
and
test
mov
idiv
mov
inc
mov
fadd
ret
mov
aad
in
scas
cwde
mov
leave
(bad)
repnz
sahf
in
stc
int
call
icebp
stc
mov
icebp
test
enter
mov
mov
fwait
cmps
stc
pushf
stc
lahf
std
cli
cli
mov
lahf
stos
icebp
mov
aad
lock
fdivr
repz
aam
out
mov
fdivrp
jecxz
pushf
stc
mov
call
sti
(bad)
fist
retf
out
mov
in
repnz
mov
cdq
mov
jecxz
hlt
lods
in
cmc
fisttp
test
xchg
int
jmp
(bad)
enter
fmul
iret
fmul
stos
mov
mov
test
iret
neg
xchg
scas
(bad)
iret
fidiv
aad
(bad)
rcl
rcl
(bad)
sahf
mov
rcl
jmp
scas
cdq
test
iret
out
loopne
mov
mov
fwait
dec
lahf
(bad)
fcmovu
scas
out
xchg
lods
xchg
test
(bad)
xchg
mov
fimul
mov
mov
ret
shl
xchg
fcom
call
call
fdivp
clc
(bad)
pushf
cld
xchg
loope
xchg
xchg
(bad)
mov
fsubrp
jmp
out
repnz
nop
loop
sti
jecxz
mov
call
icebp
popf
pushf
movs
sti
aam
(bad)
repnz
aad
enter
mov
lahf
out
test
idiv
hlt
lods
in
cmc
fld
mov
rol
retf
fcmovnbe
int3
int
repz
std
mov
mov
out
cli
(bad)
mov
std
xchg
iret
jmp
cmc
shl
(bad)
fimul
xchg
cmps
mov
mov
mov
loop
mov
mov
out
hlt
fsub
lock
cld
mov
mov
cld
mov
popf
mov
mov
(bad)
fdivr
int3
rol
aad
not
fcom
mov
mov
mov
frstor
out
mov
int3
xchg
icebp
fdivr
xlat
clc
jmp
sahf
mov
mov
fwait
mov
test
neg
sar
mov
cmc
shl
in
mov
xchg
cwde
(bad)
scas
mov
mov
jmp
hlt
lods
in
cmc
fst
call
ret
(bad)
mov
aad
(bad)
icebp
repnz
mov
fwait
iret
mov
xchg
iret
mov
aam
test
enter
jmp
mov
mov
mov
mov
std
retf
out
sar
retf
int
xlat
mov
or
jmp
scas
xchg
test
mov
stos
mov
(bad)
mov
mov
enter
in
std
pushf
shl
out
in
mov
mov
hlt
sahf
adc
test
nop
scas
out
sti
repz
iret
in
rcl
mov
repnz
xchg
mov
scas
lds
fld
movs
(bad)
in
icebp
ret
int
mov
repnz
ret
jecxz
in
sar
jmp
mov
xchg
sbb
scas
out
int
out
hlt
aad
lahf
xor
retf
imul
(bad)
pushf
out
mov
popf
fdivr
mov
cwde
xchg
repz
mov
out
stc
in
clc
mov
mov
(bad)
fsub
retf
fisttp
in
test
sahf
cmc
xchg
iret
jmp
fld
in
rol
rol
out
call
(bad)
fucomp
fadd
mov
pushf
fiadd
rcl
ret
loop
stos
mov
in
shl
in
cmc
mov
mov
out
lahf
fcomi
hlt
lods
in
cmc
fisttp
ret
out
jecxz
retf
test
mov
xchg
pushf
loope
mov
stos
out
popf
mov
cmps
movs
xchg
lods
scas
stc
xchg
lahf
mov
scas
scas
lds
jmp
dec
fdivr
cmps
sub
cmps
cmp
sahf
mov
out
retf
shl
cmc
cdq
rcl
mov
call
call
fwait
lahf
xchg
(bad)
out
add
clc
(bad)
cld
(bad)
out
xchg
xchg
test
cmps
mov
test
out
out
mov
mov
shl
shl
mov
jecxz
nop
cli
test
(bad)
cmps
mov
cmps
lods
popf
shl
ret
shr
aad
int
mov
leave
into
rcl
call
xchg
add
(bad)
test
cli
pushf
out
fucom
loope
mov
xchg
cwde
out
test
lea
call
sti
iret
mov
out
out
mov
mov
rep
clc
stc
lock
jmp
test
repnz
mov
xchg
xchg
shr
in
mov
push
fmul
mov
inc
hlt
fnstsw
int3
mov
xchg
icebp
fmul
out
out
clc
cdq
in
fdivrp
jecxz
(bad)
jmp
lods
xchg
xchg
test
(bad)
clc
mov
fsub
xchg
retf
scas
in
mov
xchg
fwait
nop
mov
test
cmc
xchg
xchg
fiadd
into
int
mov
out
jecxz
mov
mov
in
in
mov
les
movs
sar
mov
test
jecxz
stc
rcl
iret
lods
mov
stos
xchg
xchg
cli
mov
sti
mov
cli
scas
nop
cdq
xchg
mov
loopne
mov
loope
nop
pushf
(bad)
nop
test
mov
mov
(bad)
cli
lods
fiadd
mov
mov
icebp
mov
icebp
enter
nop
in
cmc
(bad)
jecxz
mov
test
jecxz
sti
lds
icebp
std
stos
fucom
loopne
fstp
mov
(bad)
jmp
xchg
jmp
call
ret
aam
test
in
std
ficomp
fcomip
enter
rcr
(bad)
leave
test
mov
mov
lds
sti
(bad)
div
mov
test
leave
ret
int
cmc
mov
mov
scas
call
fnstsw
jecxz
loope
repnz
mov
mov
(bad)
dec
sti
jecxz
xchg
(bad)
sub
mov
in
mov
jmp
(bad)
not
jmp
scas
mov
mov
(bad)
mov
lods
shl
shl
hlt
int
mov
out
test
mov
sti
leave
mov
jmp
lods
(bad)
idiv
test
stc
(bad)
mov
in
lods
jmp
cdq
mov
lods
test
loop
shr
fdivr
mov
nop
test
mov
in
fwait
stos
loopne
call
lods
cdq
call
sti
mov
faddp
in
jmp
stc
div
call
call
(bad)
out
cwde
(bad)
sahf
(bad)
mov
cmps
retf
xlat
in
aad
(bad)
mov
call
sahf
mov
(bad)
(bad)
mov
jmp
mov
xchg
scas
iret
loop
ret
shl
xchg
fwait
cwde
cwde
in
fmul
mov
repnz
(bad)
repnz
mov
mov
call
ffreep
xchg
adc
scas
mov
mov
std
mov
cmps
enter
loop
stos
mov
mov
out
repz
enter
mov
(bad)
std
repnz
lods
in
cmc
fld
xchg
cli
xchg
iret
mov
fidiv
mov
add
mov
mov
test
mov
lods
icebp
sahf
xchg
out
mov
test
fucom
shl
mul
call
mov
sahf
cmc
xchg
iret
jmp
(bad)
clc
cld
(bad)
jmp
popf
repnz
fmulp
jmp
sti
jecxz
mov
popf
mov
(bad)
call
mov
cmps
test
retf
in
(bad)
xchg
mov
mov
clc
lods
aam
cdq
hlt
xchg
iret
jmp
ffree
loope
repz
fucomip
(bad)
mov
jmp
mov
pushf
lock
mov
mov
mov
in
ret
jmp
mov
loopne
mov
fstp
xlat
ret
fdecstp
shl
mov
or
lods
mov
mov
mov
xchg
lods
cmps
retf
(bad)
in
mov
lock
mov
(bad)
jecxz
xchg
in
stos
loop
sti
jecxz
mov
sahf
test
cld
cwde
mov
test
ret
call
sbb
out
rol
sar
mov
sti
mov
hlt
xchg
iret
jmp
xlat
int3
jecxz
div
retf
(bad)
in
call
repnz
(bad)
repnz
popf
stos
sbb
jmp
fucomip
out
test
enter
mov
mov
repz
xchg
loop
stos
mov
mov
mov
retf
jmp
mov
mov
retf
repnz
lods
in
cmc
(bad)
sahf
std
out
lods
cdq
jmp
rol
mov
out
test
sahf
movs
jmp
mov
inc
xchg
(bad)
out
mov
test
cwde
test
xlat
jmp
jmp
test
cmc
xchg
iret
jmp
fstp
iret
leave
leave
mov
retf
mov
xchg
cmc
out
not
ror
jecxz
dec
dec
or
xchg
out
jmp
mov
fsubr
lock
stos
mov
mov
xchg
or
mov
xchg
iret
jmp
aam
shl
iret
shl
fisttp
cdq
jecxz
leave
(bad)
repnz
mov
xchg
xchg
lock
mov
nop
test
lods
jmp
mov
nop
mov
mov
std
mov
mov
fdivr
rol
(bad)
mov
fst
in
mov
pushf
test
in
mov
in
cmc
(bad)
mov
loopne
enter
mov
out
mov
rol
mov
jmp
cdq
xchg
mov
cli
sahf
cli
retf
test
mov
test
enter
jmp
mov
std
imul
hlt
fnstsw
(bad)
mov
xchg
jecxz
mov
mov
loop
sti
jecxz
lods
cld
mov
popf
cdq
xchg
sar
mov
ror
int
fsubr
cli
out
mov
sti
icebp
fsubr
mov
fwait
out
scas
in
out
int3
loop
int
jmp
mov
add
cmps
mov
mov
nop
fdivr
mov
mov
test
ret
cwde
jmp
retf
call
(bad)
call
sahf
cmc
xchg
iret
jmp
fst
jmp
retf
jecxz
int3
(bad)
jecxz
xchg
out
mov
jmp
test
loop
mov
mov
call
mov
jmp
aad
scas
cmps
scas
fwait
jmp
stos
in
repnz
lods
in
cmc
fnstsw
lods
out
out
icebp
ret
in
aad
in
scas
(bad)
call
in
lahf
mov
fwait
cdq
pushf
nop
xchg
hlt
cwde
or
lahf
cld
inc
fnstenv
hlt
xchg
or
leave
stos
lahf
pushf
mov
ficomp
xchg
iret
jmp
(bad)
popf
cwde
out
test
stc
out
fadd
xchg
jmp
jmp
loop
sti
jecxz
cli
cli
mov
lods
lahf
mov
jmp
(bad)
fidivr
(bad)
xchg
mov
fist
mov
lahf
stc
clc
mov
mov
jmp
in
sti
retf
icebp
rcl
fadd
jmp
(bad)
repnz
lods
in
xchg
out
movs
in
vpsubq
imul
fldpi
in
adc
mov
lea
pushf
lods
stos
aad
mov
mov
mov
mov
mov
sahf
std
shl
test
sti
jecxz
fwait
repz
mov
mov
xchg
popf
mov
mov
mov
fcom
mov
movs
xchg
jmp
popf
mov
mov
jmp
mov
faddp
repnz
xchg
out
neg
enter
cmps
mov
mov
enter
stc
mov
repz
into
mov
hlt
ret
retf
lock
cli
mov
cmps
stc
loopne
cmc
xchg
iret
jmp
fisttp
retf
int
jecxz
in
fadd
lea
in
fdivrp
jecxz
add
mov
call
out
lahf
mov
mov
mov
dec
(bad)
ror
mov
mov
fwait
mov
jmp
in
xchg
mov
(bad)
in
out
int
mov
xchg
mov
mov
stc
stc
(bad)
mov
scas
cmc
leave
mov
test
fwait
in
lock
xchg
stos
scas
xchg
mov
mov
cmc
mov
int
lods
sahf
jecxz
xor
cmc
mov
loopne
sahf
movs
rcl
iret
mov
(bad)
inc
mov
in
mov
sti
scas
fcmovb
scas
int
fucomi
jmp
loope
div
jecxz
mov
lods
cmps
jecxz
mov
aad
lea
fcomip
icebp
ror
inc
(bad)
div
mov
cmps
(bad)
mov
lods
hlt
lods
in
cmc
fld
aam
cmps
jecxz
(bad)
retf
out
icebp
jmp
mov
test
lahf
cld
xchg
mov
xchg
scas
lods
(bad)
std
(bad)
mov
mov
cli
in
in
xchg
(bad)
repnz
mov
mov
movs
lods
jmp
xchg
add
retf
retf
mov
mov
call
clc
test
stos
clc
xchg
iret
jmp
(bad)
out
out
out
(bad)
(bad)
repz
out
test
xchg
call
or
add
mov
xchg
loop
stos
mov
mov
nop
std
(bad)
repz
popf
cli
mov
lods
sbb
std
fisttp
call
ret
mov
repz
lock
stos
lea
xchg
sahf
movs
stos
popf
imul
mov
mov
rcr
int
mov
mov
mov
ret
jmp
(bad)
lods
popf
jmp
ror
mov
mov
cli
neg
mov
scas
call
stc
test
(bad)
call
mov
mov
fwait
cld
(bad)
not
iret
std
mov
(bad)
mov
xchg
sahf
pushf
mov
lock
shr
rol
jmp
jmp
lds
hlt
fnsave
lock
mov
mov
enter
sar
fcomi
rol
mov
test
test
xchg
repz
shr
leave
pushf
sti
ror
stos
fdivrp
jecxz
mov
(bad)
mov
xchg
idiv
sar
mov
mov
(bad)
mov
enter
mov
scas
loopne
xchg
in
cmc
fisttp
fnstenv
retf
mov
(bad)
in
aad
mov
out
xchg
lds
retf
in
(bad)
mov
int3
mov
mov
loopne
into
xchg
in
cmc
mov
stos
out
mov
cmc
scas
fwait
fwait
std
xchg
test
repz
out
mov
in
leave
(bad)
mov
test
out
xchg
in
mov
cld
int
mov
enter
mov
mov
mov
cwde
popf
out
jmp
mov
idiv
stos
in
cmps
ret
fisubr
cld
cld
in
out
in
jmp
jecxz
iret
ror
lods
cwde
jmp
in
mov
xchg
mov
hlt
fnstsw
mov
mov
call
repz
mov
xchg
mov
call
mov
xlat
int3
stc
loop
out
mov
cwde
repnz
(bad)
repz
int3
hlt
in
scas
xchg
fdivrp
jecxz
std
cld
nop
cld
loop
mov
xchg
nop
lock
stos
call
(bad)
aam
out
cmc
lahf
retf
inc
loopne
jmp
mov
(bad)
mov
xchg
repz
mov
mov
sbb
enter
mov
test
mov
cli
cld
enter
movs
test
aad
repnz
enter
ret
aam
out
loope
fstp
hlt
out
cwde
xchg
fwait
stos
mov
fwait
(bad)
clc
cmps
retf
fnstsw
jmp
out
into
mov
int3
scas
shl
repz
jecxz
call
sar
fprem
cdq
retf
sahf
call
(bad)
not
ffreep
sahf
cdq
in
call
in
mov
mov
leave
(bad)
repnz
dec
lds
int
fdiv
fwait
iret
dec
std
xchg
fwait
mov
lods
lods
call
cwde
in
mov
or
shl
inc
loop
lock
test
xchg
mov
scas
mov
mov
(bad)
fldcw
loop
shl
test
icebp
repz
in
xchg
(bad)
out
mov
sahf
cli
jmp
out
mov
fwait
iret
stos
stc
ret
xchg
lahf
stos
mov
loop
xlat
out
cld
out
out
in
lds
mov
mov
mov
fdivrp
stos
(bad)
xchg
mov
(bad)
bnd
mov
rcl
jmp
mov
sbb
and
inc
loop
(bad)
fidiv
fldz
out
xchg
mov
imul
lahf
test
fwait
movs
jmp
out
cmc
stc
loop
cmc
(bad)
xchg
in
(bad)
stos
mov
repnz
(bad)
repnz
movs
nop
pop
cdq
stos
jecxz
in
fcmove
int
(bad)
jmp
in
mov
hlt
mov
xchg
scas
mov
xchg
cli
std
movs
test
mov
xchg
jmp
in
in
lock
shl
popf
test
xchg
mov
mov
stc
mov
(bad)
stc
mov
enter
xchg
retf
(bad)
loop
(bad)
mov
cld
mov
movs
mov
mov
sahf
cdq
mov
mov
mov
mov
fmul
lock
mov
add
cmps
mov
xchg
mov
icebp
loop
neg
mov
fcom
cmc
clc
fsubr
scas
out
mov
cmps
cdq
call
xchg
mov
popf
sti
mov
cld
enter
fscale
jmp
fdivr
(bad)
rol
lods
jmp
cwde
mov
test
enter
into
iret
ror
int
loop
pushf
rol
hlt
iret
iret
mov
out
popf
(bad)
repnz
(bad)
repnz
mov
pushf
mov
(bad)
leave
mov
mov
call
shr
test
xchg
fisttp
loope
int
jmp
retf
mov
mov
xchg
in
xchg
shr
aam
(bad)
enter
int
into
out
fucomi
loope
stos
mov
mov
mov
ficom
mov
(bad)
(bad)
test
mov
in
fsubr
sar
std
cmp
(bad)
hlt
xor
in
cmc
(bad)
mov
aam
out
scas
shr
lock
nop
out
jmp
xchg
mov
fadd
div
test
fidivr
fdivp
idiv
pop
mov
mov
scas
mov
mov
(bad)
(bad)
mov
jmp
int
out
in
out
out
loope
aad
mov
mov
mov
mov
mov
rcr
mov
hlt
aam
out
ftst
aad
fcmovbe
scas
xchg
mov
jmp
pushf
std
out
test
call
mov
enter
mov
rol
xchg
xchg
stos
test
xchg
iret
jmp
(bad)
popf
jmp
rol
in
jecxz
fbstp
push
call
mov
xchg
mov
lea
fwait
mov
fadd
(bad)
cli
shl
mov
retf
xchg
mov
mov
loopne
lods
loopne
xchg
lods
inc
jmp
in
mov
mov
hlt
lods
sahf
sahf
mov
rcl
mov
(bad)
in
not
cmps
test
in
scas
mov
std
pushf
pushf
fidivr
call
scas
(bad)
retf
mov
faddp
sar
retf
mov
cwde
stc
pushf
cmps
movs
aam
clc
ror
scas
aam
cld
int
std
out
shl
mov
cli
mov
xchg
cmps
mov
xchg
fnstcw
lods
sar
leave
in
mov
scas
shl
clc
xchg
mov
enter
scas
jmp
repnz
sub
popf
rol
mov
jecxz
mov
repnz
(bad)
xlat
call
out
mov
cmps
cmps
call
jmp
(bad)
mov
std
out
leave
shl
shr
mov
fisubr
jecxz
nop
les
lea
pushf
xchg
test
call
sbb
loop
xor
mov
movs
loope
sahf
test
call
mov
xchg
sahf
ror
fadd
into
scas
mov
aad
test
in
xchg
mov
mov
fld
xchg
stos
in
sti
mov
leave
mov
test
dec
aam
out
jmp
scas
mov
fdivr
hlt
frstor
icebp
fidivr
out
lods
xlat
ret
(bad)
fisttp
(bad)
out
out
test
mov
enter
loop
stos
mov
mov
mov
(bad)
in
mov
xlat
mov
out
mov
stos
xchg
test
cdq
mov
stos
sub
(bad)
mov
mov
fsub
fsub
icebp
shl
xchg
mov
cdq
stos
retf
imul
mov
(bad)
repnz
sti
fsub
jmp
mov
shl
test
xchg
scas
cwde
xchg
loopne
(bad)
stc
lahf
sahf
lahf
movs
movs
mov
mov
int
iret
(bad)
mul
mov
sbb
fcomp
(bad)
out
mov
clc
fcmovu
mov
jmp
nop
nop
rcl
sti
sub
into
jmp
mov
stc
xchg
fnstsw
mov
out
fcmove
loopne
out
test
mov
loopne
mov
jecxz
sahf
(bad)
cmps
aam
iret
into
(bad)
into
mov
fdivr
xlat
repnz
jmp
popf
aam
clc
fisub
hlt
xchg
iret
jmp
(bad)
mov
loopne
hlt
jecxz
xchg
mov
jmp
mov
out
mov
mov
scas
hlt
sti
ret
mov
clc
out
aad
cli
repnz
fwait
test
mov
xchg
iret
jmp
(bad)
xchg
xchg
iret
loopne
(bad)
repz
loopne
ret
fadd
stc
div
enter
mov
jmp
sti
scas
fdivr
xchg
stc
loop
stos
mov
mov
shl
rcl
int3
icebp
xchg
mov
xchg
jmp
lods
in
cmc
(bad)
mov
nop
leave
lock
jecxz
cmc
(bad)
xchg
mov
mov
mov
test
call
jmp
fcom
test
loope
cld
(bad)
mov
test
mov
cli
cdq
mov
iret
jmp
fld
in
fsubp
(bad)
int3
mov
mov
(bad)
xlat
in
loope
cdq
in
fdivrp
jecxz
mov
mov
leave
test
xchg
mov
out
(bad)
(bad)
std
in
mov
(bad)
fst
cmps
fwait
mov
in
cmc
fld
lds
mov
ror
mov
add
movs
cdq
xchg
in
xchg
call
mov
fstp
test
(bad)
rcl
int3
test
mov
in
cmps
mov
jmp
cmc
xchg
iret
jmp
fld
ror
std
(bad)
stos
enter
std
call
in
fdivrp
jecxz
xchg
lods
mov
mov
sbb
out
stc
repz
cmps
test
xlat
cld
mov
adc
xchg
mov
hlt
xchg
iret
jmp
mov
fsub
repnz
hlt
stc
call
mov
xchg
stos
mov
repnz
cdq
cmps
mov
cwde
icebp
sar
jecxz
cmc
fsub
mov
or
mov
cmps
movs
mov
test
fld
stos
mov
in
aad
(bad)
aad
call
sti
and
movs
mov
mov
hlt
lods
in
cmc
fld
cwde
call
fsubr
shl
lods
(bad)
ficom
sti
in
cdq
test
test
mov
out
lock
hlt
les
retf
aad
xchg
(bad)
mov
mov
mov
jmp
(bad)
mov
mov
mov
lods
out
stc
loopne
mov
scas
in
fdivrp
jecxz
sahf
jmp
stos
movs
xchg
rcr
(bad)
mov
mov
fsub
or
(bad)
in
lods
sahf
stc
rol
scas
mov
xchg
scas
rol
loopne
(bad)
in
fnstcw
nop
sahf
xchg
clc
xchg
out
mov
(bad)
stos
mov
iret
fwait
mov
test
mov
jecxz
(bad)
in
ret
test
ret
(bad)
shl
lods
mov
fisub
mov
mov
out
(bad)
in
jmp
(bad)
rcl
sar
stos
stos
fmul
out
mov
cdq
lds
cmc
cli
(bad)
mov
enter
retf
fidiv
lods
cmps
cmps
ret
ret
ret
lods
enter
mov
jmp
int
ret
movs
inc
rcl
mov
scas
lods
mov
cmps
in
mov
lods
lods
mov
fwait
(bad)
cld
jmp
out
iret
shl
mov
in
(bad)
lods
scas
in
mov
cmps
ret
aam
xor
mov
fst
mov
int
in
sub
in
nop
mov
jmp
mov
mov
cmps
aam
sti
repz
mov
mov
shl
out
ret
iret
loopne
(bad)
in
std
lods
hlt
stos
mov
call
xchg
sar
call
cmc
out
into
mov
jmp
repnz
(bad)
repnz
iret
mov
loop
retf
ror
aam
cld
out
retf
(bad)
shl
rcl
scas
mov
mov
test
pushf
mov
hlt
lods
in
hlt
fnstsw
in
iret
div
sahf
fucomp
int3
(bad)
mov
mov
dec
aam
cli
clc
fld
jmp
mov
sahf
shl
loop
(bad)
in
lock
mov
sti
cmps
les
cmps
mov
loop
cld
out
(bad)
in
out
loope
loope
sub
loope
scas
cwde
mov
mov
xchg
mov
fist
(bad)
jmp
retf
fmul
aad
in
std
in
stos
lock
lds
mov
jmp
mov
loop
lahf
xchg
fcmovnu
std
les
mov
mov
repnz
(bad)
repnz
jmp
(bad)
iret
call
(bad)
lods
mov
loope
fwait
cmp
mov
mov
nop
adc
in
(bad)
clc
sti
cli
jmp
into
mov
mov
adc
iret
inc
fimul
mov
mov
std
repnz
lods
in
cmc
mov
scas
retf
(bad)
(bad)
fsubr
mov
cmc
rcl
popf
jmp
std
lahf
(bad)
mov
cld
mov
mov
cli
out
mov
mov
jecxz
call
cwde
lea
fstp
loop
scas
mov
mov
mov
jmp
fcomp
lods
mov
mov
mov
sahf
xchg
mov
movs
xchg
mov
mov
xlat
out
mov
cmp
call
div
in
ret
out
fwait
call
fsub
loopne
mov
enter
loope
mov
jecxz
jmp
fidivr
fwait
loopne
sar
cmc
shl
call
iret
in
cli
stos
in
call
scas
iret
or
vpmacsdd
fistp
loop
shl
shl
retf
mov
mov
lahf
mov
mov
lahf
mov
out
ret
(bad)
mov
or
scas
lods
mov
std
(bad)
cld
mov
enter
cmps
fidiv
imul
iret
xchg
call
mov
lods
stc
fimul
lods
in
cmc
mov
nop
(bad)
iret
stc
iret
out
rcl
xchg
leave
cmc
loopne
mov
std
in
mov
fmul
cld
test
pushf
int
mov
mov
jmp
test
into
xchg
(bad)
out
xlat
shr
xchg
in
in
mov
mov
jmp
fnstcw
hlt
fnstsw
mov
retf
xchg
test
mov
fwait
mov
hlt
fwait
movs
(bad)
mov
cmps
jmp
mov
cmps
mov
aam
int3
stc
mov
lahf
mov
call
sti
std
repnz
lods
in
cmc
mov
movs
fsubrp
jmp
cld
(bad)
mov
cld
ret
out
jmp
neg
call
scas
xchg
popf
aam
fld
aam
mov
ret
stc
mov
cmps
mov
aam
xchg
repz
cmc
hlt
lods
in
hlt
fst
mov
retf
in
(bad)
(bad)
jmp
sub
mov
clc
cdq
cwde
sahf
retf
cmc
mov
sar
div
call
iret
neg
mov
mov
stc
sti
stos
fisubr
xchg
fistp
mov
vpsubusb
enter
xchg
mov
repnz
(bad)
repnz
iret
mov
out
in
stc
shl
clc
fwait
cmp
mov
mov
in
popf
mov
pause
(bad)
fist
cmps
mov
fcmovu
cdq
xlat
fxch
xlat
mov
lahf
cwde
repz
lods
retf
repnz
lods
in
cmc
mov
xchg
xabort
shl
mov
loopne
mov
int3
in
(bad)
in
and
scas
int
scas
(bad)
out
lods
test
mov
repnz
into
mov
in
in
in
test
movs
mov
mov
(bad)
test
hlt
lods
in
hlt
fucomp
jmp
fcmovb
xchg
(bad)
(bad)
in
jmp
xlat
mov
jecxz
jmp
fiadd
popf
jecxz
(bad)
(bad)
out
call
shr
sub
lahf
mov
cli
mov
mov
popf
popf
fwait
out
cmps
stos
cmc
mov
xchg
fistp
in
retf
cld
lahf
jecxz
lock
mov
lea
(bad)
repnz
fistp
fnstcw
mov
mov
cmp
in
popf
popf
movs
into
mov
popf
jmp
fld
call
mov
xchg
(bad)
mov
jecxz
jmp
(bad)
(bad)
nop
into
mov
jecxz
cli
loopne
cld
call
pushf
sub
out
mov
lea
enter
in
cmc
mov
out
hlt
sar
ret
std
scas
cmc
mov
mov
sahf
rcl
pop
jmp
idiv
lea
repz
rol
cld
int3
mov
jmp
test
mov
repnz
(bad)
repnz
hlt
lahf
mov
std
in
dec
mov
cmc
fwait
out
(bad)
clc
fwait
cmp
lods
mov
out
lahf
lods
jmp
mov
stc
scas
enter
iret
jmp
push
aam
loope
mov
xchg
mov
out
mov
fnstenv
div
mov
shr
sub
nop
jmp
pushf
mov
test
sti
mov
in
sahf
sahf
pushf
test
enter
(bad)
shr
mov
in
out
lock
fild
scas
lahf
scas
cli
mov
sahf
popf
mov
in
icebp
iret
fsub
les
into
jmp
mov
test
lea
stos
mov
lahf
xchg
mov
call
aam
into
mov
in
cmp
mov
idiv
test
scas
call
fidiv
test
cdq
int3
aam
enter
cmps
scas
pop
cli
imul
idiv
(bad)
cli
fldpi
lods
mov
lods
mov
test
lea
mov
movs
cmp
mov
retf
cmp
sar
lods
test
jmp
(bad)
mov
(bad)
repnz
fwait
sti
lock
(bad)
icebp
fcos
out
mov
loopne
iret
call
test
xchg
stos
fwait
xchg
lahf
(bad)
pushf
mov
lahf
dec
mov
rcl
jmp
sar
out
shl
sahf
mov
iret
jmp
enter
fld
out
repz
int
imul
sub
mov
mov
std
(bad)
mov
aad
cmp
mov
stos
cld
mov
ret
in
lock
lahf
mov
scas
stos
mov
mov
fdivr
mov
sti
iret
aam
mov
into
retf
fucom
mov
test
cmc
lods
dec
xchg
int
(bad)
int
(bad)
fsubp
or
mov
xchg
lods
out
mov
iret
call
cld
movs
ret
mov
mov
cmps
mov
stc
out
repnz
or
jmp
cmps
xchg
into
lods
call
cmps
pushf
mov
int3
repz
hlt
rcr
sub
loopne
xchg
mov
nop
(bad)
hlt
movs
mov
fisttp
mov
lds
movs
div
mov
mov
xchg
mov
cli
call
(bad)
stc
pushf
(bad)
mov
sar
mov
test
into
out
retf
loope
repz
mov
jmp
mov
mov
hlt
(bad)
(bad)
lock
out
xchg
retf
jmp
mov
lods
(bad)
loope
(bad)
rcr
repz
sub
inc
mov
cmps
mov
fwait
(bad)
in
icebp
out
leave
repz
stos
xchg
test
mov
lods
in
cmc
mov
mov
fdiv
ret
adc
rcl
mov
not
mov
xchg
mov
cli
repz
retf
test
call
xchg
repnz
(bad)
repnz
fsub
in
std
mov
in
retf
mov
into
loope
test
cdq
mov
in
mov
lods
in
hlt
fisttp
jmp
xchg
xchg
retf
xchg
retf
mov
jecxz
jmp
into
xchg
jmp
fdivp
imul
mov
loope
xchg
repnz
mov
stos
test
mov
div
lods
in
cmc
mov
fwait
hlt
std
std
cld
mov
call
loopne
(bad)
xchg
fsub
in
std
in
lods
xchg
jmp
(bad)
jmp
mov
mov
mov
ret
in
lds
popf
out
mov
stos
sar
lods
in
hlt
fstp
int
hlt
jmp
stc
int
loopne
mov
xchg
mov
xchg
mov
call
jmp
in
repnz
in
imul
sub
mov
test
fistp
jmp
stos
mov
mov
xchg
fistp
cmc
mov
jecxz
fadd
xor
(bad)
mov
mov
loopne
mov
(bad)
repnz
call
lods
xlat
shr
aad
int3
iret
fsubp
stc
stc
(bad)
out
repz
popf
stos
clc
out
inc
popf
mov
cwde
clc
hlt
lods
in
hlt
fucom
fcomp
(bad)
loop
in
sahf
in
retf
into
lahf
call
mov
les
(bad)
xchg
add
sti
mov
cmps
mov
loopne
out
(bad)
popf
into
pushf
cwde
scas
cdq
jmp
std
cwde
enter
repnz
lods
in
cmc
mov
out
jmp
in
fadd
leave
retf
cdq
ret
cli
aad
jmp
lods
cmps
popf
cmp
pushf
mov
(bad)
sahf
pushf
xchg
fistp
(bad)
mov
loope
popf
sti
jmp
int3
hlt
xchg
call
lahf
cld
mov
mov
popf
xchg
test
fmul
mov
kmovd
hlt
fsubr
mov
mov
mov
pushf
mov
hlt
fstp
mov
mov
div
into
in
nop
std
cmps
mov
cli
cwde
(bad)
in
cmp
int
cmps
(bad)
mov
cmps
mov
(bad)
repnz
mov
ficom
lds
mov
std
retf
repz
xchg
mov
in
ficom
(bad)
(bad)
mov
cmps
stos
aad
mov
xchg
fistp
fdiv
jmp
mul
inc
out
fdivr
cld
lods
call
stc
in
clc
in
cld
out
test
mov
loopne
xlat
into
mov
call
in
jmp
jecxz
mov
xchg
mov
sti
stc
mov
hlt
popf
scas
jmp
mov
rcl
mov
and
scas
loopne
movs
fwait
jecxz
icebp
lds
cmps
mov
(bad)
xchg
(bad)
mov
cdq
movs
lock
popf
rol
fiadd
mov
mov
mov
mov
mov
out
test
ret
inc
stos
xchg
retf
mov
aad
xchg
movs
(bad)
loope
jmp
std
in
cmps
sahf
ret
in
stos
jmp
sub
lock
mov
loop
aad
hlt
stc
mov
or
scas
in
xchg
shr
(bad)
in
cmc
fmulp
aad
cld
in
bnd
cdq
mov
xchg
mov
fcom
mov
in
mov
call
iret
repnz
mov
lods
lods
and
sbb
hlt
xchg
fistp
cmc
mov
in
into
cmc
hlt
pushf
mov
xchg
mov
lahf
mov
repnz
popf
mov
aad
cmps
mov
out
mov
cwde
in
test
mov
and
test
into
lahf
clc
out
clc
mov
mov
xchg
(bad)
in
repnz
in
mov
mov
icebp
jmp
cwde
xchg
scas
iret
mov
ret
mov
in
fcom
fwait
iret
mov
mov
movs
clc
(bad)
lea
mov
hlt
xchg
fistp
(bad)
mov
(bad)
cld
int3
(bad)
fidivr
stos
sti
scas
xchg
repnz
(bad)
repnz
fwait
(bad)
dec
fcmovne
rcl
sahf
cwde
(bad)
out
(bad)
loopne
test
mov
xchg
mov
cdq
mov
fisttp
hlt
fstp
lods
dec
xchg
loopne
in
xchg
retf
mov
stos
popf
mov
sbb
into
std
mov
out
fxch
mov
cmps
mov
leave
clc
jecxz
mov
repz
xchg
lea
cmps
xchg
std
repnz
lods
in
cmc
mov
jmp
(bad)
div
ficom
mov
xchg
movs
mov
xchg
lahf
sti
stos
xchg
fistp
ror
mov
(bad)
retf
fmul
cli
jmp
xchg
sti
popf
out
mov
xchg
jmp
loop
mov
aad
(bad)
in
std
jecxz
mov
mov
out
movs
mov
test
hlt
lods
in
hlt
fisttp
ret
leave
mov
out
leave
clc
ret
sti
fiadd
jecxz
jmp
cmc
cmps
mov
out
out
sti
iret
sti
mov
call
iret
mov
mov
jmp
lods
fisubr
or
mov
mov
in
mov
call
mov
mov
mov
repnz
mov
mov
leave
mov
out
shr
scas
mov
xchg
call
xchg
hlt
lods
in
hlt
fucom
scas
out
fnstenv
movs
hlt
out
fcom
jmp
jmp
loopne
(bad)
in
iret
jmp
test
fnstsw
in
in
mov
call
iret
lock
loope
xchg
out
test
cmc
mov
sahf
movs
mov
retf
idiv
into
enter
cmc
repnz
popf
fst
scas
call
clc
in
movs
mov
jmp
loop
mov
clc
cwde
ror
jmp
movs
or
fidivr
hlt
fst
call
xchg
mov
iret
out
(bad)
cli
cli
xchg
sub
in
iret
jmp
xchg
mov
cld
test
in
fdiv
out
ror
call
iret
retf
retf
mov
mov
sbb
popf
lods
mov
neg
mov
out
(bad)
enter
(bad)
(bad)
add
mov
mov
repnz
fld
mov
int
retf
fst
neg
in
mov
scas
mov
mov
xchg
mov
mov
hlt
fstp
into
cmps
loope
shl
mov
in
iret
jmp
pushf
movs
xor
std
repnz
imul
jmp
jmp
cdq
mov
mov
fidivr
std
popf
mov
mov
(bad)
stc
div
shl
jmp
std
in
mov
fsubr
les
mov
cld
aam
mov
loop
cmc
shl
(bad)
in
out
(bad)
in
mov
mov
cmc
hlt
lods
in
hlt
fnstsw
enter
ret
sub
fucomp
mov
fcomp
iret
jmp
popf
mov
mov
in
mov
shr
lods
mov
mov
mov
mov
iret
mov
xchg
fistp
mov
call
out
mov
repnz
(bad)
repnz
ret
cwde
test
loop
stc
loop
fbstp
clc
fwait
cmp
scas
call
mov
mov
test
mov
mov
fwait
rol
(bad)
icebp
rcr
int
mov
movs
std
rol
in
cmc
mov
mov
rcr
fcom
aam
(bad)
mov
(bad)
sahf
in
int
in
(bad)
in
xchg
fwait
(bad)
xchg
cwde
jmp
cmps
neg
lahf
jmp
mov
test
into
loopne
xchg
mov
in
mov
lea
lods
icebp
(bad)
mov
hlt
lods
in
hlt
fucomp
jmp
into
in
mov
cdq
cdq
xchg
retf
popf
mov
sahf
fdivr
(bad)
out
mov
xchg
in
cwde
xchg
fdivr
mov
lock
ret
call
in
mov
xchg
mov
stc
lods
in
repnz
lods
in
cmc
mov
in
retf
fidiv
jecxz
lds
in
(bad)
in
xchg
stos
sti
mov
cli
cli
xchg
leave
stos
mov
lds
repnz
into
ret
in
jmp
mov
aad
call
hlt
lods
in
hlt
fld
shl
retf
xchg
mov
out
int
shr
mov
mov
xchg
stos
xchg
cmp
sti
xchg
mov
nop
cmps
int
mov
movs
(bad)
fist
mov
mov
std
repnz
lods
in
cmc
mov
xchg
test
cli
repz
test
shl
jecxz
fcmovnu
iret
cld
int
mov
mov
(bad)
clc
mov
sahf
cmps
jmp
mov
loope
cwde
xchg
fistp
loop
mul
(bad)
out
lock
jmp
xchg
repnz
(bad)
repnz
in
mov
xchg
cmps
faddp
mov
(bad)
rcl
mov
cmps
nop
in
mov
iret
popf
mov
test
mov
cmps
mov
(bad)
div
out
int3
xchg
mov
div
repnz
lods
in
cmc
mov
scas
out
loopne
call
xchg
cmp
repz
in
(bad)
in
(bad)
mov
sti
xchg
sahf
movs
stos
int
cmps
cmc
lods
div
ret
mov
into
(bad)
rcr
dec
xchg
stos
mov
sahf
cdq
fcom
hlt
lods
in
hlt
fucomp
int3
in
scas
mov
leave
test
xchg
rol
sahf
lahf
in
iret
xchg
loopne
movs
into
stos
test
lods
in
hlt
(bad)
enter
out
movs
iret
int3
(bad)
dec
xchg
lahf
in
iret
xchg
loopne
movs
into
stos
test
lods
in
hlt
frstor
mov
retf
mov
std
cld
call
in
iret
jmp
(bad)
add
cwde
leave
mov
repz
shr
sub
mov
jmp
xchg
mov
clc
stc
mov
xchg
fistp
xlat
shl
lods
leave
(bad)
repz
lock
call
repnz
xchg
mov
jmp
fdivr
lock
fcmovu
cmc
(bad)
fidiv
xchg
mov
int
mov
lods
in
hlt
fnsave
imul
shr
int
loopne
icebp
out
retf
out
hlt
xor
mov
cwde
xchg
mov
cmp
mov
movs
mov
cdq
fdivrp
mov
mov
mov
cwde
loopne
icebp
loop
lods
fimul
mov
mov
mov
iret
mov
jmp
mov
mov
test
call
cli
test
xchg
fistp
fldln2
int3
loop
cdq
into
(bad)
jmp
mov
nop
mov
xchg
repnz
(bad)
repnz
rep
stos
lds
lock
out
enter
clc
fwait
cmp
mov
xchg
stos
xchg
sahf
in
movs
aam
into
mov
mov
mov
jmp
mov
mov
lods
in
cmc
mov
mov
call
cli
mov
into
(bad)
mov
in
retf
int3
in
(bad)
in
jmp
jmp
mov
mov
in
scas
clc
mov
rol
jmp
retf
mov
mov
leave
(bad)
repnz
out
test
mov
fdivr
jmp
int3
cmc
cld
mov
fwait
xchg
cdq
mov
aam
mov
lods
in
hlt
fucomp
shr
scas
repz
idiv
xchg
movs
mov
(bad)
in
call
jmp
mov
fwait
sahf
mov
mov
mov
cmps
mov
fdivrp
rcl
mov
out
fwait
mov
mov
inc
in
cmc
mov
cmps
lods
(bad)
(bad)
(bad)
int
iret
lds
icebp
shr
in
(bad)
in
cli
in
les
loop
lea
cwde
leave
into
sar
out
repnz
pushf
call
cli
mov
fwait
sahf
stc
repnz
(bad)
repnz
(bad)
call
(bad)
ret
out
mov
into
ficomp
mov
jmp
repz
stc
lods
nop
test
mov
xchg
repz
stos
mov
rcr
lds
fst
call
nop
sbb
hlt
lods
in
cmc
fnstsw
ficom
out
retf
xchg
ror
mov
mov
mov
out
mov
clc
lods
icebp
cli
out
fnstenv
hlt
shr
(bad)
div
call
xchg
test
xchg
iret
jmp
fld
mov
shl
vphaddwq
cld
leave
loopne
jmp
cmps
shr
idiv
sbb
popf
jmp
sti
ror
in
movs
(bad)
stc
out
sti
lahf
loope
mov
or
mov
aam
in
stc
mov
mov
jmp
fcomp
loope
call
xchg
movs
or
cmps
clc
aad
sahf
hlt
popf
(bad)
vpsllq
aad
mul
lods
(bad)
loop
in
test
scas
mov
sahf
loope
mov
xor
test
sahf
fild
test
test
scas
jmp
xchg
(bad)
xchg
stos
scas
iret
mov
xchg
iret
jmp
(bad)
mov
shl
aam
(bad)
call
shr
jecxz
call
int
mov
jmp
repz
mov
fdivr
out
xlat
sar
xor
iret
mov
hlt
xchg
iret
jmp
mov
(bad)
mov
enter
test
mov
test
mov
fstp
test
rcr
lea
test
mov
aam
xchg
sar
retf
(bad)
mov
or
cdq
mov
xchg
(bad)
xchg
mov
repz
into
xchg
mov
loopne
in
in
out
icebp
in
xlat
ret
aad
aam
call
loop
sti
jecxz
sti
shr
cwde
std
stos
(bad)
nop
mov
(bad)
mov
jecxz
cld
ret
call
sbb
enter
(bad)
in
mov
(bad)
out
icebp
mov
mul
jmp
mov
xchg
cmc
cmc
in
repnz
aad
jmp
(bad)
repnz
push
movs
xchg
mov
int
out
lock
cmc
xchg
adc
xchg
sahf
lods
scas
cdq
mov
lods
mov
sahf
std
in
xchg
lods
cwde
xchg
loop
stos
mov
out
fdiv
popf
aam
imul
mov
mov
in
cmc
fstp
mov
int3
retf
loop
(bad)
rcr
out
pushf
call
scas
stos
call
popf
popf
xrelease
scas
test
mov
jmp
or
int3
std
jmp
leave
(bad)
repnz
xchg
mov
out
in
mov
xchg
in
jmp
mov
out
mov
pushf
scas
(bad)
lahf
mov
(bad)
std
in
mov
loope
jmp
hlt
in
aam
mov
sti
jecxz
mov
nop
xchg
lahf
xchg
jmp
icebp
scas
mov
cmps
test
retf
xchg
mov
mov
cli
mov
xchg
iret
jmp
fcmove
ret
cmps
lock
sti
lock
popf
mov
mov
movs
mov
repnz
mov
mov
xchg
int
clc
mov
jecxz
adc
lahf
mov
sub
movs
fidivr
cwde
xchg
loop
stos
mov
rcr
mov
in
out
shl
(bad)
in
xchg
lea
cmps
in
repnz
lods
in
cmc
frstor
pushf
jmp
loopne
in
lock
out
(bad)
lahf
jmp
shl
xchg
mov
fadd
jmp
pushf
xchg
iret
jmp
aad
test
(bad)
(bad)
pushf
(bad)
icebp
int3
loop
mov
popf
iret
cli
dec
sahf
(bad)
out
test
(bad)
retf
lods
fadd
(bad)
mov
mov
out
iret
icebp
fmul
ret
out
call
fisttp
xchg
iret
jmp
frstor
mov
retf
mov
xchg
lock
repz
enter
fdivrp
jecxz
cwde
fwait
mov
stc
add
lods
shr
(bad)
jmp
fidivr
fadd
(bad)
jecxz
jmp
cdq
stos
lea
les
hlt
xchg
iret
jmp
out
loopne
xchg
mov
div
mov
repnz
(bad)
repnz
mov
mov
call
cld
loopne
adc
call
xchg
stos
cmps
jmp
icebp
call
(bad)
cld
ficomp
out
int
fcom
hlt
int
mov
jecxz
mov
stos
mov
xchg
mov
jmp
int
mov
xchg
xchg
rcl
cwde
call
mov
scas
xchg
jmp
in
cmc
fst
scas
fnstcw
in
(bad)
aad
cdq
sti
fcmovnbe
ret
aad
mov
mov
out
xchg
icebp
jecxz
movs
nop
xchg
iret
jmp
ret
cmps
repz
(bad)
out
leave
ret
ret
int
mov
repnz
(bad)
repnz
mov
mov
fcmovb
sar
adc
jmp
cli
xchg
clc
iret
xchg
(bad)
cld
stc
stos
mov
sti
fucom
(bad)
in
xchg
rcl
lods
cdq
mov
repnz
lods
in
cmc
frstor
lock
xchg
fidiv
int3
fst
rol
scas
out
mov
xchg
loop
sti
out
mov
mov
sar
les
fcmovnb
in
scas
mov
repnz
(bad)
repnz
cld
mov
call
cmc
int3
jmp
loopne
iret
loopne
mov
jmp
mov
xchg
iret
jmp
fucomp
fwait
les
in
shl
ret
popf
shl
enter
out
mov
test
fwait
xchg
cld
test
iret
mov
ret
loop
stos
mov
into
stos
retf
jecxz
mov
leave
std
jmp
out
mov
icebp
in
repnz
lods
in
cmc
fisttp
call
mov
jmp
rol
mov
stos
xchg
mov
lods
xchg
call
mov
mov
aad
retf
leave
int
jmp
and
cmc
xchg
iret
jmp
fisttp
fucomp
fcmovb
loopne
rcl
out
call
sti
jecxz
movs
in
pop
std
fwait
out
xchg
fwait
fwait
ret
mov
iret
loop
ror
mov
fsubr
icebp
repnz
mov
mov
sahf
xchg
mov
xchg
scas
jmp
loop
mov
sti
repz
xchg
in
mov
(bad)
repnz
mov
test
xchg
sar
repnz
adc
mov
nop
cmps
xchg
(bad)
sti
lock
fdivr
stos
mov
mov
cdq
loopne
(bad)
into
call
mov
std
repnz
lods
in
cmc
(bad)
mov
cmps
fdivr
(bad)
mov
mov
mov
xchg
mov
repnz
imul
jmp
mov
call
jmp
iret
aam
jecxz
loope
mov
mov
cwde
xchg
iret
jmp
mov
mov
out
xlat
jmp
div
inc
xchg
xchg
cmps
sti
cli
sti
sahf
cdq
(bad)
popf
out
mov
repz
in
mov
lahf
movs
mov
xchg
jmp
lods
sahf
jmp
adc
mov
mov
ret
fdiv
out
mov
movs
(bad)
call
retf
mov
sar
movs
mov
fnclex
mov
xlat
repnz
mov
cwde
retf
lahf
(bad)
fmul
nop
xchg
mov
xchg
iret
(bad)
lods
fsubr
fsubrp
out
sti
out
ret
xchg
fcomp
(bad)
in
mov
stos
stos
mov
mov
leave
mov
mov
mov
div
repnz
mov
(bad)
fcmovu
mov
cmps
iret
movs
(bad)
int
test
fmul
in
mov
lock
icebp
loop
retf
int3
test
mov
lods
ficomp
lods
fcomp
lods
jmp
jmp
in
(bad)
jmp
icebp
ret
aad
enter
retf
leave
mov
mov
lods
fistp
lahf
mov
(bad)
fsub
in
loopne
out
ret
lods
clc
rcr
retf
ret
lods
call
mov
mov
lods
fistp
int
jmp
mov
jecxz
cmc
fcmovne
repnz
mov
mov
mov
fisub
leave
jmp
mov
out
out
std
in
loopne
mov
int3
ror
mov
xchg
stos
mov
lods
mov
leave
lods
mov
mov
loopne
leave
cmc
ret
mov
(bad)
mov
stos
mov
mov
lods
popf
lods
scas
out
mov
in
repnz
imul
loope
mov
ret
fstp
(bad)
mov
mov
mov
pushf
mov
(bad)
mov
out
xchg
leave
mov
dec
aad
int3
leave
mov
mov
stos
out
mov
leave
iret
mov
mul
out
mov
icebp
cmc
aam
mov
aam
out
out
fisubr
mov
mov
stos
mov
(bad)
(bad)
loop
loope
hlt
(bad)
ret
mov
int
clc
mov
mov
mov
in
hlt
fld
mov
call
mov
xlat
sub
xchg
cmps
jmp
mov
mov
shl
enter
clc
stc
(bad)
out
loopne
aad
(bad)
(bad)
retf
mov
stos
mov
retf
stos
mov
cmps
mov
enter
(bad)
fdivrp
out
jecxz
aam
shl
enter
(bad)
call
fild
mov
mov
(bad)
clc
in
icebp
loope
out
fld
leave
mov
mov
mov
stos
mov
leave
mov
clc
jmp
jmp
loopne
aad
fcomp
mov
mov
lods
lods
mov
stos
enter
xchg
mov
jmp
fsub
repz
mov
fdecstp
in
int3
aad
fstp
mov
mov
popf
ret
mov
int3
out
icebp
(bad)
lock
mov
int3
(bad)
int3
mov
popf
lods
lods
mov
out
mov
cmps
(bad)
mov
mov
jmp
ffreep
aam
hlt
aam
mov
iret
lahf
int
mov
mov
enter
loop
jmp
aad
shl
(bad)
fcom
mov
stos
cmps
movs
enter
xchg
iret
cmps
lods
lods
pushf
lock
out
out
out
jmp
fidivr
mov
ret
int
lods
out
cmps
test
lods
(bad)
idiv
out
leave
jmp
aad
enter
fcomp
mov
stos
fimul
mov
fistp
cmps
retf
(bad)
in
out
jmp
shr
iret
mov
rcl
aad
fnstcw
mov
mov
xchg
mov
jecxz
lahf
shl
iret
mov
ror
(bad)
xchg
scas
mov
enter
mov
scas
fsub
xlat
into
repnz
in
repnz
(bad)
int3
fsubr
lods
stos
mov
mov
mov
fcom
mov
(bad)
in
xchg
leave
mov
mov
mov
lods
iret
movs
pop
mov
test
lods
mov
out
loopne
push
ret
aad
ret
ffree
int3
mov
fisubr
mov
leave
mov
leave
retf
mov
jmp
mov
repz
mov
scas
lods
enter
mov
mov
stos
mov
mov
loopne
fld
shl
cli
(bad)
(bad)
mov
mov
mov
stos
lods
mov
lods
lods
fsubr
in
loop
out
int3
enter
shr
stos
mov
scas
mov
xchg
(bad)
mov
mov
fucomip
in
call
(bad)
jmp
rcl
fcmove
mov
cmps
fidivr
pushf
lahf
leave
mov
leave
retf
stos
mov
clc
jecxz
icebp
xchg
ret
mov
ror
mov
lods
lods
iret
fwait
leave
scas
lods
in
mov
lods
(bad)
sahf
fidiv
jmp
cmps
mov
fmul
mov
cwde
mov
cld
scas
mov
fmul
mov
out
icebp
(bad)
jmp
int3
icebp
xlat
int
mov
stos
fwait
mov
cmps
cmps
ret
ret
lods
fldcw
in
ret
lods
mov
hlt
mov
leave
jmp
retf
fcomp
stos
stos
fnstcw
fistp
lods
pushf
lock
repnz
cli
hlt
jmp
retf
fcom
mov
cmps
ficomp
mov
fdivr
mov
in
cld
jmp
(bad)
aam
(bad)
test
mov
lods
stos
mov
mov
lods
aad
mov
mov
loopne
hlt
cld
(bad)
mov
int3
fcom
stos
mov
cmps
cmps
int
mov
mov
lods
fcom
into
out
div
xchg
retf
(bad)
popf
mov
scas
stos
shr
test
mov
lods
cli
out
into
in
in
jecxz
sar
fcmovne
in
mov
mov
mov
(bad)
lds
fidiv
xchg
cli
mov
icebp
(bad)
hlt
icebp
cmps
mov
fdecstp
repz
mov
leave
(bad)
stos
mov
lods
mov
mov
lock
repz
cmps
fcmovu
dec
int3
shl
lods
mov
lods
test
sub
enter
cmps
jmp
test
jmp
retf
mov
stos
lods
stos
mov
mov
mov
pushf
fsubr
idiv
out
ret
xchg
(bad)
(bad)
(bad)
leave
mov
sbb
xchg
jmp
(bad)
hlt
cld
cmps
adc
retf
ret
mov
movs
clc
stos
mov
iret
lahf
fisub
movs
clc
mov
mul
(bad)
in
cmps
fisubr
leave
pushf
mov
mov
leave
scas
mov
fldcw
mov
in
in
jecxz
ret
mov
(bad)
fidiv
cdq
stos
mov
mov
shr
int
neg
(bad)
in
rcl
fmul
(bad)
sti
rcl
call
shr
mov
call
loopne
repz
ret
aad
enter
retf
fidivr
mov
lods
mov
mov
mov
icebp
out
test
jecxz
loop
int
retf
retf
ret
mov
fcomp
cmps
fcomp
(bad)
leave
mov
jmp
loope
ror
into
int
mov
nop
mov
lods
test
fcom
mov
(bad)
out
in
cli
hlt
test
mov
repnz
rcr
mov
lods
lods
cwde
mov
mov
lods
fcom
leave
out
out
enter
shl
retf
mov
mov
leave
retf
stos
mov
fiadd
out
out
(bad)
fcmove
repnz
mov
fstp
fidivr
scas
mov
cwde
mov
lds
(bad)
in
loop
out
ret
xchg
ffreep
enter
test
mov
iret
mov
retf
stos
mov
int
shl
out
in
in
jecxz
leave
mov
(bad)
(bad)
int3
fcomp
mov
in
mov
movs
aad
scas
leave
stos
ror
stc
loopne
in
(bad)
clc
enter
aam
fdivr
mov
shr
fldcw
in
repnz
hlt
jecxz
cmps
xchg
fcmovne
sti
(bad)
rcr
(bad)
mov
mov
leave
iret
(bad)
mov
cwde
cli
cld
(bad)
out
icebp
imul
loope
mov
fdecstp
loop
fcmovbe
mov
mov
leave
mov
test
scas
mov
out
in
fsub
icebp
jmp
rol
iret
ret
int
jmp
stos
mov
lods
int
enter
lods
fisub
in
leave
repz
cli
xchg
retf
(bad)
jmp
cmps
stos
fdivr
mov
fwait
cmps
add
cli
sahf
(bad)
in
call
int3
icebp
lock
xlat
retf
fidivr
lea
cmps
mov
iret
mov
call
jmp
fscale
(bad)
fdivr
xchg
lods
mov
stos
mov
fisub
fdiv
cli
loopne
loope
ror
(bad)
mov
xchg
mov
iret
scas
leave
mov
lods
fcom
cld
(bad)
out
jmp
repnz
cmps
xchg
int3
int
rcl
xlat
mov
mov
test
iret
call
mov
in
in
(bad)
hlt
(bad)
aam
(bad)
test
pushf
mov
mov
enter
lods
movs
lods
lods
popf
lods
int
(bad)
out
mov
(bad)
mov
out
rcl
fstp
xchg
mov
(bad)
jmp
lds
fwait
leave
mov
icebp
lods
mov
hlt
mov
leave
cld
out
ror
(bad)
in
(bad)
add
clc
call
ret
mov
out
int
jmp
jmp
retf
stos
fstp
mov
stos
mov
fcom
in
(bad)
loopne
sar
(bad)
mov
jmp
stos
mov
leave
retf
stos
mov
lods
mov
ret
icebp
retf
lahf
iret
jmp
mov
fld1
(bad)
fdivr
mov
mov
test
(bad)
iret
(bad)
lods
fmul
icebp
int
div
xchg
(bad)
movs
fcmovb
int
xlat
xlat
(bad)
sahf
mov
lods
(bad)
add
lods
aam
scas
leave
out
mov
in
ret
jmp
test
aam
mov
mov
mov
cmps
enter
mov
cmps
lods
lods
mov
jmp
std
(bad)
iret
ror
mov
mov
cmps
ret
jmp
scas
leave
lods
lahf
jmp
jmp
fxch
ret
fisubr
mov
retf
stos
mov
fisubr
sti
dec
jmp
int
lods
mov
nop
fwait
leave
mov
ret
cmps
lds
out
out
out
(bad)
neg
mov
retf
mov
fwait
mov
ret
(bad)
stos
stos
lods
lds
out
mov
cli
repnz
mov
sti
retf
leave
mov
fistp
int
mov
scas
mov
retf
mov
icebp
cli
cmc
rcl
mov
fmulp
ret
int3
retf
fidivr
lea
call
mov
mov
in
call
icebp
stc
call
call
stos
cmps
mov
ficomp
mov
mov
int3
icebp
repnz
aad
leave
int
clc
(bad)
leave
mov
mov
stos
mov
scas
lods
scas
lods
enter
mov
cmps
int
repz
fucom
imul
out
cmc
mov
mov
mov
clc
scas
mov
iret
mov
lds
icebp
(bad)
repnz
xchg
ret
test
mov
stos
leave
lods
iret
leave
loope
cmps
out
(bad)
or
test
fnstenv
(bad)
cli
and
test
in
leave
lods
int
sub
fcmovu
lods
fisttp
xlat
cdq
popf
cdq
call
stos
mov
mov
fxch
fcmovne
stos
fcmovu
mov
enter
leave
lods
int
dec
mov
mov
mov
fstp
fmulp
(bad)
int3
iret
mov
leave
test
enter
iret
mov
cwde
add
(bad)
ds
test
(bad)
ror
mov
into
pushf
into
leave
lods
(bad)
leave
test
enter
test
add
mov
mov
(bad)
pop
add
lods
into
enter
lods
into
leave
retf
test
fsubr
mov
(bad)
mov
stos
(bad)
rcr
ffree
ffree
retf
retf
into
ficomp
xchg
int
fisttp
sahf
call
xor
(bad)
int3
dec
in
test
enter
stos
fimul
scas
leave
aam
fcomp
(bad)
ret
xchg
movs
mov
(bad)
fcmovu
ror
out
enter
mov
leave
(bad)
mov
retf
popf
mov
movs
movs
aam
scas
mov
mov
xor
fcomp
into
(bad)
movs
(bad)
into
fldcw
(bad)
iret
lods
int3
retf
mov
mov
sar
mov
rcl
(bad)
enter
(bad)
mov
ret
fiadd
(bad)
add
lods
xchg
(bad)
(bad)
xlat
out
retf
in
mov
mov
int3
into
fild
pop
adc
test
movs
mov
fstp
(bad)
ret
lods
rcr
mov
aam
stos
fcmovu
sub
sahf
cdq
or
es
mov
stc
mov
imul
dec
imul
push
scas
rcr
aas
xchg
mov
xchg
xchg
(bad)
mov
stos
cmp
int3
pop
pop
retf
iret
mov
(bad)
int
ret
stos
leave
fdivr
mov
aad
lods
mov
aas
cwde
mov
fcomp
ror
movs
iret
enter
mov
int
test
stos
sbb
lods
test
scas
cmp
pop
pop
ror
iret
(bad)
test
leave
lods
ror
lods
fisttp
fstp
xchg
add
cmps
mov
rcr
fcomp
int
stos
iret
retf
lods
rcr
das
into
iret
leave
scas
into
aad
pop
push
mov
pushf
mov
scas
mov
ret
int3
pop
retf
(bad)
into
fld
(bad)
mov
into
enter
or
stos
test
cmp
xlat
(bad)
(bad)
dec
dec
ror
stos
iret
retf
(bad)
(bad)
leave
scas
fimul
xchg
add
mov
fcmove
dec
(bad)
into
lods
fisttp
scas
fimul
fimul
xchg
xchg
sub
(bad)
ffreep
fcmove
enter
lods
iret
shr
int
test
sahf
mov
mov
mov
data16
rcr
retf
shl
retf
movs
ror
movs
iret
xchg
(bad)
mov
mov
mov
rcl
(bad)
xlat
(bad)
movs
ffreep
mov
int3
leave
lods
(bad)
shr
or
cmps
mov
cmps
mov
(bad)
rol
iret
mov
leave
scas
into
fldcw
retf
enter
xchg
test
lods
mov
mov
stc
rol
ret
lods
retf
enter
mov
iret
int
into
push
test
adc
lods
mov
pop
xor
fmulp
shr
scas
out
enter
enter
test
mov
shr
stos
cmp
(bad)
(bad)
fimul
(bad)
leave
scas
into
aad
(bad)
aad
test
enter
mov
test
xchg
(bad)
(bad)
fucomi
enter
test
push
int
into
(bad)
movs
fidivr
xchg
xchg
mov
mov
mov
(bad)
rcr
dec
mov
shr
(bad)
fstp
mov
mov
(bad)
retf
inc
int
mov
jmp
ror
iret
mov
lea
cli
mov
shr
movs
mov
int3
int
inc
(bad)
dec
inc
retf
fisttp
retf
lods
ror
stos
fistp
cdq
xchg
cmps
mov
fcmove
pop
call
aad
iret
enter
mov
iret
leave
scas
into
aam
int
(bad)
mov
xchg
mov
mov
rcr
fmulp
into
scas
iret
leave
test
(bad)
aad
iret
retf
mov
mov
aam
mov
mov
fstp
iret
enter
mov
into
test
ror
int
gs
(bad)
cwde
lea
mov
cmps
mov
(bad)
(bad)
int3
stos
iret
enter
rol
enter
dec
rcl
xchg
mov
test
movs
mov
(bad)
(bad)
(bad)
int
fisttp
retf
into
mov
fisttp
fistp
cdq
xchg
add
sar
mov
fmul
pop
retf
retf
jmp
push
retf
retf
int
adc
and
imul
retf
dec
js
mov
lods
fisttp
fnstcw
arpl
sub
mov
clc
(bad)
fld
leave
mov
into
enter
mov
and
retf
(bad)
fmul
dec
push
scas
out
leave
stos
leave
call
xor
sbb
test
aas
mov
pop
inc
(bad)
out
enter
sbb
aam
sub
sahf
xchg
mov
cmps
enter
movs
mov
int
inc
(bad)
out
enter
mov
leave
fld
xchg
mov
xchg
mov
mov
mov
cmps
mov
fmul
pop
sti
retf
aam
fnsave
into
fimul
ror
mov
scas
xchg
pop
lea
mov
aam
fcmovne
dec
in
mov
aam
out
leave
enter
mov
scas
xchg
pop
mov
mov
mov
(bad)
int3
dec
push
mov
in
mov
mov
stos
call
popf
mov
mov
ror
ret
int
mov
shr
leave
shr
push
mov
mov
mov
fmul
pop
xlat
int
fimul
retf
leave
lods
iret
enter
shl
lahf
xchg
sub
mov
mov
mov
pushf
loope
out
iret
leave
test
test
aad
lods
test
lods
mov
mov
or
jmp
out
jmp
cli
(bad)
out
mov
fstp
in
retf
stos
scas
mov
in
mov
leave
nop
xchg
mov
repz
jmp
sub
int3
aam
fcomp
fdivr
(bad)
rol
shr
mov
sti
mov
imul
out
out
cmps
xchg
std
fcmovne
retf
mov
lods
lock
mov
stos
cmps
mov
mov
out
cwde
(bad)
in
jecxz
shl
int
fidiv
int
mov
stos
xchg
xrelease
iret
mov
test
mov
mov
(bad)
fiadd
lods
dec
lods
(bad)
scas
leave
mov
in
out
stos
call
mov
lods
test
mov
mov
test
stos
lods
mov
lods
xchg
neg
lods
mov
ret
sbb
jmp
call
leave
loop
xchg
cli
call
(bad)
test
fistp
lahf
rol
fld1
rcl
(bad)
mov
mov
cmps
clc
cmps
mov
(bad)
leave
leave
movs
iret
leave
lods
fistp
scas
test
mov
xchg
popf
test
(bad)
(bad)
(bad)
dec
or
jmp
fcmovu
fldcw
mov
xor
mov
int
fmulp
fstp
lods
fst
test
or
stos
into
fld
fwait
(bad)
fwait
add
fxch
(bad)
int
(bad)
mov
int3
cmps
into
fcmovne
test
lahf
lea
lods
aam
sub
lods
mov
int
leave
ret
ror
iret
shr
in
leave
leave
scas
rcl
popf
xchg
mov
mov
(bad)
fprem
fmul
(bad)
mov
leave
mov
retf
into
lods
int
lods
fiadd
xchg
add
mov
fmul
pop
(bad)
fcomp
fld
enter
test
dec
add
lahf
xchg
pop
das
test
es
mov
out
(bad)
dec
(bad)
(bad)
mov
rol
mov
lea
das
test
movsx
(bad)
int
int3
lods
int
mov
aad
lods
(bad)
jmp
mov
push
push
lods
mov
pop
je
int3
call
fmul
mov
dec
pusha
lods
(bad)
movs
int
call
cmps
(bad)
(bad)
mov
fcmovbe
fst
enter
int
into
(bad)
retf
iret
enter
mov
test
aam
lods
mov
retf
fcomp
(bad)
fld
and
stos
retf
aad
(bad)
rol
mov
sahf
xchg
in
aad
cmps
mov
leave
pop
or
pop
or
dec
leave
fisttp
fimul
retf
mov
fwait
xchg
call
mov
(bad)
int
mov
mov
mov
enter
xchg
add
scas
rcr
mov
fstp
fmulp
pop
mov
jmp
adc
movs
mov
jge
pop
pop
cdq
or
xchg
mov
int
inc
fadd
aad
enter
fisubr
retf
(bad)
into
lods
retf
adc
movs
aam
lods
mov
fcmove
int
inc
fadd
aad
enter
fldcw
retf
fcmovu
sub
popf
xchg
test
test
lods
test
(bad)
retf
fimul
int
mov
fldcw
retf
fcmovu
sub
popf
xchg
sub
shr
mov
fxch
iret
pop
inc
int
lods
fmul
cmps
out
enter
ins
scas
fmul
mov
or
popf
mov
or
mov
mov
(bad)
int
movs
leave
leave
lods
into
fisubr
push
int3
leave
lods
frstor
cdq
or
(bad)
cmp
cmp
(bad)
aad
retf
retf
mov
int
into
(bad)
retf
int
inc
mov
mov
mov
mov
pop
inc
fadd
aad
iret
retf
aam
cli
iret
lds
mov
pop
movs
mov
movs
scas
cmp
stc
int3
dec
shl
xor
(bad)
fimul
mov
mov
and
sti
ror
into
pop
jge
fimul
fimul
(bad)
leave
fsubr
xchg
xchg
mov
mov
daa
cmps
mov
leave
pop
(bad)
fcomp
fmul
(bad)
mov
fsubr
(bad)
rcl
movs
into
fistp
(bad)
xchg
out
mov
jo
pop
adc
(bad)
rcl
int3
mov
aam
(bad)
fimul
fcmovu
sub
sahf
call
mov
aas
or
cwde
retf
out
retf
leave
pop
push
retf
mov
into
lods
into
(bad)
fsubr
xchg
call
cmps
xlat
mov
mov
iret
pop
call
int3
mov
mov
mov
int3
mov
call
test
mov
mov
(bad)
fcmovnbe
(bad)
ret
stos
int3
sar
aam
xlat
aam
mov
aad
lods
mov
mov
(bad)
pop
(bad)
fimul
(bad)
jmp
dec
and
mov
cwde
pop
sbb
test
mov
retf
pop
mov
test
int
into
fimul
retf
ficom
popf
mov
stos
test
mov
(bad)
rcr
int
sub
fld
fimul
fisttp
fcomp
xchg
mov
sbb
sahf
mov
(bad)
fadd
(bad)
mov
retf
(bad)
iret
lods
into
retf
mov
mov
(bad)
mov
mov
fstp
(bad)
ret
scas
int
outs
int
iret
fimul
leave
jmp
push
mov
dec
mov
stos
mov
cwde
mov
pop
(bad)
(bad)
ffree
(bad)
mov
leave
mov
enter
push
cdq
or
add
stos
lods
mov
fmulp
pop
pop
(bad)
into
aam
(bad)
retf
mov
fisttp
fstp
xchg
mov
cmp
retf
pop
ds
fdivr
dec
xor
enterw
or
daa
dec
mov
stos
cmp
(bad)
(bad)
pop
cs
test
ret
iret
retf
mov
xchg
call
xchg
mov
mov
fmul
pop
fld
fisubr
fimul
leave
jmp
bound
test
sar
retf
pop
mov
fxch
retf
mov
ret
(bad)
mov
xchg
mov
mov
cmps
test
mov
(bad)
rol
rcl
test
int
stos
int3
(bad)
mov
xchg
or
aam
movs
lods
xchg
fcomp
(bad)
(bad)
fcmovu
sub
enter
scas
rcr
sub
enter
mov
nop
mov
adc
retf
int3
pop
(bad)
enter
dec
jne
int
enter
push
iret
mov
mov
inc
xchg
(bad)
test
inc
fcmovnbe
int3
pop
ds
sub
enter
sub
retf
dec
sub
mov
shr
cmp
rcr
fmul
pop
add
sub
ficomp
dec
shl
mov
mov
mov
stos
cmp
xlat
(bad)
fcmovbe
fimul
enter
int
dec
jmp
test
mov
mov
cmps
mov
test
rcr
int3
aam
rol
dec
mov
iret
retf
int
stos
xlat
or
cdq
test
stos
mov
cmps
retf
(bad)
(bad)
dec
or
(bad)
mov
iret
stos
ror
aam
mov
add
les
test
xor
pop
pop
leave
pop
push
retf
les
enter
aam
ror
mov
cmp
lods
mov
(bad)
(bad)
iret
dec
call
rol
dec
jmp
cmps
rcl
cwde
test
mov
rcl
into
pop
stc
(bad)
enter
fsubr
retf
sbb
mov
cwde
mov
xchg
movs
mov
fcom
ror
dec
adc
int
dec
and
movs
aam
sbb
mov
stos
mov
fstp
(bad)
fmulp
pop
and
mov
enter
or
out
enter
mov
test
push
lods
cmp
pop
(bad)
int3
pop
xor
jmp
(bad)
int
iret
fimul
(bad)
into
movs
ret
add
sar
mov
rcl
iret
(bad)
(bad)
fisttp
fisttp
(bad)
fisubr
(bad)
fimul
retf
ficom
xchg
mov
xchg
mov
pop
push
int3
pop
pop
fisttp
(bad)
fld
fisubr
fimul
fisttp
fstp
add
mov
fcmovb
fcmovbe
fst
ror
movs
ror
movs
rcr
push
ror
into
fld
mov
mov
lods
scas
mov
(bad)
rcr
(bad)
fisttp
(bad)
into
test
int
(bad)
aad
mov
pop
adc
sbb
mov
mov
leave
pop
inc
(bad)
rcl
(bad)
into
stos
rcr
sub
shl
mov
mov
fstp
stos
(bad)
(bad)
enter
pop
out
shr
dec
jmp
mov
mov
sar
mov
retf
(bad)
leave
pop
imul
into
shl
stos
retf
xlat
xchg
add
mov
mov
(bad)
retf
retf
mov
aad
int
(bad)
test
jmp
add
mov
mov
int
xor
xor
sub
fisubr
fimul
xlat
call
xchg
daa
hlt
mov
mov
fxch
pop
xor
pop
and
mov
enter
lods
into
(bad)
retf
jmp
stos
mov
mov
mov
clc
fcomp
xlat
fdivr
into
enter
lods
into
iret
cmps
out
retf
enter
mov
lea
les
popa
mov
lods
cmp
rol
rcl
(bad)
iret
dec
call
xor
sub
retf
jmp
fistp
and
xchg
rcr
clc
faddp
retf
ret
retf
ror
retf
enter
sub
mov
stos
mov
test
pop
rcr
dec
inc
fisttp
(bad)
aad
dec
(bad)
fisttp
fnstcw
bound
das
movs
mov
pop
xor
fcomp
rcr
cs
mov
call
inc
leave
into
scas
int
add
stos
sar
mov
(bad)
fcmovne
into
lods
rol
stos
leave
fisubr
jbe
shl
mov
adc
push
sar
mov
retf
(bad)
mov
dec
pop
scas
ret
stos
mov
xlat
mov
mov
pop
rcl
retf
movs
mov
fisubr
xchg
into
jmp
xlat
cdq
test
mov
sar
cmp
retf
int3
pop
mov
dec
(bad)
scas
rol
enter
dec
jo
call
call
scas
stos
lods
cmp
pop
xor
retf
fld
and
cs
cs
mov
lea
data16
mov
test
rcr
iret
into
stos
int
cs
aad
leave
call
test
or
and
mov
pop
rol
shl
mov
mov
lea
push
mov
sar
mov
(bad)
fcmovu
fisttp
(bad)
iret
stos
into
aad
dec
push
into
mov
or
test
mov
fmulp
pop
imul
scas
fisttp
fisttp
fisttp
mov
push
adc
pushf
scas
enter
mov
mov
pop
jns
fmul
stos
fisttp
fisttp
(bad)
aad
sub
lea
pop
mov
xchg
into
pop
sbb
out
retf
lods
int
stos
out
leave
enter
stos
call
cdq
cmps
test
mov
fcomp
retf
fld
fld
retf
(bad)
fsubr
cwde
add
leave
lods
sub
mov
fs
fmul
dec
jo
(bad)
(bad)
fsubr
ror
movs
aam
lea
popa
mov
mov
cmp
fstp
int3
shl
mov
mov
jp
cwde
adc
test
rol
fisttp
fimul
xlat
iret
lods
int
sar
fwait
cdq
or
daa
frstor
mov
fst
fcmovu
fxch
dec
push
stos
out
enter
test
call
mov
fwait
push
mov
test
cmps
mov
(bad)
(bad)
aam
retf
mov
jmp
retf
mov
jmp
ror
(bad)
xor
mov
pop
aas
(bad)
leave
mov
leave
lods
iret
enter
leave
lods
iret
leave
lods
fistp
lahf
xchg
test
fcomp
(bad)
fcomp
iret
leave
lods
iret
leave
lods
iret
xchg
out
mov
test
mov
mov
stc
out
hlt
loopne
sti
fcmovnb
lds
es
fdivrp
sahf
iret
leave
lods
iret
leave
lods
iret
enter
leave
lods
iret
leave
lods
fistp
lahf
xchg
test
fcomp
(bad)
fcomp
iret
leave
lods
iret
leave
lods
iret
enter
leave
lods
iret
leave
lods
fistp
lahf
xchg
test
fcomp
(bad)
fcomp
iret
leave
lods
iret
leave
lods
iret
enter
leave
lods
iret
leave
lods
fistp
lahf
xchg
movs
cmps
mov
(bad)
fcomp
iret
leave
lods
iret
leave
lods
iret
enter
leave
lods
iret
leave
lods
fistp
lahf
xchg
test
fcomp
(bad)
fcomp
iret
leave
lods
iret
leave
lods
iret
enter
leave
lods
iret
leave
lods
fistp
lahf
xchg
test
fcomp
(bad)
fcomp
iret
leave
lods
iret
leave
lods
iret
enter
leave
lods
iret
leave
lods
fistp
lahf
xchg
test
fcomp
(bad)
fcomp
iret
leave
lods
iret
leave
lods
iret
enter
leave
lods
iret
leave
lods
fistp
lahf
xchg
test
fcomp
(bad)
fcomp
iret
leave
lods
iret
leave
lods
iret
enter
leave
lods
iret
leave
lods
fistp
lahf
xchg
test
fcomp
(bad)
fcomp
iret
leave
lods
iret
leave
lods
iret
enter
leave
lods
iret
leave
lods
fistp
lahf
xchg
test
fcomp
(bad)
fcomp
iret
leave
lods
iret
leave
lods
iret
enter
leave
lods
iret
leave
lods
fistp
lahf
xchg
test
fcomp
(bad)
fcomp
iret
leave
lods
iret
leave
lods
iret
enter
leave
lods
iret
leave
lods
fistp
lahf
xchg
test
fcomp
(bad)
fcomp
iret
leave
lods
iret
leave
lods
iret
enter
leave
lods
iret
leave
lods
fistp
lahf
xchg
test
fcomp
(bad)
fcomp
iret
leave
lods
iret
leave
lods
iret
enter
leave
lods
iret
leave
lods
fistp
lahf
xchg
test
fcomp
(bad)
fcomp
iret
leave
lods
iret
leave
lods
iret
enter
leave
lods
iret
leave
lods
fistp
lahf
xchg
test
fcomp
(bad)
fcomp
iret
leave
lods
iret
leave
lods
iret
enter
leave
lods
iret
leave
lods
fistp
lahf
xchg
test
fcomp
(bad)
fcomp
iret
leave
lods
iret
leave
lods
iret
enter
leave
lods
iret
leave
lods
fistp
lahf
xchg
test
fcomp
ffreep
fcomp
dec
leave
lods
iret
leave
lods
iret
enter
leave
lods
iret
leave
lods
fistp
lahf
xchg
test
fcomp
(bad)
fcomp
iret
leave
lods
iret
leave
in
enter
retf
lods
das
sbb
mov
mov
mov
sti
and
dec
rcl
pop
xlat
pop
div
lods
ja
pushf
movs
xor
add
inc
adc
mov
(bad)
shl
push
fcmovu
sbb
adc
int
stos
or
jns
ins
ds
cmp
jge
daa
dec
dec
mov
push
mov
adc
push
pop
aam
test
outs
dec
jmp
mul
pop
aad
xchg
in
clc
push
xchg
or
outs
sub
sbb
mov
inc
popf
(bad)
bound
stc
rcr
and
mov
jge
xchg
idiv
push
jge
push
dec
pop
and
xchg
adc
xor
ja
push
add
inc
in
push
mov
arpl
test
xor
xor
add
jle
fdiv
sub
mov
fsubp
lods
mov
xchg
and
push
xor
add
and
mov
inc
not
shufps
push
xchg
inc
(bad)
(bad)
out
shl
retf
push
dec
cs
inc
jge
iret
jno
repnz
jns
(bad)
clc
push
cwde
mov
jg
jmp
pusha
adc
clc
nop
cdq
stc
pop
in
add
dec
ins
mov
(bad)
xchg
inc
retf
lods
shl
rol
xor
and
stos
cmc
and
movs
and
sar
mov
dec
shl
gs
out
ds
mov
xchg
mov
inc
xor
inc
jg
inc
test
mov
(bad)
addr16
ret
add
imul
pop
pop
pusha
and
inc
sbb
(bad)
push
retf
mov
dec
inc
adc
and
(bad)
cmps
ror
jae
xchg
lock
mov
lea
push
mov
lods
and
ret
cmps
sbb
push
mov
or
mov
ss
adc
(bad)
jle
addr16
in
in
pusha
or
(bad)
sub
(bad)
fstp
dec
outs
in
mov
imul
push
out
ds
add
cmp
adc
std
das
xor
jnp
add
push
adc
pusha
mov
movs
inc
jecxz
sub
adc
push
ins
(bad)
mov
push
repz
and
jl
scas
inc
enter
mov
aad
fmul
out
xchg
loopne
int
(bad)
jns
mov
stc
adc
push
mov
pushf
loopne
fnsave
sbb
aas
fimul
loopne
je
xor
stos
mov
ins
cld
(bad)
paddd
sub
jg
ins
popf
(bad)
out
test
loope
or
(bad)
sbb
mov
call
imul
hlt
repnz
add
dec
jnp
outs
loopne
enter
pushf
or
inc
push
ret
add
pop
xchg
cmp
xchg
fdiv
mov
cdq
fiadd
repz
mov
pop
js
jmp
dec
add
pop
outs
inc
adc
mov
cmp
aas
xchg
test
inc
sti
add
pop
iret
retf
cmp
xchg
add
inc
jae
pop
pusha
loop
rcl
inc
mov
test
in
sahf
inc
cmp
pop
or
aaa
ret
test
lods
cwde
fld
mov
cli
inc
repnz
leave
retf
cmp
popa
sbb
xchg
pop
mov
pop
jno
dec
aad
(bad)
jp
outs
idiv
pop
push
jp
xchg
int3
push
add
inc
adc
stc
mov
pop
jo
imul
je
sub
outs
mov
test
mov
mov
pop
je
mov
adc
mov
add
mov
outs
aas
test
fst
mov
stos
(bad)
call
pop
xchg
test
pop
data16
repz
lods
jno
js
jns
add
push
les
fwait
scas
sbb
dec
add
rcr
loop
mov
jge
sub
rcl
xchg
cli
repz
sti
inc
or
daa
mov
xchg
jle
data16
sub
loope
xor
retf
pusha
retf
shl
jmp
(bad)
clc
sbb
retf
xor
or
test
push
mov
sub
sbb
sub
shr
cwde
imul
inc
pop
pop
mov
scas
hlt
pop
test
pop
fadd
inc
sub
xor
mov
mov
pop
clc
mov
dec
sub
jecxz
in
mov
adc
test
xlat
xchg
pusha
adc
mov
sbb
mov
mov
cmp
mov
outs
xchg
mov
jge
sar
jecxz
pop
jae
mov
rol
xchg
jne
pop
pop
xor
jp
ficomp
pop
sub
xor
shl
aam
cmp
out
cs
xor
fsub
mov
push
iret
ja
ret
dec
mov
jno
pop
xor
inc
mov
jge
out
mov
inc
cli
ffree
sbb
loop
mov
js
jbe
fld
fild
inc
iret
push
inc
xor
jg
cmps
(bad)
cmc
pop
test
gs
jae
ins
cmp
push
mov
adc
xchg
xchg
add
loopne
fs
pop
gs
sub
pop
nop
push
xchg
xor
pop
add
and
jo
sbb
icebp
xlat
mov
pop
stc
or
adc
jnp
aad
inc
mov
inc
mov
outs
mov
repnz
adc
cs
mov
sbb
jmp
jno
xchg
scas
cwde
sbb
out
(bad)
sahf
aad
push
mov
xor
push
or
jne
repnz
push
jg
fstp
pop
mov
push
or
cdq
in
xchg
or
jmp
(bad)
mov
cmps
addr16
cmp
xor
jp
push
add
dec
call
repz
pop
int
ins
cmp
stos
in
xchg
push
lods
stc
test
sub
dec
aad
sar
js
lahf
cmp
stc
fld
ficom
pop
mov
js
enter
iret
xchg
xor
cmp
add
cmc
mov
movd
and
pop
mov
(bad)
xor
dec
dec
lock
lods
int3
out
push
xor
xchg
aaa
pusha
repz
inc
jnp
gs
dec
js
icebp
in
cmc
mov
std
lds
xchg
adc
adc
or
test
sub
lds
dec
outs
push
loopne
nop
or
and
inc
and
jno
adc
arpl
xchg
xchg
repnz
inc
mov
(bad)
std
push
pop
scas
adc
fmulp
aaa
xor
sub
repnz
push
movs
add
cwde
movs
jae
mov
mov
cmc
mov
push
je
ror
inc
into
in
cmp
xchg
cdq
mov
xchg
retf
icebp
stc
rcl
cmc
mov
push
jns
mov
sub
cwde
inc
jo
shr
inc
xor
faddp
push
jmp
in
(bad)
xor
ja
jg
loope
xchg
pop
push
adc
jmp
dec
movs
mov
push
and
pushf
pop
pop
call
sbb
xchg
xor
cli
lahf
sbb
lock
push
and
sub
fcmovbe
jb
fidiv
ja
nop
xor
add
dec
cmp
push
into
fcom
xchg
push
mov
sbb
mov
out
push
bound
shr
inc
add
mov
adc
hlt
jmp
xchg
cmps
loope
cmp
fld
in
pop
(bad)
xor
out
jns
test
nop
hlt
ficomp
jbe
(bad)
mov
push
out
loope
sub
in
sbb
psubq
into
mov
ins
or
loop
in
xchg
(bad)
leave
dec
pop
fdiv
pop
add
or
mov
neg
pop
jo
push
add
dec
mov
cdq
add
cmps
or
test
fwait
cmc
pop
xchg
je
cmc
and
retf
daa
pop
iret
hlt
add
jnp
scas
aas
pop
pop
xchg
cld
fild
adc
test
loop
mov
in
ss
mov
sbb
mov
cwde
pop
pop
test
mul
adc
mov
adc
(bad)
jmp
mov
stos
adc
push
shl
hlt
lods
cmp
jl
sbb
inc
shl
and
jns
xchg
ss
sbb
xor
aaa
fcmovu
add
xchg
push
jne
xchg
loop
in
add
dec
aaa
pop
pop
inc
arpl
mov
cwde
(bad)
push
test
sub
loope
add
xor
sbb
dec
pop
jae
enter
aad
mov
dec
xchg
mov
add
mov
jno
add
clc
stos
mov
fcmovnb
fs
and
fcomp
lods
sbb
push
xchg
dec
sahf
mov
scas
jae
outs
loopne
cwde
bound
and
mov
sbb
adc
push
mov
fidivr
xchg
sub
pop
fnstcw
or
pop
adc
mov
daa
push
pusha
(bad)
lods
add
inc
jmp
retf
pop
add
fimul
mov
push
dec
and
lahf
pushf
sub
xchg
or
bound
mov
pop
xchg
or
into
retf
inc
dec
(bad)
shl
jae
fs
addr16
or
lea
daa
jbe
xor
rol
xchg
js
pop
dec
jns
pop
and
cmps
lea
mov
mov
in
jl
pop
jge
loopne
pop
int
pop
and
fild
ret
mov
mov
cmp
mov
or
and
push
cmp
inc
add
or
retf
sub
outs
icebp
dec
and
cmp
add
cmp
pop
push
xor
or
push
jo
jmp
loopne
push
jno
mov
sbb
int
and
xor
std
lds
(bad)
fs
pcmpgtw
xchg
retf
out
pop
inc
xor
push
push
add
push
ja
(bad)
icebp
fbld
es
cdq
sbb
jae
mov
mov
popa
fsubrp
cmps
push
mov
adc
xchg
into
xchg
in
lock
in
dec
arpl
and
call
xor
lock
lods
pop
cmps
mov
call
xor
fdivr
add
jmp
aam
jge
add
imul
lea
adc
jmp
ficom
mov
or
test
mov
sub
into
jae
imul
jnp
(bad)
in
std
xlat
out
sbb
xor
jbe
inc
mov
xor
push
sub
jl
sbb
jbe
dec
xchg
jae
jle
std
mov
mov
outs
inc
mov
retf
nop
cli
rol
std
jne
push
or
jge
dec
idiv
sbb
sahf
dec
and
inc
repz
adc
add
fwait
(bad)
sbb
or
sub
push
push
push
ret
sub
mov
mov
das
and
rol
pop
ds
mov
test
adc
aaa
adc
inc
pop
fucom
mov
stos
pop
mov
jmp
test
jecxz
dec
mov
push
cmp
sbb
addr16
xchg
pusha
push
xor
mov
pop
pop
xchg
imul
in
in
push
lock
into
jo
in
and
out
in
stos
pop
or
outs
add
test
cmp
mov
cld
jne
pop
lea
out
mov
jl
or
and
xchg
push
mov
sbb
ins
arpl
jp
sbb
outs
lock
aad
cmps
hlt
xor
xchg
das
out
call
pop
out
add
xor
xchg
fabs
cdq
(bad)
cmp
push
arpl
dec
xchg
imul
xchg
inc
add
rol
xor
stc
sar
stc
inc
lahf
daa
ins
xchg
loope
fldcw
cmp
jb
(bad)
dec
mov
imul
je
dec
and
pop
sub
call
dec
jl
es
dec
outs
(bad)
mov
test
lods
mov
sbb
mov
sub
je
sti
sub
and
sbb
(bad)
repnz
sbb
push
mov
pop
inc
xor
mov
mov
xchg
add
out
cwde
pop
mov
mov
mov
shl
dec
lock
pop
pushf
mov
mov
dec
mov
push
and
aaa
mov
dec
jbe
adc
sbb
and
(bad)
(bad)
fisttp
aaa
and
stc
ror
dec
jno
popf
jecxz
inc
fucomp
pop
(bad)
clc
movs
popa
fucomp
inc
fst
push
inc
or
pop
fnstcw
lock
jne
arpl
push
clc
mov
bound
bound
mov
sar
push
(bad)
in
xlat
push
inc
cmp
xchg
in
mov
sub
mov
shr
(bad)
pushf
mov
xchg
arpl
aad
rol
ficom
inc
mov
dec
sbb
cmp
out
nop
push
sbb
pop
dec
xor
mov
pop
xchg
xchg
imul
add
sub
je
nop
ins
xchg
adc
shl
push
fwait
pop
shr
xchg
pop
cwde
xor
jne
jne
loop
sbb
lds
retf
lahf
(bad)
jnp
mov
not
outs
or
nop
loope
cmp
push
jae
jle
repnz
fs
inc
loopne
cli
icebp
jns
out
push
shr
ss
ins
aas
fdiv
or
xchg
fst
push
fist
in
push
pop
sub
stos
ret
fsubr
cmps
mov
jnp
xchg
jmp
mov
int
gs
stc
mov
mov
pushf
sbb
cdq
add
test
xchg
das
push
ret
cmp
add
repnz
mov
dec
xchg
xor
cmp
shr
fidiv
repnz
or
jnp
ja
fscale
imul
movs
lock
pusha
mov
xchg
pop
jp
push
xor
mov
lock
stos
jmp
ins
cmpps
jle
dec
enter
mov
pop
retf
jbe
push
mov
xchg
mov
(bad)
cdq
pushf
xor
xchg
dec
nop
jo
sub
push
arpl
shl
loopne
mov
xor
mov
mov
cmc
sub
daa
loope
jle
dec
push
iret
imul
add
dec
scas
pushf
sbb
(bad)
jl
test
pusha
out
xchg
mov
push
pop
clc
fldl2e
int3
and
or
adc
leave
cld
aas
(bad)
lods
xchg
mov
push
sub
pop
jmp
test
leave
aaa
sahf
pusha
dec
es
aaa
imul
sbb
test
and
int3
mov
mov
xchg
inc
sub
pop
or
fldcw
out
xor
(bad)
in
stos
mov
idiv
(bad)
mov
cmp
test
inc
jmp
push
add
xchg
sbb
xchg
xchg
pop
cmp
into
cmp
int
in
and
sti
jbe
mul
ins
loope
ror
shl
jle
jo
addr16
cdq
xchg
daa
push
call
inc
pop
lahf
xor
pusha
jne
or
(bad)
(bad)
in
pop
adc
push
push
mov
lds
cdq
add
sbb
out
outs
fiadd
push
inc
imul
call
mov
bound
lea
movs
fsubr
ror
push
mov
xchg
int3
add
nop
in
and
fwait
std
test
movs
cs
mov
fcom
scas
add
jns
mov
scas
inc
mov
scas
or
fucomi
pop
lods
push
mov
dec
aas
cmp
movs
adc
out
fstp
jp
pop
mov
push
outs
out
jae
jecxz
sbb
movs
ja
cmps
aad
inc
jle
sahf
pop
mov
sbb
mov
lock
sub
mov
pop
pusha
add
push
cmp
(bad)
loope
dec
jns
(bad)
mov
cmc
jp
or
adc
fdiv
xchg
lock
sub
lods
test
xor
sbb
scas
mov
ficom
shl
lea
retf
add
sub
and
adc
pop
sahf
rcr
push
push
aad
add
xchg
aas
jb
mov
jbe
fnstenv
push
out
test
pop
add
sub
ss
neg
popa
pop
mov
and
clc
sbb
inc
movs
sbb
mov
and
cdq
xor
mov
jno
xchg
mov
pop
cmp
stos
inc
(bad)
ja
adc
sbb
add
xchg
inc
out
jb
mov
cmps
int
gs
xor
jmp
aam
pop
pop
cli
fisubr
mov
mov
mov
fst
add
cmp
sub
cmps
rcr
dec
repz
jnp
pop
shl
fistp
stos
popa
(bad)
movs
ins
add
adc
mov
adc
test
pop
(bad)
mov
and
jecxz
mov
bnd
pop
aad
adc
xor
sbb
mov
mov
xchg
enter
push
mov
les
push
xchg
aam
xchg
jae
jg
dec
(bad)
out
sbb
pop
mov
mov
xlat
fmulp
js
jbe
xor
ss
add
lods
mov
push
mov
pop
call
push
jo
sub
aam
and
sbb
sbb
pop
call
push
shl
cmp
bound
lahf
retf
add
and
xor
cmp
data16
xor
push
outs
sbb
adc
sti
ds
inc
fisub
dec
push
std
scas
ds
jo
sub
inc
loop
push
mov
adc
pop
mov
inc
je
retf
adc
imul
mov
mov
fild
fwait
ret
xchg
add
pop
pop
push
sub
outs
fsubr
xchg
call
jge
pop
sbb
and
into
mov
cmps
mov
inc
ss
js
sub
mov
cmp
retf
or
(bad)
dec
mov
adc
ja
inc
or
jbe
sub
sbb
add
cwde
cmps
sbb
or
and
popf
repz
daa
(bad)
js
in
shr
ror
lock
dec
xchg
daa
cmp
imul
mov
lea
nop
das
xchg
retf
mov
mov
xor
leave
es
nop
jno
cmps
xchg
lahf
sub
les
inc
or
call
add
sbb
jb
push
or
test
push
loope
scas
add
mov
std
fistp
mov
repnz
repz
aad
mov
dec
jae
les
adc
in
inc
push
jge
ja
lods
jne
adc
dec
xchg
add
xlat
std
xor
push
xor
pop
mov
add
lds
clc
enter
dec
mov
dec
push
popf
mov
jecxz
ret
adc
mov
xchg
or
test
in
jg
xor
aas
int
mov
dec
fsubr
cmc
test
ror
push
dec
adc
aas
cmp
and
das
jno
push
loop
cdq
or
jmp
xchg
daa
mov
sbb
pop
ins
repz
fmul
jmp
mov
sub
cmp
pop
xchg
add
ins
popa
fcmovb
jl
pop
xchg
add
cmp
push
push
pop
pusha
inc
test
add
add
cwde
mov
cwde
imul
cmc
cmp
and
and
cmp
or
mov
test
(bad)
in
pop
cmp
cmc
dec
sbb
rcr
shl
xlat
imul
mov
je
lahf
cmp
cmps
mov
adc
call
push
(bad)
cmp
loopne
xor
retf
push
cld
cmps
mov
jb
dec
add
and
fnstcw
mov
push
pusha
pop
out
ja
in
(bad)
out
leave
test
sub
cli
jb
aad
fcom
mov
movs
inc
call
out
push
mov
loop
outs
scas
fs
enter
push
sbb
cdq
jl
and
jbe
fimul
shr
jae
out
xchg
mov
add
cmpxchg
sub
scas
outs
mov
outs
jmp
scas
in
retf
in
or
cmp
push
jg
mov
xchg
pop
icebp
fwait
push
test
lods
cwde
inc
arpl
push
inc
cld
pop
or
ja
aad
fcmove
sti
xor
mov
ret
pop
scas
dec
mov
push
(bad)
int3
std
mov
pop
push
pop
out
in
or
(bad)
stos
sub
push
cwde
push
(bad)
(bad)
mov
xor
arpl
jno
out
enter
mov
mov
mov
add
xchg
scas
xchg
ins
push
into
daa
mov
rol
mov
jnp
mov
imul
ror
fwait
xchg
cmp
adc
pop
add
fnstsw
cmc
dec
ins
cmp
inc
enter
sbb
cdq
mov
data16
in
dec
sub
(bad)
and
dec
and
dec
int3
fimul
test
push
adc
fisttp
cmp
ret
ja
inc
fcmovne
clc
sbb
inc
jbe
(bad)
pusha
call
jg
xor
sar
mov
push
and
xchg
dec
mov
mov
xchg
mov
cmp
fisub
mov
into
mov
mov
in
cmps
xchg
adc
iret
mov
out
rcr
int
ret
or
(bad)
cli
inc
jbe
inc
mov
push
jge
mov
sar
enter
sub
pop
sbb
jne
pop
mov
dec
adc
mov
gs
popf
popa
mov
out
adc
int
mov
js
sbb
in
mov
ds
jmp
movs
xchg
and
mov
xchg
cmps
retf
stos
add
outs
js
retf
retf
nop
loopne
sub
mov
inc
sahf
imul
and
push
fmul
sbb
lock
imul
hlt
gs
shl
lods
clc
inc
sbb
push
in
sahf
xor
add
dec
adc
sub
pop
nop
and
pop
pop
sbb
bound
fwait
in
sahf
sti
sahf
mov
aas
shl
sahf
pop
fld
mov
mov
repz
pop
loope
and
sar
out
sub
inc
jmp
int3
sub
(bad)
popf
jnp
cmp
ja
inc
dec
call
es
sub
out
dec
mov
add
inc
xchg
mov
mov
out
shl
pop
movs
inc
jmp
fnstenv
(bad)
push
in
call
aaa
mov
fnstcw
inc
test
rcl
jmp
stc
call
retf
or
aaa
fs
dec
sbb
in
int
cmp
jb
lahf
ret
or
jae
imul
xor
adc
ss
std
leave
cmps
leave
ffreep
mov
(bad)
xchg
jbe
xchg
inc
pop
dec
mov
sub
pop
sbb
inc
mov
outs
leave
es
in
fnstcw
fst
sti
jmp
adc
test
enter
outs
jge
mov
xor
push
shl
mov
jle
scas
add
addr16
icebp
mov
inc
stos
add
sbb
test
xchg
xchg
fnsave
push
lea
mov
ins
retf
movs
inc
inc
int3
mov
mov
cmp
in
xchg
ja
mov
les
ja
pop
jl
mov
and
sbb
add
jbe
(bad)
jb
test
les
mov
sar
loopne
xor
adc
lea
add
mov
sbb
in
popa
and
inc
mov
pushf
inc
push
adc
js
loope
push
mov
or
mov
lods
daa
sar
fstp
push
mov
in
push
in
jno
bnd
jo
movs
push
jb
fcom
int3
lods
(bad)
or
inc
stc
mov
jo
shr
inc
idiv
repz
and
in
icebp
jmp
push
shl
jne
enter
mov
lods
imul
xchg
add
out
xchg
sub
xchg
inc
out
ficomp
adc
(bad)
cmp
jg
sub
push
inc
mov
push
les
push
xchg
xchg
aad
jb
jno
clc
jne
loop
mov
and
mov
or
xchg
cs
dec
pop
inc
sahf
movq
fidiv
sub
cmp
adc
retf
jle
popa
push
jecxz
das
pop
retf
sbb
loop
add
aad
ret
mov
fimul
scas
jmp
push
fisubr
mov
jae
add
inc
pop
cwde
in
(bad)
(bad)
repnz
cmp
mov
outs
mov
test
mov
mov
adc
jmp
mov
in
fisubr
icebp
sub
pusha
aad
xor
jbe
bound
xlat
pop
aas
cli
mov
pop
ret
lods
fstp
pop
cld
outs
mov
nop
adc
jb
stos
aaa
cmp
out
sub
push
or
and
mov
retf
mov
popf
test
xor
hlt
test
mov
xchg
sub
jmp
add
cld
out
xor
ds
jo
mov
mov
retf
sbb
jno
shr
add
enter
imul
push
outs
ror
sub
popa
je
pop
aaa
jno
shl
jg
sub
pop
jno
xor
adc
int
jns
inc
addr16
mov
mov
es
aas
jae
aad
sub
dec
sub
(bad)
xchg
and
addr16
in
mov
push
or
inc
add
call
jnp
jno
lock
outs
cmp
pop
out
sbb
mov
sbb
gs
mov
addr16
out
pop
in
jns
gs
jbe
push
adc
daa
in
or
jmp
or
aas
jno
xor
ja
push
ja
stc
ss
dec
int3
sbb
xchg
test
pop
and
aaa
dec
adc
out
xchg
jns
lea
hlt
jecxz
std
loopne
jp
or
push
clc
sahf
outs
imul
test
and
das
pop
es
ret
inc
movs
mov
push
aam
push
es
jns
leave
adc
imul
bnd
push
xchg
pop
retf
cmp
iret
sub
leave
daa
add
dec
mov
jne
cmp
jbe
jl
sbb
xchg
mov
mov
mov
jg
sti
scas
mov
rcr
mov
cmp
loop
out
dec
dec
repz
xchg
push
dec
mov
jmp
(bad)
mov
dec
xor
and
in
test
outs
add
pop
out
dec
(bad)
dec
add
repnz
cmp
pop
fyl2xp1
or
jnp
aam
sub
dec
test
in
xchg
inc
and
in
aas
push
ret
ins
dec
adc
jmp
lahf
out
mov
daa
(bad)
nop
cmp
test
jo
xor
les
gs
out
lods
add
cmp
pand
inc
and
stos
jo
sub
mov
pop
jne
gs
sub
mov
int3
outs
cmp
xchg
loop
int
hlt
or
mov
enter
push
in
out
ret
out
push
sbb
mov
xchg
cmps
call
popa
inc
cmp
(bad)
mov
xchg
or
and
enter
repz
cli
fcom
clc
inc
sbb
cld
jmp
pop
pop
call
out
das
fisub
leave
xor
mov
pop
cwde
xlat
jbe
pop
test
sahf
idiv
nop
sub
test
lahf
fwait
loopne
or
pop
ja
retf
inc
jl
sahf
aam
sub
aad
cmp
mov
jae
mov
out
ficomp
push
mul
adc
ja
mov
adc
and
popa
inc
cli
(bad)
adc
cmp
xor
xchg
push
mov
add
sbb
add
xchg
repz
inc
movs
test
repz
mov
fimul
mov
fst
aas
dec
in
(bad)
sub
sbb
and
jno
jge
or
and
sar
xor
xor
nop
inc
sub
or
push
daa
mov
lahf
dec
pop
ret
imul
push
add
xchg
add
test
sti
test
fidiv
mov
enter
int
call
(bad)
push
(bad)
(bad)
sbb
pop
push
pop
hlt
inc
test
adc
test
cmp
jo
inc
aam
jmp
mov
jge
adc
or
jmp
push
pop
(bad)
lock
(bad)
jmp
retf
outs
mov
add
(bad)
ds
pushf
mov
(bad)
cmp
push
mov
mov
div
adc
test
cmp
cmp
mov
add
js
outs
xchg
(bad)
jp
fiadd
fdivp
xchg
mov
jnp
mov
dec
popf
inc
mov
add
pop
out
cld
mov
mov
fstp
or
inc
xchg
sub
(bad)
(bad)
bound
fidiv
fdiv
xor
inc
jp
push
aam
dec
mov
mov
jmp
mov
call
not
(bad)
clc
sbb
hlt
dec
push
dec
mov
push
add
bound
mov
push
sbb
imul
push
cmc
std
xor
mov
cmp
fwait
sbb
or
mov
fwait
push
nop
or
add
and
ficomp
std
push
bound
out
int
sar
jmp
jnp
movs
(bad)
xor
in
(bad)
xor
dec
add
lods
outs
int3
inc
push
pop
mov
sbb
int3
pop
jl
pop
es
jae
mov
mov
xchg
mov
mov
lahf
ror
pop
jge
dec
cmp
dec
fisubr
push
mov
in
arpl
add
adc
ja
and
mov
mov
shl
sub
(bad)
sbb
data16
or
repz
xchg
xchg
jbe
repnz
test
into
lods
rcl
cmps
adc
(bad)
lds
fdiv
mov
mov
cmp
pop
std
xchg
adc
sub
arpl
and
mov
push
iret
addr16
les
lahf
mov
sub
xlat
xchg
loopne
xor
dec
sbb
dec
rcl
push
dec
pushf
stos
jns
mov
ds
int3
xor
imul
bound
and
pop
sbb
pop
ja
rcl
add
and
sbb
sbb
xor
mov
iret
pop
xor
xchg
mov
mov
test
mov
scas
xor
add
sbb
loop
nop
cmp
pop
push
fdiv
pop
xchg
je
cmp
push
and
(bad)
inc
daa
or
outs
sbb
xor
ins
adc
fsub
sahf
adc
out
mov
outs
fstp
cmp
scas
push
mov
dec
jae
fisttp
xchg
or
xchg
mov
pop
loop
retf
retf
sar
mov
mov
and
pop
push
leave
and
jbe
jae
sbb
std
push
mov
fisttp
add
sub
cdq
inc
repnz
rol
xor
mov
fisttp
cmps
mov
call
rcr
or
push
adc
adc
cmp
xor
lock
sar
add
daa
or
cmp
stos
scas
lea
or
cmp
fsub
push
mov
sub
inc
sbb
ds
mov
out
dec
mov
enter
pop
call
add
fwait
pop
jg
pop
out
or
sub
pop
shr
lods
popa
pusha
daa
fst
pop
pop
push
cli
sub
dec
imul
xor
aaa
sub
(bad)
(bad)
fmul
push
ins
clc
out
mov
sbb
or
push
nop
jne
mov
gs
pushf
addr16
rcl
mov
loop
mov
sub
lock
dec
mov
jl
addr16
sti
adc
xchg
hlt
sbb
into
aas
not
xchg
jmp
sbb
jecxz
mov
mov
mov
nop
fstp
call
sub
mov
leave
(bad)
push
xlat
mov
sysexit
inc
pop
mov
xchg
and
std
and
ret
(bad)
pop
or
xchg
cmp
call
rcl
and
pushf
inc
into
add
inc
loope
jmp
inc
int3
addr16
mov
inc
mov
add
in
and
lea
mov
mov
pop
mov
mov
mov
add
rol
xor
test
out
lods
mov
cmp
adc
fs
imul
mov
sbb
ins
pop
fbld
jmp
ins
mov
add
adc
jo
ror
adc
inc
stos
rcl
push
inc
ds
popf
adc
mov
dec
(bad)
mov
xchg
aas
std
inc
out
test
push
mov
and
fnsave
les
jnp
push
jg
outs
adc
(bad)
adc
mov
aad
xchg
inc
pop
dec
jmp
pop
stc
mov
mov
test
stos
pop
and
jb
aam
mov
sbb
mov
jnp
(bad)
jmp
pop
add
cmp
sbb
ror
std
inc
mov
dec
retf
pop
cmp
jge
lds
cmp
add
and
adc
(bad)
sub
(bad)
ficom
stos
fisubr
sub
sysexit
push
xchg
retf
mov
cmps
cmp
clc
je
in
pop
mov
and
aas
push
fist
in
enter
cmp
es
add
(bad)
push
in
aaa
movs
xor
add
fdiv
jne
mov
adc
nop
jl
pushf
and
clc
in
fstp
jecxz
imul
jl
dec
shl
fstp
xor
test
or
cwde
adc
add
or
mov
mov
icebp
and
ds
push
inc
mov
cdq
push
inc
push
stos
repnz
dec
ja
xor
iret
stos
lods
sub
pop
cmp
or
clc
popa
loope
mov
add
lods
aam
loope
adc
xor
std
and
scas
int
mov
jmp
adc
mov
hlt
jecxz
adc
jl
rep
xor
mov
sub
test
dec
test
stos
rdmsr
loope
push
sub
xor
test
les
mov
mov
mov
inc
jae
repnz
xor
ins
test
or
and
mov
mov
nop
jmp
jmp
or
outs
xchg
pop
adc
or
pop
fistp
xor
sub
cmp
xor
fdivr
adc
in
outs
ror
fnsave
int3
gs
call
and
jp
pusha
push
xchg
test
leave
je
enter
repz
push
stc
jmp
sub
imul
mov
jmp
call
mov
jo
fs
mov
xor
repnz
rcr
sbb
bnd
pop
push
mov
adc
mov
xor
jae
mov
sbb
push
adc
jmp
clc
push
or
getsec
shr
cmp
ret
repz
sbb
or
pop
(bad)
nop
aad
addr16
sbb
push
ficomp
test
jle
out
inc
cli
pop
push
imul
sub
cmp
mov
adc
push
or
adc
std
xlat
pusha
popa
das
fs
mov
cmp
mov
outs
jo
nop
jb
out
test
ret
sbb
xor
sub
sbb
jmp
iret
xchg
mov
lahf
daa
dec
out
mov
mov
and
cmps
repz
loopne
ret
int3
mov
push
xchg
aaa
jno
sti
adc
sub
call
outs
mov
push
imul
add
jnp
lods
adc
adc
test
loop
imul
stos
mov
in
mov
fistp
rcr
js
arpl
jmp
add
aad
gs
outs
xor
and
adc
mov
cmp
mov
cwde
pop
sbb
jne
(bad)
scas
pop
jbe
mov
jo
dec
xchg
shl
mov
pop
fadd
jnp
jmp
fdivr
mov
popf
jl
test
bound
push
rcl
or
(bad)
mov
je
(bad)
pop
(bad)
cs
inc
pop
movs
pusha
lods
ret
dec
push
cs
jae
fst
xor
outs
jb
jnp
stc
mov
scas
add
cmp
adc
jg
pop
adc
mov
sbb
sbb
cmps
sbb
sbb
std
cwde
sbb
lahf
scas
pop
dec
and
inc
call
(bad)
out
(bad)
push
jne
cmp
push
jg
sbb
lods
mov
jae
aam
in
mov
sub
lods
stc
cmp
cmp
mov
jnp
pop
and
sbb
adc
add
xor
sahf
xor
sbb
icebp
pop
or
jbe
add
jl
add
pop
sbb
(bad)
jecxz
out
xor
(bad)
xor
cmp
push
test
xchg
cmp
(bad)
cmp
fcom
or
(bad)
sub
mov
data16
ins
lock
pop
dec
push
sahf
xchg
xor
jl
mov
int
xor
dec
jne
mov
repz
js
shr
neg
ds
lock
movs
retf
mov
push
(bad)
div
pop
dec
stc
mov
add
or
cmc
les
mov
dec
xchg
pop
pop
shr
xchg
sahf
movs
sbb
xchg
mov
lods
add
xchg
jae
adc
push
xchg
and
pop
hlt
pop
popa
add
call
scas
cmps
push
call
mov
push
or
cs
div
jo
fmul
push
imul
and
xchg
lea
(bad)
sub
call
ret
cmps
xchg
clc
popa
jmp
clc
xor
ds
rcl
in
sti
sbb
lock
(bad)
sbb
cmp
cmp
jae
ficom
add
fs
dec
imul
out
test
and
push
mov
mov
(bad)
fidiv
in
adc
in
xchg
aas
fs
add
and
xchg
and
fimul
ss
add
int
and
ss
(bad)
dec
sahf
sbb
cmp
pop
(bad)
adc
loop
jnp
pop
test
dec
icebp
js
retf
sub
retf
xor
fs
loope
pop
out
int
jo
or
pop
shl
xchg
enter
pusha
lock
ja
and
into
jl
inc
cbw
mov
rol
(bad)
xor
lods
xor
mov
or
fsubr
and
push
pop
into
dec
sub
fist
and
sub
mov
push
gs
lods
ins
adc
sbb
jmp
stc
mov
cmps
(bad)
clc
stos
jge
add
and
mov
shl
nop
jp
cmps
int
pop
xlat
or
in
pusha
daa
push
mov
jmp
and
test
pop
mov
jb
div
shr
mov
mov
(bad)
inc
add
xchg
jo
sahf
jnp
cmp
adc
sbb
in
cmp
xor
repz
push
test
add
xor
adc
and
add
xchg
pop
jo
and
mov
adc
cmc
stos
xchg
aad
and
push
scas
xchg
adc
gs
out
xchg
pop
ins
retf
jle
xlat
fwait
or
stos
ja
ds
mov
mov
push
stos
mov
jp
mov
mov
imul
cmps
dec
jne
or
add
pop
pop
in
stc
dec
xchg
int
cs
jle
in
xor
pop
push
xchg
and
addr16
jge
and
retf
movs
cmp
bound
xchg
in
fimul
pop
inc
xchg
add
and
sub
push
sbb
add
ss
pop
stc
daa
mov
cdq
jne
out
push
popa
out
fsubr
cmp
out
sbb
sbb
push
mov
mov
xchg
cmc
jge
and
ret
lea
cmc
xor
push
js
scas
sahf
xor
sbb
daa
xchg
mov
ror
pop
loop
mov
icebp
mov
lods
xchg
xlat
shl
icebp
jg
arpl
ins
int
(bad)
clc
adc
jecxz
in
popa
and
out
ret
int
sbb
lds
dec
pop
xor
push
leave
mov
sub
adc
or
mov
loop
fs
cmp
repnz
push
adc
pop
push
or
fmulp
add
pushf
dec
dec
rol
aaa
mov
jbe
rcl
mov
sub
repnz
cmp
sub
push
jne
push
mov
fwait
inc
xor
mov
fwait
aad
mov
jae
add
scas
mov
in
mov
cwde
jmp
xlat
and
push
xchg
or
in
ror
cmp
xor
iret
cmp
mov
jb
sbb
leave
adc
addr16
xor
jmp
ret
add
cmp
addr16
std
push
jne
add
and
add
sub
rol
in
cmp
in
int3
imul
ja
aad
ret
mov
mov
js
ja
(bad)
jl
stos
jmp
ja
shl
dec
pop
push
xchg
push
loop
xor
xchg
mov
mov
add
xchg
cmp
add
mov
add
push
pop
lahf
xor
loop
in
jmp
loope
cmp
fptan
lahf
pop
mov
or
scas
aad
push
cld
jmp
mov
repz
ins
in
inc
aad
lods
iret
fidiv
or
fimul
mov
ss
mov
out
sti
pop
icebp
xor
push
fadd
paddusw
pop
pop
scas
ret
aad
or
mov
das
add
jnp
imul
cwde
int3
cwde
mov
stos
lea
(bad)
leave
and
out
and
sahf
imul
repnz
inc
adc
jnp
push
(bad)
and
arpl
(bad)
bound
mov
dec
dec
jne
out
mul
fs
xor
inc
or
mov
in
jo
push
push
push
push
out
jp
cdq
and
fs
mov
and
lahf
retf
ficomp
cli
push
outs
mov
xor
fcmovu
mov
xchg
xchg
stc
sub
ret
inc
int
dec
fistp
adc
pop
stos
xchg
fxch
mov
push
call
cwde
add
add
not
lds
iret
or
pop
lods
push
or
xchg
aaa
cmps
pop
jmp
outs
stc
cwde
pop
dec
pop
xchg
(bad)
repz
cmp
sbb
repz
push
movsx
int
jle
pop
addr16
loop
call
ret
ret
jecxz
push
ins
ret
loopne
ror
and
and
out
shl
jg
loop
or
clc
inc
ja
leave
nop
xor
push
mov
rol
jge
mov
aaa
adc
fnstcw
sbb
fisubr
movs
mov
fst
push
fnstcw
cli
mov
xchg
sar
sbb
cmp
lds
stos
jp
jmp
lock
(bad)
xchg
cmps
push
add
pop
imul
push
aaa
pop
pop
pusha
frstor
pop
int
js
sbb
adc
out
lds
sub
cmc
dec
or
loop
out
mov
and
leave
cmp
jle
sbb
enter
loop
sar
not
jne
xor
add
or
sub
jecxz
xchg
ins
test
dec
ins
aad
daa
push
and
inc
sub
icebp
scas
add
xor
call
(bad)
fwait
cmc
out
sbb
sbb
aam
shr
shr
fist
je
inc
add
aas
cmc
xchg
jecxz
loope
mov
test
paddd
xchg
add
aam
sbb
push
mov
jecxz
xchg
ins
mov
dec
jbe
cmp
jl
xchg
pop
xchg
int3
out
add
pop
jb
push
movs
push
shl
mov
daa
cli
(bad)
shl
and
adc
pop
push
inc
mov
dec
jne
in
add
or
inc
sub
std
repnz
movs
dec
inc
dec
ror
jae
stc
stos
sub
add
rol
fs
xchg
enter
or
or
(bad)
jmp
shl
inc
pushf
push
or
cmp
pop
xchg
dec
std
sbb
call
mov
scas
sbb
or
call
pop
sbb
scas
sti
cmc
not
arpl
leave
pop
jbe
push
(bad)
test
xchg
es
jmp
or
aas
inc
add
push
pop
bound
fistp
add
stc
shl
sahf
je
jns
dec
(bad)
pop
mov
jmp
push
fidivr
mov
aas
out
sbb
jbe
mov
dec
nop
(bad)
cdq
fyl2x
sbb
mov
jmp
pop
xchg
dec
pop
ins
cmp
lods
inc
mov
(bad)
out
sub
jl
leave
sub
inc
mov
push
movs
es
lods
out
jno
jo
or
enter
adc
mov
and
addr16
pop
iret
in
pop
aas
inc
ins
sbb
cdq
sbb
cmp
sbb
mov
or
fisttp
in
rcr
leave
adc
pop
fcomp
mov
push
sub
fsubp
jmp
cmp
mov
in
daa
in
rcr
int3
mov
or
imul
inc
pop
xor
mov
jae
or
dec
xchg
loope
pusha
ficomp
aad
out
in
lock
xor
pop
(bad)
xor
aaa
xlat
xor
outs
xor
mov
pop
and
jo
sahf
push
shl
shl
ins
scas
add
lds
push
in
arpl
mov
mov
jl
ret
sbb
xlat
pop
dec
pop
and
jmp
in
mov
mov
stos
pop
pop
(bad)
int3
loope
jp
add
shr
test
lahf
je
jo
inc
mov
lea
jbe
(bad)
push
loopne
ss
ins
adc
sub
and
int
stos
adc
jg
or
xlat
ror
imul
inc
mov
mov
nop
pop
inc
loope
add
push
(bad)
push
or
mov
adc
imul
pop
leave
test
adc
icebp
sub
or
movs
sub
cmps
xchg
jne
(bad)
int
in
arpl
arpl
js
sbb
and
jno
rol
ins
mov
(bad)
aad
daa
(bad)
jmp
mov
lds
cwde
dec
(bad)
adc
sub
loopne
inc
nop
jge
and
test
or
inc
push
adc
and
aaa
aas
jne
fisub
or
lahf
mov
hlt
pop
pop
stos
in
fidiv
fstp
jb
mov
pushf
push
lds
dec
pop
pop
pop
cmp
cmp
outs
gs
movs
mov
pop
mov
cld
fnstcw
jb
dec
sbb
lea
jge
popf
push
sbb
jnp
cs
repz
pop
stos
inc
adc
inc
xchg
jae
push
daa
fisub
pop
dec
push
jg
pop
add
retf
inc
loope
pop
cmps
inc
ret
hlt
pop
add
pop
test
jl
loope
ror
pushf
xchg
repnz
pop
add
sub
and
loope
mov
std
mov
shl
data16
lods
cmps
or
dec
shl
sub
jge
sti
movs
xchg
mov
dec
or
jg
adc
pusha
push
mov
pop
sbb
xor
dec
cmp
hlt
and
push
sbb
out
pop
add
push
enter
packuswb
fldenv
repnz
test
inc
cmp
jbe
push
inc
not
inc
and
stos
imul
repnz
retf
sub
or
add
add
aaa
(bad)
arpl
in
arpl
push
int3
scas
inc
push
jmp
fidiv
push
(bad)
fisubr
jno
and
xor
sbb
dec
jg
fild
and
xchg
aas
ja
xor
lods
xor
sub
and
or
repz
(bad)
mov
inc
cmp
retf
mov
int3
mov
jnp
mov
jns
jae
enter
cwde
fstp
push
or
xchg
retf
xchg
xchg
push
inc
pop
(bad)
outs
jle
sbb
xor
(bad)
fdivp
and
xor
and
sahf
mov
ficomp
imul
retfw
add
sub
sub
xor
fsub
add
das
popa
in
mov
or
jmp
cmp
sbb
jbe
les
(bad)
call
fstp
pop
cs
cmp
pusha
pop
adc
in
iret
fwait
pop
movs
sub
mov
mov
jp
sbb
sbb
jl
cld
and
lods
pop
and
test
sub
nop
xchg
jg
loope
jo
popa
mov
imul
jnp
mov
mov
mov
cmps
out
mov
inc
push
js
movs
dec
popa
add
xchg
and
push
mov
movd
je
jns
pop
xor
lods
adc
nop
push
pop
data16
inc
jb
push
les
adc
aaa
push
int3
push
adc
daa
ins
iret
or
mov
sub
call
add
mov
mov
adc
sbb
xchg
pop
std
jge
push
ja
xchg
mov
xor
test
(bad)
das
or
ds
push
cmp
sub
inc
xor
cmc
dec
les
std
push
mov
in
cmps
pop
data16
add
and
mov
mov
cmps
and
inc
inc
call
adc
or
pop
arpl
neg
pop
jb
mov
pop
jmp
outs
mov
popa
cmp
aas
mov
adc
push
into
pop
loope
xlat
jmp
dec
xchg
in
inc
lds
das
test
push
inc
xchg
xor
sbb
test
push
lds
mov
call
xor
cmc
mov
arpl
adc
into
int
fwait
aaa
cwde
ds
adc
aaa
jle
imul
scas
popa
mov
loope
gs
cmp
icebp
cmp
add
int
cmp
or
out
dec
pop
repnz
fdivr
mov
push
sbb
shr
jmp
dec
lods
(bad)
sbb
lahf
xchg
jae
nop
iret
mov
call
movs
ins
pop
jp
sub
dec
ficom
jo
fs
sub
test
cmp
sub
ror
cwde
sub
inc
cmp
imul
ret
or
adc
dec
(bad)
sbb
enter
cs
iret
pop
pop
(bad)
shl
or
into
ins
inc
jo
dec
inc
sub
ret
and
mov
xchg
fs
ds
xchg
jecxz
int3
sahf
scas
stos
jbe
sub
jmp
push
test
mov
sbb
mov
sbb
lods
aad
(bad)
xchg
andps
jg
add
cmc
cwde
or
in
or
add
mov
outs
clc
(bad)
sub
cmp
out
in
out
pushf
loope
ins
loop
sbb
rol
or
out
mov
sti
xor
inc
das
cmps
push
inc
sbb
fs
cmps
int3
inc
adc
adc
jae
call
xlat
fucomp
dec
add
mov
sub
or
bnd
fld
in
cmp
fisub
pusha
push
addr16
xchg
imul
loopne
or
inc
dec
scas
sub
fidivr
jle
mov
add
outs
jmp
push
(bad)
mov
lahf
xor
lods
cmps
jns
popa
push
das
xor
retf
enter
adc
dec
js
not
xor
mov
mul
repz
mov
and
dec
sub
cli
sub
loop
mov
test
ins
xchg
scas
mov
xchg
aaa
das
sub
test
inc
nop
push
pop
jne
mov
mov
jge
lds
mov
outs
ret
aaa
aaa
mov
fbstp
fisubr
jge
mov
push
fidivr
in
inc
inc
adc
inc
ja
pop
sub
and
ret
sub
inc
sub
mov
jo
xor
fwait
into
mov
movs
inc
pop
sar
out
sti
or
in
push
shr
cli
sub
sub
push
push
pusha
out
push
sub
push
ret
retf
sahf
push
idiv
mov
(bad)
xchg
jno
and
sbb
dec
pop
aas
push
and
retf
and
pop
push
xor
or
jo
and
mov
mov
loopne
iret
test
repz
push
retf
(bad)
int
sbb
lds
sub
sbb
(bad)
and
mov
mov
jae
data16
jnp
xlat
xor
add
mov
fnstenv
sub
call
jno
(bad)
push
xlat
iret
push
inc
xchg
pop
mov
pushw
xchg
cmp
and
pop
mov
inc
jbe
int
push
repz
inc
out
mov
xchg
pop
mov
mov
pop
sub
xchg
xchg
cmc
(bad)
sub
fs
scas
jbe
xor
gs
outs
jmp
cmp
mov
inc
addr16
iret
xor
cmps
loopne
mov
push
mov
cmp
sbb
shl
into
movs
push
sbb
cmp
fist
(bad)
(bad)
jb
and
(bad)
cmp
xor
nop
mov
add
dec
mov
outs
jle
clc
adc
rcl
add
fdiv
adc
fwait
pop
mov
inc
adc
xor
and
cdq
cmp
vhaddps
jne
dec
dec
inc
iret
aas
and
jae
xchg
repz
mov
add
inc
dec
cmps
in
xchg
int3
push
mov
cmp
cmps
popf
mov
pop
pop
out
ret
repz
fld
adc
leave
movs
push
lock
cmp
sbb
mov
xor
pop
mov
mov
popa
adc
mov
stos
mov
sbb
lods
sbb
cs
je
mov
xor
cmp
xchg
adc
jb
ror
mov
ret
fsubr
stc
lds
cmc
test
dec
jne
and
mov
add
cli
out
mov
adc
mov
pop
ror
retf
fwait
mov
adc
data16
rcr
xor
add
test
push
pusha
or
stos
aaa
jecxz
das
xor
xor
fcom
retf
add
and
xchg
fisubr
in
(bad)
popa
cld
js
jno
inc
shl
test
jg
pop
or
cmp
je
call
ins
(bad)
jmp
jo
dec
xchg
jecxz
adc
cmp
retf
shr
or
dec
xor
jb
inc
loopne
out
enter
scas
je
fild
jg
push
xor
not
inc
jp
ds
ss
add
add
es
call
xchg
outs
pop
repnz
dec
sub
pop
xor
xchg
test
inc
cmps
dec
mov
inc
add
jbe
fst
es
mov
in
rcr
call
lods
xchg
leave
mov
jg
pop
jge
pop
mov
jo
mov
std
and
out
dec
cmp
js
(bad)
stc
bswap
mov
pop
clc
or
lods
sbb
ror
or
sbb
in
and
add
pushf
dec
inc
jne
push
mov
retf
lods
cli
dec
xor
mov
ss
(bad)
jnp
jmp
jo
xor
es
jg
popf
or
mov
aad
outs
and
int3
ret
inc
pop
and
bound
imul
pop
xor
mov
adc
jb
xor
jp
adc
xor
inc
icebp
popa
push
ja
mov
pop
mov
jp
cmps
fisub
stos
out
push
dec
xor
and
sahf
in
bound
sub
out
mov
xchg
jnp
stc
jo
icebp
push
sub
sahf
fild
xchg
shr
xor
push
push
(bad)
dec
and
aam
xchg
jmp
in
fisttp
mov
inc
jno
call
lds
out
int3
push
test
cmp
outs
add
add
sbb
jbe
push
mov
int
in
sbb
cs
stos
inc
sahf
mov
sbb
pop
sbb
xchg
add
ss
hlt
ds
sub
mov
retf
add
jg
jle
je
ins
push
jecxz
int3
mov
movs
mov
and
clc
out
mov
loope
cdq
add
mov
sahf
cs
push
jg
cdq
adc
xor
pushf
pop
or
cld
push
mov
jnp
jge
jp
rcr
scas
and
pop
inc
mov
pmulhw
push
xchg
mov
add
or
imul
mov
int3
lea
mov
push
xor
xor
mov
aas
or
jmp
adc
mov
push
fwait
pop
adc
ins
sub
nop
mov
int3
into
cmp
scas
mov
pop
sub
fistp
pop
mov
adc
pop
jae
adc
hlt
loop
out
imul
mov
xlat
cmc
or
adc
(bad)
push
mov
ret
xchg
outs
push
(bad)
sbb
lds
out
adc
out
mov
add
xchg
or
ja
sub
pop
(bad)
jl
push
out
or
sbb
sar
dec
jmp
std
js
xor
jno
pop
jb
xor
jle
(bad)
cdq
cmp
and
bound
or
je
clc
or
cwde
nop
xchg
fdiv
mov
js
jbe
lds
dec
inc
popf
add
push
or
call
or
mov
sub
fiadd
jmp
push
push
imul
stc
lock
retf
inc
inc
gs
sbb
int3
loopne
(bad)
sbb
xor
push
enter
jno
mov
dec
addr16
test
in
sbb
lods
push
jae
cs
icebp
dec
jno
mov
ss
outs
push
xchg
cmp
into
das
loope
sbb
into
mov
xor
push
movs
xchg
add
pop
(bad)
(bad)
jno
or
pop
pop
loope
cs
cmp
iret
jns
mov
shl
mov
inc
retf
cli
lock
mov
pop
or
or
push
call
jae
std
adc
addr16
pop
xchg
cmps
xchg
dec
dec
(bad)
popa
dec
sub
iret
sub
jne
mov
imul
(bad)
out
in
fcom
fmul
jae
jmp
gs
jmp
aaa
pop
xchg
ret
add
test
je
test
sbb
ret
hlt
push
push
push
sub
mov
fimul
mov
adc
test
cmp
xchg
pop
mov
(bad)
mov
mov
xchg
xchg
pop
scas
mov
sub
mov
icebp
mov
cmp
mov
leave
div
xor
sub
cmp
out
xchg
xor
scas
loopne
fld
mov
xchg
test
jl
fld
mov
mov
xchg
test
xchg
mov
mov
(bad)
(bad)
std
retf
mov
je
vfrczss
or
or
push
xchg
test
loopne
stos
push
test
out
lods
sti
imul
jge
mov
(bad)
sbb
aad
loope
pop
mov
stos
jno
inc
inc
mov
aad
mov
cdq
pop
pop
cs
pop
fisub
mov
xor
rcl
ficomp
lods
imul
jmp
pop
jno
popf
test
and
pop
inc
gs
push
sub
pop
pop
push
lods
and
mov
dec
mov
stos
dec
lea
ret
stos
adc
cmp
lods
xchg
jl
mov
dec
int
inc
imul
jmp
add
and
fcmovb
xchg
or
bnd
jle
(bad)
jmp
mov
mov
push
xor
aas
in
cmp
dec
stos
xchg
loop
xchg
jnp
rol
cmps
inc
shl
inc
loop
test
repz
adc
outs
rcl
mov
ja
mov
adc
jecxz
cs
fmul
shr
addr16
ret
stos
cmp
adc
(bad)
imul
or
lods
jg
out
cwde
inc
inc
sub
movs
pop
(bad)
lea
mov
adc
jl
dec
add
aaa
inc
retf
push
retf
mov
dec
add
outs
(bad)
out
or
pop
iret
out
lock
imul
push
or
xchg
mov
das
lgs
add
iret
sub
mov
cmp
(bad)
std
push
fdivr
cmp
mov
jl
mov
fcom
cmp
adc
shr
pop
sahf
push
xor
mov
fistp
lahf
jmp
jb
cmp
add
cmps
(bad)
xor
sahf
aad
mov
fisttp
mov
pop
sub
nop
inc
xchg
or
sub
(bad)
in
inc
lea
mov
fcmovnu
fnstcw
cmp
pop
sbb
enter
xchg
rcr
cmp
fsub
in
movs
xor
or
mov
int
ins
cmp
mov
sbb
int
inc
push
push
cld
dec
jmp
xchg
jl
mov
lea
(bad)
mov
jnp
cmp
inc
and
inc
mov
jmp
outs
xlat
ins
mov
push
ds
shr
or
push
scas
or
ret
adc
ret
pop
aad
dec
test
test
pop
inc
clc
fist
add
in
and
bound
dec
pop
cmp
mov
add
fwait
enter
add
jl
hlt
ja
xchg
out
and
mov
push
add
sub
pop
scas
fwait
sub
cmps
mov
sub
cli
lods
pop
push
pop
clc
xor
adc
push
xchg
es
add
ficom
cmps
jmp
ret
mov
js
arpl
lahf
mov
push
jg
xchg
mov
loopne
sbb
jmp
pop
iret
pop
cmp
xchg
daa
sub
(bad)
push
xchg
into
mov
inc
fdivr
in
pop
pop
xchg
in
cmps
adc
daa
(bad)
fwait
(bad)
aaa
adc
std
std
movs
push
das
cmp
imul
and
pop
cs
ror
gs
pop
outs
loopne
sti
jmp
jbe
lods
sbb
jb
mov
jno
aad
cmps
enter
fs
push
fdivr
icebp
cmps
cmc
not
test
lahf
in
addr16
or
mov
in
mov
and
and
cwde
loopne
fwait
add
retf
sbb
mov
mov
jg
xor
out
leave
test
xchg
jl
and
std
data16
popa
dec
cli
mov
in
jmp
jbe
jae
mov
push
aad
cmc
lods
loope
jae
push
bound
fldenv
(bad)
jns
inc
push
std
and
mov
in
imul
aam
mov
dec
loop
cli
aad
movs
inc
movs
cmp
and
cmps
retf
mov
cli
sbb
out
cmp
fistp
fcomp
sbb
stc
mov
inc
add
lock
cmp
jnp
not
mov
mov
cwde
imul
inc
not
xor
and
add
or
je
iret
fs
(bad)
jae
adc
(bad)
push
rol
leave
push
arpl
xchg
mov
dec
or
add
scas
mov
xchg
inc
or
jle
and
mov
fcomp
cmps
jmp
sbb
jecxz
popf
add
repnz
fcmovnb
out
mov
adc
fsubrp
xchg
or
inc
retf
xchg
das
sbb
jnp
retf
add
aas
mov
sahf
cmp
call
jbe
aam
jo
mov
and
mov
xchg
mov
push
xchg
cmp
ins
sub
xchg
es
into
bound
sub
push
loop
adc
and
aam
add
inc
shr
jp
xor
jns
int
mov
inc
int3
inc
inc
stos
xchg
out
xor
test
dec
dec
scas
mov
xor
cdq
cmc
adc
test
mov
or
xchg
inc
pop
mov
xchg
(bad)
popf
ret
in
outs
(bad)
jne
ins
add
stc
stc
mov
iret
lahf
int3
push
mov
adc
jmp
and
int3
mov
or
call
adc
cmp
xor
imul
ins
jb
or
ja
pop
movzx
or
aaa
movs
mov
imul
rcl
dec
add
imul
add
std
add
inc
shld
js
call
jnp
xor
das
lods
push
retf
mov
push
(bad)
stos
dec
in
or
daa
lods
addr16
push
cld
les
(bad)
leave
mov
mov
sbb
(bad)
js
add
jae
enter
mov
push
mov
mov
mov
jbe
push
sub
call
mov
add
out
das
inc
out
cs
(bad)
and
and
jo
outs
(bad)
push
out
in
and
outs
cwde
mov
fnstenv
adc
mov
mov
or
fst
cmp
add
jle
sub
out
sub
and
sub
inc
xor
fnstenv
xchg
mov
sbb
shl
mov
rcr
pop
xchg
aad
add
push
psllq
pop
test
lods
or
or
and
stos
mov
inc
test
xor
movs
adc
shl
(bad)
mov
pop
cdq
xchg
jbe
xchg
test
cmps
test
cmovae
and
imul
xchg
arpl
cmps
(bad)
and
sub
xor
add
add
repnz
push
cwde
ror
push
sbb
adc
sub
mov
fisub
js
stos
nop
xor
dec
xchg
data16
mov
mov
and
loopne
jns
ror
rcr
cmp
mov
pop
dec
add
cmc
add
call
jle
ret
sbb
les
cmc
cmp
mov
(bad)
stc
mov
xchg
movs
sbb
mov
cmc
pop
lds
cs
xor
add
aas
jmp
push
push
(bad)
xchg
mov
cmp
push
jo
mov
dec
add
ins
imul
push
into
jl
mov
ret
adc
sbb
icebp
jbe
ds
aam
arpl
cdq
mov
(bad)
xor
retf
das
mov
jmp
je
aad
xor
and
test
or
and
rol
(bad)
pop
jmp
aas
add
add
out
push
test
xor
cli
cs
mov
lahf
adc
mov
adc
mov
adc
jae
add
ins
jmp
xor
movs
sub
xchg
test
or
xchg
xor
lahf
ficom
xchg
loope
sbb
mov
std
sub
nop
jae
jb
sbb
dec
and
adc
inc
ss
cmps
in
push
pop
icebp
sub
sbb
jno
test
inc
sbb
in
xor
nop
xor
inc
jb
pop
and
ror
cld
adc
xor
lods
mov
jmp
loop
jecxz
icebp
lahf
push
pop
out
stc
mov
(bad)
repz
mov
cmp
fimul
push
pop
sub
sub
rol
push
push
jo
xchg
pop
lock
cmp
xchg
std
xchg
mov
push
pop
loopne
jle
dec
rol
movs
sar
dec
aas
popf
lds
add
shr
inc
test
mov
push
leave
stos
lods
push
adc
into
ss
cmp
fsubr
dec
jns
cmp
mov
lahf
and
mov
add
ss
(bad)
call
xor
lock
repz
xchg
retf
mov
mov
mov
test
dec
int
mov
cmc
imul
bound
mov
hlt
pushf
inc
adc
mov
pushf
jne
cli
jp
fdiv
pushf
adc
xor
or
push
das
addr16
jb
rol
mov
imul
(bad)
fs
jp
push
mov
pop
mov
je
dec
jnp
mov
mov
or
jno
pop
xor
add
and
inc
pop
int3
add
outs
xlat
jbe
lods
ins
in
test
jae
pushf
jmp
sti
into
arpl
imul
loope
lods
mov
ja
mov
ja
xchg
jl
rol
(bad)
mov
stc
icebp
sub
call
sar
cmc
mov
mov
add
dec
push
lock
pop
stos
fnsetpm(287
dec
mov
adc
or
xor
in
iret
adc
push
out
and
fisttp
add
in
stc
inc
xor
ja
mov
js
push
sar
std
neg
out
pusha
or
xchg
mov
mov
xchg
aam
pop
inc
mov
fst
inc
int
dec
push
mov
adc
fidiv
push
jb
imul
shl
popf
out
sbb
enter
jne
fwait
js
cmps
(bad)
xlat
push
add
dec
movs
inc
cmp
call
sti
ds
pop
sbb
mov
stc
xchg
push
cwde
pop
cmc
inc
loop
out
mov
mov
push
inc
jb
mov
and
adc
add
cmps
pop
jmp
das
(bad)
cmps
je
sub
pop
dec
(bad)
bound
xchg
xchg
leave
and
cmps
mov
je
loop
push
jg
sbb
js
cmp
adc
aaa
mov
lock
sub
sub
push
mov
popf
int3
dec
aad
je
call
adc
adc
arpl
pop
addr16
lds
outs
cmp
pusha
and
aad
movs
push
mov
sub
xchg
pop
pop
jbe
pop
fdivr
into
push
stc
ins
and
push
inc
lods
pop
stos
fwait
mov
int3
sub
mov
pop
xchg
add
push
popf
mov
adc
enter
sar
loop
adc
and
sbb
adc
mov
sbb
sub
ins
xchg
(bad)
push
pop
pop
icebp
mov
rol
pop
scas
mov
ss
cmp
stos
sti
and
pop
sub
cmp
jb
es
enter
ret
out
int
xchg
pop
jle
fstp
xor
mov
xlat
and
sbb
jle
cli
push
and
or
cmp
je
adc
inc
ins
xchg
sub
push
jmp
ret
inc
imul
leave
stos
inc
loop
dec
dec
mov
aas
(bad)
jge
xchg
cwde
or
or
push
xor
add
mov
mov
pop
dec
or
pop
push
int
dec
cmp
test
ja
jecxz
aad
pop
fmul
inc
jmp
div
add
lds
xchg
int
add
xchg
out
stos
(bad)
or
(bad)
retf
mov
mov
sub
or
and
sub
les
or
sbb
in
mov
rcl
mov
icebp
sub
ja
out
call
mov
lods
jge
jge
(bad)
add
jno
sub
aas
lock
jne
sub
lea
test
and
adc
cmp
dec
and
mov
enter
in
inc
push
les
(bad)
cld
cmc
cmp
jbe
push
xor
nop
xor
inc
and
sub
mov
shl
ror
data16
les
imul
inc
add
sub
xchg
add
in
xchg
mov
pop
int3
fadd
xchg
mov
jno
daa
cmp
lods
(bad)
xor
xor
pop
or
push
icebp
shr
mov
mov
jp
lods
dec
or
mov
push
fdiv
jbe
imul
sti
jne
dec
and
adc
adc
imul
mov
jns
inc
int
pop
in
out
fidiv
das
jg
lock
scas
push
les
pop
xor
cdq
test
rsm
push
xchg
mov
cmp
cwde
mov
rol
pop
add
arpl
lahf
movd
mov
sbb
jae
jo
outs
adc
cmps
addr16
sbb
fiadd
int
lock
add
jl
xor
in
mov
out
out
push
push
xchg
push
dec
and
ret
push
or
pop
sbb
xor
and
aam
jo
fistp
adc
mov
lahf
and
or
xor
add
test
nop
mov
les
dec
cmp
or
pushf
popf
sub
push
xchg
rcr
div
leave
in
xchg
or
ficomp
cmps
pop
jo
ja
mov
jmp
xor
mov
fcmovbe
hlt
sahf
inc
sbb
inc
test
xchg
sbb
stc
test
popa
les
fsub
imul
mov
mov
gs
pop
jle
fisubr
cmps
fnsave
sar
cli
push
mov
call
push
add
gs
pop
leave
xor
je
iret
add
ins
push
fbstp
js
retf
icebp
mov
sub
or
(bad)
js
xchg
jae
(bad)
push
rcl
outs
pop
xor
cmps
ss
outs
jg
mov
push
and
cmp
cmp
out
jecxz
or
sub
pop
lock
fcmovnu
vaddsubpd
cld
rol
out
(bad)
push
xor
test
jb
cmp
cmps
adc
inc
popf
stos
adc
pusha
aas
pop
mov
jmp
cli
mov
std
or
push
or
xchg
mov
(bad)
repnz
int
add
scas
fidiv
jo
bound
ror
pop
xchg
int3
push
xchg
adc
mov
nop
inc
mov
push
xchg
inc
mov
les
jo
arpl
bound
pop
and
js
pop
or
nop
adc
jmp
adc
pusha
pop
int
xor
aad
or
push
sbb
(bad)
mov
mov
mov
pop
out
sub
enter
fmul
lock
jle
inc
push
cwde
and
addr16
repz
cmp
xchg
aam
into
sub
out
pop
cmps
(bad)
mov
popa
cwde
dec
mov
out
mov
fnstsw
jl
lock
stc
cli
popa
add
cdq
add
jmp
xor
iret
cdq
loope
jge
mov
sbb
pop
sbb
or
cmp
jge
test
out
sbb
(bad)
and
and
mov
cmp
or
popf
adc
dec
pop
stc
inc
idiv
push
pop
cdq
add
cmp
loope
outs
lods
iret
cmp
out
pop
cmp
pop
jg
pop
jbe
out
push
xor
pop
(bad)
aaa
pop
nop
das
jmp
stc
sub
ja
push
out
iret
shr
(bad)
inc
adc
fldcw
and
mov
cli
(bad)
push
cmp
sub
inc
addr16
sbb
das
fld
rol
(bad)
iret
out
mov
inc
jmp
addr16
rcr
lea
aas
push
movs
inc
jbe
(bad)
imul
xchg
sub
jmp
push
mov
inc
rcl
rcr
sar
adc
fild
inc
pusha
shr
push
pusha
sub
rcl
loopne
rol
dec
sbb
sbb
int3
jmp
mov
int3
mov
pop
mov
call
adc
nop
push
out
into
cmp
in
aas
test
rcl
jp
aam
sub
sti
(bad)
add
fnstsw
mov
sbb
int
inc
sub
shr
int3
push
jo
push
fidiv
mov
inc
scas
aam
popa
add
pop
(bad)
push
out
or
movs
fwait
sub
pop
loopne
lock
les
xor
mov
aas
adc
pop
cmp
and
dec
xchg
fstp
test
pop
mov
dec
lock
jo
adc
add
pop
dec
cwde
mov
mov
pop
retf
xor
mov
sub
dec
jne
daa
sar
in
(bad)
cwde
jb
dec
repz
jg
rcr
push
loope
gs
cmp
repnz
jne
out
inc
pop
mov
dec
stc
adc
inc
xlat
jne
lds
aam
pop
in
into
(bad)
pop
mov
pop
dec
jl
push
lock
out
lahf
sbb
aad
jmp
pop
jne
test
inc
jle
sar
lea
in
jmp
dec
cmps
jns
mov
lea
add
lock
pop
add
(bad)
dec
or
retf
xor
sbb
mov
inc
jp
(bad)
mov
(bad)
das
pusha
jecxz
inc
push
push
fisubr
cdq
addr16
mov
or
and
xchg
sub
call
fisttp
cmp
lods
enter
movs
sbb
dec
inc
psubsb
and
jg
jle
xor
jmp
cmp
fs
dec
repnz
(bad)
mov
mov
and
dec
fisubr
iret
sbb
cmp
imul
and
xor
leave
jp
mov
or
push
mov
jnp
push
jns
leave
push
scas
add
aaa
sbb
hlt
in
in
inc
push
lds
pop
imul
cmp
inc
jb
sbb
fstp
imul
in
loope
or
jmp
in
fcom
sbb
dec
frstor
aam
add
add
cmc
and
sar
adc
cmp
outs
or
dec
sahf
push
dec
(bad)
or
je
clc
inc
inc
loopne
jnp
repz
inc
push
cli
(bad)
push
mov
es
retf
cmp
xchg
scas
rcr
inc
nop
mov
repnz
and
dec
retf
sbb
xor
xchg
subps
mov
add
cld
adc
and
xchg
sbb
inc
and
loopne
inc
push
mov
xor
pop
push
ss
xor
xor
test
cmp
inc
push
out
dec
inc
or
mov
pop
loopne
cmp
mov
lea
add
push
cmps
dec
imul
in
scas
or
adc
(bad)
arpl
and
out
xchg
xchg
dec
jle
(bad)
sbb
ficom
rcr
sub
mov
push
push
xchg
add
imul
jne
sbb
aam
movs
push
jns
repnz
cmps
cli
adc
xacquire
or
push
sbb
test
lock
mov
sub
pop
lock
ror
pushf
sub
or
std
lahf
jo
je
repz
aaa
clc
jmp
xlat
iret
aad
xchg
imul
or
jmp
mov
or
mov
xchg
popf
call
sbb
sti
inc
outs
sub
test
arpl
mov
leave
(bad)
scas
jnp
push
outs
push
rcl
mov
das
push
lods
shl
cmp
sbb
add
sbb
push
xor
adc
pop
in
in
xor
push
cdq
aad
mov
jle
xor
mov
scas
ins
mov
xchg
xchg
mov
sbb
push
mov
jle
rol
inc
fcom
mul
jmp
or
dec
mov
popf
xchg
or
push
push
adc
adc
xchg
sbb
cmp
sub
dec
or
mov
sub
add
mov
loope
cwde
in
stos
mov
bound
mov
add
sahf
test
enter
push
rcr
repnz
push
jmp
test
movs
shr
ja
adc
aaa
mov
jge
call
cmp
cdq
es
jmp
jne
inc
or
inc
sub
push
adc
cmp
neg
clc
in
mov
mov
stc
(bad)
sbb
fs
push
imul
fld
adc
daa
test
pop
push
fist
pop
fbstp
inc
mov
cmp
(bad)
nop
mov
xchg
stos
test
lods
mov
fwait
inc
shr
mov
or
fmul
shl
or
repz
adc
test
mov
mov
add
jnp
lods
sub
ins
sti
jbe
cmps
inc
imul
sub
enter
out
test
xchg
lea
hlt
call
sbb
and
or
cmc
sub
adc
test
nop
pop
add
sub
and
rcl
xor
hlt
enter
cmp
not
add
xchg
retfw
jne
bound
mov
icebp
xchg
fwait
dec
push
xchg
dec
mov
xchg
aam
cld
mov
mov
in
inc
xor
js
cmp
and
mov
sbb
jmp
gs
mov
xchg
xor
mov
xchg
inc
dec
mov
les
test
fld
mov
xchg
jp
sub
fucomp
scas
add
push
xor
fs
jns
out
adc
xor
and
call
std
(bad)
mov
hlt
imul
pushf
retf
scas
pushf
fcomp
mov
mov
lods
cs
inc
retf
dec
rol
dec
addr16
push
jmp
cs
xchg
mov
stos
clc
add
or
or
ins
repz
std
cwde
rcl
test
cmps
fld
inc
push
mov
out
sbb
arpl
daa
push
and
push
jne
inc
stc
sbb
(bad)
fst
add
lods
mov
adc
lds
or
cli
(bad)
push
jge
or
mov
pop
sub
ins
into
scas
aas
or
test
je
push
pop
stc
test
push
ins
ds
rol
aad
or
retfw
jecxz
imul
leave
push
push
add
jl
mov
jle
and
outs
lahf
dec
ins
out
fcom
xchg
mov
sahf
mov
(bad)
push
rcl
cdq
sbb
mov
fdivr
add
xchg
push
stc
xchg
and
inc
nop
sub
fadd
test
mul
test
xlat
dec
mov
stc
pop
aad
mov
or
loope
and
out
inc
outs
outs
lock
adc
adc
lahf
fs
scas
hlt
xchg
mov
pop
cli
add
xchg
int3
pop
mov
repz
jge
je
add
rcr
push
mov
out
mov
or
or
repnz
push
dec
lods
fcom
cdq
jbe
arpl
shl
pop
push
scas
out
mov
mov
out
push
xchg
sub
mov
das
inc
hlt
clc
clc
js
hlt
xchg
jl
push
movs
mov
or
call
lahf
arpl
je
mov
sub
jo
hlt
inc
mov
jl
cmp
div
jb
or
ror
jne
jo
xor
call
mov
inc
popf
or
jne
aam
jge
fiadd
pop
cmp
add
stos
loope
in
pop
mov
jecxz
aam
rcl
stos
out
les
call
hlt
pop
cs
fs
pusha
sub
pop
pop
dec
ficomp
push
mov
jmp
je
leave
add
stc
adc
jo
add
push
inc
lds
shl
push
lds
call
sbb
pop
call
xchg
mov
into
push
jae
mov
repnz
int3
out
dec
les
das
fmul
sbb
pop
test
sti
clc
mov
fwait
arpl
jo
das
lods
inc
into
and
inc
pop
mov
bound
dec
mov
jns
sub
xchg
mov
out
mov
es
jb
dec
clc
pop
data16
cmps
ss
dec
(bad)
(bad)
sbb
shl
sub
jp
push
sbb
cmc
xchg
sub
pop
mov
xchg
adc
push
in
or
cmp
push
inc
nop
push
mov
or
sub
arpl
fisub
imul
iret
xchg
mov
add
mov
xchg
or
sbb
nop
pop
sub
ins
pop
fs
pop
dec
cmp
mov
add
sbb
into
stos
not
or
(bad)
popa
jmp
loope
dec
cmp
mov
dec
es
call
xor
adc
inc
sbb
ja
pop
test
xchg
mov
adc
retf
mov
mov
test
aad
mov
shr
lds
fst
jmp
fstp
test
add
outs
sti
push
jbe
rcl
cdq
lods
stos
leave
hlt
and
mov
pushf
inc
sbb
daa
(bad)
sub
(bad)
xchg
sub
pop
loopne
int
fs
mov
(bad)
adc
ins
shl
cwde
add
xchg
add
xchg
sbb
push
scas
pusha
dec
ja
ins
lds
dec
mov
push
inc
dec
in
scas
pop
dec
dec
push
or
jmp
or
rcr
das
pushf
rcr
ds
xchg
call
inc
adc
inc
jae
stc
push
out
xchg
aas
mov
add
leave
jle
mov
jmp
test
sub
aas
call
push
push
ftst
ins
cli
xchg
outs
inc
adc
jmp
aaa
(bad)
lods
cmc
and
cmp
or
ins
pusha
pop
xchg
pushf
repz
aad
pop
jnp
xor
aad
into
mov
lods
lock
loop
adc
in
pop
fcmovb
(bad)
daa
push
loopne
inc
sbb
jecxz
scas
sbb
lods
and
xor
or
xor
jae
dec
lahf
cmp
cs
sti
sbb
jb
adc
rol
test
inc
stos
inc
scas
inc
inc
mov
jp
add
mov
xchg
fstp
sub
mov
mov
push
dec
xlat
mov
lahf
push
into
sahf
cmp
enter
cmc
int3
bound
in
adc
adc
sub
pop
ror
mov
mov
cmps
lock
mov
sub
mov
xchg
adc
jne
aaa
fnstenv
pop
outs
in
outs
shr
fimul
cdq
nop
fstp
leave
fisub
jne
std
(bad)
xor
inc
rcl
jge
call
inc
fistp
mov
adc
aam
in
cmc
mov
repnz
cmp
lea
js
cdq
in
inc
jnp
sbb
stc
mov
or
adc
xor
(bad)
test
mov
and
pop
pop
xchg
addr16
cwde
xchg
bound
fst
jmp
adc
ins
aas
mov
jp
ins
pop
mov
push
inc
stc
pop
pop
sub
movs
jae
sub
retf
loop
inc
out
dec
fbld
movs
cmc
aad
icebp
push
and
lea
mov
xchg
push
sub
xor
aaa
ret
sbb
mov
xor
loopne
mov
repnz
mov
pushf
jg
std
test
mov
adc
loopne
and
fstp
ret
retf
ret
ja
inc
inc
add
outs
js
pop
enter
je
xor
stos
in
into
xchg
xor
ret
jbe
mov
mov
add
cmp
cmp
mov
jge
dec
(bad)
ss
adc
test
(bad)
idiv
cwde
push
mov
icebp
sbb
or
scas
in
inc
stc
or
jae
ss
nop
loope
mov
ds
pop
in
gs
jno
popf
fcomp
or
fdiv
or
xor
push
mov
pop
jne
and
(bad)
mov
xor
cmps
mov
push
sub
mov
push
push
jl
xor
loope
rcr
retf
mov
ss
inc
scas
cli
adc
sbb
loope
shl
int3
or
test
arpl
fwait
and
and
test
mov
and
jb
dec
jae
adc
push
fs
pusha
mov
pushf
dec
mov
xchg
push
rcr
pop
dec
push
mov
push
jb
inc
pop
sub
repnz
xchg
bound
(bad)
mov
or
or
repnz
js
jno
aas
and
fld
mov
jmp
leave
mov
int3
cmp
or
mov
and
sub
cld
mov
jle
js
es
sbb
mov
sbb
xor
loop
test
xchg
cwde
xchg
cmc
sbb
mov
(bad)
mov
sbb
ret
push
inc
mov
xor
xchg
cmc
shr
add
js
cmp
movs
sub
dec
sbb
inc
das
sub
inc
dec
adc
add
adc
shl
and
lea
push
pop
jecxz
add
pop
in
fmulp
ret
sahf
ss
inc
xchg
and
loope
xchg
sbb
mov
mov
inc
js
mov
mov
js
jge
xchg
call
mov
mov
adc
dec
sahf
pop
in
mov
popa
fild
lock
jge
jns
add
dec
lods
iret
rol
xchg
push
or
out
push
xchg
mov
and
cmp
jbe
mov
add
fcmove
sbb
pop
aam
cdq
or
sbb
call
shl
jg
jp
xchg
(bad)
and
sahf
mov
or
in
fcomp
cli
lahf
jne
icebp
retf
and
movs
out
bound
hlt
pushf
sahf
add
in
out
movs
lds
mov
outs
ror
xchg
push
dec
or
mov
push
cdq
loopne
lods
cwde
ins
ins
(bad)
mov
mov
(bad)
lock
cld
out
cmps
push
pop
fsubr
aam
jo
push
xchg
mov
mov
fwait
jb
in
inc
push
cli
in
sbb
les
mov
sbb
fucomp
ja
test
push
ret
jmp
jb
xchg
xchg
dec
bound
repz
imul
dec
inc
add
xchg
cmps
cld
scas
test
sbb
repz
stos
je
jp
sbb
cdq
lea
stos
mov
shl
(bad)
or
jo
xchg
jmp
push
(bad)
aad
and
adc
out
mov
cmp
add
mov
xor
in
pop
mov
sbb
sbb
cmp
sbb
xchg
add
test
xchg
imul
mov
inc
test
or
popf
pop
jae
mov
(bad)
cmp
add
ret
ficomp
mov
fcmovu
sub
cs
pop
dec
mov
push
pop
lahf
call
in
aam
and
cmps
clc
ret
lods
scas
jge
fsubp
loopne
cmp
push
lock
shl
cmc
arpl
sbb
mov
sahf
inc
out
pop
dec
or
push
and
cmp
push
out
mov
hlt
out
pop
and
inc
xchg
jp
iret
mov
inc
push
call
out
ficom
pop
cmp
and
and
sub
mov
add
shl
call
dec
(bad)
mov
pop
dec
adc
sub
xor
lods
xchg
jo
ins
(bad)
call
jns
xor
aas
inc
std
call
(bad)
fiadd
mov
in
imul
mov
dec
in
cmp
xchg
dec
pop
sbb
mov
fnstsw
das
repz
xor
add
cmp
pushf
cmps
mov
imul
pop
sti
xor
xlat
or
hlt
rol
and
int3
test
push
outs
dec
and
lahf
fstp
and
or
(bad)
in
clc
test
cmp
shl
add
jo
daa
mov
ret
add
leave
mov
std
ss
lock
push
out
daa
pop
sbb
sbb
out
pop
pop
adc
ret
push
and
fcomi
arpl
mov
pop
cli
ret
mov
add
push
mov
xor
xchg
push
sar
and
dec
sub
loope
cmp
inc
arpl
loop
in
std
cs
pusha
imul
gs
sbb
or
mov
mov
inc
sbb
xor
xchg
dec
jecxz
xor
or
int
mov
call
fstp
ret
and
cdq
adc
sahf
xchg
jmp
xchg
pusha
dec
xchg
push
loop
ret
imul
xor
das
pop
or
cmp
cmp
retf
jle
bound
mov
pop
pop
sar
ficomp
jmp
xor
xlat
xor
(bad)
jle
(bad)
movs
add
jmp
inc
dec
cli
xchg
sar
retf
pop
push
push
mov
loop
mov
neg
or
xchg
cmc
std
gs
mov
dec
dec
mov
bound
push
xor
mov
(bad)
ja
pop
mov
push
adc
add
adc
cld
sub
jae
aam
outs
test
adc
and
sub
repz
cmc
lea
shl
daa
mov
jmp
push
scas
inc
push
retf
inc
and
cmc
sbb
cmp
sub
scas
cs
nop
add
retf
add
out
test
ror
in
(bad)
or
push
adc
sti
int3
push
xchg
jmp
xchg
pop
jno
sub
hlt
adc
cwde
cmp
ret
aaa
lods
test
out
sbb
jle
jmp
fisttp
or
inc
shl
lods
es
jo
rcr
jle
lds
push
lods
push
mov
push
shr
dec
je
ret
pop
adc
xchg
mov
cmps
imul
or
xor
jp
mov
call
mov
cmp
shl
cmp
xchg
scas
cmp
out
ror
loop
cwde
cld
daa
pop
fadd
or
dec
movs
(bad)
rcr
jne
shl
repz
(bad)
adc
cmp
pop
mov
cld
pop
or
xor
cmp
ret
imul
aaa
sbb
pop
shl
adc
pop
jno
jns
jmp
jno
or
das
add
sbb
mov
mov
stc
pop
cmp
jno
adc
xor
ss
xchg
repz
and
(bad)
mov
test
xchg
fucomi
sub
out
sbb
pop
pushf
jb
les
mov
push
lahf
push
pop
in
push
es
fwait
dec
pop
daa
out
shr
sar
xor
call
ja
mov
adc
mov
or
int3
mov
or
sbb
xor
mov
das
jl
sahf
jnp
pop
sub
or
cmp
shl
add
lods
into
xchg
push
xchg
or
loopne
sar
enter
pushf
call
sbb
aaa
(bad)
repnz
adc
movs
pop
addr16
mov
sbb
les
adc
cli
add
scas
dec
cmp
arpl
sti
scas
and
push
out
sub
fbld
add
in
or
ficomp
mov
jecxz
(bad)
push
mov
and
je
inc
mov
mov
bound
jne
pop
and
adc
stos
cmps
push
xor
dec
sub
pop
sub
dec
rol
ret
test
mov
(bad)
xchg
fisttp
push
les
mov
push
cs
adc
mov
pop
mov
in
shl
mov
stos
test
jle
cmp
loopne
mov
adc
fnstsw
(bad)
pop
hlt
pop
mov
xor
jmp
ins
or
push
loope
pop
test
stos
aaa
inc
test
mov
pop
das
dec
push
inc
inc
cmps
popf
xor
jns
mov
icebp
dec
jecxz
sub
cmp
xor
add
sub
ss
inc
repnz
jle
lods
mov
enter
enter
movs
cmp
sub
add
or
test
xchg
pop
xchg
adc
mov
stos
adc
mov
add
or
xor
push
mov
jmp
push
mov
(bad)
sub
jo
pop
pop
pop
xchg
and
xchg
mov
retf
sbb
add
jbe
in
jle
pop
add
and
hlt
mov
ret
and
call
mov
cmp
sbb
out
movs
mov
ins
sar
int3
xchg
aam
sub
jbe
cmp
repz
pop
das
pop
xchg
xchg
sbb
dec
pop
pop
dec
adc
out
mov
push
sub
rcl
int
adc
jnp
mov
jl
iret
mov
mov
xor
shl
mov
out
(bad)
(bad)
in
and
mov
mov
or
sbb
mov
in
retf
daa
cmp
shr
ret
call
or
hlt
dec
adc
enter
cmps
mov
icebp
aas
mov
adc
out
lods
cmp
(bad)
jb
jnp
test
sbb
cmp
adc
addr16
mov
int3
int
je
xor
sub
sbb
test
rcl
adc
or
lods
or
outs
sbb
add
in
imul
jne
xor
sbb
mov
cwde
xor
mov
mov
arpl
std
int
(bad)
stc
int3
in
mov
stos
popf
mov
outs
add
test
aas
jg
popf
aas
dec
sbb
arpl
jne
movs
ins
mov
in
and
into
ret
jg
dec
xor
dec
sbb
inc
shl
lods
or
enter
or
cmp
and
clc
(bad)
pop
das
fdivr
mov
or
jge
inc
xchg
cmp
idiv
fild
scas
xchg
(bad)
xlat
xchg
push
scas
leave
add
adc
inc
ret
test
dec
push
aaa
push
in
ins
jnp
es
cli
pop
pop
out
hlt
or
jns
mov
repnz
push
mov
mov
lea
mov
icebp
mov
mov
fild
mov
retf
pop
es
cmp
or
or
push
ret
(bad)
sub
ds
in
ins
push
push
outs
jl
add
jne
add
(bad)
call
shl
ret
aad
xor
mov
imul
pushf
sti
xsaves
popa
jb
adc
dec
xchg
aad
or
outs
rcl
fwait
sub
xor
pop
mov
jmp
jmp
mul
adc
jns
popf
mov
rcl
daa
pop
xchg
inc
retf
test
inc
dec
mul
(bad)
cli
jle
sbb
or
retf
addr16
call
inc
sahf
lock
(bad)
int
call
gs
or
xchg
mov
inc
pusha
xor
adc
jl
inc
cmp
inc
dec
xor
call
adc
je
cmp
jmp
into
push
or
aad
cmp
mov
inc
add
sbb
ds
cmp
push
daa
pop
sub
lods
xor
xor
maxps
cs
ret
add
mov
call
in
ins
dec
out
cmp
mov
adc
outs
pushf
fidivr
sahf
or
loop
xchg
jbe
mov
sub
lahf
ret
retf
fsubr
mov
mov
jnp
daa
rcr
cdq
inc
adc
xor
shr
in
jmp
add
cmp
je
int
int
ds
xchg
out
sti
int3
mov
test
xchg
retf
fst
and
and
into
clc
(bad)
stc
ror
cs
mov
iret
repnz
test
dec
jle
sbb
loop
mov
std
fsubr
dec
mov
into
xor
imul
add
(bad)
and
cmp
push
sti
fdiv
les
fadd
sbb
xor
add
fyl2xp1
mov
push
ss
mov
mov
adc
jb
jmp
dec
push
adc
jp
mov
cmp
mov
pop
inc
test
repnz
lahf
dec
pop
push
inc
lock
or
jmp
xor
pusha
sub
out
push
popa
cmp
mov
jnp
test
scas
lods
fldcw
sbb
in
ret
retf
mov
aam
and
sahf
sub
mov
ja
or
and
das
mov
pop
dec
push
call
es
bound
jo
mov
nop
pop
out
fld
(bad)
out
pop
bound
bound
push
(bad)
rcr
aad
mov
mov
gs
std
mov
dec
dec
or
mov
mov
pushf
ss
fidivr
push
pop
std
shl
dec
cmp
fwait
in
pop
gs
lahf
imul
jne
rcl
sub
and
jecxz
sbb
mov
or
div
pop
push
push
push
dec
xchg
mov
cmp
push
rcr
sub
adc
sub
jnp
repz
inc
mov
jmp
inc
push
inc
retf
pop
push
sbb
fcomi
xchg
dec
jno
mov
enter
test
jmp
adc
dec
gs
fdivr
cmp
outs
ss
xchg
xor
data16
xlat
mov
imul
sub
mov
push
setns
jge
mov
pop
clc
xchg
push
mov
loopne
iret
dec
inc
push
push
icebp
inc
jge
cmc
add
movs
mov
cmp
ret
mov
popa
mov
push
push
ret
mov
or
xchg
shl
xor
pop
gs
das
dec
pop
jne
sub
lds
(bad)
movd
push
jns
sbb
js
mov
dec
xchg
std
addr16
int
mov
push
test
push
inc
clc
push
cmp
jb
in
test
lahf
jp
inc
inc
pop
mov
xor
cmp
ja
sbb
jne
(bad)
fdivr
pushf
inc
push
xor
pop
dec
jge
ss
outs
popa
lods
inc
pop
cdq
retf
scas
cmp
or
add
xor
pushf
fidiv
xchg
aaa
fdiv
test
inc
cmp
inc
into
call
mov
popa
arpl
sbb
dec
cdq
cmp
push
and
push
ins
sbb
lock
retf
mov
scas
sub
xor
movs
cli
adc
aas
movs
scas
jp
test
push
or
or
sti
and
scas
jecxz
push
push
jno
add
dec
cmps
gs
and
mov
add
test
sub
int
fwait
mov
stos
repz
lds
add
jg
aaa
sbb
outs
icebp
mov
lock
dec
push
jl
ja
leave
xchg
mov
in
movs
test
aaa
mov
mov
pop
iret
jl
out
pushw
push
push
push
mul
rcl
xor
mov
xor
sub
mov
push
jmp
repnz
stos
jne
out
call
jmp
scas
pusha
and
add
ror
ins
cmc
add
push
lods
bound
in
xchg
or
cwde
jmp
repnz
inc
inc
lods
sbb
or
out
lds
into
shl
cmp
adc
sahf
mov
mov
push
stc
sub
add
mov
sub
adc
jns
stc
and
add
imul
jecxz
push
jo
shr
xchg
sub
cmp
out
pop
xchg
shl
xchg
mov
push
sub
jmp
inc
stos
mul
aas
xchg
cmp
or
jge
cs
xor
pop
mov
imul
and
mov
cmps
fld
out
pusha
mov
mov
xor
jge
test
int3
push
es
inc
lods
fild
mov
(bad)
enter
mov
jnp
jnp
jge
mov
xchg
div
test
inc
outs
gs
aam
in
sbb
lds
(bad)
fsub
loopne
sar
adc
fsubr
jle
jns
sbb
and
hlt
out
xchg
jnp
or
(bad)
in
sbb
mov
fmul
xchg
test
lods
mov
mov
dec
imul
adc
int3
mov
idiv
loop
ds
dec
mov
add
adc
xchg
push
sub
dec
sub
ss
int3
or
pusha
sub
stc
jne
scas
inc
pop
loope
lahf
in
pop
sar
ror
das
cmc
mov
movs
mov
pop
or
std
(bad)
xchg
mov
popf
sbb
iret
xchg
in
adc
das
popa
jl
daa
imul
and
fist
into
push
xchg
or
sub
scas
es
xor
sahf
and
sbb
xchg
popf
and
mov
cld
jns
sahf
(bad)
out
jns
es
sar
lea
inc
adc
in
test
dec
movs
cmp
fild
out
loop
das
icebp
xchg
pop
fst
jbe
push
jns
popa
retf
adc
leave
sbb
push
out
jae
loop
sub
push
lds
jbe
nop
jbe
xor
mov
dec
push
daa
repz
mov
jnp
mov
aad
add
mov
xlat
shl
jecxz
outs
cdq
imul
neg
push
lock
aad
push
mov
jnp
xor
or
sbb
call
or
inc
sbb
push
aad
push
push
sbb
sub
push
nop
(bad)
cmp
popa
adc
sub
std
cmp
enter
jnp
lea
int
xchg
jecxz
xlat
cmp
sti
(bad)
push
jno
dec
xchg
clc
xchg
jmp
sub
lea
jmp
test
or
adc
std
mov
sub
test
bound
lds
cld
shr
or
pop
jbe
cli
adc
mov
or
aas
stos
loope
jmp
inc
jmp
sbb
pop
frndint
cli
repz
loopne
mov
mov
inc
mov
dec
jbe
fs
fcmovb
add
mov
jns
jbe
pop
clc
sti
js
fistp
xchg
inc
cmp
fstp
into
(bad)
imul
inc
push
or
nop
addr16
xchg
je
frstpm(287
and
fwait
sub
or
xchg
jb
sbb
icebp
neg
adc
imul
add
je
xchg
inc
sub
sbb
into
mov
xchg
rol
or
xchg
or
(bad)
lods
fucomip
sub
add
mov
push
call
jno
inc
jns
pusha
sbb
mov
cmp
mov
mov
nop
dec
jecxz
and
mov
cmp
call
mov
jle
outs
adc
jecxz
pop
jg
hlt
or
and
xchg
cdq
ins
dec
or
lds
je
xor
pop
push
ja
ds
push
pop
jp
and
xor
xor
sub
sbb
adc
sbb
and
rol
pop
jo
(bad)
and
popa
xor
cmp
sbb
jle
inc
jne
sbb
jno
dec
(bad)
loop
shl
out
(bad)
call
hlt
sbb
cmc
aas
sbb
call
xchg
gs
cmps
js
jge
xchg
call
cs
mov
fmul
(bad)
xchg
or
test
inc
std
mov
loop
sub
mov
test
xor
pop
into
pop
mov
cdq
sahf
movs
mov
neg
mov
retf
mov
xacquire
ror
xor
idiv
addr16
popa
daa
push
ffreep
rcr
xchg
(bad)
rol
je
pop
sub
push
fcmove
pop
cld
mov
mov
repz
or
lods
add
outs
and
(bad)
sbb
push
icebp
cmc
int
or
cwde
jmp
lods
out
and
jge
sbb
out
popa
ret
sbb
dec
pusha
fld
mov
shr
(bad)
mov
std
jnp
rcl
push
pop
and
pushf
cwde
push
jbe
mov
add
fstp
clc
mov
pop
ficom
fwait
cmc
movs
inc
or
enter
aad
cmp
mov
mov
in
adc
cmps
in
fimul
loop
pushf
inc
cmp
push
adc
out
(bad)
xchg
mov
mul
(bad)
mov
aad
or
in
push
jns
adc
aaa
mov
mov
jge
mov
mov
push
bound
cli
nop
hlt
cli
dec
idiv
aas
adc
inc
mov
(bad)
dec
xchg
call
mov
repnz
test
jmp
jb
xchg
mov
and
test
mov
(bad)
es
push
sub
mov
test
mov
or
aam
jl
add
sub
pop
ficom
jle
sbb
xor
add
ins
and
mov
rcl
addr16
movs
dec
pop
xor
aaa
pop
mov
outs
cmp
xchg
mov
push
das
cld
cmps
mov
imul
dec
adc
mov
or
into
add
xchg
xchg
xor
adc
sbb
jnp
gs
in
outs
xor
push
mov
stos
ins
mov
xlat
pop
data16
sbb
dec
mov
sbb
jns
push
mov
mov
push
xchg
nop
pop
xchg
push
cmp
in
push
fst
mov
scas
mov
loopne
and
add
jmp
push
mov
mul
inc
adc
sbb
and
in
call
inc
out
repz
repnz
idiv
push
scas
popf
sbb
cmp
out
sub
pop
or
dec
scas
cmp
mul
stos
jbe
push
es
sar
and
ss
and
jecxz
or
(bad)
nop
js
fdivrp
or
dec
xor
add
mov
jmp
cmps
push
xchg
stos
jmp
retf
mov
cmps
push
dec
mov
loop
xor
shl
rol
sbb
and
dec
xchg
adc
out
mov
dec
ret
pushf
dec
addr16
dec
dec
leave
sub
ret
or
sub
push
inc
sub
sub
dec
les
out
and
int3
adc
jbe
retf
lds
test
pop
jge
stc
out
xor
pop
xchg
xlat
pop
ja
pusha
popf
push
shr
fwait
pop
sub
shl
dec
xor
jne
mov
jmp
adc
cmp
imul
mov
cmp
js
stc
fsub
jo
mov
js
stos
pop
mov
dec
xor
xchg
fild
lahf
adc
dec
inc
mov
(bad)
push
mov
mov
jg
mov
jmp
(bad)
rol
sbb
and
xchg
ret
setno
movs
jle
adc
mov
and
lods
add
push
push
fld
sar
add
jo
call
test
aam
or
(bad)
mov
(bad)
jae
pop
in
fcomp
rol
jp
push
jne
cmp
addr16
xor
inc
ins
pop
pop
outs
int3
les
mov
pop
jb
arpl
hlt
sti
xor
stc
daa
add
xlat
cmp
inc
in
dec
cmps
adc
fst
aaa
xchg
scas
and
in
mov
xchg
cmp
pusha
fbstp
leave
mov
dec
jecxz
outs
retf
push
test
xchg
mov
inc
and
clc
pop
pop
rcr
adc
xor
iret
mov
arpl
lea
sub
dec
lods
sub
out
adc
dec
fcomp
jl
retf
imul
ret
cwde
cli
sahf
adc
(bad)
xor
pushf
dec
inc
rcl
jge
aad
out
cmp
jbe
ins
jmp
pop
stc
mov
sbb
sbb
sbb
and
or
inc
popa
fidivr
rol
and
mov
pop
movs
pop
add
(bad)
jno
pop
imul
or
and
idiv
and
sub
out
sbb
dec
loope
mul
cld
jae
xcrypt-cbc
cmps
push
(bad)
or
(bad)
mov
fcomi
aad
test
jle
inc
pop
or
cmps
jmp
jmp
cmp
daa
mov
inc
inc
inc
popfw
data16
jne
out
test
cld
mov
mov
inc
push
xchg
jo
jge
push
movs
test
mov
add
repz
cwde
les
popa
ret
xor
add
(bad)
aam
mov
std
scas
cwde
xor
cmps
sbb
sbb
pusha
and
mov
mov
xchg
push
mov
pop
and
out
daa
push
stos
xor
xor
xchg
sahf
(bad)
xchg
cdq
cmp
and
test
cli
(bad)
cmp
movs
shl
ins
or
cld
jecxz
push
and
mov
pushf
inc
or
mov
fwait
mov
and
sbb
(bad)
xchg
in
fwait
mov
shl
push
cmc
cmp
inc
retf
icebp
out
dec
dec
inc
ret
and
stos
mov
add
popf
cmp
daa
cmc
jae
dec
push
loopne
ins
imul
jae
inc
in
push
loopne
jp
into
(bad)
mov
jmp
dec
das
je
mov
mov
jl
mov
int3
cmps
or
adc
jmp
(bad)
fs
cwde
dec
jl
cld
fimul
movs
cmc
fiadd
and
repnz
and
xor
inc
mov
lahf
shr
xchg
pop
cmp
fist
int3
sbb
push
sbb
jp
mov
xor
sbb
mov
fwait
sbb
add
frstor
add
in
mov
loope
pop
jmp
xchg
xor
pop
jmp
mov
jecxz
imul
scas
jne
sub
pop
xor
xchg
pop
int
push
inc
fdivr
out
jnp
gs
idiv
cmp
push
call
add
dec
xor
fimul
jae
ins
sub
jg
dec
imul
imul
cmp
hlt
xchg
popa
cli
or
ret
jle
std
mov
push
out
dec
pop
icebp
ins
push
add
fnstsw
jl
dec
jne
in
or
adc
pop
sbb
outs
ins
aad
fbld
out
xchg
ins
sbb
cmp
dec
imul
int3
mov
cmp
bound
mov
push
xchg
mov
inc
cmp
cmp
dec
pop
scas
pop
adc
pop
clc
xor
push
cmp
cld
push
test
into
ss
xchg
test
or
in
call
push
aas
sub
jmp
inc
xor
and
push
xchg
mov
jno
sbb
ret
cwde
push
pusha
push
out
push
call
outs
pop
outs
adc
jle
cmp
xchg
jo
pop
call
and
or
xchg
jae
daa
mov
or
in
push
lock
sub
stos
repz
cmp
or
mov
inc
xchg
dec
sub
dec
push
cmps
push
hlt
inc
pop
and
test
push
(bad)
movs
xchg
daa
fisub
data16
dec
mov
lods
std
adc
add
in
jns
mov
xor
stc
(bad)
or
push
jl
aaa
and
in
pushf
inc
(bad)
(bad)
cmp
inc
inc
pusha
pop
fcomp
out
push
inc
dec
dec
or
cmps
xchg
mov
inc
dec
sbb
add
pop
or
mov
push
add
xor
retf
stc
and
sub
and
adc
mov
lods
je
fist
jns
bound
add
sahf
out
xor
pushf
cmc
or
fnstenv
or
adc
sahf
mov
xchg
fwait
in
addr16
mov
jae
fisub
cli
xor
and
pop
lahf
jbe
mov
xchg
pushf
and
(bad)
pop
adc
jmp
cmps
and
add
js
cmp
push
leave
jle
push
push
inc
ret
jmp
std
push
mov
or
mov
cmp
xor
jecxz
lahf
(bad)
pop
pop
std
mov
into
jmp
inc
popf
or
rol
in
xchg
xchg
test
icebp
pop
fcmove
xlat
mov
jg
add
and
xchg
pop
cmps
dec
cmp
xor
push
pushf
outs
add
inc
xchg
jg
jb
mov
jmp
mov
ja
jbe
push
cs
inc
aaa
or
push
cmp
mov
arpl
fisub
int
jae
jns
jae
das
inc
in
pop
dec
mov
add
jg
aas
leave
add
xchg
sbb
std
jg
out
push
data16
push
aad
and
shl
jg
lock
arpl
outs
scas
cmp
pop
ins
mov
and
jle
pop
movs
imul
lea
sub
(bad)
fmul
xchg
sahf
fstp
mov
pop
jg
push
adc
or
pop
jge
jmp
in
daa
mov
mov
dec
adc
ins
mov
add
mov
jecxz
pop
sbb
icebp
xchg
mov
mov
scas
mov
mov
or
jo
outs
out
lgs
or
leave
push
cmps
sar
jmp
pop
and
cmps
ret
mov
or
ret
ja
or
fcomi
cmp
dec
or
hlt
out
mov
sbb
mov
sbb
movs
jge
int
pop
cli
lock
mov
inc
cmp
mov
cdq
cdq
jne
ja
leave
cmp
in
pop
test
add
pop
lods
pop
xlat
(bad)
or
mov
and
idiv
lods
leave
push
mov
adc
push
(bad)
cmp
movs
xchg
jmp
and
outs
fnstcw
inc
out
mov
scas
lods
or
int
inc
retf
cdq
fidivr
adc
jecxz
ror
mov
mov
mov
repnz
add
pop
cvtps2pd
mov
xchg
inc
and
test
pop
mov
pop
jmp
das
shl
xchg
movs
enter
loopne
test
mul
mov
adc
imul
jnp
push
scas
inc
jmp
mov
jo
sub
pop
mov
or
call
jmp
sbb
mov
cmc
adc
pop
jb
and
ja
sub
xor
out
cwde
jp
cmps
retf
jg
xchg
add
add
out
fbstp
mov
imul
mov
dec
sbb
mov
push
aas
inc
inc
dec
pusha
dec
cld
retf
cmps
imul
aad
sti
fwait
clc
xchg
enter
(bad)
(bad)
and
ss
(bad)
pop
mov
mov
jmp
enter
inc
mov
push
xchg
mov
std
sbb
cwde
sbb
xor
out
fild
outs
jno
add
popf
ret
xchg
adc
cmp
addr16
pop
jg
pusha
test
push
arpl
jo
(bad)
sahf
inc
adc
inc
push
sbb
dec
pop
xor
cmc
lahf
pop
xchg
hlt
push
jne
outs
push
dec
je
pop
xchg
mov
sar
fild
ror
bound
mov
stos
adc
mov
out
mov
mov
jmp
fsubr
cs
pop
mov
jl
lods
mov
sub
fs
xchg
imul
mov
ins
sbb
cmp
ror
adc
push
fimul
add
jl
ret
mov
inc
mov
adc
loopne
test
cli
pop
and
mov
out
rcl
mov
mov
mov
push
mov
aad
jle
fistp
push
ror
fbld
jp
in
fdiv
mov
dec
or
test
in
stc
jo
(bad)
xchg
shl
pop
out
cmp
sub
(bad)
mov
jmp
cmc
adc
inc
pop
sbb
int3
sub
mov
sub
add
inc
stc
push
cwde
cmps
sbb
cwde
mov
mov
test
arpl
jecxz
sbb
les
xchg
gs
mov
(bad)
loopne
sbb
mov
mov
aam
xor
fstp
jns
test
ins
xchg
xchg
inc
pusha
push
or
das
movs
gs
fstp
fst
aas
ss
fwait
mov
std
stc
cmp
das
cli
sub
mov
pop
test
pop
sub
aad
ja
mov
xchg
into
xchg
dec
xchg
imul
mov
popa
sahf
(bad)
inc
stc
imul
pop
adc
mov
scas
or
and
cs
imul
cs
bound
xor
std
lods
in
and
arpl
ja
xor
mov
dec
jns
call
cmps
leave
(bad)
std
les
sbb
aam
xchg
jle
iret
or
ss
or
xchg
jl
retf
inc
test
inc
call
pop
dec
cs
cmp
jns
(bad)
fisttp
test
mov
or
in
loop
jno
ins
cld
cmc
xlat
pop
scas
ja
mov
test
sar
push
push
jmp
lock
push
popf
jo
and
les
pop
pop
adc
icebp
(bad)
lea
sbb
cmps
cmps
mul
fs
mul
mov
sbb
sub
lods
retf
scas
das
gs
push
jb
aas
neg
icebp
std
repnz
sub
call
add
and
dec
jae
mov
dec
pop
bound
and
xor
xor
icebp
pop
outs
jmp
hlt
fbstp
dec
fld
push
add
jno
pop
icebp
gs
push
aaa
aad
mov
or
popf
push
sbb
and
and
xor
movs
sti
dec
jb
mov
xor
sub
gs
xor
mov
mov
call
hlt
xchg
and
mov
push
ret
in
jmp
pop
or
adc
cwde
(bad)
rcr
popa
xor
and
add
daa
int3
mov
in
ret
mov
dec
jnp
mov
inc
push
fcmovu
add
jae
nop
mov
shl
jno
cwde
dec
pushf
pusha
xchg
cmp
aam
cmp
out
jmp
rol
shr
mov
mov
shl
lock
aaa
and
sbb
loope
daa
sbb
fsubr
std
mov
or
js
inc
or
push
stos
xchg
xor
fisub
mov
inc
leave
add
push
jg
mov
movs
ret
out
hlt
int
push
sbb
mov
sub
jae
mov
addr16
pop
mov
xchg
sbb
inc
push
inc
inc
ins
daa
jmp
fbstp
push
inc
pop
(bad)
jg
out
mov
sahf
xchg
not
cmp
xor
test
stos
xchg
xchg
addr16
out
or
xchg
movs
shr
adc
das
cmps
lahf
repnz
sub
and
inc
and
push
call
add
xor
jge
adc
shl
call
mov
jecxz
rcr
iret
dec
test
push
jge
(bad)
ins
(bad)
mov
and
fs
push
addr16
cmp
and
push
lods
mov
ins
aad
fstp
call
fstp
add
call
lods
and
sub
and
(bad)
mov
xchg
mov
inc
adc
cmps
mov
pop
mov
cwde
in
or
mov
sbb
inc
mov
mov
jae
sub
push
inc
cmc
dec
stc
jnp
mov
push
xor
dec
add
xchg
and
mov
push
fidivr
in
and
push
sbb
mov
lods
ret
enter
xor
or
jg
bound
loopne
aad
mov
mov
push
xor
fild
or
in
add
mov
(bad)
sbb
jne
and
jecxz
inc
stc
and
adc
hlt
outs
ror
xchg
add
sub
lods
jle
add
call
jmp
and
cld
das
xor
sbb
xor
push
fisttp
mov
sbb
scas
jne
adc
cwde
pop
int3
out
dec
xlat
scas
arpl
xor
inc
out
aam
into
addr16
push
and
push
(bad)
inc
xchg
jl
mov
and
sub
repz
adc
sbb
rcr
pop
xor
ror
cmp
push
popa
inc
mov
popa
cmc
hlt
lahf
mov
lods
cmps
mov
mov
xor
and
lds
aaa
adc
xchg
sub
adc
fistp
cmp
jle
scas
sub
icebp
mov
or
add
in
pushf
mov
call
jo
xor
(bad)
popf
adc
in
imul
push
dec
inc
cmps
mov
inc
aam
mov
mov
xor
mov
sar
popf
sub
fisttp
repz
fdivr
scas
or
sub
int3
sbb
cmp
or
(bad)
imul
jl
jno
dec
js
(bad)
in
add
mov
retf
movs
fldenv
xchg
mov
shl
jnp
dec
sub
stc
cli
popf
popa
add
mul
in
mov
or
les
lahf
ror
mov
test
inc
sti
and
xlat
movs
xchg
push
cdq
or
ds
push
in
cld
sar
xchg
retf
in
mov
lods
mov
push
call
adc
or
dec
mov
cmp
and
mov
mov
call
pop
add
jl
mov
(bad)
fild
inc
sub
push
or
pop
cmp
(bad)
ss
inc
dec
adc
push
cmp
push
mov
retf
jmp
inc
ret
mov
cmp
in
inc
xchg
jmp
xchg
popa
jmp
out
pextrw
mov
push
add
(bad)
into
mov
push
cmp
ins
xor
pop
add
in
shr
pushf
xor
push
mov
neg
es
mov
xor
popa
inc
jecxz
inc
dec
shl
(bad)
(bad)
out
test
jnp
jg
arpl
cli
jmp
mov
(bad)
dec
lods
out
es
mov
xor
pop
cmp
inc
mov
or
lods
cmp
call
push
ss
popf
lods
fs
mov
imul
arpl
push
mov
cdq
test
pop
ret
test
call
or
sar
pop
push
or
and
mov
jne
(bad)
xor
push
mov
and
add
dec
shl
inc
push
xor
pop
jb
cmc
mov
(bad)
pushf
add
sub
pop
in
inc
jnp
test
jle
jmp
xor
js
std
sar
push
mov
adc
jbe
add
shr
lds
adc
mov
pop
ds
cmp
push
(bad)
xor
dec
push
jo
ds
int
in
sbb
shr
rcl
icebp
dec
es
xor
das
jbe
enter
jmp
imul
pop
pop
int
and
outs
fadd
mov
(bad)
cmc
adc
out
mov
and
xor
in
fwait
jg
ret
pop
add
dec
test
aaa
imul
mov
adc
and
nop
retf
cmc
ss
mov
mov
jae
ins
inc
push
cli
xor
stos
xchg
(bad)
fistp
sbb
cmp
pop
dec
cmp
out
sub
clc
aaa
sub
loopne
adc
bound
jmp
jae
mov
imul
cwde
pop
sbb
sbb
lods
ret
(bad)
fidiv
pop
(bad)
sahf
xor
pop
outs
jno
les
outs
(bad)
loop
jae
loope
sbb
je
imul
dec
cs
sbb
mov
movs
jnp
mov
mov
mov
scas
jno
mov
outs
sbb
nop
cli
mov
repnz
lods
leave
dec
jmp
scas
sub
adc
cs
in
inc
jmp
(bad)
repz
or
shr
inc
fimul
and
call
jmp
jo
(bad)
fwait
ins
out
push
ret
test
sahf
jne
ins
arpl
push
or
and
mov
mov
add
cmp
jns
adc
jne
add
rcr
popa
xchg
xchg
mov
lea
push
sub
jb
fsubr
test
fistp
mov
mov
test
and
pop
mov
cmps
pushf
sbb
mov
arpl
fisub
xchg
jp
or
pop
push
add
sahf
push
dec
jo
outs
call
push
rcl
fcmovb
add
cmps
fimul
mov
push
jmp
mov
xchg
ss
(bad)
scas
jmp
mov
sub
clc
fadd
jae
xlat
xchg
sub
(bad)
push
arpl
jne
push
es
rol
push
outs
cmps
jo
inc
mov
dec
xchg
add
sbb
jp
jnp
or
out
jnp
add
out
pushf
mov
dec
push
jo
stos
das
pop
mov
loope
dec
out
aad
jns
jno
jns
pusha
sbb
sub
and
(bad)
pop
and
imul
sbb
lea
in
fld
inc
dec
xchg
mov
inc
ds
push
shl
in
(bad)
addr16
add
lds
inc
inc
scas
sub
repnz
out
repnz
pop
aam
sar
inc
fcom
sbb
push
pop
movs
gs
sbb
push
pop
ret
ret
jle
aaa
data16
out
xor
mov
or
out
and
loope
imul
movs
loope
popa
cmps
jl
jp
(bad)
mov
retf
pusha
jno
adc
aad
dec
and
jno
pop
xor
popa
(bad)
pushf
lock
dec
sub
cmp
and
cmc
aas
xor
std
repz
cwde
adc
inc
inc
push
inc
(bad)
cld
lds
arpl
cmps
add
fcmovnbe
es
add
mov
add
pop
xor
mov
inc
call
push
sar
movs
jecxz
mov
ss
xlat
fild
pop
into
pop
(bad)
cmp
dec
jo
dec
mov
cmp
sbb
inc
in
xchg
leave
dec
clc
loope
ror
cld
push
call
cmp
pop
cmps
add
push
pop
mov
ret
popa
test
lods
in
pop
popf
and
scas
jbe
push
popf
xor
sti
mov
imul
leave
(bad)
loope
loopne
mov
push
mov
mov
mov
add
cld
imul
lock
test
pop
and
shl
xor
pop
sbb
jg
leave
out
pop
js
loope
adc
sti
cmps
out
les
mov
cmp
mov
sub
sti
addr16
ds
out
sub
cmp
lods
in
pop
std
sbb
sbb
cmp
xchg
sbb
and
add
xchg
cmp
pop
stc
stos
loop
je
adc
iret
movs
sub
mov
fadd
out
mov
leave
loop
clc
repz
push
add
cmps
add
jae
lock
imul
xchg
inc
nop
or
cmps
xor
call
cmp
mov
xchg
sub
xor
movs
into
retf
jg
inc
pop
add
and
mov
repz
push
fild
push
loop
add
jo
jno
int3
mov
pop
add
(bad)
ds
retf
outs
xchg
jle
(bad)
xor
fmul
pop
call
mov
cmps
ret
jmp
aam
std
lods
fsubr
jbe
fscale
jno
jmp
shr
adc
fs
and
mov
sbb
(bad)
lods
adc
mov
inc
push
mov
(bad)
in
lds
jnp
cmps
inc
call
xor
jp
pop
jne
int3
push
cli
int3
or
push
or
mov
pop
xor
adc
inc
mov
dec
push
enter
pop
stos
push
inc
repz
ds
mov
lods
test
mov
jmp
outs
lahf
mov
out
jbe
jo
mov
mov
sbb
cmps
ja
mov
nop
cli
xchg
jae
cmp
mov
xor
imul
dec
adc
and
add
sub
or
and
jae
dec
or
stc
mov
xor
jno
movs
fsubr
jle
inc
daa
outs
dec
movs
pop
pop
out
call
and
stos
arpl
addr16
(bad)
add
sub
ffree
mov
sub
mov
xchg
jbe
es
das
int3
(bad)
xor
loope
pushf
sbb
adc
cld
(bad)
cmc
mov
repnz
push
repz
pop
clc
cld
mov
dec
jbe
mov
push
les
outs
pop
push
(bad)
sbb
scas
ins
(bad)
(bad)
mov
sbb
(bad)
lods
pop
call
loopne
ja
fst
lock
cdq
push
sbb
sti
scas
std
mov
xor
cmp
xchg
add
add
and
fcmovb
movs
and
pop
aad
cdq
call
mov
imul
dec
jae
push
push
xor
pushf
inc
enter
aaa
(bad)
scas
cld
mov
add
imul
mov
ror
mov
es
mov
mov
fwait
and
jg
leave
mov
xor
arpl
and
or
adc
das
add
xor
mov
mov
lods
sub
inc
outs
mov
add
adc
aad
mov
dec
mov
test
fisttp
jae
inc
in
pop
jmp
jecxz
sbb
mov
inc
and
dec
in
cmp
leave
jecxz
in
shr
fwait
pop
jmp
jg
cmps
pop
cwde
sbb
jno
or
fcmovne
(bad)
mov
sub
sbb
sub
fldz
test
sub
(bad)
in
(bad)
mov
pop
into
scas
sahf
add
mov
les
lahf
cwde
cmps
dec
and
xchg
sbb
pusha
mov
jno
jnp
cmp
es
inc
hlt
popf
adc
out
mov
dec
xchg
test
adc
dec
test
mov
mov
sti
aaa
mov
ds
xor
jo
movs
inc
call
pop
stos
scas
jae
outs
cmps
aas
and
and
lds
mov
(bad)
mov
retf
out
aam
sub
jno
xor
ja
pop
(bad)
mov
mov
adc
and
and
ret
clc
mov
lods
push
(bad)
dec
cmp
xchg
pop
sbb
jbe
rcr
cmp
xchg
vpaddq
sub
push
jmp
ja
xor
outs
mov
in
xchg
sub
adc
add
xor
mov
push
adc
mov
ret
sub
pop
and
or
adc
(bad)
sub
mov
mov
adc
mov
mov
or
ds
pop
loopne
sar
mov
push
cs
jmp
or
push
int3
stc
nop
pop
and
dec
xlat
jge
inc
push
mov
bound
inc
adc
shr
fldenv
in
fist
sub
leave
outs
or
cmp
aaa
xor
dec
push
jmp
dec
mov
inc
sbb
loope
inc
ficom
mov
push
add
or
mov
daa
cmps
pop
adc
data16
mov
std
push
cli
daa
cmp
mov
into
inc
dec
xchg
inc
cli
mov
adc
dec
ss
out
mov
push
mov
push
idiv
les
add
fist
in
add
adc
pop
mov
int
(bad)
cli
gs
or
mov
rcl
mov
cwde
adc
mov
(bad)
cmp
push
lods
test
pop
and
lahf
and
dec
inc
ror
out
xor
out
fisub
mov
push
(bad)
jmp
add
and
movs
pop
fisubr
jl
sub
pop
enter
pop
push
outs
adc
jg
movs
add
add
lahf
scas
jno
loope
aam
pushf
lds
repz
sahf
lea
mov
movs
std
add
inc
out
rcl
sbb
aas
fs
xor
aad
(bad)
fbstp
or
shl
lods
mov
cmp
xchg
loope
or
mov
xchg
jp
out
retfw
mul
fsub
test
jb
mov
push
sbb
mov
sbb
sub
or
mov
add
cs
xchg
or
out
ror
sti
xchg
xchg
cmp
and
cmp
shld
gs
mov
dec
enter
es
js
mov
cmp
sub
js
sbb
ror
aad
jecxz
outs
cmps
dec
sbb
mov
lock
das
mov
fsub
jns
or
ins
mov
(bad)
scas
into
mov
mov
or
sub
inc
sbb
in
jno
(bad)
das
xchg
mov
add
stc
aaa
gs
sub
pop
xor
and
mov
loopne
pop
push
ins
stc
pop
jp
mov
loope
test
adc
(bad)
xchg
call
ret
or
jmp
xlat
xchg
push
xor
inc
adc
cmp
sbb
movs
jle
fstp
repz
mov
xor
add
jnp
lock
push
mov
pop
cmp
dec
fmul
mov
dec
cmp
shl
popa
mov
inc
mov
out
mov
aaa
jmp
mov
cwde
ins
ror
dec
jp
das
mov
ffree
nop
mov
push
push
hlt
mov
ja
test
pop
inc
outs
jnp
xchg
or
ds
push
xor
xor
mov
sbb
adc
sbb
imul
adc
test
pop
cmp
test
xchg
into
sub
imul
clc
packuswb
add
loopne
out
sub
inc
xchg
ror
mov
and
fsub
(bad)
mov
push
aam
arpl
repnz
lods
mov
aam
sub
or
out
and
aaa
jmp
je
adc
fidivr
xchg
hlt
mov
std
cli
pop
add
and
xor
inc
sbb
call
sti
inc
pop
xchg
cli
push
call
xchg
pop
mov
push
dec
sar
xor
jno
mov
cmp
scas
fs
pop
cmps
aad
movs
scas
fld
lahf
aad
cs
pop
ins
jmp
add
repz
lea
dec
mov
in
imul
hlt
inc
mov
sub
dec
cwde
or
int
sbb
push
inc
scas
sub
sub
fldenv
ror
hlt
add
imul
dec
inc
(bad)
jno
push
pop
dec
cwde
leave
popf
push
pop
cmp
out
lock
inc
sub
rep
dec
or
out
retf
inc
pop
inc
xlat
cmp
out
mov
fdiv
sub
sti
adc
rol
or
jae
popf
cld
stc
daa
movs
scas
rcr
mov
mov
aaa
test
sub
outs
or
leave
mov
add
xchg
cs
xchg
pop
xlat
cld
inc
clc
cdq
les
movs
pop
sbb
jo
mov
add
scas
mov
sbb
sbb
jns
test
shl
sbb
inc
test
sbb
cmc
mov
jb
adc
lea
inc
inc
out
(bad)
int
loope
push
mov
xchg
mov
mov
add
jb
xlat
jge
jmp
jge
lock
pop
jb
cmp
hlt
mov
xchg
add
shl
pushf
or
dec
fisttp
(bad)
cld
lods
(bad)
xchg
movs
jl
xor
jns
clc
aaa
mov
mov
push
add
popf
das
mov
jp
pop
lods
inc
mov
iret
pop
lds
test
pop
push
push
adc
sbb
imul
and
or
pop
sbb
pop
add
mov
dec
cmp
mov
in
push
ds
push
and
lock
jno
cmp
jl
(bad)
ins
scas
ins
pop
iret
push
call
or
cmp
(bad)
loope
push
push
arpl
adc
jg
inc
jns
mov
and
inc
ins
jecxz
ins
das
pushf
xchg
mov
test
fisubr
adc
sub
out
push
xchg
add
adc
stos
inc
pop
test
js
inc
and
call
fisttp
leave
popf
add
cmp
and
add
mov
dec
mov
push
dec
mul
or
mov
adc
inc
addr16
pop
sub
dec
pop
jl
sub
pop
ror
in
out
xor
inc
rol
mov
(bad)
ins
push
dec
mov
scas
and
movs
in
imul
or
pop
addr16
mov
in
mov
fnstsw
jle
adc
cmp
jmp
addr16
loop
std
mov
sub
inc
mov
mov
fs
cmp
or
stc
sub
ss
ds
xchg
cmc
in
arpl
adc
leave
or
xor
adc
(bad)
out
push
pusha
cmps
int
pop
imul
leave
outs
cvtps2pi
cmp
shl
mov
xor
xor
push
xchg
mov
adc
inc
adc
push
sub
mov
iret
mov
(bad)
push
bound
in
push
lods
jae
inc
dec
pop
mov
and
pop
or
gs
or
fnsave
mov
xlat
mov
sahf
jbe
pushf
jmp
jecxz
ficomp
inc
ja
or
(bad)
in
push
outs
jae
(bad)
xchg
mov
gs
hlt
ss
sub
popa
shr
inc
and
dec
out
xchg
or
sbb
loopne
sbb
cld
xchg
nop
cs
and
clc
cmps
cmps
cmp
xor
test
dec
pop
and
mov
test
mov
mov
(bad)
icebp
xchg
fisttp
mov
and
or
int
movd
repnz
adc
movs
add
mov
xlat
pop
mov
scas
jmp
leave
or
(bad)
and
fsub
inc
mov
aas
xor
ja
out
adc
stos
mov
ins
in
push
xchg
xchg
retf
xchg
cwde
mov
xchg
cld
mov
retf
mov
or
jmp
mov
xchg
add
js
inc
sbb
sbb
ror
lods
test
cmc
adc
out
popa
fucomip
fild
jns
sub
stc
sbb
cmp
int
jno
fldenvw
push
fisttp
sti
jne
out
push
ins
cmc
stos
xor
cmp
sti
mov
loopne
sub
out
int3
push
jg
pop
repz
out
lods
sub
add
rcl
mov
add
je
movs
lds
stos
xlat
push
(bad)
repz
and
lea
rcl
pop
xchg
test
test
xor
sbb
(bad)
rcl
addr16
push
sbb
and
in
fdiv
sub
inc
and
arpl
popf
(bad)
setge
or
and
pop
jb
mov
mov
inc
(bad)
hlt
pushf
jmp
bnd
jle
add
or
stc
out
cmp
adc
into
mov
or
sbb
mov
and
adc
pop
xor
arpl
adc
sbb
cs
sti
popf
aas
or
hlt
mov
fwait
sub
ins
inc
aad
mov
sbb
adc
cmp
(bad)
fld
popw
mov
add
add
jle
fs
test
nop
mov
sti
add
mov
or
xchg
xchg
adc
es
jnp
sub
jp
lea
add
mov
loopne
pusha
add
xor
xor
cmp
or
jb
lds
cmps
ret
pop
aaa
ret
xchg
push
mov
jg
scas
bound
dec
std
jb
lds
pop
stos
out
enter
and
out
(bad)
and
ret
fidiv
mov
into
call
ins
xor
aas
hlt
call
vmread
cmp
repz
sub
and
lods
sbb
mov
popa
adc
in
ror
jmp
shr
mov
aam
ja
mov
in
push
sub
and
mov
dec
(bad)
and
out
ret
cmp
dec
aaa
mov
rcl
neg
mov
xchg
inc
pusha
mov
xchg
push
jl
mov
das
pop
xor
sti
and
xchg
jp
and
add
dec
pop
(bad)
fiadd
xor
and
hlt
shl
cmp
push
xor
xchg
in
adc
pop
aad
mov
mov
mov
mov
test
or
imul
add
jg
jp
jnp
push
dec
pop
and
stc
aad
pop
push
cld
mov
inc
stc
int
scas
in
sub
sub
xlat
fwait
cli
push
xchg
fcomp
cmps
rcl
dec
sti
adc
pop
loopne
mov
cmp
mov
iret
cmp
or
bound
repnz
(bad)
or
cmovb
(bad)
repz
cmp
test
adc
mov
fbstp
cmp
push
adc
and
inc
xchg
outs
(bad)
(bad)
push
sbb
adc
jnp
jo
retf
(bad)
lods
xchg
in
scas
or
adc
jge
adc
arpl
repz
mul
sbb
repz
loopne
call
daa
rol
mov
repnz
and
je
jnp
inc
dec
arpl
or
cmp
stos
jnp
hlt
or
je
lods
mov
xlat
adc
add
mov
popa
(bad)
(bad)
clc
lods
cmp
das
adc
jbe
jle
sub
and
mov
jae
in
retf
inc
cmp
ja
in
push
dec
mov
outs
in
push
aam
inc
push
inc
dec
inc
mov
jg
jmp
pop
push
xor
pop
xchg
inc
repz
pop
cmp
test
sbb
push
ret
or
xchg
pop
ja
cwde
cmp
jne
fldcw
cwde
mov
std
sbb
push
mov
mov
lock
or
or
cs
xor
push
sbb
push
mov
and
jmp
stc
jge
xchg
pslld
call
cmp
push
gs
(bad)
cs
ror
mov
adc
jb
cs
movs
fimul
mov
add
xor
xor
daa
cmp
xchg
jae
loop
daa
jmp
cmc
mov
in
cmp
inc
out
mov
repz
sbb
shr
pop
cmps
bound
cwde
push
pop
inc
movs
mov
push
or
xor
sub
cmp
add
push
pop
mov
and
clc
xchg
and
mov
xchg
add
sahf
int
mov
mov
sahf
sbb
stos
push
mov
sahf
addr16
dec
push
jns
inc
sub
dec
stc
sahf
sbb
mov
pop
(bad)
lock
stos
ret
cmp
pop
jg
inc
xchg
neg
add
push
xlat
idiv
aam
loop
fdivr
scas
cmps
xor
xchg
rcr
mov
es
pop
movs
lods
and
fxch
cld
jae
or
rcr
jno
fnstenv
sbb
mov
xlat
test
mov
popa
xchg
loope
pop
push
dec
mov
repnz
cdq
das
inc
xor
push
and
movq
adc
imul
xchg
ja
cmp
test
into
test
outs
fldenvw
lods
sub
jg
cmp
in
sbb
add
cli
mov
adc
push
and
xchg
stc
sbb
mov
jg
or
add
xchg
mov
cdq
add
test
push
dec
jmp
mov
mov
mov
loope
neg
push
jmp
js
in
pop
add
sub
mov
inc
lods
jnp
xor
sbb
cmps
popf
mov
scas
add
pop
or
push
adc
test
sub
mov
pop
jg
adc
and
data16
inc
inc
mov
mov
pop
push
inc
cdq
bound
jae
cwde
(bad)
div
jae
call
mov
or
xchg
pop
xchg
stc
lods
fdiv
outs
sub
iret
mov
(bad)
and
shl
add
and
adc
movs
in
dec
cli
mov
push
mov
aad
pusha
pushf
sub
push
shr
push
mov
scas
dec
cmp
stos
shl
cli
inc
(bad)
retf
test
hlt
test
or
cmp
bound
repz
dec
arpl
(bad)
in
ins
xlat
addr16
in
sbb
cwde
xor
mov
mul
pop
je
outs
ins
xor
test
jae
mov
je
pop
push
inc
leave
xor
jnp
in
js
xor
push
clc
or
das
and
mov
mov
pusha
and
push
imul
jmp
or
cmps
sub
repnz
rcl
neg
loop
mov
xchg
xor
push
and
jl
adc
(bad)
aam
mov
ret
pop
jg
sub
xlat
xor
dec
adc
jecxz
out
push
iret
inc
in
jecxz
stos
add
jne
pop
imul
fldcw
scas
lods
retf
jmp
pushf
mov
sub
cld
add
in
outs
dec
push
jmp
mov
inc
push
mov
scas
add
push
mov
imul
mov
push
or
aad
retf
cmp
loope
cmps
outs
cmp
(bad)
mov
movs
gs
call
cmp
lods
fild
pop
inc
sbb
mov
mov
dec
fs
lahf
mov
jge
scas
mov
or
mov
push
pop
adc
lods
mov
scas
mov
adc
out
xchg
imul
sbb
test
sbb
shl
outs
out
int3
inc
ds
inc
xor
adc
xor
cld
in
or
sbb
add
dec
fld
cmc
mov
fmul
adc
mov
arpl
inc
or
outs
lods
fsub
loop
and
stos
imul
or
fld
or
rol
jae
pusha
sbb
rcl
push
inc
push
enter
out
retf
sahf
dec
retf
mov
jne
sbb
inc
cmps
ds
hlt
jg
(bad)
rcr
test
addr16
xor
in
(bad)
push
loopne
jno
(bad)
cmp
ins
add
jbe
xchg
or
ins
je
call
mov
xor
and
in
adc
push
and
movs
(bad)
ins
(bad)
mov
mov
dec
jl
cmp
and
neg
fwait
pop
push
call
dec
inc
mov
xchg
sub
mov
pop
cmp
aas
in
repnz
dec
jmp
jg
mov
fs
cmp
aaa
sbb
mov
mov
xor
mov
add
sbb
xor
mov
push
(bad)
repz
arpl
xor
ss
lods
pop
aas
sub
dec
mov
inc
ja
jmp
cs
jg
xchg
outs
(bad)
xor
aam
ins
xlat
sbb
pop
loop
int
ret
jg
out
pop
mov
jno
loopne
shr
pop
pushf
jmp
cmps
xor
jne
mov
inc
sbb
stc
into
in
je
and
dec
das
add
inc
push
fstp
add
mov
cmovp
jmp
push
push
rcl
mov
int
iret
sahf
test
jecxz
jns
and
mov
stos
mov
dec
inc
push
jb
imul
mov
repz
stc
fcomip
push
retf
fs
sbb
xor
test
(bad)
push
clc
mov
jnp
xchg
add
mov
inc
jmp
cmp
scas
xchg
loop
mov
adc
imul
pop
jge
inc
or
cmp
inc
lods
pop
test
or
add
sbb
ja
dec
push
movs
scas
daa
dec
xor
xchg
(bad)
aaa
fisubr
out
movs
aaa
mov
inc
movs
xlat
adc
int
xor
aaa
test
cmps
out
imul
aas
mov
aad
dec
xchg
daa
retf
bnd
std
push
add
leave
sub
out
jmp
dec
push
lock
mov
sbb
mov
xor
cmp
std
mov
jmp
jp
retf
shl
fidivr
fstp
dec
mov
rep
dec
mov
imul
in
cmp
scas
and
retf
xchg
repz
fwait
mov
add
stos
retf
ja
stos
xor
sub
mov
rcl
or
or
cmp
imul
xchg
push
out
push
xor
cmps
or
fist
(bad)
or
sbb
add
lods
inc
mov
jle
pop
push
(bad)
push
scas
clc
add
pop
psrlq
push
mov
ins
add
sbb
(bad)
call
pop
sub
enter
in
rcl
jne
test
fbld
daa
xchg
xchg
clc
mov
cmp
fimul
xchg
repnz
popa
adc
mov
jb
mov
shl
jp
mov
(bad)
pop
inc
cmp
and
(bad)
jno
push
mov
emms
cmp
fld
sbb
mov
int
test
retf
mov
mov
and
pusha
jns
shr
les
jp
xchg
enter
mov
ja
or
test
out
sbb
adc
ret
xor
scas
stos
popf
add
in
into
pop
dec
mov
les
mov
hlt
shr
pop
movs
addr16
cwde
fcmovbe
(bad)
out
xchg
popa
mov
and
ret
ds
pop
push
retf
in
in
jmp
sub
outs
fs
push
les
fs
popf
lods
shl
or
sub
in
pushf
jp
arpl
outs
xor
cmp
inc
scas
ss
outs
push
(bad)
xchg
jge
adc
jecxz
mov
ret
sub
cs
mov
nop
mov
call
dec
lds
mov
jb
div
aad
and
lods
mov
int3
jp
bound
mov
add
out
aaa
enter
jmp
fnstenv
and
and
push
aaa
mov
adc
leave
dec
adc
mov
fisub
jmp
inc
xchg
xlat
pop
inc
or
ins
stc
adc
stos
mov
shl
cmps
add
(bad)
ins
scas
pop
jae
cld
mov
sbb
push
or
popf
shl
cmps
(bad)
xor
adc
outs
mov
pushf
xchg
jp
push
aas
bound
jmp
lds
outs
into
push
xor
cmps
cli
lea
imul
aad
rcl
cs
call
pop
(bad)
(bad)
icebp
nop
pusha
fcom
mov
repnz
out
inc
and
pop
pushf
out
fwait
xchg
or
cmp
rcr
xor
xchg
and
cld
cmp
call
and
scas
cmp
sbb
retf
int3
or
stc
sti
enter
mov
sbb
test
in
and
shl
mov
jnp
pop
idiv
sub
out
out
mov
pop
pop
push
push
pop
mov
xchg
sub
mov
and
(bad)
mov
xor
aad
icebp
cli
call
pop
dec
lods
stos
cdq
push
push
inc
xchg
jo
jb
iret
add
fist
int3
mov
retf
das
add
loop
dec
je
sti
(bad)
loope
cwde
lds
fneni(8087
(bad)
lock
lods
sub
jp
out
xchg
push
stc
in
leave
pop
mov
dec
ret
shr
mov
push
imul
scas
add
or
mov
xchg
sbb
stos
mov
loope
iret
sbb
cmps
mov
gs
lahf
xchg
jp
sbb
loope
inc
addr16
(bad)
mov
fwait
mov
scas
aas
cdq
cmp
aaa
scas
ins
ret
and
scas
adc
stc
jb
sbb
(bad)
fisub
cli
mov
cmp
in
and
faddp
jmp
pop
inc
xor
into
out
out
pop
mov
cmp
and
pop
test
inc
inc
xor
push
jo
xchg
inc
mov
push
nop
out
retf
sub
bound
jg
js
sub
mov
add
stos
sti
push
leave
or
cmp
and
cmps
dec
fisttp
bound
xchg
push
sub
test
jno
cdq
stc
inc
mov
or
sbb
push
sbb
add
or
sub
test
or
push
(bad)
imul
xchg
or
movs
jmp
or
pop
add
pop
test
xchg
std
push
gs
xor
je
jb
push
push
jo
push
cmp
fisttp
jns
mov
or
movs
cmps
cdq
or
rcr
clc
and
and
inc
ss
loope
xchg
ficomp
loope
inc
(bad)
cmp
jmp
imul
adc
xor
fsub
test
pop
push
and
arpl
popf
iret
adc
jno
pop
jae
dec
nop
jg
pop
inc
cmp
and
mov
adc
xchg
gs
cmp
mov
adc
clc
shr
(bad)
lea
sub
sub
dec
fcom
inc
pop
das
dec
push
dec
xor
(bad)
pop
test
ret
push
lahf
mov
lods
jmp
dec
mov
scas
fst
movs
jmp
push
adc
mov
rol
jecxz
call
in
daa
out
addr16
adc
loopne
shl
sbb
imul
rcr
pushf
lods
dec
cmp
movs
dec
adc
jae
jno
pop
in
mov
push
jnp
loope
ret
add
mov
cmp
push
mov
and
repnz
push
push
dec
pop
sub
adc
pop
fcom
add
daa
push
test
pusha
into
jo
out
or
cmps
mov
sahf
rcl
jnp
aas
jg
enter
stc
mov
jg
inc
dec
xor
pop
fwait
in
(bad)
cmp
test
jecxz
in
dec
in
xchg
loop
xor
or
cli
call
pop
aaa
aad
aam
repnz
(bad)
pop
mov
xchg
xchg
pop
aas
dec
out
lea
inc
nop
ret
fwait
xor
outs
or
mov
scas
stos
add
ret
jbe
daa
rcr
xor
(bad)
fidivr
scas
adc
cmp
(bad)
popa
mov
(bad)
jo
mov
rcl
mov
pop
dec
loop
fwait
inc
addr16
scas
int
stos
sub
hlt
pop
lock
sub
sub
ja
ja
xchg
fcomp
call
cmc
push
stos
fsubr
xor
imul
mov
movs
out
nop
xchg
inc
in
xor
push
dec
mov
movs
adc
mov
xchg
dec
jp
lahf
add
shl
xchg
push
sbb
mov
push
sbb
push
xor
in
(bad)
ins
xor
push
lds
(bad)
adc
sti
loop
inc
adc
pop
call
test
xor
jmp
or
outs
mov
jg
jp
jmp
retf
fwait
jae
mov
mov
lods
cmps
dec
daa
jp
pop
lods
push
jg
sub
es
cmp
and
dec
ins
lds
and
or
div
shl
scas
(bad)
add
cmp
lea
not
xor
push
sbb
sar
jnp
bound
aaa
xchg
repnz
call
inc
arpl
add
and
or
int
sar
icebp
rol
fstp
sub
xchg
sub
int
in
xchg
push
arpl
scas
dec
scas
sbb
push
mov
aam
leave
in
or
push
xor
jmp
adc
adc
mov
and
pop
dec
pop
stos
and
dec
dec
jp
aaa
xor
in
cli
pop
pop
ja
out
iret
arpl
push
loop
jmp
dec
and
or
and
adc
retf
fmul
pop
cli
ins
fsubr
dec
(bad)
mov
mov
ror
pop
mov
push
cld
int
sbb
add
loopne
ja
dec
fdivr
mov
sar
lahf
shl
sbb
rcr
js
pop
xor
hlt
push
rcl
fld
mov
push
add
mov
push
add
iret
lock
daa
jp
mov
stc
(bad)
shr
into
fwait
(bad)
jle
mov
mov
lds
dec
mov
xchg
jg
adc
push
(bad)
adc
and
cdq
or
mov
adc
jmp
ins
je
retf
pop
xor
cmp
adc
mov
adc
add
enter
mov
pop
or
fistp
xchg
cmps
xor
cmp
loopne
mov
dec
test
(bad)
mov
push
ja
jmp
add
pop
into
sub
xchg
clc
int3
inc
mov
dec
aas
loop
daa
inc
pop
mov
mov
lods
jno
pop
cmps
jns
mov
ret
enter
(bad)
sub
push
es
xor
add
jmp
push
outs
mov
into
xchg
cmp
dec
add
imul
(bad)
out
sub
outs
out
and
aas
adc
ror
int
aad
ret
js
shl
(bad)
aam
dec
push
push
cmp
cld
push
xchg
mov
and
iret
test
test
jbe
adc
stc
jmp
sub
sbb
out
movs
xor
retf
lock
xchg
cli
dec
loop
into
add
push
stos
ret
cld
repz
in
push
cdq
adc
iret
test
push
mov
ins
ins
fstp
sub
lods
jns
xor
pop
push
inc
jo
call
rol
ss
ret
mov
hlt
mov
sub
add
bound
ja
mov
mov
jmp
pop
adc
dec
pop
es
and
add
iret
mov
sub
push
dec
inc
sbb
and
mov
or
dec
adc
gs
add
jo
or
pop
jl
dec
(bad)
scas
out
mov
add
sar
or
call
ss
jbe
mov
cwde
mov
jp
rcr
dec
and
jb
add
xor
mov
or
xchg
repz
xor
pop
retf
jo
test
mov
ds
std
xor
xchg
sub
xor
jg
aaa
dec
mov
dec
push
add
cmp
jp
in
and
xor
mov
dec
mov
add
and
retf
mov
xor
mov
and
shl
hlt
cmp
push
mov
inc
ja
repz
push
lds
inc
mov
(bad)
into
nop
icebp
stc
pusha
ins
enter
push
scas
jbe
bound
mov
sub
es
mov
gs
mov
pop
in
cmps
lea
mov
test
push
and
ja
pop
dec
push
mov
nop
cdq
push
and
cmp
add
sbb
sbb
and
lods
mov
pop
icebp
pop
fmul
push
sbb
lahf
adc
xchg
test
push
addr16
add
test
call
(bad)
jl
dec
mov
loopne
pop
cwde
sub
cdq
push
cmp
retf
adc
and
sub
ror
mov
fidivr
jnp
(bad)
fisubr
jne
fcomp
xor
dec
rol
push
adc
inc
sub
adc
(bad)
xor
into
mov
mov
out
dec
push
dec
xor
mov
mov
in
add
xchg
ficomp
loop
ror
mov
stos
jg
mov
in
mov
pusha
mov
mov
out
(bad)
sbb
push
pop
mov
jp
pop
call
rcr
xchg
(bad)
mov
sbb
mov
mov
iret
shl
loop
cwde
pusha
mov
or
jg
int3
push
es
aam
pop
xor
adc
lock
stos
gs
add
sbb
imul
mov
lods
sub
imul
adc
xchg
add
ds
sahf
dec
sbb
push
test
push
or
adc
(bad)
fnstcw
mov
jmp
sub
inc
cmp
fsubr
sbb
push
or
(bad)
jmp
cld
int
popa
out
and
in
cmp
jns
cmp
in
pop
(bad)
sar
pop
or
sbb
sbb
push
jno
inc
xor
repz
or
imul
popa
pop
mov
jne
ret
adc
jge
shl
inc
mov
mov
jmp
das
mov
cmp
mov
sar
fcomi
sbb
sub
xor
sbb
push
addr16
ja
in
popf
cmps
lock
leave
jge
sub
enter
daa
test
clc
out
cli
sub
ret
dec
fidiv
cmps
repnz
push
inc
xor
jp
sub
dec
mov
xlat
lods
fldl2t
popf
jo
jne
movs
into
sub
call
in
fldcw
ds
retf
add
lds
pusha
xchg
shr
out
inc
int
or
push
pushf
fwait
test
retf
adc
(bad)
mov
rcr
adc
cmps
mov
mov
adc
sbb
mov
or
dec
dec
shl
inc
lods
xchg
jbe
xchg
test
push
add
in
sbb
cld
movs
loopne
addr16
jnp
xor
add
retf
xor
and
stos
xchg
jno
or
add
dec
push
xchg
pusha
loopne
jo
xor
dec
dec
jo
xlat
neg
cmp
les
je
pop
adc
lods
add
xlat
jnp
mov
test
popf
cmps
push
call
jge
xchg
fstp
jge
es
mov
les
pop
cmp
shufps
jecxz
sub
addr16
loop
push
aas
adc
mov
sar
rol
and
fmul
mul
test
ror
jb
arpl
mov
scas
loopne
jge
xchg
cmp
adc
xlat
sar
xor
repnz
mov
pop
sub
ins
fiadd
mov
mov
mov
inc
mov
mov
adc
test
cmp
add
das
or
retf
or
ins
test
push
ss
cwde
cli
lds
hlt
(bad)
cmp
fmul
and
sbb
bound
inc
xor
xor
jb
pop
push
mov
inc
xor
cwde
inc
push
jp
cli
out
mov
addr16
outs
sub
adc
push
leave
in
push
pusha
loope
lods
call
push
and
mov
or
pushf
xchg
jmp
scas
leave
sbb
adc
adc
sub
test
lock
sti
jno
push
mov
adc
loop
push
pushf
jmp
icebp
pop
in
or
jo
ficom
lds
xchg
loop
add
push
pop
ror
imul
loope
aam
jo
retf
xlat
xor
repnz
gs
xchg
jmp
or
sub
in
mov
jnp
ss
and
xor
int3
adc
in
sbb
ror
mov
pushf
adc
dec
sbb
add
mov
and
cmp
repz
xchg
cli
add
retf
cmps
and
add
rcl
push
jmp
mov
adc
add
inc
dec
loopne
out
rol
inc
or
gs
stos
rcr
push
mov
test
mov
aaa
jg
hlt
cmp
xor
and
xor
pop
movs
shl
xor
out
xchg
imul
mov
popf
out
mov
pop
xchg
in
inc
xchg
jge
jp
mov
hlt
fwait
xor
jle
add
mov
mov
mov
xchg
adc
xchg
pop
mov
imul
mov
movs
xor
sbb
rcr
je
test
pop
cmps
pop
push
nop
or
repnz
jae
inc
cld
dec
outs
nop
dec
mov
mov
repnz
pushf
pop
out
into
fist
ins
or
out
jle
and
mov
adc
pop
mov
fist
mov
pop
push
out
inc
lods
xchg
add
imul
jmp
iret
rcl
and
ins
pusha
pop
dec
cwde
inc
jae
cwde
sub
sbb
xor
sub
lods
fnstsw
xchg
mov
push
add
ret
mov
xchg
arpl
ss
mov
mov
jnp
push
xor
daa
or
xchg
mov
add
ins
pop
rol
cmp
rcr
and
jno
int3
push
aad
xor
cmps
sbb
std
sub
movs
mov
xchg
cmp
sbb
repnz
dec
mul
sbb
inc
cmp
xor
repz
stc
jae
data16
xchg
mov
dec
(bad)
or
adc
add
fidiv
scas
cmps
or
aaa
out
jmp
mov
pop
aaa
xchg
cmp
xor
inc
outs
in
xchg
popa
xchg
jmp
xor
int3
sbb
gs
add
out
std
cmp
xor
daa
cmp
mov
jb
or
daa
movs
lods
(bad)
jle
ja
or
add
shl
mov
lahf
pop
mov
adc
pop
shr
xor
fisttp
or
lds
loope
imul
xor
jecxz
jecxz
bnd
add
jmp
add
push
outs
sbb
cli
add
out
scas
xchg
jno
out
sub
xor
icebp
js
jnp
bound
xchg
js
ins
or
sub
pop
pop
mov
call
repnz
inc
out
sbb
and
add
sub
aad
jg
and
jg
or
cmp
cmps
jne
rcr
addr16
gs
into
dec
push
sub
inc
int3
jo
sub
cld
(bad)
xchg
push
pop
mov
in
icebp
push
leave
ffreep
loopne
fmul
pop
popa
shl
imul
mov
cmp
int3
pop
mov
ins
and
bound
mov
jne
and
pop
int
mov
in
adc
mov
mov
jno
add
push
mov
mov
sub
jmp
popa
xchg
daa
je
push
addr16
fwait
xchg
add
push
and
dec
adc
sti
sub
or
in
iret
adc
(bad)
aad
cmc
imul
cmp
sbb
jb
loopne
or
or
sbb
aas
and
cwde
popa
out
das
inc
daa
fisubr
outs
leave
rol
in
xchg
fwait
push
jb
fs
mov
out
jmp
aas
repnz
inc
xchg
jo
pop
outs
popf
mov
mov
sbb
sbb
lods
inc
outs
pop
pop
pushf
retf
inc
xchg
cmps
dec
shr
xor
pop
scas
in
xchg
or
cmp
lods
mov
hlt
loop
fcom
xchg
lahf
inc
cmp
fld
stc
and
push
pop
hlt
gs
dec
inc
aas
mov
fsubr
inc
mov
mov
pop
mov
pop
lahf
ret
dec
pushf
mov
pop
nop
iret
pop
repz
lock
test
int
dec
rcr
mov
mov
add
in
inc
mov
movs
mov
jg
aaa
adc
mov
stos
addr16
(bad)
push
push
(bad)
and
or
jb
jmp
xchg
and
popf
fisubr
sahf
adc
sub
(bad)
xchg
data16
jns
adc
sub
into
mov
cmp
push
jl
cmc
mov
push
imul
js
popf
sub
loopne
add
inc
pop
jnp
inc
in
jo
ja
jbe
shr
les
mov
sub
scas
pop
sub
(bad)
or
stc
int3
push
xor
mov
cmps
and
imul
jnp
imul
adc
fnstsw
stc
movs
jge
dec
repnz
inc
fucomi
inc
repz
enter
ficomp
fsub
mov
fistp
xchg
fs
cld
push
pop
daa
clc
data16
sub
outs
sub
cmp
fsub
add
adc
dec
push
pop
mov
xor
aad
jbe
jae
inc
cs
stc
add
sbb
mov
scas
scas
adc
jge
int
es
and
push
xor
sbb
mov
bound
ins
popf
retf
(bad)
cmc
jle
bound
out
inc
mov
dec
repz
sub
xchg
pop
dec
clc
xchg
mov
popa
dec
fsub
xchg
lds
sahf
and
clc
and
sub
mov
or
int
mov
cmc
stos
mov
adc
loopne
sbb
iret
xlat
adc
pop
loopne
adc
mov
call
cmp
and
loopne
outs
inc
lods
sahf
rcr
pop
mov
or
sub
mov
pop
pop
xchg
lods
push
mov
xchg
in
push
and
in
in
xchg
add
pop
dec
std
jge
in
scas
jp
jle
aaa
loope
sub
adc
push
int3
outs
jmp
sbb
push
(bad)
retf
(bad)
xchg
pop
lahf
mov
xchg
pop
bound
adc
jle
xchg
dec
cmp
mov
mov
adc
mov
test
jo
dec
inc
outs
(bad)
lods
fwait
inc
jge
test
mov
int3
pop
mov
xor
add
scas
mov
push
add
mov
push
push
outs
test
mov
pushf
lods
pop
xor
mov
xor
xor
mov
loopne
jo
jo
call
mov
adc
mov
mov
push
push
push
sub
movs
mov
test
shr
pop
jmp
adc
outs
ss
cwde
pusha
dec
test
xchg
jo
inc
gs
in
mov
retf
adc
js
mov
ins
hlt
movs
adc
jo
test
fistp
push
ret
mov
cmps
xchg
jmp
cmp
or
add
cli
add
jae
rol
adc
push
retf
aam
jge
sub
clc
lock
ins
dec
imul
sbb
(bad)
jns
inc
test
lea
or
call
pop
in
push
add
push
mov
retf
xchg
cmp
mov
ror
ret
sbb
es
arpl
test
ins
fisttp
in
aad
jmp
cwde
xor
jmp
or
ins
sub
clc
stos
test
sahf
jmp
ja
cmps
test
into
sub
pop
add
and
sub
stos
dec
cmp
push
test
mov
retf
cmps
or
and
repz
loope
stos
dec
scas
nop
jl
jmp
dec
dec
push
fucom
mov
in
mov
jno
push
shl
adc
out
scas
dec
pop
call
dec
adc
or
fwait
mov
aad
jbe
icebp
jp
jcxz
jmp
sub
scas
out
cwde
ins
xlat
push
or
dec
and
pop
leave
shr
daa
xor
retf
nop
bound
(bad)
ins
sbb
xor
pop
mov
mov
sbb
in
in
call
outs
mov
mov
dec
data16
loopne
into
lock
and
mov
cmp
xchg
das
call
imul
fidivr
loopne
mov
cld
(bad)
mov
push
xchg
push
cmp
add
sbb
push
inc
fs
jns
bound
cmp
rcl
dec
gs
movs
lahf
in
dec
daa
rcl
push
stc
pop
pop
mov
or
xchg
fprem
pop
jb
jno
out
fwait
call
xor
stos
nop
aas
xchg
mov
arpl
int
into
or
sbb
bound
xchg
xor
fs
movs
sti
fsub
mov
loope
xchg
add
and
ins
iret
shl
sub
jmp
cmps
nop
xchg
arpl
sbb
xor
lods
add
imul
aas
mov
mov
mov
test
int3
add
xchg
xchg
mov
pop
xor
fldenv
fmulp
dec
and
cmps
fs
(bad)
jg
add
test
jl
xchg
cmp
inc
jmp
and
popf
mov
frstor
cmp
mov
adc
std
inc
adc
bound
push
mov
scas
fwait
stos
lea
ss
scas
rcr
adc
das
fnstcw
mov
arpl
cmp
and
xchg
test
mov
in
cmp
xlat
ret
mov
ud2
fmul
int
sub
(bad)
fld
mov
loope
fdiv
xchg
sbb
dec
(bad)
js
add
jmp
call
mov
inc
add
mov
ja
add
adc
add
jmp
push
sbb
nop
ret
dec
loope
sti
jno
jge
sub
sbb
and
cdq
cmp
inc
cmp
sbb
cld
cmp
sub
lods
adc
mov
mov
fcomp
inc
ds
stos
arpl
imul
repnz
mov
jge
addr16
(bad)
xchg
pop
test
fst
jne
addr16
dec
cld
ret
sti
jecxz
sti
pop
pop
jo
cbw
cmc
jne
pop
outs
out
cmp
inc
mov
adc
test
mov
sbb
(bad)
in
rcr
dec
add
adc
sub
das
or
mov
push
inc
mov
ret
cmp
mov
mov
push
mov
cmps
popf
and
shr
cdq
call
sub
loope
mov
test
in
pop
sbb
je
repnz
xor
fadd
and
lock
outs
xor
dec
mov
inc
or
stos
mov
pop
xor
aad
imul
xchg
sahf
pop
xchg
push
fwait
push
aas
clc
cmp
jge
and
push
mov
pop
test
pop
out
in
xor
lds
pop
or
dec
ss
adc
jb
clc
mov
gs
mov
inc
mov
aam
loop
dec
dec
dec
xchg
xchg
retf
xlat
lea
test
pop
inc
popf
sub
mov
mov
add
mov
sbb
ins
cmp
lods
push
lock
mov
fcmovnbe
inc
(bad)
xor
dec
imul
test
rol
xchg
mov
push
fstp
adc
rcl
or
cmp
loopne
stc
iret
sti
icebp
mov
fsubr
and
inc
inc
and
fmul
add
inc
jecxz
add
jge
sbb
pop
cmps
mov
sbb
mov
out
push
adc
jge
push
xor
push
std
test
rcl
ja
push
jns
push
fdiv
and
adc
lods
shl
sbb
lahf
ss
adc
add
lods
cmc
push
xor
sbb
mov
sbb
xchg
mov
cs
loop
inc
cmc
loop
popf
imul
lea
mov
hlt
jge
hlt
outs
or
fwait
sbb
(bad)
sar
arpl
imul
iret
cld
movs
mov
popf
pop
sub
lea
xor
js
test
pusha
push
xor
loop
scas
or
push
jp
mov
lahf
outs
sub
sbb
shl
pop
movs
inc
jle
xor
mov
sar
push
fld
xchg
mov
push
sbb
push
jmp
movs
sub
jp
rcl
enter
movs
mov
mov
inc
xchg
jno
fidivr
out
mov
jmp
and
lods
in
jno
mov
xchg
xchg
cmp
repnz
push
out
stos
mov
adc
jmp
(bad)
jae
xchg
loope
pop
mov
xor
pusha
sbb
dec
iret
into
jo
xchg
cmc
imul
imul
lods
mov
xchg
push
sub
mov
push
mov
data16
mov
sti
xchg
mov
jb
(bad)
push
retf
push
push
xchg
pop
int3
sbb
out
repnz
into
ss
jle
ins
cmp
ret
and
ret
iret
xchg
mov
shl
mov
or
mov
push
jge
and
ins
xor
adc
pop
sbb
and
lahf
xchg
(bad)
fs
shl
loope
xor
test
mov
dec
mov
lds
cmp
pop
mov
(bad)
mov
inc
mov
adc
je
jb
je
inc
push
sub
sbb
inc
push
aaa
xor
bound
ins
sar
cmp
fwait
(bad)
lods
dec
fwait
jo
repz
icebp
adc
jo
call
mov
(bad)
cmps
inc
out
cwde
mov
outs
(bad)
in
mov
mov
or
inc
nop
sub
add
inc
or
jge
pushf
fcmovu
dec
pop
jne
inc
sar
add
lock
mov
mov
nop
cmp
add
fwait
cmp
dec
popf
out
push
adc
push
js
mov
int3
add
mov
push
push
retf
test
loop
or
fild
sbb
sbb
es
call
imul
mov
outs
mov
mov
mov
in
and
jg
sahf
jge
or
mov
rol
xor
mov
das
jae
xchg
dec
inc
add
cmps
std
daa
pusha
out
pop
scas
xlat
fidivr
xchg
or
adc
adc
aad
ja
retf
add
les
cmp
ret
cdq
cmp
test
inc
ins
test
xor
retf
mov
jle
pop
push
add
xlat
jo
mov
in
mov
loop
into
test
dec
mov
outs
mov
pop
imul
mov
add
pop
push
xchg
jecxz
daa
fyl2xp1
dec
mov
call
ins
idiv
stos
ret
dec
push
movs
jge
add
add
lods
hlt
sahf
ret
out
add
jl
mov
push
jbe
data16
sti
and
push
fidiv
out
aam
dec
sub
stc
mov
mov
(bad)
aad
out
adc
loopne
test
xchg
sbb
adc
jo
test
stos
div
fistp
mov
inc
into
ret
cmp
fsubrp
mov
rol
jae
add
loopne
sbb
icebp
out
mov
out
frstor
dec
aad
movnti
inc
pop
call
in
sub
(bad)
mov
retf
(bad)
sub
push
loop
mov
ret
repnz
into
add
popf
fnstcw
inc
xor
or
mov
rol
inc
inc
mov
cdq
and
mov
leave
loope
cdq
jns
inc
pop
imul
mov
add
mov
cmp
scas
jge
push
imul
cmps
cmp
sbb
fisubr
push
sub
repz
in
sbb
sub
in
fwait
or
add
xchg
or
fcmove
(bad)
test
test
xor
(bad)
xchg
test
outs
mov
cmp
jns
xor
rol
lds
mov
ins
adc
pop
push
jmp
jmp
ret
cmp
daa
aas
out
jnp
xchg
or
mov
add
mov
ss
cmps
push
mov
xchg
(bad)
cmps
lock
idiv
mov
pop
mov
pop
cmp
mov
cmp
cmp
push
ror
mov
lods
call
shl
mov
scas
scas
add
dec
sbb
aas
je
bound
shl
lea
adc
sbb
out
push
stos
xor
fdivr
inc
sbb
fs
lock
cmps
cs
or
call
test
xor
fisub
imul
cli
xchg
mov
daa
jp
inc
jge
pop
mov
cmp
mov
add
xchg
(bad)
js
mov
and
adc
and
repnz
fistp
pop
in
jbe
pusha
or
out
mov
bound
xchg
push
outs
push
es
add
cmp
les
mov
cmp
popa
int
shr
mov
cmp
ins
push
lods
repnz
and
es
adc
aas
jmp
repz
enter
or
(bad)
test
aam
xor
mov
mov
ror
cmc
out
sti
dec
adc
dec
jecxz
int
or
fild
lock
retf
nop
les
xchg
scas
inc
test
ja
stc
in
mov
jno
adc
cwde
add
cmc
fwait
sub
nop
out
dec
and
fild
repnz
mov
xchg
stos
movs
sub
loopne
retf
test
inc
and
cmps
cmp
dec
mov
push
cwde
add
inc
xchg
mov
mov
loopne
adc
mov
sbb
cmps
loope
cmp
pop
js
jecxz
ins
add
dec
rol
xor
mov
int
repz
dec
push
int
iret
push
sub
pop
jnp
pop
add
(bad)
into
jmp
sbb
add
push
push
fsub
cdq
push
retf
cmp
bound
cmp
jnp
cld
pop
inc
mov
dec
dec
jae
leave
and
imul
xchg
xchg
loop
ins
mov
sub
cdq
mov
popf
(bad)
sub
cmps
icebp
ret
loope
inc
(bad)
pop
movsx
(bad)
cmp
shl
stos
ror
add
inc
mov
(bad)
fs
pop
sbb
xor
fdiv
jmp
cmp
icebp
clc
mov
mov
adc
js
xchg
aaa
icebp
pop
aam
ror
jmp
push
mov
jns
push
lahf
ja
dec
dec
jl
xor
call
sub
mov
shl
call
jno
push
popa
sub
fwait
sub
or
add
repz
or
xchg
push
sar
and
fisttp
jae
mov
cmp
clc
sbb
cmp
call
aas
push
push
mov
ficom
movs
xchg
fstsw
retf
inc
jae
push
enter
push
addr16
ret
(bad)
retf
cli
xlat
or
mov
out
add
cmp
sahf
sub
mov
(bad)
sub
test
jns
push
fwait
es
retf
int
mov
sub
sub
rcr
dec
dec
bound
mov
(bad)
push
sbb
inc
leave
jg
stos
icebp
sbb
push
and
cmps
imul
and
add
pop
out
mov
pop
dec
cmp
add
sub
xchg
sub
scas
(bad)
adc
cmc
daa
in
mov
neg
xchg
mov
hlt
outs
pop
xabort
popf
add
fmul
mov
loopne
ins
inc
inc
or
add
xor
repz
ins
call
and
ds
sub
push
loop
fidivr
aas
cwde
sub
push
sbb
arpl
or
or
cs
or
outs
jbe
jl
out
(bad)
imul
push
jbe
lock
adc
outs
push
mov
dec
jge
fdiv
mov
jns
data16
pushf
mov
adc
ins
leave
add
pop
pop
pop
mov
mov
ds
dec
fistp
into
ins
ret
push
xchg
cld
pop
xchg
es
lds
test
push
fld
lods
mov
rcl
imul
aad
adc
test
jmp
popa
sti
loop
add
int3
cwde
jge
fist
lods
rcl
je
adc
mov
(bad)
sbb
cmp
push
test
scas
in
push
sub
inc
and
mov
ins
in
mul
icebp
xchg
add
cmps
mov
cmps
adc
dec
cdq
loop
cwde
push
ret
in
shl
push
cwde
call
fiadd
xor
or
dec
inc
xor
and
clc
xor
add
adc
add
adc
dec
mov
aas
test
cwde
test
imul
aaa
cld
cmps
scas
ret
test
xchg
cmc
pop
dec
sub
lea
mov
and
in
inc
cmp
stos
jmp
jns
pop
das
sub
dec
and
leave
(bad)
je
ins
xchg
push
pusha
das
push
movs
mov
test
pop
imul
pop
push
outs
jl
ret
ror
sub
xor
mov
mov
mov
(bad)
jl
ret
sub
je
shl
jmp
arpl
and
sbb
fdiv
js
and
call
popa
shl
das
or
aas
nop
pushf
out
vmovlps
xlat
das
and
mov
imul
inc
mov
add
outs
sbb
ins
test
cmc
or
adc
jae
mov
jne
pushf
movaps
jmp
outs
repnz
and
es
xor
push
and
inc
loopne
popf
push
hlt
pop
jmp
test
lds
lds
and
dec
loop
xchg
pop
ret
enter
out
cmc
dec
or
aad
mov
jnp
inc
push
jp
dec
lds
adc
cld
sub
mov
push
jl
push
xchg
fmul
gs
das
fimul
mov
add
lock
jecxz
mov
push
adc
test
retf
ja
xchg
cwde
sbb
rol
jns
add
adc
(bad)
das
xor
cmp
rcr
(bad)
cmp
adc
bound
xor
imul
add
ins
(bad)
fld
sub
mov
ds
out
push
(bad)
pop
cmp
or
jle
xchg
or
mov
js
mov
inc
dec
sub
jb
iret
push
pop
sbb
loop
mov
aaa
sub
jo
jns
inc
inc
pop
jge
inc
scas
(bad)
fisub
push
je
xchg
mov
sub
jg
add
loopne
mov
sbb
xchg
int
add
pop
mov
psubw
sar
push
cld
movs
into
cs
dec
or
mov
fucomi
popf
rcl
(bad)
mov
out
mov
cmp
mov
mov
iret
jne
mov
popf
fstp
jmp
aas
add
or
add
test
iret
xchg
inc
cwde
jg
inc
jecxz
dec
inc
dec
mov
mov
int
test
push
sti
ret
hlt
call
std
out
fisubr
fsub
mov
or
xor
retf
(bad)
popa
add
call
jnp
mov
cmc
jns
jne
int
jae
and
(bad)
in
jmp
push
cwde
xchg
bound
dec
psllw
out
pop
mov
in
ret
(bad)
ins
jmp
out
imul
retf
in
test
push
aas
clc
cmp
fcomp
mov
adc
xor
fild
push
cmp
mov
push
mov
rcr
ins
add
mov
push
or
xor
mov
nop
jge
jecxz
scas
lahf
(bad)
mov
push
sub
mov
xor
(bad)
retf
and
xchg
xor
pop
or
das
cdq
call
mov
inc
ds
fxch
clc
xlat
xchg
add
inc
xchg
sbb
xor
mov
addr16
ds
outs
jns
sbb
sbb
mov
push
push
adc
rol
xchg
jmp
and
sar
sbb
es
pushw
mov
pop
iret
jns
pusha
lss
lock
popf
jg
and
popf
stos
dec
aas
cmps
mov
(bad)
mov
ja
iret
jle
dec
xchg
mov
sbb
push
pop
sbb
mov
jmp
fstp
sbb
mov
pop
jle
xor
mov
xor
cld
lock
xchg
cmp
cmps
loope
adc
inc
cdq
adc
clc
inc
sbb
cmps
mov
xor
inc
pop
mov
lea
push
jge
mov
cwde
sbb
jno
rol
jbe
out
mov
ret
in
pop
sub
sbb
adc
mov
iret
je
fs
xor
in
pop
mov
xor
cmc
jo
sub
retf
adc
mov
cmp
test
mov
add
mov
mov
pop
and
lock
push
mov
int
xor
pop
fmul
sub
xchg
fs
cmp
in
xchg
jmp
lds
es
call
or
rcr
lock
xor
jp
arpl
cmc
add
sub
shl
pop
les
cmp
mov
nop
data16
sbb
pop
fild
(bad)
and
rol
push
ss
inc
or
adc
movs
xchg
push
pop
je
inc
les
adc
pop
pop
pop
call
pop
ss
jmp
cmp
xchg
xchg
xor
lea
xchg
fiadd
jg
add
mov
in
mov
rcr
jle
sbb
enter
mov
dec
mov
xchg
jmp
enter
add
cmp
leave
(bad)
out
fisub
inc
outs
cmps
sub
inc
out
and
daa
ds
xchg
outs
and
sub
inc
push
rcl
out
inc
fadd
push
stc
aam
jne
mov
and
jle
and
cmp
mov
jmp
adc
or
out
mov
loop
(bad)
sbb
mov
cmp
scas
mov
jae
out
stc
outs
and
xchg
mov
pop
int
sbb
jg
lahf
xchg
(bad)
push
movd
lock
ins
or
int3
(bad)
sub
ffreep
bound
icebp
add
inc
scas
hlt
scas
prefetcht2
mov
int3
arpl
stc
cmp
cmps
loop
sbb
lods
leave
add
movs
adc
mov
aas
inc
ins
cmp
push
push
sti
stos
dec
or
lahf
mov
repz
push
idiv
mov
xor
ud0
popa
imul
repz
add
adc
pop
movs
xchg
sbb
out
inc
add
mov
ret
xor
out
dec
fnsave
int
sti
imul
jb
dec
jle
jmp
mov
sub
imul
sbb
mov
fistp
test
pop
cmp
push
out
enter
mov
fsub
jg
xlat
rol
dec
ins
rcr
xchg
or
aaa
ins
jecxz
test
test
in
fild
fs
jle
xor
mul
popf
adc
arpl
(bad)
outs
jo
outs
leave
cmp
xchg
dec
leave
and
mov
je
sbb
pop
push
test
mov
adc
jp
enter
mov
mov
mov
xlat
imul
cmp
add
jge
adc
fisubr
mov
or
aas
shr
test
adc
(bad)
sub
aam
or
dec
cmps
retf
jmp
jp
icebp
repz
mov
adc
dec
repz
sbb
bound
cs
scas
sbb
xor
xchg
(bad)
leavew
push
mov
popf
xor
push
cdq
in
add
xor
jbe
xor
push
pop
xadd
ret
or
sub
inc
bound
or
lds
mov
lods
cld
imul
jmp
js
clc
(bad)
push
add
(bad)
adc
aas
mov
push
mov
cmp
ins
jecxz
mov
daa
(bad)
aas
(bad)
fstp
mov
daa
push
xchg
test
jle
mov
loop
inc
dec
cmp
push
stos
or
xor
lds
iret
sub
int
enter
int3
adc
ins
xor
cmp
repz
inc
jmp
sti
cmp
bnd
loop
les
dec
pop
xor
inc
adc
jo
mov
test
mov
cli
sbb
loop
jecxz
inc
mov
out
or
popa
or
je
push
iret
mov
iret
xchg
pop
arpl
in
push
iret
inc
pop
xor
mov
aam
out
mov
out
mov
ret
add
pop
das
dec
cs
cmp
lds
cmp
mov
sbb
or
xor
pop
sbb
pop
js
pop
out
fnsave
cli
inc
pop
adc
test
mov
in
push
mov
in
das
nop
int
pop
push
test
mov
std
aad
fnsave
out
pop
or
add
xor
pop
stos
add
test
inc
cwde
fistp
(bad)
pop
or
sub
pop
adc
mov
push
lods
pop
sbb
jb
mov
lock
mov
stos
addr16
cmp
ret
ins
sbb
sub
xchg
(bad)
nop
adc
cmovns
cli
pop
shr
in
stos
lods
xor
cmp
mov
sub
mov
push
mov
shl
retf
mov
mov
cld
iret
dec
popf
push
push
cli
sub
mov
icebp
add
lea
in
sbb
fstp
adc
ret
fadd
call
outs
in
mov
jnp
fistp
push
pop
cmp
fistp
jl
mov
and
mov
lods
inc
in
ret
sub
fldpi
or
aam
ds
sahf
push
std
xor
mov
cli
jbe
ret
and
test
sbb
in
int
sbb
pushf
test
arpl
movs
data16
bnd
cmps
jne
ins
jp
fwait
jp
enter
sbb
and
cmc
dec
out
fcmovne
add
call
not
adc
dec
xor
sub
pop
shl
and
ja
pop
out
shr
xor
inc
sti
xchg
je
mov
sub
cmps
or
icebp
push
mov
stos
jp
ss
popa
das
dec
xor
dec
shr
push
clc
push
popa
fimul
sub
cmp
and
or
xchg
iret
xchg
loopne
(bad)
inc
cmp
push
pop
popf
stos
add
ja
adc
jmp
bswap
push
pop
sahf
sbb
mov
inc
movs
push
hlt
or
std
xchg
stos
xchg
aaa
pusha
xchg
test
rol
add
shr
loop
adc
mov
arpl
in
dec
sub
add
pop
cmc
dec
pop
add
or
push
xchg
cdq
aam
cli
jecxz
fsubr
imul
inc
aaa
sub
xchg
sbb
test
xchg
les
sahf
les
sbb
mov
mov
xchg
arpl
test
xor
fstp
push
cwde
add
sub
push
fist
xchg
movs
lods
xchg
lods
mov
sbb
ret
add
cmp
push
sbb
gs
(bad)
mov
retw
ficom
pop
xchg
inc
jp
retf
push
xlat
mov
hlt
loop
xchg
jno
outs
xchg
retf
cmps
xchg
sbb
dec
inc
mul
sbb
adc
jmp
mov
or
push
cmp
dec
jno
cwde
imul
das
pop
mov
int3
mov
loopne
js
push
(bad)
xchg
dec
cmc
dec
pop
sbb
ins
adc
or
mov
xchg
dec
add
mov
lea
ins
(bad)
cmp
sbb
hlt
sbb
push
dec
mov
pop
mov
call
std
inc
ret
cmc
ret
imul
inc
je
mov
repz
loope
mov
and
das
shl
mov
push
out
cli
adc
pop
popf
ret
mov
cmps
fwait
dec
and
out
sti
jge
rol
push
(bad)
jle
mov
loope
xchg
hlt
pop
ja
adc
or
jmp
adc
stos
cmp
ss
sbb
fisubr
or
adc
fdiv
adc
(bad)
mov
pusha
xchg
bound
cld
push
repz
sub
mov
or
cmp
and
xchg
push
inc
mov
imul
push
inc
pop
mov
scas
dec
test
ficom
jge
add
test
aas
mov
xchg
xchg
cmp
inc
mov
push
(bad)
mov
ins
mov
mov
mov
imul
stos
rol
hlt
mov
cmc
sbb
pop
cmp
pushf
fsubr
or
jnp
fidivr
cdq
imul
push
adc
jae
xchg
xor
das
push
jmp
cmps
ror
repz
fld
adc
bnd
jle
jecxz
push
js
icebp
and
lods
dec
pop
retf
popf
js
fiadd
or
icebp
pushf
iret
(bad)
int3
cmp
add
cmp
and
in
repnz
nop
loope
fs
mov
sbb
mov
dec
mov
rcr
mov
arpl
nop
lds
retf
sbb
add
mov
enter
std
jle
imul
pop
dec
test
out
and
jns
cli
inc
or
neg
fisub
mov
aas
pop
pop
xchg
retf
arpl
sbb
into
mov
or
add
add
loopne
ret
mov
jno
cdq
add
xchg
adc
fsub
or
cmc
or
inc
fild
or
push
or
adc
test
shr
mov
leave
mov
mov
xchg
xor
add
call
popf
ins
fld
outs
addr16
inc
ds
dec
mov
fst
ja
add
pop
setno
je
adc
jp
xchg
pop
mov
xor
loop
nop
push
adc
pop
ja
shl
popf
fs
out
fiadd
nop
xor
bound
jbe
ror
cmps
mov
push
jbe
lahf
popa
push
jae
sbb
test
test
outs
xor
hlt
mov
aas
jp
ret
mov
push
ror
jnp
sti
sub
xor
add
mov
xchg
sbb
xchg
enter
jmp
adc
test
aad
stc
int3
xchg
(bad)
cli
jmp
inc
sub
or
cwde
jbe
push
and
lock
jbe
popa
pop
xor
or
or
std
test
mov
aas
dec
leave
cmp
(bad)
dec
inc
inc
int
in
pop
push
lahf
cld
rcl
pop
adc
pop
sub
test
pop
pusha
xchg
pusha
in
pop
xchg
iret
fnstsw
add
sbb
mov
xor
mov
add
sub
add
jge
pop
add
sub
inc
cmp
rcr
sub
mov
cmps
clc
popa
push
adc
xchg
mov
aas
es
lock
jno
movs
jge
call
loope
dec
lock
push
pop
add
dec
xchg
mov
jns
mov
push
push
mov
mov
dec
lock
aaa
leave
lea
and
sub
pop
mov
(bad)
mov
push
and
test
sub
call
mov
lods
push
adc
jg
mov
or
push
and
je
pop
mov
ja
ret
or
fwait
mov
pop
pop
sub
add
call
bound
jns
or
mov
xlat
shr
mov
movs
jmp
in
test
mov
and
stos
sub
bound
mov
push
hlt
mov
sahf
test
inc
push
and
icebp
mov
sub
lds
inc
(bad)
mov
dec
mov
mov
ins
mov
fimul
xlat
sar
jae
out
ret
sbb
cmp
dec
scas
les
movs
leave
int
scas
outs
cmp
add
out
(bad)
ror
repnz
neg
jg
fsub
neg
loop
mov
xor
sahf
es
shl
loopne
and
shr
arpl
repz
imul
sbb
aaa
inc
in
sbb
push
add
push
mov
sbb
lods
mov
mov
or
ret
cmps
call
test
loop
push
jnp
call
adc
xchg
stos
cmps
mov
push
dec
cmp
inc
xchg
cld
int3
mov
cmp
movs
ins
xor
daa
xchg
(bad)
cmp
test
repz
adc
add
outs
and
sbb
or
imul
lahf
xor
jecxz
sbb
push
pop
pushf
jp
icebp
xchg
sbb
pop
(bad)
neg
adc
test
dec
lea
inc
adc
sbb
repz
mov
pushf
mov
std
ror
enter
test
scas
jle
add
or
pop
push
and
mov
or
xchg
sahf
(bad)
pop
and
jecxz
imul
sbb
sub
cmps
fisttp
or
rcr
push
jae
mov
clc
adc
push
rcr
or
jecxz
mov
push
dec
sbb
mov
call
lahf
cmp
dec
and
repz
jno
jae
cmps
and
ins
cmp
sub
ins
or
inc
cmps
and
ss
(bad)
sbb
pop
outs
scas
mov
pop
dec
ret
cli
pop
adc
shl
ins
cmp
mov
and
sub
sub
xor
pop
sbb
xchg
pop
fsub
mov
mov
xor
rcr
xchg
pop
adc
xor
mov
shr
in
hlt
xchg
pushf
fisub
in
les
(bad)
(bad)
pop
aaa
add
push
scas
loopne
sbb
nop
repnz
adc
sbb
rcr
cmp
cmps
fcomp
in
add
ss
jle
data16
les
sub
jae
movs
sub
xchg
aaa
dec
inc
mov
inc
nop
out
out
lock
outs
sub
aaa
xchg
mov
aas
cmp
and
fwait
sbb
fild
ret
hlt
mov
or
pop
xchg
xchg
adc
xor
mov
dec
stos
push
add
mov
das
in
add
mov
out
mov
pop
dec
inc
push
pop
xchg
scas
mov
pop
stos
das
outs
sbb
mov
pusha
adc
or
ret
xchg
sub
call
mov
imul
rol
movs
cmc
addr16
scas
fisub
jbe
lea
bound
push
mov
jbe
push
movs
das
jo
lahf
gs
aam
lds
nop
in
add
repz
xchg
das
inc
clc
sar
mov
scas
adc
not
jb
inc
mov
(bad)
pusha
in
ja
addr16
inc
jo
pop
jge
fld
adc
imul
mov
cld
jb
dec
xchg
inc
(bad)
(bad)
popf
or
mov
repz
leave
data16
lds
mov
out
stos
aaa
xor
fistp
or
mov
push
push
outs
popf
stos
scas
fisub
sbb
sub
cwde
std
mov
push
jle
adc
mov
pop
xchg
jl
loopne
dec
test
(bad)
jnp
xlat
or
in
xchg
jns
xor
push
push
fsubr
fadd
es
push
add
cmp
add
mov
sar
ja
push
test
lock
push
cmp
out
xchg
pushf
pop
and
pop
call
pop
sub
xchg
add
xchg
add
jno
push
aam
pop
lods
das
xchg
pusha
popa
sahf
imul
ja
inc
hlt
fst
mov
mov
inc
stc
mov
push
(bad)
scas
mov
retf
retf
enter
cmp
xor
mov
iret
arpl
and
call
jecxz
ret
loop
fdivr
sahf
push
pop
mov
nop
add
dec
cwde
imul
pcmpeqw
adc
(bad)
jmp
arpl
cmp
out
paddsb
inc
inc
call
cmp
lds
ret
js
sahf
outs
aam
(bad)
stos
fdivr
imul
test
mov
popf
xchg
mov
data16
and
mov
pop
or
add
(bad)
sub
or
push
repz
xchg
push
sub
mov
add
cmps
call
xor
dec
add
daa
call
out
(bad)
sub
mov
jne
pop
hlt
add
aas
push
test
ins
mov
fild
test
sbb
jl
adc
xchg
lods
and
popa
test
enter
(bad)
shr
lods
jb
les
shl
xor
sbb
mov
fnstenv
inc
inc
mov
sahf
fist
dec
int
lahf
jl
sub
inc
jb
xchg
mov
ds
cmc
mov
and
pop
in
inc
mov
cdq
mov
lock
in
scas
pop
jg
ins
jmp
mov
xor
xcrypt-cfb
cmps
jecxz
jmp
std
jae
jle
imul
add
xlat
popa
jno
imul
push
push
inc
xor
mov
sahf
push
int
bound
adc
jo
add
sub
xchg
jb
add
aas
icebp
lea
dec
int3
push
aam
lahf
add
loope
aad
jmp
movs
inc
in
add
fwait
dec
jmp
rol
push
sub
ror
xor
lea
cmps
jecxz
lock
jns
loope
add
push
mov
pop
pop
scas
repz
mov
loope
push
xchg
sub
fldenv
movs
call
pop
sub
aaa
out
xor
mov
push
mov
movs
cmp
ds
jns
cmp
adc
sbb
xor
pop
in
xchg
adc
xor
push
jne
jb
mov
sbb
jmp
pop
dec
in
popa
push
xchg
rol
bound
xchg
jecxz
mov
sub
jge
stos
scas
cdq
leave
lahf
adc
popf
fisttp
pushf
fbstp
dec
dec
gs
in
fidiv
loopne
adc
dec
stos
cwde
out
mov
(bad)
repz
(bad)
jg
imul
in
sbb
out
or
test
repnz
loopne
(bad)
clc
jnp
(bad)
cmc
sbb
imul
mov
mov
jo
push
pop
sbb
lods
pop
lods
jne
fadd
(bad)
mov
mov
adc
popf
cmp
je
add
adc
aas
or
and
sub
lock
inc
jnp
jbe
sbb
xchg
xchg
cmp
dec
jb
inc
mov
les
clc
pop
imul
or
inc
pop
js
clc
cwde
scas
pop
loope
cli
(bad)
sub
sahf
xor
fimul
lds
dec
inc
outs
mov
adc
shr
cdq
inc
jb
enter
jg
je
rcr
mov
jl
cmp
jmp
daa
mov
mov
push
js
(bad)
je
ret
fs
sub
cmps
jmp
out
xor
and
and
jecxz
pop
cmp
sahf
les
imul
push
mov
in
loope
mov
pop
xchg
(bad)
mul
cmp
int
jecxz
xor
cmp
dec
cmp
dec
out
mov
scas
test
mov
jecxz
xlat
popa
loope
fcomp
and
jae
mov
lds
mov
inc
pop
mov
les
scas
call
loope
lea
mov
push
jmp
dec
stos
es
clc
not
push
mov
mov
int3
jns
sti
jl
jmp
xor
adc
pop
pop
jmp
aas
mov
ins
and
lods
sbb
shl
inc
clc
adc
call
mov
inc
mov
sub
add
and
retf
into
cmps
je
pop
adc
out
sub
sbb
sbb
(bad)
jmp
sub
and
sub
loopne
loope
fs
pop
xor
fdivr
mov
aaa
sbb
mov
mov
sub
adc
sbb
xchg
lea
inc
dec
mov
dec
cmc
mov
jbe
imul
and
fstp
fwait
ror
sbb
cmp
adc
mov
xchg
mov
packuswb
rcr
dec
add
sahf
mov
je
ret
sub
add
xor
or
xor
xchg
jge
push
pop
rol
sbb
fcom
stc
inc
mov
leave
dec
es
pop
aam
push
(bad)
push
fcom
or
dec
nop
xchg
loop
mov
js
cmp
and
sbb
cmps
jb
out
test
dec
fisubr
adc
shr
imul
mov
mov
xchg
mov
push
fnstsw
sub
loop
mov
and
mov
shl
out
aas
lods
test
xor
mov
inc
pop
inc
mov
and
adc
fist
inc
and
mov
fiadd
mov
addr16
xchg
stos
fldenv
inc
mov
pushf
push
mov
pop
cli
dec
dec
and
xchg
repnz
sbb
pusha
ins
loope
xor
xchg
shl
sbb
mov
cld
sahf
imul
adc
idiv
jecxz
sub
sub
sbb
dec
mov
sub
mov
sbb
mov
sbb
das
fmul
or
mov
jmp
inc
fs
mov
mov
scas
stos
ja
pop
dec
loope
ins
inc
lock
sbb
adc
hlt
sbb
mov
(bad)
out
inc
sub
or
inc
test
mov
pop
jmp
es
jmp
sub
mov
icebp
jbe
xchg
or
sub
inc
xor
pop
or
pusha
(bad)
or
mov
sub
cmp
pop
xchg
add
add
mov
cmp
sahf
loopne
es
jle
fs
mov
fisub
or
test
data16
gs
push
cmp
jmp
push
xor
cmp
retf
movs
in
jecxz
inc
sbb
pop
into
push
add
mov
cld
cli
cdq
lods
inc
and
sub
ret
(bad)
cmps
push
sbb
and
adc
push
ins
cmp
(bad)
mov
movs
(bad)
mov
daa
inc
rcl
xchg
mov
sub
jae
lods
out
add
mov
iret
fadd
ret
ret
test
lea
das
idiv
into
or
in
cdq
xorpd
jae
in
cmp
aam
jmp
adc
jg
test
and
mov
mov
xchg
fwait
shl
xor
sub
movs
jp
nop
or
dec
daa
jp
xor
fldenv
jne
mov
retf
out
or
fimul
mov
sub
mov
outs
sbb
mov
cmps
mov
in
or
cmps
ins
cmps
cmp
int3
pop
enter
adc
scas
add
push
xchg
ins
add
loop
ret
and
push
inc
mov
scas
jle
out
scas
mov
mov
push
(bad)
dec
iret
retf
jb
xchg
push
sbb
xchg
push
cs
push
lods
cs
xor
dec
(bad)
push
fldcw
fnstcw
call
shl
cmp
aam
push
pop
ss
adc
fsub
xchg
sahf
jmp
aaa
stos
cdq
xchg
jno
fwait
sbb
adc
bound
(bad)
call
test
hlt
mov
pop
iret
cmp
mov
and
(bad)
jge
retf
or
mov
aad
sbb
test
mov
mov
sbb
ja
dec
adc
sub
push
(bad)
ficomp
stos
push
bound
pop
ficomp
lods
lods
ja
inc
sbb
push
jbe
nop
adc
mov
stos
and
jo
ret
inc
pop
jae
aas
or
or
sbb
out
sti
cmp
cld
xchg
add
test
pusha
adc
sbb
jge
mov
ins
aad
pop
into
outs
cwde
aad
mov
mov
repnz
loope
(bad)
pop
shr
imul
movs
inc
sar
sbb
mov
(bad)
xchg
lahf
pop
shl
push
mov
dec
pop
call
lock
xchg
add
lods
add
sbb
push
loope
cmp
sub
enter
push
sar
fisubr
dec
out
jno
jl
in
mov
mov
xor
fdivr
sbb
cwde
outs
rol
stc
pop
add
jecxz
arpl
sub
xchg
retf
add
or
cld
popa
jecxz
push
push
popa
cld
div
jg
outs
mov
xchg
ss
loop
inc
gs
push
mov
mov
stos
ret
mov
push
hlt
mov
movs
loopne
js
pop
sbb
add
into
cmps
jecxz
adc
sbb
or
adc
mov
pushf
outs
mov
push
sbb
mov
dec
cwde
push
and
icebp
sub
popa
push
mov
ja
dec
stos
cmc
jbe
mov
int3
mov
inc
daa
test
xor
cmps
fisttp
pop
jns
inc
es
mov
pop
jl
and
shr
fcmovb
call
jge
xlat
xchg
ret
outs
cmp
scas
jns
mov
jne
pop
icebp
ret
sub
mov
ret
dec
pop
stos
mov
gs
clc
and
dec
dec
outs
push
xor
dec
repz
jmp
jbe
mov
inc
add
popf
dec
cli
pop
push
fwait
mov
call
adc
mov
pushf
adc
add
push
mov
push
mov
add
jle
xchg
dec
enter
and
in
push
rol
inc
aaa
imul
xor
xor
xor
shl
stc
je
gs
addr16
sar
int
adc
pop
test
dec
in
dec
enter
leave
sar
popf
aad
fwait
(bad)
rep
lods
test
sbb
outs
sbb
xor
shl
test
xchg
xchg
lds
movs
das
shl
and
ins
ins
jmp
mov
xor
sub
cmp
push
jno
jb
and
scas
jbe
adc
xor
outs
push
fist
int
pop
or
retf
retf
dec
mov
sti
cmp
mov
aas
gs
mov
cmp
inc
xchg
or
xchg
jno
scas
shl
hlt
pop
cmc
inc
imul
adc
pushf
rol
repnz
ficom
dec
imul
sti
sbb
out
in
cld
or
cmp
popf
idiv
dec
or
out
inc
in
movs
das
cmp
xchg
aaa
mov
cmp
and
fs
fiadd
nop
mov
dec
outs
xor
pop
movs
jp
dec
sbb
and
dec
out
out
into
jbe
(bad)
adc
mov
adc
mov
jle
and
jge
mov
lods
sub
lahf
ins
sti
xor
fdivr
mov
inc
mov
mov
adc
mov
push
inc
in
(bad)
add
arpl
inc
ja
lahf
ja
lock
sar
cmps
push
inc
ret
xor
add
xor
sbb
xchg
cs
pop
push
stos
(bad)
and
mov
sbb
jmp
out
rcl
int
pop
mov
imul
cmp
push
add
xchg
and
ss
scas
pop
nop
test
rol
lahf
push
push
xor
call
push
add
test
(bad)
push
pop
jmp
test
or
test
fdiv
cmps
or
adc
pop
add
ret
cwde
jl
adc
mov
repnz
pop
lods
sti
es
cmc
movs
outs
adc
mov
nop
ds
loop
xchg
mov
push
stc
gs
cmp
jmp
es
mov
xchg
cmp
mov
pushf
imul
push
sbb
pop
or
aas
jno
out
leave
clc
fistp
(bad)
pop
ins
xchg
mov
fsub
dec
mov
cmp
rol
pop
les
lock
ds
fnsave
retf
sub
push
adc
inc
loope
dec
and
dec
daa
jle
sub
dec
xchg
mov
jb
mov
std
jnp
xor
lds
xchg
or
ins
sbb
dec
cmp
(bad)
push
test
les
add
pop
(bad)
mov
pop
adc
shl
out
enter
pop
loope
pop
jae
adc
pushf
jne
xchg
into
test
shr
or
push
jo
mov
icebp
xor
or
rcl
ret
pusha
push
adc
bound
push
cmp
push
and
(bad)
mov
aad
inc
xor
ficomp
inc
cmps
enter
outs
cmps
add
ror
imul
repz
push
mov
in
and
movs
sahf
sub
jecxz
sub
jmp
dec
and
xchg
rcl
xchg
in
mov
(bad)
popa
adc
inc
push
and
int
jp
mov
mov
mov
push
cmp
sub
dec
pop
add
popf
or
scas
push
push
mov
jbe
dec
jl
adc
fsub
scas
nop
int3
pop
call
or
rcr
mov
dec
add
push
sbb
pop
shl
int3
cmc
js
xchg
adc
dec
mov
jmp
loop
lds
ss
cmp
jb
test
add
cdq
mov
push
adc
cmp
adc
mov
retf
sar
mov
adc
adc
test
js
mov
or
dec
popa
jl
sar
mov
loopne
xchg
popf
and
out
imul
adc
add
bound
cmps
sbb
ret
dec
enter
mov
(bad)
xchg
xlat
stos
lods
push
push
cld
mov
jecxz
cld
ror
sub
pop
nop
cmp
popa
repnz
sbb
sub
jno
jmp
sub
mov
into
mov
jl
inc
call
adc
lds
test
xor
add
cwde
repz
jns
and
push
or
cmp
mov
mov
inc
ret
mov
sbb
ret
sub
xor
cdq
mov
xchg
mov
cmc
jae
jmp
push
push
sbb
pusha
adc
jns
pop
ds
jp
jnp
adc
mov
pop
div
jno
cmps
retf
mov
shr
xor
adc
out
mov
mov
push
nop
shl
add
bound
push
push
ficomp
movs
daa
push
mov
sub
cmp
ret
inc
ret
adc
xlat
push
and
stos
cld
push
fisttp
cmp
and
and
add
loope
cmp
clc
cmp
add
and
es
cli
lods
xlat
xor
mov
movs
adc
cdq
mov
push
fwait
mov
test
and
xchg
push
les
fldcw
inc
(bad)
cmp
test
xor
retf
bound
mov
bound
mov
add
adc
push
out
outs
(bad)
mov
and
mov
mov
add
in
ror
xor
in
aad
xor
sub
ret
ds
sbb
mov
xchg
mov
sub
cmp
xor
fsub
dec
and
mov
fadd
loope
sub
movs
sub
mov
and
outs
test
loop
int
mov
jecxz
clc
daa
inc
xor
cmp
dec
arpl
jecxz
push
mov
fidiv
ins
mov
mov
inc
mov
int3
inc
shl
or
jmp
mov
xchg
push
mov
jp
inc
push
mov
adc
popf
or
pop
dec
sub
iret
sbb
in
enter
pop
outs
pusha
stc
cmp
and
pop
pop
mov
xor
movs
adc
adc
stos
repnz
fs
data16
inc
fstp
xchg
mov
fisubr
cwde
cmc
cmps
dec
mov
or
mov
lds
mov
push
pop
call
or
rol
(bad)
xchg
mov
add
jge
mov
push
or
and
fsubr
imul
cld
jge
or
adc
push
add
cmp
jl
mov
sub
ret
adc
mov
popa
inc
movs
outs
jge
sbb
outs
fsubr
dec
ret
sub
stc
mov
dec
jl
retf
data16
stos
loop
repnz
dec
outs
sub
cmps
fs
jecxz
sub
add
lock
mov
push
and
and
pop
gs
cmp
cmp
mov
lea
std
bound
xor
mov
ins
(bad)
pop
idiv
daa
push
add
inc
xlat
arpl
sub
sub
mov
add
lea
iret
xor
lods
dec
test
xlat
(bad)
sbb
and
idiv
adc
mov
sub
adc
pop
push
aas
(bad)
fldcw
cli
add
aam
fadd
(bad)
dec
jmp
adc
sub
xchg
cmp
sub
shr
adc
xor
fild
je
cmp
xchg
mov
mov
and
pop
push
scas
xchg
adc
jns
jno
push
mov
sbb
dec
shl
jae
sbb
xor
or
cdq
out
fsub
jmp
adc
sub
inc
out
ret
stos
into
jl
pushf
sti
or
cmp
(bad)
sub
xchg
test
xchg
test
jle
jns
in
ret
retf
sbb
in
js
push
mov
cmp
jg
sbb
jo
xor
ffree
pop
mov
cmc
and
ret
je
bound
(bad)
and
movs
iret
out
movs
inc
jle
fimul
dec
ds
jmp
jle
fadd
sbb
repz
lahf
push
loope
or
test
cs
lahf
js
pop
dec
shr
int
cld
test
idiv
mov
sbb
push
inc
mov
push
dec
shr
cmp
sub
or
(bad)
mov
or
ret
dec
mov
je
mov
popa
and
imul
jg
shl
repz
inc
or
jg
add
out
xchg
mov
inc
movs
mov
mov
ja
cmp
leave
loope
push
xchg
test
mov
inc
retf
add
jbe
test
mov
push
jno
outs
inc
cdq
sub
or
and
(bad)
fldcw
jmp
aam
jmp
sub
sbb
xchg
das
dec
cwde
cmps
lods
ins
jns
outs
adc
mov
inc
mov
nop
mov
mov
push
push
popa
dec
ret
aaa
add
inc
sub
jns
cmp
or
mov
in
jle
mov
and
sti
push
repnz
cli
push
pop
adc
repz
cmp
scas
push
mov
xchg
nop
add
retf
lea
es
rcr
ja
imul
repz
push
popa
aam
es
test
xchg
ja
fistp
dec
cmp
jmp
mov
push
adc
das
cmp
mov
jno
xchg
popf
push
cmp
loopne
mov
inc
rcl
int
inc
nop
aaa
or
jmp
outs
pop
sbb
call
inc
inc
aaa
mov
push
ret
mov
sub
int3
leave
dec
inc
popa
mov
pop
add
sbb
push
in
ss
xchg
fidivr
jo
mov
(bad)
and
mov
jmp
cmp
scas
imul
ja
mov
xchg
dec
out
(bad)
adc
pop
jp
popa
test
or
inc
int
enter
sub
add
daa
loope
test
or
shl
shl
out
xchg
pushf
mov
dec
loopne
stos
inc
mov
adc
dec
pusha
mov
or
fcomp
test
scas
clc
idiv
shr
das
outs
xchg
mov
xchg
and
scas
sbb
and
lea
inc
jle
arpl
data16
add
imul
sbb
jmp
imul
inc
mov
adc
daa
jnp
and
stos
test
imul
call
jge
mov
(bad)
bound
(bad)
inc
cmp
arpl
jae
push
aaa
std
push
jp
icebp
rol
push
jl
test
popa
mov
adc
aad
pop
jb
pop
and
in
fmul
(bad)
out
in
mov
jae
fwait
mov
icebp
cs
xor
loopne
outs
ins
out
lock
in
sahf
enter
in
fbld
aas
and
sar
cdq
popf
aam
jbe
ficomp
xchg
mov
data16
jae
xor
push
pop
fcomp
jle
mov
iret
hlt
adc
mov
mov
jne
hlt
jge
inc
pop
test
fiadd
stc
pop
(bad)
mov
xchg
inc
mov
and
pop
test
out
pop
dec
in
mov
lds
daa
push
pop
fsubr
les
ret
repz
shl
aad
push
inc
in
lock
ds
fnstenv
cmp
mov
inc
or
retf
shl
push
pop
jne
jne
inc
xchg
ret
inc
jae
mov
jae
call
pushf
jb
popa
jns
icebp
call
fwait
repz
mov
mov
(bad)
std
xor
cmp
daa
adc
retf
xor
mov
jg
inc
int3
int3
adc
lea
mov
(bad)
in
jmp
sbb
test
stc
retf
clc
test
xchg
das
inc
dec
stos
popa
ret
ret
push
inc
cmp
popf
mul
cmps
mov
loopne
dec
adc
(bad)
ret
retf
xchg
(bad)
mov
push
fst
or
sbb
ds
test
out
cmp
push
push
data16
(bad)
in
fbld
div
adc
ss
test
lods
movs
in
jmp
scas
add
pop
bound
pop
jo
loopne
icebp
shl
dec
and
sbb
mov
test
aad
call
jmp
or
cmp
or
mov
xchg
xchg
(bad)
lea
mov
and
loopne
push
cmp
inc
add
js
sbb
fidivr
push
cmp
jg
dec
out
jns
rcl
xchg
hlt
push
jl
pop
out
push
xchg
or
or
dec
pusha
pushf
jo
jmp
jge
(bad)
sub
xor
mov
sbb
jl
sub
fsubr
cmp
hlt
fldcw
dec
add
cmp
repz
mov
repnz
jae
dec
in
retf
mov
jecxz
mov
inc
mov
(bad)
fiadd
pop
cwde
in
and
les
(bad)
mov
cmp
push
xlat
push
dec
or
clc
xchg
push
push
mov
pop
cmp
jmp
add
popf
fs
inc
in
mov
inc
out
fucomi
rcl
mov
mov
inc
hlt
add
in
les
mov
call
push
aad
fisttp
inc
fsubr
outs
in
push
and
dec
add
fsubr
mov
mov
mov
cmp
jno
mov
sbb
inc
sub
mov
jo
outs
add
sbb
sbb
fsub
test
or
mov
sbb
xchg
sbb
(bad)
or
mov
xchg
xlat
inc
mul
arpl
mov
add
add
sbb
out
dec
cmp
in
mov
iret
(bad)
cmp
aam
std
cdq
add
aam
xchg
xor
out
xor
cs
cmp
ss
mov
icebp
mov
sbb
xor
xchg
not
cmp
out
retf
adc
jo
sbb
rcr
sbb
inc
fs
test
std
xchg
jb
nop
push
or
adc
sbb
(bad)
or
rcr
cmp
jno
dec
shl
mov
jbe
adc
fwait
retf
ret
ins
imul
mov
xor
xchg
test
xor
lods
jle
frstor
out
cmp
stos
arpl
fistp
pop
loope
(bad)
pop
jmp
stos
stos
sbb
or
jg
cdq
je
or
cmp
cmps
lahf
rol
adc
xor
jl
push
mov
jp
cwde
jl
adc
icebp
jb
les
out
jno
jb
push
stos
dec
clc
js
mov
(bad)
aas
(bad)
movs
jno
jnp
fldenv
ficom
aaa
shr
pop
and
or
xor
mov
push
jo
ins
pop
cwde
popa
or
stos
adc
xor
ss
fld
retf
enter
jne
jnp
in
rol
mov
enter
stos
ficomp
mov
shl
jo
adc
ret
int3
push
int
xlat
test
outs
aas
xor
(bad)
xor
sti
leave
or
dec
cld
mov
aas
xor
daa
pop
leave
cli
jmp
xchg
inc
xor
mul
xchg
test
inc
loope
jae
pop
lahf
std
mov
leave
(bad)
in
pop
and
adc
push
div
and
sti
dec
sub
or
cwde
pop
icebp
add
in
mov
mov
jnp
mov
cmp
jp
mov
mov
shl
dec
jno
xor
bts
bound
jo
ds
imul
inc
sbb
mov
jecxz
mov
mov
xlat
push
into
ja
daa
jae
into
fist
scas
push
or
cmps
fsub
and
scas
or
imul
loop
sbb
dec
gs
fld
out
xlat
sub
dec
sub
inc
or
shr
mov
fstp
push
jnp
xchg
pop
fld
cmp
das
xchg
mov
inc
sti
out
data16
pop
xlat
fs
(bad)
icebp
lds
push
imul
test
or
add
inc
inc
cmc
stc
enter
xor
stos
inc
jae
mov
cwde
movs
add
mov
out
fstp
inc
pop
pop
fmul
inc
jns
test
rcl
cmp
movs
aas
stos
ficomp
jbe
sbb
sub
sbb
push
(bad)
div
jno
addr16
inc
sbb
pushf
test
mov
enter
and
das
fs
sub
sbb
and
retf
stc
sub
jns
je
enter
and
push
sbb
in
out
imul
push
push
shl
fidivr
adc
xchg
jmp
jp
add
or
cmp
in
add
(bad)
cmp
inc
mov
fbld
aam
or
xchg
jmp
fist
mov
cwde
push
mul
xchg
test
js
aam
cmp
pop
dec
xor
loope
test
add
bound
xlat
dec
mov
or
mul
outs
sbb
inc
loopne
mov
lahf
data16
hlt
in
test
enter
adc
push
cmc
adc
iret
xchg
loopne
test
push
xor
jne
mov
stos
xor
xor
add
xchg
int
pop
leave
sbb
push
cmp
cmp
call
and
cmps
sti
jle
mov
push
adc
sub
adc
or
repnz
pusha
shr
sub
ret
mov
mov
add
out
and
pop
jbe
ds
jns
push
sub
xor
les
or
mov
les
mov
cmp
inc
les
add
daa
fiadd
out
push
cwde
fwait
pop
mov
sahf
aaa
mov
jg
mov
sbb
sub
(bad)
and
cdq
inc
jl
popf
push
ds
in
jecxz
ins
xchg
int3
scas
cmp
xchg
push
xchg
pop
jmp
inc
jmp
mov
xor
xor
inc
sub
and
push
or
stc
cli
stc
mov
xchg
push
scas
imul
push
add
outs
adc
dec
jo
ins
sub
xchg
scas
xor
push
jnp
push
movs
mov
pop
xchg
test
push
mov
pop
btc
or
test
inc
and
push
stos
ss
add
out
dec
(bad)
adc
movs
int
scas
pop
div
fadd
or
cmp
outs
cdq
cmp
mov
stos
test
cmp
or
sar
cli
mov
and
hlt
das
in
push
mov
jmp
jg
mov
(bad)
pop
mov
inc
test
jp
add
ins
cmp
mov
mov
sbb
fstp
cmp
imul
les
(bad)
and
test
ss
test
mov
mov
push
rcl
xlat
push
outs
js
loop
jl
das
adc
mov
ret
cmp
out
push
jno
repnz
(bad)
ds
xchg
adc
int
and
add
dec
fwait
repnz
rcl
fs
loope
push
cs
js
mov
sar
xchg
lods
mov
les
xor
push
adc
sti
hlt
outs
(bad)
sar
cmp
inc
cmc
fwait
jl
inc
sub
test
sbb
or
out
fwait
and
movs
dec
leave
sbb
push
push
push
jmp
mov
sub
das
gs
lock
movs
mov
pop
xor
xor
cmp
test
jbe
xchg
push
mov
dec
xor
(bad)
ror
daa
sub
shl
inc
in
jnp
test
mov
imul
jb
sar
imul
pop
sub
xor
xchg
ret
xchg
int3
and
std
sbb
retf
in
jle
imul
movs
add
mov
mov
and
cmp
popa
sti
sbb
push
xor
lds
leave
sub
imul
adc
popf
loop
xor
mov
inc
ins
fwait
sbb
loope
add
aam
sbb
inc
iret
xor
inc
cmps
cmp
dec
scas
jge
sbb
cmp
shr
and
pop
jb
adc
adc
cmp
add
push
xchg
mov
ins
ja
cmp
xor
inc
ror
jle
cld
call
mov
shl
cdq
mov
aam
sub
push
inc
jge
dec
push
jg
mov
nop
je
lea
cdq
stos
sbb
out
jo
repnz
neg
cs
mov
cdq
ss
mov
add
mov
add
pop
int3
aas
xchg
fs
cmc
in
jb
(bad)
int
aas
cmp
in
inc
shl
push
out
(bad)
cld
in
cmps
xor
mov
pcmpeqw
sbb
retf
stos
in
cmp
fist
into
retf
mov
sbb
adc
sub
loope
fwait
cmp
retf
mov
test
jp
rcr
inc
aas
xchg
dec
fwait
call
adc
in
test
pop
ja
pop
scas
inc
dec
add
and
loopne
sar
je
(bad)
mov
js
bswap
and
retf
js
jno
test
test
mov
(bad)
fcom
mov
lahf
ds
mov
ds
out
or
sub
lahf
sbb
cmps
mov
ja
or
mov
cld
sub
mov
and
xchg
jmp
out
adc
call
(bad)
bound
lock
cs
fistp
sub
cwde
js
adc
dec
bound
fst
outs
scas
add
jmp
frstor
sbb
or
xor
(bad)
stos
jmp
repz
mov
and
jo
sub
pop
cmc
clc
xlat
stos
push
mov
push
sbb
mov
pushf
jge
ds
pop
rcr
imul
push
(bad)
cmp
sbb
push
cmp
jo
mov
push
fucomi
je
push
into
and
std
(bad)
mov
(bad)
out
into
ins
mov
popa
dec
fdiv
lea
fld
mov
sbb
dec
jmp
jno
mov
jns
pop
imul
ds
test
mov
cld
add
mov
mov
jmp
push
and
ja
shr
mov
mov
bound
and
xchg
scas
cmp
or
push
sbb
gs
xor
xrelease
adc
and
sbb
lods
push
(bad)
pop
js
xor
mov
jle
arpl
in
inc
mov
mov
pusha
jp
lock
jp
repnz
cmp
jns
popf
jecxz
lods
sti
cmp
call
ret
test
jo
mov
sub
jo
out
ins
push
jbe
cli
pusha
add
sub
iret
xor
mov
out
out
jecxz
call
cdq
pop
data16
cdq
sub
xchg
jns
jl
pop
fwait
or
movs
dec
mov
addr16
jp
bound
lock
fnstcw
and
dec
jne
adc
mov
dec
xchg
xor
test
mov
out
push
jo
mov
mov
js
movs
retf
fcom
xor
imul
dec
mov
out
clc
mov
cmp
mov
fmul
cmovl
fild
shr
pushf
lods
xor
sbb
pop
jecxz
mov
or
push
inc
(bad)
mov
pop
lock
(bad)
sti
clc
jnp
xlat
sub
xchg
(bad)
cmp
add
arpl
jbe
or
fist
sbb
sub
mov
js
imul
push
out
add
in
xor
fistp
rcr
in
fmul
sbb
test
ror
xor
pop
sub
int3
or
gs
cdq
rcr
xor
inc
jmp
xchg
retf
jbe
pop
xchg
jge
mov
adc
test
ret
xchg
dec
push
sub
fcomp
mov
(bad)
cmp
imul
(bad)
stc
icebp
cmps
das
jne
popf
mov
mov
sub
adc
pop
clc
pop
xchg
adc
mov
stc
repz
xchg
loopne
mov
cdq
sbb
adc
xor
cmp
aaa
ss
or
ja
fidivr
jbe
lock
sub
and
and
mov
pop
mov
js
xor
mov
cmp
jo
je
out
push
pushf
jmp
push
fcmovnbe
ss
pop
fimul
adc
push
xchg
inc
ret
cmp
mov
cmp
sbb
mov
mov
gs
cwde
rcr
rol
dec
clc
pop
stos
les
outs
pop
fst
movs
cmp
call
jb
scas
xor
push
movs
dec
and
push
sub
cmp
sar
jl
mov
sub
pop
xor
arpl
adc
repz
fild
add
pusha
scas
lock
int
or
ins
add
mov
inc
and
mov
(bad)
stos
lds
inc
js
loopne
jae
sahf
fadd
cs
sub
jns
pop
push
adc
mov
aad
out
xchg
sbb
dec
fcomp
push
dec
es
push
test
fisub
mov
pop
mov
sub
xor
xor
lahf
dec
xchg
div
mov
pusha
arpl
in
push
add
movs
daa
test
and
sbb
push
scas
cmp
loopne
and
test
dec
mov
repz
add
mov
repnz
dec
xchg
cli
ja
lock
mov
cwde
push
(bad)
lods
out
inc
sbb
jbe
iret
sub
sub
mov
dec
sub
xor
sbb
jmp
mov
sub
stos
je
movs
clc
shl
call
cdq
mov
repnz
xchg
mov
inc
jp
push
stos
jge
add
shr
xor
jmp
mov
movs
fldcw
retf
aad
lds
cmc
sub
jmp
fdiv
scas
push
loop
bound
scas
jns
inc
push
mov
xor
adc
push
pop
jl
cli
adc
sub
adc
shl
lock
mov
loopne
in
jmp
pop
int3
push
pop
add
push
or
add
jne
addr16
dec
aaa
pop
not
psrlw
push
mov
sub
sub
push
cwde
arpl
pop
loop
xchg
lea
adc
ins
and
mov
sub
mov
add
mov
xchg
out
inc
xor
jb
or
mov
iret
sahf
fdivr
xchg
enter
fstp
jg
pop
rcr
dec
and
js
adc
push
jge
popf
xchg
cmps
xor
test
pop
ds
repz
jns
mov
das
sub
mov
sbb
and
jge
jge
push
mov
popf
movs
iret
cld
dec
and
sbb
jnp
ret
fwait
sub
retf
dec
test
mov
clc
push
std
ret
jo
jmp
or
jae
in
cmp
mov
push
adc
(bad)
mov
or
hlt
idiv
sbb
cmps
jnp
fstp
inc
jb
int
in
cmp
jmp
mov
sub
sbb
int3
and
xor
pop
sbb
ror
mov
sbb
pop
sub
pop
mov
dec
sub
push
je
(bad)
(bad)
fbld
mov
inc
jne
aam
jo
pop
sub
data16
mov
shr
faddp
mov
in
push
inc
cli
inc
je
xlat
aam
mov
inc
dec
jmp
inc
fidivr
repnz
js
jo
jmp
jne
and
sub
mov
ins
cmc
in
add
cmc
xor
inc
jno
fdivr
pop
mov
lods
test
fwait
call
je
or
pop
dec
inc
and
lods
sub
and
call
(bad)
mov
rol
xchg
movs
popa
add
sub
xor
pushf
sbb
sub
adc
dec
dec
mov
mov
cmp
mov
stos
enter
cdq
cmp
leave
dec
xor
jecxz
cmps
cmp
imul
data16
out
pop
mov
dec
daa
(bad)
std
push
cmovne
cdq
das
jnp
xchg
call
and
ret
iret
xor
dec
pop
in
dec
fst
fbstp
retf
fs
mov
xor
mov
gs
ins
loop
loopne
fsub
lock
rcr
out
nop
das
mov
mov
ins
sub
stos
fsub
sub
pop
lea
enter
xchg
lods
cmp
lods
cld
(bad)
cdq
add
mov
push
xchg
add
inc
out
pop
test
pop
mov
sbb
push
inc
out
cdq
sub
pushf
jae
push
pop
lock
push
ret
fild
adc
test
push
push
mov
xchg
sub
sbb
sub
les
jecxz
shl
mov
(bad)
(bad)
sbb
jg
and
dec
dec
gs
cmp
in
imul
in
dec
lds
pop
sub
ret
cmp
push
scas
movs
les
aaa
inc
inc
xlat
mov
enter
je
pusha
scas
adc
jmp
cmp
add
cmps
pop
shl
in
adc
ja
push
xchg
push
xor
or
inc
inc
sub
es
xchg
xor
or
cmp
out
mov
call
cli
test
mov
shr
inc
adc
jp
outs
das
mov
push
push
lods
imul
and
test
repz
dec
mov
xchg
sub
jmp
je
fistp
push
jnp
push
ffree
jl
dec
mov
mov
sub
ds
mov
cmps
pop
pop
push
inc
xchg
fucomp
mov
xchg
dec
addr16
enter
jno
push
push
pop
clc
pushf
dec
lahf
sbb
and
xchg
mov
addr16
pop
out
imul
ret
inc
(bad)
fidivr
or
sub
jo
das
mov
rcr
and
bound
push
and
ja
pop
cwde
(bad)
inc
lea
ja
loop
aam
xchg
mov
repnz
sub
xchg
sbb
jle
ins
cli
movs
(bad)
and
mov
push
mov
adc
sub
cmp
jb
sub
sbb
repnz
scas
loop
js
push
push
and
std
ds
sub
push
fidiv
iret
push
jns
in
in
les
scas
iret
ins
mov
cmp
pop
or
shl
mov
mov
jle
in
je
lock
jnp
pushf
pusha
enter
mov
push
fmul
or
mov
mov
sbb
sub
jge
or
pusha
movs
in
mov
aas
jb
xor
(bad)
in
inc
push
cli
jge
nop
pop
pusha
icebp
xchg
stos
pop
and
test
js
and
or
cmp
cmps
push
ror
add
ins
(bad)
and
xor
inc
fsubr
inc
inc
xor
push
(bad)
movs
icebp
rol
dec
xchg
mov
push
inc
int3
pop
out
mov
add
mov
enter
and
add
sbb
jae
(bad)
add
xchg
sub
xchg
xchg
clc
cmp
add
add
dec
jp
xor
cmc
sub
adc
and
add
sbb
pop
cmp
and
adc
or
inc
mov
mov
int3
sar
lods
out
push
mov
nop
(bad)
test
cmps
and
xor
inc
mov
xchg
push
inc
push
js
xchg
add
in
aam
and
rol
js
xchg
dec
mov
push
scas
xchg
pop
sub
jo
xlat
xor
outs
dec
jmp
shr
retf
fadd
shr
xchg
mul
xchg
dec
div
sub
popf
mov
xchg
bound
out
dec
dec
popf
ret
jg
nop
pop
mov
mov
je
int
mov
shl
mov
mov
push
sub
mov
mov
test
test
mov
pusha
pop
push
push
pop
rol
cmp
jg
mov
iret
inc
aaa
xchg
dec
mov
cmp
and
loopne
push
shl
mov
js
sbb
xchg
dec
dec
jmp
sbb
aaa
leave
mov
imul
lods
loopne
icebp
inc
sbb
mov
and
xor
xor
cwde
outs
mov
sahf
and
sbb
imul
xor
add
(bad)
mov
rol
jns
into
fnstsw
push
stos
in
data16
push
adc
jae
aaa
test
push
push
push
rol
pushf
out
dec
and
jp
in
mov
aad
(bad)
ins
add
add
jmp
dec
push
inc
movs
lea
aas
sub
pushw
in
pop
movs
dec
lods
mov
popf
scas
in
inc
ds
retf
int3
imul
test
ficom
xchg
loope
ds
dec
or
(bad)
adc
ret
xor
jp
mov
or
mul
imul
push
retf
(bad)
pop
dec
bound
add
and
popa
jno
cmp
fdiv
movs
ins
cmp
mov
mov
stos
clc
fs
push
adc
xor
icebp
cmp
mov
movs
jge
pushf
jae
push
popf
mov
jge
push
mov
fcmovnbe
mov
out
out
movs
int
add
jge
in
sbb
xchg
adc
lds
sbb
int3
scas
mov
push
ja
xchg
outs
add
or
popa
rcr
sbb
mov
fmul
jb
mov
xor
fnsave
dec
dec
jge
jo
into
loop
call
adc
sub
mov
push
jae
fstp
sar
pusha
rcl
jle
jb
jae
sahf
mov
cmps
xchg
mov
jle
(bad)
scas
ror
cli
and
(bad)
in
imul
jle
jno
ss
fwait
ja
pop
ja
and
fiadd
inc
add
std
icebp
or
adc
in
iret
repz
aam
pop
add
mov
inc
sub
fmul
mov
ja
or
ins
xor
sbb
dec
inc
mov
or
lahf
and
repnz
cwde
mov
(bad)
jle
loop
mov
mov
fsubp
mov
lods
jmp
pop
push
add
or
iret
mov
les
aas
sar
aas
add
add
xor
call
pop
iret
xor
jo
jnp
xchg
add
cld
aam
or
mov
inc
push
cmp
std
out
cmp
mov
inc
cmp
das
push
ins
or
and
js
mov
aam
xor
arpl
cmp
test
jge
cmp
pop
jno
ins
out
outs
sti
or
jne
arpl
or
mov
repz
(bad)
loopne
dec
push
test
(bad)
movs
mov
dec
cmps
ins
js
shl
fadd
bndstx
xor
int3
push
xor
rol
in
fmul
push
push
jne
fild
lds
dec
ret
dec
mov
les
sar
ror
loopne
cdq
xor
cmps
push
mov
js
(bad)
ins
push
push
and
pop
mov
mov
inc
xchg
cmp
sub
es
adc
retf
stos
mov
popf
es
jmp
or
mov
pop
aam
ds
mov
cs
sub
and
gs
call
cwde
sub
mov
int3
stc
sub
psllq
add
mov
dec
fdiv
outs
inc
scas
sbb
sbb
stos
pop
xchg
push
mov
add
inc
dec
ds
arpl
ret
mov
cmc
ins
sbb
lahf
pop
(bad)
inc
pop
or
xchg
and
lahf
outs
ins
pop
inc
jge
idiv
retf
push
out
pop
test
test
cli
cmp
or
mov
push
ss
mov
jae
sub
ss
mov
cs
jmp
ins
cmps
movs
or
arpl
jp
mov
add
sbb
loope
jbe
jecxz
adc
popa
push
fwait
sub
retf
cmp
inc
add
aad
sub
add
jecxz
(bad)
out
shl
jmp
mov
dec
add
or
mov
dec
pop
into
fisttp
sub
outs
mov
stos
lock
stc
mov
cmps
fmul
dec
nop
popa
int3
pop
ss
imul
xor
clc
jl
sub
ja
inc
push
movs
pop
lods
mov
jbe
lds
retf
retf
push
js
mov
dec
xchg
fimul
pop
cmovge
lods
sbb
aas
jae
push
jmp
or
fs
call
sub
xchg
lea
lahf
mov
push
push
lea
cwde
or
add
aaa
inc
adc
or
xchg
sbb
lock
repnz
xlat
mov
xor
cwde
loope
push
pop
out
inc
or
mov
and
mov
mov
push
in
inc
nop
adc
daa
mov
xchg
out
movs
jl
mov
mov
rol
inc
pushf
dec
sub
dec
not
gs
mov
add
sbb
push
jo
dec
cmp
cmp
movs
mov
loop
jecxz
xor
sub
mov
dec
sti
into
jae
xchg
popa
movs
adc
mov
mov
(bad)
mov
jp
xchg
inc
xor
retf
inc
dec
jmp
ja
mov
fiadd
mov
inc
xchg
cmc
pop
retf
adc
js
and
out
dec
inc
clc
imul
std
and
sbb
push
pop
fcmovnu
jl
pop
mov
mov
std
stos
scas
xchg
mov
das
cmp
xor
mov
xchg
ds
lahf
jns
adc
pop
imul
xchg
pop
cmp
mov
mov
pop
mov
sub
jnp
cmps
mov
inc
daa
gs
out
dec
add
jl
inc
adc
shr
lods
mov
cmp
test
lods
fdiv
push
rol
bound
popf
out
je
mov
mov
or
dec
fcmovnb
sbb
pop
sub
movs
dec
int
(bad)
out
loop
lds
mov
mov
and
test
cmps
and
retf
jmp
jne
inc
aaa
xor
stos
in
pop
add
sub
pop
dec
inc
cdq
dec
nop
mov
imul
out
mov
push
aas
xchg
aam
add
and
mov
ret
stc
imul
imul
cmps
push
adc
xor
outs
and
outs
mov
pusha
mov
adc
clc
push
pop
jecxz
dec
pop
push
inc
mov
in
xor
mov
fidiv
adc
loope
lods
or
or
dec
bound
and
lock
and
add
in
or
xor
cmp
dec
jg
push
push
mov
aam
lock
es
xchg
into
cmp
mov
daa
mov
mov
scas
je
test
push
or
rcl
push
into
in
dec
sbb
ja
dec
arpl
sub
inc
pop
pusha
xor
dec
jbe
pop
cmps
mov
gs
mov
or
cmc
dec
inc
pusha
shr
aas
je
hlt
xor
test
popa
sbb
inc
(bad)
imul
or
xor
pop
int3
pop
jecxz
mov
sub
pop
sbb
xchg
aas
ins
stos
fistp
xlat
cmps
jne
xchg
loop
xchg
push
ret
lods
jp
scas
sub
rol
mov
rol
xchg
enter
push
push
dec
cmp
push
sub
mov
mov
xor
xlat
scas
adc
fldcw
inc
ins
out
or
pop
into
add
add
mov
adc
stos
idiv
inc
or
xchg
inc
sbb
pop
mov
xor
mov
xchg
push
xchg
nop
or
and
jo
test
pop
popa
std
nop
pop
pop
sub
arpl
std
scas
neg
jns
ds
jae
bound
movs
mov
sahf
and
es
aam
(bad)
addr16
inc
fld
mov
jp
adc
ins
ins
cmp
push
adc
add
dec
aas
(bad)
mov
loop
sub
inc
xor
add
fisttp
lods
xor
xor
repz
mov
ret
inc
mov
stc
pop
(bad)
or
cdq
shr
pop
outs
repz
or
and
sub
push
cdq
daa
adc
xchg
rcr
and
dec
jnp
or
mov
jmp
and
jmp
dec
test
ja
fs
into
pop
mov
stc
mov
jo
dec
inc
mov
and
xchg
xlat
pushf
out
pop
jb
icebp
xchg
pop
aas
(bad)
pop
pop
clc
add
into
div
in
call
pop
ret
sbb
sar
repz
data16
mov
fist
std
xchg
out
in
call
jne
cwde
or
fistp
xchg
pop
and
and
and
cmp
mov
fisttp
pop
in
add
mov
movs
jae
push
sub
xchg
adc
inc
cmp
dec
add
data16
cwde
aaa
mov
movs
mov
pop
call
and
popa
jbe
xchg
fsubr
sbb
xchg
add
adc
adc
mov
ja
push
xchg
cmp
xor
mov
les
cmp
jle
dec
js
xor
popa
ja
stc
push
pop
inc
xlat
ins
out
inc
outs
test
jne
jmp
nop
bnd
movaps
add
jo
push
or
mov
add
(bad)
adc
or
das
adc
test
mov
cmp
lea
prefetch
or
retf
push
sbb
(bad)
sub
popa
fild
movs
(bad)
mov
dec
lds
inc
outs
inc
ss
xor
adc
cdq
push
scas
loopne
es
lock
jg
pop
mov
xor
jno
add
sub
mov
sbb
xchg
jl
fdivr
xchg
inc
mov
mov
mov
mov
jmp
mov
lods
pop
pop
mov
daa
mov
in
test
pusha
dec
out
cmp
xchg
dec
push
not
cmps
rcr
jmp
clc
jmp
(bad)
push
data16
cmp
pusha
inc
mov
(bad)
(bad)
aam
mov
fwait
jae
pop
hlt
xchg
cmp
sti
icebp
or
mov
and
test
call
lock
icebp
xor
sub
jg
(bad)
pop
(bad)
or
call
mov
jne
mov
or
pop
add
scas
into
cmp
add
pop
test
sub
cmp
(bad)
jg
(bad)
push
ret
sbb
shr
or
lock
or
pop
pop
pushf
sbb
pop
(bad)
jl
sbb
fwait
or
push
ins
pushf
mov
cmp
lds
cmp
xchg
dec
mov
movs
and
pop
adc
push
dec
in
cmp
mov
xor
mov
sbb
xchg
or
test
jbe
stos
jns
adc
xchg
(bad)
fstp
fwait
adc
loopne
dec
xchg
sbb
mov
mov
cmp
stc
movs
mov
stos
(bad)
retf
and
shl
ins
adc
dec
pop
sub
push
(bad)
add
outs
stos
es
sub
add
call
pop
xchg
ds
push
loope
ins
jmp
jbe
or
(bad)
out
jo
sub
bound
mov
and
push
enter
retf
scas
fst
push
sbb
je
mov
es
ds
mov
jle
mov
inc
in
dec
push
xchg
add
jl
daa
imul
add
jo
jmp
fisttp
inc
sbb
add
inc
cli
add
add
aas
xchg
push
mov
outs
cmp
sub
jbe
xor
je
mov
retf
shl
loop
ins
(bad)
mov
(bad)
fbstp
pop
and
or
movs
jl
je
and
xchg
mov
pop
int3
shl
scas
das
ds
call
sbb
mov
and
and
lea
push
test
in
sub
les
dec
aaa
xchg
or
sbb
das
inc
test
ins
leave
jmp
or
sub
jne
outs
inc
inc
or
pop
psubsb
xchg
mov
mov
nop
mov
or
rcr
push
mov
sub
test
psubd
jne
mov
sbb
jmp
adc
ss
jl
mov
rcr
and
and
retf
punpcklbw
scas
cmp
sub
inc
xchg
jg
xchg
mov
pop
int3
mov
add
ins
and
and
mov
sbb
mov
mov
movs
loope
lea
movs
icebp
aaa
es
fist
iret
add
pop
cmp
mov
push
jbe
and
ins
in
pop
aam
add
mov
scas
popf
ss
mov
or
shl
pop
popf
cmc
dec
lods
enter
add
or
and
pop
fild
and
pop
and
data16
push
push
and
push
clc
inc
in
pop
mov
push
dec
cmc
dec
bound
jge
(bad)
sbb
xor
fld
div
push
movs
push
into
int
outs
mov
shl
and
sub
pop
mov
xor
xor
push
loop
imul
out
mov
lods
push
push
xchg
adc
pop
cmps
add
pop
lahf
push
xor
pushf
adc
mov
add
rcr
call
shl
sbb
jle
ins
add
fwait
and
fxch
mov
pushf
pop
pusha
pop
in
dec
sub
add
jp
sbb
jmp
(bad)
dec
test
mov
and
dec
aam
fst
push
out
jle
push
mov
mov
jbe
dec
aas
outs
addr16
mov
jbe
mov
jg
into
sbb
jnp
outs
push
and
sbb
pop
icebp
xor
jb
test
jmp
mov
cmc
jbe
jmp
xchg
leave
loopne
nop
rcr
retf
stc
sub
sub
sub
xchg
shr
repnz
repz
psraw
mov
push
mov
loope
daa
add
xchg
add
lahf
ficomp
mov
sbb
mov
popa
add
fstp
or
add
xchg
sub
inc
cmp
lahf
push
jg
mov
or
std
aad
popf
arpl
and
pop
aas
test
or
into
ret
push
fcmovne
scas
add
repz
sub
sbb
sbb
test
jl
loopne
xchg
arpl
scas
pop
sbb
jne
rcr
xchg
ins
and
mov
push
dec
cmps
pop
mov
fadd
inc
sub
lods
pop
stos
fwait
sub
scas
xor
push
fsubr
in
aad
sti
or
ja
and
nop
mov
pop
ficomp
lds
cdq
jl
xor
inc
pop
out
inc
iret
pop
stos
adc
inc
stos
lahf
imul
jle
inc
dec
lock
das
cmp
lds
mov
push
or
cdq
sahf
out
jmp
(bad)
jne
loop
movs
dec
ins
mov
add
loope
xchg
iret
sub
test
scas
inc
cmp
sub
jbe
mul
adc
das
cmp
or
jns
addr16
test
add
lea
(bad)
aas
add
es
fistp
(bad)
(bad)
es
imul
xor
or
loop
or
dec
jbe
push
(bad)
xor
repz
outs
addr16
xor
repnz
mov
fmul
mov
lds
cwde
jns
les
outs
jbe
cmp
popf
scas
inc
data16
addr16
(bad)
inc
dec
sbb
jns
cmp
or
inc
and
and
mov
and
push
jp
loop
push
nop
or
or
jecxz
mov
push
lea
add
add
sti
dec
(bad)
add
dec
lods
add
sub
mov
xchg
add
test
pop
loope
test
cmp
or
push
cmp
test
and
or
das
clc
pop
pop
mov
mov
push
lods
sbb
pop
out
xor
push
xchg
cdq
(bad)
out
push
add
jb
add
lea
imul
push
add
int
ror
cmp
push
jne
lds
in
je
or
xchg
jl
addr16
push
ds
imul
xchg
jmp
jno
cmp
lahf
retf
sahf
and
dec
mov
and
(bad)
mov
(bad)
mov
inc
push
fsubr
js
mov
xchg
mov
and
xchg
fs
(bad)
pop
xchg
pop
dec
pop
icebp
arpl
inc
mov
sub
sbb
(bad)
aam
adc
jle
mov
fcom
jnp
xchg
add
in
ret
rcr
imul
outs
and
jmp
pop
(bad)
test
and
and
xor
retf
dec
mov
jecxz
adc
mov
inc
jmp
xor
mov
(bad)
sbb
adc
cdq
mov
or
push
inc
cmp
jb
rcl
jecxz
jmp
xchg
jmp
nop
inc
sub
out
cmps
stc
clc
call
fisttp
repnz
jae
xchg
sbb
push
cmc
jno
mov
dec
jb
lock
ret
jmp
stos
mov
(bad)
and
mov
loop
sahf
xchg
push
jae
(bad)
pop
add
and
cwde
stos
das
mov
mov
mov
xor
bound
repnz
mov
dec
sbb
ins
(bad)
movs
scas
fsubr
adc
repnz
outs
loope
cmc
push
nop
mov
outs
(bad)
ret
lea
xchg
lds
jns
test
xor
ror
lock
lahf
cmp
lahf
pop
dec
pop
aad
stc
mov
push
jne
jb
enter
mov
sub
adc
bound
or
cld
mov
inc
adc
imul
cli
call
xchg
mov
ins
xchg
cld
sbb
mov
mov
iret
and
jmp
and
enter
push
outs
pop
mov
cmp
cmp
push
push
sti
mov
(bad)
stos
je
in
cmp
jg
xor
outs
icebp
shl
push
out
cwde
iret
mov
call
(bad)
aam
ss
xchg
shl
pop
sub
call
cwde
jb
inc
stos
int3
xlat
adc
aam
les
jbe
lods
stc
arpl
mov
push
rcl
mov
ror
(bad)
div
cmp
inc
loope
push
inc
int
out
or
jns
mov
pop
push
add
pop
test
sub
and
mov
(bad)
add
dec
mov
inc
push
xor
dec
test
das
jmp
jbe
repnz
sbb
sbb
push
xchg
test
cmp
sub
pop
jmp
fnsave
ins
hlt
mov
or
retf
xchg
je
retf
les
jno
xchg
(bad)
xchg
mov
outs
xor
shr
jo
call
je
aaa
dec
xor
push
fist
(bad)
pushf
inc
les
ficom
mov
stc
mov
leave
gs
and
pusha
cmp
setge
and
jmp
sti
sub
aaa
out
pushf
inc
pusha
repnz
popf
loope
pop
mov
imul
jb
inc
sbb
rol
dec
sub
enter
in
jae
js
dec
aaa
int
lds
push
pop
scas
mov
xor
jmp
pop
outs
fs
sbb
in
dec
lds
loope
mov
test
xchg
in
ret
mov
jecxz
adc
sahf
int
pushf
jmp
popa
loopne
stc
push
(bad)
jne
loop
pop
adc
cmps
arpl
call
mov
dec
sub
and
mov
imul
movs
sbb
jbe
jnp
cmp
call
fcomp
mov
push
aam
mov
cmps
mov
push
push
push
cmps
xchg
leave
sbb
jp
data16
inc
rcl
retf
push
nop
sti
or
xchg
xor
mov
sub
test
mov
popa
fdivrp
(bad)
shl
push
dec
add
bnd
sar
or
hlt
jmp
iret
dec
jle
adc
imul
out
fist
xchg
scas
js
push
je
sub
fwait
xchg
(bad)
add
outs
mov
push
ror
int3
out
dec
fbstp
xchg
sub
mov
jp
test
push
xchg
push
hlt
inc
push
test
dec
xor
xchg
adc
es
int3
or
repz
movs
loopne
add
int
pop
and
dec
popf
inc
dec
jle
and
and
gs
mov
sub
cmp
push
not
movs
sbb
sbb
stc
xor
jl
push
shl
lods
and
jo
movs
sub
inc
ret
mov
jnp
sbb
inc
rcl
aam
ss
pop
call
test
sbb
inc
ret
mov
jnp
push
push
int
shl
iret
mul
call
jmp
xor
outs
push
test
pusha
(bad)
cmp
dec
in
sub
dec
cmp
or
out
or
popf
mov
test
jno
stos
dec
sti
(bad)
lock
pusha
xlat
(bad)
int
push
loope
fisubr
push
jle
xchg
cmp
add
ret
xor
ret
(bad)
fbld
dec
div
jae
shl
ret
xchg
shr
mov
scas
lock
pop
leave
fs
in
ins
aam
and
push
lea
add
(bad)
jp
ss
jns
or
push
xchg
add
push
je
imul
fs
loopne
test
xchg
ror
iret
repnz
jae
dec
dec
mov
mov
fcomp
mov
jmp
out
and
js
test
int3
data16
mov
and
outs
mov
inc
movs
push
daa
adc
ds
mov
cmp
dec
leave
dec
test
or
cdq
into
daa
outs
or
mov
fdiv
in
adc
lock
jb
mov
push
push
mov
xlat
out
jmp
popa
imul
fadd
or
retf
test
xor
outs
aad
imul
xchg
sbb
sub
jno
inc
mov
js
sbb
cwde
mov
(bad)
cmp
test
pushf
fistp
fisubr
(bad)
mov
pop
aam
pop
cmp
xor
cmp
mov
mov
out
cmp
imul
arpl
(bad)
inc
fsub
aam
sbb
and
test
cmp
inc
test
add
pop
fnstenv
push
sbb
adc
icebp
jmp
(bad)
dec
sbb
into
cld
sbb
push
ret
mov
jecxz
mov
jno
sbb
push
cld
push
jno
push
clc
fwait
add
fstp
adc
pop
lahf
inc
fild
std
mov
(bad)
daa
dec
mov
jne
add
xlat
shr
mov
xor
daa
jne
ret
pushf
adc
out
mov
add
sbb
sbb
call
test
cmp
(bad)
push
test
mov
push
jne
jo
mov
cmps
sub
repnz
mov
and
push
sub
fild
scas
out
sub
adc
mov
sub
dec
sti
xlat
xor
cmp
icebp
ds
cdq
repnz
and
inc
cli
sub
cmps
xor
lods
movs
mov
dec
call
ja
dec
xor
add
enter
cdq
mov
in
jnp
test
fs
cdq
xchg
lds
jge
mov
jp
movs
jle
aad
xchg
cli
lods
inc
xchg
lahf
lahf
xlat
sub
jp
aam
scas
or
jns
pop
lahf
test
jno
mov
int
mov
outs
retf
je
stc
ret
std
push
loope
fadd
es
mov
out
mov
dec
and
in
dec
stos
lds
sbb
in
pop
add
mov
lahf
jl
inc
cmp
out
test
pop
das
cmp
div
jg
xlat
push
xchg
push
lods
daa
repnz
or
add
mov
sub
add
inc
push
jno
push
push
adc
retf
movs
iret
cmps
arpl
and
mov
test
mov
jecxz
pop
nop
push
inc
push
pushf
ja
test
jo
or
inc
dec
scas
js
stos
ja
jg
xchg
inc
clc
stc
push
shl
icebp
adc
retf
clc
push
pushf
je
inc
inc
mov
js
add
sub
push
or
mov
xlat
lds
jne
fsubrp
inc
(bad)
mov
xchg
je
mov
adc
out
arpl
add
mov
out
dec
push
dec
inc
adc
and
jmp
ins
scas
push
outs
jge
arpl
mov
pop
repnz
lea
mov
push
sbb
sub
in
retf
dec
cwde
xlat
push
mov
movs
repz
movs
or
mov
hlt
fld
repnz
in
fidiv
leave
popf
es
arpl
inc
rcr
inc
cwde
xchg
adc
jmp
data16
fcomp
inc
cmp
test
fidivr
(bad)
cmc
push
je
or
xchg
sub
mov
pop
or
rcl
ret
ds
rcl
mov
les
or
xchg
adc
mov
into
pop
test
repnz
je
jnp
and
loop
dec
scas
addr16
add
sub
and
add
xchg
sbb
lahf
jno
cli
pop
xchg
shl
mov
push
shl
lea
int
pop
push
and
mov
and
gs
jp
pop
cmp
mov
cwde
push
and
xchg
adc
add
dec
cmp
stos
call
(bad)
mov
mov
call
iret
std
or
pop
sub
mov
mov
mov
pushf
lods
je
adc
icebp
cld
(bad)
movs
jmp
pop
xlat
test
add
retf
nop
push
sub
aaa
outs
cmp
dec
sbb
pushf
punpckhbw
scas
or
mov
sti
push
sbb
ins
ds
mov
mov
fild
test
jno
ret
adc
fmul
cmp
jbe
dec
int3
mov
mul
add
cmps
in
sub
out
and
dec
lahf
les
push
mov
mul
pusha
xor
push
xor
adc
loop
xchg
inc
cld
out
fst
xchg
scas
addr16
into
cmp
xchg
inc
dec
push
into
jl
(bad)
sbb
adc
inc
jmp
mov
and
rcl
mov
dec
sbb
jle
lea
cmp
call
fsub
frstpm(287
sbb
mov
push
out
xchg
inc
lods
or
cmp
mov
sbb
mov
fcomp
popf
test
adc
repz
call
mov
pop
push
dec
push
or
xchg
loope
dec
(bad)
(bad)
fwait
dec
mov
test
cmp
xchg
fdiv
pusha
pop
(bad)
lea
fcom
cwde
mov
adc
lods
push
push
mov
and
sahf
loope
pop
and
jne
(bad)
inc
mov
add
mov
xor
das
arpl
aad
push
jecxz
sbb
pushf
and
pop
mov
xchg
les
push
int
fist
or
clc
sar
out
mov
dec
adc
dec
sti
sbb
inc
push
lahf
xor
loopne
lds
outs
test
sbb
(bad)
call
inc
loopne
mov
dec
fisub
ret
pusha
pop
mov
and
mov
iret
or
jmp
mov
fnstsw
and
and
int
xchg
sub
xchg
icebp
mov
or
inc
jae
jno
dec
pop
push
outs
sbb
jp
shl
pop
mov
sysenter
iret
sub
cld
rcr
js
and
mov
out
jg
(bad)
iret
xor
xchg
push
stc
test
mov
lods
rcr
retf
fidiv
dec
rcr
call
(bad)
in
pop
sbb
lods
or
aam
push
or
fidivr
repz
mov
inc
pop
cmp
in
test
xchg
inc
arpl
xchg
pcmpgtw
mov
loopne
or
ror
push
push
xchg
fstp
mov
shr
dec
pop
mov
lods
dec
test
(bad)
cmp
mov
mov
test
in
call
mov
adc
sub
fwait
lds
and
jae
mov
movs
jns
jb
push
add
out
cmp
out
ror
jg
push
xor
cmc
stc
ret
(bad)
jecxz
ficomp
adc
mov
cmp
xchg
cmp
in
push
pop
inc
push
inc
scas
ret
mov
cmps
dec
mov
or
cli
xor
shl
dec
fstp
sbb
dec
sub
jmp
(bad)
call
push
or
repz
or
add
jge
jno
add
sbb
add
adc
push
pop
je
mov
mov
pop
adc
push
push
ret
icebp
jbe
pushf
add
ins
mov
in
call
fs
mov
pop
or
dec
mov
out
sbb
push
lock
(bad)
jae
jno
stos
mov
cmps
sub
sbb
ja
push
xchg
adc
rcl
(bad)
js
bound
dec
dec
call
ss
(bad)
out
cmp
add
mov
test
aad
fnstsw
cli
cld
inc
inc
xor
push
les
pop
icebp
mov
mov
in
xor
addr16
sub
popf
rol
push
(bad)
outs
pusha
dec
mov
lea
xor
icebp
sbb
mov
xchg
jmp
scas
(bad)
lea
hlt
fsubr
dec
jecxz
pop
mov
xchg
lods
outs
push
add
pop
js
jbe
mov
aas
mov
bound
mov
dec
fidivr
xor
ja
mov
push
rcl
xchg
js
push
lahf
cld
ret
or
xchg
and
loopne
fsubr
cld
add
jne
jecxz
add
fwait
sub
leave
jbe
(bad)
xchg
clc
inc
aad
cwde
add
push
pop
mov
mov
add
mov
cmp
xchg
stos
push
cmps
mov
sub
loope
dec
add
lea
push
inc
call
adc
cld
cli
das
out
xchg
outs
daa
or
push
loopne
into
in
cwde
pop
rol
mov
and
movs
movs
shl
add
mov
fwait
inc
and
mov
inc
lahf
ins
gs
cmp
enter
rol
mov
(bad)
mov
cmc
xchg
repz
jmp
int3
outs
ror
and
mov
jp
sub
inc
cmps
test
adc
sub
int
jmp
inc
dec
hlt
push
imul
in
es
rcl
push
dec
lods
sub
loop
jmp
xchg
movs
mov
dec
test
mov
or
xchg
cmp
pushf
sbb
pop
out
es
std
adc
add
mov
lea
out
push
out
das
jo
mov
lods
ss
push
pop
sub
sub
and
lock
adc
inc
xor
adc
fdiv
inc
cmp
out
inc
dec
(bad)
sbb
jg
mov
cmc
adc
call
dec
mov
ror
sbb
xor
loop
inc
imul
jle
pop
inc
mov
stos
sub
leave
pop
xor
xlat
daa
jae
out
mov
add
fidiv
mov
xor
and
pusha
push
cmp
std
fidiv
sub
nop
dec
xlat
pop
stos
push
pop
shl
xor
ret
mov
jbe
jl
pushf
adc
inc
jbe
mov
lods
sub
rsm
add
sbb
test
cmp
add
or
test
mov
fsub
and
ins
outs
mov
inc
dec
xlat
lahf
fnsave
mov
std
(bad)
mov
fadd
retf
sub
cli
into
loope
sbb
add
push
mov
(bad)
movs
hlt
cmp
xor
(bad)
retf
cmp
jae
inc
fild
into
popf
mov
and
aaa
cmp
lock
lea
fsub
retf
std
out
adc
in
push
loop
xor
fwait
inc
dec
adc
add
pop
neg
int3
test
jae
popf
or
rcr
inc
rcr
jmp
(bad)
cmp
sub
ret
jne
push
fs
pop
stos
loop
xor
pop
mov
pextrw
mov
cmps
scas
push
pop
sub
ficomp
jp
dec
aaa
loope
retf
aad
gs
sub
push
mov
xor
pop
sbb
iret
xor
push
or
jo
fisttp
sbb
out
gs
je
adc
outs
arpl
pop
outs
ja
push
mov
outs
jl
test
fidiv
xlat
inc
cdq
cmp
mov
jo
mov
or
loop
ret
test
lds
movs
fs
jns
ss
inc
or
hlt
or
sbb
xchg
in
cmp
lock
fld
cwde
jae
leave
xchg
pop
jl
test
jne
dec
out
stos
pushf
inc
mov
mov
cs
pop
jbe
lock
jno
mov
repnz
mov
in
scas
gs
mov
or
pop
call
sbb
sbb
push
(bad)
out
xchg
pop
jmp
movs
mov
clc
popf
push
clc
ret
xlat
cdq
and
pop
adc
inc
loopne
inc
nop
mov
out
push
cmp
je
mov
imul
inc
pop
jg
scas
mov
jmp
ret
retf
bound
call
dec
lea
pop
(bad)
(bad)
xor
je
jmp
sbb
cdq
or
lods
out
imul
mov
loope
sbb
fistp
dec
push
fmulp
aam
mov
jo
mov
loopne
fsubr
mov
rcl
addr16
cmp
add
pop
addr16
aaa
mov
mov
call
cmp
enter
adc
add
cmp
sub
test
pop
aad
sbb
mov
dec
jmp
cld
scas
addr16
ficomp
mov
cmc
dec
pusha
xor
xchg
das
loope
loope
sub
out
dec
sbb
mov
add
inc
lea
jl
adc
cmp
xor
scas
aas
imul
outs
inc
test
rcl
mov
xchg
push
mov
jmp
adc
enter
inc
aaa
add
jns
mov
inc
popa
inc
pop
xchg
cs
push
pop
xlat
push
ret
xchg
mov
xchg
adc
mov
sub
sti
adc
push
push
in
std
inc
popf
jne
sbb
or
ret
or
mov
gs
sub
mov
push
and
leave
test
mov
test
push
cmps
std
(bad)
push
fnstsw
rcr
sbb
adc
mov
inc
and
push
sbb
enter
jmp
inc
inc
push
mov
hlt
xor
out
push
mov
popa
xchg
mov
pop
cmps
add
and
out
pop
xchg
push
jmp
js
sbb
fs
mov
push
mov
arpl
repz
or
jbe
call
and
ret
cwde
test
jb
dec
(bad)
outs
retf
popf
leave
nop
ins
adc
add
push
test
fist
push
adc
aad
daa
(bad)
pop
test
cmc
popa
fisub
or
hlt
xor
mov
fiadd
in
loope
mov
xchg
sub
(bad)
and
jne
sbb
loopne
and
in
aaa
fstp
pop
push
test
ss
and
repnz
movs
sbb
jp
inc
call
sar
fmul
ds
stc
dec
pop
sbb
adc
repnz
adc
jae
and
aad
or
xchg
(bad)
cmp
xchg
mov
icebp
jle
dec
test
sbb
cld
dec
adc
hlt
inc
mov
lock
or
lea
aas
dec
pop
imul
movs
test
bound
fadd
sub
cmps
cmp
cmc
push
aas
mov
test
ror
sbb
aam
push
jmp
psrlw
bound
test
scas
imul
adc
repnz
jb
jbe
adc
or
cmp
xchg
fsub
call
mov
xor
mov
out
jns
ror
pop
adc
mov
(bad)
lock
xlat
cmp
pop
pop
jnp
(bad)
dec
push
inc
mov
jecxz
jg
or
test
mov
jg
mov
clc
sbb
fst
inc
mov
jnp
movs
mov
and
or
sahf
jns
mov
and
test
dec
stos
in
add
mov
adc
cmps
inc
ror
in
push
mov
outs
shl
xor
sub
xlat
shl
pmulhw
dec
rcr
mov
cmp
mov
les
add
ja
xor
lods
xor
loope
push
(bad)
jae
in
add
sub
cmps
push
jns
fwait
sbb
out
cmps
arpl
aas
xor
xor
sub
mov
add
rcl
(bad)
loop
jle
(bad)
push
out
out
int3
in
in
stos
(bad)
cli
add
sub
mov
xchg
imul
and
fistp
cmps
movs
or
lds
push
xor
and
push
or
sbb
pop
mov
call
inc
jmp
push
ret
dec
ja
pop
push
push
mov
jp
pop
pop
stc
fstp
fwait
add
sahf
xor
mov
es
jp
or
push
inc
xchg
ins
xor
cmp
mov
les
std
mov
aad
push
xchg
outs
cmp
imul
jl
sbb
or
fstp
cmp
fmul
ror
nop
jo
pop
imul
cmp
inc
sbb
pushf
jg
iret
pop
pop
call
sub
outs
cmp
in
jle
lods
inc
pusha
and
cld
std
xchg
push
add
sahf
(bad)
call
(bad)
fist
pop
jo
out
jne
mov
xor
rol
dec
inc
pop
shr
out
xchg
cmp
cmp
jecxz
add
call
jle
mov
push
add
js
mov
sar
lock
inc
jns
test
dec
jle
push
push
movs
psraw
data16
add
add
aas
jg
jge
js
in
cmps
sub
fsqrt
sub
push
jmp
jmp
and
fwait
stos
icebp
pusha
movs
inc
das
ja
xor
in
add
movs
retw
xchg
mov
jmp
xchg
or
test
call
jne
lods
out
call
inc
pop
xchg
popf
retf
pop
push
mov
adc
cmp
sub
cmp
shl
inc
out
xor
cmc
mov
adc
jmp
mov
sbb
adc
mov
xlat
cdq
(bad)
mov
xchg
icebp
sub
mov
stc
or
fadd
mov
jecxz
call
inc
shr
inc
inc
dec
jge
sub
mov
jno
movs
out
repz
icebp
test
(bad)
mov
xchg
xor
jge
nop
pop
or
and
fmul
mov
fcom
inc
sbb
enter
cdq
popa
div
xor
cmp
adc
pop
cmps
test
test
pop
int
test
aaa
mov
jbe
(bad)
add
jge
push
ds
xchg
inc
dec
rcr
pop
sub
mov
fcom
xchg
iret
pop
xor
lods
cmp
aaa
js
das
cmp
mov
adc
sbb
xchg
jp
push
jo
loope
outs
mov
aas
sahf
jmp
xchg
inc
adc
dec
add
bound
and
inc
(bad)
and
loop
in
data16
dec
sub
inc
jle
xchg
sub
pop
pop
gs
mov
inc
jbe
cmp
mov
sbb
xchg
xchg
ins
pop
pop
mov
fbld
jb
cmc
lds
out
test
mov
jge
fisub
and
inc
lods
xor
adc
sbb
pop
mov
(bad)
popa
out
mov
arpl
xchg
xchg
cmp
test
sbb
xchg
jo
cmp
adc
cld
ret
loopne
cmp
xchg
mov
dec
cmps
pop
push
outs
sbb
dec
mov
mov
jb
lock
push
mov
outs
outs
jbe
or
jl
bound
mov
dec
not
in
push
sbb
bound
sub
dec
jl
push
fild
gs
xchg
out
imul
es
pop
test
sbb
jl
inc
(bad)
in
test
xor
push
mov
push
push
sbb
pop
mov
pop
bnd
out
jb
fldenv
out
cmp
xchg
pop
push
shl
sub
and
ss
ret
aam
cmps
jmp
sub
adc
test
pop
inc
pop
sub
hlt
fdivr
xor
lahf
sub
out
retf
pop
mov
gs
lahf
adc
call
pop
das
clc
adc
jp
mov
sub
add
adc
cmp
cld
lock
fistp
cmp
jg
cmp
movs
rcl
jns
jne
outs
test
retf
sahf
xchg
sbb
push
sti
ret
pop
addr16
jmp
pop
jecxz
and
lahf
retf
mov
shl
ins
(bad)
dec
cmp
or
sbb
mov
(bad)
sub
mov
mov
mov
push
mov
xchg
xlat
and
(bad)
jae
mov
cmps
mov
out
in
push
fisttp
nop
psllq
ret
das
loopne
in
loopne
and
mov
xor
je
add
xor
cmp
push
fisttp
cvtpi2ps
in
add
and
mov
and
sbb
and
icebp
jecxz
xchg
aaa
push
add
fcomp
adc
mov
mov
lds
repnz
jno
adc
fiadd
push
mov
and
lock
dec
das
test
push
mov
dec
jo
push
movs
inc
mov
xchg
jns
repz
cmc
dec
xor
and
(bad)
test
pop
into
dec
xchg
sbb
call
jg
mov
jecxz
lea
push
inc
movs
adc
push
sub
imul
pop
fcomp
inc
(bad)
fisub
shr
inc
or
push
dec
mov
mov
push
shl
outs
stos
je
lock
add
scas
and
pop
jmp
and
icebp
xchg
addr16
loope
cmc
push
jnp
inc
nop
icebp
dec
aam
adc
clc
inc
fs
cmp
dec
aas
popa
push
icebp
push
dec
(bad)
cmp
(bad)
call
xchg
leave
mov
sub
fistp
xchg
mov
or
inc
mov
bound
xor
and
xchg
cmp
and
add
xchg
pop
push
inc
ins
into
mov
cli
or
mov
repz
xor
retf
enter
cmp
pop
add
mov
dec
in
sub
imul
and
sbb
pop
seta
inc
xchg
das
mov
cmps
lahf
mov
fnstenv
shl
neg
(bad)
stc
jne
xor
or
mov
push
dec
pop
test
xor
add
js
xor
sbb
lods
mov
push
lahf
pop
mov
repz
or
(bad)
das
inc
mov
ret
add
sahf
xchg
and
rcr
aad
jbe
pop
inc
add
inc
movs
inc
lods
adc
mov
sbb
int
jno
sar
push
ja
dec
jns
sbb
push
pop
inc
imul
xor
or
int3
sar
nop
inc
xor
xor
pop
sbb
cs
push
outs
dec
jbe
and
in
imul
fdivrp
xchg
push
gs
sub
pop
jns
call
jne
mov
gs
out
scas
inc
mov
xor
mov
hlt
sbb
mov
out
in
pop
shr
pop
cmp
inc
sbb
lods
jle
ja
fimul
bound
leave
outs
jge
pop
outs
aaa
dec
and
add
dec
lea
mov
adc
inc
push
xchg
jnp
cmp
adc
xchg
lods
fld
and
dec
frstor
or
push
jo
and
stos
ret
add
ss
lods
cmps
or
cmp
mov
fnstsw
dec
test
sbb
out
sub
das
push
xor
addr16
jno
cli
shl
retf
cwde
jns
fnsave
iret
mov
out
mov
xor
loop
call
pop
ins
mov
scas
mov
scas
sbb
mov
repnz
or
jmp
sbb
jp
aas
pop
xor
retf
mov
stc
jb
xor
push
jmp
icebp
xlat
sub
(bad)
movs
or
add
cld
jno
mov
sub
push
dec
add
dec
xor
retf
arpl
ss
test
inc
push
pop
imul
jg
std
aam
push
fcmovu
pop
dec
xor
imul
pop
js
mov
cs
sbb
gs
xor
ss
push
pushf
xchg
mov
jge
loope
(bad)
sete
inc
in
and
jo
ja
mov
add
jg
js
cmp
mov
xlat
xor
inc
add
mov
dec
pop
pop
mov
xchg
cmp
mov
repz
mov
lea
addr16
add
nop
add
push
cmp
jb
(bad)
push
fnstcw
jecxz
cld
jbe
jb
inc
adc
mov
outs
xchg
outs
in
xor
test
mov
fwait
jl
mov
std
xchg
mov
push
nop
cmc
shr
inc
(bad)
xchg
(bad)
jne
jne
push
mov
movs
mov
les
and
jp
mov
ja
xchg
sub
mov
cmp
pop
(bad)
cmp
pop
jge
push
repnz
pop
jb
bound
or
jg
stc
pop
push
nop
inc
and
fadd
das
sbb
adc
dec
and
push
sbb
sbb
loope
in
ret
fwait
inc
pop
pop
mov
sbb
jge
pop
jo
sub
adc
(bad)
jecxz
pop
into
cmp
div
pop
fadd
loopne
jns
jnp
cmps
sti
test
mov
aad
pushf
mov
cmp
mov
jns
mov
lahf
mov
pop
lds
test
pop
cmp
sub
ds
mov
mov
push
fs
or
das
shl
cmp
jne
(bad)
(bad)
call
adc
inc
in
jmp
mov
sub
rcr
out
das
xchg
ins
test
in
fld
push
jge
inc
xlat
xor
mov
out
xlat
sub
push
pop
mov
js
jbe
aaa
out
cmp
dec
dec
sub
and
jle
add
int3
lods
dec
jbe
mov
sbb
add
mov
cmp
add
imul
mov
xchg
in
xchg
xor
mov
pop
jle
jno
dec
jl
and
hlt
out
xchg
xchg
(bad)
ror
adc
int
dec
push
add
dec
sti
in
jae
call
mov
aas
out
data16
jne
into
add
(bad)
mov
dec
add
mov
iret
sub
xchg
xchg
(bad)
ja
movs
sub
scas
push
test
mov
hlt
loope
popf
push
pushf
jge
jae
xchg
loop
std
cwde
jle
cmps
pop
das
pop
adc
or
rcl
adc
inc
shr
jp
add
add
jne
pop
inc
loope
jg
mov
movs
imul
fisubr
xor
add
xor
mov
fs
js
and
in
xchg
div
jnp
call
test
inc
out
gs
xchg
or
jle
and
ja
mov
pushf
aaa
mov
mov
test
and
rcl
add
or
add
cs
push
or
stc
dec
data16
dec
and
ins
add
jb
ja
push
jge
fnsave
outs
jnp
jbe
cld
push
test
sbb
fwait
mov
lds
push
popa
sub
sbb
jle
dec
mov
mov
inc
push
sbb
inc
add
mul
fld
mov
jae
scas
mov
cmp
cmp
fbstp
push
sub
cmps
push
or
imul
jns
jle
mov
xlat
mov
lods
aad
aad
xor
cdq
pop
leave
xor
adc
lods
add
out
test
adc
cmp
imul
jmp
cmp
int3
test
sbb
push
xchg
adc
pushf
dec
pop
lea
jno
sbb
pop
jns
icebp
xor
xchg
mov
mov
jb
aas
popa
jp
fsub
sub
xor
inc
pop
fnsave
and
pop
jne
lahf
sub
push
mov
repz
xchg
adc
mov
sbb
xchg
push
loop
(bad)
xchg
fcomp
inc
push
fs
test
outs
inc
aam
leave
fstp
xor
dec
repnz
ja
je
xchg
(bad)
(bad)
cmc
sub
jmp
fist
xor
pop
dec
fnsave
jns
jp
popf
setns
jae
ins
ret
ss
fiadd
cld
or
sti
inc
xor
pushf
cmp
(bad)
mov
arpl
xchg
retf
(bad)
fild
pop
jge
cld
mov
aad
hlt
jo
enter
xchg
xchg
mov
jmp
xchg
push
aam
pop
or
push
adc
lds
cmp
inc
or
out
repz
dec
stc
xchg
stos
aad
in
(bad)
cmps
jne
inc
push
cmps
jge
enter
or
pop
push
dec
ds
push
xlat
sub
lods
mov
or
xchg
adc
xor
cmp
in
cli
imul
dec
inc
push
push
inc
and
test
cmc
jbe
pop
pop
xchg
cmp
xchg
or
xchg
inc
add
pop
scas
in
lock
xchg
pop
pop
inc
dec
xor
mul
sbb
or
mov
rol
cli
movs
cdq
scas
xor
mov
sub
xchg
push
enter
add
xchg
sti
out
nop
xor
mov
ficomp
test
sbb
sbb
mov
arpl
out
add
dec
push
push
adc
loop
mov
adc
out
cld
bound
xor
jne
add
or
cmp
adc
fsub
jns
or
out
inc
pop
pushf
xor
push
jbe
iret
dec
jl
imul
ds
push
or
pop
jno
xchg
adc
stc
xchg
jmp
rol
out
push
jmp
cs
inc
cs
jp
adc
add
jns
aam
cmp
cmp
gs
mov
push
inc
out
add
aas
push
add
movs
retf
(bad)
mov
dec
ss
into
mov
xchg
in
pop
jbe
adc
cmc
adc
push
fs
test
jne
int3
retf
and
in
xor
mov
add
xor
pop
adc
xchg
ret
inc
cdq
ror
out
mov
dec
mov
mov
xchg
rol
mov
repz
mov
xchg
retf
les
mov
mov
xlat
adc
pusha
lods
cmp
dec
sbb
movs
mov
test
mov
sbb
(bad)
ficomp
lds
or
into
jno
push
pop
ja
enter
or
lea
cld
js
jmp
lds
mov
(bad)
rcl
cmc
rcr
pop
movs
cmp
xchg
xchg
jecxz
mov
movs
rol
fisub
(bad)
in
stos
xchg
pop
stc
fmul
scas
jge
(bad)
jne
jp
adc
into
fbld
retf
frstor
xchg
sbb
mov
repnz
iret
jae
jns
mov
jnp
mov
or
sahf
inc
fstp
sbb
jecxz
iret
test
xchg
aam
or
jg
shr
cmps
jg
xor
add
ror
adc
dec
js
sub
jbe
xor
cmp
pop
shr
loope
and
jns
xor
scas
or
stos
jbe
and
fiadd
ret
cmps
dec
scas
(bad)
or
dec
ror
test
pause
xchg
aam
adc
inc
cmp
rcr
ins
inc
mov
push
pop
test
enter
dec
pushf
int3
mov
mov
jo
movs
je
sbb
adc
sbb
push
imul
xchg
repz
shl
add
(bad)
xchg
mov
pop
mov
aad
add
sub
ror
iret
jbe
sub
jbe
push
adc
xor
add
or
pop
aam
pop
int
mov
pop
inc
lock
mov
xlat
mov
cmp
pop
push
or
mov
fadd
jmp
push
push
jge
adc
int
mov
jmp
outs
in
xor
xlat
rcr
sbb
jns
push
push
or
ins
cmp
jmp
dec
cmp
mov
test
call
jle
push
xor
xor
sbb
imul
in
out
retf
jle
cli
mov
xchg
int3
mov
pop
or
or
inc
sub
inc
add
push
test
inc
or
(bad)
add
xlat
je
arpl
adc
jb
sub
mov
arpl
lods
int
xlat
sub
(bad)
sub
fnstcw
add
outs
repnz
call
icebp
cmp
mov
adc
cmp
and
(bad)
fdivrp
repz
cmp
add
dec
call
mov
xchg
pop
call
add
xor
cmps
bound
clc
stos
sahf
sbb
fstp
mov
xor
das
outs
push
lds
inc
or
cmps
addr16
hlt
xor
cwde
adc
leave
xor
aam
sar
mov
repnz
or
test
movs
fisttp
add
mov
call
sti
sbb
stos
shr
dec
imul
sbb
jle
pop
repz
mov
pop
and
jge
jbe
retf
jle
inc
jmp
and
shl
mov
xchg
mov
mov
ins
jge
(bad)
dec
sbb
adc
pop
push
pushf
clc
push
nop
adc
popf
call
js
jno
movs
dec
(bad)
retf
pop
jmp
dec
jmp
retf
mov
or
xchg
outs
jle
adc
mov
and
inc
pop
pop
dec
jecxz
loop
das
mov
int
lock
enter
out
movs
ss
add
cmps
mov
sbb
sbb
pop
jg
push
add
inc
out
sbb
fsubr
loop
pop
shr
adc
cmp
scas
scas
push
test
push
inc
(bad)
lock
jbe
push
push
push
fld
mov
add
add
shl
cmp
mov
inc
mov
ret
sbb
ret
cli
retf
xchg
sbb
xchg
pop
lods
ss
loope
out
sti
sbb
hlt
sbb
je
dec
pop
xchg
inc
mov
sub
mov
pop
pop
mov
arpl
rcl
lock
lock
popa
push
cmps
scas
mov
jmp
hlt
out
sbb
mov
xchg
dec
inc
fdivrp
sti
push
mov
sbb
mov
mov
jns
jl
jge
and
movs
lods
nop
shl
and
xchg
xor
or
add
add
mov
jle
push
dec
push
retf
clc
rcr
or
ret
lea
and
mov
les
call
out
rcr
rcl
in
daa
ins
les
out
pop
xchg
clc
cmps
les
scas
int
add
xchg
mov
cli
ja
ds
shl
leave
cmp
pop
xor
dec
mov
mov
ds
push
ffreep
dec
fadd
hlt
repz
repnz
xchg
sbb
push
mov
mov
pop
xor
jno
xchg
pop
add
jmp
mov
fstp
sub
mov
fstp
repz
fisubr
bound
das
xchg
bound
cmps
lea
sub
js
loope
mov
jns
ins
sbb
xchg
pop
(bad)
fnstcw
add
lea
cli
inc
shr
adc
add
jns
data16
cmc
xor
mov
jp
cmps
daa
and
dec
xlat
mov
sub
fneni(8087
sub
and
add
pop
mov
sbb
or
shl
sar
adc
adc
outs
ins
push
xchg
repnz
ja
add
push
(bad)
ss
mov
mov
hlt
(bad)
int
xchg
dec
mov
jo
(bad)
aas
xor
mov
scas
or
arpl
inc
call
mov
imul
lods
call
inc
inc
xchg
mov
push
pop
xchg
xchg
pusha
mov
cli
dec
shl
es
inc
push
pop
pop
addr16
jb
in
inc
cli
hlt
int
(bad)
adc
or
sbb
fdiv
clc
and
rcr
gs
out
test
and
scas
dec
mov
push
dec
add
mov
mov
xchg
retf
adc
push
sub
and
clc
sahf
sub
movs
cmps
push
jmp
je
add
add
(bad)
inc
mov
inc
lds
popf
iret
dec
mov
xchg
jle
div
add
mov
mov
mov
mov
cmp
bound
retf
in
xor
out
out
repnz
cmp
mov
stos
cld
cmp
sbb
pop
or
xchg
js
adc
pop
jle
jb
pop
lea
dec
scas
xor
jecxz
pop
add
jno
sar
int3
cld
repnz
ficomp
pop
repnz
lea
xchg
mov
inc
mov
loope
(bad)
arpl
iret
jmp
mov
jnp
je
push
adc
mov
aad
and
xchg
mov
cmp
inc
shr
pop
(bad)
aad
cmp
sub
rcl
jb
jae
cmp
and
ds
mov
mov
cmp
fwait
xchg
(bad)
fisttp
lahf
mov
jg
movs
aaa
pusha
sub
pop
mov
fisttp
push
imul
xor
sub
dec
jge
in
sahf
mov
rcr
dec
test
sar
out
pop
retf
vandnps
jg
int3
dec
std
loop
fmul
sub
test
call
popf
mov
ss
mov
mov
clc
in
imul
inc
pop
or
pop
(bad)
mov
pop
adc
add
sti
push
leave
jae
cmp
jbe
jp
cwde
mov
add
pop
(bad)
cwde
idiv
add
(bad)
ds
inc
inc
adc
and
dec
and
imul
popa
test
mov
sub
mov
int
popa
jmp
mov
adc
(bad)
pop
je
xor
xor
mov
je
daa
pop
pop
seto
stos
sub
push
sbb
mov
jmp
sahf
jb
stos
push
push
arpl
pop
loopne
and
imul
push
mov
iret
pushf
movs
fistp
cmp
xor
push
das
and
push
xor
bound
inc
dec
cmp
sub
pop
hlt
or
jbe
adc
sub
mov
mov
mov
xchg
pop
inc
mov
cmp
mov
adc
in
add
adc
jg
iret
stos
adc
stos
and
and
pop
pusha
movs
push
aaa
push
or
outs
repz
repz
push
into
cmp
and
stos
or
fldenv
sti
ja
das
das
cmp
dec
enter
mov
xor
std
jo
aad
(bad)
jmp
ja
cs
mov
push
jle
mov
xor
div
push
inc
sub
sub
aam
jmp
icebp
(bad)
je
les
(bad)
jne
outs
add
cmp
shr
push
call
aaa
inc
cmc
inc
(bad)
into
cmc
rcl
test
add
push
sub
and
ret
fadd
loope
jge
mov
jno
and
cdq
and
lods
fst
push
dec
retf
in
dec
push
and
fld
mov
dec
mov
adc
add
(bad)
vmread
(bad)
mov
outs
push
push
push
cmc
and
cmp
call
add
out
dec
enter
les
adc
push
xor
mov
aam
cmp
push
dec
sbb
push
aam
aas
push
pop
test
fldcw
repz
(bad)
cs
jg
adc
inc
sub
out
shr
and
sub
push
cmp
popa
ss
(bad)
push
sub
inc
add
arpl
inc
outs
mov
fidiv
mov
push
adc
popa
mov
cmps
push
add
movs
and
aam
sbb
frstor
mov
shl
sub
data16
je
sbb
inc
jmp
dec
fs
sub
and
movs
sbb
ret
mov
pop
cmp
xor
cmp
fdivr
popf
dec
rcl
arpl
ror
jo
sub
push
inc
inc
pop
jno
mov
mov
and
div
or
shl
frstor
sahf
cdq
sahf
mov
sbb
jmp
call
xchg
sbb
pushf
test
mov
jo
mov
arpl
and
jne
jle
out
fs
out
mov
leave
inc
lds
jno
je
in
and
addr16
jl
sahf
ja
daa
xlat
sbb
mov
dec
aam
out
jg
pusha
shr
aad
std
retf
into
lods
and
push
mov
mov
adc
adc
std
das
inc
mov
and
pop
push
std
push
jns
add
mov
retf
mov
or
mov
cmp
fs
mov
mov
adc
cli
lahf
push
lds
sahf
or
ftst
aad
pusha
enter
arpl
repz
inc
xor
iret
lds
sub
xchg
aam
and
test
sbb
xchg
adc
xlat
and
ins
mov
mov
(bad)
xchg
push
call
pop
add
jno
popf
pop
adc
es
inc
push
push
pushf
rcr
sti
(bad)
stc
sub
pop
mov
adc
or
std
jae
pop
push
test
mov
pop
imul
(bad)
add
sahf
inc
lahf
dec
std
je
retf
adc
pop
int3
inc
jo
pop
cmp
retf
sub
popf
pop
mov
dec
jecxz
ficomp
sub
repz
(bad)
imul
(bad)
leave
mov
adc
(bad)
dec
leave
in
jnp
aaa
dec
aad
xchg
xor
sbb
and
jp
(bad)
cwde
aad
jbe
push
sahf
(bad)
(bad)
pusha
inc
adc
mov
shr
imul
jecxz
mov
add
std
jbe
cmp
mov
(bad)
loopne
push
sahf
add
mov
pop
adc
int3
sahf
jmp
ins
popf
mov
call
jp
jge
pop
and
or
cmp
jb
neg
inc
or
xchg
mov
jmp
dec
test
or
xlat
jle
jnp
add
mov
cmp
jnp
and
(bad)
retf
dec
dec
idiv
or
int
push
test
or
xchg
hlt
lahf
(bad)
mov
call
scas
and
test
hlt
stc
and
pop
xor
mov
out
repz
cmp
cmp
data16
mov
cli
xchg
lahf
xchg
xchg
cmps
fwait
mov
push
dec
jnp
inc
mov
push
add
dec
jnp
or
dec
mov
loop
mov
and
jge
push
lock
cli
int
xchg
mov
(bad)
icebp
jg
sbb
jg
dec
ds
inc
loopne
push
mov
push
aad
sub
inc
(bad)
xchg
or
cmp
lods
test
inc
or
scas
(bad)
call
data16
xchg
sbb
and
xor
dec
or
mov
push
inc
cmps
add
or
xchg
rcl
dec
in
movs
xchg
outs
mov
test
(bad)
inc
cmps
fadd
jb
push
mov
and
addr16
in
fld
adc
xchg
mov
movs
mov
jne
in
lock
jo
std
fcom
mov
aad
inc
sbb
popf
loope
mov
out
or
test
and
cmps
mov
or
cs
imul
sbb
lods
pop
lods
adc
mov
push
add
ja
fistp
call
aaa
hlt
jo
aad
std
inc
(bad)
xor
push
cmp
jge
cs
push
mov
xor
xor
repnz
fisub
mov
dec
cmps
mov
nop
dec
(bad)
inc
xchg
adc
cmp
dec
jb
mov
pusha
or
in
stos
not
adc
fst
sbb
call
loope
pusha
sbb
data16
sbb
sti
push
add
(bad)
add
std
sub
mov
bound
pop
xor
and
fstp
xchg
pop
xlat
xor
push
scas
xor
aad
mov
push
cs
xchg
xchg
cmp
jae
into
mov
dec
adc
push
aas
xor
xchg
in
nop
or
cmps
sub
push
(bad)
pop
mov
sbb
imul
mov
jmp
pop
mov
imul
pop
clc
in
cmp
adc
bnd
sbb
or
mov
jmp
adc
out
pop
dec
test
sbb
cmp
ret
int
lods
pop
pop
ss
adc
imul
jbe
out
and
ins
(bad)
mov
xlat
iret
shr
pop
add
stc
jg
popf
cmp
adc
lea
daa
icebp
or
dec
clc
nop
lods
movs
or
clc
push
push
ret
(bad)
mov
sbb
pushf
sub
shl
cli
cdq
or
ret
sbb
xor
jne
xchg
pop
fisttp
(bad)
dec
mov
test
pushf
std
dec
aaa
lods
lock
scas
test
xchg
sbb
test
hlt
or
mov
clc
push
leave
inc
jecxz
int
movs
push
hlt
test
sahf
and
cmp
jns
jp
adc
daa
call
nop
icebp
jnp
jg
clc
out
fcomp
and
jo
and
pop
gs
loop
add
sub
movs
sahf
lds
fwait
aas
push
and
jp
das
sbb
jmp
dec
xor
fld
xchg
adc
fucom
out
or
lock
jg
movs
push
mov
push
mov
lahf
xor
pusha
mov
push
add
add
or
sbb
jle
jmp
mov
adc
adc
dec
xchg
(bad)
pop
inc
shl
xor
(bad)
lahf
dec
loop
push
shl
movd
lahf
mov
jnp
mov
or
pop
clc
cs
leave
push
pop
dec
inc
ret
mov
adc
adc
adc
lea
cmp
sbb
add
dec
jne
lds
ss
scas
sbb
retf
xchg
add
out
repnz
jg
dec
icebp
add
xchg
in
adc
int3
dec
mov
adc
dec
xchg
fdiv
cmp
pop
scas
inc
adc
loope
in
cmp
clc
mov
dec
cmp
popf
lahf
pop
inc
repz
ret
rcl
loop
stc
ins
xlat
mov
into
cwde
xor
data16
in
add
sub
bound
adc
enter
bound
rol
mov
enter
push
pop
mov
push
into
push
imul
jae
call
add
ins
inc
dec
inc
jno
out
mov
mov
test
adc
jae
mov
fld
ins
in
add
lahf
cmp
or
addr16
jno
push
jecxz
mov
or
movs
lds
rol
jg
cmc
dec
jmp
and
es
in
dec
mov
popf
pop
stos
ds
adc
hlt
fild
mov
add
xchg
mov
call
sub
mov
push
mov
cmp
sbb
push
dec
scas
or
hlt
test
pop
ret
repz
out
dec
loop
sbb
fmul
es
iret
lock
pop
std
add
sbb
xchg
in
mov
outs
adc
dec
jbe
scas
cmp
mov
fmul
fstp
xor
cmp
out
add
les
pop
mov
fcomp
xor
pop
ins
cld
and
lock
shr
xor
hlt
cmps
and
jge
jo
add
jecxz
test
ins
mov
cmp
(bad)
adc
mov
js
cmp
cmp
ror
mov
scas
sub
mov
inc
adc
fmul
cdq
neg
fsub
in
push
mov
outs
push
sub
sti
outs
fsub
inc
jae
(bad)
icebp
dec
test
jb
xchg
pop
je
push
push
addr16
sbb
or
out
js
ss
fld
imul
sub
push
pop
dec
movs
mov
das
out
push
push
into
ja
inc
mov
addr16
or
push
jg
cmp
add
push
push
lds
out
clc
js
inc
popf
movs
mov
leave
inc
push
mov
cld
xchg
or
xchg
xchg
mov
adc
out
jle
sbb
aas
aam
mov
xchg
ins
pushf
add
sbb
shl
mov
cmp
fwait
and
mov
daa
test
cmp
jbe
(bad)
cmp
push
outs
mov
mov
jo
pusha
mov
xlat
repz
retf
and
pop
mov
inc
push
mov
cmp
int
cmps
mov
sub
sbb
stc
xchg
pusha
and
push
in
clc
add
repz
xchg
pop
hlt
add
(bad)
xchg
mov
gs
mov
dec
icebp
adc
xchg
(bad)
jmp
jns
mov
jno
mov
movs
jmp
std
adc
imul
add
shr
jle
sar
push
gs
push
in
sbb
sbb
jl
cmp
cmc
jmp
das
cmp
dec
lods
rol
mov
adc
mov
sub
iret
cmp
out
inc
lods
out
xchg
out
sbb
push
add
repz
clc
bound
and
xchg
lods
imul
sbb
dec
mov
jecxz
xor
dec
sub
pop
pop
pop
dec
(bad)
out
lea
call
lods
fwait
sub
jbe
and
or
mov
jmp
dec
pop
in
aas
add
in
gs
arpl
mov
push
dec
mov
rol
add
pop
movs
push
out
pop
pop
in
nop
fisub
jns
and
push
adc
dec
xor
add
pop
jmp
dec
in
push
je
or
push
lock
cs
mov
push
mov
(bad)
ds
into
out
ins
mov
cmp
fsubr
adc
ja
push
fistp
xchg
cmp
cmp
mov
inc
mov
inc
mov
sbb
pop
add
clc
sti
sar
dec
sbb
add
(bad)
sub
jo
ins
addr16
(bad)
pop
movs
inc
xchg
retf
mov
aaa
cwde
test
push
shl
cmp
mov
push
sti
call
and
jo
push
xchg
xor
(bad)
fcomp
jmp
push
xchg
into
add
xchg
jmp
scas
mov
gs
popa
push
das
inc
icebp
jp
dec
stos
jecxz
cmc
test
in
repz
das
loopne
dec
xchg
es
sar
bound
mov
ins
mov
cmp
imul
push
sbb
inc
push
loope
outs
(bad)
out
and
fmul
mov
outs
dec
jne
add
out
mov
inc
inc
mov
stos
mov
mov
jmp
jecxz
in
ja
xlat
sub
fdivr
jmp
pop
pop
repz
add
or
pop
jl
cmp
rol
jle
sbb
cmc
lods
cmp
pop
retf
leave
add
mov
ror
sbb
or
dec
fdivr
cmp
aaa
jg
je
pop
push
mov
loopne
outs
cmps
add
pop
imul
std
add
mov
and
(bad)
push
sahf
mul
cmp
dec
mov
mov
xlat
leave
nop
out
mov
imul
lock
push
daa
pop
mov
fidivr
lock
test
and
mov
leave
and
jp
mov
lods
sub
iret
nop
pop
mov
inc
(bad)
xor
lods
js
arpl
lea
(bad)
mov
fbstp
ds
add
jle
fs
mov
sbb
sahf
test
pop
dec
cmp
rol
stos
mov
scas
fsubrp
dec
in
in
ins
outs
cmc
or
jl
int
xor
xor
neg
out
rcl
and
scas
inc
jns
mov
(bad)
loop
(bad)
fild
or
(bad)
jp
inc
(bad)
push
stc
dec
pusha
xchg
adc
ds
cdq
and
jmp
arpl
mov
adc
xor
pop
shr
outs
scas
sub
(bad)
ins
xlat
mov
popa
xlat
pushf
mov
(bad)
cmp
inc
movs
dec
test
sbb
cmc
xchg
dec
ss
imul
sub
lock
rol
push
jmp
mov
rcr
jmp
mov
xor
test
icebp
mov
dec
dec
test
dec
add
jae
xchg
pop
in
(bad)
jb
push
inc
push
or
enter
xchg
movs
adc
in
jle
rol
hlt
add
xor
adc
pop
cmps
sbb
enter
pop
xchg
jae
out
jae
mov
loop
loopne
sbb
call
je
cwde
fsubr
pop
mov
leave
imul
pop
pop
inc
sbb
xchg
nop
dec
sbb
sbb
fwait
cmps
jmp
push
cmps
mov
add
(bad)
inc
mov
mov
lods
dec
imul
inc
xchg
iret
and
cli
loope
jnp
fs
movs
and
or
add
into
xor
fist
repnz
inc
call
(bad)
inc
outs
jns
xchg
das
mov
adc
cmps
cmp
imul
xchg
push
ja
js
push
sub
call
mov
dec
sti
push
push
add
adc
cmps
pop
je
add
mov
pusha
mov
dec
xchg
out
jl
jmp
dec
fnsave
pop
je
add
inc
xchg
adc
or
jl
adc
std
cdq
mov
jno
scas
es
cmp
ja
cld
push
cs
add
cmp
out
sbb
je
inc
hlt
push
pop
sbb
jmp
sbb
and
cmp
xchg
les
mov
mov
imul
ss
fstp
push
in
xchg
jns
fcomp
js
adc
lods
jg
pop
xor
gs
fs
(bad)
lea
and
sub
imul
xchg
in
ja
fst
repz
ins
add
shl
fcomp
daa
adc
mov
pop
ficom
cmp
aas
dec
fwait
add
sbb
jo
lods
push
mov
outs
add
mov
into
jecxz
ret
and
mov
and
fcmove
mov
add
xchg
jp
cmp
mov
mov
fsub
inc
rcl
pop
in
add
ret
dec
adc
mov
psrad
and
ja
mov
shl
and
jnp
ds
addr16
pop
adc
pop
jle
out
in
mov
div
xor
imul
test
mov
fdiv
out
int
addr16
push
or
xchg
jge
leave
or
sbb
jl
and
cdq
daa
ds
mov
pusha
push
nop
pusha
fwait
mov
xchg
repz
jl
sub
iret
call
test
aaa
out
aas
or
lds
xor
dec
test
icebp
adc
dec
aas
mov
sbb
popa
mov
ret
dec
xchg
xor
movs
inc
inc
xchg
add
scas
stc
sub
pop
(bad)
jle
sub
inc
repz
inc
aaa
js
sub
push
ror
push
push
imul
adc
add
lock
loop
pop
repnz
outs
xchg
push
sti
test
movs
in
jecxz
retf
inc
sar
mov
push
push
retf
ret
repnz
push
mov
push
out
push
lods
fdiv
ja
xor
jnp
scas
lahf
mov
test
cmp
movs
mov
mov
mov
rol
or
das
pop
gs
or
cmp
xor
xlat
movs
or
jge
push
gs
test
shr
add
leave
movs
sti
jle
mov
sar
jo
mov
xchg
jo
int3
cmp
jne
jp
cmps
sti
cld
stos
cdq
or
test
jae
jmp
mov
adc
and
pop
dec
pop
scas
dec
cdq
shl
scas
das
inc
mov
push
in
sub
adc
cmps
mov
icebp
sub
(bad)
mov
dec
int3
imul
(bad)
add
or
ret
mov
add
xor
cmp
enter
pop
pop
lods
imul
repnz
push
mov
sbb
lods
fldenv
lahf
push
(bad)
jne
dec
cmc
adc
nop
cmps
and
fiadd
inc
adc
mov
mov
fild
jecxz
rcl
pop
fistp
xlat
mov
ins
jns
je
pushf
xor
xchg
xor
outs
cmp
adc
sub
jg
mov
jne
lock
(bad)
push
inc
movs
fwait
inc
test
outs
shl
pop
lahf
mov
cmp
lock
in
dec
popf
push
addr16
xor
int3
inc
(bad)
xlat
and
inc
in
aas
jmp
outs
sbb
and
out
out
repz
xchg
push
push
push
add
add
fldenv
xor
adc
sahf
or
ja
jle
inc
jbe
mov
hlt
rol
mov
push
dec
ins
aam
push
dec
lea
mov
and
aad
add
push
das
stos
fild
pop
and
inc
nop
sbb
int3
xchg
fidiv
xchg
pop
(bad)
xor
inc
rcl
daa
sub
rol
and
sbb
scas
jne
and
mov
mov
mov
adc
mov
and
xchg
push
sbb
call
call
push
jae
xor
inc
lods
test
push
or
adc
out
mov
mov
test
add
xchg
fwait
inc
mov
mov
dec
daa
data16
mov
adc
call
ficomp
(bad)
cmp
pop
loopne
mov
sbb
push
dec
inc
or
inc
xchg
pushf
in
push
push
xor
mov
fisttp
jo
jp
sub
xchg
add
out
and
test
adc
js
fs
cmp
pop
jg
jbe
or
pop
test
pop
repz
sbb
enter
jp
push
cmp
pop
xchg
mov
test
inc
movs
jle
loop
xor
in
cmp
popf
push
movs
call
lea
inc
or
out
(bad)
mov
push
pop
repnz
or
push
pop
mov
cs
jne
stos
add
inc
mov
and
enter
lds
pop
xchg
sbb
mov
sbb
mov
xor
mov
jno
shr
jp
push
adc
mov
mov
xor
add
adc
inc
push
pop
add
bound
mov
cmp
or
out
jb
(bad)
xor
imul
inc
test
inc
add
push
mov
retf
push
enter
push
fwait
xor
int
push
mov
rcl
xchg
jns
stos
and
mov
jne
or
and
(bad)
ret
hlt
into
cmp
xor
sbb
aad
jmp
call
fld
or
inc
test
or
add
ins
repnz
cmp
jmp
in
xor
lods
mov
sub
jge
push
mov
jp
xchg
in
and
and
xor
test
push
xchg
scas
sub
ret
aas
movs
jge
sub
pop
test
or
and
test
test
xor
xor
mov
pop
push
(bad)
fadd
jb
cmp
ficomp
jmp
inc
jmp
jp
ret
dec
lods
imul
add
adc
mov
mov
inc
push
lods
ins
inc
mov
adc
add
jge
mov
mov
adc
retf
in
cwde
loopne
adc
inc
mov
std
leave
push
mov
mov
dec
bnd
push
lock
inc
retf
mov
push
test
mov
dec
xor
jae
pop
call
sti
(bad)
inc
jae
in
loopne
dec
inc
pusha
enter
adc
hlt
(bad)
cmp
mov
sbb
push
push
push
mov
outs
pop
push
scas
aam
and
(bad)
bound
mov
outs
sub
daa
adc
and
xor
pop
sbb
add
mov
jne
fidivr
shl
cmp
mov
xlat
test
lods
in
(bad)
adc
outs
jae
addr16
aam
ss
pop
inc
out
mov
jecxz
sub
dec
and
es
mov
imul
hlt
cvtps2pi
out
cdq
jmp
sbb
leave
xor
dec
addr16
lods
dec
movs
sub
adc
mov
cwde
repnz
jp
fist
ret
jge
je
mov
mov
test
and
in
cmp
(bad)
adc
inc
xchg
push
cs
cmp
rcl
inc
cmp
mov
movs
push
sbb
and
jno
add
lods
or
add
mov
fist
imul
rcl
xchg
sbb
mov
pop
sbb
lahf
dec
and
neg
add
jg
mov
pop
fisub
fiadd
outs
pop
add
or
repz
lock
sub
setp
aam
and
enter
fsub
pop
xlat
outs
lahf
push
mov
mov
jbe
aam
pop
mov
push
fdivr
xor
arpl
xor
mov
inc
xchg
daa
dec
cmp
movs
xchg
push
mov
daa
call
mov
cmp
pand
xchg
push
ror
push
adc
xchg
sub
dec
adc
cmp
inc
stos
pusha
rcr
xchg
imul
jecxz
xchg
imul
cli
xchg
mov
lock
sub
cmps
xlat
hlt
in
inc
cmc
xchg
sub
sub
iret
popf
pusha
lahf
jmp
inc
shl
fsqrt
out
retf
xor
ss
cdq
nop
sbb
(bad)
into
outs
push
sar
or
pop
gs
add
mov
aam
movs
adc
loope
mov
fs
popa
popa
mov
mov
xor
imul
clc
add
loope
sbb
xchg
sbb
sub
int
cmp
mov
sti
test
push
loope
cmp
mov
int3
xor
adc
add
call
jo
pop
and
ret
sbb
add
iret
ret
fucomp
jns
cmp
cwde
pop
pop
xchg
int
retf
jp
xchg
call
xchg
fmul
sub
pop
in
mov
inc
imul
call
or
xchg
fild
push
jb
push
adc
ret
ins
pop
in
push
sub
ficom
mov
push
imul
inc
xor
sub
xlat
xor
mov
fisttp
xor
lods
loopne
stc
mov
ins
xchg
push
mov
sub
sbb
adc
and
xchg
adc
sub
xor
bound
inc
dec
jmp
rcl
cdq
shl
fistp
dec
pop
xchg
mov
pusha
and
add
xchg
ret
movs
(bad)
sub
jnp
sbb
sahf
sub
jbe
or
aaa
scas
or
inc
mul
retf
inc
cmps
mov
es
(bad)
call
ret
sub
inc
mov
stos
fcmovnb
cmps
hlt
in
cdq
shl
cli
test
cwde
test
in
jecxz
and
out
dec
and
push
fnsave
inc
fld
sbb
or
dec
pop
ins
repz
leave
lock
aaa
push
ins
mov
(bad)
adc
add
retf
fs
neg
add
in
pop
or
cmps
cmp
push
js
popa
stos
push
dec
jne
push
inc
in
loopne
pusha
mov
retf
ins
popf
add
and
cmp
add
jns
test
sbb
jmp
dec
stc
outs
jge
ins
adc
in
sbb
outs
int3
cli
xchg
rol
fsub
inc
les
xchg
jl
mov
push
imul
xchg
jmp
push
xor
in
les
call
and
scas
(bad)
aam
xchg
push
mov
dec
jne
add
xchg
stos
retf
jns
je
shr
or
scas
sub
cmc
loope
xchg
pop
rcr
daa
cld
inc
add
xor
fidivr
push
or
inc
adc
ins
mov
shl
inc
add
call
scas
cmp
addr16
popa
adc
div
jle
int
fs
call
nop
dec
ins
jg
ja
stos
movs
ficom
aad
in
sbb
push
std
iret
fsub
inc
pop
stos
lds
xlat
leave
data16
sbb
add
outs
sbb
adc
out
mov
mov
xchg
out
sub
mov
mov
or
gs
scas
lods
sbb
movs
int
fsub
cmps
hlt
ja
mov
and
js
lahf
adc
ds
or
pop
dec
mov
outs
leave
sub
cwde
(bad)
in
fucomp
mov
sub
call
popf
shl
icebp
sub
pop
push
adc
push
out
std
pop
mov
out
popf
dec
sbb
fild
lock
xlat
adc
xchg
cmc
(bad)
xor
jecxz
call
bnd
jns
shr
jae
and
stos
jnp
and
ficom
mov
lahf
shl
dec
loope
pop
inc
pop
movs
dec
add
cmp
mov
sar
scas
xlat
mov
dec
jae
scas
mov
adc
test
sbb
je
xor
aas
mov
movs
fstp
or
pop
sub
jns
mov
int
mov
xlat
loope
out
shr
shl
fisubr
fadd
jmp
xlat
repnz
(bad)
lock
sub
or
jbe
(bad)
xor
test
stos
cld
(bad)
jmp
sar
push
rol
call
pop
sub
imul
outs
xor
xor
jge
int3
icebp
xchg
out
add
retf
and
out
sub
retf
or
xor
lods
ins
test
cmp
sbb
hlt
outs
mov
push
retf
xor
inc
xchg
mov
outs
imul
aam
ror
jb
mov
jno
xor
outs
mov
lods
fwait
or
and
sbb
imul
and
lods
aas
movs
shl
(bad)
popa
out
push
out
or
rcr
call
cli
pop
sub
add
iret
cmp
add
mov
push
fldcw
adc
shl
cmp
xchg
mov
mov
mov
test
or
rol
cmc
out
sub
mov
cmp
add
inc
sub
sbb
out
fcom
in
cs
xor
jns
cmp
pop
push
mov
nop
je
pushf
adc
test
movs
jae
inc
or
inc
icebp
test
dec
test
cwde
mov
(bad)
cmc
mov
pop
mov
and
dec
fs
xor
adc
mov
xchg
jbe
adc
mov
mov
fstp
dec
mov
int
push
mov
nop
mov
xlat
pusha
test
push
mov
sub
movs
in
and
and
or
in
es
push
adc
and
retf
mov
mov
and
xchg
int
enter
popf
sub
pusha
xor
mov
or
jmp
mov
inc
jb
add
push
pop
es
inc
stos
das
xor
and
pop
pop
cld
jae
in
xchg
mov
pop
xor
push
pop
scas
in
(bad)
cmp
pop
or
int3
scas
sub
lock
inc
sbb
popf
test
jnp
mov
hlt
mov
dec
stc
mov
fcmove
and
aas
out
mov
out
ret
outs
xchg
imul
cmp
movs
sbb
mov
and
adc
(bad)
int
je
gs
ror
mov
lods
xchg
repnz
div
lds
ins
ins
std
scas
hlt
add
ss
mov
pop
dec
fs
es
loop
mov
das
push
mov
inc
hlt
adc
mov
mov
sub
cwde
adc
and
dec
mov
mov
fsub
push
ffreep
sbb
test
addr16
clc
dec
movs
ins
lods
sti
repz
adc
rol
add
mov
out
pop
sbb
jl
sbb
xchg
call
call
(bad)
pop
or
inc
xor
mov
mov
adc
sbb
xchg
fwait
pop
les
fnsave
neg
cmc
mov
mov
repz
pop
adc
stos
pop
in
push
pop
retf
gs
add
imul
cmc
in
data16
popf
dec
jecxz
aaa
inc
add
mov
rcl
pop
outs
dec
jb
mov
stos
cdq
jecxz
cmp
pop
mov
imul
popf
jl
xor
leave
xchg
adc
stos
xchg
sbb
mov
mov
dec
nop
jecxz
sub
les
sbb
mov
cld
dec
inc
pushf
and
pop
mov
call
mov
inc
dec
xchg
sbb
inc
mov
push
ss
fdivr
icebp
(bad)
repnz
movs
inc
and
repz
sti
cdq
cmp
mov
ret
add
imul
sbb
cmp
xchg
cmps
add
jo
mov
mov
jbe
mov
mov
hlt
f2xm1
ror
loop
(bad)
push
sbb
bound
cmp
js
adc
sti
jl
mov
mov
movs
xor
shl
out
dec
ret
sbb
stos
mov
push
out
test
push
and
pop
sub
push
push
dec
mov
xchg
jnp
shl
pop
out
cdq
mov
cli
clc
gs
mov
dec
and
nop
retf
mov
loopne
ret
mov
popa
jl
adc
pushf
dec
shr
xor
jmp
pop
les
mov
outs
adc
aad
int3
xchg
(bad)
mov
mov
xchg
and
mov
ret
or
xchg
cdq
out
lods
pushf
jae
push
ins
mov
push
mov
adc
test
jge
cmps
bound
mov
dec
mov
xchg
lods
mov
aaa
stos
jns
sbb
pushf
sbb
mov
das
fcmovbe
mov
out
inc
push
int
mov
popa
ss
push
jns
xchg
mov
imul
mov
xor
add
movs
mov
xor
and
ins
jle
jbe
jae
mov
outs
arpl
xor
pop
lahf
div
mov
mov
xchg
into
imul
pusha
loop
fs
int3
add
call
cmps
daa
bound
and
call
add
bnd
imul
xchg
ss
arpl
(bad)
dec
shl
dec
pop
dec
sar
xor
rcr
and
jbe
nop
mov
add
cmp
sub
pushf
(bad)
mov
mov
repz
jecxz
ss
sub
dec
cmp
aas
jle
icebp
or
add
inc
or
dec
push
jp
jp
loope
jecxz
dec
test
sub
es
dec
ror
dec
aas
retf
mov
push
sbb
std
(bad)
jmp
inc
adc
mov
jmp
imul
fist
add
aas
in
adc
add
inc
cmp
adc
sti
xor
mov
add
popf
retf
xchg
pop
nop
loope
je
icebp
sbb
(bad)
sub
shl
(bad)
xchg
lock
push
enter
xchg
lods
ror
aas
gs
aaa
(bad)
xlat
cmp
out
push
mov
mov
stos
(bad)
jmp
ins
jnp
test
inc
pusha
inc
dec
xor
lahf
xchg
inc
sbb
loope
push
dec
fdiv
rcr
push
fdiv
into
mov
mov
aad
add
xlat
(bad)
arpl
fidivr
cmp
jb
rep
mov
jle
dec
cld
push
sahf
cmp
xchg
(bad)
mov
gs
xchg
and
mov
push
sbb
fsubp
jg
sub
push
in
movs
call
test
shl
xor
jg
fimul
xlat
lahf
clc
jp
lock
fwait
dec
cwde
data16
push
scas
sbb
arpl
pop
out
mul
das
retf
fdiv
(bad)
xchg
fwait
loop
movs
sub
xor
dec
(bad)
push
and
test
ins
loope
or
pop
or
mov
lahf
mov
aaa
test
jmp
xchg
js
shr
mov
enter
aam
retf
ror
std
ret
cli
and
outs
addr16
inc
or
xor
xor
aas
xor
push
mov
lods
dec
ret
bound
pop
les
xchg
dec
sbb
mov
popf
cmp
adc
jmp
daa
jnp
pop
fstp
add
and
mov
sbb
icebp
cmp
mov
and
pusha
ja
xchg
sbb
or
add
popf
push
add
sbb
jg
rcl
inc
addr16
fst
push
inc
xor
cmp
sub
(bad)
repz
pop
rcl
cld
dec
push
sahf
sbb
(bad)
xchg
sub
inc
jmp
jl
out
ror
sub
or
call
test
(bad)
rol
in
out
pop
jg
and
leave
test
mov
push
fs
jecxz
iret
jecxz
sbb
dec
and
out
jnp
cld
aam
jle
stos
xchg
adc
rol
sub
push
or
jecxz
cdq
mov
mov
lea
aaa
push
xchg
outs
into
and
jmp
mov
addr16
sub
call
mov
push
sub
into
push
inc
in
repz
dec
ret
jmp
sti
lahf
mov
push
sar
jl
jbe
mov
cmp
mov
test
std
mov
shl
add
cli
js
jmp
repz
ja
(bad)
adc
arpl
mov
xor
pushw
icebp
push
pop
inc
mov
ror
and
jecxz
dec
in
dec
int3
(bad)
cmps
stc
aam
cmp
xor
ins
adc
dec
or
cmps
ret
mov
sub
std
cmc
push
(bad)
pop
add
cwde
into
pop
inc
sub
sub
hlt
cs
outs
adc
fstp
neg
int
imul
and
mov
out
arpl
xchg
ja
mov
jecxz
sub
inc
in
jge
mov
retf
cmp
mov
mov
stos
int
repnz
jl
aad
inc
mov
call
dec
arpl
test
movs
add
das
int3
cmps
dec
sbb
in
in
sbb
arpl
add
sub
or
xor
pop
aad
sar
stos
push
leave
retf
cdq
add
push
cdq
(bad)
setbe
movs
jo
ins
aaa
cwde
std
ret
and
sbb
jne
mov
jg
jmp
add
push
xor
pushf
inc
and
sbb
pushf
ret
mov
div
in
out
push
imul
and
jns
es
out
or
xchg
mov
stos
or
mov
jbe
cmps
sub
cmp
sahf
popf
int
xchg
(bad)
ins
inc
cmovne
jle
jg
pop
adc
cmc
sub
sub
mov
and
sbb
add
pop
stos
rol
sbb
fs
jae
aas
stos
push
fist
cli
and
inc
fdiv
and
int
xor
push
loop
mov
and
mov
call
movs
pushf
retf
(bad)
push
cwde
or
ror
jge
enter
xor
xor
popf
mov
add
ds
fld
adc
adc
push
jns
sub
mov
push
(bad)
mov
jb
push
jmp
mul
jecxz
xlat
(bad)
loopne
into
cwde
lahf
mov
or
ins
outs
adc
mov
mov
pop
inc
(bad)
stos
scas
shl
fidivr
cmp
push
ss
imul
mov
hlt
adc
push
inc
xor
xor
repz
out
(bad)
iret
lahf
adc
xchg
in
xor
mov
mov
test
outs
xor
inc
or
push
stos
mov
mov
shl
retf
jno
fadd
mov
mov
test
pop
cmp
mov
loope
sti
mov
mov
mov
rcl
mov
push
push
shl
push
xchg
sbb
lods
cmps
xor
jmp
adc
ss
mov
jne
adc
dec
js
and
in
xor
inc
xor
scas
mov
arpl
test
pop
rcl
sti
mov
and
aas
aad
test
add
dec
cmc
xchg
out
cwde
in
std
dec
mul
jno
push
mov
sti
(bad)
mov
movs
mov
fidivr
rcl
movs
or
mov
test
sub
retf
sbb
mov
adc
test
fcmove
arpl
stos
lahf
push
jae
and
test
and
sub
cmp
dec
or
xlat
pop
xlat
pop
outs
lock
div
jae
or
inc
mov
aaa
cmp
pop
leave
mov
nop
int
retf
daa
add
sub
call
aaa
rcr
das
js
sub
sbb
aam
inc
stc
mov
xchg
retf
call
sbb
mov
mov
fbstp
adc
hlt
ror
cdq
xor
hlt
push
xor
ror
sahf
or
inc
jl
pop
mov
sbb
fwait
adc
leave
jge
repz
xor
call
fdiv
and
popf
dec
jmp
je
push
cmps
xchg
cwde
pop
or
or
lods
pop
mov
push
stos
jle
mov
push
or
or
int3
scas
ficomp
int
(bad)
fcmove
fistp
dec
sbb
or
(bad)
xor
push
(bad)
aaa
retf
jmp
mov
mov
mov
cmp
ja
mov
ins
inc
shr
repnz
je
adc
jb
xor
mov
ins
aam
inc
mov
popf
retf
sub
rcr
in
mov
inc
jmp
mov
cmps
pop
cmp
scas
push
mul
adc
pop
mov
fadd
loop
ss
arpl
mov
les
pusha
mov
xor
lods
push
jl
push
test
adc
pop
cmp
fstp
daa
or
dec
or
popa
aas
repz
push
test
jp
sbb
test
repnz
repz
push
ds
cdq
fld
jns
cmp
cdq
test
cmps
inc
ins
dec
ins
lods
adc
sub
fwait
sahf
mov
pop
inc
sbb
pop
mov
cli
jmp
in
cld
(bad)
jge
hlt
leave
or
inc
xor
std
arpl
test
popa
sbb
hlt
les
cwde
movs
std
cmp
pop
bound
div
add
(bad)
stos
cli
mov
mov
push
mov
jae
call
call
push
aam
scas
retf
fdivr
sub
mov
xor
mov
lea
mov
aaa
int
pop
mov
jo
inc
call
mov
xor
sbb
push
sub
leave
or
mov
xor
jmp
into
inc
test
sbb
pop
icebp
jp
xor
in
jno
sahf
cmp
mov
stos
popf
mov
pusha
(bad)
fistp
cmc
sti
xor
add
add
in
lahf
dec
enter
out
add
or
stos
pop
inc
ror
test
jg
sti
pusha
inc
jg
imul
push
stos
adc
sbb
fld
xor
push
ins
and
mov
bswap
xchg
xchg
and
sub
jge
test
cdq
sbb
cmp
sub
daa
jl
ja
cmc
int
pop
xlat
pop
(bad)
add
jno
jb
mov
cwde
fiadd
sbb
cmp
in
jb
rcr
lods
sahf
add
addr16
mov
repnz
cs
cli
jns
int
lea
inc
(bad)
or
sbb
sub
push
aas
and
les
mov
push
adc
rcr
or
lods
cs
pop
xchg
mov
cmp
or
pop
test
push
(bad)
rcr
and
sub
push
nop
icebp
rcl
mov
xchg
add
in
outs
into
outs
mov
hlt
scas
jmp
in
icebp
push
in
mov
pop
sbb
inc
adc
sbb
or
enter
mov
mov
add
sbb
call
hlt
adc
or
call
xor
jns
jmp
jcxz
daa
loop
lds
pop
arpl
xlat
dec
out
or
jbe
cmp
ret
mov
call
mov
pop
test
repnz
ja
(bad)
sahf
and
arpl
ror
fidiv
fsubr
sbb
fist
jl
mov
shl
retf
pop
enter
fadd
sbb
cmp
ins
or
and
cmc
dec
push
arpl
mov
leave
xor
add
(bad)
sbb
cmp
fsubr
repnz
or
stos
loopne
jns
dec
xor
arpl
repnz
idiv
push
dec
ret
(bad)
(bad)
mov
sbb
aad
xlat
clc
daa
stos
pop
(bad)
hlt
xchg
push
push
(bad)
xchg
fwait
and
jmp
jl
sbb
aaa
adc
push
mov
mov
retf
dec
mov
mov
pop
loopne
jle
add
cmp
lock
retf
or
or
ds
stos
nop
dec
(bad)
mov
xchg
imul
aaa
lock
cmp
mov
sub
jbe
pop
adc
or
adc
sub
jbe
outs
xlat
cmc
popa
enter
push
jne
xchg
gs
sub
add
cli
pop
pop
inc
adc
hlt
and
mov
jmp
lods
ficom
mov
leave
std
inc
and
and
in
adc
mov
push
xchg
fs
cmp
jge
(bad)
fwait
push
test
mov
add
in
imul
out
and
jno
fsub
(bad)
push
fidiv
xor
outs
loope
fsubr
mov
jns
jg
or
jl
mov
loopne
mov
test
push
xchg
xor
outs
out
sub
mov
aam
push
xchg
add
adc
cdq
fidiv
call
aad
cmp
adc
sahf
mov
(bad)
ins
call
push
jp
in
shl
lahf
(bad)
jmp
cmp
pop
and
adc
inc
inc
(bad)
repnz
add
aad
lahf
or
mov
repnz
jp
sub
cwde
mov
rcl
add
leave
add
nop
jg
adc
lds
mov
sbb
cmp
pusha
xchg
inc
cmp
adc
cli
ins
test
push
pop
mov
jl
daa
pop
xor
inc
xor
xchg
out
inc
sbb
sub
mov
add
cdq
call
pop
es
push
outs
aaa
pusha
jno
sbb
lods
retf
iret
dec
mov
add
xchg
cmc
ss
and
pop
jmp
cmp
data16
sbb
pop
jecxz
push
and
inc
test
dec
loopne
aaa
ffreep
ret
or
or
daa
sub
xor
pop
or
push
cdq
or
sbb
std
push
push
(bad)
dec
push
mov
test
mov
dec
and
xor
mov
push
(bad)
pop
or
sub
xor
dec
inc
stos
inc
int
xchg
ja
sbb
adc
cmp
xor
mov
mov
sub
imul
add
mov
jae
daa
jecxz
inc
test
nop
mov
dec
and
popa
mov
sub
jmp
jge
add
mov
sub
xchg
push
pop
dec
cmp
(bad)
xchg
pusha
pop
adc
call
pop
or
data16
push
xchg
inc
int3
shl
je
std
xchg
inc
inc
pusha
xor
out
adc
int3
pusha
mov
sar
add
or
xor
mov
pop
shl
xchg
mov
or
loope
jns
out
mov
sbb
jmp
test
sub
add
jb
shl
push
xor
int
xlat
push
idiv
or
xor
loopne
aad
push
(bad)
sbb
sahf
sub
xor
mov
inc
mov
xchg
dec
sbb
cmp
pop
inc
sub
inc
mov
int
jg
jmp
imul
mov
stos
add
fld
stos
push
in
add
adc
std
stos
ds
out
fistp
pop
pop
mov
cmp
push
fwait
mov
mov
pop
inc
mov
sbb
not
int3
cmp
movs
bound
retf
adc
in
add
mov
jbe
repz
xor
adc
inc
pushf
gs
addr16
adc
in
lds
ds
or
push
pause
enter
mov
cmc
add
cmp
push
jg
mov
mov
pop
cmp
into
arpl
jns
pusha
imul
cmp
pop
ins
adc
stos
icebp
pop
jmp
retf
call
iret
xor
aam
ja
mov
cmps
xchg
pop
fld
test
dec
fmul
or
adc
pop
out
cmp
xchg
inc
or
xchg
xchg
repnz
idiv
hlt
out
stc
lock
push
dec
lea
cmp
sbb
cmp
sar
mov
aas
clc
ficom
fidivr
pop
call
jmp
sbb
into
mov
cmp
fwait
xor
cmp
dec
cmp
aam
and
jecxz
xchg
out
mov
adc
push
pop
or
add
jno
adc
lods
push
daa
mov
cmp
pusha
call
jno
mov
lahf
out
out
inc
retf
aam
mov
popa
sub
sbb
out
mov
push
jmp
mov
inc
push
mov
adc
cs
push
adc
stos
dec
rcr
enter
dec
sub
adc
pushf
daa
retf
test
ja
pop
mov
stos
bound
adc
cld
mov
jp
arpl
in
or
in
and
xor
scas
icebp
pushf
mov
(bad)
fisub
mov
push
mov
mov
scas
lock
dec
push
dec
mov
sub
mov
push
stos
sbb
add
xor
sti
les
or
call
test
(bad)
mov
cmps
out
and
arpl
mov
das
mov
mov
fimul
mov
inc
xchg
inc
int
or
jae
mov
adc
mov
inc
or
(bad)
sahf
mov
dec
xchg
neg
sbb
loop
dec
scas
lldt
inc
cmp
cld
and
test
mov
jp
aaa
cmovl
mov
pop
jno
and
jno
shr
cdq
xor
shl
imul
in
shl
sbb
mov
sub
xlat
ins
inc
call
adc
retf
out
int3
push
adc
bound
data16
shr
push
jg
test
call
mov
jo
xor
or
scas
out
in
jmp
add
push
shl
pop
leave
mov
jge
sub
bound
adc
es
aam
lods
and
xlat
daa
push
push
adc
out
or
out
adc
loop
jecxz
sbb
inc
and
rcl
sbb
adc
fs
ins
out
jns
jp
(bad)
int3
fs
loope
push
addr16
pop
mov
push
jmp
call
mov
aam
les
fmul
int3
cli
mov
mul
ret
sti
mov
into
xor
clc
or
int3
mov
inc
movs
test
stc
icebp
cld
shr
lods
ret
mov
scas
jnp
cmc
adc
fdivr
loopne
jmp
out
mov
(bad)
mov
inc
jl
popf
xchg
jmp
pop
push
dec
in
call
inc
mov
out
dec
(bad)
std
sbb
jno
bextr
add
and
sbb
pop
jb
repnz
or
adc
ins
xchg
clc
and
add
nop
les
leave
and
movs
jg
pop
shl
fwait
pop
loopne
int
add
mov
pushf
pop
scas
pop
jle
sti
fprem
ds
xchg
and
out
movs
push
or
dec
push
cmp
push
arpl
test
dec
repz
or
push
pop
adc
and
inc
adc
out
and
inc
sbb
(bad)
mov
dec
sbb
fdiv
aas
xchg
mov
pushf
xchg
dec
daa
xor
xor
pop
or
mov
out
pop
xor
and
xor
xor
pop
out
popf
repnz
pop
xchg
mov
mov
ja
xchg
pop
stos
sub
jns
jnp
mov
add
cmp
cmc
mov
pop
mov
cmp
leave
stc
xchg
and
cmps
inc
cmp
jecxz
jo
adc
sub
outs
cdq
and
addr16
xor
enter
fwait
mov
or
xchg
sub
xchg
out
dec
mov
mov
jle
or
test
push
mov
sbb
pop
outs
inc
sub
iret
fnsave
div
arpl
ins
sbb
call
push
lods
repnz
adc
xor
(bad)
repz
into
mov
xor
iret
cmp
movs
jo
cmp
sbb
gs
add
mov
push
movs
mov
push
sbb
inc
in
push
div
cmovle
jno
mov
(bad)
pop
add
xor
sbb
adc
sti
test
dec
xchg
outs
stos
leave
cli
mov
push
inc
push
ins
push
mov
cld
cmp
inc
mov
aaa
cdq
je
add
xchg
jb
and
dec
sbb
mov
pop
imul
loope
mov
jge
loopne
push
cmc
inc
push
xchg
mov
mov
mov
js
cmps
cmps
bound
sti
loopne
rcl
lods
bound
stc
outs
movs
jp
jae
xor
xchg
outs
and
dec
mov
sbb
cli
jp
pop
jns
pop
add
es
pop
push
push
test
icebp
push
mov
adc
pop
mov
inc
mov
mov
loopne
inc
test
cdq
fdiv
xchg
popf
dec
cs
adc
sub
dec
int
(bad)
in
push
hlt
sbb
repz
repz
call
daa
or
sub
into
repz
jle
jmp
test
mov
push
add
call
(bad)
scas
pop
lds
rol
inc
mov
sbb
das
call
popa
icebp
sbb
pop
mov
dec
dec
xchg
mov
cmp
aaa
(bad)
jge
jno
mov
pop
(bad)
push
pop
cli
sahf
inc
or
into
loop
push
pushf
hlt
stos
or
jl
push
xchg
into
popa
iret
mov
lock
jle
fwait
add
enter
jecxz
inc
jns
push
cmps
inc
in
pushf
in
xor
mov
push
(bad)
cli
in
and
lahf
and
adc
mov
jmp
loop
and
daa
jbe
xchg
mov
adc
fisubr
xchg
dec
and
adc
cmp
loopne
add
add
in
loope
frstor
mov
pushf
or
xor
and
fsub
pop
lahf
sub
(bad)
dec
dec
xor
mov
into
into
add
repz
cli
xor
mov
adc
adc
or
inc
sbb
dec
retf
pushf
sub
out
mov
and
idiv
cld
out
sbb
mov
mov
out
mov
mov
mov
retf
mov
stos
jns
sar
sar
fsubrp
xchg
movs
push
jbe
xchg
mov
cmp
lock
adc
inc
add
das
lods
int3
fcomp
add
sbb
push
mov
pushf
jle
test
dec
jmp
ins
leave
xor
inc
dec
and
xchg
adc
sbb
push
cmp
mov
lods
sbb
adc
jno
push
mov
int3
(bad)
scas
sub
div
pop
cmp
test
adc
pushf
sti
push
jnp
leave
daa
cs
(bad)
(bad)
dec
std
div
mov
stos
push
aam
jl
and
ret
sub
and
cmps
sub
xor
test
daa
pop
movs
ins
and
addr16
add
mov
sbb
cmps
cmp
mov
sub
xor
call
cmp
dec
jecxz
aad
outs
inc
xlat
sbb
fimul
jmp
adc
adc
fadd
dec
inc
pusha
cmps
inc
push
aam
mov
pop
pop
cmp
fdivr
popa
mov
dec
xchg
mov
inc
lds
sbb
fisub
lods
mov
sbb
fisub
push
push
js
mov
adc
stos
push
push
cld
int3
cld
pop
test
xor
jmp
mov
mov
stc
hlt
or
fisttp
or
mov
loope
mov
mov
pop
inc
call
pop
push
mov
lds
dec
jbe
or
jmp
mov
inc
inc
stos
mov
sbb
sub
adc
pop
mov
push
fisttp
loope
icebp
out
push
fcmovnu
jmp
pop
add
dec
imul
sub
int
jbe
dec
mov
push
pop
stos
adc
loop
or
dec
xlat
in
(bad)
pop
mov
and
aas
fdiv
pusha
mov
sub
push
push
sub
outs
sbb
test
addr16
jae
cmp
xor
mov
int3
sahf
push
and
arpl
push
lods
dec
mov
sti
ror
sbb
outs
enter
jmp
inc
mov
sbb
fisttp
(bad)
stc
cdq
jbe
add
fs
loop
aam
adc
(bad)
stc
inc
mov
in
mov
aam
mov
fcmovbe
jmp
pushf
mov
dec
dec
lock
fist
inc
sbb
aam
in
sub
or
push
jo
stos
push
fmulp
jle
js
pop
dec
icebp
jecxz
shr
cmp
ror
adc
jle
clc
cli
push
in
jp
sub
in
cmps
das
and
cli
out
(bad)
pop
xlat
xor
es
or
fistp
out
fnstsw
repz
jge
arpl
pop
jmp
inc
cmp
movs
mov
xlat
pop
xchg
push
mov
dec
push
xlat
fbstp
jp
leave
pusha
dec
sbb
gs
push
xchg
lahf
dec
adc
xchg
and
mov
add
pusha
sbb
in
jae
inc
xchg
mov
pop
sbb
(bad)
mov
loopne
test
lods
sbb
lahf
mov
shl
outs
lock
sbb
sbb
popf
xchg
jbe
(bad)
lds
xchg
xchg
pop
cmp
bound
bound
mov
sbb
push
fdivr
mov
shl
mov
jne
in
mov
push
mov
jmp
(bad)
jle
iret
pop
ins
pop
mov
aaa
cwde
jmp
call
repz
nop
mov
lods
dec
pop
mov
push
repnz
push
imul
arpl
adc
adc
loope
add
int3
lds
jmp
mov
and
cmp
sbb
dec
xchg
mov
push
mov
dec
pop
adc
fdiv
call
mov
cmp
aad
pop
xchg
cld
jl
lods
fdiv
clc
nop
sbb
test
mov
jmp
cli
xor
movs
push
mov
cmps
pop
adc
(bad)
push
mov
add
cmp
(bad)
sti
outs
mov
jo
in
fimul
xchg
lods
aaa
cmp
mov
lock
xlat
retf
adc
cli
dec
cmps
mov
mov
and
fdiv
fcomip
inc
jae
stos
push
stos
mov
push
rcr
inc
sub
and
fcmovu
repnz
call
dec
and
adc
fdivr
and
xor
fld
xchg
mov
mov
adc
retf
js
call
mov
jo
cmps
and
scas
xchg
data16
xchg
fimul
outs
mov
das
mov
mov
mov
enter
xor
adc
lea
fsub
jbe
dec
test
repz
fist
xchg
cmp
sti
leave
inc
xor
loop
test
or
inc
jnp
pop
lea
stos
mov
(bad)
lods
mov
sub
cld
pop
loope
cmp
sbb
mov
ret
xchg
mov
ins
and
inc
push
push
xor
icebp
add
addr16
push
jbe
out
clc
mov
mov
out
(bad)
les
push
mov
sub
sbb
sub
retf
xor
(bad)
dec
sbb
fcmovbe
pop
ins
les
lock
int
test
mov
or
mov
mov
mov
lea
xor
mov
cmp
cmp
push
aam
test
adc
stc
int
mov
call
jb
add
adc
jo
aad
or
fs
mov
das
lahf
mov
movs
mov
loope
imul
or
xor
sub
or
and
and
mov
pop
sahf
fsin
xchg
call
xchg
mov
push
cmp
icebp
pop
or
mov
mov
adc
ds
xor
add
ss
xor
int
xor
mov
jns
push
push
call
dec
mov
mov
inc
jmp
dec
push
sbb
mov
out
pop
mov
push
and
jnp
sub
xchg
je
sub
inc
cmp
add
rol
push
cwde
inc
mov
sub
out
sub
jb
addr16
cdq
shr
jg
loopne
xchg
(bad)
dec
lods
cmp
aas
aaa
das
pusha
in
daa
fimul
mov
jbe
sbb
test
fwait
jg
test
jnp
and
in
pop
pop
cmp
jns
cmp
mov
mov
xchg
(bad)
sub
cmp
push
sahf
(bad)
dec
mov
ficom
inc
int3
jmp
or
mov
inc
shl
push
leave
repnz
mov
icebp
or
outs
pop
jge
movs
pop
call
je
cmp
out
push
pop
aad
lahf
out
xchg
xor
push
(bad)
aas
lock
jmp
jae
fcmovne
push
rcl
test
out
enter
jno
aas
jl
and
ret
sbb
test
mov
ins
and
imul
inc
and
fdivr
(bad)
ror
adc
(bad)
popf
cmp
sub
ins
stos
ror
jne
loope
aaa
mov
mov
sti
push
dec
mov
jbe
sbb
mov
aad
mov
(bad)
js
imul
and
scas
push
cmp
out
pop
sub
(bad)
into
pop
sub
xlat
out
arpl
xor
add
xchg
push
mov
jmp
mov
mov
sar
das
inc
jnp
pop
nop
adc
addr16
cli
es
retf
ror
mov
out
jnp
test
xchg
repz
in
sbb
mov
retf
stos
icebp
push
mov
xchg
mov
pop
or
or
dec
(bad)
adc
mov
push
repz
in
cmp
push
scas
sbb
daa
sar
adc
adc
lods
fadd
outs
sub
push
mov
add
hlt
pop
jecxz
jle
inc
ja
pop
sub
dec
cld
cmp
jb
neg
inc
inc
push
lds
ins
mov
inc
mov
fmul
or
add
adc
cld
out
(bad)
ret
adc
xor
push
mov
fiadd
out
lahf
fisub
bound
pop
mov
sub
imul
je
push
add
and
or
push
pop
cmps
rol
jl
jl
and
push
lea
jmp
pop
mov
cwde
mov
push
test
sbb
xor
add
push
pop
mov
mov
mov
dec
rcr
pusha
push
sbb
jle
outs
push
ja
and
push
jmp
cs
rcl
mov
neg
mov
mov
jge
push
or
xor
fsubr
mov
std
cmps
scas
aas
fsubr
cmps
inc
dec
mov
adc
clc
push
dec
push
(bad)
push
ds
mov
cmp
jp
sbb
mov
lods
push
arpl
and
xor
shl
dec
pop
test
out
ret
les
jns
pushf
xor
and
push
jbe
adc
add
sub
xor
inc
mov
jmp
sub
or
sub
nop
adc
test
cmp
jp
cwde
pop
xor
mov
not
aaa
mov
jge
push
test
mov
loopne
lock
lea
sub
imul
repnz
adc
lock
sub
rcl
retf
jp
test
push
xor
jp
arpl
xlat
imul
mov
movs
ror
pop
sar
mov
xor
sub
mov
sbb
cmp
imul
pop
mov
aaa
adc
test
mov
mov
mov
adc
push
mov
jmp
dec
xchg
xchg
ds
inc
push
cmp
xchg
xor
mul
push
sti
loopne
sbb
inc
leave
jno
dec
mov
popf
add
dec
ins
scas
mov
mov
psubsb
fcomp
jmp
mov
and
rcr
cmp
dec
sbb
and
in
stc
lds
mov
xchg
addr16
or
fcom
ja
movs
clc
dec
mov
and
jnp
outs
leave
(bad)
xor
push
jmp
call
das
das
int3
stos
dec
dec
cs
pop
ins
sbb
xor
push
xor
jle
icebp
pop
sbb
dec
cmp
mov
pop
int3
jg
xor
or
fwait
(bad)
(bad)
dec
sub
ins
(bad)
mov
jae
push
or
mov
add
dec
sub
cmp
outs
xchg
mov
fist
ret
test
gs
pop
ins
sar
push
mov
(bad)
push
mov
jmp
fst
pop
idiv
xlat
inc
cmp
fnstenv
mov
jne
cmp
fild
ja
cmps
loope
std
inc
adc
jg
jmp
sbb
mov
scas
outs
inc
test
mov
bound
fcom
mov
je
jne
pop
or
push
push
add
sahf
or
cmps
(bad)
hlt
pop
loop
les
adc
(bad)
mov
iret
sbb
imul
pusha
mov
push
iret
ja
xchg
enter
push
imul
mov
or
(bad)
xor
pusha
mov
mov
outs
mov
fs
cmp
cmp
sti
outs
add
sbb
push
ds
xor
test
pop
pusha
or
loope
ficom
cmp
mov
bound
lds
inc
adc
fwait
mov
mov
push
push
push
jecxz
push
bound
xchg
jae
jl
imul
in
dec
dec
and
inc
sub
fsub
in
ss
xchg
pop
push
xchg
or
dec
neg
pop
test
push
into
sar
stos
cmp
(bad)
cld
shr
push
imul
and
and
dec
pop
loopne
xchg
or
push
daa
loopne
jmp
test
cwde
out
pop
mov
pusha
test
inc
ret
push
push
xor
sub
(bad)
aad
ins
std
pop
jb
jmp
sbb
or
add
mov
movs
retf
inc
vmulpd
mov
out
and
sub
mov
add
sbb
adc
call
loope
(bad)
adc
and
call
stos
fld
cmp
mov
jge
sub
je
cmp
jnp
cmp
mov
(bad)
dec
les
imul
dec
dec
cmps
outs
fst
ja
push
sub
test
cmps
jmp
in
lods
push
sub
(bad)
ffree
dec
std
stos
cmps
pop
cmp
sub
mov
xchg
push
sbb
cdq
jmp
xchg
xchg
and
(bad)
enter
and
pop
jmp
std
dec
xchg
test
in
jl
add
repnz
std
adc
adc
retf
dec
std
mov
retf
xor
(bad)
jo
cmp
add
aad
lahf
sub
mov
retf
pop
jmp
mov
add
movs
mov
mov
fld
pop
jmp
mov
(bad)
xchg
rcl
shl
arpl
adc
jl
js
jb
into
mov
push
push
dec
lods
adc
stc
jl
dec
sbb
fidivr
mov
iret
mov
icebp
pop
scas
ins
fmul
push
or
mov
fild
mov
sbb
xor
stc
or
in
xor
outs
add
xchg
fwait
cmp
jne
aam
repz
mov
cli
pop
out
movs
inc
mov
out
sub
cmps
out
mov
popa
test
pop
sar
jns
cmps
js
or
pushf
inc
frstpm(287
xchg
cmp
adc
das
dec
sti
movs
fnstenv
mov
(bad)
ins
pop
pcmpeqb
test
in
mov
mov
stos
mov
jmp
mov
cld
cmps
sub
int3
adc
and
stos
shl
mov
sub
xor
jnp
in
int3
enter
stc
out
imul
pushf
loope
iret
rcl
cli
icebp
enter
rol
adc
scas
(bad)
push
imul
add
fistp
aaa
into
sbb
add
push
dec
dec
retf
xor
mov
cmp
and
hlt
adc
xor
in
retf
dec
in
mov
push
add
scas
sbb
loope
and
mov
xchg
inc
pushf
sub
retf
mov
in
sbb
push
or
ret
scas
inc
adc
xor
ins
aas
mov
mov
lods
push
add
ins
stos
push
das
in
dec
cli
sbb
or
scas
aas
or
stos
cs
sbb
addr16
rcr
xlat
mov
lods
loop
jns
xor
cmp
push
iret
enter
add
ret
jg
int3
aam
mov
outs
mov
push
or
lods
push
jnp
cld
mov
test
shr
movs
shr
mov
test
call
lea
adc
retf
sbb
pop
jmp
mov
je
and
sbb
aas
cmps
push
outs
ror
repz
jne
ficom
mov
xor
adc
mov
outs
lods
pop
push
das
out
test
out
xchg
jp
(bad)
je
mov
idiv
xchg
fisub
enter
(bad)
in
sbb
mov
ins
ja
data16
test
(bad)
stos
mov
pop
out
cld
mov
aad
sbb
imul
cmp
push
test
or
neg
scas
test
hlt
ds
scas
push
aad
lahf
stos
out
cs
pop
pop
sbb
xchg
retf
inc
mov
out
push
push
vandps
test
(bad)
sub
jb
loop
movs
push
mov
scas
stos
add
add
sar
lds
mov
mov
pop
lods
push
jo
test
dec
in
int3
push
xchg
jbe
mul
mov
sub
pusha
jecxz
rcr
or
mov
mov
cli
lock
mov
xchg
mov
sub
inc
mov
repnz
add
jo
cmps
out
sbb
(bad)
stos
(bad)
jle
xchg
(bad)
and
imul
fcomip
mov
mov
jmp
sbb
sub
push
sub
fwait
add
rcl
cmp
arpl
stos
es
fimul
mov
or
(bad)
aad
jno
dec
push
es
int3
stos
int
mov
fwait
sub
pusha
cli
xor
cmc
adc
ds
test
loope
or
push
and
mov
ins
call
dec
xchg
mov
xchg
(bad)
aad
add
rcl
fmul
hlt
xchg
xor
pop
sbb
xor
mov
jg
scas
push
jl
push
out
repz
cmp
jmp
cmp
scas
lods
xchg
pop
adc
mov
stc
rol
movs
mov
icebp
cmp
dec
sbb
not
mov
xor
mov
(bad)
sbb
xchg
add
or
sar
rcr
fcomp
fs
int3
imul
mov
(bad)
adc
adc
or
in
shr
xchg
mov
mov
jo
int3
mov
cdq
sub
pop
jmp
inc
scas
rcl
stos
mov
xor
mov
idiv
shr
add
fisubr
je
aas
daa
mov
jae
dec
dec
sbb
test
cmp
push
cmps
sahf
in
rcr
cmps
stc
and
add
jb
enter
mov
ret
sbb
jge
sbb
aad
sbb
push
cmps
dec
cmps
jnp
cmp
in
in
xor
or
repnz
mov
pushf
or
hlt
fstp
pushf
cmps
(bad)
cmc
push
sbb
and
jnp
push
jnp
imul
add
lahf
jns
push
mov
pop
hlt
dec
sti
fcomp
stos
daa
(bad)
adc
scas
jnp
xchg
pop
addr16
stos
push
les
fist
xchg
out
xchg
ja
push
sub
test
dec
mov
inc
arpl
mov
mov
fwait
ret
push
out
into
xor
rcl
xchg
(bad)
cmp
jns
js
nop
mov
bound
jnp
ror
(bad)
or
(bad)
cli
xchg
cmp
dec
xchg
xor
js
mov
mov
or
test
int3
aad
mov
cld
mov
in
(bad)
xor
mov
in
call
cmp
mov
lods
sub
retf
xchg
xchg
inc
(bad)
sub
scas
mov
inc
nop
rep
add
cmc
dec
and
pusha
mov
repz
mov
xor
mov
sub
arpl
ss
cli
mov
pop
fild
push
cdq
(bad)
out
pop
inc
xchg
pop
push
and
mov
push
mov
into
jo
ss
xchg
inc
clc
xchg
enter
dec
add
mov
cmp
loope
mov
mov
push
fs
mov
sbb
dec
shl
scas
inc
ins
fimul
jne
mul
xor
sbb
xchg
retf
and
call
ret
loop
push
jl
addr16
jge
cmp
(bad)
mov
leave
test
mov
pop
shr
popf
in
icebp
(bad)
xlat
jge
jno
rcl
cmc
(bad)
test
and
xor
test
data16
ret
push
mov
cs
fwait
out
mov
push
dec
xchg
(bad)
mov
pop
and
and
or
cmp
jmp
fdiv
mov
xchg
loopne
ret
mov
push
pop
retf
sub
sbb
sub
push
inc
adc
cwde
in
and
fidivr
mov
mov
mov
lds
fimul
pop
add
mov
pop
(bad)
scas
in
mov
rol
push
jns
sub
mov
aad
cmp
hlt
pop
ret
xchg
out
pusha
aaa
cmp
retf
inc
cmp
xor
xchg
or
test
mov
out
clc
mov
push
mov
mov
shl
and
ret
xor
dec
popa
mov
push
pop
cmp
outs
out
mov
into
cmps
sbb
xchg
neg
xchg
imul
ds
jns
in
jbe
sar
xchg
repz
mov
lods
sbb
shl
pop
shl
enter
out
xchg
sti
cli
out
pop
sub
(bad)
(bad)
loope
ret
inc
push
xor
sub
fiadd
xchg
nop
jb
sub
cmps
mov
dec
jmp
mov
dec
xor
dec
mov
movs
ins
push
sub
push
jo
pop
xchg
shl
cli
mov
mov
mov
mul
ret
dec
sbb
push
cwde
arpl
ins
push
js
cmp
sbb
rcr
xchg
(bad)
or
add
dec
and
loope
jno
gs
jae
faddp
jl
(bad)
(bad)
lds
mov
test
hlt
inc
jns
(bad)
(bad)
xchg
ffreep
rcl
scas
jle
sub
ja
jo
mov
mov
sar
pop
retf
test
stos
adc
popf
mov
shl
push
mov
fidiv
mov
pop
outs
xchg
and
hlt
(bad)
mov
lea
xchg
and
adc
sub
mov
ss
push
rcl
out
push
push
dec
pop
test
loop
xor
and
ret
movs
add
loope
adc
xchg
xchg
pop
or
xlat
pop
fwait
add
mov
das
loope
ins
in
in
xor
or
dec
pop
fcomi
aaa
or
scas
inc
jnp
mov
stos
(bad)
cmps
stos
ins
inc
jbe
fs
cmp
sub
fcom
sbb
push
and
inc
ds
mov
lods
int3
jmp
xchg
push
lods
or
dec
ins
sbb
hlt
mov
xchg
data16
ins
sub
popa
(bad)
out
jae
ins
xchg
and
dec
add
rol
mov
inc
dec
es
xchg
test
jl
mov
push
sub
jb
cmp
cmps
and
es
cmove
mov
pushf
test
mov
or
repz
sbb
sub
mov
int3
ins
in
xor
and
or
xor
push
ds
jl
cdq
stos
lods
bound
inc
mov
call
ss
cmp
outs
mov
inc
adc
lods
pop
test
push
out
bound
push
mov
sub
pusha
stos
imul
out
push
fcomi
mov
mov
aaa
add
dec
add
mov
cdq
clc
jmp
xchg
lea
addr16
pop
adc
mov
mov
mov
mov
and
aam
jmp
stos
icebp
or
movs
xchg
sub
(bad)
jp
out
sahf
jae
movs
xchg
hlt
mov
cmp
add
cmp
push
add
sbb
outs
js
(bad)
test
jnp
jmp
jno
test
iret
lea
loope
fidiv
jnp
cmp
adc
jbe
adc
mov
inc
cmps
cmp
xor
iret
repz
pop
jle
or
pop
in
aad
gs
cmc
call
test
(bad)
(bad)
in
imul
push
pop
(bad)
lods
inc
loope
aam
xchg
or
mov
(bad)
(bad)
clc
fadd
xchg
xchg
inc
mov
mov
(bad)
mov
les
adc
leave
daa
mov
mov
fs
pop
call
scas
cdq
retf
mov
pop
sub
popf
adc
fsubp
aad
fcompp
push
imul
das
mov
mov
push
sub
mov
pop
cmps
out
xchg
push
movs
xor
ins
xchg
push
and
(bad)
ds
and
jno
pop
mov
push
fwait
lods
xchg
fs
outs
aad
data16
cmp
bound
test
jnp
lods
sahf
jno
xlat
int3
and
sbb
push
xlat
push
pop
pop
and
fdivr
in
and
xchg
and
ins
pop
mov
(bad)
xor
push
add
stc
cmp
int3
aaa
ins
jne
and
lahf
cs
stos
shl
mov
mov
or
mov
or
mov
daa
fnstcw
add
loopne
dec
fstp
ja
je
push
mov
jle
movs
push
sti
shr
xsave
retf
addr16
arpl
lea
stos
push
lea
mov
imul
call
pop
inc
push
lods
ror
cmp
push
fild
retf
xor
add
mov
dec
xchg
repnz
push
mov
inc
mov
in
xchg
mov
jg
into
sub
mov
mov
iret
mov
pop
cld
pop
add
dec
and
mov
add
int3
mov
mov
lahf
pop
das
mov
sti
jmp
pop
lea
mov
mov
fbld
mov
ret
aas
(bad)
int
popf
inc
jmp
or
clc
and
fisttp
shl
pushf
push
ja
repz
push
pop
fimul
pop
push
ror
inc
sbb
and
xor
jp
sbb
mov
cmp
and
xchg
stc
dec
sbb
cmps
add
jle
jecxz
adc
enter
into
or
sbb
inc
je
sub
inc
jne
pop
mov
das
ret
cmp
retf
stc
sub
mov
jecxz
or
push
push
(bad)
cdq
dec
jp
or
test
iret
xor
clc
out
xor
xchg
xor
fmul
or
repz
loop
(bad)
sub
or
mov
rcl
xor
inc
ja
daa
sbb
jb
(bad)
in
fmul
mov
lds
or
outs
inc
push
sar
and
mov
mov
jp
movs
mov
cmp
inc
cmp
call
ds
sub
inc
loope
cmp
sub
test
push
dec
test
jl
jns
std
mov
or
push
jbe
sar
sbb
stc
pop
sahf
loop
gs
popa
mov
jnp
xchg
imul
mov
rol
dec
inc
adc
movs
fldcw
(bad)
mov
jb
cmp
out
sbb
jnp
pop
test
lea
sub
jp
jp
sbb
aad
sbb
xchg
aas
and
pop
xor
fst
push
(bad)
ret
fldenv
jne
scas
(bad)
arpl
adc
(bad)
fidivr
ins
cmp
repz
mov
adc
push
jl
and
fcomp
ror
mov
or
jno
mov
sub
dec
pushf
sti
cmc
mov
icebp
neg
into
sbb
cmp
push
mov
js
mov
fs
mov
xor
xchg
stos
ror
(bad)
xchg
cmc
retf
outs
pop
push
xchg
dec
mov
int3
jp
xor
mov
pushw
xchg
cmp
push
jmp
call
mov
gs
pusha
test
clc
fbld
data16
xor
sub
fidiv
ja
test
and
sahf
mov
mov
mov
clc
pop
mov
push
xor
mov
cli
pop
lahf
dec
and
fldcw
sub
cdq
xor
or
rcl
xchg
int
inc
mov
cmp
jo
in
sbb
cmp
mov
cmps
jle
aaa
add
ror
test
jp
stos
sub
sub
sbb
fidivr
movs
in
(bad)
cmp
add
imul
add
movs
lods
jbe
mov
pop
cdq
xor
inc
lods
fild
xlat
aas
bound
jmp
cmp
out
retf
add
mov
xor
cdq
rcl
or
jecxz
cmp
or
daa
(bad)
adc
icebp
bnd
and
popf
pop
or
pop
push
icebp
xor
mov
mov
xor
push
add
sub
xor
add
test
adc
jmp
push
xor
dec
sbb
out
cmps
mov
mov
(bad)
pop
pop
dec
push
cdq
sbb
jns
std
aaa
std
js
inc
aas
mov
pop
test
mov
lahf
out
rcr
or
inc
mov
in
xor
add
lods
fwait
sub
les
shl
sbb
pop
inc
mov
inc
inc
xor
xor
mov
mov
add
dec
cmp
push
aas
push
push
push
push
(bad)
shl
push
pop
pop
xchg
push
ror
mov
das
mov
sbb
push
fwait
bound
lea
fwait
test
xor
cmc
jb
jl
cmps
imul
retf
(bad)
xchg
jne
out
pop
sbb
mov
jp
sbb
push
in
sub
div
lds
and
adc
add
(bad)
and
je
aas
aaa
iret
or
xchg
aaa
add
dec
cwde
xchg
sbb
xlat
pop
rcl
xchg
cmp
cld
into
and
fcmovnbe
cmp
xchg
loope
push
or
bound
add
fnsave
in
dec
ret
clc
cmp
lahf
lahf
mov
in
jmp
xor
and
mov
dec
loop
or
dec
push
stc
stc
repz
cs
div
iret
mov
and
mov
mov
daa
ja
ins
xchg
xchg
mov
nop
mov
fdiv
lahf
mov
dec
sbb
inc
js
sub
fdiv
sub
add
xor
xchg
push
adc
aam
call
xor
clc
inc
clc
mov
fwait
idiv
test
scas
jbe
add
inc
xor
in
fisub
out
retf
(bad)
dec
xchg
jnp
or
sbb
std
or
pop
or
push
or
sahf
movs
cld
fld
es
jns
(bad)
leave
jp
xchg
sbb
cmc
push
adc
cmp
pop
ins
ret
ss
jnp
(bad)
and
ss
imul
je
loop
jbe
mov
stos
cdq
(bad)
xchg
test
sbb
(bad)
mov
test
add
nop
or
(bad)
sbb
jne
cld
sub
push
imul
lods
inc
push
loop
ja
pop
cmp
sub
jns
neg
pushf
fdiv
mov
dec
cmps
inc
push
jbe
sub
fnstcw
loop
push
jnp
js
push
adc
addr16
mov
adc
add
fs
dec
hlt
dec
xor
adc
les
fs
pop
fdivr
xor
push
or
fild
ret
loopne
xchg
retf
sub
inc
or
adc
xlat
cs
mov
(bad)
cli
(bad)
jnp
imul
popa
daa
jno
nop
add
xor
inc
mov
sub
pushf
mov
test
xchg
jnp
mov
xchg
push
js
call
test
lock
(bad)
enter
inc
iret
pusha
cs
adc
sbb
loop
jecxz
add
clc
ret
push
xchg
call
pop
pop
mov
push
popa
shl
(bad)
adc
mov
xchg
adc
add
call
xchg
inc
pop
leave
mov
xor
mov
cmp
mov
push
out
lods
adc
ss
lds
jg
dec
dec
mov
js
out
adc
les
cmp
mov
je
and
idiv
pop
cmp
hlt
pop
adc
cli
or
adc
lds
popa
and
mov
add
bound
cs
cwde
idiv
popa
aam
das
or
jmp
push
pusha
call
jns
mov
out
add
dec
or
xor
mov
sub
gs
repnz
mov
add
aaa
sbb
pop
aaa
push
jg
rol
retf
inc
pop
or
dec
in
inc
cmp
and
and
out
pushf
mov
popa
push
sub
xor
clc
sub
sbb
or
or
out
lods
push
push
in
icebp
loopne
inc
hlt
dec
or
dec
iret
aas
pop
mov
push
xor
cmp
dec
jp
rol
jns
mov
or
xchg
sub
dec
in
cmp
movs
retf
inc
xchg
or
mov
inc
dec
(bad)
out
ja
sbb
push
or
sahf
call
pop
clc
add
add
fisttp
into
pop
mov
mov
movs
inc
or
je
ins
sbb
inc
push
lds
jp
mov
sub
mov
aam
ins
mov
stos
xlat
cmp
mov
stos
data16
xlat
sbb
mov
push
movs
out
int
jnp
das
jae
pushf
cwde
aam
(bad)
pusha
adc
mov
out
stc
lock
xchg
pop
mov
cmp
sahf
ins
dec
sti
scas
dec
bound
fs
popf
js
jle
dec
mov
jbe
not
adc
xor
retf
push
mov
scas
mov
push
ficomp
add
push
test
jl
push
sahf
jno
inc
sub
ret
dec
xchg
mov
(bad)
adc
and
cmp
daa
or
mov
mov
and
fbstp
cwde
inc
cs
shr
popf
fsub
pop
cs
or
inc
sbb
dec
sub
rol
rcl
dec
repz
lds
xlat
jle
jmp
pop
test
xchg
test
into
or
sub
cmc
ret
pop
fist
mov
pop
outs
iret
mov
xchg
fadd
mov
adc
or
mul
sbb
xchg
in
rcl
sbb
int
pop
loop
sub
pop
(bad)
loopne
cmp
nop
(bad)
sbb
jb
daa
inc
ja
retf
cmps
cmp
push
test
sub
jo
mov
fisttp
movs
hlt
daa
and
jo
stc
push
les
inc
scas
retf
cmps
stc
fs
sub
shr
arpl
popf
out
aam
out
and
mov
sar
jecxz
cwde
dec
loopne
enter
or
fsubr
imul
mov
(bad)
(bad)
and
cmp
(bad)
adc
mov
dec
fstp
ror
rol
ficomp
mov
dec
or
xchg
cdq
cmp
sub
daa
push
shr
addr16
movs
mov
inc
sar
cmp
fs
adc
sar
sbb
(bad)
loop
aas
mov
enter
shr
mov
stos
adc
dec
rcr
cdq
xor
(bad)
fcom
repnz
aad
cld
loope
(bad)
js
jb
in
push
imul
sahf
fiadd
fucomi
dec
or
cli
sti
xchg
sbb
lea
leave
push
sti
xor
xchg
add
popf
movs
xchg
jmp
xchg
add
push
or
or
mov
int
mov
int3
cmp
sbb
mov
dec
jne
pop
lods
scas
stos
mov
xchg
sar
mov
rcl
jne
mov
mov
popf
fldenv
(bad)
jmp
lods
fadd
jl
mov
rcr
sbb
xchg
jae
scas
mov
int3
and
test
scas
pop
outs
or
xor
(bad)
push
nop
pop
outs
add
inc
push
xchg
in
ins
popf
pop
ror
repnz
jnp
in
test
or
cli
in
sahf
lds
cmp
or
adc
ins
pop
lahf
add
adc
ja
xor
stos
jmp
les
jmp
out
mov
dec
fcomp
out
push
popa
out
sub
enter
mov
enter
fisubr
bound
sbb
test
int
fs
arpl
mov
xor
or
scas
mov
mov
loop
fimul
jo
adc
mov
ret
fmul
or
dec
adc
loope
sbb
int3
adc
lds
jmp
je
xor
les
gs
adc
and
pop
inc
imul
ss
or
mov
pop
call
js
in
(bad)
jmp
cs
cld
outs
sub
test
or
jg
and
sub
loopne
scas
xchg
jbe
pushf
mov
and
jle
jg
sub
addr16
jb
xlat
sub
fs
test
out
fsubr
mov
add
cmp
or
clc
mov
adc
dec
xchg
fld
jno
and
bound
cmp
mov
or
add
dec
jnp
repz
ds
out
lea
enter
push
sub
jae
fmulp
and
sbb
and
push
add
fldenv
cmp
sbb
mov
int
inc
ror
sbb
push
dec
add
dec
jb
mov
mov
pop
mov
hlt
fiadd
pop
xchg
lods
xchg
jg
inc
aaa
push
cmp
stc
adc
inc
inc
push
push
inc
fsubr
xor
and
or
adc
jmp
rol
aam
xchg
push
sub
or
ja
xor
sub
adc
in
xchg
jb
inc
xor
and
pop
pop
pusha
cmp
adc
sub
sbb
xchg
fnstenv
(bad)
sahf
mov
dec
lea
inc
into
fldenv
fucompp
fucomi
sub
shr
int3
mov
shl
ja
fnstenv
sahf
out
or
jecxz
iret
adc
pop
test
ja
push
pushf
mov
sbb
sub
inc
jp
js
arpl
or
add
fwait
adc
adc
adc
pop
fsub
dec
outs
fcomp
jg
jo
mov
mov
xchg
jmp
dec
(bad)
jnp
scas
mov
cmp
ss
les
xchg
push
pop
xchg
pcmpeqb
ss
mov
mov
xlat
push
ret
mov
add
inc
mov
cmps
(bad)
push
sahf
fcom
in
sub
popa
(bad)
pop
in
mov
icebp
aaa
pop
(bad)
shl
enter
das
jecxz
add
mov
add
pop
xchg
or
jge
cmps
cdq
stos
(bad)
jno
push
popf
cmp
out
jle
mov
xchg
fcmovb
add
pop
cs
jmp
jmp
mov
ins
iret
cli
mov
ss
out
jge
sub
dec
mov
shl
fldpi
mov
(bad)
icebp
in
addr16
adc
mov
gs
imul
and
outs
lods
mov
and
out
sub
push
js
in
dec
outs
xor
xchg
dec
sub
hlt
and
mov
bound
enter
test
lock
hlt
ins
sub
mov
push
call
or
jle
sub
outs
or
and
and
jns
xor
and
push
int3
mov
sbb
icebp
(bad)
xchg
inc
movs
sub
sub
push
aas
fisub
xchg
out
clc
sti
jl
sar
cmp
popf
cdq
xchg
pop
mov
js
dec
iret
cli
jmp
cmp
mov
push
add
mov
jnp
stos
test
rol
stos
stc
sub
ficomp
daa
adc
add
movs
or
dec
stos
shl
jmp
jno
mov
inc
fs
retf
mov
stos
fst
and
inc
es
stos
sahf
inc
push
leave
lods
jae
push
cmps
imul
in
dec
aam
mov
dec
dec
lds
pop
sahf
xlat
int3
xor
loop
(bad)
sbb
or
jo
jl
sub
and
call
pop
and
popa
cmp
sub
outs
cmp
rol
adc
pop
sub
inc
js
ret
dec
cmp
mov
ins
mov
and
inc
fs
push
fwait
shl
arpl
call
jbe
test
xor
fdiv
loop
pop
sbb
lods
mov
(bad)
or
data16
sub
jb
enter
inc
xor
stos
(bad)
mov
das
sahf
fs
pop
out
call
scas
lock
xor
add
sub
inc
push
inc
retf
std
(bad)
lods
push
ins
pop
or
mov
and
jmp
sti
mov
sbb
and
push
cld
shl
jle
push
scas
pop
pop
stos
ror
and
das
in
in
cmp
jno
mov
lods
test
outs
ja
out
adc
mov
xchg
push
sbb
xor
daa
mov
lahf
les
hlt
push
inc
xor
xchg
pop
into
sysret
fiadd
push
loop
or
push
fld
dec
dec
push
jmp
mov
fs
(bad)
(bad)
into
inc
aam
test
xchg
push
xadd
popf
mov
fs
adc
hlt
dec
push
mov
push
in
and
adc
in
(bad)
test
jo
rol
push
out
test
xchg
and
hlt
cld
shr
sbb
loopne
mov
arpl
xlat
inc
pop
in
(bad)
mov
mov
call
pop
fwait
pushw
dec
sbb
out
fdiv
jl
dec
push
ss
jns
out
or
(bad)
or
in
dec
mov
cmp
mov
cmp
inc
(bad)
fiadd
pop
xchg
icebp
leave
rcl
sub
or
inc
push
jnp
mov
ret
jno
mov
adc
pushf
cmc
add
adc
jmp
mov
mov
lods
clc
xor
xchg
add
(bad)
idiv
push
dec
jge
repnz
xor
sbb
repnz
stos
ror
inc
mov
mov
imul
dec
jle
xor
mov
push
les
jge
adc
dec
stc
pop
and
fild
out
rcr
and
aaa
lock
jno
mov
and
ins
fist
(bad)
xor
outs
xchg
fcomp
xchg
mov
repz
add
dec
jmp
cmp
ins
mov
mov
xchg
cmp
and
jo
xlat
push
sar
mov
inc
outs
mov
pop
sar
sub
xchg
repnz
mov
push
or
mov
dec
(bad)
outs
into
jb
fidiv
mov
push
xchg
ret
add
or
mov
or
sbb
xchg
sub
push
out
jg
mov
jbe
aaa
jnp
ret
add
inc
lock
mov
addr16
outs
nop
ss
clc
push
or
int3
rcr
jecxz
cwde
mov
lds
mov
xchg
xor
lds
maskmovq
not
bound
sbb
mov
push
or
outs
sar
stos
scas
rcl
jmp
and
addr16
jo
fisub
cmp
fsubr
call
mov
popf
dec
mov
mov
stos
movs
jle
ins
pop
out
mov
aas
mov
jo
mov
ror
gs
lods
cmp
out
jne
inc
dec
leave
shl
leave
sti
inc
retf
push
fwait
lods
jecxz
leave
adc
jbe
sbb
je
call
in
push
dec
push
mov
jg
mov
movs
xchg
pop
pop
mov
ja
adc
mov
call
pusha
mov
push
push
hlt
std
push
pop
xor
addr16
imul
arpl
data16
pop
inc
push
out
xchg
mov
push
(bad)
ret
ins
rcl
in
push
adc
jo
movs
push
shl
mov
push
sti
sbb
aad
das
push
arpl
dec
daa
adc
(bad)
(bad)
lahf
data16
push
std
pminsw
xor
aaa
add
or
and
dec
ret
loop
arpl
pop
and
pop
ja
cmp
movs
(bad)
adc
pushf
daa
jle
mov
iret
ins
cmp
xor
xor
mov
shld
xchg
vmulpd
push
out
mov
mov
(bad)
xchg
inc
adc
cld
jmp
mov
or
icebp
fwait
lea
mov
ss
mov
test
xchg
loopne
jb
test
retf
in
aas
lds
push
push
cmp
sub
sub
repnz
xchg
aad
in
loope
gs
shl
lods
mov
mov
movs
adc
push
sbb
inc
ja
repz
jb
sbb
daa
cmc
arpl
jnp
xchg
stos
adc
and
mov
stos
mov
mov
ins
test
mov
call
mov
stc
pop
stos
add
bound
add
mov
ins
sbb
fimul
jae
int3
pop
push
popf
and
call
repz
dec
lods
xor
add
push
and
jns
stc
jg
cmp
pop
mov
fistp
inc
popa
inc
jle
jbe
xor
mov
mov
jp
popf
dec
mov
(bad)
dec
in
aas
inc
ret
dec
sub
sub
push
dec
sbb
in
jo
inc
mov
xchg
retf
pushf
push
inc
jecxz
enter
or
push
push
out
outs
mov
dec
mov
mov
(bad)
movs
addr16
sar
daa
or
jge
std
or
call
add
xchg
dec
fld
addr16
and
pop
adc
rcr
pop
jecxz
pop
retf
cmp
or
adc
push
out
icebp
xchg
cmps
pop
mov
sbb
push
in
loope
dec
cmps
mov
stos
scas
and
adc
and
clc
ins
dec
ins
cli
sbb
call
lock
ret
adc
ss
(bad)
mov
imul
mov
inc
jl
and
stos
out
(bad)
(bad)
js
sub
test
sbb
add
pop
sbb
xchg
inc
push
ret
or
jmp
lods
sub
pop
adc
data16
call
cmp
test
xor
sti
xchg
xchg
mov
cmps
and
xlat
mov
or
das
xchg
and
hlt
data16
cmps
cmps
cmp
popa
sbb
stos
or
or
sub
imul
icebp
add
int3
aas
(bad)
mov
repz
(bad)
mov
xchg
inc
cmp
inc
bound
pop
addr16
mov
dec
das
jne
sbb
aaa
retf
inc
retf
push
rcr
repnz
inc
dec
sar
arpl
mov
mov
mov
jns
ds
or
add
dec
aaa
add
pop
test
pop
inc
imul
and
and
jnp
cmp
jp
int
repnz
sub
jbe
daa
xor
sub
jnp
or
out
call
sbb
mov
cmc
xchg
push
pop
sub
dec
out
mov
push
repz
or
sbb
scas
mov
cmp
fwait
pop
mul
out
cwde
mov
cs
nop
loop
movs
movs
push
cmps
aas
dec
xchg
lds
mov
int3
mov
mov
js
jg
mov
aaa
xchg
in
sar
sbb
inc
push
and
outs
sbb
outs
xchg
mov
jmp
out
dec
call
mov
jmp
adc
pop
stos
js
push
cmp
aad
inc
push
or
fmul
call
inc
and
mov
retf
cli
(bad)
int3
or
add
xchg
outs
pop
lods
into
in
fucom
stos
mov
inc
jae
(bad)
js
retf
ds
pop
cld
sbb
jmp
fs
gs
test
and
std
fld
xchg
xchg
ret
js
jnp
mov
daa
push
adc
adc
test
cmc
push
add
mov
fldenv
add
adc
push
repz
jmp
(bad)
arpl
pop
mov
outs
dec
cmp
test
iret
mov
mov
(bad)
sbb
adc
fst
aas
pop
in
pop
adc
loope
jmp
or
jne
cli
repnz
and
call
dec
or
mov
call
add
inc
mov
dec
popa
push
mov
in
shl
jmp
sub
neg
aad
cmp
lahf
mov
mov
pop
mov
sahf
pop
or
aad
fdivr
cmp
xchg
in
hlt
mov
pushf
and
mov
jecxz
(bad)
fmul
mov
fild
cwde
ss
pop
xchg
test
mov
pop
loopne
imul
test
fwait
in
push
jp
push
sub
pop
inc
dec
adc
fisttp
jae
inc
push
(bad)
jnp
sub
push
retf
mov
or
pop
xchg
jae
lods
repz
frstor
pop
imul
stos
ds
cmp
loop
jns
dec
xchg
fcomp
adc
cs
mov
mov
out
pop
cmp
xchg
in
or
mov
jge
jmp
div
lods
cmp
mov
and
sub
xlat
rol
test
and
lods
ret
enter
shl
ja
sahf
aaa
and
pusha
mov
rcr
jne
jnp
scas
hlt
mov
xor
push
and
sbb
cs
pop
ds
push
adc
add
cmc
lods
loop
mov
mov
ror
pop
cwde
ret
xor
sub
xor
sub
mov
and
lea
je
retf
pop
or
jg
test
add
out
scas
leave
dec
daa
cld
mov
push
xchg
fistp
add
xchg
jns
push
bnd
jmp
rol
hlt
push
sub
ror
sbb
imul
mov
neg
repz
jno
arpl
cs
add
dec
mov
pop
leave
and
cmps
xor
repz
mov
cmp
dec
push
xchg
jmp
inc
(bad)
out
addr16
xchg
jl
sbb
pop
push
mov
clc
cmp
push
adc
in
jo
iret
pushf
mov
inc
and
jnp
(bad)
test
out
xchg
mov
inc
xchg
in
add
adc
out
adc
mov
pop
and
jbe
ret
dec
mov
call
mov
push
(bad)
ss
ror
adc
and
fisub
ficom
ror
popa
add
cdq
jmp
add
ins
push
jle
adc
scas
jnp
ret
push
xor
xchg
sbb
inc
cdq
pop
int
pop
dec
lds
push
movs
jecxz
adc
daa
shr
cmps
lahf
outs
add
nop
dec
imul
jno
aas
in
pop
pop
push
clc
add
mov
or
pop
sbb
out
leave
jle
mov
dec
jle
loop
imul
idiv
bound
ret
rcl
mov
and
loope
add
xchg
xchg
jg
push
int
push
xor
pop
sub
aas
adc
adc
add
and
dec
retf
xchg
push
inc
mov
or
jbe
sbb
mov
jp
aaa
adc
out
out
inc
(bad)
adc
push
shl
add
adc
jge
lea
fisttp
cmp
or
xor
int
sbb
push
sub
cmp
dec
jmp
push
js
push
inc
pop
sub
xchg
push
jmp
mov
dec
jo
outs
cdq
sbb
rol
test
mov
pop
jle
mov
stc
xor
mov
pushf
dec
jns
test
lods
loope
xor
jp
xor
xchg
sar
(bad)
mov
or
xchg
stos
(bad)
stos
je
popa
xor
mov
ja
ret
sbb
sbb
jb
div
dec
push
out
lahf
into
and
mov
sub
lods
xor
mov
pop
repnz
rcl
pop
sbb
adc
xor
dec
fsub
mov
dec
ja
inc
ror
es
push
mov
sbb
push
or
dec
dec
jl
stos
xor
jno
lods
aaa
push
inc
test
inc
sbb
xor
sub
(bad)
stos
lods
mov
pop
sbb
jl
fsubrp
dec
cdq
ja
je
mov
mov
xchg
gs
jl
adc
and
jge
(bad)
pop
or
inc
js
hlt
loop
xchg
mov
xor
jnp
rol
(bad)
fisub
pop
pushf
(bad)
or
into
pop
mov
jle
xchg
sub
cdq
nop
lods
dec
sbb
and
sahf
jl
lods
mov
xchg
push
mov
mov
out
retf
pop
cmp
mov
hlt
mov
push
add
div
lds
(bad)
out
stos
pop
jns
lea
mov
iret
(bad)
not
iret
pop
cmps
adc
mov
mov
fld1
popf
mov
ins
jg
mov
push
add
jmp
push
mov
xchg
test
add
cmc
stos
add
mov
add
pusha
icebp
push
push
jecxz
pop
jo
add
push
xlat
mov
fistp
mov
and
loop
scas
jmp
jp
pushf
repz
loop
call
pop
sub
mov
retf
out
loop
inc
rcr
(bad)
add
fdivr
stos
dec
sbb
and
std
xchg
aaa
fld
mov
xchg
add
sbb
pop
sti
test
out
(bad)
mov
(bad)
popf
ret
jno
cmp
and
das
cmp
cwde
or
push
dec
dec
cmc
cmp
mov
out
lods
out
jbe
leave
mov
into
adc
call
out
pop
(bad)
int3
mov
loop
das
movs
mov
or
adc
mov
mov
and
xchg
test
xor
fnstsw
pop
je
push
test
out
aam
inc
jne
test
mov
out
es
sar
fwait
pop
ins
fwait
push
sbb
and
add
jbe
popf
pop
rcr
pop
push
add
fidivr
stc
pop
cld
xchg
sbb
push
stos
dec
into
scas
repnz
jb
mov
push
jo
imul
pop
or
sbb
pop
scas
pop
aas
retf
out
add
mov
mov
stc
inc
inc
cmp
std
sub
movs
ret
outs
jmp
add
jge
mov
mov
or
inc
in
cmp
push
xchg
lahf
mov
sub
fs
mov
add
and
fcom
cmp
push
lods
(bad)
(bad)
and
pop
cmp
cs
(bad)
jbe
pushf
dec
stos
add
sub
xor
and
mov
shr
cmp
data16
push
pop
imul
clc
fdivrp
lahf
cmp
fisubr
jl
sub
push
fcom
cmp
les
sbb
fnstcw
cmps
sbb
jmp
test
inc
inc
or
push
pop
fstp
les
scas
lds
ror
mov
add
sbb
out
and
test
or
sbb
enter
cmp
iret
(bad)
daa
sbb
mov
cmp
int
(bad)
(bad)
shl
jl
imul
stos
icebp
add
int
dec
pop
(bad)
into
inc
aad
stos
xchg
mov
pop
add
dec
call
adc
pop
cmp
push
jno
add
inc
leave
lock
mov
ds
int
cmp
sahf
mov
xor
lods
mov
(bad)
mov
inc
out
push
test
xor
fdiv
xor
cmps
retf
mov
pop
rcl
xchg
dec
mov
sbb
ds
xchg
test
jg
jbe
addr16
adc
pushf
jl
repz
xchg
mov
sub
fisttp
mov
pop
enter
mov
lods
je
jns
push
sti
xchg
inc
mov
and
adc
or
or
push
adc
pop
mov
(bad)
and
push
mov
in
cmp
xor
sar
inc
jecxz
sahf
out
jno
fwait
cwde
cmp
fst
and
test
push
sbb
sub
clc
add
or
cmps
or
push
aad
repz
outs
out
adc
aam
sub
fadd
loopne
rcl
and
or
jne
and
push
daa
ss
outs
xchg
das
sbb
sti
cli
cmp
shr
adc
cmp
inc
test
inc
push
dec
or
push
test
inc
bound
ret
inc
js
sahf
mov
mov
jmp
retf
loop
sbb
cmps
pop
mov
cwde
loop
fdivr
jae
pop
sub
jl
dec
jo
xchg
arpl
cmp
les
adc
push
sub
retf
ffree
es
sub
stc
cli
in
movs
(bad)
or
and
mov
and
jl
aad
inc
mov
sbb
ret
fisubr
and
adc
cs
and
add
ja
in
ins
cld
xlat
inc
repz
add
loope
out
dec
int
sub
push
jbe
cmp
dec
push
adc
js
fcomp
sub
sbb
(bad)
mov
add
dec
and
fidivr
cmc
xchg
mov
push
loope
neg
fnstcw
mov
dec
iret
shl
movs
clc
mov
cmp
xor
push
push
add
adc
cmp
inc
mov
fmul
in
push
mov
arpl
sbb
cmps
cwde
loope
or
adc
jo
mov
fcom
jle
sbb
or
cdq
cmp
sbb
jmp
mul
mov
jne
xlat
mov
lds
xor
sbb
and
mov
(bad)
xchg
xchg
pop
cmp
jmp
ss
xchg
sbb
scas
ret
or
stc
jb
push
jg
pop
shl
push
sub
mov
jge
out
inc
gs
jno
push
(bad)
mov
pop
imul
ins
xchg
xchg
ja
fsub
jp
xchg
imul
adc
mov
pop
mov
or
jno
sbb
add
push
inc
fstp
cmp
mov
jl
dec
jo
push
sub
ffree
dec
fsub
push
mov
pop
add
(bad)
adc
cwde
mov
adc
dec
fxtract
test
leave
xchg
repnz
fbld
jecxz
mov
jnp
xor
repz
jp
cmp
add
sub
jnp
adc
mov
inc
loop
fwait
mov
or
neg
test
or
adc
xor
icebp
jecxz
dec
test
je
nop
lods
mov
sub
hlt
pushf
push
jecxz
sbb
out
jns
cmps
ins
ja
push
push
mov
lods
sub
clc
adc
fs
add
call
and
sbb
out
dec
js
repnz
pop
xchg
inc
dec
push
inc
mov
jno
fidiv
xchg
lds
mov
fld
aad
movs
push
push
pushf
sbb
fld
jno
int3
mov
setp
sbb
xchg
aad
push
scas
mov
jp
movs
test
jmp
pop
and
sbb
inc
pop
neg
pop
sahf
rcl
xor
mov
push
retf
stc
inc
mov
push
pop
ror
xlat
mov
fdiv
loopne
test
jge
mov
inc
call
push
je
in
inc
stos
nop
inc
retf
cmps
outs
jbe
sbb
mov
sbb
mov
test
sbb
test
in
loopne
push
sbb
repnz
push
pop
fs
aaa
imul
mov
push
inc
dec
pop
stos
dec
xor
(bad)
mov
mov
xor
mov
push
xor
cmp
pusha
ja
lods
jbe
(bad)
inc
movs
call
or
xchg
xlat
mov
dec
test
mov
push
sti
push
and
dec
in
and
inc
mov
ja
inc
mov
dec
and
mov
stos
stos
sub
jo
sbb
scas
arpl
push
mov
shl
test
fs
pop
outs
xor
imul
(bad)
xchg
scas
pop
pushf
sti
sbb
jno
lahf
jnp
repnz
or
sbb
int3
fisttp
bound
cs
cmp
mov
or
jl
out
adc
add
call
cmp
int3
jecxz
ds
xchg
fadd
mov
cmps
add
imul
sahf
popa
xchg
push
xchg
cdq
jo
jae
cs
out
push
cmp
inc
bound
cs
mov
or
or
inc
in
push
scas
mov
das
jae
push
xchg
mov
xor
push
pusha
outs
loop
daa
dec
outs
popa
xchg
jne
add
xchg
outs
push
imul
dec
lods
jmp
push
or
add
mov
sbb
mov
test
test
and
loop
mov
pop
pop
inc
xor
push
or
adc
pop
pop
mov
cdq
bound
sub
les
push
scas
or
pop
movs
or
mov
cmps
sub
xor
pop
aas
xor
mov
out
mov
test
jae
sahf
push
retf
movs
test
pop
in
jae
add
fbstp
(bad)
pushf
lods
aad
jb
inc
out
jnp
imul
xor
inc
aad
push
arpl
and
mov
ins
mov
xchg
push
rcl
push
out
int
jae
cmp
mov
or
xchg
aad
push
retf
mov
cld
mov
stc
pop
in
sbb
jg
push
jo
(bad)
aas
or
out
jne
aaa
push
out
push
adc
ja
cmc
push
inc
les
pusha
ds
(bad)
cmp
push
enter
call
inc
jnp
aaa
cmp
and
jge
mov
imul
cmp
stos
mov
dec
stos
mov
hlt
xchg
xchg
add
cmc
retf
lds
shr
lahf
mov
inc
jb
jmp
or
out
outs
gs
outs
add
adc
mov
adc
jge
gs
jmp
mov
xchg
or
sub
fisttp
push
and
pop
cmps
dec
dec
inc
mov
ret
je
cmp
outs
cmps
call
add
jnp
lods
ds
and
outs
scas
sahf
loopne
clc
ficomp
sbb
jg
pop
or
push
ror
out
ins
xchg
aas
cmp
inc
sbb
push
xchg
and
into
dec
sbb
in
dec
xchg
push
mov
pop
mov
sub
adc
mov
mov
sub
sub
sar
and
std
mov
push
fbld
fdivr
push
test
test
jl
mov
jl
imul
jmp
fucom
jne
shl
sub
mov
int3
sub
sub
or
and
ficomp
test
sbb
jbe
and
push
add
push
dec
xchg
nop
(bad)
pop
or
push
popf
cdq
jecxz
fsub
dec
pop
loop
rcl
mov
out
lods
js
xchg
adc
mov
xor
lea
fs
jae
call
mov
bound
mov
test
jg
and
inc
stc
push
inc
pop
jae
adc
addr16
jg
jecxz
jmp
xchg
inc
push
daa
idiv
mov
sbb
scas
or
in
mov
retf
leave
push
sub
jge
or
add
pop
ins
pop
fld
clc
pop
ds
mov
ret
dec
data16
adc
add
pop
sti
cmp
xor
es
retf
push
xchg
dec
ss
mov
sbb
aas
out
jns
imul
sbb
and
dec
mov
dec
call
out
test
adc
cmp
or
cmps
jmp
aam
push
and
fldl2t
daa
or
mov
inc
mov
adc
inc
rcr
aaa
cmp
sbb
xchg
sub
jp
or
pop
mov
out
in
jle
inc
enter
push
dec
dec
jae
push
push
sub
mov
cmps
dec
push
jb
outs
inc
jge
and
mov
mov
lock
sbb
iret
xchg
(bad)
mov
push
cmp
pop
std
aad
lock
push
das
push
cdq
test
jnp
xchg
sar
pop
arpl
jno
add
fld
inc
sbb
out
rcr
sti
(bad)
pop
(bad)
retf
pop
mov
out
adc
mov
dec
retf
push
clc
xor
int3
out
mov
or
inc
mov
in
jns
xor
sub
cmps
test
inc
sub
push
cdq
inc
inc
mov
sub
mov
mov
(bad)
jle
test
enter
xlat
call
xor
add
mov
inc
into
loop
lahf
sar
aad
mov
mov
fs
(bad)
or
sub
fldenv
cmp
xor
mov
(bad)
push
xchg
std
outs
push
adc
popf
push
out
test
les
mov
sub
sub
mov
xchg
(bad)
adc
dec
bound
inc
dec
outs
and
cmp
xchg
repz
push
and
add
stc
mov
sar
push
cmp
sbb
inc
mov
popf
test
test
pop
jno
test
loope
jno
clc
mov
mov
mov
icebp
aas
test
fistp
jmp
inc
jns
movs
movs
dec
inc
cmp
inc
sub
lahf
xor
call
aas
push
xor
je
inc
rcl
xchg
push
add
sbb
lahf
sbb
jl
pop
vmovddup
ins
shl
mov
adc
dec
push
out
xor
iret
into
or
(bad)
(bad)
sbb
or
stc
sub
call
lods
sbb
jg
cmps
movs
push
push
cmps
fadd
iret
mov
mov
dec
jge
push
dec
inc
lea
jb
mov
inc
xor
xchg
aas
mov
xchg
ja
(bad)
repnz
int
ja
ret
movs
xchg
xor
les
mov
repnz
or
or
add
jge
mov
out
iret
cmp
jo
jne
jbe
lods
inc
mov
adc
push
punpckhbw
jns
icebp
aam
int3
adc
outs
jno
pushf
imul
adc
pop
loop
ret
mov
fldcw
inc
sub
jl
cmps
outs
jns
pop
pop
test
out
loope
sbb
xor
les
jb
push
shl
jg
scas
mov
or
in
js
xchg
push
xchg
sub
and
cdq
out
cmp
icebp
xchg
xchg
adc
mov
mov
add
call
sti
(bad)
xor
pop
fwait
add
and
sub
sub
sub
fimul
loope
jb
xlat
lds
outs
push
pop
adc
push
cli
cmp
hlt
cmp
push
mov
mov
push
push
sub
or
jae
inc
lods
and
jns
mov
fadd
inc
pop
adc
inc
mov
cmps
and
mov
pusha
fidivr
mov
fimul
test
gs
jo
int3
mov
pop
cmps
icebp
jae
sbb
arpl
shr
add
push
sbb
mov
fxch
add
pusha
xchg
xchg
cdq
xor
mov
test
es
adc
rcl
das
int
inc
mov
add
sbb
mov
shr
lea
sbb
sub
cdq
xor
mov
in
pop
add
push
push
sub
dec
or
adc
mov
add
mov
mov
fwait
inc
ss
mov
icebp
xor
arpl
add
xchg
das
pushf
(bad)
jnp
adc
shr
dec
jecxz
stos
ss
mov
popf
int3
cmp
cmp
or
inc
mov
stos
fwait
mov
mov
lods
inc
push
dec
(bad)
xchg
test
jns
rcl
mov
jno
pop
popa
movs
mov
repnz
inc
icebp
jae
or
rcr
in
add
leave
cmp
push
jnp
(bad)
mov
xlat
dec
gs
aad
pop
or
push
sub
push
sub
inc
mov
mov
jae
cwde
(bad)
push
xor
in
hlt
enter
stos
out
mov
cmp
mov
mov
sbb
pop
test
(bad)
js
inc
hlt
xchg
push
jp
lea
into
jecxz
xchg
jns
aaa
gs
aad
sahf
into
out
sub
or
mov
jl
adc
sub
dec
icebp
pusha
sar
sbb
movs
in
ret
pop
mov
xor
sub
sbb
out
nop
sbb
js
sbb
push
push
and
loop
jmp
jmp
aad
inc
test
jnp
sub
pop
add
aas
jl
cmp
dec
mov
stos
out
ret
mov
data16
mov
xor
cmp
ins
adc
cmp
mov
jg
jmp
add
push
inc
mov
ja
out
mov
out
imul
cmp
cdq
push
(bad)
loopne
dec
adc
sahf
loope
and
aaa
mov
(bad)
int3
pop
mov
xor
sti
aad
push
mov
mov
call
mov
pop
mov
popa
or
cmp
into
sub
test
push
adc
movs
cmp
es
push
cs
loopne
mov
mov
jne
icebp
pushf
sbb
bnd
gs
aam
add
lods
sbb
(bad)
(bad)
test
les
repnz
push
jmp
dec
std
rol
sti
fdiv
neg
lds
cmp
jge
ins
repnz
cs
xchg
jmp
inc
add
out
cmp
repnz
loop
rcr
fild
add
cmps
push
inc
xchg
jmp
sub
mov
stos
adc
wbinvd
repnz
xchg
inc
test
mov
mov
mov
popf
jecxz
arpl
stc
jae
cmps
mov
add
movs
sub
jbe
retf
and
das
mov
add
maxps
or
xor
test
aad
outs
sbb
inc
xchg
push
push
mov
movs
xor
sbb
inc
mov
cmps
into
cdq
daa
mov
push
in
adc
push
lds
push
xchg
in
movs
inc
loope
xor
repnz
mov
(bad)
gs
fstp
loop
mov
sub
movs
xor
mov
or
push
pop
es
mov
mov
inc
cmps
inc
popa
add
sub
loope
fdivr
xchg
sub
mov
leave
adc
and
add
push
sar
lahf
cs
mov
or
fstp
mov
sahf
out
mov
cmp
mov
lea
leave
add
mov
sbb
mov
fcmovnb
test
mov
aam
push
in
mov
je
mov
cmp
shl
shr
mov
imul
in
cdq
pop
scas
jmp
(bad)
js
das
loope
sbb
mov
scas
adc
rcr
(bad)
scas
sub
rol
(bad)
pop
sub
sbb
xchg
sbb
fiadd
push
stos
mov
mov
(bad)
mov
fwait
cmp
push
test
neg
(bad)
dec
mov
push
jno
es
shl
repz
sbb
dec
call
es
or
lods
ror
test
sub
xchg
cdq
jmp
push
sbb
mov
mov
mov
sti
je
mov
repz
test
mov
out
xchg
aam
jo
xchg
jge
(bad)
or
div
call
jo
enter
mov
pop
cld
mov
cdq
cli
loopne
add
repnz
les
loope
adc
jb
aam
or
test
sub
push
add
push
pop
mov
jg
in
gs
std
stos
scas
inc
xor
in
aam
dec
pop
jbe
ss
pop
mov
fs
daa
mov
mov
fld
nop
mov
push
cwde
or
xchg
les
and
inc
movs
sub
jge
in
ja
mov
jbe
xor
adc
test
inc
dec
lods
lahf
jb
mov
ret
data16
imul
dec
imul
jmp
jg
fdivr
(bad)
pop
xor
sbb
xchg
dec
add
jbe
aad
jo
sti
aad
or
enter
xchg
fist
cld
out
mov
push
out
jb
dec
xchg
sub
in
inc
(bad)
fstp
add
jb
jo
add
movs
outs
clc
jmp
add
jmp
call
push
mov
cmps
js
sbb
into
outs
xchg
sbb
sbb
or
mov
mov
cli
mov
jl
inc
dec
out
pop
stos
fdivp
scas
xor
arpl
adc
inc
mov
int
pop
aam
bound
xchg
or
je
ret
call
sbb
enter
aam
xchg
or
es
xchg
pusha
jle
pop
sub
cmp
cmps
mov
mov
mov
adc
cmp
rol
ret
push
out
popa
leave
jb
lock
cs
push
out
in
add
dec
push
xchg
add
push
idiv
sub
lds
movs
loope
sub
mov
pop
or
cmp
push
jge
out
inc
push
xor
sar
icebp
mov
adc
mov
and
xlat
fisttp
rcl
cwde
fdivr
dec
push
add
fsub
jb
cmp
test
pop
retf
dec
stos
pusha
imul
cwde
push
shr
gs
or
in
lock
mov
mov
and
adc
ins
push
int
cmp
and
xor
pusha
popf
std
std
mov
in
mov
data16
push
lahf
mov
sbb
adc
mov
jnp
sbb
bnd
pushf
sbb
outs
shl
in
fst
dec
int3
mov
xchg
hlt
fisubr
lds
push
add
shl
sbb
in
inc
pcmpeqb
push
arpl
fs
stos
(bad)
jmp
ret
ror
push
(bad)
push
cmc
mov
xchg
mov
cli
add
jl
popa
inc
test
xor
mov
jo
jnp
es
fs
das
scas
xor
push
cdq
push
retf
aas
dec
cmp
mov
sti
sub
or
mov
shr
int
add
and
fisub
stc
popf
or
dec
outs
int
and
cdq
dec
push
aas
cld
push
push
push
mov
adc
mov
ins
sahf
push
xor
add
cmp
ror
imul
or
add
jne
fistp
jns
ss
stos
mov
xor
addr16
push
lods
inc
stos
push
retf
imul
mov
xchg
repnz
inc
rol
mov
sahf
push
and
jbe
jns
int
push
push
add
cld
push
jge
pop
es
rdpmc
les
cli
loop
dec
push
cli
cdq
mov
and
aaa
inc
aaa
mov
ja
or
sub
fmul
mov
neg
movs
aad
push
mov
xor
dec
xchg
aaa
add
push
jbe
inc
pop
out
add
or
retf
push
icebp
ja
in
push
icebp
cmps
mov
and
and
pushf
xor
je
mov
fs
arpl
jnp
sahf
(bad)
mov
push
xchg
cli
jecxz
aam
ret
adc
jnp
sti
je
and
cmp
adc
and
mov
jg
and
push
ss
inc
inc
cld
nop
movs
and
or
or
dec
jno
hlt
rol
mov
cdq
sub
mov
mov
cmc
mov
mov
iret
imul
pop
mov
sub
dec
dec
push
ss
lods
xor
(bad)
sub
aad
xor
daa
adc
aad
stc
ret
and
cwde
sbb
xchg
xor
call
out
out
hlt
jo
add
adc
pop
sti
or
fdivr
push
mov
inc
outs
gs
sbb
or
or
pop
cld
xor
out
ss
(bad)
jmp
stc
adc
cld
scas
stos
ja
inc
and
gs
pop
outs
pushf
int3
cmps
adc
add
adc
aaa
pop
and
add
pop
cs
pop
test
add
ror
xor
ds
stos
retf
add
sbb
mov
shl
inc
sub
(bad)
mov
jbe
pop
sub
(bad)
cli
rcr
mov
sub
mov
and
push
int3
(bad)
(bad)
in
shr
outs
addr16
push
dec
daa
ja
lods
ja
arpl
cmp
xor
inc
adc
fisttp
sbb
jno
outs
ja
xchg
lds
xor
(bad)
cld
dec
icebp
adc
add
or
loopne
movs
add
retf
stos
mov
xor
in
in
jge
daa
lahf
daa
mov
mov
mov
push
shr
rcl
dec
into
push
loop
stos
and
jmp
cmp
aad
and
aas
or
fs
and
cld
enter
out
adc
aad
adc
setg
adc
and
inc
das
xor
xchg
call
dec
push
inc
mov
and
das
fimul
out
ja
bound
call
sbb
mov
sbb
cmps
test
and
cmp
cwde
xchg
aas
loop
sub
cwde
fcmove
loope
stos
dec
js
pmullw
nop
aad
jo
in
add
je
daa
imul
fmul
lahf
out
pushf
fst
add
xor
adc
dec
inc
fistp
adc
pop
mov
aas
mov
mov
add
ds
or
cwde
idiv
arpl
inc
lea
lock
adc
ins
rcl
sbb
jge
mov
cs
and
mov
pop
xchg
mov
jbe
sbb
xchg
mov
push
and
jmp
xchg
jg
mov
xchg
dec
sahf
add
mov
sar
inc
xor
sti
jp
pushf
dec
pop
mov
aas
mov
icebp
adc
push
movs
adc
jl
and
fsub
pop
pop
data16
sbb
jb
push
pop
xor
dec
loope
loope
add
pop
push
or
xor
les
dec
mov
xchg
jmp
jno
push
int3
cmps
sbb
sbb
jns
mov
cmps
adc
ret
in
(bad)
or
sti
ins
lods
sti
mov
jg
xchg
jg
rol
arpl
jp
inc
mov
popa
add
scas
cwde
cmc
ins
sahf
daa
xor
(bad)
and
inc
xor
pop
(bad)
test
cmc
xor
aas
vdivss
adc
push
add
mov
or
mov
xchg
mov
and
push
xor
stos
sbb
push
mov
ins
pop
iret
cmc
aam
sahf
pop
mov
js
(bad)
gs
pop
jo
jbe
pop
jo
es
pop
popfw
call
jmp
push
loope
inc
cmc
stos
jmp
jb
enter
pop
ds
test
leave
enter
pusha
es
pop
sbb
push
sbb
cmp
mov
mov
in
rol
fdiv
mov
xor
cmp
jmp
jl
pop
jnp
jae
in
xor
jl
mov
inc
ds
xor
jl
mov
jmp
popa
jmp
xor
sbb
cmp
pop
aad
cmp
lea
inc
cld
mov
cwde
out
iret
inc
sbb
adc
mov
scas
sub
aaa
fidiv
sub
les
pop
adc
xchg
dec
add
sub
bound
(bad)
repz
mov
ds
gs
jl
hlt
movs
outs
xchg
in
aam
neg
push
int3
clc
pop
dec
mov
js
jno
xor
scas
add
mov
clc
test
push
dec
movs
sub
test
hlt
xor
cmp
pusha
arpl
mov
xor
xchg
jmp
bnd
scas
sahf
adc
xor
add
or
ds
repnz
iret
inc
adc
mov
xchg
xor
movs
mov
test
jne
push
rcl
dec
sub
mov
repnz
cmc
mov
stos
pop
inc
aaa
test
xchg
retf
jmp
push
cmps
sbb
xlat
mov
mov
cmp
dec
(bad)
mov
fimul
sbb
xchg
enter
xchg
out
add
ror
mov
mov
test
inc
jmp
mov
fiadd
jns
scas
gs
aaa
and
cmc
xor
sbb
ret
jno
pusha
aaa
lock
pushf
hlt
adc
call
sbb
add
repnz
inc
fldcw
mov
push
mov
jns
inc
fnstsw
fstp
xchg
mov
mov
mov
pop
movs
pop
adc
cmp
xchg
and
jmp
lea
mov
rcr
jmp
add
or
jecxz
addr16
inc
inc
jge
dec
adc
and
scas
dec
(bad)
jne
xor
and
cmp
jo
or
out
or
mov
shl
and
call
cmp
push
iret
pop
std
call
inc
test
xor
mov
push
cmp
or
inc
xor
inc
xor
xor
shl
inc
mov
stc
inc
(bad)
mov
call
test
pop
mov
mov
xchg
xchg
aam
xor
add
mov
mov
push
cmp
add
movs
test
xchg
push
fs
enter
mov
loope
loop
ja
push
sub
sub
xchg
into
jecxz
icebp
or
cmp
or
sub
movs
inc
movs
sahf
pop
jmp
pop
retf
mov
hlt
and
xchg
and
mov
jno
dec
sahf
mov
push
cmp
ret
push
mov
(bad)
adc
dec
inc
js
fcomp
mov
jmp
jmp
(bad)
std
jl
inc
sub
je
mov
push
popa
rcl
je
jmp
aam
mov
cmps
cmp
nop
data16
in
cmps
je
imul
loopne
jo
pop
scas
jmp
cmp
add
call
test
sub
(bad)
sti
shr
pop
mov
je
outs
outs
pop
hlt
jnp
sahf
cdq
and
scas
mov
jmp
mov
lock
out
test
gs
mov
es
mov
mov
ret
push
adc
inc
push
into
into
call
push
div
push
pushf
push
loopne
in
jae
and
ins
daa
arpl
xor
lahf
inc
dec
ds
rcl
aam
repnz
sub
popa
scas
imul
mov
pop
ins
jns
jae
pop
mov
js
stos
lods
(bad)
dec
jmp
mov
iret
fst
sar
sub
xor
pop
mov
lock
mov
ja
in
xchg
add
dec
gs
sbb
and
pop
mov
adc
add
arpl
xor
pushf
inc
jno
cmc
mov
jmp
adc
pop
pop
pop
xor
sub
xor
fsub
sahf
mov
push
dec
adc
ror
mov
repz
je
add
mov
out
les
daa
add
cmps
push
dec
out
dec
lds
pop
repz
das
fisub
call
enter
loop
cdq
ja
or
test
xchg
jg
push
sbb
outs
movs
outs
jnp
dec
and
xor
jg
push
inc
fisttp
leave
and
push
mov
add
dec
call
pop
adc
in
mov
arpl
stos
mov
das
fidiv
cdq
dec
dec
ret
dec
mov
jmp
enter
push
mov
hlt
cmp
test
int3
mov
popf
(bad)
scas
out
xor
aas
sub
cmp
add
das
dec
sub
and
(bad)
lock
pop
ret
imul
push
jne
shr
mov
and
nop
clc
sbb
lock
jge
ds
pop
stos
retf
sbb
push
cmp
and
inc
(bad)
and
mov
jp
inc
inc
fbld
aaa
push
fwait
daa
ror
add
mov
ret
enter
or
and
inc
inc
sub
scas
(bad)
xchg
js
cmp
dec
mov
daa
ins
ins
bound
mov
(bad)
cwde
retf
hlt
xchg
dec
ds
adc
sahf
outs
cmp
cmp
mov
bound
shl
imul
cmp
or
xchg
mov
mov
add
jmp
leave
xor
mov
jns
pop
repz
lahf
rep
jp
pusha
mov
adc
sub
pop
or
and
sar
in
cmps
sub
stc
sub
std
add
sub
mov
xchg
cmp
nop
(bad)
cld
imul
jbe
add
aam
bound
jecxz
pop
inc
push
aam
test
sbb
xlat
add
cmc
dec
dec
sub
test
jg
lahf
and
push
nop
adc
leave
pop
and
sub
jne
and
xor
in
mov
rcr
rol
aas
adc
out
inc
(bad)
push
mov
add
fs
sti
in
mov
ret
outs
movs
sub
idiv
inc
and
iret
mov
jo
jno
(bad)
pop
inc
adc
push
in
add
cmp
fist
jge
inc
fsub
repnz
push
ret
(bad)
cdq
push
mov
push
les
mov
xor
mov
addr16
push
push
adc
and
fs
mov
js
mov
or
in
push
cwde
inc
jae
repz
enter
jecxz
shl
iret
mov
mov
xchg
out
and
ret
ds
cmp
rcl
pop
push
jmp
jno
ror
jl
jl
in
adc
retf
jnp
sbb
jge
dec
mov
sub
mov
sti
jle
sub
xchg
or
icebp
or
bound
mov
js
push
test
dec
jnp
lea
fs
in
loop
push
stc
je
dec
xor
jl
and
xor
test
sti
inc
dec
sub
nop
popa
neg
retf
out
mov
pop
jp
shl
test
push
or
ins
xchg
and
push
sub
jmp
jmp
popa
aaa
jle
cmp
add
nop
ins
test
or
hlt
mov
xor
stos
fcmovne
xor
out
xchg
out
pop
inc
jecxz
fs
(bad)
retf
sbb
mov
jns
daa
mov
inc
pop
jmp
fwait
mov
xor
push
add
popf
dec
aad
aad
sbb
sub
in
push
cli
push
mov
dec
mov
adc
movs
int3
cmp
cmp
lods
out
cld
mov
inc
sub
dec
mov
pop
jne
mov
adc
in
and
xlat
enter
fist
and
les
dec
jae
jne
lods
sub
jmp
mov
or
dec
pop
sub
dec
pop
jo
or
jmp
and
rcr
ror
gs
(bad)
mov
in
mov
cmp
mov
cmp
js
sub
(bad)
push
pop
aas
clc
adc
sub
stos
jae
xor
das
ins
add
mov
mov
fxch
fmul
fdivr
mov
das
test
cmps
loop
xor
mov
test
cmp
jg
add
sub
scas
cmp
iret
imul
adc
push
ret
and
jbe
add
pop
xor
sub
dec
test
not
sub
jmp
add
retf
and
loop
shl
movs
push
push
sbb
out
mov
in
pop
sub
outs
stc
push
push
or
dec
mov
cwde
int
adc
add
ins
test
mov
jl
fadd
icebp
sub
mov
cs
add
jmp
mov
adc
push
cmp
(bad)
outs
jmp
imul
iret
adc
adc
popa
pushf
(bad)
adc
popf
jae
test
pop
and
mov
sbb
cmc
push
mov
pop
pop
pop
cmc
call
ja
push
mov
pop
out
mov
in
iret
push
inc
in
mov
jecxz
push
inc
add
das
(bad)
mov
sub
push
cli
adc
dec
jne
imul
je
pusha
sub
cmp
xor
mov
pop
jns
mov
sbb
(bad)
dec
lds
xor
add
mov
ja
popf
jge
mov
scas
retf
addr16
cmp
(bad)
icebp
mov
adc
and
add
xchg
pop
push
mov
push
ss
jle
repz
xor
rcl
inc
push
pushf
(bad)
fmul
sub
and
xchg
jae
and
push
imul
pop
fwait
dec
xlat
add
mov
stos
pop
nop
xchg
stc
fdiv
adc
xchg
cli
sbb
mov
or
icebp
mov
lea
outs
adc
out
mov
push
aas
ins
aaa
jne
enter
dec
cmps
sbb
push
push
xchg
sahf
mov
jg
ins
lods
into
xchg
mov
or
xchg
sub
mov
outs
push
mov
pusha
in
sbb
cmc
xor
pop
sub
mov
div
push
inc
lahf
shl
fmul
mov
jns
jp
cmp
loope
push
daa
lods
mov
call
pushaw
ret
out
hlt
pmuludq
rcl
mov
pop
or
fisttp
loope
xor
fcom
mov
jecxz
mov
jge
sbb
xor
retf
ss
(bad)
or
mov
mov
mov
inc
jns
out
ins
mov
push
add
mov
outs
and
pop
mov
jo
fild
not
ins
pop
cmp
cmp
or
in
sahf
sbb
das
ja
sbb
lahf
in
ds
xor
retf
pop
inc
adc
jno
retf
jge
cmp
pop
inc
adc
outs
frstor
add
imul
dec
adc
or
pusha
call
fbstp
or
inc
mov
fnsave
xor
xchg
outs
or
mov
sbb
ficomp
shr
imul
popa
movs
shl
loopne
inc
and
das
dec
mov
push
jo
mov
test
xchg
fcomip
xor
xor
mov
and
fbld
push
dec
push
sti
loope
pop
dec
mov
sub
fild
mov
jae
fnsave
ror
push
fcomp
shr
repz
loop
dec
ds
mov
dec
push
movs
xchg
ror
fidiv
mov
pop
fidivr
arpl
jmp
test
dec
jae
xchg
sub
mov
(bad)
mov
and
xor
cmp
(bad)
mov
in
or
sbb
push
push
push
pop
xor
sub
pop
ret
add
pop
mov
add
push
ja
daa
je
dec
loope
mov
mov
jo
test
add
jmp
push
hlt
shl
xor
jo
push
jle
loope
mul
lock
mov
mov
(bad)
dec
retf
repnz
dec
cmps
sub
lods
pop
inc
in
loope
mov
adc
lods
sub
sub
ror
adc
mov
cs
into
sub
das
jmp
stos
ret
out
sbb
cld
(bad)
out
and
push
mov
xor
inc
cs
push
adc
mov
mov
out
movs
sbb
xchg
iret
push
inc
sar
test
ins
mov
sbb
sbb
jb
lock
mov
bound
mov
jne
jne
sbb
outs
sar
jb
cld
sub
jle
xlat
mov
(bad)
jo
mov
(bad)
ret
push
sub
dec
call
push
push
icebp
cmp
cwde
out
addr16
xchg
stc
pop
dec
cmc
es
loop
sub
aad
xchg
push
mov
mov
mov
nop
inc
mov
jnp
xor
adc
fnsave
push
mov
std
mov
jg
aad
sti
test
in
sahf
in
test
adc
inc
xchg
ret
jae
das
fs
(bad)
fstp
jecxz
test
cmp
arpl
movs
mov
or
jmp
sbb
test
fisttp
cmc
adc
je
sub
and
jle
mov
add
mov
xchg
test
xlat
and
adc
cmp
jnp
ficom
xchg
sub
mov
daa
sbb
sar
enter
mov
mov
jno
mov
mov
sub
stos
lods
dec
fcomp
or
inc
pop
or
dec
nop
js
push
push
push
jae
hlt
imul
mov
aas
dec
gs
into
test
fst
(bad)
mov
ins
push
es
outs
leave
cmp
adc
loope
scas
pop
cli
jmp
dec
rcl
(bad)
in
fcom
stos
inc
push
cmps
stos
push
add
sar
sub
mov
pushf
sub
add
out
popf
call
xchg
(bad)
rol
mov
scas
lock
jge
mov
mov
dec
jmp
loope
cdq
cmps
fldenv
jmp
shl
cmp
jge
xor
fimul
jns
mul
cmp
mov
xchg
repz
loopne
push
out
adc
push
outs
push
in
pop
scas
sahf
xor
imul
(bad)
retf
mov
sub
mov
push
mov
ss
push
add
pop
test
in
mov
shr
sbb
mov
pop
retf
lods
cli
cli
sub
aas
mov
jmp
call
xor
jecxz
(bad)
mov
jnp
fnsave
adc
adc
scas
and
out
rcr
mov
sub
mov
sti
cs
or
in
div
pop
ins
adc
fwait
jbe
mov
test
ins
add
adc
push
into
pop
pop
and
and
pop
mov
push
dec
pop
cmp
outs
cmp
sub
cwde
and
les
jge
loope
jg
cdq
push
fcomp
mov
ret
leave
loopne
inc
dec
test
repnz
into
xor
and
add
jecxz
inc
rcr
std
pop
adc
and
cli
sbb
jmp
push
and
jae
outs
mov
mov
adc
add
cmp
stc
int
aam
icebp
das
loopne
call
mov
cmp
cld
push
inc
inc
inc
arpl
nop
inc
scas
inc
add
out
inc
mov
imul
stc
out
into
and
nop
js
bound
mov
xchg
ret
push
mov
add
and
(bad)
mov
frstor
sbb
dec
ja
jns
add
dec
pop
mov
and
rcr
dec
fs
cmp
xor
addr16
mov
into
sub
dec
les
jo
test
idiv
push
jecxz
and
(bad)
jmp
push
fiadd
not
(bad)
out
cmp
sub
mov
enter
cwde
sbb
pop
sar
fnstcw
pop
(bad)
push
adc
cdq
lock
pop
cmp
pop
dec
repnz
mov
scas
mov
sub
gs
sbb
pop
inc
scas
mov
dec
and
jp
xor
ret
pushf
retf
dec
add
xchg
shl
lock
mov
pop
sbb
xchg
lahf
xor
(bad)
mov
test
aas
in
ja
sub
test
and
and
sahf
adc
mov
xchg
sub
push
cs
je
sar
aam
ins
stos
leave
jns
xchg
daa
or
pop
xor
push
inc
adc
call
enter
jge
add
data16
ja
ja
lock
je
aam
add
add
addr16
ret
ins
inc
(bad)
fwait
retf
mul
or
rol
fisubr
adc
sti
call
sbb
dec
fbstp
push
adc
mov
and
jle
jl
lods
lods
xchg
inc
push
sub
sub
adc
test
cwde
les
add
in
fabs
mov
mov
inc
mov
fnstcw
xchg
aad
add
clc
push
aas
dec
out
lods
and
pop
mov
jno
or
and
mov
daa
int3
xchg
xlat
mov
xor
xor
sub
imul
dec
push
and
sti
inc
hlt
arpl
in
push
in
adc
fbld
push
frstor
push
(bad)
movs
jecxz
(bad)
add
out
push
push
or
js
cmp
loopne
jp
jae
sub
arpl
push
jae
add
xlat
pop
push
pop
push
das
jae
and
pop
lea
repz
pop
jg
in
bnd
push
sbb
sbb
or
fs
xor
test
adc
push
push
(bad)
mov
cli
cmp
jne
push
add
jg
mov
pop
aas
jl
fisubr
sub
sbb
repnz
punpcklwd
jns
in
sub
mov
and
test
ja
jo
test
xchg
jbe
xchg
in
cli
aam
push
sub
retf
push
cmp
arpl
add
and
jb
mov
repnz
lock
mov
dec
bnd
push
pminsw
xchg
pop
adc
jo
cmp
sbb
ins
repz
gs
or
aaa
std
imul
out
nop
mov
or
imul
call
mov
fld1
adc
(bad)
adc
outs
mov
sti
push
scas
dec
fwait
push
xor
retf
(bad)
jae
int3
shl
ins
or
dec
arpl
fcom
jg
pop
aas
ss
adc
dec
pop
dec
into
cli
into
retf
call
mov
ret
in
aaa
clc
mov
add
mov
push
inc
movs
sahf
fs
test
adc
int3
mov
xor
mov
neg
xor
jp
adc
cmp
(bad)
xchg
adc
add
push
xor
cmp
mov
addr16
lods
cmp
jmp
cmp
(bad)
adc
push
mov
stos
inc
cs
mov
inc
and
scas
push
xchg
push
sbb
xchg
div
mov
fdivr
push
repz
cdq
mov
test
rol
cld
or
scas
ror
int3
lock
outs
inc
dec
scas
jnp
jl
fwait
mul
mov
scas
sbb
cmp
mov
xchg
in
sbb
add
jo
outs
cmp
int
jmp
add
cmp
into
sbb
mov
pop
repnz
xor
mov
and
cmp
pop
and
inc
jae
add
(bad)
adc
leave
daa
jne
inc
pop
mov
sub
int
in
mov
and
xchg
add
push
push
call
fwait
mov
xchg
inc
mov
push
shl
fisubr
add
aad
jl
lock
xchg
in
and
fild
mov
scas
xchg
xor
mov
add
ja
imul
pop
and
out
int
int3
movs
pop
fld
or
ja
(bad)
pop
aas
adc
inc
cmc
mov
out
popa
sub
mov
clc
ret
pop
push
jbe
cmp
xchg
adc
mov
or
mov
ds
mov
not
js
push
xor
clc
push
outs
fisubr
and
lea
add
sub
xchg
aas
adc
call
push
xor
inc
call
mov
sti
test
enter
and
mov
cmp
jnp
dec
mov
xor
in
lods
pop
pop
and
sub
inc
addr16
jmp
add
pop
stc
sub
adc
push
mov
mov
and
aad
push
sahf
lock
call
cmp
and
cmps
fwait
int
jae
xor
inc
iret
movs
cmp
add
test
ss
push
js
inc
inc
dec
outs
cmp
out
jl
outs
mov
outs
sub
xor
sbb
sub
ret
sub
inc
pop
arpl
pop
sbb
rol
repnz
mov
cmp
mov
loope
repnz
(bad)
pop
or
mov
xor
rol
pop
aam
xchg
inc
adc
retf
rcr
addr16
push
fistp
sub
out
in
add
add
stc
xor
test
xor
cmps
mov
ret
aaa
xchg
loopne
inc
add
push
stos
scas
adc
pop
cdq
add
out
aas
pop
mov
aam
pop
jae
test
(bad)
shl
(bad)
pop
push
icebp
add
cwde
mov
pusha
jno
pop
push
pop
sbb
lahf
imul
mov
pop
inc
pusha
xchg
mov
rol
push
mov
repz
mov
(bad)
dec
(bad)
ss
pop
jnp
inc
pop
jmp
jo
pop
inc
and
pop
(bad)
sbb
test
shl
xor
pop
(bad)
lock
in
loop
repnz
mov
cwde
inc
mov
and
cmp
xchg
inc
xor
dec
xchg
into
or
lahf
adc
jns
mov
int3
jle
out
je
std
adc
(bad)
jbe
rol
(bad)
adc
add
imul
mov
cdq
adc
push
mov
(bad)
fdiv
mov
fist
neg
push
pop
lods
not
cmp
dec
lds
mov
jns
xor
or
cmc
gs
mov
xchg
add
pop
push
bound
aaa
(bad)
cmps
cwde
cmp
mov
outs
add
mov
scas
pop
arpl
add
xchg
inc
call
rcr
or
ins
inc
ins
je
jmp
cmp
jnp
or
test
adc
xchg
aam
repz
lea
pop
mov
cmc
jne
adc
pop
bnd
ss
ret
int
cmc
jb
xchg
dec
adc
xchg
and
mov
and
or
pushf
jp
pop
xor
jmp
inc
retf
mov
mov
fs
jl
mov
xor
sub
inc
call
add
jmp
jbe
leave
sub
jns
and
fst
dec
stc
jbe
or
mov
leave
mov
retf
dec
mov
dec
add
mov
cdq
(bad)
or
fisub
xor
mov
jno
adc
sahf
dec
mov
shr
sbb
push
jl
movs
popa
ds
inc
stos
stc
inc
xchg
(bad)
jmp
ins
mov
jmp
addr16
arpl
retfw
xor
xchg
mov
lods
mov
and
js
and
ins
sar
mov
jns
pop
arpl
or
sub
ss
clc
push
ret
inc
pushf
pop
lods
xlat
in
jl
push
stc
std
fstp
sub
movs
jg
adc
jno
je
(bad)
pop
jmp
xor
ins
cld
jp
xchg
fcomp
mov
cmp
imul
inc
mov
jg
outs
repnz
mov
stc
je
fwait
inc
xor
jbe
jbe
xor
dec
cmp
jno
inc
pop
or
sti
push
(bad)
xchg
into
test
and
jg
adc
adc
pop
mov
and
sub
xchg
mov
call
js
mov
in
test
in
add
lock
xchg
dec
pop
daa
sbb
scas
cmc
cs
mov
pushf
mov
test
jbe
mov
rol
mov
mov
leave
pop
test
fldenv
in
shl
mov
enter
mov
hlt
pushf
rcl
jne
movs
sbb
in
jmp
push
mov
jns
jbe
cdq
(bad)
adc
xlat
mov
mov
dec
xor
jle
or
xor
gs
ret
xor
lds
push
xor
push
mov
lods
lahf
dec
nop
fdivr
stos
lock
hlt
out
fcom
jmp
mov
gs
daa
mov
xchg
xchg
fwait
xchg
and
jl
mov
mov
inc
lock
stc
cmp
out
push
inc
ins
pop
aas
xor
popf
inc
in
add
mov
aam
push
std
pop
je
xor
xlat
push
mov
mov
ret
fstp
hlt
jno
cmp
das
cmc
nop
gs
outs
fidiv
push
mov
add
fld
sub
fiadd
sub
cli
fs
fdiv
add
icebp
in
movs
ds
aam
(bad)
or
push
aad
imul
popf
fisttp
lahf
das
popa
dec
bound
xor
push
dec
ret
cmp
inc
inc
stos
inc
pusha
or
sbb
push
dec
(bad)
pop
scas
das
outs
pop
fdivr
cmp
(bad)
and
fdiv
pop
mov
mov
lods
scas
jo
or
cmp
pop
out
scas
add
ja
push
mov
imul
jae
push
mov
mov
rcl
push
mov
mov
inc
and
les
ret
(bad)
sub
lds
ds
cmp
outs
add
clc
cmp
or
mov
cmp
neg
outs
adc
jl
adc
loopne
out
jg
cmp
xchg
mov
cwde
push
add
and
add
push
mov
cmp
dec
add
pop
repz
ins
(bad)
test
sti
sub
fistp
or
cmp
shr
fist
pop
pop
or
sbb
mov
sub
push
cmp
inc
push
xor
xchg
xchg
mov
js
dec
(bad)
jnp
push
xor
stc
shl
adc
js
fdivrp
adc
inc
fcmovnb
int3
pop
mov
push
jl
ds
dec
call
sub
cmps
mov
ficom
fadd
clc
pop
xchg
movs
shl
addr16
shr
mov
gs
push
dec
push
mov
aad
cmp
pop
mov
sub
cmp
jmp
and
je
pop
(bad)
push
leave
pop
movs
fsubr
pop
and
jmp
mov
aad
mov
sub
les
(bad)
cdq
out
push
fcmovb
mov
and
inc
idiv
cmps
shr
rcl
ss
fnstsw
xchg
push
hlt
jno
ret
jne
outs
outs
or
adc
cmp
test
repnz
push
push
cdq
cs
mov
retf
std
aas
test
cmc
add
pop
push
int3
pop
push
call
leave
add
int3
push
pop
inc
inc
jmp
xor
pop
mov
inc
mov
inc
cmc
fmul
jnp
jecxz
or
ss
cmps
jbe
sbb
sbb
inc
pop
inc
pop
adc
pop
mov
in
cmps
sub
pop
mov
sub
mov
(bad)
je
sub
adc
and
fwait
leave
inc
xchg
fist
mov
mov
(bad)
je
or
fild
int
(bad)
mov
ins
test
push
adc
jb
loopne
rol
lahf
push
in
fcomp
xor
(bad)
push
xor
or
xor
test
xchg
sbb
ins
adc
mov
(bad)
(bad)
loop
retf
sbb
out
fs
mov
mov
mov
out
imul
std
xor
jno
dec
dec
mov
mov
loope
inc
std
lds
push
add
or
aaa
or
(bad)
add
sbb
jecxz
add
ret
ss
into
outs
mov
outs
ret
fnstcw
sub
fwait
iret
xchg
test
mov
std
pop
fs
push
xor
in
dec
sbb
mov
cmps
stos
int
push
sub
or
mov
jecxz
shr
jb
(bad)
and
push
cmp
(bad)
test
xchg
xchg
or
xor
in
inc
ja
pop
outs
pushf
cwde
ja
cmp
stos
(bad)
call
or
inc
jb
gs
and
inc
mov
jge
pop
mov
push
mov
mov
jge
and
dec
mov
push
mov
aam
dec
jns
sbb
imul
dec
sahf
xor
push
sbb
(bad)
jbe
sub
inc
jbe
out
in
gs
imul
mov
xor
mov
dec
push
pop
in
call
sub
mov
out
cs
xor
dec
adc
cmp
in
push
into
mov
adc
push
jb
(bad)
stc
fld
iret
popaw
ror
sbb
pop
mov
pusha
cmp
push
call
es
pop
shl
mov
rcr
dec
mov
rcr
cmp
fimul
jo
sub
idiv
dec
in
ins
mov
cwde
xchg
dec
sbb
xchg
out
jl
imul
cmp
in
loopne
jecxz
test
dec
jae
mov
(bad)
ja
sbb
cmps
push
test
push
gs
mov
or
jno
inc
nop
cli
ins
shl
cdq
mov
add
sbb
xchg
sub
sbb
sbb
repz
shl
xchg
inc
jo
gs
retf
push
pop
pop
pop
mov
dec
push
daa
aaa
cmc
out
add
adc
and
arpl
rcl
test
mov
movs
adc
mov
icebp
ins
dec
and
mov
sub
adc
add
dec
jle
mov
outs
xchg
fidiv
add
lahf
(bad)
mov
mov
and
and
(bad)
dec
or
movs
aaa
and
mov
shr
sub
sub
leave
lods
add
pop
icebp
sbb
rcr
mov
fild
and
retf
fnstcw
jbe
xlat
push
mov
outs
mov
rol
sub
jmp
sbb
xor
jno
pop
call
pop
aam
cli
stc
jge
xchg
inc
xchg
clc
and
xchg
fnstcw
adc
ret
ret
iret
sbb
imul
adc
sub
dec
xchg
ret
mov
and
xor
sub
jne
shl
scas
pop
sub
stc
cmp
or
jmp
xchg
jo
mov
mov
pusha
(bad)
pop
adc
xchg
xor
push
mov
mov
push
retf
add
cli
jb
cmc
std
push
iret
aas
int
jl
stc
(bad)
loope
sbb
(bad)
aas
inc
jle
push
call
sub
inc
shl
jecxz
loop
mov
mov
push
mov
jmp
fild
jno
cmp
sub
sub
jle
(bad)
cmp
dec
pop
mov
xor
cmp
sahf
pop
push
xor
scas
add
dec
mov
add
call
pop
pop
push
test
and
push
mov
mov
fistp
(bad)
ins
add
inc
push
adc
sbb
sbb
xchg
push
aam
jo
(bad)
mov
(bad)
sti
xor
mov
loope
xor
leave
jb
loop
add
add
dec
outs
test
ss
(bad)
jnp
shr
das
mov
(bad)
cli
in
ror
sub
mov
xchg
inc
outs
or
pop
add
push
pop
ss
sub
vphadddq
lahf
jnp
sub
retf
in
into
push
mov
std
inc
fcmovb
(bad)
adc
fidiv
in
repnz
aaa
loop
je
ficom
(bad)
popf
icebp
sub
and
repz
inc
pop
jmp
ret
je
cmp
xchg
lea
stos
int
(bad)
sbb
jae
iret
or
mul
in
or
out
out
or
addr16
sbb
jae
js
arpl
lock
pop
jbe
hlt
inc
adc
imul
sar
inc
sbb
cmp
dec
int3
jge
push
mul
test
imul
xchg
pop
iret
sti
je
or
adc
adc
xor
scas
and
xchg
loopne
jecxz
jle
pusha
(bad)
popf
mov
push
enter
pop
imul
pop
call
cmp
mov
int3
rcr
cld
ins
(bad)
adc
push
mov
sub
int
cmp
(bad)
xchg
ror
mov
jne
aad
rcr
sahf
jl
pop
stc
xchg
test
mov
ja
call
add
(bad)
call
cs
test
fiadd
imul
dec
adc
inc
pop
sub
or
dec
push
daa
mov
jns
xchg
dec
cli
sub
retf
je
xchg
adc
xchg
sar
jae
sbb
(bad)
shr
mov
rcl
loope
inc
movs
ror
push
pop
xor
pusha
and
mov
inc
xchg
adc
addr16
lea
jmp
cmp
mov
pop
mov
es
cmps
(bad)
repnz
pop
loopne
add
xor
sbb
enter
fwait
or
arpl
nop
outs
(bad)
dec
jo
inc
mov
sbb
xor
in
lods
lods
jp
mov
cwde
icebp
dec
push
or
xlat
gs
cmp
rol
mov
mov
mov
test
xchg
imul
mov
mov
inc
cmps
scas
sbb
imul
cmp
cld
shl
ds
fwait
jmp
pop
mov
fs
in
push
add
jo
mov
jns
mov
fidivr
mov
push
out
outs
jmp
inc
jg
arpl
or
stos
cmp
fcom
push
and
jmp
(bad)
ss
test
fisub
mov
cmp
xor
gs
(bad)
retf
dec
jb
inc
cmps
lds
dec
inc
imul
push
inc
or
push
cmps
inc
shl
and
(bad)
dec
mov
(bad)
sbb
leave
xor
push
xchg
cmp
repz
sbb
xchg
jnp
fdiv
ins
or
inc
mov
inc
imul
mov
xchg
and
shr
fisttp
mov
(bad)
lods
xchg
pop
adc
shl
loope
loopne
outs
fs
stos
jmp
scas
clc
out
mov
sub
xchg
jecxz
nop
cld
call
out
js
jp
mov
mov
stc
inc
inc
adc
add
cmc
xchg
mov
fld
repz
outs
leave
fimul
mov
mov
sti
sbb
cmp
jbe
imul
inc
jge
mov
dec
or
mov
fwait
popa
adc
pop
cmp
push
(bad)
dec
in
lods
inc
(bad)
call
jmp
jo
fidiv
in
stos
dec
sbb
leave
jg
jmp
inc
inc
sbb
sbb
enter
adc
ins
retf
mov
je
adc
gs
adc
cdq
push
mov
dec
sub
inc
jmp
sub
movs
mov
xchg
out
enter
inc
(bad)
dec
out
setle
lea
adc
mov
test
jnp
je
mov
fs
adc
out
xlat
(bad)
out
test
pop
sti
idiv
inc
in
sbb
jo
and
jmp
cs
jp
dec
mov
sub
mov
fcom
and
stos
adc
repz
xchg
jmp
mov
jle
mov
dec
stos
and
mov
xrelease
add
sbb
icebp
bound
mov
push
push
scas
xor
jbe
sbb
sub
mov
xchg
sub
xor
dec
in
sti
movs
outs
call
cli
mov
cs
jns
scas
and
jge
not
cmp
sbb
imul
retf
mov
in
add
shl
nop
push
imul
fnsave
mov
out
fldenv
sbb
(bad)
test
addr16
cmp
cmp
adc
repnz
cmp
inc
fdivr
sbb
imul
out
inc
dec
cmp
pop
pop
jno
mov
xchg
sti
int3
cmp
xchg
jge
xchg
hlt
add
sbb
cmp
(bad)
adc
and
jne
inc
stos
call
xor
shr
das
pop
add
adc
test
sbb
xlat
mov
sbb
push
ds
mov
push
mov
dec
les
dec
les
das
mov
sub
add
fistp
sub
sbb
push
test
and
xor
or
icebp
nop
gs
ins
test
shr
jo
retf
stc
adc
jbe
xor
pop
jg
fadd
cmp
adc
cmp
(bad)
enter
add
enter
das
ins
adc
xor
sbb
xchg
mov
xchg
sbb
rcl
jle
or
lods
jecxz
sub
cmps
test
xchg
jns
inc
movs
test
push
pop
pop
outs
sub
test
jbe
push
mov
push
pop
neg
jns
cmove
rcl
hlt
jb
mov
adc
add
jecxz
loope
cmp
jnp
lock
xchg
out
sahf
jno
dec
push
xchg
leave
jne
(bad)
mov
adc
lods
mov
xchg
push
sub
fcom
sbb
cdq
(bad)
sub
push
dec
ret
push
or
ins
js
dec
jno
movs
sti
fcomi
lds
adc
sar
mov
mov
pop
test
mov
push
push
data16
(bad)
mov
adc
scas
enter
retf
adc
jae
adc
sub
or
mov
(bad)
and
mov
out
and
sub
inc
imul
mov
jae
leave
stc
loop
or
mov
pop
jle
push
daa
pusha
xchg
mov
inc
imul
pop
mov
rcr
shl
jmp
addr16
cmc
or
fnstsw
into
fsub
pushf
repz
mov
cdq
cli
sti
and
daa
xchg
in
inc
mov
xchg
(bad)
mov
mov
push
xchg
shr
retf
and
les
sub
(bad)
loop
mov
aam
add
mov
mov
mov
inc
mov
pop
mov
cmp
sbb
xchg
ja
jmp
xor
nop
and
std
mov
movs
lock
cmps
sahf
es
lea
mov
jl
pop
lahf
aas
jg
movs
or
out
sbb
ficomp
enter
jle
cmc
std
std
out
jne
movs
repz
xor
clc
adc
xor
pop
scas
mov
xchg
inc
jbe
sub
(bad)
adc
enter
inc
nop
(bad)
arpl
movs
sub
cwde
call
movs
adc
gs
stc
ins
icebp
test
rcl
lods
leave
mov
test
les
(bad)
loopne
jmp
inc
sar
scas
mov
jae
add
(bad)
sbb
test
fcmovb
push
or
es
jno
retf
adc
xlat
push
sub
shl
lock
inc
mov
jae
cmps
inc
xchg
xchg
ror
push
add
sbb
inc
xor
out
lea
fdiv
mov
inc
xor
iret
pop
jmp
int
inc
fcomp
neg
and
(bad)
adc
mov
jge
movs
faddp
call
sbb
(bad)
cmp
jae
ins
out
sar
into
dec
call
out
sahf
xchg
loopne
lods
or
sbb
jg
outs
and
dec
sub
push
out
aam
ins
sbb
inc
mov
jg
xchg
cmp
and
xor
sbb
push
add
sahf
in
adc
lock
ja
icebp
fwait
push
daa
xor
cmp
repnz
daa
push
cmp
out
adc
shl
dec
xchg
les
fst
fimul
pop
cmp
clc
out
scas
ret
push
ret
sbb
push
xor
mov
mov
test
je
mov
xor
mov
jo
mov
dec
pop
or
and
movs
lahf
or
xlat
jae
or
pushf
call
movs
dec
and
lahf
ret
pop
adc
adc
dec
pop
cmp
loopne
shl
je
and
retf
mov
mov
lahf
lahf
and
sub
add
push
xlat
cmp
jmp
(bad)
ins
rcr
in
mov
xchg
push
inc
inc
aaa
popa
cmp
imul
iret
in
arpl
cmovbe
mov
mov
jno
jne
jbe
pop
das
sbb
jae
sbb
out
(bad)
adc
nop
loope
(bad)
jnp
xchg
and
arpl
imul
or
cmp
push
pop
ja
adc
aam
in
out
add
mov
sti
pop
(bad)
and
mov
xchg
cmp
dec
movs
or
mov
jmp
adc
aad
fidiv
mov
ja
jnp
push
inc
mov
push
mov
xchg
cmps
mov
mov
imul
jecxz
push
test
cli
stos
sub
add
int3
push
cmps
add
xchg
retf
in
add
popf
les
hlt
iret
ins
mov
mov
xchg
xlat
inc
ror
push
push
inc
inc
jnp
out
mov
inc
jge
mov
js
mov
stos
push
cmps
arpl
out
into
add
sbb
adc
or
jl
hlt
pop
std
push
(bad)
mov
call
push
rcl
(bad)
mov
out
mov
push
sahf
(bad)
mov
jl
mov
xchg
loop
lds
add
jns
ficomp
jns
retf
add
adc
adc
gs
or
hlt
test
inc
xor
or
push
into
sbb
pop
test
inc
popf
inc
mov
nop
mov
repz
call
(bad)
scas
(bad)
in
mov
aam
inc
jmp
sbb
mov
and
fdiv
fstp
outs
add
bound
cmp
lock
push
push
fcomp
out
push
test
mov
lods
xlat
fwait
cdq
pop
icebp
jmp
push
addr16
imul
loopne
add
cdq
cmp
(bad)
arpl
lods
loope
imul
jecxz
mov
jl
mov
sub
enter
fwait
dec
retf
push
cs
mov
sub
div
push
or
movs
lds
inc
outs
dec
outs
cmp
jns
inc
xchg
push
dec
mov
lea
mov
mov
push
(bad)
fistp
push
je
or
bound
jge
cmps
movs
retf
mov
call
dec
es
loop
jno
dec
or
push
sahf
jno
ret
out
nop
xchg
fwait
mov
pop
out
stos
(bad)
fisttp
test
mov
sbb
sbb
fbstp
adc
and
inc
(bad)
fwait
mov
and
cs
int
dec
je
or
imul
pop
out
mov
add
scas
mov
and
bound
adc
adc
mov
sahf
arpl
jp
pop
js
aaa
mov
enter
(bad)
aad
push
sbb
aas
mov
retf
inc
into
movs
stc
cli
fild
dec
pop
pop
mov
adc
lock
jbe
pop
inc
jno
add
and
fild
sbb
push
push
jns
cwde
stos
div
mov
lock
xchg
jmp
(bad)
sub
pop
xchg
mov
fwait
inc
sub
js
dec
add
adc
stos
xchg
test
mov
loope
pushf
mov
pop
jmp
push
sbb
adc
fst
sbb
and
(bad)
sar
cmps
jae
xchg
ss
and
push
push
inc
xor
or
div
adc
push
push
jne
gs
inc
adc
and
jmp
lock
jae
and
mov
mov
jg
or
jg
mov
rcr
out
fldln2
sub
fs
jmp
push
cmp
or
ja
rcr
pusha
dec
sbb
pop
in
sahf
dec
xor
aas
fnsave
neg
rcr
ins
add
jp
arpl
imul
mov
ds
iret
xchg
int3
loopne
stc
sbb
add
jno
inc
rol
mov
retf
push
out
pop
ss
mov
leave
push
jmp
movs
jbe
icebp
aaa
sbb
test
rol
stos
pop
adc
in
stos
les
daa
data16
push
lock
aam
and
push
mov
les
lods
clc
xchg
cmp
push
cs
mov
pop
out
popa
jnp
fcomp
add
test
cmc
push
or
jmp
iret
push
push
adc
movs
and
adc
jo
mov
into
(bad)
addr16
push
popa
mov
imul
icebp
(bad)
pop
ins
outs
xor
push
jg
xchg
pop
jge
xor
(bad)
sbb
pop
cs
mov
sar
mov
dec
cmp
jmp
addr16
in
sbb
fidiv
repz
push
jb
jmp
loopne
test
xor
fdivr
dec
xor
pop
loope
les
popa
ss
jnp
imul
test
pop
cmps
inc
faddp
ror
xchg
cmp
fsub
jl
bound
cli
mov
loop
out
(bad)
or
mov
xor
iret
adc
inc
mov
mov
inc
icebp
dec
push
dec
add
call
out
xor
jmp
rep
test
test
pop
push
and
pushf
xor
lods
sbb
je
jb
xor
repnz
cld
ja
cmp
pop
jne
jl
cs
adc
dec
jp
push
inc
inc
or
fs
inc
lods
push
test
mov
mov
mov
sbb
stos
xchg
sub
fsubr
outs
outs
jg
ficom
(bad)
mov
fiadd
retf
jge
cld
imul
adc
jmp
or
sub
lods
aam
jo
cdq
sbb
cmp
outs
scas
inc
mov
cmp
sbb
mov
dec
mov
cwde
in
cwde
cmc
inc
loope
mov
daa
and
jmp
out
mov
lds
in
loop
out
pop
rol
push
adc
es
int3
test
jb
rol
bound
jne
and
mov
gs
retf
rol
es
xchg
(bad)
mov
jl
jp
(bad)
xchg
inc
sub
jge
pusha
xchg
aas
(bad)
jmp
cmp
jecxz
xchg
cld
outs
ds
(bad)
imul
(bad)
mov
scas
cld
ror
mov
stos
fcmovnb
cmp
push
jmp
fdiv
cmp
dec
ja
adc
leave
adc
jge
push
icebp
xchg
inc
or
clc
les
dec
ins
aad
ins
bnd
adc
dec
cld
adc
je
shl
(bad)
(bad)
jmp
and
add
cli
xor
call
lds
cmps
lods
(bad)
adc
out
xchg
(bad)
sub
fwait
cmp
xchg
push
cmp
jmp
cmps
mov
cmp
jge
inc
retf
fild
jge
imul
sub
add
xchg
sub
mov
sbb
clc
sub
mov
xchg
xor
xchg
add
pop
jmp
call
pop
in
mov
pop
adc
jbe
mov
jno
fldpi
inc
in
push
xor
jecxz
mov
sahf
mov
mov
xlat
ficomp
lds
ins
adc
bound
out
mov
mov
xchg
jbe
jl
sbb
cmp
hlt
jbe
movs
fidivr
inc
mov
stc
imul
sub
rol
ins
mov
scas
push
mov
jae
add
mov
mov
aam
mov
sub
cs
cmp
(bad)
lahf
jmp
push
and
scas
imul
sbb
gs
icebp
(bad)
xor
addr16
(bad)
push
adc
xchg
gs
sub
sbb
push
inc
xlat
mov
and
aad
inc
sub
jp
mov
inc
inc
mov
in
jl
imul
add
inc
and
cmps
or
stc
or
mov
sbb
aas
adc
loop
jecxz
push
movzx
ds
mov
push
out
push
push
icebp
push
pop
xlat
iret
and
adc
xor
sbb
cmps
cmp
aaa
and
mov
out
outs
push
fs
repz
or
cmp
xor
ja
les
les
sub
iret
mov
mov
cmp
icebp
mov
mov
mov
push
popa
adc
(bad)
sbb
push
dec
test
xchg
lods
mov
jmp
push
fwait
aas
sbb
aam
push
add
(bad)
jne
cmp
inc
(bad)
adc
fsub
pop
sub
pop
add
cwde
dec
stos
enter
and
mov
pop
retf
sub
mov
test
(bad)
cld
jg
(bad)
mov
mov
scas
outs
mov
(bad)
mov
leave
mov
mov
popf
mov
mov
aaa
popf
pop
push
movs
lods
sti
cmp
rcr
scas
mov
push
pop
sbb
leave
xchg
adc
mov
scas
sbb
mov
imul
jns
gs
les
xor
in
lods
push
or
xor
pop
jg
mov
mov
jnp
gs
lds
jp
and
mov
mov
jno
add
iret
push
sub
jge
inc
jp
push
add
dec
cmp
inc
or
(bad)
fwait
xor
dec
mov
out
fcomip
sbb
mov
fst
jno
lahf
jo
frstor
jl
call
xchg
or
ret
mov
ret
cmp
dec
and
fwait
repz
jle
(bad)
dec
sbb
sub
popa
cmps
and
lahf
jge
mov
(bad)
adc
push
cdq
push
xor
push
adc
cs
std
add
js
leave
lock
jmp
jb
movs
outs
jmp
and
push
dec
mov
mov
dec
in
mov
jle
loope
adc
or
mov
jne
dec
xchg
fs
cmp
mov
fs
push
push
neg
in
mov
test
arpl
and
jbe
jl
test
dec
push
pop
and
xchg
jecxz
ja
fucomip
and
pop
mov
push
lahf
xchg
ss
sbb
pop
xchg
cdq
ins
in
repnz
call
sub
mov
or
and
(bad)
cmps
stos
push
sbb
push
xor
fisttp
mov
or
inc
cli
fld
mov
adc
sahf
and
push
sbb
scas
xor
pop
rcr
sahf
pop
sbb
popf
out
push
pop
fwait
retf
inc
xchg
and
pop
aad
rcl
and
inc
in
xor
mov
xchg
add
repnz
outs
mov
arpl
popa
pop
mov
imul
iret
xchg
mov
cmps
pop
icebp
push
dec
cmp
mov
xchg
popf
mov
mov
aaa
pop
mov
retf
xchg
mov
aaa
or
sub
aaa
iret
popa
loopne
push
loopne
push
mov
popa
pusha
pop
push
ins
test
pop
jbe
sti
inc
and
aaa
sub
in
mov
push
cld
or
mov
dec
sub
pop
mov
adc
dec
xchg
mov
adc
cmps
xchg
cdq
dec
jg
in
(bad)
movs
sbb
lea
push
fmul
xchg
jmp
xchg
outs
adc
sbb
jno
outs
loopne
push
int
inc
repz
(bad)
mov
add
ss
stc
mov
adc
push
enter
cli
mov
arpl
xchg
push
cmp
fist
push
push
mov
pop
mov
sbb
push
lea
cwde
js
or
mov
push
xchg
imul
or
sbb
mov
js
mov
shl
addr16
dec
mov
dec
add
sub
or
push
xchg
sbb
mov
loopne
pop
aad
sbb
mov
fcomp
in
jp
test
movs
in
cmp
jne
aaa
mov
sahf
test
push
mov
pop
mov
sub
mov
ins
xor
pop
mov
icebp
stos
add
es
sbb
adc
mov
repnz
jo
aas
mov
xchg
ret
loopne
or
arpl
popf
jmp
inc
pop
lock
lds
test
dec
or
dec
jb
sbb
out
mov
shl
sbb
mov
lahf
cmps
fstp
outs
xchg
pop
and
cmps
enter
cmove
arpl
outs
enter
push
in
call
or
xchg
aam
inc
in
aad
inc
mov
stos
stos
mov
mov
pop
mov
ficomp
mov
jp
ja
adc
xor
stos
mov
ret
mov
shl
or
or
(bad)
lock
push
sub
adc
movs
lods
jno
cmp
lods
jmp
sub
mov
fistp
icebp
inc
push
push
mov
mov
das
cmp
xchg
or
sti
pop
jmp
lods
stc
nop
jns
xchg
(bad)
jmp
mov
push
cmp
movs
stos
jns
and
cs
sbb
inc
xor
popa
mov
dec
dec
lods
add
out
pop
es
mov
sbb
mov
mov
cli
in
stos
inc
push
div
dec
mov
xor
jno
pop
sbb
repz
or
hlt
push
or
adc
mov
outs
xchg
mov
or
mov
not
or
sub
movs
je
jmp
push
xchg
fwait
(bad)
je
sub
test
aas
sbb
bound
sub
xchg
popf
test
arpl
movs
xchg
mov
jecxz
mov
jp
and
dec
addr16
cmp
xlat
adc
pop
aam
cld
aas
out
adc
cmp
jno
sub
loopne
jae
adc
jge
or
adc
cli
out
add
inc
div
push
arpl
pop
aam
push
sbb
(bad)
mov
mov
mov
jns
xor
pusha
or
cmc
mov
mov
nop
or
xchg
and
add
aad
jnp
sbb
adc
repnz
jno
or
bound
inc
jbe
jne
neg
pop
arpl
jb
dec
repz
fcomp
and
neg
xor
xchg
add
xor
fnstsw
outs
jo
cmps
inc
and
xchg
xchg
xchg
or
aam
dec
push
pushf
pop
jnp
das
js
in
pop
cld
imul
lea
jae
adc
dec
dec
sar
add
ret
add
in
fwait
in
cmp
sub
adc
shl
data16
and
lods
dec
dec
mov
int3
cmp
jle
or
add
push
sub
scas
pop
test
jecxz
imul
pop
xchg
js
sbb
mul
fwait
dec
pusha
ss
xor
jns
sbb
add
punpcklwd
into
mov
mov
fmul
imul
inc
and
(bad)
jge
pop
push
adc
push
pop
adc
xor
loopne
mov
dec
push
sbb
outs
fs
call
fdiv
sub
stos
stos
scas
mov
ins
add
cs
jle
sbb
adc
daa
xchg
test
add
clc
pop
pop
fwait
sub
adc
mov
call
jp
mov
dec
stc
pop
(bad)
dec
sar
cmps
sbb
arpl
mov
dec
out
sbb
lahf
cmp
add
push
push
imul
jb
mov
pop
aam
outs
add
sti
gs
(bad)
sahf
pop
mov
mov
popa
imul
pop
test
(bad)
ficomp
adc
push
sub
sub
push
test
mov
adc
movs
cmp
ins
push
aam
add
or
jnp
loop
push
ret
rol
push
sbb
dec
and
rol
das
inc
daa
pop
inc
mov
cwde
cmp
xor
icebp
xor
cmc
xchg
sbb
cdq
div
push
addr16
dec
popf
jp
scas
cwde
dec
je
inc
test
aas
fld
inc
jecxz
push
nop
cmp
mov
ss
adc
inc
lds
(bad)
cmps
sub
pop
js
inc
sahf
outs
fmul
dec
js
mov
cmp
gs
test
in
ror
sbb
iret
adc
and
inc
aaa
int3
cs
cs
ror
jns
push
push
or
cld
fiadd
imul
push
mov
inc
add
sbb
add
sbb
mov
das
mov
mov
jmp
out
push
jmp
dec
shl
addr16
cs
adc
fist
or
scas
mov
mov
into
sbb
scas
mov
mov
jae
stos
sbb
daa
cmp
ins
movs
call
jecxz
cmp
inc
fld
mov
out
je
add
xor
inc
jbe
inc
bound
aas
ret
mov
dec
sub
in
sti
mov
cld
inc
jmp
dec
inc
aam
mov
cmps
adc
sbb
enter
pushf
adc
mov
pop
fs
pop
mov
mov
(bad)
pop
jge
inc
jmp
daa
dec
add
xor
fs
mov
jp
(bad)
out
jge
in
ja
dec
dec
pop
mov
and
in
push
ret
and
sub
je
dec
test
stos
sahf
stos
pop
popf
inc
adc
jbe
adc
sub
ret
aas
fistp
or
loope
dec
lahf
gs
loopne
xchg
sbb
popa
push
mov
jo
loopne
fs
cvtdq2ps
adc
jle
aam
xor
(bad)
pop
outs
(bad)
jmp
retf
shr
mov
mov
imul
iret
or
pop
jmp
cvtps2pi
xor
lods
(bad)
adc
call
pusha
add
enter
fcomp
dec
mov
sbb
in
sbb
mov
inc
xlat
jo
repz
mov
out
retf
cmp
jbe
xchg
mov
or
sbb
std
iret
test
cmps
stos
fld
repnz
fild
mov
inc
ror
sub
xchg
mov
xor
mov
pop
lds
(bad)
scas
inc
rol
dec
lock
loope
(bad)
test
jo
mov
xor
adc
mov
clc
dec
pop
scas
jae
lods
repz
pop
inc
ret
xchg
adc
push
xor
pop
mov
mov
fmul
cdq
jmp
test
adc
nop
mov
ja
xchg
sbb
mov
movs
adc
jle
push
jae
aas
sbb
mov
ret
fld
ret
shl
jl
pop
push
fwait
adc
add
add
enter
inc
xor
sbb
xor
scas
into
xor
iret
or
or
cmp
test
test
(bad)
aad
mov
mov
adc
aad
leave
(bad)
sbb
mov
adc
repz
rcl
mov
xchg
xor
add
fwait
call
cmp
xor
inc
inc
jnp
sub
popf
push
fild
ins
jge
add
fwait
shr
out
hlt
adc
xchg
inc
mov
push
dec
add
jl
mov
cld
mov
int
sbb
test
loope
xor
inc
imul
sub
and
mov
retf
xchg
pop
pop
dec
sbb
test
mov
ret
adc
nop
pushf
jl
sub
into
xchg
push
cmp
mov
cmp
xor
das
ror
xor
pop
xchg
and
add
arpl
push
es
rol
inc
jnp
push
xchg
(bad)
cmc
pushf
push
mov
orps
ds
inc
outs
dec
mov
jmp
mov
adc
add
js
js
inc
pusha
pop
push
jmp
sub
push
ror
add
mov
mov
inc
out
mov
mov
jnp
pushf
sub
sbb
shl
in
xchg
psrad
sub
daa
rcl
or
or
inc
xor
outs
and
mov
in
scas
aam
mov
js
xchg
jne
jo
cmp
xor
(bad)
mov
out
jp
in
fimul
sbb
scas
push
xor
inc
enter
pop
mov
dec
retf
mov
inc
es
mov
dec
sahf
mov
outs
push
sbb
loopne
outs
fsubr
das
lods
or
into
mov
push
aaa
inc
cmp
lods
mov
lahf
sbb
cmp
sub
int
sbb
inc
inc
jp
scas
adc
or
aaa
dec
mov
imul
fcom
push
mov
in
jmp
fwait
xchg
ins
xchg
iret
push
(bad)
jl
inc
loopne
mov
test
bound
rcr
and
jns
pusha
scas
and
arpl
int3
jne
dec
mov
andnps
sub
mov
fld
scas
dec
pop
movups
mov
int3
arpl
scas
and
fwait
pop
test
jge
mov
jg
aam
adc
bound
mov
outs
adc
mov
add
and
into
(bad)
data16
stos
in
iret
std
and
jmp
in
dec
or
test
pop
and
(bad)
jno
adc
mov
ins
stos
pop
mov
push
(bad)
not
push
jo
and
push
out
leave
sub
ins
repnz
mov
pop
rcl
(bad)
ds
mov
fdivrp
pusha
or
cwde
(bad)
push
inc
call
pop
and
sub
xor
sbb
aad
cmp
xor
imul
pop
dec
xchg
and
popf
or
mov
iret
jb
into
scas
lds
inc
push
inc
lods
mov
jmp
and
stc
imul
push
mov
jnp
outs
das
test
push
cmp
jo
js
fs
cmps
mov
adc
inc
jnp
mov
out
pop
and
add
loope
jno
dec
and
sbb
pop
sub
or
mov
xchg
mov
test
push
jns
ror
dec
enter
nop
int3
aas
fwait
inc
pop
jle
outs
(bad)
or
js
icebp
cmp
jb
retw
int
xor
lds
add
lds
sbb
mov
mov
cmc
adc
outs
fimul
jno
mov
inc
ret
sbb
adc
nop
mov
xor
adc
fadd
cmp
pop
mov
sti
punpckhdq
cmp
xor
aad
lea
mov
repnz
(bad)
or
inc
push
push
jnp
ss
and
inc
dec
sbb
mov
ret
jae
add
aaa
mov
and
jp
(bad)
call
outs
cmps
sub
jae
not
adc
jmp
jmp
sbb
inc
cmps
pushf
mov
es
xchg
mov
test
add
inc
jns
jge
jbe
sub
out
dec
je
shl
pop
and
xchg
sahf
test
pop
cld
sbb
xchg
push
outs
jecxz
pusha
rol
adc
ror
js
fld
popa
imul
fidivr
jmp
aas
fwait
cmps
inc
mov
pop
repnz
loope
pop
lea
sti
ja
ret
ja
dec
push
push
pop
xor
pushf
test
adc
ja
and
push
mov
stos
jno
popf
jbe
push
and
repnz
mov
iret
push
lods
sahf
(bad)
add
test
imul
imul
cld
shl
dec
push
add
push
dec
sti
and
and
out
xor
repz
sbb
cdq
xchg
pop
into
out
jl
pop
pop
mov
push
adc
out
test
shr
pop
sub
in
cmp
xchg
and
cmp
aam
test
neg
repnz
int
jne
dec
sub
dec
push
mov
mov
mov
push
les
outs
inc
rcr
fwait
mov
es
ja
mov
leave
sbb
mov
retf
pop
push
mov
sbb
aam
cli
inc
or
mov
into
iret
jecxz
repnz
xchg
dec
adc
and
iret
in
ins
cmp
jge
cwde
adc
or
cmp
xchg
jmp
mov
sbb
sub
cld
xor
jnp
and
lods
jae
bound
sbb
push
shr
pop
xchg
mov
xor
leave
dec
xor
pop
mov
leave
or
ins
adc
pop
xchg
adc
push
cmps
add
sub
push
mov
pop
sub
mov
sub
and
cwde
mov
dec
pushf
imul
xor
and
push
fsubp
mov
mov
xor
jbe
and
setno
sub
adc
arpl
mov
mov
fnstenv
adc
rep
cmp
lahf
pop
fsub
out
mov
stos
jne
(bad)
sub
bound
mov
jno
fist
stc
je
rol
rol
push
sbb
adc
cmps
push
sti
scas
cmp
push
aad
sub
add
and
push
sbb
outs
out
push
xor
and
sti
cmp
inc
in
fisubr
js
push
stc
fisttp
jg
jecxz
es
push
add
dec
sub
sahf
movs
xor
je
mov
add
mov
out
xor
inc
call
aam
pop
pop
fistp
std
pop
test
ss
shr
addr16
jge
mov
jg
cmps
sub
int3
mov
dec
inc
fnsetpm(287
push
mov
data16
int
aas
jmp
push
iret
xchg
aas
pop
mov
out
sub
les
adc
mov
pop
rcr
sahf
stos
pushf
jp
les
sub
hlt
nop
jg
mov
outs
ret
add
adc
adc
fsub
cld
pop
rcr
dec
daa
push
push
dec
adc
sbb
xchg
push
or
shr
clc
sbb
inc
push
mov
mov
call
or
mov
stos
outs
jp
mov
cmp
nop
push
ins
out
sbb
inc
dec
ror
sub
pop
fs
mov
hlt
aaa
(bad)
call
mov
or
push
xor
in
out
outs
pop
mov
mov
push
clc
push
cmps
clc
sbb
fisubr
inc
div
xlat
ja
bound
cdq
popa
stc
aas
dec
cwde
jge
shr
stos
adc
out
xlat
or
cmp
fmul
cmps
sub
ja
sub
lea
sbb
and
(bad)
movs
int3
and
(bad)
aas
arpl
mov
pop
or
mov
cwde
bound
int3
ds
mov
std
ins
cwde
mov
cmp
kxorw
cmp
and
pushf
adc
test
xor
movs
icebp
les
pop
ror
int
xor
jbe
pop
aad
test
xchg
or
pop
jge
(bad)
fsin
add
jb
and
mov
xchg
pop
mov
(bad)
ror
push
gs
and
cmps
daa
sbb
fisttp
mov
scas
or
hlt
pop
add
sub
test
mov
pop
adc
mov
movs
aam
leave
sbb
ja
call
mov
scas
mov
add
sti
data16
dec
jl
cmp
shr
jnp
add
mov
cs
pop
pop
cmp
mov
test
adc
jb
dec
cmp
ret
movd
bound
add
or
sbb
repnz
enter
push
lea
jmp
aad
call
xor
mov
fisub
sub
mov
mov
sub
and
jb
sbb
adc
mov
or
fnstenv
mov
and
bound
fdiv
rcr
cmps
mov
and
sub
outs
dec
(bad)
sahf
(bad)
sbb
bound
xchg
pop
outs
add
add
jp
cs
shl
xchg
and
int
pop
fxam
push
xchg
mov
(bad)
ret
add
sub
fsubr
jle
mov
push
xlat
into
push
movs
int
test
int3
lea
dec
out
push
xor
das
or
daa
xor
ds
or
push
sbb
pop
arpl
add
pop
or
sbb
sub
es
add
dec
popf
push
jmp
loope
add
sub
mov
jnp
xor
rcl
mov
pop
adc
stos
inc
push
lea
xchg
dec
push
aam
sub
fldcw
mov
cmp
or
call
inc
lahf
fwait
cdq
push
push
adc
pop
loopne
outs
je
jge
cwde
cld
fld
call
movs
and
inc
js
(bad)
push
xor
(bad)
mov
repnz
adc
out
xchg
imul
mov
pushf
pop
pop
data16
pusha
jg
and
mov
enter
repz
inc
cmp
lods
cmp
mov
ins
scas
je
and
std
xor
xor
aad
xchg
sub
into
dec
and
pop
xlat
movs
jecxz
ins
popf
test
lods
pop
and
dec
in
fist
sub
cdq
jno
pusha
inc
test
out
adc
(bad)
enter
push
lods
push
test
mov
xchg
mov
es
dec
dec
pop
jmp
(bad)
mov
mov
dec
shr
jg
add
loope
xchg
cmp
loope
or
aad
jns
shl
lods
push
cmps
xchg
out
push
ins
mov
cdq
inc
mov
imul
add
mov
loopne
test
cmps
sti
(bad)
lods
sbb
pop
sbb
in
test
out
dec
fild
nop
imul
inc
mov
cmp
dec
and
sub
gs
call
(bad)
rcpps
jae
mov
adc
jo
jmp
adc
mov
xchg
mov
(bad)
retf
xor
shr
push
nop
repnz
pslld
imul
neg
(bad)
js
sar
(bad)
adc
lds
add
out
imul
mov
mov
cld
inc
add
fwait
mul
aas
cmp
es
push
lds
sub
adc
and
rcl
dec
test
std
out
jmp
inc
adc
arpl
arpl
in
in
movs
pop
not
pop
ds
mov
jb
shl
dec
pop
inc
or
add
test
add
dec
jg
mov
mov
or
or
mov
xor
push
push
(bad)
jmp
cmp
cmps
mov
loope
stc
popf
jmp
arpl
mov
je
push
hlt
cmps
dec
fwait
in
dec
pop
clc
ja
cmps
cli
xor
js
push
push
fisub
out
loopne
mov
cmp
dec
jp
or
mov
iret
jge
lock
sbb
into
out
neg
lds
cli
mov
jle
ret
jmp
mov
js
aad
into
cmp
push
adc
fwait
out
and
jnp
hlt
mov
pop
sbb
mov
xchg
je
push
jmp
outs
jnp
cmc
xor
push
cmp
push
imul
sbb
push
xchg
out
mov
cmp
stos
add
pop
mov
add
pop
mov
test
sbb
lods
push
mov
mov
call
mov
sbb
inc
pop
es
inc
mov
adc
mov
imul
or
jl
adc
retf
shl
cli
add
push
cwde
pop
push
push
outs
pushf
cmp
pop
js
inc
inc
push
jmp
mov
out
sbb
in
mov
xchg
pop
pop
adc
ja
aaa
outs
cmp
push
or
leave
jo
push
scas
jle
xor
push
sbb
jb
in
pop
cld
cmp
sahf
pop
test
cmp
ja
push
imul
repz
mov
mov
into
push
jg
push
xchg
popa
mov
cmc
pop
sub
mov
pop
push
std
add
xchg
dec
inc
jnp
mov
ins
movs
int3
sbb
(bad)
sub
inc
test
retf
scas
jmp
(bad)
std
das
cmp
push
sbb
pop
push
mov
scas
retf
mov
retf
popa
push
add
call
clc
aad
sar
scas
cmp
mov
mov
mov
mov
cwde
or
test
xor
push
mov
and
es
les
test
jmp
rcr
test
inc
je
jnp
int3
scas
repnz
(bad)
jbe
aas
jge
push
mov
sub
das
(bad)
repnz
pop
mov
fs
pop
outs
fistp
adc
sahf
or
imul
ja
cmp
jnp
cmc
scas
push
pop
cmp
lock
test
and
mov
mov
sbb
mov
hlt
dec
(bad)
fiadd
mov
shl
sbb
jle
inc
pop
and
lds
inc
inc
pop
jge
push
in
dec
push
js
sahf
pop
mov
adc
push
cli
add
loopne
mov
and
test
jge
mov
push
mov
(bad)
mov
loope
jmp
arpl
fdiv
xor
pop
loope
xchg
nop
mov
mov
xor
and
sub
xchg
push
stc
mov
xchg
fsubr
std
iret
mov
imul
inc
ficom
mov
jbe
xchg
das
jns
inc
adc
cld
mov
outs
ror
xchg
inc
push
push
test
call
and
aas
(bad)
enter
sub
mov
loope
or
lds
pop
pop
mov
jae
xchg
push
jb
cwde
or
outs
cmp
bound
mov
sbb
and
call
enter
mov
loop
jb
int
push
push
punpcklbw
arpl
mov
cli
sub
popf
pushf
mov
dec
inc
(bad)
in
daa
sub
ins
dec
test
sbb
adc
sub
cli
fwait
adc
pop
mov
add
shl
int3
pushf
cwde
pop
adc
sub
and
push
mov
pop
push
cld
jmp
loope
push
or
mov
sar
cdq
sti
dec
sbb
push
jo
push
(bad)
(bad)
loope
data16
push
fdiv
cli
sub
jmp
call
push
daa
jmp
dec
aam
sub
sub
mov
adc
cmps
adc
std
ja
xchg
movs
ror
xchg
shl
jno
mov
dec
(bad)
sub
clc
ud0
xchg
xchg
icebp
and
and
(bad)
mov
int3
in
ss
mov
push
pop
in
xchg
and
push
(bad)
xchg
add
call
sub
fisubr
mov
xor
les
mov
je
mov
movs
out
ins
sbb
stos
rcr
jmp
(bad)
(bad)
mov
(bad)
mov
jp
push
lock
call
cld
sti
sub
movs
xor
sbb
add
in
cmp
xchg
movs
and
mov
adc
sbb
jl
ins
sub
ja
jmp
mov
fild
xchg
ror
cmp
xor
scas
and
lea
push
sub
rcl
push
call
or
in
pop
jns
cdq
daa
xor
xchg
imul
fimul
sbb
call
outs
cmps
inc
jecxz
xor
mov
and
pop
fdiv
fsubr
stos
inc
std
(bad)
out
adc
adc
mov
rcl
cli
fldcw
outs
sub
cmp
cld
ret
dec
sub
rcl
ror
test
pop
jmp
and
ins
(bad)
idiv
int
push
adc
out
ss
test
pop
and
pop
pop
dec
inc
inc
pop
pop
mov
mov
das
sbb
mov
test
or
and
popa
sub
arpl
add
loop
sbb
sub
loop
mov
cli
fcom
je
loop
pop
pusha
adc
push
aaa
out
stc
sbb
pushf
popf
cmovs
cmp
cmp
cwde
adc
push
push
dec
idiv
mov
xchg
jb
mov
cdq
enter
jbe
mov
push
add
cmps
push
xor
daa
fnstenv
lock
pop
add
mov
jg
test
ror
push
mov
jecxz
mov
pop
inc
pop
add
jo
sub
loope
xchg
scas
in
lahf
inc
ins
mov
dec
xor
lds
or
out
(bad)
pop
(bad)
movs
arpl
xchg
jbe
into
mov
mov
repz
in
mov
mov
cdq
jecxz
adc
mov
fwait
sbb
in
sbb
xchg
lahf
push
cmp
iret
outs
pop
xor
jbe
xchg
mov
std
add
jg
mov
mov
int3
jns
movs
mov
cmp
dec
daa
bound
int
mov
push
and
jg
pop
mov
int3
or
inc
sub
push
(bad)
sahf
add
dec
and
inc
lods
mov
xor
dec
mov
icebp
imul
lods
adc
cmp
sbb
ret
pop
mov
xor
push
adc
mov
in
jnp
mov
dec
jg
xchg
mov
cmps
xchg
clts
sti
call
add
mov
sub
push
stos
(bad)
repz
dec
xchg
popa
cld
pop
es
aad
stos
out
mov
or
(bad)
mov
xchg
pop
sub
push
aas
das
sti
fisubr
inc
push
pop
mov
ja
xchg
in
out
fidivr
jmp
and
ss
aaa
adc
add
mov
scas
mov
jg
jbe
std
sbb
lods
mov
and
or
and
iret
mov
lock
push
aam
cli
and
daa
sbb
mov
retf
xor
cwde
je
push
add
stos
test
retf
jecxz
lock
add
dec
push
cwde
lods
cwde
fs
out
cmps
sahf
ja
test
icebp
push
dec
inc
jo
les
fnsave
ret
hlt
cmps
add
leave
daa
out
pop
inc
and
jmp
fs
(bad)
sbb
dec
mov
stc
stos
xchg
inc
fimul
ds
xor
mov
push
dec
sbb
icebp
stos
pop
or
sub
(bad)
sbb
out
cmps
aam
movs
mov
lods
jns
pop
(bad)
out
adc
jle
call
adc
into
sub
mov
aas
and
aad
fs
test
pop
xabort
in
gs
movs
sar
xchg
jle
ret
and
or
xchg
cld
pop
push
mov
and
(bad)
jmp
movs
(bad)
xor
(bad)
dec
mov
inc
ins
mov
jbe
mov
sub
loope
mov
jge
add
xor
les
add
rcl
xchg
mov
popf
sbb
daa
outs
imul
mov
in
jmp
sbb
movs
inc
lds
pop
or
fistp
add
cmp
(bad)
push
mov
xchg
pusha
xchg
cwde
mov
scas
hlt
inc
xchg
pop
xchg
fcom
ds
sbb
loope
retf
jo
jae
popa
xchg
or
adc
lods
add
fst
loopne
adc
sar
xor
lds
push
jg
push
jmp
nop
sub
mov
mov
adc
and
out
mov
cmp
cmp
imul
imul
push
pop
(bad)
ret
add
(bad)
retf
std
xor
sbb
dec
pop
push
cmps
std
je
jmp
lds
jno
dec
mov
mov
xlat
fcomp
movs
pop
mov
mov
sar
add
inc
mov
inc
int
lock
jbe
shl
mov
rol
mov
loope
ret
popf
nop
sar
xchg
mov
inc
pusha
add
cdq
or
lds
xchg
pop
mov
push
out
into
jbe
call
mov
xchg
retf
loop
cmp
jge
loop
mov
inc
mov
sub
dec
mov
ins
pop
call
(bad)
inc
sbb
(bad)
cmps
fucomi
popa
repz
jl
lods
jmp
push
cs
and
into
cmp
jb
push
cli
mov
fs
frstor
loop
aaa
pop
jne
pop
cmp
out
pop
iret
pushf
retf
xor
xor
fmul
jmp
jmp
or
sub
cmp
fld
mov
call
fist
into
dec
and
sub
les
xchg
imul
in
pop
and
mov
ja
mov
jge
out
outs
cmp
cmps
out
sub
mov
mov
rcr
loope
sbb
mov
and
sub
jmp
xor
lods
cs
mov
xor
pop
mov
xchg
cmp
add
lock
or
mov
aam
cmp
pop
loop
ja
stc
inc
fmul
lock
dec
into
rcr
fcomip
cs
mov
jae
ret
cmp
pop
jecxz
aad
pop
sub
js
in
popa
sub
jmp
push
call
lea
lock
loopne
dec
test
call
jnp
push
pop
mov
test
add
adc
jo
es
push
fidivr
test
loop
dec
lahf
mov
inc
jle
adc
jb
enter
lods
add
sti
in
(bad)
out
std
push
nop
ds
aas
mov
cmp
xlat
(bad)
push
stc
push
add
pop
cs
popa
sar
mov
lahf
mov
movs
int
jo
mov
imul
pop
stos
pop
mov
in
dec
rcr
mov
test
mov
xchg
jb
das
out
es
xlat
mov
mov
test
stos
mov
pop
js
not
xchg
fwait
je
mov
push
jmp
mov
clc
(bad)
pop
js
jle
movs
sbb
loope
sbb
push
je
pop
cmp
mov
out
mov
pushf
loopne
icebp
lods
cs
movs
push
ror
and
test
shl
add
push
adc
jbe
repz
mov
dec
movs
jne
lds
(bad)
and
stos
sub
jae
cmp
and
jne
xor
mov
and
stc
cwde
cwde
mov
jp
xchg
retf
sub
sbb
test
push
mov
and
inc
jmp
and
fisub
sti
out
mov
movs
cmp
out
movs
shl
sbb
push
dec
enter
std
inc
jecxz
imul
outs
movs
or
mov
rcl
into
xlat
and
xlat
jl
pop
dec
inc
mov
xchg
retf
sub
fwait
ret
mov
dec
sbb
push
jne
xchg
shr
sub
mov
cmp
inc
pop
fwait
ret
jge
pop
mov
dec
push
retf
stos
mov
cmps
xchg
data16
out
mov
jns
pushf
stos
lds
mov
pop
stc
jmp
jmp
and
xor
loop
fwait
repnz
call
sbb
adc
aaa
stos
sbb
jb
mov
ja
and
xchg
dec
mov
xchg
iret
add
in
(bad)
aam
in
imul
inc
inc
xchg
push
in
arpl
leave
adc
idiv
add
sbb
mov
mov
and
imul
mov
push
cmp
(bad)
or
mov
(bad)
jmp
xchg
inc
push
mov
ins
mov
cmps
adc
sbb
mov
xor
daa
pop
add
xor
mov
mov
loope
ror
out
outs
fisub
aas
jmp
(bad)
fldenv
mov
aas
btc
xchg
jns
mov
ja
lahf
(bad)
mov
xchg
pop
ja
xchg
and
cmps
outs
xor
(bad)
mov
js
mov
retf
imul
push
mov
lods
imul
push
dec
add
jmp
jmp
loopne
fs
mov
jmp
bound
(bad)
jle
mov
(bad)
mov
lock
ds
std
or
pop
pop
pop
arpl
outs
sub
inc
sbb
add
icebp
sbb
jo
pop
int3
icebp
dec
push
ja
cs
(bad)
mov
sbb
mov
in
or
mov
aaa
jnp
adc
mov
xor
stos
retf
mov
pop
sub
fdivr
add
xor
lock
shr
mov
fstp
pop
loopne
mul
es
pushf
jg
stc
(bad)
icebp
xchg
out
lahf
pop
loope
push
loopne
add
adc
repnz
adc
jmp
movs
push
popf
jb
ror
leave
fidivr
jge
mov
lods
arpl
jns
xchg
fs
retf
or
fwait
loopne
cmps
xor
jns
sbb
adc
mov
stc
adc
push
push
mov
cmp
loopne
pop
and
xor
aaa
mov
mov
xchg
mov
xchg
lahf
imul
je
mov
adc
jmp
in
push
cli
xchg
jb
inc
mov
cmp
push
enter
ins
push
mov
retf
mov
inc
ds
xchg
xchg
in
fstp
stos
cwde
mov
loope
pop
cld
aad
and
int
outs
repnz
into
xor
ret
popf
xor
retf
sub
ss
push
mov
sbb
pop
(bad)
ficom
int
push
stos
pop
movs
inc
push
ss
ins
add
jecxz
ins
xchg
(bad)
popf
aas
mov
jmp
push
lods
mov
pop
sub
pop
jmp
xlat
inc
outs
in
loopne
mov
lds
inc
jecxz
inc
dec
fwait
sub
mov
fcmove
mov
sar
pop
cli
cwde
mov
add
inc
data16
aas
or
add
fild
sahf
mov
jle
pop
stc
scas
cwde
shr
shr
inc
mov
adc
aad
ret
gs
dec
(bad)
jle
retf
mov
adc
mov
mov
sbb
mul
clc
adc
mov
sub
je
push
cli
scas
retf
push
mov
imul
sbb
fs
cli
nop
push
mov
mov
mov
mov
aad
xor
jmp
xchg
(bad)
test
call
ror
aaa
(bad)
xchg
xor
test
adc
movs
repnz
retf
or
out
pop
push
dec
cli
outs
mov
inc
dec
fwait
out
add
or
jl
inc
fcmovu
(bad)
sar
(bad)
popa
pop
shl
enter
mov
fbld
dec
dec
jle
adc
and
push
aaa
mov
test
ret
jmp
cmp
(bad)
cmc
mov
call
ret
inc
jne
or
cmp
(bad)
dec
(bad)
mov
adc
inc
mov
gs
loope
push
push
pop
push
inc
(bad)
hlt
jmp
test
outs
std
and
mov
fucomip
push
cmp
std
(bad)
rol
or
(bad)
shl
fs
add
loop
ret
adc
lea
dec
popf
xchg
sbb
push
in
je
dec
pop
lods
push
in
mov
mov
ror
ret
jne
cli
daa
call
xchg
mov
into
jmp
cmc
sub
adc
mov
stc
sub
inc
out
imul
jbe
cwde
jno
call
jo
popf
ss
fldenv
xchg
inc
xchg
inc
cmc
cmps
mov
mov
sti
jge
push
mov
push
xchg
pop
mov
in
fsubr
jmp
iret
movs
cmp
(bad)
fld
icebp
xchg
movs
out
xor
lods
jg
arpl
adc
push
adc
pusha
aaa
push
xchg
arpl
xchg
push
rcl
dec
out
jns
call
arpl
pop
xor
pop
arpl
scas
cmps
xchg
inc
sub
jge
pushf
fwait
in
arpl
push
inc
inc
sub
pop
jae
xor
(bad)
dec
int3
fist
ins
jmp
mov
ja
gs
and
push
mov
lds
mov
nop
les
mov
gs
mov
jo
in
push
sbb
mov
mov
jae
adc
mov
and
jecxz
and
and
inc
mov
mov
movs
pop
leave
add
mov
loopne
mov
bound
mov
aas
jns
ret
test
and
xor
jl
sbb
xchg
cmps
sbb
ret
add
xchg
test
repnz
jno
imul
aaa
(bad)
leave
rcr
jmp
mov
nop
in
test
inc
dec
je
xchg
xor
retf
data16
sbb
test
aam
jp
test
ins
ror
xor
jnp
loop
into
repz
jle
sbb
cmp
lods
xchg
clc
or
js
inc
fnstcw
nop
inc
(bad)
adc
arpl
mov
pop
push
cli
test
jne
xchg
shr
cmp
jae
or
adc
lahf
enter
cmp
mov
cmp
sbb
mov
push
jno
lahf
pop
push
cmp
xor
fs
xor
ret
dec
xor
cmps
sbb
fwait
sub
pop
ins
aas
arpl
rcr
xlat
iret
sahf
out
loopne
mov
and
lock
mov
push
xlat
outs
adc
ins
jp
and
inc
push
rcr
(bad)
addr16
cmp
call
leave
in
in
test
jb
push
inc
mov
movs
lea
fidivr
loope
jle
cmp
jae
out
inc
int
cmp
data16
or
ret
sub
aad
cmp
mov
in
int3
xchg
sbb
lock
clc
dec
adc
loopne
fbld
or
(bad)
cld
jmp
sub
or
fst
aaa
out
ret
pop
adc
ja
outs
retf
adc
mov
je
shl
mov
mov
out
retf
mov
mov
lea
imul
xlat
inc
ret
add
and
pop
jne
out
es
ds
lahf
in
outs
or
lds
pop
gs
xor
and
dec
inc
pusha
test
(bad)
push
enter
clc
scas
xchg
sbb
fidivr
sbb
clc
add
(bad)
stos
lea
clc
inc
xchg
mov
das
sbb
enter
cmp
mov
jecxz
jmp
iret
mov
cmp
mov
jmp
lock
mov
leave
jo
fldcw
add
or
pop
adc
jae
sbb
je
mov
jae
cmps
jg
aaa
rcl
jno
call
sbb
push
(bad)
popf
push
jmp
dec
in
sbb
stc
xchg
pop
(bad)
loope
(bad)
pop
mov
xor
mov
dec
(bad)
loopne
sbb
in
xchg
test
mov
sub
pop
int
and
test
add
xchg
dec
sub
dec
xor
inc
(bad)
call
xlat
sub
cmp
stos
inc
xlat
call
pop
push
lock
aaa
dec
sbb
arpl
dec
pop
lock
das
cmps
mov
lds
call
mov
ja
or
sbb
dec
(bad)
in
and
add
jae
mov
sub
sub
bnd
int
test
dec
or
mov
mov
test
or
movs
ja
inc
sti
not
(bad)
retf
scas
aad
into
aas
popa
call
iret
mov
mov
in
fnstenv
bound
inc
sbb
add
shr
and
loop
push
cmp
mov
pop
jnp
jo
and
stos
adc
mov
sbb
adc
imul
out
mov
xor
push
cdq
cli
rol
add
xlat
test
push
cld
sub
xor
inc
adc
inc
sub
jge
stc
push
sub
jnp
fstp
cli
sbb
fwait
retf
adc
xor
mov
adc
bound
loop
mov
jmp
sbb
stc
rol
jl
mov
fbld
and
sbb
cmp
mul
xor
test
in
xor
push
jg
pop
out
or
lods
test
xchg
lods
mov
push
icebp
(bad)
out
fisub
jo
nop
jne
fs
pop
mov
(bad)
(bad)
imul
cs
jo
imul
mov
leave
dec
xor
push
add
xchg
fiadd
pop
jb
mov
and
sub
mov
pop
push
dec
(bad)
arpl
mov
sub
dec
es
mov
into
cmp
aaa
loop
inc
icebp
xlat
shl
add
push
dec
ss
dec
ss
ja
(bad)
mov
or
popf
jl
sbb
repnz
or
pop
push
das
cli
ffreep
rol
into
mov
xor
ret
xchg
sub
dec
xor
jmp
and
xchg
and
outs
pop
jge
add
shl
pop
or
lea
sub
or
push
mov
cwde
push
dec
and
and
jmp
mov
and
(bad)
int3
pop
pop
movs
mov
lahf
mov
dec
outs
imul
jle
push
or
add
push
cmp
mov
cmp
gs
mov
jb
jecxz
sub
(bad)
int3
mov
loope
add
ret
popf
std
scas
mov
es
cmp
jne
or
int3
cdq
ret
(bad)
ficomp
jb
es
hlt
push
dec
dec
iret
neg
out
dec
out
ins
fimul
lock
lds
mov
loop
push
enter
fiadd
aaa
mov
jl
and
loope
ret
sbb
pusha
add
daa
adc
sahf
(bad)
fnsave
aaa
aad
js
add
cmp
loopne
ins
dec
mov
xchg
rol
fisttp
rol
call
(bad)
cmp
mov
stc
lahf
mov
into
pushf
pushf
test
mov
in
dec
lods
in
dec
pop
and
pop
jge
sbb
mov
push
pop
pop
std
(bad)
icebp
sub
pop
jo
(bad)
push
cmps
popf
cli
jecxz
movs
jmp
sti
cs
(bad)
div
(bad)
repz
sbb
xlat
sbb
ret
cli
push
je
and
inc
js
mov
and
test
(bad)
retf
push
mov
bndstx
add
mov
pop
sahf
mov
pop
push
(bad)
gs
fnstsw
in
cmp
les
pop
add
xchg
out
stos
test
arpl
mov
mov
fwait
mov
xor
not
leave
maskmovq
imul
xchg
sub
push
dec
int3
jbe
cdq
push
(bad)
in
ss
fisub
sbb
loop
movs
adc
jne
push
add
mov
(bad)
mov
js
and
and
stc
lods
adc
aad
mov
add
or
mov
jmp
mov
jp
call
jns
sahf
jmp
mov
pushf
add
push
icebp
in
popf
jmp
push
test
call
push
add
and
mov
out
jno
and
fst
ds
cmps
mov
stos
mov
out
(bad)
mov
jo
leave
sub
dec
adc
fcom
xor
repz
lahf
mov
jo
push
mov
aam
sbb
sbb
xchg
cmc
adc
mov
sar
test
fmulp
pop
enter
(bad)
scas
into
jb
lods
cmp
aas
loopne
xchg
icebp
into
loope
fs
adc
push
cdq
sbb
cmc
dec
neg
dec
int3
sbb
cwde
sbb
xor
std
push
std
adc
fidivr
xor
ins
or
sub
adc
inc
ret
and
sahf
clc
pop
push
xchg
xchg
pop
cmp
jg
pop
push
rcl
mov
sbb
dec
mov
bound
(bad)
dec
movs
daa
gs
inc
mov
sti
or
inc
clc
sub
pop
(bad)
div
test
push
(bad)
jge
aad
fst
fist
(bad)
(bad)
pop
jge
arpl
jl
(bad)
shl
stos
mov
test
push
jmp
and
inc
test
dec
xchg
push
push
aad
fisttp
outs
cmp
jge
mov
xlat
sbb
in
(bad)
mov
sub
movs
xchg
push
in
cwde
fdivr
mov
test
in
mov
retf
rcl
clc
push
gs
pop
cmp
xor
loop
aas
fiadd
push
(bad)
loop
sub
sti
lods
vmovlpd
stos
cmovle
mov
xchg
bound
popa
ja
repnz
xor
xchg
loope
add
mov
ret
fsubr
mov
lds
dec
test
shr
cmp
inc
in
cmps
(bad)
out
inc
mov
icebp
pop
arpl
retf
test
test
add
cmc
mov
xchg
mov
out
pop
pop
retf
pop
mov
out
ret
xor
push
in
(bad)
loop
cmp
cli
stos
and
cmp
inc
mov
adc
push
ins
ror
mov
xchg
add
out
xor
loop
xchg
xchg
inc
rol
pop
pop
sbb
cs
mov
cmps
ins
test
mov
pop
push
xor
cdq
ins
push
js
push
inc
mov
dec
arpl
repnz
test
retf
mov
mov
sub
push
out
movs
sbb
pushf
or
sbb
add
dec
mov
or
pushf
dec
leave
stos
(bad)
jge
movs
shl
int
jbe
and
rcr
loope
sti
add
bound
pop
dec
add
test
outs
xchg
jne
or
pop
jge
ja
movs
shr
add
aaa
dec
call
push
rol
es
jmp
jmp
dec
stc
inc
mov
jle
xchg
push
mov
cmp
leave
mov
stos
xor
cmp
push
icebp
ret
cmp
pop
(bad)
loopne
rcl
repnz
call
jne
int3
mov
ja
jo
outs
stc
test
jae
enter
mov
inc
pop
cmps
imul
pusha
adc
(bad)
repnz
ret
popf
aad
out
jmp
pop
add
cmp
leave
adc
hlt
mov
cld
test
test
push
jbe
movups
div
pop
clc
out
(bad)
push
dec
inc
pop
inc
rol
iret
xor
jmp
adc
mov
sti
jbe
test
out
adc
xor
or
(bad)
fcmovnbe
mov
(bad)
mov
aad
push
jmp
add
aas
inc
cmps
inc
(bad)
out
dec
mov
pushf
sahf
and
aam
into
aas
scas
push
lock
mov
mov
call
fidivr
adc
mov
jnp
shl
int3
das
push
pop
retf
xchg
push
pusha
push
jmp
cld
cli
pop
daa
stc
or
xchg
xchg
mov
add
cmp
pop
out
movs
int
xchg
xchg
ja
mov
push
cmp
cld
test
lds
jne
repnz
jg
inc
les
and
push
xchg
push
iret
push
ret
push
fist
rcl
push
enter
out
or
repnz
jp
push
addr16
out
in
push
push
push
jns
(bad)
fbld
ins
jle
cmc
scas
jne
jbe
add
test
rdmsr
sub
movs
ds
adc
pop
lahf
or
addr16
dec
add
cmp
or
ret
gs
jmp
aas
icebp
nop
inc
and
dec
icebp
mov
jb
push
mov
je
push
pop
(bad)
sbb
ins
fldcw
jae
mov
push
in
xchg
dec
loopne
mov
clc
dec
adc
loopne
mov
int
mov
into
add
inc
scas
icebp
repnz
jmp
ds
jmp
xchg
(bad)
mov
les
loope
xor
(bad)
adc
(bad)
call
xor
cs
loopne
in
mov
push
shl
mov
test
fs
out
loope
(bad)
push
fidiv
retf
inc
jp
ins
adc
mov
xor
sub
rcr
pop
cmps
pop
ffreep
mov
in
enter
pop
jecxz
cmp
inc
or
mov
fstp
outs
pop
mov
jle
sub
push
repnz
push
xchg
retf
mov
ss
mov
mov
xor
cmp
push
aam
clc
test
jne
test
mov
or
adc
(bad)
out
dec
pop
mov
call
push
push
cmp
inc
or
retf
push
pop
sbb
call
inc
gs
or
jae
push
(bad)
bound
(bad)
aas
jle
mov
pop
add
mov
xor
adc
dec
dec
cmp
pop
pop
push
fcom
jne
rcl
or
fnsave
xor
mov
pop
cmp
jbe
inc
loop
rol
out
(bad)
aad
mov
lock
dec
mov
mov
xor
mov
jnp
pop
hlt
movs
sub
jbe
bound
mov
mov
pop
pop
shl
leave
setno
std
adc
fiadd
mov
shl
jl
jo
gs
cmps
or
into
jo
mov
push
cs
mov
cmp
movs
mov
xor
mov
mov
in
shr
push
push
pop
sbb
fdiv
(bad)
fisubr
jbe
pop
imul
(bad)
xor
dec
ret
sub
inc
mov
call
mov
xchg
stos
pusha
adc
mov
pop
mov
sbb
fild
sbb
and
lods
outs
mov
sbb
sti
xchg
stos
std
cmp
adc
sbb
or
mov
adc
sub
(bad)
pop
je
inc
push
push
add
es
add
adc
mov
sar
test
and
movs
jbe
inc
push
fidivr
push
add
movs
into
loope
(bad)
mov
mov
lahf
adc
inc
adc
sub
push
inc
adc
sub
cmp
add
cwde
or
cmp
pop
and
cwde
cwde
dec
ins
dec
call
xchg
retf
arpl
sub
sub
imul
pushf
jnp
jg
into
mov
sbb
jge
cld
push
pushf
shr
arpl
or
xchg
rcl
lods
mov
repz
sub
push
retf
mov
pop
xor
sub
clc
jp
stc
xchg
rcl
cmp
cld
mov
(bad)
fcom
pop
cmp
shl
mov
daa
dec
mov
sbb
pusha
addr16
iret
inc
fmul
xor
cmp
or
into
sub
ss
push
in
mov
movs
xor
loopne
iret
pushf
push
loopne
xchg
push
lods
enter
mov
xchg
add
xchg
jle
lock
xchg
loop
in
cmp
frstor
sbb
mov
pop
xor
movs
dec
sub
sub
cmc
cmp
xchg
fs
mov
jns
xor
or
scas
inc
push
js
pop
mov
fistp
out
popf
mov
retf
add
and
(bad)
jmp
mov
add
hlt
call
inc
cmp
xor
rol
stc
pop
rol
xchg
(bad)
shr
cmp
hlt
and
addr16
je
test
(bad)
mov
mov
mov
movs
cmp
enter
push
ds
mov
jns
loopne
mov
in
ins
fild
fcomip
lods
cmps
arpl
cmp
cwde
cmc
push
push
stos
and
pop
in
mov
retf
aad
jg
mov
dec
push
clc
out
ret
add
mov
(bad)
dec
outs
(bad)
in
aad
xlat
mov
mov
sbb
out
push
ret
cmps
stos
ror
(bad)
jbe
cdq
(bad)
mov
idiv
sub
mov
in
pop
fwait
xchg
pop
cwde
push
adc
jp
dec
test
mov
call
and
inc
and
sub
push
push
and
mov
sub
pop
xchg
imul
loop
scas
push
fimul
jo
cmp
mov
lods
pushf
and
jo
sbb
sahf
pop
mov
cmp
add
dec
xchg
je
sub
mov
pop
cli
out
inc
imul
mov
or
or
inc
ja
cld
xchg
stos
or
jge
stos
sub
lods
sbb
(bad)
cmovno
and
cs
shl
mov
xor
(bad)
mov
cmp
adc
xchg
jo
or
(bad)
mov
mov
inc
popf
add
sbb
stos
(bad)
ins
shl
aaa
sub
adc
inc
or
add
mov
ds
cmp
pop
iret
inc
lds
icebp
aas
in
js
and
repz
and
arpl
inc
adc
hlt
mov
cs
pop
inc
loope
add
and
xchg
ror
push
push
xor
(bad)
jne
hlt
pop
sbb
sbb
push
jae
jle
pop
popf
in
xchg
arpl
enter
sbb
out
into
or
or
es
addr16
sub
mov
jbe
(bad)
mov
pop
and
pop
adc
aam
retf
cli
cmps
mov
adc
or
mov
call
stos
jb
inc
clc
sbb
sbb
popa
bnd
iret
jns
dec
fstp
dec
sbb
call
adc
push
adc
shl
xchg
(bad)
push
sub
adc
jne
adc
push
imul
add
es
jmp
jae
imul
fbld
jnp
mov
in
aam
mov
mov
xchg
cs
daa
jb
jns
fisttp
xchg
inc
test
inc
push
push
retf
sub
add
or
call
fimul
test
inc
cmp
push
push
inc
in
mov
jg
retf
or
into
pop
mov
cmp
jno
xlat
in
or
adc
cld
and
jmp
dec
xchg
lahf
cmp
jge
jmp
data16
leave
stc
fst
and
xchg
aas
stc
push
pop
jp
jl
test
and
fs
jno
inc
jb
and
xchg
jne
jg
or
adc
and
iret
fdiv
mov
sahf
jmp
daa
out
aam
scas
jnp
xchg
sub
dec
dec
mov
add
pushfw
in
pusha
inc
mov
shl
pusha
xor
jge
mov
aas
xlat
fdiv
cmps
and
pop
movs
inc
neg
ror
inc
xchg
out
push
bound
dec
xor
outs
stos
mov
rcr
jmp
retf
push
(bad)
ins
push
jmp
retf
cmp
out
pusha
stos
or
cmp
cli
in
lock
mov
push
sbb
fld
scas
adc
mov
mov
test
pop
scas
cld
push
sbb
iret
cwde
xlat
js
ds
(bad)
push
and
in
pop
xchg
(bad)
lea
vcvtps2pd
out
dec
arpl
sti
popf
gs
int
pop
xchg
mov
and
or
add
popa
jne
xlat
xchg
or
ret
pushf
jne
sbb
and
jne
mov
test
pop
push
mov
add
and
mov
push
sti
clc
push
nop
push
cmp
add
arpl
inc
(bad)
inc
(bad)
ror
add
mov
call
ds
sub
(bad)
cmc
je
pop
dec
cmps
leave
adc
hlt
cmp
jmp
hlt
pop
push
push
pushf
rcr
mov
or
js
in
dec
clc
fwait
and
loop
xor
inc
out
jge
ret
movs
imul
enter
adc
adc
retf
mov
mov
cmp
fisttp
push
rcl
adc
inc
sbb
mov
sar
sub
and
push
(bad)
nop
enter
(bad)
scas
imul
jmp
aaa
adc
cmps
xor
mov
dec
xor
cli
inc
loop
mov
mov
out
mov
add
imul
stos
jo
inc
addr16
dec
movs
enter
imul
push
jnp
mov
or
sbb
or
mov
pop
fld
outs
retf
jmp
int3
mov
loope
iret
nop
cmp
lods
mov
xor
ja
test
and
repnz
(bad)
push
xchg
repz
xchg
push
out
or
add
jns
in
(bad)
out
or
lods
cwde
inc
addr16
lock
pop
jo
cmp
ss
and
test
rcl
mov
inc
jo
sub
popa
(bad)
add
add
ds
mov
dec
or
sub
enter
les
mov
and
dec
mov
jae
inc
mov
xlat
jne
add
loope
or
xchg
test
ds
pop
outs
push
pop
cmp
xor
xor
push
sahf
repnz
cmps
les
and
rdpmc
pusha
loope
clc
pop
cmp
fwait
ret
sub
je
mov
adc
xchg
pop
pop
cmp
sub
inc
dec
mov
xor
cld
popf
jnp
jge
out
mov
dec
push
inc
ret
cmp
inc
arpl
mov
mov
xchg
fnstenv
loopne
jmp
rcl
clc
xchg
nop
mov
sar
ja
push
outs
sub
push
lods
mov
xchg
pop
fisttp
shl
mov
div
mov
hlt
cmps
imul
aad
and
rol
push
pop
movs
dec
xchg
nop
jge
in
sbb
push
aas
push
push
pop
push
shr
nop
(bad)
into
popf
fld
movs
pop
inc
sbb
cmp
mov
cmp
int
push
dec
pop
xor
sub
outs
xchg
cld
cmp
cmp
add
mov
cmp
mov
pop
outs
lods
jo
cmps
pop
jl
xchg
hlt
adc
aas
call
ins
jo
sub
pop
push
xor
pop
mov
xor
cmp
jmp
push
inc
mov
fwait
jg
fsub
lahf
jl
mov
imul
mov
pusha
scas
fsubr
mov
inc
in
sub
or
mov
repz
in
mov
jbe
leave
(bad)
outs
fdivr
popf
into
stos
jl
and
div
pop
push
jb
daa
jg
inc
adc
dec
aam
test
sbb
not
push
aam
pop
lods
dec
or
ss
sahf
xchg
or
mov
(bad)
hlt
inc
push
push
test
sub
xor
sub
and
outs
dec
pop
retf
not
cmp
loope
loopne
outs
xor
sub
xchg
pop
push
push
cld
adc
test
push
pmaddwd
fmul
mov
pop
xchg
shr
ss
mov
enter
mov
xchg
push
push
in
mov
push
sar
pop
retf
pop
sub
mov
inc
(bad)
sbb
ficom
dec
test
arpl
sbb
push
std
xor
sbb
push
mov
inc
jno
or
push
(bad)
call
adc
sub
or
xchg
mov
sbb
ficomp
in
clc
in
adc
(bad)
mov
sbb
call
rcr
movs
push
clc
out
xchg
fucompp
sub
cmps
call
lods
xlat
loop
mov
fsubr
iret
jno
ja
test
fcmovnu
xchg
xor
xor
das
add
mov
jb
fmul
cmp
jle
cmps
in
add
imul
stos
cmp
loopne
ja
ins
(bad)
push
xor
test
faddp
call
dec
dec
(bad)
in
les
nop
sbb
stos
jmp
jo
jg
imul
jg
dec
dec
(bad)
(bad)
mov
(bad)
daa
sahf
shl
mov
outs
div
(bad)
(bad)
cmp
jae
out
ins
sub
pop
loope
cmp
push
adc
fwait
push
repz
dec
sbb
popf
ss
in
cmc
mov
ss
int
sub
cli
repz
popa
mov
in
lods
jp
lods
mov
fsubp
jecxz
cmp
xor
pop
push
jae
mov
dec
mov
cmp
jno
cs
xchg
adc
shl
ins
iret
push
jnp
add
mov
data16
pop
movs
enter
mov
mov
cli
xor
and
out
int3
cwde
inc
das
pushf
es
(bad)
loope
out
loopne
fcmovnu
std
adc
xchg
mov
dec
lahf
test
adc
inc
push
arpl
xchg
bound
jno
push
cld
test
rcl
ror
(bad)
push
push
mov
stc
mov
mov
mov
les
movs
sar
and
call
outs
inc
xor
in
adc
rcr
inc
sbb
adc
xor
(bad)
xchg
sbb
dec
out
pop
test
cmp
movs
pop
mov
xor
cdq
pop
cld
xor
push
imul
movs
aaa
je
pop
das
add
(bad)
call
or
repz
push
scas
mov
fs
sahf
mov
mov
in
cmp
out
mov
call
push
gs
or
rdpmc
mov
pop
mov
mov
movs
mov
mov
stos
pushf
add
inc
jp
mov
sub
sub
mov
xor
push
mov
inc
mov
push
jnp
lahf
popf
mov
ins
sti
idiv
xor
or
loopne
jmp
leave
js
mov
es
mov
int
sahf
icebp
lock
nop
call
inc
outs
fmul
(bad)
repz
test
fmul
aaa
retf
mov
xchg
cli
sub
in
in
pop
into
dec
push
or
loopne
push
sub
es
add
pushf
jb
test
mov
jmp
je
leave
sbb
stos
dec
int3
inc
aad
sbb
cld
out
adc
outs
mov
retf
stos
add
pop
outs
cmp
scas
cwde
out
iret
or
pop
jns
pop
ins
enter
sbb
arpl
into
test
push
sahf
pop
jg
pop
xchg
fcom
push
or
mov
ins
pop
daa
sub
lods
jge
add
inc
jle
inc
pop
push
dec
fs
mov
jnp
mov
rsm
mov
inc
fcomp
pop
mov
js
and
cmp
sbb
pop
fisttp
mov
std
lods
stc
call
retf
retf
add
inc
sti
push
sti
sub
popw
jge
addr16
cmp
sbb
sub
xchg
adc
bound
js
cmp
pushf
push
sbb
push
(bad)
jno
pop
ja
pop
push
fsubr
pop
sbb
scas
ficom
iret
movs
mov
sbb
dec
jb
or
inc
call
adc
sbb
mov
mov
xor
lds
pop
out
lea
pop
and
push
or
push
push
xchg
adc
fidivr
or
push
adc
aas
scas
int
pop
and
in
call
mov
fucomi
dec
sub
cmps
push
xchg
in
pusha
dec
sahf
ret
push
xchg
(bad)
xchg
daa
mov
ins
mov
and
adc
pop
out
pop
iret
adc
mov
push
and
call
xor
jecxz
add
test
cmp
imul
sahf
sbb
scas
xchg
repnz
cmps
push
sbb
pusha
mov
cmp
mov
mov
loop
sbb
or
or
xor
aaa
mov
or
fdiv
mov
mov
call
pop
xchg
adc
add
stc
or
aaa
out
mov
aas
push
loope
arpl
cmps
and
cmps
in
pushf
dec
sub
push
mov
push
xor
add
std
mov
(bad)
aaa
pop
loope
pop
ret
shr
movs
push
pusha
test
sbb
in
cmp
xchg
fcmovnu
ret
dec
dec
sub
adc
pop
dec
retf
and
stos
mov
(bad)
mov
push
or
jns
lods
fiadd
mov
std
mov
xchg
inc
ret
mov
dec
ret
(bad)
xchg
push
sar
mov
sbb
pop
push
stc
mov
in
mov
push
add
inc
push
loopne
push
aad
add
cmp
xchg
xchg
enter
add
sahf
cwde
mov
leave
mov
dec
adc
jl
mov
jo
dec
out
jae
loopne
cmp
adc
mov
shl
outs
das
and
ret
sub
fidiv
jno
nop
jb
add
jmp
mov
ds
mov
jo
xor
popf
es
sbb
mov
xchg
xlat
ret
lahf
nop
aam
ret
call
jo
sub
mov
add
stos
pop
mov
cwde
mov
add
dec
sbb
xor
ss
inc
or
xchg
cwde
fdiv
cmp
popw
(bad)
jae
pop
test
cmps
adc
jnp
cwde
push
jecxz
cmp
out
rcr
cli
stos
jb
fwait
popa
mov
mov
jg
in
mov
mov
mov
(bad)
jmp
ret
pop
not
bound
jns
and
movs
js
sub
fcmovnu
push
cmp
inc
or
sbb
popa
fst
arpl
lea
nop
lods
out
(bad)
mov
shl
adc
xchg
mov
(bad)
shl
pop
aas
jg
out
gs
sbb
leave
add
(bad)
std
fdivr
mov
mov
in
out
jo
xor
fistp
xor
adc
mov
enter
push
xchg
fdiv
mov
inc
sti
(bad)
cwde
xor
mov
cmp
jne
sub
in
pop
xchg
pop
mov
jmp
push
adc
inc
cmps
cmp
retf
cmova
inc
xor
mov
test
in
adc
push
js
push
inc
in
imul
mov
fisttp
cmp
mov
scas
sub
icebp
jmp
inc
add
(bad)
adc
shr
push
xchg
fwait
aaa
out
jle
mov
xchg
daa
inc
jecxz
repnz
shr
sbb
ss
jg
pop
inc
call
aam
mov
pop
fidiv
and
push
ror
xor
push
pop
or
mov
adc
aam
pop
sbb
jg
pop
scas
out
push
inc
and
or
pop
and
jp
cmp
int
pop
outs
mov
mov
push
dec
mov
icebp
fisubr
jne
ds
inc
cli
enter
adc
mov
jne
pop
jl
inc
mov
sbb
sub
dec
add
test
inc
mov
leave
push
adc
repz
cld
fist
rol
push
in
icebp
retf
dec
mov
sbb
xchg
push
ins
pop
push
inc
stc
(bad)
ja
in
cmp
push
xchg
clc
jns
push
push
daa
daa
mov
mov
mov
(bad)
lds
jge
mov
xor
mov
cmps
sti
add
adc
mov
xor
call
bound
push
sbb
cmp
and
or
cmc
jmp
and
stos
mov
sbb
outs
aaa
(bad)
jo
xchg
cmc
fwait
sbb
rol
call
sub
xchg
scas
jg
mov
and
or
jmp
mov
hlt
push
pop
pop
dec
cmp
aaa
fwait
mov
ret
xorps
adc
xchg
mov
or
shl
data16
mov
clc
in
enter
adc
cmovge
push
sbb
cwde
jno
xlat
std
fnstenv
mov
jb
adc
push
pop
aas
repnz
add
in
addr16
mov
jl
cmps
adc
xor
lods
pop
into
pop
jb
(bad)
fisttp
mov
into
pop
xchg
test
mov
mov
ss
ficomp
push
xchg
sbb
mov
(bad)
scas
and
add
adc
xor
dec
xchg
add
xchg
mov
sub
or
ins
inc
or
xchg
fcmove
leave
mov
arpl
pop
ss
and
aad
(bad)
sub
jno
jne
xor
daa
push
pushf
sub
lea
ret
jmp
retf
call
outs
js
aaa
sub
das
or
add
pop
mov
push
dec
rcl
push
mov
and
pop
sub
pop
scas
xchg
push
mov
mov
push
sub
push
ret
push
add
mov
mov
add
mov
jge
xchg
mov
ss
pop
pop
push
xchg
xchg
pushf
sub
nop
mov
mov
push
mul
pop
jecxz
inc
lods
into
xchg
outs
in
loopne
and
sbb
inc
sar
mov
out
sbb
mov
dec
outs
cli
or
nop
mov
mov
js
dec
ins
icebp
push
cwde
xor
test
add
in
adc
pop
add
stc
test
loopne
outs
lock
mov
icebp
cmp
pusha
push
or
cs
dec
retf
mov
imul
inc
and
mov
sub
ret
jg
mov
push
aas
mov
outs
add
xchg
jp
mov
rol
jbe
std
pop
push
test
dec
mov
test
in
sbb
xchg
pop
mov
mov
sahf
cli
adc
data16
pop
imul
sub
add
scas
pop
pop
in
sbb
pop
jo
mov
ja
shl
mov
stos
les
pop
add
and
imul
jp
pop
fadd
sub
jecxz
clc
loope
xor
in
fwait
test
push
push
mov
cmps
repz
loope
hlt
inc
call
dec
xchg
mul
pop
out
call
hlt
clc
clc
xchg
in
fld
lea
inc
out
bound
lahf
cs
mov
mov
rol
outs
lea
cmp
call
iret
cmps
shl
arpl
mov
and
nop
sub
dec
out
out
in
gs
sti
imul
xchg
cmp
cwde
int3
lods
pop
jbe
sti
add
xchg
popa
jle
shr
push
pop
popa
push
mov
xchg
pushf
xor
jo
mov
clc
mov
mov
mov
xchg
xchg
jmp
ss
push
shl
mov
xor
inc
sub
dec
sti
mov
lods
xor
jo
sub
outs
mov
sbb
push
icebp
scas
sahf
jae
jnp
add
icebp
movs
add
and
push
jb
push
fsubr
clc
add
in
call
fs
jae
or
ret
aas
dec
stos
inc
aam
xor
inc
cmp
int3
das
add
or
push
xor
(bad)
daa
cld
adc
sbb
jp
movs
mov
daa
addr16
clc
and
ror
icebp
cmp
cli
inc
and
popa
in
pop
mov
or
adc
dec
xchg
stos
or
imul
xchg
movs
push
pop
and
jmp
sbb
jae
nop
outs
es
in
cmp
pop
shl
hlt
fild
mov
jmp
or
jne
adc
inc
rol
dec
xchg
aam
nop
mov
sbb
jmp
xor
xor
inc
dec
push
xchg
loopne
mov
das
je
jnp
sti
push
mov
sub
dec
jno
xor
arpl
leave
xor
out
pop
xchg
mov
dec
and
nop
and
mov
test
cs
push
arpl
inc
push
jae
fld
mov
xor
cmps
pop
dec
aad
adc
xchg
stos
ins
cmp
mov
xchg
jae
not
cli
mov
out
sub
mov
mov
bound
mov
jge
sub
sub
stc
mov
jae
add
add
sub
fs
outs
xor
mov
dec
pop
adc
out
sbb
dec
imul
(bad)
gs
into
lods
ret
scas
fld
sub
mul
div
mov
imul
mov
ins
scas
ins
jae
add
or
out
jbe
mov
push
xchg
sub
jbe
out
stos
scas
sahf
mov
bound
sub
ret
retf
mov
jno
and
sti
fld
out
ja
fstp
and
adc
inc
imul
lahf
or
ja
cmps
rcr
sub
pop
fist
(bad)
out
mov
test
jo
ds
daa
mov
jbe
adc
inc
jae
and
sub
mov
movs
repnz
movs
pop
cwde
shl
out
lahf
cmc
push
pop
sub
(bad)
lahf
call
sub
jns
aaa
pop
leave
adc
push
sbb
jle
mov
mov
xchg
out
sub
or
and
inc
fdiv
sbb
retf
jl
cmp
arpl
in
or
jp
mov
dec
pop
adc
mov
sub
retf
pop
sub
push
mov
or
mov
cwde
ds
out
stc
push
out
enter
sbb
das
xchg
jmp
shl
xchg
movs
add
retf
adc
push
or
xchg
sbb
sti
cwde
inc
cmps
mov
out
or
mov
sbb
out
cmp
stc
cmp
outs
fld
push
loop
std
scas
sub
adc
sbb
xlat
lahf
cmp
lods
adc
push
ret
push
push
mov
stos
mov
pushf
fdivr
test
aaa
sbb
cs
cmp
ret
cmp
xor
test
enter
xchg
inc
push
add
mov
xor
gs
rcl
sub
cmps
pop
clc
cmp
xor
jp
in
xor
mov
bound
fsubr
and
mov
add
or
std
push
dec
outs
or
adc
ds
fstp
jp
mov
mov
adc
repz
fnstsw
cmp
jno
out
test
aam
add
aad
inc
mov
data16
in
aad
mul
cli
in
add
outs
movs
test
pop
and
xor
adc
mov
push
dec
hlt
pop
sub
arpl
test
test
jo
jp
das
push
data16
je
jnp
(bad)
in
or
pop
sub
ins
(bad)
(bad)
je
xchg
imul
dec
cmp
mov
retf
mov
sbb
idiv
cmp
mul
jnp
add
mov
test
test
jb
scas
cmc
jp
adc
je
add
arpl
push
push
lds
cli
test
pop
mov
mov
rol
clc
xchg
mov
ja
xchg
imul
pop
sub
or
mov
jge
push
mov
sti
adc
ror
ins
js
jmp
xor
(bad)
jge
sar
jbe
call
sub
pop
cmp
in
fs
inc
aas
xor
xchg
xchg
xor
jns
inc
lods
out
pop
rol
add
daa
and
test
and
add
pop
and
pop
mov
or
add
xchg
push
test
in
jle
lods
pop
int
rcl
pop
fstp
xchg
std
mov
jmp
ret
add
cli
sbb
push
jb
mov
fisub
std
out
enter
push
fcmovnbe
js
dec
hlt
shr
imul
stos
inc
mov
test
pop
pusha
mov
or
mov
add
cmp
sbb
mov
fimul
loope
out
retf
xor
out
rcl
xchg
dec
add
xchg
test
or
ja
push
mov
jno
cmps
or
push
(bad)
(bad)
xchg
mov
jecxz
or
popa
pop
ret
jmp
js
and
mov
rcl
mov
ret
mov
jnp
xor
add
(bad)
sbb
xchg
lods
enter
neg
popa
mov
add
mov
(bad)
or
xchg
xchg
mov
push
jb
das
cmp
(bad)
jle
aam
fs
sub
out
pop
jle
cmp
jg
sahf
push
sub
jecxz
aad
pop
loope
sub
xchg
clc
lods
sub
or
fcomip
xchg
jae
mov
sbb
cmp
stos
mov
mov
push
cmp
sub
ins
mov
in
into
movs
cmp
ja
movs
lods
dec
xor
jbe
jae
inc
mov
inc
aas
mov
pop
cmp
lock
cmp
cli
mov
xchg
push
xchg
add
les
retf
lds
cmp
rep
rcr
lods
pop
popa
xchg
dec
stos
out
mov
in
adc
xor
push
pop
bound
cmp
scas
jns
fs
call
adc
cmp
call
add
test
mov
in
xor
pop
xor
clc
cmp
jns
arpl
push
sub
dec
out
mov
int
test
inc
test
inc
pop
mov
aam
push
push
stc
mov
push
mov
mov
adc
sub
ret
mov
loop
mov
cmps
mov
test
jecxz
int3
mov
lods
aad
imul
dec
or
jae
jb
sub
xchg
lods
cmp
les
pop
mov
sub
cwde
jo
test
push
inc
data16
movs
jmp
xchg
call
jae
outs
push
fs
pop
test
xor
mov
xchg
cmps
scas
pusha
in
test
(bad)
data16
and
dec
push
cmp
sbb
loop
sbb
lods
xchg
nop
retf
fdiv
pop
mov
fmul
mov
xchg
and
lods
or
bswap
in
xor
jmp
ret
cmp
pop
xchg
popa
imul
rcr
add
out
cmp
jmp
xchg
cdq
push
(bad)
jno
(bad)
lea
xchg
jle
clc
or
lock
dec
retf
cmp
jecxz
jp
mov
dec
and
inc
lods
int
rol
pushf
cmc
mov
sub
dec
adc
jb
mov
or
movs
mov
aam
loope
push
mov
pop
(bad)
mov
sub
pop
mov
xchg
xlat
mov
xchg
add
mov
pushf
xchg
inc
pop
xor
outs
imul
push
cmp
(bad)
pop
dec
inc
rol
pop
xchg
in
sahf
test
lea
loopne
cs
addr16
fadd
inc
test
loop
push
popf
nop
push
add
mov
cmp
cld
adc
shr
jge
jns
test
push
push
and
aas
push
xchg
stc
inc
pop
aas
mov
pushf
ret
retf
clc
sbb
lahf
push
push
mov
mov
aaa
cmp
call
jle
pop
adc
stos
shl
sub
daa
mov
repz
and
and
(bad)
mov
inc
iret
pop
shl
xchg
jp
sbb
jmp
ds
xlat
xor
rol
xor
push
and
arpl
out
aas
dec
js
add
leave
sbb
cld
psllq
out
cmp
in
mov
ins
sbb
and
(bad)
retf
int
cmps
xchg
js
mov
mov
add
les
pop
ret
popa
jmp
in
clc
sbb
movs
mov
(bad)
and
je
fldln2
or
or
sub
xor
cmp
cmp
call
jp
push
fnsave
sbb
call
(bad)
jno
xchg
jbe
mov
rcr
and
sub
add
into
xchg
and
popa
aad
fs
or
ret
outs
push
data16
(bad)
aas
inc
ret
jl
push
jmp
out
test
sbb
gs
stos
cmp
mov
jbe
in
sbb
jb
int
pop
mov
mov
test
sbb
push
ss
cmp
inc
jnp
stc
cmps
add
mov
rcl
inc
nop
push
out
sbb
jae
fs
imul
and
dec
pop
in
adc
fwait
dec
adc
outs
stc
in
leave
imul
push
mov
xchg
cmps
cmc
movs
sub
repnz
outs
ret
call
shr
inc
retf
cs
sub
xadd
push
dec
push
push
xor
ror
ins
adc
sbb
std
imul
lock
fld
loopne
call
push
inc
shr
jno
mov
lea
rcr
pop
or
stos
mov
cli
pop
and
xchg
mov
imul
xchg
scas
in
jo
xlat
push
and
xlat
fisub
or
pop
sahf
pushf
cli
pop
cwde
data16
ret
inc
cmp
inc
pop
add
pop
fnstsw
je
lock
out
mov
mov
or
loopne
cmp
pop
in
add
sbb
mov
das
dec
outs
imul
mov
jnp
pop
stos
jg
movs
inc
inc
jne
dec
rcr
mov
mov
xor
sub
adc
loope
inc
sub
stos
outs
pop
adc
sbb
mov
addr16
out
das
sar
inc
(bad)
mov
pop
mov
dec
jne
in
or
push
pop
out
jge
das
xlat
mov
add
aam
imul
sub
or
pushf
and
or
ins
pusha
test
cmp
stos
jno
xchg
and
je
jl
jmp
push
or
xlat
adc
cmp
mov
xchg
gs
rol
jmp
xchg
loopne
push
xchg
xor
movs
mov
(bad)
or
xchg
add
or
retf
jbe
fs
push
cmp
add
scas
mov
pushf
add
fsubr
sbb
dec
clc
dec
out
inc
xor
sub
test
mov
repz
fwait
xor
rol
out
pop
sub
(bad)
repnz
jns
(bad)
dec
les
add
imul
addr16
jnp
inc
mov
sbb
mov
dec
push
and
ret
add
mov
bound
sbb
les
and
nop
push
out
xor
jae
js
js
ins
stc
fcmovb
in
dec
mov
sbb
or
cdq
fcom
fcmovnb
fild
xchg
cmp
mov
push
in
shr
sub
sub
jb
inc
loop
cmp
and
lea
jo
das
add
lea
dec
adc
leave
xchg
sbb
es
repz
push
xchg
cdq
cld
cmp
sub
add
popf
scas
jg
mov
(bad)
sahf
dec
jp
ret
ret
xor
add
xchg
retf
jae
xchg
jno
mov
or
cmp
fcmovnbe
ja
jg
in
xchg
mov
aaa
and
add
lahf
dec
mov
cs
imul
das
das
stc
fmul
adc
and
inc
cmp
fiadd
iret
push
or
or
int3
mov
(bad)
sbb
pushf
xchg
das
sub
aaa
sar
mov
xor
adc
add
jl
push
imul
cwde
xchg
xlat
dec
rol
ins
or
push
xor
loop
ja
arpl
mov
inc
pusha
(bad)
push
fimul
xchg
add
fs
cmp
jg
retf
mov
iret
adc
mov
mov
std
iret
dec
aas
fdivr
push
cmp
dec
xor
jmp
pminsw
in
add
sub
pop
addr16
ins
pop
mov
int3
xchg
cmps
cmp
xor
mov
pop
not
test
jb
stc
jae
(bad)
jns
jmp
pop
sub
rcl
and
(bad)
xchg
mov
mov
(bad)
xchg
push
push
popa
mov
bound
gs
ds
and
cmp
mov
add
add
leave
cmp
movs
movs
outs
push
inc
fwait
mov
xchg
repz
mov
xor
xchg
mov
rcr
jmp
add
sub
popa
loop
push
xor
xchg
call
in
push
inc
mov
xchg
mov
inc
test
xchg
push
push
sub
imul
inc
mov
and
jno
hlt
repnz
pop
sub
(bad)
ss
mov
out
push
in
jge
jno
mov
je
imul
aas
ret
inc
call
stos
mov
sub
push
push
or
test
lock
mov
jmp
or
sub
add
pop
mov
push
jmp
adc
lods
shl
stos
sub
xor
xchg
sti
push
retf
test
call
popf
adc
shr
(bad)
in
mov
mov
imul
mov
ret
push
ins
cmp
mov
data16
ja
push
dec
adc
or
pop
cmp
int
mov
pop
ret
jne
fild
ins
xchg
sub
sub
imul
or
sbb
adc
pop
xor
aam
jmp
adc
scas
mov
cmp
sub
lds
lods
xchg
pop
push
inc
mov
movs
pushf
repz
popa
inc
jb
fs
jecxz
hlt
test
hlt
mov
out
(bad)
std
inc
jge
push
in
lock
xor
outs
leave
movs
pop
or
out
ins
and
cmps
sbb
imul
ins
and
(bad)
mov
mov
pop
adc
adc
iret
into
push
loopne
pop
push
xlat
push
dec
mov
add
in
add
pop
sub
xor
and
aas
mov
sbb
push
and
pop
mov
cmc
add
pop
push
xchg
ds
push
icebp
mov
sub
mov
call
cmps
inc
ret
mov
ficom
xor
div
fst
imul
inc
cwde
push
jg
push
(bad)
js
ins
sti
add
add
inc
inc
or
out
dec
xor
imul
test
stc
bound
out
jns
sub
xor
cmp
push
and
add
sar
push
inc
outs
fadd
jmp
cmp
push
popf
and
int3
mov
aad
jns
add
sub
pushf
dec
popa
sbb
or
sub
jne
or
xor
sti
out
ret
dec
mov
inc
std
xor
pop
test
je
test
or
icebp
jb
repnz
arpl
jno
les
scas
test
call
cmp
fld
cld
ins
sbb
or
ss
arpl
cmp
push
jle
push
retf
xchg
cdq
shl
fisttp
mov
cmp
xchg
dec
push
sbb
dec
add
out
and
inc
les
xor
imul
int3
bnd
repnz
xchg
test
(bad)
in
cmp
cwde
leave
sbb
fwait
inc
and
mov
lods
les
test
or
sub
iret
out
xchg
dec
jge
adc
hlt
adc
out
nop
mov
sub
or
lea
sub
aad
sbb
js
fmul
sbb
xchg
scas
add
imul
inc
jnp
cmc
pop
gs
xor
(bad)
mov
ja
sub
fst
cmc
(bad)
sahf
out
inc
and
push
push
repz
hlt
es
pop
sub
dec
or
imul
pusha
and
pop
mov
sub
cli
adc
dec
xchg
mov
adc
or
mov
sub
dec
mov
mov
loope
mov
mov
sbb
xor
and
je
shl
and
sti
mov
in
push
ja
xchg
sbb
ins
pop
add
daa
inc
(bad)
pop
xchg
sub
jo
cli
(bad)
out
or
xor
jp
and
jmp
hlt
cmp
popa
mov
cmp
mul
iret
xchg
in
mov
add
test
xchg
xor
mov
adc
aas
repz
mov
or
xor
(bad)
in
push
sub
sub
or
dec
and
cmp
and
xchg
xchg
inc
sbb
popa
cs
outs
dec
enter
popa
pop
dec
mov
cmp
mov
mov
imul
outs
clc
das
mov
cmp
mov
jecxz
fdivr
mov
jno
push
cmp
push
jne
(bad)
jo
push
in
adc
sub
test
jns
sbb
ins
shr
sbb
jb
dec
pusha
adc
push
sub
div
jae
cmc
cdq
xor
cmc
mov
adc
cmp
repnz
movs
fs
push
mov
cmps
mov
mov
mov
(bad)
jmp
add
int3
inc
std
sub
ss
movs
push
stos
jge
cmp
mov
fsubr
jge
in
out
push
sahf
cmp
repnz
pop
mov
or
mov
test
enter
sub
xchg
(bad)
cmps
dec
je
(bad)
mov
push
sbb
mov
sub
inc
pop
in
clc
ret
mov
movs
jbe
mov
xor
or
pusha
iret
iret
sahf
call
sub
pop
xor
push
in
or
ins
xchg
cs
addr16
jp
cdq
mov
inc
xor
xor
mov
je
mov
mov
ret
(bad)
adc
inc
fst
je
jns
jne
cwde
inc
rcr
mov
mov
add
lods
pop
and
into
lahf
in
fldcw
adc
ds
dec
aas
jge
add
das
sub
add
sbb
pop
movs
adc
add
imul
lds
gs
pop
bnd
outs
call
fwait
aam
clc
dec
ins
mov
push
das
fist
and
sub
pop
xor
xchg
cld
lods
inc
pop
mov
sbb
int3
aam
and
mov
push
mov
in
in
stos
cmp
mov
jg
fwait
scas
iret
sbb
mov
sar
jb
test
scas
pop
js
sbb
inc
inc
retf
addr16
imul
(bad)
or
int3
pushf
push
cmps
and
dec
xchg
retf
imul
clc
(bad)
dec
mov
jo
repnz
repz
rol
(bad)
add
ss
lock
ret
pop
and
adc
test
scas
sub
hlt
int3
jg
pop
movs
add
jnp
add
outs
push
jle
data16
sub
dec
fisubr
repz
clc
mov
mov
movzx
inc
(bad)
(bad)
out
gs
sub
mov
pushf
scas
inc
dec
mov
in
out
ins
aas
and
jl
sbb
sbb
lea
sbb
adc
cli
aad
xor
loope
mov
addr16
ret
mov
cmp
stc
in
pop
out
or
jp
fidiv
das
xchg
and
push
xchg
out
inc
outs
shl
xor
call
xchg
movs
fadd
in
adc
out
push
sub
shr
push
aas
xor
xchg
or
pop
adc
sbb
lods
push
cld
push
pop
mov
jns
cmp
ror
jmp
xor
fsub
xchg
xchg
repnz
ret
cmp
xchg
xchg
nop
inc
outs
xor
cmp
fldenv
push
mov
xchg
add
cmp
or
int3
push
fwait
sub
outs
cmps
mov
cmp
adc
leave
inc
cwde
pop
lahf
into
sub
mov
in
inc
mov
dec
jge
ror
dec
jnp
outs
fcom
fdiv
stos
pop
pop
pop
inc
jae
sbb
popf
das
inc
sahf
push
jl
sar
cmp
push
jbe
repnz
mov
pop
inc
sbb
in
sbb
sub
mov
scas
out
cmp
js
sub
fs
inc
mov
mov
ds
out
mov
fdivr
jg
dec
xchg
lock
jae
repnz
mov
xchg
aam
enter
adc
inc
xchg
sti
lock
sbb
nop
pop
mov
fwait
out
rol
mov
outs
test
bound
and
mov
repz
das
mov
mov
fisttp
jp
sub
retf
adc
adc
cmc
mov
test
xor
enter
movs
dec
stc
imul
cdq
out
imul
popa
int
and
mov
fstp
xlat
out
shl
mov
xchg
stos
daa
push
(bad)
jge
loope
mov
aad
mov
xor
push
jg
cmps
je
pop
xchg
cmps
ja
push
in
cmp
fisttp
dec
jg
add
dec
or
out
xchg
test
(bad)
pushf
lahf
pop
add
push
(bad)
sti
fldenv
fwait
das
xor
sbb
inc
jmp
add
and
test
push
ror
loop
test
fcomp
clc
cmp
mov
cld
mov
xchg
out
xchg
xchg
cmp
xlat
test
jb
test
mov
movs
lods
cmp
into
cwde
mov
jg
mov
ret
popa
pop
and
xor
mov
jmp
fwait
xor
cmps
cmps
xor
mov
push
gs
xchg
fisttp
cld
and
adc
pop
outs
inc
pop
shr
jbe
sbb
xchg
out
ins
and
cdq
ss
add
cmc
loop
mov
sbb
outs
ret
jl
and
outs
sub
jae
movs
lea
lds
movq
fcom
or
push
mov
sbb
popa
sub
cwde
push
stos
sbb
add
in
cmc
shl
int3
add
sbb
dec
movs
pusha
cmps
ficom
mov
mov
xor
mov
xchg
loopne
mov
mov
pop
cld
popf
shr
les
mov
into
push
inc
sbb
cs
out
pusha
dec
or
imul
(bad)
and
jp
xor
(bad)
dec
in
ins
and
cld
pop
call
std
aad
retf
cmps
push
imul
push
pop
add
mov
int
jo
push
push
pop
not
lahf
xor
xchg
call
retf
pop
leave
call
ss
loope
scas
xchg
xchg
xor
retf
mov
ror
add
sub
mov
icebp
push
repz
repz
pop
adc
mov
js
shr
test
adc
mov
rol
mov
pushf
mov
mov
pop
jg
sub
mov
rcr
pop
into
rol
sub
lea
add
mov
inc
data16
sbb
push
fadd
(bad)
and
mov
or
cmp
adc
sahf
test
xchg
idiv
fidiv
cmp
mov
mul
out
mov
aad
pusha
add
data16
mov
popa
xor
jbe
pop
add
fnstsw
sbb
ss
in
push
push
dec
push
cmc
imul
push
add
ds
sbb
and
xor
cmp
cld
add
in
popf
sbb
cmp
jae
push
in
xor
test
pop
nop
jns
cmp
sub
sbb
add
mov
jns
add
and
pop
movs
dec
es
cmp
xor
in
data16
mov
or
push
into
les
repz
stc
cli
adc
lea
pop
pop
call
sti
fs
inc
inc
shr
add
std
(bad)
or
jae
out
cmp
xchg
fsub
push
push
pop
jns
popa
lock
das
adc
(bad)
or
mov
cs
jne
cli
add
outs
shl
xchg
jae
ds
(bad)
push
outs
fdiv
addr16
push
add
loope
call
stc
test
mov
mov
dec
sti
lea
fbstp
or
sar
js
aaa
jge
ds
rol
or
daa
(bad)
test
clc
mov
or
sbb
out
clc
in
movs
scas
cli
jl
cmps
scas
and
cwde
push
loop
div
push
and
and
cdq
sub
les
sbb
push
cmp
rol
es
aam
aad
lahf
(bad)
hlt
stos
arpl
enter
jecxz
rcr
ss
mov
aad
and
cwde
push
(bad)
or
dec
bnd
xchg
add
into
inc
or
xor
mov
inc
(bad)
push
(bad)
xor
push
ins
(bad)
lea
das
or
aas
in
mov
stos
inc
outs
dec
adc
jmp
out
pop
out
in
pop
popa
sub
dec
sahf
xchg
outs
icebp
(bad)
pop
add
xchg
adc
ret
leave
rcr
(bad)
sbb
int
jge
loope
pop
push
xor
fcmovb
repz
test
fisub
into
or
idiv
sub
jg
retf
sti
pop
(bad)
clc
in
loope
imul
sub
push
movs
add
(bad)
and
sbb
and
gs
jbe
add
cs
sub
scas
mov
pop
push
std
jecxz
or
add
shr
and
sub
cmp
neg
outs
(bad)
sbb
arpl
popa
cmp
es
fsub
mov
stos
in
add
clc
je
in
mov
cld
dec
xor
scas
pop
pop
cmp
push
repz
cmp
xor
inc
inc
mov
stc
or
repnz
xchg
(bad)
loop
daa
mov
jns
dec
dec
aam
not
mov
push
mov
or
inc
xor
out
adc
adc
sbb
cmp
mov
mov
pop
into
ror
leave
or
mov
fadd
cmps
push
les
ud1
push
sbb
mov
push
mov
sub
cmp
jo
test
ud2
mov
bound
jmp
fcmovnb
xchg
ins
inc
adc
xchg
sti
mov
aam
loope
test
add
cmps
mov
pop
xchg
stos
scas
mov
imul
inc
mov
jbe
mov
push
pusha
inc
dec
data16
or
out
pop
int
das
pop
xchg
jnp
push
ins
xchg
fs
xor
xchg
fisub
mov
mov
mov
adc
and
adc
call
mov
sbb
rol
jns
stc
inc
loope
or
clc
dec
jmp
inc
inc
push
push
lods
mov
shr
pop
jmp
push
push
mov
stc
cld
bound
and
ret
inc
xchg
daa
cmp
push
outs
add
test
sub
jnp
fimul
inc
xchg
dec
mul
cmp
aad
pop
cmps
mov
inc
dec
out
arpl
jmp
pop
in
pop
mov
adc
mov
mov
add
pop
movs
push
mov
test
test
and
inc
cdq
arpl
mov
dec
jmp
mov
pop
push
ja
push
(bad)
mov
rcr
stos
add
fistp
dec
inc
aaa
lock
out
cmp
pop
jbe
mov
sub
mov
add
push
aas
movs
mov
loop
das
imul
mov
lods
(bad)
mov
lods
rol
cwde
sbb
mov
test
rcr
xchg
pusha
jmp
sbb
push
fimul
or
fdivr
mov
inc
shr
lahf
sub
retf
and
xchg
xchg
loop
pop
repz
loop
adc
int
dec
repnz
adc
or
addr16
and
or
mov
loopne
jo
or
inc
daa
sbb
push
das
sbb
cs
and
ror
pop
xor
pop
int
cs
or
repnz
push
jp
(bad)
pop
cmp
fadd
(bad)
push
ins
cdq
rcl
xchg
sbb
shl
and
nop
repnz
pop
mov
data16
rcl
rcl
ja
push
retf
(bad)
mov
mov
push
daa
xchg
pop
push
sbb
fdiv
xor
scas
push
addr16
inc
daa
mov
dec
mov
nop
xchg
dec
push
fmul
ins
push
(bad)
(bad)
mov
xor
scas
dec
sbb
pop
push
pop
mov
addr16
xor
stc
or
iret
pop
scas
jo
sub
cmp
fs
push
les
add
gs
mov
mov
jo
(bad)
pop
dec
sub
jmp
xlat
push
in
lahf
das
aaa
sahf
and
cld
pop
cld
push
bound
sbb
test
call
or
jge
out
mov
loop
imul
or
and
sbb
mov
outs
addr16
jbe
inc
mov
ss
lahf
xchg
mov
and
mov
lods
push
jmp
ss
sbb
loop
mov
cmps
mov
movs
xor
ja
ror
jbe
addr16
adc
add
push
aas
dec
sub
pop
in
pop
test
mov
popf
adc
sbb
cmp
aas
jno
cmps
jmp
mov
inc
ins
cmp
push
je
ret
in
loop
push
mov
dec
pusha
push
jb
fist
imul
sbb
mov
xchg
dec
sbb
(bad)
adc
add
or
(bad)
mov
mov
leave
push
dec
inc
cmp
and
lds
out
stos
das
cmp
sbb
cmp
or
dec
add
rol
and
ficomp
sahf
jle
sti
mov
mov
(bad)
pop
xor
jbe
iret
ret
sbb
in
jnp
stc
push
imul
cmc
xchg
cmp
scas
mov
test
int
ret
in
loopne
add
inc
out
dec
dec
mov
test
mov
dec
cdq
mov
mov
sub
mov
rcr
gs
inc
add
das
je
dec
pop
hlt
xchg
jmp
push
stc
adc
adc
xor
sub
inc
sar
shl
inc
fnstsw
cmp
ins
or
aaa
xchg
cmp
dec
dec
mov
addr16
dec
shl
nop
mov
into
sti
push
icebp
std
dec
repnz
fisub
sub
mov
adc
inc
in
jbe
mov
cmp
out
xchg
jnp
and
lahf
lahf
mov
test
pop
ja
pop
imul
push
xor
cmp
lock
in
addr16
inc
enter
pop
aam
jmp
xchg
in
cld
(bad)
lds
jo
cmp
push
inc
imul
mov
and
dec
(bad)
je
cmp
sbb
sbb
add
jle
push
push
jbe
(bad)
sbb
aas
adc
jp
scas
sbb
icebp
mov
ja
jae
mov
dec
sbb
push
fadd
or
xor
pop
mov
jbe
pop
jmp
push
mov
dec
ret
(bad)
sub
or
add
mov
test
mov
jecxz
pop
or
and
fwait
cmovb
popa
je
mov
lock
(bad)
ja
mov
test
sbb
out
pop
sbb
sub
add
stos
aas
scas
mov
ds
xchg
adc
mov
ror
and
mov
add
xchg
add
dec
xchg
dec
sub
sbb
rol
push
pop
pop
pop
pop
dec
in
push
xchg
push
adc
xor
cwde
pushf
mov
or
add
ret
pop
call
in
mov
fs
xor
fdiv
(bad)
rol
loop
mov
cwde
push
push
es
addr16
addr16
call
push
or
arpl
mov
xchg
sbb
shl
movs
push
mov
jbe
leave
xlat
movs
adc
or
adc
test
xor
sub
inc
ins
push
mov
add
aaa
cs
aam
or
push
rcr
into
das
push
mov
(bad)
dec
cmp
cwde
add
pusha
ja
icebp
repnz
ret
fmul
into
add
sbb
jp
mov
loopne
lds
push
lds
bnd
data16
mov
(bad)
and
cwde
pushf
jne
sub
call
outs
das
mov
and
mov
add
mov
mov
in
push
dec
jo
nop
xor
pop
push
mov
mov
sbb
adc
repz
jb
(bad)
xchg
jnp
jo
push
in
xor
lock
test
adc
cmp
jg
lahf
fdivr
ins
xchg
rcr
or
push
dec
mov
add
mov
push
fimul
mov
(bad)
es
mov
stos
pop
cmp
outs
js
mov
lahf
movs
loope
mov
loopne
inc
test
ja
sub
fldcw
mov
ss
cmc
(bad)
push
xor
cpuid
sahf
sbb
lods
std
cmp
js
mov
fmul
jecxz
arpl
(bad)
cs
pop
jns
ja
lods
dec
jge
(bad)
sbb
push
pop
xlat
idiv
pop
mov
push
push
hlt
mov
xchg
push
lock
fisubr
lods
mov
mov
clc
adc
adc
dec
rcr
push
js
(bad)
push
fsubrp
(bad)
fs
out
xchg
lahf
mov
idiv
push
push
pop
daa
(bad)
pop
jbe
test
out
add
mov
sub
dec
cwde
dec
add
push
and
enter
adc
retf
or
cli
mov
pop
adc
jge
in
(bad)
fisttp
out
out
cdq
ss
call
adc
enter
call
add
dec
mov
mov
into
sbb
cld
or
fsubrp
adc
call
les
cmp
js
sbb
xchg
mov
add
and
push
sti
icebp
jbe
ret
sub
dec
(bad)
lahf
dec
pop
or
pop
push
mov
mov
add
jns
inc
xor
sar
add
dec
fstp
cmp
and
aam
cmp
add
mov
or
cmp
repz
(bad)
bound
dec
fwait
cwde
xchg
(bad)
arpl
popa
pusha
lahf
jbe
data16
cmp
movs
les
mov
jne
push
or
adc
pop
(bad)
jns
iret
sbb
sahf
dec
pop
loopne
adc
scas
push
xchg
dec
add
fld
xchg
das
dec
ds
cmps
add
into
test
pop
xor
and
xchg
or
inc
or
cmp
rcl
sub
ins
and
or
cwde
hlt
dec
nop
xor
and
cmp
jmp
nop
inc
scas
xor
outs
nop
xor
push
inc
inc
mov
pop
adc
in
repnz
push
bound
fsubr
mov
cmp
push
pop
sub
loope
jo
push
lahf
adc
imul
cld
add
test
pusha
dec
cli
xchg
add
(bad)
lods
cli
in
fld
clc
push
call
sub
fsubrp
(bad)
test
movs
xor
sbb
loope
pop
cld
mov
cmp
adc
jb
or
cmc
lea
xor
lods
jns
int3
mov
add
test
inc
inc
jle
iret
jae
add
lahf
pop
xor
mov
jg
push
popf
add
hlt
pop
mov
stos
fist
xlat
lock
pop
mov
adc
mov
sbb
cmps
arpl
scas
pop
and
test
add
xchg
mov
xor
fcmovne
(bad)
lods
out
loop
idiv
(bad)
sbb
pop
std
sub
mov
add
scas
xchg
ror
and
jns
mov
nop
adc
jbe
inc
adc
xchg
lahf
dec
mov
aam
out
and
in
xchg
push
enter
mov
movups
fstp
jns
pusha
into
fldenv
arpl
ret
out
push
add
test
(bad)
dec
jmp
or
pop
imul
push
lock
jmp
dec
mov
mov
rcr
jmp
scas
call
rol
fs
mov
je
test
pop
or
mov
cli
inc
fld
xor
dec
xor
push
mov
addr16
(bad)
or
sub
jbe
enter
int
mov
push
nop
out
push
(bad)
sub
cmp
xchg
add
in
add
inc
or
lahf
push
jecxz
cli
push
icebp
pop
outs
je
fld
shr
xchg
mov
shr
pop
mov
push
pop
(bad)
xor
(bad)
xchg
cld
push
gs
enter
sub
mov
aad
xchg
(bad)
jl
adc
cmp
fisttp
(bad)
leave
xlat
inc
jnp
jge
jmp
into
dec
xor
adc
jo
(bad)
jle
ror
dec
lock
ins
inc
cli
cs
mov
cmps
mov
mov
ds
cmp
(bad)
add
add
mov
sub
pusha
cmps
(bad)
call
add
and
xor
add
movs
cld
fdivr
sub
fldenv
test
cmp
mov
mov
enter
push
popf
mov
mov
rcl
mov
inc
or
aaa
xchg
movs
(bad)
out
(bad)
je
inc
xchg
int3
push
rol
mov
jno
scas
push
mov
mov
stc
rcl
icebp
jle
dec
sub
inc
push
pushf
ja
or
mov
(bad)
shl
cmp
mov
neg
adc
cmc
xchg
out
jbe
ins
ins
pusha
and
cmp
inc
dec
add
aam
call
je
push
shl
(bad)
call
std
or
dec
push
rcl
out
mov
push
add
mov
lods
cmp
mov
dec
fist
inc
dec
pop
std
jnp
or
cmps
cmp
push
into
aas
lea
pop
push
push
jne
jne
shl
imul
aas
add
mov
ret
stc
jae
test
in
or
xor
dec
stos
loop
cli
inc
push
out
jae
arpl
movq
cmp
fwait
mov
mov
mov
adc
xchg
icebp
ins
inc
dec
dec
jae
out
fidivr
js
call
cli
dec
sub
jmp
clc
lods
lods
pop
xchg
xlat
dec
bound
fwait
cmp
fbstp
pop
add
mov
xor
call
dec
cmp
sti
or
shl
imul
jge
rcr
cmp
int3
imul
(bad)
jmp
int
push
add
(bad)
fisubr
sub
popf
iret
or
sbb
sti
sbb
fstp
jp
ficomp
add
imul
in
push
shr
mov
(bad)
dec
rcr
cmps
fst
mov
adc
icebp
fsub
test
xor
mov
and
shld
in
je
pop
fild
call
xchg
jb
cmc
mov
mov
cmp
not
and
sar
fidiv
ret
out
push
imul
fmul
fwait
cmp
cmps
jb
hlt
xchg
inc
mov
sbb
cld
mov
js
jmp
sahf
mov
mov
add
gs
fs
pusha
inc
aad
ja
stos
dec
outs
lods
sbb
add
out
arpl
xor
dec
shl
xor
push
imul
hlt
or
inc
and
pop
cs
mov
fwait
jecxz
push
cs
out
dec
jmp
pop
fs
pop
shl
or
repz
pop
(bad)
in
inc
std
cmp
cmp
ficom
rcr
mov
sbb
mov
out
fcom
push
cwd
fstp
iret
mov
into
call
jmp
ss
movs
ja
popf
push
daa
sub
sub
pop
(bad)
test
in
fisubr
push
aaa
xchg
adc
cwde
add
pop
jl
jo
push
lods
adc
jle
and
pop
mov
sub
lods
fwait
dec
inc
cmp
aas
fst
or
pop
mov
push
pop
adc
fs
ret
inc
and
je
fsub
mov
mov
pop
sahf
clc
or
stc
jle
mov
int3
sbb
js
mov
stc
dec
xor
idiv
sub
scas
mov
jmp
ror
dec
clc
test
jge
lds
cmc
out
sbb
mov
push
mov
xor
inc
imul
and
and
retf
aam
dec
mov
or
pusha
mov
xchg
sbb
addr16
out
ret
mov
sar
adc
ss
loopne
lds
je
adc
mov
sbb
adc
mov
and
lods
test
mov
std
mov
sub
sti
adc
pusha
aam
cmp
dec
xchg
pop
enter
jb
jle
pop
nop
fidiv
lds
test
cli
or
xchg
arpl
test
add
js
push
popa
sub
add
dec
xor
and
lahf
push
dec
sbb
xor
and
scas
or
xchg
leave
into
das
jbe
jno
inc
(bad)
aaa
mov
gs
outs
mov
test
mov
pop
imul
inc
add
or
jne
push
inc
cli
dec
dec
xor
das
es
outs
inc
mov
imul
add
retf
xchg
call
std
pop
mov
movs
fldenv
in
jno
ficom
loope
mov
mov
pop
mov
ss
mov
test
pop
push
jecxz
imul
and
lea
xchg
cmps
mov
in
xor
scas
ds
xchg
cmps
cmp
aad
lds
rcr
sbb
fmul
sti
mov
lods
shl
shr
mov
add
outs
xor
mov
xchg
iret
cmp
cmp
enter
scas
xor
in
leave
inc
and
and
cmp
or
add
inc
aas
sbb
pop
or
dec
pop
sub
mov
mov
daa
popf
or
add
xor
fiadd
mov
mov
add
mov
lahf
cli
xchg
or
xlat
mov
sahf
and
sub
push
or
les
pop
mov
retf
mov
lock
adc
or
mov
jl
lods
adc
lahf
inc
(bad)
lock
les
sbb
jns
out
mov
and
push
cmp
aad
popf
enter
test
xchg
xchg
add
xchg
leave
lods
test
test
xchg
inc
inc
cmps
xor
repnz
push
inc
jb
mov
mov
or
or
adc
cdq
ss
rcl
mov
jle
(bad)
xchg
js
push
arpl
rcl
add
xor
je
out
add
outs
adc
xchg
add
call
ja
mov
jns
fst
js
fs
das
(bad)
mov
jo
or
shr
xor
cmp
pop
jne
add
fdivr
(bad)
sbb
jb
mov
cmp
hlt
inc
in
mov
outs
call
sbb
jp
push
movs
sahf
jmp
push
aad
imul
test
xchg
mov
cli
mov
cmp
mov
hlt
xchg
out
sub
adc
aad
pop
jb
shl
mov
or
(bad)
icebp
mov
pop
push
push
sbb
dec
jmp
jb
int3
out
xchg
fldcw
and
adc
pop
sub
mov
mov
movs
pop
ret
popa
sub
jmp
gs
dec
push
ret
call
das
xor
cs
jns
movs
sbb
jb
imul
sub
stos
mov
stos
sub
mov
addr16
and
movs
fwait
push
rcr
ins
popa
or
pushf
outs
fldenv
into
loope
cdq
dec
ret
cmp
jne
push
fwait
and
jge
add
aas
dec
xor
xchg
or
popf
inc
popf
inc
scas
and
add
pop
cmc
cmp
div
iret
les
and
mov
ins
mov
sbb
mov
int3
push
jae
cwde
out
hlt
retf
pop
mov
rol
jns
and
xchg
cmc
jno
test
fidiv
push
dec
sbb
scas
dec
mov
(bad)
sbb
xlat
mov
dec
dec
adc
out
dec
out
cmps
push
mov
xlat
sub
stos
jmp
jp
test
or
and
call
pushf
xlat
xchg
jo
popa
iret
push
ret
dec
or
mov
inc
out
clc
add
mov
in
push
inc
inc
fild
jmp
mov
inc
pop
ret
and
xchg
push
pop
hlt
dec
and
push
adc
into
push
mov
pop
or
stos
aad
cwde
cmc
and
dec
frstpm(287
add
xlat
movs
adc
aaa
aaa
into
mov
jno
mov
rcr
sbb
sbb
dec
sbb
stos
mov
push
cmp
test
imul
test
add
xchg
out
mov
pop
leave
stc
stc
movs
gs
call
ret
jae
fst
add
fmul
sbb
sub
lock
js
sub
clc
repnz
jb
mov
pushf
cmps
fsub
dec
push
popa
popf
inc
add
out
cmp
(bad)
(bad)
fidivr
add
lods
neg
pop
movs
or
(bad)
mov
cli
out
jl
movs
and
pop
ja
xor
(bad)
test
adc
mov
jo
bound
retf
pop
repz
fidivr
sbb
inc
add
popa
and
data16
je
or
fist
(bad)
cli
adc
xchg
(bad)
dec
xchg
outs
xchg
mov
sbb
jp
adc
dec
aad
mov
add
dec
sbb
fs
jnp
mov
add
sbb
cmp
(bad)
jb
je
imul
std
loopne
push
xor
add
scas
mov
aam
adc
push
cmp
dec
push
or
pop
mov
leave
pop
and
call
push
sbb
sahf
sahf
pop
or
inc
pop
jno
test
call
add
or
xor
out
pusha
ror
fnstenv
push
(bad)
sahf
or
mov
mov
xchg
pusha
cmps
(bad)
in
or
inc
movs
or
(bad)
sbb
hlt
and
je
clc
outs
inc
or
dec
enter
sahf
mov
mov
aas
retf
mov
sub
mov
dec
fs
sub
imul
mov
test
mov
clc
mov
dec
inc
stos
cmc
les
popa
jne
sub
js
xchg
sbb
jns
mov
fild
int3
sbb
mov
xor
out
xchg
shr
nop
dec
(bad)
jno
cmp
ffree
mov
(bad)
scas
or
mov
stos
leave
fwait
add
outs
mov
push
gs
cmp
jg
ins
cmp
dec
jg
sahf
in
adc
inc
ret
fiadd
jb
nop
cmp
addr16
sub
add
push
arpl
inc
adc
pushf
dec
mov
adc
ret
add
sbb
ret
cli
into
jno
jp
inc
xchg
and
popa
and
retf
dec
arpl
das
sub
mov
arpl
das
cld
adc
rcr
out
es
jl
mov
sub
jmp
mov
or
ror
into
jecxz
mov
dec
les
cmc
inc
loop
add
out
mov
push
sbb
popa
(bad)
xor
in
or
mov
jbe
leave
adc
pusha
add
pop
int
push
sbb
je
test
adc
mov
int3
and
adc
jbe
jg
jnp
mov
dec
push
or
inc
dec
and
and
mov
pop
stos
sbb
idiv
loop
and
push
(bad)
fmul
ss
xchg
movs
jl
mov
js
cwde
pop
out
dec
test
xor
fs
xchg
dec
mov
enter
pop
add
ror
inc
mov
adc
mov
mov
daa
stc
je
popa
jno
ret
mov
out
call
cmp
daa
ss
add
test
cmp
and
mov
mov
(bad)
push
aas
clc
push
inc
jns
arpl
scas
jae
sbb
fsubp
cmpxchg
(bad)
inc
aad
loopne
int
or
(bad)
into
dec
mov
frstor
or
sbb
mov
pop
mov
pop
fwait
sub
jnp
jp
xchg
push
jmp
push
ins
sahf
repz
pop
adc
push
fdivr
into
jne
(bad)
pop
ret
jb
push
js
mov
(bad)
sar
or
lds
fld
in
pop
hlt
add
mov
int
push
dec
div
sti
push
inc
xchg
mov
xor
pop
inc
add
les
ss
and
sbb
frstor
adc
jp
xchg
cvtps2pd
cld
inc
out
xchg
and
je
adc
or
xchg
push
nop
repz
mov
mov
pop
les
mov
ror
pop
pop
(bad)
jmp
push
xor
in
xchg
mov
(bad)
jle
icebp
les
dec
and
push
ja
shl
out
add
mov
mov
sbb
pop
cmp
jmp
into
inc
mov
mov
jbe
add
mov
sbb
xchg
adc
arpl
mov
outs
call
xchg
pop
div
mov
test
in
push
add
dec
mov
(bad)
mov
loop
xor
pop
jge
fwait
test
and
xchg
iret
mov
int
sbb
imul
jmp
scas
xchg
pop
scas
(bad)
mov
pop
(bad)
fsub
je
test
mov
in
jl
xchg
call
jp
loopne
push
mov
add
jmp
mov
xchg
sar
mov
or
sbb
cmp
pop
mov
inc
dec
div
xchg
icebp
mov
cmp
dec
lods
xlat
loopne
dec
outs
sub
shl
leave
jmp
inc
ins
arpl
mov
jb
js
dec
jp
cli
jle
(bad)
and
mov
pop
jge
mov
push
adc
(bad)
mov
pushf
sub
ds
dec
ficom
sub
mov
into
movs
adc
sbb
cmp
xor
inc
dec
xchg
jno
imul
adc
js
in
mov
addr16
jbe
repz
(bad)
sbb
mov
push
mov
mov
scas
cmps
ss
mov
mov
push
mov
(bad)
sbb
loop
das
jo
loop
push
jg
xor
test
and
int3
in
mov
es
pop
xchg
dec
jp
mov
sub
jns
or
and
jno
inc
xlat
sbb
loope
add
(bad)
xor
mov
mov
or
test
iret
pop
sub
cmps
test
aad
mov
jmp
push
mov
push
xchg
cmps
aas
ficomp
xchg
pushf
push
add
jo
add
sbb
cli
ror
xchg
pop
fild
jl
xchg
cmp
xor
mov
shl
ret
cmp
xor
int3
js
leave
lahf
neg
jp
imul
pop
or
jmp
inc
(bad)
sbb
xor
add
push
xor
sbb
stos
outs
iret
mov
mov
imul
inc
retf
mul
jbe
mov
cmp
cs
or
adc
dec
pop
push
cwde
imul
mov
popa
push
and
mov
cmps
push
lahf
(bad)
adc
push
sbb
ret
mov
mov
pop
cmp
mov
inc
or
sbb
movs
das
jg
or
call
xchg
jbe
jmp
dec
or
sub
xchg
mov
add
ror
test
aaa
pop
dec
int3
cmp
inc
rol
scas
mov
or
out
and
dec
je
std
test
sti
or
push
pop
mov
sbb
icebp
jne
adc
sbb
mov
push
dec
cdq
or
inc
add
leave
adc
jp
cmp
push
(bad)
movs
fyl2xp1
leave
fidivr
push
lea
cwde
dec
retf
adc
cmp
cmp
push
or
and
repnz
out
push
(bad)
stc
mov
push
leave
mov
movs
sbb
and
or
dec
or
push
gs
cmp
cmps
jmp
mov
xlat
imul
in
popf
psrlq
ret
sbb
lds
fst
ficomp
and
push
sub
leave
xchg
stc
push
mov
push
xor
inc
pusha
jmp
dec
jg
dec
call
xchg
rol
fcmovnu
dec
jbe
test
jns
loope
push
adc
jl
test
adc
outs
retf
dec
dec
jne
mov
retf
ds
inc
lea
add
dec
rcr
addr16
jo
lea
lds
jecxz
xlat
mov
mov
inc
shr
popf
jmp
jbe
sub
mov
rol
mov
test
inc
push
rcl
mov
mov
cmc
sti
cmp
dec
lock
jmp
ss
and
push
cmp
call
pop
mov
jns
cmp
and
(bad)
retf
ja
ja
hlt
mov
bound
jmp
(bad)
cld
push
stos
xchg
dec
xor
cmp
cmp
mov
ror
fmulp
inc
adc
or
test
xchg
and
push
mov
mov
and
xor
sbb
test
shl
clc
test
xchg
or
mov
dec
mov
adc
cmp
pop
jge
test
test
retf
retf
adc
push
jo
call
sbb
adc
jmp
xor
or
sbb
fs
push
ja
mov
pop
pusha
(bad)
fldz
imul
call
xchg
jmp
adc
in
xor
ins
jo
push
in
jle
ss
repnz
imul
inc
xchg
ja
adc
sub
outs
aam
lods
sub
cld
movs
mov
stc
mov
das
cmps
ds
lahf
adc
movs
add
pop
sub
push
mov
aaa
in
ins
mov
cs
or
pop
mov
retf
jbe
ins
ins
push
stos
stos
push
push
push
imul
adc
imul
(bad)
daa
(bad)
lods
inc
cmp
and
adc
test
lahf
lock
xor
sub
lahf
cdq
inc
xchg
iret
lea
pop
pop
int3
bound
jne
imul
int3
add
jl
and
adc
gs
push
dec
sbb
mov
dec
cdq
adc
xchg
dec
mov
pop
lods
stc
cmps
fsubr
xchg
sub
jmp
lods
mov
repz
pop
sbb
inc
push
imul
fidivr
sbb
in
mov
xor
mov
cdq
inc
xchg
(bad)
push
and
and
or
movs
mov
jmp
fisubr
pop
mov
bound
lds
push
push
and
jp
daa
push
ffree
push
call
mov
xchg
stos
repnz
jae
xlat
jb
shr
cdq
int
clc
ss
cmp
xor
mov
or
sub
push
aas
retf
je
(bad)
adc
bound
xchg
je
jp
sahf
cdq
and
jno
mov
pop
fisubr
push
mov
test
push
push
fstp
fist
(bad)
or
sahf
es
push
shl
cmp
into
xor
xlat
xchg
dec
push
push
pop
cmp
jns
daa
inc
movs
push
das
stos
cli
pusha
pop
lods
mov
xchg
mov
jmp
loope
inc
repz
mov
fs
pop
retf
cmps
or
cmp
dec
sti
xchg
cdq
xchg
and
out
cmc
call
mov
pop
cmp
out
(bad)
daa
pop
and
pop
mov
aaa
gs
push
mov
jle
sub
xchg
in
inc
jge
jnp
xchg
movs
jb
outs
stc
and
or
loope
arpl
rcr
dec
lea
xor
mov
mov
pop
loopne
jle
(bad)
push
in
call
jmp
cmps
mov
push
push
jge
ret
pop
and
pop
popa
cmovge
test
adc
sbb
push
aas
pop
and
rcr
fistp
inc
daa
and
pop
and
dec
xchg
iret
or
adc
mov
jg
jae
ds
mov
mov
es
shr
mov
and
push
ss
xchg
enter
mov
test
cmps
sti
into
inc
or
mov
adc
cvtdq2ps
scas
pop
out
or
xchg
(bad)
test
ins
sub
pop
cmp
mov
push
lods
and
hlt
or
or
mov
sar
sti
add
inc
imul
repnz
mov
add
(bad)
cmc
test
ja
push
xchg
test
adc
push
cwde
retf
daa
xor
jecxz
jmp
nop
test
cmps
lahf
xchg
xor
mov
adc
aad
arpl
jbe
dec
jp
loopne
sbb
xchg
cmp
jns
jnp
pushf
jg
inc
sub
dec
push
sub
fld
popa
scas
jne
push
rol
mov
int3
cli
lea
aam
(bad)
jns
jno
xor
imul
jecxz
mov
shl
pop
pushf
sti
mov
mov
mov
movs
mov
jno
aas
and
adc
fimul
adc
adc
mov
movs
pop
ds
test
enter
inc
add
or
mov
mov
ds
xchg
pop
inc
dec
stos
mov
out
push
aad
mov
xor
sub
into
int
mov
out
and
xchg
mov
inc
stos
jle
adc
fst
fsub
dec
mov
push
pusha
push
xchg
pop
loope
nop
test
mov
movs
mov
push
mov
xchg
jb
scas
jmp
shr
mov
sub
retf
inc
xor
jmp
sub
and
jno
gs
push
mov
ror
out
xor
jl
mov
les
fdiv
xchg
icebp
test
adc
or
pushf
fbstp
jmp
xor
cmp
or
loope
mov
inc
jle
adc
cmovo
test
clc
xor
out
out
xlat
sub
out
outs
push
out
pop
add
call
pop
push
test
fstp
das
cwde
loop
hlt
xor
jmp
(bad)
sub
in
arpl
push
jo
or
ss
xchg
inc
and
and
jmp
arpl
dec
ficomp
int
adc
add
or
sar
mov
mov
pop
mov
push
fprem
xchg
xor
cdq
dec
in
into
inc
xchg
cmp
mov
jp
adc
icebp
xor
sbb
lods
cmc
or
inc
inc
dec
test
or
sub
xchg
add
xchg
lock
dec
(bad)
sub
in
mov
mov
cli
and
sbb
(bad)
or
call
hlt
sbb
mov
jge
test
and
movs
sbb
pmaddwd
shl
dec
aad
adc
repnz
xor
(bad)
dec
out
xchg
int3
sub
enter
pop
(bad)
xor
dec
mov
out
xor
fidiv
inc
jno
cdq
push
dec
daa
mov
outs
jns
push
jae
inc
mov
adc
mov
ins
jo
hlt
jle
cli
xor
jbe
in
ret
mov
mov
sub
scas
fcomp
xchg
aaa
test
icebp
rol
pushf
push
push
sub
add
sub
aad
adc
xchg
dec
addr16
test
(bad)
push
adc
mov
pxor
inc
ret
(bad)
ins
ds
mov
dec
outs
and
mov
inc
dec
bound
mul
cmc
shl
jne
outs
aam
inc
xor
jae
add
inc
out
repnz
jae
xchg
inc
leave
jmp
xlat
jbe
add
adc
mov
stos
mov
jb
pop
daa
jecxz
jb
sub
pop
and
fwait
dec
and
push
or
dec
dec
pop
xchg
mov
test
mov
sub
fcomp
mov
mov
mov
cmp
(bad)
addr16
iret
push
out
jmp
jle
pop
add
ret
cmp
call
push
pop
in
pushf
pusha
retf
mov
xchg
add
xchg
repnz
fs
mov
adc
jecxz
sub
cs
or
xchg
test
lahf
(bad)
sub
es
lea
dec
xor
jecxz
(bad)
adc
pop
ja
fnstsw
mov
mov
sub
hlt
xor
outs
sbb
sti
inc
(bad)
(bad)
add
adc
inc
paddw
adc
ret
xor
stc
lock
xchg
mov
popa
push
add
xor
fndisi(8087
hlt
xchg
iret
xor
dec
sub
mov
jmp
js
(bad)
scas
xor
je
call
add
leave
xchg
adc
inc
mov
sub
cld
je
mov
lahf
mov
test
pushf
dec
sbb
rcr
xor
test
in
mov
call
and
pop
imul
push
fisubr
aam
repz
inc
(bad)
fistp
xor
add
add
addr16
lds
ror
ret
xchg
repz
dec
(bad)
pop
mov
push
movs
cmp
imul
mov
xchg
push
movs
retf
int3
sub
or
xchg
cld
pop
sub
xor
outs
in
jge
fbstp
retf
fisub
mov
push
push
mov
out
nop
sub
imul
xchg
cmp
call
inc
into
adc
stos
mov
add
test
lds
gs
cmp
add
sub
and
cmp
lds
jmp
es
ror
jmp
push
xchg
pop
or
xchg
xor
pushf
fs
push
sbb
cmp
mov
int3
test
xchg
shl
xor
cmps
sbb
push
xor
dec
inc
jbe
pop
(bad)
mov
mov
xchg
pusha
pop
mov
loopne
fild
sub
in
mov
(bad)
jecxz
jp
mov
arpl
popa
retf
pop
sub
iret
cld
loope
rol
mov
int3
cmp
sbb
mov
sbb
lods
call
dec
sub
call
lods
pop
mov
add
dec
(bad)
daa
ja
aad
mov
pop
pushf
out
pop
aaa
hlt
push
ins
dec
lods
sbb
add
out
frstor
push
and
clc
cmp
xor
jge
and
dec
push
and
ret
mov
jmp
dec
jo
cmps
(bad)
imul
mov
mov
mov
and
sub
pop
jo
inc
jnp
dec
pop
push
sub
cmc
mov
push
lods
push
dec
sahf
hlt
xor
dec
jmp
cmp
cmps
shl
cmc
lods
mov
mov
or
sub
pop
das
or
xlat
ss
sar
mov
fs
cmp
lock
cli
sub
mov
push
adc
pop
repnz
jge
out
push
xchg
out
push
imul
(bad)
das
jecxz
in
dec
inc
jl
(bad)
dec
push
shr
add
mov
mov
cmps
adc
sbb
mov
push
aas
xchg
(bad)
mov
imul
sbb
stos
mov
push
xor
out
sar
out
push
jp
cmp
and
jne
call
jecxz
popf
xor
add
outs
scas
data16
clc
sbb
retf
fstp
sub
xchg
push
lahf
xchg
mov
xor
lea
neg
movs
sub
inc
cmp
gs
sbb
jb
xchg
dec
outs
pushf
jmp
jecxz
ds
mov
out
popf
and
push
cmp
mov
mov
inc
inc
mov
sub
cwde
mov
imul
jbe
fwait
dec
ins
jg
out
std
imul
jne
xchg
retf
(bad)
scas
sub
iret
out
ins
xor
jmp
adc
sbb
sbb
push
test
iret
adc
dec
in
loopne
push
jne
sbb
or
mov
adc
jg
sub
ja
hlt
bound
loopne
movs
stos
(bad)
ror
xchg
or
inc
cmp
leave
aaa
dec
(bad)
gs
push
mov
in
icebp
ja
mov
ficomp
ret
jmp
retf
stos
sbb
pop
and
jmp
call
cmp
mov
int3
retf
push
push
push
cmp
movs
xor
or
inc
push
sub
sar
mov
sub
dec
or
pop
mov
clc
mov
sub
dec
stc
mov
repz
loopne
mov
dec
sbb
and
lods
in
fidiv
mov
sti
jecxz
cmps
add
loope
inc
stos
je
mov
sub
dec
ds
pop
inc
es
lods
or
jb
jns
cmp
jmp
sub
push
mov
jns
mov
adc
mov
out
add
mov
pop
mov
or
adc
and
stos
lds
cmp
std
dec
mov
mov
das
pop
lahf
das
lds
mov
jnp
fwait
jge
iret
cmp
pop
fld
sbb
mov
fs
pop
call
les
inc
jp
push
push
test
xchg
fcmovbe
pop
scas
sub
pop
or
sbb
sub
fs
fcomp
int
into
cli
lds
in
aad
cmp
mov
jae
ret
bound
movs
ret
aas
data16
mov
cld
inc
cdq
pop
xor
ja
or
ficom
jge
or
(bad)
pop
jle
ins
sbb
ret
(bad)
pop
adc
fwait
and
xchg
pop
cmp
mov
call
add
scas
jb
pushf
push
sbb
rcr
sub
dec
pop
stos
xor
in
sbb
mov
add
sbb
lods
push
or
lds
mov
adc
sub
push
into
popa
push
mov
dec
outs
(bad)
cmp
dec
dec
rol
add
add
jmp
sbb
pop
loopne
mov
cmp
cld
xor
jp
dec
rcr
mov
pop
jo
inc
mov
cmp
lahf
mov
mov
dec
sar
pop
cmps
mov
push
ins
jns
inc
xchg
mov
mov
fdivr
pushf
loope
push
repnz
fisttp
leave
mov
bound
addr16
int
hlt
jne
add
cmp
hlt
fisttp
mov
push
retf
add
sbb
pop
out
arpl
pop
repz
fimul
cmc
je
mov
data16
pushw
test
xchg
test
cmp
jbe
pop
sahf
cmp
popa
jmp
fisttp
push
fisub
add
loope
and
inc
push
jge
and
pop
inc
pop
bound
push
(bad)
bound
or
inc
inc
(bad)
jge
shl
xor
popf
shl
sar
jns
vsubps
movs
arpl
cmps
mov
inc
xchg
pop
aam
cdq
pop
pop
inc
sbb
loop
xor
mov
(bad)
shl
push
dec
(bad)
jns
lahf
fwait
mov
sub
retf
sub
xor
xor
loopne
jp
fild
xor
mov
mov
je
(bad)
into
movs
call
xchg
pop
push
push
adc
hlt
push
je
outs
jge
lods
mov
in
inc
movs
fdivr
mov
and
sbb
sub
fwait
popf
xchg
push
sar
cmc
test
push
in
scas
mov
and
repz
adc
arpl
add
repz
and
cmp
sub
stos
(bad)
sbb
xor
mov
dec
bound
shr
mov
and
inc
adc
loop
add
shr
and
scas
(bad)
rcr
clc
popa
mov
xor
or
sbb
sub
adc
ds
mov
mov
pop
jb
test
push
pop
cdq
add
ret
mov
adc
in
mov
jecxz
int3
jno
pop
and
jae
push
(bad)
jo
jb
ret
add
xchg
cmc
xchg
(bad)
hlt
pop
xchg
enter
dec
hlt
cmp
cli
push
sahf
push
test
push
inc
and
js
scas
(bad)
in
cli
cmp
jno
inc
sti
fcmovnbe
xor
mov
mov
and
movs
popf
mov
mov
jae
jne
call
in
dec
dec
push
(bad)
lds
inc
and
cmp
rol
das
push
xor
inc
or
inc
push
xor
mov
mov
sbb
mov
scas
lods
dec
pop
aam
adc
add
pop
jecxz
je
pop
xor
sbb
sub
sub
xlat
leave
ss
xchg
loopne
mov
into
sti
dec
jl
into
call
push
or
xchg
ins
cmp
or
sub
scas
inc
jecxz
mov
cld
mov
out
(bad)
ins
mov
sub
dec
mov
push
add
or
out
pop
push
adc
fisub
loop
(bad)
cmp
push
das
sbb
mov
adc
xor
movs
aam
rol
mov
out
pusha
sbb
js
pop
or
arpl
jnp
out
loope
sbb
aam
and
inc
aad
jecxz
test
lahf
leave
retf
ret
mov
pop
pop
mov
ins
in
sbb
mov
push
pop
pop
mov
call
je
cmc
(bad)
cmp
ja
xchg
add
sbb
mov
inc
xor
pop
mov
or
nop
not
cmps
sahf
pop
ret
dec
sbb
les
add
out
cli
rcr
and
fwait
inc
xchg
push
or
push
inc
pop
ss
movs
pop
fnstsw
imul
jl
cwde
(bad)
jl
ror
pop
retf
add
pusha
dec
sbb
cmp
call
js
dec
mov
ds
inc
xor
ss
xchg
push
outs
mov
pop
jo
imul
push
leave
movs
xchg
push
mov
jge
pusha
mov
adc
mov
push
xor
add
mov
add
repnz
aad
lods
repz
pop
mov
pop
iret
push
scas
lds
(bad)
int3
mov
clc
mov
sbb
pop
lahf
out
inc
mov
pop
cmps
mov
cmp
sub
mov
and
cmps
jno
pop
or
test
sbb
(bad)
add
(bad)
dec
cmp
push
or
xchg
xchg
addr16
stos
stc
mov
arpl
sub
imul
dec
lea
rcr
push
mov
mov
inc
loopne
cmc
out
mov
rcl
lahf
sub
mov
xchg
mov
push
mov
pop
out
push
inc
add
ds
js
jecxz
fadd
pushf
fdivr
dec
push
or
mov
shl
aas
lahf
push
jmp
out
dec
icebp
mov
lahf
sbb
jge
jg
sbb
mov
xchg
dec
pop
leave
ud0
scas
inc
rcr
sub
cmp
xchg
arpl
mov
out
ins
cmp
outs
rcr
or
mov
outs
iret
enter
push
xchg
test
dec
pop
pop
push
pop
fidivr
add
pop
shl
dec
push
sti
out
ds
lods
mov
sub
sahf
je
leave
out
jns
ins
push
xor
aas
mov
imul
dec
jmp
mov
shl
cwde
pop
adc
add
pop
dec
add
push
add
pop
mov
mov
pusha
xlat
mov
xor
test
pop
jecxz
mov
mov
mov
repz
lock
fwait
lea
mov
sar
retf
pop
outs
sbb
sbb
mov
pop
xchg
cwde
daa
arpl
addr16
and
daa
and
mov
pop
mov
mov
cs
aas
inc
adc
ins
clc
adc
iret
repz
jbe
outs
and
hlt
ret
sar
fisttp
call
dec
push
dec
ins
sub
out
fstp
fld
retf
dec
sahf
shl
cmp
add
fwait
inc
jb
sbb
aad
pop
dec
jg
mov
and
adc
aam
test
jb
into
inc
movs
and
xor
push
adc
out
mov
in
popa
repnz
mov
sub
movs
les
xor
nop
pop
and
jnp
and
sub
sbb
aad
sbb
and
dec
jno
jb
or
loop
jmp
stos
inc
rcl
int
cmp
fchs
test
add
les
rol
adc
in
cwde
daa
sbb
lahf
inc
ins
fs
push
and
dec
jg
sub
outs
sbb
sar
sub
pop
pop
das
fucomip
aam
not
push
sahf
add
inc
fld
shl
ret
cmc
mov
sbb
jle
sub
pop
jp
mov
push
xor
ficom
or
pop
icebp
fdivr
ins
sub
xchg
mov
std
or
or
fnsave
movs
lds
jae
rol
push
or
and
adc
nop
ss
xchg
jmp
cwde
call
sub
stos
and
jo
enter
cmp
mov
sub
mov
and
push
or
and
bound
test
mov
test
adc
fldcw
call
in
imul
adc
frstor
mov
add
push
les
pop
into
imul
les
jb
fdiv
push
and
mov
fisub
test
cli
outs
mov
cmps
mov
jmp
sysenter
xchg
xchg
xchg
or
and
retf
sub
xor
sub
adc
ret
jmp
xchg
mov
or
cmps
adc
fwait
ss
jg
xchg
add
addr16
mov
ficom
mov
mov
xlat
or
test
fs
or
dec
and
ja
pop
and
test
arpl
mov
call
dec
pop
das
add
out
cmp
adc
jp
mov
and
rol
cmc
and
pop
stos
nop
and
mov
and
fist
xchg
mov
outs
sar
mov
cmp
repz
cmp
mov
enter
outs
(bad)
push
les
pop
adc
shr
fwait
mov
ret
(bad)
push
mov
repz
sub
or
cmc
push
hlt
pop
push
sar
std
dec
test
mov
mov
cdq
movs
jbe
cmps
adc
inc
das
jg
outs
sub
sbb
xor
in
rol
fisttp
ins
mov
pop
inc
dec
push
push
cmp
pop
jb
je
or
es
xor
(bad)
scas
add
repnz
aas
add
cli
inc
mov
add
jbe
test
iret
pop
jmp
enter
pusha
add
or
iret
shr
and
sbb
sar
mov
js
jno
jg
dec
adc
addr16
push
sub
mov
sub
in
out
(bad)
mov
xor
and
or
cs
dec
gs
sar
or
xchg
cdq
push
jne
arpl
jge
loopne
adc
push
imul
jp
es
pop
and
fwait
popf
pop
paddw
mov
push
or
cmps
push
jb
repz
sub
nop
shr
dec
mov
pop
cmp
cmp
aam
xor
cmp
jl
xor
daa
xlat
ins
push
rcl
mov
(bad)
cmc
imul
mov
jecxz
fist
mov
jle
out
into
imul
call
jp
add
dec
jge
cmp
mov
movs
out
fild
outs
stos
int
xchg
mov
ins
daa
add
std
xchg
inc
sub
lods
sbb
ja
sbb
mov
scas
shl
in
ins
pop
nop
ds
inc
or
xor
lods
fld
xchg
jae
outs
out
mov
pop
test
add
sahf
and
enter
les
(bad)
(bad)
xor
(bad)
(bad)
imul
stos
aad
inc
xchg
mov
ins
clc
cli
(bad)
xor
outs
and
dec
adc
repnz
gs
xchg
fbstp
xor
mov
pop
gs
aam
nop
jmp
aas
and
inc
xor
imul
jle
bound
pop
shr
jb
xchg
xor
mov
inc
fwait
daa
and
push
pop
jb
fcmovnbe
pusha
iret
lods
sub
sbb
xchg
stos
adc
pusha
mov
jnp
test
sbb
pop
(bad)
shl
inc
ins
pop
leave
xchg
mov
movs
shr
push
sbb
lds
mov
cwde
xor
shr
xor
cmps
retf
jae
sub
or
ret
int3
fnstcw
out
clc
pop
lock
mov
and
scas
and
les
out
mov
pop
rcr
push
and
or
and
add
push
add
rcl
jle
xor
fs
pop
push
xlat
test
adc
test
mov
test
ss
idiv
and
sbb
jo
iret
sub
scas
mov
sbb
mov
pop
xor
aas
inc
add
mov
nop
cmp
daa
add
(bad)
sbb
push
xchg
daa
aad
fsub
daa
movs
mov
cmps
dec
xor
aad
or
dec
push
push
cmc
cmp
into
xor
and
arpl
adc
xchg
mov
loope
inc
out
adc
inc
in
fld
inc
popa
test
mov
ins
jmp
ins
push
pushf
jmp
sbb
mov
sbb
push
addr16
mov
ficom
sub
push
aaa
push
fstp
adc
mov
cmp
adc
leave
lods
movs
pmaxsw
and
stos
pop
push
out
and
inc
adc
add
sbb
or
ror
ss
jl
cli
jnp
xlat
rcl
out
pop
stos
xchg
scas
icebp
jl
stos
jbe
inc
and
rcr
jnp
(bad)
or
mov
jle
dec
dec
popa
jne
cmp
js
xchg
pop
lods
adc
xor
mov
jbe
std
add
jle
or
popa
push
inc
inc
push
mov
mov
test
sub
add
test
cmp
int
lea
aad
jl
stc
out
das
imul
mov
sbb
cli
push
jns
or
pushf
(bad)
arpl
xchg
mov
mov
test
test
ins
jmp
sbb
push
loope
sub
sti
jnp
xchg
popf
push
xor
or
test
icebp
pop
add
cmp
push
enter
movs
mov
mov
aaa
or
dec
push
cmp
fwait
div
not
rcr
test
clc
jne
mov
mov
mov
pop
pmaxub
push
rcl
push
repz
(bad)
fcomp
imul
popa
mov
ret
lods
test
cmp
icebp
pop
xor
mov
ss
test
cmp
push
jp
in
gs
ret
or
cmps
fld
iret
std
mov
out
sbb
cmp
mov
add
aad
test
mov
push
movs
sbb
jmp
xor
icebp
push
fwait
mov
mov
aad
dec
pop
mov
and
mul
push
(bad)
stc
js
sub
gs
loope
xchg
cmps
int3
jge
mov
pop
mov
xchg
into
pop
or
leave
jb
xchg
push
cmp
adc
shl
inc
push
sub
push
or
icebp
fs
xchg
lahf
mov
jb
in
add
cli
into
movs
cmp
cs
cmps
cdq
hlt
fnstcw
clc
or
shr
cli
retf
pop
movs
dec
aad
jae
push
dec
add
fbstp
push
xchg
jmp
es
rol
adc
lahf
pop
push
dec
and
or
lock
pop
(bad)
jmp
or
mov
div
jge
adc
or
mov
dec
jle
mov
or
sti
fdiv
sbb
xor
add
call
mov
dec
jge
pop
mov
jbe
cli
mov
mov
mov
dec
mov
scas
add
mov
lahf
inc
mov
dec
jle
xchg
test
nop
sbb
ret
cmps
(bad)
out
lods
mov
pop
dec
jbe
fistp
mov
sbb
iret
adc
out
test
cwde
adc
repnz
fmul
dec
xchg
shl
cmp
jnp
pushf
mov
test
cdq
xchg
call
add
inc
mov
mov
nop
mov
movs
jne
cmp
ds
jmp
sub
mov
aam
or
loopne
imul
mov
fcomp
add
jns
mov
enter
lods
icebp
adc
cmp
pop
add
lds
sub
dec
out
xor
cmps
pop
or
out
cmps
push
mov
fs
mov
mov
xor
daa
loope
mov
not
test
test
add
jl
dec
dec
mov
jae
mov
imul
inc
jle
or
jb
ds
and
(bad)
mov
dec
mov
inc
scas
pop
in
pop
push
jp
add
call
sub
dec
xchg
and
mov
pop
loopne
push
inc
js
mov
ror
scas
lock
das
lock
inc
mov
push
js
data16
retf
mov
push
retf
push
fist
mov
gs
and
(bad)
clc
into
push
test
lods
sahf
cmp
xor
ficom
jmp
int3
in
mov
cmps
lods
jbe
fdivr
and
xchg
inc
jmp
adc
jb
pop
xchg
mov
sbb
dec
pop
call
mov
mov
cmovb
adc
mov
ret
push
repnz
aas
out
aam
daa
fsub
aam
ja
div
enter
les
push
cld
fisttp
lods
xchg
mov
jg
push
fistp
retf
adc
sbb
lock
daa
in
test
adc
in
xor
sub
cld
pop
mov
in
sub
inc
mov
xor
mov
ret
lahf
sahf
xchg
(bad)
and
sbb
data16
rol
mov
clc
ret
xchg
push
cmp
popf
mov
mov
les
jge
lahf
push
pop
mov
push
lahf
inc
cmp
sub
push
mov
stc
movs
setne
imul
jb
sahf
jmp
fucom
out
dec
and
adc
adc
imul
sbb
adc
rol
adc
inc
inc
call
adc
int3
retf
loope
xchg
sub
jns
test
leave
lock
push
aas
cmp
aaa
inc
(bad)
rcr
xor
or
cmp
inc
jnp
or
call
sahf
js
cmc
mov
sbb
xchg
mov
xchg
jne
dec
cmp
loope
pop
inc
out
and
in
lahf
mov
mov
add
push
lock
sub
lahf
inc
ss
jo
cld
cmp
push
cmc
nop
pop
mov
dec
call
shl
sub
out
dec
mov
dec
cli
stos
or
addr16
push
int3
pop
scas
push
out
jns
arpl
(bad)
test
sahf
jnp
movs
adc
lods
jle
out
sub
pop
das
in
fcmovnbe
fld
aaa
test
ds
lock
or
mov
push
jo
imul
jmp
loope
inc
dec
scas
jns
test
imul
mov
scas
push
daa
inc
cmps
lods
or
out
push
cmp
cwde
popf
movs
(bad)
out
jo
punpcklwd
call
in
jbe
jnp
lahf
mov
popa
cmp
gs
shl
(bad)
cmp
fild
sbb
aas
mov
loopne
sbb
shl
popf
in
mov
fmulp
inc
addr16
test
call
jb
aas
push
aaa
sub
mov
sbb
imul
out
xchg
mov
cmp
xchg
push
lahf
push
or
mov
imul
add
dec
in
push
out
add
aaa
mov
sub
dec
push
pop
popf
push
sbb
mov
idiv
or
sub
lods
sub
test
mov
adc
shl
push
jle
mov
in
and
les
out
cmp
pusha
sti
ins
outs
rcl
jmp
outs
ret
cdq
(bad)
ret
or
xchg
outs
fdiv
js
xchg
adc
adc
(bad)
bound
es
enter
cmp
mov
xchg
outs
in
fdivr
lods
ror
data16
jmp
inc
xchg
and
fldl2t
cmps
repz
xor
xchg
rol
inc
(bad)
push
push
ret
lds
xchg
fsubr
or
cli
sub
inc
jae
lahf
out
sub
adc
jo
or
cmp
or
test
retf
arpl
pop
jg
cmp
pop
push
cli
cmp
mov
stos
jmp
adc
sub
arpl
xchg
inc
out
sbb
sub
dec
shl
mov
aaa
in
xchg
clc
dec
fnstsw
push
sbb
cmp
shl
pop
jno
or
xor
fs
cmp
inc
dec
fs
pop
fidivr
adc
mov
loopne
ss
enter
mov
sahf
stos
aas
cdq
and
mov
dec
sub
dec
or
jno
call
(bad)
nop
js
mov
(bad)
out
jp
and
adc
mov
jl
shr
jne
repz
mov
xor
add
jg
xor
sti
mov
icebp
and
lea
jle
ret
xlat
repz
lods
add
inc
fistp
sbb
mov
cmp
sub
ret
aaa
cmps
jo
cmps
xor
cli
and
mov
and
inc
inc
dec
pushf
pop
cmc
sub
lahf
fild
cs
jne
cli
dec
pushf
cmps
stc
xchg
dec
push
mov
add
retf
repnz
fwait
lea
repnz
mov
jb
shl
mov
movs
out
sti
dec
scas
setns
add
cs
sub
adc
fwait
sbb
push
lea
leave
sub
push
test
mov
dec
xchg
adc
xor
adc
jbe
ficomp
mov
xchg
dec
jbe
sub
jp
jmp
cmp
in
add
push
fadd
(bad)
or
and
sbb
jge
sbb
test
enter
shl
xchg
xlat
add
jge
xor
add
retf
pop
out
mov
add
and
dec
mov
xchg
cli
jecxz
je
mov
pop
pop
movs
xor
aad
sub
pop
push
dec
cmps
adc
(bad)
fxtract
mov
xchg
xchg
sti
push
sub
jg
std
lods
movs
neg
cmp
rcl
dec
mov
mov
xchg
(bad)
jle
xlat
pop
scas
adc
mov
cmp
xchg
jno
mov
cmp
pop
retf
nop
shl
push
sbb
test
cld
pop
cdq
adc
xor
jle
int
pop
add
sub
mov
fs
shr
int3
jnp
mov
call
fmul
ja
adc
ds
jge
sub
jae
lods
push
iret
sub
mov
add
ds
jno
in
imul
pop
sahf
sub
mov
pushf
jae
jmp
movs
pop
pop
loope
push
mov
jo
xor
das
in
add
push
mov
cmp
add
in
mov
cmp
push
sbb
loop
retf
outs
jbe
pop
hlt
dec
fnstcw
shr
push
and
in
add
mov
iret
mov
sbb
js
lahf
sub
cli
pop
aad
loopne
xchg
and
dec
mov
sub
dec
mov
je
cmp
push
out
pusha
aam
sbb
or
fld
cmp
adc
push
jmp
mov
xchg
imul
and
loop
mov
jbe
pop
ja
in
xor
mov
je
mov
jo
push
pop
pop
stos
jb
and
out
sahf
sahf
inc
push
lods
inc
xor
add
inc
or
bound
inc
cmc
jo
jmpw
xor
rcl
inc
or
repnz
or
ret
and
sar
nop
adc
(bad)
(bad)
cmc
dec
stos
pop
and
mov
mov
xor
sub
out
(bad)
jns
ficom
addr16
cdq
cmps
xchg
jge
gs
lds
jbe
in
add
into
mov
hlt
mov
add
imul
sbb
lds
test
daa
jnp
push
or
xchg
movs
fwait
add
stc
cmps
clc
adc
and
push
(bad)
adc
inc
jo
pop
sbb
loopne
mov
pop
lea
inc
aam
fidiv
lahf
outs
stc
mov
test
test
repz
jecxz
xchg
and
or
fs
cs
jle
not
and
push
inc
stc
ja
test
mov
dec
popa
cmp
jle
jmp
cmp
out
pop
ficomp
cmps
dec
sbb
popa
cmps
xchg
mov
cmp
clc
repnz
js
sub
xchg
ret
out
add
(bad)
shl
scas
and
adc
popf
leave
xor
xchg
adc
mov
mov
lods
pop
out
push
adc
icebp
das
cs
loop
int3
lds
sub
and
jmp
and
mov
xor
or
fs
idiv
push
mov
movs
push
mov
mov
adc
retf
lock
(bad)
std
pop
in
mov
loopne
js
push
retf
and
leave
mov
sbb
mov
jbe
(bad)
mov
pop
and
jne
icebp
js
inc
test
aam
idiv
shl
sbb
fcom
in
aam
mov
loope
jmp
int3
jmp
push
loopne
mov
cmps
sbb
lock
jo
fistp
movs
sub
aaa
sbb
mov
xchg
xchg
(bad)
ret
push
bound
imul
or
ret
mov
(bad)
jp
jmp
lods
out
(bad)
sbb
mov
or
add
mov
or
jmp
or
xchg
test
popa
clc
repz
arpl
jae
push
push
call
push
xor
xchg
std
fidiv
cmp
mov
retf
lods
nop
cmp
or
rcr
out
adc
outs
and
aas
mov
adc
and
cmp
mov
or
sub
call
aad
jmp
gs
int
shl
test
and
popf
data16
leave
ror
and
cwde
add
mov
xor
sub
pop
inc
mov
mov
jecxz
int3
pop
adc
dec
inc
pushf
daa
or
dec
add
mov
xchg
lock
pop
cmp
aaa
and
add
scas
xchg
or
mov
inc
lahf
mov
rcl
jmp
pop
shl
(bad)
sar
jb
(bad)
rcl
ret
fwait
jbe
repz
test
jne
sbb
outs
xor
add
jb
xlat
(bad)
shl
xor
nop
and
repnz
movs
addr16
pop
shr
movs
lods
and
mov
jmp
and
test
mov
sar
inc
sbb
xchg
movs
retf
ins
mov
push
fdivr
xchg
jmp
test
cmp
push
dec
jge
ret
and
pop
cmps
mov
int
push
(bad)
stc
test
cmp
lds
inc
dec
test
fwait
inc
inc
add
into
add
cmps
mov
pop
retf
add
lods
jno
into
inc
adc
xchg
shr
sub
mov
stos
data16
imul
jp
sub
jb
jl
xchg
sub
rol
xchg
test
push
jno
pop
pop
pop
call
retf
popa
out
repnz
cwde
or
mov
pop
movs
outs
fild
adc
jnp
in
and
aaa
scas
imul
jl
retf
sub
rcl
push
popa
inc
mov
mov
loopne
(bad)
push
mov
jb
fs
lock
inc
cmp
ret
loope
push
loope
adc
and
sbb
and
jmp
shr
lock
in
jbe
scas
push
fstp
or
and
and
loope
mov
test
jge
sti
xor
sbb
dec
pop
in
nop
inc
call
out
push
dec
stc
add
adc
movs
add
sbb
fbstp
pop
data16
xchg
movs
les
adc
mov
mov
lods
imul
cmp
loop
push
sub
pop
mov
inc
movs
cmp
push
mov
and
mov
in
imul
aaa
mov
mov
(bad)
in
adc
adc
scas
shl
inc
push
int3
inc
fnstsw
call
adc
lahf
xor
cwde
mov
lahf
inc
jns
push
xor
out
stos
(bad)
mul
or
retf
sub
and
sbb
mov
dec
mov
mov
and
fwait
xlat
pusha
fwait
add
pop
outs
aas
xchg
dec
test
xchg
nop
push
out
fidivr
(bad)
dec
jae
cmp
or
pop
ror
jns
push
pop
fsub
sbb
pop
jp
pop
sbb
adc
inc
sub
inc
js
mov
sbb
int3
rcr
(bad)
call
into
push
movs
jge
enter
xchg
scas
(bad)
jmp
jne
mov
mov
jmp
rcl
fldenv
mov
and
fisubr
pop
dec
push
xor
push
xor
ror
push
push
mov
xor
hlt
cdq
dec
xchg
dec
les
stos
ja
sub
mov
inc
(bad)
(bad)
sub
movs
lods
dec
(bad)
(bad)
in
jmp
std
inc
repnz
add
xchg
add
idiv
stos
repnz
sbb
aam
mov
dec
pop
test
mov
call
cmps
mov
jae
cmp
cli
inc
pop
dec
jae
add
xchg
cmp
retf
iret
sbb
mov
fucomip
sbb
repnz
sbb
fxtract
imul
push
sbb
xlat
(bad)
adc
aas
ror
and
stos
nop
rcl
pusha
in
add
nop
mov
nop
mov
jb
(bad)
jmp
xchg
movs
sbb
mov
add
sub
les
xor
add
ins
sbb
iret
mov
mov
scas
inc
xor
ds
cmps
enter
adc
cmp
mov
repz
dec
aas
push
or
xor
ins
fsubr
in
cs
inc
add
frstor
int3
adc
mov
mov
sub
adc
es
loopne
rol
mov
setne
fistp
add
fdivr
imul
stc
pop
scas
int
mov
nop
mov
add
fsub
test
je
sti
push
sub
(bad)
clc
xcrypt-cbc
cmps
xchg
cmp
dec
mov
push
imul
and
test
and
retf
outs
fisub
sbb
mov
add
stos
ret
push
xchg
inc
int
xchg
or
pushf
pop
stos
cwde
jmp
jno
movs
xchg
xor
cmc
sub
stc
loopne
xor
push
sub
aam
rcr
cmp
and
xor
pop
xlat
add
pusha
mov
enter
add
popa
and
mov
sar
mov
enter
jmp
out
mov
stos
inc
es
inc
or
fs
pop
daa
push
cmp
inc
or
jmp
inc
ds
xlat
jle
mov
addr16
inc
into
mov
retf
loope
in
lahf
out
std
pop
dec
repnz
sub
xchg
mov
or
cwde
xchg
mov
hlt
in
add
pop
rcl
js
outs
dec
xchg
popa
in
or
add
mov
pop
adc
add
inc
mov
mov
add
push
or
push
neg
jmp
out
push
ins
sub
(bad)
push
enter
out
add
jno
pusha
and
cmp
sbb
shl
mov
jne
pop
dec
dec
std
dec
int
aad
jp
add
pop
sub
loope
mov
call
mov
fsub
add
mov
in
pop
jne
add
and
sbb
es
push
(bad)
lods
aam
int3
push
lock
cmp
jo
push
cmp
pop
gs
fidiv
(bad)
cwde
jle
(bad)
les
repnz
popf
xchg
or
xchg
add
ins
fs
retf
mov
lods
dec
or
cmp
inc
mov
imul
cmp
out
das
mov
pop
fmul
mov
aaa
adc
push
retf
in
in
nop
push
adc
add
out
adc
cld
in
nop
rcl
sbb
add
sahf
fwait
push
inc
faddp
sti
data16
lods
(bad)
int
jb
cmps
sbb
push
(bad)
add
int3
fs
(bad)
or
dec
cs
mov
sar
ds
mov
jmp
movs
div
cld
fild
dec
jae
xchg
jge
repnz
mov
xor
addps
inc
rol
push
cvtps2pd
push
mov
nop
call
test
retf
adc
fadd
push
arpl
repz
out
in
jmp
retf
jbe
push
out
xchg
mov
jns
int
comiss
aaa
mov
sub
sub
xor
ret
jmp
and
mov
xor
dec
movs
sub
int
push
cmp
in
(bad)
sbb
fild
sub
mov
imul
imul
inc
retf
shr
push
add
mov
ins
dec
in
popa
fiadd
mov
cmovns
ret
inc
popa
add
pop
mov
pop
or
adc
cmps
dec
sub
push
jle
aam
lds
loope
add
add
sub
lods
dec
test
adc
xchg
jmp
mov
shl
inc
add
mov
sar
mov
cmp
xor
(bad)
adc
cmp
je
pop
mov
mov
xlat
ret
imul
push
pushf
cmps
lock
scas
cmp
and
int
jbe
inc
test
push
int
mov
dec
ret
int
pop
sub
div
loope
aad
cwde
loopne
inc
or
cmc
add
mov
loopne
xor
sub
ja
cdq
in
pop
mov
push
iret
mov
fdiv
mov
push
jg
jmp
mov
aam
call
cmp
xchg
mov
cmps
or
xchg
dec
int
(bad)
push
pop
and
stos
mov
inc
sbb
and
in
and
cli
shl
imul
iret
test
mov
into
fcomi
nop
sub
add
cdq
cmp
jns
cli
jnp
xor
sbb
or
enter
dec
or
inc
xchg
cs
fs
test
std
xchg
jne
je
jmp
popf
pop
call
xor
mov
cmps
test
or
adc
ins
cmp
dec
aas
retf
fst
mov
pop
dec
mov
fwait
fs
movs
fst
lds
or
test
inc
sub
aaa
test
sahf
xor
mov
or
test
addr16
cs
xchg
mov
addr16
stos
mov
and
and
mov
lods
iret
cmp
shl
aam
ds
cmp
mov
loop
js
mov
inc
imul
cmp
(bad)
fdiv
mov
sbb
in
rol
adc
int
jl
ins
push
adc
das
mov
dec
push
sub
xchg
adc
add
sub
adc
popw
mov
push
inc
jecxz
pop
fiadd
or
daa
popa
cwde
and
call
add
sub
pop
fadd
test
pop
imul
retf
daa
ja
fmul
pop
jo
daa
mov
in
sbb
adc
cmp
xchg
movs
and
jo
loop
lods
dec
(bad)
jmp
xchg
dec
add
(bad)
xor
pop
mov
or
popf
jmp
lea
mov
mov
pop
in
jp
loope
push
int
dec
cli
inc
je
fdiv
sahf
and
jge
sti
or
push
mov
add
adc
test
xchg
sub
inc
or
sub
stos
in
into
dec
popa
or
push
(bad)
js
mov
add
cmp
hlt
repnz
cdq
(bad)
mov
push
jecxz
xor
pop
aaa
adc
and
add
sub
adc
mov
cmp
cmps
fs
pop
sub
mov
or
out
addr16
scas
pop
pop
setae
ficomp
ss
pop
xchg
jne
xor
sbb
xor
retf
push
xchg
sbb
stos
sub
xor
mov
sub
mov
addr16
inc
pop
mov
sbb
adc
mov
add
in
pop
push
or
pop
xchg
daa
icebp
jl
ret
js
mov
inc
fsubr
les
jp
xor
add
pushf
aas
cmps
push
imul
mov
xchg
or
sbb
inc
jl
lock
or
xchg
ror
adc
adc
pop
call
clc
in
inc
stos
adc
or
or
mov
or
shl
(bad)
ficomp
out
outs
jp
daa
repnz
xchg
sbb
push
mov
lock
test
pop
and
in
sub
cmps
popa
ja
cmp
call
call
dec
sbb
or
(bad)
xchg
ins
sbb
bound
mov
icebp
cmp
in
mov
clc
mov
popa
ss
mov
jo
mov
aam
loopne
mov
dec
aad
jp
mov
repz
rcr
adc
inc
aad
cmp
movs
and
add
pop
sub
pop
arpl
pusha
jmp
sub
out
and
std
add
mov
scas
mov
lahf
ins
int3
test
fimul
mov
je
sbb
jecxz
xlat
stos
movs
das
xor
lahf
jmp
test
mov
mov
mov
jne
mov
(bad)
sahf
and
dec
mov
jb
mov
or
out
add
jbe
imul
loopne
in
mov
sbb
push
mov
inc
adc
cmc
xchg
mov
pop
or
xor
inc
rcl
mov
jnp
jnp
cdq
ds
cmp
sub
cmp
retf
loop
repnz
sub
or
or
stc
scas
test
icebp
jmp
push
out
popf
pop
je
pop
inc
adc
mov
sbb
pop
jmp
in
mov
fwait
mov
ins
xor
mov
stos
movs
and
jl
sbb
jno
jno
cli
jmp
out
iret
jae
sbb
and
ja
xchg
mov
ins
gs
fwait
dec
jge
aam
es
jl
std
cmp
les
ret
int
jb
inc
cmps
fdiv
sub
cmc
stos
add
mov
jns
leave
jne
adc
rcl
inc
aas
add
jle
pop
popf
ins
mov
test
mov
mov
nop
pushf
shl
adc
adc
add
repnz
popa
xor
scas
jecxz
jns
push
xor
jns
in
dec
sbb
jl
jmp
adc
cmps
mov
into
cld
loope
pop
dec
(bad)
or
div
jmp
inc
ja
cli
cmp
aas
xchg
mov
cmovs
push
sub
and
adc
mov
ret
stos
(bad)
mov
(bad)
retf
outs
or
xor
and
pop
imul
ins
ret
dec
test
es
in
mov
jl
jne
loop
mov
cs
mov
ret
mov
mov
xchg
int3
inc
dec
jp
or
not
test
pop
ficom
movs
out
sbb
sahf
adc
sti
add
ds
sub
(bad)
mov
mov
and
mov
leave
stos
push
xor
and
stos
or
adc
adc
jno
out
sti
std
push
test
inc
pop
or
call
sbb
and
jns
(bad)
out
retf
push
cmp
mov
jne
popf
hlt
nop
rcl
(bad)
cmps
movs
mov
adc
shl
fdivr
mov
in
imul
mov
jne
sti
imul
inc
loope
add
pop
ret
jle
inc
movs
js
(bad)
push
inc
(bad)
std
inc
adc
(bad)
mov
stos
and
hlt
mov
mov
clc
inc
push
inc
out
inc
enter
mov
je
rcr
stos
xor
cmps
clc
movs
add
mov
cmp
or
(bad)
ins
push
loope
out
mov
out
jg
cmp
xor
ret
add
in
nop
sub
iret
xor
imul
pop
inc
pop
jg
neg
jl
mov
cdq
mov
mov
arpl
mov
inc
ss
inc
je
sbb
add
cmp
xor
sets
xchg
pop
shr
js
xchg
push
adc
sub
mov
mov
sbb
(bad)
lds
mov
push
popf
jbe
arpl
icebp
cmp
iret
mov
arpl
jbe
sbb
stos
mov
jle
jns
add
xchg
imul
cmp
ja
(bad)
dec
mov
mov
bnd
in
scas
mov
pop
xchg
jge
mov
pop
inc
mov
cmps
retf
mov
mov
pop
inc
mov
lods
pop
xchg
mov
leave
lds
mov
mov
(bad)
mov
push
stos
or
pop
add
xor
xchg
xchg
arpl
js
jle
inc
mov
or
out
adc
popa
cmc
mov
fidiv
adc
call
dec
scas
fiadd
mov
fdiv
je
int
dec
(bad)
jmp
outs
dec
hlt
inc
push
fild
and
cli
sti
inc
dec
daa
push
lock
cmp
xchg
xchg
dec
mov
dec
push
les
or
adc
cmps
pop
inc
test
dec
pop
je
push
inc
out
xchg
and
(bad)
xchg
and
inc
inc
xchg
pop
xor
aas
sbb
out
push
xor
stc
cmp
adc
out
repnz
fbld
or
sbb
mov
inc
lock
pushf
retf
mov
lea
jae
cli
mov
cmp
ret
or
xor
mov
fstp
das
ret
mov
or
shl
fiadd
jmp
std
sub
test
adc
cmp
fsubp
daa
add
hlt
leave
dec
imul
fbstp
pop
adc
test
push
mov
dec
test
push
push
(bad)
sub
mov
cmp
jp
ror
test
push
test
dec
pop
adc
mov
sbb
stc
int3
push
(bad)
mov
mov
test
sub
and
sbb
es
mov
fdivrp
dec
push
aas
cmp
push
or
or
mov
les
clc
cmp
and
dec
mov
aad
mov
pop
sub
les
shr
imul
inc
daa
std
arpl
popa
pop
dec
test
aam
lods
sub
iret
jecxz
sbb
xchg
xchg
lds
nop
push
mov
out
jae
pop
or
mov
push
cmp
stos
in
pop
enter
in
mov
mov
pusha
stc
xchg
xor
lock
sbb
repz
jbe
lds
mov
pop
popa
sahf
and
dec
scas
jmp
ja
dec
jp
(bad)
and
mov
push
and
mov
push
ret
or
xchg
xchg
add
sbb
dec
not
mov
push
and
push
fnsave
add
jmp
mov
gs
shrd
fldcw
jg
fisubr
xor
mov
xchg
sbb
cmp
(bad)
scas
mov
(bad)
adc
out
(bad)
movs
aad
popa
mov
data16
pusha
sti
int
hlt
dec
nop
pop
mov
pop
daa
inc
pop
pop
jg
cmp
rep
out
and
fstp
test
(bad)
enter
shl
jmp
scas
add
xor
add
xchg
fcomp
sub
imul
adc
add
xchg
xchg
mov
imul
jo
shl
nop
xor
pusha
js
ret
pop
cmp
cmps
test
sub
mov
adc
push
out
jmp
outs
dec
loope
and
pop
sub
hlt
push
cwde
push
inc
ret
test
or
ss
sub
int3
push
cmp
inc
adc
dec
jecxz
jl
push
cdq
movs
cmc
jl
jl
and
dec
div
int
fs
push
cmp
nop
mov
int3
into
repnz
(bad)
idiv
test
add
mov
jns
xlat
cmp
(bad)
pop
(bad)
mov
cs
mov
(bad)
jb
push
jae
sub
jp
pop
int3
das
sti
daa
push
lds
cmp
rol
cdq
popf
repnz
(bad)
in
mov
sub
(bad)
jge
pop
pop
iret
or
clc
sbb
jns
retf
push
xchg
repz
or
(bad)
cmps
in
pushf
test
cmp
aad
(bad)
xor
inc
add
loopne
and
mov
idiv
out
sub
or
mov
shl
in
clc
nop
and
sbb
push
and
mov
inc
jp
jmp
adc
cmc
sub
shl
jmp
popa
ins
jo
push
out
xor
fldcw
sub
push
imul
inc
fsub
mov
sub
push
fisttp
mov
shl
out
sub
call
fimul
call
jno
lods
stos
fdiv
mov
inc
mov
rcl
stos
sub
aas
(bad)
mov
mov
mov
int3
test
int
pop
stos
push
mov
pop
inc
cmp
test
mov
aaa
push
add
std
xchg
mov
adc
pop
mov
sbb
and
mov
ret
in
loopne
in
cmp
push
push
mov
clc
jge
jnp
cmp
sub
push
dec
ins
das
addr16
or
mov
sub
mov
jp
jge
inc
data16
push
xchg
sbb
out
imul
js
mov
or
jmp
movs
imul
leave
cmps
pop
adc
pop
sbb
ret
dec
jb
pop
shl
sbb
call
pop
fxam
icebp
dec
sbb
jmp
sbb
(bad)
fisub
lock
or
aas
dec
jp
daa
sub
sahf
aaa
jmp
in
mov
mov
dec
jle
mov
push
jb
rcr
and
popf
adc
bound
xchg
and
jl
mov
pop
dec
les
daa
mov
jp
leave
lahf
xchg
in
jge
neg
inc
popa
mov
repz
sbb
push
xchg
cmp
mov
out
test
pop
mov
xchg
dec
push
pushf
stc
mov
xchg
into
loope
lock
aad
loopne
test
and
pop
loop
sbb
push
fsubr
and
sub
fnstsw
jle
or
add
inc
out
(bad)
retf
or
xor
dec
repnz
jmp
aad
mov
lock
fwait
ret
popa
(bad)
sbb
jo
fisubr
jg
neg
pop
sti
push
cmps
mov
xlat
adc
cmp
cmp
fcomi
pop
enter
ins
dec
sbb
adc
sbb
add
cmp
or
sbb
add
jne
push
lods
lahf
inc
test
dec
push
and
inc
hlt
and
or
adc
shr
pop
inc
xor
test
lods
fcmovne
adc
cmp
and
mov
add
inc
push
call
jno
or
fnstcw
jl
js
or
iret
iret
loop
jns
stc
mov
sbb
mov
inc
(bad)
(bad)
jnp
xor
repnz
push
xchg
in
gs
leave
jae
jmp
sbb
mov
xor
push
pop
adc
ins
pop
cmp
aam
pop
inc
fidivr
popa
xor
sbb
pop
push
adc
leave
pop
mov
push
mov
sub
or
ss
xchg
pop
inc
add
mov
sub
jmp
mov
(bad)
lods
gs
inc
imul
test
push
jb
(bad)
loop
xor
addr16
mov
xor
and
jno
mov
mov
pop
jmp
(bad)
ss
loop
shr
int3
scas
stos
pop
(bad)
in
push
das
sbb
mov
int
stc
inc
jmp
xchg
scas
pop
dec
cwde
out
add
push
mov
pop
fs
jle
imul
add
jp
cmp
jne
xchg
std
mov
test
pop
dec
xchg
cmp
push
loopne
(bad)
movs
xor
mov
and
(bad)
fdiv
or
ja
dec
add
hlt
xchg
cmp
or
mov
or
sbb
mov
inc
dec
push
jp
mov
mov
test
jl
test
loopne
outs
lods
cmp
dec
in
mov
in
mov
(bad)
jge
xor
pusha
cwde
into
pusha
dec
ret
loopne
lods
inc
sbb
div
rcr
cmp
jo
mov
pop
and
repz
xchg
cmps
lds
add
jecxz
movs
addr16
out
push
cld
pop
sti
sbb
shl
xchg
(bad)
jo
cdq
call
ds
or
mov
call
popa
mov
std
pop
or
mov
adc
cmp
aad
xlat
es
sub
jg
ins
imul
xor
mov
aad
(bad)
and
push
ss
mov
jle
out
mov
add
xchg
jno
cmp
sub
mov
sub
mov
sub
outs
test
inc
jle
pop
adc
daa
cdq
mul
pop
lods
(bad)
adc
push
loop
add
pop
or
sub
add
and
aas
or
mov
(bad)
cld
out
ins
xor
repz
jmp
cdq
popa
test
push
xchg
cli
ins
pop
mov
ret
xor
ret
(bad)
cwde
dec
sbb
dec
sub
mov
mov
xchg
lds
inc
xchg
int3
mov
mov
test
jae
pop
sti
sar
js
fidiv
mov
pop
cmp
inc
cmc
imul
fisub
jecxz
mov
xchg
and
push
or
ficom
cmp
das
mov
clc
retf
out
push
or
mov
dec
dec
inc
dec
in
aaa
push
mov
in
fnstcw
inc
jbe
push
(bad)
ja
mov
movs
mov
jb
stos
fadd
sub
inc
and
loopne
or
add
test
xchg
out
repz
je
adc
std
mov
cld
retf
popa
cmps
pop
aam
call
enter
mov
imul
adc
mov
cmp
inc
jbe
js
sub
repnz
xchg
or
bound
or
jge
xlat
add
push
fwait
jecxz
lahf
cmps
xor
pop
mov
mov
mov
adc
jnp
sub
inc
ss
mov
bnd
lea
out
sbb
test
pop
jmp
hlt
ret
sbb
sbb
stos
or
inc
ror
pop
mov
push
(bad)
xor
mov
leave
cmp
pushfw
jle
xchg
loope
fbstp
stc
adc
in
inc
lods
sub
mov
mov
pop
jmp
out
repz
cmps
jl
push
pop
xor
call
mov
scas
pop
retf
xlat
enter
xor
adc
hlt
sahf
jle
add
fisubr
ds
pop
call
scas
aad
lahf
and
gs
pop
movs
jg
xchg
cmps
lea
jg
pop
popa
jecxz
cli
cli
fmul
pop
mov
and
nop
movs
mov
inc
jo
cli
pop
js
cld
or
dec
mov
cmp
xor
inc
pop
and
in
fadd
inc
pop
adc
dec
shl
pop
ror
xchg
ret
lods
pop
and
clc
jne
push
int3
das
imul
add
lods
push
js
test
mov
adc
dec
and
movs
aas
imul
pop
pop
adc
fcmovu
jo
sbb
dec
imul
loop
adc
out
lock
iret
xchg
inc
and
inc
sbb
or
xchg
movs
pop
pop
cmp
data16
ins
stc
adc
ins
ret
cld
adc
push
(bad)
sub
adc
mov
retf
dec
test
pop
mov
xchg
pop
sub
(bad)
mov
retf
sub
push
dec
bswap
aad
mov
das
fcom
movs
test
aam
inc
es
inc
imul
scas
test
ja
sti
gs
jno
ret
lea
into
nop
icebp
mov
mov
xchg
add
push
ret
xor
inc
pop
out
mov
jg
imul
leave
fcmovu
shl
sbb
cmp
mov
rcl
or
and
and
pop
(bad)
mov
loope
push
out
fs
inc
jecxz
mov
sti
inc
or
popf
aad
lock
mov
sub
cmp
dec
cmps
in
repnz
jge
pop
sub
pop
xor
je
ret
sbb
xchg
push
jle
xor
outs
arpl
fsubr
push
mov
nop
pop
or
(bad)
les
icebp
jp
ficomp
push
fcomp
mov
cmps
cdq
(bad)
leave
stos
hlt
ror
push
dec
mov
loope
xchg
retf
sahf
push
jns
push
fs
sub
scas
mov
mov
(bad)
(bad)
fsubr
add
inc
repnz
stos
inc
cli
cmps
leave
mov
dec
jno
repnz
xchg
cdq
test
cmps
rcr
or
cmps
sar
cmp
mov
loope
hlt
cmp
pop
(bad)
hlt
and
cmp
jp
adc
shl
leave
jg
(bad)
push
sbb
mov
and
arpl
dec
scas
adc
imul
inc
push
jns
leave
xchg
add
jmp
call
cld
ret
cld
xlat
sbb
push
aam
pop
daa
out
cmps
int3
cmp
mov
fld
sti
inc
icebp
jmp
dec
add
sbb
repz
xor
int
sahf
jne
mov
es
shl
sub
cmp
mov
out
jl
mov
retf
and
inc
sti
mov
inc
shl
push
sbb
call
scas
mov
and
jbe
inc
aam
dec
fistp
ret
ins
nop
sub
xor
mov
sub
lods
or
sbb
les
fisub
out
add
iret
icebp
and
xor
mov
inc
pushf
sahf
jp
cwde
imul
aam
ficom
ins
push
sub
(bad)
xor
call
ret
cmp
sub
stos
pop
mov
pop
inc
mov
jg
inc
jmp
call
mov
mov
cmp
js
adc
(bad)
mov
or
out
pop
nop
or
stc
or
sub
dec
xor
repnz
push
mov
push
(bad)
lds
es
dec
int
mov
sub
cmp
adc
inc
adc
xchg
mul
inc
lods
in
sahf
popf
xchg
push
je
push
pusha
dec
dec
hlt
out
mov
scas
lds
mov
mov
xchg
retf
pop
pop
push
cmp
xlat
rol
rcr
mov
mov
enter
rcl
(bad)
mov
cmc
dec
pop
imul
push
cs
mov
push
call
pslld
leave
sbb
shl
add
xchg
add
mov
mov
mov
push
adc
dec
mov
fisttp
mov
xchg
dec
inc
aam
jg
sahf
sbb
pusha
adc
(bad)
stos
cld
aam
imul
dec
mov
dec
mov
out
jo
ror
sub
fwait
rcl
stos
lods
sbb
cmp
fcomp
push
fst
push
dec
repz
jg
mov
call
inc
dec
push
dec
and
cdq
add
sbb
out
test
rol
cmp
mov
imul
mov
sub
fs
inc
test
or
(bad)
icebp
fs
arpl
stos
mov
xor
ja
out
and
sbb
add
mov
mov
(bad)
(bad)
push
repnz
or
fisttp
cld
xor
iret
dec
(bad)
xor
lods
jl
call
repnz
mov
rep
repnz
sti
jp
repz
imul
xor
js
xchg
jne
icebp
out
mov
mov
ret
loopne
ret
in
bound
leave
pop
xchg
clc
sub
xlat
push
call
jnp
xor
test
aam
retf
nop
mov
stos
push
shr
sti
xor
(bad)
adc
add
pop
fwait
mov
dec
push
pop
inc
xchg
rcr
or
adc
ins
add
xchg
xor
sti
mov
mov
adc
out
shr
add
xchg
fmulp
cld
in
sti
ret
or
psrlq
mul
enter
mov
mov
mov
aam
div
cs
ja
(bad)
(bad)
leave
(bad)
and
lahf
push
int
ss
jbe
xchg
ret
mul
jg
mov
sar
in
push
mov
mov
mov
pop
push
rcl
stos
cmp
fdivr
(bad)
dec
pop
clc
dec
pop
add
into
sub
or
scas
jecxz
int3
cmc
sahf
mov
ret
push
pop
cmp
es
xchg
cmp
call
cli
fld
cmp
mov
addr16
arpl
xchg
mov
mov
xor
xchg
add
js
mov
xchg
inc
imul
daa
sub
retf
ss
jmp
ficomp
in
rol
mov
ror
ds
jns
and
mov
bswap
inc
das
jo
lahf
cwde
push
push
mov
pop
out
mov
test
inc
mov
fmul
and
or
sub
jp
jno
adc
jne
shr
aaa
lods
jbe
adc
outs
retf
ins
in
ins
arpl
mov
int3
sub
xchg
mov
sbb
jns
jg
rol
mov
cld
ja
and
pop
rcr
rol
push
lds
pop
xchg
rcr
dec
xchg
jae
jns
push
pop
push
xchg
push
mov
xor
fidiv
sar
setge
in
aam
popa
clc
je
loop
pop
jecxz
mov
push
out
sahf
(bad)
jmp
pushf
in
lods
jns
inc
jg
or
mov
xor
cmc
nop
outs
fistp
xor
jp
add
rcl
xchg
and
sub
jns
push
call
cmp
and
jle
jmp
les
mov
xor
xor
adc
add
jae
dec
push
cmp
jl
or
and
popf
mov
bound
mov
pop
test
mov
xor
int
test
arpl
sub
int
shl
inc
xchg
add
adc
mov
out
popf
ss
push
mov
icebp
inc
or
xor
pop
cwde
icebp
dec
add
je
pusha
pop
adc
loope
repnz
(bad)
je
aas
cmp
idiv
cmps
sub
mov
add
push
xor
fisttp
aaa
pop
mov
ds
arpl
add
pop
pop
icebp
mov
pop
in
sbb
cmp
dec
jno
jb
nop
and
fisub
imul
pop
jmp
push
and
daa
jmp
xchg
sub
pop
dec
call
mov
jecxz
push
mov
adc
push
out
cmp
adc
in
cld
push
mov
dec
xor
fld1
pop
mov
daa
cdq
cmp
retf
jbe
enter
push
xchg
sub
mov
dec
dec
fld
test
inc
jae
dec
rcr
mov
sub
inc
(bad)
cli
inc
loope
pop
sbb
sub
sahf
fcomp
imul
dec
test
dec
push
dec
xor
jl
jb
xor
enter
mov
and
lods
movs
adc
and
ret
call
sub
add
out
movs
mov
imul
sub
clc
push
ja
call
sbb
pop
iret
push
call
xor
fisttp
mov
sub
call
add
clc
jp
shl
lahf
out
and
ret
pop
inc
xlat
(bad)
repz
mov
mov
fnstcw
pusha
mov
jo
jp
ror
enter
test
fimul
fs
jp
popa
rcr
add
jmp
or
jmp
fisttp
push
sub
nop
fcomp
in
rcr
add
cmp
sbb
(bad)
fidivr
pop
inc
pop
mov
into
loope
stos
mov
cmps
lock
ror
mov
jo
pop
sbb
cmp
addr16
xor
test
or
sub
and
cld
inc
push
push
stos
sub
xor
dec
test
popa
es
or
sub
push
outs
adc
cwde
mov
jns
mov
loope
mov
out
add
clc
inc
fistp
in
push
iret
js
fsub
xchg
cld
outs
jl
call
sbb
mov
sub
inc
in
in
mov
aam
adc
push
std
rcr
xchg
pop
cmc
inc
loopne
mov
ror
mov
mov
in
loopne
in
fs
push
push
scas
repz
outs
sbb
add
xchg
jb
sbb
shl
leave
(bad)
mov
repz
xchg
mov
pop
fs
int
sbb
push
les
xchg
icebp
mov
out
dec
jge
adc
adc
call
in
jnp
mov
popf
or
ja
sub
cld
movs
in
sbb
inc
pushf
inc
pop
loop
push
xchg
cwde
gs
pop
lods
clc
and
loopne
inc
sub
fdiv
ret
data16
rcr
jge
jo
shl
aad
ins
jmp
pop
retf
dec
inc
mov
and
aaa
or
adc
push
pushf
cmp
call
pop
fwait
cmp
and
lock
cdq
xlat
ror
push
inc
movs
or
adc
or
sub
xchg
jne
mov
pop
xchg
adc
in
inc
and
push
sub
mov
(bad)
cmc
repnz
inc
adc
cwde
or
jecxz
mov
mov
ins
mov
add
mov
int3
inc
push
shl
fnstenv
in
clc
jg
dec
xor
mov
cmp
cmc
mov
(bad)
or
xchg
jnp
or
int3
mov
enter
aad
adc
(bad)
sar
call
(bad)
divps
sub
jbe
adc
dec
xchg
neg
inc
fcomi
jmp
bound
jb
xchg
mov
mov
sub
mov
jg
scas
push
xor
lods
xor
popf
into
and
mov
adc
jge
inc
jecxz
in
jmp
loop
mov
add
mov
loope
pusha
dec
int3
popf
xchg
sbb
(bad)
cmps
lods
mov
enter
push
scas
push
ficomp
jb
rcl
cmp
sbb
rcl
cmp
jmp
cdq
xor
(bad)
and
fisub
lea
out
sahf
in
xor
dec
loope
cli
mov
push
jl
and
adc
xchg
data16
mov
cmp
or
mov
test
or
fdivr
push
mov
jmp
mov
mov
(bad)
repnz
je
ss
into
arpl
mov
sbb
mov
mov
jl
push
shr
jbe
jl
mov
ja
rol
adc
pop
mov
in
scas
and
out
cmp
fldl2e
mov
call
mov
nop
mov
dec
fadd
imul
add
mov
lea
adc
mov
movs
outs
fisttp
mov
dec
retf
push
sbb
jl
add
sti
mov
das
and
or
out
and
cmp
jo
adc
mov
pop
xchg
in
add
in
scas
retf
inc
sub
mov
inc
(bad)
iret
mov
xchg
sbb
cli
cdq
imul
js
mov
clc
enter
ror
ret
shrd
and
call
inc
ds
add
js
or
dec
dec
xlat
mov
(bad)
push
cmp
ins
stos
jle
popf
dec
pop
lods
lahf
xchg
in
fs
xchg
mov
aas
xchg
or
add
aaa
dec
stos
xor
ret
call
pop
sbb
mov
sbb
stc
dec
push
and
pop
and
in
xor
es
push
mov
mov
retf
outs
(bad)
loopne
imul
mov
jae
loopne
loopne
xchg
daa
repz
ficomp
pop
and
fs
adc
iret
jae
and
(bad)
mov
inc
sub
in
ins
mov
iret
ds
mov
mov
inc
retf
cmp
xchg
pop
leave
and
fistp
das
(bad)
or
mov
push
push
aas
dec
dec
jecxz
inc
xor
cmps
sub
aaa
das
sub
sub
(bad)
imul
(bad)
pop
mov
push
in
inc
xchg
xchg
lahf
xor
push
shr
pushf
pop
xor
cli
pushf
mov
jecxz
lods
and
xor
mov
push
adc
cs
aam
jno
xchg
xlat
mov
mov
add
xchg
dec
dec
out
cmp
jb
sub
xor
fmul
mov
xorps
lods
xchg
or
outs
loop
sub
pusha
mov
or
or
jno
(bad)
js
out
jo
pop
mov
shr
xchg
sbb
js
int
fld
adc
popf
push
push
cmp
stc
je
out
pop
or
dec
mov
leave
or
push
push
xor
loope
adc
add
cwde
loopne
lahf
stos
fstp
add
and
push
clc
out
cld
mov
pop
inc
aas
mov
nop
push
popa
sub
ins
add
pop
ret
xchg
and
(bad)
jmp
lods
sahf
mov
mul
add
inc
xchg
add
cli
out
xchg
xchg
retf
pop
into
or
call
mov
rep
pushf
add
ja
xchg
leave
push
add
adc
mov
call
and
sahf
hlt
inc
(bad)
ds
mov
mov
test
rcl
and
stos
mov
cld
cli
sar
dec
call
mov
ins
cli
pusha
sub
aam
inc
ds
sbb
mov
idiv
lods
adc
fsub
mov
pop
call
pushf
xchg
adc
cmp
inc
(bad)
scas
sub
pop
ss
pop
std
sub
ds
pusha
and
dec
push
out
outs
bound
test
adc
jbe
sub
cdq
inc
mov
pop
dec
jmp
retf
and
and
imul
lods
shl
or
push
jp
fimul
xchg
xor
mov
xchg
push
addr16
lds
mov
and
test
mov
cmp
pop
or
call
inc
jg
icebp
repz
jl
aaa
iret
rcr
rol
inc
pop
cmps
fisttp
int3
int3
test
fcomp
je
push
jmp
dec
and
or
inc
aam
dec
mov
cmp
jle
push
ins
sbb
sub
call
lods
push
adc
xchg
mov
lds
sub
leave
cmp
xlat
mov
add
and
cdq
cmps
mov
xor
and
sahf
sub
stos
fist
pop
leave
and
jno
repnz
sub
and
dec
and
xchg
mov
shr
adc
push
daa
lahf
adc
ret
mov
daa
das
movs
(bad)
sti
mov
cmps
das
mov
dec
mov
and
adc
sub
pop
cmp
test
pusha
neg
jmp
popa
mov
mov
push
nop
sbb
push
push
pop
mov
pop
jno
sar
mov
adc
cmps
daa
mov
jg
adc
pop
mov
adc
inc
inc
mov
rcr
cmp
adc
xor
dec
lods
mov
pop
add
and
mov
std
mov
cli
out
test
inc
dec
inc
jle
xchg
aaa
lahf
cmp
clc
xor
mov
push
lahf
dec
push
in
aad
scas
loope
(bad)
sub
mov
aad
pop
ja
das
mov
fdivp
enter
(bad)
or
cwde
int3
in
mov
sbb
mov
jmp
push
cwde
les
adc
movs
inc
bound
rcl
ret
ja
jge
cmc
adc
mov
rol
aad
xchg
dec
mov
cmp
and
xchg
arpl
mov
loope
mov
in
nop
stos
mov
out
shl
not
mov
es
inc
shl
push
inc
xchg
add
(bad)
in
and
ficom
cs
aad
jge
sbb
jnp
sti
xchg
hlt
push
imul
sbb
inc
iret
stos
daa
dec
push
imul
fidivr
mov
xchg
xchg
test
(bad)
xchg
cmp
es
dec
pop
sub
maxps
in
enter
sbb
and
mov
xor
imul
mov
(bad)
mov
sahf
or
sbb
pop
sbb
dec
iret
inc
mov
in
sub
(bad)
cmp
jns
js
add
mov
popa
call
mov
mov
into
dec
retf
and
xor
pop
and
cwde
lds
jecxz
xor
add
in
loop
call
fidivr
or
add
(bad)
dec
and
mov
inc
add
pop
mov
adc
aaa
cmc
jl
push
cmp
and
aad
push
cmp
sub
mov
out
push
shr
ins
enter
xor
or
loope
fwait
(bad)
sbb
out
push
(bad)
cmc
jp
sbb
mov
push
data16
push
pop
dec
fisubr
add
std
sub
sbb
mov
jecxz
ds
mov
jno
jmp
and
test
cmps
rcr
dec
popf
mov
(bad)
jo
mov
fsubr
push
out
ror
mov
stc
mov
push
push
loope
sub
aaa
not
pop
clc
es
mov
pop
mov
mov
adc
dec
loope
xlat
push
or
adc
rcl
jbe
add
fs
imul
add
fsubr
out
add
nop
mov
xor
push
adc
dec
or
imul
ret
push
iret
and
xchg
repnz
jbe
shl
cmp
fs
loope
lahf
mov
lods
in
add
daa
outs
jl
cmp
aad
push
jne
vpmaxub
fiadd
mov
test
or
dec
shr
out
add
mov
test
mov
std
or
sbb
dec
mov
cli
scas
cwde
xlat
and
(bad)
retf
out
and
cs
xchg
adc
mov
pop
mov
ins
loope
inc
fimul
and
popa
xchg
cmp
mov
push
aad
div
ins
ret
sbb
push
mov
mov
les
(bad)
les
sub
adc
xchg
mov
lock
es
adc
jmp
icebp
pop
js
movs
sahf
inc
imul
adc
mov
or
scas
add
out
inc
call
add
sub
xchg
jo
or
into
lds
test
mov
jae
and
add
fisubr
pop
sti
xchg
adc
jle
das
mov
test
add
and
dec
fisub
outs
or
cmp
aad
jb
ja
cmp
xchg
cmp
jo
inc
fisttp
jns
dec
pop
xchg
adc
inc
dec
loope
push
data16
repnz
cmp
arpl
jge
push
jo
dec
or
pop
push
sbb
movs
xchg
je
jne
jge
scas
into
and
(bad)
jp
add
fild
retf
ror
js
push
pop
jbe
push
gs
cmps
or
mov
lahf
dec
and
ret
sbb
fiadd
dec
inc
xchg
cli
dec
std
jge
retf
aam
inc
retf
xchg
dec
(bad)
mul
je
add
sub
cmp
lods
call
iret
or
pusha
dec
xchg
stos
mov
sbb
pop
out
adc
bound
loop
push
inc
idiv
int
bound
fstp
cli
jmp
add
popa
daa
inc
ds
push
dec
jns
int
ss
lds
ret
mul
out
cmp
lods
dec
sti
aad
mov
ins
jg
pop
cmps
dec
dec
lods
mov
and
aas
dec
pop
push
lods
adc
cmp
(bad)
pop
add
jno
ss
and
(bad)
cmp
mov
lahf
out
lods
int3
sub
repnz
aas
adc
dec
pushf
cdq
sbb
add
gs
int
xchg
mov
sbb
push
mov
xchg
add
icebp
sub
push
int3
sahf
std
cs
js
cs
es
push
out
jle
and
pop
mov
mov
repz
sti
mov
out
cmp
mov
ja
cdq
dec
mov
mov
sub
sbb
or
fucomip
push
xchg
aaa
(bad)
jp
imul
and
push
inc
mov
lods
(bad)
fcomp
lods
dec
mov
jg
lahf
loop
xchg
popa
mov
jb
retf
lods
mov
xchg
addr16
mov
loopne
xchg
mov
jg
sar
pop
scas
fnsave
mov
inc
jo
bound
sub
jae
fs
mov
fnstsw
or
mov
inc
fmul
mov
std
jl
cwde
call
or
cmps
ret
addr16
arpl
dec
mov
mov
movs
sub
movs
mov
call
xor
fiadd
ret
addr16
jle
inc
xor
aas
das
out
pushf
mov
adc
cli
mov
ss
xchg
pop
xchg
mov
inc
jbe
mov
pop
mov
mov
ret
stc
lods
cli
push
mov
fadd
js
aaa
in
icebp
jne
sahf
cmc
xor
add
out
sbb
inc
jmp
jle
out
mov
push
pop
push
jno
sub
mov
lahf
jmp
daa
sub
outs
sbb
mov
dec
adc
popa
xchg
out
dec
mov
icebp
pop
mov
and
sbb
sti
pxor
pop
aaa
adc
cli
mov
rcr
lahf
lea
lods
dec
fwait
jbe
pusha
popf
jecxz
xor
movs
add
stc
or
lods
jbe
sti
cmp
cmp
push
cmp
lahf
jg
dec
jno
ror
popa
or
mov
xor
fild
mov
imul
scas
sbb
cmps
xchg
mov
sub
jmp
into
test
stc
aas
sti
stos
int
and
push
(bad)
gs
ins
dec
xchg
cld
jns
imul
ror
(bad)
lds
xor
pushf
rcr
cmp
lods
jmp
inc
pushf
mov
sub
xor
stos
sbb
adc
dec
cmp
inc
sub
adc
jmp
push
cmp
xlat
mov
jno
mov
cmp
ins
push
iret
out
mov
loopne
dec
fisttp
xchg
mov
(bad)
les
jg
mov
mov
jp
push
sub
aad
mov
sbb
or
pop
cwde
sbb
in
xor
fld
sar
cmp
fstp
add
and
cmc
jg
fisubr
and
mov
in
jmp
xor
mov
cld
fs
mov
jg
(bad)
stos
sbb
inc
xor
jp
hlt
cmp
mov
shl
pushf
pushf
mov
mov
mov
push
jo
data16
pop
jae
pop
(bad)
mov
popf
arpl
jg
xchg
lods
cmp
jp
or
dec
stc
adc
jne
clc
(bad)
scas
or
(bad)
(bad)
in
pop
sbb
ret
aad
out
pushf
je
pushf
aam
adc
jno
jl
pop
dec
and
inc
jns
addr16
and
int
push
out
xor
in
adc
jecxz
cmp
xlat
pop
add
out
push
dec
mov
and
jecxz
inc
dec
fs
into
xchg
push
(bad)
cmp
push
mov
div
movs
jmp
cs
adc
mov
and
lds
xchg
ins
(bad)
popf
jnp
test
bound
pushf
mov
sub
repz
or
or
cmc
push
lods
repnz
aaa
setb
xchg
hlt
cmp
loop
stc
sub
mov
loopne
mov
imul
mov
ret
aas
inc
xchg
les
mov
lods
xor
jmp
adc
jo
stc
xchg
test
ins
nop
cmc
dec
jp
pop
sub
icebp
aad
movs
mov
sbb
call
push
pop
jecxz
pop
in
adc
ret
mov
retf
mov
push
mov
push
cli
cmp
ret
ficom
cmc
push
test
inc
(bad)
mov
repnz
jb
add
push
aam
adc
shr
lea
fwait
(bad)
les
mov
test
aad
push
push
sub
(bad)
ins
fwait
xchg
dec
stos
xor
mov
jbe
cwde
mov
iret
ja
jp
push
ins
adc
add
imul
arpl
and
imul
fadd
out
push
pop
or
idiv
lea
loope
sub
mov
sbb
call
js
adc
(bad)
fstp
push
arpl
retf
sahf
out
add
ficomp
push
or
push
test
sub
gs
sub
mov
out
and
jae
and
add
stos
pop
popa
push
pop
cmps
scas
inc
(bad)
push
or
sub
push
sub
inc
mov
leave
jo
fld
sar
in
scas
into
out
jb
arpl
ss
les
int3
call
out
sub
push
xor
pusha
xchg
scas
xchg
cli
add
fnsave
xor
mov
xlat
add
in
sub
adc
pusha
cmp
fsub
test
pop
mov
jo
popf
lds
or
fwait
pop
ret
add
test
div
push
adc
cdq
cli
arpl
jno
mov
mov
fnsave
and
xor
sbb
or
mov
and
pushf
cmp
dec
int3
cld
outs
mov
call
inc
jp
mov
push
mov
xchg
mov
adc
jg
push
jne
xor
psrad
sbb
mov
inc
and
(bad)
xlat
mov
sbb
or
dec
adc
mov
mov
aas
jb
fidiv
push
js
push
call
jmp
push
lea
shl
sbb
mov
adc
in
in
xchg
inc
sar
pop
cmp
add
xor
dec
add
push
call
out
cld
pop
dec
ror
retf
mov
loopne
les
mov
push
pop
cmp
loopne
mov
inc
jl
push
mov
enter
out
popa
pusha
outs
shl
daa
add
fcom
xchg
cs
sub
icebp
cmp
iret
adc
and
jmp
call
and
rcl
push
scas
setno
sar
mov
sbb
test
sar
xchg
mov
inc
pop
movs
xchg
icebp
cmp
adc
pop
fwait
xchg
cmp
inc
push
call
or
retf
and
mov
aam
or
xchg
xchg
sbb
js
dec
dec
push
ja
add
into
loope
jl
cld
push
popf
clc
(bad)
neg
jl
das
xchg
xor
ins
arpl
xor
mov
xchg
aad
push
mov
jge
mov
retf
mov
or
mov
pop
xor
sahf
test
paddq
xchg
push
inc
sub
push
andnps
arpl
(bad)
(bad)
sub
sub
cdq
icebp
in
pop
scas
mov
mov
ror
or
mov
and
ss
jne
jmp
or
push
ja
jecxz
aad
dec
aad
nop
fs
fidivr
ret
sbb
push
(bad)
adc
loope
ret
mov
jnp
jle
xor
sub
or
jmp
daa
add
(bad)
retf
imul
mov
dec
in
push
js
mov
rcr
cdq
aas
dec
mov
jnp
mov
les
lea
and
push
lahf
mov
push
cmp
pop
enter
push
cmp
and
test
pop
jnp
pop
shl
iret
xor
jg
inc
cld
cmp
sbb
(bad)
jno
aas
inc
ins
pop
xchg
inc
xor
test
fisubr
adc
pop
ror
ja
in
mov
out
or
int
xor
leave
(bad)
push
je
sbb
sahf
out
ins
ret
pop
sub
dec
out
xchg
(bad)
fistp
bound
repnz
add
inc
pushf
jmp
xor
repnz
aaa
fimul
repz
cmp
jle
push
dec
(bad)
es
adc
inc
out
mov
outs
xor
stos
inc
cmp
dec
nop
pusha
adc
or
jb
pop
das
shl
xchg
out
std
test
inc
cmp
push
movs
mov
cwde
ret
mov
into
ret
movs
or
test
cmp
clc
cmp
dec
imul
fild
jae
adc
inc
ficom
pusha
cmp
imul
and
mov
push
shr
into
ja
in
and
jg
dec
gs
test
imul
and
mov
push
ret
sbb
aas
ss
adc
or
jae
and
mov
(bad)
cs
push
sbb
cwde
sbb
gs
mov
mov
xchg
into
mov
adc
jge
dec
mov
jbe
or
sbb
pop
mov
or
adc
shl
and
stos
in
popa
jmp
cmps
imul
push
ror
jb
fcom
int3
cmp
adc
push
repz
sahf
cmp
mov
inc
dec
sub
mov
pop
or
pop
push
mov
add
mov
xchg
fist
jp
xchg
dec
sbb
pop
mov
test
lock
cmp
test
xor
aas
push
pushf
inc
mov
mov
mov
sbb
ror
hlt
lock
mov
fwait
scas
cwde
div
jae
lea
cmp
ror
cmp
outs
inc
or
mov
cwde
or
adc
test
jecxz
scas
rcl
adc
cmp
pop
lea
push
fsubr
jmp
hlt
addr16
lea
dec
cwde
push
push
and
adc
inc
pop
pop
sbb
and
stc
clc
pop
pop
ror
push
call
les
int
retf
fsubr
xor
xchg
and
int3
imul
sbb
xor
sub
pop
mov
or
cwde
jmp
sbb
jmp
or
mov
ror
outs
inc
add
neg
in
sar
out
or
push
push
enter
adc
add
movs
call
(bad)
fcomp
in
fsubr
sbb
ja
das
fidivr
mov
mov
jp
jmp
and
das
push
aam
mov
mov
daa
xor
inc
jmp
lods
jo
in
mov
cmp
sub
jmp
shl
stos
aad
xlat
fst
jb
sub
pop
push
and
scas
out
mov
push
inc
rol
cmps
jp
int3
xchg
jl
mov
rcr
mov
cmp
loopne
jb
and
add
and
lock
nop
aam
mov
imul
push
pop
mov
icebp
xchg
xor
cdq
push
mov
xchg
dec
sub
pushf
movs
cmp
add
nop
cs
lods
iret
add
pop
or
jmp
lock
sub
mov
jne
sbb
mov
ins
and
push
mov
clc
push
outs
int3
aaa
push
jns
sti
stos
int3
sbb
or
jl
sti
outs
ret
in
lods
mov
xor
pop
jge
and
and
ja
pushf
push
enter
data16
sti
xchg
js
lds
pop
(bad)
xor
cmp
push
add
xchg
sbb
xchg
outs
jo
imul
sar
lds
cdq
xchg
or
fldcw
jne
repnz
add
cmp
(bad)
sahf
adc
mov
mov
outs
push
daa
dec
mov
sub
pusha
shr
mov
xchg
fiadd
mov
pop
adc
dec
scas
test
retf
pop
cmps
std
dec
mov
dec
sbb
sbb
jl
retf
mov
call
test
mov
fwait
dec
cmp
push
dec
(bad)
mov
mov
int
loope
add
xor
out
sar
scas
fidiv
repnz
or
add
inc
cmp
and
lds
lods
int
mov
hlt
cmp
loop
dec
jge
shl
lods
dec
ins
movs
cmp
out
add
jb
mov
pushf
ror
xchg
inc
inc
sti
cmps
call
dec
int3
and
and
pop
cmps
movs
add
push
imul
and
out
pop
xor
jo
(bad)
fptan
stc
data16
push
sub
addr16
push
mov
mov
ss
inc
mov
mov
xchg
push
dec
test
inc
retf
mov
jmp
dec
lahf
inc
lock
add
movs
sbb
ss
(bad)
sbb
mov
fcom
test
jmp
jmp
pop
or
loope
push
inc
cmp
cmp
aas
scas
push
cmp
cmp
push
sub
push
push
enter
int3
and
shr
lods
out
jge
mov
xchg
retf
pop
fxch
(bad)
mov
xchg
mov
(bad)
pop
movs
xchg
and
sub
sbb
push
aaa
into
fs
aas
jl
mov
xor
inc
gs
pop
pushf
out
cmp
fwait
in
gs
movs
(bad)
sub
lods
fcom
xor
sbb
cmps
pop
xchg
mov
inc
test
sub
adc
iret
test
or
jecxz
mov
xor
clc
xchg
and
mov
mov
mov
xchg
ror
hlt
scas
xor
jge
scas
lea
fs
arpl
jno
push
(bad)
xor
cwde
cmp
sbb
jecxz
inc
loop
jno
push
or
mov
imul
or
add
popa
mov
cmp
dec
pop
movs
or
cld
jl
movs
cld
out
inc
stos
push
inc
cmps
hlt
xchg
jg
inc
xor
mov
jle
and
xchg
leave
adc
mov
mov
dec
(bad)
fsubr
and
sbb
xchg
and
iret
mov
inc
lock
movs
fdiv
inc
push
mov
push
push
mov
pop
jge
and
push
push
aam
lds
(bad)
fdiv
adc
or
daa
scas
and
inc
mov
sbb
repz
mov
jle
(bad)
pop
pop
pop
mov
rcr
in
cdq
jecxz
xchg
xor
jne
test
ss
xchg
imul
mov
inc
jle
mov
inc
test
(bad)
lods
xor
push
adc
add
cdq
fimul
imul
add
push
adc
cmp
sbb
not
imul
cmp
imul
outs
mov
jb
mov
outs
nop
xor
lahf
in
mov
push
ins
arpl
(bad)
fiadd
sub
sub
ins
jg
lds
jmp
sub
sar
rcr
mov
add
(bad)
xor
adc
inc
xchg
or
in
mov
xor
xor
rol
jecxz
pusha
into
jl
test
mov
icebp
scas
mov
lea
or
sub
mov
adc
mov
push
addr16
mov
mov
fisubr
cmc
mov
mov
mov
jns
pop
in
push
ror
push
fwait
mov
or
xchg
movs
addr16
adc
out
rcl
jmp
mov
cmp
mov
mov
sub
push
mov
shr
movs
in
fidiv
not
or
pop
mov
lahf
inc
dec
outs
data16
pop
retf
adc
aas
sub
hlt
cmp
mov
jb
arpl
imul
div
in
jae
pop
pop
xchg
push
sub
add
dec
push
pop
sbb
mov
xchg
loopne
dec
call
scas
dec
(bad)
leave
imul
test
dec
lods
add
xchg
call
push
popf
cmp
cmp
int
(bad)
loopne
cmps
jne
xchg
ins
aaa
push
test
jp
mov
dec
scas
outs
jp
jp
adc
add
pop
(bad)
inc
popf
sbb
sbb
repnz
div
iret
jne
sar
dec
adc
fidiv
add
mov
mov
dec
xchg
and
daa
ja
repz
or
adc
mov
sub
ins
arpl
int
ds
dec
mov
xor
sbb
out
fild
sub
cmp
cs
imul
sbb
mov
enter
scas
mov
push
lahf
out
jmp
dec
ss
add
popa
les
fistp
(bad)
pop
out
out
and
cmps
js
mov
movs
mov
lock
and
aas
cmps
aaa
adc
pop
lea
xor
mov
dec
pop
les
das
pop
pop
cmps
sar
dec
mov
and
sbb
push
clc
fidivr
or
test
ins
xchg
lds
popa
mov
fcomp
cdq
iret
mov
inc
add
outs
mov
mov
xchg
loopne
xor
ins
loopne
sbb
mov
cmp
inc
data16
outs
popa
push
dec
jns
xchg
idiv
adc
jge
xor
mov
rol
add
in
clc
es
inc
push
cmc
cdq
inc
std
ss
xchg
out
daa
mov
sbb
xlat
xchg
call
mov
push
jno
inc
cmp
pop
cli
and
fs
cmp
dec
push
sub
in
rcr
or
mov
sahf
cmps
cmp
fistp
xchg
cmp
or
pop
dec
cmc
jb
pop
adc
or
add
aas
or
sbb
jb
mov
jae
dec
push
mov
dec
repnz
mov
adc
and
cmc
sahf
jns
xor
push
xchg
mov
rol
ret
pop
stos
cld
pop
call
adc
inc
popa
add
leave
movs
imul
push
call
push
xchg
clc
adc
jge
xor
movs
jne
dec
out
add
mov
push
iret
ja
mov
sbb
or
jecxz
sahf
dec
test
loope
jl
in
pop
hlt
and
pop
mov
outs
(bad)
mov
iret
dec
arpl
movs
aas
push
shl
cmps
(bad)
dec
pop
dec
adc
inc
or
imul
push
fwait
jl
or
jns
cmps
cmp
push
sahf
fsub
xor
jae
mov
nop
(bad)
push
sub
xor
lea
dec
pop
test
inc
cld
or
jecxz
sbb
repnz
fs
inc
sbb
xchg
lods
imul
mov
popf
loop
mov
adc
mov
rcr
xor
inc
cmps
movs
ss
repnz
popa
sub
push
jno
mov
xchg
mov
retf
sbb
in
mov
or
xchg
das
stos
fwait
inc
imul
out
call
pop
lahf
icebp
sbb
jns
xchg
or
cmps
inc
adc
mov
(bad)
dec
sbb
sbb
mov
in
arpl
shl
and
inc
xlat
xchg
cmp
les
and
(bad)
jmp
test
sbb
mov
add
sbb
popf
fs
popa
sub
or
stos
jmp
xchg
frstor
push
jle
ins
jecxz
out
jge
(bad)
lods
ret
inc
and
ret
daa
fisttp
retf
and
mov
adc
mov
mov
or
ins
cmp
xchg
clc
call
xor
(bad)
dec
xlat
outs
movs
jo
add
aaa
push
lds
cdq
pop
inc
ret
jne
lahf
cmps
inc
mov
ins
jno
adc
inc
sahf
ret
aas
pop
jne
mov
or
jo
bound
pop
xchg
inc
sub
cld
xchg
xlat
cmp
cli
and
frstor
cmps
retf
sub
mov
push
pushf
mov
cwde
cmc
cmps
push
push
cmp
test
pop
push
push
fcom
jne
scas
jmp
mov
div
arpl
sbb
inc
mov
daa
rol
int
(bad)
cld
xchg
sbb
xor
add
nop
or
outs
gs
cmp
dec
ret
sbb
scas
lea
lock
loopne
imul
jmp
jmp
xchg
jl
xchg
popf
inc
inc
or
mov
or
xlat
dec
loopne
jns
mov
push
xchg
sar
outs
mov
jg
mov
sub
mov
test
xchg
mov
out
add
cs
int3
mov
loop
movs
pop
mov
inc
xchg
int3
push
push
push
dec
mov
xchg
push
lods
sbb
or
pop
dec
fwait
sahf
mov
jns
(bad)
hlt
adc
ja
push
sub
add
mov
lahf
jle
push
inc
pop
inc
jg
add
sbb
arpl
mov
or
mov
fidivr
ficom
retf
add
repnz
scas
mov
sub
xchg
inc
pop
mov
xor
jl
jge
sbb
retf
jecxz
stc
retf
mov
mov
mov
aam
sbb
mov
cs
cmp
sub
mov
jns
or
call
add
cmp
fisub
fisubr
pop
mov
pop
and
mul
jmp
and
ins
aaa
jbe
(bad)
mov
shr
add
imul
aad
jmp
retf
xor
rcl
js
xchg
cmps
and
xchg
cmp
fnstenv
jno
xchg
mov
scas
movs
lods
mov
mov
mov
dec
push
inc
cwde
fs
mov
or
push
sbb
inc
sub
or
mov
mov
mov
mov
test
adc
jl
addr16
lods
xchg
aad
mov
push
jmp
inc
shl
int3
dec
inc
mov
in
fwait
mov
adc
aam
mov
add
aam
mov
movs
lods
mov
scas
les
mov
scas
in
imul
addr16
mov
xchg
cmp
push
fld
jb
jmp
out
ja
in
call
mov
mov
das
pop
cmp
sub
sbb
inc
stos
out
and
ss
imul
out
popf
adc
jle
daa
les
adc
aam
mov
push
inc
sub
sub
outs
jge
imul
sub
add
pushf
test
xor
aad
fs
mov
mov
cwde
loope
nop
loopne
xor
mov
mov
icebp
fwait
adc
pop
pop
mov
test
retf
push
ds
push
aaa
inc
cwde
or
inc
test
cmp
pop
imul
test
hlt
sbb
mov
cmp
gs
addr16
xchg
push
jns
imul
repz
enter
sti
dec
sub
cmps
cdq
adc
inc
pusha
and
inc
inc
mov
sbb
mov
push
jmp
lods
cwde
sbb
addr16
fnstenv
lahf
mov
xchg
repnz
cmp
xchg
clc
and
ror
push
fiadd
sub
shr
into
jp
pusha
jmp
stos
(bad)
test
sar
pop
hlt
jl
jnp
mov
xchg
lods
xor
dec
icebp
test
addr16
sbb
imul
das
pop
sahf
cmps
lea
cli
xor
rcl
(bad)
xchg
cmp
popa
mov
fld
cmp
movs
and
mov
and
pop
outs
push
in
push
in
adc
popf
das
push
add
(bad)
hlt
test
jmp
popf
lods
rol
dec
ja
nop
jp
leave
mov
jno
xor
jne
dec
jbe
and
fisub
xor
imul
xchg
or
add
adc
or
jecxz
pop
inc
in
fsubp
ja
adc
arpl
jae
idiv
mov
mov
pop
and
aas
mov
and
neg
ja
(bad)
jno
idiv
push
out
test
push
inc
mov
sub
push
jge
cmp
call
loopne
sub
dec
push
ffreep
and
xchg
cwde
and
mov
push
lahf
lock
xchg
scas
fs
int3
jmp
and
mov
sub
jmp
pop
jbe
sub
xor
or
or
(bad)
cmp
arpl
cmp
xchg
mov
rcl
sbb
sub
mov
rcl
ss
pop
das
test
not
leave
call
lock
cmp
pop
xor
fdivr
add
enter
std
inc
sbb
sbb
jmp
cld
popa
jle
adc
sub
mov
adc
xor
pop
ja
xor
fcomp
mov
pop
mov
sbb
cmps
or
and
fs
mov
adc
pop
aas
jp
fcomp
int
stos
or
add
(bad)
lock
mov
push
push
xchg
inc
retf
push
or
or
xor
test
sar
jbe
(bad)
xor
or
mov
xchg
push
(bad)
or
cli
dec
pusha
ss
push
cmp
test
adc
fcmovbe
int
jmp
mov
loop
jne
cmp
cmc
mov
fisttp
mov
test
mov
pop
nop
jp
mov
out
imul
je
mov
(bad)
mov
cmp
sbb
pop
adc
aad
cdq
jle
inc
iret
sbb
inc
add
cmp
cld
cmc
lock
xor
and
(bad)
lods
in
aad
sub
out
(bad)
push
rol
xor
or
mov
adc
fimul
push
imul
test
pop
popf
imul
test
mov
mov
sti
mov
mov
(bad)
jge
inc
xchg
dec
xor
fxch
mov
ret
add
jo
in
imul
mov
(bad)
pop
data16
sbb
fcom
ficom
jb
call
or
push
cld
jmp
jne
xchg
std
test
or
test
inc
push
cli
bound
jbe
(bad)
jp
movs
iret
lds
sahf
pop
sub
xor
xor
test
or
dec
cwde
adc
aas
mov
out
movs
mov
xor
jno
sub
aam
dec
pop
fidiv
stos
inc
pop
clc
frstor
jbe
xlat
mov
cmp
inc
xchg
loop
xchg
imul
add
aam
fsubr
push
push
and
xlat
cmp
out
sti
call
aaa
(bad)
movs
stc
mov
loope
lods
test
lock
(bad)
mov
adc
and
movs
inc
push
add
outs
(bad)
std
out
in
shr
xor
fldcw
outs
mov
lods
popa
cmp
ja
test
add
sub
mov
add
int3
(bad)
pop
icebp
dec
out
in
out
icebp
xor
or
jp
mov
or
fcomp
test
xchg
mov
cli
fild
or
push
and
cs
repz
mov
mov
pushf
pop
into
outs
xchg
or
sbb
jmp
add
xchg
mov
shl
ins
test
push
lahf
or
mov
push
push
fist
xor
in
mov
jno
out
xor
dec
dec
xchg
out
(bad)
xchg
or
dec
jbe
sbb
sub
retf
jmp
dec
mov
inc
lods
xchg
mov
fnsave
mov
js
add
out
mov
xor
adc
or
pop
adc
push
mov
adc
stos
lods
push
or
push
test
inc
push
pop
in
or
cmp
(bad)
(bad)
cld
and
dec
add
xchg
rcr
popa
ror
cmps
xchg
lods
in
push
call
adc
movs
les
adc
movzx
mov
ficom
push
jmp
push
jge
lahf
push
push
shl
cmp
push
mov
push
cdq
int3
ss
and
dec
cmps
dec
cmps
bound
(bad)
out
iret
daa
cld
imul
sub
xchg
arpl
scas
aas
ins
push
cld
mov
sub
aas
movs
pop
stos
neg
pop
pusha
mov
push
mov
mov
fidivr
mov
cs
call
mov
xchg
mov
sbb
dec
and
fstp
mov
jl
xchg
push
shl
enter
jnp
xlat
pop
fsub
inc
std
std
adc
repnz
cdq
jmp
push
mov
adc
mov
fld
and
sbb
addr16
out
jg
(bad)
or
jecxz
sbb
cmp
and
mov
pop
cwde
ja
xchg
mov
sar
cmp
jo
dec
add
xor
and
xor
and
(bad)
mov
push
cmp
(bad)
ret
push
dec
shl
iret
out
call
fsubr
js
fild
sub
sahf
push
(bad)
ret
fwait
pop
jmp
rcr
mov
mov
add
retf
mov
pop
inc
xor
in
ins
push
push
cmp
fcmovne
cmc
pushf
ret
cmp
pusha
retf
ja
pop
pop
pop
js
dec
fisttp
and
ds
push
xor
cmc
adc
cmps
dec
imul
fcom
mov
sub
jbe
push
js
mov
imul
jmp
out
mov
lea
xchg
stos
movs
jne
test
je
sbb
jg
ins
lahf
mov
imul
pop
(bad)
jb
and
cmc
loope
and
pop
sbb
push
or
into
lods
xchg
int
stos
enter
ins
adc
cs
push
retf
adc
cmp
ja
in
mov
inc
mov
push
mov
mov
imul
in
push
mov
icebp
loope
xchg
push
xchg
je
(bad)
jl
push
and
adc
call
in
push
add
out
cs
push
adc
sub
mov
inc
push
mov
mov
out
fld
mov
jo
push
stos
or
add
xchg
int
daa
mov
aam
push
push
cmp
popa
adc
(bad)
push
test
fs
adc
cmps
and
call
in
in
iret
popa
js
mov
ja
push
jb
pop
mov
xchg
xchg
imul
dec
lds
dec
enter
in
cmps
sbb
inc
pop
or
(bad)
sub
push
fild
leave
add
cmp
test
dec
repnz
and
arpl
xor
mov
dec
mov
adc
dec
arpl
xchg
jmp
push
and
xor
dec
stos
gs
nop
jl
js
mov
dec
or
mov
ret
je
iret
sub
int
lods
xlat
pop
test
int
(bad)
rcr
sbb
lods
ins
push
mov
into
test
std
mov
adc
lods
sbb
rcl
or
sbb
xor
ret
push
je
cmp
std
mov
xor
outs
(bad)
int3
test
addr16
ret
jbe
mov
fldenv
mov
aam
add
je
jmp
gs
movs
mov
mov
rcl
dec
cmp
push
neg
adc
movs
mov
lds
sbb
mov
mov
gs
xchg
adc
cmp
or
mov
(bad)
not
inc
retf
icebp
pusha
loopne
stos
test
or
repnz
fdivr
rcr
cmps
in
jl
jecxz
inc
pop
shr
or
xor
icebp
xor
fild
jb
popa
shl
test
out
inc
mov
je
dec
xchg
loope
or
clc
sbb
jmp
das
pop
push
ja
test
jmp
(bad)
mov
mov
outs
in
cwde
lods
out
imul
push
out
ret
mov
xchg
sti
adc
out
(bad)
pop
jae
mov
test
loop
clc
ins
add
mov
dec
jl
cmp
sub
mov
test
hlt
fistp
add
xchg
cmp
fs
(bad)
dec
push
lahf
pop
ja
shufps
mov
or
in
xor
mov
mov
or
loope
arpl
lds
push
xor
cli
dec
out
mov
inc
jp
push
movs
cmp
int
call
and
sbb
add
pop
pushf
add
pop
clc
lea
or
std
add
ja
arpl
bound
sbb
mov
test
inc
clc
mov
mov
loope
xor
test
push
lods
add
cld
aad
iret
ficomp
cmps
pushf
jne
adc
(bad)
out
xor
push
ins
and
rcr
aaa
lods
icebp
or
in
ret
dec
mov
xor
(bad)
pop
fnstenv
mov
mov
add
sub
inc
sbb
jmp
push
bound
or
cmp
aad
push
lahf
in
push
into
and
ret
dec
or
int
xchg
mov
cli
scas
xor
test
ret
adc
cmp
or
mov
pop
(bad)
test
outs
mov
cwde
(bad)
mov
in
and
(bad)
into
adc
dec
addr16
loop
cmp
jno
cmp
dec
xchg
outs
jno
out
movs
cmp
push
popa
adc
(bad)
js
loope
imul
fistp
int3
ret
imul
jecxz
pop
repnz
cmp
dec
fimul
adc
fs
fisub
ret
pop
(bad)
out
test
sub
(bad)
dec
jg
cld
adc
xor
repnz
pusha
push
xor
ins
push
push
inc
not
aas
nop
aad
not
push
jb
rol
dec
and
fcmovb
xchg
mov
and
and
pop
mov
and
jns
sbb
cmps
hlt
cmp
adc
push
cmc
bound
inc
call
xor
jle
cmps
mov
scas
xor
mov
sti
shl
xchg
sub
in
rcl
pushf
test
daa
xor
shl
and
imul
xchg
inc
inc
sti
sahf
pop
jle
loop
xchg
mov
fistp
ds
pop
jno
mov
inc
daa
lahf
ficom
mov
sahf
xor
or
inc
mov
outs
and
cmc
mov
dec
pusha
dec
(bad)
xor
mov
pop
xor
sub
inc
jp
fs
rol
aad
jbe
mov
mov
inc
call
mov
cdq
mov
lock
shl
dec
adc
test
jno
stc
dec
movs
neg
fisttp
ror
fsub
rcr
shl
or
pop
xchg
js
jnp
and
mov
or
dec
shr
gs
repnz
orps
jmp
xor
jg
push
pop
retf
pop
sbb
mov
or
and
test
mov
push
dec
jle
lea
scas
xor
sub
push
pop
push
pusha
push
enter
inc
ss
out
js
pop
cld
push
inc
sbb
mov
xchg
push
pop
inc
mov
lods
and
xor
aad
je
ds
outs
and
pop
xchg
cdq
sub
jg
cmc
or
call
mov
push
cmp
pop
fidiv
push
sar
xor
in
dec
out
pop
ret
sbb
push
das
pop
clc
sub
xor
or
pop
sahf
mov
pop
push
mov
fidiv
data16
pushf
sub
mov
xor
in
cmp
ret
aas
mov
stos
and
frstor
mov
lds
or
inc
xor
pop
dec
and
call
jmp
pop
cmc
mov
mov
inc
cmp
push
jge
xor
int
inc
push
fwait
mov
sub
sti
sbb
sbb
xor
scas
or
lods
ret
mov
nop
push
push
adc
and
xchg
cmps
cmp
out
jne
pop
shl
mov
dec
xchg
pop
mov
jmp
mov
jl
pushf
rcl
cmp
dec
push
retf
xchg
mov
std
nop
inc
inc
inc
xor
adc
dec
adc
retf
nop
std
sub
cmp
ss
call
pop
jbe
movs
sub
adc
adc
sbb
loope
and
rol
cmp
adc
sub
cmp
in
outs
xchg
js
outs
mov
xor
jmp
div
jns
sub
push
mov
pushf
lods
mov
ror
rol
jns
pop
dec
add
out
push
out
pop
popa
fiadd
mov
xor
aaa
xchg
mov
shr
jmp
iret
xchg
sbb
inc
pop
ins
aad
fs
xor
cld
mov
aas
out
jge
dec
and
mov
pop
icebp
outs
cdq
mov
or
clc
sahf
sub
pop
sbb
cmp
pop
pop
aam
push
mov
pop
push
imul
push
or
sbb
dec
mov
or
(bad)
test
stos
sbb
jnp
mov
ss
sbb
sti
mov
mov
mov
jge
pop
data16
out
xchg
loop
xor
sub
movs
sub
inc
arpl
pusha
cs
add
iret
cli
mov
sbb
fwait
mov
sbb
rcl
lods
sbb
test
inc
movs
rcr
xchg
mov
(bad)
cmp
adc
adc
push
and
sub
push
pushf
rcl
and
push
lods
mov
pop
pushf
dec
inc
or
pop
std
cmp
pop
sub
sub
cmps
mov
cmovbe
mov
sub
dec
xor
mov
pop
es
sbb
aaa
int3
(bad)
fst
and
inc
sub
fnstcw
out
lods
fbstp
adc
cli
and
sar
out
mov
mov
adc
lea
sti
das
xor
add
(bad)
aam
xor
jo
mov
das
push
addr16
dec
ds
xor
rcr
sar
pushf
or
int
cld
mov
xor
(bad)
xor
fs
sbb
pop
xchg
pop
ret
pop
sbb
in
mov
xor
or
jmp
(bad)
mov
push
inc
fisub
rcr
lock
push
fdiv
push
xchg
loopne
sub
shr
inc
push
jb
mov
cmc
outs
not
pop
sbb
pop
mov
icebp
call
in
div
mov
cld
mov
jns
shl
imul
hlt
adc
hlt
pop
pop
loope
pop
cmc
imul
data16
add
or
retf
push
or
mov
xor
je
(bad)
mov
sub
dec
lods
jge
gs
or
pop
jp
mov
push
and
(bad)
shl
xor
sbb
mov
loop
fsubr
inc
pop
adc
stos
stos
jnp
addr16
fisubr
jl
cli
in
sbb
push
scas
cld
add
xor
xchg
xchg
imul
mov
sbb
mov
mov
mov
lods
shl
adc
stos
mov
ret
xchg
dec
mov
(bad)
mov
add
mov
and
jmp
fild
xchg
push
in
and
xchg
cmp
std
fidiv
mov
jp
or
sti
push
rcr
dec
jecxz
inc
aaa
xlat
cmps
repz
fistp
js
lds
jp
mov
mov
xor
add
dec
fistp
fisub
enterw
xchg
ins
in
stc
sbb
adc
pop
stc
fdiv
jmp
fimul
sub
dec
sbb
sahf
mov
mov
dec
sub
sbb
dec
push
fstp
lahf
sbb
mov
addr16
push
test
cmp
cmp
add
loope
mov
push
push
push
sbb
stos
sub
inc
xor
mov
ins
push
aad
lock
jmp
inc
fs
inc
aaa
cmp
or
fmul
call
ror
xor
ret
xchg
bound
data16
and
push
fs
or
clc
mov
or
out
jge
add
ss
xor
cmp
ret
clc
loopne
in
loopne
adc
out
or
sub
inc
mov
retf
jl
hlt
cmp
int3
call
mov
mov
test
pop
adc
push
stos
scas
stos
push
fnstsw
push
outs
xchg
adc
push
sub
push
dec
pop
neg
pop
call
mov
(bad)
push
cmp
inc
popf
and
sub
je
addr16
dec
mov
xor
sub
or
jne
and
mov
jmp
add
adc
xor
inc
push
or
sahf
in
ss
test
clc
add
mov
dec
xor
shl
out
pusha
mov
xchg
aam
dec
mov
mov
in
fnstsw
scas
loope
fucomp
xor
mov
and
shr
mov
mov
add
mov
pop
outs
cmps
js
iret
pop
dec
dec
into
fiadd
jg
addr16
int
push
xor
ret
or
(bad)
jbe
mov
data16
lahf
(bad)
xchg
mov
movs
lds
xor
sub
retf
and
fistp
les
xor
mov
dec
add
push
cmp
inc
cmp
(bad)
into
in
clc
(bad)
adc
push
outs
retf
into
(bad)
shl
inc
add
adc
xor
add
stos
aaa
adc
add
inc
inc
out
test
cmps
repnz
call
sbb
inc
cmp
imul
inc
add
sbb
push
or
mov
sub
adc
jge
pop
jno
shl
add
mov
sub
jo
ret
outs
or
std
sbb
jl
shl
pop
sub
data16
push
add
adc
jne
push
lock
in
inc
dec
xchg
cmps
pop
ds
xchg
sbb
push
push
adc
adc
test
test
jo
jo
jno
pop
out
jp
jae
into
rol
fsub
ins
imul
outs
push
xchg
pushf
scas
test
mov
and
mov
pop
push
cld
shl
mov
je
add
fdiv
test
inc
cmp
pop
inc
fbld
imul
cli
push
adc
sub
mov
scas
dec
add
fcomp
(bad)
std
stos
jno
test
cli
mov
jno
push
mul
or
pop
push
pop
arpl
dec
dec
adc
fmul
and
jle
inc
xor
sbb
inc
inc
js
out
pushf
add
fst
out
adc
je
sti
icebp
push
push
pop
mov
xchg
out
pop
shl
add
and
and
xchg
es
lahf
mov
mov
mov
je
xchg
dec
cld
dec
fs
and
int3
inc
xor
outs
mov
dec
test
lods
bound
xor
xor
(bad)
jp
shl
fadd
cmp
sar
call
fmul
sub
pop
shl
mov
pop
daa
inc
(bad)
ins
jp
in
xor
xchg
(bad)
jbe
sub
fidivr
ret
jae
les
xor
pop
int
test
inc
scas
fnsave
imul
das
gs
test
push
ss
aam
in
cli
aam
mov
movs
cwde
jl
std
sub
es
jne
stc
clc
fnstsw
pop
cld
dec
call
mov
dec
xor
cmp
mov
int
fcomip
je
jle
repnz
jg
cdq
mov
fidiv
jecxz
mov
jnp
fadd
popf
cdq
jl
sbb
add
jbe
ror
shl
cmp
and
leave
add
lods
push
icebp
stc
test
cdq
and
cmp
in
cs
mov
sub
pop
push
adc
cmc
fcmovnu
sbb
push
mov
pop
sahf
cmps
or
mov
es
push
or
mov
mov
cmp
pop
aas
mov
or
into
mov
jle
sub
jne
stc
stc
shr
test
pop
xchg
mov
out
mov
mov
aam
(bad)
mov
aad
or
add
sbb
inc
data16
cmp
idiv
stc
cs
jnp
cmp
adc
adc
cmp
shr
pop
in
push
fs
adc
adc
sbb
sti
push
sbb
push
sbb
inc
dec
rcr
sbb
les
aas
bound
leave
push
idiv
jecxz
ret
mov
or
icebp
mov
cmp
jg
and
das
loope
(bad)
adc
push
(bad)
inc
fistp
mov
sbb
adc
out
loopne
pop
sar
and
test
ficomp
cld
pop
xchg
cmp
scas
iret
push
jbe
test
outs
or
push
xor
imul
lods
jnp
aad
jne
ds
mov
push
dec
push
mov
icebp
aam
add
cli
enter
fimul
add
xchg
inc
adc
xchg
dec
mov
mov
sub
mov
xor
jne
mov
mov
and
test
pop
pop
inc
int
sub
cmp
cmp
in
pusha
sbb
mov
and
leave
inc
sbb
mov
or
(bad)
fcomp
cmc
sub
fimul
mov
add
mov
fnstsw
ins
sti
cmp
mov
inc
xchg
out
or
sbb
fs
nop
mov
jmp
in
mov
jl
and
rcl
imul
xchg
sbb
test
cmp
push
lahf
enter
call
mov
pop
ret
jbe
and
cmp
retf
or
xchg
ficomp
dec
sbb
bound
push
pusha
dec
mov
retf
dec
retf
out
xor
dec
retf
fstp
xchg
and
mov
cmp
adc
cmps
pop
int
push
enter
and
cmc
daa
scas
mov
imul
jg
mov
dec
mov
jle
repnz
jp
push
jge
aaa
ja
stos
into
or
pushf
imul
and
or
pusha
ret
mov
add
pop
sbb
sub
shl
dec
gs
test
mov
pusha
or
out
cmp
arpl
xchg
push
xor
dec
cmp
icebp
test
xchg
loopne
mov
scas
mov
(bad)
pop
or
push
aam
pop
bound
pop
ror
sub
aas
jno
(bad)
push
ins
fiadd
push
aad
jnp
aaa
adc
rol
cmp
aam
or
loopne
xchg
jo
loop
ficomp
rcr
gs
dec
jmp
imul
pop
add
sub
mov
or
in
cwde
sub
cmps
int3
xchg
xchg
pop
sbb
pop
jp
aaa
inc
gs
fcomp
in
or
fild
(bad)
jns
stos
leave
mov
in
inc
and
jo
in
push
pop
ret
stos
dec
add
xchg
out
nop
(bad)
js
pushf
test
sbb
in
mov
shl
inc
aas
in
cmp
inc
fistp
inc
inc
xchg
mov
xor
ins
xor
sbb
cmps
adc
cmp
mov
lds
iret
fwait
dec
inc
test
cmp
jecxz
add
aaa
rol
push
popa
inc
fnstenv
(bad)
xor
push
pop
retf
call
scas
inc
outs
mov
bound
call
xchg
cmp
or
scas
xor
cli
inc
push
dec
add
add
lds
cmp
test
clc
inc
inc
in
scas
mov
lock
mov
(bad)
es
adc
push
adc
jbe
add
xchg
fiadd
fild
or
adc
clc
sbb
call
xchg
dec
sti
(bad)
in
jmp
jbe
(bad)
fcmovbe
push
mov
and
loopne
or
cmc
into
lods
push
std
sub
or
loope
lods
movs
jg
dec
je
aad
add
fsubrp
(bad)
xchg
repz
sub
adc
sbb
add
ret
aam
sub
aad
pop
jno
or
leave
enter
mov
xchg
int3
sbb
xchg
adc
jno
mov
leave
imul
mov
call
nop
sbb
ins
push
sar
push
or
mov
leave
pop
mov
mov
inc
(bad)
mov
mov
sub
and
ret
movs
jmp
mov
ins
jmp
dec
sub
call
adc
mov
inc
mov
pushf
clc
in
aam
push
retf
enter
xor
lea
push
out
xor
mov
sbb
jmp
adc
sbb
or
mov
adc
loopne
aas
jb
cmp
popf
aad
dec
xor
adc
popf
dec
(bad)
fbstp
fld
cdq
mov
or
mov
xor
shl
pop
mov
jb
retf
xchg
mov
add
mov
or
add
stos
inc
inc
sub
and
jns
mov
into
jno
std
jg
rcl
in
out
inc
test
fs
outs
inc
mov
or
iret
cs
popa
inc
fdiv
arpl
stos
imul
sahf
loopne
retf
cmp
dec
scas
int
cmp
xchg
ds
repz
mov
hlt
sahf
cld
sti
nop
ds
sar
cmp
mov
dec
outs
jl
push
push
out
xchg
push
mov
(bad)
aas
stos
lea
and
shl
fadd
fadd
rcr
imul
pop
jecxz
(bad)
dec
inc
stc
daa
xor
cli
push
std
daa
mov
adc
cmp
pushf
mov
mov
jbe
xchg
jg
(bad)
sub
aad
cmp
in
inc
inc
push
addr16
mov
add
xchg
sbb
test
ds
das
ss
mov
adc
inc
imul
cmp
adc
cwde
mov
add
ins
sub
xor
pop
push
cwde
mov
and
bound
rol
sub
xchg
sti
mov
pop
lea
sbb
aam
pop
fidivr
cmp
stc
and
test
test
stc
dec
sar
enter
jge
jbe
enter
jecxz
adc
lea
ret
hlt
and
ss
adc
push
mov
cs
dec
dec
pop
enter
jns
mov
cli
hlt
mov
stos
jne
sbb
retf
icebp
add
inc
mov
scas
and
and
xchg
adc
cmps
inc
and
sub
pop
loopne
das
xchg
icebp
push
ret
and
jnp
sahf
cmps
mov
dec
xor
push
mov
mov
push
push
inc
sub
jmp
and
xchg
mov
test
sar
inc
mov
int3
je
pusha
sub
cmp
push
mov
sar
pop
stos
or
nop
adc
add
cmc
mov
icebp
fstp
pop
retf
pop
push
cmp
es
call
pop
lods
outs
or
adc
mov
dec
(bad)
(bad)
adc
cmp
sub
iret
pushf
and
retf
fs
xchg
lds
lock
clc
data16
add
(bad)
jae
jl
rol
movs
ja
push
and
(bad)
push
lods
push
stos
shr
outs
cwde
icebp
lea
xor
jo
bound
mov
sub
push
cmp
xchg
push
dec
xchg
pop
jb
sbb
adc
push
shl
fwait
dec
sub
fcmove
dec
stos
pusha
push
ss
loop
xchg
imul
push
std
xor
lods
ret
(bad)
dec
loope
push
imul
and
sti
mov
mov
push
push
fwait
dec
dec
xchg
mov
addr16
push
adc
call
sti
ret
popa
sahf
je
and
adc
sbb
add
dec
sar
in
out
pop
pop
cmp
iret
dec
adc
in
pop
in
mul
add
in
cld
ja
mov
mov
std
call
add
push
inc
out
jl
enter
sub
ret
and
shl
pusha
sar
xchg
in
sti
mov
arpl
int
sbb
add
rcl
mov
inc
xchg
mov
xor
jb
xor
sub
icebp
pop
scas
add
aas
push
pusha
jl
xchg
popa
xchg
add
dec
xor
imul
jle
dec
shr
mov
inc
mov
stos
mov
repnz
jne
(bad)
push
xchg
jo
mov
add
in
das
call
xchg
movs
gs
mov
and
mov
cmp
mov
outs
jg
dec
mov
cmp
xchg
sbb
sub
lea
xchg
or
jecxz
push
mov
cmc
test
xchg
jmp
add
xor
retf
cmp
in
dec
jge
inc
sar
shl
push
mov
aam
into
fisub
mov
xchg
fdiv
loope
or
ror
sub
and
adc
ins
mov
div
mov
in
push
popf
sub
sti
leave
jge
(bad)
sub
mov
rol
sbb
hlt
rcl
fwait
jmp
aaa
mov
out
pop
dec
sub
imul
and
mov
add
adc
icebp
out
add
mov
push
jmp
retf
adc
pusha
ins
in
push
inc
sbb
inc
cwde
pusha
fidivr
loopne
xor
fsub
sbb
mov
shl
sbb
lods
dec
and
daa
lea
daa
es
fimul
xchg
mul
(bad)
mov
and
and
ja
or
popa
or
mov
jns
xchg
aam
xor
dec
out
test
adc
cmp
cmps
or
cmp
ins
mov
cwde
stos
cmp
and
or
add
arpl
inc
sti
cmp
outs
rcl
jb
jmp
push
add
test
dec
jnp
leave
(bad)
popf
inc
fld
jp
jge
daa
dec
ins
cli
ret
aam
int3
cmp
adc
sti
push
sbb
xor
into
push
mov
adc
clc
adc
jp
xor
adc
mov
aas
sub
call
mov
aas
mov
pop
sbb
sbb
movs
fmul
or
cmp
sub
aad
aaa
cmp
call
fdiv
mov
mov
xchg
stos
fist
inc
cli
cmps
adc
cmp
cmp
pop
test
repz
lods
sub
and
pop
(bad)
ins
nop
loope
sub
adc
pop
ja
inc
mov
and
mov
mov
clc
inc
lds
sub
xchg
mov
xchg
push
pushf
add
in
bound
mov
ins
and
and
test
(bad)
std
mov
sub
pop
mov
shr
fwait
adc
dec
out
xchg
lds
aaa
fst
shr
bound
sbb
mov
(bad)
xchg
loop
or
or
test
jge
je
rcr
pop
xchg
and
adc
or
pop
cmp
pop
popa
push
sub
add
pop
dec
loop
mov
sub
cmps
jbe
fisttp
inc
cmc
inc
test
jecxz
scas
jmp
xor
cmp
int3
out
cmp
imul
jl
les
or
push
add
ins
lds
add
jno
xchg
push
sub
cmp
in
scas
and
cwde
pop
out
int3
pusha
js
xlat
jo
jp
imul
mov
ins
cmp
nop
cmps
imul
push
into
neg
imul
mov
add
imul
and
(bad)
mov
pop
fldcw
mov
mov
push
addr16
and
arpl
(bad)
cmps
fbld
inc
or
test
adc
out
dec
das
inc
shr
xor
ja
or
xchg
rcr
push
icebp
ss
icebp
push
push
and
pop
lock
ins
mov
js
xchg
xchg
cld
cmp
fistp
and
xchg
adc
jg
shr
sub
ds
pop
retf
ins
or
pop
push
push
sub
(bad)
jns
or
out
jbe
jecxz
imul
xor
jb
mov
test
mov
mov
daa
adc
add
nop
fdivr
pop
mov
sub
les
inc
ja
mov
and
cmp
xlat
pop
repnz
bound
xlat
pop
xchg
in
jns
mov
xchg
fbstp
xchg
or
pop
cmp
add
dec
shl
cmc
mov
inc
fisttp
mov
sub
ins
dec
xchg
pop
jg
inc
jecxz
sub
dec
jb
push
sar
push
sar
xlat
icebp
fisubr
(bad)
adc
push
in
xchg
loop
test
fcomp
push
dec
in
dec
stos
sahf
mov
dec
ja
dec
inc
add
(bad)
call
sub
stc
xchg
xor
mov
xchg
leave
xor
fsub
dec
or
inc
ds
sbb
test
leave
lock
adc
js
retf
lods
dec
fistp
xor
sub
mov
mov
and
in
in
shl
ja
loop
or
daa
or
mov
mov
push
out
fadd
push
jg
out
lea
jns
xor
inc
in
stc
ror
aas
jmp
std
shl
pop
mov
ins
push
mov
sub
imul
xchg
sti
(bad)
imul
add
xchg
jno
xchg
or
push
cmp
mov
push
mov
int3
dec
(bad)
or
leave
mov
mov
daa
aad
js
mov
fist
or
cmp
pop
into
test
mov
sub
(bad)
je
push
(bad)
(bad)
in
jle
aad
inc
dec
sub
popf
es
push
aaa
push
cld
hlt
cmp
cmp
out
(bad)
test
out
xor
movs
loope
fs
add
aaa
call
(bad)
in
mov
dec
ficomp
mov
aaa
into
in
xor
sbb
clc
xor
jb
pop
or
gs
xor
mov
mov
pop
(bad)
out
pop
mov
xor
mov
in
add
xor
push
clc
test
fisub
mov
jecxz
mov
daa
scas
mov
ficom
add
in
inc
stos
xchg
jl
das
inc
mov
es
xor
ins
enter
test
(bad)
pop
add
pushf
movs
les
das
push
and
mov
lods
sub
dec
xlat
jle
adc
sub
xchg
ja
adc
stc
mov
or
wbinvd
pop
and
mov
fs
xchg
lahf
or
cmps
sar
jmp
and
xchg
add
inc
cli
outs
cmp
sub
retf
cmc
movs
xor
iret
mov
mov
jmp
or
and
test
aas
shl
lds
(bad)
xchg
adc
jae
aas
loope
scas
cdq
or
push
dec
pop
sbb
loopne
mov
adc
enter
dec
fucomi
jno
gs
ins
and
sar
cmps
in
repnz
pop
lods
and
movs
in
in
(bad)
mov
pushf
lahf
mov
gs
pop
xchg
cmp
dec
sub
xchg
bnd
fadd
ror
push
xor
jle
and
mov
mov
lea
pushf
and
xchg
pop
and
in
and
or
add
mov
sbb
scas
dec
xor
fstp
jmp
movs
sbb
jle
test
and
pop
out
ds
mov
out
jb
mov
dec
jb
and
dec
adc
jne
adc
mov
shl
out
xchg
cmp
cmp
or
repz
jo
jecxz
cmp
xchg
mov
daa
lds
(bad)
push
jae
push
dec
cli
and
movs
ins
into
mov
mov
xor
loopne
pop
adc
icebp
iret
ret
xor
aam
push
addr16
sbb
inc
ss
sbb
in
fist
ins
cld
or
cmp
lock
push
jecxz
ror
cvttps2pi
in
pop
lods
(bad)
sbb
cmp
sub
jbe
push
retf
aad
inc
(bad)
mov
pop
cmp
sub
xchg
in
fld
cmp
adc
xchg
stc
addr16
add
lds
mov
xchg
outs
not
das
popa
push
jbe
jae
cwde
loop
xchg
ret
dec
sbb
mov
pop
mov
cmps
clc
cmc
and
xchg
mov
cmps
out
mov
mov
call
jmp
cmps
pop
fldcw
sbb
sub
int3
mov
push
fdivr
jle
out
ret
push
adc
mov
jne
leave
(bad)
es
in
mov
mov
leave
mov
pusha
data16
aad
sar
leave
add
inc
ja
pop
pop
push
addr16
mov
stos
aas
in
fmul
loopne
sub
in
popa
jne
into
hlt
call
push
add
pop
hlt
rcl
pop
adc
jo
xchg
stos
mov
push
cmps
pop
fild
mov
sbb
in
mov
adc
inc
xor
emms
sbb
(bad)
sub
mov
cld
cmp
cs
into
jo
cmc
or
xchg
pop
scas
gs
aaa
ins
push
iret
aaa
and
pop
sbb
xchg
(bad)
fnstsw
nop
cmp
or
out
xchg
xlat
test
nop
adc
jmp
cmps
out
inc
adc
cmc
push
adc
(bad)
fsub
fwait
pop
cli
adc
cmp
cld
xor
inc
mov
jae
imul
cmp
inc
jnp
jae
add
push
jo
sub
test
aad
lahf
and
shl
repz
dec
cdq
imul
stos
inc
scas
call
clc
icebp
(bad)
mov
imul
xchg
hlt
or
jp
mov
mov
movs
xor
in
jae
mov
mov
out
mov
je
in
mov
jl
aas
xor
sbb
inc
addr16
jl
push
mov
pop
movs
ds
pop
fidiv
call
enter
add
aad
call
lods
int
stos
retf
xchg
fdivr
adc
add
mov
call
(bad)
inc
mov
or
adc
mov
push
adc
ins
xchg
jb
in
loop
pusha
iret
call
add
sub
push
mov
or
dec
scas
rcr
stos
mov
test
sbb
pushf
adc
adc
inc
sub
in
fstp
fstp
sbb
adc
push
test
xchg
mov
ja
mov
pop
sub
mov
lahf
mov
pop
lock
and
retf
dec
cmp
push
sahf
sar
clc
jp
inc
ud1
jae
out
js
pop
mov
sub
sub
ret
cmps
jmp
les
leave
stc
or
mov
lock
pop
(bad)
pop
ret
cmp
sbb
sar
or
sub
sub
ins
lock
or
bound
cmp
adc
jecxz
mov
ds
ror
push
push
ja
xchg
add
inc
outs
mov
pop
test
jmp
push
(bad)
or
(bad)
loopne
mov
mov
hlt
pop
sbb
push
popa
test
sbb
or
movs
xchg
ss
inc
push
dec
cmp
repnz
xchg
sub
cmp
call
int
scas
add
push
mov
mov
mov
fdivr
xchg
loopne
ret
push
hlt
mov
(bad)
je
sub
mov
test
or
fld
in
pop
ins
sub
mov
and
daa
lahf
test
sahf
mov
xchg
jp
sti
js
cs
leave
push
mov
test
fisttp
aam
and
sub
mov
cmp
xor
mov
or
adc
sub
xor
add
es
lahf
scas
repnz
pop
lea
dec
jmp
inc
sub
dec
mov
xor
dec
iret
pop
xchg
and
cwde
out
jmp
xchg
push
jnp
mov
iret
push
inc
or
dec
mov
retf
or
arpl
lock
repnz
pop
fiadd
sub
xchg
mov
stos
test
out
test
cmp
adc
push
imul
stos
cwde
dec
pop
fist
bound
push
fdiv
xor
sub
mov
push
outs
dec
daa
xlat
pusha
sbb
test
or
fs
xchg
(bad)
pop
jns
push
(bad)
repnz
les
jmp
cmps
mov
inc
xchg
jmp
push
bound
xchg
test
lea
fnstenv
inc
and
call
ret
xchg
mov
pop
in
mov
cmps
xor
cmc
inc
test
cli
test
(bad)
mov
jae
fldcw
cmp
add
or
out
mov
stos
dec
jbe
cmp
inc
in
sbb
adc
mov
icebp
into
movs
ss
loope
xchg
je
xchg
sbb
out
dec
xchg
mov
les
push
xor
fidivr
inc
mov
xchg
into
jge
aaa
cmp
lods
mov
repnz
pusha
iret
jo
sti
repnz
in
cmp
adc
jl
push
dec
mov
xchg
add
fdivrp
aas
fld
add
sub
jp
bound
and
sti
mov
push
pop
fidiv
dec
jbe
out
dec
sahf
cmp
jge
sbb
or
xor
cli
dec
ins
outs
jb
sbb
xchg
dec
ds
jecxz
sub
clc
fcmovb
jle
inc
sub
ret
inc
inc
mov
retf
popa
xlat
rcr
add
sahf
in
sbb
imul
push
fist
fidiv
scas
xchg
movs
loope
sahf
ins
(bad)
movs
pop
pcmpeqb
xchg
imul
cs
int3
jmp
mov
push
ficomp
inc
jmp
sub
pop
cmp
adc
and
movs
dec
jb
movs
xchg
ret
mov
pop
inc
in
push
jnp
sbb
push
dec
jmp
call
push
mov
inc
movs
loope
repnz
(bad)
and
dec
(bad)
mov
adc
scas
ss
cmp
daa
cs
je
out
shl
mov
sbb
pop
(bad)
test
test
sub
and
mov
pop
mov
sub
xchg
and
test
retf
and
and
dec
das
jmp
nop
les
sub
cmp
mov
outs
pop
nop
rcr
and
aas
enter
das
jnp
inc
pop
jg
in
dec
push
lock
lds
mov
xor
jge
popf
or
in
sub
add
fst
ins
(bad)
xchg
outs
dec
cld
(bad)
gs
bound
and
xchg
scas
es
(bad)
inc
es
xchg
and
fs
adc
cmps
dec
jl
stc
std
adc
in
cmp
aad
mov
scas
or
pop
xchg
mov
cdq
mov
dec
add
pop
frstor
cmps
xlat
push
jge
jno
stos
movs
mov
jo
and
lods
das
loopne
cdq
scas
xchg
iret
cmp
jo
mov
mov
inc
fwait
sbb
fs
or
fs
repz
or
xchg
sbb
xchg
adc
pop
mov
jmp
xchg
outs
stos
lods
loop
push
jne
test
mov
jb
sub
sub
ja
push
mov
push
sub
mov
lods
ror
scas
add
xchg
mov
jb
push
push
adc
push
jecxz
inc
inc
fwait
xchg
cwde
enter
aaa
mov
push
test
fiadd
loopne
cdq
aas
inc
das
sbb
sub
mov
loop
nop
xor
push
call
pop
ins
jmp
les
lods
ror
fcomi
xchg
jno
and
add
ins
out
div
mov
fsubp
sub
inc
ds
mov
scas
add
retf
je
arpl
sub
imul
iret
pop
cmp
(bad)
sar
mov
int
sbb
mov
push
add
mov
cmps
mov
jl
inc
shl
mov
inc
std
sti
retf
push
or
test
mov
and
pusha
and
xor
sbb
mov
not
mov
test
mov
shl
jae
and
call
pop
or
pusha
jbe
add
jecxz
adc
pop
loope
mov
loopne
sbb
leave
cmp
pop
scas
lods
icebp
add
mov
mov
in
xchg
sbb
and
dec
push
cmp
mov
sub
cmp
std
sub
jb
and
dec
cwde
or
sbb
test
lock
or
ret
rcr
sbb
push
outs
mov
dec
push
xchg
jge
pop
sub
mov
pop
push
fwait
pop
xor
pop
bound
cmp
add
adc
xor
imul
enter
pop
mov
das
rcl
daa
dec
das
mov
aam
dec
nop
(bad)
dec
cmc
xor
mov
or
test
retf
mov
test
push
sbb
sar
retf
xchg
les
mov
push
and
lods
or
lahf
push
adc
cdq
shr
adc
xor
scas
fdiv
pop
adc
mov
sbb
and
das
xor
scas
jg
cmp
fwait
cli
xor
adc
push
xor
inc
fdivr
pop
cmp
adc
pop
fidiv
sub
inc
jb
push
aad
mov
icebp
pop
out
sahf
pop
mov
push
mov
xchg
std
mov
sub
test
(bad)
cmp
mov
xor
cmp
scas
xchg
neg
nop
and
push
cdq
ds
out
mov
gs
popf
ffreep
movs
mov
mov
aam
mov
and
fnstcw
add
cmp
dec
mov
cmp
bound
fs
stos
std
push
pop
cmp
jnp
iret
or
(bad)
mov
pop
or
pushf
inc
fistp
pop
xlat
(bad)
xchg
in
fsub
fbstp
dec
scas
les
inc
jnp
in
movs
imul
sub
lods
imul
push
loop
hlt
mov
dec
sbb
(bad)
xchg
mov
push
cld
inc
xchg
dec
stos
aas
jl
jp
iret
es
push
fs
rcr
fistp
dec
dec
imul
push
xor
push
pop
enter
pop
xchg
pop
in
and
fadd
and
cmp
out
scas
adc
push
adc
jg
retf
arpl
sbb
jno
cs
cmp
dec
out
ins
mov
imul
cdq
xlat
dec
mov
mov
outs
and
adc
jmp
jle
stos
dec
sbb
sub
sbb
push
sub
xchg
cmps
mov
dec
out
mov
or
imul
xchg
mov
es
inc
sub
mov
xor
pusha
shl
lea
xchg
and
fsub
mov
jns
popa
sub
xchg
xor
jne
add
stc
inc
rol
iret
int
inc
mov
imul
sbb
ins
pusha
ins
movs
inc
inc
stos
movs
nop
imul
sbb
or
or
test
cmp
push
add
pop
mov
(bad)
jns
xchg
push
push
jle
cwde
jne
inc
xchg
outs
push
adc
sub
adc
mov
aaa
call
jno
mov
pop
jnp
add
pop
test
es
aaa
cdq
dec
push
dec
loope
mov
in
test
and
jmp
movs
ja
imul
scas
dec
fld
sbb
inc
or
lea
pop
adc
xchg
mov
fcmove
push
pop
adc
je
fcmovnb
cmp
jns
sbb
push
loopne
mov
daa
cmps
mov
sub
sbb
jg
call
xchg
fsub
ret
mov
dec
fcomp
xchg
xor
loopne
push
in
adc
jno
or
dec
cmp
in
std
cmp
push
es
jnp
pop
jl
test
pop
or
xchg
lods
or
jb
fldenv
xor
jecxz
xor
and
cmp
jmp
cli
cmp
mov
sbb
sbb
jae
mov
daa
ret
mov
dec
mov
jnp
nop
push
rcl
mul
push
aam
mov
add
fistp
jo
inc
adc
cmp
xchg
mov
sub
retf
jb
sbb
mul
xchg
mov
push
fucomi
adc
cdq
jge
pop
mov
lahf
xor
push
and
add
jecxz
push
sbb
dec
push
daa
push
mov
xor
scas
mov
(bad)
retf
cmps
test
cwde
pop
test
xchg
push
hlt
mov
pop
arpl
mov
dec
sbb
rcl
(bad)
dec
sbb
fwait
dec
enter
xchg
dec
dec
jnp
push
jbe
jo
leave
and
js
add
xchg
(bad)
xchg
cmp
stc
call
or
fdiv
sub
sbb
add
fild
out
pushf
int
(bad)
cli
jge
mov
jb
dec
retf
das
fmul
sbb
hlt
(bad)
neg
ficomp
sbb
rcl
addr16
cmp
mov
push
jle
popf
(bad)
out
mov
pushf
fdiv
pop
test
cmp
fst
cmc
pop
loop
cs
mov
sahf
repz
(bad)
shl
mov
pop
fs
xor
and
retf
sbb
cld
jbe
aam
add
nop
xor
xchg
es
adc
popa
xor
lods
shl
mov
iret
stc
mov
call
jp
dec
out
dec
xchg
mov
scas
mov
out
push
icebp
sub
push
das
cld
and
(bad)
pop
cmp
(bad)
mov
push
ret
shl
mov
push
bound
sbb
pop
sbb
nop
cli
jl
popa
retf
mov
jns
or
inc
jbe
retf
cdq
pop
lods
xchg
sub
pop
mov
push
add
aad
sahf
push
fwait
pushf
jnp
push
mov
lahf
fcmovu
push
and
clc
movs
mov
idiv
add
cmp
xor
inc
mov
inc
loop
jmp
cmp
stc
sar
cmp
and
xchg
sub
arpl
or
mov
sbb
fs
pushf
lock
dec
jl
add
xchg
adc
jge
sahf
fisttp
aad
adc
rol
inc
push
mov
mov
lock
jnp
xchg
dec
daa
ss
push
push
push
mov
lea
inc
aaa
inc
dec
in
cdq
dec
test
das
clc
in
dec
or
mov
adc
mov
sbb
test
popf
xchg
pop
pop
iret
icebp
aas
xchg
test
addr16
inc
inc
std
sub
aaa
add
test
sbb
sbb
xor
xor
outs
outs
fdivr
stos
dec
bnd
or
js
push
aaa
jno
aas
xor
jle
mov
cmc
dec
jmp
xor
rcr
jecxz
int
pop
dec
dec
mov
xchg
mov
ficomp
fs
sar
push
das
aas
test
in
fnstcw
xchg
or
and
push
test
or
cmps
push
inc
call
fyl2xp1
push
mov
pushf
in
bound
les
xor
and
and
mov
mov
inc
lahf
retf
sub
nop
popa
mov
cmp
cmp
pusha
test
ret
outs
in
add
out
stos
dec
imul
fwait
loop
les
bound
pop
test
jp
das
ja
xchg
(bad)
dec
sub
push
cdq
div
and
sahf
and
or
add
cmp
sub
or
jecxz
hlt
cmp
mov
or
cmp
in
mov
test
add
inc
xor
push
je
or
aad
mov
add
loop
fcomp
pop
xchg
iret
mov
sbb
or
int3
(bad)
push
mov
xor
aaa
leave
std
pop
or
scas
out
les
inc
xchg
or
and
cmps
adc
mov
dec
scas
jmp
push
fsubr
xchg
in
addr16
imul
or
iret
iret
inc
push
dec
call
repnz
(bad)
shr
inc
push
call
adc
sbb
mov
mov
mov
and
jg
adc
dec
xchg
popa
mov
repz
cmps
sub
sbb
fmulp
stos
test
jmp
ror
ins
sti
or
add
ror
xchg
in
mov
mov
jmp
sbb
adc
mov
fs
out
pop
adc
movs
data16
aaa
cmps
ja
push
mov
jae
lea
es
pop
push
stos
addr16
add
push
ins
mov
xchg
xchg
leave
lea
mov
jl
push
daa
fidiv
mov
xlat
adc
idiv
sahf
pop
xchg
mov
sahf
pop
popf
mov
pop
xchg
xor
fild
or
movs
mov
dec
dec
cli
adc
in
jbe
popf
dec
pop
sar
std
stc
ds
push
ret
stc
jne
ins
jne
test
call
jl
test
cs
call
test
cld
mov
mov
scas
mov
(bad)
mov
pop
clc
sbb
mov
repz
jle
fisub
sbb
or
jmp
sub
xlat
xchg
jecxz
in
mov
(bad)
dec
sub
jmp
and
imul
mov
and
pop
pop
mov
sbb
popa
ja
pop
and
add
lds
daa
aad
ficom
adc
xchg
push
ror
jmp
pop
(bad)
mov
pop
loop
cli
mov
mov
and
ins
mov
dec
stc
sub
jns
jae
jmp
xor
and
xor
adc
pop
(bad)
(bad)
push
iret
mov
xor
ret
imul
add
cwde
xchg
xchg
pusha
mov
inc
jno
cwde
cmp
iret
and
loop
inc
dec
leave
jmp
aaa
jmp
in
bound
dec
stc
pop
cmp
or
and
pop
dec
mul
popf
jmp
xlat
test
push
mov
sub
xor
cmp
jle
push
dec
and
fcomip
mov
mov
xor
int3
clc
mov
xchg
out
adc
jecxz
fiadd
rcl
push
cs
cmc
outs
xchg
or
in
or
fldenv
fnstsw
maskmovq
not
pop
xor
push
mov
inc
pop
mov
push
cmp
pop
sbb
jmp
add
mov
sub
inc
clc
arpl
scas
jle
push
je
add
or
jno
(bad)
and
stc
pop
mov
jle
fwait
lock
or
ins
push
leave
lahf
sti
aam
iret
dec
add
cmp
pop
out
xor
xor
adc
outs
lea
ins
jmp
fs
jne
sbb
out
sti
rcl
nop
and
inc
je
aaa
mov
push
icebp
jae
inc
shl
jmp
pop
push
inc
ds
pop
or
pop
std
out
mov
sbb
sub
pop
ror
adc
sub
cmc
or
jmp
sbb
or
aam
adc
ret
clc
shl
call
adc
jecxz
not
dec
sub
lods
pusha
sahf
mov
jle
stos
dec
mov
in
add
repnz
data16
aam
cs
sar
(bad)
daa
(bad)
cmps
and
cdq
mov
dec
into
icebp
retf
xchg
mov
push
cld
fwait
mov
add
dec
fwait
sub
scas
scas
cld
imul
jecxz
gs
(bad)
pop
lods
leave
mov
inc
(bad)
cmp
cmc
cs
(bad)
push
aaa
xchg
jge
push
jl
pop
dec
in
jge
mov
or
loope
xor
sub
mov
xchg
add
icebp
mov
inc
jge
push
(bad)
mov
les
pop
popf
iret
jne
push
js
push
ficom
adc
loop
int
(bad)
and
xchg
enter
or
bound
or
jmp
jne
pop
sbb
cs
jg
push
(bad)
fnstenvw
inc
movs
sbb
mov
(bad)
fucomp
cmp
je
call
add
outs
mov
adc
not
aas
jbe
cmps
dec
es
dec
xor
outs
cmps
fwait
(bad)
adc
jno
seta
dec
xchg
xchg
shl
xor
adc
pop
ins
icebp
ret
dec
lock
inc
inc
mov
(bad)
in
jno
addr16
inc
movs
jge
in
(bad)
loopne
dec
sbb
jb
sub
ror
ja
lds
retf
popa
pushf
test
nop
sar
xchg
sbb
nop
data16
je
sbb
sbb
hlt
xor
push
repz
cmp
sti
scas
addr16
mov
inc
sar
sbb
shl
icebp
pusha
jmp
inc
adc
xchg
xchg
aad
into
jg
xchg
repz
int
push
sub
fidiv
push
cmp
addr16
jnp
mov
adc
call
test
mov
mov
test
movs
push
mov
xor
xor
mov
repnz
pop
icebp
repnz
aas
repz
add
sub
inc
cmp
imul
ss
loop
fwait
adc
fistp
sbb
push
push
(bad)
ins
(bad)
xor
cdq
or
jl
inc
adc
fidiv
jge
mov
ror
sbb
inc
popf
or
xor
inc
xor
mov
jns
push
pop
rcl
(bad)
jp
or
hlt
push
jp
mov
mov
or
or
mov
leave
jo
pusha
add
movs
pusha
lods
cmp
call
jmp
fsubr
int
sbb
or
pop
aam
faddp
stos
pop
inc
in
add
daa
scas
jge
popf
lock
js
outs
add
or
jmp
sub
inc
sub
mov
bound
push
mov
add
mov
and
shl
xchg
pop
mov
mov
ficom
sahf
pop
int
add
pop
and
punpckhbw
and
pusha
cmps
clc
fdivr
or
ror
iret
ret
or
iret
in
jecxz
add
xor
fwait
mov
mov
cmps
sbb
in
(bad)
pop
shr
cmp
rol
xchg
(bad)
pop
aaa
mov
sub
add
icebp
fnstcw
retf
pushf
cmp
mov
lahf
adc
sub
arpl
imul
sbb
jb
retfw
outs
and
jnp
scas
mov
adc
mov
fdiv
jecxz
xchg
mov
xchg
mov
mov
xor
inc
pop
xor
xor
sti
xchg
sbb
push
jae
div
jno
js
and
push
call
mov
or
inc
xchg
and
bound
iret
pop
aas
(bad)
ins
mov
and
cmps
idiv
push
cld
adc
enter
mov
cmp
mov
or
cli
inc
outs
popf
adc
pop
repz
jmp
je
inc
pop
nop
fimul
dec
inc
sub
out
jb
aad
stc
xchg
add
fwait
pop
jl
adc
fild
and
into
sti
iret
xchg
inc
and
inc
xchg
add
cmp
pusha
cmp
in
jl
or
mov
int3
push
xchg
shl
mov
push
or
cmp
or
mov
jecxz
js
cmp
sahf
xor
inc
mov
pop
fmul
(bad)
pop
dec
jge
std
push
push
pushf
cmp
push
sbb
scas
push
jbe
loop
lahf
mov
outs
(bad)
add
dec
sub
mov
mov
call
cdq
pop
aam
sbb
frstor
jbe
push
fiadd
xor
int
mov
add
push
pop
stc
and
pop
out
loope
fwait
nop
mov
inc
mov
out
sub
(bad)
cmps
ficom
xchg
mov
mov
icebp
dec
mov
repnz
jns
std
pop
addr16
out
out
test
mov
jne
cwde
cs
int3
outs
cs
hlt
xchg
or
jg
cmc
mov
or
dec
fcos
lahf
push
scas
outs
rcr
inc
gs
popf
adc
daa
pusha
mov
push
jg
out
fist
or
int
clc
mov
rol
push
adc
repz
sbb
cdq
xchg
imul
push
leave
iret
ret
call
or
push
push
mov
in
xchg
pop
aas
xor
popa
test
mov
add
xor
jmp
dec
lea
sar
mov
out
and
add
pop
mov
mov
mov
pop
cld
repnz
mov
ins
popf
enter
repz
cwde
cmp
es
call
adc
adc
jecxz
push
js
imul
test
pop
test
xor
lea
sti
rol
mov
mov
(bad)
cs
push
ins
cld
out
daa
mov
(bad)
cmp
or
sbb
std
shr
fisubr
adc
xor
pop
mov
pop
call
das
xor
adc
(bad)
push
pop
xchg
and
and
sub
ins
stc
lds
sbb
xchg
push
daa
mov
dec
cdq
sar
adc
dec
xor
cmp
cdq
sub
rcl
xchg
jbe
adc
mov
push
das
sub
or
into
mov
mov
mov
inc
fld
test
jecxz
or
dec
dec
inc
add
scas
movs
mov
(bad)
or
push
iret
jns
push
sub
add
ins
test
nop
stc
dec
jno
and
xor
push
daa
sbb
nop
inc
popf
xchg
imul
lods
or
or
std
fild
imul
test
shl
or
mov
neg
(bad)
lock
xor
mov
sbb
aad
sub
xor
pop
push
out
mov
popa
mov
(bad)
sub
mov
push
xchg
xlat
in
adc
sub
retf
ficomp
jmp
or
stos
push
sub
scas
add
iret
aas
fwait
inc
mov
sub
xchg
xor
xchg
out
pop
and
xor
mov
test
ret
das
aad
cmc
push
or
and
adc
out
mov
out
sahf
sub
in
push
outs
mov
(bad)
les
std
sar
mov
mov
sbb
xchg
sbb
cmp
ret
outs
dec
leave
cmps
rcr
out
loopne
mov
ss
int3
sub
jecxz
mov
jno
add
cmc
rcr
sahf
sar
mov
and
pop
hlt
(bad)
fwait
push
jnp
out
mov
xchg
das
mov
ret
mov
fucom
jmp
push
imul
sbb
xor
cdq
jne
scas
es
mov
in
mov
outs
push
call
push
jle
pop
jecxz
jnp
inc
iret
out
cmp
mov
lds
aam
dec
cmp
adc
mov
xchg
inc
data16
mov
push
inc
icebp
mov
repz
sbb
or
pushfw
icebp
sti
inc
jecxz
sbb
into
loope
xchg
pop
jge
adc
dec
jecxz
into
jg
mov
push
jge
sbb
ret
sbb
jl
sub
sub
and
push
mov
fcom
jo
fwait
xchg
je
lds
cdq
sub
mov
mov
std
sub
bound
push
ret
hlt
fs
jnp
(bad)
xor
in
js
and
pop
ret
inc
lea
sub
out
dec
sub
ss
cli
data16
cmps
cdq
jb
fbld
cmp
(bad)
xchg
cmps
aaa
cmp
ret
adc
dec
xor
hlt
pop
out
cli
sub
stc
adc
mov
inc
in
imul
nop
in
mov
mov
jl
mov
enter
xor
test
and
xor
(bad)
pop
pop
movs
je
ja
(bad)
daa
cmps
mov
xchg
ficomp
clc
mov
xchg
(bad)
out
xchg
out
mov
movs
inc
xchg
xchg
cmc
lods
cmp
sbb
xchg
mov
fcomp
mov
ror
sub
sbb
sahf
pop
mov
popa
cdq
push
(bad)
jmp
mov
adc
cs
jo
cmps
cmp
mov
inc
add
mov
test
leave
mov
fcom
out
ja
(bad)
in
inc
pop
(bad)
xchg
dec
jp
call
mov
mov
cmc
and
inc
ror
add
mov
adc
inc
sub
addr16
shl
jno
sbb
add
sbb
shr
add
ret
in
mov
inc
(bad)
out
outs
call
scas
imul
mov
mov
cld
sbb
lock
es
sub
fwait
leave
sub
cld
inc
pop
jns
repnz
stos
(bad)
movs
test
push
cmp
jnp
sbb
clc
jo
push
out
or
iret
cmp
test
push
or
mov
xlat
loopne
add
xchg
pop
ficom
fwait
dec
leave
dec
adc
push
xchg
retf
cmp
repz
adc
mov
shr
retf
or
icebp
mov
aaa
int
stos
mov
bound
push
push
add
enter
xchg
mov
fimul
mov
push
jmp
pop
xor
(bad)
adc
fprem1
repnz
outs
sub
dec
sbb
cli
outs
cdq
mov
popf
cmc
(bad)
jg
xor
sahf
inc
jl
rcl
repz
sbb
inc
out
xor
inc
sbb
addr16
sub
mov
sub
inc
mov
rcr
test
push
ds
inc
ret
sbb
aad
cmp
pop
mov
push
pop
mov
pop
cmps
mov
sbb
retf
test
and
adc
mov
sbb
ret
xor
inc
iret
ds
and
outs
jmp
cdq
mov
push
bound
push
jno
mov
clc
pusha
sti
shl
push
dec
push
and
mov
cli
sub
push
dec
outs
test
out
mov
xchg
push
shl
and
dec
mov
nop
std
push
mov
test
into
xchg
aam
sbb
add
sub
pushf
inc
ins
adc
loopne
ret
addr16
xchg
cwde
or
pusha
leave
push
push
fsubr
mov
lods
fnsave
test
inc
lods
(bad)
nop
jne
repnz
in
pusha
push
or
popa
push
in
icebp
rol
cli
sahf
shr
jmp
mov
mov
stos
push
jmp
enter
rcl
mov
lahf
mov
stos
mov
or
xor
sbb
div
jmp
mov
call
xchg
arpl
dec
inc
in
cmp
pop
ss
mov
ss
push
fbld
inc
dec
xchg
sbb
sbb
aas
add
loop
rcl
sti
pusha
push
addr16
add
jno
cmp
pusha
sub
loope
inc
push
mov
fs
sbb
sbb
adc
pop
fdivr
and
je
shl
or
das
clc
call
sub
ja
in
push
and
xchg
inc
retf
ins
mov
pop
push
and
cmp
inc
leave
movups
clc
xor
cmp
int3
xor
shl
push
shr
jge
mov
loopne
bound
lea
sti
js
mov
sbb
xor
push
repz
(bad)
call
sub
jb
dec
in
or
dec
dec
mov
lods
retf
push
pop
inc
push
loope
push
sbb
enter
into
ins
xor
xor
nop
(bad)
repz
aad
pmaxub
adc
mov
dec
add
outs
mov
lods
pop
jp
cmp
imul
hlt
jmp
fwait
out
ret
xchg
(bad)
test
push
jae
ret
enter
sbb
or
ror
cmp
loope
scas
cmps
push
mov
mov
xchg
xchg
or
movs
adc
push
iret
outs
jae
(bad)
outs
(bad)
push
shr
shr
neg
mov
xchg
or
xchg
xchg
mov
lea
pop
mov
stc
pop
daa
push
jecxz
mov
xlat
xchg
(bad)
fdivr
adc
push
jmp
pushf
fimul
in
push
add
add
popf
mov
xchg
imul
push
rcr
mov
pop
push
dec
push
aam
xchg
in
popa
das
in
and
data16
jle
sub
(bad)
mov
cs
jle
sub
sbb
jmp
push
aaa
and
xchg
(bad)
push
stos
mov
push
jg
cwde
test
test
mov
jmp
xor
call
jle
loope
cmp
jge
adc
push
mov
aam
outs
movs
jmp
adc
xchg
es
loop
(bad)
sub
mov
jle
out
xchg
sti
ret
jo
jge
inc
nop
sub
dec
cld
mov
stc
out
sub
push
call
mov
jl
jecxz
je
mov
sti
pushf
hlt
add
imul
xchg
scas
mov
jmp
fsub
movs
bound
xor
cmp
adc
enter
or
pop
xchg
inc
xlat
imul
jp
jae
call
movs
cmp
cmps
cdq
sar
aam
xchg
je
cmp
xlat
arpl
adc
mov
sub
add
dec
in
nop
iret
neg
lea
pop
adc
adc
jae
movs
test
xor
popa
push
fild
aaa
mov
test
mov
shl
xor
imul
xchg
cdq
mov
mov
(bad)
test
sub
xchg
mov
xchg
mov
inc
ret
jl
mov
mov
push
jge
pusha
mov
in
in
dec
push
xchg
inc
push
jmp
sbb
adc
(bad)
ins
addr16
loop
out
clc
out
jg
xchg
lock
cmps
mov
pusha
push
mov
and
jge
loope
push
cmp
mov
dec
sub
aas
dec
pop
mov
and
mul
jmp
idiv
(bad)
mov
clc
add
cmp
shl
cmp
(bad)
jb
test
movs
ret
int
sub
add
mov
lea
push
inc
jmp
sub
nop
mov
xchg
mov
xor
(bad)
lods
inc
or
cmps
push
fstp
jne
push
xor
xchg
pop
fbld
sahf
aad
lock
sbb
jne
mov
xchg
sub
mov
(bad)
mov
es
ret
xchg
daa
push
jle
jns
adc
sub
dec
(bad)
jb
adc
dec
sub
into
mov
bound
popf
adc
adc
clc
movs
imul
shl
outs
mov
mov
sbb
inc
jmp
fidiv
xor
push
xlat
dec
pusha
xchg
mov
aas
push
fidiv
xor
ss
pop
push
aaa
data16
jle
test
aad
je
mov
int
mov
mov
or
cmp
or
adc
xchg
es
popf
out
or
xchg
adc
pop
inc
jg
movs
sbb
hlt
inc
pop
jmp
push
ins
mov
iret
inc
cs
cmp
lods
ins
push
or
aas
in
jns
out
ins
inc
mov
adc
jg
jae
std
ins
xor
pop
mov
sar
jns
xchg
ins
es
fstp
fist
add
pushf
pusha
mov
adc
jns
fild
cmps
jl
adc
fdiv
pop
(bad)
mov
dec
cmp
into
pop
(bad)
out
mov
sub
sar
xchg
xchg
inc
fdiv
sub
dec
xor
test
cmp
loope
adc
push
leave
lahf
push
jp
adc
fld
mov
out
imul
stc
sub
mov
add
cld
dec
cld
fdivr
add
sbb
push
retf
ss
jne
fdivr
sub
retf
and
pop
mov
or
out
loopne
xor
mov
mov
je
mov
inc
loop
cmp
mov
jne
add
dec
adc
jmp
xor
std
mov
dec
sbb
jle
ret
lods
sbb
push
add
mov
inc
hlt
aas
out
xchg
movs
sub
in
movs
cs
arpl
fcom
sub
jns
sbb
jge
ss
push
add
mov
pop
call
scas
or
and
jb
test
adc
repnz
stc
add
out
or
inc
jmp
xchg
sub
lods
sbb
lods
test
sti
in
dec
jbe
out
add
test
ret
push
jge
xchg
loope
dec
ds
inc
sbb
inc
mov
jmp
frstor
retf
xchg
imul
jl
loopne
fucomi
mov
rcr
mov
and
add
jno
cmc
loop
mov
pushf
bound
sbb
push
in
hlt
test
jmp
aad
inc
fwait
adc
mov
inc
rol
mov
xchg
pop
sub
aaa
add
jne
mov
mov
xchg
into
je
imul
push
sti
fwait
arpl
pop
mov
sar
jnp
gs
shr
mov
cwde
(bad)
and
out
ins
inc
dec
rcl
jecxz
inc
mov
arpl
pop
cli
cmps
pop
dec
sub
retf
cmp
mov
push
dec
cmp
sar
and
bound
jmp
fsubr
addr16
push
imul
jb
rcr
inc
fs
fcmovbe
and
popf
xor
dec
ret
mov
mov
sbb
adc
inc
adc
out
xchg
cmp
and
push
sbb
xchg
inc
push
inc
call
pop
sub
test
sub
sub
cwde
add
pop
stos
outs
push
mov
(bad)
neg
jp
adc
scas
ror
cli
cmp
int3
adc
aam
stos
inc
jmp
inc
adc
cmp
push
xchg
out
and
dec
inc
stos
pop
adc
scas
movs
xor
int3
sub
fcmovne
lods
xchg
or
popa
sub
cmp
mov
pop
xchg
mov
mov
xchg
xor
movs
int3
cwde
xor
enter
dec
add
pushf
lock
out
xchg
lds
mov
aad
shl
mov
inc
lods
(bad)
mov
ror
xchg
and
cwde
mov
jns
div
jbe
aaa
sub
repnz
cs
dec
xchg
enter
pop
jl
jns
mov
and
xor
aas
out
xor
mov
cmp
cwde
ins
movups
or
push
(bad)
sub
xchg
aad
cdq
pop
xor
xchg
jle
popa
adc
or
test
mov
jmp
repz
es
push
arpl
xchg
test
jb
jns
and
cmc
das
call
xor
lods
addr16
sbb
add
xor
popa
test
dec
shl
push
retf
pop
fs
ja
pop
push
fimul
sahf
xchg
ins
ins
sar
retf
dec
jl
add
pop
jl
and
inc
in
jbe
and
push
mov
mov
aam
pop
dec
js
jns
out
mov
lods
jge
cmp
sub
sbb
inc
lahf
data16
test
dec
pop
daa
clc
fmul
rcl
cmp
into
sbb
rcr
mov
mov
fcomp
scas
mov
or
aaa
js
pop
adc
mov
test
shl
out
xchg
sub
rcl
adc
add
stos
mov
retf
outs
lea
jecxz
xchg
and
dec
movs
mov
inc
iret
push
xchg
mov
outs
test
add
mov
ins
pushf
dec
jmp
dec
ret
push
mov
popa
sahf
adc
xabort
imul
pop
push
out
imul
movs
(bad)
scas
fxch
(bad)
lea
mov
push
fcomp
out
(bad)
jmp
fwait
jmp
ror
sbb
repz
vrsqrtss
in
mov
lea
xlat
int3
mov
xor
popf
sub
jo
sbb
aam
data16
data16
cmps
jo
fcom
into
cmp
mov
mov
mov
push
(bad)
shr
js
mov
int3
ficomp
dec
fldl2t
lock
dec
(bad)
enter
jb
iret
xor
pop
xor
aam
icebp
les
push
mov
sahf
dec
stos
(bad)
int3
push
ret
(bad)
pop
xor
mov
pop
imul
mov
addr16
pusha
push
sub
ins
mov
push
(bad)
fcomp
cmps
sti
push
fisub
fidiv
and
jmp
fistp
dec
inc
mov
cmp
sub
xor
imul
inc
das
mov
mul
jnp
cwde
cmp
cli
daa
mul
les
cwde
jb
push
inc
push
mov
test
push
sbb
lahf
sbb
cmp
in
xchg
push
cmp
scas
leave
test
mov
data16
mov
ret
xchg
push
sub
jae
sub
loopne
mov
inc
mov
mov
or
(bad)
ins
mov
add
repz
and
lds
adc
dec
lods
call
pop
shr
mov
cmp
clc
iret
add
ins
repnz
ret
mov
sub
outs
mov
mov
xchg
jo
mov
adc
lods
cmps
loop
pop
sbb
rep
xor
jo
mov
xchg
jnp
out
pop
not
or
in
jns
ror
and
(bad)
cmc
xlat
aad
mov
mov
xlat
clc
shl
jns
xor
int3
hlt
scas
fwait
je
push
mov
arpl
xchg
pop
ret
adc
aad
scas
test
fnsave
loopne
and
cmp
mov
call
dec
add
jmp
xor
add
ret
mov
retf
xchg
mov
jno
clc
and
mov
repz
enter
sbb
fs
(bad)
sub
mov
fadd
jae
call
mov
fwait
mov
das
scas
ins
dec
or
sti
or
nop
cwde
sbb
cmp
retf
push
ja
dec
sbb
stc
add
mov
rcr
mov
je
xor
sbb
(bad)
push
call
outs
cmp
ins
es
sar
cmps
repz
sbb
dec
adc
imul
loopne
retf
cmps
(bad)
in
adc
or
cmp
cmp
xchg
mov
mov
pop
rcr
out
js
pop
mov
in
cmp
adc
in
or
nop
test
sbb
mov
shl
or
mov
mov
jmp
mov
inc
pop
and
add
sub
ret
xchg
repz
inc
aad
jmp
dec
in
rcr
push
ficom
outs
pop
nop
add
mov
and
mov
sub
mov
movs
cli
sbb
inc
add
push
test
jbe
adc
nop
xchg
shl
xor
sub
(bad)
xor
xchg
cmp
push
fimul
cmp
mov
inc
sbb
and
jne
out
pop
inc
xchg
fbstp
push
or
in
push
jno
xor
xor
or
and
int
jne
mov
popa
icebp
jns
inc
ret
popf
fst
shl
pop
aam
ins
or
(bad)
loopne
addr16
xchg
mov
iret
xchg
enter
cmp
adc
jle
push
mov
dec
cmp
shl
sbb
loop
gs
add
xchg
hlt
pop
fld
ficomp
mov
jo
retf
mov
retf
pop
sub
cdq
xchg
imul
mov
push
pop
in
enter
in
push
sub
sbb
mov
(bad)
aaa
dec
imul
ins
push
inc
repz
jb
push
test
dec
das
sbb
mov
fist
mov
int
je
pop
mov
(bad)
dec
mov
jge
rcr
lock
dec
mov
repnz
(bad)
adc
in
fwait
sbb
pop
jae
or
cmp
sub
or
outs
imul
pop
push
push
jg
(bad)
sub
inc
aam
add
cmp
add
leave
aaa
jb
(bad)
dec
fcomp
sar
lock
loope
icebp
into
mov
rol
add
outs
mov
add
or
mov
and
sbb
ss
pop
mov
jl
add
popa
or
jbe
jl
loopne
lahf
pop
retf
sub
xchg
jbe
into
fwait
or
shl
and
outs
or
sub
xor
sar
mov
push
mov
xor
clc
repz
mov
call
dec
jne
jo
outs
dec
mov
mov
mov
fst
fcom
(bad)
pop
and
out
pop
lds
fcomip
pop
in
dec
jb
ret
sbb
fistp
loope
iret
pop
pop
mov
cmovl
addr16
or
push
pop
rcr
fidiv
sbb
dec
jno
out
mov
add
stos
push
inc
mov
jne
cli
push
aas
ins
movs
sub
dec
pop
in
and
movs
dec
cmp
dec
mov
loop
sar
idiv
xchg
fst
cmps
retf
cli
xchg
add
or
push
ss
ficomp
adc
pop
inc
movs
div
fiadd
mov
sbb
dec
rcr
sub
lods
sbb
cmp
(bad)
scas
in
cmp
aas
sub
sbb
imul
loopne
xchg
inc
mov
enter
pop
arpl
les
jo
call
sub
inc
ffreep
adc
adc
jle
and
bound
xlat
into
out
jo
nop
iret
jle
fucomp
pop
xor
clc
sbb
pop
add
fwait
test
icebp
dec
or
scas
in
lea
fst
movs
(bad)
test
inc
pusha
pop
pop
cmps
out
push
cdq
jo
add
hlt
xchg
jne
sbb
mov
imul
dec
jae
or
clc
mov
pop
fldcw
adc
lods
push
mov
sub
add
xlat
inc
mov
dec
and
mov
dec
(bad)
xchg
ds
ror
mov
push
xchg
xchg
in
inc
mov
mov
jmp
in
pop
(bad)
fld
push
dec
idiv
sbb
test
dec
clc
in
nop
mov
dec
lods
repnz
test
cmp
lea
fistp
fcmovne
xchg
or
xchg
xor
clc
stos
cmps
push
cmps
daa
jp
lds
jno
xlat
adc
das
repnz
xchg
lods
in
fdiv
outs
iret
mov
jge
(bad)
lea
mov
or
popf
in
sub
inc
out
jmp
nop
sbb
aad
and
imul
adc
xor
lahf
popa
mov
leave
fdiv
dec
xchg
cli
jp
jno
cdq
sbb
fwait
pop
jo
or
mov
xchg
scas
cmps
sub
cmp
push
sar
adc
repnz
jb
cmp
or
movs
pop
sar
jbe
dec
inc
inc
mov
xor
out
jno
out
or
loope
ret
pop
sub
pop
add
jnp
and
xor
mov
mov
loopne
outs
test
in
clc
mov
call
bound
enter
cwde
adc
push
cmp
(bad)
cmp
inc
push
jg
inc
and
jnp
les
pusha
cdq
ret
sub
in
mov
pop
push
adc
push
inc
jecxz
scas
mov
stc
sub
movs
hlt
or
sub
mov
daa
or
jmp
popa
jecxz
dec
push
ja
loop
int
mov
es
test
outs
mov
inc
sub
fcmovb
mov
jge
jne
sub
ret
(bad)
sbb
jmp
push
std
pop
dec
push
jb
lock
dec
jge
scas
mov
and
pop
ss
int
fbstp
ficom
dec
(bad)
jmp
sub
jle
daa
loopne
ds
and
pop
std
mov
mov
jp
adc
sar
leave
inc
jle
jmp
inc
or
outs
dec
sbb
push
lods
pop
cwde
les
js
xchg
fwait
jno
in
les
and
stos
fcompp
cmps
inc
xor
mov
mov
mov
mov
pushf
(bad)
xor
add
dec
pop
push
ss
mov
out
and
fs
repnz
cmps
mov
fcmovnb
les
add
icebp
aam
sbb
pop
mov
jbe
mov
hlt
cmp
aad
inc
cmp
jo
push
popf
outs
sub
out
or
mov
(bad)
or
sar
cdq
adc
imul
inc
sbb
outs
arpl
pop
push
pop
pop
sahf
jns
mov
daa
mov
fwait
iret
pop
cmp
cmp
and
sar
mov
out
dec
fcomp
ins
cmps
mov
mov
mov
ins
inc
mov
mov
ss
push
push
sahf
pop
jecxz
gs
adc
cmp
mov
movs
lods
and
mov
scas
movs
cmps
in
push
ss
xor
xor
add
jbe
sbb
sahf
jle
stc
test
sbb
pusha
pushf
and
bound
sub
push
loop
cmp
push
pop
mov
jmp
aaa
fist
mov
xchg
int3
or
sbb
jge
lahf
sbb
cs
add
inc
jns
or
call
mov
sbb
std
jne
fcomp
into
xchg
sub
sub
mov
pop
cld
data16
(bad)
(bad)
jmp
cmps
xor
add
jmp
cwde
cmp
pushf
pushf
adc
in
cwde
and
pop
xor
add
mov
push
inc
xchg
(bad)
mov
pop
enter
data16
mov
mov
iret
cmp
std
fcom
imul
aad
mov
out
aas
dec
sbb
push
push
mov
add
fs
(bad)
mov
ror
mov
dec
ror
movs
and
cmp
add
fadd
ret
popf
or
push
cmp
loop
(bad)
iret
gs
scas
pop
jmp
je
mov
add
fs
mov
push
lock
adc
in
arpl
cwde
enter
imul
mov
xchg
xchg
shr
xchg
cmps
xchg
sbb
xor
inc
retf
retf
push
pop
and
push
dec
pop
inc
mul
inc
inc
movs
jmp
add
dec
cmc
pushf
dec
outs
ds
xor
fstp
movs
arpl
mov
imul
dec
test
test
lock
jle
pop
(bad)
repnz
repnz
push
mov
xchg
sbb
daa
push
gs
push
out
xchg
out
sbb
xchg
inc
pop
push
sbb
mov
pop
mov
cmp
lahf
xor
mov
push
mov
loopne
mov
add
retf
cmp
sar
sub
push
sbb
pushf
daa
test
stc
movs
push
sar
add
mov
sbb
movs
pop
and
iret
les
mov
jp
arpl
call
stos
aas
mov
(bad)
adc
dec
xor
and
xor
mov
push
lds
test
out
loopne
push
out
in
fs
add
aaa
pop
jno
or
ins
add
sbb
jmp
or
sbb
test
and
stc
and
clc
call
or
xor
or
xchg
jp
lds
push
jns
pusha
dec
out
add
das
imul
cwde
push
mov
gs
cmps
inc
jnp
jg
test
cmp
push
mov
fldenv
adc
rol
(bad)
pop
test
jbe
cmp
pop
jle
(bad)
ficom
stos
cmps
clc
in
sbb
adc
mov
add
cdq
push
and
push
or
push
or
out
fdivr
mov
call
loop
add
enter
shl
xor
mov
xchg
popf
nop
and
(bad)
js
mov
sub
sbb
int
inc
bound
cmp
or
jge
rcr
or
rcl
jne
xlat
add
and
inc
les
mul
shr
cmp
xlat
push
sbb
and
loop
inc
aam
mov
ret
add
int3
loope
frstor
mov
or
out
ret
fs
push
lock
rcl
fwait
sbb
rcr
cmps
jb
push
jmp
fcom
and
or
nop
dec
lea
test
jle
inc
pop
push
jle
lea
pushf
or
lods
adc
loopne
in
jl
push
inc
stos
xchg
(bad)
cmp
xor
mov
sar
dec
sbb
xor
xchg
je
mov
jl
sar
lods
repnz
xor
mov
xchg
add
out
and
mov
cmc
xor
cli
outs
mov
add
cdq
jmp
and
xchg
aam
dec
in
je
jb
adc
fiadd
xchg
mov
lea
imul
jl
mov
xlat
adc
ss
aad
xchg
pusha
retf
or
mov
sub
iret
fld
add
mov
xor
mov
or
jle
pop
mov
xchg
jmp
mov
dec
test
xor
or
cwde
in
lahf
pop
pop
mov
push
pop
std
push
add
fstp
sub
sbb
push
mov
mov
adc
and
mov
repz
push
pusha
pop
cld
cmps
xor
mov
(bad)
aam
test
pusha
and
cli
lock
add
inc
popf
adc
mov
pop
or
inc
mov
inc
or
adc
lods
mov
push
mov
int
in
dec
sub
mov
adc
mov
dec
cmps
lods
jecxz
out
into
je
cdq
es
icebp
dec
fdivrp
add
or
push
test
call
pop
cmp
lods
mov
bound
mov
outs
es
sbb
dec
mov
xor
lock
shl
pusha
sbb
fistp
cdq
addr16
fwait
movs
iret
hlt
and
dec
(bad)
xor
(bad)
(bad)
xor
out
mov
pop
outs
mov
add
ror
mov
pop
adc
retf
cmp
mov
repz
push
ret
jge
mov
adc
push
jns
cdq
aam
push
pop
jae
lods
mov
xchg
(bad)
lea
pop
iret
into
enter
cmp
rol
cdq
ret
push
retf
cmp
pushf
lahf
sub
xchg
fisubr
out
pop
dec
adc
cld
sbb
and
cld
lea
mov
int
fld
push
mov
ins
frstor
mov
add
dec
pop
mov
and
mov
icebp
or
pop
and
(bad)
imul
and
stos
fidivr
jae
mov
mov
mov
mov
ss
mov
jmp
ret
scas
push
loope
dec
push
rol
dec
cs
jbe
sub
add
retf
mov
cmp
dec
out
(bad)
push
test
or
push
aam
arpl
sub
scas
test
mov
cmp
add
rcr
sbb
pop
rcr
rcl
mov
sbb
imul
xchg
dec
lea
mov
sbb
repz
push
or
jg
mov
out
add
jnp
lahf
shl
hlt
xchg
inc
shr
dec
mov
adc
sbb
fist
sbb
ss
inc
mov
and
sbb
mov
data16
imul
into
dec
xchg
(bad)
adc
out
push
fwait
cmp
xchg
bound
add
push
or
adc
outs
xchg
mov
mov
pop
push
pop
mov
outs
mov
adc
cmps
std
or
mov
cld
pusha
cmps
adc
leave
cmp
mov
cmp
call
movs
push
or
ror
(bad)
fs
xlat
jle
push
xor
cmp
push
sbb
sti
stc
add
ja
mov
jo
xor
jge
cmp
adc
out
movs
popa
mov
xchg
mov
aaa
pop
call
fidiv
pusha
test
loop
call
movs
push
dec
push
pusha
push
pop
cli
ins
sbb
mov
dec
std
in
ins
(bad)
aam
and
mov
in
dec
mov
mov
xchg
xor
dec
mov
xor
retf
or
ja
sbb
inc
push
push
cmp
cld
inc
xchg
pop
es
or
and
mov
xor
and
enter
xlat
push
xor
ret
dec
or
sbb
(bad)
aam
jo
mov
je
or
(bad)
pop
aam
in
sbb
or
and
imul
mov
pop
aam
mov
enter
test
or
mov
jns
aad
sbb
retf
jmp
pop
test
(bad)
repz
ss
fsubr
adc
mov
data16
enter
dec
(bad)
pop
mov
aam
xchg
jl
cmp
cmp
and
nop
xchg
aas
jns
add
sub
xchg
std
cld
cli
sub
mov
mov
sub
push
imul
jnp
das
dec
dec
pop
sti
stc
stos
cld
test
mov
je
test
inc
cmp
push
retf
test
test
xchg
int
xor
cwde
add
stc
(bad)
nop
jecxz
push
loop
out
inc
push
mov
or
sub
cmp
pop
jmp
in
movs
es
call
sahf
cmp
jl
scas
mov
sbb
pop
jle
cmps
pop
std
or
(bad)
pop
imul
fst
pop
mov
daa
leave
xor
push
sub
inc
int
cmc
sub
loop
push
jg
lock
pop
es
sahf
shr
dec
fcmove
retf
fld
fcom
out
pop
enter
jge
ret
out
xor
push
sbb
test
jmp
xor
shl
dec
cmp
add
aas
mov
pop
dec
and
mov
mov
lods
outs
dec
add
xchg
mov
cmp
loop
inc
cdq
xchg
shl
or
or
popa
(bad)
mov
cmp
jae
xchg
sti
sti
cld
sub
adc
gs
or
nop
push
add
cmp
push
(bad)
dec
sbb
cmp
fidivr
jge
out
js
retf
bound
in
out
xlat
push
or
push
inc
cwde
mov
jne
or
inc
into
inc
movs
sbb
and
mov
mov
in
add
fcomp
scas
into
push
shl
(bad)
retf
or
je
aas
cs
xchg
cmps
pop
(bad)
push
imul
jl
jmp
xchg
fcom
icebp
sti
ins
dec
push
int
and
icebp
add
nop
ss
cs
es
lahf
call
jmp
mov
jmp
cmps
je
mov
and
addr16
or
jmp
ja
pop
mov
add
sbb
call
(bad)
loope
mov
sub
add
mov
mov
push
imul
or
pop
xchg
retf
ja
les
fwait
(bad)
sbb
inc
pushf
adc
mov
arpl
test
xor
imul
sub
aaa
stos
repz
sti
pop
test
test
cld
adc
pop
cs
mov
iret
pusha
stos
mov
or
mov
sti
jns
mov
mov
inc
aas
sti
fs
or
inc
lods
ret
sub
ficomp
ror
sub
cmp
ss
out
sbb
mov
sub
push
add
mov
outs
(bad)
clc
sbb
xchg
hlt
into
rol
adc
inc
ds
nop
jl
hlt
not
xor
fistp
out
fsubr
test
jne
fdivr
mov
or
or
dec
das
repz
sar
adc
lock
out
adc
sub
and
int
adc
in
cmc
pop
xor
imul
dec
sub
dec
dec
(bad)
pop
cmps
dec
sub
xor
mov
xchg
mov
loope
daa
mov
pop
scas
push
aaa
adc
fst
aad
mov
out
lahf
or
cmp
jnp
fst
aam
xchg
jmp
stos
stos
hlt
aam
imul
(bad)
xor
scas
push
jo
cld
leave
out
and
retf
pop
xchg
and
in
mov
inc
icebp
imul
inc
out
and
pop
sub
cs
xlat
dec
rcl
jnp
je
lock
fadd
out
pop
jmp
loop
mov
mov
add
adc
pop
retf
ret
repz
or
mov
sbb
inc
clc
push
test
pop
xor
mov
or
call
test
fistp
fnstenv
adc
xchg
sub
(bad)
repz
test
mov
sbb
lds
jl
outs
(bad)
push
xlat
jl
fwait
imul
xchg
sub
movs
push
mov
pop
cli
add
pop
mov
aad
inc
jae
adc
repnz
sbb
cwde
repz
jp
mov
jmp
inc
xor
test
lods
inc
sbb
jne
jns
cmps
scas
inc
push
int
jge
mov
fidiv
ret
lds
sub
sub
add
mov
lea
ret
mov
jge
popa
add
std
adc
mov
data16
jne
call
arpl
es
ds
lods
ss
mov
cmps
retf
rcl
adc
shl
mov
push
xchg
fbstp
cld
jbe
mov
fwait
push
fst
add
xor
add
fistp
ds
push
sub
push
inc
nop
(bad)
sti
cdq
adc
test
imul
push
push
dec
or
mul
daa
push
outs
xor
popa
jae
pop
fldenv
cmp
in
imul
fwait
xor
lock
and
inc
mov
imul
pop
mov
mov
fs
pop
jecxz
not
pop
dec
sti
int3
mov
mov
repnz
addr16
rcr
outs
retf
ss
cli
(bad)
jae
push
cmp
das
scas
add
jb
(bad)
and
mov
dec
hlt
je
(bad)
ret
push
aaa
dec
dec
cmps
aaa
in
add
outs
gs
sub
add
popf
adc
(bad)
mov
das
aam
push
jmp
fistp
add
inc
int
mov
shl
rol
out
js
sbb
dec
fs
dec
sub
in
int
loope
xchg
popa
sahf
push
daa
sti
icebp
push
mov
fstp
xchg
jns
xor
(bad)
es
add
in
dec
int
adc
int
sbb
lods
data16
jg
adc
in
imul
pushf
scas
cmps
adc
test
push
or
mov
call
(bad)
and
mov
fadd
xor
lahf
add
and
imul
mov
in
std
jbe
pushf
sub
push
loopne
adc
ds
pop
xchg
or
ins
push
cvttps2pi
sub
inc
jmp
add
inc
fnsave
lds
lahf
dec
xor
ficomp
test
mov
repnz
mov
rcl
xor
or
retf
data16
stos
loopne
push
pop
lods
sti
push
imul
mov
inc
shl
js
jl
xor
mov
mov
cli
xchg
imul
test
adc
enter
xchg
jmp
addr16
popf
mov
push
push
dec
fisttp
sub
jo
jns
pop
scas
popa
retf
ins
out
sub
das
inc
aad
or
lahf
test
int
adc
xchg
neg
xchg
loopne
call
mov
xor
xchg
aaa
jo
add
pop
inc
imul
mov
xor
pop
sbb
imul
jl
arpl
mov
test
leave
repz
bound
fadd
loope
std
dec
sbb
jge
ins
mov
xchg
cld
mov
neg
xchg
mov
push
lea
jo
mov
xchg
fwait
mov
jmp
movs
xchg
xor
pusha
neg
mov
out
daa
pop
mov
stos
push
xchg
sbb
jge
lea
shr
lock
push
daa
jae
ja
push
adc
xchg
ins
int3
call
sar
out
jmp
dec
lahf
mov
cmc
lahf
fnstsw
inc
cmp
and
jb
sub
adc
and
(bad)
push
cmc
stc
inc
sbb
scas
fwait
or
aad
scas
outs
ja
sbb
jecxz
adc
inc
pop
pusha
or
daa
mov
xor
mov
jmp
jl
jo
das
mov
mov
add
mov
(bad)
pop
jp
or
mov
or
sahf
lds
xchg
in
pop
lock
int3
lock
scas
cwde
out
pop
shl
std
cwde
inc
scas
in
sbb
out
inc
repnz
dec
dec
sti
jmp
js
xlat
out
mov
mov
sbb
add
loopne
inc
mov
or
shl
xor
pop
arpl
jmp
sbb
dec
inc
pop
in
lock
call
sbb
mov
pop
jo
adc
mov
gs
mov
mov
inc
and
mov
jno
sbb
add
xor
ja
jno
cmp
or
sbb
jg
rol
adc
es
in
sub
int3
outs
jno
(bad)
scas
popf
adc
cmp
mov
es
add
jno
lea
scas
xchg
pusha
outs
mov
add
push
in
xor
inc
scas
loop
pop
shl
sub
in
popf
and
or
mov
cmp
imul
outs
mov
jbe
pop
idiv
mov
loop
xor
jecxz
mov
cmp
std
rcl
je
call
out
sub
xlat
dec
(bad)
or
outs
je
adc
imul
inc
outs
popa
retf
pop
or
xchg
cvtpi2ps
mov
loope
push
adc
imul
sbb
push
out
mov
lea
dec
rol
cld
call
mov
mov
fstp
adc
das
push
pop
jp
jns
retf
daa
xor
pop
(bad)
fldenv
jns
test
fidiv
sbb
jno
stc
(bad)
in
sbb
pop
cld
js
xor
sub
mov
popf
arpl
xchg
cmps
jmp
loop
fild
rcl
sub
idiv
ret
popf
mov
cmp
neg
dec
dec
dec
mov
xchg
loop
mov
stos
mov
cbw
sub
sub
aam
pop
ret
cmp
mov
ins
rcr
rcl
jo
call
ss
add
or
push
fwait
int3
pop
and
ja
rcr
push
jns
jns
pop
dec
fxtract
test
adc
cmp
ret
in
sti
jg
xlat
add
lea
inc
in
and
dec
lods
retf
mov
sbb
enter
push
mov
arpl
push
sbb
jmp
jmp
into
fs
ficomp
pop
and
(bad)
movs
mov
and
xor
ret
and
mov
add
das
mov
mov
jb
sbb
test
ins
pusha
xchg
ins
rcl
jl
xchg
sub
xchg
call
jno
aaa
sbb
adc
adc
mov
add
adc
hlt
dec
sbb
adc
jle
ins
lods
repz
push
adc
add
fucomip
pop
retf
add
xlat
pop
ja
out
inc
aaa
sahf
mov
icebp
loopne
(bad)
fwait
mov
push
(bad)
add
cmp
std
cwde
mov
add
xor
cwde
inc
(bad)
or
dec
in
cs
repz
lods
dec
lds
and
sbb
push
add
push
stc
mov
stc
ret
retf
(bad)
in
ins
ds
popa
icebp
mov
es
cmc
mov
or
adc
icebp
and
mov
loop
fdivrp
and
in
movs
scas
call
sub
cwde
jbe
cdq
xor
sbb
pop
mov
aas
mov
cli
mov
inc
push
and
outs
fdivr
lahf
nop
pop
and
(bad)
cdq
jmp
jmp
out
js
sub
xchg
pop
jb
mov
fcom
inc
or
loope
sub
loopne
xchg
push
ror
outs
dec
inc
xchg
inc
loop
cmp
jmp
iret
test
pop
jmp
mov
or
xchg
ror
shr
push
loopne
into
or
sbb
lahf
lock
sahf
add
xor
adc
mov
add
sbb
jge
jae
jl
fdiv
loopne
sub
popa
fdiv
adc
mov
jno
dec
jne
aad
add
jae
mov
sbb
stc
movs
mov
ss
arpl
aas
iret
or
or
out
jnp
pop
pop
sub
scas
sbb
out
xor
sub
movzx
add
xor
mov
sub
outs
push
and
mov
idiv
add
push
and
cmp
xor
mov
clc
add
fwait
sbb
sub
inc
repnz
gs
push
mov
fwait
mov
pop
maskmovq
imul
ss
jnp
cmp
dec
pushf
je
or
mov
and
jnp
jbe
mov
retf
push
xor
cdq
daa
aas
pop
clc
cmps
sti
shr
loope
repnz
in
out
hlt
mov
push
shr
jl
xor
imul
mov
mov
or
and
out
mov
retf
xchg
jg
aaa
mov
and
test
mov
inc
mov
xor
mov
jb
add
sahf
aad
aas
arpl
imul
movs
xlat
pop
ror
inc
mov
pop
push
inc
or
sub
xchg
mov
xlat
mov
jne
xchg
out
outs
lods
jbe
pop
lea
js
mov
fs
fcomp
mov
mov
jae
xor
scas
push
and
and
movs
mov
in
jmp
repnz
lods
scas
mov
jl
cmp
mov
push
cli
(bad)
pop
int3
cmc
aam
lea
xchg
mov
les
or
mov
in
jno
cli
ja
test
sbb
(bad)
and
(bad)
and
push
add
cmc
ret
stos
mov
out
or
adc
pop
aam
pop
push
stc
jl
stos
aam
xor
int3
jne
sti
(bad)
popa
add
outs
push
add
xchg
test
mov
mov
cwde
movs
mov
in
push
pusha
rol
xchg
clc
call
push
int
adc
xchg
cmp
fisttp
aas
repnz
inc
fstp
push
jnp
enter
enter
mov
add
out
or
call
int3
pop
push
pop
es
mov
fdivr
sub
mov
ja
xor
sub
push
outs
cdq
out
add
mov
dec
xor
cmp
sbb
xor
aaa
fild
push
xor
cmp
(bad)
inc
ins
cmp
mov
js
inc
cmps
xchg
stos
push
arpl
mov
and
bound
(bad)
in
add
xor
and
jge
hlt
mov
ficomp
dec
sub
mov
repnz
push
test
pushf
fild
scas
push
xor
das
loop
cmp
cmp
jae
in
cld
das
cmp
cs
call
pop
jmp
repnz
sbb
jp
cmp
cmps
inc
adc
(bad)
into
in
rcr
add
xor
(bad)
loopne
sbb
fisttp
imul
popf
push
push
mov
aad
das
addr16
bound
ret
ja
pop
xor
repz
or
lock
sbb
dec
movs
xchg
lods
fwait
or
pop
mov
push
inc
add
mov
es
int3
ins
in
inc
pop
ins
pop
fidiv
jge
jmp
jmp
xor
jmp
dec
loope
adc
imul
jmp
add
fnstsw
test
shl
dec
iret
inc
in
cmp
push
mov
pop
cmps
inc
jae
xchg
ins
rol
leave
xchg
fidiv
iret
mov
jnp
sbb
jne
repnz
test
cdq
sbb
push
pop
retf
push
(bad)
xchg
push
iret
out
push
xor
and
sub
cs
out
pop
or
xor
xchg
outs
jae
js
xlat
mov
mov
mov
pop
out
adc
pop
sub
(bad)
nop
mov
call
lock
jne
daa
call
fs
aas
mov
mov
mov
jno
repz
in
cmp
jo
in
pcmpgtd
or
loop
ret
daa
push
sbb
or
daa
scas
jl
mov
sub
sar
cs
std
mov
rcr
mov
ret
sahf
inc
jo
in
push
pop
jno
mov
(bad)
out
jl
mov
sbb
sub
xor
ja
mul
add
push
mov
mov
and
mov
add
(bad)
cmp
fadd
push
cmp
jbe
dec
cmc
push
shl
das
xchg
rcl
popa
mov
jnp
ret
mov
and
fnstcw
or
scas
or
jg
(bad)
shl
mov
clc
sub
jns
inc
inc
sbb
jp
(bad)
sar
mov
xlat
xchg
mov
mov
icebp
cmp
aas
mov
mov
es
imul
test
pop
call
inc
mov
or
pop
jb
retf
addr16
add
ret
(bad)
(bad)
cmp
mov
mov
or
pop
mov
adc
out
clc
and
cmps
out
(bad)
adc
mov
repz
jno
add
mov
mov
inc
repnz
rcl
xchg
mov
mov
push
mov
and
pop
add
loopne
or
jne
out
imul
mov
inc
sbb
imul
fs
outs
and
ins
dec
ins
in
or
shr
dec
popfw
mov
add
je
rcl
mov
fs
addr16
(bad)
idiv
sub
aas
or
inc
sub
pop
pop
jns
push
push
js
daa
cmc
mov
mov
fsubp
push
dec
xchg
repz
cmc
push
sbb
scas
int
cmp
jl
push
fnstsw
sbb
gs
xchg
cmp
dec
inc
enter
dec
loop
dec
xlat
xchg
ror
jb
jl
dec
je
int3
gs
inc
popf
inc
cld
sbb
xchg
push
inc
int
imul
add
out
and
out
jp
movs
xor
and
bound
int3
call
stc
cld
adc
stos
mov
loop
and
mov
addr16
jno
inc
stos
iret
cmp
jle
ja
hlt
cmp
mov
std
inc
inc
push
addr16
xor
ret
mov
mov
ds
push
nop
pop
lods
cmp
pop
inc
xchg
mov
icebp
sub
test
push
pop
outs
(bad)
jnp
mov
or
(bad)
push
outs
sbb
sbb
push
ret
adc
push
int
jno
and
outs
loope
pop
addr16
test
int
jecxz
cdq
fisub
fwait
add
add
mov
inc
arpl
mov
inc
stos
out
jbe
add
cmc
std
sbb
and
fst
(bad)
push
mov
add
mov
mov
sar
cdq
sbb
add
lock
xor
mov
daa
ss
mov
inc
test
push
dec
data16
mov
(bad)
jl
pop
jecxz
and
clc
dec
ret
dec
xchg
mov
test
in
fdivr
inc
inc
jae
jle
mov
mov
mov
cmps
pusha
inc
mov
sbb
repnz
push
jg
adc
out
ss
adc
fwait
mov
cmp
pop
repnz
and
or
(bad)
das
mul
shl
adc
mov
pop
jmp
sub
pop
repz
inc
cli
enter
je
mov
jg
adc
push
ficom
inc
sub
mov
cmc
xlat
jp
pop
push
arpl
jbe
out
sbb
cwde
xchg
inc
push
mov
(bad)
mov
xor
push
inc
jb
pop
mov
or
add
pop
leave
push
cld
mov
mov
in
sbb
dec
aad
(bad)
fmul
xchg
mov
mov
aaa
sbb
call
xor
daa
in
sbb
add
fwait
xchg
cmp
gs
mov
mov
mov
pushf
out
scas
dec
mov
scas
inc
(bad)
retf
xchg
(bad)
data16
call
icebp
sub
mov
pushf
cwde
inc
aad
pusha
retf
cmp
xor
and
add
jge
pop
dec
adc
push
sbb
retf
cmp
jo
jb
icebp
imul
xchg
add
lahf
lock
test
add
dec
test
xlat
das
cmps
xlat
push
xchg
ja
mov
sbb
ds
mov
leave
jg
dec
mov
fdivr
sbb
jl
(bad)
lods
mov
popf
inc
sbb
mov
mov
data16
mov
scas
shl
xchg
imul
jbe
xchg
cmp
pop
pop
sbb
sub
push
dec
dec
popa
xor
enter
jbe
mov
xchg
jnp
idiv
xchg
sub
or
ror
(bad)
js
(bad)
push
sbb
inc
outs
stc
inc
ds
adc
or
pop
fcmovnb
(bad)
gs
fcom
call
sar
inc
jae
xlat
sub
mov
(bad)
mov
fwait
adc
rcr
fwait
mov
daa
cmps
ins
and
dec
push
cmp
jmp
icebp
sub
mov
sbb
loope
or
mov
fs
jo
mov
fsub
std
repnz
retf
mov
ret
inc
cmps
mov
adc
inc
xchg
sar
daa
arpl
cmp
cwde
call
jmp
out
(bad)
loopne
cli
sub
mov
xor
jb
xchg
jp
jl
cs
push
and
mov
mov
ret
pop
mov
push
call
mov
test
or
jns
adc
dec
mov
enter
pop
repz
(bad)
push
retf
mov
shl
out
xchg
loopne
push
sti
aam
inc
test
sub
aaa
std
mov
pop
aam
add
and
popa
fldcw
add
ins
or
pop
dec
fadd
or
aaa
xchg
pop
sub
inc
add
mov
cli
stos
cwde
stc
dec
test
cld
and
jns
mov
arpl
mov
retf
repz
cmps
pusha
cmp
dec
xchg
or
(bad)
sub
daa
and
sbb
jg
xor
mov
push
mov
sti
aas
push
btc
(bad)
fbld
scas
jns
jl
sbb
xlat
mov
mov
fwait
icebp
push
and
sub
xchg
sbb
fwait
movs
daa
jg
lods
sbb
push
pslld
shl
sbb
imul
ins
(bad)
mov
mov
inc
pop
pop
jae
pop
cmp
dec
aad
xor
les
cmp
jae
fcom
push
push
jmp
cmps
dec
call
rcr
adc
jns
pop
pop
sahf
retf
fisttp
cmps
lahf
dec
mov
inc
xchg
test
push
data16
adc
sub
mov
cmp
inc
repz
push
scas
out
je
adc
xchg
dec
hlt
xlat
loop
jo
retf
jp
jl
cmp
jb
mov
add
sbb
loope
rcl
loop
inc
jne
cld
push
dec
adc
stc
or
sbb
inc
aad
aas
into
scas
mov
xchg
lock
(bad)
stos
cmp
shl
cmps
les
xlat
cmp
push
push
adc
inc
sbb
outs
(bad)
fimul
popa
mov
push
ja
lods
movs
movs
sar
cs
inc
test
ror
sbb
call
cmp
loope
pop
add
cld
sbb
dec
push
das
leave
ins
neg
xor
(bad)
(bad)
outs
mov
out
ficomp
sub
mov
rol
imul
sahf
loop
mov
ja
push
pushf
mov
repz
fstp
inc
inc
dec
in
and
mov
pop
mov
mov
outs
ja
cmp
dec
repz
mov
stos
icebp
cmp
push
or
fs
movs
adc
sbb
data16
ins
mov
mov
mov
(bad)
sub
cmps
sub
jbe
mov
retf
call
int3
cmp
pop
cmps
mov
push
pop
sbb
lds
fld
and
not
fwait
add
bound
adc
ins
call
xchg
cld
add
mov
adc
cmp
jb
outs
gs
sub
xchg
icebp
dec
cli
add
push
das
mov
(bad)
out
jnp
jmp
jno
stos
cdq
mov
mov
test
aad
and
adc
mov
xchg
mov
(bad)
mov
addr16
test
xor
xlat
mov
jl
pop
push
ds
cmc
mov
(bad)
xlat
dec
outs
or
jo
mov
(bad)
jb
pop
gs
daa
xor
shl
pop
sub
fstp
popa
push
lea
das
retf
and
test
jecxz
pusha
aad
cli
pop
mov
addr16
xchg
dec
repz
lahf
lea
shl
das
add
fst
pop
mov
aaa
mov
add
inc
mov
add
ins
sbb
jmp
add
jmp
std
pop
jge
pxor
in
xchg
out
and
cdq
or
ret
addr16
loope
cmp
cmps
daa
lods
retf
xchg
xor
sub
out
cmps
inc
movs
push
js
and
jg
add
repz
mov
and
cmp
xor
push
adc
xor
cmp
push
movs
inc
add
test
adc
jbe
imul
push
pop
sbb
daa
enter
sub
lods
jnp
(bad)
out
cs
fild
and
add
add
push
arpl
sbb
cmps
cmp
cs
movs
mov
inc
(bad)
lock
sub
ror
daa
push
rcl
inc
sub
mov
add
push
add
pop
int
inc
mov
xor
jae
ror
repnz
sahf
cmp
jl
rol
loopne
jg
out
mov
out
mov
clc
ficomp
or
scas
cld
add
mov
push
and
xor
out
add
pop
(bad)
mov
push
ss
xor
adc
jp
clc
daa
push
ret
in
mov
cmp
shr
call
sti
cmp
xor
sbb
cmc
or
retf
jbe
lea
shl
and
lods
xor
(bad)
into
or
ret
es
push
xor
pop
mov
push
shr
pop
test
cmp
(bad)
outs
outs
and
daa
jno
sar
fcomi
call
fwait
pop
leave
mov
push
mov
sub
mov
ja
std
mov
inc
ret
(bad)
mov
xlat
inc
ja
ret
or
add
inc
sbb
lds
mov
or
sbb
cwde
imul
mov
add
push
(bad)
cmp
sbb
mov
xor
shr
cld
cmp
jmp
mov
mov
mov
mov
enter
ja
lea
mov
cmp
mov
ficomp
sbb
in
iret
and
cmovns
sub
pop
fild
pop
in
dec
sbb
add
loop
sbb
xchg
ja
ret
(bad)
fdivrp
icebp
std
cmp
addr16
(bad)
movs
mov
std
out
mov
sbb
out
loop
add
jecxz
jne
pop
aas
add
jp
or
in
mov
int
cmp
int
and
test
xchg
pop
sbb
push
es
scas
sub
pop
cwde
sti
mov
pop
imul
sahf
and
mov
shl
and
test
pop
inc
adc
test
aad
jp
or
aad
pop
out
dec
jmp
mov
ds
(bad)
icebp
push
fwait
mov
outs
push
adc
add
ds
mov
mov
stos
mov
jne
fldlg2
out
and
ret
retf
out
fs
das
(bad)
pop
out
loope
scas
mov
jns
call
and
retf
cli
jmp
ins
jns
add
adc
push
retf
jmp
imul
and
pusha
mov
inc
mov
rcr
fisubr
and
les
arpl
je
sub
ficom
adc
ja
outs
data16
adc
xchg
aam
stos
movs
mov
xor
cli
dec
pusha
jo
jp
es
iret
pop
or
(bad)
pop
rcl
in
push
pop
stos
mov
data16
sar
pop
mov
xchg
inc
(bad)
dec
mov
(bad)
mov
adc
loope
in
mov
pop
ja
or
mov
or
inc
dec
adc
bound
(bad)
mov
mov
dec
inc
or
loope
ja
mov
xor
scas
jmp
add
mov
sub
cmp
dec
ffreep
push
scas
ret
pop
and
scas
or
and
(bad)
jae
cmps
xor
jmp
mov
inc
rol
push
xlat
mov
movs
and
pop
je
outs
sub
iret
fld
inc
shl
leave
xor
dec
scas
sub
rol
xchg
sub
fistp
lahf
cmps
jmp
rcr
mov
in
call
add
js
arpl
xor
in
repz
ins
push
mov
mov
pop
fucomp
ret
in
xor
mov
retf
imul
rcr
cdq
pusha
pop
fsub
aas
push
jmp
sub
sub
fwait
xchg
xchg
nop
jl
xor
and
cwde
push
icebp
jns
xlat
mov
xchg
push
popf
aam
push
in
sub
add
sahf
and
fstp
dec
mov
pop
jae
cli
mov
outs
les
jno
pop
out
xlat
xchg
jne
inc
les
pop
xchg
mov
push
xchg
inc
(bad)
fcmove
vmwrite
mov
stos
(bad)
ficomp
je
ret
sbb
pop
add
call
(bad)
in
and
and
mov
(bad)
sbb
stc
call
jmp
mov
lods
push
imul
and
mov
push
mov
and
cmp
dec
(bad)
ds
ret
cmps
leave
stos
push
dec
cmp
(bad)
aam
or
pop
inc
cmp
pop
out
sti
sbb
mov
scas
sbb
cmp
lea
adc
aad
std
push
jge
hlt
cdq
cli
in
aam
in
cmp
add
mov
sbb
mov
cmp
mov
and
sub
cmp
cs
pushf
and
sub
mov
mov
jbe
ins
mov
jno
ror
repnz
fimul
dec
cmp
push
dec
int
mov
or
call
movs
and
sbb
fnstcw
xor
cmp
xchg
loopne
inc
push
push
cld
mov
sub
push
frstor
cli
sbb
and
mov
ficomp
jp
inc
hlt
ret
lock
test
mov
scas
call
mov
rcr
loope
shl
jmp
sti
mov
jg
pop
pop
gs
cli
and
sar
cld
mov
je
test
movs
xchg
addr16
push
adc
repz
mov
mov
xor
enter
jbe
imul
cmp
mov
outs
movs
xchg
cmp
dec
mov
sub
dec
(bad)
jmp
inc
and
mov
xor
movs
sub
mov
jle
and
xor
mov
mov
jmp
push
shr
xor
and
loope
fisttp
adc
xchg
scas
xchg
fild
add
jecxz
lahf
movs
push
cmps
mov
addr16
and
iret
mov
xor
xchg
rcr
pushf
sbb
popa
xchg
jne
lock
cld
stos
cdq
adc
xchg
sahf
jnp
jmp
or
rol
inc
ret
jle
sub
mov
jp
hlt
pop
outs
imul
mov
fdiv
mov
lds
dec
and
pop
bound
push
mov
cmp
mov
cmp
int3
fnstenv
lods
sbb
add
sbb
dec
or
or
dec
xchg
sbb
or
inc
xchg
(bad)
popa
jle
cmp
cmp
mov
int
mov
mov
pusha
dec
jb
test
pop
or
test
test
fsub
jmp
ins
cdq
or
pop
mov
out
inc
ffreep
adc
aam
jo
ja
aam
cld
es
(bad)
mov
push
fcomp
outs
std
adc
(bad)
dec
(bad)
cmp
stos
dec
and
inc
jg
stos
mov
inc
(bad)
(bad)
inc
cmp
pop
out
push
adc
out
add
adc
xor
pop
dec
cmps
repz
scas
xor
cmp
(bad)
scas
cmps
xchg
sub
xor
push
(bad)
pop
enter
call
popa
stc
movs
mov
ds
neg
sub
fiadd
and
lds
adc
mov
int
mov
aam
mov
mov
sbb
stc
or
inc
dec
mov
out
sub
inc
retf
jge
mov
xor
stos
fwait
mov
ins
add
jbe
jae
dec
scas
and
imul
cwde
pop
lock
fisttp
clc
mov
push
and
ins
mov
test
add
in
int
inc
icebp
jnp
or
out
jno
fcmovnu
retf
and
add
in
jg
shl
push
mov
sub
(bad)
addr16
call
push
hlt
or
mov
outs
retf
loopne
ffreep
and
ja
xor
cmp
xchg
sub
push
fcomp
inc
arpl
outs
mov
add
jmp
retf
lods
sar
inc
sbb
jmp
bound
jnp
pop
push
fs
xchg
in
(bad)
mov
mov
cmp
pop
cli
add
mov
xor
jge
cmps
mov
mov
sbb
inc
lea
or
dec
mov
sub
daa
lahf
lea
imul
mov
mov
mov
xor
pop
lea
and
in
mov
or
out
xchg
sub
or
out
jmp
xor
xor
add
test
je
movs
mov
cs
int3
jl
pop
cmp
(bad)
push
push
icebp
cmp
lahf
jmp
aam
adc
mov
stos
or
mov
mov
retf
movs
cwde
iret
mov
(bad)
add
cmc
sbb
jl
mov
stos
xchg
jecxz
cmp
les
sbb
fst
or
(bad)
mov
ja
xor
inc
xchg
mov
rol
(bad)
lock
xor
dec
inc
inc
lahf
je
cs
outs
jns
pop
add
out
xchg
int
in
sbb
pop
add
push
test
int
cmp
or
into
lock
icebp
xlat
dec
fadd
sbb
test
xchg
mov
int3
scas
cmp
test
sti
pop
mov
je
inc
mov
les
pop
jp
xchg
jb
mov
adc
bound
ror
mov
fidivr
pop
(bad)
ja
aam
mov
repz
cmp
push
xchg
js
jmp
lea
iret
ins
lea
adc
mov
jecxz
and
mov
outs
jl
pop
xchg
aam
inc
test
add
hlt
imul
outs
movs
xor
es
popa
test
xor
mov
iret
push
scas
ds
xchg
mov
mov
retf
(bad)
fadd
or
sub
jge
outs
xchg
test
add
fidiv
retf
jmp
scas
clc
pop
jne
gs
rcr
aam
inc
jle
mov
xchg
inc
mov
ds
cmp
js
rcl
jb
jae
adc
inc
xchg
test
es
gs
int
dec
jbe
push
daa
xchg
push
aaa
test
in
or
stos
stc
mov
retf
cmp
shl
sub
daa
mov
mov
mov
outs
or
adc
in
sub
xlat
jecxz
sbb
cs
mov
test
fnstsw
int
call
adc
imul
outs
jbe
cdq
mov
stos
inc
mov
arpl
mov
xchg
test
push
enter
mov
pop
sub
mov
popf
add
jecxz
dec
je
push
jbe
push
pop
inc
aad
test
and
dec
(bad)
and
add
jno
das
jmp
addr16
cdq
jno
cli
cmp
mov
sub
pop
push
add
mov
sub
or
gs
mov
arpl
sar
dec
mov
jmp
(bad)
push
mov
rcr
xchg
pop
mov
cld
adc
retf
and
inc
mov
les
sti
bound
movs
or
out
iret
add
imul
dec
xchg
push
mov
arpl
pusha
ds
inc
movs
mov
addr16
add
mov
sub
imul
mov
mov
pop
sahf
popa
push
call
pop
mov
fidivr
cmps
cmps
xchg
mul
pop
fsubr
addr16
cs
stos
in
push
std
ja
mov
div
xchg
cli
push
xchg
sub
xchg
cmp
lods
(bad)
nop
sbb
sub
in
pop
or
mov
imul
aad
xor
stos
dec
mov
xor
enter
mov
cmp
cmc
adc
fisttp
cmps
icebp
and
frstpm(287
jl
jb
add
sar
fadd
lods
ja
mov
shl
ss
inc
scas
push
xor
call
xlat
retf
cmp
cmp
mov
sbb
push
add
scas
sbb
lods
push
sahf
xlat
jne
sbb
add
movs
jae
and
pop
aas
add
out
push
or
dec
retf
fs
test
shl
mov
dec
mov
jecxz
cmps
pop
mov
and
loopne
ins
lea
push
in
cmp
outs
xlat
dec
sbb
jmp
pop
test
sub
shl
pop
je
xor
jmp
call
pop
cmp
loope
inc
outs
cmc
es
sub
aad
push
mov
pop
dec
pop
mov
and
dec
(bad)
idiv
push
mul
(bad)
push
icebp
icebp
stos
lea
add
shl
push
popf
cmc
mov
and
outs
(bad)
imul
(bad)
js
aad
or
stos
dec
(bad)
push
mov
pushf
popa
mov
lock
mov
and
sbb
sbb
imul
jne
jno
(bad)
test
pop
popa
mov
mov
ins
and
push
pop
mov
dec
sbb
jns
jns
neg
dec
scas
dec
in
es
ins
(bad)
jmp
ficomp
mov
sbb
int3
std
fs
fadd
sbb
mov
div
jo
mov
xor
imul
cmp
add
pop
clc
push
call
cmp
out
xor
mov
fdivr
mov
inc
fisub
inc
add
adc
mov
std
push
mov
xor
xchg
lock
(bad)
in
inc
add
adc
bound
add
dec
mov
shl
mov
and
bound
das
inc
and
aas
or
mov
cmp
xor
dec
mov
enter
push
push
push
sub
xor
ss
jmp
xor
cmps
test
inc
in
and
outs
mov
jo
jns
adc
inc
jle
js
or
pop
mov
fstp
and
sub
jecxz
out
test
lock
pop
cmp
stc
push
xlat
popf
push
mov
dec
xor
push
jmp
outs
xchg
xor
loope
dec
xchg
les
mov
ret
test
jl
imul
mov
mov
hlt
aas
pop
cmp
or
mov
mov
jecxz
jecxz
mov
sub
aad
xchg
mov
mov
leave
push
mov
pusha
mov
push
ret
shl
fbstp
jno
adc
pop
mov
mov
cwde
aam
in
mov
jmp
mov
mov
cld
dec
adc
jae
outs
cmp
imul
leave
aad
cmp
stos
enter
pop
dec
sbb
pop
imul
mov
sbb
jecxz
jge
inc
and
daa
inc
shl
dec
xor
enter
fiadd
int3
adc
pushf
addr16
jno
xlat
iret
jle
outs
cmp
leave
xchg
and
xchg
pop
sub
sar
inc
stos
(bad)
std
bound
inc
xchg
daa
gs
push
movs
cld
sbb
out
sbb
cld
dec
scas
fiadd
test
push
in
and
cmp
imul
js
push
popa
sub
jae
ins
inc
arpl
sub
xchg
arpl
sar
xor
popf
fidiv
add
into
inc
pop
sti
mov
imul
dec
fwait
jle
or
xchg
adc
jle
ret
aam
xor
mov
(bad)
jbe
xchg
sub
cmp
retf
jmp
in
push
cmps
ret
mov
enter
add
das
fistp
lods
lods
cdq
mov
jecxz
or
(bad)
push
sbb
shl
jle
in
mov
adc
mov
sub
retf
xchg
xchg
movs
clc
hlt
xor
and
jmp
aas
nop
movs
mul
test
scas
jp
popf
aas
and
sti
dec
in
repnz
movs
jecxz
out
ror
cmp
sub
pop
enter
gs
(bad)
mov
inc
sti
out
std
test
shl
sub
sbb
or
rol
mov
mov
clc
mov
into
cmp
push
dec
jmp
aad
ss
mov
or
sbb
jecxz
jns
dec
cmp
sti
pop
repz
mov
call
mov
pop
or
adc
dec
xchg
jl
inc
xor
xchg
imul
int
mov
fnop
call
sbb
aad
not
add
daa
jg
dec
fsubr
add
sbb
fwait
scas
das
adc
mov
pop
xchg
push
jb
adc
(bad)
neg
mov
outs
(bad)
mov
push
jg
pop
scas
sar
ja
es
loop
mov
adc
inc
mov
mov
test
pop
push
test
cld
add
sbb
mov
(bad)
cld
inc
pop
jns
sub
pop
out
retf
or
jbe
sbb
mov
mov
xor
pop
push
hlt
pusha
iret
and
push
jbe
daa
cwde
imul
adc
clc
stos
arpl
(bad)
jp
fst
(bad)
cmps
shl
jo
call
dec
call
in
jns
pop
jmp
xchg
mov
jle
jmp
lahf
pop
cmp
push
pop
or
cwde
popa
and
rep
jne
xchg
pop
xchg
add
fcmove
xor
data16
test
stos
das
xor
xor
xchg
movs
jmp
mov
jmp
xchg
(bad)
out
pop
xor
or
and
mov
fdivr
int
dec
mov
retf
add
in
lea
scas
cmp
and
sbb
inc
repz
mov
scas
mov
adc
inc
icebp
sub
fwait
imul
cdq
popf
scas
mov
bound
std
scas
test
mov
jbe
imul
out
inc
clc
mov
dec
mov
jns
xchg
dec
out
mov
movs
int3
mov
sub
dec
push
sar
jnp
push
mov
jne
fidiv
mov
sar
lods
jo
(bad)
cmp
sub
sahf
fcom
xchg
std
xchg
ins
push
in
test
xchg
cmps
nop
pop
or
jecxz
dec
add
ret
and
out
jns
(bad)
jge
je
fistp
push
sti
xor
and
mov
xchg
int
imul
or
bound
mov
loop
pop
xchg
mov
fwait
xor
or
ret
mov
ds
int
lahf
dec
push
(bad)
jo
add
inc
std
es
(bad)
out
sahf
lock
add
jmp
bound
loop
fisub
dec
and
mov
scas
or
xor
scas
jns
dec
jge
and
scas
and
jne
adc
js
xor
adc
mov
cmps
call
mov
cmp
leave
xchg
cwde
aam
sti
hlt
(bad)
pop
lock
popf
inc
xchg
and
push
cmovg
sti
and
out
int
xchg
(bad)
das
inc
aad
pop
sbb
(bad)
outs
pop
xor
lds
jns
sub
repz
popa
bound
mov
retf
add
add
pop
fcomp
mov
dec
inc
(bad)
jge
mov
pop
inc
or
dec
inc
std
push
in
(bad)
ficom
shl
pop
loope
pop
das
dec
adc
mov
or
pop
jg
(bad)
aaa
and
add
bound
ss
push
into
and
inc
mov
pushf
sbb
or
(bad)
pop
jbe
dec
bound
loop
(bad)
and
lock
(bad)
jge
pop
xchg
pop
das
add
out
dec
js
pop
push
icebp
xor
pusha
adc
add
xor
test
pop
loope
ss
pop
sub
mov
jbe
ss
dec
sbb
loop
pop
(bad)
mov
pop
push
mov
sbb
mov
mov
or
mov
xor
adc
push
xlat
test
cld
dec
in
(bad)
sub
inc
imul
pop
jae
xchg
sbb
pop
cld
cmc
sbb
fs
push
out
ds
out
xor
inc
xor
xchg
pop
dec
cmp
scas
out
and
ss
lods
and
mov
mov
jno
mov
cmps
jecxz
mov
xor
fadd
pop
sub
ss
lods
xchg
mov
jns
lds
jnp
gs
fild
jnp
ror
rcl
jno
lods
push
adc
imul
fwait
xchg
int3
adc
je
(bad)
movs
push
popf
push
cli
pop
fwait
test
add
lahf
ror
pusha
sub
mov
sub
in
jo
popa
push
dec
xor
in
cmp
push
adc
out
push
adc
adc
jbe
test
adc
fsub
pop
push
adc
mov
xchg
bound
in
clc
mov
movs
(bad)
dec
fldenv
xor
loop
cmp
lods
test
(bad)
dec
inc
add
pusha
xor
pop
enter
shl
xor
jl
add
dec
pop
sbb
aad
mov
mov
fisubr
sbb
push
mov
fsubr
jnp
iret
inc
dec
mov
test
mov
jmp
nop
(bad)
out
sbb
xchg
pusha
out
cmp
je
mov
dec
push
dec
in
int3
test
lahf
sub
push
push
jns
div
sbb
(bad)
test
pop
(bad)
iret
inc
imul
push
xchg
cli
cmp
dec
mov
push
cmp
mov
sub
icebp
mov
mov
stc
mov
cmps
xor
jns
sahf
outs
mov
scas
sbb
les
rcr
and
into
repnz
sbb
lods
in
inc
jle
fninit
call
stos
pop
cmp
iret
daa
rcr
mov
jmp
dec
jo
mov
add
rcl
pop
arpl
pop
cmps
jmp
xor
in
ffreep
in
ret
fucomp
fidiv
mov
xchg
out
adc
in
mov
pop
call
lds
mov
mov
jmp
pusha
icebp
(bad)
or
inc
sub
pop
mov
jnp
pop
mov
mov
pop
daa
xchg
jp
dec
dec
sbb
sbb
xchg
popa
add
dec
inc
ds
jge
xchg
cdq
(bad)
mov
pop
jne
inc
and
popa
cmp
mov
cmp
mov
std
mov
cld
push
push
and
xor
xlat
adc
fisubr
scas
bnd
out
inc
dec
rcl
inc
cwde
jb
dec
add
clc
sub
repnz
retf
cmc
int
outs
sub
aaa
popa
push
out
fs
xchg
cmc
sti
or
in
sbb
add
add
les
bound
imul
call
mov
call
inc
loopne
sub
push
xchg
std
adc
aam
and
or
mov
mov
xchg
cwde
inc
ficom
hlt
xor
xor
movs
mov
xor
jbe
(bad)
nop
lahf
ffree
outs
pop
push
add
add
xor
fisub
enter
jl
push
repz
pop
retf
je
pop
in
call
adc
add
push
test
mov
jg
mov
add
jmp
cmp
mov
mov
and
iret
and
fiadd
jmp
sub
mov
inc
cmp
cmp
sub
xchg
in
mov
scas
mov
test
mov
imul
sbb
adc
push
sub
mov
ins
and
enter
lods
ret
retf
cmp
xchg
fs
mov
jae
xchg
out
push
ds
jae
add
les
sbb
loop
aaa
retf
lea
cmc
(bad)
mov
dec
retf
sub
adc
sub
xor
call
dec
(bad)
jmp
sti
add
icebp
cmp
push
inc
cmp
fld
pop
mov
sub
shl
(bad)
mov
and
inc
mov
pop
mov
sar
nop
cmp
dec
jmp
and
xchg
stos
xlat
(bad)
lds
mov
pop
ret
cli
rcl
xor
dec
daa
sbb
xor
rcl
push
imul
dec
xchg
add
inc
pop
pop
sahf
mov
clc
mov
pop
and
arpl
fs
push
jecxz
inc
stc
or
loope
arpl
cmp
sbb
jp
retf
or
call
bound
je
xor
push
add
(bad)
jge
pushf
push
fxch
add
repz
adc
outs
cmc
cwde
mov
repnz
jecxz
fstp
(bad)
fdiv
sbb
mov
sbb
out
loope
and
mov
adc
test
mov
and
dec
xchg
inc
xchg
not
cmps
push
lock
xor
dec
and
(bad)
out
mov
out
jp
sti
das
push
push
sbb
mov
xor
repz
retf
adc
cmp
ret
addr16
adc
xchg
inc
dec
pop
in
mov
inc
daa
(bad)
lock
sub
call
mov
dec
call
add
aam
cmp
xlat
retf
call
xchg
dec
or
call
sahf
in
or
out
mov
out
lahf
xchg
add
inc
xor
and
mov
jmp
pop
cmc
jl
ja
rcr
(bad)
xchg
jl
cwde
mov
(bad)
mov
push
push
add
inc
pop
cwde
mov
out
dec
inc
cmp
jae
(bad)
mov
push
test
mul
and
jecxz
pop
or
ss
lock
or
cmps
jnp
nop
jne
adc
add
daa
xor
loopne
popf
ja
xor
outs
cs
enter
mov
xchg
sub
test
xor
cdq
jmp
jb
(bad)
cli
sub
sbb
and
ret
mov
(bad)
repz
cwde
mov
mov
push
jb
cmp
bound
cwde
cmps
mov
ds
pop
mov
stc
shr
scas
push
cdq
pop
mov
mov
je
pop
stc
or
out
dec
mov
(bad)
sub
jmp
push
ins
add
xor
pop
sub
fstp
jnp
sbb
jnp
sar
ficomp
and
or
jmp
lea
movs
mov
cmp
mov
ret
sbb
movs
jmp
movs
ins
xchg
leave
mov
cli
leave
pop
sbb
jb
lods
add
push
gs
movs
push
fmul
mov
mov
push
call
cld
sub
push
sub
mov
sub
neg
pop
call
daa
sbb
ins
mov
ret
stc
out
in
int3
sub
aas
addr16
pushf
push
stos
out
mov
cmp
icebp
push
mov
jl
cli
add
adc
and
cmp
mov
aaa
nop
retf
xchg
dec
add
bound
jmp
daa
in
call
mov
mov
sbb
std
push
xchg
into
xchg
faddp
sbb
jecxz
mov
outs
adc
and
iret
mov
cmp
mov
and
mul
jle
sbb
inc
dec
xchg
shl
js
jge
mov
add
inc
mov
push
call
(bad)
leave
fmul
sub
mov
in
mov
sahf
sbb
xchg
dec
outs
int
out
repnz
fdivr
cwde
push
fbstp
ds
mul
add
out
(bad)
(bad)
xchg
stos
push
fbld
jle
cli
push
sbb
bnd
scas
push
pop
or
xchg
add
xchg
jmp
inc
hlt
cwde
mov
cmp
(bad)
adc
push
mov
push
dec
xchg
jge
shl
addr16
xor
fistp
sub
cmp
sbb
mov
imul
cld
stc
cmp
in
mov
add
jmp
xchg
xor
jp
push
mov
ficom
repz
xor
pop
add
mov
dec
ja
cmps
adc
push
inc
iret
repz
mov
int3
ret
pop
fadd
sub
or
fs
jge
cmp
xor
mov
lea
or
cmp
xchg
loop
push
outs
mov
and
adc
adc
xchg
push
dec
std
lods
lea
jno
out
(bad)
ja
mov
sub
xchg
mov
add
std
aam
add
test
cmp
int
ret
push
gs
adc
push
dec
sti
popf
pop
xor
test
add
xchg
mov
jle
jne
xchg
mov
out
test
jl
pop
pop
dec
js
or
fs
out
mov
mov
stos
add
mov
cmp
ins
mov
cdq
jns
pop
movs
out
(bad)
add
fld
xor
jmp
lahf
das
mov
es
loopne
fst
fbstp
fs
dec
test
sbb
adc
cmp
(bad)
push
jns
inc
rcr
or
sahf
xor
test
fstp
into
js
push
mov
cdq
inc
lds
push
pop
xchg
sbb
push
mov
sub
call
(bad)
movs
leave
cmp
in
mov
mov
scas
push
test
inc
dec
shl
jae
ror
cld
call
outs
enter
jp
pushf
pop
iret
mov
fsubr
ret
pop
loop
call
jl
ret
mov
sbb
enter
movs
mov
mov
popf
js
(bad)
sub
sbb
out
inc
push
ret
sbb
mov
cdq
pushf
pop
sub
in
ins
data16
add
mov
nop
cmps
add
call
add
imul
fcomp
xor
xchg
dec
push
clc
call
jge
sar
mov
jl
mov
das
cmps
push
loop
sahf
loopne
and
out
jecxz
xor
dec
mov
sbb
arpl
add
jne
jmp
xchg
test
push
xchg
repnz
xor
sbb
dec
adc
call
mov
shl
sbb
adc
mov
dec
fsub
cmc
dec
push
push
inc
ja
or
mov
or
outs
pop
push
movs
sub
xor
mov
mov
int
maxps
fist
jmp
sub
sub
and
fwait
stc
sti
movs
retf
cmps
repnz
es
add
jo
mov
mov
loopne
pop
lahf
das
dec
gs
pop
cmp
aad
pop
fsub
loop
fdivr
jbe
sub
push
inc
xor
add
cld
imul
mov
hlt
mov
ins
in
sub
dec
push
xchg
pushf
out
cmp
stc
test
push
loopne
cmp
into
or
test
adc
xlat
stos
aad
xor
test
aam
mov
inc
sbb
hlt
and
xchg
push
stos
mov
mov
test
mov
call
fcmovnbe
mov
push
xchg
test
inc
cmp
(bad)
or
loope
jle
adc
out
cmp
shl
test
add
test
gs
or
sbb
lds
pop
add
(bad)
out
xchg
cmps
(bad)
out
mov
pop
cs
sbb
adc
and
inc
nop
adc
mov
fisub
or
cmp
sub
stc
in
adc
mov
push
lods
pop
jns
mov
cmps
and
(bad)
ins
rcr
xchg
dec
xor
adc
nop
mov
xchg
push
cmp
call
mov
mov
dec
or
jnp
ins
daa
sbb
cli
int
call
mul
mov
jmp
pop
(bad)
sub
xor
retf
or
dec
push
data16
movs
xor
xchg
jecxz
push
jb
mov
fst
jl
push
outs
inc
inc
jns
jge
in
dec
xlat
inc
jmp
(bad)
sbb
retf
mov
sbb
dec
xchg
movs
arpl
ins
adc
arpl
xchg
sbb
jo
mov
(bad)
rol
out
sbb
mov
push
xchg
pop
movs
aaa
dec
nop
(bad)
int3
cs
movs
aas
scas
or
and
fiadd
je
xchg
xor
adc
lea
inc
inc
add
sti
mov
adc
mov
mov
loope
cmp
fldenv
shl
mov
or
jecxz
into
retf
cmp
pop
retf
sub
adc
mov
jnp
fsubr
push
je
inc
and
mov
mov
mov
ins
or
loopne
aaa
jl
cld
fldcw
jl
es
dec
inc
add
stos
and
jle
mov
dec
sbb
pop
call
add
inc
cmp
dec
inc
retw
cdq
xor
dec
cli
inc
or
imul
inc
xlat
lods
cmp
fsubr
je
cli
retf
and
imul
es
sub
mov
(bad)
or
retf
(bad)
cdq
js
adc
in
jge
sbb
pop
mov
hlt
adc
stos
jbe
pop
jmp
jmp
js
es
into
xchg
sbb
adc
xchg
daa
shr
mov
cwde
inc
cli
push
xchg
lds
mov
popa
stos
push
cld
sti
jae
pop
aaa
into
xchg
sti
(bad)
movs
mov
rcl
or
xchg
pop
xchg
repnz
mov
popa
pop
mov
leave
xor
imul
pop
xor
fist
repz
shl
and
fcomp
aam
popf
dec
mov
in
add
sub
inc
or
sub
sbb
aad
in
xchg
adc
sbb
arpl
sbb
jno
sub
js
add
into
leave
and
jle
xchg
movs
add
pop
add
and
js
aaa
mov
sub
sbb
shr
add
mov
popa
stos
ret
and
test
mov
sub
add
or
or
lock
ds
xor
(bad)
in
or
adc
sub
(bad)
bound
xchg
test
out
inc
jg
push
cmp
inc
xor
add
sbb
adc
ficomp
jbe
jecxz
add
aaa
pop
ss
iret
call
cdq
not
scas
jmp
fs
mov
xchg
sub
push
mov
jecxz
out
jae
push
call
pop
shl
popf
stos
pop
fcomp
mov
pusha
scas
loope
loop
call
rcl
mov
pop
mov
jmp
mov
cmc
sub
pop
jo
lods
adc
cmp
pop
mov
ds
fs
inc
out
ds
cmp
cs
dec
jne
js
(bad)
popa
dec
mov
jne
adc
jno
jmp
ja
inc
sbb
mov
mov
test
cmp
stos
push
mov
stos
cld
push
imul
and
add
dec
push
cmp
cmps
pop
pop
popa
push
jns
sahf
jl
jl
nop
lods
mov
adc
ds
dec
sub
mov
lock
pop
dec
cmps
jo
pushf
sub
adc
(bad)
mov
fisttp
mov
and
pop
mov
int
imul
and
cmps
add
xchg
pop
mov
cmp
arpl
and
fsub
dec
scas
mov
inc
sti
into
lods
rcl
xchg
(bad)
pop
out
mov
or
and
or
imul
sub
pop
bound
mov
sub
jp
mov
pop
mov
mov
mov
mov
adc
jmp
lahf
fnstcw
cwde
fnstsw
in
sub
pop
into
(bad)
sub
jecxz
shr
fabs
add
mov
ins
lds
mov
jnp
fbld
mov
iret
add
add
sbb
int3
pushf
fistp
sbb
and
push
dec
jbe
sar
jmp
cmp
mov
fwait
mov
adc
xchg
inc
iret
push
push
dec
fisub
in
push
nop
mov
nop
data16
adc
or
jmp
ins
(bad)
jle
cmp
cmp
retf
cmps
cmp
push
inc
xor
(bad)
(bad)
cdq
push
mov
inc
mov
sub
xchg
aad
mov
cmps
mov
mov
xor
outs
pop
inc
cmp
inc
sub
data16
pop
jmp
xchg
jb
frstor
shl
jo
arpl
mov
sub
nop
xlat
or
push
mov
xchg
inc
movs
pop
clc
pop
lea
js
ficom
cmp
iret
loope
fcmovbe
test
cmps
pop
and
mov
pop
jl
dec
cs
out
sub
and
fcmovnbe
add
mov
rol
xor
fwait
retf
push
inc
ret
jae
lds
test
sbb
xchg
aam
mov
jns
mov
in
cmps
test
mov
cmp
jb
inc
jb
mov
test
aas
mov
xchg
mov
inc
test
out
in
loopne
add
fidivr
leave
cmps
mov
xor
test
jne
mov
daa
sbb
into
daa
and
push
jns
pop
ds
repz
mov
mov
and
xchg
jb
cld
cdq
cmp
shl
fmul
bnd
push
into
mov
mov
popf
js
loope
enter
jp
mov
pusha
and
int3
mov
push
sti
mov
mov
retf
fdivr
sbb
bound
stc
imul
xchg
add
in
jb
dec
in
mov
int3
imul
mov
and
les
fbstp
in
adc
test
pop
xchg
push
mov
das
add
pop
push
adc
jecxz
jl
mov
(bad)
cmps
xchg
mov
and
aaa
cmps
popa
sbb
test
xor
cmp
push
pushf
inc
xor
adc
rcl
fmul
les
aaa
nop
mov
cwde
jno
push
pop
push
mov
xlat
sahf
add
push
int3
xor
gs
fnstcw
ret
push
adc
repz
dec
push
inc
add
jae
pop
pop
sahf
push
pop
mov
or
fadd
push
push
ud2
pop
mov
jbe
in
add
jg
adc
or
sbb
(bad)
scas
add
adc
sub
mul
add
fidivr
nop
cmp
sbb
xor
cdq
in
in
pop
jno
lahf
or
sbb
mov
pop
pushw
or
mov
jge
jp
pop
xor
lods
mov
or
mov
and
adc
add
push
mov
rcr
xchg
xchg
arpl
jp
hlt
mov
pop
into
pop
cmps
(bad)
fdiv
ins
(bad)
repnz
dec
adc
jecxz
jnp
mov
inc
xor
adc
mov
test
jnp
nop
mov
(bad)
pop
out
adc
inc
shr
dec
cmp
stos
into
dec
mov
stos
in
ins
lahf
push
popa
and
dec
sar
jbe
aam
sub
fidivr
imul
sti
ds
lods
pusha
int
fisub
sub
gs
scas
mov
inc
outs
pop
fisubr
push
bound
push
dec
mov
cdq
pop
lods
adc
dec
fisub
and
sbb
inc
adc
pop
enter
imul
pop
cdq
into
scas
test
mov
out
cmp
cmp
adc
(bad)
jb
sub
popf
cmc
pop
and
push
or
cmps
shl
ficom
aaa
int
push
mov
sbb
data16
ret
cs
jecxz
dec
dec
(bad)
std
imul
inc
dec
add
cs
cmps
xchg
shr
test
pop
out
pop
outs
out
push
xchg
movs
mov
std
xchg
sub
push
mov
push
push
mov
mov
mov
push
sbb
cli
push
jecxz
inc
fidiv
ins
mov
fist
cmp
cs
sbb
std
jbe
cmps
ds
mov
cmc
sub
sbb
mov
cld
xor
push
aad
mov
mov
xor
push
xchg
lds
jl
bound
jns
adc
and
cmp
scas
xor
mov
inc
je
pop
pop
inc
(bad)
in
mov
cmps
addr16
arpl
ret
or
dec
mov
and
dec
dec
add
jae
dec
iret
mov
inc
dec
dec
mov
and
and
inc
outs
popa
or
sti
or
push
scas
pop
adc
mov
jae
call
inc
in
inc
xor
lds
sti
ror
pop
shl
fs
xchg
cmp
adc
(bad)
lock
hlt
mov
outs
dec
xor
xor
enter
gs
icebp
cmp
call
pop
pop
movs
es
add
lahf
adc
test
popa
fimul
test
pop
shl
inc
cmp
xchg
test
mov
cmps
mov
fisub
call
ja
or
add
fucom
ja
or
jbe
cdq
jmp
xchg
aas
xchg
lock
sbb
imul
fisub
sbb
or
fcom
mov
pop
add
mov
in
pop
(bad)
js
jbe
and
enter
outs
add
fst
lea
and
sub
jbe
and
xor
scas
jno
jmp
mov
mov
and
arpl
push
add
xchg
das
mov
loop
inc
daa
mov
adc
out
pop
scas
push
stos
(bad)
inc
ss
jle
inc
rcr
or
push
outs
pushf
xchg
mov
in
(bad)
jae
or
stos
push
or
nop
stc
fwait
ds
push
or
clc
sbb
movs
data16
or
mov
div
in
push
nop
setb
mov
hlt
jne
test
pop
xor
dec
inc
cmp
lds
xor
mov
pop
jbe
mov
push
fwait
sub
cmp
adc
jno
addr16
fidiv
icebp
pop
outs
sbb
scas
ret
lods
stc
leave
xchg
sbb
and
mov
das
xor
xchg
push
jno
mov
outs
mov
fwait
mov
mov
fsubr
sub
into
es
mov
cmps
dec
movs
xor
cmp
mov
sub
(bad)
dec
sbb
sar
xchg
push
xor
xor
ds
sti
pop
lahf
cmp
std
sahf
out
imul
(bad)
pop
pop
leave
repz
shr
push
shl
rol
rol
xchg
xor
arpl
outs
adc
(bad)
or
stos
fsubr
or
lods
sbb
sub
daa
out
pop
lods
push
cld
sbb
xchg
loop
test
sub
sub
test
add
sahf
inc
sub
xchg
cmp
popf
xor
xrelease
stc
xchg
cmp
xchg
jnp
push
je
and
mov
pop
pop
sub
lods
in
add
(bad)
jnp
(bad)
cli
and
sbb
std
jno
out
sub
stos
cmc
xor
repnz
fwait
aaa
ss
inc
or
adc
dec
pop
cmp
add
or
mov
clc
push
jo
out
pop
ret
lods
jg
cld
mov
sbb
mov
lea
add
ficom
xchg
jecxz
mov
(bad)
jae
lods
cli
mov
dec
push
push
inc
cmps
movs
fcom
fcom
test
jnp
mov
cmp
adc
shl
packsswb
out
aam
fucom
pop
retf
sub
fcomp
movs
mov
cwde
shr
lock
repz
cmp
imul
xchg
jecxz
mov
mov
mov
push
retf
xor
adc
gs
lods
cmps
pop
repz
mov
adc
jmp
push
std
adc
stc
cmp
leave
das
pop
cmc
inc
mov
push
mov
dec
fdivr
and
(bad)
jmp
lahf
push
sub
repz
push
hlt
adc
mov
pop
or
xchg
sahf
inc
outs
mov
mov
sub
xchg
call
jo
jbe
jle
jne
dec
and
cmc
fs
or
into
out
jge
rcr
xchg
(bad)
mov
outs
and
mov
shl
out
sbb
leave
in
out
pusha
(bad)
jmp
daa
push
clc
mov
idiv
dec
sub
add
in
int3
rcl
push
push
std
hlt
sbb
add
and
or
push
jo
je
add
pop
aad
fucomi
dec
lock
jmp
inc
push
and
jp
gs
xor
xchg
sbb
loopne
mov
jle
std
fwait
out
mov
sti
movs
inc
jmp
js
call
pop
xchg
inc
arpl
push
imul
mov
cmp
sbb
lahf
sub
push
iret
inc
jmp
into
adc
pushf
je
hlt
stos
adc
xor
and
neg
fnstenv
neg
aaa
ffree
fst
cli
dec
inc
dec
test
jl
dec
adc
into
shl
fcmovne
xchg
jecxz
and
fdivr
dec
aaa
cmps
test
test
mov
stos
xchg
jno
or
sub
and
movs
test
xor
push
ret
mov
add
das
call
movs
int3
movs
jecxz
scas
mov
les
fcom
push
leave
lahf
jge
(bad)
jmp
into
ss
ret
dec
inc
test
stos
jnp
(bad)
lea
fcmovu
mov
ficomp
or
cdq
sub
pushf
adc
jp
sub
push
xchg
fiadd
xor
sbb
jns
jbe
loopne
xchg
enter
pop
fst
push
aas
mov
and
mov
xchg
int3
idiv
neg
ror
mov
es
cmp
fidiv
pop
enter
sbb
add
mul
ret
scas
xor
pop
(bad)
imul
adc
mov
mov
mov
xchg
test
xor
pop
neg
popf
inc
mov
push
push
retf
lds
es
into
jmp
or
enter
test
xor
mov
in
mov
jne
fcmovnu
fldenv
mov
cwde
and
jle
lea
movs
cmp
pop
xor
mov
fwait
dec
sub
loopne
sub
stc
iret
sbb
sub
mov
repnz
(bad)
fidivr
jmp
imul
push
lea
mov
test
lahf
push
aas
xor
mov
adc
ins
dec
shr
adc
ret
sub
ficomp
adc
jle
shl
pop
fwait
push
ja
cmp
dec
xor
and
push
pop
push
mul
mov
repnz
inc
(bad)
outs
and
sub
dec
data16
adc
cli
inc
xor
fwait
test
inc
sti
dec
iret
xchg
or
pop
rcr
test
dec
addr16
cmps
push
pop
xchg
xchg
lea
lahf
bound
sbb
icebp
addr16
or
mov
in
test
mov
pop
pop
mov
setg
fnsave
and
aaa
jmp
lds
call
cmc
call
adc
jns
xchg
test
inc
aam
rcr
adc
int
add
xor
(bad)
cld
or
cmp
ja
mov
div
das
add
fcmovb
pop
mov
loop
or
push
xchg
mov
jg
rcr
and
add
sub
jge
or
or
pop
loopne
loope
enter
lods
and
popf
jno
xlat
sub
xchg
icebp
pop
jl
mov
js
in
jg
xchg
aam
push
jnp
inc
mov
cmp
and
idiv
retf
inc
jae
dec
je
test
inc
cmps
in
pop
ret
pop
fdiv
cmp
pop
mul
push
scas
idiv
pop
(bad)
in
int3
mov
dec
(bad)
rcl
fldenv
jne
or
mov
aad
adc
mov
mov
pop
jle
push
in
std
xor
xor
inc
push
pop
dec
jmp
ins
adc
jo
xor
cmp
ror
pusha
(bad)
add
loopne
sti
xchg
sbb
outs
sub
je
adc
pop
call
push
mov
pop
lahf
dec
pop
popa
xor
push
lahf
int3
mov
arpl
dec
cmp
add
pop
gs
pop
push
adc
stc
data16
and
fs
std
pusha
add
into
xchg
stc
add
jb
out
mov
cli
inc
into
dec
inc
or
push
mov
and
lock
leave
add
add
into
push
cmc
jle
or
xor
cwde
or
sub
pop
div
cmp
sub
jecxz
daa
push
cmp
and
sub
xchg
icebp
push
mov
adc
cli
out
(bad)
loop
lea
dec
aaa
fsincos
leave
push
mov
pop
test
sub
dec
je
fcomp
pop
dec
retf
mov
aas
pop
push
sub
push
jp
lock
mov
ins
push
lods
std
adc
pop
cwde
stc
mov
stos
jmp
push
mov
int3
jae
fcomp
aam
push
lea
jmp
retf
pop
and
loopne
adc
lods
jmp
int
je
or
sar
mov
icebp
or
out
cmp
xchg
gs
iret
movs
(bad)
xchg
mov
sbb
cwde
sbb
call
jno
repnz
push
pop
fcmovbe
repnz
mov
scas
nop
add
mov
or
push
pop
push
mov
arpl
fisttp
les
jmp
or
dec
clc
inc
xchg
xlat
imul
lahf
(bad)
push
and
mov
cmp
aam
mov
outs
sub
retf
push
shr
out
idiv
mov
adc
and
xor
pop
cld
xor
les
pop
or
xor
and
or
imul
fld
(bad)
mov
retf
or
scas
push
out
fs
xchg
add
and
sub
lock
xor
icebp
add
xlat
cmp
shl
xchg
test
push
rol
fnstcw
sbb
mov
ja
je
adc
push
and
sub
mov
retf
mov
rcr
push
mov
mov
adc
int3
shl
and
aaa
jg
bound
sub
pushf
add
cmp
fld
jb
mov
jmp
push
xor
ds
mov
push
xor
inc
adc
arpl
stc
div
sub
lea
push
push
sbb
sub
sti
sub
sahf
(bad)
pusha
sbb
inc
(bad)
enter
fmul
adc
inc
fild
xor
sar
sbb
fldenv
push
mov
push
outs
enter
and
ins
fisub
mov
fstp
or
cmp
test
push
mov
jmp
iret
out
hlt
sub
inc
jle
fnstcw
inc
sar
or
mov
icebp
je
and
or
shr
mov
dec
add
fild
mov
aam
pop
in
scas
hlt
jno
push
mov
add
iret
ss
inc
pop
int3
adc
sub
mov
jp
xchg
pop
mov
or
icebp
int3
adc
movs
push
lods
jp
xor
and
divps
je
push
fs
jl
or
mov
push
test
sbb
fwait
inc
aam
gs
sub
stos
ror
sar
xchg
xchg
mov
test
mov
in
dec
dec
mov
mov
test
ret
cdq
and
mov
jle
arpl
fild
call
test
in
adc
or
mov
xchg
loop
mov
cwde
mov
push
jae
adc
cmp
pop
adc
sub
adc
mov
fcmovnbe
pusha
push
(bad)
(bad)
jbe
sti
mov
cmc
mov
sub
dec
dec
ds
ret
cmp
call
pop
loop
mov
mov
dec
stc
mov
mov
jo
cli
stos
pop
jns
sub
or
mov
pop
popf
or
xor
cmp
xchg
bound
or
loopne
test
sahf
jmp
add
push
pop
add
push
(bad)
in
fs
movs
mov
and
jg
pop
sbb
mov
jg
pop
aaa
jnp
push
xor
ins
repnz
and
frstor
fwait
pop
mov
dec
cmp
scas
push
jmp
sbb
inc
sbb
pop
retf
fs
and
and
mov
lea
fidiv
mov
xchg
xchg
jnp
and
push
sub
mov
movs
xor
pop
and
scas
jmp
cmp
and
mov
push
jno
addr16
retf
jp
dec
xlat
push
pusha
in
retf
clc
mov
cmps
(bad)
ficom
ret
dec
loope
(bad)
fisttp
jg
(bad)
jns
cdq
adc
js
out
les
pop
adc
out
inc
icebp
lods
mov
mov
jl
in
xlat
add
sti
cmp
sbb
into
xchg
mov
out
inc
enter
enter
stos
in
hlt
nop
dec
push
arpl
int3
mov
push
repnz
loope
aas
pop
(bad)
sub
pop
add
jnp
cld
mov
jo
or
pop
movs
mov
xchg
(bad)
jne
cmp
add
xor
aaa
mov
fadd
cmp
jle
mov
or
lea
jmp
jmp
stos
call
sbb
xchg
cli
jmp
fld
adc
imul
inc
push
xlat
jns
hlt
xor
fist
(bad)
out
ss
call
aam
and
lods
jmp
adc
xchg
mov
cmp
cmp
leave
pop
cli
bound
pop
popa
pop
cdq
and
xchg
or
sahf
dec
or
jo
mov
add
mov
pushf
loop
xlat
add
mov
out
xchg
jb
popa
test
nop
fidiv
call
cmp
dec
and
xchg
mov
mov
retf
ss
enter
inc
xor
add
dec
inc
loop
mov
mov
add
dec
add
ret
lahf
clc
popf
push
mov
outs
add
cwde
jo
sub
loopne
push
push
cmp
xor
rcl
inc
data16
jl
pop
xchg
aam
gs
jns
int3
int3
inc
pop
inc
(bad)
js
pop
pop
push
ins
imul
ret
push
mov
mov
mov
push
mov
out
or
xchg
push
mov
(bad)
stos
or
ret
mov
and
call
or
or
call
mov
mov
popa
xor
popa
cmc
ds
nop
or
lods
movs
jo
adc
cmp
cs
mov
jno
mov
daa
push
xor
jo
or
gs
popf
cmp
sub
in
shl
shl
stc
mov
outs
mov
int
cmp
mov
mov
test
cmp
jecxz
mov
test
and
jbe
add
lods
dec
out
pop
push
popf
mov
sub
or
rol
push
into
mov
add
ins
push
mov
sub
scas
xchg
pop
xchg
xor
xchg
je
clc
fcom
outs
inc
dec
scas
loop
add
sbb
mov
inc
stc
mov
mov
aam
cld
movs
or
push
shr
cwde
nop
push
xchg
stos
repz
shr
fidivr
xrelease
xor
inc
mov
jp
or
and
lods
jecxz
sub
pop
(bad)
add
cmp
sbb
mov
jg
or
mov
(bad)
repz
mov
movs
dec
out
xor
sbb
test
push
ins
neg
inc
retf
push
jno
call
daa
cmp
push
dec
cdq
fwait
pop
out
mov
cdq
outs
dec
(bad)
and
iret
inc
push
vrsqrtss
sub
cmp
ret
jp
loope
push
ja
out
add
inc
test
cmp
and
pop
popf
xor
xor
test
dec
jne
mov
rcr
cmp
xor
imul
adc
add
ror
dec
ss
stc
dec
sbb
sbb
sbb
(bad)
(bad)
pop
xor
mov
test
add
xchg
add
ins
jne
outs
jnp
fwait
dec
mov
mov
dec
push
mov
je
imul
jmp
lahf
je
mov
inc
mov
dec
push
pop
pop
sti
pop
cwde
fimul
mov
stos
pop
xchg
push
or
push
in
adc
pop
push
push
rcr
jle
mov
cmp
cmps
aaa
cmp
cmps
jne
jp
out
push
push
and
cmps
fcmovnu
jg
scas
xor
pop
data16
ins
cmp
jl
push
add
mov
je
pop
ss
pop
push
sub
add
setl
nop
rol
scas
icebp
push
push
or
enter
dec
push
jns
mov
adc
sub
mov
out
sbb
or
cmp
xor
jmp
add
das
sub
pop
fldenv
popa
push
test
cmp
add
xchg
adc
rol
retf
fist
fcmovu
push
in
ror
pop
in
xchg
push
popa
and
jmp
cmps
or
dec
mov
imul
jae
and
push
mov
xchg
or
rcr
mov
js
jbe
mov
mov
xchg
push
out
pusha
test
jns
retf
movs
ss
xchg
jne
popf
inc
sbb
mov
out
popf
pop
jmp
and
jl
and
push
pop
add
je
sbb
pop
pop
jmp
ret
add
and
enter
jbe
mov
sbb
sti
and
mov
sti
inc
pop
inc
push
into
dec
sub
fcmovnbe
and
popf
cld
lods
inc
sub
inc
ss
fiadd
xchg
jmp
ret
xchg
xchg
shl
mov
xchg
adc
mov
pushf
daa
push
pop
retf
pop
pop
pop
lahf
out
mov
mov
jae
sbb
xchg
nop
and
not
dec
lahf
cmp
mov
clc
adc
xchg
xlat
jp
sub
mov
dec
sub
pop
and
fwait
data16
daa
jo
mov
xor
jmp
jne
aad
push
push
sbb
je
mov
mov
shl
jecxz
pop
pop
(bad)
ret
int
hlt
test
cmp
pop
hlt
xchg
rol
icebp
mov
mov
pop
jp
mov
nop
cmps
sahf
push
pop
jbe
sub
mov
cmp
xchg
jp
retf
popa
mov
out
mov
cmp
rol
lahf
dec
dec
fstp
xchg
cmp
inc
repz
(bad)
mov
mov
jnp
mov
cld
(bad)
jae
ret
jmp
imul
sub
rcr
fcom
mov
dec
xor
hlt
push
pusha
ret
mov
cmps
cmps
mov
lods
mov
or
es
nop
add
sbb
sbb
sbb
or
sti
push
dec
jp
mov
sub
cmp
fs
push
inc
inc
dec
dec
adc
out
cmc
and
retf
scas
das
clc
sbb
xchg
and
test
adc
cmp
icebp
xchg
mov
adc
std
popa
mov
(bad)
mov
addr16
push
push
push
iret
repnz
cmps
leave
stos
and
jecxz
(bad)
loopne
push
and
popa
inc
ss
mov
lock
icebp
adc
test
sbb
jae
and
and
(bad)
dec
or
or
push
nop
mov
aam
add
xor
das
aas
pop
les
ds
xchg
sub
xor
jnp
sbb
sbb
scas
jle
aad
lods
xchg
sub
rol
(bad)
mov
test
adc
neg
xchg
xchg
pop
pop
out
jae
ins
es
retf
pushf
mov
push
adc
add
mov
xchg
arpl
in
xor
cmp
ds
test
mov
test
add
push
repz
sti
and
lds
mov
shl
inc
xor
push
cmp
hlt
js
mov
push
loope
jo
punpcklbw
fidiv
jp
(bad)
popf
sbb
and
cmp
push
lods
not
cmc
sub
inc
fsubr
lds
retf
(bad)
loopne
inc
sub
aas
sbb
(bad)
lods
sbb
jne
fmulp
xor
movs
dec
js
fldcw
push
sti
or
retf
pop
pop
or
jmp
hlt
inc
rol
scas
jmp
out
sub
bswap
or
int3
sbb
mov
push
pop
into
pop
fs
pop
adc
sub
pusha
mov
(bad)
icebp
mov
adc
imul
cmps
xor
xchg
cld
jg
add
pop
adc
out
cdq
push
nop
fisub
mov
jo
mov
dec
enter
fild
sbb
sbb
mov
shr
leave
shr
lock
lods
xor
cld
jl
sub
adc
cmps
mov
mov
lds
sbb
lock
into
test
icebp
xor
icebp
xor
and
mov
mov
addr16
or
mov
arpl
lods
mov
mov
dec
retf
js
outs
dec
mov
call
inc
dec
cmp
and
inc
and
sti
jmp
cdq
add
pushf
push
add
in
stc
xchg
dec
in
repnz
mov
jl
test
retf
sahf
aaa
xchg
lods
adc
ret
loope
adc
push
mov
lea
rcl
inc
mov
imul
add
lods
cmp
sbb
es
enter
dec
jmp
jae
cmp
adc
fucom
div
outs
jb
jmp
mov
sub
arpl
pop
and
mov
sbb
adc
inc
push
mov
in
mov
fbstp
dec
xchg
sbb
inc
(bad)
in
imul
das
sub
aam
aas
lods
gs
pop
(bad)
paddd
push
in
call
jo
out
adc
in
jecxz
add
mov
mov
in
jmp
clc
ss
pop
and
dec
dec
push
jb
cwde
xor
push
(bad)
ja
cmp
imul
jl
jl
call
xor
shl
dec
sahf
and
lahf
or
adc
ins
cmp
ins
jbe
(bad)
retf
push
lods
mov
inc
mov
clc
fidiv
ss
fwait
mov
dec
mov
call
and
popf
ret
ret
add
jmp
push
aaa
out
pop
mov
add
out
cdq
fwait
mov
arpl
xlat
dec
icebp
scas
arpl
icebp
mov
fadd
sbb
xchg
popa
mov
dec
jl
xor
sahf
dec
movs
push
mov
lock
lahf
jmp
repnz
jbe
mov
jns
mov
mov
stos
std
clc
or
data16
mov
stos
(bad)
bsf
imul
test
sub
(bad)
cmc
xchg
fmul
fnstenv
push
inc
xor
into
cmc
push
mov
xchg
leave
sar
pop
(bad)
mov
call
jg
xchg
imul
xchg
jl
inc
mov
addr16
mov
shl
jmp
in
dec
sub
stos
sbb
inc
mov
sub
hlt
push
pop
dec
xchg
jae
call
in
ret
fnstenv
test
aad
push
ror
jne
push
cmc
(bad)
scas
xlat
daa
rol
push
mov
out
xchg
clc
cs
cli
(bad)
mov
xor
pop
jg
fstp
cwde
sub
loopne
pop
test
(bad)
dec
inc
pushf
inc
in
inc
xchg
scas
sbb
mov
push
cmp
mov
pop
inc
dec
push
test
lea
mul
xchg
loop
enter
push
out
pop
nop
or
jno
xchg
jl
test
(bad)
je
sub
ret
ss
pop
lods
mov
outs
cmps
push
in
aas
inc
inc
xchg
cmp
ret
mov
popa
ins
imul
aaa
mov
mov
mov
dec
cmc
int
xchg
push
mov
pop
xchg
test
inc
dec
repnz
pop
stc
repz
bound
repnz
test
push
enter
ss
mov
xchg
cld
fadd
ja
xchg
in
cmps
out
pop
mov
xchg
ss
in
rcr
pop
inc
add
pop
mov
fmul
mov
fst
cmp
leave
mov
fsubr
dec
mov
jmp
retf
adc
out
adc
in
inc
xor
jmp
xor
inc
out
dec
pop
test
(bad)
xchg
jbe
repnz
add
mov
outs
jmp
pop
ds
lds
mov
xlat
test
fidiv
sar
fwait
jl
(bad)
jne
mov
cmp
popf
dec
dec
sub
jecxz
bound
sbb
js
adc
mov
call
int
push
and
dec
test
stos
dec
push
ret
dec
cmp
mov
mov
mov
rcl
rol
adc
cmp
and
dec
xor
(bad)
stos
out
sahf
fwait
shl
pusha
push
aad
ficom
mov
rep
retf
cld
bound
jne
cmp
lea
dec
sar
fs
call
ret
jae
sbb
out
retf
mov
fadd
mov
mov
adc
test
arpl
or
mov
es
packuswb
idiv
les
ja
and
mov
fcom
lods
pop
into
retf
dec
cmp
jne
shr
dec
jecxz
sub
dec
push
ss
ret
shr
fst
ins
push
hlt
xchg
leave
jge
fisttp
aas
add
pop
mov
ret
es
xor
pop
sahf
ja
and
mov
cs
js
adc
jp
pop
loop
aaa
rcr
je
xor
xchg
sub
dec
ja
and
cmp
inc
int
jl
mov
mov
mov
stos
pop
pop
jl
rcr
iret
shl
movs
test
mov
or
xchg
and
dec
jecxz
push
imul
mov
mov
sbb
push
cs
loopne
(bad)
stos
jo
call
push
out
retf
mov
jg
or
leave
int
(bad)
cmc
and
stos
inc
fldl2t
mov
sub
fcom
jmp
cmps
dec
in
scas
sti
daa
popa
xchg
pop
cmp
mov
mov
fs
jb
xchg
inc
add
aam
dec
fisubr
add
aam
mov
adc
out
pop
inc
push
ss
imul
pop
sub
xor
ror
popf
inc
and
mov
int3
loop
(bad)
in
scas
xchg
mov
lods
cmps
jb
and
shl
ins
fbstp
pop
sbb
pop
sub
js
(bad)
into
mov
loopne
popa
mov
(bad)
or
icebp
dec
(bad)
cld
xlat
mov
fild
les
sub
xor
test
repnz
test
push
cmc
mov
dec
jp
push
into
shl
shr
jns
adc
gs
std
sbb
repnz
dec
sbb
pusha
(bad)
jmp
xor
add
nop
jne
xabort
push
sbb
push
arpl
lods
movs
sub
xchg
and
ficom
cwde
push
xor
int3
scas
bnd
retf
js
jp
sub
leave
mov
mov
push
out
xor
out
scas
cmp
gs
fwait
call
imul
loop
neg
cdq
mov
cwde
xchg
sti
nop
xor
clc
ds
gs
repnz
inc
stos
mov
pushf
inc
pop
mov
push
push
and
pop
pop
mov
mov
mov
xor
xor
pop
and
jae
inc
adc
test
jo
jns
sar
mov
imul
cmps
adc
or
out
adc
push
call
mov
shr
jecxz
mov
imul
xor
std
cmp
or
xchg
(bad)
aad
cwde
je
out
push
inc
test
inc
xchg
xchg
addr16
and
or
push
and
adc
mov
fmul
fld
test
sahf
std
imul
shl
jne
out
ja
ret
lds
fst
cmp
mov
rol
adc
mov
call
xchg
aaa
inc
outs
adc
xchg
popf
daa
iret
fidivr
(bad)
bound
xchg
or
cmp
retf
xchg
(bad)
icebp
xchg
add
xchg
ret
pop
add
sbb
jp
call
call
ficom
inc
adc
sbb
je
into
jno
popa
imul
repz
cmp
push
aas
movs
shr
xchg
jmp
jne
pop
xor
xor
mov
popa
mov
ds
aam
adc
test
imul
add
cmp
xchg
std
aas
sti
add
push
jne
mov
ins
mov
cld
xor
push
mov
xor
add
call
mov
add
push
cli
jmp
and
shl
xor
repnz
cmp
sbb
mov
jbe
xchg
push
xor
div
add
xor
sar
lds
sbb
sbb
ret
pop
push
pop
mov
mov
retf
out
inc
mov
test
outs
pop
ins
pop
(bad)
into
jno
inc
add
sti
je
push
mov
xlat
inc
pop
cmc
push
or
pop
xor
data16
fnsave
dec
in
retf
dec
sub
popa
ja
(bad)
scas
jl
push
shl
mov
inc
mov
inc
out
mov
or
shr
jecxz
scas
leave
jmp
inc
sub
enter
mov
test
scas
imul
lds
push
jg
(bad)
in
movs
imul
stos
(bad)
lea
fwait
push
popf
push
jg
(bad)
aas
out
mov
ret
and
jnp
and
mov
shl
push
in
or
(bad)
jae
mov
icebp
(bad)
mov
push
jmp
out
test
lods
sub
retf
(bad)
sbb
push
retf
sub
scas
ret
lea
mov
sub
fistp
retf
arpl
mov
shr
xchg
in
push
aaa
cmp
push
in
jp
xchg
les
nop
popf
aam
ins
jl
xchg
loop
aas
ficomp
mov
in
lahf
sub
mov
lock
or
pop
imul
ins
retf
mov
into
das
xchg
adc
sbb
mov
loope
add
in
jns
dec
jle
push
push
outs
stc
add
jo
sbb
xor
or
jp
xor
es
inc
xlat
mov
mov
cmp
pushf
out
cmps
cmp
push
mov
(bad)
mov
lock
out
idiv
and
xchg
(bad)
push
pop
add
and
dec
dec
push
push
and
dec
sub
jmp
push
rol
mov
xor
mov
mov
fld
inc
aaa
sahf
test
inc
inc
xchg
aas
retf
xchg
jg
fsubr
out
fbstp
iret
fld
movs
nop
add
aam
push
pop
inc
jle
sbb
jb
xor
pop
in
popa
stos
pop
ja
pusha
sti
clc
ret
mov
sub
xchg
inc
pop
xor
repz
xor
dec
lock
out
movhps
ficom
cdq
push
lds
mov
mov
test
(bad)
loop
in
nop
fs
iret
cmp
dec
push
jecxz
lds
das
jmp
out
mov
xlat
mov
cld
movs
nop
mov
pop
or
es
pop
shl
sbb
cmp
jmp
lds
rcr
js
aam
jmp
addr16
mov
mov
pusha
jl
cmp
cmp
(bad)
jnp
ds
outs
ficom
xor
jg
ins
xchg
xchg
movs
fsub
push
clc
adc
or
arpl
xor
outs
sub
jo
popa
jg
daa
inc
neg
jl
sbb
xor
paddsb
inc
and
xchg
adc
mov
mov
leave
test
fisub
inc
push
jecxz
mov
xchg
test
mov
pop
sti
cli
stc
mul
mov
retf
stos
jno
cmc
idiv
adc
scas
pop
sub
js
mov
enter
pop
pop
mov
stc
push
and
lods
push
outs
fisttp
outs
xchg
(bad)
imul
mov
mov
pushf
pusha
push
cmp
mov
int
xlat
mov
das
int3
stc
(bad)
into
lods
stos
jbe
mov
sub
jg
(bad)
clc
mov
imul
push
rcl
shl
out
adc
cmp
xchg
jbe
movs
xor
stc
add
pop
clc
xchg
sbb
add
enter
addr16
pop
mov
cdq
dec
mov
lahf
div
xchg
(bad)
scas
stos
aas
imul
imul
std
adc
mul
sbb
add
mov
leave
cmp
(bad)
cmps
std
test
push
adc
inc
or
ret
pop
sbb
aaa
js
mov
(bad)
das
pop
mov
fdiv
add
dec
test
loop
int3
mov
adc
adc
add
mov
sbb
lods
daa
out
cmp
stos
adc
cmp
mov
push
pop
push
call
test
dec
(bad)
or
pop
iret
jnp
mov
sbb
inc
xchg
adc
adc
xor
or
mov
cs
xchg
movs
push
ret
dec
jl
cli
push
sub
hlt
int3
add
leave
sbb
dec
stc
cs
aas
aad
bound
cmp
ds
leave
test
xor
cmp
shr
leave
aam
inc
leave
push
gs
push
(bad)
div
mov
jno
pop
int
adc
push
xlat
ja
jbe
cmps
mov
mov
push
out
pop
inc
sbb
fs
xchg
pop
fs
push
inc
xor
rcl
movs
aam
mov
cmp
jnp
out
cwde
ins
(bad)
ss
or
push
push
mov
mov
xlat
ror
int
repnz
add
repnz
das
adc
mov
fisub
hlt
cld
das
mov
jp
int3
sti
or
repz
sbb
(bad)
add
aam
dec
pop
inc
shr
add
push
stos
das
mov
cmp
test
sub
lods
jb
mov
dec
test
push
cmp
cmps
rcr
xchg
xchg
fs
cwde
push
in
adc
popa
bound
push
cdq
pop
xor
(bad)
jmp
inc
cmp
test
lock
push
loope
daa
xor
jg
cwde
repnz
pop
shr
mov
add
mov
fadd
sbb
cmps
dec
xor
cld
mov
pop
mov
loop
mov
push
out
xlat
jmp
pop
add
dec
fwait
add
xor
outs
adc
xor
mov
cmc
jecxz
xor
ret
sti
hlt
add
xchg
mov
es
dec
or
aad
lods
imul
push
daa
ficom
shr
retf
sub
inc
pop
pop
frstor
add
mov
dec
sbb
(bad)
pop
inc
in
pop
les
lock
push
mov
cld
cmp
fs
out
loopne
popf
xchg
cmps
retf
(bad)
sub
xbegin
setb
jg
mov
push
frstor
mov
jbe
pushf
jl
stos
xlat
repz
test
lods
jae
jae
sub
xor
gs
fsub
idiv
push
sbb
jne
sub
faddp
stc
sti
jge
or
xor
xchg
or
xor
pop
xchg
xchg
xchg
inc
dec
call
fs
jmp
jg
sbb
retf
jge
loopne
fwait
jl
pusha
repz
ds
es
xor
cmp
sub
sbb
and
cld
aad
ins
sbb
test
mov
cmp
test
jb
(bad)
iret
mov
lods
lods
add
test
sahf
add
neg
add
vpcmpgtw
leave
mov
adc
mov
mov
rcr
xlat
or
dec
inc
mov
leave
fild
mov
mov
not
adc
xchg
jmp
shl
add
dec
push
cmc
pop
mov
xor
mov
cmp
dec
xchg
into
jmp
adc
or
daa
pusha
ins
mov
cmp
or
popf
add
inc
rcl
fadd
sahf
mov
sub
sub
out
dec
outs
pop
addr16
and
test
pop
lods
xchg
shl
sbb
or
std
js
cmp
dec
nop
call
xor
and
xor
inc
leave
cmc
outs
or
and
pop
push
xchg
sbb
stc
sub
xchg
sub
adc
test
(bad)
in
inc
add
xor
ja
mov
cmp
pop
fcmovnu
adc
pushf
lea
fcomip
jo
call
int3
shr
or
or
dec
pop
add
popf
mov
add
pop
pop
jl
scas
imul
out
call
xlat
lods
mov
lods
pop
mov
push
xchg
in
stc
in
push
adc
aas
call
sbb
mov
or
mov
test
bound
cmc
xor
mov
or
fistp
pop
cmps
loop
inc
movs
jns
test
repnz
mov
in
fidiv
xor
hlt
inc
iret
adc
or
cmc
imul
jne
sub
inc
cmc
cmps
repnz
pusha
sub
hlt
(bad)
lods
sbb
mov
jge
dec
out
pop
or
dec
lea
cmp
icebp
movs
shl
cmp
sbb
xchg
es
js
(bad)
rol
cmp
sub
or
sbb
cdq
test
pop
pushf
and
in
aas
jns
(bad)
adc
imul
cmp
or
and
call
mov
pop
mov
call
imul
mov
inc
imul
stc
jb
daa
in
lods
and
push
dec
popa
movs
sahf
lods
jae
or
in
push
xor
xor
pop
jae
xor
movs
call
ds
sbb
inc
jle
cmp
prefetch
or
mov
mov
or
je
xchg
loope
adc
xlat
into
ss
add
adc
in
fcom
das
in
adc
cmp
clc
ret
xor
cmp
outs
push
js
pop
cmp
xor
ins
xor
xor
rcl
hlt
mov
xor
push
lock
mov
ss
sub
or
sbb
call
push
outs
mov
adc
gs
pushf
in
addr16
or
add
sub
jmp
pop
jbe
jmp
mov
or
lods
pop
jne
mul
mov
iret
aaa
out
leave
test
mov
ficomp
sub
sbb
jp
jb
ins
movs
lahf
addr16
(bad)
add
push
stos
fdiv
inc
pop
sahf
(bad)
int3
lock
xchg
add
pop
loop
les
mov
inc
loop
or
into
inc
pop
push
daa
imul
sbb
sbb
adc
inc
mov
dec
and
and
fidivr
iret
test
jecxz
mov
mov
push
(bad)
lock
shr
test
test
inc
popa
adc
das
in
adc
xor
push
xchg
jnp
pop
imul
or
xchg
cdq
xchg
icebp
cmc
and
test
pop
shl
in
sub
and
and
call
aad
repz
fild
lods
sub
shr
xchg
and
and
push
nop
sbb
dec
cmp
jg
fisubr
gs
leave
stos
jb
retf
cmp
mov
std
mov
rol
jo
pop
cmp
add
stos
fldcw
push
sbb
or
sub
inc
aaa
mov
ins
push
retf
ja
sbb
mov
neg
cmps
lods
sti
mov
not
retf
or
jae
test
mov
jae
loop
add
nop
add
sub
aam
jae
sub
add
mov
stos
add
ds
sub
sar
sti
or
inc
xchg
add
mov
cmp
int3
add
fisub
iret
daa
imul
push
(bad)
push
je
sbb
ds
xor
mov
aad
ins
mov
dec
cwde
sbb
mov
or
xlat
pop
jecxz
mov
push
mov
pop
or
inc
xor
adc
push
or
addr16
clc
xor
aam
mov
cmc
add
cld
sub
out
sbb
and
or
xchg
and
pushf
xchg
les
test
or
jg
push
jbe
inc
ss
jbe
ret
ficom
fbstp
in
in
(bad)
loopne
(bad)
jne
xchg
add
sub
ins
push
test
in
inc
mov
jno
mov
mov
cmp
fmul
push
clc
add
ret
mov
push
sbb
push
mov
dec
push
add
pop
retf
mov
aaa
dec
retf
icebp
xor
mov
pop
popa
fldlg2
outs
test
xchg
add
adc
and
out
add
push
lock
mov
xchg
ret
jle
dec
(bad)
mov
mov
lock
cmp
lods
(bad)
cli
pushf
ins
fistp
ret
mov
sbb
(bad)
mov
mov
fdivr
fistp
push
jg
inc
jb
(bad)
adc
or
push
inc
push
sbb
mov
cmp
sub
xor
mov
push
lea
xchg
retf
jle
cdq
sub
xchg
sub
push
in
ret
push
push
inc
push
aas
xchg
mov
jle
adc
popf
and
jnp
and
lods
cdq
or
pop
cs
lods
test
pop
out
jle
cmp
mov
mov
shl
sbb
sbb
leave
inc
mov
push
lds
outs
inc
dec
add
pop
cmc
test
sti
cmps
fwait
idiv
sbb
adc
movs
or
(bad)
mov
xor
bound
icebp
jo
and
adc
jl
mov
lahf
(bad)
(bad)
dec
pop
push
xchg
inc
or
pop
ins
mov
jge
and
mov
dec
sti
push
into
mov
(bad)
xor
movs
dec
in
add
sub
mov
sub
sub
stos
inc
out
xchg
inc
inc
mov
jg
cwde
xlat
xchg
dec
add
test
aaa
mov
pop
cmp
xor
pop
dec
stos
jo
pop
or
sbb
push
and
and
mov
imul
pop
xchg
fild
movs
dec
outs
pushf
ins
std
scas
cli
scas
movs
clc
add
xchg
jge
xchg
cs
xor
outs
adc
inc
cmps
(bad)
not
les
sbb
fld
aad
lds
and
pop
in
jnp
dec
push
int3
icebp
xor
das
mov
mov
cmp
mov
ret
ins
and
rcr
pop
ret
add
jbe
in
lods
scas
push
(bad)
(bad)
not
sahf
bound
out
mov
mov
scas
lahf
inc
add
dec
daa
pop
jmp
test
pop
jb
fidiv
cmp
dec
(bad)
mov
fcmovne
cmp
jmp
xlat
rol
sbb
xchg
pop
xchg
fisttp
jmp
ins
mov
int
inc
cmp
jbe
cdq
sub
push
fadd
addr16
(bad)
sti
or
cmp
inc
sbb
dec
jp
xor
loop
pushf
dec
dec
push
std
retf
(bad)
mov
imul
jno
out
jge
fimul
push
bnd
xchg
lods
movs
xchg
mov
pop
mov
mov
cmp
fadd
scas
fcomp
push
pop
ror
fidivr
jl
movs
and
pop
push
xor
fimul
dec
push
mov
sub
cmps
loopne
nop
and
xchg
lea
mov
es
push
sti
xchg
(bad)
jg
sbb
or
or
das
lock
adc
mov
cmp
mov
mov
push
jl
mov
xchg
lock
ja
cmp
sbb
cmps
outs
sub
pop
setbe
pop
cmp
mov
popa
push
inc
xchg
ror
outs
dec
pop
inc
add
(bad)
mov
add
int
xchg
xchg
xchg
test
call
sahf
jmp
mov
sbb
pop
out
mov
jne
mov
hlt
mov
cmp
mov
push
call
jl
jne
xor
dec
ficomp
lods
and
and
not
movs
mov
mov
mov
ja
sub
loope
mov
inc
add
jb
fucomi
xor
sbb
icebp
not
stc
shl
pusha
in
loopne
inc
or
jmp
mov
mov
in
je
mov
inc
cmc
cmp
and
scas
and
xchg
xchg
icebp
mov
xor
aaa
mov
adc
push
pop
jmp
xor
lahf
gs
adc
mov
add
mov
mov
sub
push
(bad)
icebp
mov
scas
fcmovnb
cmc
sub
dec
jnp
inc
cmp
xor
jp
lods
push
(bad)
imul
cmps
xchg
jae
ins
leave
fnstcw
and
jmp
ret
adc
lods
pop
cwde
imul
fisubr
mov
test
sbb
mul
aas
jecxz
pusha
es
push
fld
ins
(bad)
xor
add
mov
(bad)
std
mov
cmps
inc
inc
aam
scas
dec
pop
cli
xlat
mov
jecxz
call
out
nop
sub
nop
inc
xor
pushf
xor
inc
shl
mov
push
pop
xchg
out
jecxz
bound
push
mov
adc
jns
dec
sbb
mov
in
sub
aas
dec
mov
ficom
arpl
call
push
sbb
dec
sub
fs
sbb
mov
pextrw
mov
xchg
popa
ss
jle
je
test
clc
test
cmc
in
add
xchg
pop
mov
cmp
repz
fdivr
ret
bound
imul
arpl
xchg
mov
aas
out
test
loop
ror
stos
mov
fcom
mov
mov
push
mov
frstor
and
movs
test
(bad)
popa
fld
es
cmp
mov
les
test
sub
inc
adc
mov
aaa
mul
punpckhwd
popf
int3
fsubp
ret
in
push
cdq
adc
retf
mov
xchg
mov
fimul
lods
loop
adc
push
add
movs
sbb
pop
stc
push
mov
sar
mov
scas
mov
in
aam
dec
jns
shl
clc
and
sub
xchg
mov
mov
ss
cmp
scas
inc
rcr
imul
loope
push
mov
ja
xor
mov
jae
dec
xchg
mov
lahf
add
mov
not
int3
cld
fistp
pop
jle
jnp
inc
sbb
daa
and
cmp
lock
push
rcl
and
in
or
jbe
jb
xchg
cmps
push
addr16
mov
lods
retf
fsubr
push
outs
pop
in
sar
pop
or
jmp
mov
cmc
call
cmps
daa
retf
imul
add
mov
mov
lahf
(bad)
jle
hlt
les
(bad)
addr16
shl
inc
jmp
(bad)
jmp
imul
jo
out
push
in
ja
cmp
stos
cmp
lds
jmp
out
push
push
and
or
sub
clc
(bad)
call
test
inc
mov
cwde
dec
fmul
movs
xchg
sub
jg
add
lahf
push
retf
jmp
jo
sub
cmp
cmps
mov
popf
jg
adc
(bad)
xor
jecxz
(bad)
or
push
fisub
rcl
adc
movs
cmp
loop
xchg
stos
push
fld
fisubr
pop
jp
daa
neg
xor
dec
xor
retf
ds
aas
ficom
shr
rol
push
cdq
lods
out
pushf
cmp
mov
gs
cwde
mov
mov
mov
in
pusha
arpl
dec
inc
ret
pusha
(bad)
loop
sub
data16
fist
scas
jmp
ss
pop
and
sar
js
mov
cwde
pop
adc
push
lock
mov
aas
sub
dec
data16
xchg
jmp
mov
jl
fst
sbb
and
dec
mov
(bad)
mov
xor
outs
out
push
jg
jecxz
jo
cmp
psllw
shl
xchg
push
rcl
shr
idiv
mov
mov
lods
lock
sub
cdq
test
jno
out
or
fcomp
dec
push
int
lods
adc
mov
sub
fistp
jl
je
mov
fwait
stos
lea
mov
icebp
popa
into
jle
(bad)
and
sbb
repnz
test
out
jno
and
cmp
gs
xchg
mov
push
icebp
cmp
call
add
fld
jp
inc
mov
outs
movs
mov
retf
inc
adc
lahf
xor
test
xchg
clc
out
and
xor
jecxz
icebp
fistp
ror
or
in
or
pop
inc
sub
add
push
sub
imul
repz
mov
pop
jge
jmp
push
(bad)
call
lock
cmp
mov
lds
inc
inc
push
inc
cld
push
inc
and
adc
lods
add
push
cmp
sar
data16
lahf
in
lds
das
out
sub
or
aad
neg
in
cmc
adc
outs
sar
xor
(bad)
leave
mov
call
mov
pop
push
push
xchg
pop
popf
sub
adc
sub
lock
mov
push
pop
fcmovbe
cmp
jb
(bad)
sbb
push
sub
cmp
test
dec
xor
cmp
xor
cwde
sub
dec
cmp
cmps
das
jae
add
or
pop
xchg
sub
push
dec
(bad)
mov
cmp
hlt
imul
add
dec
xor
cs
bound
mov
cmp
add
push
lods
inc
cmp
push
stos
dec
cmp
mov
mov
imul
mov
enter
dec
cdq
jmp
mov
cs
push
add
ins
xchg
inc
fs
out
sub
inc
inc
pushf
dec
push
(bad)
(bad)
mov
push
or
jbe
in
push
pop
push
ins
out
arpl
jae
(bad)
mov
adc
add
int
imul
out
lock
sbb
cmp
inc
jge
es
sbb
repnz
ret
pop
cdq
push
push
les
pop
movs
jae
pusha
cli
xor
fsub
pop
xchg
jmp
js
mov
pop
inc
fs
cs
push
gs
add
xor
and
mov
mov
je
xchg
sbb
mov
stos
(bad)
pop
mov
enter
mov
movs
add
or
mov
pop
inc
xchg
xchg
inc
mov
add
aaa
pop
sbb
xor
out
inc
scas
aas
pop
(bad)
push
jo
jle
inc
lods
sub
icebp
push
lods
cmc
adc
cmp
push
pop
int3
sub
inc
or
push
(bad)
dec
mov
ret
xor
inc
outs
fcmove
cli
dec
xchg
pop
inc
and
fstp
add
pushf
repz
sub
dec
outs
in
das
imul
aad
push
add
je
sub
aad
xor
jl
cli
mov
aaa
push
bound
jae
mov
dec
ror
sbb
stc
cld
es
or
sub
pop
cmp
xor
int
movs
push
or
dec
retf
mov
dec
dec
mov
pcmpeqb
jnp
movs
xor
push
clc
inc
or
pop
sub
push
in
test
inc
or
in
out
aas
mov
sbb
sub
push
arpl
pop
in
sbb
dec
mov
(bad)
xchg
in
add
mov
imul
push
(bad)
mov
mov
loop
ror
xchg
inc
aam
test
jno
repnz
jp
ret
dec
mov
std
test
and
cld
dec
div
inc
pop
inc
repz
iret
push
pop
add
xlat
jmp
sbb
or
sub
jmp
and
push
les
test
cs
pop
ins
jmp
jmp
pop
cdq
jb
aas
or
jb
cli
ds
scas
(bad)
lea
cmp
push
rcr
gs
or
cmp
nop
jl
pusha
pop
pop
jno
iret
push
mov
or
jg
imul
or
nop
sbb
cmp
sub
test
add
int3
lods
xchg
cdq
push
inc
mov
cld
stos
pop
mov
xchg
aam
(bad)
mov
and
mov
jnp
movs
mov
adc
inc
ins
push
sti
shl
mov
jmp
inc
lods
jmp
pusha
sub
xor
sub
push
movs
adc
imul
pop
lods
cmp
sar
lods
addr16
std
lahf
leave
int3
mov
cmc
xchg
push
je
dec
mov
pop
loopne
dec
mov
(bad)
call
mov
fist
nop
fld
add
xlat
inc
inc
adc
mov
and
lods
out
pop
loop
faddp
repnz
and
in
int
dec
dec
push
addr16
mov
cmps
push
jg
imul
fs
push
sbb
imul
rol
call
je
mov
stos
out
mov
mov
cmc
sub
fist
dec
pop
cld
test
in
test
mov
cmp
pop
mov
sti
mov
mov
add
scas
fldcw
cmp
add
inc
push
add
cmp
mov
add
pop
mov
pop
fwait
(bad)
pop
movs
aaa
xchg
and
(bad)
imul
aas
mov
jmp
add
dec
aaa
scas
jmp
pop
jp
jp
arpl
fsubr
dec
xchg
test
std
sti
int3
pop
ficom
add
jae
push
sbb
mov
jne
jo
inc
(bad)
jg
adc
idiv
xchg
loopne
adc
mov
mov
sub
repnz
sbb
ret
push
and
pop
or
jmp
push
or
cmp
imul
add
and
aaa
pop
xchg
inc
sahf
and
addr16
dec
retf
adc
mov
js
adc
xchg
add
mov
add
jecxz
inc
outs
cmps
sar
mov
jns
add
mov
jae
les
pop
mov
rol
pop
adc
and
loope
jns
dec
inc
call
mov
sahf
cli
lahf
add
push
or
cmc
jge
ins
push
inc
popa
push
add
push
repz
in
adc
push
xchg
inc
ds
dec
scas
clc
sub
sbb
pop
sub
xor
fisttp
sub
mov
daa
bound
xchg
push
pop
mov
jbe
mov
mov
mov
push
repz
cwde
sub
xchg
mov
jmp
and
sar
cmps
(bad)
(bad)
cmp
sub
fs
loopne
sub
pop
test
sub
jg
lock
inc
add
sub
enter
(bad)
xchg
add
fistp
out
jl
retf
rol
(bad)
aaa
pop
test
cmp
aaa
int3
mov
mov
push
mov
(bad)
(bad)
fcmovnb
ins
sub
push
or
push
fcmovnb
stos
mov
(bad)
and
add
adc
sub
cmp
dec
fild
mov
mov
jb
ficom
add
out
jmp
out
repnz
into
push
pop
mov
pusha
mov
inc
cmp
cmp
push
sub
movs
shl
jg
and
ja
sti
enter
xchg
pusha
adc
mov
jge
xor
xor
lods
pop
ja
das
pop
inc
xor
cmps
dec
retf
xor
(bad)
icebp
mov
jge
popa
ja
fs
jb
mov
mov
cwde
mov
jmp
xor
dec
dec
lods
mov
and
out
and
gs
mov
clc
aad
push
jne
jnp
push
lds
sbb
mov
inc
(bad)
pop
pop
xlat
in
mov
jns
ficom
sahf
mov
(bad)
scas
clc
dec
cmp
ret
pop
push
call
cli
fidivr
sbb
mov
push
fisub
add
sub
jl
or
lds
repnz
std
and
dec
in
jle
and
ds
cmp
lahf
stos
sbb
in
dec
jns
jbe
sbb
dec
imul
push
xchg
pop
push
scas
call
or
mov
sbb
(bad)
inc
shl
(bad)
daa
pop
xchg
add
xor
or
scas
sub
sbb
in
xor
push
cli
es
ret
cmp
sti
dec
jbe
fild
test
mov
pop
popf
and
cmps
sahf
dec
inc
dec
movs
jmp
mov
setle
out
mov
arpl
add
cmps
out
jecxz
adc
dec
fist
mov
add
mov
bound
and
mov
(bad)
aam
or
in
cmp
scas
jno
popf
xchg
fcom
sbb
mov
fprem1
jg
rcr
popa
(bad)
push
or
add
movs
enter
inc
addr16
outs
not
jge
push
or
xor
dec
jno
jbe
dec
es
cdq
sbb
push
jae
icebp
push
(bad)
or
js
(bad)
pop
wbinvd
mov
in
sti
and
(bad)
fld
sar
imul
push
add
arpl
xchg
fistp
dec
outs
fisttp
pop
push
cmp
jbe
xor
jg
cmc
(bad)
clc
shr
mov
pop
arpl
or
hlt
ret
xor
jge
inc
jo
out
push
mov
es
out
pop
aad
cmp
pop
push
clc
repnz
loop
retf
push
int3
lods
push
(bad)
mov
call
jmp
ins
repz
pop
mov
inc
mov
inc
arpl
sub
pop
add
push
or
pushf
aam
jmp
shr
enter
aas
neg
outs
mov
and
push
retf
and
test
cmp
push
add
loopne
inc
mov
repz
add
data16
ret
mov
mov
or
hlt
in
mov
mov
cs
jle
retf
or
mov
fwait
push
daa
idiv
sub
mov
jmp
jno
inc
xchg
dec
sub
test
pop
aad
jnp
fdivrp
jb
cmp
rcr
lods
das
test
sbb
mov
fcompp
jge
lahf
push
mov
cdq
hlt
imul
ins
dec
js
rcl
ror
mov
adc
add
cwde
xor
ins
aam
adc
cmp
shl
sbb
in
xor
adc
mov
push
inc
cmp
fs
push
test
rcr
push
popa
jns
fstp
jo
inc
push
mov
ret
int3
ret
dec
jge
or
jns
sub
iret
jmp
fwait
ror
into
cmps
push
cwde
test
jne
aam
popa
fdiv
daa
stos
xchg
cld
adc
(bad)
sbb
inc
pop
push
xchg
cmps
leave
inc
jns
fcom
jb
fucomip
mov
(bad)
(bad)
stos
movs
mov
mov
pop
mov
popf
loopne
and
lahf
mov
dec
leave
push
sub
cmp
mov
enter
sahf
scas
data16
xchg
popf
dec
fcom
xlat
loope
push
leave
ins
or
(bad)
pusha
repnz
shl
nop
sub
popf
mov
mov
lahf
nop
js
std
dec
lock
xchg
sbb
rcl
pusha
addr16
repnz
sti
or
jbe
jae
pushf
std
adc
xor
jg
pusha
mov
out
sbb
mov
in
loop
popf
or
stos
loop
sub
daa
sub
dec
loop
loope
enter
jg
addr16
push
sub
add
mov
repz
add
cwde
and
rcl
cmps
inc
push
and
imul
in
cmc
xchg
psllq
clc
fcmovnu
push
outs
sbb
push
mov
jno
addr16
fisttp
lods
fwait
loope
dec
pop
repnz
daa
and
mov
std
(bad)
fcom
xchg
mov
push
add
imul
mov
add
push
adc
les
pusha
xor
or
je
je
sub
push
mov
aas
pop
jl
cmp
sbb
mov
(bad)
arpl
rol
xchg
sbb
mov
jmp
lods
or
(bad)
xchg
pop
call
cmp
pop
jg
call
sbb
movs
dec
rcl
rcl
movs
pop
rcr
and
push
adc
imul
cwde
xor
cmp
and
pop
xchg
jo
cmp
mov
add
pusha
(bad)
mov
cmp
call
loop
adc
xor
or
mov
rcl
imul
mov
rcl
fcompp
sbb
nop
shl
mov
mov
inc
icebp
mov
jle
iret
cmc
ror
pusha
(bad)
mov
movs
dec
and
leave
popf
neg
mov
add
mov
jbe
clc
stos
mov
movs
(bad)
jb
push
test
frstor
in
cmp
jmp
ret
rol
jmp
inc
mov
dec
or
mov
pop
bound
add
fsub
mov
cli
inc
daa
jbe
pop
inc
scas
inc
adc
(bad)
arpl
xchg
mov
(bad)
sub
add
ins
or
lea
call
or
mov
mov
push
mov
push
movs
push
xchg
cwde
out
mov
aas
neg
(bad)
push
retf
in
mov
adc
mov
and
sti
mov
mov
ins
push
sahf
out
sbb
cli
mov
adc
jle
stos
leave
cli
mov
out
arpl
or
and
push
mov
daa
jb
jg
imul
mov
dec
adc
mov
jle
xchg
pop
popa
call
repz
and
cmp
fdivr
popa
aad
cs
push
rcl
add
jle
sahf
or
es
popf
jb
pop
cmp
xchg
and
add
or
pushf
sbb
or
fidivr
stos
out
in
and
in
inc
xchg
jnp
add
pop
int
out
add
cmp
push
fwait
aad
jg
loopne
sahf
bndmov
fsubp
aaa
gs
dec
adc
jge
mov
push
and
(bad)
jns
cmp
push
in
popf
dec
out
push
push
add
push
cmp
and
lock
lds
mov
cmp
std
icebp
adc
fstp
jg
imul
enter
out
std
mov
xchg
aaa
sahf
adc
add
dec
mov
pop
aas
jne
pop
cmp
ins
sub
lea
add
pop
xor
jmp
outs
out
sahf
gs
push
ret
mov
das
idiv
adc
push
shl
and
call
mov
icebp
ins
xor
ret
mov
lea
inc
mov
jmp
loop
xor
js
sub
xchg
data16
iret
or
es
scas
inc
pop
mov
push
jbe
bound
ds
ins
xor
in
push
push
pop
lock
jmp
jno
dec
popf
add
lahf
push
scas
mov
fcom
hlt
icebp
pop
mul
and
or
push
mov
cmp
repnz
test
clc
(bad)
(bad)
dec
idiv
test
lods
arpl
pop
sub
mov
sti
sahf
sar
ror
movs
aaa
dec
cmps
inc
push
fadd
std
std
pop
(bad)
pop
fsub
dec
pop
pop
ficomp
or
pusha
in
call
ds
hlt
push
ret
pop
sbb
push
cmp
pop
or
sbb
inc
mov
add
push
js
aam
adc
pop
xlat
xor
xlat
or
in
cmp
fsubrp
hlt
dec
add
push
cmp
dec
push
into
das
add
xor
fcomp
retf
add
mov
jmp
loope
add
mov
add
xor
je
out
mov
xchg
jmp
xchg
not
adc
repnz
popa
jmp
adc
or
xor
retf
sub
add
lahf
cmp
repz
ins
sub
pusha
(bad)
cmps
dec
sub
or
add
ins
lock
dec
dec
jecxz
add
dec
outs
and
dec
jge
js
lock
fsubrp
adc
jo
jns
push
xchg
repnz
call
(bad)
xor
mov
cmp
jp
push
pop
(bad)
xlat
jo
test
fdivr
imul
adc
cmp
adc
pop
mov
mov
cmp
test
mov
(bad)
cld
add
cmp
jbe
cmc
jne
mov
pusha
hlt
jae
inc
fwait
rcr
xchg
daa
not
retf
test
call
jmp
jp
(bad)
cmps
cmc
inc
addr16
stos
mov
and
mov
sti
sbb
cmc
pushf
jbe
cwde
arpl
cmp
inc
sahf
and
retf
mov
mov
push
inc
push
push
mov
aad
push
data16
push
or
xchg
cmp
inc
mov
push
fbld
mov
adc
dec
mov
mov
lods
into
aas
push
repz
jbe
daa
pop
dec
daa
pop
mov
loop
inc
mov
pop
fbld
vpcomb
lods
retf
clc
xchg
cli
pusha
test
enter
and
or
ret
aas
adc
lahf
pop
lea
or
push
js
mov
aaa
add
dec
jle
nop
mov
xchg
push
mov
sbb
push
push
idiv
test
add
(bad)
aad
push
or
push
(bad)
js
jns
cld
imul
es
pop
dec
sar
arpl
popf
pop
repz
cs
inc
push
sbb
mov
mov
xor
out
dec
das
sbb
aam
jmp
(bad)
ins
jmp
sbb
pusha
stos
xor
ins
jne
xor
mov
jmp
sbb
jnp
inc
adc
and
ficomp
iret
fs
fld
or
or
mov
inc
outs
sti
xchg
jecxz
push
adc
(bad)
rep
push
add
inc
stos
stos
loop
js
sub
lods
xchg
addr16
push
jl
and
pop
cli
popf
sub
mov
ror
adc
mov
inc
jo
in
or
mov
push
aas
mov
jmp
push
mov
mov
sahf
mov
sbb
addr16
ss
push
cdq
cmc
fnstsw
dec
xchg
xchg
das
hlt
dec
call
xor
add
clc
in
or
xchg
xor
popf
mov
bound
mov
movs
pop
dec
pop
and
icebp
imul
int3
scas
int3
jae
xor
shr
and
xor
push
lock
jbe
and
sub
mov
cmp
mov
sbb
cmp
jns
jecxz
cld
mov
aad
push
std
sub
add
cmp
lods
sbb
out
dec
iret
imul
mov
addr16
push
adc
inc
cmps
ror
mov
mov
mov
mov
adc
clc
es
aas
ins
push
mov
out
retf
push
test
popa
mov
jns
mov
add
arpl
sbb
inc
imul
mov
dec
gs
pop
imul
les
sti
push
pusha
fld
sub
push
or
les
jns
stc
pusha
(bad)
and
bound
scas
mov
mov
fs
adc
adc
test
pusha
xor
mov
mov
fwait
adc
mov
xchg
shr
fidiv
fadd
hlt
int
ret
or
mov
cdq
jle
sar
dec
aaa
cli
shl
mov
mov
mov
mov
mov
cdq
adc
pop
mov
scas
jp
xchg
jns
test
fwait
imul
lea
add
mov
push
sar
jmp
addr16
cmp
push
push
aam
sbb
pop
sahf
adc
fsub
pop
cmp
sbb
push
adc
and
div
push
ins
mov
int
dec
xchg
xchg
cmc
mov
test
inc
out
stc
xchg
add
movhps
inc
lock
sahf
push
rcr
fxch
jge
push
int
cmps
test
add
fmulp
popf
push
sbb
jmp
mov
push
sbb
cmp
in
stc
and
(bad)
mov
in
mov
in
and
push
mov
push
cmove
xor
retf
lock
popf
shl
movs
push
iret
pop
xor
and
int3
xchg
cmps
call
and
addr16
add
aam
adc
xor
inc
add
jb
loope
daa
sub
sahf
lds
addr16
xor
clc
jl
pop
stc
dec
out
sbb
mov
ret
and
push
ja
xchg
lods
or
out
aam
out
cld
and
out
add
sbb
and
cdq
jle
fistp
lock
dec
ret
das
rol
cmps
pusha
fdivp
jbe
hlt
xor
(bad)
pop
fwait
pop
cld
sub
mov
fcmovb
fidivr
sub
pop
mov
xlat
popa
xor
imul
sub
ja
sbb
imul
xchg
aaa
adc
xchg
sub
vphaddwd
mov
xchg
iret
cmc
mov
lock
pop
xor
mov
out
mov
jmp
inc
arpl
fld
mov
repz
repnz
cmc
sbb
fidiv
ins
add
fmul
(bad)
iret
inc
mov
adc
pop
mov
mov
inc
cmp
retf
mov
mov
mov
shr
xor
out
pushf
fstp
outs
jmp
arpl
test
pop
inc
in
movs
inc
ins
adc
rol
ret
out
push
lea
cld
scas
mov
adc
test
ins
mov
mov
cwde
xchg
sub
or
pop
movs
ret
jmp
and
and
mov
es
pusha
(bad)
pusha
jmp
cmp
jo
jnp
cld
mov
lea
xchg
push
mov
inc
mov
inc
xor
jp
xchg
add
xchg
pop
movs
push
jae
js
mov
loop
adc
int
adc
ror
aad
scas
(bad)
(bad)
inc
popa
sub
je
cld
push
inc
ins
dec
xchg
xchg
mov
xchg
mov
daa
fistp
push
dec
neg
in
imul
xor
cmp
retf
pop
js
mov
mov
idiv
into
or
fwait
adc
push
shl
xor
mov
cwde
sub
xor
shl
iret
(bad)
daa
jae
jl
adc
jmp
add
inc
xchg
fisub
dec
jnp
sbb
bound
inc
push
or
lods
inc
sub
push
pop
outs
push
sub
inc
xchg
xchg
and
inc
(bad)
xor
and
push
adc
loopne
sub
popa
push
int
das
sub
xor
cdq
push
cmp
xchg
jne
cli
xchg
scas
test
inc
xchg
dec
test
(bad)
into
pop
clc
inc
cdq
adc
fsubrp
or
mov
add
nop
ror
mov
pusha
inc
mov
jg
lock
lds
pop
inc
jbe
xchg
test
inc
inc
xchg
fisttp
or
jb
sti
adc
sahf
or
ss
and
jecxz
test
inc
outs
mov
sub
xor
(bad)
stos
xchg
in
pop
ret
jmp
(bad)
pop
movs
mov
retf
lods
leave
enter
iret
ins
jle
jae
in
in
iret
xchg
mul
and
std
inc
fwait
js
xor
cmc
int3
fdivr
sbb
bound
scas
mov
in
repnz
adc
stos
ins
cmp
add
aam
bound
jle
xchg
jge
cdq
add
outs
sbb
test
push
daa
dec
pushf
dec
stc
ret
sbb
das
cmps
dec
jo
test
add
fwait
mov
and
in
mov
pusha
daa
hlt
sbb
mov
fbld
cld
aad
in
push
sub
jg
test
add
xchg
adc
(bad)
aas
in
mov
dec
pop
lahf
sub
in
add
lahf
hlt
xchg
mov
xor
out
push
aad
push
mov
jge
loopne
mov
gs
call
in
clc
scas
add
cmc
xor
cs
push
mov
jb
sbb
call
nop
adc
lds
lds
pop
clc
imul
test
(bad)
outs
mov
(bad)
movs
nop
int3
adc
fadd
dec
adc
dec
inc
adc
push
or
xlat
jb
sbb
mov
xor
pop
mov
dec
adc
inc
popf
sub
movs
leave
cs
dec
inc
es
test
pop
sbb
xchg
adc
and
hlt
rep
loop
fs
mov
add
popf
adc
jmp
or
mov
xchg
or
jmp
pop
mov
scas
jnp
xchg
push
dec
sbb
(bad)
movs
outs
or
jmp
inc
out
out
popf
pop
add
stos
rol
aam
mov
push
xlat
out
aam
jns
lock
ficom
mov
into
or
call
mov
les
sub
pop
icebp
aaa
icebp
mov
inc
mov
mov
add
cmp
shl
jle
idiv
ds
nop
xchg
pusha
in
outs
sbb
retf
js
pop
or
jae
mov
jno
or
push
push
sub
mov
mov
not
add
dec
dec
ret
lods
scas
jle
jb
xchg
call
cmp
and
push
push
jge
into
jp
push
adc
pop
test
js
push
add
inc
jecxz
sar
pop
(bad)
hlt
add
mov
aad
fs
out
jnp
sbb
sbb
jl
pop
push
dec
xor
mov
fwait
add
stos
or
std
adc
loopne
adc
and
sar
adc
in
push
ds
push
(bad)
(bad)
adc
and
pop
fimul
mov
cld
mov
ret
cmc
retf
sbb
lods
mov
jp
mov
dec
mov
adc
push
ret
cmc
xor
int3
sbb
mov
movs
push
dec
call
or
push
xlat
popf
pop
pop
lods
adc
aas
lds
out
mov
movs
adc
std
mov
fsub
inc
fisttp
mov
jno
sub
lods
sahf
and
test
or
cmps
not
sub
jge
or
adc
xor
test
inc
mov
dec
inc
and
xchg
mov
ret
fadd
sub
cmc
out
mov
data16
jbe
pusha
cmps
cmp
xchg
mov
(bad)
(bad)
imul
pushf
rcl
sub
jbe
xchg
or
xchg
inc
popf
dec
fdivr
inc
dec
imul
test
pop
cmc
cld
push
mov
inc
xchg
push
sub
shl
mov
inc
stc
icebp
inc
pop
jle
loope
mov
ret
cs
jmp
in
mov
inc
scas
int3
arpl
loope
jl
jle
repnz
pop
movs
cmp
int3
or
xchg
fcom
pop
pop
loop
test
in
or
sbb
sbb
or
pop
pop
scas
jp
mov
inc
dec
les
test
sbb
pop
mov
sub
hlt
sbb
(bad)
jnp
in
ins
xlat
mov
and
fwait
ja
cmc
scas
push
jle
cmp
fwait
sbb
push
mov
mov
mov
inc
and
fld
mov
or
cmp
out
xor
xchg
push
and
push
jge
out
or
push
sbb
sub
cmp
popf
mov
mov
rcl
cwde
loop
or
popf
or
cli
fcomp
(bad)
lahf
les
or
or
pop
adc
mov
pop
rol
dec
mov
push
and
sub
stos
cdq
jmp
repnz
add
outs
aaa
hlt
cli
or
mov
xchg
in
int3
xchg
dec
inc
xchg
jecxz
call
push
cmp
repnz
xchg
call
push
push
fisubr
clc
cld
sub
xor
imul
mov
mov
adc
rol
xor
add
xchg
mov
sub
dec
mov
xor
or
gs
imul
xor
add
push
hlt
and
dec
jnp
div
imul
sbb
inc
push
movs
mul
call
das
xchg
pop
lock
popf
adc
ret
jb
shl
mov
add
sub
ja
fldenv
sub
push
sub
jns
push
mov
and
sub
xlat
sbb
and
popf
cmp
(bad)
adc
out
movs
je
rcl
ror
mov
inc
cwde
add
pop
dec
or
loopne
repz
out
bound
int
push
sub
ins
pushf
mov
out
jmp
mov
ja
aad
ins
ror
mov
inc
dec
scas
or
push
sar
jnp
or
jmp
ret
popaw
xchg
mov
dec
mov
fs
cmp
inc
push
push
jecxz
xor
or
xchg
xchg
push
inc
or
pop
mov
js
ret
jmp
rcr
jmp
mov
and
sbb
aas
scas
xchg
and
pop
sbb
lea
popa
mov
mov
mov
mov
mov
pextrw
scas
add
ret
call
sbb
rol
int3
xor
loope
pop
dec
jg
mov
cmp
push
mov
imul
cmp
(bad)
outs
mov
fistp
in
pop
ret
jmp
xchg
idiv
inc
lds
jmp
js
inc
mov
cmp
inc
adc
stos
xor
aad
pop
ret
movs
inc
jmp
sbb
retf
push
fwait
shl
outs
mov
mov
rcr
loopne
dec
mov
je
out
scas
(bad)
or
xor
dec
ds
test
out
sub
movs
popf
(bad)
icebp
cmp
inc
in
inc
stos
xchg
xchg
fcomp
push
sbb
pop
sub
push
jecxz
fsubr
inc
mul
rcr
xor
mov
adc
mov
aaa
ja
push
lods
dec
jmp
icebp
fnstcw
xchg
push
shl
loop
or
inc
ss
loope
inc
add
mov
repnz
fsub
inc
dec
mov
mov
test
inc
cmps
std
in
mov
iret
pop
or
jg
push
xlat
cmps
call
inc
daa
ss
mov
fwait
in
jb
in
or
rcl
xor
dec
sbb
lfs
dec
cmps
test
jmp
fsubr
inc
sbb
or
xchg
data16
aas
cmc
push
into
ret
pop
and
retf
and
retf
mov
iret
ja
in
pop
sub
in
jmp
pop
xor
and
fcom
cs
idiv
push
push
rcl
push
call
jns
lea
pushf
add
scas
and
lds
nop
xchg
cvtpi2ps
aam
ss
loopne
mov
iret
cmp
and
leave
adc
mov
int3
cld
mov
inc
dec
enter
adc
(bad)
cmp
xchg
lock
out
aaa
ds
push
popa
mov
adc
popf
cmp
mov
sbb
rol
mov
outs
mov
in
xor
popa
jg
sub
dec
stos
or
imul
cli
out
push
sub
and
das
mov
push
das
mov
and
xchg
xor
pop
sbb
sub
out
in
push
fmul
or
test
retf
movs
push
jbe
mov
mov
leave
sub
jl
rcr
mov
not
or
imul
mov
nop
mov
cmp
test
dec
jns
cmp
jmp
pop
imul
mov
adc
jne
sub
ins
aam
fwait
popa
mov
inc
sbb
push
lahf
call
and
je
shl
jb
call
outs
or
cmp
pop
pop
test
sti
push
or
mov
(bad)
or
inc
mov
pop
daa
mov
dec
pop
xor
cmp
in
(bad)
retf
jg
inc
shl
add
sub
pop
(bad)
xlat
fwait
arpl
ficom
jle
ja
mov
pop
and
push
cmp
movs
dec
or
lds
xchg
mov
fld
mov
inc
push
fwait
cdq
neg
mov
sub
or
xchg
pushf
jecxz
retf
or
add
in
ret
xor
sub
cs
cmps
dec
mov
pop
mov
pop
pop
rol
mov
dec
dec
sbb
cmp
sbb
or
test
mov
pusha
sbb
xchg
xor
call
pop
pusha
scas
xor
mov
test
out
push
movs
or
imul
mov
je
ret
mov
add
icebp
repz
call
add
and
mov
push
add
jne
mov
hlt
inc
aaa
outs
ds
push
mov
ja
gs
daa
pop
dec
jle
sub
jo
adc
scas
mov
mov
push
lahf
iret
add
imul
dec
ins
pop
test
pop
push
mov
pop
pushf
call
fwait
enter
cdq
mov
jl
pop
mov
xor
imul
and
in
shl
pop
mov
test
xor
lahf
jge
gs
dec
xchg
add
mov
loopne
add
sbb
(bad)
fadd
dec
or
imul
push
push
clc
ss
xor
ja
cmp
fs
aas
pop
mov
push
pop
shl
ss
dec
jecxz
(bad)
out
mov
inc
xchg
inc
in
xor
(bad)
das
jp
lahf
test
jnp
dec
jns
or
outs
cmp
shl
(bad)
into
adc
popa
mov
cmp
adc
mov
xor
push
jmp
and
lods
das
and
inc
sahf
out
xor
icebp
not
inc
sbb
adc
cmc
sbb
and
fwait
inc
add
xlat
test
bound
dec
xchg
cmp
ss
idiv
loope
mov
(bad)
test
stc
rcr
pop
shl
adc
aas
(bad)
cmp
sub
push
mov
inc
or
xchg
add
push
lds
rol
jecxz
loop
jle
dec
cmp
mov
jb
push
loope
mov
loope
xlat
test
ret
push
xor
sti
gs
js
ja
jo
pop
jno
fild
inc
js
imul
aaa
add
add
or
and
push
or
mov
call
mov
push
sub
xchg
add
fdiv
jg
xchg
cli
and
xchg
inc
xor
adc
inc
nop
mov
jg
inc
dec
mov
jecxz
mov
pop
sub
mov
xchg
test
fiadd
jno
leave
aas
fbstp
jle
add
cmp
lds
sub
cmp
xor
test
scas
sub
out
pop
mov
mov
and
mov
test
mov
(bad)
mov
sub
prefetchnta
pusha
cmp
cmp
(bad)
fist
sbb
or
mov
out
pop
lods
mov
adc
push
ret
getsec
inc
mov
ret
dec
mov
add
int
outs
lods
clc
mov
in
dec
dec
loope
mov
scas
mov
cmp
jle
cmps
push
mov
cmp
lea
cmp
int3
cmp
mov
pop
ja
add
or
ror
xlat
cs
and
cli
mov
mov
adc
pushf
das
cmps
sub
cld
inc
cmp
out
ret
fdiv
mov
cmps
mov
fcom
int3
push
sbb
jle
and
outs
stos
inc
lea
loopne
jmp
xchg
xchg
xchg
cdq
retf
sub
mov
lock
out
cmp
not
jle
mov
aas
jbe
stc
sbb
inc
sar
lea
xor
shl
jg
mov
jecxz
inc
adc
mov
lock
js
mov
cdq
mov
sbb
sbb
cmp
inc
test
fnsave
xor
or
push
ss
movs
ror
jne
adc
enter
mov
mov
dec
mov
hlt
std
dec
or
mov
inc
mov
sbb
adc
call
jg
test
push
mov
pop
adc
and
cmp
inc
out
mov
das
gs
xchg
into
xor
dec
fs
inc
adc
(bad)
test
dec
repz
je
xor
jle
push
aad
leave
xor
xchg
xchg
and
not
mov
or
mov
test
xlat
ficom
outs
fcomp
pusha
inc
ins
fld
hlt
xchg
jmp
inc
stc
ret
push
xchg
xchg
addr16
aam
pop
aam
mov
std
(bad)
repz
in
mov
mov
jle
add
fmul
pop
aaa
ror
dec
and
pop
pop
hlt
fsin
dec
mov
add
jg
fsub
cmp
xchg
ds
adc
jne
xchg
and
jge
ss
add
out
ss
loopne
cli
mov
daa
iret
idiv
cmp
pushf
mov
dec
enter
in
mov
and
stc
mov
bound
rol
pop
ins
mov
pop
adc
jnp
jle
adc
jmp
loopne
mov
dec
push
cmps
repnz
fcomp
sahf
inc
jno
pop
out
cmp
inc
mov
dec
icebp
or
xchg
stc
and
xor
jmp
adc
cmc
dec
(bad)
dec
or
scas
mov
mov
in
dec
div
push
xchg
(bad)
or
inc
pushf
mov
fnstcw
push
cmp
inc
cli
ret
add
cdq
aad
lea
stos
sbb
jae
out
rol
mov
sub
test
in
sti
ds
call
js
je
daa
(bad)
lea
(bad)
push
je
mov
or
lods
mov
cmps
push
clc
movs
mov
add
ds
psubq
inc
mov
int
push
mov
adc
aaa
cs
adc
jae
rcr
fimul
mov
cmp
mov
js
call
push
jae
loop
cmp
ret
loop
(bad)
call
push
sbb
mov
repnz
nop
outs
pusha
js
stos
inc
xchg
retf
vaddsubps
hlt
call
mov
inc
xchg
jp
dec
retf
sbb
imul
jmp
fisubr
or
ficomp
leave
addr16
mov
or
cmp
iret
(bad)
and
xor
pop
test
retf
cld
or
stos
jno
rcr
iret
stos
sub
repnz
cmp
sbb
ret
das
mov
jbe
fnsave
fwait
jg
jo
fldpi
gs
cmps
mov
mov
clc
or
jnp
neg
xor
stos
sub
aam
jnp
aaa
outs
stc
push
jl
test
mov
jae
cdq
sub
mov
aad
popf
push
xchg
push
and
or
mov
xchg
les
std
xchg
sbb
cli
cmc
mov
cld
mov
add
mov
pop
add
adc
xlat
jle
in
cld
(bad)
cs
inc
lods
scas
icebp
cmp
mov
cmc
sub
jns
adc
cdq
test
hlt
push
sub
or
sub
jg
sbb
mov
xor
dec
add
mov
mov
in
and
cmps
xchg
clc
jl
daa
jb
jmp
jle
mov
sbb
or
and
(bad)
loop
mul
dec
js
jp
xchg
adc
ins
in
shr
fisubr
repnz
movs
sti
sbb
dec
mov
cmp
mov
lock
mov
sub
mov
xlat
jmp
out
pop
jae
lods
jecxz
popa
bound
in
push
jmp
mov
iret
sbb
push
daa
fwait
(bad)
cmc
int3
cmp
cli
into
iret
push
pop
xchg
sbb
aas
repnz
mov
imul
int
sti
lea
rcl
fwait
add
lods
sahf
aaa
ror
cmps
jmp
(bad)
xor
test
shl
stc
mov
outs
ret
call
aam
bnd
mov
std
sub
and
dec
mov
clc
add
vcvttps2dq
jl
outs
and
out
jb
pop
lods
jb
aas
es
mov
cmp
int
jecxz
addr16
and
mov
pop
pop
test
dec
(bad)
js
ins
jle
pop
or
lahf
leave
jbe
pop
pop
xchg
jmp
(bad)
or
pop
pop
or
xor
adc
imul
jmp
mov
sahf
dec
sahf
shr
(bad)
in
outs
cmps
test
sub
or
(bad)
pop
pop
cmp
xor
ss
stc
sahf
push
test
(bad)
in
jae
sti
mov
xchg
ret
idiv
sbb
cld
add
dec
pop
(bad)
dec
jle
das
aas
fs
cmps
test
or
mov
bound
popf
popa
jbe
xchg
shl
popf
push
cmp
mov
leave
xchg
cs
sub
dec
leave
inc
or
lock
pop
mov
sahf
xchg
cmp
gs
jg
in
dec
push
mov
aaa
adc
ds
push
into
and
std
aaa
movs
cwde
mov
pop
jmp
dec
cmp
xchg
pop
lods
hlt
ins
(bad)
test
cmps
(bad)
jmp
and
xchg
xchg
fimul
les
cdq
xor
jmp
movs
icebp
mov
adc
push
test
shl
mov
xchg
xor
or
inc
sub
pop
ror
rcl
inc
jl
jb
pushf
jnp
push
dec
dec
push
xchg
sub
out
and
fldpi
leave
xor
clc
shr
repz
mov
out
repz
sar
(bad)
les
sub
mov
rcl
je
rcl
lea
jp
gs
xor
cdq
dec
outs
add
lds
clc
cmc
xchg
es
mov
test
ss
leave
xchg
fld
jo
jnp
push
rcl
jge
dec
ja
mov
in
scas
push
xchg
inc
mov
push
lock
fistp
xchg
adc
and
test
stc
mov
xor
xor
sbb
push
adc
aad
pop
in
addr16
cmc
jmp
or
or
dec
ret
shl
out
xor
cmc
shr
stos
pushf
nop
sbb
xchg
mov
mov
adc
or
out
test
pushf
lahf
fld
mov
sti
adc
or
or
xlat
xor
xchg
inc
dec
xlat
leave
test
icebp
lds
mov
cld
mov
jge
xor
sbb
out
adc
fs
inc
or
mov
out
jge
fwait
rol
dec
adc
cmps
xchg
movntps
ss
xor
inc
xchg
cmp
mov
jmp
lea
scas
jl
adc
ret
add
icebp
inc
and
retf
mov
sahf
inc
sub
xchg
out
add
cmps
jl
jmp
fstp
es
add
scas
ss
and
sbb
pop
retf
pop
in
jae
push
xchg
inc
or
lock
jo
bound
iret
inc
shl
jbe
and
dec
ins
xchg
mov
clc
enter
adc
cmp
adc
sbb
icebp
jae
pop
idiv
push
cdq
sbb
lea
mov
retf
lahf
add
lock
jmp
mov
mov
push
stos
repnz
shl
push
popa
sbb
in
and
jnp
xchg
mov
mov
es
arpl
pop
mov
inc
mov
pop
mov
pop
bound
and
cli
xor
and
push
mov
and
in
mov
push
dec
aam
cmp
jmp
sub
arpl
sub
hlt
imul
push
ins
adc
lods
mov
das
mov
lods
sbb
std
retf
in
push
or
jecxz
daa
sbb
pop
loopne
pop
add
jns
(bad)
mov
mov
mov
sldt
mov
test
cwde
xchg
jae
cmp
mov
das
inc
jmp
out
(bad)
dec
loop
out
or
idiv
or
scas
and
dec
mov
hlt
test
cmp
call
mov
pop
mov
fisttp
lds
adc
mov
sbb
retf
ins
inc
sbb
xchg
dec
stos
test
inc
pop
lods
sub
sbb
int3
sub
jle
(bad)
cmp
(bad)
dec
mov
lods
call
sbb
sbb
in
cmc
pop
repz
mov
push
xor
ss
adc
loope
jae
mov
adc
mov
dec
out
fstp
inc
test
and
call
push
jl
imul
dec
sti
fldcw
add
sbb
inc
in
in
jl
sar
jmp
in
xor
inc
jge
(bad)
aam
mov
dec
or
adc
pushf
push
fbstp
fadd
xchg
pavgb
test
sar
dec
rol
jmp
lds
jg
jmp
pusha
lock
push
fidiv
push
std
sbb
icebp
fwait
imul
jl
cdq
mov
loop
iret
adc
dec
hlt
push
mov
add
fcmovnbe
mov
jno
fbld
test
ror
and
in
aaa
test
jmp
jnp
pop
mov
mov
inc
cmp
ins
mov
xchg
push
ret
mov
add
sbb
aam
pop
ret
fldcw
pop
cmp
inc
dec
push
and
out
call
int
int
aas
mov
pop
mov
ret
sbb
out
xchg
retf
into
retf
mov
sahf
mov
dec
imul
aas
dec
pop
clc
sbb
test
inc
inc
jecxz
clc
call
mov
sbb
(bad)
iret
dec
loopne
pop
call
inc
icebp
push
shl
icebp
sti
sub
fwait
dec
pop
pop
loop
dec
(bad)
test
cmps
hlt
imul
test
sub
sti
sub
loopne
retf
cli
cmp
sbb
mov
mov
sub
lods
sub
jge
fdivp
pop
popa
test
jnp
pop
imul
dec
push
jne
fmul
out
arpl
mov
cld
int3
add
xchg
leave
je
xor
xchg
mov
popf
xor
jmp
jmp
cmp
jmp
lods
gs
movs
aaa
outs
mov
dec
mov
es
stc
pusha
inc
fcmovne
pop
out
push
cdq
enter
mov
push
mov
jle
aaa
inc
pop
jmp
inc
out
mov
xchg
and
shl
pop
xor
out
xor
xor
icebp
jge
mov
xchg
in
mov
int3
dec
xchg
sub
pusha
mov
stc
and
icebp
or
sub
or
call
test
fmul
imul
add
pop
cwde
or
adc
mov
lock
xchg
sbb
add
lahf
cmp
lods
popa
pop
mov
pop
cmp
aam
aas
inc
jge
clc
in
cmps
add
loopne
sub
mov
jp
push
sbb
adc
retf
cld
pop
js
dec
inc
in
mov
dec
jl
nop
cmp
inc
and
push
mov
pop
mov
mul
xchg
out
shl
mov
sub
or
jg
inc
pop
jae
sbb
popa
pop
lock
pop
gs
inc
push
or
sbb
dec
mov
inc
push
bound
jmp
pop
mov
pop
push
sbb
cmps
xchg
addr16
dec
scas
and
test
pop
jmp
sub
push
mov
cmp
clc
stos
dec
xchg
mov
repnz
jmp
pop
adc
dec
mov
mov
iret
xchg
push
and
cdq
cmp
xor
(bad)
and
cs
popf
pop
mov
and
pop
ficomp
cld
(bad)
adc
pop
xchg
jl
cmp
loope
out
pop
mov
jo
push
fist
leave
(bad)
sti
mov
pop
xchg
hlt
repz
sub
icebp
sub
js
or
ins
and
ja
retw
daa
pop
dec
jns
(bad)
mov
fwait
inc
enter
mov
mov
add
pop
cwde
dec
xchg
pop
sar
fistp
xlat
sti
lahf
imul
outs
push
fild
and
ins
rcr
push
vorps
inc
pop
inc
and
popf
and
cs
nop
dec
or
ror
clc
mul
push
and
(bad)
retf
fcmovnb
and
icebp
les
mov
aaa
push
pop
push
lods
inc
outs
leave
xchg
stos
push
jno
or
mov
cmp
or
xor
clc
cmp
mov
dec
adc
cmp
scas
jo
add
inc
test
pop
xchg
lods
adc
push
push
adc
adc
mov
stos
jmp
nop
retf
push
mov
imul
inc
adc
push
sub
jl
pop
cmp
sbb
ficom
sub
sar
int
fwait
xchg
dec
mov
outs
pop
push
inc
mov
test
je
mov
pop
mov
add
inc
enter
xchg
retf
sbb
sbb
jo
test
dec
repnz
cmp
je
mov
hlt
jmp
aaa
xor
xchg
cmp
mov
jecxz
addr16
cmc
aas
js
pop
cmps
addr16
inc
out
add
or
xchg
(bad)
add
xor
fs
pop
les
adc
fwait
jge
mov
int3
cwde
sbb
jge
sub
fadd
test
dec
in
sub
cli
(bad)
out
mov
xchg
and
xor
sbb
fucomip
aaa
fist
movs
xchg
(bad)
mov
mov
or
cwde
sub
addr16
sub
aaa
lods
fst
sbb
dec
rcl
cmp
out
sub
frstor
and
push
pop
adc
aaa
int3
and
aad
ror
jns
fstp
mov
test
int
jns
mov
mov
call
rcr
cmp
pushf
push
adc
in
mov
xchg
daa
mov
xor
cli
push
mov
inc
pop
stos
repz
cwde
xor
stc
sbb
sub
xchg
jg
ja
ja
dec
iret
outs
loopne
sub
fcmovb
pop
inc
pusha
add
loope
retf
mov
rol
sahf
repz
ins
out
inc
pop
sbb
repnz
xchg
jae
mov
jmp
sub
test
je
jmp
jnp
add
outs
(bad)
je
pop
cmps
ins
sub
popa
dec
fst
inc
ins
lea
(bad)
jg
and
mov
mov
push
push
xchg
movs
cs
dec
push
fcom
add
pop
aaa
jge
clc
ds
sti
mov
cmp
and
sbb
mov
addr16
pop
sar
add
pop
lods
movs
mov
scas
fwait
out
cmc
or
ret
fldcw
xor
ret
xchg
add
or
shl
xchg
sbb
stos
and
push
jno
inc
call
test
xor
add
cli
cwde
pop
shr
pusha
sub
push
xchg
sahf
xor
push
add
inc
pop
jbe
ret
mov
push
xchg
test
mov
inc
adc
inc
jne
test
in
adc
mov
sar
pop
out
bnd
out
jmp
and
aam
dec
xchg
mov
scas
mov
sbb
mov
push
int3
jbe
mov
pop
std
pop
icebp
stc
sub
imul
push
jne
and
scas
(bad)
aaa
cmp
(bad)
out
mov
pop
fwait
pop
cmovbe
and
jo
mov
mov
push
mov
push
fisubr
(bad)
jne
loopne
rcl
xchg
xor
xchg
fst
or
int
leave
jbe
inc
retf
cs
test
inc
aad
ins
mov
les
sahf
or
inc
mov
xor
fcmovnb
test
aad
push
lsl
jg
sub
mov
int
sbb
sub
xor
push
icebp
shr
cmp
mov
fld1
imul
mov
lods
das
jl
repnz
repnz
inc
mov
out
sbb
leave
cmp
retf
fadd
addr16
xchg
dec
cvtps2pi
mov
jge
jmp
cld
sub
ror
lock
push
test
mov
xchg
or
ds
push
adc
xchg
hlt
stos
push
and
call
scas
mov
sub
int
xlat
nop
dec
pusha
push
mov
loop
pop
popf
(bad)
mov
push
pop
mov
loope
fldl2e
push
inc
push
jge
scas
cli
sahf
jbe
push
mov
popa
inc
push
dec
xor
ucomiss
cld
cmp
inc
in
stos
dec
mov
das
inc
sar
xor
in
sar
add
inc
ja
fs
rcr
les
push
pushf
bound
mov
sub
in
repz
fwait
jl
aam
fisttp
into
not
int
aas
(bad)
fadd
ins
push
sbb
and
jmp
pop
inc
adc
mov
sub
aad
mov
leave
out
dec
mov
mul
and
and
aas
add
sub
push
pop
add
add
inc
jne
dec
push
fwait
adc
xchg
sti
xchg
outs
adc
nop
ins
cli
fwait
sti
pusha
sbb
retf
or
sti
inc
xchg
(bad)
es
lahf
enter
dec
sbb
fdivr
cmp
sbb
fdivr
int
fwait
in
push
stos
adc
mov
loopne
inc
(bad)
fldcw
ret
out
in
mov
fstp
hlt
and
sar
lods
imul
xchg
cmp
dec
out
dec
fwait
dec
inc
cmps
outs
fistp
lods
jmp
repz
cld
xchg
push
push
push
xlat
ins
popa
addr16
mov
or
int3
inc
sub
sar
lea
ret
aam
nop
push
push
in
dec
pusha
addr16
cld
cmp
dec
dec
neg
cld
add
xchg
mov
shl
data16
pop
test
xchg
mov
or
fadd
push
push
out
out
test
or
fsubr
dec
cmp
enter
push
fild
js
push
test
sbb
mov
xor
fcomi
dec
mov
pop
push
inc
xchg
inc
stc
outs
or
scas
out
push
jo
mov
pop
pop
push
xor
mov
and
or
into
jg
mov
add
mov
cmp
test
mov
pop
fcomp
push
loope
and
ja
xchg
shr
gs
ret
retf
cmp
outs
cmps
gs
test
rcr
int3
pusha
inc
push
dec
xor
out
lahf
mov
call
xor
jo
mov
jecxz
in
and
pop
lods
cli
leave
loopne
jmp
imul
cwde
mov
cwde
jecxz
sbb
jl
mov
sbb
mov
out
dec
ins
call
shr
sahf
sub
loop
stc
fcom
daa
cmc
xor
mov
ins
xor
push
outs
mov
adc
push
mov
dec
inc
or
pop
or
call
xchg
call
sbb
fwait
sti
mov
and
mov
and
or
xchg
fild
movs
jb
pop
jns
ins
ins
or
xor
mov
data16
xchg
sub
pop
out
push
test
aaa
ja
fmul
ret
rcr
sbb
pop
jnp
jge
fsubr
lahf
adc
in
sub
mov
xchg
int
dec
lods
ins
addr16
out
xor
xor
cmp
lds
popf
adc
mov
dec
cmp
shr
inc
push
dec
inc
sub
out
cdq
cmp
and
add
push
repnz
adc
ja
ins
mov
mov
mov
pop
mov
add
jne
outs
dec
sub
outs
cmp
and
pop
jo
pop
jae
inc
push
inc
cmp
gs
mov
and
cmps
xchg
or
pop
or
push
add
cmp
movs
pop
dec
add
call
adc
cmp
and
sti
movs
aaa
(bad)
movs
mov
icebp
xor
push
popf
mov
movs
int
or
mov
add
pop
sub
cwde
and
xchg
jmp
out
in
dec
mov
nop
js
icebp
aad
push
mov
mov
jle
add
fld
fsubr
xchg
scas
rol
(bad)
retf
or
or
cmp
clc
jns
sbb
aad
mov
fist
aaa
std
xor
fst
and
mov
mov
icebp
ss
leave
push
push
mov
xor
jecxz
ror
(bad)
out
loope
sar
stos
sub
dec
mov
and
sbb
sbb
enter
in
(bad)
vmovaps
es
xor
lea
xchg
inc
rol
mov
test
popa
leave
push
pop
xchg
add
loop
mov
into
lea
lods
sub
lods
scas
mov
iret
jnp
or
daa
imul
sbb
retf
cmps
sub
pop
mov
mov
push
mov
dec
pop
jecxz
ds
mov
cli
loopne
shl
or
and
fcom
dec
hlt
out
mov
inc
pop
jecxz
push
or
or
xchg
int3
dec
dec
add
jle
xchg
jb
push
mov
dec
lods
bnd
cmp
mov
(bad)
mov
mov
xchg
sbb
inc
int3
mov
cwde
es
ja
scas
fsub
(bad)
or
inc
pop
fcmovnb
pusha
pop
jae
and
jl
bound
fnstenv
jg
test
jo
das
cmp
movs
outs
mov
(bad)
push
adc
test
jbe
repz
xor
sub
inc
(bad)
sbb
ficomp
fadd
lea
scas
sub
or
retf
mov
and
xchg
outs
repz
cmp
dec
sub
adc
adc
mov
xchg
in
push
add
(bad)
pop
xchg
test
imul
or
jmp
cmps
lahf
arpl
mov
adc
imul
mov
inc
retf
xchg
inc
inc
push
and
aas
into
mov
stos
xchg
daa
mov
sbb
xor
neg
jo
mov
and
ja
xchg
jne
data16
sub
add
inc
loope
inc
adc
outs
int3
adc
xor
adc
sahf
enter
sbb
inc
push
ss
pop
push
cmp
cwde
cmps
sub
dec
dec
add
mov
push
and
rol
mov
mov
scas
mov
in
xor
mov
jmp
jno
jle
loope
push
adc
in
xor
push
sub
test
dec
bnd
dec
loopne
xlat
jecxz
mov
cmp
push
pop
mov
loopne
rol
mov
push
and
pop
jno
or
into
add
jmp
mov
mov
add
jns
mov
idiv
xchg
mov
cmps
popa
mov
mov
loope
sbb
fwait
xlat
(bad)
mov
jne
sbb
sub
out
add
xlat
sar
loope
retf
mov
repnz
mov
es
push
(bad)
dec
fwait
pop
jbe
cmp
imul
jle
inc
dec
in
xor
add
mov
(bad)
test
ficomp
out
inc
dec
sub
icebp
push
ja
sub
(bad)
call
jg
adc
pop
pop
xchg
gs
sub
dec
add
dec
push
jns
imul
bound
xchg
dec
imul
hlt
stos
shl
mov
pop
aad
es
lods
enter
push
pop
dec
jnp
or
or
cmp
mov
in
ins
ins
push
rcl
rcr
mov
iret
inc
add
adc
sub
bound
sub
jbe
adc
ja
or
jbe
cmp
nop
push
mov
sub
or
sbb
sub
xchg
retf
outs
or
test
cmp
test
add
popf
pandn
mov
cmc
lea
pop
call
pusha
popf
pop
mov
push
xor
out
test
and
movs
adc
mov
jle
repnz
pop
fsub
in
mov
sbb
or
stos
jno
mov
adc
aad
hlt
inc
xchg
or
cld
dec
adc
or
or
inc
scas
rcl
mov
sti
(bad)
add
stc
imul
mov
inc
leave
sti
(bad)
push
jns
inc
ret
xchg
sbb
jnp
mov
jecxz
mov
mov
push
mov
cmps
mov
add
xchg
mov
mov
dec
dec
scas
inc
out
test
test
mov
int3
cs
outs
pop
mov
jae
mov
cli
xchg
mov
add
and
pop
fst
xor
xchg
inc
or
mov
and
cmps
scas
mov
jmp
xchg
xchg
call
cmp
jne
push
in
add
(bad)
int3
loop
adc
fsubr
imul
(bad)
mov
push
xchg
xor
cld
xor
mov
jns
into
mov
movs
and
bnd
sbb
leave
(bad)
jae
dec
fadd
int3
fldcw
xor
data16
shr
ret
add
jbe
mov
dec
xchg
retf
clc
pushf
mov
leave
stos
adc
sbb
dec
stos
dec
daa
outs
(bad)
sbb
xchg
mov
cmp
jmp
mov
jge
test
js
in
xchg
loopne
jecxz
adc
jmp
rdtsc
xor
xchg
cmp
mov
bound
jbe
inc
pop
jmp
push
pop
jb
xchg
lea
xchg
adc
jnp
add
add
sub
fisttp
popa
inc
mov
mov
add
fbstp
inc
push
es
sar
push
add
sub
push
jg
sub
movs
and
aad
mov
inc
fild
retf
aaa
rol
les
mov
adc
and
xchg
cmc
xor
sbb
call
aam
pop
je
mov
pushf
jg
adc
push
ror
sub
mov
fadd
adc
ret
fstp
push
je
adc
imul
inc
jae
sti
inc
sbb
push
and
mov
sub
jmp
ret
outs
or
cmps
cli
aad
mov
jmp
push
aaa
mov
jmp
push
jns
movs
jno
sbb
pop
jp
mov
fwait
cmc
fmul
mov
xor
inc
in
jmp
lock
aad
dec
cdq
and
mov
daa
test
loop
pop
retf
out
popa
hlt
mov
xor
in
xchg
mov
jmp
dec
push
stos
xchg
and
lods
call
mov
mov
and
inc
xor
dec
adc
and
pop
jb
stos
imul
popa
cmp
pop
inc
test
mov
(bad)
test
ds
mul
dec
mov
es
cmp
jmp
ret
mov
xchg
popa
mov
pop
scas
jge
adc
or
imul
jmp
inc
dec
pushf
int
ror
push
pop
popa
sar
test
in
inc
popa
shr
scas
or
jo
push
push
outs
outs
cmp
popa
pop
mov
lahf
fdivp
daa
jmp
cmp
sbb
lods
cmc
cmp
mov
jp
sub
cmp
cdq
cmp
test
jmp
dec
ja
rcl
dec
sbb
mov
jecxz
mov
outs
mov
pop
movs
dec
xor
out
jae
fxch
xchg
mov
cmp
mov
(bad)
int3
pop
jmp
repnz
xlat
shl
rol
xlat
data16
jns
push
addr16
dec
and
icebp
pop
inc
into
stos
mov
dec
in
out
jnp
retf
fist
and
neg
repz
push
adc
or
retf
leave
out
and
pop
movs
iret
je
movs
inc
cdq
adc
xchg
loope
dec
xchg
popf
mov
imul
xor
push
sub
xchg
pop
outs
in
jge
stos
test
js
or
fs
cmps
dec
retf
xlat
pop
sub
test
scas
push
pop
add
gs
pop
mov
cmp
rol
cmp
adc
xor
int
or
jmp
adc
test
ret
cwde
xor
dec
cmps
cli
sub
icebp
fucompp
mov
test
test
loop
out
adc
mov
test
or
dec
and
mov
aam
jo
fbstp
aam
cmp
out
ficomp
shl
sub
iret
test
jne
mov
adc
pop
mov
(bad)
jge
jb
xor
ret
add
(bad)
mov
inc
repz
dec
in
and
arpl
(bad)
xor
dec
loopne
cli
shl
and
sub
mov
call
and
and
adc
jle
lahf
pop
sub
jecxz
mov
aas
dec
iret
dec
and
into
cmps
mov
iret
mov
loop
ins
xor
push
adc
cmps
and
dec
fmulp
(bad)
into
test
sti
dec
push
clc
pop
add
cli
cmp
mov
push
or
xchg
mov
aas
outs
mov
xlat
ja
test
jecxz
loop
std
and
jno
jnp
mov
fwait
imul
xchg
mov
xchg
mov
add
outs
std
jecxz
(bad)
in
(bad)
cmp
into
inc
(bad)
fidivr
adc
retf
into
xor
xchg
jae
push
(bad)
ja
lods
push
sahf
rcl
pop
(bad)
int3
xchg
stc
xchg
pmaxsw
sub
inc
push
cdq
lds
dec
(bad)
fxch
pop
call
rcl
iret
mov
and
fiadd
sbb
adc
or
add
push
je
int
sbb
xchg
dec
inc
adc
in
inc
fs
cmp
mov
sar
jp
or
push
test
or
in
cmp
xor
outs
mov
aad
dec
cmps
ins
iret
fwait
sbb
es
das
outs
jp
lods
sbb
push
ret
xchg
sbb
test
shl
outs
(bad)
jo
jg
xchg
outs
xchg
jle
jp
(bad)
and
out
or
iret
pop
or
loop
push
add
mov
add
inc
idiv
xchg
xbegin
sub
call
dec
scas
int
addr16
repnz
xchg
loop
xor
cmp
aam
xchg
push
mov
jnp
int
fs
and
aaa
mov
mov
and
aad
cmps
aad
into
cmp
push
xchg
adc
fs
and
pushf
mov
(bad)
fcmovb
xor
inc
push
rcr
inc
jecxz
jnp
fidiv
xor
shl
jnp
push
add
sti
imul
(bad)
fistp
sub
mov
jg
arpl
mov
add
xchg
fidivr
hlt
enter
(bad)
out
mov
xchg
int
adc
(bad)
out
push
adc
xor
jns
jge
dec
mov
std
(bad)
sub
mov
and
stos
sbb
femms
add
cmp
rcl
sbb
test
xor
iret
push
sub
es
mov
adc
addr16
in
in
lock
inc
les
jo
enter
cmp
jl
push
mov
xor
sahf
xor
adc
mov
push
adc
add
cld
gs
push
adc
sbb
xchg
xchg
sbb
mov
jnp
pop
js
jns
ins
fcmovnb
mov
xchg
sbb
ins
jnp
ret
jle
xchg
xchg
pop
jmp
sbb
inc
retf
mov
enter
mov
(bad)
pop
jmp
xchg
sub
pusha
cmc
adc
mov
or
pop
rcr
int3
in
sub
mov
sti
enter
popf
sbb
cmp
xchg
arpl
test
test
add
ret
push
das
(bad)
sub
outs
jecxz
and
fdiv
repnz
and
std
stc
cmp
xchg
dec
into
int3
pusha
mov
lods
loope
xchg
and
iret
push
jmp
pop
(bad)
sahf
and
jbe
cli
and
lahf
in
jp
pushf
scas
sub
jno
sbb
cmp
not
add
stos
push
pop
pop
leave
emms
mov
mov
repnz
pop
pop
clc
mov
and
outs
loop
pop
mov
call
dec
fstp
inc
fstp
xchg
add
jbe
aam
outs
pop
inc
cmps
ja
dec
add
xchg
sbb
stos
sbb
xor
int3
repnz
mov
repz
fimul
movlhps
sti
daa
outs
dec
mov
jns
neg
enter
mov
cmp
cmp
dec
jo
mov
mov
jae
sbb
inc
jp
push
xchg
sbb
call
add
fsub
sar
aaa
sub
push
aaa
nop
mov
popa
or
aas
mov
cmps
xchg
fsub
mov
mov
stos
xchg
nop
xchg
xor
pop
sub
data16
add
pop
xor
nop
push
dec
cmp
iret
adc
cmp
and
xor
mov
sub
push
clc
xor
or
add
cmps
aad
xchg
fsubr
push
pop
hlt
xor
adc
xor
stos
and
out
nop
cld
daa
out
in
adc
cmp
enter
jmp
xor
or
das
mov
cld
rcr
imul
aad
adc
mov
test
xchg
dec
scas
sub
ret
adc
lods
push
arpl
pop
pusha
pop
cmp
mov
mov
arpl
cmps
inc
add
repz
mov
cld
ret
out
inc
cmp
mov
rcl
adc
cmp
xchg
popf
js
ja
mov
adc
aaa
iret
popa
jmp
arpl
pusha
bound
inc
test
test
popa
xor
mov
in
sbb
cmp
aam
pop
idiv
inc
xchg
inc
mov
pop
clc
mov
ss
xor
adc
gs
(bad)
lds
movs
lea
push
or
(bad)
aam
mov
fst
(bad)
pop
rcl
loope
outs
js
pop
cld
int3
or
sahf
dec
pop
inc
ds
and
sub
jge
sbb
movs
mov
sub
addr16
cmp
push
pop
rol
push
je
dec
cmp
mov
mov
jo
pop
movs
je
jmp
mov
movs
mov
jo
cli
inc
ror
call
fcomp
test
popf
adc
(bad)
call
aad
js
das
and
aad
cmps
gs
lock
pop
adc
in
pop
icebp
mov
lock
js
inc
xor
add
test
xchg
std
adc
fld
sub
cdq
test
scas
iret
fist
rol
jmp
cmc
ret
jno
push
and
adc
ja
(bad)
and
jbe
aam
clc
out
add
pop
mov
jb
sub
ret
push
movs
call
sub
sub
popf
addr16
pop
arpl
push
jmp
xchg
jl
push
aaa
test
int3
mov
jne
fwait
ins
test
daa
dec
sub
iret
dec
or
xlat
push
out
mov
cmp
out
push
mov
std
(bad)
arpl
scas
mov
cmp
cmp
outs
mov
(bad)
xlat
pop
xor
xor
das
div
sub
pop
and
jg
mov
xchg
adc
sbb
adc
lahf
outs
pop
xchg
push
dec
data16
jmp
in
mov
adc
int
fwait
pop
int3
lods
and
mov
lock
fxch
push
push
mov
jns
push
adc
gs
add
mov
cld
pop
and
stos
bound
pop
fimul
popa
fmul
mov
movs
cmc
je
lods
push
pushf
cdq
(bad)
sbb
sub
in
sbb
std
xchg
lahf
int3
jle
dec
push
mov
or
sbb
shr
mov
cmp
fsub
pop
push
dec
xchg
fcomp
lock
xchg
adc
fcmovnbe
scas
add
push
leave
dec
jge
test
mov
mov
jl
push
in
loopne
lahf
mov
retf
jp
loopne
mov
dec
and
dec
jmp
dec
call
aas
cmp
xchg
(bad)
jns
sub
inc
sbb
xor
scas
mov
(bad)
adc
jle
inc
xchg
leave
(bad)
sbb
js
pop
adc
cmp
jmp
sub
test
push
dec
out
mov
fnstsw
test
jmp
outs
out
movs
out
int
sti
and
add
fild
mov
xor
cld
xchg
test
int3
jo
jecxz
jae
popa
cmp
rcl
push
call
clc
inc
lods
in
les
xor
xor
pop
test
lahf
and
cld
cld
lods
fs
or
pushf
push
ret
push
loop
test
or
aas
sti
adc
imul
mov
ret
mov
xchg
jnp
ror
mov
stos
sub
adc
pop
push
fisubr
ficomp
mov
dec
mov
cwde
lahf
add
pop
rcr
out
jge
or
jmp
arpl
out
pop
dec
sti
mov
dec
sub
push
or
pop
push
push
push
cs
push
xor
lods
pushf
int3
mov
sbb
xor
icebp
sbb
pop
je
ins
iret
jecxz
sbb
xor
jno
push
push
test
jbe
jmp
jb
xchg
(bad)
sti
es
sub
mov
aaa
or
pop
in
aad
div
push
es
ret
outs
int
(bad)
mov
loop
(bad)
xor
or
or
aam
in
cmp
scas
test
loope
cld
in
int
jnp
arpl
push
cmps
xlat
mov
inc
cmp
inc
gs
enter
or
arpl
push
pop
xor
xchg
cwde
hlt
or
ds
pop
rcl
retf
push
and
pop
and
dec
lods
je
cmps
adc
xchg
and
inc
(bad)
cdq
push
inc
leave
mov
pop
shl
lahf
xor
pop
stos
mov
sar
jp
cwde
adc
jl
pushf
xchg
jmp
into
mov
das
xchg
es
retf
sahf
xor
sub
fsubr
jo
jmp
pop
xchg
int
pop
xchg
push
loop
(bad)
icebp
or
fbstp
ja
dec
sbb
js
push
ins
or
in
mov
das
xor
xchg
mov
and
sub
mov
jae
push
pop
(bad)
aaa
(bad)
fild
cmp
dec
push
mov
dec
in
les
jge
jns
jg
adc
pop
(bad)
int
and
and
fst
call
mov
pop
add
test
xor
not
adc
dec
sahf
and
xchg
icebp
xor
dec
cmp
xor
pcmpgtw
ret
dec
fs
gs
jno
ds
dec
icebp
jge
dec
test
adc
rcl
jno
shl
out
aaa
nop
sbb
xor
rcl
adc
push
clc
rcr
iret
stc
add
call
and
in
retf
(bad)
ja
out
in
dec
ret
inc
in
jae
mov
add
add
xchg
push
and
je
in
pop
gs
imul
pop
or
cdq
xchg
mov
jle
loop
nop
inc
xchg
sbb
and
int
pop
int3
mov
jmp
xor
call
movs
pop
mov
loopne
mov
or
test
inc
inc
call
push
and
jmp
shr
dec
xchg
and
mov
push
ins
sbb
add
mov
xchg
(bad)
in
mov
addr16
inc
in
cmp
jecxz
stos
add
(bad)
movs
pop
mov
sub
sti
data16
mov
aad
add
cmp
jmp
push
push
dec
bnd
test
rol
jae
pop
inc
or
dec
mov
ins
cmp
lahf
loop
mov
test
or
xor
ds
mov
pop
int
adc
xor
out
push
xchg
or
(bad)
mov
inc
addr16
push
pop
test
push
jge
jb
cmp
ds
dec
(bad)
cli
(bad)
mov
push
xor
mov
leave
dec
and
push
sub
test
and
out
stc
mov
rol
sub
pop
and
add
bound
inc
ror
mov
lods
sahf
mov
stos
lea
or
jmp
push
and
mov
add
adc
dec
pusha
retf
sahf
(bad)
push
repz
push
cmc
out
xchg
nop
nop
cmp
arpl
add
test
popa
ja
fcomp
movs
lods
scas
es
fcomip
push
mov
or
fwait
aaa
and
push
mov
rcr
mov
test
inc
rcl
pop
mov
adc
stos
fdivr
mov
jbe
mov
sar
add
rcl
icebp
div
cmp
and
sub
inc
(bad)
add
shr
imul
jl
arpl
enter
ret
lahf
inc
mov
mov
pop
loop
jno
arpl
mov
inc
dec
outs
outs
and
retf
mov
adc
jmp
xor
stc
adc
fadd
call
push
add
cmp
jecxz
stc
in
jmp
add
fild
push
stos
(bad)
jp
xor
add
ds
and
jnp
cdq
outs
stos
cmp
push
lahf
test
pusha
dec
cmp
cmps
jno
loope
lods
sub
(bad)
int
test
sbb
je
jp
xor
adc
arpl
lds
outs
call
sbb
call
(bad)
repnz
add
cwde
jle
repnz
or
adc
in
and
movs
bound
ss
inc
mov
sbb
sbb
cmp
pop
sbb
gs
dec
dec
fwait
push
lahf
xlat
pop
or
mov
test
and
push
cwde
ja
mov
pop
rol
lds
(bad)
cmp
pop
retf
addr16
cli
sbb
lea
sub
jg
imul
outs
jns
mov
jbe
test
push
adc
arpl
fcomp
test
xor
out
push
jo
push
inc
fimul
pop
ret
jnp
rcl
movs
leave
sbb
and
shr
ficom
out
or
inc
jge
add
test
jmp
pop
daa
enter
repz
cmp
in
push
push
cli
sub
push
js
lods
punpckhdq
xor
out
pusha
jmp
adc
cs
(bad)
dec
jmp
jo
in
mov
dec
jo
div
pusha
adc
adc
pop
gs
bound
or
mov
xchg
jle
add
daa
call
pop
pushf
outs
pop
jl
pop
cmp
cdq
pop
js
lods
sbb
xchg
mov
xchg
movs
or
jg
or
lock
aam
js
jb
sahf
pop
add
in
mov
out
xchg
push
mov
imul
jno
cmc
fucom
neg
(bad)
sub
adc
pop
test
dec
push
cmp
mov
mov
jl
sar
rol
cmps
xor
inc
jns
pop
push
inc
test
push
jo
add
jp
gs
mov
dec
nop
adc
mov
mov
data16
jmp
inc
pop
mov
xor
and
(bad)
push
sahf
jle
pop
outs
fsub
mov
mov
push
pop
mov
je
in
jp
xchg
dec
jg
fisttp
ins
cmc
and
mov
sbb
cmp
imul
and
scas
std
push
sbb
and
(bad)
cwde
sbb
js
adc
int3
into
push
sbb
push
rol
mov
cmps
jbe
imul
movs
fcmovu
mov
sub
jmp
into
(bad)
dec
popa
pop
fistp
add
shl
add
mov
dec
sub
inc
sub
arpl
push
fld
mov
stc
test
lahf
xor
out
cmp
mov
push
add
mov
mov
add
xor
mov
dec
add
ja
pop
adc
adc
shl
das
aaa
and
loop
mov
popa
push
mov
xchg
mov
inc
sbb
mov
fidivr
and
jge
(bad)
movs
push
in
push
fimul
(bad)
enter
popf
cmps
sub
popa
lahf
fs
shl
arpl
lods
hlt
(bad)
(bad)
cmp
push
jg
push
sub
push
mov
fisttp
repz
in
pop
cmp
sbb
call
scas
sub
shl
stos
jns
inc
out
cld
jbe
xor
sbb
push
sbb
dec
xor
and
sub
jae
loop
mov
adc
not
lods
clc
xchg
lods
push
es
xor
mov
loopne
aaa
sub
retf
in
(bad)
sub
fs
nop
out
ja
ja
arpl
fs
mov
cmc
je
cmp
inc
aas
jae
cmps
gs
ins
fistp
push
jmp
sti
mov
cmp
jp
loope
ret
push
(bad)
sbb
dec
jmp
adc
es
sbb
push
aam
cwde
int
aaa
or
int
fild
cmp
adc
cdq
jge
div
pop
loopne
adc
add
mov
rol
dec
inc
dec
cmps
jb
add
mov
dec
cmps
and
add
sub
xchg
imul
inc
pop
cmp
clc
out
jb
mov
xor
pop
pop
cdq
je
push
(bad)
or
in
(bad)
(bad)
or
in
push
push
jns
or
or
mov
pop
loop
cdq
rol
mov
cmps
aam
mov
dec
cmp
ins
mov
or
xbegin
movs
loop
retf
dec
ja
loop
outs
inc
imul
dec
test
mov
ins
loopne
(bad)
fcmovnbe
loopne
out
cmp
call
jmp
lods
leave
in
movs
inc
dec
stos
and
sbb
push
mov
push
pop
xchg
lea
jecxz
fxtract
mov
(bad)
cmp
sti
inc
iret
shl
les
adc
out
mov
fwait
sti
mov
push
mov
adc
test
into
(bad)
and
add
into
adc
test
dec
push
pop
cmp
fs
out
push
(bad)
mov
pusha
addr16
call
sbb
jecxz
sub
jecxz
inc
aaa
test
mov
add
fisubr
stc
xor
shr
loopne
rol
pushf
sub
cmp
adc
xchg
or
test
imul
daa
xor
pop
and
rcr
jns
pop
iret
repnz
or
pop
icebp
pop
pusha
mov
cmp
dec
fs
jecxz
mov
dec
mov
pop
cmp
stc
popf
data16
mov
mov
fs
cdq
push
or
aaa
mov
fwait
mov
outs
int
clc
ret
fistp
outs
push
mov
jge
inc
or
xchg
cmp
or
mov
xchg
fimul
jmp
adc
mov
lds
vcomisd
sbb
fs
push
leave
push
stc
and
rcr
sub
out
adc
outs
test
ins
jb
jb
es
mov
ja
call
(bad)
xchg
mov
xchg
into
fst
xor
mov
vmovlps
in
psubb
mov
xchg
adc
adc
idiv
xchg
aad
mov
aad
push
loop
gs
inc
scas
dec
movs
leave
sub
add
cmp
jp
sahf
mov
add
leave
sub
cld
and
fndisi(8087
mov
sub
ret
pushf
adc
into
cld
jns
sub
xlat
inc
or
out
jb
cmp
addr16
call
mul
retf
adc
sahf
sbb
repz
push
cmovl
sub
in
out
retf
mov
lods
popa
inc
adc
pusha
fadd
out
push
aas
sbb
lea
push
add
scas
std
sub
out
add
popa
xchg
nop
jge
or
jne
scas
mov
cmp
jns
or
mov
cmp
ficom
daa
imul
outs
push
jmp
cmps
ret
dec
ror
lods
in
lods
cwde
jp
and
push
push
inc
cmp
retf
sbb
sbb
xchg
mov
es
jl
fisubr
loop
push
sbb
iret
dec
mov
popf
rol
or
in
cli
movs
sub
xor
daa
push
mov
retf
mov
xor
ja
test
adc
(bad)
call
sub
enter
mov
enter
ret
mov
pop
sar
push
fst
nop
adc
pop
call
pushf
cmps
inc
gs
sbb
push
and
adc
sub
pop
mov
pop
aaa
inc
mov
jns
data16
(bad)
mov
fbstp
sbb
or
(bad)
mov
mov
sbb
and
and
sub
mov
test
aaa
mov
les
inc
add
out
cld
mov
ffree
pop
or
icebp
cld
clc
add
mov
lock
outs
xchg
mov
into
js
pop
loope
fidiv
fist
fcmovbe
je
fmul
xor
pop
xchg
jo
sti
fmul
fist
lock
mov
jecxz
push
shr
sub
dec
aam
lahf
dec
sub
fcomp
ret
outs
sbb
mov
test
mov
mov
or
out
and
aam
pop
pop
cmp
cwde
jns
inc
test
adc
xchg
pushf
pushf
lea
or
dec
out
cmc
lock
rol
and
adc
xchg
icebp
fadd
shl
sub
adc
pop
jbe
adc
mov
dec
imul
sub
mov
int3
cmp
retf
fwait
mov
sahf
sbb
repz
retf
push
sbb
xor
jg
mov
push
je
repz
and
add
fild
lock
push
mov
bsr
xchg
clc
add
iret
sti
mov
mov
inc
in
rcl
shr
or
adc
fmul
jns
sbb
(bad)
pop
in
mov
jnp
adc
sbb
mov
add
sbb
push
mov
inc
int3
data16
jae
mov
add
pop
sbb
movs
cld
pop
add
push
push
fstp
dec
cmp
inc
sar
mov
out
dec
xchg
test
addr16
xchg
in
mov
call
lods
ins
sub
lahf
push
call
push
dec
mul
mov
push
push
ret
ins
and
push
shr
jne
bound
sub
popf
inc
adc
mov
inc
adc
cli
mov
jp
ficom
pusha
in
adc
inc
out
not
pop
jmp
sbb
iretw
dec
mov
jno
in
add
add
xchg
xchg
xchg
rcl
fwait
cmp
or
ins
xor
mov
addr16
jg
dec
je
std
dec
adc
stos
or
xchg
call
cmps
xchg
add
cmp
sub
and
add
lds
js
push
jmp
pop
aam
out
rcl
push
das
xor
add
shr
cmp
rol
dec
ror
js
imul
test
jae
arpl
hlt
fcompp
add
jnp
and
sub
out
aam
and
push
push
pop
sub
push
movs
jg
adc
mov
mov
push
sbb
push
mov
sbb
dec
pop
fcom
jl
xlat
xchg
jmp
sbb
rcr
scas
fist
in
enter
test
mov
scas
mov
push
aad
jmp
pushf
ret
xchg
clc
test
add
cmp
adc
(bad)
push
mov
push
in
inc
xor
pop
popf
rcr
sub
cmps
test
(bad)
xor
pop
push
arpl
das
addr16
js
int
jl
test
cmp
mov
fidiv
mov
mov
js
sub
into
out
pop
jae
sbb
jno
ja
push
push
aad
stc
lea
cmp
in
into
adc
or
pop
cmp
scas
cdq
pop
mov
into
and
or
ret
xchg
xor
xchg
daa
mov
mov
adc
mov
mov
lods
xchg
es
mov
pop
loop
ss
enter
(bad)
mov
add
popa
mov
movs
movs
stos
mov
mov
aam
mov
add
cmp
jbe
dec
out
push
lock
jg
stc
cmps
mov
push
sbb
xchg
or
cmp
loop
pop
sbb
in
es
or
ret
ds
pop
mov
add
push
mov
mov
cmp
adc
pop
cmovg
mov
(bad)
aas
movs
andnps
mov
imul
out
cmps
jns
mov
sahf
or
adc
mov
jle
push
sub
xor
pop
adc
inc
cmp
sbb
add
dec
xchg
add
int3
pusha
inc
retf
ds
in
cld
lahf
loop
mov
neg
xor
sbb
adc
js
and
or
sub
xlat
push
xchg
cmc
add
cmp
dec
call
iret
cli
mov
in
mov
imul
cmp
cwde
jae
mov
fwait
hlt
xchg
push
call
mov
js
imul
(bad)
mov
jmp
adc
mov
in
sub
fs
leave
cli
(bad)
adc
int
rcl
mov
xchg
test
pop
daa
inc
dec
push
inc
add
shr
icebp
in
fwait
push
cld
out
and
jge
js
fsubr
rol
aad
cmps
pop
inc
push
inc
lahf
xchg
(bad)
ins
out
sbb
mov
cwde
ja
clc
xchg
je
mov
and
leave
imul
rcr
sar
jg
(bad)
xor
stos
into
jmp
sar
lods
push
push
int
pushf
jne
mov
sub
idiv
adc
mov
sub
jns
add
gs
cmc
vpmacsdd
push
add
movs
lahf
loope
int3
sub
mov
push
iret
cli
inc
adc
and
sbb
fwait
jge
sar
sbb
cmp
add
sbb
sub
inc
lods
aam
iret
hlt
lds
sbb
mov
mov
pop
fsub
push
sub
(bad)
adc
adc
sbb
cmp
in
rcr
stos
cdq
sti
shr
clc
cdq
stos
xchg
out
cwd
xor
jbe
pop
addr16
in
push
das
sti
push
call
popa
push
sub
ds
sub
pop
inc
outs
das
jecxz
aas
jecxz
cdq
std
enter
xchg
xor
inc
cwde
pop
add
pop
push
and
repnz
loop
jne
stc
in
neg
cmc
lods
mov
repz
test
jb
cmp
in
inc
jmp
or
shr
popa
(bad)
push
aas
out
fmul
cdq
mov
xchg
int3
xor
xor
mov
pop
pop
aam
cmc
movs
pop
mov
popa
repnz
lods
push
xchg
repz
cmp
pop
sti
cld
mov
std
mov
call
retf
arpl
xor
and
icebp
mov
or
retf
adc
mov
inc
in
sub
inc
sbb
adc
daa
adc
jl
movs
push
leave
mov
shr
sbb
pop
and
cmc
lock
mul
jne
ficom
test
rcl
inc
push
mov
mov
pop
sbb
mov
or
push
sbb
push
arpl
pop
and
and
xchg
pop
cmp
push
cmp
xchg
cwde
pop
sbb
scas
sbb
in
movs
mov
in
pushf
jp
cmps
les
enter
push
add
outs
sub
dec
cmps
aam
stos
shr
mov
mov
and
inc
in
ins
imul
sub
push
cmc
test
sub
cmps
xor
enter
pusha
stc
daa
mov
cmps
popf
push
call
push
mov
into
ficomp
adc
push
jl
xor
fcom
inc
cmps
jnp
dec
scas
jae
bound
jne
cmp
sub
mov
shr
cld
dec
and
dec
sbb
sahf
leave
mov
cmp
sbb
cdq
pop
loope
sahf
jno
test
fnstcw
ror
xor
int3
and
or
imul
mov
mov
add
inc
sub
xor
mov
and
ins
pop
add
mov
inc
xor
mov
(bad)
sub
mov
daa
popa
scas
pop
jge
sub
or
pop
int3
mov
fld
push
or
mov
test
cld
dec
or
cdq
add
add
mov
push
jl
xor
pusha
xchg
aas
scas
loop
add
jne
sub
mov
js
clc
push
mov
pop
cli
icebp
and
pop
arpl
cmp
ins
pop
mov
xchg
inc
add
inc
mov
clc
call
rcl
addr16
mov
pop
push
mov
jg
pop
xchg
aad
pop
fld
ja
jno
xchg
and
pushf
and
jns
push
or
in
mov
call
sub
test
dec
pusha
adc
lahf
dec
retf
mov
test
mov
jp
sbb
xchg
pop
xor
aaa
aas
nop
addr16
fist
jge
mov
add
cmps
sub
fbld
xlat
mov
mov
or
dec
cwde
jae
adc
dec
iret
les
sbb
out
stos
xchg
mov
fidiv
gs
inc
xchg
mov
mov
cwde
ins
jmp
xchg
or
jge
dec
(bad)
imul
sbb
xchg
xchg
fst
add
cmps
dec
mov
cmp
fcom
neg
popa
inc
cld
xor
cmps
xchg
retf
mov
and
cs
adc
jmp
add
outs
int3
or
fstenv
(bad)
cmp
or
mov
adc
xchg
(bad)
adc
push
cmps
ds
jno
mov
or
push
shl
xor
adc
jp
jnp
inc
js
out
iret
push
imul
and
adc
and
cmc
movs
xchg
imul
sbb
add
lds
xchg
shl
test
xchg
push
neg
inc
ds
sti
sub
fs
fmul
stos
data16
in
rol
inc
dec
mov
out
fisubr
hlt
jmp
aaa
mov
data16
imul
mov
jg
and
nop
lea
movs
lds
cmp
dec
sbb
jmp
dec
sbb
dec
mov
(bad)
stos
clc
scas
popa
fwait
lock
fdiv
add
clc
inc
pop
mov
mov
dec
jne
loope
movs
cdq
push
in
loop
cmp
shl
lods
or
(bad)
sti
ins
les
push
push
push
adc
mov
pop
push
call
hlt
imul
jg
inc
mov
scas
sbb
das
dec
into
ss
mov
ret
and
int3
fisubr
pop
in
lds
out
and
xchg
jecxz
dec
jne
es
push
dec
mov
mov
mov
test
mov
enter
movs
inc
jl
xchg
xchg
dec
(bad)
fstp
pop
mov
stc
(bad)
sbb
xchg
and
in
inc
and
dec
mov
lock
popa
cld
(bad)
mov
mov
jmp
es
mov
sub
sar
ja
and
test
retf
or
not
in
jp
sbb
push
popa
fwait
mov
test
mov
movs
stos
js
add
dec
cmp
sbb
shl
(bad)
pop
xchg
pusha
(bad)
mov
jle
mov
aam
arpl
fist
sar
rcl
mov
daa
lock
sub
in
sahf
(bad)
lods
sub
arpl
(bad)
ror
jno
(bad)
loope
ficom
ds
aaa
inc
fcomp
jmp
sti
call
imul
mov
in
cmp
je
dec
rcl
mov
push
out
push
or
bound
sbb
fcomp
pop
repnz
sahf
jne
nop
pop
mov
inc
push
sub
pop
add
xchg
dec
cmp
ins
shl
mov
lods
aaa
loope
dec
push
jae
xchg
daa
sti
adc
jnp
jne
sub
outs
push
cmps
into
aaa
jne
in
ret
or
popa
call
stos
cmp
stos
and
out
lahf
add
jb
xchg
into
sbb
psubb
jb
outs
cmps
adc
xchg
jmp
das
push
pop
mov
mov
cmp
pop
mov
xor
jo
inc
pop
jnp
test
loope
cmp
or
out
rcr
xor
lods
call
cmp
adc
in
jmp
inc
leave
mov
in
icebp
xchg
sub
cmc
xchg
mov
fdivr
shr
cmp
push
test
mov
inc
out
sub
test
dec
or
scas
mov
cmp
adc
mov
bound
adc
daa
sub
mov
sub
fcmovnu
cli
fnsave
add
adc
mov
icebp
add
sub
fcomi
xor
movs
cwde
push
xchg
push
jb
mov
loope
jl
add
loopne
loope
push
loop
sti
mov
popa
mov
mov
mov
xor
loopne
loop
push
push
inc
mov
sbb
test
test
inc
or
pop
and
scas
fldln2
jo
test
cwde
movs
sbb
sub
jle
in
inc
and
movs
inc
mov
sub
cs
push
not
cld
xchg
scas
inc
pop
add
push
into
cld
lods
nop
scas
and
sar
xor
sub
daa
mov
adc
enter
dec
push
inc
iret
loope
loopne
jbe
sbb
sti
test
inc
movs
mov
pop
add
push
dec
sub
fbstp
mov
mov
dec
stos
imul
mov
or
add
jb
push
arpl
inc
inc
sbb
mov
xor
sbb
outs
cwde
in
jb
adc
xor
fldcw
mov
ds
sti
sbb
out
jb
pop
sub
or
rcl
retf
push
sub
out
push
fcmovnb
inc
xor
xchg
outs
fldcw
cmp
pop
shl
jl
popa
dec
mov
xchg
popa
adc
mov
push
xchg
ret
dec
aaa
adc
cli
xor
cmps
aas
sub
or
rcl
clc
aad
inc
jnp
mov
in
in
imul
nop
ret
add
test
test
inc
cwde
fst
adc
test
jbe
mov
mov
(bad)
movs
lahf
fmul
add
inc
ret
or
ret
cdq
sbb
jnp
push
aam
fwait
or
xchg
rcr
test
stos
push
aaa
fwait
jbe
xchg
pop
xor
loope
sbb
jmp
mov
rcl
idiv
cld
dec
xchg
mov
jns
inc
jo
mov
lock
mov
adc
sub
and
inc
adc
dec
test
std
ds
push
dec
out
push
mov
xchg
add
ret
int
js
outs
add
dec
jle
cmps
sub
cmp
fiadd
push
or
ja
pop
les
int3
lock
ss
sub
pop
scas
jno
sti
iret
stos
test
jmp
xor
jg
xchg
sub
aam
dec
pop
mov
add
mov
sahf
sbb
call
and
(bad)
rol
or
dec
mov
aad
(bad)
xor
sub
sahf
test
mov
test
pop
pusha
inc
inc
addr16
inc
jo
jnp
cmp
push
jge
loopne
xlat
test
adc
add
jae
xlat
cmp
push
sub
ret
icebp
jnp
push
xlat
ins
es
pushf
ret
(bad)
lock
inc
mov
push
push
pushf
nop
mov
xchg
add
ror
inc
loopne
retf
cs
ja
inc
movs
mov
add
jge
cs
or
das
mov
adc
cs
inc
xor
jg
in
cmp
cmp
mov
add
cdq
movs
and
fidivr
gs
test
jle
movs
inc
aad
bound
sub
or
dec
mov
xchg
cmp
mov
dec
pop
addr16
lods
out
or
jne
(bad)
push
shr
shl
in
fdivr
inc
sahf
stos
imul
scas
dec
dec
jp
icebp
aas
xchg
stc
retf
mov
test
cs
ret
push
enter
fiadd
retf
pop
xchg
rcl
sub
pop
stos
and
or
int3
fisubr
and
ss
scas
aas
jmp
xchg
jnp
mov
mov
mov
fcmovnbe
movsx
shl
sub
inc
cli
sub
repnz
iret
mov
cmp
cmp
cmp
inc
jne
dec
inc
jge
push
loopne
mov
mov
iret
rol
and
push
jbe
push
push
sbb
rol
jne
xor
cs
mov
adc
xchg
fs
or
sub
add
aad
xor
ror
ret
jno
pop
and
dec
cmp
in
pop
leave
pop
fidiv
adc
or
rcl
jns
lods
neg
sbb
por
jne
cmc
or
jmp
ins
cmp
jne
push
jecxz
or
mov
adc
mov
inc
and
cmp
jge
mov
test
popf
inc
mov
cdq
jmp
iret
std
out
ins
jae
sbb
jo
aam
adc
out
push
out
add
xchg
pop
push
cmps
mov
loopne
sar
int3
scas
cmps
sub
pop
enter
(bad)
aas
cmp
in
ret
mov
adc
jle
rcr
and
mov
retf
jns
push
in
xchg
mov
mov
addr16
cld
dec
es
rol
iret
mov
jl
jmp
xor
enter
adc
push
pop
mov
mov
xor
test
sub
imul
adc
iret
mov
movs
bound
sahf
popa
test
adc
or
jg
sub
xchg
rcl
ja
inc
inc
ret
fwait
push
add
cmp
dec
push
jge
les
push
enter
imul
pop
in
push
xchg
jbe
lahf
inc
test
push
or
push
in
jmp
cmc
shl
mov
adc
add
cs
cmp
jae
in
and
xor
jecxz
jge
movs
repz
mov
xchg
sub
fcomp
movs
dec
in
and
imul
push
les
gs
add
jp
jmp
jge
mov
mov
mov
add
ret
out
sub
mov
xchg
ret
test
popf
mov
add
and
scas
dec
sar
mov
aas
(bad)
xchg
cmovp
enter
sub
mov
inc
or
inc
scas
icebp
scas
stos
je
mov
ja
jb
cdq
call
xchg
test
dec
pop
loope
push
cwde
in
loope
enter
pop
jp
lods
cli
and
ret
gs
push
inc
outs
xchg
ins
dec
rol
jle
aas
mov
xor
cmps
or
sub
xchg
push
dec
fild
pop
lea
adc
ret
ins
or
pop
sbb
aas
enter
pop
movs
fiadd
push
in
xchg
jns
es
fwait
int3
mov
inc
ds
xchg
mov
iret
pop
jae
jl
cmp
or
cmp
fcom
ins
loope
test
lods
jns
jmp
sar
mov
stos
mov
gs
fild
and
mov
push
jle
lea
xchg
push
setg
sbb
and
and
cmp
lods
pop
and
sbb
ins
inc
aaa
sub
xor
adc
in
data16
inc
push
dec
repnz
xlat
js
jle
and
xchg
je
cmps
xor
cmps
mov
or
cmp
cmc
mov
mov
mov
add
push
cmp
sbb
inc
outs
fs
pmullw
ja
mov
sub
cmp
pop
add
lods
fist
adc
mov
jmp
sbb
repz
inc
dec
push
cmc
pop
add
mov
mov
pop
(bad)
clc
gs
add
aaa
jnp
test
iret
pusha
fmul
adc
ins
xor
jbe
mov
adc
add
ror
push
cwde
sbb
sbb
push
test
push
adc
adc
adc
inc
xlat
adc
mov
and
arpl
data16
mov
add
xor
mov
ss
xchg
movs
mov
add
ret
or
lock
dec
sbb
aas
sbb
dec
loope
inc
and
arpl
cmps
xchg
repnz
hlt
push
stos
fimul
dec
shl
adc
sar
setne
inc
sbb
shl
sub
push
ins
ror
es
rol
xchg
mov
inc
lahf
sub
xchg
xchg
fidivr
les
ja
mov
jg
add
cs
sub
mov
or
xchg
and
lock
int
dec
jo
gs
int
pop
ins
cmp
rcr
cli
push
sub
cmps
fcom
jle
fild
xchg
mov
dec
jne
cld
pop
dec
shl
jae
push
stc
popa
test
loop
mov
aaa
dec
jmp
or
mov
in
xchg
es
nop
xor
push
rcr
pop
adc
cmps
sbb
in
in
mov
mov
xor
ret
mov
ja
es
and
mov
stos
xlat
call
dec
in
(bad)
icebp
inc
mov
sbb
inc
pop
les
mov
imul
movs
loope
mov
xlat
int
lods
adc
mov
pop
sahf
dec
punpckhbw
je
push
out
push
int3
inc
(bad)
xlat
sub
cmps
inc
scas
mov
and
in
mov
(bad)
cmp
mov
sub
or
cdq
call
bound
aam
gs
in
int3
mov
mov
and
sar
stos
inc
aad
call
aad
pop
mov
xchg
imul
scas
jge
in
div
dec
mov
ror
(bad)
ds
push
push
and
inc
fadd
daa
mov
std
rcl
adc
sbb
pop
outs
dec
sahf
in
dec
jno
fiadd
int
mul
(bad)
(bad)
add
lods
mov
push
push
cmp
lds
aas
pop
push
or
ins
mov
leave
cmp
jo
pop
icebp
pop
sub
sbb
in
lods
repz
xor
push
dec
dec
sbb
aam
gs
repz
dec
adc
xchg
dec
fnstenv
pop
cmp
jb
push
mov
pop
and
inc
jp
push
cli
pop
(bad)
mov
adc
cs
adc
ror
test
jmp
inc
out
mov
addr16
ror
gs
loope
inc
fidiv
jl
jmp
jbe
xchg
call
push
shl
scas
scas
fsubr
jl
(bad)
jb
mov
and
into
(bad)
adc
cmp
call
stos
sbb
sub
jb
sbb
retf
inc
lods
gs
mov
out
xchg
adc
clc
push
stos
movs
ret
sub
sub
scas
and
mov
mov
rcl
stos
test
call
xchg
dec
push
mov
dec
and
repnz
fist
push
cmp
stc
jnp
repz
push
pop
aaa
out
push
addr16
pop
jmp
sbb
stc
ss
jo
xchg
or
sti
xchg
add
repnz
sbb
test
dec
xchg
xchg
pop
push
push
mov
fs
cmps
(bad)
push
dec
aad
aaa
push
sbb
mov
pop
mov
fwait
in
in
cmp
mov
mov
cmp
scas
inc
fsubr
jmp
out
(bad)
and
cmp
jg
call
or
outs
bound
inc
mov
and
mov
jge
loop
mov
and
jbe
push
shr
sub
cmc
xchg
sbb
push
cmp
call
or
dec
ret
mov
das
idiv
(bad)
mov
pop
xchg
mov
fs
push
clc
mov
(bad)
push
cmps
and
mov
xchg
mov
xchg
dec
mov
aam
sub
enter
es
sbb
dec
jecxz
out
sbb
xchg
or
ret
rcl
pop
vpshaq
imul
stos
(bad)
es
jmp
pop
pop
mov
mov
or
ret
fisubr
outs
fbstp
pop
mov
shl
movs
cmp
cmp
pop
dec
mov
sbb
fld
out
mov
ins
mov
out
push
sub
sti
xor
push
jl
aas
cld
jge
jae
cmps
aad
scas
mov
cmps
fnstenv
jae
aas
dec
ins
cmp
xchg
bound
fild
ficom
inc
adc
adc
and
push
nop
or
jmp
adc
jle
js
pop
dec
cs
and
add
ins
ins
into
outs
jae
stos
jo
sub
stc
cld
sub
mov
push
lahf
xchg
pop
pop
test
mov
call
lods
jbe
adc
sub
int
ficom
sete
(bad)
adc
cmp
jb
jo
mov
call
(bad)
dec
jnp
mov
ja
sbb
loope
inc
pop
popa
xchg
lods
lahf
and
iret
ret
(bad)
in
pop
and
dec
in
dec
aam
jg
(bad)
jnp
enter
mov
ss
mov
shl
rol
leave
popa
test
xchg
inc
jae
push
mov
mov
mov
mov
outs
push
out
retf
int
dec
jp
fwait
sbb
jecxz
fnsave
inc
aam
movs
dec
jg
sbb
xchg
add
(bad)
pop
call
call
dec
repz
adc
xor
repnz
jns
add
mov
call
fmul
out
jl
ficom
pop
fstp
in
jae
adc
pop
aam
sysret
sub
mov
xchg
rol
or
sbb
and
movs
stc
pop
cmp
(bad)
imul
jmp
pusha
dec
fiadd
pop
lahf
mov
dec
je
sub
sub
pop
adc
or
rol
inc
inc
dec
xor
and
jmp
jmp
mul
inc
or
and
out
jmp
fisttp
into
jbe
loopne
fst
mov
mov
in
or
lahf
mov
push
push
sub
add
scas
shr
inc
int
xor
mov
dec
inc
movs
xor
jb
out
mov
popf
pop
sbb
mul
(bad)
xchg
out
mov
aad
push
and
xchg
dec
call
or
test
inc
iret
cmp
fs
mov
aam
mov
call
mov
in
mov
mov
jg
stos
xor
mov
test
std
adc
sub
imul
push
je
jp
push
or
cs
dec
lds
(bad)
pop
push
push
sti
xor
retf
add
sahf
sti
push
or
stos
dec
jne
loope
sbb
mul
pop
stc
adc
rcr
jmp
dec
loop
and
xor
jo
cli
iret
fwait
lds
shl
jo
dec
add
mov
out
xchg
xchg
sbb
ret
repz
lea
inc
sub
mov
xchg
aam
or
xlat
dec
mov
iret
jmp
dec
fucom
xor
or
mov
xlat
pop
push
movs
dec
xor
xor
aas
mov
clc
xor
leave
jne
iret
in
cld
lahf
pusha
dec
fs
loop
aas
mov
mov
cmc
aam
shl
fild
call
or
sbb
sub
jle
out
inc
std
cmp
gs
mov
int
mov
sti
xchg
pop
pusha
(bad)
push
hlt
cmps
outs
cwde
fistp
add
cli
fild
inc
xchg
aaa
mov
test
fist
jns
mov
(bad)
ins
adc
sbb
dec
cld
cmps
push
mov
push
jb
inc
and
push
shr
bound
mov
in
fst
lea
fdiv
movs
das
fpatan
mov
(bad)
push
mov
mov
jmp
ret
lahf
or
mov
xchg
sti
inc
push
test
mov
mov
gs
jne
adc
sar
hlt
mov
test
dec
pop
ret
cwde
and
and
sbb
pop
inc
inc
retf
xchg
fwait
out
adc
test
fwait
jge
mov
inc
pinsrw
add
push
pop
(bad)
scas
jg
sub
idiv
cdq
cmp
rep
jecxz
ins
aad
lds
rep
push
ja
mov
(bad)
adc
clc
rol
loope
cmp
pop
das
pusha
data16
sar
jl
mov
imul
jge
add
push
jmp
sub
in
cmc
fs
or
stos
inc
movs
push
je
lods
and
xor
cmp
clc
xor
icebp
test
pop
(bad)
daa
pop
enter
scas
jbe
push
jb
jmp
dec
cmp
push
cs
ss
fiadd
clc
(bad)
int
stos
sub
xlat
push
rcl
(bad)
aaa
sub
mov
out
les
out
jp
int3
cmp
clc
rol
movs
bound
xor
add
jne
cwde
add
icebp
inc
or
sub
data16
lahf
mov
mov
ret
dec
xchg
pop
aam
adc
dec
and
dec
mov
jb
repz
iret
adc
les
inc
movs
push
fidiv
inc
push
int3
sbb
into
sub
mov
cmps
push
ret
mov
and
fucomi
in
pusha
lods
dec
loop
mov
int3
ret
jmp
inc
xchg
addr16
adc
mov
out
popf
out
das
lods
mov
test
ins
retf
lods
dec
or
stos
loopne
fiadd
push
lods
push
cmp
ins
add
mov
push
lea
mul
mov
ins
sub
mov
in
jmp
stos
mov
cmp
cwde
inc
mov
add
cmp
call
mov
add
std
enter
jb
fbstp
dec
inc
div
int
or
arpl
cmp
mov
fistp
icebp
fidivr
xchg
(bad)
(bad)
loop
inc
jg
daa
jne
js
jl
popa
or
ret
scas
adc
and
push
movs
data16
ins
mov
ret
or
repz
push
lods
jmp
or
mov
mov
mov
das
inc
push
cmps
jecxz
dec
push
jne
mov
shr
xchg
sbb
sti
pushf
cmc
(bad)
rol
mov
js
jnp
(bad)
pop
scas
scas
mov
xor
mov
jecxz
sbb
retf
mov
mov
cmp
inc
(bad)
mov
push
mov
xchg
xchg
mov
scas
rdtsc
dec
sub
mov
pop
or
xor
mov
inc
mov
dec
mov
cmc
nop
jmp
xchg
mov
cs
fild
pop
ror
dec
sub
cwde
dec
lahf
mov
cwde
dec
int3
mov
sbb
in
bound
cmp
in
xchg
fist
fadd
gs
pusha
or
lea
ja
cmp
mov
push
mov
mov
es
mov
mov
pop
mov
dec
push
push
add
pop
ds
popa
popa
jnp
jo
aas
pop
xchg
repz
dec
fiadd
cmp
jo
and
sub
test
daa
mov
js
into
and
fbstp
mov
enter
or
jb
cmp
xor
mov
gs
hlt
sbb
in
mov
xor
adc
push
jo
mov
cmp
xor
stc
in
mov
cmp
sbb
test
arpl
cmp
push
add
xchg
out
(bad)
leave
sbb
mov
lahf
pushf
jmp
and
push
inc
mov
addr16
fstp
mov
(bad)
(bad)
jp
dec
lock
sub
loop
pop
ret
add
mov
sub
jbe
xadd
gs
and
outs
sub
adc
cmp
dec
xor
loope
push
dec
or
lods
jbe
dec
sub
sti
popf
push
repnz
(bad)
xor
ss
mov
aad
cmp
aam
inc
jle
cmps
lahf
test
mov
jbe
pusha
add
outs
cmp
shl
lods
cmp
push
sub
pushf
sub
test
lock
mov
sub
or
imul
popa
push
push
aad
stc
mov
enter
stos
repz
xor
mov
popf
xor
lods
mov
stc
xchg
mov
rcr
sub
xlat
adc
fisttp
hlt
mov
repnz
inc
ret
lock
pop
pop
jae
pop
sub
push
sbb
jp
mov
pop
mov
aas
rcr
clc
aaa
push
stos
call
push
inc
add
(bad)
sti
jnp
fisttp
xchg
lds
das
retf
push
out
std
test
outs
mov
jae
dec
adc
mov
(bad)
leave
ds
and
enter
sbb
ficomp
gs
(bad)
int3
ins
(bad)
jmp
xchg
ins
and
or
inc
jo
gs
neg
out
lods
or
mov
ret
xchg
jp
mov
(bad)
fucomp
popf
xor
cmp
sbb
inc
es
or
push
(bad)
(bad)
mov
cld
stc
je
scas
and
aad
push
mov
aam
mov
adc
mov
xchg
xchg
dec
shl
icebp
and
stc
sbb
fcomp
pop
dec
pop
mov
in
push
ds
mov
ins
push
lea
jbe
sti
in
xor
cli
ja
jbe
mov
cli
cmp
jo
xor
push
fcom
(bad)
mov
xchg
jecxz
jno
xor
xor
cmp
inc
scas
jo
sar
hlt
shl
arpl
rcl
addr16
jp
mov
pop
mov
loope
enter
xor
cmps
mov
aaa
ficomp
xchg
xor
imul
dec
cmp
xlat
and
inc
daa
push
out
add
std
popa
fldlg2
ins
outs
repz
into
mov
sbb
out
sub
(bad)
movs
pop
shl
dec
push
mov
fimul
nop
out
bound
or
jg
out
icebp
cmps
xor
mov
adc
add
pop
movs
sbb
ror
cmp
add
and
mov
aaa
out
mov
mov
push
ins
xchg
dec
inc
sub
pop
inc
xlat
stos
rcl
add
push
shr
shl
add
lods
test
test
(bad)
shl
mov
pop
out
push
fsubr
(bad)
mov
add
or
or
leave
mov
imul
loop
mov
mov
adc
mov
cdq
call
dec
sahf
jne
lods
adc
adc
clc
or
cli
dec
call
lea
rol
mov
mov
pop
cld
outs
xlat
enter
clc
sub
fidiv
adc
retf
neg
sbb
inc
cld
out
arpl
cmp
or
inc
or
mov
aaa
int
stos
mov
call
shl
mov
pop
xchg
ret
movs
mov
and
ss
sbb
add
stos
aas
pop
test
in
cmp
jle
std
test
adc
mov
push
xchg
push
ds
push
or
cwde
cmps
cmp
sbb
and
(bad)
mov
fidiv
jecxz
out
inc
jnp
jae
xchg
sbb
inc
or
retf
mov
add
aad
sub
pop
imul
popf
inc
outs
aas
sar
or
jae
xchg
outs
jmp
ds
(bad)
jge
and
pop
sub
js
(bad)
jns
xchg
dec
push
cmp
dec
outs
pop
mov
shr
xor
pop
out
sub
adc
xchg
movs
sbb
sub
sub
xchg
sub
mov
cld
fistp
mov
mov
cmp
out
mov
cld
or
scas
(bad)
std
ins
test
sub
xor
fwait
ret
fisttp
xchg
cmc
in
ret
cmps
pop
sbb
shl
vmwrite
cmp
call
cld
(bad)
les
in
mov
adc
mov
(bad)
stos
cmp
test
sbb
fs
repz
ror
ja
std
jp
mov
xchg
jbe
inc
addr16
adc
fldcw
imul
push
cmp
push
mov
push
xchg
adc
sbb
mov
xchg
push
ins
mov
adc
into
push
jbe
stc
cmps
sar
jbe
lahf
sub
dec
pushf
mov
aad
xchg
dec
out
shl
mov
sbb
test
and
add
inc
mov
cmps
adc
pop
inc
adc
sub
add
xor
and
pushf
push
push
mov
inc
dec
sbb
sbb
inc
ins
add
or
dec
movs
je
sub
xchg
scas
int3
and
mov
rcr
and
dec
sbb
addr16
jbe
pop
out
hlt
xor
mov
fsubr
sbb
ins
mov
dec
pop
or
into
test
neg
pop
rcr
mov
mov
mov
pop
aas
stos
jns
leave
adc
mov
in
cmp
add
push
push
in
(bad)
fcmovu
jbe
inc
imul
dec
call
repz
data16
push
test
mov
or
fdivr
(bad)
repnz
loope
mov
inc
fisttp
mov
fucomp
imul
pop
inc
or
lea
jle
and
inc
ret
cs
pop
loop
stos
call
mov
cmc
sbb
pop
xor
or
push
mov
fidiv
pop
aad
mov
dec
cmp
jns
mov
es
cwde
mov
dec
push
retf
jne
dec
push
in
test
inc
test
scas
inc
movs
pop
outs
je
aad
loop
pop
test
shr
test
aam
scas
push
paddb
inc
loopne
mov
cmp
xchg
fmul
inc
pop
push
fwait
or
inc
aas
jo
repz
xor
cmp
pop
and
test
jl
xchg
adc
scas
xor
add
dec
arpl
lock
popa
addr16
imul
dec
sub
mov
icebp
fsub
loope
jl
daa
push
xchg
pop
ja
ret
outs
mov
movs
jg
cmp
rcl
mov
je
ret
jmp
sub
jbe
lea
sub
cmp
push
adc
lds
ret
retf
inc
mov
xchg
inc
xchg
pop
lods
(bad)
and
icebp
in
pop
call
pushf
aaa
sbb
retf
stos
test
das
jmp
fcmovu
arpl
mov
addr16
stc
out
push
outs
pop
in
sub
push
add
test
inc
outs
movs
inc
call
xchg
jg
test
test
std
sqrtps
js
cmp
cmova
shl
adc
sub
jp
dec
sub
pop
test
outs
pop
fdivr
rcr
push
fiadd
mov
stos
add
mov
xor
mov
cmp
data16
into
add
push
mov
jbe
cdq
daa
movs
pop
mov
sbb
push
inc
push
jae
iret
pop
test
or
in
sbb
sub
jnp
xchg
mov
in
cdq
mov
push
punpckhdq
cmp
in
inc
in
(bad)
cli
xchg
push
imul
call
nop
int
mov
retf
fadd
or
jmp
inc
xor
xchg
xchg
pop
cmp
or
mov
nop
xor
arpl
rol
dec
or
dec
addr16
xor
and
pop
adc
mov
adc
inc
mov
dec
adc
pop
retf
shl
rcl
jecxz
out
xor
pusha
stos
and
fs
push
pop
(bad)
jg
aam
or
xor
fisubr
mov
mov
mov
dec
mov
movs
or
pop
retf
xor
and
pop
cmps
push
mov
push
push
mov
xor
cs
jb
and
pop
jo
jge
jb
ret
je
ficom
in
mov
or
lahf
pop
inc
or
test
xchg
imul
inc
imul
test
jmp
sub
pop
mov
stos
out
stos
test
retf
mov
inc
adc
pop
adc
test
pop
fnstcw
or
mov
xlat
int3
mov
stos
data16
ror
pop
test
int
cmp
call
jl
sbb
sub
iret
mov
int3
cmp
lods
push
(bad)
sbb
retf
test
push
fsubr
sbb
xlat
test
test
jbe
jmp
jmp
jg
or
into
cmp
and
xchg
cmp
in
pusha
mov
adc
sbb
sahf
sub
mov
jp
(bad)
sti
mov
mov
inc
mov
sbb
iret
add
int
dec
loop
(bad)
retf
bts
adc
leave
js
call
pusha
pop
mov
jne
ror
push
ins
adc
and
pop
outs
xlat
xchg
in
lods
jo
and
cmp
and
or
cli
cmp
inc
or
les
int
movs
mov
dec
push
or
and
lods
stos
adc
pop
bound
push
cmp
or
mov
into
outs
out
push
push
push
sbb
adc
mov
sbb
call
sub
jo
inc
mov
adc
popf
pop
dec
sahf
xor
and
add
scas
add
mov
mov
jb
pop
cdq
push
xor
xchg
push
dec
mov
out
iret
mov
(bad)
lods
stos
jg
mov
sub
daa
data16
jno
jp
hlt
cwde
gs
movs
cli
aas
adc
fs
or
not
add
add
cmp
pop
mov
stc
pop
rcl
push
jle
fidiv
or
inc
xchg
loop
repz
mov
cmp
xchg
sbb
cmp
mov
fstp
outs
or
push
enter
imul
mov
mov
rcr
push
mov
push
aad
mov
xchg
mov
aam
mov
or
inc
jmp
xchg
mov
ja
jne
add
mov
mov
ror
pop
daa
fld
and
(bad)
adc
mov
xchg
mov
add
aaa
xchg
std
pop
jns
retf
mov
rcl
dec
mov
dec
push
shl
jb
push
xchg
adc
movs
mov
sar
adc
jmp
cs
test
xchg
ins
and
add
cmc
add
fcomp
imul
mov
push
push
push
and
pop
popa
cmc
sbb
push
pop
(bad)
imul
mov
imul
gs
add
js
cld
mov
cwde
or
fist
or
mov
cmp
cmps
sbb
add
push
mov
xchg
ds
xchg
stos
out
fbld
xchg
cwde
scas
dec
stos
scas
ret
in
imul
sbb
xchg
adc
scas
mov
stos
xor
or
xor
fadd
aad
in
cld
mov
test
arpl
int3
pop
imul
push
test
xchg
(bad)
adc
push
xor
mov
and
mov
test
in
ret
adc
hlt
add
add
(bad)
icebp
(bad)
in
mov
lds
fdiv
es
inc
imul
and
and
xlat
xor
xchg
cmps
mov
call
test
outs
sub
jle
les
push
movs
fst
inc
cli
xlat
jne
dec
xor
xchg
add
fdivr
sbb
sub
shr
xor
sahf
and
retf
adc
sub
cmp
dec
cmp
in
pop
push
mov
sub
stos
inc
xchg
ret
fst
loop
jns
mov
xor
sbb
pop
or
sahf
(bad)
push
cmp
imul
outs
call
or
out
dec
sub
push
in
call
lds
ror
dec
mov
shr
nop
pop
mov
js
icebp
popf
push
cmps
enter
nop
(bad)
jno
ins
pop
mov
sbb
mov
push
adc
inc
int3
pop
jno
popf
pushf
dec
pusha
lahf
sti
sub
daa
in
sub
push
mov
cmp
pusha
mov
sbb
mul
test
mov
ja
pop
loopne
call
mov
mov
(bad)
nop
fsubr
xchg
gs
jnp
dec
std
mov
(bad)
xor
aaa
cmps
test
sbb
or
aad
mov
sahf
cmp
or
xchg
std
and
out
cmp
stc
push
icebp
js
or
iret
add
dec
inc
and
push
aam
pop
jp
dec
xchg
(bad)
fistp
push
pop
mov
add
aad
cmp
jno
xchg
ja
pushf
jnp
retf
mov
retf
(bad)
into
test
jl
fmul
fld
into
loopne
or
pop
xchg
inc
loop
mov
sbb
mov
shr
cmp
out
mov
and
mov
add
enter
xor
test
mov
lea
sbb
rcl
int3
mov
int3
inc
inc
and
icebp
pop
xchg
retf
hlt
imul
xchg
dec
xor
dec
mov
(bad)
movq
or
loop
ja
push
and
popa
mov
push
imul
mul
ins
inc
and
dec
(bad)
mov
fcomp
adc
shr
(bad)
mov
(bad)
dec
inc
sbb
movs
lods
fcom
mov
sbb
pushf
adc
(bad)
stc
shr
xchg
out
lds
dec
js
cli
shr
call
cmp
jecxz
enter
dec
dec
xor
cmp
nop
jne
js
je
or
sbb
sbb
cs
(bad)
gs
test
add
arpl
and
add
cmps
jl
cwde
cmp
int3
hlt
jmp
push
cmp
call
aaa
or
dec
jle
xchg
jecxz
popf
cdq
rol
nop
int3
push
xchg
retf
xor
xchg
repz
popf
stos
retf
xchg
or
mov
xcrypt-ofb
cmps
sub
dec
dec
cmps
jae
loopne
inc
push
out
jmp
pop
lods
dec
inc
cmp
imul
jg
jne
sti
test
rol
lea
dec
out
enter
push
stc
adc
lds
pop
adc
ret
jge
shr
fimul
in
xor
add
movs
fdiv
daa
fidiv
mov
fsubr
aas
fdivr
mov
cdq
fwait
ins
enter
xchg
(bad)
push
mov
pop
jne
and
ja
fadd
mov
sub
adc
aad
sub
aam
dec
(bad)
add
xchg
push
sub
jl
sub
es
adc
test
stc
push
dec
popf
pop
jle
push
pushw
adc
add
inc
movs
sub
mov
pop
mov
pop
shl
rol
or
xor
dec
push
out
ret
pop
hlt
iret
repz
lods
mov
and
mov
sbb
int3
(bad)
jmp
mov
cdq
mov
std
jle
movs
(bad)
mov
mov
push
xor
push
jb
xor
aad
mov
add
dec
jno
(bad)
add
scas
xchg
int
jecxz
jae
imul
mov
fsubr
repz
sbb
adc
retf
mov
pop
pop
rcr
int3
xor
mov
shl
push
fs
mov
sub
std
and
sar
(bad)
mov
push
loopne
ins
bound
sub
pop
mov
xchg
stc
(bad)
push
inc
aad
arpl
cmp
les
inc
cs
jl
inc
aad
sahf
dec
xor
sub
push
iret
shr
sbb
lods
dec
aad
mov
sub
int3
mov
and
push
or
add
sub
mov
xchg
or
pushf
cmp
mov
ret
cmps
int
icebp
mov
sbb
xor
push
jecxz
not
adc
or
sbb
cmps
les
jbe
push
push
fadd
adc
repnz
xchg
mov
inc
dec
and
inc
loop
add
inc
scas
call
push
mov
sbb
xchg
sbb
sub
mov
sbb
inc
inc
jae
ss
sub
imul
or
invd
pop
shl
movs
jp
mov
test
(bad)
pop
lods
cld
call
pop
jbe
pushf
repz
and
mul
mov
movs
out
data16
sub
mov
inc
cwde
push
jl
inc
fbld
fs
dec
sbb
pushf
aaa
push
mov
adc
xchg
and
or
mov
pop
mov
(bad)
loope
jnp
inc
jp
scas
adc
aas
mov
push
lahf
mov
loopne
js
jnp
xchg
lahf
lds
cmp
pop
(bad)
lock
shl
jno
popf
fxch
cld
(bad)
pop
sbb
test
rol
jmp
pop
not
dec
mov
sub
repz
call
inc
adc
push
mov
mov
push
sub
sti
lea
cwde
les
movs
mov
jmp
push
xor
mov
mov
out
fbstp
sahf
mov
inc
das
fdivr
mov
adc
or
and
xchg
cld
retf
mov
sub
loopne
mov
cld
jp
sub
cmp
test
fcmovnb
or
mov
jo
add
ja
jp
js
jbe
pop
cs
loope
xor
pop
push
ja
add
inc
jo
enter
je
out
out
push
mov
idiv
or
push
ss
adc
call
pop
push
jbe
or
jne
xchg
mov
les
dec
or
push
and
pop
lea
add
popa
jns
pop
inc
stos
js
sbb
mov
push
add
xchg
pop
les
lds
cmp
mov
cmps
popf
hlt
aam
adc
daa
aas
xchg
cmp
fidivr
mov
loop
idiv
pushf
repnz
or
out
sahf
xchg
ss
ss
xchg
sbb
arpl
mov
jno
mov
shl
pop
xchg
push
cli
cmp
xchg
test
jmp
cmp
or
pusha
push
pop
xchg
mov
repnz
es
shl
jge
mov
imul
stos
ss
cwde
inc
mov
dec
cwde
push
in
inc
shl
outs
test
fs
cwde
jmp
mov
sbb
dec
jne
xor
fldcw
in
ds
jmp
test
cmc
lea
es
pusha
loopne
mov
jo
inc
cmp
dec
iret
mov
push
push
stos
lock
push
jo
into
fdivr
sub
test
adc
mov
fldenv
add
dec
or
popa
out
xchg
mov
mov
jnp
xchg
test
jb
mov
jb
movs
dec
scas
mov
mov
mov
pop
jmp
ds
mov
mov
jns
lock
mov
or
inc
sub
ss
movs
icebp
push
jmp
fs
xchg
in
pop
mov
popa
std
movs
idiv
dec
jne
jns
and
lea
sub
lahf
(bad)
cmp
ffreep
mov
arpl
or
ins
push
popa
jno
push
mov
or
xchg
mov
cwde
cmp
pop
inc
and
and
cmp
rcl
into
daa
cld
push
fidivr
push
and
test
cmps
mov
adc
mov
sub
test
arpl
xchg
xor
es
inc
pop
leave
shr
mul
sub
retf
push
lahf
and
fiadd
lods
jmp
add
stos
pop
mov
icebp
iret
push
mov
cld
mov
jmp
add
add
out
jp
pop
jl
xor
adc
fdivr
loop
js
dec
adc
and
xor
jb
clc
(bad)
out
repz
mov
ss
neg
adc
jmp
xor
xor
sbb
sahf
stos
pop
test
mov
fld
push
aad
dec
in
je
lahf
fcom
xchg
sbb
push
cmp
outs
jnp
or
fwait
push
push
imul
(bad)
(bad)
loopne
out
pop
xor
pop
std
bound
dec
xchg
cmp
outs
ret
(bad)
iret
lods
retf
cmp
push
out
push
icebp
lods
imul
push
call
add
es
repz
fbld
pushf
arpl
retf
in
xor
jbe
daa
jecxz
in
adc
test
xchg
ret
xlat
mov
mov
mov
push
bound
scas
cmps
int
clc
cwde
jbe
sar
jecxz
in
cld
push
test
data16
mov
push
mov
push
sub
dec
inc
jbe
xor
jmp
arpl
inc
popa
aam
xchg
shl
icebp
cmp
push
add
cmp
jmp
stos
test
or
mov
jl
pop
gs
cmp
ss
sahf
bound
cmps
cmps
dec
mov
repnz
in
push
out
or
out
into
into
(bad)
adc
retf
in
and
ja
in
lock
inc
cmp
mov
mov
popa
(bad)
jp
sbb
xor
out
cdq
cmps
cwde
cmps
adc
mov
pop
scas
mov
mov
xor
pop
inc
dec
mov
add
mov
daa
test
xlat
aam
sbb
movs
les
xchg
pop
mov
js
push
jbe
cmp
sbb
sti
mov
fidivr
and
int3
jb
fnstsw
fwait
out
retf
ret
inc
fabs
outs
jge
pop
sbb
jae
dec
inc
jns
dec
cmp
jg
push
mov
sbb
and
in
mov
mov
or
jmp
inc
out
mov
mov
mul
push
push
sbb
dec
mov
icebp
scas
and
scas
popf
push
cdq
mov
mov
xchg
push
adc
adc
lahf
sbb
pop
cmp
ins
(bad)
jnp
fimul
mov
ins
clc
aad
inc
dec
popa
adc
test
mov
jecxz
jmp
mov
pop
out
(bad)
arpl
scas
mov
adc
cmps
push
mov
out
xchg
pop
add
jg
mov
or
jb
or
add
adc
mov
pop
sbb
mov
ss
and
mov
add
adc
lds
sti
cmp
(bad)
out
leave
inc
fnstcw
dec
mov
sub
xor
mov
scas
iret
sub
adc
mov
das
push
jnp
jmp
daa
cwde
cli
xlat
movs
call
(bad)
xor
retf
xor
xchg
sub
xchg
mov
jg
add
adc
adc
sbb
mov
jecxz
mov
pop
mov
int
out
pop
pusha
pop
pop
xchg
mov
or
cmp
cli
test
xchg
sub
outs
aas
ins
jno
or
shl
sub
movs
neg
test
cwde
mov
fnsave
aad
pop
popa
sbb
popf
fbld
jbe
movs
test
push
in
xchg
pop
lahf
scas
loop
mov
mov
shr
test
cs
clc
adc
loope
ret
lock
jbe
mov
cdq
test
je
push
loope
sbb
in
sbb
call
ret
sbb
sub
jne
add
retf
(bad)
push
shl
sub
dec
jmp
xchg
xchg
popa
xor
push
cmp
or
pop
add
clc
mov
aas
xor
ja
iret
mov
aad
push
mov
fs
test
mov
add
jmp
xchg
popa
adc
mov
push
icebp
ins
dec
push
ss
cmp
dec
xor
ret
xor
scas
mov
pop
std
jecxz
push
ins
push
pop
je
outs
fst
and
jns
scas
ss
push
outs
mov
and
pop
xchg
inc
test
test
retf
scas
jne
adc
clc
out
and
lods
inc
iret
popa
cmp
mov
aaa
imul
in
fild
lds
mov
pop
adc
cdq
loope
xor
xor
mov
and
add
xchg
pop
inc
iret
push
movs
imul
mov
test
outs
loope
mov
neg
in
std
sbb
test
pop
stos
popa
dec
enter
jbe
in
inc
mov
xor
data16
(bad)
adc
mov
pushf
mov
loop
pop
xchg
out
push
movs
adc
dec
cmp
mov
sub
inc
xlat
mov
fwait
retf
nop
lock
xchg
daa
pop
sbb
pushf
cmp
call
add
xchg
pop
mov
push
mov
mov
and
in
mov
mov
xor
movs
dec
ja
cli
xchg
or
pop
ret
push
dec
cs
adc
mov
into
mov
xchg
leave
dec
jp
jecxz
pop
iret
push
and
jnp
frstor
repnz
clc
cmp
sti
retf
xchg
push
fwait
cld
mov
push
mov
lods
sahf
retf
das
leave
(bad)
mov
push
and
ins
out
call
and
and
push
adc
and
mov
jnp
jb
sub
xor
inc
mov
(bad)
push
push
clc
into
add
(bad)
pop
sahf
ret
sbb
std
mov
add
cmp
pop
pop
or
out
sahf
fld
cmp
lahf
push
push
and
jb
or
mov
mov
repnz
lods
bound
cmp
mov
scas
pop
dec
sub
repz
in
test
into
arpl
adc
or
pushf
adc
fstp
mov
imul
inc
loop
(bad)
xor
adc
sub
jns
mov
fild
mov
and
(bad)
or
popa
sahf
or
dec
gs
icebp
repnz
inc
inc
dec
push
push
sbb
add
jbe
push
mov
loop
push
mov
fnop
int
arpl
mov
test
add
sar
push
repz
fisttp
in
pop
sub
out
cmps
and
ins
jle
sbb
xlat
fucomip
in
mov
cmp
das
sahf
arpl
lock
ins
jnp
push
clc
aam
xchg
push
adc
push
push
mov
mov
or
call
push
ja
mov
sbb
(bad)
retf
mov
fisttp
sub
int
xchg
ror
jae
call
cmp
jp
mov
sbb
mov
add
sbb
jp
cmp
cwde
mov
pop
jnp
push
sar
test
add
lock
jecxz
stos
jmp
xchg
mov
sub
sar
ins
mov
icebp
js
mov
mov
sbb
addr16
jnp
inc
mov
mov
sbb
or
mov
bound
adc
fidivr
xchg
and
mov
push
and
es
imul
jne
(bad)
cs
mov
and
adc
jge
xchg
dec
xor
bound
add
shl
movs
shr
int3
ret
fsubr
repnz
push
and
mov
aas
les
js
pop
mov
push
lods
ret
xor
test
sbb
xchg
cmp
pop
mov
jns
stos
mov
dec
loopne
adc
dec
ss
dec
shr
scas
nop
sub
stos
dec
cmp
clc
jnp
cmp
jp
lahf
iret
mov
pop
cmps
stos
xor
mov
mov
call
loope
call
imul
into
retf
pop
adc
(bad)
xchg
iret
pop
cli
cli
sti
sub
movs
pushf
cmp
cmps
stc
and
and
pop
sub
je
mov
jl
jno
popa
call
cld
push
test
pop
out
mov
das
sub
stc
ja
or
mov
popa
in
shl
pop
pushf
or
adc
ins
shr
jae
adc
cmp
loope
xlat
mov
dec
das
mov
retf
sbb
sub
xchg
(bad)
ror
arpl
sub
sub
rep
sub
adc
pop
sti
and
push
mov
and
xchg
mov
iret
test
in
dec
or
adc
int3
call
mov
or
fcmovu
call
es
jmp
dec
xchg
sub
out
rol
pop
rol
push
int3
mov
adc
and
scas
jecxz
pop
inc
pop
jecxz
jmp
(bad)
pop
retf
cmp
jb
repz
cld
sbb
rcl
imul
inc
hlt
pop
adc
test
fcomp
lea
jecxz
mov
mov
sbb
push
mov
in
push
sar
sub
scas
cmp
inc
inc
add
inc
adc
pop
stos
mov
out
rol
(bad)
cwde
ret
jle
mov
adc
cld
mov
xchg
fdivr
cmp
cwde
nop
mov
js
test
(bad)
ficom
and
jge
cmp
pop
push
popa
sub
cmps
aaa
and
sub
inc
lods
cdq
int3
fcom
jnp
daa
neg
push
pop
mov
add
fld
lds
stos
mov
pop
xor
test
mov
(bad)
call
cs
adc
pushf
xor
out
mov
rcr
and
idiv
mov
test
or
pop
jg
arpl
data16
ror
and
add
jae
jo
cs
inc
lahf
lahf
js
push
ss
out
out
inc
push
sub
loope
or
arpl
les
dec
in
(bad)
in
or
ds
movs
add
lea
xchg
icebp
fwait
test
dec
outs
pushf
movs
xor
add
push
loopne
les
push
fmul
daa
test
mov
fmul
mov
aas
mov
push
loop
xor
mov
mov
pop
cmp
retf
mov
jle
mov
xchg
pop
movs
int3
(bad)
mov
adc
push
or
and
ss
test
push
mov
mov
retf
push
cli
loope
mov
fcmovbe
fadd
sbb
jmp
cld
int3
out
loope
add
fld
cwde
je
arpl
add
or
add
call
jmp
xor
int3
xlat
mov
and
mov
xchg
xlat
adc
jp
adc
(bad)
push
gs
inc
stos
pop
call
pop
or
xor
idiv
push
adc
jmp
imul
sbb
jne
xchg
cli
mov
mov
fnstcw
xchg
cs
into
out
loopne
dec
push
dec
fs
mov
dec
sbb
dec
fnstcw
mov
fwait
inc
mov
cmp
xchg
ret
imul
test
xchg
iret
loope
jae
xchg
cmp
xchg
ds
sub
inc
dec
sub
lods
sbb
test
cmc
popf
xchg
cdq
movs
shr
mov
mov
adc
cdq
add
sub
dec
sub
in
mov
in
in
aas
pop
xchg
adc
jl
bound
jns
call
sub
dec
aam
cmp
cmps
sub
fdivp
loop
mov
sbb
fimul
inc
dec
(bad)
jno
mov
ret
ds
inc
push
shr
les
pop
aam
inc
dec
xchg
add
push
push
cmp
xor
mov
(bad)
cmp
call
and
cli
cmp
adc
inc
or
sbb
xchg
push
mov
icebp
pop
jo
fdivr
fwait
daa
test
sub
and
dec
je
sub
xor
fnstsw
mov
out
js
jae
jmp
in
mov
cmc
fsubr
test
add
(bad)
pop
neg
pop
outs
(bad)
pop
out
push
retf
pushf
xchg
push
push
adc
rcr
in
xchg
pop
pop
xor
stc
sbb
xchg
cmps
dec
les
mov
dec
ret
push
jge
(bad)
add
push
jmp
xchg
inc
and
or
loope
test
in
push
in
sub
loop
lods
cdq
and
lahf
in
mov
push
loope
jmp
sbb
pop
rcr
fsubr
loop
jnp
fild
pop
pop
or
sub
mov
aas
pop
jmp
push
js
xor
dec
inc
inc
cwde
cmp
test
fist
loop
retf
xchg
inc
movs
stos
mov
lahf
adc
sub
mov
pop
inc
cmp
pop
cmp
add
push
or
mov
in
inc
fs
(bad)
dec
adc
jle
mov
sub
enter
mov
xchg
or
ins
adc
scas
pop
stos
(bad)
jne
push
stc
or
jecxz
sti
dec
lods
xchg
lods
adc
dec
inc
push
dec
and
pop
xchg
sbb
inc
(bad)
push
sub
pop
popf
test
mov
jmp
call
in
out
jb
mov
in
mov
popa
loop
add
(bad)
dec
cs
xchg
pop
cmp
push
fwait
adc
fild
loope
not
jmp
movs
inc
sub
ss
ret
repnz
cmp
dec
les
xor
pop
pop
movs
mov
mov
fwait
cs
jmp
push
ror
ss
inc
jp
pusha
pusha
je
mov
(bad)
xchg
ror
cmp
mov
(bad)
mov
mov
cwde
xchg
cmp
imul
jne
inc
popf
loopne
dec
sbb
mov
dec
xchg
mov
adc
jp
xor
scas
pop
lods
inc
rol
je
pop
(bad)
xchg
mov
pusha
inc
pop
xor
inc
test
mov
dec
mov
push
ficomp
xor
pop
and
repnz
xlat
xchg
push
test
jmp
dec
psrlq
imul
std
pusha
lahf
test
pop
(bad)
int
popf
jb
mov
jl
stos
push
or
sub
(bad)
sbb
jge
mov
push
pop
dec
xor
pushf
push
push
(bad)
(bad)
push
mov
push
cmps
mov
push
(bad)
and
repnz
mov
icebp
mov
in
sub
loopne
mov
pop
scas
lahf
les
mov
cmp
loop
mov
ror
jno
in
xor
outs
(bad)
sar
xor
je
pusha
jno
pop
aad
pop
jmp
mov
dec
jb
add
in
loope
(bad)
push
movs
add
sbb
inc
xchg
jmp
push
dec
sbb
push
sbb
rcr
mov
jl
mov
or
bound
jmp
call
adc
sub
dec
inc
push
xchg
mov
mov
jno
dec
into
jp
push
or
pop
or
addr16
sub
ror
cld
ror
inc
std
and
inc
fcmove
rcr
cmp
sub
add
lahf
std
pop
push
cmps
pushf
repz
sub
stc
xchg
cmp
and
adc
leave
and
data16
lahf
cmp
icebp
or
mov
xchg
jae
mov
dec
push
cmp
enter
xchg
sar
inc
jno
mov
call
in
sub
idiv
mov
out
popf
push
aad
test
sbb
add
jle
push
jne
mov
stos
jl
sahf
mov
ins
add
retf
in
ins
or
sub
mov
(bad)
ret
push
es
out
int
mov
pop
imul
jb
rol
out
and
mov
call
std
cmp
stc
sub
jnp
sub
imul
mov
or
lds
test
sub
sar
pop
push
test
pop
arpl
mov
icebp
adc
adc
xor
mov
neg
sub
inc
push
out
jno
ins
push
std
add
std
jnp
ret
iret
mov
sub
push
ins
adc
sub
inc
mov
leave
push
dec
or
pop
repz
out
call
loopne
jl
aaa
js
pop
push
sar
sahf
sar
cmp
retf
xor
js
aas
ret
pop
int3
inc
ja
retf
dec
ficomp
add
out
cbw
push
out
fs
bound
pop
jnp
es
mov
and
test
inc
dec
dec
inc
mov
mov
ins
lds
cmps
push
std
fistp
xor
bound
xor
call
mov
adc
(bad)
mov
cmps
mov
adc
shl
pop
aaa
jl
frstor
out
cmps
pushf
push
push
ror
adc
ins
xchg
and
jl
shr
iret
shl
mov
fld
mov
mov
sbb
inc
lea
sub
jnp
stos
mov
jbe
dec
lds
xchg
and
mul
gs
jmp
test
lea
sbb
sub
fadd
push
cmp
jg
inc
sti
xchg
cmp
xchg
sti
mov
stc
xchg
xor
cmp
lahf
jecxz
sub
push
adc
aas
gs
in
sub
and
ins
mov
sar
inc
pop
sbb
test
call
xchg
or
or
mov
cmc
cmc
clc
mov
and
cmp
dec
jbe
xchg
or
fs
(bad)
jmp
imul
loope
out
imul
cmp
sbb
aad
in
sti
rcr
xchg
mov
xchg
(bad)
sub
arpl
xor
pop
push
xor
sbb
push
imul
fnstcw
out
jg
lods
pop
imul
or
(bad)
cwde
ror
mov
xchg
pop
aas
cmp
mov
push
iret
xor
or
fcom
add
imul
sbb
push
popf
push
push
xchg
imul
or
push
xor
and
xor
(bad)
cmp
push
inc
jbe
sbb
jo
mov
cmps
push
and
int3
ds
push
pop
xlat
or
repz
add
lods
sub
movs
cmp
inc
jae
(bad)
push
add
adc
popaw
xchg
dec
add
shl
sti
push
mov
data16
sti
inc
jb
loopne
add
nop
jge
das
sbb
adc
xor
and
xchg
sub
aad
inc
push
pop
stc
adc
adc
je
sub
xchg
jge
sbb
jae
ds
mov
test
cmps
das
inc
inc
mov
movs
(bad)
inc
rcl
sub
scas
jb
sahf
and
push
jle
ss
mov
ins
mov
je
cmp
adc
std
xor
inc
sub
xchg
xchg
jge
out
push
sbb
leave
inc
add
frstor
mov
jo
dec
movs
shl
pop
test
pop
fdivr
mov
sbb
jp
jo
stos
cmps
(bad)
push
mov
mov
pop
xor
ins
sbb
mov
mov
arpl
inc
mov
stc
sahf
and
and
fild
dec
(bad)
ja
shl
dec
seto
xlat
cmp
out
jp
sub
jb
jecxz
cmps
and
sbb
dec
(bad)
push
loop
js
jae
mov
popf
sub
cmps
jecxz
test
mov
or
imul
outs
pop
popf
fdivr
cdq
mov
repnz
in
lahf
cmp
add
cdq
fcom
repz
lahf
ins
mov
imul
jp
outs
enter
push
aad
cmp
mov
jl
cmc
and
cmc
je
fimul
fidivr
sbb
dec
shr
xchg
inc
add
xchg
das
(bad)
out
loop
sbb
in
out
gs
dec
adc
cmp
in
shr
repz
sbb
jl
prefetchnta
cmp
aas
dec
ficomp
sub
mulps
shr
popf
stos
pop
rcl
mov
fnstenv
outs
add
cmps
out
xchg
add
cs
and
mov
cmp
hlt
pusha
xchg
and
sub
jbe
jmp
popa
dec
xchg
jg
and
sbb
sahf
sbb
comiss
push
xor
push
sub
sub
xchg
rcl
(bad)
shr
push
imul
add
in
sbb
push
stos
dec
xchg
adc
mov
add
popf
loop
mov
retf
jnp
cmpps
pop
or
arpl
cli
xchg
mov
sbb
(bad)
mov
bound
(bad)
icebp
jne
stos
out
jo
dec
dec
dec
mov
rcl
mov
or
mov
inc
add
stos
js
cmp
cld
adc
rol
dec
stos
js
in
hlt
out
cmp
pop
dec
push
dec
lods
clc
sub
mov
jg
xchg
inc
jo
push
mov
sub
and
xchg
in
cmp
pop
repnz
jne
cmp
mov
jmp
mov
retf
outs
test
xor
scas
add
mov
push
cwde
popf
js
jb
cmp
stc
jmp
(bad)
lock
sbb
inc
iret
mov
mov
push
mov
dec
rcr
fcom
stc
mov
aaa
fwait
pop
xor
mov
xor
jl
adc
test
loop
xchg
mov
lds
jb
dec
call
xor
xor
stc
sub
cmp
icebp
adc
sub
jmp
cmps
and
mov
xchg
(bad)
int3
mov
xchg
jge
xor
outs
cmp
retf
pop
inc
leave
dec
(bad)
pop
fsub
(bad)
rcl
dec
in
pop
sub
aad
pop
xchg
add
xchg
dec
mov
repz
iret
int
ins
xlat
add
fdivr
inc
mov
jl
sbb
pusha
in
(bad)
pop
aad
jno
cli
cli
xchg
cmp
lods
rol
in
call
add
xlat
mov
push
scas
cli
pop
enter
push
or
or
jnp
pop
test
add
push
push
mov
cld
pop
jns
pop
push
out
es
in
push
loop
movs
adc
mov
sub
push
lock
in
aaa
adc
push
stos
cmp
mov
add
or
cmp
icebp
ret
out
fs
xor
jae
sbb
outs
pop
icebp
in
lds
mov
data16
add
xchg
sti
push
mov
popw
ds
inc
sub
xchg
imul
ins
call
pop
sub
fwait
neg
movs
leave
adc
std
aaa
inc
repnz
inc
inc
add
ret
xchg
sbb
daa
jmp
jmp
fxtract
or
outs
ds
aaa
pop
add
or
fs
dec
pop
leave
sub
push
pop
mov
xor
mov
test
test
sahf
jb
adc
cmps
xor
pushf
xor
sar
xchg
dec
push
jns
scas
push
pusha
jg
cmp
push
retf
sbb
fiadd
sbb
inc
push
xchg
test
lods
and
lea
iret
fcom
repnz
test
repz
push
jecxz
push
inc
or
push
in
jne
into
scas
loope
xchg
sbb
sbb
sbb
push
scas
xchg
push
das
je
cs
mov
gs
pushf
in
and
push
inc
dec
jae
call
je
test
jae
mov
sbb
hlt
clc
add
dec
push
mov
sbb
inc
imul
loope
leave
xor
in
in
dec
ds
mov
or
adc
out
dec
adc
add
jmp
es
pop
pushf
or
jne
enter
adc
daa
sbb
jno
inc
xchg
xchg
pop
mov
push
int
push
xor
jmp
sar
repz
cmps
mov
sahf
aaa
dec
sbb
imul
loop
clc
fsub
mov
pop
mov
data16
cdq
dec
mov
movs
pop
push
fadd
mov
outs
xor
ret
jno
in
fisubr
aaa
and
daa
std
lods
bound
dec
arpl
and
cmp
pop
mov
mov
mov
or
inc
mov
lds
mov
inc
xchg
xchg
sub
inc
js
lahf
clc
sti
fdivp
inc
hlt
xor
popf
inc
cdq
lds
push
jno
add
sub
cmps
cmp
mov
or
out
push
mov
(bad)
dec
cmps
popf
jge
repnz
push
sti
ja
mov
push
mov
or
jmp
jle
mov
sar
sub
xor
and
rol
xchg
sar
sub
mov
xor
cdq
addr16
js
sbb
scas
and
cmc
aaa
int3
jb
jle
pop
cmps
pop
(bad)
jl
xchg
and
mov
lock
aas
loopne
jnp
rcr
jmp
rcr
dec
mov
in
fucomi
call
(bad)
(bad)
aaa
jg
fcmovu
and
pop
xchg
xor
mov
retf
into
ret
shl
mov
les
push
ds
sbb
jecxz
cmp
dec
jnp
sbb
adc
test
ss
or
cmp
pop
jne
mov
sbb
(bad)
push
fild
mov
lahf
push
jno
ins
cld
sub
mov
mov
push
push
in
pusha
fisub
popf
ss
add
outs
cmps
mov
ja
sbb
daa
mov
js
mov
or
jp
mov
pop
shl
gs
in
aas
cmc
data16
jno
test
adc
cmp
sbb
rcl
sbb
loop
jns
clc
xchg
(bad)
push
nop
xlat
cmp
cmp
test
push
mov
inc
cli
dec
clc
inc
mov
xchg
mov
push
pop
fldl2t
sub
into
dec
jmp
jmp
fimul
push
jecxz
mov
or
cmps
mov
cwde
xchg
pop
scas
inc
sub
xor
clc
pop
mov
pop
and
mov
cmp
push
adc
jns
xchg
push
or
aas
pushf
jge
inc
pushf
sub
pop
mov
or
mov
les
xchg
pop
popf
pop
push
ins
sbb
inc
fidiv
test
adc
jb
inc
push
mov
fwait
add
sub
inc
add
or
inc
stc
mov
mov
ja
rcr
in
js
enter
or
pop
fwait
or
mov
mov
(bad)
dec
daa
sub
push
retf
jmp
call
fisubr
ret
int3
jns
out
data16
hlt
xlat
push
mov
enter
push
sub
aaa
and
gs
sbb
pop
es
inc
ins
cmps
sbb
ret
rcl
adc
push
or
adc
inc
cmp
jae
pop
adc
aas
dec
push
adc
nop
inc
pop
test
mov
leave
sahf
mov
pop
pop
add
sub
xchg
or
mov
ins
and
test
scas
mov
pop
xchg
push
mov
stc
cmps
mov
adc
xchg
retf
ins
aad
fwait
into
xchg
les
mov
jae
sub
jmp
xor
pop
push
jle
mov
fisubr
mov
(bad)
es
mov
mov
jge
int
fistp
pop
or
ja
adc
mov
dec
and
jle
cmc
xor
int3
dec
push
int
jmp
pop
sub
aad
cli
inc
pop
test
aas
retf
sub
inc
mov
sbb
cmp
test
or
add
nop
add
shl
cmps
dec
jo
push
scas
test
cld
fldcw
cdq
jnp
pop
scas
stc
add
jmp
jae
mov
add
ja
xchg
push
dec
mov
repnz
dec
jmp
lods
mov
sbb
add
in
lock
mov
and
jno
xor
push
test
shl
mov
or
xor
mov
adc
test
das
and
xchg
popf
ds
cmps
ss
jo
add
jle
sub
jl
mov
fldcw
call
mov
mov
mov
scas
loopne
out
stos
das
jle
push
sti
adc
mov
dec
and
sar
mov
pop
push
dec
pusha
xchg
sub
add
gs
pop
cdq
or
pop
bound
sahf
into
add
add
aaa
ret
call
xor
mov
jnp
xcrypt-ecb
cmps
mov
sub
mov
mov
jge
push
jl
mov
mov
jmp
scas
cmp
imul
sahf
jg
test
dec
(bad)
shr
pusha
stos
mov
shl
es
push
out
cmps
cli
pop
xor
sahf
ret
or
fs
cmp
xor
retf
sbb
test
add
pushf
mov
add
in
ins
mov
push
dec
aam
fwait
cdq
ja
sub
int
jp
das
popa
std
daa
cmc
mov
xor
pop
xor
push
cmp
add
sub
jmp
dec
test
pop
mov
add
adc
test
and
mov
xchg
out
shr
js
pop
pop
jb
xchg
into
ss
les
int3
xor
xor
(bad)
mov
pop
add
aam
push
sar
inc
add
inc
jbe
in
mov
pop
jno
jo
pop
and
daa
push
mov
shl
nop
dec
or
clc
lds
(bad)
mov
jle
test
xchg
outs
pop
xchg
jnp
cmp
cs
ins
stos
ins
push
popf
ficom
aas
clc
test
xchg
pop
cmp
jg
(bad)
lock
dec
jnp
fsub
xor
popa
inc
int
pop
xchg
push
push
push
inc
rcl
bound
aas
loop
mov
ins
in
or
arpl
push
sahf
rol
push
push
fucomi
jle
ins
out
icebp
sbb
imul
call
mov
push
add
imul
shl
test
cmp
fwait
lods
fisubr
and
js
mov
or
cmp
lods
add
scas
adc
out
outs
push
loop
enter
xchg
jns
out
sub
dec
jae
dec
add
push
add
inc
mov
sti
fwait
data16
imul
jmp
loop
jl
push
enter
adc
lods
cs
das
stos
push
jbe
shl
enter
and
ss
aaa
stos
cmp
jmp
pop
jp
xor
repnz
push
fcmovnb
xchg
mov
inc
xchg
sbb
sti
std
test
test
sbb
sub
ret
lods
ins
mov
sub
xor
imul
jnp
pop
movs
xor
xchg
lock
int
dec
lods
cmp
or
rol
sub
and
pandn
scas
or
pushf
dec
dec
sar
scas
stc
push
push
cli
push
shr
inc
and
xchg
inc
stc
xor
and
out
test
jbe
cli
mov
into
test
fmul
out
xor
and
add
push
jmp
nop
cmp
retf
push
pusha
aam
cdq
push
clc
loop
fld
sbb
jecxz
pusha
sar
sub
push
pop
mov
sahf
loope
push
ss
lods
dec
clc
test
ret
in
inc
scas
fstp
sbb
jo
ins
mov
outs
in
fsubr
jbe
pushf
mov
push
lea
aas
mov
(bad)
xchg
into
mov
scas
or
mov
leave
(bad)
push
sbb
pmaxsw
popf
(bad)
or
ret
inc
dec
lods
rcl
jmp
(bad)
repnz
imul
inc
push
sbb
loope
jnp
sub
cmp
xchg
loop
in
(bad)
adc
lock
mov
push
repz
and
xor
es
and
sub
shl
es
mov
ja
test
(bad)
sti
inc
data16
imul
(bad)
pop
jecxz
cdq
pop
jecxz
jbe
dec
fwait
jo
and
sub
test
jne
out
add
test
(bad)
in
lds
pushf
cli
jecxz
pushf
retf
dec
mov
xor
imul
fimul
inc
call
loope
shl
out
dec
inc
in
(bad)
sub
ins
push
fwait
and
jns
jns
xor
xchg
push
hlt
cs
out
mov
jae
pop
(bad)
nop
(bad)
fst
scas
stos
cwde
in
(bad)
arpl
or
hlt
rcl
mov
or
out
sbb
pop
inc
data16
sub
retf
push
popf
aam
call
xor
jae
pop
pop
shr
std
pop
push
lods
gs
into
mov
(bad)
(bad)
popf
mov
sti
in
push
pop
in
pop
clc
dec
cmp
scas
std
mov
inc
cld
into
mov
int3
iret
idiv
aad
ja
ss
arpl
dec
xchg
movs
clc
sar
aam
fld
push
jp
mov
std
fwait
xor
xchg
ret
loope
ja
daa
jb
mov
push
xchg
add
push
test
pushf
dec
addr16
add
stc
jno
cli
rol
inc
jle
imul
xlat
push
sbb
(bad)
push
push
les
in
imul
bound
add
lea
push
add
(bad)
mov
cld
rcr
adc
outs
add
mov
jo
daa
xor
imul
adc
inc
shl
je
bound
lods
dec
mov
iret
dec
and
or
cmp
cmps
test
neg
mov
nop
arpl
mov
hlt
lods
sbb
not
mov
push
les
ins
cmc
pop
inc
sub
sub
pop
push
xchg
mov
jmp
out
repnz
inc
add
xor
aam
sbb
sub
add
daa
inc
fcom
(bad)
int3
std
in
retf
into
mov
add
stc
inc
pushf
call
and
jae
retf
sub
mov
ins
shr
mov
jae
popf
cmp
sub
lahf
sub
push
mov
rol
test
cmp
jl
add
adc
inc
jecxz
push
sbb
inc
out
jns
inc
jae
arpl
mov
in
push
sub
out
sub
rcl
mov
sbb
retf
sahf
xor
adc
rol
mov
imul
(bad)
pop
stc
es
push
pop
dec
jmp
sbb
mov
push
rcl
(bad)
ds
popa
mov
jmp
adc
pushf
mov
(bad)
movs
outs
jmp
jo
retf
test
shl
sbb
sar
dec
fistp
mov
enter
les
shl
xlat
cmp
pxor
xchg
lahf
or
mov
xchg
lods
ret
cmp
and
inc
jle
and
xor
cmps
mov
jne
jne
and
cs
xchg
sbb
add
push
dec
out
mov
jae
pushf
sahf
mov
push
sbb
lock
fadd
or
cmp
push
inc
lock
inc
lds
sbb
pop
add
sub
call
sub
mov
ja
inc
mov
pop
ret
mov
or
(bad)
adc
sbb
xor
imul
adc
push
neg
dec
ins
xchg
aas
mov
sub
mov
outs
jmp
(bad)
mov
cmp
out
aam
loopne
cmc
xchg
test
xor
sbb
out
addr16
xor
push
test
ins
leave
je
cmp
arpl
cmp
add
fsub
pop
cs
fsub
(bad)
jle
dec
ret
jmp
div
sub
int3
mov
pop
pop
jo
and
cwde
add
popf
cli
push
push
aad
sub
aad
(bad)
xchg
jns
jecxz
movs
test
mov
xchg
lds
cmps
xor
test
scas
ins
fcmovbe
dec
jno
jnp
ins
mov
sub
data16
xchg
icebp
and
mov
je
repz
jae
sub
sub
pop
inc
fdivp
jnp
mov
pop
stos
test
cwde
ret
retf
xor
js
and
lods
int3
mov
adc
cmp
scas
mov
div
xlat
sub
xchg
enter
xlat
push
test
lods
(bad)
add
mov
mov
enter
iret
hlt
mov
mov
add
sbb
adc
mov
ret
and
pop
cmc
sbb
mov
jg
mov
es
stc
xor
adc
mov
pusha
pop
sub
outs
aas
sub
add
sar
add
pop
mul
xchg
jnp
lss
mov
jo
mov
ins
ds
dec
inc
sub
sbb
outs
stc
push
sbb
into
ss
jb
push
dec
aaa
ficom
out
ror
jb
adc
mov
ja
dec
mov
jbe
ret
ret
dec
seto
push
cld
cmps
test
push
test
pop
sub
push
jbe
sub
xchg
outs
mov
dec
popf
ins
iret
xor
mov
pop
mov
pusha
xchg
cdq
pushf
sub
sbb
out
pop
in
retf
cwde
hlt
loopne
inc
cli
xor
aas
jae
mov
fstp
bound
adc
adc
cs
mov
xchg
sti
pop
xor
cmps
fisttp
or
adc
repz
and
fsub
mov
es
test
xchg
sbb
xchg
in
out
rol
pop
(bad)
xlat
pop
ficomp
sub
sbb
sbb
jle
push
test
jne
sub
(bad)
sub
jne
sbb
mov
push
add
leave
jns
es
cmps
jle
lods
mov
fist
mov
pop
retf
addr16
mov
pushf
jge
fmul
inc
imul
call
dec
push
fist
and
repnz
mov
push
enter
rcl
int3
sahf
in
sti
aaa
and
adc
add
mov
sar
ins
jnp
add
add
pop
js
addr16
jae
jmpw
popa
add
out
ja
icebp
sbb
sub
cmp
inc
push
mov
das
imul
and
push
sub
fldenv
fld
mov
inc
dec
jecxz
dec
sar
pop
cmp
jmp
or
push
ss
mov
sbb
xlat
add
hlt
jmp
xchg
cli
and
pop
fcmovnbe
jbe
push
fidiv
pop
cld
push
rcr
cmc
push
rol
jp
cwde
je
imul
pop
fbstp
ror
stos
daa
jne
push
lock
addr16
xchg
push
push
jmp
fsub
adc
lds
and
stc
and
in
adc
out
xor
rcr
adc
call
jbe
and
jge
ds
ins
jae
xchg
out
jg
addr16
in
repz
sbb
ret
cmc
retf
pushf
xor
loopne
retf
and
pop
nop
js
lock
pop
mov
addr16
pop
jg
push
inc
mov
popf
cmp
or
mov
not
push
out
(bad)
loopne
jle
adc
mov
stc
leave
les
pop
mov
jecxz
(bad)
cmc
imul
mov
mov
dec
mov
and
add
and
and
dec
sbb
sub
ror
jg
test
cmps
les
dec
jo
adc
add
jae
cli
std
or
push
imul
push
pop
mov
xchg
inc
mov
sub
inc
fldcw
das
pop
ret
mov
ret
push
(bad)
test
xchg
std
dec
mov
inc
jo
jmp
mov
xchg
cmp
aas
mov
or
pop
mov
inc
ror
js
movs
cs
loopne
test
cli
leave
push
movs
dec
mov
mov
and
daa
(bad)
or
mov
in
mov
jle
iret
jp
and
lds
loopne
je
daa
push
xor
ss
cmp
jg
xlat
mov
mov
lds
cmp
js
mov
inc
movs
inc
(bad)
outs
out
add
adc
add
mov
jb
add
xor
pop
xor
out
ror
fdivr
test
sbb
fbld
and
sub
jb
mov
test
adc
jno
into
fld
sahf
push
daa
ins
js
push
and
fisub
lods
xor
sub
daa
stos
enter
test
and
push
sbb
and
sub
in
xchg
mov
dec
div
hlt
(bad)
jb
sbb
pop
arpl
inc
dec
adc
sub
adc
push
cld
cmp
push
iret
and
mov
jae
or
adc
fcmovne
sar
es
jp
in
(bad)
icebp
xor
arpl
jno
xor
test
test
popf
inc
out
iret
push
adc
or
xchg
es
and
ss
inc
nop
sub
push
mov
or
inc
sahf
test
sahf
test
pusha
mov
add
in
test
adc
xchg
rol
jp
or
int3
xor
inc
inc
adc
push
sub
out
xchg
sbb
mov
js
jb
out
push
out
popf
out
lock
dec
stos
cmps
(bad)
pop
xor
inc
xor
pop
xchg
lods
push
cmps
test
pop
cmp
add
sub
or
pop
popf
ret
mov
and
sbb
sahf
mov
push
fnsave
call
fld
push
mov
test
out
sar
mov
das
jmp
pop
mov
dec
mov
call
and
aaa
sbb
mov
sbb
push
dec
sub
mov
xchg
or
dec
push
cmp
cmp
retf
(bad)
jne
xchg
mov
mov
stos
mov
sub
jmp
mov
or
in
add
ret
and
push
loopne
iret
clc
shl
add
pop
inc
xchg
or
adc
ss
adc
cli
test
out
sbb
adc
mov
ret
fisub
cdq
inc
cli
cmp
sub
xor
(bad)
or
pop
iret
je
mov
inc
icebp
stos
pop
mov
xor
cmp
lods
xor
add
mov
cmp
pop
pop
scas
or
arpl
cs
retf
dec
sub
inc
call
mov
sar
sbb
mov
mov
add
cmp
lea
inc
test
dec
scas
mov
adc
xor
cmp
(bad)
fnstenv
test
cmp
cmc
add
test
hlt
mov
pop
add
xchg
add
inc
cmp
scas
outs
fld
fs
adc
aam
cmp
cdq
lods
clc
jno
mov
imul
popa
and
dec
pop
mov
push
mov
nop
pusha
or
in
cmp
or
(bad)
jecxz
ja
lds
or
cwde
lods
xchg
(bad)
sub
call
cmps
or
pusha
mov
jae
add
or
and
stos
or
xchg
mov
shr
push
xchg
lea
sub
cdq
or
ja
je
sbb
div
mov
nop
leave
add
xor
mov
jae
cmc
xor
pop
out
sbb
push
lahf
arpl
ds
push
aaa
jae
dec
(bad)
(bad)
clc
jl
mov
dec
or
mov
enter
(bad)
ds
add
mov
call
in
push
dec
xor
call
pushf
sbb
inc
and
sub
test
xchg
ins
mov
sbb
mov
pop
out
push
(bad)
fimul
mov
jo
push
stos
int3
xor
lods
mov
repnz
in
scas
shl
sbb
jmp
out
pop
aad
std
or
sub
push
add
pop
mov
retf
pop
dec
sbb
adc
dec
js
jnp
enter
inc
xchg
jbe
xor
sbb
or
sahf
dec
cmp
test
mov
jmp
ds
leave
xchg
imul
pop
or
adc
scas
xlat
(bad)
les
mov
dec
outs
fst
and
retf
mov
pop
push
arpl
retf
push
leave
pop
add
pop
xor
inc
cwde
push
xor
adc
inc
cld
in
jle
pop
adc
pop
outs
cmps
xor
sbb
adc
hlt
add
cmps
dec
xor
sbb
inc
push
retf
jp
xor
mov
test
jnp
dec
sti
imul
das
xor
push
(bad)
retf
pop
jle
jmp
jmp
jmp
and
rcr
push
jg
lahf
mov
es
sub
pop
fsubp
std
and
sbb
push
fistp
xor
mov
enter
inc
inc
fadd
in
jp
lahf
jns
push
inc
mov
mov
push
sub
mov
ss
xorps
fadd
sahf
mov
outs
in
mov
adc
mov
stc
int3
mov
pop
ds
gs
pop
jo
outs
pop
hlt
xchg
inc
scas
rcl
xchg
mov
mov
out
aam
xchg
mov
repnz
stos
mov
test
les
loopne
jge
(bad)
stos
cmp
pop
aas
les
pop
jecxz
sbb
xchg
mov
test
lea
and
mov
sbb
mov
push
mov
add
lock
(bad)
xor
jno
loopne
xor
into
pusha
mov
sbb
(bad)
gs
inc
push
rcl
int3
mov
mov
dec
iret
shr
hlt
rcr
add
stos
push
pop
mov
outs
sub
cmc
sub
sbb
in
shr
cmps
jmp
mov
sti
xchg
lahf
sar
sbb
mov
jge
or
and
ins
or
add
jmp
int3
out
adc
into
xor
jle
fnstsw
repnz
pop
rcl
sbb
enter
mov
inc
push
fsub
xchg
and
xchg
mov
inc
adc
loopne
push
or
push
popa
jge
pop
jns
clc
ret
dec
sub
adc
sub
repnz
inc
and
jno
sub
mov
fstp
mov
sbb
loope
pushf
lea
sbb
mov
push
cwde
mov
sub
retf
cmp
push
jno
jo
sbb
jno
jecxz
movs
push
lock
pmullw
mov
xlat
push
ins
adc
inc
push
push
shl
adc
xor
sti
enter
mov
ins
push
test
aad
inc
lea
mov
push
pusha
dec
or
cmp
mov
xor
stos
iret
rcr
sub
mov
int
shl
or
push
add
rcr
push
push
mov
mov
cmp
mov
sbb
mov
and
adc
daa
inc
jmp
cld
mov
das
inc
(bad)
out
jmp
sub
cmp
pop
mov
adc
movs
je
and
test
mov
sub
jg
leave
mov
push
aaa
in
jg
rol
xor
mov
cli
inc
inc
ror
movs
mov
retf
sbb
inc
sbb
(bad)
enter
or
push
inc
out
ins
int
and
out
add
mov
or
and
retf
push
mov
dec
lods
push
stc
jle
ins
push
mov
inc
out
mov
fbld
jnp
inc
(bad)
(bad)
imul
sti
add
call
stos
jge
shr
mov
(bad)
push
lods
int
fldcw
jge
addr16
sub
sbb
shl
fiadd
dec
jno
sbb
pop
sub
loope
movs
hlt
lds
pop
and
xchg
in
mov
iret
xor
cwde
inc
cmc
aaa
mov
in
das
push
out
adc
cmps
mov
sub
sub
int
xor
or
jnp
clc
dec
sbb
xor
or
in
jle
iret
dec
add
sbb
cwde
dec
mov
push
jge
mov
(bad)
(bad)
or
lods
out
jns
pop
pop
out
jmp
ror
or
push
pop
cdq
inc
xchg
div
data16
lods
xchg
lods
stos
ficom
inc
aaa
jle
(bad)
and
pop
lock
test
push
fmul
cli
sbb
imul
fwait
cwde
fs
loop
push
retf
push
jbe
out
int3
out
mov
sbb
jl
dec
push
sbb
cld
in
mov
test
in
repz
or
jnp
adc
stos
dec
loopne
cmc
sub
mov
popf
outs
ds
jns
sti
push
ror
mov
inc
inc
inc
test
cs
add
arpl
pop
cmc
inc
mov
mov
inc
je
xor
jl
gs
cli
jg
xchg
push
mov
mov
pop
movs
adc
pushf
push
ja
aaa
jmp
repnz
shl
pop
(bad)
push
into
aam
jb
add
(bad)
imul
add
(bad)
ja
pushf
pop
repz
retf
or
sahf
add
mov
adc
cmp
lahf
out
in
mov
(bad)
pop
add
or
cld
fld
movs
fnsave
or
adc
enter
outs
je
sbb
(bad)
loopne
fist
xor
fsub
outs
test
jb
xchg
pop
and
xchg
leave
cmp
test
ret
sti
pop
cmp
jo
and
adc
lea
(bad)
repz
and
leave
or
cwde
les
adc
pop
outs
ins
fild
test
cli
mov
or
(bad)
das
or
call
mov
shl
jp
jecxz
push
jae
retf
addr16
enter
xchg
lock
xchg
or
pop
shl
xor
ins
jge
fadd
jmp
inc
sbb
sti
stos
stos
int
push
dec
(bad)
pop
or
outs
mov
outs
xor
sbb
cmp
ins
in
push
mov
cwd
ss
pop
xchg
test
out
loope
or
jo
das
and
dec
xlat
rcr
and
fidivr
dec
cmp
sub
adc
cmp
nop
retf
daa
fwait
mov
ss
jp
inc
popa
or
pushf
jmp
pop
pop
xchg
sahf
and
pop
jecxz
mov
sbb
movs
sahf
pop
inc
xlat
in
scas
stc
mov
jmp
xor
fcomp
std
cmp
or
xor
and
cmp
call
out
ds
and
dec
cwde
sbb
mov
cmp
gs
cmp
aaa
sub
cwde
adc
sbb
jns
pop
retf
hlt
inc
popf
adc
xchg
cwde
inc
clc
or
jmp
inc
js
test
push
dec
or
rcr
push
adc
sbb
popa
(bad)
dec
test
push
inc
dec
pop
and
into
dec
cs
inc
push
xor
test
dec
pusha
pusha
in
sub
ds
cmp
imul
clc
xchg
mov
pop
ins
lea
int3
int
push
cmp
or
sbb
jmp
jo
sahf
test
ret
mov
and
mov
loopne
cmp
mov
shl
sbb
pop
shl
jo
mov
xor
leave
add
and
lea
mov
xlat
fisubr
lds
mov
jp
push
pop
mov
pop
xor
lds
cmp
and
sbb
jge
cld
gs
sbb
mov
xchg
push
call
push
jle
les
stos
inc
data16
imul
gs
dec
loopne
push
repz
shr
cmps
jl
scas
inc
mov
sub
popa
xchg
aas
adc
lds
jmp
ja
fisub
pop
xor
data16
mov
mov
mov
dec
pusha
popf
xor
inc
jbe
daa
ret
in
les
or
push
dec
pop
add
popf
pop
gs
jmp
test
sbb
adc
xchg
imul
daa
daa
sub
xchg
xor
and
pop
jg
pop
jmp
cmp
lods
or
lods
je
inc
xchg
not
mov
sahf
push
ror
out
dec
push
sub
fidiv
ins
adc
adc
iret
rcr
sbb
je
(bad)
inc
push
dec
ins
(bad)
sahf
jo
sbb
sbb
fstp
dec
cmp
dec
mov
fsub
fild
shr
mov
jmp
fist
mov
add
cs
adc
sbb
inc
fisub
mov
mov
add
popf
add
and
int
sti
mov
cwde
mov
adc
push
push
(bad)
sub
jbe
ret
mov
add
das
test
xor
call
or
scas
jmp
inc
sub
aas
mov
lock
cmp
ja
fldcw
xchg
fisttp
sub
(bad)
fbstp
xor
out
fild
jo
add
push
iret
inc
movs
lea
and
inc
shl
fdivrp
rep
call
popf
inc
hlt
int
cs
out
ss
mov
adc
lods
mov
mov
cld
adc
inc
jge
js
test
lea
test
or
mov
jp
dec
mov
mov
mov
bound
xchg
mov
loop
js
(bad)
jg
fldz
retf
aam
sub
sahf
shr
test
out
shr
jb
sub
outs
div
sbb
inc
out
inc
cmp
fist
mov
stos
pop
mov
jb
enter
or
or
mov
fiadd
(bad)
movs
popa
and
call
sbb
inc
push
push
loopne
push
scas
shl
adc
jl
mov
xor
or
jle
scas
push
dec
scas
adc
fld
adc
call
out
jbe
xchg
pop
sbb
enter
movs
pop
lods
xchg
mov
jle
es
or
aas
jb
pop
cmp
lods
fdivr
fld
imul
pushf
stos
adc
mov
mov
je
sbb
xchg
push
nop
cld
sbb
pop
inc
inc
and
jmp
xor
sub
shr
aaa
js
xchg
ret
add
clc
aas
fincstp
int3
clc
push
ins
jae
pop
dec
cmp
cmp
mov
xor
push
retf
es
in
push
cs
iret
push
push
push
or
enter
(bad)
shr
call
retf
addr16
cs
mov
pop
mov
arpl
lock
fisub
outs
int3
sub
les
(bad)
mov
ret
adc
push
pop
mov
xor
inc
or
ret
xchg
outs
sbb
sti
ds
ins
fs
and
sbb
es
inc
inc
pusha
les
and
sub
imul
jecxz
(bad)
hlt
mov
mov
pop
push
jo
(bad)
and
sbb
icebp
fisub
bound
popf
retf
pop
mov
cmp
cmps
movs
or
mov
fsub
in
mov
mov
mov
in
ja
add
jl
dec
test
sti
xlat
std
sub
cmp
dec
jecxz
push
lods
mov
ret
add
ret
mov
dec
add
sbb
sub
xchg
mov
sub
pop
ret
mov
adc
xor
push
mov
ja
sbb
(bad)
icebp
mov
popf
out
push
lods
enter
rcr
test
cmp
push
add
jb
pop
stos
les
add
mov
pop
stos
dec
repnz
ror
loopne
mov
inc
retf
das
inc
jle
pop
inc
xchg
fst
lods
rcl
loop
mov
push
sbb
imul
sbb
dec
pop
xchg
cmps
js
push
int3
(bad)
pop
sbb
fnsave
and
mov
cmc
jne
jg
sub
pop
out
add
jnp
cld
push
inc
sbb
jecxz
and
rol
mov
lods
arpl
ret
in
jnp
sbb
xchg
add
add
jns
jbe
and
push
addr16
push
je
repz
sub
retf
jno
xchg
ret
xor
aad
xchg
jl
lea
mov
jb
rol
sub
gs
(bad)
pop
test
mov
cmc
lods
adc
xchg
mov
test
adc
push
xchg
jmp
cdq
jns
pop
sbb
retf
and
test
jg
aaa
pop
dec
sahf
out
in
pop
loope
aam
iret
data16
rol
add
pop
inc
or
ret
add
lahf
es
sbb
pop
pop
inc
ret
sub
cmp
sub
jo
or
xor
retf
xor
outs
mov
das
retf
sbb
popf
clc
push
je
add
les
retf
loop
cmps
or
xchg
ficomp
push
mov
or
adc
fs
fld
stc
sub
outs
cld
push
jle
xor
sahf
outs
or
out
cmp
sti
jmp
push
les
push
xlat
mov
das
xchg
mov
cmp
test
jl
call
test
jnp
popa
shl
fidivr
or
adc
in
mov
dec
pop
jge
pop
dec
xchg
add
popf
(bad)
inc
je
ins
cmc
(bad)
cwde
and
xchg
jo
mov
sub
xchg
retf
jmp
data16
pop
pop
or
rcr
mov
imul
xor
popf
loopne
test
sub
mov
push
jmp
or
jne
add
mov
not
scas
cli
jne
lea
pop
inc
cmps
inc
xor
call
lock
xchg
push
and
push
call
rol
ins
stos
mov
lahf
jbe
addr16
addr16
je
jae
inc
lods
jg
mov
out
fwait
sub
or
fwait
add
mov
mov
add
inc
ins
fcomp
add
adc
push
lahf
jp
sbb
or
dec
pop
and
xchg
pop
xchg
xchg
popa
sbb
pop
pop
push
scas
cmp
and
(bad)
push
(bad)
stos
(bad)
movs
popf
adc
add
pushf
mov
push
sbb
test
mov
test
sub
in
jecxz
adc
pop
sbb
stos
sbb
in
loop
adc
cmc
mov
jnp
aad
outs
rcr
mov
mov
mov
xor
push
repnz
mov
adc
(bad)
cmc
pop
test
mov
and
sbb
jl
xor
xchg
shl
or
aas
jnp
mov
sti
enter
push
jnp
inc
retf
xor
xchg
sub
inc
dec
push
mov
jecxz
fistp
inc
inc
es
xor
push
mov
lahf
mov
repz
dec
hlt
push
or
and
xor
xchg
test
or
mov
xor
int3
jmp
cmp
hlt
shr
push
test
retf
loop
shr
or
pop
int3
dec
mov
or
jge
mov
(bad)
repz
ret
out
call
dec
inc
lock
xchg
mov
outs
sbb
mov
aas
das
jo
es
or
inc
push
dec
jge
sub
adc
or
and
nop
sub
sahf
dec
fwait
ror
mov
(bad)
sub
dec
adc
mov
outs
ins
xchg
mov
cmp
dec
retf
in
call
mov
xchg
(bad)
xchg
inc
push
pop
leave
push
(bad)
jns
int3
sbb
fsub
push
fisttp
pusha
jno
push
jmp
in
and
movs
mov
sar
fidivr
and
cwde
es
dec
fwait
push
cwde
nop
and
dec
jmp
cmp
xor
(bad)
or
enter
or
cmp
add
cmc
mov
fs
dec
push
adc
xchg
or
aas
bnd
aaa
(bad)
je
(bad)
bound
rcl
push
sti
dec
and
mov
or
hlt
ss
scas
popf
dec
daa
fild
push
(bad)
das
xchg
ins
repnz
fbstp
xchg
mov
aad
test
push
push
lock
lds
jae
inc
xor
retf
ja
xchg
push
dec
xor
jo
cmp
mov
sub
jp
mov
mov
fadd
(bad)
sbb
dec
call
stos
data16
ins
inc
cmp
jbe
out
dec
sbb
pop
jp
cmps
adc
sbb
outs
xchg
ins
rol
sbb
sub
lahf
daa
mov
imul
inc
nop
jno
fimul
sub
repnz
in
xchg
popf
cmp
sub
out
dec
lock
inc
mov
stos
mov
sbb
jnp
or
inc
push
cwde
pop
cmc
retf
sub
xor
mov
in
stos
mov
inc
mov
push
sti
jmp
or
out
nop
lods
sub
push
dec
push
ins
jns
add
lods
or
xor
sbb
rol
pop
sahf
idiv
aam
retf
imul
stos
sub
xor
inc
mov
cmc
pushf
pop
push
aad
sbb
and
jmp
nop
sbb
es
and
cmp
fdivp
dec
dec
pop
ss
ins
pushf
ror
xchg
and
mov
retf
mov
int3
and
mov
mov
jge
mov
and
(bad)
neg
push
sbb
out
(bad)
jno
adc
cmp
dec
cmp
lds
sub
inc
dec
outs
xor
xor
push
mov
shr
mov
jne
adc
mov
or
jmp
sub
push
or
sti
xchg
lods
add
adc
ja
leave
adc
test
mov
sub
dec
out
imul
pop
je
xlat
out
xchg
and
in
les
fadd
mov
cmc
pop
dec
ins
call
and
add
sti
pop
out
(bad)
jmp
aas
into
mov
test
mov
mov
xor
ins
xor
fld
(bad)
jmp
in
jno
outs
(bad)
sub
mov
ret
sti
imul
js
out
dec
add
mov
retf
dec
pop
mov
cmc
fld
dec
mov
idiv
mov
sub
test
adc
mov
dec
pop
pop
push
fcmovne
xchg
pushf
sbb
push
sub
cmp
adc
xor
frstor
imul
jmp
adc
mov
lahf
push
ss
(bad)
neg
pop
fnsave
arpl
mov
shr
dec
lds
call
sub
ret
dec
xor
outs
fcmovu
xchg
mov
push
shr
dec
dec
mov
push
lea
lods
cdq
sbb
cmps
adc
xchg
test
sub
jae
or
xchg
mov
js
jns
cmp
xchg
or
sbb
and
xchg
mov
or
arpl
jl
pop
sub
xor
test
adc
cmp
dec
data16
call
sbb
cmp
sub
aas
leave
push
pop
repnz
js
sub
jmp
jmp
pusha
mov
dec
adc
jg
cmc
cld
add
dec
pop
cli
pop
lds
or
inc
(bad)
cmp
(bad)
pop
ficom
std
lock
push
into
or
add
dec
pop
jp
jbe
pop
lods
sub
test
pop
ds
jle
imul
push
xchg
pop
(bad)
cld
inc
pop
imul
and
fisttp
inc
ins
add
pop
(bad)
ret
sub
mov
and
es
jle
leave
xchg
ror
das
arpl
xchg
and
cld
iret
mov
add
push
or
cmp
cmc
xor
cmps
mov
popa
enter
popa
imul
sahf
mov
mov
mov
cmp
(bad)
jl
lds
sbb
ret
inc
or
xchg
stc
scas
pop
iret
call
rol
mov
mov
mov
jge
out
mov
sbb
push
add
mov
loope
rcpps
mov
sbb
mov
xchg
icebp
jo
icebp
pop
enter
dec
mov
jb
or
into
push
in
cmps
rcr
inc
mov
jl
cmp
xchg
push
adc
push
xchg
daa
xor
leave
scas
or
shr
mov
cmc
shr
xchg
leave
in
inc
xchg
xchg
sbb
push
mov
arpl
push
mov
(bad)
jbe
pop
sub
pop
dec
pop
jmp
cli
mov
cmps
sub
nop
mov
enter
xor
(bad)
dec
or
mov
push
cld
in
sub
fsubr
jo
add
(bad)
lock
mov
pop
or
cmp
fcmovnu
lea
xor
mov
ds
or
(bad)
loop
push
or
out
mov
lock
add
xchg
pop
cmp
(bad)
call
popf
jl
addr16
test
addr16
in
push
out
xchg
mov
call
fisttp
icebp
push
push
mov
lods
jbe
mov
outs
shl
(bad)
aas
adc
iret
repnz
mov
pop
jecxz
out
cmp
add
nop
dec
ins
ret
push
test
outs
(bad)
xchg
(bad)
xlat
cmc
cwde
movs
test
sbb
popa
push
jge
add
repz
fadd
ja
xor
sub
push
test
cmp
fdiv
and
ins
jl
mov
mov
dec
test
ret
mov
lods
inc
pop
push
test
mov
mov
cdq
cmp
sbb
pop
jb
jo
ins
mov
(bad)
fwait
lods
xor
in
shr
mov
mov
out
ins
stos
jne
and
movs
repz
outs
inc
test
call
jnp
jle
mov
ins
mov
fxch
mov
ds
adc
enter
push
jb
rol
sub
repz
retf
push
(bad)
xor
adc
adc
jns
jge
xor
into
sbb
push
outs
push
outs
aaa
inc
mov
in
ins
retf
inc
push
pop
add
jle
xchg
in
inc
ds
jbe
cli
in
xlat
mov
js
or
pop
push
shl
out
push
jns
xor
cmps
cmps
test
push
outs
outs
push
and
mov
dec
xor
cli
push
test
jno
out
adc
mov
add
lock
xor
dec
cmc
cmp
mov
inc
(bad)
cwde
or
mov
xchg
mov
add
xchg
push
dec
cld
aas
pusha
int3
stos
repnz
mov
dec
inc
dec
inc
cmp
daa
mov
sub
xor
(bad)
loopne
adc
jmp
pop
adc
sahf
mov
ins
mov
sbb
mov
popa
mov
aas
mov
jg
cdq
mov
or
xor
jl
cli
cld
jmp
les
mul
das
icebp
cmp
add
lds
mov
xchg
or
mov
fimul
sar
mov
mov
add
fmul
mov
test
sub
fcomip
inc
cmps
iret
ins
xor
gs
cmp
xor
in
mov
loopne
cli
(bad)
shl
retf
sub
movs
pop
retf
test
sub
push
cmps
xchg
(bad)
xor
scas
cdq
mov
adc
int
sub
or
push
add
test
sub
mov
in
push
xchg
mov
fsubr
into
adc
add
jns
sbb
xchg
xor
push
mov
loop
inc
cmp
popa
aad
mov
(bad)
fstp
add
add
xchg
mov
sub
pop
nop
mov
push
int
lods
jecxz
out
aad
sub
jge
icebp
add
movs
jmp
fisttp
jmp
sar
fisttp
retf
or
in
repz
ins
or
mov
add
cld
loop
ffreep
jae
mov
test
das
push
jecxz
xor
lods
push
stos
xchg
fidivr
jle
mov
mov
jne
cmp
push
jbe
lahf
arpl
mov
xchg
repnz
or
cwde
sar
iret
ret
cmps
jg
and
outs
mov
sti
mov
ss
stos
jp
out
adc
cmp
xor
int3
cmp
dec
mov
fld
(bad)
push
jo
imul
out
repnz
leave
jle
inc
adc
inc
sub
mov
stos
mov
gs
cs
inc
mov
bound
(bad)
jecxz
lea
lods
push
adc
sbb
daa
adc
dec
jbe
test
(bad)
sub
dec
mov
fcomp
dec
adc
xor
call
sub
or
push
or
mov
aad
in
jmp
lods
xchg
sahf
inc
test
jne
jp
mov
pusha
sub
xchg
in
js
stos
adc
test
stc
pop
ins
pop
lods
cmc
leave
sbb
pushf
scas
in
cmp
xor
dec
xlat
scas
dec
fild
sbb
imul
scas
out
inc
jmp
mov
lock
pop
daa
js
addr16
xor
push
into
call
scas
mov
inc
(bad)
clc
lahf
dec
mov
loop
sub
sbb
dec
mov
mov
xor
call
mov
iret
les
fld
mov
inc
icebp
adc
sub
daa
push
movs
or
xchg
adc
out
xchg
mov
imul
push
jae
mov
(bad)
cmp
stc
sahf
fstp
xchg
sbb
or
loop
movs
leave
or
push
sti
out
push
inc
dec
push
and
call
add
test
xor
cmps
or
fsubr
sbb
push
xchg
dec
push
and
outs
in
adc
sbb
sbb
xlat
adc
shr
cmp
and
xchg
ins
xor
inc
add
and
mov
test
mov
nop
and
(bad)
addr16
in
add
pusha
cwde
jmp
and
fdivrp
cdq
ror
sub
adc
das
test
sub
jmp
inc
xchg
enter
jecxz
enter
xor
pop
dec
sti
das
mov
xor
push
mov
pop
mov
mov
add
pop
jle
out
dec
mov
loope
or
pop
pop
fnstsw
or
sub
adc
ror
pushf
xchg
or
sbb
push
stos
ficom
jo
test
lods
jno
out
jo
pop
popf
xchg
push
adc
repz
inc
sub
fimul
hlt
jne
sub
push
xor
fstp
das
inc
gs
pop
fild
ja
std
add
fbld
and
xor
mov
gs
adc
repz
fild
sbb
mov
xor
jge
loopne
lea
ins
in
push
pop
enter
mov
xor
lock
neg
fs
nop
cmps
loopne
lds
stos
push
mov
mov
add
xchg
int
add
mov
xchg
loopne
and
adc
in
or
fcom
hlt
pop
mov
fbstp
packsswb
(bad)
cmp
retf
pop
leave
mov
xor
inc
bound
jb
and
mov
and
test
add
popf
pop
hlt
arpl
mov
jp
in
lock
lock
in
jae
xor
ss
les
(bad)
aam
dec
xchg
inc
cmps
mov
fsub
and
pushf
mov
imul
test
inc
mov
clc
jne
jle
fwait
mov
inc
je
adc
pusha
pop
imul
test
ret
sub
xchg
dec
jmp
(bad)
outs
xor
in
inc
push
(bad)
add
mov
or
jne
and
inc
(bad)
mov
stos
fdiv
int
mov
std
fnstcw
(bad)
rol
out
lds
out
jno
push
jbe
xor
adc
dec
cwde
xchg
shr
je
adc
adc
aaa
xor
shl
jo
push
lahf
ss
in
pusha
and
aam
jg
cmps
pop
gs
push
pusha
inc
jle
mov
lods
adc
sahf
cdq
xchg
and
ffree
(bad)
popa
lock
jl
lock
jmp
cld
icebp
repnz
cdq
das
mov
data16
sbb
add
mov
jbe
leave
popa
imul
aam
xor
fimul
adc
loop
and
loope
fcomp
jge
bnd
out
xchg
shl
outs
ja
fiadd
pop
jno
cmp
fcomp
gs
(bad)
fnsave
mov
push
js
aas
xor
pop
xchg
xor
adc
jb
bound
movs
jne
fisubr
imul
js
shl
or
cld
push
retf
xor
fstp
outs
push
addr16
add
cmp
shl
aam
test
stos
inc
fsub
mov
sar
jae
xor
jbe
lods
leave
mov
sub
enter
in
add
lea
icebp
mov
push
pop
es
in
ffree
aad
dec
pop
scas
fisub
outs
rol
xor
xchg
mov
ret
pop
add
or
outs
enter
adc
cmp
cmp
mov
and
push
push
adc
ins
jmp
nop
and
push
sbb
sti
pop
mov
sti
sbb
in
call
aas
popa
mov
ret
push
mov
cdq
ret
aad
cld
outs
add
inc
jmp
and
ret
hlt
or
ins
inc
push
xor
push
imul
cli
push
pushf
pop
enter
cmps
and
ins
popa
dec
(bad)
pop
add
mov
ja
xchg
add
mov
(bad)
repz
or
jnp
idiv
or
push
and
xor
mov
dec
adc
pushf
push
lea
or
test
lahf
popa
loopne
xchg
mov
cld
mov
xor
or
sbb
gs
cld
imul
mov
add
or
dec
xor
pop
and
and
push
pusha
sbb
add
stos
jg
retf
repz
loop
movs
pop
dec
dec
inc
mov
add
adc
pop
or
push
cwde
lahf
bound
les
dec
out
jne
stos
xor
inc
xchg
scas
sub
js
adc
(bad)
cmp
shr
fwait
(bad)
pop
scas
pushf
or
dec
sbb
das
rcl
xor
push
js
mov
xchg
shl
cmp
js
mov
xchg
push
(bad)
fidiv
dec
jg
sub
clc
mov
into
test
addr16
inc
stc
mov
dec
loopne
cmp
jns
out
xchg
loope
xchg
ss
jle
imul
cmp
inc
mov
pusha
popf
xchg
(bad)
pop
inc
and
jge
xchg
inc
pop
and
std
or
ja
mov
mov
(bad)
cmp
mov
push
xchg
dec
loope
fld
std
inc
shr
jl
xor
sahf
mov
outs
data16
mov
cwde
sar
xchg
xor
hlt
or
shr
xchg
out
ja
mov
pop
adc
lea
lods
out
outs
lar
sbb
gs
mov
or
pop
ja
cmp
sti
cmp
int
jge
shl
pop
call
ret
dec
cmp
int3
movs
popa
jle
lahf
icebp
hlt
sbb
iret
imul
dec
jmp
push
aaa
add
ss
sub
or
je
mov
sub
adc
repz
jnp
and
jbe
sbb
push
jmp
icebp
jae
ret
or
sbb
shl
adc
xor
or
xor
cli
mov
adc
popf
(bad)
int
movs
(bad)
icebp
test
dec
aas
cmp
cwde
loope
mov
pop
out
ficomp
push
jae
fisubr
adc
cli
fwait
mov
das
push
adc
fdivr
adc
sbb
dec
xchg
xchg
pop
and
push
push
out
xchg
imul
push
and
mov
xchg
jp
cmp
mov
repz
push
mov
sahf
cmp
mov
test
adc
shl
xchg
int
xchg
repz
mov
nop
mov
adc
icebp
arpl
es
aas
stos
push
repz
lock
pop
js
nop
push
jecxz
xor
fstp
xor
dec
out
add
aaa
lods
jb
xor
sub
fiadd
sub
inc
xor
dec
in
mov
into
out
rol
xchg
icebp
loope
lods
or
or
or
sti
ds
loop
sub
je
fdivr
nop
ins
in
push
clc
iret
push
dec
in
push
or
lods
push
push
mov
int
dec
mov
imul
repnz
enter
jg
sbb
cmp
xchg
add
xchg
sub
ds
fidiv
jmp
adc
sbb
mov
dec
dec
imul
xor
ins
and
sar
cmp
sti
jne
sub
push
cli
jo
mov
cmp
pop
jmp
push
ficom
dec
jecxz
mov
xlat
push
mov
ja
xchg
scas
mov
jb
dec
xchg
xchg
dec
aam
ror
mov
inc
and
stos
push
xlat
pop
fidiv
fmul
xchg
std
or
mov
sbb
frstor
mov
mov
pop
dec
mov
out
call
xor
push
(bad)
cwde
popf
xchg
sbb
pop
dec
push
sbb
call
daa
clc
add
inc
adc
mov
mov
imul
sbb
push
stos
add
mov
sub
mov
dec
mov
push
fidivr
scas
test
and
cwde
dec
mov
xor
mov
mov
cmps
pop
icebp
and
inc
push
or
mov
mov
push
sbb
aaa
jg
cdq
xchg
cld
fist
imul
jnp
jmp
and
nop
popf
and
aas
sbb
or
femms
dec
xchg
push
sub
sub
pop
aaa
repnz
cmp
inc
not
sbb
mov
das
test
repz
jle
adc
test
mov
or
and
es
pop
retf
dec
outs
xchg
or
(bad)
lahf
adc
out
jge
pop
push
cmps
ror
stos
imul
push
mov
addr16
mov
data16
jmp
inc
jl
xchg
sub
mov
jl
xchg
mov
pop
clc
sbb
dec
repz
pop
mov
in
and
adc
push
dec
mov
fild
mov
pushf
loop
mov
cli
inc
rcl
jl
add
inc
jae
jnp
loop
pop
and
fnsave
mov
or
sbb
cmps
fimul
int
or
shl
mov
leave
rol
js
inc
xor
test
pop
sub
bound
pop
sub
mov
repz
pop
popf
xchg
ret
stc
and
call
or
(bad)
(bad)
sub
sub
pushf
mov
icebp
mov
in
push
jb
push
pushf
test
mov
mov
push
fbld
cmpxchg
lods
stos
cmps
ret
mov
sbb
inc
mov
adc
fwait
xor
fwait
out
mov
rol
inc
retf
mov
xchg
pusha
ds
mov
push
mov
mov
sub
int
fwait
cmps
sub
adc
pusha
retf
sbb
les
movs
push
xchg
dec
sbb
mov
fild
mov
pop
mov
mov
ins
aas
mov
jecxz
or
adc
add
cmp
mov
fidiv
lea
xor
add
cld
mov
pop
push
retf
pop
in
dec
jo
loope
adc
dec
fstp
or
jg
stc
hlt
in
out
into
mov
xchg
aad
adc
push
movs
lods
pushfw
fild
jno
cmp
int3
sbb
inc
aas
dec
push
test
xlat
adc
jle
scas
cmp
cs
arpl
push
rcl
(bad)
std
push
mov
sbb
sbb
into
std
push
hlt
imul
sub
cmp
ret
pop
and
or
shl
and
(bad)
cmp
ins
push
int3
dec
mov
stos
into
and
fsubrp
jmp
(bad)
mov
fs
imul
jbe
mov
pop
add
mov
sbb
jmp
fild
sub
push
dec
ds
xchg
ja
jmp
and
mov
push
xchg
lods
hlt
movs
movs
jb
add
stos
dec
imul
jmp
pop
leave
jle
add
sbb
imul
or
mov
inc
cmp
aad
jne
popa
pushf
inc
add
repnz
sbb
xor
in
adc
cmp
imul
adc
sbb
loop
inc
rcr
movs
xor
jno
xlat
push
fdivr
sar
inc
stos
dec
les
lahf
pop
push
jmp
inc
push
ss
nop
sbb
(bad)
leave
push
xor
push
dec
xchg
test
mov
xlat
(bad)
pusha
xor
push
or
lods
stos
call
ins
dec
(bad)
stc
lahf
call
push
sub
test
sub
out
or
push
pop
test
and
icebp
mov
mov
daa
(bad)
cli
cmp
ja
fld
xor
stos
pop
push
aaa
jl
addr16
shl
xor
retf
enter
in
cmp
mov
pop
mov
fcmovne
mov
pop
jnp
xor
div
popf
push
jl
push
sub
ror
lds
mov
aam
pop
js
and
mov
dec
(bad)
ffree
lahf
ins
dec
or
inc
mov
ret
out
inc
scas
shl
mov
mov
sbb
or
push
loop
lahf
ror
xchg
or
inc
mov
aad
daa
xor
push
jbe
mov
lods
inc
mov
div
xor
inc
jp
push
repz
cld
push
or
inc
rcl
movs
ds
clc
sar
aam
scas
movs
add
mov
inc
jle
dec
std
je
out
push
int3
jns
adc
loopne
jbe
jbe
std
push
xchg
sub
inc
add
mov
mov
xchg
arpl
or
test
adc
pop
jle
dec
sub
mov
mov
mov
and
fild
push
in
jne
aad
je
mov
jnp
lock
iret
or
div
pop
xor
dec
loopne
jmp
(bad)
and
bnd
addr16
xor
popa
jle
inc
or
lods
adc
ss
jns
adc
out
mov
stos
add
pop
mov
xchg
and
scas
cmp
push
xchg
stos
invd
sbb
cmps
sub
rol
mov
stos
and
xchg
mov
add
mov
mul
or
xor
mov
imul
cld
mov
cld
jo
std
gs
inc
xor
mov
rcl
dec
lds
pop
inc
mov
stos
sbb
add
push
pop
movs
movs
jae
dec
sbb
xor
ret
call
pop
test
pop
icebp
cmp
(bad)
xor
pop
sbb
adc
adc
push
fistp
sbb
shr
(bad)
push
out
adc
aaa
pop
xchg
pop
pop
and
jnp
test
fs
add
mov
test
jae
xlat
int3
iret
rcl
mov
scas
shl
popa
add
neg
adc
add
sub
or
push
adc
mov
mov
stc
ins
xchg
mov
mov
push
jmp
lods
jmp
jns
mov
outs
add
adc
stc
pop
aad
xchg
test
aad
pop
scas
out
push
push
inc
fmul
scas
jo
add
jmp
aaa
adc
das
popa
repnz
test
test
cmp
cmp
dec
aas
cli
aad
out
mov
pop
inc
jle
mov
lods
aas
inc
xor
and
ss
sbb
push
mov
xchg
js
pop
les
pushf
in
push
(bad)
repz
push
mov
imul
in
pushf
push
mov
sbb
in
add
retf
sub
ss
adc
pop
dec
pop
test
push
clc
cmps
mov
call
push
dec
xor
hlt
nop
push
and
ret
lock
imul
iret
loope
mov
jne
jo
jp
pushf
outs
and
stc
pop
fidiv
dec
jo
pop
push
enter
stos
aaa
sbb
icebp
mov
mov
in
and
mov
jno
fst
adc
pop
out
and
in
mov
xchg
push
mov
inc
icebp
push
lods
push
sbb
lds
push
pusha
pop
fdivr
pop
push
push
neg
cdq
fsubr
lods
and
inc
lea
cmc
pcmpeqw
push
sub
(bad)
mov
mov
div
sub
shr
add
pop
adc
dec
adc
repz
inc
or
xor
pop
shr
xor
push
fld
test
jnp
mov
or
xchg
pop
adc
(bad)
frstpm(287
(bad)
(bad)
ins
and
stos
xchg
test
enter
cld
push
cdq
out
mov
fnstsw
daa
ja
inc
mov
pop
aam
inc
ror
push
pop
sbb
jbe
or
sbb
push
hlt
les
dec
inc
push
pop
jge
iret
inc
std
mov
sub
fsubr
outs
cmp
stos
outs
ret
xchg
call
xchg
mov
into
test
mov
(bad)
ror
retf
adc
dec
mov
or
scas
retf
sub
stos
jmp
ins
pop
xchg
cmc
or
sub
xchg
mov
inc
xchg
dec
or
cmp
lods
pop
stc
js
outs
xchg
or
cmc
mov
arpl
enter
mov
push
cmps
loope
cmp
xchg
jecxz
stos
out
push
and
push
bound
dec
movlhps
cs
cmp
nop
xor
jmp
les
pop
or
pop
les
add
jae
mov
in
xor
sub
cli
xor
les
adc
sub
or
mov
(bad)
(bad)
aam
repz
mov
cmc
retf
jno
and
dec
leave
stos
pop
push
add
(bad)
cmp
das
dec
mov
mov
jnp
scas
cmp
and
adc
mov
mov
shr
cmp
int
mov
pop
fwait
out
push
or
xor
in
push
jp
dec
bound
ins
mov
inc
cmp
sbb
inc
jae
shr
(bad)
cwde
dec
dec
sahf
dec
sbb
jecxz
mov
popf
(bad)
pop
xchg
mov
lods
adc
xor
lods
stos
mov
mov
movs
das
arpl
push
cs
sti
in
pop
fstp
popa
nop
loopne
std
push
and
jbe
or
inc
sub
ins
push
mov
push
mov
cmp
retf
mov
add
call
add
mov
sub
jne
xchg
inc
xchg
loope
(bad)
or
xchg
adc
daa
pop
test
daa
mov
lds
nop
stos
xchg
ror
or
and
imul
inc
mov
test
add
rcr
ffree
cs
cs
call
clc
stc
jnp
or
inc
xor
clc
fistp
mov
push
shr
mov
mov
mov
imul
rcl
pop
push
cdq
div
addr16
stos
xchg
aad
cmps
sub
push
push
push
sub
aad
aaa
jp
out
das
lods
lock
or
(bad)
in
mul
add
lea
les
test
call
lahf
pop
cmp
xchg
repnz
test
frstpm(287
pop
(bad)
mov
outs
sub
test
sbb
pop
inc
sti
cmp
sub
ss
mov
test
adc
mov
out
push
and
loopne
dec
sti
frstor
push
xlat
adc
cmp
sbb
push
adc
dec
jl
and
jp
dec
mov
jne
cs
inc
(bad)
adc
daa
xchg
(bad)
jns
xor
inc
xchg
or
popa
(bad)
dec
out
inc
out
test
adc
cmc
jne
cli
adc
jmp
push
call
scas
sbb
(bad)
in
inc
pop
ins
jmp
mov
or
push
fcmovnu
popa
sub
sbb
inc
push
ret
sahf
and
add
pop
test
mov
push
(bad)
jp
cdq
fucomp
lea
std
mov
setp
jae
imul
fild
pop
inc
stos
xchg
imul
mov
cmp
imul
jl
cdq
cmp
mov
clc
jo
jmp
in
int3
inc
dec
jbe
or
and
retf
popa
xor
bound
push
push
inc
sub
mov
pop
aad
lock
xor
and
dec
in
fdiv
pop
add
cld
movs
or
and
jnp
add
out
pop
mov
daa
push
leave
push
out
(bad)
push
repz
es
cmc
mov
out
mov
std
(bad)
push
movs
call
xchg
jnp
icebp
jns
xchg
jmp
call
jae
mov
sub
push
pop
xchg
jbe
pop
cmp
jns
fstp
les
int
rol
mov
and
cdq
xchg
(bad)
stc
sti
(bad)
mov
cld
and
xchg
mov
lods
(bad)
dec
jl
dec
jecxz
icebp
pop
lock
out
loop
retf
stos
jmp
pop
or
stos
xchg
or
repz
ror
inc
cmp
sbb
pop
xchg
pop
xchg
mov
sbb
fwait
stc
shl
bound
mov
mov
or
ss
std
nop
mov
rcr
pop
sub
sub
xor
mov
shl
cs
dec
test
jmp
test
cmp
pop
pop
jle
pop
jle
dec
inc
jne
aas
mov
push
outs
or
cld
dec
jmp
dec
cmps
inc
sub
push
mov
xchg
mov
sub
mov
mov
mov
div
push
sbb
jecxz
cmp
call
cmp
inc
cmps
sub
cmp
push
pop
test
mov
int3
inc
dec
pop
outs
shr
jne
cwde
inc
xor
add
stc
mov
push
sbb
imul
movs
mov
popf
push
sbb
enter
dec
lahf
lahf
inc
stc
mov
sti
lods
js
pop
inc
dec
mov
aas
and
sbb
test
mov
jns
loop
fwait
cwde
(bad)
cld
push
ud1
js
adc
lds
xchg
int
sahf
das
dec
pop
stos
(bad)
cmp
mov
mov
fadd
mov
inc
jge
jecxz
ds
sub
pop
rcr
popf
test
fsincos
pop
fld
int
ret
leave
push
add
dec
push
mov
mov
sbb
adc
and
shl
jb
sahf
inc
jne
(bad)
xchg
sub
add
leave
cmps
pop
(bad)
jb
push
movs
xchg
add
sub
mov
cmp
retf
shl
xor
inc
ins
mov
sbb
push
scas
cmp
and
add
push
xchg
dec
das
and
out
pusha
rol
aad
dec
adc
mov
aad
scas
and
and
jl
(bad)
inc
dec
out
cmp
xor
push
cmp
mov
test
mov
push
retf
ja
fadd
lea
and
xchg
enter
test
inc
jg
bound
push
or
pop
pop
popa
daa
pop
mov
inc
div
jae
jmp
jge
in
push
test
inc
mov
sub
pop
arpl
xchg
inc
push
push
mov
js
add
in
cmp
xor
xchg
and
mov
xor
pop
push
imul
arpl
cmp
into
test
jo
inc
push
stos
jl
push
test
sub
add
xchg
ror
push
mov
scas
sub
in
or
(bad)
idiv
inc
inc
fst
ss
imul
retf
mov
xchg
add
in
mov
cmp
push
mov
dec
ret
jecxz
adc
mov
mov
cs
add
dec
inc
mov
mov
out
mov
fdiv
addr16
mov
mov
lods
sub
pop
push
and
out
push
dec
jmp
sub
sub
sbb
nop
lods
js
(bad)
stc
cmp
and
test
mov
add
enter
call
jp
sbb
push
mov
xchg
jnp
sbb
or
jmp
into
inc
push
mov
mov
mov
(bad)
xor
sub
es
(bad)
fadd
xchg
mov
xchg
and
movs
pushf
cmps
aaa
jb
(bad)
cmp
cmps
sub
out
popf
mov
imul
movs
mov
and
xor
lds
cdq
pushf
cdq
cmp
cwde
mov
cs
movs
jg
test
or
inc
xchg
ins
std
inc
xchg
pop
cmp
xchg
pop
push
fxch
loop
inc
std
push
repz
sub
pop
adc
cmp
xchg
gs
jno
jl
not
neg
pop
in
mov
pop
in
cdq
mov
inc
push
mov
mov
sub
cmp
xchg
adc
nop
cs
jbe
adc
fstp
repnz
push
dec
inc
cvtpi2ps
push
add
sbb
nop
ror
enter
cmp
xor
sub
pop
and
fdiv
mov
fsub
(bad)
pop
mov
sbb
sub
jge
out
scas
fwait
cmp
sbb
xchg
in
in
in
popa
jp
popa
cmps
mov
mov
repnz
(bad)
jbe
mov
int3
in
(bad)
icebp
jae
mov
bound
adc
xchg
das
pop
out
and
pusha
jno
cmp
out
add
icebp
mov
cmp
add
jae
fprem
(bad)
sbb
mov
popf
fist
sub
adc
fiadd
and
aas
arpl
test
pop
cmps
cmps
aaa
sbb
push
mov
scas
pusha
xchg
in
pop
mov
pop
xchg
hlt
clc
shl
dec
daa
adc
stc
or
sbb
sub
lds
xor
pushf
dec
jp
pop
mov
fstp
test
jnp
iret
ja
or
icebp
or
imul
clc
mov
ret
sbb
clc
imul
(bad)
jbe
mov
mov
sub
ffree
ret
test
popf
inc
aam
icebp
add
mov
shl
ins
inc
jmp
arpl
xor
imul
mov
add
stc
sbb
mov
sub
push
mov
push
xchg
adc
xchg
pusha
xchg
push
fs
arpl
add
add
popa
xchg
pop
xchg
ins
lods
inc
xchg
xchg
pop
les
sbb
and
sar
fmul
clc
mov
mov
push
inc
mov
inc
(bad)
jo
mov
pop
pop
mov
jl
orps
push
cs
mov
stos
mov
jmp
pop
loope
cmp
retf
addr16
jae
mov
sbb
add
and
mov
scas
movs
gs
cmp
pop
push
adc
test
jg
pop
xchg
(bad)
push
pushf
push
(bad)
movups
ficom
lods
mov
imul
outs
fcomp
adc
mov
(bad)
adc
outs
dec
mov
scas
in
pop
mov
lock
cli
adc
lods
xor
inc
fcomip
lods
adc
mov
test
push
cmp
into
sub
pop
cmp
push
fild
and
js
pop
mov
dec
jnp
mov
mov
sbb
mov
mov
push
sar
mov
imul
cmp
xor
push
pop
xor
in
fs
out
mov
inc
mov
jp
lods
in
sbb
inc
shl
les
stc
adc
repz
std
daa
call
sub
int
clc
popf
or
repz
pushf
shl
ja
xchg
add
add
add
add
ror
push
or
pop
pop
into
sbb
lock
and
lods
imul
idiv
daa
jmp
cmp
ss
pusha
(bad)
cli
lock
mov
test
out
aas
inc
inc
jge
dec
mov
sahf
js
inc
cld
lods
pop
jo
(bad)
mov
pop
rcl
fld
mov
rol
fstp
mov
push
mov
pop
mov
pop
sub
dec
ins
jns
and
dec
push
inc
xchg
push
ins
xchg
test
dec
rcr
mov
outs
sub
call
clc
cmp
icebp
inc
jo
xchg
adc
neg
dec
xchg
hlt
lods
daa
xchg
ficom
lea
repnz
jmp
fcom
pop
sub
scas
(bad)
addr16
cmp
(bad)
into
mov
pop
mov
loope
adc
jns
in
popf
pop
cli
sub
shl
or
xchg
dec
sbb
adc
push
mov
test
repnz
(bad)
adc
push
cmps
xlat
pop
sti
sub
ror
(bad)
fs
(bad)
sbb
pop
mov
call
stos
push
xor
push
jle
clc
mov
test
js
cwde
mov
push
mov
inc
out
add
pop
jnp
xor
mov
in
lods
inc
adc
cmp
mov
std
and
push
and
sbb
inc
xor
xchg
jg
in
inc
push
arpl
daa
mov
add
shl
inc
sub
mov
push
loop
push
xor
mov
add
arpl
xchg
xchg
mov
xor
sub
and
fild
pop
mov
sbb
rcl
jmp
xor
xor
push
xchg
out
add
pop
or
add
hlt
cmp
(bad)
inc
xchg
leave
(bad)
push
out
mov
adc
pusha
iret
aas
sbb
ds
shl
dec
movs
sub
push
sub
imul
inc
inc
pop
push
cmp
scas
mov
daa
and
fnsave
in
scas
cli
push
popa
pushf
test
mov
sub
sar
aad
mov
mov
mov
dec
ret
pop
es
retf
sub
aad
out
xor
ds
or
(bad)
jg
mov
mul
(bad)
and
pusha
pop
adc
sahf
push
enter
inc
adc
shr
cmp
out
xor
or
mov
jnp
cmp
aaa
push
lods
popf
outs
mov
test
cmp
jne
nop
push
pop
mov
test
out
xchg
jecxz
fwait
add
out
push
ret
dec
sti
push
dec
adc
and
inc
loope
cmps
std
nop
test
dec
cmc
fwait
sub
loop
aad
mov
daa
shl
xchg
pop
jle
rcl
mov
and
call
ja
fisttp
xchg
sub
shl
iret
inc
add
mov
cmps
shr
(bad)
repz
sbb
pop
cmp
cmp
je
out
pop
sar
xchg
add
jg
xor
ins
jae
fldenv
inc
jg
out
mov
out
ins
xchg
cmp
loopne
repz
or
sbb
idiv
pop
xor
push
push
pusha
jbe
push
pop
jge
and
lahf
shl
and
sahf
mov
xor
mov
outs
repnz
movs
shl
fs
sub
test
adc
and
mov
or
mov
jle
ja
popa
loope
hlt
adc
ret
loopne
ret
fwait
xchg
sub
dec
mov
inc
mov
in
adc
daa
(bad)
fsub
cmc
xchg
fmul
inc
mov
adc
repz
mov
dec
pushf
mov
cmp
xchg
leave
inc
ja
or
xrelease
pusha
or
iret
ret
nop
sub
ret
and
cmp
fcomip
push
xchg
cld
push
popf
fist
fldenv
dec
test
push
loop
fsubr
pop
push
ret
xor
je
mov
push
mov
int3
xor
stc
jp
mov
ret
fsub
sub
mov
jae
out
movs
lock
fmul
cmps
push
mov
int3
sub
jns
dec
out
jp
popa
movs
or
jns
cdq
inc
pop
dec
xor
push
out
dec
xor
aad
jne
lea
adc
fmul
add
push
loopne
int3
loopne
lods
jns
add
pop
pop
jge
jge
(bad)
sbb
xlat
or
pop
sti
es
stc
pop
inc
jmp
xor
add
in
push
call
mov
clc
loope
imul
popf
jmp
mov
dec
retf
add
push
in
out
push
jle
dec
das
xchg
xor
jl
push
fldenv
xor
dec
xchg
(bad)
cdq
adc
int3
lods
into
ss
or
jp
push
or
int3
stos
inc
in
push
in
adc
repnz
add
mov
es
pop
dec
(bad)
dec
mov
mov
xchg
pop
and
cwde
shl
ret
mov
call
(bad)
popa
jge
loopne
inc
retf
call
and
push
js
pop
and
aaa
jb
es
aas
ja
in
(bad)
cli
pop
out
addr16
lods
dec
push
movs
icebp
xor
in
popf
je
mov
and
shr
and
scas
out
dec
push
inc
les
dec
inc
jecxz
push
xor
jnp
(bad)
mov
cli
inc
xchg
test
xor
push
je
dec
jmp
into
sahf
movs
(bad)
enter
or
push
sub
test
pop
cmp
retf
in
xor
and
mov
jne
lods
xor
mov
call
sbb
dec
pop
arpl
les
test
mov
adc
xchg
sbb
imul
out
and
inc
and
lahf
push
ror
push
mov
xor
mov
or
lahf
ror
or
xchg
cmp
push
sub
in
or
pop
and
cmp
or
out
fsub
pop
adc
addr16
adc
inc
jp
icebp
fbstp
je
cmps
cmp
xor
inc
add
sub
pop
sahf
xor
sub
popa
mov
adc
into
jl
pop
mov
mov
std
(bad)
pop
cmp
arpl
lods
jnp
jl
add
mov
in
push
out
add
cmp
ja
ret
pop
adc
pop
test
and
fld
pop
push
mov
scas
mov
jae
adc
inc
cmps
test
jl
jle
mov
test
pop
lea
jecxz
cmps
push
loope
sbb
in
push
adc
push
les
push
mov
not
jl
pop
shr
mov
push
jmp
jbe
mov
adc
sub
or
out
enter
mov
test
add
fincstp
and
fs
lds
add
aas
sbb
dec
adc
nop
lock
mov
xor
fadd
xchg
test
(bad)
cmps
mov
(bad)
out
pop
fcmovnb
adc
push
in
out
in
mov
jne
xor
pop
add
inc
mov
sbb
sbb
adc
int
sbb
repnz
cmp
sbb
popa
inc
gs
xchg
arpl
xchg
ret
pop
fstp
or
ins
stos
push
xchg
out
aad
xor
mov
arpl
mov
je
and
daa
sbb
lds
inc
aaa
popf
xlat
int3
mov
lods
xor
jmp
leave
add
sub
lahf
jo
add
or
sbb
pushf
das
mov
mov
push
mov
mov
mov
cli
xchg
mov
sbb
pop
jnp
push
hlt
std
dec
setb
shl
sbb
fcmovnb
sub
out
jp
push
lahf
fldl2e
(bad)
push
add
outs
sti
or
ret
cmp
mov
mov
xor
push
inc
or
clc
and
or
dec
fimul
jne
jecxz
cmps
movs
enter
add
stos
mov
jle
push
aam
ins
or
jbe
or
out
and
adc
push
cmp
pop
mov
fnstsw
mov
mov
test
movs
sbb
add
lds
push
lods
cld
in
in
sbb
icebp
cmps
mov
mov
jmp
arpl
xlat
adc
lods
mov
xchg
loop
mov
mov
cmp
rol
inc
xchg
cmc
xchg
sbb
lahf
int3
sub
stc
les
xchg
pop
rcr
neg
push
cmc
or
mov
mov
inc
sub
clc
cmp
and
scas
xchg
dec
popa
fcomi
inc
repz
pusha
jne
test
sub
idiv
or
push
data16
adc
pop
sbb
or
movs
sbb
arpl
not
pop
jns
std
and
call
xor
mov
cwde
sub
(bad)
cld
dec
xlat
xor
dec
inc
xchg
pop
cmps
cmc
std
xor
add
xor
adc
int3
and
pop
mov
in
mov
aad
loop
rol
sahf
or
push
mov
popa
mov
enter
mov
popf
push
push
test
inc
and
or
push
movs
jbe
scas
jne
sub
in
mov
inc
jl
jmp
mov
and
adc
retf
les
sbb
dec
inc
mov
iret
mov
out
mov
add
adc
into
dec
shl
fisttp
fst
pop
mov
dec
adc
or
mov
or
imul
push
push
dec
(bad)
mov
push
jmp
enter
(bad)
shl
cmp
xchg
pop
cmps
add
cmp
ss
mov
sbb
scas
xor
sbb
xor
adc
loope
dec
sbb
push
cmp
(bad)
xor
or
ficom
fadd
nop
scas
xchg
xadd
bnd
rcl
sbb
inc
jae
std
jbe
fld
(bad)
jg
movs
repz
xchg
add
out
xchg
jnp
cmp
xchg
shr
inc
repz
mov
jmp
adc
sar
mov
add
add
jno
add
mov
aas
dec
cmps
mov
je
or
pop
rcr
add
mov
xchg
mov
or
arpl
pusha
xchg
mov
xchg
cmp
sbb
push
fsubr
mov
loop
outs
or
add
(bad)
add
push
fst
dec
xor
jns
(bad)
cld
cmps
cmp
sbb
inc
test
cld
aas
in
adc
sahf
adc
adc
xchg
ss
dec
mov
imul
or
das
imul
jmp
add
stc
jbe
aad
mov
movs
mov
ss
dec
jmp
sti
jl
mov
cmps
sbb
push
lods
mov
inc
fdivr
mov
bswap
xor
gs
inc
les
inc
jge
pusha
xchg
cmp
mov
push
(bad)
fistp
(bad)
mov
out
test
pop
add
jp
mov
xor
mov
mov
pushf
sub
psubusb
test
out
mov
cmp
cmps
sti
cmps
pop
adc
cld
push
nop
or
push
push
or
mov
sar
out
neg
in
add
pop
dec
repz
in
div
adc
scas
sbb
retf
jl
sbb
in
sub
jle
lahf
jo
push
sub
(bad)
stc
js
lods
and
push
push
dec
mov
hlt
(bad)
dec
adc
mov
add
mov
leave
leave
mov
inc
adc
scas
mov
(bad)
sbb
adc
inc
push
scas
adc
xchg
ins
test
movs
sbb
jmp
adc
jo
daa
xor
jne
in
push
sbb
stos
xchg
xor
mov
xor
push
cld
rcr
(bad)
add
xchg
sbb
push
ret
imul
scas
adc
xchg
push
je
test
pop
mov
jle
adc
cmp
jle
mov
inc
dec
pop
popa
(bad)
mov
outs
dec
adc
(bad)
in
aaa
int
jl
dec
jmp
movs
push
(bad)
mov
leave
pop
outs
xor
sub
and
or
int
mov
js
addr16
push
cmc
clc
pop
sahf
push
or
std
int
or
sbb
retf
ja
jns
or
mov
xor
hlt
stc
mov
push
xlat
inc
fbstp
pusha
arpl
out
push
stc
pop
dec
popa
mov
cmp
rcl
pop
inc
addr16
call
pop
add
nop
in
bound
repz
mov
in
adc
or
mov
xchg
adc
and
push
int3
inc
loopne
test
push
cdq
xor
sub
loopne
mov
ja
shl
cwde
xor
push
add
or
sub
inc
test
jb
mov
jnp
gs
mov
mov
sbb
out
test
cs
mov
(bad)
push
pop
stc
jb
push
loopne
out
jg
cmps
out
xlat
pop
push
xor
sti
sbb
std
xchg
outs
pop
sub
in
inc
iret
xor
ficom
out
jne
cmp
(bad)
mov
std
sub
mov
pop
call
adc
dec
add
adc
push
inc
test
loopne
test
push
das
not
add
xor
imul
push
pop
cld
mov
loopne
cvttps2pi
and
inc
jae
in
loopne
add
loop
xchg
fiadd
(bad)
push
pop
and
ds
push
into
test
dec
cwde
rcl
cmp
loope
push
and
add
inc
pusha
pushf
jmp
jge
lods
push
inc
dec
adc
push
push
in
pop
and
jnp
lahf
(bad)
out
arpl
lods
or
sub
add
ret
cmp
mov
not
sar
or
hlt
push
push
imul
loope
xchg
push
push
jnp
fucom
push
or
icebp
add
or
xchg
xor
jge
(bad)
ins
jmp
sub
push
retf
mov
fnstcw
mov
adc
adc
xchg
jbe
jp
arpl
sub
mov
dec
neg
or
push
cmp
adc
jle
jno
fidiv
fnstenv
sbb
xchg
push
cmp
inc
ret
dec
sub
jbe
inc
fmul
xor
and
lea
add
jae
sub
mov
call
ja
int3
push
es
cmp
loopne
leave
dec
adc
das
scas
(bad)
loopne
int
xchg
retf
sar
sbb
aad
ss
jecxz
xchg
sbb
adc
push
(bad)
outs
ja
mov
popa
gs
lods
mov
pop
faddp
in
leave
aas
dec
push
pop
mov
aas
pop
inc
jmp
xchg
je
mov
inc
pop
jmp
push
sbb
adc
sahf
cli
in
mov
jns
ss
mov
cmps
xor
jmp
mov
cmp
xchg
pusha
dec
pop
loopne
mov
inc
inc
fisubr
(bad)
and
pop
mov
fdivp
icebp
mov
jmp
gs
and
daa
cmp
in
jg
add
pinsrw
sbb
fimul
cmp
pop
pop
sbb
sahf
bound
arpl
cmc
xor
in
push
jns
aad
add
adc
cmps
xchg
jnp
je
cmp
inc
stc
sub
mov
dec
and
ret
pop
mov
neg
cmps
pop
and
fsub
mov
clc
iret
mov
xor
or
fstp
mov
fnstcw
push
(bad)
sti
aam
test
inc
push
std
adc
add
sbb
nop
jnp
xchg
jbe
xchg
test
psubb
test
int
loop
fldenv
push
outs
repnz
dec
fldenv
dec
pushf
jne
jbe
or
das
pop
loopne
(bad)
xchg
jne
push
sub
fwait
shl
test
mov
out
call
fldcw
(bad)
push
dec
sub
stos
fwait
cmp
loopne
sub
sbb
sbb
pop
jg
jge
scas
fwait
and
in
mov
imul
jle
pop
mov
jno
adc
push
push
push
frstor
hlt
inc
push
sbb
push
aaa
mov
icebp
fimul
inc
jecxz
stc
enter
loopne
shl
add
aam
xor
inc
retf
stc
pop
aad
xor
mov
add
jae
jmp
jle
and
jle
and
inc
jo
xor
sbb
inc
imul
les
retf
jmp
ins
(bad)
sahf
les
xchg
push
and
inc
jno
(bad)
push
pop
int3
neg
retf
dec
jge
lds
mov
cmp
xchg
cmc
fwait
pop
fmul
in
mov
shl
mov
jp
push
mov
or
push
setae
add
ins
aam
pop
mov
jmp
mov
stc
push
(bad)
jb
cmps
sub
inc
retf
mov
xchg
dec
test
mov
stc
daa
mov
shr
pop
jmp
jo
jbe
outs
cmp
fxch
test
mov
sub
iret
loopne
cmp
dec
jecxz
test
cmp
ficomp
bound
out
out
add
stos
inc
(bad)
inc
or
and
test
mov
pop
jmp
fnstenv
cs
jns
(bad)
rcl
lods
imul
adc
cld
inc
pop
repnz
mov
mov
mov
lahf
ficomp
lock
jmp
inc
cmps
(bad)
dec
push
and
repnz
push
(bad)
push
clc
(bad)
jae
mov
retf
(bad)
cmps
movs
out
jg
adc
xor
retf
movs
jle
adc
sub
mov
adc
clc
inc
and
jle
add
xor
jno
std
popf
fdivr
data16
add
xchg
iret
popf
xor
iret
(bad)
push
ret
pop
cmp
xor
test
jae
xchg
xor
xor
inc
sub
cmp
push
mov
cmp
mov
and
fild
add
or
xchg
sbb
mov
cwde
pop
jmp
push
fs
cmp
sar
stos
ret
ret
daa
out
push
pop
add
adc
in
sub
push
inc
fstp
imul
push
(bad)
repz
outs
xor
jnp
sbb
out
jmp
jg
dec
jno
sub
cmc
div
bnd
inc
push
jmp
push
daa
out
fild
jle
mov
mov
adc
dec
out
adc
movs
sbb
mov
sbb
sub
dec
mov
or
les
and
cmc
sbb
mov
ja
push
mov
cmps
in
push
sbb
jae
test
mov
mov
push
les
or
xor
cmps
add
in
and
inc
rcr
repnz
test
xor
jle
cwde
repz
xor
mov
cmp
ja
or
mov
in
xchg
lods
inc
adc
stc
sbb
in
movs
call
mov
fs
dec
add
cmps
xor
sahf
std
adc
adc
aaa
leave
pusha
cld
cmp
sub
add
sub
jg
jmp
stos
push
fs
cmp
not
je
lods
in
pop
in
scas
scas
in
imul
pop
std
loope
fs
add
sbb
out
repnz
pop
sbb
loope
lods
enter
js
dec
mov
jno
cmps
ins
mov
xchg
sahf
dec
cs
mov
push
cs
jl
jns
punpckhbw
pop
sub
cdq
ret
xchg
ret
push
(bad)
popf
xchg
cmp
cmps
in
popa
inc
rcr
enter
pop
dec
rol
ftst
jecxz
aaa
shl
retf
aaa
sbb
stos
in
fimul
inc
(bad)
cli
das
add
inc
loopne
call
test
dec
cmp
cdq
out
pop
mov
and
popf
mov
add
fwait
test
lea
dec
sbb
push
push
mov
iret
sbb
add
cmp
outs
aad
ds
jno
push
jmp
es
add
ror
xor
sub
call
je
jbe
adc
push
jmp
adc
arpl
mov
clc
inc
fistp
inc
sti
cmp
pop
cmc
jb
mov
pop
nop
or
fisubr
call
pop
cmp
pop
push
mov
jmp
xchg
xchg
jns
mov
paddusw
jmp
fwait
adc
cmps
popf
sbb
test
jne
xchg
int
pop
cwd
frstor
adc
adc
sub
inc
cmp
xor
xchg
push
xchg
cs
repnz
pop
sbb
dec
sub
jmp
es
cmc
cdq
sbb
cmp
sbb
sbb
stc
es
outs
call
xchg
or
pop
shl
xchg
daa
icebp
jl
ins
add
scas
fdivr
out
jge
mov
and
xchg
cli
fs
popa
hlt
lock
push
imul
pop
sub
jo
adc
mov
fsub
je
ds
daa
sti
sub
cmp
push
popf
add
mov
jb
mov
out
lods
fcomp
jge
inc
jmp
repz
scas
shld
sub
sbb
or
inc
les
aas
jecxz
mov
mov
jl
repnz
jns
inc
xor
cmp
repz
or
inc
jl
xor
sbb
xor
push
inc
repz
dec
fidivr
pop
and
int
dec
pop
(bad)
sbb
mov
aaa
outs
xchg
es
call
aad
xor
xor
mov
adc
imul
cmp
dec
out
sub
ins
adc
and
sub
lea
hlt
lea
sbb
test
(bad)
jae
mov
mov
xchg
ds
add
inc
mov
shr
push
add
out
xor
out
daa
jle
gs
cli
jo
xchg
xor
mov
popf
inc
inc
sbb
push
and
sti
lahf
sahf
jb
cmp
add
push
lahf
sub
(bad)
pop
or
pop
std
inc
mov
sbb
or
outs
(bad)
in
ret
(bad)
sbb
aaa
ds
mov
mov
inc
ins
lock
rcr
inc
test
pop
test
data16
cmp
in
or
pop
xor
dec
push
cld
int
pop
dec
cmp
repz
xchg
je
dec
mov
adc
xchg
inc
push
mov
out
mov
and
out
js
(bad)
leave
ss
in
(bad)
and
cmc
jno
dec
dec
adc
call
es
scas
jo
or
dec
inc
loop
jae
pop
xchg
ins
xor
cmps
(bad)
loopne
mov
cld
mov
ret
imul
mov
(bad)
push
mov
push
fldenv
sub
jge
cmps
test
lahf
inc
movs
jle
dec
out
inc
sbb
(bad)
fdivr
jmp
outs
or
mov
and
mov
jb
mov
dec
jg
push
stos
popa
stos
push
xchg
inc
retf
cdq
mov
stos
dec
inc
mov
rol
lahf
icebp
add
lods
mov
mov
nop
lock
adc
pop
sub
mov
adc
and
hlt
mov
stos
int
dec
enter
dec
lods
lahf
loop
xor
dec
mov
fidivr
fwait
xchg
mov
add
lods
in
sbb
and
fs
sub
pop
ja
sbb
xchg
out
jp
out
cmps
adc
jp
adc
pop
push
leave
aad
sbb
fdivr
in
jp
imul
jno
fbstp
dec
outs
or
adc
jecxz
and
cmp
iret
jns
loope
mov
sti
sub
push
sub
cdq
xor
push
add
loopne
sbb
adc
mov
test
inc
out
sub
iret
pop
sbb
push
ficomp
lods
mov
fcom
mov
sbb
jns
fwait
lods
test
and
test
imul
outs
daa
mov
das
icebp
mov
and
sbb
loope
int
mov
xchg
inc
fsubp
(bad)
bound
(bad)
movs
cld
mov
test
out
aad
fmul
stos
pop
fsubrp
mov
lahf
call
mov
fistp
jne
aam
add
test
(bad)
enter
pushf
cld
test
jmp
imul
nop
(bad)
jl
mov
je
daa
xchg
icebp
loop
ror
sar
test
jecxz
adc
mov
push
sbb
lock
test
inc
adc
scas
jns
jmp
xchg
xor
lea
and
shl
mov
(bad)
(bad)
add
test
push
mov
or
imul
sahf
pushf
jecxz
pop
stc
push
cli
or
js
rcl
cmc
in
pusha
mul
ret
int3
pop
call
or
repnz
daa
inc
mov
hlt
fadd
std
jp
cli
inc
sar
dec
pop
fsin
jnp
sub
(bad)
jnp
ror
(bad)
sbb
idiv
std
(bad)
and
jmp
sahf
mov
shl
dec
ss
adc
nop
jns
mov
leave
add
inc
repz
loop
mov
pushf
popa
inc
xor
xchg
shr
ins
mul
push
sub
sub
adc
es
or
jnp
imul
je
jmp
stc
test
xchg
pop
pusha
sbb
xchg
lea
pop
cmp
fisttp
add
mov
and
mov
shl
daa
loope
shl
jl
pop
hlt
test
sbb
movs
js
scas
js
hlt
and
ins
fstp
jns
div
sub
xlat
ins
fmul
push
push
push
pop
fstp
mov
cwde
pop
call
test
mov
clc
jne
enter
sti
adc
enter
(bad)
and
outs
adc
rcr
call
push
sub
mov
out
imul
nop
pop
aaa
cdq
cmp
mov
sbb
and
jecxz
aas
cli
int3
sbb
mov
jl
sbb
xchg
adc
pop
xor
movs
rcr
repnz
jbe
cmps
(bad)
fldenv
lods
mov
hlt
mov
popa
jb
mov
adc
pop
cmc
mov
jl
xchg
dec
loop
jmp
adc
out
test
lds
inc
scas
xchg
(bad)
ret
pop
jmp
retf
dec
jg
daa
dec
or
and
jmp
push
sub
call
loop
xchg
adc
stc
sub
retf
xchg
repz
ror
mov
inc
fdivr
out
sub
cmp
dec
repz
sar
jae
fwait
jbe
xchg
or
repnz
lods
jecxz
sub
dec
test
xor
mov
popa
sub
ret
push
shl
(bad)
rep
or
repnz
add
jbe
sbb
mov
das
por
xchg
sahf
shl
imul
rcl
xchg
aam
push
dec
xchg
arpl
mov
fiadd
mov
adc
iret
cld
mov
mov
jnp
mov
jae
jge
sbb
fisubr
into
sti
add
xchg
pop
xchg
cmc
cdq
xor
push
enter
cmp
in
push
pop
dec
mov
mov
cmp
cmp
push
ss
aaa
cwde
xchg
int
clc
aam
mov
mov
push
xor
sub
inc
jmp
mov
jmp
loopne
push
lds
jmp
stos
(bad)
and
(bad)
into
ins
jne
jp
sbb
in
xor
das
push
xchg
sub
xlat
lds
add
or
mov
fnstcw
lahf
test
cmps
ins
mov
mov
loope
ja
xchg
xchg
mov
pop
ins
mov
jns
imul
or
stos
mov
pop
hlt
icebp
push
fadd
or
stos
mov
push
iret
push
adc
cmps
mov
rol
retf
shl
add
or
add
add
or
rcr
sbb
loope
stc
sbb
dec
loope
mov
adc
rcr
push
dec
popf
mov
fs
add
sub
call
std
mov
sar
enter
mov
std
icebp
mov
jmp
mov
adc
or
mov
fwait
out
dec
push
icebp
xor
js
inc
loop
dec
dec
xchg
lea
dec
sub
push
imul
xchg
and
xlat
push
test
inc
mov
adc
push
ja
jb
in
je
or
cli
repnz
push
jg
rcr
rcr
jnp
hlt
je
xchg
leave
retf
sbb
nop
sbb
mov
jle
repnz
gs
xchg
dec
inc
lods
cdq
call
adc
xor
sub
pop
rcr
push
mov
mov
popf
dec
cwde
and
iret
mov
xchg
daa
cli
dec
xor
or
sahf
dec
pop
dec
and
dec
inc
cli
test
mov
xchg
ret
sbb
jb
dec
cmp
popa
repz
pop
jg
std
inc
movs
and
call
adc
jmp
xor
rol
jl
sar
icebp
jbe
and
loop
test
int3
daa
repnz
xor
movs
jmp
out
or
les
ins
aad
ins
lods
ucomiss
jge
inc
sbb
or
mov
repz
jle
in
(bad)
push
sub
mov
outs
push
outs
jl
rol
mov
imul
mov
idiv
or
xor
push
sbb
pop
push
dec
lahf
int
cmps
pop
fdivrp
fcom
mov
push
adc
movs
mov
sti
retf
mov
outs
or
pop
xchg
inc
jbe
mov
xchg
aaa
dec
repnz
lds
int3
out
cmp
test
and
mov
mov
jnp
jg
repz
adc
dec
push
test
imul
bsr
cdq
jmp
mov
jge
and
mov
xor
push
cmp
jmp
call
test
or
inc
sub
adc
popf
data16
sub
xlat
(bad)
call
pop
push
xor
int
stos
cwde
arpl
fwait
lea
mov
jecxz
fsubr
iret
xor
clc
scas
push
fst
mov
mov
cdq
dec
bound
ja
jbe
xchg
dec
std
xor
push
ss
cmps
push
pusha
in
mov
push
sub
inc
call
fist
jmp
xchg
xor
sbb
cli
sahf
pop
jg
mov
xor
inc
test
pop
imul
and
pop
leave
push
ja
add
enter
(bad)
fdiv
ret
xor
aaa
ds
sub
gs
dec
hlt
inc
pop
(bad)
xlat
pop
inc
push
leave
pop
inc
push
aad
inc
pop
and
jmp
and
retf
in
neg
sub
std
sbb
pop
dec
(bad)
pushf
jno
lahf
push
add
inc
mov
pop
clc
add
jp
mov
ret
pop
xor
jmp
inc
and
xor
(bad)
loop
push
push
adc
scas
add
jg
ja
out
mov
test
ret
out
add
mov
mov
outs
mov
hlt
in
ins
int
je
rol
lahf
mov
ins
or
cdq
mov
lds
into
sub
imul
mov
sti
das
jns
sub
(bad)
cli
out
mov
(bad)
xchg
out
xor
(bad)
jns
dec
loopne
ficom
fdiv
push
clc
je
stos
mov
clc
add
and
sub
aas
dec
lock
cmc
lods
arpl
jo
inc
test
xchg
cvttps2pi
js
ss
(bad)
xor
lods
sbb
cli
mov
(bad)
(bad)
fcomp
and
add
xchg
xor
or
pop
push
and
add
or
inc
in
mov
cdq
enter
jae
lods
aam
cli
cmps
add
cmc
fcomp
bound
into
stos
sets
mov
iret
sbb
cmp
sar
mov
test
jmp
shr
ret
cmps
mov
call
mov
mov
in
inc
cwde
add
cdq
push
sbb
dec
jg
xchg
jp
sar
out
push
fdiv
test
movs
iret
mov
xchg
(bad)
push
repnz
cwde
ror
sti
jb
ins
pusha
cdq
mov
mov
retf
es
sbb
outs
sbb
and
scas
loope
out
ficom
add
or
ins
(bad)
(bad)
div
cmp
es
and
jno
stos
jo
mov
dec
pop
data16
cdq
mov
adc
sub
cmps
nop
push
(bad)
not
popa
pusha
clc
sahf
jge
jp
es
ffreep
test
jp
inc
les
or
or
(bad)
push
enter
repz
in
outs
shl
rcr
xchg
jmp
jp
xchg
mul
or
jge
xor
addr16
je
cld
loopne
mov
jecxz
xchg
push
out
gs
ins
cwde
outs
and
mov
stc
ret
scas
int3
inc
sub
xchg
add
jbe
cmps
mov
cmp
imul
ror
mov
xor
inc
xchg
pop
jle
mov
rcl
add
push
mov
push
inc
cmp
and
pop
pop
ds
rcr
pusha
push
das
enter
mov
imul
mul
jge
lahf
mov
mov
lahf
inc
xchg
out
out
hlt
pop
repz
mov
jmp
movs
inc
add
mov
lods
pusha
fwait
mov
js
pop
psrld
adc
and
inc
out
lock
mov
push
in
adc
cli
loopne
adc
jle
jmp
into
pop
ds
cdq
hlt
cmps
aas
mov
mov
retf
xor
(bad)
popa
jo
jg
mov
fs
dec
xor
test
mov
test
jne
rol
mov
clc
les
in
mov
hlt
leave
cs
push
sub
mov
adc
inc
mov
inc
pop
add
in
cmps
jne
xchg
mov
cmp
hlt
push
mov
cli
stos
mov
ror
(bad)
out
mov
mov
cmc
fisttp
repnz
or
push
mov
int
and
sar
ins
jbe
js
inc
mul
cmps
add
mov
push
jne
in
and
or
std
cmc
adc
or
retf
outs
out
mov
mov
in
cmp
scas
dec
pop
repz
test
jae
ret
jge
xor
xchg
jne
daa
fcom
inc
and
stos
cmp
cmp
sub
call
mov
retf
pop
stc
mov
pop
popa
(bad)
inc
push
xor
cmp
sbb
stc
out
int
out
add
mov
and
sbb
imul
es
pop
and
vcomiss
test
neg
(bad)
push
retf
ja
xor
arpl
js
sub
add
inc
jo
clc
jge
adc
inc
xor
inc
shl
push
push
gs
leave
xchg
mov
in
xchg
xlat
icebp
jge
retf
push
push
aas
ror
xchg
pop
test
add
clc
push
pop
inc
mov
xchg
sbb
push
mov
leave
pop
les
test
or
xor
repnz
sub
in
mov
push
aas
xchg
mov
popa
inc
retf
xlat
push
push
inc
int3
add
imul
mov
lds
popf
shl
fadd
in
and
push
rol
jbe
jbe
sbb
movs
mov
std
mul
xchg
xor
out
jo
adc
pop
aad
adc
or
aam
mov
mov
ja
xchg
test
pop
ss
mov
les
cmp
add
pop
stc
pop
rol
and
cwde
cs
push
mov
jmp
retf
mov
outs
lahf
nop
fisttp
mov
inc
sub
retf
and
mov
lea
in
sub
enter
(bad)
clc
inc
fdiv
test
xor
scas
test
mov
(bad)
push
pop
pop
inc
popa
test
cmp
adc
push
shl
jns
add
push
add
cwde
in
mov
dec
cmps
add
xor
pop
mov
fwait
cmps
jle
aas
cmps
sbb
cwde
or
out
std
push
inc
and
pop
arpl
xchg
sub
std
rcr
shl
imul
jbe
dec
nop
out
scas
cmps
xor
in
fiadd
outs
movs
fidiv
ror
repnz
cmp
mov
adc
and
sub
(bad)
xchg
push
shl
stos
das
mov
adc
pop
sbb
cmp
(bad)
int
(bad)
jmp
xchg
fadd
mov
xor
jmp
popf
bound
aaa
pop
pusha
jb
cld
hlt
adc
icebp
inc
mov
dec
push
adc
cld
and
sbb
add
outs
fstp
pop
dec
jo
outs
pop
test
cmc
pop
aam
dec
scas
shl
cmp
or
jl
xchg
mov
xchg
jne
fsub
mov
cdq
or
cdq
das
sub
jp
and
ror
jbe
xor
push
pop
imul
(bad)
out
call
sub
std
cmp
adc
xor
add
push
pop
in
jns
xchg
in
xor
push
or
ror
sub
xlat
push
mov
mov
cmps
mov
jle
jbe
or
int
inc
rcr
int3
jbe
add
push
adc
and
xchg
arpl
dec
leave
mov
ror
push
push
outs
mov
sar
lock
xchg
mov
jae
out
arpl
cmp
icebp
rcr
repnz
mov
scas
lods
js
xor
in
fld
jl
clc
pop
inc
std
and
and
jns
adc
sbb
inc
push
mov
mov
pop
fstp
mov
mov
das
jle
mov
push
mov
in
xchg
ins
push
inc
inc
mov
iret
int3
fist
fstp
push
or
xor
and
jno
inc
mov
add
pop
mov
add
mov
repnz
push
aad
imul
in
repz
mov
add
cwde
xchg
mov
sbb
cmp
or
pop
sbb
ficom
das
stc
scas
cmc
(bad)
fldenv
sbb
imul
arpl
shr
rcl
mov
xchg
sti
dec
je
inc
cmp
push
push
pop
not
fld
(bad)
sub
into
mov
lock
int3
std
jmp
pop
arpl
in
push
sbb
cmp
(bad)
mov
pop
xor
in
movs
retf
stc
mov
and
mov
sub
dec
pop
sbb
into
shl
mov
jmp
inc
xchg
mov
(bad)
lock
pop
xor
mov
inc
(bad)
mov
sahf
jmp
dec
mov
mov
gs
jp
add
div
jmp
xchg
jge
(bad)
leave
(bad)
cmp
nop
call
xor
ss
lock
shl
cdq
mov
mov
cdq
dec
adc
cmp
lods
popf
sub
add
fsubr
add
(bad)
rol
pop
outs
fs
addr16
sub
mov
adc
clc
loopne
xchg
popa
ja
pop
xchg
sbb
nop
sbb
ret
jo
fcmovne
dec
scas
cmps
dec
dec
push
shr
cmc
and
ss
out
inc
(bad)
in
sbb
dec
fcomp
sub
xlat
loop
fwait
ret
adc
xchg
cmc
xchg
js
mov
sub
(bad)
sbb
mov
sbb
fcmovne
sar
push
(bad)
jle
sbb
jb
jmp
fisttp
retf
pop
mov
pop
push
js
cld
adc
or
jbe
popf
cmp
xchg
sub
ds
add
mov
mov
or
push
or
mov
pop
and
mov
(bad)
push
jnp
push
jg
stos
test
out
ror
test
or
popf
dec
dec
js
lds
xchg
std
icebp
imul
aad
jge
(bad)
sub
out
mov
jg
imul
(bad)
xchg
mov
adc
pop
xchg
cdq
add
push
adc
push
ins
ins
add
and
push
jbe
jecxz
test
xlat
cld
jle
push
test
pop
push
mov
fwait
pop
add
push
imul
addr16
cld
fimul
jmp
jmp
push
mov
mov
xlat
test
popf
jo
jmp
test
das
mov
sbb
cmp
push
repnz
ja
retf
loopne
aas
rcr
jg
fwait
sbb
adc
ins
jns
push
movs
syscall
in
idiv
lahf
sbb
fisub
and
(bad)
xchg
test
and
into
jns
mov
sub
mov
push
jbe
ja
mov
jbe
sbb
stc
mov
xor
cmp
mov
inc
adc
fadd
adc
imul
shl
je
dec
xchg
popf
ds
inc
push
push
cmp
out
bound
int3
jae
mov
cmps
jg
in
(bad)
lock
and
(bad)
sahf
sub
xlat
push
jle
fbstp
popa
ss
xchg
push
adc
add
push
fs
ja
es
enter
icebp
dec
pushf
fild
cdq
lea
push
jo
ret
cmp
mov
sbb
int3
cmp
xchg
push
xlat
dec
and
neg
dec
mul
fwait
arpl
daa
add
push
les
jo
sbb
lods
sub
mov
mov
inc
inc
jne
mov
mov
call
fimul
dec
add
leave
or
(bad)
mov
icebp
inc
mov
pop
cmp
sbb
cmp
pop
cmp
(bad)
idiv
jecxz
dec
sbb
sahf
jl
xchg
jmp
adc
dec
mov
aam
adc
pop
sub
ss
jb
test
jb
fwait
test
dec
jno
(bad)
inc
(bad)
lock
sbb
ins
pop
adc
call
lahf
fstp
mov
xor
jb
std
test
and
aam
(bad)
sti
adc
mov
xchg
adc
clc
xchg
sbb
add
push
mov
xchg
mov
jne
xchg
pusha
push
sbb
add
jb
push
cdq
adc
fs
or
clc
xor
cmp
in
mov
inc
pop
push
push
dec
mov
cs
clc
mov
xor
movs
test
dec
lea
pop
call
lock
mov
cmc
je
out
lods
push
dec
push
test
xchg
movs
ins
or
and
push
adc
xchg
dec
add
arpl
add
push
ret
mov
imul
or
inc
cmp
jp
push
xchg
cli
sub
jg
inc
xchg
pop
out
outs
inc
xor
push
mov
adc
xchg
jmp
rcr
push
call
in
(bad)
push
movs
jmp
shl
xchg
or
mov
jl
push
scas
sub
xchg
mov
pop
shl
call
out
ins
scas
ret
popf
add
mov
or
sub
imul
stos
(bad)
mov
out
(bad)
cmp
mov
xchg
xchg
in
inc
adc
cmp
sbb
repnz
pusha
sub
mov
push
nop
lods
hlt
mov
dec
cli
mov
aam
retf
js
es
xchg
pusha
aad
test
lock
in
pop
or
imul
outs
xor
ins
inc
sub
fst
nop
data16
adc
(bad)
mov
leave
movs
inc
je
jae
(bad)
xor
icebp
dec
cmp
dec
dec
(bad)
pop
out
pop
rol
xor
cmp
pop
cmc
xor
sbb
add
aaa
jnp
test
mov
out
inc
movs
ins
cli
mov
(bad)
not
jle
movs
xchg
addr16
retf
sahf
ins
inc
and
icebp
and
lods
dec
jnp
call
lock
movs
jno
pop
(bad)
nop
call
mov
and
mov
xchg
lea
mov
mov
test
fisubr
jl
sub
jmp
(bad)
std
test
push
jae
test
iret
mov
(bad)
int
sub
es
in
in
jg
cwde
push
data16
xchg
xor
sahf
cli
into
enter
ret
adc
cmp
cmp
jnp
push
mov
fistp
adc
xchg
icebp
retf
jmp
es
jae
repz
xor
dec
fwait
jno
pusha
mov
mov
pop
add
fisubr
xlat
inc
aas
pop
movs
repz
mov
out
adc
mov
loope
mov
jmp
jb
in
or
sub
mov
inc
or
aas
push
mov
test
mov
cld
sahf
cs
inc
dec
pop
mov
mov
and
dec
js
mov
mov
in
ins
ja
push
lods
cdq
pop
les
adc
das
pop
sub
sbb
inc
push
jg
(bad)
mov
ins
add
leave
and
sbb
mov
or
stc
sbb
pop
jmp
ret
repnz
fimul
and
loopne
pop
cmp
xchg
js
mul
inc
inc
and
(bad)
pop
hlt
inc
scas
ror
sub
push
xchg
not
lds
dec
not
rol
mov
add
cmp
cmovae
push
push
push
mov
fild
cmps
xchg
adc
xor
cmp
out
retf
mov
add
js
lea
mov
aad
xchg
(bad)
(bad)
mov
jb
xor
jecxz
jns
add
push
push
xchg
or
loopne
outs
pop
rcl
jmp
and
xchg
lods
int
jo
cli
enter
ds
cdq
push
dec
adc
mov
(bad)
test
mov
sub
fdiv
add
outs
outs
inc
jns
mov
inc
pop
jge
inc
in
xor
mov
arpl
or
(bad)
daa
push
fistp
cmp
pop
test
sbb
xchg
cmp
inc
cmp
and
dec
or
inc
adc
sbb
push
push
leave
push
xchg
mov
pop
iret
xor
mov
test
fnstenv
mov
mov
pop
jnp
cld
test
(bad)
loopne
sbb
jns
repz
jne
push
mov
addr16
rol
sub
pop
gs
inc
movs
pusha
stos
outs
mov
dec
jno
jge
xchg
jmp
inc
mov
das
sub
sub
dec
dec
(bad)
cmp
dec
cmp
pop
repnz
clc
rol
(bad)
fcmovb
adc
cmp
mov
jae
jecxz
fisub
mov
es
rol
jne
and
outs
retf
ins
data16
sti
shr
dec
int3
and
shl
pop
lea
or
sahf
(bad)
div
adc
vandps
test
mov
push
scas
inc
test
and
es
cmp
adc
pop
sbb
pop
cdq
scas
inc
mov
fcmovb
mov
bound
pop
xchg
xchg
adc
add
adc
xor
shl
cmp
fnsave
divps
fcmovne
mov
mov
cmps
lds
ret
lods
pop
fwait
xor
xchg
add
pop
les
jae
retf
jge
(bad)
retf
iret
pop
ror
ss
xchg
movs
sbb
mov
sub
sbb
call
jmp
sbb
je
imul
sub
dec
dec
jecxz
sbb
xchg
adc
(bad)
pop
jne
(bad)
cli
dec
jmp
cs
jp
or
sub
cs
add
sbb
sub
push
xor
mov
cs
popa
jo
pop
or
shl
sbb
jg
dec
cs
and
pop
push
push
or
ret
mov
sub
shr
pop
mov
(bad)
xor
cmc
jle
hlt
jns
movs
cmc
ret
and
sbb
out
mov
mov
in
sbb
adc
jge
adc
fcmovnbe
push
(bad)
imul
mov
mov
mov
movs
cmp
xor
fld
ret
push
enter
fsubr
ds
xor
or
shr
movs
(bad)
push
clc
mov
pop
in
cwde
dec
popa
fbld
and
pop
icebp
retf
mov
dec
mov
cwde
aad
and
les
push
faddp
sub
dec
sub
lea
sti
adc
outs
repnz
popf
pop
cmps
lahf
push
push
push
dec
add
sub
and
mov
or
test
or
icebp
fadd
xor
cmps
mov
(bad)
out
imul
cmps
rol
out
pop
add
xor
sbb
rol
test
call
ret
pusha
mov
jmp
dec
in
inc
push
push
add
pushf
iret
cmp
out
in
xor
jns
dec
test
in
push
sbb
je
adc
bound
or
xchg
push
push
push
and
add
and
mov
jmp
sub
sti
loope
sub
mov
fbld
or
pop
ficomp
icebp
lods
jae
pop
arpl
jge
lods
das
retf
not
fwait
stos
int3
in
mov
fsubr
xchg
cmp
pop
pop
dec
xchg
call
xchg
scas
and
and
sub
adc
jo
lods
mov
rcl
jns
sbb
jmp
mov
mov
pop
ret
mov
retf
pop
fsubr
rcl
dec
sbb
jge
outs
js
in
mov
scas
sbb
push
adc
mov
rol
(bad)
cli
adc
xchg
rcl
stc
push
cmp
das
mov
mov
pop
out
dec
mov
sbb
int
cmovle
cmovl
stos
popf
arpl
retf
sbb
and
sub
retf
xchg
jnp
out
shl
ins
dec
jecxz
fimul
scas
xor
test
jbe
gs
xchg
xchg
push
xor
in
sbb
mov
cli
(bad)
scas
cmp
mov
mov
int3
pop
mov
stos
and
and
mov
push
mov
in
retf
adc
nop
xchg
sahf
dec
and
ins
cmc
popf
add
ss
or
test
icebp
out
lock
jbe
mov
dec
mov
outs
aad
push
fldcw
loopne
ltr
setge
pop
hlt
xchg
adc
or
ret
mov
cmps
in
es
iret
fwait
inc
mov
mov
cli
pop
das
jl
inc
icebp
push
xchg
fwait
xor
cmp
inc
adc
sti
mov
lock
jmp
stos
mov
push
cmp
jne
not
push
or
adc
out
xor
clc
(bad)
cmp
lock
jg
xor
hlt
sbb
mov
outs
mov
sub
clc
cmp
cld
mov
inc
jmp
neg
pop
push
mov
outs
sbb
xor
inc
jecxz
retf
push
mov
fucomip
xor
inc
add
and
mov
popf
mov
loop
dec
aas
adc
int
inc
das
es
adc
mov
aaa
pushf
add
pusha
sbb
xor
inc
and
sub
cdq
dec
in
cmp
jns
popa
mov
scas
mov
pusha
fs
fiadd
in
in
add
(bad)
sbb
xchg
stos
add
dec
sbb
popa
mov
push
inc
xchg
loop
mov
and
add
push
iret
xor
int3
cmp
pop
dec
mov
pop
sar
dec
or
arpl
xchg
dec
push
pushw
std
clc
push
pusha
jmp
mov
fs
mov
retf
fcom
or
sahf
mov
in
inc
movs
or
add
mov
jle
(bad)
mov
out
push
mov
call
push
pop
pop
mov
push
ror
push
int
or
inc
sub
retf
out
mov
mov
mov
stos
int3
stos
clc
cmp
or
sub
mov
scas
int3
les
jbe
jle
pop
shl
sub
push
ins
outs
fdivr
push
jne
push
dec
push
mov
outs
jmp
into
outs
xlat
js
imul
ss
mov
cmp
jecxz
outs
pop
inc
retf
stos
push
adc
add
mov
pushf
xor
fbstp
jp
jge
movs
pop
mov
dec
jl
xchg
loope
sahf
pop
les
clc
div
lock
aas
scas
lods
and
xor
shl
(bad)
shl
lds
pop
(bad)
sahf
mov
dec
std
call
pop
and
sub
or
pop
sbb
pop
stos
jg
sub
call
cmps
fild
aas
sahf
and
ds
jae
clc
push
fimul
pop
inc
inc
mov
xchg
pop
mov
stc
aas
dec
out
xor
and
bound
nop
mov
out
movd
test
jmp
rol
jo
cmps
inc
lods
fwait
sbb
out
clc
or
dec
imul
pop
push
in
aam
out
mov
pushf
(bad)
and
out
rcr
sbb
sbb
sub
into
shl
loopne
repz
adc
pop
data16
jmp
test
xchg
shr
mov
js
mov
xor
push
test
push
jge
pop
mov
mov
cmp
stos
jbe
shr
scas
mov
in
daa
stc
or
jns
mov
aas
inc
iret
out
mov
ror
and
lock
add
idiv
out
inc
push
mov
and
sti
mov
mov
enter
in
dec
sbb
jle
rol
xchg
pop
outs
fstp
ins
mov
mov
cmp
pop
dec
jae
add
pop
push
dec
xor
lds
std
sbb
call
xchg
dec
gs
(bad)
aam
jbe
push
or
add
into
inc
xchg
mov
stc
mov
leave
push
mov
pop
push
mov
jno
xchg
pop
lods
xor
popa
pop
int
adc
inc
sub
and
cwde
xchg
imul
fsub
sbb
nop
test
movs
mov
cld
out
popa
lods
bound
mov
pushf
mov
mov
xchg
adc
fwait
jmp
inc
stos
pusha
std
and
test
in
stos
jnp
out
data16
lods
push
add
mov
pop
jle
(bad)
jmp
push
jb
mov
xor
int
into
(bad)
mov
test
outs
push
mov
(bad)
jmp
pop
inc
or
mov
setl
mov
and
mov
sub
dec
cld
xchg
addr16
clc
es
(bad)
in
xor
cdq
xchg
xor
fcmovne
lea
mov
pop
sub
mov
mov
fimul
push
xchg
gs
std
jae
xlat
mov
jb
hlt
add
cmp
push
cwde
fidiv
enter
sub
(bad)
cmp
sbb
fidiv
fcom
ja
xor
dec
int3
fxch
into
adc
cmc
js
pushf
rcl
mov
sti
jge
xor
in
and
iret
mov
lahf
lods
or
(bad)
sahf
loop
data16
out
fdiv
out
sub
fs
pop
sub
mov
outs
jg
idiv
push
cld
test
mov
sti
popa
cli
pop
jecxz
pop
sahf
pop
ret
jmp
mov
daa
push
lahf
in
add
cwde
sahf
or
add
mov
mov
adc
or
jle
add
sub
addr16
mov
or
mov
aad
pop
dec
nop
js
shr
mov
jo
movs
retf
fnstsw
enter
mov
sbb
cwde
inc
(bad)
ret
xchg
shl
add
out
xchg
outs
inc
and
popf
xor
xchg
pop
aas
js
inc
mov
add
inc
loope
loopne
fbld
lahf
ret
lds
and
repnz
js
pop
daa
add
mov
mov
lods
retf
iret
jge
popa
aad
ror
pop
das
lods
cmp
mov
fsub
and
retf
push
or
xchg
out
dec
mov
stos
pop
sub
xchg
test
(bad)
inc
not
aad
adc
je
xchg
cmp
fwait
call
xor
nop
enter
into
or
jnp
outs
inc
xchg
and
add
lods
inc
popf
loope
sub
mov
jo
add
repnz
repnz
iret
sub
and
mov
fbstp
enter
cmps
jecxz
or
sti
fprem
sub
inc
mulps
popf
sub
or
cdq
je
add
inc
cmp
jo
or
pop
arpl
pop
cmc
mov
sub
add
(bad)
cld
std
rol
clc
xor
inc
mov
push
out
adc
or
enter
sbb
cmc
sub
inc
into
(bad)
int3
imul
lahf
fwait
in
push
sub
mov
fadd
jmp
or
add
xlat
iret
ficomp
pop
imul
xchg
pop
loope
aas
mov
fcomp
pop
mov
mov
shr
push
std
aaa
add
push
clc
lahf
adc
pop
add
jp
sub
cmp
or
mov
xchg
into
cli
jle
jno
cmp
push
bound
es
sub
stc
and
mov
pop
hlt
xchg
push
or
jb
test
sar
rcr
pop
jbe
dec
push
in
xor
xchg
pop
pop
sub
push
pushf
jp
mov
sub
pusha
inc
mov
fwait
rcr
jb
popa
retf
mov
cmps
cmc
push
xchg
lea
jae
jl
inc
popa
inc
clc
int3
add
jg
xor
data16
jnp
pusha
mov
leave
dec
cmp
add
cmp
mov
movs
push
inc
cmps
ror
stos
add
xor
mov
add
xchg
and
jnp
js
retf
fimul
pusha
jno
inc
sbb
addr16
sub
xchg
mov
lea
lds
jae
pop
loope
rol
sti
push
fist
jmp
ret
push
les
je
shl
leave
sub
es
jae
out
out
add
lea
cmp
inc
sbb
jle
jne
adc
sbb
mov
arpl
retf
pop
sbb
idiv
aas
inc
dec
ud1
mov
xor
je
xlat
dec
jns
add
imul
lods
repnz
cmp
daa
repz
sbb
mov
mov
cmp
push
and
int3
adc
(bad)
stos
mov
adc
fisub
pop
out
pushf
fsub
xchg
adc
jo
jp
daa
test
div
pop
xchg
pop
inc
movs
rcl
cmp
imul
add
jl
nop
mov
or
cmps
scas
or
mov
push
in
rol
mul
jl
(bad)
(bad)
jne
push
lahf
loope
or
fldenv
ret
ror
mov
cmp
(bad)
ins
cdq
xor
xchg
ins
test
aaa
div
fldz
int3
stos
or
xchg
pop
dec
cvtps2pi
repz
repnz
xchg
test
int
clc
pop
and
scas
xchg
fsub
mov
push
jae
jge
adc
dec
call
fcom
xor
lock
pop
pop
adc
pushf
sbb
movs
movs
out
shr
fbld
out
add
or
fisubr
push
inc
popa
add
mov
sub
loopne
sbb
test
inc
fsub
jg
(bad)
inc
lods
add
sub
jb
sub
call
dec
inc
mov
sub
jmp
lods
jne
mov
jecxz
pop
jno
in
pushf
nop
test
add
sub
adc
hlt
test
leave
push
addr16
xchg
sbb
ds
xchg
inc
dec
fwait
push
add
dec
pop
dec
ds
call
stos
jbe
jns
mov
out
xchg
cmp
call
dec
loop
daa
or
dec
jno
sar
cli
lea
fbstp
fstp
rol
ret
(bad)
or
(bad)
xor
xchg
rcr
push
mov
fmul
ds
(bad)
cmp
fstp
mov
adc
inc
xor
ja
xchg
cmp
xchg
jmp
sbb
mov
jle
pop
sub
sub
(bad)
arpl
btr
aad
jmp
push
sbb
xor
imul
(bad)
and
jecxz
xchg
imul
ja
mov
(bad)
push
jne
xchg
adc
popa
sti
dec
jmp
adc
(bad)
pop
stc
paddsb
or
in
jle
add
pop
ja
pusha
xor
xor
sbb
mov
icebp
and
icebp
jecxz
pop
and
jae
(bad)
push
lock
inc
hlt
push
fbld
sbb
sub
das
lahf
bound
shl
push
or
cmp
and
int3
push
cmps
pop
mov
adc
pop
pop
aam
shl
in
fdiv
iret
add
jle
das
push
aam
push
xchg
sub
sar
in
xor
sbb
sbb
outs
add
push
int3
fsubrp
sahf
push
push
icebp
jae
jmp
dec
pop
loope
out
and
sub
int3
push
mov
inc
add
fsubr
cmp
jl
mov
add
pop
jmp
int
daa
fst
adc
or
les
dec
xlat
jle
xchg
popf
mov
mov
pop
frstor
sub
aad
xor
pop
fsub
sub
out
push
das
test
mov
jg
ja
mov
or
and
sbb
mov
(bad)
push
push
out
inc
ret
iret
pop
pusha
jno
sub
jecxz
cmc
pop
cmp
test
enter
mov
add
inc
inc
shr
add
int
xchg
jnp
(bad)
loopne
in
out
xchg
rcl
into
push
fwait
loopne
xlat
outs
pop
cmp
mov
dec
jnp
sub
sahf
xor
and
into
push
mov
mov
ret
cmp
push
test
imul
fild
mov
lock
or
pop
mov
xchg
xchg
sbb
fs
and
int3
or
(bad)
ror
inc
xor
mov
inc
jno
(bad)
jle
push
or
scas
outs
hlt
and
mov
aas
xor
mov
popa
push
movs
(bad)
push
push
fcom
not
dec
(bad)
push
aas
mov
mov
cmp
jg
sbb
dec
xor
push
push
sub
jmp
lods
xor
cmps
xor
cmps
hlt
pop
stc
adc
jb
cmp
mov
loopne
xor
mov
call
gs
int3
icebp
imul
mov
pop
xchg
cmp
fs
add
xor
dec
mov
dec
sub
mov
fild
imul
and
push
jl
cld
push
push
inc
shr
and
sti
push
pop
out
(bad)
fstp
(bad)
loope
sbb
into
adc
sbb
imul
adc
inc
hlt
mov
xchg
jae
loop
dec
scas
jmp
ret
jmp
add
dec
cmc
ret
into
and
repnz
ins
dec
or
mov
out
sbb
push
jmp
out
scas
jno
jnp
fs
ins
cmps
out
les
retf
popf
ja
daa
lea
adc
mov
mov
sbb
(bad)
cmp
(bad)
push
adc
inc
sbb
inc
and
fdivr
loopne
push
ds
push
fcomp
fdiv
sub
pop
add
or
xchg
pop
cmp
push
sub
add
jle
fist
pop
and
push
xchg
(bad)
hlt
cmps
(bad)
aad
sub
inc
jge
lahf
in
or
cld
bound
aam
sbb
into
sbb
scas
cmp
dec
sar
fild
mov
les
mov
and
dec
pop
dec
mov
enter
xor
es
es
cmp
pop
psrlw
pop
push
inc
int3
xor
or
cmp
or
dec
mov
push
jge
sbb
or
js
and
nop
imul
icebp
jne
retf
outs
adc
inc
aad
add
not
push
aas
imul
cmp
stos
inc
fbstp
sub
retf
mov
pop
fld
imul
add
sbb
pop
mov
xor
xchg
cli
push
pop
xchg
stos
xchg
lea
xchg
repz
ins
popf
ins
ins
(bad)
inc
imul
push
bound
mov
sub
mov
ror
loop
lods
jnp
sbb
call
sbb
int
das
lock
cmp
and
bnd
popa
stos
xor
(bad)
lods
(bad)
push
mov
inc
hlt
adc
dec
div
pop
imul
mov
in
sub
pop
dec
test
dec
rol
dec
pushf
mov
loop
pop
jl
adc
dec
pop
or
rol
sti
loopne
adc
lods
mov
pop
xchg
out
pop
mov
(bad)
in
rcr
arpl
stc
les
movs
xchg
lds
pop
repnz
jbe
js
jne
push
ret
pushf
stc
pop
imul
outs
dec
ins
cmp
cmps
push
aad
gs
ret
(bad)
adc
inc
add
pop
and
ficomp
out
add
jle
(bad)
test
clc
rcr
add
popa
out
xchg
cmp
loop
and
test
out
pop
retf
test
sbb
mov
or
cmps
or
fwait
dec
xchg
cmp
push
push
dec
cmp
and
pusha
popa
push
mov
in
mov
lods
pop
dec
adc
imul
dec
inc
mov
sbb
pop
push
stos
xor
pop
mov
sbb
test
ret
pop
xor
adc
and
outs
pop
xchg
(bad)
(bad)
pop
fwait
cmp
lock
fwait
jae
aaa
and
push
sub
sbb
call
fisub
js
push
inc
pop
frstor
sar
jp
add
imul
pop
cld
inc
push
loopne
lds
imul
cs
pop
fld
mov
div
psubd
add
mov
repnz
outs
rcr
xchg
adc
mov
aas
daa
(bad)
das
pop
sub
or
adc
fwait
add
jb
addr16
sti
mov
outs
sbb
add
xchg
jecxz
leave
push
xchg
stos
mov
cmp
mov
add
mov
hlt
adc
sub
xchg
pop
jp
test
dec
mov
sbb
sub
fnsetpm(287
jae
repz
inc
pop
es
(bad)
adc
fst
rcl
cmp
enter
xchg
dec
popa
call
or
in
mov
jmp
cmps
mov
add
and
cs
jg
mov
xchg
hlt
mov
push
mov
inc
adc
mov
mov
adc
mov
popf
xchg
outs
jno
icebp
inc
loopne
and
mov
das
cld
mov
add
dec
in
xchg
cmps
in
xor
sbb
mov
fist
mov
push
sub
mov
fsub
inc
fwait
mov
xchg
mul
xchg
cmp
ret
or
ror
sub
sbb
out
inc
(bad)
std
dec
cmp
lea
retf
jne
pushf
shl
cmp
pop
inc
push
jb
cs
pop
mov
popa
in
xchg
adc
aam
xchg
dec
outs
push
push
push
out
mov
adc
les
jae
adc
sub
popa
cs
arpl
test
cmp
es
test
call
xor
sbb
and
mov
mov
bnd
outs
call
jge
inc
imul
repnz
mov
sti
add
xchg
loop
add
mov
pop
push
mov
(bad)
sub
retf
mov
into
jne
adc
add
cmps
mov
arpl
or
out
hlt
enter
or
fwait
outs
xchg
mov
test
mov
pop
aam
loop
xor
stos
retf
or
sbb
sub
jbe
clc
stos
jbe
ret
gs
fs
or
test
add
aas
cdq
stos
fidivr
push
out
or
adc
js
pop
test
and
neg
mov
xchg
dec
add
and
xor
xor
mov
and
js
mov
xor
jp
cdq
dec
inc
cmps
bound
sub
jb
dec
mov
push
les
(bad)
jg
call
cdq
and
(bad)
xlat
mov
jl
pusha
call
fnstcw
movs
mov
and
mov
jno
push
repz
cmp
js
add
(bad)
and
push
mov
call
inc
sbb
aad
dec
pop
xchg
xchg
cmp
add
je
data16
sahf
pop
aad
push
or
loop
add
test
jg
mov
adc
aad
sub
dec
jge
cli
loop
and
xor
mov
xor
mov
call
cs
in
adc
clc
(bad)
pop
call
clc
dec
fld
pop
retf
mov
sbb
js
cmc
iret
inc
ret
mov
sbb
dec
push
nop
mov
ins
xor
pop
cmps
inc
cmp
repnz
inc
lahf
jbe
or
or
lea
gs
ret
ret
xor
rdtsc
mov
adc
push
in
jb
pop
in
loopne
push
cmps
jmp
push
mov
cmps
push
scas
push
jl
ja
push
cmp
aas
stos
sub
mov
sahf
aaa
jne
idiv
mov
jp
or
int3
adc
leave
pop
test
movs
fwait
out
dec
sti
div
mov
iret
mov
in
bound
xor
push
cmp
fs
loop
jge
mov
cmp
adc
test
dec
out
xchg
cs
js
ins
xchg
add
xchg
ins
dec
int
xlat
xchg
mov
xor
out
xor
iret
jmp
out
push
inc
jle
je
clc
pushf
push
sub
sbb
movs
xchg
cs
cmp
sti
pusha
(bad)
out
imul
fbstp
mov
xchg
imul
shl
enter
mov
cld
or
or
sbb
fs
aaa
std
out
je
mov
(bad)
fcomp
(bad)
dec
jno
push
in
xor
into
daa
mov
pop
push
adc
mov
jge
mov
mov
push
or
or
or
in
ds
fadd
xchg
inc
sbb
push
and
dec
(bad)
or
or
jno
mov
jne
ror
mov
shr
sar
mov
retf
push
idiv
loopne
add
out
mov
xchg
shl
jnp
(bad)
fadd
push
lahf
out
sub
sub
mov
lds
xchg
dec
test
pushf
mov
ins
cs
icebp
not
inc
(bad)
sbb
shr
ret
mov
out
xchg
inc
test
es
jl
dec
ja
daa
js
jns
sub
repnz
ins
ret
cmps
jbe
call
ret
jmp
pop
cmps
arpl
mov
ins
loope
mov
(bad)
mov
push
ja
and
ret
loope
cdq
mov
test
mov
jae
add
lods
and
push
mov
lahf
(bad)
fwait
int3
div
in
pop
cli
setns
das
add
mov
add
mov
fidiv
xchg
cmps
jnp
push
xchg
mov
xchg
cli
mov
out
xlat
jns
fdivr
(bad)
mov
jmp
jle
inc
push
pop
mov
dec
fwait
mov
test
(bad)
mov
das
add
call
ins
pop
rcl
dec
aas
ins
mov
test
dec
les
add
push
addr16
(bad)
psllq
je
inc
xchg
push
cmp
sub
mov
and
test
iret
sahf
mov
loope
jo
sub
pushf
cmp
inc
sub
inc
jae
or
jmp
int
xor
jb
int
push
call
pop
jmp
and
sub
mov
in
neg
inc
in
movs
mov
sbb
push
scas
pusha
sub
pop
cmp
xchg
out
or
jg
pop
rol
outs
js
inc
loope
gs
nop
aad
ja
jp
push
pop
imul
adc
mov
fidivr
dec
pop
fcomp
mov
inc
loopne
les
sub
sbb
dec
adc
jmp
call
icebp
clc
sub
nop
in
mov
xor
jp
(bad)
or
mov
daa
test
or
push
icebp
ins
cmp
js
dec
cmp
jge
ins
pop
shr
mov
push
pop
in
inc
test
mov
and
cli
test
xor
xor
mov
xchg
pop
sbb
inc
(bad)
lods
add
mov
add
scas
cs
retf
es
add
std
dec
in
sbb
fldcw
push
(bad)
mov
es
idiv
cmps
adc
pushf
xor
out
cwde
inc
inc
cmp
ret
call
xor
in
mov
call
cli
es
scas
and
and
or
outs
dec
ror
and
ret
push
xor
cmp
lock
icebp
sbb
sub
jae
pop
mov
out
ins
mov
cli
or
and
in
sahf
or
push
stc
mov
pop
jnp
outs
imul
push
mov
mov
dec
test
icebp
dec
ret
sub
iret
aas
xchg
inc
rcl
mov
and
and
cdq
int3
adc
popf
daa
mov
shr
pop
not
jecxz
sub
mov
cld
neg
mov
mov
retf
xchg
push
adc
mov
pop
cmp
rol
xor
popw
lods
imul
out
in
rol
out
or
(bad)
sbb
lods
jg
xchg
scas
add
or
or
push
(bad)
mov
inc
mov
xor
in
mov
inc
push
arpl
test
pushf
sub
cmp
repz
and
inc
dec
sub
imul
sub
inc
pop
inc
ret
sbb
daa
stos
mov
aad
aas
aaa
and
shl
fimul
jp
inc
cld
mov
lods
mov
test
dec
bnd
ret
xor
loopne
mov
add
xchg
pop
fisttp
adc
push
rcr
cmp
push
xchg
sbb
aam
aaa
into
jne
xor
outs
clc
xor
sbb
adc
inc
ret
jo
jecxz
xor
jo
psubw
mov
(bad)
fistp
mov
inc
imul
mov
xchg
(bad)
adc
xchg
fst
(bad)
mov
fs
fdivr
inc
stc
js
push
in
cmp
aam
std
inc
jp
out
mov
imul
outs
push
sbb
pop
aas
dec
rcl
mov
push
add
add
cmps
pop
xchg
xchg
xchg
cmps
dec
rol
and
xor
loop
je
mov
dec
sbb
push
js
inc
into
add
mov
push
lods
retf
sar
call
xchg
pop
int3
sub
fucomi
and
ror
sub
icebp
xchg
sub
daa
jg
sahf
cmp
inc
rol
jge
mov
mov
pop
mov
arpl
xor
push
mov
inc
inc
hlt
inc
sub
inc
jl
lock
cmp
retf
jb
jo
inc
xor
xor
and
sub
stos
dec
int3
retf
lahf
iret
jbe
in
jne
dec
xchg
pusha
jne
pop
fild
pop
aas
dec
add
pop
ins
std
xor
and
mov
sub
jo
dec
aas
dec
(bad)
in
fcmovnb
mov
mov
sub
repnz
pop
outs
jle
loopne
hlt
mov
movs
mov
xor
lahf
inc
call
mov
mov
enter
jbe
ins
mov
mov
test
inc
mov
sub
add
test
push
dec
push
jno
inc
in
lods
or
jnp
aaa
push
pop
inc
and
ss
or
sti
inc
sub
iret
loope
frstor
ss
mov
sub
stc
push
nop
pop
lods
jmp
cmp
scas
fdiv
(bad)
out
stos
daa
not
test
(bad)
stos
push
pop
mov
es
lods
or
je
cmc
stos
dec
retf
jle
sbb
repnz
mov
adc
(bad)
adc
pop
nop
add
inc
mov
and
hlt
mov
push
popf
stc
cmps
and
xor
iret
imul
and
fucomi
ret
sbb
call
mov
cmps
test
aad
dec
inc
aaa
xor
loope
aad
mov
ret
or
or
mov
or
cmp
aaa
in
ins
mov
push
cmc
ds
(bad)
xor
add
dec
fwait
arpl
pop
jo
mov
aas
aam
inc
add
jg
imul
loopne
ins
add
retf
jle
mov
xchg
dec
dec
int3
ret
fneni(8087
pop
sar
dec
ficom
fnstcw
push
dec
mov
and
bound
test
mov
dec
xchg
and
mov
lds
sub
jmp
mov
outs
pop
std
in
(bad)
pop
push
(bad)
cmp
sbb
inc
pop
outs
and
push
sbb
mov
popf
fcomp
pushf
sub
pop
cmp
(bad)
mov
mov
sub
pop
cmps
rcl
das
push
nop
jns
retf
inc
test
mov
(bad)
push
stos
push
xchg
pop
cwde
cmp
jle
lods
mov
iret
sub
add
inc
addr16
shr
jae
into
pusha
inc
xchg
jns
jno
push
dec
rol
js
pop
cmc
jp
(bad)
jle
xchg
mov
push
xchg
pop
mov
xor
cmps
daa
in
ds
mov
xchg
mov
and
xor
ins
cmp
dec
adc
and
mov
mov
cmp
pop
jp
test
mov
ds
mov
out
lahf
stc
rcr
lea
jge
mov
addr16
cmp
mov
shr
(bad)
in
popa
add
mov
jo
inc
jnp
push
push
shl
jo
mov
test
cmp
pop
ins
leave
ret
xchg
jecxz
scas
sub
jbe
xlat
dec
ins
cmp
inc
aaa
add
popf
xor
adc
push
pop
sbb
xchg
lods
icebp
add
push
aaa
pop
xchg
call
inc
dec
aas
mov
cmc
mov
lea
cmp
stos
jmp
xchg
jg
fild
xor
adc
sub
mov
mov
imul
mov
or
adc
icebp
push
scas
adc
into
xchg
mov
dec
pop
push
jns
mov
mov
sub
xor
imul
dec
and
push
sub
sbb
mov
in
xchg
clc
jne
aas
aaa
aad
cmps
lock
fisub
ss
pop
xchg
jbe
xchg
test
xor
aam
fisub
or
cmps
shr
cmp
out
pop
pop
xchg
mov
cmp
pop
xor
jbe
gs
and
dec
add
loope
sub
mov
xor
cmc
mov
inc
es
call
dec
xor
cmp
cmp
adc
mov
out
fs
int3
and
jne
push
jae
jmp
push
xchg
enter
dec
aad
das
mov
and
or
adc
aam
adc
pop
pop
and
arpl
mov
cld
xor
sub
ret
or
mov
jnp
xor
repz
push
pushf
cdq
dec
repnz
xchg
mov
daa
arpl
dec
mov
xchg
mov
mov
xchg
pop
sub
dec
mov
xor
xchg
inc
aam
mov
ss
push
(bad)
xchg
pop
ret
cmp
leave
clc
aam
ss
xor
mov
movs
test
xchg
add
inc
xchg
pop
mov
cmps
stos
out
xor
daa
adc
lods
jmp
mov
lahf
and
sbb
cmp
or
aaa
outs
js
or
pop
lea
dec
imul
int
mov
xchg
addr16
bt
into
push
cmp
cmp
mov
iret
xor
inc
push
mov
jno
rcl
add
std
iret
scas
push
hlt
test
sbb
push
push
cmps
cdq
shr
js
repz
imul
ins
mov
dec
jne
push
nop
pusha
sub
scas
jne
out
xor
push
ins
push
into
std
pop
sahf
mov
mov
movs
adc
cmp
inc
and
adc
xchg
sub
or
clc
mov
add
sbb
mov
mov
js
mov
ins
sbb
sbb
add
nop
jb
vxorps
jae
div
enter
in
cmp
adc
xor
adc
stos
cld
cwde
mov
ds
bound
div
movs
nop
stc
ds
mov
aas
aaa
test
fistp
in
loop
xor
sub
js
sub
push
mov
sub
fisub
xor
sub
mov
or
into
imul
fnsavew
jl
and
fbld
ror
dec
dec
lea
jne
jl
or
adc
retf
mov
pop
sar
push
dec
clc
mov
or
ds
dec
push
ds
(bad)
adc
pop
mov
xchg
jno
in
dec
cdq
icebp
imul
imul
rcr
loop
mov
sub
cli
(bad)
das
mov
aad
push
pop
dec
fisubr
push
call
xor
ins
dec
sahf
clc
pop
pop
pop
jmp
xor
fwait
sub
je
adc
pop
lahf
test
mov
ret
cmps
jo
lds
mov
sbb
push
loopne
neg
call
les
hlt
sbb
xor
jno
add
pop
jle
sbb
mov
nop
sub
add
inc
xchg
sahf
pop
jo
cmps
xchg
in
mov
cmp
into
dec
push
inc
jns
xchg
adc
jns
outs
inc
push
mov
pop
push
pop
or
aam
fstp
add
hlt
retf
mov
or
pop
cwde
jne
fdivp
js
shr
and
call
loop
or
xchg
ficom
outs
mov
ror
(bad)
mov
fs
je
mov
mov
mov
out
(bad)
xchg
jno
add
mov
jle
and
cmp
popa
ins
xchg
dec
dec
(bad)
ins
cmps
(bad)
and
mov
cmps
cli
or
cmp
cli
sub
ss
pop
in
xlat
add
(bad)
sti
xor
xor
pop
and
js
bound
inc
or
jno
mov
ins
test
mov
sub
popf
mov
int3
xchg
out
movs
stc
sbb
pop
data16
int
lahf
mov
inc
sub
xor
cmps
inc
mov
sub
popf
mov
pop
(bad)
cmp
jbe
in
ins
pushf
mov
jbe
or
icebp
add
pop
rol
mov
mov
mov
hlt
lock
cmp
cmp
fild
aas
sbb
dec
cmps
ja
mov
dec
adc
pop
cmp
std
mov
cmp
inc
mov
sub
scas
xor
popf
cmps
xor
and
clc
(bad)
xor
loope
push
call
sahf
sbb
out
xor
fwait
add
cli
jo
lods
sbb
add
or
fsubp
imul
je
movs
fidiv
fwait
xchg
retf
adc
loop
inc
in
mov
aad
rol
jl
sbb
inc
in
test
xchg
(bad)
cdq
imul
cdq
or
das
pusha
mov
jbe
retf
ss
xor
and
push
sti
shl
je
sub
ss
cmps
fdivp
retf
xchg
jne
in
sbb
mov
fld
adc
das
sti
xor
xchg
int3
std
out
ins
in
dec
mov
mov
lock
push
inc
bound
sub
pop
xchg
push
jno
loope
inc
loope
sbb
add
xor
fiadd
ins
test
repnz
mov
je
sbb
mov
loopne
push
rcr
push
mov
or
mov
idiv
cmp
sahf
loope
(bad)
mov
mov
dec
jbe
cli
adc
xchg
mov
and
xor
scas
out
jmp
enter
mov
sbb
call
je
popa
cdq
cld
add
js
mov
cs
jmp
cs
sub
adc
and
pop
scas
mov
xor
xchg
inc
loop
hlt
mov
jecxz
cmps
xchg
mov
fnstenv
pop
pushf
jo
rcr
sub
lea
mov
xor
xor
cmps
xor
pop
or
dec
cmp
pushf
daa
sar
adc
cmp
in
lock
jno
mov
pop
bound
dec
mov
repnz
fcmovnbe
push
rcl
mov
sub
dec
or
push
dec
push
(bad)
out
ret
dec
fdivr
xor
and
push
sbb
ror
pop
dec
mov
pop
dec
inc
mov
retf
test
xchg
iret
push
push
mov
mov
repz
cmp
call
loopne
inc
sub
cs
jae
mov
sbb
sub
push
test
or
inc
pushf
test
sub
into
xor
fisub
jae
jns
adc
cli
pop
cmp
aam
scas
rol
fwait
(bad)
aas
pop
mov
fs
and
push
add
jle
xor
movs
jg
ror
xor
push
outs
adc
es
jnp
test
std
std
nop
ror
lods
push
dec
retf
scas
and
pop
mov
inc
ja
pop
mov
movs
jae
mov
repnz
cmp
jno
scas
and
mov
mov
sub
or
sbb
movs
pusha
ss
retf
cmps
pushf
xchg
(bad)
xor
mov
push
push
push
fldenv
adc
popa
jmp
xlat
xlat
(bad)
outs
out
and
push
aad
add
in
mov
sbb
aas
xor
dec
pop
in
cmp
(bad)
fcom
pop
and
jbe
(bad)
in
cmps
xor
dec
(bad)
jo
inc
adc
sbb
xchg
and
mov
mov
xchg
mov
imul
push
mov
jge
mov
inc
sbb
out
mov
in
xchg
sbb
out
mov
ss
inc
js
outs
out
adc
jno
xor
inc
retf
push
pop
lods
adc
jno
mov
fadd
cmp
sub
dec
shl
das
out
lods
mov
ficom
enter
xor
xchg
pxor
xor
dec
cli
adc
adc
ror
sub
(bad)
xor
inc
push
ret
imul
loopne
or
mov
loopne
jo
(bad)
mov
inc
dec
sbb
call
fucomp
test
fisubr
dec
call
ja
adc
and
lods
mov
xchg
(bad)
std
imul
pop
dec
add
mov
sti
sub
test
xor
push
shl
sbb
fisubr
push
bound
or
ss
rcr
pop
clc
add
inc
jns
jl
add
out
dec
xchg
pop
xlat
dec
cmp
xchg
dec
mov
dec
cs
lds
mov
scas
in
mov
loope
cmp
rcl
cli
(bad)
and
jno
dec
in
mov
or
mov
push
std
pop
cli
cdq
jo
cli
jno
and
(bad)
push
and
sub
scas
xchg
sahf
inc
pop
and
xchg
adc
pop
jmp
xchg
xchg
jo
add
push
jmp
in
add
mov
out
shl
mov
jbe
cld
mov
pop
cmp
xrelease
fsub
mov
mov
mov
loope
imul
xchg
mov
mov
fnsave
xchg
sbb
or
imul
xor
retf
jae
aad
(bad)
test
push
ds
nop
(bad)
dec
repz
inc
mov
jl
ds
xchg
and
stos
cld
clc
cdq
(bad)
shl
xchg
fadd
clc
repz
dec
loop
adc
pop
push
pop
rcl
icebp
inc
and
test
pop
mov
fnsave
adc
dec
xor
xor
dec
idiv
out
cmp
mov
cmp
push
mov
(bad)
iret
push
push
push
nop
mov
inc
int
ins
cmc
in
ds
jnp
sub
lock
jo
lahf
das
cmp
mov
movs
pushf
es
cmps
sbb
add
aas
(bad)
xor
mov
imul
(bad)
out
cli
fnsave
push
stos
dec
xchg
fdivr
jmp
fwait
dec
mov
add
dec
or
gs
les
call
xor
jns
xchg
jmp
xchg
jo
loop
inc
xor
dec
scas
adc
arpl
mov
xchg
imul
int3
add
in
xchg
lahf
test
mov
bound
cmp
stos
lock
dec
mov
adc
push
out
pop
mov
add
xchg
cmp
or
dec
mov
jg
inc
gs
aas
adc
lea
cmp
add
push
xor
rcr
or
inc
mov
and
pop
out
sti
shl
fnstenv
jo
sbb
lods
inc
push
or
loope
mov
pop
cmp
dec
sar
arpl
(bad)
hlt
cmp
std
je
mov
aaa
daa
inc
jo
dec
dec
mov
icebp
mov
and
dec
aaa
sti
(bad)
cmp
lods
jle
push
stos
cmp
push
std
in
fistp
jmp
test
in
xchg
aas
je
add
xchg
das
(bad)
mov
addr16
inc
mov
sbb
cdq
and
jg
hlt
std
and
fsub
mov
xchg
sbb
shl
xor
fstp
pushf
xchg
movs
stos
mov
push
pop
icebp
(bad)
rcr
and
ins
out
(bad)
pop
(bad)
cmp
xchg
lods
call
aas
addr16
pop
ret
shl
popf
loop
adc
jg
push
push
mov
ins
xchg
out
sub
mov
in
mov
and
jmp
sbb
outs
into
push
lods
rcl
bound
sub
out
in
inc
ss
fimul
(bad)
in
test
sbb
addr16
frstor
xor
mov
and
jne
mov
stos
add
add
(bad)
(bad)
loop
dec
mov
jp
or
mov
jg
prefetcht0
ror
add
in
adc
push
fdivr
repnz
in
mov
or
jmp
fst
add
ja
jnp
cmps
sahf
push
xchg
mov
mov
lods
cmp
pop
mov
movs
cmps
push
mov
stos
xchg
mov
stos
les
add
push
mov
and
adc
sub
add
lods
and
lds
sub
mov
xchg
dec
add
fidiv
movs
sbb
add
xor
push
rol
pop
add
push
cmovne
mov
and
or
int3
add
pop
inc
(bad)
sahf
cmp
pop
mov
mov
jl
mov
fld
jmp
rcl
sti
scas
xlat
pop
pop
adc
jnp
test
adc
out
js
xchg
loope
(bad)
pushf
ss
jp
jnp
stos
nop
fadd
cmp
xor
push
fcomp
adc
adc
sub
arpl
rcr
fcomi
ror
push
addr16
call
mov
jb
scas
cmc
mov
add
in
bound
neg
clc
cmc
jecxz
ins
dec
imul
mov
sbb
outs
rcr
mov
cmps
mov
mov
add
pop
push
mov
pop
imul
and
pop
in
sbb
mov
repz
(bad)
jge
mov
pop
adc
jg
daa
pop
mov
ret
jne
bound
push
(bad)
in
js
cmove
outs
in
jo
(bad)
jb
jae
dec
mov
je
adc
div
aad
pop
(bad)
hlt
jno
inc
std
inc
dec
push
xchg
stos
fiadd
ret
mov
test
addr16
jno
(bad)
xor
and
dec
rol
sbb
imul
dec
mov
cs
mov
fld
test
mov
mov
push
(bad)
cmp
cwde
lds
adc
ja
cdq
xor
ds
mov
adc
in
rcr
or
test
sbb
mov
call
aad
and
cmps
add
gs
push
je
cmp
mov
cmp
mov
cwde
or
(bad)
movs
pop
ret
push
mov
or
xchg
int3
retf
aas
mov
pop
jp
(bad)
call
retf
stc
push
sbb
sub
into
leave
push
sub
sub
jle
cdq
push
popa
mov
retf
cmc
repnz
adc
xchg
push
push
and
push
cmp
mov
mov
cmp
in
inc
jecxz
push
pop
xor
adc
(bad)
push
sub
retf
mov
and
jo
(bad)
sti
dec
imul
sub
xchg
inc
push
pop
mov
rcl
(bad)
pop
out
dec
ja
lea
xchg
fisubr
push
rol
loope
adc
mov
retf
jmp
sbb
mov
mov
fwait
jl
push
add
mov
call
sub
jecxz
aad
mov
stos
add
sahf
pop
mov
fist
lahf
lods
xlat
ret
sahf
in
rcl
mov
adc
push
ins
(bad)
adc
fwait
push
cmp
cs
int3
add
shl
jl
xchg
hlt
push
aas
ss
ret
out
or
repz
add
out
mov
shr
clc
std
adc
clc
push
out
ins
and
sbb
mov
and
xchg
arpl
mov
(bad)
es
repz
retf
out
outs
push
dec
pop
cwde
mov
sbb
jle
pop
shr
pop
mov
mov
out
xor
inc
jae
pop
sbb
pop
setno
mov
stc
test
gs
or
mov
(bad)
cmp
jp
jge
and
jae
shl
and
push
dec
push
jle
(bad)
mov
sbb
cmp
shl
rcl
cmp
pop
lock
or
sub
jb
mov
lock
mov
hlt
xchg
mov
mov
and
cmps
jle
push
pop
xchg
push
xor
adc
ins
pop
icebp
inc
std
or
out
xor
inc
xor
popa
in
retf
outs
in
push
inc
lods
mov
sub
movs
int3
mov
mov
ficomp
popf
in
das
shl
ja
cmp
push
mov
(bad)
pop
movs
pop
or
sbb
cwde
xor
sbb
mov
xchg
adc
or
adc
loop
fst
sahf
sbb
xchg
push
cmc
cmp
in
mov
mov
or
jge
std
stos
ficomp
pop
out
test
xor
pop
inc
push
mov
scas
fldenv
inc
xchg
lea
fist
nop
mov
iret
push
les
(bad)
or
push
and
cmps
sub
mov
cmp
dec
test
push
pop
xchg
pop
jmp
push
sar
or
pop
ror
add
push
or
pop
add
ins
pop
push
inc
cli
pop
push
push
stos
push
jno
int
iret
sbb
fldenv
pop
and
dec
loop
add
dec
sahf
inc
pop
addr16
fcomp
inc
mov
std
xchg
sahf
ret
lahf
imul
xor
mov
movs
xor
mov
cmp
inc
and
daa
pop
sub
iret
push
or
cmps
shl
lea
mov
jge
sbb
sub
fwait
xchg
mov
call
fwait
outs
mov
inc
pop
and
repz
mov
and
in
xchg
loope
jnp
jae
mov
inc
and
jge
cs
add
or
retf
xchg
cmp
mov
je
adc
sbb
ds
jns
push
js
push
inc
mov
dec
aaa
add
(bad)
xor
xor
(bad)
mov
jo
jb
aam
add
sub
mov
imul
xchg
mov
push
add
repnz
in
xchg
xchg
pop
mov
jns
and
mov
inc
jp
pushf
pushf
or
mov
in
scas
xchg
mov
in
aaa
fisub
repz
inc
dec
xchg
pop
push
ror
push
in
sub
mov
push
push
jmp
fdivr
aam
or
push
push
dec
dec
movs
lock
mov
add
push
movs
imul
mov
sub
cmc
(bad)
push
push
jno
pop
sti
cmp
sub
sub
movs
shl
sbb
inc
mov
aas
sbb
ins
fdivr
dec
sbb
aaa
std
call
leave
pop
or
push
mov
popf
inc
sbb
mov
dec
setp
push
push
out
(bad)
jg
(bad)
js
imul
sub
mov
leave
ret
shr
popf
jb
adc
mov
lds
pop
es
call
mov
sub
dec
into
mov
rol
dec
sbb
cmp
jae
xor
sbb
cs
mov
jo
add
add
xchg
pop
sti
data16
pop
push
movs
mov
mov
ret
jmp
xchg
and
adc
rcr
xor
into
jne
adc
ja
mov
fs
repz
sub
cli
cs
mov
mov
jo
fld
cmps
xor
dec
out
ins
mov
sbb
sbb
pop
xchg
(bad)
out
(bad)
pop
xchg
aaa
idiv
cmp
daa
dec
pop
call
sub
loopne
out
xchg
push
mov
outs
(bad)
and
loopne
aam
mov
push
xor
mov
aad
inc
pop
add
cmps
scas
inc
push
sbb
xchg
jecxz
mov
jne
mov
mov
(bad)
jmp
leave
pop
sti
xchg
in
mov
jo
push
je
mov
push
mov
stc
dec
out
lods
xor
pop
sbb
(bad)
pushf
les
jp
inc
or
pop
sub
xlat
sbb
js
pop
lahf
mov
(bad)
call
xchg
leave
test
mov
jg
jne
ror
or
retf
fwait
jp
dec
inc
test
pop
push
fcomip
das
xchg
call
or
hlt
pop
jp
xor
out
js
xchg
fs
(bad)
scas
push
out
mov
popa
mov
loopne
pop
daa
xchg
outs
xchg
sub
call
iret
inc
bound
cmps
cmp
out
jbe
test
mov
mov
ss
mov
sbb
add
fiadd
outs
xor
jb
push
stc
pusha
adc
push
or
sub
fnstsw
or
shl
jnp
jle
shl
icebp
push
mov
sbb
(bad)
repz
xchg
lahf
cmp
lds
mov
jge
ret
mov
and
lods
push
push
mov
sbb
in
lods
in
xor
xor
imul
sbb
movs
xchg
loop
add
add
jecxz
icebp
sub
cmp
push
sahf
mov
xchg
test
pop
mov
jbe
cmp
cmp
adc
cmps
cmp
mov
lods
xchg
jnp
out
mov
dec
cmp
aam
retf
es
inc
mov
je
mov
inc
cmps
xchg
push
stc
push
xchg
stos
in
loop
jo
mov
test
pusha
stos
xchg
je
jns
jmp
hlt
mov
sti
fmulp
test
xor
aad
jp
retf
mov
and
(bad)
and
arpl
mov
push
dec
sbb
xor
in
and
lahf
fidivr
fidiv
hlt
rcl
(bad)
scas
pop
push
dec
rol
jnp
retf
jg
pop
dec
jg
jecxz
movs
xor
mov
ret
mov
movs
repz
xchg
in
and
cmc
sahf
pop
cmp
aas
mov
sbb
adc
adc
repnz
int
mov
mov
jns
in
push
inc
cs
fldenv
dec
popf
fucom
sti
ds
and
jmp
jmp
arpl
inc
mov
adc
inc
std
(bad)
adc
or
add
jb
stos
xor
sbb
ins
mov
(bad)
mov
(bad)
mov
mov
xchg
xor
(bad)
popa
je
daa
xor
dec
dec
repz
cmp
fdiv
repz
mov
xchg
xor
push
mov
out
push
xchg
out
in
add
or
pop
call
lds
sar
retf
cmp
aam
arpl
sbb
push
imul
jno
pop
push
cmps
sbb
adc
inc
ins
pop
out
jo
xor
sub
or
dec
les
xchg
push
arpl
fwait
adc
outs
sbb
test
xchg
loop
loop
sub
iret
mov
pop
scas
mov
sbb
sbb
pushf
jb
ret
mov
push
popf
addr16
bound
push
or
cmp
xchg
jmp
fisub
clc
xchg
pop
(bad)
cmp
lods
(bad)
stos
lock
(bad)
mov
add
xchg
js
mov
or
(bad)
fisttp
xchg
and
icebp
mov
(bad)
std
xchg
jno
stos
jnp
mov
jno
mov
and
jecxz
push
shl
hlt
test
inc
scas
cs
ins
cmp
mov
mov
add
jp
movs
cmp
ret
pop
aas
sbb
call
inc
dec
mov
cdq
xor
sub
test
xor
out
inc
(bad)
out
(bad)
lea
arpl
inc
pop
fild
mov
mov
mov
jle
fcom
push
(bad)
gs
out
mov
push
lock
add
cmp
int3
movs
xor
sbb
sahf
sbb
mov
mov
cmp
add
jge
add
or
adc
dec
mov
fadd
sbb
push
push
mov
jl
cwde
rcr
xchg
rcl
xchg
or
ret
fwait
loopne
jbe
sbb
fimul
daa
sbb
repz
dec
or
jns
mov
adc
mov
cmp
mov
mov
or
shl
cdq
pop
pop
popa
push
js
ins
cs
xchg
jl
cmp
icebp
ds
push
lea
test
pop
fwait
rcr
out
cdq
xchg
mov
repnz
(bad)
mov
sub
lods
cmp
pushf
inc
mov
leave
dec
inc
popf
xor
call
in
fnstenv
mov
mov
dec
fdivr
test
lea
mov
dec
and
xchg
clc
cmp
lods
test
pop
neg
bound
xchg
mov
push
mov
sbb
sbb
mov
push
mov
mov
xchg
mov
cdq
or
jecxz
xchg
mov
popf
add
adc
fs
jecxz
es
shl
xor
xor
lock
enter
pusha
dec
(bad)
je
pop
or
cmp
adc
jbe
push
add
sbb
out
mov
jb
and
(bad)
cld
inc
gs
aas
pop
adc
mov
out
cmps
sahf
sbb
cmps
sbb
in
outs
add
pop
sub
inc
aaa
(bad)
in
imul
lahf
dec
push
ds
pop
(bad)
push
xlat
mov
mov
scas
mov
nop
jp
jle
pop
sub
lock
pop
add
mov
mov
or
ds
adc
repnz
inc
mov
test
mov
jno
or
loope
push
pushf
imul
cmps
fld
loopne
rol
mov
mov
xor
mov
fbld
push
jge
adc
jo
sbb
adc
mov
test
daa
into
(bad)
jo
xchg
enter
adc
or
mov
cmps
pop
xor
ror
inc
imul
inc
mov
in
shl
and
xor
jno
or
fs
call
out
icebp
sahf
jns
nop
(bad)
ins
mov
hlt
and
cwde
ror
jle
sub
pusha
or
sahf
dec
and
mov
out
imul
pushf
mov
fidivr
leave
mov
stos
lods
mov
and
push
jnp
adc
pop
leave
inc
inc
jne
call
jnp
daa
add
dec
adc
mov
sbb
sbb
mov
(bad)
jne
or
pop
das
popa
sub
cmp
push
daa
enter
call
or
leave
ins
rcr
inc
add
push
add
push
jle
outs
data16
push
scas
push
xchg
addr16
xor
dec
or
xor
mov
fistp
sti
push
mov
sub
call
jae
push
xchg
mov
sahf
sahf
pop
cld
jne
test
mov
dec
fisttp
aaa
mov
ins
sub
or
pushf
pop
mov
mov
cwde
enter
(bad)
xchg
sub
pop
add
jmp
mov
sar
pop
(bad)
out
mov
xchg
scas
jp
inc
ss
das
add
mov
mov
div
in
push
mov
loope
ds
shr
sti
ficomp
jnp
pop
dec
xlat
or
aam
inc
pop
and
mov
mov
mov
rol
cmc
test
repz
pop
adc
test
or
out
ds
sbb
loop
or
xchg
loope
cmps
out
sub
jmp
sbb
aaa
imul
pop
bound
jge
ficom
inc
ins
jecxz
mov
jp
das
ret
sbb
and
pusha
cwde
mov
jb
stos
stos
dec
lea
cmp
outs
dec
mov
popf
dec
outs
pop
in
out
loope
pushf
cmp
push
call
cwde
xor
inc
jae
dec
push
fadd
loop
and
and
dec
std
loop
xchg
jno
xchg
push
cmp
ins
dec
sub
cli
dec
retf
adc
les
ret
dec
loop
xchg
add
das
out
sub
enter
pusha
arpl
fwait
ror
adc
sahf
into
or
mov
das
das
shr
sub
call
jae
sub
out
les
in
add
out
outs
fnstenv
in
popa
xor
int
lea
mov
(bad)
jne
sar
test
jmp
cs
ins
inc
aad
data16
push
xor
cmc
cli
cld
dec
inc
ret
jl
loop
xchg
sar
jns
movs
or
in
in
and
cli
mov
(bad)
jge
das
dec
fisubr
jbe
push
mov
es
xchg
or
stos
inc
pop
or
iret
movs
push
fucomp
mov
loopne
ret
gs
movs
ja
jae
xor
and
xchg
enter
pop
push
sbb
popa
movs
es
out
aas
out
and
jmp
test
push
add
pop
call
push
dec
arpl
or
add
add
pusha
fcomip
(bad)
pop
(bad)
pop
inc
stc
popf
or
add
or
ds
adc
aam
add
xor
retf
jo
scas
shl
push
and
adc
js
xor
std
es
fmulp
loope
jbe
and
leave
inc
outs
ss
je
into
aaa
mul
lahf
shl
dec
mov
iret
cdq
repz
xor
fwait
and
cdq
je
mov
ja
sahf
sbb
push
sub
mov
dec
xor
add
out
add
call
mov
lahf
test
xchg
mov
jle
out
fld
call
add
gs
arpl
cmps
fstp
mov
jmp
(bad)
clc
add
sbb
repz
(bad)
stos
shr
call
mov
sar
ret
out
rcl
mov
pop
sbb
sbb
mov
(bad)
mov
dec
inc
in
or
test
mov
mov
fisubr
xor
push
test
pop
loope
push
mov
bound
arpl
and
adc
and
sub
mov
inc
inc
mov
aaa
add
ss
sub
push
movs
(bad)
(bad)
jg
xchg
bound
inc
mov
cli
inc
dec
xor
test
or
aas
dec
in
sub
mov
sub
aad
pop
or
aad
(bad)
jecxz
dec
jo
and
xlat
mov
jbe
(bad)
sahf
ja
(bad)
scas
push
inc
aas
xchg
or
cmps
mov
(bad)
fiadd
mov
mov
pop
lods
mov
or
lea
push
loopne
ins
push
or
lods
mov
(bad)
icebp
dec
out
and
adc
popa
ss
lock
mov
jo
outs
ror
leave
inc
arpl
mov
addr16
adc
sub
test
fsubr
lods
aad
lock
ror
inc
pop
in
or
sbb
in
push
cmp
pop
ret
icebp
add
sub
jp
test
mov
or
fisubr
lods
pop
ins
push
(bad)
and
sub
adc
ror
and
or
fs
div
mov
sbb
out
mov
inc
scas
imul
lea
mov
or
xchg
imul
cdq
mov
mov
and
pop
retf
repnz
inc
dec
mov
xchg
mov
ret
add
or
and
and
out
ins
movs
fisttp
mov
mov
movs
mov
pop
stc
xlat
jecxz
ins
in
jge
pop
jbe
mov
scas
xor
test
call
mov
sbb
cmp
mov
outs
test
dec
jmp
mov
jb
lea
push
(bad)
pop
and
mov
or
jnp
in
jecxz
cmp
out
in
push
pop
shl
cmp
jl
xchg
add
pop
iretw
mov
stos
aad
popa
pop
inc
pop
mov
aad
add
dec
sbb
ret
movs
or
ins
or
dec
dec
and
test
in
rcr
and
std
inc
adc
push
arpl
mov
mov
jbe
int3
movs
in
es
add
jecxz
lahf
pop
dec
mov
sub
cs
ror
icebp
cmp
daa
xor
pop
mov
pusha
retf
cli
sub
add
(bad)
jle
lahf
and
mov
adc
std
push
ficomp
mov
pop
aas
ins
bound
aas
movs
inc
pop
jl
ja
jl
ret
sahf
pop
mov
jae
xor
(bad)
in
nop
mov
ret
sub
mov
test
and
sahf
repz
cld
push
(bad)
(bad)
xor
mov
pop
dec
test
out
je
in
xor
cli
leave
iret
das
dec
xchg
fisubr
pop
pop
xor
mov
xor
pop
(bad)
cdq
movs
jp
mov
ret
aas
int
jb
dec
iret
xor
jle
sets
ins
lahf
and
pop
inc
add
out
lods
xchg
mov
dec
fucom
dec
xlat
stos
scas
lods
clc
movs
jbe
inc
ror
push
mov
mov
movs
jbe
inc
outs
jbe
stos
(bad)
in
add
std
pop
sbb
add
or
inc
xchg
popa
shl
xchg
push
les
push
lods
pop
call
xor
or
sbb
xchg
inc
adc
push
xchg
add
xchg
aaa
ins
lahf
inc
jmp
lea
mov
and
clc
ret
into
sub
fistp
push
je
movs
pop
jecxz
not
sub
out
jnp
cs
mov
jmp
mov
lds
int
sub
jno
fld
call
adc
aam
sbb
sub
push
mov
imul
push
push
test
sbb
enter
lahf
mov
mov
xchg
into
cmp
mov
loop
mov
mov
les
rol
movs
mov
dec
inc
repz
xchg
(bad)
ss
xchg
dec
adc
xchg
push
gs
push
cld
adc
test
lds
push
stc
jmp
or
adc
scas
iret
jg
mov
cmps
mov
or
mov
dec
mov
hlt
mov
xor
and
repnz
jg
mov
shl
add
lea
adc
sub
mov
add
data16
sbb
or
cld
jae
test
cmp
inc
xchg
out
and
pop
mov
push
(bad)
jmp
mov
jno
pop
pop
inc
pop
(bad)
fwait
pushf
mov
inc
inc
adc
mov
push
adc
std
sub
mov
mov
fidivr
int
jl
or
cmp
or
xor
jbe
test
sub
mov
(bad)
js
pusha
push
pop
popf
dec
xchg
sbb
adc
in
adc
ins
hlt
xor
test
jns
push
test
jmp
adc
pop
cmp
sbb
popf
daa
or
xchg
in
(bad)
sbb
or
into
(bad)
push
hlt
jp
cmp
mov
sub
sti
aad
rcr
adc
add
push
jg
add
and
dec
int
jo
pop
or
mov
mov
lock
and
push
push
push
pop
loopne
push
inc
or
dec
sbb
xchg
fnsave
retf
jo
dec
adc
mov
jle
sbb
enter
jle
jg
jmp
jnp
fnstsw
mov
rol
mov
(bad)
js
ret
ins
add
call
stos
lea
sbb
mov
mov
cld
sbb
and
adc
mov
adc
mov
xor
shr
xlat
push
fadd
fistp
jmp
inc
and
je
movs
repz
gs
js
xchg
adc
and
dec
repz
out
loop
cli
jg
pop
xor
sub
sub
and
cmp
aad
jmp
enter
call
xor
push
data16
arpl
xor
mov
push
loope
sub
mov
je
jae
cmp
or
fldcw
dec
stos
inc
lods
mov
push
pop
inc
sub
shr
repz
adc
mov
dec
mov
sub
pop
add
push
adc
scas
jle
push
add
adc
popa
ds
icebp
push
jnp
fwait
shl
out
and
call
call
pop
adc
(bad)
ror
jnp
loopne
jno
mov
cs
jmp
add
inc
clc
push
inc
cld
push
inc
cwde
in
and
ins
mov
dec
xchg
add
pop
(bad)
pop
adc
test
jmp
sbb
loopne
mov
xor
jle
rcr
loop
stos
xchg
stc
fisubr
pop
vmptrld
ds
dec
push
cs
push
fisubr
inc
cmp
cmp
jp
cmp
(bad)
ror
inc
pop
pop
jmp
daa
int
ror
sbb
adc
push
cmps
push
or
mov
shl
pushf
cmc
(bad)
or
add
inc
pop
lods
icebp
xlat
pop
mov
hlt
jmp
inc
sbb
imul
sbb
mov
hlt
retf
or
fistp
ja
xchg
jno
or
pop
std
jnp
xchg
bound
gs
add
pop
retf
push
or
dec
lods
(bad)
jns
imul
ins
dec
push
jno
jmp
sub
stc
nop
(bad)
xor
push
call
xchg
icebp
sub
popf
pusha
mov
push
das
out
push
aad
movs
dec
stc
pop
aam
test
jmp
pop
mov
sbb
popf
pushf
cmps
sbb
push
xchg
cwde
data16
ins
xor
sub
mov
repz
dec
dec
(bad)
cs
jb
xchg
mov
cmp
and
call
inc
(bad)
int3
push
shl
imul
sbb
sbb
(bad)
(bad)
int
sbb
pusha
sbb
add
adc
stc
je
jnp
jle
sti
mov
imul
frstor
les
pop
mov
xchg
xchg
add
xor
sahf
mov
jae
dec
jno
loope
stos
adc
adc
xor
inc
push
aas
leave
ja
sub
mov
in
mov
in
test
cwde
das
nop
and
stc
aad
out
mov
lea
(bad)
jo
cmp
mov
(bad)
pop
fcom
int
pop
out
pop
daa
clc
std
jmp
mov
adc
pop
inc
push
movs
(bad)
mov
aas
push
and
add
mov
jmp
sbb
xor
push
(bad)
jp
push
gs
sbb
jns
xchg
aam
fbld
in
fisub
ds
pop
stos
repnz
inc
rcl
add
mov
lods
pop
adc
mov
(bad)
mov
xchg
ins
mov
ret
scas
push
mov
in
movs
(bad)
pop
dec
mov
std
or
iret
dec
cdq
mov
ja
mov
cdq
lods
cmp
in
cdq
int3
inc
fcmovnbe
pop
cmp
(bad)
jne
and
or
push
cmc
cvtpi2ps
sbb
dec
and
xchg
mov
or
bound
xchg
adc
sti
push
sub
sub
loope
mov
addr16
cmp
repnz
in
pop
(bad)
mov
test
hlt
cmp
sub
rol
sub
adc
in
cdq
inc
dec
clc
xor
cmp
cdq
retf
push
ret
dec
out
jle
fbld
cmc
mov
sub
std
push
cs
or
or
sbb
and
xor
add
mov
sahf
iret
inc
aam
(bad)
cmp
hlt
pop
add
out
daa
inc
in
jnp
jg
mov
cmp
jl
xchg
cwde
std
jge
or
out
push
push
mov
mov
dec
and
pusha
inc
xor
cli
xchg
mov
aaa
dec
pop
dec
stos
dec
aas
mov
das
out
imul
(bad)
ffree
mov
push
sub
jb
hlt
cwde
out
xlat
jne
sbb
mov
arpl
and
in
cmps
cmp
pop
(bad)
test
(bad)
jmp
pop
adc
imul
xlat
sbb
or
mov
pusha
and
jge
cdq
mov
ret
aad
inc
aad
enter
pusha
mov
imul
mov
cld
out
rol
add
dec
mov
arpl
inc
xchg
cmps
cmps
fwait
jo
fsub
lea
std
push
add
inc
and
and
jno
sub
sub
xchg
cmps
aad
(bad)
jmp
add
jge
out
arpl
movs
mov
dec
aaa
adc
mov
dec
ret
adc
ss
shr
push
sub
mov
inc
jge
cdq
adc
pop
cmps
xchg
call
adc
(bad)
int3
or
jo
mov
pop
rcr
mov
xchg
mov
addr16
jne
fs
(bad)
jmp
shr
aaa
cmc
ror
mov
jae
jmp
or
inc
cmp
dec
rcr
mov
or
inc
jnp
out
mov
(bad)
mov
mov
mov
sti
sub
mov
push
sub
push
add
jge
ins
out
push
ret
jbe
mov
dec
pop
cmp
out
dec
and
test
sti
or
movs
xor
jmp
aam
pop
stos
arpl
push
scas
mov
cmps
aad
aad
mov
test
inc
das
sub
add
xor
xchg
divpd
(bad)
pushf
pop
mov
lods
xchg
loopne
iret
(bad)
fwait
mov
arpl
sti
pop
and
xchg
inc
xor
or
loop
add
mov
fsubrp
xor
xlat
adc
pop
jl
mov
cmp
pusha
adc
fwait
jb
pop
ss
adc
fs
outs
cmp
and
outs
dec
xor
daa
in
xchg
adc
jecxz
xchg
jge
popa
mov
pop
(bad)
jecxz
ret
bound
ror
xchg
xor
cdq
xchg
daa
je
cmp
sbb
jae
dec
inc
cs
mov
xlat
jnp
inc
pop
retf
ss
outs
cdq
xchg
dec
popa
sbb
ds
in
std
mov
lahf
ins
cwde
xlat
inc
sbb
pusha
mov
ins
call
cwde
fiadd
scas
jne
imul
and
lods
outs
add
call
fs
idiv
push
popa
xchg
out
sub
and
dec
jg
sub
cmps
xchg
mov
push
jae
popf
test
jmp
cmps
mov
int
xor
dec
push
in
stos
(bad)
mov
mov
pop
out
pop
in
jnp
js
dec
enter
cmp
dec
das
push
push
dec
sub
jmp
xchg
add
lods
inc
outs
cmp
mov
xor
sar
(bad)
pop
sbb
pop
les
add
cmc
adc
xchg
jbe
or
jae
mov
aas
sub
aaa
addr16
clc
imul
js
cmps
cmp
jp
xor
mov
arpl
ins
add
and
or
and
cwde
test
loopne
popa
fimul
lahf
es
mov
in
add
inc
sub
inc
adc
repz
xor
mov
mov
arpl
adc
sub
shr
pop
pusha
adc
push
cmp
mov
mov
movs
inc
xlat
ret
neg
pop
pushf
inc
popa
sub
ins
loop
ret
or
or
inc
sub
mov
and
inc
inc
dec
(bad)
mov
arpl
jns
aam
in
popa
mov
pop
leave
mov
jmp
add
jnp
rep
movs
mov
test
push
adc
out
xor
stos
mov
sahf
hlt
add
cmps
jne
rcr
movs
add
and
and
adc
and
loopne
call
mov
mov
lock
xor
sbb
mov
and
pop
mov
jp
hlt
jl
dec
das
loop
jns
inc
and
inc
pop
jge
addr16
push
(bad)
aad
sub
inc
mov
out
or
dec
or
mov
call
jne
dec
push
scas
popf
scas
scas
clc
gs
mov
in
mov
inc
jle
mov
add
sahf
mov
ss
and
into
std
or
and
repnz
xlat
test
iret
femms
fst
cmc
or
cs
xor
pop
fdivp
cmps
sbb
and
push
nop
dec
adc
lea
push
sub
shr
adc
scas
test
inc
xor
enter
test
cld
daa
mov
arpl
adc
out
or
test
icebp
cmp
leave
jmp
mov
out
inc
ins
rcr
pop
cmps
dec
stos
push
xchg
cmps
bound
push
test
ficomp
bound
clc
or
mov
xchg
stc
rol
mov
push
fistp
jns
inc
pushf
popa
inc
or
mov
xor
or
dec
jno
cdq
popf
ds
xor
outs
inc
pop
xor
pusha
jmp
test
xchg
aaa
sbb
and
sbb
pop
dec
ret
icebp
adc
pop
aaa
jo
push
mov
(bad)
into
aas
icebp
adc
loop
bound
push
push
mov
jle
in
fisttp
ins
movs
repnz
sbb
cwde
pop
jbe
ins
mov
inc
adc
xor
jecxz
add
jg
pop
clc
or
test
lahf
(bad)
clc
mov
(bad)
out
(bad)
retf
aad
mov
je
out
inc
xchg
cld
or
dec
movs
stos
mov
push
mov
mov
cld
int
adc
div
loopne
test
inc
and
mov
sub
push
sbb
adc
cmp
leave
push
inc
push
xchg
sub
and
inc
pop
loope
xchg
out
jl
mov
arpl
xlat
push
test
adc
pop
xchg
clc
mov
in
push
pushf
sub
(bad)
addr16
pop
push
mov
popf
ins
into
or
int3
in
push
mov
in
scas
icebp
mov
xchg
std
inc
rol
inc
adc
jb
cmp
cld
sbb
ret
pusha
mov
xlat
adc
pop
adc
mov
and
dec
test
shl
sub
inc
add
iret
and
fmul
lahf
cmp
lds
push
xor
outs
clc
cwde
xor
sub
aam
inc
retf
jb
mov
movs
fwait
sbb
push
push
leave
arpl
cmp
data16
xchg
sar
call
stc
mov
jno
scas
dec
enter
outs
sti
push
out
jmp
ins
sub
popa
inc
add
je
jo
or
dec
xor
iret
push
mov
inc
(bad)
in
or
ret
mov
pop
cmp
add
inc
int
in
jns
push
xor
cmps
pop
mov
push
mov
aad
aad
xchg
fwait
stos
xchg
fisubr
xor
outs
mov
and
test
cdq
xchg
add
mov
push
mov
mov
jae
aam
mov
std
mov
(bad)
adc
push
(bad)
xor
rol
push
arpl
in
push
and
das
adc
mov
inc
rcr
out
ins
out
mov
pop
stos
lods
notrack
pop
fsubr
fadd
shr
push
jns
test
in
cmp
xor
mov
stc
call
xlat
gs
cmc
ror
ins
mov
and
mov
cmp
dec
dec
and
out
push
mov
mov
ins
or
xor
sbb
dec
test
les
jle
nop
es
popf
xchg
je
adc
jb
add
jmp
fistp
ja
stc
test
das
jnp
aam
push
xor
and
xchg
xchg
mov
icebp
jne
jmp
mov
push
and
mov
lock
fmul
(bad)
nop
stos
and
(bad)
into
xchg
dec
adc
int3
fnsave
out
mov
xor
int3
mov
rcr
push
enter
loopne
jle
stos
inc
inc
jb
mov
fst
data16
jo
movs
xchg
fnsave
aad
push
and
push
push
xlat
push
ret
in
mov
out
dec
push
lahf
dec
cdq
cmps
mov
aam
stos
mov
adc
xor
xchg
mov
ins
jnp
jmp
retf
xchg
or
xchg
sbb
or
mov
pop
add
push
pop
dec
in
lea
jecxz
gs
mov
gs
shl
cdq
pop
mov
sub
vpor
pop
cmc
mov
stos
(bad)
inc
pop
inc
push
sbb
add
outs
mov
push
stos
push
mov
(bad)
or
cmp
retf
sbb
test
xor
mov
test
add
add
mov
fs
mov
inc
add
shl
lods
test
xchg
cmp
push
mov
inc
ss
cmp
out
xchg
push
enter
mov
aad
mov
int3
push
lahf
cmp
cld
mov
fist
push
shl
mov
dec
sub
inc
xlat
inc
lea
inc
cmc
rep
lock
sub
daa
lds
fistp
lock
jg
and
mov
jne
imul
out
imul
adc
loop
pop
shl
sar
cli
jne
retf
adc
lods
and
pop
int
call
shr
xchg
mov
mov
xchg
xor
xchg
sti
push
dec
mov
aaa
mov
ret
call
mov
xor
gs
iret
jo
xor
pushf
sub
aaa
int
add
xchg
or
fadd
jb
ins
lahf
stos
repz
sub
fisttp
retf
je
icebp
xor
mov
pusha
mov
std
ss
cli
mov
sub
xchg
xchg
add
shr
icebp
dec
push
dec
dec
add
jo
mov
(bad)
fs
pop
es
sbb
mov
pop
pop
sub
jmp
idiv
and
pusha
not
and
mov
sbb
push
(bad)
int
addr16
loopne
dec
xchg
xor
jae
push
xchg
scas
(bad)
fistp
(bad)
sahf
out
inc
sbb
outs
bound
adc
popa
in
sbb
and
xchg
mul
das
xchg
jb
mov
sahf
mov
or
ret
test
sbb
out
lahf
ds
fs
pop
xchg
into
call
pop
bound
fstp
mov
cmps
mov
jnp
gs
cmp
fidiv
xchg
mov
xchg
pop
mov
retf
out
lock
jnp
iret
xchg
mov
pop
sbb
pop
xor
push
dec
or
jecxz
int3
aaa
push
fsub
cwde
sub
xchg
gs
or
repz
cli
adc
mov
add
out
dec
jb
aam
sbb
add
push
xchg
cmp
push
vaesenc
xor
mov
test
mov
lods
rcr
push
adc
push
sub
jb
jp
sub
loope
jmp
cmp
and
imul
sbb
iret
xchg
cmp
adc
adc
mov
call
jo
call
pop
fs
add
call
xchg
mov
mov
gs
fld
or
stc
cmc
stos
rcr
imul
xchg
push
scas
or
and
jbe
push
mov
sub
push
aas
sub
cmp
push
fwait
xchg
inc
fs
dec
and
fs
push
jns
mov
cmp
test
or
adc
aaa
imul
mov
cdq
or
or
cmp
les
out
test
pop
mov
stos
jp
aas
les
sbb
or
leave
imul
and
dec
sub
mov
imul
cmps
lods
shl
sti
fnstsw
adc
pop
(bad)
aas
movs
nop
xor
scas
and
imul
xor
push
mov
mov
or
cld
cs
sbb
aam
retf
gs
stc
pop
addr16
(bad)
sbb
jecxz
lea
mov
dec
lds
loop
mov
cdq
mov
rol
push
out
icebp
popf
rol
mov
ja
add
dec
push
fcom
arpl
xor
enter
xchg
aaa
dec
pmulhw
les
not
jmp
ja
dec
fidiv
sbb
jmp
bound
fstp
mov
and
test
fcompp
std
test
sub
and
hlt
in
div
iret
sub
loope
repnz
pop
push
icebp
js
mov
call
fbld
das
sbb
xor
scas
into
test
xchg
ins
or
cmps
and
cmps
rcr
mov
cmps
mov
jp
shl
repnz
push
sbb
pop
jae
cmp
ins
fs
cmp
jl
push
dec
call
or
cmp
mov
fwait
adc
in
addr16
mov
sahf
test
xchg
sub
xchg
mov
and
ror
mov
xchg
mov
cmps
xor
std
jo
loopne
dec
lds
call
pop
push
and
mov
dec
ret
(bad)
jbe
cmp
aaa
test
cld
push
aad
push
jmp
movs
shr
dec
ds
rol
and
sar
retf
fnstsw
cmp
mov
ds
pop
cmp
cmps
push
hlt
xchg
pushf
add
fs
mov
aad
lea
push
xchg
cdq
cmps
jl
dec
xor
popa
fcom
and
fldenv
mov
xchg
sbb
mov
outs
mov
mov
add
xchg
jbe
cmps
jnp
out
pushf
mov
sbb
dec
icebp
ror
hlt
outs
stc
out
cmp
or
les
mov
xor
xchg
outs
cmp
dec
stc
popf
out
sbb
jno
mov
call
test
fsub
cli
lock
loop
push
in
xchg
push
or
popf
dec
ret
or
and
call
jge
dec
and
cmps
pop
pop
or
mov
ds
lods
sbb
jge
or
push
adc
seta
fdiv
fld
ss
jp
nop
loop
xchg
dec
ja
jne
enter
sub
push
and
push
shl
mov
mov
ficomp
pop
mov
adc
add
pop
fst
jbe
jl
xor
shr
dec
in
jmp
fldcw
adc
scas
sbb
data16
mov
in
sti
add
(bad)
out
cmp
jg
inc
mov
sahf
jne
sbb
retf
sub
lds
cmc
pop
mov
jg
rcl
add
sar
mov
jbe
inc
mov
mov
nop
dec
sbb
cld
jae
dec
xchg
xor
mov
add
cdq
retf
repz
mov
inc
in
xor
ds
sub
mov
mov
adc
(bad)
js
ins
idiv
add
jnp
add
fnop
add
ins
push
sbb
mov
movs
das
sbb
xchg
dec
jecxz
jbe
movs
imul
mov
out
jae
inc
repz
sbb
push
push
dec
fwait
dec
dec
pop
xchg
mov
push
jmp
out
mov
cmc
inc
es
push
shl
frstor
fstp
movs
popa
cdq
cwde
push
adc
rol
js
test
mov
je
mov
push
add
cmps
js
or
xor
push
jmp
or
ret
sti
leave
lock
dec
int
js
cmps
xchg
xor
jnp
scas
mov
jbe
out
out
cdq
int
aas
dec
dec
sub
jmp
mov
jg
xchg
xchg
xchg
or
into
clc
and
sbb
dec
popa
cli
or
xchg
adc
movs
out
mov
js
adc
enter
repnz
mov
jb
rol
ficom
jle
xchg
inc
pop
frstorw
sbb
cmp
test
std
lahf
sub
repnz
mov
cwde
fstp
or
cmp
cmps
test
adc
push
loope
scas
es
push
bound
pop
lods
and
push
pop
pause
cwde
add
xchg
loop
popf
dec
jno
mov
mov
fwait
lahf
lods
mov
cs
pusha
pop
add
lahf
icebp
je
mov
xchg
in
test
add
mov
std
push
xor
jmp
jno
add
mul
xchg
ror
mov
retf
hlt
(bad)
pop
add
sbb
loopne
sub
push
add
add
jnp
jp
mov
or
push
inc
cmp
fdivr
enter
sub
test
cdq
mov
dec
invd
cmc
cmp
(bad)
or
das
or
push
enter
push
ss
inc
rcl
push
call
aas
jge
push
pushf
out
mov
add
iret
or
push
pop
jb
(bad)
mov
adc
cmp
push
sbb
cli
push
pop
movs
dec
shl
aam
sub
sub
and
outs
scas
dec
mov
inc
cmp
adc
je
in
add
sub
inc
loopne
jl
mov
loopne
jmp
add
dec
fld
mov
pop
int
gs
js
rol
lods
stos
push
inc
jecxz
adc
xor
mov
test
(bad)
js
sub
add
ja
movs
pop
ds
test
sub
fsubr
test
or
jge
into
std
jp
je
mov
cmp
push
dec
add
jle
adc
cmp
scas
sbb
cmp
mov
jl
ret
repz
pop
mov
jbe
sub
push
mov
lock
lods
jmp
xor
test
dec
xor
stc
pushf
repz
pop
lea
jp
mov
das
ss
outs
push
jg
cwde
cwde
int3
pop
push
mov
nop
sub
in
movs
movs
jle
and
xor
mov
shr
jne
fst
btc
mov
(bad)
daa
ret
adc
shl
fdivr
adc
push
mov
fstp
inc
nop
mov
je
repnz
test
sar
xchg
mov
hlt
(bad)
add
popf
movs
adc
pop
mov
ficom
jo
daa
out
aaa
sub
and
js
sub
int3
jnp
ja
out
mov
push
loop
mov
movs
andps
pop
or
mov
jl
hlt
pop
ds
pop
and
or
daa
push
mov
mov
sbb
pop
cmova
not
xchg
inc
or
mov
pop
mov
loop
xchg
mov
adc
mov
ds
aaa
(bad)
icebp
adc
push
call
xchg
xchg
retf
std
cmc
rcr
push
cld
push
pop
retf
push
not
iret
lods
sub
mov
inc
jno
(bad)
lock
loope
pop
test
icebp
lahf
jbe
outs
aad
mov
sbb
int
ret
add
in
test
imul
adc
push
stc
cmp
loop
leave
dec
xor
retf
jg
xchg
test
out
jle
ret
mov
mov
or
jge
add
aaa
pop
in
add
sbb
loop
and
sub
mov
fidivr
and
jg
lahf
jne
cmps
imul
push
mov
repnz
rcr
and
into
int
push
outs
hlt
jg
inc
inc
sti
push
inc
push
jmp
sbb
sbb
outs
inc
lock
in
jne
(bad)
into
icebp
xchg
daa
jg
mov
dec
retf
aad
shl
pop
lahf
push
data16
(bad)
js
dec
rcl
scas
push
mov
cmps
and
adc
int3
or
loop
adc
mov
xchg
sub
and
cmp
inc
jle
shl
outs
pop
(bad)
xlat
stos
call
ret
jbe
pusha
xchg
movs
push
cwde
mov
inc
out
fist
cmp
cmp
imul
sub
mov
outs
fwait
add
jo
jno
movs
add
mov
jae
adc
outs
or
imul
fmul
cdq
sbb
mov
data16
je
mov
add
cmp
jge
aam
or
ds
dec
jp
pop
aas
cmp
mov
sbb
movs
scas
dec
mov
and
xor
xchg
jns
mov
test
repnz
xchg
adc
hlt
xchg
stos
repnz
aad
outs
lahf
xchg
movs
imul
push
enter
fimul
push
xchg
inc
nop
xor
inc
dec
jmp
mov
arpl
(bad)
arpl
inc
loopne
sahf
or
xor
je
imul
inc
and
sub
cmovo
mov
cs
lea
bnd
cmp
dec
pop
aas
mov
mov
jnp
test
add
cld
stos
add
jge
or
js
xor
and
mul
ds
fst
xor
inc
fnstenv
jmp
inc
mov
loopne
les
adc
or
jmp
and
cmp
xor
adc
sub
jo
cmc
mov
int3
clc
push
jnp
rcr
mov
test
scas
cwde
inc
rcl
ret
fsubr
popa
sbb
mov
int3
pop
loopne
jb
xor
and
mov
fnsave
cmps
ja
cmp
cmp
mov
fisubr
add
add
aad
popa
into
xor
or
scas
sub
sub
cmc
bound
adc
add
loopne
cmp
lods
lahf
jno
pop
movs
popf
fnsave
xor
mov
push
sbb
mul
and
loop
pushw
nop
cmps
push
rol
lods
div
scas
push
pop
test
loopne
cwde
add
mov
mov
retf
dec
push
test
xor
pop
pop
cmp
ins
ror
aam
(bad)
std
fidivr
cmp
int
loopne
inc
or
sahf
jg
and
mov
fisttp
mov
lahf
icebp
add
mov
call
lahf
aas
sub
xchg
jns
add
add
jmp
in
aad
push
aaa
jmp
bound
cmp
mov
sar
mov
int
lock
les
retf
repnz
call
mov
pop
or
push
jp
cli
mov
mov
dec
mov
sar
jmp
iret
and
ins
stos
push
mov
ds
out
jo
and
add
loop
mov
int
sub
pusha
xor
dec
inc
mov
js
or
aas
inc
push
test
(bad)
inc
jmp
mov
sti
cmp
inc
xor
xor
pop
neg
and
ins
int
aad
dec
cmp
and
add
call
mov
inc
adc
icebp
lods
inc
push
cwde
dec
std
mov
loop
pop
ja
xor
push
and
test
int3
push
or
outs
retf
ins
retf
xchg
jo
pop
(bad)
push
sbb
xchg
dec
jecxz
xor
fsub
ror
lods
xchg
jns
add
imul
aas
and
mov
sbb
call
data16
inc
mov
dec
mov
je
mov
pop
and
xchg
scas
or
xchg
into
inc
jnp
rol
pop
push
addps
xchg
cmp
mov
cmc
mov
sbb
prefetcht2
scas
(bad)
pop
dec
mov
push
sub
loop
mov
enter
mov
inc
js
mov
data16
sbb
xor
sub
or
mov
cmp
mov
mov
mov
push
jmp
sub
xchg
and
jmp
in
data16
outs
rol
imul
push
xchg
dec
xor
and
inc
jle
lods
cmp
xor
xor
xchg
xor
sbb
scas
repnz
test
pop
fmul
jecxz
lods
(bad)
push
jae
xchg
dec
into
xchg
dec
retf
dec
jmp
pushf
in
push
jnp
shr
iret
test
jge
ret
les
in
out
arpl
div
loope
xchg
or
push
call
xchg
fcmovnbe
ret
test
imul
out
dec
popa
ret
adc
hlt
in
nop
outs
xor
cwde
jne
(bad)
stos
daa
pop
imul
leave
lds
bound
sti
xchg
adc
imul
std
cmp
test
cmp
(bad)
cdq
dec
ins
mov
mov
fucomi
xor
repz
xchg
sbb
fidivr
sbb
call
mov
retf
mov
es
sub
sub
jp
scas
and
sub
shl
cmp
add
sbb
mov
in
ds
test
std
sub
and
aaa
stc
or
movs
jb
data16
jo
(bad)
int3
dec
mov
pushf
loopne
mov
hlt
sbb
jp
xor
xor
fist
mov
mov
gs
cli
fild
and
ss
dec
sbb
pushf
in
loop
push
inc
lock
sbb
xchg
jge
fisubr
fistp
test
sbb
mov
mov
or
bound
aas
jecxz
xor
fstp
mov
mov
push
shl
rol
inc
out
dec
pop
in
into
mov
fs
das
sub
test
mov
lods
imul
push
xor
lds
fneni(8087
pop
imul
push
inc
pop
cmc
into
addr16
stc
mov
sti
jae
iret
or
in
xchg
lods
les
xchg
xor
dec
call
inc
mov
shl
aam
ss
inc
aam
bound
or
cmp
cwde
ret
jg
cld
mov
rcl
mov
mov
mov
nop
inc
or
or
push
hlt
icebp
xor
inc
inc
sbb
daa
jp
lods
and
mov
rep
adc
call
pop
dec
xor
mov
dec
sbb
add
jno
cmps
ret
add
jle
push
psubw
test
xor
cdq
in
(bad)
adc
pop
fdiv
mov
pop
push
push
outs
test
scas
(bad)
push
pop
or
mov
fdivp
imul
out
sbb
mov
(bad)
je
cmps
scas
dec
js
add
sub
popf
mov
jp
xor
ja
lock
aas
(bad)
pop
outs
aam
ins
or
js
daa
dec
mov
pusha
(bad)
lds
xor
dec
in
gs
push
in
nop
push
std
cwde
jl
xchg
ror
lock
pushf
jnp
or
ficom
jl
shl
icebp
sbb
test
mov
out
test
cmp
cmp
fidiv
and
mov
inc
jo
repz
in
lahf
sbb
and
push
sbb
jbe
rcr
jbe
hlt
fimul
retf
or
jnp
repz
jmp
icebp
mov
pop
inc
in
jg
stos
dec
inc
xor
mov
jg
and
(bad)
hlt
mov
xor
adc
scas
mov
mov
push
je
sahf
stc
mov
cmp
mov
mov
(bad)
push
daa
jp
or
mov
cmc
dec
jmp
in
cs
jecxz
dec
cs
sub
sti
iret
sub
mov
push
mov
scas
(bad)
push
(bad)
cmp
push
mov
leave
or
add
out
inc
aad
pushf
jecxz
pop
push
mov
sahf
outs
pop
jmp
neg
mov
mov
std
mov
sub
jmp
fldenv
adc
cmp
call
aam
gs
fsub
popa
callw
ret
ins
mov
in
mov
mov
jnp
xchg
ror
or
xchg
add
cmps
data16
xchg
push
push
cmp
or
lods
mov
jns
jle
inc
push
pop
inc
adc
push
adc
ds
inc
bound
ret
je
fnstenv
nop
leave
jge
mov
(bad)
pusha
jns
test
into
fisub
pop
aam
push
dec
jmp
mov
nop
(bad)
lea
xchg
sahf
leave
(bad)
and
imul
mov
cli
lahf
dec
out
(bad)
out
pop
test
and
mov
push
in
xchg
loope
mov
shl
data16
(bad)
neg
je
mov
jne
shl
sub
imul
call
(bad)
dec
call
push
mov
hlt
int
outs
(bad)
mul
movs
push
mov
sbb
nop
dec
xchg
fiadd
fisttp
and
or
inc
cmp
push
sbb
add
adc
mov
bound
xor
sti
cmp
xor
dec
bound
xchg
popa
cmp
popa
inc
push
rcl
std
ds
or
repz
icebp
pop
call
ss
jmp
adc
cmps
push
mov
push
out
xchg
pop
push
or
mov
retf
out
inc
fdiv
cmps
or
push
jg
xchg
mov
and
adc
lahf
cmp
pop
cli
dec
dec
jo
mov
pushf
inc
and
cmp
cmc
fcmovb
push
add
test
jo
mov
xor
(bad)
sub
xor
mov
fst
sbb
in
add
ret
lock
into
push
cmps
jecxz
inc
rdseed
scas
stos
mov
movs
test
sub
add
cld
xchg
movs
xchg
jmp
cmp
jbe
ins
lds
pop
mov
mov
imul
in
or
in
ins
scas
fadd
test
cmps
pop
sub
scas
stos
inc
scas
pop
mov
sbb
fcomp
mov
push
rcl
adc
sbb
push
mov
adc
inc
shl
mov
adc
aam
push
cmp
lea
adc
js
xor
loop
rol
and
cmp
pushf
lahf
ficom
jg
push
ds
stos
scas
mov
std
and
bound
ins
repnz
inc
call
adc
iret
icebp
mov
gs
and
cmp
inc
jmp
aam
mov
pop
pop
jl
lahf
xchg
or
and
add
cmp
call
js
shr
iret
fst
aad
(bad)
aad
dec
in
xchg
movs
pop
mov
xlat
aam
jmp
pop
les
pop
pushf
out
and
js
loope
add
inc
and
(bad)
xor
mov
test
inc
jmp
or
xor
pop
cdq
mov
mov
loop
jmp
shr
scas
je
add
xor
icebp
sahf
sahf
pop
push
mov
xchg
sub
fsubr
mov
push
fstp
sbb
inc
pop
adc
adc
cmp
mov
mov
xchg
ret
int
pop
cmp
dec
ror
push
adc
fistp
call
test
call
adc
in
pop
aam
and
mov
add
fld
xchg
shl
dec
xor
dec
pop
xchg
test
cmc
push
paddw
sbb
mov
push
mov
mov
outs
scas
fldenv
jae
xor
popa
sahf
mov
and
bound
push
mov
ja
inc
mov
xchg
loope
adc
scas
int3
mov
pop
lock
dec
(bad)
xchg
or
shl
test
gs
mov
stos
dec
sahf
jne
js
jg
pop
or
and
fcom
add
retf
pop
int3
ret
gs
fcmovu
cli
int
outs
mov
push
pushf
or
jmp
mov
das
fwait
daa
loop
inc
inc
out
pop
clc
out
mov
std
sbb
xchg
cmp
mov
add
repnz
std
jmp
movs
mov
in
sbb
rcr
fcom
mov
inc
mov
in
xchg
mov
not
cmc
out
ins
cmp
jne
pop
push
or
fisttp
mov
dec
cs
xchg
test
loope
jg
idiv
push
pop
mov
into
cmp
daa
aas
cmp
fadd
div
or
mov
or
mov
xchg
cdq
addr16
arpl
inc
sub
jb
dec
outs
cmp
pop
scas
or
jb
mov
sbb
mov
test
xor
lds
sub
and
shl
test
push
daa
sar
jl
js
sub
inc
into
les
fdivrp
aad
mov
mov
lods
sub
jbe
cwde
scas
xor
pop
xlat
sub
push
jmp
jnp
inc
push
cmp
je
jg
xchg
sub
fimul
pushf
repz
lods
xlat
pop
(bad)
cmp
and
xchg
les
mov
cmp
pop
(bad)
jns
sub
out
inc
add
clc
movs
inc
outs
xchg
and
sbb
les
imul
std
les
std
lods
lods
js
es
mov
daa
xor
int3
mov
or
jb
mov
outs
mov
stos
fild
and
aam
jb
(bad)
sub
movs
inc
test
cwde
sub
repz
dec
cmc
adc
ins
sbb
pop
mov
and
jns
rcr
pop
sbb
fidiv
fld
bound
add
mov
sahf
dec
(bad)
call
movs
daa
cmp
push
pop
scas
cmp
xor
mov
push
xchg
pop
movs
add
les
loopne
cmp
pusha
fnstsw
pop
gs
and
or
in
rol
ret
je
jo
std
xor
icebp
lea
or
jnp
ficom
dec
sub
dec
mov
test
xchg
mov
fsubr
push
add
cmp
aas
arpl
retf
mov
pushf
sub
dec
mov
scas
mov
sahf
cmps
xchg
push
sahf
sbb
dec
aad
lods
pop
jmp
sub
movs
test
mov
or
or
sahf
push
pop
in
inc
loop
mov
dec
adc
ficomp
arpl
jo
sbb
into
clc
pop
mov
in
mov
fsub
dec
cs
outs
push
loope
not
cwde
ins
and
mov
pop
jl
dec
xchg
bnd
jge
shr
mov
int
lods
pop
jne
jnp
arpl
pop
outs
inc
data16
(bad)
pop
pop
iret
xchg
(bad)
pop
adc
push
cmp
add
sbb
dec
and
stos
inc
cmp
leave
mov
scas
repz
jbe
dec
mov
sub
loop
jp
out
push
sbb
add
jg
movs
push
fild
lods
push
mov
retf
fucomp
jns
neg
adc
sbb
fucom
mov
xchg
out
scas
jl
pop
test
xor
push
inc
pop
mov
loope
mov
loope
mov
mov
loopne
aam
clc
push
inc
sbb
push
das
ins
dec
xchg
cdq
loopne
(bad)
inc
sahf
shl
mov
pop
not
or
dec
mov
call
retf
xor
fild
dec
es
fcomp
mov
lods
inc
cmps
cs
push
mov
add
les
and
pop
xor
iret
cmp
fxch
dec
imul
mov
push
mov
push
leave
sbb
lods
pop
sbb
int
xor
outs
mov
xchg
data16
mov
sti
(bad)
and
loop
hlt
out
cmc
mov
cmc
push
jne
aam
mov
adc
stc
retf
ficomp
mov
lock
push
iret
push
test
mov
loope
rcl
stos
jmp
lahf
sub
cmp
pop
imul
fadd
test
inc
sub
pop
das
shl
leave
in
and
cs
mov
int
and
jns
fstp
mov
mov
add
out
aas
inc
and
das
mov
in
inc
rcl
jmp
sbb
ret
mov
cmp
sub
rol
(bad)
dec
mov
xor
ds
ret
xchg
pushf
mov
add
pop
xor
cli
mov
stos
inc
add
add
mov
or
mov
imul
in
xchg
lods
fwait
jecxz
push
sbb
or
movs
dec
into
scas
fld
js
and
sbb
(bad)
(bad)
sub
movs
iret
cmp
into
aas
(bad)
cmps
adc
stc
jb
hlt
xchg
test
shr
inc
ret
imul
mov
xchg
push
pop
retf
pop
xor
xor
aam
dec
mov
retf
mov
in
xor
or
stc
test
xchg
(bad)
fiadd
into
cmp
inc
fcom
push
push
test
mov
pop
pop
lock
push
out
inc
or
mov
dec
dec
and
xchg
inc
fwait
jge
mov
or
inc
add
fcmovnu
icebp
(bad)
js
inc
sbb
call
sbb
out
aas
add
outs
and
mov
mov
cmp
push
loopne
das
loopne
cs
jnp
jl
mov
sub
in
ret
sahf
outs
dec
pop
adc
xor
pop
in
or
inc
js
jae
test
xchg
mov
cmp
inc
fild
add
out
dec
inc
pop
pop
mov
sub
add
fidiv
mov
shl
enter
or
and
fs
retf
popa
fstp
adc
ja
cmp
popa
and
push
xor
fild
dec
lds
mov
(bad)
sti
pop
aas
adc
sub
push
enter
xor
sbb
jmp
jg
add
rcr
ja
pop
xchg
outs
and
fild
push
je
add
jb
xchg
push
jo
in
mov
add
mov
jecxz
mov
push
inc
push
adc
addr16
(bad)
hlt
dec
sbb
cli
cli
xlat
jns
out
add
mov
push
mov
addr16
ja
dec
fdiv
mov
dec
and
inc
addr16
inc
pop
mov
neg
jecxz
fiadd
push
push
ins
pop
jnp
or
aaa
adc
and
mov
jo
xor
lods
add
ja
std
mov
shl
lds
ins
jecxz
push
sar
xchg
call
test
(bad)
fnstcw
inc
sbb
(bad)
cmps
popf
iret
lahf
cli
xchg
lock
adc
mov
push
pusha
fdiv
stos
stc
out
cmps
xchg
or
shr
and
adc
data16
mov
sub
es
jecxz
aaa
ds
ret
ja
mov
call
pop
xchg
cmp
xor
push
cmc
es
in
iret
fstp
lea
inc
push
out
adc
outs
cmc
sti
push
(bad)
sbb
xchg
shl
add
push
jbe
jo
ds
pop
(bad)
mov
jge
xchg
pop
leave
sahf
addr16
or
cld
out
ins
inc
in
fdivrp
dec
jne
jo
mov
add
pop
jno
frstor
fsubr
loope
jb
push
xchg
adc
data16
int3
pusha
mov
sar
aas
jbe
sbb
mov
mov
pop
add
ins
cmp
bnd
pop
ss
mov
cmp
fcmovu
mov
ret
arpl
inc
adc
mov
push
xor
push
xor
xlat
test
jle
pop
pop
sbb
rol
adc
sbb
cli
and
and
retf
cli
mov
fcomp
push
jnp
ja
xchg
jns
sub
pop
daa
push
jge
push
ror
into
push
cmp
mov
ror
repz
gs
or
pop
mov
test
jle
out
pop
imul
dec
jo
retf
and
pop
and
push
push
pushf
push
mov
push
xchg
add
jge
in
push
dec
dec
lea
sbb
sbb
sahf
push
sub
hlt
inc
push
adc
or
pop
out
call
and
es
retf
iret
pop
fstp
and
mov
sub
imul
stc
cwde
jecxz
fsubr
ss
test
clc
into
lods
ds
cmps
push
push
mov
daa
xchg
jae
sbb
fisubr
je
cld
dec
or
fnsave
dec
adc
fld
sub
imul
xchg
mov
cwde
fwait
xor
lods
retf
test
pop
mov
stc
mov
mov
call
retf
xchg
imul
sbb
(bad)
xchg
pop
xchg
inc
jne
push
add
or
or
and
xlat
cs
out
push
(bad)
push
dec
add
add
cs
add
mov
push
push
enter
jmp
add
or
sbb
mul
push
iret
hlt
push
push
push
mov
and
jmp
inc
mov
sbb
xlat
jmp
outs
cdq
sahf
aam
pop
dec
mov
xchg
fucomp
jo
lods
fs
inc
cmc
jle
add
cmps
cmp
xor
sbb
mov
imul
fcmovnb
cld
out
dec
jmp
stos
aam
in
xor
(bad)
scas
popa
popa
jge
std
pop
dec
and
or
sub
jae
cmp
pushf
pop
or
mov
xchg
imul
jo
sub
sub
xchg
test
xchg
cmps
xchg
int
mov
gs
shl
ror
fs
shl
popf
(bad)
loope
fldenv
adc
xchg
push
xchg
out
pop
push
in
in
shl
inc
or
iret
and
push
xchg
jbe
xchg
mov
neg
adc
test
pushf
mov
push
mov
lea
push
xor
movs
imul
hlt
xlat
adc
mov
xchg
pop
out
outs
aad
mov
aad
mov
call
aas
lea
mov
push
lods
jns
mov
rcr
add
dec
jmp
cmc
cmp
sbb
inc
sub
imul
call
hlt
jns
retf
and
in
jo
pop
sub
das
cmp
lods
pusha
jl
add
fdivr
jne
xadd
mov
frstor
jno
loopne
mov
pusha
sti
(bad)
xchg
pop
dec
addr16
or
sub
cld
inc
ds
out
in
retf
mov
ds
mov
mov
je
inc
loop
mov
ror
xor
dec
dec
cmc
arpl
cwde
cmp
sti
aad
push
les
aas
sub
or
ins
sub
iret
out
outs
outs
and
push
(bad)
jns
(bad)
repz
inc
shl
gs
ss
aaa
jecxz
imul
mov
push
cld
inc
ret
add
arpl
movs
das
xchg
sbb
jae
neg
dec
xor
out
xor
shl
cwde
mov
dec
popf
or
adc
inc
fldcw
icebp
addr16
imul
xor
clc
mov
adc
es
push
dec
inc
js
fnstcw
jb
xor
test
jle
sub
popa
dec
rol
push
aaa
(bad)
daa
or
xor
movs
inc
mov
inc
retf
jns
pop
add
cli
popa
scas
xchg
cmp
stos
jae
(bad)
sub
fild
inc
fistp
ins
js
push
pop
xchg
into
fdiv
push
pop
rsm
repnz
xor
mov
leave
movs
rcr
cmc
or
or
jae
out
outs
fimul
xchg
data16
mov
hlt
cmps
add
hlt
push
jo
test
cs
push
in
lods
fnsave
loope
repnz
sub
pop
lea
ret
fstp
inc
xor
or
retf
call
ins
pop
ficomp
cmp
out
jno
sar
ret
pop
inc
sub
cld
enter
jl
mov
into
jae
in
push
dec
pop
push
bnd
pop
jp
loopne
test
retf
pop
das
cs
retf
retf
push
popf
mov
sbb
sbb
and
nop
je
je
or
add
push
xor
adc
mov
pop
sub
xchg
inc
adc
addr16
(bad)
imul
xchg
gs
pop
scas
or
cmp
push
mov
jmp
aad
(bad)
in
fisubr
mov
mov
mov
xchg
aas
outs
jno
in
enter
ja
movs
in
mov
or
jae
je
sahf
sub
lahf
cmp
sub
out
in
ffreep
ss
xor
stos
mov
mov
arpl
push
gs
jp
lds
xchg
pop
push
sbb
add
jmp
cmp
int3
rcr
imul
xor
lds
ret
dec
retf
jo
dec
push
and
jge
xor
sar
pop
inc
les
jae
outs
mov
es
mov
icebp
fstp
cdq
jl
popa
outs
in
adc
stos
imul
sub
xchg
pop
int
cmp
sbb
movs
test
repnz
dec
in
mov
sub
or
js
lods
test
mov
out
and
ins
xor
xchg
ss
mov
jmp
add
jmp
outs
mov
xlat
pop
jg
stc
clc
mov
out
cmp
jno
aam
dec
xchg
scas
sbb
sar
push
loopne
movs
dec
stc
lds
ins
test
push
js
lock
js
aam
mov
lea
int3
or
inc
clc
lea
or
cmp
test
pop
pop
sub
fcom
sbb
enter
sbb
jl
xchg
les
adc
(bad)
neg
data16
sub
out
in
fucomp
fistp
inc
jl
push
xchg
out
sbb
push
dec
mov
and
aad
sti
jae
xor
jecxz
jmp
sub
mov
daa
aaa
jp
mov
clc
clc
enter
mov
xlat
fidiv
es
dec
pop
(bad)
test
ret
mov
sub
popf
sub
pop
pop
dec
fistp
je
mov
retf
int
inc
mov
out
xor
outs
ins
mov
inc
push
push
or
hlt
icebp
aas
inc
push
cmp
adc
rcl
or
mov
mov
(bad)
(bad)
pop
loop
jmp
cmps
(bad)
int3
add
cs
inc
mov
dec
(bad)
cmp
in
aam
fadd
outs
std
jmp
or
stc
jmp
in
scas
jns
or
mov
bt
and
and
(bad)
fisttp
pop
pop
lds
dec
mov
inc
out
nop
mov
xchg
sar
das
aaa
adc
sub
fiadd
and
add
fcomp
mov
sti
xchg
fs
ins
cld
movs
int
fild
mov
sbb
add
add
xor
mov
push
data16
popa
dec
sbb
test
test
retf
dec
dec
push
mov
push
xchg
xchg
add
sub
dec
div
pop
ja
shr
lahf
repz
xlat
mov
push
adc
inc
aas
jmp
movs
outs
fisubr
rcl
movs
aaa
and
add
xor
push
push
pop
lods
sub
scas
jp
les
mov
push
test
or
lahf
or
mov
xchg
mov
iret
not
iret
mov
in
lods
push
jl
aad
out
xor
ret
lods
rol
cmp
pop
cdq
fimul
shl
adc
iret
aam
arpl
or
movs
cmc
repnz
lds
ins
xor
jmp
inc
data16
das
xchg
inc
mov
jl
sbb
jne
sub
dec
fistp
inc
ss
std
lock
mov
sbb
fs
cmp
sahf
popf
jg
lahf
je
add
cli
and
push
and
add
aaa
imul
dec
or
cmp
fsub
inc
and
mov
pop
rcr
xchg
xchg
rcl
enter
imul
xchg
cmp
mov
cmp
and
in
in
mov
cwde
add
xchg
xchg
adc
js
cld
dec
in
mov
xor
push
sbb
retf
or
lods
add
loopne
lock
call
jns
sbb
bound
repnz
add
xor
repz
inc
out
cmp
xlat
mov
push
ja
inc
and
ret
iret
fadd
jge
in
add
sbb
in
lahf
push
scas
sub
stc
jns
mov
jmp
mov
cmp
mov
rcl
mov
es
arpl
sbb
and
movs
fcom
pop
int
movs
movs
xlat
shl
or
xlat
test
imul
gs
cs
cmps
mov
popa
adc
and
mov
leave
sub
pop
loopne
fmul
and
out
sub
mov
in
jge
xchg
and
cmps
add
xor
lods
movs
adc
or
mov
dec
xchg
mov
mov
test
cmp
int3
popf
jne
jbe
and
dec
loop
bound
fwait
push
inc
mov
aaa
inc
std
push
or
int3
push
xchg
ret
into
popa
lea
fldcw
imul
push
iret
popf
cmps
test
xor
jg
push
rcr
or
(bad)
and
les
fisub
ss
jo
push
fisub
je
(bad)
imul
xchg
leave
jnp
pop
xchg
push
fdivr
push
out
ret
xchg
dec
les
mov
adc
jmp
sub
adc
sub
inc
pop
xchg
std
rcr
mov
jmp
dec
inc
pop
mov
sub
js
scas
or
pop
fbstp
pop
scas
mov
add
in
mov
or
imul
das
ret
pop
lods
cmc
push
out
sub
add
(bad)
mov
jle
xchg
xchg
leave
inc
gs
inc
cmp
jl
jmp
or
lock
scas
sbb
or
jns
xlat
jae
fld
loope
ins
inc
ins
jmp
retf
dec
retf
das
jp
int3
or
ss
inc
sbb
dec
jo
das
adc
push
imul
xchg
cmp
test
sub
rol
xchg
cs
fwait
ret
shr
loope
neg
sbb
ds
(bad)
aam
and
sub
call
int3
mov
xchg
jae
outs
cs
inc
lock
xchg
push
xor
rol
je
inc
stos
icebp
bound
or
in
xor
aam
mov
cmc
xchg
push
mov
dec
jge
and
pushf
cmp
in
and
push
or
xchg
and
test
push
mov
jmp
enter
mov
in
in
mov
sbb
lods
xchg
or
inc
sbb
mov
dec
outs
mov
in
pop
or
xor
je
jns
fdiv
lods
mov
into
scas
mov
shl
mov
inc
cmp
push
cmp
or
xlat
mov
hlt
pop
add
int3
(bad)
xchg
cmp
mov
pop
lea
test
push
pushf
enter
jg
mov
lods
mov
sbb
mov
iret
lahf
inc
lea
mov
dec
test
es
add
pushf
pop
mov
loop
mov
ins
xchg
sub
int
mov
out
mov
adc
ja
add
outs
sbb
inc
mov
(bad)
fsubr
cmp
call
imul
in
inc
xabort
dec
stc
pop
out
nop
pop
sti
mov
adc
jecxz
stos
xor
mov
cmc
sbb
test
mov
loop
lods
push
mov
gs
mov
jae
jns
(bad)
sar
dec
jo
(bad)
push
cs
jne
jns
repnz
sub
push
mov
aam
pop
retf
ret
cmp
fwait
push
or
test
push
pop
mov
lods
inc
push
cdq
jae
add
adc
cmp
bound
(bad)
pushf
push
add
inc
test
sahf
push
movs
imul
mov
pop
pop
adc
pop
inc
dec
stc
pop
clc
cwde
les
test
xchg
pop
mul
popf
leave
or
sbb
lods
xor
push
cmp
pop
mov
mov
push
or
out
shl
add
jle
retf
push
jnp
mov
sub
adc
clc
push
cmp
jg
mov
sub
(bad)
je
hlt
push
jl
aas
sub
xlat
mov
sbb
xchg
dec
pop
arpl
mov
or
jae
out
xchg
nop
test
retf
add
mov
es
xchg
xor
fwait
jo
gs
mov
out
stos
(bad)
ds
push
lahf
push
scas
arpl
add
jnp
ins
jle
fisub
movs
jge
scas
lea
or
clc
repnz
inc
(bad)
hlt
popf
cwde
sbb
fistp
and
fdivr
inc
in
std
or
scas
jmp
mov
xchg
or
sub
xchg
cmps
scas
outs
js
fisttp
es
cmps
cmp
jg
sahf
fiadd
int3
dec
push
pop
jne
aas
or
xchg
lods
xchg
add
out
or
pop
or
loop
in
mov
pop
jo
jecxz
movapd
mov
jl
icebp
not
cs
mov
cmp
(bad)
fidivr
pop
int3
and
rol
cwde
das
sar
add
xchg
js
push
jle
loopne
push
inc
jl
inc
cmp
and
jmp
data16
pusha
mov
leave
cmp
test
xchg
pop
add
adc
out
add
int
add
push
add
xchg
sub
xor
mov
mov
ss
iret
sahf
dec
sbb
xor
in
call
je
popa
jb
mov
sub
fdiv
clc
adc
dec
mov
and
cmp
out
sbb
out
inc
es
movs
rcr
dec
and
and
mov
cmp
(bad)
pop
sar
test
sbb
push
sbb
das
fbstp
push
adc
jge
ja
jo
pop
dec
sbb
std
xchg
imul
ror
and
jns
pop
imul
adc
inc
icebp
call
dec
arpl
inc
(bad)
mov
mov
iret
cmp
jmp
ins
fldlg2
mov
mov
adc
(bad)
fild
xor
not
test
fistp
dec
xor
sub
stc
sub
jmp
dec
sub
fmul
popa
cli
mov
xor
xor
inc
fidivr
(bad)
mov
jns
out
mov
or
cmp
add
stos
mov
adc
cli
shl
cdq
imul
lock
pop
pop
stc
sbb
jle
dec
sti
in
or
sti
xchg
xchg
mov
loopne
jg
push
push
movs
pop
ror
ins
or
int3
mov
addr16
enter
cmps
jbe
int3
push
jmp
jg
test
daa
imul
mov
lds
int
mov
add
jmp
sbb
popf
cdq
(bad)
(bad)
arpl
mov
dec
sbb
and
or
test
xchg
repz
adc
mov
inc
rcl
pop
dec
int
ins
push
mov
and
mov
scas
sub
dec
mov
sbb
out
sub
mov
call
jno
test
(bad)
mov
cmp
into
lods
aaa
pop
jmp
(bad)
mov
(bad)
mov
repz
(bad)
mov
movs
fst
leave
jb
test
push
mov
inc
(bad)
jnp
mov
jecxz
xor
mov
xchg
mov
pop
cli
xor
rcr
mov
dec
pushf
retf
pop
inc
or
fcom
push
outs
cmp
or
pop
pop
sub
mov
inc
cs
and
nop
in
or
adc
(bad)
pop
retf
aaa
arpl
pushf
cwde
sub
int3
(bad)
imul
outs
lds
in
inc
xchg
jmp
mov
ja
cs
mov
pop
jnp
js
(bad)
mov
push
inc
ret
imul
inc
je
mov
es
cld
out
push
dec
(bad)
enter
adc
mov
cmp
add
pop
clc
les
fs
pop
popf
add
fst
jle
dec
sbb
sbb
sub
cs
dec
or
sete
shr
pop
out
push
repnz
sub
add
rol
and
inc
dec
loop
in
push
(bad)
or
push
ss
ficom
daa
fstp
sub
jae
out
xlat
dec
ins
cwde
scas
mov
test
mov
dec
jmp
mov
stos
add
add
outs
mov
jle
jge
adc
mov
dec
inc
rcr
(bad)
loop
leave
scas
lods
or
cdq
aad
add
fdivr
add
sahf
pop
jbe
bound
test
ss
or
fadd
out
movs
jl
xor
jnp
push
adc
js
lahf
cdq
not
ins
adc
sub
mov
push
in
enter
adc
jno
retf
cmp
xor
cmp
fidiv
add
mov
out
push
sub
push
int
pop
pop
fwait
mov
hlt
pushf
ins
mov
(bad)
test
pop
mov
nop
add
mov
push
inc
dec
push
cdq
mov
add
call
cmp
scas
shr
jno
mov
push
add
lods
shl
std
mov
sar
cli
fbstp
stc
stos
xor
mov
inc
mov
and
jae
out
jecxz
sbb
mov
jp
fwait
cmp
push
test
pop
imul
adc
or
jne
adc
mov
fidivr
in
in
repz
xchg
push
xchg
and
test
out
and
xchg
sahf
mov
imul
mov
adc
imul
adc
cs
sub
pop
scas
out
push
lock
add
sub
mov
jmp
jg
jno
jnp
ja
cmp
xchg
test
push
je
sahf
jb
xor
push
xchg
inc
dec
push
xchg
rol
lods
sub
jl
xlat
or
mov
jne
pop
repnz
js
lods
hlt
or
les
adc
stc
ret
push
dec
ror
pop
lea
aad
inc
test
stos
push
retf
mov
jns
sbb
xchg
push
push
test
mov
movs
jb
push
ja
xchg
outs
fwait
cmps
sub
mov
cs
not
(bad)
lea
rcr
cmps
mov
xor
stos
loop
jno
xor
lock
and
and
jae
pop
mov
jns
pushf
inc
sbb
adc
or
aad
adc
cs
in
js
clc
pop
cmp
ins
call
test
adc
inc
movs
in
and
mov
call
dec
cld
cmp
out
dec
ins
mov
neg
adc
push
icebp
jno
push
jne
inc
xor
xchg
sbb
aaa
sbb
lock
sti
adc
cld
(bad)
fisub
mov
(bad)
cmp
mov
sbb
mov
jmp
inc
xor
inc
fucom
ss
jae
or
ja
pop
pop
mov
adc
dec
ins
stos
lock
loope
mov
lods
dec
add
lds
(bad)
aad
ret
cmp
enter
aaa
fist
dec
in
mov
into
xor
fild
enter
mov
push
or
adc
sbb
(bad)
scas
push
add
lock
dec
dec
sub
pop
dec
mov
add
(bad)
xchg
fcomp
or
loope
icebp
mov
inc
push
ss
adc
lods
or
and
sti
mov
fucomip
ret
inc
pop
push
mov
cmp
inc
cdq
outs
ds
mov
jno
mov
es
xchg
cmp
sahf
xchg
push
xor
aas
cmc
sub
movs
loop
scas
jae
cdq
and
sub
inc
repz
loopne
mov
pop
movs
cmp
fcomp
mov
stc
add
mov
mov
hlt
sub
rcl
mov
hlt
jnp
idiv
dec
outs
sar
outs
inc
dec
or
pop
push
outs
enter
ss
(bad)
aaa
mov
push
jp
mov
xchg
fidivr
test
fdivrp
add
mov
push
push
pop
shl
add
je
loope
sbb
js
pop
jne
xor
xchg
or
add
push
dec
cdq
push
fisttp
inc
mov
sti
not
xchg
mov
cld
sbb
scas
fldcw
cmp
and
ds
inc
nop
xchg
addr16
sar
pusha
dec
ds
inc
mov
xor
ins
or
(bad)
call
jmp
inc
jmp
sub
adc
dec
jmp
pop
scas
mov
pop
das
stos
stos
lods
int
push
xchg
hlt
adc
into
and
je
int3
fwait
and
dec
push
test
inc
into
mov
cmp
mov
fs
mov
out
shr
clts
xor
hlt
repz
aas
mov
mov
stos
mov
dec
add
pop
enter
mov
call
or
int3
jo
xor
das
mov
cli
gs
imul
push
pop
cli
mov
cmps
shl
pop
push
jbe
nop
inc
sbb
and
mov
jle
das
es
dec
or
rcr
sbb
cli
inc
pop
add
mul
push
and
push
and
jmp
sub
add
dec
lods
gs
pop
fwait
data16
loopne
jl
mov
stos
push
jmp
and
outs
call
out
aaa
xor
sbb
sbb
or
les
lds
cmps
and
fnstenv
mov
repnz
shl
dec
sbb
sbb
mov
xor
and
add
inc
std
inc
and
lahf
xchg
add
pop
inc
or
inc
fisttp
int
mov
out
push
mov
popa
lods
cmp
inc
out
mov
xchg
neg
call
mov
mov
(bad)
and
adc
dec
loopne
xchg
mov
jae
xchg
mov
sahf
das
jge
adc
sub
mov
sub
add
adc
loope
mov
and
test
and
cmp
out
std
shr
cdq
xor
ror
call
sbb
pop
stos
mov
icebp
repz
out
pop
addr16
adc
call
mov
jae
je
cmp
push
cmp
mov
mov
lods
movs
mov
fmulp
dec
cmp
js
mul
loope
push
pop
int3
inc
in
mov
out
ins
add
int
pop
sbb
jp
mov
mov
mov
xchg
out
mov
xor
jno
push
xchg
das
xchg
rcr
xor
xor
mov
push
aam
cs
mov
pusha
(bad)
push
or
sub
ja
push
and
test
in
cmp
xchg
imul
or
pop
cs
adc
xor
and
fistp
or
shr
(bad)
lods
(bad)
(bad)
call
add
inc
jl
outs
jmp
pop
hlt
mov
repz
lahf
aas
cmps
out
or
aaa
push
xor
retf
(bad)
jle
sub
and
mov
leave
push
jg
xor
jbe
cmp
ins
sti
or
xchg
and
xor
mov
add
leave
je
arpl
sub
mov
add
xor
dec
cmc
sbb
mov
fist
test
pop
ds
xor
lds
mov
jnp
das
adc
sub
int3
xchg
jmp
js
scas
int3
jne
cmp
sub
cmp
or
mov
xor
rol
dec
leave
mov
sbb
inc
ret
in
mov
mov
vmovss
sbb
stc
bound
mov
fistp
leave
cmp
dec
pop
sub
(bad)
sub
shr
cld
pop
scas
xchg
inc
not
cdq
ret
call
cmps
popf
ret
cmp
neg
frstor
pop
mov
bound
mov
pop
das
jp
sub
sub
mov
retf
add
jl
jecxz
push
fdivr
xchg
jge
jmp
js
mov
xchg
or
pop
call
fmul
call
mov
mov
aam
shl
mov
and
inc
push
ins
mov
imul
movs
in
cwde
mov
stc
mul
popf
pop
imul
push
jns
out
sub
add
es
or
mov
jbe
inc
in
movs
adc
push
mov
jo
jle
sbb
xor
outs
adc
add
data16
sbb
lds
ficomp
mov
sbb
jne
adc
out
paddsw
cld
adc
pop
lods
ret
xchg
les
cmp
add
(bad)
cli
sbb
fstp
ret
stc
or
mov
and
mov
cwde
add
or
or
lahf
cmp
add
sub
sub
jo
jecxz
mov
test
aad
sbb
or
(bad)
mov
jmp
dec
lods
lock
jae
mov
ret
sahf
mov
xchg
mov
push
or
mov
adc
add
inc
sbb
pop
mov
neg
imul
xchg
mov
sti
and
fnstenv
je
lds
fidiv
push
jns
fldenv
cmc
mov
in
cs
jge
js
pushf
mov
mov
mov
(bad)
and
pop
stos
or
pop
xchg
dec
sub
in
fistp
(bad)
or
inc
xor
sbb
dec
jg
cld
mov
mul
xlat
ds
inc
repnz
xchg
cmp
jmp
inc
add
add
stos
inc
call
(bad)
ror
mov
into
repz
jne
pop
mov
leave
or
int3
mov
pop
cmp
mov
dec
and
fmul
mov
aam
jmp
jle
div
and
pop
pop
jecxz
sbb
shr
pop
sahf
sub
jmp
inc
fcomp
lods
clc
inc
rcr
pop
cmp
jmp
mov
sub
sub
cmc
sbb
cli
xchg
cld
push
push
jmp
or
jnp
iret
push
mov
mov
jg
jg
push
xchg
arpl
pop
sub
pop
adc
stos
retf
add
sti
sbb
das
rol
push
adc
ficomp
cld
sbb
cmp
(bad)
xor
nop
dec
bound
aas
fst
inc
sub
or
in
retf
out
mov
mov
ins
push
or
add
pop
xchg
sbb
push
cmps
lds
idiv
inc
aaa
inc
enter
cmp
sbb
(bad)
dec
dec
pop
arpl
jne
cld
retf
cmp
add
sbb
nop
xchg
jo
mov
inc
(bad)
(bad)
out
int3
bound
jbe
and
xor
lea
pop
int
pop
dec
mov
ja
mov
stos
movs
sbb
outs
add
repz
retf
pusha
ror
clts
mov
inc
js
inc
or
jnp
cmp
mov
mov
cmp
mov
mov
dec
or
xlat
lods
aam
xchg
mov
jl
iret
xchg
mov
(bad)
mov
mov
jmp
pop
aam
retf
or
cmp
call
retf
add
fdivr
es
xchg
sahf
push
jno
out
jmp
aad
inc
and
lods
push
test
cmp
push
imul
sbb
jle
rcl
mov
(bad)
dec
jo
push
jmp
loop
and
cmp
sub
inc
xchg
pop
adc
xchg
pop
rcr
cs
inc
dec
sti
mov
test
cdq
mov
mov
lods
mov
add
in
sub
leave
lock
dec
mov
and
dec
sub
ror
sahf
fs
add
mov
xchg
push
ret
repz
cmp
mov
mov
inc
ja
mov
les
push
inc
xor
rol
lock
std
mov
imul
test
stos
retf
inc
jbe
pop
add
sar
aas
fwait
call
fild
push
xchg
xchg
jl
lods
pop
lock
shr
pop
cmps
inc
xchg
in
push
and
fistp
ret
mov
adc
rcr
cmp
jmp
lock
popa
jns
loopne
ss
pop
inc
cs
cmp
add
sbb
cmp
mov
leave
fwait
and
pop
xchg
fadd
pop
mov
push
lea
movaps
fs
inc
xchg
jno
popf
inc
fidivr
and
rol
daa
jne
sar
inc
push
add
int3
add
icebp
dec
daa
imul
out
fs
dec
pusha
movzx
fsub
retf
jecxz
xor
fld
scas
mov
jne
dec
retf
sbb
popf
shr
ss
add
gs
mov
and
xchg
push
and
sbb
mov
and
cmp
mov
loop
cmp
(bad)
dec
clc
add
inc
sbb
add
pusha
jns
cmp
pusha
xor
push
or
stos
or
push
xor
push
dec
inc
icebp
(bad)
push
adc
fisub
ja
lahf
popf
pop
add
mov
(bad)
mov
ss
and
sbb
mov
sub
stos
mov
and
movs
cmp
popa
loope
jmp
cdq
cmps
hlt
inc
imul
icebp
or
xor
in
mov
dec
mov
into
je
sahf
gs
psrld
cmp
sub
push
push
jmp
sbb
(bad)
les
fs
mov
cmps
call
inc
and
xchg
stos
inc
push
sbb
(bad)
sub
add
sbb
cmps
add
fsub
arpl
jle
js
(bad)
femms
in
jl
xchg
idiv
int3
mov
fldcw
ins
daa
outs
mov
pop
xor
scas
fs
mov
mov
adc
jle
clc
xor
jb
mov
fst
mov
test
test
push
xlat
std
mov
sub
sti
ins
pop
out
sub
out
push
sahf
stc
ud1
push
xor
je
aad
aas
sub
mov
mov
test
sar
and
retf
mov
pop
in
adc
(bad)
imul
inc
popf
mov
mov
or
push
pop
xchg
and
imul
or
pop
and
or
push
pop
aam
(bad)
je
dec
jno
sub
loop
or
mov
xor
fild
jmp
retf
clc
aaa
inc
xor
mov
pop
shl
scas
cmc
mov
mov
jge
data16
jecxz
jl
sub
addr16
push
in
jb
jg
or
lea
jge
repnz
xor
std
mov
cmps
xchg
dec
dec
sbb
cmps
dec
je
cmp
adc
adc
and
adc
pusha
pushw
or
nop
ins
mov
in
inc
push
cmps
sbb
call
rdmsr
aaa
pop
int3
dec
pop
fcomp
sub
inc
mov
inc
std
in
mov
push
std
leave
out
push
dec
adc
dec
test
ret
loopne
pop
sub
push
int
push
pop
outs
aad
cs
out
scas
jmp
test
lock
ins
stos
inc
mov
cld
jbe
push
into
or
mov
imul
mov
into
mov
mov
sub
sub
ret
ins
sahf
rol
out
pop
jne
into
or
ja
imul
aam
(bad)
push
mov
stos
nop
pop
sbb
xchg
or
jbe
fnstcw
movlps
(bad)
cmc
lock
add
adc
mov
mov
test
xchg
mov
into
mov
jae
movs
mov
(bad)
cli
push
ja
sbb
test
lea
pushf
ret
push
popa
out
(bad)
push
arpl
rcr
add
nop
lea
push
mov
push
(bad)
leave
xchg
sbb
mov
(bad)
push
leave
mov
add
fs
mov
stos
(bad)
mov
sbb
cli
shl
mov
mov
js
loope
sar
sar
sub
jbe
(bad)
(bad)
ja
idiv
or
add
lods
adc
add
dec
and
fldcw
dec
clc
int3
(bad)
in
push
je
jp
into
inc
adc
aad
cmp
in
or
stos
prefetchw
cmp
and
int3
adc
sbb
ds
pop
icebp
ins
mov
jp
fbld
push
(bad)
enter
rcl
and
fs
jmp
stos
enter
(bad)
mov
(bad)
mov
jecxz
pop
pop
sbb
push
lods
fs
lods
sqrtps
mov
lods
sbb
loope
call
inc
mov
fcmove
dec
add
cmp
mov
pop
es
icebp
aam
int3
xor
not
mov
inc
(bad)
clc
fcomp
int
and
ficomp
inc
pushf
ss
mov
movs
mov
push
inc
adc
je
popf
jg
adc
cs
jne
ret
jae
push
pop
cmp
push
pop
pop
pusha
xchg
ja
cmp
xchg
outs
mov
int3
mov
xchg
pop
push
adc
(bad)
adc
pop
fwait
call
ret
sbb
mov
inc
or
inc
add
(bad)
and
push
fst
dec
shl
enter
aas
dec
es
jg
cmps
inc
mov
retf
dec
mov
and
stc
fadd
rol
add
mov
jo
loope
loop
xor
xor
sbb
xlat
pop
scas
jmp
call
cli
sar
push
jno
stc
bound
push
push
mov
push
and
jbe
hlt
xchg
jnp
ret
(bad)
jmp
(bad)
stos
icebp
in
ret
rcr
cmps
(bad)
push
aas
ins
ss
pushf
mov
cmp
inc
sbb
outs
imul
xchg
cmp
cdq
into
push
cmp
lds
xchg
loopne
sahf
mov
xor
jp
mov
and
jmp
in
jle
pop
bound
icebp
push
push
push
sbb
ins
ins
push
es
inc
xchg
es
mov
dec
mov
push
push
pop
sub
(bad)
sbb
(bad)
lds
in
imul
mov
cmp
cmp
xor
int3
dec
fsub
xchg
pop
and
loopne
jns
sbb
leave
and
pop
pop
add
pop
in
mov
pop
ins
jmp
push
mov
pusha
repnz
dec
pop
(bad)
cdq
cli
mov
iret
and
std
jno
jns
mov
adc
sub
pop
dec
call
ins
or
add
pop
out
popa
push
data16
or
sub
(bad)
fistp
das
retf
not
adc
pop
add
pop
aas
dec
mov
xor
xor
ins
fcmovne
(bad)
test
fadd
pop
fsub
xor
jae
cs
xor
adc
and
cmps
(bad)
jecxz
xor
rcr
sub
imul
ins
ins
stos
jp
push
sbb
fmul
dec
mov
mov
xor
shl
jg
dec
push
pop
js
cdq
dec
test
leave
push
cli
outs
adc
(bad)
mov
mov
xor
pop
(bad)
adc
dec
inc
cmc
pop
or
adc
cmp
leave
mov
adc
mov
repnz
push
adc
movs
retf
dec
fsubr
push
add
dec
sub
push
mov
jns
lods
xor
stos
sub
test
mov
outs
adc
pop
ror
in
je
jae
fcom
mov
cwde
bound
cdq
fs
push
jmp
push
sub
mov
mov
(bad)
push
leave
sbb
je
call
dec
sahf
in
ins
rol
and
imul
inc
movs
cmp
pop
call
push
sti
jg
mov
retf
mov
pop
jns
push
sar
xlat
daa
(bad)
dec
(bad)
cld
sbb
xor
sbb
fwait
xor
bound
test
xlat
test
pop
dec
sub
fadd
pop
repz
and
in
addr16
test
inc
xchg
nop
add
mov
xchg
fadd
sub
mov
adc
cmp
xchg
fiadd
jbe
xchg
xor
out
mov
or
fs
jnp
jl
dec
dec
fmul
sbb
(bad)
lds
test
das
or
push
sar
mov
outs
outs
jecxz
inc
dec
pop
loope
xor
rol
clc
sbb
pop
jge
sub
xchg
cmp
mov
xlat
jo
ss
(bad)
sbb
lea
adc
imul
clc
fbstp
sub
cmp
mov
push
ss
and
mov
mov
mov
dec
mov
xchg
imul
jno
pop
jae
(bad)
mov
movs
mov
dec
push
(bad)
(bad)
test
mov
xor
and
xchg
fistp
jo
inc
scas
rep
mov
lahf
inc
ret
inc
jmp
push
outs
neg
sub
call
adc
inc
inc
jo
addr16
inc
dec
outs
or
int
dec
sub
in
test
adc
retf
ret
push
out
push
push
adc
je
cmp
xor
fsubr
push
adc
lock
outs
mov
inc
mov
mov
and
mov
scas
cdq
mov
bound
mov
gs
cmps
cmp
adc
imul
add
xchg
lock
sub
bound
(bad)
out
sar
leave
mov
sbb
mov
hlt
pop
mov
or
sbb
sbb
and
(bad)
retf
repz
lods
jno
jp
movs
std
mov
ror
or
xchg
or
jmp
add
pop
js
cmp
into
push
dec
dec
cmp
sbb
xchg
adc
pop
repz
addr16
sti
push
dec
imul
movs
xchg
mov
xchg
jecxz
dec
adc
(bad)
daa
sub
sbb
jae
add
dec
or
pop
inc
out
sub
stos
xchg
dec
cmp
add
push
clc
xorps
mov
cld
mov
jmp
mov
sbb
push
pop
ret
rol
lea
mov
sar
(bad)
lea
or
push
cs
pushaw
jmp
ins
and
test
adc
mov
ins
dec
mov
outs
pop
rcr
cs
dec
add
stos
cmc
cmps
pop
cmp
pop
dec
mov
xor
sub
repnz
sbb
aas
cmp
jge
mov
xchg
inc
xchg
mov
xor
mov
cmp
mov
es
popa
in
dec
mov
push
xchg
ins
dec
ins
in
fcomp
cmc
add
lock
jge
pop
xchg
jo
adc
jae
lods
xor
fbstp
cmps
mov
or
push
pop
(bad)
loop
pusha
int
sbb
sti
dec
inc
movs
scas
into
mov
mov
sbb
stos
mov
imul
sub
sbb
ret
push
fsubr
mov
fild
fwait
adc
xchg
cmps
(bad)
aas
sub
sub
add
cmp
cmp
pop
sbb
and
push
retf
xor
in
mov
aam
(bad)
and
xlat
daa
dec
xor
fiadd
and
dec
cmp
aam
ja
dec
dec
je
adc
xchg
adc
fild
cdq
push
dec
jmp
das
jns
fldenv
pop
out
fwait
data16
js
repnz
xchg
cmp
mov
outs
jmp
sbb
lock
mov
mov
and
adc
add
out
retf
dec
loop
sbb
dec
div
or
dec
popf
jne
lods
or
stos
js
add
sub
xchg
stos
xchg
aam
cmp
stc
mov
test
out
into
enter
out
mov
jb
arpl
mov
inc
sub
pop
stos
jae
xchg
in
sub
neg
and
cs
leave
sub
add
leave
adc
pop
(bad)
in
sti
mov
pop
add
sar
not
push
jae
sbb
pop
or
dec
sbb
(bad)
std
stos
push
cli
addr16
sbb
sar
mov
mov
sbb
rol
idiv
mov
jae
pop
ror
xor
cmp
jno
adc
xchg
sub
cmp
fdivr
xchg
add
(bad)
into
cmp
popa
lods
ftst
out
or
ss
xor
fcompp
pusha
xor
aam
sar
inc
mov
or
lea
outs
push
das
jns
xchg
es
fcom
out
hlt
pop
mov
jae
ja
and
xchg
add
in
test
neg
xchg
and
and
push
dec
jne
pushf
clc
sahf
xchg
loope
mov
neg
(bad)
push
xchg
fidivr
push
int3
sub
cmps
pusha
adc
in
loopne
in
jmp
sbb
mov
and
call
sahf
je
mov
pop
xchg
sub
ror
repz
ss
mov
mov
cmps
fdivr
xlat
jb
xchg
mov
pop
addr16
push
out
aam
adc
cmp
and
sbb
cmc
(bad)
push
jmp
pop
in
movs
mov
shr
jne
add
push
adc
in
ds
call
or
mov
int
or
cmps
lods
lods
adc
mov
hlt
shl
sub
ins
cmp
das
popf
xlat
cdq
jp
xchg
cmp
or
mov
dec
adc
push
test
pop
into
add
std
sbb
fs
repnz
sti
lods
xchg
inc
in
mul
test
fst
int
cmp
adc
repnz
lahf
adc
mov
push
mov
je
sub
fdivr
out
fist
inc
inc
xchg
lods
xor
pop
in
push
dec
ins
add
xchg
cld
inc
push
mov
add
lock
sub
jle
or
bound
cmp
xor
mov
es
call
dec
dec
inc
jne
loope
imul
or
inc
add
ror
or
fcom
enter
shl
dec
mov
jae
and
jbe
inc
loop
outs
sub
repz
jo
adc
les
iret
ins
cwde
pop
(bad)
test
das
div
aaa
xchg
mov
adc
pop
js
push
xlat
out
xchg
mov
(bad)
js
sbb
fisubr
push
mov
sbb
test
lods
and
stc
ret
test
inc
mov
lods
pushf
js
mov
fidiv
(bad)
imul
pushf
dec
dec
bswap
gs
xchg
out
mov
xor
out
cwde
add
mov
pop
xor
dec
loopne
in
out
adc
or
adc
dec
ror
cwde
pushf
cmp
mov
jp
int3
rol
iret
and
cmp
ins
inc
sbb
cmp
in
cmp
jg
or
out
mov
push
in
(bad)
mov
or
mul
cmc
ins
xor
test
xor
push
int3
jg
es
jl
sub
pop
jmp
psubsw
gs
jl
xchg
stos
jg
jge
(bad)
cld
push
jno
cmps
movs
mov
lods
fwait
mov
cmps
xor
mov
fist
add
xor
jmp
jle
xchg
xlat
mov
sbb
pop
lock
dec
dec
add
adc
sti
test
aad
xor
movs
outs
repnz
push
xchg
and
adc
lods
and
jnp
add
jnp
and
mov
add
call
dec
out
xchg
or
adc
rep
(bad)
push
xchg
popf
jg
mov
(bad)
cmp
lods
bound
jbe
adc
mov
add
jnp
(bad)
sahf
add
data16
inc
fldenv
ja
enter
pushw
movs
add
jecxz
rol
shl
stc
(bad)
int
pop
sub
xor
jge
fwait
retf
mov
inc
nop
call
sbb
into
push
add
adc
add
fcmovne
pop
jl
push
fwait
outs
cmps
loop
hlt
test
jne
push
ss
rcl
jg
add
cmp
and
ret
fwait
push
xchg
test
push
xchg
dec
(bad)
or
cdq
push
mov
popf
mov
jno
add
pop
int3
cmp
xchg
dec
repz
jle
inc
or
sub
push
add
test
xchg
push
sub
or
cli
sbb
cmp
cmps
sti
mov
aad
push
lahf
jle
mov
mov
scas
aaa
ja
xchg
sahf
daa
push
add
pusha
imul
loope
sbb
cld
cmp
add
mov
lds
jbe
outs
push
xchg
mov
sub
jns
inc
enter
(bad)
pop
loopne
add
or
xor
xchg
xchg
test
inc
dec
arpl
push
and
xor
and
xor
inc
cmp
add
add
sbb
aas
(bad)
mov
cmp
mov
sbb
mov
mov
in
sahf
push
and
inc
mov
test
push
jmp
push
push
popf
xor
pop
mov
xor
stos
pusha
push
out
xlat
ret
sbb
sub
sbb
sbb
sub
push
rcr
or
stc
mov
cmc
dec
mov
xchg
mov
inc
in
scas
mov
sub
xor
frstor
mov
fiadd
cmp
or
push
cmps
repnz
jno
mov
push
sbb
imul
mul
or
ret
inc
jno
in
inc
fimul
out
mov
ins
clc
pop
cmp
jno
test
push
sbb
cmp
and
pop
and
fcomp
stos
std
dec
jmp
xor
icebp
dec
mov
xor
inc
mov
push
cli
ins
mov
inc
out
push
jl
nop
sbb
jle
pop
mov
or
xlat
xchg
jne
xchg
mov
pop
mov
sahf
mov
(bad)
cmp
call
arpl
popf
mov
lahf
shr
push
(bad)
ins
adc
ret
push
jmp
mov
xchg
or
sub
dec
bsr
xor
push
xchg
and
(bad)
xor
inc
xor
dec
test
jge
aam
mov
(bad)
loopne
adc
ret
inc
lock
frstor
xor
mov
push
jmp
xor
jg
jecxz
cmp
xchg
popa
sbb
out
mov
xchg
movs
in
or
pop
sbb
mov
rcl
and
retf
std
iret
push
xor
ds
call
mov
lock
pushf
sbb
jg
or
js
lock
pushf
xor
mov
shr
cmc
or
push
xor
(bad)
outs
aad
out
fs
hlt
xchg
inc
xchg
dec
push
fwait
adc
popf
test
imul
push
sub
xchg
add
xor
mov
sbb
mov
cs
outs
shl
mov
call
push
loop
xor
rcl
into
daa
xchg
xchg
cs
bound
mov
fiadd
and
cmc
mov
jl
mov
push
inc
add
xchg
jae
push
cld
push
push
fcomp
add
sahf
jl
arpl
arpl
jecxz
mov
test
cdq
pop
je
movs
push
cmps
rcl
(bad)
popa
inc
xchg
fist
add
clc
in
imul
sbb
xchg
xor
pop
movs
jmp
shr
sbb
mov
or
adc
pop
xabort
jp
adc
push
mov
call
jae
xlat
xchg
dec
es
cld
pop
adc
or
(bad)
je
push
and
dec
in
jmp
cmc
push
loop
pusha
sbb
sbb
xchg
push
out
dec
mov
movs
test
aaa
pop
inc
push
into
jae
push
std
ins
stos
pop
imul
add
or
ins
jmp
push
cmp
shl
inc
into
xchg
outs
movs
xor
adc
aad
mov
mov
push
sub
cmp
loope
lahf
add
sub
aam
leave
jmp
test
fstp
push
ficom
push
fs
jl
pop
test
scas
push
xor
or
xor
sahf
sahf
cmp
(bad)
into
mov
push
test
pop
loope
stc
sub
xchg
fneni(8087
inc
outs
inc
add
dec
jl
dec
pop
ficom
add
outs
cli
outs
call
loopne
xor
xor
sub
out
pop
adc
mov
sbb
jns
les
ins
imul
aad
(bad)
repz
and
xchg
dec
push
bts
xchg
out
mov
and
call
xor
data16
xchg
jb
icebp
pop
jnp
jb
pop
ret
scas
mov
stc
into
mov
aad
pop
jnp
fstp
popf
jmp
mov
pop
(bad)
xchg
rcr
dec
aas
icebp
je
pop
les
movs
add
popa
je
fwait
jmp
clc
push
cmovo
test
sub
cmp
jmp
cs
jno
enter
test
mov
xor
and
imul
and
stos
push
and
int
(bad)
in
adc
std
inc
dec
dec
inc
loope
std
push
and
jns
test
and
inc
pusha
sub
push
les
outs
xchg
pushf
pop
sub
je
add
mov
not
arpl
cmp
mov
aad
mov
aas
inc
jo
inc
not
arpl
sbb
mov
daa
test
push
pop
mov
dec
into
and
jecxz
sbb
(bad)
loopne
jge
test
jmp
addr16
mov
or
mov
inc
pushf
mov
and
jg
push
hlt
push
jg
mov
cmp
push
int3
pop
xchg
faddp
mov
loop
push
or
pop
imul
or
cdq
cmp
movs
dec
sub
retf
rcl
imul
scas
in
dec
(bad)
je
adc
scas
sub
xlat
cmp
xor
fadd
mov
stos
sti
push
pop
jns
in
lea
xchg
(bad)
in
nop
int
lods
cmp
jb
fdiv
mov
in
add
pop
inc
cmp
or
pushf
outs
lea
pop
daa
fldcw
pop
mov
cmps
aad
aaa
in
mov
out
cmp
cs
sbb
dec
or
push
jb
lock
call
dec
mov
and
fstp
jae
adc
push
mov
pop
push
call
hlt
dec
push
leave
ja
ins
stos
sub
ror
mov
inc
lods
jmp
popa
aas
fidivr
push
nop
lods
pop
or
es
cdq
mov
xor
push
lahf
jns
pop
jmp
mov
fldcw
xchg
add
xlat
add
fwait
es
add
cwde
sbb
aam
test
rcr
cmp
shl
cmps
leave
mov
fwait
xor
inc
add
add
dec
and
sbb
fdivr
out
loop
adc
xchg
mov
(bad)
jne
adc
dec
in
xor
mov
cmps
or
pop
pop
clc
push
ret
mov
inc
jo
test
mov
push
jns
stos
es
jg
xlat
js
out
cmc
aas
or
test
fimul
fldenv
dec
retf
jmp
cmp
gs
sbb
call
aad
inc
sub
xlat
mov
icebp
fs
call
jmp
pop
adc
out
(bad)
cld
stos
test
cmp
or
dec
scas
push
pushf
outs
jae
sbb
jnp
out
cs
xchg
lods
(bad)
xchg
(bad)
push
cmp
mov
cli
int
inc
mov
mov
mov
outs
xchg
imul
aam
leave
stc
sbb
or
jnp
pop
mov
pop
ror
cli
(bad)
mov
jbe
mov
clc
jp
jecxz
rol
cmp
icebp
not
fsubr
push
daa
jbe
xchg
and
mov
lods
les
fnsave
cmp
jmp
cwde
xchg
scas
ss
mov
into
xor
sub
mov
out
les
nop
cmp
mov
out
test
jecxz
out
dec
pop
mov
sbb
jecxz
cmp
sbb
dec
int3
sub
or
push
xor
dec
fs
cmp
sub
cmp
or
or
mov
mov
xchg
rol
push
sub
add
mov
fistp
mov
outs
xor
xlat
sub
lods
adc
pop
fiadd
cwde
and
sub
jo
push
neg
xor
leave
mov
xor
inc
ror
push
inc
mov
mov
call
stos
(bad)
pop
cdq
mov
aam
and
test
repnz
mov
and
and
das
out
ret
out
pusha
mov
je
xchg
(bad)
sbb
fdiv
cmp
ret
fidivr
sub
dec
adc
ror
lea
test
sbb
xor
fadd
rcl
xchg
cmp
push
inc
aad
inc
jmp
push
lahf
add
and
fucomp
cmp
push
and
jge
push
(bad)
into
js
push
cmp
out
std
push
mov
mov
and
inc
xor
cwde
cwde
mov
push
sahf
pop
fiadd
stc
lea
call
and
cmp
dec
data16
jge
sbb
xor
inc
pop
jnp
push
inc
pop
aas
fist
jecxz
lea
sbb
nop
ret
es
mov
or
mov
mov
icebp
sub
jnp
mov
dec
shl
mov
popf
scas
mov
pop
stos
out
mov
xor
jae
or
sahf
(bad)
(bad)
cmps
xchg
jecxz
(bad)
and
dec
jno
mov
mov
and
fidiv
pop
pop
mov
and
cmp
mov
sub
xchg
(bad)
fwait
imul
sub
push
push
xor
(bad)
fucom
mov
repz
rcl
jmp
ss
retf
cmp
adc
bound
cmp
aam
push
jge
loopne
add
cli
inc
jecxz
dec
mov
fsub
xchg
mov
fist
xchg
movzx
arpl
aad
(bad)
das
sub
xor
or
cdq
retf
call
jge
jnp
lahf
repz
xchg
pop
mov
dec
rcr
(bad)
cmp
adc
pop
gs
push
into
lods
and
or
(bad)
fdiv
sbb
sahf
or
sti
adc
mov
les
loop
int
mov
push
std
jae
mov
pop
push
ins
push
or
xchg
sbb
mov
repz
mov
sbb
aam
fs
sti
mov
dec
mov
mov
or
nop
addr16
scas
add
dec
ds
dec
sbb
sub
pop
xchg
pop
mov
pop
xor
add
in
retf
ret
imul
jmp
aam
mov
xchg
out
loope
pop
cmp
xlat
cli
cmp
inc
or
lods
aas
mov
xor
ja
jno
jle
movs
pop
pop
pop
ror
psadbw
fstp
push
and
jno
or
sub
mov
adc
arpl
iret
push
stc
lea
loop
(bad)
mov
popf
retf
js
xor
cmp
mov
xchg
fild
cmp
xchg
ins
sbb
out
mov
dec
mov
mov
sbb
imul
fist
dec
push
fdivrp
add
das
popa
cli
mov
mul
mov
sti
fimul
mov
sub
mov
xor
cld
xchg
pop
aam
xor
test
mov
and
or
jno
aas
pop
pop
stos
mov
cmps
mov
call
xor
arpl
and
movs
jnp
movs
mov
mov
sbb
popf
xor
pop
div
mov
pop
push
add
push
mov
not
das
xchg
jno
loopne
(bad)
sbb
hlt
xchg
jg
xchg
jl
jae
idiv
(bad)
pop
leave
pop
test
add
mov
or
ins
repnz
jo
or
mov
cmove
push
dec
and
pop
xor
out
dec
add
shr
in
sbb
iret
popf
cmp
lods
cmp
sbb
add
shr
fisub
jmp
push
xor
sti
cmc
aaa
int
inc
leave
jne
shld
aas
push
out
xbegin
cmp
push
xor
out
(bad)
pushf
jo
call
inc
fwait
mov
xchg
jnp
cmp
mov
add
cmp
ja
aam
or
in
push
adc
fidivr
pushaw
out
cli
inc
shl
push
mov
arpl
in
mov
jp
ins
sbb
hlt
mov
aaa
adc
mov
dec
ret
lock
(bad)
xchg
jae
out
out
bound
mov
iret
push
jae
pop
jbe
and
mov
cmc
cmc
cmps
mov
jle
cmps
test
int3
in
arpl
cs
imul
fcomp
jge
lods
dec
mov
sub
test
sub
cmp
and
inc
dec
xor
jecxz
inc
cmp
inc
int
dec
mov
in
mov
daa
cld
xor
adc
push
jno
push
dec
pop
adc
mov
pop
pop
inc
pusha
sbb
mov
popf
imul
(bad)
cmps
jb
and
iret
pop
(bad)
jnp
call
dec
fptan
out
dec
fs
(bad)
cmp
xlat
(bad)
jecxz
jl
aas
pop
sub
pusha
pop
ret
mov
push
ret
rol
out
cmp
dec
push
stos
test
into
rcl
mov
test
or
pop
xchg
push
push
xchg
sbb
(bad)
mov
shl
gs
aas
jnp
dec
and
jnp
mov
sahf
aam
push
(bad)
sbb
dec
lahf
inc
icebp
mov
and
test
xor
mov
or
mov
and
adc
in
pop
pop
hlt
sbb
sar
aaa
sbb
push
sub
not
int3
jnp
sub
clc
int3
aam
xchg
loop
nop
jg
xchg
gs
out
inc
jmp
jl
std
stos
xchg
loopne
test
mov
inc
mov
inc
into
add
outs
jno
mov
frstor
jne
adc
inc
mov
cld
jge
ds
xor
rol
adc
push
out
xor
test
mov
xor
hlt
loopne
pusha
das
mov
pop
xchg
sar
pop
push
push
sbb
dec
mov
test
imul
jmp
xchg
cmp
inc
sbb
lock
inc
ins
cmp
inc
dec
fnstcw
mov
jmp
imul
push
or
cmp
mov
sbb
inc
add
dec
(bad)
shl
push
je
adc
arpl
fisubr
pop
int3
mov
mul
test
rcl
iret
(bad)
xor
lods
inc
icebp
add
sbb
sub
fsubr
xchg
pop
(bad)
sub
pop
popa
lea
aaa
popf
stos
xchg
xchg
dec
arpl
(bad)
fwait
lahf
dec
lds
das
stos
gs
pop
push
adc
mov
xor
shr
icebp
out
cmp
cmp
sbb
or
out
call
adc
lahf
cmp
mov
cld
sbb
jecxz
push
adc
inc
lods
stc
inc
ins
mov
sub
and
and
test
div
fucomi
and
jno
ins
nop
sub
and
sub
dec
nop
(bad)
into
jno
popf
push
out
dec
push
xchg
test
pop
adc
dec
mov
jae
cdq
inc
frstor
mov
test
mov
test
xor
xchg
out
xor
icebp
lahf
popf
xchg
fimul
sbb
mov
sub
mov
retf
jge
mov
mov
push
mov
addr16
adc
xchg
stos
loop
xchg
or
or
sub
leave
nop
es
ret
dec
cmp
jne
(bad)
xor
xchg
in
mov
jmp
mov
iret
and
hlt
sub
cli
cmps
(bad)
out
fcom
stos
scas
or
mov
sbb
cdq
fs
xchg
aaa
aaa
retf
not
fcom
xchg
cmp
in
stos
fnstenv
cs
movs
dec
icebp
pop
pusha
ja
xor
mov
xchg
dec
jbe
cmps
sti
sub
mov
dec
mov
(bad)
scas
mov
stc
lods
sbb
les
gs
(bad)
out
movs
adc
test
push
and
dec
fst
sbb
inc
mov
fst
mov
rcl
call
xor
fldcw
xor
iret
or
test
mov
jbe
jmp
push
and
fdivr
lods
sub
pop
mov
out
shl
and
ds
mov
xchg
out
pusha
sub
out
cld
add
sbb
adc
ss
(bad)
sub
(bad)
int3
adc
mov
mov
pop
inc
mov
js
cdq
into
iret
dec
aaa
into
jns
movs
mov
pop
sub
ja
call
mov
popa
jmp
call
cmp
std
ds
ja
fisub
scas
jl
xor
inc
dec
std
ss
je
pop
loop
aam
lock
mov
cs
out
mov
div
add
in
xor
aaa
mov
and
cs
push
gs
xor
fcomp
mov
inc
xchg
mov
or
fld
popa
sar
push
jnp
rcr
jmp
mov
jnp
fild
sbb
retf
lahf
test
jno
stos
cmc
cmps
cmc
(bad)
lock
lahf
push
jecxz
rcr
sbb
lods
call
rol
cmp
call
inc
add
sbb
cmc
std
dec
retf
cmps
cmps
je
push
ficom
push
or
mov
push
test
int
icebp
rol
adc
mov
pop
(bad)
push
fdivr
dec
dec
inc
sbb
xor
jno
je
mov
loope
js
xor
inc
cld
inc
or
add
jo
xor
sbb
out
xchg
mov
(bad)
in
mov
cdq
pusha
xor
iret
or
push
sbb
or
shl
xor
jno
pop
push
sub
fcomp
ret
pop
stos
inc
repnz
xor
mov
scas
js
iret
pop
int
mov
adc
(bad)
mov
mov
enter
dec
xchg
pop
in
cs
sbb
fstp
mov
pop
mov
pop
idiv
std
add
mov
movs
jmp
mov
sbb
xor
hlt
or
pusha
cld
ror
push
cwde
and
push
push
or
jg
add
ins
movs
imul
sahf
and
lock
add
retf
mov
dec
sbb
cmp
jbe
pop
mov
(bad)
into
repnz
jmp
ss
dec
xchg
sti
imul
fsub
cmp
add
mov
ret
inc
jle
push
mov
and
push
xor
(bad)
ins
imul
loop
cmp
mov
jg
popf
dec
cmp
jns
out
rcr
(bad)
sahf
fist
inc
jp
and
or
loope
mov
neg
aad
add
enter
fcomp
cld
lock
dec
rcr
adc
imul
and
xor
add
mov
jo
jb
inc
inc
clc
adc
jg
fsubr
jns
sti
lock
mov
scas
call
add
jmp
fisubr
fidivr
mov
xchg
mov
in
icebp
push
dec
fst
push
pop
(bad)
xor
stc
adc
and
cmps
(bad)
cld
xchg
mov
scas
and
sbb
leave
cwde
sub
jge
xor
cmp
aam
mov
imul
inc
push
sbb
lods
loopne
mov
inc
or
and
cmp
pop
or
or
loope
mov
push
pop
push
mov
xlat
nop
sbb
adc
add
mov
lods
nop
add
scas
out
dec
sbb
inc
out
in
fs
jg
es
mov
jle
jns
inc
into
retf
or
cmp
pop
not
push
loop
fidiv
rcl
pop
push
retf
jb
inc
sbb
lods
cwde
mov
loopne
in
call
cmps
jmp
shl
mov
lods
repz
test
xchg
push
arpl
jge
adc
iret
cmp
lea
xchg
mov
out
mov
repnz
aaa
sbb
pop
mov
xor
xor
cmp
push
std
lds
jno
jmp
popa
cmps
mov
popf
add
push
push
in
pushf
stos
mov
sbb
sahf
pop
mov
mov
ja
adc
ins
jle
ins
pop
xor
mov
inc
jl
push
cmp
loope
xlat
jecxz
out
push
cmp
xchg
inc
push
mov
fimul
arpl
cmc
jne
(bad)
iret
mov
mov
dec
pop
mov
cli
sbb
xchg
cmp
adc
dec
fwait
cwde
int3
xchg
and
and
cli
jp
arpl
and
add
mov
and
xor
paddb
shl
dec
cdq
pop
movs
mov
inc
movs
inc
pop
sub
pop
(bad)
cmp
push
sub
fmulp
jo
and
stc
mul
add
test
sub
sub
mov
inc
mov
mul
(bad)
sbb
imul
jb
mov
adc
shl
dec
loopne
scas
pop
dec
mov
xor
mov
in
(bad)
in
loopne
test
xor
outs
sub
repz
call
ficom
lods
jne
and
ret
dec
cmp
out
dec
xchg
nop
lods
mov
inc
and
jbe
jb
inc
movs
mov
push
frstor
cmp
stos
mov
mov
cmps
stos
or
fwait
inc
jmp
or
mov
jge
fsub
sahf
pop
jle
test
xlat
test
dec
je
mov
je
sti
lods
imul
ins
iret
cmp
int
mov
mov
and
cli
popa
(bad)
mov
not
inc
dec
outs
lods
pop
(bad)
fistp
add
ror
cs
shr
outs
pop
lahf
sub
adc
mov
ret
fnstsw
mov
xor
inc
fs
mov
je
push
movs
fmul
mov
push
mov
inc
mov
lea
xor
mov
cwde
mov
or
add
cdq
out
fist
adc
popa
(bad)
and
ret
mov
out
pop
popa
mov
inc
jle
add
in
lods
and
cmp
imul
out
mov
fisub
pop
mov
or
push
xor
sbb
jle
leave
mov
jp
add
pcmpeqw
mov
jmp
ror
punpcklbw
pop
sub
out
iret
shl
rcl
leave
out
fldl2t
and
loop
xchg
aas
mov
in
mov
test
pushf
fwait
bound
or
and
leave
fcmovnb
les
test
or
sub
popa
jnp
or
sub
sub
in
popf
into
xchg
or
daa
out
daa
cmp
adc
adc
push
adc
out
mov
mov
add
dec
adc
pusha
mov
leave
push
jno
scas
mov
aam
retf
mov
cdq
push
push
call
dec
adc
sar
mov
fwait
ss
inc
inc
sbb
neg
lods
es
mov
and
xor
xor
pop
and
cmps
dec
mov
cmp
or
xor
in
repnz
push
dec
or
loopne
pop
fisub
jmp
je
sahf
arpl
cmp
stos
cwde
push
sbb
fimul
xchg
leave
stos
ins
lods
mov
mov
or
cmp
out
inc
inc
rcr
and
add
mov
push
mov
nop
call
push
mov
lea
mov
and
test
fst
dec
loop
(bad)
(bad)
scas
inc
xchg
jecxz
in
sbb
loop
loop
pop
or
movs
popa
cmc
mov
(bad)
pusha
xchg
sub
pop
lods
jecxz
nop
shl
fisub
sub
mov
or
outs
xchg
push
lock
loop
inc
pop
cmc
ins
(bad)
dec
push
mov
nop
jmp
jle
adc
mov
xor
pop
and
cmovns
jmp
add
jne
pop
pop
xchg
out
mov
mov
imul
lea
xor
xor
lahf
push
pop
xchg
mov
aad
add
pop
xor
shl
ins
nop
aaa
inc
cdq
ror
jo
je
(bad)
int3
xor
jbe
je
test
mov
cmps
sbb
lds
sti
adc
push
cmp
lods
out
mov
and
aad
int3
xchg
pop
pop
mov
retf
jo
(bad)
jns
hlt
xchg
inc
into
or
inc
cmp
push
pop
pop
pop
test
adc
bound
mov
ja
jle
lahf
adc
enter
lods
jle
bound
into
dec
inc
mov
adc
pop
movs
mov
icebp
sbb
inc
call
push
call
shl
jno
xchg
xchg
fadd
fwait
jae
mov
test
repz
push
jmp
ins
and
imul
xlat
(bad)
push
and
fs
gs
and
mov
leave
or
bound
cmc
push
mov
icebp
cwde
(bad)
out
xchg
sub
push
add
test
std
push
adc
dec
sub
xor
(bad)
(bad)
cmp
inc
lods
sbb
movs
mov
sub
mov
mov
xchg
retf
not
inc
ret
inc
dec
cmp
mov
data16
pop
shr
dec
mov
in
mov
mov
test
xlat
cmp
jl
pop
mov
xchg
xor
rol
(bad)
xlat
ret
sbb
enter
ins
adc
inc
adc
cli
fiadd
ja
sar
cmp
mov
and
retf
mov
je
xor
out
ror
in
int
hlt
cmp
jl
add
fimul
cmp
add
jb
into
fadd
sti
push
push
adc
sahf
dec
and
mov
cdq
xor
test
std
imul
mov
aas
cli
cmovae
xor
mov
inc
mov
add
xchg
xchg
mov
xor
aas
cmovno
repnz
or
and
test
mov
mov
add
xchg
das
dec
push
pop
ja
xchg
call
popf
lahf
inc
mov
cmp
retf
push
and
mov
jle
stos
imul
dec
sub
xchg
mov
pop
mov
retf
iret
xchg
xchg
hlt
add
ficomp
(bad)
out
inc
inc
imul
ds
lea
sub
in
jno
mov
(bad)
mov
xlat
(bad)
ficomp
movs
jmp
pop
xlat
sar
cmp
jo
cld
stos
fsubr
mov
bound
xor
stos
push
jmp
and
pop
cld
mov
shl
aam
stc
sti
(bad)
shl
ret
sbb
shr
dec
dec
dec
pop
ret
push
or
adc
dec
test
loop
and
fs
mov
add
jns
cmp
in
sbb
pop
outs
mov
jg
stos
loope
clc
in
das
adc
ret
fstp
mov
push
shl
jmp
xchg
mov
dec
push
mov
lods
out
inc
fwait
cli
ror
ins
(bad)
mov
fadd
enter
add
test
sbb
mov
jg
xor
hlt
jae
mov
out
adc
add
cmp
adc
adc
mov
clc
gs
mov
cli
lock
lods
pop
sar
pop
sar
in
sub
nop
repnz
in
test
bound
cli
adc
mov
fs
pop
in
aas
scas
hlt
add
inc
lahf
jno
sub
fist
dec
xor
jmp
cld
or
ret
or
(bad)
xor
pop
(bad)
mov
loope
popf
aas
xlat
xor
sub
fidivr
jmp
aas
sar
mov
loope
lds
mul
je
jp
pop
jns
xchg
hlt
cli
add
iret
adc
inc
inc
mov
gs
adc
dec
cwde
xadd
out
add
pushf
pop
and
adc
cmc
shr
push
mov
data16
xchg
(bad)
in
fwait
in
imul
push
add
and
ficom
add
ja
xor
push
mov
jecxz
bndstx
dec
xor
leave
jno
sub
pop
mov
xor
or
lock
das
push
dec
xchg
inc
fadd
cmp
mov
out
lea
sbb
stos
inc
imul
mov
aaa
fxch
jmp
sub
das
mov
(bad)
ins
cmp
xor
fistp
mov
mov
test
adc
mov
adc
add
call
mov
popf
out
sbb
push
mov
mov
or
mov
cmc
add
jg
in
xchg
andnps
pop
sub
mov
inc
mov
mov
jb
xlat
les
push
adc
sbb
(bad)
jno
int
enter
repnz
mov
ficomp
call
jmp
push
mov
or
mov
mov
div
in
int3
xlat
js
inc
sub
int
adc
jbe
adc
xchg
sbb
sbb
xor
in
pushf
pop
xor
mov
jle
jbe
jo
sub
sti
push
push
(bad)
hlt
add
mov
ret
daa
mov
fld
sahf
imul
pusha
adc
dec
sbb
adc
sub
int
push
xor
and
arpl
mov
nop
dec
gs
xchg
adc
test
sub
pop
pop
push
fsub
(bad)
leave
xor
xchg
mov
sbb
mov
inc
loope
popa
rcr
aad
nop
sbb
gs
jp
test
pop
mov
xor
rol
div
cmp
pop
pop
xor
out
data16
sbb
ret
and
jg
les
cmps
shl
inc
or
mov
mov
int
cli
add
(bad)
xor
loope
retf
jecxz
mov
mov
push
fwait
in
out
in
and
pop
cmp
lds
xchg
retf
mov
jmp
and
sub
xor
(bad)
test
(bad)
jl
out
dec
ror
mov
fsub
nop
pop
and
pop
(bad)
sub
xor
sti
push
dec
dec
call
pop
lods
jmp
(bad)
pushf
scas
or
ds
sahf
out
fsub
sub
call
ins
jge
jne
xor
pop
stos
imul
inc
cmp
push
cdq
int
and
inc
or
push
push
xchg
cmp
jbe
add
and
arpl
imul
inc
lahf
mov
aas
mov
sahf
mov
mov
aad
or
fwait
stos
enter
cmp
push
leave
addr16
ss
sub
int
idiv
inc
inc
push
inc
dec
adc
push
cmp
aas
xor
xchg
(bad)
jmp
ret
push
push
mov
xor
xchg
int3
sbb
adc
fadd
and
jmp
xor
pop
shr
neg
fs
or
icebp
adc
mov
popa
jnp
push
fldenv
loope
pop
dec
jecxz
xor
add
es
ffree
sub
mov
xchg
je
mov
mov
add
lock
cmp
cmp
into
imul
fsub
inc
popf
jb
pop
fdivr
shl
imul
and
rcr
mov
and
das
arpl
mov
xchg
push
jl
push
or
(bad)
in
sahf
int3
mov
inc
xlat
fwait
mov
iret
fxtract
adc
dec
adc
shl
add
test
(bad)
adc
sub
daa
cmp
xchg
sbb
dec
mov
enter
cmp
xchg
(bad)
xor
push
(bad)
cmp
rol
inc
ror
scas
sbb
in
dec
jb
jecxz
out
das
mov
and
cld
rol
sti
fstp
into
or
pop
push
pop
data16
into
mov
add
dec
sbb
mov
test
and
mov
sbb
(bad)
jne
cmp
and
mov
and
aad
xor
jmp
outs
jno
iret
jbe
sahf
inc
add
push
xchg
sub
movs
les
aas
cdq
push
cmp
(bad)
stc
je
dec
mov
aaa
popa
aad
dec
repnz
lods
loopne
nop
int
sub
test
iret
add
cmp
adc
fs
fild
sub
jmp
add
push
cmp
add
das
retf
in
test
mov
xchg
sbb
jge
rcl
out
pop
or
ret
cmp
idiv
sti
xlat
cmps
cwde
in
inc
stos
pop
test
and
mov
lock
nop
aas
xchg
ficom
(bad)
sbb
sbb
outs
add
idiv
mov
fild
jns
cmovle
push
cmc
imul
xor
and
pop
lock
cmp
leave
dec
inc
out
push
pop
es
pop
test
jp
xchg
jmp
fwait
loope
jae
push
mov
jae
jno
retf
aas
add
retf
and
in
fst
push
pusha
and
scas
xchg
jae
hlt
jbe
xor
jnp
inc
leave
stos
push
popf
inc
and
adc
sbb
ins
idiv
pusha
out
popa
sbb
cmp
add
pop
add
aas
retf
int3
jb
pop
mov
arpl
hlt
jns
fisttp
xchg
retf
jnp
jnp
arpl
repnz
test
jge
sub
lds
imul
shl
outs
leave
sbb
pop
daa
mov
mov
mov
aas
repz
(bad)
int3
push
push
ror
mov
xor
push
xchg
leave
push
push
or
mov
push
push
int3
xchg
add
dec
(bad)
fistp
ficomp
adc
add
icebp
xchg
ret
in
es
cmp
adc
mov
jmp
push
pusha
sub
pop
pop
bound
sbb
daa
retf
jns
pop
ins
rol
xchg
mov
jge
loope
icebp
ds
dec
mov
mov
idiv
push
mov
xchg
inc
bound
cmp
push
jb
or
fisubr
mov
dec
sbb
cmp
scas
es
lea
dec
pop
adc
inc
cmp
leave
xchg
sbb
cmps
or
sbb
push
sahf
js
aas
outs
cmp
push
mov
repz
(bad)
leave
push
and
repnz
les
(bad)
std
int
add
dec
xor
lds
(bad)
popf
push
fwait
cmp
addr16
iret
out
icebp
push
xchg
repz
inc
enter
xlat
push
nop
inc
das
cmp
mov
push
dec
mov
mov
mov
cdq
js
push
hlt
adc
loope
jmp
xor
lds
pop
push
cmp
ss
and
cwde
dec
test
js
cli
pop
mov
xchg
add
fsubr
imul
sbb
ds
cs
mov
cdq
cs
inc
and
push
sbb
jg
inc
dec
es
sbb
shl
dec
xchg
bnd
pop
scas
loope
fwait
pop
sbb
into
jecxz
js
std
sbb
mov
clc
outs
xlat
and
push
dec
mov
xchg
arpl
mul
(bad)
jmp
sub
push
out
es
add
jl
add
xor
inc
enter
ins
das
(bad)
and
int3
rol
jle
and
fnsave
popa
daa
push
add
js
or
sbb
adc
icebp
mov
mov
(bad)
call
ret
mov
sub
or
adc
addr16
jle
imul
mov
mov
pop
loop
jne
jl
repz
je
mov
push
xlat
out
xchg
jg
pop
sub
jp
test
jb
cmp
lar
outs
cdq
mov
icebp
pusha
shl
or
pop
cmp
cld
and
cs
pop
push
xlat
xor
je
jnp
gs
add
jno
cmp
test
cmp
pop
sub
cmp
add
std
jbe
mov
mov
in
(bad)
jno
mov
jl
mov
out
repnz
movs
sub
idiv
jl
(bad)
mov
or
mov
into
add
ja
nop
test
mov
dec
call
pop
jle
stc
mov
retf
mov
cwde
or
lds
lods
sahf
mov
fisttp
aam
mov
stos
test
sbb
sub
out
into
mov
je
retf
aam
or
cmp
fidiv
inc
loopne
jno
outs
mov
xchg
(bad)
jne
cmp
cmp
mov
dec
fdiv
cmp
cmp
jmp
je
pop
push
int3
loopne
mov
sbb
mov
mov
pushf
mov
movs
xchg
std
jns
pop
push
xchg
sub
retf
push
sub
sqrtps
adc
int
js
and
aas
mov
xchg
mov
adc
scas
mov
dec
test
mov
imul
pop
test
adc
(bad)
jnp
mov
pop
mov
shl
loope
inc
sbb
adc
inc
dec
mov
mov
add
enter
jle
pop
xchg
call
fsub
or
addr16
push
sub
mov
pop
cld
sbb
xchg
cmc
jge
add
call
jns
jp
or
outs
cmps
ds
mov
push
push
movs
aam
mov
fwait
movs
pop
add
call
mov
add
cld
out
bound
ret
push
cli
sbb
pop
clc
popa
aaa
lods
jno
in
stc
mov
push
xor
adc
call
push
cmp
mov
ds
adc
scas
adc
push
arpl
(bad)
add
mov
mov
aam
or
push
in
jecxz
cmp
mov
in
and
mov
sub
sub
das
or
mov
and
pushf
pushf
mov
dec
aaa
xor
ja
pop
xor
xchg
pop
fs
ja
jo
jg
shr
(bad)
pop
(bad)
in
add
sti
(bad)
fdiv
xor
fstp
int3
mov
xor
mov
stos
or
out
adc
fwait
cdq
in
mov
les
push
sti
movs
sbb
ror
out
bound
mov
fcom
ja
aas
mov
ret
xor
inc
test
imul
dec
mov
(bad)
(bad)
in
jnp
jae
add
xchg
(bad)
idiv
mov
out
inc
jmp
and
xor
shl
adc
in
mov
ret
jae
(bad)
outs
mov
push
jno
cmp
sti
jnp
gs
icebp
call
or
or
imul
inc
hlt
adc
sar
scas
push
cmp
jno
mov
ds
push
pop
adc
xchg
add
jnp
jg
mov
mov
int3
inc
scas
in
jl
or
cmp
loope
push
fdiv
mov
push
jnp
mov
xchg
pushf
jo
add
pop
popa
inc
jbe
sbb
and
movs
lahf
or
jmp
addr16
es
mov
push
or
test
pop
in
ss
movs
sub
adc
retf
mov
fidiv
cwde
inc
mov
div
sub
(bad)
in
push
iret
push
add
fiadd
in
adc
jnp
(bad)
cld
jnp
rol
pushf
jns
xor
std
adc
jmp
cmc
es
ins
dec
rcl
and
cwde
jno
mov
push
test
xor
adc
mov
imul
dec
sbb
cmp
scas
iret
aad
stos
inc
fxtract
ins
pop
xchg
cmp
inc
inc
cmp
jne
hlt
mov
setge
jnp
xchg
iret
xor
inc
ret
cmp
rcl
pusha
add
cmp
or
int
stos
mov
stos
xor
mov
stos
push
jecxz
cld
push
fbstp
adc
inc
lods
retf
cmps
pop
xor
sbb
adc
lahf
repz
out
push
push
(bad)
inc
mov
pushf
xchg
into
pop
mov
cmp
cs
jge
movs
in
(bad)
lds
inc
push
add
mov
les
xchg
test
scas
jmp
push
mov
cdq
cmps
or
pop
push
pop
int3
(bad)
ds
sub
or
cmp
dec
xchg
push
lahf
stos
and
loop
std
(bad)
sbb
mov
ins
ja
mov
sbb
mov
mov
les
push
shr
movs
sub
out
dec
fs
cmp
or
sub
(bad)
adc
leave
cs
add
jp
jnp
or
inc
test
mov
sbb
dec
fidivr
shl
daa
pop
imul
(bad)
add
xchg
int3
test
(bad)
pop
push
or
mov
and
xchg
nop
or
loope
stos
ins
shr
xchg
sbb
add
stos
sub
scas
mov
jge
call
xor
das
movs
jbe
ss
mov
cmp
adc
and
adc
stos
cmp
pop
inc
fnstenv
sbb
outs
sbb
sbb
les
jmp
(bad)
enter
rcl
aad
xchg
(bad)
not
inc
and
or
ror
add
xchg
sbb
jae
sti
retf
xchg
push
mov
and
inc
mov
int3
pop
inc
imul
clc
cmp
(bad)
retf
int3
in
cs
in
push
sbb
(bad)
int
shl
xor
mov
dec
jae
and
jecxz
js
mov
ret
sti
rcr
lea
jno
repnz
data16
inc
fadd
inc
cmp
mov
pop
push
div
and
mov
pop
arpl
sbb
sub
aad
clc
jmp
inc
sbb
lods
jecxz
jecxz
scas
xchg
call
mov
scas
add
cmps
rcr
pop
js
add
je
movs
into
pop
js
mov
dec
or
pushf
mov
mov
rol
(bad)
dec
adc
jle
jo
cmc
inc
or
jnp
and
xchg
sub
xor
sbb
ins
lea
or
iret
data16
out
int
sbb
(bad)
loope
inc
(bad)
(bad)
rol
fucomi
ss
cwde
mov
ss
and
movs
retw
(bad)
xor
mov
cmp
enter
fcomi
sbb
xchg
fstp
hlt
bound
push
push
add
es
add
pop
std
ins
pop
mov
je
mov
inc
push
xchg
xor
jmp
pop
repz
and
mov
cmp
sahf
push
xlat
or
dec
cmps
mov
sub
push
xchg
or
ret
sub
adc
iret
push
mov
pop
mov
out
push
movs
xor
es
shl
mov
cmp
mov
push
add
movs
aas
shl
pop
out
mov
je
xor
dec
dec
adc
mov
pop
inc
dec
pusha
jo
mov
iret
pop
pop
dec
and
cmp
mov
adc
(bad)
lahf
mov
imul
cs
xor
xchg
jg
in
adc
fild
xchg
lea
arpl
xor
mov
shl
add
pop
cmp
add
lea
jg
adc
and
xchg
jl
inc
mov
inc
mov
jg
(bad)
jnp
movs
(bad)
mov
jge
push
movs
mov
scas
inc
and
add
dec
outs
enter
jae
in
adc
jb
das
jnp
adc
pop
and
in
or
in
cmp
mov
add
add
mov
fdivr
cmps
xor
out
shr
and
xchg
xor
clc
repz
jg
or
(bad)
cdq
mov
and
call
pop
mov
addr16
ret
and
xor
test
sub
add
adc
pop
push
xlat
cld
out
pop
dec
push
fsubr
xor
adc
mov
repz
mov
lea
out
data16
out
stos
adc
xchg
bt
fldcw
lahf
sbb
je
pop
inc
mov
imul
cli
(bad)
mov
test
xor
jnp
cmps
push
popa
cmp
inc
bnd
sub
pop
(bad)
in
add
int3
loop
mov
mov
xor
(bad)
push
mov
jmp
jns
pop
neg
and
sar
pusha
arpl
out
(bad)
xor
dec
xchg
mov
mov
loop
movs
aas
test
jle
daa
inc
mov
adc
cmp
sbb
imul
jns
pop
sti
push
mov
outs
add
mov
mov
mov
out
bound
call
jg
mov
adc
xchg
xchg
mov
cmps
add
add
sub
imul
mov
dec
ja
add
setnp
and
hlt
inc
das
and
xchg
shl
addr16
inc
mov
gs
shl
into
cs
xor
out
(bad)
pusha
popf
stos
in
je
and
(bad)
sbb
ror
repz
mov
int3
inc
inc
imul
and
xchg
fnstcw
cmps
mov
mov
or
mov
or
xor
pop
cmp
fild
ficom
out
retf
or
jecxz
fld
push
mov
popf
mov
popf
jmp
mov
lahf
int3
push
(bad)
push
int3
mov
add
outs
pop
push
xor
dec
nop
push
or
rcr
jb
popf
sbb
call
lea
push
and
xor
add
xchg
sbb
add
mov
add
push
sub
nop
repnz
dec
jno
stos
outs
add
rcl
pop
cwde
les
jmp
mov
mov
inc
fnstsw
stc
xchg
dec
shr
xor
rol
dec
sbb
sbb
das
adc
mov
mov
fild
push
dec
or
rol
mov
fisub
jne
inc
ret
and
retf
call
cmp
fld
jmp
(bad)
(bad)
pop
or
(bad)
jae
in
pop
mov
stc
sbb
jge
mov
mov
lods
mov
jb
pop
sahf
jne
repz
push
or
xchg
pop
mov
out
add
jno
icebp
aas
mov
jp
and
repnz
dec
adc
adc
stos
push
mov
aaa
ds
mov
shl
nop
clc
jle
push
data16
mov
dec
or
cli
cmc
sbb
repnz
jecxz
cmc
jecxz
sub
fimul
outs
pop
dec
int3
adc
inc
inc
cmc
sub
and
or
adc
or
cmc
xlat
cmps
mov
movs
and
xchg
inc
mov
ins
fwait
mov
retf
push
inc
movs
xor
test
mov
mov
mov
jo
sti
mov
mov
xchg
push
cwde
dec
pop
movs
ret
outs
inc
cmp
nop
add
nop
test
cmps
cdq
add
dec
rcl
sbb
xor
clc
and
push
push
je
add
push
pop
mov
add
cmps
ficom
add
jmp
push
ins
lock
cmps
pop
lods
adc
(bad)
clc
push
call
sar
push
pop
mov
add
ins
aaa
jp
cmp
loop
ss
jne
adc
add
mov
pop
mov
loop
(bad)
jo
mov
dec
inc
or
test
fnstcw
call
lods
fst
scas
ror
xchg
in
shr
dec
dec
clc
and
inc
nop
adc
int3
push
ss
cli
mov
mov
pushf
dec
push
dec
xor
daa
mov
dec
adc
jb
push
push
in
in
aad
outs
mov
fld
nop
mov
jge
mov
(bad)
pop
add
ret
scas
dec
test
mov
add
(bad)
in
mov
mov
lods
xor
cdq
(bad)
mov
lods
cmc
jo
jo
das
xor
fwait
nop
pop
jle
mov
and
mov
sti
mov
pop
(bad)
mov
push
inc
dec
scas
not
cwde
sbb
pop
loopne
xor
jl
adc
or
cmps
aaa
(bad)
dec
jecxz
jns
pop
test
sbb
mov
inc
adc
push
and
pop
popf
push
addr16
ins
cli
pop
js
sar
inc
scas
neg
setg
or
dec
jle
sbb
xor
inc
cwde
sbb
xor
jo
int3
fsubr
add
and
jmp
inc
push
sahf
jle
inc
cli
sub
shl
pop
imul
out
and
js
and
add
stc
aas
dec
(bad)
call
rcr
mov
jg
sub
xchg
out
loop
mov
loop
xchg
ins
ror
mov
ss
or
pop
xor
pop
pop
sbb
push
ss
stc
add
repnz
stos
pop
sub
sbb
aaa
xchg
in
inc
test
outs
popa
lds
shl
add
mov
retf
inc
adc
jmp
push
out
mov
int
(bad)
add
dec
adc
aad
scas
xor
push
ins
adc
cld
sbb
push
cmc
adc
enter
and
(bad)
and
dec
pop
adc
test
inc
scas
loopne
jne
jbe
push
sbb
stc
dec
xchg
icebp
push
and
dec
add
mov
retf
sub
cli
dec
gs
mov
sbb
adc
pop
aad
cmp
stos
(bad)
fist
test
sub
mov
pop
clc
or
cli
es
dec
std
pop
add
or
fadd
fsubr
inc
cmp
add
sub
enter
movs
push
cmp
xor
push
nop
pop
(bad)
sti
mov
shl
mov
loope
adc
mov
scas
pop
and
mov
div
xchg
(bad)
jecxz
or
push
aam
test
push
jns
or
sub
sahf
jle
sub
into
leave
fs
enter
xchg
int
cmp
(bad)
es
sub
arpl
dec
rcl
bound
mov
retf
dec
(bad)
cmc
jmp
cmps
repnz
lea
rcr
jecxz
push
pop
jo
xchg
movs
push
sbb
(bad)
sub
xchg
jecxz
hlt
arpl
jae
aas
inc
scas
jle
xchg
dec
xchg
repz
pushf
movs
lods
fs
and
push
sub
sbb
cli
test
cs
and
enter
mov
mov
xlat
les
inc
xor
push
out
pushf
fmul
les
mov
mov
pop
ins
adc
jecxz
cmps
idiv
clc
cld
mov
or
sbb
rol
xor
scas
mov
pop
(bad)
in
cld
inc
xor
aas
push
arpl
and
jl
push
iret
adc
mov
xchg
or
cwde
push
fwait
push
scas
retf
cmp
je
xlat
push
inc
sbb
jbe
xchg
jnp
cld
nop
sub
sahf
pop
xor
push
test
shl
stos
out
or
arpl
pop
clc
sbb
mov
inc
icebp
aad
scas
outs
jae
jge
sar
mov
add
ficom
mov
daa
push
rcr
ja
mov
inc
in
sub
dec
pop
loop
cwde
test
inc
push
(bad)
pushf
test
inc
cdq
scas
aad
es
cmps
xor
mov
xor
cmps
dec
mov
inc
dec
mov
ficom
inc
dec
das
fcom
pop
std
popf
retf
jg
jg
or
in
in
xor
sbb
sub
mov
cmp
lods
fwait
data16
ret
pusha
pop
jg
in
pop
jnp
fstp
in
cs
fwait
or
xchg
fadd
push
scas
xlat
sbb
add
pop
push
pop
sub
xchg
hlt
sbb
push
je
sbb
and
add
dec
enter
imul
lods
ret
(bad)
(bad)
movs
leave
cwde
ret
cli
test
adc
add
ins
cmps
or
sahf
iret
xrelease
test
push
cmp
mov
or
xor
or
mov
repz
bnd
push
addr16
mov
mov
imul
adc
and
pop
xlat
in
nop
or
cmps
cmp
loop
xor
xchg
ret
ins
call
cmc
(bad)
rcr
pop
das
test
fwait
xchg
add
jecxz
rol
hlt
lds
mov
xor
imul
sbb
fs
bound
jbe
adc
xchg
and
retf
dec
shr
or
ins
mov
inc
mov
bound
sub
add
sar
push
repnz
adc
mov
shr
in
jno
sbb
nop
jae
cmps
jmp
test
rcl
mov
pop
mov
adc
inc
or
out
daa
mov
mov
mov
push
outs
mov
inc
enter
shr
cmp
sub
out
enter
mov
cwde
cmp
sar
dec
mov
jmp
(bad)
xor
lock
jae
lods
test
jb
xchg
sbb
neg
cmp
mov
in
rol
pop
xchg
pop
xor
les
lea
imul
popf
dec
xor
ret
cmp
ins
ss
adc
mov
sbb
aam
xor
cdq
sbb
ror
xlat
mov
out
(bad)
xor
push
mov
out
jo
inc
mov
hlt
popa
inc
jmp
or
movs
cmp
ret
iret
ror
bnd
aas
lods
jge
cli
jl
jmp
out
jnp
test
into
inc
jge
mov
jno
cmps
add
sbb
ficom
cld
icebp
fstp
and
and
dec
mov
lock
inc
jns
mov
push
cmp
mov
arpl
popa
inc
xchg
test
(bad)
aam
pusha
sbb
ficomp
cmp
mov
iret
fld
repnz
lods
sbb
xor
shl
xlat
xchg
mov
jne
adc
jo
out
movs
out
sub
dec
fld
scas
sub
mov
dec
cmp
inc
fstp
or
mov
and
jbe
fsub
aas
adc
push
push
dec
movs
push
je
test
xchg
mov
or
sbb
xor
out
cmps
mov
push
lods
hlt
fisttp
movs
and
mov
xchg
out
pop
outs
jbe
mov
(bad)
add
add
push
mov
cmps
sub
mov
shr
ja
pop
cmp
imul
push
nop
cmp
fld
stos
jmp
xchg
and
push
cmp
dec
or
push
bound
push
mov
mov
mov
push
xor
aad
or
int
call
nop
xchg
aas
rcl
cmps
stos
arpl
jbe
fneni(8087
cld
pop
dec
inc
or
sbb
jmp
sub
pushf
jle
frstor
fisttp
dec
pop
push
into
jns
imul
pop
add
xchg
gs
aaa
adc
imul
in
or
xchg
pop
js
inc
ss
sar
clc
pop
dec
cmp
dec
pop
scas
adc
(bad)
or
scas
outs
out
cmp
xchg
dec
in
xchg
movs
or
pop
push
xchg
int
jmp
imul
mov
and
push
pop
daa
pushf
sub
cmc
sar
lea
cmp
out
pop
jmp
jl
push
ins
ds
lahf
mov
jge
sub
adc
inc
rcl
pop
sar
dec
repnz
jns
and
fisubr
test
fisub
sub
outs
sub
call
in
loopne
shl
inc
mov
dec
je
mov
cmps
loop
mov
icebp
inc
in
or
loope
sahf
(bad)
adc
ja
xor
scas
in
int3
xchg
movs
push
js
mov
adc
stos
xor
inc
ins
ret
mov
dec
test
jecxz
imul
jo
mov
cmp
shr
mov
fwait
cs
or
ret
xor
add
je
mov
push
retf
(bad)
mov
mov
inc
movs
jmp
jg
cmp
push
add
lods
pop
xchg
movs
xor
adc
xchg
mov
int3
loopne
std
and
jmp
cli
and
sbb
push
adc
(bad)
das
adc
mov
xchg
xor
mov
mov
cmp
(bad)
div
rcl
psllw
sub
push
cmps
add
mov
push
imul
es
mov
dec
inc
jno
push
rcr
test
mov
pushf
mov
adc
push
mov
inc
mov
or
jbe
and
mov
icebp
arpl
fld
dec
dec
jp
idiv
xchg
jne
or
in
syscall
inc
(bad)
mov
dec
outs
cmp
scas
and
adc
std
mov
jnp
push
jmp
fwait
call
push
popa
sub
loopne
fiadd
inc
(bad)
mov
clc
imul
sub
in
pop
stos
stos
dec
shl
push
jo
out
push
fist
inc
add
sub
scas
sub
xor
mov
mov
mov
mov
aas
inc
inc
imul
out
pushw
(bad)
and
aaa
or
adc
add
sar
mov
or
iret
aas
mov
sub
aaa
cwde
mov
mov
int
xor
push
fwait
gs
(bad)
jp
lods
mov
sbb
cmp
mov
xchg
add
pop
int3
sub
add
mov
popf
outs
inc
adc
repnz
sbb
pop
push
test
or
repz
sub
sar
stos
retf
call
mov
and
test
lds
aad
scas
test
pop
push
in
sub
jmp
jle
mov
mov
xlat
push
pop
dec
and
sub
cs
mov
sub
xchg
push
into
add
sbb
dec
and
push
out
or
jns
aad
mov
mov
(bad)
or
mov
cmp
pop
sbb
pusha
pop
into
inc
and
xchg
sbb
add
xchg
ss
mov
shl
rol
jae
fidivr
or
adc
(bad)
outs
inc
mov
js
ror
inc
xchg
in
mov
mov
mov
mov
mov
test
sti
dec
(bad)
(bad)
sbb
push
cmc
cwde
cmp
sar
das
fisttp
test
push
fwait
mov
add
(bad)
pop
repz
xchg
movs
outs
dec
out
in
cli
inc
test
push
and
das
into
mov
add
jp
push
mov
iret
sub
add
inc
stos
mov
repnz
scas
mov
sar
jne
(bad)
(bad)
or
lds
lea
ins
arpl
pop
ss
into
test
push
mov
add
mov
test
mov
jmp
pop
sub
mov
lods
and
gs
nop
ss
jecxz
std
push
mov
inc
xor
js
mov
test
loope
out
xchg
fcomip
imul
jmp
jmp
jp
pop
jp
push
ror
mov
or
test
or
mov
mov
outs
je
cmp
loope
cmps
push
dec
mul
(bad)
cmp
adc
ss
push
fnsave
adc
sti
mov
stos
inc
sahf
in
mov
ficomp
ins
cmp
ret
jge
shr
movs
sub
mov
xchg
aaa
out
and
rcr
imul
or
add
sbb
cmps
mov
(bad)
daa
outs
adc
cmps
sub
in
scas
and
inc
push
pop
jp
sbb
cmp
add
jp
int
inc
xlat
push
sub
int3
mov
add
imul
imul
lahf
pop
dec
xor
test
aad
adc
add
jge
retf
inc
hlt
cmp
xor
hlt
imul
add
cwde
mov
sub
cmp
dec
xchg
xchg
cmp
retf
in
daa
sub
mov
pop
add
mov
inc
pop
push
push
add
das
mov
call
popf
and
js
in
dec
and
cmp
inc
or
fwait
cmp
push
add
into
test
in
dec
movs
ins
inc
mov
repz
and
and
(bad)
int
add
jge
fs
fs
jnp
and
pop
imul
and
jmp
pop
pushf
(bad)
loopne
and
aas
lock
jmp
cmp
aam
sbb
adc
retf
gs
pop
jmp
fld
fwait
repz
rol
jle
shl
cs
mov
xchg
add
rol
arpl
jne
jmp
add
or
shl
call
jne
pop
sbb
das
mov
add
mov
lods
in
inc
mov
mov
shl
adc
adc
sar
mov
mov
(bad)
fwait
arpl
test
lds
fdiv
cmps
pop
das
dec
ret
jp
sub
pop
sbb
add
dec
sbb
aad
dec
adc
dec
lock
and
push
js
mov
mov
in
sahf
out
aam
and
fucomp
jae
add
jae
mov
rol
push
and
das
leave
sar
jbe
dec
out
add
arpl
push
es
dec
test
xchg
loopne
mov
out
mov
sbb
sub
es
push
lods
xor
fcomp
sub
mov
xor
int3
jmp
pop
inc
pop
inc
fsubr
xchg
into
in
into
cmp
jae
pop
add
les
cmp
ret
sub
sub
xor
lock
xor
mov
(bad)
jae
repnz
imul
mov
icebp
push
std
ret
sbb
imul
push
mov
fdivr
out
cmc
es
iret
sub
(bad)
shl
test
sub
test
jge
into
cs
aad
in
(bad)
pusha
shr
sub
jnp
sbb
nop
jb
xor
ficomp
out
sub
jl
mov
(bad)
jmp
test
mov
or
sub
(bad)
sti
in
or
daa
aas
push
rol
outs
cmps
push
mov
ret
movs
dec
push
in
int
cmp
inc
sub
xchg
push
lds
pop
in
out
fist
aad
cmc
iret
call
adc
repnz
sub
dec
push
fadd
into
jp
test
pop
jge
in
or
cmps
cmp
or
leave
xor
vcvtps2dq
ss
in
push
cmp
pop
adc
mov
ja
ds
std
sub
jle
mov
push
in
sbb
lds
jbe
fild
call
or
nop
dec
jb
rcr
retf
bound
sar
jecxz
mov
movs
cmps
aas
jecxz
popf
adc
rcr
ins
stos
xor
aad
in
clc
std
or
mov
rol
jnp
xor
sub
(bad)
jb
mov
sbb
aad
xlat
sahf
pop
es
icebp
cli
out
out
inc
test
call
arpl
nop
ja
push
mov
stc
imul
outs
and
cs
fcomp
sar
dec
mov
test
pop
ja
lahf
inc
lock
inc
inc
inc
jmp
adc
ins
aas
nop
mov
mov
cwde
push
movs
jae
mov
push
call
aam
fild
ins
unpcklps
adc
(bad)
xchg
pop
adc
xchg
inc
mov
ds
repz
mov
xor
ficomp
inc
pushw
repz
mov
movs
sub
pop
pusha
aas
mov
dec
out
ret
mov
add
addr16
jbe
pop
test
aam
dec
sar
das
movs
add
arpl
or
push
jnp
pop
mov
fisttp
ficomp
dec
iret
das
out
and
stos
into
lea
cmp
jmp
or
pop
mov
mov
cmp
add
push
pop
xor
jae
pop
mov
rcr
and
xchg
std
mov
pop
mov
cmp
xchg
jno
es
jge
xor
aad
aam
(bad)
sub
or
sub
leave
popa
jbe
push
or
xchg
inc
(bad)
call
jbe
clc
enter
mov
push
adc
cld
pusha
jns
sbb
lods
bound
mov
imul
leave
call
rol
js
int
movs
dec
add
int
push
mov
or
add
das
sub
call
push
jmp
push
ror
aad
pop
movs
leave
iret
jae
dec
or
inc
and
pop
sub
not
mov
stc
xor
ds
stc
or
adc
(bad)
adc
ret
xor
inc
adc
pop
or
jbe
sti
dec
push
fwait
stos
cwde
cmp
mov
cmp
sub
and
pop
jbe
fsub
imul
aam
clc
adc
pop
push
out
in
fldenv
or
xchg
test
test
xor
and
loop
pop
aam
add
xor
or
cmc
sbb
inc
push
into
fsub
pop
loopne
int
std
dec
retf
pop
mov
cmp
rep
mov
fstp
or
data16
stc
cmp
fist
mov
leave
aad
push
stos
lods
jnp
mov
(bad)
test
jo
mov
cmp
stos
movs
lods
pop
sti
dec
push
or
push
test
cmc
out
inc
mov
push
lock
mov
lods
pmuludq
mov
fild
sub
dec
(bad)
xor
int3
and
mov
xchg
not
push
pop
inc
or
inc
ret
movs
xchg
jg
push
jge
sub
stos
(bad)
xor
and
add
xor
or
in
fadd
jmp
mov
sub
sub
mov
cld
push
xor
dec
and
loopne
sub
or
fadd
jmp
push
push
std
push
mov
enter
add
lock
dec
push
adc
shl
ins
add
sbb
adc
dec
mov
hlt
test
rcr
mov
stos
xchg
and
aas
sub
inc
cmps
mov
xor
pusha
ror
js
jbe
push
aas
mov
mov
iret
cmp
add
mov
hlt
dec
push
mov
mov
jae
pop
mov
dec
and
in
add
pop
arpl
jns
inc
pop
jl
cwde
fild
jbe
or
mov
call
data16
mov
dec
cli
or
sbb
mov
mov
mov
out
es
stos
jmp
fdivr
sahf
dec
adc
test
nop
xor
mov
lods
nop
jmp
jp
pop
mov
movs
mov
fistp
xlat
fwait
or
ret
lea
push
push
xchg
or
arpl
pop
cld
bound
outs
hlt
test
int3
jp
outs
aaa
(bad)
sti
fwait
leave
stos
ficomp
sti
rcr
xchg
mov
mov
mov
movs
cmp
cmp
movs
and
sbb
fistp
xchg
mov
aas
mov
fdivr
add
xor
jae
cmps
or
cmps
dec
in
xchg
or
mov
clc
add
mov
add
xchg
xchg
idiv
jge
mov
sub
mov
push
pop
test
fdiv
dec
repz
cmc
push
adc
mov
add
or
sbb
add
jno
aad
cld
sti
xchg
test
and
sub
adc
(bad)
cmc
lea
stos
ror
sbb
adc
cmc
(bad)
into
ret
pop
add
daa
adc
dec
or
mov
jp
or
jae
popa
dec
mov
fldz
xchg
nop
arpl
add
pop
mov
adc
dec
sbb
and
test
push
test
adc
and
pop
cmc
or
or
mov
xor
adc
les
test
in
icebp
ja
outs
les
xchg
or
sub
sub
in
jnp
mov
lock
rcr
stc
std
xor
hlt
sub
enter
stc
shr
push
cli
sbb
cli
or
add
or
rcr
dec
jl
lahf
sbb
test
mov
push
ja
ret
scas
push
push
mov
xchg
test
lds
dec
clc
imul
mov
mov
jecxz
test
out
mov
cdq
xchg
mov
jp
add
mov
sbb
adc
test
sub
pushf
repnz
sub
push
adc
push
push
sub
sbb
js
in
es
and
arpl
jecxz
push
adc
add
cli
sahf
(bad)
xor
push
int
lods
ret
mov
inc
mov
(bad)
jmp
inc
adc
shr
push
inc
sahf
jns
adc
xchg
das
pop
push
sahf
mov
inc
retf
(bad)
mov
or
mov
outs
xchg
ret
aam
inc
push
sbb
lods
sbb
adc
out
imul
jmp
aaa
adc
pop
jo
xchg
data16
jmp
push
add
nop
and
xor
mov
cmp
out
adc
lea
fld
fidiv
adc
(bad)
out
imul
sbb
pop
repz
sbb
mov
mov
mul
iret
leave
jns
mov
(bad)
ss
jmp
xchg
cmps
sbb
in
mov
outs
fdivrp
xchg
retf
add
jo
or
fwait
push
imul
mov
mov
movs
pusha
mov
mov
mov
jnp
or
dec
arpl
push
popa
mov
call
or
adc
std
sbb
xor
add
shl
ins
add
call
inc
mov
scas
sti
jns
inc
ins
mov
jbe
enter
out
pop
and
bound
scas
(bad)
jo
test
jecxz
ja
cli
sbb
adc
cmp
adc
jg
shr
mov
jbe
push
sub
xchg
add
pop
inc
add
xor
test
das
pop
dec
mov
out
sub
in
idiv
or
inc
push
jecxz
nop
sub
push
xchg
push
aad
sub
mov
mov
cli
mov
sub
mov
idiv
adc
stc
and
jne
adc
mov
xor
sbb
dec
pop
xchg
mov
(bad)
daa
imul
lea
dec
test
cwde
pop
out
sub
out
pop
push
xor
fs
mov
xchg
rcr
icebp
jmp
adc
movs
lods
push
daa
js
mov
test
xchg
inc
sbb
fwait
popf
pop
jecxz
cmp
jmp
cmp
call
and
mov
pop
retf
test
pop
loop
fnstcw
retf
lahf
or
or
cdq
pop
into
imul
rol
fstp
cwde
push
push
mov
pop
or
sub
cwde
test
std
mov
outs
add
fistp
mov
push
mov
mov
into
cmp
mov
dec
xor
push
dec
popa
jb
push
popa
push
push
repz
movs
pop
mov
mov
je
pushf
xchg
aaa
(bad)
daa
aaa
xchg
xlat
mov
int
dec
aam
sbb
ss
mul
xchg
sub
inc
xor
call
dec
js
int
fist
fwait
int3
pcmpgtw
mov
scas
aad
mov
fcmovne
add
(bad)
or
mov
mov
add
xlat
jl
aad
movs
repnz
fsub
jnp
int
pusha
push
xchg
inc
mov
xchg
push
mov
dec
sub
inc
sub
mov
jne
jae
in
add
rcr
mov
ins
hlt
ret
shl
jecxz
inc
mov
jne
fwait
loope
mov
movs
sub
fwait
es
mov
push
sbb
pop
icebp
push
mov
push
out
(bad)
mov
lock
imul
jle
ret
cdq
adc
jecxz
mov
jo
fs
fiadd
inc
retf
ja
cmp
(bad)
aas
mov
adc
stc
xchg
ins
inc
daa
pop
popa
cmps
xlat
push
add
hlt
(bad)
ds
pop
scas
nop
add
stos
mov
arpl
adc
xlat
pop
jne
bound
je
popa
push
and
pop
dec
mov
enter
ds
je
std
adc
add
pusha
mov
loope
ds
push
xor
add
rol
dec
mov
rol
push
pop
sbb
mov
cld
dec
jo
jns
sbb
xor
inc
mov
test
push
outs
cmp
test
xor
push
mov
ja
mov
ss
outs
fsub
push
iret
or
clc
jecxz
and
sub
sub
xchg
retf
out
pop
inc
stos
inc
mov
mov
sbb
xor
or
cli
xchg
ja
arpl
cmp
inc
push
repz
outs
(bad)
sub
push
cs
test
(bad)
sbb
pusha
cmp
mov
push
dec
or
mov
dec
ja
sub
adc
ds
pop
int
mov
je
out
xor
(bad)
cmp
sub
xchg
sub
sub
or
cli
and
(bad)
mov
xor
pop
cmc
mov
movs
(bad)
push
mov
sub
mov
jle
mov
mov
adc
mov
ficom
scas
aaa
cs
jge
ds
jo
push
std
js
jns
or
fs
jg
sbb
jno
lock
sbb
dec
push
loope
out
push
arpl
add
push
daa
jmp
(bad)
loop
shl
adc
fwait
sub
fs
sbb
jecxz
imul
mov
cwde
loopne
out
xor
xor
xchg
or
and
scas
mov
jns
stc
dec
jo
cmp
call
and
test
jp
stos
and
cli
sub
mov
pusha
pavgw
leave
and
jb
mov
xor
(bad)
push
scas
or
mov
test
fist
mov
xor
lds
retf
cmp
add
mov
cmp
fwait
push
cwde
push
push
std
xchg
data16
(bad)
push
test
lods
inc
fsub
inc
pop
cmp
int3
movq
inc
inc
stos
cmp
dec
maskmovq
mul
cmp
stos
sti
pop
sbb
mov
mov
cdq
dec
outs
loope
add
xchg
outs
test
jbe
out
mov
push
fmul
cmc
pop
out
gs
pop
xchg
loop
dec
jle
js
adc
cld
sub
push
mov
cdq
dec
fstp
mov
mov
xchg
push
mov
pop
jg
mov
xchg
pusha
dec
push
fistp
push
adc
or
pop
iret
jno
fxch
fs
pop
enter
add
and
sbb
mov
pop
pushf
ins
mov
inc
sub
nop
cmc
add
out
inc
call
mov
mov
dec
pop
mov
and
xchg
add
push
ja
shr
xor
(bad)
jecxz
mov
jb
mov
push
ins
in
mov
imul
call
fs
push
or
and
int3
pop
xor
xor
pop
mov
lea
sbb
loop
jmp
(bad)
jmp
jg
cmc
jnp
enter
dec
and
outs
sbb
fisubr
int3
pop
adc
dec
hlt
cmp
(bad)
jae
popa
adc
xor
and
out
int3
push
xor
or
sbb
jecxz
push
dec
mov
or
add
hlt
and
ss
push
mov
and
outs
shl
daa
cmp
cmp
or
mov
push
dec
sbb
adc
sub
icebp
in
nop
retf
dec
xchg
aaa
inc
fnstsw
dec
xchg
fist
and
sbb
pop
add
jmp
repz
mov
in
cmp
inc
mov
(bad)
jne
sub
arpl
inc
and
in
xchg
or
pushf
pop
xor
add
hlt
jl
aad
ror
pop
shl
(bad)
js
sub
push
xchg
xchg
dec
xlat
or
mov
dec
mov
in
xor
mov
fadd
cmp
out
ror
ja
out
xor
xor
cmc
lods
mov
mov
mov
mov
xor
retf
adc
push
sbb
xchg
adc
mov
pop
push
fnsave
mov
pop
adc
adc
jae
mov
ins
cmp
push
out
popf
test
xor
sbb
cmp
push
retf
cld
add
call
mov
push
test
xor
xchg
shl
mov
jo
movs
fst
call
popa
push
test
or
aaa
addr16
sub
pop
dec
(bad)
(bad)
dec
dec
mov
xor
movs
mov
cmps
push
repnz
repz
das
movs
fiadd
sub
jg
jo
in
mov
fwait
pop
test
cmp
cmp
cmp
cmp
mov
jno
pop
jns
ret
stos
inc
push
(bad)
sub
das
sub
sbb
inc
in
test
add
int
push
jmp
(bad)
in
imul
inc
cdq
jne
aas
mov
inc
jae
arpl
test
test
stos
lds
add
add
fild
pop
mov
xor
mov
out
fnstenv
mov
or
and
dec
loop
inc
cli
gs
nop
adc
mov
out
cmp
addr16
lahf
push
mov
fst
(bad)
outs
inc
loopne
(bad)
mov
cmp
ds
pop
and
(bad)
icebp
addr16
in
inc
fst
pop
shr
xlat
ds
shl
neg
adc
mov
pop
sahf
retf
push
and
jno
push
sbb
sbb
or
add
in
and
xchg
mov
mov
cli
sbb
sahf
outs
pop
imul
ss
imul
xchg
in
lods
in
and
les
stc
mov
pop
pop
jge
fistp
or
and
leave
xchg
scas
cmp
in
fisub
(bad)
aad
push
push
lock
mov
sub
jmp
mov
loopne
iret
jecxz
mov
pop
adc
mov
adc
sbb
std
je
mov
inc
pop
mov
sti
in
push
jge
cmp
movs
xor
and
cli
push
xchg
push
data16
mov
lods
xor
or
cmp
lods
fldenv
pop
daa
jecxz
cs
inc
xor
adc
dec
jmp
lds
jl
xchg
iret
jecxz
dec
cmps
cmp
call
push
ins
inc
dec
cmp
add
adc
test
xor
test
pop
cli
jmp
imul
fsubr
push
in
clc
clc
xchg
xchg
shl
adc
repnz
and
pop
push
push
outs
inc
outs
cld
cwde
iret
(bad)
cld
ss
push
stc
push
xor
out
fcomi
xor
push
sub
fsubr
retf
sbb
push
loopne
shl
cwde
lods
dec
movs
mov
test
enter
popf
imul
out
idiv
cwde
jno
xor
push
inc
mov
daa
loop
js
mov
in
xchg
ja
mov
mov
mov
callw
add
arpl
iret
mov
jl
leave
jp
inc
mov
in
sar
out
jecxz
loop
pop
xchg
scas
es
pop
cmp
neg
aas
cmc
jo
out
pop
(bad)
stos
adc
(bad)
mov
imul
xchg
ja
daa
dec
mov
or
add
pop
cmp
pop
dec
adc
inc
mov
xlat
sub
sahf
in
pop
push
cdq
sbb
push
inc
or
sets
sub
test
xor
push
shl
push
scas
and
push
sar
movs
comiss
push
dec
scas
(bad)
jl
mov
sbb
adc
les
sbb
jg
leave
adc
dec
inc
adc
cmps
mov
mov
adc
leave
out
mov
push
jmp
(bad)
mov
xchg
mov
or
add
ja
inc
sub
les
adc
pop
enter
lock
push
adc
push
popa
fadd
shl
je
push
fld
(bad)
lods
ret
pop
push
xor
jmp
dec
fisttp
test
mov
xchg
fisttp
icebp
adc
inc
xor
mov
cmps
cmp
jg
dec
outs
outs
mov
ja
jge
mov
cmp
inc
push
sti
inc
fadd
pop
jmp
pop
mov
inc
inc
stos
xchg
std
pop
sti
pop
das
mov
not
xor
mov
xor
push
in
fnstsw
mov
xchg
fiadd
xor
popf
jbe
cmp
push
cmp
nop
pop
adc
or
inc
stos
stos
outs
jecxz
mov
sub
das
push
test
inc
pop
cmp
xchg
add
dec
mov
cld
pop
push
sub
or
push
call
in
dec
xchg
push
stos
xor
sahf
scas
test
shl
or
mov
dec
jb
loopne
pusha
and
cli
xchg
jmp
push
jge
mov
jl
jl
(bad)
sub
cmp
and
scas
mov
adc
clc
mov
pop
pop
shl
sbb
outs
xchg
cs
push
dec
pop
dec
nop
jnp
mov
scas
xor
mov
shr
aad
push
sub
ja
test
fisttp
sti
mov
cmp
push
popa
jno
pop
adc
and
fcom
pop
and
aas
gs
je
out
xchg
push
fnstsw
shl
aad
out
ds
sub
icebp
mov
bound
(bad)
pop
stos
mov
jmp
repnz
test
adc
sub
shl
pop
cdq
add
mov
pushf
out
xchg
or
fmul
pop
mov
inc
lds
cmp
fnstsw
pop
into
push
popf
add
sub
stos
inc
pop
push
(bad)
call
or
mov
xor
pop
xchg
out
push
cmp
push
xchg
inc
xor
std
mov
fsub
xchg
cmp
cmp
xlat
cmps
es
lods
fs
pop
mov
or
fstp
push
popf
(bad)
jg
sub
xor
cmp
jbe
jg
mov
in
in
xchg
ret
push
mov
loope
inc
(bad)
repnz
or
imul
movs
std
inc
jg
jmp
mov
call
jnp
jp
mov
or
pop
das
push
imul
sbb
dec
mov
cmps
call
mov
jae
pop
fist
mov
mov
cmp
dec
sub
add
mov
xchg
dec
mov
nop
dec
add
std
out
jle
jbe
sub
lahf
push
and
or
jmp
gs
mov
adc
daa
sub
dec
pextrw
xchg
pop
cwde
jmp
xor
rcl
mov
aam
pop
inc
add
sets
add
mov
shl
jnp
xor
or
cwde
add
int
and
jp
sbb
popa
sahf
jmp
jbe
jmp
push
cmp
mov
sar
pop
fmul
cs
push
mov
ret
push
mov
loop
xchg
scas
mov
jno
jne
dec
push
and
mov
mov
ja
rcr
jnp
lods
lods
cs
loope
outs
add
(bad)
outs
add
popa
stc
sub
sbb
iret
ror
daa
fs
call
jmp
mov
arpl
mov
les
outs
nop
(bad)
sbb
fist
adc
cmp
or
fs
imul
mov
mov
mov
mov
fisubr
aaa
jp
leave
scas
add
xchg
cmp
xor
ins
cmp
mov
xor
xchg
adc
outs
shrd
rcl
test
dec
push
cwde
adc
ret
mov
ret
inc
adc
push
repz
jg
test
movs
cmps
pop
shl
jecxz
sbb
jo
loop
mov
ret
push
gs
aam
adc
dec
imul
(bad)
aaa
sbb
push
sbb
and
pop
int3
fld
and
pop
in
add
inc
pop
sti
mov
lock
hlt
xor
jg
push
cmp
cmp
or
repnz
shr
and
lods
and
popf
pushf
add
sub
mov
push
mov
adc
mov
push
dec
call
jns
sti
mov
cmp
test
mov
js
nop
out
aad
mov
push
cmp
stos
sbb
pop
dec
imul
pop
jmp
or
mov
sbb
xchg
sbb
cmp
cs
sar
(bad)
xor
out
rcl
dec
dec
pop
or
bound
in
xchg
inc
cmp
pushf
test
out
stc
xchg
pop
dec
das
dec
dec
outs
mov
inc
call
xor
xchg
enter
sbb
push
push
into
xor
jno
lds
cdq
jae
iret
out
enter
adc
adc
mov
pop
push
mov
add
sbb
add
sbb
mov
cmp
xor
js
jp
(bad)
jp
dec
jp
mov
(bad)
inc
dec
dec
jno
inc
loopne
test
adc
cmp
in
aaa
xor
mov
dec
xor
aaa
aas
sbb
jae
xchg
push
mov
imul
(bad)
sbb
or
(bad)
je
sbb
sahf
xchg
int
inc
shl
push
add
push
inc
das
pop
test
xor
jle
push
arpl
nop
mov
out
push
(bad)
adc
imul
out
cmp
cmps
jl
sahf
lock
or
or
in
(bad)
pop
iret
xchg
sub
rdpmc
dec
enter
(bad)
daa
repnz
jmp
adc
jl
and
xchg
imul
ret
sub
ss
loope
loop
(bad)
pop
ja
jns
jb
cmp
inc
je
inc
mov
mov
inc
sar
sti
pop
mov
mov
jl
mov
in
stos
push
dec
out
inc
lods
das
mov
mov
jg
pushf
xchg
pop
pop
cli
outs
in
mov
adc
xchg
add
(bad)
out
cld
in
push
loop
jmp
int
sbb
repz
imul
pushf
jecxz
mov
into
les
mov
fwait
dec
pop
xor
into
dec
mov
movs
fdiv
jg
add
movs
xor
stos
pushf
mov
into
jnp
add
push
nop
sub
dec
push
jno
inc
jns
lea
inc
cld
std
xchg
sub
fdiv
add
xor
leave
xchg
pop
fimul
sub
je
mov
int
push
dec
cli
fist
ror
fst
push
sub
xor
lahf
loope
xor
and
jbe
cdq
or
bound
cmp
inc
outs
mov
stos
fs
jge
pop
aaa
iret
mov
mov
loopne
(bad)
push
lea
mov
(bad)
sbb
dec
xor
fstp
mov
jbe
sub
cmp
sbb
xchg
loopne
test
repnz
not
xchg
(bad)
fsubr
cs
pusha
mov
xchg
lahf
sbb
ret
sbb
push
rcr
sti
pop
sti
out
fidivr
data16
retf
add
(bad)
mov
mov
sub
fcmovbe
dec
sub
push
loope
call
not
push
jbe
xchg
(bad)
movs
add
ja
jns
pop
dec
fisttp
sub
mov
inc
inc
imul
rol
xchg
push
xor
sahf
sub
push
das
xor
mov
in
cmp
pop
add
cmp
clc
adc
sbb
xchg
rcl
test
clc
xchg
cs
sbb
sbb
jno
cmp
into
and
jae
mov
out
dec
jp
dec
sahf
js
mov
jg
movs
push
sbb
pop
jmp
push
inc
sti
rcl
inc
test
push
int3
icebp
(bad)
mov
dec
out
loopne
enter
fadd
inc
sbb
pop
int3
lock
fst
ja
lods
dec
jo
jns
inc
dec
and
scas
adc
pop
mov
fist
cmps
dec
daa
xor
out
shl
mov
cld
jae
je
cmp
test
add
sbb
pop
(bad)
aam
push
sub
aad
pop
jmp
push
movs
out
push
inc
fild
hlt
inc
ds
pop
popa
(bad)
mov
add
dec
pop
and
mov
push
dec
jns
cmp
stos
cdq
daa
adc
sbb
shl
aad
push
cmps
jns
icebp
dec
inc
mov
push
pushf
mov
outs
cmp
dec
push
into
sub
xor
cs
sbb
or
jl
cmpxchg
sbb
push
push
jg
inc
jmp
pop
xchg
fisttp
test
jb
xor
mov
cmp
xchg
adc
or
clc
inc
mov
mov
test
dec
inc
les
into
xor
sbb
mov
or
sub
mov
jmp
push
pop
push
inc
or
push
pop
xchg
cmp
or
je
int3
shl
sub
push
cmc
ss
int3
jmp
cmp
(bad)
nop
test
in
dec
mov
jmp
adc
sbb
lock
cli
push
int
dec
pop
fwait
je
test
into
clc
and
push
jmp
push
mov
js
lods
int
pop
(bad)
in
enter
leave
les
mov
retf
and
mov
sub
and
sbb
in
sbb
push
sti
sub
fdiv
or
or
scas
lds
mov
add
xor
in
out
(bad)
or
adc
pop
int
adc
call
and
cmp
adc
ins
into
mov
dec
or
cmp
jp
(bad)
xor
pop
add
loope
inc
(bad)
sar
repnz
dec
out
xor
dec
jl
clc
rcl
dec
and
int3
xor
std
xchg
(bad)
ins
add
mov
out
popa
mov
sbb
js
sbb
dec
cli
lods
popa
or
enter
mov
xor
jle
pop
jmp
aam
xchg
test
xchg
xlat
fidiv
push
sbb
outs
(bad)
bound
push
jp
mov
cmp
call
push
inc
sbb
mov
xchg
lock
mov
call
out
mov
and
pop
sub
imul
inc
mov
xchg
dec
shr
ins
mov
repz
mov
pop
cdq
ss
push
ins
inc
(bad)
out
inc
adc
dec
jge
dec
mov
push
pop
sbb
cmp
sar
imul
mov
pop
lods
loop
dec
imul
shl
jno
sbb
and
pop
or
xor
test
adc
cdq
sbb
test
and
or
dec
or
mov
cmps
nop
icebp
mov
loope
pop
loopne
aad
mov
push
ret
(bad)
dec
xchg
in
ret
sbb
(bad)
sbb
inc
arpl
fld
push
aas
add
leavew
fs
sbb
jp
fwait
cmps
jno
sbb
(bad)
pop
sbb
adc
popf
inc
(bad)
in
les
ret
aad
(bad)
aad
push
stos
rcl
push
xor
lss
inc
mov
xor
mov
outs
jns
adc
addr16
dec
stos
not
adc
jmp
adc
sub
and
adc
mov
call
out
ins
xchg
scas
add
xor
ror
ror
jecxz
mov
stc
jl
int3
mov
out
cmp
add
adc
out
jl
test
or
mov
jecxz
pop
jno
dec
lds
jmp
cmp
push
je
mov
pusha
ja
daa
dec
imul
dec
rcr
loop
mov
sbb
(bad)
cli
adc
test
mov
cs
aas
scas
xlat
jecxz
(bad)
ins
fwait
xor
inc
stos
pop
adc
arpl
xor
lock
jb
xchg
and
jno
test
jnp
int3
(bad)
xorps
pop
push
add
popf
rcl
nop
xchg
cwde
sub
pop
fst
mov
pushf
scas
push
cwde
lahf
mov
std
cmp
(bad)
mov
sub
sub
shl
cmps
lock
mov
inc
pusha
in
or
imul
cmc
adc
(bad)
mov
sahf
mov
mov
jle
nop
addr16
mov
push
repnz
and
pop
jbe
int
imul
call
mov
cmp
push
lods
retf
sbb
movs
fs
push
xchg
icebp
push
or
adc
cmp
add
rcr
pushf
mov
push
fisub
push
(bad)
mov
dec
add
(bad)
sar
xor
fwait
mov
mov
push
repz
or
and
jl
int3
imul
push
jne
mov
scas
pop
imul
cmp
jb
or
sbb
or
mov
inc
scas
and
test
mov
push
sti
mov
sub
jecxz
mov
ret
int
fs
enter
sti
into
add
mov
jb
mov
push
mov
xchg
dec
mov
mov
scas
xor
out
out
inc
jle
dec
(bad)
mov
pop
test
and
add
xchg
leave
test
pop
add
inc
dec
pop
jnp
mov
xchg
push
xchg
je
pop
test
ins
xlat
lods
lock
mov
and
dec
into
cmp
mov
mov
loope
pop
dec
dec
and
mov
cmp
daa
cmp
into
mov
mov
or
outs
ins
aad
or
pop
mov
shl
fwait
sbb
or
pop
xchg
test
dec
mov
jmp
mov
jb
sbb
fcmovnbe
mov
jno
push
sbb
ret
addr16
pop
enter
mov
stc
mov
xchg
out
cmp
icebp
mov
mov
mov
in
cmc
ins
(bad)
add
mov
add
js
sti
xor
ins
adc
mov
dec
iret
and
mov
inc
inc
and
cmps
xor
dec
mov
loop
and
cld
cmp
sbb
jecxz
add
ret
jae
ret
cmp
sbb
sbb
mov
xor
loop
sbb
ret
(bad)
ffree
jo
push
and
fst
mov
adc
pop
inc
xchg
mov
in
int
pop
push
and
scas
mov
cmp
xchg
xor
imul
mov
dec
int
cmp
jo
push
dec
cld
or
dec
inc
mov
push
popa
pushf
popfw
jnp
shl
in
xchg
dec
xchg
xchg
cmp
inc
loope
add
sbb
mov
pop
cmp
pushf
mov
sub
rdpmc
fmul
dec
mov
imul
jb
mov
lods
add
and
(bad)
std
jle
call
enter
std
enter
push
rcpps
or
fadd
inc
ins
clc
push
adc
das
scas
pusha
(bad)
out
les
nop
adc
push
mov
jns
jle
cmp
or
out
aad
xor
imul
out
mov
dec
mov
add
(bad)
lods
pop
cmps
push
mov
and
jo
mov
dec
jle
inc
dec
cmp
rol
jge
or
mov
cmps
out
mov
and
or
xchg
retf
sub
xchg
inc
xchg
push
(bad)
aaa
sbb
sub
dec
loop
cs
inc
inc
dec
sub
movs
push
sbb
inc
(bad)
test
out
cdq
out
mov
pop
adc
loopne
cmp
data16
push
and
mov
test
or
fwait
dec
fwait
mov
sbb
push
jg
retf
clc
test
pop
dec
and
sahf
mov
mov
adc
aas
mov
fwait
and
mov
inc
add
aam
bswap
or
mov
shl
inc
icebp
jo
mov
xchg
out
sub
sar
adc
loope
mov
mov
fdivr
(bad)
(bad)
mov
xchg
sbb
mov
mov
sbb
test
out
ins
cmp
cmp
or
loope
mov
adc
push
cmp
push
cmp
stos
bound
outs
push
adc
out
cwde
scas
xchg
adc
repnz
cmps
inc
inc
cmp
and
inc
adc
leave
scas
jb
shl
aam
push
jp
cmp
clc
fmul
lock
xor
mov
int
out
cmp
movs
fidivr
stc
pop
sbb
fisubr
push
mov
mov
push
cmp
mov
(bad)
cmp
and
aam
stos
adc
adc
jo
jmp
cdq
cmps
inc
lahf
sbb
mov
ret
rcr
call
(bad)
aam
mov
mov
pop
and
inc
aad
xor
outs
ret
call
aaa
dec
sbb
test
int3
sub
jp
mov
fmul
inc
mov
cmp
xchg
pop
add
add
test
mov
stos
dec
cld
in
mov
mov
xchg
xchg
fs
dec
xor
sbb
dec
addr16
push
mov
fadd
and
push
(bad)
sbb
or
pop
lock
push
xor
ja
jns
add
aam
sbb
add
fldenv
(bad)
xlat
jb
mov
mov
addr16
ret
inc
inc
fwait
jp
imul
movs
popf
cld
cmps
mov
cmp
push
mov
push
test
fistp
addr16
and
int
test
fiadd
arpl
and
loop
aas
test
and
sub
add
aad
test
inc
aaa
push
or
sahf
scas
pop
(bad)
mul
mov
or
jae
pop
pop
xchg
jns
cmps
popf
pop
push
test
cwde
pop
xchg
jecxz
nop
cmp
sbb
(bad)
mov
jl
mov
out
fld
jnp
je
mov
outs
imul
xchg
ret
lds
xchg
adc
inc
push
ja
cmp
jge
in
fdivr
jns
pushf
test
jmp
add
ins
mov
mov
jae
sbb
ret
out
adc
pop
imul
add
and
or
push
adc
shl
icebp
cs
scas
and
adc
push
and
sub
mov
push
outs
xchg
mov
lock
pop
outs
pop
adc
dec
fidivr
xchg
pop
fidiv
clc
inc
mov
push
mov
jle
mov
mov
ror
scas
jg
mov
inc
(bad)
fstp
push
ins
jmp
(bad)
ins
out
leave
and
or
es
lea
(bad)
push
mov
cmp
push
ds
mov
dec
out
test
addr16
jns
pop
sti
adc
iret
and
daa
push
add
das
xlat
cmp
test
mov
xor
add
sub
enter
out
(bad)
ret
mov
and
enter
mov
pop
pop
add
cmp
enter
ds
popa
test
xchg
push
push
push
or
add
xchg
push
icebp
sbb
fwait
jle
push
mov
fwait
mov
pusha
jmp
inc
cmps
retf
loopne
pop
xchg
es
into
dec
push
das
clc
(bad)
and
sub
cmp
es
xor
inc
mov
mov
scas
cli
out
sbb
mov
mov
movs
mov
pop
adc
mov
xchg
and
mov
lock
retf
dec
icebp
mov
sar
mov
outs
clc
das
je
clc
imul
(bad)
jmp
sbb
jno
add
adc
stc
loopne
repnz
ds
dec
adc
iret
add
rcl
stos
jl
aaa
jno
mov
in
aaa
nop
aas
mov
hlt
daa
pop
repnz
pushf
jb
dec
jecxz
push
arpl
xlat
scas
mov
push
rcl
lock
es
inc
psubsw
rcl
iret
jle
sub
push
mov
dec
(bad)
jae
loopne
ds
lock
xor
pop
cmp
pop
movs
out
jne
inc
fsubp
shr
pushf
jno
fwait
scas
jns
mov
mov
int
mov
popa
add
arpl
add
mov
shl
jge
sbb
fbstp
xor
mov
sub
mov
adc
pop
push
ins
fist
push
retf
or
jns
dec
or
jbe
leave
hlt
pop
lds
pop
add
xchg
pop
sub
test
jno
test
sbb
mov
push
adc
xchg
pop
adc
pop
mov
inc
xor
and
push
out
mov
(bad)
jns
dec
xchg
repnz
iret
adc
(bad)
and
inc
shr
dec
xor
fs
cmp
jno
cmp
xchg
mov
mov
inc
dec
xor
push
pusha
inc
pop
cmp
push
jae
cmp
jg
(bad)
rol
adc
mov
add
push
movs
jae
dec
xchg
(bad)
inc
lods
inc
mov
scas
movs
push
push
cmp
push
lods
sub
lods
out
adc
vpaddd
test
pop
inc
ins
push
mov
xor
sbb
hlt
mov
ds
loope
adc
push
push
rcr
and
hlt
jl
retf
lds
jae
xor
pop
fimul
cdq
call
cmps
sbb
repnz
or
push
mov
loop
loope
dec
jecxz
jmp
pop
xchg
pop
sbb
jne
cmp
add
jg
push
add
jnp
aas
loopne
stos
popf
cmp
add
mov
iret
shr
jbe
cwde
movs
outs
popf
or
(bad)
sti
cs
ficom
ret
mov
test
ret
xchg
push
or
addr16
out
js
sahf
scas
inc
or
or
addr16
fbstp
sub
adc
add
ins
xchg
stos
out
jecxz
mov
mov
jmp
pop
es
cmps
push
fcom
mov
adc
pop
outs
xor
outs
push
adc
std
jbe
or
cmp
push
push
cld
int3
out
xchg
in
jns
gs
push
cld
and
mov
clc
jmp
les
xor
sbb
or
jo
dec
in
in
push
push
dec
std
int
or
or
xchg
loopne
ja
out
jne
out
test
scas
test
pop
loopne
leave
(bad)
fnsave
xchg
fcomp
aas
add
sub
xchg
das
jge
mov
xor
mov
sbb
dec
xor
add
inc
cmc
inc
repz
mov
and
(bad)
imul
fyl2x
push
inc
jnp
out
mov
lods
mov
scas
jl
gs
sub
jge
inc
xor
adc
inc
cmc
xor
loopne
xor
push
mov
mov
mov
in
daa
jne
push
jb
push
outs
jge
ss
xchg
(bad)
out
jne
shl
jb
mov
out
mov
mov
pop
(bad)
mov
xchg
movs
ficomp
in
sbb
in
cmc
jle
es
xor
push
xor
push
push
and
aad
jle
sbb
daa
mov
pushf
movs
jg
pop
adc
cmp
test
xor
mov
jg
fwait
jnp
sbb
test
fisub
mov
adc
mov
xchg
jg
pop
sbb
imul
out
pop
pop
push
cdq
in
aaa
test
sahf
shr
jmp
sbb
sbb
cmps
jns
sti
jmp
neg
scas
fldenv
dec
mov
push
shl
and
(bad)
jo
add
inc
cdq
jo
xor
mov
xchg
jecxz
mov
cmp
push
jge
add
in
add
jae
xchg
dec
clc
xlat
(bad)
lods
mov
ins
mov
and
add
popa
adc
mov
enter
pop
mul
retf
push
loope
lods
sbb
fucomp
push
sbb
js
jl
mov
iret
stos
mul
daa
div
hlt
in
out
(bad)
sti
test
mov
fdivr
outs
rcr
push
aad
jb
hlt
ret
sahf
mov
fadd
mov
add
jp
dec
push
push
fist
jecxz
pop
test
jmp
cmp
add
out
pop
data16
shl
and
iret
test
mov
cmp
stos
shr
hlt
icebp
mov
cmp
aad
aad
pop
or
mov
xchg
stos
cli
scas
ds
mov
fnsave
shl
not
push
fwait
xlat
pop
retf
call
dec
inc
loop
inc
and
mov
clc
shl
mov
outs
retf
movs
lea
pop
sbb
into
call
sbb
test
jl
jmp
movs
add
in
das
(bad)
jg
in
add
sti
inc
jo
mov
in
cmp
xchg
ret
es
pop
jle
inc
mov
xor
call
je
inc
cmp
cmc
(bad)
scas
mov
es
sub
xchg
jae
xor
mov
mov
mov
cmp
je
xchg
(bad)
mov
mov
inc
retf
outs
jns
lods
shl
cdq
jmp
jb
jns
adc
outs
loopne
clc
std
cmc
jmp
retf
adc
sbb
in
(bad)
(bad)
or
dec
inc
iret
mov
mov
and
adc
add
nop
add
movs
stos
loope
push
inc
leave
lds
stos
mov
aad
cmps
push
inc
popa
jge
push
inc
jle
daa
jle
das
jo
and
ds
mov
test
inc
mov
lahf
stc
pop
into
mov
aas
out
outs
outs
test
cmp
ret
ss
lock
daa
arpl
inc
mov
ss
scas
arpl
mov
pushf
fisttp
xor
call
stos
arpl
add
pop
icebp
imul
or
jbe
and
loope
jmp
jg
xchg
adc
xor
inc
sub
cmp
ins
dec
clc
shl
fsubr
inc
ins
aam
xchg
rcr
mov
and
cmps
or
sub
out
mov
cli
fsubr
dec
add
addr16
movs
repz
mov
dec
out
test
add
and
shl
(bad)
js
sahf
jmp
cwde
cmp
xchg
or
mov
movs
inc
dec
cmps
mov
in
ds
mov
cmp
scas
cmc
arpl
daa
jae
(bad)
inc
into
fld
xchg
(bad)
adc
dec
movs
or
test
fld
push
xchg
iret
cmc
mov
xor
jge
(bad)
cdq
enter
ds
or
sub
add
dec
adc
lahf
cdq
or
fcomp
or
jns
pop
xchg
pop
inc
lea
jno
ss
fst
test
sbb
daa
inc
imul
mov
and
mov
jb
mov
mov
sub
js
pop
fwait
mov
adc
xor
fisubr
push
mov
ja
push
dec
ins
pushf
std
xchg
(bad)
imul
mov
push
fbld
aas
add
jmp
sub
and
shl
repz
or
inc
outs
test
jbe
pop
(bad)
stos
dec
mov
iret
std
into
outs
dec
inc
popf
sub
stos
stos
pop
ins
bound
jg
cwde
imul
pop
push
ret
mov
retf
mov
sbb
mov
mov
mov
mov
fisttp
mov
rol
dec
push
xor
sti
cmp
mov
inc
popf
pop
mov
jo
cmp
and
lods
dec
mov
addr16
push
xchg
sahf
fsubp
jo
mov
push
nop
mov
in
or
cli
sub
shl
push
inc
and
out
sbb
xor
pop
push
aam
add
sahf
push
xlat
cld
int
ins
mov
stc
xor
lock
push
adc
stc
shrd
sahf
out
pop
leave
shl
jne
pusha
and
dec
pop
mov
ss
push
inc
pop
adc
jg
test
mov
pop
lea
mov
sbb
jb
lock
mov
mov
iret
ins
adc
js
inc
stc
leave
in
mov
lods
fsubr
push
and
adc
push
outs
mov
add
mov
pop
fcomp
pop
jp
sub
cmps
int3
and
in
repnz
mov
pop
mov
jmp
sbb
cdq
(bad)
jle
fs
aas
ins
int3
or
push
int3
aam
imul
sub
mov
gs
jg
in
mov
shl
and
loop
lods
shl
in
jmp
push
ins
cld
std
inc
or
sbb
repnz
pop
repnz
jmp
add
add
lods
lods
lock
pop
sar
in
jns
mov
sbb
inc
retf
cmps
mov
in
mov
out
pop
into
retf
dec
jo
daa
fwait
ds
inc
pop
lea
mov
shl
pop
in
jge
mov
push
popa
mov
bound
aad
or
xchg
mov
fcmovu
sti
adc
or
mov
enter
shl
sub
movs
test
cmp
mov
fld
xchg
rol
(bad)
sbb
xchg
xor
pop
add
ror
mov
ss
out
test
mov
cmp
mov
lahf
sbb
and
push
cmp
push
cld
mov
lds
add
jg
jae
aaa
fbstp
rol
add
(bad)
sahf
and
sub
movs
mov
stos
sbb
movs
js
mov
in
cld
fwait
repnz
test
dec
(bad)
jl
inc
scas
popf
aam
les
test
xlat
in
or
scas
push
mov
dec
dec
mov
stos
mov
mov
pop
std
lock
add
cmps
mov
loop
and
outs
iret
int3
retf
jno
mov
push
fs
sub
pop
jae
cmps
or
sub
imul
dec
fsub
dec
dec
das
aas
dec
ret
jmp
sub
sbb
and
rcr
xchg
push
add
mov
int3
daa
jp
imul
push
inc
sbb
mov
popf
fidiv
dec
mov
sub
stos
inc
inc
mov
cdq
dec
lahf
sub
das
push
mov
(bad)
shl
inc
imul
sbb
cmp
mov
les
push
mov
ja
pop
movs
or
pop
shl
repnz
push
sbb
cmp
and
push
mov
movs
int
lahf
or
push
mov
adc
and
dec
js
lock
sbb
sub
jns
loope
pusha
add
leave
add
adc
ror
mov
stos
add
jl
dec
fwait
sub
fisub
mov
sub
cmc
and
push
jmp
push
nop
retf
and
repz
jnp
imul
cmp
test
pop
fstp
call
loopne
fadd
cld
pushf
xor
jmp
pop
and
mov
jmp
jmp
pop
mov
loopne
aad
retf
les
mov
aad
mov
push
jns
nop
fsub
xlat
sbb
rol
shr
adc
pop
push
aad
daa
pop
jne
lock
mov
jmp
ins
lock
cmc
scas
cmc
adc
jbe
dec
repz
jae
add
dec
jmp
je
mov
into
xor
jl
xchg
jb
arpl
push
int
or
mov
cmps
dec
scas
stos
inc
movs
pop
lahf
aas
pop
jns
add
xchg
xor
push
inc
aaa
sub
movs
pushf
inc
push
je
mov
imul
loop
add
outs
(bad)
ficom
mov
pop
sub
mov
or
cmp
cs
push
push
ror
xchg
test
out
inc
rol
jnp
fstp
push
test
sbb
xor
mov
pushf
sub
add
jp
or
or
mov
adc
and
loop
pusha
nop
movs
cld
arpl
test
cmp
inc
ret
in
outs
call
fcmove
xchg
movs
iret
(bad)
dec
sub
call
jmp
push
jl
push
das
call
scas
mov
inc
dec
retf
and
inc
add
push
arpl
je
in
jne
xor
jns
inc
scas
mov
push
or
and
inc
into
stos
gs
inc
loop
dec
in
iret
out
push
cli
jmp
pop
shl
dec
mov
into
jmp
jmp
dec
ret
cdq
mov
cmp
mov
dec
outs
add
or
jo
pop
dec
sub
dec
add
pop
fld
push
nop
add
push
sub
cmp
(bad)
push
data16
popa
xor
push
cmp
mov
adc
mov
mov
cmc
push
cld
es
add
push
pop
retf
stc
stos
mov
jecxz
cmps
fsub
adc
ret
mov
add
cmp
cmp
push
dec
ins
jne
clc
sub
fadd
loope
call
sahf
pop
sbb
push
pop
sbb
mov
imul
push
leave
sub
and
je
push
repnz
cs
nop
cmp
inc
push
push
aas
xor
jae
stos
sbb
pop
jge
xlat
pop
push
loop
sbb
jp
pop
add
add
mov
out
push
xor
or
gs
dec
inc
xor
idiv
mov
inc
sti
push
xchg
loop
cld
cwde
mov
jns
push
sbb
int
mov
and
iret
push
xor
pop
sbb
cmc
xchg
lods
mov
int
(bad)
mov
imul
xchg
dec
jp
retf
jmp
andnps
fdivr
push
nop
adc
adc
rcl
xchg
sbb
stos
jp
jg
aad
pusha
mov
sub
jbe
jae
and
daa
cmp
data16
sbb
pop
cwde
test
push
lea
mov
xor
(bad)
jo
add
in
int
mov
mov
popa
nop
push
repz
repnz
jae
js
scas
aam
call
pop
fst
xchg
test
ret
xchg
mov
popa
loope
mov
mov
mul
inc
mov
(bad)
out
sub
mov
jp
inc
inc
sbb
mov
out
push
jae
push
jmp
and
and
or
(bad)
ins
adc
in
mov
mov
jb
xchg
pop
xchg
enter
cdq
dec
cmps
cmp
xor
inc
mov
mov
add
inc
(bad)
shr
xchg
push
in
retf
sub
sbb
out
out
(bad)
repnz
fcom
jns
sahf
push
hlt
scas
hlt
push
hlt
(bad)
cmp
jnp
nop
in
(bad)
in
or
cmp
and
lahf
aas
inc
mov
fisubr
inc
pop
xchg
adc
mov
or
push
or
push
add
push
and
les
cmps
in
nop
mov
daa
mov
jl
out
cmp
inc
mov
xor
inc
nop
pop
out
mov
xchg
loop
call
rol
std
mov
pop
std
xor
in
push
mov
jae
(bad)
adc
push
jg
in
ins
adc
daa
mov
stc
bound
std
stc
and
xchg
mov
fnsave
fsubr
xor
inc
scas
je
out
out
and
and
and
retf
test
sbb
mov
mov
in
mov
jle
mov
ror
xchg
call
mov
sbb
dec
movs
xchg
xchg
mov
jo
out
lds
lock
adc
add
add
stos
dec
test
and
cmp
add
and
leave
mov
aam
jno
inc
dec
hlt
adc
cmc
push
cmps
sub
or
xchg
loop
mov
xor
cld
cmp
fcmovnu
pushw
in
outs
adc
cmp
sbb
ss
in
ja
cld
push
fisub
push
push
iret
push
lea
aas
cs
lds
or
jle
fbstp
test
jecxz
mov
add
(bad)
adc
and
mov
push
(bad)
xchg
test
inc
sub
or
or
jns
jmp
sbb
pop
dec
pushf
pop
fimul
les
push
cld
fwait
cmp
adc
push
pop
adc
stos
mov
retf
dec
jne
push
mov
popa
sti
and
pop
xchg
test
sbb
fwait
outs
icebp
push
fnstsw
fwait
cmps
or
fcomp
mov
loope
adc
mov
sub
inc
adc
fucom
xor
hlt
in
and
sub
(bad)
(bad)
rol
cdq
mov
adc
push
inc
add
fisub
fwait
shl
cdq
in
ins
cmp
data16
mov
das
push
jae
std
mov
add
pushf
sub
mov
push
lds
dec
add
mov
mov
popa
mov
pop
movs
rol
xchg
xor
push
movs
pusha
lahf
stos
mov
adc
mul
je
aad
sbb
idiv
cld
add
sub
cmp
inc
js
jle
shl
jmp
sbb
push
dec
movs
scas
shl
stos
cli
retf
icebp
imul
jg
or
mov
xlat
cmp
and
and
ins
mov
out
das
test
adc
xlat
js
enter
jo
stc
sbb
mov
fwait
jno
inc
dec
icebp
jns
fild
xchg
dec
adc
or
inc
sbb
and
stc
retf
mov
and
ins
out
dec
dec
xchg
bound
sbb
mov
pop
and
cs
cmp
mov
pop
pop
and
cmp
add
aas
dec
ret
lahf
call
or
sbb
(bad)
inc
pop
clc
add
rol
stc
or
cmp
sub
cmps
in
sub
adc
push
ins
out
ret
shr
hlt
imul
sub
pushf
mov
mov
shl
popf
popf
inc
sub
jle
pop
retf
ror
(bad)
loop
inc
mov
jns
scas
jl
sub
imul
pusha
cmp
sbb
or
out
pop
stos
fucomip
mov
push
(bad)
jmp
loop
out
xchg
mov
ins
test
or
inc
pop
les
xor
inc
in
bound
fisub
pop
inc
push
ins
fcom
(bad)
shl
mov
out
push
aaa
ficomp
xchg
push
enter
dec
mov
clc
dec
arpl
stos
cli
mov
stos
mov
jns
adc
jno
out
dec
lds
out
or
test
pop
dec
mov
cmps
sbb
jmp
in
ret
cli
enter
mov
mov
sbb
mov
adc
mov
pop
jnp
jle
push
lea
dec
or
xchg
movs
adc
repz
leave
pop
xor
dec
inc
ror
ins
adc
ds
dec
shl
jecxz
and
ins
lods
inc
dec
call
push
or
inc
mov
jbe
add
pop
or
sub
inc
pop
and
adc
sbb
push
and
scas
pop
nop
inc
out
dec
dec
movnti
mov
or
clc
dec
cmp
out
xchg
cmp
fs
push
scas
jae
cmp
aam
sub
iret
jge
fild
xchg
jle
jo
je
mov
mov
mov
(bad)
jnp
push
mov
gs
mov
out
data16
jp
jp
aam
or
cdq
mov
adc
mov
movs
popa
stos
push
sub
into
push
mov
dec
cmc
mov
lods
sub
jge
push
fnstcw
push
std
fld1
rcr
pop
jmp
stos
cdq
adc
xchg
(bad)
cmps
sbb
jbe
sbb
ins
ss
movs
push
jmp
or
xchg
mov
bound
cmp
xchg
lahf
inc
test
call
add
jecxz
fldenv
jl
rcl
and
es
jmp
cmp
inc
adc
jg
xchg
inc
(bad)
push
cmp
mov
dec
mov
outs
test
in
jl
ds
jb
jb
out
jae
push
cmp
add
sbb
mov
repnz
ret
fisub
xchg
sub
popa
jns
pushf
mov
aas
xlat
std
loope
mov
add
imul
test
dec
add
inc
and
mov
sbb
in
mov
adc
dec
cmps
jge
rcr
sbb
mov
(bad)
dec
sub
dec
jo
sub
(bad)
xor
push
jmp
cmps
(bad)
xor
xor
in
call
sahf
and
pop
push
enter
xchg
cmp
repnz
ret
xor
cmp
pop
jge
test
stc
cmc
sub
dec
adc
or
jmp
inc
push
mov
xchg
mov
ins
fdivr
dec
ror
aam
(bad)
mov
cmp
jbe
stos
dec
mov
add
sbb
adc
popf
or
dec
cwde
push
ins
neg
and
inc
mov
(bad)
shl
adc
data16
fisubr
imul
cld
hlt
sub
repz
mov
lahf
add
push
daa
cmp
pop
mov
fsubr
retf
push
adc
push
mov
cli
xor
lods
fmul
adc
xchg
mov
test
or
push
and
pusha
xchg
dec
aas
pop
dec
add
loop
out
cwde
inc
inc
mov
pop
mov
clc
adc
out
sbb
jno
dec
xor
outs
xor
dec
addr16
jmp
sub
sbb
and
sub
int3
popf
xor
les
mov
cmc
loopne
fs
mov
lds
iret
or
out
std
cmp
inc
cwde
mov
cmps
adc
fmul
jb
mov
rcr
jg
popf
fistp
pop
mov
lahf
xor
repnz
(bad)
jmp
repnz
int3
jl
pop
mov
cmp
dec
jg
ja
and
xchg
jmp
out
pop
ins
sahf
cs
xchg
fidivr
es
or
pop
aad
add
shl
lahf
add
stos
pop
sbb
jb
pop
jl
hlt
inc
ins
mov
call
or
cdq
(bad)
add
dec
fmul
movq
dec
inc
sbb
inc
dec
ss
popa
mov
mov
and
sar
arpl
sbb
mov
and
and
addr16
retf
arpl
inc
daa
mov
repnz
xor
push
add
(bad)
not
test
mov
adc
push
dec
inc
call
add
push
aam
ret
retf
jo
loop
into
and
test
out
sbb
jp
nop
push
or
push
dec
and
jb
push
xchg
fnstenv
fist
mov
dec
xchg
and
jmp
shl
xchg
test
ds
push
xor
dec
push
js
fcmovnu
and
and
inc
xchg
sbb
call
cmp
das
inc
fs
cld
sbb
imul
test
push
nop
xor
pop
stos
xchg
not
fdivr
ror
adc
mov
std
sub
and
aas
or
shr
sbb
push
pop
push
and
and
cdq
(bad)
jp
sbb
prefetch
sub
adc
(bad)
xchg
inc
lea
dec
cmp
pop
adc
leave
rcr
dec
aas
lods
ret
or
and
call
lds
inc
jne
push
sbb
packssdw
(bad)
xor
cmp
retf
push
mov
mov
fbstp
mov
mov
push
(bad)
mov
mov
shl
dec
mul
daa
fnsave
cwde
push
std
fdivrp
adc
mov
sub
gs
dec
popa
xchg
outs
and
std
push
xor
popf
or
jbe
aad
frstor
add
aas
idiv
stc
mov
cmp
inc
(bad)
xor
mov
scas
(bad)
jl
inc
jno
and
outs
iret
imul
dec
mov
pop
ror
cdq
xchg
adc
mov
sbb
mov
jecxz
cld
jbe
gs
mov
aam
retf
sbb
sbb
inc
jmp
mov
in
(bad)
mov
cmps
lods
rcl
popa
aas
push
xor
push
adc
test
add
add
jnp
and
scas
jge
pop
je
imul
dec
lods
sbb
imul
mov
imul
addr16
loopne
sbb
pop
sbb
(bad)
clc
test
or
jmp
push
cs
dec
fcom
fs
frstor
fidivr
add
jo
lea
loop
lods
jno
dec
sbb
dec
pop
inc
mov
add
ror
cmc
lahf
pop
mov
fwait
in
mov
fbstp
pop
or
or
in
je
xchg
xchg
mov
retf
sar
data16
jns
loopne
add
jmp
pusha
(bad)
movs
loopne
fistp
dec
sbb
push
jle
mov
mov
mov
(bad)
pop
fs
stc
add
dec
lods
xlat
fidiv
inc
push
sbb
and
mov
mov
int
adc
hlt
dec
sbb
test
mov
je
and
cmp
(bad)
ss
cld
addr16
in
sar
adc
add
fldcw
(bad)
xor
loop
imul
jo
pop
jb
(bad)
hlt
js
and
pushf
xchg
pop
cmc
push
idiv
in
test
arpl
sub
inc
add
mov
aas
sti
xchg
adc
loope
rcl
push
sub
sbb
cmps
stos
ss
inc
inc
dec
mov
(bad)
cmp
adc
sar
packsswb
mov
or
sti
movs
outs
pop
mov
lds
imul
cmp
enter
mov
not
jmp
int3
movs
(bad)
or
(bad)
mov
sti
lds
das
ins
xchg
cs
ret
lods
retf
cmps
push
pop
xchg
fwait
mov
pop
pop
(bad)
mov
push
push
pusha
xchg
dec
dec
add
push
push
xchg
xchg
jns
pusha
mov
bound
and
scas
cmp
cmp
sub
lds
jecxz
inc
and
mul
sti
xchg
push
test
xor
mov
retf
rcl
dec
cmp
movs
je
rol
pop
or
sbb
out
imul
movs
ins
cmp
cld
cmp
sub
pop
in
jecxz
or
cmps
sbb
pop
ret
lock
xchg
xchg
sti
pop
pop
mov
into
jb
mov
inc
or
add
cmps
xor
ss
cdq
in
leave
inc
das
aam
(bad)
xchg
mov
pop
retf
cmps
jbe
scas
jmp
xchg
gs
dec
dec
std
imul
pop
int
sbb
jmp
xor
cwde
stos
xchg
rol
ss
mov
xor
push
jge
in
in
xchg
sbb
pop
aad
push
div
sahf
inc
test
and
adc
sub
ins
and
mov
or
or
mov
dec
(bad)
mov
je
adc
inc
es
mov
inc
mov
adc
xchg
das
sbb
in
cmps
loopne
retf
cmp
add
pop
test
mov
cdq
inc
jo
xchg
lods
inc
loop
lock
in
cmp
in
dec
jmp
aad
or
xchg
cmp
pop
adc
and
sti
iret
in
pusha
ficom
jmp
or
cli
fimul
ins
pop
mov
xlat
in
in
cdq
jb
fnstenv
jecxz
outs
shr
scas
out
lods
adc
and
adc
aaa
mov
xor
das
inc
cmps
add
sbb
sbb
add
stc
repnz
(bad)
shl
aad
call
sub
push
mov
cmps
sar
sbb
cmp
sbb
sbb
popa
out
dec
add
mov
adc
add
aaa
aas
mov
xchg
xchg
cld
cli
jl
test
inc
jecxz
arpl
jae
fmul
cmp
inc
pop
fsubr
cmp
and
sbb
push
add
add
jo
ins
mov
out
dec
cmp
ja
lea
ret
add
xchg
add
popf
(bad)
adc
jmp
dec
mov
ins
in
mov
movs
pop
mov
inc
call
int3
inc
xor
cmp
loopne
(bad)
cmp
lock
jns
xor
sbb
inc
hlt
jns
adc
ret
aam
and
lahf
inc
inc
jns
mov
pop
stos
xor
inc
mov
mov
add
movs
test
ins
push
aaa
sbb
pop
add
hlt
(bad)
push
jmp
mov
sbb
add
cmps
aad
hlt
in
push
mov
sahf
mov
pop
int3
jo
gs
ror
adc
push
mov
int
dec
sbb
cmp
test
jmp
(bad)
js
shl
mov
scas
inc
ds
jl
packuswb
cld
sbb
jmp
(bad)
jo
inc
jnp
outs
ror
mov
xchg
inc
data16
cs
std
inc
xor
mov
sbb
aad
mov
mov
stos
test
iret
jb
fcomp
mov
test
ret
ss
(bad)
jns
add
lahf
xchg
cld
jne
aam
dec
outs
popf
call
xor
xchg
test
aam
or
or
imul
fidivr
pop
sub
js
xchg
adc
int3
cmp
push
push
pmaddwd
jp
popa
into
pop
aad
in
int
es
inc
(bad)
xor
int
mov
mov
push
inc
imul
dec
clc
cmp
dec
aam
push
out
jl
xchg
and
sub
fsubr
into
push
jbe
inc
sub
push
xchg
add
mov
cmp
retf
and
mov
add
fcomp
xor
pushf
dec
js
mov
inc
fwait
loopne
ds
pop
jne
push
aam
call
jge
repnz
mov
jl
sbb
inc
pushf
dec
pop
or
(bad)
cmps
enter
fnstenv
cmc
sbb
scas
sub
movs
ror
push
rep
stos
push
mov
jno
pop
ret
inc
mov
ins
push
cmp
std
ret
fidivr
push
xor
ins
shl
ins
cld
or
fsubr
inc
sub
sub
fs
pop
add
(bad)
sub
repnz
je
movs
ror
movs
jb
dec
xor
into
mov
jp
or
and
xlat
add
xor
leave
(bad)
jo
rol
ss
cmps
rcr
jmp
ins
jge
add
(bad)
mov
mov
mov
adc
ss
test
cmp
stos
mov
xchg
add
push
std
cwde
lods
movs
hlt
inc
sub
add
test
pushf
(bad)
lea
mov
cmp
repnz
sbb
mov
jge
fisub
push
cmp
lea
cdq
leave
mov
dec
sti
enter
sbb
in
fwait
ret
loope
call
mov
sbb
enter
or
mov
push
or
cmp
xchg
pop
xchg
stc
js
in
sub
sbb
push
enter
sub
sbb
mov
mov
jo
out
push
std
fisub
out
xchg
mov
dec
jmp
sbb
jge
sbb
test
mov
(bad)
or
sbb
jae
out
jmp
popa
pop
popf
and
dec
pop
and
mov
inc
add
mov
push
popf
shl
adc
dec
inc
adc
and
jne
js
push
or
jb
jle
sub
repz
sub
sub
aam
loop
je
cmp
in
xchg
xchg
sbb
mov
dec
mov
aas
fucomi
cmp
inc
js
mov
and
mov
iret
dec
pop
jns
push
ret
push
add
xchg
push
in
push
aaa
psadbw
rcl
jmp
sub
frstor
cs
sbb
ds
iret
call
mov
mov
scas
(bad)
push
push
pop
and
mov
push
outs
(bad)
jb
movs
push
push
pop
jb
add
xchg
jmp
push
cmp
inc
repnz
cmp
push
jno
sub
outs
xor
js
sub
movs
int3
aas
pusha
ror
js
sbb
push
ss
or
jnp
xchg
cmc
push
clc
imul
cmc
mov
push
loope
dec
fnstsw
mov
adc
mov
sbb
or
in
mov
sbb
jno
lahf
cld
adc
push
xchg
ins
aaa
js
fwait
cmp
cmc
cmps
cmp
mov
stos
mov
cmps
push
(bad)
jno
jo
mov
mov
sbb
sbb
paddsw
pop
loope
xlat
xchg
jae
inc
pop
hlt
sub
loop
in
std
push
dec
pslld
popf
push
fnstcw
outs
pop
mov
or
ret
ins
cmp
(bad)
sbb
cwde
icebp
sub
inc
scas
loop
xor
mov
int3
inc
es
lods
mov
stos
xchg
(bad)
out
push
or
adc
lods
inc
arpl
test
test
add
push
push
stos
xchg
aas
inc
sbb
mov
adc
or
iret
add
sbb
pop
imul
push
sub
in
cmp
outs
mov
xor
add
mov
inc
(bad)
out
lods
movs
cmp
test
push
cmc
pop
jne
xchg
mov
push
pop
push
cld
fimul
lods
jb
xchg
pop
or
lock
stc
gs
(bad)
and
mov
js
(bad)
movs
mov
mov
(bad)
imul
out
cdq
pusha
and
cmps
retf
jno
hlt
inc
(bad)
xlat
jae
or
inc
lods
cli
test
repz
ror
hlt
xchg
sbb
fsub
adc
outs
inc
mov
fstp
pop
stc
xor
out
xor
or
shl
mov
mov
inc
mov
addr16
ret
dec
mov
aad
jmp
cmp
mov
sti
test
pop
(bad)
ins
popa
mov
fsubp
ins
scas
fdivr
clc
push
ror
jl
rol
cmps
out
sar
cmc
lods
lock
push
lahf
sbb
dec
or
or
cmps
into
and
or
xchg
jmp
out
xor
pusha
cdq
push
fsub
fsub
sar
pop
in
mov
pop
cmc
mov
mov
push
cmp
ds
sbb
in
cdq
pop
push
inc
cmp
add
ret
lds
dec
out
int3
and
xor
mov
mov
xchg
call
pop
fdivr
pop
cmp
cli
pop
lods
stos
dec
and
sbb
sub
(bad)
sbb
nop
stos
mov
cmps
cmc
adc
scas
mov
sub
imul
aad
jns
xchg
push
and
dec
enter
mov
in
xlat
dec
push
push
stc
pop
or
cli
lahf
shr
stc
test
push
adc
cmp
inc
or
popa
sub
fistp
jmp
iret
mov
rcr
(bad)
sbb
fnstenv
push
(bad)
outs
out
dec
add
into
loopne
scas
inc
lea
sti
ins
hlt
xchg
cdq
rcr
mov
fisub
jle
fistp
or
hlt
mov
dec
stos
outs
mov
bound
mov
stos
mov
jnp
xchg
js
bound
mov
add
int3
sbb
inc
mov
repz
fcomp
mov
mov
das
cwde
inc
jecxz
add
jmp
xchg
fidivr
pop
xchg
cmp
sbb
mov
retf
call
sti
cmc
lods
jl
xor
mov
sub
xor
sub
or
adc
scas
icebp
ficom
push
imul
retf
paddusb
int
(bad)
repnz
push
xor
xchg
rcr
xchg
and
adc
cmps
dec
pop
ror
jns
add
leave
push
pop
dec
bound
push
push
and
cwde
(bad)
push
push
popa
sahf
div
jmp
les
lea
xchg
sahf
xor
xchg
mov
aas
inc
daa
cwde
mov
daa
loop
fisub
dec
ins
xlat
inc
adc
push
xchg
sub
push
inc
test
mov
mov
ss
xlat
xor
js
imul
jnp
lods
jae
push
fisubr
lods
mov
adc
pop
push
inc
jmp
mov
sbb
(bad)
jns
mov
pop
cli
adc
icebp
scas
loopne
jmp
jmp
fisub
xlat
push
daa
inc
loop
jo
aaa
gs
ret
out
adc
inc
in
or
pop
adc
pop
push
inc
push
adc
adc
inc
loop
test
data16
scas
loop
pop
mov
(bad)
jl
fdivrp
jg
shl
and
rcl
ja
mov
push
pop
xchg
dec
stos
pop
fyl2xp1
fcom
popf
popa
mov
aaa
(bad)
dec
mov
retf
je
out
lds
sub
mov
scas
fisubr
movs
push
idiv
fist
or
jl
xor
or
js
cmp
imul
sbb
test
aam
in
and
adc
or
jns
call
lods
push
sub
shr
dec
ds
pop
aad
add
sub
and
xchg
dec
mov
daa
dec
stos
scas
push
imul
fistp
push
lds
push
xor
aad
out
test
mov
ss
sbb
mov
movs
sbb
ins
xchg
hlt
dec
and
xor
jmp
mov
pop
inc
add
mov
sti
and
(bad)
mov
push
inc
movs
inc
jl
int
inc
inc
push
movs
xchg
and
and
imul
clc
sbb
ud2
mov
hlt
(bad)
mov
xor
adc
ror
call
mov
test
fisub
xor
test
mov
pop
mov
ds
push
int
stos
jns
imul
mov
lock
dec
jp
sub
and
ja
call
(bad)
arpl
ja
mov
mov
xor
sub
inc
mov
adc
mov
xor
fnstenv
sbb
das
popa
xor
add
(bad)
cmp
push
(bad)
fucomi
or
dec
push
mov
das
dec
clc
jmp
in
mov
push
jb
addr16
test
scas
imul
push
movs
js
fld
out
jne
(bad)
or
push
jnp
inc
pop
cmp
test
xchg
sbb
cmps
cli
inc
mov
fldenv
mov
cmp
cmp
push
push
xor
jnp
gs
shl
nop
adc
jmp
(bad)
jb
aaa
jge
(bad)
arpl
ins
jbe
retf
and
fidiv
dec
mov
loope
ss
mov
scas
or
fist
xor
xor
lahf
and
mov
pushf
sbb
xlat
imul
out
inc
xchg
mov
dec
jnp
movs
adc
fucomip
rcl
clc
or
lahf
xor
rcl
rcl
mov
mov
inc
mov
ret
jno
mov
pop
imul
shl
mov
fstp
cmp
pop
pop
or
loopne
ja
jmp
jmp
pop
stc
cmp
mov
ret
adc
lods
idiv
dec
cmp
inc
jns
dec
pop
adc
mov
hlt
aam
(bad)
jbe
add
push
(bad)
jg
and
rol
enter
jg
movs
xchg
mov
frstor
cwde
sub
mov
je
inc
call
je
xchg
jno
pop
(bad)
fadd
fcomp
adc
sub
push
xchg
jmp
imul
jns
test
fmul
jle
test
push
fisubr
mov
mov
loop
jmp
adc
mov
loopne
push
fst
sbb
sub
mov
push
stos
push
cmps
rcr
(bad)
ficomp
sahf
pop
test
ja
sbb
(bad)
jmp
dec
xchg
rcl
sbb
cmp
retf
cmp
es
fsubr
test
stos
inc
sub
leave
sti
jmp
(bad)
scas
or
bound
push
or
push
shr
jge
lds
repnz
jge
das
out
push
pop
sbb
fisttp
add
aas
shl
add
cmc
mov
xchg
mov
dec
jb
mov
inc
es
in
mov
scas
sub
add
sub
mov
dec
data16
xor
sbb
dec
xchg
jns
sbb
push
and
rcl
imul
mov
sub
repz
sub
aam
inc
add
sti
ds
cmps
outs
fadd
fsub
hlt
pop
bnd
cdq
push
out
and
push
lock
cmp
in
adc
cmp
pop
jmp
test
push
lahf
jb
and
jmp
loopne
push
(bad)
(bad)
dec
hlt
test
stc
mov
sbb
inc
not
fwait
jnp
or
push
cwde
sbb
or
ret
cmp
mov
jmp
mov
push
mov
in
or
xchg
sbb
mov
pop
mov
dec
mov
inc
add
push
fbstp
cmp
ss
add
fiadd
enter
push
push
int
sub
test
je
xor
xchg
adc
xchg
scas
lods
xchg
aad
sub
stc
xchg
movs
pop
sbb
shl
cmps
(bad)
int3
loopne
loopne
adc
call
xor
pop
ins
pop
push
sub
xor
ins
jmp
(bad)
xchg
in
dec
mov
outs
lock
pusha
pop
imul
push
dec
test
movs
add
mov
add
pop
sahf
and
push
call
int
dec
ja
movsx
not
dec
scas
and
and
add
jl
cmp
mov
push
xchg
fcom
in
mov
jg
punpcklbw
pop
(bad)
stos
mov
jp
mov
in
gs
je
adc
hlt
sbb
jecxz
aad
mov
fdivr
jmp
cmp
inc
pop
or
pop
jb
sub
xor
mov
mov
sub
stc
ins
jo
in
mov
call
sbb
pop
stos
in
or
stc
adc
fild
fwait
int
mov
(bad)
mov
sbb
cmp
sti
loopne
jae
add
cmps
mov
inc
adc
pop
test
pmaxsw
push
lea
or
test
inc
(bad)
mov
inc
imul
int3
loope
mov
repnz
inc
mov
daa
xor
push
sbb
push
aam
jo
imul
jae
xor
cmovns
cmp
and
mov
mov
mov
inc
fisttp
ins
mov
ror
fpatan
mov
hlt
sbb
dec
out
jmp
sbb
cwde
rcr
fidiv
mov
cmp
dec
xchg
bound
jecxz
jg
loope
ja
or
add
lods
mov
(bad)
pop
mov
ret
push
mov
jbe
ins
xchg
pop
out
mov
jmp
iret
mov
xchg
sub
cdq
pop
mov
dec
and
cdq
imul
aas
stc
xor
mov
mov
std
loope
test
enter
mov
push
shl
push
jmp
push
sbb
std
jae
arpl
xchg
mov
pushf
stc
jnp
call
fisub
pop
or
fld
in
lods
push
fstp
mov
ds
sar
adc
mov
loopne
int3
adc
push
repz
xlat
aas
add
xchg
dec
loopne
cwde
fst
push
adc
enter
in
lods
loope
clc
pop
jae
repz
sbb
pop
pminsw
dec
movs
mov
nop
out
shl
lahf
cmp
and
fdiv
adc
rol
jae
mov
cmps
fs
outs
in
cli
sti
pop
lea
fcomip
mov
xchg
(bad)
cmc
push
mov
aam
fdiv
es
(bad)
call
movs
cmp
mov
std
(bad)
fsubr
jg
out
sti
data16
in
sub
sbb
cmp
push
out
arpl
pop
fs
jo
shl
pop
adc
ret
jecxz
test
mov
sbb
ds
sub
fmul
push
inc
jmp
test
es
mov
add
(bad)
pop
adc
sahf
push
ja
xchg
and
iret
(bad)
mov
mov
mov
pop
dec
fwait
push
(bad)
movs
nop
xchg
or
int
(bad)
sub
rcl
jno
mov
sub
(bad)
jno
cmp
repz
pop
xor
retf
dec
inc
mov
call
int3
xor
out
xchg
jecxz
pop
adc
and
add
mov
jl
in
sbb
test
cmp
sbb
gs
repz
(bad)
out
push
cmp
xchg
pop
lea
mov
push
jle
test
fbld
arpl
sbb
jle
in
leave
inc
mov
jae
inc
pop
inc
and
imul
mov
adc
out
inc
popf
shl
std
and
cmp
das
mov
or
or
and
lods
mov
xlat
and
pop
mov
ins
mov
or
loop
jne
stos
out
dec
sub
js
fidiv
sbb
in
jg
push
inc
test
pop
sub
sbb
je
add
cmc
ja
nop
movs
mov
test
rcl
scas
push
mov
hlt
push
sbb
cmc
imul
mov
cmp
out
lods
retf
pop
pop
and
cmp
xor
sbb
retf
sub
jae
xor
jns
adc
das
leave
sar
(bad)
shl
out
dec
fcom
(bad)
push
lahf
push
xor
mov
aad
inc
retf
sti
xor
cwde
shl
popa
in
(bad)
cdq
mov
and
push
add
pop
je
loope
jg
inc
in
or
or
int
in
add
cmp
mov
popf
cli
mov
jp
push
in
test
dec
mov
and
in
push
ja
inc
ret
repnz
sbb
fstp
out
mov
cs
outs
mov
in
push
xchg
sahf
jmp
test
test
hlt
jae
xchg
cmc
jns
inc
mov
and
pusha
mov
fwait
push
sbb
mov
xchg
sahf
adc
clc
inc
mov
ja
sahf
sub
xor
jno
xchg
ror
ret
mov
cmps
pop
ins
scas
mov
jno
jle
sub
mov
icebp
stc
rcr
add
adc
dec
or
call
int
jb
inc
(bad)
cmc
stc
adc
mov
jb
out
(bad)
icebp
(bad)
popa
cmp
add
cmp
or
jns
mov
add
jb
jne
sbb
pop
sub
pop
sub
cmps
(bad)
push
test
ss
jge
popf
rcl
or
mov
dec
jns
icebp
or
arpl
mov
push
cmps
xchg
inc
inc
jae
cmps
movs
pop
cli
pop
shl
clc
int
xchg
outs
in
cmp
retf
mov
loop
dec
xchg
fsubr
jno
(bad)
les
xchg
sub
fsub
std
mov
shr
mov
inc
cld
add
ins
in
lods
das
sub
jne
jno
ins
inc
(bad)
pusha
xchg
hlt
and
adc
sub
cmp
dec
inc
jg
xchg
inc
ror
cmp
add
adc
cmc
push
mov
outs
cs
ret
jmp
sahf
xor
xchg
les
das
adc
scas
bound
rol
mov
hlt
(bad)
xor
call
stc
mov
inc
cmp
fs
ret
int3
xchg
popa
mov
sbb
push
dec
imul
push
sub
mov
push
dec
ja
pop
xchg
iret
out
pushf
pushf
jmp
mov
out
push
sar
add
fidiv
aad
repz
es
pushf
aam
jb
inc
pushf
clc
mov
jle
loopne
mov
xchg
mov
or
out
lds
mov
xchg
inc
pop
ror
(bad)
mov
mov
pop
jb
call
pmaddwd
movs
or
dec
cs
xor
cld
xchg
retf
arpl
sbb
jmp
pop
(bad)
(bad)
out
pushf
jne
stc
popf
shl
scas
push
imul
ins
addr16
sbb
xor
xor
xor
cmps
dec
sahf
into
xchg
ret
mov
mov
stos
ins
mov
(bad)
jg
in
xchg
fldcw
fld
sbb
push
cdq
jns
pop
loopne
in
cmc
add
leave
cmp
lods
sahf
retf
outs
loop
pop
sub
mov
cmp
gs
test
fisubr
(bad)
mov
test
jmp
outs
and
dec
adc
imul
jmp
test
je
xchg
add
push
xor
in
mov
pop
jnp
ret
(bad)
jmp
xchg
jno
popa
lods
sub
cmps
xchg
imul
inc
ficom
adc
cmps
enter
push
imul
fs
out
sti
in
push
imul
xor
pop
adc
in
mov
mov
arpl
and
adc
and
test
xchg
pop
jp
xchg
dec
repz
sbb
je
sti
int
inc
sbb
fwait
add
aas
lods
push
lods
iret
fisub
lods
popf
mov
jns
movs
dec
cs
xlat
lock
cli
cmps
ins
in
push
sub
pop
(bad)
pop
bound
fwait
mov
jo
enter
aaa
fsub
adc
xor
clc
and
dec
fidiv
shl
aad
xchg
jmp
pop
pop
sti
std
fwait
inc
add
ins
mov
addr16
sbb
and
test
dec
xchg
arpl
ja
mov
fst
mov
lock
scas
retf
mov
imul
ins
dec
fidivr
ins
js
mov
into
rcl
les
xchg
dec
sahf
in
cmps
cmps
jle
lds
fnstenv
inc
adc
adc
dec
adc
adc
sub
pop
jmp
dec
(bad)
adc
mov
ds
test
cmp
jmp
push
adc
sub
(bad)
jge
cld
cmp
or
data16
ins
ret
fld
loopne
inc
or
sub
push
aam
pop
in
jp
mov
inc
xor
push
cwde
ret
loop
pop
jecxz
cmp
cmc
adc
mov
push
pop
popa
xchg
or
cli
popa
out
lods
xchg
pop
sbb
add
ret
and
mov
pop
pop
jmp
std
inc
mov
mov
cwde
push
push
repnz
inc
lods
cs
jbe
int3
hlt
and
inc
ins
(bad)
out
outs
aas
call
cmps
ins
or
pop
nop
cmp
adc
jne
push
data16
dec
cmc
push
bound
cdq
sar
iret
fs
(bad)
cmp
inc
sbb
nop
push
xchg
das
add
cmp
iret
pop
sbb
mov
outs
xchg
stc
call
fmul
mov
mov
sahf
mov
ins
call
add
popf
mov
mov
aam
xchg
aas
sub
test
and
(bad)
(bad)
ds
hlt
push
cmc
popa
jmp
or
mov
(bad)
loop
mov
xchg
adc
retf
jo
stos
ret
ja
inc
popf
in
dec
sub
and
scas
in
dec
cli
xchg
ret
pop
aas
les
xor
iret
or
(bad)
pop
hlt
outs
xchg
dec
pop
dec
dec
mov
cmc
jg
and
xchg
cmc
clc
test
pop
cdq
movs
(bad)
lods
push
inc
int
dec
pop
scas
push
movs
lea
outs
jmp
ss
cmp
jbe
fisubr
adc
aas
jp
push
(bad)
and
push
aas
test
kmovw
xor
or
push
bound
int3
mov
xor
dec
xchg
mov
movs
in
shl
test
cmp
gs
sub
cmp
test
pop
dec
sub
cmc
mov
out
adc
mov
add
icebp
cld
leave
imul
mov
int3
cmc
lds
ins
push
std
sbb
sar
xor
in
sbb
cmp
ins
shr
bndldx
(bad)
dec
iret
es
fisttp
xor
das
dec
out
jmp
dec
sar
xchg
addr16
jecxz
cmp
mov
xchg
pop
enter
mov
sbb
(bad)
and
ror
adc
addr16
push
movs
leave
outs
leave
xor
pop
cmc
adc
xchg
dec
dec
add
mov
dec
enter
les
sahf
sub
popf
fdivr
(bad)
mov
push
loop
jb
cmps
push
shl
xchg
clc
retf
int3
inc
ins
neg
push
inc
ja
sbb
mov
inc
pop
ins
ja
adc
cwde
int
imul
retf
dec
push
push
or
aad
adc
aam
aam
rol
jp
fisub
dec
mov
ja
cmc
std
cmps
fnstsw
rcr
adc
stos
mul
mov
mov
push
or
jnp
fnsave
or
jne
in
or
jnp
fadd
add
mov
fisub
pop
add
xor
dec
xchg
fwait
push
test
sub
sub
(bad)
mov
mov
push
mov
popa
mov
test
shl
cdq
addr16
aaa
cmp
sub
jae
mov
cmp
mov
xor
xor
push
shr
rol
lahf
in
or
(bad)
and
int3
adc
and
rol
fcom
adc
shl
jb
jg
or
(bad)
mov
test
mov
imul
ins
jno
lods
add
repz
imul
not
icebp
movs
rcl
inc
mov
cmc
call
and
sbb
inc
ja
sub
mov
sub
xor
ins
data16
shl
xchg
std
xchg
push
mov
fdivr
push
repz
fidivr
add
pop
push
xor
mov
pop
pushf
sub
into
test
dec
push
lea
fild
xchg
retf
mov
add
aad
push
fbstp
jmp
adc
(bad)
js
test
mov
xchg
push
and
int
pop
adc
add
pop
or
sbb
popa
aas
push
scas
cmp
stc
mov
jno
fs
sbb
mov
sub
push
test
cdq
sub
mov
enter
jbe
out
ror
mov
xchg
mov
cmp
dec
retf
or
push
pop
mov
mov
mov
iret
sbb
xchg
cmp
rep
dec
ret
clc
or
ja
hlt
inc
arpl
xor
inc
shr
ins
pop
push
cli
shr
(bad)
pop
popf
loope
fld
jp
stos
cdq
mov
int3
repz
ja
cmp
inc
sbb
jge
push
mov
dec
mov
pop
ins
(bad)
and
inc
shl
lods
(bad)
leave
lock
pop
pop
rcr
jecxz
inc
push
jmp
movs
lods
mov
ins
add
js
and
dec
push
mov
cdq
cmp
inc
xchg
pop
add
push
jge
out
cs
popf
test
push
add
xchg
inc
fst
ds
sub
ja
xor
jle
push
mov
inc
add
pop
fwait
jg
jmp
outs
cmp
push
test
fnstsw
mov
mov
stc
cwde
scas
and
in
loopne
ja
xchg
inc
repnz
fld
adc
test
ins
addr16
leave
dec
shl
ja
push
ins
and
inc
shl
(bad)
leave
xchg
ins
xor
scas
mov
js
shl
div
aaa
jne
push
jb
rol
jo
out
push
push
stos
adc
in
dec
aaa
xor
jnp
test
add
jge
and
ja
mov
es
adc
scas
inc
inc
call
mov
(bad)
sub
jno
in
mov
jne
jge
push
out
pop
ffreep
push
push
hlt
pop
xor
or
pop
dec
lds
test
scas
xchg
(bad)
fdivr
jecxz
pop
add
xchg
repz
adc
pusha
xchg
test
dec
mov
push
dec
clc
xchg
shl
jno
push
(bad)
pop
pop
(bad)
push
pop
jno
retf
aad
shl
push
in
fadd
clc
in
push
pop
push
or
fdiv
in
push
mov
inc
mov
into
rcl
pop
out
lahf
and
inc
je
xor
pop
push
aad
jecxz
cmp
or
nop
test
dec
outs
packuswb
neg
mov
nop
outs
xor
(bad)
or
out
mov
sub
pop
jo
dec
idiv
dec
pop
ror
push
js
dec
sub
lds
sbb
push
mov
arpl
popa
inc
mov
mov
mov
popf
adc
pop
xchg
adc
out
xor
jbe
gs
std
jno
xor
sti
scas
cs
das
loop
xor
jecxz
je
ss
push
(bad)
cmp
dec
in
mov
sar
stc
fadd
jmp
js
clc
mov
popa
stos
bound
jmp
inc
sbb
mov
mov
sbb
sub
mov
mov
mov
xor
xor
ret
in
stos
add
dec
sub
mov
js
int3
outs
or
not
cmps
sbb
ficom
mov
jmp
xor
in
sti
xchg
adc
jo
or
cmp
dec
mov
mov
push
in
inc
mov
movs
mov
gs
pop
aad
mov
cmp
iret
repz
jecxz
mov
adc
jg
cmc
(bad)
push
push
hlt
xchg
jns
cs
leave
iret
into
int3
rol
(bad)
test
jmp
jmp
popf
fwait
xchg
xchg
cdq
xchg
xchg
cld
mov
lahf
mov
xchg
fmul
into
rcl
ret
sti
jmp
jecxz
cwde
fwait
call
(bad)
in
(bad)
hlt
xchg
cwde
mov
mov
iret
into
int3
rol
(bad)
test
jmp
jmp
popf
fwait
xchg
xchg
cdq
xchg
xchg
cld
mov
lahf
mov
xchg
fmul
into
rcl
ret
sti
jmp
jecxz
cwde
fwait
call
(bad)
in
(bad)
hlt
xchg
cwde
mov
mov
iret
into
int3
rol
(bad)
test
jmp
jmp
popf
fwait
xchg
xchg
cdq
xchg
xchg
cld
mov
lahf
mov
xchg
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
scas
dec
inc
inc
push
js
mov
sbb
aam
dec
push
pop
pop
test
dec
push
call
cmp
pop
add
adc
int3
outs
inc
jo
dec
movs
loopne
(bad)
rcr
mov
push
and
cmp
(bad)
hlt
jecxz
js
not
neg
outs
lods
cs
fst
dec
and
jecxz
add
leave
mov
imul
imul
int3
sbb
add
add
imul
cli
fistp
or
out
and
sbb
cmp
add
repz
in
or
int
adc
lds
adc
jbe
pushf
cmp
sub
add
adc
lahf
or
pop
ret
mov
adc
out
fwait
sbb
mov
les
push
dec
fisttp
sbb
mov
and
add
pop
cmp
push
jmp
mov
rcl
adc
in
jecxz
stos
cmp
shl
sbb
add
xor
or
std
pop
pop
or
inc
add
dec
add
scas
mov
sbb
je
aas
mov
push
jbe
push
mov
retf
cmp
js
test
retf
clc
loopne
sbb
dec
lods
mov
test
movs
pop
test
add
push
inc
xchg
test
(bad)
cld
(bad)
hlt
inc
mov
ret
cmp
push
dec
sbb
in
scas
fisubr
ds
daa
jl
push
cmc
sar
or
retf
add
not
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
dec
inc
or
add
or
add
add
add
add
push
add
add
ret
dec
add
or
pop
jae
add
les
add
les
xchg
sub
sbb
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
daa
dec
inc
inc
push
js
movs
xchg
fild
inc
adc
mov
addr16
shl
movs
mov
jge
or
loopne
adc
jne
inc
add
mov
push
dec
jo
mov
mov
push
xchg
cmp
cli
test
mov
cld
jle
cli
push
add
adc
lahf
dec
or
sub
aad
fwait
mov
mov
mov
push
push
inc
fs
pop
pop
mov
add
pop
ins
loopne
nop
add
mov
sub
pop
push
call
or
push
or
or
jae
fldcw
add
cmp
cwde
ins
push
call
add
push
pop
or
cmps
xor
pop
aam
add
pop
stc
pop
es
fcomp
cwde
or
pop
mov
sbb
out
test
jo
mov
int
mov
lds
ins
in
test
psrld
imul
jg
jno
ret
mov
xchg
movs
sar
movs
pop
fwait
stos
stc
pop
popa
sub
cmp
mov
(bad)
nop
repz
pop
into
xchg
test
lods
outs
(bad)
enter
loop
or
mov
dec
popw
jno
imul
pusha
inc
gs
aad
sahf
in
push
fimul
mov
mov
pop
jno
popa
add
mov
jmp
les
mov
pop
cwde
xchg
bound
inc
add
inc
in
aad
mov
mov
shl
outs
in
addr16
js
pushf
and
aas
je
sti
daa
fcom
cmp
adc
rcl
jmp
sbb
cmp
xor
test
in
or
sbb
jecxz
popa
addr16
aam
push
mov
jmp
cld
mov
fwait
cwde
inc
dec
adc
and
dec
faddp
lods
out
ja
mov
pop
and
loope
cmp
retf
xor
mov
mov
cmp
daa
loope
jl
(bad)
dec
jecxz
shr
in
mov
(bad)
es
xchg
sti
imul
fsub
xlat
mov
addr16
call
cs
xchg
xor
aaa
retf
ja
mov
mov
dec
lods
push
cwde
mov
dec
out
xor
loope
(bad)
lds
bnd
xchg
call
cmp
sbb
or
mov
cdq
xchg
xor
and
cmp
outs
jl
push
sbb
sbb
sub
pop
or
push
or
mov
clc
pop
or
mov
scas
in
sahf
int3
add
ins
xor
ins
xchg
sbb
push
xor
out
sbb
dec
adc
stos
int3
add
xor
or
pop
add
mov
fcom
jmp
test
sahf
dec
push
mov
loop
popa
aad
push
cmp
aam
test
int3
adc
jb
sahf
push
addr16
lods
cs
xor
or
into
nop
ins
dec
or
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
xchg
dec
inc
inc
push
js
pop
xchg
out
outs
adc
(bad)
lahf
idiv
pop
jnp
mov
fimul
pop
out
dec
xor
mov
pop
inc
mov
or
mov
inc
add
mov
adc
and
mov
mov
fsubrp
jl
push
jns
cmp
daa
pop
repnz
push
in
jge
jbe
pop
push
inc
mov
es
enter
out
cmp
loope
es
or
out
push
jns
cmps
out
cmp
jb
push
xchg
js
push
jnp
call
pop
mov
(bad)
(bad)
ds
mov
icebp
test
sar
cmp
shr
dec
retf
lds
aaa
aaa
or
inc
xor
sbb
ins
adc
call
sub
push
sub
sub
inc
mov
nop
ins
jbe
xchg
or
out
jns
dec
movs
adc
sub
xlat
add
and
fdiv
js
mov
out
xchg
aas
fld
jl
mov
(bad)
fist
xor
pop
pop
mov
das
adc
lahf
fcmovu
sahf
and
cmps
cdq
repz
inc
adc
enter
outs
inc
adc
outs
dec
xchg
mov
mov
dec
pop
mov
les
sbb
repnz
dec
out
fnstsw
cs
xor
mov
out
mov
add
aaa
int3
xor
jbe
lahf
adc
add
(bad)
xchg
bound
lods
stos
jp
jmp
(bad)
daa
stc
cld
(bad)
fild
push
pusha
adc
xor
stos
aad
mov
jnp
cmp
sar
mov
cmp
xor
pop
jmp
xbegin
push
push
scas
pop
lods
push
cs
cmp
add
sbb
stos
aam
ja
sub
rcr
or
scas
and
xchg
aad
xchg
mov
js
mov
popf
fst
stc
aaa
jl
sub
xlat
add
adc
pop
xchg
sbb
stc
fadd
push
out
inc
sbb
jmp
stos
aad
cld
add
std
lds
push
xor
xor
add
mov
mov
xchg
sub
add
in
clc
icebp
movs
push
scas
jg
pushf
sahf
ds
adc
jne
mov
(bad)
ins
and
xor
xor
push
xlat
fldenv
add
push
lds
and
jecxz
xchg
dec
movs
push
out
imul
mov
add
inc
dec
mov
dec
mov
mov
mov
clc
jo
ss
inc
cmps
cmps
mov
ins
sbb
cmp
jecxz
jns
xlat
jmp
pop
(bad)
jecxz
out
in
inc
lahf
out
mov
cmp
jl
jle
pop
mov
sbb
nop
out
cmps
cmps
xor
inc
test
es
sub
cdq
mov
xchg
loope
iret
(bad)
pop
dec
es
mov
adc
pop
sub
mov
inc
imul
push
out
fcmovu
ficom
dec
and
pop
xor
dec
ret
loope
mov
popf
mov
gs
stos
jmp
mov
test
sar
nop
xchg
retf
outs
fild
push
aaa
stos
xchg
xor
into
add
pusha
pusha
nop
fnstenv
xchg
dec
in
scas
dec
mov
mov
mov
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
aad
inc
inc
push
js
lods
xchg
dec
dec
xchg
add
(bad)
jg
mov
mul
outs
mov
mov
and
or
shl
in
and
popf
and
test
dec
data16
btr
jae
mov
pop
jmp
out
lock
lahf
ret
repz
std
add
std
or
jo
mov
cli
mov
(bad)
adc
add
jmp
xor
push
or
dec
js
mov
inc
mov
add
loop
jbe
mov
mov
mov
test
repz
dec
pop
xchg
fxch
out
push
fs
cmc
jl
test
sub
pop
lahf
ja
add
jb
outs
ficomp
cmp
xchg
xchg
inc
cli
out
sub
enter
push
arpl
aas
dec
inc
jecxz
repnz
cmps
in
mov
cmps
call
outs
test
sbb
fsubr
mov
into
push
dec
or
mov
(bad)
mov
xchg
fwait
jge
pop
retf
enter
mov
and
outs
jle
add
jbe
push
cdq
xor
pop
mov
sbb
bound
push
xor
jmp
gs
daa
dec
into
mov
mov
mov
cmp
in
inc
push
xor
jnp
mov
out
cmps
push
sub
jae
xor
nop
pop
inc
push
sub
xor
ret
inc
dec
add
mov
inc
mov
cmp
xor
hlt
cmc
rcl
mov
ss
add
mov
fucomip
cmp
adc
ins
sub
jb
fistp
lahf
ds
dec
mov
sbb
mov
sbb
fs
aaa
pop
and
fmul
sub
hlt
cld
nop
gs
push
sub
mov
dec
dec
adc
add
jne
jno
(bad)
jge
push
or
inc
pop
outs
and
mov
fs
jmp
pop
and
or
(bad)
ror
sub
(bad)
mov
mov
xchg
test
sub
loope
in
iret
mov
in
push
sub
shl
add
cmps
fcmovnu
enter
jmp
push
xchg
ins
push
adc
add
push
out
inc
sub
rol
iret
dec
das
mov
sti
push
cmp
fisub
xchg
and
add
into
das
inc
inc
dec
inc
and
addr16
neg
jp
dec
icebp
jecxz
and
fcmovb
push
push
or
inc
call
(bad)
and
inc
xor
aaa
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
add
xchg
dec
inc
inc
push
js
in
popf
ja
fs
lahf
lahf
out
cmp
in
imul
leave
sub
and
mov
add
inc
and
mov
inc
mov
sbb
ins
(bad)
dec
fs
mov
sub
fs
mov
bound
xchg
xor
adc
xchg
mov
fstp
out
fsubr
jae
push
xor
cwde
add
xchg
sbb
aas
mov
fdivr
jns
out
cmp
sbb
adc
ds
shr
mov
fdivr
in
adc
pop
(bad)
jbe
mov
loope
ja
add
jg
stos
xchg
jp
mov
pop
pop
scas
cmp
test
mov
fdivp
(bad)
(bad)
in
arpl
js
dec
jl
sbb
dec
leave
and
sbb
mov
dec
sub
jbe
jmp
leave
repz
push
lods
dec
fldl2t
leave
pop
mov
or
in
retf
mov
push
pop
(bad)
jmp
push
lods
jge
sub
mov
int
fstp
adc
cmps
adc
arpl
repnz
(bad)
popf
adc
inc
cld
cmp
xchg
mov
jl
pop
test
movs
mov
sub
arpl
mov
div
imul
xchg
mov
mov
dec
mov
xlat
pop
ja
xor
or
dec
add
imul
sahf
fwait
js
mov
cmps
cmp
pop
loop
(bad)
(bad)
int
call
adc
sbb
repnz
std
mov
fcom
push
(bad)
(bad)
fsubr
jmp
fistp
cmp
sub
jge
idiv
adc
jecxz
xor
aas
pop
cwde
cdq
je
or
popf
cdq
repnz
stc
push
mov
sahf
pop
and
push
xor
cmp
xor
xor
pop
xchg
or
push
mov
mov
and
or
dec
cmp
out
cmp
jmp
fadd
not
mov
mov
(bad)
scas
mov
jb
and
(bad)
fs
je
mov
lods
push
ins
lods
xchg
cld
retf
mov
hlt
jg
xchg
add
cmp
mov
pushf
mov
dec
cmps
pushf
cmp
sub
cmp
js
push
repz
and
cmp
or
es
and
cmp
dec
inc
sbb
mov
push
fild
jmp
sub
js
pop
lds
mov
adc
sub
aaa
adc
pop
sbb
inc
sub
rol
sahf
(bad)
jmp
je
xchg
ins
sahf
pusha
imul
arpl
push
cmp
mov
and
xor
repz
mov
les
arpl
(bad)
xor
retf
xor
pop
jbe
fisttp
pop
and
cmp
sbb
sti
sti
jno
in
in
or
pusha
ret
ror
push
pop
pop
gs
stos
ds
js
jecxz
xchg
arpl
and
pop
movs
enter
aad
mov
hlt
add
push
nop
sbb
gs
push
and
test
sbb
dec
xchg
pop
cld
fsub
test
bnd
stos
mov
test
pop
sbb
xor
into
pop
cmp
aad
or
out
mov
sub
push
es
jge
cmp
pop
sub
bound
add
push
pusha
cld
push
add
push
push
in
dec
xchg
loop
sbb
call
repz
inc
pop
icebp
movs
clc
jbe
ja
cmp
xlat
xor
sbb
ret
inc
dec
jo
or
dec
mov
mov
sbb
loop
cli
ret
movs
mov
mov
fwait
adc
push
lock
stos
lock
out
pop
pop
pop
fbstp
fdivr
sbb
jmp
ja
sbb
jnp
je
fiadd
and
and
or
adc
bound
ins
mov
mov
jl
push
jno
gs
mov
dec
sbb
inc
pushf
popa
and
jmp
(bad)
push
pop
jg
jmp
mov
jl
ret
push
aas
ins
mov
loop
dec
hlt
mov
cmps
imul
mov
push
loopne
fdivr
sbb
ret
iret
js
add
nop
inc
sub
and
add
xor
add
add
push
sti
mov
push
dec
xchg
je
cmc
jp
sbb
test
repnz
pop
xchg
cli
add
jge
call
dec
cmps
dec
jecxz
mov
dec
lods
mov
push
mov
mov
js
retf
js
loope
mov
cmps
ror
in
or
push
stos
inc
mov
add
inc
sub
xor
jnp
stos
sub
loopne
xchg
sar
mov
fild
test
xor
cmp
daa
mov
sbb
mov
test
out
mov
xor
adc
or
call
jecxz
stos
inc
nop
adc
rcl
rol
inc
mov
or
and
inc
or
enter
mov
inc
aas
stos
dec
(bad)
xchg
mov
push
sub
fcom
pusha
lahf
mov
in
scas
sbb
pop
pop
xor
imul
das
repz
push
aas
inc
ins
daa
fmul
pushf
and
retf
jecxz
mov
jns
mov
cmps
call
xor
jmp
pop
mov
in
mov
std
rcr
in
(bad)
out
mov
sar
stos
aad
jecxz
adc
iret
iret
push
sub
mov
mov
inc
mov
xor
xor
imul
addr16
ror
or
adc
jns
add
push
jmp
jbe
or
mov
cli
(bad)
mov
fadd
jnp
add
mov
jle
and
mov
jo
inc
call
(bad)
div
adc
jp
aad
in
sub
(bad)
sbb
pop
mov
sub
retf
rol
retf
inc
dec
dec
sbb
ss
repnz
cmps
mov
imul
add
cli
pop
jl
shr
cmc
imul
fidivr
or
sahf
sahf
mov
gs
int
cmp
es
push
call
mov
popa
not
add
fstp
push
cmp
jno
mov
int3
test
pusha
mov
stos
fist
inc
cmp
rol
mov
into
cmp
xchg
adc
shl
in
pop
xor
iret
push
cmp
scas
fs
add
ins
test
sub
mov
sbb
mov
fs
loope
and
pusha
movs
lds
ret
bound
(bad)
xor
lods
cmp
in
or
int3
adc
outs
sbb
enter
jmp
inc
jg
ror
jns
xor
outs
loope
sbb
imul
mov
ret
xor
xor
loopne
cmp
mov
xor
arpl
mov
out
inc
and
mov
sbb
push
call
sub
pop
dec
sbb
and
ror
scas
loope
jb
frstor
ins
loope
movs
out
mov
and
cmp
cwde
pusha
rcl
bound
daa
mov
imul
fwait
adc
rol
(bad)
sbb
sbb
xor
xchg
xchg
sub
div
jne
arpl
push
shr
es
xchg
and
add
jae
jne
mov
sahf
jecxz
rcl
addr16
sahf
in
aad
hlt
jp
lods
mov
popa
dec
sbb
xor
push
fbstp
sbb
pop
ret
dec
add
mov
imul
pusha
sbb
ret
(bad)
mov
push
adc
mov
adc
popa
loop
push
add
std
inc
jp
sub
add
in
push
inc
mov
mov
movs
imul
movs
sub
lahf
lods
inc
retf
ror
cdq
cmps
fdiv
and
and
repz
arpl
es
push
jecxz
push
xlat
and
sbb
sbb
fisub
sbb
push
mov
pop
jle
sbb
loop
out
pop
in
idiv
jnp
cmc
hlt
int
or
dec
mov
jae
jecxz
iret
aas
(bad)
rol
xor
xor
xlat
inc
or
add
sub
shr
and
and
ds
sbb
jo
push
pop
pushf
sbb
mov
mov
sub
xchg
push
inc
mov
imul
cmp
cs
xor
dec
adc
push
retf
jb
sbb
xlat
test
shr
jge
mov
jecxz
mov
push
popf
mov
xchg
adc
sub
jne
imul
stos
int3
jo
ins
inc
xor
lods
xor
xchg
aam
ins
jo
(bad)
pop
loope
ins
pop
lods
scas
dec
out
pop
inc
in
jno
cmc
out
fist
cmp
xor
mov
call
and
(bad)
cwde
pop
jp
or
or
add
clc
push
test
loope
cmp
inc
xchg
ror
mov
push
ss
and
add
add
in
aad
pop
mov
iret
xchg
inc
sub
sbb
retf
inc
daa
scas
mov
mov
and
xchg
js
js
test
mov
jno
sub
retf
pop
push
and
inc
xchg
or
mov
sub
mov
push
push
xchg
sbb
push
adc
xor
adc
sbb
and
call
or
dec
hlt
mov
out
jo
xchg
push
fwait
jge
lahf
pop
jl
retf
inc
inc
cmc
xor
retf
jbe
xor
sti
sbb
test
sti
dec
dec
push
or
xchg
mov
nop
pusha
adc
jl
add
cmc
lea
retf
inc
loop
sub
and
xchg
mov
inc
and
ds
inc
lods
icebp
pop
dec
aaa
int
(bad)
jbe
xor
push
inc
mov
pop
repnz
mov
not
cli
add
loopne
pop
dec
mov
and
mov
test
cli
clc
scas
les
xor
call
or
pusha
xor
in
and
ins
shr
ror
mov
(bad)
das
jb
rol
mov
mov
aas
pop
fstp
pop
jbe
xchg
mov
adc
xchg
ret
jno
es
jge
cmp
push
pop
pop
test
adc
or
in
push
test
mov
cli
sti
xor
ret
cmp
add
aas
pop
or
or
dec
inc
and
add
imul
retf
(bad)
fs
rcl
fwait
push
retf
sti
push
shl
dec
pop
mov
fwait
cwde
push
or
ds
es
push
cmp
push
out
(bad)
imul
rcl
mov
jns
cdq
push
gs
out
jmp
ror
pop
dec
hlt
mov
mov
lds
sbb
mov
lods
ja
repz
dec
mov
sub
leave
mov
arpl
lods
mov
adc
retf
sbb
mov
gs
shl
jl
add
adc
ja
xor
leave
and
loop
call
int3
push
sti
dec
imul
and
sbb
inc
movs
rol
ja
cvtpi2ps
mov
mov
nop
jmp
xchg
jmp
xchg
xor
mov
in
jno
jecxz
pop
mov
mov
test
imul
or
mov
movs
call
(bad)
(bad)
rcl
pop
xchg
shl
xor
sub
and
rol
adc
lods
into
inc
iret
xchg
sub
mov
sub
cmps
xor
jl
mov
push
adc
loopne
and
sub
adc
scas
daa
mov
sbb
dec
or
sub
int3
test
retf
dec
cmp
adc
sbb
adc
xor
inc
sub
inc
add
enter
bound
retf
pop
(bad)
xor
jl
in
xor
or
xchg
xlat
fsubr
hlt
cwde
fidivr
(bad)
fdivrp
outs
adc
test
ror
inc
xchg
mov
test
mov
cmps
push
adc
dec
sub
movs
sbb
or
ins
cmps
adc
jno
pop
mov
push
adc
out
test
sbb
pop
add
cmc
cmps
les
mov
mov
stos
stc
hlt
mov
adc
fwait
adc
or
bound
ins
and
mov
and
add
mov
lods
mov
mov
outs
mov
sbb
adc
cmp
data16
std
shl
xchg
call
jmp
mov
cmp
repnz
test
pop
add
je
cmp
fwait
sub
not
inc
pushf
fwait
jmp
inc
push
mov
push
lea
and
ss
inc
xchg
inc
call
and
xchg
loopne
ds
pop
les
inc
cmp
(bad)
mov
sbb
scas
inc
dec
daa
jg
test
and
loopne
sub
(bad)
add
shr
es
xlat
retf
mov
and
add
push
test
shr
ins
xor
mov
movs
push
les
xchg
pusha
mov
dec
push
sub
adc
sbb
into
or
pusha
inc
mov
or
push
shl
in
(bad)
xchg
cwde
cdq
sahf
loopne
fst
mov
pushf
sub
cmp
xchg
dec
loope
dec
test
mov
out
fwait
inc
dec
or
dec
sub
rol
ins
xchg
retf
sahf
inc
shr
lods
xor
(bad)
shl
div
add
cmp
ret
lods
loopne
adc
(bad)
ins
xchg
(bad)
out
or
and
pop
dec
adc
pop
mov
inc
loopne
mov
xchg
sbb
add
call
adc
daa
push
jns
cmp
inc
(bad)
jne
mov
mov
push
jo
sbb
jecxz
and
jp
xchg
ret
push
(bad)
retf
mov
jecxz
push
sbb
adc
jnp
adc
pop
or
mov
mov
scas
mov
add
js
sub
or
aad
int3
inc
mov
aaa
std
mov
test
push
daa
enter
hlt
ins
xchg
adc
push
dec
imul
sbb
shr
sbb
sub
push
xchg
xchg
lea
loop
mov
push
nop
cs
add
jmp
arpl
jecxz
ja
jns
inc
into
leave
inc
idiv
mov
push
lock
xchg
and
adc
xor
jecxz
jge
daa
and
das
sbb
stos
fstp
scas
ret
cdq
in
pop
ss
xchg
test
mov
cmp
into
outs
mov
jno
popf
push
add
sbb
xor
dec
sub
js
and
std
and
mov
xchg
not
loope
mov
fidiv
pusha
add
add
shl
lods
xor
(bad)
test
in
test
lods
add
pop
test
adc
sbb
adc
inc
dec
mov
mov
rcr
mov
loopne
fbld
mov
push
mov
adc
sbb
sbb
xchg
cdq
push
add
adc
in
xchg
push
pop
cmps
adc
jmp
outs
aam
or
mov
xchg
mov
mov
inc
dec
test
pop
push
retf
inc
(bad)
bound
dec
faddp
sti
push
xor
popa
lods
ret
mov
add
rol
pop
and
sti
nop
mov
mov
retf
push
retf
and
or
xor
movs
aad
loope
push
neg
mov
cmc
bound
sub
adc
or
and
rcr
inc
mov
jnp
mov
pop
out
cmp
mov
cmp
push
jmp
cwde
adc
sbb
clc
mov
shl
ds
adc
stos
mov
mov
dec
inc
mov
sbb
inc
jl
test
gs
mov
call
xchg
add
push
es
fild
repnz
ret
dec
cmp
sub
sbb
add
movs
jne
and
mov
push
jecxz
into
and
nop
cli
call
xor
push
push
push
push
mov
jmp
and
mov
mov
pop
add
shl
and
jne
jne
aaa
mov
sbb
mov
mov
pop
fwait
mov
sbb
adc
cld
push
fwait
sub
push
or
lods
(bad)
sub
test
sub
and
data16
dec
mov
cmp
jecxz
jae
fstp
sbb
mov
inc
imul
or
push
jle
dec
pop
shr
popa
lock
or
pop
movs
loop
imul
sub
sbb
(bad)
fsub
bound
jb
stc
retf
cwde
icebp
adc
cmp
(bad)
or
mov
add
out
ret
xchg
repz
pop
xchg
push
push
shl
xor
mov
lods
xchg
mov
out
call
mov
mov
push
pop
xchg
push
add
mov
and
xor
pop
into
dec
arpl
lods
mov
test
jl
xchg
and
push
dec
xor
ret
sbb
and
jge
bound
ret
xor
adc
dec
popa
adc
or
fcomp
or
add
test
pop
test
aas
call
arpl
and
ja
test
add
(bad)
dec
xchg
test
mov
adc
test
or
adc
push
cmp
fnstenv
and
mov
in
inc
jns
stos
ins
outs
cmp
js
ins
ret
push
sbb
xor
int
cmp
jge
jo
test
and
dec
aam
adc
cmps
mov
push
shl
xor
fdiv
rcr
test
rcl
lds
dec
ds
gs
ss
(bad)
cmps
test
(bad)
nop
rol
(bad)
and
cmps
sub
pop
pusha
cmp
jns
out
fcmovu
ret
cmp
in
mov
xor
mov
and
test
jl
xchg
jp
imul
jge
add
inc
nop
movs
xor
or
enter
xor
mov
add
xchg
dec
sbb
jle
bound
add
fistp
scas
lea
fwait
popf
jae
out
test
and
and
xlat
pop
in
fwait
cmc
cmp
ret
adc
push
popa
mov
iret
pop
adc
ins
ss
and
and
sbb
loope
adc
adc
pop
xchg
pusha
mov
xchg
bound
nop
inc
jmp
and
jge
pop
dec
mov
inc
dec
shr
xchg
iret
movs
add
gs
or
jae
pushf
xchg
inc
or
pop
fisubr
adc
xor
es
sbb
add
test
cmp
adc
pop
sub
adc
and
cmps
pop
sub
fdiv
(bad)
mov
addr16
cmp
and
out
jno
popf
ja
and
rcl
inc
pop
cld
fdiv
mov
lds
mov
mov
(bad)
out
lods
push
(bad)
out
lock
push
and
cmp
shl
jecxz
push
out
mov
xchg
sbb
iret
int3
mov
xchg
lods
ins
xchg
hlt
js
sbb
outs
xchg
inc
leave
mov
(bad)
idiv
mov
jo
mov
cmp
push
jge
test
movs
and
ror
cmp
das
stos
mov
jne
or
jno
cmp
xlat
cmc
cwde
cwde
pushf
in
das
sub
dec
jo
xor
inc
dec
jp
inc
dec
adc
arpl
mov
cmp
jno
adc
repnz
shl
inc
adc
sbb
fmul
dec
popa
les
pop
imul
push
inc
adc
push
dec
and
cli
and
xchg
dec
cmp
enter
xor
cmp
lods
mov
out
xchg
mov
fwait
jg
sub
(bad)
aas
mov
pusha
icebp
das
pop
jle
cld
and
fdiv
pop
stc
retf
fidiv
retf
jae
pop
iret
jne
(bad)
mov
xchg
cmc
int
xlat
xor
mov
repz
ffreep
call
mov
aad
inc
jbe
and
cmp
sbb
sbb
jmp
mov
outs
lods
loopne
ins
ret
fdiv
sbb
and
inc
sub
jo
retf
xchg
das
mov
xor
push
pop
scas
sub
mov
iret
fild
add
add
pop
inc
and
retf
mov
push
dec
mov
jle
imul
mov
mov
xchg
push
sbb
int3
int3
jb
int3
sbb
push
cs
mov
mov
mov
cld
fisubr
inc
pop
jle
mov
into
nop
xlat
mov
movs
rcr
pop
jne
jge
aas
clc
mov
idiv
int
mov
in
cmp
sbb
add
sub
dec
dec
dec
push
lods
push
imul
push
mov
push
sbb
int3
dec
imul
mov
inc
add
mov
out
jnp
jnp
mov
mov
push
std
xor
pop
ret
imul
inc
mov
sub
dec
out
arpl
(bad)
scas
cs
outs
adc
mov
add
shr
cmp
shl
mov
mov
fs
call
jge
fisttp
mov
dec
ret
jne
lahf
cld
cli
xlat
(bad)
cmp
shl
in
push
scas
(bad)
scas
mov
mov
hlt
pusha
test
jo
cmc
scas
jg
ja
retf
gs
(bad)
retf
cmp
call
out
push
inc
fdivrp
(bad)
aaa
(bad)
cli
std
dec
mov
stc
add
push
(bad)
(bad)
pop
in
sahf
(bad)
(bad)
std
sti
jmp
cmps
fucomp
rcr
imul
pushf
jle
jns
movs
jb
cmp
mov
daa
or
ficomp
push
cmps
fnstsw
inc
dec
scas
pop
pop
dec
stos
mov
push
rol
pusha
xchg
mov
lock
(bad)
mov
out
push
sub
or
mov
sub
mov
push
les
ja
jbe
inc
jne
pushf
cli
(bad)
test
(bad)
fadd
or
or
sbb
daa
mov
jbe
ins
das
xchg
inc
movs
sbb
jmp
cld
mov
(bad)
pop
clc
lods
loope
add
shl
mov
imul
int3
mov
aad
mov
jp
aaa
push
pop
jp
sub
adc
cmps
jo
sbb
adc
jae
(bad)
cld
lock
retf
daa
dec
pushf
cmp
xchg
adc
jne
sub
pop
inc
push
jle
scas
xlat
retf
pop
and
push
mov
lea
adc
(bad)
xchg
shr
mov
and
ds
out
cmp
dec
sbb
lods
mov
sbb
clc
or
sub
addr16
iret
xchg
sbb
mov
push
iret
cmp
adc
cmp
cmps
and
inc
fcmovnb
out
jp
popf
cmp
pop
mov
test
jmp
out
push
stos
adc
xor
rcl
lahf
stc
(bad)
sti
jle
jecxz
pop
das
add
mov
mov
jo
int3
cdq
mov
in
sti
pop
(bad)
push
push
fisttp
out
fidivr
add
cmp
push
bound
aas
ds
call
pop
lods
push
jle
lods
leave
push
add
jb
sbb
fistp
cld
or
sbb
mov
pop
xor
in
aas
enter
pop
inc
sub
fidivr
lock
pop
cmps
(bad)
(bad)
lock
mov
das
adc
fstp
int
or
jb
loopne
mov
cmp
xor
or
dec
loop
test
and
mov
stc
call
lods
sbb
jge
jne
sbb
jge
push
sub
out
shld
push
inc
pusha
mov
stos
(bad)
cmp
pop
xchg
retf
aas
adc
fisub
dec
inc
mov
mov
out
pop
pop
pop
aas
aas
nop
mov
sbb
add
retf
xchg
inc
cdq
ja
push
mov
xchg
dec
dec
mov
mov
sub
call
scas
dec
mov
cmps
aad
inc
addr16
push
cwde
dec
xchg
es
add
lock
pop
das
xor
imul
call
cld
ret
lahf
mov
dec
mov
bound
in
repnz
and
mov
pop
out
loop
mov
xor
repz
ret
in
pop
xchg
xchg
into
pop
pop
je
cld
cli
shl
mov
call
xor
test
stos
loop
sar
stos
inc
aam
shr
cmps
xlat
outs
mov
push
pop
sub
ds
stos
arpl
inc
sub
mov
mov
shl
daa
dec
lock
mov
clc
clc
xchg
dec
lahf
jns
(bad)
mov
dec
add
js
xchg
push
repnz
mov
mov
repz
or
gs
and
iret
jae
pop
inc
out
mul
int3
int3
int3
in
mov
sbb
retf
cmp
in
lds
fild
mov
xor
sub
std
js
jno
sti
ret
stc
push
cmp
clc
xchg
retf
jecxz
jle
iret
jne
(bad)
shr
mov
(bad)
lds
pop
mov
imul
imul
(bad)
das
test
imul
jg
or
jmp
sti
fdivp
pop
fwait
out
mov
mov
rol
dec
sbb
pop
mov
jg
push
aas
hlt
mov
(bad)
pop
(bad)
stc
inc
push
mov
ret
pop
retf
nop
jmp
mul
imul
fistp
mov
xchg
repz
ja
adc
mov
das
jecxz
sti
fxch
ds
in
mov
or
and
sbb
shld
mov
out
mov
mov
mov
cmp
push
mov
push
sbb
outs
push
jnp
sub
push
jl
push
movs
mov
push
mov
push
out
mov
sbb
mov
lahf
jl
test
or
(bad)
lock
pop
frstor
ret
sbb
jmp
cld
out
(bad)
imul
neg
dec
add
hlt
mov
pop
pop
cmp
push
jmp
pop
xchg
in
(bad)
lea
shr
jbe
movq
ret
out
jns
fldenv
repz
rol
sar
(bad)
xor
jge
or
(bad)
mov
outs
jg
sbb
rcl
dec
mov
(bad)
call
jl
ins
xor
adc
adc
dec
sub
mov
cmps
xor
adc
repnz
jnp
jmp
and
cmp
jnp
repz
pop
mov
aam
aam
setbe
daa
ret
xor
mov
inc
in
cmc
jp
jmp
scas
or
(bad)
cld
mov
mov
jmp
cld
dec
and
mov
fistp
dec
les
jnp
int
ins
ss
xchg
jb
dec
mov
mov
out
sub
es
xor
outs
test
ret
mov
imul
cli
stos
iret
pop
out
std
iret
shl
movs
adc
out
jmp
test
add
retf
daa
aas
stc
leave
neg
jcxz
mov
pop
je
call
adc
rcr
sbb
dec
xchg
in
mov
in
fidivr
outs
(bad)
loope
add
inc
push
movs
pop
or
es
(bad)
or
mov
stos
xchg
push
sbb
pop
cmp
call
fdivr
enter
out
out
add
inc
push
arpl
add
add
dec
inc
scas
inc
pusha
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
jo
inc
inc
push
js
xchg
xchg
int
push
popa
adc
lahf
idiv
jmp
push
or
std
add
fisttp
aad
inc
inc
mov
lea
inc
nop
nop
push
fwait
mov
loope
inc
and
cdq
or
in
cmp
fdivr
out
cmp
mov
mov
cmp
cmp
jae
sbb
dec
push
les
out
jbe
sbb
or
stos
stos
inc
cmp
sub
inc
push
add
inc
lods
fiadd
pushf
cmp
imul
and
in
rol
pop
inc
inc
sbb
mov
cli
mov
push
fst
cwde
ret
fdivr
mov
add
mov
sub
mov
inc
mov
in
mov
mov
and
xor
rol
out
outs
pop
jns
(bad)
dec
jo
sbb
ror
bound
mov
add
adc
in
pop
adc
xor
dec
fstp
jbe
(bad)
jbe
or
(bad)
data16
mov
in
adc
inc
repz
inc
push
adc
sub
cmc
test
push
lods
fldenv
mov
pop
mov
out
cmp
gs
and
ins
or
or
sbb
or
mov
imul
add
hlt
jnp
jge
(bad)
mov
imul
inc
jnp
in
shl
stos
stc
scas
out
and
scas
fincstp
mov
je
lds
fsubr
cmps
pop
cmp
add
and
loope
dec
leave
or
popf
xor
jmp
add
cmps
sar
cmc
int
hlt
mov
inc
in
mov
repnz
out
mov
lods
add
scas
cwde
jbe
and
stos
mov
(bad)
mov
add
or
push
and
jmp
into
dec
sub
xor
mov
iret
stc
rcr
mov
mov
fimul
into
pop
nop
test
dec
imul
push
sbb
in
sub
mov
cld
pop
fsubr
ds
mov
push
fcmovnbe
sbb
add
push
xor
jb
cmp
dec
mov
shl
mov
sbb
sbb
stos
inc
sub
movs
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
call
js
pushf
xchg
xor
push
adc
jg
mov
xlat
cwde
not
xchg
push
cmp
cmp
jne
outs
inc
mov
aas
inc
mov
and
jle
push
sbb
sbb
mov
xchg
cwde
mov
imul
pop
hlt
emms
mov
pop
xchg
dec
push
cmps
sbb
imul
sar
scas
outs
iret
repz
imul
sub
clc
lea
in
dec
xor
loope
int
xchg
jo
adc
xchg
fcmovb
add
xor
jmp
inc
mov
pop
mov
hlt
cs
inc
or
mov
mov
add
imul
movs
sub
iret
daa
xchg
jnp
jl
sbb
loop
dec
mov
and
(bad)
push
xor
mov
cmp
ror
data16
arpl
fwait
push
add
xor
inc
loop
and
or
sbb
arpl
mov
ins
adc
pop
sub
dec
test
cli
pop
iret
dec
cmps
pop
sbb
pop
sbb
sbb
dec
jmp
push
sub
sub
test
jno
icebp
loopne
hlt
shl
iret
jp
aaa
or
je
daa
sub
mov
xchg
arpl
sbb
(bad)
pop
push
adc
jle
loope
clc
jle
das
sti
sub
ror
push
retf
stc
inc
xor
push
lods
lds
add
leave
mov
or
jns
call
pop
test
sbb
pop
adc
or
push
jge
adc
xchg
gs
sbb
push
mov
pusha
jns
xchg
(bad)
push
jle
jecxz
in
jo
and
(bad)
xchg
mov
push
add
popa
scas
xchg
jecxz
(bad)
xchg
gs
cmp
cmp
cs
movs
push
(bad)
cli
pop
cli
xor
xor
fwait
pusha
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
or
or
add
or
add
add
add
add
or
add
add
jp
add
add
pop
test
xchg
pop
push
dec
adc
aas
pop
inc
and
inc
add
or
and
sub
and
xchg
push
and
push
inc
(bad)
or
xchg
add
xor
add
xchg
and
test
nop
mov
pop
xchg
and
push
out
jae
into
sbb
lahf
retf
xor
push
jbe
imul
xchg
inc
scas
pop
dec
mov
(bad)
sbb
loopne
adc
adc
loopne
or
dec
xchg
daa
sbb
add
jmp
inc
pop
pop
xor
ficom
add
pop
test
adc
dec
and
mov
sub
(bad)
jb
and
test
cmc
ficomp
pop
pusha
cld
sbb
push
mov
add
sub
dec
in
jae
arpl
sbb
test
in
fimul
push
movs
dec
jecxz
or
(bad)
(bad)
rcr
cs
mov
add
repz
std
jno
int
mov
sar
ss
jns
mov
mov
loop
aaa
and
sbb
addr16
mov
mov
xor
jge
mov
add
jge
jmp
mov
mov
push
scas
scas
xor
int
add
jbe
retf
cmp
add
sub
mov
sbb
call
mov
shrd
pop
push
movs
push
sub
movs
dec
push
lods
xchg
jmp
int
scas
inc
and
ins
call
jmp
cmp
imul
pop
mov
std
inc
sub
add
pop
ret
fwait
out
xor
and
sub
mov
sub
call
xchg
xor
dec
cdq
rsqrtps
add
push
into
cmp
iret
jp
dec
and
retf
jle
hlt
test
pop
xor
ins
lods
ss
cmp
in
xchg
xor
retf
sub
lds
jmp
xlat
mov
dec
aad
in
pop
scas
cmp
test
jge
outs
push
push
push
pop
inc
inc
loope
jle
imul
retf
mov
imul
cmps
out
push
mov
aad
xchg
push
push
retf
pop
ret
scas
pop
or
push
inc
xchg
sbb
ret
nop
dec
sbb
std
stc
dec
mov
push
mov
lods
xchg
popf
xchg
sub
lahf
lahf
xchg
jmp
pop
cmp
cmp
jg
scas
push
add
rcr
add
popf
(bad)
(bad)
repnz
into
pop
div
pop
add
and
add
int3
jle
sbb
adc
mov
inc
cmp
xor
add
push
dec
and
dec
inc
dec
inc
scas
inc
pusha
sub
add
add
add
add
and
add
add
call
add
add
and
add
add
add
add
add
and
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
ja
ja
ja
ja
ja
ja
add
mov
mov
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
clc
clc
mov
clc
clc
(bad)
dec
add
jbe
xchg
clc
mov
add
ja
enter
(bad)
(bad)
(bad)
(bad)
clc
clc
test
ja
enter
mov
jg
enter
xchg
(bad)
(bad)
(bad)
clc
clc
test
ja
call
(bad)
(bad)
push
add
mov
clc
mov
add
js
mov
(bad)
(bad)
clc
push
add
mov
clc
mov
add
mov
(bad)
(bad)
(bad)
push
jg
add
js
js
call
(bad)
imul
test
call
(bad)
(bad)
(bad)
(bad)
jg
add
mov
mov
enter
mov
jg
mov
(bad)
(bad)
(bad)
(bad)
clc
out
test
call
mov
add
clc
vpmacssdd
(bad)
test
mov
mov
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
dec
(bad)
clc
test
mov
mov
jg
(bad)
clc
clc
vpmacssdql
ja
ja
ja
ja
ja
ja
js
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
inc
add
ja
add
jns
add
push
add
jge
add
test
mov
mov
mov
test
mov
ret
add
xchg
pop
add
mov
ret
add
mov
mov
lds
arpl
lds
arpl
retf
xchg
data16
cwde
gs
fwait
gs
xchg
imul
leave
xchg
push
add
cdq
ins
add
popf
outs
add
sahf
imul
(bad)
movs
push
aad
ins
add
scas
outs
add
mov
jne
fldcw
jno
fldcw
js
fnsave
jbe
fbstp
jns
in
mov
jo
loopne
je
in
jae
loopne
jp
in
js
in
jg
in
ret
hlt
sar
mov
add
mov
add
mov
mov
lods
add
mov
add
in
mov
jmp
add
ror
lock
mov
not
add
ret
out
xchg
add
les
add
leave
xchg
add
(bad)
cdq
add
leave
cdq
add
into
cwde
add
iret
popf
add
rcr
repnz
sahf
add
into
mov
add
aad
add
aam
add
(bad)
movs
add
fsub
add
fsubr
add
fsubr
add
fidiv
add
(bad)
add
in
add
loope
add
out
add
rol
retf
leave
mov
int3
retf
int
retf
xlat
rol
out
fadd
clc
out
add
jmp
iret
add
out
add
in
in
add
jmp
add
repnz
add
out
lock
lock
add
icebp
icebp
add
repz
add
hlt
repnz
repz
add
hlt
hlt
add
cmc
test
div
add
stc
test
idiv
add
idiv
add
clc
clc
add
cli
std
add
cld
inc
clc
clc
stc
add
cld
sti
add
sti
cld
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
outs
cmp
cmp
cmp
cmp
cmp
cmp
add
inc
test
inc
test
test
test
cmp
test
mov
test
xchg
xchg
cmp
test
js
jns
jns
js
xchg
jl
jns
jns
test
test
or
or
or
add
add
add
jo
jo
jo
xchg
jns
cmp
test
push
push
pi2fd
or
or
js
mov
mov
cmp
test
pop
pop
pop
pop
pop
pop
or
js
jo
jo
jo
xchg
cmp
test
and
sbb
sbb
or
mov
xchg
test
test
and
and
and
and
sbb
js
mov
mov
cmp
test
and
and
and
and
and
sbb
jo
jo
jo
test
cmp
test
sub
sub
sub
sub
sub
and
mov
test
add
sub
sub
sub
sub
sub
js
jo
jo
jo
test
cmp
test
cs
cs
das
cs
mov
mov
cmp
test
cs
xor
xor
xor
sub
jo
jo
jo
mov
add
cmp
inc
cmp
cmp
cmp
cmp
ss
mov
test
cmp
test
pop
pop
push
dec
inc
inc
inc
cmp
js
jo
jo
jo
mov
cmp
test
imul
push
dec
js
mov
mov
cmp
test
ins
imul
pop
dec
js
jo
jo
jo
mov
cmp
test
ins
ins
push
pop
dec
js
mov
mov
cmp
test
push
push
push
push
push
dec
dec
dec
dec
dec
test
jo
mov
add
inc
test
test
test
test
test
add
test
mov
mov
test
test
inc
outs
jo
outs
outs
jo
outs
outs
jo
jo
outs
outs
jo
jo
jo
jo
outs
outs
jo
outs
cmp
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
add
add
cmp
cmp
cmp
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
jle
mov
dec
test
dec
test
dec
test
dec
test
dec
mov
dec
xchg
dec
test
dec
test
dec
jne
xchg
add
add
add
add
mov
(bad)
mov
lods
mov
(bad)
mov
stc
idiv
mov
lods
mov
(bad)
mov
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
out
(bad)
cld
cld
cld
(bad)
stc
std
(bad)
push
clc
cli
(bad)
cli
(bad)
(bad)
push
cld
(bad)
push
stc
cld
push
stc
sti
(bad)
clc
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cli
(bad)
(bad)
(bad)
stc
(bad)
(bad)
push
sti
(bad)
push
div
push
idiv
push
idiv
push
div
push
cmc
hlt
push
repz
repnz
icebp
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
sti
stc
idiv
mov
add
add
div
icebp
(bad)
sti
stc
idiv
cli
sti
cld
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
push
repz
push
idiv
push
clc
stc
push
idiv
push
div
push
hlt
hlt
push
repz
lock
in
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
clc
div
(bad)
sti
stc
idiv
mov
inc
(bad)
mov
jl
(bad)
mov
jnp
push
jns
push
js
push
jbe
push
out
hlt
cmc
idiv
retf
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
hlt
cmc
push
repnz
out
out
out
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
mov
mov
ror
(bad)
mov
mov
mov
xchg
xchg
mov
test
mov
out
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
cmc
cmc
(bad)
out
lock
(bad)
in
in
in
(bad)
in
out
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ror
ret
mov
ret
(bad)
inc
(bad)
fs
mov
mov
ret
lea
ret
mov
ret
inc
mov
rol
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
idiv
push
div
push
icebp
icebp
(bad)
out
out
out
(bad)
out
out
lock
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ret
lea
(bad)
xchg
imul
(bad)
xchg
imul
(bad)
xchg
push
inc
xchg
inc
xchg
gs
xchg
fs
xchg
arpl
les
out
hlt
div
push
div
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
div
push
repnz
lock
out
lock
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
lds
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cwde
imul
cwde
imul
cwde
push
leave
cwde
imul
(bad)
xchg
pop
jmp
out
push
idiv
push
idiv
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
leave
xchg
arpl
int
outs
dec
sahf
outs
dec
sahf
outs
dec
lahf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
ins
dec
popf
ins
dec
cwde
gs
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
into
fwait
gs
mov
jb
shl
jae
shl
jb
shl
jb
shl
jno
rcr
out
hlt
cmc
stc
(bad)
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
shl
jne
aad
jne
aad
jne
aad
jne
aad
jne
(bad)
test
call
test
call
test
call
test
call
test
call
movs
ins
jmp
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
mov
jle
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
xlat
cmps
imul
fisubr
ja
fldcw
js
fldcw
js
fldcw
ja
fldcw
jo
out
out
hlt
idiv
(bad)
clc
clc
clc
push
div
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
inc
nop
addr16
(bad)
gs
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
fsubr
jbe
fnsave
jns
fnsave
jp
fnsave
jp
fnsave
jp
fnsave
jb
out
out
repz
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
dec
cdq
imul
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
jecxz
mov
call
mov
jp
fbstp
jp
loopne
jp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
je
out
out
hlt
idiv
push
clc
stc
push
idiv
push
clc
clc
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
call
cmps
ins
call
movs
imul
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
hlt
(bad)
sti
stc
idiv
out
xchg
push
(bad)
(bad)
in
iret
mov
jmp
ret
mov
in
cmp
mov
cmp
mov
jg
in
js
out
out
cmc
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
(bad)
outs
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
std
(bad)
sti
stc
idiv
jmp
loopne
push
(bad)
push
fsubr
(bad)
out
shl
(bad)
in
int
(bad)
jmp
xchg
(bad)
jmp
jmp
out
push
idiv
push
clc
stc
push
clc
clc
push
clc
stc
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
jmp
mov
jo
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
jmp
push
loop
push
fbstp
push
fldcw
push
(bad)
movs
push
aam
(bad)
out
rcr
in
retf
out
out
hlt
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
in
ret
in
mov
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
in
into
mov
(bad)
cli
jmp
mov
push
fbstp
push
fld
push
(bad)
sahf
push
rcr
jmp
out
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
rol
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
sti
(bad)
sti
stc
idiv
loop
mov
out
cdq
jmp
lds
jmp
les
in
xchg
jmp
ret
xchg
jmp
ret
in
(bad)
jmp
ror
cli
sti
cld
(bad)
cli
sti
cld
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
sti
in
(bad)
sti
in
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
repz
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
clc
stc
push
clc
stc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
stc
cli
(bad)
sti
stc
idiv
mov
add
add
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
retf
int
retf
int3
retf
int3
retf
retf
leave
dec
retf
int3
retf
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
add
and
add
or
(bad)
(bad)
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
mov
push
add
add
xchg
mov
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
add
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
xor
add
xor
add
and
add
xor
add
add
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
and
